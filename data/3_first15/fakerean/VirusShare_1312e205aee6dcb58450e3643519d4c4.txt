push
mov
push
push
mov
xor
sub
mov
and
cmp
mov
jne
sub
jmp
xor
roll
inc
mov
inc
cmp
jb
xor
pop
inc
pop
pop
ret
push
mov
sub
push
push
push
push
call
mov
push
call
mov
push
pushl
call
mov
push
push
push
push
push
push
call
cmp
jne
movl
jmp
jmp
andl
cmpl
je
mov
mov
movl
jmp
mov
xor
push
pop
div
push
pop
mov
shl
mov
xor
push
pop
div
push
pop
sub
push
pop
sar
or
mov
cmpl
je
mov
mov
jmp
movl
mov
xor
divl
mov
mov
xor
push
pop
div
mov
mov
shr
mov
mov
xor
mov
div
mov
mov
mov
push
mov
mov
call
pop
cmp
je
mov
mov
or
mov
mov
mov
jmp
lea
push
push
push
pushl
call
lea
push
pushl
call
mov
mov
or
mov
mov
xor
push
pop
div
mov
mov
shl
mov
mov
xor
push
pop
div
mov
mov
sar
mov
mov
mov
cmpl
jne
mov
mov
mov
add
mov
push
call
push
call
pop
pop
leave
ret
int3
int3
int3
fmull
int3
int3
int3
int3
int3
dec
jmp
adc
adc
jle
mov
xor
xor
loope
rorb
cli
out
and
in
dec
cmpl
nop
pop
inc
call
mov
lcall
mov
gs
xlat
cwtl
mov
in
imul
jbe
rcrb
mov
mov
repnz
push
test
add
scas
je
ret
les
mov
push
jp
aad
jg
cs
outsb
sbb
add
outsl
mov
andb
daa
loope
push
pusha
xchg
insb
mov
or
adc
sti
lea
cld
addr16
jle
add
mov
add
test
fdiv
xchg
nopl
push
insl
cltd
cmp
mov
mov
outsl
or
lcall
sbb
movsb
xor
or
xchg
loope
in
mov
ljmp
mov
fistps
icebp
fiaddl
outsl
test
fs
dec
test
clc
pop
push
jl
fwait
int3
sahf
rcrb
mov
inc
mov
push
dec
andb
in
push
mov
imul
nop
clc
test
daa
lock
xchg
jbe
nop
cli
inc
push
mov
loopne
cltd
push
repz
pop
xchg
mov
sub
cmpsl
sub
push
jbe
ret
or
lods
adc
cmpl
shrl
jnp
in
xchg
ret
xchg
scas
push
lret
aas
test
inc
or
mov
jae
sbb
sbb
scas
pop
xchg
cmp
daa
mov
inc
mov
xchg
push
xlat
inc
lea
dec
sub
into
adc
inc
push
insl
in
shrl
js
cld
mov
in
shr
je
pop
or
push
aas
and
shl
lahf
pusha
das
movsl
sub
mov
xor
jns
fiadds
adc
flds
fmuls
rdmsr
adc
sbb
shrl
ljmp
ljmp
add
lods
pop
insl
push
test
popa
ljmp
sarb
imul
imul
aas
mov
loop
ljmp
dec
push
enter
jns
cmpsl
outsb
mov
sbb
in
mov
frstor
jns
notb
sbb
popa
and
ret
psadbw
movsb
in
xchg
jg
and
call
push
and
push
fsubrp
outsb
jle
or
daa
daa
add
popf
cli
jae
insl
adc
dec
shlb
mov
and
cmp
lret
ljmp
je
cmp
daa
movsb
lret
jecxz
jno
inc
pop
mov
es
clc
cmc
sahf
xor
pop
push
pop
mov
cmp
xchg
lods
push
movsl
add
nop
icebp
in
xor
dec
daa
pop
cmpsl
jmp
fnstenv
stc
mov
stos
pop
xor
inc
cmpsb
lods
mov
les
loop
loop
testl
cmp
repnz
push
jns
push
outsb
testb
cmp
pop
insl
push
loope
call
and
shll
mov
mull
adc
jle,pn
mov
cld
mov
mov
daa
push
adc
insb
mov
xchg
jl
je
sub
rcrl
push
std
inc
pop
sbb
nop
or
pop
sub
das
out
sbb
pop
mov
lock
fincstp
and
int3
cltd
repnz
orb
cmp
push
sti
lock
mov
aaa
mov
arpl
dec
movsb
dec
jne
daa
mov
shrl
mov
in
push
ret
or
flds
or
xchg
xor
cmp
popf
decl
fstp
test
stc
ret
enter
out
pusha
hlt
adc
insb
push
inc
cmp
jb
inc
shlb
fcomps
sbb
ljmp
gs
repnz
or
imul
ja
and
inc
and
in
and
icebp
jne
sub
xchg
aaa
mov
testb
mov
mov
xor
sbb
pop
mov
jbe
es
push
hlt
xchg
out
xor
mov
push
sbb
adc
loopne
jb
sub
out
or
adcb
cld
or
sbb
out
ret
movsb
insb
daa
mov
ret
lock
mov
dec
add
mov
stos
dec
filds
push
fnstenv
xor
sahf
cltd
xchg
or
pop
push
mov
sti
cmp
dec
mov
cmp
mov
xor
arpl
pop
inc
push
push
and
sbb
call
cmp
adc
sbb
lock
mov
lahf
pusha
jo
ret
jns
dec
fwait
sbb
push
enter
stc
xchg
test
jo
aaa
subl
jle
stc
dec
mov
inc
dec
xchg
fnstsw
xor
jo
mov
xchg
pop
pop
nop
inc
hlt
pop
mov
xchg
inc
sub
movsb
jp
mov
sub
mov
mov
out
jne
adc
pushl
and
les
push
in
dec
xchg
test
jge,pn
xlat
xor
and
dec
inc
pop
fwait
xchg
fcomi
cmp
test
aaa
mov
call
lret
mov
xchg
out
pop
fsubr
out
shrl
sbb
pop
cmpsl
dec
mov
fistpl
push
repnz
cmp
xor
divl
lret
lret
lea
jecxz
and
mov
nop
push
pop
or
adcb
or
xchg
sub
xor
or
push
inc
push
cwtl
xchg
add
sub
cs
js
sub
adc
les
jns
loope
xchg
sbb
stc
es
clc
inc
sbb
aam
addr16
jge
outsl
jb
loop
aad
dec
in
xor
cmp
pop
push
cmc
jo
cwtl
and
push
sbb
out
lock
push
jp
test
sbb
mov
and
dec
pop
mov
mov
outsb
cmc
out
lret
jl
in
sbb
sub
pop
or
inc
or
mov
rorl
push
jge
enter
add
movsb
into
ret
in
jne
mov
pushf
rcr
fld1
dec
dec
cmpl
daa
inc
js
cmp
and
popl
add
int3
js
mov
pop
xchg
inc
clc
ds
mov
xchg
xorps
mov
xlat
adc
rcrb
adc
dec
mov
push
jmp
and
stos
pushf
ds
in
enter
js
ljmp
sar
out
inc
addr16
repnz
nop
rorl
stos
test
mov
adc
out
and
iret
insb
std
arpl
out
jnp
mov
cmp
cwtl
gs
imul
or
xor
out
mov
and
arpl
xlat
mov
cmp
gs
xor
ret
loop
inc
nop
adc
rep
aam
in
or
pop
xor
les
nop
in
mov
dec
dec
aaa
cmp
push
jmp
xor
xchg
or
push
fsubs
pusha
pop
sahf
das
int3
xor
clc
push
lcall
cli
movsl
lret
in
sbb
jae
es
fistpll
mov
cmp
stos
or
fdivs
lea
imul
enter
jge
push
sbb
pop
pushf
and
call
sbb
hlt
popf
xchg
aad
dec
test
jmp
std
les
dec
push
jo
cmp
and
testb
jl
out
lcall
dec
fistl
in
int
imul
daa
push
loope
sub
test
fcmovbe
es
sbb
sti
inc
mov
jne
dec
xchg
mov
push
add
mov
into
lock
into
xchg
sub
mov
adc
xlat
mov
adc
out
jns
idivl
sub
iret
and
push
test
mov
mov
xor
test
mov
mov
fsts
jae
push
arpl
jmp
and
dec
movsl
cmp
or
pop
xor
xor
ret
sub
bound
dec
scas
adc
subb
mov
movsl
and
repz
out
lods
inc
aam
mov
xor
adc
incb
rorb
sub
push
bound
into
rcll
cmp
scas
add
jge
ja
fs
mov
inc
add
pop
mov
mov
jne
add
imul
inc
rcrl
xchg
aaa
add
arpl
test
adc
mov
ret
fs
cs
in
gs
or
cld
movsl
inc
and
push
mov
roll
inc
popf
test
mov
stc
inc
pop
hlt
inc
jmp
outsb
frstor
fildll
test
add
xor
mov
jbe
adc
push
mov
sbb
lcall
mov
arpl
jb
sti
mov
adc
fsubs
cli
dec
adc
xchg
xchg
mov
push
out
jb
dec
lahf
mov
js
mov
jns
mov
pop
xchg
xchg
pop
ja
imul
adc
pushf
rclb
lret
jge
test
aad
jns
test
jae
data16
cmp
mov
mov
sub
insl
or
sbb
mov
das
test
jno
xor
out
xor
push
inc
jno
jnp
dec
movsb
jno
mov
int3
divb
leave
jmp
movsb
jnp
mov
mov
pop
push
inc
pop
int3
pop
jae
paddsb
ficoml
pop
repz
sbb
push
xor
push
push
and
dec
cmp
movsb
jp
int3
adc
pop
and
je,pt
xchg
aad
cmp
sahf
call
loope
xchg
lods
test
pop
add
fldcw
push
lahf
insl
arpl
fdivrp
scas
adc
sub
pop
push
test
cmpsl
fnstcw
cmp
test
inc
lods
pop
nop
imul
cmp
fwait
ret
sbbl
test
mov
test
lock
push
xlat
stos
in
ljmp
popa
mov
mov
push
dec
xorl
mov
xchg
mov
scas
insl
sub
xchg
add
insb
sbb
testl
ljmp
jo
les
lds
cmpsl
hlt
jp
fcoml
jmp
cmp
cmc
arpl
jge
pop
gs
push
jns
sahf
mov
movsl
mov
mov
out
xor
ja
push
jp
cmp
fiadds
mov
adc
scas
lods
rep
xor
xor
add
lret
sbb
hlt
mov
jnp
sahf
test
sbb
add
mov
or
fs
bound
in
mov
sahf
or
cmovb
ja
mov
hlt
inc
subb
or
ret
imull
cmp
add
dec
fnstsw
mov
dec
push
mov
scas
mov
add
dec
test
push
pop
cmp
cwtl
adc
out
dec
das
fldl
fdivrs
or
ror
mov
add
sbb
arpl
cltd
enter
pusha
cli
lret
lods
mov
fs
ret
inc
repz
pop
jo
lods
lret
cmp
mov
lods
xlat
dec
sub
aas
mov
adc
imul
dec
mov
nop
jl
xor
jmp
fidivrl
pop
pop
cmp
cs
mov
mov
scas
les
fdivl
inc
or
push
addr16
pop
sbb
mov
cwtl
cmp
lds
xchg
out
sbb
mov
mov
mov
jae
push
xor
loop,pn
std
mov
in
test
rorb
add
lcall
pop
popa
xchg
mov
shr
lock
repz
or
pop
cmp
mov
cmpsb
dec
jbe
les
adc
add
es
or
and
lret
xor
push
lret
mov
clc
sub
sub
insl
push
add
dec
bound
aam
cmc
dec
ss
mov
push
test
gs
jbe,pn
pop
ljmp
and
ljmp
or
imul
adc
push
stc
fistps
in
sbb
mov
out
sub
adcl
cmp
ljmp
outsb
push
xor
aam
inc
add
cmp
in
in
jge
jb
outsb
scas
push
or
inc
std
insb
aad
cmp
popa
loop
orl
imul
scas
pop
sarb
fmuls
inc
dec
pop
sub
push
out
sbb
orl
leave
shrl
cmp
loope
mov
push
inc
fdivp
dec
push
arpl
hlt
cltd
xchg
sbb
ja
ja
jne
push
ret
popf
fs
test
movsl
test
mov
clc
xchg
movsl
xor
aaa
jns
xor
cmp
push
pop
shrb
add
stc
jbe
out
mov
cltd
push
and
cmpsb
pusha
dec
popf
test
repz
mov
mov
pop
data16
or
shlb
jns
stos
dec
jmp
and
pusha
lahf
lds
repz
xchg
sbb
mov
sahf
repnz
xor
mov
mov
and
cmc
mov
add
pop
test
bound
cmp
daa
icebp
push
sub
sub
sysret
cld
mov
mov
and
aaa
or
mov
add
arpl
lret
loope,pt
btr
into
scas
pop
out
mov
adc
ret
sbb
mov
imul
xchg
xchg
scas
mov
inc
pop
sti
jno
jns
lret
adc
insl
jmp
push
xchg
sbb
xlat
das
pop
lock
pop
push
dec
cmp
mov
cld
or
inc
cli
cs
and
mov
cmpsl
and
mov
sbb
adc
mov
rcl
lock
movsl
aam
adc
push
shlb
adc
mov
xchg
sti
scas
pop
add
in
xchg
dec
jne
fcmovne
jle
adc
sbb
test
push
xchg
add
or
test
and
adc
rcrl
fwait
sub
mov
add
lret
pop
mov
insl
imul
addl
xor
jmp
cmc
pop
mov
iret
mov
lods
cmpsl
cmp
add
dec
inc
icebp
mov
sbb
fildll
mov
sarb
sbb
fsts
mov
inc
outsl
xlat
insl
es
adc
mov
int
inc
pop
mov
leave
in
xchg
mov
pop
mov
mov
xchg
test
movsl
push
mov
cmp
adc
mov
push
jle
js
fisubs
jg
xchg
push
out
mov
mov
add
ret
or
lods
jnp
stos
mov
pop
inc
rclb
sti
push
out
sbb
jmp
imul
add
out
add
bound
arpl
adc
dec
nop
cmc
ss
shl
int
xchg
cmp
aam
sbb
or
arpl
ret
xor
leave
xchg
jg
push
daa
je
sbb
xchg
xor
inc
arpl
cmp
icebp
in
pushf
es
cmc
lods
in
ret
cmp
adc
lods
call
xor
shll
cmc
inc
cmp
shr
lods
add
movsb
cmp
push
fcmove
std
xchg
dec
push
xchg
push
mov
xchg
repnz
adc
into
dec
or
push
into
imulb
adc
mov
cmp
call
sub
mov
push
cmc
add
mov
cld
test
xor
and
pop
outsb
movzwl
dec
xchg
in
mov
jle
inc
sahf
jmp
and
xchg
cltd
fildll
fldenv
fisttps
orl
ret
push
pop
out
or
lds
ret
ljmp
cmp
mov
jae
pushf
inc
js
pop
loope
xor
lock
sub
mov
add
testl
loope
sub
mov
pop
mov
testl
scas
or
int3
ret
push
jmp
cltd
inc
das
mov
test
jnp
enter
xor
push
pushf
arpl
xchg
es
xor
pop
jo
popa
add
loop
sbbb
jb
aaa
aaa
inc
fcomps
fistps
cwtl
in
jno
jo
xchg
scas
and
or
stos
pop
lods
scas
shll
inc
nop
xor
mov
in
sbb
fscale
sbb
fwait
mov
inc
movsb
nop
sti
lock
stos
add
insb
cmp
xor
xchg
jp
push
or
sub
xchg
xor
adc
and
inc
inc
mov
bnd
js
mov
loopne
lret
fst
cld
mov
sbb
push
adc
roll
outsl
mov
lahf
inc
fdivrs
mov
jmp
loop
xor
out
cltd
sub
push
arpl
xchg
shll
cltd
inc
and
shrl
and
out
lods
mov
popl
repz
out
mov
or
loop
adc
sti
sbb
or
iret
clc
mov
and
notl
pop
out
xchg
stos
inc
imul
int
pop
test
shl
out
movsb
add
out
add
sbbb
xlat
fdivl
jl
ljmp
add
rcrl
andl
xchg
lahf
push
or
or
cmc
outsb
sarb
inc
pop
sub
jae
fsin
mov
loopne
add
xlat
adc
call
lahf
adc
adc
mov
and
icebp
push
hlt
repz
mov
pop
mov
lea
fsubs
xchg
and
push
and
repz
lock
mov
aas
sbb
repz
out
sub
mov
sub
cmp
xchg
lods
js
mov
jnp
pop
xor
and
sbb
lds
mov
pusha
xor
in
pop
pushf
faddl
or
push
cmp
jno
sub
into
dec
mov
dec
xchg
xor
pop
dec
testb
popa
dec
cmpsl
or
mov
pop
es
cld
push
cmc
add
adc
adc
je
jp
adc
xchg
adc
jl
sub
inc
mov
pop
mov
lods
add
xor
cltd
mov
fsubl
in
insl
es
in
xchg
repnz
popa
pop
dec
sar
push
roll
or
sub
mov
inc
out
movsl
ret
push
mov
pop
xor
incb
ss
jg
sbb
mov
subl
int
in
out
pushf
ljmp
imul
adc
stos
out
je
mov
out
sbb
mov
addr16
pop
pop
aaa
xchg
icebp
setp
arpl
cmp
or
test
test
pop
xor
xchg
es
jae
or
jg
add
xlat
lock
sarl
inc
mov
fwait
push
stc
fs
mov
insb
out
pop
xor
popf
push
dec
lock
pop
jmp
outsl
adc
sbb
sbb
add
leave
sarl
lds
mov
adc
std
test
xor
jmp
xchg
imul
adc
aam
sub
jmp
adc
adc
dec
imul
xor
popf
sti
pop
out
movsb
and
clc
pop
cmpb
cwtl
xor
stos
xchg
inc
mov
xor
orl
add
or
mov
pop
add
fistpl
xchg
stos
test
ja
cmpsb
jnp
sarb
outsb
lods
out
lock
lret
xchg
fs
add
pop
loopne
daa
jns
dec
mov
pop
adc
mov
xchg
int3
xor
in
repz
push
es
dec
cmp
xor
jb
in
cmp
push
fistpl
and
out
shll
adcl
repnz
adc
aas
arpl
lea
mov
and
jo
sbb
inc
push
in
jne
imul
inc
and
mov
ret
jbe
cld
dec
call
xchg
inc
in
addr16
ss
sbb
int3
xchg
or
cmp
aam
js
pop
data16
push
fistpll
and
jmp
into
inc
lahf
xchg
xchg
mov
insb
add
mov
pop
jecxz
roll
cli
jle
mov
mov
or
inc
jge
jo
pop
cmpl
xor
icebp
fldcw
push
inc
jle
test
jle
add
enter
leave
and
repnz
ja
xlat
lahf
pop
into
xchg
testb
sbb
push
and
clc
add
clc
mov
negl
jne
cmp
mov
cli
sahf
pop
sets
test
sbb
stos
popa
cmp
and
repnz
sar
mov
mov
mov
and
or
xchg
pop
add
int
cmpsb
mov
push
push
adc
xlat
cmp
and
xor
mov
inc
adc
jp
mov
pop
or
lret
mov
add
jg
jo
inc
inc
push
popa
inc
outsl
push
xchg
sbb
cmp
push
lods
xchg
in
cmpl
rcrb
fsubrl
rol
sti
sub
fists
push
xchg
cld
dec
pop
mov
mov
sub
insb
cltd
call
xchg
sub
loope
xchg
hlt
and
aam
sub
mov
mov
rcrl
cmc
add
in
pminsw
inc
and
test
daa
push
insl
lods
hlt
sub
bound
mov
pop
dec
outsb
sbb
test
push
push
movsb
jmp
or
push
ret
push
xchg
sub
fisubl
outsb
add
call
inc
mov
or
or
mov
or
xlat
es
rolb
mov
fdivs
sub
cmp
arpl
or
push
push
loop
cmp
xor
pop
imul
inc
sub
sar
inc
dec
mov
stos
orl
rclb
mov
inc
inc
xlat
fisubrs
add
mov
bound
mov
sbb
out
mov
mov
cld
jmp
adc
jae
loope
cli
sub
mov
lea
lods
push
fs
xchg
mov
jmp
daa
aam
mov
cmp
push
out
inc
out
iret
fs
jns
mov
int3
add
jmp
sbb
cmpsb
insb
lret
pop
push
mov
adc
incl
pushf
and
jecxz
lcall
cmp
sub
and
movsb
cld
cli
sbb
loope
and
addr16
or
insl
lahf
mov
jmp
sub
hlt
outsl
xor
or
xlat
mov
sbb
das
scas
xchg
out
aas
push
jecxz
sbb
ret
and
mov
popf
push
mov
pop
add
mov
nop
fiadds
mov
shrl
add
in
dec
xchg
push
inc
sub
jb
daa
jmp
push
insb
jnp
cmpsb
ret
pop
les
sub
jmp
in
mov
adc
inc
scas
ficompl
sub
cs
pop
jns
cmpsl
fcomps
jnp
lock
scas
imul
sbb
shll
mov
addl
arpl
pop
add
mov
cmp
pop
sub
pusha
lods
mov
mov
xor
mov
ret
imul
cld
xchg
jo
pop
in
mov
dec
clc
mov
sahf
xchg
dec
pop
js
mov
add
repz
rorl
std
lret
fldl
mov
cmp
mov
in
repz
jg
movsl
test
jae
test
loopne
pop
mov
lcall
or
add
icebp
xlat
xchg
mov
arpl
into
stos
xchg
cld
scas
add
addb
mov
loop
jns
enter
shrl
xchg
cwtl
xlat
subb
fstl
mov
cmp
xor
jmp
mov
test
fdiv
js
lcall
mov
rcll
popf
add
pop
mov
cmpsl
cmp
ss
xorb
and
xchg
out
add
jg
leave
xor
xchg
sbb
in
mov
loope
repz
or
sub
and
pop
adc
mov
movsb
adc
inc
out
dec
and
mov
fsubrs
test
std
xor
jl
shlb
aad
ds
pop
cli
in
mov
sub
xchg
push
ljmp
stos
cli
mov
inc
in
sahf
mov
pop
mov
ret
rcrb
xchg
aam
mov
push
sbb
test
sahf
pusha
push
nop
push
xchg
cld
cmp
mov
pushl
bound
cli
push
pop
sub
in
mov
mov
sbb
push
xchg
gs
mov
pop
popa
lods
jle
negb
sbb
add
mov
fstpt
cmp
inc
fcmovb
xchg
add
adcb
jb
mov
aad
jo
inc
sarl
sub
imul
out
add
sub
jo
sub
imul
stos
loope
rcr
int
pop
jp
movsb
outsb
clc
pushf
sbb
adc
push
js
cmc
mov
int3
popa
in
pop
dec
jno
inc
dec
fwait
adc
inc
adc
dec
inc
mov
in
xchg
inc
mov
mov
mov
loope
cmp
add
and
push
mov
push
je
addr16
dec
pop
adc
sti
cmpl
insb
cmc
jg
lods
or
lret
adc
pop
test
cmc
or
xor
jne
hlt
jne
cmpsl
sub
dec
inc
fnstcw
mov
dec
inc
lods
notl
jl
out
inc
nop
xchg
push
mov
xor
pop
sbb
and
mov
push
stos
popf
mov
pop
jae
ljmp
or
push
in
testl
push
add
pop
mov
xor
insb
and
and
fmuls
or
rorb
iret
stc
inc
add
sahf
and
cwtl
cmp
and
les
test
inc
fstpl
and
push
push
in
pop
stc
negb
mov
outsl
cld
rclb
xchg
sub
push
pop
popa
clc
xlat
adc
lahf
inc
mov
ja
jp
sarb
insb
outsl
mov
sti
cmp
cmp
push
rorl
jg
pusha
bswap
add
sub
ret
jne
add
lods
je
mov
out
and
imul
and
movsb
bound
inc
jno
test
and
sbb
push
mov
adc
outsl
dec
or
mov
repnz
dec
lods
push
out
add
jge
arpl
test
bound
pop
cmpsl
faddl
sub
dec
je
dec
movsb
mov
nop
out
inc
fisubs
add
shrl
movsb
sbb
rcrl
add
loope
xchg
int
jp
test
imul
jns
jns
pop
clc
ds
mov
movsl
adc
bound
xchg
sbb
push
push
xchg
int3
cmp
ljmp
cmp
or
out
push
sub
popa
mov
or
jne
push
and
ret
out
xchg
addr16
test
fsubrp
das
adc
pop
jno
adc
cltd
pop
add
jecxz
ljmp
ret
scas
xlat
sahf
stos
inc
inc
shl
push
lds
mov
push
push
or
repnz
pop
nop
repz
ror
fidivrl
xor
pop
idiv
jb
pop
and
ds
mov
push
mov
out
fsts
push
mov
push
lock
repnz
push
out
push
call
sbb
or
addr16
pop
xor
adc
add
sti
jle
xchg
push
pushl
out
imul
sub
popf
add
fdivrs
imul
xchg
and
arpl
add
push
dec
pop
sti
add
movsl
jne
insb
sub
xchg
sbb
movq
in
aad
jg
jns
pop
ljmp
dec
or
jae
loope
push
inc
out
in
xchg
andl
mulb
push
pop
lea
mov
aas
shl
xlat
xor
cmp
jmp
jbe
inc
and
sahf
mov
stc
hlt
xchg
jno
xchg
and
mov
fists
pusha
push
lahf
fldcw
xchg
outsl
adc
bound
mov
sbb
bound
rcrl
ds
fisttps
mov
arpl
sub
or
push
cmpsb
jae
inc
push
push
fstl
cli
lea
mov
ss
sub
jecxz
sbb
jns
test
gs
jmp
jne
xor
popa
push
fsub
push
xchg
int
add
test
gs
adc
dec
add
mov
jo
sbb
int
add
ss
mov
loop
sub
inc
outsl
dec
pop
sbb
push
xlat
mov
jmp
lcall
push
fsubr
and
adc
fadd
imul
sbb
push
out
cli
or
xor
loop
add
dec
arpl
enter
cmpsb
in
decb
add
fldt
mov
arpl
sub
cmp
sub
adc
sbb
push
je
cli
stos
mov
stos
add
aam
sub
psadbw
scas
xlat
popf
add
leave
mov
sub
es
bound
jae
jno
push
sub
lods
and
fs
nop
out
jp
push
jnp
mov
movsb
sub
inc
push
lret
mov
and
rolb
popf
sbb
stos
shlb
pushf
jno
add
ret
sub
out
ds
and
xor
mov
flds
pop
mov
shrl
pop
and
inc
push
xor
add
push
inc
mov
mov
stos
ret
xor
fldenv
out
out
outsl
insb
out
push
jl
push
data16
jge
aas
xchg
mov
pop
cli
or
dec
pusha
in
jecxz
xchg
xor
mov
shll
add
sbb
xlat
fimull
mov
sbb
shll
xor
mov
int
push
fcomps
in
pop
push
clc
stos
dec
loope
mov
jns
mov
dec
fcmovnb
test
and
dec
popf
lds
cmpsb
pusha
add
mov
mov
dec
repz
cmp
lock
sub
sub
mov
push
ss
dec
adc
inc
xchg
fidivrl
in
jg
jecxz
cmp
or
xchg
pop
mov
pop
cli
fsts
mov
in
mov
adc
mov
and
and
push
nop
int3
cwtl
cmp
mov
inc
pop
int
loop
fmulp
iret
es
js
dec
jg
sbb
xor
arpl
mov
pushf
mov
imul
mov
adc
push
inc
test
out
cmp
pop
insb
cs
jmp
cmp
andl
popa
fistl
lock
imul
jp
mov
pop
add
je
imul
hlt
push
pop
testb
inc
cmp
rclb
xchg
mov
out
testb
cltd
sub
mov
push
nop
fs
iret
xchg
xor
negb
pop
roll
dec
popa
sbb
pop
xchg
mov
dec
push
push
xchg
or
imul
pop
pushf
repnz
lea
mov
aad
js
xchg
je
jmp
mov
dec
sub
mov
mov
sti
mov
jbe
push
aas
movsb
int
mov
ficoms
clc
dec
subb
adc
jecxz
sbb
sub
pop
dec
aaa
cltd
add
add
mov
and
and
das
cltd
xchg
push
iret
jne
call
loopne
push
jl
cltd
leave
dec
cmp
inc
shll
cmpsl
push
loope
cmpsl
add
loopne
adcb
shll
cltd
jno
addr16
or
dec
shr
imul
int3
pop
andb
push
and
movsb
cmp
xchg
inc
mov
orl
lret
outsl
test
int3
cmp
test
mov
mov
jne
loop
dec
sbb
inc
imul
rorb
dec
or
mov
push
lcall
dec
jae
bound
jae
mov
inc
jp
rolb
ret
jmp
inc
mov
jg
int3
push
sub
in
or
xor
mulb
cmp
iret
or
je
or
ljmp
lods
cmp
and
dec
cmp
rol
sbb
mov
cli
aad
outsl
push
xchg
mov
stos
add
fldl
inc
aam
shrl
in
mov
mov
sub
adcb
push
repnz
or
fsubrs
push
and
mov
scas
imul
out
pop
lret
lret
or
inc
lret
xor
add
fwait
sbb
call
jae
or
ret
into
repz
aad
pushf
mov
mov
mov
xchg
sub
and
cmpsl
arpl
orl
and
aaa
xchg
or
pop
sbb
movb
adc
bound
es
push
or
idivl
xor
sbb
lret
rcll
add
and
mov
xor
sarl
push
xchg
xchg
dec
notl
imul
push
mov
jmp
data16
jp
divb
xchg
mov
sub
scas
pop
lods
xchg
or
imul
mov
ret
dec
add
lock
mov
pop
jl
movsl
xchg
pop
fucomp
push
insl
aam
xchg
loop
jg
add
adc
sub
cmc
je
int3
int3
daa
insb
rorb
adc
in
test
loop
fldcw
xor
js
rcr
pop
push
inc
out
adc
mov
or
ss
pop
cs
and
out
dec
loop
scas
dec
movsb
shrb
xchg
out
jae
jle
xorl
pop
sub
jb
mov
data16
mov
rcrb
adc
inc
pop
xchg
cmpsb
push
mov
pop
lock
jno
jne
ret
nop
ret
icebp
imul
enter
insl
sahf
fsubl
data16
or
and
js
addr16
mov
icebp
repz
inc
and
inc
jmp
enter
jo
aam
sub
scas
xorb
inc
clc
mov
lds
lcall
repnz
mov
repz
add
stos
cwtl
push
jnp
imul
sar
dec
xchg
fsubrp
aaa
mov
and
leave
fmull
std
mov
adc
push
push
xorb
js
inc
lret
repnz
lea
fimull
mov
mull
cmp
cmp
pop
movsl
sbb
inc
fwait
mov
daa
xchg
sub
mov
rcll
mov
dec
xorb
xchg
xor
inc
pop
push
mov
jecxz
push
cmp
fwait
shrl
mov
lea
add
inc
jp
inc
shll
adc
jle
inc
and
inc
int3
cmp
bound
push
push
xchg
xchg
ds
cmpsb
xor
sti
push
popf
rcl
imul
out
testl
xor
or
sub
mov
jmp
out
add
cmpb
push
xchg
jle
mov
clc
mov
pop
es
adc
jg
ds
sti
inc
addl
dec
or
rcr
imul
ret
push
sbb
pushf
out
shll
stos
mov
in
popa
ret
call
or
pusha
js
mov
jno
test
sbbl
push
cmp
xchg
xor
fisttpl
xor
adc
push
sbb
jg
cmp
jmp
ja
jge
or
xchg
lods
out
leave
sub
push
and
dec
sub
inc
mov
push
ljmp
shlb
movsb
and
idivb
xlat
xor
jle,pt
jb
loope
out
mov
es
inc
sti
xor
fs
enter
cmp
mov
push
xchg
outsl
ljmp
andb
sub
outsl
or
dec
xor
addb
mov
mov
popa
stos
pop
lods
jge
mov
dec
stos
xor
shrl
or
cmp
and
xchg
aam
leave
add
cltd
pop
iret
out
pop
daa
lahf
jl
ja
fsubl
add
jp
push
outsl
mov
loop
lret
nop
es
fsubrl
leave
xor
add
into
outsb
call
and
sbb
fistpll
lret
xchg
hlt
nop
add
movsb
xchg
mov
sahf
dec
xchg
ja
mov
inc
mov
test
mov
mov
int3
inc
in
cmp
ljmp
adc
add
cmp
fisubrl
clc
cmp
sub
or
decb
scas
jmp
notl
push
out
call
mov
adc
sbb
fstps
add
jmp
insl
aad
lret
mov
and
addr16
test
call
pop
test
add
out
les
iret
xor
ja
push
cmp
cmpsb
in
movsb
mov
dec
sbb
jnp
sbb
lods
test
shlb
mov
add
in
mov
stos
and
add
jle
jmp
out
sbb
pop
add
pushf
adc
je
rcr
lret
sub
jle
imul
in
test
mov
mov
jae
pop
and
int3
and
cwtl
pop
mov
pop
adc
xor
js
fisttpl
scas
mov
xchg
push
rcll
fiaddl
add
push
sbb
fwait
andb
fidivs
je
xor
sub
int3
data16
movsb
popf
in
sbb
insl
pop
inc
lcall
sub
loope
jns
lahf
flds
mov
or
xchg
addl
iret
dec
je
aad
dec
sahf
or
ja
xchg
scas
popa
ss
dec
mov
stc
xchg
and
cmpsl
push
out
mov
fwait
lock
jne
rcrb
lret
sarb
cmp
into
pop
mov
dec
jp
js
mov
and
ret
cmpsb
outsl
inc
roll
dec
cmp
imul
mov
in
jl
add
icebp
sbb
push
pop
inc
sbb
push
lahf
shlb
fmull
lret
outsl
xor
inc
enter
xchg
sahf
mov
mov
mov
mov
sbbl
xchg
test
and
fucomi
dec
mov
loopne
dec
jl
jp
adc
cmp
push
or
sbb
mov
outsb
and
push
cmp
je
xchg
cmp
or
inc
leave
mov
and
jle
pop
subb
test
mov
repz
inc
fisubs
mov
mov
out
sbb
jns
fidivrs
daa
fs
popf
adc
in
or
xor
mov
inc
ljmp
dec
cli
or
xchg
cli
or
xor
js
mov
test
nop
xorb
jnp
xor
jmp
xlat
rorb
mov
imul
xchg
aas
mov
stos
add
andl
sbb
jae
aad
mov
out
dec
fwait
sub
or
stc
adc
outsb
xor
sbb
add
or
lcall
shr
jb
enter
pop
sbb
addr16
int3
xor
adc
jne
loopne
repz
cs
push
bound
sbb
xchg
cmp
setnp
aas
in
adc
jg
sbb
imul
imul
sub
lret
aad
mov
xchg
pushf
jmp
xchg
jl
dec
inc
dec
and
jne
xchg
or
in
sarl
in
mov
jge
popa
xchg
insb
bound
aad
jp
pop
rcrb
into
xchg
pusha
fbstp
lods
hlt
addl
dec
ds
inc
mov
and
mov
out
ljmp
rep
clc
in
jg
imulb
scas
push
cmp
jg
add
jb
or
push
or
sub
mov
jbe
pop
mov
xchg
test
rcl
pusha
pcmpeqb
mov
loope
sbb
cld
push
mov
leave
xchg
sub
arpl
mov
cltd
imul
mov
or
cmc
or
cmp
in
adc
wrmsr
pop
sarl
cld
pop
xchg
pop
scas
int
rclb
push
roll
push
inc
enter
pusha
dec
pushf
mov
xor
fstpl
iret
idivl
cwtl
sub
aad
stos
push
jo
mov
sub
cltd
inc
add
mov
bound
outsb
inc
addl
add
std
mov
adc
jmp
mov
out
pop
flds
fcomps
aad
gs
in
jno
push
in
mov
int3
xchg
xor
lcall
xor
lds
adc
or
xchg
mov
sbb
dec
xchg
or
stos
sub
mov
jns
mov
pop
fimull
xchg
movsb
insb
add
cmp
mov
int
outsl
mov
push
xor
sbb
in
cmp
pop
sarb
ljmp
sub
pop
lcall
inc
insb
cs
adc
fwait
aaa
cmp
sbb
rolb
pop
mov
sbb
pop
push
lret
adc
jecxz
inc
sbbb
mov
dec
mov
sahf
cmp
inc
aam
loopne
ja
fisubrl
sahf
mov
rorl
in
or
mov
cmp
add
outsb
xlat
sahf
jmp
mov
xlat
bound
mov
push
scas
push
adc
arpl
call
pop
aam
or
pop
ret
aad
int
jecxz
imul
xchg
mov
test
arpl
stc
mov
xchg
ret
out
pop
add
cmp
mov
dec
stos
jp
cmp
subl
push
aam
jb
lods
stos
jmp
xchg
mov
rorb
xchg
sbb
imul
mov
xchg
mov
xchg
shll
stos
push
add
cmp
cmp
loopne
adcl
insb
lods
jg
insl
ja
mov
bound
pop
xor
in
jb
adcl
lods
mov
clc
jbe
js
push
sub
call
cmp
push
pusha
cmpsl
fs
int3
pop
cmp
aas
lods
cmc
cmovb
xor
adc
inc
jo
lods
out
jne,pt
pop
ds
mov
and
lret
mov
imul
cmc
push
out
sub
prefetch
or
xchg
loop
sbb
inc
out
incl
neg
imul
mov
cltd
jle
outsb
lock
popf
mov
ret
mov
dec
dec
and
fmuls
insl
sarl
mov
cmc
fadd
sub
xchg
scas
adc
xor
adc
inc
pop
lea
subl
outsb
outsl
pop
or
fnstenv
loopne
pushf
lcall
std
inc
bound
out
sbb
mov
jmp
xor
imulb
jle
fldt
pusha
mov
dec
sub
xlat
fs
sub
dec
or
jle
xchg
xor
sub
xchg
xlat
stos
mov
push
sbbl
cmp
inc
test
enter
insb
mov
bound
mov
scas
aas
push
jo
cwtl
bound
dec
or
inc
ljmp
daa
jb
inc
jae
fistpl
das
add
bound
inc
adcb
rclb
cmpb
out
pop
fadd
mov
xor
cmpsb
idivb
test
push
dec
hlt
jae
aam
pop
insb
jmp
ds
lock
in
pop
xchg
test
xchg
inc
inc
out
and
daa
pop
xchg
jnp
imul
popa
lcall
mov
sub
cmp
dec
imul
dec
mov
arpl
lahf
push
mov
pop
insl
sub
xchg
mov
push
jno
dec
cmpsl
push
stc
stc
out
mov
jg
xlat
mov
in
mov
mov
or
pop
lcall
add
adc
aad
lea
sub
xchg
mov
cltd
adc
jb
xchg
out
push
out
les
cltd
mov
inc
inc
pop
sahf
jecxz
dec
movsb
sbb
pop
rolb
cld
dec
sub
cmp
bound
fcmovbe
sbb
repnz
push
dec
jnp
cltd
shl
adc
scas
ret
test
int
or
and
mov
push
movsb
mov
clc
inc
sbb
jno
jmp
in
inc
lea
sbb
jecxz
aas
and
jnp
shr
imul
ss
jnp
lds
push
insb
rorb
xor
sub
stc
std
leave
lea
sbb
jecxz
push
mov
or
aaa
jp
lods
sbb
cmp
pushf
sub
mov
xor
mov
jno
mov
or
push
jae
std
lock
mov
sti
add
ret
outsl
cmpsb
rclb
push
cmp
dec
out
stos
insb
xor
push
sbb
lock
jecxz
fidivrl
mov
popa
test
aad
pop
sub
dec
jecxz
in
jb
jp
pushl
xor
sub
xchg
jl
in
lea
pop
dec
jmp
or
cwtl
ss
jmp
ficomps
push
sbb
sbb
sarb
mov
push
pop
orl
xlat
shrd
xor
fdivrs
sub
movq
in
bswap
cmpsl
and
and
jb
pop
inc
cs
push
and
aad
je
dec
push
fisttpl
jmp
into
mov
pop
cmp
in
mov
pop
xchg
out
icebp
loope
divl
sub
dec
imul
push
add
pop
or
gs
dec
pop
cmp
jbe
jne
mov
mov
rcl
xor
cld
sti
popa
popa
stos
lods
jmp
pusha
mov
and
out
rorl
jle
cmc
aam
xchg
add
fs
fcomps
cmc
fiaddl
mov
jne
add
pop
fs
in
jp
push
xorb
cmp
and
rorl
xchg
test
aad
fdivl
mov
loope
addr16
shr
rep
mov
jle
aas
push
cmp
andl
pop
pop
add
mov
enter
inc
sti
mov
xor
adc
lds
lea
in
addb
mov
push
mov
or
jae
lret
aam
pop
incl
push
xchg
pop
arpl
xchg
xchg
xchg
cmp
push
repz
loopne
cmpsb
dec
movsb
subl
adc
clc
fucomi
mov
pop
xor
mov
movsb
aam
jb
mov
fcomp
add
xor
popf
fwait
mov
mov
pushf
dec
int3
mov
xchg
push
sbbb
mov
xor
push
cmc
popf
sbb
and
adc
pop
ja
inc
xor
push
sub
cmp
test
sbb
sub
js
sahf
push
and
outsl
decl
and
ret
rolb
scas
jb
cmpsb
xor
pushf
sbb
sbb
sub
or
dec
divl
mov
cltd
mov
sub
jmp
out
cwtl
adc
mov
inc
int3
lret
push
or
ja
and
bound
inc
daa
ljmp
shrl
js
mov
js
mov
aad
adc
dec
lods
jecxz
pop
mov
fldt
xchg
cld
cs
loope
or
xchg
jns
or
add
scas
ficompl
es
xchg
lret
mov
xchg
xchg
jg
popf
jmp
lods
out
lods
adc
or
or
shll
andb
mov
sub
adc
int3
addr16
or
cld
dec
xor
mov
mov
ficoml
jp
sbbb
dec
arpl
fs
arpl
insl
negb
aas
cli
lds
push
cmp
mov
mov
bnd
js
mov
movsb
xor
push
sub
jbe
cmp
sahf
jns
pop
in
cmpsl
out
jo
jnp
cld
mov
cs
push
mov
in
add
adc
push
je
push
rcrl
popa
cmp
stc
or
aas
lcall
xchg
mov
pop
outsl
mov
cmp
repnz
sbb
pop
sub
lock
out
and
ds
mov
test
sub
xlat
inc
movsl
lcall
or
and
std
push
repz
std
cmpsl
mov
fstl
test
loope
leave
pop
or
adc
or
daa
cmp
gs
push
clc
sub
push
or
cmp
jne
xlat
dec
mov
and
add
cmp
hlt
scas
cmp
movsb
andb
jo
test
iret
cmp
and
inc
mov
xchg
test
ja
sbb
jne
mov
lock
ljmp
outsb
sbb
scas
icebp
incb
mov
sidtl
pusha
mov
jo
lock
sahf
push
cmp
push
mov
es
clc
mov
stc
push
stos
pop
mov
cmp
jl
inc
mov
cmpsb
xor
call
mov
pop
adc
push
mov
mov
jae
pop
iret
pop
xlat
movsl
mov
pop
outsl
mov
xor
jmp
xchg
cmp
imul
int
js
xchg
mov
insb
push
loopne
add
and
sub
lcall
jmp
xchg
lods
inc
or
dec
ror
lea
outsl
cmp
lock
fdivl
sti
sub
mov
jmp
add
cmp
idiv
mov
lock
out
fldcw
fidivrs
push
pop
cmpsl
and
add
pop
jne
sarb
mov
inc
into
clc
inc
and
shrb
mov
test
clc
dec
aaa
lods
lock
add
cld
rcrb
cld
aaa
add
fcomip
fsubl
push
and
push
lods
cmpsb
cmp
and
into
add
mov
std
xor
pop
dec
outsw
xlat
add
xchg
cmp
add
sbb
sub
loopne
xchg
or
push
fcomip
fyl2x
dec
add
lods
mov
and
xor
adc
adc
inc
fdivs
jg
jecxz
gs
xchg
decl
jns
or
cmpsb
rorl
sbb
and
or
mov
daa
cld
xchg
pop
inc
sub
fistpl
add
std
lret
xor
ret
out
xchg
jbe
pop
cmp
shrl
dec
test
in
shlb
cmp
shrb
dec
in
adc
stos
dec
add
cmc
lret
sub
dec
and
lcall
ja
push
inc
lret
xchg
insl
inc
stc
and
ds
xchg
clc
push
sub
xchg
cmp
lds
in
popa
xchg
or
xor
dec
or
mov
jecxz
pop
iret
mov
fldt
mov
lret
xlat
sahf
out
insb
in
ja
jne
ss
cmp
in
pop
sbb
int3
cmp
test
xchg
mov
lods
dec
add
and
and
and
dec
jge
mov
xchg
push
sub
ja,pt
push
enter
shll
stc
ljmp
imul
push
jecxz
pmulhw
jg,pn
pop
sti
popf
bound
int
or
nop
xor
lcall
push
vpmaxub
cltd
fs
inc
in
cld
mov
push
jmp
loop
cmp
mov
es
inc
and
push
and
scas
add
call
jae
xchg
ret
fsub
mov
arpl
xchg
gs
aaa
fdivrl
inc
lea
out
xor
mov
in
in
mov
mov
je
loop
sbb
ss
inc
getsec
add
sbb
xor
gs
fdivrl
mov
push
inc
movsb
je
loope
and
pop
jg
mov
icebp
adc
stos
mov
scas
fimull
pop
mov
push
aad
mov
dec
xchg
pushf
test
fsubs
leave
jmp
and
mov
pop
adc
add
xor
data16
dec
xor
sbb
in
mov
and
mov
je
jb
cmp
repz
or
mov
sbb
scas
mov
pop
xchg
out
mov
and
inc
or
or
shrb
jo
iret
jae
jl
adc
jae
adc
mov
pop
mov
in
inc
jb
sbb
mov
int
aad
pop
jae
movntps
popf
xor
mov
test
push
mov
inc
pop
aas
lds
and
add
es
pusha
jno
mov
icebp
inc
jbe
mulb
cmpsb
fwait
enter
enter
test
fistl
ficoml
fmull
jg
js
and
mov
sub
sbb
test
mov
inc
sub
sbb
enter
pop
mov
insb
push
pop
jo
mov
dec
fiadds
add
jns
jns
cmp
and
popf
cmpsl
std
jne
lods
out
mov
shll
test
test
addb
push
cmc
in
xchg
sahf
je,pn
ret
stos
outsl
lods
arpl
jecxz
mov
pop
aad
js
sete
mov
cld
fwait
in
or
fdivl
push
xchg
sbb
mov
jnp
insb
adc
jno
stc
pop
mov
mov
paddsb
testb
sbb
lea
jl
mov
xchg
iret
inc
dec
out
ja
movzwl
mov
lret
add
andl
pop
arpl
or
dec
pop
int
movsl
lret
call
mov
cmp
xor
push
sub
add
mov
push
and
dec
pop
push
inc
xchg
insl
xchg
and
adc
jge
call
inc
out
scas
cwtl
mov
cmp
cmc
adc
inc
std
frstor
pop
cmp
adc
push
scas
pop
jns
roll
xchg
push
adc
inc
add
mov
push
pop
jle
outsl
cmp
call
fbld
ljmp
into
push
sbb
cmp
insb
dec
loopne
jne
stos
adc
loop
movq
cmp
out
dec
nop
fildll
jbe
icebp
cmp
shl
pop
dec
sahf
cmp
mov
xchg
jle
or
ret
adc
in
pop
adc
mov
jl
inc
sub
xchg
mov
mov
xchg
xchg
lahf
push
in
jecxz
xor
push
andl
lret
sub
bound
pop
jle
lds
sahf
fs
outsl
aad
jecxz
lods
xchg
cmp
gs
mov
ljmp
imul
loope
stc
cs
adc
in
pop
xor
xchg
and
sub
cli
jle
in
mov
mov
pop
clc
add
imul
adc
into
mov
ret
add
je
pop
sub
mov
dec
test
xchg
sub
cmp
out
xor
sahf
ds
pushf
push
cmpsb
and
inc
mov
dec
adc
insl
sub
adc
lock
sub
mov
orl
andl
in
pop
cmp
out
adc
in
pop
inc
or
ficoms
sbb
ror
fnstsw
add
movsl
leave
cld
sbb
cmp
fmull
inc
in
adc
inc
lods
and
insl
or
sub
cmp
stos
sub
fdivrs
rcrl
sbb
push
sbb
add
lret
repnz
jmp
lock
addl
dec
cld
stos
loopne
orb
mov
inc
pop
push
dec
dec
pop
push
pop
jg
daa
cltd
arpl
ja
lock
rcll
adc
jmp
lock
mov
popa
insb
lcall
inc
int3
xor
test
in
scas
jae
mov
sti
add
xchg
sbb
outsb
dec
sbb
inc
mov
jb
adc
mov
ss
and
jge
pop
ret
xor
dec
or
icebp
std
sbb
mov
in
push
movsl
xchg
jmp
repz
mov
mov
fistpl
repz
into
jp
lds
neg
mov
cmp
pop
out
aaa
aas
sahf
ljmp
mov
loop
mov
ds
daa
int3
sbb
jg
shlb
incb
inc
fdecstp
sub
dec
push
sti
test
ja
jl
insl
jnp
pop
xor
dec
aaa
mov
es
jmp
pop
xchg
push
fsubrl
and
push
insb
je
mov
sub
jbe
mov
add
xchg
push
xor
scas
stc
sbb
aam
inc
pop
inc
cmp
sub
mov
hlt
call
pop
sbb
adc
dec
lret
adc
fidivs
sub
inc
fbstp
dec
pusha
sub
push
add
sub
fidivrl
mov
add
or
mov
push
out
movsb
in
jns
les
lahf
inc
jo
scas
loope
cwtl
inc
cwtl
adc
mov
test
cmp
push
xchg
mov
or
cmp
cld
dec
sbb
insb
pop
lret
jecxz
dec
addr16
xlat
dec
and
mov
pop
mov
daa
sub
pop
mov
cmp
adc
and
push
fsubl
fstpt
add
sbb
shrl
lods
shrl
jmp
adc
jns
lcall
aaa
dec
jo
imul
jne
and
cmp
shl
lcall
pop
jns
int3
xchg
and
lock
aas
outsl
fisubrl
push
imul
lcall
add
jmp
xchg
test
lock
ret
adc
xchg
lods
cmpsl
xchg
test
sahf
and
in
dec
ds
imul
or
push
dec
lds
or
xor
xor
decl
sub
xchg
ffreep
xor
inc
gs
outsb
std
dec
fldl
or
dec
push
xor
cmp
mov
clc
cli
add
xchg
push
dec
jle
insb
xchg
std
icebp
and
xorb
mov
iret
repz
bound
or
das
addb
fldenv
outsb
xor
mov
xorb
xor
push
jecxz
js
punpckhbw
sub
repnz
mov
dec
orl
sub
and
cmp
mov
pop
jbe
lea
hlt
lods
and
movl
fstpt
insl
dec
mov
icebp
sarl
pop
jp
pop
repz
in
xlat
adc
pop
hlt
xchg
lahf
cmp
inc
add
daa
gs
imul
test
cmpsl
iret
pop
fsubs
dec
int
mov
and
lock
out
imul
jnp
inc
inc
addb
push
jne
inc
sub
inc
cmp
cmp
aaa
push
loopne
popa
ret
fnsave
cmp
adc
and
mov
adc
mov
sub
add
jmp
xor
adc
mov
scas
ds
mov
shll
les
push
add
cmp
enter
iret
pop
inc
mov
pushf
fnstenv
xchg
fwait
jg
xor
mov
mov
xchg
mov
pop
add
jb
movsb
into
lock
data16
fdivrl
movsb
imulb
loopne
xlat
sbb
adc
stos
cmp
fcoml
add
cld
jo
mov
mov
arpl
push
dec
dec
loop
rcll
xchg
ss
dec
stc
mov
lea
mov
pop
cmp
mov
call
daa
aaa
cs
arpl
cltd
stos
jae
out
cs
mov
ret
inc
int3
add
subl
mov
lret
test
xchg
test
shll
jecxz
pusha
xor
mov
mov
sub
das
nop
movsb
and
ret
test
add
repz
rolb
ljmp
aam
addl
cmp
add
in
addr16
fs
scas
faddl
ds
cltd
in
sub
push
bound
dec
pop
loope
movsl
cmovbe
mov
xchg
mov
test
pusha
mov
or
sub
fisttpl
mov
gs
push
jle
lret
cmpb
jns
ds
add
popl
adc
push
popa
adc
mov
sbb
dec
mov
push
mov
dec
inc
cmp
mov
push
inc
jecxz
pop
loopne
mov
cmpsb
sar
xchg
mov
and
jno
lret
or
iret
xchg
repnz
cmp
lods
sub
imul
hlt
jl
mov
pop
fadds
pop
out
loop
fldcw
inc
scas
cmpsb
push
inc
dec
add
push
cmpsb
call
pop
jo
les
inc
rclb
xchg
sub
add
jle
xchg
ja
fistpl
dec
iret
icebp
fldt
outsb
andb
das
sbb
cmpb
popf
xchg
aaa
mov
push
bound
pop
inc
loop
addr16
xorb
mov
es
stos
inc
fldl
pop
fdivr
xchg
daa
sbb
rolb
pop
repnz
mov
ja
imul
pop
mov
xchg
sbb
fbstp
pop
jmp
test
inc
cld
imul
xchg
or
jle
ds
fsubl
xor
movsl
jge
pushf
push
js
outsl
add
mov
cli
pop
shr
pushf
lahf
jle
fisttpll
xor
push
dec
and
shll
insl
or
pop
repz
test
xor
iret
inc
aas
jl
imul
fsin
sti
xchg
xchg
mov
roll
call
lcall
sbb
shlb
mov
std
insl
std
ss
pop
cmp
pusha
scas
push
mov
sub
pop
ret
mov
mov
mov
pop
ds
std
pusha
je
lds
filds
gs
rcrl
bound
popa
repnz
sbb
xor
or
mov
imul
sub
inc
cmp
add
dec
dec
adc
jne
cmp
jl
js
jecxz
mov
and
mov
and
mov
and
ja
fwait
and
jl
mov
mov
sub
and
imul
add
mov
sbb
out
jge
pop
jmp
cmp
lcall
mov
ja
jb
jecxz
or
pop
sbb
adc
fildl
aam
nop
mov
mov
xor
inc
or
mov
jmp
cmpsl
adc
mov
push
ss
ljmp
cltd
mov
sub
jae
loop
adc
pop
cmp
fiadds
mov
aas
add
fisubs
mov
cmp
mov
sub
xchg
jae
cmpb
ja
sub
jae
ds
pop
jo
test
add
icebp
pop
sbb
lret
test
addr16
mov
insb
clc
pop
add
mull
lret
mov
add
sbb
les
lock
adc
mov
mov
and
sarl
imul
fisubl
hlt
adc
jnp
push
dec
ret
push
add
pop
test
scas
and
xchg
jne
cld
out
jge
jb
jno
scas
push
rcrb
inc
int
int3
mov
sub
add
mov
nop
jl
mov
mov
xchg
xor
adc
ret
xor
and
dec
loope
cmp
loopne
sub
pop
mov
in
lds
jno
lods
cmc
mov
test
call
loopne
adc
jne
in
sbb
jg
stc
sub
mov
out
add
mov
js
mov
sbb
aas
xchg
adc
mov
jo
repnz
adc
test
or
sbb
fiadds
shrl
push
mov
push
popl
in
mov
lds
add
sub
in
pushf
push
add
scas
mov
inc
dec
daa
xor
fcoms
jmp
scas
sbb
gs
in
rol
adc
and
sbbl
das
xor
cs
stos
jge
scas
xchg
pop
aas
out
xchg
pop
test
pusha
adcb
fs
js
sbb
lods
int
push
les
dec
push
mov
inc
xor
sbb
inc
inc
jns
arpl
sbb
addl
outsb
outsb
cltd
test
pop
inc
gs
xor
xchg
sti
sbb
mov
ret
adc
add
cmp
inc
push
mov
inc
dec
clc
mov
inc
xor
fbstp
cmp
adc
inc
imulb
xor
hlt
sbb
cmp
orl
sub
andl
clc
rol
lock
xor
lds
aam
mov
push
pop
mov
dec
jle
popa
stos
test
sub
jae
lock
add
mov
xor
jmp
in
xchg
int3
mov
stos
neg
or
outsb
cs
outsb
fldl
jno
shrl
imul
sub
in
movsb
dec
shll
and
daa
inc
roll
daa
stos
pop
pop
call
aad
imul
add
xor
push
call
lret
add
fwait
scas
xchg
push
jns
in
xorps
adc
bound
pop
shlb
adc
call
js
dec
int
cmp
and
dec
add
push
xlat
pop
mov
shl
das
cli
add
pusha
addb
jns
dec
gs
pop
push
mov
cmp
in
in
es
ret
inc
enter
adc
push
xchg
decb
xchg
ss
adc
or
and
sub
nop
mov
and
or
in
mov
cmp
dec
jae
jb
inc
inc
add
lock
inc
popf
xchg
fnsave
pop
fistpll
leave
loop
push
arpl
fbstp
aas
push
mov
cld
gs
xchg
and
and
add
push
fmuls
xor
cmpsb
or
es
cmpsl
jmp
in
popf
fdivl
push
repz
enter
bound
sbb
icebp
shll
xchg
mov
xchg
add
jl
jmp
nop
insl
xor
icebp
repnz
inc
test
mov
ret
addb
pop
mov
lds
pop
out
jb
stos
push
and
fbld
and
in
jl
fisttps
xor
lret
adc
jae
lea
xor
mov
mov
fs
push
pop
mov
ljmp
mov
fs
leave
dec
fistpl
mov
lahf
sub
xchg
aaa
cld
pop
mov
cltd
push
or
sarb
fwait
mov
xor
pusha
mov
jmp
xchg
cmp
jle
sti
jg
jae
add
xchg
lock
nop
xor
cmp
scas
insb
and
or
fimull
call
ds
cs
push
lcall
loopne
mov
bound
test
aaa
in
rorb
mov
adc
daa
mov
pop
push
repz
mov
dec
dec
insb
xor
popf
mov
outsl
jo
ret
fisubrl
in
lock
and
and
mov
rcll
enter
and
hlt
fdivl
je
push
jl
ret
mov
jo
lcall
mov
push
add
stos
jbe
pop
imul
mov
fidivrs
push
fiaddl
jl
pop
popf
push
icebp
neg
in
insb
mov
dec
ret
scas
es
and
fiaddl
mov
sbb
loopne
bound
jg
movsb
pushf
jns
lods
xchg
jl
dec
push
dec
sbb
inc
jmp
jecxz
pusha
xchg
insl
xor
cmp
mov
mov
subb
mov
lret
add
ret
sub
rol
mov
xorl
dec
mov
fstl
xor
mov
dec
pop
das
cmpsl
lea
cs
stos
pop
mulb
mov
stc
sub
stos
inc
lods
leave
movsl
sarb
fcompl
dec
icebp
adc
and
fwait
lret
sub
in
jns
sbb
mov
pop
or
aad
daa
push
orb
xchg
push
xchg
or
cmp
cld
test
hlt
add
out
pop
mov
popf
pop
add
adc
jbe
ror
fistpll
inc
dec
sub
cld
iret
cmp
iret
mov
fiadds
out
or
push
mov
or
xchg
mov
imul
push
sub
xlat
sbb
imul
leave
add
bound
insb
popf
insl
or
dec
std
or
aad
add
out
stos
xchg
imul
scas
lock
mov
clc
add
js
fldcw
pusha
cmp
adc
inc
mov
xchg
sub
cmp
mov
insb
sbb
pop
pop
lret
testl
jbe
cli
push
popa
scas
fdivs
mov
rorl
outsb
in
shll
imull
mov
xor
mov
and
cmpl
test
notl
out
adc
dec
inc
inc
sbb
adc
sub
mov
bound
shlb
pop
sahf
test
std
das
imul
insl
jo
jg
shrb
iret
cs
push
cmp
iret
or
add
lret
inc
mov
lods
pusha
out
cmp
leave
cmc
push
add
add
hlt
imul
fistpl
push
xorb
add
aas
add
in
push
inc
int3
out
data16
negb
sub
dec
mov
test
mov
and
pop
enter
xchg
cli
pop
jbe
stc
dec
pop
movsl
jecxz
push
aaa
outsb
dec
ljmp
inc
jnp
in
inc
add
enter
jmp
pop
mov
or
movsb
jnp
js
xor
push
dec
subb
push
addr16
scas
pop
xor
push
ret
call
aam
mov
pop
shl
js
cmp
cmp
jnp
imul
or
test
gs
ret
push
sbb
sbb
pop
mov
cmp
fwait
rclb
dec
test
pusha
aas
imul
nop
lds
pusha
daa
fwait
inc
pushf
bound
add
and
xchg
insb
fcoml
ret
cmp
stc
cltd
pop
dec
mov
add
les
shl
cli
fwait
mov
sub
aaa
xchg
js
inc
pop
pop
inc
pusha
lds
sub
testb
mov
inc
push
imul
test
dec
in
dec
call
in
xchg
stos
lret
dec
sub
pop
js
imul
notl
jne
scas
push
xchg
fidivl
jmp
call
gs
add
jp
adc
hlt
adc
ljmp
adc
adc
lahf
cwtl
sub
leave
mov
push
ljmp
fisttpl
into
cmpsl
adc
adc
pop
pop
imul
adc
xchg
ljmp
mov
daa
mov
rcll
cmc
jno
cwtl
imul
out
outsb
imul
mov
hlt
cmpsl
inc
insl
mov
fnstcw
call
in
sbb
sub
mov
out
xor
adc
mov
push
jnp
push
mov
fbstp
int
out
jbe
cmc
push
push
scas
dec
hlt
pop
repz
or
jno
jbe
mov
mov
inc
adc
es
test
sub
add
xor
fisttpll
and
cli
bound
sub
mov
mov
xchg
cltd
aas
pushf
add
pop
in
pusha
and
enter
mov
movsb
sbb
lea
rorl
sbb
lret
jo
and
arpl
imul
cmp
xchg
mov
mov
hlt
imul
push
jnp
push
push
mov
adc
xchg
test
mov
int
pop
sar
jb
cmpsb
xacquire
aam
fst
jae
std
int
dec
adc
cmp
out
dec
jne
mov
xchg
sub
movsb
repnz
pop
test
int3
sbb
jecxz
mov
adc
xchg
or
je
push
stc
sub
popf
dec
lea
and
negl
cmp
ss
pop
out
sarl
loopne
bound
jnp
jl
and
push
cmp
mov
nopl
int
js
shl
inc
push
dec
es
or
in
jo
xchg
xchg
jge
iret
inc
mov
cld
xor
dec
mov
xchg
add
cmp
dec
xor
mov
jl
adc
push
sub
cmpsb
fsubrp
inc
inc
out
addr16
mov
ret
cmp
push
pop
push
mov
dec
hlt
test
je
mov
scas
pusha
push
adc
rcrl
mov
push
xabort
add
xchg
popf
adc
cmc
lods
cmp
shr
repnz
and
cmp
test
sub
daa
mov
lock
stos
sub
mov
nop
jae
cmpsb
std
outsb
mov
stc
fs
cwtl
ljmp
xchg
ds
xor
sub
mov
nop
pop
mov
cld
iret
and
push
pop
scas
sub
xor
mov
int3
jae
aad
pop
cmc
ret
repnz
sbb
shr
dec
adc
mov
inc
jne
call
scas
js
add
in
fs
or
jg
jb
push
and
enter
rclb
or
lret
mov
pop
adc
cmp
aam
xor
and
mov
js
aaa
lods
dec
cmp
mov
ja
testb
imul
ljmp
fisubs
push
enter
add
sbb
orl
sqrtps
shrl
in
xor
dec
mov
add
aaa
sbb
dec
out
push
add
push
cmp
out
fwait
inc
xor
js
dec
jo
fs
push
jno
or
cmp
clc
and
jge
sbb
adc
jmp
lds
jae
cld
test
push
mov
jmp
dec
mov
movsb
jne
stos
int3
pop
pusha
loop
imul
xchg
mov
enter
mull
sub
into
dec
mov
jno
dec
dec
in
dec
lods
lahf
pop
cmp
jp
cld
gs
ss
ja
mov
sub
sahf
jmp
in
sahf
adc
in
test
outsl
popa
mov
ret
pop
loope
mov
mov
subb
xchg
or
pop
push
pop
outsl
pop
sbb
incb
inc
lock
sbb
dec
push
cmp
jnp
shl
fcoml
inc
push
push
int
adc
sbb
push
jns
add
subl
lods
fsubs
xchg
imul
pop
push
in
push
push
sahf
xor
sbb
xchg
stos
cld
sbb
xchg
jl
adc
adc
enter
ds
das
fsubrs
sbb
inc
pop
xchg
jp
movsb
jmp
cs
mov
ret
scas
mov
cwtl
mov
mov
shlb
int
aam
inc
mov
or
push
in
out
ret
sarl
jl
cli
or
xorb
dec
sbb
ret
jg
push
bound
inc
mov
les
and
jecxz
cld
jecxz
sub
cmc
adc
xchg
rclb
push
bound
add
in
xor
pop
pop
mov
scas
sti
std
lock
daa
movb
call
xorb
je
jbe
push
mov
jo
inc
mov
mov
scas
cli
xchg
mov
mov
nop
mov
movsl
ss
cltd
aam
hlt
pop
repnz
xchg
cmp
sbbb
mov
cmp
sbb
mov
rcrb
mov
mov
pop
or
push
sbb
mov
push
lea
insb
neg
xchg
in
popw
in
xor
icebp
cmp
xor
pusha
pop
testb
cld
sbbl
xor
mov
inc
lea
loopne
jl
xchg
movsb
out
insl
push
popa
loopne
test
sbb
xor
lea
pop
fistpll
int3
ds
pop
mov
adc
fldcw
cli
std
ret
sub
cmpsb
sbb
outsb
leave
cs
lcall
inc
add
jo
cld
sbb
fadds
inc
and
outsb
mov
neg
mov
lods
xchg
sbb
cmp
sti
aad
daa
dec
imul
xchg
jne
mov
sub
sub
into
cmpsb
cmp
sub
shll
dec
mov
add
movsb
or
int3
es
out
dec
xchg
xlat
imul
iret
sub
lods
xlat
push
xchg
pusha
sub
rorb
loop
clc
inc
lods
bound
pop
imul
clc
xor
inc
lret
push
loope
das
mov
cmp
scas
sub
int3
pop
mov
sarb
pop
das
pop
dec
add
xchg
push
cmp
sbb
add
xchg
call
push
sbb
std
xchg
sbb
push
dec
xchg
and
cmp
jns
stos
jnp
leave
outsl
push
imul
scas
dec
test
cmp
and
adc
inc
stos
popa
pop
inc
faddp
leave
subb
js
lahf
imul
xchg
pop
stc
je
outsb
xor
jno
data16
ret
jecxz
push
sub
cmp
or
outsb
fidivrs
in
inc
mov
inc
xor
inc
jne
imul
testb
in
std
inc
mov
push
adc
xor
insl
stc
mov
mov
rolb
jno
int
test
jno
or
sarb
adc
push
pop
fmull
xchg
mov
adc
les
adc
inc
push
sub
sbb
insb
insb
dec
mov
sub
inc
inc
pop
jge
cmpsl
outsb
clc
shl
mov
lock
or
mov
mov
add
mov
add
ja
sub
adc
add
sbb
mov
fldt
repz
push
mov
scas
les
mov
pop
clc
movsb
out
mov
mov
insb
fnstcw
push
rolb
jge
int
pop
es
adc
incl
or
scas
and
jmp
and
sti
cmpsl
popf
inc
fwait
sbb
addl
and
js
cmp
mov
jge
jecxz
xor
loop
jge
mov
imul
ret
movl
xchg
in
lods
subl
sahf
mov
and
out
mov
mov
scas
pop
les
sbb
lret
dec
mov
orb
pop
jnp
stos
stc
jae
sbb
stc
jbe
gs
jo
jecxz
rclb
xchg
lock
mov
or
xor
repz
jbe
into
mov
and
pusha
push
scas
ljmp
int
lock
icebp
mov
adc
jecxz
dec
cmp
f2xm1
in
insb
test
xchg
xor
outsl
adc
xor
sbb
pop
mov
arpl
cwtl
fidivs
lret
das
jmp
es
inc
pop
enter
and
fsubl
in
fisttpl
out
ffree
test
imul
xchg
xchg
fstpl
stos
stos
iret
int3
lock
jo
dec
scas
jns
add
sbb
xchg
mov
add
xor
fsubrs
leave
pop
add
push
adc
xchg
inc
fisttps
arpl
dec
arpl
push
xchg
xor
iret
adc
mov
pop
gs
sub
cmp
insl
xchg
shlb
pop
add
aaa
js
into
mov
cmp
das
repz
xchg
and
push
pop
inc
sarb
jge
and
cmp
push
pop
das
mov
push
mov
cmc
jnp
xchg
push
push
xorb
jl
loopne
inc
lret
aaa
add
inc
mov
in
or
scas
outsl
lods
aad
adc
mov
andb
into
ret
rolb
xchg
dec
pop
mov
and
jg
ljmp
les
fmul
mov
je
and
lcall
mov
je
jbe
aad
test
lock
or
jge
inc
cltd
cmc
repz
ds
cmp
xchg
mov
push
test
outsl
mov
inc
jl
into
add
int3
or
xchg
mov
push
xchg
pop
pop
pop
arpl
lds
pop
ficomps
push
sub
fwait
jno,pt
in
xchg
nop
mov
lea
push
sub
cwtl
movsl
mov
flds
mov
and
cwtl
ds
loop
or
xlat
gs
dec
test
pop
popf
push
pop
jne
fstpt
les
jl
cmp
std
imul
and
push
mov
pop
nop
inc
jl
xchg
cmp
jp
rcll
mov
jo
fimull
inc
add
xor
popl
xchg
fwait
push
mov
pop
mov
jo
jbe
aam
popa
out
cs
mov
addl
jl
fsubr
adc
pop
pop
xchg
insb
mov
call
shrb
lahf
sahf
imul
cmp
jl
scas
xlat
out
xchg
mov
test
lret
pushf
mov
hlt
mov
mov
mov
mov
jecxz
cmpps
or
mov
or
lcall
push
dec
pop
dec
and
imul
rcl
and
sbb
jbe
pop
jmp
cld
xchg
scas
inc
orb
out
inc
imul
popf
outsl
add
fldenv
ss
das
xlat
xchg
imul
xchg
loope
shl
push
int
fcomps
mov
and
ret
mov
push
dec
nop
movsl
in
fbstp
subl
les
inc
jmp
cmp
push
incb
cmc
pop
jl
daa
dec
xchg
popa
rclb
stc
add
fadd
arpl
cmp
inc
sub
xor
std
mov
push
cmpsl
call
inc
push
jno
and
lahf
loop
dec
pop
pop
outsl
inc
add
push
cld
inc
pop
sub
stos
adc
and
sub
lea
out
jbe
cmc
push
pop
addr16
ja
mov
cmp
stos
mov
aas
bound
orl
jns
mov
mov
dec
icebp
and
sbb
sti
fucomp
xlat
xchg
lods
in
aaa
enter
hlt
pop
cs
scas
mov
es
lods
outsl
inc
hlt
xor
jge
jl
mov
dec
rcll
mov
fistl
jmp
cmp
out
cmc
shrb
sbb
xor
add
lret
xor
jmp
in
in
lock
pop
popf
push
or
lds
pop
sub
jecxz
inc
push
mov
fs
xchg
sbb
fidivrl
pop
adc
push
xor
dec
pop
push
bnd
mov
xor
push
mov
pop
pushf
jb
push
sahf
mov
mov
sub
sub
movsb
lret
imul
push
leave
shll
add
xor
fdiv
out
sub
enter
or
cld
loopne
repnz
ret
xor
xchg
cli
or
test
aas
sbb
inc
sub
je
adc
sbb
xchg
mov
das
test
iret
pusha
jecxz
xor
int
mov
sub
popf
cwtl
jg
xchg
not
jo
inc
je
andb
cwtl
test
mov
daa
dec
lods
xor
scas
xchg
mov
rclb
aas
stos
out
sbb
sub
stos
xchg
xchg
adc
in
rep
lds
pop
inc
sub
out
xlat
out
add
hlt
mov
dec
cli
cmp
xor
aad
lcall
cmp
jno
pop
mov
pop
pop
lahf
xchg
mov
mov
inc
fsubr
mov
stos
out
repz
loopne
stos
cmp
adc
lods
inc
pop
push
dec
out
jb
daa
nop
xchg
shll
cwtl
stos
scas
inc
lods
and
lds
xor
mov
je
rcrb
mov
out
dec
xor
jo
jecxz
sub
inc
xor
adc
in
popf
mov
rcll
outsb
fcoms
fnsave
xor
andb
mov
sbb
js
cmp
sub
sub
cmpsl
cli
aaa
push
inc
add
icebp
xor
inc
gs
jmp
stos
repz
add
loope
mov
adc
lret
xchg
add
addr16
fucomi
ss
ret
mov
mov
mov
fidivrs
ljmp
mov
jmp
mov
lret
jo
lea
icebp
xchg
cld
xchg
pop
lds
repnz
cwtl
mov
out
aad
push
add
lods
shrl
int
outsb
cmpsl
cwtl
add
push
inc
inc
pushf
xchg
and
cli
sub
pop
in
xchg
mov
xchg
push
sbb
std
test
loop
sbb
sbb
cmpsl
ret
adc
and
seta
sbb
mov
dec
enter
adc
push
push
xchg
xor
mov
cmpsb
inc
cmp
das
ja
mov
push
fdivs
shll
cmp
inc
pop
in
pop
pop
les
jo
insb
pop
add
mov
push
pop
add
sahf
push
test
vmovss
sbb
in
ja
pop
sqrtps
insb
pop
testl
hlt
js
pop
xor
popf
shrl
jno
lcall
pushf
mov
int
insl
inc
ja
cmp
dec
fcmovne
jno
nop
nop
sbb
stc
mov
imul
aam
repz
mov
pop
sbbl
stc
push
sub
call
rclb
scas
dec
pop
idiv
push
lock
outsb
sti
adc
or
jecxz
ss
pushf
fnstenv
in
inc
mov
cmp
arpl
push
mov
mov
add
cmp
pop
fucom
sbb
inc
dec
jne
movntps
mov
test
loopne
lahf
leave
sub
and
push
lods
cmp
ljmp
mov
cmpsl
inc
loope
lret
aas
pop
andb
pop
mov
aas
ret
add
and
dec
inc
cmp
add
fiaddl
ja
sahf
ss
aad
mov
inc
pop
push
or
or
cmp
mov
inc
loopne
jmp
rcrl
lods
outsl
outsb
cmp
fcomps
scas
xchg
and
filds
sub
lods
out
inc
mov
cmp
decl
bound
cli
rorl
rcl
ja
arpl
push
mov
adc
rcrb
gs
dec
imul
jg
xor
xchg
cmp
pop
movsb
and
push
adc
adc
sbb
or
sub
pop
and
mov
ds
cmp
pop
mov
stos
iret
mov
mov
pop
data16
hlt
and
loop
daa
cli
addr16
pusha
adc
xchg
test
mov
xchg
movsb
lret
outsb
fdivr
shlb
fwait
pop
aas
call
mov
iret
fwait
jo
andb
je
outsl
mov
sbb
push
jle
jg
sub
pop
xchg
ret
jb
or
outsl
xor
test
push
mov
lcall
stos
outsl
out
jo
jae
out
dec
test
dec
ss
and
pop
repz
sub
rclb
adc
pop
shrb
add
loopne
xlat
movsb
lcall
subb
push
mov
shrb
aas
aam
dec
sti
bound
fistpl
adc
push
bound
inc
popa
add
in
pop
mov
data16
mov
mov
mov
cmp
imul
stos
int
mov
sbb
ret
cmp
xor
pop
cmp
mov
imul
bound
mov
aam
add
cwtl
mov
sub
push
push
adc
outsb
es
jo
fs
push
jbe
js
inc
sub
pop
loop
shll
pop
mov
dec
mov
popa
std
push
into
sbb
xor
adc
ljmp
xor
in
adc
roll
fiadds
popf
push
or
cmp
insl
dec
and
lock
mov
ss
ss
jae
cmp
popf
mov
xor
xorl
push
icebp
pop
std
cmp
cltd
push
pop
cmp
sub
push
jmp
inc
int
aam
inc
fwait
or
stos
fstpt
mov
aas
add
adc
andb
jne
cmpl
es
jmp
loopne
nop
cmpsb
lret
mov
push
mov
push
push
mov
out
fs
mov
pop
addr16
adc
mov
mov
mov
sbb
ret
ljmp
mov
loop
fildll
repnz
cmpsl
je
mov
jns
lret
dec
dec
mov
xor
orl
out
sar
jp
mov
jb
pop
ljmp
xchg
cmpb
ret
jne
cmpsb
js
iret
inc
and
inc
inc
inc
shrl
mov
hlt
sbb
outsl
sbb
clc
add
das
mov
imul
icebp
fs
movsb
add
sbb
jg
int3
mov
cli
push
stos
push
dec
mov
test
push
imul
push
into
mov
push
arpl
and
xchg
mov
push
cmp
jg
pop
loop
std
in
std
fwait
out
jle
xchg
rol
jne
jbe
cld
sub
dec
jae
repz
xchg
and
aad
xchg
jae
mov
and
jmp
pushf
loop
insl
jp
cmp
ja
push
cli
scas
int
pop
and
in
mov
mov
shlb
and
mov
test
lret
in
pop
mov
fbld
mov
push
aam
and
loop
mov
test
out
xor
sbb
aam
mov
inc
xchg
js
cmp
jge
imul
push
and
rcr
mov
pop
fs
sub
lea
xor
xor
xor
ficoms
int3
pop
lock
add
repz
movups
cmp
outsb
cmp
inc
out
mov
mov
jp
jae
mov
lcall
invd
hlt
std
mov
push
mov
mov
jnp
add
imul
mov
mov
bound
adc
lcall
mov
sbb
popf
aas
clc
popa
cmp
in
dec
insl
or
clc
adc
sub
aam
data16
inc
mov
cwtl
stos
les
fidivrs
mov
addb
mov
add
in
cmp
dec
fsubrl
popa
loope
imul
adc
xchg
lock
jecxz
call
in
or
cmpsl
je
fnstsw
repz
or
mov
add
push
xor
in
xor
repz
push
pushf
int3
ja
dec
push
sbb
mov
jne
xorb
inc
inc
loope
call
inc
daa
jle
jns
repnz
inc
sbb
push
jbe
add
mov
test
lods
fst
mov
pop
adc
lock
nop
jl
sub
addr16
lds
push
sbb
ss
mov
insb
jecxz
add
and
adc
add
dec
sbb
aaa
hlt
xchg
adc
xor
test
mov
loopne
les
loop
mov
loop
mov
push
push
pop
add
hlt
jne
cmp
adc
pop
aas
lret
push
mov
jmp
loope
out
imul
xor
adc
xchg
fucom
mov
adcb
test
pop
sbb
mov
ljmp
add
into
adc
jb
dec
and
pop
int3
femms
ret
ss
or
push
push
iret
arpl
sub
sub
jno
dec
or
xchg
lret
mov
inc
cmpb
xchg
xor
sub
nop
add
leave
push
fwait
cld
popa
xchg
jnp
ret
push
mov
or
pop
stos
xchg
xchg
std
mov
in
inc
lods
push
cs
sbbb
cltd
add
repnz
inc
cld
sub
and
insl
dec
xchg
add
das
aam
mov
cli
aam
add
lea
jge
sub
xor
imul
sub
and
enter
or
xor
mov
push
daa
sub
cmpsb
push
inc
cmp
dec
lea
cmp
mov
dec
ja
fildl
add
sub
lods
int
ss
fstpl
clc
ljmp
pop
or
dec
in
ret
push
push
jp
jmp
jo
dec
mov
pop
mov
sbb
cli
dec
push
xorb
pop
jecxz
ret
mov
popa
fdivr
sub
pop
inc
pusha
adc
nop
lock
frstor
sbb
movsb
xchg
cmp
arpl
icebp
scas
ret
push
push
pushf
test
in
adc
mov
cmp
enter
xor
add
loopne
fisttpll
or
imul
mov
mov
xorb
dec
jge
call
das
fldt
mov
rcll
mulb
mov
jmp
out
inc
jne
jns
ljmp
dec
push
dec
adc
sub
jle
movsl
fwait
adc
ss
cmp
cmp
fiadds
fstps
sub
sub
jl
and
xchg
in
out
cmpsl
aad
jl
jl
add
scas
mov
or
or
dec
sahf
int
add
test
push
pushl
jle
xchg
lods
nop
cmp
mov
aad
cmp
xlat
lea
cmp
sbb
shlb
mov
inc
dec
bound
jmp
icebp
push
mov
jle
and
cmpsl
addr16
int3
out
and
rcr
mov
lods
xor
clc
test
xchg
addr16
mov
jge
jo
vpaddusb
and
divl
popa
int
cmpsb
jnp
testl
xchg
enter
mov
bound
aad
sub
into
mov
adc
fsub
push
mov
imul
pushf
add
xor
movsl
das
testb
lcall
mov
mov
call
mov
out
push
cmp
pop
pop
push
and
mov
cmp
and
push
clc
pop
testl
mov
pop
es
lea
pop
imull
lods
xor
stc
mov
popf
mov
pop
stos
and
cmpsb
les
les
mov
stc
lods
mov
dec
xchg
fwait
sbb
inc
xor
mov
pop
dec
loopne
jle
ret
movsb
cmp
mov
add
rol
or
mov
shr
loope
or
loopne
bound
sarb
cmp
jns
jnp
sarl
xlat
loope
out
mov
movsl
xchg
mov
mov
aaa
pushf
addr16
sub
mov
lods
lahf
leave
cld
popf
outsl
test
push
xor
fwait
mov
out
in
jmp
fidivs
xchg
lea
mov
cld
int3
dec
ficoms
adc
jecxz
daa
orl
imul
add
mov
jns
sub
addr16
insl
xchg
cmp
jp
in
ja
mov
add
iret
push
loop
add
sbb
fsubrs
mov
xlat
jo
das
test
push
mov
outsb
mov
push
fldl
enter
je
mov
rep
mov
or
pop
xor
dec
adc
adc
fwait
movsb
sbb
cld
pop
dec
pop
xlat
adc
mov
push
flds
les
cltd
call
sub
stc
sbb
pop
addr16
pop
cmp
in
imul
ret
outsl
xor
and
mov
sub
imul
mov
pop
push
mov
cmpsl
fwait
lret
adc
clc
cmp
mov
push
in
inc
cs
xor
mov
and
cmpl
mov
jge
push
cmp
sarl
mov
int3
dec
dec
sub
push
ljmp
ret
int3
mov
push
inc
out
jae
sub
xor
jae
mov
aad
int
aaa
hlt
les
jns
mov
push
pushf
inc
mov
insl
loope
ret
mov
aaa
adc
inc
push
sbb
ljmp
outsl
or
pushf
shrl
pushf
mov
stos
ret
pushl
pop
or
adc
std
mov
lods
daa
outsb
jecxz
cmc
push
sub
imul
mov
jns
push
or
fldl
negl
sbb
sbbl
adc
inc
arpl
shlb
lret
iret
pop
jge
sti
fsubrs
mov
pushf
jl
jmp
xchg
mov
sub
outsl
lock
inc
fs
lret
fs
cmpsb
adcb
mov
push
lret
mov
shll
dec
pop
jmp
xor
xchg
jns
or
rcll
mov
arpl
cld
jecxz
cmp
pop
inc
call
scas
movb
xorps
iret
sarl
push
outsb
mov
sti
sahf
adc
xor
imul
inc
pop
xchg
sub
or
mov
inc
inc
pop
repnz
lock
push
std
shrl
pop
orl
sbb
cmp
inc
cs
int
fs
inc
mov
sbb
stos
ss
adc
ret
std
ret
cmpsl
movsb
imul
scas
or
test
int
mov
int
mov
popf
add
icebp
in
cmpsl
jecxz
xchg
lds
ja
repnz
in
fimull
inc
int
xchg
fs
cmc
and
popa
or
pushf
and
and
leave
or
add
es
aaa
movsl
jbe
pop
shrl
icebp
ret
cltd
ss
test
lock
pop
adc
lods
outsb
or
mov
jbe
repnz
push
push
repz
sbb
rorb
or
xor
hlt
jge
add
fwait
jecxz
mov
nop
inc
mov
xchg
mov
lret
sub
mov
fildl
rcrl
decb
scas
repz
xor
stos
into
adc
sub
pusha
add
pop
ret
xor
cmpsl
and
pop
iret
ss
mov
push
out
inc
lock
test
cmpsb
shrl
filds
fldt
push
insb
push
and
mov
mov
lret
pop
adc
xor
or
clc
lea
das
enter
loope
adc
adc
and
mov
call
mov
sbb
push
xor
lret
repnz
cmpb
and
lret
sahf
xchg
jp
push
xchg
sarb
and
movsl
enter
imul
in
iret
xchg
aas
dec
pop
xor
or
mov
push
push
cmp
stc
in
movlps
xor
mov
inc
cmp
stos
movsl
ret
xor
jae
ss
mov
pop
int
outsb
pop
pop
jecxz
iret
xchg
inc
lock
xor
ss
ja
xor
sub
adc
xchg
cmp
inc
iret
out
inc
bound
push
mov
xchg
xor
xchg
scas
cmp
xchg
roll
mov
lahf
xor
xchg
bound
sti
pop
cwtl
inc
and
inc
add
jecxz
fbld
xlat
ffree
jae
fs
sub
xchg
or
test
mov
and
jl
leave
enter
aad
mov
xchg
lcall
out
mov
or
push
pusha
orl
rolb
rclb
popa
ljmp
test
loopne
loopne
gs
lods
sarl
mov
xor
xchg
test
int
sahf
popl
mov
mov
test
jne
loope
call
xlat
dec
xchg
dec
mov
bound
stos
pop
pop
dec
je
adc
push
iret
add
jo
inc
xlat
sbb
lcall
xor
leave
int
dec
lods
insb
bound
insb
into
pop
lret
sbb
push
mov
lods
cmpsl
aad
and
stos
dec
test
andb
insb
pop
pop
mov
xlat
dec
adc
icebp
mov
adc
mov
xchg
dec
sbbl
cwtl
inc
inc
dec
xor
into
fiaddl
sbb
push
sub
fwait
outsl
push
dec
mov
push
cli
gs
cmp
mov
sarl
mov
mov
dec
cmp
sub
add
add
add
jmp
cmp
xchg
aad
repz
add
fs
xor
sub
loope
lock
arpl
pop
ret
ja
cld
jmp
movsl
sbb
repz
mov
aaa
pop
adc
add
pop
adc
jo
mov
mov
sbb
int
cmpsl
lea
xlat
stc
dec
sbb
dec
jl
loopne
jg
xor
sub
push
stos
inc
xor
or
xchg
in
or
xor
mov
sti
cwtl
test
ret
lock
addr16
inc
popf
xlat
int
cmc
and
sbb
enter
outsb
sbb
jle
test
repz
xlat
mov
in
fidivrl
sub
push
popf
div
les
mov
jecxz
ret
xchg
cmpsb
mov
add
fimuls
push
xchg
out
dec
std
inc
sti
cld
stos
shl
jno
inc
inc
daa
fistpll
pop
pop
cmpsb
out
ljmp
sbb
ljmp
test
mov
xchg
addr16
in
leave
xchg
add
sub
sahf
mov
int3
inc
xor
push
and
popa
inc
int
jae
jbe
jb
pushf
inc
push
add
push
shr
add
mov
mov
or
outsl
push
pop
dec
sub
loope
mov
xchg
jl
push
je
out
jecxz
in
lret
test
or
jl
sub
fisubs
jnp
scas
aas
pop
add
in
xlat
jl
mov
in
xor
leave
lret
iret
adc
xorl
test
or
decb
xor
test
sbb
xchg
test
lret
imul
xor
mov
ficomps
loop
mov
dec
sbb
addr16
cmpsb
pop
adc
xchg
mov
in
add
movsb
repnz
xchg
pusha
leave
jns
sbb
jg
inc
push
jge
pop
dec
adc
and
hlt
rcrb
pcmpeqb
dec
data16
cli
push
mov
test
xor
fstpl
mov
push
jmp
repz
std
and
in
es
cltd
loop
mov
mov
mov
inc
fldcw
orb
stc
mov
pop
cmpsl
test
dec
sbb
icebp
adc
cmp
std
lods
and
cmpsb
enter
mov
pop
lods
xor
out
in
cmpsb
test
xor
outsb
ja
lcall
mov
addb
cmp
lock
movsl
imull
dec
repnz
jle
mov
inc
sbb
pop
jae
mov
andb
push
cmpsl
jne
and
push
shl
imul
out
sbb
cltd
jbe
out
sti
call
pop
adc
lds
test
and
aad
mov
cmp
sub
pop
loopne
and
ror
mov
imul
dec
xchg
lahf
push
cmp
inc
sub
push
mov
movsb
icebp
or
les
ds
pushf
and
test
sub
mov
pusha
adc
adc
mov
sbb
pop
jl
ret
and
add
faddp
movsl
out
xchg
jnp
lret
shlb
je
in
sahf
and
daa
adc
xchg
push
sub
mov
in
mov
cmpsl
mov
xlat
out
xor
in
out
sbb
pop
je
daa
das
fwait
outsb
subl
and
xchg
sbb
inc
xor
ljmp
inc
sbb
cs
sub
lock
leave
into
mov
pop
inc
aaa
jg
pushf
adc
and
xor
sbb
ja
mov
push
fnstenv
hlt
mov
icebp
inc
push
xor
xchg
or
adc
lods
test
xchg
data16
sbb
out
rorb
or
fcompl
add
sub
dec
int
shrb
sbb
aaa
xchg
sbb
testl
out
push
negl
sub
mov
add
dec
cmp
inc
push
sbb
mov
scas
or
mov
mov
xlat
cmp
and
and
in
jns
sub
in
push
mov
push
pop
sbb
inc
inc
pop
xchg
pop
sub
outsl
sub
add
xchg
xchg
jnp
pop
mov
std
flds
add
pop
pop
xchg
sbb
iret
or
faddp
cmpsb
dec
sbb
add
in
popl
pslld
cwtl
lods
fadds
insb
cmp
cld
pop
js
lea
das
test
mov
mov
push
dec
mov
inc
mov
pop
ret
lods
cmpsl
inc
fisubl
cmp
push
iret
inc
or
mov
cmp
xchg
mov
pop
sub
dec
inc
int
push
popf
repnz
sbb
and
sub
push
mov
inc
fnstenv
xchg
ljmp
out
jne
jnp
test
xor
mov
fsubrs
inc
cld
jl
cmp
aaa
aas
daa
xchg
lahf
inc
pop
test
push
gs
add
inc
gs
and
mov
push
xor
cwtl
sub
dec
adc
sarl
inc
cmp
cmc
inc
jmp
or
inc
xlat
mov
cmpsb
adc
mov
push
popf
into
out
adc
xorl
lret
subb
lret
lock
sti
sub
das
lret
test
in
jmp
pop
pop
jo
mull
movsl
or
or
jns
mov
pop
fisttpll
adc
outsl
adc
int3
sbb
sbb
mov
xchg
add
push
mov
jg
cmp
rorb
vrsqrtss
aad
aas
fistl
push
and
push
cmpsl
push
adc
dec
sarl
movsb
out
rcr
cli
dec
repnz
sub
pop
sbb
ficompl
xchg
int
stos
pop
mov
xchg
mov
push
sbb
cmp
push
insl
movsb
mov
xor
push
jge,pn
js
jae
jle
inc
dec
outsl
lds
cmp
dec
xor
or
push
arpl
aad
push
dec
xchg
jne
push
rcl
lahf
xchg
hlt
adc
into
dec
int
mov
lahf
icebp
sbb
mov
mov
fistl
fcmovnbe
scas
mov
push
push
pop
adc
inc
push
push
add
or
add
icebp
inc
push
idiv
xor
jne
adc
push
test
xor
sahf
orl
mov
loopne
fcmovnbe
subb
sbb
imul
mov
cmp
inc
stos
rol
mov
xchg
jno
popf
fs
adc
lds
dec
mov
bound
mov
push
xor
mov
fldt
dec
sarl
add
pop
mov
imul
mov
daa
dec
add
mov
cmp
mov
fistpll
outsl
jge
lea
loopne
mov
jae
jne
cmpsl
sbb
mov
and
jg
rcr
pop
and
sti
imul
pop
hlt
xchg
add
push
dec
popa
mov
dec
mov
fwait
sar
fistps
cmp
stc
imul
or
cmp
xchg
mov
or
mov
mov
sub
loope
pop
push
ja
jge
pop
ja
add
add
xchg
loope
mov
mov
rorl
mov
ja
sbbb
add
mov
sbb
jmp
movsb
pop
pop
add
lahf
add
mov
jg
pop
insl
pop
sub
adc
rol
push
and
jmp
or
lods
xor
jno
mov
adc
adc
and
lret
repnz
xor
push
push
xchg
outsl
xchg
fisttpll
xor
loopne
js,pn
es
push
das
add
pop
push
leave
add
pop
cmpl
and
cmp
sahf
enter
addr16
inc
jae
clc
dec
push
xchg
enter
jp
popf
out
mov
fwait
outsl
mov
mov
and
pop
lock
lcall
jno
dec
adc
bound
scas
repnz
gs
fnstcw
jle
jp
jg
adc
sbbl
xor
adcb
jbe
mov
mov
jle
pop
cwtl
aad
jnp
sarb
rcrb
imul
xchg
ljmp
dec
pop
imul
mov
imul
iret
emms
jae
test
xchg
adc
daa
mov
fdivs
or
cmpsb
cmp
and
cmpl
jecxz
insl
fldenv
cmp
mov
loopne
aaa
fwait
sbb
cltd
cmp
clc
xor
xchg
aas
push
iret
pushf
int3
jae
xor
xor
test
push
rcll
xchg
mov
fstpt
cmp
mov
mov
or
mov
push
pop
les
cmc
mov
popa
and
adc
xchg
pop
call
or
add
inc
pop
adc
imul
xchg
push
cmp
shr
notl
sbb
pop
mov
jmp
mov
aas
push
cmp
mov
ret
stos
into
jl
rol
insl
cmp
sti
lahf
push
out
lret
mov
push
iret
in
vmread
xlat
and
lahf
dec
cmp
mov
jmp
das
inc
push
mov
cmp
shll
sahf
jecxz
ds
mov
inc
ss
add
push
mov
div
inc
out
aam
ja
out
js
dec
pop
inc
rcrb
and
mov
push
add
popa
ret
add
jmp
mov
jl
and
pushf
test
or
pop
add
push
mov
fnstenv
stos
mov
sahf
sbb
inc
jnp
xor
test
rorb
fldt
push
enter
jns
mov
sbbb
aad
hlt
mov
mov
mov
loope
cwtl
fcoml
dec
cmpsl
and
aaa
xor
push
pop
jle
cwtl
dec
jbe
xor
clc
popf
daa
popa
pusha
cli
ja
mov
lods
push
bound
lea
mov
jb
push
cmp
in
pop
hlt
jb
insl
es
popf
ljmp
test
pop
imul
out
xchg
pop
mov
aas
and
jg
mov
jge
sbb
pop
mov
dec
mov
les
cwtl
popa
add
push
icebp
push
shl
xchg
sbb
jecxz
jns
cld
stos
pop
hlt
arpl
and
popf
sahf
sbb
out
mov
es
fdivrs
xchg
lock
fs
pop
pop
icebp
and
sub
push
pushf
jecxz
or
mov
scas
iret
mov
shlb
cmp
xor
mov
hlt
packsswb
dec
adc
pop
jmp
mov
cld
in
push
mov
add
outsb
and
or
sbb
orb
shrb
push
mov
mov
addr16
div
xor
cltd
pop
sbb
jge
pop
adc
ret
dec
lret
out
sahf
adc
pop
sub
into
les
scas
adc
outsl
rorl
push
cmp
xchg
xlat
pop
inc
jmp
enter
xchg
and
icebp
int
dec
and
aad
ret
push
cmpb
ds
mov
xlat
and
cld
pop
aam
pushf
adc
test
xchg
std
mov
in
sub
movsl
push
jns
fimull
xor
lock
sub
prefetch
or
mov
xor
shll
jecxz
inc
mov
mov
inc
inc
mov
sbb
js
int
add
xor
mov
pop
push
sti
dec
sub
pop
in
orb
sahf
mov
or
dec
out
ss
push
aas
test
test
pusha
push
inc
iret
add
div
mov
je
push
aad
ret
clc
data16
dec
xchg
sub
loope
test
mov
adc
cmp
fwait
rorl
out
ljmp
add
ficoml
xchg
out
ss
fidivl
mov
mov
add
jbe
xor
dec
push
mov
aad
mov
fadds
xchg
in
cwtl
mov
jo
inc
lret
call
push
fiadds
mov
gs
lcall
aam
pop
adc
enter
xchg
in
or
or
stos
fs
inc
inc
out
inc
insb
sbb
mov
mov
push
jo
js
es
or
push
shll
sub
daa
xor
lcall
sub
inc
ja
in
jbe
outsb
mov
pop
add
mov
lret
add
lods
xor
lea
pop
mov
mov
test
or
inc
fwait
xchg
ret
jnp,pn
scas
cli
mov
inc
pop
mov
sbb
sbb
jne
testb
aas
fidivrs
cmp
movl
and
ss
mov
and
inc
dec
add
ss
push
popa
and
jp
outsb
jmp
repnz
xor
xor
dec
inc
xchg
orb
movsl
rcll
adc
adc
mov
fmull
nop
loop
push
sub
xchg
imul
out
sbb
pop
push
adc
sub
adc
call
sub
mov
cmpsb
mov
add
mov
popa
insb
or
jnp
out
cld
into
or
push
loope
insl
lea
xchg
mov
mov
or
cs
insb
mov
pusha
mov
sub
adc
stc
mov
aam
cs
lret
sar
push
jle
mov
into
or
mov
or
into
inc
call
mov
loopne
add
aaa
lods
lret
mov
aad
push
jno
xchg
dec
xchg
test
mov
mov
pop
push
jne
jae
orl
fstpl
loopne
in
rorl
push
jnp
sub
test
loop
lds
lret
mov
push
cs
mov
xor
test
je
lods
lods
mov
cmp
mov
imul
xchg
mov
xor
xor
addl
inc
pop
inc
xor
in
rolb
js
or
outsb
insb
iret
sbb
cwtl
popf
mov
mov
push
jb
enter
jno
mov
jne
add
fdivrl
mov
mov
jmp
add
scas
adc
scas
dec
mov
fnstcw
daa
sbb
sti
aas
outsl
stos
mov
mov
ja
dec
xchg
mov
hlt
arpl
add
xlat
mov
xchg
mov
mov
sbb
jecxz
enter
andb
lret
rolb
enter
arpl
mov
mul
lock
or
outsb
cmp
fs
cmp
jg
sar
rorl
or
add
in
jne
jle
sub
xchg
or
call
inc
sbb
fdivrs
xor
and
dec
outsb
and
aad
jle
insb
jmp
sti
lret
jno
xor
mov
int3
sub
sti
insl
jecxz
out
test
cmpsl
jecxz
into
aad
cmpsb
in
adc
mov
jbe
cmpb
cltd
jge
inc
add
lea
mov
jle
mov
jge
cwtl
cmpsl
push
inc
div
lods
insl
or
add
das
adc
mov
inc
shlb
push
xchg
data16
pusha
scas
sbb
ss
repnz
in
xchg
push
in
xor
insl
adc
cmp
mov
aas
mov
mov
push
fadd
inc
enter
daa
inc
cwtl
ret
insl
and
adcl
ss
xor
ja
cld
lods
inc
lods
ficoms
test
bound
lcall
call
fildll
jbe
jns
sahf
mov
js
test
sub
or
jp
xor
push
jns
cs
out
addb
cwtl
cmp
cmp
test
adc
das
mov
call
lea
fdivrp
push
mov
fisubs
les
adc
sub
xchg
sub
adc
fidivl
hlt
insb
pop
jbe
xchg
int3
xchg
sbb
lds
shll
bound
jbe
push
xlat
or
pop
inc
push
dec
test
add
in
and
arpl
insb
mov
adc
fsts
adc
in
sub
xor
or
adcb
call
push
push
pop
push
lods
scas
in
mov
lret
lods
sbb
fisubs
mov
lods
sub
out
cmp
push
lea
mov
jns
int3
or
mov
enter
push
xchg
lahf
push
xor
mov
shlb
ror
push
aad
add
dec
les
mov
mov
xor
mov
push
push
fisttps
repnz
and
sti
adc
outsb
push
jmp
xchg
aam
ficompl
pop
iret
adc
shrl
frstor
pop
shrl
or
aaa
ret
sub
loopne
pop
mov
jne
test
cld
jb
push
pusha
iret
ja
imul
pop
arpl
mov
imul
push
rorl
sbb
xor
xchg
inc
jmp
mov
mov
int
pop
rcll
out
xchg
jl
mov
aad
push
lea
and
or
dec
mov
and
pop
adc
xor
jge
dec
das
add
ret
in
pop
mov
test
scas
jmp
int
and
fldcw
cli
mov
sub
cmp
sahf
jl
nop
data16
add
sbb
loop
rcr
lret
stos
or
sbb
popa
rol
sarb
xchg
insb
mov
push
clc
popl
cmp
mov
push
push
aaa
int3
movsb
ss
ret
or
xchg
or
rcrb
scas
clc
jecxz
mov
mov
sbb
popf
dec
mov
jno
or
lcall
iret
xchg
adc
arpl
jnp
jnp
jae
hlt
loop
cmp
imul
jge
fwait
imul
sbb
sbb
pushf
pop
pop
push
adc
and
xchg
push
sub
sbb
aam
imul
scas
addr16
rolb
sarl
arpl
and
je
jmp
fldenv
jmp
flds
cmp
pusha
std
and
push
xchg
pop
adc
sub
or
aam
push
and
popf
sbb
push
aaa
nop
push
xchg
fistl
inc
jae
leave
psllq
notl
sbb
jns
gs
inc
loop
fisubs
jo
mov
add
mul
mov
testl
in
arpl
into
fadds
loope
jo
in
mov
inc
scas
mov
xor
aam
clc
loopne
pop
outsl
leave
jp
out
sub
mov
std
test
out
in
cwtl
nop
loope
and
push
jp
xchg
in
xchg
andl
dec
mov
jo
inc
jmp
in
dec
mov
imul
add
mov
hlt
shl
dec
push
or
add
lea
cmp
call
mov
sbb
aas
mov
cmc
and
pop
add
nop
js
movsb
sub
lods
pop
insb
mov
sbb
push
mov
pop
mov
xchg
repz
addr16
jp
icebp
inc
fildl
add
cmpsl
xchg
xchg
insl
icebp
push
push
xchg
addr16
cltd
pop
mov
aaa
pop
xor
pop
mov
popf
imul
push
fwait
mov
cmp
popf
push
sbb
inc
push
or
into
pushf
xchg
add
dec
add
dec
and
sub
cmpb
xor
dec
push
push
pop
cmp
mov
xor
push
sub
or
into
test
jmp
adc
push
add
int
push
mov
adc
push
add
lret
incb
les
jbe
mov
pop
inc
clc
cmp
push
jae
lcall
les
aam
dec
test
add
xor
lret
and
or
repnz
pop
adc
xor
pop
pop
push
fstpl
xchg
push
enter
lahf
imul
aam
xchg
std
cmp
imul
fcmovne
pop
push
iret
cmp
sahf
mov
and
call
pop
mov
xchg
push
push
movsl
add
adc
sbb
jg
popa
inc
movsb
mov
call
push
mov
mov
pop
int3
adc
add
mov
jne
cvttps2pi
lods
push
add
data16
stos
mov
jno
insb
jg
pop
pop
shl
lods
adc
leave
mov
pusha
mov
mov
mov
xchg
mov
sahf
mov
lea
testl
jae
inc
mov
pop
xchg
stc
mov
inc
fldcw
dec
inc
jo
movl
icebp
dec
add
pop
or
mov
pop
pop
and
loop
cmp
inc
adc
jns
add
adc
push
jo
cli
stos
push
sahf
mov
popa
cmp
lret
jb
stos
js
add
inc
lahf
sarb
mov
repz
shrl
and
add
daa
call
leave
xchg
jns
js
xor
js
push
hlt
pop
jb
xchg
adc
ss
out
popf
and
mov
es
xchg
outsb
xchg
testl
jmp
mov
mov
fldcw
movsl
pop
xorb
mov
push
mov
dec
add
dec
aam
xlat
faddp
mov
int3
in
das
mov
sub
arpl
mull
push
jnp
movsb
pop
icebp
jae
xchg
fnstsw
xchg
xchg
or
pop
jo
xchg
pop
mov
mov
sbb
enter
aas
enter
sub
les
ljmp
std
popf
lods
xchg
clc
xor
sahf
sahf
imul
pop
je
mov
and
roll
mov
inc
test
jp
add
aam
pop
ret
repnz
cmp
in
sarl
mov
popf
fwait
mov
aam
push
aad
push
xor
or
mov
rcrl
or
mov
mov
out
nop
xchg
dec
sub
jae
sbb
dec
dec
xor
ljmp
pushf
stos
jb
int
mov
xchg
mov
sbb
test
xchg
mov
cwtl
aam
xor
sub
in
xchg
into
xchg
sub
xor
pop
lcall
sahf
dec
ds
jb
in
ds
imul
sub
mov
dec
mov
out
xor
jae
sub
add
cmp
sbb
xchg
cmp
inc
loopne
pop
into
ljmp
or
shl
sub
jb
adc
pop
rolb
enter
jne
dec
cmp
jo
mov
jae
sbb
sbb
mov
iret
cmc
mov
mov
aaa
dec
jb
add
dec
sbb
add
mov
mov
aad
sbb
outsl
and
inc
push
and
and
popa
testl
mov
stc
repz
mov
or
push
mov
push
fs
xchg
loop
xor
xor
enter
xchg
sbb
pop
jns
outsl
movsl
mov
mov
rorl
add
push
push
sbb
inc
mov
push
pop
adc
adc
push
outsl
push
outsl
add
aad
dec
sub
fwait
jb
cmp
out
dec
clc
inc
int
movsl
pop
std
shlb
jb
xchg
sbb
ret
xor
pusha
lret
inc
loope
aad
push
cmp
incb
push
shr
leave
sarl
push
or
adc
out
push
mov
sub
adc
lods
xor
scas
int
ljmp
jns
add
and
in
push
es
and
stc
outsl
test
inc
xchg
ds
jl
push
testb
xchg
movl
and
fs
je
imul
sub
in
mov
pusha
xchg
sub
cmp
inc
lahf
inc
xchg
cmp
lret
cmp
lods
nop
dec
xchg
dec
lcall
jg
out
mov
mov
sahf
or
movsb
rcrb
jg
cmp
jns
jno
inc
sub
and
js
sub
call
add
lahf
cmp
out
mov
fcomip
mov
cmp
mov
jb
xchg
push
popa
jge
out
fcoml
cmp
aam
out
es
inc
pop
push
out
outsl
adc
pop
pushf
test
std
lret
cmc
jmp
and
movsl
dec
pusha
lcall
pop
jbe
imul
push
push
adc
je
jbe
xchg
xchg
cltd
and
hlt
rclb
arpl
mov
lods
adc
loopne
imulb
pop
fsubl
movmskps
or
jne
cmp
and
pop
dec
call
roll
push
adc
stc
dec
sbb
ljmp
cwtl
pop
push
xchg
inc
xor
mov
cmp
pop
lret
addl
loop
out
sbb
jge
inc
sbb
cmp
aas
mul
jge
xchg
pop
adc
out
into
into
movsl
sub
push
stos
shrb
addr16
out
mov
les
jmp
pop
and
adc
and
jecxz,pt
add
imul
movb
inc
cs
cmp
pop
pop
sbbl
out
outsl
jge
jo
ret
xor
dec
inc
sbb
cmp
cs
jg
mov
ds
mov
mov
out
in
cmc
add
cltd
dec
cmp
dec
pop
in
inc
pop
aad
fmulp
rolb
xor
faddp
cmp
clc
mov
sar
popf
xor
mov
or
pop
stc
sahf
push
movsb
shlb
mov
cltd
fs
cld
pop
and
data16
pop
sub
loopne
cli
pop
call
ret
fsubs
inc
cmp
or
aas
jnp
in
out
jnp
inc
es
dec
imul
fcmovnbe
outsl
or
mov
cmp
add
xlat
pop
pop
dec
das
or
jle
mov
lods
test
or
push
pop
cmp
mov
push
push
lret
fcmovb
ss
enter
repz
call
inc
mov
stc
ljmp
test
or
lcall
in
and
movl
pop
push
leave
push
stos
and
arpl
xchg
add
add
test
dec
xchg
shr
imul
movsl
addr16
cwtl
add
std
pop
out
push
adc
xchg
sub
das
push
or
clc
out
sti
popa
arpl
repz
je
enter
sti
dec
imul
add
pop
nop
jns
or
push
pop
fsubr
pop
rclb
stos
xchg
fdivrs
add
mov
mov
push
pop
imul
push
loopne
ljmp
or
mov
mov
inc
lcall
pop
shl
pusha
gs
aas
out
jae
subl
add
xor
jmp
mov
jns
or
icebp
sub
and
push
clc
jg
xor
jo
inc
rorl
pop
mov
stc
sub
mov
mov
gs
lret
mov
xchg
pop
mov
inc
pop
scas
rol
fstps
data16
adc
jae
fistps
cli
imul
lds
jmp
push
test
mov
jge
outsl
jmp
jne
cmovno
push
loopne
fucom
scas
mov
lret
sbb
fistl
enter
jmp
push
fldenv
rorb
or
insb
add
lret
jb
lahf
push
stos
mov
imul
mov
mull
dec
dec
sti
adc
mov
sbb
je
cli
lods
push
daa
add
jecxz
push
xor
out
or
sub
push
popa
data16
leave
cmc
lock
ret
ficomps
jecxz
lahf
xchg
xchg
inc
rcll
sbb
call
into
scas
and
loopne
popa
push
push
adc
dec
fildl
push
or
mov
std
out
fsubs
pop
cwtl
sbb
imul
cmpsb
inc
es
out
inc
add
aad
pop
pop
mov
jo
fs
dec
insb
inc
sub
inc
mov
push
xchg
mull
mov
push
cmp
pusha
sbb
xor
ljmp
int
in
popa
push
insb
pop
xchg
mov
pop
xor
push
aad
lahf
xchg
mov
lds
cwtl
sbb
mov
inc
sub
jbe
pop
xchg
mov
mov
daa
mov
test
sub
mov
addr16
into
ljmp
and
jbe
aaa
imul
ds
aas
pusha
adc
xchg
pop
mov
pop
push
add
or
push
icebp
leave
or
aad
dec
jle
loope
decl
push
in
or
frstor
jmp
add
outsl
cmp
mov
jns
pop
out
push
jbe
and
ss
aam
sbb
jns
stos
push
lods
lds
aam
adc
ds
push
mov
inc
add
push
and
fnstenv
dec
xor
mov
cmp
js
call
inc
sub
out
push
stc
mov
or
sub
decl
jg
adc
dec
mov
movsl
shrb
test
push
cld
orb
repnz
or
jns
pusha
xlat
xchg
fistl
pop
xor
jmp
push
jmp
xchg
aas
and
cmp
inc
stos
js
aad
cli
decl
mov
ljmp
mull
sub
mov
sahf
push
pop
roll
cld
cmc
jns
or
push
iret
std
outsb
pop
or
dec
data16
iret
inc
shrl
dec
jl
mov
push
adc
aaa
xchg
or
adc
clc
rolb
jl
aas
jmp
ret
shrl
test
mov
push
dec
stc
gs
jecxz
sbb
add
mov
jb
imul
ret
fisttps
pop
scas
push
add
mov
xor
xchg
fcompl
push
lret
arpl
cli
out
loop
fimuls
jnp
add
pop
inc
inc
mov
jge
lret
xor
xor
inc
andb
outsl
or
pop
add
jmp
xchg
in
leave
inc
or
adc
in
in
jne
popf
or
mov
push
cmp
cltd
sahf
adc
adc
pusha
aaa
mov
or
mov
push
addr16
fwait
mov
mov
sbb
dec
sti
cmp
lods
dec
sub
mov
jle
pop
test
lock
xor
cmpsb
ret
xor
push
jnp
inc
dec
xchg
sub
mov
push
adc
push
cmp
outsl
pop
rolb
mov
mov
cmp
data16
aaa
jno
jg
dec
adc
out
pop
and
insl
fucom
cmpsb
dec
mov
out
cmpsl
iret
adc
sarb
int3
mov
sub
in
mov
jnp
sarl
jns
imul
pushl
les
lea
and
xchg
sbb
cmp
aad
cmp
cmp
imul
inc
xor
lahf
jle
scas
sub
pop
add
outsl
in
ds
and
sub
pop
sub
popa
cmp
and
mov
insl
adc
popf
enter
arpl
jge
leave
mov
xchg
pop
adc
push
loope
js
decl
jo
cmpps
xchg
cmp
stc
bound
push
sbbl
rclb
out
ret
jp
cmp
or
add
sti
ja
test
push
jne
mov
cmp
sbb
mov
or
imul
addr16
xlat
stos
andl
ss
or
test
jnp
insl
shlb
fbstp
mov
and
or
mov
dec
loop
pop
dec
sti
dec
and
scas
sahf
out
pushf
andb
dec
xchg
cmp
xchg
cmp
aas
xor
xor
js
push
inc
das
sub
test
sbb
mov
cmpsb
arpl
mov
out
in
inc
rcrb
movsl
aaa
push
mov
lods
ds
cmp
jnp
xchg
cmp
add
cmp
in
sub
shll
mov
sbb
inc
inc
xchg
out
xor
jl
or
sub
in
push
mov
xchg
stc
mov
cltd
dec
mov
fisubl
pop
int3
jp
orb
in
dec
inc
or
out
int3
mov
push
fiaddl
push
rcrb
and
xor
pusha
je
stos
enter
icebp
mov
jbe
push
nop
bnd
and
mov
cmc
sbb
or
cmp
jmp
lods
or
sbb
push
dec
outsl
divl
mov
enter
test
mov
mov
cmp
xor
mov
dec
jecxz
mov
cmp
movsl
shlb
rclb
sarb
inc
lods
mov
xchg
jmp
adc
icebp
adc
ljmp
pop
mov
stc
inc
mov
mov
scas
or
lock
mov
xchg
sub
mov
cltd
loop
inc
inc
lea
pop
movsb
cmc
mov
mov
pop
clc
xor
push
jnp
pusha
mulb
or
pushf
bnd
mov
and
xchg
rcr
lods
pop
repz
and
lods
pop
pop
add
pop
int3
add
sub
dec
filds
jne
or
std
loopw
out
pop
cmp
xchg
and
xchg
push
pop
pop
popa
cmp
jmp
push
leave
in
test
pop
xchg
mov
push
xchg
mov
sub
push
movsl
lock
add
mov
xorb
mov
xlat
jns
in
les
jecxz
rcrl
mov
inc
cmpsb
lahf
mov
clc
xchg
mov
dec
sti
jp
sbb
adcb
rorb
aaa
jo
mov
sbb
fs
fdivrl
and
mov
pop
and
add
mov
inc
es
rolb
mov
and
imul
mov
addr16
jecxz
imul
mov
ret
jns
add
inc
scas
roll
sub
scas
ja
aad
clc
movsl
jmp
aad
imul
test
popa
dec
mov
cmpsl
rcrl
lock
int3
sub
aam
mov
enter
cmc
mov
sub
push
cmpsl
inc
stos
scas
cmpsb
fildll
cs
pop
pop
fistpll
pushf
push
mulb
mov
xchg
dec
push
daa
add
loop
rcrl
fidivs
xor
jmp
push
lds
push
xor
repnz
mov
mov
jae
pcmpeqb
mov
andl
jecxz
loopne
in
insl
sbb
sub
dec
das
or
mov
repz
jge
mov
cltd
setl
mov
push
cmp
xchg
and
mov
or
roll
in
es
inc
js
imul
sbb
cmp
hlt
cs
push
aaa
push
add
aad
xor
and
movsb
std
sbb
and
into
mov
add
aad
sbb
fiaddl
mov
out
adc
mov
xorl
stos
jmp
jmp
push
inc
adc
leave
fwait
mov
test
insl
dec
sahf
or
andb
pop
faddl
lahf
in
mov
jmp
rcll
aad
test
fmul
test
sbb
or
jmp
jno
mov
push
shl
pushl
negb
sub
and
jns
mov
loope
or
dec
lret
out
xchg
sub
push
adc
imul
and
hlt
cltd
cmp
xor
jmp
jno
jns
scas
scas
jnp
mov
std
aaa
mov
xor
or
sub
sub
in
mov
mov
inc
add
sbb
xchg
mov
mov
push
and
dec
es
jo
stos
cmp
mov
roll
test
nop
adc
inc
rclb
xor
out
fwait
inc
sbb
and
jne
dec
add
and
scas
aam
in
pop
mov
loopne
jns
jmp
sbb
jmp
xchg
ljmp
fidivl
ficoms
jne
dec
sbb
addr16
lock
mov
mov
mov
inc
add
jp
imul
mov
adc
mulb
mov
inc
inc
mov
push
push
out
xor
xor
xchg
fldenv
jb
scas
ja
test
xor
sbb
add
or
jmp
xchg
add
mov
pop
lret
and
xor
in
fs
xor
jecxz
inc
scas
inc
inc
mov
out
fwait
in
rclb
call
test
lock
xor
sub
inc
push
cmpsl
dec
ljmp
negl
xor
pop
dec
mov
xchg
dec
setle
out
pop
stos
xchg
xchg
shll
and
add
in
mov
inc
add
int
repnz
sub
cwtl
loopne
pop
outsl
repnz
lret
xor
push
or
incb
lret
dec
addr16
mov
xor
adcb
xchg
mov
push
adc
sbb
mov
icebp
hlt
inc
pop
sbb
jns
add
jge
test
enter
push
push
mov
mov
pop
push
dec
xchg
add
adc
pop
inc
pop
xchg
xor
fs
addr16
in
xchg
popl
pop
out
js
push
or
inc
push
inc
mov
hlt
repz
push
or
bt
mov
xchg
insl
pusha
and
outsl
dec
negl
adc
call
fwait
xchg
or
mov
imul
lea
stos
fisubrs
fists
add
sarl
cs
fs
out
xchg
pop
push
std
pushf
sbb
repnz
sahf
and
jae
pop
cmp
cwtl
xchg
aas
inc
das
mov
addl
jecxz
xor
mov
and
mov
mov
mov
dec
xchg
flds
jo
test
or
sbb
leave
movsl
fstpt
mov
fmuls
mov
inc
sbb
aaa
mov
dec
mov
insl
fs
stos
shrl
mov
push
dec
out
aad
add
std
jle
xor
mov
mov
ret
xchg
iret
scas
je
int3
fnstenv
dec
jbe
jge
lock
in
or
lods
or
cmp
loope
add
clc
cs
in
fs
jge
dec
idivb
mov
sbb
mov
mov
or
cs
lret
lahf
xlat
stos
call
xchg
loope
fldl
xchg
or
pop
iret
xor
bound
jmp
int3
add
inc
insb
mov
mov
jno
pop
cltd
imul
or
mov
and
scas
arpl
lods
ret
sti
sbb
adc
jb
std
pop
lods
out
dec
dec
push
add
sub
insb
or
cltd
sub
dec
mov
xchg
push
mov
mov
mov
pop
pop
push
ret
and
mov
rorb
dec
into
repz
shlb
rcr
data16
adc
lret
rcrb
push
adc
nop
push
fsub
ret
sbb
popa
addr16
push
imul
pop
xor
mov
outsb
dec
ret
push
add
mov
mov
cmpl
fidivrl
shll
ret
adc
mov
xor
mov
and
add
out
sub
add
fwait
dec
test
push
pop
xchg
arpl
ds
aas
sub
les
xchg
and
ss
ja
ja
cmp
sub
test
jg
mov
add
adc
enter
cmp
push
mov
add
jno
xlat
fs
aam
push
mov
js
in
lret
dec
scas
pop
fbstp
dec
xchg
mov
jp
leave
mov
js
jl
jg
pushf
jge
lea
gs
into
cs
cmpsl
mov
mov
mov
sub
div
enter
jne
addr16
outsl
ret
testl
jp
mov
loope
sahf
mov
cmp
in
push
xor
insb
es
fs
mov
mov
push
int
xchg
aas
xor
loopne
out
sub
jecxz
mov
icebp
out
test
outsl
pop
popa
jbe
fmulp
leave
jp
and
fcomp
lds
loop
sub
mov
push
daa
clc
mov
sub
mov
fidivl
sbb
stc
pop
fcomps
push
sbb
xlat
sbb
bnd
aaa
lds
outsl
jl
sbb
aaa
mov
test
pop
aaa
testb
out
mov
adc
mov
loope
ljmp
sbb
and
adc
cltd
lock
mov
adcb
adc
jp
sbb
fistps
inc
mov
int3
addr16
inc
test
sbbl
inc
xor
aaa
mov
std
aam
xor
stc
mov
mov
xchg
adc
aas
test
loope
mov
xchg
sbb
bnd
mov
cs
mov
in
or
sub
sbb
je
lea
hlt
xchg
imul
cltd
push
sbb
sbb
dec
fucom
push
cld
adc
andb
loope
dec
add
push
ret
jno
movzwl
pop
cs
ss
shl
cmp
add
add
pop
nop
stos
inc
mov
iret
mov
loopne
outsb
fwait
out
lods
cmpsb
xor
test
mov
sar
jae
pop
pop
or
jns
loope
inc
push
inc
fdiv
pop
add
sbb
rcrl
jmp
mov
sarb
aas
aad
add
rol
into
aas
xchg
int
stc
into
test
dec
mov
add
push
pushf
dec
adc
pop
andb
repz
mov
ljmp
sub
jmp
mov
sbb
or
sbb
sbb
movb
sbb
add
into
in
lods
xor
fidivrs
fwait
add
push
popa
repz
push
lea
jb
xchg
mov
pusha
insb
ret
sbb
sub
pop
cwtl
outsb
adc
xor
pop
cmp
std
iret
dec
add
lds
int3
mov
push
jmp
hlt
cld
dec
lahf
cmpsl
in
and
fwait
shlb
nop
aam
jmp
aas
xchg
mov
pop
sbb
cs
mov
out
mov
xchg
push
pop
mov
sbb
dec
mov
mov
xor
jb
add
add
xchg
lock
mov
mov
push
pop
or
or
jno
ret
xor
ljmp
sub
cwtl
or
pop
fmull
jp
sbb
inc
jne
push
movsb
push
pop
bound
add
mov
mov
xor
mov
aam
adc
mov
adc
dec
outsb
ret
into
mov
cmp
int3
insl
mov
mov
std
adc
pop
jl
ds
xchg
pop
pop
aaa
out
jmp
cmp
add
mov
mov
sub
outsl
add
stos
dec
lret
lret
hlt
leave
aas
aaa
cmp
sbb
push
sbb
mov
mov
add
mov
jge
inc
and
mov
pop
stos
push
pusha
out
clc
ret
push
hlt
adc
loop
add
fdivr
mov
or
sbb
add
pop
sub
lods
gs
arpl
mov
cmp
sbb
cltd
orl
push
add
ret
pop
push
rcrl
push
sub
pop
dec
sbb
mov
std
xchg
sub
push
fcompl
jb
insl
pop
push
enter
inc
mov
mov
faddp
hlt
cwtl
aaa
out
shlb
jbe
lcall
push
out
test
mov
push
dec
nop
aas
jl
aam
and
mov
sti
push
dec
add
add
push
fidivrl
sbb
enter
or
or
data16
mov
aam
xor
adcb
fisttpl
lods
in
adc
add
push
push
ds
sub
cmpsl
pusha
or
pop
test
jns
adc
sub
nop
mov
xchg
data16
xor
mov
dec
cmpsl
fisttpl
mov
cs
testb
insb
add
icebp
add
sti
stc
shrb
xchg
inc
test
scas
mov
insl
jns
push
bound
jecxz
xor
sub
mov
test
pusha
or
sahf
je
cmc
pop
xchg
popf
add
sarb
stc
and
out
fwait
push
nop
dec
mov
sbbl
xchg
mov
xlat
sbb
in
jge
jle
sbb
adc
repnz
movsb
cmp
mov
push
cmp
or
mov
push
cmpb
insb
jl
arpl
mov
pop
pusha
push
push
and
pop
aaa
inc
rcl
adc
or
mov
das
jb
dec
or
jno
int
lahf
shlb
lea
and
pop
add
test
enter
enterw
pop
mov
leave
inc
in
insb
je
inc
add
adcl
inc
in
dec
jecxz
fstl
mov
rcr
out
xor
inc
imul
call
cmpsb
aas
push
jb
cld
pop
stc
movsl
add
add
es
fidivrs
ffree
gs
jmp
mov
add
aad
adc
out
jmp
shrb
sbb
inc
mov
xor
cmp
jns
out
cmpsl
sbb
sub
or
bnd
lock
sbb
jge
cs
fwait
stos
enter
xorb
shlb
addb
scas
jae
out
mov
push
lret
cs
fldcw
inc
xchg
dec
lret
shll
jl
dec
add
and
std
cld
std
inc
imul
pushl
inc
popf
lahf
popa
out
dec
sub
mov
sub
pop
nop
pop
ficoml
push
jnp
sbb
mov
jb
lret
clc
jns
inc
imul
addr16
add
cmp
mov
outsl
add
mov
repnz
fcomps
or
add
std
fwait
mov
xchg
dec
imul
stos
adc
sbb
jmp
inc
adc
cmp
xchg
inc
mov
dec
or
jp
stos
std
insb
inc
mov
imul
adc
cmc
outsl
mov
adc
out
dec
data16
jg
push
or
js
pop
push
fs
jnp
popa
adc
sti
jp
jnp
mov
ds
pop
push
pusha
push
and
cmp
mov
fildl
sub
loopne
push
cmovo
adc
adc
sbb
adc
adc
push
sahf
push
lock
in
push
pop
lods
xlat
mov
and
inc
xor
push
mov
nop
scas
scas
lods
mov
inc
cmp
aas
hlt
stos
push
mov
or
jne
daa
xor
pushf
in
push
jae
stc
push
pusha
xor
insl
lret
push
xchg
or
adc
add
cmc
out
and
mov
pop
mov
ret
call
cmovo
aam
adc
sub
leave
or
pop
dec
xor
int3
mov
ja
inc
pop
jecxz
mov
cmp
test
jns
aas
mov
push
sahf
add
cs
adc
mov
or
icebp
sarb
fcoms
jb
sbb
dec
lret
mov
int3
or
orl
jecxz
pop
push
push
pop
push
dec
cmp
push
pop
sbb
push
xchg
sti
fcmovnu
fidivl
and
inc
mov
push
imul
jno
jecxz
popf
cmpsb
iret
in
mov
movlps
fistl
inc
xchg
pop
ljmp
movsl
inc
pop
enter
iret
mov
push
inc
cmp
xlat
fcompl
mov
lret
sub
les
leave
mov
bound
int
jnp
divl
out
aam
xor
inc
jle
jne
pop
es
fsubr
rclb
jae
push
icebp
mov
push
fisubs
jnp
jne
lds
xlat
or
push
jge
fdiv
add
test
dec
and
cmpsl
jnp
popa
loopne
cmp
cmp
mov
xchg
dec
shrb
fbstp
shll
xor
xchg
sbb
mov
sub
out
xchg
jmp
push
mov
mov
jle
push
test
jmp
loop
pop
ja
push
aas
jl
fcmove
lret
sub
push
mov
fisttpll
imul
out
in
dec
pop
jae
cmp
mov
fstps
nop
push
aas
push
nop
mov
mov
das
mov
pop
cs
js
loop
in
jmp
jle,pt
fcompl
movsb
sub
mov
mov
das
or
mov
daa
lds
and
cmp
cmc
cmp
mov
loopne
jle
xchg
mov
lahf
xchg
lods
aas
insb
push
or
cmpb
pop
ret
insl
mov
inc
mov
sbb
movsb
jp
insb
sbb
out
lock
mov
cmp
fmulp
pop
xchg
or
xchg
push
add
or
xchg
stos
repz
fildll
into
out
lods
xchg
jnp
test
push
fwait
lret
jecxz
cmpsb
pusha
fdivs
addl
ja
test
xchg
lret
cmp
repz
jge
xlat
xchg
adc
xor
ret
stc
inc
adc
push
xchg
cmc
ljmp
inc
in
ss
dec
pop
pop
xchg
and
xor
mov
imul
xchg
fwait
push
icebp
cmpl
iret
xor
push
repz
jg
cmp
je
add
scas
sbb
outsl
cmc
arpl
loopne
rolb
cmp
or
icebp
mov
or
lods
call
xor
and
loopne
out
cli
out
mov
fdivr
adc
jnp
xchg
dec
fs
popf
push
dec
and
mov
popf
addr16
cld
push
mov
push
dec
jecxz
fdivr
xchg
mov
int
sahf
dec
xchg
pop
mov
jmp
mov
sub
fisttpl
sahf
mov
enter
mov
push
lea
mov
push
std
inc
dec
test
mov
xorb
out
cmpl
lods
cmp
cmc
mov
push
int3
mov
jae
sbb
push
popf
leave
sub
pminub
js
xchg
or
sbb
or
cli
punpckhwd
inc
or
pop
mov
stc
test
inc
inc
cmp
sub
aad
scas
dec
cmpsl
pop
out
mov
cmp
je
es
ret
sbb
mov
pop
shr
adc
jecxz
add
add
cltd
xchg
out
jns
dec
pop
in
addr16
ja
rcrb
or
in
enter
pop
adc
add
pshufw
ficomps
filds
cmp
repz
fbld
mov
arpl
inc
testl
fcmovnbe
push
xchg
sub
fsub
xor
insb
push
jle
stos
scas
add
int3
xchg
roll
js
cmpsb
aas
fmull
jne
inc
mov
enter
pusha
ds
scas
fldcw
pop
push
or
fsts
call
jns
jo
xor
insl
dec
push
inc
mov
cmpsl
daa
mov
fsubrs
sub
mov
call
inc
add
pusha
rcrl
fmull
shll
nop
test
push
adc
and
out
sub
sbb
mov
fs
xchg
and
pop
add
push
or
cs
movsb
test
inc
mov
push
or
into
or
aaa
cltd
mov
jge
or
xor
sti
cwtl
xchg
pop
out
fcomp
xchg
sahf
pop
call
roll
repnz
repz
push
push
jle
cmp
jmp
iret
jns
popa
repz
leave
dec
inc
push
bound
movl
mov
or
jmp
push
jp
les
std
mov
add
stos
imull
sub
mov
sbb
push
jne
popf
mov
push
fldt
pop
pop
jns
mov
push
sub
mov
adc
mov
test
or
arpl
fs
roll
dec
xchg
xchg
xor
pop
push
and
loop
mov
scas
dec
mov
or
add
mov
pop
movsl
fmuls
ss
sbbb
xchg
dec
cmp
je
sub
fmul
jl
insb
cmp
pop
clc
pushf
xchg
push
xchg
sar
xchg
jo
call
adc
add
and
xor
mov
inc
sbb
jns
push
movsl
sub
mov
in
dec
insl
dec
or
inc
sbb
and
sahf
dec
xor
cld
lret
popa
stos
addb
call
mov
push
inc
shrb
push
push
cmp
pop
out
mov
jg
js
inc
lds
mov
jb
fidivrs
scas
inc
lahf
loop
dec
fucomip
pusha
popl
mov
or
mov
lods
sarb
jb
add
inc
pop
push
dec
sbbl
push
add
sub
pop
fidivrl
push
pop
fcmovb
add
imul
test
test
fldenv
xchg
call
js
push
sbb
stos
mov
loopne
add
out
sub
pop
lea
fcomi
outsb
xchg
xchg
add
inc
push
adcb
mov
lret
sub
popf
xor
dec
xchg
xchg
and
fcoms
test
pop
and
sbb
js
outsb
pusha
fisttpll
movb
mov
rcll
loopne
mov
daa
push
imul
push
lds
cwtl
inc
inc
mov
xchg
add
popf
push
mov
add
push
cmp
rorb
push
into
pushf
outsl
or
or
push
or
aam
jnp
dec
push
bound
lods
lods
leave
and
or
stos
pop
cs
arpl
pop
rep
mov
testb
shll
add
mov
outsl
add
mov
rcll
ficomps
push
xor
xchg
push
loopne
int
xor
in
push
mov
fsubl
aam
push
inc
sub
jmp
jo
data16
push
xchg
aas
add
fs
fisttpl
xchg
cltd
ret
hlt
shrl
pop
pop
out
or
xchg
pop
and
xchg
add
ja
imul
inc
push
fwait
and
jns
cwtl
outsb
jmp
mov
loop
popa
stc
lods
dec
movq
cmpsl
dec
or
in
js
xlat
inc
dec
push
mov
add
and
subl
mov
out
pop
pop
outsl
mov
dec
aaa
cmpsb
xor
lret
sbb
mov
xor
ss
cmc
xchg
iret
std
outsl
sub
pusha
pop
jae
shl
fcompl
pushf
in
inc
mov
mov
dec
das
push
arpl
pop
shrl
mov
jbe
aam
pop
dec
sub
jns
and
fs
mov
pop
and
and
inc
cmp
cwtl
add
fisttps
mov
xorb
sbb
rclb
sub
imul
es
sub
int3
ja
jnp
cmp
repz
inc
xor
xchg
cltd
data16
notb
out
sub
and
vpmaddwd
dec
xchg
mov
imul
jg
rcll
data16
mov
pop
jnp
xchg
cmc
push
mov
xchg
je
jbe
sub
sbb
cwtl
and
add
loope
sub
inc
xchg
ja
add
and
dec
adc
imul
jl
jmp
or
in
ret
lahf
pop
or
rcll
sbb
loop
testb
adc
rolb
in
add
jno
pop
repz
fcomip
adc
scas
mov
pop
push
jl
xor
lahf
pop
arpl
push
dec
pusha
jne
fdivl
and
inc
lds
into
in
xorl
out
lahf
jne
loop
ljmp
stc
dec
ss
call
loopne
movsb
dec
aad
sub
mov
pop
cmp
adc
sub
mov
sti
xchg
pop
call
cmpsb
fwait
arpl
ret
cwtl
push
js
mov
sahf
mov
fdiv
fdivr
inc
mov
xchg
pop
movl
repnz
adc
sub
xchg
or
jb
es
in
cli
jp
ret
imul
xchg
mov
sbb
ljmp
sub
xchg
loope
inc
xchg
push
xchg
inc
sbbl
pop
cmp
jle
dec
je
mov
and
mov
roll
shll
sub
into
mov
and
test
cld
xor
insl
mov
cld
or
jbe
movsl
incb
sub
mov
xchg
push
cmp
cwtl
mov
jne
add
pop
movsl
or
ret
testb
pop
add
mov
pop
aad
test
cmp
ds
sub
cmp
push
ror
pop
mov
add
stc
adc
jns
dec
out
subl
out
out
pop
mov
inc
pop
adc
jo
pop
insb
mov
ss
and
jnp
popf
mov
shrl
stc
ds
icebp
or
ret
mov
add
xchg
pop
mov
dec
insb
es
dec
mov
xlat
hlt
or
inc
jo
dec
out
jl
loopne
push
mov
xor
nop
imul
fadds
and
sbb
add
dec
je
test
push
dec
lret
pop
push
cli
xchg
jae
sbb
or
in
jo
xlat
inc
xor
inc
pusha
xor
stos
in
jge
arpl
adc
pop
in
and
js
pop
jb
adc
jb
xchg
repnz
mov
push
cmc
fwait
push
cltd
gs
xor
nop
sub
lret
dec
lods
out
aaa
mov
lret
sahf
xchg
lods
enter
movsl
and
aaa
cltd
xor
mov
add
push
cmp
xor
and
mov
es
es
xchg
xchg
lret
scas
cmp
pop
aas
in
popl
pop
sahf
dec
stos
jle
clc
mov
mov
jmp
imul
pushf
clc
jo
xchg
xor
idivb
adc
out
mov
pop
inc
or
bound
lods
cltd
dec
cld
movsl
cmp
sbb
nop
fmuls
jge
ja
dec
pusha
push
movsb
adc
push
inc
cld
jae
add
lcall
sub
insb
dec
icebp
movsl
lock
das
insb
dec
xor
mov
std
fsub
adc
int3
sbb
pop
xchg
mov
pushl
nop
push
lret
fists
test
push
sub
repz
jno
jmp
repz
in
jmp
mov
lea
addr16
stos
mov
adc
cltd
jg
jne
push
cs
popf
into
xor
xor
pop
addr16
fdiv
fsubrl
lahf
pop
lods
mov
jp
je
dec
inc
lea
icebp
cld
mov
mov
out
or
into
or
push
pop
adc
sbb
jns
faddl
sbb
or
inc
pusha
pop
mov
dec
and
xchg
fucomip
and
adc
jg
adcb
lods
xor
rorl
mov
push
mov
lcall
ss
add
idivl
mov
xchg
fisubl
inc
jl
sar
sbb
aad
shll
mov
mov
sahf
jb
mov
stos
xchg
insl
push
cwtl
scas
pop
pop
ficomps
testb
mov
mov
pop
aaa
push
push
mov
ss
lds
addl
add
js
cmp
or
scas
jge
sbb
push
pusha
inc
lds
jns
mov
aam
sbb
and
xor
loop
pushl
paddb
inc
add
jbe
add
and
mov
scas
mov
inc
sbb
push
xor
sahf
push
push
inc
adc
dec
ror
add
shlb
daa
pop
sub
outsl
bound
lcall
push
dec
xchg
lret
lea
sbb
push
rcll
scas
lcall
fmul
dec
push
mov
lret
loop
inc
outsl
cs
mov
jecxz
gs
stos
inc
lret
movsl
dec
and
pop
dec
dec
jns
lods
movsb
add
cmpsl
ror
int
mov
fisubl
inc
loopne
sbb
jl
stos
mov
and
inc
fidivs
fnstsw
mov
adc
nop
push
call
inc
jns
loope
insb
mov
enter
notl
pop
jno
sub
mov
into
pop
push
xchg
popf
sbb
cmp
cli
push
and
mov
pop
inc
inc
hlt
jp
mov
jmp
movsl
ret
orl
in
lret
bnd
mov
cmpsb
std
pop
pop
xchg
and
pop
aaa
dec
and
mov
pushf
adc
ljmp
ljmp
cmp
inc
cmp
ds
or
push
pop
adc
dec
inc
mov
mov
fistl
addr16
inc
mov
addr16
in
mov
pop
cmc
push
inc
or
xorb
push
ljmp
or
sti
imul
dec
pop
jne
dec
pop
adc
outsb
mov
and
in
adc
pop
pminub
add
adc
arpl
mov
push
daa
aad
icebp
bound
sub
leave
test
lods
out
adc
cmp
jp
insl
jp
and
cltd
mov
es
movsl
dec
sub
sub
push
mov
inc
movhps
sub
cmpsl
cmp
adc
repz
xor
in
dec
push
push
add
cmp
push
inc
cmp
test
sbb
hlt
cmp
xor
pop
mov
fidivl
pop
nop
mov
outsb
sbb
cmpb
sarl
ja
mov
aaa
fdivrl
stos
test
mov
les
jecxz
mov
add
mov
push
add
xchg
xor
sub
jg
pusha
jg
pop
arpl
mov
fs
ret
pop
mov
insl
xchg
dec
mov
aad
cld
rcrl
test
fidivl
fdivr
mov
mull
shlb
jecxz
pusha
mov
je
mov
cmpsl
icebp
repz
fimull
pop
jge
out
adc
jp
xor
fildl
fsubl
push
fmuls
mov
lahf
xor
test
ret
dec
ds
sbb
xchg
push
ljmp
repnz
les
fnstcw
rcr
push
fs
cs
in
in
cmpsb
psllw
fcmovbe
scas
sti
scas
clc
mov
and
add
cwtl
out
int
das
mov
test
ret
das
inc
bound
jle
dec
xor
cmp
lcall
xor
jle
dec
or
or
sbb
xchg
cmp
lea
sti
mov
cld
sbb
add
out
mov
outsb
stc
mov
enter
popa
adc
xor
sub
je
pop
xor
inc
insb
outsb
mov
adcl
pop
mov
cmpsl
cmp
inc
push
aad
addr16
test
pop
dec
mov
lret
out
sub
cmp
test
rorb
and
addl
jge
xchg
repnz
out
cltd
or
cld
sbbb
gs
push
dec
into
add
jl
sti
dec
inc
xchg
cmc
jno
add
cmp
sub
or
fsubrl
pusha
dec
sbb
jmp
shlb
scas
lock
mov
stc
fcmovbe
data16
test
lea
fstp
sahf
les
inc
mov
jg
int3
subl
xchg
pop
cmpsl
jl
jns
xchg
mov
stos
xor
sarb
sti
ds
inc
pusha
adc
and
dec
dec
mov
add
ficoml
xor
fwait
cwtl
ljmp
enter
mov
incb
sub
adc
sarl
mov
int3
cld
mov
testb
push
cmp
add
cmp
pop
add
out
daa
add
cmpsl
bndstx
scas
ljmp
sbb
sub
leave
xchg
and
fsts
sahf
lods
cmp
and
push
fdivrl
dec
pop
and
sub
imul
jo
xchg
jnp
add
inc
enter
test
push
test
repz
dec
dec
and
lods
mov
imul
add
jns
insb
iret
movsl
sub
xchg
std
xchg
sub
imul
movsb
push
and
shr
clc
dec
sbb
jae
sub
js
imul
mov
jno
bound
or
cmp
or
adc
fwait
push
xor
push
dec
loope
push
rcrl
mov
out
shlb
pop
dec
cld
dec
mov
iret
fdivs
popf
cmp
fstl
push
shlb
adc
add
or
fwait
into
ret
and
jne
push
call
outsl
sti
out
popf
cwtl
in
add
fwait
lock
enter
xchg
imul
jo
and
adc
pushf
and
mov
sub
shrl
mov
loop
adc
mov
mov
icebp
in
inc
dec
xchg
add
scas
shrb
addr16
das
fcompl
cmp
jb
jae
cvtps2pd
test
ret
int3
popf
sub
dec
cli
in
mov
and
arpl
js
xchg
test
ret
iret
pop
adc
jb
dec
into
ret
jbe
rcll
lds
dec
aad
sbb
loope
xor
enter
sub
test
push
xlat
cld
xchg
mov
cmp
les
or
in
les
scas
xor
loope
push
add
push
adc
scas
loopne
and
jb
mov
sti
test
sub
mov
add
lds
mov
cli
stos
orb
inc
aaa
jmp
mov
or
cmpsl
xor
add
xchg
inc
mov
xchg
sub
ret
mov
sbb
add
gs
bound
inc
mov
push
push
push
arpl
sbb
adc
js
xor
xor
insl
xorl
fwait
or
xlat
jp
jns
mov
inc
or
and
sbb
xor
xchg
idivb
out
out
sbb
outsb
xlat
andl
sbbl
inc
adc
testb
add
in
jl
mov
repnz
xchg
mov
mov
ds
aaa
mov
and
xchg
lcall
xchg
sub
dec
icebp
mov
push
inc
push
jo
nop
mov
pop
call
pushf
jmp
sub
add
push
sti
ss
push
pop
jl
push
mov
mov
xchg
push
mulb
dec
push
ljmp
mov
shl
dec
pop
addr16
mov
cs
aam
xor
jno
arpl
call
mov
or
add
push
push
sub
mov
cmc
sub
ret
call
mov
inc
pop
push
push
lahf
repnz
mov
popl
sbb
push
lock
test
mov
sahf
loopne
add
mov
movsb
sbb
mov
cli
adc
add
inc
aaa
cs
push
mov
aaa
sub
fstps
push
mov
jnp
fcmovu
bound
addb
xchg
xchg
pop
call
lea
in
aad
cmp
jmp
imul
insl
xor
cmp
add
adc
pop
xor
jbe
add
test
add
sbb
cmp
pop
nop
mov
cmpsl
xlat
jg
add
ss
jno
dec
or
in
xchg
sbb
mov
pop
jp
mov
loope
add
arpl
lock
sbb
mov
adc
and
push
rcrl
sbb
or
xchg
daa
icebp
sub
loope
pusha
sbb
jbe
mov
mov
push
sub
repz
mov
push
outsb
lcall
into
xor
ds
push
inc
cmp
cmp
pop
adc
and
data16
sbb
fcmovne
adc
jnp
std
mov
sbb
xchg
popa
rcrb
mov
cmc
xchg
xchg
adc
cltd
aas
lods
lcall
cwtl
cmp
dec
adc
fstl
scas
mov
xchg
mov
in
xlat
rclb
fnop
pop
test
sbb
inc
in
stos
inc
nop
fnstsw
xchg
mov
loop
inc
bound
mov
fistps
lcall
inc
fcmovu
mov
jl
pop
cmp
popa
sbb
fisubl
les
and
aaa
iret
and
mov
inc
std
das
cmp
xchg
dec
pop
inc
call
divb
insb
mov
aas
call
roll
or
sub
fildll
es
stc
dec
mov
les
outsl
fadds
cmpsb
push
inc
dec
sbb
xchg
add
cld
arpl
push
and
das
push
push
sub
pop
test
push
call
sub
jge
jb
xchg
pop
in
push
negb
and
rcr
xchg
stc
fstl
sbb
inc
jg
pop
adc
cmp
xchg
xchg
add
push
adc
lods
dec
mov
push
pusha
adc
mov
addr16
test
mov
data16
js
push
ja
iret
fwait
mov
sbb
test
ret
mul
sbb
sti
jnp
iret
inc
add
pop
mov
scas
sti
xor
adc
sbbb
add
add
pop
lea
mov
push
in
xchg
add
and
pop
in
popf
sahf
imul
bound
rolb
testb
bound
push
in
sub
scas
sbbl
fmull
shl
dec
insl
mov
xchg
push
cmp
push
pop
call
mov
scas
mov
std
stos
leave
cwtl
dec
movsb
jg
xor
call
pushf
scas
jle
jns
out
shl
test
jne
jb
sbbb
mov
aam
daa
ja
lret
gs
push
pop
test
adc
xor
jg
sbb
enter
push
sub
xor
inc
or
xchg
adc
cmpsb
cmp
xor
rcrl
mov
or
pusha
jp
mov
fcomps
lret
out
aad
frstor
lahf
lods
stc
push
icebp
lods
xor
mov
lods
inc
cld
and
repz
xchg
test
ss
cmc
scas
std
xlat
lods
adc
and
lret
jle
xchg
cwtl
dec
push
jle
add
out
or
push
push
xchg
add
push
fwait
outsb
xchg
xchg
xor
push
incb
aas
in
lret
mov
nop
sarl
jns
mov
push
push
xor
pop
sbbl
push
cmp
jns
cmp
jecxz
scas
test
lock
gs
out
repnz
xor
orb
into
cmp
es
or
insb
lock
xchg
lods
bound
fnsave
imul
mov
xor
sahf
imul
leave
inc
mov
add
enter
dec
insl
ss
ja
xchg
gs
shll
or
pop
imul
sbb
ret
xchg
pop
test
fldenv
std
mov
lret
out
lret
jle
xchg
int
push
push
shrb
push
or
mov
push
add
out
or
push
lcall
xor
and
adc
mov
jbe
les
iret
push
dec
push
lods
iret
or
daa
subb
or
mov
negl
xchg
in
add
dec
popa
and
dec
scas
cmp
pop
add
mov
int3
inc
sub
js
sbb
aam
daa
ljmp
adc
mov
ja
xchg
dec
fisttpl
test
xchg
div
cmp
ss
inc
sahf
add
sbb
out
lds
ret
fidivrl
out
adc
and
pop
push
pop
jmp
lds
sbb
pop
clc
push
enter
mov
daa
pusha
mov
cmp
push
jle
or
pop
mov
add
adc
push
cs
shrb
jbe
shl
add
call
ljmp
mov
sti
or
jb
adc
xor
into
fsts
dec
rorb
pop
lahf
inc
pop
inc
cmp
cmp
ret
pop
inc
jb
and
push
and
call
sub
negb
jl
sti
testl
ja
mov
jne
das
jnp
and
push
das
xchg
imul
lock
arpl
in
lds
cmc
dec
insb
sarb
fmul
and
or
ds
cld
xchg
pop
push
push
lock
es
repz
imul
dec
out
outsb
pop
es
mov
xor
sbb
sbb
in
stos
dec
int3
mov
cltd
enter
sbb
adc
aam
sti
push
int
enter
sub
bnd
inc
push
xchg
jecxz
rcll
sub
repz
imul
lods
xchg
std
out
daa
cltd
inc
test
lods
mov
or
cmp
or
addr16
test
jne
repnz
xchg
lods
mov
adc
or
xchg
xchg
push
mov
repz
fstpl
push
mov
xchg
mov
fprem
mov
pop
sub
pop
mov
pop
cmpb
push
ret
push
and
fstp
out
pop
out
dec
aaa
pop
lcall
daa
mov
sbb
mov
sbb
push
adc
bound
out
fidivl
scas
popf
fdivl
push
push
xchg
pop
jmp
adc
mov
pop
jp
and
or
mov
jg
pop
fwait
jg
mov
out
adc
int
aad
icebp
repnz
fidivrs
adc
sub
push
jae
push
xor
pop
mov
push
xchg
arpl
mov
loope
popl
xchg
mov
pop
ljmp
push
cmp
cmpb
shll
cltd
bound
add
dec
mov
add
jnp
add
mov
stos
pop
sahf
adc
mov
movsl
cmp
repz
and
pop
or
lods
sahf
stc
ds
and
mov
sbb
test
adc
mov
leave
or
jae
ret
popa
out
aam
fimuls
lcall
adc
jle
ficoms
decb
adcb
cmp
pop
fidivrs
jae
inc
push
inc
inc
aad
fcoms
fs
ja
add
pop
sbb
mov
inc
popf
sbb
in
scas
dec
mov
ret
aas
out
sbb
add
das
sub
mov
pop
psrlq
std
sub
mov
fldenv
or
test
push
cli
call
int
sar
mov
jg
sub
pop
lods
sub
test
ja
outsb
test
sub
mov
dec
jns
fimuls
into
and
scas
in
inc
xor
imul
enter
jge
pop
sub
popa
clc
and
aam
fwait
shlb
lock
jbe
cmp
fisubrl
in
jmp
lret
sub
adc
mov
mov
sti
ja
cld
mov
out
mov
pop
and
mov
lods
lcall
cmpb
mov
cmp
mov
mov
xor
mov
push
adc
mov
scas
scas
pop
cmp
jl
aam
xor
aaa
arpl
int
scas
sbb
jo
fwait
push
pop
icebp
add
xlat
fisubl
push
enter
iret
and
sub
into
test
mov
das
push
xor
and
sbb
ja
scas
add
ds
loopne
inc
inc
call
mov
lcall
push
and
insl
jp
sub
lock
jb
in
roll
mov
mov
lret
jb
adc
movswl
mov
inc
xchg
loope
xchg
dec
jl
outsb
aas
cmp
xchg
cli
decb
aad
sub
xlat
in
xor
cmc
sarb
jnp
mov
or
into
sub
push
pop
mov
mulb
cwtl
pusha
cmp
vhaddps
mov
and
in
ficompl
pop
mov
or
testl
in
pop
lods
arpl
mov
call
ja
dec
in
push
loope
bnd
xor
jp
outsb
aas
jmp
push
pop
das
cmp
or
mov
pop
popf
inc
inc
rcll
arpl
sub
orb
adc
inc
enter
hlt
jge
fdivp
mov
adc
int
dec
pop
add
cmp
cmp
paddsw
dec
fcomps
lahf
inc
inc
sbb
sbb
adc
sbb
push
je
lret
jl
mov
sarl
imul
popf
dec
fwait
xor
mov
xlat
mov
jecxz
aam
out
adc
pop
jno
movsl
pop
mov
popf
lods
loopne
mov
mov
pop
fldenv
clc
push
inc
fcomps
hlt
cmp
inc
adc
jo
sbb
test
dec
fmull
rorb
mov
add
pop
int
cld
test
dec
adc
hlt
cmpsb
and
mov
cmc
mov
mov
mov
mov
frstor
addr16
sbb
test
xlat
pushf
pushf
ret
xchg
dec
push
outsb
push
icebp
loope
or
loope
sti
jnp
shrl
notb
mov
ret
pop
cmp
push
or
dec
or
dec
mov
xchg
adc
mov
orl
adc
mov
adc
xor
inc
adc
xor
push
outsl
aam
xchg
pusha
ja
jbe
outsb
add
mov
inc
sbb
outsl
inc
lock
scas
add
push
icebp
shrb
loop
add
and
loopne
lods
in
aad
lret
roll
mov
lret
adc
dec
fsubs
loop
fucomi
clc
insl
jae
xchg
stc
mov
jne
and
cwtl
cmc
push
push
daa
xchg
test
loopnew
aas
lcall
push
in
mov
mov
cmp
and
js
jp
je
sbb
jl
pusha
inc
call
mov
adc
pop
test
subb
in
or
clc
mov
sub
movsb
and
inc
xchg
dec
push
mov
xor
and
fcoml
inc
jg
jae
xchg
repnz
push
fwait
jmp
sbb
cmp
jbe
insb
test
pop
addr16
in
sbbb
rcrl
dec
or
cmp
rcl
lea
lea
loope
nop
and
inc
icebp
test
mov
pop
andl
jbe
mov
pop
mov
ds
sbb
mov
lock
dec
and
iret
mov
cwtl
dec
adc
loop
or
cmp
movl
cmp
sahf
or
sub
outsl
loop
mov
jno
xor
jmp
fstps
push
xchg
movsl
shl
push
mov
xchg
sub
ja
inc
stos
loope
mov
mov
mov
ljmp
mov
icebp
cmpsb
mov
stc
stos
jo
js
sub
adc
xorl
cs
mov
mov
jno
subl
adcl
mov
push
jns
and
dec
vrcp14sd
jg
push
lea
aas
inc
mov
incl
dec
push
leave
sbb
xor
jns
and
mov
adc
popf
jo
xchg
mov
loop
mov
inc
loope
faddl
fdivrl
cmc
jle
mov
in
lods
push
fwait
adc
ror
pop
ds
shrl
daa
inc
jnp
icebp
or
rcr
sbb
stc
stos
cmp
dec
mov
insb
pop
ret
in
ljmp
push
adc
mov
cld
in
subb
sub
xchg
imul
push
and
aaa
movsl
cwtl
adc
mov
mov
pop
cmp
movsb
push
pusha
pop
ja
mov
jg
jecxz
es
mov
iret
lock
fstl
inc
mov
sti
cmpsb
dec
loopne
xor
xor
xor
and
mov
cmp
mov
arpl
ss
sbbl
sbb
push
adc
leave
xlat
nop
mov
pop
out
xor
imul
sbb
add
fstps
xchg
or
adc
sub
xor
int3
or
or
push
push
jmp
xor
pop
lods
mov
and
add
ret
inc
inc
fadds
inc
fisttpll
inc
into
ljmp
test
cmpsl
js
mov
pop
scas
sub
inc
add
fwait
jnp
push
cmp
mov
push
call
in
fldenv
test
cmpsb
aaa
daa
lock
rcrb
or
inc
or
push
dec
lds
add
mov
xchg
xorb
scas
mov
popf
cli
icebp
push
mov
hlt
dec
dec
insl
repnz
xchg
jmp
ss
arpl
lea
sbbl
mov
shll
pop
adc
inc
lcall
test
cmp
nop
xchg
fidivrl
ret
outsb
les
add
gs
lcall
mov
cmp
cwtl
lods
lret
pushw
sbb
adc
inc
and
loop
notb
sar
lods
xchg
mov
pop
lahf
jbe
mov
pusha
fucomp
sub
pusha
xchg
push
or
sub
dec
jbe
mov
std
pop
cmp
std
hlt
stos
mov
sub
stos
or
test
mov
ret
xor
dec
ljmp
rcrl
inc
cmp
and
and
into
cmp
inc
stos
movsl
pop
mov
mov
jno
inc
aam
lcall
out
mov
lahf
test
inc
dec
movsb
call
inc
sbb
ss
or
repz
mov
popa
imul
xor
pop
jo
leavew
fs
push
ja
movsb
ror
lret
test
jp
cli
loope
add
mov
dec
ja
mov
aam
cmp
nop
mov
lss
in
jb
fidivrs
pusha
out
imul
leave
testl
imul
pushf
jle
jne
jne
add
and
mov
pop
dec
cmpsl
cltd
sarb
pop
jno
dec
icebp
pop
adc
mov
jns
mov
pop
push
push
push
add
in
fwait
cmpsb
dec
and
dec
lock
notl
adc
push
mov
les
mov
icebp
push
mov
or
jne
cli
cli
mov
mov
cmp
jbe
out
in
inc
loope
xor
jp
adc
mov
test
iret
pusha
leave
push
pop
scas
test
cmpsl
mov
mov
xchg
sbb
or
out
test
xchg
int3
mov
pop
dec
and
in
in
out
pop
leave
sub
adc
inc
ss
mov
sub
ja
and
mov
rorl
sub
jg
out
ficompl
cld
loopne
mov
xchg
fsubs
popf
mov
mov
imul
sbbl
xchg
xor
push
js
rorl
add
and
sbb
call
mov
mov
leave
scas
in
lds
pop
inc
int3
notl
test
scas
push
cmp
inc
mov
adc
xor
add
test
add
test
in
mov
shll
dec
inc
pop
xchg
ss
lea
pop
fcoms
push
lret
in
lods
mov
dec
incl
inc
mov
daa
cmc
xor
enter
nop
pop
lods
dec
xchg
scas
clc
and
pop
into
cmpsl
lock
mov
ja
ret
imulb
leave
mov
xchg
push
xchg
mov
int
jb
lods
leave
iret
out
stos
jg
xlat
movsb
js
test
adc
in
adc
mov
jns
sbb
and
faddl
mov
sub
cmp
or
mov
pop
les
push
inc
faddl
jnp
mov
sub
xlat
fiadds
dec
dec
nop
out
lock
ror
push
push
push
je
fstps
inc
insb
popf
daa
dec
add
std
pop
lcall
pop
pop
test
fucomp
dec
pushf
pop
imul
scas
movsl
out
cli
les
push
test
bound
sbb
mov
add
cs
out
mov
movsl
pop
dec
sahf
mov
mov
mov
mov
cs
add
or
stos
loope
divl
jp
jecxz
add
xor
ficoms
sub
mov
push
inc
in
ficomps
inc
dec
jecxz
jl
jns
push
out
inc
call
push
out
rep
cmpsl
sbb
rcr
test
mov
das
leave
orb
dec
push
mov
adc
stos
adcl
pushf
xchg
fcoms
jge
icebp
sbb
pop
scas
and
jp
dec
inc
or
jl
std
pop
daa
dec
xor
add
adc
add
mov
imul
mov
cwtl
mov
adc
sub
mov
push
divb
arpl
inc
xchg
xchg
cmpb
pop
cmp
in
mov
jl
xchg
push
push
addr16
xor
pop
mov
frstor
lret
outsb
pop
nop
adc
mov
sbb
or
inc
pop
mov
les
data16
mov
xchg
inc
shrl
imul
adc
lcall
cmp
dec
test
adc
out
xchg
ja
andb
pop
dec
test
out
iret
push
mov
imul
ret
nop
push
icebp
imul
jecxz
test
pop
outsb
movsb
fbstp
adc
mov
in
push
and
inc
daa
xchg
xchg
out
outsb
cld
pop
jbe
popa
sbb
sub
inc
jg
push
mov
lods
pop
rol
mov
cmp
fmull
pop
xchg
xchg
pop
push
cmc
jae
outsb
xor
xor
fistpl
inc
sub
or
adc
imul
xlat
mov
cs
mull
rolb
push
push
xor
add
cmp
fldcw
xlat
int
xor
mov
inc
das
sar
adc
cwtl
ljmp
dec
dec
jle
sahf
std
adc
jb
mov
sub
sti
ret
pushf
mov
sbb
lcall
xlat
mov
pop
mov
push
and
jbe
adc
bound
inc
clc
dec
in
adc
mov
xor
fcomi
push
mov
scas
fdivs
and
int3
dec
int3
pop
divl
xchg
xor
add
clc
push
mov
pop
xchg
mov
push
jl
cmp
cmp
cmp
jae
imull
push
out
xchg
pop
imul
sub
mov
in
lret
push
add
cmpsl
xor
lret
enter
sbb
in
jns
cmpsl
lods
daa
cmp
mov
fs
ret
lock
cmp
movsl
test
xor
insl
push
ds
inc
pop
lcall
pop
push
add
push
sarl
add
fists
jo
xchg
jns
arpl
sbb
icebp
push
xchg
fcoml
out
jmp
mov
fildl
and
mov
out
xchg
in
xor
cmp
lods
add
sub
jae
std
pop
inc
into
or
sbb
pop
and
lret
sbb
xor
dec
jo
bound
orl
rcr
xchg
daa
xchg
cli
pop
dec
xor
add
jle
pushf
int
fidivrl
and
fidivl
pop
push
xchg
cmpsl
ljmp
mov
lahf
push
sub
fwait
orl
cmp
cmpsl
xchg
repz
lahf
and
add
push
dec
or
pop
push
mov
mov
loope
cmp
pusha
test
cmp
sar
xlat
sub
pop
adc
sarb
mov
inc
loope
xor
inc
inc
xchg
pop
jnp
cmpl
lds
in
push
int3
sub
mov
cmpsb
es
xchg
jae
les
xlat
rcll
push
sti
jl
aad
imul
mov
nop
jl
xchg
imul
mov
inc
push
cmpsb
cmp
sahf
fisubl
sub
xchg
add
xchg
out
lods
cmp
mov
mov
sbbl
push
jae
pop
into
jae
cmp
std
cmp
daa
in
or
pop
push
pop
pop
mov
inc
xorb
mov
test
cmp
cmpsb
cmp
loope
mov
adc
lahf
lret
lret
in
sub
mov
rcrl
ljmp
cmp
dec
das
lcall
sti
mov
pop
push
adc
mov
mov
adc
enter
fists
lock
and
scas
test
aaa
push
push
sbb
test
int
int3
jns
call
jl
lock
cmpsb
sbb
sbb
xor
xchg
hlt
out
insb
scas
sbb
pop
aad
aam
xchg
es
aas
push
ljmp
std
pcmpgtw
cmp
xchg
arpl
cwtl
lahf
push
stos
or
jle
mov
and
shr
fstl
aad
cmp
sub
xor
sub
ficomps
dec
cmp
fdivrs
jns
xchg
push
imul
or
add
mov
ret
cmp
aaa
mov
ret
push
movsb
push
in
dec
cwtl
call
cmp
sarb
push
mov
stc
push
xor
mov
fnstcw
sub
mov
call
mov
xchg
repnz
inc
nop
test
jecxz
out
push
mov
or
insb
js
imul
pop
dec
jno
sbb
dec
sbb
push
outsl
mov
and
xchg
xor
pop
add
or
cmc
inc
std
sbb
xor
jmp
push
sbb
mov
ret
jb
and
cld
inc
pop
push
and
cmpsl
push
sub
mov
mov
push
decl
fimull
leave
lahf
push
inc
loopne
mov
popf
int
mov
adc
insb
or
iret
ret
fwait
aas
sub
mov
imul
and
ficompl
in
push
leave
xchg
das
mov
mov
lret
pop
dec
mov
sbb
movsl
xchg
popa
bound
jbe
pop
xor
mov
gs
loope
sbb
je
movsl
jae
into
jl
rol
xchg
add
mov
jecxz
jecxz
shll
push
movsl
cmp
jne
aas
push
fimull
jb
xor
push
dec
outsl
ja
cmc
push
add
orl
outsl
and
fcompl
sub
dec
outsb
pop
pop
js
xchg
mov
pop
stos
out
or
sbb
jmp
dec
neg
or
fldcw
add
rcr
mov
out
xchg
cmp
mov
sbb
mov
test
imul
jbe
out
sti
xor
repz
nop
xchg
jp
outsl
jno
bound
sahf
mov
cmp
inc
pop
and
lret
sub
sub
int3
lods
fcmovu
hlt
lcall
inc
das
pushf
cmp
sub
testl
loopne
xchg
imul
int
push
push
xor
pop
push
cmp
pop
lods
ret
mov
lcall
shl
out
popfw
fdivrl
shrb
mov
pop
shrl
cmp
adc
rol
lahf
std
sub
xor
icebp
nop
aam
fmul
inc
lahf
push
xor
pushfw
lods
cltd
or
jne
mov
out
inc
xchg
out
inc
push
cmc
xor
push
das
xchg
push
sti
test
sarl
addr16
cmp
lret
bound
sbb
lret
sbb
or
mov
mov
imul
jmp
ret
loopne
inc
jecxz
mov
arpl
pop
xor
test
or
mov
lea
fistpl
xor
push
dec
xor
mov
xor
jmp
leave
das
movsl
push
test
xlat
mov
jl
dec
addr16
cmp
popf
mov
jmp
outsl
cltd
setle
sbb
and
imul
bound
inc
cmpsb
or
mov
push
sbb
push
lcall
or
ficompl
xchg
lret
ret
push
push
gs
mov
cwtl
mov
mov
inc
xchg
imul
icebp
jne
aas
push
or
addr16
int3
mov
push
mov
outsl
mov
push
xor
inc
int3
sub
add
shrl
loope
stos
icebp
pusha
repz
mov
inc
sub
scas
imul
pop
nop
and
movl
rol
mov
aas
int3
dec
cwtl
pop
hlt
js
imul
sub
sahf
lcall
push
adcl
jbe
add
or
adc
mov
pop
cld
dec
push
lahf
mov
fdivrs
popa
pop
or
jno
bound
jne
das
dec
repz
push
cld
in
lahf
jno
es
idivb
sbb
ret
xor
xchg
adc
sbb
add
adc
cs
loopne
add
clc
add
shrl
repz
test
loope
push
add
pop
imul
lahf
in
jo
cmpsb
stos
mov
inc
ret
out
sbb
fmul
arpl
push
aad
jbe,pt
movsb
mov
push
pop
shlb
mov
sbb
scas
pusha
loop
stc
dec
jno
mov
jge
inc
mov
pop
jae
loop
push
loopne
flds
jno
xlat
sbb
outsb
mov
jb
shrb
hlt
mov
cmpsl
pop
cmc
mov
push
pop
outsb
addr16
fistpl
mov
xor
test
outsb
pop
xchg
insl
mov
sbb
push
jno
aas
sub
cmpsb
xchg
fldt
daa
into
fsubl
movsb
sbb
inc
and
cmpb
fdivrs
mov
loope
xchg
inc
out
imul
xor
loopne
repz
lahf
popf
es
sbb
test
aas
or
sarb
xchg
pop
pop
mov
cltd
nop
cli
sub
pop
jbe
mov
adc
imul
hlt
fs
lcall
xchg
dec
mov
cmp
and
int
enter
icebp
dec
xchg
out
mov
cld
add
mov
cltd
cmp
xchg
sub
mov
mov
out
pusha
mov
clc
sub
xchg
push
dec
dec
jge
push
cltd
test
mov
mov
dec
inc
xchg
popf
call
push
jle
les
push
or
ljmp
sub
dec
stos
mov
imul
int
push
int3
daa
shrb
mov
ja
push
add
dec
mov
lret
out
adc
je
ljmp
sub
sbb
add
sbb
adc
mov
sub
mov
std
sub
push
xor
push
cli
imul
mov
push
jge
pusha
inc
xor
push
inc
mov
pop
int
vunpcklpd
out
mov
loope
test
fmuls
ja
adc
jb
pop
cmp
add
ds
mov
loop
jnp
push
mov
popa
pop
and
insb
xor
mov
push
les
dec
loopne
ror
leave
and
sbb
imul
adc
mov
jb
lcall
cmp
sub
sbb
outsl
and
js
jmp
ret
inc
push
out
push
and
fwait
test
jo
pop
xchg
mov
add
xlat
push
inc
sub
mov
sub
adc
jle
add
mov
cmpsl
push
rclb
lds
push
xchg
inc
das
mov
out
mov
jl
pop
mov
jo
jg
dec
mov
sti
imul
inc
and
or
std
jp
pop
adc
mov
outsb
jle
loopne
je
push
jecxz
iret
inc
movsl
test
pop
xchg
dec
scas
into
insl
les
lock
add
shlb
lahf
sbb
faddl
out
push
cmp
movsl
pop
outsl
pop
mov
out
adc
arpl
xchg
sub
outsl
mov
adc
seto
sbb
xchg
ja
int3
mov
in
push
dec
test
cld
inc
jmp
jne
dec
roll
jo
mov
stos
and
push
mov
leave
jl
ss
mov
loope
pushf
dec
fs
lds
ss
inc
xchg
cs
add
fildl
mov
sbb
adc
dec
repnz
daa
push
enter
pop
mov
lods
mov
xor
pop
mov
or
xchg
pop
adc
nop
aam
mov
push
arpl
xchg
dec
mov
pop
and
push
push
mov
cmp
movsb
in
jg
mov
cmp
and
xchg
test
ljmp
hlt
fildll
dec
pop
jbe
or
jmp
inc
sub
addr16
cli
cwtl
xor
sti
pop
push
push
push
cwtl
cmpsb
jne
adc
fbstp
outsl
sti
psllw
icebp
add
jg
scas
jmp
adc
mov
loop
xorb
hlt
mov
shll
add
jmp
push
aad
faddl
inc
hlt
stos
insb
gs
or
mov
leave
inc
out
xor
or
xor
lret
test
out
sahf
out
mov
xor
mov
imul
jge
lret
mov
and
movsl
gs
cmp
and
or
pusha
adc
jb
in
pusha
cld
mov
sbb
ret
mov
scas
xor
test
adc
adc
or
jbe
addb
notl
subl
hlt
testl
dec
inc
xchg
sub
and
sbb
sub
cwtl
lea
in
sbb
push
fstpt
out
mov
testb
cmovg
push
sbb
loopne
jg
adc
mov
jmp
and
mov
ror
je
std
popa
je
sahf
and
cmp
popf
out
aas
out
sbb
push
or
jmp
mov
pop
adc
test
add
rolb
mov
mov
scas
cmp
adc
in
test
or
inc
cmp
in
lea
fs
bound
cmp
sbb
mov
out
mov
mov
inc
ljmp
cmp
icebp
pusha
scas
jno
popa
xchg
jle
loopne
add
cli
and
inc
popf
or
sbb
cmpsb
and
add
adc
shl
inc
fists
or
out
test
mov
dec
shlb
mov
or
in
jge
mov
mov
add
push
jnp
dec
gs
jmp
push
and
loope,pt
ret
adc
cmp
mov
mov
lods
inc
inc
adc
push
mov
inc
in
cs
insb
jne
push
movsl
dec
scas
cmp
scas
mov
jns
inc
outsl
adc
adc
aas
mov
stos
xor
cli
pop
xorl
push
in
mov
mov
or
jne
ret
pop
pop
icebp
or
push
pusha
sbb
jecxz
and
xlat
gs
sub
cmpsb
mov
xchg
or
add
out
mov
mov
push
fwait
decl
push
stos
je
lcall
ds
xor
jg
test
jecxz
ja
imul
cli
lret
add
push
pop
adc
xchg
mov
int3
mov
inc
add
repnz
jl
fildll
insb
int3
stos
lods
mov
int3
loop
daa
pop
jmp
add
mov
cwtl
ljmp
repnz
jecxz
in
lods
jo
in
cmc
mov
test
mov
enter
jge
setnp
mov
scas
fstl
or
loope
add
mov
or
or
je
mov
incb
insl
add
jae
cmpsb
or
sbb
and
inc
dec
cmp
adc
pop
xchg
xchg
loopne
jecxz
adc
mov
mov
lds
jno
movsl
mov
leave
xor
fstp
out
pop
lea
aas
push
adc
mov
ret
jnp
or
mov
or
mov
xor
push
or
xor
popa
cs
jmp
fwait
xor
inc
test
dec
cs
arpl
push
inc
sub
mov
sbb
test
sti
rcrb
sub
jbe
push
dec
pop
add
mov
adc
pop
daa
movsl
add
addr16
mov
pop
clc
scas
shr
push
cmp
imul
or
iret
in
popf
jnp
or
push
imul
xchg
or
mov
int
mov
inc
mov
mov
jp
xor
inc
and
push
cmp
push
jb
out
adc
stos
xchg
js
xlat
leave
cltd
pop
push
insl
test
movsb
aaa
addr16
xor
mov
and
aaa
clc
xlat
or
mov
ret
je
mov
nop
fldcw
jl
mov
push
inc
xor
mov
sub
aaa
jp
out
insb
dec
stos
data16
fdivs
push
out
mov
rcll
mov
jp
inc
ss
in
int
repnz
mov
std
xor
mov
dec
sbbb
add
test
scas
pop
xor
adc
lahf
data16
adc
and
inc
dec
push
test
fcomip
fisttps
sub
addb
mov
mov
stos
shll
add
scas
cs
shrl
out
stos
out
jae
jne
icebp
aaa
dec
pusha
and
fisubl
mov
cwtl
push
mov
lds
xchg
add
inc
push
aas
test
in
movsl
jnp,pn
mov
movsl
sub
push
jb
mov
dec
push
jns
insb
push
sbb
or
add
push
out
push
mov
out
js
out
je
stos
adc
lods
cmp
xchg
push
push
xchg
repnz
cmc
xor
lods
insl
jae
inc
mov
mov
aas
adc
fwait
test
dec
mov
pop
lds
mov
and
cmpsl
rorb
clc
or
loopne
mov
xor
jo
or
cmpsl
add
add
pop
nop
lret
and
mov
dec
jl
aas
xor
imul
popa
pop
imul
test
stos
fidivrs
in
imul
fs
int
jo
mov
or
cli
inc
lahf
and
mov
mov
mov
mov
int
ljmp
mov
call
mov
aam
ja
mov
adc
push
xchg
ljmp
lea
sub
mov
xchg
pop
push
xchg
lock
mov
insl
xorl
add
or
push
adc
mov
mov
negl
xor
dec
ss
adc
xor
mov
jns
sbbl
mov
jne
test
dec
xchg
adc
mov
cmc
pusha
cmp
xchg
adc
scas
mov
pop
sub
repz
imull
ret
cld
ret
fadds
je
push
rcrb
sub
std
sti
imul
xor
insl
push
stos
lret
mov
popa
add
pop
into
stc
lcall
das
lods
or
push
sti
xor
js
loop
repz
mov
mov
pop
jb
in
pop
dec
rorb
mov
int
std
cmpsl
test
jmp
jb
mov
inc
sbb
pop
subl
popa
adc
adc
jl
mov
hlt
lahf
outsl
cmp
mov
ret
pop
outsl
jbe
loop
mov
mov
das
mov
push
mov
mov
sbb
aad
jmp
popa
cli
out
sbb
push
mov
addl
push
jno
cli
jge
dec
lds
pop
movsb
in
xchg
mov
push
mov
shrd
sub
sub
pop
rclb
ret
sbb
adc
sub
jno
js
fst
scas
cwtl
sub
lea
outsb
sub
and
mov
std
cltd
xor
bnd
aad
inc
add
call
cmpsb
das
add
inc
push
out
int3
push
pop
lcall
sub
stos
leave
les
push
mov
mov
cltd
lahf
pop
mov
pop
mov
add
lret
dec
add
test
jns
cmpsl
cwtl
mov
repnz
repnz
js
jne
inc
pop
or
test
mul
adc
xchg
mov
sub
mov
push
ja
or
cmp
fs
mov
bound
lret
icebp
fstps
into
mov
insl
xchg
sub
fstp
sahf
xor
ret
loop
movsl
push
orps
dec
popa
and
ljmp
addr16
pop
test
lods
fnstsw
mov
sbb
pop
cmp
in
mov
and
arpl
push
out
jne
outsb
or
mov
jmp
call
mov
insl
pop
in
sbb
sub
bound
and
cmpl
jle
repz
adc
clc
pop
adc
insl
repnz
fs
push
std
mov
adc
jb
mov
out
adcb
lods
movaps
iret
mov
jg
lock
xchg
push
push
leave
aas
std
test
jnp
js
xchg
or
pop
push
push
rcrb
cmp
or
in
pop
sarb
pusha
sbb
fmull
imul
fwait
jo
in
adc
xlat
cmp
cmp
sub
sbbl
or
jecxz
jge
popf
sbb
inc
pop
dec
xchg
mov
aas
out
xchg
inc
dec
lock
sub
std
pop
push
pop
mov
movsl
dec
ret
lret
or
jg
rorl
cmp
addr16
mov
mov
jae
mov
fnstenv
push
cmp
ja
int
cmp
sbb
std
push
xorl
mov
pop
or
cmp
cmp
sbb
xchg
dec
les
in
stc
add
push
cs
lods
xchg
and
inc
fs
jno
insb
andl
sbb
sub
ret
fadds
add
pop
jge
icebp
mov
cmp
jne
icebp
pop
cmp
scas
dec
enter
addl
ja
ja
rol
int3
jg
xor
data16
movsl
sbb
cmpsl
dec
rolb
pop
xchg
ds
jge
or
or
lret
stos
hlt
sbb
popf
adc
push
ja
mov
push
sbb
mov
xchg
or
stos
dec
jle
push
xlat
pop
movsb
mov
pop
jp
push
mov
sub
dec
dec
ret
out
mov
outsl
loope
out
rcr
dec
hlt
iret
ss
and
movsl
scas
lahf
addl
js
lret
pop
out
dec
aas
sarl
pop
fcoms
mov
or
cs
adc
cwtl
aaa
mov
into
add
lock
push
ror
lods
imul
leave
sbb
imul
or
enter
mov
arpl
cmpsb
cmp
outsl
adc
aaa
adc
mov
cmp
mov
mov
add
mov
and
iret
outsb
and
mov
stos
cwtl
push
add
push
ja
mov
loope
sub
test
adc
sbb
xchg
push
xor
mov
push
das
mov
adc
daa
dec
cmp
add
pop
inc
sarl
scas
lret
jl
stos
outsl
xchg
sub
adcb
sub
push
add
lret
shr
int3
jecxz
psubb
pusha
mov
xor
mov
imul
inc
lock
cwtl
xchg
mov
lods
adc
cld
sub
mov
cwtl
inc
mov
cmp
outsb
out
rcrb
in
push
mov
or
mov
daa
add
je
adc
sbb
sub
lods
pusha
mov
outsb
neg
imul
or
inc
iret
cmp
repnz
lods
or
fcomp
inc
pop
pop
sbb
mov
ret
push
int3
arpl
and
shr
testb
inc
jle
ficoml
sub
ficompl
xchg
int3
push
dec
cmc
bound
or
mov
jle
js
add
push
inc
pushf
jp
mov
cmp
dec
add
outsl
push
repz
ds
imul
out
int3
pop
cmp
dec
pop
mov
js
cld
cmpsb
out
inc
into
dec
mov
mov
insl
pushf
add
addr16
adc
movsl
nop
mov
ds
push
jl
inc
sbb
int3
ret
xchg
push
movsl
adc
add
push
call
mov
fwait
mov
mov
ljmp
dec
js
gs
inc
dec
xorb
sbb
adc
pop
loope
mov
pop
js
aas
test
ficoms
fs
push
fstps
and
imul
and
add
lods
mov
lret
mov
movsb
mov
sbb
sbb
mov
and
mov
insb
je
and
frstor
mov
push
and
test
jns
and
cmp
pop
xchg
movsl
mov
pop
sub
jns
test
lcall
pop
push
adcl
pop
outsl
mov
mov
test
pusha
cld
mov
sbb
movsl
scas
leave
mov
adc
idivb
popf
add
popa
loope
inc
std
addl
pop
call
add
mov
and
sbb
mov
sbb
addl
outsl
inc
sub
push
ret
mov
mov
xchg
mov
jg
mov
fwait
sub
add
or
jmp
mov
mov
mov
in
cli
jo
mov
enter
scas
xchg
pusha
stos
jle
or
dec
dec
push
xchg
lahf
mov
popf
shrl
mov
pop
and
lock
dec
scas
rclb
lods
dec
sahf
scas
cmpsb
xor
sbb
inc
aaa
popf
movsb
dec
int
xchg
ds
sub
sbb
sub
insl
cmp
xlat
in
push
lret
lahf
leave
roll
pop
ret
jo
into
dec
je
lret
stos
imul
jno
arpl
aam
dec
cmp
fsqrt
test
xchg
xor
pop
int3
and
mov
mov
stos
push
sub
je
roll
push
pop
push
cs
or
call
rcrl
jmp
pop
sub
push
add
cmpsl
add
pop
imul
popa
xor
pop
push
xchg
jmp
stc
clc
mov
mov
je
fs
sbb
and
movsb
inc
sub
push
gs
das
popf
xor
notl
push
mov
test
cld
jbe
dec
mov
pop
insb
jbe
add
jmp
and
push
xchg
rcl
add
mov
in
mov
xchg
push
mov
cmp
mov
inc
mov
imul
repz
sub
jl
fdiv
scas
sub
leave
loop
je
mov
push
lret
pushf
xlat
gs
int3
mov
jno
enter
outsb
in
in
mov
imul
repz
jl
fwait
add
mov
jecxz
and
jmp
mov
insl
cmc
xor
lds
in
movsl
loopne
pop
lods
leave
imul
jg
mov
in
scas
movsl
mov
test
fists
mov
dec
xor
mov
sbb
filds
in
stos
mov
pop
lods
cmp
jg
aam
or
aaa
and
cmc
ror
in
daa
sbb
arpl
or
xor
shll
xchg
and
adc
push
fwait
add
adc
sbb
adc
add
add
pop
cld
fs
incb
scas
adc
test
rcrb
dec
inc
cmp
mov
out
inc
ljmp
mov
shl
pop
pop
adc
lret
push
xchg
xchg
or
rorl
cmpsl
lea
jo
push
lret
lock
incl
hlt
leave
mov
jge
or
outsb
sbb
cmpsb
xlat
nop
pop
jns
mov
jl
cmp
rolb
popf
jno
lcall
adc
xor
insb
mov
push
pop
add
icebp
mov
sub
cltd
pop
sub
and
sub
xchg
das
inc
loope
cmp
stos
ret
cwtl
mov
cmc
out
cltd
push
pop
popa
add
divl
out
repnz
test
repz
mov
jno
jg
mov
cmp
stc
insl
jmp
pop
out
jo
or
cs
or
mov
jmp
aaa
stos
mov
jbe
fcomip
aam
iret
inc
shl
xchg
test
mov
rcrl
inc
cmp
js
sbb
call
inc
test
les
int
xchg
fistpl
cmp
xchg
jae
test
outsb
cmp
mov
xor
icebp
les
rcll
inc
push
sbb
pop
mov
mov
mov
dec
ljmp
imul
adc
mov
out
mov
add
xor
in
pop
sub
add
ljmp
cld
jno
adc
add
int3
xor
dec
pop
rcll
push
movsl
mov
cs
sbb
aas
mov
mov
popf
icebp
insb
xor
dec
pop
jne
lods
mov
push
mov
jo
stc
mov
ja
sbb
pop
fmull
adc
or
lcall
push
arpl
loopne
pop
lods
cmpb
inc
rolb
sub
cli
jmp
loopne
xchg
mov
jmp
lcall
cmp
pop
jg
xor
jnp
movsl
pop
xor
sub
adc
pminub
rol
mov
pop
inc
rorb
cmpsb
popa
nop
lock
outsl
adc
insb
jp
xor
mov
out
scas
mov
rorb
jg
pusha
pop
jnp
push
add
aam
pop
xor
test
jnp
dec
repz
xchg
icebp
lods
fwait
inc
mov
xchg
rclb
jg
loopne
addl
lahf
cld
insl
cmp
mov
jae
or
push
jmp
out
or
lahf
cli
xchg
inc
push
adc
icebp
aad
mov
push
lcall
add
or
arpl
dec
pop
mov
jnp
lods
fdivs
add
aam
pop
aam
sbb
xchg
stc
and
and
mov
pop
inc
clc
fsubrl
mov
inc
es
push
lock
outsl
add
ja
imul
adc
jp
es
pop
pop
jbe
mov
xor
movsw
inc
and
pcmpeqb
pop
sbb
dec
push
or
lcall
dec
sti
daa
pop
mov
push
popf
sbb
push
stos
xor
fistps
loop
imul
rcrl
repz
xchg
push
dec
mov
fstpl
pop
mov
out
sub
imul
stc
cmpsb
sti
jg
xor
mov
mov
pushf
iret
xchg
iret
xchg
mov
inc
es
fbstp
pushf
popf
jl
incl
ret
in
pop
xor
arpl
push
push
xchg
jecxz
test
in
bound
adcl
xchg
out
mov
push
cmp
or
push
or
mov
push
mov
and
test
adc
insl
pop
push
hlt
adc
outsb
mov
cli
sbbb
adc
cmp
int
repnz
pop
sbb
jp
lahf
add
jnp
jo
cs
xchg
ret
push
pushf
fisttps
xchg
mov
push
in
out
mov
xor
addr16
sbb
and
push
lods
mov
in
outsl
mov
cld
fdivr
std
ljmp
lcall
enter
int3
or
push
loopne
push
mov
and
inc
mov
roll
mov
adc
or
ret
xor
and
pop
jl
jns
adc
mov
sbb
push
sub
push
or
sbb
out
dec
negl
xlat
ja
repz
aas
cmc
rorb
test
rorw
insl
and
cli
sti
or
xlat
push
sbb
adc
and
jns
sub
adc
push
das
jbe
or
outsb
mov
xchg
fidivs
lret
push
or
jo
outsb
enter
out
dec
xchg
inc
icebp
mov
ljmp
addr16
cltd
inc
popf
mov
jnp
cmp
sub
jno
lret
jnp
outsb
adc
mov
jmp
adc
xchg
test
sub
and
xchg
cld
dec
sub
push
adc
inc
out
sarb
mov
jbe
inc
outsb
jg
fldenv
dec
stos
sbb
shll
gs
dec
popa
jb
mov
mov
mov
mov
cmp
jne
cmp
add
mov
ljmp
inc
xorl
push
sub
gs
xchg
dec
sub
mov
lods
vhaddps
lcall
inc
pop
movb
sti
imul
fprem1
ret
cmp
mov
dec
pop
sbb
pop
inc
sti
jne
lock
or
adc
or
cmp
pop
or
push
iret
mov
sbb
in
pop
scas
arpl
addr16
or
add
sbb
adc
sbb
insl
dec
adc
lret
leave
test
pop
push
or
and
xor
daa
push
out
dec
adc
insb
jnp
cltd
repz
ficoms
cld
into
add
ljmp
xor
jae
pusha
int
movsl
push
dec
je
xor
push
loopne
mov
cmp
or
lea
sub
hlt
jns
mov
jnp
add
in
repnz
adc
push
inc
outsb
mov
roll
sub
cs
shrl
xchg
sar
and
xchg
push
jno
add
dec
into
fmuls
jl
mov
add
cmp
mov
inc
mov
push
jno
xchg
aam
pop
pop
test
sbb
inc
lock
movsb
insb
mov
pop
nop
inc
rcl
insl
and
je
cltd
inc
int3
and
xchg
ror
sbb
test
mov
mov
jno
push
dec
dec
lret
pushf
pop
gs
dec
cs
xor
jno
mov
inc
fimuls
bound
shll
inc
mov
fcomip
cmpsb
sub
mov
rcrl
jno
jb
clc
adc
jns
pushf
scas
scas
cmp
lret
or
jl
pop
sti
pushf
mov
stos
das
push
mov
sub
int
xor
mov
jmp
out
out
out
lsl
in
pop
rcll
mov
jae
in
pop
and
out
sbb
push
scas
stc
out
ret
scas
out
arpl
pop
jmp
dec
or
cmp
mov
jb
xlat
test
sbb
stc
sub
and
scas
loopne
xchg
xchg
dec
jbe
push
test
fisubrl
lea
dec
cmpsb
mov
adc
jl
test
add
mov
or
dec
xor
inc
js
mov
shlb
data16
dec
aas
mov
stc
pop
pop
mov
sub
fistl
je
jle
fdiv
sbb
push
add
inc
jge
jp
lods
jecxz
fidivrl
jno
mov
mov
mov
pop
adc
repz
add
aam
in
imul
stos
mov
inc
decl
jle
fsubrs
sub
ret
into
xor
jmp
test
movsl
mov
or
ffreep
jnp
sbb
dec
mov
xlat
xor
or
ret
out
ret
mov
cmp
cwtl
mov
fisubrs
outsb
je
call
data16
mov
mov
or
mov
mov
cmc
movsl
daa
push
add
xchg
xchg
mov
inc
dec
lret
loopne
cmp
xchg
int
rolb
mov
bound
add
jge
sub
mov
cmp
mov
pop
jmp
mov
cmpsl
xchg
xlat
lcall
aad
mov
xlat
and
xorl
mov
add
fcoms
or
icebp
jecxz
xchg
data16
adc
lods
jae
mov
mov
mov
lret
mov
cmpsb
cmp
mov
mov
andl
outsb
push
shrl
adcl
enter
int3
xor
scas
mov
dec
int
insb
loopne
insl
adc
fistps
out
aas
in
jl
leave
nop
mov
rolb
rcrb
pop
pop
int3
mov
dec
mov
xchg
shrb
pop
nop
pusha
pop
mov
pop
outsl
lret
int
in
fmuls
and
jle
test
out
cltd
pop
dec
lcall
pop
test
rcll
push
enter
sbb
out
xchg
leave
mov
jbe
push
sbb
xor
nop
lret
xchg
cmp
les
dec
out
test
decb
std
sahf
push
jl
inc
mov
aad
roll
movb
mov
mov
sub
aad
shll
jno
pushf
jecxz
jmp
xor
ds
mov
dec
test
sbb
lcall
repnz
stc
push
push
aaa
fwait
andl
sub
pusha
push
and
pop
mov
popl
mov
xor
cld
mov
and
lock
sbb
inc
jg
xchg
xor
test
and
pop
lock
add
mov
test
sti
cmpsl
pop
repnz
sbb
cld
push
xlat
push
lret
stos
mov
ds
aam
xchg
mov
xlat
shll
jmp
cs
and
xor
pop
icebp
add
add
push
push
mov
jp
ja
sbb
repnz
pop
cmc
xor
scas
mov
fwait
push
jnp
test
rcrl
aad
pusha
imul
mov
xlat
sbb
dec
and
insb
or
lds
fistl
xchg
ja
leave
xchg
lret
scas
lods
cs
cmp
inc
xchg
data16
and
pop
rol
lds
push
imul
jb
jno
xlat
jg
cmpsl
cld
clc
mov
imul
add
leave
stc
jmp
dec
cli
test
xchg
lcall
pop
adc
and
int
jl
loopne
sarb
cmpb
or
push
outsl
inc
lods
pop
inc
push
rcrl
stc
repnz
aam
push
ret
or
xchg
cmp
xrelease
lret
or
movsw
out
mov
mov
add
push
inc
lcall
adc
scas
inc
xchg
int
lods
into
lcall
cmp
pop
mov
ds
mov
mov
dec
jmp
sti
idivb
sub
stc
je
xor
test
push
cli
xchg
cwtl
cs
lods
movsb
loope
roll
adc
cld
sbb
clc
hlt
dec
bound
pop
fidivl
mov
shrb
push
and
movsb
mov
jns
mov
in
xor
cmp
js
add
cmpsb
testl
cmp
xor
jb
in
inc
icebp
inc
jl
xor
xor
ss
push
push
jecxz
sbb
enter
bswap
mov
das
jmp
in
sahf
in
or
push
aas
fidivrl
sbb
mov
adc
xorb
fadd
sub
xchg
std
xor
test
xchg
push
mov
add
mov
jle
ss
push
loop
enter
js
cli
loop
iret
gs
mov
xchg
sahf
fsubs
fwait
sti
and
test
mov
xchg
test
iret
insb
inc
push
and
clc
sbb
dec
pop
cmp
cmpsb
faddl
mov
mov
cmp
xchg
xchg
mov
andb
xchg
inc
xchg
inc
pop
xor
in
sbb
cs
sub
das
test
sub
clc
push
dec
imul
shl
pop
or
lea
nop
add
sahf
push
outsl
pop
cmp
lahf
int
repnz
or
pop
xor
shlb
aas
push
pop
out
dec
shlb
stos
push
repnz
ja
mov
iret
ret
push
sbb
cmovne
fnstenv
adcl
repnz
inc
out
push
je
jo
inc
cld
lcall
insb
cltd
insb
jmp
into
outsl
push
loopne,pt
push
loope
push
bound
scas
sub
in
int
mov
or
push
insb
jo
inc
cmp
mov
sbb
ret
lock
imul
pop
out
pop
int3
jp
sub
aas
les
cld
inc
jb
scas
jbe
adc
pop
xchg
lods
jae
xor
pop
pop
xchg
insb
mov
cmp
dec
jnp
fwait
cmp
fimull
les
and
lret
or
jb
stos
rclb
xchg
jne
inc
hlt
cmp
fs
xor
das
js
fisubl
jmp
jno
or
fs
xor
mov
mov
bound
mov
cld
sub
jmp
or
je
bnd
mov
xchg
test
push
add
sbb
mov
movsb
clc
repz
xor
inc
or
pop
rcll
ds
and
push
gs
aas
imul
jp
dec
mov
sub
xchg
mov
frstor
dec
icebp
rcrb
popf
sti
push
enter
dec
icebp
xchg
push
mov
shl
lock
and
sarl
push
xor
sbb
and
cmp
xchg
inc
mov
push
popf
adc
push
push
addr16
adc
cmp
stos
sbb
gs
clc
lahf
andb
push
mov
mov
mov
pop
dec
mulb
add
cmpsb
outsl
sub
scas
jg
add
mov
pop
mov
ret
xchg
inc
xchg
movsb
lret
cmp
cmc
xchg
shl
dec
test
outsl
int3
mov
or
std
inc
insb
lret
testl
loopne
jecxz
add
mov
or
iret
out
cs
fistl
and
add
dec
mov
cwtl
imul
cmp
mov
lds
mov
add
jb
loope
add
das
mov
jae
popa
jp
pop
fs
daa
fldenv
sbb
jb
sbb
sub
idiv
movsl
sbb
scas
inc
out
ljmp
cld
ja
xor
or
inc
gs
jge
lock
and
jle
icebp
leave
enter
push
js
dec
dec
jns
cmc
rcrl
lret
xor
and
and
push
sub
rclb
jmp
xchg
push
ret
ret
xchg
jp
mov
inc
cmp
pop
imul
sub
mov
bndldx
dec
inc
mov
inc
and
in
cltd
add
scas
pop
and
mov
push
mov
les
cmpb
jge
inc
shr
sahf
pop
ret
xchg
movsb
popf
popf
cmc
out
adcb
lods
aad
loop
push
inc
push
jb
mov
jb
insb
ds
adc
adc
jge
inc
mov
jmp
mov
test
imull
nop
inc
push
repz
add
mov
in
and
cmp
iret
sub
mov
lods
mull
js
fldl
movsb
inc
syscall
test
xchg
cltd
loop
rorl
sub
pop
test
xchg
into
cmp
adcb
lcall
pop
or
inc
outsl
into
and
mov
or
jnp
std
aas
inc
lea
xchg
mov
jnp
cmc
mov
xchg
mov
sbb
popf
lcall
lret
das
lock
xor
addl
icebp
lret
pop
sbb
pop
divb
mov
in
add
and
pop
pushf
jb
xor
dec
mov
pushw
cmp
nop
jb
adc
nop
lods
inc
out
dec
pop
xchg
pop
cmpsb
push
aam
pushl
xor
out
ret
mov
pop
arpl
sub
xchg
mov
xchg
adc
repz
and
fcomp
jne
or
scas
sbb
cmp
aas
sahf
xchg
ja
loop
sub
std
cmc
call
sub
and
mov
jg
dec
shll
or
sbb
mov
test
sub
push
xchg
xchg
cltd
ds
jne
in
fstps
mov
cmpsb
pushf
dec
push
ja
cmp
jo
bound
mov
jp
movsl
or
xor
out
popa
and
lea
mov
mov
mov
jnp
lret
dec
loop
hlt
push
mov
pop
add
inc
and
mov
push
push
call
and
xchg
adcl
inc
push
out
out
shlb
add
movsl
call
rcr
push
es
pushf
daa
mov
push
cltd
dec
xchg
adc
stc
mov
test
movsl
aas
mov
std
xchg
add
fistpl
arpl
add
ja
imul
lcall
push
pusha
ficoml
mov
aaa
mov
ss
mov
sarl
cltd
stos
cwtl
mov
push
jge
mov
mov
movsl
adc
mov
stos
fsubrp
mov
add
dec
mov
inc
cltd
jecxz
mov
mov
icebp
and
sub
daa
std
xchg
data16
and
or
cld
ret
jnp
cmp
inc
add
mov
mov
data16
xlat
xor
sbb
push
filds
mov
or
imul
and
push
and
imul
sub
dec
xor
popa
lahf
scas
icebp
mov
cwtl
adc
xchg
sbb
pop
or
pop
xor
ss
nop
in
ss
mov
call
das
mov
ret
and
cmp
lea
lret
pop
xor
test
sbb
push
mov
ds
leave
or
int
push
and
or
or
sub
mov
jmp
push
mov
dec
push
ljmp
lahf
lret
cmpsb
fpatan
cmp
cmpsb
rorl
add
in
xchg
fwait
jne
pop
imul
cmp
lea
leave
pop
mov
subl
dec
ljmp
lods
jge
push
mov
jmp
cmp
pusha
js
and
add
sarb
inc
in
or
orl
add
repnz
jg
dec
xlat
cs
sub
fbstp
dec
imul
sti
mov
push
jp
pminsw
or
mov
mov
pop
fsubr
add
dec
loopne,pn
dec
fistpl
std
lahf
cli
mov
int
hlt
daa
ss
xor
mov
or
mov
inc
cmp
ljmp
pop
xchg
mov
enter
les
fstl
cld
mov
lea
push
or
popf
mov
pop
or
pop
loop
mov
mov
jns
inc
pop
int
insl
sbb
rep
fwait
stc
mov
mov
std
ja
cmpsl
cmp
push
je
sbb
data16
call
dec
jae
jg
loopne
pop
xlat
fsubs
xchg
inc
xchg
out
pop
jnp
jns
jae
mov
daa
adc
sbb
add
aas
test
inc
jecxz
icebp
dec
mov
cmp
xor
insl
test
rorb
cmp
movsb
repnz
cmp
popa
negl
jmp
in
adc
pop
out
sub
ret
and
mov
les
jo
aad
pop
ja
gs
ror
inc
dec
sub
arpl
push
and
jge
cmp
arpl
lret
jns
jo
lret
ja
stc
insl
xchg
dec
imul
orl
xor
lock
sbb
adc
es
in
bound
dec
popf
vsqrtsd
xchg
push
mov
push
dec
dec
es
mov
popa
mov
mov
lahf
sahf
daa
fstpt
cltd
mov
int3
and
push
popa
mov
cmp
ret
cwtl
mov
cli
sti
dec
in
lcall
jns
bound
adcl
push
or
lret
push
popf
jecxz
pop
popl
dec
mov
lock
mov
js
pop
inc
add
or
sahf
xchg
outsl
daa
pop
aad
lds
call
in
ret
push
cmpsl
fistps
sarl
sbb
add
ja
and
movsl
cmp
pushf
mov
dec
mov
jbe
or
imul
lds
shrl
aad
das
in
ret
jb
cltd
in
mov
mov
xor
mov
js
sub
xchg
insl
fcmovne
push
add
orb
lds
sub
scas
jne
int
lock
scas
lock
into
out
push
sub
outsl
jnp
mov
or
inc
lds
rorb
xor
lcall
gs
adc
int3
push
loopne
jae
push
cmp
push
cmpsb
jb
jmp
cltd
test
nop
sub
lds
dec
shll
jge
fcompl
mov
pop
mov
in
pusha
mov
mov
dec
out
or
xlat
ficompl
cmpsb
jecxz
jo
adc
jmp
jge
imul
fs
jae
sub
xlat
and
cmp
add
mov
cmp
aad
test
fsubrp
pop
es
xor
lcall
shrb
shl
aaa
or
xor
jl
mov
mov
mov
insb
xchg
mov
neg
into
pusha
sbb
lret
jg
xor
push
inc
or
mov
xchg
ficoml
jle
jnp
out
push
repnz
ja
test
gs
pop
pop
push
xchg
mov
mov
movsb
push
mov
sarl
aaa
imul
icebp
pop
push
scas
fcmovb
push
std
xor
ds
movsl
mov
jae
sbb
cs
notl
fstl
pop
add
inc
xlat
fwait
push
or
popf
mov
jmp
add
jp
or
mov
sub
jo
pop
dec
nop
test
out
cmp
ljmp
stos
adc
repz
ja
push
push
jne
cli
cmpsb
cwtl
jne
mov
shlb
or
push
xchg
jg
cli
pusha
adc
incb
out
and
mov
dec
loop
mov
insl
sub
cmc
insl
aam
in
inc
xchg
mull
adc
xchg
cs
jo
xchg
out
jns
mov
mov
int3
dec
pop
movsb
cmpl
sub
je
add
pop
lcall
test
xchg
jbe
adc
stos
ja
sub
add
jge
cmp
fistpll
add
mov
xchg
sbb
mov
fwait
jmp
shll
or
cmp
imul
xlat
pop
mov
xchg
je
stos
dec
mov
fcompl
or
sbb
leave
shrl
jns
nop
mov
jmp
int3
sub
test
dec
iret
mov
xlat
mov
sub
push
mov
rcrl
imul
shl
mov
imul
jp
push
push
cwtl
or
xor
xchg
lock
dec
mov
mov
mov
in
jl
repnz
push
adc
rcrl
mov
decb
shl
sbb
pop
push
mov
mov
into
and
dec
rorb
out
insb
lock
lock
inc
mov
or
iret
mov
and
aad
test
mov
ds
pop
jp
add
je
out
mov
dec
xorb
mov
jge
and
xor
scas
icebp
xor
xor
test
mov
das
daa
test
pop
and
movsl
push
insb
es
negl
pop
int3
adc
pop
cltd
sub
add
dec
lret
adc
incl
pop
psubd
jb
cmpb
cmpsb
popf
pop
xor
imul
add
pop
das
xchg
cmpsb
cltd
mov
aad
and
fstpl
xchg
mov
add
in
sub
neg
das
cli
cmp
sub
lock
enter
mov
add
sbb
adc
outsb
insl
cld
fiadds
pop
out
push
and
in
sub
loope
lret
dec
mov
mov
insl
mov
fcoms
xchg
pop
outsb
sbb
push
push
xchg
and
in
sub
xchg
mov
into
inc
xchg
jl
sub
dec
add
jb
ret
inc
sub
mov
das
xor
push
mov
dec
mov
push
mov
add
jg
jns
inc
xor
std
orl
outsb
push
sahf
jno
or
sti
mov
xchg
pop
fsubl
lock
fdivs
mov
fmulp
addl
mov
mov
lock
outsl
and
inc
adc
stos
and
pop
fidivrl
push
mov
dec
xchg
cmpsb
fbld
mov
fs
sbb
push
jg
pop
loop
jo
out
stos
ficomps
adc
dec
push
pop
leave
mov
sbb
mov
push
lahf
lods
push
cli
gs
inc
shll
lret
sub
xchg
xchg
dec
orb
cmpsl
call
lret
pop
inc
ljmp
sbb
xlat
fs
mov
aaa
jns
call
vprotb
inc
add
dec
or
mov
fisubs
pop
rcrb
test
outsb
xchg
cmp
dec
mov
mov
lea
jo
addr16
es
fwait
push
std
adc
jno
cmc
fs
or
adc
aas
xor
xchg
mov
fistps
jb
jae
les
lea
ds
add
je
xlat
rcrb
mov
jae
jle
sbb
xchg
pop
cmp
aas
mov
jae
repz
fldcw
xchg
hlt
pop
dec
mov
sti
xchg
push
sub
in
push
jmp
inc
arpl
add
cmc
movlps
outsb
push
inc
pop
lcall
enter
addl
jg
popa
cmp
cmp
and
loop
stc
out
cmc
xor
or
les
inc
sub
test
cwtl
pop
hlt
fwait
daa
out
xchg
loopne
sbb
adc
add
adc
sub
mov
pop
mov
repnz
xor
and
push
sub
movsl
imul
fs
addr16
inc
mov
mov
icebp
sbb
popf
cltd
gs
lahf
sti
push
std
rcll
lahf
or
movsb
add
mov
cmpsb
pop
mov
lods
shrl
in
stc
out
lea
mov
mov
les
cmp
and
lock
jns
stc
jmp
scas
jnp
fdivrl
jbe
stos
movsl
pop
mov
jecxz
ljmp
jns
jno
cs
in
add
cs
lock
jo
push
mov
jecxz
cmp
out
dec
mov
mov
sbb
bound
push
cmp
mov
adc
pop
push
imul
pop
xchg
test
mov
sti
lret
jns
lods
rol
not
stos
xor
pop
negl
pop
daa
sub
lods
ret
or
call
bnd
and
cs
jne
cmp
add
jne
adc
push
xchg
stos
popl
rorb
movsl
sbb
xor
aam
mov
sbb
or
mov
push
pop
movsb
or
sub
shll
adc
pop
mov
pop
and
insb
adc
aaa
sar
scas
rcrb
adc
add
js
fadds
adc
sub
pop
and
ror
xor
lret
add
inc
and
mov
xor
das
fwait
sbb
ljmp
lods
and
inc
add
or
or
xlat
jp
push
and
inc
xor
jnp
test
xchg
movsb
dec
fs
sub
jmp
loop
dec
xchg
ss
mov
test
fsubrl
notl
arpl
popa
insl
stos
cli
mov
test
xchg
pushf
pop
xor
adc
fwait
lds
and
scas
addb
or
ret
mov
fsubrs
and
fsubp
ret
dec
inc
pop
out
ret
pushf
add
and
aaa
mov
cmp
imul
fmul
out
mov
xchg
add
mov
push
adc
fs
popa
cmp
cmpsl
push
mov
push
jo
push
ret
cmp
and
lods
xor
cmp
bound
mov
cmp
mov
push
fisubrl
inc
psrlw
mov
sbb
xor
lret
lea
push
rcrl
add
rclb
aam
pusha
mov
inc
cli
sbbb
fiaddl
jp
aad
xchg
lods
es
xor
sbb
mov
jle
loop
xlat
xlat
mov
scas
xchg
xor
fnstcw
movsl
pushf
jno
lds
xchg
adc
je
lret
push
mov
push
ja
push
adc
cmp
mov
xchg
fdiv
pop
sub
mov
mull
jno
bound
inc
fnsave
or
mov
sahf
push
cmp
fildl
ss
or
push
mov
push
push
pop
int3
jno
rclb
pop
aaa
mov
ss
ret
jl
mov
sub
notb
mov
add
out
inc
mov
sub
bound
xchg
push
push
rcrb
jns
sbb
lea
jle
jne
cmc
shrb
xchg
jo
or
jae
cmc
pop
mov
pop
sbb
lret
adc
stos
mov
scas
scas
xlat
clc
mov
xorl
sbb
das
nop
dec
dec
ljmp
inc
in
cmp
cld
add
cs
insb
jne
or
scas
leave
xchg
ret
push
pop
mov
cmp
fcoml
insl
hlt
pop
shrl
lea
hlt
int3
aad
cmp
lods
mov
loope
mov
scas
pushf
rclb
mov
inc
ja
push
mov
jge
or
mov
lahf
xor
cltd
inc
dec
add
cmpsl
movsl
adc
sub
and
xchg
push
push
lahf
into
outsl
cld
pushf
and
lds
mov
xor
sbb
rol
hlt
test
or
sub
adc
fsubrs
sub
cli
add
push
test
cmc
mov
fld
orb
jp
pop
and
pop
jne
insl
jo
pop
js
es
ja
repnz
or
shll
adc
add
and
cld
push
repnz
in
scas
pop
lret
pop
pop
cmp
test
ss
adc
aam
scas
xchg
test
mov
fs
ljmp
and
jno
cmp
mov
repnz
rcrb
xor
adc
xchg
xchg
imul
xchg
loopw
pop
mov
enter
leave
ds
hlt
xchg
mov
or
daa
mov
xchg
div
or
aaa
mov
add
mov
adc
or
sahf
fmulp
sti
mov
pop
sbb
lret
add
fisttpll
addl
ds
adc
aas
aas
fwait
lock
sub
lock
mov
js
pushf
sbb
pop
mov
jne
pusha
inc
inc
adc
test
cmc
in
inc
pop
dec
pop
xor
arpl
fistpl
push
or
and
mov
or
xchg
shlb
aaa
mov
and
mov
add
es
fidivrl
shll
pop
xor
mov
popa
sub
arpl
cld
mov
je
repnz
and
scas
xchg
mov
jmp
das
mov
loopne
nop
lahf
mov
xchg
jo
mov
int
cli
pop
lfs
dec
push
jge
mov
mov
fcmovnu
push
adc
mov
fistpll
shrd
out
push
ret
push
fldt
jae
mov
mov
push
pop
sbb
sub
std
lahf
icebp
lods
xchg
pop
mov
popf
xchg
pop
jae
lahf
inc
inc
xchg
fidivrl
sub
outsb
icebp
roll
mov
pop
add
sub
aad
adc
cli
out
outsl
test
fidivrl
lcall
mov
pop
out
and
icebp
inc
mov
repnz
cmp
dec
push
enter
pop
sub
cmp
sub
int3
inc
cmp
sub
subb
jmp
je
test
mov
push
dec
into
mov
lods
ss
js
jp
inc
mov
jnp
mov
test
jmp
pop
push
test
mov
pop
cmp
pushf
pop
aam
push
mov
sarl
xchg
jge
or
sti
aas
xchg
imul
das
push
out
inc
daa
fnstcw
hlt
push
scas
je
sub
outsb
jb
or
xchg
xor
xor
or
and
out
sub
mov
jg
aad
and
add
rcl
pop
aas
jbe
fldl
loope
dec
push
pop
push
mov
pop
adc
mov
add
xchg
out
jmp
mov
pop
push
fiadds
push
xchg
and
imul
mov
mov
mov
repnz
mov
or
add
sbb
sbb
sbb
mov
cmp
cmpsb
adc
ja
mov
in
pop
dec
cmpsl
pushf
les
rolb
push
fiadds
push
in
jbe
jge
or
lret
mov
jmp
xchg
mov
loop
mov
pop
sub
das
test
push
sub
pop
call
and
popa
mov
jb
push
addr16
sub
mov
xor
jp
jbe
pop
std
xchg
test
int
cmpsl
add
sahf
mov
inc
xcrypt-cbc
cmpsl
pop
and
pop
lret
mov
fldz
xor
cmp
mov
test
mov
sbbb
sub
test
hlt
xor
icebp
jmp
mov
xor
je
push
lcall
xlat
jl
pushl
jbe
into
int3
cmp
pop
insl
jae
sbb
int3
mov
xor
mov
push
dec
adc
jae
xlat
std
push
pop
pop
lcall
and
cmp
add
dec
xchg
pusha
push
add
sub
iret
fldcw
mov
jae
popa
push
int
dec
xchg
dec
and
or
xlat
fdivrl
fnstcw
xchg
fs
jp
push
iret
jl
and
cmpsl
inc
insl
dec
dec
sbb
pop
aad
aaa
inc
mov
jbe
fadds
lcall
scas
add
fstps
loope
cmp
jnp
testl
sbbl
push
add
dec
inc
mov
xlat
pop
inc
xor
iret
jge
push
inc
popf
mov
fmull
push
xchg
add
sub
mov
mov
lods
cmp
mov
push
fdivl
xchg
sbb
push
lods
lods
cmp
fldcw
addr16
and
jge
in
fdivrs
mov
stos
push
push
lock
or
jl
cmc
testb
rorl
lahf
push
or
jne
test
pop
pusha
divl
shl
push
cmpsl
xlat
test
cmp
inc
aam
pop
mov
hlt
rorl
lret
dec
xor
push
mov
sub
jg
cmp
sbb
and
cltd
add
mov
mov
push
fdivs
mov
enter
test
pop
jae
adc
add
nop
je
inc
and
sbb
jge
sbb
fsub
inc
cmp
orb
shrb
cltd
cwtl
cli
or
sbb
rcrb
add
test
cvtpi2ps
fwait
dec
sub
mov
ficompl
lahf
jl
ss
xchg
lret
int
sti
cmp
pop
jge
cmpsl
dec
sub
push
js
cmp
lds
pop
push
sbb
sti
out
jns
inc
mov
lret
cmc
sbb
outsb
cmp
loop
fldt
imul
push
inc
sar
pop
iret
jg
mov
push
fnstcw
pusha
in
and
mov
mov
in
enter
adc
mov
mov
and
andl
leave
push
jb
add
popf
jge
lret
adc
jge
pop
jno
test
add
mov
fdivl
dec
bound
dec
ret
jo
mov
js
pop
push
test
jae
loopne
mov
jne
js
and
mov
loopne
inc
add
push
repz
mov
and
and
mov
mov
hlt
sbb
out
adcb
ljmp
inc
xchg
mov
out
pop
dec
lret
pusha
or
loopne
cmp
xor
lea
repnz
jecxz
filds
js
pop
inc
pop
sti
stos
scas
inc
repnz
stos
ficompl
or
imul
inc
cwtl
aas
mov
repz
mov
out
mov
in
and
lret
mov
add
out
call
das
add
jg
sti
push
cmp
or
inc
cli
iret
dec
xlat
loopne
les
xchg
cld
mov
mov
or
in
arpl
std
repnz
out
sbb
call
mov
push
out
adc
mov
sub
lahf
mov
pop
cwtl
icebp
dec
std
mov
fucomp
ficompl
out
aad
xor
insb
mov
test
ret
sub
pushf
push
rol
pop
or
in
insb
mov
xchg
adc
sub
lods
outsl
jmp
sbb
adc
and
enter
push
cmpsl
dec
out
mov
fdiv
addr16
imul
lds
mov
sbb
push
ss
xor
iret
jb
push
popf
pop
test
pop
adc
addr16
xchg
cmc
push
or
mov
rcl
popf
xchg
mov
loopne
sbb
int
mov
jae
lock
mov
sarl
out
insb
aad
popa
ret
push
rcll
add
das
push
cmp
inc
out
out
loope
outsl
fcomi
xor
fsubrl
xor
jno
pop
mov
mov
incl
cs
mov
cmp
inc
sbb
add
add
sbb
xor
add
aaa
test
popf
fimull
pop
lock
mov
cltd
jecxz
es
dec
sub
push
scas
fstps
aaa
cmc
fisubl
mov
fistpll
pusha
jb
mov
adc
mov
sbb
mov
and
add
aaa
stos
sahf
popf
adc
jge
jmp
mov
div
mov
inc
add
xchg
pop
test
or
incl
out
or
icebp
sbb
mov
outsb
jge
or
add
ja
fsubrl
les
rcrb
rcrb
push
shll
vpaddusw
mov
movsb
sub
mov
lods
cmp
sbb
movsb
mov
xchg
insb
outsl
and
ja
test
adc
inc
mov
outsl
jns
sbb
mov
mov
pusha
es
xlat
out
mov
lea
xor
dec
jg
int3
xchg
mov
mov
fs
cmp
iret
daa
int3
xor
in
inc
cmpsl
popa
mov
nop
sbbl
add
repz
test
push
cwtl
shlb
cmpsb
stc
xchg
or
mov
flds
xchg
das
xchg
jne
loop
xchg
inc
adc
push
or
ss
jmp
add
inc
mov
flds
lret
gs
sub
xchg
push
cmp
fwait
inc
mov
std
cmpsl
sub
test
sub
fldt
outsl
push
arpl
lea
fmull
mov
lea
loope
xchg
jnp
int3
fistpll
adc
xor
pop
aam
adc
ds
push
adc
daa
lock
jb
lods
pop
push
shlb
je
cmp
fimuls
nop
cmp
jbe
dec
pop
in
sti
fsubp
pusha
xor
aad
mov
pop
icebp
arpl
int
shl
dec
jmp
mov
sti
jp
adc
scas
cmpb
xchg
pop
rorl
rclb
andb
in
jb
aam
pop
mov
lea
out
dec
test
leave
sbb
jp
sbb
jno
out
outsb
cmp
loop
mov
insb
loop
aad
ja
xor
push
push
jae
xlat
sub
icebp
jge
les
fldenv
pusha
stc
xchg
lock
xlat
xchg
into
jb
dec
jmp
sub
dec
xchg
mov
and
cmc
pop
std
ror
xlat
mov
cmp
sub
outsb
addr16
xor
fstpl
clc
mov
xlat
in
movl
jne
or
cmp
sub
mov
nop
or
cmpsb
bswap
push
dec
jmp
push
ret
pop
adcb
outsl
mov
mov
pop
dec
pop
push
push
fisttpl
leave
cmp
pushl
adc
in
fcmovnbe
jl
dec
cs
lahf
or
push
lods
xchg
jmp
and
test
sub
mov
mov
sub
lcall
fstl
hlt
xorl
pusha
add
mov
add
out
pop
jmp
mov
out
fs
xor
sbb
mov
jne
and
adc
adc
mov
and
call
test
lret
shl
iret
cmp
cmp
mov
shl
jg
or
xchg
mov
push
jb
fisubl
gs
test
pop
and
pushf
test
aam
imul
or
jle
jb
fists
add
mov
fstpt
loopne
int
pop
repnz
mov
enter
aam
rcll
dec
out
movsb
jmp
jb
inc
frstor
mov
cmp
sub
into
int
daa
popf
pushf
lcall
mov
les
push
inc
fldt
sub
jo
cs
pop
push
xor
fisubs
xchg
adc
cld
xor
loope
aad
push
lahf
ds
mov
test
xchg
pop
or
add
adc
mov
dec
stos
or
jbe
jp
adc
xchg
aaa
lock
stos
outsl
mov
cmp
push
enter
fistpll
push
ljmp
mov
lea
aad
test
cli
cld
lock
cmp
fists
add
leave
dec
ret
pop
clc
inc
pop
ljmp
or
inc
sub
add
push
xchg
mov
inc
fwait
addb
pop
push
imul
movsb
jnp
inc
lahf
insl
add
jge
mov
inc
jns
xchg
dec
hlt
pusha
mov
dec
mov
xor
cmp
push
inc
dec
xor
movb
or
pushl
push
jns
add
rcll
add
and
mov
pop
lahf
push
or
testb
push
pop
pusha
aam
sub
addl
jne
mov
sub
and
xor
inc
out
loop
add
shl
fs
int
adc
cmp
jne
mov
test
mov
paddb
xor
mov
dec
mov
lcall
lret
notl
sbb
cmp
inc
sbb
push
shll
mov
aam
hlt
xor
leave
cmpsb
fcomi
sti
and
push
icebp
sahf
cmp
inc
mov
lret
push
pop
and
jmp
das
gs
sbb
cmp
add
test
push
sub
mov
mov
jmp
pop
add
ljmp
insl
and
adc
cmp
mov
imul
rcll
fidivrs
push
inc
push
adc
daa
xor
or
cs
dec
push
insb
aad
and
sub
xor
or
dec
mov
mov
sahf
bound
mov
adc
andb
or
pop
add
insb
test
mov
and
add
mov
outsb
cmp
sub
outsb
xchg
mov
adc
mov
insl
loop
mov
xor
cmp
add
sub
and
outsl
mov
sti
lock
lahf
outsb
sbbl
stos
imul
imul
out
push
and
cmpsl
shrb
movsl
jmp
cmp
pusha
jl
repnz
pushf
and
dec
pop
pusha
cmp
test
mov
mov
and
xor
movsl
cmp
sub
xchg
subb
push
pinsrw
sub
arpl
stc
nop
iret
loop
shll
push
xchg
faddl
push
cmp
sbb
push
jnp
sbb
arpl
lock
out
xor
insb
and
test
dec
xor
scas
mov
adc
popf
sti
out
inc
push
mov
jnp
and
addr16
pushf
push
push
inc
pushf
lock
adc
fwait
stos
cmpsb
in
mov
outsb
insb
leave
sarb
cltd
pop
push
xchg
sub
lods
jno
pop
adcb
into
dec
mov
repz
inc
aad
xlat
mov
rcll
mov
aam
and
pusha
sub
lds
xor
lret
int
addr16
mov
ljmp
out
jmp
roll
push
mov
mov
stos
jmp
andl
mov
dec
pop
mov
jmp
lret
dec
jns
repnz
mov
cli
cmp
push
pop
jecxz
dec
and
lea
lahf
jecxz
push
orl
fwait
mov
add
or
mov
fsubs
repz
mov
das
loop
dec
push
pop
pop
mov
out
pushf
leave
dec
xlat
mov
inc
mov
popf
push
inc
xchg
jo
icebp
out
sbb
xchg
dec
std
dec
dec
adc
scas
xor
ret
xchg
jns
ret
xchg
mov
stc
repnz
lcall
push
arpl
cmp
in
push
or
cmp
pop
push
inc
mov
lock
push
xchg
mov
loop
arpl
mov
roll
outsl
xchg
mov
pop
icebp
dec
dec
cmp
insb
insb
mov
xchg
pop
sub
mov
mov
imul
scas
data16
pmaddwd
lcall
sub
xor
pop
mov
flds
sbb
sub
sar
mov
cmpsl
lret
rol
scas
inc
push
mov
mov
add
sub
and
lahf
mov
loope
fisttps
icebp
stc
stos
xchg
push
popf
rclb
jnp
or
je
inc
cld
mov
lahf
jnp
fdivrl
shlb
push
xchg
push
jns
add
add
fistpl
jae
mov
sbb
dec
incb
rcrb
and
bound
leave
push
fstps
sbb
xchg
mov
iret
stos
push
js
call
pop
sub
pop
mov
xchg
xchg
mov
ja
insb
test
call
pop
mov
pop
in
and
stc
stos
mov
xchg
mov
out
adcb
push
mov
add
pop
cmp
lret
adc
enter
jnp
push
rcrl
or
or
xor
rorl
mov
fdivr
push
icebp
insb
pusha
iret
call
dec
lahf
fbld
jae
aam
inc
xor
mov
sub
sub
xor
pop
sahf
jmp
fsubr
sub
sub
pop
push
and
cmpsb
lret
aam
imul
mov
inc
fwait
dec
xchg
in
cmp
test
repnz
add
fwait
adc
and
insl
aad
enter
jo
lock
outsl
mov
sub
mov
lds
adc
adc
xor
rcl
lock
faddl
push
mov
incb
inc
sub
mov
mov
and
push
or
jnp
pop
lret
xchg
xchg
mov
pop
subb
loop
jmp
jecxz
outsb
js
shl
lods
outsl
mov
inc
cli
mov
fadd
rorl
push
ja
mov
mov
lock
fisubs
movsl
cmpsb
leave
jmp
nop
roll
cs
cmp
or
xlat
mov
hlt
add
mov
xor
sbb
das
lcall
ret
outsl
jge
aad
xor
cs
movsl
pop
je
sub
xchg
hlt
aaa
cmp
repz
mov
fsubrs
popf
je
mov
sub
xor
mov
xchg
int3
mov
fisubl
fiaddl
ja
mov
rcr
sub
repnz
sub
lods
jmp
mov
fbld
xchg
cli
mov
xchg
push
cmp
imul
movsb
stc
sub
bndstx
xorl
add
push
push
dec
or
push
and
or
push
fdivrs
icebp
xchg
dec
sysret
outsl
dec
dec
outsl
adc
mov
mov
mov
adc
fadds
sbb
out
xor
pop
xchg
mov
addr16
cwtl
cmp
cmp
rclb
or
adc
xor
adc
push
adc
lods
adc
pop
cmp
mov
pop
cld
loopne
sub
arpl
icebp
push
mov
push
xor
sub
sbb
xchg
jmp
std
sti
out
push
xchg
out
leave
fs
jnp
mov
cmp
xor
rcrw
push
aaa
mov
sbb
mov
mov
lea
pusha
in
mov
popa
cli
jp
ret
dec
aaa
adc
repnz
in
mov
pop
adc
jl
cmpb
or
dec
fistpl
cmpsl
ds
add
lret
inc
push
lods
sub
dec
pop
mov
pop
sub
add
iret
rcrb
ljmp
sbb
cs
dec
add
sbb
inc
data16
add
pop
les
or
jg
add
lret
mov
fwait
icebp
lret
popa
dec
push
das
xchg
insl
cld
add
mov
pop
mov
adc
push
pusha
sbb
sti
mov
jecxz,pt
jne
mov
lret
cld
lods
std
jp
les
ficompl
push
pop
push
fcomps
loop
xor
pop
push
test
mov
mov
aaa
add
or
mul
js
enter
es
pop
in
xor
sub
xchg
scas
out
arpl
imul
sub
dec
jno
or
stos
fwait
imul
aam
sbb
outsl
in
dec
or
cli
jo
lret
xor
inc
or
xchg
shll
mov
push
mov
and
push
insl
stos
push
test
mov
mov
mov
inc
jb
cs
jb
dec
ss
xchg
and
jae
rclb
cwtl
jb
push
mov
pop
add
adc
add
push
mov
inc
mov
cld
ss
pusha
popf
test
stos
xor
mull
pop
hlt
mov
sub
and
cs
js
loope
not
cmp
xor
fists
sub
push
push
sub
std
cmpsb
fwait
jecxz
jp
cmpl
dec
jns
pop
mov
call
push
stc
xchg
adc
es
inc
mov
adc
dec
or
stos
xchg
bound
scas
push
mov
loopne
std
into
inc
jns
mov
cmpsl
mov
mov
xchg
add
lods
sbb
pop
rclb
lret
rorl
test
sarl
das
pop
lret
mov
dec
jns
cmp
push
cmpsb
inc
pop
mov
dec
leave
ret
loop
inc
add
popa
xchg
sbb
add
pop
femms
add
lahf
enter
mov
lock
cmp
pop
pop
xchg
add
dec
sub
mov
insl
outsb
lods
jge
jl
in
movsl
in
and
sub
mov
leave
xor
inc
jae
xchg
or
fwait
xor
rcl
and
mov
rcrl
js
jb
inc
rcrl
out
sub
bound
cs
lods
fs
mov
mov
orl
dec
jle
push
adc
add
add
jg
xor
sahf
xor
in
sti
push
jecxz
mov
sbb
movsl
cmp
xchg
jb
pop
mov
xchg
sbb
jbe
lret
subb
mov
ljmp
mov
cmp
cmp
mov
les
cs
lods
shlb
inc
mov
std
xchg
dec
cmp
jbe
and
xor
sbb
les
inc
aaa
sarl
fcmove
std
int
mov
sub
int
xor
iret
sub
sbb
lods
in
pusha
inc
xlat
lock
xchg
aam
pushf
les
mov
dec
aas
xor
pop
cmpsb
and
ss
push
xor
mov
test
iret
mov
jp
je
test
xor
inc
jne
fs
sub
aaa
cmp
int3
xor
out
xchg
std
xchg
adc
clc
inc
and
xor
fstps
wrmsr
push
sti
out
bound
fcompl
test
mov
sbb
sub
jo
sub
mov
aaa
mov
es
std
mov
jmp
push
push
xchg
mov
inc
enter
sbb
faddl
lods
enter
cld
cmpsl
sahf
imul
dec
xor
dec
sub
test
sub
cmp
mov
or
fs
dec
push
cmc
push
or
lds
push
sbb
ljmp
xchg
aam
push
int
mov
cmp
pushf
js
cmp
xchg
mov
nop
mov
xchg
push
sti
aam
aam
mov
inc
les
into
sbb
int3
push
and
fiadds
dec
pmullw
add
mov
cmp
mov
mov
pushf
je
ljmp
jecxz
das
xor
repnz
ret
popf
jo
sub
call
xor
shrb
sbbb
je
mov
dec
mov
addl
addl
icebp
andl
test
das
mov
imul
xlat
aam
jge
cli
aas
push
fcmovu
clc
test
cmp
call
cmc
pop
inc
mov
ret
push
inc
dec
sar
sbb
and
xchg
and
ret
movsl
inc
pop
mov
adc
jmp
cwtl
je
sbb
mov
popa
adc
xchg
mov
mov
mov
xor
cmpsb
push
mov
sbb
movsl
mov
xor
xchg
mov
jp
shlb
imul
inc
iret
mov
adc
mov
add
es
stos
lretw
imul
add
in
or
sbb
lds
xorl
add
imull
test
fs
inc
push
inc
pop
adc
sbb
or
mov
sbb
loope
shrl
daa
outsb
sbb
inc
jae
fimull
aas
shll
sub
sbb
das
test
cmp
jg
xchg
jmp
sbb
mov
mov
arpl
js
push
cwtl
mov
mov
fdivs
sbb
pushf
jnp
push
movsb
or
mov
repnz
imul
repz
push
adc
fmull
or
jmpw
or
popa
sbb
jmp
fistps
sub
ret
cli
fistpll
and
fwait
leave
xchg
icebp
mov
push
dec
popf
jnp
test
pop
mov
jns
lahf
das
mov
inc
inc
xchg
push
cmp
pushf
add
fsubrl
and
daa
xlat
arpl
add
jb
pop
mov
pop
loope
and
cmp
out
xor
loopne
out
push
adc
xor
push
xor
aad
pop
fisttpll
les
in
push
push
mov
adc
insb
int
in
int3
mov
inc
dec
cltd
jmp
iret
cmp
or
jge
hlt
adc
lods
sbb
cmp
xchg
jmp
sbb
inc
mov
mov
add
aad
inc
sub
push
and
xor
mov
inc
mov
es
xor
inc
push
jecxz
xor
test
cmp
add
out
mov
sbb
test
aaa
cltd
scas
pop
addr16
cmp
mov
inc
std
push
fmul
cmp
outsl
stos
stc
or
sub
inc
xchg
ss
mov
outsl
test
and
arpl
sub
jo
sbb
rorl
aad
ss
fiadds
add
stc
cmc
jmp
cmp
adc
mov
rdmsr
jl
sbb
push
cld
sahf
pop
mov
xchg
lds
cmpsb
fnstsw
mov
push
subl
ret
mov
mov
rcl
pop
dec
xchg
nop
sti
mov
cmp
push
ret
fnstcw
jnp
test
xor
rcll
add
mov
dec
mov
jmp
aaa
jo
sub
in
mov
cmp
inc
testb
add
mov
fcmove
jecxz
pop
stc
or
mov
pop
fistl
push
ljmp
pop
dec
stc
jecxz
xor
xor
test
xchg
mov
push
sub
pop
xor
insl
push
push
lods
repnz
rorb
xor
sti
rorb
jb
sbb
sbb
ror
insl
ss
xchg
adc
sbb
jmp
rcll
inc
pushf
push
xchg
add
xor
push
or
push
mov
dec
cmp
add
arpl
outsb
imul
sbbb
mov
dec
push
pop
shrb
orl
push
aad
xchg
call
and
jne
xor
movsb
repnz
inc
jbe
xlat
jge
push
repz
mov
add
aad
mov
sbb
lods
and
xlat
dec
test
hlt
mov
cmp
inc
and
cs
mov
inc
adc
add
sarb
daa
and
or
jno
ljmp
lcall
cs
or
in
cmp
sbb
andb
clc
test
mov
sbb
cld
pushf
js
pop
hlt
lods
das
je
shll
mov
orl
jg
aam
and
pop
dec
push
add
mov
test
push
cmp
fsts
dec
dec
ja
int3
and
fildl
sti
icebp
adc
lds
inc
out
add
mov
fistl
stos
fucomp
mov
sub
or
ret
mov
jp
cmp
fwait
jns
out
lahf
gs
jg
lret
pop
scas
loopne
xchg
or
xor
insl
push
stos
in
mov
pop
mov
jecxz
xor
and
mov
dec
pop
mov
fnstenv
jo
scas
jge
cmpb
fnstcw
add
call
xchg
push
xchg
sbbb
shrl
pop
push
jmp
mov
pop
inc
push
loopne
mov
das
icebp
push
pop
movsl
movl
mov
fiaddl
sbb
inc
jb
int
or
das
jge
in
ss
in
inc
or
add
push
push
enter
repz
dec
or
call
stos
pop
mov
into
cld
stos
adc
scas
mov
push
dec
add
fidivs
fs
xchg
xchg
push
sbb
mov
push
xchg
or
mov
mov
mov
pusha
xor
adc
xor
lods
mov
lcall
xchg
fcompl
xor
mov
jecxz
mov
sti
inc
stc
arpl
movl
jb
cs
sbb
adc
mov
inc
push
dec
sbb
dec
jbe
inc
jmp
adcl
je
test
fcmovbe
cmpsb
push
mov
jg
push
mov
mov
std
jae
inc
mov
stos
push
daa
int3
or
dec
fs
adc
pop
cmp
jp
repz
jo
ds
add
xor
fsub
test
push
ljmp
dec
mov
and
pop
cmp
aas
xor
cmp
rcrb
stc
xchg
add
ud0
pop
std
mov
test
sub
inc
out
lahf
inc
xlat
mov
in
fs
cvttps2pi
add
fcmove
orl
adc
push
sbb
mov
mov
adc
jmp
lods
clc
test
rclb
ret
daa
cs
sbb
sar
jo
push
push
dec
test
xlat
ljmp
xchg
jo
dec
mov
xchg
cmp
das
jno
push
jne
lahf
push
sub
pop
js
cmp
pusha
xor
rol
scas
aas
add
movsl
inc
loop
andb
cmp
out
sbb
nop
jno
push
mov
sub
or
pusha
test
push
sbb
cld
xchg
add
push
decb
mov
cmc
leave
fcompl
icebp
jg
mov
testb
sbb
dec
jnp
scas
pusha
push
xchg
fcoms
repz
dec
adc
pop
dec
dec
ret
mov
cltd
andl
out
xor
inc
cmpsb
idivb
sub
dec
mov
fildll
jg
lahf
loopne
push
lahf
cwtl
aas
stc
sub
test
pop
nop
mov
cmp
popf
or
aam
xor
out
std
fadd
hlt
add
and
shl
mov
dec
mov
int
out
xchg
arpl
sbb
push
sub
aam
jno
cmp
test
adcb
sbb
mov
addl
mov
and
mov
shrb
loopne
cmp
sub
adcb
pop
test
in
or
addb
sbb
sbb
inc
stc
dec
sub
in
rclb
gs
roll
xorb
pop
fs
loop
fwait
jle
loop
fldl
xlat
mov
push
add
mov
mov
inc
push
ret
dec
dec
mov
mov
scas
gs
xor
data16
jl
and
add
and
sub
cmpsl
inc
mov
pusha
xor
jns
inc
mov
movsl
outsl
nop
dec
dec
dec
or
ficomps
sbb
jl
and
std
xchg
mov
cmc
jae
dec
popa
mov
cld
mov
std
or
stos
adc
push
nop
mov
daa
push
inc
mov
mov
xchg
push
or
add
fwait
pop
das
mov
fstl
or
outsb
andl
sbb
pop
push
pop
mov
fdivrl
push
pushf
jnp
outsl
insl
or
jge
out
dec
mov
stc
das
or
add
sub
xchg
jae
xchg
cmp
xor
xchg
movsb
push
pop
xchg
andb
sub
inc
ret
mov
das
push
cmpsb
fwait
add
push
into
outsb
daa
out
mov
xchg
push
mov
popf
arpl
out
decb
nop
icebp
ret
adc
pop
je
out
pop
pop
pop
insb
lahf
movsl
pop
aaa
fisubrs
cld
add
out
xlat
mov
lds
push
enter
movsb
sub
es
dec
jnp
jno
ror
iret
insl
stos
or
rcll
stos
inc
and
add
dec
adc
insb
sub
popf
pop
and
scas
jmp
mov
add
inc
push
add
enter
xchg
hlt
dec
xor
push
sbb
inc
in
popa
or
pop
call
enter
ret
fidivrs
test
push
push
mov
int
inc
pop
repnz
stc
test
popf
mov
xchg
popf
loope
pop
cmc
mov
xor
adc
das
xchg
test
sbb
cli
jmp
test
testb
loopne
push
cmpsb
jne
ljmp
or
mov
and
std
xchg
add
push
das
pop
cmpsb
divl
push
sti
in
repnz
subl
adc
movsb
dec
jp
mov
pop
or
mov
lahf
iret
outsb
pop
jmp
repz
ret
mov
mov
data16
inc
jb
fildll
mov
jp
pusha
loopne
lret
out
pushf
gs
dec
xor
dec
mov
cmp
or
fwait
dec
xlat
loope
xor
test
mov
adc
adc
add
std
bound
pop
xchg
mov
mov
cmp
jmp
mov
pusha
mov
insl
in
std
xchg
or
repz
mov
push
push
mov
pop
andl
xor
sub
sahf
push
adc
fs
aam
push
lock
and
iret
rep
inc
xchg
out
mov
lea
sbb
test
orb
scas
outsb
es
ret
push
ret
sbb
enter
fs
xchg
push
movsb
mov
shll
mov
or
jg
les
int
stos
push
or
flds
sahf
inc
jbe
xchg
gs
dec
out
mov
fwait
inc
push
dec
xor
push
mov
call
add
call
out
jp
xchg
imulb
xchg
in
addr16
fnsave
aaa
jmp
add
xchg
push
in
mov
pushw
std
inc
ret
mov
lahf
and
clc
push
es
popf
push
lret
push
jmp
mov
rcrb
lahf
push
aaa
xor
cmp
and
hlt
pop
out
pop
cmp
nop
mov
adc
sub
pop
into
push
and
cmp
xchg
ljmp
add
fisubl
and
or
sbb
mov
mov
stos
lret
mov
lahf
sbb
xchg
jne
xor
scas
enter
mov
cmpsb
shlb
dec
mov
pop
push
gs
sahf
outsl
pop
addr16
push
sub
inc
push
loope
push
lock
sar
push
fwait
inc
out
mov
loop
inc
jnp
or
xchg
jmp
sub
into
imul
jno
dec
cwtl
lahf
inc
mov
sub
das
pop
xor
jne
mov
insl
jmp
xor
pusha
lcall
jmp
int3
xor
cmp
xchg
xchg
mov
rclb
push
mov
jbe
lahf
push
ss
jno
push
cli
es
or
xchg
xor
push
sbb
mov
sbb
add
mov
or
xchg
adc
pushf
aam
mov
xlat
repnz
pop
add
xor
data16
jb
packuswb
lods
addps
cltd
adc
jle
fs
xchg
ds
bound
push
testb
mov
and
aad
popa
stc
xchg
jns
loopne
or
sub
je
shlb
js
dec
cmpl
push
mov
push
push
addr16
rolb
sub
cmp
sbb
push
and
mov
jge
les
add
stc
push
ljmp
xor
or
sbb
out
scas
mov
or
popf
mov
jne
ds
pop
push
popa
dec
mov
pop
pushw
push
rclb
ljmp
stos
cwtl
aam
icebp
sbbb
mov
aam
fcmovb
adc
sti
out
push
sti
shl
fnstsw
mov
call
adc
stos
and
mov
mov
jp
mov
sbb
bound
xor
mov
push
pop
daa
call
cmp
popa
testb
sbb
mov
mov
adc
mov
xor
mov
lcall
out
clc
ljmp
repnz
out
mov
push
insb
aas
mov
xor
xlat
push
neg
jmp
push
mov
or
and
aas
int3
xor
and
cwtl
and
sbb
jl
mov
rcll
fwait
jle
or
sub
pop
mov
mov
inc
inc
lock
jb
pop
sub
jg
call
push
das
lds
jbe
mov
sbb
push
xorb
lahf
adc
aas
std
mov
push
sbb
loope
mov
jbe
in
mov
pop
stos
popa
rcrb
enter
cmp
jmp
cmp
push
cld
aas
lcall
pop
mov
or
stos
cmp
xchg
mov
cmpl
pop
int3
lods
notl
or
dec
lret
loope
dec
in
loope
mov
sub
dec
mov
mov
lods
ret
jne
push
mov
aam
dec
inc
and
sti
test
mov
insb
aad
xor
or
and
out
stc
sub
pop
ret
lods
xor
insb
cwtl
sbb
cmp
mov
ljmp
cmp
pop
mov
das
dec
sbb
or
dec
cmpsl
fnstcw
je
mov
inc
stos
adc
das
cmp
aam
mov
test
jb
es
xor
xor
fidivl
mulb
test
sarb
ret
cltd
frndint
push
dec
mov
adcl
pop
inc
mov
nop
mov
daa
dec
pop
adc
add
push
jnp
xchg
cmpl
cmp
mov
inc
cmp
pushf
and
lea
adcb
mov
shl
add
dec
test
int3
pop
pop
cmp
mov
call
sbb
mov
dec
sbb
sub
sub
es
mov
add
mov
xchg
inc
sbb
mov
xchg
out
add
in
sahf
mov
mov
adc
mov
push
cmpb
mov
add
sub
ljmp
inc
push
jbe
arpl
les
out
cmpsl
in
xor
imul
mov
xchg
mov
daa
jecxz
and
sbb
push
fmul
cmp
mov
mov
pop
push
out
or
stos
adc
lcall
test
arpl
call
xchg
jnp
pop
mov
fsubl
mov
add
repz
shrb
jecxz
data16
jbe
and
dec
insl
imul
lods
incb
mov
pop
push
add
mov
cs
push
daa
clc
aas
jp
push
pusha
arpl
dec
pop
pushf
fcom
pop
int3
xorl
js
les
jp
addl
xor
xchg
in
inc
mov
mov
push
add
in
lret
xchg
jl
sub
xchg
rcll
mov
push
setle
push
in
dec
aaa
push
inc
cmp
pop
pop
xchg
das
mov
mov
jl
sbb
mov
jge
add
xor
mov
jo
push
js
test
xchg
mov
adc
xchg
or
ds
orb
scas
clc
push
xorb
adc
testb
jmp
pop
or
mov
xchg
sbb
pop
dec
xor
call
sbb
or
jo
fisttpll
or
movsb
add
mov
rcrl
shlb
jmp
dec
ret
clc
jae
inc
push
fs
jo
mov
jg
dec
sub
push
mov
mov
or
jb
jne
call
jp
aad
and
and
xor
cmc
mov
mov
inc
inc
repnz
xchg
mov
hlt
popl
test
xor
inc
lret
add
stc
addr16
dec
jo
xchg
push
pop
jl
push
data16
jg
adc
inc
or
push
or
cld
int3
cli
push
pop
and
or
pop
jnp
cmpsb
add
mov
adc
sbb
jg
fimull
filds
cwtl
jae
pop
push
mov
lock
test
add
mov
nop
das
stos
repz
pop
xor
push
jno
repnz
or
jb
lahf
push
mov
frstor
inc
icebp
xchg
mov
xchg
jle
sub
sti
jae
insb
or
lahf
inc
test
inc
dec
cmp
cmp
ret
nop
cmpsb
dec
push
jne
pop
sbb
mov
xchg
and
into
adc
lcall
out
cmp
add
cmp
and
cli
push
popa
lods
in
into
or
mov
daa
mov
pop
mov
xchg
dec
pop
pop
ljmp
bound
cmp
or
xchg
push
out
jnp
cltd
out
lock
pop
int
inc
mov
je
xchg
xor
jne
daa
ss
insb
loopne
cmp
mov
push
insl
clc
mov
daa
rcrb
inc
data16
scas
xchg
movsb
or
lret
jno
mov
imulb
add
lds
and
out
pusha
xchg
and
scas
dec
imul
inc
rcl
mov
imul
shl
lock
push
fistpll
pop
xchg
ss
out
shrl
outsb
clc
outsl
rcrl
sbb
adc
cmpb
mov
into
adc
cmpsl
mov
test
and
jmp
and
insb
push
shl
fs
inc
push
mov
jne
and
pop
insb
and
aaa
cmc
orb
ss
test
test
jae
sbb
jge
leave
roll
jo
insb
xor
sti
imul
notb
movsb
stos
mov
cmpb
imull
insl
in
mov
mov
je
js
xor
aad
mov
push
and
xchg
movsl
sbb
push
lds
dec
imul
inc
sub
inc
divl
mov
insb
mov
cwtl
push
leave
jle
pop
or
cli
xchg
fsts
adc
aad
test
jp
aas
xchg
daa
inc
push
xchg
fwait
pop
jns
sbb
push
xor
test
adc
iret
sahf
sub
daa
imul
cltd
lds
push
sbbl
mov
fnstcw
sbb
leave
xchg
lcall
sub
stc
popa
ret
or
fisubrs
stc
and
dec
adc
cmp
rorb
xchg
cmpsb
outsb
jg
pop
xchg
sub
jo
add
es
ds
jle
inc
pop
cmpsb
xchg
push
jmp
ret
je
std
ss
lds
jne
add
pop
push
jnp
aaa
cmp
jnp
add
dec
and
mov
out
pop
enter
mov
inc
movsb
aas
adc
notb
loop
xchg
cmp
xor
and
enter
jmp
pusha
add
leave
sub
fcomps
repz
push
dec
push
out
mov
xchg
push
inc
mov
xchg
lods
ss
cltd
loopne
in
lea
std
je
inc
fldt
add
inc
inc
fsts
mov
push
lret
adc
das
loope
jo
mov
xchg
mov
stc
pusha
cmpsl
les
cmp
popf
insb
arpl
push
or
xorb
or
push
pop
call
xchg
push
nop
mov
sbb
call
sbb
test
jge
out
jecxz
pusha
insl
imull
jno
and
test
mov
repz
cs
subb
fidivl
sbb
jns
enter
out
daa
add
jb
dec
adc
cmp
sbbl
inc
mov
inc
daa
aad
daa
inc
shl
sub
sub
popw
js
scas
pop
xchg
dec
jp
pop
test
sbb
dec
inc
loope
mov
mov
fs
add
mov
add
cmpsb
shlb
dec
outsb
aaa
insb
mov
outsb
mov
lea
int
adc
sub
mov
adcl
inc
adc
aam
mov
or
pop
jmp
fwait
cmp
leave
sub
insl
rorb
dec
mov
fwait
shrb
test
pop
mov
movsl
cmp
xor
and
xor
pop
mov
loop
push
xor
out
enter
test
decb
aam
mov
rorl
push
sub
ds
int3
mov
out
inc
ss
outsl
and
ud2
cmc
jno
pushf
pop
mov
and
xor
sti
inc
cmp
jo
push
fidivrs
mov
cmp
popf
mov
shrb
clc
xor
push
movb
ja
add
into
xchg
xor
call
pop
jmp
aaa
mov
into
jbe
sbb
mov
testb
push
xchg
xor
push
pop
cmp
adcl
shlb
xchg
xchg
mov
daa
fiaddl
dec
insl
scas
pop
add
xor
sbb
jne
mov
push
add
xchg
or
sbbl
mov
sbb
xchg
push
out
repz
mov
and
mov
cmp
hlt
cs
push
sub
mull
ret
ss
addb
or
and
int
into
das
test
xor
mov
adc
sub
pop
cwtl
pop
inc
call
push
sub
push
imul
fsubl
push
jno
inc
xchg
jmp
xchg
aam
ja
fisubrs
sub
movl
dec
rol
adc
mov
imul
dec
push
and
pop
stos
dec
loope
dec
dec
mov
loope
nop
stos
and
mov
sbb
mov
pop
cmpsb
js
adc
cmp
stc
jecxz
ljmp
out
push
sub
sbb
dec
andl
fucomip
jae
xchg
sub
scas
sar
mov
ljmp
mov
adc
int3
shll
iret
adc
lret
mov
test
notl
ds
fstpt
daa
and
or
es
xor
add
cmp
stos
mov
push
sbbb
hlt
fsub
subl
out
and
jb
and
pop
adc
jecxz
mov
loope
dec
lods
mov
jo
or
fisubrs
pop
mov
scas
std
ja
cmp
aas
in
cmp
call
int3
add
adc
imul
add
std
push
test
cmpsb
ljmp
lock
rcrl
add
mov
or
inc
scas
das
jnp
mov
mov
fwait
pop
mull
shll
cli
nop
aad
mov
arpl
jge
movsl
test
test
cld
or
hlt
into
shll
sar
into
and
mov
xchg
clc
test
jb
mov
mov
pop
jge
gs
dec
mov
and
push
mov
push
mov
gs
icebp
adc
repnz
outsl
aas
adc
stos
push
inc
cmpsl
xor
ds
and
jb
fld
sbb
and
jbe
pop
lcall
lds
xor
push
pop
push
sti
popf
hlt
loope
aad
or
pop
mov
jp
or
fsts
out
adc
mov
mov
inc
cmp
fbstp
inc
adc
add
inc
int
sub
xchg
xchg
loopne
inc
stos
jle
mov
cmp
loope
pop
cmpsl
add
xchg
adc
fstps
xchg
mov
call
loop
ret
xorl
xlat
add
out
cmp
test
ljmp
cmpsb
rcrb
add
xchg
jl
fmulp
jae
stc
stc
cmpsb
sti
in
sbb
scas
and
lret
sbb
push
inc
pushf
imul
jg
js
mov
mov
out
inc
scas
in
xchg
lret
shll
cmp
fistpl
mov
mov
into
lods
lock
mov
or
stos
add
xorb
adc
iret
or
bnd
imul
adcb
imul
cmp
cmpsb
add
pushf
push
mov
lods
dec
adc
dec
rclb
cmp
subl
jecxz
and
and
clc
inc
push
je
xchg
and
outsl
add
cmp
add
jae
mov
xor
pushf
xchg
cmpsl
dec
lds
ja
sti
or
xchg
cmp
mov
in
push
enter
inc
mov
ret
int3
out
xchg
inc
ljmp
mov
test
add
push
xchg
sti
mov
push
clc
out
add
xchg
aad
orl
xor
add
popf
popf
in
inc
rcrl
sub
and
push
aad
dec
inc
add
sarb
sub
add
outsb
xchg
mov
test
inc
gs
hlt
rclb
adc
insb
bound
cld
cwtl
mov
rcll
pop
daa
mov
mov
and
outsl
sbb
or
mov
test
popa
add
jge
inc
or
jo
add
push
gs
add
std
popa
loop
sub
mov
fsubs
mov
xor
mov
test
and
cmp
pop
push
jbe
push
sbb
cmp
lahf
sti
mov
lahf
inc
fnstenv
gs
sub
mov
mov
xchg
cli
xchg
ror
adc
pushf
outsb
inc
sub
fbld
xchg
hlt
pop
loopne
movsl
xor
sbb
cmp
ret
cmp
out
lahf
pop
fisubrs
xor
jns
inc
cltd
sbb
push
xchg
mov
test
jnp
sub
ficoms
sub
insl
cmp
push
sub
jp
outsl
xor
lods
std
mov
dec
add
mov
outsl
pushf
aam
xor
mov
adc
shl
xchg
add
mov
pusha
push
push
inc
jmp
test
cmpsb
je
lret
je
lods
add
mov
add
mov
inc
mov
pop
out
adcb
xchg
fadds
and
in
and
lret
pop
sbb
xchg
inc
pop
add
std
and
inc
mov
or
inc
push
daa
sbbl
pusha
push
or
ljmp
leave
inc
and
inc
push
xchg
cmc
jo
mov
sub
scas
cltd
in
dec
cli
fcmovbe
int
push
inc
xlat
pop
xor
push
sar
xchg
ss
dec
fcos
mov
in
stos
sub
gs
cmc
and
pop
ljmp
inc
dec
lds
lea
push
out
dec
jo
lods
sbb
pushf
inc
fidivrs
sub
pop
pusha
aaa
inc
jmp
lret
jg
inc
adc
push
stos
das
pop
std
sub
xor
scas
cmpsl
fucomi
adc
pusha
xchg
adc
ret
int3
lds
popa
pop
sub
pop
lods
jge
mov
or
fistl
add
jp
popf
xorb
addb
xchg
xor
dec
jge
hlt
add
adcb
pop
mov
push
cmpsl
scas
dec
xchg
adc
pop
out
adc
push
or
cmp
inc
mov
push
ljmp
cli
fstpl
and
movsl
call
aad
and
pop
out
roll
rorb
fidivrl
pop
dec
sahf
lock
int
fldenv
ljmp
orl
fs
pop
inc
int3
pop
int
or
or
jecxz
sarb
les
or
insl
cmc
and
push
sub
sub
test
sarb
in
out
mov
jmp
mov
dec
pop
clc
jno
lock
xchg
jmp
inc
xchg
sahf
sub
test
mov
popa
cwtl
lea
loope
jns
call
mov
xchg
pusha
or
xchg
and
clc
pusha
out
or
mov
leave
enter
daa
lds
into
push
pop
std
and
add
xor
sbb
fildll
add
mov
adc
pop
inc
inc
addl
xchg
and
loope
mov
xchg
cmpsl
outsb
dec
shll
sbb
sbb
orb
inc
nop
iret
pop
loop
test
add
xchg
add
xchg
loop
idivb
loop
fcomi
cmpsb
xor
popa
mov
pop
cwtl
fwait
call
sub
call
and
mov
jo
stos
das
jo
mulb
jne
dec
rclb
jecxz
js
std
aaa
mov
adc
imul
test
mov
test
bnd
cld
mov
loope
repz
jl
jb
mov
push
sub
es
dec
xchg
fwait
and
xchg
pop
push
inc
scas
mov
adc
pushf
lahf
and
dec
js
adc
jbe
and
insl
dec
xor
lret
aas
arpl
mov
ret
add
sub
popa
push
or
and
xchg
pop
test
pop
aas
jg
push
cltd
ud0
icebp
imul
add
lret
cwtl
xor
cwtl
jno
dec
imul
or
jne
inc
out
mov
mov
lret
popa
test
bnd
test
mov
adc
xlat
jmp
push
shr
lahf
pop
bound
xchg
mov
add
inc
push
adc
roll
push
inc
adc
int3
xor
mov
adc
or
push
jb
loopne
dec
add
inc
es
lods
cmp
cmp
out
jge
sahf
lods
imul
lods
pop
xor
dec
repz
pop
fucomp
mov
push
cmp
add
std
pop
add
fcmovb
jne
add
jne
cmc
push
sbb
test
in
shl
mov
dec
mov
aam
pop
fsubrs
pop
adcl
mov
inc
out
sbb
and
push
xchg
testl
addl
mov
xor
mov
xchg
jl,pt
adc
popa
pushf
cli
mov
jns
push
mov
push
or
xchg
fnstenv
mov
add
fdivrl
and
ljmp
or
xchg
xchg
std
cmpsb
dec
inc
fstpt
scas
mov
cmpl
cmp
mov
pushf
fwait
jmp
mov
stos
bound
push
imulb
dec
dec
loopne
pop
mov
mov
cmpb
add
add
inc
daa
arpl
xchg
pop
mov
push
lods
pop
pop
insb
and
test
les
mov
sub
and
push
pop
or
pop
sub
mov
outsb
arpl
add
sbb
insb
lock
or
shll
adc
out
fidivrs
leave
imul
es
pushf
fbstp
mov
add
cli
int
ljmp
mov
push
jns
mov
pop
xchg
in
mov
pop
or
mov
xchg
push
fstps
lret
or
jnp,pn
fs
loopne
stc
pop
xchg
je
aas
and
in
mov
call
or
loop
mov
xchg
and
popf
sti
jp
lret
inc
divl
or
mov
adc
mov
or
mov
and
divl
sbb
mov
adc
mov
lock
push
or
and
push
aaa
test
leave
xchg
bound
iret
add
mov
cmp
daa
inc
in
aas
adc
inc
add
inc
push
sbb
fldenv
out
imul
mov
rorl
add
and
dec
xor
and
int3
mov
or
mov
movsb
icebp
test
xor
notl
aas
mov
jl
rcl
inc
mov
cmpsl
sub
cmc
adc
jecxz
push
test
leave
fsubrs
mov
push
adc
test
fwait
add
xor
sub
les
add
sarl
cmpsb
inc
push
cmpb
cli
mov
sub
push
aas
imul
add
fdivl
jno
jns
in
nop
xchg
stos
loopne
push
lea
inc
sub
pop
xor
fbld
frstor
fwait
mov
scas
push
sbb
or
xlat
cld
rorb
and
out
inc
fcoml
dec
in
jecxz
cmp
sti
mov
cmp
xchg
ret
int
sub
add
inc
lods
sbb
lods
mov
add
outsb
push
cltd
cld
sub
inc
jge
leave
pop
xchg
xchg
xor
mov
dec
shl
movsl
jg
scas
cld
nop
xor
jnp
xorb
jnp
adc
imul
pushf
jo
jns
aad
sub
pop
pop
cmpsb
dec
xchg
xor
loop
sub
jne
sbb
mov
mov
push
stos
out
push
ret
push
cmp
popf
roll
mov
fs
rorb
icebp
rcl
mov
xor
cmpb
stos
push
cld
int3
out
pushf
test
or
sbb
push
mov
imul
jne
pop
aam
pop
sbb
and
push
aaa
insb
mov
clc
pop
ss
xchg
xor
stos
andb
sti
jge
ret
mov
add
push
fisttps
dec
mov
and
push
sbb
into
movsl
adc
fsts
shll
out
imul
call
jle
shll
stos
std
shll
and
insb
mov
jmp
cmp
dec
int3
xchg
pusha
add
xor
sub
int3
stos
and
sbb
lret
sti
inc
loop
fdivs
pop
mov
stos
xchg
lods
in
ret
nop
or
cmp
xor
imul
sbbl
sub
out
jle
cmc
mull
mov
sub
cld
xchg
stc
xchg
in
mov
bound
out
ss
int
push
mov
repz
stc
cmc
cmpb
das
data16
cltd
and
jmp
mov
lcall
xchg
push
mov
mov
mov
movsb
lcall
pop
repnz
test
rcll
scas
div
mov
cmp
test
mov
stos
push
pushw
xchg
jae
in
mov
lock
std
shrb
xor
cwtl
movsb
adc
inc
nop
push
push
js
mov
loop
cmpsl
fadds
and
fisttps
lret
dec
dec
sbb
imul
daa
jne
adc
pop
je
jns
jg
xchg
lods
mov
sbb
mov
iret
cs
mov
rclb
xor
or
data16
sbb
fucomi
add
test
mov
cmp
out
sub
insb
adc
ss
fistpll
fisubrl
mov
shll
dec
add
inc
sub
sub
pop
in
dec
cs
mov
pop
inc
push
out
dec
cmp
mov
xchg
mov
adc
lea
testl
push
ss
dec
lcall
xchg
je
outsb
jecxz
imul
lods
std
pop
icebp
sbb
insb
or
sub
int3
jl
cmpl
and
sub
in
in
cwtl
xchg
pop
lret
xchg
fwait
std
in
jne
push
sub
xchg
sbb
adc
insl
cltd
mov
dec
push
jmp
jbe
sti
lods
test
lahf
sbb
pop
cmpsl
clc
out
push
mov
push
aaa
mov
jle
push
mov
incl
xchg
mov
adc
adc
in
xchg
out
test
mov
outsl
test
andl
push
lods
xor
aaa
push
js
aaa
call
ss
xchg
movb
fsubrs
mov
or
lods
lret
movsb
lret
mov
and
shl
fisubrl
push
push
cli
dec
sahf
addb
lret
popf
sub
into
sbb
fs
xor
dec
or
leave
adc
popa
xor
imul
xor
addr16
iret
jge
jnp
and
in
je
icebp
xchg
sbb
fistpl
cwtl
xlat
and
sub
add
mov
xor
cmp
xchg
mov
or
bound
imulb
inc
sbb
sarl
aaa
dec
xchg
or
dec
mov
dec
cmp
add
inc
xor
sbb
or
dec
push
pop
add
fcmovne
fwait
out
gs
mov
test
push
call
push
out
lods
je
andl
stos
rcrl
mov
lahf
xchg
sub
in
inc
out
negb
iret
push
in
or
sahf
test
adc
or
stos
cmp
xor
pop
push
lcall
adc
pop
jecxz
popa
ss
loop
add
aad
test
push
repnz
das
dec
mov
cs
and
out
in
xor
cmp
leave
dec
mulb
rclb
lods
lods
xor
idiv
push
sti
mov
out
roll
nop
jo
push
subb
mov
popf
addb
stos
lods
aad
inc
sbb
add
or
adc
push
xchg
pop
xchg
jle
dec
mov
adc
and
push
dec
in
push
clc
add
sahf
jae
pushw
sub
jb
in
fsubl
sub
lret
add
dec
or
pop
scas
adcb
lock
test
add
shrb
ss
xor
inc
sbbl
dec
sub
adc
mov
cwtl
xchg
in
popa
outsl
gs
mov
movsb
jmp
mov
mov
sub
enter
int
movd
adc
push
push
push
sub
in
loope
dec
mov
inc
jno
dec
repz
sti
add
arpl
cmp
jmp
mov
sbb
imul
shll
or
sahf
aas
ret
sahf
pop
sub
sub
sbb
inc
pop
xor
push
push
in
jo
in
loopne
ret
rcl
or
leave
add
mov
repnz
lods
push
push
loop
xchg
fildl
cmp
push
and
inc
movsl
jb
or
sahf
gs
or
cmp
dec
xlat
jle
pusha
xchg
rcrb
xor
lock
xor
pop
push
sbb
push
sub
lds
mov
dec
sbb
pop
xor
or
and
pop
xor
jle
push
ficompl
mov
mov
ja
ficoml
push
push
lahf
es
mov
pushf
repz
insl
bound
lret
jae
adc
fwait
movsb
lret
lahf
test
test
or
jb
xor
mov
pop
push
imul
div
inc
cmpsl
and
or
jmp
bound
nop
into
pop
sub
aad
add
outsw
mov
push
add
enter
cli
pop
sub
test
pushf
int
mov
inc
gs
sarl
divl
add
jecxz
xlat
push
xchg
rcll
inc
repz
mov
shlb
sub
in
insb
add
dec
mov
pop
pop
add
out
cmpsb
lock
push
aas
sar
outsl
dec
mov
dec
lods
adcl
push
adc
fwait
dec
inc
pop
dec
sub
sbb
rcll
inc
idivl
into
imul
or
xor
leave
pop
add
test
dec
pop
adc
mov
sbb
or
sub
scas
mov
xchg
fmull
in
mov
fidivs
add
push
inc
shll
jb
push
out
xchg
xor
xor
sahf
pusha
and
push
addr16
ss
xchg
or
or
clc
stos
push
cwtl
push
loopne
inc
sub
lods
stos
mov
loopne
imul
idivl
push
jae
mov
push
jp
dec
test
arpl
cmpsb
aas
or
loope
shl
add
popf
jle
ss
pop
push
mov
mov
clc
sub
pushf
cmc
ljmp
push
mov
pop
call
cwtl
dec
add
pop
int
negb
aas
sbb
test
add
pop
mov
aas
jle
mov
out
sub
jmp
stos
push
xor
jle
push
jg
leave
cwtl
mov
cmp
adc
cmp
in
ret
push
scas
xor
shrl
cwtl
repz
pop
int3
xchg
dec
daa
mov
sbb
enter
pop
adc
in
data16
mov
or
xor
nop
xchg
sub
ret
aad
jae
push
pop
mov
xlat
inc
pushf
test
ror
in
xchg
inc
icebp
push
into
arpl
xor
sub
cmc
stos
lea
and
mov
xchg
lock
xchg
int3
and
and
push
adcb
popf
xor
lret
mov
fbstp
fstpl
sbb
sbb
fidivl
out
pusha
shll
sahf
xor
xor
sub
cmp
xchg
repnz
or
mov
xor
xchg
xor
pop
stos
cmp
cmpsb
push
popf
hlt
sbb
mov
cmpsl
inc
cld
lret
cmpsb
mov
shlb
out
stos
mov
or
test
mov
ds
xchg
cmp
mov
icebp
gs
sub
xchg
movsl
cwtl
and
mov
adcl
mov
adc
das
aaa
push
jae
cmp
fmuls
inc
xor
imull
dec
jp
dec
mov
jg
adc
and
mov
cmpsb
fwait
sbb
pop
js
xor
cmpsl
cmp
push
mov
and
test
insl
xlat
sahf
vmovaps
push
or
mov
push
jmp
pop
fiaddl
shll
orb
pop
mov
or
rcrl
imul
adc
cmc
xchg
and
xchg
mulb
push
nop
ret
int3
aad
aam
jl
outsl
scas
mov
das
xchg
jmp
push
push
inc
pop
mov
mov
addb
loop
out
sahf
rclb
mov
mov
repz
enter
push
daa
fwait
sbb
xor
test
or
pop
inc
leave
sbb
cwtl
cmp
es
adc
mov
jo
adc
xor
push
pop
sub
pop
les
mov
jb
jl
dec
add
popa
jne
fadds
jmp
cld
cld
dec
fistl
inc
add
push
sbbb
cmpsl
xor
out
push
jae
mov
fucomi
pop
popa
pop
sub
xchg
push
lret
test
cmc
cs
mov
adc
decb
cld
xchg
stos
dec
fmulp
add
dec
enter
jl
adc
push
cld
out
cmp
ds
inc
jle
adc
jno
or
push
jmp
sbb
add
bound
loop
jae
xchg
mov
and
fcom
cli
sbb
pop
xchg
ds
mov
repnz
cmpsb
or
jge
inc
or
pop
cmp
jl
loopne
aad
adc
ljmp
in
jl
notl
cli
xor
adc
dec
and
lods
jns
mov
jmp
cmpsl
pop
adc
xchg
clc
cltd
repz
daa
mov
sti
dec
movsl
mov
mov
xchg
sbb
pop
push
movzwl
add
push
inc
adc
lahf
out
ss
xor
jno
out
into
mov
xchg
dec
cmp
add
pop
lds
cwtl
loop
shll
jno
out
inc
mov
add
out
cmp
cmpsl
lret
bound
inc
ds
mov
cli
je
xchg
jge
mov
lods
pop
mov
data16
es
mov
push
cmp
test
test
mov
cwtl
out
push
jle
in
and
rolb
add
pop
push
std
out
add
lds
mov
add
in
ficoml
sub
add
sub
mov
pop
or
adc
ds
and
pushf
dec
cmp
mov
or
aam
xchg
inc
pushf
pusha
movsl
filds
icebp
sbb
outsl
daa
int3
jp
pop
roll
inc
call
cmpb
xor
xchg
in
ror
movsb
pop
scas
fimuls
iret
dec
adc
xchg
adc
mov
sub
and
mov
or
and
sub
and
in
adc
addb
cltd
or
xor
stos
test
mov
sub
data16
call
mov
add
pop
pop
mov
xchg
gs
in
pop
or
cld
ret
push
call
xchg
or
cmp
add
jp
scas
and
jl
push
mov
xchg
sub
loop
shll
das
jne
pop
push
fiadds
adc
fnstsw
icebp
push
fs
js
sbb
bnd
cmp
insb
adc
mov
xor
mov
push
inc
mov
push
sbb
pop
cmpsl
jmp
push
inc
lods
adc
mov
and
mov
sub
push
scas
adc
xchg
push
sbb
mov
xor
mov
fsubl
mov
push
adc
inc
dec
dec
call
lret
xchg
iret
mov
jb
dec
in
icebp
ja
fiaddl
mov
xchg
mov
fisttps
loope
adc
fwait
xor
jl
inc
dec
xor
sub
mov
iret
cmp
sub
lods
mov
pop
sarb
lock
or
inc
xchg
mov
mov
testl
pop
push
pop
mov
fisubl
imul
pusha
adc
test
sbb
arpl
scas
mov
jge
les
pop
sub
and
cmp
cmc
or
ljmp
rolb
mov
adc
inc
js
pop
rcrb
ret
pop
scas
dec
arpl
pop
popf
jb
push
lods
es
xor
enter
sti
fstl
clc
add
mov
test
stos
dec
sub
je
inc
cmp
add
lcall
push
xorb
lods
outsb
inc
imul
pop
add
int3
dec
fmul
mov
dec
pop
ljmp
loope
mov
jnp
mov
int3
mov
and
jns
jnp
js
inc
mov
mov
sete
mov
dec
ret
cwtl
adc
rcrb
ret
repz
cmova
mov
hlt
enter
fiadds
scas
and
mov
xor
addr16
or
jmp
add
mov
jmp
lahf
xor
outsb
push
xchg
fs
cld
repnz
gs
les
adc
jns
sbb
lret
pop
xor
lahf
push
sbb
repz
mov
and
mov
mov
jl
and
cmp
mov
gs
push
pop
xchg
xchg
and
test
mov
in
cltd
and
xor
sahf
cld
insb
cli
pop
cmp
adc
mov
movsl
or
arpl
inc
mov
cli
in
je
insl
dec
push
dec
xor
push
and
jb
adc
xchg
mov
jmp
inc
pop
push
and
sarb
push
leave
jbe
cmc
cwtl
je
lds
sbbb
das
out
mov
inc
mov
aad
ja
aas
in
mov
push
inc
inc
loope
lods
xchg
cmp
sbb
andl
cli
cli
rcl
add
adc
fildll
mov
lret
inc
cs
mov
cmpl
sbb
enter
jae
fbstp
lea
add
push
fists
push
pop
push
jns
dec
into
hlt
xor
loopne
addr16
cltd
idivl
les
push
in
lret
lcallw
xchg
add
adc
ljmp
sbbb
push
mov
inc
xchg
mov
mov
mov
mov
xchg
cli
pop
push
mov
mov
es
imul
jmp
fwait
or
dec
test
mov
mov
imul
cmpsb
andl
mov
add
fbld
xchg
mov
or
iret
insb
sbb
fs
rolb
stc
jmp
cld
jbe
rolb
gs
mov
je
jnp
pop
add
inc
sbb
mov
out
iret
test
add
je
vmovsd
pop
mov
or
xchg
mov
sti
jne
mov
mov
outsb
sbb
cmp
cwtl
loope
ljmp
fstpt
pop
pushf
cmc
loope
movsb
mov
xchg
sbb
stos
mov
sbb
pusha
jae
pop
push
xor
and
xchg
into
stos
arpl
dec
inc
imul
lods
jge
lds
pop
sub
mov
loope
sbb
cld
push
cli
and
and
rclb
xchg
sbbb
rcll
jno
mov
loope
loopne
xchg
xchg
add
mov
and
int3
sub
push
lods
movsb
sahf
sbb
mov
sbb
dec
mov
xchg
fcomp
pop
push
repz
jl
or
aaa
hlt
stos
push
jge
add
jge
rorl
push
jb
repnz
popf
jno
pop
add
push
dec
fistps
test
add
mov
pop
out
mov
popa
ucomiss
bound
xor
int
cmp
adc
out
xchg
mov
ss
aas
int3
das
clc
mov
lock
ror
lods
adc
out
mov
stos
or
mov
cmpsb
or
jns
push
popf
out
int
xor
lods
cmp
imul
and
sub
push
cmp
repnz
xor
loopne
fwait
in
ret
negb
xor
mov
dec
dec
xchg
push
insl
xor
aam
cs
and
pop
mov
cmp
loopne
in
out
sbb
scas
cld
fldcw
stc
aad
pop
dec
testb
jo
test
mov
hlt
or
clc
mov
jg
push
addb
loope
jo
push
mov
adc
rolb
dec
xchg
mov
mov
loopne
fidivs
fidivs
bound
add
xor
jge
fwait
add
or
push
or
movsw
aas
imul
imul
sti
add
or
ds
pop
xchg
cwtl
cmp
cmpsb
and
pop
scas
jae
subl
sti
js
sbb
bound
fs
stc
loop
dec
xchg
movsl
add
or
aad
and
push
pop
ds
dec
sub
mov
loop
dec
mov
xchg
es
mov
adc
xor
ljmp
or
jg
xor
daa
dec
dec
pop
rcrb
add
sub
sbb
jmp
aam
ret
test
cmp
sub
fstpt
jo
ljmp
insb
push
dec
lods
filds
daa
jb
test
hlt
out
rorb
xlat
dec
sbb
adc
in
lcall
sbb
or
lret
mov
leave
call
sub
add
bound
or
dec
sarb
loopne
idiv
data16
jge
jb
adc
adc
or
and
push
fimull
pusha
test
pusha
je
or
cmc
or
push
cmp
mov
cmp
pop
test
mov
int3
jp
rcrb
mov
dec
xchg
leave
push
xor
test
mov
xor
mov
xchg
jmp
stos
in
ret
push
std
fcoml
or
scas
lret
mov
pusha
pop
jl
xchg
popf
push
pop
leave
test
pop
out
sub
outsl
call
enter
mov
cltd
sbb
dec
push
lcall
sbb
cltd
das
adc
mov
add
or
outsl
stos
lds
push
push
push
aas
pop
push
add
insl
cmp
cmp
cltd
fsub
mov
jmp
andb
sbb
and
cli
test
es
in
pop
cmpsl
stc
std
frstors
xchg
das
adc
into
popf
push
push
je
inc
xor
sti
ret
into
rcll
jle
xchg
cli
xchg
ja
lret
rcll
xor
test
push
and
insl
add
scas
loop
sbb
sub
stc
jae
test
mov
xor
hlt
inc
jns
push
and
test
test
jmp
insl
lahf
lret
xor
and
fwait
dec
cwtl
jne
cmp
movsb
xlat
clc
xlat
cmc
loopne
adcb
imul
popa
push
mov
adc
fwait
add
jns
leave
fnstcw
call
or
add
or
outsl
mov
aaa
in
jns
pop
xchg
fisttpl
or
aad
pushf
mov
stos
or
test
icebp
imul
xchg
sbb
xchg
cmp
loop
jge
push
mov
cmp
add
loop
lea
imul
das
pop
pop
mov
es
into
aad
push
arpl
push
mov
sub
inc
sub
jecxz
push
pop
movb
xchg
push
test
mov
mov
mov
fdivl
push
cltd
push
cmp
jae
jle
inc
cwtl
repnz
jge
ja
int3
aaa
pop
adc
adc
adc
aas
jno
mov
movsb
pop
sbb
pop
repz
jle
inc
and
push
loope
loop
push
fistpl
les
stc
xchg
cmp
xchg
mov
push
pop
push
push
xchg
mov
stc
push
aas
fnstsw
lahf
test
ret
dec
xchg
jnp,pn
cmpb
lret
xor
das
sbb
adc
shlb
mov
fdivr
enter
hlt
rorb
subl
mov
pop
cmp
stos
bnd
and
xchg
les
lahf
xlat
gs
lods
sbb
sahf
insl
in
cmc
arpl
inc
add
push
sub
xchg
aad
repz
test
lods
in
repz
push
mov
or
jne
push
out
imul
js
repnz
mov
out
popf
rorb
repz
sahf
imul
jg
pop
mov
or
sub
lea
hlt
aad
mov
sub
jae
ss
pusha
adc
ss
call
mov
fcmovnb
lret
pop
shlb
fadds
out
dec
cmp
cmp
std
pop
lret
scas
add
lret
hlt
mov
scas
sbb
les
mov
push
sub
mov
mov
mov
mov
mov
xor
dec
sbb
mov
loope
out
dec
loop
adc
fisubrs
jge
stos
xchg
popa
mov
pusha
in
mov
popl
cmp
loopne
leave
or
pop
xchg
cmp
insl
and
cld
jnp
mov
and
xchg
rcll
insb
sar
icebp
and
and
sbb
add
popa
lock
dec
shll
imul
add
jns
lcall
pushf
fdivl
es
cmp
out
add
fisubrl
scas
mov
pop
lret
jp
push
mov
stos
sbb
xchg
xor
mov
add
and
outsl
mov
or
fdivrl
or
pusha
xlat
and
sub
aad
outsb
outsl
cs
jno
push
pusha
lock
inc
in
movsb
je
cmc
add
xchg
xor
sbb
aas
mulb
fstpt
dec
xor
icebp
out
mov
filds
sub
imul
pop
in
mov
insb
out
dec
cmp
insb
mov
xor
pop
lret
cmp
pop
cmpsb
stos
mov
lea
mov
lret
pop
bound
xor
or
js
mov
push
stc
mov
add
leave
xchg
xchg
push
push
jle
cmpsl
int3
pop
sbb
xor
jnp
jno
ret
sub
cmc
fcoms
ret
arpl
push
mov
jae
fisubs
pop
lret
jns
mov
sbb
xlat
sub
cmpsb
push
test
arpl
cmp
out
pop
sti
lds
mov
add
movsl
popf
inc
sbb
fwait
push
add
adcl
cli
daa
sub
sti
repz
outsl
into
stos
lret
xchg
and
scas
xchg
push
dec
push
push
xor
movsb
aam
push
pop
jl
int
fs
lret
inc
push
cmp
sbb
arpl
movsl
and
rolb
dec
call
xlat
adc
popf
dec
xchg
mov
sarb
push
dec
call
xchg
add
cmpsl
repz
mov
iret
and
xor
aad
outsb
jle
mov
xlat
pop
mov
add
ret
lds
call
outsb
xchg
push
cmpsl
mov
push
xor
pop
cmc
cmp
add
daa
inc
sub
cmp
bound
sahf
add
inc
xor
sbb
enter
sub
add
pop
fldenv
jo
add
or
xchg
je
stos
stos
mov
or
pop
insl
loopne
jge
call
add
lret
je
adc
sbb
loopne
outsb
xor
adc
mov
js
cmp
ljmp
sub
xor
mov
shll
adc
in
decb
jnp
push
sub
push
cli
divb
sub
mov
jne
lods
repnz
mov
xchg
ja
fisttpll
in
in
pop
mov
xor
lcall
add
std
mov
loopne
mov
adc
aaa
jnp
or
cli
xor
push
xor
push
jns
mov
and
dec
dec
inc
add
and
int3
addb
scas
ds
sub
cwtl
sub
xor
in
sub
and
xor
xlat
loope
sbbb
add
je
mov
fidivs
into
in
das
push
das
ds
jnp
stos
dec
movsl
andl
adc
mov
in
xchg
repz
sahf
sbb
idivl
add
in
decl
pop
call
test
pushf
repnz
les
imul
into
adcb
adc
insl
cmp
pop
xchg
cmp
sub
addr16
inc
mov
mov
outsl
orb
mov
mov
mov
in
pop
movsb
insb
sub
mov
fildl
sarb
jae
outsb
jl
push
clc
ret
pusha
push
dec
int3
sbb
mov
push
inc
xchg
in
xchg
dec
lret
add
rcrl
sub
xchg
rcl
push
fucomp
adcb
mov
cmp
out
das
mov
dec
mov
dec
andb
sbb
mov
or
mov
xchg
pop
sub
ret
insb
xchg
popf
xor
int3
cmp
lret
mov
mov
cmp
imul
sub
sbb
xchg
push
out
jnp
mov
pop
xor
dec
movsb
add
add
mov
dec
jmp
ljmp
xchg
sub
enter
mov
dec
ret
aas
mov
aaa
mov
mov
lds
lret
add
jg
fst
stos
sbb
lret
and
pop
sbb
ss
cs
mov
imul
addr16
loope
mov
frstor
adc
scas
lret
cmp
jg
loop
cmc
aas
and
pop
jl
lds
lock
addl
imul
jb
nop
repnz
les
lock
mov
pop
push
lret
pop
mov
std
add
aaa
jg
fidivrs
jg
jecxz
add
testl
mov
or
pop
lahf
push
jecxz
fmulp
lods
cld
inc
out
push
minps
and
inc
sbb
nop
sub
pop
mov
push
push
mov
push
jb
inc
cmpsb
nop
loop
incl
repnz
xchg
pop
pop
pushf
push
divl
and
nop
xchg
add
ss
in
cmpsl
mov
mov
rorb
dec
dec
push
stc
xlat
pop
or
outsb
push
add
dec
jg
cli
add
call
xchg
jnp
cld
pushf
jmp
stos
pop
push
jbe
in
ret
loopne
sahf
cmpsl
repz
cld
cmp
ficompl
pop
int3
test
scas
sbb
in
das
cmp
mov
jo
cs
movsb
or
sbb
sbb
mov
shr
adc
xchg
andl
and
out
xchg
pop
fs
xchg
sbb
icebp
adc
xchg
jmp
lods
stc
and
and
fwait
jmp
adc
lods
mov
pop
mov
or
mov
jnp
lds
imul
cmp
push
mov
jl
inc
mov
loop
mov
pop
cmc
jg
pop
sbb
mov
mov
idivl
add
inc
dec
lret
lods
scas
outsl
xor
mov
push
int
insb
ret
cmc
aas
add
into
cmp
popa
xchg
hlt
fwait
xchg
cmp
and
or
sbb
sarb
dec
pop
enter
jno
cmpsl
mov
sbb
fcoml
dec
jecxz
out
imul
mov
je
dec
rcr
pushf
lret
jnp
ret
movsl
xor
dec
aas
dec
insl
mov
orb
in
cmp
mov
cmpsb
lods
pop
xor
stos
pushf
mov
xor
imull
cmpsl
data16
sbb
push
loope
in
jbe
xlat
mov
add
aam
mov
xor
inc
push
mov
add
loope
and
cmp
outsb
shrb
sub
xor
xchg
int
stos
imul
std
mov
lock
dec
repz
notb
or
cltd
dec
jnp
outsb
jne
movsl
sbb
and
or
test
data16
cmpsl
mov
jp
jb
incl
or
dec
xor
sarb
in
adc
repz
dec
push
mov
outsb
jbe
fstps
and
mov
jne
hlt
test
aas
xorb
dec
xor
xchg
and
mov
xchg
aad
in
sub
and
out
mov
sub
add
pop
dec
hlt
jb
and
push
in
xchg
mov
push
and
jmp
push
iret
pop
or
enter
aas
mov
lret
not
push
adc
movsl
mov
pop
pop
mov
sarb
sub
movsl
mov
ficompl
xchg
or
and
inc
cmp
es
in
xchg
mov
clc
or
add
sbb
loope
repz
out
repz
sub
adc
pop
in
sar
std
xchg
insb
loope
cmp
push
out
adc
pop
ret
push
sti
jecxz
fisttpll
pop
jae
dec
daa
dec
ss
nop
sub
sti
adc
cwtl
imul
mov
xchg
fmulp
mov
jne
cmc
inc
test
cltd
jnp
stc
fnstcw
adc
bnd
dec
jae
loop
mov
mov
pop
push
jnp
inc
hlt
mov
dec
dec
pop
pop
sarl
push
cmp
dec
dec
mov
sti
inc
lret
adc
mov
jle
or
ret
mov
ja
ss
enter
or
mov
das
pop
lcall
jmp
sti
daa
nop
ljmp
cmp
scas
call
mov
push
add
and
xchg
sbb
add
nop
add
pop
mov
dec
sub
mov
sub
inc
pusha
xor
and
mov
xchg
int3
and
cmp
enter
lret
cmp
out
adc
mov
xor
sbb
mov
aas
fiadds
adc
jne,pt
insb
dec
rorl
xor
sbb
cld
imul
adcl
cmc
xchg
cmp
js
in
movsl
adc
push
bound
out
dec
mov
pushf
lds
gs
sbb
cmp
mov
jnp
roll
das
mov
xchg
sbb
mov
divl
fcmovb
ljmpw
popa
pop
out
andb
sbb
leave
fs
pushf
pop
js
js
push
pushf
cmp
add
cmpb
xor
push
lock
test
ja
mov
sub
xor
test
mov
scas
jp
jge
into
dec
mov
in
in
in
out
aaa
xlat
dec
test
inc
inc
jne
pusha
into
lds
xchg
andl
in
mov
rorl
push
sub
cmc
sarl
pop
add
dec
dec
lcall
stos
jns
jns
ja
pop
mov
scas
jno
cmpsb
into
lahf
lret
xor
lods
or
popa
fldcw
inc
sbb
mov
gs
lret
fistpll
aad
jl
gs
testb
jae
pop
scas
in
jmp
lock
loopne
or
push
in
inc
jle
adc
popf
mov
mov
jne
push
cwtl
test
clc
inc
scas
sti
adc
dec
icebp
cmc
sbb
xchg
addl
mov
and
fisubs
add
mov
mov
pop
insb
or
repnz
mov
ljmp
jne
mov
xchg
or
imul
inc
add
cmp
leave
adc
sub
pop
pmulhw
sub
fs
loope
outsb
je
pop
addr16
inc
dec
je
xor
pop
jl
repz
push
test
push
or
mov
pop
loope
scas
pop
test
inc
sbb
out
mov
mov
test
add
mov
pop
add
pushw
pop
pop
iret
cld
mov
lahf
gs
enter
dec
push
mov
decb
js
ljmp
test
out
cmc
jne
xor
rcr
test
cld
lock
push
sub
add
xchg
stos
lods
pop
add
mov
pop
mov
add
icebp
pop
in
inc
out
add
bound
shr
icebp
insb
mov
mov
mov
and
and
dec
and
inc
push
pushf
or
das
xchg
xchg
cmp
jle
out
outsb
mov
mov
push
pusha
mov
mov
data16
push
fistpl
cmp
push
mov
lahf
in
js
insb
iret
mov
xor
ret
push
mov
mov
dec
ret
xchg
arpl
pop
jle
sarl
aam
les
cmpsb
out
mov
mov
adc
or
or
sbb
mov
jl
in
sub
mov
fmull
jno
sahf
testl
mov
out
ret
addr16
xchg
outsl
add
jno
call
movsb
sbb
sub
pop
mov
or
dec
inc
sbb
inc
inc
fldt
mov
and
push
mov
subb
add
pop
mov
pop
mulb
lock
aad
ret
adc
mov
or
sub
in
neg
mov
xor
add
inc
stos
outsb
and
shrl
mov
testl
xchg
sbb
ret
inc
popf
mov
mov
cmp
xchg
cmp
dec
xchg
add
decb
cs
dec
jb
bound
int
add
mov
mov
cli
and
xchg
in
mov
test
into
dec
pop
push
and
out
adc
and
cmp
push
into
ret
call
inc
xor
outsb
in
pop
movsb
mov
aas
sbb
cmp
push
add
add
popf
mov
out
jmp
sbb
mov
aas
pop
cmpl
pop
movl
fistps
xor
add
sub
mull
lret
popf
roll
push
movsl
mov
mulb
jae
jl
shl
sub
dec
popa
les
ja
sub
add
jp
pop
mov
fiaddl
ss
jae
or
or
mulps
sahf
mov
xor
jns
imul
cmpsl
shll
mov
sti
pop
cld
out
cld
aam
xor
mov
repnz
push
cmp
and
insl
sub
push
into
sarb
je
sub
and
and
push
stos
sbb
sbb
std
nop
fcoms
aam
jae
lahf
nop
fwait
pop
imul
int3
pop
push
incl
inc
adc
sub
imul
push
movsb
iret
xor
inc
dec
jnp
adc
mov
test
pop
add
fldcw
xlat
and
xchg
mov
inc
lea
cmpsb
inc
fisubl
roll
jns
or
lea
cmp
jno
add
push
jno
sbb
cmp
add
es
cmc
mov
mov
cwtl
mov
je,pn
sub
addb
add
in
fldcw
xor
inc
mov
xor
xor
xchg
das
xor
jmp
push
or
fwait
add
mov
pop
testb
test
and
pop
mov
lea
shll
outsl
push
xor
aas
and
icebp
dec
dec
dec
xchg
jae
in
mov
inc
lcall
call
inc
out
neg
leave
inc
push
aam
cmp
xor
lock
and
arpl
cmpsl
or
mov
cmc
or
jle
inc
lret
jo
loop
xor
push
movsb
mov
and
pop
push
cmp
sbb
lret
pop
sbb
sbb
fwait
pop
hlt
ss
aad
repz
mov
stc
xchg
push
xchg
outsb
or
rcll
aad
das
xchg
push
rcr
mov
xchg
jmp
mov
xlat
insl
add
mov
fucomip
jb
outsl
inc
les
add
adc
sahf
inc
loopne
jae
dec
js
xor
cmpsl
imul
push
or
inc
push
fdivs
push
inc
repnz
ret
sub
fmuls
jl
jmp
dec
jns
movsb
subl
shll
lds
data16
fisubl
mov
mov
push
out
push
loopne
stos
cmp
fistl
cmp
out
jmp
leave
push
jb
js
mov
xor
das
into
gs
or
mov
adc
je
or
cld
ret
pop
outsl
ds
fisubl
mov
scas
xchg
or
imul
mov
mov
sahf
and
stc
in
pop
call
adc
pop
pop
lret
fistl
cltd
test
shlb
cs
iret
inc
cmp
push
mov
pusha
cmp
dec
lods
fwait
or
xchg
jecxz
int3
loope
adc
mov
inc
aad
cs
sub
ret
xchg
sub
xchg
in
es
add
dec
inc
lret
mov
out
sbb
sub
fdivl
adc
push
ja
outsb
sub
out
add
xchg
fdiv
loope
loopne
mov
js
push
sbb
add
shrl
popf
dec
cmp
lds
dec
jo
lret
cmp
pop
sub
lods
out
push
xchg
loop
clc
sbb
xor
push
mov
out
adc
inc
dec
adc
ret
pop
or
es
and
pushf
stc
fisttpl
dec
jbe
enter
fsubrl
dec
sub
xor
aam
inc
sahf
ljmp
cmp
mov
enter
sub
mov
mov
shl
out
repnz
in
fsubs
cmp
ret
sbb
add
xchg
inc
xor
sub
xorb
icebp
mov
xlat
imul
insb
xchg
push
jae
in
adc
sti
pop
xor
std
aas
scas
sub
subb
lldt
sti
jno
std
ror
in
nop
nop
fbld
push
adc
addr16
adc
push
pop
adc
sbb
mov
or
cmpsb
ds
fucomi
cmp
cli
and
jb
scas
sub
add
sbb
rclb
or
shr
mov
into
push
add
pop
pop
icebp
int3
mov
add
popa
rol
aad
inc
aam
sbb
cmpb
sti
repnz
adc
dec
xor
sbb
xchg
jp
pop
and
mov
ja
fistpll
sub
std
xsaveopt
sbb
push
or
stos
xchg
mov
mov
rorl
jae
bound
jbe
and
xchg
test
sub
arpl
mov
xchg
jecxz
gs
daa
jg
int3
push
jmp
sbb
pop
dec
addr16
rcll
les
arpl
xor
xor
dec
dec
pop
dec
mov
scas
inc
sub
mov
mov
ja
sbb
or
jle
pusha
inc
pop
pop
cmp
imul
shll
jae
xor
in
xchg
loopne
xchg
sbb
sub
mov
call
jns
sbb
shrl
sbb
pop
mov
mov
out
outsl
stos
test
dec
icebp
and
and
je
mov
mov
outsl
mov
ljmp
sub
adc
dec
lret
pusha
movsb
mov
js
lcall
xor
je
pushf
mov
sbb
icebp
fildl
or
fnstenv
xor
lcall
fmuls
mul
repnz
cmp
in
mov
push
dec
mov
bound
push
pop
jnp
shll
push
and
pop
cli
mov
aad
jno
mov
mov
movsl
inc
enter
outsl
mov
jns
and
or
aas
xchg
mov
lods
jg
add
pop
repz
lret
mov
push
repnz
pop
dec
add
bound
fs
cmp
push
jmp
je
jmp
jp
into
ret
int
push
inc
test
aad
xchg
in
jo
mov
repz
into
lret
mov
mov
ret
lret
push
int
rcr
xlat
xchg
out
jbe
adc
sbb
das
add
jmp
adc
clc
cli
sbb
mov
pop
jnp
std
ja
cmp
jmp
int
push
sbb
popf
xchg
icebp
push
mov
push
fsubrs
jns
stos
and
arpl
cld
or
inc
and
push
movsb
andl
cmpsl
nop
inc
xor
sbb
nop
cmpsl
lcall
and
push
into
cmp
adcl
pop
jle
sub
xchg
rcr
jp
repz
and
pop
jns
push
pop
imul
ret
or
inc
stos
ficompl
movsb
push
test
xchg
lcall
mov
xor
mov
popf
lahf
jl
and
inc
or
xchg
dec
sqrtps
popa
xlat
sbb
jg
hlt
andb
jp
ds
and
add
pop
push
dec
mov
or
push
std
js
out
inc
popf
push
mov
ficoms
mov
pop
pop
pop
push
jg
push
jmp
mov
std
add
adc
into
dec
lret
bound
inc
push
push
adc
dec
lods
icebp
aad
mov
pop
or
es
dec
ss
idivb
std
xchg
bound
repz
mov
and
pop
mov
push
negb
std
jae
add
dec
and
cmp
mov
jns
cmp
les
testb
cmp
inc
dec
xchg
pop
sub
movsl
xor
adc
cli
add
daa
push
push
and
iret
arpl
dec
dec
iret
or
lcall
add
jbe
mov
out
sub
imul
pushf
mov
outsb
adc
lea
adc
push
jl
mov
mov
int3
pop
aaa
sub
mov
xchg
lret
dec
push
mov
lea
es
out
fldt
mov
leave
and
and
mov
mov
and
push
testl
and
cwtl
and
mov
inc
lods
add
xor
icebp
in
sub
or
add
add
outsl
pop
repz
push
xchg
inc
xlat
ja
jo
sub
push
sbb
pop
sbb
sbb
pop
int3
mov
fimull
ss
test
data16
roll
cmc
adc
dec
cmc
and
xchg
add
mov
push
aas
sub
out
mov
jge
aad
ds
fisttpll
in
add
lea
jl
in
push
push
int3
test
loop
data16
jg
add
cmp
outsl
std
sub
cmp
mov
xchg
pop
outsl
testb
push
mov
rep
test
push
fildll
loope
shlb
or
jl
lock
shrb
out
jg
dec
mov
push
cmc
subl
sub
jns
enter
adc
mul
pushf
cwtl
xchg
push
push
xor
mov
fwait
das
mov
adc
flds
cli
jns
bswap
xchg
ror
fs
and
aad
je
mov
pop
and
je
fwait
jns
sub
sbb
or
pop
xchg
fwait
pushf
gs
js
mov
not
dec
int3
out
push
dec
outsl
inc
jbe
frstor
insl
xchg
jne
xchg
sbb
cs
dec
loope
rolb
sub
adc
or
or
and
adc
mov
jl
inc
push
mov
inc
out
sbbl
and
js
push
es
xorl
and
clc
test
xor
push
cwtl
xor
into
insl
outsb
test
in
int3
jnp
pop
dec
mov
push
pop
shll
mov
jge
add
dec
arpl
fsubrs
mov
mov
cltd
imul
inc
jg
xchg
cmp
ret
gs
dec
mov
test
jno
push
outsb
xchg
outsb
out
dec
cmpl
lret
cwtl
lea
subl
xchg
or
fidivrs
js
lods
mov
iret
mov
aam
fimuls
pop
cltd
xlat
xorb
test
dec
dec
lret
xchg
pop
aam
repz
lea
in
xor
sub
pop
shlb
xchg
pop
jns
cwtl
outsb
jnp
sti
jae
xchg
lds
in
adc
xchg
push
add
xor
dec
sbb
fisubl
sbb
push
repz
je
clc
jns
mov
in
push
repnz
pop
insl
movsl
mov
mov
xlat
jae
sub
addl
dec
lcall
es
xor
or
xchg
iret
xchg
cwtl
out
movsl
movsb
lcall
dec
pop
cmpsb
rcrb
xor
das
jg
ret
xchg
sarb
or
dec
sub
add
lods
inc
mov
into
ljmp
xchg
dec
in
mov
lea
mov
mov
mov
dec
ljmp
ljmp
add
and
and
mov
adc
ds
mov
fisubrl
or
cmp
daa
pop
int
ficoml
push
jo
pop
addr16
mov
cmp
into
lcall
ret
pop
or
or
jno
lahf
push
jge
es
pusha
mov
and
xchg
xchg
and
test
xchg
mov
dec
imul
and
out
ret
int
testb
sub
pop
push
mov
pop
cmpb
inc
sti
xchg
outsl
pop
xchg
xor
shld
out
ds
andl
lahf
xor
sbb
ret
push
shrb
ror
mov
dec
popa
pop
shrl
enter
lods
pop
adc
adc
jmp
pop
es
adc
dec
inc
push
jge
mov
cmp
test
and
push
jg
jle
jl
mov
pusha
push
mov
test
mov
icebp
sahf
inc
mov
mov
popf
lahf
movzbl
lcall
das
enter
in
daa
sub
cmp
dec
add
mov
aaa
xchg
add
fnstenv
mov
adc
divb
sbb
push
out
imul
push
xchg
mov
fwait
adc
les
repz
dec
ror
dec
rcrb
stc
sbb
push
cmp
mov
scas
es
dec
jnp
bound
adc
hlt
push
rcrl
aad
jno
lea
cmp
roll
adc
fsubr
inc
dec
loop
les
mov
sub
mov
push
pcmpeqd
cmc
cmpsl
arpl
push
jns
or
and
arpl
scas
sub
pop
xlat
lea
push
or
or
lret
and
xor
cltd
in
or
decb
add
fimuls
out
xchg
xor
and
jb
xchg
cs
jae
dec
inc
daa
or
les
add
cld
dec
mov
jb
sub
stc
out
aaa
sbb
push
jecxz
xor
loopne
repz
outsb
mov
aam
cmp
in
push
rorl
je
and
mov
cld
decl
xor
jmp
push
xchg
daa
clc
jo
lods
push
adc
data16
xlat
jne
mov
lock
or
sahf
mov
adc
call
sbb
lods
sbb
and
out
pop
mov
dec
movsl
stos
out
out
sbb
jl
cmp
add
inc
rorl
lea
pop
xchg
loopne
and
or
dec
push
cmp
dec
test
or
mov
cs
mov
mov
inc
sub
adc
fisttpl
enter
out
and
cli
movsl
add
sub
and
shll
push
mull
call
das
push
insl
mov
jbe
mov
inc
std
pushf
imulb
cmpsb
stos
imul
rorl
mov
call
pop
scas
and
mov
cmpb
cmp
lret
out
mov
cld
movsb
jle
lret
lods
aam
ja
pop
dec
mov
pop
clc
bound
pop
sahf
cmp
int
mov
lods
jp
fildl
mov
push
lods
sbb
push
push
andl
mov
dec
call
inc
sub
call
or
imul
test
cmp
pop
shrl
mov
jae
mov
sbb
sbb
outsl
cwtl
pop
sub
add
push
andl
testl
adc
data16
aaa
cld
call
testb
movsl
fdivl
dec
std
std
cld
fsubl
enter
push
cld
notb
xor
inc
pop
mov
mov
in
test
xor
insl
inc
testl
or
cld
pop
stos
pop
mov
sbb
pop
push
inc
xor
stc
pop
xchg
jmp
ds
iret
jb
or
ret
push
cmp
ljmp
in
sarb
xchg
jbe
jp
jne
lock
and
stc
dec
scas
adc
popl
push
clc
jle
adc
lret
arpl
jg
sahf
js
jmp
popa
xor
mov
and
sub
inc
add
cli
aas
fmuls
cmp
add
insl
ljmp
add
inc
loop
and
and
xchg
repz
orl
arpl
cwtl
xchg
je
jo
push
enter
inc
inc
mov
push
ds
insl
xorb
lds
cmp
adc
cmp
push
xor
test
cltd
lock
imul
mov
push
add
cmpsb
loop
js
push
jmp
xor
push
xor
fwait
imul
cmpsl
xor
daa
xor
in
pusha
rorb
xchg
ja
sbb
or
stos
ljmp
popa
mov
in
aad
cmpb
cmp
xor
notl
std
cmpsb
mov
jmp
sub
dec
sub
cld
sub
aas
dec
addl
fbld
mov
adc
fpatan
jbe
push
dec
orb
fldcw
adc
sbb
sub
insl
mov
push
in
out
jbe
lahf
scas
sub
dec
adc
out
in
adc
dec
loope
adc
xchg
adc
cmp
cmc
add
lea
mov
in
pop
cmp
adc
xlat
xor
movsb
or
les
xor
and
cmp
imul
inc
mov
mov
jle
jge
add
or
hlt
shlb
or
movsl
jecxz
imul
scas
mov
jo
repz
out
je
stc
bound
mov
jno
test
mov
insb
lods
xor
jbe
push
dec
imul
mov
sbb
clc
fucomp
jbe
jl
clc
bnd
aam
xchg
sbb
xchg
or
inc
movsb
sar
lret
push
sbb
mov
jmp
lret
lahf
mov
dec
sahf
push
cmp
mov
subb
bswap
ficoms
mov
imul
js
popf
ljmp
dec
icebp
push
fstpt
sub
mov
ja
and
fnstenv
mov
add
adc
adc
push
sub
push
hlt
imul
sub
outsl
inc
mov
add
and
movsb
shll
insl
mov
not
or
test
lcall
jo
jg
mov
add
shlb
mull
shl
lods
xchg
sub
jl
in
in
cwtl
lret
mov
lahf
shld
xchg
daa
pop
mov
xor
movsb
sbbb
imul
lcall
push
xor
imul
int
cwtl
xchg
out
mov
sub
rcrl
sub
jecxz
inc
clc
and
dec
mov
inc
sub
mov
cmp
shrl
cwtl
mov
dec
push
xchg
and
pop
cmp
jbe
out
sub
inc
or
mov
sub
mov
sub
push
push
xchg
mov
daa
sub
sbb
and
outsl
inc
adc
xchg
aam
test
mov
test
rolb
push
and
xchg
inc
mov
jb
and
sarb
adc
push
sub
xor
rorb
dec
fstpl
push
pop
dec
movsl
jmp
or
movsb
ret
call
mov
mov
cs
pushf
mov
test
xor
cli
xchg
js
mov
xchg
pop
movsb
adc
in
push
xchg
outsb
fcoml
pop
les
test
cmp
fld1
pop
dec
jp
das
jmp
fmull
test
rorl
pusha
dec
lret
out
cli
xchg
mov
pusha
push
xor
xchg
data16
or
xchg
xchg
inc
les
mov
test
inc
in
aam
xchg
testb
push
das
clc
shrl
dec
rep
ja
add
cmp
movsb
jbe
std
enter
jb
xchg
rorb
sub
sbb
clc
jle
scas
mov
sub
rcr
jmp
sbb
sbb
and
pop
or
xor
ljmp
cs
jmp
insb
inc
cmc
or
mov
sub
addr16
xor
or
pop
or
push
int3
push
jns
push
mov
jle
add
mov
or
adc
enter
cmp
inc
pop
call
push
je
cltd
ja
dec
pop
sarl
push
loope
loope
cmpb
lcall
movsb
add
idivb
sub
pushf
and
dec
xor
int3
pop
stc
call
lea
std
or
es
cmpsl
add
loope
mov
cmc
ret
out
xor
scas
leave
gs
xchg
xchg
movb
xchg
jle
sub
mov
pop
push
adc
dec
ret
xor
hlt
in
push
pop
rcl
mov
imulb
in
sbb
shl
push
jecxz
adc
xchg
arpl
sbb
xlat
fidivl
rcrb
or
cltd
sub
lret
lret
inc
xlat
mov
and
out
mov
adc
sbb
sbb
ficoml
xlat
cs
divl
adc
out
mov
or
fisttpll
les
adc
test
jmp
sbb
mov
nop
add
mov
scas
out
pop
lods
adc
or
inc
inc
and
lcall
inc
xor
push
or
xchg
xor
scas
dec
jp
cmp
pop
cmp
or
out
push
mov
jno
cli
test
mov
mov
sbb
shlb
aam
daa
sbb
ja
jl
popa
nopl
stos
enter
push
jg
pop
dec
cmp
test
addr16
stos
vmovaps
test
cmpsb
cmpl
jmp
out
jo
inc
in
adc
dec
scas
aaa
xor
cs
lcall
imul
stos
dec
out
pop
add
clc
mov
push
mov
xor
int
inc
movsl
fdivrl
inc
dec
sbb
push
add
dec
lret
adc
imul
in
testl
mov
push
jge
int3
test
mov
push
in
and
cs
repz
arpl
in
cmp
jmp
bound
inc
cmc
test
insb
xor
push
loop
pop
mov
iret
jo
lock
fwait
add
fsubs
jp
loopne
int3
add
stc
jp
fdivs
dec
arpl
jl
test
fwait
scas
outsb
stc
push
sbb
int3
xor
mov
pop
call
aad
stc
addr16
enter
lahf
call
push
and
cmp
mov
les
adc
in
mov
sub
hlt
in
xor
push
scas
repz
add
cwtl
out
repz
or
fcmovnb
mov
push
addr16
sub
xlat
xchg
or
iret
and
call
xor
push
aad
fstpt
lods
ja
inc
loop
sbbl
cmp
and
hlt
cmp
addr16
xor
cmpsb
lods
jmp
subb
fadd
and
popa
inc
mov
popf
mov
adc
out
or
popf
or
stos
shlb
cltd
iret
and
sbb
mov
inc
out
shll
ja
push
mov
inc
mov
testl
xlat
dec
aas
xchg
sub
or
mov
xor
jmp
cmp
movd
mov
rcrl
xchg
outsl
mov
pop
inc
jbe
xor
or
loop
cmp
push
mov
repz
int3
cmp
pop
ljmp
and
inc
lahf
jmp
aas
adc
fstps
je
mov
mov
xchg
fidivl
scas
fimuls
imul
push
cmp
hlt
adc
imul
test
dec
mov
add
or
lret
xchg
push
leave
mov
out
lcall
out
sbb
add
call
pop
or
int
iret
pushl
test
fsts
hlt
icebp
add
sub
push
xchg
mov
repnz
test
inc
loope
pop
pop
xor
jns
into
xchg
xor
nopl
pop
cmc
mov
popf
rcrl
pop
inc
je
inc
enter
adc
data16
decl
adc
call
repnz
mov
or
dec
or
clc
xchg
into
cmp
xchg
pop
sub
add
sub
sub
jbe
enter
fwait
mov
hlt
sti
add
mov
inc
pop
mov
xchg
leave
xchg
cmpsl
out
dec
adc
pop
movsb
adc
out
outsb
add
cmpsl
out
cmp
ret
call
dec
cmc
fnsave
adc
mov
xchg
push
cld
sbb
or
negb
cli
push
lcall
fmul
popf
popa
shll
pop
mov
adc
mov
int
aad
pop
push
push
or
cmp
mov
jmp
mov
push
mov
push
out
lret
dec
shlb
pushf
push
dec
shrl
cmp
mov
out
inc
and
mov
js
cmp
mov
fs
scas
xchg
xchg
cmp
imul
cmp
imul
test
xchg
xorl
shll
jecxz
push
sub
mov
out
ret
ret
mov
rcrb
jge
outsb
jb
mov
cmp
fldcw
test
push
lea
dec
and
and
cmp
add
in
jg
stc
stos
jp
push
lods
jb
push
jns
and
test
scas
push
cmc
cmp
push
mov
out
xor
in
in
stos
jmp
and
lods
sub
xchg
inc
sub
push
lret
mov
out
and
outsb
orb
popf
ret
pop
mov
jecxz
xchg
test
xor
test
test
jp
lret
in
dec
lea
or
nop
cld
or
fbstp
inc
test
bound
mov
int
mov
and
cmp
hlt
push
lahf
push
pusha
sti
add
lahf
cmpsl
dec
lock
cwtl
int3
test
or
sub
push
lds
jle
dec
rolb
hlt
and
push
add
into
pusha
pop
jmp
hlt
sbb
xor
fwait
stos
xchg
pop
and
div
aas
incb
pushf
imul
dec
mov
sbb
sbb
mull
inc
and
shrb
aad
mov
mov
push
mov
imul
and
or
cmp
into
scas
fmull
sub
mov
clc
push
stos
mov
add
mov
xchg
out
mov
sti
mov
mov
sub
shrb
adc
int3
mov
cli
pop
call
push
out
mov
ljmp
int3
pop
mov
rorb
ss
in
or
push
or
fs
dec
push
push
negb
loope
push
enter
sub
xor
mov
jns
stc
leave
ds
cltd
sahf
test
inc
inc
les
cmpb
or
push
movsb
mov
sbb
mov
or
adc
add
push
daa
fs
ja
sahf
in
jg
test
xchg
cmp
mov
ja
mov
imul
pop
cmp
push
mov
mov
push
jge
jge
fisubs
mov
sbb
addr16
mov
test
mov
mov
xor
div
and
ds
xor
and
sub
stc
mov
sub
jne
and
xchg
out
ret
jle
test
pop
popa
adc
fisttpll
mov
pop
std
jo
dec
jle
dec
loopne
jnp
test
fdivrs
movsl
fwait
dec
into
fdivs
into
mov
push
out
mov
push
lret
push
sub
les
les
into
outsb
shlb
es
mov
mov
sbb
mov
jmp
scas
je
push
shll
cmpsb
sbb
jl
shr
mov
inc
sbb
orb
push
cmp
push
add
lcall
in
into
in
mov
sbb
mov
mov
xchg
test
in
push
mov
stos
pop
lock
mov
ficoml
xchg
scas
mov
xorl
dec
std
out
adc
clc
movsb
or
cwtl
aam
repnz
xor
dec
push
gs
mov
ret
js
imul
jae
idivl
jecxz
jnp
sahf
sub
imul
pop
jge
pop
push
rcrb
hlt
add
mov
movsb
xorb
sbb
js
out
and
xor
pop
mov
fcmovnu
mov
pop
cmp
sbb
jle
fwait
pop
jnp
or
idiv
or
and
sahf
xchg
push
rcll
xchg
shlb
pop
repz
js
fistpl
leave
pop
mov
mov
add
xchg
scas
mov
notl
pop
shlb
mov
cld
cmp
or
cmp
faddp
and
or
mov
cmp
pop
sbb
daa
popl
mov
ljmp
jns
out
lret
mov
cmpsl
inc
pusha
bound
arpl
mov
les
int
cmp
adc
daa
shlb
inc
addr16
push
push
mov
cmpsb
xchg
pop
imul
cwtl
adc
popa
dec
test
dec
mov
sbb
xor
cmp
dec
sub
andl
imul
stos
xchg
xchg
daa
mov
and
inc
pop
xchg
xor
pop
add
int
int
sbb
stos
dec
adc
into
test
sub
mov
popf
test
repz
xlat
rcr
mov
add
out
pop
dec
pop
or
aaa
xor
adc
pop
push
mov
les
and
push
jl
push
iret
sub
and
jge
inc
fstps
movsb
mov
mull
int3
lcall
push
or
decb
pushf
pop
insb
cmpsl
xor
pop
jo
dec
gs
fidivl
ss
pop
push
add
adc
stos
pop
ljmp
shll
aad
stos
and
mov
xorl
test
testl
das
hlt
adc
sub
adcl
mov
test
cmpsb
xchg
lods
sbb
cmp
inc
cmpl
fsts
xchg
daa
iret
sbb
pop
pop
int3
jb
push
dec
vsubsd
arpl
jne
cwtl
jg
jo
psrlq
cmpsl
or
ds
mov
mov
xor
adc
aam
les
dec
xor
popf
clc
repz
or
pushf
pushf
aaa
sub
dec
out
xchg
mov
mov
cvtdq2ps
pop
add
mov
mov
xchg
xor
xchg
push
adc
sub
ss
pop
inc
jb
repnz
cmp
pop
sbb
inc
add
cwtl
punpcklwd
pushl
in
loop
mov
jp
daa
and
mov
xchg
jns
pushf
add
and
js
mov
je
aam
ret
scas
dec
inc
out
icebp
mov
jae
enter
je
fcompl
xchg
les
inc
and
movsb
sbb
test
aas
shll
mov
add
sbb
cmpl
cwtl
fwait
fs
out
lahf
out
daa
or
xchg
fs
addr16
xor
es
cmp
jp
sub
adc
outsb
and
fucompp
push
cs
sahf
fcomp
sbb
fs
jmp
sub
int
mov
or
and
daa
xor
push
fnstenv
xchg
psrlq
mov
cltd
jae
repz
movsl
xor
ror
mov
enter
sbb
in
sub
push
or
inc
mov
xchg
inc
stos
aad
daa
mov
jnp
xor
scas
sub
push
dec
and
or
jae
xor
push
xchg
fcompl
lods
push
mov
mov
push
pop
lcall
popa
stc
dec
outsl
xchg
fiadds
ficomps
push
mov
cld
add
adc
insb
insl
mov
psubsb
and
rcll
stos
sub
cmp
or
mov
outsb
leave
jne
lock
gs
repnz
pop
test
inc
xchg
movsb
subl
test
lods
pusha
loope
out
shlb
mov
es
clc
sub
mov
cmpsl
mov
sbb
enter
out
jle
or
aaa
jae
out
test
mov
pop
push
lods
movsl
adc
xlat
sbb
fisubs
rolb
rcrb
xlat
bound
mov
sar
sbb
push
mov
jns
mov
and
add
adc
xchg
fcmovbe
sbb
xchg
cld
dec
ss
jbe
icebp
push
xlat
sbb
mov
push
adc
dec
sbb
cmp
sti
push
adc
pop
or
or
loop
sarb
out
insb
inc
in
xchg
inc
mov
sarb
lods
fs
das
add
mov
mov
in
jns
xor
push
inc
jbe
xchg
and
inc
cmp
push
adc
or
lret
or
mov
int3
arpl
jae
cwtl
lods
pusha
ret
incl
and
loop
mov
xchg
ja
or
sbb
fcmovnu
jb
mov
testl
dec
movsb
dec
mov
lea
fstpt
mov
into
jmp
lret
sbb
cmpsl
mov
sti
xchg
dec
repz
jmp
push
cli
xlat
popa
out
add
xor
fimuls
jb
leave
mov
fiaddl
cmovo
iret
xchg
pop
mov
xchg
js
cmpsl
fwait
bound
mov
xchg
pop
fucom
push
movsb
mov
adcl
fs
pop
xchg
adc
popf
pop
mov
leave
pop
mov
outsb
dec
ss
pop
das
aam
js
jne
jle
fisubrl
mov
inc
pop
imul
mov
pop
or
out
fdiv
gs
xchg
andl
loopne
pop
lret
mov
insb
and
stc
inc
push
or
repz
out
cmp
mov
or
cwtl
sbb
mov
xrelease
mov
shl
cmpsl
lcall
aaa
xchg
mov
xchg
sbb
xlat
cwtl
idivl
cmc
mov
push
and
out
inc
ret
lods
adc
scas
cmp
add
inc
mov
test
mov
in
push
cmpsl
popf
incb
push
mov
or
push
xchg
mov
push
adc
inc
in
aad
insb
push
dec
pop
stc
or
xlat
test
pushf
pop
or
mov
pop
pop
hlt
inc
imul
xor
icebp
jmp
test
ret
cmp
call
mov
outsb
inc
jecxz
sarb
leave
lds
jb
lahf
sti
loope
jge
aaa
into
int3
fnsave
stos
cmp
mov
add
dec
dec
orb
rcrl
push
sahf
divl
aaa
in
lret
and
mov
dec
iret
dec
cmpsb
or
pushf
pop
jp
mov
add
jnp
ret
popw
imul
lods
movsb
mov
lods
fsubrl
or
mov
jecxz
out
cmpsl
pop
ret
push
mov
push
push
dec
pop
pop
sbbl
stos
repnz
adc
pop
std
push
cmp
cld
movsb
jg
xorl
into
stos
jns
pop
sti
mov
mov
in
cmc
mov
aam
hlt
ret
lret
sub
jb
sbb
mov
rcrb
out
mov
negb
jae
jo
push
jp
mov
ret
jbe
jns
jb
adc
divl
out
test
xchg
repnz
lret
sbb
movsb
mov
aad
pop
rol
cld
and
addl
lret
push
add
push
mov
sahf
test
mov
jo
jle
fmuls
xchg
rcrl
inc
mov
dec
and
mov
push
jno
lea
pop
pop
push
or
cmp
jg
sub
mov
jnp
daa
nop
xor
pop
movsb
sbb
mov
lret
je
fbld
lret
aaa
dec
and
xor
xchg
and
popa
and
mov
in
shrl
outsl
and
fisubs
dec
test
int
cli
mov
subb
into
iret
neg
test
or
les
dec
xchg
dec
jbe
cmp
fcoms
jnp
in
cld
add
ja
loop
xor
in
imul
adc
and
xlat
enter
lods
popl
lock
pusha
cs
in
enter
sub
pusha
xor
scas
inc
sbb
je
roll
rcrl
add
mov
sub
cmp
dec
mov
mov
outsb
sub
jge
cld
jmp
sub
lahf
dec
sbb
mov
mov
sbb
push
fmulp
or
ffreep
ret
inc
repz
pop
daa
xor
and
scas
fimull
scas
insl
nop
sbb
aas
jmp
xor
pop
inc
hlt
loope
movsb
push
test
pop
pop
dec
stc
clc
mov
ss
sbb
or
rorl
test
jnp
in
aad
add
xor
adc
inc
sbb
jg
leave
inc
push
shl
mov
lods
or
xchg
add
scas
and
rcrl
mov
loope
and
sbb
mov
mov
pop
cmp
mov
xor
shrl
xchg
ja
negl
xchg
and
cld
pop
icebp
cld
dec
jecxz
mov
aas
inc
xor
xor
mov
cmp
xchg
and
lods
les
push
ja
dec
mov
pop
mov
lods
stos
push
mov
xchg
add
push
fstp
inc
scas
mov
repz
xchg
lcall
int3
inc
cmc
dec
mov
sub
pushf
bound
icebp
or
dec
mov
mov
inc
test
jo
add
push
sbb
push
add
inc
push
and
cmp
xor
arpl
subb
or
sbb
insl
lods
daa
mov
inc
dec
fsubl
jg
mov
cmp
sbb
pop
in
lret
push
pop
scas
sub
jmp
mov
insb
cmp
or
sahf
lret
into
adcl
outsb
and
xchg
sbb
or
in
mov
jmp
jnp
nop
dec
jecxz
xchg
fbstp
sub
push
in
cmp
jle
in
jne
push
xchg
push
addl
faddl
test
aam
mov
jmp
and
scas
arpl
dec
adc
mov
and
jnp
aam
hlt
mov
rclb
jl
or
test
std
idivb
pop
jnp
inc
sar
xchg
in
outsb
iret
movl
mov
mov
xchg
jge
loopne
imul
add
sbb
cmpl
mov
pop
push
mov
xchg
pop
iret
rclb
mov
inc
out
add
xchg
movsl
movsb
movsl
mov
and
dec
fisttps
add
mov
aas
dec
mov
or
xor
cmp
stos
jns
icebp
out
mov
cmp
stos
cltd
pop
fbld
mov
jb
jmp
cmc
pusha
fidivl
and
ja
mov
jle
jb
out
rcl
ret
mov
insl
data16
cmp
cmp
xchg
movsb
xchg
mov
mov
dec
and
add
nop
fstl
xchg
scas
das
inc
jge
adc
cmpsl
fcoms
dec
mov
addr16
movd
clc
fwait
pop
mov
cmc
mov
sbb
popa
loop
fdivl
dec
aaa
or
pushf
pop
jmp
addr16
and
push
rorl
sbb
inc
cs
push
xor
orl
in
mov
clc
sub
push
sub
hlt
jnp
push
xor
popa
jae
cld
out
lret
int3
mov
scas
xchg
jnp
loope
shl
sub
es
push
lahf
test
shrl
xchg
push
ja
lock
inc
fs
xchg
jmp
arpl
scas
mov
rcl
clc
gs
loopne
mov
sub
cmp
jmp
dec
outsb
inc
out
cld
out
cmp
scas
inc
aad
push
pop
lods
insb
xor
xchg
pop
gs
pushf
dec
movsb
test
cmp
rorl
xor
mov
loopne
inc
aas
adc
mov
xor
imul
pop
pop
mov
and
mov
arpl
imulb
fmull
xchg
xchg
vcomisd
das
cmp
lea
out
pop
jae
sub
les
jno
ss
in
push
pop
sub
popa
ret
popa
test
loop
sub
and
cld
int
paddusw
cmp
lea
xchg
mov
fimuls
mov
mov
cmp
aas
dec
add
add
lods
or
insb
stc
sbb
jge
sub
ret
push
loopne
add
imul
push
imul
sbb
add
lcall
xchg
mov
je
fsubs
or
inc
imul
mov
int3
dec
sub
pop
jmp
int3
mov
mov
cmp
or
push
mov
xchg
push
shl
aad
jb
imul
movsl
outsl
cmp
dec
pop
outsb
mov
xchg
test
jp
add
out
and
mov
js
jno
xchg
or
lock
dec
hlt
addr16
pop
push
jmp
icebp
sub
sbb
cltd
inc
lcall
push
pop
loopne
je
and
lahf
shl
hlt
adc
dec
push
addr16
cltd
fs
repz
mov
inc
ljmp
xchg
jns
mov
pop
cmp
add
sbb
adc
xchg
or
popl
sarb
mov
jecxz
iret
or
cli
push
push
nop
mov
popf
pop
test
mov
aas
cmpl
dec
pop
mov
movsb
in
movsb
out
xor
and
and
fcomp
mov
push
and
push
insb
sbbb
aas
or
xchg
push
xchg
fisttps
in
xchg
mov
sar
mov
fimuls
pushf
push
mov
into
pop
inc
in
sub
pop
test
jg
roll
mov
fistl
pop
mov
jmp
mov
dec
dec
out
jo
sub
scas
lea
loop
or
add
cmpsb
ljmp
pop
and
lods
sbbb
dec
or
arpl
xor
lods
jecxz
imul
int3
loopne
dec
clc
loope
mov
jl
jl
cmp
jne
lahf
lods
outsb
add
cli
call
in
into
or
inc
sti
push
xchg
decl
xor
xlat
and
cmpsb
dec
or
adc
adcl
pop
mov
cmp
fnstenv
cld
lds
imul
push
jg
cmp
inc
mov
lock
xor
ficoml
cmp
pop
inc
out
mov
mov
push
cs
inc
fwait
sbb
or
mov
mov
in
mov
add
insb
pop
iret
add
add
xchg
addl
mov
pop
fsts
or
xchg
add
mov
sti
or
lock
or
push
pop
xor
mov
ja
fimull
decl
sbb
pop
jo
inc
pmaxub
dec
and
fwait
repnz
mov
inc
icebp
adc
xchg
jle
adc
hlt
push
ja
mov
movsl
dec
int3
pop
ficompl
jmp
cmpl
dec
std
cmpsl
mov
in
push
arpl
pop
cmpsb
loop
inc
pcmpgtb
add
lea
push
outsl
sub
daa
mov
mov
rolb
add
xchg
in
add
fimuls
ss
sbb
or
mov
mov
gs
jno
popf
push
data16
mov
mov
jle
dec
mov
lcall
and
push
push
mov
pop
mov
xchg
sub
jnp
mov
shll
push
add
std
mov
cs
in
sbb
ds
movsl
ss
xor
xchg
loope
cmp
out
mov
mov
lahf
lods
decb
add
je
mov
push
push
mov
inc
sbb
push
xorl
sti
push
xchg
notl
dec
pop
aad
mov
xor
inc
popf
ficomps
mov
ds
push
sbb
test
pop
xchg
and
stc
ss
movsb
daa
jmp
stos
mov
cmp
or
mov
mov
pop
adc
jne
das
in
xor
idivl
jnp
iret
mov
jb
pushw
push
pop
or
popf
aad
inc
mov
movb
loop
std
sub
nop
xor
push
dec
adc
outsb
jge
insl
xor
jb
imul
push
fsubr
xchg
data16
sbb
sub
jne
lock
dec
hlt
in
movsb
xchg
pop
idiv
mov
aas
jg
push
add
or
mov
fldl
repnz
inc
push
ret
cs
push
outsb
lret
cli
pop
dec
pop
loope
inc
insl
popa
pop
push
jle
push
iret
push
mov
mov
out
cmpsl
mov
add
in
daa
das
mov
cmpsb
mov
cwtl
jl
dec
add
scas
sub
xchg
cmp
mov
lock
ljmp
jnp
jle
dec
xor
xor
mov
add
dec
mov
fimuls
inc
icebp
fucomp
lea
daa
ficoml
xchg
push
out
pop
mov
mov
nop
movsb
negb
bound
out
subps
std
sub
adc
xchg
test
lods
sbb
fs
push
inc
imul
cli
aad
icebp
jmp
stc
fsubl
push
int
jle
dec
or
add
jmp
or
in
ror
mov
push
xchg
ss
rol
mulb
jbe
cs
and
dec
stos
mov
out
dec
mov
lcall
cmpsb
jae
imul
stc
pushf
arpl
jmp
testl
push
adc
outsl
std
mull
inc
fsts
xchg
mov
mov
repz
sbb
movl
cmp
ret
notl
xchg
mov
cmpsb
shll
test
jnp
shlb
jae
adc
jae
and
arpl
pushf
fisttps
pushf
ficompl
sahf
sub
inc
or
std
aad
pop
sub
aam
cmc
rclb
jnp
fs
mov
mov
push
or
rorl
int3
pop
pop
xor
mov
jo
lea
mov
sub
push
sub
or
pop
xchg
pop
mov
scas
dec
jb
sub
and
lret
leave
and
addb
or
xor
ss
js
add
outsl
push
jns
lea
pop
cwtl
and
mov
je
fisubl
lods
ss
xor
cwtl
lea
loop
cwtl
std
adc
aas
shll
mov
dec
mov
ja
jge
jmp
cwtl
inc
xor
mov
in
ret
ja
aas
imul
cwtl
fwait
mov
repnz
xchg
fwait
mov
dec
sub
in
adc
pop
pusha
or
mov
sbb
mov
jp
test
dec
rcrl
daa
push
mov
xchg
fwait
mov
ficoms
mov
inc
enter
xchg
ds
les
inc
sbb
stos
mov
dec
std
jecxz
and
pop
pop
dec
faddp
mov
cmp
insb
xchg
and
popl
sbb
das
ljmp
leave
scas
outsl
mov
jle
push
pop
xor
aad
jp
out
bnd
jmp
fadds
mov
push
aas
cmp
imul
nop
mov
mov
jnp
sbb
dec
mov
inc
inc
dec
aas
and
jl
cmpb
push
popf
lock
dec
and
movsl
push
xor
pop
insl
xchg
sub
aam
jae
stos
inc
subl
hlt
adc
adc
faddl
xchg
jp
popl
in
push
ficoml
mov
or
arpl
push
xor
xor
lcall
jnp
pop
push
push
pop
inc
adc
pop
mov
addl
or
pop
push
sub
xchg
nop
fistps
mov
push
adc
adc
mov
negb
and
adc
ss
xor
ss
pop
pop
sbb
hlt
push
cli
jl
and
mov
mov
mov
pop
rcr
push
insb
addr16
mov
sbb
mov
xchg
cmp
adc
dec
push
dec
jbe
fldt
rolb
imul
loope
test
jge
jecxz
out
call
mov
xorl
sbb
leave
push
inc
push
xchg
repnz
mov
loopne
mov
stc
sub
cmp
xchg
adc
out
je
repnz
subb
in
loop
sub
test
sbb
push
ds
pop
incb
popf
mov
mov
xorl
out
or
mov
popa
movsb
test
pushf
ret
out
test
inc
lret
stc
and
pop
or
jmp
in
xchg
test
push
inc
sub
lcall
mov
cmpsl
stos
adc
mov
mov
repnz
jp
mov
aas
inc
jecxz
daa
sahf
xchg
ds
outsb
xor
sub
inc
sub
jae
or
or
mov
cwtl
insl
int
mov
out
scas
inc
sub
push
or
lret
and
or
jp
xchg
pop
out
fadd
daa
cwtl
pusha
add
into
addr16
fdivrp
daa
push
push
push
add
sbb
push
into
xor
test
hlt
inc
aam
and
sti
jp
rcll
pop
push
scas
push
lock
jmp
fwait
xchg
dec
push
mov
mov
inc
adc
int3
or
je
adc
arpl
add
mov
adcb
mov
int3
test
push
adc
ret
fucomp
and
scas
sti
cmpsb
mov
fstps
pop
pop
adc
add
fdivrl
in
add
lock
sub
mov
orb
repz
les
nop
out
out
movsb
mov
pop
pop
loope
sahf
into
mov
imul
out
aaa
lret
ret
pop
ljmp
sti
bound
testl
aam
add
cmpsl
shl
adc
cmpsl
xchg
inc
in
pop
sub
sub
lock
or
daa
andb
adc
in
cmp
lock
or
repnz
push
divl
decb
movsl
lret
dec
sub
nop
in
cs
lds
stos
sub
adc
cmp
or
sub
sbb
jbe
inc
inc
mov
add
mov
jecxz
cs
or
mov
cmc
jge
inc
mov
pop
pop
push
int
sub
scas
leave
jmp
pusha
in
or
xor
mov
shl
es
add
insb
push
mov
lret
xor
lret
xadd
popa
ffreep
pop
mov
push
dec
xor
inc
aaa
call
and
and
sub
xor
shl
dec
lret
xor
movsl
pop
pop
rcrb
xchg
pop
and
sbb
or
fs
mov
sub
inc
fadd
mov
push
stc
xchg
pop
or
loope
xchg
das
pop
xchg
test
cmp
jl
imul
retw
lret
mov
pop
and
push
push
add
or
pop
gs
pop
push
dec
paddusb
sub
sub
mov
inc
jl
jg
xor
mov
push
pop
mov
pusha
je
ja
add
mov
inc
cmc
sbb
cli
sbb
imul
or
xor
sbb
popf
sbb
inc
xchg
out
test
ja
cmpsb
outsb
adc
movsl
inc
insb
mov
and
ss
fmulp
add
adc
push
outsl
fstps
jmp
mov
sarb
push
sub
outsb
mov
cli
push
cmpsb
fwait
jno
aam
push
mov
out
lret
xor
bswap
loope
push
fisubs
int
add
cmc
fdivrp
push
notl
and
das
xchg
xor
mov
aas
jecxz
add
je
mov
cmp
jp
xor
aam
cmp
mov
ss
fisubs
push
add
xchg
test
sub
pop
lret
adc
or
mov
dec
scas
dec
cmp
imul
xor
bound
pushl
or
and
push
cld
fiadds
rcll
cmpsl
and
lcall
mov
das
jmp
int
clc
ret
sub
out
js
data16
sbb
dec
mov
mov
push
dec
inc
arpl
cmpsb
out
pop
fdivrs
mov
sbb
push
cltd
adc
repz
inc
loope
inc
imul
cmp
gs
popl
push
mov
int3
rorl
pop
sti
add
jbe
int3
insl
mov
lds
mov
xchg
cli
adc
hlt
call
sarb
insb
xor
mov
inc
adc
stos
push
sbb
xor
stos
cmp
jne
outsb
sbb
test
pop
into
lcall
pop
inc
into
cwtl
rorb
cmp
jg
shr
and
imul
jecxz
out
jbe
sub
adcl
mov
pop
adc
pop
je
std
cwtl
fdivs
jp
fiadds
inc
push
jb
sub
loope
jae
mov
je
icebp
fs
aad
fsubl
dec
sub
xor
push
or
mov
bound
fmull
sub
sbb
int3
out
fisubrs
bound
xchg
pop
and
mov
push
cwtl
push
push
test
push
lea
lock
subl
pop
dec
scas
and
jnp
add
lods
mov
iretw
ja
lret
jae
lcall
in
sbb
and
lcall
xor
add
pop
clc
push
adc
in
inc
and
lods
push
push
ja
adc
inc
das
into
xor
push
mov
fcmovu
mov
loop
jl
or
dec
icebp
or
lock
es
jl
inc
repz
int3
filds
and
mov
dec
push
jns
pusha
adc
or
xor
lock
cmp
mov
push
inc
int3
lahf
push
insb
mov
lahf
loopne
and
lcall
inc
call
daa
sub
dec
push
lcall
push
insb
xchg
sbbl
pop
and
adcl
mov
sbb
xorl
addl
icebp
push
ss
mov
fs
jle
fwait
add
rorb
jge
jne
outsb
dec
jae
cmpb
popl
push
inc
test
imul
lds
push
je
cmpsb
or
insl
mov
mov
unpcklps
dec
hlt
push
in
ss
jmp
ds
add
mov
mov
mov
lds
mov
cwtl
pusha
inc
in
test
mov
add
stc
lock
xchg
stc
xor
cld
pop
sbb
lds
movsl
iret
xor
pop
fidivrs
pop
pop
mov
leave
sub
sub
insb
fdivrl
cs
or
aad
jl
sub
mov
xchg
xor
repz
bound
fisubs
out
pusha
loope
add
cmp
hlt
mov
pop
incb
test
sbb
mov
subl
lea
stos
xor
push
repz
in
jge
xchg
cltd
pop
cmpsl
cmp
std
fucomip
adc
es
imulb
pop
sub
push
push
add
mov
popf
adc
rcl
out
mov
inc
iret
inc
les
inc
addb
mov
jnp
inc
mov
andl
scas
mull
adc
xchg
pop
insb
or
add
std
jb
rorb
cs
stos
int3
popa
es
mov
cmp
stos
nop
mov
cmp
or
mov
nop
mov
sti
xchg
leave
push
pop
lock
cmpsl
pop
jge
mov
sub
stc
cmp
dec
or
test
faddl
sub
mov
jl
add
jnp
rol
shlb
std
rorl
jns
fnstenv
mov
movsb
cmpsl
dec
push
adc
push
insl
and
dec
imul
lods
push
adcl
pop
add
sub
outsl
leave
test
jle
xchg
scas
xlat
ret
xor
pop
repz
sbb
ds
pushl
and
mov
ret
and
aas
mull
push
or
jns
inc
bnd
pusha
dec
push
ljmp
pop
inc
or
mov
icebp
icebp
insl
sbb
shll
aaa
idivl
add
sbb
mov
scas
fists
push
in
sbb
pop
mov
bound
xchg
push
fldt
and
sub
dec
loope
es
sarl
fstpl
push
push
pop
jecxz
aas
push
and
add
insl
mov
add
adc
imul
inc
ljmp
xlat
dec
test
mov
cmp
mov
rorb
and
dec
push
cmpl
xlat
push
and
mov
adc
insl
int3
cli
jl
negb
idivb
dec
mov
xchg
and
js
sbb
push
xor
adc
in
in
sbb
das
aad
xchg
imul
popl
into
nop
cmp
jne
ret
mov
jmp
mov
jp
pusha
lcall
dec
sarb
sahf
aaa
daa
xor
inc
ljmp
push
shl
in
jp
inc
loope
scas
lods
and
xchg
dec
shrl
sub
pop
aam
fmulp
push
rclb
push
cld
adc
repnz
jle
mov
adc
push
repnz
xlat
icebp
sbb
pop
cmc
pop
xor
in
ss
xor
pop
mov
in
adc
push
adc
lahf
imul
pop
aad
int
std
je
pop
or
mov
jns
mov
add
ss
movsb
roll
cmp
test
mov
fmuls
shl
sub
adc
sub
outsl
idivb
dec
dec
repnz
sub
push
insb
hlt
roll
orl
mov
xchg
sub
sub
push
andb
insl
mov
cld
pop
fst
or
add
and
aad
fisubs
push
cltd
rorb
int3
or
xor
cmpl
imull
daa
lahf
fldcw
mov
flds
jns
mov
pop
in
push
pop
call
call
sub
dec
mov
into
cmpsb
lret
sub
aad
dec
sbb
dec
jle
cmp
dec
and
in
mov
adc
imul
adc
jg
dec
aas
scas
jg
std
fwait
and
pop
ret
aam
data16
jo
mov
mov
add
shl
add
adc
dec
inc
sub
outsl
or
test
nop
inc
and
out
mov
or
je
xchg
dec
test
sahf
sbb
lret
and
xchg
loopne
or
scas
cld
imul
cmp
scas
bound
and
test
adc
mov
jmp
push
mov
sub
or
les
dec
inc
data16
lret
and
push
insl
xchg
lahf
iret
sbb
xchg
lds
dec
xchg
jmp
jge
imulb
aad
outsl
jle
jae
call
rcrb
xchg
nop
jb
xchg
add
cs
push
adc
adc
movsb
mov
popa
mov
or
mov
push
mov
xor
lods
jnp
xlat
popa
inc
cmp
mov
icebp
sub
mov
jmp
jo
pop
in
pop
mov
movsb
mov
fsubl
fisubs
add
stos
in
fistl
fcomps
dec
rol
adcb
fwait
xchg
arpl
jbe,pt
pop
jb
push
shl
xchg
push
outsb
das
in
push
es
xchg
stc
fsin
sub
test
shlb
negl
ds
jle
ds
imul
mov
push
jl
test
mov
dec
pop
mov
lock
cmp
xchg
add
adc
test
cmpsb
jl
jg
mov
nop
cmp
mov
pop
lock
out
inc
or
push
and
nop
mov
xor
add
xlat
xor
jmp
cmp
sbbl
cmp
sbb
xorb
aas
and
test
sbb
add
adc
sbb
sbb
nop
imul
orb
les
movsb
cmc
testl
mov
adc
sbb
sti
loop
into
push
xchg
or
adcl
jge
in
in
xchg
mov
lahf
cwtl
mov
test
mov
in
dec
andl
sub
mov
jo
xchg
lret
mov
xchg
add
jmp
stc
push
leave
adc
pop
cli
leave
xor
jge
aas
fsubl
sub
cmpsl
dec
cli
cmpsl
out
add
leave
cmpsl
add
mov
shll
ss
xor
imul
aas
les
mov
sub
nop
jg,pn
pop
mov
add
test
push
lahf
push
jle
inc
test
jg
cmp
ret
pop
cmpsl
jl
out
fisubrs
mov
xchg
iret
je
or
sysexit
add
jb
movsb
and
jno
cmp
mov
shrb
loopne
add
jle
mov
mov
inc
jo
xchg
jecxz
xor
cld
daa
repnz
pop
bound
pop
lcall
cld
push
jne
cmp
inc
lret
mov
jmp
add
xor
loop
adc
sub
cmpsl
adc
adc
sbb
rol
lods
stc
sub
cld
inc
mov
cltd
cmpsl
sbb
cmc
dec
adc
cmp
ret
into
dec
and
orb
inc
jno
mov
jae
pop
imul
or
or
fbstp
mov
or
sub
aam
clc
mov
push
pop
ss
lret
sub
dec
pop
lret
jmp
and
lahf
mov
test
lods
xchg
pop
data16
push
aaa
add
mov
aaa
test
inc
jo
icebp
gs
bound
or
lock
lret
ret
add
adc
xchg
add
push
stos
xchg
pop
mov
mov
xchg
ret
add
sbb
and
or
sbb
sbb
ret
adc
aad
stos
lds
jp
lret
add
movsb
mov
dec
cmp
ss
mov
sahf
sub
testb
lret
jb
pusha
push
cli
cmp
pushf
add
dec
push
mov
test
adc
jbe
stos
xchg
add
and
cmpsl
arpl
inc
jecxz
cmp
lret
sbb
sub
xor
adc
test
mov
mov
lods
stos
imul
dec
jl
dec
andb
jno
xor
cwtl
xorb
pop
push
hlt
mov
out
sarl
aam
rcrl
and
add
mov
addb
movsl
jne
pop
mov
iret
dec
lahf
sti
dec
xor
inc
mov
xchg
mov
enter
mov
xacquire
mov
frstor
inc
jbe
mov
mov
daa
in
decb
pop
push
mov
nop
test
xor
frstpm(287
jecxz
outsl
inc
inc
int
nop
imul
push
mov
xchg
pop
inc
aam
movsb
pop
xor
dec
pop
jecxz
jp
out
int
adc
sub
jb
pop
cmp
out
popf
stos
xchg
lods
mov
and
out
mov
cmp
loop
or
xchg
xlat
sbb
xchg
and
outsl
loop
or
dec
xorb
stos
ljmp
repz
stos
shlb
ljmp
jecxz
les
test
xlat
rcll
jne
gs
add
loopne
inc
arpl
mov
nop
aad
add
scas
out
lret
int3
cs
hlt
aas
mov
or
popf
pop
popf
and
enter
sub
or
xchg
sub
inc
out
push
das
adc
js
mov
inc
enter
cmp
xor
pop
data16
add
xlat
ja
cmp
outsb
addb
push
fst
lahf
lea
dec
jo
pop
xchg
call
xchg
adc
enter
loopne
dec
imul
sahf
pop
dec
in
fmuls
jg
mov
push
xchg
test
sbb
push
clc
push
jmp
cld
mov
xor
sub
cmpsb
xchg
inc
je
push
cwtl
mov
mov
icebp
lock
sti
or
push
pop
cmp
fadd
addr16
mov
ds
pop
jmp
pop
daa
sbb
xor
icebp
icebp
dec
xchg
sbb
sbb
lahf
sub
lods
test
dec
aam
aaa
pop
ds
fnstcw
inc
int3
scas
test
inc
xor
ja
mov
fs
repnz
aaa
xchg
sbb
sbbl
popa
lea
lock
inc
jbe
repz
cmpsl
jnp
or
roll
jnp
sub
xor
xchg
idivl
sub
negb
aad
clc
mov
cmp
ret
out
dec
cmpl
jg
add
bound
loop
addr16
mov
filds
pop
sbb
jge
cmp
mov
test
mov
or
repz
in
dec
sub
imul
rorl
clc
sbb
inc
std
sub
popa
in
movl
jmp
arpl
repz
das
mov
sti
mov
cmp
push
xor
mov
and
data16
sub
imul
test
jl
inc
add
jbe
out
dec
add
mov
imul
fists
ret
ret
pop
mov
loop
arpl
mov
imul
cmpsl
inc
in
mov
loope
adc
sub
leave
jg
insb
andl
incl
xchg
incl
lock
imul
sbb
rcl
aad
push
and
sub
jbe
mov
xchg
rcr
jmp
or
enter
sub
xchg
push
sbb
nop
mov
dec
jle
pop
push
movsb
outsl
pop
pop
lret
dec
popf
push
in
add
movsb
out
test
jne
lock
add
sub
adc
add
arpl
ljmp
pop
movsb
xchg
enter
mov
movsl
rolb
jl
lret
imul
das
scas
rclb
cmpb
int
adc
pop
cmp
shlb
adc
dec
inc
inc
hlt
xor
mov
es
fdivrs
loopne
sbb
sbb
sbb
fs
aad
mov
dec
cmp
into
imul
cmc
fsubrs
inc
sub
imul
mulb
stos
add
aam
dec
cltd
in
aam
hlt
popa
pop
or
or
es
sub
xor
xlat
je
push
jo
push
vmovdqu
add
pushf
cmc
out
pop
mov
xchg
sub
aam
dec
pop
rorl
cmp
ficomps
movsb
repz
push
push
and
addr16
jle
test
cmp
add
iret
add
xlat
test
test
dec
cwtl
and
sub
in
jnp
out
cmc
sbb
push
loope
lock
rorb
or
xchg
inc
dec
dec
outsb
cmp
xchg
fidivl
sub
jmp
movzwl
cmp
mov
fsubs
pop
push
imul
xchg
dec
sub
xchg
mov
lret
xchg
in
leave
jae
dec
dec
js
sti
fstpt
mov
cltd
stc
stc
xor
in
int
inc
pop
sbb
and
xorl
jg
shufps
pop
pushl
scas
enter
test
movsb
mov
adc
idiv
add
aas
cli
jle
imul
fidivl
mov
and
fsub
push
jae
jo
fcomi
push
sbb
or
sarl
add
orl
or
sbb
int
lcall
call
rol
loope
cltd
lds
inc
imul
push
mov
dec
test
ljmp
repnz
lods
xchg
add
test
sbb
fcomps
test
mov
addr16
lret
mulb
cmp
popa
lods
mov
lret
jae
lds
mov
pop
sub
sub
add
cmp
push
and
jnp
jae
lock
mov
push
pop
loop
xor
lods
aam
xchg
cmpsl
fwait
test
mov
sub
decb
jb
cld
xor
fiadds
push
push
call
jp
mov
mov
xchg
pop
out
movsb
cld
or
xor
les
sbb
add
inc
cwtl
sub
inc
cmpsb
sahf
or
fadds
mov
adc
cli
jbe
repz
pop
xchg
addr16
cmp
scas
xchg
push
xor
test
scas
mov
cltd
lods
aam
cmpsl
out
adcl
leave
push
lret
jge
das
gs
insl
in
dec
aam
push
sub
adc
jno
xchg
mov
jl
ret
cmc
ss
movsl
lahf
mov
pop
cmc
mov
pusha
enter
outsb
mov
fbld
mov
push
aam
push
outsl
cmc
mov
je
sub
ljmp
pop
pop
inc
lea
rorb
sub
in
mov
sub
loope
rclb
push
nop
mov
jnp
pop
pop
jne
icebp
test
addr16
mov
pop
adc
push
fidivl
cmp
lcall
jge
out
jbe
pop
push
jmp
cmp
shlb
mov
fbstp
lret
jbe
push
repnz
aam
iret
mov
or
push
mov
cld
cmp
fimull
add
dec
loopne
popf
cmpb
popf
push
mov
mov
cwtl
mov
xor
jo
push
xchg
fwait
mov
dec
pop
adc
sbb
lea
repnz
shll
adc
mov
out
popf
es
push
test
aam
inc
loopne
jmp
xor
push
mov
xchg
mov
int3
xchg
jmp
push
push
cli
dec
pop
rcrl
bound
cmp
sbb
inc
adc
cmp
dec
ss
stc
and
int
xchg
inc
ret
out
popa
cmpsb
sub
push
jne
pop
lahf
or
les
push
adc
add
divl
iret
mov
cmp
add
sbb
jo
mov
inc
es
dec
cwtl
cmp
sbb
sarl
xlat
or
adc
mov
decb
add
in
mov
jp
xor
daa
jge
cwtl
addr16
jle
jg
sbb
inc
mov
lret
mov
sbb
mov
inc
and
shlb
jle
jb
pop
and
inc
inc
lahf
aas
mov
and
lods
stos
mov
pop
shrl
jns
icebp
out
mov
pop
adc
aas
outsb
mov
adc
mov
ret
adc
lcall
faddl
popf
cmpsl
mov
stc
pop
mov
repz
pushf
cmc
push
lcall
and
lcall
push
std
jne
sti
xchg
pusha
inc
adc
xchg
imul
sahf
dec
xor
and
sbb
cmp
mov
cmp
cmp
scas
mov
adc
in
nop
xor
xlat
cmpb
pop
dec
shrl
jecxz
jae
mov
and
out
mov
xchg
mov
add
int3
jecxz
sub
jne
cmp
dec
dec
mov
push
pop
or
sbb
popf
insb
int3
fs
insb
sahf
addr16
or
lods
icebp
addr16
mov
and
mov
popf
mov
or
out
lcall
out
sbb
fs
in
and
adc
imul
pop
inc
push
sub
dec
xlat
std
dec
inc
xchg
xchg
mov
inc
dec
roll
jge
mov
adc
cmp
mov
add
sar
lret
inc
mov
sub
outsb
push
pop
xchg
sbb
jne
inc
dec
mov
cltd
sar
ljmp
mov
jp
mov
mov
add
push
test
or
cmc
xor
sarb
push
xchg
lea
pop
scas
mov
stos
jge
jecxz
cli
and
xchg
insl
sti
mov
out
test
xchg
pusha
aad
loop
stc
faddp
gs
xchg
insb
adc
add
out
rcr
test
push
adc
dec
jno
sub
repnz
xchg
dec
roll
test
out
lds
das
xor
daa
hlt
mov
xor
push
cmpb
mov
imulb
mov
stos
and
movq
sub
xor
mov
mov
cli
inc
mov
fs
lahf
push
sbb
sbb
pop
icebp
cmp
repnz
sahf
jecxz
push
jle
dec
cmp
add
fdivr
cmc
or
mov
jmp
or
popa
test
inc
std
or
sbb
jno
sub
ja
push
lcall
sub
movl
aas
mov
insb
ret
out
in
inc
jno
pop
je
cmp
pop
cltd
jmp
scas
dec
push
imul
jo
stos
or
lret
sub
inc
mov
jge
jge
int3
sub
shll
or
dec
xlat
jle
aad
loop
test
inc
mov
xor
addr16
testl
mov
pop
inc
mov
aaa
mov
pop
cld
sub
cmc
add
mov
ds
xchg
ret
mov
daa
xor
sar
loopne
dec
push
insl
pop
out
mov
test
aam
xchg
lret
test
mov
std
aas
or
jae
clc
mov
inc
pop
lret
add
lcall
add
pop
lods
ljmp
insl
cwtl
loop
out
sbb
mov
cmp
dec
inc
insb
divb
lock
aaa
mov
push
dec
sahf
jl
ljmp
stos
xchg
dec
sbb
movsb
outsb
pop
adc
and
dec
pop
mov
and
fisubrs
rolb
in
out
icebp
adc
popf
subl
xor
or
xor
outsb
dec
leave
testl
cmp
sbb
pushf
icebp
sbb
sti
cltd
push
sbb
xor
and
mov
xchg
inc
jp
js
pusha
pushf
or
filds
or
iret
cld
mov
imul
jl
ret
mov
stc
cwtl
imul
test
mov
fisubrl
pop
cmpsl
in
cltd
inc
xor
push
sub
cli
dec
out
jne
ret
mov
mov
pop
stos
pop
int3
testb
or
rclb
test
xchg
sub
push
xlat
mul
iret
mov
cltd
repnz
vsubps
into
fsubs
fiaddl
xchg
sbb
ret
sub
rorl
lret
sarb
and
rolb
addr16
add
and
push
lods
sbb
ret
or
dec
stos
out
and
test
cli
pushw
mov
xchg
add
sbb
inc
mov
jo
cmpsb
cmp
jge
dec
outsl
imul
jbe
lret
push
sbb
or
jge
enter
loope
stos
inc
jbe
mov
aam
fnstenv
repnz
loopne
popa
insl
cvtps2pi
cmpsb
dec
fadds
aaa
pop
sbb
jecxz
mov
xchg
rolb
hlt
pop
push
wrmsr
imul
mov
por
test
fimuls
cwtl
lods
pusha
inc
mov
inc
dec
sbb
jbe
mov
jecxz
adc
inc
mov
and
mov
lods
sbb
push
addl
out
jo
aad
inc
inc
mov
loop
sub
mov
lods
pop
inc
pop
inc
subb
imul
push
mov
dec
jmp
push
mov
dec
add
int3
lahf
shrb
mov
and
iret
jbe
mov
sarl
push
add
add
sub
or
xor
xchg
jg
subl
sbb
in
testb
pop
lods
test
jne
xor
aad
rcrb
jmp
adcl
jle
inc
and
push
test
js
mov
jb
xchg
fldenv
mov
cli
and
daa
dec
jb
andl
mov
mov
out
adc
mov
test
outsb
add
push
les
inc
xchg
std
sub
cmp
inc
cltd
and
popf
sbb
popa
clc
mov
pop
int3
dec
hlt
push
inc
sti
cli
fiaddl
sub
or
jecxz
sub
adc
pushf
pop
jno
or
pushf
imul
ja
xor
push
cmp
dec
push
jecxz
subl
pushf
xchg
inc
fisubs
imul
sbb
push
push
sarl
into
dec
pop
mov
inc
cmp
sbb
hlt
hlt
or
push
adcl
lcall
dec
aas
ja
mov
xchg
inc
inc
ret
scas
mov
stc
mov
sbb
das
pushf
sub
clc
mov
inc
scas
outsb
lods
stc
rcr
scas
shll
add
mov
in
movsb
cld
push
cmp
pop
je
repnz
sbb
es
mov
push
pop
stos
mov
jl
imul
fcomi
scas
test
adc
imull
fsubrl
sbb
into
and
adc
ret
mov
lret
mov
mov
add
cld
lock
mov
dec
andl
outsl
insl
add
push
test
mov
sbb
js
sbb
sub
xchg
or
dec
inc
pop
sub
in
and
pop
jle
stos
movsb
scas
cmpl
subl
fwait
call
insl
movups
mov
mov
lret
xchg
ret
test
dec
xchg
imul
pop
cltd
lcall
inc
mov
test
lods
and
push
iret
cmpsl
mov
loop
mov
out
syscall
ljmp
inc
sbb
or
mov
out
cmp
inc
dec
pop
mov
mov
inc
cmc
pop
cmc
pop
adc
imul
aam
inc
iret
out
insb
int3
mov
int3
mov
xchg
sbb
test
int
testb
jbe
or
shlb
hlt
repz
mov
cmc
xchg
fstpt
sti
pusha
call
in
test
fnstsw
movl
mov
xchg
add
sbb
mov
je
cmpsb
jle
cwtl
lret
xor
negb
add
jp
cltd
mov
es
les
nop
outsl
cmpsb
and
js
push
cmc
mov
adc
pop
sub
and
loope
subl
mov
notb
jp
ja
stos
push
adc
mov
mov
mov
pop
sbb
pop
and
jb
or
sub
imul
out
js
add
mov
shlb
add
cmp
fwait
sub
lsl
cmp
xor
dec
sbb
pop
mov
or
mov
mov
jne
fsubs
xor
cld
dec
nop
leave
inc
mov
cltd
jecxz
pop
neg
out
mov
or
lods
inc
ds
stc
popf
and
out
xchg
lds
jnp
in
popa
mov
push
jae
jecxz
jno
lock
or
mov
je
mov
add
neg
xchg
xchg
inc
int
pop
dec
jb
imull
in
xor
mov
sub
fistps
cmp
mov
insb
add
and
or
mulb
or
mov
aam
sbb
or
cs
leave
ret
aad
cmp
pop
inc
mov
jns
jae
stc
jmp
aam
jmp
pop
push
js
push
in
xor
into
cmp
mov
jo
sub
mov
sahf
fs
mov
cmp
jl
loop
idivb
orb
pop
push
xchg
push
inc
mov
jae
aas
ja
popa
xor
int3
maskmovq
idivl
into
repnz
mov
push
in
pop
sub
xor
push
and
push
mov
push
sbb
pop
lar
cmp
ljmp
fistpll
dec
jo
scas
outsl
mov
outsb
push
pop
sub
ja
xorps
cltd
cmpsb
fdivrl
push
push
xor
push
xor
iret
jns
repnz
pusha
imul
inc
push
mov
icebp
mov
mov
lret
push
jo
leave
orb
stos
push
lock
sub
bound
sub
aad
mov
fisttpl
cld
sbb
test
shll
int
in
cmp
adc
fildll
sbbl
stos
vcmpps
push
cwtl
out
sbb
fldcw
pop
cs
lds
and
dec
lods
push
gs
jmp
adc
clc
roll
add
cli
outsl
daa
inc
cmp
fldcw
mov
je,pn
mov
dec
insl
mov
mov
cmp
cmp
in
stos
mov
call
or
xor
lods
or
jp
das
sbb
inc
pop
mov
pushf
bound
xchg
test
xchg
jle
add
mov
sbb
lds
outsl
mov
test
inc
daa
add
fcomp
in
hlt
lret
out
push
mov
rcrl
cli
out
xor
shrl
mov
out
aam
mov
js
into
mov
mov
dec
or
pop
bound
inc
inc
cld
adc
test
sbb
and
or
jl
jp
scas
push
cmp
inc
xchg
imul
lds
je
flds
cmpsl
or
cmc
icebp
jb
xchg
cmp
mov
pop
dec
out
pop
scas
xchg
ss
mov
addr16
insl
pop
pop
adc
sub
xchg
ss
mov
mov
cltd
call
push
mov
inc
jle
pop
loope
pop
inc
std
int
mov
jbe
pop
adc
and
dec
and
push
cli
and
stos
push
cmp
mov
imul
mov
pop
xchg
or
sbb
xchg
sbb
push
push
xchg
popa
pop
inc
movsl
out
sar
rcrl
sub
adc
jns
ja
dec
xchg
insb
pop
ret
push
mov
imul
add
dec
cmc
xchg
lret
js
enter
mov
addb
add
xchg
cmp
jge
test
ljmp
push
jg
xchg
push
jns
push
or
mov
mov
push
cmp
outsl
add
rcrb
mov
jo
test
pusha
bound
jno
sbb
push
jbe
fwait
pop
pusha
add
xor
mov
iret
pop
jb
imul
daa
loop
pusha
and
mov
xlat
outsb
rcrb
add
out
jae
mov
gs
sbb
jb
inc
xor
sahf
push
jb
lods
mov
int
stc
push
mov
aad
test
imul
loope,pn
cltd
cs
and
test
mov
fcom
pop
mov
repz
mov
mov
rolb
leave
inc
mov
mov
leave
bound
mov
pop
inc
push
aas
mov
cmp
imul
pop
mov
sub
lea
imul
jmp
insl
pop
test
dec
mov
repz
adcl
in
mov
ret
xchg
sarl
in
xor
js
fwait
hlt
rorb
js
js
push
outsl
popf
sub
xchg
jno
jo
mov
add
mov
dec
pop
cltd
and
mov
jl
popf
stos
adc
js
or
jg
sarb
faddp
sub
icebp
or
jle
pop
lea
fwait
jecxz
push
das
in
addr16
push
leave
in
xor
andb
dec
out
adc
xchg
fwait
outsb
jo
push
pusha
iret
data16
mov
dec
movsl
jle
orb
pop
ret
js
pop
pop
lret
xor
lret
cli
ret
lods
mov
sbb
xchg
xorl
lds
mov
test
fsubr
dec
mov
jmp
cli
dec
sbb
mov
inc
dec
negb
lret
jnp
cmc
inc
push
jo
aaa
inc
shlb
fcompl
mov
mov
je
outsb
mov
pop
jle
pop
sahf
into
sub
fldl
fwait
lcall
xlat
mov
adc
scas
mov
jbe
inc
xchg
imul
dec
test
add
adc
jno
sbb
call
test
push
shlb
aam
mov
adc
cwtl
sub
jmp
xlat
sub
mov
pop
testb
dec
push
mov
sbb
cmp
mov
ret
sbb
mov
leave
cmpb
popf
loop
sbb
inc
push
shrb
lcall
sbb
movsl
ss
shlb
mov
pop
lds
loope
test
and
adc
inc
xchg
andb
and
cld
shlb
leave
push
daa
out
mov
xor
jl
arpl
or
lret
or
mov
xchg
stos
mov
push
pop
shrl
icebp
arpl
in
lret
xchg
rcrb
bound
orl
dec
imul
dec
mov
aam
add
rclb
ljmp
cmp
das
pop
imul
in
out
mov
lds
sub
push
push
sar
fidivrl
push
fdivs
aad
inc
ds
mov
aaa
push
scas
out
psrld
les
sar
in
jnp
je
push
pushf
mov
pushl
pop
into
inc
daa
stos
popl
mov
mov
xlat
jl
mov
out
out
add
xchg
pushf
je
mov
ret
insb
aad
popa
or
testl
sbb
lret
mov
xchg
lret
fiadds
std
push
ficomps
fdivr
dec
xchg
orb
xchg
daa
push
dec
cmp
add
movsb
jbe
mov
or
sbb
js
or
adc
loop
cmp
hlt
dec
sub
inc
pusha
and
jno
add
xor
out
sub
mov
inc
jp
or
adc
popf
push
add
lret
inc
sbb
arpl
scas
dec
ret
mov
pushf
cmp
push
push
and
cwtl
std
cli
sbb
inc
lods
repnz
sbb
cmpsl
jno
ret
push
cmp
adc
aas
loopne
in
lret
int3
aam
cmpsl
ds
lcall
outsb
push
iret
icebp
cs
sub
fisttps
pop
mov
add
cmp
pop
stos
mov
mov
mov
cli
imul
hlt
pushf
les
cmp
pop
enter
inc
mov
lea
testb
scas
loop
sbb
cmpsl
push
and
mov
dec
daa
ds
sti
and
stc
lods
js
test
adcl
hlt
data16
jg
ds
mov
sbb
rcl
mov
push
out
inc
push
div
add
mov
push
jl
cmpsb
scas
or
xchg
inc
aam
push
dec
pop
out
roll
out
and
es
and
sbb
in
into
pop
iret
out
out
daa
loop
add
ret
popf
pop
repnz
gs
shrl
cltd
mov
push
in
xor
sub
xor
sub
or
jo
dec
lods
cmp
add
add
out
xor
or
jb
nop
mov
and
mov
and
mov
scas
test
jp
sub
mov
loope
xchg
lcall
mov
rolb
std
test
or
ja
xchg
cwtl
push
xor
and
icebp
cmp
stos
daa
das
aad
pop
leave
or
sbb
adc
fnstsw
jl
pusha
cmc
mov
lea
sub
std
mov
pop
dec
mov
movsb
test
lret
pop
jp
mov
sub
pop
cs
pop
mov
xchg
jbe
sbb
popa
mov
inc
xor
fs
mov
sti
repnz
pop
push
shl
stos
in
pop
cmpsl
cmp
je
mov
mov
fbstp
mov
imull
dec
test
inc
ss
js
add
scas
lret
scas
outsb
mov
adc
movsl
std
xchg
in
adc
insb
rcrb
movsl
mov
xchg
xor
repz
in
bound
int3
aad
sub
filds
lods
jl
stos
mov
sbb
ret
iret
rolb
aad
xor
sar
repnz
or
imul
mov
jmp
fdivl
cs
jle
dec
rcr
into
ljmp
ja
fnstenv
sahf
sub
fistpl
addr16
data16
sub
fbstp
and
cmpxchg
and
lea
sbbb
and
imul
pop
lods
aad
jle
xorb
sarb
xchg
sti
andl
mov
iret
pop
xchg
add
push
mov
int3
xchg
add
repnz
out
jp
pop
in
mov
lret
xlat
mov
dec
fwait
dec
movsb
andb
out
inc
cmp
testl
js
push
outsl
adc
mov
xchg
outsb
adc
mov
pushf
lods
pusha
lods
xlat
stos
mov
cld
push
sahf
movsl
int3
mov
mov
es
iret
out
rcrb
and
ljmp
push
mov
xor
mov
dec
cld
pop
ljmp
pop
shlb
fwait
mov
jecxz
push
insb
cmp
mov
lret
pop
pusha
scas
fildl
out
test
push
inc
cmpsb
por
cmc
dec
pop
mov
ss
testl
fldt
xor
movsb
add
daa
les
sarl
xchg
push
fmul
cli
mov
and
xchg
xor
xor
mov
lcall
push
std
fsubs
push
mov
or
faddl
inc
dec
jno
fcomps
push
pop
scas
aas
push
jo
scas
sbb
add
bswap
inc
jno
pop
dec
pop
lret
or
clc
add
call
mov
jp
aam
sbb
jp
fstpl
mov
inc
aas
mov
xor
push
dec
jb
and
sub
repz
icebp
adc
fsubp
pusha
inc
ss
mov
fcomps
mov
push
outsb
jle
sbb
fdivrl
mov
addr16
pop
ficompl
add
sub
aad
insb
shl
sbbl
daa
pop
in
cli
mov
cmp
sti
lods
mov
ret
inc
cmpsb
in
out
xchg
cld
cmc
orl
and
push
push
mov
xchg
in
negb
adc
jmp
aam
or
add
push
cmp
xor
inc
add
fidivrl
stos
mov
clc
or
ds
sahf
inc
rol
inc
mov
outsl
pop
dec
rcrl
mov
dec
icebp
push
lahf
push
pop
jae
push
ret
mov
loop
cltd
cmp
std
out
mov
dec
xchg
sbb
andb
dec
clc
into
sti
sti
xchg
mov
and
xor
mov
xor
data16
cld
mov
mov
xlat
mov
or
dec
std
mov
leave
ljmp
xor
push
pop
push
adc
add
enter
mov
sub
scas
stos
aaa
sahf
mov
push
orl
imull
shrl
mov
jne
daa
push
xor
push
push
cmpsb
pop
sub
pop
mov
mov
inc
mov
popf
jg
jg
nop
sub
fstpl
mov
gs
fmuls
insb
punpckhbw
clc
mov
in
in
in
sbb
push
fdivrl
in
push
lods
into
mov
jno
sbb
pop
ret
fstpl
push
mov
xor
xchg
adc
xchg
mov
lret
xor
sub
xor
jmp
mov
into
or
lcall
or
ja
cmpsb
popf
or
xchg
inc
cmpl
inc
jne
sbb
adc
inc
jno
int3
jo
aas
pop
or
jge
sbb
dec
mov
test
in
push
push
sbb
lods
test
fwait
or
dec
iret
dec
inc
cmc
mov
xor
loopne
push
in
or
dec
sbb
dec
test
jmp
shrl
out
xchg
ds
pop
dec
dec
adc
imul
sbb
sub
inc
lds
inc
imul
leave
add
push
dec
add
push
nopl
add
dec
ret
rol
xor
cmp
popa
imul
icebp
jmp
pop
mov
push
and
add
mov
and
sbb
jl
js
inc
in
bound
lahf
repz
popf
push
or
lahf
adc
leave
pop
mov
cltd
mov
push
imul
mov
pushl
push
enter
adc
sbb
sub
cmp
push
xchg
stos
jae
and
loopne
inc
insb
cmp
loopne
mov
fnsave
inc
testb
ss
mov
mov
cwtl
fs
pop
mov
bound
xor
mulb
pop
xchg
mov
mov
adc
in
aas
or
xchg
adc
pushf
xchg
push
mov
mov
xchg
cmp
int3
push
adc
adc
or
nop
sub
xchg
adc
jg
imul
js
adc
push
jl
inc
jle
inc
data16
test
dec
cmp
ljmp
cmpsb
das
sbb
jb
xchg
push
mov
dec
mov
notl
test
movsl
push
cmc
mov
pusha
and
insb
aad
enter
add
iret
or
insb
mov
movsb
pop
and
call
xchg
lds
adc
imul
fdivrp
scas
repnz
adc
pop
pop
pop
sub
into
adc
inc
fstl
imul
jl
cmp
fwait
xchg
xchg
mov
int3
adc
mov
mov
or
popa
outsl
lds
pushf
cs
inc
cmp
cltd
dec
imul
leave
add
in
int3
and
movsl
aaa
sub
movsl
lret
sub
lret
int3
int3
js
sbb
push
in
adc
enter
pushf
xchg
cmp
ja
xchg
sbb
pop
shll
cmpsl
insl
imul
aas
fscale
movsl
mov
dec
enter
xor
fisubl
mov
xchg
or
jnp
lock
cltd
cmp
dec
mov
mov
inc
dec
mov
cmp
mov
imulb
add
adc
add
dec
js
repnz
mov
and
popa
in
sbb
push
sbb
imul
lcall
aaa
ret
xor
jle
call
icebp
and
stos
pop
sub
lds
fadds
push
loop
push
sub
js
xchg
ss
sbb
aad
imul
mov
sbb
sbb
cmp
jle
pop
and
int
mov
lahf
lcall
sbb
lods
sbb
int3
push
sub
dec
iret
push
cltd
outsl
adc
in
subb
cmc
xor
mov
and
subl
fwait
subl
fdivrp
xchg
and
filds
and
cmp
push
imul
arpl
ss
pop
daa
sub
imul
cmp
pop
mov
aad
cmp
test
push
or
int
or
fsincos
add
ss
rclb
hlt
test
xor
dec
jp
les
loopne
add
xchg
push
inc
mov
lret
push
in
sub
add
lahf
arpl
dec
jbe
sbbb
je
scas
sti
push
and
xchg
xor
or
pop
mov
mov
insb
mov
out
mov
cmp
push
mov
inc
or
sbb
push
jnp
fs
pop
mov
pop
gs
lea
sbb
dec
scas
dec
es
cmc
pop
xchg
imulb
dec
adc
stc
pop
and
jg
dec
loope
push
call
testb
jno
shlb
push
jp
loope
xor
mov
das
dec
mov
test
xchg
jmp
mov
lods
sub
cmp
xchg
out
inc
xor
add
movsb
cmp
inc
and
sub
adc
xor
int
xor
xlat
jmp
xchg
pop
jns
push
or
dec
adc
xchg
sbb
imul
pop
or
fmull
or
sbb
adc
cwtl
xchg
inc
cld
jmp
mov
dec
in
pop
cld
mov
inc
leave
xchg
jp
inc
mov
adc
es
sbb
mov
popa
ljmp
mov
insl
dec
push
gs
sbb
or
test
jns
fisubrl
mov
fcmovnb
jns
xorl
int3
inc
add
lret
fs
push
hlt
jb
sahf
stos
mov
inc
lret
inc
sub
mov
leave
pop
lret
dec
xorl
xchg
xchg
lret
daa
or
in
mov
out
cmc
stc
inc
js
les
flds
push
testb
lret
loopne
pop
jbe
loopne
or
sub
fdivrl
daa
clc
movsb
add
xchg
mov
xorl
xor
mov
movsb
inc
or
mov
and
jg
sub
mov
xor
sbb
fstps
outsb
add
pop
dec
cmp
inc
icebp
jae
lret
adc
xorb
push
pop
jl
and
adcl
pop
notb
push
or
sahf
insl
in
lds
sub
in
xor
prefetch
add
pusha
push
je
insb
int3
mov
js
cmpsl
mov
inc
mov
inc
push
or
sbb
int
pop
movl
mov
mov
stos
and
inc
mov
je
xchg
inc
sub
pushf
aad
sbb
lahf
iret
and
jg
cmp
adc
ds
jb
dec
mov
sarb
sbb
jmp
mov
test
aam
sbb
sub
iret
pop
xchg
mov
mov
mul
adc
lea
cli
out
aam
or
ds
int
adc
xchg
xchg
fsts
shrl
fmul
add
pop
cmc
xchg
test
pop
push
mov
cs
jb
dec
imul
sub
mov
fidivrl
les
sbb
sub
jo
inc
xchg
fsubl
cmpsl
jnp
add
mov
loop
mov
idivb
rcrb
add
xor
ja
call
inc
cmpsb
ljmp
stc
inc
popa
addr16
outsb
jg
mov
mov
imul
int
loopne
mov
dec
adc
leave
adc
int
pop
cmp
push
mov
cmpsb
push
sbb
adc
fstpl
push
out
jmp
andl
subb
test
jns
gs
mov
jo
dec
jno
sti
push
inc
idiv
jno
inc
inc
out
lahf
sub
jle
pushf
popf
scas
mov
add
jae
lahf
roll
mov
pop
lods
mov
scas
mov
mov
jecxz
dec
or
mov
ret
jne
inc
mov
mov
int3
and
cmc
movl
lcall
cmpsl
fsubs
bound
loope
and
fstl
add
xchg
xchg
xor
testb
push
lods
or
dec
stos
andb
mov
daa
pop
aas
mov
out
shlb
xchg
outsl
pop
mov
push
lahf
adc
push
repz
cmp
mov
jne
cmp
dec
or
pop
es
or
xchg
adc
mov
addb
xlat
cwtl
pop
test
push
int3
sub
lods
add
gs
mov
xchg
push
pop
daa
lea
ljmp
lahf
add
adc
jmp
push
sar
adc
test
setno
jle
in
imul
into
jo
int3
dec
insl
sub
in
into
inc
mov
sub
jne
push
ja
push
mov
mov
dec
cltd
outsl
cld
mov
aas
jb
std
scas
pop
mov
pop
dec
push
cmc
scas
jmp
inc
in
js
cmp
call
xor
cmpsl
jecxz
mov
xchg
sub
jns
sub
mov
out
xchg
hlt
imul
xchg
mov
popa
pop
test
sysenter
mov
sub
or
imul
jecxz
lret
icebp
repz
pop
pop
xchg
mov
pop
cmc
andl
mov
cmpsb
pop
out
adc
mov
je
push
inc
aam
dec
movsb
xchg
adc
pop
pop
push
pushf
adc
jbe
adc
sbb
pop
xor
push
mov
pop
mov
and
movsb
inc
rcl
imul
js
xchg
xorb
mov
add
push
fwait
cmp
aas
aas
jnp
xchg
aad
enter
dec
xorl
int3
mov
mov
shlb
adcb
test
mov
push
pop
push
or
xchg
cltd
cmp
push
out
jmp
mov
adc
jg
sbb
xor
sub
roll
mov
sub
xor
into
adc
xchg
jbe
adc
imul
add
mov
ret
cmp
jecxz
add
and
xchg
xchg
mov
loope
jle
push
xor
mov
jno
lods
dec
pop
inc
pop
cmp
mov
mov
out
push
stc
jnp
mov
stos
push
xchg
leave
movsl
fsubp
aaa
repz
jmp
pop
comiss
decl
out
and
cmp
sub
push
pop
xchg
imul
cmp
mov
int
orb
addb
xchg
pop
cmpsl
pop
xchg
sahf
mov
data16
nop
jae
jg
adc
sti
adcl
sbb
and
test
rcrl
cmp
lret
test
mov
popa
push
cld
outsb
inc
pop
pop
lret
daa
xor
or
call
mov
pop
push
sub
sbb
ret
ss
xorb
fcoms
imul
jno
test
int3
mov
xchg
push
lcall
loopne
pushf
pop
incl
jge
sub
std
btr
mov
in
rclb
xchg
fimull
icebp
andl
nop
cmpsl
mov
shlb
scas
mov
lods
out
push
pop
clc
ret
add
mov
movsb
xchg
cmpsl
mov
xor
mov
xor
call
jmp
push
movsb
or
jo
inc
in
push
mov
pop
out
pop
jns
mov
aad
adc
pop
dec
ret
subb
xor
stc
cli
xor
aad
dec
outsb
cmp
das
rorl
cmp
sbbl
scas
pop
or
pop
mov
jmp
clc
xor
and
sbb
pop
sahf
bound
in
push
shlb
mov
xchg
jno
fidivrs
aad
sbb
jecxz
sahf
xchg
scas
loop
sub
std
and
inc
jae
mov
jne
pushf
mov
cwtl
inc
outsb
or
dec
dec
pop
lahf
sbb
sbb
lret
adc
std
add
out
into
push
fsubrs
rcrl
cmp
xchg
mov
loop
inc
xor
jo
push
ret
dec
out
repnz
icebp
scas
dec
into
inc
daa
adc
push
in
or
fmull
outsb
out
and
fdivrs
fimuls
push
jne
pop
pushl
dec
pop
lret
jmp
das
sbb
adc
shrl
xor
jns
sti
jecxz
dec
mov
es
and
inc
lret
arpl
mov
sbb
xchg
std
outsb
std
cmp
jns
mov
fisubrl
les
aas
imul
cld
movsb
or
jnp
mov
sbb
dec
outsb
clc
push
sahf
jmp
decb
fstl
mov
call
mov
mov
jae
lcall
pop
out
or
ss
in
xchg
test
repz
and
mov
add
xor
lock
jmp
aas
pop
adc
push
mov
jge
jge
push
outsb
cmp
rcrb
add
pop
sbbl
adc
adc
xor
rcr
pop
add
or
or
or
push
clc
xchg
sbb
call
lret
xchg
shl
insl
sarl
aaa
cmp
cmpsl
ret
sbb
addr16
xor
xchg
add
lret
out
adc
sub
sbb
jno
lret
fmuls
dec
xchg
sahf
jle
in
mov
xor
pop
repz
jle
fiadds
jmp
mov
push
aad
out
inc
outsb
mov
xchg
cld
cmp
mov
sahf
outsl
mov
shl
and
dec
adc
je
push
jg
hlt
insl
jb
push
bound
cmpsb
mov
arpl
cmp
outsl
inc
js
lret
int3
stos
cs
js
or
sbbl
repz
mov
fdivs
lcall
and
std
push
sub
iret
jg
into
xchg
dec
lods
lds
std
test
adc
or
inc
xchg
jecxz
xchg
jle
mov
fnstcw
xor
fsubp
inc
jno
ds
pop
aam
aad
jo
dec
dec
mov
pop
lods
ret
fs
pop
inc
or
popf
pop
mov
les
fcomi
mov
fdivr
les
jae
insl
cltd
sub
and
dec
cwtl
mov
sub
inc
adc
pusha
xor
jle
lock
push
lahf
inc
add
test
shll
xchg
mov
xchg
nop
xchg
add
cmp
jnp
jmp
push
xchg
pop
xchg
in
add
add
cmpsb
das
adc
rcrb
xchg
mov
addr16
les
sub
lock
push
mov
stos
jae
sbb
pop
xchg
or
or
jecxz
enter
sbb
iret
pop
xchg
fnstsw
pop
je
out
fsubrp
iret
pop
xlat
and
notb
fs
adc
pop
cmp
in
pop
xchg
movsl
pop
nop
push
repz
add
aas
jge
pop
andb
imul
icebp
pushf
xchg
movsb
push
inc
pop
call
cmp
loopne
and
or
add
fmull
mov
and
lea
aad
or
icebp
mov
mov
sti
pop
cmp
cmc
xchg
inc
xchg
add
inc
scas
cwtl
ja
fwait
xor
in
push
xor
push
mov
mov
cmp
pop
xlat
inc
gs
jge
das
mov
repnz
add
xchg
inc
cld
push
adc
fcmove
dec
mov
jae,pn
dec
lret
mov
dec
in
mov
jo
pop
add
cmp
xchg
adc
push
out
into
or
pop
inc
jp
rcrb
lahf
cmpsb
test
mov
jecxz
and
in
clc
sbb
fildl
sub
jle
lods
add
mov
push
push
adc
jae
cmpsb
lock
adc
add
lods
push
out
inc
xor
xchg
lods
sub
jmp
adc
iret
adc
mov
shl
test
imulb
push
sbb
hlt
pop
repz
push
xchg
dec
xchg
mov
inc
fisubrl
xchg
popf
mov
adc
mov
inc
subl
sti
test
in
imul
mov
mov
jb
push
push
lods
push
sub
js
sub
push
popf
mov
rorl
es
push
in
inc
cmp
push
push
jns
cld
cld
xorb
out
leave
movsl
jp
stos
pop
add
adc
icebp
daa
cmp
jo
fidivs
mov
inc
xor
dec
imul
out
push
fs
into
mov
rcll
mov
in
idivb
pusha
arpl
cmpsb
dec
sahf
cmpsb
and
jle
cmp
add
scas
pop
fldcw
mov
xchg
cld
pop
hlt
and
in
jo
nop
loop
decl
push
mov
adc
ret
cs
int
push
pop
jae
dec
xchg
inc
repz
jle
pop
cld
sti
je
adc
les
jne
sti
adcl
orl
nop
mov
call
call
fcompl
loope
mov
mov
popf
js
jno
stos
and
test
xchg
cld
xchg
loope
fs
and
insb
mov
shrb
inc
imul
mov
mov
xor
push
js
pop
and
pop
xor
mov
lcall
or
divl
pop
movsb
cmp
fwait
jp
cmpsl
fdiv
lock
xchg
cmovb
movsl
xlat
pop
sub
sbb
repz
icebp
pushf
fucomi
jns
imul
dec
pop
mov
outsb
or
repz
mov
xor
stos
mov
adc
and
repnz
in
int
icebp
push
push
fidivs
xor
fstpt
push
xorb
mov
mov
xchg
push
xchg
ja
dec
pop
data16
pop
lds
pop
sub
outsl
cmp
lods
jae
nop
mov
test
pop
fistps
lea
push
in
push
repz
mov
add
data16
imul
xchg
mov
addr16
addl
xchg
pop
xchg
xor
sbb
mov
xor
dec
cli
call
pop
adc
mov
cmpsb
cli
repz
lea
rcrb
sti
dec
sbb
js
or
fnsave
and
stc
lret
shll
push
mov
outsl
add
out
pop
or
lods
shrb
mov
mov
add
sbb
sub
lret
xchg
stc
push
sub
add
out
mov
xor
mov
jle
mov
pop
mov
sbb
pop
mov
and
and
cmp
pop
push
sahf
xchg
sub
mov
mov
adc
fucomip
pop
mov
sbb
dec
add
or
sbb
sub
sbb
push
or
aam
psrlq
ss
inc
jbe
ds
dec
cli
movsl
add
shll
insb
add
push
imul
cmp
lods
and
mov
xor
mov
das
lods
add
jge
dec
cmp
jne
jmp
in
dec
jae
add
mov
test
adc
dec
fdivrl
nop
mov
out
cwtl
mov
push
dec
test
adc
roll
mov
cli
mov
ss
pop
ret
push
ret
xorb
imul
loop
int
mov
outsb
mov
mov
xor
or
xchg
test
xchg
xor
xchg
pop
mov
add
decl
ljmp
in
adc
fimuls
js
lcall
int
scas
sub
dec
cmpsl
lret
cmpsl
or
lcall
dec
mov
lcall
rolb
out
dec
push
mov
xchg
cmp
cmp
rorl
loopne
xchg
imul
mov
adc
sti
xlat
mov
inc
add
pop
nop
cld
cmpsb
jae
pop
in
xchg
jo
push
std
insl
xchg
movsl
lcall
in
add
mov
or
add
repnz
clc
imul
inc
pop
icebp
mov
pusha
shlb
push
rorb
xchg
in
sti
fld
mov
pusha
lcall
js
dec
iret
or
arpl
loope
pop
and
pushf
lock
out
inc
loopne
add
mov
orb
loopne
psubsb
les
sub
sbb
or
bound
sub
dec
or
pop
and
lods
or
adc
sub
xchg
sub
xlat
cltd
mov
subb
or
push
scas
xchg
mov
pop
test
xor
xchg
mov
testb
push
cli
ret
pop
bound
cmp
mov
mov
ffreep
ljmp
or
xchg
or
xchg
or
adc
cmpsl
into
sub
mov
xlat
das
xlat
test
leave
sub
incl
mov
int
dec
push
ret
ficomps
xchg
mov
pop
repz
cmp
mov
mov
push
push
outsb
fisubs
int3
xchg
lds
adc
adc
mov
cmc
clc
out
stc
out
cmp
push
jp
mov
js
cli
in
mov
std
cmpsl
js
das
cmp
rcrb
inc
out
mov
dec
test
dec
clc
inc
inc
or
pop
lret
xchg
sti
inc
pop
xchg
jb
xchg
add
cmpsb
clc
push
clc
ljmp
dec
aam
dec
mov
fnclex
jne
dec
pop
hlt
jns
push
aas
ret
cld
frstor
xchg
push
or
add
nop
dec
sub
js
sub
cli
xchg
test
jl
lret
or
mov
and
xchg
mov
pop
xchg
and
popf
aam
push
dec
dec
jne
mov
lock
sub
or
mov
movsb
adc
adc
movsl
inc
jno
std
jp
sbb
sub
fsubl
mull
stc
jb
mov
cmp
jmp
sbb
fbld
out
cmp
clc
and
dec
and
xor
es
jl
enter
mov
lods
xchg
lcall
repnz
mov
xchg
test
cmc
bound
sar
sbb
mov
test
xchg
jb
sbb
jo
add
loop
push
sahf
sbb
add
sbb
mov
jnp
dec
imul
sub
mov
mov
dec
aaa
cmp
pop
idivb
sub
insb
mov
cmpl
jecxz
std
imul
sbb
test
aam
cld
lret
stos
jne
add
jmp
ret
int3
push
push
xchg
push
xchg
jb
mov
mov
and
xlat
roll
push
cmp
jmp
shlb
movsb
cmpsl
test
or
lds
mov
ret
push
xchg
scas
mov
hlt
mov
mov
inc
fimull
icebp
dec
daa
mov
popf
mov
push
xchg
fnstenv
popa
xlat
jl
fwait
push
popf
icebp
xor
xchg
xor
push
in
mov
into
in
adc
repz
fisttps
jo
cmpb
aad
jns
icebp
mov
test
or
cs
mov
out
repz
or
pop
cli
test
xor
jg
push
gs
add
sbb
mov
sahf
pop
jbe
aad
bound
je
mov
imul
sbb
aam
fstpl
roll
aaa
xchg
dec
out
fmul
fwait
imul
push
test
iret
xor
pushf
test
sub
fsubrs
popf
aas
daa
shl
add
scas
push
xchg
mov
jae
enter
fisttps
dec
dec
add
int3
mov
mov
mov
sahf
addb
mov
iret
pop
lock
cwtl
lret
fs
movsb
fxch
mov
add
push
jmp
enter
iret
inc
bound
stos
sub
pop
aas
into
popf
lahf
xchg
pop
cmc
inc
or
ret
std
dec
repnz
push
arpl
push
dec
xor
xor
xor
movsl
outsb
test
fwait
sarl
sub
xchg
iret
setle
outsb
sbb
and
jo
clc
xor
decl
inc
rorl
and
jge
xchg
mov
ljmp
fiaddl
insb
push
dec
data16
add
imul
test
dec
xchg
shrl
ror
push
lcall
addb
sub
enter
jne
mov
test
add
hlt
leave
outsb
movb
and
pop
stc
popa
sbb
addps
mov
cmpsl
icebp
push
mov
mov
fistpll
je
pusha
add
adc
leave
and
fsub
movaps
sbb
and
cmp
loope
sbb
pushf
fnstcw
imul
enter
mov
enter
xchg
cli
xor
inc
arpl
sbb
test
sub
sub
paddsw
jp
test
mov
subb
sbbl
xor
lock
push
add
js
jno
dec
in
icebp
and
and
xor
mov
mov
ficomps
aam
loopnew
incl
dec
adc
sub
adc
push
mov
and
imul
jno
popa
fidivrl
mov
dec
and
or
cmc
inc
mov
mov
pushf
mov
inc
inc
rorb
rcll
dec
data16
mov
jae
mov
cli
int3
pop
lods
clc
push
cmp
in
inc
or
pop
lods
jnp
outsl
or
das
stos
cltd
xchg
inc
xchg
int
mov
dec
repz
rolb
int3
sbb
inc
stos
mov
sub
push
rolb
push
xlat
add
imul
lock
sahf
mov
sub
add
inc
adc
jns
sti
push
push
test
jmp
fs
xlat
dec
testb
cmp
outsl
cmc
adc
mov
pop
add
push
fidivrs
sbb
mov
xlat
jle
jmp
sahf
dec
push
aam
mov
repz
jno
push
push
call
add
dec
inc
push
xchg
dec
xor
gs
dec
jno
mov
dec
out
push
pop
jl
mov
jle
and
push
stc
mov
or
xchg
push
insl
dec
fbstp
imul
dec
pop
mov
push
enter
orb
popl
clc
adcb
mov
pusha
out
mov
jecxz
mov
pop
push
dec
mov
out
iret
xlat
std
xchg
lret
pop
hlt
mov
and
jb
ret
stos
in
mov
cmpsb
or
push
mov
in
je
lods
fs
dec
dec
mov
xchg
call
call
sbb
cmpsl
jg
je
sub
or
dec
mov
or
push
lods
pop
fadds
fdivrs
jo
stc
mov
cmp
lds
mov
icebp
stc
stc
test
inc
jns
mov
pop
mov
inc
dec
in
ret
fwait
push
push
adc
or
jge
mov
gs
popf
in
mov
adc
les
lahf
dec
enter
lret
xchg
test
test
cmp
in
add
and
repnz
out
jecxz
ret
cwtl
fs
sub
mov
cmp
pop
lret
add
lock
push
sbb
ja
int3
inc
jnp
mov
movsl
scas
in
std
dec
pop
mov
clc
xlat
rcrl
scas
xchg
pop
jb
push
test
jge
dec
mov
dec
pop
or
xchg
popf
dec
push
inc
xchg
add
or
stc
mov
xchg
xlat
std
sub
sub
scas
dec
push
jne
icebp
ret
bound
in
sar
dec
adc
xchg
jne
sahf
cmpsb
dec
btr
cmpsl
jo
jno
popf
fistpl
mov
xor
and
pop
shlb
or
push
cmc
leave
or
lret
xchg
inc
dec
stos
test
lds
dec
mov
inc
data16
imul
mov
mov
jge
cmp
mov
das
or
and
dec
mov
fs
dec
cmp
jbe
cs
ja
cld
movsl
movsl
call
lock
lret
divb
push
xchg
scas
xor
subl
idivb
lret
sahf
dec
jns
mov
mov
pop
adc
and
dec
sbb
arpl
shl
lds
mov
xorb
mov
dec
push
repz
sti
rcr
sub
inc
dec
dec
mov
push
movsb
inc
lcall
pop
mov
sub
cli
jns
lret
or
cld
enter
ret
ret
push
popf
push
pop
out
mov
in
inc
mov
sti
xor
movl
insb
xchg
mov
std
shl
push
shlb
sub
pop
sbb
cmp
jge
xchg
xchg
and
arpl
cmpsb
lahf
and
gs
and
movsb
orl
call
pushf
out
xor
cmpsl
les
sti
lret
xchg
xor
xchg
mov
fists
adc
test
fisubrl
out
lahf
xor
bound
data16
arpl
pop
sbb
enter
cld
xor
mov
add
cmpsl
dec
cmpl
lds
jns
popf
push
pop
jne
into
lock
dec
push
push
jns
xchg
jge
push
adc
push
jno,pt
adc
mov
shlb
call
aam
adc
popf
enter
movsb
jl
aaa
hlt
push
lods
inc
adc
lret
fistps
sub
fwait
aad
xor
mov
and
pop
and
mov
xchg
out
xchg
neg
sbbl
push
dec
hlt
xor
leave
icebp
mov
adc
sbb
push
inc
rolb
aad
add
movsb
popf
and
pop
mov
push
push
bound
jle
out
loop
jno
outsl
in
fwait
adc
pop
adc
pushf
mov
stos
jnp
dec
mov
in
ret
inc
stos
push
and
ret
adc
daa
fcomps
mov
jle
outsb
sbb
movb
or
mov
sbb
sub
lock
cmovae
lret
sub
fdivs
cmc
fdiv
out
int3
pushf
dec
xor
icebp
jle
adc
jno
stos
mov
stos
mov
sbb
adc
faddp
cmpsb
cltd
mov
ret
insb
icebp
pop
cmp
insl
js
mov
xlat
and
xor
sbb
test
or
je
xor
mov
sti
sub
div
cmp
movsl
jae
movsb
xor
call
push
xor
or
or
adc
cmp
or
std
jmp
loope
fwait
cli
mov
or
aad
jne
cmp
push
xor
or
in
std
cltd
xor
addr16
fmuls
enter
int
push
leave
out
movsb
pop
adc
or
pop
inc
dec
mov
inc
jle
cltd
or
or
pop
jbe
push
pop
mov
mov
ret
das
into
fnstsw
arpl
xchg
push
clc
ret
or
lcall
xchg
or
pop
cmp
xor
cmpsb
popa
jl
jbe
lock
or
dec
or
sbb
push
xstore-rng
cmpsl
inc
push
out
xchg
icebp
aaa
bound
ljmp
and
insb
test
addr16
mov
inc
pop
jae
leave
adc
pop
xchg
je
stos
das
shl
push
data16
push
lcall
xor
xchg
shrb
inc
lods
lods
dec
sub
sub
mov
aam
sbb
sahf
pop
jne
testl
dec
sbb
loope
jecxz
inc
push
es
push
mov
add
and
pop
jne
mov
adc
dec
das
subb
fldcw
xchg
wrmsr
push
shrb
test
stos
fadds
popf
push
push
notl
leave
ljmp
cmp
outsl
call
or
jg
js
inc
inc
pushf
mov
lret
outsl
loop
rdmsr
or
daa
fisttps
fsubrs
xchg
in
add
jae
add
inc
aad
icebp
xchg
addr16
pop
inc
test
gs
or
aaa
xor
test
mov
pop
xchg
imul
clc
lods
ret
jno
dec
xchg
push
sub
fsubr
and
xchg
lahf
mov
mov
cwtl
gs
or
dec
clc
out
lds
lahf
aaa
pop
or
sbb
test
lret
inc
lods
call
and
cmc
iret
js
or
xorb
xchg
pop
mov
xor
push
mov
insb
or
clc
mov
rorl
and
lea
pcmpeqd
dec
lock
stos
mov
push
in
in
dec
add
cld
movsl
mov
xchg
adc
jo
imul
push
pop
shlb
xchg
mov
int3
ret
mov
cmpsl
cmpsb
lret
push
and
push
loope
ret
xchg
js
mov
mov
add
dec
es
mov
movsb
or
fildll
jp
mov
mov
sub
repz
mov
or
push
pusha
push
mov
outsb
xchg
xchg
gs
scas
inc
sbb
jecxz
xor
sarb
add
lret
xor
ds
es
mov
lret
cmp
mov
xchg
les
cmc
adc
mov
jae
push
test
bound
xor
fsubp
ss
adc
sbb
in
lret
bound
pop
sub
pop
data16
jle
subb
mov
dec
aaa
in
mov
mov
or
ret
jae
dec
sahf
add
add
dec
sahf
stos
std
imul
adc
orb
inc
jle
add
ret
xchg
into
scas
mov
dec
fs
es
ret
and
imul
mov
fistpll
jge
jbe
sub
xlat
pop
addr16
inc
add
mov
push
or
push
xchg
es
and
fs
or
outsb
and
adc
loop
shll
out
pushf
incb
in
nop
ret
cmpsb
insl
stos
pop
and
outsl
add
dec
test
push
or
incl
add
xchg
inc
xor
dec
fdivrl
jmp
xor
fiaddl
pop
adc
jno
pushf
je
les
rcrl
mov
jge
mov
scas
sbb
jmp
xor
xchg
aaa
or
fwait
xchg
mov
mov
loope
hlt
imul
xchg
sbb
and
mov
loop
cmp
jl
add
push
cli
dec
sub
sarl
ret
add
stc
dec
pusha
sub
jne
icebp
out
cmp
scas
lods
xorl
or
rorb
or
sub
push
scas
dec
aam
or
in
dec
xchg
push
push
cmp
js
inc
int
repnz
push
dec
pop
mov
cli
shll
mov
adc
cmp
inc
inc
mov
xchg
sbb
sbb
aad
imul
popf
jge
mov
pop
fs
push
fiaddl
add
hlt
mov
sub
push
mov
ret
push
adc
lods
test
bound
mov
mov
add
xlat
pop
stos
in
lods
push
sbb
testl
lcall
loope
pop
push
add
roll
mov
dec
dec
jbe
movsb
shrl
pop
shr
adc
inc
mov
test
mov
popf
lds
fnstenv
mov
rcrl
arpl
add
add
out
lds
mov
shlb
gs
outsb
sub
loopne
and
push
scas
jb
pop
out
nop
das
ret
iret
mov
mov
jne
push
push
fldcw
push
xchg
push
push
push
and
cltd
imul
and
xor
fisubl
pushf
cmp
arpl
push
mov
adcb
out
add
dec
out
and
fwait
and
jnp
push
mov
jle
outsb
sbb
sbbb
loope
sbb
xor
and
mov
insl
dec
or
cmp
push
divl
movsb
insb
and
push
scas
push
cmc
and
jno
stc
out
imul
scas
in
iret
jp
or
xor
mull
lahf
push
ret
pop
aaa
push
arpl
mov
dec
xor
js
stos
inc
cmpsl
jp
mov
sub
imull
ds
mov
cmp
incl
mov
out
mov
lds
jb
mov
xchg
xor
outsb
xchg
ficoms
mov
jmp
lea
jbe
jnp
mov
sub
aaa
mov
or
inc
jecxz
movsl
add
int
mov
push
jne
lcall
sub
xchg
rcll
pushf
jb
adc
scas
dec
fsubs
das
xchg
ja
jge
jp
push
mov
inc
pop
into
dec
adcb
mov
ret
mov
fsts
rcl
ret
ljmp
popf
scas
jae
add
dec
mov
lahf
pop
loope
sub
xor
aam
lds
jle
xchg
in
xchg
jae
mov
mov
push
lods
jno
test
or
cmpsl
add
in
mov
cmpl
and
daa
enter
mov
push
mov
jle
push
outsl
and
push
xchg
imul
rorl
jecxz
js
insb
pop
xchg
mov
jl
addr16
sub
mov
scas
and
scas
push
outsl
cmp
js
cmpsb
mov
fldenv
frstor
mov
jmp
mov
adc
xchg
bound
mov
jae
jae
sti
movsb
inc
daa
xlat
sub
sub
cli
cli
aam
jnp
sbb
fistpll
and
adc
lea
xchg
subb
add
in
mov
in
cltd
inc
stc
cs
adc
sbb
cmpsb
cmp
push
iret
loopne
inc
push
push
call
xor
ja
xor
and
aaa
push
and
repz
repnz
test
add
mov
mov
mov
cmp
cmpsb
sub
sahf
or
sbb
inc
add
test
sbb
mov
adc
cwtl
faddl
scas
inc
mov
inc
sub
xlat
push
enter
out
idiv
xor
push
dec
bound
pop
repz
add
inc
pushf
movsb
jp
or
test
rcr
sub
movsl
mov
add
test
mov
xchg
test
lea
jno
xor
cwtl
mov
xchg
add
mov
dec
pop
push
cmp
pop
lock
jle
out
jecxz
xor
xor
lahf
imul
lods
push
and
in
cmp
jb
mov
cli
inc
cli
iret
fstl
jne
sbb
jae
adc
or
addl
imul
inc
jge
xchg
pop
ds
nop
lods
pop
cmp
sti
mov
inc
sbb
fwait
imul
stos
jne
pop
nop
mov
pop
mov
fsubrl
incl
fwait
lods
aas
add
dec
push
lods
test
sub
add
mov
jae
addr16
mov
jae
inc
nop
sbb
pusha
dec
adc
into
jae
xor
add
movsl
push
inc
shr
jge
lret
outsb
in
test
mov
push
adc
pop
mov
jo
mov
mov
js
mov
fwait
mov
push
sub
es
or
and
and
sbb
add
jo
and
and
in
ljmp
nop
ja
jecxz
xchg
sbb
push
gs
scas
xlat
test
pop
xchg
pop
pop
jns
fdivs
filds
pop
movsl
stos
jae
bound
and
sub
pop
out
mov
cli
lock
mov
ljmp
into
jecxz
pop
pop
xchg
pop
jl
jle
cld
fstpl
rorb
cwtl
in
add
icebp
jge
dec
rcll
inc
add
mov
test
xor
jmp
sbb
pop
inc
xchg
inc
arpl
mov
xor
adc
loopne
scas
ficomps
fwait
dec
insl
push
cmpsl
ljmp
shll
adc
pop
adc
mov
lahf
add
sub
adc
mov
adc
test
xchg
cld
cmp
stc
jle
loop
icebp
push
adcb
pop
lea
mov
mov
jl
push
popf
inc
cltd
dec
call
sar
ds
mov
push
incl
mov
pop
outsb
in
leave
arpl
adc
mov
testl
or
mov
and
popf
dec
jmp
add
hlt
std
out
jg
push
push
ja
inc
xor
mov
mov
sbb
out
ja
mov
ds
or
cs
movsb
mov
js
xor
add
xchg
fprem1
and
negl
pop
arpl
aam
pop
cmp
jae
ss
dec
or
fsubs
sub
dec
out
lcall
test
mov
jns
insl
andnps
or
and
adc
neg
jle
ret
rorb
loope
jg
cmp
ror
pushf
xor
inc
mov
lock
or
sub
ret
out
fwait
in
ret
adc
sbb
loopne
lods
jp
fnsave
or
mov
or
mov
repnz
hlt
ljmp
test
stos
int
clc
push
push
aaa
xlat
lds
jmp
popa
cmp
lret
loop
nop
orb
mov
adc
jno
mov
xor
cwtl
out
adc
jb
push
inc
lcall
pushf
scas
adc
nop
adc
enter
cld
cmp
lods
adc
lods
dec
adc
addr16
loopne
inc
out
sub
mov
jae
cmpsb
add
notl
fs
out
inc
jbe
sub
es
je
push
sti
pop
ss
add
sahf
jae
out
or
sub
or
mov
jge
and
cmp
aam
lea
repnz
test
dec
xchg
cmc
pop
inc
ljmp
test
jo
mov
shl
lcall
cmp
addb
cmp
in
std
push
popa
fstps
adc
pop
dec
cwtl
loopne
pusha
dec
outsb
or
jl
pushf
add
insb
inc
inc
out
dec
fs
dec
mov
dec
dec
jge
xchg
dec
outsl
pop
mov
jmp
xchg
and
cmpsl
fdivrs
xchg
jae
adc
daa
jno
push
lds
popa
mov
inc
jae
xchg
jb
sbb
xchg
sbb
in
and
mov
mov
in
stos
jnp
or
rcll
addl
xorl
inc
pop
call
or
or
lock
pop
popa
mov
lcall
cwtl
test
xlat
sbb
dec
loop
sbb
stc
sub
sahf
jae
jae
sbb
mov
mov
scas
pop
jne
rorb
hlt
movsl
pop
jmp
push
bound
es
dec
divb
adc
repz
cli
leave
add
sti
jo
mov
sbb
gs
ficoml
dec
lret
insb
cmp
stos
dec
nop
ds
inc
lret
lret
scas
movsl
sbb
daa
push
imul
cmp
ds
sbb
jp
ss
push
mov
les
mov
std
lret
int
sbb
popf
pop
push
cmp
mov
jmp
in
mov
jne
jnp
ds
push
out
add
mov
mov
pop
jbe
shr
repz
or
je
push
cmp
fwait
shr
data16
hlt
mov
sub
dec
out
and
movsl
in
inc
mov
lahf
dec
or
adc
xor
jg
cmpsl
xchg
shll
popa
out
or
fisubrs
cmpsb
pop
ljmp
std
push
je
pop
dec
mov
mull
add
std
sbb
enter
sbb
leave
or
xor
cs
je
jle
mov
pop
jmp
into
sub
mov
test
test
mov
xchg
std
mov
repz
or
addb
push
inc
and
push
jmp
ja
out
pop
inc
in
pop
insb
insb
sub
test
call
fcompl
jae
pop
icebp
jecxz
scas
jle
jnp
aaa
inc
push
fcmovnu
repz
mulb
es
sbb
sbb
mov
xor
lds
pop
cmc
pop
sub
inc
mov
jecxz
mov
cmp
scas
sub
and
mov
mov
jp
les
push
addr16
adc
das
xchg
push
fistl
jecxz
lcall
divl
cmp
cmpsl
mov
dec
js
fcomps
ljmp
int3
cs
jg
js
iret
lret
in
int
or
jns
mov
jg
call
xchg
in
aaa
fwait
sahf
cmpl
out
adc
ret
in
mov
fwait
mov
cwtl
cmp
mov
mov
pop
or
imul
out
push
ljmp
iret
jl
into
pop
sbb
jnp
sbb
xor
test
sbbl
lods
leave
adc
mov
mov
sbb
movsl
jb
es
mov
or
aas
js
fs
cltd
add
push
outsl
mov
or
sub
test
dec
gs
es
mov
mov
rorb
mov
fcoml
mov
mov
push
push
cmc
clc
or
ja
xor
xorl
mov
movsl
mov
lcall
out
out
mov
adc
xchg
mov
and
lcall
in
lock
mov
dec
popa
in
aad
out
int3
lods
sub
fldt
sarl
dec
leave
scas
or
mov
jecxz
icebp
cmovl
jl
mov
inc
jmp
int3
mov
sbb
push
pop
aaa
subl
jne
inc
outsl
add
cs
ret
call
addr16
sbb
fdiv
jb
mov
jne
jecxz
fstl
out
les
out
je
mov
mov
out
stos
test
xchg
xor
adc
popa
in
insb
pop
mov
into
mov
jle
fisubl
aad
mov
push
data16
jnp
mov
not
mov
leave
inc
pop
test
loopne
mov
jge
cmp
jae
rolb
fwait
sahf
jno
push
repz
xchg
mov
mov
lods
add
in
ret
pop
mov
gs
xchg
push
and
in
bound
mov
dec
rcrb
jl
inc
lcall
fsubl
aas
fs
mov
inc
hlt
ds
cli
sub
popa
das
xor
enter
daa
loope
mov
xor
enter
popa
popa
sti
aas
pop
mov
jno
jmp
and
fwait
shrb
jmp
jg
dec
dec
rorb
ret
add
mov
hlt
or
push
out
or
xor
push
mov
pop
lock
pop
jg
shrl
mov
aam
movsb
mov
inc
cmpb
jl
int
push
pop
scas
jp
adc
push
sbb
inc
inc
pop
bound
js
mov
cmp
stos
push
jbe
push
shlb
popa
shll
jae
push
mov
ret
sub
ja
cltd
cmpsl
cwtl
popf
add
jl
lret
or
adc
sub
call
in
cmpsl
adc
sahf
mov
sbb
sub
or
stos
sub
adc
mov
jne
shlb
out
out
jp
xor
imul
in
xchg
jnp
aam
push
imul
je
bound
jecxz
cmpsb
rcl
aas
mov
test
cmp
jo
lock
sub
enter
pushl
xchg
jo
out
mov
orl
call
fsubrl
stos
fs
ror
enter
bound
addr16
mov
xor
mov
inc
les
rorl
adc
movsb
push
daa
inc
pop
dec
jo
in
stc
mov
xor
push
stos
xchg
cwtl
scas
pop
mov
test
mov
lock
and
xor
pusha
adc
test
pop
push
scas
mov
or
lds
cmp
rcr
dec
and
fistpl
or
andb
aas
bound
imul
mov
mov
popl
std
mov
mov
mov
fdivs
mov
sub
pop
ds
jecxz
adcb
mov
and
inc
mov
hlt
jne
mov
mov
cld
lret
jae
jge
jmp
mov
add
jb
mov
sub
repz
shlb
loope
jae
test
out
mov
add
lock
sub
in
jae
mov
push
pop
pop
cmp
push
mov
rcl
adc
push
cmc
div
dec
or
int
xchg
add
and
pop
dec
cmp
adc
loopne
aam
aad
clc
mov
loopne
jmp
iret
add
mov
sbb
or
jb
or
push
daa
aam
int
arpl
dec
xor
lds
sbb
shlb
push
pop
pusha
test
push
add
outsb
enter
sub
cli
lods
adc
adc
lods
and
gs
xor
into
adc
mov
ret
cli
or
loope
cmp
dec
sub
dec
pop
xchg
sub
mov
mov
flds
aam
imul
scas
sbb
mulb
out
push
push
and
push
inc
sbb
push
rorl
pop
mov
push
mov
fs
loope
dec
scas
push
or
dec
xor
call
inc
out
dec
jge
mov
jb
insl
mov
cli
in
jb
in
sar
jp
sbb
jns
loop,pn
jp
clc
addb
inc
pop
pop
and
negl
loope
pushf
ja
and
imul
imul
sub
sti
xor
mov
dec
xor
mov
pop
dec
and
sbb
addr16
mov
adc
pop
and
mov
fisubs
dec
repnz
lahf
adc
xor
loope
fcomip
cmp
xor
insl
lcall
clc
das
das
stos
jno
and
scas
xor
call
testl
add
rolb
test
aam
lahf
icebp
push
or
jnp
adc
sbb
icebp
jle
dec
add
and
cwtl
mov
pop
fbstp
loop
orb
pop
xor
inc
lds
mov
lods
push
jae
sub
out
or
int
int
int
push
in
andps
sahf
push
lea
dec
xchg
push
lcall
lret
es
jge
inc
add
jge
lods
xor
sub
test
pop
cs
ret
mov
adc
shll
cwtl
mov
dec
jb
dec
cmp
or
outsb
lahf
mov
iret
imul
ret
pop
out
jl
gs
mov
xor
ss
outsb
and
out
out
fnsave
sub
rcll
mov
shll
xchg
lret
cmp
or
jge
jo
iret
pusha
adc
pop
addl
int
mov
das
in
dec
mov
je
int3
xor
pushf
movsl
ja
je
add
push
sub
xchg
loope
dec
or
xlat
into
adc
fcom
dec
stos
scas
lahf
mov
jle
in
pop
add
jo
sbb
adc
call
in
xor
pop
repnz
mov
xchg
repnz
mov
int
mov
push
mov
mov
imul
mov
push
cmp
push
or
scas
pop
push
scas
js
adc
fld
ja
dec
mov
or
push
push
gs
les
jae
mov
lock
gs
inc
in
xlat
mov
push
in
dec
dec
and
add
xor
mov
mov
daa
adc
push
mov
cmp
push
fsubs
sbb
subl
xchg
pop
jno
push
pop
mull
push
fidivs
pop
dec
jno
and
les
sbbl
in
sbb
push
mov
and
lcall
pushf
in
xor
mov
jmp
sti
adc
inc
lret
xchg
pop
js
jp
imul
popf
inc
add
inc
jne
test
ja
out
scas
dec
loop
mov
jbe
cmp
dec
lods
rcll
sub
inc
lock
je
loope
adc
pop
lods
dec
int3
pop
jae
cmpsb
sarl
dec
push
iret
xor
ret
adc
ja
pop
mov
push
sub
ds
add
and
and
push
xchg
test
mov
filds
ja
scas
and
sub
mov
into
mov
mov
inc
cli
xor
pop
or
out
cmp
or
mov
loope
xchg
dec
pushf
leave
iret
sbb
enter
lcall
int
push
frstor
jae
xchg
rcll
xchg
jbe
inc
push
pop
and
jo
call
insl
movsb
dec
test
dec
test
push
insl
mov
add
popa
cwtl
lss
push
adcb
aam
outsb
out
imul
push
mov
mov
adc
jns
in
cmpsl
popa
std
test
leave
test
inc
cmpsb
stos
popa
jp
je
adcl
pop
aaa
rcrl
mov
add
jo
pop
cmp
mov
sahf
gs
shl
insb
test
rcrb
iret
fiadds
je
filds
loopne
fiaddl
dec
daa
repnz
adc
gs
sti
lret
gs
sub
cwtl
or
add
or
adc
daa
inc
or
jl
xchg
inc
lds
inc
pop
pop
mov
xor
pop
pop
fwait
add
adc
cmp
or
fdivs
sahf
mov
inc
fistpl
cmp
ud0
sbb
int
fimuls
repnz
and
cmp
std
inc
loopne
repnz
and
repnz
cmp
outsl
sub
lcall
sahf
into
gs
dec
roll
inc
mov
repz
daa
into
inc
dec
pop
lcall
out
int3
out
jp
xor
mov
test
subl
cs
push
jns
sub
daa
xchg
sub
cmpsb
jne
imul
push
cwtl
jae
rep
adc
aam
dec
mov
pop
xchg
jne
loope
cmp
add
sub
fnstsw
xlat
insb
cltd
adc
jae
mov
push
push
jecxz
out
jmp
aam
aad
fildll
xchg
adc
xor
imul
aad
and
mov
shl
inc
popf
pop
scas
nop
cmp
jns
xor
cmc
lods
jmp
cwtl
orb
stos
add
sub
sahf
andb
sub
inc
pop
repz
adc
xor
lods
jne
jmp
inc
push
ja
mov
cmp
xlat
shlb
and
fiaddl
jo
sub
fidivrl
ret
add
lret
push
addr16
add
pop
bound
arpl
cmp
adc
cmpxchg
and
ret
xchg
sti
into
dec
mov
cmp
pop
int3
mov
popa
jb
mov
ret
pushf
les
mov
or
test
stos
lret
out
cvtdq2ps
outsl
mov
add
cmpsl
fmull
inc
fldcw
push
adc
jecxz
and
push
repnz
sub
mov
xchg
imul
cmp
lret
push
lahf
pop
sbb
mov
jae
popf
jmp
or
testl
push
pop
push
pop
mov
xor
add
fldcw
fwait
mov
adc
dec
in
mov
dec
nop
push
sbb
jmp
inc
shl
pop
stos
aad
ret
loopne
iret
mov
mov
mov
mov
fstpl
sbb
pop
and
mov
rcl
lret
push
fwait
das
mov
xor
jle
ja
xchg
add
cltd
jmp
dec
lret
mov
cli
cmp
and
push
add
lods
sub
jg
xor
xor
xchg
xor
pop
pop
or
push
ljmp
xor
xor
xchg
mov
pop
sub
lods
out
popf
pusha
dec
or
push
xchg
mov
negl
add
scas
or
js
mov
dec
test
mov
xor
xchg
xchg
and
shr
jb
out
sub
add
nop
stos
out
lds
pop
fadds
add
add
stos
adc
mov
repnz
and
fisttpl
mov
cli
imul
inc
jg
testb
add
jnp
nop
mov
sbb
mov
fsubp
mov
ljmp
dec
pop
repnz
stos
fcmove
rcrb
inc
pop
aas
push
cmp
and
fidivrs
insb
jmp
dec
push
or
inc
xchg
sbb
nop
xor
out
push
ret
pop
dec
pop
mov
sub
in
testb
add
in
cmp
rolb
inc
pop
aaa
mov
popa
in
xor
push
mov
jnp
sbb
xchg
nop
inc
xor
cmpsb
ret
imul
xor
enter
mov
inc
in
sub
xor
ret
inc
vcvttpd2dqy
sub
rclb
ficoml
sbb
loopne
inc
jns
stos
jae
xor
stc
jmp
pop
and
jge
jge
call
mov
outsb
rorl
and
into
xchg
push
orl
scas
es
add
jg
bound
add
icebp
roll
fdivs
inc
lods
adc
shll
cmp
imul
lahf
mov
in
xchg
int
push
rorb
mov
test
xlat
pop
sub
dec
leave
das
add
xlat
popa
or
test
lahf
and
pop
sti
enter
js
pusha
outsl
cmc
jmp
into
subl
loop
cmpsl
das
out
out
sti
test
mov
stos
pop
out
outsl
mov
int3
das
sahf
mov
dec
inc
inc
sbb
cwtl
fdivl
nop
pusha
or
loop
popa
jge
leave
ret
orl
jg
push
insb
dec
das
mov
cmp
xor
loop
pop
fimuls
mov
in
loope
movsl
test
lods
or
out
pop
lds
add
shlb
dec
insl
mov
out
lods
fisubrs
add
movsb
push
outsl
xor
mov
xchg
mov
jp
test
push
sbb
int3
scas
bound
xchg
xor
hlt
shlb
mov
xor
rorb
fwait
lcall
out
popf
adc
aaa
mov
mov
sbb
insb
xchg
or
insb
test
jl
sti
xor
pop
pusha
idivl
dec
adc
inc
xor
stos
jmp
sub
xchg
mov
outsl
stos
jle
cmp
mov
xchg
fldenv
jmp
outsl
pop
fistpl
out
xchg
pop
pop
pop
fdivs
mov
sub
fdivs
mov
sbb
mov
xchg
jge
mov
xchg
adc
in
arpl
fildll
add
xor
test
add
adc
sbb
xor
fwait
mov
push
inc
xor
sbb
xchg
pop
ret
jb
adc
jnp
cmp
rol
xor
stc
jno
add
dec
push
sbb
dec
leave
lcall
into
or
movsb
daa
mov
in
lret
push
xor
xchg
repnz
out
out
sbb
call
ret
mov
pusha
hlt
mov
cld
adc
cwtl
insl
frstor
scas
jnp
es
push
sbb
dec
fdivrs
pop
mov
gs
mov
mov
pop
mov
icebp
inc
mov
into
jl
dec
adc
ds
jl
push
or
out
jbe
sub
and
adc
repz
iret
or
inc
jmp
pop
jae
ret
jo
leave
out
jp
adc
or
mov
cltd
out
cmpsl
and
pusha
loopne
mov
adc
vpcmpgtb
mov
add
jbe
jbe
xor
mov
nop
pop
push
push
pop
adc
mov
lea
test
aam
das
pop
insb
jo
fwait
roll
int3
fwait
jne
or
jno
add
mov
inc
lods
das
pusha
shr
mov
mov
test
andb
mov
addb
jo
or
mov
cmp
cmp
test
std
sub
les
sub
fcmovnbe
add
sub
cmp
sahf
mov
out
test
hlt
stos
movsl
dec
mov
dec
fcoms
into
mov
adc
push
lahf
shll
scas
add
adc
jae
dec
scas
mov
pusha
arpl
adc
enter
lds
add
lret
mov
mov
xchg
pop
sbb
jnp
cli
dec
sbb
test
cwtl
inc
inc
or
jns
adc
sbb
mov
les
add
imul
aam
mov
out
mov
aad
xchg
mov
sub
xchg
jmp
push
test
push
adc
lods
mov
sbb
xchg
es
lea
adc
xor
cmp
in
repz
ret
sbb
ljmp
gs
xor
jle
daa
adc
sub
mov
loope
inc
inc
test
arpl
mov
je
in
shrl
iret
loop
das
mov
nop
das
jne
cmpsb
pop
stos
aam
fs
push
jge
push
mov
xorl
pop
inc
jb
cmp
roll
jns
mov
fwait
je
testb
addb
sub
test
mov
mov
ficoml
mov
mov
stos
pop
jmp
and
aad
xchg
outsb
into
cmp
mov
dec
fists
adc
int
mov
mov
mov
nop
in
das
push
ret
push
out
sub
shll
lret
mov
dec
sbb
mov
imul
sub
xchg
lea
aas
pop
mov
fcompl
icebp
std
mov
mov
rcrl
cltd
insl
sub
inc
movsl
pop
inc
or
cs
loop
mov
push
xchg
sub
dec
filds
push
adc
mov
popa
addr16
lret
xor
push
insb
push
imul
jae
cmp
push
call
outsb
jo
stos
xchg
ficompl
jmp
mov
add
xchg
push
shl
outsb
rcll
shll
ljmp
sbb
jns
ss
daa
jb
pushf
addl
pushf
adc
jae
sub
loop
out
pop
xchg
add
add
out
lahf
cmp
cld
in
push
test
pusha
iret
xchg
mov
fdiv
jmp
dec
orl
and
div
clc
js
test
pop
iret
psubq
cli
call
loop
adc
daa
cmp
xor
mov
cmpl
inc
out
fwait
sarb
aaa
shlb
adc
gs
sub
pop
lds
outsb
mov
nop
inc
ret
and
repnz
push
pusha
movsb
push
xchg
inc
or
cmp
push
cmp
icebp
and
and
shrb
xchg
pop
jae
mov
loope
das
push
adc
leave
xchg
cmp
cmp
sbb
and
mov
shll
ficoml
add
xchg
jb
pop
mov
int
shll
mov
push
jge
mov
push
mov
mov
fsubr
pop
pop
sub
adc
aas
mov
ja
adc
inc
gs
mov
or
push
insb
and
sbb
inc
scas
pop
mov
sub
or
cmp
dec
inc
or
or
jb
les
insb
test
es
push
imul
aam
jge
add
movsl
popl
fnsave
xor
sub
enter
push
adc
lret
fmul
pop
lods
jecxz
out
push
pop
add
orb
inc
pop
repz
mov
sub
sti
dec
ds
mov
mov
push
mov
fistpll
cmp
jb
jnp
dec
cmp
sbb
jae
roll
push
or
jmp
mov
jo
cltd
jno
dec
repnz
jns
int3
xor
movl
lahf
sbb
ja
shlb
inc
in
sbb
out
roll
shrl
jp
mov
mov
dec
mov
push
jns
cmp
add
mov
fldl
jbe
mov
nop
ret
mov
dec
test
stos
sub
and
cltd
les
or
imul
mov
stc
repnz
push
xor
negb
repnz
mov
mov
out
stos
cs
inc
inc
inc
sti
cmp
xor
int3
cmp
into
test
xor
or
fwait
mov
sbb
push
ret
sub
jge
ficompl
daa
imul
pushw
dec
sub
dec
xlat
negl
pop
or
push
in
pop
sub
jbe
es
xor
cmp
mov
out
scas
aas
xor
fisubl
aad
ja
cmp
or
jecxz
fbstp
std
push
ret
lahf
call
mov
sahf
shrl
stos
add
lock
cs
adcb
in
and
icebp
jno
arpl
fsubs
pop
sub
sbb
mov
and
imul
pushf
out
pushf
pusha
lret
mov
test
bound
iret
jecxz
jl
ljmp
ror
leave
mov
add
arpl
mov
movsb
mov
mov
cmp
inc
sbb
out
pop
cmp
ss
arpl
push
jnp
sub
cmp
inc
shll
mov
cmp
push
arpl
push
add
iret
mov
sbb
jno
cmc
push
cs
jmp
cmpb
sub
inc
fdivrl
xlat
dec
xor
fsts
mov
movsl
outsl
jne
sub
jnp
or
loope
inc
paddw
sub
sub
ffree
xchg
lea
inc
iret
or
dec
jne
xchg
adc
ss
mov
xor
or
push
aam
mov
push
xchg
sub
xor
ja
lret
idiv
pop
dec
stos
out
fldcw
test
adc
mov
xor
sub
movsl
pop
loop
in
add
jne
xchg
pop
mov
daa
jo
icebp
imul
mov
cmp
repnz
mov
push
jae
jmp
adc
pop
or
mov
in
and
dec
je
adc
mov
popf
mov
test
aad
test
sahf
mov
mov
fcmovnu
daa
mov
sbb
inc
cwtl
mov
aam
loope
out
mov
out
adc
movsb
pop
lahf
sbb
dec
stos
pop
out
ja
cmp
clc
fsts
and
arpl
sub
and
xor
cltd
add
pop
dec
iret
aas
pop
adc
push
sti
jecxz
mov
xchg
and
int3
mov
fisubl
pop
sbb
in
adc
les
sahf
mov
ret
out
dec
stos
lods
repnz
mov
mov
jl
and
pop
lea
and
fcompl
jnp
mov
adc
clc
pusha
pop
cli
aas
js
cmpl
cmpl
sbb
jl
sub
loop
mov
shll
push
or
sub
dec
pop
jmp
push
sub
push
scas
pop
lret
fnstcw
adc
outsb
stos
xor
outsl
fldl
stc
dec
and
popf
in
cli
xchg
push
test
mov
jl
mov
shlb
xor
inc
aam
imul
movsb
lods
cwtl
sub
pop
xchg
imul
std
andl
gs
arpl
in
jmp
out
dec
mov
ret
pop
mov
cwtl
or
push
sub
into
jge
pop
fimull
fnstcw
cs
jg
sti
dec
lods
add
shl
out
iret
mov
ljmp
mov
arpl
jge
insb
dec
daa
test
add
nop
outsl
movsl
ret
inc
adc
fiadds
mov
or
pusha
adc
out
notl
sbb
popa
add
xor
inc
pop
pop
inc
jl
fs
mov
pop
lahf
xor
jns
or
gs
sub
push
xor
in
or
sbb
repnz
cld
clc
or
js
ds
popf
or
lcall
inc
add
insb
enter
andl
scas
or
je
stos
mov
imul
jle
and
mov
call
insb
mov
insb
inc
mov
xchg
xor
dec
lahf
ret
pop
cwtl
jns
push
pop
mov
mulb
sub
leave
shlb
jp
dec
out
jmp
mov
adc
inc
sbb
fisubrl
pop
pop
imul
popa
cli
mov
jb
js
sub
sbb
ja
frstor
xor
mov
outsb
pop
pushf
xor
mov
cwtl
sar
cmc
xor
sbb
andl
in
push
out
or
sarb
inc
fucom
adc
lret
adc
sbb
sub
movsl
shl
rcrb
shll
inc
xor
adc
add
inc
mov
cld
xor
push
and
pop
and
in
shll
das
add
inc
xor
push
test
pop
or
js
mov
pop
fwait
rolb
push
mov
inc
sarb
push
movsl
cwtl
dec
mov
jns
or
ss
shll
cmc
add
pop
adc
in
adc
and
outsl
mov
pop
adc
xor
jmp
sub
cld
loope
test
mov
mov
popa
insb
popf
in
imul
popa
lods
xor
pop
sbb
into
xchg
cmp
adc
les
xchg
ret
xchg
push
sub
out
cmpl
insl
cmpsl
xchg
mov
jmp
fcoms
pop
mov
xchg
jl
lock
fsubs
and
xlat
into
mov
out
test
mov
clc
xor
lret
mov
inc
shrb
push
add
jne
das
xor
xchg
xor
ljmp
add
cmpps
adc
xor
repnz
adc
fbld
jae
xchg
and
lahf
imul
sub
dec
xchg
call
movsl
jp
sbb
insl
stc
xor
daa
lcall
cmc
data16
mov
mov
sahf
xchg
push
hlt
cmp
mov
pusha
gs
jne
std
jle
adc
imul
cmpsb
mov
mulps
sub
push
imul
jmp
fistpl
and
scas
xlat
repnz
mov
inc
mov
fsubs
add
mov
aas
xchg
leave
shlb
xchg
adc
repnz
aaa
xor
inc
ror
movsl
mov
imul
and
push
xor
test
lods
nop
lods
daa
jnp
leave
mov
in
sbb
sbb
lahf
push
jmp
sbb
jns
xchg
mov
xor
mov
push
mov
mov
mov
into
adc
mov
mov
xchg
push
scas
sbb
enter
jb
loope
and
arpl
jnp
aas
jg
popa
lock
mov
inc
or
dec
or
push
sahf
sub
pop
mov
push
in
xchg
or
push
dec
inc
bound
rolb
inc
jns
or
enter
xor
test
btl
mov
addr16
pop
mov
push
jp
mov
adc
xor
push
sbb
movsl
or
in
enter
aas
out
or
pop
sub
sbbl
and
adc
aad
inc
dec
cmc
add
ljmp
cmp
nop
jp
hlt
add
jbe
mov
pushf
adc
cmc
movsl
jg
mov
xchg
shrl
scas
jge
mov
cltd
push
test
out
fisttpl
inc
aaa
ja
test
mov
cmpsb
scas
fsin
pushf
enter
sahf
add
scas
push
mov
shlb
cmp
add
call
fwait
aad
ds
mov
mov
cmp
mov
call
mov
int3
cltd
mov
test
jge
js
fisubs
sub
add
lea
incl
and
jnp
in
xlat
ja
movsl
xchg
pop
cmp
xor
xlat
inc
in
sbb
stos
sbb
popf
stos
cmp
mov
xchg
nop
push
push
aaa
add
dec
shlb
jge
sbb
inc
loope
xchg
add
test
outsb
sub
pop
xchg
dec
ss
dec
ja
inc
inc
jle
sarb
aam
dec
into
jbe
xor
push
mov
sub
pop
test
incb
sbb
mov
jne
lret
leave
inc
push
scas
scas
sar
in
stos
push
pop
cmp
inc
mov
test
mov
inc
jo
movb
xor
add
and
dec
lea
ret
jne
aad
mov
mov
xor
rcll
outsb
insl
fwait
and
mov
mov
jns
adc
outsl
xchg
jmp
mov
lahf
stos
sbb
sbb
add
popf
cmp
sub
pop
and
adc
push
clc
mov
pop
lret
sub
icebp
ljmp
push
pop
loope
lahf
or
dec
into
mov
test
jo
mulb
lret
jl
sub
jne
mov
nop
sub
out
cmp
shrl
sbb
rolb
loope
les
sbb
pop
int
mov
add
jl
je
and
inc
dec
sub
arpl
add
mov
ss
test
cld
imull
push
repnz
and
shl
and
xor
repnz
xchg
loopne
rclb
push
or
jns
incl
jne
pushf
cmp
mov
dec
sbb
adcl
bound
fucomi
stc
out
xor
mov
jmp
dec
inc
sub
add
in
out
sarb
xor
xchg
pop
stos
adc
pop
in
adcb
jmp
test
push
ja
lods
insl
xchg
add
mov
sub
inc
cmpsb
xchg
pop
in
push
div
adc
and
mov
sbb
adc
sub
cmpb
test
jns
ja
fidivl
mov
shll
loopne
push
arpl
addr16
mov
xor
or
stos
lods
fistpll
push
xor
in
orb
jmp
inc
mov
inc
cmp
xchg
push
insb
hlt
add
adc
add
iret
push
cs
xor
icebp
mov
int3
scas
mov
sub
xor
push
clc
sub
inc
jno
cmpsl
loope
insl
ljmp
pop
dec
nop
jg
test
jns
in
push
cmp
and
xor
addb
aaa
mov
mov
jnp
jae
mov
mov
invd
into
cmpsl
xor
xchg
rcr
gs
out
jl
stos
and
or
mov
shlb
rcr
lock
cmp
jo
cmp
in
sbb
sbb
mov
in
mov
adc
scas
add
popf
xor
repz
mov
cltd
xchg
and
xchg
mov
xchg
leave
sbb
mov
cmc
stos
nop
xchg
js
ljmp
outsl
in
pushw
xchg
shlb
sti
push
out
pop
cmp
and
and
mov
or
in
mov
lods
popf
dec
aam
loope
stos
push
ret
push
sub
negl
xchg
push
mulb
push
sti
das
and
and
inc
fcomps
xor
movsl
or
outsl
std
in
imul
into
push
and
or
xchg
mov
and
lret
lcall
test
mov
xchg
cltd
lret
jg
and
loop
call
in
sub
stos
loope
and
sti
push
out
test
mov
cmp
das
adc
ja
cmpsb
xchg
das
es
js
sbb
or
outsl
lcall
dec
adc
or
push
mov
fcompl
movsb
dec
adcb
fcomps
orb
push
sub
xchg
je
repnz
inc
pop
inc
dec
enter
in
loop
test
loopne
xchg
xchg
loop
ja
rcr
lcall
add
jo
lds
cmp
cmpsb
outsl
jp
gs
dec
inc
pop
add
test
cmp
rcrb
out
jbe
jnp
cmp
std
cmc
clc
xlat
daa
adc
popa
lahf
idiv
aad
add
pop
ss
dec
popl
sub
or
hlt
pop
das
cli
jle
cmp
out
xchg
jns
xor
cwtl
repnz
imul
mov
push
shll
sub
add
inc
pop
cmp
sbb
cmp
and
cltd
out
mov
lds
outsb
fdivs
inc
loopne
add
aad
and
mov
or
dec
adc
imul
xor
sahf
mov
mov
movsl
xchg
sub
push
rorl
xchg
mov
dec
ss
mov
xchg
push
and
into
test
lock
ret
popf
leave
imul
pop
int
jb
addl
inc
inc
dec
jno
add
inc
sub
and
sub
movsb
popa
push
rorb
cwtl
cmpsl
incl
inc
imul
fcomps
jp
es
fistl
aas
leave
mov
loope
mov
mov
mov
mov
jle
imul
ret
cli
out
sahf
lods
mov
loope
mov
adc
and
into
int
adc
mov
inc
hlt
add
fsubs
ljmp
cmc
mov
jbe
dec
lahf
insl
dec
mov
clc
mov
popaw
mov
rclb
pop
push
cld
push
mov
shrb
sarl
in
xor
xchg
fisubrs
push
loope
div
mov
push
pop
xchg
mov
daa
jge
test
xchg
jge
sbb
cmp
add
and
icebp
into
jg
or
mov
sbb
jns
jnp
pop
mov
aam
rcrb
sub
aaa
inc
push
mov
adc
push
das
cmp
outsb
and
leave
and
jns
aad
movsl
out
jmp
add
xor
or
cmp
adc
hlt
lods
idiv
mov
xlat
stc
rcrl
dec
sub
push
mov
push
xchg
add
pushf
and
xor
out
cmp
lea
mov
fimuls
mov
inc
pop
int3
outsb
out
popl
test
dec
aas
scas
shr
dec
ret
imul
mov
mov
sbb
fiadds
mov
pop
in
xchg
jns
pop
sti
fwait
and
mov
or
jl
mov
cmpsb
cwtl
hlt
add
shlb
aad
pop
or
lahf
jle
or
sarb
sbb
fistpl
dec
mov
dec
lret
mov
add
sub
test
xor
lods
pop
or
sarb
or
add
push
dec
ror
xorl
je
jno
pushl
filds
jecxz
xchg
jmp
daa
dec
push
jo
in
adc
and
popl
pop
and
adc
stc
loope
lcall
push
cmp
jl
sub
add
int
popa
mov
std
std
andl
leave
push
test
pop
xor
mov
jg
rcrb
std
mov
inc
adc
lcall
jno
inc
mov
pop
call
mov
xor
imul
lret
fstps
imul
add
mov
pop
mov
sbb
or
adc
push
popf
pop
call
adc
ret
addl
jno
aaa
mov
mov
push
dec
in
imul
in
sbb
and
outsb
and
outsb
dec
inc
mov
xchg
fcmovbe
pop
mov
shll
push
cmp
sbb
sahf
sub
icebp
mov
or
orl
dec
cli
add
hlt
lds
scas
repz
sub
out
shrl
sti
sbb
rcl
cs
push
mov
ss
xor
mov
mov
cld
inc
cmpsl
push
sub
inc
xor
mov
pop
imul
adc
pop
sahf
packuswb
and
mov
lahf
repz
movswl
dec
mov
ficoml
in
xchg
sub
adc
ss
sub
inc
cwtl
cmpsb
lds
movsb
push
in
or
fsubr
call
pop
ret
jne
scas
mov
imul
and
loop
and
popa
mov
in
jns
add
sbb
jo
rcr
fdivs
xchg
test
nop
ja
jge
jo
jmp
sub
mov
mov
pushf
iret
scas
mov
movsb
setp
shrb
mov
push
ficompl
jne
dec
mov
jl
lods
inc
sub
dec
fcompl
aas
enter
jmp
mov
pusha
jmp
sbb
xchg
xchg
std
xchg
mov
subl
inc
mov
flds
dec
dec
jmp
lret
call
inc
cmp
cli
and
das
cmp
pop
adcl
data16
push
push
add
cmpsb
cli
pop
into
aaa
jmp
xchg
lods
repz
push
ret
shlb
fnstenv
xor
cmp
inc
dec
jo
adc
pop
jne
push
jnp
test
call
out
push
inc
test
mov
lods
lret
adcb
int
dec
cs
xor
test
xor
fisttps
or
mov
dec
mov
data16
hlt
popf
sbb
ss
push
mov
or
pop
push
test
cli
sub
lret
jbe
mov
aam
and
mov
stc
fidivs
shrb
mov
add
cmc
rclb
es
cmp
inc
push
mov
cmpsb
lock
jle
sub
push
leave
clc
mov
negb
mov
mov
jne
mov
loopne
mov
mov
jae
dec
and
jg
shlb
adc
add
pop
lcall
lods
es
mov
cmp
or
inc
mov
dec
push
dec
insl
xchg
imulb
mov
sti
out
mov
pop
mov
pop
loop
sbb
adc
je
cmpsl
and
xchg
bound
movb
xchg
mov
mov
fcmovnbe
jle
and
cmp
sbb
insb
lret
and
xchg
hlt
and
and
xor
add
xor
xchg
lret
and
repnz
ror
xor
and
or
xor
push
cld
xlat
mov
dec
out
add
mov
insb
jmp
pop
sub
push
jbe
add
add
enter
inc
loope
es
mov
dec
push
add
lcall
or
sbbb
xchg
sub
in
enter
sbb
adc
pop
mov
pop
push
add
je
leave
daa
insb
fisubl
pop
and
in
loope
out
fldt
jae
and
jl
lret
add
ret
xchg
xorb
adc
or
insb
inc
mov
lea
ret
pushf
xchg
cli
inc
es
sbb
xchg
int
cmp
adc
jno
addl
sbb
in
test
popa
in
cmc
sbb
dec
sub
cmpsb
fsub
popa
pop
fistl
scas
fwait
mov
add
adc
cltd
pop
pop
cmpsb
ss
or
test
mov
fnsave
xlat
scas
in
and
imul
push
icebp
bound
mov
icebp
xchg
sub
push
std
shlb
push
cltd
or
xchg
lret
mov
inc
dec
in
loopne
pop
insl
and
and
mov
adc
dec
jecxz
pop
daa
mov
mov
mov
dec
sub
stos
mov
rcll
and
or
data16
fadd
xchg
add
add
shr
mov
jp
popa
inc
lret
push
movsl
mov
rcrb
adc
sub
jmp
pop
mov
sub
push
cmpsl
or
jmp
out
lock
leave
scas
js
outsb
add
mov
lcall
xchg
sahf
xchg
add
test
test
pop
insb
inc
push
jmp
fsts
lods
jo
sub
outsl
inc
movsb
ss
aas
cmp
lahf
jb
add
mov
xchg
jbe
xor
jns
pusha
stc
jp
add
mov
dec
add
fs
out
lds
or
or
sbb
add
movsl
mov
ja
jmp
aad
xchg
mov
jo
inc
ss
repnz
stos
mov
dec
mov
xchg
in
and
imul
in
pop
dec
adc
mov
fxch
stos
pop
xlat
jmp
inc
hlt
xchg
jp
stos
movsl
lret
stc
sbb
out
xor
push
aas
jmp
stos
sti
add
sbb
pop
jno
test
lahf
push
fisubrl
mov
adc
ds
add
adc
inc
pop
jne
and
lret
decb
and
scas
out
dec
insl
mov
xchg
cmc
adc
inc
add
mov
pushf
xchg
xchg
jge
movsb
sbb
jo
cwtl
fs
int3
inc
mov
sti
or
out
stc
dec
push
pop
aaa
push
out
xor
push
rcll
cli
pop
mov
mov
popf
pop
adc
andl
sub
stos
or
mov
les
add
xor
std
and
outsl
adc
jmp
mov
mov
fwait
xor
xor
pop
sub
icebp
insb
push
inc
in
fisubrs
add
fidivs
cli
mov
mov
lret
push
test
cmp
mov
mov
xchg
dec
stos
push
add
shll
pop
cwtl
dec
inc
sbb
pushf
cmp
scas
or
call
insl
inc
orl
jno
lahf
cmpsl
inc
imul
imul
jns
jo
in
call
xchg
addr16
inc
mov
mov
mov
xchg
lea
mulb
pop
lds
jne
frstor
sbb
xor
or
sub
out
cmp
mov
mov
incl
das
insb
push
cmpsl
cmp
xorl
push
sbb
rcrb
cmpb
push
aad
fst
push
imul
fcoms
cmpsl
rorb
jge
or
enter
push
lret
mov
arpl
in
outsb
lods
rol
inc
and
lods
clc
out
lods
stos
andl
xchg
sub
xchg
outsb
add
dec
cmp
jg
nop
xchg
stos
push
iret
in
imul
mov
insl
stos
shrl
notb
movsb
mov
xor
mov
add
jno
push
mov
or
int3
shlb
jne
xor
in
mov
xchg
push
xchg
sub
sbb
pop
pop
dec
sub
push
jg
jno
cmpsb
popa
cmpsb
in
mov
xchg
movsl
je
xchg
mov
mov
leave
cmp
add
aam
push
sub
mov
xchg
inc
mov
stc
push
jo
push
push
movsb
je
cmp
fs
lods
shr
lods
ss
cmpl
in
movb
xor
dec
xor
bound
sub
and
jecxz
pop
lods
inc
shll
or
xor
pop
and
jg
add
pop
sahf
jle
cmp
out
sub
or
pop
test
sub
cmp
int3
test
mov
inc
lea
call
dec
pop
xchg
push
in
mov
jne
jb
aaa
pop
imul
cmp
push
mov
pop
cltd
xchg
jg
and
in
pop
je
fcoml
xor
pushf
cs
xor
scas
imul
pop
popf
cmp
andl
push
dec
imul
fstl
cmp
push
sarb
jbe
push
int
movsl
pop
lods
xchg
pop
adc
rcrl
cmp
xlat
inc
push
out
xor
push
mov
sbb
clc
push
pop
rcr
mov
xor
push
sub
mov
sub
fisubrl
das
out
dec
dec
les
add
rclb
xor
in
inc
pop
cmp
repz
or
mov
cmp
test
pushf
daa
lods
in
lret
pop
cmp
scas
xor
loop
fldcw
mov
and
mov
cmp
fsubl
mov
jne
inc
call
mov
sub
fisttpll
fwait
push
push
fstp
and
pop
fldl
mov
or
mov
inc
pop
pusha
or
mov
out
push
xor
push
mov
rolb
inc
mov
xchg
rolb
sbb
insl
add
cmp
cltd
sbb
orl
mov
repz
and
jl
pop
pop
jl
ds
adc
pusha
in
out
leave
sub
mov
das
adc
sbb
jle
push
and
movsl
pop
repnz
dec
pop
inc
std
mov
sub
cmpsb
mov
jl
jge
les
in
add
rorl
or
sti
jecxz
xor
and
mov
pop
in
fstl
stos
and
sbb
sub
lcall
fidivl
shrl
cmp
lea
sbb
jecxz
pop
out
pushf
push
sbb
adc
push
movsb
sub
xor
sub
cs
inc
xchg
jge
int3
aam
or
pop
call
dec
pop
inc
adc
mov
orb
push
decb
jg
and
xchg
dec
or
pushf
call
inc
hlt
iret
mov
rolb
js
insb
hlt
popa
cmc
mov
ja
jno
nop
fs
outsl
push
popa
jno
fmull
sahf
mov
sub
ficoms
je
in
inc
shr
cli
mov
and
fbstp
in
jmp
pop
into
or
cmpsl
jecxz
sbb
jne
dec
in
fmuls
lcall
daa
jo
in
and
clc
mov
or
fs
xchg
xchg
fistps
jl
mov
xor
mov
call
loop
push
cmp
sbb
xchg
mov
lahf
and
faddl
cmpsb
icebp
jp
pop
push
add
pop
xor
lcall
add
dec
lock
mull
test
js
cmp
cmp
cmp
imul
dec
sbb
push
out
xchg
lcall
cmpsb
pop
push
loopne
cmpsl
fwait
jno
cmc
lods
push
fcompl
cmp
movb
xchg
inc
mov
fcoms
cmp
dec
and
outsl
jp
cwtl
sbb
ret
dec
cmp
orb
loopne
lret
in
mov
orb
ret
jecxz
add
add
dec
jb
sbb
and
sub
test
loop
stc
insl
test
or
add
dec
daa
xor
jbe
mov
pop
pop
bnd
ficompl
sub
and
push
jp
ret
fwait
push
xlat
mov
sbb
push
push
cmp
mov
andl
std
xor
mov
pop
cmp
jl
ret
push
dec
mov
mov
mov
xor
ret
inc
idivb
push
or
or
dec
pop
xchg
aam
jbe
or
add
cwtl
pushf
xor
mov
dec
dec
sub
idivl
ret
and
loope
push
data16
jb
push
mull
inc
push
or
idiv
imul
inc
loopne
cmp
mov
cmc
jmp
dec
mov
add
ss
daa
ljmp
ljmp
ret
repz
mov
addr16
rcrb
push
js
pop
or
shlb
adc
and
lcall
cmp
cmpsb
push
and
pop
jnp
movsl
jb
pop
int3
lret
xor
push
inc
movsl
xor
idivl
in
jno
mov
pop
pop
or
add
mov
rcr
jae
sub
rcrb
cmpsb
cmp
push
into
jmp
scas
mov
mov
std
xor
sbb
aam
xchg
jnp
xor
jecxz
jg
out
fisubrs
clc
ret
xchg
add
mov
jle
outsb
jg
dec
fbstp
xor
hlt
mov
movl
insl
aad
movsb
rclb
add
rcrb
gs
mov
jmp
lret
cmp
jmp
or
add
mov
mov
lcall
lret
and
sub
cli
outsb
imul
xchg
mov
test
adc
lret
pushf
sbb
sahf
sbbb
mulb
outsl
js
stos
pop
push
pop
divb
out
hlt
mov
inc
mov
cmpsl
sub
or
pop
mov
lea
sbb
jns
aam
add
inc
add
cmp
cmp
bound
sbb
dec
push
fisttps
jge
hlt
dec
push
in
addb
int
sub
mov
iret
push
imul
mov
inc
lds
push
mov
adc
jl
loope
cs
jo
inc
test
repz
or
mov
lods
mov
lcall
lock
pop
mov
sub
incl
and
clc
cmpsl
fcomip
dec
pop
inc
jbe
dec
mov
nop
aaa
xchg
and
xor
mov
das
or
pop
bound
addl
push
lahf
add
xchg
xchg
out
xchg
int
inc
adc
fwait
add
xchg
subb
adc
test
mov
or
jg
jo
lds
and
iret
mulb
fisubrl
sub
inc
jns
dec
and
jo
pop
inc
xchg
enter
sarl
inc
sti
jecxz
out
out
neg
and
or
sub
pop
dec
mov
mov
fisubl
std
or
push
cmc
xor
fldt
and
movsl
das
adc
test
loopew
test
lea
dec
icebp
inc
int
or
in
insl
dec
das
cwtl
add
shll
or
cmpsl
bound
fs
dec
cs
sbb
popf
cmpsb
push
or
popa
mov
cmp
inc
je
dec
mov
pop
clc
cmp
mov
loop
lds
test
push
lret
cmp
popa
fwait
jae
and
jecxz
sub
inc
sbb
mov
dec
jl
sbbl
aam
pusha
mov
test
or
popa
push
roll
adc
mov
mov
pushf
roll
iret
cmpsl
fsub
inc
out
sbb
loopne
in
xor
or
in
shll
in
data16
test
mov
sarl
movb
cmpsl
cmp
ss
nop
in
cmp
aas
std
and
mov
jb
pop
scas
std
mov
pop
cli
adc
fcoms
mov
cld
pop
insl
cmpsl
jp
mov
and
xor
or
or
adc
movsb
jecxz
and
xor
sbb
filds
jle
cmp
ret
pop
cmp
fmull
pop
lret
cmp
popf
mov
ret
mov
jp
lret
lret
out
push
outsb
je
lret
and
or
int
push
out
iret
pop
jmp
adc
fimull
dec
or
push
out
fbld
push
aas
pop
lds
test
or
sub
pop
push
dec
mov
push
enter
lret
cmpsb
push
imul
popf
dec
mov
dec
ds
or
dec
jne
nop
mov
sub
inc
mov
ret
divb
fnstsw
rol
push
aas
and
sub
sbb
ljmp
flds
inc
movsb
adc
push
xchg
loope
sub
adc
dec
scas
mov
cld
push
adc
sub
xor
pusha
popf
out
push
mov
xor
cli
es
fadds
fbstp
scas
push
aad
rcll
out
pop
sbb
inc
mov
jne
dec
lret
sti
jns
pop
divl
push
xor
mov
sub
adc
stos
pusha
das
mov
decb
push
add
add
mov
inc
fbstp
jge
adcl
cmp
mov
cmp
xor
cmp
push
ja
in
ficoms
addr16
sub
mov
push
push
xchg
dec
adc
jo
add
fwait
cmp
ja
ss
movsb
dec
sub
fcmovne
movsl
push
jb
jmp
addb
dec
mov
mov
test
adc
inc
mov
add
sub
jbe
mov
xchg
ja
dec
int3
test
out
cmp
cmp
dec
sbb
movsl
xor
movsl
cmpsl
lret
pop
push
fsubs
mov
push
scas
scas
xor
mov
dec
filds
sub
and
adc
subl
sub
cli
push
ret
jmp
sti
mov
scas
push
adc
ret
and
mov
mov
pop
shrl
loope
sub
mov
cmp
and
fnstsw
loop
adc
xlat
fst
push
xchg
hlt
inc
mov
fstpt
outsl
fs
and
fwait
sti
in
dec
mov
rorb
push
cs
mov
xchg
es
jmp
fs
cmp
adc
out
mov
pop
aas
xchg
jmp
or
loope
push
or
push
int3
jae
dec
enter
divl
jmp
repnz
jns
lods
call
js
push
les
push
sar
inc
push
sbb
mov
pop
xchg
xchg
jge
add
lock
adc
shll
stos
mov
push
mov
add
mov
pop
xbegin
push
insb
cli
jo
test
cmp
mov
lods
stc
dec
push
or
sbb
dec
sub
jb
mov
clc
scas
aaa
fstpt
xor
and
jle
sub
adc
sbb
xlat
dec
pop
movb
repz
shlb
stos
imul
sbb
pop
pop
popa
shll
imul
push
aaa
mov
dec
ljmp
inc
add
pop
mov
rorl
inc
inc
cs
inc
xor
out
mov
pusha
int
les
gs
inc
adc
shl
and
cltd
mov
mov
or
xchg
or
sub
sub
xchg
mov
cs
jbe
invd
push
pop
bound
in
push
adc
push
xchg
dec
aad
push
adc
ss
ja
xor
sub
pop
ss
out
cmp
shll
lea
negb
notl
mov
pop
inc
ljmp
sub
repnz
pop
stc
cwtl
sbb
lret
fwait
lea
adc
ret
sbb
jmp
and
addr16
lret
mov
mov
in
mov
pop
loop
xor
clc
gs
and
arpl
push
sub
jmp
lock
dec
lds
xor
test
roll
mov
rcrb
and
and
lds
and
mov
jmp
inc
out
dec
jmp
sbb
outsl
imul
mov
fdivrl
std
out
pop
jbe
enter
fwait
test
inc
push
idivl
repz
mov
stc
and
cmp
sahf
cltd
push
pusha
inc
inc
mov
stc
cmp
cwtl
and
add
js
xor
out
dec
ss
cltd
fs
push
sub
sbb
or
outsb
notb
pusha
adc
call
push
ds
subb
in
push
jecxz
call
cmp
ljmp
or
dec
mov
dec
mov
xchg
test
orb
fxch
in
mov
arpl
mov
cmc
xabort
add
rcl
push
fs
jo
add
pop
or
cmpsl
push
and
int3
iret
push
jmp
in
mov
aad
addr16
arpl
cmpsl
outsl
xor
imul
push
push
mov
xor
stc
ficomps
cmp
into
dec
int3
nop
out
stos
xchg
repz
jbe
subl
or
incb
arpl
out
sti
out
fcmove
mov
shll
cmp
add
adc
hlt
push
roll
and
mov
aaa
fs
add
incb
enter
mov
adc
hlt
aaa
xchg
inc
xchg
cmp
addr16
wrmsr
ficoml
cld
adc
mov
mov
pusha
mov
dec
std
cltd
jb
into
fistps
test
dec
aam
int
lds
mov
cmp
fidivrl
inc
push
ljmp
add
add
mov
test
pop
lods
dec
xor
push
jl
inc
xchg
mov
lock
test
je
xchg
add
roll
mov
stc
add
movsl
add
jbe
lcall
xchg
stos
add
sbb
ljmp
test
js
lea
adc
sub
mov
sbb
mov
mov
clc
out
imul
mov
je
mov
test
sarb
jl
push
add
and
fs
and
sub
in
fstpl
mov
and
arpl
push
push
scas
addb
push
insb
cs
test
insb
cltd
inc
dec
bnd
lds
std
mov
push
or
in
jbe
imul
push
gs
jb
and
jae
nop
jle
xor
cli
pop
mov
clc
mov
lahf
js
xchg
push
cld
dec
out
sbb
aam
xorl
xchg
adc
mov
loop
imul
pop
pop
cmp
sahf
movsl
ret
fnstenv
mov
jle
loope
cs
push
or
push
rorl
dec
xchg
mov
or
bound
cmp
cmpsb
out
or
rcl
inc
aas
je
leave
outsl
sbb
in
daa
negl
sbb
in
pop
lods
pop
ret
sbb
mov
jge
cmp
notb
lea
movsl
sub
adc
push
xchg
popa
lret
xchg
mov
das
inc
pop
mov
insb
pop
int
aam
aaa
sub
inc
das
xor
mov
outsb
mov
mov
inc
int
scas
lcall
xchg
scas
mov
mov
jno
fyl2xp1
jge
push
pop
jp
repz
addl
sbb
add
enter
aad
mov
cwtl
adc
inc
jl
mov
mov
into
mov
xchg
dec
icebp
out
cli
fistpl
cmpsl
jbe
orl
rorl
xor
lcall
fimull
or
jge
pushf
adc
lahf
ucomiss
bswap
test
jmp
mov
call
cmp
mov
inc
push
mov
testl
xchg
jge
out
sub
stc
xor
pop
test
mov
mov
mov
fisubrl
or
in
aad
ljmp
fldl
bound
imul
fwait
mov
pop
outsl
mov
lcall
sbb
xchg
ret
mov
int
imul
pushf
push
or
loopne
xchg
shl
daa
aas
pusha
stos
arpl
inc
inc
repz
arpl
fisttps
mov
jg
push
add
fs
popf
mov
and
mov
repnz
outsb
subl
push
and
pop
sbb
enter
and
pop
sarb
push
pcmpeqw
lods
ret
and
ss
ret
shrb
rolb
inc
cmp
stc
dec
dec
rcll
jge
test
jp
nop
push
sbb
xchg
jne
bound
cwtl
mov
je
daa
fisttpl
shll
adc
xchg
test
roll
mov
add
out
xor
cwtl
jle
cmc
in
jae
je
aaa
jp
push
mov
ja
je
cmp
ret
pop
and
xor
pop
inc
mov
sbb
mov
sub
cmp
out
hlt
lret
mov
test
dec
subb
push
mov
or
pop
xchg
mov
in
mov
pop
jg
ret
mov
jnp
ds
adc
lea
popl
cmp
and
leave
cmpsl
push
shrl
test
and
es
scas
pop
add
mov
cmp
aas
xchg
ret
sub
insl
repnz
roll
lahf
lcall
and
hlt
fstpt
shr
pop
movsl
ljmp
mov
mov
in
lret
rcrb
leave
aas
dec
mov
dec
orl
out
iret
sbbl
mov
bound
xor
xchg
pushf
sbb
aad
mov
dec
adcl
mov
dec
jl
in
lret
jb
mov
cmp
lcall
jmp
add
add
mov
jecxz
subb
dec
daa
sbb
xchg
xlat
mov
mov
hlt
mov
imul
out
jecxz
loop
lcall
call
aas
pusha
xor
cmp
imul
fisttpll
add
mov
mov
push
les
aas
add
bound
mov
adc
mov
add
inc
js
sbb
ret
fisubl
cmp
jbe
mov
mov
and
idiv
and
fs
aaa
aas
mov
push
cmpb
inc
jge
jne
ds
hlt
and
shrb
addb
enter
jne
hlt
push
mov
cmpsb
jge
insl
bound
xor
pop
loope
xor
icebp
ret
xor
dec
jle
cmp
shlb
aaa
mov
nop
je
fst
jp
fistl
popf
iret
lcall
dec
repz
sub
and
je
stos
repz
mov
imul
fildll
leave
cld
add
sbb
jg
push
mov
pop
popa
stos
inc
dec
mov
xor
xor
jl
loopne
push
cmp
dec
mov
sbb
xchg
stos
and
ret
mov
or
cmp
shrl
mov
lods
cwtl
dec
xor
repz
fdivrl
mov
push
mov
sub
sbb
movd
cmp
aam
or
push
shll
imul
pop
subb
jecxz
xor
add
fdivs
lock
dec
mulb
popa
mov
cs
pcmpgtb
mov
sub
adc
jl
inc
subl
mov
andl
push
add
adc
adc
or
es
push
pusha
shlb
aaa
inc
popf
push
jmp
dec
xchg
loope
add
and
cmp
dec
cmpl
mov
shll
fwait
sub
je
or
in
or
and
punpckldq
std
fucomip
pop
add
ret
xchg
sti
nop
add
loop
cs
movl
push
sbbl
pop
out
pop
cmp
jbe
adc
jnp
and
or
cmp
and
push
insl
lods
cmp
scas
dec
in
mov
mov
and
aam
push
cmp
pop
fdiv
out
jp
out
mov
les
xchg
xchg
scas
sub
dec
pop
dec
movsb
xchg
int3
xlat
shl
sbbb
fsts
shrl
xlat
jle
je
adc
xchg
gs
lret
aas
xchg
dec
adc
mov
data16
lock
filds
repnz
mov
sub
pop
cld
dec
sub
fildll
out
mov
mov
imul
mov
jo
add
sarb
lahf
clc
add
cltd
dec
push
add
into
int
sub
into
je
xchg
shll
out
sbb
pop
cmp
xchg
fwait
mov
mov
add
fdivp
addl
mov
loope
sti
outsb
enter
icebp
push
aaa
mov
jne
mov
insl
and
fldt
mov
cwtl
dec
adc
subb
inc
adc
les
ds
insb
mov
ja
mov
outsb
cmp
gs
sbb
test
sub
jb
insb
jle
in
das
test
or
leave
jne
test
pop
xchg
jns
out
sub
xor
mov
outsb
ret
test
and
fwait
outsb
jp
xchg
mov
xor
mov
jbe
lea
pop
out
sahf
mov
and
push
mov
stos
fxtract
or
and
loope
psadbw
aaa
popf
cmp
mov
push
in
xchg
push
cmp
lret
orb
int3
inc
and
add
xchg
xchg
test
scas
pop
mov
dec
and
sbb
mov
push
mov
add
push
imul
jl
jp
and
sbb
push
testb
cmpsb
aaa
xor
xchg
cmp
lahf
stos
fdivl
fbld
adcb
sub
push
fst
add
xor
jmp
jl,pt
pop
outsl
xor
pusha
cmp
stos
aas
mov
mov
fidivl
lea
push
lahf
addr16
pushf
and
inc
scas
mov
cwtl
mov
inc
mov
mov
jecxz
sti
jge
fdivl
mov
xchg
or
fidivrs
jg
ret
mov
xchg
add
mov
rorl
xlat
xor
ja
and
dec
rorb
aad
mov
sbb
loopne
out
fcmovnu
in
mov
push
repnz
or
push
jg
adc
mov
mov
lret
sbb
fbstp
push
ja
mov
push
or
push
aam
xchg
ja
mov
mov
mov
or
mov
mov
cmp
lods
and
push
cmpl
or
lcall
adc
lret
call
imul
aad
outsl
clc
adc
data16
jg
andl
fiadds
dec
add
cld
dec
dec
jne
scas
push
mov
pop
xor
pop
cmp
sub
cmp
xchg
lods
push
inc
or
xor
leave
mov
shll
mov
stc
mov
lods
mov
mov
add
outsl
fs
mov
push
pushf
dec
add
adc
les
xchg
jbe
outsl
leave
sub
xchg
fwait
pop
or
movsb
rol
into
cltd
cmp
inc
ds
fwait
out
xor
nop
lahf
mov
pop
xchg
mov
xchg
fldcw
aam
imul
gs
add
lret
fcomp
xor
and
mov
mov
pop
cmp
imul
les
cmc
mov
and
psllq
pop
shlb
loope
sbb
dec
adc
lods
nop
cmp
cmpsl
xchg
test
sarl
fsub
loope
cli
popa
fs
enter
outsb
xchg
lret
mov
mov
mov
xchg
in
xchg
lahf
hlt
enter
or
pusha
lret
insb
js
popa
mov
jne
int
mov
and
cmpsl
in
push
sbb
dec
inc
push
cld
jmp
mov
sbb
jae
sbb
mov
popa
or
testl
adc
xchg
push
hlt
fisubs
imul
mov
jne
dec
mov
add
xor
pusha
push
repnz
ret
les
cmpsb
push
int3
cmp
mov
out
cmpsl
pop
and
stc
cld
jb
inc
dec
scas
cmpb
mov
xchg
push
jne
in
mov
lods
leave
std
cld
scas
add
xor
add
jge
lcall
xor
pusha
and
fcomps
imul
xor
cwtl
les
out
jecxz
data16
push
fldenv
test
mov
cmpl
mov
add
bound
add
cmp
daa
inc
add
or
pop
or
sarl
rcrl
push
cld
sti
cmc
mov
push
enter
xchg
in
loopw
pushf
and
mov
jge
pop
enter
add
fwait
ss
sbb
into
mov
and
push
insb
std
mov
add
sub
jmp
pop
in
addr16
aas
sub
mov
mov
xchg
inc
adc
mov
xchg
cld
xchg
jecxz
popa
cmp
movsl
stc
inc
dec
mov
push
js
xor
pop
cmc
or
les
fidivl
into
sbbb
or
stc
pop
rolb
xor
xor
push
xchg
add
fiadds
lcall
ss
sub
xor
dec
sub
loop
cmc
xchg
mov
dec
fwait
inc
and
push
mov
lret
ret
popf
xchg
fwait
aas
mov
fwait
add
in
dec
add
mov
xchg
inc
das
jne
pop
jl
pop
push
pop
push
xor
dec
ljmp
jne
push
pop
inc
cmp
mov
add
out
push
loope
mov
add
cmp
mov
ffreep
hlt
out
push
mov
mov
shl
or
xchg
dec
movsl
jp
ljmp
call
rol
dec
jo
add
fldl
iret
shl
movsl
xor
lock
pusha
pop
leave
hlt
lock
data16
jne
fcomp
mov
adc
hlt
lea
xor
out
sarl
push
mov
sub
sub
jae
adc
add
repnz
shrb
mov
dec
dec
jno
xlat
ss
xlat
cmp
in
jg
mov
xor
mov
push
mov
out
rorb
fcoms
aas
sub
mov
icebp
leave
lock
xchg
ds
aam
xor
add
xchg
mov
adc
mov
fistpll
lahf
test
stos
mov
sbb
movsl
mov
fsub
fldenv
divl
mov
sbb
adc
in
ljmp
sub
arpl
test
scas
add
add
mov
arpl
xchg
cmc
push
mov
inc
in
test
nop
add
push
out
outsl
adc
mov
add
pop
scas
pop
lods
test
jo
push
mov
movsb
xchg
sub
mov
sti
xchg
popa
inc
jno
mov
shlb
dec
out
ret
movsb
cs
mov
or
hlt
fs
ret
dec
pop
aam
repnz
jne
mov
movsb
sbb
xchg
xchg
and
and
xlat
cli
loop
notb
push
cli
sub
jns
std
push
adc
repz
push
and
mov
sub
in
lock
cwtl
mov
inc
std
add
aas
jmp
mov
sbb
dec
aam
in
int
or
and
in
stos
jno
in
inc
cmp
pop
cltd
sbb
push
roll
pusha
push
mov
lcall
jb
add
mov
jns
shll
out
xchg
mov
push
jae
mov
sbb
adcl
adc
mov
add
scas
stos
inc
repnz
dec
enter
mov
mov
inc
das
dec
lock
jne
imul
xor
mov
sub
movsb
movsb
jl
in
or
das
iret
cs
cmp
into
test
int
ret
adc
aad
dec
jno
ret
lds
xchg
fcoml
gs
and
clc
outsl
mov
push
jg
test
cmp
pop
add
pop
js
and
in
mov
sbb
repnz
and
push
or
insl
in
cld
fbld
cmc
cmp
fmuls
sbb
lods
add
popf
sub
ss
mov
xchg
dec
mov
std
stos
pop
lcall
jg
insl
mov
sub
mov
xor
ret
das
sbb
rcl
inc
jnp
fs
popf
sub
ss
sar
mov
cmp
sbb
and
orb
xchg
and
sbb
cmpsl
out
xchg
std
xchg
add
mov
in
gs
mov
mov
repnz
inc
or
mov
xor
xor
insb
jmp
sub
fidivrs
andb
in
fbstp
push
push
adc
mov
insl
es
aas
adc
cmpsb
shrl
jne
fdivrl
out
mov
cmp
push
cmp
inc
test
sti
jno
mov
mov
cmc
and
xorb
iret
push
sub
cwtl
add
test
pop
imul
test
xchg
or
scas
push
daa
test
lret
inc
icebp
push
test
imulb
sub
pop
fsubl
or
int3
xor
mov
xchg
jmp
sub
dec
lods
hlt
push
mov
fcoms
and
aaa
pop
or
mov
imul
aas
cmpsb
jp
daa
and
icebp
jg
fildll
cmp
sahf
ret
mov
out
test
mov
out
inc
xor
sbb
mov
push
subl
pushf
push
push
ja
cmpsl
xchg
sarb
in
or
cli
cmp
sub
or
test
loopne
leave
movsl
push
mov
hlt
mov
cmp
inc
bound
dec
lods
into
sub
scas
rorb
mov
int
mov
dec
jb
push
sti
pop
push
sarb
mov
adc
pop
shll
push
or
adc
mov
inc
cld
aas
fs
sbb
out
out
adc
mov
scas
mov
insl
inc
cltd
gs
cltd
roll
push
fcompl
mov
scas
mov
xlat
icebp
call
add
pop
push
inc
in
call
add
ret
insl
testl
dec
sbb
xchg
cmpsl
jne
rcrl
inc
mov
sbb
fwait
outsl
test
push
test
outsl
mulb
fiaddl
sbb
mov
mov
outsb
mov
fldt
xor
push
sbb
xchg
int
and
cwtl
aam
mov
inc
sub
sub
dec
push
cvtps2pi
fxtract
pusha
adc
sub
dec
push
cmpsb
repz
insl
repz
sub
jge
cmp
pop
and
dec
xlat
into
shl
stc
fwait
dec
out
dec
sub
sti
and
mov
sub
popa
jecxz
add
fs
cmp
lds
adc
popa
sub
out
sbbl
dec
call
fstl
int3
xchg
cld
push
lahf
arpl
enter
jg
jns
lret
cmpsl
mov
or
clc
xchg
fsubl
pop
pop
or
mov
lods
leave
repz
push
inc
cmpsb
cmpsl
shlb
sti
imul
lea
pop
pop
inc
scas
xchg
cs
and
or
xor
xor
mov
sbb
imul
xchg
cmp
sbb
fsub
jg
mov
movsb
andl
enter
or
adc
mov
stc
xchg
das
fisubs
cmp
inc
mov
cltd
sub
cmpsb
cmc
test
mov
imul
or
push
adc
jne
stos
push
adc
and
imul
xchg
dec
xor
sub
aas
or
jbe
push
lea
pop
hlt
jg
adc
inc
sti
add
mov
lock
in
out
insb
push
enter
je
imul
cmp
adc
shll
pop
daa
sbb
add
insb
jb
mov
mov
pop
les
dec
mov
notb
lahf
je
cmpsl
pop
mov
ret
cltd
push
fisubrl
sbb
mov
popf
nop
in
jno
xchg
and
popa
negb
fidivs
in
xchg
out
and
mov
ret
outsl
rcll
cmp
mov
add
push
xchg
push
js
mov
add
les
jge
lea
in
xchg
dec
stos
aaa
mov
pop
xlat
dec
sbb
loope
mov
in
xchg
and
or
enter
jg
aas
mov
mov
and
cmp
jnp
jno
iret
push
mov
dec
call
or
mov
push
enter
push
xchg
jne
cmp
into
pop
adc
or
fisubrs
pop
in
ret
ljmp
decl
sub
sub
sahf
jmp
sahf
jl
xorb
nop
lcall
repz
pop
mov
or
cmp
push
push
imul
dec
pushf
aad
mov
mov
mov
rol
scas
xchg
pop
fld
lret
mov
pop
jmp
fdivs
add
jne
in
mov
xchg
sbb
fs
int3
stc
enter
roll
mov
outsb
mov
bound
adc
mov
sub
cltd
iret
incl
dec
outsl
add
dec
adc
rcl
sub
pop
push
movsl
xor
es
jno
pusha
mov
xor
push
pop
sbb
cltd
insl
iret
adc
cmpsl
andl
xchg
sub
mov
push
push
jne
daa
fnsave
enter
sub
jbe
insl
sbb
test
js
ficoms
gs
mov
mov
rcl
xor
cmpsl
cmp
sub
jne
movsl
rol
cmp
and
in
shr
jle
test
or
lods
test
sub
in
push
stos
mov
xchg
sub
scas
arpl
test
stos
lods
mov
mov
sbb
ds
push
xlat
mov
jbe
dec
scas
int3
jns
cli
jbe
push
sti
jns
xchg
arpl
jbe
jnp
mov
push
mov
pushf
or
cmovb
add
in
add
mov
clc
inc
push
scas
aaa
rorb
int
jb
sbb
mov
add
mov
out
sbb
xor
add
push
lahf
mov
mov
dec
js
push
std
pop
mov
adc
adc
adc
mov
aaa
xchg
in
addr16
pusha
dec
and
add
adc
xor
insl
popa
sub
cmc
mov
and
push
outsl
pop
inc
cmpl
lds
pop
push
cmc
mul
push
ret
cmc
push
dec
mov
out
cmp
aas
les
push
mov
mov
xchg
stos
jp
jl
mov
faddl
inc
add
xchg
push
cmc
flds
lea
jecxz
je
xor
es
pushf
xchg
shl
std
test
lahf
sbb
aam
lea
sub
fnstenv
ja
pop
push
cltd
jmp
or
outsl
xor
cmp
pop
scas
pop
push
dec
shlb
sbb
xchg
and
shlb
call
cli
jmp
xlat
sbb
lcall
daa
pop
sub
mov
loope
pop
out
add
jne
adc
loop
sbb
jne
gs
dec
lret
sub
lock
cmpsl
aaa
mov
addr16
dec
mov
xor
shl
cli
mov
cmp
mov
mov
jmp
mov
subb
dec
jno
pop
pop
aam
push
push
cltd
xlat
dec
insb
inc
ljmp
cmpsl
sti
mov
add
test
loopne
ljmp
inc
aam
pop
mov
bound
je
nop
fcmovb
inc
add
push
inc
mov
mov
pop
sub
lret
inc
jecxz
cmp
sub
lahf
or
mov
and
insb
cli
cmpsl
xchg
xchg
mov
insb
incl
imul
and
push
dec
jecxz
inc
adc
sahf
scas
sarl
std
subl
inc
dec
inc
sub
sbb
mov
inc
push
rclb
push
sbb
mov
or
ja
aaa
aaa
cmpsb
inc
out
add
mov
or
mov
jae
jns
pop
xchg
xorl
mov
outsb
and
push
or
cmp
lahf
test
mov
test
rolb
sub
xor
loopne
jecxz
dec
idiv
and
push
xlat
das
cli
push
iret
jl
cmp
enter
scas
in
jnp
push
ror
daa
jg
rclb
lea
in
push
mov
daa
loop
data16
adc
push
ret
lods
xchg
fcoms
mov
push
mov
push
mov
shll
xor
mov
mov
popf
std
adc
jns
add
or
dec
cmp
jg
scas
xchg
xor
sahf
pop
or
fdivrp
sub
cmp
or
xor
in
jo
cmpsb
or
stos
jge
dec
pusha
xchg
sub
push
stos
test
pop
dec
imul
inc
lret
ret
fwait
jb
aaa
adc
inc
les
xor
fsubl
addr16
jp
sbb
cmp
sbb
test
mov
movsl
scas
cs
mov
push
adc
xor
add
in
lock
mov
mov
dec
mov
aas
xor
or
pop
lret
mov
jmp
mov
pop
mov
sbb
xor
ljmp
cmp
push
test
and
scas
out
faddp
movsl
push
jbe
xchg
outsl
sbb
mov
sbb
cmp
and
inc
nop
xchg
inc
outsl
arpl
pop
jp
mov
pop
xchg
pusha
ds
or
scas
hlt
and
inc
lea
mov
jmp
inc
pop
das
lods
cmp
mov
stos
mov
mov
cmpsb
mov
test
imul
mov
jmp
rorl
jne
pusha
daa
xor
flds
aas
xchg
lock
jmp
lds
je
out
xchg
loopne
js
push
cmp
mov
mov
and
cmpsb
xchg
jecxz
movsl
mov
mov
and
cwtl
enter
jbe
movsb
push
dec
fisubrs
addl
mov
jae
icebp
mov
in
jo
fadd
xchg
in
pop
xor
mov
add
rolb
cmp
ljmp
push
std
and
mov
xchg
jg
aaa
gs
pop
xor
xchg
cmc
mov
or
cmp
sub
add
sbb
in
jecxz
push
and
jmp
arpl
mov
jmp
or
clc
cwtl
fbstp
add
test
inc
movsl
rorl
push
add
adc
pushl
mov
mov
aaa
xor
push
lahf
gs
lods
adc
lcall
add
xchg
test
mov
aas
mov
imul
and
mov
xchg
adc
int
xor
ljmp
lods
pushf
jl
pop
push
dec
imul
fwait
out
lea
sahf
les
aam
push
mov
xchg
adc
sub
mov
xchg
hlt
push
push
jg
je
jge
mov
xor
jno
iret
dec
dec
out
xor
insb
pusha
sub
icebp
stos
sbb
pushf
mov
mov
mov
cld
rcrl
xchg
sbb
pop
cs
jle
aam
sub
or
or
mov
or
inc
repz
insl
call
or
bsf
mov
adc
xor
ret
pop
mov
hlt
xchg
mov
dec
xor
rorb
stos
jp
hlt
icebp
mov
push
loope
sti
xchg
cwtl
and
repnz
cld
loopne
adc
push
mov
mov
lods
adc
add
in
int3
mov
lret
cmpl
mov
add
push
add
pushf
aad
cmc
dec
jb
adcl
pop
fwait
cmp
inc
test
movsb
or
and
cltd
mov
es
pop
loop
imul
push
mov
fcoml
subb
in
outsb
inc
mov
out
fwait
cmp
decl
inc
jle
xchg
add
bswap
popa
in
jb
inc
loopne
sbb
sbb
mov
or
xchg
mov
rolb
movsb
mov
std
xchg
addr16
jb
pop
js
out
lea
sub
jecxz
int
fwait
cwtl
sahf
test
fbld
mov
ss
fnstcw
and
and
push
ds
push
sub
popa
cmp
jbe
daa
int
fiaddl
ss
mov
rcrl
or
pop
leave
pop
and
xchg
add
push
test
stos
push
outsl
push
int
pushf
xchg
xor
ffreep
sbb
ret
add
pop
movsb
dec
mov
pop
clc
shll
jb
sbb
sub
jecxz
adc
or
mov
call
inc
imul
test
mov
adc
sbb
in
xchg
or
inc
push
stc
xor
stos
add
cmpsl
xchg
aad
out
sti
jl
xor
jb
int3
sub
xchg
sub
jns
fcom
sub
mov
dec
inc
jae
push
add
sbb
ret
rorb
xor
pushf
xlat
cs
std
les
addb
and
out
xchg
and
dec
jle
sbb
addb
xor
cmp
xor
pop
clc
lcall
lods
cld
lock
outsl
adc
popa
fs
movsl
xlat
jns
dec
stos
arpl
xor
mov
cmp
add
push
jno
test
test
ja
test
dec
push
adc
xor
test
adc
daa
addl
pop
lcall
push
push
repnz
or
dec
xchg
xor
mov
push
ds
or
rcrl
dec
enter
and
inc
shl
into
fstpt
push
or
aam
jmp
jp
mov
jo
push
iret
data16
cmp
dec
mov
mov
shl
fistpll
mov
pop
stc
push
xchg
and
push
leave
mov
sub
push
loopne
lock
faddl
popl
jge
ds
xchg
xchg
lret
gs
call
ret
pop
repnz
pop
fs
dec
sbb
xor
cmp
sbb
mov
jb
mov
arpl
in
lods
orl
and
shrb
pop
sti
loop
mov
add
ret
in
xorb
mov
repnz
addr16
sbb
repz
mov
hlt
cmp
jne
xor
jp
cs
rcrb
out
mov
insb
push
scas
mov
mov
or
fildl
xchg
into
mov
pop
int3
push
out
dec
cmp
ret
repnz
loop
es
pop
or
les
push
loopne
out
int3
jno
enter
adc
or
push
cmp
rcl
dec
stc
and
pop
out
mov
pop
dec
adc
dec
loope
scas
sahf
je
inc
cmpsl
cmpsb
mov
pop
inc
inc
xor
in
clc
stos
lret
jne
pop
dec
pusha
and
sub
xor
cmp
cmp
mov
cmp
push
mov
dec
ss
outsb
nop
push
int3
mov
notb
outsl
push
fwait
testb
sub
and
pusha
mov
mov
dec
ret
sbb
mov
in
hlt
xor
pop
sahf
push
ja
xchg
inc
and
mov
pop
push
push
mov
adc
lret
sub
mov
inc
jae
pushf
lods
ds
mov
addl
loopne
jb
push
fistl
out
push
mov
out
lods
sbb
mov
pushf
lret
popf
xor
lods
lods
inc
inc
mov
cmp
ss
pop
mov
fisubrl
call
or
cwtl
dec
inc
aaa
add
movsb
add
fcmovnbe
or
testb
push
les
lods
fisttpll
pop
push
dec
fsubrp
inc
out
xor
pop
pusha
loope
fwait
inc
lock
sbb
sbb
cld
inc
inc
jmp
dec
cmp
hlt
xor
push
inc
add
repz
or
fistps
icebp
xchg
cmp
cmp
data16
into
int
lahf
pusha
sub
mov
dec
and
mov
dec
pop
and
sbb
hlt
clc
test
aam
mov
mov
lods
cli
push
pop
xchg
push
cmp
or
xchg
mov
lock
insl
in
or
ret
scas
outsb
pop
push
cltd
xchg
cmp
in
aad
leave
pop
jp
pop
push
or
push
sub
shlb
jmp
test
xor
scas
mov
ss
and
arpl
lcall
mov
dec
jno
aas
xor
push
push
mov
pop
push
das
push
xlat
mov
stc
inc
cmp
fisubrl
filds
pop
rsqrtps
jae
push
xorl
test
mov
in
testl
sbb
xchg
cmc
xor
inc
aad
ja
aad
inc
xlat
daa
dec
das
sub
clc
gs
shll
outsb
lods
pop
rcrb
fistpl
pop
mov
sub
lods
sbb
cmp
adc
lcall
push
repnz
sub
inc
inc
pop
pop
sarl
es
push
leave
cs
push
adc
and
shr
adc
mov
pop
js
orb
mov
imul
ja
sub
cmp
rcrb
stc
les
sub
movsb
jp
test
and
cmp
insl
lock
sarb
gs
push
inc
jmp
in
insb
js
lods
mov
out
dec
pop
sub
mov
mov
push
sahf
cmp
arpl
pop
xchg
xchg
sub
lds
mov
dec
mov
or
xchg
dec
std
rol
stos
or
leave
mov
jmp
bound
jne
push
push
cld
dec
cmp
mov
out
mov
dec
iret
jl
ljmp
icebp
fadds
fiadds
adc
fcomp
call
jecxz
lahf
mov
mov
pop
and
xor
jle
adc
inc
mov
jge
mov
mov
daa
aam
and
cmp
mov
ss
sbb
out
stc
mov
mov
push
repnz
push
pop
or
pop
mov
pop
mov
sbb
mov
cmp
mov
cmp
or
sub
adc
fisttpll
hlt
popa
aam
addr16
fistps
and
clc
aaa
adcb
in
stos
xor
mov
fwait
or
popa
std
push
xchg
shl
pusha
sbb
mov
push
dec
push
test
xchg
cld
mov
leave
xor
mov
out
xchg
clc
pusha
xor
pop
data16
sbb
dec
or
sarl
fs
in
push
mov
cmc
int
imul
insl
cltd
add
or
push
xor
in
popf
mov
mov
sbb
adc
mov
mov
push
fbld
jmp
mov
movsb
jo
or
lods
jle
mov
sbb
push
mov
xchg
les
scas
mov
mov
cmp
jns
in
push
inc
sbb
dec
pusha
dec
icebp
xchg
jns
or
xchg
mov
std
and
inc
mov
movl
and
pop
add
popf
das
mov
pop
repz
jmp
imul
sbb
imul
mov
inc
fildl
push
hlt
or
jge
clc
and
xor
test
addr16
dec
dec
xor
push
adc
jmp
ds
shlb
cli
lea
rdtsc
add
test
ja
and
ljmp
mov
jg
pop
iret
mov
pop
scas
adc
int3
pop
pusha
add
inc
cmp
inc
inc
hlt
push
jl
ljmp
enter
cmp
testl
repnz
xchg
repz
cmp
sbb
pop
lea
mov
add
or
pusha
push
fstps
mov
jmp
jmpw
testl
jmp
pop
push
xor
test
dec
pop
xchg
xor
push
sbb
jno
aas
xchg
cs
lods
out
sbb
push
iret
cmp
or
mov
inc
pop
iret
xchg
jg
push
or
jp
jae
xor
sub
out
frstor
clc
sbb
and
insb
sbb
aas
aad
push
cmp
ret
and
push
jmp
fwait
or
or
int
rcrl
mov
dec
dec
xchg
mov
fwait
clc
and
stos
jne
imul
in
jl
stos
cmp
in
and
test
dec
orb
in
dec
mov
pop
mov
rorb
mov
idivb
xchg
fidivrl
jb
sub
loop
add
pop
imul
mov
xchg
mov
dec
pushf
push
or
sbb
adc
jnp
sahf
in
movsl
in
adc
mov
pusha
shrl
and
push
mov
hlt
push
push
pop
mov
push
adc
pop
aas
in
call
subb
loopne
pop
push
movsb
pop
out
add
jnp
and
xor
pop
mov
sub
cmp
lds
sti
dec
hlt
sub
jno
inc
bound
mov
sti
mov
fsub
jg
stc
stos
lret
lds
mov
push
dec
fcmovnbe
and
mov
rcll
mov
std
fdivrs
jb
adc
cld
add
aas
aad
xor
add
das
sub
sbb
js
movsb
adc
adc
rcll
jmp
call
fdivs
loopne
cmp
lret
ljmp
nop
lock
mov
nop
sbb
xor
jle
xor
es
loopne
cmp
jge
stos
movl
mov
push
or
jge
out
imul
pop
test
sub
sub
scas
pop
mov
xor
nop
fbstp
test
out
lret
or
xor
or
or
test
dec
pusha
movsb
cmpsb
popf
xchg
cmp
cli
out
pusha
pop
and
pop
push
and
and
das
jmp
mov
bound
push
dec
jl
rcrb
adc
xor
aaa
mov
push
jle
pop
sbb
dec
pop
loope
push
mov
loop
andl
push
ret
dec
jge
fcomp
mov
push
push
sbb
mov
mov
xchg
sbb
mov
rcrb
popa
pop
in
mov
xor
mov
cmp
dec
scas
cmp
mov
into
test
fld
inc
imul
adc
into
jbe
push
in
add
inc
jns
mov
lret
jg
pushf
ret
in
or
sub
or
or
aas
and
or
cltd
push
jl
mov
mov
cmc
xchg
jb
add
fdivs
dec
adc
pusha
imul
idivb
mov
icebp
mov
test
xchg
or
add
jmp
sub
xchg
mov
sbb
mov
inc
repz
xchg
stos
jo
mov
add
addr16
sbb
fsubrp
arpl
xchg
sub
push
adc
fwait
inc
jp
mov
icebp
cwtl
pop
push
outsl
pop
lea
in
in
or
jl
jp
out
fwait
and
movsl
into
xchg
into
iret
jp
add
xchg
push
lcall
int
cmpsb
dec
clc
push
es
sbb
lcall
xor
pop
lea
lods
ss
scas
es
pushf
data16
inc
hlt
sub
adc
addr16
dec
cs
fdivp
push
adc
int3
push
or
loop
pop
subb
popa
mov
pop
xor
or
mov
leave
loop
daa
lret
and
inc
xchg
xchg
data16
lock
sub
testl
insl
movsl
mov
imul
in
xlat
cmp
xorl
ficoms
lret
into
in
cmp
push
lock
je
sub
xchg
ljmp
std
rep
pushf
aas
cltd
push
out
xorl
fisubl
pop
addr16
pop
sbb
fs
pop
lret
test
dec
loope
leave
std
pusha
mov
bound
inc
mov
push
mov
push
cmp
fsts
test
sti
mov
dec
push
lret
pop
imul
movsl
repnz
in
add
loop
push
in
xchg
gs
aas
int3
pusha
and
rolb
sub
or
mov
cmpsb
scas
sub
fcmovnu
or
push
dec
aas
inc
mov
jge
outsb
inc
jb
lret
das
into
ss
mov
in
das
popf
add
inc
pop
leave
fdivl
data16
push
outsl
loopne
xchg
xchg
mov
fwait
and
adc
ja
js
lods
repnz
fsubrp
mov
cli
jmp
inc
int
push
or
lcall
inc
sbb
xorl
dec
pop
sbb
mov
iret
lock
cmp
sub
jne
sbb
dec
push
into
pop
push
clc
pusha
dec
rcl
lea
movsl
lea
mov
fwait
addps
roll
bound
in
xorb
outsl
adc
jmp
sub
cmp
insl
rcrl
les
or
mov
and
jl
pop
into
lods
into
inc
adc
cmp
xor
pop
or
ficomps
outsb
iret
fimuls
shlb
andb
xlat
aam
xor
cmpsl
imul
mov
inc
arpl
cld
xchg
or
cmp
sub
ljmp
inc
in
stc
dec
cmpsb
jl
jae
stc
add
mov
pop
or
xlat
rcrb
sub
push
lods
sub
xor
fsts
or
scas
test
adc
shrb
bound
fidivrl
and
cmpsl
fidivrs
nop
in
daa
in
push
mov
cld
fisttpll
ror
add
lahf
addr16
cmpsb
sbb
jl
hlt
pop
sub
lea
daa
mov
pop
sub
jns
sub
xor
sbb
xchg
lret
shrl
mov
das
addb
and
js
sbb
jecxz
cwtl
sbb
imul
jmp
xchg
movsl
in
pusha
pop
test
jge
rclb
adc
jl
and
add
sbb
fs
pop
inc
cmc
test
mov
xchg
sub
pop
cmp
int3
leave
std
xor
xchg
fildl
imul
aad
inc
sbb
rcl
in
push
mov
mov
dec
and
pop
divl
cmp
scas
add
mov
mov
fiaddl
imul
sub
rcrl
mov
add
insl
xor
or
mov
xchg
push
dec
mov
mov
or
rcrb
testb
add
inc
jno
add
and
aam
int3
rcll
popa
ret
sbb
inc
icebp
fnsave
pop
out
lds
out
inc
lret
pop
int
xchg
sahf
mov
mov
inc
fbstp
fdivrl
es
pop
sbb
test
stos
sbb
mov
adc
pop
mov
orb
mov
leave
push
pop
adc
adc
push
dec
rcrl
or
xchg
outsl
or
mov
dec
and
fisttps
test
jnp
sbb
mov
sahf
fwait
mov
hlt
add
dec
and
sub
andps
or
call
ret
jge
push
push
stos
inc
xor
push
decb
pop
or
mov
or
jb
jne
inc
into
lods
outsl
aas
push
dec
jecxz
in
dec
mov
sbb
mov
stos
pusha
fsubr
pop
inc
xchg
lret
xor
test
les
out
in
ret
add
jle
pop
pushl
insl
cmp
mov
cmp
inc
into
jmp
dec
sbb
xor
leave
clc
dec
repnz
call
es
cmpsb
out
xor
iret
push
stc
pop
ljmp
mov
mov
pop
mov
jmp
hlt
outsl
movsl
stos
test
cmp
pop
dec
push
arpl
movsl
outsl
inc
movsl
hlt
or
dec
sub
gs
dec
and
or
jns
iret
push
or
sbb
inc
jo
pop
sbb
sub
ret
add
mov
mov
cmp
and
adc
pop
lea
imull
fwait
adc
inc
imul
sbb
add
pop
xchg
test
mov
sbb
int3
test
inc
sub
sbb
movsl
mulb
xor
mov
call
sti
movsb
les
and
fdiv
sarb
adc
inc
dec
sti
repnz
sub
sbb
push
dec
or
sbbb
addr16
pushf
fstpl
clc
insb
aam
or
adc
and
hlt
or
jecxz
or
aad
xchg
nop
pop
loopne
out
out
lock
sbb
out
cltd
loop
hlt
and
inc
mov
or
cmp
nop
es
xor
push
fmuls
or
jmp
mov
jo
xchg
xor
aam
cmp
iret
test
subb
and
lcall
fbld
push
dec
push
in
in
cltd
push
adc
cmp
test
xor
mov
push
xchg
pop
mov
aam
dec
xchg
cmpsb
aas
sbb
add
xor
sub
inc
sbb
fbstp
inc
cmpsb
lock
sub
add
inc
inc
clc
pop
popf
xchg
sti
out
cmp
cmp
sbbb
stc
jae
mov
pop
mov
outsb
mov
xor
je
int3
or
rep
or
fsubrs
jne
push
push
push
movsb
cmpsl
pop
test
jmp
pop
mov
dec
add
fadds
jnp
pop
jp
pushf
cmpsl
lds
in
cld
xchg
shrl
insl
out
or
xchg
fs
ror
push
das
pop
movsl
outsl
dec
shrb
cmpl
rsm
or
xorl
add
inc
rorb
int3
std
xchg
cmp
pop
imul
dec
pop
or
mov
push
cs
jle
cltd
ret
jb
daa
mov
sti
outsb
xor
xchg
pop
pop
loopne
adc
mov
cmp
into
mov
dec
adc
mov
lret
cmc
pop
inc
in
insb
pop
stos
jno
bound
les
arpl
ds
loope
leave
inc
jmp
cld
sbb
ja
lret
fwait
cmp
jb
xchg
insb
clc
movsl
out
sbb
mov
cmpsb
dec
xor
int
inc
mov
shlb
push
ret
xlat
adcb
xor
out
rcl
adc
dec
xlat
lcall
lret
xchg
mov
xor
push
jecxz
out
data16
test
inc
xchg
sub
adc
add
aad
push
mov
mov
sbb
mov
out
lea
sbb
mov
imul
loope
cmp
mov
dec
sti
push
or
mov
sar
icebp
imul
push
test
xor
push
jbe
xchg
cli
mov
shrl
sti
cmp
jmp
sub
cmp
inc
pop
scas
mov
in
push
push
loop
adc
dec
adc
xchg
push
push
dec
mov
mov
hlt
je
mov
ror
in
mov
dec
jne
out
cltd
mov
push
mov
push
ret
pop
and
addl
subb
test
push
adc
ds
out
cmp
lahf
cmc
scas
mov
xor
cmc
xor
testl
sbb
mov
push
icebp
mov
lods
xchg
loop
mov
dec
js
roll
push
add
dec
jp
xor
inc
lret
or
inc
dec
cli
idivb
clc
pushf
ficoml
outsl
lahf
and
addl
add
fldenv
in
out
mov
inc
and
jbe
mov
mov
clc
cmp
and
in
xor
int
mov
xchg
xchg
add
mull
xchg
js
or
jae
daa
repnz
mov
pop
cmp
enter
paddusw
into
pop
popa
pop
dec
mov
stos
push
outsb
pop
push
js
aad
jecxz
add
je
mov
int
jecxz
add
mov
jecxz
int
dec
mov
cmp
rep
orl
cs
imul
movsl
out
dec
pusha
stos
jg
movsb
out
daa
mov
mov
add
roll
flds
jne
shr
clc
xor
dec
dec
mov
test
mov
aam
dec
je
push
cmp
adcl
xlat
cltd
push
call
xor
jno
mov
lea
in
test
adc
nop
test
mov
dec
std
pop
xor
popf
in
out
xchg
lods
es
or
sbb
test
test
jg
ret
incl
jae
mov
scas
and
pushf
ja
or
mov
pop
jmp
adc
push
dec
lret
dec
xor
inc
or
fmul
sub
in
lods
push
cmc
jp
add
adc
adc
jb
cmc
push
mov
dec
out
cwtl
mov
or
dec
xchg
cmp
imul
in
adc
test
adc
inc
shrb
push
xor
mov
enter
lret
add
aaa
cmp
bound
xchg
and
and
xchg
mov
outsl
inc
out
ljmp
lcall
outsb
imul
push
ret
flds
imul
jge
push
test
add
gs
jmp
lods
or
sbbl
jno
push
loopne
divl
fwait
test
mov
mov
cltd
adc
adc
push
adc
test
mov
mov
mov
and
lds
and
fidivrs
xchg
add
jg
add
cmpl
pop
insb
mov
scas
and
mov
aad
fcmove
into
or
xchg
iret
aaa
cmpsb
bound
scas
xchg
pop
andb
mov
dec
add
outsl
sti
subl
sub
movsb
js
jnp
jp
aaa
int
movsb
cmpsl
test
test
std
outsb
outsb
and
sub
dec
push
ja
fmull
sub
dec
xor
mov
addr16
iret
or
fwait
sbb
lock
push
ss
idiv
xor
xchg
dec
lods
enter
mov
addl
femms
in
xchg
mov
pop
sbb
mov
iret
pop
outsl
inc
pop
jg
jno
mov
pop
out
dec
xor
push
popl
mov
movsl
jg
nop
inc
cmc
and
movsl
adc
fdivrp
es
adc
mov
lret
mov
roll
test
inc
insl
jge
jecxz
bound
mov
lahf
out
sbb
pop
and
mov
sub
fwait
xchg
ja
aad
jmp
jp
jmp
mov
push
xchg
out
inc
jmp
push
pusha
loope
imul
mov
call
fcmovb
aaa
cmpsb
mov
call
add
or
sub
push
rorl
inc
inc
pushf
adc
loop
je
inc
insb
mov
xor
addb
imul
lret
sbb
popf
addr16
jecxz
pop
push
dec
lcall
add
or
and
out
pop
push
faddl
mov
xchg
ljmp
sbbb
dec
or
mov
push
das
push
jecxz
ss
and
cmp
jecxz
mov
cld
lahf
cwtl
mov
ret
cwtl
insl
sarb
lcall
in
jb
pushf
data16
dec
or
inc
pop
xchg
xlat
cltd
xor
loopne
add
notl
and
pusha
sti
clc
aas
xchg
mov
clc
push
mov
iret
xchg
dec
pop
test
push
out
icebp
insl
clc
sub
mov
int3
sbb
outsl
cmp
mov
testl
xchg
cmc
dec
cmc
and
sbb
aas
mov
je
pop
jb
in
mov
xor
out
icebp
mov
jp
test
push
sahf
xor
xor
mov
push
and
sub
popa
stc
popa
xlat
adc
inc
lods
jecxz
add
push
pop
inc
popa
cmp
pop
sub
mov
lahf
push
inc
in
adc
popf
aad
adc
inc
adc
lods
jecxz
dec
cld
inc
jle
popa
inc
mov
cmpsl
sbb
push
shr
stc
sbb
xor
jne
enter
ja
mov
mov
decl
mov
xchg
and
inc
enter
sub
rcrl
into
xchg
dec
xor
jle
pop
xor
mov
lahf
movsl
repnz
sub
int3
sbb
xchg
mov
in
jmp
mov
scas
push
mov
pop
mov
lods
pop
lret
nop
leave
lods
arpl
fmuls
mov
sub
jp
ficoml
mov
leave
jg
addr16
push
push
adc
add
jl
rorb
bound
lea
and
aad
xchg
setg
stc
push
mov
and
mov
fisubrs
imul
in
aam
cmp
int
and
inc
jge
aaa
fisubrs
sbb
push
mull
jne
cld
mov
sub
mov
ret
in
sub
mov
lcall
adc
mov
xlat
hlt
jns
aad
adcl
movhps
cs
ret
popa
jge
shll
push
xor
or
jl
sbb
jae
mov
sub
popf
or
cmp
dec
sti
aas
push
cmpsl
mov
pop
xchg
push
fldln2
cltd
or
out
mov
push
or
pop
push
data16
out
push
cwtl
sub
sbb
sbb
add
mov
sarl
repnz
movsb
add
pop
andb
push
mov
dec
je
bound
fsubs
std
mov
sbb
int3
in
pop
inc
xchg
imul
jno
nop
xor
lods
int
jp
mov
inc
dec
adc
mov
shrb
sti
or
xor
add
insb
out
xchg
mov
mov
cwtl
pop
cmp
imul
insb
jmp
jnp
xchg
clc
xchg
sub
cmp
mov
andl
pop
jecxz
mov
add
sbb
in
pop
inc
add
repz
and
and
mov
sbb
int
jb
jns
pop
inc
pop
test
mov
clc
and
jo
ficoms
jbe
push
or
sbb
aam
pop
nop
lods
std
sarl
push
loope
icebp
pop
mov
dec
mov
mov
mov
xor
rclb
mov
into
dec
jp
and
sub
dec
push
sub
ds
jmp
daa
int3
rorl
adc
pop
into
add
clc
shrb
sub
push
fs
mov
out
sbb
adcl
adcb
adc
js
pushf
mov
dec
loope
xlat
jbe
repnz
std
xor
bound
aad
and
jg
pop
cmp
mov
xor
dec
push
lret
mov
shll
xor
mov
push
push
push
inc
jnp
faddp
cmp
jns
rclb
mov
mov
scas
orl
shrl
cmp
push
es
std
inc
jge,pt
and
test
ja
pop
jae
in
in
add
sub
pop
sti
mov
push
test
sbb
jno
xchg
clc
es
and
cwtl
add
mov
aad
test
ficomps
mov
sub
in
mov
add
dec
cs
add
or
pop
lods
lods
cmp
mov
bound
ret
cmp
insl
push
inc
mov
xor
cmp
add
insl
cmp
in
outsl
cmp
sar
adc
pop
and
push
mov
push
aas
sarb
dec
cmp
cmp
add
mov
fbld
imul
fdiv
test
aad
and
and
js
mov
cmp
adc
xchg
ret
icebp
negl
or
addr16
mov
int
pop
sub
neg
jl
adc
jo
data16
jecxz
adc
xchg
lahf
movsb
cmp
cmp
jmp
imul
addl
jns
jmp
dec
lock
jnp
add
or
sub
in
mov
and
out
test
repnz
push
mov
aam
push
inc
push
je
lcall
in
inc
ja
pop
add
in
ljmp
fbstp
mov
scas
imul
test
or
cmp
scas
lcall
xlat
pop
sti
add
stos
lock
data16
jg
mov
push
jb
pop
cmp
aaa
or
and
mov
sbb
daa
add
cmp
movsl
stos
outsl
lods
lret
out
cvtpi2ps
xchg
cmp
xchg
roll
imul
jmp
xorb
in
cs
jo
out
rclb
adc
and
mov
subl
testb
scas
push
mov
ds
pusha
xor
push
dec
lcall
sti
stos
xor
and
fs
sbb
inc
inc
insl
cli
adc
xor
or
sub
cs
pop
repnz
ljmp
mov
lret
pop
les
ljmp
inc
xor
cmpsb
mov
bound
es
mov
cmpb
mov
std
push
imul
sub
movsb
cmp
popf
or
cli
dec
xor
insl
push
push
cmc
pusha
ds
jae
pop
movsl
xor
ljmp
sti
mov
add
stos
mov
pcmpeqd
fmul
insl
mov
pop
fwait
pmaxsw
pop
int
and
jl
test
insb
mov
add
cmp
in
adc
fnstcw
scas
jl
xor
scas
das
shrb
loop
push
daa
loopne
jge
mov
push
ror
mov
scas
scas
add
stos
push
scas
dec
dec
mov
push
mov
xor
xchg
mov
stos
pop
gs
jne
jb
rdmsr
daa
rcrl
outsl
jecxz
ret
in
mov
in
or
fdivs
int
lcall
cmp
jne
inc
pusha
fldenv
xchg
repz
jb
mov
movsb
out
inc
and
rcrb
subl
lret
daa
andb
push
fdivrp
push
scas
test
pop
cli
fsubrl
sbb
sub
mov
iret
inc
stos
fcomps
mov
into
inc
inc
sbb
das
and
lds
jns
insb
jae
fisubrl
add
shlb
lods
hlt
jge
js
and
adc
js
sub
fldcw
inc
lret
mov
insl
mov
add
cmc
ss
int3
push
mov
outsb
shlb
out
mov
mov
adc
inc
and
ficoml
pop
in
shrb
pop
mov
andl
mov
sar
nop
adc
sub
mov
scas
add
fwait
jecxz
mov
inc
lret
jmp
cmp
jo
dec
movsl
scas
shlb
dec
jg
out
or
xchg
data16
je
pop
out
mov
push
sahf
cmp
test
cwtl
lds
dec
fisubs
pop
jmp
sub
mov
mov
push
aaa
inc
dec
roll
sbb
or
and
xor
adc
sub
add
push
movsl
jne
cmp
leave
adc
in
rolb
sbb
pop
and
clc
ret
cmp
lods
or
jmp
out
adc
xor
mov
test
insl
cli
jge
mov
sub
push
in
cmp
adc
cld
mov
add
sub
gs
flds
sub
xchg
add
mov
dec
or
and
or
or
adc
fcompl
rcll
andl
mov
mov
cmpsb
push
imul
pop
push
mov
or
lea
out
fsubs
jae
mov
sar
inc
push
mov
pop
and
les
inc
cmp
and
enter
adc
aam
shll
bnd
sub
or
sbb
sbb
mov
ja
push
or
outsb
cmp
sbb
jb
int3
test
icebp
mov
mov
sub
in
dec
int
into
mov
xlat
test
in
mov
sarb
add
repnz
jl
into
cmp
in
test
push
push
dec
fistpl
cli
mov
dec
movsl
inc
push
xchg
xor
cmp
cld
cltd
cmpsb
into
or
jle
in
stos
call
cmp
xor
sbb
sbb
inc
add
mov
daa
push
xchg
clc
popa
cmp
fcomip
enter
dec
andl
dec
loope
jmp
popa
inc
xchg
jae
pop
stc
shr
mov
pushf
es
jnp
roll
in
xchg
adc
xchg
nop
in
lods
push
int
mov
mov
pop
cld
xchg
xor
ljmp
arpl
and
jp
mov
jecxz
mov
cs
xor
adc
int
fmuls
sub
popa
inc
push
cmp
xlat
addr16
enter
mov
push
loope
mov
inc
mov
mov
and
jmp
cmpsb
sub
cwtl
cmp
imul
pop
or
out
mov
aad
dec
psubb
adc
rol
cmpsb
sahf
insl
out
dec
jge
mov
popa
je
insb
fsubrs
jae
leave
mov
mov
dec
xchg
sarb
or
cwtl
lods
push
andb
pop
dec
add
jne
dec
sbb
sarb
sti
mov
and
stos
cmc
jge
jb
or
loop
ret
add
lret
push
lods
test
mov
repnz
mov
or
negl
pop
inc
or
mov
cmpsl
cmp
cli
jnp
sbb
fwait
add
fdivrs
mov
sub
xor
mov
fwait
out
xchg
cmp
rorb
pop
repnz
dec
arpl
ljmp
add
dec
xchg
mov
push
addr16
cs
jg
int3
mov
cs
imul
std
mov
imul
js
sti
lahf
xchg
sbb
pushf
add
test
arpl
lods
clc
dec
adc
subl
pop
xlat
int
loop
div
fistps
subl
fstpl
pusha
in
rorl
cmp
outsb
sub
aas
mov
nop
je
push
push
sbb
xchg
fdivrl
mov
push
push
dec
cmp
lock
and
jg
cltd
test
jp
or
movsb
fcomip
xchg
and
mov
cmp
arpl
mov
push
iret
mov
cmp
pop
js
fdivp
fcomp
push
repz
cmp
testl
and
scas
jbe
xchg
xchg
inc
out
jge
mov
push
sbb
dec
bound
mov
dec
inc
cmp
mov
mov
hlt
and
xchg
mov
popa
movsl
jnp
daa
mov
sub
mov
xor
movl
jp
mov
pusha
or
adc
add
sahf
cs
sub
sti
adcb
stos
hlt
sarb
pop
mov
xor
mov
out
pop
das
aad
inc
and
pop
sbb
add
or
cmp
mov
cwtl
push
sub
jno
pop
fldcw
mov
cmp
mov
pop
pop
xlat
ret
xor
pop
jmp
or
in
mov
and
movsl
push
inc
mov
aaa
ja
mov
mov
dec
xchg
sub
lods
ljmp
lock
testb
fidivs
in
arpl
and
fimuls
ficomps
adc
cmp
lret
adc
les
jb
adc
lret
pop
push
adc
or
je
mov
add
ljmp
mov
xchg
push
jmp
sbb
sbb
sbb
jo
dec
out
pusha
xor
mov
inc
mov
or
xchg
pop
sbb
scas
mov
mov
push
repz
push
pop
popf
inc
mov
sbb
mov
fdivrp
add
xchg
lret
jl
adc
fcomip
cltd
jne
xor
repnz
sbb
cmp
inc
pushl
and
push
inc
inc
cwtl
in
sub
lret
rol
mov
jbe
nop
xchg
fwait
sbb
loop
cvtpi2ps
or
add
jmp
or
sbb
or
push
dec
pusha
add
adc
mov
add
xor
sbb
mov
jbe
outsl
fistps
lock
jge
fimuls
sbb
out
cmpsl
jle
add
pusha
test
jl
mov
mov
xchg
js
push
arpl
je
pop
jo
std
outsb
xor
cltd
adc
mov
ds
pushf
jmp
mov
sarb
and
sub
xor
andb
mov
cmpl
or
nop
adc
mov
pusha
jo
dec
stos
pushf
lods
xchg
popl
fistpl
pop
cmc
lret
add
ljmp
sub
cld
or
insl
pop
test
jns
cs
imul
daa
gs
cmpl
jnp
lahf
add
mov
loope
adc
test
imul
call
call
pop
dec
scas
out
mov
lss
cmp
in
outsl
add
cmp
push
or
jno
aad
fcmovbe
shlb
rorb
dec
imul
jmp
push
decb
test
repz
or
cmpsl
int3
jle
pop
xlat
fisttpl
lcall
dec
inc
mov
fistl
inc
jp
xchg
adc
pop
andb
in
fmuls
mov
mov
dec
cs
repz
test
outsl
xchg
mov
ss
push
bound
cmp
lea
addr16
out
xlat
jmp
in
les
rolb
leave
jo
test
aas
test
add
pop
dec
out
pop
xchg
mov
movsb
mov
les
in
outsl
inc
push
sbb
xchg
mov
add
repz
bound
sbb
xor
xchg
fwait
out
sub
outsb
jmp
xchg
pop
inc
pop
mov
mov
or
cltd
cltd
rcrb
out
dec
xchg
mov
jl
mov
jmp
adc
mov
in
int3
es
pop
call
mov
mov
ja
xchg
xchg
test
mov
push
mov
insb
outsl
sbb
je
inc
lret
push
lret
jle
xchg
push
loop
ja
jmp
jecxz
lret
xchg
lret
scas
stos
adc
aam
imul
push
imul
out
sub
cli
mov
or
jecxz
sbb
adc
jo
arpl
pop
cmp
ss
mov
fisubrs
pop
or
fcom
mov
mov
mov
stos
repnz
mov
inc
cmpsb
mov
pop
test
test
and
stos
dec
mov
mov
fsubs
mov
fcoml
and
and
pop
sar
fs
aaa
loop
sbb
shrl
and
push
pop
or
xchg
popa
fdivl
sub
mov
enter
jmp
mov
loop
ret
jne
push
mov
or
sub
inc
cwtl
and
cltd
dec
xor
xor
test
and
sub
jp
stos
and
dec
pop
inc
lods
or
jno
mov
push
jmp
in
sbb
ja
pop
mov
and
ljmp
fidivl
xor
push
adc
pop
jns
mov
cmp
cmp
mov
out
repnz
inc
stos
mov
and
jnp
pop
inc
lret
adcl
vpxor
mov
inc
add
jns
loopne
xchg
xchg
mov
add
insl
push
push
xorb
jae
sarl
pop
ss
gs
int3
pop
imul
call
ljmp
sbb
out
out
ret
xlat
xor
pop
mov
adc
push
ljmp
ja
push
mov
xor
xor
xorl
test
and
pop
mov
xchg
mov
or
mov
pop
mov
iret
sbb
push
jo
imul
xchg
repnz
pop
cmp
push
dec
loop
aam
mov
and
shl
in
and
enter
push
push
push
sub
sti
or
divb
aaa
sbb
stos
hlt
xor
mov
jae,pn
lds
xor
pushf
xchg
or
roll
loopne
pop
pusha
jle
or
sbb
mov
dec
push
add
pusha
in
popa
sub
cmp
inc
test
mov
pop
inc
ret
lock
aad
test
in
push
outsb
and
and
popf
jne
rorl
sbb
ret
push
push
cltd
sbb
jg
pop
cmp
adc
push
es
leave
enter
jl
cmp
cmp
dec
sbb
movsb
inc
mov
std
test
jb
or
mov
xorl
xor
push
scas
and
and
stos
pop
adc
push
cld
jmp
flds
jo
mov
mov
mov
arpl
call
cmpsb
pop
cmp
or
jns
shlb
jb
notl
add
jnp
imulb
stos
or
js
xchg
pop
repz
stos
cmpb
adc
push
nop
cli
jae
xor
mov
and
jo
mov
je
cmp
add
inc
test
mov
xchg
mov
sub
lds
xchg
xchg
sub
sub
xchg
stos
mov
pop
xor
pop
imul
flds
jp
push
add
mov
imul
stc
imul
pop
jge
faddp
pop
cmpsl
outsl
or
adc
jle
ss
fs
mov
xchg
add
mov
push
or
add
cmp
sahf
js
ljmp
cmpsl
leave
bound
xlat
dec
cmp
or
divl
mov
mov
pop
mov
xchg
sbb
mov
jbe
jo
cli
add
inc
xor
xlat
outsl
pushf
jp
xlat
cld
repz
in
add
gs
or
out
nop
xor
aam
cmp
pop
aas
leave
imull
mov
mov
and
ljmp
iret
cmp
sbb
lret
and
lret
test
in
and
xchg
pop
addl
adc
mov
sub
dec
mov
jecxz
or
xchg
cmpl
mov
imul
jmp
std
mov
mov
jb
inc
aas
out
or
xchg
mov
and
in
inc
fnstenv
add
repnz
push
mov
lret
rcl
lods
ds
adc
stc
aad
lea
fnstsw
movsl
into
dec
or
daa
adc
xchg
sarb
stc
es
inc
mov
int
xchg
loope
js
gs
in
imul
pop
xchg
test
xor
and
mov
sbb
test
daa
sbb
loopne
push
dec
loop
xor
aaa
xchg
clc
lahf
test
cmpsl
decb
repnz
ficomps
pop
mov
inc
or
xchg
jb
lahf
inc
dec
mov
clc
jmp
xchg
fdivl
and
dec
je
fadd
xchg
es
out
test
test
lods
aam
pop
js
pop
aas
mov
ret
js
in
xchg
sbb
cmp
aad
rol
stc
das
push
aad
and
inc
ffreep
xchg
shlb
arpl
add
nop
cs
xchg
and
lods
xchg
adc
lods
pop
shll
dec
lds
dec
enter
xor
jnp
cmp
iret
js
call
inc
mov
pop
ja
into
inc
gs
stos
xor
notb
daa
push
dec
or
and
mov
sahf
hlt
mov
ja
inc
loope
push
jb
jns
xchg
sub
push
cmpl
call
ljmp
pop
add
lods
or
add
push
xchg
fists
movsb
sub
jge
aad
xor
sar
cmpsl
imul
cmp
cmp
test
add
adc
pop
in
xchg
ja,pn
sahf
pop
jb
push
nop
add
in
mov
scas
mov
enter
sbb
xor
mov
imul
sbb
xor
movb
pusha
and
inc
hlt
imull
hlt
sbb
sbb
and
mov
test
repz
xchg
int3
inc
cli
pop
pop
in
and
cmp
cs
sbb
mov
pop
add
or
pop
sub
or
in
pop
stos
lods
or
push
sbb
push
cs
jbe
jecxz
mov
jg
jne
aaa
pop
popa
xchg
fldenv
pop
mov
fcos
scas
push
in
push
push
dec
aam
and
jmp
xchg
push
fisttpll
xchg
aam
int3
mov
push
xchg
add
jmp
inc
sub
lods
push
or
js
lds
aaa
out
stos
fisttps
dec
mov
xchg
aaa
imul
fdivs
outsl
pop
pushf
ret
mov
mov
jmp
clc
xchg
sub
lret
xlat
imul
xchg
mov
dec
fwait
push
ret
push
xor
jb
scas
cmp
out
pop
and
popf
sarb
nop
stos
adc
sti
push
lea
fsubrl
shr
addb
dec
mov
lcall
mov
faddl
xor
pop
imul
dec
js
add
sub
jb
movsb
xor
sar
ja
test
lret
inc
clc
orb
add
mov
mov
fisubrs
sub
adc
adc
out
in
aad
fistps
xchg
dec
repz
xor
add
in
pop
push
in
or
pushf
sub
pop
pop
hlt
push
ret
inc
popf
jle
sti
aaa
inc
bound
mov
lods
jne
add
mov
mov
mov
jle
mov
sbb
push
dec
push
icebp
sbb
shrb
xchg
push
scas
sahf
les
out
jnp
mov
je
cltd
dec
push
fucom
pop
shlb
mov
leave
lods
adc
push
mov
dec
outsl
cmc
dec
sbbb
mov
add
xchg
xchg
mov
add
inc
scas
ffree
sbb
and
outsl
and
pop
dec
push
mov
adc
fcoml
xor
fchs
aad
and
mov
rorb
movsl
pop
movsb
jo
imul
mov
ja
cmc
loopne
jge
jno
jmp
out
sub
and
sub
gs
in
add
or
dec
shlb
mov
ja
xchg
scas
push
incb
jbe
adc
jmp
dec
add
cld
mov
ja
mov
dec
push
sbb
push
cld
stos
jp
and
xchg
repz
pop
out
adc
cmp
cmpsb
sub
imul
xchg
in
add
mov
pop
dec
addb
and
sarb
sub
cmpsl
sti
push
sbb
mov
mov
jle
scas
adc
pop
test
push
pop
or
iret
pop
mov
jp
sub
add
adcb
and
add
imul
inc
adc
cli
pushf
xor
and
shr
cmp
pop
adc
push
add
lods
daa
pusha
sbbl
xchg
xor
gs
sub
nop
push
scas
cmp
mov
rorb
mov
dec
jb
or
shll
ret
cld
shll
pushf
adcl
frstor
fwait
imul
dec
or
add
jmp
and
dec
xchg
jmp
je
inc
push
push
insl
aad
adc
jb
push
jp
push
shll
test
pop
scas
dec
pop
cmc
cli
push
push
call
xlat
or
fsubr
ja
iret
mov
sub
xlat
in
sub
stc
or
lea
dec
xchg
in
mov
push
sti
push
sti
xchg
sbbb
shll
xchg
decl
mov
pop
mov
mov
imulb
xor
cmpsl
mov
or
mov
stos
arpl
push
push
xchg
cmpl
test
push
push
adc
and
add
popa
sub
fs
mov
jmp
insl
pop
pop
sarl
jl
daa
sub
fwait
rorb
xchg
sub
dec
push
pop
xchg
jbe
inc
xchg
insb
or
sbbb
stc
fidivrl
fstpl
cwtl
ror
xchg
and
out
fsts
inc
jb
or
orl
outsl
mov
adc
mov
cmp
pop
ja
int3
filds
xchg
jns
test
lahf
jae
xchg
std
add
movq
jae
adc
push
cmp
ljmp
push
test
jae
mov
repz
rol
lret
mov
mov
pop
xchg
add
adc
add
xchg
clc
int
nop
sbb
mov
mov
test
or
int3
push
adc
insl
test
aam
stos
lods
cli
and
js
and
inc
movsl
lea
ss
nop
lods
pop
pop
fcmove
xor
cmpsl
stos
rcll
dec
adcb
adcl
pop
int
xchg
adc
sahf
pop
push
das
mov
lods
jp
add
fwait
loope
ss
in
adc
lds
jns
in
pop
imulb
push
mov
sub
repz
cmpsb
sub
hlt
push
inc
cmpsl
add
sub
notb
inc
pop
adc
call
dec
cli
adc
xorb
mov
hlt
sub
in
icebp
fcom
sbb
inc
notb
mov
dec
pop
sub
dec
fidivl
xorb
pop
int
mov
jle
xor
xlat
push
pop
into
cmp
inc
test
pop
jmp
push
mov
xor
dec
xor
pop
fisubrs
inc
lods
faddl
test
call
inc
add
lret
mov
aam
rorb
das
lcall
adc
cmp
mull
orl
outsl
sarb
sti
push
cltd
addr16
jp
push
push
push
call
pop
nop
imul
jo
cmp
inc
dec
jae
cmp
dec
negl
mov
jnp
lea
cli
dec
pop
out
insl
jne
mov
push
in
int3
dec
pushl
mov
outsl
clc
add
pop
inc
xor
rcrb
int3
push
mov
pop
cmp
xchg
pop
aam
subl
es
je
out
and
xchg
mov
stc
pop
cmp
lods
fdivs
cmpsb
mov
mov
xor
pop
mov
cmp
cltd
xlat
testl
mov
loope
xchg
rcl
or
jnp
popa
lret
loop
lds
xor
sbb
push
mov
and
subb
add
xor
jnp
lds
mov
shlb
hlt
xchg
xor
enter
mov
fisttpl
adc
sbb
pop
cli
addr16
xchg
push
call
add
shl
mov
xchg
les
mov
and
cmp
mov
xor
fisubrl
adc
jo
pushf
and
xorl
xor
cs
inc
int3
jle
add
pop
jge
inc
std
rcr
sub
inc
and
xor
hlt
dec
lods
mov
sahf
adc
cmp
pop
push
pop
xorl
adc
arpl
ljmp
push
push
leave
jne
mov
xor
outsb
cmc
icebp
repz
inc
faddl
jno
xchg
mov
nop
leave
subl
outsl
pusha
pop
ret
aad
cwtl
xchg
testb
mov
cli
popa
ds
xor
and
dec
or
mov
jmp
or
lods
das
jb
cmp
es
add
adc
sub
iret
jne
push
and
push
call
stos
xor
out
dec
lods
mov
jp
add
jmp
xchg
adc
fmuls
dec
out
jge
jp
fsubl
push
lods
das
mov
xchg
aad
cmpsl
sti
hlt
int3
shll
jnp
int
lcall
xchg
add
aas
repnz
pop
leave
data16
test
xor
or
sti
fnsave
into
and
ss
mov
lods
cld
or
push
scas
aad
jmp
test
test
cld
push
icebp
pusha
lock
scas
jae
xchg
sti
push
mov
sbb
and
jmp
sahf
std
test
xlat
idivl
flds
outsb
dec
out
adc
lret
lret
das
pop
sti
scas
mov
add
xor
inc
push
fwait
dec
js
inc
dec
rorl
add
jecxz
gs
xchg
ret
addb
in
mov
ljmp
pop
aaa
aaa
sub
dec
fmul
inc
shlb
repz
dec
icebp
fimuls
loopne
jns
int
xor
xchg
xchg
out
xor
inc
push
rolb
xchg
jmp
hlt
test
fs
lcall
xor
idiv
mov
or
xor
or
fidivrl
sub
adc
shlb
std
inc
sbb
aad
loope
mov
loopne
inc
mov
sub
aad
push
ret
push
or
add
sahf
xor
push
cmp
test
and
lret
and
cmpsl
or
sbb
pop
outsb
btc
mov
adc
add
inc
test
push
es
and
lcall
daa
push
jg
leave
aam
sbb
sbb
arpl
sbb
jnp
rep
push
xchg
sub
mov
xchg
pop
xor
xor
ret
mov
push
xlat
fisubl
inc
cmc
jp
divb
inc
xlat
scas
fisttpl
xchg
push
mov
push
lods
fwait
insl
sub
in
xchg
sub
jl
lods
fwait
pop
imulb
insl
andb
or
sbb
out
cltd
xchg
pop
pop
jnp
jno
ljmp
mov
ljmp
mov
mov
sarb
sti
inc
rcrb
push
aaa
or
mov
adc
pop
sbb
hlt
sarb
flds
je
filds
inc
mov
pushf
popa
mov
dec
sarb
jo
es
xchg
mov
rcrl
push
push
pop
mov
movsl
xor
pop
aas
test
mov
aas
cld
pop
out
sub
xor
mov
cmp
push
mov
mov
stos
add
or
jno
fdivrs
jnp
or
xor
in
sbb
xchg
inc
andl
cmc
stos
outsb
mov
into
lahf
sub
aam
cmp
out
mov
icebp
adc
sub
mov
mov
shl
mov
adc
hlt
pop
xchg
aad
sbb
in
ret
mov
mov
inc
inc
sti
pop
xor
out
mov
pop
sbb
movhps
mov
stos
lcall
cmp
incb
pop
pusha
add
adc
imul
add
xor
or
jg
pop
sysret
jo
daa
jmp
jl
jge
mov
in
mov
sub
icebp
mov
sbb
push
xlat
js
sub
inc
pushf
loope
mov
leave
push
push
iret
fldcw
in
stos
or
addr16
sub
dec
mov
xchg
aaa
xor
cmp
cmp
insl
ficoml
ss
adc
lea
fldlg2
pop
imul
stos
in
add
sub
add
xor
mov
sbb
adc
imul
cmp
lahf
mov
std
mov
pop
and
lods
leave
std
jnp
push
xchg
xlat
clc
rcrl
daa
xchg
iret
test
test
lret
mov
pop
push
xor
jecxz
mov
iret
int3
add
or
cld
popf
adc
add
movsb
mov
xor
sub
out
js
lret
iret
mov
sbbl
scas
add
push
or
jge
mov
dec
bound
mov
dec
adcl
adc
adc
test
pop
fsubl
push
shll
jp
jle
popa
lock
mov
loop
in
dec
dec
orl
loope
push
jnp
shrl
lea
mov
xchg
clc
arpl
jae
jecxz
pop
ret
jb
lock
aaa
insl
xor
nop
push
gs
ja
jmp
insb
cmp
xchg
call
rcll
test
pop
dec
je
adc
or
mov
fwait
outsl
shll
adc
sbb
sahf
or
sub
xor
mov
adc
or
cmpsl
jnp
or
xor
mov
ret
push
sahf
pop
out
aas
popa
sub
ficompl
mov
lods
mov
adc
push
insl
int
insb
jp
xor
insb
add
clc
lock
jge
and
cltd
cltd
ret
enter
adcb
pop
out
jge
mov
popa
rol
insl
shlb
dec
mov
mov
cmp
or
test
insb
inc
les
push
and
xlat
std
repnz
ja
mov
out
inc
jg
jecxz
mov
cld
inc
lret
push
inc
sbb
pop
mov
rcrb
int
ljmp
sub
std
and
mov
out
jle
sub
fwait
jmp
clc
data16
jmp
insb
loopne
data16
movsb
sub
pusha
xchg
loopne
gs
outsb
shl
xor
insl
sbb
jge
xchg
nop
push
xchg
popf
cmp
aam
dec
repnz
cmp
les
jo
int
loope
inc
xchg
ret
aam
adc
sbb
sub
pop
push
inc
push
xor
cli
inc
xlat
ljmp
inc
adc
xor
xchg
add
sbbl
push
xor
cmp
inc
and
dec
scas
fstl
cmp
aaa
cmp
cmp
and
arpl
out
out
repnz
adc
push
orb
mov
dec
es
push
xlat
in
and
jbe
popf
fldl
or
aad
inc
jne
btc
sti
jmp
sub
addb
adc
jo
adcl
into
stos
std
aad
xchg
add
loope
cmp
repz
mov
cmp
hlt
sbb
add
jns
movsb
mov
mov
pop
jg
into
mov
movsb
rcrl
or
dec
pop
pop
dec
aad
rorl
les
into
lret
out
scas
jnp
cmpsb
push
lea
pushf
loope
xchg
adc
popa
xchg
jb
dec
stos
call
dec
out
test
jecxz
es
sub
fstl
cmp
aad
scas
lock
aad
int3
sbb
fcoms
vunpckhps
and
fstpt
push
stc
xchg
lods
sbbb
and
mov
sti
das
insl
in
lret
inc
sbb
pop
pop
mov
aaa
mov
dec
mov
sub
cmpsl
or
loope
adc
pop
xor
inc
lahf
arpl
pop
aas
es
inc
in
test
add
mov
jg
mov
mov
fwait
pop
mov
cltd
mov
mov
adc
push
xlat
inc
jne
inc
push
outsl
jno
nop
repz
mov
inc
pusha
adc
mov
pop
jno
jbe
movsl
cmp
pop
pop
push
mov
sahf
movsl
add
notb
stc
int
jo
icebp
pop
or
dec
inc
test
inc
jl
out
xchg
lds
cmp
gs
das
add
ror
bound
jecxz
pop
stos
in
jnp
cmpsb
or
jg
stc
pop
xor
ret
add
mov
fadds
dec
pop
sub
stc
int
adc
inc
rep
pop
sbb
cld
cmp
xchg
cltd
xlat
mov
jmp
pop
and
out
cwtl
loopne
push
sahf
mov
popa
scas
pusha
xchg
xchg
and
xchg
xchg
insb
mov
and
sub
lods
pop
xor
xor
setl
nop
push
in
rcrl
lahf
mov
xor
push
lods
incl
cmpsb
dec
dec
int3
jb
pshufw
dec
cld
mov
mov
adc
call
das
push
or
adc
pop
not
pop
mov
lods
nop
cltd
sub
ret
cmp
pop
dec
popf
xchg
loope
ljmp
fsub
idivl
insl
pop
aam
mov
sbbb
sbb
sbb
fimull
int3
xor
clc
fimuls
inc
sbb
pop
and
sbb
insb
jnp
orl
ret
jnp
jmp
pop
adc
adc
ret
sbb
and
bound
mov
push
mov
jge
bound
pop
popf
xorb
push
xor
popf
cmp
jbe
cmp
add
das
leave
cltd
inc
mov
fsubr
lahf
add
mov
or
aam
pop
mov
data16
lahf
jp
pop
aaa
repz
cmp
sbb
cli
dec
dec
xor
push
cli
adc
xchg
test
cmp
lret
addb
xor
daa
lcall
mov
das
mulb
add
pop
mov
lock
daa
mov
sub
fidivrl
jb
sub
outsb
inc
push
popf
ja
fbld
js
pop
addr16
mov
inc
out
test
adc
mov
xchg
in
sbb
scas
add
pushf
or
lds
jl
imull
pop
shl
inc
cmp
mov
jge
and
test
mov
jb
mov
dec
sub
mov
mov
lock
push
xchg
call
and
inc
pop
add
aaa
repnz
popf
faddl
xchg
int3
daa
rolb
inc
cmpsl
in
rcrb
cwtl
jl
jmp
push
lret
pop
or
jg
adc
addb
sar
mull
mov
push
mov
ljmp
ds
incb
sti
test
mov
shll
cmp
movsb
mov
pop
jl
movl
das
mov
push
mov
js
inc
jmp
iret
mov
daa
mov
inc
lcall
mov
test
dec
int3
pop
jmp
lahf
push
int
inc
dec
mov
in
cmp
shl
das
scas
cwtl
jae
movsl
jnp
hlt
jle
xor
jp
lahf
mov
out
jnp
sarl
sub
pop
mov
push
or
sbb
lcall
add
mov
aaa
dec
jge
jb
xor
mov
push
adc
call
adcb
lret
mov
inc
imul
vdivss
fldenv
lret
data16
mov
movsl
outsl
push
rorb
movsb
xor
test
insl
jb
mov
inc
bound
jbe
inc
pop
cld
cmp
sub
mov
hlt
hlt
cmp
xchg
dec
or
and
insl
cmc
fisttpl
in
xlat
cmp
mov
shrb
mov
mov
ja
pop
inc
repnz
add
test
sub
lods
pop
push
rol
inc
mov
shll
hlt
sbb
sbb
rolb
push
and
outsb
mov
mov
and
cld
flds
lret
negl
sarb
jecxz
insb
mov
jbe
ljmp
xor
sarl
jmp
fidivl
jecxz
lcall
dec
pop
jge
jle
push
xorl
cli
inc
inc
jmp
popa
cmp
xchg
jno
lods
xor
ja
dec
cld
sar
popf
sub
pop
stos
cmpsb
subb
adc
enter
sbb
ja
inc
xchg
repnz
pop
sub
lret
loopne
xchg
cwtl
mov
mov
dec
xchg
loopne
mov
test
mov
aas
xlat
push
mov
inc
adc
jb
neg
dec
push
int
enter
movsl
mov
pushf
out
mov
push
aam
popa
dec
adc
mov
imul
adc
je
ljmp
push
lcall
cs
lret
int3
cmp
out
cmp
mov
pop
jge
inc
add
xchg
aam
ret
mov
dec
lcall
add
mov
pop
pop
push
xchg
xchg
pop
lods
fwait
xlat
push
fisubs
sub
xor
mov
push
xor
or
not
push
pop
ja
xchg
test
sbb
xchg
xlat
outsl
stc
xchg
mov
and
fs
movsb
cmp
and
push
mov
pop
push
enter
mov
sbb
and
lea
cmp
outsb
jl
js
test
mov
aas
mov
mov
pop
mov
les
and
in
add
inc
jmp
xchg
adc
mov
xchg
xchg
push
int3
in
fcomip
mov
mov
adc
std
mov
adcb
adcb
jmp
jne,pt
xor
cmp
push
jl
and
addb
mov
sbb
dec
aam
mov
jo
cmp
and
divb
ficoms
enter
loopne
setb
cmpl
sub
fmull
test
jno
cmp
push
jno
mov
jp
pop
lock
or
popa
and
push
leave
pop
movb
xchg
dec
js
add
jns
ret
mov
xor
idivl
ss
mov
stos
cs
cmpsb
roll
jecxz
arpl
test
arpl
push
mov
movsb
jne
pop
mov
jno
in
mov
jmp
pop
lods
sub
dec
adc
clc
fldenv
sub
out
data16
push
push
arpl
add
aad
or
pop
or
jnp
rorl
mov
mov
cs
and
scas
push
sub
xor
xchg
into
subb
sbb
sahf
cmc
ffreep
and
mov
push
and
fmull
sub
mov
push
mov
or
sbb
repnz
test
xchg
or
push
cmp
sahf
xor
out
dec
rclb
out
inc
push
inc
sub
stos
mov
jno
insb
pop
jmp
push
lea
or
pop
leave
jle
sub
loope
dec
jbe
jecxz
add
pop
lea
insb
and
cmp
inc
sbb
insb
jecxz
test
stos
lret
or
or
and
push
pushf
stos
or
ret
adc
push
shr
lret
xchg
mov
sbbl
dec
fdivs
xchg
ret
cmp
jg
sub
adc
insb
xor
add
xor
push
pop
mov
loopne
in
aad
enter
in
jmp
lahf
aad
ficoms
cmp
leave
and
sbb
mov
mov
seta
data16
mov
fwait
xor
mov
mov
cmp
sub
jno
add
shll
lahf
loop
xor
aam
inc
insb
sti
lcall
sbb
shrb
outsl
fwait
add
jg
sbb
sub
inc
pop
loopne
out
sti
andb
ret
sar
mov
push
cmc
sahf
cmp
dec
xchg
aam
negl
stos
mov
scas
xlat
loopne
cmp
pop
add
xchg
inc
sub
inc
decl
sahf
xchg
ret
sub
sub
pop
pop
and
mov
xchg
jmp
aad
ljmp
dec
lock
push
das
bound
add
sbb
inc
fimull
sub
stos
jecxz
das
pop
shll
push
jbe
loopne
pop
shlb
fimull
aas
addr16
in
pop
xchg
inc
fwait
dec
mov
aad
stos
inc
dec
jmp
or
rcrb
dec
aaa
or
rorb
pop
adc
js
mov
xchg
test
inc
pop
push
jno
dec
jno
jae
sahf
das
inc
dec
les
gs
sub
outsl
test
outsl
push
imul
stos
aas
push
mov
and
out
stos
mov
sbb
mov
movsb
xor
jnp
in
test
sbb
mov
jno
jae
pop
mov
mov
cmpsb
cmpsb
jecxz
shlb
mov
outsl
int3
or
cltd
xor
mov
jo
ret
ds
js
jb
imul
sub
sub
xchg
xor
jns
adc
cmpsb
fwait
shrb
add
repz
xchg
xchg
or
mov
stc
or
int
mov
jg
aaa
mov
xchg
dec
push
loope
mov
bound
adc
imul
or
testb
add
lret
and
add
cmp
sbb
loope
stos
icebp
mov
mov
cmpsl
sub
nop
pop
xor
cs
dec
fistpl
push
cmc
cltd
rolb
mov
mov
out
push
aam
lcall
hlt
push
stc
mov
push
dec
fsubrs
and
lret
mov
adc
and
and
jns
xchg
call
mov
das
xlat
pusha
or
push
cmc
sbb
roll
inc
cmp
iret
fidivl
mov
mov
sub
dec
or
pop
jnp
xchg
add
push
dec
push
out
and
add
leave
popf
mov
jbe
sti
in
or
lea
push
lret
leave
mov
hlt
cmp
sbb
outsl
movsb
sub
jg
mov
inc
cli
mov
scas
mov
insl
lahf
inc
push
mov
push
lock
inc
mov
mov
mov
jo
popa
clc
loope
push
push
enter
sbb
mov
push
add
mov
test
js
and
dec
xchg
mov
sbb
fwait
ja
in
mull
pop
ja
sbb
aad
in
xor
dec
mov
je
xlat
push
mov
scas
loope
faddl
jo
push
add
lret
sub
dec
push
cltd
jmp
mov
sahf
bound
les
fsubl
or
into
push
mov
pop
mov
mov
xchg
loope,pn
xor
jmp
cltd
mov
aam
mov
push
stos
popaw
outsl
and
push
test
push
sbb
cltd
lds
leave
cmpsl
add
add
imul
jmp
cmp
in
xchg
ljmp
push
push
shll
sarl
push
call
dec
add
inc
push
dec
jle
xchg
push
dec
nop
push
sbb
and
sbb
dec
inc
fimull
pusha
ja
pop
or
xchg
cmpsb
adc
out
out
in
shrb
jp
inc
cmp
add
pusha
aam
bound
xor
ljmp
pop
cmpsb
lea
inc
andl
inc
mov
mov
orb
roll
filds
movsb
pushf
cmp
orb
or
dec
inc
testl
jmp
popa
push
push
gs
movsb
ss
sbb
stos
dec
cmc
stc
xor
xor
pop
add
add
cmc
adc
out
daa
xchg
add
lds
mov
push
int3
ss
test
inc
cmp
xlat
neg
outsl
or
divb
push
pop
mov
cmp
mov
dec
ficompl
addr16
in
mov
gs
jb
lahf
enter
jne
mov
cmpsl
adc
daa
pusha
pop
jmp
test
pop
xchg
fimull
and
into
xchg
arpl
xor
push
push
scas
or
xchg
mov
aad
or
aad
jl
or
jo
jl
loopne
cmp
gs
pop
fnsave
pop
incl
inc
shll
dec
xchg
inc
jge
add
push
inc
cwtl
jno
inc
faddp
imul
mov
sahf
adc
xlat
push
push
xor
shll
out
stc
cwtl
add
icebp
fwait
mov
ds
pop
cmp
push
rolb
xchg
js
push
jg
in
cmpsl
movsl
xor
dec
mov
push
lfs
test
push
sti
push
xlat
add
notl
sub
addr16
cmpsb
mov
movsl
icebp
lret
inc
mov
insl
inc
sub
movsl
lcall
scas
cmc
dec
gs
dec
and
mov
jp
sub
stos
xorl
ds
push
inc
jl
push
sub
xchg
add
cmpsb
in
jae
jp
add
jmp
and
mov
xor
add
sbb
fwait
push
inc
ja
dec
in
ss
adc
mov
jnp
dec
dec
addb
loopne
ret
rolw
adc
shlb
xchg
jmp
cmp
fwait
outsb
cmp
shrb
add
cwtl
xchg
fistpl
rcll
jmp
dec
adc
cmp
inc
adc
arpl
mov
or
loopne
add
orb
fbld
or
mov
inc
mov
add
fnstsw
je
repnz
adc
push
mov
sbb
fnstsw
out
sarb
in
or
push
cltd
rcrl
in
in
scas
scas
in
mov
sbb
fimull
sahf
jo
cmp
stos
jns
xor
pop
mov
or
sbb
ljmp
repnz
test
repz
jl
dec
mov
pop
shrd
push
lea
sbb
xchg
mov
jbe
and
inc
mov
adc
xchg
mov
sahf
sbb
iret
addr16
and
jmp
or
data16
pop
int3
icebp
pop
push
sub
stc
cmp
scas
jnp
ja
mov
push
les
lock
mov
pop
xchg
mov
dec
test
and
in
mov
mov
adc
or
ja
mov
pop
nop
mov
sbb
mov
add
xor
dec
rolb
daa
adcl
repnz
cmp
add
mov
jge
dec
jne
push
adc
xor
int
int
lock
and
movsb
jo
daa
push
nop
pop
pop
in
popf
lret
pop
sub
jnp
adc
jmp
orl
xchg
mov
out
jecxz
ds
pop
dec
sbb
pop
xchg
mov
lret
data16
andl
aad
xor
mov
mov
or
pop
fistpl
mov
add
jns
movsl
gs
cmpsb
xchg
hlt
call
mov
mov
ja
insl
test
mov
add
and
mov
sbb
pop
cli
pop
insl
popa
fcom
mov
jmp
mov
mov
cmp
rclb
cmp
push
nop
adc
mov
popf
mov
sti
or
scas
xchg
jnp
xchg
loop
inc
pop
add
cmp
lods
mov
jge
inc
enter
fcmovne
inc
lea
enter
pusha
dec
cmp
cmpsl
lods
stc
jae
arpl
inc
mov
fdivs
out
in
mov
mov
sti
mov
sub
or
sarl
and
xchg
out
subb
lret
es
jb
jnp
cmpsb
mov
test
mov
daa
icebp
cmp
push
lods
push
fidivrl
aaa
cmc
fdiv
pusha
pop
adc
add
aam
loope
fildll
xor
sbb
pop
arpl
pushf
cmp
clc
dec
inc
push
scas
pop
leave
inc
fwait
sarl
mov
jmp
in
cmp
cs
pop
jle
int
imul
mov
addr16
pop
sarb
sbb
in
out
aad
stc
inc
mov
xor
jb
and
sub
lahf
pop
xchg
push
mov
and
pushf
or
pop
cli
movsl
sbb
ljmp
movsl
sub
adc
movsb
mov
jl
or
pop
sbb
add
xor
gs
dec
sbb
and
jg
aas
scas
test
mov
out
repnz
add
mov
mov
pop
mov
xchg
loopne
push
repz
hlt
xor
movsl
cmp
loop
sub
sbb
cwtl
jg
fistpll
fwait
repz
cmp
push
data16
and
xchg
or
int3
and
test
lret
and
bnd
sub
jbe
push
aas
cmp
inc
ret
mov
sarl
sub
shl
or
je
clc
out
aas
fcmovbe
clc
jb
adc
dec
push
incl
mov
inc
cmpsl
shrb
jno
es
pop
loope
and
cli
sarb
inc
pop
sub
xchg
push
mov
pop
mov
push
push
mov
inc
sbb
cmpsl
mov
arpl
inc
js
cltd
push
es
pop
ljmp
add
bound
mov
out
mov
jmp
adc
add
fcmovnu
daa
into
inc
xchg
mov
push
push
aaa
mov
aas
and
sbb
xor
dec
jo
adc
lea
lods
mov
cltd
sbb
js
xor
mov
imul
sub
fs
out
pop
rcrb
mov
sbb
dec
fldenv
jl
movsb
push
jne
ret
shrl
outsl
adc
movsl
jp
mov
push
mov
xor
adc
pop
insb
xor
fidivl
mov
popf
jb
inc
jl
sub
push
adc
mov
shlb
mov
xchg
loope
adc
pop
jmp
pusha
into
test
repz
scas
enter
lcall
rcrl
pop
aaa
push
jp
ficoml
flds
lods
jnp
aaa
sbb
inc
push
add
jnp
test
or
xchg
insb
push
sahf
out
xchg
lods
and
add
lret
lods
inc
std
and
or
fistpll
mov
adc
xchg
mov
pusha
adc
incb
pop
fldcw
xor
testl
dec
bound
lret
shl
fisttps
or
or
cwtl
jo
xchg
inc
or
inc
sbb
shr
push
mov
xchg
fidivrs
xchg
test
xor
mov
xor
adc
lahf
dec
repz
fstpt
pop
std
dec
push
test
pop
or
mov
cmp
test
packssdw
pushf
mov
mov
rclb
inc
mov
mov
push
mov
test
adc
mov
sahf
fidivrl
sub
cmpl
add
test
test
fldl
pusha
leave
or
or
jecxz
fadd
test
and
add
pop
add
or
orl
outsb
test
sahf
cmpsb
je
cwtl
jne
and
stc
in
fidivrl
ja
cld
sbb
sbb
repz
xchg
pop
sub
jnp
fcomp
or
sbb
add
fldt
sub
xrelease
mov
push
mov
and
outsl
scas
push
leave
pop
mov
std
fcoms
xchg
ffree
or
pop
cmpsl
scas
stos
insl
cmpsl
xor
inc
ds
fimuls
push
and
jno
mov
jae
inc
sbb
dec
cmpsl
test
pop
test
and
test
mov
push
test
jne
jne
cmpsl
insb
or
ljmp
add
push
adc
insl
loope
sti
dec
xor
cli
dec
or
dec
push
test
sub
int3
or
cmc
addr16
sbb
mov
and
lods
shrl
scas
daa
enter
adc
cmpsl
push
xchg
dec
shll
leave
pushf
sub
xchg
or
push
mov
mov
mov
mov
or
cmp
mov
inc
inc
and
or
andl
les
adc
rclb
aas
mov
jg
add
aas
or
movsb
cmpsl
es
dec
mov
or
stc
adc
popf
aas
daa
cltd
popf
dec
and
and
aad
push
lret
pusha
jle
cmpsb
aaa
push
and
loopne
adc
adc
lock
into
sub
sub
or
jbe
sti
and
add
leave
mov
clc
mov
es
lock
out
outsb
cmp
shll
clc
pop
dec
and
sub
mov
test
sbb
icebp
pop
call
fnsave
cmpsb
inc
xchg
popa
mov
push
jb
aaa
cld
mov
jecxz
inc
pop
popl
pop
sub
jp
cmp
xchg
mov
lcall
stos
shrb
cmp
lahf
cmp
fisttpl
lea
sub
xchg
mov
sub
hlt
je
data16
in
adc
xor
mov
push
adc
push
push
iret
adc
out
popa
sbb
and
andl
xor
add
shll
aam
hlt
lods
xchg
fdivl
addl
lds
pop
pop
mov
test
jae
and
shl
lock
hlt
lret
push
sub
adc
push
leave
in
xchg
push
out
hlt
xchg
in
or
out
popa
test
int3
out
xor
cmpsl
mov
add
sbb
lock
addr16
sub
jmp
imul
jle
and
dec
dec
out
sbb
sahf
xor
aad
enter
add
fcmovnb
or
les
mov
aas
mov
fldenv
add
in
mov
xchg
shrl
inc
cltd
jno
inc
inc
dec
lcall
xchg
popa
pop
or
jmp
test
leave
lods
inc
daa
dec
adc
mov
jne
imul
jns
adc
fnsave
sbb
adc
xor
cmpsl
insl
fnstsw
hlt
jp
test
or
mov
mov
movsl
inc
aam
ror
mov
xchg
sar
iret
add
and
nop
xchg
add
aas
push
pop
mov
test
movl
inc
fcoml
addr16
pop
sbb
fwait
mov
push
pop
movsb
frstpm(287
add
lret
sub
xlat
aad
inc
in
loope
mov
pop
stos
push
push
xlat
dec
or
lret
lcall
push
mov
xor
jg
out
xlat
adcl
xchg
clc
cmp
pop
movsl
xorb
push
xlat
mov
mov
mull
pop
sub
clc
mov
push
add
adc
lahf
lds
add
iret
or
cld
aaa
xchg
movsb
jb
in
addb
or
adc
sub
lret
lret
adc
mov
sbb
jo
pop
adc
pop
rcl
test
sbb
cmp
loope
shrl
add
imul
popa
loope
adc
bound
dec
enter
arpl
stc
call
scas
jecxz
out
sti
jb
scas
inc
pop
cltd
xchg
in
mov
ret
mov
int
jecxz
mov
sub
inc
mov
fidivs
test
hlt
scas
mov
sbb
or
fidivrl
out
out
jb
adc
sbb
jg
dec
mov
fnstenv
dec
call
adc
jns
mov
add
aam
testl
sbb
add
mov
and
and
mov
sub
mov
test
xchg
out
mov
and
push
mov
int3
imull
mov
inc
inc
adc
sarb
add
pop
repz
and
stos
pushf
fildll
adc
pop
mov
add
out
inc
aaa
adc
iret
jle
cmpb
xor
aad
popa
and
ret
pop
and
and
lahf
dec
push
cwtl
insb
push
loope
mov
sub
fstl
jne
call
test
adc
sbb
xchg
jne
push
in
mov
cmp
dec
jb
in
js
bound
mov
fisttps
out
les
pushf
stc
fldl
movsl
lea
lods
mov
push
xor
jmp
push
enter
nop
pop
xchg
adc
mov
cmpsl
add
das
lods
in
push
addr16
xchg
add
adc
push
lret
insb
jae
xor
cmp
or
adc
imull
scas
out
push
mov
mov
gs
jmp
xchg
sbb
adc
jmp
xor
jg
mov
adc
xchg
pop
mov
nop
or
int
push
loopne
xor
mov
mov
cmp
jae
shll
inc
ds
call
fsave
movsb
ror
and
cltd
lods
inc
test
loopne
mov
je
hlt
js
fwait
mov
xor
xchg
imul
out
mov
iret
popf
and
fnsave
out
and
and
mov
cmp
addb
xchg
add
push
inc
lods
ret
out
adc
jae
mov
popa
cmp
das
pop
cmp
mov
jo
loopne
add
sbb
cli
cmp
jp
mov
pop
xor
mov
iret
out
shll
loopne
or
out
in
lods
inc
jmp
out
roll
es
sbb
jnp
hlt
cmp
mov
sbb
dec
or
aam
jae
push
jb
outsl
mov
xor
pushf
pop
pushf
andb
dec
test
add
fldt
cwtl
jmp
adc
xchg
in
imul
ss
decb
or
push
mov
rclb
mov
sub
adc
sub
mov
cmc
popa
mov
cs
sbb
aad
pop
dec
mov
idivl
popa
loopne
aam
and
aas
jb
cmp
push
inc
stos
aad
mov
mov
push
nop
push
dec
inc
cmpsb
sub
cmpsb
inc
push
fistl
mov
addr16
nop
pushl
lds
loopne
mov
loope
ljmp
xor
pop
xchg
pop
push
aad
xchg
add
xorl
popa
dec
mov
iret
mov
int
mov
mov
stc
pop
or
outsl
or
xor
cmpsb
pop
jle
mov
lahf
xlat
movsl
js
jae
test
insl
jb
push
enter
pop
mov
cli
ljmp
int3
or
sbbb
jo
add
mov
arpl
sbb
sbb
xchg
imul
lret
fisttpl
cs
sbb
nop
mov
sbb
xor
pop
adc
push
testl
mov
inc
xlat
dec
mov
xchg
pop
leave
scas
mov
inc
sti
push
add
and
lret
pop
sbbb
dec
sub
xchg
dec
mov
cmpsl
sub
cli
push
inc
icebp
xchg
arpl
push
into
push
loopne
fistl
stc
movsb
lcall
lret
mov
call
ror
and
push
pop
mov
jae
mov
in
push
stc
sbb
nop
dec
data16
sahf
dec
jl
sti
fldt
in
rcll
cmp
xor
xor
daa
sbb
pop
fiadds
es
aam
push
loopne
imul
into
pushf
push
sub
adc
cmp
mov
mov
inc
mov
sub
icebp
in
lods
xor
xchg
push
stos
popf
add
or
push
cmc
push
sbb
push
pop
stos
xchg
out
mov
jp
cmp
shl
or
adc
cli
cmp
add
hlt
mov
jo
push
fucom
inc
fsubl
std
xchg
sub
enter
cmp
sbb
dec
mov
xchg
loopew
rclb
cli
adc
daa
data16
add
pop
xor
loop
jp
xchg
and
jge
in
xchg
pop
push
jg
pop
call
push
cmp
incl
les
push
pop
cwtl
push
inc
pop
adc
in
jno
push
out
mov
roll
loope
adcl
inc
fnstenv
push
add
imul
xchg
and
cmp
loopne
or
loop
mov
ljmp
dec
mov
jb
mov
and
and
sub
mov
fwait
rcrl
xchg
std
push
add
in
mov
push
mov
add
mov
add
lcall
stc
mov
mov
inc
adc
aad
inc
xor
leave
mov
popa
xor
push
push
movsb
jg
adc
mov
mov
push
pop
xchg
enter
data16
clc
jl
aad
fsubrp
lret
pop
call
sbb
fwait
int3
mov
jno
cmp
xchg
out
hlt
inc
test
add
sar
mov
divl
ja
xchg
mov
sbb
scas
jl
cltd
mov
adc
movsl
je
or
icebp
adc
out
adc
pop
loope
pop
mov
nop
out
pop
push
mov
and
jno
xchg
cltd
sub
icebp
mov
push
bound
pop
cld
into
pop
adc
daa
xchg
outsb
mov
clc
inc
or
scas
aas
movsl
xchg
aas
xor
imull
add
cmp
jns
jl
add
loopne
mov
mov
roll
sbb
add
pop
es
push
mov
xor
jecxz
sarb
addb
xlat
sbb
dec
dec
or
mov
fwait
push
imulb
ljmp
out
add
leave
jae
push
add
imulb
or
addb
sub
shl
sbb
fistpll
jno
leave
icebp
inc
lods
stos
add
fdiv
ds
sbb
test
dec
std
or
arpl
mov
les
aad
nop
sahf
lret
in
hlt
ret
mov
or
movsb
and
or
movsb
popf
cwtl
push
or
fists
add
adc
pop
or
push
mov
xor
int
jg
out
daa
adc
lds
stc
out
mov
sahf
mov
pop
in
test
pop
mov
pop
mov
cmp
lods
push
add
scas
data16
out
dec
or
lahf
mov
in
push
ja
mov
movsl
shll
add
aaa
push
xchg
ret
clc
push
and
pusha
sbb
adc
push
das
rcll
and
mov
xor
push
xlat
into
cmp
arpl
loope
inc
rcrb
mov
nop
in
dec
or
pop
mov
std
add
pop
mov
push
fcmovb
sti
test
pop
and
mov
dec
mov
or
dec
rcll
pop
mov
lock
addr16
lods
add
and
mov
mov
inc
inc
lea
adc
cmp
outsl
pop
jmp
out
inc
push
adc
lock
lret
scas
pop
call
lock
sti
aad
negl
or
ret
mov
loopne
mov
jnp
leave
adc
dec
inc
inc
repz
es
or
mov
and
adc
or
mov
sub
fnsave
dec
push
or
push
cmp
add
mov
xor
scas
imul
pop
mov
cmp
xchg
inc
in
lea
cltd
rol
test
popa
fwait
cmpsl
jge,pn
test
in
cmp
mov
pop
sub
jns
push
test
push
fcomp
ret
xchg
shl
je
and
loope
cmp
ret
pop
mov
scas
mov
shlb
mov
aad
sti
fwait
mov
stos
movsb
and
imul
push
pushf
addl
xchg
movsb
popf
adc
les
mov
sub
jb
arpl
rep
test
outsl
js
pop
cld
adc
xorl
dec
xlat
xor
or
sub
xchg
and
xor
repz
pop
leave
cmpsb
repnz
jnp
jecxz
outsb
dec
mov
mov
cli
bound
das
lret
or
mov
or
jg
inc
sbb
repnz
jle,pn
xchg
popa
jp
sti
pop
popa
sbb
scas
loop
xchg
push
adc
enter
jo
pop
std
jnp
adc
and
aaa
mov
adc
in
and
and
or
test
jecxz
cld
out
lret
jmp
push
xchg
jns
pop
negb
or
dec
scas
call
or
in
hlt
test
cld
in
mov
out
mov
aam
inc
sbb
std
add
dec
jnp
repz
pusha
mov
scas
push
aas
jg
out
aam
mov
cmpsl
mov
inc
xchg
jl
into
inc
out
pop
dec
data16
test
aam
push
pop
mov
xchg
int
push
mov
xchg
mov
lret
dec
fld
lcall
sbb
jg
add
fwait
out
mov
out
push
pushf
mov
cmpsl
mov
dec
lahf
and
lea
arpl
push
js
test
xchg
inc
mov
adc
das
js
fcomip
sub
fsubrl
pop
push
std
mov
movsb
push
adc
cmc
cmp
hlt
les
pushf
scas
gs
fwait
xchg
jmp
sub
stc
out
outsl
idivl
incb
jmp
test
jns
sub
or
movsl
inc
movsl
mov
fchs
jle
fiadds
fimuls
mov
hlt
insl
daa
stc
fsubl
xacquire
pop
or
stc
and
push
jno
dec
sarl
fisubs
jle
pop
fxch
testb
mov
pop
and
push
fucomi
add
inc
jne
js
or
insl
iret
andl
jl
call
rcll
stc
insb
xchg
jne
inc
jns
mov
xor
sub
pop
mov
push
out
filds
movsb
sarl
xchg
shll
movsl
test
mov
stc
sbb
pusha
adc
cmp
gs
push
or
cs
out
and
push
repz
fmulp
bound
inc
inc
mov
add
sub
fidivrl
dec
cwtl
adc
jno
sbb
mov
push
xlat
pop
jbe
in
sahf
popa
mov
fcomi
daa
xlat
pop
xchg
pop
ret
push
aas
push
and
popa
iret
fwait
daa
lods
inc
mov
loope
pop
rcrb
fimull
pop
rcr
xor
int3
and
in
push
adc
push
adc
pop
add
jne
nop
movsl
fdiv
mov
outsl
aam
ds
enter
call
sti
xchg
leave
ret
cld
fnsave
and
pop
out
shrl
sbb
jp
dec
icebp
cmp
sbb
mov
es
sub
in
inc
or
and
jns
cmpsb
pop
mov
and
insl
xor
push
fbstp
aam
cmp
mov
sarb
fdivp
dec
shlb
aad
inc
jecxz
ds
aas
pushf
shll
mov
sbb
cmc
push
push
fdivrs
xchg
fimuls
xor
xor
jecxz
out
movsb
clc
mov
scas
inc
fcoml
mov
add
shlb
in
sarl
popa
mov
jge
ret
adc
subb
mov
push
out
lret
push
stc
jb
pop
xchg
cmp
shlb
mov
adcl
mov
movsb
mov
movups
sti
xor
ss
and
pop
add
ror
mov
sarb
pop
or
mov
add
sbb
inc
cmp
sahf
cwtl
divb
xor
nop
test
push
push
and
pop
es
repnz
jg
jp
cmp
ja
sbbl
cld
gs
cltd
cmp
stc
xor
je
cmovbe
and
test
not
push
out
lock
xchg
sbb
push
xchg
add
mov
out
scas
push
pop
push
insb
fldcw
xor
mov
lret
push
test
xlat
jbe
xchg
inc
mov
add
xchg
cmp
rorb
xlat
fdivl
ret
cltd
jecxz
pop
add
ret
out
jecxz
inc
push
jg
fisttpll
aas
cmp
mov
pop
push
sub
mov
in
push
or
outsl
jae
insb
test
and
aad
pop
add
inc
sub
icebp
fbstp
out
mov
cmc
lds
pop
orl
sbb
sti
scas
xor
cmpsl
mov
mov
dec
scas
stc
mov
lods
decb
xchg
inc
lahf
sbb
xchg
decb
into
fwait
push
aad
lea
xorl
or
xor
outsl
les
test
cmc
int3
movsb
add
test
jmp
testb
inc
ss
popa
push
enter
es
dec
lea
loopne
jb
jl
jb
mov
jne
inc
loopne
cs
xchg
mov
sti
fdivrl
sub
jmp
lcall
xor
ret
mov
and
inc
data16
insb
ljmp
pop
jo
scas
dec
nop
ss
lock
imul
testl
sahf
rorb
sarl
lret
ja
arpl
out
cmp
std
lea
lret
jl
andl
push
jbe
rcl
jb
lcall
addr16
fucomi
sub
jno
pop
sub
adc
sub
loope
jbe
andb
mov
push
mov
rcrb
testl
andb
jl
and
xchg
push
std
std
cmp
rcl
sbb
xor
xchg
mov
adc
sub
sbb
rclb
add
arpl
sub
fldcw
mov
pushf
in
inc
pop
mov
dec
orl
cltd
mov
dec
test
pop
aad
stos
pop
shlb
push
dec
mov
lea
jl
pop
out
inc
mov
std
loopne
rcll
icebp
add
stos
mov
stc
or
push
andl
or
aad
pmulhw
cmp
xor
cs
xchg
xchg
jl
repnz
push
ret
pushl
mov
xor
je
aas
insb
inc
out
daa
or
out
adc
loopne
sbb
pushf
test
test
pop
adc
ss
cmc
adc
add
xchg
and
adc
xchg
sbb
test
or
mov
push
shrb
out
fcoms
js
and
stos
cli
or
add
dec
lods
dec
out
inc
cli
sub
pop
xor
icebp
lock
add
jo
insl
bound
scas
inc
mov
inc
cltd
stos
insb
or
sbb
lods
scas
sbb
mov
js
mov
adcl
mov
xchg
cmpsb
add
fimuls
mov
testb
sub
stos
mov
xchg
mov
xchg
movsl
inc
adc
enter
inc
fisttps
pop
out
add
sbb
bound
ljmp
sub
mov
leave
mov
imul
insl
push
xor
dec
adc
jb
push
icebp
or
mov
mov
sbb
sbb
adc
jb
jl
mov
frstor
ss
fisubrl
sbb
inc
addb
mov
pop
fiaddl
in
mov
dec
jecxz
xchg
ljmp
push
or
jmp
aas
xor
sub
iret
jp
inc
icebp
call
or
decb
inc
jmp
ja
sub
xchg
imulb
jo
mov
jnp
cld
xchg
xchg
aaa
leave
push
sbb
jne
ss
pop
mov
adc
inc
fwait
popa
adc
sbb
gs
push
push
lock
push
je
enter
mov
push
xchg
or
ja
sarb
sub
roll
jae
cmp
out
and
mov
scas
outsb
rol
mov
sbb
test
push
in
fbstp
test
and
daa
sbb
inc
mov
cmp
testb
lods
cld
subb
adc
shrl
iret
push
jae
inc
mov
je
pop
pop
inc
xacquire
pushf
jg
aas
dec
mov
push
lock
mov
clc
jmp
ljmp
pop
inc
push
iret
mov
inc
sbb
push
adc
fucom
mov
adc
fadds
rcrl
jle
cmc
or
mov
in
inc
cmp
cli
or
mov
inc
inc
mov
jge
jmp
test
push
aad
sti
icebp
push
inc
mov
cmpsb
loopne
push
or
cmc
jb
add
es
sub
stos
popf
in
movsl
dec
jg
dec
jnp
cmpsb
adc
pop
fcompl
repnz
add
ss
lock
xor
les
adc
push
out
dec
outsl
inc
cmpl
outsb
add
aas
adcw
scas
ds
lcall
lods
mov
mov
sub
bound
loope
mov
mov
xor
lret
push
sub
adc
pop
cmp
mov
xor
rclb
add
test
mov
inc
xor
sbb
cmp
adc
pop
repz
sub
outsl
stc
lds
fdivrl
mov
mov
pushf
fildll
mov
or
xchg
lret
jge
cmpb
out
jl
sbb
jl
or
jns
cmp
cmp
xor
push
mov
push
adc
ret
test
sti
fsts
movsl
add
or
lea
rcll
cli
fcmovbe
lret
and
adc
lds
aam
ds
cwtl
mov
mov
out
sbb
scas
and
mov
nop
push
mov
xchg
dec
push
cmpsb
adc
xor
dec
pusha
or
dec
lock
fxam
shlw
jl
mov
add
hlt
mov
loop
repz
fcompl
add
mov
jbe
pop
adc
pop
pop
jecxz
cwtl
call
mov
outsb
mov
add
loope
imul
and
rol
sbb
mov
mov
sub
popl
adcl
movsl
or
jnp
pop
jb
dec
fcomps
pop
xchg
fdivr
and
mov
hlt
popf
or
inc
cwtl
clc
cmp
cwtl
fnstsw
mov
sub
add
popf
push
inc
mov
fldl
testb
inc
lock
pusha
xchg
mov
add
mov
xchg
xorb
xlat
les
inc
jne
mov
and
cld
pop
loope
xchg
ret
add
pop
lahf
lret
and
xor
jmp
ja
mov
js
imul
or
ja
cmpsb
xchg
xchg
pop
mov
add
inc
dec
popf
int
cs
xchg
int3
lret
repz
dec
push
adc
imul
xorl
cwtl
push
and
es
repnz
push
out
stos
cmpsl
push
xchg
and
scas
rorl
xchg
sarl
fld
and
ss
adc
addr16
sub
sarb
outsb
mov
adc
stos
and
imul
jmp
mov
cmp
push
or
gs
xchg
xchg
mov
xchg
out
or
push
movsb
insl
imul
push
out
inc
add
sub
xor
fidivrs
pop
xchg
lods
idivb
mov
dec
rcll
add
into
mov
out
adc
mov
scas
sub
pop
aas
inc
nop
mov
pop
ret
andb
or
pushf
stc
add
imul
imull
cmp
cltd
fisttps
push
sbb
xchg
mov
lahf
js
sub
mov
pop
cmp
push
mov
mov
das
stos
add
out
mov
outsb
into
pop
stos
ret
outsb
sbbl
shrb
stos
xor
loop
dec
ret
inc
fists
jo
repnz
pop
ljmp
and
iret
cld
ss
hlt
adc
loop
jp
hlt
cmp
incb
mov
jecxz
into
les
xchg
jecxz
add
jg
add
xchg
push
dec
lods
push
sahf
imul
inc
push
jg
mov
fisubl
vcvtss2sd
rol
fmul
movd
mov
add
push
je
xchg
cli
mov
mov
lods
push
outsb
iret
sbb
lcall
mov
ror
shlb
adc
aam
popa
pusha
insl
lcall
push
jg
xor
push
test
movsb
push
das
fs
xlat
sahf
inc
xchg
arpl
clc
and
repnz
mov
lods
call
lds
iret
sbb
sbb
leave
and
ret
divl
stos
in
sbb
sub
into
in
and
ret
inc
dec
cmp
inc
scas
lret
mov
adc
sub
fisubrs
shl
loop
push
inc
sub
jge
call
addr16
mov
int3
sbb
sub
xor
adc
jl
jmp
lret
out
cmc
psubusb
div
sub
xchg
cli
std
sarb
and
leave
sbb
movsl
sbb
push
adc
aaa
jbe
adc
sbb
cltd
adc
mov
jecxz
mov
mov
mov
xchg
jo
cmp
xor
sti
pop
adc
repz
sarb
xchg
pop
lock
sub
lock
and
add
mov
sub
sbb
cmp
pop
movsl
push
faddp
cwtl
jne
les
rcrb
mov
popa
mov
aas
xchg
mov
inc
adc
ljmp
nop
mov
aam
repz
adc
into
loope
cs
cli
mov
jno
test
inc
rorb
ret
into
cmc
sarb
dec
repnz
jecxz
lods
cli
jecxz
movb
jno
arpl
pop
xchg
popa
loop
fidivrs
adc
cmp
add
loopne
and
xchg
pop
hlt
popf
clc
je
push
and
lods
jg
cli
push
popa
in
add
adc
lock
aas
xchg
dec
xchg
repz
dec
push
or
mov
xchg
lock
je
addr16
add
and
cmp
ss
dec
cmc
cmpsb
or
pop
inc
sbb
mov
xor
jno
inc
insb
test
push
jne
xchg
mov
loope
or
cli
fistpll
pop
insl
pop
jmp
push
ds
dec
push
push
push
pusha
push
dec
xor
sub
push
ret
fldcw
xor
les
incl
push
fs
push
imul
mov
jo
adc
pop
push
repz
call
and
es
add
test
or
nop
or
fldl
inc
gs
pop
shll
mov
sub
pop
hlt
nop
sar
lock
call
lods
stos
sbb
sbb
and
push
and
mov
and
popa
roll
movsl
mov
mov
inc
in
mov
adc
mov
mov
mov
pop
cmpsb
adc
mov
test
inc
ljmp
mov
xor
dec
sti
pop
and
arpl
push
lods
mov
jle
sub
push
inc
fistl
js
jbe
sbb
cs
out
lock
and
cmp
mov
push
mov
pop
inc
or
pop
pop
add
ret
jle
sahf
xchg
sbb
jo
hlt
jge
stc
movsb
std
pop
sub
xchg
adc
jmp
xor
jmp
iret
mov
in
add
push
xchg
shll
or
inc
and
cmp
push
fldt
jg
mov
call
fs
stc
dec
push
cmpsb
int3
movsl
ret
lret
in
in
sbb
mov
inc
faddl
mov
sbb
cmp
nop
in
pushf
insb
mov
or
mov
and
xor
lahf
pop
jle
mov
nop
lret
xor
or
sub
in
mov
jl
mov
mov
lcall
cld
jbe
jb
jnp
push
imul
rcl
outsl
and
push
add
ficoms
add
and
jbe
or
hlt
inc
lret
jb
arpl
test
add
or
jg
jae
pop
into
jns
push
sbb
mov
ljmp
addr16
adc
xor
lcall
mov
pandn
jns
testl
mov
xchg
sbb
imul
xchg
arpl
push
icebp
pop
sbb
dec
icebp
inc
daa
inc
aas
cld
frstor
stos
dec
cmpsl
pop
mov
push
add
xor
andb
inc
pushl
ss
jg
or
add
stos
out
ja
dec
stc
cmp
les
cmpsb
xchg
icebp
out
push
adc
into
aad
xor
in
adc
mov
enter
outsb
imul
mov
leave
mov
mov
lock
mov
cmp
testb
in
outsl
push
mov
fdivr
sti
aaa
jo
cmp
xorl
fsts
call
push
js
pop
jnp
sbb
jmp
mov
mov
scas
daa
pop
adc
idivl
je
mov
push
js
fwait
sahf
add
into
and
fdivrs
or
sub
into
inc
xchg
call
xchg
xchg
aam
add
pop
and
add
xchg
fistps
pop
pushf
into
mov
loope
ret
popf
push
cltd
repz
aaa
and
mov
pop
pusha
or
jo
xor
add
test
sbb
mov
jecxz
shll
nop
push
jbe
adc
mov
jb
push
repnz
mov
add
adc
or
mov
or
jecxz
pop
repz
push
ffree
les
cmp
inc
inc
inc
pop
stos
jbe
insb
sbb
js
mov
cmp
xchg
inc
mov
cmp
add
jp
out
adc
popa
lret
subb
mov
and
mov
out
xor
adc
and
adc
xsaveopt
test
jnp
push
call
negl
js
mov
scas
dec
sbb
mov
repz
adc
sbbl
fldt
jo
push
dec
pop
cmpsl
jb
push
cmp
icebp
add
aad
ja
mov
xor
fldcw
out
xor
or
sti
lret
xchg
mov
mov
and
adc
cmp
cmpsl
into
add
fwait
js
adc
mov
jno
idivb
mov
cltd
mov
shrl
dec
bound
dec
fildl
stos
jns
sar
das
mov
jnp
mov
xchg
rorb
nop
or
insb
or
cmpsl
jg
add
mov
xchg
cltd
cmp
roll
dec
xor
pusha
xor
mov
xor
fsubs
movsb
or
jns
js
push
sbb
test
jnp
daa
ret
cmp
clc
xchg
push
mov
cmp
push
in
ficompl
inc
lock
and
ret
jb,pn
fildll
mov
xchg
fidivl
jecxz
daa
dec
inc
fistpll
push
xlat
mov
repz
add
adc
lock
adc
cmp
inc
mov
hlt
or
insb
add
xor
in
aaa
lret
cmp
movsl
sub
arpl
js
int
xor
xchg
pop
fisttpl
ss
movsl
test
push
loop
adc
xor
add
mov
popa
je
and
adc
cmp
inc
add
xchg
ret
cmp
mov
cmp
sub
repnz
mov
xchg
data16
movsl
outsb
jns
push
or
insb
das
mov
aam
add
clc
call
mov
xchg
mov
lret
mov
cmp
jno
aaa
movl
adc
xor
pusha
stos
mov
shrb
mov
mov
iret
je
lgdtl
xchg
scas
add
loop
push
xchg
jp
in
and
mov
inc
jmp
xchg
sbb
or
hlt
mov
aas
bound
pop
pop
jne
mov
in
or
cmova
pushf
dec
aaa
dec
cltd
dec
sbb
sub
jecxz
pop
arpl
mov
inc
les
jno
stos
jbe
pop
je
add
or
in
or
das
lods
xor
bound
xchg
addr16
xorb
xorl
mov
add
subl
or
pop
jns
fucomp
mov
int
mov
mov
mov
mov
repz
sub
clc
insl
leave
bound
dec
data16
jp
mov
jmp
xchg
cmpsb
push
mov
add
add
mov
or
inc
sub
shrl
pop
mov
sbb
or
in
lahf
xlat
or
int
dec
push
dec
ret
stos
aam
adc
nop
pop
and
jge
lods
mov
or
push
cs
mov
shll
sub
mov
ljmp
enter
dec
nop
cmp
xchg
invd
mov
pop
pop
mov
andl
sbbb
push
fs
sbb
int
sub
pop
mov
insb
dec
inc
out
hlt
mov
test
ret
bound
or
mov
adc
mov
fs
in
add
push
lods
out
sbb
fmuls
dec
adc
mov
or
or
mov
or
or
ss
cmpsl
mov
ljmp
lods
xchg
fs
push
cmpsl
out
and
lret
add
and
sbb
pop
repz
clc
outsl
leave
ja
repz
jge
rolb
imul
pop
or
sbb
cmp
stos
pop
sbb
aad
outsb
sub
jmp
mov
js
arpl
jle
and
pusha
lock
inc
adc
insb
icebp
insb
jnp
stc
cmpsb
lods
xchg
add
stos
xchg
and
xor
popa
div
cld
aad
fsubr
gs
imul
pop
in
lahf
xor
dec
test
sbb
cltd
cmp
repz
nop
and
xor
push
mov
mov
cld
push
loopne
mov
jle
jae
inc
mov
gs
loop
test
dec
pop
leave
and
mov
test
cmc
iret
push
cmp
inc
cwtl
pop
ret
mov
aaa
and
jle
add
mov
xchg
mov
out
test
and
shr
mov
test
out
sti
ds
sbb
lret
hlt
xor
jae
jne
daa
movsl
mov
push
clc
jl
mov
sub
pop
leave
iret
out
sub
mov
lahf
push
sbb
daa
or
in
fldenv
aas
out
out
mov
cli
dec
mov
in
test
nop
insb
and
mov
ljmp
pop
mov
xchg
add
push
mov
lret
out
mov
sub
pushf
cmp
dec
adc
ss
test
jns
or
stc
jle
test
sub
call
mov
shl
sbb
and
push
sti
dec
scas
fwait
jae
loopne
pop
enter
dec
icebp
cmp
stos
jle
andb
push
jecxz
je
lret
jbe
test
sub
loope
mov
sbb
cmpsl
dec
push
adc
nop
repnz
jae
andb
add
mov
mov
cmp
lds
inc
popa
out
arpl
jge
mov
jb
fstpl
lret
test
dec
cli
xchg
loope
clc
cwtl
into
not
mov
mov
push
adc
dec
inc
add
push
adc
xor
jl
movsb
insl
xor
pop
and
insl
jae
pushf
or
push
out
pop
inc
dec
test
or
cmpb
aam
pop
mov
stc
outsl
out
cmc
aas
and
lahf
js
push
addb
xlat
push
mov
mov
fsubrl
mov
lea
mov
push
inc
xor
pop
jo
sbb
inc
jno
or
into
popf
ja
jns
fcompl
jae
push
and
shll
sbb
or
mov
andl
ret
in
out
data16
mov
pop
shll
ss
ficoml
xor
std
leave
mov
int
and
mov
es
scas
outsl
lds
inc
and
orl
push
ror
repnz
cmp
adc
enter
orl
pop
mov
pushl
fildll
jmp
test
adc
cwtl
and
pop
xor
add
xor
mov
push
mov
inc
mov
popf
adc
sbb
mov
fnclex
les
out
mov
xlat
mov
push
xchg
dec
mov
ljmp
jno
sbb
add
in
push
test
xor
ljmp
cmc
or
push
sub
cltd
fnsave
push
insb
add
fisubs
add
sub
pop
sub
xchg
test
sub
scas
xchg
aas
mov
push
mov
icebp
xor
lahf
sbb
cli
dec
mov
jnp
push
pmuludq
mov
jne
or
mov
add
scas
sub
inc
fucomip
and
xchg
push
cmp
add
int3
mov
lds
sarb
repz
fildll
je,pn
mov
fldenv
adc
data16
mov
push
push
xchg
bound
dec
push
sub
mov
pop
lret
cld
add
pusha
push
push
stos
pop
out
mov
orw
sbb
rclb
push
mov
outsb
jne
cld
add
pop
xor
subl
rolb
jmp
imul
or
hlt
cmp
mov
mov
je
ds
xchg
das
mov
pop
lea
or
dec
test
add
mov
sahf
rol
xchg
sbb
pop
xchg
pop
xor
dec
daa
fwait
jno
lock
fadds
fsubl
mov
mov
jnp
lea
pop
xchg
inc
push
out
inc
ja
xchg
xacquire
xchg
dec
push
xor
stos
sbb
or
fidivrl
jmp
pushf
shrl
into
push
out
mov
push
pop
cmc
test
cld
cld
mov
add
jbe
fdivp
cmp
addr16
ja
push
in
fstp
jb
fwait
adc
mov
jge
inc
sub
ret
mov
mov
mov
imul
jp
jecxz
add
xchg
es
push
cmp
bound
xchg
jg
mov
push
out
pop
or
push
mov
testb
pushf
pop
sbb
test
shlb
jp
pop
scas
enter
mov
negl
xlat
sub
or
sbb
xor
gs
cmp
push
push
jne
adc
adc
mov
push
inc
ret
dec
push
imul
cmpsl
das
lret
pop
jo
mov
mov
std
mov
ret
cmp
mov
xor
data16
out
pop
xchg
clc
sub
insb
mov
in
sub
aad
test
mov
hlt
push
sbb
scas
jno
lock
sub
push
cmpsb
dec
inc
fildl
push
sub
stos
sbb
mov
out
sysret
js
or
int
in
mov
stos
pop
or
push
das
cltd
dec
repz
notb
sbb
fsubl
push
or
or
dec
daa
cmpsb
push
sub
pop
dec
lea
dec
std
arpl
sub
adc
gs
and
push
or
test
and
adc
aas
in
shl
xor
out
cltd
push
sub
jo
add
orl
or
mov
pop
mov
test
aas
lahf
nop
outsl
shlb
lcall
cmpsl
fnstenv
into
jg
stc
mov
mov
cmpsb
sbb
adc
jne
imul
xchg
sti
mov
aaa
pop
inc
jne
jmp
jl
out
mov
sub
je
mov
stc
pop
lahf
mov
or
cld
mov
or
adc
out
push
jmp
cmp
iret
popa
dec
push
ss
sub
dec
mov
mov
xchg
call
call
mov
bound
test
sub
shrl
mov
popf
add
mov
ficoml
xchg
xor
loop
mov
mov
scas
pop
aas
sar
ret
inc
cli
xchg
int3
jl
js
xor
movsl
or
into
push
in
add
cmp
insl
xchg
dec
insb
and
inc
cli
cltd
cmp
add
add
dec
data16
aam
and
mov
push
ja
outsb
test
pop
icebp
adc
sbb
adc
sbb
jp
jnp
mov
add
pop
movsl
mov
iret
add
loope
ffreep
sub
std
sbb
and
imul
cmp
mov
inc
and
mov
outsl
xor
inc
push
xchg
bound
fdivrs
insb
sahf
or
lods
jl
jg
mov
cli
jb
loop
inc
iret
dec
nop
add
push
inc
push
or
cld
mov
fld
stc
pop
add
stc
loope
pop
movsl
aas
and
or
dec
sub
xchg
or
cmp
sbbl
sahf
pop
xchg
pusha
rolb
jne
enter
into
add
jb
sub
sbb
jl
jo
gs
int
mov
jnp
pop
bound
cmp
stc
es
add
and
jne
pop
adc
faddl
xchg
mov
jnp,pn
outsb
fs
das
cmp
dec
movsl
mov
in
cmp
xlat
mov
mov
stc
roll
xchg
das
scas
test
out
xchg
ljmp
sub
daa
jbe
std
ss
ljmp
enter
lock
mov
lea
lock
aas
cmpsl
std
push
xor
mull
arpl
xchg
jl
inc
cmpsl
mov
mov
movsb
jb
sub
push
enter
enter
xor
loopne
dec
jno
lahf
and
push
sbb
inc
int
int3
sub
rol
rorl
push
mov
insb
sbb
inc
in
cmp
push
icebp
mov
xor
inc
dec
in
jl
dec
and
xchg
xchg
lret
jg
inc
fsubs
mov
addr16
fiaddl
es
pop
aas
xor
lods
lret
in
enter
dec
lock
lock
int3
in
jmp
movsl
push
in
mov
outsb
push
sub
lahf
pusha
rolb
adc
data16
imul
pop
int3
movsl
int
lret
js
daa
mov
sti
push
and
jp
pop
xchg
jmp
mov
add
lods
sbb
add
fisttps
popa
inc
xchg
mov
mov
mov
add
outsb
call
inc
mov
adc
cltd
jge
mov
imul
jo
in
orl
fstp
cltd
movsl
sbb
add
jp
imul
inc
insl
out
in
imul
loope
iret
roll
dec
xor
sbb
lahf
xor
add
les
pop
or
mov
jae
test
or
mov
and
lods
adc
lahf
repz
sub
aam
in
inc
lods
pop
cmp
int
xor
xchg
jno
out
test
repz
jl
push
addr16
adc
mov
mov
pop
mov
test
jge
inc
or
pop
adc
add
xchg
mov
js
adc
js
or
fisubl
out
out
mov
imul
sub
std
js
add
inc
popf
push
lret
lea
addr16
and
mov
lea
pusha
rcll
ja
jb
pusha
les
mov
cmc
mov
bound
stos
lds
int
add
mov
xchg
jb
inc
cmpsb
cmp
mov
xchg
fists
pop
inc
imul
imul
jne
sbb
fs
ds
lret
repz
rorb
ja
pushf
stos
dec
pop
lahf
push
pop
aas
stos
lahf
lock
mov
sub
cwtl
pusha
jno
sub
mov
hlt
add
sub
rol
xchg
mov
data16
clc
or
mov
mov
lcall
call
xlat
repnz
pushl
push
aaa
push
sub
cmc
mov
lds
cld
stos
es
mov
pop
mov
mov
pushf
pop
jecxz
adc
push
shll
pop
adc
aaa
jbe
test
and
push
hlt
xchg
sbb
inc
je
push
out
cwtl
adc
test
jg
cmp
xchg
sbb
aas
sub
push
push
bound
add
dec
xchg
jl
rorl
lods
gs
push
arpl
mov
xor
inc
andb
and
mov
lret
idivb
cmp
jle
test
cmp
xor
jns
cmpl
aad
andl
jle
mov
lea
incb
mov
aam
mov
sbb
and
push
add
pop
sbb
cmp
push
mov
in
lret
popa
push
call
icebp
pop
xchg
xchg
loopne
and
ljmp
add
stos
addl
cmp
lea
fwait
mov
add
jne
xor
aas
cmp
sub
inc
test
or
mov
pop
mov
inc
rcll
mov
push
repz
ja
jmp
aam
imul
lret
in
int
aam
add
rolb
or
jecxz
into
inc
js
in
mov
or
xchg
mov
mulb
xor
pop
inc
cmpsb
into
jb
and
popf
scas
mov
xchg
sbb
jl
inc
inc
jno
or
bound
repnz
mov
mov
pop
shll
or
add
mov
pop
cmpsb
push
stos
sbb
outsl
cli
cmp
lahf
jecxz
mov
sbb
cmp
aad
mov
mov
aas
fldcw
scas
inc
or
les
or
lcall
data16
movsl
sub
add
mov
lcall
js
mov
dec
fmuls
div
nop/reserved
js
xor
mov
insl
loope
ffreep
xchg
aad
mov
push
dec
insl
sub
cmp
adc
inc
sub
dec
cmpsb
mov
dec
xor
shll
xchg
sub
add
pop
popa
push
inc
cmp
movsl
mov
pop
imul
test
sbb
lds
adc
bound
cmpsl
xor
mov
imulb
repnz
in
mov
jb
xchg
xor
test
xchg
sbb
mov
cmp
das
negl
fwait
xlat
mov
ret
push
jns
loope
push
in
pop
mov
negl
ror
push
jecxz
or
push
sub
int3
add
xor
lret
shlb
call
fwait
mov
outsl
cmp
fsubrs
mov
idivb
cmp
push
loopne
mov
push
arpl
and
repnz
sbb
xlat
jmp
adc
push
sar
outsl
cmpsb
in
aam
pop
aad
cmc
inc
std
fisttpll
clc
push
jno
and
sub
dec
pop
sub
mov
dec
js
mov
push
sub
iret
loopne
mov
mov
mov
xchg
ljmp
mov
std
mov
pop
dec
out
jno
test
push
cmpb
mov
mov
movsb
cs
xchg
jns
ret
bnd
adc
mov
loope
inc
sti
cmp
rclb
lcall
inc
jnp
mov
movsl
mov
in
outsb
dec
add
add
mov
fwait
stos
lock
in
mov
loope
xchg
ja
mov
repz
ss
add
cmpsb
scas
out
add
add
jmp
jge
inc
inc
rorb
cmp
mov
lods
out
inc
imulb
stc
jg
addr16
add
pop
mov
inc
cli
xchg
inc
stos
data16
roll
int3
inc
push
push
cli
or
add
mov
dec
jb
leave
popf
arpl
lret
into
mov
mov
movsl
ss
mov
or
dec
lea
lret
cmp
sbb
sub
sub
adc
dec
insb
xchg
frstpm(287
aas
mov
mov
aam
pop
dec
xor
cmp
cmpsl
mov
push
arpl
mov
sub
or
repnz
lea
and
add
push
xchg
ss
rclb
and
stos
rcll
in
adc
push
xor
mov
fwait
mov
push
push
fcoms
inc
lods
jne
push
adc
lock
add
in
xor
aad
adc
jmp
ror
cmc
fnstcw
xchg
in
pop
dec
cmp
jnp
call
xchg
push
push
movsb
cmp
push
xor
or
dec
dec
iret
cmp
cmp
orb
stos
pop
aad
sbb
imul
dec
cmp
loop
sahf
and
xor
sub
pop
jnp
pop
inc
filds
pop
pusha
sub
icebp
jb
xor
pop
sub
mov
rcrl
andb
jbe
xchg
add
sub
xor
shlb
out
inc
ja
nop
or
int3
cmc
mov
jbe
xor
popa
inc
mov
dec
aaa
dec
or
push
out
push
data16
mov
mov
push
lock
xor
sbb
jl
mov
adc
sub
jne
mov
pusha
aas
test
sbb
inc
fdivrl
stos
hlt
loopne
push
test
pop
and
push
nop
cmp
cltd
popf
sahf
popf
sbb
fidivrs
and
ret
cmp
push
inc
dec
lret
push
cmpl
xor
call
push
mov
dec
pop
mov
fidivs
lret
pop
sub
in
es
jmp
mov
out
test
sub
sbb
cwtl
and
pop
mov
lods
mov
inc
mov
icebp
fldcw
loop
mov
cmc
imul
daa
push
add
mov
pop
cmp
ljmp
insl
nop
sbb
push
popa
popa
out
out
jmp
cmp
cmp
and
push
fstl
xlat
aad
shrd
sahf
sub
xchg
mov
outsb
jnp
mov
cmpsl
hlt
xlat
push
insb
mul
movsl
xor
mov
in
and
xor
xchg
fadds
cmp
outsl
fnstenv
aad
jecxz
stos
ret
jl
dec
rcrl
int3
ljmp
imul
cwtl
in
lods
jae
add
xchg
xchg
sub
rcrb
pop
push
mov
fadd
arpl
out
xlat
sbb
xchg
dec
xchg
cmp
andl
aam
or
aas
mov
jp
xchg
shlb
ljmp
aam
push
push
bound
test
and
dec
xor
fs
mov
pop
or
push
add
lods
adc
gs
or
mov
inc
in
and
pusha
pop
lock
scas
scas
les
cmp
xor
pop
shlb
cmp
jae
add
ja
sti
stc
pop
adc
shrl
push
test
and
inc
cmp
inc
bound
jo
popf
jo
nop
jmp
cmc
out
repnz
and
dec
les
or
cwtl
lret
push
or
cmp
xchg
test
insb
cmp
xchg
push
scas
and
mov
pop
jne
sbb
sbb
push
clc
jmp
sbb
movb
sub
lds
mov
add
jnp
mov
sub
popa
daa
cmpsb
out
negl
rcrb
scas
push
push
inc
push
mov
js
or
mov
adc
xchg
mov
sbb
test
ss
and
out
cltd
mov
fisttpll
jnp
or
insl
testl
xchg
int3
mov
popa
mov
hlt
mulps
jl
sub
data16
mov
pop
and
xchg
popf
lahf
push
sbb
jae
sub
inc
fwait
je
xchg
lret
push
lcall
rcll
lock
scas
je
fadd
cmp
fwait
fwait
or
and
adc
ja
mov
sbb
or
dec
ja
fistpll
adc
and
jge
jecxz
loop
adc
dec
in
or
clc
aad
pop
addr16
jbe
testb
popf
popf
xor
dec
and
ss
sbb
push
rcrb
stos
and
mov
lods
imul
dec
mov
mov
mov
clc
push
roll
sahf
int3
sub
jnp
inc
ret
fisubs
adcb
jmp
inc
int
js
cmc
add
mov
or
call
movb
fcoms
ret
repz
pop
mov
repz
popa
mov
push
mov
push
stc
inc
jb
cmp
xor
mov
jb
ss
test
cmp
int3
sahf
inc
inc
adc
shrb
cli
sti
dec
daa
push
push
es
mov
mov
je
pop
sub
nop
mov
inc
add
pop
insb
dec
sbbb
dec
sbb
int3
or
ffree
pop
imul
jns
pop
inc
jnp
dec
imul
xchg
add
mov
call
test
mov
decl
mov
add
sub
cmpb
push
inc
stos
ret
jns
dec
fdivr
and
sbb
lods
xor
movsl
loope
cmp
cmp
cmp
jp
xchg
sarb
mov
jns
mov
inc
and
lret
jp
cltd
sub
xchg
jb
test
mov
nop
add
movsl
into
loopne
jns
and
roll
cmpl
pop
pop
xchg
push
mov
je
mov
dec
frstor
fstpl
mov
and
adc
cmp
orb
sbb
ret
aas
jne
out
pusha
sbb
out
cmpsb
cmp
inc
test
dec
jo
test
adc
and
mov
aas
adc
push
cld
xchg
std
in
adc
push
cmpsl
mov
dec
sbb
andl
mov
jne
jmp
aaa
call
add
mov
fstpl
sub
adc
loope
add
cmp
jb
mov
jl
lock
jbe
insb
jne
lcall
arpl
test
in
lahf
sbb
cmpsb
pop
mov
xor
mov
addr16
lret
ret
push
lds
inc
xchg
pusha
gs
xchg
stos
pop
sbb
into
bound
push
pop
xchg
adc
in
and
shll
mov
aas
sti
and
je
dec
cli
movsb
sbb
inc
mov
popf
xchg
dec
int
into
in
jmp
dec
sub
aad
adc
movsb
pop
pop
xchg
mov
cwtl
adc
xor
cmpl
or
lds
push
mov
pop
into
xor
int3
cs
fcoml
out
nop
in
add
or
xchg
pop
les
mov
aas
das
xchg
into
mov
inc
adc
dec
cwtl
push
jbe
adc
push
sbb
in
ftst
call
mov
pusha
bound
lods
es
mov
lret
mov
jnp
popa
and
out
rolb
cli
pop
push
mov
add
push
lods
xchg
pop
int3
mov
dec
mov
call
orb
lcall
fs
mov
in
bound
outsl
sbb
das
add
mov
shlb
sub
lea
out
leave
test
jmp
and
jecxz
mov
jnp
aaa
leave
dec
out
sbb
cwtl
insb
pop
mov
cmp
icebp
lds
mov
jge
xchg
lds
dec
add
outsl
mov
out
fsub
insl
nop
scas
dec
cli
mov
lret
je
mov
jecxz
dec
jbe
cmp
or
sbb
xchg
or
cmp
rol
jmp
cmp
test
add
pop
xchg
pop
aam
add
movsb
ffree
adc
sub
sbb
inc
lcall
popa
push
xchg
mov
xchg
inc
dec
adc
dec
lret
adc
dec
outsl
add
fs
int
sub
rorl
sub
daa
xchg
mov
sbb
adc
les
sti
or
and
lahf
lock
cmp
add
dec
mov
loopne
lahf
sub
adc
daa
push
mov
cmp
dec
jmp
in
int
dec
dec
loop
pop
cwtl
aam
jo
testl
dec
stc
out
outsb
push
pop
sub
mov
sub
ret
push
dec
inc
mov
movsb
xor
std
or
data16
dec
shrb
jbe
inc
subl
sbb
pop
push
addl
mov
pop
sarl
cmc
adc
jecxz
inc
aaa
cli
xor
pop
das
imul
clc
loopne
push
mov
lods
aad
mov
subb
lds
sbb
jg
or
pop
lock
inc
ror
adc
pop
mov
nop
outsl
sti
xor
and
loopne
jecxz
shrl
jne
loopne
xchg
pop
rol
dec
lahf
xchg
pop
push
pop
and
xlat
and
fisttpl
push
ficompl
sbb
jo
mov
mov
pop
add
adc
mov
push
ja
mov
leave
leave
in
fstp
outsb
xchg
cs
mov
test
jle
fisubs
jge
arpl
push
rorb
cmc
cmp
clc
add
imul
rcr
outsl
xor
push
sub
jbe
jns
pop
xor
pminub
push
aaa
sbb
mov
insb
push
add
jg
bound
scas
iret
stc
popf
add
push
incl
loope
ljmp
xlat
das
cmp
sti
push
xor
cmc
loopne
ja
mov
insb
imul
data16
cli
out
mov
xor
icebp
xchg
lods
repnz
mov
add
jo
xor
out
jge
xor
xor
out
int3
repnz
rolb
xchg
xchg
inc
xchg
pop
cli
nop
mov
lods
sub
cmc
push
pop
jmp
add
loop
shl
ss
lahf
push
sbb
xchg
jge
jg
sbb
test
mov
mov
push
sbb
jge
or
bound
fstp
xor
xlat
popf
loope
sub
pop
dec
pop
aas
in
aaa
jp
sbb
sbb
dec
aam
jmp
fs
xor
cmc
es
shlb
sub
sub
cmp
cmp
faddp
xor
mov
sbb
and
mov
sbb
mov
dec
xor
int
enter
xchg
mov
xor
mov
adc
in
push
icebp
cmp
mov
test
pop
rcr
mov
xlat
out
cmc
mov
out
sbb
push
dec
xor
cld
jb
add
cmc
aad
cltd
ljmp
addb
push
xchg
lock
fwait
add
mov
xchg
inc
dec
popa
testb
pop
mov
mov
je
pop
aad
int3
xchg
in
jmp
hlt
int3
fbstp
xchg
divb
lock
mov
popf
mov
cmc
inc
jle
push
sub
cmp
sbb
mov
sub
push
cli
mov
inc
pop
dec
add
movsl
xchg
ffree
out
jbe
mov
sbb
fstl
adc
sbb
and
lock
xchg
and
pushf
dec
push
pop
test
and
inc
dec
dec
mov
pop
push
xchg
cltd
inc
test
jno
leave
push
cmp
test
ficomps
fnstsw
mov
add
mov
add
mov
mov
mov
repz
inc
repnz
test
or
xchg
outsb
sti
cmc
icebp
xchg
pushl
outsl
and
loop
xchg
sbb
inc
mov
and
mov
jecxz
pop
push
xchg
and
mov
stos
sbb
or
pop
xchg
lcall
out
fcomip
aas
pop
ret
mov
add
insb
hlt
pop
aaa
fimuls
and
pop
xor
stos
push
pusha
cmp
mov
jg
add
inc
dec
mov
das
dec
xor
pop
loope
adc
pop
rcll
mov
call
mov
mov
orl
xchg
orb
es
vmaxpd
xor
push
push
xchg
stos
repz
inc
addr16
inc
ss
xchg
push
dec
or
jg
push
aas
pop
mov
popaw
test
mov
sti
mov
pop
and
repz
fwait
mov
fstpt
int3
or
into
fcomip
out
out
pop
jl
movsb
inc
sub
stos
stos
fbstp
sbb
lret
iret
jl
cmpsb
sub
lret
inc
nop
xor
pop
pop
inc
push
or
jne
pop
lea
orl
jg
cmp
insb
inc
out
int
lock
pop
test
jns
negb
jge
hlt
movsl
pop
mov
lods
sahf
or
fidivl
or
std
cmp
mov
cmpsl
stc
mov
xchg
gs
mov
xor
rorl
mov
sub
cld
adc
out
fldenv
jbe
pusha
clc
cwtl
lahf
inc
shlb
outsl
mov
faddl
sbb
imul
sub
inc
mov
iret
xchg
sahf
adc
and
into
cld
dec
mov
lcall
bound
sub
pop
mov
xchg
jns
push
jp
xchg
pop
in
cmp
test
fs
push
mov
push
sarb
stos
pop
cmpsl
lret
ss
mov
or
xchg
jne
inc
cmc
mov
inc
loope
pop
jge
inc
ljmp
fmull
jp
mov
mov
inc
jecxz
fbld
cmpsb
and
push
push
push
aaa
xchg
sub
mov
mov
push
or
or
push
xlat
aaa
mov
push
insb
movsl
xor
int3
pop
out
push
stos
xor
push
jl
cmp
es
scas
xchg
lcall
push
in
out
mov
xchg
sbb
pop
jmp
das
in
lahf
and
jns
inc
mov
cld
jecxz
inc
mov
dec
fiaddl
jo
mov
test
lods
xor
mov
shrl
rcrb
push
push
cmp
mov
add
lret
in
sbb
lea
jae
arpl
xchg
dec
sti
lods
repz
adc
pop
mov
outsl
mov
pop
sub
pushf
mov
scas
cwtl
dec
mov
and
pop
nop
dec
jmp
push
add
ljmp
push
in
pop
xor
push
std
mov
aaa
mov
xor
pop
push
push
shrb
and
jbe
mov
inc
push
push
scas
pop
in
pop
xchg
in
or
jecxz
lock
pop
cltd
into
int
stos
sub
das
outsb
out
lret
pop
insl
add
je
inc
je
cmpsb
dec
pop
adc
mov
or
in
push
fimuls
add
leave
scas
sub
push
mov
lahf
cmp
inc
out
jne
xor
xchg
fidivrl
imul
jo
or
fimuls
pop
fcompl
dec
push
stos
outsb
scas
pop
dec
adc
lods
daa
fs
add
add
inc
inc
push
add
mov
xor
mov
in
cwtl
lret
fwait
repnz
xlat
adc
push
lods
adc
imul
or
xchg
test
push
insl
mov
ficomps
cwtl
inc
push
mov
jle
lds
mov
insb
sub
gs
movsl
dec
mov
mov
shlb
dec
rcr
enter
and
adc
mov
sub
fbstp
jg
xchg
stos
test
inc
adc
inc
in
call
mov
sbb
andb
es
pop
sahf
jns
scas
pop
cmp
xchg
loop
fs
and
sbb
and
dec
jge
sub
jne
in
dec
sahf
popf
fucomi
ljmp
fistpl
icebp
sbb
xlat
cs
add
push
popf
mov
xchg
imul
subb
aaa
jae
lret
xor
dec
outsb
sbbb
shrb
jb
jecxz
cmpsb
popl
test
stos
js
adc
idivb
xor
mov
in
adc
cmpsb
xchg
jo
and
insl
subl
mov
cltd
lea
out
rclb
mov
jge
add
nop
xor
idivb
jne
add
add
iret
cwtl
or
aas
inc
or
jno
jne
mov
mov
mov
xchg
and
mov
xchg
push
xor
push
cmpsl
xchg
pop
mov
push
jns
pop
inc
rclb
psadbw
dec
adc
push
dec
sbb
add
xchg
fs
inc
mov
mov
dec
ficomps
das
jnp
adc
xchg
pop
sub
jmp
rcl
jno
leave
dec
inc
cld
imulb
test
call
push
lds
inc
push
mov
jnp
push
jp
cs
xchg
xchg
jb
enter
or
mov
scas
xor
ret
lcall
cmp
ds
arpl
push
arpl
aad
jmp
mov
ret
incl
outsl
cmp
or
mov
ja
pop
test
fcoml
mov
jo
add
or
dec
out
nop
mov
xor
inc
dec
fmull
inc
push
adc
xchg
ss
movd
adc
es
lret
xchg
test
add
divb
mov
lahf
test
mov
mov
add
dec
adc
pop
in
sbb
mov
mov
scas
call
hlt
adc
adc
add
test
pushf
out
push
push
pushf
das
outsb
test
ficomps
imul
push
add
mov
xor
cli
pop
loop
fimull
bound
rcr
aam
adc
loop
mov
cs
je
js
sbb
divb
sbb
idivl
jecxz
push
popf
sbb
dec
xchg
into
pusha
adc
fwait
movsb
lahf
pop
or
mov
cmpsl
sbb
xchg
cltd
sarb
and
data16
cmp
cld
dec
add
js
mov
mov
dec
inc
jg
arpl
push
mov
ljmp
xchg
movsl
or
ficoml
js
hlt
out
dec
adc
push
pushf
loope
ljmp
dec
mov
sub
in
sbb
test
jecxz
fld
jae
mov
push
das
pop
in
dec
jmp
and
xor
shlb
sti
mov
add
jecxz
dec
inc
mov
xor
adc
cmp
cmp
mov
outsb
cmp
movsb
sbb
xchg
mov
inc
mov
pusha
pop
fidivrl
sub
je
jecxz
aas
jno
mul
fwait
push
fldenv
loopne
sbb
daa
jle
dec
mov
leave
mov
out
xchg
lret
hlt
and
leave
iret
mov
sahf
nop
mov
fcmove
push
ret
clc
fidivrs
jle
xchg
mov
xchg
or
mov
jne
ret
cmpsl
push
mov
fmull
pushf
cmpsl
movsl
loop
mov
lret
jne
sub
lahf
and
push
xchg
mov
xchg
movsl
xor
mov
push
and
sub
jmp
or
test
imul
inc
sub
mov
fsubl
inc
pop
pop
movsl
notl
xor
cmpsl
mov
xchg
push
mov
fisttpll
rcr
in
mov
in
lock
xchg
movsb
and
das
jbe
xchg
lods
push
gs
ja
mov
test
inc
test
xor
cld
pusha
pop
mov
and
xchg
inc
loopne
xlat
or
addb
dec
dec
xchg
and
scas
fwait
pushl
lea
jne
dec
test
or
std
push
inc
imul
in
fcmovnbe
sti
add
or
int3
icebp
fstpt
imull
sarb
inc
cmp
fldenv
push
mov
dec
mov
in
mov
ja
sbb
xor
sub
mov
xor
int3
sbb
icebp
mov
mov
std
out
mov
jb
fmull
cmp
repnz
dec
pop
outsl
xor
or
lret
push
dec
clc
sbb
sbb
loopne
in
xchg
ret
les
push
or
mov
inc
sbb
negl
push
std
and
std
mov
jle
jmp
push
sbb
lahf
mov
xor
jp
repnz
out
stos
fsub
sbb
and
adc
das
sbb
mov
fstl
movsl
ja
pushf
sbb
mov
mov
xchg
sti
xchg
mov
out
pop
sub
lods
rclb
and
dec
add
sbb
dec
mov
shrb
mov
aas
pop
xor
pop
call
sti
push
jecxz
subb
xorl
hlt
mov
imul
pop
or
in
add
cmpl
mov
into
or
jno
sahf
jnp
lods
jle
fisubrs
imul
xlat
mov
rol
aas
decb
and
push
push
and
out
adc
or
inc
push
aas
scas
or
cmp
cwtl
inc
and
pushf
std
push
rcrb
xor
pop
sbb
test
sub
inc
fsubl
pop
popa
xorl
fisttps
popf
push
mov
mov
sub
push
sar
stc
sub
repnz
or
mov
scas
enter
mov
inc
sub
pop
cmp
sub
sarl
repz
mov
jo
cltd
sub
cmpsb
orl
cmpsl
xor
xlat
jle
fs
ljmp
out
and
jo
into
aaa
stc
imul
shll
aam
and
add
movl
sbbb
int
jecxz
mov
inc
shlb
das
loop
js
lret
mov
mov
pop
rclb
mov
mov
xchg
scas
nop
aas
jbe
jne
mov
mov
xor
rolb
jne
andl
cmpsb
mov
mov
lea
cmp
loopne
xor
mov
mov
ret
cmp
add
aaa
mov
push
mov
sahf
mov
insl
fxtract
call
inc
inc
pusha
add
add
mov
adc
sbb
cmp
mov
or
std
dec
sub
or
icebp
cli
loopne
adc
mov
inc
add
push
mov
push
cmp
mov
jge
adc
and
or
push
lods
rcl
adc
sbb
iret
xor
xor
in
inc
mov
leave
subl
faddp
or
inc
mov
ficoml
sbb
mov
pop
cmp
fsubl
mov
jns
sar
jp
sbb
gs
inc
sbb
mov
cmp
test
mov
push
fisubl
inc
add
cli
jl
cmp
sti
inc
data16
into
test
fdivrl
pop
push
xor
mov
jle
mov
xlat
adc
ja
out
lret
and
dec
pop
cmc
imul
xorl
mov
mov
fisttps
push
fwait
lea
mov
lret
xor
mov
pop
repz
push
pop
jb
pop
xchg
dec
adc
and
mov
pop
and
mov
push
cmp
sbb
add
jne
stos
sbb
in
jo
inc
add
mov
push
fadds
bound
add
ror
mov
pusha
pop
inc
lods
mov
cmc
shll
mov
lds
sbb
lea
xchg
rcll
inc
ljmp
and
mov
adc
div
lret
inc
sbb
shll
outsl
hlt
nop
out
ret
mov
mov
dec
sti
push
cmp
popa
pop
pop
jmp
scas
std
ljmp
xlat
scas
outsl
mov
ss
xor
inc
ss
outsb
stos
lods
and
mov
das
das
sub
sub
fwait
xchg
dec
popa
inc
cli
int3
pushl
xor
lea
mov
mov
sub
jl
popa
push
fcmovne
xchg
lock
add
fstps
sub
gs
loopne
cld
jbe
or
xor
mov
inc
cmp
lcall
pusha
dec
fmull
add
cmpsl
insl
fildl
or
lods
ljmp
xlat
mov
stc
pop
dec
ss
pop
lcall
test
call
test
push
add
std
insl
dec
push
ljmp
ss
mov
mov
jg
pop
scas
popf
cltd
lock
imul
dec
out
adc
jmp
sahf
push
adc
xchg
push
push
rcl
sti
adc
cs
push
addb
sub
pop
mov
mov
out
cwtl
mov
xchg
in
pop
jae
imul
push
inc
outsl
les
lcall
pop
repz
scas
adc
mov
sub
mov
nop
out
ja
push
test
cld
sub
in
rcrb
jne
push
aaa
rorb
sbb
jmp
ficompl
sarb
cmp
adc
pusha
mov
das
pop
xor
ljmp
fisttpll
fmul
pop
or
mov
test
inc
into
mov
sub
xlat
xlat
lods
mov
addr16
push
iret
int
jae
push
aas
sub
popf
mov
jmp
sbb
into
cs
cmp
outsl
addr16
xchg
jo
addb
sub
jle
int3
ja
mov
imul
or
jge
pop
jp
jns,pt
sbb
push
inc
jp
or
or
hlt
clc
cmpsl
dec
loop
jno
pusha
lret
ret
lret
dec
jle
arpl
xor
inc
xorl
out
push
popf
mov
insb
repz
insb
ja
push
jg
pop
sub
repnz
push
or
inc
and
pop
ror
sti
data16
cmpsl
pop
mov
push
faddl
test
loop
or
mov
jo
sbb
fcoml
xor
dec
mov
call
pop
push
outsb
in
bound
mov
push
rclb
sbb
es
mov
addr16
pusha
clc
or
mov
xchg
adc
popa
pop
add
sub
jbe
xchg
in
sbbl
mov
pushf
mov
xor
jg
inc
stos
dec
xor
data16
pop
jnp
jg
int3
scas
idivl
decb
add
pop
push
adc
mov
mov
inc
mov
jg
insl
adc
lea
loopne
mov
xor
and
adc
xor
mov
leave
sub
rorl
in
outsb
dec
loopne
and
faddl
adc
shrd
outsl
imul
push
add
or
xorl
cmp
into
pop
nop
insl
in
lret
daa
fidivl
pop
daa
sub
cli
lret
fsubrp
mov
add
push
popa
inc
mov
ret
icebp
jbe
cmc
test
and
cmp
inc
ja
mov
xchg
in
dec
xor
pop
cmp
jbe
cmp
out
addl
hlt
je
and
out
xchg
scas
cmp
lock
sub
sti
test
rcrl
mov
or
fwait
xor
push
adc
aam
mov
add
pop
repnz
scas
cmp
fldt
pop
stos
mov
pop
dec
mov
stos
call
mov
xchg
push
or
pop
lods
ljmp
scas
loope
gs
dec
shl
loope
jno
leave
arpl
mov
jge
in
ret
pusha
or
xchg
aas
aad
xchg
sub
jmp
push
sarb
pop
lcall
pop
xchg
xchg
pop
push
jnp
popa
pop
xor
or
fiadds
insb
adc
fs
lock
push
xor
ds
push
int
sbbl
mov
cmp
les
sti
aaa
aaa
mov
adc
jecxz
es
pop
cwtl
mov
add
divl
push
or
movsl
fbld
icebp
add
out
rclb
or
pop
dec
cmp
addb
es
mov
fwait
loope
sahf
movsl
cmp
push
insl
pop
out
out
inc
push
test
dec
push
push
cwtl
fcom
mov
test
add
adc
cmc
shr
adc
mov
xor
jne
in
ljmp
ret
dec
cmc
xchg
push
pop
rcr
xchg
jg
lret
jmp
sahf
je
xchg
jae
xor
or
mov
push
push
icebp
cmp
push
into
xor
repnz
dec
xor
fs
pop
push
and
iret
or
add
into
dec
inc
mov
push
stos
xor
jns
mov
cmovge
insl
in
nop
inc
scas
enter
mov
push
jg
ret
mov
pop
cmpsl
in
pop
aam
xchg
jge
add
ljmp
lods
add
mov
push
mov
rcr
adc
lret
fcoms
enter
jno
fisttpll
call
popf
xchg
or
mov
mov
adc
into
cwtl
pop
xchg
mov
add
loop
add
lret
sbb
and
subl
icebp
cmc
aaa
jne
rorb
in
repnz
push
outsb
cs
dec
xchg
iret
addl
push
fwait
jg
loope
mov
aam
add
inc
sbb
in
xlat
out
cmp
leave
pop
and
out
xchg
nop
mov
xor
add
mov
push
mov
jae
fdivrl
pop
dec
in
add
fisubrs
ss
fld
cwtl
bound
inc
pop
sbb
jecxz
lcall
popa
clc
dec
jg
pop
xor
imul
fwait
adc
scas
loope
and
movsb
xchg
js
push
and
mov
aad
loope
ds
mulb
outsl
jno
jae
sti
int
pop
jbe
test
xchg
bound
dec
jb
push
jnp
pop
psubusb
insb
lret
imul
les
lods
rcrl
in
fisttps
push
das
inc
mov
rcrb
push
ds
add
sub
and
xor
dec
push
popa
lahf
sub
or
stos
out
lret
pop
sbb
scas
push
cmpsl
mov
xchg
rol
sarb
or
test
mov
adc
mov
hlt
xchg
jae
pop
sti
pushf
dec
stos
dec
into
ljmp
mov
ja
or
ljmp
and
std
gs
popa
add
movsb
addb
xchg
cmp
pop
ror
adc
mov
mov
dec
xorl
cmc
pop
ret
leave
lock
idiv
test
std
aad
das
jp
lock
repnz
aaa
inc
pop
dec
add
pop
popf
aam
push
leave
add
test
sbb
push
movsl
xorl
push
xor
dec
fimull
test
mov
jge
fmulp
ret
pop
mov
decl
mov
cmpsb
clc
movsl
lret
mov
dec
mov
nop
jg
dec
xor
push
call
fstpt
fsubs
push
sbb
mov
pop
sarb
push
fstl
sub
xchg
insb
push
pop
out
bound
lahf
mov
add
int
xor
imul
cmp
sbb
mov
stos
mov
out
mov
sahf
mov
out
outsl
shr
pop
stos
dec
lock
ja
mov
adc
sub
sub
add
mov
stos
lret
jle
divps
sbb
test
pop
mov
jnp
lock
pop
sub
sub
cmp
adc
add
outsl
icebp
push
adc
sbb
add
add
sub
loopne
rcll
xor
stc
pushf
xchg
jle
push
dec
dec
into
xchg
nop
lcall
dec
cltd
jge
das
jecxz
lock
dec
mov
fldenv
mov
jle
bound
je
scas
aam
cltd
push
aaa
arpl
sarl
lods
out
xor
push
sar
lret
mov
mov
out
lods
mov
jo
pop
out
cld
je
dec
push
jnp
test
popf
jmp
inc
jb
xor
jp
xchg
jno
pop
adc
xor
mov
mov
and
decl
jg
mov
or
mov
mov
imul
scas
push
lahf
push
stos
pop
insl
stos
addb
test
pusha
shll
stos
std
testl
daa
sub
sub
iret
daa
inc
test
mov
or
scas
inc
cvttps2pi
pop
sub
dec
xchg
incl
mov
inc
and
pop
jp
pop
adc
out
and
jl
push
mov
andb
movl
sbb
ret
add
fwait
add
mov
adc
inc
ljmp
bnd
add
push
xor
or
push
mov
mov
je
lods
lcall
mov
mov
sbb
inc
mov
nop
and
sub
xor
jp
mov
in
mov
lret
ret
flds
sub
lock
mov
mov
pop
push
mov
inc
dec
in
xchg
incl
dec
into
fnstsw
std
xchg
jge
jle
sub
add
mov
stos
jns
mov
jg
xor
iret
loop
ret
les
ret
scas
push
leave
lret
daa
and
push
adc
sahf
sub
xchg
aam
shr
lock
insb
mov
inc
rcrl
cmp
js
mov
jo
xchg
repnz
xlat
inc
fisttps
in
in
jp
adcb
pushf
or
sbb
outsb
inc
scas
cmp
les
mov
dec
cltd
adc
and
pop
cmp
dec
pusha
js
or
pop
fisubl
add
and
insl
lret
mov
outsb
xchg
xor
and
jae
lods
enter
dec
in
lods
pop
push
icebp
in
popa
cwtl
xlat
and
dec
xor
outsl
lds
out
pop
jne
jg
mov
ljmp
insb
mov
xchg
mov
fists
dec
xorb
mov
xor
pop
push
sbb
fsubrl
adc
imulb
cld
mov
push
adc
fdivs
add
cwtl
ja
cmp
inc
arpl
mov
sub
lcall
push
mov
arpl
loop
push
and
dec
xchg
call
rcr
ret
inc
stc
cld
mov
sub
pop
fs
mov
push
fninit
cmpsb
dec
ror
or
sbb
pushf
dec
add
jns
mov
dec
jg
aam
pop
mov
pop
psubw
ja
int
nop
test
push
shll
adc
jne
mov
leave
inc
sub
scas
lahf
out
jge
push
fstpl
add
push
aas
lret
push
mov
test
xchg
ds
das
dec
stc
mov
inc
jns
xor
js
insb
les
mov
dec
in
bound
loopne
xchg
xor
stos
sar
fcompl
mov
dec
mov
popf
ret
cmp
leave
loope
pop
xchg
sbb
out
mov
push
push
mov
push
pushf
and
xchg
jno
and
mov
jo
pop
mov
mov
dec
xchg
data16
ficompl
jle
iret
int3
sbb
outsl
mov
cli
scas
pop
fadd
inc
cmp
inc
hlt
ret
out
jecxz
rcrl
and
jle
sub
xor
mov
or
xchg
push
pop
xchg
xlat
test
sbb
adc
xlat
jmp
ljmp
and
mov
or
mov
jae
xor
in
push
push
test
mov
andb
fcomps
std
stc
xlat
bnd
ds
add
loop
sub
inc
pusha
push
jge
mov
sub
adc
out
xchg
pop
mov
sahf
inc
imulb
rcr
pushl
jp
xchg
rcll
adc
outsl
iret
mov
mov
pushf
dec
push
inc
movsb
add
repz
jmp
es
and
dec
jg
mov
ja
in
call
addr16
test
lcall
cmp
jno
add
mov
add
aad
push
inc
cli
filds
inc
rorb
xchg
xor
jp
adc
push
and
mov
test
adc
aas
jp
test
lret
shlb
push
or
fnstsw
xchg
stos
xchg
aad
arpl
iret
mov
mov
out
js
adc
pop
sarl
add
dec
sub
ret
cwtl
push
push
jmp
int
dec
or
mov
out
call
cmp
fidivrl
out
mov
loop
lods
cltd
dec
xchg
inc
sub
js
adc
dec
sbb
adc
inc
cmp
xchg
mov
jmp
adc
xchg
mov
mov
fcoms
mov
loope
nop
scas
cmp
dec
adc
cmp
or
sbb
xor
pop
js
and
repz
lahf
push
addr16
mov
pop
jmp
and
out
ja
and
jl
xor
sub
sbb
test
enter
sti
pop
sbb
xchg
xor
and
clc
cmp
clc
push
mov
xor
ret
dec
popw
cmp
cmp
int3
dec
lcall
and
scas
or
push
adc
push
inc
xchg
push
add
hlt
or
test
and
sbb
fsubr
outsl
mov
and
push
stos
xchg
lahf
mov
inc
adc
push
xlat
orb
dec
add
aam
cwtl
dec
sbb
out
xchg
sahf
mov
jp
repnz
inc
push
pop
mov
sti
mov
or
out
and
mov
insb
inc
popf
dec
sub
and
shll
xchg
loopne
icebp
testb
sub
and
xor
mov
roll
jecxz
pop
fiadds
dec
jp
in
xor
sub
roll
and
adc
and
sbb
mov
fsts
in
jg
jns
ss
jnp
test
push
mov
shrb
xor
data16
dec
and
out
sub
mov
xchg
lahf
outsb
test
daa
push
add
mov
data16
enter
pop
lret
fisubrs
pop
lcall
lcall
sbb
cli
insl
adc
call
cmc
pop
sbb
push
pop
push
leave
mov
sub
nop
pop
sbb
jnp
mov
mov
add
and
pop
mov
or
outsb
or
lods
out
cmpsb
inc
js
sbb
mov
clc
fistps
arpl
xor
outsl
aad
and
adc
or
sub
jb
cs
mov
mov
mov
or
bound
pop
sti
or
pop
inc
fidivrl
mov
xchg
cwtl
fmulp
or
sarb
in
mul
test
xchg
fsubl
push
iret
and
sbb
add
push
fmuls
mov
mov
lcall
pop
xchg
mov
push
mov
push
arpl
int3
jns
jle
sbb
movsl
aam
outsl
jmp
idivl
fistpl
mov
test
add
std
mov
ds
sbb
xchg
sbb
jl
jnp
mov
rorl
jo
sub
les
insb
inc
sub
mov
dec
repz
cwtl
pusha
popaw
mov
pop
into
jle
xchg
xchg
outsb
push
testl
jb
test
fbstp
ret
je
sahf
popf
int3
lahf
int3
xchg
aam
mov
push
cmp
shll
inc
mov
pop
xor
dec
ficoms
into
inc
out
cltd
mov
mov
pop
inc
push
xchg
mov
inc
adc
fsubrl
or
xchg
dec
or
push
sbb
ja
jb
les
sub
ja
cmc
int
and
or
ror
inc
stos
jecxz
or
in
test
loopne
jns
mov
inc
xor
fidivl
dec
ds
mov
inc
iret
xchg
shl
inc
test
fdivrl
jmp
adc
rolb
mov
mulb
xchg
insb
or
xor
mov
sbb
push
push
lret
in
pop
scas
insb
outsb
push
subl
pusha
jo
popa
lahf
xchg
inc
xorl
loop
add
push
lods
push
and
out
dec
push
xchg
bound
cmpsl
stos
dec
cli
loopne
add
cmovne
fucomi
cmp
and
cmp
sahf
popa
jbe
adc
jp
or
setne
cmc
imul
add
fwait
lea
aad
in
mov
hlt
pop
cld
in
ret
inc
or
cmp
mov
add
xchg
sub
mov
push
sub
call
je
jge
lods
insl
out
pop
mov
mov
xchg
lret
imul
clc
xchg
ror
mov
xchg
sti
mov
pop
cli
test
in
rcl
mov
fcomp
out
mov
add
cmp
pop
mov
pusha
rolb
int
aam
cwtl
jp
mov
fsubrl
sbb
daa
jle
xchg
xor
in
imul
jb
sbb
out
ret
sbb
mov
mov
rcrl
ljmp
jae
mov
mov
push
mov
adc
ficoml
xchg
cmp
mov
mov
sbb
mov
pushf
lea
inc
sbb
jno
addl
sahf
jnp
or
ffree
mov
popa
mov
mov
pop
cmp
out
imul
mov
scas
dec
nop
ds
or
mov
lcall
mov
jbe
cmpsb
lods
sbb
daa
fwait
push
out
popa
mov
gs
std
lahf
pop
lahf
adc
xor
lods
dec
clc
or
outsb
fwait
insb
xchg
push
mov
into
ljmp
xor
cmp
adc
je
sub
xchg
mov
add
push
in
sbb
jno
fistpl
aad
add
push
test
mov
clc
jle
xchg
and
insb
jmp
repnz
cld
std
cmp
out
js
inc
pop
jbe
roll
repz
ja
xchg
dec
shrd
jo
outsl
cmp
movb
insb
xor
and
adc
sbb
cmpsb
cltd
pop
int3
or
or
mov
add
push
decl
jne
fcompl
arpl
or
movlps
xchg
add
test
cmp
jns
aad
sbb
push
jle
adc
fldcw
mov
fldt
jmp
xor
sahf
or
pop
ret
ret
xchg
sbb
outsl
hlt
add
out
scas
movsl
insb
xor
mov
fcompl
sbb
movsl
inc
pop
inc
stc
test
fsub
sub
outsl
pop
aaa
xchg
bound
jg
jmp
pop
push
sbb
or
mov
add
sbb
clc
and
enter
jp
sti
or
bound
in
clc
add
mov
sbb
aas
icebp
aas
mov
dec
push
popf
mov
gs
mov
cld
sbb
lcall
lods
aad
mov
dec
daa
shrb
pop
lods
pop
and
fwait
jl
dec
inc
cmp
notb
outsb
sbb
dec
sbb
jns
dec
into
jno
sub
fidivl
rcll
ret
imul
lret
icebp
dec
pop
outsl
fwait
mov
mov
repz
std
jno
pop
inc
jl
pop
or
roll
mov
movsb
fs
jo
xchg
fwait
jns
js
pop
stos
in
outsb
xor
or
inc
pop
cwtl
outsl
push
jo
xchg
outsl
cmp
add
sub
adcb
inc
bound
push
xor
xor
mov
mov
jns
jecxz
pop
sub
pop
icebp
and
inc
xchg
inc
or
inc
pop
mov
lea
dec
dec
js
shlb
in
cmp
dec
std
out
push
ret
pop
mov
loope
mov
or
testb
clc
sub
jmp
pusha
int
in
sbb
cmpsl
std
mov
jle
mov
push
inc
stos
dec
test
xor
or
rclb
movsb
xlat
movsl
jnp
les
loopne
pop
jmp
sahf
sahf
icebp
cltd
arpl
pop
decl
shr
arpl
cmpsl
sub
or
cmp
add
rcrb
add
or
xor
jno
sbb
or
push
dec
out
cltd
xchg
std
sbb
loop
jecxz
and
fisttpll
jle
jmp
xchg
ret
mov
cltd
and
and
xchg
or
jne
inc
notl
pushf
inc
outsl
loopne
xor
add
mov
mov
jb
and
in
roll
loopne
out
cmpsb
sbb
ja
lret
jmp
pop
and
or
sahf
pop
or
sub
mov
jns
aam
shrl
sbb
sub
push
sbb
out
cmp
pop
fistpl
es
or
mov
shr
pop
jno
divb
add
and
xchg
push
push
pop
adc
xlat
dec
jo
adc
push
ss
inc
test
std
repz
lret
and
xchg
nop
push
xor
add
pop
cmp
cmpsb
sbb
std
mov
jl
arpl
subl
pop
push
adc
mov
js
test
inc
lods
xchg
mov
mov
repnz
jl
sub
bound
arpl
jge
push
jo
or
jecxz
and
aad
mov
jae
adc
ret
inc
mov
or
mov
pop
dec
xchg
push
pop
fistps
scas
int
int3
test
sub
cmp
addr16
fs
mov
mov
fs
leave
negl
or
pop
sbb
test
lock
mov
lcall
pop
mov
sahf
les
in
dec
aaa
dec
sar
xchg
in
sbbb
pop
sbb
mov
in
outsb
cwtl
mov
pop
outsb
rcrl
fmuls
outsl
popa
dec
mov
mov
fldt
pop
xor
pop
in
cld
fldl
push
cmp
ds
pop
je
jmp
mov
cltd
frstor
outsl
ret
mov
lea
test
push
mov
sub
ret
sbb
mov
jge
lock
or
orl
jns
pop
adc
fnstsw
data16
ret
push
imul
dec
sbb
push
cmpsb
shrl
mov
ss
jg
nop
in
call
cs
shll
pop
out
repnz
mov
dec
mov
adc
push
xor
pop
jb
pop
mov
rcll
cld
dec
mov
cmp
jbe
cmp
mov
and
or
or
push
cmp
outsb
test
xchg
mov
jle
inc
test
fisubl
push
inc
mov
mulb
aam
fbstp
xor
mov
cmp
jge
jnp
aaa
mov
ret
lods
pop
jb
add
sub
clc
pop
bound
sub
dec
divb
adc
in
xchg
dec
add
mov
sbbb
and
aas
das
jno
in
sub
add
jmp
sub
leave
or
mov
das
loope
and
sub
xchg
loopne
aam
and
mulb
lods
and
jg
mov
xchg
pop
pop
out
outsb
test
cmpsb
xchg
jae
fisttps
mov
jbe
gs
js
push
enter
clc
daa
stos
inc
cltd
mov
loopne
jecxz
cld
mov
nop
dec
cmpsb
adcl
mov
fcmovb
iret
icebp
test
jecxz
lds
clc
les
jp
xchg
icebp
ret
pushf
and
mov
jl
mov
xchg
aam
mov
cltd
xor
jae
cli
sub
push
or
outsb
inc
and
push
out
jp
call
add
scas
aas
and
inc
dec
outsl
fisttps
or
lods
mov
in
pop
enter
and
sbbb
insl
add
mov
mov
scas
movsl
call
mov
lahf
mov
lahf
mov
sub
sub
jns
hlt
fwait
pop
std
stos
jmp
push
outsl
cmova
jno
fimuls
push
adc
mov
dec
adc
addr16
jne
pop
daa
out
mov
jbe
fdivs
lahf
and
pusha
jnp
and
mov
js
loopne
js
pushf
push
push
push
or
pop
repz
fnstsw
jecxz
push
push
push
mov
into
push
inc
sub
cmc
pop
bnd
je
data16
roll
sahf
lahf
cltd
cmp
movsl
xor
scas
imul
cwtl
push
mov
sub
cmp
fisttpll
insb
mov
js
stos
push
jp
leave
rclb
xchg
push
sub
push
dec
addr16
push
or
jle
dec
out
inc
cld
push
mov
cmp
push
adc
fbstp
jp
mov
dec
push
into
mov
cltd
cmp
fistps
push
fcomp
arpl
dec
into
cmp
xor
and
scas
ds
or
xor
out
cmp
jns
adc
xchg
add
add
js
loope
jnp
jo
mov
out
ss
xchg
lods
jle
and
xlat
pushf
sbb
lods
sbb
mov
aas
fisubrs
sub
aas
inc
sarb
lar
adc
xlat
mov
sub
xor
dec
out
pop
jp
cltd
popl
xor
pusha
push
or
pop
icebp
shll
insb
xchg
insl
movsb
outsl
mov
insb
jmp
pop
mov
loop
adc
sbb
les
sub
cli
test
scas
jg
jecxz
ja
pop
push
es
cmpsl
data16
daa
mov
pushf
arpl
xor
dec
in
jne
cmpsl
sbb
mov
sub
ret
sbb
jns
mov
mov
inc
out
aad
mov
mov
cmp
and
mov
and
dec
pop
cwtl
mov
and
data16
divb
or
mov
jne
jle
pop
add
ja
push
xor
sub
pop
push
test
ljmp
or
push
sti
pop
rorb
cmp
adc
ds
mov
lods
movsb
and
mov
mov
fistl
pop
cmp
xorl
imul
lcall
mov
and
arpl
add
sbb
or
inc
lods
inc
out
addr16
sub
lds
jmp
jno
notb
push
mov
in
pop
dec
sbb
negl
and
mov
xchg
or
cmp
pusha
sub
stos
cmpsb
mov
fs
rclb
mov
pop
fldcw
imul
xor
cmp
sbb
test
add
jno
adc
push
cmp
xchg
mov
shll
orl
or
je
lods
mov
sub
push
popa
sub
xor
imulb
enter
mov
test
into
sarl
xlat
jne
pop
mov
mov
xor
imul
xor
or
outsl
adc
push
pop
dec
sbb
mov
rcrb
call
mov
icebp
pushf
fnsave
and
aam
insl
jnp
leave
fidivs
xorl
sub
ret
jo
sub
ret
mov
mov
sti
and
xor
fldt
cmp
add
add
roll
scas
push
inc
dec
pop
push
iret
push
inc
xchg
nop
or
sbb
adc
pop
jnp
and
pop
insl
aad
jae
xchg
insl
jle
lret
sbb
or
jge
les
mov
fs
pop
xchg
das
andb
pop
jbe
in
test
bound
sub
nop
mov
dec
cmpb
or
es
das
mov
dec
aas
fmull
sub
cmp
inc
xor
arpl
int
out
roll
mov
adc
sub
jle
in
mov
lods
cld
hlt
dec
and
out
div
lods
and
out
mov
jecxz
movsl
lcall
aam
jne
xor
mov
mov
mov
xchg
xor
lea
adc
sub
cmpsl
cmpsl
test
rcrb
in
push
fs
sbbb
xchg
loop
ss
stc
pop
iret
xchg
mov
push
jns
not
and
push
mov
pop
sub
in
out
or
mov
pushf
js
jle
bound
shr
pop
pop
popa
inc
xor
scas
in
dec
cmpsl
inc
xor
repz
flds
dec
cmp
movsl
add
leave
mov
mov
and
mov
xorb
arpl
icebp
rcll
addr16
pop
mov
mov
rsm
cmp
jl
add
in
mov
push
pusha
lcall
mov
sub
test
add
dec
lahf
popf
mov
pop
lods
sbb
mov
mov
sbb
xchg
das
vmread
add
inc
and
scas
add
xchg
inc
ret
leave
pushf
push
aas
js
hlt
popa
push
orb
out
mov
mov
mov
xchg
cmpsb
mov
in
mov
stc
or
dec
adc
out
les
mov
incl
inc
push
mov
cs
mov
pop
mov
cltd
call
mov
int
sbb
xlat
scas
mov
shr
mov
into
bnd
jbe
xchg
jl
insb
jno
lock
and
pushf
jmp
stc
shl
in
repnz
xchg
pop
mov
add
and
jmp
xchg
iret
jo
mov
cld
enter
stos
push
mov
push
sbb
push
adc
insl
nop
xchg
leave
dec
pop
sub
popf
and
pushf
mov
cld
movaps
call
jge
shlb
fildll
jge
add
repnz
je
xchg
lret
xchg
lds
ja
daa
fstl
adc
iret
or
or
cs
mov
stos
repnz
aam
out
lea
add
pop
add
cs
and
jmp
popl
pop
jae
sub
jle
inc
lahf
jp
imul
mov
cmp
imulb
testl
es
rclb
ficomps
fwait
jecxz
jge
cmp
push
insl
pop
pop
fldt
push
add
lds
and
adc
clc
frstor
mov
xlat
lds
inc
and
mov
pusha
pop
adc
out
push
pop
and
inc
jp
icebp
or
addr16
jmp
loopne
xchg
add
pop
xor
aas
sbb
lahf
mov
xor
dec
inc
sub
gs
cmc
pop
outsb
arpl
xorb
add
mov
not
inc
dec
dec
shll
sbb
push
aad
out
jp
mov
mov
sbb
les
pop
inc
cmp
popf
mov
ret
jmp
arpl
push
or
sti
sub
xchg
orb
xchg
dec
cmp
loope
bound
arpl
or
adc
pop
or
add
cli
sub
mov
jb
xchg
clc
sub
fyl2xp1
pop
in
adc
mov
jl
popa
sub
stc
insl
mov
pop
xchg
test
loope
push
clc
mov
outsl
imul
mov
fwait
xor
das
inc
test
aad
dec
pop
ljmp
ljmp
mov
inc
sub
inc
cmpb
cmp
mov
lret
inc
sbbb
inc
subl
add
adc
add
mov
push
dec
dec
cld
aam
ret
pop
into
xor
push
mov
and
add
adc
push
adc
nop
aad
mov
inc
std
es
shlb
std
movb
ret
stos
in
push
push
or
xchg
loopne
sub
icebp
mov
xor
lock
pop
push
data16
add
jb
add
mov
or
xlat
jb
mov
inc
lds
in
ror
mov
push
mov
sbb
adc
decl
mov
out
and
testl
mov
adc
testb
enter
fidivl
inc
inc
sahf
mov
adc
cwtl
jb
jne
cltd
mov
pop
adc
stos
sub
sti
mov
xor
inc
mov
cmpsb
lret
fdivl
cli
mov
fs
inc
mov
mov
mov
scas
add
dec
mov
or
mov
test
mov
ss
mov
lcall
push
stos
adc
mov
test
xchg
sar
daa
xorl
lret
int
push
xor
test
or
js
int3
loop
inc
sub
iret
xchg
lea
movsb
imul
adc
into
loopne
dec
fildl
mov
or
adc
rcrb
lds
mov
push
cld
jnp
add
xor
gs
push
pop
jnp
mov
icebp
pmaddwd
je
sbb
push
insl
cmp
lods
sub
daa
cmc
mov
dec
shll
inc
mov
xorl
jecxz
xchg
xchg
loope
insb
sub
out
stos
loop
mov
sbb
lods
sub
inc
cmp
js
mov
lahf
add
popa
xchg
aas
mov
sub
push
jb
pop
dec
push
mov
xchg
mov
sub
in
inc
in
jb
shr
mov
int
in
adc
pop
out
sti
movsb
push
add
inc
fidivs
ss
or
add
sub
fldenv
stos
jmp
into
inc
shl
cmp
mov
loop
stc
cmp
or
mov
lea
add
call
inc
sub
mov
pop
pushf
repnz
test
dec
fimuls
and
in
in
ret
xchg
stos
ss
cld
pop
push
iret
jmp
jno
pop
nop
stc
mov
mov
jo
push
outsb
cli
push
add
in
jbe
dec
int
js
xchg
movsb
movsl
jno
mov
add
lahf
push
adc
loopne
ja
js
pop
mov
inc
jle
sbb
pop
divl
dec
xor
jbe
mov
adc
ds
sbb
mov
or
addl
fdiv
popf
pop
in
movzbl
imul
roll
stos
addb
mov
popf
bound
lcall
ret
or
jle
in
xchg
or
loop
mov
add
inc
cmp
cli
aaa
dec
push
jg
movsb
iret
enter
mov
in
jp
xchg
repz
inc
inc
fneni(8087
fsubl
arpl
cmp
adc
push
jbe
dec
sub
cld
stc
xchg
test
adc
or
push
stos
test
icebp
lcall
cmp
rcrl
stos
sub
mov
mov
jns
xchg
mov
pop
leave
rcll
movsl
dec
popa
addr16
mov
mov
daa
jmp
sub
fadd
mov
pusha
pop
ss
add
jns
mov
or
xor
movsl
adc
gs
sbb
fadds
cld
add
popa
push
xchg
pop
roll
pop
mov
fwait
cmp
xchg
addr16
ret
repz
popf
pop
push
jp
into
clc
pop
stc
aaa
icebp
insl
arpl
mov
push
rcr
add
jb
dec
cwtl
xchg
test
fs
repnz
xor
xchg
ficoml
push
dec
mov
int3
jno
das
arpl
cmp
cmp
or
rol
mov
lret
cmp
fisubs
add
push
and
push
xorb
cltd
inc
pop
cmp
test
into
lret
sbb
lods
les
pop
cmp
int
lret
mov
add
add
push
fs
adc
xor
xchg
sarl
roll
push
push
cltd
jno
inc
push
out
test
and
push
jbe
test
jbe
xchg
lcall
sub
mov
mov
mov
loope
jne
fprem
push
cmp
xor
arpl
pop
or
push
jmp
push
pop
movsl
cmp
call
add
in
rcr
fbstp
xor
popf
repnz
dec
cwtl
sbb
sbb
sub
mov
lret
dec
and
stos
sub
fbld
sbb
lock
pop
add
clc
dec
adc
pushl
aad
sbb
mov
mov
push
sbb
lds
addr16
nop
or
std
movsb
or
adc
cld
xor
fsubrp
xor
adc
dec
stos
and
into
pushf
out
or
jns
es
push
lret
das
sbb
lret
fs
mov
or
mov
rclb
pop
or
test
in
add
push
inc
xchg
jl
and
mov
ljmp
sti
out
lods
mov
inc
aas
out
cli
dec
dec
stc
sahf
js
jge
push
rol
mov
mov
cmp
xor
xchg
inc
push
dec
mov
inc
xchg
cltd
testl
rcll
ror
mov
mov
adc
sub
sbb
scas
push
push
stc
inc
inc
adc
popf
and
push
es
subl
lods
ficomps
loopne
test
repnz
insl
scas
iret
fld
mov
lods
repnz
ret
mov
jge
adc
or
cmpsl
shll
insl
push
jns
mov
xchg
adc
aaa
into
jbe
inc
clc
jns
mov
and
cmp
sub
lahf
pop
inc
cmp
mov
jecxz
mov
push
repz
sti
sub
mov
int3
out
addr16
clc
push
cltd
stos
int3
bound
mov
in
out
daa
jae
mov
or
ja
add
sbb
sbb
in
aaa
stc
ffreep
cmc
mov
inc
out
repnz
aad
sarl
push
xor
insb
lds
push
bound
mov
mov
lret
ljmp
pop
jl
xor
mov
lret
push
sub
cld
stos
mov
mov
jp
adc
pop
mov
add
loop
pop
adc
stos
orl
bswap
or
mov
jmp
xor
xor
or
mov
adc
mov
dec
pop
shlb
imull
lods
sub
and
inc
inc
rcrb
mov
push
scas
aad
addr16
ds
mov
out
jg
cmpb
push
inc
sbb
push
inc
pop
mov
xor
pop
push
xchg
scas
lea
jmp
xor
lock
xor
mov
insb
mov
movsl
addr16
or
mov
add
xor
jne
pop
jp
mov
add
lret
fists
mov
sbb
xor
rcrl
test
ja
repz
mov
or
arpl
or
pop
int3
imul
dec
aaa
out
test
test
hlt
xlat
mov
and
jo
pop
jno
movsl
mov
ss
addb
xor
xchg
jmp
test
jnp
scas
mov
cmp
cmp
imul
pop
mov
push
jnp
xor
dec
stc
add
jmp
es
mov
push
fwait
or
cmp
add
aad
and
push
push
insl
shrb
inc
add
jle
in
dec
mov
xor
scas
add
jbe
ret
shlb
insb
adc
push
jno
aaa
cmp
sti
rcrl
out
cmpl
or
jae
sbb
xchg
dec
and
xchg
insl
ret
ret
cmc
lods
cmc
outsb
clc
pusha
push
push
push
pop
cli
xchg
sbb
jns
ret
jmp
or
loope
xchg
loop
call
dec
cmpsl
sbb
shlb
outsl
jne
cmp
pop
out
cmp
lods
cmp
insb
push
ss
mov
xlat
aaa
outsb
aad
std
mov
push
outsl
fmuls
adc
lret
mov
or
scas
mov
xchg
xchg
mov
xchg
scas
bound
arpl
call
fstl
loopw
and
dec
mov
js
mov
xor
sarb
lret
mov
push
sbb
sbb
dec
scas
cmp
push
pop
imul
imul
mov
decb
jge
mov
stos
mov
lahf
fnstsw
push
add
jns
jl
loopne
sbb
test
dec
aam
mov
aam
aaa
add
inc
lret
pop
cmp
push
pushf
loope
jne
clc
jecxz
fmuls
xchg
das
xor
and
adc
jle
or
cmp
mov
outsl
adc
inc
lcall
test
mov
sub
ja
gs
cmp
dec
adc
inc
dec
mov
adc
mov
add
xchg
mov
fidivl
fisttps
inc
and
push
xlat
es
jbe
das
lods
fisttpll
inc
aas
repz
enter
insb
loop
test
adc
inc
cld
sub
cmc
inc
push
push
mov
mov
mov
lcall
sarb
push
xor
adc
xor
pushl
add
stc
test
dec
repnz
popa
scas
pop
or
negl
push
sub
adc
inc
push
push
cmp
lds
call
repnz
ret
jae,pt
push
dec
stc
outsb
add
push
and
idivl
cmp
cmpsb
insl
xor
and
lods
aad
jno
adc
or
sub
notl
fwait
cmpsb
add
jl
inc
xchg
shlb
sbb
cmc
xor
sub
push
xchg
or
xchg
orb
lods
test
add
ss
sbbl
gs
dec
and
dec
cld
aas
mov
repz
mov
jbe
inc
movl
sarb
adc
mov
insl
enter
aas
clc
adc
mov
int3
sbb
cmp
push
mov
inc
inc
std
insl
xchg
sbbb
call
xor
in
adc
dec
ret
ljmp
ds
inc
movsb
xor
js
sar
xor
jmp
mov
mov
inc
add
mov
pop
mov
mov
shrl
daa
loopne
daa
fsubrl
xchg
and
push
sahf
adc
ja
or
inc
dec
dec
xchg
dec
fdivs
push
inc
fistps
mov
test
pusha
hlt
cmp
jecxz
loopne
int
adc
js
mov
sbb
pop
in
sub
push
arpl
push
jns
mov
lods
sarb
push
mov
addr16
push
in
sti
loop
jge
dec
sbb
inc
add
inc
mov
inc
xchg
push
iret
push
push
mov
xor
dec
fnstsw
xchg
imul
pop
cli
aad
cwtl
imul
bound
sbb
test
push
pop
lock
push
inc
mov
sbb
or
pop
mov
popf
dec
adc
cli
mov
pop
lret
jb
rorl
lcall
pusha
mov
scas
sub
adc
push
loope
shll
arpl
test
push
push
sahf
add
xchg
in
cmpsl
or
loope
outsl
push
mov
dec
dec
cmc
sbb
stc
xor
fiaddl
or
push
inc
in
pop
dec
aas
sbb
add
jns
sbb
xchg
cmp
into
scas
adc
sti
out
sub
pop
jo
gs
loopne
mov
or
xchg
dec
cmp
enter
outsb
push
push
dec
cmp
and
jmp
pop
xchg
mov
jns
test
xor
imul
mov
push
jb
inc
and
mov
stos
xchg
sti
push
or
inc
test
adc
xchg
in
enter
insl
add
cmp
cs
cmp
push
movsl
aad
ljmp
cmpsl
shlb
jl
dec
cmp
arpl
cmp
xchg
push
pop
cwtl
jl
out
add
pop
add
sbb
sahf
mov
adc
xchg
mov
cmp
and
lea
aad
add
call
test
les
or
jae
cld
rcrl
push
add
lret
xor
mov
add
cmp
cwtl
or
sbb
push
xor
adc
xchg
stc
mov
movsl
mov
imul
ror
jmp
fcmove
inc
lock
jl
or
hlt
inc
mov
popf
roll
in
and
cmp
mov
mov
lret
shlb
mov
out
inc
push
popf
mov
cwtl
mov
mov
dec
sub
lahf
sar
and
ds
cmp
insl
daa
test
test
std
test
mov
repnz
add
add
gs
push
or
jl
inc
jg
xchg
push
movsl
pusha
scas
adc
xor
test
lret
jp
mov
pushf
sti
mov
xor
imul
add
out
imul
and
jo
xchg
insl
in
mov
adc
adc
repz
negb
jne
cwtl
mov
lret
fisubl
idivl
mov
loope
pop
pop
xor
and
fisubrs
push
outsb
xchg
rorl
clc
jbe
jle
negb
outsb
bound
shrb
push
push
pop
cltd
pop
sbb
add
mov
dec
mov
add
mov
push
push
cmp
cmc
add
dec
sbb
lock
cmp
data16
cmc
fwait
movsb
popl
adc
jecxz
jp
fldcw
addr16
and
cwtl
inc
call
pusha
negl
andb
jp
inc
std
insl
lahf
or
jnp
jbe
lods
inc
mov
lcall
jecxz
repz
leave
pop
fadds
popf
inc
js
iret
repnz
es
mov
sbb
adc
dec
cld
aas
cmpsl
sti
jnp
push
sbb
sbbb
sbb
rclb
imul
std
adc
mov
roll
scas
shl
mov
mov
xchg
adc
xor
mov
dec
loop
or
push
nop
fmuls
and
test
inc
fs
add
xchg
outsl
fwait
sahf
hlt
pop
inc
mov
sub
push
jecxz
mov
mov
add
adc
stc
jo
addr16
sub
cmc
repz
mov
inc
mov
cli
lods
shll
daa
push
or
or
ljmp
add
in
cmp
jecxz
xchg
shlb
test
pusha
pop
jne
je
inc
call
cli
pop
mov
into
aam
repz
cmpsb
jno
fnsave
mov
xor
cmp
hlt
mov
xlat
repnz
idiv
sbb
int3
ret
loop
push
les
and
jp
xor
shll
adc
pop
jne
pxor
jne
xchg
test
jne
addr16
notb
stos
loope
addr16
ss
outsb
loope
or
cmp
push
xchg
push
loop
pop
dec
repz
mov
inc
jge
xor
sti
and
leave
es
rcrl
in
xchg
mov
mov
xchg
ds
jns
mov
mov
imul
xlat
fsubrs
dec
addb
mov
mov
mov
dec
dec
ror
jecxz
dec
mov
xchg
push
mov
add
mov
jp
fsubs
jle
and
push
and
stos
mov
outsb
lods
xchg
push
sub
subb
cli
int
mov
pop
outsl
shll
ret
sbb
mov
repnz
inc
sti
or
mov
stos
mov
mov
sbbl
gs
mov
add
inc
or
add
aaa
lahf
and
pop
cmp
xchg
movsb
cli
or
jbe
fmull
add
xor
out
into
hlt
mov
sahf
or
ret
repz
fiaddl
fisubs
out
push
leave
cwtl
ret
jb
add
popf
mov
mov
scas
jae
arpl
add
jl
lea
filds
push
sub
imul
in
add
ljmp
jbe
mov
cltd
mov
dec
or
adc
mov
add
out
jns
imul
mov
inc
loope
dec
inc
ja
cmpsb
fwait
lcall
pop
rdmsr
mov
xchg
xor
hlt
pop
inc
jb
icebp
or
js
adc
outsl
stos
jo
orb
xchg
jmp
or
jp
and
clc
add
lcall
das
sub
mov
lret
negb
call
test
fadd
ret
int3
cmp
xor
leave
icebp
cmp
xchg
ss
hlt
xor
es
pop
pop
ljmp
pop
push
sub
cli
adc
xlat
popf
outsb
ja
outsb
arpl
loopne
mov
push
aad
or
add
js
sbb
mov
test
lret
movsb
movsb
in
iret
fs
push
mov
and
push
sub
ja
mov
inc
xor
mov
xchg
push
cmp
xchg
mov
testb
test
mov
ret
mov
sbb
insl
push
dec
pushf
in
out
pop
inc
dec
cmp
sbb
lahf
adc
in
pop
cmp
aas
out
outsl
enter
std
mov
cli
into
or
callw
mov
xchg
jo
lods
test
pop
dec
push
enter
iret
movsb
inc
push
fcoml
jb
lretw
push
fs
mov
aad
lods
add
loope
icebp
and
aad
adc
add
mov
outsl
cmp
push
ljmp
jne
ret
roll
sbb
in
ds
push
ret
movsl
sub
jae
das
outsb
dec
dec
mov
movsb
imul
jle
cli
mov
iret
lea
ss
adc
clc
pop
cmpsb
fstps
lcall
push
fbld
push
fistpl
dec
or
push
les
loopne
enter
call
cmp
stc
push
cli
scas
rol
lret
push
repnz
xchg
imul
test
pop
mov
mov
aas
outsb
rcrb
or
inc
cmp
aad
adc
fs
inc
dec
out
gs
adc
sbb
ljmp
xorb
sbb
movsb
dec
ds
cmpsb
mov
mov
jno
lds
adc
fldenv
in
add
adc
outsl
mov
dec
movsl
mov
outsb
shl
jne
pop
push
or
loope
jg
rcrl
out
test
sub
xlat
sahf
repz
and
push
push
lcall
inc
lock
lret
mov
cmp
addl
stos
ljmp
ds
sahf
lret
roll
stos
xor
cs
lods
test
movsl
and
dec
and
sbb
and
dec
loop
cmp
mov
mov
pop
gs
inc
loop
xor
pop
pop
popa
mov
inc
jp
loopne
rcll
fldcw
mov
mull
adcl
jecxz
in
pusha
nop
jb
pop
jg
mov
jle
js
mov
repnz
or
mov
adc
popf
mov
push
sub
je
mov
shlb
push
nop
js
hlt
insb
hlt
adcl
pop
stos
dec
sub
mov
pop
fadd
scas
clc
cmpsb
xor
out
jo
cmp
xor
xchg
cmpsb
popa
dec
add
fbstp
inc
mov
and
leave
push
in
mov
and
addb
mov
sarb
cmp
mov
push
adc
pop
mov
cmc
xor
leave
popa
adc
pop
inc
mov
rorl
add
pop
dec
and
sbb
sub
sub
mov
add
test
lcall
xchg
in
js
shr
add
jb
repz
add
push
adc
cmp
cmp
mov
imul
xor
lcall
fadds
fbstp
cmp
jmp
jge
add
pop
and
leave
shl
xor
adc
orl
cs
fists
inc
push
lcall
cltd
clc
xchg
jo
mov
sub
or
cmp
aam
lret
jnp
pop
sbb
mov
push
dec
dec
adcb
mov
decl
and
lock
ret
add
xchg
test
cltd
cmp
push
xlat
je
aaa
cmc
pushf
mov
inc
push
sub
pop
push
mov
push
xor
jne
mov
adc
push
lahf
test
fcoml
jne
sti
push
cmp
rcrl
inc
jb
and
inc
cmc
cmc
mov
fldenv
and
or
inc
adc
mov
lods
fdivl
or
cwtl
xchg
rorb
dec
dec
push
sbb
mov
popa
adc
inc
cmp
scas
add
jg
jge
mov
int3
daa
push
and
inc
xchg
mov
dec
popa
and
mov
jecxz
mov
add
insb
pop
imul
pop
fstl
lods
outsb
cli
mulb
adc
sahf
sub
rorl
aad
cmp
cmpsb
xchg
mov
je
xor
or
or
leave
sub
mov
xchg
add
adc
in
lcall
inc
xchg
sbb
sub
bound
push
std
je
arpl
mov
outsb
fs
jg
jge
xor
xchg
mov
addb
cmpsl
mov
mov
aaa
je
and
aas
mov
mov
fbld
sbbb
dec
scas
jp
dec
icebp
cmp
jne
pop
push
imul
cmp
test
sti
in
inc
test
push
jecxz
bound
pop
lahf
sub
lret
adc
push
ret
inc
cmp
push
jo
inc
xor
ror
jmp
dec
aas
pop
pop
in
cmpl
or
sub
mov
mov
pop
adc
test
mov
mov
add
dec
sbb
xor
shl
fs
cld
xsha256
cmpsb
push
jecxz
out
push
std
adc
cwtl
jno
sarl
testl
pop
int3
movb
push
test
and
and
pslld
shl
mov
fs
mov
mov
jnp
das
adc
frstor
pushf
push
cli
inc
out
data16
mov
ret
movsl
adc
repz
cltd
or
mov
fldl
mulb
push
repz
cmp
faddl
mov
loop
jae
mov
dec
por
dec
mov
sbb
adc
cltd
out
lret
mov
iret
adc
mov
outsb
int3
mov
and
jle
cmp
lret
add
mov
xor
jg
push
ret
or
int
push
pop
js
scas
xor
bnd
mov
mov
inc
int
xor
xorb
lds
ljmp
ret
int3
push
push
mov
push
dec
push
mov
xchg
fdivs
mov
inc
jb
lret
test
call
sub
lds
loope
adc
fildl
lcall
lret
les
pop
insl
mov
dec
ret
pop
hlt
pop
lods
sbb
and
enter
test
push
data16
cmpsb
xor
add
das
adcb
cmp
inc
jae
lods
xchg
adc
dec
and
imulb
push
inc
or
shl
gs
push
xor
xchg
dec
or
and
dec
scas
jne
bound
testb
adc
arpl
insb
js
add
lods
mov
push
outsb
mov
testl
shrl
pop
test
fucomip
aaa
pop
jg
arpl
ja
cmp
sub
test
inc
icebp
pushf
mov
repz
fmul
std
adc
push
lds
movsb
push
bound
and
mov
jge
xchg
insb
in
mov
or
cmp
mov
nop
je
stc
dec
mov
lds
jbe
mov
addr16
add
sub
fcomps
arpl
and
neg
inc
mov
adc
and
arpl
test
inc
rol
pop
jno
cmpsb
testb
add
sbb
push
test
push
dec
movsb
xchg
mov
gs
push
jle
insl
jns
rclb
cmp
mov
xchg
mov
dec
adc
loop
mov
sbb
adc
push
xchg
adc
xchg
cmp
jae
mov
int3
dec
or
mov
xor
push
lods
push
lret
fs
fmull
jo
sbb
clc
lcall
popa
lods
cld
pop
clc
jns
mov
ret
dec
xchg
xchg
das
and
popf
xor
daa
adc
out
add
in
mov
and
scas
cmp
out
sub
jge
sbb
popa
inc
pand
decb
and
enter
push
add
divl
and
jmp
lds
pop
loope
mov
pop
pop
mov
or
or
pop
cmp
cmp
push
lahf
test
xorl
loope
stc
iret
daa
stos
lret
push
testl
xchg
movsb
bswap
xor
inc
test
sbb
sub
dec
mov
cmp
inc
and
test
scas
loopne
xorb
pop
or
out
or
jne
pop
pop
addr16
jne
js
pop
cmpsb
in
mov
cltd
dec
push
push
mov
pusha
sub
add
dec
cmp
add
mov
repnz
faddl
inc
push
int3
cmp
adc
ja
shrb
dec
mov
adc
sub
out
je
jo
popa
add
lret
adc
or
mov
fstps
test
cltd
pop
jp
into
xchg
dec
sub
push
xchg
stos
cmp
xchg
out
adc
insb
inc
sub
adc
roll
mov
lahf
sub
sub
jno
je
rorl
faddl
cmpsb
andb
stc
test
enter
cmc
adc
fcoml
rcrb
ljmp
pop
sbb
xor
jno
and
xchg
jne
test
mov
mov
mov
push
lods
in
pushf
jmp
mov
lret
sbb
outsl
ret
fstps
mov
lds
add
lock
jg
xor
hlt
mov
adcb
pop
or
repnz
cmc
scas
xchg
sub
adcb
sti
add
out
or
stc
decl
and
rolb
roll
pop
xchg
jnp
and
aad
roll
jb
jno
in
mov
sub
push
pop
adc
sbb
push
xchg
xchg
imul
jmp
popf
add
sahf
cs
dec
push
addr16
dec
sub
sti
dec
daa
rcr
mov
xor
test
stos
add
jno
push
aas
fistpll
pop
roll
das
mov
adc
xorb
scas
inc
adc
push
fcomp
sub
fs
jg
xor
inc
pop
fs
fbld
stos
fistps
dec
inc
or
and
mov
xchg
pop
test
imul
rcl
mov
aas
call
cld
or
pop
inc
xchg
aad
xchg
adc
out
or
in
mov
fidivrs
outsl
aaa
add
popa
adc
sbb
add
out
fisubl
jns
fs
fldt
sub
jo
fdivrl
and
or
fcomi
xlat
and
add
add
inc
ret
adc
mov
aaa
pop
sub
popf
int
dec
pop
xchg
cmpsb
push
xorb
int3
push
jno
lods
fwait
dec
aaa
mov
ss
jne
movsl
cli
xchg
rorb
or
rcrb
popf
cmp
loope
sbb
aam
repz
int
jl
addr16
mov
xor
pop
lcall
mov
add
fldenvs
out
cmp
sub
cmpb
jb
jne
rcll
pusha
or
sub
xchg
stos
mov
adc
adc
jno
stc
out
add
adc
int
mov
and
test
jp
xchg
std
pop
or
mov
fdivs
xchg
lods
mov
add
and
aas
mov
pop
dec
es
fwait
lcall
adc
push
mov
adc
jle
pop
sub
inc
add
sub
mov
cli
stos
fs
ss
pop
pusha
sub
movsl
shrl
push
lods
mov
pop
sub
jge
fcom
cwtl
pushf
in
lcall
push
xor
repnz
mov
xchg
js
fidivs
dec
xchg
pop
adc
mov
inc
cli
cmp
push
inc
and
add
and
cmc
push
roll
sub
sbb
dec
stos
lret
add
mov
sub
inc
lock
daa
outsb
sbb
aam
mov
dec
push
mov
dec
es
mov
in
cmpsb
dec
dec
mov
fimull
jg
enter
sti
shl
pushl
incl
lea
and
jp
stos
and
inc
sbb
fidivrs
and
shrb
adc
fistpll
mov
sbb
push
out
push
inc
pop
dec
nop
mov
or
inc
mov
movsb
cld
aad
movsl
mov
inc
sub
cmp
outsl
aad
or
out
and
sub
fcompl
sbb
inc
std
and
in
push
mov
add
mov
clc
jecxz
popa
scas
jns,pt
add
cmp
or
shl
or
or
out
mov
mov
inc
fdivp
pop
inc
enter
add
push
in
je
and
sti
fwait
push
iret
cmc
adc
in
orl
push
dec
out
cmp
pop
cs
xor
and
mov
lock
subb
pop
popf
push
lea
cmc
not
cmp
inc
inc
sub
pop
mov
add
das
and
sub
xor
or
or
xorb
mov
xchg
daa
and
aas
ss
loope
xor
mov
les
push
push
pushf
push
addb
jnp
push
int3
outsl
lds
jle
push
outsl
jne
lret
loopne
jmp
in
ret
jg
dec
sar
dec
mov
movsl
dec
dec
xchg
mov
repz
in
sbb
push
and
outsl
subl
hlt
in
sub
aaa
in
popf
push
add
mov
add
cltd
stc
cs
loop
in
loopne
xchg
xchg
adc
xor
lods
cmp
sbb
insl
adc
aam
call
cmc
fcomps
inc
in
ss
pop
rolb
push
inc
adc
or
out
mov
xor
dec
mov
adc
sub
repz
cmp
xor
cmp
adc
sub
add
mov
pop
cmpl
mov
push
adc
aam
fnstenv
enter
shrl
jg
fildl
rcl
lahf
dec
jge
xor
push
push
and
xor
mov
and
popa
mov
outsb
clc
xchg
jne
inc
lret
jbe
fistpl
sbb
dec
lds
fmulp
ror
ss
shr
adc
sbb
sbb
imul
dec
mov
in
sti
cltd
movsl
in
xchg
jmp
cmpsl
cld
lock
mov
push
cmp
hlt
ficoml
pop
push
mov
xchg
frstpm(287
sbb
rcll
cmpsb
and
pop
je
ss
add
iret
xchg
xchg
sbb
mov
jb
mov
lods
push
stos
sbb
clc
les
cmpsb
push
push
or
mov
aad
sar
dec
shr
testb
or
cmp
xchg
sub
dec
mov
enter
dec
pop
sbbb
enter
cmp
loop
mov
call
aas
xor
and
fstpt
rcr
daa
sub
mov
popf
jge
gs
jecxz
sarl
add
mov
xchg
xchg
adc
inc
mov
add
or
pop
jbe
adc
mov
out
jmp
sbb
int
mov
jge
and
jo
jp
push
es
lcall
bound
xor
sahf
inc
jb
inc
adc
xor
pop
leave
adc
jecxz
sub
cmpb
sbb
push
jle
cmc
in
imul
inc
jb
repnz
stc
xorl
cmp
lcall
outsb
call
xchg
or
fimull
mov
frstor
pop
loopne
ss
cld
dec
pop
es
nop
cld
in
lock
jmp
mov
push
add
sbb
test
dec
fisubs
mov
fsubr
mov
push
jno
sub
cmp
sti
es
xor
push
sub
push
and
fsubrl
dec
add
sbb
rorb
outsl
pusha
push
pop
faddl
ss
mov
imul
dec
jecxz
push
inc
xchg
inc
movsb
fldl
outsb
std
inc
insl
mov
adc
stos
mull
push
loopne
xchg
add
pop
ljmp
push
int3
or
mov
repz
lock
addr16
mov
icebp
pop
push
dec
and
cwtl
and
jecxz
out
mull
and
test
int
insb
loop,pt
repz
sbb
das
int3
dec
insl
inc
aam
push
dec
cltd
jo
ljmp
in
dec
mov
inc
push
sub
movsl
jne
in
mov
push
pop
js
add
inc
fcoml
lret
push
xor
lds
dec
pop
push
adc
xchg
inc
mov
lods
inc
jnp
inc
mov
nop
push
out
bound
mov
inc
sarl
es
ja
in
scas
dec
pop
add
xchg
pop
loopne
inc
mull
lods
outsb
popf
pop
ret
mov
push
leave
test
xor
out
scas
mov
cmpsb
jmp
lods
insb
daa
sbbb
test
movsb
rcl
lret
cmp
enter
sub
jae
rcrb
out
inc
jbe
jp
ret
cmp
cmp
add
ret
push
or
sub
test
jae
jae
es
jp
adc
mov
lock
xchg
mov
scas
adc
mov
xchg
mov
mov
lret
aaa
xchg
ljmp
imul
in
mov
sbbl
shr
aas
sub
cmpsb
dec
xchg
lock
adc
pop
mov
xchg
in
fisubrs
inc
inc
loop
call
and
sbb
in
loopne
xor
inc
filds
ret
jbe
push
dec
cld
imul
sub
add
sbb
cmpsl
subb
push
stos
sti
inc
sub
aam
out
and
test
jl
jmp
movsw
loopw
fwait
incb
roll
cmp
ficoms
sub
ret
and
cmp
fmuls
es
stos
mov
cmp
loopne
das
decb
or
cmp
loope
jl
fdivrl
cmp
xor
enter
xchg
hlt
imul
xor
or
xchg
pop
movsl
inc
pop
mov
hlt
adc
cs
repz
dec
pop
add
test
fimuls
pop
xchg
cwtl
out
ljmp
mov
xor
sbb
mov
popf
in
inc
jnp
ror
add
das
int3
aad
inc
lea
xor
and
mov
cmp
xlat
mov
cmpsb
insb
inc
in
sub
adc
lods
and
rol
mov
xor
imul
mov
ja
adc
inc
fsubrs
pop
mov
fs
cmp
rorl
cmpsb
inc
sub
shlb
push
cmp
movsl
mov
dec
add
mov
jmp
fists
push
push
data16
pop
lahf
push
pop
sbb
jnp
and
jl
and
lods
add
sub
pop
je
fimull
pusha
ror
sbb
cmp
pop
pop
aam
dec
push
cmp
sbb
call
inc
cmp
pop
lret
xor
jae
ret
cltd
out
and
int3
xchg
lock
mov
add
into
mov
cli
fstps
inc
lret
mov
fbstp
adc
fisttpll
fmulp
bound
xchg
xchg
sbb
add
and
mov
stos
int3
xlat
rcrb
push
adc
mov
rcr
js
mov
ffree
int
je
enter
leave
or
in
fsts
inc
jmp
fisubl
jnp
cmp
pop
ds
dec
bts
jle
push
inc
xorb
mov
push
mov
or
adc
in
out
shrd
xchg
mov
mov
cwtl
out
lods
icebp
and
xor
jl
jns
dec
das
jb
and
sub
push
push
mov
mov
pop
rcrb
jp
mov
sbb
cmp
xchg
arpl
mov
inc
xor
sub
rorb
lcall
cwtl
cmc
fidivrl
jae
jbe
xlat
cltd
ja
xchg
dec
jo
mov
mov
cmp
and
arpl
scas
subl
pusha
outsl
pop
or
mov
adc
mov
adc
push
pop
icebp
ja
rcll
dec
adc
mov
addb
and
rol
or
in
and
pop
fdivrs
dec
or
mov
insl
push
insb
cltd
movsb
ret
sbb
xchg
jg
and
popa
test
push
jno
push
or
xor
popa
xchg
lea
jae
push
sub
out
xor
dec
sub
pusha
sbb
lcall
push
fidivrl
dec
dec
cmp
leave
cmp
das
xchg
xchg
popf
pop
xchg
shrl
sub
push
inc
jp
popf
inc
add
adc
xchg
std
shlb
out
pop
aaa
ret
mov
pop
and
jmp
dec
adc
dec
dec
outsl
add
jmp
fdivs
imul
inc
es
imul
popa
sbb
in
mov
out
das
and
mov
mov
ja
or
fcomi
loope
cmp
sub
cmp
das
dec
into
imul
call
mov
adc
cld
cmpl
dec
pop
ret
or
rorl
xor
dec
and
jmp
mov
cs
fcoms
jecxz
ljmp
repnz
fcomps
push
dec
pusha
adc
sahf
popf
sub
dec
mov
inc
or
out
pushf
sarb
xchg
adc
pop
icebp
test
nop
ret
call
xchg
add
dec
scas
pusha
sbb
repz
incb
iret
inc
jg
in
sahf
or
adc
add
insl
js
fisubs
push
dec
mov
cwtl
mov
jp
andl
jo
aas
inc
dec
fstps
bound
add
push
pop
negl
xor
and
sub
dec
and
xchg
and
in
or
xor
xor
mov
fwait
jo
jl
mov
shrb
movsl
pmullw
adc
not
jmp
inc
xor
orb
mov
xchg
aas
jns
nop
xor
push
xchg
mov
in
out
lret
cmp
fbld
add
push
cmpsb
sbbl
lds
test
es
xchg
loopne
fcompl
xchg
dec
in
cmp
xchg
xchg
push
push
aad
or
mov
jbe
sbb
and
xchg
orb
cmc
sbb
std
inc
jmp
xchg
cmp
push
scas
dec
mov
lds
bound
inc
movsb
xor
mov
push
cli
ret
push
xor
mov
pop
and
pop
fcomps
push
xchg
push
and
gs
mov
stos
ss
test
inc
movsb
cwtl
fsts
orb
insb
cmpsl
sub
repnz
adc
jg
ffreep
dec
nop
pop
jo
push
inc
mov
imul
sbb
icebp
shlb
subb
cmpsb
ljmp
bound
imul
adc
stos
add
fsubrp
test
mov
js
add
sbbl
mov
jnp
mov
push
testb
stos
fsubrl
and
and
jecxz
fistpll
mov
notl
pop
xor
and
sbb
dec
mov
cmpsl
out
fs
ljmp
in
insb
mov
push
lahf
cmp
cli
or
cwtl
addb
cmp
mov
sbb
int3
orl
adc
cmp
orl
xorb
inc
sub
lods
das
mov
or
mov
add
lret
xchg
pop
imul
popa
movsl
mov
sbb
testl
add
push
push
sub
push
mov
xchg
mov
xor
cwtl
lds
pop
sub
ret
jnp
cmc
jp
clc
xchg
les
mov
fwait
jmp
adc
jmp
out
mov
notl
add
cmp
test
jbe
push
sbb
pop
cltd
mov
inc
xor
sbb
adc
dec
out
xor
cwtl
js
sarl
add
dec
mov
xor
cmpsl
cltd
and
xchg
pusha
inc
cmp
hlt
das
mov
push
repnz
negb
add
cltd
call
adc
push
test
rol
daa
test
sub
fistpll
popf
xor
insb
cmpsl
add
xor
push
jg
insb
jne
jo
inc
push
cmp
sub
push
cld
decb
fucomp
and
addr16
fnstcw
cmp
and
and
add
into
fwait
cwtl
in
inc
fnstenv
movsl
shrb
push
push
pop
pop
and
mov
emms
jp
mov
xchg
or
sbb
js
and
sahf
loop
repz
jmp
push
fsubr
jl
aas
xchg
push
lcall
aaa
sbb
sbb
and
test
xlat
adc
mov
push
stos
aas
add
out
dec
clc
insl
mov
pop
icebp
scas
int3
cmp
test
xor
cmp
jge
push
icebp
cli
and
nop
xchg
lea
xchg
jmp
pop
or
inc
and
mov
leave
or
mov
or
add
pop
mov
push
lods
pusha
data16
cmp
jne
sar
mov
mov
xchg
and
adc
mov
xor
daa
sti
and
decl
xchg
jl
jl
cmp
add
adc
sar
in
dec
inc
stos
loope
pop
repnz
cpuid
push
in
addl
push
sub
sbb
mov
lods
shrb
int
cmp
leave
push
adc
enter
in
dec
dec
jne
inc
daa
adc
dec
push
cmp
cmc
cwtl
jg
sub
push
in
xor
out
adc
add
test
add
mov
sub
movsb
fcmove
adc
push
testb
mov
test
daa
loop
iret
stos
jl
stos
mov
dec
scas
mov
and
in
mov
xchg
jmp
jl
mov
sub
lahf
stos
mov
sub
mov
cmp
sbb
add
adc
xchg
xor
xor
jle
pop
sahf
pop
in
sub
cmp
adcl
lods
jmp
sub
jmp
mov
push
xor
in
lds
xchg
paddd
popf
and
inc
mov
sbb
repz
mov
test
xchg
dec
scas
jae
jns
jmp
loope
pop
test
shrb
xor
cmp
lods
and
push
out
mov
mov
clc
in
push
cmp
scas
ljmp
fdivs
mov
in
xor
mov
adc
jg
xchg
mov
mov
cmp
mov
dec
repz
inc
cltd
inc
lods
popa
inc
icebp
roll
je
cmp
addb
mov
or
mov
mov
sbb
subb
cmp
imul
pop
cmc
and
fidivrl
dec
sub
lret
rol
mov
mov
adc
scas
les
loope
mov
jne
jbe
ds
mov
or
in
movsl
jae
mov
out
out
int
in
xchg
inc
in
rcll
es
mov
or
cmp
iret
xchg
clc
jne
sbb
and
xor
shll
movsb
icebp
out
and
xor
fwait
mov
loope
cmp
fists
iret
out
mov
call
iret
in
ret
xchg
scas
mull
pop
je
mov
aas
jle
dec
lock
sub
mov
sbbb
add
out
cmp
pop
jb,pn
test
orps
aas
imul
addr16
adc
mov
xchg
ret
jecxz
rorl
push
jmp
cmp
adc
ret
in
repnz
jmp
outsl
cmp
data16
out
cmp
mov
lret
jno
mov
push
or
adc
ret
dec
mov
sub
or
mov
and
adc
fadds
push
mov
cmp
loopne
lahf
nop
xlat
addr16
ret
inc
lea
mov
push
inc
mov
test
in
pusha
stos
inc
adc
fmuls
cli
sbb
mov
clc
clc
test
sub
fs
imul
mov
pop
scas
out
pusha
mov
fmuls
call
lcall
inc
mov
mov
lock
mov
fstl
cltd
or
xchg
adc
out
fwait
pusha
bound
shrl
dec
xor
cmc
jbe
push
aas
imull
push
lret
shl
pop
mov
mov
pop
fsub
addb
in
cmpsb
sbb
stc
mov
xor
jno
sbb
dec
and
fistpl
test
fldl
add
dec
into
mov
dec
inc
push
das
ljmp
adc
roll
jns
cs
pop
or
pop
loope
sahf
popa
mov
and
pushf
or
lock
popf
into
out
mov
addr16
pop
mov
ret
dec
mov
mov
clc
mov
cs
insb
or
movsl
xor
insl
sbb
and
popa
lods
adc
aam
jmp
test
jne
stc
lock
scas
daa
cmpsl
mov
xchg
out
mov
cmpsl
fnstcw
add
movsb
xor
and
mov
adc
push
pop
push
push
push
or
sbb
or
data16
adc
subl
aad
clc
xlat
pop
inc
pusha
xchg
shl
sarb
fdecstp
xor
pop
mov
lret
lock
adc
adc
pop
cld
pushl
adc
jg
leave
lret
xchg
lods
jno
xlat
mov
mov
or
xor
adc
pop
sbb
shll
add
push
xor
mov
icebp
inc
test
out
inc
es
rcrl
jno
loop
mov
mov
pop
mov
imull
mov
movsb
xchg
or
sti
adc
lahf
out
mov
icebp
mov
jge
shrb
xchg
jmp
mov
sub
cmp
jg
popl
xchg
popf
rolb
outsl
and
push
sub
cmpsb
ss
out
sub
in
arpl
xor
scas
flds
and
mov
push
mov
cmpb
js
adcl
mov
data16
aaa
dec
das
add
icebp
xor
ds
sub
lods
call
sbb
int3
daa
add
test
lds
push
lock
sub
jnp
in
fistl
or
adc
test
cmp
pusha
and
mov
test
std
aam
adc
add
loopne
cmc
push
popa
xor
jne
cmp
scas
pop
or
cmp
mov
sbbl
cmp
inc
sbb
es
xchg
inc
jbe
stos
pop
aam
push
xlat
ja
sti
xchg
inc
aam
lret
bound
pminsw
int
fimull
pop
movsl
cmpsb
pop
das
cmp
fstpt
cmp
outsb
std
rcrb
cmp
xor
shl
icebp
out
jmp
mov
cmc
out
xor
orb
repz
dec
or
adc
fiadds
sbb
xor
and
jbe
rol
aas
or
ud0
ficompl
out
fcomps
fwait
adc
pop
ret
and
adc
mov
je
dec
out
inc
mov
inc
mov
lods
test
cmp
addr16
mov
stos
outsb
popf
arpl
xchg
stos
inc
leave
fcoms
in
jb
sbbb
sbb
adcb
cmpsb
std
jo
mov
xchg
mov
test
and
adc
inc
adc
loop
out
dec
jns
mov
sahf
mov
sub
cltd
add
stos
jp
mov
push
insl
xlat
push
cmp
pop
subl
popf
mov
add
push
mov
pusha
and
aas
mov
adc
sbb
dec
push
add
repnz
adc
cmp
mov
add
int3
add
sbb
sahf
cmpsl
pop
cmp
sbb
jl
pop
xor
dec
or
in
aam
adc
xchg
outsl
push
ficoml
mov
dec
repz
pop
jmp
fwait
add
mov
jg
fs
insl
cmc
roll
insl
mov
fistl
jo
cmc
dec
add
mov
mov
dec
xchg
stos
push
ljmp
cmp
popf
mov
sub
inc
pop
fcompl
in
add
lds
mov
add
sti
leave
stos
in
sbb
or
cmp
inc
arpl
adc
cli
pop
or
lds
and
push
aad
and
mov
scas
mov
mov
add
out
sub
cwtl
fistpll
and
inc
popf
or
push
mov
sub
push
mov
dec
sbb
and
add
or
jp
nop
push
inc
outsb
cmp
fldcw
dec
sti
add
fisttpl
loop
push
cmp
mov
dec
fnstenv
mov
pusha
pop
sub
dec
mov
enter
sub
jno
mov
movsb
jg
push
test
rcl
add
cltd
inc
call
outsl
lds
mov
sub
xlat
aaa
fisttpll
pushf
dec
ljmp
jl
mov
in
mov
xor
and
push
loopne
cs
xchg
out
mov
js
sti
and
fidivrl
push
dec
fwait
mov
movsb
cmp
push
or
push
push
ret
repnz
push
idivb
xlat
loope
imul
mov
sbbb
pop
sbb
adc
mov
lcall
shll
clc
imul
repnz
loopne
or
mov
rcrb
stos
test
dec
xchg
mov
cltd
add
jmp
movsb
sbb
xchg
ret
dec
sub
adc
sahf
andl
testl
fidivs
daa
iret
stc
mov
jmp
mov
cmp
je
xchg
lret
pop
xor
pop
fldt
sub
rcll
aas
and
dec
sarl
xchg
js
test
xchg
es
mov
out
pop
mov
mov
lods
cwtl
mov
sbb
addl
push
dec
cli
push
sbb
repz
movsl
and
rcrb
dec
rcrl
mov
mov
testl
loope
mov
xchg
gs
mov
mov
xchg
xchg
inc
or
cmpsl
fsubr
mov
dec
cwtl
aad
cs
out
sbb
jbe
shll
rclb
pop
add
andl
push
pop
out
ss
mov
js
int3
in
xor
xor
adc
enter
scas
xchg
fdivrl
or
xchg
gs
jne
adc
loopne
push
or
pop
xchg
popa
pop
and
jae
xchg
inc
mov
adcb
sub
jb
xorb
push
sbb
add
cmc
cld
and
arpl
dec
test
mov
sbb
faddl
leave
fcmovne
mov
imul
mov
xor
jno
add
subb
push
and
cmp
jl
lahf
jp
jmp
imul
lea
daa
cmpsb
into
ss
push
jns
fistpll
and
cmp
jg
daa
dec
pop
push
push
lahf
sbb
dec
popa
sub
cmp
and
fmull
push
shll
jae
jecxz
and
mov
data16
nop
sub
sub
loop
mulb
inc
lods
and
out
add
sbb
hlt
popa
fwait
std
inc
adc
mov
cltd
or
js
xchg
sub
or
inc
test
gs
push
stc
xchg
jecxz
or
lcall
bound
xor
pop
repnz
out
inc
stos
jno
iret
pop
ret
ret
cmp
xor
pop
add
fwait
mov
pop
inc
mov
add
add
mov
je
mov
add
aas
pusha
stos
pop
ret
add
ret
jp
sahf
or
xor
daa
mov
int3
jne
lds
repnz
mov
aad
fstpt
mov
inc
les
xor
in
xor
xor
xchg
push
sbbl
ljmp
out
lea
clc
xchg
fadd
and
les
sarl
sbb
lret
jge
shl
sub
push
imul
pop
and
mov
test
push
sub
addb
and
movsl
sub
jno,pn
adc
jae
add
adc
xchg
mov
add
ret
lret
lahf
and
shlb
or
dec
dec
or
xor
jb
push
mov
mov
ret
lods
add
fists
out
mov
addr16
pop
clc
jg
xchg
xlat
cmpsb
pop
movsl
rol
in
or
sub
cwtl
jo
outsl
les
pcmpeqd
je
clc
fstps
cmpsl
stos
cmpsb
mov
std
popf
pop
pop
inc
push
and
dec
fmull
jl
mov
cld
pop
or
jge
hlt
lds
je
fs
xchg
pop
jno
adc
das
mov
jae
push
lods
loopne
xor
ds
scas
inc
xor
push
gs
dec
jae
inc
std
int
lea
in
xlat
mov
stos
cmp
cld
jnp
movsl
es
pushf
pop
jecxz
xchg
inc
push
stos
divb
mov
and
and
pop
jbe
push
inc
mov
and
adc
out
in
dec
lahf
ret
scas
and
outsb
sub
icebp
loopne
icebp
pop
into
sbb
and
std
jl
jp
pop
mov
cli
push
push
cmpsb
sbb
loope
mov
ss
sarl
stos
aaa
fcoml
ja
sbb
das
and
insl
pop
int3
pop
sti
or
pop
leave
inc
xor
cmpl
inc
scas
dec
cmp
sbb
xor
shll
and
push
out
cmc
or
pop
and
in
aaa
add
movsl
sbb
loop
clc
daa
mov
fmull
mov
push
or
xor
or
push
adc
lcall
ss
lods
gs
mov
add
push
pop
push
jae
sbb
inc
out
aam
cmp
pop
js
jbe
jmp
ja
inc
jle
or
gs
enter
pop
jno
inc
dec
jg
cli
mov
nop
xchg
sbb
lods
mov
mov
push
sub
add
movsl
mov
in
fbld
lods
es
push
pop
mov
fwait
xor
cmp
fcomip
addr16
stos
ljmp
cld
cmp
sbb
mov
mov
stos
cwtl
xlat
add
and
movsl
add
test
sub
dec
push
adc
cmp
sub
push
push
leave
je
mov
xchg
shll
std
cmp
or
pushf
or
jb
shrl
in
xchg
mov
mov
push
rorl
cmpsl
or
xor
sarb
daa
fsubs
popa
mov
or
sbb
xor
aaa
sbb
jno
loop
mov
fsts
aam
xchg
cwtl
arpl
jne
jp
mov
inc
adc
and
cs
adc
push
mov
mov
sbbb
inc
lahf
push
jge
pusha
mov
and
fisttpl
cld
xchg
xchg
fbld
adc
xor
push
cli
mov
add
inc
ja
jnp
jne
sub
cmp
lock
int
jle
leave
shll
push
daa
push
adc
inc
pop
mov
xor
imul
loopne
and
scas
rcl
xchg
dec
rcr
and
mull
stc
aam
popa
int
xor
push
mov
jmp
out
dec
push
movsl
out
and
jle
pusha
inc
and
mov
loop
outsl
mov
inc
mov
cmpsl
xor
sbbb
lcall
mov
jmp
aam
add
or
mov
in
into
cmpsb
add
xchg
fldenv
in
adc
dec
xorl
je
sbb
pushf
aam
jnp
or
add
cmp
mov
xchg
lods
notrack
pop
mov
inc
mul
ja
dec
ja
sbb
mov
inc
rol
push
sbb
cmp
test
std
dec
mov
adc
aas
pop
addr16
aas
and
sbb
outsb
loopne
stc
inc
rclb
mov
dec
repnz
or
xchg
cli
cltd
fcom
test
outsb
xchg
mov
leave
pop
cmp
movsl
enter
sbb
out
sbb
int3
jne
inc
sub
das
sbb
ja
insl
xor
mov
lods
cmpsb
jle
and
push
loope
mov
js
aam
or
pop
push
dec
cmc
test
sahf
adc
insl
in
inc
mov
aaa
sti
mov
sarl
mov
test
mov
std
jnp
jno
mov
hlt
adc
add
dec
xor
push
gs
aad
fsubrl
jl
pusha
daa
cmp
insl
xchg
loopne
sarb
out
mov
push
jb
lahf
adc
adc
dec
iret
cld
ljmp
mov
je
inc
mov
inc
jo
push
dec
push
jne
mov
cmpsb
and
outsb
loopne
mov
pop
mov
adc
xor
cld
inc
out
fisttps
popa
mov
inc
lods
in
divl
sahf
inc
adc
imul
mov
arpl
sbb
cwtl
test
int
je
dec
push
xchg
in
mov
sub
mov
ljmp
icebp
pop
xchg
push
aaa
cmp
and
lcall
fistpl
iret
inc
frstor
inc
mov
push
mov
lcall
sbb
pop
pushf
cs
pushf
and
orb
out
out
daa
pop
lret
fisubrs
xor
inc
jle
aas
fistpll
jne
and
mov
jp
stos
loope,pt
jb
cmpsl
adc
jp
mov
movsb
or
in
or
adc
and
xchg
pop
cmpsl
mov
insb
and
jb
jo
shl
cmp
cs
adc
xchg
push
test
or
jp
lcall
ja
hlt
dec
add
hlt
inc
jo
xor
imul
hlt
cli
lret
dec
xor
movsl
adc
mov
jecxz
iret
push
stos
xor
test
add
stc
jl
insl
ljmp
xchg
ret
out
imul
mull
jb
outsl
js
mov
out
xchg
add
in
pop
mov
outsl
rcrl
xlat
popa
in
dec
or
and
cmpsb
shlb
add
mov
fidivrl
movsb
mov
sbb
xchg
add
loop
and
stos
jg
mov
or
sbb
push
cmp
and
push
push
xchg
test
lods
add
xchg
nop
pop
lret
mov
fldt
sub
xchg
in
outsb
add
jns
ljmp
js
or
jle
jb
cmp
and
leave
bound
jno
cmp
insl
loop
int
or
cmp
incl
pop
bound
pop
std
dec
imul
xchg
popa
jge
stos
sbb
pop
xor
xchg
or
lcall
add
mov
bound
jnp
and
insl
mov
popa
push
dec
xor
stos
lret
mov
repnz
out
addr16
fwait
les
dec
xor
mov
jbe
icebp
loop
push
or
and
ds
pop
inc
push
daa
aas
das
dec
add
pop
push
fdivs
mov
ds
sub
jl
sbb
jecxz
sub
mov
or
repz
mov
cld
ljmp
mov
cmp
inc
negl
xor
pop
sbb
xor
and
adc
mov
fisubs
hlt
daa
clc
xor
nop
pop
inc
mov
sbb
adc
pop
and
sub
and
add
cmp
in
movsl
mov
test
pushw
push
xor
pop
sar
sbb
data16
insl
cmp
sbb
ds
cmpl
push
add
mov
add
clc
mov
cmpsb
and
jge
fcoms
aam
movl
loopne
xorl
xor
mov
in
push
lret
nop
popa
and
xlat
dec
popa
mov
dec
jnp
mov
je
mov
ret
lret
ret
int3
mov
jb
mov
pop
aas
ljmp
adc
xchg
lock
dec
scas
mov
mov
pop
mov
addr16
jge
daa
and
pusha
push
pop
clc
outsb
adcl
pop
ret
fnsetpm(287
xchg
mov
addr16
scas
push
cmp
int
test
push
flds
jo
cs
orl
xchg
divl
cs
cltd
aaa
cmp
and
imul
imul
out
mov
mov
divl
xlat
jo
popf
movsb
mov
fisttps
or
mov
lcall
fdivr
addr16
add
jae
jnp
test
xor
jp
faddl
aas
dec
push
ds
mov
in
jecxz
pop
mov
iret
or
test
mov
add
and
xchg
xor
jne
inc
in
and
lods
or
sub
ds
les
ficomps
mov
or
popa
xchg
push
loopne
sbb
push
subl
test
dec
mov
std
pop
adc
outsb
inc
ds
push
push
mov
mov
ret
sbb
and
sbb
jb
insb
or
iret
fstpl
xor
fisubl
aaa
mov
ss
xor
push
pusha
ja
pop
xchg
loop
mov
stos
pop
in
js
cs
shr
lgdtl
push
xor
push
or
cmpsb
out
cmpsb
pop
std
imul
stc
add
bound
cmc
imul
xchg
sub
push
push
sbb
jmp
jnp
xchg
insl
pop
and
dec
pop
push
sbb
mov
sub
adc
movsl
mov
mov
inc
lea
call
push
jmp
jge
and
andb
stos
movsl
push
jae
adc
xchg
test
add
sub
insl
xchg
arpl
and
cltd
sub
gs
sub
cli
jbe
inc
inc
adc
push
adc
sbb
sbb
push
sbb
pmulhw
jno
add
stos
mov
fs
ficompl
pushf
jecxz
addr16
mov
hlt
ret
ret
sub
lock
daa
and
push
test
inc
sbb
or
inc
int3
dec
jmp
push
or
push
sub
pop
loope
test
test
pusha
adc
add
in
lods
sbb
lods
js
sub
sbb
mov
sbb
rcrb
es
push
cli
fucom
imul
add
add
cmp
int3
or
mov
jle
push
xor
inc
jl
add
mov
push
pop
ror
inc
or
mov
sahf
fidivl
ficoml
dec
mov
filds
int3
push
push
mov
cltd
iret
test
les
stc
cmp
dec
out
stos
in
inc
mov
mov
cmc
dec
je
push
shll
lret
and
sahf
test
xchg
in
xchg
xchg
xchg
addr16
adc
push
xchg
fcoms
xchg
xchg
ss
or
mov
jp
jl
or
fmuls
jge,pn
cmpsl
xor
ja
fisubs
dec
push
inc
and
jae
pop
rolb
cltd
out
in
lahf
int
loope
inc
mov
andl
dec
dec
loop
clc
dec
sub
cltd
adc
inc
shll
sbb
movsb
mov
fldl
popa
std
mov
aaa
enter
arpl
adc
cli
out
stos
sbb
test
mov
arpl
in
outsl
mov
iret
jecxz
dec
lock
sub
shl
sar
inc
pop
leave
in
adc
inc
lea
icebp
cmp
punpcklbw
add
mov
and
mov
push
movsb
jbe
mov
cwtl
in
xchg
and
lahf
lock
shrb
fdivs
daa
mov
nop
mov
out
xchg
icebp
mov
and
lret
and
hlt
outsb
add
or
push
cmpl
addr16
pop
pop
xor
xchg
push
mov
hlt
and
repnz
dec
shll
sarb
loope
or
adc
or
mov
pop
mov
ljmp
sub
icebp
jns
jle
pop
and
leave
and
stc
movl
pminub
scas
lds
loope
pop
ljmp
loope
and
repz
je
xor
mov
das
push
mov
pusha
pop
jmp
jl
xchg
inc
test
xchg
jbe
xchg
das
mov
cmp
leave
sbb
loope
push
mov
jb
out
out
jecxz
inc
repnz
mov
test
aas
dec
dec
shrb
sub
mov
jns
and
mov
dec
pop
lods
scas
inc
cmp
cmp
fistl
sbb
data16
loope
inc
mov
aas
mov
push
push
testb
sbb
popa
testb
mov
pusha
add
fsubl
leave
scas
fbld
maskmovq
sub
nop
xchg
jl
aad
lea
adc
and
pop
xchg
es
aad
and
xchg
test
xlat
pop
ds
shrl
addl
out
pop
mov
movsl
push
ret
pop
in
and
jae
pop
cwtl
popa
stos
push
mov
jmp
pop
aam
sbbb
mov
sbb
adc
inc
add
and
sbb
inc
roll
aam
ss
xchg
sbb
stos
jge
fwait
dec
addr16
cld
lea
outsb
jbe
fwait
in
rol
mov
sbb
stos
push
andl
mov
mov
xchg
jle
jmp
mov
mov
int
sbb
jmp
lods
int3
lahf
inc
pop
loopne
mov
mov
ret
add
wbinvd
aaa
in
jns
movsl
mov
in
scas
fistpl
xor
daa
fwait
inc
popf
jae
inc
mov
pop
cmp
imul
incl
mov
and
sub
ljmp
jmp
ss
loope
add
sti
loopne
out
dec
movsb
stos
cmp
lods
mov
enter
or
dec
dec
mov
fists
stos
pop
cmc
es
inc
mov
leave
insb
jmp
cli
inc
insl
sahf
es
xor
or
adc
in
push
push
inc
mov
das
add
add
sub
test
mov
lret
movsl
sbb
negb
push
xor
daa
pop
ja
cmp
loopne
imul
or
arpl
mov
mov
xor
icebp
cli
addr16
ss
decb
push
fdivl
push
pop
dec
jp
dec
mov
or
cwtl
inc
imul
mov
push
scas
cwtl
push
adc
ja
ret
pop
dec
aad
cmpsl
pop
mov
sbb
scas
mov
clc
popa
dec
daa
lds
inc
adc
jge
jl
ds
cmp
push
jg
addb
or
mov
xor
pushf
adc
rorb
nop
mull
adc
xchg
loope
pop
cmp
repz
push
std
popa
aam
jl
and
xchg
push
mov
and
adc
lret
pop
rorl
or
inc
xorb
mov
cmpsl
pop
iret
mov
shl
lods
bound
add
mov
adc
or
push
adc
mov
sbb
push
sahf
pusha
lods
cli
add
aad
imul
inc
jns
scas
jl
pop
pusha
add
xor
aaa
add
mov
dec
pushf
outsl
pop
stos
das
jno
daa
push
int3
mov
xchg
lcall
push
or
push
jg
push
xchg
test
out
cli
jbe
sub
inc
jne
jo
dec
push
add
pop
std
mov
mov
aam
add
push
inc
jecxz
ja
test
lock
lcall
cli
mov
fs
pop
roll
out
inc
or
out
repz
cmpsl
mov
fadds
inc
dec
mov
and
cltd
add
xor
xchg
in
stos
mov
pop
mov
or
jge
mov
add
add
adc
sbb
inc
mov
pop
scas
xor
popa
sti
push
mov
insl
gs
or
lods
out
pop
sub
ds
adc
push
fstp
sub
inc
mov
mulb
push
mov
rcll
les
imul
into
pop
insl
mov
mov
lock
rcr
dec
mov
sub
pop
add
ret
es
push
jb
mov
mov
xchg
aaa
test
xchg
imul
inc
pop
outsl
aad
jg
test
lea
xor
push
popf
sbb
push
lcall
push
sub
jbe
push
dec
push
inc
inc
notb
xchg
lea
push
adc
jecxz
pop
add
pop
dec
test
jne
and
xor
pop
into
pop
push
adc
mov
or
aas
rcr
inc
fisubrs
insb
pushf
jne
mov
dec
add
jnp
out
mov
sahf
cld
cmp
push
xchg
loop
subl
xor
out
xchg
into
out
dec
repnz
and
sahf
mov
cmovb
jmp
lock
add
hlt
js
mov
jo
push
xchg
iret
sarl
rcrl
popfw
pop
out
mov
or
pusha
pop
aas
xor
out
mov
inc
jl
mov
sub
mov
lahf
dec
pop
cmp
xchg
fimuls
icebp
xchg
add
stc
xor
xor
bound
int
and
fistps
pusha
loop
sarb
fildll
sub
cmp
add
or
or
call
xor
repnz
sbb
or
pop
or
sbb
js
popf
and
jns
or
pop
jp
out
aas
shl
sbb
bound
fstl
lock
jne
int
and
push
out
imul
std
hlt
aam
lret
jno
aam
inc
mov
ficoms
mov
and
or
cli
cmp
mov
into
frstor
iret
cmpsl
adc
mov
fcmovne
add
rclb
outsl
lods
int3
jp
test
jmp
xor
repnz
lret
roll
addr16
mov
pushf
inc
into
int
imul
pop
add
addb
addr16
stc
lock
lock
fisttps
and
pop
add
inc
mov
pop
mov
dec
insl
in
movsl
in
and
pushf
cmpb
or
mov
push
data16
or
push
test
aad
push
or
inc
adc
mov
and
jl
push
mov
mov
xchg
pop
lret
stos
imul
in
mov
dec
fs
enter
data16
inc
fdivl
jg
out
mov
push
or
jbe
ss
jo
pop
sahf
cltd
xchg
and
loope
aam
cli
sub
sub
push
stc
adc
data16
cmpsl
into
stc
mov
inc
mov
mov
push
push
repnz
push
lods
es
lahf
js
push
adc
cld
test
and
jecxz
adc
cld
gs
pop
jge
push
popf
inc
call
sbbb
aad
lods
cwtl
and
out
dec
outsb
cltd
jge
mov
mov
lock
mov
iret
add
aad
cmp
dec
mov
into
bound
pop
pop
ljmp
or
and
aam
ljmp
lods
or
fwait
adc
jbe
pushf
sub
or
add
push
xchg
push
fbstp
pop
sbb
jg
mov
push
add
es
xchg
pop
orb
mov
dec
stos
imul
mov
outsl
mov
clc
xchg
or
add
pushf
out
sub
pop
push
add
iret
pop
inc
out
push
jbe
je
and
push
ljmp
adc
adc
jmp
mov
mov
js
push
jae
jge
rcpps
inc
sahf
sarl
mov
fsubs
test
fdiv
stc
sub
add
nop
jno
inc
mov
or
cmp
mov
addr16
inc
push
jle
lret
shl
call
pop
cs
or
adc
mov
bound
sahf
and
insb
ds
adcb
jbe
and
in
or
and
ss
dec
sarl
sbb
ss
or
inc
scas
lock
mov
das
dec
adc
jl
movsb
roll
out
mov
cmp
aad
movsb
fcompl
jmp
mov
iret
repnz
inc
out
scas
mov
loopne
pop
movsb
lods
shll
in
xchg
cld
cwtl
dec
cmp
jmp
insb
add
and
lret
mov
cltd
pop
ljmp
and
mov
push
mov
ja
xor
ficompl
ret
dec
icebp
fdivs
aam
int3
lods
into
xor
cwtl
sti
push
adcb
xchg
dec
mov
pop
push
fld
dec
jnp
iret
add
stc
movsl
pop
sbb
xor
add
or
xchg
cli
cmp
popa
and
jns
test
cmc
mov
pop
movsb
rorb
mov
or
into
lahf
push
xor
jns
push
cmpsb
mov
add
clc
fistpll
push
int3
dec
mov
cmp
sub
xor
dec
add
mov
xlat
rcl
cmp
xor
das
jno
mov
je
inc
fldl
add
popa
std
sqrtps
in
xchg
mov
iret
sbb
icebp
jns
mov
stc
push
test
iret
call
je
lcall
sbb
xlat
cmp
pop
xor
mov
movsb
test
movsb
gs
sbb
sub
icebp
testb
xlat
mov
fs
sbb
inc
add
andl
push
adc
inc
adc
dec
xchg
dec
cld
and
pop
ret
push
insl
cmp
add
adc
mov
ret
push
ret
or
das
rcl
ss
push
push
fs
std
sti
sar
inc
cmc
adc
or
out
imul
dec
mov
loope
leave
pushf
addr16
incb
cmpsl
xchg
testb
pop
lock
js
ret
mov
lret
jns
push
sub
push
into
sub
aas
out
inc
pop
xchg
in
ss
inc
cltd
stos
pop
sbb
sbb
jge
out
add
push
and
ja
cmp
push
daa
leave
popa
mov
jno
adc
cli
nop
fld
pop
mov
enter
rorl
inc
decb
xchg
fisttps
xchg
lcall
dec
xor
push
repz
pop
mov
lahf
adc
dec
xchg
push
je
sbb
cltd
or
in
cmp
mov
test
cmp
sub
mov
push
xor
repz
enter
cmc
inc
ja
popa
outsl
out
jmp
adc
mov
mov
repz
outsb
sbb
cmp
fbld
out
cs
xchg
cmp
fs
cs
inc
movsb
xor
pop
stos
mov
mov
or
fstp
xchg
cmp
xchg
add
and
lret
and
dec
scas
sub
inc
into
in
mov
in
and
xchg
dec
fwait
push
filds
call
scas
add
outsb
stc
rcrb
in
dec
add
add
nop
push
cmpl
jl
dec
xchg
cmp
or
push
mov
mov
dec
daa
cmpsl
pop
cltd
sbb
out
jl
add
cmc
mov
pop
sbb
in
xor
test
and
xchg
xchg
mov
decl
sbb
mov
fdivrp
popa
or
rolb
rcrl
fisttpll
outsb
loop
push
scas
sbbl
add
shll
push
ds
mov
jnp
lods
xchg
and
cltd
inc
sbb
stos
lods
in
faddl
cmc
mov
adc
and
dec
fidivl
xor
cs
cmp
rcr
inc
push
ffree
lret
lret
enter
iret
push
push
fsubs
decl
add
insl
mov
in
xchg
sub
shlb
add
mov
mov
push
and
pop
jge
jne
jb
ds
pushf
push
or
xor
repz
inc
cmp
in
fadds
cmp
push
subl
test
mov
pop
mov
test
test
jae
jae
stc
sbb
enter
cmpsb
jo
lds
stos
rcl
ds
jae
outsl
jno
inc
imul
adc
lret
mov
pop
jmp
or
psllq
jae
push
lret
insl
jae
lock
cmpsl
pusha
sub
dec
jno
bound
test
scas
lods
sbb
mov
call
jnp
dec
dec
mov
mov
xchg
shlb
out
aas
pop
in
ds
rcrl
cltd
adc
fsubl
and
das
sbb
push
test
hlt
fldenv
mov
inc
daa
sub
xor
mov
push
stos
out
test
test
inc
mov
xchg
pushf
dec
add
mov
xchg
test
and
hlt
xchg
sti
mov
sub
shll
jmp
sarb
pop
cmp
inc
lret
pop
cld
test
mov
inc
adc
dec
cmpsl
popa
loop
hlt
mov
inc
fsubrp
pop
aas
sti
mov
outsl
xlat
cli
std
fnstcw
popf
cmp
jbe
js
fs
dec
or
insl
pop
es
inc
lods
loope
addr16
in
cmpsl
add
rclb
fnstenv
arpl
xchg
lahf
lock
jl
dec
sbb
mov
add
and
sub
hlt
or
push
aam
xchg
mov
hlt
jecxz
mov
mov
pop
dec
mov
sbb
cmp
or
jo
sbb
sub
stos
cmpsb
gs
popf
xchg
xchg
inc
mov
jae
sbb
cmc
in
faddl
pop
pusha
or
jmp
jo
or
imul
sbb
sbb
sub
fwait
jp
and
pop
cli
sti
es
aam
out
jne
sub
rcl
hlt
xchg
pslld
mov
inc
rorl
ljmp
xor
dec
or
cmpl
pop
lahf
out
xchg
aaa
and
mov
dec
push
sub
inc
and
enter
push
shlb
bound
js
xor
and
cmpsb
fnsave
push
cld
or
aaa
mov
mov
jp
into
pop
mov
outsb
das
addr16
popf
inc
jmp
inc
ss
movups
in
jo
stos
int3
jge
out
lods
inc
addl
cmp
aaa
or
cmpsb
movsb
add
insl
pop
fs
addr16
sar
lods
fidivrs
stc
scas
push
out
popf
movsb
cmc
cmp
push
and
xchg
in
dec
insl
sbb
push
xor
pop
insl
adc
cmp
cmp
jne
inc
xlat
adc
cltd
xor
jns
dec
cmp
cwtl
push
fwait
int3
sti
sub
loope
aam
add
and
dec
pop
movaps
lcall
xor
mov
fdivr
adc
shll
adc
dec
leave
nop
xor
es
push
push
ss
call
stos
rcll
inc
ficoms
mov
subb
mov
mov
or
jne
cwtl
mov
and
xor
lods
mov
scas
cmp
in
pop
dec
orl
std
xchg
jbe
xor
sub
or
adc
xchg
test
daa
or
jne
dec
pop
or
adc
aas
mov
mov
int
pop
mov
aam
cbtw
push
int3
out
out
push
mov
mov
stos
test
pop
insl
mov
jl
or
in
push
out
loop
xor
fcoml
rcrb
sbb
add
adc
sub
out
shlb
std
int
jmp
and
xor
lods
jae
loope
leave
jbe
sbb
adc
add
ljmp
push
ja
cmp
shl
dec
hlt
fdivp
call
lret
repz
mov
jo
xchg
mov
jno
jo
or
push
popa
hlt
test
mov
sbb
dec
jge
and
pop
insb
mov
or
out
mov
sub
test
push
xchg
rorl
stos
popf
aam
stos
adc
mov
inc
lods
test
test
dec
dec
fldl
fs
rcll
out
jl
sbb
aaa
xchg
pop
mov
test
jmp
popf
hlt
xor
pusha
adc
push
insl
dec
aad
add
adcl
push
mov
jecxz
push
daa
fcmovbe
sub
push
mov
mov
hlt
aam
rcll
or
imul
mov
loopne
jno
aaa
or
aam
fisttpl
cli
or
jmp
cmp
out
push
mov
dec
jb
iret
pop
jmp
add
inc
or
addr16
aaa
sbb
scas
and
test
repz
test
scas
cld
leave
jp
xchg
les
xor
dec
popf
fstps
add
and
cli
repz
dec
fsub
test
dec
jl
dec
xchg
testb
dec
std
cld
or
push
sti
aas
and
inc
int3
daa
ss
pop
aad
sub
cmova
movsb
xchg
dec
sbb
inc
sahf
inc
jnp
jp
jp
rorl
jo
mov
or
jne
xchg
mov
in
pop
pop
mov
imul
sub
jno
adc
lret
rorl
sbb
dec
dec
cmp
mov
mov
call
xor
scas
lods
jmp
push
push
popa
lahf
ret
mov
jo
nop
add
aad
pop
shr
int
fiadds
pop
xor
lea
rclb
faddl
iret
out
daa
in
nop
inc
or
xchg
xchg
sub
clc
xchg
xchg
sub
jne
mov
mov
mov
mov
lcall
pop
leave
je
xor
and
fucomp
stos
xor
xor
gs
ljmp
adcb
sub
add
pop
sub
mov
cltd
xchg
sbb
or
adc
test
inc
and
imul
movsl
push
add
xchg
or
mov
repz
aam
jb
rorl
ds
ret
adc
inc
mov
xchg
inc
out
xchg
dec
sbb
fcomi
test
loopne
fwait
xor
fnsave
ds
jno
cwtl
mov
pop
lock
mov
ss
ja
push
mov
sarb
roll
xlat
mov
or
out
xor
adc
imull
enter
cmpsl
cld
dec
inc
mov
in
inc
faddl
add
push
jne
notl
mov
pop
inc
push
fldcw
ret
lcall
leave
mov
in
dec
push
sti
pop
dec
jbe
jnp
push
sub
ret
jp
pusha
add
orl
insl
out
inc
inc
jnp
push
push
das
adc
iret
pop
and
mov
mov
sub
cmp
test
aaa
js
push
push
cltd
ds
scas
daa
jge
or
dec
push
mov
out
test
sub
xchg
divl
ja
add
mov
push
jp
addr16
add
push
jp
out
dec
js
std
cmp
jo
pop
mov
mov
mov
inc
mov
mov
xlat
mov
sti
or
sahf
ret
data16
jmp
cmp
cmp
push
sub
fwait
mov
push
add
popf
mov
and
fiadds
push
sub
stos
and
shrb
jnp
inc
mov
rorb
mov
jp
ret
test
sbb
inc
mov
push
stc
fwait
cmpsl
outsb
jp
movsl
pusha
add
and
cld
adc
shlb
std
adcb
jnp
sub
jmp
add
jp
jne
ljmp
cmp
mov
xor
or
adc
inc
roll
adc
daa
mov
jl
xchg
lret
test
stc
sbb
push
adc
arpl
test
or
mov
push
inc
sbb
sub
and
inc
enter
xor
fwait
stos
pop
push
jne
mov
lds
sbb
incl
out
lahf
je
mov
pop
ss
rol
sub
sarb
mov
inc
and
sbb
sub
xor
inc
fwait
dec
cs
jo
aad
jae
or
insl
cmp
int
nop
pop
lds
jae
mov
xchg
mov
jge
in
jmp
mov
jle
out
aaa
inc
les
inc
inc
insb
test
or
mov
mov
or
aam
int
mov
mov
loopne
pop
mov
fadds
push
addr16
out
das
ja
insb
loop
mov
push
outsl
push
outsl
inc
out
addr16
sub
scas
nop
nop
mov
outsb
data16
cld
js
add
icebp
cmp
cmpsb
lods
xchg
leave
aas
push
popa
push
cmp
cmpsl
xchg
mull
lods
scas
jo
jbe
xor
dec
mov
adc
bnd
jne
dec
mov
gs
dec
xchg
pop
lods
sub
fcmove
push
cmp
mov
cmp
gs
push
adc
pop
scas
in
xchg
push
cmp
rorl
xchg
call
inc
insl
sarl
test
xchg
bound
add
and
stos
sbb
and
repnz
inc
add
pop
sahf
cld
pop
outsl
mov
cltd
pushw
out
pusha
sti
sub
mov
fstl
mov
outsb
push
xor
insb
aam
inc
xlat
pop
and
push
inc
xor
xor
cmp
ficoml
sbb
in
mov
pop
ss
mov
ret
in
icebp
mov
cltd
pusha
jo
scas
ljmp
imulb
inc
popa
xor
sub
pop
ja
outsl
push
or
clc
inc
mov
pop
and
pop
rclb
push
mov
mov
icebp
jg
push
lods
jl
inc
xlat
sbb
jo
cmp
les
lea
mov
push
xor
adc
push
jno
mov
cmp
jp
inc
cs
inc
mov
hlt
push
loop
lea
sub
aaa
mov
cwtl
bound
cld
stc
dec
sub
and
call
cmp
test
mov
mov
insl
xor
and
mov
pop
aad
call
test
ret
add
leave
jnp
inc
dec
mov
jmp
cmpsb
imul
xchg
and
std
test
jge
xlat
sbb
int3
and
cld
fisubl
aam
inc
sbb
ret
mov
lock
ljmp
scas
out
mov
out
jb
bound
and
mov
sub
jecxz
lahf
sbb
and
dec
lcall
loopne
cs
jmp
les
lea
adcl
adc
std
mov
popa
cmpl
addl
or
jge
mov
or
aad
or
xor
push
jbe
cmpsb
lcall
scas
xchg
sbb
mov
stos
or
sbb
or
addl
fisubrl
dec
imul
adc
pop
dec
mov
push
xchg
lods
jbe
mov
cli
jno
cmp
je
sub
adc
das
mov
fsubl
cld
mov
ret
outsb
xor
dec
and
out
add
dec
out
mov
idivl
sbb
dec
test
jg
popa
daa
push
jae
lods
push
mov
ret
jl
sub
test
xchg
movl
jno
xchg
int
jmp
lret
dec
and
mov
rorl
pusha
and
jno
movsb
push
jge
xlat
pop
std
push
mov
push
or
jg
jae
es
and
sbb
aaa
sub
sbb
adc
leave
bound
iret
into
mov
sbb
lret
sbb
ss
sbb
or
jae
imull
cli
mull
lcall
jbe
test
push
adc
imul
push
or
test
xor
loop
dec
loopw
addl
jge
lahf
mov
sti
enter
xchg
aas
xchg
lahf
aaa
mov
out
mov
xor
xchg
pop
sbb
lea
sub
loope
int
test
sti
es
fnstcw
add
pop
leave
cmpsb
mov
in
sub
push
aam
mov
xlat
pop
bound
mov
jno
mov
and
and
gs
in
mov
loop
cmp
push
test
and
pop
and
insl
mov
push
das
je
jg
adc
jge
sbb
aas
daa
xchg
push
jo
das
mov
fnsave
in
jl
jle
cmp
mov
ret
or
ret
adc
movsb
fisttpll
inc
cmp
fbld
xor
outsl
sub
xor
stos
dec
mov
into
xor
add
popf
inc
stos
xor
mov
lret
in
lods
imull
popf
mov
outsb
ljmp
out
je
dec
xchg
jnp
push
loop
test
and
pop
lock
xchg
xchg
push
std
mov
das
sub
out
les
repnz
out
push
sub
inc
jo
cld
fucomp
ja
lcall
dec
mov
inc
das
pop
mov
lods
sahf
call
jbe
ja
jns
lret
cld
outsl
cmp
xchg
push
adc
repnz
pop
inc
fists
cmp
push
add
insl
add
sub
or
sub
aad
fs
push
jecxz
xor
aas
add
shl
push
or
out
push
iret
sub
mov
into
stos
pusha
ja
jge
movsb
fistps
or
insl
cmp
xchg
pop
aaa
stc
ret
cmp
and
dec
pushf
mov
sbb
mov
mov
inc
scas
ret
iret
sahf
sub
inc
sbb
loopne
pusha
pop
and
nop
data16
outsb
aas
shr
addr16
lods
lock
sbb
ja
mov
gs
nop
dec
mov
xor
sub
mov
imul
dec
xchg
xchg
sbb
pop
jp
mov
movsl
cld
sub
icebp
inc
cmpsl
mov
shrb
lret
arpl
sbb
push
adc
lods
adc
push
aaa
cmp
out
cmp
ret
loope
sti
xchg
add
mov
scas
test
sub
cmp
mov
cmp
stos
cwtl
sahf
or
dec
mov
fwait
or
mulb
lcall
add
neg
xchg
stos
mov
adc
xorb
inc
pop
sub
sbb
sti
mov
insb
lea
sbb
xlat
pusha
adc
jno
mov
jne
notl
out
dec
out
jp
jg
testl
jecxz
lods
mov
shll
dec
stc
mov
js
into
mov
sub
es
mul
ljmp
rorl
enter
adc
in
movsl
sbb
cmpsb
sbb
leave
cmpsb
pop
ja
push
adc
push
jmp
or
dec
aad
aaa
loopne
loope
and
je
mov
jp
xlat
out
mov
adc
mov
jne
imul
out
inc
dec
in
rcrb
fdivl
stos
into
pop
movsb
pop
xor
popf
cmpsb
cmpsl
mov
movsbl
nop
mov
fists
ret
or
dec
pop
adc
daa
scas
adc
loop
push
inc
jecxz
xchg
mov
sub
sbb
in
jmp
cmp
imul
xor
sbb
imul
dec
inc
xorb
jge
aas
jno
movsb
ret
sbb
shrb
bound
mul
add
lahf
dec
cmpl
add
mov
pop
data16
mov
imul
scas
sbb
mov
mov
sbb
cwtl
sub
mov
mov
dec
push
xchg
test
sub
xorl
push
cli
push
hlt
dec
pop
cwtl
or
in
push
mov
sbb
addl
inc
aad
dec
mov
and
push
inc
fucomi
mov
movsb
cmp
movsl
xor
fstps
push
popf
lcall
mov
out
xor
fstpl
test
inc
sbbl
push
aad
jnp
gs
fs
test
or
add
mov
jl
adcl
mov
sti
icebp
add
dec
pop
push
ffreep
imul
push
enter
add
leave
xchg
push
ss
cmp
mov
pop
sarb
jae
icebp
add
mov
push
xlat
cmpsl
adc
pop
stc
inc
arpl
adc
push
shlb
nop
jge
lods
dec
rcr
xor
inc
mov
jne
fisubl
dec
sub
mull
rcrl
xor
xchg
xchg
mov
push
mov
pop
dec
jno
sub
in
push
pushf
jge
push
jmp
mov
scas
sti
bound
les
jg
es
das
jecxz
sbb
pusha
insl
add
pop
or
es
mov
push
add
inc
cltd
fsubrl
xor
sarb
icebp
fs
hlt
gs
into
xchg
out
pop
cmp
loopne
fnstenv
cmp
or
dec
outsl
sarl
and
xlat
leave
out
and
push
loopne
imul
add
xchg
adc
cwtl
mov
pop
push
mov
or
add
lret
inc
pop
sbb
adc
addr16
adc
stc
sub
scas
xor
test
pusha
jecxz
xor
mov
outsl
pop
cmp
or
jg
pop
xchg
test
test
mov
shll
pop
adc
ss
adc
add
add
imul
in
ret
adc
xor
xchg
push
fs
sbb
lcall
xor
cmp
test
add
loope
rorl
mov
in
jecxz
call
outsb
mov
test
lcall
mov
fdivl
andb
xor
sbb
loope
jno
or
and
imul
addr16
cmp
mov
aaa
fucom
mov
mov
movsl
scas
cmp
push
aad
mov
sti
xor
xchg
repnz
dec
scas
inc
inc
xchg
out
push
push
out
clc
fstl
xchg
mov
sub
xchg
in
jl
in
call
sbb
movsb
fistl
into
sub
jge
dec
mov
or
dec
pop
clc
iret
out
cmp
fwait
dec
mov
pop
cld
or
into
lds
call
test
lods
in
or
shl
cmp
lcall
sbb
dec
imul
cmp
sub
push
sar
jns
mov
int3
jo
mov
lea
inc
and
push
cltd
mov
adc
push
in
insb
cs
sub
repz
pusha
lock
cmp
sub
enter
test
xchg
cmp
pop
or
pushw
fdivs
or
pop
mov
push
fmul
lret
inc
xchg
cld
call
push
popa
jo
xchg
add
ss
cltd
pop
or
xor
out
cltd
cmp
sub
sti
fdivrl
dec
or
sbb
xchg
jmp
cli
xor
aam
adc
into
pop
pop
push
push
pop
pop
stc
les
cs
push
sub
shll
add
adc
and
xor
jbe
sbbb
push
pop
and
xchg
and
mov
sub
inc
sbb
mov
adc
mov
insl
jmp
add
sbb
gs
jl
add
aaa
mov
call
pop
incl
cld
rclb
sub
cmc
sbb
cmp
out
push
mov
ljmp
and
outsb
and
stos
pop
lcall
sbb
xlat
mov
inc
cld
mov
mulb
mov
lret
test
loop
es
loope
mov
test
pop
fucomp
fucomp
test
jb
rclb
sub
data16
sub
cmc
faddl
out
pushf
stc
jbe
movsl
fidivs
mov
lock
xorl
sub
adc
das
mov
ss
insb
jle
cld
cli
adc
cmp
sub
lea
fcomps
int3
in
mov
cld
pop
and
dec
sbb
xchg
xor
inc
jb
movsl
push
or
cld
into
inc
js
mov
dec
enter
out
in
cmpsl
mov
in
xchg
mov
in
jg
fcompl
dec
add
je
movsl
and
mov
popa
popf
push
scas
hlt
fidivrs
or
cli
jg
mov
out
xlat
jns
mov
jae
jne
int
sbb
xchg
scas
cmc
call
imul
push
lods
roll
adc
push
fstp
jb
jg
inc
ret
xorl
jne
inc
daa
lds
lret
xor
mov
add
cmp
mov
mov
shlb
dec
cwtl
push
lods
inc
insb
cmp
fisubrs
insl
add
in
push
fisttpl
mov
cmp
sbb
cmp
lock
fadds
push
mov
add
xchg
mov
stos
sbb
sub
inc
push
aam
cld
ret
inc
ja
sub
loop
cmc
repz
mov
mov
movsl
push
mov
or
inc
mov
add
rolb
daa
push
enter
das
push
and
or
repz
cwtl
das
shll
lock
jns
mov
xchg
je
test
cmp
add
call
ret
aaa
addr16
push
push
clc
jno
pop
push
sub
sbb
add
fildll
push
in
popa
lock
loope
mov
lcall
pusha
inc
xchg
aad
mov
lods
das
jbe
mov
jge
or
mov
lock
test
sub
pop
popf
inc
mov
das
dec
cmpsb
cmpsb
cltd
lds
pop
add
popa
into
and
or
iret
icebp
insb
mov
loopne
adc
mov
cmc
test
aam
cmp
pop
enter
push
cmc
mov
inc
popa
ds
xchg
and
jno
aaa
pop
gs
cmpsl
enter
mov
sub
in
mov
jge
jns
jecxz
lret
cwtl
cltd
xlat
sahf
push
ret
jl
inc
mov
dec
mov
in
sub
sub
and
adc
insb
repnz
mov
aam
out
add
test
fwait
add
push
loop
shlb
lcall
inc
push
dec
or
mov
xchg
fisttps
mov
mov
mov
repnz
mov
fdivs
ret
pop
sub
xchg
xchg
jmp
std
stos
test
jns
mov
xorb
cmc
scas
sbb
fcoms
dec
insb
cmp
callw
inc
gs
pinsrw
addr16
mov
rcrb
add
add
into
sbb
in
xor
adc
push
lahf
rcr
mov
sub
pushf
sub
cmp
mov
in
xchg
iret
clc
xor
pop
xor
jo
cltd
es
push
mov
add
std
in
mov
bound
cmp
insb
push
sti
aam
out
mov
or
data16
push
sub
mov
cmpsb
jp
cmp
pop
das
mov
lods
notl
mov
jg
push
test
rcll
ds
ljmp
cmpsb
mov
iret
pop
je
mov
aas
dec
push
outsl
mov
in
or
jl
or
sub
mov
fdivrs
jmp
cmp
dec
aas
subb
jbe
push
adc
fldln2
sub
mov
add
push
aad
pusha
mov
shl
sbb
out
out
pop
jl
sahf
iret
inc
inc
and
fcomp
ja
xchg
sbb
xor
fsubl
pusha
gs
or
or
fs
dec
add
mov
fcomps
mov
xorl
xchg
cmpsb
sub
sub
insb
xchg
pop
add
in
rcrl
out
or
out
push
lret
or
pop
ds
rorb
daa
sbb
test
iret
mov
inc
lcall
lcall
or
sub
or
popf
ficoml
sub
jo
cli
lods
out
push
cmp
cmp
xchg
xor
mov
fldenv
pushf
push
scas
mov
jno
or
push
addr16
sbb
test
mov
jo
xchg
fisubl
insb
push
mov
lahf
loopne
loope
repnz
mov
je
adc
imul
pop
dec
imulb
rolb
mov
sub
in
rclb
inc
in
cld
ja
inc
adc
mov
and
push
pop
fmuls
push
dec
mov
dec
les
adc
and
imul
ret
dec
xchg
roll
ficoml
fstpl
pop
loopne
or
sbb
inc
fildl
test
xchg
and
scas
mulb
loop
dec
mov
or
mov
push
shl
push
fbld
mov
mov
sub
mov
cli
nop
ljmp
pop
fcomps
addr16
cmc
or
cmpl
or
cmp
mov
call
sub
bound
add
decl
lods
gs
addb
gs
push
mov
sbb
pop
xor
loop
push
inc
loopne
push
jp
sub
jns
dec
pop
push
pop
arpl
jecxz
xchg
inc
jp
mov
out
add
movsb
mov
jno
pop
out
das
pusha
mov
lock
fidivrs
je
mov
iret
xchg
fisubrl
ret
loope
lahf
dec
jecxz
pop
out
jno
aaa
mov
hlt
adc
sub
xchg
pop
imul
adc
insl
sbb
rep
shl
cmp
xor
push
push
cmp
dec
in
int3
pop
cmpb
xor
jl
jp
popa
icebp
popa
jle
fadds
jge
xchg
push
ficoms
push
sahf
mov
stos
ljmp
jns,pn
out
add
dec
jo,pn
mov
jb
popf
jno
jbe
xchg
fcmovb
mov
xchg
arpl
jle
xchg
or
inc
xchg
repnz
mov
je
adc
nop
test
popa
jmp
cld
filds
sbb
mov
mov
jns
sbb
dec
mov
ds
lcall
minps
icebp
movsb
mov
and
push
dec
sbb
daa
or
cmp
mov
mov
adc
jl
ja
stos
inc
fisubl
inc
sbb
dec
jle
push
sbb
cmp
ds
or
in
xor
mov
inc
add
push
adc
scas
mov
pcmpgtd
loopne
xchg
xchg
pop
xchg
je
or
mov
dec
xor
jne
add
jp
call
and
pop
mov
gs
lcall
in
xor
inc
icebp
mov
mov
pop
daa
mov
insl
cmp
push
cmp
push
mov
inc
mov
push
hlt
inc
dec
fdivr
cmc
add
cli
and
add
shr
jae
popf
loop
and
movntq
out
xor
sub
lds
scas
popw
or
xor
in
mov
push
andb
inc
clc
insb
push
shr
movd
cmc
mov
dec
mov
xchg
inc
pop
push
int3
jp
ret
jae
fimuls
mov
movsb
popa
adc
shlb
insb
fildl
sub
adc
pusha
scas
sub
int3
test
lahf
scas
fnstcw
adc
push
repnz
xchg
pop
loopne
and
mov
dec
mov
inc
jne
mov
rcll
ds
jg
push
daa
sbb
in
inc
pop
insl
or
cmp
neg
mov
movsb
lods
adc
mov
or
das
and
outsb
push
rorl
std
mov
sbb
cld
cmp
popf
and
addb
clc
call
mov
out
mov
aad
push
out
mov
data16
push
rorb
adc
pop
sbb
jg
in
aaa
push
test
pop
out
mov
rcrl
jb
jno
or
cmp
pop
aad
int3
mov
into
es
mov
in
int
loopne
sbb
push
loopne
fistpl
mov
push
jno
push
jp
in
fsubl
testb
inc
fimull
test
inc
mov
fidivs
icebp
pushf
xchg
jmp
fwait
pop
sub
cmp
dec
pop
mov
mov
aam
add
xchg
into
shr
pop
in
in
xor
leave
imul
cmp
xlat
sbb
ss
dec
push
iret
fsubp
out
js
arpl
sbb
add
mov
xor
xor
jnp
xchg
mov
test
inc
and
or
lock
dec
inc
pop
add
out
shl
dec
dec
iret
xor
xor
or
inc
mov
adc
sbb
pusha
mov
stos
cmpsb
and
adc
inc
fiaddl
or
ret
jno
adc
mov
sti
icebp
and
add
push
add
aas
cld
icebp
push
push
bound
jb
sbb
xor
mov
cmpsb
cltd
lahf
dec
push
cmp
jl
sahf
lret
cmp
cmpsl
shrl
push
imul
pushw
fucomp
fs
jmp
incl
inc
adc
ficompl
mov
fiadds
add
add
push
inc
mov
xchg
xor
and
or
das
repz
icebp
sbb
mov
les
dec
enter
andl
lret
call
pop
mov
sub
inc
or
or
movsl
flds
xchg
js
insl
adc
das
fidivl
dec
mov
fistps
adc
dec
rcll
pop
sbb
pop
add
adc
pop
adc
xorb
cmp
pusha
imul
cmc
fs
mov
aas
aad
inc
jb
push
daa
sub
les
stos
fildll
mov
xor
mov
sub
fistps
dec
mov
adc
in
adc
dec
inc
push
inc
bound
sub
sbb
loop
xor
and
jo
shlb
jno
or
out
pop
push
call
fstps
cmp
popa
fs
cmp
jno
test
dec
jo
xor
pushf
insl
adc
mov
popa
lcall
or
pop
bound
jbe
hlt
or
push
daa
push
cmp
lock
dec
mov
pushf
sub
mov
jbe
push
jns
lcall
ret
in
jge
ret
add
jge
push
pop
in
movsl
andb
adc
adc
and
or
add
gs
ret
fstl
iret
xchg
jmp
ficomps
sub
mov
in
insl
cmp
mov
or
repz
mov
jge
dec
scas
cmp
adc
dec
xchg
cs
push
out
and
dec
xor
rcrl
push
sub
fisttpl
or
sbb
rcrb
scas
push
sahf
outsb
testb
jno
dec
adc
jge
sub
lahf
icebp
cli
jb
xor
jae
pop
and
ret
jns
mov
adc
mov
icebp
mov
xor
inc
jnp
mov
xchg
mov
or
int3
jle
or
hlt
and
sub
ds
adc
jle
pusha
and
ljmp
aam
pop
mov
mov
sub
xorb
push
addr16
cmpsb
dec
fisubs
mov
xchg
inc
mov
cwtl
inc
mov
mov
jb
xchg
hlt
daa
shl
inc
scas
hlt
sbb
dec
into
cmpsb
mov
lock
fs
xor
movsl
notl
addb
shlb
push
push
pushf
and
and
std
cwtl
mov
jl
hlt
cltd
stc
loopne
pop
mov
xor
lds
jno
mov
add
fcomip
shll
dec
sbb
sub
mov
pop
or
into
jle
xor
adc
lcall
inc
mov
test
aas
xor
in
sbb
jg
jg
enter
cmpsl
mov
nop
push
shl
sbb
nop
lahf
insb
shll
cltd
inc
xchg
push
mul
cmpb
mov
xchg
cwtl
inc
sarb
sub
test
push
push
arpl
or
dec
out
je
push
and
test
repz
fs
push
and
int
fwait
xchg
popa
dec
mov
mov
jmp
sub
lret
lds
popf
xor
sbb
xchg
pop
aas
xchg
leave
and
out
sbb
sbb
inc
push
rclb
xchg
popa
mov
mov
push
nop
ja
inc
popa
pop
lahf
adc
fstps
fisubs
shll
adc
push
cmpsl
idivb
mov
addr16
cmp
jo
daa
mov
jno
sbb
les
mov
xlat
xor
inc
pop
mov
lods
aaa
jno
inc
out
aas
inc
add
inc
push
mov
imul
add
pop
jnp
test
push
adc
movsl
inc
xchg
jle
test
jecxz
out
jle
dec
jo
xor
xor
cmp
mov
out
or
notb
jl
out
lods
std
testb
mov
pushf
pop
std
data16
xor
sub
sub
jle
rolb
lock
imul
xchg
dec
pop
or
pusha
pop
pop
sub
dec
aam
gs
stos
mov
lcall
call
cmc
into
lret
xor
add
cmp
mov
es
shll
push
mov
daa
repz
pop
test
cmc
pop
repz
pop
sbb
int
daa
loopne
sti
outsb
fiadds
gs
mov
shr
adc
xchg
mov
cmp
adc
inc
sbb
push
lret
inc
stc
and
push
movsb
and
idivb
mov
outsl
inc
inc
subb
or
sarb
pusha
mov
inc
in
outsb
lea
imul
jae
jnp
lock
jbe
sub
insl
das
les
repz
pusha
sub
ds
rcrl
jnp
push
xchg
cld
or
dec
mov
dec
sahf
mov
aas
and
adc
xlat
mov
mov
push
jb
enter
and
js
push
mov
or
icebp
dec
lea
and
or
jns
movsl
iret
and
xchg
aam
sbb
add
push
pop
push
jb
filds
jge
ljmp
mov
mov
mov
dec
rol
cmc
mov
lds
xor
nop
mov
sbb
sbb
mov
xchg
out
sbb
subl
mov
mov
pop
pop
dec
dec
orl
mov
icebp
xchg
stos
aad
lret
mov
in
dec
or
arpl
cli
jmp
aas
cmp
mov
stos
cmp
cmp
sbb
xor
pusha
dec
mov
xchg
mov
push
push
add
insl
jnp
aam
xchg
mov
mov
fidivs
stos
xor
cmpsb
and
mov
sbb
mov
js
fs
jb
or
xorl
cwtl
int3
ljmp
leave
mov
pop
jno
push
popf
push
adc
sbb
outsl
xchg
mov
xchg
or
sbb
cli
lds
fwait
cli
pop
das
stc
mov
mov
xchg
popa
jle
xor
andb
sub
rolb
rolb
loope
fidivs
xorb
cmp
fldenv
add
outsl
clc
push
sbb
sbb
jl
mov
mov
pop
add
xchg
jmp
insb
loope
sub
insb
dec
dec
dec
mov
rclb
mov
xor
mov
push
mov
adc
sub
cwtl
es
mov
push
inc
jb
inc
push
fdiv
lods
xchg
push
hlt
loope
sub
insb
fimuls
fiadds
jp
xchg
popf
outsl
sub
mov
dec
shr
xor
repz
dec
xor
add
or
mov
sub
inc
mov
jmp
cmpl
and
icebp
ret
jmp
jae
cltd
xor
adc
fmul
mov
iret
mov
mov
push
jns
daa
movsl
xchg
sub
in
ret
mov
and
sbb
shl
orb
mov
cli
or
cld
mov
dec
push
sub
xchg
mov
push
add
mov
jns
jns
sub
shrb
mov
mov
mov
lock
jo
or
cltd
mov
inc
cmpsl
push
mov
xlat
xor
sbb
pop
or
fmuls
das
cmp
push
adcl
out
add
mov
push
imul
iret
or
sbb
imul
imul
mov
shrb
icebp
test
les
pusha
and
in
fmull
stc
dec
mov
mov
jmp
pop
sub
jmp
mov
push
inc
dec
inc
mov
pusha
jnp
negb
inc
cmp
xchg
pushl
lret
cmp
add
or
ret
xor
rsm
mov
cmp
push
mov
adcl
mov
dec
push
xchg
xchg
in
lcall
lods
add
xor
adc
int
mov
push
aad
sub
adc
test
push
jmp
mov
leave
in
add
enter
push
and
mov
mov
jnp
lds
mov
xchg
and
cmp
jp
xchg
pop
in
pop
jle
out
lcall
push
ficoms
mov
lods
jno
mov
pop
in
and
jae
arpl
dec
in
xchg
pop
jl
jecxz
add
add
xor
in
lahf
in
or
and
sbb
das
hlt
push
out
add
aam
sahf
push
cmc
std
enter
popf
out
hlt
cmp
xchg
jge
lret
movsb
ds
sbbl
sahf
daa
add
dec
stos
and
jns
push
adc
test
sbb
mov
inc
mov
mov
pop
ja
push
adc
jno
and
push
movsl
mov
inc
sbb
adc
xchg
test
movsb
xchg
jecxz
mov
adc
flds
movsl
adc
push
jo
sti
stos
push
loope
fsts
mov
and
in
aam
push
loope
std
and
dec
dec
insl
adc
dec
addl
jb
cmpsb
mov
mov
xchg
lcall
cmp
sub
xlat
cmp
xor
pop
movsl
ficoms
loope
lds
mov
popa
mov
lds
repz
jno
adc
das
das
lds
in
loopne
mov
scas
lds
movsb
add
xor
das
leave
lock
jge
arpl
mov
mov
mov
sahf
aas
stos
fcomps
jle
xor
js
pop
sbb
daa
xchg
test
ror
sub
cmpsl
lds
fbstp
repz
cwtl
loopne
insb
stc
test
push
cmp
push
in
mov
out
test
xchg
fdivrs
movsl
mov
mov
dec
mov
mov
popl
mov
jg
or
sub
pop
or
stos
cmp
jge
jecxz
sarb
imul
cmp
fcmovnb
jmp
mov
sahf
and
fdivs
fmull
sbb
arpl
lret
in
gs
rolb
xchg
push
xor
rolb
insl
mov
addl
popa
leave
pop
jmp
mov
out
jl
cmp
ss
cmp
cmc
xchg
sbb
push
or
push
dec
xorb
sub
aad
push
and
clc
es
mov
adc
in
jbe
mov
adc
pop
xor
out
mov
pop
scas
out
mov
sub
pop
outsl
lods
mov
sbb
scas
in
scas
add
rcll
icebp
cmp
aad
out
adc
pop
cmpsl
stos
adc
sbb
out
adcb
flds
jp
sub
fldenv
icebp
push
aaa
popf
jne,pn
scas
and
or
push
inc
ret
inc
stc
dec
xchg
push
sar
fmull
xor
jnp
pop
int3
imul
ljmp
cwtl
movsb
and
daa
mov
enter
psubsw
aaa
icebp
leave
xchg
jne
jae
iret
jg
bound
andb
movsb
xor
imul
add
pop
pushf
rcrl
xlat
in
loope
or
fs
fsubl
sbb
enter
insb
adc
mov
mov
dec
js
pxor
arpl
mov
mov
inc
shlb
movb
or
jb
jb
dec
test
fstl
push
das
mov
stc
adcl
data16
ds
or
rcrb
sbbb
sub
mov
mov
je
pop
mov
insl
cmp
mov
cli
mov
mull
pop
xor
imul
mov
dec
test
xor
mov
mov
data16
mov
or
mov
mov
icebp
jno
jmp
cwtl
stc
add
test
nop
mov
cmp
cmpb
and
cmp
push
sub
iret
and
adc
add
mov
inc
pop
lahf
inc
inc
pop
sbbb
fldl
loop
daa
mov
insb
or
xlat
cmpsb
inc
xchg
ljmp
nop
jl
bound
add
pusha
cwtl
bound
cwtl
insb
jnp
lret
es
dec
stc
jo
add
pop
cmp
mov
push
clc
int
popf
mov
inc
lcall
pop
es
clc
inc
sub
cli
pop
push
cld
sbb
outsl
pushf
inc
lods
adc
in
inc
or
jbe
insl
cmp
into
call
jle
rorl
and
fs
bound
in
jecxz
sub
push
push
xor
pusha
out
outsb
insb
mov
sub
dec
push
aas
ret
pop
cwtl
sbb
xor
pop
es
outsl
mov
inc
or
fwait
repz
dec
jbe
xchg
aaa
and
pop
mov
xchg
pop
outsb
outsl
adc
push
adc
add
adc
mov
movsl
push
loope
cwtl
lcall
ljmp
stos
inc
ret
adc
sub
xor
pop
jne
cmp
or
pop
push
lea
enter
inc
add
add
imul
sti
outsb
pop
ret
pop
pop
dec
cs
mov
ja
ror
dec
lret
dec
in
jecxz
repnz
push
fisubrl
mov
out
adc
fidivl
movsl
dec
and
int
pop
aad
inc
ret
jl
push
rol
jp
into
stos
lcall
inc
mov
ret
pusha
lcall
mov
fstpt
pop
or
nop
jne
and
jns
cmp
mov
xor
cmpsl
popa
outsl
shr
xor
xchg
jp
rcrb
push
pop
lret
gs
data16
mov
imul
xlat
cli
mov
aad
push
adc
cltd
mov
mov
dec
cmp
ficoms
cmp
xor
sub
or
push
cmp
sbb
cmpsl
roll
pop
lock
pushf
pop
inc
cmp
xchg
jne
sub
pushf
test
inc
sbb
cmp
mov
pushf
sub
shll
aas
push
gs
test
jle
adc
scas
mov
push
inc
das
mov
outsl
scas
push
insb
sti
add
mov
pusha
cmp
pop
cmpsl
mov
movsb
ds
cli
mov
jne
lea
das
mov
fcomip
popf
and
dec
mov
testb
ljmp
jnp
mov
popf
insl
sbb
xchg
movsb
in
sub
pop
pop
push
shll
jmp
xor
jle
xchg
addb
inc
je
push
dec
leave
adc
int
cli
push
repz
jl
jbe
ljmp
repz
mov
mov
test
fists
mov
pop
arpl
je
negl
jp
in
xchg
sbb
or
cmp
andl
loop
mov
sbb
push
ljmp
jb
jecxz
dec
outsb
jmp
ss
sub
imul
movl
orl
mov
clc
jbe
inc
jle
and
and
sarb
sbb
mov
icebp
clc
pop
mov
les
push
pop
test
fs
mov
out
imul
rcrb
mov
hlt
mov
push
cmc
stos
stos
hlt
in
push
mov
insb
add
leave
xor
jmp
outsl
movsl
and
fmuls
ror
stc
mov
sbb
pusha
jo
xor
mov
pop
push
mov
filds
dec
mov
ss
mov
xor
and
cmpsl
cmp
mov
std
adc
outsl
pop
inc
and
sbbb
stc
jge
cmp
cmp
test
and
or
xchg
test
cmp
sbb
movq
fdivrs
ja
and
sub
mov
jo
cmpsl
aas
sub
out
aam
frstpm(287
inc
push
shll
jns
xchg
es
cmpsl
dec
jge
adc
arpl
aam
xchg
sbb
loopne
dec
mov
pop
repnz
dec
mov
mov
enter
cltd
fdivrl
mov
mov
call
insl
out
mov
loope
push
inc
mov
mul
lea
xor
mov
out
mov
mov
bound
inc
dec
cli
jne
inc
jp
int3
jb
aam
lods
cmp
je
push
push
divl
lcall
mov
lods
aas
enter
adc
xor
scas
daa
enter
popa
std
jbe
jge
gs
jp
pop
pop
push
mov
mov
lds
shl
lea
and
jp
and
mov
add
out
scas
mov
lcall
fbld
add
push
mov
sbb
xchg
inc
rclb
jle
and
cmp
popf
push
xchg
fwait
call
inc
sti
lret
gs
sti
lods
sbb
imul
fistpll
or
jmp
xor
aam
out
inc
rcrl
xor
repnz
shlb
xchg
sbb
push
leave
repnz
stc
dec
hlt
add
add
sbb
adc
mov
mov
push
mov
push
jle
fnsave
inc
lods
loop
xor
xchg
sub
mov
stos
imul
xchg
rcl
pop
lret
sbb
sbb
or
decb
push
push
scas
mov
add
enter
sbb
push
lret
xchg
mov
mov
sub
cmp
and
test
xchg
dec
es
mov
push
lods
add
int
adc
pop
mov
in
xchg
mov
lcall
cmp
xchg
orl
mov
arpl
test
jl
stos
push
fld
or
aad
mov
popf
mov
fs
jl
dec
lock
andl
ss
daa
aad
sbb
movsb
jg
test
ret
fmuls
sbb
rorl
add
ja
sbb
sbb
and
cmp
mov
xchg
mov
and
push
cmc
or
adcb
jge
fstpl
mov
aaa
outsb
repnz
ret
iret
aam
xchg
lcall
jp
mov
popa
cmc
mov
call
scas
rcrb
dec
mov
test
jb
data16
xchg
push
cld
in
gs
push
xchg
lock
mov
imul
jle
cltd
and
test
adc
popa
fwait
repz
ror
pop
shr
sbb
cmpsl
push
pushf
jno
add
rcr
std
outsb
outsl
sti
cmp
into
rorb
mov
xchg
sub
push
dec
ljmp
ja
jle
inc
sbb
in
loope
mov
inc
and
jge
imul
arpl
mov
pop
cmp
pop
sbb
lret
es
cmc
je
ret
xlat
mov
aad
inc
add
push
push
mov
add
mov
xor
adc
ds
sbb
mov
sub
adc
sbb
mov
jbe
sub
sbb
iret
adc
jg
mov
jmp
jmp
adc
xor
jns
and
pop
loop
into
mov
sbb
cs
and
or
xchg
sbb
xor
or
push
in
fwait
jne
cmp
push
push
fwait
mov
vmovsd
jbe
cld
lods
mov
xchg
popf
xlat
or
scas
cmp
popf
ds
jge
daa
out
pop
imul
cmp
mov
popa
or
or
repz
pop
xor
push
in
mov
push
scas
orl
push
push
xchg
sub
jb
faddl
daa
imul
cmp
into
add
bound
dec
sarl
jle
std
xchg
and
jg
imull
mov
in
cmp
inc
shlb
ljmp
ret
jo
test
push
xchg
fcompl
dec
popa
lcall
frstor
aas
mov
fisubl
push
lcall
popf
adcl
xchg
or
popl
adc
adcb
loope
jl
mov
xchg
pop
sbb
jbe
ficomps
push
imul
sbb
hlt
or
test
pop
xor
scas
jecxz
inc
and
adc
ret
inc
test
movsb
push
scas
stos
lret
push
rsm
push
mov
cmpsl
adc
xchg
mov
clc
cmp
push
mov
jp
js
mov
and
dec
gs
sbb
stos
lret
ja
push
std
and
das
loope
notl
jno
mov
xchg
push
add
ja
leave
out
sahf
je
push
sbb
sbb
mov
data16
jle
cli
test
sub
hlt
jne
push
sub
jg
inc
fidivl
mov
test
cld
decl
das
mov
gs
xor
push
dec
scas
mov
push
add
jno
lods
add
xchg
or
shl
sar
and
ljmp
jb
mov
cmpsb
movsb
bound
inc
cmpsb
rorl
sub
sub
adc
sub
dec
cmp
mov
xchg
pusha
gs
cmp
pop
mulb
fldt
shlb
mov
pushf
outsl
cmpsl
daa
aam
cli
mull
ffree
hlt
dec
fnstsw
idiv
aaa
inc
enter
mov
je
jecxz
je
xchg
scas
mov
mov
cmp
adc
int
mov
mov
add
add
aas
lock
insl
aaa
jnp
cld
sub
jnp
add
aaa
icebp
nop
xchg
jo
dec
icebp
loope
push
adc
bound
push
aas
dec
inc
ds
pop
lahf
insb
cmp
pop
mov
sbb
out
adc
jle
dec
movsb
cmpxchg
mov
clc
adc
mov
dec
into
shlb
pushf
add
jp
sub
jle
and
jo
xchg
sub
call
dec
andl
lret
lea
jg
sub
std
sub
cmpsb
sub
xor
xor
cmp
adc
mov
push
cwtl
clc
cmp
mov
jmp
ret
roll
aaa
xchg
mov
adc
adc
pop
clc
pop
mov
sbb
hlt
jg
testl
and
sub
jns
jecxz
or
or
out
hlt
out
mov
into
pop
xor
mov
fstp
xor
cltd
pop
mov
stos
lret
lea
lds
fsubrs
add
clc
jae
sbb
mull
cmp
push
cld
xor
rcr
pop
mov
adc
cli
mov
mov
pop
gs
sahf
cmp
jae
clc
inc
sub
or
adc
scas
push
fwait
loop
ret
popa
dec
push
addl
int3
xor
mov
and
out
cmpsb
insb
rclb
into
or
pop
mov
pop
mov
jl
sub
dec
mov
add
sbb
mov
lods
fistps
add
push
push
adc
add
xchg
push
jecxz
in
and
cmc
mov
xlat
aas
ret
cmp
mov
mov
or
decb
dec
arpl
jle
mov
popf
in
xor
popf
movsb
les
insb
fwait
mov
mov
bnd
sub
mov
inc
lret
xor
ljmp
push
xchg
stos
sub
jo
xchg
cmpsl
mov
push
icebp
xchg
pop
push
aas
cs
or
lea
lock
hlt
fidivs
adcl
insb
test
jns
lods
das
lea
mov
arpl
add
push
mov
int
sbb
lock
add
sbb
xchg
es
lods
mov
rcr
pop
int
nop
shr
inc
add
xchg
stc
stos
lods
das
xor
dec
cmp
pop
mov
hlt
push
xchg
fldcw
fildll
and
lret
mov
inc
ficoml
sbb
jae
sbb
mov
mov
push
mov
pop
test
pushf
inc
dec
mull
insl
rsqrtps
rolb
xchg
jmp
adc
insb
icebp
ror
pop
iret
test
sbb
cmc
jne
dec
dec
mov
call
je
or
cld
mov
into
mov
push
dec
dec
es
adcl
and
movsbl
xor
mov
sub
ret
adc
xor
jp
adc
in
ljmp
or
cmp
test
mov
in
loopne
nop
jb
aad
adc
sub
dec
js
lock
movsb
fbld
outsb
imul
int3
addl
ret
jae
fistpl
iret
cld
ljmp
cmp
negl
adc
sar
pushf
add
fs
es
leave
add
push
cmp
pop
jbe
pop
push
jecxz
insl
lret
lods
pop
push
or
adc
pop
sbb
inc
ret
cmp
mov
inc
idivb
xchg
xchg
pushf
mov
in
jnp
repnz
jecxz
jae
ss
loopne
dec
lret
imul
sub
pusha
jns
popf
mov
and
ljmp
xor
cmp
movsb
out
push
negl
add
xchg
jl
pop
movsl
loop
out
lahf
lahf
pop
add
fwait
ror
pusha
jle
jno
sbb
mov
aad
imul
fdivrs
mov
mov
std
call
cli
pop
jbe
mov
loop
mov
nop
inc
mov
out
adc
push
test
outsb
movsl
and
push
in
sbb
xchg
fwait
mov
jbe
add
and
les
mov
leave
mov
out
adc
scas
jno
fs
jl
pop
or
inc
cmc
inc
int3
shll
dec
icebp
lds
push
aam
lds
dec
shlb
mov
or
sub
push
in
xor
push
test
fidivs
aad
mov
shll
enter
stos
mov
jb
adc
push
and
inc
xchg
and
mov
add
push
testb
cmc
rorl
loop
sub
xchg
add
or
dec
sub
imul
push
ret
testb
imul
scas
jg
lcall
xorb
sbb
lods
in
pusha
ret
push
nop
jl
mov
mov
cmp
rorl
add
inc
cmp
dec
cmpsb
lods
mov
lcall
sbb
push
fwait
loopne
dec
sbb
nop
cmp
add
aad
sub
pop
mov
sub
push
fstpl
pop
lods
add
cmc
fisttpl
xchg
mov
mov
je
or
jg
sbb
dec
sahf
mov
fwait
scas
dec
push
cmp
ss
mov
sub
jbe
dec
fs
inc
mov
pusha
inc
push
ret
pop
jno
sbb
js
lods
lods
insl
or
lods
into
std
fidivrl
or
pop
mov
sub
lods
jmp
add
pop
packuswb
jnp
inc
adc
xchg
pop
in
lret
sub
mov
push
test
jns
add
ret
xchg
adc
rclb
jl
fcompl
iret
lcall
lea
xchg
xlat
jmp
bound
jo
add
cwtl
jge
mov
and
dec
dec
mov
pop
xchg
dec
stos
xchg
mov
pop
rcrl
pop
cmc
aad
adc
mov
repnz
jno
mov
icebp
fidivrl
lahf
fsubrl
in
jp
icebp
mov
xchg
enter
insl
pop
xor
or
pop
iret
movsl
sub
pop
mov
sbb
or
daa
adc
sub
xchg
sbb
push
cmp
scas
cmp
xor
jb
xor
inc
adc
ja
sbb
hlt
lods
mov
adcl
loopne
dec
mov
cltd
popa
and
mov
inc
ror
lret
insb
jo
and
and
push
jb
or
lahf
fistpl
xchg
push
jecxz
int
les
jbe
adc
inc
xchg
cli
jp
inc
divps
gs
divl
test
dec
push
flds
mov
iret
mov
push
jmp
add
dec
fisttpll
fidivrs
mov
lret
aam
sub
jg
push
sub
hlt
hlt
cli
mov
incb
pop
scas
push
and
add
mov
sub
xchg
lods
lahf
dec
mov
push
enter
adc
xor
outsl
inc
aad
mov
or
inc
xchg
repz
loopne
jl
in
jg
cmpsb
fwait
idivl
jbe
popf
push
lea
out
scas
js
or
jb
js
xor
imul
loop
pop
cmpsb
push
das
arpl
mov
add
mov
jno
loope
xchg
push
shlb
stos
into
fidivrl
mov
lods
push
test
mov
out
in
sbb
cmp
xor
test
add
jp
xchg
xchg
ds
mov
sub
lret
ljmp
lcall
xchg
test
sbb
mov
xchg
pop
cmp
stos
lods
repnz
xchg
movsb
mov
add
rclb
fmul
sub
dec
mov
lds
mov
loopne
mov
movsb
in
aas
das
add
cld
mov
outsb
repnz
sbb
je
xchg
push
stos
inc
xor
xchg
subb
pop
pop
xchg
cwtl
mov
pop
jg
mov
pop
mov
andb
mov
mov
jno
adc
jne
jge
sub
daa
or
jae
jl
pop
cld
sahf
nop
out
sub
cmp
pop
mov
loop
dec
outsb
pop
ja
mov
jp
shlb
out
leave
std
pop
adcb
add
inc
pop
ja
repz
movsb
rclb
jbe
arpl
popf
cld
fsubrs
xchg
rcrl
mov
or
loope
xchg
and
mov
loopne
pushf
arpl
call
ret
loopne
cmp
push
sub
in
aas
js
pop
add
or
stos
enter
sti
mov
test
xor
iret
mov
cld
mov
adcl
out
icebp
lods
out
mov
push
wbinvd
mov
jne
outsb
xchg
mov
dec
adc
fnstenv
into
sbb
fucom
sub
push
sub
pop
outsl
fdivrl
fisubs
test
jge
mov
pop
imul
in
mov
push
cmpsl
test
insl
jbe
js
js
jecxz
and
dec
xor
push
adc
push
xor
cs
mov
fldt
rcrb
pop
dec
push
xor
enter
insl
js
rolb
xchg
xchg
sahf
cmc
aas
and
jbe
jae
mov
test
loope
dec
fcomip
xchg
add
pop
jge
out
pop
es
dec
mov
jg
mov
fistps
mov
jp
sbb
popa
mov
test
xchg
and
dec
push
jecxz
lods
xor
sarl
jp
test
sbb
js
inc
jb
add
xor
das
out
and
lock
stc
jle
adc
add
adc
pop
mov
popf
inc
pushf
mov
lods
pop
xorb
sbb
xchg
adc
dec
test
iret
lock
mov
jno
xor
dec
decl
dec
jl
cmc
sub
and
mov
dec
gs
rep
shll
push
dec
push
repnz
rorl
inc
push
in
stc
xchg
insl
fmull
lds
bound
mov
xchg
lods
lea
inc
adc
aam
mov
sbb
loop
cs
call
or
icebp
and
pop
add
cwtl
mov
sbb
ljmp
or
imul
sbb
inc
or
in
stos
inc
adc
cwtl
sub
dec
cmc
fs
add
nop
xchg
mov
mov
inc
cmp
in
mov
lods
shlb
popa
sahf
sub
insl
and
pop
popf
sahf
hlt
lods
outsl
mov
fwait
fs
lock
lock
sub
fmuls
dec
push
leave
mov
fstpl
adc
xchg
daa
xchg
pop
stos
push
sub
les
pushf
ret
cmp
push
jae
jno
repnz
popf
mov
popa
adc
mov
pop
shlb
cli
into
stc
stos
arpl
jmp
inc
cs
or
aaa
adc
pop
call
sub
fs
inc
push
or
adc
aas
fbld
mov
adc
push
xor
mov
pop
dec
pop
ret
mov
add
cmc
dec
cmp
mov
or
mov
and
stos
jae
and
mov
test
cmc
mov
test
shll
cmc
mov
pop
fwait
xchg
insb
mov
cmp
out
sbb
push
cmp
add
out
cmp
lahf
cmc
jb
addb
out
inc
xor
arpl
insb
outsb
out
loop
push
ljmp
jmp
iret
adc
sbb
gs
out
test
aas
orb
lret
jne
xor
xor
pop
pop
shlb
cwtl
fisttps
popa
inc
data16
jbe
sbb
or
call
inc
push
adc
inc
dec
into
mov
adc
addl
sbb
rorl
cmc
inc
int
sub
inc
adc
lock
cli
inc
mov
add
addb
inc
xor
iret
push
es
ljmp
mov
fndisi(8087
fwait
mov
scas
in
test
es
mov
push
cmp
adc
pop
divl
jae
pop
aam
fsts
xchg
sti
mov
stos
fs
xchg
pop
inc
fistps
cmp
dec
notl
aam
dec
jno
ss
lcall
jbe
nop
stos
push
in
fwait
xchg
mov
dec
xchg
psrlw
pop
negl
sbb
sub
or
jle
or
test
dec
fidivrl
mov
and
stos
aas
sub
clc
cmp
cmp
enter
arpl
mov
sti
not
cmp
and
shll
std
push
xchg
jmp
cmc
lods
push
lds
adc
mov
fstl
mov
or
pop
enter
dec
jecxz
inc
stos
adc
inc
loopne
adc
jmp
out
xor
cmc
and
inc
addl
jl
ret
movsb
or
pop
cmpsl
add
repnz
add
adc
lds
sub
jge
lret
push
mov
leave
push
cmp
out
jmp
inc
mov
loope
sub
or
icebp
pop
and
dec
insl
push
hlt
outsl
test
cld
sub
cwtl
inc
push
jp
inc
jg
jae
js
sbb
mov
xchg
and
and
sub
add
mov
and
xor
push
jno
add
mov
xor
inc
insb
mov
jne
xrelease
test
inc
mov
or
mov
lret
addl
out
dec
fsub
sahf
sti
adc
xor
std
movsb
inc
hlt
pop
jmp
pop
call
cmp
fs
fsubl
sbb
sbb
mov
jae
out
in
call
push
ret
dec
pop
scas
inc
enter
rep
insl
push
jbe
repz
jge
dec
je
add
jno
je
gs
andl
xchg
push
jmp
xor
or
jge
xor
add
mov
flds
stos
mov
aam
xor
dec
sub
cs
xor
pushf
sub
icebp
aas
xchg
cmp
xchg
rol
pop
clc
sarb
fimull
or
or
sub
out
sub
out
cltd
dec
mov
ret
pop
xor
aam
dec
xchg
mov
xor
js
lods
cld
lock
sbb
jne
dec
push
cmp
sbb
jmp
leave
add
mov
imul
dec
popa
jecxz
std
jae
dec
add
shlb
and
push
int
hlt
ljmp
clc
adc
hlt
cmpsb
jle
sub
mov
add
dec
xchg
mov
pop
pushf
fwait
sub
pop
rcrb
insl
inc
dec
scas
dec
pushf
mov
jl
aam
dec
dec
je
xchg
bound
pop
cmc
adc
fidivs
lret
fwait
js
loope
testb
adc
add
mov
mulb
fwait
int
insl
push
out
dec
mov
lods
pop
out
push
insb
mov
in
loope
add
mov
push
cmpsl
jge
scas
sbb
test
in
xchg
lret
pusha
dec
xchg
hlt
mov
lret
jne
test
jecxz
scas
jecxz
pop
dec
inc
cmpsl
pop
scas
out
ja
cmp
enter
out
gs
jecxz
sbb
jb
sub
sub
scas
jmp
add
mov
popa
shll
cmp
xor
mov
repz
sbb
cmp
subl
push
fwait
das
or
xchg
lds
fwait
push
in
sub
movsb
pushf
sbb
dec
dec
xchg
mov
xchg
lret
sub
dec
roll
sete
dec
aad
xchg
xlat
pop
fst
dec
mov
int3
add
je
imul
daa
adc
jl
out
enter
xor
mov
jle
push
and
adc
dec
lock
loop
aaa
xor
jns
cli
xchg
imul
xchg
das
sub
popf
push
aam
add
lds
ja
aam
mov
sub
xchg
rcl
pop
mov
dec
pop
jg
dec
push
rcl
jns
pop
gs
hlt
mov
fwait
dec
int
shrb
push
xchg
mov
sti
dec
dec
push
inc
insb
in
inc
xor
outsl
movsl
or
repz
dec
sub
ja
out
outsb
test
add
cwtl
fists
cli
push
push
fwait
arpl
filds
mov
xchg
add
dec
push
add
call
cmpsb
divl
and
push
and
mov
mov
and
pop
leave
mov
pushf
pop
jecxz
or
xor
adc
std
xchg
xchg
lret
mov
aaa
fldt
dec
jo
xchg
cmp
rclb
mov
push
sti
pop
arpl
jecxz
unpcklps
mov
fdivl
fimuls
mov
dec
inc
lods
inc
mov
into
fidivrl
jae
or
xchg
push
mov
imul
cs
inc
mov
jb
sbb
mov
leave
pushf
and
pop
shll
ds
push
and
lock
pusha
pop
push
sub
pop
adc
addr16
aad
sub
xchg
and
mov
cmpsl
popf
cwtl
divl
shl
test
in
cmp
repnz
lcall
pop
nop
or
fucomp
cs
iret
jb
fcmovu
mov
adc
pop
cwtl
nop
ja
sub
movsl
fidivs
lahf
xchg
inc
and
pop
or
mov
daa
xorb
mov
pop
mov
lahf
data16
leave
xchg
ret
xor
pop
lds
dec
out
push
jg
or
sub
loope
lds
imul
sbbb
and
jmp
scas
icebp
dec
mov
arpl
test
push
add
test
mov
mov
xchg
sbb
push
jl
mov
xor
push
fildl
faddp
test
xor
stos
clc
ds
mov
mov
std
or
addr16
out
mov
adc
nop
xor
rolb
aas
jns
mov
push
xchg
and
roll
mov
out
inc
incb
leave
outsl
jb
sbb
xchg
adcl
iret
push
or
arpl
push
add
sub
jl
cmpsb
inc
and
pop
mov
lahf
cmp
repz
test
push
push
mov
or
push
int
jns
mov
mov
leave
inc
cmp
xor
rol
ja
incl
dec
outsl
pusha
and
cmp
cmc
jecxz
mov
cmpsl
or
inc
mov
mov
inc
cmp
jge
cld
fwait
mov
nop
shlb
mov
mov
sub
test
pop
mov
arpl
sarl
scas
std
dec
and
xchg
or
inc
adc
inc
cs
jns
adc
roll
rcl
cmp
sub
or
cmp
lret
mov
in
movsb
jg
dec
into
scas
mov
data16
inc
mov
jnp
xchg
mov
ds
sub
push
lcall
sbb
je
je
test
test
call
pop
cwtl
aaa
xchg
push
mov
aam
mov
sbb
in
popf
cmp
mull
xor
dec
mov
aas
wbinvd
xchg
icebp
push
cmp
fs
pop
int3
sahf
daa
dec
scas
dec
push
pop
cmp
mov
cmp
sub
cmp
xchg
jle
jp
xchg
js
fidivl
dec
hlt
fs
sub
push
cmpsl
addr16
in
stc
fwait
mov
pop
sub
repz
push
sbb
pop
imul
xor
add
cmpsb
std
fcmove
jg
sbb
out
cmp
xor
and
int3
out
aas
insb
inc
daa
fs
xchg
pop
and
mov
mov
and
inc
rep
leave
xor
rcll
inc
jg
lock
add
mov
arpl
xor
setae
xor
mov
pusha
inc
je
mov
pop
inc
cmc
test
cmp
repz
frstor
fiadds
push
arpl
sahf
mov
mov
std
into
cmp
jnp
lds
pop
xor
jmp
aam
add
scas
aas
xor
inc
mov
cwtl
rclb
dec
xor
xor
or
cmp
sub
adc
enter
leave
mov
sub
data16
add
pop
mov
sbb
add
or
in
fisubl
stc
fiadds
dec
cld
aam
pop
insl
lcall
inc
push
ss
cmp
or
repnz
adc
or
int3
aam
and
and
sbb
xchg
and
rorl
mov
and
jbe
mov
out
aas
lret
add
jp
lret
cmp
enter
xchg
cs
mov
incl
adc
and
jecxz
or
sub
mov
sbb
add
and
inc
aas
dec
ror
lock
adc
fmul
sub
jae
xchg
nop
push
adc
scas
xchg
or
jg
gs
and
test
add
inc
mov
dec
mov
test
push
jge
adc
pusha
add
sub
mov
in
lds
lds
sar
sti
xchg
scas
subb
bound
or
and
fmul
jle
mov
ja
cli
or
sarl
inc
fisubrl
push
mov
add
mov
inc
data16
lret
jb
and
push
push
cmp
std
jle
data16
sbb
mov
stos
pop
xchg
inc
lahf
test
xchg
adc
add
push
jo
or
rclb
mov
pushf
ret
mov
and
pop
je
sub
jle
sub
mov
pop
loop
sahf
or
mov
insb
pop
jnp
add
sahf
cld
fildll
jno
cwtl
sub
rorb
adc
push
mov
sbb
decl
leave
pop
fstpl
xchg
add
fsubp
outsl
outsb
cmpsl
stos
mov
xchg
adc
out
push
je
add
inc
mov
inc
cmc
jg
pusha
push
addr16
push
adc
cmpl
add
xchg
sbb
or
mov
mov
ljmp
xlat
xor
cltd
jle
mov
push
orl
aas
add
cld
jns
push
popa
cmp
addr16
cwtl
imul
ret
ds
rcr
sbb
jne
aas
mov
imul
jnp
add
aas
jg
out
push
mov
andb
xor
cmp
bnd
mov
neg
dec
cwtl
and
aad
xchg
mov
mov
daa
mov
enter
stos
aas
mov
push
adc
aam
mov
cmpsl
add
adc
jmp
or
or
cmp
outsb
int
sub
xor
mov
cmp
insb
loopne
jo
xchg
stos
pop
mov
push
pop
and
pop
cwtl
clc
arpl
mov
adc
pop
sbb
ljmp
in
pushf
cmpl
outsb
data16
jo
ljmp
add
xlat
jnp
dec
bound
sub
xlat
mov
int
jl
mov
jecxz
movsl
pushf
mov
ds
daa
aas
shlb
mov
testb
push
les
aam
inc
mov
icebp
ja
rep
mov
lret
cmp
xchg
aaa
cmc
xchg
cmc
inc
aaa
leave
cld
mov
jp
cli
in
arpl
sahf
push
imul
ss
daa
fildl
or
mov
add
sarb
adc
iret
jne
sbb
and
adc
push
jo
insl
jp
rolb
jns
push
shrl
sub
mov
and
aaa
arpl
pop
or
notb
sbb
imul
mov
movsb
fiadds
pop
repz
cmp
jnp
subl
or
imul
dec
mov
test
sub
xchg
addr16
das
pop
cmpsl
flds
lock
and
shll
insl
iret
cmc
jge
fwait
cmp
or
push
jns
adc
add
pop
mov
sbb
ffree
mov
daa
push
mov
xchg
mov
shrl
jnp
jae
push
out
push
and
js
xor
jecxz
xlat
daa
pop
imul
aaa
cmp
jae
lea
mov
filds
or
jne
pop
lods
ds
test
push
stc
loop
or
das
xchg
inc
or
lds
bound
xchg
mov
add
test
adc
pop
dec
and
add
and
push
je
push
dec
movsb
sbb
fwait
cld
add
xchg
xor
pop
cmpb
mov
insl
push
jns
cmp
sbb
insl
push
fdivl
cmp
fisubrl
pop
sub
shlb
mov
call
ja
in
pop
pop
pop
js
pop
sbb
test
popf
mov
jle
mov
stos
pop
or
xchg
xor
nop
xchg
or
enter
xchg
insl
cmc
testb
test
mov
sti
xchg
imul
sub
test
out
inc
cmp
pop
dec
lds
dec
mov
mov
xor
adc
mov
bndldx
pushaw
pop
das
mov
cmpsl
stos
into
sbb
lret
lods
les
jno
in
sub
dec
and
aad
in
loop
add
add
lods
js
inc
pop
ret
fidivs
leave
scas
mov
jecxz
fidivrl
imul
xor
mov
jae
lret
and
popf
pop
xor
sub
dec
push
xorb
sub
fdivrs
test
clc
mov
sub
dec
into
sub
or
data16
clc
ret
imul
outsl
fcmovb
daa
pop
add
lea
and
jecxz
jle
lret
test
stos
insl
lods
pop
sub
fisttps
lahf
jns
andb
in
movsl
test
jae
fucomi
mov
jns
outsb
dec
subb
shll
pop
ss
popa
cld
clc
pop
imul
pop
sbb
mov
mov
test
insl
test
out
sub
and
jbe
add
mov
and
fwait
mov
push
dec
ret
inc
jb
adc
pop
ss
push
inc
jecxz
daa
pop
pop
das
hlt
adc
imul
dec
push
je
adc
in
mov
xor
movsl
fldenv
lret
mov
and
nop
loop
ljmp
xchg
fisubrs
mov
movsl
mov
test
stos
lcall
out
cmc
cwtl
dec
push
dec
mov
xchg
jmp
or
icebp
mov
sahf
inc
test
mov
xlat
icebp
gs
xchg
into
sti
repz
aas
jmp
je
sub
stos
sub
dec
add
xchg
in
insb
cltd
popa
je
add
sub
enter
xorb
in
lods
les
inc
jnp
test
or
jge
inc
cmpsb
or
jle
xchg
jg
sbb
out
outsb
xchg
aad
xor
pop
mov
sahf
negb
mov
cmp
add
mov
leave
ds
mov
filds
jecxz
dec
xor
decb
add
aaa
dec
add
xchg
jecxz
ja
sti
lret
push
push
add
adc
mov
inc
push
or
push
movsl
cmp
push
jge
loope
push
pop
dec
jae
lds
ss
jb
jbe
fistl
push
in
ret
xchg
loop
sarb
rclb
pop
mov
xchg
mov
mov
and
mov
cmp
popa
data16
add
push
cmpsb
scas
pop
adc
mov
and
jl
xor
inc
loopne
inc
sar
add
mov
lret
dec
repz
xchg
ret
xorb
add
adc
push
push
cmc
rol
jl
jo
cmc
fdivrs
sbb
sbb
fucom
lods
sub
xchg
sbb
lcall
leave
add
sbb
enter
in
push
lock
ja
into
jno
xchg
cmc
jg
mov
cmp
rcll
mov
sbb
jp
rorl
stc
add
mov
jne
add
or
ss
in
aad
out
sub
int
dec
push
push
jg
mov
loop
lcall
popl
adc
shll
inc
testl
aad
ret
call
aad
mov
pop
add
jg
add
jg
ljmp
outsl
inc
js
mov
cmp
cmc
rorl
test
jl
adc
adc
imul
add
jg
ds
call
xor
movsl
pushf
jb
inc
inc
pop
int
popa
jmp
cld
push
and
loop
shrb
pop
or
jp
push
loope
mov
stos
data16
push
popf
add
clc
cmpsb
leave
xor
imul
xchg
enter
insl
in
in
sub
cmp
jo
fxam
and
dec
mov
cmp
jnp
scas
fldcw
test
xlat
mov
lea
ret
mov
adc
push
dec
inc
fs
arpl
or
les
pop
stos
or
clc
andl
movsb
cwtl
ja
dec
cmc
fcmovne
inc
mov
repz
clc
mov
xor
mov
mov
xchg
cmpxchg
das
js
pop
pop
cmpsl
popa
hlt
pop
les
data16
add
pop
sbb
dec
dec
add
push
iret
dec
and
mov
cmp
push
mov
pop
andb
icebp
mov
addr16
and
cmc
call
mov
lods
outsl
fistpl
popf
add
lds
cmp
push
pusha
orl
mov
sbb
sub
adc
jo
mov
repnz
add
cmp
dec
test
push
mov
jmp
xor
xchg
sub
mulb
imul
mov
and
mov
mov
push
mov
out
daa
sbb
mov
push
mov
sbb
fmuls
or
adcl
shr
add
fmuls
sbb
lods
jg
mov
mov
fs
or
fiadds
jb
add
xlat
or
adcl
adc
sahf
cwtl
dec
xor
add
inc
roll
xor
ja
cmp
add
mov
outsb
mov
repz
dec
inc
pop
repnz
ljmp
push
js
push
pop
adc
lret
inc
xlat
outsb
pop
adc
fsubr
push
xlat
sub
sub
fadds
movsb
xlat
into
push
inc
fisubs
test
add
movsb
call
repnz
jae
xchg
adcb
or
imul
xchg
repnz
addb
push
das
push
mov
js
xlat
stos
repz
push
or
dec
xor
dec
pop
adc
add
cltd
push
mov
pop
pop
stos
mov
sbb
aaa
sub
adc
out
lret
push
insb
adc
mov
sahf
out
negb
cmpsb
cmp
xor
inc
outsl
inc
stos
jge
rorl
pop
cmc
jl
mov
in
xchg
mov
imul
xchg
xchg
mov
ss
aam
or
fstl
sub
jo
ret
inc
cli
mov
int
ss
daa
sub
cmp
push
push
adc
pushf
adc
jae
add
jecxz
inc
sub
sbb
pop
xor
rolb
jno
push
push
pusha
shrl
lods
push
rcr
js
xor
scas
adc
mov
mov
lret
pop
insb
pop
mov
inc
adc
push
mov
adc
cmp
jle
mov
popf
push
out
or
adc
ljmp
xchg
inc
cmp
inc
add
icebp
jbe
sub
push
ja
gs
pop
js
inc
jp
cmp
xlat
sbb
mov
xchg
scas
movsb
pop
aas
cld
push
inc
int
jne
inc
outsl
mov
adc
insb
insl
adc
sub
aas
sbb
xchg
inc
mov
or
mov
mov
notb
adc
pop
cmp
sbb
int
stos
sbb
out
aas
pop
cmp
sbb
int
dec
daa
and
sub
sub
adc
outsl
nop
jo
test
xor
or
and
rol
pop
ljmp
jo
mov
lods
jb
add
cmp
stos
pop
nop
inc
xor
rolb
cmpl
fidivs
mov
fwait
popa
pop
dec
pop
pusha
scas
aad
mov
fdivr
jmp
int3
push
cli
loopne
cmp
lds
fs
outsl
xchg
lea
in
fwait
mov
cltd
mov
repz
mov
in
fstpl
scas
movsb
push
test
mov
lods
stos
test
out
test
jbe
popa
adc
xchg
mov
sbb
aas
shr
mov
movsl
mov
or
insb
push
dec
mov
imull
fidivs
and
xchg
inc
bound
push
fnsave
sbb
mov
fimull
out
mov
dec
dec
daa
and
icebp
popa
shll
jae
rorb
push
sarl
inc
sub
and
lret
pop
sub
mov
js
mov
xor
jae
adcl
js
cltd
loop
sbb
ret
or
lea
xor
add
adc
outsl
insl
std
lahf
in
adc
inc
pushf
mov
and
ja
lcall
daa
jae
test
mov
push
cmp
inc
jns
xor
loopne
test
jl
pop
sub
mov
mov
aad
inc
inc
test
add
pop
sub
jecxz
daa
pop
test
push
cmp
jmp
loope
xchg
hlt
and
push
dec
mov
push
test
push
dec
sbb
pop
pop
inc
dec
lahf
jmp
cmpsl
push
jle
push
mov
fnsave
in
cmp
sar
mov
mov
push
notb
test
sub
add
jmp
xor
fidivs
hlt
lahf
jg
dec
mov
mov
in
mov
mov
js
pop
add
push
pop
sub
push
and
gs
xor
mov
pusha
cli
fwait
movsb
add
daa
push
lods
jbe
xor
mov
test
xor
add
mov
ja
sub
imull
push
loop
pop
sti
imul
inc
jecxz
push
mov
sbb
fsubl
mov
lock
xchg
push
mov
lahf
and
add
lods
out
lds
hlt
insl
ret
sub
xor
sub
jecxz
mov
inc
sub
lock
mov
aad
jge
repz
inc
xchg
arpl
mov
sub
pop
daa
pop
sub
lret
jb
jl
test
inc
xchg
cs
or
push
adc
enter
and
stc
push
push
mov
xorl
or
shll
mov
dec
add
inc
loop
sub
loop
lretw
scas
inc
jl
cli
push
push
mul
sub
cltd
xchg
inc
xor
das
push
mov
into
sti
or
lahf
icebp
cmp
jb
gs
sub
out
stos
cmpsl
loope
popa
xorb
lock
mov
ret
dec
in
nop
push
rol
and
rcrb
jns
inc
adc
xchg
movsb
inc
jno
sub
enter
aaa
cmpsb
sbb
lods
shlb
aam
out
and
adc
sub
push
jle
sbb
push
inc
push
xor
in
pop
or
mov
jge
lcall
sarb
fbstp
and
push
add
scas
sbb
roll
pusha
lret
aaa
enter
lahf
std
ja
cltd
jnp
push
mov
adc
rcrb
pop
leave
imul
movsl
jns
xchg
out
pusha
loop
jp
out
cmp
les
pop
dec
cmp
scas
pop
adc
and
loope
ss
xchg
or
pop
sbb
bound
dec
mov
pop
push
push
cs
xor
or
xor
roll
cmp
or
ss
mov
cmc
cmp
jp
or
aad
out
or
mov
inc
mov
pandn
sbb
daa
push
inc
pop
inc
jge
push
and
mov
mov
clc
ret
push
xchg
in
and
push
aad
and
arpl
aaa
fmull
push
stos
mov
jno
test
inc
les
pop
sbb
xor
and
xchg
andb
inc
sub
pop
inc
add
jnp
loop
int
xchg
js
xor
rclb
pop
rcrb
mov
icebp
cmp
jnp
lcall
outsl
cwtl
outsl
je
aaa
adc
or
mov
or
push
pop
mov
jmp
jle
dec
mov
mov
in
lcall
cwtl
ret
in
xor
insl
xor
adcl
cmp
loopne
xlat
aas
call
into
jnp
fcomps
jns
xchg
jmp
add
sar
xor
jbe
int
cltd
lret
mov
negl
or
add
add
in
add
sbb
sub
push
nop
jecxz
adc
and
mov
std
jno
icebp
sub
lret
stos
int
fsubrp
mov
sbb
ja
xor
aam
cs
cld
stc
lret
mov
xor
cmc
adc
dec
lods
imul
jmp
sbb
jns
arpl
nop
das
xor
lcall
cmpsb
fcompl
aad
xchg
jno
fcoml
adc
std
or
int3
into
iret
das
rol
sub
mov
xlat
movl
ret
icebp
daa
ja
pop
jg
jp
pop
decb
lret
pop
jbe
mov
cs
in
imul
xchg
mov
aam
adc
test
push
cwtl
test
sbb
xchg
push
sub
fldcw
push
pop
pop
inc
enter
call
jae
sti
loopne
push
cwtl
pop
mov
jg
mov
in
cs
jp
push
lret
stc
stos
out
loope
push
cmp
xchg
mov
xchg
test
inc
jmp
jo
rorl
xor
or
mov
xor
imul
mov
stc
cwtl
pop
call
mov
dec
jmp
xor
mov
in
in
mov
mov
dec
jmp
sbb
ss
loope
mov
cli
iret
push
push
andl
jg
mov
jl
mov
push
repz
mov
fcompl
pop
dec
sbb
cmpsl
fistpl
xchg
fimuls
mov
leave
push
ja
bound
jg
std
mov
test
xchg
int
jg
push
jle
stos
jae
int3
jne
dec
cmp
xchg
divl
lock
out
xchg
arpl
push
fs
mov
cmp
test
xlat
andl
cs
jb
xorl
jmp
mov
mov
int3
into
bound
or
and
mov
sub
sbb
push
fisttpl
push
aad
dec
mov
mov
lods
jno
and
dec
cmp
inc
mull
bound
pop
xor
lret
shrb
popf
imul
int
xchg
jp
enter
adc
jmp
mov
inc
and
addr16
adc
loope
inc
mov
mov
mov
inc
and
imul
pop
push
push
sbb
js
sbb
inc
pop
xchg
mov
std
pop
push
xchg
sub
aad
test
pop
addr16
pop
fstpl
lods
mov
shl
mov
cmp
lcall
mov
lcall
aad
lcall
inc
and
cmp
dec
enter
xchg
add
insb
push
jmp
clc
test
sub
push
call
sub
push
dec
mov
rcr
lret
inc
mov
fistl
fldt
cld
inc
xchg
addr16
iret
mov
push
stc
mov
ja
loope
sarb
nop
mov
repnz
mov
xor
dec
test
aaa
sti
rcr
jle
and
sbb
insb
in
fdecstp
xchg
mov
sub
psubsw
call
sbb
imul
adc
mov
testb
iret
and
in
pop
fldz
xor
push
or
dec
jb
dec
jns
ljmp
cltd
or
adc
lods
lret
mov
jecxz
inc
cmpsl
dec
or
and
dec
es
ficoml
sub
stc
push
sbb
addr16
loop
mov
shld
std
xlat
popa
jo
or
aam
rcll
ljmp
sbb
add
lds
fcomip
sbb
and
push
pushl
push
lds
pop
sbb
popl
xor
enter
mov
pop
mov
or
test
jecxz
ret
in
lea
test
dec
add
xor
pop
push
cmc
and
data16
movsl
mov
pop
fsubr
add
push
pop
push
pop
lods
fwait
hlt
lock
sbb
push
lahf
pop
daa
sub
das
xlat
and
and
or
fstpl
pop
jg
or
aas
jnp
gs
dec
adc
mov
mov
shlb
pop
hlt
dec
adc
scas
std
insb
int
in
test
dec
cmp
pop
sub
cmpsb
mov
or
xor
stos
ja
inc
mov
inc
adc
xor
bound
pushf
add
insb
in
add
xchg
jmp
inc
gs
cwtl
out
xlat
mov
jae
stos
rolb
dec
dec
or
lods
mov
in
pop
jnp
cmpsb
jle
sbbl
dec
lods
sub
jg
out
xchg
testb
sub
cmp
repz
inc
pop
bound
sbb
cmp
adc
fs
pop
lods
insb
out
or
ja
pop
jb
cmp
adc
das
mov
sbb
add
or
dec
hlt
xchg
jnp
sbb
and
loopne
pop
add
dec
out
pusha
cmp
stos
pop
mov
push
jbe
adc
xlat
jge
sbbl
inc
fcmovne
repz
xchg
pusha
les
sub
adc
jmp
int
cmc
dec
mov
sbb
fadds
dec
xchg
inc
push
jo
xchg
xor
inc
fxam
xchg
stc
push
hlt
push
cmp
mov
mov
inc
jae
inc
ret
sub
pop
daa
jmp
mov
adc
push
sbb
or
cli
jecxz
inc
pop
adc
sbb
jmp
sbb
fistl
inc
sub
and
and
sbb
clc
jp
xchg
adc
int3
push
aaa
mov
sbb
gs
repnz
das
mov
test
inc
lret
mov
fwait
lret
sbb
add
push
jns
dec
hlt
add
lcall
dec
fwait
lret
fisttpll
push
sbb
pushl
cmp
test
shll
out
jp
inc
es
aam
lds
sarb
ror
imul
loope
loope
push
and
adc
xor
iret
xchg
add
subl
fwait
adc
sbb
sarl
mov
lret
daa
sbb
push
sub
jne
out
enter
inc
push
mov
mov
sti
ds
xchg
das
inc
pop
jo
fstl
and
test
cwtl
les
jo
fiadds
sub
lahf
add
mov
push
ds
xor
cmpb
mov
in
adc
enter
outsb
jg
sbb
and
int
cmpb
xor
call
cmp
inc
push
sbb
pop
call
push
sbb
mov
and
bnd
scas
popf
pop
sub
cwtl
and
aas
mov
ljmp
sbb
icebp
fcmovbe
rorl
mov
xor
sbbl
rcrl
ret
call
push
arpl
js
into
lret
or
ret
fdivl
adc
notb
lcall
push
es
pop
loope
cmc
xchg
mov
jb
stos
imul
popf
mov
adc
test
nop
pusha
mov
jg
mov
push
fbld
mov
and
and
sti
stos
popa
pop
mov
dec
punpcklbw
int3
jmp
scas
adc
and
adc
fbstp
adc
idivl
mov
jg
sbb
ret
adc
fdiv
xchg
jge
dec
cmp
pushf
test
and
pop
cmp
rorl
lret
cmc
in
mov
nop
outsb
xor
mov
call
xor
jno
fst
shlb
lahf
scas
push
inc
jae
jb
push
js
fimull
dec
xor
icebp
and
clc
adcb
stos
cli
dec
fsubs
pop
pop
hlt
pop
and
enter
mov
icebp
inc
push
lea
xlat
xor
lea
push
mov
je
hlt
dec
test
mov
jo
xor
fistps
fstpt
push
insl
push
clc
pop
lds
repnz
xlat
push
dec
leave
jno
call
cmc
jge
shrb
imul
into
dec
lret
movsl
int3
push
out
lret
inc
test
lds
or
jo
inc
stos
lea
xor
ret
lods
fsubl
cmp
cmp
mov
xorl
adc
outsb
imul
imul
pop
xor
insb
shll
inc
das
inc
mov
push
cmpsb
mov
hlt
jge
rclb
jo
push
filds
xlat
js
push
jmp
jmp
rcr
fldcw
ljmp
jbe
xchg
xor
das
push
outsb
psrlw
push
shlb
xlat
das
pop
dec
testb
es
pop
or
pop
movsb
and
cld
mov
adc
jo
ljmp
into
jmp
insl
out
pop
pushf
popa
xchg
cmp
xchg
adc
js
aam
push
insb
inc
dec
lods
xchg
sub
adc
xchg
xchg
adc
adc
pop
test
jae
inc
pop
dec
cmp
inc
pop
xchg
jp
pop
pop
dec
or
xchg
aaa
xor
out
ja
pop
inc
inc
pop
in
repz
loopne
push
movsl
insb
push
cmp
jg
push
push
nop
fcmovnu
or
pushf
xchg
cmp
jno
sub
sub
mov
push
int
and
les
xchg
mov
cltd
testb
adc
icebp
movsb
bound
rcl
ds
jb
lods
push
sahf
sti
mov
insb
fisttpll
jo
sub
into
dec
int
aas
int
popa
xchg
aas
xchg
lahf
mov
dec
cwtl
jns
adc
add
xchg
xor
jle
mov
movsl
push
or
mov
cmp
and
jnp
ja
fdivr
cmp
scas
jge
mov
mov
sbb
jp
add
add
dec
push
fs
or
out
ret
mov
push
pop
lret
sub
push
fidivs
or
mov
lods
shlb
dec
dec
push
inc
add
insl
xchg
add
or
mov
xor
jl
cli
iret
jbe
into
or
mov
into
sub
push
sbb
mov
pushf
das
inc
jp,pt
int
mov
pop
popf
icebp
ficomps
jecxz
cmp
enter
in
in
pop
or
rcr
mov
and
xor
inc
js
pop
int3
fsub
adc
adc
adc
xor
aas
mov
cmp
mov
xchg
shll
test
add
pop
cli
inc
dec
or
push
sub
outsb
fildll
push
sti
xor
mov
loopne
nop
mov
std
and
repnz
mov
jnp
lock
lods
cmp
mov
outsl
add
into
mov
shlb
xchg
lea
insb
add
or
lods
mov
stos
jecxz
pushf
xor
dec
xor
add
lods
outsb
into
stos
jae
xor
fstps
lods
fdivl
cmp
scas
pop
test
in
std
inc
dec
ret
xchg
and
pop
pop
int3
dec
aam
stos
mov
mov
out
xchg
aaa
inc
adc
dec
push
xchg
or
or
dec
pop
fsub
nop
subl
insl
imul
loop
push
jae
stc
adc
xorb
pop
lahf
and
xlat
pop
cltd
xor
push
movsb
fidivs
in
pop
lcall
xchg
bound
int3
stc
xchg
pusha
add
sub
inc
mov
rcll
push
xlat
or
mov
adc
stc
mov
aad
cli
dec
xor
ds
xchg
adc
in
push
pusha
inc
mov
xor
cs
ret
mov
cmpsl
mov
leave
pusha
dec
imul
rclb
xor
push
lahf
stos
mov
nop
and
mov
lods
shr
adc
xor
adc
sub
mov
xor
popf
movsl
push
call
xchg
and
mov
pop
mov
sbb
mov
jne
jo
sti
adc
leave
and
test
sbb
pushl
mov
repnz
mov
inc
cmp
int
jno
mov
mov
inc
mov
cmp
mov
add
or
in
pop
mov
add
lods
xchg
push
icebp
hlt
lock
imul
jnp
in
xorb
insl
pushf
push
jl
push
adc
lea
repnz
pop
pop
dec
push
nop
inc
popa
pop
jecxz
xor
jo
jbe
into
in
std
mov
jne
lods
out
push
inc
cmc
xchg
aas
daa
fdivp
stc
pop
sub
pop
loop
sub
call
cmp
gs
inc
xchg
inc
and
adc
pop
pop
or
addl
cwtl
mov
mov
test
sarl
popa
sub
push
sub
test
loop
inc
xchg
mov
add
mov
push
cmpl
movsl
sub
out
xchg
jns
mov
cmp
int
mov
data16
mov
aam
add
and
sub
daa
jb
mov
jg
imul
test
hlt
pop
or
mov
ret
adc
pop
lcall
cmp
iret
pushf
sahf
lret
lods
xor
xchg
lret
or
jo
adc
cmp
mov
dec
xchg
mov
sub
enter
adcb
xchg
repnz
push
add
xor
pop
or
jecxz
jbe
cmp
jmp
mov
xchg
add
lret
lahf
mov
and
das
cmp
loopne
roll
add
jmp
push
cmpsl
lods
lcall
fucomp
fistpll
mov
sbb
jmp
cli
inc
cmp
cmp
int
jle
rcrb
pop
jp
cmp
cli
loop
loope
dec
adc
inc
mov
xor
sub
cmp
fidivs
inc
xchg
bswap
ret
dec
outsl
pop
negl
cmp
adc
test
addr16
mov
aad
push
add
and
repnz
fistl
and
js
dec
and
push
pushf
ja
xor
inc
fists
ljmp
mov
mov
in
into
sbb
movsl
fdivl
lds
push
scas
cwtl
pop
mov
not
and
jo
ds
in
aad
jns
sbb
xor
push
jge
hlt
or
dec
jno
fimull
or
cmp
fistpl
xor
pop
cmp
ss
inc
ret
aas
or
mov
cld
mov
inc
cmovo
js
gs
add
psadbw
pop
jae
push
popf
imul
mov
sbb
pop
xchg
sbb
fwait
lret
mov
icebp
cmpsb
xor
call
arpl
xor
movsl
sarl
cmp
adc
lahf
jno
jnp
es
roll
test
xor
data16
jmp
outsb
mov
push
loopne
dec
push
js
push
je
out
push
sahf
imul
sbb
and
fstpt
out
imul
test
addr16
insl
cmp
or
and
or
negb
inc
and
push
sahf
mov
repnz
in
bnd
out
icebp
out
pop
repz
into
adc
mov
call
std
xor
sbb
pop
mov
aas
mov
sbb
lods
xchg
push
fdivp
arpl
mov
xchg
popa
sti
fldenv
mov
pop
mov
push
dec
pop
cmp
fiadds
repz
sbb
cmp
adc
lahf
stc
in
mov
mov
push
or
fucomp
push
in
add
sbb
push
cs
xor
aaa
into
sub
imul
push
xor
fwait
popf
push
mov
ljmp
hlt
cmc
jmp
mov
push
dec
xchg
push
lcall
clc
std
or
bound
call
loope
scas
arpl
daa
ljmp
and
ljmp
ficompl
inc
mov
add
add
push
scas
push
cs
popa
mov
add
mov
inc
clc
xchg
mov
mov
scas
mov
es
jg
js
in
dec
pop
pop
push
inc
cwtl
les
rcrb
lahf
pop
lret
js
sbb
inc
and
jg
sbb
imul
or
mov
dec
iret
out
push
xchg
mov
inc
push
and
fldl
adc
and
mov
fstpt
xchg
out
popa
mov
push
pop
daa
sti
cmp
repz
fwait
aaa
stos
addr16
imulb
mov
pop
in
cmpsb
rcrl
dec
sub
cmp
rcll
ja
fmul
stos
lods
or
xchg
imul
cmp
mov
shll
cmp
mov
loop
jge
mov
js
sbb
outsb
sub
movsl
rcr
test
fmuls
push
fnstenv
loopne
xchg
sbb
sbb
adc
fdivrp
mov
in
lahf
stos
movsb
dec
sbb
cli
shl
rolb
pop
fstpl
sub
mov
mov
xchg
arpl
cmp
xor
xor
inc
stos
add
ja
sbb
xchg
mov
jbe
dec
mov
arpl
cs
faddl
ds
es
cmpsb
mov
rol
fucom
lahf
enter
xor
and
mov
pop
jnp
push
rcrb
pop
insb
fdiv
cs
cltd
into
popf
and
add
cld
dec
int
sub
jb
repnz
inc
sub
jbe
inc
mov
shlb
adc
gs
cmp
mov
test
mov
aad
adc
fstl
mov
xchg
xor
out
adc
fdivrs
aad
int3
fbld
test
jge
sahf
int
pop
mov
mov
stos
lret
mov
mov
insb
cwtl
cmp
jno
sub
jmp
adc
shlb
mov
test
push
inc
mov
sub
pushl
out
mov
xlat
mov
pop
ja
sub
jle
fiadds
iret
or
adc
adc
push
fimuls
and
les
nop
cmpsb
xchg
mov
jecxz
and
pushl
mov
jle
lret
scas
inc
inc
xor
pop
js
adc
lahf
in
lea
jp
cmp
ret
jmp
negb
lahf
test
xchg
add
xchg
xor
int
ljmp
outsb
pop
mov
inc
dec
fistl
and
aam
add
cwtl
add
lock
xchg
pop
fiadds
stos
data16
mov
adc
clc
cmp
lret
ja
sbb
iret
stos
fisubl
jb
imul
push
scas
mov
sbb
rolb
mov
fwait
std
jge
xchg
cli
out
jecxz
pop
lret
adc
lret
stos
es
outsl
mov
sbb
orb
xchg
mov
es
mov
gs
pop
rol
adc
arpl
mov
mov
movsb
sti
mov
mov
js
je
jp
mov
xchg
ret
push
sbb
and
xchg
push
dec
lock
jge
loop
adc
dec
or
add
lret
push
lods
mov
dec
repz
sub
iret
loopne
push
xchg
push
mov
lods
lret
aaa
aad
std
cmpsl
cld
imul
jb
cmpsl
leave
js
incb
xor
into
adc
and
movsb
enter
clc
imul
add
mov
sbb
mov
xchg
sti
pop
jno
sti
rcrb
mov
xchg
dec
fisttps
dec
push
mov
call
loopne
fimuls
mov
fidivs
jnp
pop
push
idivl
xor
aaa
xor
inc
leave
call
fcoms
push
jbe
cmp
addr16
ss
js
inc
push
repnz
cmpsl
fwait
in
mov
lock
xchg
pop
scas
rorb
shll
in
data16
pop
fists
adc
daa
out
sub
jg
sbb
push
mov
dec
frstor
in
mov
xchg
mov
xor
rorl
lcall
xchg
in
push
into
xor
movsb
xchg
push
mov
icebp
or
outsb
pop
stos
iret
cmp
push
movsb
movb
cmp
in
sbb
mov
jne
testb
cli
lret
loopne
or
int3
xchg
int
jnp
mov
and
jge
in
test
jbe
add
fs
jecxz
icebp
mov
pop
mov
pop
fldl
and
adc
xchg
shr
imul
push
and
xorl
ja
or
xchg
dec
dec
iret
lock
or
daa
mov
inc
int3
hlt
fisubrl
cltd
aaa
jbe
jge
mov
mov
push
xchg
gs
adc
inc
push
aad
iret
rcrl
stos
dec
and
test
cmp
loope
pushf
bound
ds
lret
xchg
lods
mov
stos
outsl
push
inc
inc
scas
xor
push
arpl
push
cmpsl
je
push
aam
cld
inc
icebp
pop
xchg
sub
aas
or
jmp
xor
shrl
xchg
dec
push
ret
loopne
dec
fldt
fsubl
outsb
sub
fiaddl
fistpl
dec
mov
push
addr16
or
dec
cmp
vpshab
stos
jge
mov
test
lods
prefetcht1
inc
mov
subl
xor
lcall
cmp
shll
insb
push
mov
pop
or
jl
mov
inc
movsb
shlb
xchg
and
fcmove
adcb
adc
out
xor
fisubl
mov
add
leave
pop
cmp
lock
pop
gs
inc
inc
or
rcll
mov
sti
scas
adc
mov
push
pop
cmp
repz
xor
lock
outsb
xchg
mov
xchg
adc
and
pop
pusha
std
ret
fcomi
mov
ret
pop
bound
pushf
scas
jne
xor
adc
xor
fs
mov
stos
mov
and
jl
pop
xchg
lods
add
or
xlat
in
lahf
ds
pop
jmp
add
ficomps
jns
add
fsubs
pop
aad
addr16
sub
jb
adc
jno
inc
add
js
xchg
jg
fistps
and
cmp
inc
sahf
xchg
test
leave
imul
mov
dec
mov
frstor
cmc
inc
scas
dec
mov
push
sarl
lret
cmpsb
nop
stos
mov
xchg
loop
adc
sti
jmp
dec
dec
out
fimuls
pushf
cld
mov
sbb
mov
aas
jno
icebp
test
and
push
add
cmp
in
dec
insb
push
scas
xchg
xchg
insl
lock
fwait
ds
std
in
mov
pop
fsubl
adc
stos
pop
sti
cmp
jbe
adc
movsl
out
pop
push
fsubr
repz
mov
jnp
xchg
mov
stos
rorl
inc
adc
push
adc
adc
fiadds
cmp
hlt
jae
mov
mov
movsb
rorb
and
sub
sarl
cwtl
daa
and
mov
mov
push
out
imul
popa
sub
inc
sub
pop
pusha
or
cmpsl
xchg
and
mov
push
xor
in
xchg
jmp
mov
cmc
outsl
push
sbb
ljmp
push
adcb
out
jge
sub
sbb
add
mov
push
mov
std
cmpsl
pop
add
sub
test
sbb
shl
mov
mov
mov
pop
cmc
and
adc
mov
and
jecxz
dec
sbb
insl
sbb
je
adc
subl
push
mov
movl
or
addr16
lret
sub
and
sbb
in
xchg
fstpl
dec
push
aad
push
mov
aas
aaa
dec
adc
bnd
and
adc
cli
gs
or
dec
data16
repnz
fucompp
sbbl
mov
dec
pusha
mov
popa
mov
sti
inc
xchg
cmpsb
in
pushf
test
pop
cmp
inc
fisubrl
std
cmp
adc
xor
mov
xlat
scas
pop
jae
jno
jbe
imull
cltd
sbb
adc
decl
jnp
pop
test
xor
jl
xchg
popa
lea
or
xchg
xchg
ret
es
xchg
ljmp
xor
int
cmp
xchg
cmp
push
mov
call
movsl
sti
lret
ror
add
fs
jg
out
pusha
sub
cli
in
aaa
fistps
jecxz
dec
cmc
inc
int
test
cmp
repnz
inc
dec
repz
xchg
mov
outsb
scas
ds
xchg
push
jmp
fnsave
adc
add
pop
cs
mov
xchg
mov
frstor
and
mov
add
fmull
lds
cmp
popa
sti
js
pop
repz
mov
stc
sbbl
filds
iret
inc
sbb
decb
fcmovnbe
add
pop
std
mov
decl
and
add
repnz
sub
pop
jo
orb
idivl
mov
lea
mov
aaa
dec
mov
cmpsl
loop
and
pop
std
jge
pop
jb
push
ret
sub
fisttpl
in
jge
sahf
jecxz
call
sub
xor
roll
sbb
sarb
pop
popa
pop
inc
iretw
cmpsl
xchg
push
sub
jge
fmul
adc
xor
in
scas
dec
push
shlb
adc
je
jne
cmpsl
les
jb
jne
inc
mov
call
jmp
mov
and
jae
pop
data16
pop
mov
pop
int3
or
push
xor
adc
rolb
ds
xor
pop
cmp
clc
cli
pop
mov
push
xor
push
dec
mov
adc
arpl
test
lret
inc
shr
add
es
jne
test
cmp
and
inc
push
call
dec
fcomps
cmp
xor
fimuls
cs
mov
adc
lods
lock
or
xor
dec
sarb
pop
jl
add
pop
pmaxsw
loopne
mov
jno
ficoms
pushf
push
les
adc
neg
es
add
add
sahf
mov
mov
pop
andb
faddl
jl
xchg
outsl
xchg
insl
cs
rol
push
sarl
xchg
test
inc
out
adc
stos
aaa
push
movsl
pop
outsl
mov
dec
add
cwtl
shrb
mov
outsl
and
fxch
inc
dec
sbb
mov
sbbl
dec
pop
lret
mov
aas
bound
adc
lock
xchg
test
movsl
cmp
cmp
jae
jnp
lret
sub
into
aam
out
push
in
sub
insl
pop
jecxz
and
fsubr
lods
sbbl
xchg
push
movsb
dec
call
mov
push
jno
jmp
push
pop
mov
sbb
add
out
mov
mov
or
dec
cmp
jge
add
mov
mov
xlat
xchg
lea
daa
pop
and
adc
int3
lds
int
adc
in
mov
mov
aam
mov
xchg
cmpsl
dec
lret
stos
fldenv
jge
mov
cmp
or
scas
cli
push
iret
jne
xor
jnp
test
xor
adc
sbb
pop
xchg
test
je
pop
aas
inc
je
hlt
and
xchg
adc
movsl
cld
add
pop
dec
cmpsb
adc
pop
aaa
stc
mov
cs
push
or
and
out
and
ljmp
dec
sub
inc
xchg
push
and
pop
cmpsl
mov
push
dec
mov
and
push
inc
xchg
adc
icebp
idivl
adc
cld
pop
std
sub
xchg
sub
and
mov
adc
pushl
xor
loopne
mov
xlat
scas
inc
jecxz
push
dec
jmp
jge
fwait
mov
aad
jl
sub
shlb
cld
mov
stc
jo
stos
mov
push
dec
pushf
pop
stos
out
std
xchg
xor
adc
or
or
js
lahf
lods
imul
ret
lods
fisubl
lods
or
decl
or
dec
mov
dec
nop
or
out
incb
push
mov
cs
lds
mov
jmp
daa
lret
fnstenv
call
dec
add
and
lea
ds
push
repnz
and
inc
lret
jecxz
or
aaa
ss
int
nop
pop
push
pop
pop
pop
iret
mov
pop
aad
movsl
cld
xchg
test
add
dec
orb
jbe
movsl
push
or
inc
dec
cmp
add
adc
scas
ss
mov
mov
ljmp
movsl
loop
popf
dec
punpcklwd
sbb
imul
mov
cld
je
pop
inc
pop
or
lds
enter
lds
test
push
or
push
inc
and
lock
pop
jns
stos
loop
popf
xchg
insb
xchg
fwait
lret
roll
sub
mov
in
sub
xchg
xchg
stc
ret
inc
push
mov
les
movsl
cs
push
mov
scas
fs
adc
sbb
push
fsubrl
inc
pop
sbb
das
jb
mov
cld
outsb
inc
xchg
and
pop
and
xchg
and
in
mov
loope
jmp
xor
inc
aaa
sbb
mov
jg
das
hlt
pop
aaa
iret
stos
and
pop
or
sar
pop
push
mov
outsl
ljmp
mov
jbe
ss
out
jns
repnz
stos
jbe
aas
mov
ljmp
loop
mov
jle
xor
xor
cmp
jg
add
dec
add
fcmovnu
sbb
or
push
clc
adc
push
cwtl
pop
ss
fcmovnbe
imul
stos
or
or
shrb
mov
and
lds
pop
adc
fimull
lret
jb
inc
shll
cmp
jg
and
ss
out
cmp
scas
stos
jp
push
mov
xor
mov
lret
jno
push
fbstp
lock
xchg
out
and
pop
in
cmp
sub
int3
ds
lods
push
out
mov
or
mov
jmp
or
mov
jmp
and
cmpsb
push
mull
aad
lea
add
ja
mov
sub
dec
lea
loope
xor
push
or
fistpl
in
adc
adc
test
dec
ret
pop
pop
lahf
cmp
sbb
pop
sbb
lods
cmc
arpl
cmp
cmc
mov
cmp
mov
xlat
xor
scas
xchg
push
or
xchg
xchg
sar
cltd
aad
andb
cmpsl
add
pop
sub
inc
int
push
add
in
xchg
repnz
mov
mov
fdivs
pushl
leave
or
sti
push
add
xchg
lcall
add
push
lock
cmp
pusha
mov
dec
cmc
arpl
inc
loopne
mov
xchg
jmp
dec
pop
sbb
mov
insb
push
jo
cwtl
xchg
mov
aas
sahf
xchg
adc
push
or
and
jg
mov
clc
aas
ja
dec
pop
icebp
fwait
cmp
outsl
std
xchg
stc
jp
enter
dec
add
mov
mov
push
xchg
pop
jge
movsl
inc
sub
and
mov
mov
inc
lea
push
mov
lret
aaa
aad
sbb
jnp
stc
aam
add
lods
sbb
and
add
hlt
xor
faddl
fs
cmpsb
dec
leave
xchg
mov
jle
arpl
lcall
cmpsb
pop
xchg
or
pop
adc
xor
sbb
cwtl
sub
pop
mov
inc
cli
mov
pop
sbb
sbb
outsb
xor
mov
mov
mov
aad
test
or
insl
scas
pop
out
adc
arpl
add
inc
jb
xchg
and
lret
fs
leave
shr
cmp
pop
inc
mov
leave
pop
add
push
nop
pop
add
inc
loopne
es
movsb
and
sbb
cs
push
pop
dec
insb
rorb
xchg
push
ror
lret
xor
cmp
xor
in
imul
adc
hlt
sub
std
lock
insb
mov
shlb
mov
lret
clc
xor
inc
lret
js
jbe
xchg
nop
neg
loop
gs
or
sbb
pop
imul
sub
adc
sub
loopne
xlat
jae
sub
fcompl
sbb
cmpsl
pop
jecxz
jno
lcall
add
lods
mov
ffreep
jmp
add
and
push
mov
mov
out
aaa
pop
lahf
push
add
lock
sahf
decl
jmp
jmp
rorl
adcl
jp
sahf
xor
dec
sub
imul
xor
push
cmpsl
mov
negb
call
daa
push
test
mov
mov
push
xor
jnp
dec
leave
mov
mov
and
mov
or
mov
rcrb
adc
pop
add
lock
ss
test
mov
addb
aad
xor
sub
xchg
icebp
dec
push
cmpsl
add
and
sub
insb
dec
mov
shlb
mov
icebp
imul
pop
dec
sahf
mov
lret
stc
mov
shrl
jnp
mov
jg
insl
jb
mov
nop
stos
and
andb
mov
dec
sbbl
vpsrad
ret
call
ret
xchg
xchg
pusha
jmp
negb
pop
add
sbb
jg
sub
aas
popf
mov
pop
mov
aas
xor
popl
xchg
fildl
inc
ss
jmp
add
push
test
ja
xor
lret
mov
fdivs
nop
xorl
or
fldl
pushf
dec
mov
es
dec
in
pop
imul
sub
sub
js
hlt
fiaddl
jb
mov
jge
add
int3
pop
add
mov
loop
enter
stos
and
mov
test
cmpsb
push
inc
pop
dec
testl
jl
stc
bound
mov
inc
mov
scas
int3
loope
cmpsb
cli
imul
addl
mov
lods
mov
jno
cli
jecxz
pop
xor
das
xchg
fs
call
jo
movd
aad
xchg
mov
hlt
icebp
push
aam
mov
inc
inc
loop
lds
mov
pop
adc
pop
dec
mov
fisttpll
pop
mov
hlt
push
xchg
jmp
das
sub
jmp
loop
mov
add
fwait
leave
push
push
mov
in
aas
and
add
add
jns
dec
xchg
mov
pop
push
mov
out
icebp
xor
sti
pop
pusha
movsl
notl
sub
jecxz
roll
lahf
dec
dec
mov
xchg
sub
loop
cs
xchg
mov
cwtl
adc
ret
mov
mov
jg
mov
fwait
pusha
push
mov
pop
sub
sub
insb
jmp
mov
bound
inc
sub
stc
mov
popf
pop
sti
xchg
orb
imul
push
cmp
cmp
sbb
cmpsb
ljmp
inc
push
es
popa
int
rclb
adc
cmpsl
aaa
pop
push
sub
jecxz
movsb
pop
sbb
stc
xor
icebp
test
inc
mov
pop
fdivp
cmpsb
rol
pushf
pop
add
sbbl
cltd
decb
jecxz
xchg
fcompl
movb
or
push
sub
jnp
xor
loop
xor
lret
dec
xor
sbb
lock
xor
daa
scas
pop
push
mov
xchg
out
inc
adc
ja
dec
out
arpl
pop
jbe
outsb
adc
es
inc
jl
pusha
jne
sub
jmp
jnp
in
push
in
out
push
push
and
aaa
loope
adc
and
and
mov
mov
xchg
xor
adc
or
or
inc
cld
faddl
xor
mov
mov
test
aaa
cmpsb
sbbl
xchg
jg
sti
xchg
bound
scas
inc
jae
add
ret
mov
dec
sti
adc
das
xchg
in
mov
xor
pop
paddsb
movsl
push
in
lret
dec
ret
les
adc
adc
out
sbb
add
cmp
sbb
mov
out
mov
repnz
xchg
fadds
jmp
insb
adc
test
cmp
repz
xchg
inc
call
xchg
cwtl
into
std
divl
cmpsl
jp
or
stos
ret
rcll
mov
inc
or
push
adc
cmp
ss
idivl
shlb
test
fmuls
pop
jae
jno
scas
mov
dec
ljmp
xchg
rclb
xchg
enter
pushl
subb
adc
jle
dec
int3
pop
loope
dec
lods
xchg
outsb
or
mov
cli
xchg
loope
loopne
mov
fs
mov
adc
pop
or
ss
mov
ret
inc
jle
mov
add
push
orb
sbb
repnz
mov
rcr
and
and
orl
mov
test
and
decb
mov
lret
shrb
xchg
das
fwait
pusha
or
data16
loopne
xor
cmp
in
adc
aas
mov
notb
mov
and
loop
jne
cmp
adc
and
stos
xlat
sub
pop
shlb
push
fisttpl
mov
sub
pop
movsb
test
nop
pop
dec
sbbl
dec
pop
lret
cmp
fisubrs
sbb
cmc
pop
pop
nop
inc
or
loope
movsl
dec
sub
adc
mov
xchg
lret
jb
xchg
hlt
orl
pop
lahf
decb
pop
inc
insb
pop
lods
repnz
add
int3
mov
inc
mov
dec
mov
or
jp
adc
into
fwait
jo
inc
jg
mov
test
mov
pusha
stc
imulb
jle
dec
or
mov
mov
inc
jae
cmc
ss
aam
inc
mov
in
jl
push
rcr
jge
and
mov
mov
mov
pop
mov
mov
push
and
test
shr
cmp
lods
jno
push
adcl
movsl
mov
lret
jle
aas
ret
ljmp
sbb
inc
lods
mov
out
hlt
dec
push
pushl
and
lret
lods
sbb
adc
aad
mov
add
ror
mov
mov
fcmovu
loopne
mov
xor
mov
pop
mov
or
test
and
ss
lea
adc
adc
loope
xor
mov
mov
cmp
and
aas
jl
xchg
fwait
push
ss
lock
ja
fiaddl
add
adc
arpl
push
inc
fisttpll
iret
or
adc
cmp
mov
jns
aaa
cmpsb
jge
loope
mov
lret
and
push
xor
adc
mov
or
jecxz
jge
roll
mov
ja
loop
and
cmpsl
inc
push
sbb
jae
adc
imul
cmp
call
imul
das
aas
xchg
jno
mov
aam
add
dec
popf
nop
xchg
inc
popf
test
fsubp
cltd
mov
out
mov
outsb
xor
jno
scas
push
adc
mov
jb
gs
das
movsl
fstpl
mov
ss
je
shrb
xchg
adc
mov
mov
inc
test
sub
flds
fbstp
fsubrl
or
push
push
std
xchg
jae
and
daa
pop
in
push
dec
push
enter
dec
outsb
jns
incb
cmp
out
jns
xchg
push
push
inc
add
fcmovne
and
xor
pop
sbb
pop
push
jo
cmp
lret
push
pop
outsb
xor
sub
cmp
xchg
dec
cld
fiadds
pop
pop
fiaddl
cmc
xchg
out
mov
adc
mov
mov
lahf
push
andb
test
mov
jp
and
sub
ja
popa
mov
cld
sub
jne
fcoml
fldcw
and
dec
mov
pop
mov
xor
mov
pop
imul
pop
mov
xchg
scas
mov
dec
dec
outsb
adc
and
dec
lods
cmpsl
sub
add
push
dec
mov
rcrl
mov
orl
popf
aam
cwtl
cmpsb
pusha
outsl
sub
scas
jbe
hlt
xchg
fdivl
into
inc
insl
push
mov
sub
inc
xor
mov
and
cmp
scas
roll
je
inc
call
or
les
sub
inc
dec
push
add
adc
int3
lods
popf
test
ljmp
mov
test
ficomps
lock
rcrl
sub
xor
int3
pop
adc
les
pop
movsl
dec
sub
loopne
mov
call
rcll
lahf
shr
jle
int3
dec
push
jbe
out
mov
or
add
fisubs
ret
jae
mov
stc
push
adc
ja
mov
int3
mov
testl
add
mov
inc
out
mov
int
push
mov
rorl
test
aad
je
xchg
lds
movsl
in
jno
xchg
xchg
in
lock
add
stc
mov
aad
mov
cmp
imul
cmpsb
int3
cld
iret
andb
stos
std
sahf
jle
in
jns
jns
cmp
sahf
jbe
push
jno
shlb
es
lock
jmp
xchg
jle
mov
ljmp
jp
xor
aaa
mov
sbb
xchg
xchg
mov
mov
test
mov
into
int3
call
xchg
inc
ret
jnp
test
es
in
mov
cwtl
push
fcomps
loopne,pn
cmc
sbb
inc
cmpsb
xor
pushf
jb
jnp
pop
bound
adc
mov
scas
inc
es
xchg
adc
push
sub
cmp
jp
mov
cltd
adc
pop
or
sarb
jnp
pop
adc
inc
jo
sub
sub
cmp
jns
fbld
std
pusha
test
enter
lods
scas
xchg
clc
pusha
ljmp
lods
scas
dec
jae
sbb
cmpsb
mov
roll
xlat
mov
push
cmpsb
cmp
pop
lock
test
pusha
repz
fdivr
test
pop
dec
insb
es
mov
in
lods
jp
xchg
and
stos
push
jae
sub
call
out
push
outsb
das
jl
sbb
lds
and
in
and
das
xchg
cli
or
loope
insb
dec
aas
test
jecxz
lods
bound
loope
loope
or
icebp
sbb
xor
test
push
mov
lret
orb
outsb
fcoms
mov
adc
jne
push
loopne
cltd
imul
push
inc
pop
fucomi
cmc
sub
loop
repz
push
fstpt
mov
int3
xchg
and
lods
repnz
inc
std
cmp
rcrb
testb
and
dec
loope
xchg
jae
mov
push
fwait
adc
rcrl
push
popf
mov
nop
fsubrs
pushf
xchg
lods
pop
cmp
mov
dec
enter
cltd
icebp
out
mov
push
add
call
xchg
stc
mov
pusha
xor
lcall
loopne
fwait
arpl
push
or
jl
push
leave
les
pop
fidivrl
js
ja
jb
jmp
js
cmp
addr16
enter
mov
popf
pushf
mov
push
subb
jle
mov
das
mov
mov
mov
stos
mov
inc
aad
shrl
int3
and
aam
mov
ljmp
test
dec
idivl
lds
sub
cmpsb
dec
mov
outsb
cmp
cmp
mov
inc
xchg
jecxz
scas
xor
jecxz
mov
adc
insl
faddl
fnsave
repz
push
pushf
mov
sbb
jge
je
cmp
cwtl
or
mov
daa
and
in
cli
cmp
lock
shrl
lock
xchg
jnp
cmp
punpckhwd
ret
pop
dec
out
jo
int
ret
fdivr
jb
cmpsl
movsb
or
inc
lcall
cmp
std
xchg
xrelease
aad
pop
incl
add
lds
dec
shll
mov
stos
cmp
in
xchg
and
fisubs
icebp
arpl
and
iret
mov
push
and
cs
adc
out
or
roll
orl
aaa
cmc
xchg
xchg
popf
or
loope
fimuls
shrl
add
xor
or
js
jl
outsl
pop
ljmp
add
hlt
pop
mov
test
xchg
popf
mov
loope
and
mov
mov
lret
fisubrs
insb
aad
push
das
js
dec
sar
fisttps
pop
cmp
pop
sub
xor
push
imull
ficoml
leave
jns
and
push
test
jp
and
jmp
mov
mov
mov
ds
outsb
int3
pop
or
sbb
scas
push
out
int
sub
pop
push
dec
adc
stc
dec
pusha
xlat
mov
in
stc
xor
and
ds
mov
dec
mov
inc
or
adc
stos
dec
jbe
and
jge
pop
xor
dec
clc
and
dec
insb
mov
adc
sbb
test
xchg
sbb
jbe
or
jge
cs
or
xlat
or
cmpsl
in
inc
add
repnz
pop
push
pop
packssdw
push
add
mov
pop
pop
mov
sub
out
in
fistpll
xor
icebp
xchg
ljmp
lcall
dec
mov
pop
mov
call
pushl
orl
in
ds
pop
fwait
dec
mov
xor
mov
rcl
pop
mov
pop
bound
fs
inc
sbb
jae
ror
mov
insl
sar
lcall
dec
pop
aas
xchg
jbe
or
adc
lea
cmp
outsb
gs
int3
shl
jecxz
dec
sub
jns
data16
test
sub
xorb
sub
scas
pop
jp
xor
xchg
adc
cmp
cmp
gs
ss
or
arpl
aaa
sets
nop
xchg
or
cmc
dec
jbe
dec
addr16
frstor
je
hlt
idivl
sub
mulb
popf
jge
hlt
dec
sub
or
mov
lds
jo
xchg
dec
or
mov
dec
mov
mov
mov
sbb
dec
xchg
shll
cmpsb
out
je
iret
lock
icebp
xor
mov
and
push
pop
dec
ss
pop
stos
outsl
push
lahf
orb
fmull
or
scas
mov
jns
cltd
lahf
xchg
das
js
jl
pop
out
mov
out
pop
sub
inc
sub
ret
push
loopne
in
lret
or
mov
cmc
jecxz
bound
jle
insl
mov
cmp
dec
sub
cmp
mov
leave
mov
repz
xor
mov
outsl
mov
lock
push
mov
and
les
xlat
xorl
add
cs
arpl
xchg
xchg
mov
or
and
xchg
mov
arpl
jnp
mov
pop
push
popa
add
mov
pushf
in
jmp
pop
cmp
cli
mov
jge
imul
daa
push
lahf
push
out
push
pop
int3
mov
movsb
xor
add
xchg
cmp
pop
mov
mov
inc
scas
sub
filds
aaa
xor
lcall
lahf
sub
xor
inc
imul
mov
xchg
xor
lcall
adc
std
or
mov
adcl
test
xchg
mov
jns
push
mov
repz
bound
xchg
push
adc
fstpt
jecxz
adc
add
push
add
cmp
cmp
xor
addr16
add
mov
test
addr16
jbe
mov
add
or
adc
inc
in
xchg
shlb
lea
sahf
movsb
sbbl
ds
sub
jecxz
repz
mov
adc
frstor
sti
sbb
cltd
ljmp
pop
rcr
jbe
out
push
pop
in
xchg
sub
mov
call
mov
mov
leave
pop
loop
std
and
dec
jmp
lea
enter
fxtract
mov
sub
pop
js
pop
or
dec
pop
iret
shll
pop
mov
sub
dec
ret
cmp
mov
lcall
or
push
pusha
xchg
push
jae
inc
pop
ss
lret
subb
inc
jp
pusha
jle
pop
push
aas
push
inc
jne
repnz
aas
imul
mov
jne
pop
mov
xchg
mov
pusha
cmpb
cld
add
cmp
mov
in
mov
aam
cwtl
cld
push
sbb
repnz
data16
ljmp
rcr
add
shlb
sbb
pop
xlat
inc
pop
incl
mov
roll
mov
mov
cmpsb
xchg
or
test
pop
or
pop
and
cmpsl
xchg
mov
jmp
stos
sub
das
movsl
sbb
inc
mov
add
popa
xchg
dec
jnp
test
aaa
sbb
lods
test
push
rcr
cmpsb
mov
scas
dec
mov
sub
cmp
popf
andb
xchg
and
cmp
mov
ret
cld
sub
movsl
fucomip
pushf
add
enter
sbb
mov
notb
lahf
xchg
test
pop
push
lock
jne
fcomps
sar
aas
out
ja
sbb
mov
sub
fwait
sbb
mov
inc
lods
sbb
and
push
xor
aas
jbe
cmpsl
sub
xchg
cmp
ret
pop
movsb
xchg
jo
sbb
je
inc
mov
mov
adc
in
cli
in
mov
int
fwait
adc
int
pop
lret
xchg
roll
sbb
roll
lcall
aaa
pop
lret
sahf
jnp
aam
jns
mov
arpl
lret
adc
cltd
loope
mov
pop
mov
ret
jbe
les
adc
or
and
test
mov
mov
js
es
bnd
and
dec
xor
cmp
outsb
mov
stos
mov
int
lock
pop
xchg
fidivl
and
adc
insb
popf
rcrb
mov
pop
ds
popl
mov
dec
xchg
cmp
xchg
push
pop
flds
push
and
mov
cmp
fwait
and
iret
mov
sbb
or
xor
es
jno
ret
pop
in
xchg
dec
sub
fidivs
nop
cli
xchg
pop
add
push
push
aam
scas
es
repz
ret
sub
dec
scas
pop
inc
push
mov
and
cmc
test
insl
gs
push
fcomp
pop
xchg
adc
call
push
sbb
das
sbb
sub
js
pop
repnz
jge
adc
negl
iret
hlt
jnp
cmp
mov
jnp
adc
xchg
add
and
and
jge
jl
fs
fildll
mov
jnp
xchg
xor
inc
jg
outsb
cmp
stos
arpl
xchg
cmp
and
sahf
mov
aam
push
in
mov
xchg
jne
int3
aam
mov
cmp
jae
fs
aad
jmp
mov
fsubrl
arpl
or
popa
bswap
sbb
inc
mov
and
mov
push
or
push
nop
daa
dec
pop
jbe
and
std
cmp
inc
loope
push
arpl
mov
into
add
orb
mov
stos
jle
fnsave
dec
stc
pushf
push
stos
lods
add
jne
xchg
rorb
pop
inc
jl
out
pop
adc
sub
pop
cld
and
gs
cmp
cmp
ret
adc
lds
je
sub
jae
movsl
popf
rorb
std
lret
lock
ficoms
subb
leave
mov
in
jae
lods
jp
mov
xchg
out
sahf
mov
inc
call
adc
repnz
and
ror
push
bound
sub
cs
adc
add
aam
mov
sti
or
loope
jnp
mov
loopne
push
fs
into
ret
dec
inc
clc
pop
sbb
hlt
ficompl
dec
mov
adcb
pop
xchg
pop
test
nop
jno
add
lea
and
xchg
cmp
subl
call
dec
ljmp
iret
into
idivb
mov
shrb
stos
bound
dec
es
fsubrs
sahf
subb
jbe
rorl
dec
jmp
in
stos
adc
sub
mov
out
repz
pop
pushf
mov
js
jge
pop
cwtl
rolb
cmp
jbe
scas
add
daa
fnstsw
inc
mov
jmp
pop
shlb
jo
lcall
mov
lea
sbb
mov
arpl
popl
insb
pop
xor
daa
pop
test
repz
or
dec
mov
dec
sbb
insb
dec
and
mov
inc
push
and
in
dec
sub
test
inc
adc
mov
and
sbb
sbb
notl
mov
fisttpll
add
sbb
jb
mov
and
dec
jb
add
outsb
add
inc
pop
add
jl
mov
mov
mov
movsl
bound
jnp
or
notb
fnstcw
orb
adc
ret
inc
inc
fists
xchg
mov
stc
scas
xchg
add
rorl
mov
cmp
push
pop
and
dec
pop
rcl
or
mov
psrad
add
fimuls
add
pop
ret
add
jo
mul
dec
aam
call
xchg
cmpsl
insl
push
divl
mov
les
lds
cmp
or
popa
add
xchg
sti
filds
sti
jecxz
imul
xchg
cmpsb
xchg
in
das
fcmovnb
jge
mov
les
iret
insb
loope
inc
push
dec
mov
inc
xchg
mov
int3
loopne
je
subl
jno
dec
lea
sub
pop
mov
push
xor
pop
mov
pop
daa
mov
hlt
mov
int
and
rolb
push
dec
jnp
xchg
xor
jno
cmp
shld
dec
int3
pop
jmp
in
xor
mov
dec
addr16
dec
sbb
fildl
fisttps
or
ss
in
in
mov
pop
cmp
inc
jne
push
mov
pop
sub
push
lods
loop
xchg
mov
xlat
jo
cmp
jle
add
xchg
adc
mov
fidivrl
xor
pop
aad
stc
xor
xchg
push
int3
xor
scas
push
jmp
pop
sti
or
xor
jl
stos
push
fidivs
xor
and
xchg
jl
push
inc
mov
lods
aas
mov
inc
in
shr
push
fiaddl
mov
adc
repz
push
inc
push
les
mov
fdivrs
fmulp
sahf
xor
push
xor
in
sbb
cld
push
push
adc
std
xchg
add
cmp
cmp
imul
add
sbb
js
dec
stos
movsl
xorl
fistps
mov
pop
dec
inc
cmc
push
xor
sbb
ss
cmp
icebp
pop
fcmovne
inc
push
jecxz
push
into
push
out
push
pop
sub
push
in
testb
sbb
pop
inc
or
pop
imul
icebp
dec
inc
scas
mov
jle
stos
and
mov
fs
lock
outsl
in
dec
pop
aam
push
and
ljmp
inc
or
cmpb
pop
jmp
xchg
and
ficoml
jo
out
stos
in
inc
cmpsb
pop
jle
mov
subl
sbb
sub
shrb
cmpsb
pop
add
lea
outsb
mov
pusha
aaa
lea
cs
and
pop
movsb
icebp
cmp
and
das
or
inc
nop
push
push
in
inc
xchg
jne
bnd
testl
lds
push
adc
mov
cli
xchg
scas
mov
inc
mov
iret
mov
ss
js
in
test
sarl
fmull
pop
jg
xchg
ret
pop
jnp
lea
fiadds
pop
dec
dec
insb
and
out
dec
mov
and
fsubrs
mov
sub
lods
xor
dec
xlat
pop
ljmp
lock
xchg
sbb
jmp
ds
sbb
cld
mov
cmp
sbbb
push
loopne
cmc
cmpsl
jbe
pop
cs
push
mov
add
xchg
cmp
fcmovbe
testb
hlt
push
movsb
stos
and
shll
popa
or
lahf
sub
ret
repnz
mov
jnp
out
inc
fstpl
out
xor
es
icebp
lods
sbb
ds
mulb
adc
sub
daa
mov
loopne
je
sbb
or
dec
out
adc
rcrl
xchg
out
fstps
aaa
jbe
xor
mov
and
mov
mov
pop
jo
inc
cli
test
push
ss
imul
pop
aam
mov
jl
push
hlt
add
xchg
imull
push
fucomi
mov
or
ficomps
jno
sub
and
xchg
jbe
pop
movsb
add
cld
push
ja
or
or
jge
das
int
adc
jae
sub
sbb
push
pop
loopne
mov
call
test
loop
cli
xchg
mov
nop
add
addl
pop
jnp
and
nop
jecxz
jne
xorl
xchg
test
dec
sub
xor
mov
push
movsl
and
jno
xchg
or
fsubrs
fcmovnb
es
mov
lock
sbb
stc
test
callw
sbb
insb
cwtl
out
adc
mov
or
outsb
loop
insb
jnp
arpl
enter
ja
in
or
pop
cmpb
in
mov
scas
fwait
mov
sub
outsb
nop
mov
cmovnp
arpl
imul
stc
lods
pop
xor
flds
int3
stos
pop
mov
nop
test
sbb
pushf
outsb
jno
popf
or
loop
push
mov
fidivl
sbb
pop
aas
jl
fldenv
pusha
popf
lret
xchg
add
lods
loop
in
in
out
push
idivb
xchg
lcall
cmp
out
scas
push
subl
cmpl
fldenv
jo
cmp
push
jo
cmp
je
mov
mov
jae
push
sub
in
ljmp
loop
arpl
into
stos
stos
nop
sti
pushf
sbb
add
in
movsl
mov
add
enter
clc
ret
add
dec
aaa
dec
pop
cmpsb
sahf
adc
xchg
push
pop
lret
nop
sarb
gs
mov
or
aaa
loope
sub
add
push
and
es
mov
loopne
mov
aad
addr16
and
gs
or
mov
bound
lahf
mov
xchg
lret
fwait
enter
lcall
shl
outsl
subb
and
repz
out
js
das
xchg
push
or
in
shrl
push
ret
jbe,pt
fnstcw
and
iret
sbb
mov
stos
shl
enter
jmp
out
push
test
clc
insb
cmp
or
or
inc
std
out
sub
insl
mov
mov
push
adc
lds
popa
xchg
jns
xchg
pop
sub
inc
mov
sub
call
repnz
add
jge
pop
cmc
mov
mov
sbb
mov
dec
mov
repz
cld
xchg
int3
pop
mov
and
repnz
gs
and
addl
jns
inc
cmp
mov
hlt
fisubl
mov
scas
push
jno
pushf
enter
iret
aad
outsl
pop
in
pop
mov
mov
xor
xchg
sub
xor
repz
jmp
leave
mov
imul
jo
xlat
ret
mov
bound
jle
pop
imul
iret
int
bound
imul
mov
rorl
pusha
mov
sbb
cli
pop
sti
push
pop
xchg
jo
fistpl
inc
cld
lods
sbb
sbb
mov
cmp
loop
or
mov
cmp
test
sbb
insl
addr16
xchg
push
jbe
outsb
xchg
arpl
fmull
jb
stc
cmp
add
das
cmpsl
inc
cmp
sub
ja
addr16
mov
xchg
inc
sub
sbb
sub
and
repz
sbb
mov
mov
lea
inc
mov
stos
xchg
pop
movsl
inc
adc
xor
and
gs
xorl
outsl
sbb
ficoms
cmp
sub
xchg
ds
aaa
adc
sbb
mov
imul
jmp
ss
cmpsb
mov
cmp
sti
mov
dec
inc
lret
cmpsb
arpl
mov
cmp
sbb
jecxz
sbb
sbb
xor
addl
jae
sbb
in
and
sar
adc
lret
in
pop
popaw
sub
cltd
jno
sub
mov
and
scas
outsb
inc
add
stos
sarl
inc
pop
inc
ret
mov
add
fiadds
push
js
rcll
adc
sbbl
mov
mov
jnp
orb
pop
icebp
std
test
mov
mov
adc
and
je,pt
sbb
push
leave
cltd
push
aaa
cmp
leave
repz
ret
inc
mov
jne
jmp
sar
xchg
mov
dec
mov
mov
shrb
add
jns
repz
pop
inc
add
insl
sub
ret
insl
movsb
in
adc
mov
outsb
int
xor
xor
lods
mov
jmp
pop
xor
insb
cmpsl
nop
sahf
push
or
es
ja
mov
mov
mov
mov
repz
pushf
mov
jmp
xchg
inc
cmp
stc
jnp
xor
xor
mov
or
jle
cmp
pop
fs
push
xor
mov
xchg
repz
sahf
or
push
lret
fsubrs
dec
xchg
and
das
ljmp
ror
push
mov
cmp
push
aad
inc
hlt
mov
jp
mov
pusha
in
cmc
and
ficompl
ret
sub
mov
adc
loopne
or
std
ficomps
aaa
adc
push
ss
iret
enter
into
pop
movsl
sahf
fidivrs
mov
orl
into
in
push
mov
adc
pop
icebp
or
jecxz
lods
sti
enter
sahf
insb
shll
push
cs
pop
inc
leave
ret
or
xor
pusha
adc
jge
in
add
sbb
cs
sbb
add
jno
stos
dec
popa
scas
or
ror
sbb
clc
fwait
loopne
xchg
sbb
sub
popf
xchg
jmp
dec
cmpsl
sti
dec
sbb
add
cli
xorb
pusha
bound
mov
sbb
sub
cmc
mov
lahf
inc
xor
cmpb
sub
and
push
es
push
sbb
ret
jns
shll
jl
add
ret
xor
or
push
xorl
dec
inc
hlt
jle
cmpsl
aas
mov
bound
scas
movsb
adc
loop
cmpsb
inc
sahf
inc
jmp
in
xor
jmp
cs
scas
cmpsl
nop
lret
cmpl
jle
xor
xor
xlat
mov
add
add
incb
jno
fsubrs
out
movsb
cmp
sbb
repz
inc
cmc
insl
xlat
inc
testl
push
js
stos
cmp
pop
xchg
sar
arpl
xlat
loop
imul
adc
shll
jl
mov
mov
adc
std
cmp
mov
les
xchg
in
aad
push
add
data16
mov
sub
int
mov
dec
in
add
fs
scas
add
call
fstl
ljmp
sbb
pop
rclb
pop
fs
mov
adc
shll
inc
xchg
out
out
btc
xchg
fildl
imul
ret
adc
dec
push
lock
mov
fnstcw
pop
filds
adc
jle
jecxz
inc
add
in
xchg
and
vpunpcklqdq
orb
aaa
xchg
test
lds
pop
jo
cld
shll
movsb
loop
jge
daa
cmp
movsl
loopne
jnp
xchg
push
jle
inc
jo
push
mulb
xor
mov
stos
push
loope
mov
popa
fiaddl
jge
xor
fs
pop
out
ja
ja
repz
jl
leave
test
fsubrs
cmpsb
sub
icebp
aad
loopne
mull
xor
xchg
mov
sbb
xlat
xchg
mov
xor
xor
mov
mov
mov
pop
jecxz
adc
fmuls
pop
ficomps
push
lods
sahf
scas
push
in
pop
cld
ljmp
mov
adc
xchg
sub
add
cmc
movsl
push
and
out
jae
pop
sbb
aad
dec
sbbb
bsf
lea
cmp
and
out
add
jg
lret
iret
jl
cwtl
scas
orl
lods
adc
call
dec
push
jecxz
bound
mov
ss
mov
pop
dec
or
sbb
mov
jnp
and
dec
repnz
addb
adc
inc
lret
flds
sbb
imull
enter
jl
cmp
pusha
push
test
emms
lret
and
inc
fwait
out
mov
repnz
push
jb
push
xor
mov
std
push
pop
out
shll
cmp
adc
shlb
xchg
outsl
pop
nop
mulb
cmp
idiv
pop
mov
sub
js
mov
inc
cmpb
mov
sub
or
push
cwtl
dec
cmpsl
pop
or
xor
leave
mov
sub
popf
inc
movsb
js
sarb
xchg
mov
or
inc
shlb
push
leave
adc
test
cwtl
mov
icebp
cmp
or
scas
push
lods
inc
jbe
push
es
in
cmpsl
aad
lock
int3
pusha
add
adc
xchg
out
pop
xlat
scas
enter
divb
add
hlt
aad
push
aam
adc
sub
scas
xchg
push
sarb
xor
inc
mov
mov
mov
pusha
mov
and
dec
jo
sub
sbb
insl
sbb
loopne
jmp
mov
loopne
jge
add
xchg
mov
testl
cmpsl
sbb
push
cmp
cmp
dec
fwait
cld
mov
dec
jecxz
in
inc
icebp
popa
or
fistpll
adc
inc
jge
sbb
aaa
push
push
mov
push
adc
mov
or
push
or
sub
add
or
jo
or
mov
xchg
in
aaa
addb
jns
mov
out
jbe
in
push
lcall
ficompl
and
xor
jg
and
movsl
test
xlat
mov
aas
dec
dec
mov
dec
pop
adcb
sub
xor
adc
cmp
scas
enter
mov
push
mov
jb
aad
shl
std
fcmovbe
mov
les
jne
mov
cmp
pop
leave
add
or
in
insl
fidivs
clc
jp
insb
cmp
xor
sub
test
lods
cs
cmp
pop
hlt
cltd
pop
cs
nop
repnz
insb
test
scas
aam
dec
push
inc
in
or
cmc
loop
push
push
pop
adc
test
lds
mov
mov
ss
adc
fsubl
sarb
inc
sahf
and
les
mov
push
mov
cli
mov
push
int3
mov
lcall
inc
out
test
jnp
leave
pop
jbe
dec
xor
mov
fadds
jne
rcrb
ret
movsl
sbb
mov
inc
repz
ret
and
outsb
and
sub
stc
fsubl
ret
and
test
jmp
popf
aam
pop
mov
enter
mov
orl
cltd
addr16
out
sub
enter
pusha
stos
cwtl
jne
daa
jb
test
add
push
lds
cmp
dec
inc
in
mov
xchg
ficomps
xchg
cwtl
or
mov
cmp
xor
sub
push
add
loope
adc
mov
roll
jb
xchg
lock
adc
cld
xor
mov
pusha
dec
aam
cld
pusha
js
mov
pop
in
aas
cmp
fsts
sbb
mov
mov
ds
jmp
push
lds
mov
in
push
faddl
sub
or
test
hlt
test
pop
insb
mov
ja
and
jns
lret
gs
shll
and
clc
cmpsb
and
xor
push
ret
mov
xchg
mov
add
sub
rol
in
call
test
outsl
outsb
rclb
sbb
shrl
cmpsb
mov
mov
pop
enter
push
push
push
cmp
ret
std
xor
or
inc
xchg
push
in
adc
push
mov
xor
cmpsl
mov
and
fisttpl
je
in
cmp
out
mov
into
jecxz
js
push
mov
jg
add
inc
aaa
stos
mov
cmc
stos
movsl
mov
ja
push
icebp
shll
idivb
pop
mov
fildll
lcall
mov
addr16
sbb
out
xchg
jo
lock
sub
lret
stos
imulb
jecxz
idivl
mov
dec
push
pop
push
pushf
inc
inc
add
sbb
cmp
dec
aam
aas
inc
inc
loope
scas
movsb
mov
pop
arpl
mov
je
adc
cmp
mov
cmp
xchg
js
leave
ja
sub
outsl
pop
aad
inc
insl
out
xchg
stos
add
cmc
dec
mov
in
mov
std
add
loope
mov
dec
jge
in
xor
mov
cmp
or
nop
mov
outsl
add
mov
add
push
hlt
fldenv
int
push
sahf
fdivrl
inc
sub
out
adc
fwait
dec
pop
mov
stc
lret
gs
jne
aad
lods
xor
cltd
mov
jne
sbb
push
jno
lods
mov
pop
xor
xchg
and
dec
notb
js
jmp
cld
cmp
push
mov
xchg
push
inc
cmp
mov
out
jg
cmpsl
imull
add
cmp
insb
jp
aam
cmp
pop
std
and
mov
add
imul
lea
or
fwait
pop
add
stc
pop
and
sub
iret
adc
daa
je
lahf
fsubl
nop
sbb
scas
leave
adc
push
dec
add
jbe
out
push
into
inc
mov
xor
mov
dec
dec
movl
sbb
cmp
shlb
fs
sbb
jo
shlb
jo
fwait
adc
push
fsubrl
pop
inc
cwtl
inc
mov
out
xchg
jb
outsl
mov
xchg
jecxz
push
test
dec
mov
shl
pusha
dec
aad
cld
flds
clc
xor
out
adc
add
push
pop
imul
xor
xchg
adc
js
add
cmp
out
xor
mov
inc
mov
repnz
jg
inc
enter
int
ror
sub
ss
rclb
out
dec
push
clc
dec
pop
hlt
ljmp
les
pushf
imul
js
cmpsl
or
add
mov
push
aam
repz
mov
test
inc
jno
sbb
adc
je
nop
xlat
sub
fdivl
pop
sbb
icebp
sbb
lods
push
jle
dec
xchg
jmp
test
mov
cmpb
jg
insl
popw
clc
mov
add
cmp
sbb
adc
stos
xor
pusha
sub
sbb
xchg
mov
push
lahf
das
or
subb
lret
repnz
ficoml
jns
push
mov
xchg
or
daa
push
add
xor
call
sti
sbb
jl
fistpll
xor
jecxz
xchg
or
dec
or
or
js
in
test
inc
lcall
adc
add
addr16
dec
xchg
aam
sub
push
inc
stos
jno
movsl
dec
jae
in
add
push
inc
mov
xchg
in
and
and
test
sahf
cmp
cmp
pop
adc
outsb
mov
test
push
push
into
jp
push
lahf
cmp
loopne
ficompl
mov
iret
stos
mov
loope
sbb
hlt
sub
fnstsw
mov
cmp
sub
push
pop
push
or
loop
scas
movsl
mov
sahf
shll
dec
in
mov
xor
fs
xor
pop
mov
adc
lods
test
adc
data16
mov
ret
add
and
pushf
dec
sbb
dec
loop
bndldx
push
gs
jp
pop
pop
popa
fld
cmp
push
in
mov
orl
push
out
sbb
jae
sub
std
add
cmp
leave
or
xchg
data16
popf
push
jl
lret
mov
cltd
leave
jae
in
mov
bound
mov
adc
pop
xor
arpl
fstpl
or
cmp
hlt
cmpsl
cld
mov
sub
test
in
in
mov
sbb
je
aaa
insb
insl
scas
inc
enter
arpl
cld
test
pop
dec
js
lcall
pop
in
sub
jb
arpl
mov
push
mov
rcll
mov
and
mov
mov
pop
mov
xchg
mov
mov
and
fsubl
subl
push
jb
cld
sub
cmpb
inc
pop
ja
xor
and
mov
rcrl
add
mov
scas
jb
xor
pop
inc
rclb
shl
int
or
jecxz
fwait
xchg
xor
in
jecxz
lods
ja
pop
xor
add
sbb
mov
push
jbe
mov
mov
xchg
clc
or
mov
sahf
mov
cmpsl
repz
add
dec
clc
ljmp
aad
xchg
pop
adc
insl
adc
cmpw
and
mov
pop
in
aam
test
sbb
arpl
xor
adc
lret
pop
jp
cld
out
mov
sbb
mov
mov
xchg
xor
imulb
cmp
inc
inc
shll
sahf
pop
add
std
adc
clc
xchg
xchg
cs
sbb
out
stc
cli
lea
pop
out
lret
enter
lods
call
jae
pop
insl
mov
aas
and
xor
xor
mov
sub
jns
xchg
rorl
xchg
sahf
cs
jnp
and
add
stc
iret
and
das
inc
lcall
jnp
sbb
fldcw
or
jge
loope
pop
js
or
test
or
dec
sbb
dec
dec
js
stc
inc
xlat
aaa
and
jmp
adc
ss
mov
into
push
das
rol
or
jle
lock
push
mov
lcall
or
pop
xchg
std
fidivs
fdivs
or
dec
xchg
mov
mov
jno
ljmp
popf
stc
imul
xor
les
sarb
pop
pusha
add
xchg
ret
xchg
mov
adc
ud0
pushf
loop
jo
cmpsl
cmc
inc
cs
gs
pop
insl
jo
sarb
loopne
mov
add
sbb
pop
movsb
add
inc
pop
dec
push
into
cmp
aas
loope
cmp
int
out
pop
xchg
out
sub
pop
push
int
jle
or
mov
arpl
call
loop
xchg
and
loop
jo
mov
jo
or
mov
lret
jnp
aam
dec
mov
or
inc
and
pop
or
sub
fdivrl
mov
test
xor
mov
pop
out
loop
js
pop
and
xchg
clc
inc
ja
daa
dec
jmp
push
mov
aam
mov
sahf
arpl
sbb
lret
hlt
fwait
jno
push
push
mov
and
imul
fs
xchg
sbb
insb
subl
scas
or
sub
inc
lods
ror
lods
scas
add
cmpsb
scas
mov
fcomp
add
test
ret
push
push
in
sbbb
adc
mov
sbb
es
mov
cwtl
mov
stos
mov
mov
mov
xchg
adcl
sarb
xchg
leave
repnz
insl
xchg
cmpsl
enter
fwait
add
sbb
mov
add
mov
fiaddl
inc
mov
push
adc
rcll
ljmp
cmp
out
repz
imul
sub
lahf
fsubs
mov
ret
cmpsb
add
mov
xor
lds
test
enter
mov
mov
lcall
fsts
inc
dec
xor
daa
push
test
cmp
adc
mov
jl
cmc
cltd
and
mov
jle
push
mov
cmpsb
pop
mov
mov
cmp
and
push
std
add
imul
add
xor
sub
popf
fistl
clc
adc
jbe
iret
mov
pop
jno
pop
sti
push
popf
add
js
adc
xchg
pop
cmpsb
icebp
dec
enter
dec
jbe
inc
ljmp
ja
sbb
xor
les
dec
fwait
mov
lcall
insl
imul
pop
scas
mov
mov
ror
and
add
mov
lds
mov
cmp
add
push
pop
clc
and
jle
sub
cmp
cmp
pop
add
dec
pop
jl
sub
iret
dec
sbb
imul
loop
int3
icebp
inc
mov
mov
mov
jno
mov
pop
jp
bound
ret
mov
cmp
test
call
scas
leave
mov
sbb
xchg
cmpsl
in
sbb
and
faddp
sbb
jno
lret
cmpsl
or
add
je
adc
or
xchg
mov
leave
push
mov
int
lahf
rorb
sbb
add
xchg
mov
add
xor
sub
dec
jb
fldenv
lock
nop
cmp
in
cs
loopne
mov
inc
stc
je
pop
icebp
push
xchg
mov
movsl
fcmovb
cli
scas
mov
jo
popf
insb
add
pop
out
fiadds
dec
jge
and
add
jnp
aaa
call
adc
fisubrs
jl
pushf
cmp
in
dec
cld
mov
cmpsl
std
dec
repnz
fnstsw
daa
mov
push
rorb
in
add
or
aam
jne
aam
insl
inc
out
jle
scas
mov
mov
adc
lahf
scas
insb
icebp
aaa
orb
lock
mov
incl
sub
mov
imul
ja
ret
scas
dec
shlb
push
fistps
mov
add
fisubrl
lret
lods
jmp
jbe
call
in
mov
cli
mov
push
jmp
and
js
out
dec
movsl
dec
cli
jo
out
add
xchg
xchg
clc
scas
dec
mov
shlb
cmp
cmp
in
mov
and
arpl
or
addr16
mov
cmp
cltd
or
jl
or
icebp
jb
rorl
aas
lret
aad
popf
or
adcl
fwait
aas
cmc
lcall
sbb
push
inc
aaa
call
push
xchg
lret
ret
cmpsl
pop
inc
out
fidivrs
xchg
mov
xor
sub
xchg
xor
push
mov
lock
fs
or
mov
fstpt
xchg
ss
jmp
iret
test
das
xchg
mov
int
std
daa
mov
loop
ficompl
in
sub
lds
adc
gs
mov
dec
adc
sbb
mov
xchg
imul
pop
xchg
cmp
flds
xor
in
inc
dec
shlb
js
sub
loope
loopne
adc
pop
fwait
stos
xchg
mov
dec
fs
sbb
mov
fwait
cmpsb
push
mov
jb
fidivl
je
xchg
es
sbb
cmp
nop
push
push
add
aas
inc
add
pop
das
dec
fs
sbb
repnz
pop
push
xor
lock
test
insb
scas
ret
push
push
and
into
shlb
fbld
divl
lods
xor
call
repnz
push
mov
cmpsl
push
or
cld
mov
mov
or
add
pop
cmp
and
lds
pop
popf
push
popf
sub
lea
cwtl
arpl
popa
adc
repz
out
fcompl
push
popa
push
xor
fisttps
idivb
xchg
add
sub
or
push
sub
inc
loopne
pop
pop
dec
sbb
lea
pop
leave
call
jb
adc
arpl
mov
dec
loopne
gs
xchg
fadd
jbe
out
cwtl
pop
push
dec
cld
shll
pop
xchg
push
fsubl
sti
jle
jb
jb
xor
push
imul
sub
jo
or
mov
jo
mov
sub
nop
movsb
fsubr
js
xchg
in
xchg
iret
adc
mov
arpl
push
cld
and
mov
pop
daa
lds
int
test
lods
sub
mov
lahf
imul
inc
stos
enter
inc
shll
dec
dec
andb
les
xchg
fsts
mov
inc
stos
sbb
inc
ret
call
inc
sbb
ja
push
aas
mov
fnsave
push
inc
andb
mov
movsl
mov
and
cmc
sbb
add
push
inc
inc
push
fdivs
out
jg
jp
lods
inc
mov
adc
push
outsb
lods
movsb
icebp
push
mov
lcall
not
cltd
test
xor
frstor
das
aaa
lret
lods
add
push
jmp
cs
lods
sbb
cmp
cmp
push
into
jo
cmp
lcall
je
les
xchg
repnz
pop
je
pusha
je
cltd
popa
push
sbb
add
mov
fwait
sub
pop
pop
std
gs
sbb
outsl
lcall
cs
arpl
adc
dec
repz
sbb
jecxz
pop
sbb
jno
das
mov
xor
call
out
pop
mov
shlb
adc
dec
inc
in
test
lods
repnz
xchg
cwtl
cmp
repnz
into
stc
pop
out
cmp
xor
xchg
xchg
int
or
sub
cwtl
jp
adcb
sub
aad
js
push
inc
add
or
xchg
insl
jnp
add
data16
inc
push
or
adc
mov
and
mov
outsb
js
subb
jge
push
mov
mov
ljmp
or
sti
cli
dec
xor
lea
mov
in
loope
ljmp
add
mov
cltd
out
xorl
das
push
pop
fsubrl
mul
call
inc
sub
mov
popa
or
mov
addr16
xchg
sub
mov
lock
sbb
mov
andl
cmc
lcall
dec
xchg
inc
xchg
xchg
mov
fstpl
mov
pushf
insb
sub
pop
mov
sub
int3
push
scas
pshufw
cmp
std
adc
mov
pop
std
cwtl
inc
inc
sub
mov
mov
dec
hlt
enter
out
jmp
fmull
insl
test
jo
inc
xchg
xor
pop
or
aad
int3
mov
es
cwtl
sbb
clc
lret
push
jle
inc
push
pop
adc
xor
hlt
cmp
negb
in
mov
push
lret
ds
mov
iret
jg
adc
lods
mov
loope
cmp
cld
cmp
in
push
adc
int
lret
pop
fsubl
test
iret
jno
repz
fstps
lds
mov
dec
in
xor
addr16
rcll
outsb
push
mov
in
push
imul
enter
inc
mov
sti
mov
xchg
xchg
movl
adc
push
mov
add
push
and
or
sub
mov
je
scas
leave
sub
imull
mov
fcomps
cmpsl
inc
jg
add
daa
bound
popf
jl
test
push
jle
pop
gs
fildll
sbb
andb
add
mov
popf
fwait
xor
push
adc
addr16
push
or
jno
xor
or
and
test
or
mov
mov
inc
mov
push
mov
push
push
mov
test
movsb
in
sbb
mov
rcrb
or
adc
add
mov
mov
and
stos
xor
jno
je
push
pop
jg
rorl
mov
add
jecxz
adc
push
movsb
movsb
icebp
cltd
jbe
mov
and
jle
aam
mov
xlat
lods
enter
push
idivb
stos
inc
dec
pop
test
or
flds
out
in
push
icebp
mov
dec
sub
ret
cmp
sub
mov
cwtl
push
pop
in
mov
mov
mov
clc
ljmp
daa
sbb
sbb
cmpsb
sarl
adc
xor
repnz
push
dec
mov
jle
xor
ret
out
gs
shl
iret
pop
add
jb
mov
cmp
fs
orb
xchg
add
repnz
lds
test
push
mov
xchg
mov
mov
mov
mov
shrb
cmp
dec
jmp
jns
cmp
ret
je
scas
push
ja
mulb
sub
ret
andb
lcall
sub
in
enter
aaa
rorb
cmp
xor
or
push
mov
sub
sub
cmc
jae
add
stos
mov
imul
inc
into
test
push
sub
add
dec
xor
aaa
movsl
out
xor
dec
hlt
mov
ret
jge
push
scas
mov
repz
js
scas
movsl
mov
lret
pop
inc
or
sbb
sub
inc
cltd
pop
mov
fldl
mov
fdivs
cli
leave
lea
imul
add
repnz
js
test
sahf
dec
push
lret
lcall
adc
out
mov
addr16
xchg
movsb
lret
lret
inc
into
iret
test
stc
mov
sub
cmp
xchg
sub
insb
ret
sbb
adc
cmp
popf
loopne
mov
ja
mov
ret
bound
sub
or
add
inc
call
adc
pop
lahf
outsb
and
cmpsl
fdivr
pushf
in
mov
push
push
sub
lods
push
or
ds
jae
and
jb
mov
jle
call
int3
pop
adc
fisttpl
jb
pop
jmp
and
fwait
sti
stos
xor
scas
mov
enter
pop
out
cld
sbb
inc
adc
cltd
mov
or
push
add
lret
cmp
xor
out
fisttpll
add
ret
dec
mov
pop
add
xchg
popa
lea
dec
fld
adc
cmp
adc
push
ret
jmp
dec
cld
inc
push
sbb
out
inc
adc
pusha
xchg
add
cmc
addl
add
fcmovb
std
fwait
out
jns
add
xor
jmp
pop
xor
inc
int3
xor
mov
scas
cmp
icebp
xor
jmp
jae
mov
xor
das
push
bound
leave
and
aad
add
cmp
adc
xlat
imul
sar
sub
dec
xchg
shrl
pop
xor
push
adc
mov
xor
popa
dec
loopne
jle
in
sub
push
scas
subb
hlt
adc
call
dec
add
push
mov
jae
or
mov
fs
mov
or
ds
push
lret
dec
popf
add
popf
push
pop
dec
ss
push
mov
inc
xchg
push
pusha
lock
call
push
lret
scas
sbb
mov
push
or
mov
jnp
sbb
pop
ret
jbe
pop
pusha
incl
fistpl
cli
ficomps
int3
xor
stc
fs
mov
and
enter
stos
inc
add
mov
push
ja
xchg
cmpsl
clc
xor
sahf
hlt
in
jmp
fcompl
je
and
cmp
adc
push
mov
mov
mov
test
pop
adc
mov
xchg
push
movsb
add
repz
or
lds
pushf
and
cmp
cmp
cmp
jb
enter
or
stos
mov
pop
mov
lods
cltd
and
sbb
stos
add
xchg
fildll
dec
mov
xchg
rclb
add
mov
mov
add
dec
xchg
jb
pop
jp
loop
into
fucom
jo
dec
pop
icebp
dec
clc
enter
jno
sbb
loopne
xor
inc
clc
fcmovne
sub
push
inc
pop
xor
sub
sub
push
mov
inc
leave
dec
insb
iret
lea
int3
mov
jbe
dec
jbe
bound
call
test
in
dec
fisubl
jle
test
ror
pop
insb
cmpsl
xchg
fs
ja
and
jmp
jle
aaa
repnz
shlb
aaa
pop
or
outsb
addb
inc
mov
add
mov
cmp
inc
mov
rcrl
inc
inc
in
insl
sub
daa
jns
xor
jno
push
xor
mov
lahf
movsb
jmp
dec
inc
mov
cmp
add
cmp
cwtl
add
int3
je
shl
xchg
fst
out
ret
dec
mov
test
push
xor
mov
cmpsl
lcall
mov
pop
adc
xchg
pop
fdivrs
push
mov
cs
cltd
out
aad
ljmp
push
daa
pop
lcall
dec
adc
pusha
sub
lea
push
in
jp
lret
mov
cmp
call
das
or
pusha
pop
adc
mov
mov
or
inc
xchg
scas
fmull
sti
ret
fimull
dec
fnsave
test
mov
repnz
icebp
out
mov
aad
lds
jo
cmp
add
jp
inc
icebp
and
inc
push
iret
pop
inc
out
jns
jmp
dec
and
into
pop
mov
or
sub
and
jb
inc
lret
xchg
stos
dec
and
adc
pop
and
lods
dec
and
mov
sbb
lods
xchg
shr
test
inc
rolb
xor
mov
scas
cwtl
insb
lret
repnz
sbb
xchg
sarl
popa
inc
popa
mov
mov
sahf
cmp
into
adc
je
pop
xchg
mov
cmp
shll
dec
push
dec
pop
xor
add
sbb
out
sahf
loopne
or
push
jl
dec
sub
xor
and
add
scas
mov
adc
push
or
xchg
addr16
or
xor
inc
ficompl
cmpl
mov
aad
imul
jmp
and
sub
loop
add
xor
mov
mov
inc
add
or
add
sbb
and
lods
popa
test
incb
pop
aam
pop
popl
and
in
mov
add
jnp
mov
cmc
lock
movups
fimuls
sti
imul
addr16
xchg
xor
xlat
rorl
adc
pusha
fsubp
std
jmp
popa
arpl
imul
idivl
xlat
push
jl
add
ds
sbb
subl
cmc
push
je
push
push
push
pop
outsl
jmp
scas
cmpsl
outsl
cmc
cltd
in
dec
jg
sbb
push
fiaddl
or
fs
dec
push
mov
push
mov
or
insl
add
sarl
push
scas
ret
add
mov
lods
push
jae
or
lret
push
mov
scas
test
mov
ret
lods
jle
in
xchg
pop
test
sbb
mov
add
idiv
in
jl
stos
cld
and
das
cltd
xchg
xchg
mov
sub
inc
inc
xor
jecxz
int
nop
xor
dec
mov
not
dec
ja
jecxz
pop
fcmovbe
push
je
cld
inc
and
add
and
mov
pop
shlb
loope
cmpsb
jns
ja
dec
pop
insb
push
pushf
add
ljmp
outsl
mov
xchg
sub
test
lret
movsb
scas
mov
sub
dec
pop
fwait
dec
pop
outsb
and
cli
jmp
cwtl
ffreep
and
bound
cmp
inc
cmp
jnp
dec
fnsave
jp
popf
mov
popf
cmpsl
loopne
push
push
lock
test
nop
and
dec
dec
xor
mov
or
and
daa
rorl
enter
adc
mov
push
divb
jns
add
fsts
test
cmp
and
stos
rcr
outsb
outsl
xchg
push
xchg
popf
jle
setbe
jle
sub
loopne
pop
push
in
push
ds
fcmovnu
fstl
arpl
pop
inc
pop
and
lret
jp
push
dec
sbb
or
push
sbb
adc
idivl
aas
xchg
aaa
gs
in
out
or
in
ret
add
mov
push
mov
dec
and
mov
mov
scas
push
xor
dec
pop
bound
add
push
push
push
fildl
and
scas
mov
xchg
outsl
or
or
adc
loopne
flds
sbb
mov
inc
mov
icebp
inc
jns
int3
iret
jbe
xor
fstps
mov
das
loope
cmp
push
or
or
ds
pop
loope
and
int3
jge
popa
jle
sub
xchg
push
loop
repnz
test
sbb
inc
aaa
jp
and
mov
ja
out
js
mov
inc
sti
nop
pop
stos
stc
adc
pop
adc
xor
mov
loope
in
cwtl
mov
daa
adc
outsl
xchg
sahf
pop
mov
dec
mov
jae
loope
int3
stos
push
adc
jecxz
out
repnz
xchg
inc
cmp
in
stos
outsb
mov
xchg
xchg
xchg
fs
pop
inc
jmp
je
out
sub
je
jb
inc
out
lret
mov
das
imul
lcall
cmp
dec
xchg
push
clc
outsb
dec
cmpsl
mull
adcl
div
rorb
mov
scas
dec
aam
add
sbb
add
dec
xchg
push
inc
cmp
xchg
paddd
mov
sbb
mov
adcb
xchg
add
popa
jmp
stos
aam
enter
scas
push
jmp
test
scas
out
imul
rcrb
and
lcall
pushf
mov
inc
push
stos
pop
lret
inc
cld
sub
add
dec
mov
out
addr16
inc
es
xlat
mov
jns
xor
notb
dec
jno
aas
shlb
and
dec
sti
pop
push
inc
int
incl
lock
rcll
push
cmp
ret
cmp
movsl
decb
mov
or
rcr
jmp
and
or
xchg
mov
sub
call
xchg
cmp
inc
test
stos
imul
jb
mov
lcall
add
xchg
sub
rorl
sub
push
jb
sub
scas
iret
jp
cmpsb
dec
xor
adc
pop
sbb
ret
pushf
pop
jge
mov
push
pop
fsubl
lods
jge
jg
pop
lock
out
cmp
xor
xor
or
das
ficomps
pop
cmp
andl
in
mov
jp
push
scas
pop
lock
aad
or
mov
jbe
xchg
outsb
or
jnp
and
sti
mov
xchg
test
or
fstpl
pusha
and
sub
mov
xchg
movsb
shr
rcr
cmp
inc
movsb
fwait
testl
add
mov
pop
lcall
mov
sahf
in
jb
sti
stos
sbb
xor
in
aas
mov
jmp
mov
pop
push
dec
out
mov
dec
mov
loope
jb
cmp
mov
enter
cmc
in
arpl
lret
cltd
lret
lods
rcrl
test
push
and
icebp
jbe
mov
sub
jo
push
leave
inc
sbb
clc
ret
pop
mov
mov
sub
loopne
mov
repz
repnz
jns
and
into
mov
loop
repz
jg
xor
imull
inc
aad
cmc
sub
enter
in
push
mov
bound
dec
dec
or
movsl
ja
imul
shl
push
inc
insb
sbb
lcall
add
into
xchg
shll
stc
movsb
popa
add
stos
mov
xchg
pop
lds
test
pop
lods
sub
fdivr
pop
movsb
add
jb
xchg
dec
movsl
pop
mov
or
jecxz
sti
add
pop
or
pop
lahf
jae
fldcw
cmpsb
lcall
xchg
pop
mov
cmp
hlt
push
push
and
rorl
xor
dec
pop
data16
mov
pusha
and
lret
fstp
pop
push
sub
cltd
jne
enter
cmp
lods
mov
cmp
mov
dec
xor
cs
xchg
or
gs
lret
jnp
push
adc
aam
sbb
cwtl
add
loope
into
ja
adc
out
flds
popf
pop
pop
jbe
mov
lods
sbb
shll
xchg
shll
into
subb
mov
adc
mov
sub
test
mov
pop
sub
dec
add
sub
scas
jl
cmp
add
pop
xchg
jp
pop
hlt
fidivrs
and
sbb
enter
inc
jnp
movsl
add
and
je
adc
and
add
or
add
lods
jb
fists
in
push
push
mov
inc
or
out
jg
mov
mov
and
data16
lret
addr16
mov
sub
mov
mov
or
sub
clc
nop
movsl
stos
and
into
adc
sub
add
maskmovq
inc
iret
mov
and
ret
xchg
cltd
push
sbb
xchg
inc
fidivs
mov
pop
dec
push
jbe
add
cs
fs
jge
cmpsl
aaa
hlt
jns
cli
fwait
ret
add
mov
leave
add
mov
mov
lret
fdivrl
inc
mov
dec
pop
ljmp
xchg
adc
lods
sub
icebp
push
je
scas
cltd
popf
push
call
inc
cmc
mov
xor
ret
xchg
repnz
fbstp
lahf
dec
pop
mov
fadd
imul
sub
xor
testl
int3
fstps
jo
ljmp
pop
ja
fcoms
cmc
cwtl
jno
lcall
inc
or
xchg
mov
lods
cmc
test
iret
mov
inc
xchg
jl
sub
shl
das
lock
popa
pop
mov
xlat
fisttpl
sbb
fmuls
jbe
and
cmovo
inc
lret
push
mov
or
inc
and
mov
pop
das
adc
orl
jge
mov
mov
mov
sub
dec
add
cmp
sub
insb
sub
imul
popf
adc
popa
scas
cmpsl
jmp
das
xor
test
add
data16
dec
xor
pusha
movsb
dec
cwtl
int3
mov
lea
sahf
or
add
outsl
sahf
nop
adc
cmp
sbb
xchg
dec
pop
jns
and
add
adc
jle
mov
rcrl
ret
imul
sbb
mov
mov
xor
inc
test
lret
orb
lahf
sbb
insb
fs
aam
pop
and
jb
clc
aaa
cmp
xchg
sahf
fildl
or
aad
popa
aas
shr
xchg
fldt
push
mov
adcb
subb
push
dec
icebp
mov
in
mov
mov
test
fs
insl
imul
mov
pushf
sbb
je
lds
call
add
js
jo
rorl
or
cmc
addr16
mov
push
push
sub
in
jo
and
bound
xchg
mov
inc
xchg
and
fdivp
int3
out
pop
xor
imul
popa
int
add
jne
subps
es
outsb
lret
pop
test
push
rcll
adc
rcl
fstl
js
jo
push
adc
jp
cwtl
ss
test
pop
test
das
pop
and
mov
jecxz
cmp
sbb
mov
dec
jl
out
ljmp
jmp
or
xlat
test
bound
xor
mov
fwait
adc
mov
outsb
push
adc
push
push
jle
loope
mov
push
dec
sub
sbb
cmp
pusha
inc
add
lods
test
adc
in
test
fstl
iret
pop
mov
fld
xor
xor
outsb
in
pop
lcall
mov
loopne
cmc
xlat
sub
ficompl
int
je
insb
dec
xchg
xchg
fs
rorl
int3
add
xchg
inc
mov
jne
push
mov
cwtl
mov
sub
or
in
adc
daa
lret
dec
idivl
add
aas
mov
cmp
push
push
or
dec
out
add
jb
ret
cs
outsb
xor
cmpsl
shl
mov
or
jmp
lret
int
fimuls
sub
mov
mov
std
push
aam
dec
aaa
add
cmp
sbb
fsubl
push
ret
mov
lds
rcll
inc
insb
xorl
je
mov
inc
xchg
inc
outsb
outsb
loope
inc
fwait
clc
in
jo
or
aam
cmp
icebp
aas
xchg
testl
jg
jl
and
add
mov
xor
jae
cmpb
adc
test
movsl
or
cmp
push
pop
cmp
xchg
in
imulb
inc
dec
daa
mulb
test
in
mov
insl
in
fs
iret
jp
push
mov
lods
mov
add
in
movb
lods
lahf
inc
sub
cmp
test
insl
shrl
push
std
adc
popf
xor
fdivl
movsb
notl
jbe
cmp
roll
in
dec
andl
lods
test
sbb
test
push
bound
sahf
jmp
sbb
xchg
into
pop
in
adc
mov
push
xor
add
or
mov
jmp
and
leave
inc
outsb
and
stc
jmp
jecxz
xchg
les
mov
cmpsb
sub
in
sub
mov
cli
clc
push
movsl
sub
in
mov
mov
or
adc
movsb
dec
sbb
jo
xchg
mov
in
sti
rcr
mov
push
mov
pop
dec
nop
add
add
adc
xchg
out
ljmp
fnstenv
cmc
daa
subb
and
movsb
shlb
or
pop
fdivs
rcrb
mov
dec
nop
jecxz
pop
idivl
aad
fmuls
sbb
xchg
lds
mov
call
imul
imul
fs
into
mov
pusha
xor
outsb
insl
in
mov
outsb
test
dec
scas
adc
jne
mov
popa
cmc
test
lock
rcll
add
loope,pt
xchg
clc
mov
mov
add
pop
aad
outsb
hlt
and
bswap
inc
cltd
xchg
cmp
sub
ja
gs
hlt
sbb
xchg
sub
dec
lock
es
aaa
stos
shr
jbe
rorb
std
inc
and
cmc
rorl
adc
cmpsb
loope
sbb
cmpsl
nop
dec
sbb
rclb
jo
call
das
inc
or
or
push
sub
cmp
mov
sti
call
cmp
xor
mov
dec
dec
subb
cmpb
arpl
dec
sbb
lret
and
into
push
sub
out
or
pop
aam
cwtl
ss
jno
or
mov
jo
popa
xor
pop
mov
aam
mov
sbb
xchg
sbb
and
push
jae
xchg
add
push
insb
xlat
out
fistps
shlb
stos
ds
out
lret
sbb
lods
out
scas
and
lea
xor
js
dec
jmp
or
insb
lret
iret
or
int3
icebp
and
das
repz
xchg
jecxz
je
mov
mov
sub
inc
cld
and
jecxz
stos
icebp
push
sub
into
jl
mov
adc
xchg
rorl
test
into
sub
mov
aaa
inc
xchg
mov
and
ret
pop
dec
pop
adc
mov
add
pop
stos
mov
mov
je
sub
test
dec
cltd
inc
mov
pop
movsb
mov
pop
pop
adc
mov
lock
sub
nop
xor
clc
daa
dec
shrb
inc
fmull
js
out
ret
cmp
mov
xchg
add
cld
outsl
sbb
arpl
lds
or
shll
arpl
mov
mov
xlat
cmc
sahf
xor
scas
outsb
outsb
dec
cld
xchg
repz
inc
aad
inc
xor
cmpsl
jns
mov
or
and
daa
repnz
push
add
outsl
pop
out
movsl
lcall
sti
inc
cmp
pop
fadds
fbstp
mov
pusha
mov
leave
out
add
add
loopne
xchg
loope
sbb
ss
add
lret
push
lcall
or
idivb
mov
shlb
mov
push
rcrl
sbb
rcll
inc
aas
xchg
and
shr
ljmp
sarl
mov
cmc
sbb
push
shlb
jle
jne
jecxz
pusha
sbb
push
add
loope
movsb
sahf
scas
jae
stc
cmp
mov
pop
adc
pop
icebp
stos
inc
add
add
lcall
push
rcl
fnstcw
jp
lods
bound
sbb
jge
pop
outsl
lods
mov
mov
xor
stos
cmp
sbb
add
pop
cmpb
jae
insl
mov
push
int3
movsl
add
adc
mov
mov
and
dec
sub
pop
shrl
push
insl
pop
dec
inc
dec
dec
data16
xchg
pushf
fsubl
or
push
jp
in
test
jb
enter
lahf
sbbl
negl
in
or
call
cmp
or
ds
xchg
adc
mov
aam
push
jge
xchg
fldenv
xchg
ret
push
call
out
push
shll
dec
mov
and
sbb
cmp
cmp
add
mov
cmp
push
loope
and
mov
mov
jns
clc
fs
adc
xorb
hlt
jp
pusha
push
popf
add
imul
movsb
jne
jbe
xor
cmpsb
cmp
dec
mov
ljmp
cmp
mov
in
cmp
add
push
inc
dec
pusha
gs
icebp
into
inc
mov
xchg
mov
loopne
sti
cmp
dec
fidivrs
cmp
sbb
mov
shrl
sbb
imul
xchg
xor
mov
pop
inc
pop
shrl
das
dec
lahf
xor
dec
xlat
fyl2x
adcb
outsb
movsl
adc
jg
adc
movsl
jnp
loopne
movsb
lods
mov
das
or
jl
add
dec
add
aad
out
andl
cmp
mov
mov
ljmp
push
das
cmpsl
xorl
mov
sbb
movsl
xchg
pop
mov
push
les
test
stos
adc
mov
movsb
dec
imul
lahf
int3
ret
ja
xchg
dec
xchg
cmpsb
inc
pop
dec
js
lret
loope
sub
jns
loopne
insb
out
and
call
sbb
cld
dec
mov
aas
pop
out
dec
repnz
inc
mov
inc
inc
outsb
stos
insl
mov
xor
adc
scas
jmp
xor
inc
leave
pop
fstpl
sub
jge
arpl
sbb
in
push
mov
jl
aam
pop
lahf
ss
call
fs
movsl
gs
jl
mov
and
out
test
jbe
scas
addr16
mov
rcrb
mov
sbb
jo
pop
shl
pop
pop
dec
in
sub
orl
and
push
lods
stc
idivb
push
dec
adc
pusha
scas
repz
ret
mov
or
call
jnp
or
mov
shrl
ficompl
lods
xor
add
pop
into
fnstsw
out
mov
pop
inc
dec
test
aad
or
pop
push
xor
movsb
int3
lea
fs
fisubs
push
mov
mov
xchg
in
jno
imul
jg
sahf
pop
pop
pop
leave
aas
insb
fldt
adc
sbb
pop
dec
xchg
cmc
aaa
mov
mov
mov
inc
xor
pop
shlb
andl
iret
movsl
lea
imul
add
fisubrl
push
subl
ror
adc
fs
lret
lods
popf
adc
lods
pop
lea
cmp
icebp
imul
dec
addr16
gs
push
pusha
lods
shll
loop
call
jecxz
pop
mov
xor
mov
imul
in
dec
sub
sub
jg
popf
push
mov
arpl
inc
jg
stc
rorb
sub
push
ret
jle
pop
dec
dec
scas
scas
in
fnstcw
ret
cli
cmp
mov
mov
inc
pushf
jne
dec
xchg
test
xor
cmpsb
bound
loope
xchg
les
inc
mov
sub
sarb
ficompl
hlt
adc
or
inc
mov
lahf
xchg
cmp
inc
in
lock
cmp
fisttpll
push
lret
sub
in
inc
cltd
fidivs
dec
in
xor
bound
adc
inc
lahf
ljmp
cmp
jbe
adc
adc
test
mov
or
inc
fdivrs
pusha
mov
out
or
daa
push
jns
icebp
jbe
inc
xor
imul
mov
out
mov
or
adc
popa
push
xorl
xchg
out
outsb
jnp
adc
cmpsb
pushf
cmp
or
fisubl
mov
mov
fbld
not
loop
mov
icebp
aaa
mov
add
enter
mov
sbb
mov
push
aam
mov
add
inc
pusha
cltd
mov
xlat
movl
mov
mov
notb
jmp
cmp
int
imul
lea
xchg
popf
inc
in
fildll
repnz
ret
xchg
jo
mov
or
hlt
arpl
test
add
add
and
lea
push
add
jmp
dec
mov
arpl
imul
gs
push
rorb
xor
mov
fdivrl
pop
addr16
cmp
inc
es
or
sub
jo
sub
dec
scas
cmp
fs
iret
clc
mov
loop
xchg
push
sarl
pop
sub
les
cmpsl
aad
xchg
pushf
and
mov
jae
jmp
stos
dec
imul
fwait
decb
lcall
in
rcrl
cmp
jecxz
mov
adc
imul
mov
pop
jecxz
fstpt
adc
lods
loopne
and
cmp
cmp
lods
sahf
mov
sub
dec
pop
sbbl
sbb
sub
add
pop
repnz
inc
stos
push
xor
push
pusha
lcall
loope
clc
inc
mov
inc
in
xlat
push
fs
loope
cmp
test
push
fnsave
jecxz
mov
sub
imul
fxch
inc
xor
and
or
xchg
inc
addl
aam
fs
pop
sub
movsb
sbb
xchg
icebp
xchg
sub
mov
test
sti
lret
add
std
mov
cli
and
push
adc
movsb
aaa
dec
xchg
sub
std
out
mov
xchg
aas
pop
jmp
xor
pop
dec
or
or
pop
pop
sub
xlat
dec
adc
dec
cmpsb
mov
imul
push
jg
dec
sbb
xor
aas
fiaddl
or
aam
sahf
xor
inc
clc
arpl
xor
push
and
adc
lcall
xchg
mov
sahf
and
iret
mov
test
clc
cwtl
pop
pop
cmp
push
cli
iret
sub
xor
mov
int
movsb
jne
or
lcall
and
push
mov
scas
jecxz
cwtl
loopne
xor
push
cltd
or
rorl
jne,pt
out
imul
sarl
rorb
mov
pop
loop
push
hlt
sub
fnstcw
mov
je
pop
xchg
mov
inc
xor
test
mov
mov
imul
xchg
or
int
ficoml
int3
or
mov
bnd
cmp
daa
jb
ret
jbe
mov
sbb
push
stc
sbb
and
lret
test
nop
scas
mov
hlt
subl
aaa
les
xchg
push
pop
in
xor
and
push
in
mov
mov
xchg
cltd
leave
jl
in
mov
movsl
sub
cli
push
and
push
out
adc
cmp
fwait
rcrl
jmp
xorb
sub
xor
jo
adc
xchg
push
repz
xchg
imul
and
mov
in
jl
inc
jne
ss
add
mov
mov
outsb
pop
pusha
push
pop
adc
pop
movsb
daa
add
pusha
adc
push
mov
cli
fidivl
xchg
mov
sub
or
imul
movsb
push
aad
in
jno
repz
push
pop
lret
pop
inc
loop
pop
pop
iret
xor
test
add
in
or
jecxz
dec
cs
inc
sbb
cmp
pop
insb
or
insb
add
movsl
cld
cs
pop
jae
mov
mov
push
subl
jnp
lret
outsb
mov
gs
mov
es
xor
mov
and
je
xchg
bound
sub
js
jb
outsl
fs
call
add
adc
int
pusha
inc
std
insb
mov
or
mov
fbstp
repz
repnz
push
out
dec
cs
imul
fidivrs
pop
dec
inc
aaa
xor
leave
test
fiaddl
das
sbb
scas
push
or
ss
mov
nop
out
pop
mov
sub
mov
jae
incb
jae
jle
out
jae
xchg
inc
into
jmp
mov
lret
pop
aaa
push
fcomps
push
lret
repz
xor
imul
movsb
jmp
lea
cmp
and
jle
shrb
outsb
add
scas
xchg
addb
testb
xor
hlt
mov
fwait
notb
cmp
mov
sub
or
jno
pusha
xchg
add
mov
cmovge
scas
mov
lcall
and
and
loop
mov
or
leave
int
adc
adc
das
out
es
inc
sbb
xchg
xchg
cmp
and
sub
cmpl
bound
in
js
ficoml
movsl
scas
push
and
sbb
inc
inc
sbb
mov
dec
cs
inc
addr16
pusha
call
ja
xor
sbb
and
in
dec
mov
add
cmc
jnp
and
push
inc
xchg
flds
or
shlb
addb
movsl
mov
dec
xchg
xchg
push
sbb
mov
sub
push
mov
aam
shrb
out
jo
sbb
movsl
fldcw
data16
std
jmp
out
aad
mov
ja
lret
or
add
push
mov
dec
and
es
lds
sbb
jle
pop
cmp
fs
cwtl
ja
subl
lret
fbstp
jae
push
data16
jge
add
dec
xchg
adc
cmp
fsubrl
or
out
loope
mov
sub
pop
jnp
int
stc
or
adc
pop
stos
stos
shrl
std
insb
mov
test
cmp
mov
push
jae
jle
shl
fidivrs
sti
mov
push
sbb
arpl
or
xchg
fsubr
push
mov
insl
push
xor
jl
adc
jmp
in
sub
addr16
sub
pop
shlb
or
js
int
mov
jg
aas
nop
mov
dec
loope
mov
pusha
shrl
xchg
push
dec
imul
add
loop
pop
or
in
add
cmp
xor
cmpsb
xchg
xchg
mov
insb
pushf
movsl
jns
arpl
nop
stos
out
push
ffree
inc
pop
mov
mov
fnstcw
stos
andl
in
cmp
jns
jg
into
xchg
iret
mov
sub
pop
adc
cwtl
xorl
jne
xor
push
mov
lret
jns
cltd
cmp
aad
mov
dec
sti
adc
cmp
add
sbb
lock
in
dec
mov
in
std
rorb
ficoms
hlt
lahf
push
loopne
push
test
test
lcall
fnsave
fimull
adc
lea
pop
pushf
inc
mov
adc
push
lea
pop
jg
inc
pusha
cmp
push
jp
addr16
out
adc
add
out
sub
jnp
xchg
adc
xor
nop
cmc
idivb
sbb
sbb
cmpsb
sbb
dec
adc
dec
mov
fwait
loope
dec
fistpll
pop
out
cmp
or
xchg
sub
sub
pusha
nop
int3
or
mov
xlat
jbe
ret
pop
scas
sub
cltd
dec
scas
out
ficompl
sub
enter
mov
sbb
insl
repz
adc
pop
aam
shr
hlt
mov
repz
jg
sbb
adc
mov
pop
push
mov
enter
cmc
sbbl
lods
fbld
js
es
jmp
sbb
push
mov
imul
cli
add
mov
lret
sub
add
sbb
adc
xchg
nop
idiv
pop
push
inc
and
inc
adc
hlt
imul
imul
pop
cmpsb
push
mov
clc
sbb
ljmp
xor
ja
mov
ds
mov
flds
int
xor
mov
mov
sbb
jae
pop
push
xchg
push
adc
imul
jbe
xor
xchg
ror
sub
outsb
or
add
gs
mov
call
jmp
out
add
divb
mov
or
add
inc
adc
mov
fdivr
xchg
pop
adc
fbld
mov
inc
mov
push
decl
add
leave
lea
jmp
dec
dec
repz
inc
inc
repz
adc
jp
inc
daa
dec
ljmp
xchg
add
into
xchg
bnd
cwtl
mov
xor
gs
ss
sbb
or
jne
adc
cli
pop
dec
mov
shrb
daa
ret
in
out
rcl
jmp
mov
shlb
sub
pop
ss
lods
inc
xchg
jg
cmc
lahf
call
inc
sahf
cmp
add
out
fsubrl
adc
xor
xchg
jp
add
aaa
push
pushf
or
push
lea
pop
push
mov
fimull
out
xor
clc
sub
push
mov
jge
sub
fcompl
cltd
aaa
daa
es
les
adc
fcompl
or
dec
dec
add
push
jb
jge
fcomip
push
nop
out
push
jge
imul
sbb
adc
fcomps
iret
dec
sbb
dec
jns
push
pop
pop
je
add
jbe
mov
xchg
js
roll
jae
bswap
test
nop
iret
in
push
push
aad
mov
scas
mov
mov
or
sub
arpl
pop
xchg
fiaddl
fnsave
ja
idivl
jp
mov
pop
push
inc
adc
aaa
pop
push
inc
xchg
jl
or
dec
inc
mov
outsl
add
adc
out
xor
and
jns
xor
adc
xor
pusha
mov
int
fmull
scas
mov
xchg
inc
push
loopne
call
dec
and
andb
and
cmp
jno
mov
mov
and
jp
test
sbb
mov
jp
mov
mov
mov
sbb
in
stc
or
clc
inc
out
add
or
push
pop
mov
xchg
push
aaa
dec
clc
das
imul
mov
xorb
mov
xor
adc
loope
pushf
push
loope
and
scas
inc
xchg
cwtl
add
push
lods
test
loope
sbb
in
cld
sub
repz
and
das
in
push
sbb
std
sub
leave
imul
mov
sbb
and
mov
adc
cmpsl
cmpl
or
stc
pop
dec
addr16
adc
not
mov
cmpb
js
xchg
push
mov
push
leave
inc
cmc
and
xor
int
ljmp
push
and
xor
jae
pop
lret
les
ss
call
loope
xor
jle
xor
mov
mov
or
sti
icebp
dec
je
repnz
mov
jmp
fcomip
or
imul
enter
pop
or
test
xchg
shlb
test
xchg
sub
loop
leave
lods
sub
add
and
jl
dec
rorl
movsl
cmp
lea
inc
test
inc
mov
into
sub
lods
insl
imul
or
add
xor
fnstcw
sahf
push
pop
cli
mov
lret
sbb
jp
xor
mov
test
jp
xchg
jae
mov
adc
cmc
notl
jnp
leave
mov
push
adc
add
enter
mov
jl
mov
xor
pop
push
lods
cli
inc
push
jbe
push
push
test
mov
imul
fs
jbe
push
jbe
inc
sahf
daa
rorb
xor
or
sub
mov
sub
adc
les
inc
xchg
push
repz
mov
xchg
je
outsl
testw
add
mov
fidivs
jg
mov
mov
stc
and
jg
imul
lds
pop
mov
imul
push
out
lods
cmp
enter
inc
adc
outsb
idivl
leave
xchg
out
int
sub
and
jne
negl
sbb
push
pop
stos
xchg
add
or
sti
jo
and
in
lods
cmp
sub
adc
loopne
insb
push
jecxz
sti
decl
cmpl
rolb
testb
dec
xor
and
adc
js
daa
stos
rolb
jle
or
push
xchg
cwtl
jne
mov
popa
sub
mov
mov
adc
add
daa
sub
xor
in
iret
dec
out
ljmp
into
pop
inc
mov
into
or
adc
fsubl
mov
and
xor
jp
mov
pop
rcrb
lcall
xchg
add
push
cmpl
fdivr
or
or
xor
dec
xchg
fdivr
sub
add
mov
adc
cmpsb
dec
test
fwait
das
inc
inc
mov
push
or
xor
ss
push
cmpsl
shlb
pusha
ljmp
fistps
add
iret
cwtl
add
aam
aaa
or
jnp
imul
andb
mov
sub
movsl
add
xor
aaa
cmp
xlat
fucomp
in
iret
and
or
pop
push
filds
movsl
mov
add
in
cld
incb
popf
pop
incb
lret
sub
push
movsb
cmp
mov
testl
push
jnp
into
cld
les
mov
xchg
adc
and
sub
lahf
ljmp
or
mov
insl
add
hlt
add
call
fadds
mov
sub
loop
outsb
sub
icebp
jns
int3
xlat
std
gs
pop
ljmp
int
jmp
push
mov
les
cld
and
pop
mov
repnz
jb
push
data16
in
dec
leave
and
jp
pusha
pop
sub
cmp
dec
xor
sub
roll
icebp
mov
cmpsb
test
shll
rcl
sbb
aas
sub
sti
xchg
fcoml
mov
setge
push
mov
sub
mov
xchg
or
sbb
fidivrl
xchg
mull
pop
push
iret
sbb
cmc
es
mov
sbb
push
es
jne
shl
or
sti
inc
mov
push
or
dec
jg
or
dec
push
mov
insb
xor
mov
dec
inc
adc
test
xchg
xchg
daa
adc
les
pop
mov
pusha
testl
sub
mov
sarb
push
cwtl
out
fcmovnbe
pop
aas
pop
inc
sub
std
mov
bnd
into
pop
sbb
out
push
fidivrs
pop
sbb
adc
and
clc
sbb
rcrb
mov
adc
out
pop
sub
insb
out
pop
mov
inc
sahf
jae
mov
leave
cmp
inc
lret
mov
sahf
add
adc
mov
sbb
mov
shrd
xor
lcall
pop
ss
pop
fstpt
mov
and
and
test
cld
mov
lea
xor
and
pop
push
andl
xor
call
scas
pop
mov
call
mov
or
scas
cli
jns
mov
cwtl
mov
js
inc
xchg
loop
aam
xchg
fldcw
pop
or
iret
jp
js
dec
xchg
jge
adc
mov
fcomp
test
popf
out
mov
daa
out
mov
imull
push
sub
xchg
push
sbb
in
pop
stos
or
pop
es
xchg
sahf
mov
sbb
les
push
lods
jle
das
mov
xchg
js
inc
push
fnstcw
add
xor
in
jbe
xchg
jmp
and
lods
lock
sub
rcl
fbstp
xor
das
xor
enter
loope
jp
outsl
pusha
pop
out
jg
cltd
push
mov
xor
xchg
dec
lock
jg
int
xchg
cmp
cmp
mov
adc
push
xor
jno
mov
adc
insl
xchg
gs
out
mov
dec
mov
mov
cmp
movsb
loopne
and
push
push
pop
sub
jg
dec
dec
out
in
repz
xor
rcr
cmp
xchg
les
inc
xchg
sbb
push
mov
and
xor
adc
dec
xor
hlt
cmpsb
push
shll
dec
mov
add
ss
mov
loop
movsb
nop
sbb
cmp
movsb
in
jle
iret
and
pop
or
push
out
cmpb
and
mov
lock
sti
lcall
inc
pop
dec
mov
sti
jae
lds
jl
inc
cwtl
jge
sbbl
arpl
ja
movsb
or
lret
je
xchg
xchg
push
add
ret
or
nop
cmpsb
sbb
pushf
and
dec
add
jb
ffree
pop
icebp
or
lods
cmp
out
push
mov
nop
add
lret
jmp
ret
mov
cmovle
pop
gs
dec
fldl
das
stos
mov
cmp
fs
cmp
mov
int3
fisttpll
mov
out
je
das
pushf
add
and
lahf
les
stos
or
adc
adc
pushf
push
in
push
adc
dec
jno
xor
pop
popa
rorl
xlat
in
adc
stos
pop
jb
ficoms
clc
adc
adc
pop
and
lds
push
cmp
das
mov
jl
jne
lret
adcb
insb
aas
cmp
push
movsl
add
jno
jecxz
cmp
arpl
sub
mov
rolb
inc
fnstsw
cmpsl
pop
lock
cmc
adc
js
movb
inc
shrl
pop
sub
dec
sbbb
es
std
pop
cmpsb
xchg
std
aam
popf
sbb
inc
addl
push
dec
setno
mov
rolb
fisubl
dec
sbb
aas
fs
es
add
jl
ja
inc
push
add
push
dec
mov
sub
push
and
cmpsb
sub
mov
pop
dec
mov
pushf
das
jge
dec
cmc
and
loope
pop
test
cmp
std
jle
xchg
sbb
hlt
cmp
push
lcall
sahf
test
lods
stos
notb
xor
add
pop
sbb
cmp
icebp
lahf
sbb
jp
and
push
lods
jb
sub
mov
imulb
pop
mov
lods
stos
jb
daa
jb
lret
push
lea
sbb
and
mov
mov
out
pop
sub
xchg
mov
fucomp
mov
add
pop
mov
jno
popf
jmp
or
pushf
sbb
jnp
rorb
in
jmp
xchg
adc
xchg
sbb
out
pop
sbb
es
je
dec
push
or
pop
push
cmp
ja
in
int
mov
dec
loope
lds
js
xchg
fwait
daa
dec
aas
fcmovb
in
fbld
std
popf
cli
mov
ret
cmc
insl
push
sub
xchg
ja
mov
push
je
dec
lea
test
jb
pop
sub
cwtl
dec
push
mov
in
aad
lcall
iret
mov
outsl
clc
rorl
out
into
and
xchg
fmull
das
ja
mov
hlt
jo
cli
test
imul
ret
js
jbe
mov
push
stos
fsubr
dec
sti
dec
mov
fcoms
push
inc
mov
clc
in
cmp
fwait
ja
jns
loopne
ret
aam
int
and
sbb
adc
or
sub
jg
in
nop
adc
int
test
push
push
xchg
or
dec
cs
jecxz
imul
pop
shlb
data16
inc
jmp
jnp
mov
fadd
lods
jae
xchg
fcoms
add
in
xchg
pop
jbe
adc
dec
in
mov
push
jl
mov
jmp
callw
sub
or
mov
scas
mov
fadds
inc
mov
or
mov
push
fcomip
push
cmp
sub
imul
pop
push
dec
mov
icebp
gs
lds
stos
push
jb
push
xchg
xchg
xor
loop
js
jo
dec
adc
ds
out
ss
mov
inc
int3
popf
xchg
test
mov
sbb
xchg
popf
jp
push
fwait
cmp
fisttpl
adc
xchg
and
aam
mov
xchg
test
jmp
dec
imul
cmpl
adc
and
lahf
adc
mov
dec
mov
adcl
push
inc
cmp
add
iret
fwait
les
fs
fadds
and
loopne
out
mov
inc
lods
add
dec
scas
imul
jo
stc
cmp
fisubrl
data16
outsb
cmpsb
jo
jno
mov
les
outsl
std
aas
mov
pop
icebp
test
popf
lret
pop
fwait
repnz
push
lret
les
mov
stos
fnstenv
fcompl
movsl
xchg
adc
mov
and
cwtl
fimull
lock
lods
leave
ss
push
rcrl
fmull
outsl
push
loop
sahf
mov
sbb
cltd
mov
sar
adc
mov
xor
stos
aas
fistpll
shrb
out
mov
adc
das
gs
sbb
ds
roll
cwtl
add
dec
bound
cmpb
lcall
mov
jmp
sub
jmp
test
mov
sarb
sbb
sub
add
std
lds
mov
sub
sarb
mov
and
xlat
stos
mov
popf
jp
popa
and
cmp
cs
mov
cmpsb
dec
pop
dec
push
ret
jns
cmp
adc
lret
cmp
fnstsw
leave
rcrl
mov
jb
stos
xchg
lods
mov
ja
fcmovnbe
sbb
lahf
add
stos
cs
pop
xchg
jnp
jl
ror
les
xchg
mov
movsb
cli
movsb
and
data16
insb
pop
fisttps
sbb
jno
jno
inc
xor
inc
jl
fdivrl
ficompl
imul
and
aam
xlat
jmp
mov
add
xchg
xchg
aaa
or
sub
fcomip
sti
sbb
es
push
je
mov
ret
sbb
lret
les
mov
pop
jmp
push
repz
inc
loope
pop
sub
aad
push
and
movsl
fnstcw
mov
sbb
lret
adc
or
jg
in
mov
mov
add
inc
ds
or
xchg
daa
jns
sbb
xchg
rcrb
das
addr16
jb
dec
fsubr
fcomp
sbb
xchg
xor
mov
dec
les
cmp
xchg
cmp
jge
jb
idivl
add
fwait
inc
ret
or
mov
sbb
xchg
out
dec
aam
sarl
jnp
dec
insl
aad
sbb
cwtl
dec
cli
cmp
sbb
adc
jne
outsl
inc
push
push
xor
mov
std
cmp
mov
sarb
scas
mov
fsubs
dec
push
shlb
lods
mov
push
xchg
dec
jae
sub
push
cmp
clc
das
push
add
add
add
mov
sti
and
sbb
sub
loopne
push
divl
jo
jno
daa
push
test
fsubrs
icebp
repz
or
mov
fldenv
orb
dec
fnsave
xchg
lret
pop
push
push
pop
fisttps
call
scas
mov
rclb
scas
and
stos
mov
movsl
dec
lods
idiv
lahf
dec
pop
loopne
sbb
aas
fsubrs
imul
sub
and
dec
enter
and
jle
sahf
repz
cmc
inc
xchg
xor
fsubl
add
pop
adc
ljmp
iret
dec
add
push
jecxz
mov
outsl
and
pop
jecxz
push
mov
push
mov
xchg
cmp
mov
pushf
jae
mov
test
xor
add
cmpb
dec
push
mov
mov
mov
xlat
push
cmpsl
fcmovb
push
shll
rol
cmpsl
sub
pop
jb
jmp
lret
lret
cmp
cmp
jl
fs
out
sbb
addr16
lret
jmp
or
cmp
inc
pop
arpl
push
pushf
and
pop
nop
test
push
mov
repz
push
cs
lret
sbb
pop
lods
push
loope
jge
aas
clc
jg
scas
outsb
adc
out
cmp
mov
pop
cmp
movsb
mov
mov
mov
mov
or
test
xchg
push
jg
or
sub
int3
dec
faddp
fadds
mov
lret
sbb
mov
inc
jmp
stos
add
xor
xchg
clc
xor
push
mov
mov
ljmp
hlt
or
clc
cmpsb
dec
xor
cwtd
sub
fwait
sub
xchg
shrl
and
mov
jg
fsubrl
inc
jg
or
bound
mov
outsb
icebp
cmp
add
sbb
xor
adc
fimuls
xchg
inc
mov
lcall
mov
jl
pushf
pop
aas
loopne
ret
pop
push
xchg
sbb
cs
leave
push
mov
jle
out
mull
inc
sti
or
jae
shll
hlt
and
aas
dec
je
ret
stc
pop
xchg
push
or
jl
popf
cmp
mov
ret
out
testb
pop
push
mov
xor
and
mov
imul
mov
pop
dec
cs
mov
aaa
cld
cltd
xor
xor
push
lock
mov
call
sub
dec
mov
loope
add
imul
repz
mov
sarb
add
push
popf
inc
jns
or
bound
push
inc
jge
jle
int
dec
test
in
les
sahf
popf
gs
fucomp
mov
add
push
add
repz
notl
inc
adc
jae
mov
fsubrl
shl
leave
sarl
test
stos
pop
mov
add
adc
and
outsb
jbe
out
or
loope
cld
mov
sbb
push
pop
nop
inc
fdivrl
mov
pop
or
lds
jnp
roll
testb
dec
jbe
popf
xor
cltd
push
fidivs
push
sub
sub
push
imull
mov
add
push
cs
jl
inc
dec
roll
fstl
cmc
jp
lods
in
imul
pop
test
outsl
mov
push
mov
jp
mov
xor
out
in
pop
push
jp
jne
mov
xchg
and
js
jmp
lock
das
dec
in
sub
or
jnp
fwait
rcrb
pusha
pop
push
notl
jp
jge
nop
mov
jns
repnz
popf
sub
cwtl
mov
addr16
jle
shlb
cmp
sarl
popf
inc
sub
insb
aam
push
pop
xchg
mov
bound
aam
dec
pop
gs
xor
mov
mov
inc
rorb
ret
dec
adc
lret
xchg
mov
je
sub
test
or
push
fsubl
push
bound
jbe
rolb
ftst
je
fwait
xor
add
push
sbb
fadds
mov
xlat
test
clc
fisttps
cmp
xor
les
scas
sbb
mov
movsl
add
arpl
and
fcos
popf
mov
jb
hlt
jbe
xor
es
xchg
dec
lock
xor
cld
add
lcall
leave
popf
notb
mov
jle
test
sub
jmp
in
nop
stos
dec
out
adc
cmp
cmp
lahf
sbb
inc
aad
mov
sub
cwtl
ret
fimull
sbb
sub
pop
in
hlt
push
stos
jecxz
cmpsb
js
data16
sub
jl
lahf
or
cmpsl
fwait
sti
bound
adc
mov
or
mov
push
outsl
cmpsl
jmp
push
or
sub
dec
pop
sub
mov
sub
sbb
pop
push
pop
push
shrl
lret
int
push
imul
icebp
movsb
cmp
data16
mov
lahf
xlat
mov
cltd
pop
xchg
popf
int
cmp
cmp
push
call
ja
idivl
icebp
pushf
xor
mov
mov
adc
dec
add
aam
out
into
or
jb
pop
sbb
lret
add
push
adc
iret
jns
mov
cmp
adc
pop
out
das
mov
outsb
pop
inc
and
insb
popa
cmp
jno
mov
mov
adc
repz
loopne
jns
mov
add
push
pusha
out
lcall
mov
repz
push
mov
inc
repz
and
mov
aaa
aam
pop
sbb
cmp
enter
cli
mov
sbb
mov
jnp
xchg
xchg
scas
std
add
push
xchg
scas
mov
sub
cmp
cmc
mov
aad
test
call
lret
movsb
pop
cld
les
mov
andl
call
sbb
into
enter
adc
ljmp
lcall
xor
dec
mov
pop
and
imul
icebp
jecxz
push
nop
cltd
pusha
push
int
jle
push
add
ret
pop
imul
cmp
push
inc
mov
pop
jb
fsts
mov
std
js
lods
jl
mov
dec
cs
add
into
lahf
mov
fbld
imul
mov
adc
xor
hlt
or
shl
xchg
xor
nop
sub
movsl
movsb
stos
inc
or
mov
cltd
cmpsl
aaa
pusha
mov
rolb
mov
sbb
mov
or
xor
dec
loopne
out
pushf
clc
and
mov
dec
mov
and
nop
mov
xor
mov
and
pop
mov
mov
shrb
test
mov
lcall
cmp
or
ljmp
imull
popa
adc
fistpll
fdivp
cmp
insb
fistl
cwtl
xor
dec
mov
inc
push
shll
inc
inc
aas
mov
in
imul
sbb
jge
imull
loope
and
sub
push
cmc
or
push
fisubrl
jo
test
and
xor
addr16
inc
call
lock
mov
inc
dec
mov
jle
push
sub
pop
in
test
sbb
sub
add
cmpsl
test
xor
loopne
div
and
mov
sbb
rorl
frstor
ret
mov
lods
push
mov
mov
sub
cmp
mov
mov
stc
leave
ljmp
adc
dec
mov
cmc
xchg
movsb
fstpl
stos
stc
in
repz
jmp
sahf
es
pop
dec
aas
dec
xor
push
gs
inc
sbbb
ficoml
dec
movsl
push
and
mov
push
pusha
es
jp
inc
in
loope
aad
or
jb
cwtl
push
jge
and
and
push
inc
pop
xor
lret
sub
xchg
mov
aam
stos
xorb
int
in
mov
rolb
call
sub
jae
inc
dec
xor
sub
std
cli
insb
add
add
into
dec
insb
push
mov
lock
push
push
xchg
jnp
fcomp
movsb
add
sub
xchg
push
fstps
pop
hlt
cmp
dec
dec
in
icebp
clc
sbb
push
fmuls
inc
mov
and
jmp
adc
and
in
movsl
pop
loopne
adc
cld
push
pop
cmp
jae
push
repnz
inc
dec
inc
fdivl
ljmp
mov
jl
xchg
fadds
loop
mov
fdivl
movsl
mov
sub
jp
cmc
data16
lret
fstpt
and
mov
mov
mov
xchg
std
pop
mov
jecxz
das
mov
std
xchg
mov
jecxz
rorl
jmp
movsb
fs
inc
and
inc
jmp
dec
mov
pop
push
inc
cmp
stos
enter
call
push
inc
inc
inc
add
pushf
adc
push
xchg
xchg
mov
and
add
cltd
imul
lahf
sbb
pop
movsl
push
jg
loopne
movsb
inc
mov
stos
pop
clc
sub
nop
in
pop
out
sbb
adc
and
sub
mov
das
jne
iret
stos
sbb
xor
dec
pop
mov
ret
jmp
xchg
outsl
jle
mov
fstl
sub
add
bnd
jle
xchg
jbe
push
sbb
pop
mov
fbstp
pop
cmpsl
cmc
stos
add
outsb
aam
fidivrl
fisttpl
notl
jmp
xor
pop
push
ret
hlt
dec
xchg
push
push
jno
cmpl
orb
cmc
push
add
sbb
mov
fidivrs
cmp
sarb
lret
cld
pop
xchg
jge
sbb
add
test
sub
ret
xchg
sbb
ret
xchg
adcb
sahf
push
fdivrs
pop
and
pop
mov
add
nop
aaa
mov
push
cmp
inc
jbe
cmp
pop
xchg
jno
push
xor
or
aaa
xchg
mov
dec
sub
movsl
push
cli
pop
sbb
stc
push
into
test
ljmp
add
mov
lahf
push
rcll
xchg
pusha
jmp
mov
mov
iret
cmp
lcall
out
shl
sti
push
pop
push
mov
mov
push
mov
dec
fwait
cmc
sub
push
adc
pushf
enter
addr16
mov
nop
stc
pop
mov
fcmovb
lcall
push
pop
fdivrs
jne
frstpm(287
lds
push
stos
je
jb
jbe
xchg
dec
or
ret
or
xchg
adc
bound
les
mov
mov
dec
clc
dec
jg
lcall
nop
shlb
add
cmp
cmp
cmp
add
gs
out
push
fcmove
xchg
sbb
add
jle
ret
loope
imul
ds
adc
mov
mov
xchg
popa
inc
in
ret
inc
xor
add
cmp
scas
lret
sahf
rorl
dec
sub
fbstp
pop
aam
xchg
insl
int3
cwtl
ror
jge
in
loop
aam
mov
mov
sbb
clc
sub
pop
adc
sbb
inc
hlt
jno
subb
cld
mov
nop
es
push
call
dec
jmp
ret
mov
xchg
ds
jle
dec
adc
or
test
jno
in
das
daa
mov
jo
push
dec
add
sbb
jbe
aas
sbb
adc
pop
dec
sub
jae
jnp
xor
out
jno
imul
sbb
jmp
call
adc
addr16
jnp
fnstenv
sbb
xchg
mov
or
inc
aas
adc
test
popa
add
lcall
and
or
mov
push
add
mov
sub
dec
stos
cmp
ret
adc
cmp
mov
or
adc
out
sbb
add
sbb
mov
mov
sub
faddl
test
and
pop
push
cmpsb
cli
mov
lods
inc
jb
ret
pop
scas
int
out
mov
or
pop
aam
push
jae
ljmp
lret
fildl
pop
pop
jg
insl
fcomp
sub
ret
push
sub
or
mov
xchg
fiaddl
push
shl
mov
daa
ja
out
sbb
mov
cli
cltd
imul
lods
dec
mov
push
pop
mov
fldenv
add
out
and
push
push
jbe
pusha
or
and
cld
cmpsb
xor
int3
or
outsb
ljmp
push
mov
add
cltd
popf
cmp
fsubs
add
push
aaa
cmp
cwtl
or
rorl
jecxz
pushf
sub
pusha
scas
sub
add
pop
jb
xor
jns
cmp
add
jg
jno
mov
mov
add
cmp
in
xor
cltd
test
or
lcall
dec
arpl
popa
lahf
pop
cmc
push
cmpsb
jns
push
cld
inc
jno
push
inc
inc
cmp
out
aam
nop
cmp
lret
lods
mov
and
gs
data16
jae
leave
xchg
jl
data16
push
push
icebp
or
cmpsb
mov
out
lret
and
or
push
pop
neg
and
and
pushf
dec
nop
push
xor
dec
addb
jmp
dec
loopne
mov
stos
cld
mov
test
mov
mov
jl
rcrl
ret
sbb
fdivs
mov
push
jecxz
mov
push
inc
xchg
pop
mov
sbb
sbb
enter
popa
add
out
vpsubw
mov
mov
adc
inc
fwait
scas
pop
cld
aaa
sbb
xor
xorl
lahf
pop
sub
cs
loopne
add
mov
das
dec
mov
addr16
nop
fldcw
push
dec
and
imul
and
or
nop
xchg
and
fimuls
int
popf
fs
mov
andb
jb
test
ljmp
pop
sub
mov
sbb
and
mov
fcompl
add
xchg
in
roll
cmp
repnz
leave
ret
ljmp
in
aas
pop
dec
xor
xchg
mov
std
out
shl
out
cmpsb
into
jae
cltd
mov
xor
or
hlt
push
push
mov
in
push
and
pop
cmp
shlb
stc
popa
mov
xchg
mov
xchg
and
jmp
dec
inc
push
sbb
fwait
insl
testl
ret
ret
inc
shlb
inc
movsb
int
jae
fcmovb
movsl
dec
andl
pop
jae
aas
dec
pop
sbb
dec
mov
aas
sarl
imul
sub
jp
xchg
xchg
cwtl
jge
inc
sub
inc
or
xor
pop
aam
js
cmpsb
or
pop
xchg
jmp
mov
pop
inc
mov
imul
sub
mov
std
rcrb
lock
jbe
inc
cmp
out
vaddsd
dec
push
xor
push
test
pop
loop
sbb
lret
push
outsb
call
dec
sbb
rolb
dec
cmpb
dec
decl
popf
and
mov
test
dec
adc
scas
les
xchg
cmp
aad
mov
sti
xlat
jl
out
inc
ljmp
scas
mov
jl
insl
insb
scas
frstor
sub
xor
sub
out
dec
jmp
sahf
add
int
lcall
loopne
fisubrl
je
mov
sub
repnz
cmp
test
cld
pop
and
cmpsl
enter
movsl
inc
fidivs
rolb
mull
pop
push
mov
adc
mov
jle
shl
jns
fwait
jg
rclb
popf
inc
std
mull
movsb
fsubp
into
jp
cmp
in
sub
repz
jle
pop
inc
outsb
cmp
adc
pop
shrb
fs
sbb
bound
inc
push
addr16
sbb
xchg
aad
in
lods
or
loope
and
push
push
aas
mov
into
cmpsb
xchg
sub
mov
rcrl
mov
lret
pop
pop
and
out
sbb
mov
push
rep
outsb
fldt
xor
add
out
push
movsb
mov
movhps
gs
mov
mov
adc
out
pop
test
icebp
int3
cltd
fistpll
mov
lea
jmp
popa
mov
lret
cmp
and
or
repz
xor
sarl
lahf
aad
mov
and
dec
cmc
mov
imul
xlat
out
mov
push
mov
mov
fmul
adc
testl
xchg
addr16
out
mov
or
js
mov
cmp
xorb
add
cwtl
stc
lds
repz
sti
xchg
popf
sbb
test
out
or
jb
jbe
xor
and
xchg
fisubs
mov
aad
jecxz
mov
sub
and
pop
add
xchg
mov
in
pusha
mov
push
mov
push
push
mov
push
imul
fsts
sbb
inc
sahf
or
cs
push
imul
jecxz
mov
pop
in
rcrl
add
shlb
dec
pop
pushl
mov
fnstsw
aas
fwait
xor
aad
movsb
mov
add
loope
nop
cmp
xchg
cwtl
add
pop
xorb
mov
xchg
xor
push
daa
xlat
je
dec
mov
clc
push
stos
sbb
les
dec
lea
pop
stos
dec
inc
popf
dec
or
xchg
fdivrs
pop
pop
mov
cmp
inc
jne
push
and
ja
or
or
repz
aam
popl
and
loopne
xor
push
xchg
or
mov
xor
inc
outsl
dec
lods
pop
stos
std
sbb
cmp
lods
shlb
cwtl
mov
xchg
pop
sahf
aaa
lahf
repnz
pop
ds
cld
outsl
mov
push
test
pushf
lret
inc
sub
cmp
movsl
fwait
jnp
or
les
or
enter
popa
add
pop
xor
adc
or
mov
jmp
mov
mov
jno
fadd
and
mov
mov
cs
shrl
scas
iret
popf
mov
outsl
and
jns
inc
in
push
adc
xor
mov
jmp
push
cltd
pop
loop
sbb
sahf
sub
popa
mov
add
adc
outsl
or
cltd
mov
stos
in
mov
mov
dec
mov
jo
das
cwtl
mov
decb
inc
dec
pop
ljmp
mov
js
test
jmp
push
mov
jnp
inc
lret
aaa
pop
inc
in
jmp
mov
push
into
dec
xor
int
mov
mov
push
stc
add
sarl
ret
inc
ljmp
mov
dec
jp
dec
lret
mov
shrl
push
mov
xchg
lcall
ds
ret
mov
rcll
mov
shr
xor
data16
xchg
cmc
mull
mov
sub
imul
sub
ret
xchg
xchg
and
imul
adc
mov
cli
push
roll
lock
loopne
mov
adc
mov
jns
pop
jp
in
pop
cs
add
movsl
insb
dec
mov
shl
xchg
jge
mov
test
push
mov
gs
popf
push
sub
jnp
add
pushf
dec
xlat
or
push
add
data16
mov
mov
jmp
gs
jnp
testb
adc
cmp
jp
ret
loope
scas
push
xorb
adc
push
or
insb
mov
dec
dec
ds
xor
push
dec
scas
add
pop
inc
dec
mov
or
inc
mov
test
out
inc
or
mov
out
btc
loopne
lret
sub
and
cmp
dec
inc
popa
in
mov
cli
adc
mov
je
bound
jbe
or
pop
xchg
rorl
fwait
add
jle
hlt
pusha
mov
imul
ljmp
je
mov
dec
push
cmp
push
sbb
push
fstps
mov
cmc
sbb
rclb
and
cmp
adc
arpl
sahf
movq
std
cli
dec
gs
or
fcoml
pushf
mov
nop
js
out
ds
jecxz
out
cwtl
js
cmp
mov
pop
sub
dec
jo
iret
jbe
js
cmp
test
sbb
in
fldenv
xchg
or
ja
jl
jmp
jnp
sub
ret
lret
sbb
das
repz
push
mov
fidivrl
cmpsl
xchg
cmp
pop
bound
jbe
lods
lds
inc
xchg
or
aad
outsb
push
cmpsb
xor
adc
fiaddl
add
sub
inc
enter
sbb
pop
xor
mov
push
mov
push
sub
adc
jmp
fiaddl
dec
es
inc
fcompl
negl
cmp
xor
call
jbe
add
and
inc
push
jmp
push
mov
adc
push
pop
and
jnp
xchg
cwtl
pop
mov
imul
pop
pop
ret
mov
push
pop
xchg
andb
fcmovnu
popf
fcoms
andl
jae
cmp
mov
dec
cmp
xor
lock
sbb
lods
push
movsb
pop
aas
jle
mov
imul
cs
scas
sbb
push
inc
jb
cmp
add
decl
jl
popf
adc
je
insl
sarb
lcall
pop
push
mov
data16
pushw
add
out
das
cmpsl
mov
lea
sub
xchg
mov
xor
push
dec
jmp
cltd
adc
dec
push
mov
std
orl
xor
xchg
frstor
pop
ljmp
jle
mov
into
mov
in
mov
xchg
stos
stos
cmp
je,pt
and
loopne
mov
adc
rol
dec
adc
jecxz
ds
pop
adc
or
clc
jns
lahf
in
ja
js
loop
fisttpl
sbb
pop
and
in
push
xchg
mov
aas
fisubrl
outsl
fucomi
aad
ficompl
dec
dec
jl
cmp
ror
add
jbe
xchg
xor
jmp
adc
mov
scas
xchg
shrl
cs
popa
push
in
test
add
xor
inc
mov
sarl
shl
in
add
cmp
inc
xchg
mov
jo
mov
push
jmp
push
and
into
jle
xor
or
aaa
fists
in
mul
xchg
sbb
xlat
lds
mov
push
sbb
out
dec
sub
repnz
and
cld
sub
out
dec
scas
mov
sbb
jb
dec
sarb
cmp
mov
jns
andb
fsubp
sub
sbb
repnz
enter
ret
push
inc
add
push
fisttpll
push
mov
mov
xor
imul
cmp
xor
mov
push
dec
or
push
and
adc
stos
test
imul
mov
das
outsl
push
jecxz
data16
and
push
mov
xchg
arpl
stc
add
andb
in
adc
push
mov
pushf
jl
incl
inc
rcll
fidivs
scas
jl
inc
mov
daa
ds
sub
dec
push
sub
xchg
int
xchg
add
cmp
daa
test
lret
adc
adc
je
pushl
inc
jo
dec
adc
jae
gs
inc
test
push
cmpsl
fucomi
in
fdivs
in
cmpsl
clc
push
mov
pop
test
add
push
testl
data16
sub
cmc
pop
out
adc
and
mov
sbb
xchg
fldt
jle
xchg
mov
adc
cld
add
xchg
ficoms
leave
dec
scas
lret
mov
xchg
scas
pop
std
adc
scas
gs
stos
sub
or
daa
sub
aad
cmp
pop
sarb
pop
imul
sbb
jb
or
adc
mov
hlt
xor
test
pandn
pminsw
es
pop
add
add
mov
lret
lcall
push
addr16
and
subb
and
sub
jle
insl
push
hlt
fdecstp
sub
push
sti
adc
cmpsl
les
xchg
movsb
lods
iret
gs
adc
insb
sti
pop
xor
lret
movsl
loopne
dec
adc
ss
ficompl
cmp
daa
add
push
sub
scas
les
inc
out
pop
and
or
sbb
adc
mov
xchg
cmp
fstl
sbb
jae
pop
mov
sbb
jl
xor
adc
cli
inc
fisubrs
imul
or
ds
mov
rclb
cwtl
es
ja
dec
and
or
cltd
mov
pop
sub
fwait
xchg
push
inc
cli
mull
dec
cld
mov
loop
or
pop
jp
imul
push
movsl
inc
icebp
lahf
std
add
daa
dec
lods
lret
mov
mov
add
xor
add
jecxz
pop
cmp
jle
cmc
sub
push
add
mov
and
mov
mov
xor
sbb
mov
cld
push
das
xchg
in
and
pop
sub
shll
sub
xor
xor
iret
push
test
xchg
dec
adc
mov
push
add
push
pop
xor
enter
sti
loopne
out
cmp
into
adc
xchg
ret
jg
adc
push
fnstcw
pushf
jg
add
cs
push
add
repz
icebp
les
and
mov
ret
mov
les
add
pop
and
int
subb
mov
push
sbb
jecxz
dec
jno
das
sub
outsl
or
loopne
imull
test
sub
sbb
mov
in
lret
push
mov
arpl
sarl
mov
ljmp
push
cwtl
dec
pop
sbb
dec
xor
push
sti
sbb
sbb
cli
ret
xchg
sub
or
fsubrs
js,pt
outsb
shll
cmpl
lock
inc
and
scas
daa
pop
pop
lret
xchg
test
pushf
roll
dec
jns
xor
fst
cmpsl
adc
shrb
or
sub
jae
mov
ja
mov
popf
popa
enter
fs
repz
leave
fbstp
ljmp
inc
scas
mov
clc
push
mov
and
test
xchg
jecxz
mov
dec
inc
scas
dec
fwait
lret
adc
jae
sbb
xchg
pop
addl
arpl
repnz
outsl
insl
cmp
sbb
mov
mov
or
nop
pop
cmp
lahf
inc
lret
dec
add
nop
push
fildll
jge
fldcw
lds
cmpsl
imul
add
jns
sub
inc
adc
cmp
out
and
call
rcrl
mov
adc
das
jge
testl
jmp
in
dec
pop
outsb
jnp
in
sub
ret
sub
inc
imul
jmp
lcall
mov
add
push
push
sub
xor
inc
mov
bound
jne
dec
js
call
cltd
mov
insb
sbb
stos
adc
fcomps
pop
and
and
bound
lret
sahf
pop
dec
sahf
jne
int
jns
jg
pop
mov
mov
fnsave
ja
adc
pusha
lods
adc
jnp
mov
insb
adc
stos
adcl
popa
in
js
inc
pop
sub
out
cltd
add
popl
movsb
pop
call
add
mov
pop
je
pop
popf
sbb
xlat
push
out
test
cmp
xchg
jle
fidivs
cmpb
mov
inc
push
out
dec
lahf
loop
cmp
les
stos
dec
ljmp
push
addr16
pop
or
testl
loop
push
test
mov
sub
xchg
nop
cltd
js
aas
mov
pop
inc
sbb
push
inc
xchg
insl
in
adc
data16
dec
mov
popf
es
xchg
xchg
xchg
mov
cmp
insl
lea
outsb
popf
inc
pop
xor
sbb
or
add
in
aas
out
vpcmpeqd
mov
cld
mov
add
jo
test
xchg
mov
push
xchg
inc
cmp
mov
and
mov
and
xchg
stos
clc
jb
push
test
xchg
push
pushf
in
out
mov
orb
enter
f2xm1
es
shl
ret
inc
daa
ffreep
sti
fldenv
fsts
mov
push
adc
mov
adc
sbb
mov
push
mov
call
mov
jmp
xor
push
inc
rclb
sub
xchg
inc
in
mov
push
shlb
dec
or
jnp
outsb
orl
outsl
ljmp
xchg
loopne
or
mov
stos
hlt
jecxz
add
add
cmpl
xchg
or
jl
sbb
pop
or
roll
mov
mov
jb
aad
xchg
dec
pop
and
sub
daa
test
jbe
push
xor
adc
imul
inc
lret
js
loopne
outsb
or
pop
jns
aad
or
rol
dec
pop
mov
push
test
pop
push
aas
scas
mov
mov
cmpsl
jb
ficoml
adc
pushf
fisubl
sbb
pushf
test
insl
or
mov
fs
sub
js
dec
sub
dec
xor
lret
dec
in
adcb
add
jbe
xor
out
pusha
adc
add
xchg
lahf
cld
repnz
mov
test
xchg
cltd
enter
mov
lcall
test
enter
stos
rorb
popa
dec
mov
push
ljmp
cs
out
adc
add
jg
lods
and
fldt
aad
lods
call
ss
pop
fistpll
pop
dec
lock
mov
cmpl
enter
aaa
mov
iret
lock
or
ss
lods
cmpsl
cmp
push
mov
and
mull
mov
data16
sub
mov
das
cmp
mov
jae
roll
gs
jb
ds
mov
fisttpll
mov
mov
push
iret
addr16
data16
faddl
xchg
andl
dec
push
loope
sbbl
out
inc
or
inc
jp
mov
sbb
jge
push
push
cs
inc
cld
test
jp
cmp
in
movb
enter
in
xlat
repz
push
adc
dec
or
jo
sub
lods
out
loope
xchg
sub
pop
aad
loope
xor
or
adc
enter
sti
lods
ficompl
into
xchg
fistpll
jmp
sub
packsswb
nop
loop
mov
dec
jmp
stos
ja
xor
xor
fwait
mov
bound
inc
dec
stos
xor
icebp
jae
pop
mov
lods
xor
or
clc
xor
sbb
adc
out
inc
lret
in
rcrl
xor
imul
arpl
push
aaa
sub
shlb
cltd
clc
cli
pushl
in
mov
jmp
mov
pop
addr16
iret
sub
jp
or
stos
roll
loope
loop
scas
scas
rcl
mov
sbb
xor
shr
lahf
call
sub
data16
das
cld
dec
es
pop
mov
cli
mov
pop
sub
lgs
jbe
jb
add
jo
cmc
and
int3
push
pop
idivb
fcoms
mov
mov
inc
arpl
mov
or
pop
ljmp
xchg
addr16
hlt
fisttpl
sub
jne
shr
stos
jmp
out
sti
ljmp
and
and
pop
mov
xor
adc
dec
popa
out
les
sbb
mov
imul
outsl
mov
cmp
subl
push
cmp
push
mov
add
pusha
xor
sbb
sarb
mov
jmp
xor
adc
mov
sub
test
xor
sub
stos
decl
arpl
adc
sbb
sub
sar
addl
int3
test
jmp
lods
int3
adc
shl
sub
mov
sub
dec
movsb
mov
movsb
in
xchg
mov
nop
mov
fmull
adc
lret
jae
mov
bound
or
adc
lods
dec
dec
mov
stos
cmp
xchg
sbb
jae
cli
inc
outsb
inc
sub
dec
push
dec
sbb
loopne
call
ljmp
cmp
push
inc
xor
in
shrb
pop
inc
jge
repz
negl
ja
scas
cmp
test
and
mov
pop
jp
push
fldenv
hlt
aam
mov
or
mov
jg
sbb
pop
xor
add
mov
inc
fisttps
push
aas
movb
js
jecxz
je
pusha
cmpb
rorb
xchg
and
adc
jmp
cltd
cmpsl
nop
push
testb
iret
add
gs
inc
pop
frstor
subl
scas
in
mov
hlt
scas
mov
push
add
in
icebp
scas
movsb
mov
adc
jle
mov
or
repz
xchg
in
outsl
mov
xchg
icebp
push
pop
jae
imul
rcll
sahf
popf
and
in
cwtl
sub
lds
jl
pushf
adc
decl
cmpsl
popl
stos
adc
jg
mov
sbb
pushf
pop
jb
mov
jae
fwait
pop
jmp
shl
pop
jb
loop
adc
inc
or
iret
shr
out
pop
or
sbb
mov
stos
ds
mov
dec
sbb
test
dec
insl
scas
sub
mov
test
sub
and
mov
jl
inc
sub
shl
or
xor
test
mov
loop
outsl
pop
lret
pop
test
int
lret
inc
jo
cmp
sub
flds
loopne
popa
out
and
jge
mov
fbld
push
jle
mov
mov
pop
outsl
pop
cmp
push
ficompl
push
xchg
mov
test
fstp
adc
mov
fstps
xchg
cmp
jmp
pusha
and
test
push
sbb
mov
mov
cmp
cmpsl
cbtw
clc
decb
adc
in
xchg
push
lcall
cwtl
or
xor
dec
insb
aad
fstl
xor
mov
cmp
pop
imul
into
jecxz
fcoml
stos
adc
inc
cmp
fcmovnu
lods
cmp
lds
mov
jb
inc
mov
pop
in
sub
cli
test
xor
push
xor
arpl
cld
mov
xor
or
in
mov
add
adc
cmp
inc
sub
inc
cltd
rcll
movsb
fistl
lahf
xor
sub
xor
xchg
mov
xor
stos
loopne
aam
mov
call
push
daa
sub
and
ss
add
orb
ljmp
xor
loop
xchg
push
xor
mov
leave
into
daa
xor
jnp
ja
js
pusha
stos
pop
and
mov
sbb
xor
xor
and
sbb
rorl
add
jmp
pop
int
push
mov
cli
inc
cmp
ficompl
adc
fs
push
mov
nop
pop
add
inc
mov
push
dec
add
sbbb
mov
andb
fdivrl
inc
mov
aaa
xchg
mov
jae
or
mov
lods
pop
xchg
cli
cmp
subl
cld
xor
leave
nop
orl
adc
jbe
push
mov
pop
mov
add
cltd
sub
lea
dec
jecxz
ja
loopne
pop
xchg
inc
leave
jp
arpl
pop
push
inc
dec
ja
out
daa
arpl
mov
scas
roll
int3
js
mov
adc
loopne
in
cmp
out
std
pop
mov
aad
adc
inc
out
add
call
add
in
inc
adc
fucomip
sub
sbb
jo
xchg
jo
repz
fisttps
lds
lds
inc
iret
or
mov
daa
lods
enter
call
pause
test
mov
xor
mov
aaa
mov
repz
push
popf
fstpl
repz
mov
add
sbb
fnstcw
movsb
jp
fisubrs
or
icebp
ror
sub
dec
rclb
shll
dec
mov
out
test
rcl
mov
sahf
pop
incb
lret
test
jp
jb
shrb
test
lock
fsub
sbbl
loop
in
arpl
adc
dec
inc
or
pushf
push
mov
xchg
fs
sbb
andb
outsl
jmp
inc
jl
cli
outsl
scas
jge
push
dec
adc
or
inc
nop
sbb
add
cmpsl
xchg
ljmp
or
inc
lods
xchg
cwtl
mov
test
add
xor
pop
xor
sti
cwtl
inc
sub
push
test
adc
cmp
inc
dec
jnp
adc
hlt
aas
scas
jl
inc
sub
pop
dec
push
mov
rcr
popa
push
sub
push
xchg
rorl
shl
rcll
mov
dec
clc
push
pop
cmp
roll
add
test
daa
loop
cmp
and
mov
push
pop
clc
push
cs
test
mov
inc
mov
xchg
fwait
add
rclb
aam
xchg
adc
push
pusha
xchg
cld
jg
xlat
fabs
xchg
adc
mov
ss
notb
test
inc
push
mov
mov
cwtl
sub
out
imul
aam
loope
sub
mov
push
cmc
adcb
add
xor
movsb
xor
pop
xor
pop
es
adc
ja
andl
pop
inc
scas
lods
xorl
cmc
loope
mov
loopne
xchg
jnp
xchg
dec
xor
push
jecxz
add
pop
das
sub
cmpsl
cs
mov
fsubr
push
push
mov
mov
jne
test
shll
mov
jne
aas
fcom
pusha
call
lods
push
cmpsb
pop
mov
subl
jle
aas
mov
add
inc
sub
or
inc
push
adc
xchg
hlt
add
shlb
mov
cs
hlt
mov
lock
ss
jbe
ja
enter
pop
jae
or
cmpsb
cmpb
add
adc
pop
imul
out
cmp
xchg
mov
stos
dec
pop
jge
fpatan
xor
aad
push
loope
pop
mov
movsb
aas
mov
push
ja
rol
mov
leave
xchg
adc
mov
xchg
xchg
or
push
and
outsb
push
sti
sbb
addr16
sahf
into
lahf
mov
dec
dec
mov
mov
dec
ret
mov
rcll
fcomps
push
inc
out
call
sub
jne
mov
pop
jmp
mov
and
shll
or
push
jnp
mov
mov
dec
xchg
lock
cmp
imul
icebp
and
mov
and
scas
mov
shlb
adc
mov
sub
jb
insb
gs
testl
jne
sarl
lds
xchg
and
mov
outsl
mov
sub
shll
cmp
popa
push
popfw
gs
repnz
in
into
aas
sub
mov
cmpb
sub
xchg
sub
push
cmpsl
divl
les
in
and
add
add
insl
cwtl
icebp
loop
popf
scas
fs
xor
jge
push
ret
dec
dec
test
pusha
jne
out
stos
or
cmovb
pop
sarb
pop
ss
roll
mov
sti
add
mov
fsubr
mov
stos
loop
fs
je
mov
jns
shrl
xlat
add
jmp
ss
test
daa
inc
cmpsb
sbb
sub
enter
rorb
movsb
aas
sub
xchg
imul
pop
outsl
xor
in
adc
mov
jnp
es
or
jne
rcrl
arpl
pop
je
mov
add
test
add
jae
cld
imul
mov
push
into
lahf
xor
mov
lock
inc
adc
daa
sub
and
sarl
add
fcomp
jge
in
lahf
cmp
pop
xchg
outsb
fists
cmp
call
ja
outsl
scas
test
pop
int3
dec
push
sub
inc
add
test
das
leave
cmp
pusha
sub
pushf
mov
jmp
sbb
lock
cmp
ror
test
clc
mov
sub
sbbb
mov
fdivs
aad
xchg
lret
pop
add
andl
cmp
fmull
dec
ja
outsb
jmp
mov
pop
into
sub
mov
push
cs
addb
outsl
cltd
pushf
jo
or
xlat
push
repnz
lret
in
pushf
shl
jmp
mov
aad
in
stos
repnz
xchg
inc
scas
ret
in
cld
sbb
lds
mov
jge
std
test
mov
mov
add
out
xchg
push
sub
mov
cs
xchg
xor
mov
push
pop
testb
in
int3
push
pop
and
fnsave
dec
jno
subb
inc
xor
hlt
sbb
or
mov
push
pop
mov
sub
push
popf
or
push
mov
mov
and
insl
imul
bound
imul
and
ret
cs
aaa
lds
push
sub
pop
addl
adcb
add
stc
dec
pop
leave
and
pop
dec
pop
mov
loopne
sbb
test
scas
ret
lods
stos
sbb
pop
adc
subb
add
pushf
ljmp
mov
sbb
push
aaa
dec
test
xor
fmuls
and
push
lcall
in
aad
or
xchg
mov
mov
mov
aam
mov
cmpsl
sub
pop
adc
inc
sbb
je
dec
xchg
rcll
setae
lcall
iret
jne
push
lcall
push
and
faddl
in
dec
das
into
lds
xchg
es
xchg
xchg
fistl
das
es
mov
and
addb
loopne
jne
mov
call
lds
dec
xor
lods
mov
push
adc
cmp
sub
jg
loopne
in
mov
ja
gs
inc
jg
sbb
fsubs
mov
push
movsb
mov
jmp
pop
fdivrs
lock
shlb
push
jb
add
cs
test
sub
cmpsl
movsl
mov
sub
stos
xor
or
jns
mov
push
add
mov
adc
pop
in
and
hlt
fldt
adc
imul
xchg
popl
in
lret
push
stos
test
in
movsl
or
mov
add
mov
push
cmc
pushf
and
sub
bound
xor
jp
dec
lea
mov
psubusw
out
lds
ret
push
loopne
or
shrl
jnp
xor
push
enter
and
pop
test
fwait
jmp
scas
and
mov
arpl
mov
push
inc
negb
imul
iret
xor
bound
out
popa
lods
cmp
mov
pop
mov
fistps
sbb
adc
dec
xchg
push
mov
repz
sbb
pop
mov
adc
dec
repz
imul
mov
jg
cli
out
call
rcrb
adc
and
cmpsb
cmc
cs
aad
jb
cmpsb
fwait
cmpsl
pop
rolb
rorb
xchg
adc
or
mov
repz
xor
xor
push
mov
rcr
jmp
pushl
cmpsl
xchg
fdivl
sub
sub
lds
push
lock
or
inc
dec
das
mov
mov
sbb
negl
shr
xor
pop
scas
sbb
das
add
jle
mov
inc
push
mov
jbe
fbstp
xchg
xor
pusha
push
mov
inc
or
subb
lret
xchg
adc
aaa
in
cltd
test
mov
xchg
shlb
or
push
clc
jmp
adc
rorb
adc
add
test
scas
push
ja
push
popf
xchg
notl
jp
std
scas
test
adc
lds
sbb
iret
imul
adc
jl
ret
lock
jge
and
add
mov
mov
pop
cmp
jl
in
divl
jg
inc
gs
out
push
jbe
pop
adc
jae
xchg
and
out
jge
imul
cmp
in
sbb
insl
xchg
cltd
push
pushf
push
mov
mov
mov
clc
pop
push
scas
cmp
xor
or
xchg
scas
sbb
xor
dec
lcall
idivl
push
mov
sub
test
nop
sub
stos
into
xor
fildl
push
xlat
outsb
sbb
sub
mov
cs
pop
mov
sar
xchg
mov
mov
jge
mov
dec
jbe
and
lods
jmp
out
loop
cmp
mov
mov
fs
faddl
cmp
mov
jbe
out
jp
inc
inc
aaa
test
pop
cld
jecxz
mov
inc
cmp
and
dec
xchg
nop
ja
icebp
push
xor
mov
mov
lock
adc
insl
flds
mov
cmpsb
mov
and
dec
sbbb
gs
or
jbe
inc
imul
imul
hlt
pushw
pop
imul
fists
jno
mov
pop
mov
rep
shll
jbe,pn
ret
stos
and
aaa
into
loop
xor
and
push
out
pop
mov
add
lea
mov
inc
loope
out
mov
xchg
and
pop
jns
cmpsl
bound
jns
loope
subb
or
ss
aaa
cwtl
xchg
jo
and
test
into
cmp
mov
jle
fldcw
mov
mov
mov
test
jle
icebp
popa
test
and
cmp
xor
pop
mov
jno
movsb
outsl
fistl
xchg
sbb
inc
inc
lcall
inc
mov
jge
inc
adc
mov
jno
mov
or
mov
insl
mov
xor
push
mov
push
lock
imul
sahf
pop
xchg
xchg
cld
inc
add
mov
sub
xadd
fwait
cmp
xchg
roll
dec
aas
jecxz
fs
fstl
outsb
daa
sbb
lods
adc
ret
inc
adc
ds
sbb
loopne
inc
sub
test
es
test
dec
xor
loope
pop
int3
push
ret
push
addr16
xor
xor
lahf
bound
hlt
pop
test
xor
sarl
or
leave
pop
push
pop
pop
lret
js
into
stc
cmp
roll
adc
add
inc
mov
out
push
fcomps
dec
outsb
repz
adc
aas
loop
xchg
xor
adc
jg
inc
mov
test
mov
aaa
mov
das
cmp
add
add
lods
adcl
xchg
addr16
jp
push
jbe
and
subb
imul
mov
push
mov
and
sbb
stos
movsb
xor
add
push
xchg
adc
sub
fadd
es
add
mov
sbb
cld
mov
push
rcrb
cmp
cmp
and
imul
or
xchg
out
sub
cltd
pop
add
dec
xor
pop
push
jb
xor
iret
mov
jb
test
cmp
sarb
push
sub
fwait
jno
fsubrs
daa
xchg
inc
scas
or
mov
inc
inc
jne
xchg
hlt
mov
cmp
pop
inc
mov
mov
push
test
xchg
xor
cmp
cltd
mov
call
mov
call
xchg
add
xor
arpl
mov
and
push
mov
or
xlat
add
xchg
dec
pop
cs
pushf
insl
pop
push
xchg
addl
lcall
cmc
fistpll
call
roll
mov
lret
mov
mov
pop
push
jle
out
cmp
addr16
mov
idivb
or
dec
sbbb
pop
scas
les
or
lret
mov
jo
mov
sub
test
xchg
arpl
scas
mov
mov
push
add
dec
push
or
lahf
hlt
push
movb
es
mov
push
cmp
cld
jecxz
es
int
push
jno
icebp
test
jg
jb
jnp
rorl
clc
pop
in
adc
ss
shl
inc
pop
outsl
dec
cmpsb
inc
ret
orl
jecxz
jo
mov
xor
and
add
imul
fwait
int
add
ror
aaa
xchg
jno
imul
sbb
sub
movsl
xchg
cmc
aas
leave
pop
xor
popa
sbb
fs
jb
enter
jl
std
push
iret
sbb
xchg
sub
pop
fstps
jno
pop
mov
xor
hlt
sbb
les
adc
cwtl
subl
mov
and
stos
xchg
mov
movsl
sti
pop
push
pop
push
in
movsb
out
ss
adc
xorl
lret
icebp
es
mov
mov
nop
ret
test
add
sbbb
adc
dec
imul
mov
mov
dec
into
lret
imul
pop
mov
jp
enter
push
mov
cmc
in
pop
adc
mov
nop
lods
out
inc
inc
mov
hlt
loopne
push
filds
inc
leave
fiaddl
lcall
roll
out
mov
xor
cmp
mov
js
mov
mov
inc
sub
xchg
in
arpl
arpl
push
cmp
push
lcall
jnp
dec
es
xchg
hlt
repnz
les
addb
fiaddl
mov
dec
dec
add
xchg
sbb
jne
inc
adc
jg
jp
pop
adc
jno
cmp
sbb
and
add
xor
add
pop
test
xchg
rcrl
ljmp
jg
inc
ret
fildl
outsl
dec
insl
les
mov
dec
xchg
dec
shll
push
xorl
loope
stos
jmp
in
xchg
andl
jno
cld
out
aaa
in
fwait
ljmp
sbb
or
mov
jne
jecxz
sub
or
pop
push
mov
js
inc
aad
repz
push
jne
aas
jecxz
imul
sub
ss
inc
or
popf
cmp
int3
xchg
jge
addr16
jbe
imul
test
jl
inc
popa
push
pop
push
insb
cld
aas
sbb
out
pop
jl
movsb
divb
sub
imul
in
and
pop
int
add
mov
stc
or
inc
adcb
jbe
lods
mov
or
push
fstl
pop
mov
ja
xor
inc
ja
sbb
ss
test
je
jno
cli
sbb
sbb
adc
jmp
mov
test
push
out
jmp
xor
rcrb
xor
nop
pop
icebp
pop
mov
mov
in
call
cmp
or
and
mov
mov
stos
mov
mov
pop
push
addr16
leave
cmp
mov
adc
into
add
sbb
imul
xor
jne
sti
adc
pushw
push
popa
jns
mov
xchg
mov
mov
test
or
mov
rolb
jb
sub
fst
mov
repnz
xchg
insb
pop
dec
popa
jecxz
cmp
addr16
lcall
scas
xchg
xchg
lahf
insb
and
and
mov
or
ret
jnp
xchg
mov
andl
mov
ror
daa
push
scas
sbb
js
mov
xchg
adc
popa
daa
mov
fucom
sahf
mov
repnz
jnp
push
mov
push
imul
into
sbb
inc
push
cmpsb
cmp
adc
rclb
inc
andb
mov
movsb
adc
pusha
into
aam
nop
push
inc
rclb
psllq
or
lea
aaa
add
or
rcrb
lods
lds
scas
dec
shlb
fstpl
cmpsl
pop
xor
or
in
mov
sbb
out
fbld
inc
cli
inc
mov
and
jmp
cmp
in
xchg
popa
mov
mov
repnz
and
adc
enter
jmpw
cmp
mov
jno
cwtl
cwtl
xchg
repnz
aaa
scas
mov
cmc
push
in
out
mov
push
inc
mov
sti
sub
mov
pop
and
out
nop
je
inc
aad
lcall
mov
js
mov
add
xchg
push
je
insb
dec
outsb
aaa
out
cmp
add
cltd
mov
cs
enter
push
cmc
cmp
xchg
lret
inc
fidivs
js
jg
pop
mov
cmp
idivl
pop
mov
jbe
xor
movsb
dec
inc
inc
out
sub
mov
jno
or
les
cmp
out
or
js
shrl
sar
mov
sbb
ja
je
mov
pop
int3
iret
pusha
movsb
add
push
fisubs
popf
sti
sbb
xorb
icebp
sub
xor
lea
lds
xchg
pop
test
aam
stc
mov
je
clc
jb
pop
mov
dec
jmp
std
pop
push
mov
insl
jle
data16
lret
pop
mov
mov
sti
add
popl
lods
pop
adc
jbe
gs
sub
lea
pop
daa
sub
int3
add
flds
dec
cmpsl
sub
rolb
out
jl
jns
inc
fs
and
cmp
or
xchg
fs
cmpsl
xor
dec
daa
and
cmpsb
push
mov
outsl
fs
in
test
cli
dec
or
xor
hlt
mov
sbb
leave
push
xchg
cwtl
xor
sub
shrl
adc
lret
cmp
test
add
xchg
and
adc
sub
pop
xchg
add
test
adc
sbb
sbb
xor
push
lea
cmpsb
xor
insb
sub
mov
shlb
in
daa
imul
mov
popa
jg
ds
add
and
lods
dec
mov
pop
fistpll
dec
dec
out
xor
lods
inc
sbb
inc
jo
clc
sub
adc
outsl
or
arpl
push
inc
test
pop
mov
mov
mov
pusha
or
les
and
sub
iret
dec
daa
add
icebp
aam
sub
sahf
dec
cld
imul
stc
repz
orb
pop
mov
popf
shrl
out
adc
das
bound
adc
mov
mov
inc
cmp
test
inc
xchg
scas
mov
pop
cltd
stos
pop
push
rcl
popa
sahf
inc
outsl
pusha
dec
inc
push
xor
or
frstor
jae
inc
mov
js
mov
cs
add
addr16
adc
mov
dec
dec
pop
fwait
inc
or
mov
popa
es
sbbb
cmp
imul
cmp
mov
push
fwait
cli
push
pop
aam
int3
pop
xchg
pop
icebp
xchg
pop
add
mov
mov
mov
hlt
out
cmp
icebp
shll
mov
arpl
fidivs
in
jmp
jg
adc
hlt
fs
mov
mov
cmc
sbb
xchg
jne
pop
push
xor
xchg
mov
lcall
dec
mov
pop
adc
loopne
repz
or
adc
pop
mov
inc
sbb
lea
hlt
lcall
adc
and
call
xchg
ljmp
enter
add
loop
push
push
scas
pop
or
ds
cld
in
cmpsb
sub
adc
push
orl
pop
lea
push
and
cmpsb
mov
imul
sub
addr16
std
or
xchg
mov
or
out
pop
add
push
pop
xchg
bound
imul
fists
mull
xchg
inc
mov
mov
pushaw
lret
mov
mov
cmpb
xchg
lock
adc
cmp
rcrb
jne
pop
lock
pusha
pop
push
subb
jle
add
fsubs
push
dec
jmp
aam
leave
subb
sahf
push
test
push
mov
pop
int
mov
fnsave
mov
pop
insl
jo,pt
push
mov
jecxz
cmp
cmp
sti
cmp
inc
or
sub
xchg
push
imul
inc
stos
lods
jnp
adc
movsb
sub
and
clc
add
data16
stc
adc
pop
xor
adc
jns
sub
lods
jne
adc
fidivs
dec
fdivrl
es
cmp
push
mov
xlat
cmp
mov
repnz
or
ljmp
jg
fidivrl
bound
fists
lahf
mulb
mov
lds
repnz
jmp
scas
int3
jne
lea
rclb
arpl
pop
jae
adc
dec
mov
pop
das
int
sbbl
lods
jmp
lds
mov
dec
lret
scas
xchg
std
jp
lret
mov
lods
and
and
test
adc
rcr
sbb
imul
sahf
pop
or
in
adc
mov
mov
mov
adc
mov
fistpll
push
sbb
push
cmpsb
sarl
add
pop
imul
cld
cmp
pop
push
or
ss
mov
xor
pop
bound
cmp
or
out
mov
pop
mov
gs
pop
mov
push
sti
test
cmp
repz
ja
cli
outsb
cmp
lcall
out
imul
daa
sbb
sti
jg
fst
sub
or
mov
in
addb
in
pop
fs
xor
lds
jb
jae
and
popa
jmp
test
adc
pop
inc
mov
mov
test
ficoml
push
popf
aas
out
push
xor
cmpsl
jmp
ja
daa
push
icebp
outsl
xor
cmpsb
mov
xchg
mov
orl
pop
enter
inc
pop
sub
push
xor
or
sbb
add
scas
test
sbb
adc
outsl
in
sbb
inc
add
xchg
stos
aam
pushf
jae
rorl
mov
pop
jb
adc
push
mov
xlat
cmc
test
pusha
and
pushf
or
cmp
or
add
jne
fcomi
in
stc
gs
daa
inc
pop
test
push
xor
sti
adc
mov
push
cmp
inc
cmp
mov
int3
and
arpl
fnstsw
mov
fnstcw
jmp
loope
ds
xchg
fwait
mov
rcll
test
ror
jecxz
mov
in
hlt
je
shlb
mov
push
jp
in
movsl
rep
outsb
ds
pop
inc
sub
enter
push
aas
out
mov
outsb
fisttpll
lock
fisubs
mov
and
rcrl
outsb
int
adc
stos
lea
ja
ror
fwait
push
push
adc
jno
adc
inc
shlb
mov
test
iret
bound
lods
pop
cmp
sub
and
and
sarb
lcall
packsswb
aam
cs
adc
dec
das
mov
daa
xor
test
inc
and
dec
adc
insb
insb
jmp
push
mov
pop
shll
loope
ss
enter
popa
jnp
xor
out
fucom
ljmp
rcrl
adc
inc
movsb
mov
mov
jae
or
mov
js
push
mov
arpl
sahf
push
mov
jnp
jle
pop
in
jecxz
in
inc
scas
mov
fdivs
out
mov
add
push
fisubrs
or
sahf
adc
fwait
dec
xchg
pop
push
es
inc
mov
mov
les
shr
les
cmovo
jb
inc
leave
xor
push
es
add
int3
movsb
inc
jo
imul
or
adc
dec
pushf
or
push
xorl
clc
mov
bound
sub
in
mov
or
add
xor
pop
shl
scas
push
jns
rcrl
push
icebp
and
sub
cmp
xchg
cltd
mov
jns
hlt
mov
jg
push
jne
jo
lds
mov
fistpll
mov
push
stc
sbb
cmp
jns
sbb
jnp
jg
jge
lods
pop
lods
xor
fisubrl
add
push
rcrb
sub
aaa
in
scas
fisubl
xchg
mov
xor
stc
and
lcall
test
in
jb
cmpsl
and
add
lret
mov
add
jp
adc
xor
jno
ljmp
dec
mov
sub
repz
enter
sbb
and
dec
add
sbb
ljmp
aas
aam
sub
mov
or
out
loop
fadds
or
sbb
scas
sub
sbb
dec
add
push
pop
and
inc
jp
mov
adc
in
pop
jbe
or
je
push
add
pop
lods
dec
pop
xchg
scas
or
popa
int3
add
orl
pop
sbb
and
cld
repnz
je
orb
fcomps
or
or
sbb
aas
mov
sbb
fwait
outsl
pop
dec
pop
getsec
sub
and
lea
scas
mov
cmpsl
push
ja
aaa
dec
dec
mov
pushf
stos
mov
jl
pop
mov
xchg
mov
in
js
sub
cmp
dec
dec
ret
int3
xchg
lods
int3
add
pop
xor
dec
sub
aam
fdivr
xchg
sub
jle
xchg
cli
ja
in
xlat
into
pop
adc
fstpt
dec
iret
je
mov
in
and
inc
cmp
xor
adc
iret
and
int3
push
loope
push
adc
pop
dec
es
jne
push
dec
stos
cmp
out
outsb
pop
cmpsl
mov
inc
fwait
sub
jg
ret
cmp
or
in
es
dec
jno
mov
out
sub
mov
out
pop
test
mov
sahf
pop
sub
fsubl
mov
mov
lods
and
xchg
mov
aam
ljmp
pop
cmp
shl
dec
mov
jae
jb
and
loop
int
xor
xor
mov
mov
push
outsb
loop
dec
call
cmc
icebp
jmp
sti
inc
stc
sbb
add
mov
int3
insl
popa
out
lock
ret
ret
cmp
ret
mov
lcall
arpl
js
fucom
xor
movsb
fwait
jmp
cmp
adc
sub
testb
das
scas
cmpsb
pushf
and
cmpl
shrb
rcrb
test
or
mov
jae
inc
mov
dec
pop
in
fwait
mov
xchg
js
cmp
dec
push
pop
dec
stos
add
xor
and
adc
xchg
enter
mov
testl
loopne
jae
cmc
push
in
stos
in
inc
sahf
inc
test
bound
inc
daa
push
jb
fists
xchg
call
or
imul
hlt
cld
test
sarl
jno
in
jmp
loopne
mov
and
pop
add
push
gs
or
or
jp
adc
adc
fmul
popf
push
inc
loop
mov
push
adc
jl
push
add
push
in
rorb
sbb
gs
cmpsl
mov
or
sti
clc
sbb
popa
addr16
mov
lcall
scas
je
jl
inc
sub
jb
cmc
pusha
in
sub
clc
icebp
pushf
pop
xchg
pop
sbb
cld
aas
sbb
pop
adc
cs
xlat
fdivrs
sti
fwait
pushfw
jns
gs
mov
or
in
jns
stos
mov
pop
data16
out
push
aam
mov
fucom
pop
and
mov
imul
sbb
inc
popa
arpl
adc
push
lcall
cld
push
and
push
lret
pop
sbb
mov
adc
jmp
sub
cmp
cld
add
xor
jmp
jo
pop
insb
lahf
pop
jae
inc
xor
pop
fsts
test
sti
pop
mov
repz
lahf
pop
fwait
stos
stc
ret
mov
xchg
jnp
pop
dec
data16
push
adc
mov
std
enter
sbb
mov
dec
popa
jbe
loop
outsl
push
hlt
sbb
lret
in
ret
inc
mov
cmp
test
daa
and
xchg
int
mov
mov
or
mov
push
pop
jne
or
xchg
imul
scas
ss
out
pop
stc
mov
sbb
or
test
mov
and
fisttpl
mov
dec
ss
cmpsb
xchg
inc
mov
sti
and
dec
jne
sub
mov
cmp
xor
ss
dec
mov
imull
stos
jecxz
push
push
push
mov
push
inc
mov
and
dec
push
jge
lcall
dec
fisttpll
aad
int
mov
ret
adc
cmp
cmp
in
jmp
sub
and
cs
xor
mov
xor
push
iret
in
and
sbb
popa
ljmp
cmp
call
mov
dec
xchg
jge
lods
push
incb
orb
adc
jae
push
sbb
add
adc
addl
mov
push
inc
mov
sbb
nop
push
sti
je
xchg
sbb
or
inc
and
movsb
lret
sub
loopne
pop
rcrl
sub
xor
mov
divl
or
or
push
lds
xchg
aaa
ljmp
xor
sub
sub
mov
les
je
call
mov
arpl
xor
aad
xor
shrl
gs
fcomi
xlat
adc
dec
out
jne
jb
pushf
or
es
cmp
divl
rorb
cmp
cmp
adc
out
add
cltd
ret
xor
fmul
mov
mov
popa
cmp
xor
pand
adc
outsl
test
cmp
rorb
in
std
push
dec
lock
ja
in
push
push
fcoms
leave
jo
pop
js
out
push
jno
xor
sub
in
insb
mov
xor
cmpsb
jae
pop
testl
pop
scas
popf
in
fldl
mov
pop
mov
arpl
jle
mov
pop
ret
mov
stc
push
mov
sbb
xor
sub
insl
rcrb
repnz
sbb
jae
sbb
sbb
das
push
idivb
fstl
jbe
test
in
mov
gs
sub
sbb
jg
in
adc
cmp
test
sti
sub
or
push
lock
andl
scas
out
inc
test
movsl
mov
sub
dec
xor
xchg
jb
and
xchg
scas
loopne
mov
je
mov
into
mov
icebp
jle
out
cli
aas
jge
xchg
imul
dec
add
shlb
add
pop
mov
mov
jmp
cld
insl
int
xchg
cltd
lock
adc
test
mov
cwtl
sahf
and
xor
mov
mov
ret
mov
push
repz
and
cmp
in
add
jne
popa
dec
xor
jae
inc
push
push
shr
dec
ss
aaa
mov
mov
pushf
divl
adc
out
jae
sar
xchg
fmul
push
sub
ja
pop
notb
outsl
dec
sbb
idivl
xor
mov
and
mov
fistpl
popa
or
pop
ss
pop
mov
xchg
mov
and
mov
jns
insb
and
dec
push
arpl
dec
and
aas
enter
pop
idiv
rcll
sub
hlt
adc
mov
cmp
add
dec
ret
cld
out
push
pop
lds
mov
lods
push
popf
jmp
rcrl
xchg
jbe
xchg
popl
daa
sbb
cmp
jge
sub
dec
xchg
int
and
in
stc
pusha
out
lds
lds
shll
lret
aam
push
stos
pop
push
fs
call
inc
mov
je
inc
mov
in
mov
push
loop
jae
pop
sub
lods
repnz
lret
aam
outsb
add
addr16
pusha
xchg
insl
pop
incl
xor
push
or
sbb
push
jns
shr
xor
pop
pop
jno
adc
shll
jg
call
stc
sub
jp
es
pop
ds
bound
fnstcw
adc
outsb
ja
or
push
mov
enter
shlb
push
pop
loope
cltd
xor
lea
xchg
sbb
popa
push
in
mov
test
enter
rcrb
cmp
stos
outsl
mov
sti
fdivrs
jmp
lret
jge
mov
push
sahf
stos
lods
mov
fcompl
stc
xor
inc
pop
inc
test
bound
adc
sbb
sbb
xchg
aaa
push
xchg
or
cmp
in
xchg
lret
mov
xor
sbb
dec
push
inc
je
outsl
and
fimull
or
dec
adc
add
scas
xchg
je
or
mov
nop
loopne
adc
or
mov
cmp
testl
out
and
cli
push
sub
mov
mov
andb
add
add
lds
sub
and
jnp
sub
test
dec
jecxz
xor
int
roll
xchg
xor
adc
xchg
mov
sub
jmp
daa
lret
lcall
fiadds
inc
pushf
out
or
loopne
xchg
push
cli
aas
adcl
sbb
mov
mov
dec
add
popf
pushf
sbb
js
xchg
movsl
adc
xchg
lds
pop
iret
push
xchg
inc
enter
aad
fcoml
cltd
mov
sbb
or
sbb
push
sbb
lods
repnz
fidivrs
sub
add
xor
test
movsb
xchg
imul
or
leave
insb
sub
adc
adc
fs
xor
mov
out
jle
and
dec
inc
cmp
cmp
fidivrs
push
mov
in
dec
push
test
cwtl
sub
mov
push
lods
je
or
cmc
xchg
xor
add
test
cs
inc
lret
mov
adc
mov
shrb
divb
sub
hlt
ljmp
pop
xchg
lcall
xor
cld
push
adc
xor
pusha
mov
jg
loopne
push
mov
mov
fwait
jae
outsb
push
push
rcrl
mov
aad
xor
sbb
lods
ds
xor
push
sub
xchg
push
jle
pop
lock
fisubrs
fisubrs
sub
cmp
fisubs
add
cli
and
outsb
inc
mov
out
add
in
shl
mov
outsl
in
icebp
mov
sub
push
jecxz
adc
jnp
pop
sbb
mov
outsb
inc
cmp
mov
cld
push
sti
dec
mov
cld
je
cmp
push
inc
out
inc
aad
dec
loopne
mov
fcompl
popf
imul
mov
subl
mov
loope
cwtl
sbb
std
movsb
call
adc
test
or
out
lret
pushf
xchg
mov
call
cli
popa
out
pop
push
jg
nop
movsb
pop
in
ljmp
pop
mov
jmp
add
aad
push
test
mov
insl
mov
pop
call
out
mov
pop
jo
es
mov
inc
stc
orb
xchg
outsl
jp
gs
adc
adc
ljmp
test
jno
mov
pushf
sub
sbb
imull
stos
shll
pop
fs
jbe
dec
pop
outsl
cmc
xor
mov
mov
jl
fnstcw
dec
dec
xor
es
aam
test
sub
aad
push
jb
clc
pusha
mov
scas
mov
lret
jb
loop
pop
loopne
xlat
lods
or
push
xchg
rcl
cmp
cmpsb
movsb
dec
xchg
jmp
movsb
pop
and
cmpsl
jge
cmp
and
or
ficoms
xchg
jnp
adc
mov
clc
rep
jecxz
jecxz
jg
idiv
aad
out
inc
pslld
negl
aas
push
xchg
ljmp
or
lods
inc
inc
inc
cltd
push
adc
cmpsl
jae,pt
mov
subb
outsb
in
pop
rclb
cmp
hlt
shll
paddusb
mov
cwtl
cmp
jmp
inc
popa
mov
sbb
sub
mov
ss
notl
rolb
mov
std
and
push
jge
je
mov
test
loop
cs
jecxz
or
sarb
hlt
je
push
fisubrs
jne
stc
into
adc
pop
mov
ss
clc
scas
dec
je
andb
adc
pusha
xor
mov
movsb
push
xchg
fmull
cs
fisubl
aaa
test
jnp
mov
sbb
rcr
adc
cmc
in
xorb
cmpsb
push
push
iret
mov
scas
sub
adc
fstl
test
es
mov
push
push
add
or
cmp
mov
mov
mov
dec
dec
add
push
push
cltd
pop
and
loope
sti
pop
sbb
fnstsw
cmp
pop
jb
pop
insl
xchg
ja
faddp
aad
and
and
push
mov
cmp
dec
xchg
mov
push
ljmp
mov
sub
xor
jo
pop
clc
fistps
pop
mov
cld
stos
loop
sbb
jae
sub
pushf
into
stos
arpl
mov
repnz
call
in
loopne
push
aas
test
pusha
jge
pop
mov
mov
xor
loop
icebp
cld
jbe
sub
loope
sarb
jno
dec
or
xchg
lcall
xor
and
inc
jno
stos
outsb
iret
nop
jge
movsl
mov
add
ss
inc
cwtl
popa
sti
xchg
stc
outsb
adc
jmp
or
add
xor
jecxz
dec
mov
xchg
pop
mov
js
test
xchg
sbb
nop
inc
leave
sarb
ljmp
mov
test
dec
sub
and
cwtl
stc
int
sub
push
lahf
stc
jmp
mov
adcl
pop
pop
inc
sbb
mov
out
mov
test
push
fs
inc
mov
xor
rolb
push
xchg
loopne
js
or
inc
push
lcall
je
pushl
in
cmp
push
add
clc
cli
dec
and
adc
loopne
paddb
push
repz
adcb
cld
shrd
xchg
subl
daa
je
sub
adc
cwtl
jp
inc
jbe
mov
lock
mov
inc
push
mov
pop
xor
xor
inc
and
daa
xchg
fs
shrb
shll
mov
dec
or
dec
and
mov
ljmp
mov
and
add
ja
xor
dec
pop
jae
jnp
xor
add
mov
cmp
jbe
inc
jo
xor
push
out
pop
inc
jbe
jle
jnp
adc
and
repnz
dec
sbb
mov
sub
and
dec
pop
in
in
jg
xchg
sub
push
jno
xchg
ret
es
xor
pop
int
mov
cmp
add
add
rcll
inc
lcall
inc
mov
jns
xor
push
fsubs
mov
mov
jo
jns
scas
inc
cmp
jecxz
jmp
sbb
xor
sbb
lret
mov
test
popa
sub
pusha
cmp
stos
insb
xchg
aas
jo
fldt
xchg
xchg
flds
inc
aaa
int3
outsl
pushf
xchg
jb
jnp
adc
mov
loop
add
rcrl
pushf
fs
inc
daa
jbe
fsubrs
push
dec
jbe
push
ja
popa
mov
or
mov
xchg
xor
xor
jno
xchg
and
mov
cs
xor
sbb
in
fstps
stos
push
daa
mov
or
mov
pop
xlat
popa
dec
jne
inc
pop
repz
icebp
ja
xorl
int3
pop
pop
flds
xchg
inc
xchg
cwtl
xor
jmp
add
or
adc
dec
cwtl
and
push
sub
add
fidivl
popa
cmp
popa
call
pop
jp
mov
out
mov
fcompl
clc
dec
shrb
dec
je
call
inc
fists
int3
in
adc
sub
cmpsb
mov
out
ret
xchg
aam
out
in
lret
movsl
fdivrl
ret
adc
nop
sub
cs
dec
cmp
add
es
mov
pop
jg
ret
loope
inc
adc
leave
lods
fwait
dec
xchg
and
xor
cmp
and
std
jp
cmp
mov
fistpl
xchg
inc
idivl
sub
sbb
shll
lods
int3
stos
popf
data16
adc
icebp
test
or
fnsave
mov
mov
and
xchg
loop
arpl
int3
mov
stos
jne
xor
xchg
insl
fldln2
stos
and
cmp
out
fstpl
out
sbb
lret
push
enter
stos
and
pop
int
pop
mov
fstpt
aaa
or
movsl
mov
mov
push
jo
xchg
les
cmp
mov
mov
dec
or
jp
or
and
inc
testl
sbb
jae
jnp
push
outsb
xlat
stos
mov
cmp
lock
cmp
xlat
xchg
ds
fisubrs
pushf
mov
pop
push
inc
and
daa
leave
lcall
adc
sbb
sub
dec
xor
inc
test
lcall
inc
inc
das
lods
lret
jae
adc
pop
scas
dec
push
fidivl
pop
inc
out
jl
into
xchg
push
flds
pop
mov
cmp
cmp
clc
int3
dec
cmp
push
or
cmp
and
xor
clc
insl
pop
test
dec
pop
push
test
shr
insl
inc
stos
adc
dec
movsl
cmp
xor
pop
in
inc
mov
xor
stos
scas
jns
add
mov
mov
pop
adc
sbb
icebp
popf
aaa
js
push
mov
and
jno
push
std
sub
or
call
jbe
mov
out
add
mov
add
xor
mov
data16
dec
jl
add
xor
xor
std
jbe
into
sbb
sbb
mov
mov
enter
into
push
dec
jecxz
push
jg
rol
xchg
and
mov
stc
sahf
incb
fcmovbe
push
arpl
xor
pop
hlt
cmpb
fsubs
pop
cmpsl
pushf
je
shrb
jb
xchg
mov
add
xor
rcll
lcall
loop
aas
cmpsb
notl
bound
and
repz
add
or
andl
arpl
test
inc
dec
push
mov
xorl
movsw
sar
sbb
cmp
jmp
mull
xchg
lock
in
pop
adc
scas
add
ret
cltd
mov
idivb
ret
mov
push
pushf
negl
sbb
and
or
push
rorb
add
xchg
cmp
scas
xchg
mov
xchg
fcoms
lods
adc
push
mov
cmp
jae
pusha
popa
in
xor
mov
pop
ffree
jo
mov
inc
sbb
adcl
jnp
add
xchg
xchg
and
js
mov
sbb
pop
fisttpl
iret
and
out
jno
mov
push
fcompl
flds
pop
icebp
inc
pop
inc
lret
imul
cld
cmp
lcall
inc
pop
fs
mov
aam
push
cmp
int
mov
inc
xchg
xor
outsb
mov
inc
pop
or
adc
iret
cmp
daa
jp
int3
dec
pop
insl
mov
or
xor
hlt
mov
loop
xlat
cli
or
or
addb
push
iret
adc
stos
cltd
xchg
pop
popa
xor
iret
dec
loope
das
xor
pop
lods
jg
fwait
mov
xchg
dec
rcrl
arpl
pusha
adc
std
mov
sub
or
outsl
loop
push
sub
jmp
adc
cmp
sbb
mov
inc
ss
cltd
sub
je
sub
push
xor
jno
sti
sub
adc
idiv
in
adc
std
lods
push
pop
sub
movsb
xchg
data16
xchg
nop
repz
pop
mov
stos
push
fidivl
shll
out
stc
mov
ljmp
and
mov
iret
or
pop
pop
fcos
ja
lock
addr16
lds
out
push
out
lods
mov
insb
loope
dec
adc
push
inc
daa
xlat
mov
jb
test
test
xchg
push
mov
cwtl
adc
adc
sbb
xor
iret
hlt
mov
pop
mov
cmp
lock
adc
mov
and
rcl
inc
adc
out
fcompl
stc
je
pop
or
cld
xchg
nop
fists
mov
arpl
gs
sbb
lcall
imul
jle
dec
push
xlat
loop
jg
or
fistl
pop
pushf
mov
aad
mov
push
sbbb
or
movsb
aam
outsl
lea
in
iret
dec
data16
mov
lods
call
xchg
jne
xchg
les
fadds
iret
jb
decb
lret
add
scas
mov
dec
loopne
sub
pushf
scas
jno
icebp
add
in
cmp
enter
xorl
mov
mov
outsl
mov
mov
mov
lret
and
jle
shrl
fildll
cmp
add
aad
call
add
lret
jo
sbb
imul
inc
outsb
sti
daa
adc
ja
in
jnp
sti
gs
js
sub
or
cmpb
adcl
outsl
bound
sbb
sarb
cmpb
pop
pop
cmpsb
cmpsl
lret
scas
mov
push
ss
dec
scas
test
sbb
dec
aas
imul
fsubrs
mov
cmpsb
dec
test
adc
mov
inc
jo
jl
int
hlt
mov
ds
pop
cmp
sub
and
xchg
inc
outsb
and
shll
push
mov
pusha
repnz
pop
xchg
mov
int3
cmp
dec
pop
test
repnz
neg
jle
cmpsb
mov
jl
xor
push
fdivl
bound
ret
in
cmp
sbb
stc
cmp
into
bound
adc
sbb
subb
ss
xor
es
cmp
sarl
in
push
into
mov
ja
xchg
sahf
es
sbb
lea
ret
aaa
mov
arpl
push
mov
jbe
fisubl
dec
outsl
pop
mov
inc
cmp
sub
mov
in
insb
and
jecxz
sub
test
ja
xchg
sub
mov
and
or
or
jne
test
into
push
addr16
mov
mov
cltd
mov
xchg
push
xor
xor
sbb
es
clc
sbb
push
fsts
mov
sub
pop
push
lds
outsb
std
jo
aas
mov
repz
data16
je
mov
cmp
xchg
mov
gs
push
lods
int3
ret
and
not
cmpsl
push
sbb
sub
xchg
outsl
ja
hlt
inc
add
mov
sbb
lcall
or
enter
sbb
shrb
imull
insb
jl
shlb
iret
dec
fs
movsl
lods
loope
sub
push
jnp
xchg
or
xchg
cwtl
jbe
mov
fdivrp
rcll
sahf
pop
cwtl
adc
jns
push
stos
sub
inc
sarb
sub
aaa
imul
sub
pop
push
mov
and
or
cmp
or
jecxz
inc
inc
jbe
fidivrl
adc
insl
mov
test
into
int3
popf
jo
mov
rcrb
and
or
pusha
or
inc
mov
lods
jmp
mov
mov
shrl
dec
sti
adc
sub
fadd
cmp
mov
dec
sub
adc
adc
pop
lods
cwtl
inc
imul
adc
rcrl
dec
add
aas
and
das
push
mov
loopne
add
dec
add
icebp
mov
mov
or
mov
and
stos
dec
inc
inc
add
push
jp
leave
loop
popl
mov
lock
jle
xlat
test
scas
sbb
nop
test
mov
sbb
cs
sbb
test
sbb
push
inc
add
cld
sti
notb
cmp
push
rcll
add
xor
lods
lret
jns
mov
mov
adc
bound
data16
add
and
or
jae
sub
push
mov
xor
dec
pop
push
or
dec
outsl
push
mov
outsl
in
push
and
sub
inc
int3
xor
pop
pusha
pop
xchg
cmp
mov
inc
cmp
pop
ror
push
movsl
mov
ljmp
movsl
lods
rcr
hlt
aaa
sub
pop
lods
xchg
push
repnz
push
xchg
push
mov
xchg
mov
inc
sbb
mov
mov
popf
lcall
in
mov
sub
lea
adcl
dec
pop
sbb
loope
pushf
lods
mov
push
std
test
mov
orl
clc
outsb
cmp
mov
xor
and
cmpsl
inc
cmp
mov
sahf
adc
sbb
into
dec
jb
lods
push
das
xchg
test
dec
add
test
das
mov
int3
cmc
lret
cmp
rcrl
rclb
jl
mov
enter
lret
fistpll
mov
ret
mov
mov
xchg
lock
or
inc
inc
inc
and
push
stos
xlat
popa
das
fbld
bound
test
hlt
enter
mov
mov
push
arpl
in
xchg
dec
jae
rclb
push
jge
andb
je
cli
sbbl
cmp
mov
sbb
push
dec
pop
or
scas
loop
mov
inc
pop
add
adc
inc
add
outsl
adc
mov
nop
jae
aad
mov
cmp
mov
mov
ja
xor
ficompl
and
aam
nop
lds
xlat
xor
cli
loope
push
imul
or
mov
xchg
lahf
enter
scas
ffree
shll
imul
dec
push
std
add
xchg
dec
jecxz
or
push
stos
mov
jno
fdivs
ljmp
rcr
add
loope
dec
mov
enter
inc
jb
fcoms
jle
repz
jmp
loopne
scas
pop
pop
inc
adc
mov
imull
jecxz
add
or
test
dec
mov
bound
scas
mov
and
jg
mov
xchg
sub
push
stc
repz
fcmovnu
push
or
lods
pop
hlt
mov
mov
pop
xchg
sbb
insl
inc
inc
sbb
or
sub
jge
ja
push
aaa
adc
inc
pop
pushf
xlat
dec
rcr
int
pop
fists
push
xchg
inc
or
dec
jmp
je
mov
adc
notl
mov
inc
push
mov
jecxz
dec
mov
cmc
movl
or
xchg
pop
mov
ret
and
lahf
fidivrs
enter
push
mov
scas
cmp
xchg
test
movsl
fstp
jnp
dec
test
mov
shl
adc
cmpb
xchg
pop
or
lock
lcall
inc
mov
mov
repnz
sbb
dec
les
aaa
xchg
and
dec
or
mov
je
push
push
insl
and
xchg
sub
push
xchg
rol
mov
mov
adc
aam
lahf
lcall
xchg
das
xorl
mov
sbb
xchg
movsl
dec
pop
ret
jno
std
adc
addr16
cs
mov
scas
push
mov
es
jg
jbe
popa
mov
mov
subb
and
push
xchg
movl
inc
xchg
lods
lret
test
ljmp
add
mov
test
aam
cmp
cmp
mov
xor
adc
adc
sbb
and
fldt
negb
hlt
es
nop
xor
pop
or
sbb
jp
sbb
icebp
sbb
fldt
cmpsb
es
push
jns
mov
inc
mov
jg
xchg
push
mov
xor
leave
loopne
xchg
sbb
aad
stos
in
xor
nop
iret
das
mov
mov
movsb
aaa
pushf
lea
jecxz
mov
jb
sub
fistl
sub
mov
aam
cs
pop
mov
and
dec
adc
cli
and
das
add
test
stos
shll
mov
sub
sbb
cwtl
dec
inc
jle
mov
mov
fdivrp
sub
in
adc
jns
ds
jmp
lret
hlt
push
sbb
inc
pushf
and
mov
xor
pop
dec
sbb
add
mov
xchg
hlt
jg
test
int
pop
mov
push
sbbb
sahf
xor
mov
nop
and
shlb
leave
ret
xchg
insb
fbld
rolb
jl
jb
enter
lods
xor
sti
jns
push
pushf
lahf
test
dec
leave
movsb
sbb
cmp
jno
sub
aaa
jo
clc
cmp
shl
mov
mov
push
sti
sbb
test
add
add
xchg
pop
inc
xchg
or
jns
stos
test
lods
mov
stos
arpl
add
add
js
mov
out
cmc
gs
adc
push
sahf
cmp
scas
iret
test
or
cmp
imul
orl
movsb
cwtl
add
pop
dec
mov
adcb
inc
mov
and
fwait
cmp
xor
push
xor
orl
leave
push
jb
adc
jecxz
mov
fcomps
cwtl
jnp
xor
mov
jmp
lcall
cmpsb
mov
mov
xchg
mov
sbb
jnp
mov
mov
dec
mov
adc
cmpsb
arpl
inc
add
aas
mov
sbb
shrl
pop
arpl
rcrb
popf
pop
mov
stc
inc
pop
sbb
dec
or
lea
add
push
xor
cmpsl
sbb
sarl
mov
aam
fsubs
fildll
mov
nop
xchg
cmp
mov
js
fsubrl
icebp
test
fstpl
popf
cmpb
mov
pusha
and
jp
int
mov
adc
mov
notb
add
test
cld
jne
push
inc
stos
dec
cmp
sub
pop
lret
call
out
xchg
and
push
jb
arpl
aam
loopne
adc
stos
jno
fwait
cwtl
cltd
in
nop
push
jns
xor
fwait
and
cli
imul
arpl
fcompp
std
mov
enter
mov
int
les
fldl
pop
jno
or
lahf
aaa
and
mov
sahf
adc
aaa
gs
call
stc
js
movups
test
nop
int3
pop
out
or
pop
add
jns
and
add
loopne
das
jne
out
into
jmp
scas
adc
dec
mov
jne
or
insb
fldenv
int
insb
sbb
or
pop
ret
cmp
movsl
ljmp
push
scas
fcoml
xlat
or
lea
fsts
rcll
push
push
adc
ret
std
out
out
paddusw
cmpsb
xor
pushf
arpl
jae
out
inc
xchg
ret
xchg
fisttpl
icebp
cli
fs
xchg
xor
push
or
pop
sub
pop
cmp
js
dec
sbb
jmp
jp
call
add
push
jb
cmp
sbb
nop
arpl
shrb
cmp
repz
mov
or
jmp
push
shll
mov
rorb
fstl
movl
addr16
or
fnstcw
test
jl
mov
adc
adc
mov
mov
test
das
mov
mov
dec
ficoms
sub
xchg
jne
dec
cltd
sbb
pusha
test
sub
dec
imul
lea
inc
jecxz
add
mov
adc
add
arpl
lret
adc
pop
xchg
xchg
addr16
fs
mov
mov
lock
push
push
mov
xchg
lcall
shlb
jo
mov
into
movsb
pushf
mov
mov
fcom
sahf
push
adc
je
test
call
or
shl
insb
add
inc
frstor
sub
mov
fnstcw
jb
ss
inc
push
lods
rcll
lock
dec
call
mov
inc
popa
iret
jne
add
or
mov
mov
push
out
fidivrl
push
fcoml
fs
sub
or
aas
jo
mov
out
jge
popf
bound
dec
adc
out
mov
push
jnp
jl
adc
inc
cmp
mov
pop
push
int3
dec
mov
mov
adc
xchg
data16
push
pop
out
mov
outsb
jne
pop
leave
insl
or
sub
xor
testb
loopne
scas
clc
shl
mov
pop
insl
push
mov
cld
sub
fwait
aas
xlat
mov
or
in
and
out
dec
enter
pop
divl
pop
rcr
push
data16
aad
rorl
cmp
lea
lahf
sarb
leave
mov
xlat
movl
add
mov
or
cwtl
shll
xchg
and
cmpsb
mov
enter
scas
mov
imul
xor
ss
scas
jg
insl
mov
insb
add
flds
movsb
push
adc
dec
in
pusha
push
stos
jle
fwait
push
mov
shl
imul
mov
xchg
pop
jp
lret
pop
mov
ljmp
mov
push
enter
or
lods
shll
dec
push
jl
cmp
adc
out
nop
mov
jl
jne
roll
jb
inc
lret
jbe
mov
jno
pop
push
fisubs
nop
add
rol
ljmp
test
enter
scas
sub
ja
cmpl
cwtl
or
sahf
pop
fstpt
pop
icebp
pop
stos
mov
lea
mov
inc
push
nop
jns
mov
push
jb
mov
and
hlt
adc
push
mov
push
add
jns
inc
xchg
aas
or
sbb
std
fcmovnb
and
push
xchg
mov
fistps
push
movsb
dec
push
outsl
addb
add
lahf
lcall
cli
cs
mov
scas
sub
mov
dec
push
add
pop
scas
add
insl
jmp
out
rol
cmpsb
cmp
aas
pushf
add
fdivr
push
sbb
scas
inc
xchg
jae
push
mov
pop
and
sbb
cli
fdivrs
cmp
or
in
mov
rcrb
xchg
sbb
pop
lock
inc
adc
in
imul
push
push
fwait
and
cmp
mov
or
fsubrp
mov
dec
lahf
inc
mov
mov
xchg
sbb
test
lock
fcoml
mov
jmp
inc
pop
cltd
and
aas
int3
pop
fucom
mov
int3
dec
push
add
jae
sbb
insl
pop
jae
ds
das
ja
shl
xor
hlt
dec
fnstsw
and
or
test
cwtl
fcomi
cmc
jge
aas
cmp
cli
inc
sbb
cltd
xor
dec
jnp
daa
xor
aam
inc
aad
ffree
int3
and
dec
test
fucomip
bound
lret
pop
xor
cmp
fadds
aaa
test
pushf
push
es
sub
mov
add
fstpl
jo
fidivl
mov
push
ds
xor
cmp
sbb
pop
jecxz
out
and
push
pusha
test
jo
jae
sbb
lds
lods
push
xchg
mov
add
and
adcb
lds
cmp
jmp
mov
pop
in
repnz
jnp
dec
or
imul
stos
das
fldcw
into
xor
adc
int3
mov
adc
scas
fidivs
fdivrs
sbb
pushf
mov
sahf
xchg
dec
fildll
jge
push
jle
or
lods
sub
push
jle
adc
and
mov
xor
int3
adc
rcl
stc
add
adc
or
or
gs
pop
adc
push
or
xor
inc
test
mov
inc
dec
bound
mov
cmp
inc
push
test
add
mov
mov
xlat
fiaddl
jb
ret
sub
jnp
and
stc
out
cmp
pop
xor
cmpl
test
push
jle
ds
and
or
adc
mov
out
test
cmc
pop
shlb
pop
mov
lcall
fcmovb
leave
and
push
aam
mov
pop
out
xchg
mov
arpl
cmp
movsb
xlat
loop
xchg
dec
lock
repnz
movsb
es
sbb
loope
cmp
dec
and
pop
xor
jp
mov
xor
xchg
mov
inc
jbe
push
lret
in
add
or
mov
loop
inc
mov
mov
aad
lock
jbe
in
mov
xor
fiaddl
int
and
sbb
test
in
push
pop
lret
and
pop
adc
test
mov
rcrb
ret
outsl
in
stc
xchg
loopne
aad
mov
jne
lock
lock
push
out
cltd
int3
pop
add
mov
inc
mov
inc
insb
lret
dec
xchg
and
loop
dec
pop
xchg
sub
enter
sbb
leave
inc
fdivs
inc
push
mov
imul
fstps
jo
or
das
popa
dec
jb
je
xor
cmp
sbb
or
and
xchg
cmpsb
outsl
repz
les
cmp
mov
ss
lret
repnz
inc
ja
xchg
mov
mov
popf
pop
stos
in
mov
mov
dec
data16
mov
sbb
fildl
adc
out
stos
sti
jmp
xlat
shrl
jecxz
sarl
add
pop
arpl
mov
into
fwait
and
dec
xchg
push
outsb
dec
addl
pop
int3
leave
int
sub
push
stos
lcall
jg
adc
or
movzwl
lods
mov
cli
movsb
dec
jae
fadds
xor
outsl
or
lret
lret
push
shl
mov
cltd
jb
fdivl
mov
dec
adc
lods
dec
add
pop
mov
sbb
or
add
mov
scas
fldenv
jmp
fnstsw
loop
sbb
cmpsb
std
into
jns
leave
inc
repnz
xchg
data16
je
fcmovbe
mov
mov
ja
shll
and
loopne
daa
addr16
push
stos
mov
cmp
xlat
aas
push
xor
adc
and
sti
out
cld
enter
aas
inc
dec
ja
sbb
ss
xor
in
mov
pop
xlat
out
cmp
movsl
mov
popa
in
std
mov
adc
pop
pop
mov
xchg
dec
movsl
fwait
adc
cmc
mov
xchg
test
repz
int
push
mov
push
outsl
ja
inc
mov
addr16
push
nop
aas
and
and
mov
mov
icebp
insb
jle
cmc
fistl
xor
dec
sub
mov
rol
pop
fs
jge
pusha
aam
pop
push
cmp
jbe
sbb
jle
imul
fsubs
int3
fildll
or
mov
data16
imul
insl
mov
dec
dec
cwtl
test
inc
sbb
ss
int
cmp
sub
js
add
stos
jle
push
clc
les
icebp
add
dec
inc
mov
add
popf
fs
fnsetpm(287
add
sub
sbb
xchg
nop
stc
xor
or
fwait
jmp
es
dec
sti
sbb
inc
cmc
cwtl
mov
add
sbbl
sbb
dec
lock
lcall
mov
int3
loope
aam
and
inc
rcr
dec
push
inc
pop
push
clc
std
insb
mov
cltd
push
setae
jbe
cli
stos
aaa
lret
fcoms
aad
mov
js
adc
aas
pop
inc
mov
xor
sbb
mov
idivl
loope
adc
cmp
loop
mov
mov
jb
sub
rcrl
in
or
push
fisttpll
fistpll
pop
add
push
jge,pt
xor
push
mov
xchg
das
pop
push
mov
jge
fidivs
test
xor
xchg
lods
cmp
ficomps
xchg
pop
mov
sub
popf
push
cmc
cmpsl
std
adc
repz
daa
popf
out
pop
and
cmpsl
shr
fiadds
inc
divb
mov
out
iret
out
sbb
lahf
test
lret
adc
jl
in
sbb
cs
xor
mov
inc
stos
scas
xlat
das
enter
imul
enter
push
inc
daa
gs
test
push
and
mov
pop
sbb
push
inc
hlt
mov
arpl
out
and
push
sbb
xchg
das
aad
setno
fucomp
dec
inc
jne
in
cli
rorl
jo
out
aad
ss
ds
sub
lcall
xchg
mov
mov
lea
js
sub
out
loopne
andl
andb
xchg
std
sarb
leave
or
sete
js
leave
add
scas
cs
sub
popf
movsl
jns
dec
and
das
xchg
jne
pushf
jl
push
movsb
test
cli
test
cmp
lret
int3
pushf
int
xchg
pop
int
add
pop
mov
cmpsl
and
or
cmp
jns
push
loopne
aad
jecxz
sahf
sbb
cmpsl
es
test
cmp
add
jo
jle
adc
lds
sbb
mov
or
andl
imul
ljmp
and
sahf
in
nop
push
andl
les
and
fnsave
insb
ljmp
cmp
js
push
rcrb
sbb
dec
pop
xchg
insl
lret
shlb
xchg
fsts
outsl
sbb
popa
push
sbb
add
fsubrl
loop
int
push
popf
mov
push
cmc
popl
iret
std
dec
lock
sub
cmp
repz
mov
sub
mov
les
cmp
pop
mov
dec
pop
fsubs
daa
test
loop
pusha
mov
jmp
lods
cmp
cwtl
pop
inc
pop
std
gs
pop
or
or
mov
and
loop
rorl
jge
dec
xchg
test
aaa
mov
cmp
mov
sbb
mov
add
arpl
and
shlb
adc
in
and
fidivrl
adc
inc
scas
adc
xchg
mov
loop
sbb
jmp
lea
add
stos
in
into
xor
cmpl
lret
jecxz
in
xor
stos
imul
mov
mov
adc
loop
push
push
sarl
cmp
push
pop
and
sti
jo
rorb
push
mov
aam
aaa
loopne
sbbl
cld
pop
stos
and
dec
or
cld
lret
mov
mul
dec
movsb
addr16
and
pop
popf
les
iret
ret
imulb
out
mov
fcoms
movsl
lcall
stos
ja
dec
repz
sbb
push
aad
mov
mov
pop
push
repz
inc
lea
fidivrs
xlat
jmp
in
jns
add
sbb
push
iret
mov
mov
push
fs
cmc
sub
ja
or
insb
aad
sbb
push
mull
jp
push
jns
mov
fcomp
adc
arpl
out
addl
cmp
mov
dec
mov
fidivs
rcl
test
div
push
xor
sbb
ljmp
fs
ja
or
pop
xor
lock
xchg
xor
xor
mov
sbb
or
lahf
pop
ljmp
mov
imul
or
xchg
fdivrs
adc
gs
stc
and
fmull
out
dec
ror
cli
pop
loope
fs
jnp
pop
fmull
pop
and
mov
cmc
nop
sub
and
mov
cld
jp
dec
sbb
mov
add
or
cld
nop
or
pushf
out
test
xor
inc
das
jnp
push
cmp
push
into
mov
int
test
in
xchg
cmc
push
add
mov
add
push
cwtl
pop
data16
pop
fldl
sbb
cli
repnz
hlt
jp
in
cmp
int
mov
mov
xchg
fs
or
push
imul
dec
loope
lea
adc
mov
mov
or
repz
add
push
or
sub
pop
and
inc
iret
cmpsb
orl
mov
add
mov
pop
in
or
add
jnp
jne
iret
into
sub
dec
push
mov
jne
cltd
jmp
pop
hlt
pop
ret
and
aam
add
dec
ja
or
sti
call
adc
pop
jae
mul
cmp
outsl
and
cmp
dec
lret
loope
std
xor
insl
aam
outsl
sti
daa
cmp
stos
lea
pop
xchg
sub
push
inc
pop
adc
adc
and
sub
lret
sbb
jg
in
add
sbb
repz
insb
add
in
aam
stos
or
push
add
cltd
out
xchg
int
sub
jbe
loop
lock
fsincos
out
aad
push
xchg
push
in
jno
test
jp
jno
fxch
and
jno,pn
add
je
rorl
push
inc
cs
aaa
mov
push
mov
rorb
mov
imul
sub
test
xchg
xchg
sbb
dec
cmc
inc
pop
loopne
xchg
mov
fcoml
mov
incb
lcall
lea
and
mov
xor
aad
stos
or
mov
out
sub
pop
lock
mov
inc
jno
xchg
decb
popl
in
icebp
mov
outsb
xor
arpl
lahf
jge
and
mov
popa
mov
dec
dec
cmp
in
leave
mov
and
inc
cmpsl
cmp
mov
cmc
movsl
mov
xor
or
mov
add
in
mov
adc
cmp
outsl
push
fwait
popf
fisttpl
enter
call
cwtl
push
push
imul
or
dec
and
lret
push
das
out
daa
add
dec
cmp
adc
test
js
outsb
lods
and
dec
mov
pop
test
xchg
js
mov
jmp
mov
pop
push
dec
xor
daa
in
nop
adc
adc
mov
sti
bound
xor
int3
push
push
sbb
in
pop
sub
cld
shrl
rcrb
mov
ret
cli
mov
divl
push
push
fcomps
adcl
xorb
push
out
jge
adc
xchg
mulb
mov
mov
adc
dec
mov
ficoms
jo
xor
lds
xchg
leave
fsubl
stc
pop
sbb
pop
inc
hlt
mov
pop
sub
mov
lret
and
aam
repz
xlat
push
movsb
sti
and
or
out
adc
std
mov
sbb
cltd
outsl
lahf
addr16
stc
mov
cmp
lods
cmp
and
mov
aad
pop
jbe
push
pop
lret
jecxz
stc
xchg
ljmp
cwtl
sub
cwtl
rorl
pop
jmp
dec
xchg
dec
int3
outsl
sbb
push
int3
dec
push
jb
add
fimuls
lea
outsl
mov
inc
outsl
mov
ret
ja
lock
pop
push
cmp
dec
je
inc
hlt
fwait
or
dec
subl
sbb
sub
inc
lods
xor
adc
sub
inc
xchg
xchg
jmp
fcomps
add
or
aaa
hlt
mov
lret
mov
aam
adc
add
sbb
mov
int3
std
pop
sti
out
and
mov
lret
pop
push
or
fldenv
test
cmp
lahf
mov
mov
daa
out
popa
sub
adc
or
inc
les
icebp
imul
push
lret
xchg
mov
dec
and
mov
xor
stc
push
dec
adc
inc
sarb
aas
cmpsb
adc
in
mov
inc
jecxz
andl
movsl
pusha
ljmp
xchg
sbb
push
or
xchg
and
cltd
std
xor
inc
xor
add
dec
xchg
mov
cmp
sub
adc
or
xchg
mov
sub
adc
push
lret
jl
pusha
jmp
in
pop
mov
rorb
gs
lret
xchg
jle
adcb
and
aam
ds
dec
cld
sbb
dec
scas
ficoms
aas
inc
cmp
ficompl
insb
into
jno
pushl
mov
js
stos
test
sub
test
shlb
push
in
cltd
sub
adc
sbb
bound
sbb
xor
dec
jmp
inc
inc
sub
mov
imul
xlat
loop
sub
or
das
sbb
mov
jecxz
pop
mov
jmp
pushf
cmc
add
fwait
inc
xchg
dec
pushf
test
nop
xchg
mov
shrl
out
pop
imul
inc
pushf
mov
add
xor
push
sub
cmp
in
or
retw
out
insl
mov
and
das
inc
inc
fstpt
std
sub
add
sub
sbb
sub
loopne
aas
cmp
mov
mov
cmp
cld
sbb
inc
std
mov
cmp
movsl
iret
push
insl
in
xlat
mov
sub
sub
nop
cmpsb
shrb
add
cmpl
test
xor
aaa
xlat
mov
push
or
and
aad
mov
sbb
and
adc
xlat
xor
xchg
cmp
lret
sub
js
jge
jo
movsb
cmp
and
sub
imul
and
ror
fwait
gs
xor
mov
addb
dec
cs
out
in
mov
ds
in
enter
xor
lea
mov
out
jmp
push
push
jb
mov
into
popa
stos
int3
cmp
pop
dec
push
aaa
stos
cmp
sbb
mov
leave
mov
dec
mov
je
sbb
movsb
rcrl
mov
cmpsb
add
inc
add
inc
mov
aam
mov
cmpsb
adc
lods
and
jno
xchg
mov
into
addr16
outsl
sub
clc
mov
repnz
sti
insb
ret
ljmp
arpl
push
mov
icebp
clc
dec
aad
cmpsl
dec
pop
push
outsl
in
in
sbb
sahf
jle
cmp
cmp
cltd
movsl
cmp
sbb
leave
lock
fstpl
aaa
fwait
dec
imul
std
das
movsl
mov
fisttpl
dec
jmp
xor
cmovae
jp
js
push
push
push
lods
pusha
sub
cmp
jbe
adc
nop
jne
xor
jge
loopne
and
xor
sti
test
xchg
loope
insl
fisubs
jmp
push
cmc
shl
sbb
cmc
inc
cmpsb
mov
mov
cmp
xchg
cmp
or
lods
scas
in
add
sub
push
sub
pslld
or
inc
adc
mov
dec
js
ja
and
rcr
mov
dec
xor
dec
xlat
aad
rcrl
inc
lods
mov
aaa
scas
testb
add
movsb
lea
cmp
pop
arpl
mov
or
cmp
mov
out
add
push
dec
push
nop
cwtl
outsl
loopne
xchg
jns
jecxz
sbb
mov
xchg
pop
xor
fucom
lahf
andl
movsl
stc
push
sbbl
movsb
adc
aam
insl
imul
test
xor
lea
cmpsl
mov
add
popf
pusha
xchg
je
data16
adc
out
jae
xchg
push
fmull
nop
pushl
call
clc
push
push
popa
push
mov
push
mov
and
mov
mov
addb
loop
aam
xchg
mov
xor
jp
stos
sub
mov
pop
enter
adc
addr16
fcmovnb
dec
pushf
sub
out
lods
jo
mov
jbe
gs
xor
jmp
pop
lods
and
pushf
or
sub
aam
out
xor
repz
and
push
fsubp
sbb
xor
pop
imul
jbe
repz
ret
mov
xchg
cmpsl
mov
mov
imul
push
pusha
int
and
add
xchg
mov
cmp
mov
lock
loope
out
lea
add
add
insl
sub
lret
aaa
adc
pop
cld
clc
movsb
mov
add
pop
cmpsb
sub
mov
and
xor
mov
test
inc
dec
lock
sarl
push
jl
mov
loope
into
call
icebp
test
xchg
stos
popa
cmc
push
ja
shll
sbb
xchg
loope
jge
adcl
mov
pusha
dec
adc
call
notl
loope
lcall
orl
jle
cmc
dec
ja
or
and
jno
jle
mov
pop
adc
cltd
xchg
scas
repnz
sbb
push
aas
inc
xchg
mov
mov
mov
jo
or
mov
aaa
fmul
xlat
int3
roll
lods
lret
pop
inc
mov
xchg
dec
cmp
add
clc
outsl
repz
sub
movsb
fnstcw
movsl
test
scas
xlat
test
push
pop
jne
push
mov
frstor
ret
fsubs
cmp
imul
fistpll
sub
jne
sub
lret
or
std
cmp
movsl
in
pop
push
xchg
xchg
sub
inc
pop
pop
loope
mov
cmp
add
repz
test
jmp
cmpsl
jmp
or
mov
pop
jne
push
std
mov
in
frstor
lods
push
outsb
mov
setge
int3
imul
cmc
ret
jne
js
jbe
loopne
ljmp
hlt
imul
mov
ljmp
ret
dec
jmp
loope
shll
add
scas
aad
rcrl
addr16
sti
dec
add
jle
cltd
push
hlt
shrb
inc
cmp
jle
push
lret
in
outsl
xor
daa
dec
lret
mov
inc
lods
push
adc
and
adc
or
adc
and
call
test
push
aad
sub
adc
incl
fbstp
and
stos
out
or
ljmp
popf
std
int3
xchg
pop
add
jns
or
insb
lcall
push
lret
lods
xor
ror
adcb
cmp
js
call
lcall
es
pop
xor
pop
sub
cli
sub
gs
faddp
push
mov
repnz
fyl2x
pop
inc
push
mov
cmp
jmp
fidivrl
xor
movsl
mov
stos
mulb
sub
sbb
subb
xlat
shll
dec
dec
xor
jmp
xor
cmp
push
ljmp
aas
mov
daa
hlt
into
mov
pushf
push
and
std
push
movsb
iret
lcall
loopne
push
test
mov
push
repnz
fisubs
cmpsl
sbb
adc
sbb
xor
push
ret
lcall
aas
add
lock
sbb
pop
je
out
int
pusha
leave
cld
mov
pop
std
inc
repz
and
push
stos
mov
in
xor
cmp
and
bound
dec
xchg
mov
and
fistl
cwtl
addr16
dec
iret
sub
mov
shll
cli
mov
pusha
adc
ss
addr16
push
xchg
dec
mov
ds
mov
push
sub
jae
push
jns
and
jbe
cld
js
jne
jg
push
mov
pop
clc
dec
es
adcl
push
and
cmp
and
add
add
mov
or
or
es
sbbb
add
sbb
stc
into
sbb
xchg
adc
pusha
adc
psllw
jns
in
aad
cwtl
jns
adc
sbb
in
loope
dec
sbb
arpl
js
test
pop
mov
mov
jle
xor
xor
xor
call
adc
sbb
sbb
xchg
push
loope
mov
insb
ds
mov
adc
imul
xor
pop
and
sbb
je
test
idivl
pop
jae
pop
xchg
mov
adc
inc
sbb
pop
push
mov
fmulp
out
sbb
fstl
aas
add
aad
das
cmc
int
fistl
mov
mov
sbb
rol
loopne
shr
popf
arpl
sub
addb
hlt
outsb
dec
or
push
insb
test
jns
sbb
mov
cmp
lods
test
push
inc
xchg
repz
xor
jl
cmp
stc
jge
lcall
push
ja
push
sub
pop
js
mov
cmp
mov
inc
jo
sub
push
in
inc
in
sahf
pop
push
lahf
fmuls
adc
incl
mov
mov
dec
aam
and
xchg
or
pop
push
xchg
movsl
pop
jmp
mov
xchg
and
aas
xor
mov
pusha
pusha
fildll
mov
fdivrs
test
mov
test
jge
pushf
sbb
out
in
out
stc
movsl
cmp
icebp
enter
addb
cmp
cwtl
aaa
js
push
mov
cltd
pushf
aaa
jb
scas
xor
aad
testl
or
mov
add
fsubl
incb
rclb
sarb
fildl
add
mov
sbb
sarl
adc
and
inc
lret
popf
jbe
dec
xchg
sbb
and
and
mov
imul
mov
sbb
jne
adc
aad
lcall
jmp
je
into
dec
fisubs
inc
shl
dec
mov
push
ljmp
xchg
push
subl
push
sti
js
mov
push
mov
sub
add
jbe
mov
xchg
push
hlt
leave
jmp
mov
lods
or
dec
jmp
sbb
pop
sub
inc
pop
mov
pop
rcll
mov
cmp
and
std
leave
pop
cmc
push
pop
cltd
sub
ljmp
cmc
es
in
sub
or
inc
pusha
jecxz
sbb
lea
xor
fsubr
and
cmp
mov
orb
mov
aad
adc
ret
sbb
jp
call
pop
adc
clc
je
or
dec
cmp
xlat
lret
enter
or
mov
push
idiv
in
push
pop
leave
push
sub
sbbb
jns
push
xchg
stc
ror
sahf
sbb
cmpsb
andl
pop
lods
push
das
mov
push
adc
xor
enter
push
inc
outsl
mov
cmp
pop
sbb
repnz
ss
and
or
or
inc
in
sub
add
adc
je
mov
add
cmp
cmp
push
sti
popf
pop
jns
jmp
outsb
adc
enter
add
cmc
xor
dec
adc
call
inc
cmp
repnz
loop
lea
and
and
out
mov
jmp
mov
dec
dec
xchg
xlat
and
jle
mov
dec
inc
bound
ds
aaa
inc
inc
xor
out
cwtl
out
dec
push
sub
cld
ss
fdivrl
aam
cmp
sub
sub
fiadds
dec
imul
xchg
pop
leave
fcmovu
movsb
sbb
in
add
xchg
add
insb
add
cmp
mov
int
xor
lea
push
push
out
clc
lea
fisubs
pop
inc
ja
enter
inc
fbstp
imul
cmpsl
das
lock
in
push
and
movsb
inc
ss
int3
scas
pop
pop
push
movq
adc
cli
lds
adcb
into
jnp
pop
movsb
add
push
dec
adc
aas
sub
mov
dec
mov
sbb
add
shlb
stc
jecxz
push
xchg
cmp
mov
lcall
aas
scas
fcomp
test
icebp
mov
jmp
movsl
ss
test
mov
idivl
shll
jno
and
sub
repnz
pop
stos
hlt
out
addb
lret
fcomps
jnp
in
sub
stc
dec
icebp
int
inc
pusha
cltd
mov
jns
push
push
cmpsb
mov
lret
cmp
mov
mov
and
xchg
imul
adc
lea
pop
cmp
mov
nop
lock
cmpsb
out
ud2
cmpsb
popf
lahf
bound
or
xchg
lcall
rol
or
ja
cmp
pushf
cli
adc
imul
daa
push
ret
notl
fnsave
clc
add
loopne
movsb
lea
push
les
imull
popa
inc
rclb
pop
rorl
std
lock
mov
shrb
adc
jg
sub
pop
lea
sbb
mov
mov
push
xorl
in
adc
je
add
sbb
popf
ljmp
xchg
pop
xor
ret
daa
and
adc
lret
inc
mov
xor
mov
and
pop
jo
xchg
aas
pop
enter
pushf
cmpsb
jb
jns
xchg
shrl
mov
xchg
shrl
nop
or
mov
int3
push
bound
jb
cltd
outsb
fsubp
jge
test
jb
xor
lods
sbb
cmp
das
cmc
aas
icebp
push
test
mov
dec
or
pop
push
mov
sub
mov
pop
cmp
das
jnp
cmpsl
xchg
lret
push
jg
incb
push
das
xor
pop
sub
dec
cltd
test
fldl
insl
cmpsl
cwtl
divl
shll
dec
fmulp
fistpll
shll
adc
push
std
and
cmpsb
jge,pt
jg
jmp
push
fs
adc
outsb
popl
xor
lcall
mov
nop
push
les
in
inc
dec
xor
pop
int
push
mov
decb
enter
xchg
sbb
sub
pushf
jnp
stos
add
cwtl
cld
js
cli
pop
xor
insb
xlat
adc
adc
xor
fcmovb
pop
dec
sub
mov
cmp
push
gs
or
shlb
mov
das
lods
lret
xchg
inc
out
fwait
scas
xor
decb
fmul
mov
push
out
add
sub
adc
pop
cmpsb
loopne
adc
mov
mov
insl
lods
cwtl
daa
and
cmc
outsl
shl
pop
mov
insb
push
call
arpl
jmp
pop
int
pushf
push
ret
das
add
cmpsb
insb
jne
pop
push
and
mov
fistpll
mov
pop
aaa
mov
daa
push
jns
mov
xrelease
cli
repnz
push
in
test
pop
mov
jns
sub
ljmp
out
cwtl
je
lcall
xchg
jne
xchg
pop
cld
mov
pop
aad
mov
enter
jl
loope
psrlw
dec
repz
inc
bound
jmp
int3
xchg
adc
pusha
aam
mov
cmp
cmpsl
leave
leave
pusha
xorl
pushf
pop
scas
lock
mov
sub
stos
jecxz
dec
arpl
inc
push
push
arpl
fadd
lock
jnp
out
cmp
mov
fmulp
or
dec
mov
pop
jo
jl
adc
enter
mov
movsb
and
inc
pop
pop
enter
hlt
out
push
stc
fwait
mov
pavgw
adc
sbb
sbbl
mov
jmp
test
add
mov
sbb
pop
and
sbb
or
mov
and
shlb
aam
jge
and
test
mov
fistpll
stc
mov
mov
mov
outsl
into
push
aaa
in
in
sbb
in
push
lock
adc
push
push
inc
fidivs
jno
jbe
ja
add
test
push
or
jecxz
ljmp
pop
cmpsl
fisttpll
aas
arpl
sub
hlt
fmull
cld
jne
mov
loop
loopne
movzwl
mov
test
or
xlat
sbb
iret
out
jp
test
push
jmp
frstor
lea
push
sbb
mov
jb
lock
and
adc
push
je
mov
mov
mov
and
dec
jb
and
lcall
xor
xchg
pop
inc
mov
cld
push
popf
test
pop
or
xor
jbe
mov
mov
popa
mov
jno
pop
sbb
lds
jg
adc
mov
adc
and
enter
sub
lret
aam
rol
outsb
scas
in
leave
shrl
mov
scas
outsl
negb
push
int
sbb
aam
rolb
xchg
addl
add
aas
sbb
pop
filds
leave
mov
dec
inc
stos
adc
or
lret
lock
sarl
adc
adcl
jb
leave
loop
rorl
adc
xchg
xchg
fldl
or
dec
dec
pop
xchg
pop
int
inc
cmp
cmp
insl
sti
sub
lds
lock
cmpl
shrl
mov
dec
shrl
stc
adc
xlat
sbb
push
jge
clc
add
stos
fisubl
or
add
jge
into
pop
loope
arpl
and
mov
mov
cli
adc
jb
cmc
mov
mov
push
mov
push
add
mov
cmpsl
cmp
sbb
cmp
push
inc
xor
in
add
negl
iret
mov
add
fwait
rcpps
mov
xchg
test
push
hlt
and
push
xchg
js
xchg
jnp
inc
mov
call
cld
dec
outsb
bnd
popf
mov
test
sbb
lock
daa
dec
outsl
inc
movsb
mov
sub
cmpsl
pushf
jns
aaa
xor
add
inc
jg
scas
inc
add
mov
jmp
mov
test
hlt
mov
enter
movsb
insl
fcomi
es
leave
lahf
stc
mov
pop
cmp
imul
roll
ljmp
lret
mov
inc
iret
shrl
xchg
mov
aam
es
sbb
dec
xlat
push
or
daa
je
mov
jae
mov
mov
ret
dec
movsb
mov
push
push
ss
popa
xchg
test
or
cmp
adc
push
stos
add
ret
popa
add
mov
adc
add
xor
shl
adc
cs
stos
jne
sub
xchg
pop
jg
scas
ja
test
mov
or
repnz
popa
or
hlt
add
or
outsl
das
dec
repz
add
in
popf
outsl
jl
mov
gs
mov
js
or
cltd
cmpsb
inc
xor
out
and
inc
arpl
pop
sub
ss
mov
or
cmp
jb
shlb
es
xchg
es
lds
pushf
mov
jo
push
stc
xor
mov
sbb
jae
pop
dec
cmp
add
ror
mov
fs
pop
cmpsb
out
sub
call
push
insl
jge
jae
xor
dec
stc
mov
jmp
jmp
test
mov
ds
in
movsl
fwait
mov
jmp
in
add
fldl
push
jae
sub
lods
ds
imul
or
cli
repnz
or
mov
shlb
loope
xchg
daa
punpcklwd
aas
pusha
add
xor
or
inc
aaa
cmp
push
push
adc
js
scas
dec
cmp
push
dec
mov
stos
xchg
adc
jge
mov
cli
add
subb
stos
dec
loopnew
xchg
loop
mov
pop
pop
and
lds
sti
pop
gs
aam
shrl
or
add
cmp
push
mov
push
iret
jl
lock
mov
lret
scas
jmp
xchg
sbb
sbb
adc
push
test
movsl
popf
push
lsl
add
daa
adc
insl
mov
jl
fildll
jp
rolb
iret
push
mov
dec
sub
lds
inc
and
inc
pop
pop
mov
or
adc
addr16
jnp
test
into
mov
jmp
xchg
dec
shll
mov
outsl
jno
or
jae
js
stc
or
lods
jmp
ja
jae
scas
lea
xor
mulb
pop
lret
lea
adc
dec
popl
test
mov
lods
xchg
ja
push
pusha
inc
mov
xchg
pop
loope
cmp
mov
andb
incb
jmp
inc
adc
ds
shlb
adc
push
jmp
stos
jecxz
or
in
stc
loop
fldenv
in
dec
jns
push
clc
shr
adc
xchg
rcl
push
fsubrs
mov
pop
xlat
out
xchg
in
cltd
out
cmc
fists
mov
cmp
mov
mov
sbb
cmc
push
mov
test
iret
daa
mov
mov
mov
dec
out
sbb
ljmp
pop
push
es
rcr
ret
out
inc
sub
sbb
mov
aas
test
ficoml
popa
adc
xor
adc
jns
outsb
xchg
pop
mov
movsb
test
addr16
cmp
lock
push
out
out
adc
xor
shll
mov
mov
fimull
adc
mov
addr16
jp
test
jp
sarb
dec
xor
xchg
dec
cwtl
mov
cmp
xlat
sbb
cs
rolb
je
mulb
sub
add
sbb
out
fstpt
lds
popf
xor
pop
popf
lahf
xchg
test
lcall
loope
and
jbe
xchg
ss
sbb
fs
push
subb
imull
dec
arpl
pop
cmp
popf
in
jg
or
cmp
in
stos
imul
adc
out
lods
jb
stos
cmp
inc
mov
add
loopne
push
xchg
cmp
leave
xchg
cwtl
or
pop
push
fdivl
or
aaa
xchg
sbb
into
add
out
push
or
cmp
cwtl
jb
push
push
rolb
pop
mov
push
shlb
dec
mov
xor
xor
xchg
sahf
data16
fnstsw
mov
popf
inc
and
xchg
and
pushf
cmp
push
pop
pushf
push
pop
cli
test
lahf
cmp
jns
fidivs
inc
daa
xchg
lock
into
xor
rclb
jne
sarb
cmp
negb
jo
xchg
push
push
pop
xor
repnz
mov
add
fwait
or
movsl
sbb
xchg
inc
mov
cmp
into
jne
stos
fisubl
lcall
cltd
xor
jae
mov
mov
xchg
ret
mov
sti
push
xchg
arpl
fidivl
daa
mov
sub
sub
sarb
call
int3
lahf
xor
jl
sbbl
cld
shl
dec
loop
ds
fwait
xchg
pop
test
sub
push
test
dec
cmp
js
fcomp
xchg
rcrl
dec
add
xchg
fnstsw
cmpsl
xchg
cmp
lods
fadds
sbb
movsl
inc
inc
xchg
push
jne
xor
jne
decl
rcrb
fstpl
push
ret
push
pusha
push
mov
adc
mov
xchg
inc
add
pop
in
sub
shrb
xchg
mov
inc
movsl
sub
add
jl
and
stos
ret
in
test
inc
adc
lods
out
sbb
arpl
dec
inc
std
ljmp
dec
in
cmpsb
movsl
bound
idiv
in
lock
aam
insb
out
fildl
add
addr16
adc
jo
mov
std
mull
and
adc
xor
into
pop
xchg
add
pop
nop
sbb
and
fistps
cmpsb
arpl
mov
mov
add
scas
ds
leave
pop
jle
fwait
js
lea
pop
xor
cmp
les
lcall
inc
mov
out
mov
adc
in
jae
inc
inc
fimull
cwtl
lods
xchg
repnz
addr16
ret
jle
ret
clc
adcl
mov
out
mov
mov
dec
push
add
aam
or
lock
mov
and
bound
jne
push
inc
mov
inc
mov
sub
sti
add
les
hlt
sbb
lahf
cvtdq2ps
and
mov
cli
popa
pop
sbb
xor
pop
outsb
cmp
or
cmp
pop
jno
mov
push
and
add
cmp
roll
movsl
and
mov
rcrl
btl
out
aaa
lock
and
mul
mov
mov
jne
mov
or
push
mov
mov
les
clc
pop
mov
mov
adc
cmpsb
ljmp
daa
ficomps
sub
ret
mov
add
xor
dec
adc
lahf
mov
test
aas
adc
les
adc
push
mov
imul
call
xor
movsl
sti
xor
push
add
test
inc
ds
jo
int3
addl
int3
dec
mov
jne
mov
jge
xor
push
imul
imul
dec
into
pop
mov
push
inc
mov
leave
sti
lods
pusha
xor
nop
push
mov
int3
bound
mov
fldt
ret
mov
cmp
fimull
sub
sbb
ret
jo
mov
xchg
dec
xor
in
pushf
push
adc
mov
inc
xchg
adc
adc
mov
sub
bound
cld
les
and
bound
cld
pop
stos
ja
xor
lods
cmp
clc
ret
rclb
xchg
dec
inc
push
jnp
stos
loop
sub
lret
rolb
sbb
inc
cmpsb
lcall
or
cmpsb
push
arpl
mov
xchg
stos
push
sub
test
cmp
loope
clc
xor
icebp
movsb
sub
jbe
inc
nop
in
mov
ret
fsts
cmp
push
inc
les
js
lret
popa
test
mov
xchg
dec
insb
pop
lcall
pop
popf
aaa
and
popa
and
mov
inc
pop
enter
call
mov
aam
xor
repz
ss
sub
xor
dec
sub
pop
cmpsb
xchg
mov
pop
sahf
dec
lahf
xor
inc
fiaddl
aaa
xchg
pop
repnz
add
cs
xor
xchg
xor
fwait
leave
sbb
outsb
in
std
daa
sub
and
sarl
or
inc
and
pop
inc
or
jnp
insb
es
sti
test
ds
add
fwait
out
cmp
loop
jne
inc
popf
mov
out
sbb
xorl
sarl
or
in
cwtl
dec
dec
mov
xchg
pushf
mov
jbe
push
rclb
ret
push
jl
inc
fwait
sub
and
xchg
adc
scas
sbb
push
pushl
outsl
ret
or
stos
gs
pop
pop
adc
dec
fnstcw
imul
fadds
adc
xor
fwait
cmp
rcrb
xor
xchg
jb
fs
or
mov
insl
aad
std
call
nop
cmp
in
aam
add
xor
or
mov
cmp
add
xchg
pop
xor
stos
pop
das
xor
and
mov
jo
cmpsb
and
xor
xchg
dec
fsubrs
cmc
pop
lea
mov
push
ror
shll
imul
cs
outsb
and
cmp
xchg
jle
jp
mov
inc
aad
pop
movb
mov
dec
or
shl
ret
dec
sbb
dec
insl
add
jmp
popf
dec
mov
sub
inc
repnz
jmp
fdivrl
mov
inc
push
mov
jg
fcmovnbe
cmp
dec
lcall
jle
and
push
or
in
shrl
mov
lea
cmp
shlb
adc
sub
mov
add
or
lret
shrb
iret
cmp
mov
xchg
inc
ficoms
repz
inc
mov
push
cld
leave
icebp
mov
xchg
icebp
or
testl
inc
lahf
mov
mov
pop
or
push
movsl
jno
push
fldt
jl
imul
xor
or
pop
jo
sub
scas
dec
xchg
lcall
xchg
fnstenv
push
push
sub
out
xchg
mov
lahf
inc
ljmp
mov
daa
sahf
mov
dec
inc
dec
adc
scas
push
adc
das
cli
stos
mov
adcb
push
ret
adc
aaa
or
scas
cli
dec
insb
fists
push
js
xor
mov
add
and
loop
and
xor
adc
add
clc
cmp
sub
mov
icebp
inc
xchg
ret
xor
mov
pushf
leave
cmpsl
jb
add
push
pop
lods
mov
pop
scas
int
jle
leave
insl
or
insl
pushf
mov
xor
rolb
int
adc
mov
sub
mov
test
rclb
pop
sbb
sbb
xor
out
sub
xchg
pop
inc
mov
mov
cmpsb
add
add
xor
aad
inc
cmp
add
xor
or
imul
scas
adc
cmp
mov
fldl
std
inc
push
cmp
inc
mov
jle
stos
std
nop
test
repnz
cmpsl
mov
cmpsb
and
add
out
cmp
das
ss
lock
imul
mov
js
loop
cltd
mov
repnz
ficoms
pop
out
pop
aas
addr16
sub
inc
call
xchg
sub
icebp
std
sub
xchg
lret
mov
iret
cmp
adc
sub
add
xchg
jmp
popf
inc
dec
movsb
in
test
or
cmp
and
ss
pushl
fldt
sub
rorb
cmpsb
mov
shll
sbb
xor
fimuls
in
mov
sbb
fisttpll
jb
jmp
or
int
jne
arpl
sbb
repz
inc
pop
mov
lahf
inc
xor
push
out
sub
add
scas
dec
shrl
add
adc
loop
xchg
insl
out
push
jbe
or
xorb
mov
add
dec
repnz
cmp
lea
sbbb
adc
push
mov
push
maxps
mov
nop
xlat
mov
test
imul
mov
pop
ret
lahf
jg
pop
xor
inc
inc
fidivrs
dec
faddl
xchg
mov
scas
into
pop
mov
cwtl
outsb
mov
dec
shlb
adc
and
and
xlat
scas
or
mov
mov
sti
sub
outsb
push
imul
mov
and
and
xorb
adc
mov
repz
div
sbb
ja
pop
dec
shll
lea
loop
mov
pop
cwtl
xlat
jns
pop
lcall
mov
xchg
orl
cli
addb
mov
cld
jb,pt
or
jns
outsl
cmp
dec
inc
fidivrs
sbb
mov
aaa
push
cmp
dec
negb
jnp
movsl
pop
test
rcll
mov
push
leave
das
loope
and
xchg
mov
je
sbb
push
mov
mov
aad
aaa
pop
sub
adc
sub
lods
dec
outsb
jecxz
imul
outsl
and
jle
test
aas
dec
mov
iret
cmc
xlat
jns
ret
sbb
inc
and
movsbl
jp
nop
test
js
test
mov
scas
addr16
mov
fldpi
xor
push
jne
je
or
and
fnstcw
inc
cmp
xchg
sub
jns
dec
arpl
mov
lods
jne
pushf
nop
ja
shl
lret
jb
cmpsb
loop
pushf
and
pop
mov
jp
lea
add
push
sbb
cmp
shr
or
insl
mov
aam
jmp
pop
inc
scas
jecxz
cmpsb
push
out
and
sub
jmp
cmp
loope
lods
xchg
or
sub
jo
shll
std
aam
jns
mov
cmpsl
adc
dec
test
mov
dec
jbe
les
cs
inc
fisubrs
popa
sub
lods
dec
les
fistpll
and
dec
fdiv
inc
daa
stos
add
push
int3
mov
cmp
inc
push
mov
xchg
pusha
xor
jns
mov
cmpl
aaa
mov
pushf
xor
xchg
imul
mov
jle
push
cmp
mov
scas
inc
popa
xlat
mov
mov
cmpsb
add
lods
test
bound
fisubs
xlat
insb
call
test
sbb
dec
inc
pop
sbb
lret
negl
data16
lcall
out
add
rol
rorl
insl
dec
cmp
jl
add
addr16
into
mov
addl
nop
push
in
adc
push
divl
add
adc
je
xor
mov
mov
jp
and
hlt
jge
push
lret
cmc
scas
test
loop
pop
jge
movsl
xor
mov
insb
push
push
xchg
mov
adc
subl
xor
sbb
xor
mov
push
rep
push
stos
call
xor
call
xchg
adc
popf
sahf
imul
lret
xor
mov
and
stos
jns
cmc
in
push
shl
pop
mov
scas
xchg
jae
xor
shrl
or
dec
idivb
push
roll
or
add
mov
xlat
jecxz
mov
xor
jbe
push
scas
flds
popa
and
mov
and
push
aad
in
inc
loope
rcll
dec
adc
ljmp
mov
mov
adc
stos
xchg
pop
mov
xchg
mov
or
and
xor
sahf
jnp
cmp
pop
xor
xor
pop
int3
push
fcmovnbe
mov
mov
fdiv
sbb
pop
or
pop
and
movsb
xor
jo
jb
mov
jo
or
mov
nop
jnp
push
lahf
test
mov
popf
inc
jbe
xor
frstor
aaa
xchg
push
push
adc
push
scas
cmpsl
xchg
mov
sahf
push
mov
sub
scas
dec
mov
and
fcoms
loopne
pop
enter
sahf
notb
fimull
test
add
or
mov
imul
fcompl
xchg
lds
outsl
in
imul
repnz
adc
call
arpl
popa
fildll
xchg
lret
pop
push
getsec
sbb
pushf
fnsave
or
shl
movsb
fmul
add
out
fistps
push
fcmovb
sub
push
push
std
jno
int3
icebp
cli
mov
lcall
jnp
jecxz
cld
in
sarl
js
je
pop
or
and
mov
shrb
push
add
jns
in
int3
stc
js
pop
aam
shlb
fistps
testb
sbb
inc
in
pop
fwait
xor
sub
ficompl
imul
leave
xchg
and
sarl
fs
je
aam
inc
xchg
jo
mov
sub
sub
orl
gs
add
mov
xchg
jp
rcrb
ljmp
lea
aaa
aam
inc
add
fstps
fbld
inc
cmp
cld
aas
adc
jl
ljmp
sti
push
int
push
sub
enter
aam
jmp
dec
pop
out
notl
lods
and
jb
pushf
fwait
adc
pop
imul
add
pop
and
jge
adcl
clc
xor
fxam
lea
xor
sub
cmp
add
push
jnp
test
mov
or
inc
mov
gs
mov
xchg
mov
call
je
bound
test
jne
sti
int3
inc
stos
mov
mov
in
mov
mov
mov
imul
or
ljmp
push
mov
test
push
add
fdivp
sbb
movsb
mov
aas
lods
mov
movb
stos
xchg
decb
dec
cmp
pop
mov
ds
cwtl
ss
dec
xchg
arpl
les
mov
mov
inc
adc
sarb
repz
lahf
icebp
push
movsl
adc
sub
xchg
shlb
jg
cmp
mov
adc
sarb
leave
push
jbe
mov
jb
jnp
mov
cltd
jecxz
xchg
pop
or
scas
mov
stc
mov
test
shl
call
xor
inc
fimuls
or
dec
jmp
jge
inc
xchg
fidivs
dec
test
adc
sub
sub
inc
push
pop
adc
lds
andl
jmp
dec
xor
stc
clc
mov
fwait
add
sbbl
out
dec
aas
adc
shrl
es
xor
mov
je
decl
push
scas
jecxz
adc
inc
xchg
push
jae
mov
enter
loope
dec
and
push
mov
dec
popa
lock
imul
xchg
frstor
int3
dec
mov
push
pop
xor
adc
push
lods
xchg
dec
fxch
inc
xchg
rcl
shr
clc
out
jp
push
mov
xlat
inc
imul
leave
mov
cmp
xor
repnz
ret
jne
popf
loop
sub
cld
cmp
ret
or
outsb
pop
out
into
pop
test
lock
sub
int
mov
cmp
nop
jo
iret
icebp
cmp
icebp
xchg
mov
add
loopne
addb
mov
and
imul
mov
imul
rsm
sub
fnstenv
xor
sbb
mov
hlt
push
popa
pop
mov
mov
or
cwtl
add
dec
aas
fcomps
in
pop
cmp
cli
insb
mov
adc
in
sub
pushf
pop
or
addr16
enter
xor
xchg
pop
mov
dec
cmc
sub
mov
push
adc
fsubs
mov
mov
or
push
fsts
loop
adc
mov
cmpsb
iret
dec
or
jae
push
xchg
fnstsw
inc
les
push
push
mov
and
push
cs
mov
add
push
xchg
nop
jb
xor
aas
lea
insb
nop
xchg
cli
push
jb
dec
pop
int3
xor
mov
bound
mov
in
int3
in
xchg
sbb
xchg
clc
xchg
loope
inc
inc
inc
and
test
roll
or
mov
jb
sub
mov
mov
ds
in
cmc
push
cli
lock
or
rolb
or
adc
push
jle
sbb
scas
pop
jae
ret
push
mov
lret
xchg
imul
adc
cmp
call
dec
mov
mov
pop
ja
inc
idiv
idiv
sbb
jbe
out
xchg
int3
loope
loop
test
push
aam
jo
fmulp
sub
jno
sbb
jnp
cltd
inc
shll
pop
mov
add
cmp
cmpsb
sub
test
xchg
mov
dec
sarb
xchg
xor
push
jae
arpl
push
and
inc
mov
in
fcomi
movsl
push
xchg
bound
xchg
hlt
xchg
or
mov
loope
movsl
inc
mov
inc
lret
mov
mov
push
jle
scas
jl
inc
pop
mov
outsl
xchg
cmp
adc
in
lods
stc
repz
adc
out
jmp
leave
sub
add
repz
mov
adc
pop
in
leave
jle
xchg
es
cmc
mov
idivl
push
pop
xor
add
shll
mov
lret
or
sbb
mov
pop
out
pop
dec
push
movb
ss
push
xchg
stos
pushf
xchg
loope
sub
rcll
sbb
mov
out
pop
addr16
dec
lidtl
shl
lcall
fadds
cmc
fs
sub
icebp
add
cmpsl
mov
xchg
jae
sbb
popf
aam
out
insl
inc
jo
rcr
mov
std
push
insl
sarb
fldt
ja
cmp
out
les
test
dec
mov
pop
dec
mov
push
xor
outsl
adcb
push
xlat
movsl
mov
std
cmp
out
mov
adc
shll
fsubp
mov
inc
xor
push
aad
mov
xchg
cli
popf
mov
insl
pop
push
aaa
sub
je
xchg
push
cltd
mov
xchg
mov
cmpsl
insl
jae
orl
cld
cwtl
dec
daa
aas
popa
out
int3
in
sub
add
fisubs
jle
mov
inc
dec
jp
fisubs
sub
out
mov
or
dec
sbb
add
ljmp
xchg
jo
or
jecxz
add
in
out
jns
mov
mov
jne
sbb
xor
negl
decb
movsb
jo
mov
jmp
nop
leave
stc
xor
mov
jno
xor
or
repnz
pop
fimull
add
mov
mov
jne
mov
loop
push
mull
mov
insb
lret
outsl
push
inc
mov
mov
push
mov
in
jbe
add
or
add
mulb
push
mov
icebp
ss
and
jle
jmp
cmpsb
cmp
loop
add
les
cmp
mov
cmp
push
cmpsl
mov
fwait
xor
pop
popf
rcrb
push
icebp
arpl
js
inc
jge
jno
outsl
sub
ret
pushl
jb
popa
mov
ss
test
loopne
shl
adcb
jg
xchg
cs
xor
outsl
gs
ja
adc
lds
sbb
icebp
lcall
imulb
sti
mov
and
addr16
or
pop
and
fnsave
push
sti
aas
jns
mov
ficompl
and
jl
jg
std
stos
icebp
pop
in
mov
add
xchg
add
sarb
jbe
icebp
repz
jl
lods
xor
hlt
ja
sti
repz
mov
out
sbb
cmp
mov
vmovdqu
push
dec
popa
push
pop
xchg
sub
pop
divl
xchg
jb
mov
pop
mov
jecxz
push
out
loop
negb
mov
inc
or
loopne
repz
jb
stos
in
loop
popf
test
inc
mov
and
call
jb
test
mov
clc
pop
add
or
mov
iret
out
xchg
dec
push
popf
insb
inc
repnz
fisttpll
mov
dec
cmp
aad
add
sbb
and
mov
jb
aam
sub
sub
xchg
dec
cmp
lret
or
imul
xchg
inc
out
into
add
and
dec
rclb
sbb
in
push
adc
lret
or
xchg
mov
addr16
rolb
loop
jnp
cli
xchg
push
aaa
sbb
out
push
xor
int3
jne
or
push
bound
insl
jle
mov
stos
movsl
nop
jne
cmp
inc
and
fsubrl
clc
sub
or
fstps
xor
mov
lret
add
sub
push
sub
mov
jae
test
popa
add
jns
or
in
jb
mov
xor
dec
jmp
lret
test
push
sub
push
repz
pop
add
stc
pusha
push
lahf
xorl
push
stc
shr
and
push
jle
scas
mov
jp
jmp
imul
push
jno
imul
ljmp
mov
mov
and
sbb
fnsave
sbb
andl
mov
in
mov
clc
mov
lods
pushf
pusha
lods
mov
iret
rcrl
repnz
inc
fstl
or
sub
dec
lock
pop
rcrl
jmp
add
cmc
push
jp
and
clc
cmp
adc
pop
inc
sub
adcl
pusha
push
xchg
mov
lahf
loop
loope
out
jae
loopne
cmp
lret
rcr
out
in
sub
adcl
mov
lret
in
lea
adc
push
iret
out
mov
push
inc
cs
icebp
jmp
add
mov
popa
in
mov
ficoml
mov
test
pop
dec
xor
cmpsl
jl
mov
adc
loope
jecxz
popa
sbb
cmp
mov
mov
loopne
movsl
ja
push
je
inc
cmp
sub
int3
jge
xchg
push
scas
add
cmp
aas
or
addl
or
pshufw
es
pop
test
and
mov
push
in
push
scas
sbb
insl
inc
mov
ret
scas
jb
aaa
cltd
test
fwait
cmpsb
push
adc
and
sbb
jno
outsb
sbb
pop
cmp
adc
scas
jl
push
and
cmp
pop
push
mov
pop
mov
pop
imul
push
dec
fsubrs
iret
or
jle
sub
xchg
loop
mov
xchg
std
inc
lods
jge
out
scas
xchg
mov
xorl
mov
xchg
loop
lods
imul
popa
pop
push
popf
js
in
mov
push
ret
outsl
jbe
xor
adc
or
add
dec
sub
sahf
push
push
or
out
lcall
test
cwtl
shll
push
sbb
mov
sti
mov
dec
rclb
mov
stc
xor
xor
push
inc
push
jbe
loope
bound
xor
jae
inc
aam
nop
xor
mov
aas
lret
inc
rol
lahf
mov
fistpll
stc
sub
sub
lds
ret
sub
and
scas
mov
loop
push
cltd
sub
xchg
jl
xchg
jbe
fcmovnb
mov
mov
adc
mov
cmp
cmc
insl
cmp
inc
in
test
fs
cmp
dec
insb
es
mov
das
push
int
or
push
xchg
mov
push
imul
popa
mov
xor
clc
pop
mov
xchg
sbb
xor
adc
loop
push
loopne
pop
cwtl
mov
into
mov
arpl
cltd
adc
lods
pop
jbe
xor
or
test
imul
lret
lret
sbb
mov
pop
sbb
cmp
idivb
add
push
or
mov
mov
mov
xchg
jbe
adc
cmc
daa
jns
mov
jmp
push
decl
adc
sub
scas
ret
out
and
lahf
cmp
lds
js
mov
scas
xchg
psubusb
sub
dec
xor
jae
sub
subb
mov
icebp
negb
add
mov
xchg
xchg
pop
aam
lods
gs
out
pop
inc
mov
sub
loopne
fbld
popa
mov
out
mov
shrb
gs
aaa
jecxz
cmp
sub
lods
stos
outsl
stos
jns
pop
xchg
daa
mov
jns
pop
push
inc
jle
and
xor
mov
int3
xor
xor
stos
push
adc
xor
push
in
negb
xchg
cmp
in
out
jb
inc
inc
cmpsb
sbb
in
mov
fwait
dec
dec
cmp
sbb
dec
pop
fidivrl
push
inc
push
adc
lret
sub
push
cltd
sbb
jns
mov
cmp
ret
xor
cmc
clc
and
mov
or
stos
sub
and
xchg
pusha
push
test
pushf
pop
ja
xor
int3
repnz
sbb
push
in
pop
sbb
out
arpl
out
fldenv
gs
xchg
adc
mov
inc
jne
ss
mov
les
adc
pop
inc
rcll
push
mov
in
xchg
pop
xchg
aas
lods
in
add
gs
xor
push
pop
push
mov
outsb
xchg
shll
ds
lahf
icebp
inc
pop
dec
ljmp
outsl
add
addb
jle
jo
out
fildl
mov
inc
in
xchg
das
inc
bound
iret
outsb
outsb
jp
adc
pushf
mov
int3
popa
les
bound
dec
mov
xchg
jo
push
fsubrl
cs
xchg
std
mov
cmp
jo
jns
cmpsl
out
add
adc
jg
xor
jns
sub
repnz
lock
das
mov
mov
je
ja
in
mov
xlat
add
or
cmp
test
cmp
ret
push
ljmp
adc
rcll
int3
pushf
lea
pop
into
sub
test
insl
cli
out
push
cmp
and
push
pop
push
push
out
cmp
cmpsb
sbb
int
inc
jmp
ljmp
cmc
mov
test
sahf
jle
dec
cmpsl
inc
ret
inc
scas
int
add
cli
pushf
mov
cmpl
daa
push
shlb
lds
or
adc
cmp
lcallw
sti
movsl
mov
lods
jns
pcmpeqw
cmp
or
sahf
inc
mov
dec
and
dec
dec
flds
jle
sbb
push
dec
inc
inc
inc
pop
add
cli
add
cmp
rol
pop
and
xchg
push
into
push
aad
jnp
dec
push
xchg
icebp
ret
in
sahf
xor
push
xlat
gs
push
cwtl
dec
fucomip
push
fsubr
push
in
clc
scas
addr16
mov
mov
into
test
mov
aas
or
cmp
xor
ficomps
pop
pop
adc
insb
jnp
cmpsl
jecxz
mov
into
clc
cmp
pop
cmc
out
jmp
and
add
push
push
inc
jae
loope
mov
push
inc
jle
jl
inc
sbb
xchg
cmc
mov
aad
in
sub
push
push
jl
faddl
sbb
push
xchg
faddl
es
sub
adc
or
in
fwait
xor
xchg
icebp
cmp
rcr
xor
es
cltd
xor
mov
add
or
push
addr16
cld
out
dec
stos
adc
daa
clc
mov
sarb
or
pop
pop
int3
xchg
push
or
mov
scas
xchg
dec
cs
xchg
adc
popf
adc
or
cmp
ljmp
das
adc
push
dec
dec
addl
pushf
or
orl
lret
cld
adcl
bound
jnp
or
sub
enter
cmpsb
pushf
ljmp
insb
fcmovnbe
shll
popa
jb
out
daa
lgs
insl
jo
fidivs
orl
clc
mov
or
das
pusha
dec
cmp
jl
mov
jo
inc
dec
cmc
pop
aas
xchg
sbb
cmp
test
xor
xchg
out
imul
sub
add
sbb
dec
xchg
sbb
jmp
fs
sbb
sub
dec
js
bound
inc
test
cmpsl
adc
movsl
addb
xor
mov
aaa
push
mov
out
outsb
cld
xchg
cmp
mov
push
std
addl
js
xor
notb
shl
cmp
stos
xchg
lods
or
das
jmp
inc
mov
mov
or
clc
add
adc
pop
dec
push
iret
jp
or
lds
sub
fisubrs
mov
add
xlat
pop
iret
movsl
dec
jne
cli
test
insl
and
inc
pop
and
mov
mov
rcll
adc
mov
scas
cmc
leave
dec
iret
sbb
call
scas
jae
xchg
in
mov
jbe
addr16
jge
bound
mov
or
mov
ss
sbb
pop
jno
movsl
or
mov
fcomip
mov
test
lds
in
pop
sbb
daa
sub
jmp
pusha
jge
in
cltd
fdivrl
lods
push
leave
jl
sbb
cmp
lret
cli
scas
and
fwait
jo
push
fldcw
aam
scas
scas
push
push
xchg
cwtl
or
rcll
cld
shrl
loop
sahf
insl
and
shlb
lea
int3
lock
inc
or
imul
popf
jns
aas
cli
loop
enter
jge
out
mov
mov
pop
fwait
cmp
lea
sarb
nop
je
or
adc
jmp
out
jecxz
inc
stos
mov
add
fcomi
mov
cltd
bswap
popa
push
pop
add
andb
cmp
lahf
jl
adc
outsb
pop
mov
xor
sub
or
inc
lcall
or
fcomps
das
mov
lods
filds
and
test
in
movsl
and
add
pop
js
jno
push
in
sbbb
test
das
xchg
sbb
sti
jb
pop
add
mov
addr16
mov
xor
xchg
les
pop
adc
xor
ret
xor
xor
lea
movsb
sbb
inc
into
inc
sub
testb
sub
test
add
sbb
mov
cmp
adc
loopne
mov
mov
mov
cmpsl
jnp
xor
fcomps
lds
mov
lods
lret
movsb
and
cld
pop
jp
pop
pop
jae
inc
lods
rol
icebp
inc
les
add
out
insb
mov
sub
in
gs
push
test
mov
push
mov
adc
inc
dec
mov
ss
sub
out
shll
cmpsb
and
lcall
shll
sti
pop
test
push
push
or
int3
xor
push
add
pop
add
iret
cmp
popf
iret
sarl
cmp
push
mov
call
mov
sub
lock
nop
or
imul
mov
in
lods
in
call
scas
mov
sti
cmp
push
ds
xorb
jmp
shll
or
add
ret
cmp
in
nop
dec
mov
cmpsb
or
lret
adcl
xchg
dec
icebp
rol
sub
adcb
adc
inc
xchg
xchg
movsb
nop
add
popa
adc
mov
je
cmp
inc
jo
icebp
sahf
and
das
pop
adc
inc
pusha
lahf
fistpl
arpl
xchg
insl
or
int3
mov
dec
sqrtps
add
vminsd
dec
sbb
jg
sbb
adc
in
add
inc
and
fsubrs
test
sbb
gs
mov
lds
pop
xchg
push
lods
in
outsb
adc
repz
js
inc
rcr
mov
mov
ret
pop
mov
mov
adc
push
inc
comiss
cmp
pop
popf
pop
cs
sbb
test
jge
daa
add
scas
cmpb
inc
insl
pop
loop
cld
test
js
sub
xor
enter
mov
adc
mov
xor
lret
adc
stos
je
mov
jns
mov
dec
aas
sub
mov
repnz
sbb
mov
push
mov
sbb
out
mov
out
cmpsl
mov
nop
sub
mov
jno
dec
lret
hlt
and
cs
test
dec
pop
lea
repnz
mov
inc
sub
shl
daa
enter
repz
int
addr16
mov
and
leave
cmp
repnz
add
inc
add
pushl
outsb
or
cmp
jmp
popf
xchg
jno
sub
mov
nopl
cmp
loopne
push
push
mov
repz
insl
xchg
sahf
jns
push
push
xchg
dec
push
mov
sbb
xor
int
jecxz
out
outsl
je
mov
jb
add
nop
call
push
mov
sub
ret
rclb
adc
pop
cmc
jle
in
sti
push
dec
mov
push
cmpsb
dec
cltd
pop
dec
mov
and
ss
sbb
xchg
dec
mov
xchg
out
sub
test
ficoms
jle
jne
jns
pop
in
inc
pop
fadds
pop
sub
cltd
xor
pop
daa
lea
imul
das
sbbl
test
sbb
jl
stos
jecxz
je
dec
lahf
test
sahf
dec
lds
mov
pop
mov
imul
lret
xorl
or
mov
inc
rcll
sub
addl
mov
pop
xor
iret
pop
cltd
andb
mov
push
lods
and
cltd
jg
fisttpll
adc
jbe
mov
mov
inc
test
les
and
insb
cmpsb
das
xchg
cmp
fbld
cld
inc
shl
sub
pop
push
ljmp
mov
sub
cmp
xor
es
insl
dec
mov
sbb
mov
dec
repnz
add
call
subb
jmp
jno
jbe
fldt
mov
sbb
or
push
mov
pop
ljmp
icebp
in
xor
bound
adc
mov
repnz
loop
sub
call
test
dec
and
out
leave
bound
cmp
lret
out
dec
sti
ud2
pop
das
lret
inc
mov
popa
aam
cmpsb
push
fmulp
dec
jo
adc
push
jge
fistps
xchg
imul
cmpsl
jecxz
test
and
enter
pusha
sub
push
jg
mov
push
cmp
leave
lods
pop
addb
dec
mov
inc
add
mov
lea
cmp
push
or
mov
pop
aas
into
dec
add
jno
mov
and
enter
mov
jo
lods
inc
pop
add
cs
inc
push
repnz
xchg
jle
and
mov
lock
leave
cmpsl
gs
inc
pusha
pop
xchg
ret
pop
mov
imull
test
fbstp
adc
imul
out
pop
sbb
xchg
sbb
sub
scas
shlb
cmp
xchg
loope
mov
cmp
mov
loop
rorl
mov
cmovbe
idivb
jb
ror
mov
pushf
push
xchg
popf
mov
scas
aam
push
and
inc
gs
and
mov
mov
cmp
les
mov
lret
clc
xchg
push
and
pop
sub
mov
mov
dec
call
rol
pop
jl
cltd
xchg
enter
mov
sbb
xor
call
hlt
lock
fwait
jno
sar
mov
lock
mov
es
gs
sarl
out
enter
inc
cs
xor
stos
data16
adc
rcrb
imul
and
pop
std
cs
outsl
enter
out
lods
xchg
arpl
lods
out
jne
es
jl
push
adc
lret
xchg
xchg
fmull
movsl
jecxz
loopne
xchg
push
dec
int
add
nop
ss
fdivrs
mov
xchg
int
ret
xchg
test
scas
xor
cmp
push
clc
mov
jo
ljmp
pop
jo
sbb
adc
or
mov
mov
popf
sub
shrb
insl
out
popa
dec
jo
cmp
push
mov
idivb
int3
popa
mov
imul
pop
js
int
or
out
lea
xchg
adc
jl
punpcklwd
ss
leave
test
das
enter
pop
xchg
pop
popf
inc
push
sub
insb
inc
add
repnz
enter
test
jno
loope
lods
push
cmpsb
adc
jp
pushf
aas
shl
gs
xchg
mov
call
inc
fcomps
and
test
stc
mov
jbe
xor
mov
mov
mov
mov
aas
cmp
dec
pop
rorb
outsl
mov
adc
dec
add
xchg
and
clc
jne
sub
in
sbb
xor
imul
jnp
mov
ret
xlat
sub
lea
movsl
push
fs
cmpsl
push
mov
mov
mov
push
aaa
loopne
jp
push
negl
pop
dec
jmp
mov
push
cli
gs
je
daa
mov
imull
repnz
lods
mov
push
stc
iret
and
inc
pop
dec
xchg
push
stos
ret
stos
or
mov
imul
mov
sbb
fsts
mov
mov
pop
adc
in
jne
xchg
gs
cli
leave
mov
in
imul
mov
int3
fisttpl
add
xor
cmc
fwait
cmpsl
mov
dec
jge
loopne
and
push
aaa
dec
mov
and
jns
jp
rorl
pop
dec
mov
in
lea
lock
dec
add
fstp
and
in
inc
loop
push
lods
adc
fwait
andb
cwtl
andb
addr16
js
mov
or
rcrb
cmp
stos
pop
cs
sub
and
xchg
imul
cmpsb
mov
jge
shr
fdivs
pushf
sub
push
sbb
jg
sub
push
leave
cs
popa
pop
mov
push
xor
fcomi
insl
push
push
inc
xlat
pop
out
imul
inc
fwait
add
adc
sub
inc
or
adc
inc
lods
testb
push
repnz
push
les
mov
inc
push
pop
mov
dec
fistps
or
jg
ds
ss
sbb
mov
sub
adc
dec
or
stos
int3
mov
mulb
xchg
cwtl
divb
ljmp
push
inc
adc
jb
sub
loopne,pt
icebp
jp
pusha
je
push
xor
fstl
mov
mov
popa
cmp
andl
push
xchg
adcb
je
jb
mov
outsl
sub
and
icebp
xlat
dec
mov
jb
push
push
and
movsb
aas
sub
cltd
dec
imul
mov
dec
cmp
mov
mov
push
and
je
fidivrs
rcl
in
push
in
int
add
jmp
fs
jmp
fcmove
cmc
lock
adc
inc
inc
jnp
mov
xor
dec
stos
push
pop
negb
push
jns
cmp
cwtl
dec
and
subl
jecxz
inc
cmc
in
add
not
and
dec
ret
mov
rolb
fldl
xchg
fwait
mov
push
jl
int3
divl
out
insl
cmp
sbb
mov
push
pop
imul
add
cmp
inc
testl
mov
rolb
loop
insb
ss
pop
push
mov
jno
mov
push
jns
bound
dec
in
loopne
add
test
aaa
jl
mov
mov
dec
test
mov
sarl
test
xchg
dec
es
test
jge
dec
mov
add
clc
xor
hlt
mov
inc
inc
std
cmp
cmp
into
leave
daa
dec
xor
ror
scas
pushf
cmp
sub
in
mov
mov
lahf
ja
push
addr16
xchg
jbe
mov
sub
xorl
xchg
or
cwtl
cmpsl
scas
push
xor
iret
jnp
fnstsw
xchg
aad
push
dec
sbb
cmp
mov
lahf
in
cmp
aam
cli
mov
mov
xchg
outsb
aad
cltd
mov
pop
mov
mov
mov
jb
push
jge
mov
data16
mov
imul
inc
mov
push
stos
aad
jecxz
jae
cld
cltd
xchg
sub
call
push
mov
in
imul
pop
loop
xchg
or
or
mov
jb
adc
jmp
dec
loopne
push
or
iret
js
cltd
pop
xchg
call
dec
mov
mov
loope
or
clc
in
mov
insl
pop
push
into
jae
dec
in
sbb
inc
clc
mov
fildl
mov
into
mov
rcll
mov
leave
cmpsl
and
lock
pusha
mov
out
lahf
inc
aaa
scas
out
into
xchg
cmpsl
test
test
jle
faddl
imul
inc
jne
or
jno
push
or
adc
mov
push
inc
mov
pop
cwtl
push
mov
jnp
mov
add
fildl
pop
sar
jne
popf
push
pop
pop
out
mov
scas
std
addb
loop
cs
xchg
pop
fldcw
lock
and
out
pop
dec
or
gs
and
pop
mov
inc
xor
call
sub
dec
sbb
add
push
aaa
sbb
es
dec
loopne
andl
stc
iret
inc
lret
cmpsb
lret
sub
push
dec
arpl
loop
pop
les
loopne
pop
add
fstl
jne
inc
cmp
sarl
call
push
fcmovnu
dec
sub
xchg
pop
movsl
or
lea
pop
push
mov
mov
test
push
out
sub
and
data16
popa
jle
pop
pop
jl
pop
or
mov
addr16
mov
lret
into
cltd
adc
int3
bound
add
addr16
sub
das
or
andl
jne
lods
adc
xchg
sbb
pop
dec
in
data16
sub
fldcw
in
push
addr16
adcl
cli
in
xorl
add
stos
mov
and
rcr
jnp
push
add
xor
adc
mov
mov
adc
push
mov
cmp
mov
xor
lret
scas
xchg
and
das
fistpl
imul
jle
adc
add
shl
hlt
add
jg
add
xchg
nop
cmpb
sub
jae
iret
call
rcrl
arpl
lea
mov
pusha
sarb
popf
or
mov
xor
shrb
out
jo
jo
fwait
loope
pop
and
xor
xlat
adc
add
xor
and
push
xor
mov
xchg
cs
or
adcl
stos
mov
repz
imul
sbb
sub
sarl
push
leave
in
push
ret
xchg
cltd
and
mov
leave
jg
cmp
xor
add
push
jno
rcr
roll
mov
imull
sbb
cltd
cmpsl
mov
and
or
fimuls
inc
add
mov
mov
fcmovb
in
jno
cli
mulb
pop
sbb
push
fisubl
scas
pop
fdivrp
dec
loop
leave
inc
mov
cld
dec
fiaddl
dec
pop
dec
je
mov
jno
sbb
loop
push
pop
popf
test
xor
lretw
mov
cli
pop
xchg
popa
mov
dec
mov
cmc
cmp
push
pop
call
aad
pop
lahf
push
adc
add
mov
mov
mov
push
nop
outsb
push
cld
sub
test
xchg
pusha
inc
pop
aaa
adc
sbb
add
mov
mov
xchg
inc
aad
test
ds
push
mov
out
jnp
xor
jo
xchg
call
or
pop
daa
jae
into
cmpsl
push
push
ja
loopne
push
cwtl
mov
es
xlat
and
les
ret
push
jne
in
mov
rcll
jge
mov
popa
orb
sbb
and
jnp
sti
shll
push
xchg
push
push
sub
jno
cltd
add
mov
or
push
lea
fwait
push
adc
stos
mov
mov
imul
in
push
ds
push
xchg
mov
dec
test
mov
mov
pusha
dec
push
jnp
mov
fmull
pop
cmp
sahf
lret
sbb
or
notl
sub
lcall
test
and
jmp
cltd
iret
pop
lock
psllw
xlat
shlw
nop
push
js
ds
cmp
xchg
inc
adc
inc
push
andps
test
inc
aaa
ret
sbb
test
xchg
mov
lcall
sbb
mov
ja
stos
sbb
mov
jp
pushf
xchg
mov
adc
ficoml
xor
repz
xor
push
sub
call
into
aas
in
imul
or
subb
xchg
push
lret
aas
dec
jmp
ljmp
mov
ds
stos
jecxz
pop
ds
sub
xchg
or
cld
sbb
jp
jbe
lods
dec
xchg
mov
and
out
sub
aaa
adc
sahf
jo
xchg
xor
aam
enter
sti
inc
jp
jne
stos
je
imul
xchg
cmpsb
fwait
sub
adc
jmp
inc
mov
movsb
jp
or
mov
adc
pop
jg
adc
mov
mov
test
fdivrs
mov
mov
pushf
inc
outsb
wrmsr
cmp
pop
int3
fcomps
sbb
rcrl
add
in
jl
cltd
xchg
call
cwtl
sub
and
pushf
mov
and
repnz
cmpl
in
add
in
dec
pop
les
xchg
push
jns
test
and
call
sbbl
or
scas
mov
jne
pop
xor
cli
cmc
shll
sbb
andb
sbb
les
shrb
shlb
ja
mulb
movsb
pop
pop
aam
ret
mov
repz
test
dec
mov
mov
mov
out
in
int
popf
push
stos
pause
lods
fnstsw
xchg
or
es
xor
inc
dec
fimuls
ss
lahf
cmp
jmp
inc
clc
lret
inc
mul
xchg
out
push
sub
cld
lods
inc
fcomp
daa
jg
sub
hlt
mov
jno
xor
in
rclb
ss
call
inc
or
aam
sbbb
jp
dec
push
push
inc
arpl
push
jge
es
or
jbe
mull
lret
subl
fwait
roll
je
lods
sub
das
dec
loop
fstpl
in
lcall
inc
nop
add
mov
test
in
fstps
rcll
mov
out
adc
mov
jne
in
jbe
cmp
adc
mov
test
sub
je
mov
and
dec
das
mov
cli
mov
cmp
add
fisttps
fnstenv
pop
or
sub
in
jae
mov
fwait
or
adc
cltd
lret
clc
les
dec
aam
mov
sub
add
ror
addr16
inc
jns
fsubp
test
inc
mov
movl
add
adcb
cmpsb
push
jge
ss
in
clc
fnstenv
adc
jg
fcoms
decl
xor
inc
pushf
mov
fs
inc
addr16
lds
das
mov
test
sub
lods
andl
stos
cmpsb
pop
sub
jle
sti
jp
dec
andps
xor
sub
cmpsl
scas
jnp
push
and
mov
sub
cmp
lock
jmp
scas
pop
jle
xchg
sbb
mov
xor
insl
jg
leave
or
push
xchg
test
adc
gs
ljmp
popf
je
xor
add
out
adc
xor
mov
daa
dec
sbb
fdivp
sbb
ljmp
lods
mov
mov
jecxz
jg
daa
inc
xor
std
int
sub
mov
dec
sarb
arpl
sbb
mov
sahf
repz
int
add
aad
xor
mov
leave
mov
mov
outsb
sub
mulb
test
dec
lret
jnp
ljmp
arpl
dec
sbb
add
sub
inc
xchg
dec
fadds
clc
outsl
arpl
das
scas
call
cmc
jno
dec
xor
subb
call
mov
and
sbb
les
repnz
int3
aaa
stos
sti
clc
shrl
pop
int
popa
addr16
stc
sub
inc
outsl
movsb
lcall
xchg
aad
push
or
pop
repnz
mov
push
mov
inc
pop
aaa
test
xor
adc
rolb
gs
or
hlt
dec
pop
sbb
shrb
push
cltd
mov
lods
mov
pop
sub
lret
loopne
xchg
fwait
push
sbb
cmp
or
lret
mov
rorb
mov
div
mov
sbb
shlb
arpl
xor
adc
inc
sub
dec
lret
jae
popa
les
jne
sub
jl
inc
xchg
test
test
ljmp
inc
fwait
add
out
xchg
jnp
push
mov
jbe
ficoms
lods
sbb
scas
xor
lods
cmp
xchg
test
pop
adc
mov
inc
fucomip
test
lods
mov
jle
sub
cmc
test
hlt
push
jbe
sbb
push
test
fwait
pop
sbb
js
inc
pop
imul
ja
pop
push
pusha
mov
pop
sbb
out
cmp
add
add
jp
xorb
adc
mov
lods
xchg
jns
fdivp
push
pop
pop
aam
cmp
adc
sti
cmc
inc
addb
test
mov
call
aas
scas
xchg
fidivrl
xlat
xchg
std
rol
out
sarb
lock
dec
mov
jbe
push
faddl
xor
lods
mov
and
push
outsl
mov
mov
shll
and
movsl
stos
sub
movsb
cmp
pusha
push
pop
fld
mov
xor
and
ja
add
aad
out
mov
pusha
xchg
jmp
ja
les
xchg
inc
inc
add
push
adc
dec
lret
sbb
mov
outsb
mov
in
jne
fwait
in
jns
test
xchg
xchg
push
std
inc
jp
push
add
sub
sbb
cmp
jo
sbb
subb
pusha
sbb
mov
cmp
lahf
lea
lcall
lahf
inc
adc
test
push
adc
xchg
lea
lods
jecxz
cli
mov
imul
leave
and
xlat
outsl
pop
cmc
stos
pop
xlat
jns
add
mov
gs
fwait
adc
fwait
push
inc
jne
or
aam
xchg
loope
icebp
add
cmp
cmp
mov
fists
pop
pushf
es
xchg
cmpsb
push
jno
ds
jne
ljmp
lret
jns
push
xchg
pop
ljmp
and
push
popa
jge
mov
cmc
mull
mov
pslld
test
mov
sub
mov
adc
push
cmp
sub
and
pop
mov
scas
into
xor
cld
sbb
and
pop
cli
sbb
repnz
add
imul
je
insl
mov
int3
xchg
sahf
movsl
jne
ret
xchg
sbb
negl
sti
jp
aam
mov
inc
jae
cwtl
ret
or
fdivr
test
mov
enter
sbb
and
xchg
or
add
int
xchg
stos
fidivs
push
repz
inc
xchg
sub
xchg
loop
jnp
inc
push
jmp
jecxz
dec
cmpsb
inc
loopne
mov
add
add
add
and
mov
push
pop
int
mov
sbb
adc
mov
mov
push
fs
xchg
fmuls
sub
pop
sar
mov
js
dec
push
popa
repz
and
aad
sub
dec
or
cmpsb
pop
or
cmp
sub
jg
lret
stc
sub
push
xchg
ret
sbbb
neg
test
push
mov
jecxz
push
movsb
cmp
sbb
xchg
int3
pop
xchg
mov
cmp
xchg
xor
das
sbb
rdpmc
or
or
pop
sub
sti
or
pop
sub
or
pop
or
jns
ljmp
stos
jbe
movups
sub
inc
int3
out
xlat
fstpt
je
push
fwait
sub
icebp
aas
into
sbb
mov
lcall
aas
out
shrb
jbe
andl
sub
ret
pop
gs
xchg
in
sub
aaa
jns
inc
adc
sahf
ja
cmc
pop
les
jmp
pop
gs
test
fldenv
push
sub
and
xor
jecxz
add
shr
shll
and
add
stos
rorb
and
and
mov
mov
fisubs
loopne
call
add
cmp
push
rcr
inc
test
stc
ret
insb
sub
movsl
and
aad
hlt
jnp
ljmp
add
lods
jne
leave
push
jns
add
and
test
inc
cmp
mov
adc
das
xchg
popa
repnz
dec
nop
cmp
xchg
out
xchg
dec
or
push
pop
sub
mov
or
dec
imul
xor
add
sti
xor
int
mov
fdiv
sub
int3
mov
mov
mov
mov
ret
or
add
ret
jnp
xchg
dec
daa
aas
in
add
nop
sbb
xor
and
dec
ret
sbb
out
fsubs
ret
jge
outsb
aad
cld
lcall
mov
jl
and
out
icebp
sbb
mov
add
testl
das
jp
roll
ret
pop
or
mov
int
test
int3
cmp
cmovae
pop
adc
or
adc
lret
xchg
mov
dec
cmc
jns
xor
lods
sub
lods
mov
pop
jle
iret
push
pop
xchg
inc
pushf
xorl
cli
lods
dec
fwait
push
fdivs
out
iret
in
push
jp
pop
cmp
inc
xlat
rolb
xor
xchg
shl
rcrl
movsl
inc
sbb
mov
xabort
es
icebp
lock
in
in
inc
cs
es
test
xchg
dec
arpl
add
jmp
push
fmul
outsb
pop
inc
cmp
mov
js
mov
lds
mov
rcll
je
dec
jbe
loopne
ljmp
cmpsb
and
pop
xor
in
inc
pop
rcr
push
add
int3
test
aas
xor
jno
cmp
sub
mov
pop
mov
inc
mov
loopne
popf
stos
mov
jb
std
pop
sbb
outsl
cmp
push
mov
or
mov
mov
jp
fsubr
aaa
dec
sbb
push
jle
nop
lret
ret
stos
popf
or
iret
nop
inc
pop
fadd
xor
xchg
mov
decb
int
sub
in
push
pop
nop
int3
adc
cmp
push
sbb
mov
sbb
cs
shrb
inc
outsl
loopne
sahf
pop
and
in
pop
push
fistps
lods
dec
fcompl
jae
cmpsl
adc
rolb
inc
shll
decb
mov
or
rorl
rcrb
push
jne
scas
sub
add
add
sbb
or
or
imul
insb
sub
pop
lock
cmp
inc
outsb
clc
lods
addr16
pop
inc
pusha
clc
add
add
mov
sahf
pop
idivb
lret
mov
xlat
test
shlb
xchg
imul
xor
jl
dec
push
inc
test
xor
outsb
xor
mov
movsl
sbb
stos
mov
sub
lahf
or
loopne
aaa
std
mov
subb
sbb
jmp
adc
lcall
mov
adc
cmp
idiv
js
xchg
push
cltd
sahf
sbb
ja
sbb
push
push
xchg
cmp
push
jge
push
lret
cmp
arpl
mov
cmc
inc
stos
sbb
arpl
rolb
add
mov
icebp
xchg
mov
sub
cmp
outsl
and
push
jp
lock
jl
mov
ds
test
or
pop
push
jnp
xchg
or
inc
xor
aam
pop
dec
fisttpll
sbb
pop
popa
lods
pop
mov
sarl
cmpsl
cmc
xchg
xchg
repnz
pop
test
adc
sub
in
loop
mov
lret
dec
mov
mov
stc
lock
jo
ja
xchg
stc
lds
loopne
push
xchg
sub
cmp
inc
sub
test
push
mov
fisubrl
add
jg
in
cmp
xor
fdivp
xchg
jbe
cmp
popa
mov
fucomip
dec
leave
rorl
jbe
or
sub
rorb
pop
mov
lahf
andb
xor
inc
or
add
jns
xor
mov
xchg
incl
mov
inc
pop
js
jge
aaa
add
inc
mov
int3
or
lret
dec
mov
leave
stos
test
adc
jle
idivl
jae
outsb
push
lret
leave
mov
lahf
add
add
out
imul
inc
or
cmpsb
cmp
or
lret
jne
bound
dec
jae
mov
movsb
mov
sbb
ja
outsb
scas
das
pop
stos
hlt
add
jo
xchg
push
add
cmpsl
aas
je
in
movl
adc
jns,pt
pop
in
or
mov
lea
andl
ljmp
pop
fdivrs
ret
inc
pop
xchg
mov
lret
sub
push
popf
inc
nop
adc
nop
rcrl
and
add
fisttpll
mov
lods
int
andl
fisttpll
and
jle
xchg
add
rol
jb
ret
popf
push
mov
sbb
or
mov
push
mov
iret
jmp
int3
cli
sub
xchg
lret
fcompl
push
push
stos
xchg
xchg
adc
or
fisubrl
loope
cld
out
mov
push
sub
pop
mov
mov
mov
iret
push
dec
add
jle
pusha
test
cmpsl
cmpsl
adc
pop
mov
pop
xchg
or
outsb
mov
int
cmc
dec
push
or
xor
or
pop
daa
ljmp
in
fdivl
sbb
in
mov
jmp
pusha
inc
pop
daa
fst
inc
dec
cmpsl
lods
push
enter
ja
lea
push
pop
xchg
jne
and
aas
int3
hlt
loopne
sbb
push
cmp
jbe
mov
mov
sbb
lahf
lock
and
aad
adc
push
imul
jg
sub
aaa
repnz
imul
cmp
mov
lods
mov
sbb
and
mov
sbb
dec
enter
aaa
iret
test
inc
pop
jbe
cmp
push
ret
xchg
pop
out
xor
insb
rcl
call
cmp
and
push
cmp
add
aam
les
pop
push
pop
dec
outsl
sbb
sbb
lret
jb
addl
fdiv
mov
lods
jg
lock
add
pop
popa
hlt
push
fisttpl
mov
fstpt
xor
jo
pushl
std
popf
adc
mov
xor
out
and
cmp
mov
jl
adc
gs
push
fnstsw
jne
jns
aad
push
xor
cs
add
sub
cmpsl
inc
adc
pop
test
add
pop
rcll
xorb
xchg
daa
xchg
movsl
das
mov
push
push
sbb
ret
sub
lea
ljmp
ds
inc
dec
xor
loope
pop
mov
gs
push
push
or
xchg
ja
cltd
mov
dec
mov
filds
or
cli
and
inc
xchg
inc
mov
sbb
cwtl
lds
mov
popa
aad
daa
daa
inc
and
mul
pop
ja
into
repz
push
jge
xchg
mov
movsl
cmp
inc
sub
scas
vmwrite
in
pop
inc
out
xchg
lahf
or
out
xchg
arpl
jo
das
pop
mov
lds
bndldx
push
mov
js
jae
jno
mov
sub
jno
sbb
sbb
in
popa
pop
in
insl
xchg
rol
leave
fs
push
ljmp
subb
bound
xor
mov
xchg
dec
jnp
pusha
xor
jge
dec
ficoml
jl
ds
rcl
es
mov
int3
inc
lods
jnp
gs
lods
daa
xchg
mov
jle
stc
jl
cmp
adcb
sahf
or
cmc
fucompp
xorb
add
inc
mov
cli
mov
sub
xlat
repnz
iret
mov
and
xchg
insb
jmp
cmp
ja
repz
fsubrl
sbb
es
in
pusha
shrl
out
jp
dec
ficomps
outsb
repnz
and
repnz
inc
xor
sbb
sub
xorl
jb
bound
push
push
out
shll
out
sub
add
inc
add
inc
icebp
ds
mov
ss
xchg
scas
adc
loopne
adc
cld
addr16
stos
cmp
aam
cltd
in
or
lret
mov
lods
push
mov
cmp
cmp
push
cwtl
lock
dec
cmpsl
ds
or
scas
jl
scas
cltd
mov
sbb
mov
out
imul
mov
les
push
mov
pop
cmp
pop
inc
xchg
xchg
data16
repz
stos
negb
mov
jae
mov
js
test
std
cmp
lret
rcl
fidivrl
roll
in
push
mov
ret
mov
ds
xchg
idivb
mov
das
add
mov
push
test
adc
dec
aam
adc
push
das
inc
dec
popa
lods
test
aad
or
jge
jmp
sbb
dec
sar
cs
imul
dec
js
adc
dec
add
xchg
jp
adc
mov
xorl
imul
push
sbb
repnz
mov
jl
push
and
xchg
push
xchg
popf
jmp
dec
lret
ud2
shlb
mov
divl
jns
fs
fcomi
lock
loop
jp
xlat
in
dec
testb
sub
insb
fwait
dec
jmp
mov
out
in
jle
fldcw
mov
xchg
inc
test
out
das
lret
cmpsb
add
jne
mov
lods
repnz
in
add
test
lds
jg
cli
xor
add
divb
pop
sbb
mov
jmp
jb
in
test
addl
xchg
mov
test
imul
aad
inc
mov
mov
inc
repz
cmp
adc
xor
loop
add
pop
bound
addr16
sub
jmp
adc
cmpl
xchg
into
and
xor
and
push
cmp
cmc
lahf
inc
mov
sbb
ljmp
xchg
scas
pop
je
xchg
scas
mov
xor
xchg
loop
dec
ss
imul
push
repnz
mov
add
mov
inc
jecxz
outsl
lahf
sub
jb
out
adc
pop
sbb
mov
insl
pop
cmp
mov
ja
in
jb
icebp
dec
out
mov
mov
pop
sub
jns
jns
and
pop
jmp
test
test
outsl
enter
xor
clc
sbb
rcl
or
sbb
xor
ffree
pusha
pop
les
xchg
mov
dec
lret
aaa
and
shlb
sti
dec
into
sbb
mulb
xchg
mov
pop
das
jno
xorl
dec
xchg
inc
inc
andl
pop
sbb
rcrl
mov
pop
jb
faddl
and
cmp
push
sub
ljmp
mov
adc
popa
dec
pop
mov
ret
xor
inc
lods
test
aaa
sub
imull
mov
cs
cli
in
lds
je
movsb
push
stos
jg
jge
mov
xor
mov
sbb
push
dec
jmp
leave
cmc
sahf
hlt
jp
movsb
in
mov
and
sub
or
pushf
and
sub
imul
cmp
mov
cmpsb
scas
repnz
sbb
fadd
xor
mov
pop
mov
inc
xchg
repnz
push
mov
pop
jg
jo
mov
aam
repz
in
jg
arpl
push
cmc
filds
sbb
xchg
pop
inc
push
mov
push
pop
dec
fimuls
shrb
or
mov
ds
scas
in
cmp
jno
and
aam
add
pop
pop
and
je
nop
mov
mov
inc
xor
lea
iret
out
add
test
sbb
jbe
mov
aam
mov
cs
sbb
sub
xchg
inc
add
imul
add
cmpsb
and
cmc
mov
sbb
inc
testl
jp
std
dec
adc
and
jo
pop
push
adc
push
aaa
ficomps
sbbl
xchg
test
jno
mov
cmp
mov
pop
or
int3
outsl
cmc
shrb
pop
jmp
cmpsb
adc
xchg
mov
add
sahf
push
jns
icebp
mov
cli
fstpl
mov
fs
push
adc
fnsave
jb
scas
cli
je
jl
inc
out
das
jnp
cmp
aad
sahf
pop
jne
fisttpl
shrb
movsl
aas
int3
fmull
nop
je
cmpsb
ret
cwtl
xor
sti
cmp
sbb
ror
sbb
jae
cmp
dec
into
jp
jle
ret
jmp
mov
testl
enter
adc
and
push
dec
outsb
stc
fwait
mov
call
aaa
cld
pop
nop
jae
ds
inc
xlat
mov
les
scas
xor
lcall
adcb
mov
rcl
decl
cli
or
leave
fs
jns
xorb
or
divb
add
dec
sbb
fistl
mov
jmp
sbb
push
or
jle
mov
sarl
mov
push
push
pop
xor
rorb
cmp
cmc
xchg
data16
cmp
stc
subb
and
adc
pop
mov
mov
test
insl
clc
out
negl
dec
inc
cmp
testl
outsl
int3
sti
sub
scas
ljmp
cmp
and
fists
push
dec
push
inc
push
cld
inc
cmp
lcall
filds
mov
fwait
push
out
add
jmp
mov
jl
int3
add
mov
les
mov
es
outsl
sbb
cli
dec
cli
mov
jmp
fdivrl
aam
repnz
sub
loope
xchg
push
aad
and
fldt
and
mov
pop
test
mov
inc
cmp
jbe
movsl
mov
fisubrl
add
and
repnz
push
mov
stc
sub
jmp
cmp
pop
adc
je
cmp
xchg
loopne
mov
adc
xchg
movsb
push
out
xlat
dec
test
in
ret
lea
popf
dec
lock
mov
pop
jecxz
push
push
pusha
bound
bound
insb
xchg
flds
add
rorl
inc
jmp
in
lret
jae
frstor
sbb
sub
popf
adc
lock
fdivs
fwait
outsb
sbb
cmpsb
mov
mov
xchg
jecxz
jo
xchg
scas
in
mov
inc
movsb
in
cmp
cvtps2pd
dec
je
mov
adc
pop
and
pusha
mov
dec
iret
lahf
mov
movsb
xchg
dec
dec
iret
or
xchg
cli
cld
mov
cmpsl
dec
cli
pop
jno
cmp
imul
sbb
enter
mov
fdivrs
pop
adc
pusha
rcrb
adc
addl
xchg
or
push
jl
sub
xchg
adc
mov
fwait
and
jno
jns
push
sbb
movsb
in
jne
loope
xchg
lds
outsl
test
pushf
fwait
ja
pop
into
and
hlt
mov
out
daa
lahf
sub
out
test
sarb
incb
stos
lods
scas
xchg
pop
push
ja
xchg
clc
pusha
fadds
ljmp
cltd
xor
mov
inc
jl
mov
sbb
fwait
in
lcall
lods
xor
mov
faddl
pop
imul
pop
test
sbb
pop
dec
mov
subl
or
bsf
xor
pusha
out
mov
lods
xchg
gs
push
xor
popf
in
ret
mov
adc
in
fsubl
push
adcl
inc
mov
sbb
aaa
mov
lock
xor
pop
jg
scas
push
sub
xor
jle
repnz
sub
mov
sbb
xchg
cmc
mov
pop
jp
pop
xor
lret
xor
xor
pop
in
std
fwait
shr
gs
pop
stos
or
in
addr16
xor
dec
jno
in
loopne
ljmp
pop
inc
ja
call
sbb
loop
adc
add
cli
lret
inc
push
in
faddl
sarb
adc
mov
popf
mov
stos
aas
nop
movsl
lahf
pop
sub
call
lods
out
mov
and
arpl
test
xor
popa
xor
adc
push
pushf
ror
mov
sarl
mov
fs
add
je
sti
sbb
adc
sub
mov
and
mov
aas
mov
dec
jae
loope
push
adc
mov
lret
stos
pop
inc
lea
push
fsubs
or
mov
pop
sub
jae
jl
arpl
cmp
cltd
bound
test
test
and
loope
cld
xchg
xor
inc
lods
add
lods
dec
hlt
or
or
rcrl
jno
jge
mov
fwait
dec
xchg
adc
mov
jge
loop
out
or
push
hlt
inc
xor
mov
stos
adc
mov
sbb
and
rcr
call
xor
outsl
dec
cmpl
or
xchg
loope
imul
stos
fists
rcll
popa
test
test
scas
int3
dec
jle
leave
dec
jmp
jb
sbb
jmp
ljmp
adc
jge
ja
mov
in
div
cmp
sarb
pushf
mov
cmp
push
jo
push
dec
adc
mov
jnp
push
mov
mov
shll
negl
mov
les
loopne
and
inc
xorb
inc
in
stos
scas
data16
mov
rcl
add
push
jbe
xchg
int3
aam
ret
cwtl
cmp
mov
sar
or
imul
dec
mov
bound
shrl
and
xor
lea
ljmp
cld
mov
scas
add
ja
aas
out
inc
cmp
neg
popf
in
popf
pop
or
pop
adc
inc
sbb
cmp
ret
mov
push
mov
xor
enter
sarl
icebp
popf
xor
mov
loope
mov
cmp
add
or
or
addr16
mov
adc
sbb
sub
fs
sarb
sub
dec
sub
lock
xor
movsl
mov
shlb
scas
es
adc
add
ds
dec
nop
adc
sub
and
loope
mov
add
pop
dec
dec
dec
and
mov
mov
sub
xor
orb
xchg
push
add
pushf
testl
lock
cmp
out
push
stos
neg
movsb
imul
stos
xor
sbb
xchg
ljmp
rcl
pop
xor
test
aaa
mov
outsl
and
inc
shrl
iret
and
sub
in
add
pushf
or
add
mov
pop
pop
in
xchg
pop
aad
mov
enter
sub
pop
bnd
fcoms
cmp
mov
mov
mov
jnp
push
mov
rcr
sub
dec
stos
dec
add
scas
enter
rol
sub
mov
adc
sub
push
push
push
dec
popa
sbb
cmp
movsl
pop
or
cli
cli
and
and
popf
imul
pop
push
push
popf
add
push
and
je
icebp
data16
xor
mov
mov
push
xchg
shrl
push
xchg
mov
fwait
and
aam
sub
inc
shrl
or
jne
sbb
mov
dec
xchg
push
adc
or
sahf
xor
mov
repz
orb
push
testl
mov
or
mov
out
pop
and
adc
cmp
mov
xchg
roll
ljmp
pushf
cmpsb
push
pop
or
dec
shl
cmp
or
sbb
mov
jge
ret
sar
pop
adc
cltd
cli
fldt
lods
ficoml
or
aad
hlt
enter
aaa
movsl
imul
or
pop
fiaddl
sbb
iret
cltd
cmp
repz
movsl
lea
outsb
push
stos
out
pop
mov
std
repnz
cmp
loopne
xchg
push
push
cmp
fcomps
add
sbb
dec
sub
jnp
xchg
add
pushf
ret
enter
cmp
out
cmp
lret
adc
push
cmp
push
test
loopne
inc
aas
movl
dec
mov
push
jns
aaa
jns
lret
test
mov
push
sahf
inc
das
jecxz
pusha
ss
pop
xlat
into
jl
test
mov
adc
inc
into
movsl
pop
pop
push
inc
addb
scas
inc
sbb
mov
fidivrs
pop
xor
aas
sub
dec
scas
mov
lods
lea
cmp
xor
inc
pusha
pushf
mov
aas
filds
loopne
mov
or
rcr
sahf
add
xlat
cmp
cwtl
and
xchg
pop
lock
mov
repz
inc
jmp
jb
push
test
mov
test
aad
inc
push
pop
test
mov
bnd
inc
mov
into
push
testl
cmc
and
and
rcrb
aas
mov
loope
scas
sub
adc
in
pop
repz
inc
jbe
xlat
loope
es
dec
xorl
pop
inc
in
icebp
mov
pop
sbb
push
dec
sub
sahf
jl
rcrb
push
fmull
outsb
cmp
pushf
pop
bound
das
mov
cltd
scas
daa
sti
lock
insb
imul
push
xchg
mov
cmp
aad
inc
sti
sbb
imul
idivb
aas
imul
push
stos
inc
jnp
and
popa
inc
or
int
or
test
sub
cwtl
fcmovnu
popa
lahf
js
rsqrtps
pusha
and
push
je
lods
jmp
cmp
sub
icebp
std
data16
call
cmpb
add
pop
sub
hlt
out
cmp
cmpsb
adc
pop
xchg
aam
lock
push
and
dec
aas
adc
dec
adc
in
mov
cld
pop
mov
or
xchg
cmp
shll
pop
xlat
test
int3
ds
lret
cld
pop
inc
jno
jecxz
icebp
inc
test
leave
ja
pusha
sub
testl
sbb
repnz
hlt
scas
out
pop
das
dec
loope
and
and
ret
adcb
shr
or
xchg
dec
push
repnz
sbb
adc
fadds
fdivr
mov
addl
nop
jle
inc
call
outsl
mov
cli
scas
mov
xchg
pop
mov
sbb
imul
dec
pusha
lret
jae
scas
mov
cmp
dec
movsl
sbb
stc
mov
out
test
pop
test
lea
andb
movsb
enter
or
leave
shlb
jae
fbld
adc
loop
inc
jne
xchg
je
shrl
mov
loop
int
lahf
xor
ret
xchg
jns
pop
or
jl
lahf
dec
xor
loope
xor
addb
dec
and
pop
cmc
push
xchg
inc
xor
iret
jle
or
aam
in
in
ds
addr16
add
inc
or
mov
iret
std
int3
jle
adc
adc
call
push
sub
gs
out
pop
xchg
leave
movsb
mov
xor
and
iret
loop
xchg
js
or
and
ja
in
rcrl
pop
sub
in
or
int
xchg
cmpsb
fs
je
lahf
cmpsb
xchg
push
push
sbb
movsl
push
nop
pop
mov
push
cmpsb
fsts
loope
ds
mov
pop
mov
or
pop
out
enter
pop
bound
ja
sbb
shll
ss
mov
ret
les
jle
pop
loop
xor
and
dec
sbb
popf
mov
adc
pop
sar
sti
mov
pusha
data16
rol
int3
mov
lods
fisttps
push
test
and
sub
shlb
mov
dec
xchg
add
into
flds
jo
data16
rcr
xlat
pushf
insb
push
adc
mov
pop
push
push
das
sub
mov
test
inc
sbb
mov
pop
mov
int
pushf
scas
lock
push
std
outsl
jb
inc
ret
imul
out
pop
cmpl
lret
cmpsb
xchg
decl
fwait
adc
aaa
lock
cmp
cmp
fs
imul
test
mov
outsb
in
mov
leave
scas
loopne
fsubrs
xchg
sbb
mov
sarb
xchg
pusha
or
sub
xchg
cmp
mov
adc
and
adc
pop
test
push
mov
jns
leave
push
into
shlb
inc
out
mov
iret
rcrb
fbld
out
es
mov
scas
jge
lahf
mov
mov
xchg
adc
push
xchg
lea
sbb
sbb
or
pusha
jecxz
pop
pusha
xchg
cmp
push
stos
and
fstpl
sbb
das
sbb
in
fs
in
pop
orb
mov
addr16
scas
fdivrp
decl
fwait
hlt
outsb
aad
jns
data16
shrl
das
sub
adcb
pop
inc
and
call
movsb
dec
insb
mov
outsb
pop
out
mov
ret
popa
push
cmpsl
ret
into
imul
shr
idiv
mov
hlt
std
addr16
fadds
xor
ret
mov
mov
sub
pop
cld
aad
pop
aaa
daa
jb,pt
mov
testl
xor
lods
call
inc
dec
pop
rcrl
imul
pop
call
fistpl
jb
mov
inc
mov
cmp
out
mov
adc
jp
ja
mov
or
sub
lahf
sub
dec
mov
push
cmp
bndldx
jge
mov
lret
test
pop
cmc
add
or
pop
outsb
dec
add
or
sbb
test
mov
dec
ret
movsl
fwait
add
and
mov
sbb
imull
sahf
xlat
mov
push
pushf
rcr
add
inc
fbstp
and
add
cmp
xchg
xchg
dec
jnp
popl
xor
test
arpl
adc
pop
jo
jcxz
xor
icebp
xchg
inc
adc
xchg
mov
test
in
dec
pop
lcall
rcrl
hlt
push
shl
pop
push
ss
pusha
cli
imull
jo
jnp
adc
lss
pop
cmpsb
int
push
pop
cmp
and
push
pop
test
insl
or
in
mov
mov
stos
sbbl
mov
pop
cmp
push
mov
jbe
dec
add
sbb
inc
call
mov
imul
dec
je
shr
mov
jns
cld
adc
mov
pop
sub
inc
push
outsl
lea
cs
orb
ret
dec
sbb
int
cmp
std
or
loopne
out
push
xor
outsb
jbe
scas
and
jno
xchg
addb
dec
or
in
cmpsl
cmc
xor
or
fisubrs
jne
jno
outsb
jno
cmpl
loopne
clc
fcomps
rclb
scas
fimull
sub
pop
mov
pusha
lock
and
adc
sub
dec
sbb
ljmp
mov
cmpsl
sub
jae
sub
push
call
add
lods
js
cld
mov
icebp
xor
pop
addr16
lcall
adc
inc
or
ja
call
xchg
jno
jle
adc
sahf
pop
cld
mov
ljmp
dec
mov
mov
pop
sub
cwtl
cwtl
add
adc
sti
sub
lahf
sbb
mov
call
fsubr
mov
test
xlat
adc
inc
ds
or
jecxz
push
ja
mov
fidivl
pop
test
adc
mov
jp
jge
mov
mov
cmp
inc
mov
fcomp
mov
fs
sub
xchg
mov
inc
out
aad
movsb
xchg
mov
xchg
into
int3
mov
dec
xchg
nop
aam
dec
or
repnz
inc
push
cmp
cmp
inc
test
daa
xchg
icebp
in
aas
mov
in
inc
xchg
jmp
and
mov
imul
arpl
pusha
mov
sarb
rcrb
aam
push
push
mov
xor
fimull
dec
test
or
mov
adc
jae
loopne
push
xchg
sub
add
arpl
push
inc
imul
dec
or
cmpsl
xor
xchg
push
dec
jno
pop
ss
ret
cmp
les
pop
xchg
cmpsb
ret
outsb
xchg
pop
cmp
lret
xor
and
or
rolb
rcrl
xchg
js
jecxz
insl
cmp
push
lahf
cmp
outsl
inc
and
or
mov
das
repz
je
or
leave
dec
cmpsl
mov
fimull
es
in
inc
xor
mov
pop
inc
jge
jbe
adc
repnz
aaa
or
sbb
dec
das
xchg
xor
push
imul
jbe
test
push
scas
mov
push
fisubrs
lahf
mov
out
pop
je
jl
in
test
mov
xor
cmc
mov
push
lahf
daa
pop
loope
pop
inc
jmp
divb
dec
lea
out
xchg
lock
ljmp
testl
jnp
cmp
xchg
rcrb
sub
pop
sbb
addr16
es
scas
aas
push
out
or
add
dec
mov
shll
mov
enter
or
aad
in
pop
aas
inc
xor
xor
ret
add
popa
or
add
cwtl
insb
cmpb
jmp
mov
js
repz
mov
push
movsb
or
mov
sub
push
dec
lods
xchg
jne
sub
xchg
pop
leave
pop
jp
or
mov
aas
in
sub
stc
sub
xchg
ds
mov
and
cltd
xchg
cmpsb
lcall
inc
ljmp
pop
push
aas
loope
lcall
and
dec
popa
xchg
mov
pop
jbe
leave
dec
ljmp
sahf
xor
lods
aas
cwtl
cmpb
push
push
or
xor
add
jns
in
fnsave
or
xor
pop
movsb
loopne
ds
sub
pop
stos
fnstsw
out
cmp
push
and
sbb
sub
subl
add
sbb
dec
cmp
add
jnp
add
or
outsb
ret
fs
mov
mov
scas
dec
shlb
into
bound
dec
add
pop
jle
jl
fimuls
popf
xchg
push
mov
aaa
loop
das
roll
loop
push
dec
inc
call
pop
out
xlat
push
sub
stos
mov
pop
rcll
mov
incl
subb
sti
mov
bnd
xlat
inc
fisubs
leave
test
dec
inc
or
addr16
fmull
negl
pop
lcall
push
sbb
out
xchg
pop
in
xorb
icebp
loopne
jecxz
out
dec
pop
cmp
push
fldl2e
adc
jb
or
mov
inc
inc
test
js
push
xlat
mov
dec
je
cmc
fisttpll
leave
add
mov
dec
cli
shll
sub
xor
jl
bnd
mov
lahf
andl
loope
test
mov
outsb
xor
in
jmp
jo
aas
cld
push
es
or
icebp
jmp
push
cmp
pop
mov
movzwl
dec
mov
push
jg
lcall
add
out
sahf
addr16
int3
int3
std
cli
out
in
cld
lods
test
movl
popa
stc
cs
andb
mov
pop
nop
in
or
push
sub
ljmp
and
sbb
in
sbb
mov
sar
pop
lods
insb
nop
adc
cmc
loope
pop
mov
or
xor
mov
sub
pushf
ret
int
mov
xor
adc
into
mov
imul
pop
in
push
fwait
and
xor
addb
cmp
and
xchg
cld
dec
xchg
in
and
dec
cmp
mov
jg
inc
in
xchg
cmp
and
sub
sbb
idiv
bound
push
mov
jmp
push
bnd
mov
rcrb
adc
mov
sub
fs
fcomi
ret
and
jo
mov
cmp
push
data16
or
inc
xchg
xchg
xor
pop
inc
and
out
lock
mov
xchg
adc
or
add
jne
cmp
fcomps
jno
adc
test
call
and
mov
fldl
xor
xor
jmp
xchg
call
mov
popf
cmp
sarb
lock
mov
xor
jmp
mov
push
cmpsb
fxam
pop
inc
cltd
aam
add
les
and
inc
loopne
repz
xchg
in
cmp
xchg
mov
outsl
add
cmc
jmp
mov
in
ds
int
lret
jge
xchg
rclb
sbb
adc
inc
stos
jnp
jae
cmp
xor
jnp
adc
popa
xchg
hlt
fs
fdiv
mov
movsl
nop
dec
mov
movsb
sbb
hlt
out
push
mov
xor
jo
lods
cmp
scas
imul
mov
insl
xor
xor
scas
mov
setne
push
pop
jp
cld
or
xchg
cld
jp
push
gs
cli
ret
and
fisttps
xchg
mov
es
inc
nop
pop
dec
std
push
jl
sub
pop
dec
sub
icebp
fistps
jle
prefetchwt1
sbb
outsl
mov
stos
sbb
outsb
or
in
pop
cmp
xchg
andb
loope
lcall
push
loopne
mov
add
add
add
mov
les
and
push
jl
add
jg
adc
lea
aaa
lahf
push
add
aad
xor
pop
das
fnstenv
or
and
es
lea
popf
sub
jb
xchg
push
lds
stos
imul
insl
push
loopne
adc
xor
sahf
mov
add
cwtl
xor
es
push
sbb
enter
mov
mov
xor
leave
fwait
mov
jge
shlb
gs
fists
pmaddwd
cmpsb
cli
jo
push
int
stos
stc
lock
jl
ja
adc
lahf
mov
clc
lcall
test
mov
mov
iret
cmpsl
xor
inc
nop
fwait
rcrl
scas
mov
sub
loope
mov
stos
add
cltd
adc
mov
pop
push
or
xor
divl
jl
adc
subb
loopne
enter
adc
jl
in
fistpll
fstl
push
sbb
mov
push
mov
scas
fstpt
jl
and
repnz
rol
imul
xor
cmc
push
ss
jb
push
mov
lds
ret
and
mov
pusha
mov
mov
push
cmp
xlat
nop
adc
jg
sub
inc
mov
mov
out
test
pop
and
arpl
testb
xor
inc
nop
lods
jne
int3
cmp
xor
jmp
fwait
call
popf
jle
and
cltd
cmp
daa
xor
mov
push
adc
mov
sti
movsb
loopne
pop
adc
xchg
mov
jo
push
sarw
lods
jg
inc
jg
inc
das
push
cli
in
bound
shrl
add
nop
jno
dec
sub
pop
inc
jbe
ja
outsl
push
pop
lds
mov
xor
aad
jle
sub
sbb
orl
cmpsl
dec
mov
icebp
lods
mov
or
mov
pop
pop
in
aam
add
dec
cwtl
sub
clc
out
push
and
mov
es
out
rorl
push
arpl
in
pusha
scas
xchg
mov
dec
sub
aam
inc
jge
orb
dec
cmc
adc
repnz
dec
mov
sub
ret
mov
in
cs
std
xor
xchg
cmp
mov
mov
ss
pop
pop
fdivr
js
xor
ret
mov
pop
das
ja
pop
xchg
mov
repnz
pop
mov
adc
add
jb
pop
add
call
mov
adc
or
mov
xor
lcall
cmp
lds
add
ret
out
xor
xchg
rcr
loope
cmp
inc
int3
out
loop
push
cli
mov
jne
lret
gs
or
iret
mov
shll
in
adc
dec
pop
cmp
xor
xchg
stos
add
fxch
ss
and
add
cmpsb
loop
jmp
pop
je
mov
pop
xchg
mov
gs
cmp
adc
cmp
add
xor
or
sub
adc
shrb
mov
pop
rcrb
cmp
ficompl
jbe
sbb
aam
fsubp
adc
movsb
sbb
adc
gs
mov
iret
inc
popf
adc
ljmp
and
jno
outsb
pop
push
xchg
icebp
cmp
push
cmpl
out
pop
loope
les
mov
fs
pop
dec
popa
loop
sahf
lcall
dec
gs
pop
pop
mov
fdivrl
mov
xor
adc
add
pop
in
rolb
sbb
inc
push
mov
push
fs
jnp
js
scas
lock
aaa
addr16
or
addr16
into
jns
cwtl
into
mov
popa
loopne
ds
push
xor
dec
je
adc
mov
scas
das
pop
cmp
ficoms
or
mov
mov
in
les
outsb
daa
xchg
xchg
jns
ljmp
addl
mov
xchg
in
std
mov
mov
sbb
mov
sti
sub
adc
inc
sbb
jae
or
mov
mov
jbe
add
pop
add
insl
mov
push
cmc
outsb
sbb
aad
add
cld
or
pop
dec
and
js
xchg
sbbb
stos
fstpt
add
jnp
fdivrs
in
cmp
jecxz
fisttpl
add
fisubrs
dec
div
bound
movsl
lret
jne
lahf
insl
mov
subl
data16
mov
sub
add
mov
adc
cmp
push
cmp
cli
leave
push
push
vpunpckldq
lods
std
fs
sub
cli
cltd
or
and
mov
mov
pop
ljmp
and
pusha
and
mov
xor
stc
test
push
jl
clc
fidivl
movsb
in
jbe
test
sub
mov
cmpsb
sub
and
cmp
cmp
xchg
pop
fstps
xor
jb
sbb
xchg
mov
icebp
push
dec
mov
mov
lahf
fildll
cwtl
popf
add
inc
dec
aas
in
test
test
push
sbb
dec
dec
aad
test
jb
push
push
fimuls
js
pushf
stc
insl
iret
aam
js
repnz
daa
push
push
ss
aam
int3
sbb
jne
mov
dec
add
and
roll
pop
xchg
and
and
movsb
mov
cwtl
nop
or
xchg
enter
push
xchg
mov
scas
jge
jg
jp
mov
cld
xchg
push
cli
xchg
add
lods
rcll
repz
les
cmp
sar
push
addr16
mov
outsl
jns
sbb
mov
jp
add
adc
popf
or
mov
mov
test
mov
sti
xchg
cli
xchg
lods
loope
or
xorl
jp
mov
sub
or
clc
xlat
jb
mov
fstl
movsl
sub
testb
in
or
pop
xor
sbb
popf
sbb
in
jno
test
mov
pop
ljmp
in
pushf
cmpb
add
sub
sti
jle
stos
dec
fisttpll
inc
and
adc
xor
scas
ret
mov
pop
pop
adc
inc
dec
jle
mov
sbb
in
adc
xchg
pop
popf
jp
and
subb
sarb
jmp
cmp
xchg
into
adc
ss
cli
cmp
test
jb
mov
js
loope
loope
xchg
mov
ret
sbb
cmc
dec
sub
loopne
add
aaa
inc
in
adc
sub
lret
les
js
inc
lcall
xchg
ret
scas
out
jp
in
add
pop
xor
sub
xor
adc
dec
inc
mov
ret
sbb
insl
imul
sahf
pop
dec
cmpsb
xchg
daa
lret
push
arpl
push
rclb
xchg
cmc
or
mov
sub
sub
lcall
hlt
aad
popl
std
push
sub
mov
in
out
sub
cltd
add
daa
and
pcmpgtw
mov
ret
lcall
shl
enter
repnz
xor
push
add
xchg
fsts
push
adc
stc
pusha
jbe
mov
dec
jo
push
or
cmc
xchg
xchg
ss
cmp
xor
mov
jne
sbbb
mov
inc
mov
push
out
mov
adc
jl
and
rcll
jbe
jae
js
lahf
mov
cwtl
mov
lcall
push
pop
push
dec
repz
enter
or
xchg
jecxz
call
sub
lahf
cli
sbb
jecxz
call
cmp
fisubrl
push
into
push
scas
repnz
inc
daa
cli
pop
iret
cmp
cmp
nop
push
add
adc
icebp
sub
push
or
pop
imul
inc
fwait
mov
roll
aam
or
imul
rcr
outsl
das
add
out
pusha
jmp
loope
jmp
mov
cltd
or
dec
andl
sbb
sub
dec
mov
sbb
add
lcall
mov
nop
mov
add
and
dec
jmp
outsl
sbb
xchg
xchg
mov
aad
outsb
sahf
mov
xchg
mov
push
inc
int
lock
xchg
ficompl
in
inc
cmp
lret
fidivrl
aam
xchg
pop
push
testl
push
mov
fsubs
stos
sbb
pushl
xchg
lea
inc
xchg
push
das
mov
nop
daa
movsb
dec
jp
xchg
iret
leave
icebp
sbb
adc
fisttpl
sub
ror
xchg
sub
xchg
inc
or
ss
jnp
sbb
and
fsubrl
push
jne
jp
xor
add
mov
pop
mov
ja
xor
xchg
push
cmp
pop
test
adc
lods
dec
in
in
xchg
dec
mov
fcomi
cmp
xchg
hlt
fcoml
int
push
mov
cli
or
arpl
ljmp
fcom
adc
sbb
clc
js
push
cmp
sahf
adc
mov
or
push
int
int
imul
ja
jne
idivl
or
pusha
lret
inc
lret
mov
push
sbb
jb
bound
sbb
cmpsl
xchg
sbbl
call
and
lock
xchg
dec
mov
xor
daa
shl
cltd
movsbl
loope
xchg
jb
in
xor
fsubrl
dec
mov
arpl
shlb
push
ljmp
les
in
push
mov
jle
pop
push
adc
shl
adc
test
scas
lock
push
popa
decl
xchg
stc
inc
xor
and
xchg
fdiv
dec
mov
cmp
mov
lret
jle
jecxz,pn
jae
insl
setnp
inc
imul
adc
xchg
mov
mov
decb
mov
pushf
push
jnp
fwait
scas
out
hlt
nop
mov
frstor
icebp
lret
dec
fs
cmp
inc
sahf
in
jecxz
pop
lods
ja
push
flds
rcr
sbb
fwait
ret
xchg
mov
dec
les
xor
rcrb
rorb
daa
imul
mov
lcall
sbb
pop
cmp
nop
jg
cmp
ret
xchg
adc
sub
cmc
ja
jp
sbb
xor
leave
orl
mov
or
inc
popf
call
jbe
inc
ds
scas
add
ljmp
or
comiss
xchg
adc
fisubrl
mov
xchg
pusha
out
xchg
xchg
test
mov
mov
aam
push
subb
scas
sub
add
and
mov
mov
sbb
xchg
cmpsb
mov
push
and
dec
incb
xor
test
mov
pop
mov
xchg
mov
dec
and
fwait
and
aam
subb
nop
std
xchg
insb
test
aad
cli
xchg
popf
lcall
test
lea
push
mov
icebp
outsb
fisttpl
gs
or
xor
jecxz
bnd
jl
xchg
lock
lock
shlb
movsb
dec
ljmp
jp
mov
into
out
push
cmp
pop
mov
mov
mov
jmp
xor
cwtl
int3
pop
or
jmp
outsl
es
xchg
les
adc
ret
or
push
mov
test
mov
xor
dec
inc
scas
les
dec
leave
mov
push
pop
and
pop
out
xchg
test
out
mov
or
popa
adc
add
sbb
mov
push
outsl
insl
cmp
cmp
fsts
insb
jmp
jbe
cmp
mov
in
push
out
mov
insb
pop
add
pop
ljmp
inc
scas
lret
sub
mov
fwait
cmc
or
mov
in
push
dec
push
repz
imul
sub
jl
pop
xor
test
leave
sub
cmpsb
mov
adcl
mov
push
pop
or
mov
lret
xchg
mov
adc
xlat
mov
xchg
adc
xor
xchg
pop
rcrl
fsts
jl
mov
adc
dec
pop
lock
lret
repnz
pop
jge
insl
dec
mov
inc
les
xor
in
lret
mov
jle
sbb
sarb
daa
or
movsb
and
stos
clc
out
cs
push
iret
inc
lahf
cmpsb
mov
aam
sbb
inc
xor
test
outsb
xor
rolb
inc
and
mov
and
in
push
dec
lahf
stos
stos
dec
cmp
push
xor
jb
lahf
repnz
push
and
push
mov
pop
loopne
or
xchg
mov
fwait
rorb
mov
mov
out
hlt
shrl
out
adc
lods
pop
sahf
pushf
repnz
loopne
outsb
bound
push
jmp
inc
add
and
mov
ljmpw
aam
and
mov
mov
jbe
test
out
pop
inc
bnd
mov
stos
mov
xor
mov
dec
mov
jnp
pop
clc
bnd
lcall
fcom
out
or
call
out
sbb
pushf
fwait
sbb
test
outsl
and
jecxz
jmp
sbb
push
dec
pop
pop
pop
sbbl
cmp
pop
call
movsl
add
adc
rclb
cwtl
icebp
mov
insb
ret
movsl
adc
in
decb
pop
dec
stos
aad
scas
push
cmpsb
mov
cmpsl
bound
stc
push
cmp
sbb
or
mov
ret
pop
sbb
xchg
rcrb
add
xchg
dec
clc
xchg
popa
iret
mov
mov
addb
dec
pop
pop
xor
cmc
pop
lret
aas
loope
gs
daa
lock
sbb
xchg
sarb
out
sbb
ljmp
sub
fidivs
popa
sti
rorb
fisubrl
gs
mov
sbb
mov
fsubs
repz
adc
fidivrs
flds
mov
rclb
pusha
testl
incb
mov
dec
push
sbb
or
xchg
and
mov
mov
mov
xor
add
dec
insb
mov
fimuls
cmp
testl
add
inc
loopne
int
mov
mov
inc
sub
cmpl
pop
lcall
loope
mov
xor
jb
popf
jp
adc
dec
xor
inc
mov
in
sub
push
dec
pop
sub
cmc
cmc
and
subb
cmp
add
inc
pop
inc
hlt
mov
fcoms
sbb
lods
inc
mov
inc
push
cmpb
shrb
call
fwait
mov
ret
test
pop
and
mov
sub
test
repnz
push
cmp
inc
enter
mov
xchg
sub
lock
call
and
add
int
sahf
dec
sub
imul
cmpsb
sbb
or
in
or
mov
jae
popa
and
inc
add
out
or
mov
cmp
push
mov
test
daa
imul
cli
xchg
cwtl
in
lods
fcoml
pop
or
sub
lret
cwtl
repnz
mov
idivl
fistpll
mov
push
dec
ds
or
xor
fcomps
pushf
add
mov
cmp
pop
in
std
hlt
pop
data16
mov
aam
loope
ja
adc
cmpsb
adc
cli
fs
pop
pop
jecxz
push
jmp
lock
repz
outsb
mov
xchg
lock
pop
call
inc
scas
add
outsb
jbe
mov
xorb
rorl
ds
jo
cmp
pop
call
inc
fimull
pop
ror
push
imul
cmp
push
fdivrs
and
mov
mov
xchg
or
fs
es
xor
add
lcall
mov
push
mov
xlat
aas
shll
xor
push
cmp
aad
pusha
jecxz
test
popf
add
inc
popf
mov
mov
out
enter
rcrb
xchg
lods
cmc
mov
fstpl
jmp
jl
jmp
data16
jae
ret
dec
int3
imul
lds
popa
cmp
inc
push
fisttpl
mov
lahf
adc
out
mov
rorl
loopne
xor
add
cltd
rcrl
stos
and
pop
call
sub
push
xchg
mov
sub
mov
sbb
insl
shlb
aam
pop
imul
mov
js
testl
or
int3
loop
mov
push
fmull
mov
push
cmp
ret
pop
nop
push
test
fs
sbb
aas
mov
insb
popf
or
mov
testl
das
cmpsl
sbb
sub
jp
or
arpl
cld
push
and
sbb
push
mov
iret
xor
cwtl
sti
stos
lods
cmp
xlat
inc
sbb
and
lock
mov
jb
into
sbb
in
aas
cmpsb
sub
in
and
aas
add
jo
test
mov
lods
jl
lds
adcb
outsl
push
std
or
inc
test
imul
inc
repz
mov
mov
mov
std
jge
push
cmpsb
cmp
dec
in
sub
imul
cmc
or
filds
outsl
adc
fimuls
movsl
repnz
addr16
and
insb
mov
shr
pop
pop
adc
rorl
add
mov
jne
rcrb
sti
rorb
lcall
outsb
sub
adc
adc
sbb
jb
fwait
int
jmp
fadd
cs
dec
and
adc
jg
cwtl
aam
test
sub
aam
jecxz
aad
inc
mov
pop
div
cmp
cmp
dec
xchg
mov
push
inc
call
fistl
in
push
xchg
ds
inc
or
addr16
addr16
mov
cltd
xchg
xor
push
rcll
pop
push
inc
xchg
and
pop
mov
cmp
mov
or
sub
movsl
das
aaa
xor
sub
test
das
mov
cmpsb
mov
adc
enter
jnp
pop
iret
shlb
lods
cld
cwtl
leave
add
or
std
mov
add
and
ds
jl
subl
inc
push
cld
mov
lods
daa
cmpl
jecxz
sbb
sbb
dec
push
outsl
sbb
pop
pop
fldt
pop
mov
jbe
jnp
mov
mov
loop
das
and
sbb
xor
jecxz
sub
ror
popf
push
dec
and
out
cmp
je
push
in
push
dec
jge
movsb
repz
sbb
push
and
fiadds
repnz
orb
and
mov
adc
lods
pop
and
xchg
orb
out
mov
add
shl
cmp
jbe
push
dec
adc
loopne
fisubrs
mov
stos
insb
pop
cs
push
mov
inc
cmp
ds
xor
sub
or
movb
cmp
sbb
rcrb
andb
testb
test
xchg
pop
xor
pop
dec
and
hlt
xchg
mov
mov
mov
jmp
xchg
arpl
push
ret
pop
int
inc
adc
std
int
push
xchg
or
pop
ds
cld
inc
push
ds
out
lods
cmp
mov
xchg
dec
jge
out
jno
cmp
add
call
adc
scas
bound
mov
pop
clc
repnz
imul
cs
and
sbb
or
jo
aam
push
jns
push
jl
dec
outsl
add
sahf
pop
cmp
outsb
and
mov
ds
xor
insl
push
js
pop
or
mov
je
mov
sub
sbb
mov
mov
mov
jne
int3
loopne
adc
loopne
ret
jg
cmc
arpl
idivb
rcrl
cld
inc
loopne
mov
inc
sar
mov
mov
sbb
cmc
sbb
mov
pusha
jmp
aad
add
fiaddl
mov
or
push
push
lods
aaa
loop
loop
push
lock
popf
imulb
sahf
push
in
call
out
pop
sub
out
dec
adc
mov
test
out
adc
int3
enter
and
fnstcw
dec
jno
add
sub
adc
mov
push
jo
mov
in
add
out
mov
mov
vpxor
cs
lods
testl
out
or
ljmp
orb
mov
lods
lahf
mov
add
push
dec
lahf
fs
xchg
aam
mov
xlat
fstpl
lcall
sti
pusha
arpl
je
test
sqrtps
xchg
adc
ret
sub
mov
movsb
movsb
pop
insb
dec
sbb
xor
in
test
lock
sti
int
inc
cmpsb
sbb
pushw
xchg
outsl
out
sub
cwtl
dec
mov
stc
push
daa
rol
jns
xor
sub
inc
pop
fnstenv
sarb
cmp
dec
rcll
jae
out
decb
aad
sarb
stos
aam
and
popl
xchg
sub
xchg
repnz
cmpb
xor
lods
xor
stos
jbe
mov
mov
push
ljmp
mov
mov
popa
jge,pt
mov
cmpsl
adc
popa
sub
sub
add
ret
test
sbb
movsb
cmp
mov
adcl
add
cmpsl
cs
pop
mov
icebp
inc
stos
mov
fs
enter
dec
xchg
test
or
sub
test
inc
pop
mov
cmp
add
xor
pop
test
in
mov
dec
push
cmp
xchg
mov
inc
mov
mov
lock
shl
xchg
inc
push
bound
cmpl
or
adc
jno
out
inc
fstpl
enter
or
inc
out
iret
cmp
repnz
jo,pn
pop
jbe
std
push
mov
push
iret
pause
cmp
cmp
xchg
lds
and
jnp
lea
pop
xor
jecxz
call
daa
mov
sbb
xchg
test
or
mov
push
xchg
jmp
mov
popf
pop
cmpsb
aam
insl
into
repz
jbe
rcr
lds
rcll
scas
neg
xchg
xchg
lods
daa
cmp
or
outsb
mov
pop
pop
pop
lods
inc
mov
js
insb
lods
mov
repz
imul
sahf
daa
fs
loop
mov
fsubrs
movsl
jo
ret
pop
fsubrl
les
and
out
sub
mov
jnp
add
mov
test
or
outsb
mov
mov
icebp
add
in
lods
icebp
inc
sub
pop
push
pop
in
pop
and
out
cmp
aaa
push
jmp
scas
xor
cli
cmc
xchg
or
frstor
int3
js
cmp
mov
mov
cli
xchg
loopne
mov
movsl
jge
sub
xchg
test
jle,pn
movsl
fdivrs
sub
stos
jp
addl
cmp
int3
mov
imul
or
gs
scas
enter
ljmp
fldt
pop
fcoms
mov
mov
test
mov
pushf
mov
mov
inc
ror
mov
mov
shl
inc
inc
test
push
lds
sub
inc
cwtl
daa
cmp
sub
pop
sub
mov
jecxz
jae
loopne
pop
inc
mov
int3
js
mov
cmp
sub
insl
adc
lds
jl
dec
ljmp
push
inc
adc
andb
cmp
and
sbb
aas
idivb
add
xor
pushf
push
outsb
push
rcrl
and
cld
dec
push
adc
ljmp
pop
push
jns
xchg
push
jae
push
add
mov
sbb
jno
mov
call
pop
sbb
shll
adc
div
sub
xor
sahf
jae
and
xchg
and
mov
sub
into
cmpsl
jno
in
add
add
filds
or
pop
jns
nop
cld
into
std
clc
movsb
pop
shrl
rorb
pop
mov
inc
xor
sub
lret
sub
faddl
inc
jl
enter
add
movsl
sub
int
inc
je
sub
fldenv
das
adc
fimull
imul
push
pop
popa
mov
clc
push
adc
scas
cli
nop
dec
int
push
mov
scas
jno
mov
leave
loope
mov
popa
arpl
jo
out
popa
ja
pop
xchg
cmp
dec
sti
push
mov
lahf
cltd
xor
xchg
adcb
daa
popa
insb
lret
dec
fidivrl
cld
cmp
js
mov
mov
scas
faddl
jno
mov
mov
xor
sti
mov
push
xor
movsb
mov
in
sub
and
sahf
push
gs
push
add
xchg
outsb
nop
ret
stos
xchg
cvtpi2ps
leave
jle
stos
leave
or
mov
pop
adc
add
stc
xchg
push
cmp
scas
or
adc
pop
sub
jbe
or
roll
mov
lods
pop
in
in
daa
sub
cwtl
mov
mov
ja
jle
inc
imull
push
test
test
lahf
cmp
cs
pushf
clc
lahf
xor
popf
mov
pop
jp
out
sbb
push
jae
mov
mov
into
or
or
popf
movsb
arpl
inc
dec
mov
out
sbb
imul
pop
daa
arpl
dec
mov
popa
popf
ret
outsl
roll
fisubrs
sub
jns
lods
push
lcall
mov
ljmp
aaa
adc
add
inc
or
test
adc
test
mov
cmc
in
shl
lods
lahf
sub
pop
or
std
les
dec
cmp
sub
cmp
out
insl
pop
mov
mov
or
scas
and
in
jmp
loope
and
dec
xchg
imul
xor
xor
push
xor
pop
pop
inc
test
and
les
xchg
or
das
or
sbb
in
pop
js
inc
fnstsw
add
add
mov
dec
push
adc
mov
push
pop
in
dec
adc
sub
adc
fdivl
inc
sysexit
cltd
sbb
add
sbbb
insb
mov
lods
js
add
mov
maxps
xor
xor
jnp
mov
in
add
pop
cmc
lock
pop
enter
or
sub
add
add
mov
xor
adc
cmp
sbb
arpl
cld
sahf
xchg
mov
ffree
add
xchg
repz
inc
sbb
adc
test
popa
out
push
ffreep
gs
jl
push
push
pop
adc
das
add
lcall
pop
shll
xchg
cmp
xor
pop
cmpsl
sub
ds
inc
gs
sbb
lret
loop
hlt
jge
lret
jae
jecxz
add
es
insb
mov
clc
out
jo
outsl
loope
sahf
pop
pusha
pop
inc
sbb
inc
dec
outsl
arpl
mov
adcb
aad
movsl
fisttpl
push
cmp
push
fwait
stos
cs
pop
fsubrl
jle
xlat
pushl
push
lock
jae
push
xor
dec
fsincos
stos
xor
xchg
cmp
cmp
popf
xchg
into
push
add
sub
lods
mov
das
sbb
push
aam
lea
fmuls
xchg
jbe
mov
int3
or
pushaw
dec
jl
test
stos
ja
push
andb
call
or
sub
test
sbb
jae
add
ret
scas
inc
lods
and
mov
add
xchg
push
in
pop
add
inc
mov
inc
lahf
fwait
jns
mov
push
ljmp
push
pop
pop
test
fisttps
dec
inc
and
add
pop
jno
imul
xor
fwait
or
push
stc
mov
dec
test
pop
cwtl
sti
aas
test
in
js
cmp
dec
push
xchg
lret
mov
hlt
imul
dec
mov
push
or
mov
pop
mov
test
mov
mov
mov
movsb
leave
out
mov
xor
stos
push
scas
fidivs
cmp
jns
or
je
nop
out
jne
movsb
insl
leave
push
xchg
test
adc
arpl
fldt
pushf
mov
jne
adcb
int3
cmp
cmpsb
push
sub
aas
sbb
sbb
repz
inc
and
jp
and
mov
add
jne
and
xchg
pop
cmp
fsts
xchg
xchg
fmuls
fldl
std
push
pop
mov
fisttpl
js
ja
hlt
xchg
pop
imul
xor
mov
mov
add
repnz
mov
movsb
cmp
dec
ret
pop
in
lret
aad
xchg
adc
xor
lahf
ds
mov
mov
pushf
adc
out
in
iret
xor
mov
xor
fnstsw
aad
call
stos
pop
sbb
dec
cli
nop
xor
orl
jg
mull
loope
and
dec
cmp
xchg
sub
cmp
mov
imul
and
addr16
jp
push
or
mov
dec
flds
mov
stos
push
lods
adc
ss
loop
and
stos
pop
or
inc
or
pop
call
shll
insb
sub
sub
ds
jp
outsl
pop
hlt
mov
fwait
js
fcmovnbe
dec
xchg
push
mov
xor
clc
ret
jne
xor
leave
jne
nop
insl
mov
rolb
nop
push
sahf
loope
pushf
fisubrl
js
xlat
aas
fldt
xchg
out
mov
iret
nop
mov
push
or
loope
outsl
lods
mov
movsl
add
call
enter
scas
lret
mov
icebp
cmp
inc
add
es
ret
clc
sub
mov
inc
cmpsb
lret
push
cmpsl
mov
nop
xchg
leave
dec
inc
mov
mov
mov
mov
ret
ds
push
and
popa
cmp
fsubrl
lahf
jmp
into
sub
insb
or
es
lock
outsb
pop
push
in
cld
inc
pusha
mov
xchg
jge
lock
shll
cmc
cmp
push
fisubs
inc
bnd
or
xchg
cltd
adc
push
mov
jg
xchg
cmp
and
cmc
adc
leave
pop
aam
sbb
popf
add
jp
mov
xchg
pusha
imul
shrl
lret
in
loopne
inc
out
lock
test
adc
jb
sbb
sub
push
xlat
sbb
inc
xor
adc
add
mov
insb
xchg
in
adc
stos
or
out
test
hlt
pop
add
add
adc
pop
sbb
jmp
mov
aam
mov
sub
stos
pop
hlt
inc
popf
testl
ficompl
or
loope
pushf
mov
cmp
imul
push
fcom
mov
imul
dec
bnd
inc
push
aaa
cli
aaa
mov
out
mov
adc
mov
nop
lahf
push
imul
push
les
ret
push
movsb
sub
test
hlt
mov
xchg
dec
add
mov
fs
cld
sbb
sbb
and
in
push
or
jb
or
je
push
push
or
stos
jge
jle
gs
or
xchg
push
add
pop
pop
fst
push
nop
je
test
jbe
lods
int
pop
xlat
mov
sbb
rorl
out
rcll
mov
cmp
sti
and
int3
popf
inc
ror
sub
mov
rorb
inc
aas
sub
fidivs
push
rcr
push
adc
std
lahf
cmpxchg
adc
aad
ja
outsl
sub
xchg
dec
sbb
push
inc
jl
or
sti
insb
add
and
decb
cmpsb
or
ljmp
dec
sbb
sahf
sahf
pop
ja
fsts
lods
cmp
mov
inc
or
pop
insb
fimull
adc
imul
inc
bound
in
sub
jae
sub
push
sbb
push
shl
ds
or
mov
lret
mov
fistpl
inc
xor
dec
pop
fs
repz
lods
or
pop
mov
int3
scas
and
pop
add
xchg
test
inc
bound
aam
mov
dec
xchg
and
out
mov
xlat
push
out
loop
mov
es
push
lods
popa
scas
in
ljmp
inc
cmp
xchg
sti
add
jo
mov
jnp
mov
add
shrl
mov
stc
pop
loopne
pop
mov
dec
test
ja
scas
sbb
lcall
pop
aaa
in
mov
cmp
loope
sub
stc
daa
mov
pop
mov
iret
sub
push
cmp
lock
sbb
xchg
ljmp
cltd
jle
inc
shr
xchg
lods
outsl
mov
pop
adc
inc
sbb
and
cmp
mov
inc
sub
stos
push
je
pop
xchg
fildll
mov
movsb
xchg
xchg
sub
adc
push
in
xor
or
and
xlat
mov
shlb
sbb
inc
inc
je
mov
test
cli
push
xchg
dec
ficomps
bound
arpl
inc
fs
in
jne
xchg
je
xlat
jno
outsb
mov
adc
mov
xchg
sbb
mov
pop
sbb
aam
inc
popf
js
adc
dec
clc
out
iret
arpl
hlt
mov
jp
lret
xchg
cmp
sub
add
xchg
inc
dec
jmp
adc
push
jb
pop
rorb
loop
add
push
mov
lcall
test
sbb
out
dec
not
out
fimull
inc
sub
mov
dec
lds
aaa
pop
js
push
cmp
je
rorl
sub
decb
add
cli
repz
rcrb
sbb
and
xchg
adc
push
mov
arpl
sti
mov
push
std
dec
test
adcb
in
cmp
fildll
sbb
add
mov
sub
dec
or
add
push
mov
mov
enter
adc
mov
sub
or
push
mov
push
lods
fisttpl
imul
test
decl
lret
clc
ret
ret
popa
insb
ret
inc
scas
fcomps
rol
jmp
ljmp
push
filds
mov
mov
jmp
imul
adc
es
cmpsl
adc
sbb
nop
xchg
or
in
xchg
mov
stc
incb
pop
sub
xor
testl
xorb
push
out
dec
gs
inc
inc
mov
push
mov
push
cmpsb
sub
xorb
or
sti
lcall
in
xchg
mov
sub
xor
xchg
jmp
or
test
jne
aam
lods
xchg
and
xor
fldenv
mov
mov
mov
mov
xlat
sub
mov
ja
sahf
xchg
sahf
fsubs
cmp
push
dec
in
es
rdpmc
repnz
arpl
cltd
add
cmp
lahf
mov
ljmp
icebp
pop
arpl
push
aad
inc
dec
or
stos
mov
stos
inc
out
fcomi
push
call
andb
dec
mov
int3
and
movsl
iret
push
cmpsb
pop
xchg
scas
xlat
cmp
mov
test
icebp
in
jl
rol
mov
sbb
sbb
ret
or
push
inc
mov
jne
adc
dec
and
add
in
inc
sarl
cli
pop
mov
mov
or
cli
fdivl
xchg
shll
popf
pushf
iret
dec
daa
int
dec
adc
push
xlat
ret
out
rolb
loop
enter
mov
cmp
in
inc
jp
xchg
mov
lds
sti
sbb
pop
ss
out
jae
mov
inc
jg
sbb
mov
pop
xor
inc
cmp
add
dec
push
mov
imulb
shrl
dec
enter
dec
cmpsb
pop
loope
into
jno
js
mov
stc
jecxz
and
jg
fs
adc
aaa
sbb
or
sub
and
jp
pop
sbb
mov
push
jl
fbld
sar
addb
inc
jl
cmp
movsl
popa
and
mov
fdivl
mov
nop
mov
mov
mov
fadds
sub
in
imul
mov
scas
popf
lahf
mov
cmp
aam
sarb
cmc
cmp
dec
pop
into
push
or
sbb
inc
cmp
dec
mov
jle
out
push
stos
mov
push
cmp
mov
stos
repz
mov
es
inc
xchg
hlt
and
loope
pop
and
pop
sub
mov
jl
fcoms
pop
movsl
popa
stos
or
int3
pop
ja
iret
xchg
add
das
push
xchg
fstpl
jecxz
push
or
push
flds
pop
add
popa
je
push
loop
lret
rol
arpl
push
mov
add
inc
sbb
add
inc
call
inc
mov
decb
cmp
lret
add
sub
pop
ret
mov
mov
or
dec
xchg
pop
cmp
fldenv
cwtl
jbe
jo
sub
mov
cltd
divl
dec
aad
dec
sub
cmp
cmp
push
stos
stos
cmp
xchg
imul
adc
pushf
hlt
push
test
xchg
add
movsl
sbb
mov
scas
xchg
push
test
xor
std
inc
cld
xor
fisubrs
jo
inc
push
loope
mov
xchg
jle
data16
jmp
jo
push
outsb
es
jno
js
jmp
mov
mov
loope
insl
repnz
jne
rorb
jp
or
icebp
push
push
jle
insl
lock
pop
lock
push
push
test
inc
mov
mov
daa
mov
pop
adc
mov
pop
hlt
loop
pop
push
fsubrs
imul
cmp
mov
xchg
add
movsl
push
sub
loop
lds
cs
pushf
fstpt
mov
push
aaa
push
sti
clc
mov
clc
sbb
sbb
mov
fimuls
mov
out
lret
push
xchg
data16
test
stc
push
call
stc
mov
inc
lea
subb
in
in
insl
dec
cld
jl
sub
xchg
and
cmp
loop
sub
sub
orl
add
ret
fmul
cmp
popf
jp
inc
sti
incl
sbb
movsl
mov
lret
mov
movsl
mov
cmp
mov
inc
lahf
xlat
add
imul
xchg
fmulp
push
iret
push
lret
shr
mov
lret
sti
cs
arpl
mov
jle
pop
jne
cmp
aad
arpl
icebp
ss
add
dec
lock
mov
sub
in
loopne
pusha
fstl
mulb
jo
lret
movb
scas
pop
shlb
bound
repnz
fdivl
sbb
icebp
mov
mov
xor
and
lock
rcrl
clc
xchg
hlt
xchg
mov
adc
fwait
cld
stos
or
pop
and
dec
jae
imul
jnp
movsl
cmpsl
rcl
jmp
xchg
popa
add
pop
or
mov
inc
mov
xchg
inc
mov
xchg
cs
jle
inc
mov
imul
mov
insb
dec
out
lahf
lret
std
sub
mov
push
fsubs
repnz
adc
xchg
sti
xchg
add
mov
xchg
mov
cmc
out
cltd
jno
lds
gs
cs
sub
mov
inc
shll
loope
repz
sub
js
xor
inc
jle
aam
cltd
sbb
pop
add
xor
test
adc
mov
cmpsl
dec
rorl
or
je
jbe
xchg
mov
pop
pushf
addb
jb
and
xchg
je
imul
push
jb
fwait
leave
mov
push
bound
out
or
out
cltd
sbb
sahf
mov
dec
pop
and
pop
ja
outsb
pslld
loope
cmp
dec
je
aam
xor
aam
stc
jmp
jns
popa
out
int
xchg
xchg
dec
sub
ja
lock
stc
jle
ds
jmp
sbb
ret
cli
pop
stos
and
mov
fists
xchg
mov
dec
dec
aad
and
imul
mov
insb
lock
push
cmp
lods
sbb
pop
popf
adc
aam
inc
jo
in
lock
add
enter
and
mov
repnz
mov
fldcw
gs
inc
add
fimuls
or
mov
inc
mov
push
gs
add
out
rcrl
icebp
jns
push
xor
aas
mov
pop
sub
jb
pop
mov
mov
jno
les
and
mov
into
xchg
out
jno
push
sti
sbb
jne
mov
jnp
out
xchg
mov
adc
in
lock
cmp
cmp
dec
mov
hlt
inc
add
inc
or
push
std
cmp
stos
pop
xor
sub
out
add
mov
pop
clc
push
rcl
push
daa
repz
inc
scas
int3
cmp
incl
imul
mov
call
xor
insb
mov
test
push
mov
popa
jl
inc
sub
ficompl
push
test
push
dec
pop
cmpsl
xor
and
jae
shlb
scas
xlat
sub
push
push
lret
mov
les
insb
pusha
jp
push
pop
aad
bound
cmp
ret
pop
jmp
mov
je
push
mov
push
dec
and
addl
jbe
xchg
sub
sub
imul
adc
and
subb
pop
jl
xor
testb
mov
addr16
shlb
or
mov
xchg
leave
imul
js
pop
inc
xor
and
inc
adc
mov
push
and
cmp
cli
std
daa
pop
cli
pop
mov
clc
mov
into
or
stos
movsl
jmp
test
add
pusha
push
movsl
repnz
mov
fcmovbe
push
push
cmpsb
call
mov
fnstenv
push
mul
adc
jl
or
inc
imul
pop
cmp
iret
pop
pop
sbb
cmp
cmp
andb
jns
xchg
in
mov
stc
mov
arpl
inc
mov
jg
and
pop
in
jge
pop
movsl
out
xor
push
pop
in
sbb
xchg
movsb
sahf
push
lret
cmpsb
inc
push
jge
mov
js
test
push
cmp
decb
inc
cmp
aaa
dec
cmpsl
sbb
mov
decl
jae
fldt
jl
enter
mov
aad
jae
cmp
stos
sbb
andl
hlt
out
mov
scas
fldcw
pushf
xor
rorl
push
jnp
xchg
mov
mov
cmc
rcr
in
inc
dec
in
mov
jne
std
add
xor
int
dec
pop
roll
ficoms
movsb
push
rcrb
inc
das
rcr
xchg
sub
loop
stos
dec
or
jo
test
ljmp
mov
jo
loop
jbe
dec
push
hlt
sub
push
adc
aam
push
cmp
sbb
inc
or
dec
lds
bound
or
adc
push
mov
lods
inc
arpl
je
cs
push
xlat
xor
aaa
fcmovnbe
cmc
ds
push
ret
lods
xchg
fsubp
or
lahf
test
loopne
or
mov
fwait
adc
add
out
fwait
fwait
xchg
pop
rcr
mov
in
mov
inc
insb
push
loope
mov
sbb
testl
pop
repz
cmpsl
cmpsl
push
in
xchg
sbb
data16
fwait
mov
lret
cmp
xor
xor
testl
push
data16
test
mov
mov
dec
andb
adc
cmp
insb
pop
push
out
pusha
imul
andb
jle
add
add
jno
push
in
mov
subb
xchg
enter
mov
pop
jg
jne
popa
fs
xchg
sti
mov
dec
cltd
adc
out
mov
movsl
push
loop
pop
imull
iret
in
push
lea
ds
inc
xchg
xor
push
cmp
push
in
and
loop
add
xchg
stc
mov
pop
jmp
or
add
mov
pop
cld
mov
in
xchg
mov
icebp
jb
inc
push
sub
stos
and
shrl
xor
inc
jae
bound
sbbl
xor
xlat
outsb
jp
rcrb
out
sub
lea
xlat
mov
sahf
adc
dec
adc
popw
ljmp
sub
xchg
mov
std
mov
mov
aad
lds
pop
test
jno
add
inc
iret
jmp
mov
xchg
push
jnp
xor
mov
js
add
sbb
mov
scas
dec
add
xlat
es
rcrl
out
jmp
loop
je
xchg
push
dec
loopne
jae
mov
stos
adc
dec
rorl
push
arpl
cmp
ds
es
in
xchg
movsl
and
scas
lds
pop
inc
adc
inc
dec
jnp
cli
mov
sbb
xor
lods
mov
lods
mov
cmp
jmp
aas
or
xor
mov
bound
xor
sub
clc
and
icebp
divl
repnz
mov
push
mov
pop
mov
insl
fwait
or
cmp
popf
cmp
pop
jg
fnstenv
ja
pushl
aaa
hlt
pop
int
mov
hlt
out
jg
mov
or
mov
push
mov
sub
push
bound
inc
mov
insl
aaa
pop
out
andl
and
test
or
shll
lods
test
fwait
dec
jbe
push
lock
xor
mov
jae
jg
jl
call
nop
dec
fstp
or
push
fsubl
xchg
adc
out
lock
loopne
push
addb
push
fs
add
enter
mov
inc
mov
std
push
inc
push
jge
jmp
in
mov
push
call
add
data16
int3
mov
out
fsts
es
rolb
pop
pop
mov
ljmp
aas
sub
xchg
int3
mov
fisubrs
or
cld
sbb
jle
push
jne
or
mov
sbb
adc
cmc
sbb
xchg
or
and
adc
sub
lret
mov
sbb
inc
jp
fs
xor
jp
pop
imul
icebp
mov
daa
cmpsb
stos
adc
ret
xchg
push
test
mov
add
xor
mov
cmpsl
outsb
add
jp
adc
pop
mov
push
test
std
add
xor
rorl
mov
nop
mov
std
dec
out
inc
dec
outsb
mov
sahf
jle
mov
jbe
jmp
imul
mov
das
ret
pop
inc
sbb
lock
or
adc
arpl
in
push
pop
in
sbb
cwtl
push
sub
xor
cmc
lahf
es
ljmp
lcall
cs
sti
in
and
mov
jbe
jmp
xchg
push
sub
pop
push
pusha
jns
test
adc
sub
mov
or
jne
mov
out
call
sbb
jnp
pop
fwait
mov
or
jl
and
fistpll
dec
daa
fmull
jge
loopne
mov
fistpll
movsl
mov
xchg
popa
hlt
xchg
add
mov
daa
into
nop
pop
xor
dec
inc
jecxz
mov
dec
jo
adc
pop
jg
sub
call
sub
mov
fisttps
cmp
push
pop
movb
xchg
push
sbb
stos
dec
mov
sti
les
xlat
pop
outsl
aad
push
xchg
or
inc
rorb
or
inc
test
dec
enter
or
pushf
mov
daa
sub
jmp
fcoml
add
adc
daa
dec
xchg
out
dec
add
inc
lods
mov
adc
imul
mov
jp
mov
push
fisubrs
or
mov
jecxz
adc
push
inc
test
cmp
bound
xchg
sti
cmc
jbe
stc
push
add
outsl
fistl
jns
inc
xchg
xor
or
sahf
in
std
into
fsubr
add
jp
pop
or
dec
add
hlt
xchg
test
xchg
fs
idivb
jle,pt
push
mov
cmpsb
cmp
hlt
mov
aad
mov
inc
jbe
xor
aad
out
xchg
add
call
push
faddp
add
call
dec
or
lcall
jns
mov
xchg
vmread
rcrb
popa
hlt
inc
fs
repnz
bound
cs
aam
stos
dec
cmpsl
sti
dec
or
in
xchg
xor
sbb
adc
jmp
or
outsl
pop
mov
jne
pop
add
test
in
adc
test
add
test
xlat
mov
ret
cmp
stos
inc
add
sbb
cmp
bound
xchg
add
imul
in
aad
push
insw
int
fiadds
or
cmp
stos
pusha
jp
or
push
push
arpl
and
loope
daa
insl
jns
mov
jg
scas
cmp
int3
sarl
sahf
jecxz
fsubl
in
stos
sbb
addl
arpl
sub
mov
add
push
pop
std
in
pop
loop
inc
mov
mov
lret
cwtl
es
mov
mov
hlt
les
lds
mov
jbe
xchg
aaa
incl
loope
dec
stos
xlat
test
dec
negl
lcall
pusha
inc
and
fcmovbe
jae
push
xor
lret
mov
jecxz
xchg
xor
push
stc
sbb
fisttps
sub
outsl
mov
pop
pop
dec
orb
xor
outsb
test
cmpsl
lahf
mov
dec
pop
cwtl
cmp
movsl
dec
push
cmpsl
sub
int3
outsl
push
out
ljmp
mov
fistl
xchg
adc
dec
xchg
scas
mov
cmc
add
js
mov
sbb
cmc
adc
add
mov
xor
loope
mov
sub
lock
icebp
mov
orb
dec
cmp
push
jge
sub
icebp
fcomp
and
mov
mov
lret
pop
xlat
xchg
adc
outsl
test
and
jae
fcom
mov
xlat
sub
outsl
and
inc
and
fisubs
cld
icebp
cmp
test
jmp
sbb
pop
and
sbb
mov
sub
bound
add
bound
pop
sub
push
cwtl
sbb
stos
out
pusha
fimull
arpl
mov
ljmp
movsb
fisttpl
adc
bound
adc
daa
mov
or
test
adc
stos
push
lret
inc
xchg
cmp
pusha
lods
add
aam
int
std
mov
es
fidivrl
inc
repz
fidivrl
inc
cwtl
fninit
sub
outsb
mov
sahf
gs
adc
sarl
movsl
into
sarl
jp
pop
lods
jnp
cmp
xchg
mov
mov
mov
mov
jne
les
cmp
add
pop
int3
nop
add
push
sub
and
xchg
push
xchg
mov
pop
mov
pop
in
into
clc
test
adc
sub
push
nop
insb
dec
mov
mov
jns
or
insb
push
inc
lods
fisttpl
leave
std
add
fwait
jp
sbb
fwait
ss
imul
inc
sub
xlat
adc
pop
adc
inc
inc
mov
lock
mov
sbb
inc
jle
xchg
sbb
jecxz
stos
sub
enter
or
es
push
arpl
into
movsb
je
testb
pop
clc
push
pushf
int
inc
js
pop
push
fst
xchg
jp
lahf
add
cmp
imul
insb
mov
pop
sub
cwtl
jge
faddl
xor
lods
imul
or
adc
movsl
test
fildll
mov
dec
jne
pop
shrb
pop
add
sbb
and
fsubrl
and
push
mov
or
add
in
fistpl
popa
les
outsl
out
lods
outsb
fmul
fsubp
inc
lcall
in
enter
ror
xor
dec
rcrl
push
sti
mov
repz
enter
sbb
jecxz
lock
leave
pop
xchg
adc
data16
ljmp
popa
dec
cmp
push
inc
inc
je
icebp
push
cmp
jle
ret
popa
adc
das
inc
add
and
dec
mov
call
mov
mov
scas
xchg
bound
mov
lods
cwtl
sbb
mov
mov
call
stc
sub
test
mov
sbb
mov
hlt
in
adc
jb
xchg
add
xchg
lcall
jl
jb
fldcw
and
add
loop
xchg
setge
sbb
nop
ret
aam
dec
xor
clc
dec
out
xchg
cmc
mov
pop
xchg
enter
xorl
xor
xchg
in
das
add
dec
addr16
clc
and
int3
lds
add
pop
adc
ffree
xchg
dec
int3
les
sbb
fisubl
ffreep
stos
cmp
dec
or
push
out
imul
jmp
test
pop
into
scas
jge
lods
push
lcall
adc
push
mov
cmp
and
rolb
pop
loopne
repz
add
xchg
adc
dec
push
fwait
js
dec
xor
fs
mov
ror
sbb
cmp
xor
xor
sti
and
xchg
fidivrs
mov
popf
les
cmp
push
adc
loope
and
lods
mov
sub
xor
nop
push
jmp
mov
add
xchg
sbb
mov
aaa
cmpl
shlb
call
sub
mov
push
into
push
shrl
pop
push
sub
fisubrs
imul
pop
lret
shlb
mulb
aas
enter
scas
lret
rorl
pop
decb
mov
fldt
xchg
es
test
push
movsb
pop
sbb
pushf
pushf
push
repnz
mov
pop
xlat
ds
push
mov
dec
insl
mulb
call
sbb
out
pop
enter
out
mov
or
hlt
popa
test
and
sar
pop
std
movsl
or
je
mov
cmpl
jge
dec
cmpsl
fs
in
test
add
subl
jb
pop
nop
pop
inc
aad
int3
mov
stos
pop
cmp
lea
insl
shll
cmp
movsb
sahf
jp
jbe
xchg
or
adc
sub
add
dec
sub
fisttpl
sbb
xor
vmread
mov
stc
cmp
mov
push
push
cltd
cwtl
ret
and
enter
jnp
jle
push
jbe
cmpsb
arpl
test
push
add
movsb
push
lahf
sbb
adc
pushf
jmp
aam
loop
pop
lods
repnz
popf
fs
xchg
mov
stos
mov
cmc
lds
mov
push
mov
stc
std
adc
sub
pop
aaa
gs
aaa
popa
stos
les
add
xchg
mov
inc
inc
lods
inc
loope
aaa
ljmp
shll
movq
xchg
iret
in
xlat
sbb
cmp
sbb
jo
cmpsb
cltd
pop
mov
dec
imul
scas
pop
sahf
mov
repz
scas
sbb
pop
imul
cmp
inc
movsb
xor
dec
pushw
dec
movsl
rorl
out
sub
add
faddl
out
aad
imul
and
xchg
and
shll
xchg
push
jl
nop
loopne
mov
nop
stos
loopne
jns
or
mov
pop
push
filds
sub
add
pop
mov
fs
test
mov
inc
mov
rcl
arpl
stos
das
cmc
mov
jae
dec
sub
xchg
ret
add
ljmp
ud0
cs
cmp
pop
std
leave
adc
inc
cmp
adcl
outsl
and
jnp
sbb
push
andb
xor
popl
push
call
add
inc
lods
arpl
popa
cmp
pop
repz
cmpsb
inc
loopne
imul
xor
out
cmp
mov
dec
outsl
movsb
sub
xor
call
dec
mov
cs
and
or
or
daa
ds
es
mov
lea
inc
sti
jmp
aas
pop
mov
pop
subb
xorl
push
rcr
ss
xor
cli
jecxz
fldcw
jg
jg
pop
pop
xchg
lods
sbb
cmpsb
movsl
mov
mov
mov
cmpb
mov
out
imul
xchg
sub
insb
sbb
pop
mov
mov
cmp
push
js
es
push
or
mov
or
xor
and
cli
xchg
adc
push
and
out
ret
aad
pop
pop
mov
jns
std
test
insl
mov
imul
xchg
add
jns
call
push
adc
xchg
sub
cmp
imul
imul
aad
ljmp
fildl
sbb
push
push
stos
aam
xor
out
jmp
into
hlt
icebp
adc
das
sbb
popf
jle
in
test
or
fisubrl
cmpsb
mov
imul
xchg
cli
push
pushf
lret
subb
popa
add
ljmp
jnp
fs
adc
jo
shlb
mov
in
jo
inc
add
decl
rorb
into
repnz
xor
fwait
or
cmc
out
int
pop
cli
mov
shrb
sub
test
mov
int
cli
je
mov
pop
movl
push
jne
and
call
jb
cli
mov
aaa
mov
dec
lds
data16
cli
testl
mov
mov
imul
test
ds
fmulp
adc
fcoms
pop
add
int3
popf
add
add
xor
xchg
adc
push
cmpsl
sub
push
mov
idivl
lock
push
mov
or
scas
mov
pop
xchg
cs
pop
xor
add
or
call
pop
lds
sub
jae
jbe
cmp
and
stos
loope
pop
pushf
pop
into
mov
add
sti
cltd
sbb
popf
test
cmp
clc
into
jno
insb
cmp
jo
add
int3
add
enter
dec
push
mov
nop
divl
je
push
sub
test
cwtl
add
iret
and
insl
jmp
imul
xchg
cmp
inc
js
and
nop
call
mov
jo
sbb
jb
sub
jecxz
icebp
andl
popa
sub
cmp
mov
imul
pop
sub
or
insb
mov
xchg
bound
test
std
sub
push
or
and
lods
mov
dec
fwait
sub
push
dec
xor
mov
push
fwait
sub
ret
rclb
clc
mov
mov
in
movsb
in
lea
inc
insl
cmpb
or
push
jmp
xchg
rcrb
jne
or
shl
test
in
shrb
pusha
test
outsl
pop
and
push
jecxz
ret
cmp
xlat
cmp
orl
push
inc
sbb
inc
jae
lea
out
fisttpl
pop
cmc
in
or
add
ror
nop
mov
and
imul
cmpsb
mov
mov
push
je
in
cltd
icebp
sub
imul
and
addl
sti
je
test
push
sbb
mov
fmull
adc
push
cmp
push
outsl
repz
mov
push
xchg
push
fwait
es
inc
in
push
sbb
icebp
in
pop
and
ljmp
outsl
jmp
insb
sti
std
lret
add
dec
lds
mov
jle
loop
rcll
mov
cs
jmp
xor
call
push
or
rol
and
and
pop
aaa
leave
nop
cld
inc
fsubs
xchg
jbe
lahf
clc
rol
push
sub
pop
fiaddl
outsb
sub
loop
jno
lret
cli
adc
xor
popf
mov
cmpb
cwtl
out
jae
popf
mov
xor
pop
int
xor
inc
add
fisubrl
jg
xchg
xchg
fcomi
mov
add
cld
xorl
adc
or
shrl
sub
es
adc
mov
sbb
int3
xchg
adc
hlt
adc
in
mov
adc
push
pop
jl
lock
cltd
push
mov
and
imul
call
shlb
scas
psubsw
int3
pop
pop
push
or
test
shlb
rclb
cmp
pop
xor
clc
out
cmp
sbb
dec
lret
pop
movsl
add
add
incl
jno
mov
push
mov
loopne
pop
sub
test
push
dec
sbb
jmp
or
divb
in
jns
pop
jno,pt
cmp
rcrl
jecxz
pusha
adc
daa
jae
jo
push
push
dec
adc
movsl
and
and
jg
sbb
xchg
fwait
cmp
dec
jl
xchg
xlat
pop
mov
mov
mov
mov
popl
cs
add
and
pop
repnz
hlt
add
mov
sbb
cmp
test
sbb
in
shlb
cs
and
adc
cmpsl
mov
dec
rclb
aad
lock
push
jp
xchg
out
stos
cs
test
mov
movsb
out
dec
int3
imul
aas
lock
stos
lods
pushf
call
mov
push
lock
movsl
mov
outsb
addr16
clc
cmp
int3
xchg
mov
sub
aas
pop
xor
gs
adc
mov
push
ja
mov
sbb
pop
ret
sbb
in
jle
mov
and
and
mov
in
adc
dec
dec
call
int3
ljmp
outsl
xor
mov
dec
mov
pop
jnp
and
lds
push
movl
xchg
cli
xor
lock
nop
mov
cmpsl
out
scas
cmp
and
push
jno
jp
sbb
adc
in
mov
stc
test
ror
add
notb
mov
xchg
js
test
fucomi
addb
push
cmpsb
out
andb
bound
out
test
and
inc
mov
and
sub
ds
ljmp
dec
lcall
dec
sbb
jmp
adc
adc
xchg
jl
arpl
sbb
cmpb
jo
pop
call
wrmsr
insl
cmpl
addr16
mov
and
xor
fildl
sub
ret
xor
gs
insb
mov
xchg
xchg
inc
xor
mov
mov
pop
mov
dec
and
xorb
outsl
adc
xlat
lret
xlat
es
out
pushf
imul
xchg
jmp
adc
addr16
xchg
inc
call
aam
mov
ret
cmpb
addr16
das
in
pop
cmp
leave
jg
jp
es
fcmove
adc
sbb
mov
and
fsubrp
cs
in
sub
push
mov
pop
pop
dec
adc
cmp
mov
arpl
xor
pop
call
jmp
lret
adc
or
je
enter
inc
mov
cmc
adc
add
ret
rol
cmp
xor
cmpsl
or
mov
inc
cmp
or
jmp
dec
xchg
jne
jbe
js
add
pushf
sub
push
movsl
movsl
pusha
aam
jge
or
push
int3
aad
movsb
scas
and
sub
jg
mov
mov
mov
fidivl
cmp
pop
lds
mov
mov
mov
out
loope
js
or
or
jge
cmpsl
outsb
and
sti
xchg
popf
lods
repnz
and
mov
jle
push
jae
jns
mov
fsubrl
pop
sahf
jle
stos
jne
and
mov
inc
inc
lcall
inc
push
and
push
ficompl
sub
jl
sahf
jo
mov
mov
mov
mov
pop
pop
fwait
ret
movb
xor
test
inc
mov
inc
je
cmpsb
mov
lret
push
lock
pushf
pop
add
cmp
push
sub
adc
xchg
loope
movsl
xchg
aas
jne
mov
xchg
inc
and
cmp
testl
mov
lock
mov
shl
pushf
sub
cs
xchg
sub
jmp
loopne
pushf
xor
xlat
cli
in
inc
repz
xorl
jle
fld
xor
lds
or
sub
stc
inc
mov
sbb
sub
dec
aam
jmp
sub
dec
inc
xor
cmp
and
jg
cltd
test
and
push
pop
neg
xchg
inc
or
push
lahf
cmpsb
cmpsl
shlb
rorl
pop
out
mov
inc
sti
xchg
jb
dec
out
add
movsl
push
popf
addl
mov
out
pop
jno
cmc
push
in
ss
push
ret
cld
xor
cli
andnps
xor
fwait
addb
cli
call
sub
or
sar
stc
and
lret
push
scas
jbe
fwait
rclb
add
inc
in
icebp
xchg
jae
out
movsb
stc
arpl
push
adc
mov
lahf
pop
mov
fsubs
into
repnz
test
dec
sbb
add
sbb
fldcw
pop
mov
mov
jbe
mov
cmpsl
in
int3
push
scas
dec
js
hlt
xorb
or
pop
mov
in
inc
int
loopne
imul
mov
jecxz
mulb
popl
jmp
aaa
fwait
mov
shr
mov
cli
rcll
mov
cli
cmp
sbb
addr16
inc
rorb
jo
sbb
xor
js
nop
stc
xchg
or
cmp
xor
add
add
push
sub
les
cmp
nop
mov
xchg
pop
xor
sub
pop
jp
mov
cltd
or
cltd
repz
es
cli
sub
test
faddl
cmpsl
insl
lahf
test
jne
bound
xchg
add
cmpsb
icebp
in
mov
and
test
outsb
test
fucomip
xor
jbe
push
int3
and
mov
add
mov
movsbl
pop
fcmovne
repnz
sbb
cmp
bound
or
jo
rclb
scas
and
int
pop
hlt
cmp
jb
xlat
rorl
inc
mov
pop
das
das
imul
jecxz
clc
inc
dec
mov
ljmp
insb
cmpsb
cmp
mov
ss
out
mov
and
mov
dec
jns
daa
jmp
fcmovb
lret
cmp
popa
ret
cmpsb
jp
daa
push
jnp
sub
pop
sub
mov
pop
das
cmp
sbb
xor
jmp
cli
dec
movsl
ror
mov
push
mov
sub
dec
pop
mov
imul
adc
push
fcom
das
sahf
jns
adcb
sysret
adc
pop
jne
push
std
mov
and
cs
pop
mov
jge
push
push
lods
xor
mov
sub
pop
dec
mov
mov
mov
ror
mov
repnz
sub
ds
adc
add
data16
xor
es
xchg
aam
aas
mov
xor
les
fs
jbe
push
leave
add
inc
cwtl
cmp
adc
shr
insl
mov
jae
sub
jmp
cmp
xchg
cld
xor
pop
cli
adc
nop
leave
shll
stos
push
fldl
cmp
jno
push
jno
imul
xchg
sarl
mov
push
cs
mov
lock
or
je
loope
xor
insb
ret
cmpb
adc
inc
cld
iret
sub
imul
push
insb
stos
shll
in
push
hlt
fs
js
xchg
add
pop
fbld
mov
mov
inc
mov
pop
push
js
sahf
punpcklbw
mov
jle
les
lods
pop
and
push
mov
ljmp
cmpsb
pop
cmpsb
xchg
jl
pop
stc
inc
data16
inc
je
js
sub
andb
lods
mov
mov
sub
adc
xor
pop
sub
jo
loop
inc
mov
sbb
ret
rorl
cltd
test
stc
call
or
sbbb
push
into
loopne
sbbb
dec
iret
stc
adc
outsl
mov
loopne
pop
loopne
xor
mov
or
imul
test
mov
scas
fsubrs
aaa
sbb
xchg
test
cwtl
ficoms
mov
into
mov
or
dec
mov
pop
cmpsl
mov
mov
lret
xchg
filds
or
mov
enter
xor
int
jecxz
push
push
jg
aam
ret
jb
repz
lds
jno
ret
aam
mov
les
scas
and
dec
test
sti
lods
imull
test
lret
jne
lret
mov
shrb
cli
dec
mov
imull
pop
inc
lret
mov
jno
cmp
cld
test
lea
aas
addr16
cltd
repz
pushf
faddp
sub
push
or
mov
cs
test
test
cmpsl
into
mov
xor
cltd
pop
mov
add
fcoml
std
test
inc
jb
fadds
hlt
pusha
data16
lret
movsb
mov
clc
xchg
add
jecxz
xor
mov
adc
adc
mov
sub
inc
loope
lret
iret
andl
xor
out
roll
mov
xchg
gs
nop
inc
pop
insb
repnz
add
fiaddl
or
jne
sub
imul
mov
repnz
enter
push
xchg
ja
mov
jns
and
sub
push
mov
push
and
das
nop
fisttps
jnp
sbb
sub
repnz
adc
xchg
sub
pop
in
pop
nop
jg
mov
jno
and
pushf
fdiv
shlb
pop
push
sbb
xor
cmp
pusha
insl
stos
push
je
popf
sub
xor
insb
adc
insl
mov
mov
sarb
add
mov
cmpl
and
inc
adc
fdivrs
test
inc
mov
cmp
dec
pusha
dec
andl
subb
pop
test
mov
push
gs
inc
testl
jmp
sub
lret
pushf
lret
or
sbb
pushf
shl
hlt
test
sbb
fsts
cmp
scas
add
cmp
fcmovu
loope
adc
mov
shlb
ret
pop
push
into
add
add
in
hlt
pop
outsb
stc
ffreep
mov
xchg
and
adc
out
dec
mov
das
pop
in
push
gs
scas
pop
mov
jae
inc
aad
add
icebp
mov
je
cmp
int
push
adc
clc
sub
inc
loop
cmp
outsl
in
mov
sti
xor
cmp
popf
leave
xor
je
dec
das
mov
inc
test
cmp
fiadds
jmp
pop
xor
and
stos
pop
movsb
fimuls
xchg
or
test
icebp
enter
sbb
insb
mov
rorl
xchg
or
pusha
hlt
push
dec
jbe
pop
ds
and
out
test
jno
adcl
xchg
sbb
sub
rcll
and
lcall
inc
addr16
jno
lret
push
mov
hlt
or
cmp
mov
out
mov
repnz
and
sub
xchg
push
xchg
xchg
cmp
cmp
dec
lahf
dec
mov
jecxz
or
mov
gs
stos
jb
movsb
push
pop
xchg
nop
lahf
es
sbb
insb
xor
das
xorb
out
inc
push
lret
jb
xchg
cmpsb
pop
insl
add
push
out
jecxz
push
adc
jo
pop
out
std
dec
imul
imul
inc
cmpb
mov
movsb
add
jne
test
setbe
imul
or
loope
fmull
pushf
out
jns
jb
adc
and
repnz
out
cmp
scas
mov
jne
icebp
in
inc
dec
mov
hlt
mov
decl
push
leave
pop
inc
hlt
push
dec
ret
xchg
dec
movsb
dec
sti
mov
cmpb
rolb
cmpsb
jae
jns
je
adc
movsl
and
mov
lea
or
mov
inc
popf
cmp
sar
addr16
mov
shlb
hlt
popa
pop
push
out
cmp
lahf
or
popa
cmp
inc
andb
cltd
ss
mov
in
mov
sub
mov
push
test
pop
imul
into
xchg
push
fs
insl
mov
shll
cmp
push
inc
daa
cltd
xorl
mov
gs
test
cmpsl
scas
jle
sub
int
dec
jne
shl
adc
push
adc
xchg
dec
insl
dec
xchg
mov
jp
stos
or
sti
imul
stos
int3
xchg
adc
cli
xchg
mov
xchg
outsb
dec
adc
popw
fsts
adc
dec
mov
filds
loopne
xchg
iret
pop
je
sub
into
push
xchg
ficoms
sub
mov
xchg
jp
jb
jae
mov
mov
inc
jno
mov
mov
xor
in
imul
das
xchg
cmpsl
cmc
int
movsb
lcall
push
pop
lods
mov
cld
mov
jmp
decl
int3
movsl
mov
bnd
or
pop
movsb
dec
and
sbb
dec
into
jge
push
mov
in
push
dec
pushf
pop
in
sarl
clc
std
popf
ficomps
jb
and
mov
lahf
pop
jg
push
xchg
outsl
add
xchg
mov
lahf
mov
nop
mov
daa
pop
sbb
mov
addr16
das
add
jns
fcoms
in
jns,pt
popa
test
xor
ds
or
hlt
pop
mov
inc
pop
mov
xchg
insb
ds
xchg
test
lock
cmp
cmp
xchg
push
sub
adc
sub
xchg
adc
je
sbb
shlb
lods
lea
xchg
inc
sbb
std
inc
arpl
or
xor
inc
pop
test
cmp
mov
test
mov
push
sub
add
test
mov
sub
rcll
adc
jo
js
or
lret
out
mov
ret
jns
sarl
xchg
dec
pop
arpl
push
scas
outsl
sbb
xchg
inc
sar
pop
and
mov
cmp
jb
outsl
push
or
pop
and
repz
fidivrl
ljmp
add
xchg
subb
mov
inc
mov
loope
mov
ds
repnz
cmp
test
cmpb
pusha
cmc
hlt
in
xor
aas
xchg
adc
add
repnz
xchg
inc
xchg
aas
or
ljmp
adc
xchg
movsb
clc
mov
lahf
dec
cwtl
add
xchg
mov
push
lcall
inc
mov
imul
mov
leave
gs
xor
xchg
inc
lahf
push
pop
out
jne
pop
cltd
les
dec
cwtl
fwait
xchg
xchg
out
xor
sbb
xchg
fnsave
inc
mov
mull
mov
pop
pusha
and
mov
mov
adc
cmp
fwait
daa
fildl
push
mov
mov
aaa
loope
jg
mov
mov
sbb
dec
rcr
sbb
jo
xor
loop
and
xchg
movsl
sbb
cmp
push
adc
mov
xorb
test
and
push
addl
sbb
mov
xor
stos
xor
fisttpl
test
scas
bound
inc
jne
data16
sbb
sub
jp
or
mov
cltd
loopne
xor
cmc
mov
adc
xchg
repz
push
mov
stos
jo
outsb
iret
cmpsb
fisttps
xchg
mov
lods
inc
push
imul
imul
je,pn
mov
add
aad
pop
sbb
out
sti
out
or
fsubrp
imul
or
sahf
in
xchg
xchg
dec
and
int3
outsl
sub
lcall
movsl
cli
data16
lret
and
fcmovbe
dec
data16
pop
in
and
ljmp
add
mov
in
jge
std
mov
aaa
test
rcl
cwtl
pop
repz
sub
cs
dec
rcrl
adc
insl
inc
jno
mov
pop
pop
imul
jge
or
add
scas
pusha
mov
loope
push
pop
cmp
mov
ljmp
cmpsb
or
cmp
popl
adc
enter
stos
sbb
jmp
jae
popa
cld
mov
sbb
ret
bnd
insb
out
and
cmp
adc
mov
pop
dec
outsb
in
push
stos
add
or
sub
jmp
out
mov
mov
fmuls
ret
dec
bnd
call
aad
mov
xchg
jno
into
xchg
aaa
inc
sub
aam
mov
dec
pop
hlt
jno
jae
stc
repz
mov
stos
xor
das
cmpsl
mov
and
sbb
dec
outsl
xchg
inc
or
loope
testl
mov
inc
pushf
outsl
in
push
int
fsubrs
cmc
rcl
aaa
aam
xor
fnsave
inc
test
pop
pop
mov
pushf
cmp
inc
xor
enter
outsb
pop
sbb
fwait
mov
pop
nop
aad
scas
xchg
aaa
lods
cmp
xchg
mov
lcall
mov
fidivl
aaa
xchg
mov
fmul
jb
call
push
or
and
adc
mul
push
pop
and
lret
filds
movsb
pop
inc
adc
iret
and
push
mov
and
mov
stos
std
xchg
xchg
cmpl
lea
stc
add
xchg
sub
arpl
mov
pop
mov
inc
mov
js
mov
xor
mov
lcall
dec
notb
push
dec
imul
into
lahf
arpl
adc
mov
out
repnz
ret
adc
dec
imul
in
loope
pop
lret
test
push
repz
jae
mov
add
xchg
rorb
leave
es
aam
mov
pop
mov
pop
xor
sub
lret
xchg
testl
pop
pushf
mov
test
mov
ret
mov
or
cmp
ss
movswl
pop
jbe
test
shlb
nop
xor
jl
bound
mov
pop
jno
xor
and
or
lods
ljmp
mov
das
arpl
mov
mov
cmp
sub
sbb
es
scas
or
aaa
repnz
and
pop
sub
lods
sbb
inc
inc
fistpl
mov
in
jge
and
adc
fstl
push
xor
dec
cmpsl
jmp
stos
rorb
mulb
xor
cmp
out
repz
fsqrt
or
jl
push
mov
dec
pop
daa
lods
imul
add
aam
jno
push
in
mov
insb
shll
int
fildll
rolb
sub
pop
lea
inc
sub
hlt
push
rcl
imul
call
rol
rol
test
int3
pop
push
sub
imul
jg
inc
je
jns
out
inc
add
mov
scas
rcrl
loopne
in
iret
dec
fs
clc
mov
add
and
adc
cmc
xor
cmp
and
aam
add
ss
dec
lret
sub
add
repnz
fdiv
jns
lds
mov
jbe
add
test
sub
add
ljmp
mov
scas
or
mov
mov
xchg
pop
jb
cs
sub
cmp
ja
add
and
ss
stos
xchg
jno
push
xor
mov
fucomp
mov
cmp
cmc
hlt
pop
shl
pop
loop
js
subb
in
pop
lret
push
jne,pt
inc
dec
mov
mov
push
cmp
mov
jne
xchg
pop
fistpll
adc
movsb
push
sbb
push
mov
cmp
js
mov
fcomp
leave
popa
idiv
rolb
mov
xlat
addb
jecxz
cmpsl
bound
loop
dec
cmp
push
insb
sbb
fsubs
push
dec
sbb
repnz
inc
xchg
sub
cmp
xor
dec
push
lock
xor
xchg
cmp
cs
xor
test
stc
dec
jge
fldenv
stos
or
es
xor
pop
and
sub
add
push
add
sub
lods
xchg
loopne
cmpl
push
jno
push
sub
aam
hlt
shrb
push
mov
mov
sbb
daa
cmp
sbb
testl
mov
mov
jmp
mov
imul
cmp
shll
addb
leave
mov
xor
int
push
sbb
xor
jge
mov
rcrb
add
xchg
sbb
lret
adc
xchg
test
cmp
pop
mov
lret
rcrb
mov
mov
movsl
mov
lret
mov
jbe
add
lds
adc
popa
mov
sub
popf
adc
dec
inc
add
int3
xor
jo
in
lcall
into
inc
scas
addr16
push
sub
push
lret
mov
lods
out
xor
aas
pop
dec
xchg
cmp
adc
and
jae
cmp
sub
inc
dec
mov
clc
adc
ss
mov
es
sub
movsl
push
pushf
fdivr
cmpsl
and
push
sub
xchg
mov
jecxz
xchg
dec
popa
jmp
xor
adc
dec
jp
adc
adc
jns
cwtl
enter
or
data16
pop
insl
push
iret
jge
sahf
mulb
push
stc
mov
add
fnstsw
outsb
and
std
adc
mov
aaa
mov
pop
inc
popf
xor
fistpll
mov
jp
xor
cmp
mov
add
scas
stos
cmc
ss
or
cmp
mov
sti
scas
ss
test
push
pusha
adc
pusha
movb
icebp
insl
add
xor
cmp
and
sbb
ds
fisttps
xchg
jmp
dec
adc
sbb
bnd
leave
and
notb
or
cmpsb
out
les
sarb
out
test
cmp
or
divl
cmp
add
fucomip
out
leave
adc
mov
lahf
fcomi
sbb
dec
shlb
push
push
pop
and
fists
jbe
cwtl
mov
fwait
mov
sbb
loop
and
rcrl
stos
inc
addr16
ret
aad
inc
test
push
inc
xor
dec
mov
js
lods
jbe
jmp
cwtl
shll
pop
out
loop
jo
cmc
int
sbb
xor
insl
add
pop
dec
adc
rcl
pop
dec
in
out
int
repz
pop
fisubrs
xor
xor
clc
pushf
cmpsb
sub
shlb
inc
imul
inc
jle
cmp
pop
test
out
jae
pop
cwtl
jo
mov
mov
push
outsb
ss
cmp
rcr
clc
scas
rcrb
xorl
das
cmp
icebp
mov
repz
call
xchg
push
sub
jecxz
adc
sub
inc
xor
dec
jne
addl
add
push
mov
aas
inc
mov
sub
out
add
into
push
sub
add
add
gs
mov
loope
popf
adc
inc
jne
fisubs
pop
xchg
mov
cmp
daa
adc
inc
movsl
dec
ret
push
jecxz
das
pop
and
fiadds
cmp
and
and
cltd
mov
int
sub
mov
ficomps
fcompl
mov
ret
mov
clc
sti
jbe
lds
aaa
sti
push
xor
jno
lea
adc
lret
mov
mov
nop
sub
sub
push
sub
adc
aaa
add
shlb
push
xchg
dec
add
mov
jno
sahf
pop
insl
fsubs
ljmp
lahf
orl
test
aas
clc
stc
outsl
jno
ss
inc
mov
add
sub
or
push
mov
cli
test
sbb
dec
ret
xchg
addr16
xor
sub
fists
and
push
cmp
ret
lock
push
int
mov
insl
dec
orl
stc
adc
xchg
sbbl
xchg
fwait
scas
adcl
jne
inc
mov
adc
and
sub
icebp
shrl
push
leave
and
test
or
sub
in
js
xchg
xchg
and
mov
sahf
push
push
mov
jbe
cmp
sarl
popa
fadds
shlb
ret
adc
icebp
dec
pop
fwait
outsl
daa
out
lret
in
push
js
jo
je
icebp
or
and
jg
push
xchg
mov
sti
lods
pushf
pop
es
movsl
pop
dec
inc
xlat
xor
lea
mov
sarl
jp
jecxz
lds
sub
stos
stos
movsl
xchg
fidivrl
imul
das
xchg
dec
sbb
aaa
inc
add
rorb
pop
sub
push
and
cmpsb
outsl
push
sarb
xchg
cmp
push
push
push
adc
adc
push
push
add
scas
pop
dec
enter
pop
bound
mov
dec
pop
jne
add
mov
cmpsl
jb
cmp
or
inc
mov
mov
clc
cmp
sub
and
inc
jnp
push
out
push
or
movl
mov
sbb
loope
repnz
mov
cmp
pop
push
ret
sarl
or
xor
sub
xor
mov
add
hlt
ljmp
lcall
incl
jae
mov
scas
or
pop
jge
jae
pop
stc
jae
inc
js
xchg
icebp
clc
lds
inc
out
mov
test
push
dec
push
gs
push
sahf
xchg
divl
cli
cmc
test
inc
movsb
dec
or
sbb
sub
adc
push
inc
push
imulb
push
pop
mov
scas
add
and
jle
bound
test
aaa
and
pop
outsl
sub
scas
ss
mov
scas
xor
mov
sub
loope
pushf
scas
pop
mov
inc
pop
sbb
std
lock
das
sbbl
addr16
std
push
pop
imul
popf
arpl
and
inc
or
cs
sti
xchg
test
icebp
pop
adc
andb
mov
and
pusha
iret
mov
lds
cmp
sti
jo
enter
lods
cli
fistl
xchg
mov
fs
loope
int3
pusha
add
push
pop
or
pop
stc
popa
test
dec
sub
mov
sbb
and
outsb
mov
adc
xor
inc
ja
push
mov
pop
je
bound
push
push
mov
inc
insb
clc
sbb
fistl
inc
idiv
mov
push
hlt
call
out
ss
into
xlat
push
pop
dec
dec
mov
adc
in
pop
or
mov
fwait
sbb
sarl
add
inc
popa
ljmp
imul
mov
stos
jbe
dec
sub
lods
repnz
jb
sub
ss
and
xchg
dec
mov
jmp
popa
stos
inc
rorb
pop
adc
xchg
loop
iret
or
das
jl
dec
loopne
lret
dec
rcl
or
out
xor
cmp
jmp
and
adc
add
push
ja
push
test
nop
rorb
jle
mov
loopne
fdivr
mov
mov
mov
stos
stc
jns
fidivs
xchg
push
movsl
push
dec
pop
xor
icebp
xor
call
xchg
lea
insl
inc
lret
or
push
out
mov
cmpl
aaa
out
stos
lret
in
cltd
add
arpl
xchg
sbb
xchg
and
iret
in
addr16
and
nop
mov
leave
sub
insb
add
jmp
mov
mov
cmpsb
stos
xor
cltd
adc
into
push
fsub
loopne
cli
and
andb
jno
out
outsb
rol
lcall
cmp
pop
mov
out
incl
dec
push
or
add
jne
movsb
jae
dec
mov
push
lock
iret
mov
xchg
jle
rol
arpl
or
adc
inc
inc
pushf
decl
jbe
mov
xchg
sub
xor
and
les
jbe
fcoml
cmp
xchg
iret
sahf
mov
data16
jmp
mov
cmp
loop
pop
nop
pushf
sbb
lods
test
jecxz,pn
adc
add
adc
lea
fists
or
inc
negl
cmpsl
test
sbb
insb
fisttps
rorb
iret
or
lock
ss
hlt
xchg
loopne
stc
cmp
sahf
mov
add
gs
mov
mov
xor
pop
rclb
pop
dec
cmp
fistpll
decl
push
test
daa
mov
pop
or
enter
nop
leave
cld
xor
xchg
std
int3
movsl
inc
outsl
cltd
xchg
pop
lock
rolb
sbb
cld
xor
and
ja
popf
xor
jmp
int3
ds
push
test
sub
xor
notb
and
jge
mov
inc
in
icebp
mov
inc
fnstsw
jge
xchg
add
inc
adc
outsb
loopne
jno
hlt
or
js
pop
pop
sbb
int
dec
cli
cmp
mov
xchg
sub
clc
subb
sahf
cs
mov
gs
adc
add
adc
rcll
push
xchg
add
pop
fs
mov
rcrb
fwait
std
mov
cmp
loope
ficoml
pushf
scas
popa
push
es
clc
test
sbb
mov
xchg
push
test
sbb
push
or
xor
lock
daa
popa
xchg
fsubr
mov
add
xchg
add
sub
pusha
outsb
and
lea
xchg
or
cmp
rorl
sbb
shrl
out
je
hlt
mov
pop
and
imull
inc
adc
or
pop
hlt
xor
imul
mov
fisubrs
ret
pop
test
inc
mov
cmc
je
lds
mov
mov
ss
xchg
insl
cmp
mov
inc
xchg
mov
xchg
xchg
sbb
andl
ret
shll
xchg
hlt
jo
add
out
jns
in
pop
push
lods
addr16
jnp
int
and
fcoms
movsl
xchg
fisttpl
mov
pop
xor
mov
inc
cltd
repz
lea
mov
shrb
xchg
pop
pop
jle
testl
fbstp
cmp
sbb
dec
addl
fidivrl
fiadds
adcl
jl
pop
unpckhps
dec
add
test
loop
mov
add
adc
dec
mov
xlat
bound
and
mov
pop
sub
out
cmpsb
int3
fs
loop
daa
inc
jae
mov
mov
add
sub
or
mov
push
mov
aaa
pop
js
lods
fidivs
jge
fwait
add
or
push
outsb
push
jbe
mov
cmp
mov
pop
pop
inc
mov
and
fdivrp
insl
test
icebp
or
mov
xlat
and
jae
mul
xchg
repz
inc
xchg
cmpl
push
xor
icebp
testl
mov
hlt
jb
std
outsb
and
sbb
cmp
push
sbb
gs
mov
orb
enter
push
sub
dec
aam
add
inc
stc
ss
sub
test
lods
add
add
mov
pop
mov
test
repz
leave
jbe
insl
fistps
add
and
cs
lret
test
pusha
imul
xor
or
fldenv
sbb
inc
jnp
jle
add
lret
icebp
outsb
mov
rcrl
mov
adc
sbb
out
mov
inc
sub
xchg
mov
sbb
push
and
inc
aam
es
test
repnz
pop
fs
jp
testb
sub
dec
lcall
jecxz
cmp
cmpb
orb
pop
cmp
testb
mov
lds
in
shrl
inc
idivl
pop
orl
mov
or
add
stos
sarb
lods
mov
loopne
cmp
sub
inc
fildll
inc
stos
lahf
sub
jnp
ljmp
scas
shrl
jg
inc
stos
cwtl
ljmp
xchg
sbb
movsb
mov
jp
pop
sub
lea
jbe
testb
pop
or
inc
cmpsb
xchg
mov
and
mov
fcmove
pop
popf
jge
sbb
add
push
popf
sbb
int3
mov
pop
es
jle
cmpsb
mov
jp
das
jg
adcl
faddp
andl
ja
and
lock
pusha
rorb
rcr
aaa
addl
or
ds
jge
rcrl
add
lods
pop
pop
cmp
and
ret
popf
out
cmp
mov
mov
inc
jnp
hlt
int3
cwtl
pop
mov
mov
sub
in
or
int
movsb
sbb
cs
stos
push
clc
ljmp
sahf
fsubl
xor
enter
mov
lods
push
pop
cmc
sub
call
and
adc
cli
or
xchg
inc
or
push
pop
subl
push
aaa
mov
dec
and
sahf
xor
mov
gs
cmp
mov
mov
ret
mov
notl
cwtl
push
les
mov
push
mov
add
test
lock
out
imul
inc
pop
fisubrs
mov
xchg
daa
sbb
push
cmp
cld
faddp
stc
ljmp
ljmp
mov
lods
out
or
mov
pushf
sbb
jmp
clc
or
in
push
mov
sti
mov
jmp
pop
cmp
in
xchg
dec
inc
fstpt
iret
xor
decb
mov
mov
add
sub
push
fildl
xchg
mov
aas
leave
test
out
stc
push
ret
leave
sub
stos
jo
sub
push
subb
mov
test
test
mov
mov
inc
mov
jne
sbb
shl
fisubrl
imul
je
dec
dec
pop
push
inc
fsubrp
cwtl
imul
jle
shll
xlat
jne
push
sub
inc
inc
and
or
ds
dec
out
ljmp
test
pop
ds
xor
sub
lcall
sub
pop
mov
sbb
insb
ljmp
pop
jb
jl
xchg
jle
je
push
mov
shr
dec
pop
adc
jg
mov
or
push
push
xor
jae
and
je
or
add
stos
popa
mov
into
imull
mov
jne
xor
loop
popf
das
or
cmc
mov
adc
jbe
out
xchg
adc
inc
jbe
xor
mov
ss
and
xlat
mov
mov
xor
gs
pusha
test
jecxz
aad
cmp
out
xor
les
mov
nop
mov
cmp
int3
jle
pop
fidivrs
inc
jge
mov
push
or
jle
ret
scas
mov
test
jp
cmpsb
mov
inc
orl
mov
pop
fisubrl
sqrtps
out
cwtl
mov
mov
cmpsb
je
test
hlt
leave
insl
push
aaa
fsubrs
push
out
push
sbb
and
ret
mov
cld
sti
inc
pushf
outsb
in
jno
out
mov
add
fcmovnbe
xchg
aad
cmpsl
cmp
xorb
shl
add
cmp
out
addr16
mov
jecxz
divb
pusha
xchg
mov
and
pop
xchg
push
push
xor
and
push
pop
filds
sub
leave
mov
adc
mov
jno
lods
mov
lret
pushf
jo
and
dec
outsb
mov
lret
xchg
inc
cmpsl
inc
daa
inc
sbb
push
jnp
scas
int3
or
xchg
jmp
adcl
pop
loopne
sbbb
sub
test
jnp
jecxz
add
sub
sbbl
insb
xlat
xor
mov
imul
iret
and
cmc
shrb
int
es
jl
ljmp
mov
cltd
jp
mov
xor
jno
popa
roll
into
jbe
inc
stos
inc
leave
ds
add
dec
sbb
sbb
add
push
sbb
push
pop
xor
cwtl
sbb
cmp
mov
dec
jns
ss
stc
sbb
stc
mov
mov
or
cltd
lods
hlt
jae
xor
in
sbb
lret
add
hlt
mov
nop
test
rorb
cmp
pop
lods
pushf
enter
insl
adc
adc
add
in
arpl
aad
push
inc
iret
push
in
pop
cmpsb
adc
in
aam
and
jmp
es
sub
cmp
popf
or
mov
inc
dec
imul
clc
sub
adc
xor
inc
or
dec
add
push
jmp
filds
jge
adc
call
sub
bnd
sbb
inc
aas
pop
dec
push
jae
pushf
mov
push
sti
cltd
stc
sub
mov
add
iret
loopne
lods
add
out
hlt
xchg
loope
fdivp
scas
adc
push
lock
mov
jmp
sbb
jge
and
lcall
pop
cmp
xor
cmp
aam
sub
push
add
sbb
mov
subl
in
adc
jl,pn
push
pop
das
jmp
push
adc
loopne
xlat
lahf
add
cmp
jbe
or
subb
out
stc
loope
xchg
lcall
sbb
xchg
mov
sbb
add
sub
sti
test
jmp
cmpsb
jnp
push
test
lret
mov
rcll
arpl
add
add
jne
mov
shrl
dec
or
adc
and
fmull
lea
in
pop
cli
dec
jno
mov
fiaddl
add
pop
out
sti
mov
pop
xor
les
mov
std
add
aad
sbb
jp
push
data16
jecxz
sbb
sahf
jecxz
dec
mov
jno
push
pop
pop
lods
lods
xchg
and
arpl
mov
orl
push
shlb
int3
test
mov
cmp
fnstcw
fcmovu
mov
popa
sbb
pop
mov
enter
mov
ret
insl
jb
lods
mov
xlat
push
lcall
enter
lahf
hlt
mov
fnstcw
push
mov
push
mov
add
dec
dec
cwtl
sub
xor
push
cmp
dec
out
mov
sub
inc
xchg
ficompl
idiv
or
ss
les
pushf
test
dec
leave
pusha
stc
or
mov
adcb
adc
in
xor
scas
cmpsb
mov
dec
cmp
cwtl
pop
rorb
insl
sbb
inc
push
aaa
sub
mov
push
gs
cmp
fdivr
push
mov
xor
pop
test
push
lret
lahf
shr
scas
hlt
int
jae
lcall
leave
jle
xor
push
push
cmpl
rcll
cmpsl
test
jecxz
lcall
ja
mov
pop
mulb
sub
into
or
icebp
cld
cld
addr16
into
iret
movsb
xor
or
hlt
xlat
popf
es
push
pop
dec
test
adc
inc
cwtl
callw
mov
out
and
notl
xchg
pop
cli
jb
iret
in
and
aad
enter
push
bound
jb
out
gs
mov
stos
cmp
ss
xchg
sbb
inc
cltd
sub
cmp
pop
and
mov
and
jno
mov
jp
jecxz
adc
push
push
or
das
into
sbb
mov
cwtl
pop
cmc
cld
jbe
inc
mov
shlb
jne
insl
and
dec
popa
enter
aad
ret
dec
inc
mov
mov
add
gs
loopne
inc
mov
push
mov
call
mov
xchg
int3
lahf
mov
lea
pop
push
or
rcrb
sub
adc
lahf
ret
pop
cmp
xor
mov
jno
jg
pop
mov
push
mov
scas
xor
fcompl
pop
dec
xchg
mov
mov
jp
xchg
sub
enter
xlat
stos
mov
xor
jg
lods
or
repz
jmp
xchg
in
mov
sbb
xorl
fistpl
mov
subb
sbb
test
cmpsb
mov
aaa
mov
xlat
mov
dec
and
xor
lret
adc
stos
mov
cmp
popf
dec
sub
or
sti
cltd
aas
pop
pushf
popa
lcall
cltd
mov
cld
push
pop
sahf
mov
roll
dec
es
clc
add
mov
and
mov
pop
xor
lret
arpl
push
rcrl
jno
inc
adc
mov
xchg
dec
push
lahf
jmp
movsl
shrb
mov
dec
das
out
test
fisttpll
enter
cmp
adc
jmp
push
roll
es
or
int
mov
ja
lods
sub
cli
das
sahf
jb
iret
mov
mov
or
cs
dec
push
jno
inc
xor
das
ljmp
lret
std
xchg
cwtl
insb
fstps
js
mov
hlt
hlt
pop
fcmovbe
lods
outsl
dec
out
dec
inc
mov
fmuls
lods
repz
mov
dec
loopne
push
sbb
xchg
idivl
js
popf
fiaddl
or
mov
aaa
adc
xchg
mov
mov
add
fnstenv
repz
push
jecxz
pop
mov
adc
mov
stc
sbb
dec
lds
mov
sub
add
mov
inc
mov
xor
mov
fisttpl
jge
jno
stos
gs
xchg
mov
cmp
pop
sbb
movsl
cs
sub
pop
sbb
bound
xor
out
sub
test
into
lods
or
lods
add
int
xchg
arpl
cmpsb
fistps
les
push
stos
sti
sbbl
bound
repz
xorl
xchg
lahf
pushl
repnz
mov
add
mov
dec
mov
movsl
push
shrl
sti
xchg
xchg
mov
clc
inc
insb
push
pop
rep
test
lahf
push
add
jns
lock
in
and
cld
andb
adc
sbbl
leave
int
and
inc
hlt
bound
insl
or
cltd
cwtl
jge
aam
adc
leave
adc
jae
aad
insl
imul
mov
mov
jge
pop
xchg
and
test
or
mov
aam
xchg
or
dec
in
in
jno
das
aas
clc
popw
mov
cs
or
mov
dec
mov
mov
inc
nop
scas
ret
xchg
es
flds
jl
lock
rcr
jae
test
adc
cmp
in
adc
aas
test
inc
cwtl
lds
sub
or
push
push
push
cs
mov
and
cmp
pop
and
dec
add
sbb
pop
mov
fnstenv
int
std
sti
divb
out
daa
lcall
cmp
pop
lods
scas
jno
gs
test
lods
and
aad
mov
cmp
aaa
call
nop
fmul
push
je
adc
mov
cld
push
out
adc
mov
jmp
stos
stos
ret
sbb
cltd
out
and
stos
fwait
mov
cmc
mov
into
or
and
mov
or
mov
mov
push
xchg
arpl
mov
fidivrs
cmpsl
add
not
aad
adc
push
fcomps
adc
sub
mov
sbb
stc
loopne
sti
popf
mov
je
lret
jle
xchg
iret
sti
jns
fadds
repz
lock
in
xor
push
lea
mov
xor
mov
lock
int3
fsts
or
ljmp
sub
adc
scas
pop
imul
inc
mov
pop
into
jnp
repnz
int3
clc
js
push
inc
or
popf
ret
jnp
enter
out
mov
ljmp
shll
and
lret
iret
les
testl
push
shl
sub
test
adc
filds
jo
and
mov
push
and
pop
jmp
mov
or
add
cltd
iret
pop
cmp
sbb
jecxz
inc
push
mov
pusha
pop
in
add
stos
lea
cmpsl
out
test
pop
scas
stos
sub
xchg
clc
jo
xor
adc
pop
mov
cltd
lahf
pusha
fsubrs
mov
shl
sub
ss
pop
clc
addl
aaa
push
lret
insl
pop
lds
lcall
jno
push
adc
mov
loop
sub
cmp
pop
adc
ret
mov
mov
cmp
adc
nop
push
shrb
test
rclb
adc
add
sahf
stos
inc
dec
and
pop
es
test
into
inc
cmp
cmc
pop
stos
cli
hlt
das
push
leave
push
adc
mov
mov
jg
and
push
daa
mov
out
mov
enter
es
negl
pop
mov
or
loope
rolb
mov
repnz
adc
aam
shll
call
fwait
jl
cmpsb
ds
sbb
inc
sahf
cmp
sub
xchg
hlt
aaa
and
fwait
pop
test
insl
cld
or
add
xchg
jnp
fldt
mov
or
adc
cmp
fs
sub
push
stc
outsb
xor
lret
fdivrl
push
pop
je
mov
shrb
jp
jae
lea
push
int3
or
mov
mov
dec
hlt
out
mov
rcr
add
ds
nop
in
xchg
and
cld
xchg
into
in
jbe
inc
xchg
jl
xlat
fisubrs
add
sub
mov
lcall
jge
cwtl
mov
and
leave
outsb
mov
repz
mov
sbb
and
nop
xchg
mov
push
cmp
pop
xor
imul
dec
pop
cmpsb
sub
ret
imul
aam
jge
add
lret
cmc
jge
in
dec
pushf
sar
mov
popa
fdivrs
push
std
mov
dec
and
dec
cwtl
push
aad
bound
les
push
adc
cmpsb
mov
sahf
sbb
jo
fdivl
adc
or
stos
mov
jae
jge
arpl
popf
mov
stos
mov
fstpl
and
sub
insb
mov
mov
imul
jp
adcb
std
sbb
or
fwait
repnz
push
and
inc
jp
mov
stc
pop
dec
insl
xchg
push
inc
xor
adc
es
inc
jecxz
adc
ds
aas
out
nop
jle
cmpsl
dec
xlat
cmp
fildll
test
jae
das
cmp
pop
xchg
push
sub
sbb
or
pop
pop
int3
jb
arpl
pop
or
mov
es
mov
mov
stos
aad
cmp
xchg
into
pop
or
int3
push
stos
jnp
fsubrs
cmp
push
fcmovb
cmp
test
mov
inc
jo
xchg
out
xor
adc
jbe
aad
jmp
js
push
js
pop
insb
mul
inc
std
cs
xlat
into
mov
scas
enter
dec
adc
cmp
iret
cmp
int
cmp
push
push
pop
std
aas
pop
stos
sub
pop
ror
lahf
sti
mov
sbb
xor
or
add
pop
push
ljmp
cmc
cmp
aad
fnstenv
push
add
int3
push
enter
pop
jl
xor
test
jp
cmpsb
test
mov
call
stos
or
xchg
pusha
adc
lock
cmp
in
ret
xchg
jb
and
xchg
pop
push
aas
xor
popf
jmp
test
cwtl
lods
fcoms
mov
adcl
pop
jae
lods
mov
sti
movsb
cmp
adcl
cmp
adc
lds
call
js
cld
or
and
add
outsl
incl
or
ret
xchg
push
dec
imul
mov
mov
pop
lahf
ret
into
popa
push
sbb
push
mov
dec
or
clc
sbb
out
pusha
cmp
mov
and
mov
pushf
outsb
mov
in
lock
int
add
lods
hlt
not
xor
jecxz
int3
push
xchg
into
sbb
test
jmp
aam
pop
imul
push
lahf
add
xor
xor
mov
jns
ljmp
fistpl
xchg
iret
std
aad
leave
xor
inc
mov
mov
sub
gs
movsb
cwtl
sarb
pushf
rcll
stc
int
mov
push
test
lret
xchg
pushf
push
mov
cmp
jo
or
pushf
daa
test
dec
ja
jmp
cmp
das
mov
ds
cltd
inc
cld
mov
pop
push
xchg
inc
push
mov
xor
mov
out
lahf
push
mov
enter
or
subb
jl
mov
mov
repz
jnp
dec
xor
push
fidivl
mov
jle
adc
jmp
dec
jnp
jbe
push
adc
and
sbb
push
cmpsl
mov
clc
mov
pop
sbb
mov
adc
push
sbb
and
mov
mov
cmc
sahf
cmc
push
ret
adc
popf
lret
jp
repz
test
xchg
add
pop
xor
jae
stos
pushf
movsl
mov
cld
daa
popa
jg
or
test
ljmp
loop
in
addr16
outsb
jbe
push
movsl
loopne
xlat
daa
es
mov
sbb
cltd
inc
mov
push
xchg
dec
inc
movsl
dec
pop
xchg
cmc
jne
andb
jp
insl
cld
lcall
pop
lea
push
jg
loop
mov
and
fstpt
int3
push
sbb
pop
adc
inc
hlt
lea
xor
shll
insl
inc
mov
add
inc
cltd
mov
addr16
stos
fbld
test
imul
jae
push
mov
pop
je
fsubrp
or
or
das
leave
and
loope
ret
mov
mov
ret
xchg
loope
add
sub
jne
clc
shrb
loop
scas
mov
mov
flds
pop
cmp
aad
loopne
gs
jge
dec
pop
aaa
sbb
loopne
push
mov
int3
pop
xorl
add
and
inc
jne
call
lock
and
mov
xchg
cmc
jmp
mov
mov
and
add
fldt
or
push
rorb
jno
imul
lods
add
dec
add
cmp
insl
das
or
pop
out
pop
lds
enter
and
shll
ljmp
loope
mov
add
inc
clc
shll
ljmp
rorb
daa
leave
shlb
cmp
sub
int
aam
repz
sbb
sub
out
loop
popf
mov
add
adc
and
pusha
xor
sub
cmpb
push
mov
mov
or
fidivrl
jb
add
adc
enter
cmp
mov
lahf
and
pop
push
in
popa
stos
xor
inc
lea
cmpsb
fdivrl
jmp
mov
mov
daa
cmp
jae
cmc
pop
cwtl
mov
enter
hlt
push
mov
add
jmp
adc
xor
add
lahf
in
inc
xchg
sbb
popa
mov
lds
xchg
mov
cwtl
jb
push
adc
cld
or
rorb
cltd
std
sub
call
dec
jnp
adc
dec
outsb
insl
das
xchg
mov
sahf
xchg
cld
jmp
jmp
data16
stos
xor
scas
cmpsl
mov
jne
push
adcb
dec
mov
mov
and
in
outsb
fsub
mov
lea
xor
daa
imul
pavgw
xor
dec
insl
lahf
fidivrs
xor
out
add
xor
aaa
mov
jo
cmpl
cmp
pushf
pop
test
enter
dec
mov
sti
in
call
adc
inc
enter
insl
push
xchg
sbb
fdivrs
fbstp
push
cmp
scas
adc
loop
mov
lret
sub
push
out
sub
test
mov
outsb
les
or
sub
outsb
adc
pop
xorl
adc
or
test
cmpsb
or
insl
cmpsl
inc
pop
or
adc
xchg
fisubs
jcxz
sbb
cmp
rclb
pop
shrl
ret
icebp
and
outsb
jnp
ljmp
and
push
push
dec
fwait
inc
aad
lock
or
inc
lret
out
inc
dec
das
xchg
xchg
sub
mov
jp
mov
mov
repnz
dec
repnz
rcl
add
cmp
cld
push
aam
add
mov
mov
das
incl
aam
in
aas
out
cmp
pop
das
xchg
mov
lea
mov
dec
sub
aad
fdivrs
xor
into
pop
test
jmp
fldt
mov
scas
sub
aas
in
aam
loopne
test
push
pop
push
stos
xchg
cwtl
sti
pop
sbb
popa
out
fstpl
jne
or
rcrl
aam
int
dec
cmp
shl
out
cld
sahf
cmp
fisttps
scas
call
imul
dec
int
pop
cmpsb
mov
div
out
mov
xor
sub
push
adc
repz
or
ret
or
pop
sbb
pop
pop
out
das
jecxz
pop
outsl
mov
jne
inc
push
stc
mov
jns
adc
fstpt
gs
pusha
mov
nop
adc
out
sub
cmpsl
mov
fwait
ja
xor
pop
add
jl
ja
mov
pop
cmp
cs
jo
imul
sub
mov
add
inc
mov
adc
test
mov
pusha
clc
lods
pop
adc
scas
lcall
notb
dec
pop
pop
push
sub
test
adc
cld
pop
and
out
inc
inc
cmp
jns
and
je
and
add
xor
andl
std
inc
jge
pop
pop
lods
cmp
jg
dec
jne
jp
add
std
lods
push
stos
mov
scas
sti
mov
repnz
daa
fmul
loopne
std
loope
mov
maxps
scas
jns
mov
xor
xor
push
dec
jg
loop
mov
xchg
shr
aad
sahf
xor
xchg
inc
sbb
sub
pop
fwait
pusha
push
fstpt
dec
cmp
ss
cli
sar
mov
insb
pop
push
stos
or
mov
test
std
shr
jnp
jns
pop
xor
in
lret
push
ret
ret
mov
aas
lret
fistps
dec
and
je
push
ret
pop
push
mov
or
pop
xchg
pop
dec
lret
push
jmp
pop
pop
lock
lods
lahf
push
lds
aam
mov
fcoml
test
out
or
leave
fnstcw
or
mov
pusha
xor
sbb
sti
insl
xchg
jns
fs
les
inc
repnz
pop
addb
js
or
adc
push
mov
ja
and
push
xchg
mov
js
aas
icebp
jns
cs
dec
add
pop
cmp
mov
stc
push
push
fdivrs
jge
dec
mov
icebp
ret
out
mov
push
aas
scas
fcoms
fcmovu
faddl
test
cs
jbe
int
adc
fdivrl
sbb
adc
leave
outsb
adc
lret
jg
xorb
scas
push
cli
dec
fbstp
enter
xor
mov
cltd
aad
sbb
jns
adc
xor
jo
push
push
mov
xlat
stos
imull
nop
lret
ret
insb
xor
push
shlb
mov
pushf
cmp
loopne
insb
aad
dec
imul
movsb
or
stos
xor
in
and
neg
fwait
ja
popf
mov
xor
sub
mov
aaa
jmp
daa
sub
loope
sbb
out
movsb
xchg
dec
popa
adc
loope
aaa
dec
pop
lods
dec
xchg
clc
adc
adc
rclb
insb
popf
xchg
jbe
popf
insl
icebp
xchg
shld
fsubrp
fwait
adc
cmpsl
in
push
inc
test
pop
jle
fidivrl
inc
dec
and
cwtl
xlat
fnstcw
pop
push
mov
lret
sbb
xchg
les
and
mov
repnz
inc
sub
mov
shl
pop
adc
pop
add
fnstcw
rcl
enter
leave
sub
bnd
fdivrl
lret
lods
push
roll
add
pusha
xchg
push
mov
dec
adc
pushl
fldl
sbb
es
call
and
cmpsb
sahf
sbb
popf
mov
fadds
xchg
ss
testl
mov
dec
clc
fdivl
addr16
adc
cmp
stos
mov
cmp
nop
sbbl
mov
xor
pop
xor
sbb
push
adc
pop
fdiv
mov
lret
test
sbb
test
fists
xchg
imul
lahf
sub
and
dec
add
mov
fstl
jecxz
fadds
sub
out
push
adc
sbb
loopne
test
popf
inc
test
xor
subl
mov
movsl
es
push
and
mov
jecxz
xlat
or
add
dec
adc
in
add
mov
rorb
fmulp
inc
das
cli
in
into
pop
stos
fisttpl
roll
nop
cmpsb
insb
push
mov
fnsave
js
mov
mov
xchg
inc
push
cs
out
sbb
out
cmp
add
lock
mov
out
lret
shll
adc
test
and
mul
xor
mov
xorl
push
sahf
sbb
mov
lods
adc
out
pop
std
adc
sub
inc
out
xlat
and
repz
lods
push
pop
push
aam
xor
xor
adc
shll
dec
scas
pop
imul
add
mov
jb
and
xchg
filds
mov
das
arpl
scas
stos
jo
jns
push
aas
clc
cmc
lcall
repnz
sbb
xchg
xor
lea
adc
add
orl
pop
dec
cwtl
test
xchg
mov
add
test
pop
mov
dec
cli
and
les
cmp
jae
xchg
xchg
mov
in
shll
add
mov
fiaddl
fstl
movsl
aam
adc
sub
stc
jl
jo
data16
into
repnz
imulb
in
les
ljmp
les
jl
lods
adcw
sbb
and
in
add
or
mov
imul
xchg
in
mov
mov
xorl
sti
das
xor
lret
jl
push
pop
inc
out
pop
aas
scas
jo
push
xchg
shll
mov
cmc
adc
gs
adc
rclb
dec
xchg
pop
insb
and
ficompl
sub
je
push
cmp
mov
xor
sub
jg
sbb
mov
xor
pop
int
xor
sarl
xchg
inc
mov
insl
jl
cmp
fwait
lock
out
mov
or
clc
pop
fbstp
xchg
xchg
imul
loop
jge
outsb
adc
lret
add
cld
lahf
push
mov
rorl
add
sti
subb
jl
and
mov
cwtl
cs
scas
xchg
xchg
rcrl
lods
dec
xchg
push
push
idivb
xor
sub
inc
xchg
pusha
add
mov
leave
addl
lods
sahf
push
leave
arpl
xchg
or
jne
xor
mov
scas
aas
push
in
push
dec
das
mov
and
int3
loopne
es
cmpsl
jb
insl
cltd
mov
adc
jae
imul
cwtl
jno
out
push
pop
fdivs
faddl
xchg
or
dec
andb
dec
loop
mov
fadd
adc
scas
pop
jne
popf
push
cmp
pop
or
dec
lahf
inc
rorb
testb
push
sti
push
es
nop
sti
mov
cmp
and
sbb
es
mov
mov
in
daa
imul
lock
pop
or
cmp
cmp
jl
sub
jbe
ja
call
xor
in
out
ret
cli
add
scas
or
jne
int3
icebp
fmull
add
adc
push
push
or
in
roll
xchg
mov
mov
add
adc
popa
xchg
xchg
data16
out
call
movsb
push
imul
mov
push
xorb
and
loop
xchg
jne
sbb
stos
dec
xchg
lcall
out
jmp
or
flds
mov
addr16
inc
fsubrl
xchg
cmp
or
fs
jmp
cmp
divl
lods
push
jae
push
sub
pop
int3
data16
ror
idivl
fidivs
ja
in
iret
fstpt
test
cwtl
lret
mov
jg
inc
pop
dec
iret
pop
test
xor
leave
inc
add
fwait
mov
sub
inc
or
jae
inc
out
inc
pop
add
xchg
jg
es
sub
ror
push
mov
lds
fstpl
cmp
nop
cmc
das
lahf
jbe
cmp
push
pop
mov
xchg
sub
add
push
jne
jnp
mov
test
fisttpl
out
dec
pusha
cmpsl
push
pop
xor
or
mov
iret
sbb
jo
cmp
or
push
mov
mov
add
orb
xchg
mov
dec
or
or
lds
jge
test
push
push
decl
jae
fstpl
test
das
rcll
pop
push
dec
push
or
shr
jns
popa
shlb
lret
sub
pop
jle
clc
in
cmp
mov
pop
dec
ljmp
adc
mov
loopne
adcl
mov
jns
notb
loop
testb
xor
jmp
je
data16
lret
stc
xor
testb
roll
xor
in
mov
and
pushw
sbb
mov
jg
sarb
jmp
push
lcall
add
or
jo,pn
fcmovbe
out
pop
outsl
mov
mov
jne
scas
loope
xchg
lret
imul
push
shll
hlt
xchg
mov
ljmp
bound
jp
xor
mov
dec
movsl
lods
setae
mov
or
pop
xor
cmp
scas
jmp
cmp
sbb
pop
hlt
sub
out
leave
cs
addr16
das
sahf
nop
and
xchg
fsubrs
inc
and
or
jge
popa
or
in
and
shrb
or
andl
paddsw
sub
lret
fcoms
dec
lcall
sub
mov
jbe
pushf
cwtl
mov
aaa
ja
shll
mov
pop
push
pop
fmuls
call
pop
dec
les
insb
sbb
xchg
adc
push
push
iret
hlt
jp
cmp
mov
enter
xor
aam
xchg
scas
xchg
sbb
stos
mov
xchg
int
dec
sbb
or
je
jns,pt
cmp
jmp
aaa
pop
cmc
fwait
push
lea
cmp
xor
mov
mov
stos
dec
push
mov
xchg
sub
data16
cltd
cmp
xor
jbe
test
stos
mov
movsl
jge
push
imul
scas
repnz
dec
mov
cwtl
or
rolb
xor
imul
fcomp
mov
pop
mov
xchg
sub
xlat
fstl
jo
pop
jns
into
repz
ret
outsb
subl
aam
push
ja
push
stos
pop
jg
cld
lret
fcoml
pop
push
adc
popf
add
xor
clc
stos
add
imul
aas
dec
xlat
mov
sub
clc
xor
mov
inc
dec
jmp
sbb
cmp
ss
push
iret
int3
flds
xor
sbb
test
insl
dec
cmc
mov
pop
sbb
lods
shr
xchg
sbb
negb
repz
push
xchg
cltd
shrb
xchg
xchg
mov
inc
addr16
jae
mov
inc
sub
or
xchg
testl
test
loope
out
jecxz
outsl
adc
call
cmp
xchg
std
stc
and
xchg
leave
fsub
pop
cmpb
fnstcw
stos
mov
inc
fs
cmp
orl
lret
je
add
lods
pop
mov
ds
test
test
popa
dec
gs
mov
inc
push
and
cmp
iret
lods
push
cltd
repnz
movsb
clc
push
outsl
int
out
mov
pop
cld
ret
xchg
lret
inc
stos
loopne
in
imul
rorl
mov
fistpll
mov
jecxz
lds
sbb
ljmp
stos
and
cwtl
inc
pop
add
lahf
add
adc
and
or
insb
arpl
out
or
sub
shlb
adc
jbe
or
sahf
inc
movsl
loope
mov
pushf
sub
pushf
xor
dec
and
stos
pop
and
mov
ds
adc
adc
xchg
lahf
cmpsl
dec
adc
fisttpl
cmp
adc
das
mov
sbb
mov
aad
es
xor
adc
cltd
out
or
rolb
cmpl
fisubs
mov
adc
and
rcll
push
cli
fwait
outsb
mov
iret
push
sbb
or
mov
int
subl
rorb
movsl
leave
shlb
pop
and
shrl
push
leave
sbb
inc
shlb
pop
cmpsb
dec
or
sbb
mov
movsb
jl
mov
xor
testl
push
rorl
lods
cmp
ficomps
inc
insl
fdivrs
mov
dec
insl
cmp
cmp
xchg
inc
push
mov
loop
mov
aaa
rcl
pop
mov
sub
loopne
mov
mov
add
leave
loop
inc
stc
push
test
pop
add
loope
fcoms
adc
es
cmp
mov
push
jmp
lahf
mov
fsts
adc
pop
or
and
aam
leave
add
loopne
test
insl
daa
ds
in
cld
cmovs
nop
inc
outsl
mov
pop
jmp
aaa
mov
adc
pusha
ss
dec
orb
leave
xchg
mov
mov
inc
jno
js
mov
push
arpl
sbb
adc
adc
jo
lcall
lods
and
scas
shl
mov
cld
ljmp
add
cmp
inc
test
dec
aam
or
sub
push
mov
lock
and
jnp
daa
cli
adc
adc
iret
cltd
addr16
scas
insl
inc
sub
adc
cld
xlat
lock
pusha
push
cmp
push
scas
nop
inc
cmpb
adc
iret
pop
xchg
add
sub
pusha
cli
fistps
cmp
sti
mov
iret
and
aas
lcall
xlat
ret
cs
inc
in
sbb
add
push
pusha
xlat
or
inc
adc
fdivl
push
adc
stos
xor
sub
in
pop
jle
mov
mov
lds
sub
sti
push
mov
jns
in
xchg
dec
ja
rorb
std
xchg
push
and
adc
jecxz
dec
sbb
sarb
imul
xchg
inc
loopne
dec
in
dec
mov
sbb
and
jl
mov
cs
cmp
test
jmp
mov
nop
dec
inc
pop
aam
cmpsl
clc
insl
xlat
in
lahf
stc
or
or
jmp
inc
sub
mov
fdivr
mov
dec
jo
js
test
mov
inc
and
mov
sbb
inc
movsb
dec
adc
jb
mov
cltd
and
add
mov
mov
andb
push
sbb
pop
insl
js
stos
and
sub
rclb
lods
jb
push
pop
xor
xorb
mov
test
jmp
ds
or
and
js
scas
aam
std
and
push
mov
pop
push
cmp
sbb
ret
sub
dec
lret
jo
cmp
mov
test
cmp
inc
mov
icebp
mov
mov
sbb
ds
adc
mov
nop
push
dec
sbb
cmpsb
nop
mov
sub
std
out
pop
sbb
cmp
loope
xor
cwtl
les
sbb
cmp
nop
pop
movsl
sar
bound
loop
xchg
jg
cmp
test
sbb
pop
xchg
push
int3
cli
xchg
into
stos
jbe
inc
push
fs
in
add
leave
push
insl
insl
sti
pushf
inc
rcll
imul
arpl
dec
jo
pop
js
mov
cld
add
jg
xor
mov
jmp
clc
shlb
and
inc
sbb
int
mov
cmp
cli
mov
lock
cmp
outsl
dec
push
cmpsl
test
and
and
in
mov
mov
mov
dec
sub
xchg
add
xchg
cwtl
dec
orb
jne
jno
push
pop
jbe
sbb
cld
daa
setb
mov
in
inc
imul
xchg
push
sub
scas
pop
jne
je
fwait
jecxz
neg
std
sbb
add
lret
mov
in
pushf
adc
int3
xchg
adc
jbe
lods
dec
lds
in
push
sahf
xchg
pushf
out
dec
jne
push
jge
dec
push
jg
cmp
and
add
sbb
sub
sub
scas
ja
xor
rclb
popf
pop
fiaddl
aam
gs
sti
adc
int
std
cmp
or
rol
fnsave
add
and
in
jg
jp
imul
push
fldenv
in
mov
popf
out
movsb
leave
push
cmpsl
or
fisubrs
sbb
push
adc
fists
jnp
mov
imul
call
leave
sub
fiaddl
adc
andl
dec
or
fdivs
rolb
pop
jae
shlb
or
imul
or
ret
les
outsl
fadds
ret
fimuls
fldt
or
xor
cltd
out
aas
inc
mov
cmpl
scas
lcall
jg
lret
je
flds
or
mov
push
xor
shl
mov
mov
add
in
icebp
outsb
movsb
push
xor
jne
aaa
and
jae
roll
sbb
xor
and
cmpsl
jl
lods
fiaddl
call
lods
push
shlb
iret
xchg
push
push
mov
call
xlat
or
aaa
xor
rclb
cmp
fisubs
dec
xor
pop
sbb
mov
js
test
jl
mov
mov
out
inc
push
dec
push
fstpt
add
ljmp
pop
lds
sbb
nop
pop
mov
dec
shrb
loop
in
jl
fimuls
adcl
bound
loop
das
js
push
push
std
dec
sub
shrl
mov
in
mov
jmp
imul
negl
mov
sbb
gs
and
faddp
mov
cld
out
rolb
jno
mov
lods
in
imul
push
js
inc
cmp
and
aas
cmp
xchg
lret
push
psubq
imul
negb
inc
adc
lcall
addr16
test
in
leave
sbbb
pop
push
mov
fsubr
repnz
das
inc
xchg
inc
mov
sbb
xchg
dec
push
ret
inc
inc
sbb
in
push
mov
push
or
mov
sti
cmpsl
and
xor
mov
xchg
xchg
push
nop
dec
test
frstor
lret
jnp
lock
adc
inc
jo
mov
pop
ss
scas
xchg
mov
xchg
mov
fwait
mov
test
xchg
sub
in
pop
xor
aas
insb
pop
mov
stc
and
mov
xchg
mov
out
ss
add
jl
imul
into
inc
dec
adc
cmp
add
leave
mov
fmuls
out
rol
stos
or
and
in
jge
jb
es
sbb
sub
adc
or
inc
sub
jecxz
hlt
pop
inc
stos
push
inc
inc
icebp
lret
int3
and
xchg
sub
sub
xor
fbld
jnp
pop
push
pop
adc
dec
mov
lock
je
mov
lcall
cld
or
pushf
add
ret
inc
test
fs
iret
or
popf
lock
jmp
shrb
pop
stos
sbb
je
shr
test
loopne
aad
xlat
or
push
sbb
scas
test
jnp
push
test
ss
or
adcl
stc
dec
daa
dec
scas
xchg
test
repz
outsl
stos
fnstenv
sub
mov
and
push
mov
xchg
lds
jp
pop
mov
mov
into
inc
lock
lock
add
and
aas
je
inc
cmpsl
pop
xchg
ficomps
push
imul
add
and
push
mov
and
jae
push
int
lcall
rcrl
mov
hlt
ffree
jo
or
fs
dec
and
decl
xor
jns
jne
mov
enter
and
pop
sbb
shrl
push
pop
inc
repz
fbld
inc
stos
jg
cmp
mov
and
xor
pop
cs
rclb
mov
push
fistl
sarb
test
jns
xchg
lret
jo
pinsrw
sbb
jle
repz
jno
xchg
out
insl
xor
addr16
dec
add
fidivs
jb
test
lahf
pusha
jmp
xchg
jge
popa
test
lret
push
sbb
xlat
mov
push
pusha
mov
mov
js
or
xor
inc
out
inc
pushf
xor
add
dec
movsl
and
stc
mov
insl
xor
cmpsb
push
and
cmp
pop
jb
leave
xor
mov
sub
push
stos
dec
xchg
mov
adc
scas
fistpl
arpl
sbb
cwtl
push
adc
rcr
mov
call
lea
sub
xor
ret
add
pop
push
mov
leave
mov
mov
mov
xchg
arpl
loopne
cmpsl
or
ret
aas
add
lret
and
pop
dec
cmp
lahf
mov
push
add
sub
sub
shl
sbb
rorl
paddd
mov
jmp
add
push
out
loope
sub
ficoms
inc
rorl
popf
insl
or
fildl
pop
dec
dec
movsb
xchg
es
cmp
xchg
aas
inc
int3
scas
mov
out
testl
or
adc
fimuls
scas
std
lret
sbb
jo
int3
xchg
movb
jmp
call
imul
jb
cmpsb
adc
push
in
js
xchg
cld
cmpsl
and
or
xchg
cmp
movsl
mov
xchg
lret
pop
jp
add
scas
add
fcoms
inc
sub
mov
adc
loopne
pusha
repnz
imul
call
push
and
add
repnz
lcall
xchg
xor
test
pop
inc
dec
dec
sub
sub
lds
fisttpll
cmpsl
cmp
sub
jge
mov
push
mov
subb
and
mov
mov
sbb
cmp
pop
pusha
adc
out
gs
or
into
rep
jae
pop
add
jno
cmc
rcrb
mov
imul
and
leave
fistl
fwait
aas
xlat
js
fwait
movsb
lret
or
into
mov
fnstenv
mov
sarb
sub
mov
add
movsb
jo
into
pop
mov
jbe
sub
add
xor
adc
les
es
mov
das
and
push
lret
test
imulb
cmp
push
mov
lret
ljmp
test
imul
movsl
stos
push
mov
or
mov
bound
xlat
rcrb
repz
xchg
ja
outsl
imul
sti
filds
cmpsb
and
jnp
inc
pop
aas
popa
lods
inc
addl
out
cwtl
inc
mov
ret
xchg
lret
cmc
and
jbe
roll
subb
sbb
scas
inc
imulb
push
orl
jg
outsb
fimuls
mov
in
scas
mov
mov
mov
iret
xchg
ss
xchg
cs
sbb
inc
out
sbb
ljmp
minps
faddl
je
test
jb
dec
pop
add
dec
inc
adc
rcrb
xchg
mov
pop
cmp
mov
xchg
adc
xchg
push
out
push
or
adc
popa
lcall
add
dec
xor
fcom
aaa
mov
dec
popa
xchg
outsl
scas
mov
insb
sbb
daa
cmp
ficompl
cmpsl
mov
inc
stos
cmpsb
stc
mov
insl
cmp
inc
xchg
faddp
scas
nop
addl
cmp
loopne
bound
outsl
lods
dec
sbb
stos
in
ljmp
mov
pop
movsl
rorb
mov
nop
mov
xor
subl
add
mov
ds
inc
pushf
mov
mov
test
mov
mov
lret
xchg
pusha
inc
xchg
lret
xchg
jp
out
in
pop
mov
pop
push
fs
lods
sahf
xchg
or
push
stc
rorb
mov
sbb
pop
je
adc
jno
jg
jne
pop
adc
outsl
cmc
push
inc
add
or
mov
push
pop
lret
push
sahf
or
mov
jae
adc
jle
loope
pop
jnp
mov
sub
mov
test
outsb
pushf
jmp
movsb
push
jmp
mov
mov
lea
inc
mov
sbb
sub
or
pop
sub
std
mov
movsb
inc
stos
sbb
push
sbb
enter
xchg
jl
call
shlb
fxch
int3
dec
test
bound
mov
add
lea
mov
inc
xchg
mov
push
pop
sub
fbstp
outsl
lea
cwtl
mov
loopne
push
cli
ljmp
pop
out
xchg
stos
xor
xorb
pop
xor
jne
mov
cmp
int
inc
xchg
add
aad
and
clc
dec
xchg
movsb
insl
test
adc
dec
std
jbe
stos
add
and
add
dec
pop
into
pop
xor
call
int
call
sub
sbb
test
clc
sub
fcmovnu
fnstenv
stc
xchg
cmp
fmulp
flds
in
clc
pop
lahf
adc
and
stos
rorb
imul
dec
repz
mov
cld
shlb
push
into
repnz
ret
nop
and
adc
inc
xchg
imul
ja
data16
mov
aaa
test
pop
mov
xor
pop
ja
dec
xor
and
pop
outsl
xchg
sahf
out
cmpsl
scas
rcl
dec
jne
insl
jno
loop
sbb
xchg
pop
adc
ret
ja
cmpsb
js
cli
dec
test
incb
icebp
test
in
movsb
inc
sarl
dec
add
cltd
pop
jno
xor
mov
cmp
lock
adc
xchg
jbe
or
push
in
sub
rcll
and
sub
or
hlt
fsts
repz
jge
scas
xor
push
aaa
mov
movsl
xor
dec
call
lea
pop
sbb
nop
sbb
jnp
pop
test
add
pop
daa
cltd
add
aas
imul
sub
sarl
test
insb
shlb
jl
ljmp
icebp
loopne
push
inc
xlat
mulb
out
sub
push
lods
incl
nop
mov
xchg
aas
and
ret
push
fisttpll
jnp
cmp
inc
jg
push
imul
jmp
pop
mov
xchg
push
mov
cmp
lock
inc
and
std
push
decb
inc
mov
lods
cltd
jae
int3
orb
mov
les
jbe
or
iret
mov
push
sbb
or
aad
adc
sets
setnp
xchg
sbb
mov
icebp
repz
insb
inc
add
daa
jae
cmpsl
adc
shll
aam
rcrb
push
mov
in
push
add
dec
fisubrs
mov
lret
xor
orl
pop
mov
xchg
adc
andb
dec
loopne
lcall
sti
push
imul
cmp
or
mov
ljmp
aaa
adc
and
out
xchg
dec
shll
rol
inc
fwait
fs
xchg
aad
addl
call
lcall
enter
or
push
xchg
jl
push
xchg
mov
cwtl
in
and
adc
or
enter
ljmp
xor
ja
je
or
into
push
adcb
cmp
pop
scas
jge
repnz
and
outsl
dec
dec
sub
out
or
pop
fld
stos
int
subb
jo
jo
cmc
addl
sti
mov
pop
pop
add
mov
outsb
out
clc
push
rcr
addb
inc
shrb
or
dec
mov
aaa
mov
pushf
dec
xchg
sub
mov
xor
fadds
xchg
in
cmpsb
pop
sbb
mov
int3
fcmovnbe
sub
sahf
aas
xor
jae
movsb
mov
aad
xor
decl
jb
sbb
in
test
movsl
adc
add
mov
rcll
gs
imul
jns
dec
je
sbb
xlat
sbb
jnp
jle
mov
mov
icebp
mov
cmp
outsl
lock
sbb
xchg
add
xor
adc
add
or
roll
pop
into
pop
mov
out
ds
adc
xor
mov
aas
jbe
cmp
test
fs
sbb
dec
push
aas
jae
lods
lret
data16
int
or
lea
pop
sub
add
mov
and
xchg
test
js
test
mov
sub
mov
or
clc
out
pop
ljmp
jg
add
lods
or
pop
jne
jecxz
xchg
mov
fimuls
in
jecxz
inc
jo
sbb
push
hlt
cltd
push
or
or
mov
xchg
adc
jmp
js
rcll
mov
pop
fistpll
jp
jge
cwtl
aam
js
stos
popf
in
xor
cmp
idivl
mov
xchg
inc
inc
cwtl
movsl
test
faddl
pop
push
jns
das
jg
frstor
in
mov
jl
cmp
xchg
jmp
stc
loopne
fiaddl
xorl
imul
cmp
hlt
sub
sbb
push
sbb
inc
lcall
xchg
sub
lcall
imul
or
xchg
out
xchg
mov
xchg
ds
push
jmpw
stos
setbe
mov
sub
or
or
push
rclb
or
icebp
loopne
ret
cmpsl
gs
mov
cmp
push
pop
xor
or
out
aaa
push
sub
or
lods
jns
inc
jecxz
and
and
jae
pop
ds
cmp
mov
push
fucomip
ror
cmp
or
mov
in
sub
push
sar
jle
aad
js
pop
rol
jno
fildl
push
pop
xchg
aad
punpckhbw
mov
mov
cmp
mov
inc
add
sbb
xor
xchg
mov
movsl
and
lods
les
mov
sahf
stc
orl
mov
popl
enter
lods
fwait
sub
lahf
xchg
push
cltd
nop
aad
mov
pop
push
jnp
arpl
mov
jmp
iret
jbe
ret
mov
sub
in
sub
int
sar
mov
cli
dec
xchg
sbb
push
outsb
movsb
add
nop
sarb
jp
ds
lret
xor
leave
into
dec
adc
push
xor
rolb
icebp
jmp
pop
inc
pop
xchg
sub
cs
dec
jl,pt
iret
int
imul
mov
into
loope
shlb
lods
insb
push
test
sbb
mov
push
xchg
fistpl
addr16
clc
in
fwait
lea
and
jae
mov
out
mov
sbb
test
xor
sub
sub
fildll
out
mov
test
sbb
cmpsl
mov
mov
cmp
sbb
loope
pop
pop
xlat
rcl
sub
xor
imul
ret
push
lret
mov
xchg
cld
sar
in
stc
and
nop
jge
sbb
mov
sbb
iret
push
inc
cmc
out
mov
adc
in
outsb
mov
sti
or
sub
inc
cmp
fidivrl
cmp
loop
mov
sbb
push
test
xchg
les
sub
pop
push
adc
adc
cmp
xor
int
mov
pusha
pop
inc
sub
loopne
aas
sahf
adc
data16
bound
data16
dec
and
mov
xor
into
mov
movsl
andl
xchg
ret
inc
push
mov
into
mov
jae
fistl
outsb
lock
inc
add
pminub
jae
pop
jae
clc
loope
int3
and
adc
nop
dec
lahf
cmpsl
gs
cltd
mov
add
cmpsb
mov
fisttpll
aam
cmpsl
bnd
add
out
subb
xor
mulb
dec
jne
lret
fstl
repnz
loopne
jmp
or
dec
jmp
mov
xchg
imul
sub
into
cld
int3
test
out
aam
popa
xor
lock
shll
outsb
cmp
dec
int
mov
mov
dec
xlat
add
mov
test
pop
adcl
jns
popf
fs
cltd
add
mov
stos
rcrl
xchg
ljmp
mov
arpl
outsb
xchg
dec
fwait
enter
imul
popa
hlt
adc
cmpsl
pop
cmp
mov
int3
or
adc
pop
lds
push
fnstenv
jg
xchg
fdivrs
xchg
sbb
popf
dec
jo
fdivrl
mov
mov
xchg
in
outsl
add
mov
std
xchg
jmp
push
out
xchg
jg
push
add
push
xor
sbbl
into
in
mov
outsl
or
sub
movsl
push
pop
ljmp
out
sarb
lea
imul
inc
dec
cli
test
int3
mov
sbb
sbb
icebp
imul
out
ss
fisubrs
in
pop
mov
lret
hlt
mov
xor
sub
jb
push
xor
mov
inc
mov
stos
adc
xchg
push
push
pushl
test
xchg
movsl
inc
jne
and
push
cmp
bound
sti
jae
xchg
std
mov
dec
sti
xor
and
adcl
inc
mov
js
cmp
lods
adc
pusha
push
or
mov
push
sahf
dec
pop
cmpsb
mov
scas
fwait
aaa
push
mov
cmp
push
aam
mov
cmpsb
xlat
push
or
popa
mov
pop
pop
push
inc
adc
add
scas
sbb
movsl
sbb
in
mov
rcll
xchg
popa
jle
data16
ljmp
mov
xor
pop
lret
aaa
pushf
cmc
mov
std
cmpsl
and
and
xor
push
and
test
push
cmp
push
gs
mov
fstpt
hlt
shlb
pop
call
outsb
sbbb
icebp
repz
fucomip
shlb
or
aas
nop
dec
sbb
and
out
push
movsb
lock
add
in
aad
jno
aas
out
arpl
and
iret
sbb
dec
sbb
cmpl
iret
ds
sbb
call
mov
push
fisubl
cli
add
cli
push
mov
test
nop
fidivs
dec
arpl
fiaddl
in
xchg
sub
inc
jmp
mov
pop
faddp
mov
sbb
aam
ror
lods
gs
sbb
fimuls
or
aas
incb
jbe
sub
xor
mov
mov
mov
or
mov
jns
loope
dec
imul
arpl
cmp
nopl
sbb
fildl
mov
cmp
scas
lods
daa
arpl
lret
sar
xchg
fnstsw
jp
and
fwait
aad
lahf
test
loope
pop
imul
movsl
mov
pop
xor
test
jae
rorb
adc
sub
jmp
scas
add
int
cltd
fcoml
in
mov
pop
sbb
mov
fisubrl
shlb
dec
mov
ljmp
inc
or
cli
dec
stc
sbb
mov
leave
pushf
pushl
xor
pop
sub
and
mov
out
jo
outsb
sbb
mov
cmp
sbb
stos
fnsave
jnp
push
and
mov
cmc
lret
dec
xchg
inc
xchg
sub
data16
or
xchg
mov
sbb
push
rolb
cmp
xchg
xadd
pop
iret
movsl
mov
mov
jle
mov
push
repz
call
jle
dec
ret
cmp
xchg
lock
xorl
aad
add
add
negl
xchg
aad
in
jb
test
test
lods
pop
or
scas
mov
jb
jecxz
mov
sub
mov
xchg
dec
xchg
loopne,pt
push
daa
lds
dec
xchg
mov
mov
adc
movsl
call
add
mov
call
dec
int
xchg
outsl
scas
cwtl
and
cmpsl
mov
cmp
iret
push
xor
xchg
std
mov
scas
test
pop
dec
pop
adc
imul
scas
inc
shrb
out
fld
mov
inc
pop
add
mov
repz
stos
xchg
dec
add
xchg
cmp
and
push
dec
dec
stc
sahf
adc
sbb
inc
addr16
aas
and
loope
mov
mov
and
push
mov
or
lea
int
adc
cmp
jg
adc
mov
loop
fisubl
repz
cs
mov
or
jl
or
call
dec
lret
push
pop
push
int
stos
cmp
lahf
mov
xchg
in
and
inc
call
inc
sbb
imul
data16
mov
mov
lret
leave
inc
in
aad
push
loope
imul
ret
inc
mov
dec
fmull
jge
aam
cmp
mov
in
psubd
inc
mov
inc
mov
cmp
jns
inc
push
jecxz
out
scas
in
clc
jo
insb
ss
pop
in
jmp
enter
stos
xor
les
dec
stos
sarl
lret
push
daa
and
or
aam
ret
push
lcall
leave
das
inc
or
pop
push
bound
sbb
mov
sub
loope
pop
dec
mov
loop
inc
xchg
or
sub
sbb
sub
jp
pop
imul
xchg
pop
fs
or
fdivp
dec
push
aam
mov
es
gs
icebp
leave
mov
xchg
and
mov
xchg
fsubr
bound
push
dec
dec
decb
push
add
xor
iret
popa
clc
sub
sbb
mov
je
mov
cmp
inc
jnp
sub
mov
add
jno
mov
lcall
mov
ljmp
in
xchg
sbb
and
iret
and
cs
repz
cld
mov
push
push
inc
mov
add
sbb
xchg
in
dec
or
dec
sub
ret
sbb
lret
mov
ret
cmp
in
lea
cmpsl
cwtl
cld
or
add
daa
mov
pushf
mov
pop
loopne
dec
rcll
or
jecxz
inc
fcomip
vpgatherqq
xor
ror
dec
sbb
mov
jmp
sub
int3
jmp
inc
mov
cld
xor
mov
andl
out
xchg
inc
sbb
ljmp
negl
enter
sbb
adc
adc
push
or
dec
push
repnz
jmp
in
fiaddl
pusha
and
lahf
movsl
dec
xchg
or
je,pt
jecxz
xor
and
cmpsb
imul
out
daa
ret
mov
adc
pop
add
inc
in
mov
popf
inc
sub
push
adc
ds
add
sub
mov
jbe
jnp
and
xchg
mov
dec
xor
orb
out
adc
mov
fldl
push
mov
sbb
or
mov
inc
icebp
sub
xchg
insl
mov
or
xor
iret
mov
jno
cmp
repnz
jno
and
sbb
add
or
inc
scas
mov
xor
inc
jl
cmp
cltd
cmp
jo
bound
pop
cmp
jl
and
mov
lods
xchg
aam
loopne
hlt
outsb
dec
lret
pop
js
jo
scas
inc
bound
dec
cli
pop
movsl
or
popf
cmpsl
inc
out
nop
pop
add
xchg
pop
inc
test
pusha
movsl
inc
pop
into
je
cld
sbb
or
xchg
push
insb
mov
mov
inc
daa
test
jl
ds
cwtl
ljmp
or
add
mov
jbe
int
fpatan
loopne
sbb
xchg
loop
and
leave
pushl
ss
test
add
mov
pop
imulb
idivb
mov
lods
cld
icebp
or
and
sbb
dec
pop
ljmp
xor
cmp
dec
imul
insl
imul
xorl
cmpsb
add
push
xor
lock
or
sub
sbb
and
ss
jo
test
inc
iret
mov
aam
ljmp
sahf
add
push
out
xor
pusha
test
sbb
add
jb
dec
ja
ja
mov
mov
xchg
cmc
enterw
lretw
rolb
adc
mov
pop
je
or
mov
push
pop
hlt
stc
jnp
outsl
jbe
and
xchg
fmuls
or
iret
jbe
jg,pn
sub
dec
jle
mov
add
jno
mov
adc
mov
and
out
insb
pop
sub
stos
scas
or
push
es
sbb
aad
or
jno
stos
adc
outsl
add
data16
jge
mov
jmp
and
pop
pop
sti
cld
inc
jmp
xchg
cs
sbb
rcll
xor
dec
test
insl
daa
pop
in
and
jo
xchg
cmp
stos
pop
adc
push
pop
gs
dec
ja
cmpsb
mov
xchg
test
cmp
scas
and
mov
cmp
das
jmp
mov
jnp
jmp
cmp
js
mov
sub
stos
std
ss
lock
out
sub
push
lock
push
and
pop
sub
and
jns
rclb
imul
fcomps
ljmp
sbb
jmp
ret
test
inc
mov
mov
cld
int
test
shrb
xchg
mov
sub
mov
or
adc
lahf
sbb
push
test
mull
es
ret
lods
or
aad
cmp
jmp
jmp
mov
mov
xor
jecxz
cld
ret
rcll
arpl
xchg
xor
test
aaa
push
sub
pop
inc
push
out
or
shlb
or
mov
push
jns
add
jecxz
push
shll
in
xchg
pop
pop
adc
or
adc
dec
lret
or
mov
gs
xchg
pop
sbb
inc
ret
call
or
loop
inc
arpl
mov
arpl
and
mov
xchg
mov
imul
aas
js
push
pushf
out
movsl
mov
mov
sbb
jb
jg
jle
pop
inc
stc
ret
into
mov
inc
aaa
push
scas
lea
push
push
cwtl
xchg
push
pop
inc
ja
inc
jmp
loopne
xchg
addr16
cmp
daa
pop
inc
cmp
pusha
or
pop
mov
mov
jno
push
loop
fs
pushf
loopne
pop
mov
add
push
xor
mov
sbb
int
cli
xor
roll
xchg
push
cmpsb
fisttpll
iret
dec
ljmp
cltd
or
xchg
dec
hlt
icebp
ret
sbb
lds
mov
les
std
add
gs
jmp
cmp
jnp
mov
inc
lahf
lods
fildll
pusha
pop
add
push
jl
push
jmp
push
pop
lea
imull
jmp
aad
rorb
fwait
call
shll
sbb
push
adc
leave
jp
mov
adc
dec
sbb
arpl
sbb
pop
xchg
les
pop
bound
aas
ror
cmpsb
stos
sbb
push
cld
out
adc
imull
jl
sub
mov
inc
adc
mov
sbb
pop
xorb
stos
test
adc
clc
mov
rolb
sub
insl
fs
add
mov
cmpsb
adc
stos
fwait
arpl
xchg
xchg
mul
xlat
push
mov
mov
xchg
aas
mov
loopne
mov
lcall
and
cmp
jbe
lea
lods
rcll
push
inc
pop
jns
xchg
and
fldl
in
std
pop
cmp
inc
xchg
mov
loopne
mov
sbb
repz
jns
outsb
ffreep
ds
and
push
mov
cwtl
pop
pop
sub
cmp
add
cwtl
mov
lret
adc
push
int
adc
mov
cmp
pop
add
xor
sti
fld
sbb
bound
imul
xor
mov
cld
pop
testl
cmpsl
mov
dec
adc
imul
pop
insb
sti
xchg
scas
cld
add
adc
mov
ds
je
stos
std
das
cltd
lret
xlat
pop
aam
popa
pop
pop
mov
loope
das
jp
insl
and
push
push
bound
sub
push
xchg
inc
outsl
mov
dec
add
adc
mov
and
js
je
cmp
cltd
push
shlb
les
add
ret
cmp
shll
sbb
adc
inc
mov
xchg
xchg
pop
das
jb
lods
or
sub
adc
arpl
pop
stos
dec
clc
ret
test
jne
out
sbb
fmull
inc
cs
test
mov
pop
or
addl
jno
mov
xchg
bound
testb
sub
iret
cli
iret
pushf
mov
add
lds
repz
sub
add
sbb
add
outsb
mov
dec
sub
and
pop
fiaddl
ficompl
jno
pusha
fwait
scas
cmp
ret
xor
add
aam
loop
add
jnp
or
jo
cwtd
in
pop
mov
insl
or
mov
test
pop
adc
xchg
lds
movsb
aad
inc
push
lahf
lcall
loop
cmp
push
lods
mov
ror
insb
push
cmpsl
push
andb
fimull
mul
jle
fmuls
inc
dec
add
xchg
and
jne
dec
mov
je
loop
ljmp
push
xchg
cmpsb
stos
push
fldcw
fistl
jmp
fistps
lret
stos
cltd
and
aad
outsb
jg
popf
enter
lea
out
rcr
xor
daa
xchg
xchg
adcb
mov
repnz
ret
xlat
js
sbb
push
dec
dec
mov
mov
loope
loopne
dec
iret
add
fstpt
push
xor
lods
stc
fwait
pusha
inc
adc
imul
adc
hlt
int3
insb
xchg
es
xor
fs
pushf
mov
iret
js
pop
push
adc
mov
sub
int
push
pop
insl
add
push
jp
fsub
gs
nop
mov
clc
xchg
into
ret
andb
xor
in
pushf
xor
lret
and
jnp
sbb
adc
les
mov
out
or
orb
imul
inc
push
fidivs
lret
movsl
fmuls
icebp
iret
pop
int
lret
sub
fmull
sub
mov
or
in
jmp
sbb
aad
jp
sbb
movsb
push
jmp
cmp
sbb
sbb
or
push
mov
imul
fdivs
enter
cmp
or
cwtl
pop
sahf
ret
repnz
ss
imul
jo
pop
insl
xor
mov
lahf
inc
mov
jmp
mov
stc
push
scas
mov
stc
sbb
rcrb
lret
jno
mov
sahf
jecxz
cld
pop
mov
lds
mov
orl
test
push
xchg
jb
dec
and
mov
nop
incl
add
enter
stos
mov
insl
adc
cmpb
xor
inc
stc
into
jns
scas
inc
and
or
adc
les
cld
lock
aas
sbb
das
inc
jge
dec
add
jge
int3
gs
push
sub
fsts
xor
jmp
test
sbbb
and
adc
jp
repz
inc
sub
sbbb
jns
mov
adc
ja
repnz
fisubl
xor
dec
pop
int3
rorl
xchg
xchg
mov
adcl
add
and
lret
cwtl
in
xchg
out
test
movsl
outsl
daa
jge
pop
bnd
mov
push
jo
imul
xor
dec
in
cld
ljmp
push
mov
pusha
and
xor
mov
add
cmpsb
cmc
insb
dec
jo
lret
stos
add
repz
mov
imul
and
pop
fsts
je
test
aaa
sti
xchg
mov
adc
je
push
in
mov
dec
addr16
xchg
and
lock
jl
and
cli
lahf
cmp
cmp
negb
movsb
ret
mov
jecxz
and
and
adc
dec
faddl
call
push
inc
adc
in
adc
test
lods
lea
sbbb
in
mov
sbb
or
repz
js
insl
in
insb
sbb
je
inc
enter
or
es
pop
int3
sbb
pop
jle
ds
mov
pop
and
mov
pushf
mov
mov
pop
inc
cmpsl
std
arpl
in
jae
cld
xorb
testb
lret
lahf
jmp
out
cmp
je
cs
dec
fisttpll
and
jmp
xor
push
ror
cmp
les
les
pop
lods
xor
dec
popf
push
repz
dec
pop
push
and
pop
sub
xchg
repz
or
pop
iret
test
adc
fs
jae
jne
jno
ljmp
stos
jmp
fcoml
dec
lds
outsb
push
pop
pushf
inc
or
sbb
loop
sbb
push
test
cwtl
xchg
pop
loop
jae
push
shlb
push
or
rcrl
pop
scas
lods
xor
lret
xor
mov
xor
popf
pushf
and
fisubs
inc
ds
inc
mov
jne
lods
movsl
mov
std
pop
mov
in
repnz
lds
add
fdivr
jae
insb
rcll
and
mov
imul
cmp
mov
mov
pop
cmp
pop
xchg
xchg
in
repz
gs
mov
mov
xchg
sub
out
out
mov
jae
sub
inc
in
loope
pop
idiv
cmp
or
ljmp
in
movsb
in
or
pop
idivl
ja
popf
xor
xchg
or
outsb
call
ljmp
xchg
sbb
or
mul
xchg
inc
jbe
js
mov
shl
sbb
push
push
mov
ficomps
pop
mov
push
xor
dec
jge
inc
dec
pop
jbe
cmp
sbb
popa
in
push
mov
bnd
jg
xchg
add
xchg
dec
mov
xchg
shr
mov
or
loope
nop
mov
fcompl
push
out
lods
and
insl
push
or
jle
cmp
mov
mov
lcall
mov
ja
inc
pop
decl
loop
adc
cmp
cld
movlps
lds
push
stc
pop
push
xchg
pusha
add
and
sub
and
subb
aas
fs
test
and
sbb
jmp
stc
push
xor
nop
or
cmp
decl
push
xor
cltd
and
mov
andl
xor
or
xlat
mov
inc
dec
mov
jne
ja
cmp
cmp
loop
outsl
arpl
jge
inc
dec
aam
or
insb
lret
push
js
sbb
cmp
mov
sbb
or
sub
mov
iret
jmp
dec
push
mov
dec
test
ja
nop
nop
or
cs
dec
mov
push
and
sbb
arpl
adc
or
cmp
das
or
sti
aaa
outsb
jae
popf
or
imul
adc
addb
clc
and
pop
les
cmp
and
out
les
or
mov
sahf
adcb
lahf
add
and
pop
cltd
sbb
mov
jge
out
jmp
loop
or
repnz
xor
cmpsl
jns
push
iret
scas
push
mov
dec
sbb
push
dec
sub
mov
hlt
mov
push
xor
jge
mov
lds
mov
enter
push
dec
enter
push
or
ljmp
push
data16
out
jo
in
inc
out
dec
stc
sbb
aaa
sub
lock
add
jbe
jecxz
dec
cld
inc
sbb
loop
pop
iret
stc
fildll
pop
in
mov
pop
mov
sti
mov
rcll
adc
xor
movups
adc
inc
roll
mov
push
jb
push
mov
stos
add
xor
loopne
cmp
xor
pop
inc
push
pop
push
leave
sub
xchg
dec
std
mov
jnp
dec
repz
pop
test
inc
aam
add
into
aam
cmp
xorl
adc
add
pop
inc
fnstcw
in
outsb
enter
scas
mov
fstpt
loope
mov
lret
bnd
hlt
mov
cmp
sub
into
push
ja
mov
lock
pop
mov
test
ret
insb
stc
mov
hlt
lret
pop
popa
mov
push
ret
dec
pop
fbld
in
mov
popa
ficoms
jbe
pop
xor
or
hlt
lds
icebp
stc
sbb
jnp
iret
idivb
test
bound
fadds
mov
adc
out
xor
fdivrl
out
xor
jb
sbb
push
and
sysexit
inc
sub
stc
lret
popf
lock
push
sub
rcrl
push
sub
mov
sub
mov
inc
cli
mov
popf
in
aas
insb
fisttpll
dec
shrb
sbb
mov
loop
negl
pushf
jp
sbb
jb
push
pop
and
mov
mov
or
dec
fs
dec
xchg
xor
mov
mov
adc
push
popf
sar
or
push
lahf
and
xor
pop
in
test
dec
aaa
sub
mov
pop
cmp
xchg
add
arpl
shl
inc
inc
pop
mov
push
push
or
and
aam
mov
test
inc
jecxz
mov
cltd
mov
aam
mov
jnp
xchg
mov
pop
mov
adc
push
jbe
add
and
cwtl
insl
sbb
rcrl
out
lods
jmp
mov
or
mov
adc
bound
stos
idivb
pop
notl
push
xchg
and
les
mov
xor
cmpsb
popf
aam
lods
imul
std
mov
mov
pop
mov
xchg
pop
xchg
ja
addr16
shll
mov
daa
push
fstpt
jg
pop
adc
ds
nop
dec
xor
pop
jge
lret
aad
mov
rclb
inc
in
push
icebp
aam
xchg
sub
fnstcw
icebp
mov
dec
repnz
xchg
popf
fnsave
push
fcoms
pop
sbb
xor
div
cmp
sti
data16
shll
in
mov
rcrl
stos
les
sub
mov
jo
leave
hlt
sbb
cmpsb
ficompl
in
movsl
and
mov
pop
push
pop
sub
pop
les
popf
inc
fst
loope
fcoms
adc
sbb
pop
sub
faddp
adcb
sub
lods
fstpt
mov
xchg
fildll
jo
mov
pop
xchg
mov
out
xadd
movsb
dec
xor
and
mov
cmc
aam
lcall
or
fistpl
testl
inc
pop
mov
mov
dec
imul
sbb
mov
mov
mov
dec
das
mov
jle
sar
add
adc
pop
shl
push
test
mov
scas
mov
cmpsb
xor
jle
loop
cmp
loopne
and
xchg
call
mov
ds
sub
leave
je
jne
mov
mov
adc
outsl
jns
inc
test
dec
or
or
adc
cmp
push
pop
popa
stos
and
ret
sub
sub
das
mov
out
out
js
mov
js
pusha
cli
pop
mov
lahf
out
xor
sbb
leave
test
sub
adc
fstl
popa
sahf
ds
dec
cmpsl
add
dec
negb
sbb
add
cmp
mov
mov
inc
in
add
adc
add
lret
lock
push
sub
push
fwait
lea
mov
leave
cwtl
int3
mov
out
ds
mov
loopne
jg
outsb
cmpsl
inc
out
mov
push
or
jmp
lret
or
cmp
xchg
pop
inc
ljmp
ljmp
and
loop
mov
sti
call
xor
mov
push
popa
or
stos
cmovnp
call
push
fldl
enter
outsl
outsb
pop
insb
fcom
sbb
rcrl
xchg
mov
inc
ljmp
idivl
scas
and
inc
out
add
mov
popa
lret
fs
push
sbb
xchg
aam
inc
in
cmpsl
dec
aas
xchg
lock
xchg
mov
outsb
lcall
cld
iret
jnp
in
pop
popf
setg
iret
test
pop
pop
add
xchg
xchg
mov
sub
rol
jg
scas
in
ljmp
das
xchg
cwtl
adc
add
jecxz
fmulp
dec
pop
movsb
jne
dec
inc
cld
inc
test
push
fistl
hlt
cwtl
adc
mov
int
movsl
into
testl
cmp
add
push
nop
cmp
shl
adc
xchg
mov
popf
movsb
test
aad
push
cli
sub
and
sub
popa
add
mov
outsb
cmp
xchg
and
leave
mov
cwtl
jecxz
aam
pop
ljmp
and
sbb
mov
xor
and
idivl
nop
popa
in
je
js
and
fmulp
out
xchg
int
cmp
das
roll
push
cltd
xchg
pop
insl
stc
in
cmpsb
gs
mov
das
cmp
imul
or
nop
aaa
loope
dec
movsl
icebp
sbb
pop
faddl
adc
and
test
xor
or
rcll
cmpb
lcall
mov
push
lahf
pop
mov
xchg
stos
flds
stc
or
cmp
testb
or
add
cmp
ja
daa
xchg
aad
and
sub
jle
out
jge
dec
push
lret
roll
push
fs
mov
adc
jbe
movsl
xchg
aas
inc
cmpb
stos
cmpl
mov
inc
out
repz
add
into
sub
mov
fnstenv
adc
xchg
push
addr16
adc
loope
push
or
lea
xchg
lahf
xchg
or
sbb
ljmp
push
sbb
cwtl
push
lret
aad
and
ljmp
aas
lds
inc
shlb
imul
insl
in
adc
fldl
xchg
or
cli
xchg
mov
bound
adc
push
sub
inc
aam
out
je
push
aam
mov
fdivs
adcl
test
push
scas
imul
loopne
xor
pop
hlt
outsl
sub
xor
add
adc
fwait
cmc
pop
loop
ja
mov
jl
push
jne
loope
jmp
test
pushf
pop
aam
inc
aas
out
push
xor
mov
cmpl
ljmp
sub
push
sub
stos
inc
cmc
pop
inc
pop
inc
xchg
js
loop
jo
or
xchg
pop
dec
idivl
outsb
xchg
int
push
and
xchg
clc
icebp
cmp
orb
mov
cmp
pop
std
gs
imul
cmpsl
popf
or
lahf
mov
into
pop
stos
cmp
inc
call
in
xor
shr
fdivr
scas
push
in
jnp
test
inc
and
mov
lock
push
mov
cmp
repnz
cmp
popf
jp,pt
sbb
mov
xlat
scas
sbb
andb
cmpb
push
popf
das
out
cwtl
mov
xchg
stc
ret
lcall
mov
call
inc
or
cs
pop
repnz
cld
mov
mov
ja
mov
fwait
jns
stos
call
xchg
mov
mov
std
mov
jno
stos
dec
in
leave
pop
sub
in
add
out
lods
test
fiaddl
enter
pop
ret
and
push
gs
addl
rorb
inc
and
dec
mov
inc
lea
iret
xor
push
and
adc
aaa
cmpsb
sub
and
xchg
movb
sbb
in
ficompl
jne
jo
fnstsw
call
inc
xchg
push
pop
adc
in
adc
add
hlt
int
inc
mov
jle
hlt
jb
out
loop
ljmp
lret
call
out
adc
xchg
add
xchg
dec
mov
je
popf
xor
int
call
add
pop
lea
jge
rcrb
adc
push
xchg
fisttpl
cmpsb
hlt
sub
out
xchg
mov
int
repnz
xchg
jp
enter
jnp
icebp
sub
xchg
orl
dec
mov
and
fs
and
mov
out
ds
aaa
mov
out
popa
mov
sbb
nop
add
inc
fcomps
pop
ss
mov
inc
inc
fldl2t
pusha
jl
out
and
inc
dec
pop
jnp
cmc
pop
mov
ss
call
xor
shl
fistpll
xor
pop
dec
mov
aaa
mov
mov
arpl
in
int3
jmp
sbb
test
js
std
sbb
daa
aad
push
xorb
mov
loop
frstor
test
sbb
aaa
xchg
and
fwait
or
jmp
bound
adc
insb
mov
and
stos
les
cmpsb
int3
pop
inc
setb
pushf
imul
push
sub
or
pop
lea
jno
push
cmp
jbe
xchg
dec
cmp
leave
andb
sbb
leave
rclb
je
test
jne
ret
xor
add
cmp
cmpsb
mov
jb
arpl
hlt
dec
mull
jae
and
clc
shrb
push
in
popf
inc
mov
repz
jbe
dec
jmp
lsl
popf
lods
xor
cmp
cmc
ljmp
jnp
dec
pop
jge
gs
pusha
add
inc
adcb
in
nop
mov
add
mov
cltd
repz
enter
mov
inc
xor
cmp
stc
shlb
lea
cmp
adc
mov
ja
movsb
inc
xchg
sub
mov
cmpb
adc
cmpsl
mov
ret
mov
xlat
mov
imul
insb
sub
adc
sbb
fldl
sub
jns
insl
push
mov
dec
xor
ret
enter
fsub
pushf
sar
pop
es
je
add
jno
out
xchg
insb
out
lret
jne
xlat
cltd
jmp
imul
mov
mov
mov
sbb
sub
mov
gs
stos
sbb
cmpsl
push
shlb
pop
adc
and
cmpsl
jg
xchg
pop
ret
lods
lahf
push
rcll
ljmp
pop
adc
hlt
xchg
xor
rorb
jg
loop
pop
mov
mov
and
xor
jns
cwtl
insl
test
or
addr16
into
fstl
cmp
gs
jp
gs
aaa
je
jecxz
inc
mov
lock
mov
fmulp
addl
mov
imul
mov
mov
jg
or
shl
test
insb
push
lcall
mov
inc
aam
cmp
sbbl
or
xor
cmpsl
mov
test
mov
mov
inc
pop
mov
cmpb
arpl
jnp
mov
clc
lret
xchg
pop
movsl
mov
jb
lods
cmc
adcl
xchg
nop
aaa
in
arpl
push
mov
cmc
jne
mov
push
jmp
fstps
sbb
dec
pop
fldenvs
xor
mov
mov
and
adcl
aam
pop
xchg
xchg
xlat
pusha
scas
jecxz
or
adc
les
adc
and
mov
sub
push
jns
cs
xchg
cmpsb
push
or
subl
fidivrs
sub
lret
push
rcl
mov
nop
mov
icebp
shl
cld
in
loop
push
in
mov
insl
fisubl
ficomps
pop
decb
mov
mov
pop
lds
xor
cmp
cltd
outsb
mov
adc
sbb
xchg
call
pop
add
lods
cltd
pop
cmp
pushf
cs
in
out
push
pop
add
scas
repnz
daa
daa
int3
mov
adcb
xor
jno
pop
lds
mov
xor
jle
ret
add
sbb
inc
push
icebp
xchg
adc
loopne
insl
jnp
mov
mov
xor
mov
and
push
or
stc
stc
sbb
idiv
dec
aaa
mov
mov
test
mov
xchg
pop
cli
cmp
pushw
js
psubw
hlt
sub
xlat
lret
hlt
push
xor
pop
aam
xchg
test
insb
loop
out
pop
jns
gs
push
sub
idiv
sbb
cld
into
adc
aam
es
loope
lods
adc
fcomps
mov
dec
loope
ret
add
adc
sbb
out
sub
loop
sbb
out
add
test
push
insl
fs
jle
lret
shll
imul
mov
mov
push
pop
jge
repz
insl
sub
push
cs
adc
xchg
sub
jmp
aas
das
pop
pusha
jae
xor
out
stos
jae
shl
mov
pop
cmp
cld
pop
es
out
pop
sub
jmp
notb
or
scas
outsl
add
stc
push
and
gs
cmp
cmpsl
push
cmc
mov
fmulp
dec
inc
jne
addr16
lcall
or
pop
cmpsl
xchg
repnz
push
sbb
rorl
jmp
fldt
inc
adc
sbb
mov
inc
fists
imul
sbb
lock
ljmp
add
dec
inc
jp
sub
jo
pop
rcll
inc
out
xor
int3
int
adc
scas
mov
push
cmp
push
mov
scas
xchg
and
ljmp
int
jp
in
push
fstl
scas
roll
sub
test
mov
imul
or
sbb
gs
das
leave
add
mov
movsb
clc
xchg
jno
xor
pop
mov
bound
out
xchg
int3
jns
adc
inc
mov
test
icebp
cwtl
dec
pushf
pop
and
push
lds
jle
loope
fldenv
mov
stos
fildl
push
jo
int3
dec
jae
mov
jbe
iret
fiaddl
scas
in
rorl
mov
and
fcmovb
out
fisttpll
mov
jp
add
insl
mov
mov
pusha
inc
xor
inc
mov
js
sub
std
pop
xchg
push
dec
push
lods
rcl
or
clc
insl
stc
jp
inc
cmpl
pop
sbb
inc
and
stos
dec
jmp
insb
lahf
dec
cmp
lret
testl
push
jmp
out
lds
int
xchg
hlt
neg
mov
fdivrl
ljmp
mov
je
shlb
outsb
mov
stos
and
pop
rorb
out
push
or
adc
outsb
lahf
pop
or
xchg
or
das
xorl
mov
mov
adc
sub
add
fmull
mov
roll
or
dec
mov
and
push
mov
lods
imul
lods
lret
mov
test
push
std
jo
xchg
mov
mov
adc
popf
dec
pop
movsb
test
push
mov
std
sbb
mov
cmp
xchg
stos
jno
jle
js
negb
sbb
out
adc
lcall
rorb
or
roll
mov
std
add
adc
and
popa
xor
pusha
les
push
mov
xor
call
cli
push
icebp
add
cmp
push
pop
insl
mov
push
sub
cld
push
aam
jle
mov
jo
ret
mov
or
out
lock
add
xor
and
pop
inc
mov
lea
mov
rcll
mov
out
rcrl
mov
jmp
cmp
sub
aaa
push
movsl
cmpsb
movq
bound
push
shr
inc
int
pusha
and
push
mov
mov
adc
popa
popf
mov
xchg
cmp
and
nop
add
scas
in
fcomps
jl
pop
jecxz
xchg
xchg
test
or
adcl
cmpb
lods
adc
jns
mov
sbb
sbb
pop
outsb
lea
sub
or
das
ljmp
fcompl
sbb
insb
adc
shll
enter
lret
rcr
lahf
int
out
push
xchg
daa
out
int3
mov
mov
pop
mov
dec
gs
jae
fisttps
scas
or
jecxz
js
sarb
cmp
mov
je
mov
jecxz
fwait
stos
push
rorb
mov
mov
and
add
pop
xchg
rorl
imul
push
aaa
and
and
movl
adc
mov
fldl
jo
sbb
in
in
lock
xor
imul
insl
sti
dec
push
or
pop
fs
pusha
pop
loopne
adc
add
stc
push
mov
pop
inc
cmc
push
imul
imul
nop
dec
clc
mov
cli
mov
xor
add
lds
cmp
leave
and
fwait
mov
sub
xchg
call
in
mov
push
add
push
movsb
add
rolb
inc
loope
addl
in
push
out
xor
jo
jmp
sahf
dec
adc
pop
movsl
test
jmp
adc
enter
add
repz
fcmovbe
mov
mov
dec
nop
jle
adc
stc
jle
dec
fldl
adc
dec
and
outsw
dec
rolb
push
dec
gs
stos
cmpsl
jl
or
rcl
fwait
add
icebp
out
xchg
adc
notl
xchg
mov
mov
stc
jo
lds
lea
cmp
and
movsb
push
or
lret
sbbl
sub
adc
fldenv
fidivs
inc
cmp
negb
xlat
insb
jecxz
fs
movsb
xchg
push
push
sbb
jo
pop
pop
jne
and
pop
cmpl
movsl
and
enter
push
pop
xchg
add
inc
mov
sbb
inc
and
iret
mov
jp
movsb
gs
fcoml
add
daa
inc
lret
jb
das
rol
cld
mov
xchg
inc
mov
call
mov
sub
in
or
dec
bnd
enter
fisttpl
mov
int
xchg
ja
scas
outsb
fidivrs
adc
gs
sub
ljmp
adc
in
loop
in
cmpsl
or
cmc
rorl
daa
sub
mov
lret
pop
inc
and
test
lea
mov
lods
loope
lods
mov
sub
dec
loopne
inc
mov
stos
cmc
fs
adc
xchg
push
shlb
push
mov
or
roll
inc
into
xor
out
and
imul
adc
cld
sbb
out
dec
inc
inc
imul
scas
jns
push
xchg
push
std
daa
js
gs
xor
jo
push
fildll
sbb
adc
test
push
sbb
lods
jns
xchg
xchg
pop
jmp
adc
adc
cltd
mov
or
iret
movsb
mov
orl
int
sahf
mov
cmp
dec
out
adc
mov
arpl
fwait
icebp
inc
push
and
clc
out
push
pop
xor
xor
jo
aaa
fsub
insb
sbb
mov
pmaxub
call
das
mov
dec
repnz
inc
push
scas
les
jb
lret
jno
sub
jg
dec
insb
push
into
fisubs
push
jo
jo
xchg
aam
sbb
bswap
roll
jae
cmpb
and
inc
loopne
inc
lcall
push
fldz
ret
or
pop
sbb
sar
ja
fst
daa
push
pop
xlat
cmp
enter
jl
mov
add
xchg
icebp
dec
ja
arpl
imul
bound
aas
in
mov
pop
xchg
jno
adc
les
cmp
jecxz
xchg
jne
xor
gs
fsubs
push
jg
mov
out
xchg
xchg
mov
xor
xor
sbb
roll
or
mov
jl
pop
cwtl
js
push
add
jl
jno
lcall
cmpsb
jne
jbe
pop
pop
push
jbe
adc
das
mov
repz
pop
push
push
in
pop
mov
xchg
dec
test
loopne
test
mov
or
ja
out
push
jmp
jae
clc
push
fs
orb
xor
or
sti
cwtl
and
jne
lcall
add
add
punpcklwd
stos
out
jmp
ja
sbb
aam
pop
cmp
pop
sahf
cmp
jp
mov
sbb
repnz
sbb
out
loopne
lcall
and
sti
je
das
int3
xor
mov
sbb
shlb
mov
test
pop
dec
xchg
and
lahf
dec
in
and
jl
pop
or
or
pusha
std
dec
inc
shlb
cmp
imul
fnstsw
jmp
pop
pop
sub
inc
push
jl
out
push
xor
cld
ljmp
aad
sub
sbb
add
or
jbe
cmp
cmp
fsubp
pop
test
lea
xlat
in
sub
jecxz
gs
xor
push
sbb
or
sub
clc
cmp
popa
sbb
movsb
mov
sub
and
pop
push
or
jae
roll
ret
sub
ret
je
imul
data16
shlb
stc
cmp
mov
lret
xor
movsb
jmp
popf
push
pop
mov
mov
cli
and
sbb
mov
test
popa
push
add
inc
push
xchg
push
aam
daa
mov
xchg
pop
cmpsb
ja
sub
std
add
cmovns
addr16
sbb
pop
outsb
cmp
pushf
pop
sar
mov
and
bound
test
fwait
sub
out
cmp
dec
and
mov
notb
push
mov
cmc
mov
sub
mov
adc
add
push
sub
adc
outsb
mov
outsl
jnp
and
test
or
xor
imul
pop
xchg
test
pop
jns
ret
addr16
stos
add
jge
xor
adc
pop
sub
and
mov
fildll
lahf
jecxz
pop
jmp
add
xchg
scas
push
sub
imul
andl
cli
or
loope
mov
cwtl
scas
adc
sarb
jb
or
dec
jb
inc
fwait
xor
sub
dec
test
mov
imul
mov
addr16
not
mov
mov
sub
out
xchg
mov
enter
sarl
sbb
cmpsl
pop
sbb
mov
jbe
pop
xor
xorl
andb
add
cltd
adc
xor
std
std
repz
dec
inc
and
test
adc
and
popa
push
and
popf
jae
adc
insl
pop
movsb
je
xor
insl
cltd
adc
jmp
bound
xchg
jnp
leave
xor
cwtl
jns
test
jmp
xor
repnz
adc
arpl
rcrl
push
sub
push
pop
data16
and
cld
pop
shl
xchg
add
jl
inc
jp
mov
adc
fcomps
push
push
inc
testl
xor
jne
icebp
push
lea
mov
inc
add
push
mov
lods
pop
xchg
cmp
lods
std
xchg
pushf
orb
and
adc
jl
sub
push
dec
add
xchg
xchg
popa
cmp
pop
pop
mov
sahf
inc
test
movsl
jb
inc
in
sbbb
fs
inc
sbb
in
or
lods
or
sbb
scas
xchg
mulb
and
imul
sbb
movsl
in
and
mov
pop
add
jp
mov
mov
push
dec
add
pop
sti
rcrb
xchg
mov
mov
jge
sbb
mov
cli
cmc
pop
mov
adc
adc
pushf
rclb
push
mov
cld
pop
jecxz
xor
dec
or
adc
add
hlt
mov
inc
pop
js
loope
imul
rcr
sarb
in
jle
std
push
sub
int
push
mov
pop
xchg
xor
out
aas
and
out
push
jle
mov
xor
loopne
and
xlat
xchg
xchg
fidivrl
sbb
cmc
push
aad
js
repnz
icebp
std
fcmovb
dec
mov
jbe
arpl
in
mov
cs
cli
or
mov
arpl
shrl
or
push
out
das
fidivrs
pushf
lea
sbb
or
sub
arpl
xchg
ja
imul
pushf
aas
imul
cmp
mull
lret
sbb
loopne
fnstsw
cmp
pop
mov
and
loop
cmp
mov
xor
js
iret
jl
mov
pop
xor
inc
push
cmp
adc
jge
in
sub
xchg
cmp
rolb
icebp
xchg
jmp
mov
shlb
adc
jns
scas
aam
push
mov
push
ficomps
mov
inc
jno
push
fs
lock
adc
ds
cmp
sub
add
xor
mov
inc
xor
inc
lock
jecxz
xchg
dec
loope
cli
aam
push
mov
fwait
push
stos
gs
iret
inc
shrl
push
and
jo
aas
lods
xchg
lods
shl
or
or
gs
dec
test
fbstp
or
xorl
into
sbb
adc
int
dec
loop
in
shrl
sbb
mov
je
mov
scas
sbb
mov
iret
add
andb
and
test
inc
push
xchg
pop
xor
xchg
test
xor
js
out
sub
orb
out
scas
adc
jo
pop
cmp
xlat
add
jmp
mov
sahf
insb
or
int3
and
stos
sub
notl
dec
push
mov
stos
pop
sbb
xchg
mov
and
iret
dec
loop
push
int
pop
in
cmp
cwtl
push
cmp
pop
mov
dec
xor
loope
mov
and
lds
je
and
sub
fcoml
cwtl
bound
dec
or
xchg
sbb
call
sti
rorl
xor
pop
lret
pop
cmc
shrl
or
fisttpl
fcomi
xchg
pop
add
in
call
icebp
add
iret
fs
inc
pop
mov
mov
pop
and
sar
jg
mov
cmp
repz
or
cmpsl
mov
imul
sbb
pusha
aaa
insl
subl
jnp
popa
pop
push
fwait
daa
sub
imul
enter
mov
pusha
adc
popf
fistpll
inc
mov
push
rcr
xchg
ja
adcb
xor
addr16
jge
lret
add
adcb
adc
or
popf
and
sarb
mov
pop
mov
cld
lahf
cmp
loope
jp
dec
imul
cmpsb
fisubl
mov
ja
inc
mov
push
fsubs
cmp
xchg
aas
cld
add
fnstsw
lcall
push
fsub
in
repz
push
jecxz
dec
sbb
add
js
xchg
shrl
pop
fwait
or
xor
add
add
pop
inc
fcmovnb
push
lcall
mov
rcrl
and
fdivl
or
std
sbb
data16
jl
pop
dec
sbb
shlb
mov
imul
xchg
pop
lret
ss
inc
pushf
shlb
cmpl
ror
jg,pn
movsl
sbb
lods
mov
adc
in
insl
push
and
jo
or
mov
dec
aaa
jge
lret
popa
leave
jge
cwtl
jns
movsl
add
je
pop
cmpsl
pushf
dec
pop
shll
cmp
jmp
or
sbbb
loopne
fbld
into
pop
xchg
pop
lea
fildl
jge
arpl
inc
outsb
mov
xchg
je
jg
add
dec
sbb
mov
jb
aas
loopne
jg
ljmp
sbb
push
into
ret
sbb
xchg
mov
int3
add
inc
repz
pop
cmp
xchg
mov
in
std
js
js
mov
pop
out
hlt
sarb
and
mov
loope
cmpsb
mov
int3
arpl
ret
push
push
mov
stos
dec
push
or
mov
stos
hlt
xchg
psllw
push
subb
or
pop
mov
jmp
xchg
push
adc
xchg
inc
mov
xchg
test
xor
mov
sub
movsb
movsl
mov
push
pop
into
cld
mov
add
push
scas
movsb
sbb
adc
mov
fnstsw
outsl
fildl
repz
pop
test
cmp
jno
jmp
nop
or
faddp
dec
cmpsb
in
xlat
mov
or
pop
jbe
outsb
sti
addr16
jne
mov
ds
je
pop
sbbl
sbb
aad
push
out
jl
popf
in
xchg
jecxz
arpl
mov
mov
fldl2t
dec
rolb
jmp
push
cmpsl
dec
lea
add
pop
addr16
out
mov
xchg
es
bound
sbb
nop
dec
stos
and
mov
push
arpl
ret
enter
xor
push
btr
push
sub
pop
test
adc
lock
fdivs
cld
mov
pop
int
out
les
pusha
cmp
mov
inc
mov
outsl
cld
loop
jb
and
in
mov
es
add
imul
lds
popl
mov
xchg
push
cmpsl
pop
push
inc
ja
inc
xchg
insl
mov
adc
push
and
sbb
bound
inc
xchg
mov
lahf
shl
xor
cli
pusha
xor
out
xchg
outsl
in
ret
test
cld
pop
inc
cmc
imul
filds
adc
stos
sbb
push
les
data16
sub
xor
push
pop
mov
mov
jmp
pop
leave
stc
inc
pop
xor
mov
popf
lods
jb
inc
sub
cs
dec
sbb
pop
cmpsb
xchg
pop
push
xor
out
roll
movsb
pop
subl
and
lock
cmpsl
mov
and
jle
jne
lock
push
cmp
loope
test
shr
loopne
mov
repnz
popa
pushl
xchg
pop
adc
stos
mov
in
test
xor
xchg
and
scas
cld
insb
outsl
orl
addr16
loopne
pop
mov
and
lods
inc
mov
sti
and
popf
ds
pop
add
jmp
call
sbb
cld
sub
mov
scas
sub
clc
icebp
ss
or
mov
or
mov
scas
aam
test
xchg
dec
add
rcrb
xchg
mov
push
xlat
push
test
sbb
bound
and
inc
test
ljmp
orb
mov
xchg
adc
or
mov
jmp
sti
sbb
ret
jo
xor
and
into
inc
into
xor
xchg
test
lock
xchg
leave
xchg
mov
leave
add
into
add
roll
and
popf
mov
insl
ret
test
adc
push
jns
adc
xchg
xor
push
inc
pause
add
xchg
add
sub
lret
sbb
jb
cmp
imul
xchg
ss
cmp
scas
cmp
inc
stos
into
push
das
nop
stos
or
mov
nop
lock
inc
sub
xor
and
pop
add
xchg
aaa
adc
inc
or
sub
jecxz
cmovg
mov
or
sbb
pop
mov
or
cwtl
and
sti
mov
arpl
add
ret
scas
cmpsl
mov
adc
xchg
out
insb
fisttpll
ljmp
fs
sbb
jle
jb
lahf
mov
movsb
cli
ficomps
test
xor
imul
insl
cld
call
xor
fnstcw
stos
jg
out
push
arpl
xor
or
test
xlat
aas
ja,pn
lods
lret
cmp
and
sbb
mov
xor
mov
int
jbe
and
shrl
aam
jmp
jne
ret
fwait
mov
xor
inc
adc
pop
aam
mov
mov
testl
pop
and
xor
int
es
cmp
jns
dec
jl
popf
ss
pop
data16
movsb
adcl
cmpsb
pop
out
mov
int3
jbe
jecxz
xchg
dec
out
sbb
stos
mov
sti
das
out
mov
lods
and
or
xorb
xlat
gs
add
push
push
dec
dec
lds
add
mov
sbb
cmp
ss
push
cmc
fnsave
jbe
adc
xlat
sub
dec
sahf
scas
or
pop
fidivl
mov
push
or
xchg
mov
loopne
stos
ret
add
fidivrl
inc
sahf
in
ficoms
inc
dec
and
xor
add
adc
xchg
jl
inc
mov
jecxz
pushf
fiadds
call
mov
mov
jle
fisttpll
shl
fldenv
pop
add
stos
pop
mov
ret
jp
adc
rcrl
gs
repnz
mov
inc
outsb
repz
xor
mov
hlt
mov
cmp
enter
dec
push
bound
add
xlat
aad
test
jae
jbe
hlt
fldenv
mov
nop
mov
xchg
push
push
cmpsl
js
xor
jmp
jp
jnp
int
bound
jmp
xor
femms
push
xchg
mov
pusha
nop
mov
or
and
stc
dec
adc
sbb
inc
add
aam
or
jb
jbe
mov
lret
mov
andb
pop
xchg
pop
aam
add
insl
dec
cmp
sarb
outsl
and
adc
fwait
and
and
out
fcoml
mov
jno
cmp
scas
popa
test
jecxz
out
fists
jne
cltd
enter
add
je
popa
cs
fsubs
mov
inc
incl
add
jae,pt
mov
mov
dec
add
mov
dec
icebp
xor
lret
cmp
into
pushf
lods
and
push
aas
enter
std
testb
xchg
xor
orb
insl
and
into
adc
fsts
fimuls
inc
and
fcoml
push
addb
jne
daa
add
xchg
add
adc
add
mov
xor
loopne
push
repnz
xor
jg
sti
inc
cltd
int
xor
xchg
push
mov
dec
inc
cmp
xchg
daa
mov
out
push
xchg
loope
push
lret
lahf
mov
push
and
add
insl
xchg
and
enter
mov
shrl
dec
adc
dec
mov
jnp
jecxz
test
and
cli
pop
mov
fwait
push
popf
and
aam
mov
add
cld
jae
aaa
rol
jne
push
hlt
adc
jne
mov
movsl
sbb
arpl
adcb
leave
cmp
and
lahf
push
jle
sbb
add
sub
outsl
aas
popa
sub
or
mov
add
dec
test
stos
and
cmp
stc
or
roll
xor
sti
mov
xor
loopne
or
push
cmpsl
or
insb
mov
sub
jmp
scas
adc
jbe
push
test
stos
data16
dec
sbb
pop
data16
int3
xor
mov
and
cmp
inc
call
mov
jb
inc
insl
jle
test
jbe
ror
sbb
in
mov
push
out
jp
xlat
ljmp
shlb
jns
push
inc
cmp
adc
popf
or
shll
sbb
mov
cmp
imul
int
xor
jecxz
jnp
int3
movsb
aas
mov
pop
jmp
mov
aad
sti
jno
cmp
xchg
dec
lcall
and
std
scas
mov
cmp
test
enter
mov
xchg
fs
adc
sub
xorl
enter
stos
sar
push
or
inc
adc
inc
leave
push
lock
add
jecxz
dec
fdivl
out
xor
ror
push
int3
negb
mov
push
clts
mov
lret
adc
iret
in
dec
sbb
sub
cmpsl
and
stos
cld
ja
sub
xor
in
daa
sub
adc
mov
in
test
shrb
xchg
test
inc
subb
inc
sub
mov
movb
pop
xchg
mov
sahf
loope
add
loop
or
test
js
xchg
mov
xchg
fnstsw
inc
outsb
push
mov
pop
shrb
and
sarl
xor
pop
je
push
sbb
xor
sbb
clc
scas
lea
sbb
insl
add
loopne
inc
imul
adc
jo
aad
add
cmpsl
lar
push
rcl
sbb
test
mov
dec
xor
lahf
or
mov
add
mov
xor
push
lods
sub
cmp
add
xor
add
dec
sti
sbb
and
sbb
test
stos
push
fdivp
pop
lock
mov
loop
add
or
mov
fwait
popw
and
sti
sarb
push
inc
xchg
cmp
addr16
xchg
mov
loope
and
add
sub
cli
push
mov
jo
jno
stos
out
adc
or
mov
mov
in
das
mov
dec
jp
loopne
jb
sub
or
mov
mov
inc
dec
and
add
xor
dec
andl
test
or
mov
lds
dec
lret
mov
xlat
ds
push
stos
mov
inc
jnp
mov
mov
rolb
cltd
repz
jne
dec
aad
fs
xchg
enter
cmc
ds
iret
in
and
inc
and
xchg
pop
xorl
dec
bound
fcomp
pop
mov
fmul
pushf
iret
pop
insb
outsl
dec
leave
btcl
add
cmpsl
sub
cmpsb
or
jecxz
inc
or
mov
lds
mov
jp
jecxz
adc
daa
movsb
outsb
sbb
mov
call
stos
es
fldl
xor
sub
mov
js
fs
decb
das
ljmp
out
adc
jge
cmp
scas
mov
cmp
insb
or
pop
daa
pushf
and
pop
inc
jne
sub
add
cmp
cmpsl
mov
fst
ret
lret
stos
xchg
das
testb
add
pop
cld
sbb
sbb
mov
mov
fcmovne
push
das
repnz
mov
and
mov
sbb
test
push
fidivs
aam
xchg
sbb
pushf
cwtl
mov
es
repz
bnd
mov
adc
subl
lret
dec
ficompl
shlb
aas
fnstsw
dec
js
pop
popa
pop
sbb
lock
andl
sub
je
imul
mov
dec
push
and
es
gs
lret
addr16
pop
dec
add
mov
in
add
data16
xor
add
sbb
popl
push
sti
pop
jno
mov
mov
and
test
fmul
ret
push
dec
jns
jl
loopne
imul
or
mov
dec
insl
jae
adc
dec
fstps
push
xor
pop
xor
addb
les
mov
xlat
jg
push
xchg
mov
nop
mov
hlt
mov
xor
cltd
jge
lea
jl
pop
inc
add
mov
xor
in
fadds
dec
loop
cmpl
sbbb
rcrb
enter
add
adc
mov
js
mov
test
jmp
insb
push
addr16
std
sahf
mov
in
pop
push
rcr
mov
jecxz
insl
sub
cld
or
es
out
sbb
lods
lods
push
fnstsw
and
push
mov
add
divb
ljmp
cmpsl
and
fistps
xchg
data16
pushf
inc
test
inc
cmp
or
inc
xor
push
add
aad
ljmp
xchg
orl
out
fsubr
and
call
gs
mov
shll
fs
jl
ret
test
adc
insb
movsl
jbe
cmpsl
jno
lods
xchg
lods
mov
inc
bound
out
lock
push
adc
arpl
add
jmp
inc
in
push
jae
xor
xor
xchg
icebp
pushf
sbbb
push
xor
mov
or
movsb
sbb
dec
out
sbb
lea
testl
rcl
mov
dec
sub
cli
xorb
sub
sub
std
mov
mov
mov
insl
adc
outsl
lods
movsl
ljmp
sub
adc
adc
jo
xlat
push
mov
mov
push
mov
push
das
xchg
cmp
sbb
mov
cli
sub
hlt
fsubrs
push
mov
jp
jno
lret
xor
jnp,pn
mov
inc
push
into
mov
daa
sub
lret
mov
xchg
js
and
push
jge
loope
imul
dec
or
stos
sub
ret
jns
mov
xchg
mulb
jmp
test
stos
pop
lds
icebp
daa
ds
jno
xchg
lods
in
push
iret
mov
add
dec
icebp
add
lods
mov
xchg
ds
pop
jns
out
sbb
push
xchg
xchg
dec
test
xorb
jmp
ret
shrl
out
dec
addr16
lods
dec
ljmp
cs
imul
push
jg
dec
pop
xorl
dec
add
test
pop
insb
iret
jbe
repz
mov
aam
pop
lods
or
loopne
jo
push
lods
call
loop
push
shrl
mov
jecxz
sbb
cltd
aaa
not
xor
mov
sbb
ret
test
pop
into
jbe
mov
sbb
and
fs
loopne
and
ret
jge
pavgw
or
scas
fildl
out
lock
adc
lods
sbb
into
clc
aam
es
movsl
push
sbb
adc
cld
jmp
xchg
std
pop
xchg
dec
mov
fsubrs
push
push
push
xor
xor
inc
mov
mov
in
pop
fists
int3
pop
lods
mov
divl
mov
jmp
xchg
gs
fstpl
scas
xchg
lods
ficompl
xchg
fisubrl
mov
push
or
cmpsb
and
nop
xchg
dec
ds
jnp
inc
pop
push
call
out
sbb
pop
cmp
outsl
mov
jae
shr
or
test
inc
xor
inc
ud2
mov
repz
xor
repz
das
or
movsb
add
add
inc
aas
sub
insl
cmp
mov
pop
dec
pop
dec
lds
loop
fcmovnb
or
inc
ret
loope
and
mov
mov
pushf
repz
dec
mov
in
jg
add
rolb
es
xchg
cmpsb
adc
push
repnz
mov
in
mov
xchg
mov
int3
adc
pop
jbe
pop
in
cmp
pop
in
jo
jge
cmpb
lahf
cld
call
fnstcw
xor
mov
mov
frstor
loope
daa
in
aam
rol
aam
mov
inc
fildl
mov
std
dec
enter
ss
clc
test
push
orb
pop
cmp
cmpsl
xor
jae
cmp
xlat
sbbl
jle
add
xchg
hlt
loope
add
in
add
fisttps
or
sbb
cs
scas
mov
sbb
xor
push
out
out
fcoml
add
adc
dec
in
pushf
test
sbb
push
adc
mov
pop
test
bound
lods
and
pop
dec
stc
mov
bound
push
and
pop
inc
jno
jmp
and
fsubl
sti
hlt
ficoml
pop
jmp
pop
arpl
or
js
adc
and
xchg
pushf
rcrl
pop
adc
imul
vmovhlps
orb
mov
jb
outsb
xchg
int3
mov
sub
mov
fisubrs
xchg
gs
push
xchg
mov
jbe
mov
rep
in
mov
push
dec
mov
test
je
cmp
hlt
loop
shl
cmp
mov
fbld
sbb
mov
or
sbb
cmp
es
pushf
lcall
adc
mov
xor
mov
mov
das
push
sbb
into
mov
test
out
daa
imul
cmp
fisttpll
mov
dec
xchg
jl
pushf
rcll
imul
adc
xor
pop
int
jge
out
push
enter
jge
xor
fimuls
add
test
fisttpl
sub
pushf
fimull
addl
aad
mov
jno
pop
arpl
add
fcomi
arpl
repnz
nop
imul
sahf
xor
scas
or
call
mov
mov
iret
mov
test
sbb
jle
mov
das
rcll
clc
dec
jmp
mov
pop
push
pop
push
cs
pop
jno
cmpsb
sub
jne
testb
cmp
adc
or
fcoms
das
sarl
daa
enter
cmp
fcompl
fsubs
cmp
popa
or
pushf
stc
daa
aam
ret
addr16
fs
nop
add
lcall
xor
push
aaa
icebp
andl
mov
ljmp
mov
and
mov
push
std
cmp
mov
adc
cs
in
dec
cmp
cmp
sub
cmp
xchg
repz
or
fsubrl
repnz
into
pop
and
shrl
push
xor
adc
dec
jp
cwtl
jg
inc
repz
cmp
pop
es
push
das
mov
dec
insb
cwtl
mov
or
lret
les
pop
mov
fsts
loop
mov
cld
negb
add
dec
pusha
ror
jno
sbb
cmp
movsb
cmp
mov
outsb
sub
inc
fcomps
and
jb
popf
add
lods
repz
nop
test
pusha
out
jne
adc
and
inc
in
aaa
fdivs
ret
xchg
mov
scas
pop
xchg
ljmp
adc
push
inc
mov
pop
dec
mov
bound
ds
cmp
inc
neg
insb
scas
sub
rorl
xlat
push
ret
sbb
pop
pop
fidivl
inc
jo
jne
adc
sahf
add
push
repz
xor
mov
sbb
in
data16
fisttpl
xchg
dec
rcrb
insb
mov
jns
scas
or
jge
scas
lds
clc
pop
rcrl
movsl
push
mov
daa
xchg
into
ljmp
repz
dec
xchg
daa
hlt
xchg
or
out
sub
outsb
adc
movsb
mov
mov
jnp
subb
cs
or
inc
ljmp
loop
xchg
mov
mov
clc
add
les
sub
loope
mov
lret
xchg
sub
jl
dec
inc
jo
aaa
or
std
adc
inc
mov
movsl
jno
sub
sbb
cmp
adc
add
ret
js
xchg
mov
xchg
leave
clc
js
aaa
sarb
jo
arpl
icebp
cli
xchg
fnstenv
adc
mov
pop
sti
mov
je
shlb
mov
outsb
pop
in
sbb
or
sarl
xchg
push
sbb
pop
xor
jae
and
xor
sbbb
xchg
les
cmpsl
jecxz
push
inc
jl
cld
xor
insl
in
in
fistpll
add
add
nop
pop
sbb
movsb
jnp
jo
inc
scas
enter
ljmp
ret
imul
inc
rolb
or
out
stc
out
int
dec
jne
mov
mov
pop
sub
xchg
fsts
xor
xlat
or
push
aas
movsb
mov
ret
xchg
cmp
push
pop
add
push
and
add
scas
jnp
push
dec
rol
out
mov
arpl
cmp
fbstp
stos
and
sti
xchg
rorb
stc
out
pop
lds
dec
test
jg
push
out
xchg
gs
and
pop
popa
xor
rol
loopne
xchg
fimull
dec
pusha
xor
pop
lock
xchg
mov
cmp
je
sbb
pop
sbb
lods
aas
icebp
ja
dec
push
dec
daa
pop
pop
xchg
or
jo
dec
push
inc
cli
insb
bound
in
pop
push
cmc
popf
mov
and
lret
dec
mov
or
leave
fs
push
sub
pop
idivb
addps
sbb
mov
inc
fdivl
jnp
mov
cmp
ret
push
std
push
sub
fiadds
insb
jmp
clc
mov
mov
movsl
jmp
and
lods
mov
test
out
mov
add
push
outsb
jecxz
call
jg
cmp
mov
xor
flds
cltd
inc
jne
xchg
sub
ds
mov
pusha
xor
xchg
push
jnp
adc
push
insl
out
xchg
xchg
cmp
adc
jecxz
loop
xchg
outsl
xor
arpl
cs
lds
dec
dec
jb
pushf
fidivl
orl
clc
mov
inc
clc
int
push
stc
cmc
mov
addr16
cmp
lods
push
lret
inc
cmc
xor
loopne
movsl
clc
push
mov
fsubrs
or
xor
push
subb
sti
ret
push
pop
outsl
sbb
cs
mov
jl
cmp
mov
mov
ss
adc
or
cld
add
fmuls
push
xchg
pop
ds
les
xchg
or
and
dec
sub
test
in
daa
jle
pushf
les
fisubl
aad
outsl
jns
xchg
adc
jecxz
xchg
loop
enter
subl
pop
into
mov
in
loope
or
sub
jge
push
icebp
cmp
imul
jmp
sub
ss
dec
add
mov
dec
xorb
das
jne
test
js
dec
fisttpll
insb
lret
add
addr16
fbstp
stc
inc
mov
loope
xchg
imul
mov
jp
call
imul
int3
mov
jge
fsubs
loopne
iret
push
ja
pop
xchg
lds
push
aas
xchg
sbb
sbb
in
in
lods
push
xor
sarl
adc
cli
push
sbb
out
ss
add
mov
cld
pop
mov
cli
call
pop
xchg
jge
sbb
mov
cli
cltd
jmp
ret
lcall
dec
inc
popa
lds
pop
adc
fisubrs
dec
jae
dec
cmpsb
addr16
idivb
cmp
sarl
cs
cmpsb
xor
orl
cltd
push
mov
shlb
ds
decb
adc
jbe
cmp
sbb
ds
inc
xchg
call
xor
mov
sti
push
dec
ret
push
mov
repnz
push
fsubl
mov
out
add
outsl
mov
lahf
push
sar
lcall
dec
loop
arpl
jbe
or
dec
aas
mov
fwait
loopne
jg
insl
ficoms
add
js
js
sbb
test
add
sub
push
lcall
fisubs
popa
jnp
fidivrs
sub
jle
fcoms
stos
push
xor
mov
mov
pop
scas
push
scas
test
es
cmp
mov
push
jg
sbb
test
fisubs
push
pop
jno
into
mov
adc
or
xchg
ss
xchg
or
aas
shlb
cmpb
adc
mov
push
aam
pop
cmp
leave
enter
andb
cld
aam
add
pusha
dec
mov
push
loope
adc
jb
repz
mov
pop
aad
mov
ret
push
mov
test
inc
add
aas
mov
xchg
outsl
push
cs
pop
cmpsl
fstpl
jo
xor
int3
in
movsb
push
push
inc
push
sbb
inc
mov
in
jp
aas
sbb
sahf
or
dec
mov
jo
std
repnz
test
xor
xchg
push
test
jns
xchg
fcomip
push
lret
into
sbb
pop
lods
pop
jo
rorb
outsb
sub
pop
fmul
jl
add
cs
js
ljmp
cmp
sbb
jle
xchg
xchg
dec
push
xor
sub
mov
jge
leave
fwait
push
leave
push
mov
jmp
das
mov
bound
in
mov
mov
inc
mov
fcmovnbe
test
sub
fucomi
scas
or
lcall
mov
dec
ja
pushf
fcomip
push
dec
dec
es
push
stos
adc
cmp
in
repz
and
add
cmp
jae
ljmp
jg
clc
stos
sub
or
ljmp
data16
mov
jp
mov
jge
pop
inc
mov
and
lcall
jp
mov
les
loope
in
pop
scas
int3
adc
sbb
fcmove
mov
sub
inc
add
xchg
mov
rorb
lods
mov
je
sbb
inc
sbb
in
sbb
jno
ficoml
sbb
dec
xor
xchg
scas
test
pop
push
insb
neg
or
xchg
mov
xchg
jp
jmp
test
mov
mov
std
cltd
add
popa
dec
jecxz
test
pop
dec
xor
xchg
dec
iret
xchg
push
call
adc
rorb
jne
movsb
xlat
icebp
or
mov
subl
stos
jae
call
push
daa
lea
dec
mov
loopne
jg
add
or
repz
das
mov
stos
lcall
mov
jno
stos
jge
stos
rcl
sar
orl
mov
insb
shl
icebp
xchg
fwait
or
push
gs
cmp
mov
inc
xlat
ja
lret
lahf
fistpll
andl
inc
outsl
leave
mov
loopne
sbb
xchg
mov
or
mov
push
enter
and
mov
dec
mov
jecxz
and
js
in
insl
movsb
test
fcompl
mov
in
xchg
push
insl
jecxz
pop
adc
lcall
aam
sti
cli
jmp
mov
push
pop
outsb
cltd
sbb
aas
xchg
push
lcall
mov
cmpsb
paddd
mov
adc
pop
out
fiaddl
push
decl
lds
pop
xchg
jbe
xchg
sahf
jge
shr
xchg
pop
jecxz
mov
jl
push
or
mov
fisttpl
jmp
sub
lcall
sar
les
xor
sbb
xor
jae
cmpl
mov
test
pushf
sub
jmp
stc
push
call
test
cwtl
xor
icebp
push
and
stos
or
xor
lret
mov
or
dec
jmp
pop
out
scas
fstpt
and
andb
nop
ret
inc
or
daa
mov
jg
dec
push
pusha
inc
mov
pushf
mov
lcall
jmp
stos
loope
or
aaa
ja
notl
leave
xor
and
cmp
mov
movsb
cld
xor
add
mov
fs
repnz
inc
aas
mov
nop
in
push
push
mov
xor
jg
inc
push
xor
shlb
shll
notl
jne
inc
mov
in
cmpsl
fcomp
aad
lods
mov
pop
inc
adc
mov
leave
or
jae
orl
imul
xchg
rolb
pop
or
and
mov
jae
add
sbb
daa
loopne
repz
xchg
fprem
inc
mov
xabort
aas
mov
dec
sahf
xor
sahf
mov
sub
pusha
je
sub
push
dec
cwtl
pop
xor
xor
or
push
iret
mov
push
insb
je
std
je
mov
lret
inc
shll
cmpsl
loopne
cltd
push
sbb
addb
add
lods
mov
int3
out
test
ljmp
jo
enter
andb
sahf
xchg
mov
mov
add
je
adc
push
sub
pop
mov
stos
stos
cmp
popf
xchg
push
pop
int3
sub
push
inc
out
jl
aad
imul
clc
in
sarb
ret
loopne
sbbb
mov
int
xor
mov
cld
pop
pop
icebp
inc
iret
movsl
push
mov
push
mov
test
jmp
cli
cmp
bound
inc
repz
in
rcrl
xorb
cli
enter
std
test
adc
dec
xchg
out
inc
dec
pop
das
pop
cmpsb
inc
adc
add
jle
or
loop
sbb
jmp
xor
repz
pop
pop
mov
push
loopne
sbb
cmpsl
js
mov
push
icebp
aas
push
mov
pop
jecxz
jp
cmp
in
fs
mov
je
jnp
add
fistpll
or
outsb
dec
lea
sbb
mov
inc
in
mov
into
pusha
aaa
dec
jmp
jb
sbb
test
mov
mov
mov
aaa
sub
subb
clc
mov
sub
daa
outsl
je,pt
fbld
iret
std
xchg
ja
popf
loope
outsl
js
xor
cmp
jge
push
jecxz
dec
lods
dec
sub
lcall
movups
fwait
ljmp
shrl
pop
push
add
popf
int
fs
push
setge
lcall
cmc
push
inc
mov
fisttpll
mov
lock
sbb
add
mov
ss
pop
dec
jb
stos
inc
mov
test
mov
mov
dec
gs
mov
lods
mov
sub
scas
sbb
cmp
cs
pop
jbe
xor
into
popf
outsl
cli
ret
add
mov
fcmovb
mov
repnz
sahf
dec
dec
push
mov
pop
aam
jl
aad
add
inc
add
and
mov
pop
imul
pop
in
stos
das
je
sub
arpl
hlt
imul
rcl
lret
pop
divb
xor
mov
push
xor
jmp
pop
insl
and
jae
gs
mov
mov
outsb
rcll
cmp
xchg
sbb
jae
scas
ret
addl
push
inc
pop
jle
xor
xor
pop
mov
lods
cmpsb
les
lahf
gs
jns
pop
pop
out
cwtl
mov
sbb
jo
lcall
lods
fst
mov
ja
lods
jge
std
imul
adc
pusha
dec
pop
insb
jo
cmc
push
lret
push
xchg
shll
xchg
fcomip
xor
dec
inc
push
je
es
lret
sbb
cmc
lds
mov
inc
inc
inc
xor
adc
sahf
sub
jne
mov
inc
inc
cwtl
stc
out
cwtl
andb
push
not
mov
imul
shl
hlt
cmp
adc
pop
dec
xchg
mov
and
mov
push
mov
or
pop
orl
xchg
int3
xchg
icebp
cmp
mov
mov
cli
jle
add
mov
inc
cmpsl
movsl
shlb
arpl
add
imul
pop
jbe
sub
daa
fistpl
jmp
imul
inc
rorl
dec
jp
into
rclb
repnz
cs
or
jae
mov
jbe
push
push
mov
inc
cmp
imul
or
filds
repz
icebp
xchg
mov
es
ja
loop
lahf
mov
mov
sub
das
stos
out
push
pop
push
cwtl
jle
push
xorb
push
fucomi
jmp
movsb
sbb
mov
repnz
das
fcmovnu
in
inc
dec
sbb
in
adc
stos
pop
inc
ret
mov
je
dec
cmp
sahf
icebp
ror
cmpsl
mov
nop
dec
and
xor
add
mov
pop
jae
and
imul
jbe
mov
outsb
dec
cltd
pop
lea
loop
cmp
mov
mov
fisubl
sbb
mov
in
outsl
jbe
fists
test
mov
fistpl
ja
adc
jno
lods
push
scas
pop
nop
cmp
sbb
outsb
jns
lret
or
and
mov
mov
imul
mov
and
sbb
arpl
jmp
push
add
inc
xchg
mov
dec
xor
push
pop
enter
xchg
mov
shll
jbe
in
fsts
jb
adcl
outsl
cmpsl
sub
icebp
pop
lds
jmp
xor
mov
dec
std
imul
addr16
mov
sar
aad
icebp
jecxz
int
mov
cmpb
imul
in
dec
jnp
sbb
lret
or
mov
rcl
shlb
mov
dec
in
dec
movl
add
fs
stos
push
mov
jge
nop
movsl
lea
sub
cs
sti
dec
les
pusha
add
imul
aas
xchg
inc
pop
cmp
xchg
nop
inc
mov
and
sub
insb
std
out
xchg
hlt
or
dec
test
lcall
push
sti
push
or
sarl
test
fnstenv
cmp
mov
gs
push
in
mov
and
sbb
dec
cmp
cmp
dec
inc
fadd
imul
popa
adcb
and
inc
sub
inc
jae
lret
mov
iret
dec
jbe
mov
sub
fs
out
mov
divb
sbb
push
pop
jmp
outsb
push
push
mov
sub
imul
js
nop
das
test
test
mov
jge
mov
xchg
cld
enter
lcall
add
imul
loope
mov
dec
xor
ret
mov
jns
rep
in
cmp
xor
repz
ret
shrl
sub
push
lods
jnp
xchg
lahf
mov
sbb
test
and
jno
adc
cmp
sub
push
sbb
pop
add
push
mov
and
std
cmpsb
mov
mov
xchg
sbb
jb
inc
inc
mov
std
push
pop
push
mov
mov
xor
mov
pop
out
clc
out
lahf
dec
insb
xlat
mov
cld
rcr
rcrb
push
xchg
xchg
jge
mov
fs
sub
movsl
leave
test
xor
dec
xor
add
dec
out
mov
stc
sahf
or
pop
xchg
decb
js
lods
xorb
cmp
xor
jae
shll
movsb
lahf
jb
mov
in
lds
push
in
xlat
cwtl
xor
jp
hlt
add
xchg
sbb
pop
lcall
push
add
or
test
loope
stos
mov
sbbl
fcmovnu
dec
sub
mov
mov
xchg
mov
adc
outsl
mov
fstpt
sbb
add
movsl
shll
mov
mov
lcall
inc
mov
sub
mov
fwait
jns
jle
dec
scas
or
bound
mov
mov
lret
xorb
push
fistpll
adc
push
push
mov
outsb
mov
stos
ss
cmp
scas
dec
sbb
in
adc
sbb
adc
stc
adc
es
push
cwtl
and
stc
imull
xchg
pop
cld
data16
pop
roll
inc
ds
xor
push
enter
in
idivl
int3
lea
xchg
cmp
aam
jbe
push
xchg
fyl2x
fadd
add
xchg
push
dec
je
sbb
adc
mov
fs
lcall
and
cmpsb
cmp
mov
es
cmp
sub
hlt
sub
xchg
decl
test
mov
sub
adc
addb
cmpsl
scas
xchg
and
push
shlb
add
xor
ja
push
mov
and
hlt
push
mov
xor
imul
add
hlt
add
inc
jmp
in
jmp
xchg
xchg
insl
jae
inc
mov
stos
jp
push
mov
or
dec
inc
or
mov
and
enter
mov
jmp
push
mov
mov
mov
fldl
stos
clc
gs
outsl
int
mov
fs
ja
cmp
sbb
adc
insl
cmp
mull
xchg
in
aad
jmp
dec
stos
sbb
mov
or
lahf
xor
pop
fsub
scas
xchg
mov
loopne
movsb
arpl
test
add
lahf
sbb
rep
repz
fsts
cwtl
mov
push
mov
outsb
xchg
jns
cmp
jbe
cs
xor
repnz
add
aam
out
mov
push
stos
loop
mov
jecxz
lds
xchg
xchg
mov
bound
in
rcrb
cmp
enter
pop
outsl
sub
sbb
adc
jecxz
sub
adc
dec
out
testl
scas
pop
inc
inc
jg
sbb
and
or
cmp
mov
dec
mov
aam
enter
imul
xor
cld
add
std
rcl
push
lahf
dec
sar
push
adc
jmp
clc
mov
and
pop
ljmp
mov
icebp
fs
jno
push
pop
fdivrl
enter
mov
xor
ss
std
or
push
pop
or
jmp
dec
add
nop
stos
divb
mov
test
xchg
sti
push
test
dec
adc
adc
push
fidivrl
cld
mov
jmp
mov
xchg
insb
es
sbb
push
fwait
push
xchg
mov
xor
jl
bound
mov
and
mov
loope
scas
or
sub
pop
fsts
nop
pop
aas
insl
pop
cld
xchg
mov
jle
lret
dec
pusha
mov
and
xor
inc
dec
into
negl
lcall
pushf
int
xor
cld
jo
push
mov
scas
dec
and
sbb
in
jnp
scas
push
pop
inc
mov
mov
mov
sub
jle
scas
sbb
mov
pop
add
dec
jo
out
xchg
lods
add
maxps
popa
or
stos
or
loope
xor
cld
adc
loope
popf
xchg
loop
pop
and
out
test
mov
pop
inc
mov
sub
mov
sahf
push
imul
pusha
shll
lret
ljmp
popl
out
les
nop
jo
adc
jl
pop
xlat
fcmovbe
jnp
mov
mov
and
inc
out
fwait
jp
nop
xor
aaa
xor
xor
daa
mov
sbb
fwait
div
orl
mov
push
inc
js
sub
aaa
xchg
pop
or
lods
push
call
cmp
cmpb
jle
push
inc
xor
arpl
jecxz
call
xor
mov
push
cmp
fisttpl
imul
ficomps
add
test
out
jno
enter
imul
lret
inc
sub
adc
adc
loop
xchg
addr16
adc
push
adc
icebp
jmp
jae
jl
mov
jp
adcl
inc
push
int3
push
pop
xor
in
mov
mov
repz
pop
scas
ss
icebp
aaa
jnp
daa
inc
pop
movsb
fildl
leave
scas
call
lds
out
and
or
mov
pop
jle
xchg
sub
fstps
jnp
sub
pop
out
test
mov
dec
cmp
xchg
adc
mov
shrl
xchg
mov
xor
add
dec
dec
mov
dec
inc
jns
push
inc
push
mul
sub
pop
xor
pop
fstps
mov
imull
and
adc
mov
bound
scas
rcl
std
push
imul
je
shlb
mov
mov
jmp
mov
cmc
mov
push
inc
inc
idiv
mov
cwtl
sbb
fcmovnu
insb
cmc
push
out
pop
outsb
pop
jg
lods
bound
push
pop
and
fnstsw
fsubs
and
mov
sub
pop
pop
or
xchg
inc
sub
dec
and
xor
sti
icebp
jg
jno
loopne
xchg
arpl
push
cmp
jle
rcl
dec
fwait
push
and
dec
daa
in
in
sti
sub
jo
or
mov
jb
adc
test
sub
inc
push
or
push
jb
cmc
arpl
pop
inc
lock
setp
add
push
adc
adc
sbb
test
mov
mov
sti
add
and
mov
daa
imul
sbb
fs
loop
or
insl
into
in
push
arpl
dec
fisubrl
pop
push
mov
outsb
cld
dec
popa
push
push
hlt
mov
out
loope
xchg
imul
es
aaa
cwtl
in
mov
lods
adc
arpl
clc
hlt
outsb
pushf
add
ret
jns
icebp
inc
lret
ret
push
pushf
pop
dec
lret
std
mov
push
in
sbb
cmpsb
out
pop
push
imul
mov
dec
gs
push
cwtl
jle
mov
pop
xchg
imul
aad
ss
dec
xor
fidivrs
addl
jb
push
mov
mov
pop
jb
push
cwtl
mov
mov
sub
and
mov
aaa
adc
xor
cwtl
fisttps
mov
fstp
test
aaa
jns
test
inc
imul
push
inc
nop
jne
sub
add
inc
shrb
inc
cmp
mov
je
jae
push
jl
movsb
sub
sbb
add
popf
mov
fwait
add
jb
getsec
xlat
mull
in
lods
mov
int3
dec
jmp
lahf
daa
xchg
in
and
adc
jmp
inc
mov
mov
ret
jg
pop
push
push
ja
or
mov
dec
cmpsb
scas
outsb
cmp
test
xorb
imul
enter
js
lahf
add
jl
add
jp
je
inc
mov
out
add
adc
fldenv
lahf
dec
es
adc
lea
xchg
mov
sbb
imul
loopne
pop
pop
test
sbb
mov
pop
pop
add
pop
sub
outsl
push
jb
pop
inc
jae
push
sarl
xlat
sub
inc
mov
mov
mov
loopne
pusha
pop
fildl
scas
cwtl
out
jle
mov
and
sub
test
pop
cmp
cs
ljmp
ljmp
jne
adc
add
stc
mov
in
and
aas
cmp
xchg
cmp
clc
movsl
stos
hlt
dec
jnp
fmuls
pop
xchg
sbb
mov
std
arpl
int3
mov
dec
xchg
mov
sbb
jg
je
inc
inc
aaa
or
subb
loop
mul
add
inc
testl
push
inc
cwtl
inc
out
fiaddl
pop
out
cmpsb
push
mov
ss
mov
pop
sbb
mov
xchg
fldenv
stc
sbb
aaa
pop
outsl
js
lock
jb
popa
in
ss
dec
lods
push
sti
mov
aaa
hlt
out
fisubl
mov
pushf
jns
jge
add
jmp
inc
mov
clc
and
outsb
xor
or
xchg
and
stc
mov
mov
sbb
sti
insb
jbe
in
or
jle
call
or
inc
pop
repz
mov
sbb
jo
fsubl
insl
adc
test
into
xor
out
jle
sub
push
loopne
inc
aas
test
push
scas
lret
js
pushf
test
ret
sub
add
ficompl
pop
mov
stc
pop
jne
mov
mov
mov
cmc
xor
sbb
push
std
shll
mov
lahf
ljmp
fists
xor
xchg
fldenv
loop
mov
outsb
ficoml
sbb
in
mov
pop
in
sarl
or
push
stos
mov
jp
lods
psubw
xchg
inc
mov
xchg
loope
int
rcl
inc
push
sub
inc
inc
in
sahf
sti
adc
xchg
pop
fidivs
sbb
imul
lcall
xchg
fcoms
xchg
aas
out
mov
push
cmp
lods
ret
mov
mov
dec
or
mov
stos
mov
popa
mov
xchg
xor
in
push
movsl
je
imul
les
repnz
sbb
push
daa
sbb
sti
sub
mov
fs
cmp
sbb
into
or
ret
rorl
dec
sbb
pop
out
fimuls
inc
lahf
mov
jne
xor
adc
sub
in
pop
dec
pop
jae
insb
sbb
les
pop
jg
mov
call
fsts
iret
sarb
lret
bound
lods
ficoml
jnp
js
lret
faddl
in
sbb
js
pop
in
scas
pop
push
cmp
mov
mov
pop
lret
cmp
lock
inc
repz
adc
loopne
push
into
sbb
pop
inc
sbb
inc
xor
or
sbb
mov
cmpl
cld
lds
mov
test
lods
adc
fwait
loope
jp
test
dec
and
gs
push
insl
outsb
mov
mov
adc
icebp
int3
lds
or
xchg
mov
mov
std
mov
jns
inc
mov
in
jbe
jno
mov
jg
dec
lods
dec
dec
in
int3
fdivrp
into
mov
ds
mov
or
std
mov
loope
mov
mov
mov
ret
js
inc
frstor
arpl
pop
cmp
pop
jno
sub
dec
cli
mov
xor
add
xlat
lahf
cmpsb
adc
stc
fdivs
loopne
xor
or
sbb
fucomip
hlt
test
pop
imull
stos
xor
pop
fsubrp
addb
sar
mov
outsl
popa
addl
cmp
adc
insl
jle
fidivrl
xchg
and
std
cmp
xchg
hlt
adc
outsl
imul
mull
xchg
bound
xor
imull
fisttps
mov
ss
mov
mov
dec
mov
call
cwtl
push
repz
repz
fbstp
or
lock
dec
cmp
mov
aad
cmovnp
pushf
sub
mov
jle
push
imul
pop
adc
sahf
enter
pop
sbb
repnz
insl
inc
inc
sti
xchg
adc
jle
outsl
es
call
pusha
ret
mov
pop
inc
popf
dec
mov
dec
xchg
xor
adc
push
mov
jge
mov
scas
add
sbb
mov
ror
push
cld
arpl
rorb
push
in
out
push
loope
ficompl
inc
inc
push
out
mov
sub
mov
cmpsb
mov
add
mov
sbb
adc
jp
xchg
sbb
adc
push
xor
push
sbb
movsl
jb
mov
push
mov
or
push
int
pushf
push
cwtl
hlt
les
adc
dec
cmpsb
out
cmc
lods
aad
ss
jge
adc
stc
inc
addr16
clc
shlb
pop
aaa
pop
xor
lahf
add
sbb
into
stc
mov
fistpll
fists
enter
mov
imul
xchg
and
sahf
sbb
movl
push
xor
sub
test
or
jo
add
andb
cli
in
aad
jg
push
xchg
pop
daa
loop
les
xor
xor
xor
cs
int
inc
or
adc
jge
inc
cmp
bound
test
inc
lea
jb
xchg
xchg
mov
outsl
mov
push
out
loop
fs
mov
test
outsl
mov
dec
jbe
stos
mov
xor
out
mov
int3
lret
ds
outsb
arpl
scas
mov
daa
jnp
or
xchg
mov
stc
pop
lds
int
test
pop
jmp
pop
pop
cmp
aas
mov
mov
icebp
or
je
xchg
enter
sbb
loope
mov
xor
insl
aam
jp
cmp
xchg
icebp
push
inc
into
push
mov
push
mov
or
jo
xor
pop
fistl
movl
mulb
xchg
test
cwtl
movsb
scas
into
loope
xchg
push
and
jp
lock
ljmp
mov
test
mov
bound
lret
loopne
cmpsl
int
cwtl
add
jp
ljmp
daa
movsb
test
dec
inc
stos
add
dec
ret
inc
icebp
inc
outsl
push
xor
jns
and
xchg
ret
cs
addr16
dec
icebp
sub
outsl
pop
xchg
out
dec
pop
in
outsb
xchg
aas
ficomps
pusha
inc
les
mov
lods
std
mov
xor
ficompl
pop
out
repz
mov
pop
out
dec
dec
lock
stc
cmpsl
adc
mov
pop
adc
pop
call
ja
jecxz
js
iret
mov
mov
push
js
cmp
sbbl
aaa
xchg
and
loop
cli
ja
test
sub
arpl
push
mov
and
fwait
push
pop
or
push
jbe
out
jmp
mov
fadd
fnsave
shll
xor
int3
dec
or
push
sti
and
shr
or
xlat
fsubs
or
out
xchg
lret
push
das
xchg
repnz
mov
aaa
push
pop
outsl
cmp
es
test
cli
arpl
jge
cmp
call
inc
sub
dec
imul
int3
repnz
push
push
adc
mov
mov
aad
and
pop
jne
adc
cli
popf
add
in
inc
fsts
popa
push
jmp
fdivrs
rorl
fldl
push
pop
dec
arpl
fiaddl
sub
fdivl
mov
test
xchg
call
nop
add
cmpsl
and
ror
pushf
andl
int3
mov
sbb
cmc
xchg
les
in
mov
mov
dec
pushf
fwait
rolb
pop
jg
xchg
push
push
adc
cld
lret
jecxz
xchg
fcomps
dec
push
xchg
pop
cwtl
lock
pop
aaa
inc
movsl
daa
lods
mov
xchg
cmp
cmp
popa
jmp
aaa
sbb
repz
testl
lods
inc
mov
cli
pop
out
mov
nop
ret
loop
mov
inc
pop
or
mov
jecxz
cmpsb
pop
stos
push
cltd
call
and
movsl
sub
shlb
mov
and
or
das
loope
or
out
cmpsl
push
add
mov
sbb
xor
aaa
pop
mov
ja
int3
loop
rclb
negb
dec
sub
icebp
sub
xchg
pop
inc
idivl
xor
out
or
lahf
test
cltd
insb
outsb
add
sbb
in
jbe
mov
sbb
push
and
in
mov
sub
cmp
mov
subb
sub
mov
shlb
inc
mov
stos
inc
xchg
mov
subl
jge
cltd
stc
add
inc
xor
movsb
sub
pop
sbb
dec
jbe
xchg
sbb
popf
lret
sbb
lret
fst
mov
insl
mov
pushl
je
jg
cmp
push
rolb
int3
pop
pop
pop
loopne
push
jno
and
sbb
xor
push
test
add
ret
out
movsb
scas
pavgw
xchg
push
xchg
ds
add
jno
jbe
imul
jp
push
pop
lock
lahf
add
push
lds
fstps
add
add
jmp
mulb
jmp
or
sbb
push
into
ror
imul
push
jae
xchg
sti
negl
sbb
jecxz
add
pop
mov
data16
jb
repnz
and
adc
jge
xchg
roll
push
sub
insb
mov
call
push
jbe
xlat
iret
xchg
das
lea
mov
cs
push
add
fwait
cmp
rcrl
xor
lds
fimull
testl
sbb
inc
popa
imul
mov
jae
aaa
mov
lahf
imul
push
jge
gs
jle
jle
js
or
test
adc
sti
into
jo
in
icebp
dec
test
aam
mov
mov
adc
inc
sbb
cli
dec
xor
xor
dec
stc
repnz
cmp
lods
mov
mov
aad
popa
mov
ret
in
xchg
mov
fsubs
inc
xchg
push
sbb
imull
adc
cmpb
sub
lods
test
mov
sub
fildll
int
fsubl
es
mov
adc
stc
cmp
sti
movsb
push
mov
mul
sub
ss
add
ficomps
int
adc
jae
sti
mov
lods
pop
ljmp
xor
or
mov
push
jb
inc
push
fcmovnbe
add
pop
dec
jmp
fiadds
clc
sahf
lock
push
adc
mov
sbb
jno
and
repz
pop
jp
mov
shrl
es
mov
cmp
mov
sbb
pop
or
lock
inc
stc
cmpsb
movsb
and
ficoml
add
mov
lcall
jge
hlt
push
pop
test
pusha
test
fcoml
jns
sbb
push
int3
mov
push
or
mov
mov
out
sbb
bound
pop
loop
push
mov
and
mov
rcrl
xor
out
push
dec
push
enter
call
push
in
jno
imul
pop
sbb
es
and
pusha
loope
jecxz
mov
mov
mov
fidivrl
inc
bound
dec
andb
pop
jl
fiaddl
push
outsb
call
sbb
or
xchg
xor
pushf
scas
sarb
and
pop
jmp
xchg
sub
fmuls
add
ret
out
jns
pop
jne
jo
sti
dec
pop
int
cmpsl
xor
aam
inc
mov
repnz
lods
cmp
cmp
cmp
in
movsl
loop
cld
jae
icebp
push
std
inc
add
or
loop
jae
jge
inc
sti
xor
mov
pop
dec
lods
scas
imul
cli
fcomps
cwtl
push
mov
or
inc
movsb
data16
sub
or
adc
shlb
mov
je
subb
movsb
dec
roll
jae
divl
mov
adc
push
ss
cld
imul
repz
mov
testl
test
push
filds
mov
test
xor
cld
adc
and
xor
mov
adc
pop
mov
fidivl
fistps
adc
lds
push
imul
pop
add
xchg
xchg
xor
imul
mov
jae
fisubs
lea
inc
mov
fadds
or
mov
cltd
imul
push
stc
in
sbb
iret
xchg
int3
or
addr16
test
repz
xchg
mov
sub
sbb
pop
clc
sbb
popf
add
lock
imul
jns
sbb
int
jle
push
or
lods
xor
mov
inc
xor
mov
adc
jbe
stos
push
and
mov
pop
cli
stc
lret
and
xchg
xor
mov
cmpsl
sub
leave
in
adc
subl
test
mov
dec
mov
icebp
imul
xchg
mov
sbb
jp
push
xor
jl
test
dec
sub
gs
lea
pop
addb
add
shrb
ljmp
mov
add
fwait
or
push
mov
jp
xor
or
mov
stos
cmpb
dec
lret
xor
js
mov
clc
mov
mov
or
push
movsb
pop
sbb
sbb
cmp
pop
dec
add
mov
je
jmp
push
test
mov
dec
jp
fidivrl
xor
cmc
pushf
mov
jmp
adc
enter
loope
pop
jnp
ja
adc
test
pop
addr16
mov
mov
pop
outsb
sahf
outsl
hlt
xchg
adc
xchg
data16
fdivrs
mov
mov
insl
xor
pop
jle
or
adc
inc
mov
insb
push
scas
mov
or
pop
mov
pop
xchg
out
jnp
fisubs
cmp
xor
call
mov
sub
scas
or
push
icebp
cmp
les
aad
repz
sbb
and
jg
xor
push
in
dec
cld
dec
add
jge
add
sub
les
cmp
inc
dec
sbb
ss
sbb
pop
mov
dec
fiadds
add
lds
sbb
in
push
push
adc
add
leave
scas
das
fiaddl
add
outsl
aad
xor
adc
jp
xchg
and
fisubs
lahf
inc
dec
stc
dec
stos
push
or
mov
add
sti
daa
mov
jo
jl
ret
mov
mov
and
dec
pop
jmp
adc
daa
cmp
cmpb
fildll
dec
cmp
pop
adc
sahf
enter
lret
adc
cmp
jmp
lcall
stos
push
ljmp
inc
push
cmp
repz
lahf
fst
imul
scas
fwait
add
std
loopne
add
into
inc
scas
cld
pop
scas
jp
out
pop
aam
pop
in
mov
sub
inc
enter
ret
aam
or
push
movsw
in
pop
sub
sub
mov
fidivs
jg
mov
and
adc
out
sub
mov
xchg
jnp
mov
aas
adc
scas
loopne
imul
sarl
adc
cltd
xor
dec
addb
cltd
test
mov
rcr
addl
test
clc
rclb
pusha
test
fcmove
and
adc
mov
mov
imul
sbbl
push
jae
mov
cmpsb
popa
insb
add
and
push
sub
dec
cmp
cmc
scas
ja
nop
pop
test
mov
movl
xor
push
das
mov
lcall
lods
sub
fstl
enter
inc
pop
loop
call
jle
mov
push
test
adc
pop
jb
fistpl
shr
outsl
test
push
cmc
js
push
shrb
and
pushf
outsb
dec
je
mov
insl
sub
and
pop
jbe
mov
pop
stc
mov
adc
sahf
inc
repnz
pop
xchg
xor
pop
mov
ja
pop
lret
pushf
and
lcall
jbe
mov
pushf
xlat
xchg
int3
bound
mov
pop
ret
push
cmc
shlb
cmp
rcrl
mov
push
fnstsw
xchg
inc
sub
dec
jnp
mov
jae
int
fmull
and
in
dec
insl
sub
ret
popf
xlat
imul
add
mov
add
mov
les
in
cmp
jmp
insl
call
mov
adcb
jmp
movsb
shr
add
repz
or
inc
out
add
mov
push
es
push
pop
sub
jle
js
arpl
dec
or
dec
inc
cmp
cmc
adc
imul
sahf
cmpb
xor
or
outsb
push
ret
sbbl
pop
jnp
push
daa
ljmp
call
lods
test
push
mov
jne
imul
std
inc
push
xchg
jmp
fistps
aas
adc
dec
pop
pop
ss
push
xchg
cmp
ret
inc
test
jge
or
mov
loope
jae
iret
out
scas
daa
cmp
shr
clc
jp
xchg
fdivrp
add
adc
sub
test
imul
aaa
xor
adcl
repnz
add
insb
push
jns
flds
rcl
pop
imul
pop
mov
insb
nop
mov
cmpb
aad
add
ret
dec
inc
jge
sub
dec
out
ret
in
xchg
cmp
mov
dec
jg
cmp
mov
fwait
or
add
loope
lret
jmp
xor
xor
pop
cmpb
stos
push
lcallw
and
dec
xchg
lds
std
ljmp
into
xchg
in
push
sar
adc
sbb
cmc
movsb
jecxz
jo
mov
daa
fcom
cmp
int
mov
testl
mov
icebp
mov
push
add
add
out
cmp
mov
xchg
dec
lods
xchg
imull
push
in
dec
stc
mov
jl
mov
jbe
mov
mov
mov
loopne
jns
out
xlat
adc
push
int
cli
push
and
mov
jecxz
bound
gs
inc
mov
mov
or
cmp
add
or
rolb
jle
mov
lea
hlt
inc
fsubl
mov
pop
ds
pop
idivl
mov
mov
popf
fmull
jae
and
xchg
cltd
pop
jg
in
sub
testl
cmc
add
lds
xor
daa
sbb
sbb
insb
pop
test
cmp
and
mov
jno
push
mov
movsl
sti
loop
fisubrs
xchg
mov
stc
in
dec
dec
sahf
cmp
mov
and
fwait
push
add
mov
lock
mov
insl
arpl
pop
push
sub
pop
sub
mov
or
pop
shlb
repnz
xor
xchg
movsb
in
jno
in
shr
xchg
bound
lcall
jns
jge
adc
enter
cs
jno
adc
mov
dec
insb
mov
cld
stos
in
xchg
add
inc
fldcw
les
idivl
aad
mov
cmp
arpl
push
aad
nop
and
add
shl
decl
iret
mov
insl
dec
push
mov
rcrb
insb
mov
pop
mov
popf
fwait
out
mov
mov
data16
add
test
lods
js
int3
and
adc
add
imul
roll
mov
mov
fsts
in
packuswb
cmp
ret
jl
mov
cmpl
push
sti
popa
loopne
push
jo
mov
mov
pop
mov
sub
sbb
shlb
adc
rclb
addl
in
adc
push
cmpsb
dec
cld
lds
mov
or
into
xchg
push
out
adc
gs
add
xchg
or
test
ret
lret
fidivrl
cmp
or
in
sbb
das
jb
mov
jns
sti
sti
cmp
aad
sbb
cli
jecxz
ret
xchg
mov
push
sar
sbb
jge
fs
insb
mov
push
mov
imul
cmpsb
inc
repnz
or
jb
mov
shl
repz
popl
std
mulb
sbb
mov
mov
es
loop
clc
out
es
movsl
jo
pop
lahf
cmpsl
and
sub
loop
xchg
mov
imul
sbb
out
fisttpll
mov
shll
jle
in
add
int
mov
mov
sbb
inc
cmc
mov
sbb
add
push
xchg
lds
adc
ficomps
repz
movsl
cwtl
adc
cwtl
pop
sbb
dec
jae
repnz
fnstcw
xchg
jb
pop
adc
sahf
inc
xor
xlat
cmp
sar
mov
jo,pt
mov
and
jmp
dec
test
jbe
js
xchg
inc
cmpsb
push
add
pop
out
adc
mov
xor
cmp
mov
shl
inc
or
in
xor
pop
jbe
in
insl
cld
fistps
int3
mov
fisttpl
sti
hlt
je
dec
add
inc
into
jl
sub
and
cmp
add
push
mov
push
loopne
lods
inc
hlt
inc
scas
pusha
mov
fistpll
test
leave
push
and
movsb
lds
rorl
es
stos
push
daa
mov
in
xlat
fs
lods
fs
mov
stos
int3
xchg
aad
arpl
jmp
add
adc
int3
mov
ret
and
inc
adc
mov
mov
test
mov
push
enter
dec
loope
add
fistpl
insl
xchg
in
pop
out
pop
cs
sbb
mov
or
jns
push
out
sahf
push
jns
cmpsb
les
push
jge
ficoml
ds
or
arpl
pop
push
daa
xchg
xchg
je
inc
fmull
push
lahf
lds
jb
mov
rcrb
add
xchg
push
cltd
scas
arpl
push
cmp
mov
pop
xorb
popf
jnp
scas
js
fmull
imul
xchg
jg
jmp
sub
loopne
and
mov
lds
push
push
loope
imul
adc
ds
push
call
jns
pop
xlat
add
mov
dec
outsb
lock
push
pushw
lods
mov
jo
cmp
lret
testl
test
add
dec
movsl
lret
je
vsqrtsd
mull
xor
cmp
inc
das
mov
daa
xchg
sahf
rorb
push
jp
inc
add
dec
xor
sub
push
cmp
sub
sbb
mov
push
ret
ret
in
jle
outsb
push
pop
cli
lcall
xchg
pop
xchg
es
imull
and
aad
popf
pushf
sbb
out
stos
aas
mov
dec
mov
cwtl
xor
dec
sub
sub
or
outsb
cli
mov
mov
jb
jne
dec
out
inc
sbb
jle
and
fsubl
cwtl
insb
and
xchg
cmpsl
mov
xor
mov
inc
rcl
clc
das
adc
xchg
inc
dec
cmp
jmp
in
lret
mov
mov
std
mov
clc
int3
adc
push
insb
loope
inc
sub
push
cmpsl
stos
mov
jne
lcall
test
or
pop
push
mov
stc
dec
out
scas
movsb
jge
inc
mov
mov
faddl
add
das
mov
subl
adc
cld
inc
pop
inc
sbb
dec
mov
aas
mov
adc
push
or
mov
push
lock
out
into
popa
les
dec
fwait
cmp
xor
and
sub
sti
cmpsl
sbb
div
mov
jo
lahf
dec
sub
aad
in
pop
ds
flds
cld
out
insl
push
mov
pop
cmp
gs
push
mov
sbbb
mov
sub
or
fxch
filds
rclb
push
mov
jg
pop
and
dec
aas
sub
ds
xor
loop
and
mov
loop
aam
js
xchg
mull
adc
xchg
lods
pop
mov
add
je
dec
cmpsl
aaa
stc
push
shll
jno
hlt
or
rorl
repz
ss
fisubrl
add
jbe
fidivl
jmp
es
xchg
les
add
cmpsl
hlt
test
xchg
xchg
arpl
push
fsubl
lret
push
sahf
repz
xlat
inc
mov
add
dec
dec
jp
xor
incl
pushf
or
dec
test
inc
icebp
push
andb
inc
shl
and
cmpsb
push
add
loop
addb
test
and
cmp
stos
jmp
xor
mov
fidivrs
xor
pushl
mov
jecxz
or
lods
pop
test
jo
push
or
sti
and
fcoms
cli
jg
xor
sbb
adc
test
mov
mov
adc
push
subb
or
orl
aas
inc
and
or
lahf
add
jle
test
jns
sbb
iret
push
pushf
adc
dec
gs
xor
mov
push
std
mov
clc
push
sti
pushf
fnstcw
lods
inc
enter
inc
add
ljmp
fcoml
das
jne
or
adc
ljmp
fisubl
cmp
inc
jp
pusha
imul
xchg
jns
xchg
xor
xchg
out
cmp
push
add
fidivrl
scas
fldenv
jnp
fsts
fwait
and
imul
daa
cmp
dec
in
jecxz
call
bound
or
dec
or
repz
xchg
frstor
pop
clc
shrl
sub
jl
fsubl
xchg
mov
std
adc
or
pop
fistpll
sbb
in
adc
fs
ror
sub
xor
xor
or
decl
pop
adc
jge
cld
lret
lods
mov
jle
je
and
mov
or
xchg
cli
pushf
and
cmpsb
xor
mov
pop
add
cmp
imul
out
bound
mov
adc
call
lds
dec
add
call
sahf
out
call
or
pop
push
in
std
inc
loop
cmp
inc
mov
repnz
aam
push
scas
inc
or
cmpsl
inc
out
add
sub
adc
in
xor
dec
pop
cmp
insb
jmp
xchg
lods
xor
ds
incb
add
cmc
inc
inc
addr16
adc
jo
cmp
inc
push
mov
adc
insl
fs
loop
inc
mov
stos
push
test
lods
inc
push
roll
jnp
push
or
in
xor
ds
sbb
sub
sbb
ljmp
out
std
pop
outsl
ret
adc
mov
xchg
test
mov
cld
and
adc
add
pop
jbe
arpl
shlb
leave
push
fimull
imul
mov
scas
sub
fstpt
stc
cs
pusha
insb
lret
imul
inc
out
pushf
cs
insb
in
insb
fistps
pop
pop
int
sub
mov
and
ret
nop
lret
test
paddb
push
lret
out
test
sub
jne
inc
push
sbb
fstl
les
sbb
pop
jge
push
pop
add
and
mov
or
fisttpl
cwtl
testl
jmp
incb
pop
sub
int3
mov
fiaddl
mov
mov
cs
xlat
adc
or
xchg
popf
mov
out
xchg
cmp
stos
std
or
pop
iret
or
sbb
cmpsb
sub
cli
and
xor
lods
movsb
sub
cmpsl
ret
vcvttsd2si
pop
addl
xor
lret
scas
and
xchg
mov
dec
in
or
cmp
ror
mov
loop
push
or
mov
imul
arpl
and
lahf
enter
scas
ret
add
dec
dec
push
add
cmpsb
dec
sub
lea
testb
or
in
jge
outsl
clc
push
pop
jb
icebp
incl
clc
ret
push
inc
inc
lcall
lea
aas
push
push
test
and
call
mov
punpckhwd
dec
aad
decl
xor
adc
inc
mov
adc
loope
cmpsb
inc
out
mov
rorb
daa
jecxz
mov
push
insb
mov
xchg
add
in
pop
stos
decl
pop
lret
adc
imul
dec
push
cmc
cmpl
outsl
xchg
dec
fadds
mov
sub
mov
movsl
out
pop
cmp
cmpl
push
inc
sbb
sub
jmp
in
fistl
jg
push
cli
imul
aam
notl
fistpll
data16
popa
out
add
xor
fildll
movsl
sbb
aas
aad
ss
mov
dec
popa
lea
fistl
fsubs
mov
sbb
push
jo
popf
cmp
loope
inc
xchg
ja
mov
movsb
adc
push
fwait
nop
stos
les
enter
inc
cmc
jb
hlt
call
pop
push
std
push
mov
inc
andl
repnz
push
mov
popf
movsl
or
aaa
add
enter
mov
jnp
testb
inc
cmpsl
lret
mov
inc
out
pcmpeqd
xlat
and
lahf
xchg
mov
test
xor
aam
sti
adc
sub
test
fbld
lods
xchg
rcll
test
in
mov
mov
cmp
push
in
test
mov
xor
cmpsb
xlat
shrb
aaa
mull
pop
jmp
sub
push
add
push
mov
pop
add
jge
xchg
in
xchg
icebp
outsb
pop
xor
ljmp
fcoms
jnp
mov
andb
push
lods
repnz
scas
sahf
into
hlt
pop
dec
mov
add
scas
lea
cld
sti
cmp
push
dec
fnstenv
inc
int3
arpl
dec
ficoml
jne
jne
loop
lods
sub
scas
mov
negb
add
add
fbld
fwait
adc
cmp
cwtl
or
mov
add
call
push
loope
push
ret
icebp
decl
xchg
nop
mov
fidivrl
jno
lcall
adc
das
insl
and
jg
mov
pop
fisubl
push
shrl
out
push
test
loop
xor
pop
cmp
push
ljmp
mov
pop
mov
outsb
mov
loope
mov
in
in
and
sbb
jbe
sub
dec
mov
xchg
pop
xlat
cmp
jno
es
inc
enter
jae
fs
sub
or
push
jecxz
xchg
xor
cltd
adc
sub
push
mov
xchg
or
clc
cli
std
adc
out
push
sahf
pop
loop
mov
mov
xor
cli
adc
dec
imul
adcb
mov
jo
inc
and
dec
in
fsubl
rorb
inc
mov
push
outsl
ret
mov
enter
negb
push
push
shll
add
dec
scas
rorb
jbe
pop
lret
int3
call
lds
shr
cmpsl
int3
outsb
insb
insb
addr16
jp
xor
xor
mov
lret
cmpb
popa
dec
xor
jno
sbb
sbb
or
ret
call
lret
inc
mov
rcrl
lock
cmp
pushf
mov
xor
clc
aam
sub
aam
fs
mov
mov
fs
xchg
xchg
mov
ret
int
scas
or
out
pop
lds
test
lds
sub
enter
mov
dec
call
or
and
push
fwait
mov
mov
shr
pop
xchg
stc
adc
mov
pop
cmp
jmp
jo
push
clc
push
test
cmpsl
insb
fucom
pop
mov
fwait
in
popf
loop
scas
jnp
sbb
add
nop
lahf
xlat
test
out
roll
lock
add
and
scas
add
jo
and
inc
fcoms
fwait
xor
sbb
loope
rorb
push
rcll
push
das
xor
jb
pop
pushf
inc
jns
movsl
sbb
adc
iret
addr16
pop
mov
mov
mov
dec
out
add
jo
pop
cmp
adc
cmp
inc
stc
negl
loop
or
push
xchg
sahf
push
push
jnp
mov
rclb
xchg
adc
cmpb
imul
std
mov
imul
in
mov
iret
mov
jmp
dec
mov
add
cmpsb
add
aas
insb
addb
push
mov
dec
add
sub
adc
out
repz
fldl
lahf
sbb
jae
call
xchg
sahf
pop
sete
int
fstpl
add
jl
mov
insb
jmp
and
or
shll
or
nop
dec
jle
push
mov
xchg
adc
je
aad
cmp
arpl
mov
cmp
dec
cmpsl
lods
dec
inc
inc
sar
inc
inc
mov
pop
aam
sub
cmc
scas
es
fisttps
lcall
dec
mov
xchg
sbb
jle
fucomip
add
mov
push
sub
sub
sub
and
arpl
lock
repz
jnp
sahf
dec
sbb
sub
rcrl
jge
inc
jae
rclb
pop
push
add
inc
adc
stc
xchg
fidivrl
data16
jne
add
add
sbb
or
mov
cmp
test
mov
inc
xchg
insl
cli
cmp
inc
in
mov
imul
jne
stos
fcmovnu
mov
jne
pop
and
mov
shll
adc
mov
andb
sub
int
fstpl
fwait
imul
xor
mov
lods
std
loope
cs
ss
push
daa
fadd
nop
xor
loop
push
js
addr16
into
out
lret
pop
nop
fxch
cmp
push
testl
fildll
xchg
pop
out
or
xchg
xor
sahf
mov
into
cld
ss
or
les
xchg
pop
mov
push
or
stos
xchg
mov
sub
lcall
inc
push
or
inc
je
mov
jp
idiv
js
outsb
addr16
movsl
ja
push
cmp
aad
fcoml
push
std
pop
loopne
mov
and
add
sarl
adc
daa
rcll
das
push
mov
cmp
loop
fucomi
adc
addr16
gs
pop
sub
bound
shlb
pop
pop
insl
nop
sar
loope
ds
gs
insl
inc
or
jne
cltd
mov
inc
hlt
hlt
push
adc
jle
sbb
imulb
rolb
mov
ss
imul
stc
scas
cmc
jle
data16
add
bound
repz
les
test
adc
rorb
in
std
mov
cltd
pop
cs
lret
pop
push
int3
push
jns
loop
jp
push
mov
cmp
jg
clc
lods
pop
movsl
pushf
outsl
cmp
in
lods
cmc
or
cld
pop
mov
jge
push
pop
lret
adc
or
cmp
je
mov
ficompl
shrl
shrl
cltd
lock
es
mov
cmp
out
adcl
xchg
movsb
cmpsb
mov
xchg
mov
mov
mov
test
lods
dec
lds
cmp
in
cmp
mov
jmp
xchg
cmp
daa
xor
xor
add
je
or
pop
mov
add
sub
and
sbb
cmp
push
loopne
fisubs
xchg
cmp
call
std
mov
or
lret
in
cmp
xor
jge
or
dec
call
mov
xor
add
out
fsubrp
sub
pop
push
or
or
pop
xlat
cld
and
aam
lret
adc
es
arpl
pop
out
fcoml
add
ja
arpl
mov
mov
pop
sar
popa
lds
inc
and
aaa
in
pop
filds
sub
out
mov
mov
test
loop
ret
jecxz
repz
push
jmp
xchg
outsb
clc
icebp
xor
xor
into
jns
jge
xchg
jbe,pn
outsb
cmp
pop
sub
loope
mov
mov
clc
adc
and
xchg
xchg
xor
mov
out
push
repz
cmp
push
jb
adc
mov
clc
pop
pop
mov
rorl
int3
mov
push
shrb
add
pop
js
xchg
and
ret
pop
es
xchg
xor
push
mov
adc
fcoms
push
mov
dec
call
daa
mov
cwtl
dec
aas
mov
ss
or
inc
in
out
out
xor
out
pop
sbb
fdiv
cltd
pop
jns
sub
ss
dec
xchg
mov
mov
pop
push
int
push
test
cmp
dec
pushf
cltd
lods
aas
jecxz
sbb
popf
mov
sbb
or
cmpsb
pop
es
cmpsl
cmp
mov
fiadds
repnz
mov
imul
fisubrl
cmp
jbe
add
mov
and
sub
jle
notl
mov
pop
jg
lret
repz
mov
rcrb
add
stc
sbb
jg
sub
add
or
loop
push
gs
pop
scas
and
jno
sahf
jle
dec
adc
loop
jns
pop
cmp
rcll
ret
pop
push
add
cmc
mov
cmp
ljmp
imul
mov
frstor
sbb
clc
js
loopne
in
fcmove
xchg
mul
mov
iret
sbb
in
adc
pop
sbb
cmp
movsb
mov
jg
xor
sbb
mov
xor
fdivp
popf
scas
faddp
stc
andb
jmp
insl
xchg
and
ja
repz
mov
mov
out
addr16
lret
addl
jmp
mov
insl
sub
xorb
shrb
aad
mov
lcall
or
cmp
or
adc
gs
movsb
in
jg
int
or
mov
std
jl
push
push
int
push
test
mov
and
dec
push
insl
ljmp
lret
aam
mov
cmp
sbb
sub
jmp
mov
insb
add
jno
cli
test
sbb
adc
jp
jns
lock
and
mov
call
addr16
out
push
dec
push
inc
sbb
mov
dec
aas
call
and
inc
and
xchg
pop
xor
adc
sar
jne
incb
out
in
push
stc
aam
ret
and
add
dec
popa
add
cmp
xchg
ret
sub
mov
push
aam
pushf
test
jb
aaa
jecxz
jmp
out
mov
outsl
sbb
inc
inc
adc
out
jle
out
mov
adc
add
cmp
icebp
mov
push
enter
cltd
stos
mov
push
mov
sbb
or
fs
adc
pop
xchg
cld
enter
fucomip
sahf
fcomps
fsts
mov
sysret
lret
arpl
inc
or
pop
imul
push
imul
or
mov
inc
inc
andb
or
adc
aaa
enter
and
cmp
push
push
pop
subl
xchg
dec
lock
jne
test
jnp
ss
pop
bnd
push
ret
jmp
cli
sub
sbb
lods
inc
pop
add
mov
sahf
jne
loopne
sub
cmpsb
int3
shl
add
insb
mov
pushf
out
stos
cmp
clc
cmp
dec
imul
test
movl
insl
add
mov
repnz
std
adc
mov
mov
inc
adc
in
fisttpl
repnz
int
pop
inc
mov
mov
lods
rorl
daa
std
or
fwait
cmp
cmpsl
inc
xchg
bound
es
or
pop
pop
adc
insl
or
iret
inc
adc
test
iret
es
ja
fdivs
jl
out
dec
mov
aad
pushf
sub
xchg
sahf
mov
cmc
stos
cmp
dec
adc
xorb
pop
inc
xchg
adc
fdivr
or
mov
jmp
cmpb
mov
sbb
fdivrs
xchg
arpl
rorb
rol
lcall
sarb
lcall
jae
sub
test
xor
fnstenv
addr16
insb
leave
jecxz
jmp
movsl
adc
mov
xor
nop
pusha
popf
hlt
adc
sbb
fistpll
inc
lcall
movsb
add
ret
add
sub
xor
cs
jne
filds
into
pop
sbb
add
jmp
subb
es
adc
add
mov
sbbb
leave
mov
mov
dec
into
xchg
ds
inc
test
rcrl
jg
int3
push
adc
xchg
xchg
mov
aad
andb
sub
or
xor
lock
jl
subb
sbb
out
int3
adc
pop
out
sub
dec
dec
adc
jno
loopne
lahf
sbb
into
xchg
push
cwtl
and
or
add
push
in
and
ljmp
ret
scas
les
adc
push
jnp
hlt
dec
adc
or
sub
xor
jnp
cmpsl
rorb
mov
mov
ja
xlat
sbb
sub
mov
dec
sub
sahf
push
jmp
sbb
ljmp
popa
cmpsl
and
and
pushf
popa
mov
aad
adc
icebp
jecxz
inc
in
int3
sbb
popf
je
jg
or
cli
roll
dec
clc
pop
loop
jecxz
std
adc
jae
cmp
mov
pop
jb
sub
test
repz
popf
adc
call
jae
pop
rcrb
icebp
adc
lcall
mov
fwait
or
mov
inc
aaa
aam
sbb
out
dec
imul
fsubrs
dec
fidivl
cmp
push
or
pushf
cmp
inc
aam
out
xchg
in
cltd
sbb
pop
popf
dec
insb
idivl
ficomps
fld
hlt
xchg
arpl
pusha
xchg
jmp
rclb
arpl
sahf
lea
ljmp
xchg
aas
movsl
sub
adc
add
adc
imul
aam
in
cs
imul
rorb
aad
rolb
loop
dec
cmp
push
js
cmpb
xor
mov
push
cmp
dec
inc
ret
test
shrl
or
daa
pcmpeqb
mov
pop
in
push
mov
jo
mov
loope
ja
pop
xchg
cmp
xchg
jge
and
lcall
sahf
xlat
sub
sbb
scas
sub
int
xchg
inc
scas
dec
mov
jns
and
daa
mov
or
fnstcw
pop
pop
jbe
ss
sub
sub
xor
into
int3
ss
mov
jl
push
cmp
or
loopne
movups
inc
stc
mov
int3
aas
repz
cmp
gs
adc
mov
fimuls
pop
das
push
xor
jge
pop
incl
in
add
loopne
ljmp
aas
subb
mov
outsl
pusha
inc
xor
adc
ret
outsl
xchg
addb
rol
gs
leave
mov
fsts
pusha
ficoms
push
roll
jmp
xchg
popa
or
inc
ss
push
add
pusha
std
push
mov
mov
mov
les
test
imul
dec
fidivs
mov
dec
mov
stc
inc
mov
lods
stos
insl
and
dec
mov
das
sbb
fsubs
std
enter
stc
pushw
add
jg
ljmp
pop
xor
mov
mov
xor
das
xor
dec
xor
dec
cmpsb
sub
jae
rclb
cmp
mov
xor
pop
daa
push
lahf
std
mov
jnp
sti
jns
adc
fs
lods
lea
dec
scas
or
in
lods
shlb
or
les
and
test
mov
in
das
popa
xchg
xor
imul
dec
xor
push
xorl
mov
popf
cmp
fidivs
xor
sub
jnp
add
shlb
inc
sbb
mov
in
js
xor
pop
out
popf
mov
out
test
leave
xor
repnz
loop
mov
gs
add
pop
dec
sub
jmp
in
rolb
adc
sbb
or
fwait
aam
cmp
pop
push
int3
lahf
push
or
fwait
rcrb
xchg
fs
call
inc
repnz
dec
out
pop
out
rol
xlat
gs
push
xor
jb
insb
adcb
call
push
sbb
mov
xchg
out
arpl
dec
cmpsb
mov
inc
jl
cmp
lds
mov
mov
xchg
mov
imul
fdivs
mov
jmp
and
aad
cs
cmpl
lds
movsb
arpl
bound
jle
roll
pop
cld
lea
in
imul
adc
out
add
nop
push
shl
xor
call
mov
sbb
cmp
jmp
or
jle
subb
mov
jae
xor
neg
lahf
xchg
mov
sub
cs
xchg
test
jne
fmuls
bound
push
mov
sarb
sbb
xor
mov
ret
jb
cmpl
push
sti
pop
lods
inc
aad
mov
adc
in
push
or
je
push
adc
ret
addr16
adc
in
push
xor
jmp
push
aas
arpl
aas
mov
data16
loop
rorl
ror
jo
adcl
data16
xor
xchg
out
sub
xor
xorb
push
and
imul
popf
int3
hlt
outsl
sub
xor
or
js
pusha
pop
push
insl
or
lret
push
aaa
xchg
mov
dec
mov
sub
int
push
int
sarb
xor
lea
rcrb
dec
push
nop
roll
dec
movsb
pop
hlt
mov
pop
fdivl
or
push
pop
mov
push
jl
mov
pop
cmp
sbb
popa
fwait
cmp
cs
aad
xor
lcall
addr16
sti
mov
idivl
push
fnsave
in
pop
rclb
pop
mov
pop
sub
lret
mov
inc
ret
sub
aad
cmpsl
jo
jae
jge
js
mov
test
aam
fildl
iret
stos
sub
cmp
jmp
flds
sbbl
popa
mov
cmp
ret
out
push
lret
sbb
jne
pop
jg
pop
pop
or
adc
shlb
pop
push
lcall
mov
ficompl
xchg
pop
icebp
mov
sub
fiaddl
push
fbstp
das
fnstsw
test
mov
std
in
leave
and
and
xchg
add
out
icebp
xlat
mov
inc
mov
cltd
mulb
test
jns
aad
sbb
les
cmpsb
inc
sub
mov
ret
rcr
sbb
mov
lahf
lds
sarb
xor
pop
dec
or
cmp
into
xlat
sbb
mov
add
sub
adc
lcall
in
pop
push
gs
stos
jb
in
test
movsb
mov
or
inc
xchg
cli
dec
sub
fdivrs
xchg
fidivs
lea
jmp
mov
sarb
out
push
cmp
cmpsl
mov
aaa
out
lea
or
imul
inc
sbb
pmulhuw
stos
inc
cmp
push
xorb
push
sbb
and
mov
push
sbb
jns
add
faddl
xlat
dec
jb
mov
dec
ret
divl
retw
mov
clc
xor
adc
mov
aas
outsl
call
mov
and
pop
loopne
mov
lcall
xchg
dec
xchg
scas
sahf
test
cmpsl
mov
outsl
cld
icebp
scas
aad
and
and
cmp
les
adc
fdivrp
inc
jp
inc
call
cmp
lock
xorb
xchg
mov
xchg
dec
sub
not
call
mov
loopne
cmp
dec
pop
outsb
cmpsl
shl
pop
dec
dec
pop
jge
push
jg
sub
push
xor
mov
data16
adc
test
add
ljmp
push
aas
out
sbb
cs
push
sbb
jge
dec
xor
in
xor
mov
incl
cmp
mov
jg
out
add
outsb
movsl
mov
cmc
or
pop
push
xor
push
inc
adc
and
mov
jge
ds
and
cmp
push
pusha
mov
repnz
mov
loope
int
daa
jge
cmc
aas
test
pop
sbb
sub
push
or
add
shl
fnstcw
inc
repz
in
out
and
pop
or
mov
xor
mov
lret
sbb
jo
data16
sub
mov
sbb
push
xchg
sbb
stc
aam
call
daa
rorl
shll
add
xchg
lret
pushf
xchg
ss
xor
pop
clc
jp
cmpl
push
out
mov
mov
adc
add
and
mov
cmpsl
loopne
inc
enter
dec
mov
out
in
arpl
jbe
or
in
rep
add
pop
mov
inc
or
adc
imul
pop
adc
push
sahf
rol
and
jge
dec
cmp
pushf
in
icebp
daa
aas
jne
leave
out
loope
out
pop
xor
addl
add
adc
xchg
dec
dec
sub
sarl
jecxz
out
add
bound
sub
cmp
adc
or
stos
jl
jecxz
loop
cmp
fcmovb
hlt
jnp
popa
adc
add
lret
dec
push
clc
pop
nop
lret
cmpsl
fld
frstor
xor
imul
sub
jae
ljmp
jae
repz
dec
enter
xor
and
lock
scas
and
bound
ja
inc
ds
push
jns
and
out
jnp
xchg
jae
mov
pop
mov
sbb
xor
mov
xorb
jb
pop
outsb
mov
leave
mov
fucom
dec
add
jo
mov
or
xlat
imul
jl
xchg
cmpsb
dec
inc
imul
iret
dec
inc
dec
fists
ljmp
mov
mov
push
dec
mov
add
test
jg
xor
fisttpll
xchg
xchg
xchg
or
lds
mov
jp
lret
pop
mov
dec
lds
or
fwait
push
hlt
je
mov
push
gs
test
add
push
cld
mov
or
sti
bound
sbb
mov
add
cmpsb
jecxz
xchg
inc
sbb
push
out
and
push
jmp
and
mov
jns
out
sbb
xchg
cmpsb
stos
call
loopne
push
les
mov
cmp
mov
mov
test
std
scas
dec
or
jmp
dec
scas
inc
add
jecxz
push
or
data16
cmpsl
jo
add
data16
lods
sbb
jne
cmp
repz
loop
mov
cld
xchg
outsl
mov
pusha
ret
mov
aaa
pop
pop
idivb
sbb
scas
lock
push
pop
pop
or
pop
data16
mov
sbb
mov
mov
pop
jmp
add
and
insl
mov
and
mov
test
shl
jecxz
add
lcall
cmp
inc
cmp
jle
ds
cmp
jecxz
push
sbb
or
push
loop
fnstsw
outsl
pop
notb
jp,pn
shll
sbb
or
push
push
lea
and
adc
pushf
stos
dec
jne
lahf
roll
ret
scas
inc
clc
jae
add
cmp
push
add
in
push
ret
iret
and
cmpb
call
xchg
xlat
lods
test
movsl
les
jmp
lea
lods
push
mov
ja
lock
pop
lahf
je
cmp
sbb
adc
mov
pop
sti
jo
dec
insb
repz
mov
mov
dec
dec
das
sbb
mov
sti
jb
or
push
inc
aas
ljmp
push
fs
sbbb
xorb
les
jge,pn
ret
cwtl
dec
ljmp
das
nop
xchg
shlb
cmp
loop
mulb
mov
mov
repnz
add
jbe
lcall
bound
xchg
push
adc
dec
out
popa
int3
scas
imul
addb
mov
mov
sub
sub
inc
jno
jo
add
fists
jge
jae
add
pop
or
xlat
push
ja
out
dec
roll
ljmpw
mov
sbb
pop
fistpl
cmpsl
mov
test
jecxz
sub
ja
mov
sbb
pop
movsb
mov
push
loopne
enter
and
pop
add
jp
in
movsb
arpl
in
mov
mov
jbe
jle
int3
enter
out
jge
sub
daa
imul
xchg
push
negl
jg
decb
sub
decl
xchg
dec
int
mov
adc
cmp
dec
add
push
mov
push
cmp
aad
mov
xchg
mov
cmp
adc
push
jo
push
xchg
and
lea
ja
cmpb
imul
ljmp
scas
inc
sahf
adc
je
xchg
neg
outsb
test
mov
mov
xlat
sbb
out
mulb
sub
dec
adc
mov
pop
sbb
mov
pop
xor
cltd
jp
and
xchg
add
xor
push
stos
and
int
jno
fiadds
mov
push
cmp
in
xchg
mov
mov
xchg
dec
mov
loope
jns
lcall
adc
or
inc
mov
xchg
dec
xorl
cmp
leave
in
add
clc
cmp
sti
divl
sbb
add
loopne
xor
jmp
and
mov
scas
repnz
ljmp
sub
adc
movsl
lret
mov
xchg
fldenv
push
orl
lds
lock
mov
push
and
call
dec
sti
cmp
sub
loopne
sbb
mov
lret
cwtl
xchg
cmc
add
add
bnd
xchg
sbb
fistpll
js
in
push
and
roll
das
out
fcoml
cmpsl
mov
jne
mov
ss
cwtl
push
and
dec
mov
cmpsb
aas
das
xor
xor
aad
xchg
sub
add
das
and
and
mov
or
dec
stos
lret
pop
mov
sbb
mov
jae
adc
mov
adc
inc
nop
jb
jo
stos
mov
ret
jl
inc
adc
and
xchg
icebp
mov
addb
mov
popf
xchg
movsb
jb
lods
cmpsl
mov
leave
jne
test
repnz
sbb
out
add
mov
data16
and
inc
xchg
or
ret
mov
pop
cmp
lcall
add
jno
cmp
adc
push
test
hlt
mov
sbb
dec
xchg
or
daa
xor
pop
into
xor
dec
pop
pop
cld
dec
sbb
inc
cmpsl
push
push
dec
adc
inc
sahf
push
insb
aaa
inc
daa
mov
and
hlt
xchg
sbb
lret
je
pop
loope
add
adc
sbb
xor
rol
js
in
movsb
adc
mov
xor
inc
cli
xchg
jecxz
and
jno
adc
mov
xchg
and
pop
imul
es
add
pusha
xor
jle
jae
andb
mov
dec
cmc
movsb
cmpsl
lock
in
push
jns
adc
sti
or
cmp
jge
mov
xlat
js
repz
dec
pop
iret
lcall
test
and
sub
nop
xchg
insl
cmp
cmp
or
jns
mov
pusha
fidivl
pusha
hlt
sub
rcll
sub
xchg
notl
pop
in
mov
and
movsb
or
lea
mov
mov
jle
xchg
dec
or
xor
jmp
jg
ret
orl
pop
outsb
loope
fsts
mov
jne
scas
arpl
xchg
arpl
shl
pop
add
int
lahf
cmp
dec
push
xchg
add
push
dec
out
add
loope
dec
pop
fldt
add
mov
ret
push
xorb
push
adc
aad
cmp
hlt
call
mov
repz
push
push
shr
jns
jne
or
call
jae
daa
sbbl
aad
jne
outsl
jl
mov
push
fsubrs
loop
inc
push
rolb
jae
push
xchg
btl
int3
jl
or
inc
es
movsl
jecxz
and
pop
sub
push
neg
pushf
xlat
and
inc
lea
and
std
popf
push
addr16
dec
shr
aas
ret
sub
mov
cmp
push
push
mov
pop
add
push
sbbb
out
push
push
lcall
mov
and
push
imul
scas
adc
push
push
pusha
mov
popf
imul
sbb
dec
cmp
cmpsl
dec
repnz
xorl
imul
aaa
mov
clc
icebp
sub
pop
sbb
loopne
cmpb
out
clc
or
adc
sub
jne
bound
cs
xor
mov
test
ret
cltd
flds
test
addb
cmpsb
subb
cmc
xor
loop
loope
inc
scas
movsb
mov
loopne
push
xchg
shll
pop
add
aas
xor
push
in
jns
mov
ljmp
mov
mov
repz
insb
mov
test
es
push
cmp
mov
loope
sbb
xchg
adc
lock
loop
cmp
mov
push
loope
dec
cwtl
pop
push
jle
xchg
mov
adc
insl
sti
xlat
in
push
outsb
mov
dec
lahf
push
xlat
jns
cmpsb
js
xchg
out
pop
lidtl
repnz
or
ja
jle
addr16
pusha
pop
inc
mov
fwait
push
out
stos
std
or
test
aam
popa
xor
dec
cli
mov
inc
rcrb
mov
dec
in
cmpsb
sbb
add
add
or
and
mov
cli
xchg
push
mov
jne
xchg
pop
mov
or
mov
hlt
xchg
mov
xchg
stc
sbb
in
push
mov
jmp
sub
jo
mov
cs
cmp
test
jge
arpl
flds
pop
scas
lock
pop
inc
push
jecxz
cmp
stos
mov
jl
stos
adc
jo
test
or
push
sti
adc
jle
adc
push
inc
and
and
push
cmp
sbb
shrl
add
mov
ja
in
lock
dec
iret
jg
test
ss
and
lock
cmp
inc
mov
out
gs
or
inc
sub
loope
push
pop
adc
popa
mov
negl
mov
out
iret
pop
orl
jb
xor
and
fstpl
sub
sub
jmp
pushf
sbb
stc
sti
idivb
cltd
roll
mov
mov
sbb
repz
mov
push
stos
mov
adc
jno
pop
je
pop
dec
inc
jnp
adc
rcrl
fistpl
xor
loop
mov
shrb
or
data16
clc
mov
add
pop
addb
jae
mov
arpl
loop
push
adc
iret
push
jle
inc
in
ret
jne
movsl
xor
out
inc
sbb
adc
pop
cmpsl
dec
adc
test
inc
or
and
dec
insb
addl
add
pusha
mul
aaa
lahf
cmp
mov
popa
aad
cwtl
dec
into
xchg
lret
sbb
repnz
pop
sbb
mov
xchg
jae
push
adc
xor
and
cmpsl
movsl
in
mov
movsl
jb
mov
movsl
xchg
fnstenv
lcall
sub
iret
in
lret
gs
mov
fnstcw
jo
out
les
sbb
push
popf
stos
or
loop
movsl
dec
mov
xor
imul
inc
xor
sub
push
xchg
mov
incl
std
hlt
push
push
inc
test
cmp
and
cmp
in
test
jg
xor
sub
sub
and
hlt
lahf
push
cld
cmp
sti
cmpsb
adc
cwtl
cmp
loopne
and
cmpsl
out
sbb
add
adc
fwait
or
cli
cli
xchg
repnz
jl
mov
pmaxub
add
cli
es
mov
idiv
mov
addr16
cld
jp
fs
add
dec
mov
sbb
xchg
stc
and
psrad
mov
or
xlat
xchg
hlt
sub
sub
out
and
adc
push
and
add
mov
lds
and
ret
shl
xchg
cs
sub
insb
xchg
xor
mov
fstpl
aas
shl
sub
repz
adc
add
xchg
fistpll
fildll
jbe
jge
nop
pop
sti
aas
iret
sub
in
cmp
sub
sub
fistpll
test
add
jno
sub
push
aas
outsb
xchg
mov
and
push
ljmp
push
test
or
jne,pn
xchg
dec
ja
cmpsl
mov
rorl
imul
push
stos
mov
and
ret
lahf
movsb
or
push
dec
iret
dec
fidivs
push
stos
insl
orl
leave
test
or
jge
les
cmp
jae
dec
jno
js
arpl
test
fmul
and
xchg
and
pop
push
dec
cmp
xchg
pop
pop
outsl
ja
jmp
dec
arpl
je
xchg
sbb
xor
ds
lock
mov
ret
movsl
popa
mov
xor
mov
mov
scas
inc
mov
inc
inc
in
xor
les
mov
push
jp
jecxz
add
stos
lcall
leave
shlb
pop
adc
test
bound
sbb
push
test
xchg
call
aaa
popf
jmp
add
les
and
jo
fmuls
rol
aam
movsb
dec
ss
push
jecxz
cli
cmc
jge
add
inc
push
or
push
lret
pop
dec
pop
pop
imul
and
sbb
add
xchg
movl
mov
fsubrl
aad
pop
cmc
insb
mov
adc
cltd
add
ret
rcrl
test
sti
loopne
add
cmp
inc
insb
sub
sbb
dec
roll
lret
add
xchg
adc
push
cmc
lods
sahf
sub
scas
xor
xchg
ja
cmp
test
pushf
sbb
stos
stc
daa
pop
cmp
mov
ficomps
or
ss
std
jb
adc
test
popa
int3
test
sub
xchg
add
iretw
gs
cmpsb
sbb
jbe
cltd
cmp
adc
mov
repz
sub
mov
icebp
sahf
sub
and
sahf
dec
dec
hlt
test
dec
daa
or
add
inc
cld
inc
jne
mov
dec
xor
sub
ds
lock
adc
sbb
dec
scas
int
lcall
push
lcall
ret
lret
mov
mov
xor
arpl
push
fldt
mov
jnp
nop
or
lock
sti
mov
add
imul
mul
jns
adcb
jmp
cmpsl
ljmp
imul
popa
and
stos
jb
adc
cmp
jne
scas
fmuls
divps
shll
push
pop
sub
icebp
inc
fcoml
inc
enter
sub
adc
ja
pop
adc
popa
push
stos
fimuls
cwtl
inc
add
out
sbb
sbb
add
fucompp
lods
pop
mov
out
lock
fbld
push
test
and
mov
enter
sbb
outsb
inc
rolb
mov
js
lods
ffreep
mov
stc
sub
scas
sub
aad
inc
inc
je
jno
and
fwait
cs
pop
mov
sbb
es
or
push
mov
es
je
cmp
or
data16
loopne
jae
mov
popf
clc
aas
mov
add
mov
in
or
cmp
sbb
jg
arpl
mov
push
adc
inc
xchg
popf
out
jns
movsl
dec
push
pop
nop
sbb
cmp
pop
ljmp
xchg
int3
sbb
mov
mov
lock
adc
ja
inc
fsubl
lds
test
std
mov
dec
or
filds
jg
xchg
push
test
and
call
sahf
stc
sbb
push
in
pop
out
nop
push
add
or
jae
jp
jb
fisttpl
loopne
stos
push
xchg
pop
xor
jmp
addl
xchg
mov
shr
sbb
and
jne
xchg
adc
es
mov
or
jno
lcall
pop
fimull
lods
push
jge
pop
sbb
dec
jecxz
sbb
jb
sub
cmp
cmp
subb
push
rolb
in
insb
mov
and
sarl
rolb
inc
add
mov
je
call
jmp
adc
sub
stos
jmp
outsl
dec
sub
push
sahf
fimuls
add
mov
mov
in
xchg
or
rcr
push
mul
cmp
xor
adc
jbe
xchg
call
fsubs
jne
insb
sub
xchg
push
add
rolb
in
inc
mov
xchg
xchg
loope
mov
pop
jae
xrelease
fs
cmp
cltd
mov
jmp
pop
das
daa
mov
push
pop
sbb
xchg
int3
and
cli
icebp
pop
out
inc
lods
sbb
outsl
pop
ds
xor
lret
imul
scas
int3
push
sbb
hlt
and
mov
xchg
jl
jbe
sub
rcl
push
pop
push
lahf
shrl
pop
pop
sbb
mov
gs
dec
repz
insb
jbe
push
test
mov
jmp
sahf
imulb
aas
lods
push
sub
jmp
jl
pop
mov
jmp
movsl
push
cmp
xor
fs
inc
stc
pop
lods
cmp
jns
jmp
pop
xor
inc
cmpsl
xchg
subl
test
xchg
xchg
push
pop
es
push
fs
int3
jge
in
pushf
and
enter
idiv
nop
mov
xor
push
push
sub
jp
ficoml
xchg
jecxz
xchg
adc
xchg
fstl
sub
ja
fs
inc
lods
xchg
call
jmp
xor
cmp
in
mov
sub
jecxz
cmp
pushf
iret
pop
test
into
in
and
cli
ret
or
adc
fstpt
test
xor
insl
sub
pop
pop
jle
enter
mov
cmp
negb
popa
sbb
dec
lahf
aad
fidivl
xchg
pop
popf
in
stos
jl
mov
ds
mov
mov
xlat
call
and
mov
cmp
bound
imul
dec
pop
enter
pop
mov
adc
push
into
xchg
mov
adc
rclb
ret
xor
push
fadds
nop
sub
je
fmul
addr16
ja
into
daa
pusha
hlt
xchg
fildl
mov
cmp
mov
jb
xchg
pop
pop
push
clc
cmp
mov
or
sti
cmp
jle
dec
push
xchg
or
clc
lret
xor
cmp
jg
arpl
pop
xchg
mov
jl
outsl
stos
or
cmp
jecxz
enter
pop
test
pushf
cmp
mov
mov
addr16
into
push
lods
or
fisttpl
fldl
mov
fsincos
test
jle
jo
aaa
sub
rcll
or
cmp
push
out
mov
push
mov
mov
sub
sbb
push
mov
cmp
and
test
mov
cltd
pop
aad
mov
cmp
add
movsl
jmp
sub
pop
xchg
and
jno
ds
sti
sbb
cmpsb
subl
jnp
or
xchg
lret
dec
push
push
sti
push
pop
dec
repz
jnp
add
push
add
jae
pop
and
out
lock
rorb
push
pop
lds
and
test
aas
lock
lea
add
jmp
out
mov
lahf
mov
or
fnsave
aas
mov
test
mov
out
ret
sub
cmpl
push
inc
sbb
push
test
lret
enter
mov
mov
xor
xchg
lods
mov
sub
xor
mov
mov
pop
rcrl
adc
leave
xchg
adc
and
insb
inc
adc
in
xchg
pop
pop
jg
inc
in
arpl
and
or
xor
cmpsl
leave
jg
jmp
call
shll
push
push
stc
and
subl
call
out
push
incl
das
xchg
mov
movsb
cmp
sub
jmp
bound
jbe
or
mov
or
bound
xor
push
cmp
fmuls
adc
mov
adc
pop
bound
push
aas
pop
mov
jge
mov
cwtl
pop
fsub
movsl
ret
mov
xchg
dec
push
repnz
xchg
outsb
in
push
clc
test
insb
adc
push
or
or
adc
xor
inc
pop
or
xchg
cmpsl
and
push
mov
lahf
sbb
jnp
mov
jmp
dec
cmp
in
out
adc
sub
push
divb
ficoml
pop
mov
xor
jae
mov
aad
mov
les
lcall
cmpsb
lock
or
dec
outsb
cltd
xor
loop
mov
dec
mov
outsl
ret
jno
cmp
cli
cli
xchg
es
dec
jmp
shll
mov
lret
mov
mov
sbb
mov
test
adc
sub
call
push
js
loopne
cmp
jge
fs
cmp
mov
das
add
push
cmp
cmp
popf
mov
sub
flds
jae
sahf
adc
jle
push
push
lea
add
fcmovnbe
cmp
or
sub
pop
adc
jns
add
and
insb
mov
filds
aam
out
mov
push
mov
sub
subb
sbb
mov
and
push
lahf
cltd
scas
push
push
push
ficoms
orl
mov
mov
flds
imul
mov
cmpsl
and
inc
stc
sarl
fcomip
mov
adc
or
ret
gs
les
push
scas
addb
into
mov
imul
sbb
and
push
ja
aaa
xchg
nop
mov
mov
in
or
xor
push
jge
dec
add
in
je
in
call
xchg
stc
je
sub
aad
jecxz
test
in
adcl
repnz
cmp
bound
sarl
in
into
stc
icebp
cld
push
cmp
xchg
sub
xchg
ljmp
sub
fs
out
scas
push
iret
push
push
mov
in
mov
repnz
imul
into
add
jnp
cld
adc
cwtl
mov
aad
push
test
jg
out
ret
aas
loope
pop
jecxz
je
pop
mov
pop
stos
add
xchg
icebp
sbb
aad
xorl
in
lods
aas
imul
mov
xor
shrb
inc
jg
mov
lcall
and
lret
jl
mov
pushl
mov
outsb
fisubl
xchg
outsb
xchg
ss
cs
bound
or
jge
xchg
cmp
xor
push
inc
or
xlat
add
iret
in
xor
push
adc
xor
das
imul
cmp
arpl
pusha
xchg
push
shl
push
nop
pop
lock
jge
jecxz
and
lods
push
sub
test
jecxz
pop
mov
push
outsb
ret
jno
mov
outsb
cli
ljmp
and
cmovbe
jg
xor
jnp
xchg
aad
mov
jle
mov
xchg
or
das
mov
ds
mov
pop
std
pop
sti
mov
push
enter
fs
cltd
in
dec
cwtl
dec
mov
push
icebp
lahf
xchg
ljmp
std
jae
icebp
stos
icebp
fwait
dec
or
xchg
mov
mov
lods
cmp
mov
rorl
movsbl
push
jmp
xchg
mov
cmc
je
ret
dec
and
fwait
in
jl
and
push
sub
in
pop
ret
push
divb
loopne
mul
lods
jns
mov
jle
sbb
out
hlt
in
pop
repnz
dec
stc
mov
dec
add
ss
inc
mov
cmp
adc
cmpsb
shrb
jno
xchg
xchg
mov
negb
flds
cmp
ja
cmp
roll
dec
daa
xchg
aas
adc
push
or
push
test
pop
js
dec
lcall
ja
cli
xchg
mov
xlat
dec
inc
sbb
mov
xchg
jmp
push
jo
sub
ss
add
jb
jbe
mov
jnp
adc
inc
inc
std
jp
into
adc
or
mov
mov
cmp
fldenv
inc
dec
jmp
pop
xor
aas
push
mov
js
adc
sub
arpl
test
xchg
fstpl
pandn
fisubs
shrl
in
xchg
shll
jmp
mov
and
popa
mov
aas
pop
sub
jno
popa
mov
inc
movl
adc
push
js
jo
sbb
out
mov
out
or
scas
sub
andl
or
icebp
push
pushf
xor
test
or
popa
lret
or
mov
pusha
hlt
repnz
outsl
cwtl
or
push
xor
test
outsl
lea
inc
inc
fdivs
jb
negb
inc
push
ret
and
les
cmp
push
jbe
push
sub
lds
fs
ret
jg
mov
and
cs
adc
mov
add
popa
arpl
mov
call
ds
std
rorl
add
mov
xlat
add
xchg
inc
out
lods
dec
mov
or
xor
ljmp
addb
mov
outsl
inc
clc
xor
in
test
cltd
iret
icebp
push
testl
pop
jb
fwait
or
lret
push
imul
jbe
mov
sti
sahf
jmp
stc
enter
adc
and
aad
notl
mov
sbb
inc
imul
popf
jge
mov
fcoms
lock
popa
aad
outsb
pop
xchg
jl
jb
jo
popa
ret
and
push
jo
sub
jae
std
jne
popa
out
push
out
push
loopne
aad
into
rcrl
je
sti
das
dec
aam
inc
cmp
scas
sub
jg
jnp
cmp
jmp
ljmp
push
and
pop
or
test
pop
cmpsb
sbb
dec
adc
adcl
leave
mov
nop
out
xchg
pushl
popa
mov
ljmp
gs
aas
mov
jge
push
xlat
pushl
icebp
fdivl
arpl
int3
cmp
pop
xor
lock
and
mov
nop
call
imul
pop
mov
add
adc
xchg
fisubs
sub
repz
out
cmp
xchg
dec
nop
inc
cmp
outsl
out
lahf
push
mov
jb
mull
ret
pop
xchg
cs
xchg
push
mov
cmp
shr
cmpsl
pop
sbb
out
cmp
jecxz
xor
or
or
out
push
jno
jle
test
adc
xor
mov
sub
lods
inc
xor
stc
jno
ret
bound
ds
mov
mov
xor
pusha
xor
into
mov
mov
dec
pop
loopne
icebp
test
push
pop
mov
js
pop
and
cmp
or
pop
xor
cmc
test
lds
sbb
mov
jecxz
repnz
rcll
mov
test
xchg
xchg
mulb
xchg
jns
stos
push
test
icebp
xchg
sbb
fucomp
push
clc
enter
jmp
sub
cli
pop
lret
push
and
xchg
adc
stc
aad
int3
mov
adc
cmpsb
and
test
jmp
into
or
jmp
leave
cmp
call
pop
xchg
insb
aaa
xchg
into
cmpsb
push
mov
cs
inc
mov
mov
pop
and
inc
add
in
fs
jl
lock
in
mov
testb
popa
jl
sahf
mov
shr
sbb
mov
cld
or
insl
repz
push
clc
loopne
add
lock
sarl
je
sub
pop
push
jmp
adc
jae
outsl
mov
repnz
dec
adc
add
fcoml
inc
push
dec
pop
or
lcall
int
pop
stos
adc
jne,pt
fdiv
lahf
lret
adc
pop
pop
mov
sub
xchg
jns
add
dec
scas
add
dec
or
outsb
mov
or
jae
cmp
mov
je
cltd
lods
sbb
cmp
xorb
mov
js
xchg
ficoms
call
gs
inc
sti
fs
inc
mov
xor
push
fidivrl
sahf
push
dec
or
xchg
or
in
icebp
sbb
mov
sarb
icebp
pop
mov
pusha
jns
xor
lods
sbb
enter
and
popa
shlb
push
mov
inc
mov
jl
push
in
inc
xor
pop
test
lret
shl
cltd
fst
and
mov
fisubrl
cmpsl
and
or
stos
jle
shll
jmp
pop
xor
mov
pop
pop
xor
add
mov
mov
sub
push
leave
mov
push
cmp
xorl
loop
shl
cltd
inc
xor
xchg
xchg
mov
xchg
je
xor
xchg
cwtl
push
xchg
imull
cmpsl
mov
lahf
aaa
dec
ljmp
adc
dec
push
inc
pusha
loope
call
push
int
xor
inc
sar
pop
ja
push
xor
and
and
add
dec
je
popf
fld
push
dec
push
cmpsb
pushf
sbb
addr16
push
lods
call
loopew
outsl
bound
fidivl
jle
push
add
jns
or
movsb
dec
jecxz
push
adc
sbb
and
pop
or
xchg
cwtl
movsl
insb
int3
add
push
mov
out
loope
jo
data16
insb
cmpsb
shrb
in
adc
pop
xchg
and
sub
mov
jg
pop
cmp
inc
add
mov
test
mov
jmp
push
inc
fs
test
jg
adc
push
je
xor
rolb
fists
cmp
fwait
cmp
popa
shll
adc
jmp
sub
xchg
dec
xchg
repnz
fsubs
inc
mov
stc
insl
pop
js
push
test
test
adc
outsl
jmp
je
or
sbb
ss
or
js
fcomip
add
mov
ret
sbb
mov
sub
sbb
jno
xchg
leave
aaa
sub
fsubl
mov
dec
roll
mov
sahf
mov
jmp
sti
jns
mov
push
lret
call
mov
push
jg
incb
mov
push
jnp
cltd
das
cmp
js
or
mov
xchg
pop
cwtl
mov
stos
rcll
jb
enter
pop
mov
pop
and
or
insb
sub
or
cmp
int
rclb
xor
dec
mov
shrb
sbb
mov
inc
jns
add
push
pop
push
and
scas
popa
jp
xlat
jnp
in
addl
arpl
test
frstor
sbb
movsb
rolb
pop
outsb
mov
mov
andb
xor
push
fucom
jbe
outsl
es
pop
dec
ss
or
out
hlt
femms
insb
les
daa
sub
out
and
xorb
or
mov
shlb
cmp
sbb
sbb
mov
xchg
lods
fisubrs
xor
mov
jp
dec
icebp
jmp
push
and
ljmp
lret
jle
insb
cmp
fxch
popa
mov
mov
add
sbb
adc
ret
fmull
jns
xchg
xor
xor
es
imul
sbb
mov
mov
mov
add
pop
popl
mov
in
sar
call
jnp
imul
xchg
je
stc
addb
out
loop
add
lea
push
mov
and
test
into
xchg
inc
add
movsl
sahf
xchg
outsb
dec
xchg
add
dec
loopne
sub
mov
movsl
pop
test
rorl
cmp
mov
stos
cld
cli
add
subl
push
push
lds
or
xor
mov
inc
mov
orb
cbtw
pop
push
xchg
sub
mov
jo
mov
cltd
sarb
addr16
pop
cwtl
lods
add
daa
sbb
and
cltd
xchg
pop
add
cmp
sub
and
dec
jae
sub
enter
dec
idivl
rclb
inc
mov
jmp
push
iret
loop
mov
repnz
mov
add
pop
push
mov
scas
popa
sub
add
push
cld
es
jno
pop
jmp
stc
mov
lcall
arpl
es
mov
fwait
notl
mov
rcr
ret
mov
das
mov
jae
or
rcrl
icebp
loopne
mov
fldenv
mov
nop
ja
sti
pop
jge
pushf
dec
in
dec
js
jge
shll
pushf
gs
mov
xorl
lods
or
or
sbb
mov
jae
in
mov
push
fsubrs
push
mov
xor
or
imul
scas
loop
or
stos
mov
mov
daa
stos
fcmovu
in
add
ja
sub
push
push
jp
sbb
cmp
insb
aad
cmpsl
adc
cwtl
add
enter
clc
in
push
jl
daa
sub
pop
xor
ret
shlb
cli
loope
xor
out
adc
les
add
jmp
sti
jne
pop
pop
xorb
xchg
xchg
pusha
shlb
iret
jge
out
gs
mov
push
dec
add
push
jo
sub
movsl
fimuls
xor
adc
xchg
mov
mov
lds
lock
ffreep
ljmp
test
push
push
mov
jl
pushf
imul
push
xchg
add
xchg
jmpw
in
dec
in
pusha
nop
mov
xor
mov
and
shll
cld
cld
test
shlb
push
jl
xchg
hlt
pop
mov
mov
out
jmp
add
addr16
add
mov
les
or
pop
loopne
mov
lock
sbb
cmp
add
and
jbe
rep
in
test
stos
adc
inc
xchg
pop
das
out
inc
rol
push
push
mov
retw
gs
enter
push
stc
popf
nop
inc
mov
movsl
rcrl
cs
xor
sti
add
mov
and
sbb
sub
test
das
inc
jno
and
dec
js
lods
lods
in
xchg
call
sahf
and
ds
ds
or
xlat
push
jle
fbld
sbb
stc
xchg
jbe
pop
aad
jno
jle
movsb
int
pop
add
jns
inc
movl
outsl
lcall
inc
inc
jp
inc
pop
out
out
sub
pop
cmp
cld
xchg
pop
mov
fsts
and
push
xchg
cmpl
hlt
mov
ds
or
mov
xor
lcall
mov
sub
xor
mov
push
dec
dec
repz
cmp
xchg
push
aaa
ja
mov
nop
std
in
int
dec
jmp
movsb
outsl
cmp
mov
addr16
aas
out
imul
nop
mov
jb
mov
jp
jno
ss
push
jno
mov
and
mov
aaa
lock
pop
and
xchg
sarl
pop
mov
mov
daa
sbb
sub
sub
dec
xchg
pop
frstor
inc
mov
fistps
push
dec
pop
sub
test
mov
jno
outsl
ljmp
xor
push
out
mov
xor
aam
ret
sub
and
pop
inc
jg
lret
popf
outsb
rcrb
pop
loopne
or
jns
pop
push
xchg
cmc
cli
sbb
testl
lods
mov
daa
mov
push
ret
jmp
cmp
lahf
cli
cltd
cmp
aad
test
xchg
xlat
mov
ss
mov
and
xor
mov
cmp
cmp
sub
rolb
movsb
jecxz
cmp
push
repnz
or
pop
fcomps
dec
jge
jbe,pn
imul
fldt
addr16
das
fistps
push
lcall
jbe
test
mov
push
xor
scas
mov
and
js
add
repz
sub
sub
into
push
push
adcb
xchg
movsb
loop
adc
clc
jl
mov
ficomps
push
jmp
pop
push
daa
add
adc
out
out
mov
and
ja
aaa
in
scas
pop
push
cli
pushf
xchg
inc
ret
jo
stc
scas
fadd
push
pop
mov
jp
cmpsb
hlt
xchg
add
cs
cmp
pop
rol
sahf
fildll
xchg
sbb
pop
loop
and
mov
sub
dec
push
mov
imul
push
cli
outsb
dec
bound
shlb
dec
jg
sbb
mov
data16
xchg
push
jp
shll
cmp
pop
into
and
fnsave
lcall
shlb
out
cmpsl
adc
inc
jae
lret
sub
or
push
cltd
mov
jle
ficoml
fiadds
sub
mov
jl
add
in
pushf
data16
jno
mov
sub
or
xchg
xchg
leave
mov
cmp
mov
inc
jae
lea
rorl
cwtl
jecxz
mov
out
orb
adc
inc
sub
inc
test
inc
fiaddl
mov
int
pop
outsb
mov
bound
movsl
mov
xchg
inc
jecxz
fcmovbe
jns
outsb
ss
sbb
xchg
into
ret
inc
lahf
lret
in
stc
stos
inc
adc
scas
out
jp
rcll
cmpsb
mov
pop
sbb
dec
mov
inc
repnz
aam
mov
mov
sbb
xchg
mov
jb
int3
dec
add
imul
sbbb
jle
push
loopne
push
fcomps
std
or
mov
xor
lret
or
cli
jne
pop
sbb
in
negb
pop
inc
or
test
mov
cmp
jbe
fidivrs
insl
jl
out
mov
lods
js
out
cmp
jae
push
cmp
xchg
into
in
sti
aaa
jmp
insl
rcrb
arpl
xchg
xor
lcall
xchg
mov
jns
dec
cli
sahf
imul
push
sahf
inc
imul
and
and
mov
lcall
push
push
add
in
into
mov
cmpsl
jo
inc
cmpsb
scas
pop
addb
jb
and
push
in
jle
pop
xchg
sub
push
xor
jb
mov
pop
in
shufps
fwait
pop
sub
xchg
outsb
push
mov
jecxz
aaa
jns
pop
cmp
push
out
pop
test
dec
add
cmp
cmp
pop
ficoms
push
xchg
push
aaa
push
pop
stos
push
push
dec
adc
in
xchg
jnp
pop
movsl
ja
sub
rcrb
outsl
sbb
test
dec
jmp
pop
push
pop
lahf
es
popf
ja
cmpsl
insb
movsl
sbb
mov
cmp
cmpsl
xor
jmp
hlt
cmpsl
stos
lods
push
push
adc
cltd
repz
bswap
xchg
test
jle
je
xchg
cmp
jl
xchg
fwait
or
dec
fstpt
jnp
test
mov
xor
ja
xlat
aaa
test
scas
push
in
inc
in
popa
push
fstpl
fiadds
lock
jg
dec
testl
pop
mov
sti
inc
inc
push
clc
pop
mov
in
ret
mov
lods
shlb
push
pop
and
daa
lret
xchg
jns
fldt
or
cmp
mov
and
add
cmp
cmp
in
add
xor
js
imul
hlt
mov
sbb
xchg
xor
repnz
stos
dec
jge
xchg
pop
leave
pop
mov
outsb
push
push
fisttpl
jnp
mov
or
cwtl
test
lcall
imul
sbb
sub
adc
adc
sub
test
iret
popf
mov
add
aaa
jge
mov
push
sbb
pusha
jae
or
sbb
pusha
jge
movsl
inc
adc
cld
lods
imul
fsubs
out
pop
add
adc
mov
adc
sbb
mov
xor
in
or
pop
sub
lea
out
into
ret
cmp
mov
jno
hlt
jbe
int3
and
mov
mov
sbb
dec
mov
push
add
jns
inc
inc
repz
cmp
cmp
fcompl
ja
stc
ja
les
fnstsw
fstpl
fwait
xor
lret
sbb
or
jge
mov
jg
hlt
mov
nopl
test
cmp
pop
loop
sbb
pop
lcall
shrb
lods
out
sbb
inc
add
push
pusha
insl
pop
sbb
mov
adcl
popa
cmpsb
mov
sti
stos
pop
mov
enter
mov
mov
dec
mov
or
mov
lret
mov
mov
sbb
scas
movsl
pusha
outsl
test
stos
pop
mov
out
jno
loop
jmp
add
mov
push
fs
jo
outsb
mov
xchg
dec
push
or
movl
sahf
mov
xchg
sbb
adc
imul
gs
cmp
in
repz
mov
add
ljmp
jecxz
je
push
xchg
test
mov
les
mov
jbe
cli
stc
stos
sub
stos
icebp
sub
inc
adc
jns
imul
jne
pop
mov
xor
adc
jnp
out
cltd
adc
or
sysenter
pushf
loop
jmp
out
ret
fisubl
fbld
push
rcr
xchg
repnz
pop
pop
dec
push
aam
roll
loope
mov
mov
arpl
mov
lret
scas
jb
add
mov
cmp
pop
iret
mov
mov
popa
clc
shlb
shrl
xchg
or
xchg
insl
aaa
sbb
insl
or
mov
inc
jbe
cmc
mov
in
fnstsw
bound
or
mov
xchg
es
cmpsl
negb
cld
scas
mov
outsl
mov
pop
out
rcll
xor
outsl
orb
mov
mov
addl
popf
mov
xchg
cmpsb
sub
adcl
jns
arpl
out
gs
push
notb
jmp
push
iret
pop
je
and
leave
fistps
sub
or
mov
gs
repnz
int
and
mov
inc
cld
xor
xor
pop
mov
jbe
mov
cmp
incl
stos
adc
jno
imul
sub
or
pop
sub
in
andl
sub
inc
mov
mov
je
loopne
add
cld
push
lock
lods
jge
fldenv
movsb
push
xchg
xchg
int
gs
int3
pop
pop
enter
sub
or
push
add
and
sub
adc
push
dec
jmp
mov
lea
imul
mov
test
inc
mov
insl
ljmp
testl
adc
push
jno
in
xor
cmp
xchg
sahf
inc
in
rorb
jbe
loopne
imul
aas
sahf
faddl
push
out
mov
or
push
fbstp
xor
subb
iret
les
stos
cmp
repnz
cmp
push
lock
inc
imul
add
inc
dec
dec
ja
xor
das
push
cmp
mov
or
add
faddp
popa
enter
pushf
push
dec
aas
insl
jns
lods
scas
adc
out
ljmp
pop
sbb
ret
or
sbb
in
int
or
addr16
repz
fdivrs
cmp
and
cmp
xlat
aam
lods
outsb
cmp
adc
dec
out
push
cmp
cmpsl
inc
je
ljmp
das
adc
outsb
pushf
dec
pop
pop
xor
stc
sti
push
sarb
mov
mov
les
divb
dec
mov
lcall
cltd
in
addr16
cmp
je
call
xor
push
xchg
loopne
push
mov
dec
and
shrb
jnp
or
jmp
pop
sub
push
mov
cs
mov
adc
faddp
xchg
neg
push
dec
xchg
adc
or
sub
dec
xchg
lods
add
rcr
mov
jno
adc
cmpsl
lret
loop
mov
sub
leave
subl
shlb
fstp
sub
or
loop
in
popf
inc
mull
mov
pushf
jle
shr
sbb
add
insb
repz
jnp
sub
addr16
test
mov
jb
jo
mov
adc
lods
arpl
cmp
icebp
inc
jmp
ret
push
cmp
int
mov
pop
add
mov
add
add
xchg
frstor
push
inc
jge
ljmp
sub
test
or
jno
mov
xor
or
sbb
jmp
jmp
xor
outsl
add
and
inc
test
add
fildll
and
lea
outsb
lahf
icebp
repz
inc
sbb
out
stos
inc
data16
pushf
out
int
rcrl
mov
test
jae
and
fsubl
cli
lcall
pop
pushf
push
xchg
fcomp
ljmp
int3
call
mov
jecxz
mov
pop
inc
jne
or
pop
movsl
or
rorb
inc
stos
or
mov
ljmp
mov
mov
sbb
ret
pop
sub
push
out
push
and
out
int
scas
orl
pop
jl
je
push
push
mov
pop
and
stos
addr16
dec
sub
pop
testb
cld
push
pushf
nop
jg
loop
lahf
es
in
xchg
adc
mov
xor
int
fwait
sbb
or
ljmp
cmp
pop
push
xchg
add
movaps
cmpb
or
mov
cs
xchg
gs
fs
xor
add
push
and
push
add
in
add
jo
or
push
insb
xchg
lcall
jg
mov
inc
mov
adc
cmc
jnp
imul
imul
jns
js
hlt
lret
add
inc
dec
add
dec
dec
sub
mov
jb
out
aaa
shl
add
pusha
in
cmp
data16
adc
fs
and
or
addps
mov
sub
bound
xor
bound
in
sti
clc
into
mov
cmp
stos
xchg
fwait
jo
gs
cmp
in
and
add
sbb
fisttpll
pushl
repz
xchg
adc
and
dec
clc
cmpsb
dec
mov
xor
lret
fwait
int
adc
mov
add
mov
comiss
dec
sbb
sub
mov
push
shrl
push
sub
lods
push
lds
sbb
out
shl
in
mov
popa
inc
jae
inc
in
sub
fcoms
mov
loop
cmp
mov
jne
inc
jecxz
pushf
and
mov
xor
adc
and
cli
mov
push
stos
mov
adc
das
movsb
inc
xor
pusha
rcrb
lock
das
movb
loop
mov
or
or
fdivs
bound
stos
push
les
inc
xchg
test
fstpt
jnp
pop
sbb
arpl
jmp
test
sub
repz
loope
shll
lods
mov
jmp
mov
add
out
fdivrl
jb
jae
nop
jns
mov
data16
lea
jmp
mov
inc
dec
adc
stos
fisubl
jl
sub
add
imul
in
sbb
stos
mov
jle
push
xlat
and
hlt
lods
addl
pop
cmpl
sbb
cmp
jp
inc
shll
test
leave
in
mov
mov
scas
into
out
sub
mov
in
mov
push
outsl
mov
sub
test
iret
out
imul
xorl
fisttps
add
mov
pop
cmp
add
xorl
sbb
jns
pusha
repz
or
in
dec
or
iret
addr16
inc
shlb
xchg
jmp
scas
cmp
mov
adc
jnp
dec
or
or
mulb
jge
aam
lret
cli
movsl
mov
mov
inc
hlt
les
mov
popa
fadd
addr16
fisttps
push
std
push
mov
sbb
test
xlat
test
test
loop
xchg
cltd
inc
leave
mov
fbstp
inc
pop
mov
cmp
sub
cwtl
pop
insb
lock
ds
jl
insb
adc
fimuls
loope
call
jno
jmp
lret
das
push
xchg
xchg
or
sbb
test
xchg
into
ss
test
jmp
in
mov
stos
lods
mov
mov
cmpsb
mov
loopne
aad
subb
xchg
sub
cld
xchg
xchg
mov
in
xchg
cli
cltd
fisubrs
mov
ss
and
mov
or
shll
mov
pop
jmp
inc
es
shll
out
add
inc
daa
mov
mov
cwtl
dec
test
inc
cmp
dec
cmp
movsl
mov
orl
add
mov
roll
ss
cli
jl
icebp
and
sub
xchg
inc
adc
insl
pop
or
xchg
test
sbbl
ja
imul
and
fadd
test
in
leave
fisubrs
sub
stos
leave
jb
jbe
outsl
add
movsb
sub
xchg
jecxz
and
mov
and
jb
shrb
iret
jne
xchg
jne
call
cmp
xchg
jae
movsl
mov
dec
or
loopne
stc
arpl
sub
mov
ficompl
test
stos
mov
cmpsb
cmpsb
ror
addb
pushf
mov
jecxz
mov
test
pop
jne
push
dec
or
mov
dec
sbb
push
xchg
gs
inc
das
popa
repnz
pop
data16
lahf
xor
in
shlb
mov
loop
and
pop
xchg
push
mov
jmp
inc
int
inc
repz
fnsave
pop
push
cltd
sub
aad
insb
mov
out
fcoml
lods
js
cmp
mov
ror
mov
ror
ja
sbbb
add
and
mov
xchg
push
mov
inc
sbb
out
mov
mov
dec
dec
add
xchg
test
fs
mov
gs
das
mov
sahf
xchg
fldl
jo
pop
cmpsl
ret
or
mov
lret
test
pop
mov
mov
out
mov
mov
xor
and
imul
pop
xchg
rcll
mov
cmp
inc
sbb
movsl
xlat
cmp
and
test
sub
mov
jno
ja
mov
sbb
addb
add
mov
xlat
mov
or
aad
xchg
test
imul
test
push
push
push
repz
xor
lds
fwait
mov
inc
xchg
in
jg
mov
cmp
test
movsb
aaa
xor
xor
hlt
pushf
xchg
mov
xchg
mov
push
mov
sbb
and
sbb
push
push
mov
fdivs
fldt
adc
inc
pop
pop
add
or
adc
cs
push
rclb
sbb
mov
push
inc
in
push
test
pop
mov
push
hlt
daa
aad
lret
ja
adc
push
sbb
in
outsb
add
cltd
sub
iret
jp
test
leave
and
movzwl
mov
mov
sbb
lods
push
vcvtpd2ps
xchg
std
ss
test
adc
xchg
xchg
mov
or
das
cli
pop
loop
shlb
lret
ljmp
xor
ret
and
jg
xchg
inc
or
and
dec
lcall
movsb
or
stc
or
inc
inc
shlb
jo
pop
popf
fldcw
cmp
jmp
xor
std
pop
or
sbb
dec
bound
and
mov
add
and
adc
add
stos
outsl
movb
adc
stc
sbb
ret
push
xchg
sbb
sub
adcb
leave
mov
fucom
call
cwtl
push
repnz
push
lret
orb
sbb
jle
dec
pop
jg
xor
jl
int
scas
fcmovnbe
mov
outsl
sbbb
xor
out
sub
shll
outsl
xor
shrb
mov
sub
pop
xchg
rol
imul
js
push
jg,pt
add
xorb
mov
addb
testb
mov
adc
cmp
cmpsl
xchg
rcll
stos
pop
fcmovu
shrb
sahf
mov
imul
inc
mov
icebp
mov
mov
adc
cmp
mov
test
hlt
mov
xor
scas
outsb
cmpsl
mov
sahf
imul
mov
fbld
lret
std
xchg
les
addl
js
lcall
clc
cmp
xchg
lret
les
push
pop
cmp
aam
dec
je
mov
jp
das
stc
mov
jecxz
call
push
xchg
cs
push
shll
aas
pop
xor
cmpsb
add
inc
push
insl
mov
repz
jle
mov
repz
push
cwtl
out
inc
sti
fsts
lock
mov
sar
push
adc
jne
lods
in
xlat
dec
sub
out
ltr
stos
fildll
dec
xchg
jp
sub
imul
call
mov
jb
iret
icebp
pop
sarb
lcall
add
add
inc
push
loopne
xchg
mov
xchg
xchg
xor
add
xchg
xchg
xchg
xor
in
mov
fsubrs
hlt
pop
sub
cmp
cli
jle
mov
jns
lret
gs
je
incb
push
push
or
add
pop
out
mov
jo
adc
aaa
hlt
insb
mov
xchg
inc
jl
pop
pop
dec
push
fs
dec
push
dec
lds
or
pop
sbb
mov
pop
adc
cwtl
test
sub
aam
xor
loope
movsl
sti
and
cmp
inc
std
shr
push
sub
cmp
or
xchg
xchg
ret
das
mov
inc
xchg
movl
inc
xor
popf
lea
jno
mov
or
or
and
inc
sub
pop
clc
rclb
cmp
cwtl
mov
cmc
insl
sbb
adc
pusha
push
push
inc
adc
cli
aad
mov
and
repz
push
nop
daa
sbb
jb
and
jle
es
in
repnz
or
pop
repnz
pop
jmp
push
xchg
mov
mov
cmc
dec
fsubrl
inc
and
test
and
ret
jbe
pop
ret
imul
inc
push
jae
std
repnz
mov
jle
out
mov
fcomip
pop
xor
cmpsl
cmp
lea
fcmovne
insl
ret
xor
xchg
inc
dec
insl
dec
mov
popa
out
or
xor
or
fcmovb
rcrb
xor
rclb
add
push
jno
jnp
movsb
mov
test
push
cmp
jo
xchg
call
and
add
mov
sbb
cli
push
lods
jp
lods
add
mov
outsb
or
scas
cltd
iret
xchg
repz
jne
push
sbb
pop
movsb
inc
fbld
or
std
pop
hlt
pop
sbb
leave
jnp
add
dec
xchg
cmpsb
jmp
idiv
lods
adc
shr
loop
and
aam
cmp
testl
lret
dec
xlat
xorb
adcl
andl
jns
mov
pop
in
jns
cmp
inc
cmpsb
sub
loope
loop
lea
loopne
test
daa
sub
xchg
dec
cmp
mov
sbb
loopne
bound
add
rol
add
mov
adc
add
lds
push
push
popf
mov
stos
loope
les
in
aam
je
push
jns
mov
cmpsb
jmp
jb
addr16
pop
dec
filds
stos
mov
xchg
xchg
push
push
sti
stos
das
mov
jmp
stos
js
bound
xor
outsb
cmp
lcall
ljmp
mov
outsl
push
daa
mov
sbb
pop
push
mov
push
jecxz
roll
into
push
jmp
sbb
insl
icebp
adc
out
nop
aas
ljmp
push
fistpll
sbb
mov
inc
cmp
push
nop
lret
jecxz
sub
adc
jle
sub
aaa
lret
stos
stc
cmp
pop
sbb
add
mov
pop
shrl
mov
data16
mov
cli
addr16
or
ret
sub
cs
pop
jge
loopne
xchg
rcrl
out
xchg
fabs
sub
pop
and
icebp
fnsave
int3
addr16
cmp
stos
fldt
jl
sbb
add
and
lret
lds
sbb
pop
nop
aas
daa
fdivl
js
inc
xchg
out
loopne
jl
dec
sahf
dec
das
outsl
into
hlt
sahf
movsl
jae
mov
sbb
ficoms
scas
cmp
xor
into
in
jmp
cltd
stos
sahf
mov
xor
push
sub
mov
imul
lret
inc
stos
popf
mov
out
xor
xor
adc
jb
loope
in
mov
adc
jle
and
jp
dec
lock
scas
xchg
lret
pop
mov
sub
imul
stc
shrl
mov
jnp
or
push
orb
jno
in
out
xchg
icebp
add
pop
sbbl
cs
push
pop
mov
jno
xlat
jecxz
jb
xchg
adc
cs
shrb
xor
fwait
je
jno
aas
xchg
fwait
shl
xchg
or
jmp
aaa
pop
in
cmp
xor
sti
hlt
mov
arpl
sub
xor
out
mov
lds
sub
xlat
clc
dec
adc
xor
into
call
pop
stos
rorb
pop
add
and
mov
dec
add
aam
inc
add
js
mov
dec
adc
or
and
inc
and
push
lcall
jle
fidivl
and
sub
push
mov
push
mov
mov
cmp
jp
xchg
mov
sarl
loope
push
ljmp
mov
or
adc
push
sahf
pop
arpl
mov
pop
ds
arpl
mov
mov
cmp
mov
ret
adc
mov
test
fbstp
xchg
or
and
rorl
push
into
cmp
mov
mov
rcll
aad
xor
push
movsl
addb
test
pop
jb
mov
scas
out
push
add
aas
dec
sahf
mov
pop
xchg
pop
fsubs
mov
mov
pop
add
imul
push
sbb
xchg
add
cmc
mov
jne
xchg
mov
mov
mov
add
mov
inc
sahf
aas
mov
fdivl
sub
lods
xchg
dec
cltd
rcrl
popa
sar
mov
or
jo
iret
loope
adc
lea
je
xchg
je
sub
jae
cmp
mov
xor
add
xor
dec
icebp
stos
shll
jbe
test
out
fs
mov
dec
lea
repz
dec
mov
mov
es
leave
std
cmp
rclb
dec
sbb
sub
pop
jle
xor
loopne
push
lds
addr16
les
enter
stos
jg
cmp
mov
mov
push
stos
fmul
out
mov
adc
xchg
cld
sub
and
xchg
xor
mov
imul
inc
or
loopne
bnd
mov
dec
popa
pop
shrl
mov
leave
inc
cmp
jl
xor
adc
mov
fcmovnu
xchg
sbbl
je
cmp
insl
xlat
or
les
add
mov
jge
sub
pop
inc
add
outsl
xchg
aaa
add
dec
inc
mov
dec
roll
imul
in
sub
mov
shl
movsl
loop
lahf
out
fs
push
repz
pop
leave
fnstcw
out
mov
xchg
and
outsb
push
pop
or
or
xor
loopne
mov
push
je
xor
mov
pop
popa
sub
mov
outsl
cmc
add
nop
mov
movsl
adc
fildl
rolb
xchg
mov
loopne
jp
jnp
mov
int3
aad
jno
adc
mov
lcall
stc
jb
testl
hlt
fsub
shll
movsb
xchg
ja
add
push
adc
and
or
inc
jle
dec
and
dec
xor
int
jbe
outsb
and
sub
xchg
mov
mov
inc
dec
pop
adc
cltd
bound
cmp
push
lret
sub
addb
stos
cmp
les
inc
cmp
pop
inc
inc
mov
out
lret
ss
and
and
push
pop
or
psubusb
mov
inc
ljmp
or
mov
dec
mov
xor
ss
push
mov
repnz
and
cmp
sub
jl
adc
and
mov
xor
and
rol
out
push
mov
push
movsl
aad
out
push
or
and
aad
mov
dec
mov
mov
add
movsl
push
fistps
js
jbe
jg
xchg
push
sbb
into
rcrl
mov
insb
jg
std
cld
jno
xchg
stc
xchg
mov
jno
xor
cmp
inc
jnp
push
jg
mov
in
sub
push
push
jb
pop
enter
push
dec
sub
jg
out
xchg
xor
cmpb
pusha
das
and
lods
jge
stc
aaa
mov
ret
es
out
push
adc
add
jge
dec
aaa
lret
adc
ljmp
add
sarl
mov
fists
iret
lret
push
dec
int
push
mov
xor
or
xor
jno
fs
push
jns
jmp
jp
sub
sbb
pop
inc
dec
add
data16
int
inc
test
dec
mov
xchg
or
aas
mov
es
sti
xchg
push
pop
stos
cli
ja
fs
inc
push
sub
ret
clc
in
xchg
shlb
xchg
xor
or
movb
test
and
arpl
xor
scas
pop
shrb
mov
cs
daa
mov
fs
cmp
out
add
dec
insb
aas
xchg
add
pop
push
test
push
xchg
pop
or
and
xchg
jmp
clc
das
addr16
loopne
es
fmulp
sub
leave
inc
sbb
inc
imul
sub
into
fistpll
das
xor
jae
outsl
sbb
xchg
stos
lahf
and
push
sahf
outsb
data16
popf
add
scas
dec
jno
push
sbb
shlb
sarb
xor
sbb
cmp
xchg
push
testl
lods
lods
das
fisubl
push
aad
jmp
mov
add
addb
popf
stc
mov
test
bound
jp
std
sbb
loop
arpl
mov
daa
or
cmpb
mov
mov
daa
sbb
jecxz
aad
sahf
xchg
or
cmpsl
push
sbb
xor
jnp
mov
mov
push
aaa
fwait
sbb
fadd
sbb
jno
nop
outsb
es
imul
sbb
test
cmp
mov
repz
xor
jl
cli
xor
pop
pop
xchg
mov
pop
loopne
jo
cwtl
or
xor
aas
cmpsl
mov
mov
repnz
call
sahf
out
clc
int3
jge
pop
mov
sub
int3
test
inc
insl
stos
xchg
int
dec
insb
cwtl
sti
into
aaa
xor
jb
adc
xlat
das
push
mov
pushf
inc
xlat
jg
daa
subb
popf
jo
sbb
mov
and
jge
sbb
sub
mov
adc
out
adc
loopne
cltd
stos
lret
or
rorl
repz
pop
mov
jecxz
popa
xor
ss
imul
push
and
lahf
push
or
mov
in
cmp
mov
out
je
dec
notb
mov
or
xlat
mov
arpl
mov
mov
push
inc
in
xor
jecxz
sbb
int
cld
into
jo
jbe
and
insb
daa
add
in
stos
pop
fadds
mov
jmp
add
xor
mov
aas
sbb
mov
ds
sub
mov
mull
adc
mov
out
outsl
adc
incb
iret
cwtl
jns
adc
pop
pop
jp
pusha
cmp
cli
and
cltd
inc
orl
nop
repnz
cltd
pop
sbb
stos
test
adc
out
ret
cmc
std
xchg
loope
nop
dec
fwait
pop
cmpsl
std
add
mov
jecxz
xor
mov
push
pop
in
pop
xchg
lahf
sti
xchg
dec
enter
pushf
xor
xor
cmc
add
aaa
adc
inc
mov
hlt
lods
jb
inc
xor
js
fcmovbe
jle
iret
and
xor
testb
lods
jg,pt
and
jbe
sbb
in
sub
and
movsb
loop
in
and
cmpsl
shr
xorl
push
in
sbb
loop
xor
add
xor
dec
xchg
lods
xchg
mov
or
in
dec
shll
adc
repz
cmp
cld
pop
loope
sarl
mov
imulb
and
jp
lock
scas
mov
xor
fmuls
sub
arpl
cmp
jge
pop
sbb
push
and
adc
in
shl
adc
mov
cld
lods
in
push
inc
cmpsl
call
in
mov
clc
imul
pop
mov
and
cltd
dec
mov
adc
fiadds
cltd
sub
test
or
mov
int3
cmc
or
inc
lea
jo
cmp
and
push
mov
jmp
dec
xorl
out
daa
rclb
inc
loope
push
sub
mov
aam
sbb
test
inc
sbbb
xlat
xor
sets
mov
cmp
jbe
test
rorb
insl
cmc
sbb
sbb
sbb
mov
mov
test
dec
pop
inc
add
test
add
mov
sbb
jae
xor
inc
cmc
js
iret
sbb
cld
mov
push
jp
inc
cmpsl
dec
xlat
imul
in
push
mov
gs
cltd
mov
pop
cwtl
stc
pop
xchg
arpl
mov
pop
das
aaa
cmp
fmull
and
xor
scas
pop
mov
je
dec
mov
mov
push
std
mov
xor
sub
gs
scas
push
xlat
enter
hlt
popf
daa
outsb
and
or
leave
iret
mov
add
cmc
std
ret
arpl
mov
mov
cwtl
xchg
cmpsl
dec
inc
lahf
or
insl
push
testl
ret
clc
or
mov
inc
jbe
in
push
xor
jge
mov
xlat
push
divb
mov
in
clc
loop
xchg
ret
xor
in
mov
mov
lods
xor
das
mov
leave
test
das
mov
lods
and
pop
mov
lea
xor
inc
dec
inc
cmpsb
mov
add
jo
ret
addr16
cmpl
and
test
jge,pt
adc
inc
das
adc
lods
xchg
ret
adc
into
hlt
popa
lahf
ljmp
inc
mov
and
sahf
sub
mov
lds
sbb
jno
mov
ss
jecxz
push
xchg
pushf
pop
pusha
xchg
movsl
dec
adc
ds
dec
add
lds
popf
into
scas
sub
nop
cli
je
jb
insl
adc
in
pop
lcall
push
clc
jp,pn
mov
notl
cmp
push
dec
mov
jb
dec
fs
test
movsl
mov
fists
sbbl
push
add
stos
rcrl
mov
loopne
push
adc
shll
inc
addl
xchg
jmp
fs
lea
call
add
bound
mov
faddl
aaa
mov
mov
mov
aas
cmp
shlb
mov
mov
xor
test
sbb
addl
xchg
adc
ds
cmp
and
in
sbb
xor
insl
pop
xor
cmpsl
or
outsl
aas
xchg
lds
and
add
push
test
out
in
outsb
fcoms
jg
insl
mov
inc
stc
sahf
xchg
mov
sub
mov
and
jnp
sbb
push
aas
das
stos
daa
or
addr16
jg
ljmp
out
cltd
push
repnz
insl
dec
mov
test
loopne
cmc
and
popa
sahf
icebp
filds
xchg
icebp
or
das
push
dec
sbb
adc
mov
bnd
add
or
or
inc
xor
xor
mov
xor
shlb
shlb
jno
pop
test
sbb
push
sub
and
jge
mov
xlat
loopne
and
xchg
push
xchg
lret
aad
xchg
rol
movsb
cmp
stos
out
pop
outsl
leave
adc
fisubrl
jg
jno
and
adc
lods
dec
xor
mov
dec
imul
and
push
stos
sti
test
mov
inc
cmp
xor
pop
cmc
loope
mov
adcb
add
fs
or
mov
dec
jnp
popa
pop
in
clc
imul
shlb
imul
fdivs
inc
add
pop
push
fdivs
push
shll
pop
mov
push
vmovmskps
mov
scas
xchg
jbe
jo
repnz
js
movsl
xchg
and
leave
adc
in
mov
and
cmp
ja
rcr
popf
sub
sbb
mov
jge
add
jge
jns
mov
adc
sub
movsb
loopne
icebp
rcrl
jl
sbb
inc
push
test
sbb
mov
mov
inc
fs
out
lret
sub
sbb
mov
out
mov
add
dec
add
bound
sub
scas
sub
cmp
stos
sub
inc
ss
imul
fisubrs
repz
ret
adc
scas
mov
fisubrs
rcll
test
dec
fcompl
sub
xor
je
lods
jns
or
nop
and
icebp
jo
lods
jmp
cmp
in
sub
pop
cmp
mov
sti
roll
xchg
sbb
mov
pop
mov
sbb
aam
jbe
jb
xor
sarl
bound
ja
mul
aad
jae
inc
mov
sub
lods
ljmp
out
stos
fsubrp
push
popl
mov
lret
lret
sti
scas
dec
xor
cmp
pop
push
vfnmadd213ps
xor
mov
pushf
sbb
imul
pop
shll
and
int3
cbtw
idiv
test
lea
mov
cld
insl
fs
imul
dec
xchg
cmpsl
xchg
loope
repz
sbb
aaa
xor
loop
aaa
lock
mov
scas
xchg
mov
pop
std
daa
and
pop
pusha
or
mov
jbe
jb
and
mov
icebp
je
push
scas
jmp
lds
insl
jp
div
jl
inc
adc
fldenv
dec
pop
loope
movsl
jg
add
fisubrs
repz
sbb
es
icebp
or
jp
xchg
sub
mov
push
enter
out
push
cmpsl
push
sub
cmp
push
daa
out
inc
xor
stos
push
insb
rcl
movsl
scas
jae
ss
arpl
in
mov
cmp
sub
inc
push
push
mov
mov
pop
into
mov
arpl
leave
jo
lret
nop
ja
adc
or
int3
sbb
ret
mov
adc
inc
inc
xchg
aas
ss
mov
adc
and
dec
jno
leave
out
jo
scas
cmpsb
pop
mov
loope
adc
inc
imull
call
xchg
adc
jo
test
scas
or
add
out
add
loop
push
jle
or
mov
inc
sub
sbb
ja
pop
push
adc
sbbb
stos
in
fistl
subl
push
js
repnz
data16
dec
leave
xor
push
clc
mov
jg
je
gs
sahf
testb
out
pop
cmp
bound
xor
repnz
insl
and
leave
push
mov
adc
sub
decl
or
repnz
dec
mov
lods
loope
pop
mov
pop
xchg
aas
and
inc
add
dec
sub
out
inc
std
ret
adc
pusha
loope
inc
fiaddl
getsec
mov
add
sub
bnd
or
cmovne
sbb
fs
dec
push
inc
sub
pop
adc
in
xor
leave
cs
mov
dec
pop
dec
loope
das
cmp
jp
jle
pop
call
cli
adcl
jecxz
cmp
xchg
add
fisubrs
cmpsl
addl
mov
dec
mov
or
cli
arpl
xchg
clc
sub
cwtl
dec
mov
in
jnp
push
in
test
and
jbe
mov
pusha
clc
fstpl
cmp
dec
jmp
sbb
lds
xlat
mov
data16
mov
mov
out
flds
or
cmp
lods
inc
dec
hlt
inc
lret
stos
mov
push
xor
daa
pop
rcrl
movsl
daa
roll
fisttpl
ret
mov
sub
ret
adc
ret
pop
mov
loopne
adcl
pop
inc
sub
cmc
mov
mov
mov
jecxz
sub
faddl
jo
cmp
inc
xchg
sub
loope
xchg
shlb
mov
sub
mov
push
call
ret
arpl
call
inc
call
inc
cwtl
dec
and
inc
mov
xchg
test
dec
mov
clc
or
sub
and
dec
xor
pop
xchg
int
sub
add
cmp
pusha
jb
int
jo
jmp
sbb
pop
cmp
push
add
pop
xchg
mov
or
adc
cs
out
pushf
adc
xchg
dec
push
or
jo
into
mov
dec
mov
cld
in
push
ss
jno
mov
out
gs
imul
out
jecxz
add
push
cmp
rcrl
sahf
jecxz
push
push
xor
shrb
mov
lds
andb
sbb
leave
mov
add
push
xchg
sub
xchg
fldt
int
repnz
cmpsl
aad
push
out
adc
lea
bnd
pop
dec
mov
pusha
jecxz
pop
sbb
sbb
xchg
mov
bnd
pushf
aas
cmp
dec
ret
pusha
insb
aad
pusha
aad
add
in
notb
jp
in
fcoml
dec
sub
jp
scas
dec
bound
insl
xchg
xor
call
je
cmp
push
adc
xor
xor
mov
fsubs
sub
fucom
aaa
dec
mov
hlt
movsl
jmp
bound
or
cmc
jge
out
int3
xchg
mov
dec
jmp
cmpsl
dec
inc
mov
and
jg
jae
fnstenv
xchg
mov
in
pop
push
loope
shrb
addr16
divb
pop
outsl
ret
xchg
inc
jbe
xor
mov
into
nop
cld
sub
sub
imul
daa
mov
popf
sub
insb
mov
jno
lds
scas
lret
add
addr16
gs
mov
push
cmp
std
mov
pop
push
push
cmp
imul
pop
mov
mov
push
push
lock
testb
mov
jmp
ret
sbb
or
adc
shll
push
mov
xorl
mov
mov
stos
add
imul
dec
mov
xor
inc
pusha
out
sbb
cmp
xor
sbb
out
add
sub
fwait
ret
or
lock
sub
sahf
jmp
ss
aad
dec
js
gs
mov
or
mov
rorb
add
je
pop
push
push
pusha
out
pusha
clc
mov
lea
lcall
add
and
xchg
scas
shll
fmull
jbe
add
push
sbb
xchg
lods
in
lods
mov
or
push
out
xchg
addb
shl
out
sahf
inc
jno
movq
ljmp
sub
iret
dec
test
test
call
fwait
nop
aas
cli
es
insl
loope
push
bound
xor
mov
loopne
insb
dec
in
nop
cld
and
sub
push
pop
ljmp
mov
push
sahf
je
fwait
cmp
or
and
and
iret
jp
cmp
and
clc
dec
ret
adc
outsb
incb
adc
cwtl
shll
mov
popf
mov
inc
repz
cld
pop
xchg
frstor
aam
cmpsl
lret
jl
xchg
mov
dec
push
mov
xor
scas
xchg
push
leave
jns
sbb
adc
dec
push
lods
push
lret
pop
addr16
ror
cli
sbb
jl
xchg
stos
pop
loopne
mov
sbb
xchg
push
into
mov
mov
lret
adc
pop
jbe
jne
cmp
stos
cmpsb
fprem
into
repz
push
fidivrs
mov
iret
adc
pusha
pop
test
add
cmp
fstl
pop
addb
sub
mov
push
push
int3
pusha
and
mov
xchg
fdivrs
adc
movsl
pop
push
sbb
or
imul
pop
les
mov
dec
jb
push
sbb
int
xor
mov
test
xor
lret
imul
addr16
cmp
pop
xchg
cmpsl
cmp
mov
shlb
stos
cmp
rorl
pushf
ret
mov
dec
sahf
das
xchg
in
adc
movsl
jno
loope
pusha
movsb
xchg
mov
push
push
fstpt
xchg
ror
adc
je
test
pop
mov
push
xor
out
jmp
dec
pusha
lds
ljmp
sbb
inc
in
push
pop
push
xor
repnz
lock
popf
jmp
punpckldq
xchg
add
test
adc
les
push
pushl
pop
ss
repnz
inc
mov
test
cwtl
lcall
cltd
lret
js
ljmp
adc
jp
cli
mov
push
inc
push
xchg
dec
gs
jno
movsl
test
mov
mov
out
fstpt
bound
popl
or
pusha
out
insl
add
jp
cmpsb
push
nop
fbstp
jl
sub
pusha
pop
jp
out
and
jle,pt
gs
add
fsubs
imul
or
roll
arpl
lea
and
loopne
xchg
rcrl
jecxz
mov
sbb
rorb
out
negb
xor
movsb
jge
mov
cld
mov
fsubl
push
xchg
bnd
mov
mov
cli
mov
aaa
negb
xchg
inc
xor
js
dec
shlb
and
push
sbb
adc
mov
sbb
jns
fisttps
pop
cs
jb
lea
lret
mov
cmp
loope
mov
enter
xchg
adc
outsl
cmc
js
push
cmp
cmpsb
mov
hlt
dec
in
cmp
dec
sub
daa
iret
adc
das
adcl
mov
sub
push
xchg
icebp
repz
arpl
push
adc
mov
sbb
into
cmp
add
out
mov
arpl
inc
jmp
jle
lods
call
xchg
aaa
mov
mov
or
daa
fsubrs
push
mov
in
jl
movsl
jae
pop
insb
in
pushf
sub
rorb
cmp
data16
inc
clc
mov
call
jo
fs
movsbl
mov
pop
in
decb
movsl
loop
pop
fimull
inc
jbe
aas
jae
dec
sub
sub
sbb
xchg
sti
mov
sbb
add
push
lret
fimuls
or
outsl
or
adc
test
cmp
xor
dec
testb
jbe
push
inc
and
aam
jno
fsub
dec
je
in
lods
shl
icebp
mov
in
sbb
adc
lahf
jmp
inc
xchg
lods
or
lods
push
push
rcrb
inc
adc
adc
inc
lods
mov
inc
dec
jns
fldenv
mov
mov
and
lods
lret
mov
pop
insl
inc
mov
push
vrcp28ps
mov
sub
jbe
sarb
push
inc
jmp
shlb
fidivs
lahf
sbb
fstps
adc
movsb
push
add
adc
sub
fsubs
add
push
mov
movsl
and
push
and
int
mov
push
mov
lods
fwait
out
mov
sbbb
push
xchg
pop
dec
jno
adc
inc
aas
inc
fs
pushf
jge
lods
adc
dec
dec
pop
and
pushf
fsts
adc
in
and
loopne
mov
and
popf
mov
push
sbb
out
sahf
mov
push
test
jnp
sub
push
xchg
orb
adc
sbb
lods
xchg
jb
pop
insb
mov
enter
cmp
loop
push
pusha
mov
sub
sbb
inc
cmpsl
jno
loope
scas
fnstenv
and
pushf
sbb
mov
clc
mov
xor
inc
fwait
adc
inc
loopne
pop
sub
sbbb
mov
cmpl
xor
test
out
lahf
sub
out
xchg
and
mov
push
mov
jne
cmp
cmp
push
cwtl
jns
aas
xchg
stos
lds
push
dec
punpckhdq
push
leave
mov
pop
jnp
jo
ret
xor
sbbb
mov
daa
push
fisttpl
xchg
mov
xor
cmp
jmp
sti
jge
mov
xchg
rolb
cmpsl
mov
repnz
fs
adc
mov
pop
cld
aam
es
ret
js
mov
push
mov
push
mov
testl
mov
pop
cmp
xchg
incl
xchg
outsl
push
fistl
inc
xchg
lret
or
and
ret
imul
xor
or
leave
lahf
pop
inc
mov
push
pop
pop
lds
mov
push
jle
in
loop
add
mov
sar
lret
dec
stos
jbe
aaa
aam
mov
lods
leave
adc
dec
push
nopl
jno
in
mov
inc
add
and
mov
cli
dec
pop
mov
mov
push
pop
scas
jne
and
lret
pop
mov
sbb
jno
aad
mov
mov
jge
mov
xor
dec
push
pop
mov
xor
lods
in
mov
fidivs
lret
sub
mov
cmp
lea
in
mov
cmovnp
lock
mov
pop
jge
sub
pop
or
fisttpll
mov
dec
fmull
xchg
or
mov
loop
xchg
sti
ret
push
fcomps
insl
cmp
sbb
jmp
lahf
xor
pop
shlb
xor
or
fisubs
mov
jp
js
leave
fdivl
data16
les
ret
inc
nop
mov
lods
scas
xor
adc
loopne
repnz
sbbb
xchg
and
xchg
adc
xlat
add
jge
lret
inc
jg
lret
dec
adc
aas
sysexit
push
xchg
mov
pop
das
pop
daa
or
dec
or
dec
clc
adc
dec
fisubs
mov
mov
repz
mov
jle
les
adc
lea
lcall
das
in
jle
xor
outsl
fs
pushf
adc
inc
xchg
insb
addb
adc
inc
sbb
cmp
clc
std
popf
nop
ror
push
and
pop
test
sbb
mov
call
fisttpl
ror
cmpsb
rolb
mov
test
out
call
repnz
and
sub
push
out
aam
aad
lret
pusha
xor
dec
nop
push
xchg
xchg
fucomip
mov
mov
adc
xor
push
icebp
cmp
cmp
jno
xor
sub
outsb
push
xchg
fwait
das
ds
lock
lret
fcmovnu
sbb
mov
mov
dec
fisubs
cli
pop
jl
sub
cmp
dec
add
dec
xor
mov
push
stos
into
repnz
enter
fiadds
sti
mov
sbb
outsl
mov
xchg
xchg
icebp
cmp
lods
sbb
adc
lods
sub
ret
push
sbb
movsl
jp
fstpt
jg
cld
push
xor
jle
and
xchg
in
jb
hlt
push
sahf
mov
or
lock
fstpl
dec
es
mov
cmc
mov
jle
int3
mov
mov
cmpl
loop
seto
test
fldt
push
stos
sub
data16
rclb
or
xlat
push
dec
xchg
enter
add
pushf
cli
mov
sub
sbb
cmp
je
push
stos
andl
push
and
test
aam
fisubl
clc
cmp
aaa
mov
lcall
mov
pop
jb
push
mov
mov
dec
or
std
sub
mov
push
mov
add
inc
jno
push
lret
adc
ds
mov
int
subl
rcrb
inc
pop
sub
dec
imul
mov
mov
ljmp
adc
dec
jbe
xchg
mov
faddl
pop
lcall
jmp
mov
addr16
cltd
lret
cld
sub
push
sub
cld
icebp
dec
lret
mov
push
pop
jae
jbe
cmpsl
movsb
xor
test
jo
push
sub
and
in
or
enter
orb
mov
and
mov
fsubl
pop
cmp
cli
jg
add
lods
cmp
and
push
int
out
test
daa
mov
pop
sti
jns
cmp
sub
jle
sbb
cmp
out
mov
pop
add
cmp
mov
inc
sbb
mov
inc
jnp
sahf
lcall
cwtl
xchg
dec
sbb
sbb
mov
out
fdivs
pop
push
nop
lahf
adc
or
xchg
dec
xchg
aas
jns
mov
mov
xchg
loop
aas
out
and
lods
fbstp
daa
popf
cli
ret
icebp
movsl
add
mov
insl
cmp
pop
pop
lahf
ret
dec
adc
ror
xchg
cld
stc
mov
push
ljmp
xchg
xor
test
popf
outsb
jge
sahf
or
pop
imul
lea
cmpsl
xchg
les
sbb
enter
xchg
sub
mov
mov
adcl
cmp
adc
jmp
stos
loope
cmpsb
mov
jmp
repnz
xchg
add
mov
fmull
fwait
pop
mov
insl
add
addr16
out
lahf
mov
jp
inc
mov
or
cmpsl
daa
fucom
xor
gs
add
jb
push
les
out
addr16
into
pop
popf
sbb
and
add
fnstcw
int3
out
repnz
mov
aaa
int3
mov
lahf
mov
insb
jbe
or
rolb
mov
in
enter
and
jge
cltd
mov
pop
push
into
mov
aad
xchg
push
dec
lret
add
fwait
and
mov
inc
mov
mov
mov
clc
aad
pop
in
xorl
ljmp
adc
outsl
lret
lods
test
scas
sbb
icebp
pop
and
ja
xchg
outsb
inc
xor
adc
xor
push
mov
jg
push
cmp
stc
ret
outsb
inc
call
test
shlb
push
in
pop
call
stos
pop
cli
pusha
xchg
push
out
sub
es
and
pushf
cmp
enter
jl
inc
out
add
sbb
in
sahf
mov
mov
or
repz
jmp
xchg
aas
repnz
jbe
pop
pop
pop
ja
push
push
sti
xor
adc
cwtl
push
jge
fs
lock
daa
pop
jmp
imul
inc
mov
cld
push
clc
mov
dec
repz
xchg
subl
das
icebp
xor
xchg
xlat
or
dec
adc
inc
cmp
fstpt
lods
xchg
mov
fs
outsl
fsubl
xchg
add
rcrl
ds
or
xlat
shrb
jae
cmp
adc
xchg
dec
into
and
mov
push
stos
dec
jp
jb
cmpsb
pop
in
xor
out
loope
adc
or
dec
pusha
mov
jne
outsb
sub
adc
mov
outsb
test
mov
sub
in
jb
cmp
hlt
inc
stc
push
add
repnz
inc
aaa
cld
jmp
out
in
hlt
daa
xor
dec
fisttpl
cmpb
cmp
les
cmp
in
ret
inc
cmpsb
jae
add
add
xor
mov
and
inc
sbb
call
xchg
add
jle
dec
ss
rolb
mov
scas
sbb
outsl
push
mov
mov
and
mov
xchg
pop
call
mov
push
jmp
and
mov
inc
push
jbe
push
jl
cmp
sbbl
add
pusha
pusha
cmp
ss
jno
sub
or
xorl
or
cmpsb
lcall
pusha
mov
mov
movsb
xor
sti
pop
mov
jp
push
outsb
aam
and
into
pop
mov
sbb
imul
adc
mov
inc
xchg
jl
aaa
lahf
cmc
push
popf
fwait
xor
stos
cltd
dec
jns
ret
adc
pop
push
mov
scas
pop
cmpsl
cld
and
out
out
jb
je
xor
mov
dec
add
fwait
jnp
scas
cmp
jg
in
fnsetpm(287
and
mov
cmp
out
popa
mov
gs
xor
fwait
je
icebp
je
dec
insb
push
popf
mov
outsl
jecxz
testl
pushf
enter
subb
push
sub
and
dec
frstor
cmp
cmc
divl
xlat
popf
ljmp
les
mov
and
out
adc
lcall
push
aam
push
jmp
xor
or
in
xchg
mov
rolb
dec
fnstenv
sahf
jle
std
daa
test
sub
push
mov
lods
jns
call
orl
mov
stc
push
iret
mov
jnp
jns
scas
inc
mov
sub
pushf
xor
bound
dec
pop
int3
jg
lret
inc
and
cmpsl
dec
loopne
mov
lock
adcb
mov
push
lret
jns
fbld
add
mov
push
das
push
jo
or
in
xor
adc
mov
inc
or
lret
clc
jmp
jmp
adc
addr16
dec
outsb
and
fmull
test
pusha
mov
mov
fimull
aas
hlt
dec
in
jne
adc
mov
push
clc
and
mov
sbb
mov
push
add
adc
and
jbe
inc
mov
in
scas
mov
dec
bound
into
push
or
enter
in
pop
jle
jae
sbb
push
sbb
dec
sub
jle
mov
add
mul
outsl
push
stos
fsubrl
or
xchg
push
js
sub
test
out
mov
inc
pop
arpl
mov
xor
pushf
xorl
repz
adc
pusha
lret
loop
imul
xchg
jmp
mov
adc
jae
cmp
sahf
aam
cli
lret
outsb
or
subl
mov
inc
jae
sub
or
lcall
push
lret
mov
pop
mov
adc
ss
cmp
inc
or
leave
ljmp
and
pop
sbb
add
cmp
dec
ror
fldcw
xlat
xor
iret
jge
adc
dec
pop
test
xor
mov
cmp
inc
iret
nop
jns
nop
push
cltd
rcrb
bswap
stos
pop
and
insl
hlt
push
and
outsb
and
mov
mov
movsl
mov
js
push
lret
rcrl
and
pop
in
lea
xchg
out
inc
mov
add
cmc
or
cli
rorl
pusha
push
lea
xor
stos
popa
jp
mov
push
adc
push
sub
add
sub
mov
ja
bound
cli
xchg
xchg
je
out
xor
call
es
adc
jg
push
xchg
leave
leave
mov
loop
pop
mov
jb
push
lret
cmp
or
cmp
adc
stos
mov
jbe
rcrb
push
gs
mov
push
push
xchg
jns
lods
or
mov
mov
addr16
repz
gs
mov
call
jnp
mov
or
mov
jnp
push
sub
xchg
cmp
adc
jl
mov
jle
jbe
jp
or
add
cli
add
out
and
jno
movsl
in
frstor
jg
shll
cmp
arpl
jb
stos
jne
bound
lret
shrb
hlt
inc
inc
lret
jge
orl
push
bound
cmp
orl
jae
jmp
lret
sbb
cmpl
lods
lds
das
fnclex
and
jp
push
mov
mov
push
mov
adc
inc
jae
lea
inc
cmc
dec
into
sbb
imul
cmp
cltd
test
icebp
movsl
jl
sahf
xchg
mov
push
loop
loopne
rclb
loop
mov
xor
pop
shrb
vmread
adc
in
subb
cmp
arpl
rorb
lods
add
lret
inc
dec
pusha
nop
or
cmp
or
leave
sbb
add
push
mov
dec
mov
cmp
jb
popf
ret
jne
mov
mov
add
adcb
adc
dec
iret
fcomp
mov
mov
mov
cmp
insb
inc
cmp
jne
sti
sub
sti
fisubs
aas
jge
sbb
mov
inc
add
jnp
imul
ficomps
jb
test
mov
jo
and
sahf
mov
and
sub
jmp
imul
adc
loopne
cli
cmp
negl
aad
xor
dec
mov
and
cmp
dec
filds
jl
loope
add
xchg
mov
nop
pop
xchg
fstp
xchg
pop
jbe
fdivl
mov
test
popa
sbb
sbb
out
jbe
outsl
cwtl
mov
insb
icebp
movsb
scas
fdiv
add
push
rcrb
xor
sbb
push
xor
dec
mov
sbb
xor
cmp
fdivrl
in
xor
dec
outsb
mov
pop
mov
dec
sbb
push
repnz
push
bswap
push
mov
cli
arpl
xchg
shl
imul
xor
jmp
or
and
popl
cmp
inc
mov
cld
test
xchg
pop
rclb
jno
js
pop
cli
ds
or
jge
and
jno
adc
pop
adc
fs
shlb
sar
aad
pop
sub
xchg
sbb
fstps
in
in
inc
loope
adc
aad
sub
lods
inc
adc
add
jg
lcall
pop
out
mov
dec
or
lods
cld
loopne
add
cmp
or
shr
xchg
mov
xchg
adc
xchg
pop
les
ja
dec
mov
pop
mov
das
fs
hlt
mov
or
aad
sub
insl
mov
or
insl
repnz
leave
mov
out
pop
call
dec
adc
mov
out
cmp
out
sub
mov
das
loopne
pop
cmp
jle
sbb
rol
or
cmp
push
pop
mov
sub
jl
outsb
repz
cmp
outsl
adc
mov
sub
pusha
add
cmc
mov
sub
sbb
dec
std
cmp
mov
addr16
inc
or
mov
icebp
cmp
cld
test
fdivp
xchg
scas
test
fnsave
adc
fbstp
dec
scas
in
icebp
jmp
ret
mov
dec
cmp
inc
jo
es
mov
out
xor
mov
sub
push
ja
iret
fisttpl
aaa
clc
shll
sub
pop
xchg
loopne
movsl
push
inc
ficompl
mov
rorl
imul
push
sahf
mov
js
inc
test
shll
mov
loopne
shll
mov
lods
add
call
mov
repnz
jmp
sar
aam
in
mov
xlat
stc
out
pop
repz
nop
pop
das
leave
popl
mov
add
repz
insl
enter
push
add
inc
xlat
adc
pop
inc
or
lahf
into
mov
mov
cmpsb
fistl
pop
cmp
ret
mov
fdivrp
inc
xchg
pop
ss
mov
xor
ret
mov
fisttpll
ss
sub
pop
rorb
lds
cmp
int3
cld
ss
repz
into
fidivrs
mov
sub
out
sub
ret
sbb
dec
aaa
adc
cmp
fs
shll
adc
add
shl
sub
and
and
push
pop
loopne
ss
fsub
aam
jbe
pop
jg
sbb
sarl
sub
push
sbb
pushf
test
mov
jecxz,pn
push
xchg
je
push
inc
xchg
mov
dec
ficomps
mov
dec
push
jnp
xchg
xchg
loopne
pop
sti
jae
and
scas
cmp
call
adc
rorb
dec
or
fldcw
popf
jo
mov
add
or
cmp
xor
and
pop
mov
lahf
or
dec
cmp
incb
inc
int3
divl
mov
mov
adc
push
dec
sbb
inc
jp
and
sbb
jns
add
mov
mov
repz
mov
jbe
lods
add
inc
pop
cs
mov
sbb
aad
pop
push
gs
mov
push
rorl
adc
xchg
mov
mov
jle
adc
in
pop
dec
add
movsb
lock
sarb
add
cmp
pop
cwtl
mov
inc
lret
xchg
repz
mov
rcl
stos
and
ljmp
cli
xchg
mov
mov
sbb
sbb
jne
inc
loopne
je
and
in
in
dec
pop
sbb
int
cmp
mov
jle
or
and
call
scas
mov
cmc
cmp
push
aad
inc
mov
mov
pop
stos
mov
cmpsl
lods
mov
cmp
int3
sahf
inc
in
pop
cmp
pop
imul
rolb
cwtl
mov
fwait
scas
dec
fsubrs
cmp
insl
inc
test
cmpb
push
xor
mov
pop
mov
or
aam
ss
sbbb
out
ss
int3
ss
lea
push
inc
push
fs
sti
icebp
out
gs
xor
aas
mov
adcb
fwait
aad
sbb
lahf
cmpsl
ret
sub
shlb
dec
fcomi
sbb
jno
pop
sbb
aaa
ss
fwait
sar
mov
adcl
push
cwtl
xor
sbb
mov
inc
sub
lods
sti
mov
ds
mov
xor
jl
fs
mov
lock
orl
sub
rol
jg
lcall
jae
push
jbe
cmpsb
mov
xlat
lds
fldcw
lods
inc
ss
mov
pusha
sub
mov
adc
movsl
loope
jns
or
hlt
stc
scas
test
and
inc
lcall
in
adc
shr
fmuls
or
push
sub
jecxz
xchg
cmp
xchg
mov
xchg
add
fistps
sbb
or
jcxz
sub
mov
in
dec
pusha
nop
out
or
and
jns
lock
pop
and
push
mov
sub
mov
cmpsb
xchg
lock
in
out
rclb
subb
insb
test
pop
jle
rcl
lock
push
imull
outsb
imul
lea
adc
jp
pop
push
ljmp
cmpsl
lds
scas
add
addr16
pop
mov
leave
loopne
lret
inc
ret
lods
clc
test
fadds
or
notl
mov
daa
sub
lret
data16
sahf
addb
movzbl
mov
cmpsl
bound
xchg
sbb
ss
cltd
movsl
xor
loopne
xchg
jge
mov
fcoml
in
pop
aam
jecxz
sub
lods
adc
arpl
xchg
and
fstpl
aaa
subl
int
divl
aad
jne
and
mov
xchg
subb
je
fwait
pushf
push
pop
xchg
js
push
jnp
inc
dec
fistps
dec
pop
addr16
and
ret
call
fcoml
data16
jne
xchg
call
mov
xchg
cs
test
int3
mov
insl
loope
hlt
into
dec
sub
and
or
push
fs
test
bound
lods
test
je
fstl
out
fbld
ljmpw
loop
jecxz
cmp
shr
mov
inc
pop
testl
jl
in
jne
cld
lea
js
pop
push
add
sahf
mov
fcoml
int
das
stc
push
in
in
adc
push
push
negl
popa
frstor
js
push
in
jne
in
cmpb
ret
jle
and
ljmp
dec
fdivs
jl
mov
jge
jae
and
dec
xchg
sbb
jp
sbb
arpl
arpl
je
mov
jmp
out
out
or
enter
or
ja
pushf
mov
bound
sbb
ds
adc
rclb
xchg
inc
mov
aad
mov
and
mulb
lods
out
cmp
and
jnp
push
cmp
adc
xchg
jb
adc
ljmp
sti
push
mov
dec
test
rcll
sub
mov
addb
popa
inc
mov
icebp
rcll
pop
inc
pop
xor
pop
into
bound
aam
mov
mov
push
jge
shlb
push
fimuls
cld
movsb
int3
fadds
cltd
and
mov
cmpsl
mov
icebp
out
push
out
lret
pop
outsb
push
lea
push
mov
and
jae
dec
outsb
mov
ss
jbe
jp
push
jae
pop
xchg
mov
in
fstps
out
cmp
insb
popa
dec
jg
insl
icebp
sbb
push
in
mov
mov
cmp
rcl
mov
idivb
and
daa
xchg
sbb
mov
ljmp
cmc
pushf
shrb
mov
iret
xchg
mov
pop
enter
lcall
dec
xor
mov
fisttps
int
mov
xchg
push
jmp
cmp
xchg
mov
outsb
inc
sub
add
fsubrs
cwtl
inc
lret
add
pop
loope
jge
inc
outsb
and
cwtl
scas
idiv
mov
popa
jbe
jno
xchg
mov
xlat
sbb
push
js
pop
jmp
jg
push
cmp
jbe
sbb
mov
jns
gs
mov
lods
xor
inc
fistpll
lret
fs
adc
div
and
xchg
sub
and
daa
hlt
mov
inc
pop
scas
hlt
cltd
mov
sub
subl
pop
adc
sub
lea
movsb
adc
xor
scas
cmc
imul
sbb
and
nop
loope
cmc
pop
or
adc
push
das
jb
orb
mov
dec
mov
sub
jmp
sub
jno
pop
add
or
jmp
dec
fnstcw
pop
push
push
inc
nop
fcompp
jmp
xor
jg
push
pushf
add
popa
ffreep
push
outsl
cltd
inc
push
push
cwtl
cmpsb
xor
mov
xor
add
fisubl
and
cmpl
xchg
sbb
ds
add
rcl
mov
jl
and
pushf
lods
lock
loopne
repnz
lods
movsb
mov
sti
add
add
jbe
es
push
xchg
mov
push
xor
jns
jns
adc
jle
cmp
fdivl
sub
mov
in
stc
mov
leave
inc
fs
mov
cltd
jle
adc
jle
sbb
mov
add
arpl
subl
ss
adcl
cld
cs
clc
jmp
mov
mov
iret
mov
test
fstps
popa
dec
add
loop
pop
push
call
push
insb
or
movsb
test
add
leave
pop
scas
das
ss
adc
cmp
mov
ror
jo
mov
mov
test
rorl
aas
or
mov
gs
pop
pop
loop
pop
movntps
push
sub
mov
int3
inc
lret
mov
mov
cwtl
push
add
mov
loop
in
lods
dec
data16
cmp
data16
jecxz
adc
sub
xchg
lea
sub
cmpl
popf
stos
aam
adc
loope
xchg
stos
mov
icebp
fstpt
aas
push
push
rcr
mov
push
jne
das
jg
gs
adc
es
push
mov
cmc
bnd
test
loop
push
jno
cmpsl
stos
stos
mov
aad
outsb
lea
or
aas
sub
xchg
push
adc
dec
jno
inc
cmp
insl
push
in
lahf
in
cli
sub
dec
hlt
push
mov
lea
aaa
dec
dec
lahf
aaa
pop
scas
xor
jle
inc
test
js
adc
mov
jbe
mov
scas
pop
pop
rcrb
inc
out
adc
cmc
sub
lcall
or
popa
outsb
pop
lret
cmp
aaa
xchg
lret
mov
arpl
push
xor
out
or
arpl
scas
mov
push
add
cmc
lret
das
push
out
call
ja
cmpsb
into
mov
shrl
das
push
or
test
mov
insl
lahf
add
mov
sbb
and
stc
inc
mov
loopne
mov
jae
notb
mov
imul
imul
scas
pushf
popf
pop
mov
clc
loop
ret
xchg
cmpsl
ja
in
addr16
movsl
leave
test
and
inc
repnz
xchg
and
cmp
push
dec
fs
outsl
stos
iret
aaa
push
xor
inc
xchg
push
xor
or
sbb
jmp
mov
es
xor
fsubrp
add
sahf
mov
add
dec
xchg
fdivrs
outsb
fwait
cltd
mov
or
fsts
sub
inc
sbb
div
xor
pop
pop
sub
push
int3
aam
sbb
sub
xchg
dec
dec
mov
pop
icebp
add
insl
call
or
and
push
sbb
xchg
add
sub
jb
push
xchg
cmp
int
and
mov
repz
imul
std
ja
pop
fdivs
das
and
add
out
mov
push
or
xor
mov
jg
mov
mov
imul
xchg
int
sub
stos
bound
aad
lods
sbb
fwait
adc
dec
negb
mov
lret
and
push
push
sbb
xchg
push
push
test
inc
inc
pop
test
jge
add
lock
out
loop
mov
mov
outsl
adc
and
fs
push
test
addr16
adc
mov
xor
adc
dec
mov
dec
sub
dec
or
jmp
sub
mov
add
inc
popa
jo
ret
pushl
cmp
sub
dec
mov
cmp
xor
pusha
and
sarb
inc
sub
sbb
inc
adc
inc
cmc
push
loopne
pop
insb
iret
jb
sbb
xchg
test
movsb
mov
leave
leave
cmp
ja
divl
push
dec
je
dec
sbb
sbbl
insb
imul
push
cld
xlat
adc
stos
pop
pop
enter
addr16
pop
stc
push
push
mov
lods
xchg
push
sub
rcrb
das
pop
dec
pop
movsb
jnp
jle
sbb
adc
int
stc
inc
mov
adc
ds
dec
lcall
out
jno
sub
shrb
aas
push
jno
rcrb
data16
lcall
cmp
imul
dec
inc
push
popf
adc
push
ja
enter
iret
inc
or
call
cmp
mov
outsl
mov
pop
adc
test
xor
mull
push
sub
jnp
pop
fwait
mov
mov
push
pushf
add
push
hlt
pop
mov
pop
mov
lock
aas
int
pop
mov
xor
sbb
xlat
sub
mov
in
mov
cmovb
loope
cld
mov
mov
lret
jo
sarl
bound
pop
mov
imull
push
mov
dec
pop
fdivp
ds
repnz
xor
outsl
cmpsb
push
aam
xorl
or
shrb
or
cs
popf
shll
cmp
xchg
daa
adc
addb
lea
call
sub
dec
iret
shl
jne
xchg
jg
rcll
or
dec
cwtl
xor
cmp
sbb
insb
and
lcall
mov
sahf
dec
cmpsl
sub
pop
lret
or
dec
inc
pop
cmp
aam
mov
jbe
sbbl
test
add
push
and
repz
push
mov
in
out
dec
in
jl
and
sub
inc
movsb
push
xchg
adc
or
insl
insl
mov
xor
xor
mov
xchg
and
shll
test
sub
adc
imul
rcrb
jno
cmp
mov
fdivp
enter
jb
mov
das
out
mov
cmp
inc
in
imul
mov
inc
xchg
dec
shr
jg
sbb
push
stc
addb
xchg
ljmp
ret
jmp
shrb
test
ljmp
mov
push
movsb
ja
mov
push
aaa
aas
mov
push
push
shrl
push
mov
sarl
fimuls
fimull
jecxz
cltd
in
jne
aaa
push
mov
adc
scas
fcompl
insb
lret
lds
cltd
jne
add
hlt
sub
push
inc
call
je
sahf
jns
xor
cmp
fadds
jmp
dec
dec
xor
inc
mov
testb
psubsw
cld
jno
mov
fcoml
lock
subl
notb
imul
ljmp
push
shll
pop
int3
pop
inc
mov
jle
or
popa
cltd
sub
dec
push
clc
mov
adc
bound
or
out
in
inc
ds
sahf
gs
clc
outsb
iret
pushl
xchg
add
out
cmp
test
lods
lret
or
pop
cltd
roll
add
or
dec
push
cs
in
scas
adcl
psrad
mov
mov
ret
pop
dec
mov
jns
sub
pop
cmpsl
fcomps
lods
push
mov
es
push
test
inc
xor
and
sub
out
cmpsb
popf
jo
mov
inc
rcrb
lret
adc
lret
xor
xor
cmpsl
lds
leave
lret
mov
in
push
lods
xor
xor
mov
mov
test
negb
daa
cmp
sbb
filds
les
testb
daa
stos
mov
loope
jg
fcomi
int3
jno
aas
imul
jmp
and
sub
jmp
aam
pop
sbb
jo
xor
out
hlt
cmc
cmp
stc
mov
add
pushf
pop
xor
mov
push
fists
mov
xor
pop
inc
sbb
pop
xor
mov
sbb
sub
or
cmp
xchg
repz
and
insl
jecxz
mov
iret
dec
sbb
mov
jg
push
cmp
cmp
adc
mov
pop
sub
shrl
data16
inc
dec
clc
pop
inc
xchg
push
jbe
sbb
pop
add
adc
and
mov
gs
je
scas
push
jbe
dec
and
mov
sbb
mov
fsubp
add
cmpsb
icebp
es
xor
xchg
inc
aam
int3
mov
cmp
ret
bound
mov
sub
sahf
adc
fs
stc
aad
or
movsb
jge
mov
fiadds
pmulhuw
jb
or
leave
clc
push
pop
daa
mov
hlt
add
push
sbb
push
jge
xor
mov
xchg
or
push
loopne
pop
mov
imul
lods
pop
dec
sub
dec
inc
push
xor
xorb
test
leave
push
xchg
or
mov
fcoml
mov
xchg
xor
cmc
mov
ret
or
loop
lret
daa
aas
mov
ds
decb
pop
adc
aam
insl
sub
jl
jb
sbb
mov
xor
into
add
scas
addr16
add
cltd
fs
cmp
cli
lock
sahf
scas
push
popf
xchg
mov
shrl
mov
dec
mov
lock
dec
mov
ss
sub
in
fwait
test
inc
out
mov
movsb
nop
in
pop
xchg
sbb
xchg
lret
push
shrl
nop
jae
pop
ret
es
out
movsb
rorl
cli
xchg
fisubl
pop
out
inc
mov
andb
rcr
std
orb
push
call
mov
mov
xchg
fld
in
and
into
fxch
or
rorl
mov
pop
bound
ret
arpl
or
lret
mov
mov
stc
testl
and
mov
jg
outsb
jle
fstpl
test
pop
xchg
movsb
push
mov
lock
xor
int
dec
flds
shrl
sub
imul
jmp
mov
and
aaa
jo
push
jmp
pop
inc
shll
jns
sahf
or
stos
mov
cld
js
cmp
xor
clc
js
pop
jbe
mov
mov
xchg
pop
imul
add
dec
xchg
mov
ja
push
xor
lret
fwait
push
xlat
mov
cld
or
sbb
inc
mov
mov
fcomps
arpl
xchg
push
lock
adc
add
dec
movsl
enter
pop
xlat
int
sbb
adc
bnd
lret
sbb
gs
sub
pop
xchg
lret
movsl
imul
pop
mov
mov
dec
and
into
adcb
into
add
mov
aaa
xor
mov
xchg
push
imul
enter
xchg
fnstsw
adc
sti
mov
pop
adc
cmc
cld
ret
test
mov
bound
addr16
sub
and
push
or
ficomps
inc
cmp
jge
aas
ret
xchg
mov
das
and
adc
ret
mov
sbb
std
out
fsubrs
arpl
sahf
and
cmpb
sbb
push
hlt
rclb
call
xchg
and
adc
xchg
push
jne
fdivrl
test
test
frstor
mov
imul
daa
aad
in
fcmovb
push
push
mov
mov
sub
call
xchg
adc
nop
gs
ds
mov
xor
cmpb
testl
xor
sarl
into
aam
sub
pop
dec
inc
add
ja
and
roll
das
adc
cli
add
outsb
adc
int
call
mov
lret
inc
adc
fdivr
or
add
push
xchg
shrb
in
cmpsb
orb
test
addr16
push
iret
jo
xchg
mov
push
ss
fdivrl
outsb
xchg
mov
xchg
aad
cltd
cmp
or
rorb
sbb
cmp
aas
push
jo
jmp
insb
or
adc
and
jns
stos
jb
and
nop
push
xor
mov
dec
int3
cs
mov
lods
lock
xchg
in
xchg
sbbb
inc
mov
jge
addb
adc
shll
pop
leave
cmpsl
xor
push
lret
clc
or
mov
xchg
dec
fidivs
pop
xchg
adc
mov
testb
stos
add
insl
pop
jno
ja
jecxz
dec
push
and
sbb
out
and
xchg
sbb
adcl
push
mov
sbb
shrl
xchg
jecxz
leave
mov
sub
jae
sbb
sbb
outsb
fistps
xor
adc
sbb
and
cli
ja
mov
xor
iret
xor
sub
cmp
aas
mov
sub
xor
or
mov
mov
add
out
mov
hlt
test
jl
fisttpll
jg
lods
sub
gs
mull
mov
jnp
jns
mov
xchg
jmp
or
out
push
shl
sti
pop
stc
push
sti
popf
mov
les
addr16
or
xchg
inc
shl
dec
ja
fidivl
push
das
jnp
andl
cmp
xchg
fs
call
mov
pushf
aaa
sar
scas
pop
sbbb
and
push
in
fsubrp
dec
add
jns
mov
push
lock
cmp
lret
hlt
outsb
adc
pushl
aam
popf
mov
ja
and
or
scas
fcompl
outsl
xchg
cmpsl
sarl
clc
mov
fs
push
sbb
cmp
mov
push
stc
lret
and
pop
aam
in
cmp
jle
ror
sarl
stc
mov
lret
decb
loope
xlat
mov
mov
fucomip
repz
jmp
ret
icebp
iret
cmp
mov
sarb
xor
xchg
scas
leave
cmp
lahf
dec
movsl
push
add
pop
xor
into
jo
pop
aad
cmp
cmp
or
sarl
mov
je
xchg
lods
xchg
loop
sbb
xchg
lahf
hlt
sarb
mov
adc
xchg
cltd
push
mov
adc
imul
ds
outsb
mov
xchg
push
out
lock
subps
xor
rcl
lods
in
call
int
mov
jmp
sti
scas
mov
cltd
inc
hlt
cmp
mov
inc
and
and
decb
mov
lods
sub
xchg
mov
jl
xchg
sbbb
ljmp
movsl
jns
inc
jb
sbb
lret
into
adc
sub
loope
sbb
adc
out
fstps
sub
xor
adc
je
mov
push
adc
scas
or
mov
call
mov
imul
or
or
mov
data16
sti
lcall
sbb
lods
jecxz
iret
sub
movsl
in
jno
sbb
dec
or
pop
sub
ret
jbe
sub
imul
jne
xchg
sti
sti
stos
setno
mov
ds
aas
lret
xchg
dec
repz
out
push
sub
xchg
sub
mov
mov
mov
jmp
pop
inc
jb
shrb
fs
lret
add
xchg
and
sub
dec
sbb
add
lds
pop
push
cli
imul
out
and
inc
pop
xor
addr16
not
imul
sbb
sbb
ljmp
fdivrs
or
xor
fistpl
push
pop
iret
int
pop
insb
daa
mov
push
pop
jg
xchg
fstl
ret
cmp
lcall
out
mov
int3
add
sub
pop
ret
cmp
les
cltd
nop
cmp
xor
fs
imul
or
push
enter
dec
imul
add
lods
scas
and
xchg
dec
jns
outsl
pop
in
sbb
insb
repnz
test
addr16
or
scas
mov
jp
fisubrl
jecxz
ret
outsl
clc
push
je
jns
inc
int
in
nop
icebp
or
into
pop
cmp
nop
aad
mull
jbe
imull
in
push
in
push
xchg
mov
mov
xor
outsl
mov
push
pop
rorb
or
lret
push
call
daa
adc
scas
add
leave
xchg
and
rcrl
inc
add
popl
popa
pop
loopne
push
cwtl
fiadds
push
cmp
ficoml
fldl
nop
or
push
mov
jo
test
movsl
shrl
xor
loopne
popf
mov
cmpsl
popa
pop
stc
ja
mov
out
stc
xchg
sbb
mov
dec
push
rcr
in
push
rcl
les
rolb
jb
inc
in
fistpll
out
adc
movsl
and
xor
shrl
out
aas
cmp
mov
cs
mov
mov
pop
fldl
imul
inc
cli
push
out
or
lahf
call
sbbl
lret
push
ja
xchg
out
mov
mov
shrb
inc
ja
loop
test
pusha
insl
loop
adc
mov
add
js
xor
add
sub
cmp
test
cwtl
out
lea
loope
adc
lock
add
daa
xor
divps
pop
pop
mov
insb
adc
inc
pop
pusha
out
jbe
imul
push
sub
repnz
movsb
fmuls
test
jle
pushf
mov
out
sub
xchg
or
je
cmpsl
xchg
ljmp
mov
cmp
out
lcall
xchg
mov
mov
ja
pushl
imul
mov
xchg
pop
jmp
fwait
push
mov
popf
out
loop
or
loopne
pushf
clc
jmp
or
sub
jge
sahf
push
dec
testl
test
icebp
shrl
xor
pop
add
mov
jnp
dec
shrl
cmp
out
jns
mov
inc
cmpsl
jg
test
pop
sub
and
xor
sbb
dec
bound
out
jl
pusha
bound
cmpsl
push
repz
test
push
inc
jo
mov
aaa
jne
outsl
lahf
mulb
popl
xchg
stc
into
fdivrp
test
adc
jecxz
and
dec
dec
add
jnp
bound
mov
imul
fdivp
das
cmp
fs
or
aas
pop
push
add
sbb
pop
nop
ss
arpl
setge
cmpsb
mov
adc
add
fwait
mov
pop
imull
push
andb
adc
cli
iret
jae,pt
out
add
dec
inc
pop
or
ret
or
cmp
rolb
sub
adc
jmp
insl
xlat
sbb
icebp
pop
enter
loopne
add
dec
dec
push
in
aas
sub
fwait
jb
cmpsb
jmp
or
or
or
hlt
add
cmp
cmp
pop
in
adc
mov
addr16
xchg
cmp
fdivrl
mov
or
xchg
mov
mov
out
mov
test
addr16
add
pop
rcrl
mov
std
das
inc
lea
int3
xor
lret
jb
cmc
je
imul
inc
rep
in
divl
sub
hlt
jb
cmpb
rcll
dec
out
fsubrs
les
xlat
or
xor
int
repz
mov
test
adc
popa
sub
dec
jge
std
jne
aas
push
ljmp
fidivs
and
mov
xchg
shrl
push
adc
adc
popf
sub
cmc
dec
das
into
sahf
sti
jns
stc
mov
aaa
sti
dec
cli
jecxz
stc
mov
dec
sub
into
test
add
std
mov
sbb
inc
add
mov
out
out
sbb
and
adc
or
lret
pop
scas
scas
ret
imul
fcomps
test
nop
sub
inc
test
xlat
aam
add
daa
cmp
xchg
xor
pop
cmp
subl
dec
aam
inc
aad
add
andl
add
das
fidivrl
push
cmp
or
xor
jno
pop
lock
shll
data16
xor
lahf
jle
dec
mov
in
mov
insb
jle
test
cmp
jl
loop
subb
jo
mov
xorb
push
jne
cs
shlb
mov
fwait
arpl
xlat
movsb
repnz
pop
scas
daa
jle
repnz
out
adc
stos
in
or
or
mov
mov
push
decb
jg
ljmp
stos
jnp
fisttps
push
lods
aam
ss
jle
inc
fsubrs
jns
pop
mov
sbb
add
inc
xchg
jmp
rol
xor
adc
sub
hlt
dec
mov
repz
jno
inc
test
stos
fcoms
loopne
pop
add
pop
and
mov
xchg
push
xchg
ja
add
and
fwait
inc
popf
lahf
mov
loopne
pop
les
in
sub
jnp
cmp
loope
mov
fwait
add
movsb
sbbb
loopne
pop
lret
jnp,pt
or
outsl
mov
inc
mov
lcall
ss
into
mov
xlat
mov
mov
adc
test
mov
loop
out
jnp
dec
das
inc
sahf
lods
mov
outsl
and
xor
push
inc
xchg
iret
ljmp
in
jae
pusha
stos
ss
decl
dec
cmpsb
out
inc
mov
mov
das
fstpl
outsl
xor
std
movsb
inc
sub
mov
pop
adc
and
xchg
iret
cltd
fidivs
popa
mov
xor
std
dec
sar
add
mov
outsb
mov
das
sbb
imul
lock
aas
add
jg
jb
addr16
insb
xchg
pop
roll
into
mov
mov
rcrb
mov
pop
popf
xchg
inc
ret
or
hlt
ljmp
jge
iret
std
sbb
adc
shll
jle
jae
inc
movsb
push
pop
cli
mov
out
lock
push
loope
in
test
mov
aas
mov
cwtl
inc
mov
les
mov
cmp
inc
clc
mov
fsubrs
mov
call
dec
mov
push
dec
dec
sbb
mov
cmpb
clts
pop
xor
arpl
pop
xchg
and
je
sbb
mov
sub
fildl
cmc
add
xchg
xor
in
fadd
shlb
xchg
hlt
lcall
outsl
scas
test
loopne
push
hlt
or
mov
ret
aam
sub
mov
out
test
rcll
inc
jmp
or
dec
cmpsl
cmp
jbe
add
xchg
adc
sbb
in
or
jbe
sub
adc
xchg
fisttps
shll
adc
loope
seto
inc
add
xor
cmp
je
std
mov
dec
inc
les
and
imul
or
call
xchg
fisubs
xor
cli
outsl
push
ret
sti
movsb
and
int
pushf
jae
xchg
adc
xor
mov
nop
jbe
mov
mov
add
pusha
lea
pop
add
mov
mov
or
xor
inc
mov
ja
andl
inc
mov
addb
dec
cltd
mov
flds
enter
test
cmc
repz
clc
adc
ja
adc
addr16
inc
cmpsl
out
or
sub
sbb
cmpsb
cmpb
es
leave
fnstsw
addr16
mov
jp
xchg
dec
cmp
addb
fs
ds
mov
xor
or
das
xchg
inc
enter
repnz
cld
push
insb
xor
xor
ljmp
pop
jne,pn
ds
dec
jecxz
fdivrl
add
sbb
mov
ja
cmc
lock
scas
push
repz
cli
lret
cli
or
lret
dec
sub
shll
jno
mov
popf
and
mov
sbb
mov
sub
clc
push
outsb
mov
fisubrs
js
pop
pop
pushf
movsl
or
jno
push
add
jae
insb
push
push
mov
mov
movsb
sbb
nopl
jo
push
push
xchg
div
xorb
insb
cltd
mov
xor
lea
and
mov
inc
enter
rol
outsb
aas
pop
popa
roll
jge
and
mov
cltd
hlt
pop
jmpw
xor
shlb
aam
nop
ret
xchg
fsubs
leave
ljmp
dec
jo
jge
push
call
ss
hlt
sbb
xor
mov
fldl
int3
jmp
mov
fwait
pop
cmp
mov
fidivl
inc
ja
pop
and
sti
push
cmpsb
adc
data16
add
pop
popa
adc
sahf
cmp
push
sahf
ret
sbb
shll
fiadds
lods
into
cmp
add
inc
insb
ja
dec
cmp
push
fs
mov
inc
je
inc
int3
sbb
lea
jb
and
sbb
or
adcl
cwtl
add
mov
inc
mov
ljmp
mov
in
xchg
repnz
cmp
cld
in
sbb
arpl
sti
lods
xchg
cmp
xchg
frstor
or
inc
adc
add
orl
fmuls
out
mov
pusha
cmp
fidivrs
les
push
jp
jle
mov
gs
fwait
daa
sub
push
push
das
xor
das
aas
enter
dec
push
sub
mov
js
xor
out
int
shlb
in
mov
lret
outsl
je
jbe
repz
into
daa
mov
xlat
js
mov
adc
jne
or
jae
push
push
mov
loopne
pop
loop
movsl
imul
pop
sub
push
lds
sub
push
je
insb
loopne
stc
inc
cmp
dec
fbstp
lret
in
mov
mov
addr16
jne
sub
pop
inc
dec
pushf
inc
cwtl
ficompl
imul
sub
stos
aas
cmc
movsb
fwait
sbb
test
push
jne
xchg
and
mov
cmpsb
out
xor
loope
dec
insl
popa
out
add
and
jns
sarb
mov
xchg
aad
mov
add
imul
sub
push
jle
adc
mov
xor
cs
push
xchg
or
movsl
fstpt
cmp
mov
stc
ja
scas
aam
loop
mov
incl
push
lahf
or
push
cs
bound
nop
xchg
fs
ss
add
sbb
adc
insl
or
mov
pop
jo
cmp
fs
dec
and
testb
add
cmp
mov
inc
and
and
mov
rcll
rcrl
jnp
pop
mov
dec
mov
ss
mov
mov
scas
mov
and
jns
out
dec
or
mov
sbb
mov
fildll
push
outsb
cmp
mov
int
je
das
lcall
shr
xor
mov
or
insl
push
xchg
mov
pop
inc
xor
xchg
xchg
xchg
in
mov
in
cmp
lds
sahf
xchg
test
inc
ja
jge
mov
inc
cmp
in
jmp
jge
test
test
pop
xchg
inc
or
xor
lcall
in
cwtl
inc
xchg
test
adc
inc
push
cli
fidivrl
gs
mov
adc
dec
add
lds
ss
jae
loop
gs
stc
dec
cwtl
and
shld
dec
mov
xchg
push
jno
enter
popw
adc
sbb
sbb
repnz
mov
das
test
inc
push
out
mov
xchg
insb
rorl
es
addr16
adc
insl
je
jecxz
int
jmp
xchg
ss
in
mov
idivb
dec
lcall
adc
add
mov
jmp
lds
fildll
jp
int3
in
movsl
inc
in
rcl
inc
mov
mov
xor
lods
push
daa
mov
mov
mov
ror
pushf
ljmp
jo
fcomip
or
inc
dec
pop
xchg
sbb
inc
dec
pop
test
xchg
jae
add
sub
sbb
call
dec
aas
lds
mov
dec
cmp
jnp
jae
mov
and
xor
mov
mov
push
ds
mov
aas
icebp
jne
and
in
sarb
xchg
inc
pusha
dec
dec
pop
xchg
adc
xchg
lret
pop
lock
mov
cld
mov
in
fadd
icebp
int
fsub
subl
shrl
call
lret
xor
lock
fistpl
call
leave
jl
popa
xlat
fildl
and
push
adc
jmp
hlt
mov
xchg
cmp
inc
nop
aam
mov
xor
sbb
sbb
pop
or
leave
idivb
icebp
dec
sub
push
cld
cs
hlt
cld
idivb
sbb
inc
lret
add
movsl
xor
fcoms
xor
mov
pop
test
sahf
pop
arpl
cmovae
mov
pop
popa
adc
fnstcw
mov
iret
lahf
mov
call
add
je
test
dec
and
add
xchg
xlat
inc
fnstcw
movsl
daa
push
aam
into
gs
mov
push
dec
scas
cmp
xchg
ljmp
shl
pop
je
push
pop
loop
fs
push
enter
pop
sbb
pop
or
test
jge
test
jae
add
dec
in
or
negl
cmpl
es
and
hlt
dec
scas
ja
inc
mov
xchg
jo
sub
xor
xchg
mov
xor
and
popfw
xor
stos
pushf
fs
mov
push
and
sti
pushf
dec
xchg
dec
lods
fidivrs
cli
aas
pop
and
pushf
dec
scas
test
cmpsb
insb
cmpsb
ret
shrl
sbb
mov
xor
outsb
jmp
push
sbb
jl
mov
xchg
dec
or
jnp
adc
shll
pop
loop
cmc
push
add
andl
outsb
jmp
pop
inc
and
or
pop
jae
sub
add
xor
add
loop
jge
shrb
sbb
add
pop
subl
pusha
cmp
jne
pop
scas
and
pop
mov
movsb
push
dec
inc
cli
imul
inc
cmp
psubusw
cmp
lds
add
pop
jno
sub
jne
imul
adc
hlt
push
mov
pop
pushf
mov
push
movsl
scas
cwtl
mov
jnp
or
push
and
xor
mov
std
insl
inc
mov
in
xchg
jg
add
mov
xor
mov
pop
scas
jbe
push
pop
sub
ds
push
subl
pop
pop
mov
subl
jl
add
push
mov
pop
lret
ljmp
fwait
negl
imul
inc
or
sub
cli
ficompl
dec
inc
sar
shrb
ljmp
xchg
push
scas
popa
mov
mov
pop
sub
jg
pop
scas
jo
roll
sub
std
push
lds
push
jbe
iret
shll
stos
loope
sbb
lods
fistl
and
inc
cmp
xor
xor
dec
das
add
into
clc
lock
xchg
add
ja
sbb
mov
loop
sub
dec
dec
movsl
cmp
or
int
sbbb
and
lea
out
push
rorl
push
fsts
mov
xor
mov
push
push
jae
sbb
outsl
daa
cmpsb
mov
xchg
push
push
out
popf
fstl
fidivl
inc
es
shl
addr16
test
mov
icebp
jae
and
jo
loop
mov
jmp
inc
stos
cmp
sub
push
ljmp
mul
fxam
pop
mov
call
sub
mov
xchg
adc
stos
push
push
roll
out
push
imul
mov
push
loope
pop
mov
in
xlat
mov
lds
inc
insb
inc
clc
push
sahf
jns
mov
bound
in
pop
xchg
sbb
push
lea
inc
push
mov
pushf
push
daa
mov
loope
scas
fsubs
lea
mov
push
adc
fs
xchg
das
cmp
gs
cmp
push
popa
or
lock
outsl
es
xor
stos
mul
addb
xor
jb
ja
mov
pop
pop
aaa
outsb
push
arpl
icebp
pop
mov
jg
pop
lahf
or
test
and
jo
test
and
fucom
cmp
inc
xchg
push
fstl
pop
fistl
mov
jo
mov
pop
and
repz
mov
push
fisttpl
stc
add
shr
cli
lock
pop
shrl
pushf
xor
jge
and
jne
iret
cmp
mov
xorb
push
fs
sub
in
shll
inc
mov
adc
xchg
mov
cld
insb
jmp
fwait
jp
loop
dec
adc
xor
shl
test
sti
push
ficompl
pop
rcr
push
test
pop
rorl
push
cmp
rorl
aam
int3
sbb
or
icebp
sbb
cltd
push
dec
test
fmull
pop
xor
jp
xor
test
aam
mov
mov
sqrtps
inc
cs
xlat
popf
rol
enter
lods
insl
mov
call
add
aam
roll
fdivrs
lds
push
jp
ficoml
clc
mov
stc
lock
imul
in
xor
push
jns
push
mov
outsl
and
dec
pusha
test
loopne
jnp
lock
dec
xor
sarb
shll
movsb
xlat
sahf
out
inc
dec
pusha
movl
fdivr
push
into
jo
mov
mov
or
xchg
xor
mov
lret
inc
shlb
inc
mov
clc
xor
dec
imul
xchg
sahf
leave
lock
testb
jo
ror
les
xchg
pop
and
adc
sub
sub
hlt
mov
add
jle
data16
iret
mov
rcr
mov
dec
cmp
add
int3
mov
pop
xor
outsb
mov
popf
sub
fidivs
mov
outsl
push
fcmovu
in
pop
adc
jbe
in
shr
jmp
adc
mov
fisubl
push
iret
mov
ljmp
mov
mov
bound
in
push
sub
inc
pop
sbb
in
gs
adc
push
shll
inc
mov
inc
and
push
mov
mov
push
jno
xor
pop
lods
into
aam
ja
jbe
jns
pushf
sub
jp
push
sarl
lods
xor
out
jbe
repnz
imul
mov
mov
adc
add
scas
dec
mov
sbb
adc
insb
cltd
adc
loope
mov
or
fincstp
mov
xor
cmp
xchg
xor
jecxz
and
fcmovnu
sub
push
pop
jmpw
mov
outsl
jg
mov
std
mov
loopne
hlt
xor
push
cmpsl
push
jg
into
and
xchg
popf
ja
jno
or
push
cld
sahf
jbe
add
xchg
movsl
inc
fsubrp
lock
out
push
shrb
loop
xorb
rcrl
mov
jb
adc
add
test
les
int
push
xor
and
inc
pop
ja
leave
icebp
addl
fildll
rorl
bound
mov
jns
ljmp
test
dec
push
mov
addr16
pusha
xchg
jmp
outsb
nop
shrl
pop
cmp
sbb
cmp
pusha
sub
jno
popa
pop
ljmp
cmp
jg
xor
push
sbb
add
ret
or
ret
jb
jae
lods
xchg
sub
arpl
jae
rolb
loop
xchg
cli
cltd
add
fs
jle
sahf
lret
subb
test
cmovs
or
sbb
sub
xor
sub
arpl
pop
pop
xchg
arpl
add
inc
out
test
stc
mov
cmp
and
cli
mov
in
mov
inc
subb
imul
repnz
pop
lods
sahf
iret
dec
mov
and
sbb
pop
inc
fdivrp
add
outsl
es
fnsave
pushf
mov
jg
lret
in
sub
scas
js
pushf
jge
imul
lcall
popf
xor
push
mov
movsl
cld
call
adcb
dec
test
stos
out
adc
dec
or
stc
dec
mov
clc
mov
lahf
lret
add
xchg
cmp
rolb
mov
pop
into
cmpl
sub
push
mov
lock
inc
jle
scas
test
lock
loop
dec
or
mov
cmc
cwtl
mov
enter
inc
outsb
pop
in
into
js
push
dec
cmp
push
mov
fdivrp
jbe
xchg
jae
push
dec
and
leave
pop
jmp
and
decb
loope
popf
adc
jb
add
ffreep
pop
imul
cmp
movl
imul
mov
xor
sbb
pusha
arpl
lods
int3
fsubrs
popa
push
push
out
cld
add
sbb
xchg
out
loope
mov
sub
ret
lret
ficomps
push
loop
push
out
and
mov
mov
les
mov
push
dec
push
loop
cmpl
sub
dec
mov
mov
lea
rcll
movsl
cmp
add
sub
jp
xor
sarb
mov
sub
gs
dec
int
jg
fsubl
icebp
cmp
dec
and
jp
pop
test
mov
add
sahf
enter
shll
rorl
dec
sbb
xor
aad
dec
xlat
cmp
pop
loop
out
int3
inc
cmc
xor
jnp
xchg
fdivs
orb
sub
mov
insl
test
and
imul
scas
xor
sti
inc
out
xor
inc
push
cmp
lcall
div
jg
jno
xor
push
add
imull
adc
gs
ja
sbb
jae
cmp
push
icebp
jae
pop
out
jecxz
cmp
adcb
mov
sub
mov
add
fstpl
ss
add
mov
test
xchg
xor
add
subl
test
dec
in
mov
inc
mov
out
icebp
rcrl
xchg
cli
inc
test
lahf
dec
dec
lcall
sbb
mov
xchg
iret
jecxz
inc
adc
mov
pop
and
bnd
loope
das
xor
loop
and
pop
add
cmp
and
outsb
xchg
cmpsl
pop
hlt
pusha
arpl
aas
mov
out
cmp
call
mov
cld
mov
lock
mov
lret
divl
ja
xchg
cmp
sub
mov
imul
sub
les
and
mov
mov
lcall
call
stc
mov
cmp
out
mov
add
xchg
punpckhdq
sbb
cmp
jae
daa
adc
pushf
mov
aad
rol
fsubrs
mov
rcll
mov
rcll
fists
jbe
jb
dec
and
sbb
or
adc
or
mov
rolb
sbb
and
rolb
sbb
test
lahf
sub
in
mov
sbb
lcall
mov
cmp
xchg
andl
outsb
push
das
lahf
mov
fisttps
lahf
or
push
inc
rcrl
out
adc
push
nop
sub
nop
lret
inc
rorl
fdivl
pop
lret
sbb
mov
nop
ljmp
repz
cmp
xor
in
lret
push
xchg
mov
jg
jp
lret
xor
xor
sub
mov
jl
movsb
jne
or
mov
mov
pop
mov
out
push
dec
leave
adc
daa
out
cmp
pop
aas
sub
mov
mov
mov
out
dec
inc
push
sub
cli
loopne
in
popa
hlt
sbb
xor
mov
inc
add
divl
add
loopne
or
mov
pop
add
rolb
add
call
dec
call
add
push
xchg
push
das
jmp
inc
fsts
sub
ja
add
sbb
ss
imul
cmp
pop
nop
gs
or
or
test
test
add
aaa
das
sub
jp
icebp
mov
inc
inc
mov
mov
adc
pop
cmc
pop
insb
xchg
adc
dec
mov
sahf
inc
lods
mov
xchg
sub
sbb
fs
rcr
out
adc
sub
push
outsl
aam
div
js
dec
push
sti
jl
push
pop
cmpsb
inc
push
or
or
push
pop
mov
xor
add
jle
aam
mov
and
mov
lahf
cmp
add
pop
xchg
or
mov
mov
ljmp
js
jg
or
or
push
xchg
test
incb
rorl
leave
cmp
mov
jle
pop
subl
push
scas
jbe
cmc
mov
sbb
cwtl
mov
stos
fsubrl
fsubl
stc
xor
dec
in
mov
jp
inc
rol
or
sbbb
inc
or
sbb
pusha
bound
jns
mov
fisubrs
lock
jb
or
mov
movsb
jne
ds
loop
repnz
push
inc
push
adc
cwtl
mov
mov
sbb
jb
int
test
aad
cs
nop
jo
mov
lret
ficomps
jne
sbb
pop
adc
adc
fsubrl
adc
lret
cmp
mov
cmp
insl
loop
mov
jns
jmp
dec
and
and
pop
pop
lds
fists
pop
in
xor
loope
add
add
push
jp
push
mov
jmp
mov
mov
cli
push
scas
push
inc
dec
jl
xchg
imul
xor
pushf
xor
pop
les
sbb
cmpl
push
mov
mov
xchg
jmp
sbb
setle
sub
pop
out
stc
push
pop
rorb
adc
adc
add
dec
adcl
gs
sub
sbb
adcl
pop
sub
negl
add
lods
jle
and
cs
movsb
push
push
fiadds
popa
xor
pop
mov
ss
pop
add
mov
xor
push
fcoms
cmp
inc
jne
adc
and
mov
and
mov
call
jle
jo
outsl
pop
xchg
cmp
sahf
pop
mov
fstl
out
mov
cmpb
lret
cmp
outsl
clc
mov
mov
mov
sbb
pop
push
push
cmpsl
or
iret
xor
and
cmpsb
andl
xchg
test
inc
xchg
add
push
hlt
mov
push
lods
sti
sbb
jae
cmp
in
hlt
sbb
movsb
or
std
pop
cltd
enter
dec
shlb
arpl
enter
mov
int3
inc
popa
arpl
ficoml
pop
jbe
jne
scas
out
adc
sub
popa
cmp
pop
rcrb
mov
daa
test
dec
xchg
mov
or
or
dec
mov
jle
or
sbb
cld
mov
outsl
sbbb
or
or
arpl
push
cmpsb
mov
and
mov
scas
test
cld
cld
lret
call
fstpl
negb
and
mov
iret
movsl
aaa
fildll
loop
pop
and
popa
lcall
aam
xor
jl
mov
rolb
neg
mov
sub
mov
sub
add
adc
mov
add
stos
sub
cmp
sub
mov
movswl
jge
or
xchg
es
hlt
sbb
pop
push
jmp
xchg
adc
xchg
jl
jle
out
out
in
nop
mov
aam
pop
mov
jne
movsl
push
jb
scas
push
fs
pop
rcll
lods
idivl
push
pop
inc
jmp
lods
decl
jnp
fdivr
inc
and
pop
adc
gs
mov
pop
jl
and
clc
sbb
sbb
pop
mov
test
ret
push
mov
jno
scas
insb
sub
mov
outsb
mov
sub
popa
sbb
sbb
aam
outsl
scas
jno
aad
sub
lods
mov
cmpsl
mov
push
pop
shrb
jle
cld
cmp
fildll
push
push
add
push
or
pop
jle
or
repnz
je
mov
adc
lea
stos
jle
sub
gs
inc
adc
fnsave
lret
cld
sti
mov
rclb
out
inc
and
and
cwtl
inc
sbbl
dec
jmp
mov
adc
pop
sub
movsb
pushf
lcall
aad
das
aad
push
pop
and
and
cmpl
insl
mov
popa
bound
and
subl
mov
ss
or
cmpsl
xor
add
or
add
ds
cmpsl
xor
ja
jl
adc
mov
addr16
fcmove
out
repnz
fisubs
xchg
dec
sub
or
xor
adc
fbld
xchg
fisubrs
adc
inc
gs
fisubrs
push
stc
movsl
mov
sahf
xor
test
std
mov
lock
incl
ja
xor
movsl
call
pop
xchg
xor
add
mov
test
add
jo
pop
jae
jge
pusha
orb
sub
mov
jecxz
fbld
neg
mov
inc
inc
push
test
and
shlb
adc
inc
or
push
mov
mov
sub
add
mov
jnp
cmc
cmp
int3
movsb
inc
das
or
lea
lds
mov
fisubrs
test
sbb
xor
stos
mov
sahf
push
ljmp
inc
jae
into
xor
xchg
push
or
mov
or
mov
push
fwait
mov
imul
mov
mov
nop
mov
push
add
mov
sub
xchg
into
mov
js
push
cmpsb
sbb
dec
movsl
inc
cs
adc
cli
mov
repnz
or
push
mov
sbb
stos
int
enter
dec
jo
lods
in
ja
test
dec
cmc
adc
cmpsl
push
mov
sbb
orb
jl
and
mov
fadd
mov
int
shlb
dec
or
fisttpll
xor
mov
add
adc
fwait
das
mov
lcall
sub
insb
call
push
inc
mov
pushf
jle
pop
fmuls
dec
inc
mov
add
movsb
mov
push
imul
inc
bound
cmp
sub
jnp
sbb
ljmp
clc
bound
xchg
mov
push
cmpsb
test
fcomip
jp
mov
mov
lcall
inc
sub
cwtl
daa
mov
cmp
rorb
push
cmp
push
cltd
mov
push
es
pop
xor
cmc
mov
scas
cmp
fwait
jecxz
push
jbe
and
cmp
push
inc
cmp
sub
and
xor
lods
pop
inc
lret
in
out
sub
inc
or
mov
mov
mov
fwait
sub
mov
cmp
cmp
lds
inc
dec
lcall
pop
cmp
jecxz
mov
jns
divb
nopl
xlat
jl
fsts
loopne
aas
imul
push
and
adc
add
lret
xchg
push
mov
lea
mov
ror
pop
lds
mov
jecxz
addr16
hlt
push
jecxz
test
or
push
sbb
popf
aaa
shlb
sbb
mov
push
and
jle
pop
loope
cli
mov
and
dec
rcll
add
sbb
out
push
mov
loop
xchg
jge
push
cltd
xchg
xorl
sub
sti
in
jno
and
shrb
roll
or
xor
inc
jno
and
mov
aaa
pop
jae
pop
push
and
fcomps
xlat
adc
shlb
mov
test
pop
scas
mov
lock
add
jmp
arpl
pop
leave
fwait
xchg
test
push
mov
roll
data16
setge
push
movsl
test
jns
and
outsb
sbb
mov
fcompl
mov
mov
sub
cld
stos
mov
jp
scas
data16
enter
cmp
push
mov
dec
iret
in
repz
js
fisubs
cli
sarb
ss
ljmp
cmp
rcl
jae
mov
data16
dec
and
pop
dec
repnz
cs
xchg
fists
sub
jo
stc
push
jp
loopne
add
dec
adc
adc
or
or
push
add
jb
in
jp
mov
or
enter
icebp
test
dec
mov
loopne
push
sbbb
insb
pushf
and
push
push
push
add
aaa
pop
and
cmp
nop
inc
xchg
or
adc
push
roll
pop
cmp
mov
cmp
loope
ret
and
int
int3
cli
xchg
xlat
sub
clc
sbb
xor
aad
lds
xchg
lret
sub
or
sti
movsb
bound
or
sub
pop
rcr
lret
xchg
dec
gs
jecxz
test
lea
sub
mov
mov
nop
adc
inc
retw
inc
rcl
and
jl
sahf
data16
ffreep
dec
jbe
mov
daa
lcall
pop
push
in
cmpsl
je
bound
pop
pop
rdtsc
lea
mov
jns
cmp
fsin
addr16
imul
jle
shl
xor
cmp
stc
je
xor
dec
sahf
fildll
add
xor
test
push
jecxz
sub
aad
test
int
sbb
out
stos
lcall
dec
aaa
test
add
inc
push
insb
das
cmc
xchg
mov
jb
sbb
sub
jno
cmp
pop
ret
ret
dec
or
stc
inc
or
dec
fdivrs
pop
and
loopne
mull
mov
sti
shl
stc
idiv
das
shrl
imul
mov
xchg
out
add
test
dec
ret
inc
push
arpl
aam
mov
bound
scas
ljmp
xlat
dec
xchg
sub
jnp
imulb
out
sub
xchg
mov
test
out
mov
xlat
fstpt
imul
pop
shlb
sub
xor
push
jb
sub
int
mov
xor
xor
ja
lods
mov
aad
jmp
sbb
dec
or
mov
push
add
inc
in
ss
int3
lcall
sub
clc
out
push
add
mov
icebp
jno
xchg
out
out
adc
outsl
dec
sbb
ret
gs
lret
lret
in
dec
xchg
out
sub
and
imul
push
and
int
xchg
int3
mov
imul
inc
lcall
inc
pop
rorb
test
add
je
or
mov
out
enter
sub
vmread
cmp
cld
loope
jg
mov
ret
fnstcw
out
cwtl
jg
lcall
jb
sarl
push
mov
pop
mov
push
or
add
pop
adc
ret
cmp
lret
insb
js
cmp
int
inc
mov
mov
sub
sbb
cmpsl
out
push
adc
cltd
loope
push
call
xchg
call
pop
push
xor
ret
addr16
fmul
into
push
adc
dec
pushf
mov
sahf
xchg
aaa
xchg
nop
and
or
pop
add
pusha
xchg
or
xor
or
jbe
cwtl
sub
add
icebp
mov
mov
cmp
lret
push
loop
repz
sub
xlat
hlt
insl
and
sub
int
xchg
out
cmovl
adc
popa
inc
insb
hlt
fs
jne
pop
inc
in
sub
cmc
ds
lds
shr
xchg
into
clc
stc
arpl
and
xor
pop
idivl
sub
loope
add
adc
jne
cmp
out
sbb
les
jp
or
fs
subb
in
nop
sbb
mov
dec
es
dec
sbbl
xchg
out
pop
mov
test
jle
test
and
jbe
subb
nop
xchg
add
xchg
inc
neg
lret
dec
adc
cmp
sub
mov
pop
mov
jns
xchg
movsl
push
in
cmp
mov
inc
insb
mov
pusha
mov
add
mov
xchg
das
shlb
ds
xchg
push
sete
sbb
ss
sbb
int3
sub
or
xlat
cltd
inc
divl
push
jns
cmc
adc
lds
out
mov
inc
fists
inc
repz
jns
or
in
add
lock
pop
xchg
out
cmc
xor
add
daa
xchg
xchg
cs
sub
addps
mov
bound
daa
ret
clc
iret
push
jge
sub
cmp
mov
sub
xor
add
xchg
and
mov
jnp
insb
out
es
enter
lods
mov
cwtl
cli
push
mov
jecxz
call
movsb
sbb
je
roll
xor
ss
in
inc
inc
fwait
push
ljmp
stc
and
inc
jl
fidivrs
shll
sub
lods
test
adc
pusha
loop
pop
sbb
icebp
fwait
lret
sti
jae
pop
aaa
xor
mov
push
pop
fisttpl
and
push
lcall
loopne
add
jge
sbb
in
xchg
cmc
scas
mov
aaa
fdivs
jo
or
ss
dec
in
jmp
sub
xor
inc
cmpl
cmp
fcoms
and
roll
imul
add
adc
fldenv
cmp
out
push
inc
loop
imul
mov
js
ss
movsl
call
inc
sbbb
jns
scas
pop
and
sub
mov
shr
popa
add
sar
scas
ret
dec
inc
adc
ret
sti
xchg
or
and
scas
fnsave
lahf
jl
or
push
out
call
push
xchg
fsubl
cwtl
xorl
mov
inc
bound
subl
imul
xor
into
xor
lret
leave
in
push
pop
pop
pop
insb
fiaddl
movsl
sahf
sti
add
jmp
or
cmp
enter
scas
mov
mov
cld
xor
cmpsb
addb
and
je
cmp
mov
in
mov
sti
dec
enter
add
adc
mov
int3
cmpsl
std
lds
pop
mov
popa
lahf
mov
jae
jmp
testb
pop
mov
adc
dec
pop
iret
cmp
inc
cmp
pushf
jmp
inc
inc
push
cmp
or
repnz
sub
jmp
push
jnp
cmp
dec
out
js
imulb
xchg
cmp
cmp
dec
ja
and
cmp
jecxz
jge
decl
push
lahf
adc
dec
es
add
add
inc
aaa
popa
mov
es
cmp
jmp
imulb
mov
pop
pusha
jne
mov
mov
fdivl
add
sbb
ret
sub
adc
lret
pop
ja
inc
out
cmpsl
xchg
push
iret
sbb
je
xchg
push
or
mov
sub
push
xchg
cmpsb
hlt
mov
xchg
pop
pop
mov
pop
sub
iret
mov
and
xchg
insb
je
mov
mov
dec
mov
inc
pop
je
jp
xchg
jo
sbb
adc
shlb
popf
push
mov
mov
add
xor
ds
push
pop
loop
sub
jp
imul
and
inc
stos
or
pop
dec
out
js
es
popf
mov
pop
in
sbb
out
mov
aaa
xor
ret
xor
lods
repnz
lods
mov
or
pop
pop
jnp
jmp
push
lods
neg
mov
sti
jge
add
jb
loop
sahf
loop
stos
movsl
sub
fnstcw
push
imul
call
sub
leave
addl
mov
xchg
pop
mov
push
inc
or
pop
fcomps
les
push
int3
cmpsl
dec
fcmovb
popf
imul
cs
scas
out
lea
mov
lds
clc
inc
adc
test
in
sbb
inc
lock
stos
push
aad
dec
fxch
cmp
test
ucomiss
insw
icebp
or
jae
mov
jp
shrw
ds
jno
in
jecxz
into
dec
js
jo
and
dec
fwait
dec
insb
sarl
sbb
pop
test
push
cmc
xchg
dec
mov
mov
and
inc
mov
sbb
daa
cmp
xchg
mov
jo
fistpll
lret
loope
jp
push
mov
in
ret
push
mov
cld
and
or
push
dec
pop
sub
mov
je
jl
sahf
pop
lds
sti
xchg
or
push
jo
and
cs
pop
pusha
subb
xor
scas
jmp
loopne
icebp
scas
aad
mov
les
ss
dec
test
lock
mov
arpl
scas
stos
sbbl
cmpb
xchg
mov
ja
cmpsb
in
arpl
in
mov
ret
xchg
mov
fnstsw
jl
std
test
in
mov
and
or
xchg
xchg
popf
and
mov
sub
and
mov
lock
leave
pop
je
jbe
lods
mov
inc
scas
cmp
xchg
lret
test
push
xor
cmp
cmc
in
adc
or
movsb
dec
jns
stc
inc
cli
jp
xlat
push
cmc
push
mov
xlat
data16
scas
out
movsb
jle
cld
gs
jae
jb
aam
nop
dec
pusha
scas
or
inc
sub
adc
lods
add
cltd
cltd
xor
xchg
insl
test
stc
sbb
pop
lea
fistpl
mov
add
out
ficoms
mov
jecxz
iret
push
pop
stc
cmp
movl
rorb
pop
dec
jbe
push
xor
jnp
push
movsb
dec
test
inc
arpl
loopne
sub
popf
sbb
inc
push
pop
notl
andl
ret
xor
mov
pop
into
bound
sbb
sbbb
lock
imul
aaa
pop
imul
popf
push
lret
lcall
rclb
mov
in
inc
mov
sbb
xchg
cmp
loope
imulb
hlt
out
push
lock
stos
xchg
stos
enter
xor
push
int
and
mov
das
mov
lea
cli
cmp
mov
jecxz
stc
dec
imul
adc
cld
jp
push
stos
loop
mov
mov
xor
and
inc
inc
pop
aaa
or
dec
xchg
jb
ds
adc
fnstcw
jl
std
xchg
lock
mov
add
shl
stos
sti
outsl
xchg
inc
addr16
jb
xlat
pusha
loope
adc
adc
sbb
shlb
pop
or
aas
test
lock
stos
mov
cmp
stc
adc
popf
mov
into
xor
mov
push
jne
push
xor
lods
rcll
pop
gs
in
ficompl
xlat
faddl
xlat
ret
dec
push
xchg
loopne
lcall
rolb
xchg
mov
mov
scas
xchg
aaa
loope
dec
xor
mov
and
mov
and
jno
xchg
mov
xlat
push
mov
data16
inc
pop
sbb
gs
mov
lock
sbb
and
pop
xchg
inc
fs
psubusw
or
pop
pop
fucom
fists
pop
push
popa
mov
cmc
clc
xchg
push
cmpsl
test
cmp
add
inc
cmc
test
xchg
lret
movl
mov
cld
xor
mov
lods
shl
push
cmp
pop
jne
lea
mov
adc
lret
mov
xor
sbb
xchg
in
out
and
out
xor
inc
sbb
dec
int
push
xchg
dec
sbb
movb
loop,pt
pop
sbb
aaa
jle
mov
ds
fisubs
xor
cld
sbb
fistpl
lds
push
inc
enter
lea
jns
cmp
fsubrp
mov
cmpsb
rcr
loopne
loop
mull
push
hlt
dec
jns
ds
mov
pop
and
mov
iret
xor
dec
dec
sub
adc
dec
mov
test
ja
cmc
dec
inc
lods
sbb
adc
push
pop
xor
mov
mov
rorl
notl
scas
sbb
xchg
inc
imul
mov
cmpsb
mov
jne
mov
leave
sub
sub
pop
pusha
inc
push
fistpll
jle
inc
in
iret
scas
mov
push
outsl
les
lock
sub
dec
stos
and
or
xor
mov
in
or
out
js
pop
xchg
xchg
testb
ss
movsl
jae
hlt
xor
mov
test
movsl
out
notb
out
xlat
sbb
mov
add
ja
inc
out
test
cmp
test
fisttpll
add
push
int3
cmp
xor
clc
xchg
in
mov
mov
pop
mov
add
lret
stos
sahf
push
mov
int3
cmpsb
scas
fsubrl
jecxz
fiaddl
xchg
sub
inc
sbb
xor
mov
lcall
dec
xchg
xor
mov
imul
cli
lret
movsl
ja
icebp
mov
mov
push
hlt
lret
push
adc
dec
or
gs
out
scas
test
pusha
popf
jge
ret
dec
sti
inc
jbe
fists
pop
popa
sub
push
pop
sub
jp
pushf
in
testl
mov
push
dec
mov
mov
jl
lods
fcompl
fwait
out
inc
scas
mov
xor
repz
and
dec
aaa
jge
jmp
mov
std
mov
adc
loope
mov
sub
aaa
mov
cmp
ret
rcrb
jae
mov
clc
pop
mov
aaa
fsts
cwtl
cwtl
xchg
jns
fstl
adc
jecxz
pop
xlat
adc
mov
ja
lds
iret
fbstp
lcall
iret
sub
sti
or
cmp
movsb
out
es
addr16
add
mov
fnstenv
insl
int
mov
fdivrs
and
mov
jmp
cmpsb
cmp
lret
pop
pop
icebp
movsb
mov
jle
sahf
push
pop
pop
out
out
push
cmp
push
aad
std
pop
sbbb
out
or
in
aas
or
mov
pop
aad
add
bound
icebp
cmc
sub
cltd
jp
and
outsb
cwtl
push
push
call
in
mov
xchg
lahf
call
int
repz
outsb
stc
sahf
enter
rorb
fcoml
lods
xchg
push
sub
rorb
inc
fwait
mov
xchg
dec
in
ret
imul
sbbl
outsb
mov
and
push
into
cmp
inc
ja
cmpsl
xlat
mov
and
shll
dec
stos
mov
ss
pop
lahf
push
cmp
add
testl
iret
mov
add
add
gs
xor
jecxz
pop
popa
xchg
out
push
mov
mov
dec
sti
sbb
nop
mov
iret
arpl
dec
pushfw
xchg
fxch
addr16
pushf
scas
into
movsb
mov
cltd
jecxz
movsl
xchg
nop
and
fdivrl
mov
pop
cld
sbbl
jb
or
push
gs
setbe
out
mov
push
inc
repnz
dec
mov
sub
leave
mov
cmpsb
lods
rclb
sarl
xchg
cmp
and
cltd
daa
push
lret
popa
sub
add
mov
pop
cld
arpl
imul
mov
adc
mov
jno
mov
aaa
pop
ljmp
int
cld
mov
popf
pop
cmp
loope
sbb
cmp
test
mov
push
adc
sbb
xor
jg
xlat
push
sub
test
cmp
sbb
test
movsb
pop
mov
pop
enter
outsb
cli
and
cmpsb
mov
pop
outsb
loopne
into
movsb
loop
adc
mov
sbb
lahf
inc
imul
cmp
jbe
mov
jns
rclb
mov
test
daa
fists
or
xchg
cmp
cwtl
rol
fistpll
sbb
xor
cs
inc
inc
stos
rcr
xor
pop
xchg
push
and
sub
sarb
outsl
pop
push
or
out
push
push
xor
jns
mov
es
out
add
out
or
push
and
pop
inc
dec
push
mov
mov
sbbl
pushf
out
mov
ljmp
pop
fwait
loope
sbb
addr16
sti
nop
xchg
pop
test
cmp
cmp
jnp
mov
outsl
sti
int
arpl
out
dec
and
pop
mov
insl
add
loop
jle
enter
into
or
gs
lock
inc
out
cmpsb
cmpsb
fisttpll
imul
mov
adc
jns
dec
xchg
test
mov
rol
or
fsubl
fistpl
adc
and
popa
sbb
sbb
xor
fs
xor
fsubr
xchg
int3
mov
xchg
popa
and
ret
leave
adc
push
les
test
xlat
xchg
movsl
lret
mov
mov
aam
sbb
enter
repnz
xchg
pop
adc
xchg
jecxz
int3
iret
popf
jp
es
jae
fistpl
leave
fidivrs
xor
jns
xchg
arpl
pop
nop
scas
cmp
push
fwait
jp
sub
fdivrl
dec
sbb
mov
xchg
outsl
sbb
jbe
std
lock
xchg
push
jns
jmp
outsl
jne
ret
in
pop
hlt
mov
les
insb
dec
inc
mov
loopne
cltd
dec
dec
dec
xchg
mov
xor
icebp
das
push
mov
adc
call
push
and
test
mov
pop
js
xchg
aad
mov
lds
jg
stos
int
aaa
mulb
add
xor
xchg
xorl
xor
enter
push
push
and
test
lods
adc
adc
adc
sbb
movsl
dec
dec
adc
mov
rorl
xor
dec
pusha
loopne
out
daa
cmpsl
mov
mov
in
movsl
inc
sbb
ljmp
sbb
jg
pop
and
in
cld
loopne
loop
stos
xor
icebp
jno
out
sbb
lock
cmp
cmp
xchg
cmc
sarb
mov
cmpsl
hlt
xlat
inc
stos
pusha
dec
sbb
leave
pop
int
jmp
rolb
pushf
ds
xlat
movsl
pop
hlt
mov
mov
ret
xchg
aas
or
dec
mov
movsb
fwait
push
xchg
or
bound
fdivrl
cmp
add
or
loop
add
push
mov
jecxz
jno
fwait
jmp
ds
ret
mov
iret
fstpt
dec
lods
ja
ud2
mov
adc
cmp
sbb
mov
inc
push
aas
push
popa
push
cmp
cwtl
lret
daa
pop
xchg
mov
out
rcrl
jg
idivl
pop
xchg
mov
lret
repnz
add
arpl
clc
clc
popf
aam
stc
inc
aam
mov
mov
insl
xchg
out
sub
iret
loope
outsl
mov
jmp
sahf
fs
repnz
clc
sbb
dec
sti
add
out
sub
push
fcmovnbe
decl
outsb
mov
ret
pop
popa
loope
add
sbb
cs
dec
cltd
aaa
iret
xorb
pop
sbb
push
out
movsl
pop
jecxz
dec
adc
add
js
bnd
add
test
mov
dec
repnz
mov
lret
pusha
pushf
add
addr16
mov
sahf
jae
repz
lods
nop
scas
pop
in
or
inc
insb
xchg
rorb
hlt
fcmovne
mov
ja
mov
push
in
repz
xchg
push
or
jo
je
pop
cli
jp
push
aas
and
test
or
testl
adc
das
sbb
fwait
in
cmp
fwait
mov
test
mov
lcall
sub
lods
mov
pop
sti
loopne
je
cmpsl
sbb
xchg
dec
jns
shrl
sarb
push
outsl
inc
popf
xor
ficoms
lret
lods
pop
sub
push
aaa
fists
scas
stc
in
adc
add
int3
pop
inc
mov
push
pop
dec
mov
lahf
cmpb
ss
cltd
or
addr16
das
jne
mov
xlat
pop
stc
das
adc
xchg
jns
in
repz
mov
mov
fxch
movsl
std
xor
inc
add
pop
pop
cmp
push
in
cmc
adc
sbb
pop
dec
mov
xchg
add
add
loop
int
or
loope
xor
movsb
imul
sar
jb
xor
mov
icebp
jne
outsb
xchg
pop
mov
mov
mov
out
mov
popf
inc
pop
cmp
stc
mov
push
ds
es
lods
dec
icebp
pop
dec
inc
sub
jb
mov
xchg
inc
jns
into
cmp
inc
pop
mov
inc
adc
xchg
mov
xchg
cmp
mov
dec
sbb
inc
cwtl
in
xor
je
and
jbe
inc
jbe
outsb
repnz
xchg
sub
xchg
push
sub
and
jbe
pop
cmpsl
mov
add
loop
xor
pop
lea
sbb
jno
fldenv
or
mov
nop
scas
inc
or
pusha
mov
lcall
or
rclb
fmuls
inc
pop
and
fsubr
xor
hlt
sub
popf
jge
inc
push
mov
sahf
mov
inc
sub
bound
jle
mov
mov
js
into
push
inc
xchg
jne
xorl
xlat
mov
js
test
stos
mov
cltd
cltd
inc
sti
out
push
sbb
adc
sub
push
dec
js
daa
fldt
cmpsb
or
mov
enter
and
adc
or
aas
pop
sbbl
pop
fidivrl
lret
mov
pop
cld
in
dec
lds
test
call
xchg
and
sub
push
stos
mov
daa
jnp
mov
dec
cld
out
add
mov
inc
out
out
movsl
dec
inc
popa
add
sub
mov
cmp
xor
clc
push
or
add
pop
ds
xchg
adc
fdivl
adc
inc
cmpsb
sti
dec
icebp
or
adc
cmp
mov
pop
mov
adcl
in
lock
scas
movsl
js
pop
es
sbb
xchg
cltd
pop
push
testl
mov
in
imul
mov
pop
pop
imul
daa
add
loopne
js
hlt
push
lods
rolb
add
in
lock
or
cmp
sbb
mov
into
loope
mov
adc
mov
cmp
mov
ficoml
ss
pop
add
sbb
jl
inc
mov
jge
movsb
jnp
arpl
loopne
pushf
sub
movsb
push
pop
aam
and
les
mov
bound
or
loop
add
loop
xor
lods
add
sarb
xchg
repz
test
fucomi
ds
inc
cld
insb
addb
out
xlat
push
shrl
fidivs
loopne
push
pusha
outsl
clc
mov
adc
lret
fcoms
outsb
lret
mov
pop
inc
nop
decb
imul
cmp
rcl
cmpl
fstpt
aam
dec
mov
enter
or
scas
jo
pop
aam
push
ffree
negb
lea
push
jnp
sub
fdivs
mov
fiaddl
rorb
orb
mov
jge
push
adc
cmp
test
xchg
mov
aam
out
ja
int3
out
into
lea
stos
push
mov
das
cltd
mov
pop
pushf
inc
shl
xchg
push
xlat
push
stos
lock
sub
dec
stos
fisttpl
pop
push
lcall
push
bnd
mov
loopne
arpl
push
sub
xor
roll
lahf
and
insl
mov
xchg
imul
fimuls
and
dec
outsl
scas
dec
int3
ret
and
dec
mov
cmp
push
fidivrl
sub
insb
outsl
sarb
xor
leave
mov
test
dec
xor
hlt
shlb
lcall
sub
test
scas
sub
gs
sub
mov
jp
lahf
adc
int3
pop
fisttpl
lods
movsb
jns
xlat
and
inc
lcall
pop
ror
mov
repnz
jne
xchg
mov
out
push
xor
inc
pop
ljmp
mov
pusha
popa
mov
outsl
mov
lret
sbb
sub
mov
test
and
jg
inc
mov
sbb
aam
inc
dec
mov
aad
sbb
sbb
fldt
shrb
ljmp
add
les
popa
movd
aas
popf
push
shrl
cld
dec
sub
mov
in
sub
mull
pusha
xor
loope
adc
mov
mov
into
mov
push
inc
lea
sti
lods
inc
dec
or
repnz
pop
cmc
jne
out
jp
je
mov
subb
dec
ja
jns
dec
sub
rorl
test
pop
in
repnz
and
and
mov
lcall
in
lret
and
jno
mov
int
xor
sbb
mov
cmc
pop
std
or
ja
sub
repz
test
lea
jo
shrl
mov
or
enter
xchg
les
pop
aad
fcomi
shrb
adc
sbb
lcall
fmulp
ror
xchg
aad
jge
sbbl
nop
pusha
dec
in
adc
cmp
sbb
or
pop
push
popf
and
sahf
jmp
cmpsl
jb,pn
cmp
or
sub
es
xor
or
xor
fs
sarb
xlat
mov
cwtl
pop
lea
enter
xchg
xchg
mov
jo
cmp
dec
sahf
push
cmp
adc
popa
cmp
and
xchg
fsub
sti
mov
lret
mov
sub
xorl
xchg
xor
or
mov
inc
lret
lods
jle
iret
stc
pop
xchg
imul
out
jecxz
lcall
cmp
ret
comiss
push
sti
jg
inc
or
dec
mov
cmpb
jecxz
testb
pop
rol
dec
int3
rolb
dec
sbb
movsb
pop
xor
stc
gs
enter
arpl
jns
and
sub
iret
sub
push
clc
cs
add
popa
lret
daa
push
test
sub
in
ret
xchg
ja
mov
sub
cmp
push
mov
mov
shl
loopne
jne
dec
mov
add
gs
xchg
add
lret
test
leave
jns
stos
push
mov
pop
dec
andb
lods
mov
xchg
sti
xor
outsb
xchg
xchg
test
gs
outsb
loop
dec
push
adc
add
xchg
repz
jne
add
sbb
not
decb
or
cltd
call
mov
insb
out
dec
aam
adc
es
ret
mov
pop
cmp
push
ss
push
rep
cmp
nop
testl
xchg
insl
pushf
sub
sti
and
insl
add
jne
pop
inc
inc
aaa
and
out
lea
les
fs
lods
cltd
cwtl
lahf
push
aam
loopne
pop
mov
sti
hlt
stc
popf
loopne
daa
hlt
subps
mov
cld
push
cli
shll
hlt
jns
pushf
shl
scas
sbb
and
mov
mov
out
cmp
xchg
pop
dec
push
cmp
inc
inc
push
xlat
xor
xorb
jne
sbb
fwait
add
lods
js
inc
test
pop
loope
paddb
cmp
daa
pop
pop
adc
sbb
test
or
addb
lcall
mov
fisttps
clc
rcr
aaa
sahf
push
add
in
pop
jno
mov
push
mov
dec
stc
adc
sub
sub
xor
jmp
inc
pop
mov
imul
pop
mov
or
fisttpl
mov
filds
jge
stos
aas
pusha
lds
add
and
pushf
jo
inc
aas
mov
testl
push
nop
enter
rcr
pop
std
aas
xchg
out
xchg
or
mov
or
popa
and
outsb
push
adc
repz
aam
mov
xchg
loopne
ds
test
stc
jecxz
popa
dec
clc
add
pusha
mov
jb
bound
sarb
sub
mov
fcomi
inc
stos
inc
xor
pop
jmp
add
mov
jne
mov
outsl
adc
shlb
sub
add
and
add
lret
cmc
aam
pop
sub
sbb
imul
scas
les
mov
dec
xor
into
imul
aas
jnp
fnstsw
lcall
icebp
jecxz
xor
loop
insb
fwait
sub
mov
adc
adcb
inc
ljmp
pusha
mov
rolb
and
jne
xchg
fisubrl
imul
cmpb
jp
cltd
jle
xor
imul
and
xchg
xchg
daa
into
adc
jns
jb
pop
sahf
adc
cld
jl
adc
or
jno
mov
add
xor
xor
mov
cmp
pop
stc
lods
xchg
notl
push
mov
add
mov
mov
jecxz
mov
jge
fcmovnbe
inc
addl
inc
inc
mov
cmp
js
xor
call
sbb
rcr
jns
scas
nop
jecxz
sbb
xor
mov
or
cmpsl
cmp
jmp
fimuls
cmp
hlt
imul
xor
mov
jo
or
mov
mov
mov
add
lcall
dec
data16
xchg
mov
icebp
sbb
lahf
iret
mov
pop
outsl
leave
outsb
ffreep
jae
pop
movl
mov
cmp
gs
inc
pop
notrack
mov
divl
lret
call
aam
dec
push
jns
shll
fsubp
mov
jne
mov
adc
nop
hlt
icebp
iret
xor
mov
add
popf
mov
lret
lds
mov
sub
dec
pop
dec
inc
push
lods
jg
push
jecxz
cmp
leave
movb
out
xor
into
dec
ror
cmp
mov
out
std
mov
sahf
call
jmp
mov
mov
dec
mov
fnstsw
fdivs
mov
cmp
add
jmp
pop
cmp
xor
dec
adc
pop
test
dec
adc
fdivp
nop
fnstsw
cmp
jb
aam
pop
mov
push
dec
imul
mov
xchg
loop
xchg
lea
pop
ds
leave
fsts
stc
push
rorl
cmp
mov
xchg
jl
iret
pop
cmc
daa
sub
sbb
scas
add
aam
fmull
ss
cltd
sahf
jl
shlb
inc
add
mov
dec
adc
roll
jo
ror
sub
fwait
jle
scas
cli
xchg
add
ljmp
roll
jge
mov
fsubrs
cli
sahf
arpl
and
rcr
daa
adc
mov
push
adc
daa
stos
fnsave
cmc
or
cmpsl
movsl
pushw
mov
add
enter
jb
adc
pop
jno
adc
inc
mov
sub
and
inc
mov
dec
dec
popa
jne
ret
gs
std
scas
iret
popf
movsl
aas
icebp
js
xor
mov
or
es
mov
xorl
dec
sti
in
out
cmp
inc
xchg
mov
mov
movsl
mov
add
cld
pop
sbb
jg
divb
and
pop
addr16
sub
clc
mov
push
in
lods
mov
enter
and
jl
inc
je
scas
jl
stc
sbb
mov
dec
push
or
mov
sbb
rcl
into
cltd
inc
add
xchg
mov
test
ret
dec
push
mov
and
repnz
loope
jnp
enter
popf
dec
test
mov
scas
and
push
idiv
sbb
xor
sti
mov
xchg
sub
popa
loop,pt
jb
mov
jb
ja
or
cwtl
loopne
dec
pop
shlb
in
xor
or
or
sarb
fs
insb
cs
sarl
lods
decl
inc
add
sub
pushf
bound
push
shlb
sbb
sbb
pop
data16
push
xor
out
adc
out
mov
iret
mov
fldl
aad
or
pop
fstp
xchg
fadd
adc
add
adc
fldenv
add
ds
mov
cmpsl
lods
add
xor
sbb
mov
testb
dec
inc
leave
sbb
mov
xor
jb
inc
rcr
mov
xor
push
mov
loopne
inc
push
repz
out
mov
add
mov
cmp
sub
cmc
xchg
arpl
inc
dec
fs
repz
lcall
or
jbe
pop
xor
inc
ficoms
mov
call
les
sub
out
push
hlt
fistps
pop
mov
cmp
in
or
dec
or
movsl
or
xchg
mov
mov
and
mov
add
push
inc
aaa
xor
pop
mov
sub
out
inc
and
popa
cmp
push
out
cmpb
mov
mov
into
dec
pushf
mov
icebp
pusha
add
jp
outsl
bound
jbe
jge
xchg
and
mov
adc
leave
lock
jnp
repnz
adc
and
pop
inc
mov
psubsb
inc
loope
roll
lock
jp
out
mov
pop
stc
push
cmp
jmp
push
ja
sub
call
push
and
in
sub
lret
cld
push
push
outsb
lret
test
push
mov
and
leave
fdiv
dec
push
push
lret
pop
fwait
push
xchg
icebp
ljmp
std
jae
leave
ret
cmp
dec
test
jp
cs
lret
lidtl
leave
mov
or
popa
pop
pushf
push
out
icebp
pushf
in
testl
out
push
leave
cmpsb
insb
mov
mov
cltd
repz
or
sub
xchg
imul
pop
jle
insb
cmp
cli
aam
pushf
cld
ja
jl
les
adc
call
leave
add
jle
aaa
fidivrs
cs
ret
call
or
pop
ror
ds
push
push
jns
sub
loopne
add
inc
push
imul
cmp
jnp
rolb
sbb
jp
jb
push
adc
pop
aad
rolb
jnp
cmp
lods
std
add
or
notl
sub
push
add
and
push
orl
cmp
pop
jp
xor
sbb
add
sarb
jae
sbb
shrl
call
mov
pop
icebp
add
inc
push
punpcklbw
and
xchg
jb
mov
int3
mov
sub
fs
sub
cli
enter
inc
repz
hlt
xchg
pop
mov
push
test
rorl
xchg
push
mov
test
xchg
add
dec
fcoms
in
or
cmp
in
sbb
sbb
jne
xor
xor
lock
adc
test
cmp
jecxz
lds
inc
into
sbb
loope
xlat
xor
mov
call
mov
enter
popf
lcall
movb
mov
inc
mov
call
adcb
mov
sbbl
dec
mov
push
dec
fimuls
aas
pop
int3
mov
pop
cmp
mov
stc
sub
adc
insb
movsb
frndint
imul
fiadds
lret
sbb
scas
adcl
loopne
cmpsb
pop
jbe
ljmp
sbb
cmpb
sbb
xor
out
adc
inc
xlat
arpl
adc
push
jno
out
iret
scas
inc
lods
cwtl
sbb
aaa
mov
mov
pushf
adc
movsb
mov
adc
mov
and
divb
icebp
sbb
ret
mov
cmp
jle
jae
push
push
xchg
sti
sub
lods
stc
mov
das
adc
or
es
sarb
push
fisubrl
imul
jmp
icebp
aad
push
repz
lahf
out
mov
js
out
push
notl
sbbl
ret
xor
filds
push
sbb
inc
xchg
loopne
sub
push
js
loopne
aam
xchg
icebp
ss
cmp
or
scas
jne
and
xchg
dec
push
mov
andb
ljmp
stc
xchg
add
jecxz
adc
inc
inc
pop
cld
inc
dec
xor
outsb
mov
or
or
jmp
bound
insl
test
test
pop
push
lahf
movsb
insb
mov
in
or
cmp
and
out
aas
test
into
outsb
jo
sub
xchg
xor
xchg
divb
in
adc
push
or
bound
xchg
fsubrp
mov
dec
lds
inc
scas
xchg
mov
xor
xchg
sbb
jne
dec
xor
setae
xlat
scas
jnp
js
jmp
int
fs
leave
enter
push
dec
das
lods
mov
mov
js
int3
mov
jmp
lcall
jbe
call
cmpsb
out
xlat
or
mov
xorl
adc
jge
push
test
mov
out
test
jae,pt
dec
movsl
xor
lods
push
sub
sub
dec
popf
popa
cmp
push
subb
sub
lahf
enter
or
cmp
cmpsb
pop
loopne
ja
rorl
pop
xor
mov
ret
mov
shr
pusha
out
ljmp
in
scas
ss
jge
int3
movsl
jle
mov
hlt
sub
or
jnp
add
addl
inc
popa
sbb
inc
addr16
cmc
xchg
cmp
enter
fnstsw
mov
aas
push
addb
jo
sub
out
inc
outsb
pop
pop
arpl
xor
mov
ret
jb
mov
dec
adc
dec
mov
out
scas
jecxz
int3
cmp
lods
push
or
loope
cmp
xchg
sbb
aam
cltd
imul
jmp
pop
or
xor
add
cmpsl
scas
lcall
pop
fcmovnbe
leave
out
fs
fcompl
or
loopne
xorb
mov
cmp
mov
mov
mov
dec
add
lret
mov
mov
lahf
dec
aad
rolb
ret
mov
xchg
mov
mov
jo
mov
adc
jne
aas
xchg
fdiv
setnp
out
rolb
jo
push
cmp
ficomps
divl
jae
jae
pmullw
pop
jnp
movsb
leave
shrb
repz
mov
test
std
ss
int
inc
xchg
cmpsb
xor
push
jb
and
adc
mov
mulb
xlat
inc
inc
div
pop
jno
xor
xor
fstps
mov
xor
les
sub
mov
pop
int
add
mov
bound
insl
jle
faddl
dec
cwtl
psubq
mov
xchg
fldl
jg
sbb
dec
in
das
leave
shlb
jnp
mov
push
pop
lock
stc
xchg
int3
orl
popa
inc
loop
mov
xor
fxch
in
push
adc
fs
xor
xor
lahf
rcr
hlt
es
leave
dec
adc
ret
in
popa
enter
ret
jg
fnstcw
mov
std
cmp
mov
mov
lcall
sbb
leave
les
outsl
orl
mov
shr
xor
or
test
lahf
lret
leave
sbb
in
outsl
cltd
push
in
and
dec
lahf
cwtl
imul
lods
test
pop
xor
inc
int
popa
in
movsb
out
lcall
jnp
int3
inc
xchg
sar
sahf
xchg
push
lret
ja
xchg
xor
cld
push
mov
imul
das
adc
cmp
movsl
push
dec
mov
pop
lods
pop
or
or
in
gs
repnz
adc
xchg
add
mov
insb
mov
mov
jge
mov
sub
cmp
push
fimuls
xor
test
or
gs
dec
xlat
push
mov
push
loop
pop
fidivrs
inc
insb
xor
pop
mov
out
je
enter
push
cmp
push
add
cmpb
subb
push
inc
shll
xor
ds
dec
popa
add
dec
and
mov
testb
jmp
sti
cmpsb
std
pop
test
shll
push
popf
lahf
jle
xor
pop
mov
fsubs
in
jae
int
cmp
push
sub
roll
fwait
dec
aam
aam
int3
push
out
fcoms
ficoml
mov
idiv
in
add
push
sub
jo
in
and
mov
fmul
mov
out
jnp
jae
sbb
hlt
add
push
adc
dec
test
mov
xlat
adc
mov
into
adcb
jno
cmpsb
cmp
push
test
adc
push
sbb
rclb
xchg
push
ret
in
inc
sub
xor
add
sub
inc
ja
gs
std
xor
cmp
cmp
clc
add
imul
cltd
push
push
lahf
ss
ljmp
aas
mov
push
repnz
lahf
in
xchg
das
sbb
mov
in
cltd
scas
loop
imul
mov
lret
mov
mov
pop
stos
lods
pop
fdivrs
push
xor
bound
test
sub
dec
xchg
cli
dec
mov
iret
ds
movsb
mov
or
in
adc
rcrl
imul
arpl
imul
fisubrl
push
cmp
mov
test
adc
pop
sub
lea
pusha
pop
and
rcl
sub
xorb
andb
mov
call
and
scas
lods
popf
cmp
mov
aaa
leave
leave
shl
push
ss
in
popf
sarb
pop
xlat
aad
ret
mov
fisubl
push
mov
movsl
pusha
xchg
arpl
das
xor
mov
inc
fstps
jb
inc
fisubrs
gs
cmp
mov
stos
and
js
and
mov
jbe
aam
es
movsb
cmp
loopne
imulb
jmp
int
adc
push
aad
rorl
sub
aas
xor
loopne
pop
jne
cmp
andl
and
popa
bound
mov
loopne
jno
arpl
push
ds
sbb
dec
int
test
pmulhw
sbb
jmp
mov
or
adc
mov
mov
decl
sub
jge
or
popa
rclb
or
pop
pop
pop
cmpb
jo
or
mov
pop
pop
and
or
lods
pop
and
popf
sbb
pop
inc
loop
mov
gs
jns
add
jae
test
leave
shr
push
mov
jmp
movl
shrb
add
test
push
add
xchg
jecxz
lock
xchg
dec
mov
punpckhbw
inc
gs
pop
push
cmp
out
test
stc
aam
mov
push
mov
and
jmp
sbb
gs
fidivrs
lods
outsb
dec
cmp
xchg
jmp
jb
je
stos
nop
mov
addl
fidivrl
mov
mov
ds
leave
inc
fwait
mov
xchg
inc
mov
jmp
fisubrl
mov
js
sub
rol
jg
fadd
dec
xor
aaa
cmp
pop
jge
cmp
rcrl
dec
jp
mov
ljmp
jnp
pop
es
adc
loope
pop
add
mov
adc
lods
aaa
sti
mov
add
jb
mov
in
sub
int3
mov
pop
pop
jbe
loope
push
add
aaa
ja
mov
mov
dec
sahf
xchg
mov
sub
cmp
xor
fisttpl
negb
aam
xor
mov
ss
mov
mov
mov
xchg
out
mov
movb
scas
jae
or
das
in
test
aaa
push
neg
cmpsl
xchg
js
mov
xchg
inc
loop
pop
insl
cld
daa
sbb
bound
pop
fidivrl
fcmovu
adc
inc
mov
dec
insb
cltd
push
jo
mov
mov
cmp
shrb
mov
mov
xchg
addb
inc
loope
xchg
fidivrl
cmp
add
sub
pushf
sbb
mov
stos
add
fdivl
movsb
and
into
add
add
les
je
js
xchg
or
jle
push
pop
dec
and
call
pushf
andps
aad
test
adc
mov
inc
int3
call
push
imul
inc
mov
push
xor
jecxz
lcall
int3
sbb
lahf
xchg
push
cld
and
lods
or
imul
orl
adc
jl
xchg
ja
loope
out
pop
pop
pop
jecxz
adc
xor
cmp
call
jno
jne
jmp
fcomps
mul
mov
and
and
mov
pop
aam
out
sbb
dec
dec
je
mov
out
push
cwtl
orl
sub
push
push
mov
stos
ret
insb
mov
sub
clc
arpl
fldt
test
mov
mov
daa
mov
lods
popf
insl
out
and
pushf
outsb
in
push
lock
add
test
dec
ret
and
icebp
fcmovnb
dec
xchg
jb
div
mov
ret
xorl
cli
dec
leave
leave
fcmovbe
jge
test
sub
jnp
adcb
xlat
pop
call
int3
mov
es
nop
stos
fidivs
mov
movsb
pusha
iret
arpl
rcrb
pop
fs
sub
cmp
jo
sahf
mov
xchg
push
popf
xchg
daa
mov
cmp
jge
push
mov
sub
fucom
lock
dec
clc
push
mov
xor
icebp
jg
adc
cmp
mov
jecxz
icebp
fistps
sub
mov
cmp
push
iret
fstl
jmp
adc
imul
inc
enter
mov
ds
xchg
adc
ret
leave
mov
scas
jno
fs
inc
mov
add
adc
mov
push
data16
das
insb
xlat
xchg
xchg
fistpl
jo
fisubrl
sbb
cli
xchg
sub
jne
xchg
adc
xchg
cmc
add
rorb
xchg
movsl
js
xchg
xchg
mov
test
mov
mov
jne
addb
sbb
enter
lret
adc
push
or
push
es
cmpsl
scas
pop
lock
notl
test
test
mov
sbb
jmp
jmp
popf
jle
mov
and
xchg
cmp
jle
xchg
sti
sti
outsb
dec
push
mov
das
pushf
shlb
inc
loope
xor
pop
push
xchg
addl
mov
aam
shll
mov
or
mov
loop
and
xor
gs
pop
test
mov
sub
pop
outsl
cli
out
mov
and
jp
push
test
in
aad
ret
or
adc
out
in
mov
and
add
sahf
loop
jnp
lock
aad
ret
lcall
aas
push
inc
xchg
jl
pop
sub
or
cld
xchg
test
jno
testb
xchg
push
jb
pop
cmp
test
pop
in
imul
mov
stos
xor
push
sub
lret
fnsave
push
lods
mov
pop
imul
ss
pusha
mov
adc
or
adc
fcoms
xchg
push
inc
sub
sbb
clc
pop
pop
imul
xchg
and
outsb
lcall
aas
xchg
shll
test
sub
and
jle
cmp
push
jnp
out
aad
xchg
test
mov
cmpsb
push
adc
js
mov
xchg
loope
out
push
and
hlt
movsb
test
dec
pop
dec
sbb
cli
mov
out
lock
iret
inc
pop
out
pop
dec
jb
pop
addl
jnp
lods
mov
insb
scas
fwait
push
jno
shll
lods
inc
iret
shl
loopne
mov
insl
cmpsb
lods
sub
sub
gs
pop
mov
jg
mov
out
jb
mov
movsl
xchg
sbb
call
fidivs
sbb
test
lods
aad
push
add
outsb
and
pop
mov
outsb
lahf
fldt
push
xor
sub
insb
cmc
cmp
cld
add
cmpb
push
outsb
imul
sar
call
mov
insb
imul
mov
jae
lea
mov
push
jnp
call
cli
cmp
das
mov
push
mov
lods
mov
mov
and
stos
and
loop
adc
push
jl
scas
pop
xlat
movsb
mov
mov
xchg
sub
inc
jae
or
push
scas
int
cmp
inc
jp
push
pushf
pusha
das
sbb
int
sbb
orb
xor
pop
adc
fs
pop
dec
push
dec
movsl
enter
push
out
std
adc
mov
add
mov
repnz
xchg
sarl
mov
push
mov
push
dec
mov
xor
cwtl
lcall
cmpsb
jg
sbb
rorb
ret
mov
push
xchg
cld
sub
negb
push
inc
scas
push
ds
ficoms
inc
xchg
repnz
mov
stos
dec
test
pusha
jb
test
loop
jecxz
ss
lret
stos
jmp
xor
arpl
repnz
ds
sub
sub
push
gs
fsub
fdivrs
imulb
add
int3
cmp
in
rcll
adc
jns
dec
test
js
sub
pop
rclb
pop
mov
imul
mov
inc
stos
add
cmpsl
mov
repz
push
outsb
popf
rclb
cmp
lods
inc
jbe
test
cmp
xor
and
in
xlat
jae
je
clc
xor
adc
adc
stc
and
pop
movsl
out
mov
lahf
xchg
mov
testb
and
sub
sub
mov
out
mov
sbb
fcompl
adc
sti
mov
mov
mov
pop
xchg
xor
out
inc
rorb
jmp
xlat
test
lods
jle
sarl
ficompl
mov
cmp
push
add
rcrl
test
inc
into
fsubrp
out
arpl
repnz
hlt
sbb
cmpsb
cmp
jbe
stos
adc
cmp
out
mov
mov
jp
jbe
push
in
and
loop
inc
mov
jecxz
adc
or
jp
fmuls
arpl
arpl
fsubrl
in
inc
fstl
xor
mov
xorb
dec
jp
gs
je
mov
xor
fmull
inc
cli
mov
adcl
testl
dec
mov
add
out
mov
xchg
xchg
cwtl
mov
dec
leave
jl
pop
mov
adc
arpl
cld
nop
ja
and
sti
or
lret
and
xlat
in
jge
add
dec
test
les
sbb
leave
jmp
stc
or
jmp
divb
in
cmp
das
fsubs
dec
fcoml
fmul
enter
cli
aas
xchg
fwait
cld
fdiv
jo
fs
jns
add
and
inc
xor
scas
pop
adc
xchg
or
xchg
daa
out
inc
dec
cs
rolb
mov
mov
std
aad
xchg
inc
jge
pop
add
sbb
in
loope
xorl
test
shrb
loop
aas
jne
gs
add
cmpsb
stos
movsl
mov
bound
dec
rcl
sbb
out
out
xchg
push
mov
adc
enter
fnstsw
loopne
xlat
scas
cs
fidivl
mov
lret
push
push
mov
sbbb
jbe
sti
movsl
jmp
jnp
outsb
in
pushf
or
pop
daa
and
push
lock
xchg
adc
scas
loop
lahf
lahf
xchg
mov
and
sub
call
mov
xchg
add
movsl
lods
inc
lods
add
std
mov
outsb
loope
dec
cmp
out
push
jl
mov
sbb
roll
dec
ficomps
jl
out
ret
adc
inc
rolb
sub
push
push
jl
hlt
and
test
mov
outsl
pop
mov
lock
pop
mov
inc
mov
xchg
inc
cmp
pusha
add
dec
lods
xchg
cmp
sti
mov
mov
sub
cmp
xor
out
jne
pop
test
jnp
addr16
sbb
mov
pcmpeqw
pop
jns
out
xchg
pop
xchg
xlat
xor
add
xchg
aad
clc
cmp
stos
pop
pop
inc
cs
jmp
dec
xchg
aaa
loope
jecxz,pt
sub
pop
arpl
adc
xor
fimull
jge
rcl
add
dec
es
xchg
mov
jp
ret
fidivrs
popf
mov
mov
movsb
xchg
pop
dec
and
cmpsl
push
cmp
pop
xchg
int
push
mov
in
inc
pop
sbb
test
inc
ret
dec
jno
xor
xchg
into
test
ror
push
dec
fwait
jecxz
inc
stc
stos
pop
cld
lea
add
push
dec
aam
bound
cmpsb
popa
leave
mov
stos
shrl
outsl
and
pop
loop
xchg
test
xor
xchg
add
ja
cmc
xchg
mov
push
fbstp
xchg
ret
or
cmp
loope,pt
pop
or
add
mov
xchg
push
push
push
xor
and
jecxz
sub
push
push
enter
push
sub
js
add
popf
xchg
pop
fdivr
fnsave
lahf
mov
sahf
popa
cld
std
int
pusha
push
push
sub
test
out
shrl
push
add
aaa
loopne
stos
mov
add
pop
pop
ret
out
repnz
xchg
fstpt
test
test
das
sbb
dec
jmp
negl
mov
insb
dec
and
cmpsb
insl
xchg
cmp
fsubs
lret
repz
adc
push
sub
jb
out
cmpsl
movsl
lods
mov
scas
das
xor
or
jno
pop
push
in
cmp
arpl
lret
jne
mov
dec
mov
fnstsw
negb
test
nop
pop
push
inc
mov
jbe
dec
dec
pop
xchg
xlat
adcl
inc
mov
mov
out
xchg
dec
dec
and
push
sbb
ret
pop
stos
jns
xchg
loopne
popf
lock
dec
xor
repnz
fidivrl
gs
mov
push
cmp
xor
xor
test
push
lcall
mov
jmp
push
lahf
sti
sbb
push
mov
xor
mov
mov
mov
ljmp
lds
xor
mov
or
jb
jne
sbb
adc
pop
mov
fstp
mov
xchg
add
sbb
aas
push
scas
mov
dec
or
mov
es
fabs
mov
dec
add
aad
adc
push
push
cwtl
aas
movsb
inc
rol
xchg
rorl
jmp
pop
dec
shrb
imul
fldt
push
mov
cmp
xor
or
call
push
or
mov
popf
sub
outsl
lret
mov
outsl
jle
shrb
stc
not
adc
roll
flds
jg
or
pop
jne
add
aaa
jno
pop
cmpsb
jb
jl
cwtl
mov
test
pop
insl
xor
in
decb
jae
test
fcompl
out
mov
jnp
xor
xchg
out
pop
mov
or
and
orb
addr16
test
lret
in
push
xchg
nop
sbb
mov
add
mov
js
outsl
dec
and
mov
pop
stc
in
out
or
xchg
xlat
adc
lea
testb
dec
push
pusha
enter
out
loopne
jp
fidivrl
dec
shll
test
jnp
je
add
xchg
out
cmc
jecxz
pop
out
stos
pop
adc
jmp
or
nopl
mov
mov
sub
xchg
mov
aad
enter
mov
sbb
js
jnp
std
lcall
nop
push
mov
dec
fidivrl
ss
into
fs
mov
fnsave
xor
fildl
xor
lret
or
jo
xlat
and
into
push
dec
sbb
movnti
je
ljmp
mov
cmp
cwtl
dec
movsl
ds
push
stc
or
sti
pop
cmp
pop
cmp
cli
mov
nop
push
add
mov
sub
jbe
cltd
sub
sti
inc
enter
mov
push
in
or
xchg
push
shll
repnz
inc
mov
sub
outsl
fstps
out
sub
jmp
pop
push
pop
cwtl
loopne
inc
mov
pop
mov
fidivrl
sbbl
push
outsb
xchg
enter
insb
das
pop
dec
insb
jae
mov
inc
ret
xchg
out
mov
sbb
lock
push
ljmp
jecxz
call
or
pop
sub
jge
mov
mov
dec
sbb
xor
push
mov
dec
das
sti
pop
mov
and
push
sbb
pop
ss
into
cmc
mov
jg
pop
mov
mov
dec
jno
fists
cmpsl
bound
repz
arpl
sbb
fbld
lods
jae
test
adc
iret
hlt
xor
sbbb
addr16
xor
pop
dec
popf
insb
sahf
jmp
loop
stc
mov
jb
addl
aaa
cmc
ret
jne
gs
push
xchg
sub
jp
sbb
or
imul
jo
xlat
add
cmp
insl
push
lds
add
xor
jbe
and
mov
xchg
or
pusha
jmp
sub
cmpsb
stos
lret
xor
stc
pop
inc
push
mov
pop
sti
push
repnz
hlt
and
ljmp
jg
mov
cmp
mov
cwtl
neg
cmc
pop
lock
or
std
adc
inc
jb
sub
add
repnz
jo
jl
jne
ficomps
into
jp
dec
inc
and
pusha
mov
ljmp
push
js
jbe
xor
mov
cmc
mov
jb
cmp
cmpsb
xor
push
or
outsl
jmp
add
xchg
cwtl
sbb
icebp
adc
push
pop
adc
push
stos
outsl
mov
xchg
out
mov
loop
lcall
mov
push
mov
hlt
xor
fwait
mov
adc
sub
test
outsl
sub
popf
push
in
dec
stc
sahf
iret
insb
sbb
imul
dec
cmpb
jge
test
adc
add
rcrl
mov
push
addr16
mov
pop
sub
or
sar
cmpsb
lock
mov
ljmp
and
fsubl
dec
orl
xor
push
jecxz
mov
mov
mov
lock
mov
jg
mov
mov
daa
or
leave
mov
iret
and
inc
xlat
fdivrs
aas
mov
inc
test
jp
mov
sbb
outsb
sahf
ret
cmp
adc
adc
pop
in
adc
inc
icebp
cmp
push
xchg
andb
or
pop
add
xor
das
shrl
jae
repnz
outsb
ret
add
push
mov
ds
dec
mov
or
lahf
jae
sbb
jne
cmp
in
sub
jmp
lahf
cmp
mov
std
adc
jmp
in
xchg
sahf
adc
jle
jno
xchg
jg
cmpsb
or
test
ret
push
jnp
adc
dec
sub
dec
in
adc
dec
push
push
push
into
repz
lods
add
fiaddl
sbb
cmp
test
icebp
cmp
data16
push
add
dec
inc
nop
pop
imul
sbb
pop
fsts
xchg
jle
push
sti
push
movsl
push
push
nop
xchg
mov
pop
repnz
cmp
dec
out
lret
fs
xchg
aad
stos
push
push
pop
fwait
or
xchg
add
adc
mov
mov
dec
add
pushf
outsl
popa
addb
cmp
out
mov
mov
scas
fisubl
or
push
test
pop
es
push
cltd
ret
out
push
out
rorb
dec
xor
or
mov
lret
jne
adc
mov
jno
movl
cli
jle
fwait
mov
adc
popf
out
enter
cli
ljmp
push
scas
or
cmp
mov
push
xchg
xchg
add
scas
jl
sub
inc
mov
xor
push
push
fwait
cmpsb
in
dec
movsl
xor
mov
cmp
sarl
icebp
sub
fstp
add
push
loop
ljmp
xor
mov
xchg
test
sbb
and
xchg
aaa
mov
lret
vmwrite
test
in
mov
loope
jecxz
dec
sub
push
enter
andb
or
js
xchg
jmp
dec
xlat
std
push
or
jo
jo
test
pop
jg
pop
nop
inc
fdiv
xchg
cmc
push
out
lea
dec
popa
xchg
lods
les
out
out
insl
cmp
mov
dec
jmp
dec
dec
fstp
stos
inc
jecxz
sub
or
xchg
mov
sub
bound
xchg
enter
in
mov
in
adc
stc
pop
or
dec
push
das
cmp
xchg
mov
push
xchg
or
mov
adc
sub
dec
jo
in
pop
sbb
inc
movsl
push
aam
ret
jbe
inc
mov
xchg
clc
sbb
pushf
inc
add
inc
fldt
xchg
sub
dec
fstpl
or
sub
lds
fdivs
cmpsb
lea
js
filds
push
repnz
in
add
mov
pop
xlat
jns
repz
fisubrs
into
dec
xchg
dec
sbb
pop
iret
ja
scas
cld
rcll
je
sub
xchg
aam
loope
add
test
lret
xchg
and
shlb
movsb
arpl
xchg
and
or
outsb
sarl
xchg
cmp
lods
sub
cmp
aas
pop
xor
bound
inc
xchg
out
add
fldt
scas
repnz
test
in
and
inc
cld
push
and
xchg
rcll
fwait
inc
loop
mov
mov
divl
jb
dec
add
ja
xlat
xchg
int3
add
rorl
cmp
addr16
leave
or
adc
push
add
cmc
test
mov
cmpsb
lds
test
inc
lahf
jmp
adc
sbb
cmp
adc
sbb
and
mov
dec
dec
pop
pop
mov
scas
mov
jecxz
cld
popa
pop
inc
mov
outsb
imul
mov
rep
jmp
push
cltd
xor
jb
test
arpl
jp
gs
cld
popa
stos
les
cmp
dec
or
adc
sub
jmp
and
pop
push
int
push
sbb
or
shll
pop
mov
subb
mov
test
pop
inc
adc
mov
or
ss
dec
int
jne
cld
pop
out
fiadds
test
lea
inc
jmp
mov
sbb
push
push
outsb
mov
out
push
fwait
inc
mov
std
jne
inc
inc
lahf
or
punpcklbw
pop
lahf
stos
jb
mov
jg
call
xchg
push
movsb
scas
push
mov
xor
shl
dec
ljmp
iret
sbbb
pop
add
out
sub
scas
add
pop
adc
sub
scas
cmpsb
jle
sbb
push
cs
dec
enter
addr16
rep
xor
push
in
or
mov
fldl
loop
fdivp
test
xor
decl
sahf
jbe
pop
xchg
and
xchg
and
dec
and
push
popa
dec
inc
jl
test
cmpb
fcoms
cmpsl
ret
push
adc
leave
cmpsb
les
aad
in
cmp
or
or
fwait
mov
das
loope
movsl
pop
or
cld
aam
inc
or
fisubrs
pop
iret
mov
mov
imul
sbb
and
out
xor
mov
or
imul
test
aas
mov
push
js
stos
mov
movsl
and
xor
push
lock
scas
mov
pop
aaa
cmpsl
ret
arpl
push
mov
lock
lahf
xor
ja
dec
cwtl
and
push
fs
add
sub
popa
mov
dec
lret
pop
daa
sbb
xor
push
cld
es
shll
cs
pop
dec
mov
in
ret
adc
sub
jo
bound
pop
dec
xchg
jne
sbb
or
inc
sbb
cltd
inc
les
cwtl
add
xor
mov
into
sub
orb
pop
out
jl
loope
cld
mov
xchg
in
xlat
bound
xchg
stos
lret
push
sahf
dec
jnp
xchg
nop
ljmp
sarl
cmp
pop
aaa
ret
xor
sarb
push
sub
push
pop
loope
nop
push
push
out
imul
mov
mov
xchg
lock
in
aaa
pop
adc
enterw
jp
add
in
fldenv
fcomip
sbb
inc
dec
negb
inc
add
test
test
hlt
cld
test
sbb
jge
pop
push
popa
ss
xor
add
mov
jg
inc
dec
cmc
cmp
pop
sbbb
testl
cmp
lcall
jge
mov
mov
dec
sub
sbb
adc
mov
subl
pop
test
xlat
mov
in
push
mov
mov
fnstsw
clc
sbb
sbb
inc
dec
testl
stos
cmpsl
sub
icebp
lods
sbb
mov
mov
and
dec
push
cmp
push
push
add
outsb
add
cmp
sti
push
js
sarb
mov
mov
and
cmp
inc
movsl
adc
add
addb
jle
cmp
movsl
dec
or
dec
stos
stos
sub
test
or
add
stos
pushf
pop
push
push
and
and
aad
je
test
push
pop
cmpsb
jbe
mov
push
pop
mov
jae
rcll
into
out
sub
loopne
add
cld
shr
jbe
imul
or
push
test
fucomip
mov
pusha
negb
imul
sbb
mov
je
push
insl
cwtl
push
and
movsb
repz
mov
and
cmc
inc
fists
jnp
stc
xchg
xor
push
jns
call
fs
jmp
or
hlt
pop
push
js
aaa
add
rcrb
xchg
push
lret
or
sti
inc
ss
outsl
add
dec
inc
popa
nop
fcoms
inc
imul
dec
in
aas
imul
call
add
sub
mov
xchg
popf
push
test
flds
in
jne
cmp
lods
clc
sub
movsl
inc
jae
popf
mov
es
push
xchg
movsl
cltd
sarl
dec
lds
mov
add
sbb
push
es
dec
insl
add
jbe
sub
dec
inc
mov
lods
push
sbb
mov
daa
sbb
dec
xor
daa
add
cmpsl
pop
pop
loop
xor
and
xor
xchg
pop
jno
sub
ljmp
push
outsb
cmp
mov
or
xor
aaa
and
nop
fidivs
test
test
sub
pop
mov
into
xchg
push
xchg
add
push
fdivl
in
imul
test
sub
int
and
push
out
mov
xchg
inc
mov
es
add
in
mov
test
es
sbb
push
iret
std
sub
sub
sbb
lahf
je
inc
ds
xor
in
dec
sarb
icebp
outsb
jg
jle
jg
dec
mov
mov
aas
fldpi
inc
loopne
cmp
push
and
lahf
loop
sbb
sub
test
xchg
mov
ds
rclb
mov
mov
lcall
pushf
pop
imul
jno
cmp
pushf
mov
lret
mov
mov
lock
sub
jecxz
pop
movsl
add
mov
mov
xchg
or
lds
loopne
idiv
adc
mov
es
add
lods
sti
icebp
fwait
mov
negl
xor
mov
scas
lret
insl
cmp
lret
shll
mov
mov
outsl
push
jo
xor
dec
daa
xchg
insb
add
cwtl
adc
add
leave
gs
inc
pop
lahf
test
roll
roll
in
jp
shll
add
std
push
sbb
sarb
mov
mov
jno
testb
loop
out
cmc
push
mov
mov
pop
and
jmp
fildll
rcll
mov
lods
dec
les
jnp
fwait
incb
push
push
jne
mov
mov
insl
mov
pushf
jle
cmp
das
mov
jle
mov
jl
cmp
jmp
jle
xor
aas
xor
hlt
add
fucomip
mov
out
mov
cld
cmp
jbe
mov
push
arpl
mov
outsl
jne
push
adc
cli
call
lds
dec
mov
push
xor
daa
adc
cmc
or
push
sub
shl
push
popf
popa
adc
sbb
dec
sub
into
xor
cmp
ja
inc
lods
in
push
pop
inc
ljmp
sbb
jno
imul
cmp
setl
rcr
addr16
lahf
push
insb
fstps
sub
das
mov
repz
and
ljmp
mov
sub
mov
fsub
sbb
cbtw
cmp
lret
push
xor
inc
js
ret
push
or
dec
int3
lods
xchg
int3
inc
jp
or
ror
jge
ljmp
in
cmp
sbbb
sarl
ja
xchg
lret
addr16
push
and
jnp
imul
push
cmc
movl
repz
je
jmp
inc
std
dec
sbb
insb
jp
dec
ljmp
or
mov
je
arpl
push
mov
mov
sub
ret
and
mov
mov
lret
push
xlat
cmp
mov
mov
fs
adc
and
mov
xor
mov
xor
cmp
xlat
push
pop
jno
cs
pop
xor
pop
ret
repz
sub
js
es
push
mov
mov
or
push
shlb
or
inc
ljmp
and
push
and
dec
xor
hlt
call
jge
jnp
pop
ja
popa
sub
test
xchg
cli
fcoms
jbe
or
jecxz
sbb
xor
sub
inc
push
pop
cmp
stos
inc
testl
jl
cmp
insl
xor
insl
lahf
push
lock
add
shlb
in
enter
adc
jle
test
stos
iret
leave
xor
sti
xor
aaa
adc
test
ss
sbb
xchg
sti
jno
enter
push
jnp
push
or
pop
lds
repnz
cmpsl
xchg
sahf
fnstenv
push
test
gs
xor
stc
pop
imul
fsubs
nop
cmpsl
xchg
shlb
mov
out
and
lds
adc
inc
test
sub
aas
shlb
jle
and
orl
rcrl
sbb
and
lea
cmc
inc
pop
test
mov
pusha
out
cmpsb
ja
loop
ds
cmc
stos
pop
mov
clc
cs
stc
pop
lods
sti
lods
push
xor
ja
pop
in
pop
int
mov
in
ret
inc
in
clc
and
mov
stc
or
mov
pop
sub
jp
xor
vpunpckhqdq
xchg
add
imul
pop
xchg
jb
jbe
xchg
call
outsl
rcl
testb
mov
mov
push
inc
xchg
lret
dec
inc
xor
cmpsl
sub
pop
loope
out
pop
cmpsb
in
xor
sub
sub
in
pop
outsl
dec
outsb
add
pushf
add
mov
out
fildll
add
mov
inc
lcall
jmp
lcall
jb
mov
clc
outsb
jmp
cmp
fistpl
mov
mov
scas
dec
xchg
ret
int
in
imul
push
fcmovnb
nop
jbe
sahf
sbb
fidivrl
and
outsl
enter
pop
std
xchg
or
sbb
xor
scas
mov
loopne
insl
add
mov
mov
push
adc
in
dec
fdivr
mov
loopne
or
sbb
aas
test
faddl
fcomps
mov
into
test
and
jns
loope
lock
jo
mov
mov
repnz
sbb
pop
sub
or
pop
sub
pop
repnz
cmp
sbb
loopne
lret
insb
fisttps
pop
or
lahf
push
lcall
out
in
repnz
jmp
jl
jne
imul
jae
ret
jge
ret
sar
adc
and
ficoml
movsl
negb
jmp
mov
stos
sarb
xchg
int
test
mov
mov
pop
sub
add
ds
jp
xor
mov
xchg
pop
pop
mov
add
aam
dec
cmc
insb
add
stos
ss
dec
mov
push
and
mov
das
fs
rclb
sub
dec
lret
xchg
ret
lea
push
push
xchg
push
mov
mov
cwtl
addb
mov
les
lret
sahf
adc
xor
sub
loope
mov
jg
mulps
push
mov
push
scas
nop
pop
popl
lea
jo
mov
inc
jne
pop
cmp
mov
mov
es
ficomps
sub
xacquire
xchg
pop
ret
sbb
gs
pop
imul
bound
in
rclb
lahf
inc
xchg
mov
inc
fidivs
lcall
popa
push
xor
enter
sbb
xchg
cwtl
ja
add
sub
mov
mov
popa
jns
out
pop
call
fildl
add
xor
cmp
into
sbb
sub
loop
fwait
jb
lock
adc
sub
xchg
in
adc
iret
mov
jle
pop
je
cmp
in
cmp
loope
pop
mov
or
add
xchg
repz
jnp
cs
ret
jne
xor
fnstsw
gs
cmp
jmp
push
ja
or
lds
adc
mov
pop
jno
push
add
sahf
into
add
add
mov
andl
dec
outsb
aas
dec
fs
or
test
sbbb
or
mov
loopne
out
jp
test
jge
xchg
out
mov
push
sub
push
addr16
movl
jne
push
sub
stos
jmp
and
sbb
jmp
inc
xchg
add
loopne
cmp
das
test
out
xchg
movsb
xchg
mov
clc
in
packssdw
int3
aam
int
pop
into
or
stos
stc
pop
add
dec
sbb
sub
and
movsl
adc
in
xchg
popf
mov
push
jo
lret
imul
mov
test
sahf
dec
ja
clc
sbb
repz
jne
and
lret
pusha
adc
dec
pop
test
mov
loop
fbld
pop
dec
sub
out
mov
cld
jge
push
push
add
into
cwtl
jno
outsb
push
je
out
pushf
lea
fdivrp
call
fldl
sub
jl
sbb
mov
iret
test
sub
enter
jecxz
cmc
rcl
jecxz
rcrb
outsl
push
scas
mov
mov
icebp
inc
jecxz
pop
popa
into
fcmovbe
or
gs
adc
fstl
jae
sbb
das
out
in
mov
pop
inc
adcl
sbbl
bnd
lcall
clc
push
and
add
out
clc
mov
mov
lock
pop
jnp
cmp
cmp
push
xchg
push
push
jecxz
push
jmp
cmpsl
jno
cld
xorb
lds
sub
pop
sub
ds
jmp
insl
mov
cmc
mov
out
add
dec
out
mov
imul
jno
jp
fwait
aaa
imul
insl
mov
push
xor
lret
pop
lret
push
fs
mov
dec
xchg
sbb
inc
test
mov
pop
adc
mov
cwtl
push
aaa
hlt
jne
orl
sub
jno
xchg
cwtl
inc
cs
hlt
inc
mov
xchg
pushf
testl
rcll
or
lods
out
ret
xor
adc
hlt
sbb
outsl
mov
fidivrl
sub
or
dec
addr16
test
xor
cli
jp
mov
out
xchg
sbb
mov
aam
sbbl
fsts
lahf
imul
ficompl
out
dec
pusha
call
mov
fisubl
push
ficoml
mov
ds
add
adc
and
cmp
test
mov
pop
aad
das
inc
rorl
mov
out
int3
scas
push
enter
in
jae
loope
fsubrs
sub
adc
xor
repz
sbb
cmp
daa
fmuls
iret
shlb
add
pop
jmp
xchg
cmc
cltd
push
xchg
push
jge
rcrl
sarb
bsr
and
mov
or
pop
cs
into
push
dec
adc
push
mov
jo
lret
sahf
or
fnstsw
insb
and
lods
lods
lods
inc
adcl
bound
mov
mov
fbld
std
test
orb
and
test
sub
inc
rol
nop
mov
outsl
inc
push
aam
jnp
inc
loop
mov
movnti
hlt
shll
dec
int3
mov
inc
test
mov
adc
ds
sti
mov
mov
jmp
cmp
adc
dec
jbe
push
pop
lret
or
cmp
dec
imul
push
push
into
fsubrl
mov
test
out
xlat
jo
mov
sub
push
sub
adc
adc
pop
test
repnz
xchg
lcall
pop
movsl
or
and
add
sub
dec
sub
lds
jnp
outsb
das
imul
mov
inc
call
aad
push
faddl
inc
ret
outsl
pushf
in
movsl
pop
rcrl
and
scas
dec
out
mov
add
dec
xchg
call
es
cli
or
xlat
push
sti
arpl
cwtl
ret
mov
push
xchg
adc
adc
lock
xor
repnz
jge
rcll
fsubl
xchg
mov
sub
sbb
xor
test
jbe
jno
dec
jg
daa
loop
pop
jl
xchg
cltd
pop
adc
jp
adc
xchg
aam
cltd
arpl
fcmovne
adc
rcll
pop
dec
jecxz
and
rclb
mov
call
mov
aam
and
divl
jmp
or
clc
pop
stos
repz
jmp
testb
or
enter
imul
or
adc
and
mov
pop
jo
mov
fadds
pop
aam
aad
leave
orl
or
push
adc
pusha
mov
push
push
mov
movsl
pop
push
inc
scas
and
ret
and
or
orl
addr16
inc
test
aam
in
jno
mov
add
insl
sbb
jge
ret
repnz
mov
mov
int3
inc
outsb
dec
mov
pop
fsub
or
mov
cmp
movsb
add
std
adc
das
popf
push
movsl
lods
push
jge
js
imul
xorl
pop
xor
add
popf
fsincos
pusha
push
in
jmp
jne
dec
mov
in
dec
jmp
add
push
lcall
cmp
leave
jns
mov
cmp
test
pop
or
andb
jno
fildl
cmp
testb
pusha
sbb
xchg
push
nop
das
test
or
jo
mov
mov
test
shr
fsubrs
or
inc
sub
pop
xor
daa
jge
jno
cltd
push
fcmovbe
lahf
arpl
mov
pop
cmp
dec
pop
arpl
mov
push
cwtl
adc
sub
rorb
mov
inc
xchg
addr16
imul
inc
scas
add
hlt
add
mov
in
hlt
xchg
mov
xor
mov
adc
and
fiadds
jle
popf
out
mov
mov
pushf
mov
mov
cmp
test
sub
out
lahf
bound
or
loop
jg
std
dec
xchg
je
loopne
lods
mov
fistpl
or
hlt
in
add
es
addr16
pusha
mov
push
imul
dec
cmp
leave
lcall
jo
rcrb
aad
mov
imul
lods
xchg
mov
sub
mov
or
fwait
mov
icebp
jge
mov
pop
add
jae
stc
repnz
bound
inc
sub
pop
int
inc
jno
stc
in
imulb
sbb
adc
mov
mov
add
scas
stc
jnp
pop
insb
adc
les
or
xrelease
jp
test
xor
test
mov
mov
cmpsl
sub
int3
dec
lds
adc
lret
mov
les
mov
pop
jbe
hlt
sti
and
mov
mov
xlat
push
pop
cmpsb
fiadds
call
imul
xor
stos
mov
icebp
jg
adc
cmp
mov
jo
ret
push
aad
or
jmp
add
loope
in
out
adc
sarl
adcb
inc
ss
pop
mov
cmpsb
mov
idivb
aas
dec
push
icebp
popf
mov
or
pop
cli
in
mov
push
push
pop
stos
cli
mov
push
xchg
in
in
data16
rclb
adc
fcoms
xchg
push
fwait
out
dec
lods
add
dec
std
add
les
lret
push
enter
xchg
bound
lock
fnsave
pop
test
add
arpl
ficoms
sub
mov
lock
pop
pusha
fmul
es
mov
cmp
mov
push
ljmp
push
sbb
js
cmp
mov
outsb
testb
add
xorb
fcomp
xchg
dec
popf
pop
fs
add
mov
sbb
mov
int
sbb
int3
adc
roll
cltd
jbe
sub
adc
inc
in
mov
lret
imul
pop
pop
mov
push
mov
and
pop
mov
pop
nop
xor
sti
xchg
push
sub
jns
push
lods
out
cld
outsl
adc
inc
outsb
push
jle
aad
sub
add
stos
fiaddl
int3
jns
dec
mov
lret
xchg
push
insl
sbb
mov
jge
out
repnz
mov
sbbl
xchg
mov
push
cmp
pop
cli
lahf
jb
pop
les
cmp
mov
out
cmp
mov
js,pn
int3
add
jmp
xlat
dec
hlt
out
jmp
inc
inc
xchg
imul
bound
fdivl
in
fldenv
mov
xchg
lods
push
sahf
pop
repz
pop
mov
pushf
insl
out
dec
movsb
nop
xor
fwait
sub
inc
test
ljmp
sahf
lret
mov
jge
xchg
scas
xor
leave
dec
cmpsb
cli
mov
push
ss
xor
addb
mov
cmp
or
lods
pop
mov
sbb
cmpsb
hlt
jae
sub
jge
loop
loop
cmp
dec
loopne
sub
adc
nop
push
add
or
out
xchg
adc
cmpsl
test
push
in
and
icebp
mov
sbb
arpl
xchg
mov
xlat
adc
jecxz
fsubl
mov
out
inc
xchg
jp
dec
push
lea
push
andb
outsb
sarl
push
inc
xor
lock
pop
push
jge
es
or
xor
dec
orl
jae
fimull
pop
clc
xor
and
xorb
jbe
out
xchg
imul
movsl
cli
mov
pop
test
rcr
imul
call
mov
insb
lock
pop
sbb
fcompl
stos
repz
pcmpgtw
xor
test
jae
scas
pop
jmp
pop
inc
cmp
das
mov
outsb
push
or
test
mov
mov
mov
push
cmpsb
jo
pop
or
sti
mov
loop
mov
loope
lods
iret
shrb
pop
adc
ror
push
mov
mov
jae
call
js
jo
movsl
and
mov
mov
out
outsb
cltd
insb
inc
subl
or
sub
add
push
sub
insl
movsl
adc
cmpsl
imul
xchg
pushf
movsl
rcrl
incl
sbb
jno
imul
in
rorb
sub
int
xor
dec
pop
jecxz
xchg
cmpsl
daa
les
adc
lods
cmp
jg
popl
arpl
mov
sub
mov
mov
lock
sub
pop
jp
pop
scas
jbe
adc
adc
ljmp
mov
mov
sbb
testb
cmp
pop
gs
lock
std
xadd
dec
inc
imull
adc
insl
push
roll
in
add
mov
xchg
pop
push
push
push
pop
dec
jbe
nop
fisubrs
lret
pop
movb
push
mov
hlt
xor
test
movl
mov
mov
or
pop
lret
cmpsb
cmpl
cltd
xchg
shl
loope
cmp
scas
cmpsl
dec
xchg
mov
inc
sahf
push
loope
jno
in
mov
pusha
pop
and
test
add
fs
pop
ss
dec
sbb
dec
add
je
sahf
outsl
outsl
adc
sbb
jl
ss
mov
shrd
add
mov
stc
fs
mov
cld
test
or
mov
movups
ss
aad
sub
add
sbb
sahf
sti
xchg
or
mov
outsl
dec
pop
js
insb
lods
add
lods
inc
out
mov
mov
cmc
push
sub
aad
mov
dec
aaa
test
sub
lods
std
xor
mov
inc
inc
pop
jb
cs
or
inc
xor
daa
mov
nop
mov
inc
pop
loopne
inc
wrmsr
mov
adc
iret
lds
or
inc
and
push
test
xchg
mov
mov
addr16
insb
out
mov
fidivs
sub
ss
xor
call
pop
int3
xorl
ljmp
es
inc
sub
adc
jge
repz
enter
mov
out
mov
push
add
fs
ds
push
or
lahf
sbb
lahf
shrl
rcrb
js
and
loopne
mov
std
mov
lret
push
ds
outsl
cmp
jb
jmp
movsb
inc
jbe
dec
xchg
push
sub
ljmp
add
leave
xchg
call
repnz
inc
pop
shlb
aaa
imul
sub
mov
decb
mov
mov
les
lcall
jecxz
xor
sti
outsb
shll
add
in
ljmp
cmpb
shlb
push
gs
into
lods
es
xchg
pop
shlb
sti
xlat
dec
and
daa
inc
inc
adc
lret
jmp
jb
sbb
sarb
adc
pop
in
jns
rcll
clc
shrl
xor
pop
jp
movsl
arpl
pop
movsl
xlat
dec
xor
jecxz
insl
outsb
loope
aaa
push
movsb
int3
push
mov
push
test
xchg
mov
pop
xchg
cltd
sbb
dec
movl
in
popl
test
sub
cmpsb
out
and
stos
push
or
les
ret
pop
dec
sbbb
xchg
add
bnd
or
mov
and
mov
or
add
mov
mov
jns
aaa
hlt
mov
lret
xor
jle
mov
mov
into
pop
loopne
imul
out
nop
fistpll
sbb
push
repnz
lcall
dec
sbb
push
push
xor
jb
sub
add
clc
and
fs
jp
movsb
pop
ja
and
pop
das
jg
insl
std
sbb
lds
movsl
xchg
xchg
jp
mov
sti
into
push
inc
xchg
bound
jge
cwtl
in
mov
stos
dec
add
sub
push
pop
lock
mov
idivb
sbb
sub
pop
add
in
andb
out
jo
sub
movsb
testl
je
cltd
mov
pop
sbb
loop
and
bound
iret
jae
lret
sbb
lods
sbb
push
inc
cs
jg
jae
jae
icebp
push
pop
jl
mov
jb
add
sahf
addr16
add
notl
add
sub
inc
shl
adc
sub
xchg
lahf
xchg
xchg
push
scas
rcll
or
push
or
aam
loop
cmpb
jl
cmp
and
shrb
dec
push
xlat
rolb
add
cmp
mov
insl
ss
mov
outsl
pushf
xchg
mov
mov
push
clc
fwait
es
jbe
fnstenv
push
xor
sbb
lcall
dec
stos
mov
inc
xchg
in
iret
xor
mov
pop
pop
lds
out
jl
mov
leave
xchg
adc
cmp
mov
out
dec
test
push
pop
xlat
jp
pushf
mov
add
add
and
mov
or
loop
popf
cmpsb
dec
jle
dec
orl
sbb
arpl
sbbb
sbb
add
and
lea
cmp
insb
fiadds
fildll
pop
jle
ror
mov
imul
nop
pop
xor
xlat
sbb
jnp
cs
xor
int
sti
push
pop
add
inc
clc
insl
push
stc
in
inc
jae
sbb
insl
lahf
pop
dec
fsubp
test
push
in
inc
imul
and
adc
outsb
mov
push
mov
add
icebp
les
and
mov
pop
adc
jnp
mov
rorb
hlt
mov
jp
pop
imul
sbb
push
fidivs
inc
push
cmc
int
jmp
in
mov
out
cmp
cmp
sub
lret
daa
fldl
mov
ret
sub
mov
cmpsl
aad
push
lods
lea
dec
int
inc
loopne
fisubs
push
in
movsb
std
xchg
in
adc
push
cltd
sti
jno
add
adc
inc
icebp
shl
frstor
inc
dec
js
mov
outsl
filds
lods
jne
ror
or
mov
int3
ffree
out
loop
push
xor
sbb
push
xor
int3
mov
das
lret
fucompp
sahf
add
mov
and
cmpsb
ret
stos
je
dec
cmp
mov
jg
inc
mov
andb
xchg
push
push
xchg
xor
aad
popf
aas
or
sti
ljmp
es
outsl
pop
dec
fwait
mov
enter
outsl
stc
adc
cmp
mov
push
cmp
pop
sahf
out
es
inc
lods
mov
xor
xchg
fiaddl
mov
ret
pop
xorl
in
add
jl
push
ret
pop
lods
push
dec
jmp
in
orb
lods
xlat
jle
fcoml
mov
inc
jl
pop
repz
xchg
out
and
ljmp
mov
jp
test
jmp
cmpsl
shl
hlt
mov
jle
sub
stos
into
jne
cs
pop
popa
adc
add
rcrl
push
xchg
fimuls
adc
xorb
xor
movsl
aam
xchg
pop
push
pop
xor
or
ret
mov
cld
jmp
add
clc
fs
imul
xchg
dec
inc
sub
cmc
test
std
inc
xchg
dec
pop
movl
shlb
iret
pop
mov
test
jle
js
int
add
add
sub
pop
lcall
jb
sbb
xor
push
enter
js
rolb
mov
lea
mov
gs
mov
jg
pop
pop
or
pop
dec
push
int3
sub
push
jmp
outsl
mov
inc
outsb
js
data16
and
mov
mov
cmpsb
adc
out
mov
int
shrb
sub
mov
sbb
imul
mov
inc
sbb
incl
mov
movsl
push
in
lock
fisubl
ljmp
mov
xchg
mov
lock
mov
pop
stos
pop
fmul
cmp
scas
jno
add
add
das
lea
xchg
mulb
int3
std
jl
hlt
xor
jmp
test
mov
in
dec
loope
mov
and
adc
xor
cmc
pop
sub
push
lods
pop
imul
mov
stos
cmp
sbb
sarb
fmull
sub
push
dec
push
adc
jmp
mov
jno
mov
and
pushf
adcl
ss
push
pop
pop
mov
dec
into
lods
fcmovnb
mov
mov
cld
fsubrl
loope
fdivl
cmpsb
pop
xor
clc
fbstp
loope
or
scas
ljmp
or
or
pop
testb
xor
cwtl
pop
dec
sahf
cmp
and
out
and
inc
jle
inc
movsb
fiadds
stos
mov
out
imul
dec
in
add
sti
fstpl
add
lret
pushf
inc
sub
lcall
repz
cmp
in
pop
add
lea
lcall
imul
mov
in
mov
or
inc
mov
and
lahf
pop
jne
dec
outsl
adc
fistpl
inc
in
mov
xor
push
lcall
mov
or
push
sahf
xchg
xor
push
push
fs
mov
andl
lret
imul
jbe
push
jle
mov
pusha
mov
fiaddl
cwtl
call
jle
aas
push
or
mov
imul
xor
add
push
sbb
sub
jae
lret
or
jb
dec
pop
fwait
add
aaa
cmp
fbstp
aaa
es
mov
sub
mov
fimuls
push
test
in
inc
mov
in
adc
shll
stc
out
add
jecxz
and
add
testl
pop
stos
inc
jb
adc
scas
enter
fwait
lcall
stos
into
cmp
test
add
hlt
clc
push
iret
ja
aas
dec
jp
mov
sub
ret
inc
subb
in
gs
int3
repnz
and
dec
inc
jns
cmpsb
ret
adc
iret
ficompl
shll
or
xor
jb
pop
mov
lret
subl
ljmp
clc
jb
push
mov
sub
sbb
mov
fbstp
dec
mov
add
dec
nop
rclb
mov
xorps
pop
jbe
sbb
shr
jmp
jno
lea
stos
pop
repz
jb
cmp
in
mov
pop
stos
jbe
adc
outsl
push
mov
iret
lds
les
outsl
aaa
imul
xchg
sub
sub
rol
inc
cmp
ja
and
add
xor
out
rcl
test
das
popa
enter
aas
out
test
imul
popa
les
jl
leave
in
sbb
adc
addb
push
xchg
bound
inc
adc
adc
mov
lcall
sahf
xor
sbb
xor
jno
cmp
inc
adc
add
shll
mov
cmc
movsb
add
push
jle
mov
test
cli
rcr
push
and
loope
fbstp
pop
adc
xchg
inc
in
call
sti
pop
sub
add
das
notb
add
add
test
les
adc
fwait
mov
lods
test
imul
repz
push
push
scas
ficoms
je
movsb
outsl
icebp
mov
mov
cmpsb
in
icebp
dec
sbb
add
sub
push
sub
or
jno
add
loopne
loop
jle
insb
dec
mov
ds
mov
lcall
aad
pop
and
scas
insl
or
sbb
mov
sti
dec
xor
inc
pop
sub
push
scas
mov
lret
adc
mov
dec
push
sub
inc
retw
mov
test
aaa
test
and
stc
mov
cmp
sub
sub
push
orl
push
push
imull
sbbb
adc
fists
mov
out
fimuls
fcoms
jae
pop
mov
adc
jmp
xorl
pop
pushf
je
popa
int
pop
mov
pushf
add
inc
and
sbb
sbb
adc
fwait
cmp
dec
lods
xor
rolb
mov
jl
inc
mov
push
push
push
pop
inc
xor
mov
pop
xchg
add
addr16
push
mov
jns
mov
mov
jecxz
mov
and
add
into
dec
outsb
cmpsl
adc
scas
adc
loope
dec
mov
lock
and
xchg
pushf
cmp
mov
jp
jmp
addr16
ficoms
cld
inc
decb
or
imul
mov
stos
push
push
sbb
dec
sbb
ljmp
xchg
das
add
and
aaa
std
xchg
cmp
mov
in
jg
push
outsb
lret
test
aad
push
pop
dec
cld
out
roll
cmp
call
adc
mov
mov
mov
mov
mov
xchg
push
pushf
fdiv
int3
andl
xor
jae
imul
push
dec
mov
out
mov
lcall
cmp
pop
or
int3
or
adc
push
pusha
cmp
pop
jge
push
cld
add
xor
arpl
xchg
je
cmpl
mov
mov
das
add
adcb
addr16
mov
push
sbb
mov
bound
jo
cmpsb
mov
inc
and
push
or
cwtl
ss
mov
dec
call
xchg
pop
push
outsl
push
nop
mov
pop
mov
movsl
nop
xchg
mov
pop
mov
add
mov
test
pop
xchg
push
add
cmp
pop
je
and
jmp
ja,pt
lods
fstpt
mov
adc
mov
out
and
es
int3
inc
mov
outsl
add
test
mov
fisttpl
push
cmpsb
inc
inc
lods
int
add
mov
iret
ds
stos
iret
push
and
cmp
jbe
fwait
stos
or
pop
cmp
jge
and
pop
inc
popl
pop
dec
or
sarb
ss
mov
dec
imul
pop
push
les
out
sahf
movsb
lods
xor
jmp
das
push
dec
in
sbb
xor
push
ficompl
jge
or
inc
add
js
das
cmpsl
shll
int3
scas
push
dec
mov
dec
xchg
jmp
fsubrp
out
xor
sbb
and
mov
jp
into
cmc
jae
repnz
and
lea
or
jp
cmpsb
adc
and
adc
jbe
and
sub
fbstp
pop
pushf
imul
pop
stc
sub
aas
mov
scas
cmp
je
mov
dec
fldcw
pop
dec
mov
sbb
xchg
sti
and
dec
and
jl
sbbb
dec
mov
clc
scas
repnz
pop
xchg
sub
sub
sub
mov
dec
jp
test
int3
or
sub
sbb
add
rcll
xor
aam
jb
pusha
fcom
jae
jg
sub
pop
fildll
cmp
push
mov
test
jb
std
icebp
push
mov
and
subb
dec
jno
insl
push
repz
cld
xchg
in
push
outsb
push
popa
pop
or
test
cltd
inc
adc
nop
fisttps
rcrl
mov
xor
push
inc
mov
push
push
stc
mov
sbbl
sub
push
ljmp
test
xor
sub
shlb
mov
fsubrl
xor
idiv
ja
popl
xchg
cmp
mov
test
pop
xorl
outsb
cs
call
cmpsb
lahf
cmp
addb
out
in
mov
and
sub
dec
adc
daa
jae
jo
ljmp
cwtl
mov
push
mov
or
inc
pop
std
filds
sbb
movsl
loope
inc
jle
add
das
int
inc
es
mov
push
insb
mov
notb
inc
jb
cmpsl
xchg
or
xchg
sbbl
pop
push
shrl
mov
inc
mov
inc
daa
mov
pop
push
or
pop
fs
add
push
adc
jg
hlt
fwait
sar
jmp
movsb
mov
sub
push
adc
insl
mov
mov
imul
mov
cmp
mov
xchg
adc
daa
and
out
stos
adc
cmpsl
mov
test
and
test
lcall
dec
repnz
adc
adc
insb
mov
fs
repnz
push
testb
or
leave
out
leave
pop
test
scas
cmp
push
cltd
sbb
xor
mov
inc
jmp
sub
inc
or
jb
xor
lds
push
xchg
mov
pop
pop
pushf
jg
rol
or
repz
sti
pop
stc
iret
aam
cmpsl
fidivs
scas
jmp
inc
jg
lock
push
sbb
les
mov
push
inc
fildll
sub
xlat
arpl
cwtl
inc
sbb
add
loope
or
dec
lods
imul
xchg
pop
in
pusha
data16
mov
xchg
int
aas
inc
add
cmp
bound
or
fs
jmp
dec
and
jl
fsubrp
out
cmpl
dec
les
aas
pusha
rcl
ss
jecxz
add
cmpsl
xor
daa
imul
fists
shl
cmp
or
or
jge
out
int
push
jo
int
mov
lret
adc
xchg
jmp
leave
sub
arpl
or
xchg
mov
push
xor
leave
mov
adc
push
mov
and
dec
inc
or
xor
pop
lahf
mov
aam
jl
xor
test
add
cwtl
stos
xor
mov
dec
inc
call
push
mov
xchg
orb
mov
outsl
inc
jl
clc
clc
push
insl
enter
cwtl
orb
incb
cs
aam
stos
test
into
inc
sbb
push
push
aas
fldcw
loopne
adc
mov
mov
lea
and
vcvtps2pd
or
pushf
add
ffreep
js
inc
lods
adc
dec
mov
adc
sbb
inc
mov
int
pop
leave
sub
mov
sti
xchg
dec
rorb
je
movsl
pop
jo
out
and
insl
push
insl
push
inc
push
mov
push
hlt
dec
inc
xchg
or
and
push
aam
lret
stos
jmp
inc
bound
popf
xchg
fcmovb
mov
lret
sbb
mov
add
xchg
das
je
xchg
gs
jne
aas
push
xor
mov
movsl
xlat
adc
iret
push
mulb
das
outsl
xor
sahf
outsb
push
push
icebp
pop
sub
push
xchg
inc
sub
dec
jmp
fs
pop
shrl
enter
pop
sti
dec
jns
sbb
mov
out
lock
in
mov
push
add
shrl
out
pop
lea
cmp
lea
fdivs
fxtract
rclb
das
pop
inc
sar
push
or
or
mov
jne
sbb
push
lods
cld
out
sub
lret
int
add
xchg
repz
lock
mov
mov
add
shl
xchg
add
test
pop
pop
arpl
inc
les
mov
fnstenv
ja
mov
leave
or
adc
sub
adc
leave
cmpsb
xchg
push
enter
lcall
push
jo
loopne
ja
push
xchg
xor
push
sbb
sbb
lds
lahf
pop
testl
dec
cwtl
xchg
les
and
cs
and
stc
lods
aas
xchg
clc
jle
xchg
mov
mov
adc
cld
mov
clc
mov
sbb
pop
and
aad
insl
mov
fcompl
ja
cltd
dec
xchg
add
push
into
neg
mov
test
mov
popa
addl
mov
adc
jnp
push
push
dec
aas
imul
rol
shlb
xor
into
sbb
fs
cltd
les
dec
sbb
daa
fyl2x
and
mov
mov
adcb
jno
xor
xorl
mov
nop
icebp
cmp
xor
jnp
aas
jno
shrl
or
push
or
push
inc
mov
ds
mov
daa
inc
popf
cmp
lods
inc
sahf
bound
call
into
nop
call
mov
inc
xchg
xor
fnstcw
cltd
les
push
pop
loop
sarl
leave
outsb
add
push
cmp
dec
pop
push
mov
scas
sub
shrl
outsl
xor
xchg
xchg
jge
loope
rclb
push
mov
push
rcl
popf
daa
mov
jecxz
mov
and
mov
ljmp
cmp
cmp
repnz
daa
scas
xor
inc
sub
dec
xchg
xchg
xchg
push
xor
aad
or
xchg
push
sub
popa
test
rcrl
jb
sub
sub
push
rorb
push
mov
lods
xchg
sbb
shll
sar
ds
das
ss
push
xchg
pop
bound
or
inc
or
xchg
sbb
lods
mov
jbe
inc
mov
outsl
psubsw
dec
dec
int3
push
xchg
testb
push
or
sbb
insb
test
ret
movsl
sub
inc
test
data16
mov
cld
jne
nop
and
movsb
lds
push
pop
das
dec
or
int3
or
sub
std
mov
sub
imul
add
fstps
dec
or
jb
cmpsl
dec
sbb
cwtl
std
add
mov
push
dec
and
mov
jae
mov
int3
mov
sahf
testb
into
pop
cmpsb
js
stc
sub
and
cli
mov
popf
adc
lods
xchg
push
in
stos
lods
sub
sub
xor
cmp
mov
dec
add
cli
sub
and
cs
sarb
daa
sub
imul
inc
mov
stos
and
cmp
test
jbe
rorb
imul
adc
push
mov
fsubrl
outsl
out
adc
lock
insb
or
inc
out
and
xor
aas
ret
xor
incl
jmp
sub
cmp
int3
pusha
fcoms
gs
ljmp
cmpsl
push
nopl
xchg
jle
pop
stos
adc
ds
stos
adc
and
fadd
jns
in
jnp
rorl
push
cwtl
xchg
xor
mov
xor
mov
add
sbb
add
arpl
cmpsb
lret
cli
cmp
dec
push
and
add
dec
roll
add
and
xchg
scas
or
cmpl
xchg
in
push
xchg
inc
push
dec
and
fists
into
xchg
mov
jle
jno
lcall
inc
test
or
nop
aam
xor
rorl
roll
adc
stc
lahf
and
addr16
les
or
cmp
inc
push
stos
bound
jle
jnp
aad
mov
or
jnp
cmpsb
cmp
add
cmp
out
or
push
popa
jb
push
cmc
data16
cmp
pop
icebp
jne
into
test
xchg
jg
inc
jmp
out
js
pop
sub
mov
jno
sbb
mov
mov
push
jnp
inc
xor
xchg
xchg
jecxz
and
ja
adc
int3
mov
pop
jae
or
pop
sarb
outsb
or
gs
push
pop
jmp
gs
push
movsb
fsubs
mov
in
out
hlt
pop
aas
mov
aaa
mov
dec
sub
ljmp
js
pop
iret
ss
addr16
inc
inc
mov
pop
iret
sub
push
cmpsb
jae
mov
test
add
and
test
outsb
je
lds
push
out
cmpsb
out
in
rolb
mov
hlt
shlb
add
test
mov
imul
leave
mov
movl
andb
sub
test
jbe
jnp
mov
xchg
cmpsb
mov
fidivrs
lcall
mov
cmpsl
sub
push
inc
push
sbb
push
jne
pop
int
pop
xor
ljmp
data16
scas
adc
jno
push
push
mov
xor
and
jge
hlt
dec
into
leave
idivb
cmc
dec
inc
add
mov
test
mov
es
sbb
xchg
sbb
dec
enter
adc
sub
rolb
add
push
in
jo
xchg
rorb
sub
lods
mov
loope
scas
pop
in
faddp
mov
mov
jne
roll
lret
ss
int
cmp
push
xchg
data16
mov
or
cwtl
cmp
push
xor
jmp
sbb
loopne
leave
das
fdivl
scas
mov
and
lods
test
pusha
rclb
fs
data16
in
push
out
sub
shlb
xor
rolb
mov
bound
insl
shrb
and
jecxz
pop
push
imul
mov
je
popf
fidivl
es
add
sbb
mov
push
or
rclb
xor
daa
adc
sar
mov
repnz
loop
push
stc
add
xchg
bound
sbb
xor
addr16
adc
das
loope
xchg
in
xchg
and
push
lods
movsl
sti
ljmp
jg
subl
jle
sub
loop
jg
mov
inc
arpl
mov
ja
jge
scas
add
fadds
jno
pop
push
ja
idivl
data16
adc
pop
xor
ljmp
cwtl
mov
xor
mov
push
loop
add
dec
loop
js
cmc
int3
in
inc
iret
movsb
inc
lods
test
dec
imul
or
xchg
fsubs
push
cmpsl
pop
xchg
inc
dec
shld
call
mov
daa
je
fsubl
dec
push
cmc
lods
pop
rorb
fbstp
ss
negb
xchg
jge
jo
in
push
int
cs
dec
imul
sbb
add
les
mov
pop
arpl
jle
mov
mov
icebp
lock
mov
cli
sbb
lds
jle
add
dec
neg
aam
loopne
sbb
popf
loop
sub
and
jns
int
mov
add
cs
sub
xorl
mov
pop
adc
jle
movl
iret
scas
xor
shll
in
les
cmp
add
mov
inc
inc
insb
cli
dec
hlt
jne
sub
mov
jecxz
repnz
mov
mov
js
sbb
jmp
inc
mov
ja
jmp
add
sub
outsb
in
out
aas
lds
xchg
xchg
push
xchg
fidivrl
xor
jge
incl
mov
subl
dec
mov
sub
add
dec
and
pusha
mov
mov
dec
pop
scas
push
mov
xchg
int
bound
gs
push
cmpsb
ret
jp
xchg
mov
cmp
lock
mov
mov
jno
in
loopne
insl
aam
scas
mov
xor
xor
cltd
ds
aam
push
add
or
daa
fisubs
inc
roll
mull
out
mov
mov
addr16
push
rcll
sub
cs
jbe
imul
and
mov
mov
cmp
jns
loope
push
hlt
notw
lock
sbb
loope
repnz
sbb
fwait
sbb
xor
fsubrs
jp
push
sarb
stc
jno
cmc
fbstp
mov
sub
pop
int3
mov
push
cmp
push
jmp
ss
lahf
dec
lahf
adc
scas
fnstsw
cmpsl
xchg
xorb
test
insb
cmp
xlat
ret
cmp
repnz
inc
cwtl
mov
int3
popf
in
leave
movsl
mov
push
sub
ljmp
in
inc
fwait
mov
push
jno
push
adcl
lcall
test
shl
xlat
mov
xchg
ljmp
mov
jmp
and
ficompl
jmp
dec
nop
pop
xchg
xchg
data16
add
gs
jnp
pop
and
dec
adc
or
movsb
das
in
jbe
test
lcall
test
mov
or
xchg
and
xchg
test
jo
xor
push
ja
lahf
in
adc
mov
dec
or
cmpsb
iret
jbe
mov
xchg
cmp
loopne
jl
in
shrl
or
lret
and
push
negl
inc
xchg
das
jp
push
hlt
and
fwait
jecxz
ljmp
bound
inc
cmpsl
stc
fdiv
out
pop
std
stos
mov
lcall
aam
xchg
stc
pop
aaa
cld
mov
mov
pop
cmpsb
cs
andl
push
mov
xchg
add
call
jno
push
push
ja
aam
in
jg
adc
mov
mov
lret
jae
cld
rol
jecxz
cwtl
lds
dec
stos
sarb
in
jnp
mov
and
adc
or
popa
adc
sbb
mov
jbe
cmp
and
adc
xor
sbb
cmp
push
or
sub
inc
sti
lods
sub
sbb
dec
fists
jne
test
mov
ljmp
sub
push
popa
and
nop
sahf
rolb
xor
jge
sub
imull
xor
pop
sub
out
mov
repnz
pop
clc
insb
dec
push
sub
jbe
xchg
mov
lret
mov
mov
inc
stc
fcompl
dec
icebp
sub
adc
shll
out
sbb
jnp
mov
mov
jbe
imul
mov
mov
jb
sub
pop
lret
mov
popf
test
jge
or
in
je
daa
fisttps
adc
and
andl
and
or
and
dec
pop
dec
addr16
cs
jbe
push
jnp
jae
jns
mov
and
xchg
dec
add
add
push
xor
inc
or
popf
mov
mov
mov
stc
and
pushf
xchg
outsl
jmp
xchg
ret
push
pop
xchg
mov
dec
lcall
or
mov
push
lret
lret
inc
out
mov
add
aas
mov
cmp
decl
pop
ret
sbb
addr16
jne
push
or
outsb
flds
and
cwtl
mov
jmp
lods
cwtl
lahf
in
loope
mov
push
lret
mov
daa
fisttpl
cmp
push
mov
fsubs
fwait
cmc
addb
in
divb
addr16
push
les
or
ret
call
add
mov
pop
mov
lret
arpl
fdivl
lods
loop
std
push
roll
cli
pop
and
sbb
into
jle
mov
mov
jp
ds
icebp
mov
dec
sbb
jno
bound
rorl
lds
insl
out
push
in
or
xchg
sbb
fucom
divb
lcall
xor
xor
fs
daa
push
mov
int3
sub
jmp
push
adc
test
or
cmp
adc
mov
mov
test
addr16
xor
into
outsb
and
pop
jo
sbb
shl
cwtl
sub
mov
daa
divb
cmpb
sti
and
mov
mul
cld
sbb
call
push
inc
mov
cmp
pop
rcll
jne
aam
mov
lahf
pop
pop
and
cmp
sbb
cmpsb
addr16
es
dec
cmpsl
adcl
or
and
popf
push
xchg
ja
mov
int
out
mov
push
sbb
testl
or
add
mov
mov
mov
sbb
fcmovu
out
add
cmc
jo
inc
out
inc
and
add
mov
outsl
pop
add
insb
pop
imul
xchg
fadds
sbb
movsl
cmpsb
shl
in
inc
aad
mov
mov
xlat
add
es
jne
lahf
mov
shlb
jno
adc
jle
outsl
xchg
push
push
xor
xchg
fwait
jg
mov
push
shrl
fdivl
lds
sub
and
sub
pop
stos
sub
cld
fcomps
arpl
fsubrl
mov
push
pop
shll
test
rcl
push
pop
sbb
pusha
mov
or
nop
test
mov
aam
cmp
cmpb
loopne
fnstcw
mov
sahf
pop
insl
sub
adc
push
mov
cmc
stos
pop
enter
mov
jae
jo
sub
push
or
mov
xor
ja
das
pop
push
ds
popf
mov
mov
and
popa
add
add
adc
push
int
mov
or
cmp
and
loop
out
es
ljmp
pop
test
ret
fildl
push
movsb
popl
pop
enter
not
leave
icebp
rorl
inc
adc
jnp
xchg
or
insb
and
outsb
pop
lods
lahf
inc
es
je
aaa
cmc
in
jle
pop
nop
test
mov
cmp
push
adc
xor
sbb
js
stos
pop
fistpl
push
cmpsb
ds
loopne
cmp
flds
popa
aad
inc
imul
lret
cmp
pushf
shlb
mov
jb
in
arpl
xchg
jbe
mov
jns
lahf
jle
lock
movsl
ficompl
in
sqrtps
ret
dec
cwtl
roll
and
mov
xchg
mov
es
jns
mov
outsb
out
xchg
arpl
sbb
in
cmpsl
sbbl
sub
jg
xor
insl
pop
sbb
rolb
jmp
dec
daa
adc
and
inc
in
cmp
fisubrl
loopne
dec
cmpsl
jne
das
inc
mov
push
cli
pop
sbbb
dec
or
movsl
sub
adc
inc
ljmp
jge
and
add
push
sub
scas
mov
adc
ret
inc
mov
adc
xchg
rcll
mov
or
add
lods
rcr
lcall
or
and
hlt
daa
mov
mov
jecxz
push
pushf
frstor
inc
out
es
pop
lock
adc
rorl
adc
rolb
add
add
adc
jmp
cmc
fwait
into
stos
test
test
out
adc
push
cmpl
xor
pop
mov
ljmp
sbb
pushf
adc
or
shll
bound
std
sbb
fldenv
lea
pushw
push
loopne
pop
aas
in
jne
mov
mov
sbb
aas
in
sahf
mov
cltd
and
mov
push
subb
outsl
jae
pushf
mov
xor
lret
jecxz
add
test
fidivrl
mov
push
nop
mov
jb
lea
inc
call
xchg
add
fdivs
pop
frstpm(287
jmp
lahf
ja
cmp
push
cwtl
pop
scas
jl
stos
xchg
jl
scas
fldenv
fdivrl
lahf
pop
dec
mov
or
test
mulb
and
dec
jns
or
push
dec
push
mov
mov
mov
push
jle
nop
cmp
fcmovnu
adc
fdivrl
xor
xchg
push
outsb
push
push
sahf
xor
and
adc
mov
sbb
mov
inc
scas
aaa
jmp
stos
pop
mov
int
insb
int3
out
sahf
inc
gs
xchg
fwait
adc
push
shlb
cmp
inc
mov
xlat
push
test
test
iret
pop
shlb
push
sub
adc
nop
adc
insb
pop
dec
sti
xchg
mov
out
xchg
or
inc
pop
aaa
xlat
repnz
mov
in
cwtl
pop
push
sbb
xchg
fidivs
mov
cwtl
ret
mov
pop
psubsw
div
mov
mov
mov
xor
testl
inc
pusha
cmpsl
shlb
stc
xor
mov
lahf
in
fwait
outsl
repz
jbe
mov
mov
inc
int3
jns
testb
in
adc
rorl
scas
adc
out
jb
je
nop
vpsubd
pop
in
add
sahf
add
cmc
leave
add
lret
mov
leave
sub
outsb
pop
imul
pushf
cmpl
push
xchg
dec
cmpsb
rcrb
xchg
out
pop
sub
sub
push
lret
test
es
jecxz
xor
lcall
lcall
insb
enter
xor
jmp
inc
hlt
cmp
cmp
mov
adc
sbb
jb
int3
fildll
adc
movl
mov
xchg
sub
adc
and
jb
xchg
out
mov
mov
scas
rclb
mov
pop
inc
push
jno
fimull
aas
adc
or
iret
sti
pop
outsb
test
add
mov
pop
test
loope
and
fbstp
adc
out
sbb
xchg
test
push
lods
xor
jno
jo
sub
ds
and
aas
sti
lcall
or
push
fmull
push
jge
dec
cwtl
arpl
sub
scas
mov
mov
push
js
or
push
xchg
and
or
lcall
and
xor
push
mov
fldz
sbb
mov
iret
adc
jo
inc
sbb
sub
sub
aad
enter
sub
sbb
sub
popf
sbb
dec
bound
ret
and
movsl
lock
in
dec
rclb
outsb
lods
mov
add
and
mov
jne
mov
test
out
inc
mov
add
jmp
test
inc
sbb
shlb
ljmp
cli
or
movsb
adc
orl
repnz
dec
push
call
int
cmp
inc
mov
cmp
push
xor
int3
roll
les
mov
push
pop
jno
sbb
popf
pop
pop
call
sub
sub
dec
sub
push
loopne
sbb
pop
pusha
scas
in
add
roll
mov
sbb
jl
mov
hlt
rolb
cld
sub
mov
inc
fdivl
mov
popf
mov
call
jmp
int
mov
and
add
fsin
pop
xchg
scas
lahf
fisubrl
or
mov
arpl
mov
and
test
push
fmull
sbb
sub
subl
insb
add
cmp
add
push
cmp
lock
lret
daa
mov
into
xchg
js
push
mov
fs
dec
out
fimuls
jge
push
jo
sub
incb
pop
inc
push
inc
push
movsl
pop
or
add
js
xchg
pushl
or
cmc
in
adc
sti
or
shrl
adc
jo
cs
xchg
aas
aam
jae
mov
ret
out
pop
jo
shll
mov
xlat
bound
lret
pop
sahf
subb
push
lds
inc
pop
fcmovnbe
sti
outsl
adc
clc
popw
cmp
fidivrs
inc
mov
leave
or
lock
mov
and
mov
fwait
push
lea
and
lods
sti
jmp
xchg
shlb
mov
cwtl
test
data16
int
into
mov
mov
sub
jmp
xorl
popl
xchg
movsb
or
call
test
sub
pushf
mov
push
cld
mov
xlat
dec
jo
xchg
push
jo
fcomip
adc
xor
inc
out
leave
call
test
or
call
cltd
popa
dec
jns
dec
cwtl
cmc
sbb
xchg
dec
push
fiadds
mov
inc
dec
out
pop
shlb
push
mov
cmovae
scas
js
sahf
mov
add
pusha
fcomip
xlat
lret
out
pushf
fstpt
add
imul
shll
loope
jl
fsubs
jns
int3
fimull
xchg
mov
fistpll
out
loop
cmp
lods
jecxz
frstor
mov
jecxz
pushf
cmc
cwtl
inc
enter
push
enter
call
iret
add
dec
ja
jge
sub
xlat
roll
pop
push
and
adc
mov
cmp
loopne
dec
ret
push
cltd
sbb
adc
xlat
pop
push
mov
dec
aad
mov
xchg
outsb
sahf
add
inc
fmuls
add
sub
push
sub
hlt
fwait
lcall
and
xchg
push
sarl
popa
jmp
sub
sbb
fisttps
xorb
mov
daa
fwait
ja
in
xor
push
sti
mov
xchg
movsb
inc
ret
xchg
jmp
mov
adcb
es
orl
dec
in
push
pop
mul
push
enter
mov
push
fwait
jl
sub
xor
repz
mov
xchg
xchg
fdivs
sbb
add
sbb
lds
std
andb
mov
xchg
mov
lock
std
pushf
fisttpl
jns
call
std
shr
daa
and
and
in
inc
push
or
clc
test
cwtl
pop
mov
sbb
xchg
mov
movsb
jnp
lds
hlt
test
dec
lea
cmc
lock
out
add
mov
and
scas
sub
nop
pop
dec
call
mov
xchg
fadds
mov
lret
cmp
shlb
test
lret
pop
fstpt
jecxz
lahf
xchg
add
cltd
int3
sahf
gs
pop
subl
sahf
js
push
pop
cmp
cmp
loopne
std
daa
pop
mov
cli
lretw
ljmp
mov
jmp
jmp
rcrl
sub
in
insl
cld
push
insl
lret
pushl
loop
je
mov
cwtl
stc
imul
popf
gs
lock
fisubrl
dec
jle
loope
jge
test
add
insb
dec
call
cli
mov
data16
push
dec
add
adc
xchg
inc
or
hlt
pop
sbb
sub
push
jl
or
nop
cmpsl
ret
dec
das
xchg
mov
les
or
imul
mov
ds
or
lret
call
jmp
fstl
push
cmpsb
mov
and
xchg
outsb
int
pop
jp
adc
xchg
pop
dec
jmp
mov
pop
mov
mov
xchg
repnz
insb
pop
and
dec
push
mov
popf
cltd
ja
mov
mov
popa
xchg
pop
and
imulb
ja
ds
xor
push
jae
mov
sbb
inc
outsb
sahf
inc
xor
mov
or
dec
mov
xlat
mov
fsubs
xchg
inc
mov
mov
pushf
pop
hlt
divb
mov
push
repz
mov
dec
cmp
mov
mov
popa
leave
mov
dec
sub
mov
mov
stos
mov
pop
test
stos
jp
add
sbb
fimuls
insl
out
fildll
jb
js
lock
ja
in
lahf
stc
sub
and
sub
stos
adc
loopne
sub
xor
inc
into
pop
aaa
es
or
push
push
or
setnp
add
aad
cs
xorl
sub
add
add
rcll
movsl
push
dec
and
cmp
mov
sub
aaa
ljmp
mov
fistl
arpl
jge
movsb
jle
jle
push
or
sub
sbb
cmp
loop
pop
or
fs
mov
outsb
fsts
sub
imul
jmp
mulb
adcl
lods
ret
fs
sbb
xor
cli
push
sub
hlt
jmp
cltd
push
shlb
push
cmp
sbb
adc
test
xchg
negb
aam
push
insb
rcl
cmp
nop
inc
pop
pop
arpl
xchg
cmp
scas
or
add
std
test
daa
xchg
push
mov
push
and
daa
pusha
repz
test
push
mov
pop
es
into
adc
nop
int
jnp
xchg
push
jl
or
jnp
cmpsb
pop
add
mov
mov
add
push
pop
xlat
cld
inc
mov
dec
test
push
and
jns
por
cwtl
js
pop
mov
test
pop
sbb
out
fwait
pop
clc
push
fiaddl
loope
add
dec
mov
fimull
push
jle
mov
test
loopne
pop
sbb
in
popl
rorb
jnp
inc
inc
mov
out
and
adc
pop
xor
out
lock
adc
aaa
or
xlat
adcl
leave
jnp
lahf
shlb
fadds
jbe
fidivl
out
inc
cmp
pop
add
enter
dec
or
insl
push
mov
inc
inc
jnp
arpl
ret
dec
add
lret
lret
rorb
arpl
sub
aam
push
push
gs
and
cmp
sbb
loopne
insb
and
mov
xlat
inc
mov
mov
xor
sbb
sub
add
mov
leave
nop
gs
jo
jmp
popf
jecxz
mov
fwait
pop
mov
sub
adc
repnz
sbb
add
daa
daa
xor
insb
jbe
out
and
mov
xchg
in
xor
sub
sbb
es
mov
bound
cmp
pop
inc
inc
outsb
loope
sub
idivb
aas
push
mov
pop
pop
aam
iret
jne
jb
jne
arpl
push
inc
fcmove
jno
sbb
jmp
shll
stc
and
inc
pop
mov
inc
lcall
xor
mov
sub
xor
ja
in
movsb
push
mov
loopne
repz
or
cli
scas
ret
push
mov
dec
add
jno
sbb
stc
mov
pop
push
push
xchg
mov
or
xchg
loopne
icebp
pop
mov
adc
mov
xor
aas
add
in
mov
and
hlt
data16
in
add
je
add
jmp
mov
mov
adc
push
push
or
xchg
jns
fs
outsl
adc
stc
std
clc
popa
arpl
cmp
sub
adc
dec
pop
call
sbb
pop
push
loop
retw
xor
ret
rolb
jp
cmp
stos
cli
outsl
cmp
nop
sub
loopne
jb
xchg
shll
imull
test
push
jle
xchg
scas
pushf
fs
movsl
das
cltd
pop
gs
int
or
push
in
decl
add
pop
push
dec
andl
lret
push
outsl
cmp
dec
hlt
pop
mov
popf
daa
jmp
out
stos
bound
pop
in
pop
push
add
sbb
inc
push
pushl
xlat
out
stos
loope,pn
cmpsl
add
cmc
and
and
cmp
jmp
xchg
ret
pop
fs
call
int
dec
mov
pop
lcall
push
mov
jbe
and
out
jo
dec
sbb
mulb
adc
and
inc
dec
jle
and
push
mov
jne
clc
xchg
push
leave
add
popa
mov
push
mov
fiadds
push
ret
lret
sarb
stos
cmp
enter
movsl
insl
imul
sti
sub
cwtl
cmpsl
inc
mov
dec
dec
mov
fstp
dec
in
add
adc
add
mov
cld
ror
popf
xchg
hlt
xchg
sub
scas
loopne
jle
xor
scas
leave
cmc
dec
adc
out
sub
add
test
dec
in
mov
les
adc
lret
inc
outsb
jnp
lahf
add
lret
xor
mov
pop
xor
jae
jge
clc
sbb
mov
adc
test
mov
or
divps
lods
push
ret
push
and
out
loop
int3
fdivrs
ljmp
push
pop
adcb
adc
pop
mov
xchg
mov
xor
mov
mov
mov
psllw
cmp
jmp
cmp
cwtl
inc
ljmp
push
ljmp
mov
test
cmc
cmp
mov
into
xchg
sbb
pop
fsts
push
js
das
ljmp
adc
xchg
adc
inc
ja
xor
imul
xchg
sub
xchg
cmp
or
cmp
xor
jecxz
das
add
out
push
stc
pop
imul
xchg
negl
pop
pop
mov
cmp
jnp
cltd
lock
hlt
or
and
arpl
fimull
xor
test
push
imul
scas
repz
jno
rolb
adc
push
in
lea
adc
mov
mov
xchg
push
testb
and
pop
outsb
imul
dec
mov
cmp
cwtl
mov
inc
adc
lcall
out
int
in
xchg
insl
movsl
mov
dec
arpl
or
out
inc
inc
out
lahf
dec
cmp
adc
push
add
in
outsb
inc
jecxz
push
int3
cmpsl
xchg
mov
test
pop
enter
mov
push
and
push
pop
movsl
and
push
dec
jns
sbbb
pop
xor
imul
mov
sbb
aam
scas
inc
adc
cmpsl
cmc
mov
ret
or
mov
call
into
xor
sahf
test
mov
push
xchg
sub
push
adc
adc
sub
shrb
and
fdivrs
lcall
cmp
rclb
xchg
rcrb
dec
xlat
cmpsl
pop
jecxz
mov
mov
mov
in
les
rolb
mov
ja
in
mov
ficoml
iret
cli
xchg
lock
bound
pop
inc
rcrb
sbb
sub
repnz
inc
cmpsb
xor
iret
push
fistpl
adc
or
mov
mov
mov
fwait
jae
iret
jb
push
popa
lods
mov
push
pushf
fadd
mov
lret
mov
lock
inc
add
sahf
xchg
xor
sub
in
leave
cmp
imul
testl
push
dec
xchg
loopne
fldt
daa
or
dec
mov
xorl
dec
mov
pusha
xor
aam
pop
lahf
add
fstpl
push
push
cld
lret
aam
in
in
push
cli
add
mov
add
sbb
lret
inc
in
scas
pop
fcompl
lds
in
add
xor
xlat
mov
stos
push
push
out
xchg
int
pop
inc
fistps
jmp
dec
mov
ljmp
mov
inc
int3
cmpsl
lds
shlb
adc
imul
cld
data16
mov
fsubl
mov
lret
pop
push
cmc
sbb
in
lahf
fnstcw
js
cmp
sti
aad
stos
adc
add
xchg
mov
jmp
gs
popf
sub
xor
xchg
dec
idivb
push
ret
mull
xchg
popa
loop
or
adc
shl
dec
icebp
add
push
sbb
xchg
ja
bound
cmp
cmp
inc
add
add
and
icebp
mov
popa
scas
mov
and
sbb
ds
into
aam
mov
and
cld
jno
gs
add
cmpsb
fsubrp
js
test
es
adc
mov
xor
pop
ss
jnp
sti
xor
inc
sub
bound
adc
xchg
sarl
adc
out
cltd
ss
loop
mov
add
inc
pop
lods
and
and
fdivrs
xor
xlat
sub
or
sub
sarl
je
test
dec
mov
xor
cmp
leave
gs
dec
popa
add
jg
sub
sbb
iret
dec
sti
jge
daa
xchg
or
mov
lea
stos
sbb
ss
stc
andl
ja
or
out
and
fidivl
sub
int
push
inc
adc
fidivrs
test
push
cmpsb
mov
cli
mov
jmp
lret
push
icebp
ja
jmp
dec
outsl
ljmp
js
lret
mov
or
or
call
cld
je
push
sbb
outsb
add
jl
in
decl
xor
ret
inc
and
cltd
add
std
test
lahf
sub
sbb
xor
enter
mov
jecxz
xchg
inc
or
push
movsb
mov
ffree
stc
repnz
xchg
cwtl
bound
ret
cmp
lods
pop
cmovne
stc
push
test
iret
insb
rcr
dec
fneni(8087
mov
aam
imul
pop
xchg
call
pop
xchg
or
pop
sahf
pop
pop
add
cmp
dec
push
mov
test
out
divb
mov
out
mov
js
pop
movsl
jno
int
mov
push
ror
fs
insl
pop
outsb
xchg
mov
gs
adc
xor
movsl
stc
jo
sub
pop
mov
dec
cmp
mulb
sahf
jae
xchg
xor
in
stc
lret
incl
clc
sbb
lock
jne
jmp
icebp
push
xchg
stc
les
push
xor
jns
pop
in
popa
xor
out
jl
out
or
pusha
fwait
and
jno
repz
mov
adc
pop
mov
adc
inc
xlat
aam
in
or
jno
fisubs
jmp
inc
fdivrl
sub
popf
fmulp
inc
xchg
or
in
test
addr16
pusha
push
negb
sub
in
rcr
xchg
fstpt
mov
inc
mov
fwait
arpl
fisttpll
sbb
xor
les
inc
mov
add
ret
fldcw
jo
and
push
iret
sub
push
pop
sahf
dec
adcl
dec
rep
mov
add
xchg
fcompl
lock
xlat
data16
adcl
dec
or
push
iret
cmpsb
cmpsl
sub
ds
cmp
jecxz
cld
clc
jl
push
test
inc
hlt
in
notl
movsb
call
or
enterw
nop
mov
rcrb
test
mov
lcall
jno
sbb
push
aad
add
loopne
cld
roll
mov
or
jne
shlb
or
push
repz
cmp
cwtl
out
in
sbb
adc
lret
ret
push
stc
jb
dec
cs
pop
add
inc
push
sar
idivl
jmp
mov
incl
int3
xor
xorl
or
cmp
inc
in
fs
fnstenv
inc
push
mov
push
outsl
push
sbb
jecxz
sbb
cmc
movsb
xchg
xchg
xor
push
scas
push
bnd
dec
dec
push
cwtl
and
jbe
cmp
mov
shr
in
call
shlb
pop
data16
icebp
pop
add
cmpl
cmp
loope
mov
stc
mov
sub
xchg
in
and
push
iret
and
fsubr
xor
mov
movsb
je
loopne
fsubrl
push
or
idivl
mov
push
nopl
xchg
lea
mov
adc
arpl
lods
fstps
dec
push
jge
in
loop
inc
rcrb
dec
push
mov
je
dec
dec
mov
sub
xchg
cmp
push
das
mov
stc
sbb
sub
and
xchg
insb
rorb
mov
imul
xchg
adc
fdivr
stos
data16
scas
popa
in
call
xchg
pop
and
fwait
add
sbb
push
test
cmp
mov
add
dec
jno
scas
call
sbb
out
adc
sbb
lods
mov
leave
mov
les
jbe
xor
out
cmpsb
lcall
sub
stc
aaa
test
xor
add
jns
popf
into
xchg
cmp
pop
push
inc
push
fidivrs
in
push
mov
nop
xchg
inc
mov
in
pop
fwait
sub
subl
sub
mov
repz
ret
mov
cmpl
jne
or
mov
movsb
fildl
xchg
ret
enter
popf
leave
incl
scas
push
adc
rcll
lea
xlat
adc
pop
mov
jmp
movsl
iret
adc
addr16
add
mov
inc
or
out
jbe
sahf
mov
ljmp
sar
subb
adc
xchg
xor
pop
ficoml
or
insb
arpl
xlat
push
mov
or
cmpsl
xchg
arpl
das
push
jnp
outsl
loop
frndint
mov
pusha
lret
adc
vrcpps
repnz
sub
jnp
lea
aaa
mov
paddsb
lods
repz
shrb
xchg
sete
lock
cltd
mov
xchg
dec
and
mov
add
loop
pop
adc
xchg
add
mov
repz
lods
push
movsb
out
daa
outsb
pop
mov
jge
sub
xor
push
xlat
pop
mov
xchg
cmp
fcomip
mov
lret
int3
out
pop
or
or
popa
jp
cltd
insb
outsb
xchg
in
mov
dec
dec
mov
mov
call
push
cmpsb
int3
or
add
push
adc
xchg
inc
ret
std
dec
mov
dec
add
jmp
lret
push
popa
mov
loopne
loope
adc
xchg
push
hlt
lret
jne
sub
mov
mov
and
decl
push
cmc
gs
movsl
inc
jne
in
cld
pop
test
movsl
cltd
fistl
mov
and
mov
fcmovnbe
inc
dec
cld
adc
fsubr
mov
sahf
sub
mov
jecxz
aad
mov
push
xor
jb
push
and
cmp
cmpsb
add
loope
xor
inc
cmp
ret
fstps
test
cmp
xchg
leave
imul
jmp
lea
fnstenv
outsl
and
xchg
imul
push
js
pusha
mov
lcall
nop
jb
inc
lock
sbb
inc
adc
mov
lret
adc
cltd
push
xchg
imul
and
or
rorb
dec
mov
mov
inc
ljmp
jb
jg
imul
call
faddl
mov
sub
repz
push
cld
dec
outsb
cmp
mov
and
outsl
add
insb
and
sub
lock
and
xor
jno
fdivs
mov
or
jecxz
dec
test
cwtl
sub
mov
ret
test
testl
test
movsb
lock
pop
mov
or
mov
shll
pop
jae
push
aaa
or
repnz
xor
imul
lret
sti
inc
push
fsubp
sbb
mov
test
sbb
push
xchg
outsl
xor
mov
push
daa
push
pop
xchg
lods
sub
push
repnz
mov
push
cli
out
jl
push
inc
jg
sbb
outsb
pusha
fsubrs
iret
or
fisttpl
ret
adc
mov
test
xchg
hlt
mov
mov
adc
rcrb
imul
movsb
imul
cmp
xchg
scas
lods
xlat
cltd
insl
jg
std
and
fmull
sbb
les
popa
pop
lcall
sub
mov
popa
shrb
mov
mov
mov
dec
fidivrs
sub
lret
push
leave
push
bound
hlt
or
sub
sarb
call
cmp
icebp
hlt
movsb
sbb
sbb
xchg
push
imull
sbb
data16
xchg
pop
mov
test
nop
into
adc
aas
dec
sbb
popa
xchg
scas
loopne
adcl
rcr
je
out
dec
cmpsl
ret
lret
xchg
xchg
and
cmp
cmp
inc
and
mov
adc
into
aam
aad
dec
jp
lret
cmp
mov
xor
jg
aam
cmpsb
pushf
push
out
jne
mov
pop
sarb
and
mov
jbe
xchg
mov
pop
xor
and
push
xor
cmc
mov
jno
push
inc
in
rcrb
add
fsubr
pop
lock
stos
mov
dec
mov
mov
mov
adc
cltd
and
sahf
or
in
mov
es
in
inc
fnstsw
out
xor
jg
cmp
rorb
mov
fldt
push
xlat
in
mov
xor
cltd
mov
and
xchg
xor
paddw
mov
mov
ss
xchg
cltd
test
sbb
outsl
mov
push
into
mov
daa
mov
out
jl
out
adc
out
mov
cmp
loope
mov
ds
or
cltd
dec
jnp
adc
int
in
clc
add
in
rorb
xlat
or
sbb
or
pop
xchg
int3
jecxz
pusha
cld
sbb
nop
int3
test
pop
xchg
cmp
adc
add
push
loopne
pop
cld
aas
loopne
movb
add
inc
lret
mov
notb
fldl
repz
fwait
das
xor
aaa
inc
pop
jl
or
sbb
jle
push
sahf
mov
xor
mov
sbb
push
xchg
stos
inc
enter
daa
mov
mov
or
cltd
xorb
add
loope
outsb
aam
mov
sbb
popf
lahf
in
sbb
cmp
cld
outsb
sahf
mov
nop
xor
stos
add
cmp
aas
mov
dec
fmuls
fidivs
xchg
ret
jno
repz
mov
test
rolb
fs
push
push
lret
cmc
xchg
push
push
inc
jl
xchg
in
icebp
jae
inc
aad
cmp
xchg
or
mov
test
dec
jmp
pop
int3
aad
mov
mov
fists
movsb
cmp
mov
dec
or
dec
in
adc
repnz
hlt
push
loopne
jp
fcomps
xor
xchg
push
repz
sahf
jmp
hlt
insb
cmp
add
add
ss
or
leave
xchg
cmpsb
sti
jg
les
dec
mov
scas
add
notl
xor
pop
andb
ja
test
inc
push
fst
pop
dec
enter
or
jns
cwtl
rcrl
sub
fldl
or
cltd
push
enter
push
xor
push
sbb
xchg
mov
das
xor
sbb
pop
std
xchg
adc
fists
or
xor
add
das
jno
mov
hlt
fildll
lret
cmp
add
aam
dec
sarb
mov
loopne
mov
lods
in
push
int3
push
in
enter
call
stos
jae
pushf
xor
out
mov
or
repz
push
dec
mov
in
nop
pop
mov
mov
xor
stos
and
mov
std
setbe
add
shl
aas
test
xor
fmull
jge
sbb
insb
aad
scas
push
andb
lods
push
cmpsb
scas
out
push
cli
stc
nop
xlat
leave
mov
into
int3
pop
fistpll
push
and
call
out
inc
call
pop
dec
mov
fistpl
pop
mov
pusha
push
or
mov
mov
iret
mov
fucomi
sub
seto
dec
jp
lret
ja
in
andl
xor
lock
xor
loope
mov
fwait
push
aaa
fs
jp
stos
rol
out
mov
scas
adc
std
jb
pop
es
fs
arpl
lock
test
fimull
rolb
inc
loope
xlat
inc
mov
push
jb
outsb
push
clc
stos
lcall
inc
cmp
jmp
lds
repnz
xor
shrb
jl
push
or
mov
mov
in
push
ja
arpl
xchg
add
shl
addr16
aas
cli
mov
fnstcw
aam
imul
inc
nop
out
add
icebp
fisttps
gs
sti
pushf
andb
cld
xlat
adc
pop
add
lret
in
shl
loope
inc
mov
push
xor
daa
outsl
inc
pushf
ficoms
cmpb
popa
or
pop
adc
mov
scas
add
adc
mov
imul
sarb
popl
sub
cld
and
stos
sub
adc
push
fcmovne
cmp
incb
push
push
stos
out
shll
jp
je
jecxz
mulb
mov
lahf
insl
and
or
sub
repnz
in
rorl
clc
or
out
cltd
sbb
fcmovnu
add
std
mov
call
push
in
test
fidivrl
push
jne
outsl
shl
mov
out
cmp
dec
insb
mov
or
call
or
inc
sahf
loopne
push
icebp
mov
mov
in
scas
mov
stc
mov
xchg
inc
in
mov
mov
rcr
push
jo
or
cmp
pusha
cmp
xchg
stos
cwtl
lock
adcl
or
and
test
pop
aas
pop
aaa
sub
test
rolb
leave
insb
jnp
negb
jns
negb
pop
xor
inc
punpckhbw
cmp
xchg
lret
mov
cmpsb
fs
or
mov
sub
sub
or
call
xchg
int3
shrb
cmpsb
sub
test
xor
repnz
cmp
xor
dec
push
sub
movsl
push
push
lods
push
adc
fbstp
aaa
jbe
popf
ret
sbb
adc
es
ss
inc
mov
outsl
lock
aas
loope
subl
add
lahf
aas
dec
dec
dec
and
ret
xor
push
fcmove
add
lds
inc
repnz
imul
ds
add
call
dec
fs
mov
jge
pop
in
jne
jbe
shlb
sbb
push
xor
imul
sarb
aas
jne
rol
xchg
insb
mov
cmp
mov
icebp
hlt
mov
mov
in
shll
mov
je
adc
jb
cmp
mov
outsl
jge
xchg
xor
xchg
dec
outsl
fildll
imul
xchg
sub
daa
iret
jne
or
cmp
sub
loope
imul
sbb
cmpsb
push
incb
int
jno
lcall
push
adc
fwait
sbb
push
lahf
ja
addr16
xor
jo
mov
dec
sub
adc
dec
xchg
addr16
outsb
sub
sbb
push
imul
sbb
je
adc
xchg
gs
repz
hlt
pop
mov
test
mov
addb
mov
sub
cmc
fs
sbb
leave
dec
cmc
ss
aad
sbb
daa
inc
mov
dec
test
aam
or
pusha
sbb
inc
push
xchg
loop
add
cmp
sbb
cs
mov
loope
test
xor
rcl
iret
xor
mov
push
cmp
mov
jge
push
icebp
mov
dec
int3
mov
fists
les
fsts
mov
rolb
movl
lds
lods
aas
mov
xchg
xchg
xor
dec
sbb
cmp
inc
sub
fldl
inc
outsl
aad
loopne
push
pop
jne
lock
pop
aas
test
fiaddl
pop
lock
xchg
cmpsb
mov
jns
js
xor
shlb
repnz
nop
mov
xchg
arpl
fildll
mov
nop
idivl
aas
mov
add
pusha
pusha
enter
mov
leave
inc
les
cmp
and
sub
lods
and
mov
rorb
xchg
jae
hlt
push
ret
pushf
pushf
mov
and
int3
mov
and
or
fistl
in
push
pop
mov
dec
push
add
mov
inc
fidivrl
icebp
xchg
fwait
xorl
and
pop
shrl
add
inc
pop
pusha
aam
cmp
fwait
sub
lea
popa
insl
dec
add
mov
and
int3
jecxz
mov
in
jge
rcr
int3
adc
jmp
pop
aam
jae
jg
jmp
mov
jmp
mov
test
fistl
add
inc
sub
lss
xor
mov
stos
addl
fadds
dec
add
mov
xchg
filds
sahf
mov
inc
das
ds
pop
lret
cs
jnp
lods
xor
jecxz
dec
imul
dec
pop
outsl
xor
push
jno
sbb
subl
pop
fildll
and
xor
inc
mov
cmpsl
or
adc
mov
stos
jb
sub
cmovp
orl
push
out
jge
out
pushf
pminsw
or
loopne
xor
pop
push
push
inc
divl
or
popf
sub
scas
stos
adc
pushf
ret
sbb
fsubrs
xor
nop
mov
inc
in
fnstcw
mov
cltd
lea
clc
rcr
lea
add
je
mov
jne
ficoml
mov
movsb
xor
into
loop
inc
addb
loopne
enter
mov
jge
lahf
jp
mov
movsb
adc
xor
bound
fisttps
ret
rolb
and
inc
inc
cmp
popa
pop
les
add
sub
fdiv
sbb
fiaddl
pop
ss
pop
and
aas
fisubs
mov
mov
popa
adc
mov
out
add
mov
mov
wbinvd
rolb
ja
or
adc
add
cmp
and
xor
arpl
cld
push
outsl
shr
or
arpl
pop
adc
cltd
cmp
adc
stc
ret
out
sbb
ret
out
push
jl
jbe
std
inc
xchg
inc
add
stos
sub
jne
sbb
xor
mov
add
add
stc
faddl
mov
test
and
jecxz
sub
subl
mov
cmp
sbb
and
inc
xchg
jb
andl
fwait
leave
lahf
stc
inc
addr16
arpl
arpl
mov
test
icebp
imul
mov
testb
dec
push
xchg
jmp
or
xchg
test
lahf
nop
inc
pop
loopne
mov
shl
mov
enter
incl
add
lret
in
testb
mov
les
sub
into
xor
and
push
loop
mov
sub
call
out
dec
aam
push
push
rcrb
mov
xor
cli
pusha
fisubrl
xlat
mov
int
mov
aad
pop
adc
sti
xor
jne
mov
xchg
add
inc
xchg
add
in
mov
jb
pop
xor
mov
jge
bound
hlt
mov
subb
ljmp
cmp
das
jmp
push
addr16
and
int3
aad
leave
mov
ja
cmp
jno
xchg
sbb
cmpsb
xor
lods
scas
fsubl
sub
daa
push
xor
push
or
in
xchg
or
jne
fdivrl
shlb
xchg
adc
xchg
xchg
fdivrl
scas
xchg
xor
sti
stos
popa
dec
ret
fdivl
inc
clc
or
js
loop
mov
mov
lea
xchg
mov
fdivrl
xor
mov
inc
fcomp
and
or
fs
cmp
or
movsb
ja
lds
adc
mov
mov
inc
mov
sbb
dec
cmp
lds
add
movsb
cmp
test
jae
lahf
sbb
leave
inc
rcrb
loope
cmp
aam
xlat
repnz
shlb
xchg
fiaddl
fwait
inc
xchg
inc
push
xor
dec
xor
int3
cmp
adc
int3
add
pop
aad
mov
xor
pop
xor
cs
push
inc
push
cs
or
sub
lods
push
insb
rolb
imul
sbbb
das
jb
cmp
scas
dec
into
das
jge
jle
and
in
sar
push
ret
and
jb
cmpb
stc
ja
das
xchg
pushf
or
xlat
fnstenv
gs
data16
lea
push
loope
sar
sub
cmpsb
es
add
pop
jp
pop
xor
and
and
loope
sub
add
in
loope
and
insb
add
inc
dec
out
cltd
sahf
hlt
sbb
call
pop
or
decl
xchg
leave
nop
xchg
dec
add
add
aam
fwait
inc
test
ljmp
push
repnz
and
cmp
jnp
inc
scas
jg
lds
repz
mov
imul
mov
push
loopne
hlt
and
iret
sub
mov
ret
lret
inc
lds
les
testb
xchg
sbb
mov
sbb
dec
addr16
sbb
sbb
add
push
cwtl
pop
xor
xchg
mov
lock
scas
scas
movsb
jp
jne
loop
dec
lret
mov
pop
scas
lret
int3
out
cs
loopne
das
fnstcw
movsl
fucomip
push
pop
mov
sbb
addr16
pop
loopne
inc
cli
fbstp
in
in
mov
cmp
int
in
das
dec
xchg
stos
mov
iret
fwait
test
fidivl
stc
mov
dec
bound
imul
pop
add
push
outsb
fdiv
stc
andb
jns
push
negb
andb
mov
jl
sub
mov
test
test
imul
jg
sahf
or
pop
or
adc
xchg
sarb
scas
outsl
sub
push
push
push
inc
pop
insl
jmp
pushf
mov
pop
rclb
dec
decl
cmc
push
mov
mov
loope
out
cmc
mov
xchg
insl
cmpsb
pop
out
inc
xor
mul
enter
sub
arpl
jecxz
push
add
lea
in
adcl
push
jns
lret
push
bound
faddp
jmp
data16
cltd
leave
xlat
in
out
cmp
adc
stc
xor
sbb
rcrl
inc
sbb
dec
inc
adc
mov
sbb
cwtl
mov
and
inc
bound
sub
inc
cmp
stos
loopne
fdiv
in
mov
xor
in
cmp
stos
std
jl
pusha
mov
in
shll
mov
aas
int
orb
xchg
je
ret
sbb
subb
jno
dec
sbb
sub
das
stos
stos
and
and
xchg
mov
inc
adc
andl
lock
fucomip
sub
cli
push
out
sbbb
jb
loope
sahf
sbb
faddl
cmpsl
aaa
dec
pop
mov
xlat
inc
sahf
in
lods
pop
int
es
stc
cltd
call
or
sbb
mov
sub
xlat
and
pop
push
sbb
ss
fisubrl
add
and
mov
cwtl
imul
cs
ret
fdivl
xchg
adc
mov
cmp
add
and
stos
inc
pop
pop
rcrl
outsl
cli
dec
add
incb
popf
pop
mov
rclb
or
nop
push
xchg
scas
jg
mov
dec
and
pop
scas
jl
es
inc
sub
fistpll
xchg
shlb
fists
pop
das
pusha
dec
das
xlat
sbb
mov
pop
inc
or
jnp
push
stos
bound
mov
je
les
sub
xlat
mov
jne,pn
lea
sbb
jmp
aad
mov
xchg
int3
inc
and
dec
pop
je
sub
shrl
mov
stos
xchg
xchg
outsl
adc
in
pop
aas
xchg
sub
pop
pop
test
daa
push
xchg
push
mov
inc
movl
sti
loop
js
cmpsl
in
push
leave
es
jecxz
sbb
cmc
dec
gs
lret
push
pusha
mov
or
add
in
dec
mov
sub
cmp
insb
pop
ret
cmp
sarb
out
sub
clc
fsubl
jns
daa
sahf
jno
mov
dec
movsb
fistps
cmp
jno
mov
mov
ret
or
insl
adc
in
adc
dec
aas
ljmp
or
xor
pop
aas
int
fsubrs
in
inc
repz
mov
and
push
push
lret
in
xor
dec
leave
cmp
add
mov
jp
inc
iret
xor
inc
mov
stos
push
push
jmp
cmp
pop
lea
adc
jbe
sti
mov
xor
dec
push
orl
shlb
iret
add
mov
in
sbb
adc
imul
data16
adc
add
sbb
add
add
outsl
cld
mov
add
test
ja
xor
push
frstor
insl
scas
mov
add
or
out
xchg
jmp
dec
iret
ja
jno
into
shr
neg
sbb
mov
ss
arpl
sub
daa
cmp
and
mov
pop
xchg
sahf
pushf
sbb
filds
adcb
push
pop
add
inc
test
fldl
es
das
out
call
xchg
xor
test
icebp
mov
xlat
mov
xchg
in
mov
loopne
push
fcoms
int
pop
roll
jbe
in
mov
jmp
or
test
into
jp
stos
es
out
andb
fists
add
jne
sbb
aaa
stc
adc
clc
and
add
outsl
repz
xor
add
or
mov
aad
into
jnp
mov
dec
xchg
adc
adc
jbe
mov
xchg
or
jno
lcall
in
jmp
sti
mov
enter
push
pop
orb
test
xlat
ljmp
rorb
add
pushf
fsubrp
sub
psubusw
fsubr
inc
addb
aaa
xchg
orb
sub
pop
mov
sbb
xor
dec
jbe
in
mov
data16
out
movsb
repz
xor
add
push
leave
cmc
dec
sbb
cltd
add
push
dec
push
jmp
out
xchg
xchg
int3
cmp
jp
lods
mov
sbb
push
out
xchg
int
test
stos
sbb
cmp
jns
mov
cmpsl
js
mov
js
and
call
std
pop
xchg
add
push
adc
aad
sbb
mov
cmp
stc
push
push
ss
jne
push
mov
fnstenv
movsl
dec
loop
mov
add
pop
mov
in
mov
xchg
pushf
mov
jo
hlt
addl
leave
lahf
add
push
mov
jae
xor
roll
mov
sub
push
aad
mov
shll
int3
mov
mov
fcompl
pop
fidivs
imul
ror
es
or
mov
jae
fimull
and
mov
push
mov
outsb
cld
jmp
sbb
mov
mov
aaa
pop
jno
aad
or
jecxz
in
gs
movsl
ljmp
mov
pop
call
das
mov
dec
sbb
mov
cli
dec
lods
add
mov
or
pusha
jmp
pushf
cli
daa
insl
sbb
push
mov
aas
mov
or
mov
jae
sub
inc
pop
ret
sub
out
xor
dec
mov
xchg
sub
cli
push
movsb
xchg
adc
cmp
fimull
fcoms
sbb
xchg
and
xor
repz
mov
xor
adc
or
mov
mov
outsb
xor
sub
cmp
loop
call
ret
and
ret
add
cltd
lret
iret
movsl
sbb
jg
mov
aam
push
fsubs
mov
ja
cld
sbb
adcb
jno
repnz
cmp
shll
mov
in
outsl
xor
std
pop
sti
ljmp
sbb
out
pop
mov
loope
mov
xchg
daa
sbb
sbb
out
mov
shll
in
pop
jge
mov
cli
sbb
xchg
in
lods
test
shll
popf
adc
js
push
push
or
push
test
sub
and
cmp
in
test
imul
jne
jmp
movsl
xchg
lods
or
stos
add
enter
inc
xchg
mov
clc
cs
les
lods
inc
push
out
clc
sub
ja,pn
jl
mov
sub
fwait
out
lcall
push
adc
sub
and
stos
test
mov
in
mov
xor
loopne
in
mov
out
push
jecxz
outsl
push
dec
xchg
mov
repnz
mov
cmp
xchg
das
mov
cmc
mov
ret
pusha
fisubrs
andl
nop
mov
in
repz
cli
add
outsl
dec
pop
icebp
adc
jno
int3
outsl
aam
subl
clc
jne
lods
sub
push
pushf
out
nop
lods
int3
dec
sbb
data16
add
lods
stc
mov
test
cltd
mov
mov
sbb
mov
shll
pop
aas
int
add
lcall
mov
dec
std
xchg
sbbb
push
xlat
add
push
add
int3
and
stc
xor
addr16
insl
pop
jmp
aam
xchg
and
jns
stc
out
and
arpl
lods
xchg
sub
or
stos
mov
fnsave
mov
arpl
fdivs
repz
dec
mov
movsb
dec
inc
inc
nop
mov
push
xor
movsb
rorb
repz
mov
dec
sbb
outsl
int3
mov
dec
in
push
and
dec
xchg
int3
jge
in
xchg
adc
xchg
mov
or
lret
fxch
jecxz
pop
add
push
int
xor
push
add
je
mov
xor
inc
addr16
sbb
sarl
adc
lcall
fwait
sahf
sub
dec
push
repz
cmp
add
mov
xchg
out
call
jg
cwtl
divl
popa
out
ja
shr
sti
mov
out
mov
mov
inc
into
mov
xor
add
sub
xor
icebp
sub
or
call
pop
daa
clc
add
jle
in
add
rolb
enter
fisubl
add
outsl
push
adc
es
scas
shlb
aas
fcomps
mov
and
dec
test
fstl
in
orb
jg
xchg
dec
aaa
xchg
cmp
mov
scas
inc
scas
xor
popa
faddl
adc
fistps
dec
icebp
imul
incb
jb
dec
andl
ret
out
rorb
repz
xor
ret
or
int
test
mov
push
orl
ret
sub
inc
mov
mov
in
sbb
adc
pop
sbb
mov
xchg
outsb
ret
or
sub
scas
les
push
push
mov
pop
dec
mov
jmp
mov
adc
dec
add
dec
jle
xchg
pop
or
or
push
pop
mov
cmp
pop
iret
pop
dec
mov
out
push
ja
aam
ja
xor
push
mov
pop
cmpl
arpl
shll
imul
js
push
pop
mov
jl
aad
loopne
push
inc
push
mov
inc
xchg
xor
dec
hlt
mov
xlat
cmp
popf
std
stc
call
add
jns
jp
in
ss
cmpsl
insl
fdivl
in
lret
fistpll
xchg
push
or
lcall
jns
and
cmp
imul
std
jnp
and
bound
xchg
imul
bound
mov
data16
pop
xchg
inc
int
mov
mov
add
push
mov
movsb
loop
movsb
inc
arpl
aas
clc
mov
inc
push
sbb
repz
cmpsl
movb
adc
mov
sub
test
dec
dec
jno
add
jmp
insl
push
xchg
fs
iret
cmp
adc
je
push
jge,pn
pop
jns
mov
or
cs
jne
inc
aas
and
shrb
in
in
std
mov
pop
hlt
repnz
inc
mov
push
inc
test
pop
cmpsb
mov
xchg
mov
push
sub
popf
dec
jecxz
or
cld
in
and
sub
movsl
and
lret
mov
rcrl
lea
mov
add
push
aad
or
lret
rcrb
pusha
mov
movsl
cli
inc
adc
ja
mov
cltd
dec
in
xchg
iret
mov
mov
push
or
ss
push
sub
dec
mov
mov
sbb
jnp
outsb
arpl
test
mov
mov
out
cmc
jne
add
pop
gs
jno
test
or
loope
pusha
push
cmp
fldt
test
adc
ds
test
sahf
js
cmpsb
in
xor
std
addl
fs
mov
loopne
out
mov
mov
xchg
aam
cmp
and
sbb
pushf
mov
push
sbb
cmp
mov
jbe
cmp
ficompl
dec
jb
or
and
movsb
ud0
in
pushf
xchg
lahf
jmp
inc
outsl
mov
in
bound
jle
or
mov
xchg
sbb
pop
adc
adc
call
stos
cmp
inc
xchg
lret
outsl
xor
fists
data16
call
add
mov
cmpsl
adc
adc
lock
dec
frstor
push
mov
add
mov
std
cltd
sbb
jle
mov
jo
jge
jne
sahf
repz
rorb
pop
mov
sar
inc
lret
out
push
xchg
mov
jno
cld
sbb
bnd
xor
xchg
adc
int
xor
inc
stc
enter
cli
iret
xor
or
loopne
xorb
cmp
add
cltd
push
fnstenv
ret
in
jl
push
stos
dec
movsl
pushf
or
adc
inc
adc
js
jecxz
jl
filds
sub
jb
inc
push
sub
pop
cmp
inc
jp
mov
shlb
imul
sti
js
xchg
lods
in
out
das
mov
test
shr
aam
sub
xor
lret
or
push
scas
add
mov
roll
in
stos
mov
xchg
dec
add
loop
in
push
xchg
test
mov
mov
push
dec
into
hlt
sub
adc
pop
addr16
lods
sub
out
inc
imul
adc
lods
mov
lock
add
dec
push
int
sbb
shl
enter
xchg
mov
ds
out
ds
test
mov
mov
test
push
nop
shl
cmp
jg
xchg
loope
scas
outsl
insl
adc
stc
enter
out
lcall
dec
add
xchg
push
add
ljmp
cmp
push
lds
repz
pushf
in
aad
js
jl
fs
sbb
mov
adc
repz
push
shrl
out
pop
cld
sub
in
popa
roll
test
into
or
ret
push
add
pop
pop
push
jbe
ret
mov
or
jns
mov
inc
test
mov
imul
mov
pop
inc
out
stos
cmp
mov
test
sahf
push
or
loope
fldcw
push
sbb
or
aad
rorb
in
clc
out
sarl
push
ds
push
clc
int
fists
ljmp
xor
push
mov
icebp
xor
faddl
push
pop
push
sbb
or
mov
mov
jmp
stos
sbb
fistpl
mov
bound
insl
jbe
xor
aaa
pop
andl
xor
popf
adc
push
pop
aaa
inc
mov
sbb
mov
cli
mov
sti
mov
xchg
jne
repnz
in
pop
inc
dec
push
int
fidivrl
xchg
ret
lret
push
imulb
dec
cmp
push
pop
pop
push
mov
mov
ja
test
and
mov
jg
lahf
sub
xlat
sarl
outsb
mov
pop
and
cmpb
inc
sub
jns
dec
push
pop
cltd
repz
outsb
inc
addr16
popf
push
pop
mov
mov
mov
cld
cmp
mov
mov
fidivs
icebp
dec
mov
dec
mov
xchg
icebp
and
fdivrl
mov
dec
or
mov
ljmp
stos
es
dec
sbb
dec
xchg
stc
and
and
adc
sbbb
sub
test
dec
jecxz
add
std
sbb
ljmp
lock
inc
mov
xchg
notb
adc
push
mov
in
pop
xchg
leave
pop
mov
sub
jbe
xor
and
or
js
xor
dec
test
test
jbe
scas
jle
ja
mov
push
leave
pop
aas
ja
jns
jne
or
lods
mov
mov
sbb
cwtl
pop
dec
push
scas
repnz
insb
inc
mov
aad
ss
push
mov
push
shrb
leave
int3
and
mov
cmp
lahf
adcb
mov
push
es
popa
fldln2
ffree
xchg
mov
jle
imul
fistps
out
and
lods
push
in
dec
push
inc
stos
sarb
loopne
mov
insb
es
imul
adc
push
jne
cmp
test
add
add
mov
jae
pop
xchg
sbb
insl
cmpsl
fcmovnu
popa
xor
jecxz
dec
les
pop
push
dec
jmp
ljmp
adc
out
inc
outsb
lret
pop
push
gs
mov
lods
jmp
xor
imul
sbb
ds
xor
pop
adc
leave
cmpsl
sbb
xchg
mov
or
cmpsb
sahf
mov
inc
out
inc
mov
mov
fstpt
imul
shl
inc
sbb
in
out
dec
stc
pop
nop
xor
imul
inc
loopne
push
scas
and
jmp
call
mov
pop
sub
add
sbb
mov
mov
cli
cwtl
pop
jne
stos
gs
divl
mov
xor
add
iret
repz
out
test
fdivr
adc
inc
dec
or
ffreep
inc
mov
fs
es
fsubs
xchg
and
fidivs
mov
lods
aad
insb
cwtl
in
push
rcll
fwait
sub
mov
xchg
dec
movsl
mov
pop
iret
andb
push
sub
orl
push
pop
movsl
adc
mov
das
jb
jns
out
add
insb
fidivrs
cmc
inc
shlb
or
sar
lahf
std
jbe
add
sbb
or
daa
sub
dec
adc
lea
mov
fldl
iret
push
sub
cmc
enter
cmpsb
adc
mov
mov
or
je
mov
xchg
fmull
filds
add
icebp
sbb
push
iret
cs
jle
jbe
stos
leave
ret
pop
mov
and
jb
dec
xor
lret
rclb
cmp
mov
in
movsb
or
mov
xlat
mov
leave
adc
std
push
inc
push
pop
jae
push
es
test
test
inc
cmpsb
mov
in
sbb
pop
xor
push
push
and
xchg
psrlw
push
dec
xchg
pop
xor
out
inc
xor
lea
sub
pop
or
pop
ret
imul
imul
mov
push
xorl
mov
jno
push
rcl
adc
or
jns
push
jne
in
or
mov
and
dec
es
aas
rorl
cmp
mov
add
inc
sbb
jmp
jne
mov
xchg
xor
xchg
add
loope
mov
lcall
clc
mov
dec
sbb
pushf
add
lcall
mov
fchs
ja
adc
fstl
gs
ret
inc
enter
repnz
sti
int
jnp
ljmp
dec
fdivs
icebp
jno
cmp
movsl
cmp
mov
rorl
out
dec
and
add
sbb
jae
or
mulb
mov
or
sbb
out
cmpsb
aam
lods
pop
scas
push
sbb
add
pop
in
sub
add
xlat
xor
fwait
fs
inc
adc
sahf
mov
xchg
gs
or
xchg
ss
mov
popa
add
mov
fidivl
mov
fwait
arpl
lds
stos
cmc
aas
pop
in
fstp
es
mov
ret
roll
and
xchg
lret
and
mov
lahf
and
jno
fcomps
dec
and
lea
push
inc
div
xchg
fdivl
pop
rorb
std
test
push
pop
repnz
das
ljmp
add
dec
dec
add
mov
popf
inc
sbb
sub
push
mov
mov
sbb
and
xchg
mov
pop
sbb
push
add
sub
out
in
ja
dec
je
mov
aas
test
fstps
iret
decl
pop
adc
push
add
xor
push
hlt
pop
outsb
daa
rcll
fsubp
lret
aas
jnp
adc
push
cli
mov
repz
push
cli
fmull
ret
jmp
add
jo
inc
fdivr
ret
xor
popa
into
mov
adc
xor
sahf
or
lods
inc
scas
mov
and
xchg
stos
jge
hlt
and
sbb
mov
pop
movsb
fbstp
test
xor
jns
add
add
mov
test
jbe
xchg
jb
cmpsb
xchg
jg
adc
mov
imul
cmc
int3
dec
add
or
insb
rclb
and
lods
push
sub
outsb
and
daa
push
jle
nop
mov
inc
bound
push
leave
int
jnp
out
dec
push
nop
dec
int3
sbb
mov
xor
dec
jmp
stos
xlat
xor
stc
loopne
int
lods
cmp
scas
pop
nop
cmpsb
in
jmp
and
pop
imulb
ret
inc
in
jb
pminsw
mov
or
orl
insl
into
mov
pop
push
push
cmp
mov
pop
dec
jmp
push
orl
mov
mov
movsl
mov
adc
lds
pushf
jno
sbb
mov
inc
xlat
scas
adc
imul
in
xchg
adc
dec
pop
jo
push
inc
mov
shrl
pop
loopne
mov
mov
mov
in
test
icebp
xor
pop
in
jb
and
xor
bswap
inc
negb
clc
lcall
mull
orl
clc
push
fnsetpm(287
ja
push
jge
int
dec
add
mov
and
shr
xchg
mov
in
pusha
and
and
andl
call
push
cmp
lret
or
xchg
lods
loope
lea
aas
mov
and
sub
lea
pop
imul
aad
fsubs
mov
xchg
movsl
roll
and
dec
cmp
jg
loope
mov
sar
call
fcom
cmpsb
gs
mull
shrl
add
out
mov
lea
imul
add
nop
mov
imul
sti
sub
mov
adc
mov
lcall
fwait
std
add
imul
mov
loope
std
daa
add
push
lcall
stos
incl
fldcw
sbb
xorl
iret
pop
mov
out
pusha
fsub
in
or
cmp
imul
mov
cmp
shrb
fdivrs
aad
or
or
jle
ret
adc
inc
cltd
add
mov
add
and
or
add
lahf
mov
stc
outsb
loop
imul
push
arpl
or
cmp
es
sti
mull
cli
gs
mov
jmp
stc
jnp
mov
icebp
xchg
add
or
xor
jae
jge
sbb
jge
sbb
aam
or
sub
fsubp
jg
movsb
imul
add
ret
ss
lcall
gs
jbe
mov
dec
mov
mov
out
leave
xchg
fcmovb
inc
dec
int3
xchg
pop
inc
jbe
adc
aad
movsl
mov
pop
into
aas
fwait
inc
pusha
sbb
cs
xor
loope
xchg
mov
adc
mov
rorl
lahf
sar
mov
pop
lods
ljmp
mov
sbb
icebp
stc
in
add
sbb
jo
jmp
in
jge
test
cmp
push
lock
loope
daa
mov
pop
mov
outsl
mov
std
mov
mov
xchg
and
aad
or
jbe
pop
xor
lea
sub
dec
lods
aad
stos
test
gs
adc
push
outsl
je
xlat
cmp
mov
pushf
xchg
leave
test
pop
ja
out
push
les
push
or
sar
sahf
pop
and
inc
add
mov
push
add
sub
sbb
scas
push
call
das
aad
movsl
jne
push
lods
sti
cmp
mov
xchg
jo
int
mov
stos
fimull
pop
cmp
push
mov
xchg
sub
dec
pop
jg
mov
stos
mov
push
pop
mov
mov
mov
adc
push
call
jg
jne
sti
pushf
inc
jno
les
imul
push
mov
or
repnz
push
jo
sub
test
pushf
adc
lcall
and
cmpsl
addr16
xchg
jb
cmp
push
xchg
mov
xchg
loopne
dec
xchg
rorl
fiadds
test
leave
stos
sahf
jae
add
in
jmp
inc
cmpsl
aas
pop
insb
aam
xchg
jle
pusha
fmulp
xlat
mov
add
dec
es
dec
scas
scas
clc
ljmp
push
negb
ret
dec
xchg
in
or
lock
jle
icebp
mov
and
rcrb
hlt
hlt
jge
das
mov
sbb
rolb
imul
out
pop
inc
xchg
imul
ja
scas
and
in
shr
aam
dec
pop
stc
enter
lods
lock
lret
push
jge
rorb
xor
xor
add
cmpsl
repnz
repnz
pusha
mov
fldl
dec
jp
pop
jbe
inc
mov
jge
lods
mov
rcrl
loope
jl
inc
and
adc
into
pop
mov
xchg
adc
mov
cld
mov
imull
aam
mov
mov
sub
or
xchg
inc
rol
jge
adc
xchg
ret
rol
xchg
lods
inc
in
add
xor
loopne
push
testb
push
ficompl
imul
cmp
cwtl
in
push
in
xchg
in
faddl
xchg
cmp
jmp
loope
aaa
mov
dec
adc
fwait
imul
fists
dec
pushf
jbe
xor
inc
push
or
sub
cwtl
dec
jb
mov
ret
push
jno
jl
add
sub
nop
push
jge
push
ja
gs
xchg
leave
adc
mov
pop
hlt
jae
jle
dec
in
bound
loope
ret
cmpsl
add
xchg
rclb
or
sub
jae
or
mov
sti
lods
ret
cwtl
inc
vpackssdw
enter
adc
mov
mov
in
cmp
jae
fimull
xchg
data16
je
sub
lods
or
leave
mov
adc
test
in
cmp
sbb
mov
and
sbb
cs
das
ret
mov
inc
popa
inc
aad
dec
mov
lahf
jno
out
dec
popa
adc
fidivrl
shll
movsb
stos
loope
pop
mov
jp
lret
into
inc
cmp
push
scas
and
xchg
into
jmp
and
inc
jb
imul
jl
shlb
jmp
push
ljmp
pop
movsl
jmp
into
cmpsb
cwtl
jp
pop
mov
bound
or
in
sbb
shlb
mov
inc
js
test
dec
dec
mov
inc
stc
jl
loop
inc
mov
xchg
mov
and
xchg
cmp
arpl
es
add
adc
lahf
push
sahf
jo
loopne
pop
mov
mov
lret
lea
enter
mov
rcl
gs
ret
mov
pop
sub
jl
cmp
mov
shl
jmp
cli
movl
push
sbbl
fiadds
sub
xchg
mov
push
leave
repz
push
mov
lea
in
into
mov
es
call
ret
jmp
inc
es
cmp
imul
aad
jns
sarb
gs
insb
repz
lcall
push
sub
in
inc
cwtl
push
jno
loopne
ret
mov
inc
mov
jmp
push
shlb
outsb
je
pop
sbb
lea
scas
sbb
mov
inc
cwtl
push
xchg
xchg
and
gs
dec
adcl
cmp
push
dec
push
sub
mov
and
out
mov
mov
sub
scas
sbb
dec
xchg
stos
dec
xchg
movsl
int
in
out
cmp
mov
mov
or
out
rcll
std
lods
inc
inc
cwtl
ja
push
insb
fidivs
sahf
std
xor
mov
mov
jae
jno
clc
mov
inc
sub
aam
mov
call
test
ud1
test
add
sbbl
cltd
xchg
ficoml
adc
inc
cwtl
fs
mov
pop
xchg
aas
fisubrs
jp
and
pop
sbb
addr16
fxtract
and
loopne
roll
fnstsw
and
add
xchg
jbe
sbb
adc
push
and
int
push
add
mov
rcrl
std
lahf
mov
repnz
imul
incl
stos
sbb
fnop
adc
xor
push
mov
sbb
aam
aam
dec
mov
arpl
xor
jns
pop
jno
mov
test
mov
movb
je
sub
rclb
add
jns
xlat
lds
or
dec
add
adcl
not
stos
lock
fcoms
arpl
pop
jae
scas
sub
sbb
mov
push
dec
and
out
push
xor
xor
mov
or
push
and
insb
xchg
jmp
sub
cmpsb
adc
imul
iret
out
lods
icebp
sub
mov
pop
dec
bound
int
add
cld
dec
iret
outsl
cmp
sub
xchg
stc
and
cmpsb
inc
lods
or
cmp
fsts
and
popa
jecxz
test
fcmove
push
adc
aam
push
sub
cmc
sub
roll
andb
repz
popa
push
push
inc
pop
loop
xor
pop
dec
xchg
fwait
jne
pusha
jle
push
sbb
sub
inc
mov
dec
rcrl
and
add
lock
xor
movsb
jae
outsl
inc
rcll
outsb
cmp
add
sti
sub
sbb
cmc
sub
jbe
fcoms
in
pop
bound
imul
popa
xchg
lods
lret
test
xchg
push
and
rolb
jp
push
jbe
pusha
scas
pusha
add
leave
out
sahf
lcall
push
stos
sar
aaa
les
call
jmp
insb
popa
and
mov
sub
push
mov
hlt
jg
les
sub
mov
adc
dec
test
ja
testl
mov
enter
in
rcr
into
xor
mov
nop
sbb
popa
mov
or
rclb
sbb
push
stos
icebp
jg
push
jl,pt
ret
push
mov
enter
sbb
rclb
ret
cmp
and
mov
js
jmp
pop
cmc
inc
mov
faddl
imul
dec
lock
mov
jnp
lods
xchg
push
rcr
jmp
sub
subl
pop
adc
and
lea
movsl
insl
xchg
jp
decl
mull
movsl
jns
add
sar
shrl
pop
sbb
mov
mov
cld
sub
pop
pop
in
xor
mov
test
pop
mov
fbld
or
inc
hlt
cmc
das
andb
clc
test
jne
fidivs
fnsave
mov
test
mov
lds
adc
xor
ret
cwtl
inc
jno
push
xchg
cmp
xor
or
mov
push
mov
inc
push
dec
aaa
shll
adc
out
jle
xchg
add
dec
cmpsl
pop
popf
outsb
xor
loopne
mov
cmp
xor
dec
fldl2e
fwait
in
fdivrl
bound
stc
xchg
pop
mov
cmpsb
jp
add
mov
imul
push
cmp
adc
fisttpl
mov
cmp
mov
testb
stc
push
inc
push
or
jge
or
inc
aas
scas
jns
dec
fmull
jecxz
pop
mov
and
xchg
icebp
dec
sahf
shll
xor
mov
leave
and
mov
aad
pop
mov
sub
inc
lods
and
leave
xchg
fwait
gs
fcoms
shlb
jo
sahf
and
mov
sub
imul
dec
mov
rcrl
sbb
or
test
mov
out
xlat
mov
fdivrs
loope
or
and
dec
addr16
sti
je,pt
adc
adc
lcall
inc
aaa
inc
xor
loope
aas
xor
cmp
push
pop
xor
xchg
pop
out
xchg
lods
push
mov
in
rolb
or
lcall
cmpsb
in
push
adc
pop
jnp
aad
ret
xor
inc
lcall
mov
aas
pop
enter
lods
push
pop
loope
mov
test
repnz
xchg
mov
pop
sub
mov
incl
adc
adc
repz
popa
dec
ficoms
out
outsl
sub
fiadds
sti
sbb
clc
push
out
test
xor
mov
or
and
inc
shl
sbb
sbb
xor
lcall
mov
jg
jmp
push
sbb
mov
lods
cltd
mov
arpl
cmp
lock
mov
or
call
in
loop
in
adc
mov
leave
lds
in
add
repz
cmp
cmp
xchg
pushf
ljmp
mov
sub
push
push
outsl
or
lahf
push
notb
sub
mull
mov
or
or
cmp
stos
int3
adc
sbb
mov
adc
inc
pusha
shrl
sbb
dec
lods
pop
adc
sarb
xchg
dec
xchg
xchg
pop
cltd
xor
ja,pn
imul
push
xchg
clc
jecxz
inc
js
imul
ret
lahf
sbb
orb
mov
enter
mov
mov
and
stc
aas
and
sbb
jge
push
jns
dec
hlt
jbe
jno
sbb
mov
xchg
sbb
push
pop
xor
xor
and
repz
add
mov
rorl
das
add
add
sti
jnp
xchg
mov
outsb
sbb
ss
sbb
jnp
push
lahf
pop
subb
jp
rcr
pop
xchg
add
fildll
stc
pop
push
dec
sub
roll
and
or
xchg
lods
mov
mov
pop
ljmp
mov
xchg
ljmp
shl
mov
cmpsl
or
repnz
test
jne
addl
loope
call
add
test
neg
add
scas
mov
test
nop
pop
pop
inc
sbb
pop
push
fidivrs
ja
sbb
sahf
lret
jnp
xchg
out
mov
mov
push
loope
pop
aas
xor
sbb
sbb
or
xor
mov
hlt
fldt
add
int
xor
fnstsw
xchg
cmc
sub
jg
cmpsl
js
cmc
push
push
mov
lods
or
les
mov
pop
rcrl
subl
mov
mov
mov
sarb
inc
aaa
sub
dec
jle
mov
xchg
xchg
mov
push
push
xchg
jle
and
push
orl
dec
shl
inc
mov
scas
or
add
mov
in
and
outsb
or
or
cmp
cmp
cmp
ss
call
in
fmull
mov
or
inc
mov
pop
stos
in
mov
push
mov
test
loope
aam
cmp
sbb
lahf
sub
jmp
aad
int3
popl
xor
jb
loopne
sub
dec
mov
mov
in
aam
jle,pt
pop
neg
stos
sbb
stc
inc
mov
and
stos
hlt
adc
pop
orl
mov
cmpsb
jl
les
xchg
jns
mov
sub
cmpsb
fisttpl
xchg
xor
add
cwtl
fistl
leave
lahf
and
ret
jmp
push
xchg
sub
mov
iret
sub
in
jp
sbb
leave
fnstcw
sbb
xor
sahf
xor
pushf
mov
mov
fucomp
xchg
and
cmc
mov
cs
jae
jecxz
out
mov
push
xchg
pop
addb
test
mov
adc
cwtl
pop
scas
add
jns
dec
js
rol
inc
sub
pop
enter
test
sahf
jle
fsubrs
data16
and
mov
mov
enter
or
inc
mov
cmc
mul
xchg
cld
orl
pushf
mov
movsb
ljmp
xor
fsubrl
insl
ret
jbe
andb
sbb
into
mov
add
in
movsl
xchg
mov
lods
hlt
push
add
fdivp
add
test
sbbl
push
cmp
add
rol
test
shl
nop
test
mov
xchg
addr16
leave
adc
sub
jg
xchg
xchg
hlt
scas
scas
inc
hlt
xchg
test
pop
scas
xor
sub
data16
fadds
xchg
repz
sub
xchg
je
xchg
gs
jmp
jno
dec
lcall
xchg
cmc
jae
sbb
and
lcall
lds
test
filds
pop
add
in
lcall
repz
dec
jo
bound
jle
cmc
fdivl
mov
sub
imul
imul
jmp
push
out
out
xor
sbbl
lahf
sbb
mov
inc
mov
jno
fiadds
lret
ret
test
cmp
popf
mov
mov
sbb
lahf
test
cld
jmp
jge
xor
mov
mov
xchg
addr16
mov
cmp
cmp
iret
aas
cmp
mov
push
jmp
xchg
out
ret
and
adc
push
add
inc
dec
push
fistps
ja
jl,pt
pop
aam
jp
lods
test
mov
out
push
dec
jno
mov
cmc
movsb
push
aad
aas
sbbb
je
jecxz
inc
add
out
into
push
push
pop
inc
sub
enter
loopne
jbe
mov
pop
std
jge
nop
iret
sub
test
call
or
aas
lock
inc
xor
cwtl
or
popa
in
or
lds
push
sbb
movsb
mov
loope
mov
popf
pop
mov
mov
add
aad
icebp
iret
jo
fcoms
outsl
xchg
jg
insb
adc
dec
enterw
cmp
mov
cltd
inc
or
mov
xor
jmp
sbb
or
add
or
xchg
aaa
xchg
movsl
xchg
rcrb
lahf
and
repnz
insl
mov
push
dec
mov
jecxz
mov
pusha
iret
mov
nop
cmpl
lock
fs
lods
lock
outsb
fsubrs
jnp
add
sub
push
mov
or
dec
imul
sbb
pop
add
jmp
xor
fcompl
and
sbb
cmp
fistpl
movsb
and
out
xor
sub
jge
arpl
jno
add
sub
and
je
in
adc
cmpsb
cmp
push
inc
adc
cmc
insb
test
insl
cmpsb
lea
ss
push
inc
rcll
loopne
rol
xor
and
push
fsubrl
lock
outsb
adc
gs
xor
mov
dec
pop
nop
cmp
cwtl
loope
adc
aad
loop
out
ja
sbb
cmp
inc
add
bound
dec
aam
dec
and
popf
fnstsw
icebp
xchg
jle
ljmp
xchg
cvtps2pi
push
jb
lret
into
sbb
jmp
fucom
xchg
push
and
mov
add
imul
push
jg
test
xchg
roll
popf
cmp
cwtl
add
leave
add
push
dec
jg
adc
call
insb
fwait
ljmp
in
dec
cltd
dec
aam
sub
mov
mov
outsl
stos
in
movsb
adc
pop
test
xor
sub
push
lods
jb
pop
fistps
push
aam
sbb
test
sbb
out
mov
in
incl
rol
jne
in
mov
cmp
cmc
cmp
imul
inc
popf
pushf
in
andb
sbb
addl
jl
and
movsb
mov
adc
adc
sub
and
xchg
push
gs
and
inc
jmp
shr
jp
xor
mov
xor
out
xchg
dec
stos
mov
fisubrs
pop
cmc
sub
out
stc
out
rorb
pop
sub
sub
addr16
dec
repz
sbb
insl
sbb
mov
mov
jnp
loope
aad
sbb
add
pop
push
mov
mov
test
repz
rcrl
push
mov
xchg
cmp
mov
sbb
div
aaa
movsl
push
out
push
xor
mov
inc
dec
push
lods
dec
loopne
xor
subl
or
cmc
shll
jecxz
cmp
mov
jnp
mov
or
hlt
xchg
pop
stos
dec
cltd
out
adc
rcr
lock
sbb
push
xchg
ror
mov
mov
rcrb
pop
test
in
xchg
pushf
repnz
js
adc
test
adc
pushf
inc
jg
jmp
xchg
sti
aad
into
sbb
stos
mov
mov
enter
mov
das
cmp
mov
push
testl
mov
shll
sbb
dec
mov
inc
js
out
or
fldcw
je
sub
dec
xorb
jle
out
pop
jo
sub
shrl
fsubs
in
mov
rcrb
fimuls
jno
pop
or
mov
mov
cli
fisttps
add
mov
xchg
mov
push
mov
push
mov
pop
lea
sub
add
shlb
or
in
mov
mov
and
fildll
mov
enter
fsubrl
loop
add
pop
mov
pop
lock
pop
adc
int
push
pop
test
ss
push
xor
jno
lods
sahf
std
stos
sub
inc
or
xchg
aaa
jb
sub
fstl
push
scas
push
pop
push
or
fadds
ret
sub
popa
cmpsb
std
pop
fmulp
adc
iret
lods
outsl
inc
out
repnz
scas
pop
xchg
pop
mov
bound
pop
lret
popa
xchg
add
xchg
xor
insl
fsubrs
mov
rcll
es
out
xchg
sti
pop
cli
cld
dec
and
add
stos
mov
cmp
xor
std
adc
sarb
pop
and
dec
scas
ljmp
js
push
xchg
cld
inc
not
cmp
andl
mov
cmpsl
insw
dec
js
arpl
push
ja
cmp
xchg
cld
fcmove
mov
cs
iret
loope
mov
inc
sbb
sub
jo
filds
jnp
in
fwait
test
in
inc
lock
or
push
xor
out
hlt
ljmp
nop
ljmp
cmpsb
xor
mov
and
das
out
xchg
shll
xchg
lods
cmp
je
roll
ret
es
ret
jne
and
in
dec
imul
rcrb
or
jp
sbb
rcr
testb
testl
sar
sbb
mov
ljmp
pusha
mov
in
or
xchg
add
and
dec
inc
fs
rcrb
xlat
es
ds
xor
fcomi
push
sti
jb
gs
fmul
roll
inc
adc
mov
bound
rcr
mov
aam
repnz
cmp
fcmovbe
or
aad
xchg
cmp
test
xor
repz
or
lock
outsl
fsubrl
mov
in
pop
mov
jmp
add
inc
ffree
pop
xchg
loop
ret
cmp
push
mov
jmp
rcl
lcall
xor
ficompl
loop
mov
jg
fdiv
int3
jae
sbb
subl
sbb
add
sbb
clc
adc
adc
mov
add
xor
out
adc
sbb
fistl
lahf
fisubl
lea
lea
mov
xchg
xchg
js
push
or
sub
aaa
repz
popa
sbbb
fnstenv
sbb
fnstsw
and
inc
mov
push
arpl
jge
mov
rcll
sbb
push
and
sbb
jmp
xchg
jns
mov
mov
negb
fs
lds
push
xchg
rorl
sub
pushf
std
jno
daa
mov
mov
pop
stos
flds
shrl
mov
dec
mov
sbbb
xlat
aad
pop
push
sub
push
test
mov
movsl
or
cmp
in
inc
xchg
nop
adcb
rorb
aaa
push
dec
dec
fldl
pinsrw
insl
xchg
rcll
lods
loop
aaa
cmp
inc
popa
jne
andb
jb
xchg
xlat
sbb
in
xor
ja
cld
mov
fdivrp
push
sub
cld
pusha
jno
aas
outsb
sub
arpl
jge
add
int
out
shlb
pushf
mov
cmpsb
xor
inc
pop
push
dec
sbb
or
in
or
cmp
out
aam
jae
and
out
nop
leave
cwtl
xchg
test
jge
dec
stc
inc
or
xchg
adc
insl
enter
fcomps
addb
je
mov
xorb
out
cmpsl
sysenter
push
shll
or
mov
cmp
cmp
ret
iret
fimull
ret
fwait
add
loopne
arpl
addr16
add
lcall
int3
cmc
or
js
ret
les
sub
hlt
mov
push
xor
xor
iret
ret
dec
push
dec
stos
inc
push
adc
lret
push
sahf
scas
ja
dec
test
dec
daa
cmpsl
in
pushf
cs
jp
pop
jle
icebp
cwtl
ret
repz
xchg
popf
sbb
repnz
xchg
inc
lret
pop
andb
lcall
insb
rclw
shr
bound
dec
mov
cmp
cs
jo
out
stos
jge
dec
push
jge
mov
in
adcl
dec
push
push
sbb
repnz
test
or
icebp
gs
sub
jmp
dec
lret
lock
lods
mov
add
add
mov
dec
push
and
rolb
out
xor
in
fcompl
mov
jns
push
or
jmp
push
dec
jle
js,pn
mov
dec
fnstenv
and
xor
stos
mov
mov
pop
daa
mov
push
jae
or
add
inc
fwait
stos
dec
cwtl
movsb
in
and
pop
in
fwait
pop
lods
push
es
fdivrs
daa
lcall
loop
outsl
and
xchg
jecxz
and
push
xor
cmp
sbb
adc
fcmovu
mov
scas
add
xor
outsl
insb
xchg
mov
lock
movsb
mov
mov
push
movsb
push
xor
not
sbb
inc
cli
dec
jns
sbb
test
test
clc
bound
mov
jb
imul
int
int3
mov
sar
pop
dec
cmpsl
xlat
or
mov
and
cmp
jne
mov
je
sbb
inc
rcr
aaa
sbb
mov
into
repz
js
and
addr16
or
inc
lods
add
inc
jno
mov
pop
and
sub
es
test
fidivrl
inc
or
jbe
fstl
lahf
test
and
sbb
lret
out
push
mov
rol
push
popa
jg
mov
subb
jp
or
rorl
mov
je
adc
push
push
push
mov
clc
xchg
mov
jecxz
ja
mov
inc
ja
inc
leave
or
cmpsl
aam
cmpsb
bound
ret
jnp
lret
das
xchg
cs
cmp
sub
jo
sub
and
cmc
imul
inc
sbb
mov
sahf
pop
jle
push
push
je
lds
mov
jnp
es
add
pop
movsl
push
dec
insl
pop
in
ds
jmp
and
popl
xchg
movsl
mov
imul
ja
sub
aas
fisubl
pop
add
sub
in
and
mov
lret
shlb
clc
andb
sbb
xchg
dec
adc
clc
inc
lods
into
arpl
push
cmp
fistl
jnp
imul
fdivrs
lret
pusha
popa
xchg
imul
popf
mov
inc
int
add
cmp
push
cmp
pop
push
and
dec
jmp
out
dec
mov
push
push
lret
dec
es
enter
jbe,pn
xor
cmpsl
push
ss
xorl
sub
push
and
test
sti
mov
pop
lods
jge
dec
iret
arpl
shl
mov
out
push
xchg
or
push
pop
jl
or
jecxz
insb
mov
or
cmp
pusha
insl
push
mov
adc
hlt
push
pop
repnz
out
mov
xchg
repz
or
int
sar
and
aas
jmp
mov
sahf
in
mov
fs
ss
cmp
cli
inc
sbb
xchg
pop
in
pop
outsl
xchg
push
sub
cld
pop
dec
adc
mov
pop
xchg
push
lock
pop
lea
jo
xor
mov
xchg
add
push
stos
add
in
lods
shrb
icebp
sbb
mov
xlat
fisttpll
xchg
les
sbb
insl
or
xor
imul
dec
ret
xor
push
leave
fdivrl
xchg
jecxz
cwtl
xor
mov
std
inc
pop
mov
orb
cwtl
int3
imul
cmp
aas
fbstp
sahf
xlat
cmp
dec
pop
sbb
repnz
cmpsl
or
enter
adc
jnp
ds
mov
sbb
cwtl
and
add
pushw
insl
lret
test
lods
xor
paddq
adc
mov
or
add
add
addb
out
jecxz
add
push
sar
into
jle
stos
pop
sub
int3
lock
setge
xchg
jmp
into
call
orb
fcom
xchg
sub
adc
in
push
mov
outsl
and
mov
cmp
adcl
mov
cmp
mov
int3
lret
shl
aaa
jne
pop
test
inc
in
pop
fisubl
sub
shrl
outsb
sub
cmp
pushf
cmp
sbb
jp
js
iret
or
cli
mov
stc
mov
lea
outsl
mov
push
push
push
sub
das
adc
sbb
out
push
lahf
imul
mov
mov
daa
mov
xchg
xchg
push
fisubs
pop
inc
xchg
inc
dec
mov
js
cs
sbb
jp
clc
adc
test
pop
inc
adc
nop
jl
dec
push
rcr
dec
ljmp
jns
adc
mov
fistpll
dec
sbb
adc
dec
jle
mov
inc
outsb
inc
xchg
sti
push
pop
xor
popa
in
add
mov
in
lea
mov
out
orl
aas
es
xchg
mov
adc
xchg
cmc
mov
outsb
lcall
pop
iret
lods
xor
mov
dec
cmp
sbb
sbb
dec
mov
movsl
shll
mov
xchg
push
cmp
pop
in
je
outsb
insb
inc
fwait
int
jo
push
sub
scas
cli
es
out
clc
in
jb
xchg
not
mov
insl
data16
cwtl
cli
xchg
jge
mov
and
dec
dec
in
add
pop
jae
in
xchg
xchg
outsl
repz
sbb
mov
fimuls
inc
outsl
repnz
pop
push
xchg
push
mov
sub
push
andb
adc
mov
mov
in
mov
mov
out
inc
cmp
cwtl
aad
dec
cmpsb
daa
or
pushf
dec
hlt
pusha
mov
cmpb
mov
sti
jae
or
cmc
and
shlb
cmpsl
pop
xor
push
cwtl
loop
jb
jl
ljmp
mov
shll
jbe
pusha
or
xor
sbb
daa
inc
push
movsb
loop
dec
mov
pop
aas
pop
xchg
or
scas
inc
dec
xor
add
inc
sub
js
jp
push
sub
xchg
or
fsubrl
jl
aad
std
mov
inc
xor
bound
lahf
rol
sbbb
adc
mov
nop
ss
test
jl
pop
aaa
aaa
and
roll
loope
les
call
cmpsb
cmc
cld
insl
aas
inc
adc
fisubs
jae
pop
scas
dec
iret
mov
adc
addr16
add
cmp
les
jne
sbbb
push
mov
loop
or
imul
aad
pop
sub
ja
jo
ret
adc
scas
push
das
inc
cmp
lcall
js
mov
stos
repnz
iret
mov
and
scas
jmp
rorl
sub
popf
cmp
mov
in
arpl
lods
xchg
dec
fnstenv
lods
cmp
pop
mov
andb
lcall
scas
jmp
adcb
outsl
cmc
and
out
mov
jo
fwait
inc
dec
xor
jmp
repnz
add
mov
push
lahf
mov
inc
orl
sti
dec
xchg
push
leave
lea
aad
mov
cli
pusha
jg
jo
push
dec
lods
xchg
add
mov
loopne
adc
ja
push
inc
mov
add
push
sbb
xchg
pop
inc
dec
decb
data16
mov
dec
push
and
sub
cmc
push
aas
jno
inc
in
push
sub
add
inc
inc
xchg
cmp
sub
xchg
xchg
dec
mov
bnd
xchg
test
mov
dec
cmpsl
out
notb
xor
sub
data16
jbe
aad
jl
cmc
and
scas
notb
cli
int
push
mov
dec
push
dec
sbb
in
popa
test
fidivrs
int3
loope
pop
dec
or
mov
sub
dec
push
or
dec
push
push
mov
icebp
jb
mov
inc
daa
cmp
jle
mov
jecxz
cmp
mov
andl
pushf
out
imul
shll
xor
fistl
sub
sub
aas
filds
in
xchg
cmp
lds
fwait
dec
sub
mov
and
push
lret
rclb
sub
fwait
inc
or
scas
mov
jecxz
aas
sbb
and
or
das
jle
push
sti
shl
and
mov
fcmovnb
jnp
add
xor
push
cmp
mov
sbb
test
out
adcl
sub
push
int3
inc
inc
mov
loop
insb
divb
jbe
insl
push
movsb
push
mov
jecxz
dec
jl
pop
jle
andb
arpl
out
clc
lods
mov
xchg
loop
std
sub
ret
xchg
xchg
addr16
mov
shlb
aas
aad
add
mov
pop
adc
roll
dec
int3
ja
mov
dec
inc
adc
shll
addr16
in
imul
mull
out
xchg
inc
les
je
stos
cmc
lret
lcall
addr16
repz
add
mov
inc
mov
mov
repnz
aam
je
inc
orb
pop
in
imul
into
mov
mov
es
cld
adc
imul
mov
pop
or
test
and
in
test
shll
in
jb
loop
test
leave
movsl
lahf
sahf
lods
and
xchg
mov
es
fisubs
arpl
nop
addr16
cmp
std
in
cmc
call
and
subb
insb
add
ret
xchg
xchg
leave
imul
dec
mulb
inc
fcmovb
fwait
cmp
jne
pop
sbb
jp
or
cmc
mov
mov
or
push
adc
insb
data16
lahf
loop
xor
sub
mov
stos
pop
jne
cltd
push
fwait
sbb
loope
stos
ret
pop
inc
inc
cmp
jp
adcb
rcrb
mov
mov
ss
jne
push
inc
imull
leavew
stc
aas
clc
xchg
push
add
fs
mov
add
sbb
inc
mov
or
es
icebp
sahf
sbb
and
push
imul
scas
mov
or
fbld
pop
lds
push
jle
mov
and
movsb
adc
idivb
scas
movd
or
fcmovu
lods
add
mov
arpl
and
in
ds
and
push
out
pop
scas
repnz
outsb
inc
rolb
cmc
mov
call
jae
push
mov
lea
movsl
loop
inc
aad
and
jb
push
fs
cmp
adc
dec
mov
or
push
std
jae
dec
add
inc
dec
inc
outsb
inc
xor
movsl
push
cmp
push
pop
cld
clc
lods
cmp
add
adc
incb
adc
push
sbb
push
aad
cmp
adc
fmul
dec
rcrb
add
jge
pop
sbb
sub
pop
mov
adc
jg
xor
cs
dec
fucomip
pop
xor
sbb
and
push
and
adc
rcrl
sbb
push
nopl
ret
repnz
xor
xchg
fldl
adc
test
ss
jno
stos
or
dec
call
jp
ss
mov
mov
and
fldt
fldcw
loope
pop
stc
lods
xchg
shl
cmp
mov
loopne
mov
push
stos
mov
clc
sar
jnp
xchg
stos
aam
push
add
xchg
in
xor
and
ljmp
stos
jge
lret
cmp
scas
xchg
into
cmp
mov
nop
inc
mov
cmp
daa
cs
repz
and
pop
lds
dec
out
scas
repz
mov
out
es
jns
inc
or
pop
and
arpl
xor
div
pop
aaa
dec
repz
add
mov
fildll
outsb
or
cltd
stc
fwait
stc
pop
adc
ds
add
insb
aad
jo
and
lahf
cmp
fisubrs
jmp
into
and
xchg
inc
jle
jbe
jne
inc
push
shr
shlb
loope
loop
jg
and
in
insb
xor
mov
xchg
mov
mov
cmp
stc
arpl
cmpsb
and
int
jecxz
insl
addl
jne
insb
inc
into
and
adc
pop
int
push
orl
into
ss
in
dec
lahf
repz
out
pop
popf
push
xchg
and
aad
bound
scas
lock
pop
ret
jb
mov
sar
sub
xor
jbe
or
mov
testl
sbb
pop
dec
imul
push
xorl
leave
dec
and
xor
loope
add
cwtl
cmp
fistps
pusha
sbb
enter
xchg
repz
test
fnstcw
jbe
mov
xchg
leave
pop
adc
fiadds
das
fptan
fisubl
sub
cs
test
mov
movsb
subb
push
aam
mov
das
mov
aam
jp
push
inc
loop
clc
adc
mov
mov
push
and
cmp
mov
enter
insl
ja
xor
mov
arpl
adc
popf
aad
dec
sub
test
lcall
push
loope
inc
outsb
in
xchg
sarb
mov
shll
rcll
loop
jmp
dec
pop
loop
lods
mov
aad
orl
loopne
dec
push
dec
aam
cmp
mov
je
mov
sahf
out
loop
data16
les
xchg
jmp
or
insb
mov
ficoms
repnz
lea
inc
or
add
call
or
sar
loope
add
inc
pop
jg
aas
add
imul
pop
xchg
call
xor
inc
sbb
dec
add
pop
mov
or
mov
and
push
in
pop
rcrl
out
xor
cli
jl
push
movsl
sti
je
mov
ret
subl
xchg
cmp
push
and
push
add
jbe
inc
xchg
outsb
out
mov
mov
cld
mov
call
mov
xchg
mov
adc
jae
xchg
xor
lcall
sub
and
icebp
adc
dec
mov
push
push
sub
pop
dec
xor
sahf
or
cwtl
jne
stc
shrb
in
aas
cmc
cmpsb
sbb
add
push
pushf
in
cwtl
ret
sbb
push
cmp
cmp
lret
fbstp
dec
dec
cwtl
sbb
pop
jb
mov
cmpsl
fsubrl
ljmp
mov
pop
dec
fcmovnu
in
inc
and
jns
fs
cs
adc
daa
xchg
and
sub
sbb
inc
mov
xchg
mov
movsb
xor
shl
jno
jno
cmp
scas
mov
jg
test
xlat
cmc
inc
cmp
jbe
push
loope
xor
stc
add
je
inc
mov
lods
adc
sbb
aad
shlb
ret
cwtl
lret
sbb
sahf
mov
daa
outsb
ror
hlt
das
adc
fistl
fdivr
mov
or
inc
jecxz
mov
mov
sbb
imul
inc
push
addl
jmp
push
jge
stos
sub
add
pop
test
mov
mov
lds
clc
push
dec
in
mov
test
stos
sbb
insl
add
lea
fsubrs
int
or
mov
xchg
fwait
push
sti
sti
mov
or
int3
mov
or
jg
or
sub
adc
cmp
xchg
scas
lock
ljmp
enter
leave
jno
repnz
fst
adcl
mov
fdivl
cmp
sub
leave
dec
pop
sti
inc
int3
jg
cmp
cmpsl
jmp
mov
dec
inc
scas
pusha
push
roll
test
data16
outsl
fwait
pushf
pusha
fwait
loopne
sbb
outsb
cld
jecxz
outsl
cmp
jae
dec
dec
sarl
aaa
in
shlb
sub
push
jae
xlat
push
lret
cmp
bndstx
push
in
push
ret
cmpsl
push
aad
data16
push
and
mov
and
stc
mov
das
or
sub
pop
and
pop
sub
or
jbe
or
cmp
setge
or
push
push
jnp
lret
xor
mov
cmpsl
sub
xchg
adc
jg
xor
push
andb
cli
mov
insb
stos
lahf
movsb
addr16
fcompl
movsl
das
adc
call
adc
mov
xchg
loopne
pop
call
push
inc
lods
out
add
cli
inc
mov
aam
cmpsl
push
stc
mov
jmp
fucom
jp
mov
adc
mov
outsb
xchg
pop
dec
cs
dec
sub
inc
and
sbb
in
je
dec
nop
xor
rclb
enter
sbb
std
dec
and
call
lock
push
push
fstpl
roll
jmp
adc
in
lods
sub
or
cwtl
mov
sbb
pop
sbb
jns
pop
sub
and
xor
fstps
es
dec
add
jle
sub
mov
pop
fsincos
xor
jge
adc
mov
jmp
pop
sub
rol
pop
sar
shrb
rolb
mov
cmp
in
xchg
pop
rcrb
mov
mov
stos
fnstcw
addl
in
enter
test
jmp
jbe
sbb
xchg
sarl
lahf
xor
inc
movsb
mov
xor
out
call
pop
mov
stos
sub
push
mov
out
gs
adc
mov
push
push
jmp
popf
push
andl
pop
outsb
cmp
push
int3
sbb
xor
cmp
push
pop
loope
or
ret
lods
ds
lcall
sar
icebp
hlt
sti
add
jp
jbe
adc
repnz
loopne
adc
andb
arpl
sbb
pop
jns
sbb
inc
push
sarl
inc
cmp
mov
sbb
sub
sbb
int3
fisttps
cmp
fdivl
push
cmp
sbb
in
imul
out
scas
mov
mov
mov
testb
mov
hlt
idivl
lahf
aam
and
aam
xchg
lds
mov
ljmp
fwait
xor
sbb
dec
imul
inc
sub
shr
pop
push
sbb
sub
ret
fmull
ret
xor
add
pop
jecxz
or
pop
test
ljmp
xlat
inc
push
or
and
inc
mov
and
mov
hlt
loop
push
ljmp
sub
or
pop
and
loope
fdivr
cmc
sarb
and
xchg
adc
das
stc
ja
add
sbb
repnz
loopne
call
pop
lret
jl
in
cmp
popf
iret
dec
fisubl
fsts
pop
stos
fistpl
sbb
orl
in
out
out
dec
jb
lahf
xchg
rolb
pop
jl
ljmp
adc
outsl
jne
shl
pop
or
sarb
ret
and
out
leave
mov
testl
add
pop
cld
cmpsl
cmp
adc
inc
fisttpll
fcmovnbe
sarb
add
add
cmp
cmp
lea
sbb
cmp
jg
and
ss
test
prefetch
orl
xchg
aas
cmp
notl
subl
es
add
fistl
sub
push
mov
mov
mov
jb
push
xchg
inc
fadd
test
popa
jnp
ss
and
and
mov
push
lds
fisubs
lds
fwait
jp
lahf
and
jle
mov
and
sub
cmp
xchg
inc
add
scas
insb
mov
dec
popa
sbb
pop
cmp
add
xchg
fistl
shl
es
ret
mull
scas
cmp
aaa
dec
push
mov
pop
sarl
or
outsb
fildl
lret
xlat
push
dec
mov
fcompl
cmp
rcl
xor
cld
iret
sbb
ret
mov
or
pusha
fidivrl
pop
cld
ja
std
lods
and
xchg
xor
in
mov
adc
test
mov
dec
mov
lods
jns
jns
into
and
mov
bound
lea
ret
out
push
sbb
loopne
scas
mov
or
mov
add
enter
enter
adc
pusha
arpl
mov
mov
lds
pop
mov
movsb
mov
popa
aam
loope
fsubrs
mov
mov
out
fbld
push
push
adc
imul
mov
inc
addb
rcll
adc
jnp
cmp
ficoml
xor
outsb
cs
clc
fisttpl
mov
mov
shll
ds
pop
cmp
adc
fldenv
in
sub
rorl
cs
adc
popa
sub
fdivl
pusha
adc
cmp
int3
dec
ds
dec
and
in
adc
add
or
xor
mov
repnz
mov
push
sbb
push
pop
rcl
inc
mov
loopne
dec
aam
call
jl
lahf
cmp
xor
jne
es
mov
stos
cmp
inc
adc
lret
loope
iret
pushf
dec
sahf
inc
into
push
stc
iret
jle
rcll
mov
mov
cmp
mov
fnstenv
jae
push
lods
adc
dec
shr
arpl
lret
out
mov
dec
lds
ret
popa
outsl
test
pop
out
jae
orb
in
aad
inc
lea
xchg
imul
xchg
in
in
mov
sbb
pop
pusha
je
dec
mov
and
out
out
cmc
cmpsl
pop
inc
imul
xor
push
mov
testl
mov
jbe
insl
inc
push
xchg
jle
inc
mov
pop
repz
push
cmp
jl
fs
push
sub
add
xchg
out
add
fidivl
out
daa
test
out
cli
push
xchg
jle
int
icebp
arpl
imul
inc
xchg
pop
xor
daa
enter
cmp
and
xchg
int3
dec
cld
cmp
adc
scas
int3
push
out
and
pusha
push
mov
ss
and
fistl
sub
xchg
dec
cmp
dec
insb
enter
xor
aaa
rcr
inc
sbb
fimull
bound
insb
xchg
pop
jle
lcall
inc
ljmp
mov
push
fstpt
in
xchg
cwtl
inc
inc
lret
hlt
dec
mov
xchg
mov
aad
lret
or
dec
cli
fs
dec
xlat
inc
push
std
inc
cmc
mov
mov
ds
vmulps
mov
movsb
mov
aas
sub
pop
test
and
mov
pop
nop
adc
xchg
fs
dec
mov
ret
test
push
add
and
mov
test
mov
fisttpl
fwait
xor
push
adc
pop
mov
cmc
repnz
fmul
add
call
jle
ret
scas
sub
out
insb
rorb
add
fwait
inc
push
fs
adc
xor
cli
sub
insl
lcall
cmpsb
dec
mov
mov
std
repz
fsubrs
cli
fdivs
dec
inc
sarl
jp
sti
and
mov
mov
or
dec
les
pop
cmpsl
sub
jns
mov
arpl
sbb
lea
scas
iret
jbe
lods
cmp
add
inc
insl
mov
and
mov
cld
pop
and
pop
and
mov
int3
jg
shrb
mov
push
pop
mov
aaa
or
mov
push
jecxz
int3
test
and
push
xchg
lods
imul
adc
xor
cmp
js
jno
sbb
push
sub
mov
dec
push
inc
cli
outsb
cmp
scas
add
call
jecxz
jl
push
call
xor
je
inc
lret
push
in
xchg
enter
push
cmp
int
mov
and
test
imul
adc
mov
test
push
cld
popa
inc
jns
mov
sbb
dec
adc
fldenv
xor
xor
fs
data16
and
mov
pop
adc
fcomps
or
mov
mov
lods
mov
xor
sub
cs
pop
push
out
daa
cmc
rcrb
mov
adc
rol
cmp
leave
sbb
int
push
test
adc
lods
xor
sbb
nop
movsl
das
sbb
mov
roll
out
mov
test
flds
dec
out
jg
cmpsb
mov
push
lret
popa
adc
lret
imul
insb
scas
push
xchg
fwait
jno
loope
inc
andl
add
pop
stc
adc
in
adc
inc
or
jg
int
mov
jb
dec
data16
scas
dec
adc
int3
loopne
aad
outsb
jns
xor
test
mov
sbb
sub
lret
and
movsl
rorb
fisttpl
imul
jnp
cmpsl
ror
cli
out
adc
jne
or
and
js
popf
bound
cmp
popf
add
test
push
pop
lock
dec
imul
lahf
jle
inc
push
iret
cmc
pop
mov
jecxz
ja
jp
inc
addr16
fcoml
and
adc
sub
test
mov
fwait
pop
xchg
mov
cltd
adc
shl
pushf
arpl
xor
jnp
sbb
push
cmp
push
xor
rcrl
push
mov
fnstcw
jg
add
cmpsl
cmp
pop
imul
cmp
les
sbb
das
xlat
sar
mov
adc
inc
cmp
mov
out
loope
das
pop
and
push
fmuls
rcll
clc
jmp
pop
fcmovne
xor
adc
stos
cmovge
cmp
and
inc
int
cltd
cwtl
mov
popf
mov
lret
jmp
stc
cmp
mov
incb
insb
adc
add
pop
stc
subb
sahf
and
jo,pt
fcmove
cltd
mov
cmp
sub
xchg
pop
lahf
adc
push
pop
gs
mov
outsb
cltd
pop
inc
pop
cwtl
in
adc
mov
repnz
scas
pop
sub
ficompl
je
imulb
xchg
dec
cmpsl
sbb
popa
arpl
dec
jae
push
pop
and
cmp
sbb
test
push
ss
in
pop
movsl
xchg
les
outsl
dec
mov
iret
and
inc
out
pop
xor
mov
inc
push
shl
divb
sahf
jo
mov
fnsave
xchg
inc
push
cmp
rolb
xchg
testl
xchg
rclb
push
mov
aad
lods
sbb
add
out
sbb
nop
cwtl
xchg
jbe
or
js
cmp
or
push
cltd
mov
imul
out
movb
fistps
mov
and
dec
push
in
loopne
or
mov
mov
pop
jge
jne
adc
cmp
pop
notl
sbb
mov
cltd
lahf
inc
mov
add
inc
shr
in
add
sbb
or
mov
inc
test
aad
imul
mov
xchg
and
or
adcl
mov
push
call
inc
int
jne
scas
dec
pop
mov
lahf
stc
xchg
lcall
push
xchg
scas
sub
std
frstor
fcmovnbe
imul
and
xchg
cld
xor
sbb
inc
sub
jge
insb
sbb
sti
movsl
cli
pop
out
fadds
or
mov
das
sti
xchg
push
mov
loopne
push
mov
es
out
xor
jle
stc
adc
int3
mov
lcall
jo
and
add
inc
push
mov
xchg
xor
xchg
add
in
cmp
mov
arpl
cld
daa
push
inc
out
add
mov
inc
lods
ds
sub
add
sub
jmp
sub
fiaddl
pop
test
xchg
mov
add
cli
xor
arpl
add
aas
movmskps
movsl
fs
test
les
hlt
pop
stos
xor
dec
stc
icebp
adc
mov
js
fsubrs
call
pop
call
leave
loope
adc
jo
dec
dec
out
fdivp
ss
ljmp
sahf
enter
dec
sarb
dec
lahf
push
mov
shll
or
inc
mov
data16
lahf
mov
dec
fimull
adc
cmc
fidivrl
sub
aam
pop
mov
orl
int3
leave
cmpsl
enter
outsl
test
add
imul
inc
add
dec
imul
xlat
outsb
mov
jno
sub
imul
mov
jmp
repz
pop
push
stc
enter
mov
loop
mov
dec
dec
shll
mov
mov
mov
idivb
std
in
out
push
jo
dec
cmp
push
addb
adc
add
and
add
out
into
mov
out
stos
addr16
int3
cmp
sbb
inc
adc
test
pmaxsw
sub
cmpsb
sbb
push
sub
outsl
imul
lea
jge
fsts
mov
rorb
and
push
fwait
outsb
cld
testl
shll
popa
fistps
loope
int3
inc
stos
insb
sub
cmp
std
icebp
xor
xlat
pop
add
or
icebp
ja
pop
inc
sub
pop
in
or
xchg
dec
add
cs
rclb
push
pop
sub
xor
jle
xchg
std
out
add
popa
cmp
test
pushf
pop
mov
xchg
and
faddp
xorl
sbb
dec
xor
cltd
pop
inc
rclb
jb
or
and
ror
push
cmp
jne
shll
aas
movsl
jb
lock
push
xchg
jno
shl
mov
push
lods
pop
aad
push
das
sti
jp
fcmovne
jle
stos
dec
roll
nop
je
cmc
dec
dec
call
pusha
pop
flds
in
adc
inc
icebp
pop
inc
cld
faddp
data16
inc
lds
das
test
sub
dec
xor
jnp
add
cmc
int3
jg
sub
xor
les
jge
repnz
sbb
pop
movsb
stc
xor
lock
and
cmp
dec
add
pushf
xor
mov
mov
les
shr
out
jecxz
cmp
mov
mov
mov
cmp
rdmsr
fs
stc
and
push
mov
push
pop
dec
adc
dec
mov
std
mov
mov
call
pushf
mov
out
mov
and
mov
sub
lret
icebp
mov
pop
cmc
fidivs
mov
push
int
jne
movsb
fisttpl
bndldx
inc
testb
xor
aad
push
mov
jle
jnp
in
jmp
mov
jl
fstpt
sahf
inc
call
stos
pop
add
sti
cltd
mov
ja
mov
das
cmp
mov
repnz
fnstcw
int3
mov
jge
xchg
push
arpl
inc
cmp
sti
inc
inc
ljmp
or
jg
cli
icebp
scas
ficoml
fistpl
and
js
pusha
mov
sub
add
pop
into
rol
sub
test
loop
xchg
push
add
shrl
std
stos
or
sub
js
add
fistpl
cli
js
xlat
jno
mov
lahf
add
loop
loopne
adcb
movsl
xchg
inc
sub
mov
les
mov
pop
jbe
adcb
lds
insl
movsb
inc
rcl
inc
pusha
sbb
leave
dec
sub
testb
dec
ds
jne
ficoml
daa
and
xchg
pop
fsubs
push
xor
pop
lds
cmpsl
inc
minps
lcall
stos
cmpsl
lods
or
shl
pop
fdivrs
sbbl
and
jb
cmp
std
cmc
sub
mov
cs
out
and
dec
jmp
cmpsb
std
cmp
popa
les
std
lahf
sbb
xchg
gs
push
test
nop
outsb
daa
mov
jle
inc
pop
mov
add
pop
xlat
jne
jmp
cmpsb
add
notb
int3
mov
and
sar
das
xchg
jbe
les
inc
ss
scas
pusha
jae
lods
inc
inc
add
les
movw
sbb
and
sub
pop
sub
pop
stc
and
push
pop
lcall
popf
out
in
sub
jnp
or
fcos
pop
xor
inc
mov
ret
cwtl
fcoml
sub
stos
jns
outsl
jmp
insl
jg
aaa
data16
lods
mov
mov
test
aaa
sbb
fadds
mov
mov
not
mov
cmpsl
cli
insl
scas
dec
sub
mov
dec
loopne
cmp
outsl
mov
pop
movsl
jo
or
scas
shlb
mov
mov
je
sahf
icebp
dec
jbe
sub
xchg
or
leave
adc
jg
arpl
mov
or
xchg
add
and
jmp
push
add
jg
push
hlt
inc
test
jns
adc
in
aaa
aas
pop
sub
cmp
pop
out
mov
add
lahf
sbb
mov
and
je
mov
jge
pop
jecxz
mov
xchg
push
outsb
rolb
mov
xor
inc
and
addr16
in
arpl
sub
jg
pop
popa
mov
jo
sub
addr16
jle
push
rorb
pop
repz
lea
test
popa
pop
jge
cltd
iret
adc
mov
or
adc
xor
cld
lret
add
add
xor
xlat
add
lret
add
ret
and
inc
lcall
mov
xor
adc
xchg
dec
xorb
or
or
iret
aaa
xchg
sub
pushf
mov
cmp
inc
test
lods
mov
ret
sub
in
jmp
rcrb
dec
or
add
cmpsb
cmc
testl
or
hlt
xchg
push
or
xor
out
mov
add
sti
rol
js
cmc
pop
stos
addl
divl
and
jno
add
mov
inc
lods
add
sbb
xchg
push
insb
imul
popa
fldt
push
pop
in
or
xchg
mov
sbb
mov
sbb
adc
icebp
stos
mul
sub
cs
in
ljmp
imul
mov
fs
lds
add
repz
rolb
mov
call
sub
mov
sub
add
jmp
out
and
jnp
pop
dec
loope
out
push
jno
cmp
mov
mov
pushf
xor
dec
roll
daa
das
add
xchg
pop
leave
imul
mov
in
cwtl
cmc
std
stos
and
pop
add
lds
rcll
push
insl
je
sbb
loop
testl
jecxz
je
or
mov
add
call
add
das
cmc
into
cmp
pusha
insb
xor
inc
push
ret
incb
or
test
xlat
jnp
cli
out
outsl
call
xchg
and
push
inc
ret
or
pop
divl
insb
sub
add
lds
or
sbb
dec
outsb
imul
arpl
mov
fs
repz
mov
cmp
mov
jo
jb
cmpsb
stos
xchg
sub
into
aam
stos
andl
stc
movsbl
rclb
xchg
xchg
add
dec
fdivl
fidivrs
adc
mov
pop
sbb
idiv
and
mov
sahf
cmp
lret
lods
jmp
lret
adc
popa
and
sbb
dec
sub
inc
add
ss
nop
sub
xchg
insl
push
je
clc
xor
fcomps
mov
pushf
movsl
test
out
pop
rorl
or
push
lods
pop
xchg
inc
mov
sub
dec
scas
mov
int3
fwait
leave
jb
cmp
mov
repnz
adc
loope
jo
sub
scas
or
je
sbb
loopne
cmp
inc
xchg
mov
inc
push
arpl
stos
dec
xchg
fists
loop
cltd
cmpsl
or
fwait
outsb
test
sub
gs
xor
ret
imul
dec
xchg
xchg
mov
lret
movsb
sub
clc
iret
cltd
addr16
ret
imulb
or
outsl
into
cmp
das
cmp
fs
or
call
hlt
test
stos
jae
mov
call
inc
popa
pop
shrb
sub
mov
mov
push
adc
std
jl
cmp
pop
shlb
loope
sbb
push
fidivs
xlat
aam
ret
sti
rcrb
mov
pop
sbb
daa
push
mov
adc
lcall
lret
mov
sub
xor
xchg
sti
mov
cltd
ret
andb
scas
add
ret
pop
cmp
shrb
and
jp
jae
aas
lret
mov
adc
out
push
xchg
or
leave
cld
cmpsb
fwait
ret
mov
loope
mov
push
test
jnp
adc
mov
out
addr16
sub
inc
cmc
sub
fistpl
mov
jno
in
xor
xor
sahf
rcrb
cli
sbb
popf
repz
dec
push
push
and
mov
sub
cmp
sahf
je
in
and
and
sbb
xor
fists
test
std
jns
dec
pop
sub
ja
data16
popf
jbe
xchg
js
repnz
int3
jecxz
xchg
jne
add
mov
ds
cmp
scas
das
xchg
push
sub
jae
pop
cmpsb
mov
mov
sahf
inc
xchg
add
push
adc
mov
xchg
bound
lock
jecxz
or
adc
mov
push
ss
pop
aam
cmc
xorl
push
pop
xor
cld
mov
cmp
sarl
hlt
xor
xchg
lea
add
ja
mov
cmp
cmp
addr16
cmpl
sub
mov
push
adc
cmp
pop
push
stos
mov
jae
dec
fidivl
aad
mov
jo
iretw
pop
fs
sub
aaa
insl
notb
outsb
add
ret
or
or
mov
rorl
aad
call
mov
inc
fisttpl
popf
adc
hlt
test
mov
bound
and
sub
mov
mov
dec
and
lds
mov
mov
push
out
int3
jmp
cmc
xor
dec
test
adc
pop
fdivp
xchg
mov
idivl
pop
push
pop
sbb
push
pmuludq
push
lods
push
incb
mov
sbb
repz
dec
jb
xor
leave
inc
inc
scas
cmpsb
outsb
ret
adc
les
sbb
inc
arpl
les
mov
pop
adc
icebp
mov
mov
sbb
js
sub
test
mov
cwtl
lea
dec
add
aam
test
mov
outsb
mov
push
jae
push
lds
jno
add
or
cmp
mov
outsb
mov
sti
mov
push
cmp
fidivrs
xorl
negl
mov
pop
push
gs
dec
fcomp
inc
add
and
cmpsl
scas
sub
pop
rorl
sbb
mov
push
cmp
mov
shlb
in
mov
rol
inc
jnp
inc
xchg
popf
fcmovnb
sbb
int
add
aad
add
add
xchg
test
xor
jnp
arpl
stc
subl
xor
mov
stos
int3
xchg
xchg
scas
cwtl
mov
shr
pop
sbbl
xchg
aas
lahf
cmpsb
sub
mov
mov
mov
dec
scas
fsubr
mov
enter
push
push
dec
pop
jecxz
in
and
shrl
xchg
imul
pusha
inc
lock
cmp
in
shrb
cmp
dec
jns
out
popa
jmp
inc
iret
cmpsb
xchg
gs
nop
popa
or
fidivl
mov
cmp
jmp
xchg
xchg
cli
in
iret
fistl
inc
mov
xchg
mov
addr16
pop
sbb
lret
mov
push
xchg
popa
mov
mov
mov
xchg
and
mov
mov
pop
call
push
call
inc
insl
imul
outsb
push
mov
movsl
inc
dec
and
lret
idivl
iret
mov
test
sub
out
mov
adc
pop
sahf
aas
sub
iret
leave
mov
mov
data16
cltd
les
jmp
mov
repz
in
push
pop
inc
pop
jg
inc
cmp
in
shlb
pop
mov
push
jns
cli
and
scas
inc
repz
add
or
loopne
add
es
mov
ljmp
jnp
aaa
pop
inc
sarb
push
or
jecxz
lcall
push
mov
mov
cmp
adc
jle
testl
lock
jecxz
stos
ficomps
sub
arpl
data16
clc
nop
add
pop
fisttps
mov
adc
sti
sub
imulb
mov
lea
ljmp
add
stc
sub
mov
rcr
js
cmc
pop
sarb
pushf
push
inc
std
cmpb
insl
push
fimull
popa
insb
fidivs
mov
pop
add
jmp
jne
xchg
lds
cmpsb
movsl
push
test
add
pop
mov
imul
and
rcrb
xor
hlt
xor
testb
or
and
ds
jmp
in
and
imul
adc
dec
ret
lods
sub
cmp
neg
sti
xchg
add
add
jns
ss
adc
jp
out
mov
mov
sbb
inc
daa
jne
mov
xor
xchg
inc
test
ja
lret
xor
dec
adc
sub
add
adc
call
rcr
ljmp
subl
pop
or
mov
jmp
push
sub
xor
inc
or
adc
scas
sub
dec
in
jl
adc
sahf
fmuls
sbb
xor
or
mov
fdivs
inc
outsl
rcl
or
mov
loope
cli
jae
jno
sub
je
jne
and
mov
loope
pop
sub
push
xchg
mov
dec
cwtl
es
ds
outsb
mov
ret
or
pop
cmp
imul
aas
mov
fimuls
fisubs
mov
and
fnstenv
roll
pop
loopne
cli
ret
enter
jns
xchg
xor
dec
xor
cmp
xchg
xorl
pop
xor
icebp
jecxz
outsl
enter
push
or
push
pop
clc
and
notb
adc
pop
testb
idiv
inc
pop
jo
stos
jns
jecxz
or
dec
inc
inc
int
lea
lcall
mov
mov
xor
dec
aaa
cmpb
lods
in
stc
sbb
shr
repz
xor
out
test
fs
push
popf
iret
test
dec
or
adc
xor
insl
mov
pushw
sub
add
push
push
mov
inc
aas
ret
and
in
out
pop
daa
into
sahf
sbb
loopne
lods
xchg
push
bound
or
sub
das
fdivr
push
test
or
fsub
aas
mov
inc
mov
push
fimull
or
pop
mov
mov
mov
push
mov
daa
andb
dec
xchg
call
add
aam
sbb
cmp
inc
loop
int3
hlt
mov
das
adc
in
jae
cmp
and
and
inc
inc
cld
inc
in
in
sub
popf
cmc
mov
cmpsb
pop
dec
scas
mov
mov
adc
in
mov
lea
test
repnz
mov
pop
jno
pop
out
sub
jb
mov
mov
fsubrp
cwtl
dec
fildl
sbb
pop
push
push
adc
subl
push
mov
out
mov
adc
mov
add
sbbb
cmp
pop
jg
jge
jno
fcoml
cmp
push
inc
sub
mov
pop
mov
sbb
mov
xchg
repz
lock
sarl
sub
push
push
out
push
inc
popa
mov
jno
lds
cmpsb
xchg
push
xlat
dec
scas
mov
jecxz
jl
mul
mov
pop
jmp
das
int
mov
jo
cwtl
in
ja
jge
ja
pusha
jle
xchg
shll
cltd
cmp
dec
in
rorl
std
lret
xchg
mov
mov
xchg
xor
das
pop
lods
js
cli
sub
cs
int
pushw
imul
daa
pop
lods
sbbb
jnp
adc
ja
popa
cmp
adc
pushf
mov
mov
and
into
fdivr
mov
dec
pop
pusha
push
dec
data16
mov
mov
sbb
inc
int3
ret
stc
push
je
xchg
lret
inc
jbe
je
in
enter
adcb
and
add
jecxz
cwtl
popf
cli
jae
aas
fimuls
roll
jl
bound
fisttpl
fstpt
xchg
addr16
sbb
stos
movsb
lret
enter
pop
popa
mov
cmpl
sub
lock
sbb
iret
fdivs
out
sbb
push
insl
into
hlt
cltd
repnz
movsl
inc
inc
cltd
repnz
and
imul
in
addr16
mov
mov
jmp
stc
lea
adc
std
xor
repz
mov
outsl
repnz
adc
jg
or
jne
icebp
gs
xor
jmp
and
jne
and
fdivs
xchg
mov
mov
push
mov
sarl
loop
adc
mov
add
sub
inc
test
jle
dec
out
cmpsl
pusha
popf
inc
mov
aaa
shl
scas
jae
roll
xlat
in
out
lock
sbb
lock
xchg
push
mov
rorb
hlt
fst
outsb
adc
mov
stos
xor
cmp
push
mov
cmp
push
xor
push
test
aaa
fsubs
push
movsl
mov
ss
dec
jmp
jp
stc
xchg
cmp
lahf
jge
mov
ret
mov
jo
xchg
icebp
add
mov
push
repz
adc
rolb
adc
loop
enter
inc
cmc
pop
rcrl
int3
fstps
pop
outsb
cmpsl
orb
dec
inc
adc
jle
repnz
jg
and
or
fwait
ret
cmp
out
lahf
jg
mov
movsb
pop
inc
outsb
fmuls
adc
lahf
add
jbe
orl
push
and
aam
cmp
ret
aaa
pop
sahf
adc
jg
mov
mov
jae
loopne
lret
jecxz
sbb
insl
mov
sub
aam
pop
push
and
pusha
and
fildll
or
fs
lret
data16
and
mov
js
ret
shr
repz
ret
add
addr16
and
sub
mov
and
scas
aad
jmp
mov
fdivrs
xor
iret
fidivrl
add
mov
fdivrp
jnp
pop
xor
add
sub
lock
jns
fiadds
adc
scas
xor
pop
loope
xchg
in
sub
ja
ret
cmp
adc
mov
pop
and
insb
mov
mov
mov
inc
js
or
mov
add
test
sbb
lds
in
cmp
cmovp
hlt
aam
dec
cwtl
movb
rorl
cmpl
push
int
icebp
rol
add
xor
fwait
push
clc
cmp
pop
stc
jmp
add
push
push
cmp
cmpsl
sub
inc
mov
xchg
aaa
das
sbb
test
out
inc
mov
int3
adc
std
divl
mov
mov
xor
inc
xor
mov
stc
mov
leave
mov
push
enter
aad
loope
aad
push
arpl
pop
xchg
out
dec
sbb
fwait
pushf
lcall
pop
and
push
pushf
sub
pop
push
fs
movsb
jnp
cmp
mov
sub
cmp
mulb
and
xlat
push
mov
arpl
out
push
lock
jne
sub
shrb
lret
clc
hlt
push
or
fdivrs
cltd
movsl
push
pop
xchg
mov
lods
push
mov
xchg
mov
push
lcall
cli
dec
call
inc
test
test
push
and
int
mov
rcrl
lods
pop
jnp
xor
stc
or
dec
imul
hlt
cld
mov
mov
shrb
nop
popa
mov
xor
xor
fiaddl
popf
sahf
mov
loop
jae
inc
mov
cmc
add
movsl
stc
je
mov
sbb
icebp
jmp
xchg
and
ret
loop
cmp
cmp
jae
xor
arpl
test
mov
lcall
fcoml
push
stos
fnstcw
sbb
or
jo
pushl
in
aas
cmp
repnz
shrl
int
cmovbe
repz
add
stc
push
stc
sub
test
inc
mov
jg
out
push
push
not
or
sbb
test
scas
cmpl
jge
push
insb
mov
pop
fisubrs
mov
paddw
pop
cwtl
jl
jle
mov
mov
aaa
popf
pop
aas
aas
stos
mov
cli
ret
jle
scas
cmp
sub
mov
mov
nop
pop
dec
pop
xchg
subl
add
mov
adc
rorl
sti
ds
movsl
and
std
lahf
sbb
inc
pop
mov
leave
cmc
cmp
cmpl
aas
xchg
mov
mov
dec
pushf
sub
in
mov
out
mov
call
bound
pop
aad
cld
pop
clc
jb
fwait
mov
pusha
jnp
mov
pusha
lret
xchg
push
cmp
cmp
clc
psubusw
outsl
pop
ds
sub
mov
aaa
in
ljmp
cmp
fs
dec
mov
lret
xchg
ja
shlb
pop
outsl
lock
push
shll
sub
pop
fld
or
iret
jne
das
jmp
xor
sub
stc
or
mov
sub
sbb
push
fucomip
leave
xor
jl
ret
cmp
les
mov
pop
pop
push
pop
jno
imul
dec
lret
xchg
push
int
dec
jl
lods
xor
sbb
cmp
dec
push
xlat
jno
jl
cwtl
jne
out
mov
pop
add
aas
lea
lret
inc
sahf
js
mov
outsb
nop
pop
loop
dec
stos
sahf
popf
or
mov
pop
mov
and
inc
cli
addr16
or
in
cs
daa
jmp
inc
push
outsl
out
lret
pop
je
rclb
or
xor
jl
add
sbb
inc
sbb
dec
mov
sbb
mov
cmc
push
aas
xor
push
mov
pcmpgtw
pushl
mov
xchg
lret
or
inc
ficoml
jge
test
or
push
mov
in
cmp
iret
lock
cmpsl
sbb
adc
lret
loope
aam
loopne
lret
sub
lahf
mov
xchg
inc
mov
cmp
push
pop
pop
dec
scas
test
add
int
divb
xchg
jp
push
in
mov
sbb
xor
xchg
fsubl
inc
pop
jno
push
pusha
add
jns
cmpl
mov
jl
cmp
fstps
and
cmp
stos
inc
pop
sub
lret
daa
hlt
lahf
repnz
xchg
setle
xor
mov
shll
or
xchg
adc
push
dec
xchg
and
push
shrl
mov
das
dec
shl
adcl
gs
xor
cmp
jp
inc
sbb
mov
popf
jmp
push
popf
sbb
xlat
push
pop
test
stc
inc
pop
dec
sbb
popf
sbb
enter
in
add
xchg
mov
push
cltd
sbb
outsl
add
xor
icebp
mov
fs
movsl
dec
mov
pop
popf
xchg
push
cmpsb
outsl
pop
push
and
or
addr16
inc
jp
inc
jae
dec
sbb
inc
inc
push
pop
mov
mov
mov
into
je
mov
sub
jae
pushf
push
mov
or
push
dec
or
andb
or
rorb
nop
cmpsl
adc
cmc
add
mov
movsb
sbb
scas
mov
add
popa
mov
loopne
push
mov
dec
xchg
aaa
adc
pop
test
adc
xor
jb
scas
jo
cmpsb
scas
mov
js
sahf
dec
push
or
outsl
fs
xlat
loopne
mov
sbb
stos
jns
xchg
sarl
int
subb
pushf
push
push
ret
data16
add
pushl
rolb
call
push
sub
mov
test
mov
std
xor
dec
adc
test
repnz
out
lods
lgs
ret
jno
sbb
loop
rcll
add
mov
jecxz
push
outsb
pop
add
mov
aaa
dec
pop
mov
ret
jp
lret
adc
int
popf
mov
ja
cmp
cmp
movsl
loop
mov
out
inc
cld
inc
push
pop
rcrl
test
inc
jg
fcmovne
add
iret
lret
jo
cmp
mov
fstpt
lea
mov
cmc
call
or
outsb
sbb
out
xchg
sub
je
push
inc
hlt
lods
and
mov
xor
jae
sahf
std
inc
and
xor
xchg
and
mov
jge
pop
mov
xchg
loopne
fbstp
aaa
pop
ret
mov
push
and
pop
xlat
jmp
test
mov
test
popf
jmp
imul
int3
gs
push
pop
xor
add
xchg
inc
xchg
pop
pop
in
and
cmp
insl
dec
sahf
push
pushf
fsubrl
gs
cmp
cmpsl
movsl
xlat
dec
mov
cmp
call
lret
enter
and
movsb
mov
jp
jns
pop
mov
adc
ret
insb
scas
adc
inc
div
add
push
inc
pop
insl
dec
pop
fisubrl
in
call
out
push
int
mov
jmp
adcb
pop
pop
jne
les
push
mov
pop
mov
test
mov
clc
jno
cld
inc
add
mov
movsb
cmp
orb
inc
cwtl
dec
aam
cmp
mov
mov
pop
std
xchg
dec
rcl
fwait
xorl
fisubrl
inc
mov
fldcw
adc
xchg
mov
push
addb
sbb
sub
sti
mov
popa
fs
sub
je
or
and
scas
adc
sarb
jbe
cmp
stos
sbb
fxsave
xor
inc
or
inc
adc
xchg
mov
mov
into
cmpl
xor
ret
lock
xchg
xor
inc
mov
inc
mov
sbb
ret
xor
shlb
mov
dec
imul
mov
out
shrl
in
lret
add
popf
mul
xchg
pop
cmp
fs
push
dec
push
aaa
xchg
paddq
sbb
fs
mov
jecxz
loop
aas
hlt
ss
ljmp
jp
fs
in
add
loope
fnstcw
scas
or
aad
stc
test
mov
xchg
enter
repnz
jo
adc
push
push
aas
mov
jg
ret
rorb
and
lds
test
cmp
jnp
fwait
in
shlb
inc
idivl
pusha
mov
push
outsl
imul
aad
in
cltd
mov
lock
lret
adc
out
movsb
ljmp
push
jge
inc
push
imul
je
mov
and
pop
jp
loope
xor
lds
out
and
ret
inc
mov
lret
push
sti
into
mov
in
push
and
bound
aam
adc
inc
fsts
and
mov
loope
pushf
jg
ret
in
sub
scas
cli
dec
inc
cmp
lods
nop
inc
lods
add
adc
cmp
cs
mov
push
ret
xchg
repnz
mov
inc
push
adc
push
pop
or
hlt
arpl
inc
and
mov
shrb
xor
out
add
jno
test
call
out
mov
jecxz
jo
add
push
je
cld
pop
ret
pop
mov
xlat
mov
in
jnp
xchg
cs
cmpb
dec
shll
ret
mov
mov
mov
pop
inc
mov
push
inc
mov
je
xor
sub
mov
sti
xadd
loope
sahf
mov
or
pop
outsl
mov
add
sub
in
pop
lods
pop
inc
xchg
lcall
pop
mov
gs
bound
andl
outsb
xor
scas
leave
sub
jbe
mov
mov
mov
nop
xor
icebp
and
es
fistps
mov
negb
sti
push
outsl
xor
lods
push
gs
lock
jg
jns
enter
pop
jmp
cmp
sub
rcll
dec
fdiv
mov
lret
sub
sub
and
rolb
dec
ret
pop
repnz
fiaddl
mov
xchg
mov
fs
sub
bound
inc
nop
hlt
cmp
lcall
fnstenv
mov
jo
int3
imul
mov
rcrl
ficompl
movsb
in
leave
pop
push
out
add
cmpsb
out
jmp
mov
orl
xor
je
arpl
jecxz
and
sbb
inc
sub
mov
jae
repz
gs
cs
in
cmpsl
insb
in
xchg
xchg
sub
jge
pusha
xchg
xchg
divps
scas
mov
dec
add
dec
cmp
inc
xor
xchg
iret
mov
insb
add
pop
inc
std
inc
lret
sub
fimull
add
fisubrs
aad
movb
pop
incl
jbe
cmp
ror
adc
je
adc
popf
or
dec
and
pop
bound
movsl
andb
inc
pushf
stos
nop
cld
movsb
and
dec
sub
or
rcrb
sbb
mov
jg
sub
aam
flds
push
mov
jg
mov
pop
mov
insl
inc
stos
or
or
sarb
dec
inc
add
pop
push
pop
andl
mov
aad
jb
pop
cmp
or
inc
mov
adc
mov
idivb
loop
out
push
dec
sbb
cmpsl
xchg
test
mov
add
mov
test
pushf
sar
add
cld
mov
cmp
xor
lock
and
sub
pusha
stos
mov
int
ret
mov
add
out
repnz
mov
test
xchg
insl
push
cmp
sbb
push
sti
out
dec
add
stc
xchg
gs
pop
or
fldl
frstor
das
or
sbb
adc
add
jmp
je
dec
adc
jge
sbb
dec
shlb
loop
dec
out
imul
xor
ss
sub
xchg
adc
mov
sub
out
cmpl
loop
mov
dec
pop
jae
imul
dec
push
mov
xchg
hlt
xor
and
mov
cltd
mov
mov
inc
mov
std
fwait
hlt
or
hlt
push
ds
mov
lret
mov
xor
out
inc
cmp
cmc
shlb
pushf
or
fmuls
shll
dec
inc
in
roll
out
insl
xchg
jle
cld
sbb
pmaddwd
das
int3
fucomi
xor
jno,pn
push
scas
sbb
mov
mov
ja
pop
inc
push
outsb
jle
sub
jo
js
xchg
inc
mov
andb
xor
test
xor
insb
dec
movsl
xchg
int3
xchg
adc
pop
dec
or
sub
aas
shll
daa
popa
xchg
scas
stos
push
or
jnp
std
dec
ret
leave
push
leave
in
sarb
fiaddl
out
adc
shl
cld
cld
fxrstor
out
lahf
sub
mov
inc
push
mov
hlt
repz
movl
clc
xchg
insb
xchg
mov
call
xor
ljmp
dec
imul
inc
lds
shrb
fldt
mov
jbe
loopne
into
xor
sub
lds
ret
pop
aam
fcoms
es
sub
test
inc
in
sbb
sbb
es
ret
add
in
pop
push
das
gs
inc
pop
cmpsb
movb
xor
flds
ret
rorl
inc
jae
repnz
cmpl
pop
scas
inc
xchg
int
cmp
orl
mov
inc
inc
jmp
inc
add
sub
adc
js
leave
jg
inc
jbe
sub
mov
out
ja
mov
inc
sub
gs
test
hlt
adc
imul
ret
adc
inc
into
jg
sub
rep
andl
test
rcrl
shrb
aam
in
pusha
mov
inc
mov
add
sbb
enter
shlb
mov
push
subb
repz
xor
out
subb
jae
or
fisttps
icebp
nop
movsl
mov
pusha
lds
daa
repnz
xchg
cmp
xchg
mov
lret
sahf
mov
mov
push
aad
and
popa
aas
xchg
fsubs
ucomiss
neg
add
nop
cmp
repz
xorl
and
jmp
mov
and
pop
mov
aas
push
push
pop
fdivrl
lcall
lahf
fs
scas
dec
mov
cwtl
pop
mov
add
loopne
add
and
push
and
xchg
popa
shlb
aad
adc
aaa
push
xor
sbb
arpl
xor
mov
pop
mov
and
and
mov
jbe
rorl
pop
xor
aad
into
pop
and
cmp
test
divb
ljmp
scas
sub
sbb
push
hlt
cld
fistpl
mov
cld
push
cmp
orb
mov
sub
mov
jnp
lock
add
popf
les
jmp
cld
add
loop
int
fcmovnb
mov
in
adc
fidivl
cltd
das
data16
shrl
xor
adc
sbb
pop
dec
sub
xchg
sbbl
stc
sub
inc
fistl
dec
inc
xchg
push
xorl
mov
xchg
sbb
hlt
xor
incl
pushf
sbb
mov
adc
push
cmp
call
repnz
insl
dec
xchg
mov
in
stos
jmp
scas
lock
add
lds
imul
inc
mov
clc
mov
cli
adc
push
add
out
nop
lea
in
in
jmp
push
out
bound
test
je
sbb
mov
cmp
and
out
test
jmp
cmp
pusha
call
mov
cmp
push
lcall
cmp
jne
add
loop
add
jo
lods
andb
inc
outsb
inc
in
repz
and
aas
and
inc
xchg
push
loope
cmc
cld
je
mov
inc
push
xchg
inc
popf
and
shrb
dec
test
imul
pop
xchg
sbb
inc
inc
inc
mov
jp
pop
jno
lret
int
mov
sahf
sbb
lds
je
add
lods
jb
and
sbb
add
xchg
inc
addb
dec
stos
in
pop
or
dec
daa
in
sbb
loope
dec
test
mov
enter
lahf
sub
imul
fmul
jae
push
sbbb
jmp
test
dec
add
test
lea
cmovbe
xchg
jo
xor
cmpsb
push
outsl
dec
sbbb
sub
test
insb
jne
insb
inc
dec
dec
fisubrs
mov
xor
or
sti
sbb
jno
jo
cmp
lods
cmpsb
subps
fildll
push
mov
es
mov
adc
insl
lds
mov
shll
adc
enter
dec
es
ffree
jns
sub
cltd
mov
pop
jl
test
mov
jp
xchg
ds
mov
jno
adc
roll
shlb
idivl
adc
cli
sub
sbb
popa
mov
dec
mov
xchg
or
mov
arpl
sub
add
jb
add
in
mov
fdivrl
dec
inc
xor
ret
and
inc
mov
je
mov
testl
out
pop
pop
mov
mov
in
iret
mov
pop
xchg
mov
mov
int3
rcr
and
and
lret
fildl
inc
aam
ss
pop
jno
jb
jecxz
mov
jnp
jbe
cs
into
xor
jle
movsl
pop
cmp
sub
std
sbb
mov
jo
pop
mov
sub
nop
mov
and
sub
push
adc
movsl
mov
int
sub
mov
cmpl
rcr
mov
mov
int3
adc
movsl
test
out
pop
std
ret
bound
mov
add
andb
call
xor
sub
and
mov
and
jl
mov
in
cwtl
sahf
loopne
cmp
ljmp
jp
aam
dec
je
orb
xchg
cs
in
xchg
gs
and
repz
jp
dec
and
repz
pop
repz
mov
gs
sub
mov
adc
cmpsb
inc
pop
sub
in
ret
push
in
stos
stos
mov
mov
loope,pn
and
dec
insl
xor
stc
fidivs
rcrl
jbe
xchg
mov
sub
fcomps
rorb
pop
dec
lret
adc
lret
mov
fbstp
push
sti
xchg
jmp
lods
daa
xor
sub
outsb
insl
xor
subb
cli
xchg
pusha
mov
repz
adc
jnp
packsswb
outsb
mov
subl
ss
iret
jp
dec
fldl
cmp
adc
nop
xchg
jle
in
lods
add
cmpsl
imul
loope
mov
and
sub
testb
rolb
hlt
enter
lret
xchg
les
or
aaa
add
pop
xor
mov
pop
lahf
mov
sub
stc
out
sti
jmp
xchg
addr16
cmc
and
cs
sahf
rclb
lcall
jle
sub
xchg
xor
std
sbb
sbb
jae
movsl
idivl
cld
insb
mov
mov
out
lea
dec
inc
stos
mov
scas
fidivrl
in
mov
add
out
adc
pop
mov
push
push
clc
stc
rol
and
jae
sub
mov
mov
inc
cmp
mov
mov
mov
in
popl
enter
out
dec
sub
jecxz
fstpt
fwait
adc
inc
sahf
push
pushf
xor
xchg
mov
fs
fldt
mov
jge
jp
mov
xor
mov
mov
jne
adc
pop
xchg
fdivr
loopne
mov
js
jp
jno
sahf
jae
cmp
ret
fistps
repnz
pop
or
in
loop
and
pop
xchg
mov
xor
subb
sti
int3
mov
inc
insl
mov
dec
sbb
and
xchg
fstps
jp
std
inc
aaa
nopl
dec
xchg
insb
inc
mov
mov
in
ja
scas
mov
stos
ja
jge
mov
inc
por
sbb
addr16
inc
nop
in
xlat
jg
or
ret
cmp
sbb
sbb
dec
push
xorl
adc
dec
dec
pop
outsb
pop
stc
jne
pop
cmpsl
in
scas
push
es
fistps
cmc
stos
lret
cmp
daa
popa
jno
dec
lock
sub
nop
inc
mov
mov
lret
xchg
loop
ret
pop
int3
push
rorl
lahf
into
dec
sarl
jg
push
jle
push
push
lock
insl
push
scas
dec
sbb
addl
aam
sbb
notl
xchg
xor
cmpsl
aaa
dec
xor
dec
jle
ja,pt
cmp
cmp
mov
sub
fidivrs
sti
in
sub
in
loope
or
sub
dec
sub
push
cmp
push
dec
rcr
cltd
scas
movsl
and
or
sub
sub
subb
fscale
or
in
int
div
out
push
es
arpl
repnz
out
inc
pop
push
outsb
test
loope
rcrl
pop
push
sub
xchg
sub
mov
mov
add
xor
mov
xor
and
cltd
jns
or
leave
pop
and
in
add
loope
inc
push
fwait
outsb
cmc
test
out
outsl
test
loope
push
nop
dec
js
sbb
jnp
sub
mov
adc
jge
movsb
pop
lret
repz
mov
lret
lods
jl
push
loope
xchg
lahf
pop
cmp
pop
outsl
call
or
pop
inc
iret
fwait
and
fmulp
test
add
jl
nop
pop
or
adcb
cmc
push
or
mov
std
cmp
stos
pop
test
dec
imul
sahf
mov
std
push
or
and
jmp
sbb
jns
cmpl
push
out
adc
stos
and
push
jno
sti
lods
or
lds
int
mov
or
cli
inc
cmpsl
sahf
mov
test
jmp
xchg
jle
pop
mov
xor
int3
cmp
cmc
rcrb
sub
int
sbb
sti
imul
inc
lods
sbb
mov
pop
inc
imul
inc
inc
in
pop
xchg
xor
push
sub
xchg
fs
xchg
inc
add
lcall
add
adc
shll
hlt
jbe
mov
pop
lcall
push
mov
jmp
jl
push
jle
iret
lret
mov
and
push
scas
xchg
loope
aaa
inc
sub
xchg
sbb
test
stos
xchg
or
fidivrs
fwait
push
xlat
sahf
out
and
je
xchg
sbb
inc
push
jg
jl
inc
orl
out
cmp
jg
dec
push
or
dec
and
pop
sbb
fsubl
pop
sbb
xchg
mov
mov
sub
add
push
mov
jecxz
mov
lds
ficoms
sbb
mov
sub
and
mov
xchg
fstpl
inc
mov
sub
sti
dec
jbe
lret
call
adc
ret
rorb
iret
cld
sbb
aaa
mov
adc
repnz
cmpsl
loope
cwtl
loop
test
rclb
mov
rolb
ja
jno
mov
scas
sub
cmp
leave
sub
scas
pop
int3
fidivl
loop
rol
sub
push
fadds
aad
mov
push
fsubl
inc
xchg
loop
dec
adc
pop
lret
neg
enter
stos
arpl
in
add
dec
inc
stos
dec
jno
mov
std
aam
popf
mov
lods
pop
mov
sbb
aaa
cmc
jns
mov
cmp
shrl
mov
xchg
xchg
xchg
dec
xchg
mov
xchg
je
shlb
js
cli
daa
int3
lret
negl
out
jle
xlat
addr16
mov
div
mov
pushf
jb
inc
xor
jo
adc
sbb
mov
sub
mov
enter
test
xchg
sub
mov
pop
push
adc
mov
sub
or
cmpsl
sbb
cmp
arpl
repnz
pop
cmp
or
sbbl
cmc
stos
outsb
lock
xchg
popa
mov
sub
mov
sbb
pop
negb
and
pushf
daa
xchg
test
and
cmp
js
cmc
push
jmp
shll
mov
repz
add
mov
xor
cmp
adc
jb
or
je
jnp
outsl
inc
iret
aad
dec
adc
push
jae
es
sub
fildll
pushf
movsl
or
aas
mov
ret
push
and
fsubrs
mov
and
adc
mov
test
pop
dec
xchg
dec
sbb
scas
ret
js
repz
push
mov
add
outsl
shr
push
adc
test
enter
gs
ds
jecxz
cmpb
pushf
popf
push
mov
decb
adc
mov
or
pop
ds
mov
pop
lcall
and
cmpb
jge
imul
popf
jbe
pop
push
dec
add
lret
shll
cltd
cmp
cld
inc
mov
ds
daa
aas
into
dec
shlb
cwtl
push
mov
mov
inc
xchg
add
pop
jmp
or
je
fsubr
cmpsb
test
pop
mov
mov
and
sbb
sub
les
push
fwait
popf
xchg
push
jne
scas
jge
dec
adc
lea
mov
add
addr16
enter
lock
sbb
sbb
jp
add
and
jp,pn
lds
xlat
dec
movl
jp
inc
out
lret
and
lahf
sahf
cmpsb
sub
divb
ret
xor
in
in
or
into
lret
sar
sbb
mov
mov
push
rcrl
push
ja
cmpb
mov
xchg
xor
add
inc
cmp
sbb
jo
sbb
test
mov
push
and
ljmp
hlt
dec
loopne
push
nop
mov
popa
fcoml
pop
or
lret
xor
pushf
mov
xor
jl
outsl
sti
and
test
fiaddl
adc
mov
mov
push
sub
adc
jp
aas
mov
insb
imul
popa
inc
call
je
insb
xor
jg
hlt
fs
pop
inc
cmc
daa
stos
xchg
mov
lret
and
je
enter
std
adc
inc
mov
jb
xor
dec
nop
inc
push
aad
xor
and
insl
xor
popf
mov
mov
test
jns
xor
inc
jne
mov
sbb
test
mov
inc
xchg
pushf
or
movsl
inc
lcall
rcrl
jmp
xor
push
mov
leave
sbb
popa
pop
nop
cmp
mov
pop
push
xor
xor
dec
sbb
stc
pop
jne
pushf
sahf
sub
aam
nop
adc
mov
mov
xchg
pop
cmpl
cmpl
andb
add
aad
inc
xor
mov
jmp
jecxz
bound
int
mov
fstpl
out
loope
test
jno,pn
dec
scas
pop
dec
out
pop
jo
inc
mov
insb
movsb
cmp
inc
and
fistpl
imul
cwtl
addl
push
aam
push
xchg
jo
test
insl
jg
in
push
movsb
adc
fiaddl
xor
xchg
repnz
inc
adcl
inc
sahf
jg
cmp
jnp
add
fnstsw
imul
cwtl
pop
mov
mov
jle
or
leave
pop
and
inc
sti
icebp
add
inc
and
or
or
mov
es
adc
pushf
fdivl
je
out
and
jp
mov
pop
push
add
xor
nop
aad
and
inc
mov
ficompl
jb
arpl
push
ret
xor
pop
mov
or
shl
add
push
mov
ret
push
icebp
lcall
ret
dec
out
xor
add
hlt
enter
movsl
or
imul
lahf
sbb
or
inc
test
adc
fs
push
cmp
jle
fucomip
call
into
insl
push
repz
je
js
in
iret
int3
rcll
insb
ret
into
es
xchg
shll
dec
xor
ja
call
sub
mov
xchg
addr16
movsb
inc
jno
cmp
dec
pop
ljmp
test
popa
mov
sbb
mov
mov
rcrb
enter
dec
xchg
sub
negl
shll
xchg
and
scas
cmp
push
aad
aad
xchg
cmpsl
add
or
dec
rclb
add
mov
imul
cltd
jmp
adc
mov
in
adc
cmp
sbb
dec
jne
pop
xor
and
cli
pop
xor
pop
adc
inc
xchg
jbe
fldenv
ds
pop
cld
mov
xorb
cmpsl
mov
push
jnp
cld
xor
gs
and
mov
xchg
loope
inc
mov
jmp
lret
aaa
fnstcw
fwait
es
je
in
int
fs
pop
scas
in
xchg
call
in
sbb
inc
and
pop
sub
iret
jmp
mov
add
aaa
xchg
adc
mov
or
mov
cmp
sub
mov
sub
add
mov
in
dec
es
mov
jo
xchg
int3
add
xchg
hlt
pushf
orl
jo
fstp
in
icebp
dec
ljmp
pop
xor
cmp
cltd
bound
std
mov
or
mov
and
les
lds
push
pop
sahf
mov
outsl
lret
or
lea
sbb
fsub
int3
xor
mov
aam
daa
in
fisttps
mov
jae
cmpsb
fldenv
mov
push
in
xchg
xor
cmpl
cs
pop
pushf
test
xchg
xchg
xor
imul
sub
lds
mov
and
xchg
jne
mov
cmp
pushf
jmp
arpl
jmp
out
dec
pop
push
aaa
int3
aam
adc
enter
out
mov
push
sub
cmp
jmp
cmpsb
xor
push
dec
xlat
into
sub
test
push
xchg
cmpsb
adc
dec
or
ljmp
ds
negl
into
les
mov
lret
mov
sbb
stc
jo
xchg
mov
fcomps
stc
push
lods
testb
and
dec
pop
mov
lahf
dec
pushf
and
mov
daa
das
cmp
xchg
subl
std
mov
xchg
cmpsl
xchg
mov
cmp
push
jle
add
cmp
sahf
jg
push
xchg
fisttpll
mov
mov
aas
xor
pop
inc
int
xchg
test
dec
hlt
dec
popa
jo
hlt
rol
xorl
jmp
and
and
xchg
stos
nop
dec
movsb
into
xorb
cmp
mov
sahf
sub
xor
fdivrs
lea
cwtl
sti
and
pop
cwtl
clc
popf
stos
filds
int
mov
fnstsw
inc
or
sbb
adcb
pop
ret
insl
outsl
and
inc
repz
jb
lds
iret
das
xchg
and
sbb
mov
sub
sarl
jmp
loopne
pop
call
sub
loop
dec
jns
jns
push
and
mov
imul
xchg
and
out
mov
movsl
ret
je
cwtl
mov
dec
mov
mov
movsb
loope
xor
xchg
gs
sbb
lds
sahf
daa
jmp
lahf
jl
push
cld
pop
or
push
and
imul
adc
xchg
cwtl
cmp
xlat
adcb
jge
jnp
int
aaa
pusha
jge
gs
inc
sbb
mov
push
pop
or
xchg
cmp
test
subb
mov
test
insb
push
jae
cmpsb
jl
into
pop
and
test
pop
xor
cmp
or
or
sub
sbb
test
and
mov
lret
add
mov
jge
sub
mov
pop
mov
shll
ficomps
xor
std
lds
dec
test
mov
jg
repnz
imul
mov
sub
cs
mov
test
cs
mov
add
mul
ret
or
mov
notb
out
jae
jle
jg
sub
dec
pusha
mov
sar
fidivs
adc
rcrb
xor
adc
test
inc
mov
test
loope
ficompl
xor
inc
jecxz
les
lea
push
jg
inc
adc
push
and
gs
pop
xor
or
xchg
sbb
out
stos
add
bound
or
mov
jmp
repz
sbb
pop
shll
jle
movsb
outsb
cmp
ja
cmc
mov
mov
mov
fbstp
cmp
gs
sub
scas
and
jns
pop
add
mov
pop
sti
mov
jnp
rorl
stos
cltd
xor
sbb
jle
xor
xor
xor
mov
lea
and
lret
sub
push
add
mov
jge
xor
dec
sub
test
cmpsb
and
loop
xor
lds
xor
lods
sbbl
jecxz
call
cmp
jno
pushf
pop
xchg
out
push
imul
lahf
daa
pop
pushf
les
cwtl
or
fimuls
push
jp
push
pop
inc
xor
stos
enter
js
dec
sar
push
mov
cld
sbb
dec
lods
gs
sub
cmp
or
mov
xor
gs
xchg
xchg
aaa
fsubs
lods
jg
sbb
in
pop
repz
sbb
or
fcomip
cmp
dec
popw
push
sub
cmp
out
jbe
cli
jns
adcl
in
ret
hlt
pop
cmpsb
gs
xchg
rorl
mov
inc
add
jp
daa
cld
inc
scas
sbb
mov
mov
mov
fwait
xlat
shll
jp
cltd
mov
cmp
js
mov
lret
imul
xor
stos
cwtl
leave
cmpl
mov
dec
cld
bswap
fcompl
jg
std
xchg
dec
pop
lock
dec
and
das
cmp
push
loop
adc
mov
push
mov
jmp
dec
mov
or
inc
mov
mov
hlt
call
dec
popa
inc
cwtl
xor
js
fiadds
dec
and
and
pop
sbb
test
push
push
add
rcrb
nop
rcrb
mov
pop
call
pop
push
into
push
xchg
ja
rcr
sbb
bound
rolb
std
lods
out
ds
lds
push
jnp
mulb
mov
into
idivb
outsb
inc
add
lcall
pop
cli
cmp
rcrl
dec
inc
leave
xor
test
or
icebp
pop
add
pop
pusha
arpl
adc
add
sub
call
xlat
add
lods
scas
or
ret
dec
es
inc
fcmovne
popa
jbe
int3
mov
inc
push
iret
sub
hlt
cld
leave
das
mov
dec
fildl
or
popf
cmpl
xor
pusha
jmp
xor
in
xor
push
clc
dec
add
je
sub
xor
iret
jl
add
popf
inc
arpl
lods
cmpsb
icebp
lret
add
mov
pop
xchg
adc
fcmovnbe
rcrb
cmp
dec
gs
push
push
cli
cmp
xor
add
stc
push
sbb
or
jno
mov
mov
inc
push
stos
jle
jg
add
fs
mov
xchg
cmpsl
push
push
xor
test
sti
int
jb
jecxz
xor
inc
nop
or
or
push
pop
outsb
mov
jnp
sub
pop
sub
popa
out
daa
add
fcmovbe
ror
sub
mov
mov
lock
mov
out
aam
mov
xor
adc
dec
mov
inc
and
in
aad
lret
xchg
mov
js
stc
data16
push
call
xor
inc
xchg
sub
add
lret
mov
lahf
adcl
push
call
and
js
shl
fists
add
sub
fwait
dec
fsubrp
jno
cmpsl
dec
mov
adc
fbstp
jmp
or
push
ret
and
xchg
sti
xor
andb
mov
pop
rorb
dec
roll
pop
outsl
jle
add
pop
mov
adc
sbb
xorl
mov
aas
add
pop
shl
inc
shll
sub
sub
outsl
sbb
pop
int3
xor
outsb
sar
imul
arpl
nop
adc
push
lcall
dec
mov
mov
mov
outsl
daa
cld
dec
or
sub
mov
enter
jle
cwtl
and
mov
sti
xchg
and
in
add
cmp
push
xorl
mov
popa
pop
pop
push
rclb
add
in
adc
mov
mov
adc
lcall
ljmp
pop
popf
pop
inc
mov
adc
fisubrs
leave
lahf
inc
fstl
xor
pop
cmp
mov
pushf
xchg
add
cmp
pop
out
or
mov
jmp
out
adc
movl
outsb
mov
ljmp
out
jmp
adc
adc
push
xchg
push
shl
push
adc
enter
sbb
mov
scas
daa
jmp
sub
icebp
jae
mov
ret
mov
lahf
xchg
or
frstor
inc
gs
inc
je
bswap
lahf
sub
xchg
mov
dec
popa
dec
call
mov
pop
sti
test
lock
loope
push
int
test
icebp
mov
push
into
dec
test
add
sarl
jns
inc
cmp
jmp
lods
sbb
cli
daa
stos
into
adcl
cmp
push
mov
mov
aam
add
fsubrp
cwtl
add
cmc
shl
sbb
sub
int3
mov
mov
push
ljmp
jle
xor
je
into
push
hlt
ret
sbb
mov
pop
enter
hlt
pop
pop
jb
fsubrs
cmp
mov
ss
xor
ret
je
lds
loop
pop
std
adc
repnz
test
dec
imul
int
dec
mov
dec
pop
jo
enter
es
cli
filds
jle
inc
sti
call
test
xlat
ja
fs
xchg
mov
popa
xchg
lret
lods
das
xor
leave
ret
sahf
xchg
nop
dec
jg
jns
mov
aam
jb
jle
add
insb
fnsave
std
mov
jle
test
dec
dec
jmp
jl
cmc
pusha
mov
add
lea
jmp
int3
movsl
dec
mov
enter
es
test
outsl
insb
push
int
mov
in
cwtl
cmp
push
cmpsb
jns
xchg
int3
xor
mov
mov
inc
mov
jae
fldl
testb
sbb
cmpsl
add
arpl
sti
testl
sbb
loope
loop
lcall
jns
mov
into
jmp
cltd
mov
iret
adc
pop
mov
dec
jmp
roll
inc
inc
fmul
mov
mov
mov
cmp
rcl
sahf
push
ds
pop
pop
inc
popf
nop
fdiv
cltd
incb
pusha
out
mov
push
jl
push
enter
rolb
jl
pop
popa
sbb
dec
leave
and
lea
data16
call
mov
call
sub
andl
iret
xchg
jb
sbbl
pop
daa
repnz
xchg
dec
movsb
sub
pop
xor
mov
cmp
dec
add
add
cmp
mov
mov
es
ljmp
test
arpl
leave
sbb
jecxz
lds
hlt
sub
jnp
ret
sub
ret
cli
arpl
mov
aaa
xor
sbb
dec
imul
jnp
std
cmp
leave
pop
inc
insl
push
pop
cmp
sbb
cmpsl
mov
mov
pop
xchg
lock
inc
movsb
scas
xchg
mov
stos
popa
sbb
jle
dec
nop
inc
mov
sahf
int3
iret
sbb
out
sbb
mov
xchg
repnz
push
inc
jg
lahf
std
push
mov
iret
arpl
loop
adc
and
aas
mov
cltd
jbe
cmpsb
imul
hlt
popf
mov
jmp
aas
ds
cmp
cli
add
sub
pushf
cmp
push
sbb
push
dec
test
pop
and
fmull
stos
inc
fldenv
movzbl
mov
pop
out
stos
cmc
aaa
enter
pop
int3
dec
inc
or
sbb
fdivrl
add
dec
jmp
outsl
sub
dec
xchg
lea
and
shrb
test
and
or
inc
les
push
xchg
pop
dec
add
mov
add
fiadds
adc
mov
ja
cmc
popf
adc
fcmovnu
sbb
dec
pop
adc
dec
rcr
push
fisubrs
subl
xchg
sbb
outsl
adc
test
and
mov
xor
insl
loop
jge
sbb
jns
loop
scas
ljmp
mov
mov
mov
fisttpll
sbb
je
lea
je
mov
fnstsw
adc
aad
or
mov
addr16
and
fstl
mov
rep
mov
into
fdivrl
push
iret
or
shr
mov
sub
pop
leave
leave
sbb
out
push
adc
xchg
mov
push
cmpsb
sbb
pop
bound
sub
cmp
cmp
test
sbb
mov
test
mov
inc
loopne
data16
pop
sbb
xor
push
sti
sub
call
stc
cs
loope
test
mov
pop
xlat
pop
dec
aaa
mov
adc
sbb
popa
std
out
fnstsw
xchg
aas
in
lds
arpl
cld
sub
and
fistpll
push
pop
in
das
adc
xor
cltd
call
int
hlt
push
jl
dec
popa
push
cli
push
or
mov
sub
pop
mov
je
dec
and
cmpsl
insb
pop
sub
jmp
xchg
inc
ja
pop
jge
int
jl
pop
xchg
icebp
push
jge
adc
movsl
cmpsl
fldenv
fwait
imul
scas
jmp
je
shlb
pop
pop
popa
clc
and
mov
mov
pxor
cmp
sbb
push
inc
mov
adc
stc
sub
inc
jp
fildll
mov
xor
pop
std
sbb
jns
xor
into
mov
leave
xor
cwtl
les
jns
int
push
jle
pop
inc
fs
push
sub
repz
dec
cli
adc
js
dec
ljmp
jmp
jecxz
loop,pn
xchg
mov
push
hlt
xor
loope
push
out
jg
sbb
movsb
nop
insl
xchg
cltd
ret
and
mov
pop
shrl
movsb
int3
clc
add
mov
je
mov
xchg
out
push
mov
mov
in
pusha
out
inc
fsubrl
fldcw
bound
cmpsb
aam
mov
mov
ficoms
nop
roll
ret
pusha
pop
sarl
jae
jl
dec
dec
dec
cltd
lods
add
adc
lret
arpl
adc
inc
iret
sbb
in
and
into
into
sbb
daa
jmp
insl
sti
mov
jb
sbb
dec
bound
or
push
cmpb
pushf
mov
mov
in
or
js
loop
imul
mov
rcr
push
pop
or
push
popa
xchg
cmpb
adc
xchg
test
mov
in
sbb
pop
insb
pop
shl
scas
fldl
mov
insb
push
jns
xchg
mov
xchg
or
clc
pushf
add
ss
push
repz
dec
addr16
dec
xor
adc
mov
xchg
ret
out
cmpsb
mov
or
add
xor
lea
mov
fimull
jo
aas
ljmp
das
add
lock
cmp
cmp
adc
sub
jecxz
and
inc
idivl
jge
mov
or
adc
sbb
pop
inc
add
lahf
inc
sbb
xlat
mov
add
jno
push
test
push
sbb
jp
mov
pop
jg
in
cs
cmpsl
ljmp
mov
imull
jecxz
addr16
mov
ja
aam
in
cld
int3
stos
fisubs
jl
and
dec
jg
mov
fistl
mov
shll
cmp
adc
push
nop
fdivr
add
sti
aas
and
push
fcompl
and
fcmovnb
jmp
dec
stos
mov
add
jge
dec
das
xchg
pop
ffree
stc
or
add
out
and
outsl
push
mov
add
aas
mov
mov
jmp
mov
jle
adc
mov
data16
mov
je
ficoml
lock
icebp
push
sub
fcmovbe
dec
xchg
mov
das
fcompl
sbb
mov
ljmp
mov
pop
pushf
fbstp
xor
mov
jno
lods
jmp
mov
je
lret
push
xor
and
or
inc
std
scas
fstpl
inc
adc
das
icebp
mov
mov
adc
out
leave
scas
add
xchg
sbb
jle
and
mov
and
cmc
push
ret
sbb
sbb
stc
idivb
xchg
xchg
pop
es
divl
loopne
xchg
jno
pushf
clc
push
jg
ret
inc
rorb
sarb
push
mov
or
into
cltd
aaa
sar
xlat
and
subl
sbb
inc
out
sub
xor
lock
shlb
mov
jne
test
je
rclb
cmp
lds
cmpsb
fwait
vpmaddwd
add
lret
jo
mov
into
lahf
dec
jmp
sbb
jge
sub
aaa
push
adc
popf
and
sub
fidivrs
mov
nop
mov
pop
fmull
fidivl
mov
xchg
lods
shl
lds
mov
outsb
and
mov
cmp
out
or
es
jo
test
pushw
shl
lods
imul
add
sub
push
das
lcall
out
fs
dec
xor
in
mov
iret
sbb
push
dec
xchg
push
push
outsb
push
aas
scas
decb
clc
in
cmp
add
aaa
dec
dec
adc
sub
cmp
je
andl
data16
and
sbb
aaa
adc
lret
inc
add
iret
rol
xchg
imul
jecxz
cwtl
pop
and
xchg
push
push
sarl
in
jne
test
dec
roll
aam
into
jmp
inc
pushl
mov
imull
xchg
dec
mov
cltd
lods
mov
cmpl
mov
out
aam
pusha
pop
push
push
mov
inc
fcoms
xor
loopne
push
mov
mov
leave
and
adc
fadds
dec
pop
adc
xchg
push
stc
or
pop
mov
or
lret
in
test
pushf
push
lahf
cli
inc
add
xchg
xchg
jge
mov
repnz
sarb
xchg
mov
sbb
insl
sbb
jb
mov
push
push
sub
xchg
sti
popa
addb
adc
test
enter
insl
jp
xchg
jp
in
out
pop
scas
nop
inc
mov
sti
mov
out
test
push
into
call
addl
leave
mov
iret
push
testl
repnz
mov
jae
jb
xor
fistps
or
pop
stos
ret
mov
cmpsb
fisubs
cld
sbb
push
out
pop
inc
sub
inc
and
cmp
push
fldenv
cmp
popa
add
js
jp
and
push
lea
cwtl
scas
mov
hlt
stc
pushf
fistps
stos
pusha
jg
or
adc
test
pop
sbb
or
out
xlat
and
sti
cmp
ret
loopne
or
pushl
iret
pop
das
cmovle
outsb
adc
adc
adc
sbb
je
pop
mov
cld
mov
mov
adc
das
sub
xor
jo
adc
fcomps
pop
daa
xchg
mov
or
in
xchg
addr16
divl
fisubl
call
cwtl
push
xor
adc
adc
fs
pop
repz
xor
inc
dec
pop
cmp
outsb
sbb
dec
ret
in
pop
popa
jnp
in
mov
or
dec
fiaddl
in
sbb
movsl
lret
and
or
dec
mov
test
or
pop
jecxz
out
std
inc
addr16
mov
jg
test
jae
xlat
jnp
push
in
cmc
into
subb
out
in
xor
mov
lret
shlb
xchg
xlat
jns
xchg
loop
mov
mov
loopne
insl
xchg
cwtl
inc
rcrb
jl
mov
adc
loopne
pop
cmp
jmp
cmpsl
dec
cmp
ret
pop
jbe
out
dec
mov
dec
and
push
sbb
jg
xchg
jno
dec
cs
movsl
cltd
inc
adc
nop
or
ss
or
sarb
lret
mov
dec
ja
loope
rcrb
add
mov
aam
out
and
mov
xor
lea
cwtl
and
ret
mov
add
add
xchg
pop
addr16
pop
fnstsw
daa
and
sub
cmp
out
sbb
xor
scas
jecxz
sbb
jne
popf
mov
les
aas
aaa
xchg
add
pop
jno
push
jl
lock
lret
push
enter
sub
cmc
aas
push
jb
sbb
add
adc
push
push
mov
and
icebp
repnz
lds
lcall
mov
ret
icebp
or
sub
mov
imul
push
orl
mov
hlt
mov
ljmp
cli
mov
inc
loop
jnp
jne
jno
jp
xor
sti
pop
mov
mov
mov
jo
in
push
add
lods
ja
rolb
cld
out
insl
cmpsb
orb
jae
loop
inc
and
xchg
imul
ret
add
xor
out
cs
mov
push
mov
bound
stc
and
inc
icebp
and
jne
dec
jo
inc
jle
jg
lds
pop
test
jl
jb
dec
dec
fstl
fdivrl
pop
adc
jnp
movsl
sub
mov
in
adc
push
jo
dec
popa
jge
add
repnz
cmp
stos
pop
js
arpl
bound
out
aas
daa
push
xorb
test
add
addr16
push
lock
add
adcl
sub
push
sahf
loopne
incb
lret
mov
loop
sti
fisubrs
add
cmp
jecxz
push
fstl
ss
add
or
push
push
pop
loop
cmp
out
or
out
nop
int
mov
fdivl
out
popf
cmp
mov
inc
popf
inc
sub
sbb
test
adc
subl
inc
imul
mov
pop
push
push
sbb
movsl
push
add
dec
call
mov
pop
mov
mov
loope
add
lret
xchg
adc
arpl
lea
and
sub
bound
repz
mov
mov
push
cli
ja
push
xchg
mov
xchg
lcall
pop
lahf
jne
rcrl
mov
mov
xorl
invd
fsubl
xchg
out
mov
add
mov
popf
jne
xor
xchg
mov
psrad
ss
fisubrs
mov
or
mov
jg
inc
ja
mov
jae
pop
mov
mov
sub
xor
cld
xchg
pop
bound
mov
jp
push
loopne
test
orb
fldt
lahf
aad
push
js
sarl
aad
pop
sub
popa
sbb
leave
ss
mov
push
filds
pushf
loop
push
mov
cmc
pop
adc
pop
fdivl
cld
jmp
push
nop
add
adc
xchg
std
sarl
and
popw
sub
dec
lods
rcpps
and
adc
mov
and
push
xlat
clc
push
mov
movsb
xor
xor
sub
cmp
test
inc
mov
cli
insb
jmp
mov
sbb
mov
mov
pusha
int3
sbb
leave
jne,pn
or
enter
xor
stc
inc
int3
push
jae
xchg
adc
mov
lcall
cltd
enter
xor
or
loop
add
ficompl
jg
movsb
mov
sbb
ror
push
nop
pop
mov
std
nop
cmp
icebp
or
add
addb
mov
fwait
inc
pusha
lock
mov
push
repnz
sti
dec
sbb
sub
xchg
add
movsl
lret
add
mov
jns
or
das
mov
pop
pop
loop
pop
loopne
pusha
data16
and
or
jb
insb
ljmp
aad
pop
inc
cmpl
shlb
aas
push
push
movsl
out
cmp
sti
xchg
cmpsl
cmp
int3
sub
dec
xchg
pop
das
in
data16
push
inc
fbld
push
aas
dec
or
lret
push
pop
pop
and
repnz
dec
xchg
xchg
jge
inc
add
loop
mov
xchg
xchg
sar
ljmp
aam
ror
cmpsl
in
push
inc
pop
xchg
mov
cmp
ret
ret
xor
in
add
arpl
test
mov
adc
test
inc
fisubs
mov
insb
pushf
fsubr
mov
fsubr
push
pop
mov
shll
movsb
in
push
sub
cmp
pop
into
cmp
jne
sbb
es
ljmp
mov
out
mov
lods
enter
iret
pop
xchg
out
cli
jp
lcall
nop
push
les
fmuls
lcall
cmp
mov
lret
adc
jnp
and
call
pop
xchg
lock
in
out
lods
jb
add
lds
jle
mov
fcos
xchg
lret
scas
mov
ss
aad
xor
xor
adc
push
outsl
or
pop
int
sbb
out
rclb
sub
test
loopne
scas
das
inc
cmpsb
push
test
xchg
imul
and
push
mov
xchg
loope
loopne
test
mov
popa
loop
loope
test
lret
cld
insb
push
movsl
sub
outsl
xchg
pop
mov
and
jg
jge
addr16
dec
sub
mov
hlt
cwtl
fwait
cmp
sub
and
xchg
repnz
add
mov
add
leave
cmp
mov
nop
into
test
add
mull
shll
sar
or
xchg
xchg
shlb
push
sub
pop
les
int3
pop
mov
jecxz
scas
mov
outsb
jge
setge
arpl
scas
jp
je
sbb
test
outsl
daa
and
mov
pop
pop
add
mov
mov
sahf
xor
adc
mov
ficoms
jle
sbb
out
mov
pusha
xchg
pushf
push
addr16
cmp
jle
push
std
or
push
mov
int3
pop
loopne
mov
add
aam
in
mov
or
lea
mov
sahf
ds
cmpl
gs
stos
gs
ss
cmc
aaa
movsb
jle
rcll
mov
pop
insl
pop
mov
movsl
inc
dec
int3
insl
xchg
or
aad
jge
mov
pop
mov
add
jge
out
xchg
xlat
imul
repz
popa
dec
mov
xchg
sar
imull
ja
sti
scas
push
aad
adc
shrb
xchg
call
or
cmc
xchg
xchg
push
test
arpl
xchg
push
insb
cmp
fdivrp
add
addb
xorl
or
imul
sbb
sbb
int
jae
xor
push
sahf
int
cmp
and
ret
cmpsb
push
xchg
mov
sbb
loope
mov
push
add
lahf
je
adc
cmp
iret
or
decl
addl
aad
mov
test
insb
and
mov
std
stc
outsl
add
scas
rolb
sub
xchg
pop
repnz
mov
stos
fs
push
xchg
arpl
and
outsb
roll
fcmovbe
xchg
dec
inc
jmp
lret
and
stos
cmp
stos
pop
mov
aaa
cmp
inc
xchg
push
leave
add
negl
jbe
jae
out
aam
or
dec
pop
in
xchg
sub
movsl
cmpsl
jecxz
push
cmp
aam
jmp
bound
negb
pusha
sub
cmpsb
pop
xlat
ret
xchg
out
add
push
xchg
pop
pop
adc
fisttps
sbb
mov
mov
and
movsb
or
pop
sbb
inc
in
rcr
sub
jp
sbb
adc
loope
rcr
shrl
push
and
or
sti
adc
xchg
push
ljmp
adc
inc
sub
test
scas
mov
lcall
lcall
sar
cmp
out
test
inc
mov
scas
mov
iret
mov
daa
and
lods
push
repz
push
sub
inc
mov
movsl
lahf
imul
mov
adc
cmp
cld
daa
or
push
mov
fnstcw
add
push
fs
pop
cmp
cmp
lods
mov
imul
sbb
ret
xor
mov
mov
mov
fldl
mov
push
inc
nop
push
push
pop
je
pinsrw
push
iret
sbb
mov
pop
repz
lods
jl
fcompl
lcall
lret
scas
mov
mov
inc
add
adc
lret
mov
inc
out
mov
xchg
movb
aas
ret
xchg
mov
jno
mov
enter
sbb
inc
xlat
ret
lcall
fstl
xor
add
mov
inc
jne
pop
stos
cmpsb
xchg
loop
test
je
test
int
mov
mov
xorb
adc
mov
add
out
and
pop
lret
stos
dec
push
cmp
pop
or
jno
clc
and
fs
sqrtps
andl
dec
addr16
xchg
insb
shlb
aam
sub
sbb
arpl
push
xchg
in
add
mov
or
add
sbb
pop
add
aaa
adcl
movsb
and
addb
jecxz
inc
hlt
push
incl
lods
stos
pop
gs
inc
fs
loope
lds
rcll
lods
or
and
sbb
inc
out
imul
sbb
dec
or
lcall
scas
jno
pop
lahf
testb
sbb
jle
mov
setb
sbb
psubb
movsl
sub
cltd
pushf
pop
mov
scas
add
adc
leave
lods
loop
fisubl
xor
inc
popa
mov
lods
call
fimull
or
arpl
pop
aad
ja
xchg
js
es
enter
test
cld
push
jl
sub
push
aam
insb
mov
fs
test
ljmp
jbe
mov
jge
rcrl
sahf
in
pushf
out
mov
lret
dec
and
rcrb
stos
adc
fisubrl
inc
dec
outsl
lret
shlb
dec
icebp
cld
mov
adc
mov
jmp
xchg
jbe
jbe
push
push
pushf
cs
aaa
or
xchg
arpl
inc
mov
adc
sbb
notb
fisttps
lds
xor
cli
mov
in
inc
cmp
pusha
pop
cmp
push
mov
add
shl
fldt
lods
or
adc
sbb
fisubl
or
mov
add
sub
and
xlat
lcall
xor
push
sub
outsb
cs
push
and
adc
sbbl
popa
xor
jge
icebp
test
and
and
xchg
adc
out
sbb
ret
mov
test
int
testl
in
push
stos
sbb
xor
int
jne
or
mov
sbb
out
in
or
scas
adc
inc
jecxz
xor
jae
insl
sbb
sahf
lcall
add
xchg
fldcw
jnp
and
pop
aaa
dec
cli
mov
cmovs
xor
in
cmp
sub
out
mov
mov
sub
cwtl
outsl
leave
mov
pop
jno
mov
pop
lods
mov
cwtl
js
mov
push
adc
or
and
xor
push
scas
jbe
fs
and
iret
sub
mov
inc
jb
dec
lds
jo
aaa
add
cmpsb
or
std
inc
stc
xchg
push
or
stos
jbe
ds
int3
aaa
cmp
vcomisd
mov
dec
mov
and
xchg
inc
jge
push
cmpsl
lock
out
cmpb
adc
add
mov
call
sbb
add
mov
lods
sbb
add
dec
ret
push
pop
adc
pop
lahf
lcall
mov
xchg
jle
add
mov
lret
popf
jp
data16
std
fucomip
push
pop
jl
out
fsubp
out
push
lock
jmp
lods
adc
sti
icebp
mov
aam
mov
lds
and
jae
jbe
sbb
adc
dec
cmp
adc
negl
sub
stos
xchg
in
inc
data16
pop
aaa
mov
mov
pop
or
sub
mov
call
and
lock
pop
repnz
js
loopne
mov
jb
mov
mov
xchg
nop
scas
icebp
orb
lds
pushf
sub
fsubl
iret
push
mov
push
cmpsl
dec
mov
dec
movsb
add
mov
jns
xchg
jno
popf
dec
mov
mov
xor
mov
pop
xlat
jle
mov
pop
adc
pop
push
pushf
lds
push
fsubp
test
push
adc
pop
imul
movb
push
nop
gs
and
jnp
push
stc
mov
in
lea
enter
or
adcl
mov
sub
outsb
stos
dec
pop
in
xlat
gs
test
pop
test
in
inc
lods
pop
xchg
mov
pop
dec
xor
das
test
add
ds
insb
out
ja
xchg
mov
add
dec
inc
pushf
scas
sub
cmp
iret
das
jmp
mov
inc
ficoml
imull
mov
and
add
les
int3
lahf
aad
push
lds
mov
sahf
or
stos
cmc
sub
aaa
aad
mov
adc
inc
mov
mov
adc
je
or
stos
sbb
fs
push
stos
sarb
out
ja
pop
cmpsb
rorb
and
ss
sub
add
outsb
shll
out
jbe
push
and
jge
and
sbb
mov
or
dec
push
jnp
mov
mov
cmpsl
outsb
mov
sub
jne
test
xor
mov
shrl
pop
xor
dec
pop
jecxz
inc
out
rclb
dec
and
pusha
dec
jp
cs
mov
dec
outsb
mov
cmp
sbb
fimuls
mov
lods
int
pop
xlat
xchg
dec
pop
cmp
mov
mov
adc
lock
and
push
add
adc
lcall
aaa
xor
cli
jns
xchg
pop
mov
enter
stc
test
imul
jmp
sub
lahf
jnp
or
jo
pop
movsw
out
aam
sbb
movsb
mov
leave
loopne
cmp
lcall
push
mov
iret
outsb
push
jmp
sbb
mov
icebp
xor
roll
push
lock
lret
rcl
or
xchg
and
xor
sub
jge
cmp
cli
popf
pusha
push
lret
testl
hlt
sub
in
jp
insl
ja
addr16
sub
xor
or
es
pop
jno
bound
stc
cmp
add
stc
outsb
loopne
popa
or
sub
or
aas
int3
jno
ja
or
jmp
jo
add
ja
fstl
mov
ficomps
into
dec
adc
add
or
int3
test
jmp
insb
mov
mov
fnsetpm(287
icebp
aaa
xchg
xchg
shlb
jo
sub
pop
and
pop
xor
insl
push
cltd
xchg
and
sbb
inc
fnclex
repnz
pop
or
call
adc
jo
mov
jns
cli
push
sbb
sbbb
sub
testb
pop
mov
add
psrad
lahf
popa
fisubrs
lret
jne
insl
in
inc
insl
or
rorb
in
push
adc
pushf
push
out
or
adc
test
or
out
add
push
cmp
js
sbb
fs
mov
cld
hlt
sbb
loop
mov
aam
jp
or
add
out
jbe
cmp
cmpsl
inc
push
cmp
gs
mov
adc
insl
data16
xchg
idiv
sub
lcall
xchg
stos
test
mov
sub
add
push
mov
lahf
pop
pop
mov
aad
or
enter
xchg
loopne
inc
adc
pop
test
mov
dec
lock
lret
outsl
hlt
sub
mov
and
dec
mov
sub
out
mov
xchg
adc
sti
xor
cmp
jmp
or
call
test
sbb
push
fwait
jge
fsubs
jecxz
or
std
scas
inc
lahf
dec
pop
lea
sbb
hlt
add
fcomps
loope
aaa
popf
xorb
or
loop
pop
push
push
jb
repz
divb
and
pop
cmpsl
cmp
mov
out
sbb
clc
jo
mov
cmp
mov
mov
rcl
inc
xor
sbb
xchg
cmp
adc
add
add
jae
dec
xchg
push
pushf
sbb
outsb
cltd
je
dec
cmc
add
fmul
test
cmp
outsb
xchg
outsb
es
loop
cmp
outsl
imul
dec
jbe
pop
push
sar
and
jbe
dec
popl
aaa
cmp
loope
or
mov
push
jns
loope
popa
inc
cmp
rcll
pop
je
push
and
pop
push
or
sbb
lods
pop
xor
jns
add
or
push
jnp
lock
test
into
and
and
dec
sbb
and
adc
pop
imul
mov
jecxz
pop
mov
lock
cltd
enter
cwtl
mov
jnp
and
fs
sahf
icebp
pop
fs
jno
push
ret
jb
cmpsb
adc
cmc
daa
ss
mov
xchg
lea
testl
mov
add
aaa
loop
gs
fs
xchg
xor
lea
mov
pop
loop
add
daa
xor
jge
test
or
sub
ja
je
fbstp
dec
outsl
cmp
mov
iret
jle
outsb
in
mulb
lods
in
jno
cs
xchg
mov
ficomps
pop
int3
dec
push
mov
std
lock
sub
pusha
lahf
pop
ljmp
jp
enter
cmpsb
sti
sahf
test
mov
test
push
add
aas
test
jmp
out
lret
add
pop
adc
mov
and
add
or
sahf
loopne
in
aas
cmp
jb
jecxz
and
cmp
int3
jb
ficomps
pusha
push
aad
mov
pop
iret
imul
mov
iret
adc
mov
jnp
mov
adc
lock
adc
negl
mov
mov
sbb
dec
loopne
fwait
sub
jmp
adc
loopne
cltd
push
int3
es
or
mov
iret
or
cmc
jo
push
mov
fisubrl
adc
in
pop
mov
push
xchg
push
push
loopne
stos
dec
xchg
sub
mov
test
add
push
std
xor
ss
inc
and
in
out
into
adc
xor
mov
das
imul
mov
sub
jns
cmp
loop
jmp
sbb
dec
cltd
iret
pusha
cmp
addr16
leave
sub
mov
jmp
std
out
icebp
stos
xor
sbb
and
outsl
adc
mov
mov
fildll
lds
lea
sbb
mov
fistps
pushl
in
popf
push
dec
testl
push
sahf
xor
pop
xor
sbb
hlt
rolb
test
inc
adc
aas
push
clc
sub
or
outsb
mov
pop
in
inc
inc
and
cmpsl
movsl
xchg
setne
mov
scas
mov
pop
arpl
xchg
out
mov
add
pop
cmp
popf
stos
lret
xchg
sub
fwait
cmpsl
xchg
lods
pop
mov
adc
xchg
lods
mov
leave
lea
out
in
cmp
sub
mov
inc
jecxz
mov
mov
movb
testb
mov
insl
mov
mov
pinsrw
dec
adc
fs
add
pusha
adc
rcr
lret
hlt
mov
fs
ret
dec
xchg
mov
mov
jg
or
sbb
outsb
lea
pop
or
or
mov
jmp
hlt
addr16
pop
pop
loope
aad
pop
nop
sbb
sub
sti
xor
lret
pop
push
test
mov
mov
xchg
repz
xchg
outsl
cltd
in
dec
xchg
sub
inc
inc
mov
inc
arpl
rcll
je
cld
cmovns
loope
cwtl
mov
cmpb
jno
adc
sub
pop
inc
outsl
xchg
xor
sub
mov
dec
adc
xchg
jae
mov
fdiv
and
dec
jo
sarb
aaa
fildll
inc
cmp
mov
test
jnp
insl
cltd
cmp
popf
adc
ss
imul
je
push
rcll
lret
jo
cmc
or
fwait
and
aaa
data16
sub
jmp
ss
xchg
lds
inc
movsl
jbe
and
cld
pop
pushf
cwtl
inc
jle
pushf
or
leave
test
mov
mov
dec
and
jl
popa
xchg
cmpsl
pushw
mov
mov
sbb
jmp
jg
jns
insl
cmpsb
je
into
sbb
xlat
push
xor
sbb
pushf
out
push
repnz
test
nopl
test
xchg
dec
xchg
aam
scas
out
mov
test
daa
daa
sbb
jle
push
push
jg
pop
int3
mov
aad
popf
shl
mov
outsb
in
mov
adc
ret
sub
xchg
mov
call
xor
mov
in
movsb
in
stos
aam
xchg
mov
cwtl
mov
and
inc
xchg
jl
loope
push
fdivr
sar
rorb
rcrb
xor
and
xor
fimuls
scas
add
dec
push
dec
stos
stc
mov
out
jg
adc
cmp
mov
mov
inc
lea
push
sub
or
movsl
sub
jle
ficoms
pop
les
jmp
push
dec
pop
notl
mov
inc
imul
jae
push
add
roll
jecxz
adc
jecxz
pop
xchg
test
dec
mov
into
sbb
rcl
cmp
rcrl
xor
nop
dec
xor
insb
je
mov
add
lods
fwait
mov
jg
cmp
dec
jecxz
out
mov
mov
fsqrt
push
jg
pop
repnz
divl
nop
xor
rol
mov
iret
push
rcrl
xor
std
out
insl
xor
push
and
push
das
add
and
adc
aaa
and
cmpsl
jmp
push
loop
dec
mov
rorl
lea
or
pop
push
test
out
fbld
cli
gs
jne
mov
sub
data16
in
and
pop
xchg
push
or
mov
loopne
ds
add
xchg
cld
andb
lods
leave
add
xchg
ret
jl
ss
jmp
mov
adc
pop
shlb
aam
mov
nop
sbb
pop
popa
sbb
jno
mov
sub
sub
icebp
xchg
jmp
lock
push
fcmovnb
rolb
cmp
xchg
adc
pusha
ss
rorb
xchg
in
or
movsb
repz
dec
cmp
bound
enter
jb
aad
inc
push
fs
cltd
aaa
or
popa
or
shll
aam
lods
xchg
inc
dec
mov
add
mov
filds
aam
lods
cmpl
add
sbb
jmp
xor
mov
stos
insl
mov
popf
or
pushf
sbb
and
mov
adc
cmp
add
push
push
andnps
adc
jo
cld
pop
lcall
dec
jae
rorl
mov
sub
xor
mov
jg
mov
sbb
rclb
in
xor
push
and
fcomps
loopne
shrl
je
pop
inc
daa
testb
dec
xlat
sub
mov
ljmp
hlt
jns
add
out
add
scas
jae
dec
add
jno
and
nop
subl
xchg
mov
js
mov
arpl
pop
mov
out
and
das
mov
cltd
aas
mov
sbb
ror
mov
sub
divb
adc
cmc
mov
jp
lea
movsl
mov
das
inc
rcrl
mov
jl
dec
out
push
jbe
sti
decl
adc
jge
mov
nop
and
mov
dec
ds
loope
mov
jmp
sbbb
lods
popa
lock
outsl
std
dec
adc
xor
push
mov
cmp
sbb
inc
mov
cltd
into
mov
jb
fisttpll
add
and
adc
frstor
inc
cmp
stos
outsl
pop
cmp
push
ds
pusha
scas
jmp
xchg
cmp
loopne
sub
cmp
rorb
ret
scas
jne
sub
xor
repnz
popa
fcomps
ss
pop
mov
cmp
les
mov
ds
inc
mov
lock
lcall
inc
mov
adc
call
repnz
xor
aam
mov
add
inc
mov
xchg
arpl
pop
push
mov
push
or
in
rorl
insb
sbb
jmp
mov
or
leave
dec
into
cmpsb
mov
xorb
stos
cmc
ret
dec
mov
stc
pop
pop
jo
in
loope
xchg
dec
mov
and
inc
lcall
movsl
dec
add
idiv
adc
cmpsl
aaa
push
out
cltd
movsb
dec
sahf
fstp
lds
and
mov
nop
sub
dec
pop
xor
adc
xor
pop
jbe
add
and
leave
fnstsw
rorl
push
xor
or
in
in
repnz
dec
shll
incb
int3
xlat
or
xor
push
mov
gs
pop
das
test
in
in
push
pop
sub
pop
loopne
jmp
das
repz
mov
jle
scas
lcall
pop
in
and
sbb
dec
jmp
cmpsl
loop
icebp
cmpb
lret
mov
and
mov
cmp
fs
popf
mov
gs
inc
mov
mov
je
movsl
mov
or
loopne
mov
inc
push
outsl
push
lock
sti
mov
lea
xor
and
xor
pop
rcl
push
out
inc
ds
lock
cltd
dec
push
push
imul
in
mov
jne
cmp
mov
xchg
adc
into
and
jle
inc
movsl
inc
out
adc
fdiv
shlb
repnz
fwait
and
leave
in
pop
pop
arpl
or
or
push
ds
arpl
imul
pusha
pop
pushf
pop
add
out
jnp
sub
mov
add
xchg
aam
xchg
sarl
insl
movsl
mov
and
popf
pop
push
mov
ficomps
mov
filds
std
shll
cmp
repz
mov
movsl
push
in
sbb
scas
pushf
dec
leave
inc
add
jbe
outsl
shll
or
sbb
sti
iret
or
jmp
jnp
xor
popa
les
mov
xchg
sub
mov
sbb
xor
xor
pop
lock
xchg
cli
popf
fsts
add
lret
imul
cmp
xorl
loope
jne
fistpll
ss
jge
std
mov
add
push
xor
xchg
jp,pt
cmp
imul
add
xlat
int
stos
xchg
aaa
aaa
cld
shr
mov
in
and
insb
inc
pop
xchg
jg
jbe
pop
loope
je
and
and
mov
insb
in
btsl
outsl
rclb
sub
bound
mov
push
mov
jge
insb
outsb
repnz
mov
pop
push
fmul
xchg
jbe
or
scas
inc
ljmp
andb
cltd
push
xchg
pop
mov
ss
pusha
xor
fdiv
int3
lahf
inc
pop
push
xorl
ljmp
test
dec
addr16
nop
jne
iret
push
idivb
outsb
mov
pop
and
sbb
lret
mov
add
or
int3
mov
aam
xchg
sub
dec
or
stc
ljmp
xchg
mov
dec
imull
mov
imul
sub
in
movb
inc
into
mov
add
bound
ret
rcrl
inc
rcl
ret
dec
ret
add
sub
aad
mov
and
push
inc
rclb
rol
fidivrl
mov
cmp
ja
dec
mov
or
adc
lret
mov
sbb
dec
adc
push
fbstp
ja
xchg
sarl
cmp
andl
push
pop
pusha
xlat
repnz
pushf
lods
push
js
xor
imul
xchg
rclb
jb
and
cmpps
pop
xor
mov
mov
imul
insb
aaa
jae
lock
dec
dec
mov
push
popa
fidivrl
ja
and
jo
cmp
repnz
xchg
inc
jb
add
pop
inc
and
cmp
cld
enter
sbb
fcomp
pmullw
je
and
mov
inc
add
sub
sahf
dec
bound
push
push
aas
sub
cli
jecxz
fstpl
pop
cmp
xor
cmpsb
dec
push
int3
lea
lea
cmp
push
enter
lret
dec
addl
dec
and
inc
aaa
cli
pop
sarb
mov
cmpsb
sub
jecxz
xor
push
sbb
cltd
sbb
out
push
mov
data16
clc
popf
jl
or
xchg
lret
jmp
jg,pt
push
add
sarl
cld
inc
push
sbb
mov
das
xor
jle
ljmp
mov
testl
pop
mov
xor
xchg
push
out
sbb
jle
jbe
and
shlb
or
xor
mov
mov
adc
xor
pop
push
imul
adc
fsubs
dec
mov
inc
cmp
mov
jle
or
or
mov
es
sahf
xchg
mov
mov
aam
sbb
pop
sub
xchg
jl
lret
adc
cmpsl
jno
and
jno
outsb
jp
test
jno
fdivrl
mov
rorl
cwtl
add
inc
mov
jbe
sbb
add
movaps
pusha
insl
aam
mov
mov
pop
mov
cli
and
cmpsl
nop
jmp
dec
xlat
xchg
xchg
shlb
mov
movsl
mov
rcl
pop
mov
scas
jecxz
ljmp
mov
dec
cmp
pop
lret
fldcw
ja
insb
mov
xchg
or
rorb
mov
push
and
dec
fnstsw
stos
xor
fiadds
aad
gs
dec
loopne
dec
leave
sbb
fnsave
ja
mov
in
dec
arpl
loop
xchg
mov
mov
movsb
mov
ret
enter
pop
push
out
sub
xchg
data16
adc
cmp
dec
std
xchg
mov
add
ret
pop
sti
sbb
rolb
jmp
mov
sbb
jnp
leave
cmp
mov
dec
out
out
test
pop
sub
insl
loop
test
mov
jne
mov
mov
rorl
mov
or
add
dec
dec
jle
lock
xorb
popl
sub
pop
mov
jmp
aas
mov
es
mov
dec
sahf
xchg
ds
test
jnp
ret
in
fwait
lods
jg
adc
push
sub
jg
lods
bound
inc
movsb
mov
jae
repnz
mov
cmp
ljmp
sahf
inc
int
outsl
das
push
test
inc
lret
push
jl
cmpsl
pop
push
jge
or
pop
pop
or
cmp
pop
and
jg
daa
jno
mov
leave
loopne
imul
loope
sub
inc
cmc
sbb
rcrl
popa
push
in
lods
loope
sub
in
icebp
rcl
sbb
inc
mov
pop
inc
mov
sbb
push
mov
or
pusha
mov
jmp
mov
dec
mov
push
mov
and
into
sbb
fsubs
shrb
mov
cmp
lods
movsb
pop
test
sti
sarb
mov
fstpl
xchg
xchg
clc
xchg
rclb
fnstenv
pop
xchg
or
aaa
stc
jns
inc
in
xor
pop
jle
cmp
jg
dec
cmp
std
scas
stos
sarl
pop
loopne
mov
push
cmp
sub
movsb
es
aad
loope
pcmpgtb
cmp
or
or
faddl
and
mov
push
test
cmp
jle
add
adc
xchg
pop
jge
adc
int
and
outsb
das
ret
push
sarb
mov
out
bound
in
repnz
xchg
lods
and
or
out
mov
cmc
stos
dec
test
arpl
add
je
cltd
lods
jp
sbb
mov
cmp
in
adc
mov
xchg
jge
jmp
xchg
pop
notb
xchg
pop
lea
fstpl
aas
mov
mov
and
les
addr16
dec
inc
adc
stos
fldpi
aad
into
stos
pop
push
int3
insl
test
mov
dec
adc
movsl
out
ja
cmc
pop
into
fiaddl
icebp
inc
dec
cmp
xor
add
aas
cs
outsl
fcmove
mov
lcall
cld
faddl
pop
dec
push
inc
cmp
negl
out
sub
divl
mov
ljmp
imul
dec
insl
ss
dec
mov
pminub
stc
ficoms
test
pushf
add
and
mov
cmp
push
and
int
imul
inc
fisttpll
push
clc
push
js
fwait
jle
ficoml
push
das
jne
lds
adc
inc
movsb
push
mov
cmp
adc
fs
icebp
mov
push
daa
mov
push
xorb
pop
mov
sbb
mov
push
and
aam
outsb
mov
pop
sbb
call
pop
std
fnstenv
sub
mov
inc
popa
mov
fsubs
js
xchg
pop
xchg
pop
cmp
repnz
xchg
mov
sbb
xchg
bound
add
adc
cltd
xor
mov
popa
leave
xchg
jle
and
or
sbb
into
gs
mov
and
sbb
or
cmpsb
aas
mov
mov
adc
pshufw
test
ficoms
adc
push
push
push
jns
add
sti
test
jns
sbb
aaa
std
mov
rcrb
adc
mov
add
xlat
jbe
test
mov
or
cs
sti
cmp
jl
xor
or
xchg
cmp
and
push
test
or
loope
xchg
mov
push
mov
push
adc
adcb
mov
in
das
xchg
jbe
loopne
mov
dec
out
xchg
push
out
cltd
int
xchg
xsha256
cmpsb
ror
mov
shrb
cmpsb
test
roll
pop
inc
repz
pushf
stc
idiv
fsubr
sbb
cmc
mov
aaa
repz
shlb
sar
pop
testl
mov
loopne
nop
pop
lock
push
lcall
mov
arpl
pop
shr
xor
loopne
scas
push
mov
fiaddl
add
lea
rcrl
cmp
push
jo
and
inc
mov
jns
mov
sbb
mov
mov
push
xchg
test
gs
pusha
loopne
mov
popf
mov
sub
sub
jmp
inc
mov
adc
mov
outsl
call
les
popa
mov
pop
and
add
jp
adc
in
fwait
pushf
sbb
jnp
lahf
imul
stc
push
cmpsb
shrl
ret
xchg
clc
xlat
and
inc
leave
xor
out
mov
repz
stc
inc
xor
fcoms
into
dec
mov
daa
push
sarb
adc
adc
mov
scas
push
mov
test
fcom
rcl
addb
cld
cmp
cltd
sub
jecxz
mov
sub
out
and
mov
aad
xchg
or
dec
stos
pop
add
jmp
jg
dec
jmp
cli
mov
lret
add
out
int
into
sub
mov
mov
mov
xchg
movb
cmp
xchg
mov
popa
dec
inc
push
ds
inc
aaa
sbb
sbb
out
fwait
ds
movsb
inc
cltd
xor
jle
push
sbb
sbb
pushf
push
jno
xchg
lcall
out
out
adc
fwait
push
mov
mov
mov
frstor
inc
xor
xchg
fwait
pop
xchg
or
fdivrl
mov
in
stc
cmpl
stos
lock
mov
xchg
adc
mov
and
jl
pop
dec
pushw
lcall
push
cmpsb
lds
mov
pop
jecxz
incl
sahf
lcall
dec
add
mov
popa
lds
mov
inc
sub
pop
pop
lock
lret
xor
mov
pop
or
out
add
outsl
mov
jmp
push
pop
repz
and
dec
xor
sub
rorb
jmp
mov
orl
or
mov
in
sti
xor
out
and
mov
pop
mull
mov
test
and
repz
cmc
test
ret
jb
pop
dec
fcmovbe
adc
push
daa
testb
or
sub
out
bound
cltd
jno
test
ja
mov
aaa
cmc
sbb
repz
test
mov
aam
inc
in
cmp
push
and
xor
jmp
lods
test
jno
mov
xchg
dec
jne
int
cmpsl
fidivs
int3
outsb
sbb
pop
dec
xchg
cmpsb
push
cmc
dec
jecxz
loop
insl
mov
xlat
stos
in
inc
ja
pop
or
sahf
inc
mov
jnp
xchg
loopne
testl
jl
pop
adc
mov
push
shrb
je
mov
cs
xor
imul
loopne
add
mov
pop
cwtl
sbb
fisubrl
ret
adc
fwait
mov
push
sbb
ljmp
pushf
jmp
andb
in
hlt
mov
inc
adcb
xchg
leave
je
neg
fwait
mov
push
pop
in
jb
xor
movsb
cwtl
mov
sbb
rcr
push
and
push
lea
loope
mov
js
std
mov
dec
outsb
std
das
push
push
add
pop
jne
mov
call
cmp
fcoml
pextrw
pop
or
xor
mov
pop
and
xchg
adc
mov
inc
xchg
jp
xor
bound
xchg
gs
mov
cli
inc
popa
adc
inc
jnp
inc
mov
pop
hlt
ret
cs
nop
sbb
cmp
inc
push
mov
rcr
mov
fwait
popa
data16
movsl
push
sub
ds
arpl
adc
sub
gs
jo
jnp
sbb
popa
in
sub
in
in
les
sbb
enter
mov
sbb
push
and
cs
into
daa
adc
pop
mov
loopne
loop
jecxz
jl
cmpsl
stc
into
in
inc
cltd
icebp
iret
or
pop
and
cmpsb
adc
flds
and
xchg
add
pop
mov
movsb
shll
mov
inc
test
pop
pop
icebp
daa
pop
cmp
or
lret
fcoms
sahf
push
and
adc
test
dec
xor
push
sbb
inc
jp
jg
popf
pop
sahf
sbb
adc
add
int
int
cltd
test
mov
movsl
mov
mov
iret
pop
nop
mov
sub
cmp
lods
and
mov
xsaveopt
and
inc
cld
push
mov
lods
lret
fs
jbe
or
xchg
popf
fcomp
mov
push
repz
adc
testb
popf
jmp
test
sbb
mov
imul
xor
adc
sarl
jae
loopne
enter
mov
mov
and
push
int3
xchg
daa
in
and
pop
mov
fisubl
lock
xchg
test
sahf
out
or
push
add
mov
lods
stc
xlat
jmp
cld
add
xchg
sub
xchg
mov
inc
mov
pop
jmp
xor
fs
jp
adc
mov
cmp
lock
inc
shll
sbb
cld
xor
xchg
xchg
cltd
inc
adc
mov
shlb
mull
add
push
push
test
cmp
stc
pop
int
mov
or
test
adc
fsubrs
adc
ret
cmp
xor
lcall
lret
in
in
call
into
fwait
pop
daa
xor
lods
outsl
mov
clc
int3
and
mov
xchg
sbb
decb
movsb
popa
pop
fistpll
test
or
mov
ds
inc
xor
push
adc
jmp
dec
outsb
xchg
fimull
aam
xor
rol
insb
push
mov
popf
scas
fsub
pop
sbb
xlat
cld
push
movsl
push
mov
iret
mov
cli
push
lret
cmp
mov
std
lods
sub
ret
in
lods
or
adc
divl
shrb
enter
jns
inc
repnz
aas
xchg
mov
jno
inc
push
xchg
inc
pop
xchg
inc
fsubrl
imul
jae
inc
out
push
dec
enter
xor
ret
lret
imul
mov
mov
das
push
mov
xorb
aad
add
cmp
mov
loope
add
adc
pop
lock
sub
ljmp
js
dec
sahf
sar
push
ss
xor
cwtl
dec
rep
mov
andb
out
inc
jae
sbb
xor
cld
mov
adc
call
lcall
subb
shlb
jnp
jnp
xchg
scas
jbe
ljmp
loop
xchg
adc
pusha
subl
or
fwait
decl
fildll
int3
inc
das
adc
jecxz
and
inc
mov
add
in
adc
xor
ffreep
mov
cltd
and
inc
lret
inc
das
sub
push
lcall
imul
cli
jmp
dec
test
out
fcomip
xor
mov
pusha
sub
fisttpll
push
or
pop
dec
mov
push
inc
fistl
mov
add
int
inc
and
leave
ljmp
mov
ret
add
imul
aas
mov
and
cmpsl
add
leave
and
dec
push
and
xor
mov
dec
in
mov
sub
push
ret
gs
or
les
xchg
icebp
jmp
or
sahf
shrl
cli
cltd
stos
mov
xchg
add
jno
pop
out
cli
outsb
mov
add
or
mov
pop
out
mov
mov
pop
adc
scas
push
adc
xor
repz
fldl2t
mull
dec
int3
dec
pusha
cmpsl
mov
dec
in
loop
fs
fwait
xchg
adc
mov
sahf
cmc
inc
scas
scas
repnz
pop
or
fnsave
adc
cmpl
cld
push
in
push
pop
lds
cmp
rcrl
jmp
loopne
mov
jmp
test
icebp
roll
test
outsb
xor
or
jb
mov
scas
stc
pop
jno
shlb
mov
std
pop
xor
inc
dec
cmp
inc
pop
stos
sbb
mov
rcrb
lret
inc
pop
cs
ja
gs
dec
jle
rolb
popa
push
mov
in
mov
aaa
les
mov
imul
cli
sub
inc
jmp
in
cmpsl
adc
out
insb
mov
inc
icebp
xchg
or
test
mov
je
mov
iret
jne
pop
adc
cmp
jg
out
inc
movzwl
or
inc
gs
out
sti
lcall
leave
jle
mov
fwait
gs
scas
pop
mov
insl
stos
dec
push
dec
call
jecxz
inc
xor
mov
insl
test
cld
cmp
push
adc
icebp
mov
mov
stos
sbb
xchg
mov
test
daa
enter
xchg
inc
mov
jo
sbb
iret
jae
das
cmp
mov
mov
mov
push
and
jmp
xchg
sahf
adc
repz
outsl
lods
data16
add
jb
dec
add
and
movsb
sub
imul
mov
cmc
xchg
pop
cmpsl
xor
mov
push
outsl
xchg
jo
push
inc
and
stos
add
addl
outsb
fs
inc
cmp
in
mov
jmp
and
cli
lods
xchg
inc
in
and
mov
imul
nop
mov
adc
jge
adc
std
and
cs
xor
pop
sub
push
push
or
jge
adc
lods
push
push
jne
pop
loopne
jo
jb
push
icebp
ja
je
out
pusha
add
or
mov
inc
lea
std
inc
xlat
stos
jne
xchg
xchg
loope
pop
ficoms
cmpsb
sbb
shl
or
jmp
cmp
push
subl
sbbl
adc
test
test
insl
push
mov
orb
out
xchg
inc
movsl
loop
sbb
movsb
fisubs
mov
lcall
push
sub
cmp
gs
lret
imul
fcmovnbe
and
lret
ds
pop
imul
xchg
sub
cltd
mov
and
and
je
jnp
xlat
add
cli
dec
mov
dec
lcall
dec
mov
jle
xchg
adc
mov
xor
pusha
ljmp
jae
into
pushf
les
push
or
push
cli
rolb
cmc
pusha
lods
shll
les
mov
rol
bound
pop
popa
mov
daa
pop
inc
ret
test
cmp
jecxz
jbe
cmc
std
nop
push
adc
call
imul
adc
cwtl
sbb
or
and
loop
push
cmp
inc
mov
dec
mov
xchg
scas
push
xchg
out
sahf
inc
sti
lret
jecxz
repz
add
cli
daa
inc
mov
or
int
xchg
sub
jbe
mov
and
aam
pop
mov
lret
push
iret
scas
push
cmp
jg
shlb
jno
test
ss
ret
popa
loope
fucom
pop
icebp
aaa
adc
popf
in
lock
xchg
xchg
pushf
xor
inc
mov
xlat
push
mov
jns
int
aad
sub
and
mov
mov
sbb
fisubrl
pop
xor
aad
pusha
xor
lods
or
push
in
push
cmpsl
leave
arpl
popf
shl
add
mov
out
mov
or
jl
mov
mov
pop
jno
push
sbb
repz
sub
push
and
fdivl
test
nop
xor
cmp
lret
fstl
test
sbb
stc
pop
xchg
cltd
dec
out
push
adc
in
pop
cmp
push
xor
xchg
fisttps
mov
mov
jp
int
in
mov
inc
xchg
test
iret
aam
lret
mov
shll
addl
pushf
mov
push
int
pop
in
jns
call
or
jne
mov
sbb
xchg
pop
push
mov
and
les
or
cmp
ja
data16
aaa
xor
ja
arpl
ds
add
fs
out
push
xor
rolb
add
add
rcrl
gs
jae
scas
push
jmp
sbb
cmp
addr16
popf
or
xchg
push
test
repz
orl
les
es
ss
pop
in
dec
adcb
cld
mov
jecxz
lahf
push
out
mov
adc
sbb
inc
sti
cmpsl
sub
xor
fmuls
ss
cld
aad
out
fsts
andl
outsl
inc
xlat
mov
jb
pop
add
lret
push
push
icebp
xor
and
sbb
or
je
fildll
mov
mov
bnd
stos
test
insl
mov
jecxz
lods
jmp
pop
dec
fcompl
loope
and
mov
shr
scas
sahf
push
push
xor
pop
mov
jmp
sub
mov
cmp
and
sti
lret
je
call
int3
cmp
out
fists
test
adcl
mov
cmp
push
adc
adc
popl
mov
mov
dec
xor
cmp
mov
shr
fsubrl
fidivrs
inc
jo
cmp
and
sub
push
sbb
jae
and
movsb
aaa
inc
adc
jae
adc
lods
pop
xchg
in
xchg
jle
lods
aad
lret
or
pop
lcall
pushf
aam
mov
cmpl
sbbb
dec
sub
les
in
jo
xor
enter
add
out
ror
mov
out
stos
mov
in
jg
outsl
std
lock
mov
lock
sub
mov
lea
sub
and
orl
push
addr16
push
subl
les
push
or
pop
xchg
inc
xchg
jo
jb
pop
scas
and
sbb
mov
cs
push
je
jae
notl
sbb
dec
jecxz
lret
addr16
int
shll
je,pn
pop
scas
insl
lret
inc
dec
or
mov
fcmovnb
scas
outsb
lcall
cmp
stos
jecxz,pn
add
hlt
rol
sbb
mov
outsl
push
add
jb
add
mov
in
xchg
popfw
inc
sub
fwait
shl
divb
dec
xlat
mov
in
or
repnz
ss
loopne
add
data16
and
in
add
lea
jns
dec
test
inc
jl
call
popa
je
in
insb
pop
sti
daa
cmp
subb
cmp
and
leave
xlat
mov
andl
rcrl
or
push
jl
stc
push
mov
mov
imul
cmc
dec
and
ret
inc
pop
sub
pop
les
andl
adcb
gs
stos
lods
rol
jne
jno
sub
lods
loopne
pop
mov
sub
xor
jne,pt
std
rolb
std
incl
add
mov
adc
in
pop
pop
jmp
sti
inc
in
addr16
loopne
call
or
out
pop
jge
mov
ja
sbb
jns
sbb
out
inc
xlat
lcall
add
shl
scas
sub
cli
ja
mov
cltd
addr16
int
adc
inc
cld
and
ds
loopne
adcw
cmp
adc
or
pop
sar
pop
jno
fcoms
push
and
aaa
mov
jo
dec
mov
add
lods
in
xchg
adc
jnp
outsb
popf
push
dec
das
sub
jns
jno
cmp
call
int3
int
cld
outsb
xlat
pusha
sub
push
clc
dec
xor
mov
movsb
push
jl
sbb
inc
lock
fs
fdivrl
bound
jne
or
or
or
out
adc
push
add
mov
decb
pop
xor
pop
leave
mov
in
push
out
xchg
xchg
push
add
push
add
adc
inc
jne
rcll
push
cmpsl
inc
js
aam
add
dec
aaa
push
add
dec
arpl
pop
jnp
test
mov
mov
jbe
pop
shrl
push
sub
jg
mov
fimuls
push
sub
mov
insb
hlt
aaa
mov
sub
lods
xor
push
mov
mov
stos
fidivl
inc
imul
fists
movsb
add
mov
dec
out
xchg
loopne
xor
scas
pop
popa
test
push
ret
loopne
cmp
inc
inc
dec
or
lcall
jb
push
rorl
ret
add
lods
add
stc
cli
es
sbbl
add
mov
mov
jle
das
test
xlat
sahf
xchg
dec
cltd
test
mul
mov
push
rolb
xchg
in
push
loope
and
fidivs
rcrb
fstl
mov
cld
pop
sbb
pop
pop
cmp
sbb
in
imul
adc
lds
lds
add
cmp
cmpsb
mov
pop
insl
roll
cmpsb
loop
sub
push
xor
push
and
mov
xchg
movsb
or
movsb
aam
add
sbb
test
scas
add
frstor
xchg
fnstcw
and
dec
fs
insl
inc
sbb
out
ficoml
fimull
pushf
push
daa
mov
ds
stos
hlt
frstpm(287
and
fnstcw
lods
dec
je
sbb
repz
popf
dec
in
cmp
dec
adc
cmp
lods
mov
xchg
mov
mov
ja
clc
insl
add
add
jns
icebp
push
mov
pop
mov
xorl
xchg
bound
xchg
xor
out
mov
loope
xchg
sbb
cmpsb
es
sub
xor
adc
ud2
loopne
dec
in
mov
cmpsb
call
fcoml
leave
mov
pop
out
push
and
xchg
xlat
and
in
je
mov
inc
lahf
lods
pop
sub
inc
in
cld
loop
sbb
and
mov
inc
xor
fbld
sub
leave
inc
mov
ror
mov
sub
ret
jb
lods
aaa
lret
cmp
sub
pop
cmpsb
pusha
mov
lahf
in
add
mov
inc
adc
and
divl
inc
push
mov
adc
ss
jbe
mov
je
xorb
mov
fildl
xchg
cltd
and
mov
scas
fnsave
jno
mov
pop
inc
subb
lcall
and
faddl
jecxz
mov
movsb
outsl
call
and
sar
scas
addr16
scas
ret
jmp
lahf
mov
pop
aas
xchg
movsl
dec
push
stos
ret
cmpsb
fsubrl
add
dec
outsb
test
daa
mov
xchg
cmp
jecxz
lea
daa
and
mov
jp
mov
xor
insb
inc
mov
into
nop
xchg
nop
popf
aas
jns
jae
mov
in
ljmp
out
stos
ret
sub
or
xchg
or
icebp
inc
push
popf
add
add
add
mov
scas
inc
push
pop
push
stc
xor
test
sbb
stc
mov
pop
dec
sub
xor
mov
mov
out
mov
clc
nop
mov
or
mov
pop
in
stc
mov
cmp
pop
jle
cmp
repnz
fsub
scas
lret
leave
test
mov
pop
dec
insl
lcall
sbb
jbe
jmp
movsb
mov
cmp
fidivrl
cmp
stos
int
into
pop
jp
sub
mov
and
sbb
mov
xchg
mov
push
or
mov
ja
mov
outsb
lret
dec
mov
push
out
sti
dec
insl
and
pop
stos
cli
push
andl
out
sahf
mov
orl
push
testl
push
inc
lret
lock
rcrb
stos
int
sbb
sbb
pop
mov
pop
lods
fnstsw
lds
xlat
repz
in
or
xor
push
in
bound
enter
mov
adc
andl
call
lret
jnp
rorl
jmp
and
lods
pop
xor
push
scas
inc
imul
jge
adc
movsl
sbb
mov
arpl
adc
repz
fldenv
mov
ljmp
sub
lret
xor
push
insb
shll
das
in
mov
out
arpl
sti
dec
popa
popl
pop
push
sub
jns
in
sbb
iret
negl
add
js
cmpb
jbe
adc
dec
dec
sbb
call
push
pushf
in
push
adc
mov
and
inc
sbb
fldcw
inc
aad
cmpsl
inc
movsb
inc
stos
push
jne
adc
test
add
pop
lods
setl
nop
je
cmp
inc
dec
in
inc
jp
fsubrs
push
out
mov
add
movsl
lea
fidivl
sub
imul
jbe
in
and
popa
cli
movsl
cld
pop
add
and
cltd
mov
js
push
inc
adc
lret
in
pop
mov
pop
movsb
xor
pop
scas
in
dec
fmuls
rcll
sbb
jl
in
sbb
xor
fcoml
stc
int3
cs
jle
lcall
mov
mov
mov
xor
in
pop
jg
adc
js
push
jg
pop
test
inc
insb
push
lods
mov
pop
scas
adc
dec
or
dec
cld
push
push
mov
fisttps
xor
movsl
sbb
cltd
movsb
adc
sub
mov
aaa
out
daa
push
test
jecxz
or
cmp
or
repnz
add
push
imul
pushl
popa
cmp
pop
xor
ret
pusha
in
cltd
rcrb
sub
test
andl
lret
inc
add
pop
popf
les
pop
adc
mov
arpl
loope
mov
xchg
sub
stos
icebp
jle
inc
sub
adc
mov
les
push
bound
pop
jecxz
loope
inc
pushf
sub
cld
fidivl
mov
cli
inc
push
mov
cmp
notb
sbbl
dec
lods
insl
stc
loope
and
xor
or
push
pushf
dec
enter
adc
jb
into
cmp
and
lods
loope
add
sbb
cmc
push
lret
mov
pop
dec
int
scas
xchg
jmp
rol
inc
jp
pop
ds
jbe
lock
imul
push
jbe
jne
push
movsl
lea
popa
lret
andb
cmp
push
sub
divb
scas
test
outsb
xchg
adc
mov
int
mov
pop
add
addb
add
lds
pushw
aad
and
xchg
in
dec
or
push
cmp
jbe
aas
sbb
sub
out
mov
decb
lahf
cld
shl
dec
stc
xor
pop
stc
adc
testl
pop
dec
int
xor
inc
test
call
jmp
pop
jmp
jnp
cmpsl
mov
loope
push
pop
les
dec
icebp
pop
xchg
shlb
mov
outsl
rclb
arpl
or
mov
and
or
xlat
sahf
jbe
push
ret
loopne
dec
cmpsb
xor
cmp
push
orb
arpl
cmp
cmp
push
out
xchg
mov
roll
mov
adc
sub
xchg
loopne
jbe
ffree
xchg
jge
sub
cmpsl
fcoms
out
out
fwait
jnp
cli
lods
cmp
imul
or
mov
pop
jle
pop
or
rorl
clc
sbb
jno
pop
jo
xor
cmc
jl
lret
leave
repz
movsl
sbb
lret
in
iret
ret
insl
int
push
and
aaa
jne
sub
cs
fmuls
dec
lcall
sub
add
call
inc
leave
inc
push
pop
mov
cs
cmp
mov
mov
add
in
scas
adc
adc
lcall
pop
stos
mov
cmc
cmp
push
mov
and
js
mov
and
es
roll
ss
add
sti
js
push
arpl
cli
xchg
into
mov
pop
sub
fmuls
test
sbb
cmp
mov
and
sbb
sahf
popa
pop
jp
mov
outsb
push
mov
cmp
outsb
cmp
xchg
and
dec
cmp
inc
subb
outsb
test
xchg
in
popf
jp
jl
hlt
test
lods
imul
nop
pop
les
pushf
xchg
cwtl
orb
push
sahf
xlat
mov
or
incl
pusha
negl
inc
mov
lea
xlat
bound
js
and
adc
dec
std
sbb
test
cmp
sbb
jno
rorl
das
jo
xchg
sbb
cmp
sarl
xlat
cltd
inc
or
ja
jne
roll
add
dec
out
in
cs
pop
imul
mov
lcall
add
lcall
iret
movb
add
mov
mov
stos
dec
add
and
std
insb
mov
and
orl
dec
dec
and
cmp
sub
aas
int3
fistpll
incl
sbbb
gs
mov
mov
adc
push
inc
cmpl
ss
pop
fdivp
daa
sbb
std
adc
jle
into
mov
inc
gs
dec
pop
lret
xor
psubusw
cs
add
xchg
pop
xchg
fs
mov
push
int
jecxz
data16
add
data16
xchg
fucomi
adc
xlat
inc
inc
mov
aaa
adc
cmp
jo
das
dec
fistpl
mov
mov
mov
lds
jmp
mov
lods
cld
adc
dec
and
cmp
rcl
pusha
loop
sbb
stc
mov
xchg
js
fdivs
mov
iret
adc
out
jns
cltd
jmp
cwtl
rorb
ret
or
dec
test
dec
cli
inc
lds
and
in
add
enter
lds
mov
pop
mov
mov
cmp
aad
xor
inc
scas
mov
add
dec
jb
lds
fldenv
cmp
mov
inc
icebp
rorb
push
popf
mov
pop
mov
sbb
aas
aam
es
call
jo
adc
out
dec
bound
movsl
mov
xchg
mov
ja
lret
mov
daa
xchg
outsb
mov
ds
sarl
pop
lret
popf
and
mov
lock
pop
mov
or
mov
sbb
mov
add
xor
jnp
dec
sbb
mov
les
xchg
xor
mov
popf
test
imul
aam
mov
adc
mov
outsl
imul
sbb
fs
adcb
stos
test
pop
pop
jno
sbb
mov
xchg
adc
jge
andl
sbb
dec
popf
dec
repnz
xor
push
loope
add
ljmp
out
mov
mov
shll
adc
repnz
lds
sbb
inc
xchg
enter
mov
or
stos
pushf
insb
cmp
mov
mov
jmp
mov
je
dec
pop
rcll
cmp
lock
cld
lcall
adc
adc
jne
inc
imul
data16
leave
or
push
insb
mov
mov
insl
aad
std
add
scas
push
add
xor
cmp
inc
jge
cld
or
dec
test
imul
lcall
pop
sub
xor
jo
jg
sub
fisubrl
xchg
pusha
xor
cmc
add
cmp
cs
ss
xor
push
add
adc
pop
ss
repz
fidivl
movsb
test
inc
push
mov
pop
jae
inc
rorb
aad
cli
jae
inc
mov
mov
push
negb
jmp
and
jecxz
sub
xchg
sbb
fnsave
jb
movsb
mov
inc
mov
inc
push
cltd
mov
dec
pop
and
sbb
es
sbb
cmc
mov
rorl
ljmp
clc
mov
in
pop
inc
jae
and
dec
jge
or
stc
test
in
sub
in
sub
cwtl
mov
jmp
adc
ja
xor
into
and
dec
leave
xchg
stos
scas
add
dec
and
int3
aas
shlb
cmp
arpl
cld
in
loope
fs
in
mov
pushf
in
jb
lds
xor
ffree
pop
loop
pop
add
out
pushf
push
jl
or
dec
cmp
dec
jcxz
test
daa
std
or
inc
scas
pop
aaa
mov
arpl
fiaddl
call
ss
mov
sbb
addl
jle
xchg
adc
inc
shll
mov
into
loope
mov
je
mull
sub
aas
ss
fst
mov
faddp
pop
push
pushf
dec
jmp
push
and
jb
mov
cmp
shrl
icebp
xchg
xor
jl
dec
scas
push
icebp
pusha
gs
pop
mov
bound
add
add
fldcw
out
test
xor
fimull
int
mov
add
xor
andl
aas
xchg
cmpsb
enter
lret
aam
cmp
lods
add
test
repnz
add
cwtl
inc
xchg
es
cmp
jmp
mov
mulb
fs
push
int3
gs
cmp
push
pop
push
test
dec
imul
dec
or
push
xchg
and
or
adc
dec
xchg
pop
add
sbb
mov
jecxz
movsl
mov
ds
jne
xor
stos
jae
divl
int
shll
inc
out
call
repz
pop
pusha
repnz
aam
adc
cmp
arpl
push
fs
dec
cs
or
js
nop
stc
sbb
cmp
dec
outsl
cltd
jno
adc
lahf
fnstcw
mov
cmpsl
mov
xchg
and
xchg
add
pusha
sahf
int3
imul
jp
push
dec
dec
mov
ret
in
mov
loopne
stc
pop
cli
or
add
ljmp
das
out
hlt
test
js
iret
repnz
xchg
clc
mov
scas
es
jmp
arpl
dec
push
xchg
call
popf
into
fstl
sub
pop
sahf
dec
dec
jbe
aas
pusha
aad
repz
enter
in
fwait
sbb
jmp
push
xchg
sbb
lret
cmp
sub
lds
stos
repz
mov
xchg
popa
jb
adc
mov
cmp
jo
nop
fbld
jl
pop
daa
ja
lea
xchg
daa
adc
icebp
fidivrs
out
sbb
test
add
adc
dec
xchg
in
xchg
rcr
add
or
sbb
cwtl
xor
dec
ljmp
out
mov
loope
sbb
mov
or
sbb
subl
aad
repz
cmp
jmp
loopne
add
jle
cmp
or
hlt
sbb
pop
pushl
sbb
popf
mov
sbb
sub
push
data16
inc
inc
sbb
aas
decl
adc
mov
dec
out
jne
sbb
push
test
jns
cmp
rorl
inc
sarl
and
movsb
adc
ss
mov
cmpsb
rcr
sar
xchg
iret
mov
add
pop
cmpl
or
cmp
data16
jo
ret
inc
out
js
xchg
sub
jno
add
shr
add
outsl
sub
das
arpl
pop
xchg
aas
mov
jno
adc
data16
xchg
dec
add
sbb
push
sti
adc
dec
outsl
ss
mov
add
fdivs
jmp
inc
jb
mov
in
push
inc
pop
adc
dec
hlt
xchg
sahf
and
push
push
dec
cmpsb
inc
stc
notb
pop
inc
mov
dec
xor
or
and
jecxz
outsb
das
push
xchg
cmp
enter
jns
mov
leave
lahf
in
jae
xchg
cmp
push
andb
mov
mov
clc
or
xchg
stos
fsubs
mov
xchg
jb
xor
pop
in
push
mov
das
sbb
rolb
lret
jne
jns
jmp
ficoml
stos
decb
sub
add
out
mov
mov
and
adc
pop
pop
fadds
push
lret
sbb
pop
fadds
sub
or
or
adc
test
lock
adc
stos
mov
inc
cmp
add
jmp
cmpsl
sbb
sarl
inc
mov
enter
mov
mov
movsl
jecxz
pushl
test
cmp
sti
pop
mov
adcl
dec
out
invd
test
int3
dec
xchg
mov
adcb
movsl
sti
mov
mov
out
sarl
jns
xchg
imul
jbe
sbb
sbb
push
mov
cs
jecxz
mov
push
out
cmc
push
xlat
and
push
cmp
stos
fs
add
scas
and
andb
lret
sbb
ret
bound
lds
out
mov
push
movsb
mov
movsb
loope
lret
and
rolb
cmp
in
out
movsl
cmp
mov
fwait
adc
mov
mov
lds
dec
aas
sbb
cltd
mov
stc
fnstenv
inc
sbb
add
repnz
mov
pmaddwd
jo
xorb
mov
imul
mov
cmp
in
jb
ret
shll
shrl
rclb
xorb
jno
sbb
push
insl
mov
aad
jno
dec
lret
ljmp
js
or
mov
jle
popf
pop
inc
xchg
ret
sub
inc
in
shrb
pop
lret
daa
stc
pop
sbb
jno
sub
pop
cmpl
cmpsb
testb
inc
sti
iret
into
mov
add
adc
mov
sbb
outsl
cs
inc
ret
push
pop
push
mov
mov
xchg
stc
push
test
add
jp
pop
in
sub
arpl
ja
xor
ss
pop
call
aaa
sbb
enter
mov
and
mov
push
mov
or
and
lock
bound
dec
and
arpl
xchg
xchg
xchg
mov
lret
xchg
int3
daa
mov
sbb
adc
push
mov
adc
mov
int3
push
stc
pop
xor
mov
arpl
pop
pop
aas
lock
imul
jne
push
loopne
cs
sahf
je
dec
or
dec
xor
enter
dec
aad
hlt
mov
mov
shl
outsb
fwait
push
lods
ret
dec
pop
push
mov
cmp
cs
mov
xchg
call
or
lock
cmp
popf
jl
js
lods
inc
rclb
sbb
xchg
sbb
mov
mov
cmpsl
and
pusha
dec
fidivl
scas
hlt
mov
xor
mov
mov
jg
dec
lods
dec
test
mov
xchg
dec
in
push
ret
mov
shlb
mov
popa
shr
cwtl
pop
xor
cmp
xor
jp
fs
shrl
psadbw
add
mov
push
int
dec
jle
idiv
lahf
movsl
ret
dec
mov
les
dec
mov
and
jmp
cmp
aaa
mov
mov
lret
adc
xchg
mov
sbb
add
fs
mov
dec
mov
add
cmp
inc
fiadds
push
call
out
sahf
adc
or
cmpsb
cmp
out
pop
inc
loop
sbb
xor
add
cwtl
adc
jl
jo
shll
and
xor
shlb
push
xchg
mov
dec
xlat
icebp
ja
add
fstps
xor
dec
mov
out
insb
div
js
pop
mov
add
pop
sbb
jno
inc
cmp
or
or
decb
rolb
xchg
pop
push
cmpb
lods
loop
mov
inc
lods
iret
pop
push
cli
push
nop
jmp
xorb
es
adc
mov
mov
fs
jp
shrl
inc
cld
cld
cmc
jecxz
pop
cmp
leave
mov
mov
adc
int
add
jecxz
fldl
fimull
push
fldcw
iret
ds
push
push
adc
aaa
aad
not
repz
fldt
ficompl
jl
mov
and
and
and
in
dec
inc
stos
jae
mov
popf
jp
pop
test
arpl
shlb
test
inc
jae
jp
mov
mov
add
sti
in
jae
jmp
xchg
out
mov
out
sbb
jbe
or
pop
je
or
loopne
stc
insb
and
xchg
inc
cmp
fdivl
cmpsb
cmpsb
mov
xchg
ja
push
stc
cmp
mov
or
out
lret
mov
cmp
test
movsl
sub
sbb
push
and
and
in
mov
frstor
push
scas
pusha
repnz
jne
jbe
and
fcomps
jg
decl
mov
push
pop
cmc
es
add
adc
add
mov
icebp
and
cmp
in
shlb
popa
jae
or
pop
enter
insb
jae
int
gs
sub
adc
lret
jne
sub
xlat
sar
push
icebp
sbb
adc
and
movsl
lock
out
lods
xchg
test
and
int
iret
mov
add
mov
mov
jp
lds
adc
mov
int3
popf
pop
push
xor
lods
add
push
test
mov
xchg
pop
push
xlat
js
in
lahf
mov
scas
leave
pop
pop
dec
stc
xor
mov
cmp
mov
xchg
sbb
mov
lods
mov
bound
pop
fldcw
adc
movsb
push
jno
ljmp
popf
daa
out
ljmp
aam
jne
data16
dec
cmp
push
cmpsb
das
add
push
dec
jmp
fs
sbb
pusha
dec
pushf
and
lods
and
imul
xchg
aam
pop
add
imul
add
cwtl
lock
xor
inc
sbbb
out
icebp
hlt
pop
scas
sub
jl
testb
xchg
mov
mov
cli
shlb
enter
js
xor
aam
cmp
sub
cmpsb
gs
adc
lea
scas
icebp
push
mov
popa
iret
ror
and
mov
les
cwtl
sbb
push
mov
mov
inc
or
clc
clc
pop
stos
inc
fs
rol
jo
popa
dec
hlt
mov
or
aam
lds
mov
mov
divb
in
push
add
shll
pop
push
arpl
push
mov
cmpsl
push
aas
test
adc
daa
repnz
mov
mov
pop
push
aaa
push
test
negl
xchg
mov
pop
nop
stos
shrb
add
cli
mov
xchg
imul
jbe
outsb
adc
aaa
sahf
cli
popa
adc
call
aaa
inc
sbb
sbbl
and
add
adc
call
sahf
repnz
sbb
fisttpll
cs
cmc
sbb
and
jae
iret
xor
cmp
jg
movb
stc
cmp
test
xor
gs
into
in
jne
add
loope
xchg
pop
and
rolb
cmp
les
pop
es
sub
sbb
xor
pop
mov
xchg
cs
cmp
lcall
daa
sbb
push
not
jb
inc
and
out
insb
call
or
pop
dec
cli
mov
jne
lret
xor
lods
imul
in
test
loope
xchg
icebp
pop
ss
push
lods
jo
sbb
fstl
xor
mov
cs
and
xor
dec
mov
nop
sbb
es
jbe
ljmp
hlt
lret
addl
and
sub
fbld
es
fimull
clc
xchg
icebp
push
jecxz
imul
outsl
data16
cmc
xor
sub
loop
lcall
and
inc
stos
mov
sbb
inc
mov
in
out
mov
fwait
xorb
inc
mov
sub
sub
ds
out
jno
or
and
test
xor
sub
scas
mov
fstpl
mov
pop
and
push
js
shlb
ret
popa
dec
aaa
sub
sub
ja
push
xor
push
cmpl
jle
mov
inc
scas
lcall
movsb
xchg
je
int
xor
mov
call
dec
cmp
and
xchg
rorl
inc
imul
jbe
sub
mov
movhps
adc
test
jae
stc
sub
push
adc
mov
sbbl
imul
cmp
pop
clc
pop
xchg
sahf
call
add
imul
out
pop
xlat
xlat
cli
add
mov
push
fs
lret
mov
push
or
iret
mov
xchg
outsb
xchg
adc
dec
fdivrl
lock
push
jbe
mov
dec
addr16
jno
push
leave
jne
cli
aaa
xchg
and
mov
outsl
cmp
add
cmpsb
int
add
pop
shrl
aaa
sbb
or
loopne
push
lock
jo
popa
outsb
mulb
jae
lret
push
sub
add
push
sbb
mov
iret
out
std
ja
mov
xor
in
pushf
jo
dec
arpl
nop
inc
dec
xor
sti
lahf
cmpsb
test
inc
mov
mov
add
je
or
sub
movsb
jnp
imul
cli
popa
inc
push
popf
mov
test
movsl
stc
out
stos
adc
ret
adc
cmp
and
sbb
outsl
inc
or
mov
shrl
daa
or
xor
jp
or
push
out
cmp
jg
jp
or
fisttpl
lcall
dec
xor
daa
cli
lods
inc
xchg
mov
inc
xor
mov
in
out
and
mov
xor
shrl
les
movsb
out
rcll
mov
pop
mov
cmpsl
xlat
cli
or
pop
sub
dec
mov
and
imul
inc
bndstx
test
scas
mov
fidivrl
pop
lret
ljmp
mov
jecxz
hlt
mov
push
pusha
fwait
pop
rcrl
jae
mov
fcomp
or
add
sbb
ret
mov
add
fbld
js
mov
push
repz
arpl
lock
lock
hlt
mov
fisttps
call
add
es
movsl
in
cmp
mov
jne
pop
aad
repnz
jl
jp
mov
lds
xor
pop
xchg
lret
pop
les
ret
incb
jge
sbb
mov
js
test
or
xor
pusha
inc
cmp
fistpll
loop
pusha
push
fistpll
push
xor
cmp
push
or
inc
xor
dec
mov
xchg
jo
or
mov
and
ret
lret
je
xor
pop
hlt
stos
xor
inc
add
jge
mov
sbb
mov
push
aam
ficompl
dec
mov
or
in
sub
mov
les
lea
pushf
arpl
movsl
push
and
xor
xor
mov
adcl
xor
xlat
pop
test
sub
xchg
shl
mov
xor
data16
jmp
daa
mov
mov
int
imul
iret
push
ficoms
in
ret
popa
jge
cmp
lods
hlt
dec
jl
mov
adc
wbinvd
icebp
aaa
cmc
or
pop
test
gs
mov
push
pop
outsb
lods
xlat
sbb
inc
filds
sub
pop
loop
xor
fsubs
or
push
mov
or
mov
loop
ljmp
int3
outsb
cmpsb
jle
insb
sbb
sub
dec
adc
push
bound
ljmp
dec
test
test
arpl
xchg
push
mov
inc
lret
inc
repz
sti
mov
hlt
push
daa
sbb
in
out
or
jl
test
jo
cmp
cmc
test
popa
xor
je
popa
mov
pop
or
js
movsl
std
xor
jne
pop
xchg
shll
call
daa
scas
xchg
pop
mov
push
pop
enter
mov
pop
dec
sub
in
stos
dec
sti
pushf
sbb
mov
shl
push
fwait
arpl
sbb
or
addb
icebp
shll
pushl
icebp
inc
pop
adc
enter
push
sub
lahf
sub
fdivr
jbe
cli
ret
push
in
int3
or
aam
pop
pop
dec
adc
and
cs
popa
jge
pusha
je
mov
xorb
in
pop
andb
nop
cltd
cmp
mov
icebp
jp
push
fisttpll
sub
mov
ret
repz
lret
outsb
push
shlb
mov
int
dec
and
add
scas
insb
pushf
dec
or
and
sub
adc
iret
mov
xor
out
jge
xchg
xchg
mov
aad
xor
mov
sbb
aaa
fsubr
cmp
jmp
pushf
pop
movsl
jae
cmp
dec
shlb
jle
out
xchg
call
mov
shlb
dec
popa
inc
bnd
add
push
push
call
mov
mov
sarl
mov
mov
sub
push
ss
dec
jae
push
push
mov
pop
mov
xchg
pushf
adc
dec
xlat
mov
leave
adc
fidivrs
xor
or
mov
rcll
mov
std
dec
insb
or
jp
test
xchg
leave
xor
loope
addr16
sub
das
push
shrb
cli
aas
movsb
out
push
xor
add
popf
notl
popa
pop
sahf
mov
mov
add
insl
inc
xchg
pop
mov
dec
leave
dec
and
cmp
loope
decb
add
scas
loopne
and
cwtl
cmpsl
and
out
negl
testb
push
adc
xchg
fisttpl
push
pop
lret
mov
ss
mov
gs
aam
mov
fisubrs
bound
inc
pop
push
sbb
fstpl
ret
je
dec
xchg
outsl
mov
dec
lock
push
jmp
fwait
mov
mov
fsubp
mov
adc
cmp
sub
sar
jmp
fiadds
push
xor
jbe
mov
vmread
lcall
ret
mov
push
fcmovnu
incb
and
push
pop
xor
push
pop
mov
xor
xchg
testl
mov
das
int
pop
mov
and
sbb
or
pop
subb
iret
popf
add
mov
cli
sub
cmp
mov
mov
bound
lock
mov
notl
popa
cmp
or
lret
pop
adc
imulb
mov
mov
mov
and
sbb
adc
arpl
pop
ja
lods
mov
xor
sbb
pop
xor
pop
mov
mov
adc
fisttpll
rcrl
push
mov
stos
inc
enter
enter
pop
call
mov
add
scas
jnp
cltd
scas
out
sub
ret
jl
pusha
rcrb
test
fwait
mov
mov
pop
mov
mov
out
stc
inc
jmp
lret
inc
xor
rclb
pop
jno
pop
mov
push
movsl
adc
int
inc
fidivrl
repz
sub
bound
lods
jmp
mov
ficoml
push
mov
lea
push
mov
sbb
ret
push
out
mov
jnp
xchg
sbb
mov
jl
int3
mov
cmp
pop
imul
cmp
jb
sti
imulb
shlb
pop
inc
push
fbstp
xor
mov
mov
fnstenv
lahf
test
xlat
js
js
int3
stc
andb
rorb
ret
rol
and
sbb
sub
jns
push
adc
jb
sub
lods
aad
cmp
xor
and
and
and
jge
or
adc
dec
add
pop
mov
xor
jb
xor
or
fadds
jae
fs
xlat
xchg
sbb
mov
xsha256
cmpsb
adc
sub
out
mov
push
xchg
je
cmp
loopne
fmuls
mov
inc
jne
or
mov
push
xchg
lret
sbb
jno
cmp
and
lret
sti
cs
mov
dec
xor
das
fsubl
filds
fimull
cmpsl
xchg
mov
shr
mov
sarl
xor
or
enter
sub
loope
and
lods
cmp
inc
jns
addl
adc
jg
aad
jnp
mov
test
je
pop
mov
popa
add
shl
mov
adc
jbe
adc
lock
push
dec
daa
out
dec
inc
fdivrl
test
push
jno
inc
jmp
push
cmp
push
dec
mov
scas
jecxz
fisubl
or
add
or
ret
sbb
adc
out
clc
jo
vaddsubpd
mov
add
inc
mov
add
cmp
push
jne
and
mov
mov
or
gs
or
sti
jmp
fbstp
pop
rcrl
sahf
xchg
mov
push
or
dec
enter
cs
adcb
test
clc
pop
xchg
sti
lret
js
push
psubb
cld
js
fstpl
xor
in
add
jbe
add
xor
test
aad
leave
inc
sub
stc
add
pop
aad
lock
bound
dec
int3
cmp
ret
xchg
mov
testl
std
or
mov
jns
in
sbb
jge
sub
xchg
jl
adc
xor
mov
lods
sahf
adc
ret
mov
inc
or
pop
loop
xchg
mov
cmp
js
lcall
das
or
data16
cmp
call
jmp
sub
add
and
ljmp
ds
scas
sbb
inc
sti
bound
ss
ds
rcll
jno
sub
stc
add
dec
adc
inc
subl
inc
push
sbb
mov
ja
in
adc
aas
push
xchg
push
push
or
jnp
pushf
clc
dec
mov
mov
jl
enter
test
xchg
ret
lcall
fldcw
mov
xchg
icebp
gs
nop
mov
pop
mov
dec
ret
jae
sub
test
pop
inc
mov
jecxz
sti
outsb
pop
xor
xor
mov
adc
jecxz
cmp
or
lret
sti
sub
repz
pop
addb
sbb
movsb
adc
mov
mov
insb
jae
ret
cmp
inc
mov
jmp
movb
fdivrp
jp
pushf
repnz
sub
ficoml
cmp
or
push
je
jb,pn
ljmp
xchg
add
xor
mov
out
push
mov
jp
in
movsb
or
or
cli
dec
and
add
mov
inc
sbb
inc
mov
and
sbb
mov
loop
xchg
adc
dec
icebp
jl
insb
xchg
aaa
cld
and
xchg
aam
add
sahf
popf
loop
jl
xor
aam
fiadds
inc
dec
xor
lea
out
scas
adc
mov
adc
sbbb
jl
iret
cmpsb
sbb
test
mov
pop
add
or
pop
adc
add
mov
jmp
mov
or
arpl
pop
pop
jb
idivl
loopne
ret
gs
in
pop
mov
push
xchg
mov
cld
pop
test
shrb
data16
sarb
xlat
jmp
loopne
cmp
prefetcht1
sub
shrb
jmp
cmp
outsl
jp
or
pop
ss
scas
divb
cmp
xchg
ds
jge
pop
insl
pop
inc
adc
sbb
sbb
fdivrl
mov
insb
scas
dec
stos
nop
flds
and
mov
fimuls
int
xor
xor
jo
test
divb
or
xchg
loope
pop
mov
divl
mov
movsb
fbld
test
inc
dec
pop
mov
mov
andb
inc
fnstsw
inc
outsl
ja
jecxz,pn
mov
lret
sti
adc
in
cli
fiaddl
dec
shll
adc
add
test
addr16
or
adc
shrl
and
in
lret
loope
inc
mov
dec
addl
hlt
push
enter
sub
inc
lods
push
sub
pop
push
dec
inc
scas
inc
testl
jmp
daa
ror
add
push
test
dec
and
repnz
faddp
pop
pushl
and
xor
xchg
pop
addl
popf
cmp
test
rclb
cmp
push
mov
jno
negl
pop
icebp
sbb
dec
jecxz
divb
lods
insb
pop
sub
out
inc
pop
push
dec
lret
add
sbb
fs
mov
pop
pop
add
mov
scas
dec
mov
shl
fidivrl
ja
or
adc
dec
inc
lcall
dec
in
test
jecxz
notl
cmp
jp
pop
rcrb
cmp
pop
sbb
xchg
xor
mov
pushl
lea
je
inc
aas
repnz
cmp
mov
mov
cmp
cmp
adc
cwtl
cmpsb
dec
das
fsubrs
dec
cmpsb
push
add
cmpsl
mov
movsl
add
pop
push
add
mov
fdivp
mov
mov
add
loopne
out
imul
pop
push
fsubr
pop
test
push
mov
push
jg
imul
popw
xor
cmpsl
jge
nop
adcb
dec
arpl
xor
inc
pushf
mov
or
sahf
and
popf
push
aaa
arpl
aaa
popa
lret
div
repnz
mov
lods
and
jb
aam
mov
sbb
mov
add
pushf
stos
xor
jecxz
repnz
out
xchg
pop
xor
xchg
mov
cwtl
xchg
mov
push
jns
pop
pop
jns
lahf
fsubrs
addb
mov
insl
mov
pop
xor
mov
xchg
ss
pop
cmpsl
addr16
lret
push
or
inc
xor
addb
inc
cli
pop
cmp
in
adc
js
xchg
push
clc
pushf
stc
xor
mov
mov
push
stc
repz
shll
loop
std
push
fnsave
sbb
arpl
add
decl
jbe
push
jno
inc
add
sahf
popa
sbb
insb
orb
or
dec
mov
push
cmpsl
mov
add
xor
push
int3
push
and
and
out
inc
inc
movsl
mov
push
leave
cli
leave
aad
into
andb
decb
mov
fwait
add
xchg
mov
int3
cld
cwtl
loope
dec
loope
dec
adcl
shlb
ret
cmp
jge
aad
orl
push
and
mov
fwait
stos
stc
dec
push
fndisi(8087
push
hlt
mov
pop
xor
jne
insl
sahf
xchg
or
cmp
sub
outsb
push
enter
mov
jl
repnz
mov
mov
push
jl
inc
aad
sahf
push
movsb
jae
cmc
test
jg
sbb
push
pop
xchg
push
cmp
test
mov
ljmp
fists
into
jae
roll
pop
ljmp
push
sub
data16
or
test
out
lret
xlat
lret
pushl
sbb
fs
sub
jge
aam
sub
dec
mov
sbb
adc
fsts
adc
jns
jno
fisttpl
fs
lcall
insb
outsl
aad
hlt
cltd
adc
sbb
xor
xchg
jle
loopne
mov
rorl
loopne
add
js
push
out
push
mov
push
ss
sub
pop
push
or
in
lahf
js
mov
pop
pop
or
and
dec
adc
inc
lds
outsl
lahf
sbb
ljmp
jg
in
mov
insb
notb
push
sbb
mov
dec
imul
push
mov
sbb
and
insl
pushl
repnz
clc
imul
sbb
movsb
jbe
pop
inc
jbe
test
pop
mov
jp
notl
sub
outsl
enter
lret
roll
push
repz
push
add
xchg
sbb
mov
imul
imul
dec
testb
in
ljmp
mov
sub
lds
push
popa
pop
cmpsb
fucomip
idivl
orb
mov
cld
jbe
int3
sub
in
inc
rorb
nop
mov
add
adc
lods
fwait
inc
pop
data16
loop
in
sub
push
aam
jbe
xor
shlb
push
sti
test
cmpb
or
push
shl
pop
jnp
dec
test
inc
int3
ret
xorb
sub
cmpl
and
fwait
or
sub
ficoml
scas
ds
cmp
mov
adc
mov
add
das
arpl
sub
sbb
iret
inc
inc
stos
xchg
lret
int
lock
aaa
dec
daa
cmp
lock
sahf
and
push
xor
cmp
cmc
andl
je
sub
xor
cmpsl
dec
mov
or
jmp
add
mov
cmc
fnstsw
mov
dec
sub
rclb
xorl
into
add
fs
data16
test
jns
orb
lods
inc
out
push
cld
testb
mov
add
dec
imul
or
rorl
loopne
inc
lods
cmp
push
pusha
inc
arpl
mov
icebp
jne
add
push
outsl
or
mov
xchg
bnd
jl
loop,pn
pop
loope
cld
in
pop
shrl
or
and
ret
in
test
add
mov
dec
adc
test
mov
sbb
mov
insb
sbbb
popf
cmp
add
pop
cltd
push
sbb
lods
or
xor
fwait
pop
inc
aad
out
dec
hlt
fstpt
cmp
incl
daa
and
test
sub
iret
lock
je
in
fldlg2
mov
mov
nop
andl
call
je
mov
in
adc
arpl
fdivl
sti
xchg
repz
mov
scas
cs
or
push
insl
pop
inc
fwait
jp
imul
movsb
sbb
cmp
jae
fidivs
scas
cmp
sub
subl
in
xchg
fsubrs
push
xchg
jns
xchg
sbb
pop
rorb
inc
std
les
xchg
lret
sbb
lds
lock
and
inc
jle
idivb
scas
and
fstl
subl
sbb
lods
inc
loop
fildl
mov
rcll
icebp
fs
pop
popf
sub
xchg
mov
cmc
mov
test
or
cmp
push
imul
popf
rorb
and
lret
xor
xchg
push
in
mov
pop
inc
mov
mov
pusha
sub
subl
je
sub
lcall
outsb
in
sti
jno
xchg
int3
jmp
mov
fiadds
lahf
and
pop
mov
ja
dec
add
mov
in
jmp
mov
pop
ficoml
fld
jl
repz
xchg
les
push
ds
mov
and
dec
fs
popa
xchg
xchg
cmc
out
cmpsb
dec
out
sbb
and
mov
mov
mov
into
fldt
test
cmp
sub
in
fwait
shrl
cmp
add
dec
push
cmp
pop
cmc
test
mov
rolb
pushf
add
out
xchg
mov
ret
ds
das
mov
mov
mov
cmp
call
dec
fiadds
outsl
aaa
gs
lds
call
or
popa
inc
push
and
scas
fnstenv
rorl
scas
push
shrl
dec
add
mov
cmpl
inc
or
cs
rcl
int3
movsl
lret
out
add
xor
das
mov
int
rcl
ds
out
xchg
dec
xlat
out
jo
push
repz
sti
inc
jge
inc
lds
shlb
iret
lock
pop
sbb
inc
into
cli
in
hlt
imul
and
in
in
imul
arpl
call
imul
das
inc
std
stc
pop
lods
push
cltd
xchg
leave
add
mov
adc
mov
mov
dec
stc
pop
cs
inc
ds
sar
fidivrl
sbb
or
jecxz
sbb
xor
mov
movsb
jg
das
scas
pop
or
jp
add
sbbl
dec
test
daa
ficompl
in
stos
fnstsw
and
in
lret
cwtl
or
popf
adc
add
les
in
mov
adc
dec
pop
imul
inc
mov
push
fs
lret
sbb
lea
mov
push
mov
stos
in
dec
sub
jbe
mov
inc
je
mov
cmpsb
leave
clc
mov
pop
pop
ljmp
push
mov
mov
out
cmp
rcll
adc
lcall
add
pop
out
cmc
aas
shlb
cmc
out
fwait
push
or
mov
outsb
out
jnp
fisubrl
mov
jne
outsb
test
push
xchg
mov
cs
das
xchg
addb
xchg
and
inc
mov
outsl
je
jl
pop
pop
cs
psllw
or
or
daa
push
lea
xchg
insb
cmp
jmp
push
iret
cmp
mov
jge
popa
in
cmp
je
and
in
repnz
cld
imul
dec
jbe
mov
and
and
mov
mov
and
je
bound
jne
push
inc
fistpl
add
insb
jae
pushf
je
xorl
dec
sbb
cmp
xor
mov
mov
cmp
mov
call
sbb
jns
inc
mov
lods
ret
fildll
pop
int
rcrb
xor
dec
xor
loop
imul
pop
sub
and
js
cmp
inc
mov
notl
in
pop
dec
pop
and
sub
loop
pop
adc
jae
fstps
shll
pop
cld
sbb
pop
inc
cmp
inc
or
mov
cmp
mov
cmp
sub
ljmp
repnz
xor
jbe
jle
cmp
xlat
hlt
cs
lods
icebp
fwait
jecxz
dec
ror
int3
mov
mov
jg
test
push
add
xchg
in
and
daa
and
mov
je
pop
add
push
cmp
jl
jno
aas
cmp
lods
dec
inc
jb
mov
cmp
stos
sub
sub
cmp
ljmp
clc
push
stc
xchg
xchg
xor
dec
gs
enter
add
xor
sub
dec
sbb
dec
cmpsl
clc
mov
and
fstl
jo
cmc
fcoms
xlat
inc
fwait
inc
lcall
mov
shrl
pop
int
cmc
imul
js
or
mov
xchg
pop
mov
push
jecxz
lret
cmp
outsb
cltd
sub
cmp
insb
test
cmp
arpl
les
sti
cmp
sub
lock
mov
or
mov
sub
sub
jns
or
popf
jp
cmp
mov
cmp
insb
aam
int
into
out
negb
cmp
fstpl
nop
and
and
adc
pusha
push
das
sti
ret
and
or
out
jbe
je
pop
push
out
pop
push
jnp
xor
lds
ss
dec
mov
mov
adc
idiv
sub
insb
add
sub
push
ret
hlt
aam
fs
sbb
pop
jo
ss
jl
cmpl
imul
xchg
cltd
fldt
imul
dec
xor
add
lcall
call
mov
loopne
pop
hlt
insb
xor
and
mov
test
orl
mov
xlat
bnd
push
negb
inc
ret
aas
sar
or
add
jg
cwtl
aaa
jmp
push
push
popf
iret
test
sbb
xlat
adc
shld
mov
in
cmpsb
outsl
add
rorl
dec
subb
dec
lods
int
or
push
lcall
jmp
popf
stos
imul
add
std
jo
jae
adc
sub
test
popa
push
pop
xchg
adc
int3
jb
cmp
sub
push
adc
mov
cmpsl
cmp
scas
push
roll
int
out
sub
pop
jle
mov
dec
inc
mov
ja
fwait
bound
ret
mov
pop
test
pop
pushf
aad
sub
cld
and
sub
jmp
adc
and
std
mov
fsub
adc
push
daa
and
addr16
sub
daa
mov
orl
xor
shrb
call
xchg
stos
shrb
dec
dec
xchg
jbe
jbe
out
into
gs
fwait
push
inc
cmp
mov
add
dec
or
fbld
das
push
sub
cmp
addr16
mov
inc
jmp
int
push
xchg
dec
adc
je
adc
mov
scas
fdivr
mov
xor
cmp
enter
xor
xchg
fistps
arpl
dec
adc
xchg
mov
push
movsb
pushl
mov
out
and
jle
test
ss
mov
cmpsl
mov
pop
pusha
cmpsb
or
dec
ret
xchg
fstpl
sbb
cmpl
mov
lea
cmpsl
fs
push
push
mov
lret
xchg
inc
lods
xchg
xor
shl
mov
xchg
aam
nop
mov
jns
enter
hlt
je
mov
stc
daa
fdivrl
xchg
push
adc
in
psubd
loopne
inc
dec
mov
push
cmc
notb
xlat
or
xor
push
push
imul
lods
add
mov
in
aad
ja
mov
and
loop
stc
ret
xchg
sbb
mov
adc
test
mov
jmp
jl
inc
test
jnp
popa
or
jmp
test
es
loopne
mov
dec
sub
orb
and
cmp
cs
shrl
jne
cmp
push
call
stc
sahf
les
es
leave
sbbl
hlt
push
lock
or
pusha
addr16
push
mov
enter
cmp
dec
pop
clc
ljmp
cmp
inc
dec
repnz
js
jl
add
jne
add
ret
je
pop
xor
xchg
add
imul
adc
push
jbe
jb
fidivrl
xchg
fists
xchg
adc
arpl
lret
or
mov
iret
sahf
pop
mov
xorl
adc
scas
sub
movsl
sub
cmpsb
jnp
dec
sti
sub
or
add
outsb
mul
xchg
push
mov
push
sbb
cmp
testb
out
inc
xor
push
xchg
or
and
xlat
mov
mov
fidivl
lds
and
jno
imul
cli
and
insb
das
cmpb
adc
pop
arpl
sti
mov
add
lahf
push
pop
repz
cmp
cwtl
adc
in
mov
xor
mov
sub
rcrb
mov
dec
test
mov
leave
stos
jne
sbb
out
mov
sub
cmp
sub
imul
mov
push
or
add
inc
mov
sbb
sub
jge
sub
jl
sar
pop
xor
mov
push
xchg
aaa
je
out
push
mov
es
push
xor
mov
dec
mov
sarb
mov
icebp
jmp
jg
push
bound
sub
push
jns
arpl
cmpsb
dec
xchg
mov
ljmpw
push
fs
lods
fstpt
lds
xchg
iret
inc
dec
xchg
or
mov
repz
cmp
out
andl
mov
mov
call
insl
xor
mov
cmpl
cmc
clc
mov
fsts
add
rolb
clc
ja
imul
cmc
es
mov
push
in
mov
hlt
and
push
out
ja
sub
jno
mov
rorb
negl
mov
xchg
movsb
sub
es
fildl
cli
daa
insl
cmpsl
push
iret
pop
lahf
pop
or
jg
xchg
and
pop
fsts
stc
mov
xlat
fcomip
pop
jne
enter
adc
xlat
repz
adc
adc
cld
sub
mov
shll
jge
test
push
sbb
je
insb
gs
xchg
stc
lock
jae
pop
jle
sub
xchg
repz
dec
jl
int
dec
in
movsb
std
mov
clc
xor
repz
push
adc
jb
jecxz
scas
pop
adc
xor
mov
dec
stc
lods
cs
lcall
sbb
inc
rcll
std
ss
fistl
subb
jb
jne
rep
mov
aas
mulb
add
pop
xchg
xlat
int
shrl
jle
xorl
push
outsl
mov
mov
xchg
mov
or
loopne
icebp
and
cmpl
pusha
mov
imull
fcomps
pusha
and
loopne
loopne
jle
das
flds
pop
mov
shl
mov
stos
mov
add
or
cmpsb
add
int
mov
nop
hlt
movsl
ja
fwait
pop
mov
sub
or
pop
daa
dec
mov
int
dec
pop
mov
shl
imul
pop
out
xor
fnstcw
pop
inc
sub
icebp
divl
xlat
cli
fstpl
or
fisubrs
add
sbb
xlat
out
movsb
int3
in
xchg
adc
jg
adc
xlat
shll
mov
push
pusha
cmpsl
dec
mov
retw
cmc
push
mov
cld
imul
push
jo
sbb
sub
pop
stc
arpl
out
repnz
nop
cmp
pusha
aas
lods
pop
je
mov
cli
dec
mov
lcall
jmp
pop
mov
dec
sub
fsubr
cmp
and
in
inc
or
add
orl
xlat
sahf
xor
xchg
lods
rorb
sbb
mov
lcall
cmp
xchg
popf
cmpsb
std
xchg
leave
push
xchg
stos
mov
subl
movsb
lcall
inc
pop
sbb
pop
cmc
cmp
push
lods
or
pop
cmp
mov
adc
sbb
imul
mov
cli
aad
push
xor
movsl
bound
push
fs
push
cs
cmp
into
in
sub
jae
dec
pop
inc
adcb
sub
rcl
insb
pushf
xchg
leave
fwait
cltd
test
dec
mov
xchg
cli
icebp
les
pop
and
push
mov
fcoml
xor
movb
mov
push
addr16
icebp
sub
push
or
jecxz
pop
xor
push
outsl
cli
add
xor
push
jmp
xchg
cmp
lea
out
and
fucom
stc
out
or
ja
inc
and
les
sbb
xor
ror
rcl
pop
dec
icebp
ja
mov
in
pop
aad
mov
inc
shl
mov
lret
pusha
xchg
movsl
xor
mov
fs
xchg
aas
fdivl
or
test
sub
inc
cld
jge
pop
sub
jmp
cmp
mov
movsl
ljmp
fildl
mov
incl
fcompl
popf
xchg
mov
pop
aad
mov
daa
fld
sub
jno
cmpsb
loopne
pushf
xchg
inc
popf
dec
add
ljmp
dec
rol
xlat
sbb
addps
jecxz
pop
or
popf
add
sub
xchg
push
adc
movsl
inc
ja
pop
testb
insl
cmpsl
cwtl
je
sbb
pusha
into
sbb
cmc
lret
add
xor
addr16
add
bound
out
shrl
in
or
dec
mov
inc
cmpsb
dec
out
pop
movl
push
cltd
sub
cli
std
div
or
loopne
cs
fisubl
ja
ret
and
sahf
mov
inc
add
stos
pop
mov
sub
in
sub
aaa
ret
cld
arpl
mov
aaa
sarb
in
das
sbb
lods
dec
mov
mov
cltd
pop
or
push
ret
dec
adc
rorb
adc
shlb
cmpsb
pop
inc
loop
mov
mov
shll
int3
pop
push
sbb
out
js
pushf
xchg
sub
andb
movsb
pop
cmp
testb
or
pop
mov
lods
pop
ds
or
call
mov
lahf
test
shll
into
mov
xlat
xchg
push
daa
xchg
pop
dec
dec
or
daa
pop
pop
hlt
and
ficomps
mov
cld
sbb
int3
rcrb
dec
insb
ljmp
in
in
xor
push
mov
repz
dec
dec
mov
pop
mov
aas
add
push
loopne
jg
in
imul
adc
jo
adc
jmp
aaa
mov
into
and
xor
data16
mov
mov
pop
popa
push
ret
lret
push
out
jnp
and
ret
mov
inc
ja
in
ljmp
push
sbb
hlt
bound
loopne
iret
movsl
lret
ret
jnp
faddl
push
in
mov
aad
fsts
leave
mov
jbe
sar
xlat
stc
mov
add
jmp
mov
xor
mov
enter
jae
mov
mov
jb
imul
push
inc
ljmp
shr
aas
inc
adc
push
jmp
or
pop
andb
repz
daa
popa
xchg
xor
rol
push
push
mov
fldt
test
or
fstp
stos
or
push
lcall
mov
xchg
xchg
push
hlt
fdivs
aam
inc
adc
push
inc
lods
add
ss
fstl
jge
push
push
fidivrs
or
and
icebp
dec
fcomp
nop
cmp
lock
push
push
in
add
test
mov
fwait
lea
jns
and
jl
aam
sti
nop
nop
add
imul
ljmp
add
cwtl
in
mov
das
in
fs
jo
mov
bnd
pusha
cmp
mov
icebp
into
cs
jg
adc
inc
mov
xchg
jmp
inc
mov
adc
xchg
dec
push
pop
cwtl
test
xchg
sti
out
mov
subl
ljmp
imul
dec
jg
mov
dec
enter
addl
test
arpl
jg
mov
push
shlb
adc
xchg
mov
lds
xlat
push
mov
pushf
inc
cmc
dec
mov
cmpsb
add
xor
add
cwtl
or
das
adc
inc
xchg
out
hlt
gs
addr16
lods
stos
sbb
mov
std
jle
xchg
mov
inc
dec
in
out
inc
cmp
mov
imul
sub
push
aam
cmp
push
int
push
insb
adc
fs
call
push
push
pop
jecxz
out
mov
loopne
xor
cltd
movsb
or
lret
inc
push
inc
cli
add
xchg
xchg
repz
loope
inc
jae
loopne
push
jl
pushf
lret
leave
fsts
fimull
cmp
cmc
mov
pop
push
mov
sub
adc
outsl
in
jns
inc
out
adc
or
adc
fmull
xchg
add
outsl
pop
cmpb
cmpsl
ja
ja
test
push
add
fldenv
pop
pop
neg
negl
cli
jg
sub
scas
jg
mov
data16
inc
sbb
sahf
cmp
jb
xor
or
outsl
in
inc
fdivrp
movsl
cli
test
add
stc
mov
clc
mov
mov
pop
jp
adc
cmc
test
nop
dec
xchg
mov
mov
dec
mov
subl
add
mov
ss
cmp
mov
lods
jb
fadds
pusha
or
aam
sbb
sti
fimull
push
dec
roll
add
xor
int
xor
xchg
push
and
jbe
push
pop
mov
push
sbb
test
test
int3
xor
xlat
aas
jo
aam
mov
mov
shll
adc
push
sub
in
xor
jecxz
out
dec
aaa
push
test
dec
fdivrs
sbb
stc
mov
call
add
pop
jae
cwtl
in
pop
cmpsb
nop
cmc
insl
cmp
sti
stc
out
popf
mov
shl
cwtl
outsb
divb
pop
xor
or
jmp
sub
enter
or
ljmp
test
in
pushf
cltd
dec
jnp
pop
pop
out
xor
push
and
gs
mov
popa
inc
ret
sti
xchg
xchg
or
in
push
cmpsb
aas
sub
sub
xchg
cmp
sbb
pusha
fsubrl
mov
pop
or
add
dec
jno
add
push
xor
in
cmp
movsl
fnstcw
loop
fwait
and
out
jge
rorb
jge
xorb
test
daa
out
and
aaa
imul
sbbl
sub
dec
jae
loop
xorb
jno
test
cmp
std
mov
lcall
ds
cmpsb
ret
iret
dec
sbb
sahf
cli
ret
cld
movsl
cs
lahf
add
lret
popf
jmp
outsl
push
cmpsl
aam
out
inc
iret
mov
stos
adc
sbb
mov
push
out
aad
mov
lcall
mov
loopne
jl
stos
shll
jle
test
ja
std
stos
mov
dec
ljmp
loopne
mov
sbb
cmpsl
sbb
nop
cmp
std
jb
lret
mov
jg
jge
or
dec
ljmp
pop
push
scas
bound
das
fstl
pop
add
xchg
mov
in
mov
sub
cmp
mov
cmp
in
enter
ljmp
inc
pusha
ret
or
push
xchg
pop
lods
frstor
pop
xchg
or
mov
out
push
movsl
xchg
sarb
jnp
inc
mov
repz
pop
jg
sub
pushl
cli
popa
lret
pop
inc
adc
sub
lret
testl
lret
jb
stos
out
pop
cwtl
fldpi
pop
arpl
sbb
xchg
out
dec
sub
cmc
jecxz
mov
sub
mov
lcall
mov
lds
lock
outsl
sub
pop
icebp
popa
inc
cmc
cltd
loope
repz
aam
lcall
xchg
push
push
mov
imul
mov
shrl
dec
push
mov
push
fisttpll
sub
mov
and
jmp
dec
and
stos
sub
lds
push
cmpsb
xrelease
ljmp
jne
dec
loopne
fucomp
push
and
jmp
pop
push
cmp
lret
mov
outsl
sub
lock
cmp
push
scas
mov
arpl
popf
pop
add
jg
cmp
loope
outsb
cmpsl
lret
in
je
das
or
popa
jg
inc
inc
addl
clc
std
in
jg
dec
scas
jl,pt
sbb
pop
mov
mov
add
ror
adc
mov
lret
add
ds
pop
and
ss
shrb
xlat
iret
sahf
pop
inc
and
xor
dec
xchg
orps
fcmovbe
scas
daa
pusha
insl
jle
jns
fs
out
and
gs
or
das
adc
fistps
mov
mov
scas
or
fcomi
sahf
pushf
inc
sbb
sbb
ret
push
pusha
pop
dec
push
outsb
jbe
pop
ljmp
sub
cmp
or
lods
ss
push
mov
inc
push
pop
jg
and
pop
dec
mov
cmc
ss
add
and
cwtl
cs
add
imul
push
sub
ret
mov
add
dec
lea
addr16
les
movsl
imulb
sub
insb
ficoms
jns
sbbl
hlt
pop
loop
push
fsubl
data16
ljmp
push
stos
fnstcw
lahf
aam
and
aas
idivl
dec
jb
mov
mov
mov
mov
and
sub
ret
test
mov
sbb
pop
ret
aas
int
pop
aad
mov
sti
ja
scas
mov
js
and
icebp
mov
movsb
lea
scas
pop
jae
pop
push
pop
and
ret
aam
insb
push
loope
ss
cmp
pop
outsb
ret
and
adc
pop
out
inc
or
sti
sti
adc
push
ja
xchg
jo
pushl
out
pushf
dec
push
outsl
pop
jge
inc
mov
mov
dec
jmp
mov
push
push
mov
notb
push
aas
notb
mov
mov
popl
cmp
cmc
bnd
xor
push
imul
sbb
or
aas
inc
in
je
pop
add
addr16
aam
test
addr16
mov
pop
jp
outsl
jb
aad
xchg
das
pop
add
das
add
mov
stos
mov
sbb
cs
popa
sti
push
inc
jg
mov
adc
mov
loop
les
add
out
mov
lcall
mov
es
sbb
aaa
into
std
movaps
jae
test
jmp
push
cmp
shr
int
add
xor
scas
or
test
call
movsb
jb
push
jo
ss
or
jbe
dec
cld
inc
xor
cmp
loopne
pop
fcmovnu
jg
loopne
mov
pop
mov
in
lods
push
in
negl
jno
shlb
in
sub
dec
push
movsl
les
sub
insb
ret
mov
es
test
xor
inc
or
lea
sbb
into
sahf
cmpsl
push
fsubrl
add
addr16
jbe
insl
cmpsl
inc
imulb
fidivs
imul
scas
into
dec
stos
rcll
xchg
and
out
or
or
jmp
fcmovu
int
sub
ljmp
ret
lods
mov
out
lcall
add
dec
ret
pusha
xor
scas
arpl
out
in
jmp
add
cltd
outsl
add
xchg
stc
gs
iret
jle
pop
gs
fwait
inc
mov
cmp
sbbb
es
inc
int3
fimull
push
inc
push
cld
inc
add
push
lea
sbb
add
xchg
lods
bound
lea
xor
rol
mov
cwtl
fyl2xp1
xor
mov
xor
push
iret
ljmp
sbb
mov
sbb
stos
sbb
push
adc
xchg
mov
mov
aad
imul
popf
rcrl
das
in
out
mov
mov
ja
out
cmpsb
outsb
or
mov
lods
dec
nop
xor
xchg
fists
ret
mov
add
push
mov
stos
insl
mov
mov
pop
shrb
sbb
fcmovnb
lret
out
fildl
and
aam
cs
inc
sbb
xor
xor
orb
and
or
ljmp
jecxz
push
movsl
test
mov
out
mov
mov
sti
add
ffreep
clc
add
and
iret
cmovne
mov
in
test
aam
out
jmp
in
enter
fs
mov
push
loope
mov
lds
mov
popa
dec
cmp
xchg
sub
jns
cmpsb
cmp
dec
sbb
testl
xchg
dec
mov
movsb
or
test
loope
xlat
stc
xor
jnp
enter
ret
dec
xchg
stos
jns
push
aad
xor
js
jle
mov
push
push
sub
mov
and
stos
vsqrtsd
fstl
sbbl
pop
push
iret
loope
movsl
add
sahf
out
inc
sbb
push
pop
cli
sub
negb
sub
xchg
out
lock
inc
les
loop
sub
add
es
push
cmc
notb
int3
fmull
cmp
das
addr16
loope
dec
pop
pop
shrl
fadds
lahf
push
nop
pop
inc
fnstenv
dec
shr
mov
fs
adc
loopne
mov
mov
shlb
outsb
lcall
dec
aam
mov
sbb
pop
sbb
dec
aaa
jns
pop
shl
xchg
xor
fiadds
cmpsb
mov
sub
mov
lods
xchg
mov
ds
jbe
or
and
in
cmp
rol
test
cltd
aad
je
cmp
test
aam
outsl
lods
sub
and
lods
lods
daa
cld
inc
test
jne
pop
movsl
mov
lret
inc
icebp
or
jl
jns
sbb
push
cmpsl
dec
sub
pop
test
dec
jle
in
lcall
mov
add
imul
cmpsl
shlb
dec
or
dec
pop
xchg
js
notb
dec
int3
ds
addl
pop
fs
in
xchg
or
jnp
fs
pop
mov
cmp
fsubl
pushf
and
cli
pop
mov
mov
xlat
aad
stc
adc
jb
mov
mov
test
ret
imul
xchg
adc
js
or
jo
sub
mov
sbb
mov
push
fiaddl
lods
ljmp
fsub
lcall
arpl
les
pop
sub
sbb
pop
and
dec
orl
adc
add
cmp
push
in
cmpsl
mov
rcl
fisubl
ds
mov
or
dec
xor
and
and
and
mov
rclb
loop
in
xchg
das
cmp
lcall
repz
cmp
push
sbb
jbe
ret
sub
pop
inc
add
add
add
sub
ja
stos
ljmp
mov
gs
push
jle
mov
sbb
jno
mov
cmp
ret
add
repz
enter
cmp
scas
push
xor
push
push
aam
jg
add
jge
lret
aaa
fbstp
mull
xchg
daa
xor
push
mov
mov
data16
pusha
jl
pop
fnstsw
and
fsubr
xchg
daa
mov
imull
into
mov
jle
mov
cs
andl
mov
ss
jg
fadds
xchg
roll
push
repnz
pop
repnz
adc
rcll
fsubs
xchg
cwtl
xor
push
add
push
in
adcl
xchg
jns
test
xchg
adc
in
jle
sbbl
xchg
aaa
cmpsb
and
or
in
cmpsl
sub
dec
daa
je
pop
inc
xor
push
dec
push
stc
xlat
push
jo
enter
adcl
pusha
jnp
jo
mov
outsl
rcl
xchg
or
push
mov
dec
pop
cmp
push
test
cmp
dec
popf
and
jmp
pop
jmp
sub
les
jmp
push
fisubl
xlat
pop
lret
mov
stos
xchg
add
insl
repnz
pop
inc
and
push
sti
push
insl
lods
popa
inc
fidivrl
or
stc
jge
xchg
xchg
mov
lret
pushl
add
mov
xor
push
sarl
cli
ss
cs
push
sbb
cmp
and
int3
pop
xchg
repnz
or
xchg
sbb
pop
sarb
dec
pop
sbb
aaa
xor
cltd
mov
dec
mov
adc
into
or
adc
pushf
fwait
add
pop
and
sub
mov
es
or
jp
add
xor
xchg
xchg
mov
mov
inc
mov
stos
xchg
xchg
outsl
bound
add
test
dec
xor
pop
pop
mov
test
aam
adc
cs
aas
addr16
and
mov
xchg
and
sbb
pop
mov
mov
pop
aam
aad
cmpsl
mov
xor
fstpl
or
dec
insb
or
ret
into
pop
repnz
sti
xor
add
sahf
sti
push
notb
inc
das
sti
int
jmp
mov
and
mov
out
je
push
or
jne
jne
sub
icebp
rorb
adc
mov
hlt
stos
jb
rdtsc
into
cmp
in
test
xchg
sbb
inc
xor
xor
scas
fisttpl
and
add
sbb
rcll
mov
cli
es
int
mov
sbb
sbb
adc
or
lock
in
mov
fldt
jo
ss
sub
xchg
add
sbb
fimull
test
es
mov
test
adc
inc
nop
push
inc
call
xchg
pop
lret
sub
in
pop
mov
scas
push
jbe
sub
test
mov
pop
adc
sti
sub
and
push
pop
clc
aaa
int3
rcrl
sub
stc
mov
mov
imul
cmp
cmp
movsl
mov
arpl
mov
mov
xchg
xchg
dec
add
sub
mov
hlt
popf
push
fistpl
test
outsl
dec
inc
movsb
call
cwtl
iret
pusha
dec
mov
cwtl
cmpsl
mov
roll
sarl
pop
shr
mov
fisttpll
xchg
sub
mov
ret
sub
pop
dec
adc
xchg
cld
in
test
ret
int
jns
clc
mov
aam
outsl
xchg
xor
sub
scas
fs
cmpsl
mov
cmp
pop
add
pop
mov
imul
pusha
ja
call
in
xor
dec
dec
bound
add
mov
ret
xchg
or
mov
push
leave
mov
mov
xor
subl
sub
inc
mov
nop
and
dec
daa
push
loopne
mov
jp
and
dec
and
ret
xor
mov
xchg
mov
mov
push
rcrl
push
push
xchg
mov
mov
push
xchg
insl
icebp
mov
inc
mov
push
stos
addr16
sub
jmp
lock
cltd
sbb
fisttpll
sub
mov
jns
repnz
sub
call
push
xor
shrb
lahf
xchg
dec
shrl
xor
dec
daa
mov
push
movsl
out
sbbb
nop
imull
cmpsl
fidivrl
mov
faddl
repz
stos
sarl
jno
sbb
push
nop
jle
popa
scas
incl
ja
cmp
div
mov
and
or
cmc
or
or
add
jp
mov
pop
mov
dec
repnz
inc
and
dec
and
mov
mov
enter
mov
push
pop
push
outsb
clc
and
mov
xchg
sbb
js
dec
dec
int3
or
mov
jecxz
stc
xchg
xor
orl
jnp
cltd
sbb
and
jmp
stos
lea
orb
mov
mov
or
lds
pop
xchg
mov
fdivrl
stos
lock
shlb
xlat
sub
sbb
stc
xchg
mov
add
scas
addr16
fwait
dec
test
mov
sbb
in
cmpsl
inc
dec
jbe
pushf
sbb
push
push
sti
repnz
ss
cmp
xchg
jnp
inc
dec
sub
inc
in
fwait
out
or
sbb
xchg
pop
push
scas
seta
pop
sarl
insb
mov
jmp
ffree
push
inc
push
add
lods
sbb
pop
jne
sbb
lret
jp
mov
xor
pop
cld
sub
fists
fs
mov
loope
xchg
adc
ljmp
das
lods
inc
mov
jb
and
ret
ret
lsl
daa
xor
cmpsb
negl
lods
sub
fsubrl
out
hlt
int3
js
jnp
sub
push
adc
data16
jnp
rcr
out
loop
mov
push
enter
add
stos
lret
scas
out
fs
icebp
adc
cmp
and
lds
add
arpl
call
loope
pop
push
ds
sub
std
jnp
aam
xor
pop
dec
fiadds
adc
sbb
jmp
enter
xlat
mov
adc
add
data16
sti
int3
push
ja
loop
push
cld
cmpsb
mov
test
push
mov
push
mov
mov
insb
mov
loopne
std
sbb
pop
lret
je
sbb
jl
pop
pop
jne
add
mov
push
jle
sbb
mov
jbe
pop
xor
sub
add
fists
mov
popf
push
loopne
test
fdivrl
movsb
xorb
mov
outsl
fidivrs
mov
aam
leave
adc
mov
jno
push
imul
loopne
icebp
cld
jo
pushf
xchg
mov
and
mov
popa
lahf
ja
jg
sar
inc
and
imul
or
rcl
fwait
push
in
imulb
pop
movsl
cmc
lret
jmp
pop
icebp
cmp
or
xchg
into
mov
dec
testl
in
pop
cmp
cli
sub
mov
xchg
loopne
push
pusha
inc
xchg
jo
jbe
adc
xchg
cmpsb
mov
jo
push
sbb
cltd
sub
sahf
adc
mov
faddp
sbb
mov
lods
ja
dec
sbb
xchg
and
jge
ja
push
test
inc
jmp
test
cltd
sar
add
je
ljmp
push
cmpsb
adc
sbb
push
jae
pop
pop
jmp
imul
pusha
push
adc
add
or
pop
imul
xlat
mov
ret
fcmovnb
pcmpeqw
mov
jns
pop
test
jno
aam
pushf
xchg
icebp
inc
test
inc
add
mov
cltd
inc
xor
test
shrb
sbb
sub
es
in
push
xchg
clc
mov
scas
mov
push
xor
mov
imul
jnp
dec
dec
nop
lea
aaa
sub
dec
fldenv
popf
ja
in
jbe
lahf
repnz
mov
mov
shr
jnp
cmpsl
dec
cmp
cmc
aad
in
add
dec
mov
popf
addr16
pop
or
sarl
in
pop
push
sbb
push
dec
aas
lea
adc
and
xor
xor
jl
xor
xchg
call
mov
aaa
dec
clc
xor
imul
mov
or
cmp
inc
aas
popa
push
in
mov
outsl
insb
sti
movsl
sti
xchg
jbe
inc
jb
je
cmp
mull
popf
mov
lods
xor
fbstp
adc
xor
data16
rorl
push
adc
les
push
push
insb
out
or
int
jnp
aam
jnp
repz
dec
push
or
out
outsl
fcoms
sbb
and
inc
xor
sbb
jae
lcall
adc
in
mov
adc
lahf
les
or
push
mov
test
mov
cmp
cmp
call
push
aad
add
jmp
adc
jo
xchg
push
push
ss
add
lret
inc
adc
jge
inc
sub
dec
push
and
push
lods
sub
das
mov
adc
or
push
orl
cmpsb
daa
and
push
pop
les
sub
mov
cld
bnd
jp
mov
xor
pop
repz
cltd
popa
pop
xor
push
sbb
jnp
cmpsb
mov
popa
sub
stos
mulb
es
stc
mov
xchg
xchg
sbb
stos
cmp
sarl
mov
dec
cmp
mov
cmc
mov
adc
add
loopne
push
sbb
je
fbstp
mov
inc
dec
pop
hlt
int3
inc
jl
mov
jge
out
jmp
shlb
int3
fistpll
movsl
nop
arpl
ljmp
loopne
out
jne
jo
mov
dec
cmp
mov
cmpl
in
dec
test
aam
xchg
mov
and
mov
jle
repnz
sub
sbb
fnstsw
push
xchg
mov
cmp
pusha
add
mov
cli
add
xchg
nop
lcall
push
and
dec
icebp
fnstenv
sarb
mov
xchg
jb
adc
push
js
inc
add
lahf
push
je
xchg
cmp
pop
jle
jno
pop
push
add
xor
jbe
movb
pop
add
add
cmp
lds
mov
out
cmp
pop
add
gs
or
loop
push
cmp
out
out
xor
mov
das
outsl
jnp
jle
mov
pusha
mov
testb
nop
stos
and
add
gs
test
inc
pop
push
adc
xchg
add
or
shrl
cli
mov
xor
loope
dec
inc
inc
ret
push
rorl
lret
push
lods
mov
lds
adc
dec
cmp
dec
xor
test
into
aad
and
dec
dec
jno
rcrb
inc
les
scas
in
cmp
mov
arpl
xor
add
push
push
sar
push
aas
and
mov
mov
jecxz
aad
pop
enter
jnp
jbe
mull
rolb
adc
jns
dec
cmp
rcl
mov
fisubl
xchg
mov
mov
popf
mov
xchg
addr16
mov
dec
add
sbb
mov
push
add
lahf
pop
xchg
shrl
popf
xor
lock
push
lea
push
cmpsb
sub
jecxz
shl
mov
mov
repz
inc
push
pop
cmpl
and
rcl
lock
jnp
hlt
call
insb
sbb
cmp
push
xchg
xchg
leave
sti
inc
mov
sub
and
movsb
repnz
mov
sbb
lds
lea
pop
mov
jecxz
arpl
in
sbb
out
pop
push
xor
adc
insl
sbb
clc
in
or
stos
pop
sub
xchg
jns
xor
sahf
fwait
inc
stos
lock
xorb
into
insb
rolb
int
cmp
mov
sub
dec
sahf
mov
jg
jmp
mov
dec
loope
add
loope
or
sub
or
scas
insb
mov
repnz
cmp
xchg
jge
mov
mov
loope
mov
jo
shlb
insb
xor
sub
js
cmp
cs
dec
clc
inc
mov
out
insb
outsl
scas
jns,pn
cltd
sbb
mov
sub
mov
sbb
jmp
pop
cmp
lods
mov
repnz
sbb
mov
fldenv
imul
or
dec
mov
push
ret
mov
je
or
xor
and
sbb
mov
add
fidivrl
mov
sub
das
ja
aad
lds
push
or
jmp
int3
popa
data16
gs
movl
and
pusha
fsub
cmp
xchg
fdivrl
arpl
pusha
cltd
adc
imul
add
loop
jo
jo
jae
and
dec
jcxz
into
iret
out
or
inc
jmp
pop
adc
pushf
jge
lea
scas
in
rorl
sarl
hlt
dec
xchg
push
fnstenv
popa
outsb
stos
sbbb
jg
aas
sub
aad
scas
push
int
pop
movsb
dec
or
inc
add
mov
pop
xchg
gs
cmp
addr16
xchg
scas
sbb
push
rorl
inc
pop
es
jno
sti
negl
xchg
sub
stos
loopne
test
ret
aad
test
push
rol
cmp
stc
inc
jge
pushf
or
inc
push
out
pop
jg
out
jo
cltd
mov
dec
add
mov
sahf
jp
cmp
je
cmpsb
pop
jle
pop
and
and
dec
push
pop
inc
daa
scas
sub
stos
push
lock
inc
sub
aam
cmpsb
and
mov
pop
daa
add
dec
stc
rcr
or
es
sbb
wbinvd
ret
dec
das
xchg
movsl
dec
push
ja
lret
push
xchg
fsts
push
shrb
mov
in
in
pushf
rolb
scas
mov
clc
ss
lahf
push
fwait
andl
popa
cltd
inc
in
sbbb
sbbl
mov
cli
cmpsb
out
inc
lds
std
and
inc
jmp
loope
aaa
sahf
inc
adc
mov
cmp
dec
lock
inc
add
dec
cli
aas
sbb
xchg
mov
fildll
lea
out
cmp
dec
cmpsl
sbb
cs
push
scas
lods
pop
pop
sbb
pushf
and
pop
es
loopne
sbb
inc
mov
inc
icebp
pcmpgtw
out
mov
dec
mov
jp
jecxz
in
cmp
lea
repz
fwait
sahf
dec
jae
lods
xor
les
repz
push
xor
inc
push
sub
loop
xchg
adc
adc
daa
inc
cmp
xor
loop
and
cmpsl
movsl
daa
pop
mov
jo
in
jmp
ror
testb
xchg
ds
in
mov
shr
enter
lock
pop
add
pop
mov
jae
push
ret
xchg
sub
xchg
incb
mov
int
ja
pop
sub
add
mov
jle
mov
cld
push
flds
pop
test
loop
lret
dec
pop
and
lods
mov
jl
add
mov
mov
dec
fs
push
fsubs
add
enter
dec
cmp
repnz
jl
inc
mov
pop
lods
cmp
xorl
in
les
js
sbb
rcrb
mov
stos
sub
enter
ds
test
mov
test
aas
xchg
pop
add
xchg
inc
inc
mov
data16
inc
je
jno
hlt
xchg
cli
inc
xlat
dec
inc
jge
cs
daa
clc
inc
movsb
xchg
int3
cmpsb
mov
test
sti
and
orb
mov
xchg
aad
movsb
fcmovnbe
lds
mov
sub
icebp
repz
pop
mov
cmp
outsl
sub
fbstp
sub
dec
decl
xchg
imulb
jae
insl
stos
mov
xchg
push
ret
jecxz
jnp
test
shlb
pop
mov
jp
mov
arpl
inc
mov
cmpsl
xchg
sub
jbe
xor
test
dec
movl
xchg
xchg
adcl
lret
adc
dec
adc
outsb
in
pop
aam
bound
fadds
out
xchg
fcomp
daa
mov
jle
pushf
cmp
push
call
or
or
adc
jp
mov
ljmp
push
sbb
hlt
pop
mov
repnz
and
repz
movsb
jnp
in
pop
test
mov
sti
and
dec
push
roll
in
dec
mov
inc
push
int3
into
es
jg
add
popa
movsl
mov
mov
fnstsw
movsb
gs
fistpl
testb
mov
and
jge
mov
movsb
xor
pop
mov
scas
mov
inc
lret
inc
fwait
popa
mov
cltd
pop
and
jg
outsl
addr16
xchg
ret
mov
icebp
scas
push
push
jo
lret
orb
lds
lahf
jge
in
out
add
dec
cli
leave
lds
jg
cmp
jae
add
pushf
xor
pop
cwtl
xor
xchg
ret
jnp
ja
fstps
mov
sub
in
gs
mov
sub
cmp
or
xorb
jne
dec
jb
pop
hlt
cwtl
dec
push
jecxz
lcall
sub
sub
fwait
aaa
data16
push
mov
fldl
jmp
xchg
mov
out
mov
cmp
pushf
mov
mov
shll
outsb
push
sub
and
aam
inc
pop
adc
repnz
add
xlat
pop
mov
je
out
pop
jp
les
adc
jbe
or
dec
or
pop
inc
cmp
xchg
out
add
pop
data16
lods
fistpll
xchg
mov
hlt
and
jmp
sbb
adc
aaa
hlt
rep
sbb
test
mov
inc
mov
xor
add
adc
sahf
iret
dec
loop
xor
mov
jo
and
js
mov
stos
push
dec
xchg
or
or
mov
insb
xchg
int3
lea
mov
aad
xchg
pop
cmc
xchg
push
mov
push
sub
lret
mov
xchg
loope
fstps
fs
aad
mov
gs
pop
cld
add
test
fistpll
enter
jne
divb
sbb
and
out
sub
jmp
arpl
xchg
cmp
pop
repz
xor
insl
xchg
jne
pop
pop
cli
cltd
and
and
fs
pushf
push
repz
adc
add
mov
in
minps
incl
xchg
dec
dec
cmpb
imul
or
gs
dec
mov
cmp
xchg
mov
insb
xlat
cmpsl
fcoml
mov
mov
in
inc
jle
in
add
test
sbb
loop
out
imul
xlat
sahf
nop
sbb
push
mov
insb
dec
xor
sub
loop
cmp
ret
mov
sub
arpl
sbb
je
xchg
ret
cmp
rcr
inc
bound
fndisi(8087
cmp
inc
sbb
xor
mov
and
mov
cmp
jno
out
mov
mov
inc
push
jecxz
lock
cmp
inc
icebp
call
and
rcrl
mov
lret
or
dec
lds
icebp
jl
sbb
cmp
cwtl
hlt
pushf
fwait
repz
inc
xor
cs
sti
test
pop
pop
sub
push
push
popf
xor
je
dec
test
jg
dec
sbb
cs
mov
aam
jmp
stc
jne
je
ret
jae
add
movsb
call
popf
out
ret
pop
pushf
int
cli
jo
ret
ret
xor
das
sub
lods
jmp
in
or
mov
gs
jl
fcoms
add
mov
ss
jb
pushf
adc
dec
add
les
mov
rcrl
stc
dec
scas
pop
test
cmc
mov
adc
and
cmpb
test
push
scas
add
dec
add
andb
scas
pop
inc
jnp
mov
dec
and
jmp
dec
or
mov
mov
mov
jecxz
xchg
push
sbb
rcrb
sbb
sahf
ss
jecxz
jmp
and
movsb
daa
dec
sbb
xor
and
jo
idivl
push
adc
mov
sub
loop
mov
add
movsb
and
sub
mov
shlb
ds
movsl
aaa
pop
aas
clc
and
cs
jg
lret
jg
in
sub
out
xor
lds
cwtl
in
shl
inc
mov
icebp
js
xchg
jo
mov
pop
movsb
xor
test
jb
enter
xchg
in
mov
lea
loope
mov
push
inc
jl
dec
imul
pop
std
insb
mov
cmpsb
jmp
sub
push
pusha
sbb
sahf
lods
sbb
cmpsl
cmpsl
add
iret
mov
cmc
mov
mov
pusha
mov
dec
lret
inc
je
inc
out
inc
int3
mov
cmpsb
dec
test
add
inc
mov
in
or
push
pop
jg
sub
and
xor
fistpll
rcll
add
push
f2xm1
push
jle
notl
fadds
out
cs
test
addr16
or
push
and
sbb
push
cmp
jmp
adc
out
jp
inc
sarb
lock
fsubrl
es
int3
inc
mov
loop
jp
mov
xchg
mov
mov
outsb
outsb
sbb
adc
je
adc
jp
jo
fcmovnbe
fidivrl
clc
mov
mov
push
xor
jb
shrl
mov
adc
rcrl
gs
xorl
push
inc
enter
add
loop
adc
xchg
cmpsw
pushf
adc
femms
mov
scas
movsb
repz
inc
icebp
push
lret
loop
inc
std
inc
pushf
mov
fbstp
mov
push
adc
pop
jecxz
mov
popa
jmp
xchg
cwtl
mov
or
in
dec
push
xchg
loop
cltd
fdivrs
jns
mov
shrl
lea
bound
mov
inc
jbe
mov
stos
in
dec
dec
sub
jl
fsts
pop
scas
push
int
addb
sahf
movsl
lds
mov
jae
jge
pop
jg
or
mov
cmpsb
loop
adc
ret
sub
push
xlat
jnp
xchg
add
loope
in
dec
fnstsw
xor
addr16
jns
dec
mov
mov
cmpsb
or
hlt
push
push
imul
arpl
incl
sbb
daa
das
jg
and
out
fwait
mov
stc
xchg
jge
nop
test
add
insl
sti
loope
sbb
mov
addb
cltd
in
pop
adc
push
cltd
addr16
jge
jae
clc
add
dec
xchg
cmp
mov
je
add
gs
cmp
jnp
dec
inc
or
and
adcl
aam
orb
fs
xchg
fdivrs
sahf
pop
add
mov
inc
dec
push
lret
sti
pop
dec
pusha
pop
int3
pop
imulb
mov
mov
inc
or
cld
cwtl
cli
mov
imul
into
inc
push
push
adc
in
sti
fidivrl
mov
add
xchg
cltd
sbb
in
ljmp
add
push
adc
ficoml
cltd
mov
dec
mov
xchg
add
cwtl
lods
mov
mov
push
nop
jne
mov
js
xchg
jo
xchg
dec
xchg
or
xchg
scas
jnp
jbe
jnp
xchg
xlat
fcoml
hlt
sbb
arpl
pop
inc
imul
cld
jno
int3
sub
jnp
jecxz
and
jge
sub
sbb
push
pop
mov
sub
cmp
stc
and
js
mov
std
cmp
fcoml
cmp
out
mov
vcvttpd2dqy
inc
jno
cld
push
or
push
mov
push
rorl
cs
pusha
movsl
sub
mov
stos
ljmp
pusha
ret
add
xchg
sahf
mov
fadds
hlt
mov
lds
xchg
xchg
aas
lret
inc
xchg
sbb
cltd
stc
out
in
mov
sub
mov
aas
dec
adcb
fs
ret
clc
sbb
push
xor
outsl
outsl
scas
cmc
pop
adc
inc
lcall
pop
fwait
jmp
fidivrs
clc
and
cli
fidivrs
jp
jno
lock
data16
dec
xchg
push
insb
jle
mov
push
out
cmc
cltd
adc
add
cmpsl
dec
mov
xchg
fwait
mov
mov
addb
sbb
rol
add
cmc
and
popl
rcll
js
mov
loope
fldl
cmpsl
push
xchg
mov
incb
popf
lds
lahf
imul
pop
incl
inc
cwtl
sbb
xor
arpl
mov
fimuls
pushf
fadd
aam
out
add
or
sbb
mov
lahf
cli
ret
mov
push
lret
pop
or
ret
sarl
inc
subb
lods
xor
rcl
sub
cmp
cwtl
mov
out
orb
mov
mov
mov
sbb
jl
fwait
push
imul
ljmp
cmp
inc
call
or
lret
dec
cli
lea
addr16
inc
xchg
or
jae
repz
lcall
dec
adcb
lret
jg
mov
or
or
inc
mov
clc
enter
repnz
add
popf
cs
dec
mov
adc
aas
add
inc
mov
mov
jae
jle
outsl
add
and
mov
sub
xchg
or
ss
push
mov
inc
inc
mov
std
out
idivl
mov
sahf
and
sbb
mov
stc
sub
pop
repz
test
jb
or
pushf
mov
subb
out
sub
in
cmpb
push
outsb
jno
push
dec
pusha
sahf
jns
xchg
mov
sub
outsl
test
popa
subl
je
jg
or
push
hlt
imul
cli
test
leave
int
xor
xor
cmpsl
outsl
inc
loope
loopne
jae
fcmovb
out
arpl
iret
js
mov
ret
pop
cmpsl
cmp
sub
scas
push
into
push
push
mov
xor
pop
ja
xchg
call
or
add
dec
mov
or
and
test
fucomip
mov
mov
mov
push
ss
jp
das
orb
add
add
mov
push
add
xor
orl
lcall
xchg
xchg
je
popf
jae
cmpsl
sbb
and
mov
int
jnp
fldenv
repz
cltd
push
das
xlat
lea
pushf
push
negb
adc
je
iret
dec
daa
aaa
push
inc
push
jbe
jmp
std
cmp
rcr
mov
xlat
lds
jnp
mov
jl
int3
stos
cli
sbbl
xor
push
pop
xchg
dec
ljmp
xor
out
negb
hlt
cmp
add
mov
shl
xor
leave
pop
cwtl
bound
xchg
xor
xor
addl
push
or
addr16
xchg
or
sub
push
and
ficomps
pusha
ret
imul
sub
dec
or
pop
jmp
mov
jne
dec
or
xor
ljmp
add
scas
fiadds
cmp
sbb
dec
push
sub
call
fstps
push
pop
and
das
add
test
jbe
mov
out
dec
push
or
std
mov
and
cld
cmp
xor
rorb
add
sbb
lods
cmp
insb
cmp
sub
leave
test
push
fstpt
mov
rcll
and
ja
test
sti
fidivl
shl
push
movsb
iret
mov
push
decb
adc
dec
jne
push
xor
xchg
inc
push
or
jl
jae
sbb
cmp
sbb
sbb
mov
cmc
addr16
out
test
jne
mov
cmp
pop
testb
imul
pop
call
sbb
das
fistps
inc
dec
int
cltd
push
jnp
mov
ljmp
mov
cltd
out
mov
cmpsl
cvttps2pi
test
pop
xchg
xor
sti
loop
jge
cmp
add
xor
inc
push
imul
ljmp
cwtl
js
cmp
mov
fsubrp
rcrl
in
add
jmp
dec
cld
loop
ffree
lock
test
ds
jg
jae
lds
loop
mov
outsl
inc
and
sbb
push
outsb
pop
push
adc
repz
jp
mov
sub
popa
je
cmp
xor
mov
mov
mov
fstl
fcom
rcl
xchg
rcrb
adc
pushf
cmp
movsb
flds
sbb
popa
dec
jmp
daa
bound
test
test
dec
mov
rcr
sbb
add
je
xchg
imul
or
sahf
push
sub
xchg
aam
xchg
ljmp
daa
mov
xor
xchg
and
in
stos
mov
and
push
xchg
cmpsb
mov
outsl
dec
and
jnp
inc
mov
bound
les
xor
mov
icebp
mov
inc
xchg
xorb
cmpsb
pop
ud1
out
inc
gs
mov
or
add
pop
mov
sub
stc
nop
mov
cmc
adc
ret
inc
xor
call
adc
rol
push
ja
push
leave
mov
je
loopne
jno
ja
fwait
mulb
pop
out
pop
int
add
and
push
xlat
clc
ja
fwait
jbe
xor
mov
mov
inc
insb
mov
ds
jl
pop
pop
mov
pop
leave
popa
mov
xor
scas
or
sbb
aam
mov
cmp
xor
insl
inc
or
or
test
or
fs
or
fisttpl
mov
push
inc
push
shlb
dec
rclb
pop
stos
inc
dec
sub
sub
jno
es
scas
mov
lds
in
aad
int3
pop
repnz
xchg
cld
mov
les
cmp
addr16
dec
fistpl
sbb
repnz
fbstp
aad
iret
popa
scas
add
sahf
std
dec
push
mov
fiaddl
push
in
add
out
adc
test
aam
out
fisubs
movsb
cmp
repz
ret
insb
xor
sbb
pushf
inc
loop
push
jbe
mov
fnsave
lret
xor
push
roll
xchg
xor
movl
pop
push
or
add
pop
and
imul
movsb
das
inc
or
in
pop
xorl
cmc
adc
and
xchg
pop
das
arpl
aaa
mov
add
dec
imul
shll
enter
ljmp
leave
int
xchg
cmp
xor
push
jnp
sub
jno
inc
sub
push
bound
sbb
movb
mov
movsl
cmc
adc
fisttpll
jmp
xor
into
jae
sub
sub
pop
je
shrb
or
or
ret
mov
mov
or
push
in
cltd
cmp
dec
fsubrl
stos
xchg
mov
idivb
inc
push
popf
cli
pushf
xchg
int3
rcrb
gs
dec
jmp
and
add
pop
jg
dec
push
cs
dec
dec
lret
or
repz
sbb
lods
push
nop
leave
cltd
or
aad
ljmp
pushf
inc
pop
je
aad
push
mov
pusha
es
xchg
ljmp
pop
adc
imul
int
rclb
and
xchg
jge
hlt
pop
pop
sub
add
dec
xchg
xor
mov
in
xchg
xor
add
cmp
cmp
mov
es
add
add
pushf
subl
insl
jle
jnp
push
sub
cmp
adc
xor
xor
and
lahf
sub
in
push
add
mov
dec
mov
mov
popa
sbb
lcall
jecxz
lods
in
jmp
pop
sbb
sbb
xor
xchg
insl
mov
rclb
push
fnsetpm(287
mov
jge
sbb
clc
mov
popf
xchg
call
daa
jnp
or
orl
ret
data16
outsl
inc
popa
rorb
cmp
adc
and
out
popf
stos
aad
mov
dec
sbb
push
dec
or
lcall
aas
outsl
lret
inc
inc
pop
orb
subb
sarb
jl
jae
ljmp
bound
dec
hlt
fidivrs
xchg
std
nop
push
cmp
bound
and
sarb
push
cmp
popa
and
xchg
or
fldl
cmp
add
mov
dec
dec
and
add
add
push
sub
je
sahf
addb
cltd
jo
dec
shl
ss
mov
les
mov
mov
mov
cmc
cmc
shl
pop
je
test
adc
jge
stc
push
xchg
adc
jne
int3
movsl
cmp
pusha
jecxz
jae
pop
push
cmc
jmp
pop
dec
fcmovbe
fcoml
ljmp
mov
xchg
sub
pushf
rclb
adc
adc
pop
jne
test
jb
les
or
addr16
add
inc
jns
push
and
xorb
add
pop
ret
add
inc
aaa
dec
mov
jne
mov
ja
cmc
mov
lods
icebp
add
lock
pop
and
mov
mov
in
or
das
jmp
mov
pop
shr
data16
nop
jp
sub
jl
and
push
inc
cmp
cmp
add
add
push
mov
cmp
loope
adc
aas
repz
rolb
sbb
inc
push
sbb
dec
inc
push
cli
jb
mov
push
push
mov
shrl
fsubrs
aam
int3
xor
iret
dec
sub
add
fucom
stc
mov
cmp
dec
adc
les
aad
dec
icebp
pop
adc
jo
out
mov
shlb
xchg
push
arpl
insl
addr16
sbb
jno
loope
sub
mov
dec
mov
sbb
fsubr
mov
sbbl
jg,pt
jge
dec
lea
mov
orb
bnd
repz
test
mov
add
frstor
or
outsb
imul
lock
pop
xor
mov
cmc
adc
lods
adc
lods
mov
xor
ret
push
dec
sbb
cmc
add
jo
movsl
mov
pop
inc
arpl
mov
test
pushf
insb
insb
stc
shlb
aas
mov
mov
lds
inc
cmp
pop
push
sbb
and
stos
sub
mov
pop
xchg
mov
ss
jecxz
pop
popa
push
in
lret
repz
or
add
mov
shlb
sarb
movsb
add
aaa
loopne
pop
aad
lret
sub
mov
and
imul
dec
dec
imul
insb
fcomp
xchg
sbb
xchg
les
int3
outsb
mov
bound
mov
add
sarb
in
dec
adc
insb
insl
aad
test
xchg
cmp
pop
rolb
push
scas
pushf
flds
pushf
fists
clc
xor
adc
gs
iret
add
es
lret
and
stos
mov
pop
int3
adc
pop
xor
scas
xor
mov
in
sub
ljmp
jb
call
shll
xchg
or
jo
push
loop
sbb
and
jg
sub
cs
mov
nop
and
or
sbb
subl
les
inc
cmp
popf
shl
in
mov
inc
data16
out
outsl
stc
ljmp
dec
push
jge
movsl
leave
cmp
push
fimuls
mov
outsb
testl
cmp
dec
out
es
out
insb
add
inc
or
lds
movsb
and
mov
xchg
add
stos
dec
repnz
leave
int3
int3
sbb
jnp
lock
ja
push
insl
mov
in
imul
repz
mov
into
pop
or
sub
and
stos
jp
incl
jle
and
data16
mov
repnz
es
std
aad
cmp
cwtl
mov
pop
in
mov
leave
and
mov
in
dec
jb
push
mov
push
mov
push
jno
fs
clc
in
insb
insl
ss
mov
xorl
inc
test
inc
inc
push
pop
dec
add
pop
popa
popf
cmc
pop
rclb
rcr
popf
andb
pop
test
shrl
inc
les
jbe
scas
inc
sub
ljmp
mov
sub
ret
sbb
ja
cmp
lods
pop
and
stos
iret
test
lods
loope
add
test
push
inc
sub
cmp
and
or
and
movsb
shl
insl
dec
popa
jbe
ret
out
or
pusha
push
xchg
jge
pop
inc
in
sbb
jp
sbb
mov
hlt
imul
movsb
xor
mov
and
xchg
cld
mov
dec
pop
jae
subb
out
out
data16
mov
xchg
and
stos
pop
dec
iret
aaa
sbb
scas
inc
push
dec
sbbl
xor
repz
fbld
mov
sbb
movsl
leave
push
ret
jnp
mov
fildll
jp
loop
sbb
fsub
add
jo
mulb
test
dec
push
jb
push
add
pop
daa
adc
int3
out
add
dec
mov
stos
dec
add
cmpsl
pslld
pop
jmp
pop
stos
je
mov
xlat
movsb
cmp
notl
iret
into
aaa
lods
in
stc
sub
je
insb
push
data16
mov
cmp
cmp
xor
jb
mov
repnz
mov
and
gs
inc
lea
scas
fnstenv
in
mov
or
loop
cltd
shlb
sub
inc
sub
xchg
add
xchg
bound
push
push
insl
out
cld
mov
sub
imul
out
mov
sub
out
dec
mov
jnp
aad
inc
sbb
in
cmp
mov
sbb
addb
mov
xchg
sub
xchg
test
clc
scas
test
sbb
lret
inc
xchg
test
push
loopne
out
cmc
push
cmp
ficoms
xchg
rolb
lods
add
loopne
fdivrl
push
les
mov
into
and
daa
mov
inc
push
push
test
lods
cs
nop
test
cmpb
ss
mov
fcoms
repz
lock
mov
sub
xchg
xchg
push
dec
scas
adc
jo
daa
sub
jmp
scas
fwait
clc
movsl
add
jo
pop
inc
cmc
cmp
js
pushf
fstps
fs
push
push
jg
push
mov
and
roll
xor
xchg
scas
mov
inc
enter
mov
xor
inc
pusha
ds
push
fadds
sbb
xchg
inc
or
xor
add
adcb
add
mov
dec
dec
in
mov
xchg
in
mov
out
fstpl
push
mov
arpl
aas
dec
in
or
and
rcl
cmp
sub
xchg
ret
push
es
sub
push
or
inc
rcl
in
or
cmp
out
fsubl
cmp
xchg
cmp
jae
movsl
cmp
mov
or
in
jno
scas
push
sti
lret
xchg
ret
clc
pop
jl
xchg
add
inc
in
loop
ss
xor
jb
jecxz
mov
mov
scas
fwait
add
mov
insl
jae
mov
lds
sbb
push
imul
stos
lods
push
mov
lock
mov
push
loop
add
test
sbb
inc
mov
xchg
shlb
test
out
scas
inc
es
orl
cwtl
out
sahf
iret
inc
pop
call
clc
les
iret
pop
jmp
mov
rorl
stc
addl
xor
mov
mov
xchg
xorb
rclb
fstpt
sbb
sbb
fldenv
pop
or
mov
add
rclb
repz
cld
inc
insb
or
icebp
aaa
push
cs
mov
mov
cmpsb
andl
fdivr
push
sub
lods
out
xor
adc
mov
adc
sar
mov
cltd
incl
insl
test
mov
sub
test
ja
jae
sar
ret
adc
cvtps2pi
imul
push
rolb
into
xor
enter
shlb
inc
mov
push
call
decl
in
sbb
addr16
mov
adc
inc
out
inc
push
lds
sbb
in
mov
loopne
mov
or
dec
fistps
jo
sbb
or
inc
scas
lea
pop
pusha
cli
mov
lret
bound
arpl
inc
fs
xor
push
in
push
lret
push
cmp
cmp
sub
aad
mov
push
cmc
cmp
dec
mov
inc
push
es
in
les
and
pop
inc
daa
xor
mov
or
xor
stos
inc
mov
shll
sub
xor
aaa
push
rolb
shl
testl
movsl
or
jne
pop
lret
stc
aam
jge
jno
addr16
xchg
add
jp
push
mov
xchg
dec
movsb
subl
add
sbb
and
xor
pop
pop
pop
sub
cltd
lret
lret
mov
out
addr16
or
decl
clc
cmp
jg
rcrl
jmp
rol
jno
fidivs
popa
cld
inc
out
sbb
movsl
testb
test
scas
imul
repnz
push
test
orl
push
inc
jae
mov
sahf
pop
dec
adc
in
in
into
aas
dec
rcrl
jp
xor
sub
imul
out
mov
cmp
mov
iret
rorl
inc
imul
hlt
pop
aam
pop
adc
xor
int
gs
add
lods
cmp
xchg
jb
fisttps
lret
stos
inc
lods
arpl
rclb
pop
mov
and
dec
bound
sbb
push
outsl
out
sub
inc
sahf
dec
lods
popa
lods
or
jl
mov
xor
sbb
jmp
shll
inc
insl
pop
xor
pop
in
out
pop
mov
jbe
inc
inc
xchg
add
les
mov
outsl
xchg
xchg
dec
push
in
push
adcb
sub
mov
loopne
and
ss
test
aad
outsb
xchg
test
xchg
outsb
stos
push
out
fisubl
cmp
cmp
push
sub
lock
stos
arpl
inc
fnstsw
xlat
lret
xor
mov
add
shrl
loope
arpl
mov
dec
dec
inc
fstps
and
xchg
pop
push
data16
out
jp
fucom
mov
in
cmp
lcall
jg
or
xchg
lret
push
loopne
cmp
xor
adc
loope
insl
repnz
imul
jmp
xchg
and
in
xor
sub
sub
inc
and
movsb
fsubl
jecxz
lock
shlb
inc
outsb
cmpsb
and
unpckhps
or
icebp
dec
and
in
movsl
mov
mov
shl
xor
inc
out
push
mov
sub
sub
inc
dec
cld
jmp
fisttps
rolb
popf
or
shl
sti
jge
into
hlt
xlat
aas
sbb
lds
testl
ss
insb
adc
jp
faddp
or
lock
sub
cmp
stos
jmp
mov
arpl
mov
fnstsw
mov
mov
add
repz
adc
pop
les
ja
cs
adc
mov
je
sbb
jp
mov
cmp
insl
enter
push
mov
xchg
js
insl
xor
insl
inc
pop
pop
gs
push
mov
mov
out
jb
and
inc
imul
adcl
sub
hlt
pop
or
fdivs
push
std
xor
shll
nop
and
xchg
push
pusha
mov
mov
mov
cmc
xchg
movsb
icebp
xchg
mov
sub
mov
data16
push
jb
xor
mov
jb
dec
aam
xchg
ja,pt
imul
dec
dec
cmp
sbbl
daa
fwait
mov
in
mov
jl
pop
mov
pop
xor
mov
fucom
xor
sbb
cmp
push
out
pop
fldt
out
imul
and
icebp
adc
pop
or
xchg
test
and
dec
push
mov
jmp
mov
sbb
call
outsb
or
stos
dec
fldt
lahf
mov
lret
xor
in
xor
popf
mov
testl
rcrl
rcrb
sub
push
fidivrs
int
stc
adc
cwtl
gs
dec
mov
rcr
sahf
cmpsb
jno
sub
jo
cmp
inc
mov
inc
xchg
xadd
and
iret
ljmp
push
mov
test
out
bnd
fmuls
inc
shr
lds
rcll
jl
push
shlb
jg
adc
or
aad
and
fdivrp
sbb
dec
xor
mov
push
jno
sbb
mov
js
inc
icebp
mov
insb
xor
ret
es
cmp
add
push
ret
and
inc
repnz
mov
pop
push
repnz
dec
cli
sub
sahf
xchg
adcb
xor
rorl
insl
xchg
pop
pop
adc
mov
pop
or
aam
xor
jne
inc
adc
push
mov
mov
dec
lret
mov
aaa
push
aad
xor
std
mov
push
mov
dec
fcompl
xchg
xchg
dec
iret
pop
jecxz
jge
or
sahf
scas
push
xchg
sahf
or
dec
inc
cwtl
inc
mov
dec
mov
pushf
sti
fisttps
arpl
loop
cmpsb
add
int
lss
jb
add
pop
test
pop
ljmp
cwtl
fisubs
daa
dec
xor
mov
xor
cmpsl
adc
push
fucom
test
inc
or
pop
adc
push
cmpl
inc
jge
sub
int
xor
and
cmc
daa
pop
icebp
or
mov
cli
add
mov
push
gs
jle
cmpsl
xor
cmpsl
ljmp
push
xor
ds
fadds
jp
mov
sbb
push
fcmovb
notl
push
mov
in
test
aaa
sub
or
xor
and
mov
addb
xchg
sbb
das
push
pop
lods
push
pop
mov
in
out
andl
insb
pushw
enter
out
dec
add
push
push
bound
jo
xchg
popa
xor
repz
shrl
pop
fwait
movd
sbb
fnsave
testl
inc
sbb
push
lods
pop
add
scas
aas
adc
pop
lret
mov
pop
fcomps
xchg
cmc
cld
sahf
clc
or
pop
arpl
jmp
adc
jg
mov
fs
shrb
inc
xorl
cld
dec
pop
sub
dec
jb
mov
cltd
mov
mov
popf
adc
cmp
xor
sbb
pop
decb
and
add
repnz
movsl
aad
mov
push
mov
push
mov
cmp
or
sbb
mov
mov
add
mov
enter
movsl
push
cmpsl
lahf
shrl
int3
rorl
jnp
rcr
or
mov
arpl
pop
sbb
cmp
pop
and
sub
fsubs
xchg
aas
mov
cmpsl
aad
pop
and
mov
or
mov
cmc
lcall
dec
loopne
cmpsl
jge
call
idivb
xlat
gs
inc
icebp
pop
and
cmc
sbb
xchg
and
int
popa
insb
testl
sbb
mov
jg
dec
cld
out
test
lcall
fdivl
fisubrs
push
mov
loope
and
icebp
pushf
lahf
roll
xchg
cmpsb
push
jns
dec
mov
popa
sbb
repnz
push
out
push
scas
jno
lds
push
shlb
dec
jg
fldl
rcll
fiadds
mov
add
mov
sbbb
popf
xlat
add
cmp
fldl
lea
adc
push
sbb
out
test
js
pop
aas
cwtl
in
jb
insb
pushf
mov
fsts
lock
dec
adc
cmp
jbe
add
imul
out
mov
in
stos
jne
out
push
lret
out
push
dec
ret
jle
in
mov
dec
adc
jmp
ja
iret
fnsave
out
fwait
mov
nop
mov
mov
jbe
inc
xchg
ja
fadds
mov
mov
lret
mov
jne
jnp
cmp
mov
cmp
mov
push
icebp
cmp
add
outsl
aad
sbb
lcall
adc
std
mov
inc
ds
jg
fsubl
mov
je
inc
mov
xchg
fbstp
out
movsb
movsl
fwait
mov
inc
jge
addr16
xchg
test
xlat
incl
push
and
dec
in
fadd
pop
cmp
fistps
push
fildl
data16
cltd
scas
lods
mov
fistl
bound
inc
dec
mov
push
dec
pushf
push
out
mov
jg
mov
xchg
les
test
sbb
xchg
call
push
sahf
rol
cmc
cli
test
mov
sbb
or
xchg
dec
xor
insb
fistpl
jo
fistl
sbb
cs
ss
lahf
cmpsb
insb
mov
xor
mov
andl
cmp
das
notl
or
ficoml
jnp
hlt
iret
mov
cs
mov
jecxz
roll
or
and
fmuls
cmp
xchg
and
mov
adc
xor
testb
pushf
pop
aam
or
add
std
and
scas
xor
push
arpl
mov
loope
test
adc
xchg
lret
jno
mov
rcll
adc
xchg
push
mov
je
xchg
subb
xchg
cmp
dec
sbb
test
ljmp
decl
push
add
sub
sti
jmp
adc
push
sub
cmp
cmp
sbb
jne
mov
push
das
xchg
shrb
inc
push
outsb
mov
mov
sbb
push
aaa
xchg
sahf
movsl
add
push
stc
push
mov
xchg
ds
pop
cld
es
pop
mov
pop
lcall
enter
cmp
mov
xchg
fcom
add
and
lret
push
ljmp
jmp
mov
clc
mov
jl
aas
inc
dec
aad
push
cmp
js
and
jmp
pop
scas
hlt
movsb
or
add
dec
fisubl
shlb
or
adc
inc
rorl
shrb
sahf
std
jns
lret
mov
and
fwait
test
and
push
daa
int
lcall
loope
fs
sub
jle
sbb
lods
adc
lcall
lret
in
and
bound
xlat
sbb
pop
lcall
pop
int3
xor
mov
sub
imul
sub
mov
rolb
mov
in
add
inc
jno
xorl
roll
pop
into
jp
popf
fldt
and
and
hlt
ja
vmwrite
enter
ret
in
xor
jb
lods
mov
sti
sub
int
daa
push
xchg
jno
adc
adcb
mov
jecxz
lea
mov
scas
punpcklwd
inc
jle
sbb
xlat
cmpsl
cmp
imul
xor
mov
xorb
jae
lods
jae
subl
xor
pop
and
in
or
dec
std
mov
cs
aas
fisttpll
mov
pop
imulb
mov
jnp
lret
jno
xlat
imul
mov
ja
adc
stc
out
data16
hlt
mov
iret
pop
hlt
jb
push
outsl
int3
outsb
and
or
mov
mov
jg
test
dec
lret
mov
jp
test
adc
push
rcrl
add
es
inc
xchg
sbb
sub
sbb
insl
sti
push
scas
mov
jae
mov
test
or
inc
ds
idiv
les
push
adc
loope
push
aas
outsb
mov
push
push
push
movsb
add
adc
lret
cmpsb
cltd
and
scas
xchg
xor
jae
cmpsb
cltd
and
mov
fcompl
xor
dec
pop
loopne
daa
cmpb
xchg
push
aam
loopne
pop
jae
rol
jb
xor
sahf
mov
dec
push
rol
xor
adc
out
jge
cmp
imul
sub
lahf
lock
adc
les
pushf
lret
into
sbb
sub
adc
imul
lock
bound
in
xlat
push
cwtl
sbb
or
inc
mov
test
mov
ud2
mov
jle
xor
pop
and
and
mov
in
repz
jo
loope
cmpsl
fistps
fistpl
jge
in
push
mov
into
out
movsl
xchg
ja
push
lret
mov
popf
push
lods
call
cmpsb
pop
lcall
cld
or
push
subb
shlb
xor
mov
rcrb
nop
cmp
int
loope
adc
lret
pop
pop
inc
xchg
or
xchg
xlat
in
popa
sub
jnp
int3
xor
cltd
push
ljmp
sub
adc
mov
test
dec
jge
xchg
adc
ljmp
xchg
dec
sbb
or
mov
int3
add
push
sub
and
mull
jnp
and
mov
fnstcw
iret
sub
inc
inc
lea
mov
adc
or
fisubrs
or
lds
aad
xchg
mov
movsb
jg
loope
sbb
jnp
iret
test
mov
or
negb
loope
jge
ss
les
fstpl
clc
in
cmpb
push
mov
lcall
inc
mov
xor
sbb
push
xor
or
jmp
mov
fwait
pop
adc
stos
adc
push
decl
mov
dec
pop
icebp
sbb
sti
sbb
test
ret
mov
adc
dec
test
movsl
cs
adc
pop
dec
addr16
inc
pop
bound
add
and
push
negl
cmpsb
and
dec
add
jno
pusha
mov
jge
mov
pop
jmp
or
ret
jl
inc
and
cmp
shr
fcomi
xor
imul
ror
test
dec
sahf
les
xchg
mov
sti
mov
loope
mov
test
ja
stc
inc
pop
xor
call
fidivl
mov
and
data16
sbb
dec
fidivrl
cmpl
push
shrl
cwtl
js
or
ret
inc
and
and
xchg
xrelease
in
xchg
push
sarl
roll
jmp
mov
or
push
cmp
ret
mov
test
xchg
xlat
jns
mov
leave
jae
call
testl
inc
cmp
insl
cs
je
sbb
es
insb
xchg
jnp
mov
inc
pushf
dec
xchg
mov
jo
insl
repz
js
adc
jne
xor
push
es
mov
mov
sbb
jo
test
push
sbb
and
cmp
mov
shl
cwtl
sub
jecxz
mov
leave
mov
lahf
xchg
xor
idivb
and
ss
orb
aam
pop
add
es
testb
sub
push
adc
push
loope
ljmp
std
lret
inc
xor
dec
ja
in
subl
mov
out
push
sarl
orl
es
insb
mov
lods
cmc
xchg
adc
pop
dec
and
mov
pop
dec
add
and
in
add
jle
inc
adc
insb
sub
pop
out
cmp
and
adcb
adc
push
xor
scas
aad
jle
daa
and
jno
sbb
push
add
mov
test
mov
add
mov
mov
icebp
xor
insl
xchg
sub
xchg
push
rcrb
pop
sti
popa
pause
inc
insb
cwtl
and
mov
enter
pop
jmp
dec
mov
cmp
mov
mov
stos
sbb
add
aaa
sbb
loop
lock
pusha
fbstp
dec
ret
ret
test
gs
push
mov
cmp
sbb
mov
scas
addb
mov
popf
and
out
mov
adc
sub
in
push
mov
mov
int3
shr
jecxz
shrb
cmpsb
ljmp
addr16
shrb
sub
clc
in
push
aas
xchg
andb
je
out
sahf
sbb
shrb
mov
and
mov
fbld
imul
push
push
jbe
sbb
push
shlb
aas
dec
xor
fadds
add
mov
push
and
mov
cli
add
out
mov
inc
js
dec
pushf
cmp
sti
hlt
sub
je
cmp
iret
push
ds
inc
cmp
cmp
cltd
scas
repz
or
lods
inc
cmp
xchg
pop
adc
pop
or
cld
mov
mov
jo
loopne
aam
inc
cmpsl
adc
xchg
cmp
imul
sbb
pop
scas
cmp
out
cmp
pop
pop
jp
ss
into
lods
cmc
cmpsl
in
sbb
notb
imul
push
lret
pushf
xchg
sub
or
and
int
repnz
aam
adc
lea
dec
insl
mov
jmp
pop
lret
add
pop
or
mov
adc
push
xor
dec
data16
adc
adcl
mov
into
jl
cmp
cmp
imul
add
js
imul
stos
pop
dec
sti
sub
xchg
ficompl
inc
inc
or
lds
dec
and
repz
stos
cmp
xchg
mov
clc
pop
mov
xchg
dec
mov
addr16
mov
fs
lea
mov
pop
icebp
and
sti
dec
iret
and
orl
cmp
and
push
neg
add
lock
push
lods
and
daa
xor
mov
xor
outsl
dec
inc
fsubs
enter
xchg
mov
test
fwait
mov
mov
imul
incb
ss
gs
inc
inc
mov
cltd
jno
mov
push
rol
xchg
cltd
adc
inc
or
xlat
xor
les
add
rorl
jecxz
mov
pop
and
scas
mov
cmp
sub
repnz
cmc
dec
lea
pop
mov
adc
lods
jbe
sbb
cmp
jge
inc
lcall
out
or
sub
mov
or
repz
adc
dec
jns
mov
adc
adc
popa
fstpt
aad
push
movsb
xchg
es
inc
inc
pop
ss
cld
je
dec
vcvtpd2psy
sub
pusha
pop
repnz
sbb
mov
dec
push
mov
cmpsl
xor
cwtl
out
mov
xchg
cmc
les
add
stos
push
sbb
mov
cltd
add
mov
add
jg
movsl
push
gs
shll
mov
add
enter
mov
inc
ss
sahf
insb
cmc
or
lret
mov
mov
mov
xchg
ss
sbb
lahf
enter
and
mov
stc
xchg
pop
dec
sarb
mov
enter
clc
gs
aad
daa
daa
aam
aaa
mov
lock
cmc
pusha
adc
stos
fmuls
inc
js
pop
mov
cmp
sub
xchg
cmp
and
or
lds
fisttpll
in
shlb
daa
jno
inc
aad
test
shl
pop
push
test
mov
insl
fildl
fwait
and
push
outsl
sbb
dec
insb
shll
ljmp
int3
jne
insl
mov
lcall
mov
dec
ljmp
test
sbb
dec
lcall
lock
cltd
mov
int
jecxz
jne
or
dec
xchg
jp
xchg
jae
jge
push
into
inc
push
aaa
sbb
sbbb
data16
mov
js
jae
push
adc
popf
sbb
add
adc
int
ret
adc
cltd
mov
jns
rolb
sub
addr16
inc
cmp
data16
fbld
push
jmp
mov
sub
xlat
std
adc
adc
mov
fdivrl
leave
xor
lcall
pop
mull
xor
outsb
cmp
add
pop
xchg
mov
mov
push
inc
addr16
imul
jle
jecxz
sbb
in
xchg
dec
push
mov
pushf
in
cltd
movsl
pushf
cmp
xchg
jns
data16
out
inc
inc
faddp
xchg
mov
jnp
dec
xchg
add
jno
addr16
divb
xchg
cwtl
pop
cmp
fwait
mov
loope
dec
push
lods
rcrl
mov
std
inc
scas
and
add
push
and
lods
lret
js
fs
cmp
out
add
cltd
pusha
loopne
sbb
aaa
adc
cwtl
cmp
lock
repnz
mov
pop
loopne
insl
enter
rcrl
rolb
pop
jo
and
into
orb
push
push
push
es
mov
std
sbb
in
pop
adc
cwtl
mov
iret
hlt
jg
in
scas
enter
push
jg
lcall
movb
ja
push
lock
xchg
daa
js
loopne
push
push
add
sub
and
lock
and
jnp
xchg
sahf
loopne
mov
mov
mov
inc
rcrl
daa
aam
mov
and
ret
xor
outsb
imul
jnp
imul
in
sti
rorl
mov
and
adc
jg
sbb
inc
dec
out
call
in
icebp
stos
sbb
bswap
js,pt
sub
mov
push
fsubr
pushf
adc
and
movsb
adc
push
add
imul
push
mov
out
push
inc
sub
test
or
iret
out
add
aad
imul
dec
cli
mov
aaa
mov
pop
dec
clc
sbb
dec
or
xor
mov
mov
push
daa
pop
mov
or
or
data16
push
lret
inc
test
mov
push
mov
inc
sbb
mov
sub
mov
sti
fstp
test
push
mov
scas
sub
rorl
adc
sub
jp
loope
sbb
movsb
pop
xchg
lret
mov
dec
adc
addr16
dec
stos
ret
jmp
cmp
subb
sub
pop
xchg
xchg
mov
xor
int3
cmc
jb
mov
inc
cmp
cmp
nop
es
xchg
sub
push
sub
sub
mov
pusha
xchg
lods
stc
mov
std
mov
gs
and
cmp
xor
sti
loopne
stos
into
mov
inc
shrb
stos
lock
sub
idivl
mov
loop
insl
ss
dec
sti
add
or
jle
jp
lods
adc
xor
or
xor
xor
mov
mov
fwait
push
loopne
out
outsb
inc
mov
pop
pusha
out
add
insb
dec
mov
mov
nop
testl
xchg
imulb
cmp
pop
insl
cli
aas
data16
adc
adc
jle
hlt
insl
cs
stc
pop
rcl
out
mov
push
push
test
out
jne
jp
nop
stc
aaa
vpshldvw
mov
sbb
shlb
jp
fiadds
cli
mov
cmp
mov
int3
inc
pop
scas
lods
mov
mov
aaa
push
adc
mov
pop
out
enter
mov
clc
imul
das
sahf
pushf
jns
aad
xchg
aaa
dec
js
scas
out
and
sbb
push
ret
stc
jbe
jecxz
pop
mov
mov
inc
repz
popf
jno,pt
mov
lret
push
xchg
das
sub
in
sub
test
mov
lahf
call
pop
mov
add
mov
cld
mov
cltd
pusha
mov
es
sub
sbb
leave
loopne
lahf
pop
fists
outsb
je
fcompl
jo
mov
sbb
push
push
imul
shl
lds
pop
and
adc
fsubl
dec
shll
das
dec
mov
jnp
adc
sub
add
lods
sub
and
jbe
fsubrs
mov
and
adc
flds
push
sbb
cltd
pop
jp
inc
or
leave
push
lods
sbb
xor
addb
out
cmc
lahf
shl
jmp
inc
add
push
mov
popf
fs
lock
daa
lret
test
add
insb
pop
icebp
es
pop
dec
mov
sub
pop
addb
mul
adc
js
fs
bound
popa
enter
cmpsl
in
lock
inc
xor
addl
test
pop
sbbl
add
rorl
mov
ss
imul
scas
jle
jae
fisubl
out
jg
inc
push
ss
mov
cmp
xor
rolb
mov
mov
into
dec
jae
jle
jp
and
testb
aas
test
lret
addps
sbb
in
adc
lret
mov
outsl
xchg
icebp
mov
inc
adc
cmp
jnp
imul
cmp
aas
repnz
fwait
es
ffree
xor
mov
jle
lea
jle
fcomps
mov
jno
xchg
cmp
mov
adc
movsl
outsb
push
dec
rol
xchg
pusha
xchg
sti
in
pop
shrb
cmp
add
ds
stc
stc
xchg
xchg
cld
sub
jae
xor
lcall
or
icebp
mov
and
test
sbb
xor
dec
fiadds
push
leave
mov
dec
hlt
fisubs
cmp
and
rolb
test
bound
stos
cld
xchg
push
arpl
mov
inc
pop
pop
lods
cmp
lods
xor
dec
and
pop
ret
mov
push
scas
mov
xor
mov
pop
sbb
imul
orb
ds
dec
jnp
stc
adc
xor
xor
dec
sarb
mov
jle
rcll
in
xor
xchg
adc
cs
repnz
iret
loop
or
std
inc
nop
push
sub
dec
mov
pop
ljmp
rclb
fcoml
adc
sbb
xlat
scas
add
jns
lahf
mov
shrb
daa
sub
aas
mov
scas
lods
mov
jge
mov
shll
add
gs
int
and
sub
jno
sbb
fisubl
mov
pop
aas
addl
das
and
pop
lret
mov
ss
pop
aad
fs
xor
mov
xchg
aas
lea
test
xchg
sub
xor
push
jo
subb
mov
enter
jno
arpl
sbb
fildll
inc
jb
inc
test
lret
cmp
mov
in
scas
mov
sti
cmp
mov
inc
je
sbb
pop
mov
add
pop
lds
jp
ss
xor
das
lret
and
or
rcrl
jne
or
inc
rcrb
mov
hlt
insl
add
jnp
mov
js
jge
hlt
mov
sbbl
movsb
pop
xchg
jae
or
mov
in
fcomp
xchg
jne
fistpl
add
add
push
or
and
fwait
ljmp
ss
daa
mov
push
pop
lods
iret
icebp
cmp
sbb
mov
mov
cmp
jp
loope
push
pop
leave
je
xor
pop
push
dec
cmpsb
pop
or
adc
pop
sub
aas
inc
nop
test
dec
xchg
stos
and
loopne
cltd
xchg
js
in
mov
insl
inc
adc
inc
lea
imul
fwait
inc
jmp
fdiv
popf
mov
cwtl
mov
movsl
fs
sbb
aas
xor
add
sub
pushf
dec
sbb
add
mov
int
jne
push
jmp
jg
xchg
into
in
or
push
outsb
jecxz
mov
inc
push
push
adc
sbb
aad
popa
ret
gs
or
mov
js
xchg
cwtl
in
cmp
das
push
gs
jp
cmp
dec
add
or
in
mov
imul
pusha
sbb
addr16
and
dec
fidivl
sbb
jmp
pop
jne
int3
int
les
mov
aad
fldcw
xchg
cmp
sti
jns
dec
cs
jmp
mov
enter
gs
push
stos
mull
or
inc
cmp
mov
push
stc
cmp
or
cld
mov
push
cld
add
jmp
ret
xchg
or
lods
outsb
xchg
push
cmpsb
adc
je
sbb
and
sub
add
add
adc
jns
pop
xor
stc
aad
leave
fs
inc
pop
stos
les
xchg
sub
adc
adc
int3
sub
add
and
or
cmp
icebp
call
nop
fwait
dec
pop
adc
inc
mov
xchg
mov
sahf
dec
sub
das
push
and
in
orb
daa
stos
mov
jecxz
int3
repz
aas
loopne
cmpsl
lret
mov
xor
stos
pusha
lcall
clc
inc
daa
xor
push
push
mov
fdivrp
jmp
out
push
inc
or
repnz
mov
in
fsts
and
inc
adc
lret
daa
xchg
gs
popf
mov
pushf
add
loop
movsb
xchg
push
in
xor
push
or
mov
imul
sbb
aas
js
arpl
clc
adc
cli
rol
cld
vphaddbd
pop
test
xchg
outsl
cwtl
push
data16
icebp
stos
dec
jge
ret
sbb
wbinvd
ficomps
std
mov
sub
xor
or
mov
and
dec
shl
jne
add
dec
jmp
cmp
scas
mov
andb
mov
xchg
mov
adc
sbb
js
xlat
pop
push
adc
jge
aaa
and
and
stos
jae
pop
xor
mov
cmpsb
test
or
les
inc
inc
shr
les
adc
mov
xor
shll
shr
push
xor
js
dec
mov
mov
stc
xchg
pop
lods
out
adc
jae
mov
mov
xor
sub
sub
or
mov
mov
mov
stos
adc
push
mov
jl
jae
and
bound
or
fistpll
jae
cmp
out
fadds
sub
out
stos
outsl
adc
xor
cmpsb
pop
in
cmovp
push
arpl
add
push
ja
mov
cmp
xchg
cmp
repz
lea
jl
cmc
popf
outsl
xchg
jns
sub
or
pusha
mov
inc
fmull
outsb
adc
or
vmovlpd
icebp
push
and
jno
push
adcb
outsl
dec
pop
test
enter
or
fcmovbe
js
pop
movsl
aam
in
cmp
mov
movsl
lret
adcl
pop
or
enter
jo
and
cmp
cli
in
cmpsb
cmp
aaa
out
push
or
test
sub
mov
fwait
ja
in
push
fldl
mov
loopne
sarb
xchg
mov
mov
pop
adc
dec
cmp
ss
cltd
shr
and
push
gs
vpsrld
outsl
xchg
mov
mov
ds
sbb
cmp
jae
leave
xor
pusha
into
iret
push
jno
inc
icebp
in
out
sbb
xchg
shlb
push
sbb
inc
movsl
enter
ds
adc
clc
rcll
dec
dec
pusha
push
inc
xchg
or
mov
aad
lods
in
and
lods
jo
push
and
lahf
ss
mov
add
jae
mov
psrld
mov
lods
icebp
sbb
xchg
adc
fbstp
push
and
iret
sbbl
bound
mov
mov
addr16
popa
xlat
and
mov
mov
adc
push
jp
pop
sbb
das
sbb
repz
jl
or
aad
ffreep
xchg
sbbb
pop
mov
sbbl
je
adc
cmp
insb
jb
ret
mov
mov
enter
or
and
rcrl
push
jo
lods
mov
call
add
fmuls
outsb
jae
add
dec
xchg
xchg
mov
sarb
insb
push
sahf
push
xor
pusha
and
mov
in
insb
daa
lahf
adc
and
ds
add
push
lahf
cmp
int3
aam
inc
pop
sub
and
xchg
sbbl
jl
pop
sub
test
mov
gs
push
inc
popa
scas
pop
testl
xchg
xor
dec
mov
pop
mov
mov
test
add
cmpsb
xor
scas
and
fwait
xor
inc
pop
dec
jo
push
jno
sub
xor
in
cli
idivb
jge
mov
mov
add
out
mov
pop
adc
inc
jl
add
int3
and
push
xchg
push
adc
pop
loopne
and
dec
orb
xlat
inc
xchg
or
xor
cmp
in
jg
mov
push
gs
add
aaa
lret
cmp
in
or
arpl
test
orb
push
dec
outsl
pop
pop
pop
cmpsb
mov
dec
adc
popa
sbb
movsl
shll
and
mov
call
add
xor
sbb
inc
and
mov
iret
or
xchg
lahf
mov
rcl
cmp
leave
stos
and
pusha
push
push
xlat
inc
out
loop
inc
into
loopne
xlat
inc
or
add
cmpsb
shll
scas
jnp
ds
stc
shrb
inc
dec
stos
out
outsl
jle
pop
and
jp
popf
es
dec
push
mov
add
fcmovbe
sahf
dec
and
push
test
pusha
sbb
test
popa
add
pop
shrl
dec
mov
imul
icebp
dec
push
and
pop
mov
jne
test
mov
rclb
test
dec
daa
xchg
cld
clc
adc
inc
jge
push
xchg
jne
push
add
fildll
mov
adc
push
push
mov
dec
sub
ja
cmpsl
addr16
cli
xchg
ret
test
xor
dec
sub
cmp
nop
daa
push
mov
sub
mov
scas
pushl
cli
xchg
into
arpl
xchg
sbb
push
and
jno
jne
sub
mov
pushf
mov
inc
loop
incl
mov
outsl
aam
arpl
sbb
test
and
mov
rcll
sahf
les
and
testb
pop
xchg
sbb
lods
mov
inc
sbb
loope,pn
scas
or
add
dec
lret
cmp
mov
push
bt
jne
pop
cld
ret
xchg
dec
ja
jo
and
cmp
jl
sbb
push
push
jge
in
mov
mov
aaa
dec
push
fldcw
mov
xchg
pop
add
lds
add
cmp
jb
or
imul
cmpb
cld
xor
stos
jmp
push
and
push
cli
rclb
inc
ds
cmp
lods
adc
rol
push
push
nop
fmull
imul
jae
stos
sbb
cwtl
shl
es
mov
cmc
outsb
pop
stos
movsb
mov
mov
add
outsb
cmp
shrb
lods
jp
daa
imul
scas
stc
mov
push
add
rclb
jbe
xchg
pop
push
out
sbb
bound
out
adc
dec
inc
jle
adc
call
add
push
fs
frstor
sbb
sarb
cmp
scas
out
push
cltd
sti
mov
jo
cmp
dec
into
movsb
mov
adc
sbb
sti
sub
or
bound
jle
jle
hlt
push
dec
xor
test
push
jb
push
jae
das
add
dec
dec
or
xlat
jb
fs
int
mov
in
push
xor
pushf
sbb
jge
add
fwait
in
sbb
sbb
xchg
out
test
fsubl
std
or
out
adc
pop
push
nop
and
jo
cmpsb
pop
jl
jae
sbb
or
rep
mov
xor
xor
cmp
mov
imul
mov
and
mov
mov
lods
or
scas
mov
inc
repz
push
inc
sbb
es
xchg
push
je,pn
add
lods
inc
or
or
ret
pushf
nop
in
adc
push
out
imul
and
seta
jle
mov
cmp
xchg
mov
sbbl
xor
inc
out
jmp
leave
or
ret
popa
rcl
inc
cld
push
xor
mov
pop
fidivs
dec
mov
sbb
and
push
scas
loope
popf
fnstcw
aaa
loop
push
sbb
dec
repz
adc
sahf
cmp
add
inc
jne
divb
in
xchg
xor
jge
jne
call
cmp
es
inc
dec
add
pop
out
push
or
jmp
pop
xchg
lret
loope
repz
sbb
dec
imul
jl
add
cmc
lcall
xchg
add
jge
loop
push
icebp
ret
call
and
outsl
loopne
daa
jle
adc
mov
call
and
push
pop
mov
orb
ds
push
or
call
lcall
mov
out
adc
popf
push
pop
dec
movlps
jecxz
int
fnsave
fucom
cmc
cmpsl
sbb
aad
or
cmp
or
xlat
fisttps
and
sahf
xchg
mov
out
adc
fcmovne
cmp
push
shl
add
or
adc
sbb
das
cmp
jecxz
cwtl
xor
fwait
sti
lock
pop
std
add
or
pop
jp
or
mov
or
repnz
cmpsb
test
add
mov
cmp
dec
cmp
out
in
cpuid
sbb
inc
in
mov
pusha
xchg
cs
fwait
mov
hlt
pusha
mov
dec
inc
add
xchg
inc
ja
arpl
mov
inc
leave
push
cwtl
add
pop
dec
mov
aam
cltd
test
push
inc
xor
mov
xlat
or
das
mov
inc
and
cmp
js
adc
aaa
bound
lds
jbe
inc
test
pop
repz
lods
cmp
stos
std
into
lods
cmp
jo
xchg
dec
lret
adc
jns
faddp
inc
jg
add
std
insl
scas
pusha
mov
loopne
xchg
lcall
sbb
in
or
push
jbe
arpl
sahf
cmpl
mov
cs
push
std
xor
int3
fwait
pusha
mov
fldenv
lahf
jns
popa
scas
ret
lcall
xchg
pop
push
xor
into
add
sbb
mov
clc
jl
jmp
adc
adc
mov
mov
pushf
inc
xor
and
mov
lods
vcvtsd2ss
leave
mov
and
push
inc
out
in
adc
js
out
xor
or
into
fbld
in
scas
aaa
xor
inc
stos
fs
push
and
sbb
cmpsl
cmc
lcall
lahf
test
xchg
push
pop
incb
mov
push
push
adc
shlb
or
fsubl
movsb
sar
jg
fisubs
and
mov
lret
stc
sub
imul
mov
enter
push
movb
push
dec
mov
movsb
stos
cmp
fwait
mov
test
push
jnp
icebp
adc
jbe
mov
aas
mov
cwtl
cmc
sub
ljmp
mov
std
adc
sbb
out
jb
xchg
rcll
dec
inc
mov
jle
sub
jno
out
loop
adc
ret
or
out
popa
jmp
lret
mov
lret
cmc
lods
call
shll
inc
in
jo
and
fdivr
shll
cli
cltd
xchg
pop
inc
sbb
dec
cmp
mov
xor
sub
dec
fcomi
inc
pop
insl
sub
pop
inc
mov
es
mov
sub
arpl
cmp
mov
popl
inc
scas
jb
inc
mov
stos
dec
sub
sub
loope
std
test
push
notb
es
je
add
or
aaa
mov
mov
loope
ja
insl
fcoms
int3
adc
nop
xchg
xchg
lret
rolb
adcl
mov
dec
popa
loopne
add
fists
push
loopne
insb
mov
push
ds
jns
sub
mov
mov
scas
shl
in
pop
jge
movsl
scas
adcb
fmull
iret
icebp
daa
rolb
repz
lods
out
pop
lcall
sub
pop
mov
in
hlt
jge
test
pop
repz
lea
insb
jle
pop
pop
or
mov
dec
xorb
add
push
push
xor
pop
test
sub
push
mov
out
aas
mov
add
xorb
repz
jg
pop
dec
jns
xchg
aam
cld
arpl
mov
cmpsb
mov
mov
lahf
cmc
shll
jnp
dec
inc
imull
les
rcrb
or
fdivl
hlt
scas
jo
arpl
fsubrl
xorl
inc
lods
and
mul
sbb
mov
adc
aam
push
sub
test
popa
outsb
cld
shl
cld
dec
or
xor
test
cmp
mov
sbb
aad
dec
in
dec
cld
cmpsb
std
pop
jnp
movsl
out
mov
jnp
rcll
push
jp
mov
lds
mov
jae
mov
ljmp
mov
and
testl
daa
fs
mov
jo
or
dec
iret
push
roll
and
cmc
dec
fsubrl
sti
sbbb
stc
mov
loop
adc
lock
mov
das
out
ret
dec
pop
mov
sarb
and
ja
lahf
cmp
jno
fwait
je
pop
jb
jmp
and
xor
popf
repz
cmpl
cmp
sub
mov
outsb
daa
loope
add
xor
scas
loope
out
fstpl
add
jnp
test
mov
shll
stos
xchg
cli
sbb
pop
xchg
in
add
ss
cmpsl
fnstsw
orb
mov
add
add
ds
push
lea
div
push
adc
clc
adc
push
test
sub
pop
stos
aas
xchg
or
sbbb
xor
cmpsb
mov
aas
cs
outsb
aad
mov
sub
adc
repz
int3
sbb
add
std
cltd
sub
adc
mov
lcall
ficoms
je
je
fnsave
adc
push
sahf
sub
mov
in
adc
dec
inc
cmp
push
and
or
and
mov
mov
outsb
das
push
or
push
cmc
pop
pop
icebp
js
fsubr
sahf
dec
outsb
push
fdivr
xchg
mov
pop
nop
mov
xor
inc
loopne
add
jb
lea
inc
shl
outsl
add
xchg
pop
jmp
pusha
dec
scas
aam
xor
dec
movsl
mov
mov
cmp
mov
lea
scas
das
lock
adc
or
cmc
lret
push
ret
mov
outsb
out
mov
xchg
fsub
add
fimull
stos
pop
push
or
in
sub
roll
adc
add
push
pop
jmp
pop
adc
jbe
push
sahf
sahf
and
insl
xchg
fxrstor
cs
mov
sbb
addr16
push
mov
push
lock
std
scas
and
mov
jnp
xchg
test
xchg
call
pop
flds
mov
cmp
sub
rolb
adc
xchg
jp
idivl
cmp
dec
mov
push
or
stos
xor
or
decl
dec
repnz
jae
mov
jae
popa
push
jmp
pop
fimuls
ror
mov
bound
or
orl
pop
sbb
mov
rolb
test
sbb
cmp
pop
lret
add
dec
sti
sub
lcall
lea
imul
or
jno
or
push
inc
sbb
cmp
fisubl
test
push
lock
jb
pushf
jnp
enter
je
mov
mov
jmp
or
gs
je
sti
push
pushf
mov
mov
enter
pop
daa
lcall
fdivrl
ljmp
outsl
pop
push
xchg
call
mov
cltd
pop
cmp
adc
push
out
mov
add
xor
cli
outsl
fsub
mov
out
or
inc
jp
add
lds
addb
sub
movsl
aam
push
push
adc
fimuls
in
inc
jno
loop
push
sub
lea
popa
xchg
push
js
test
fildl
repnz
out
test
aam
push
xlat
clc
out
push
out
lods
jle
mov
mov
jp
lock
push
xlat
in
xchg
xchg
leave
scas
adc
xchg
jl
aas
lock
jle
add
sub
push
in
rcrb
dec
mov
mov
bsf
and
insl
stc
arpl
movsb
mov
xchg
incb
or
xor
inc
and
stos
pop
mov
dec
arpl
outsl
xchg
fsubs
dec
jo
jb
rorl
inc
hlt
pop
jmp
fdivrs
cmp
dec
dec
ret
cwtl
add
and
fsubrs
rcr
sbb
stc
js
in
cwtl
push
idiv
insl
loop
dec
dec
in
in
xor
xor
aas
xor
lock
repnz
add
and
cmpb
out
mov
xlat
jmp
scas
fcoms
fisubs
jns
mov
std
scas
ret
push
jb
dec
push
test
mov
sbb
and
push
xor
fwait
call
dec
test
or
test
xor
pop
in
cmpsb
stos
mov
push
push
mov
mov
int3
addl
or
jns
icebp
insl
popf
xor
lret
sbb
out
aaa
cmp
mov
push
lea
mov
adc
xor
and
push
aaa
xor
outsb
rcrl
lods
nop
sahf
imul
cltd
mov
test
dec
int
inc
or
sar
xor
fisubl
sub
pop
mov
outsl
les
pop
or
and
pop
sub
in
movsb
stc
loope
sahf
iret
cmc
popl
push
stos
aad
mov
and
add
bound
and
push
icebp
pop
int
mov
popf
orb
sub
mov
repz
jns
dec
jno
sub
jbe
dec
pop
inc
mov
fadds
addr16
inc
loop
fs
cwtl
sub
faddl
adc
stc
cmp
jnp
ja
sub
ja
enter
inc
mov
mov
push
aam
sub
daa
out
bound
repz
call
repz
sub
jmp
stos
and
scas
stc
scas
in
push
dec
and
in
dec
testl
adc
lock
add
repz
mov
les
mov
adc
iret
xchg
int3
and
xor
shrb
mov
jo
sub
xchg
negl
ss
xchg
xlat
negb
js
fdivs
mov
jb
pop
ss
mov
sbb
jae
ljmp
or
or
pop
aam
iret
cmp
iret
jmp
popa
jmp
cmpsb
lcall
and
dec
outsl
cli
push
jnp
insl
fdivrs
daa
in
hlt
mov
popa
jmp
pushl
rorl
rcrb
lds
or
pushf
push
jne
repnz
into
fists
fimuls
mov
popf
shlb
sti
ds
hlt
lahf
daa
sub
jno
mov
int
loop
and
fwait
addb
sahf
xchg
mulb
sbb
and
inc
shlb
mov
dec
fidivl
jle
mov
fisubrs
xorl
adc
shl
jae
push
ret
jmp
mov
add
andb
jp
and
sub
ss
add
xchg
inc
push
or
lcall
lret
push
lcall
jbe
push
leave
push
mov
sub
addr16
and
int3
cli
lret
add
hlt
call
cli
sub
rol
lods
adc
add
lahf
mov
or
movsl
into
inc
sbb
pop
in
xor
mov
add
push
cmp
mov
cmpsb
inc
jae
clc
jo
adc
inc
ret
dec
pop
cltd
xchg
in
sbb
jge
sub
es
aam
and
cmpl
xor
push
cmpsb
push
std
cmp
push
stos
shll
cmp
inc
inc
int3
adc
movsw
lahf
dec
mov
fiadds
jp
dec
arpl
cli
mov
pop
cmp
mov
inc
mov
jp
out
sbb
movsb
xor
fwait
inc
mov
ret
mov
movsl
fs
xor
jno
xor
imul
jno
xchg
and
sub
cmp
jg
xor
push
sub
add
xchg
push
cmp
in
cli
sub
cmpsb
lahf
inc
lret
mov
xor
imul
xchg
fwait
jo
insb
movsb
cmp
sti
xchg
ljmp
jecxz
xor
cld
movsb
aam
pop
mov
inc
xchg
jp
out
push
in
push
xchg
inc
enter
jg
sub
out
pop
leave
inc
dec
lret
mov
push
push
js
fs
aas
cltd
aad
loop
daa
jno
lock
in
mov
jle
sub
and
ljmp
out
adc
dec
loop
or
lock
xchg
sbb
sbb
inc
gs
imul
fwait
movsl
pop
icebp
cmp
sbb
push
add
push
mov
pusha
shll
rcrl
lods
call
dec
pop
lock
sbb
sbb
push
icebp
aam
in
xchg
or
test
adc
gs
cltd
pop
mov
adc
and
cmp
sub
add
mov
mov
cld
ffreep
push
push
in
cmp
add
jb
xchg
into
pop
xchg
and
push
ss
shl
test
in
jl
cld
cmp
or
aad
adc
xchg
mov
cmpsl
xor
sbb
sub
dec
mov
cmp
push
cmp
mov
or
push
cs
js
filds
mov
mov
sbb
xor
or
mov
mov
rolb
ficoms
push
jg
bound
mov
int3
fninit
pop
or
das
sti
stc
jns
test
std
inc
and
cwtl
inc
lret
out
shll
xor
ss
pop
mov
ljmp
push
addr16
adc
cmp
add
inc
repz
pop
sbb
jne
sbb
push
popa
lret
test
loope
shrl
inc
add
mov
jb
pop
ficoms
divb
mov
add
mov
shl
loopne
jp
lods
sub
hlt
add
jle
inc
stc
jge
cltd
in
sbb
fucomp
pop
push
std
shrl
mov
adc
fldl
cwtl
jae
inc
xchg
test
in
add
aas
dec
ljmp
dec
aas
in
cwtl
leave
sub
jb
cmp
outsb
jno
jecxz
xor
roll
mov
xor
push
pop
shrl
fdivs
hlt
dec
test
fcomps
sub
mov
in
sub
gs
push
lret
mov
cmpb
and
sub
pop
aas
movsl
jne
lods
dec
mov
rcll
dec
mov
push
cltd
xor
sub
mov
and
or
imul
and
fs
outsb
add
dec
push
out
mov
mov
or
clc
arpl
jnp
sbb
jmp
shl
lods
inc
loope
mov
xchg
mov
cmpsl
inc
mov
mov
push
mov
cmp
adcb
add
xchg
out
or
stos
test
out
mov
sbb
gs
adc
inc
loop
adc
mov
int
lahf
cmp
aaa
xchg
lock
mov
insl
sbb
adc
loope
popf
addr16
dec
imul
jno
mov
pop
dec
jnp
out
les
loop
andl
test
jmp
push
xchg
mov
in
insl
int3
add
mov
fwait
cs
add
push
pop
loop
daa
xor
decb
add
push
daa
adc
mov
out
mov
sbb
mov
lea
dec
xchg
test
add
push
stc
stos
jns
repz
cmp
and
and
add
mov
inc
or
int
in
les
aas
dec
cwtl
jne
jmp
lods
lods
sbb
add
es
cmp
xchg
rcrb
adc
sbb
cmp
sub
loopne
pop
dec
into
add
insl
rcll
and
push
clc
push
fildll
fidivrs
mov
sbb
push
lods
cs
std
enter
loop
jl
push
inc
movsb
shlb
ret
shrb
mov
sbb
adc
xchg
pop
stc
cli
leave
into
adc
fs
test
mov
add
repz
inc
xor
ljmp
lahf
ja
stos
rcl
fisttpl
fisttpll
pop
jmp
xlat
add
cmp
mov
xor
insl
leave
test
dec
clc
cmpsl
push
pop
mov
mov
mov
xchg
and
mov
inc
inc
mov
mov
inc
xor
nop
bound
adc
push
or
sahf
fisttpl
dec
pop
inc
mov
pop
movsb
loopne
test
loop
aam
or
int
icebp
xor
rolb
mov
add
push
movsb
add
in
ds
jmp
cmpsb
iret
add
orb
cmp
sub
jge
pop
xchg
loopne
lret
and
in
loopne
pop
and
fmul
stos
dec
lret
sbb
adc
cld
enter
scas
mov
push
mov
sbb
fidivs
dec
dec
and
jbe
sub
out
pop
and
or
xor
push
scas
fs
fwait
je
xor
jle
sbb
outsl
lods
dec
mov
stc
adc
std
mov
xor
dec
mov
pop
in
push
cmpsb
cmpsl
jns
bound
into
data16
testb
fidivs
mov
sbb
inc
jo
inc
push
repz
fldenv
ret
test
ficompl
lahf
ret
adcb
mov
pop
cmp
mov
mov
push
or
xor
fucomp
mov
push
scas
fnsave
pop
stc
pop
pop
scas
bound
mov
inc
std
lret
cmp
ds
and
movsl
cmp
dec
mov
mov
ret
xchg
pop
in
es
into
movsb
popa
aas
hlt
lret
jle
aad
out
pop
sahf
xchg
and
push
mov
int3
add
adc
lretw
das
push
jg
aas
aam
xchg
in
adc
repnz
dec
in
mov
stos
or
xor
xchg
iret
jg
inc
inc
nop
push
subl
nop
cld
mov
mov
aas
fldt
sub
std
push
fwait
sbb
sbb
push
movsl
push
xor
ficomps
xor
add
std
mov
pop
std
ljmp
stc
icebp
xlat
adc
cmp
and
push
pop
repnz
mov
cmpb
jo
aam
adc
xor
stos
xor
vandps
and
rcl
sbb
hlt
mov
ds
or
push
xlat
popa
ret
test
mov
sub
call
and
pop
inc
lret
je
jno
sub
adc
and
sub
cwtl
mulb
jle
push
icebp
or
leave
cmp
hlt
and
fldl
in
int
jecxz
mov
bound
mov
fbld
adc
orb
push
cmp
jns
stc
movq
mov
mov
in
mov
or
out
mov
loop
ss
subl
adc
mov
mov
sub
loop
jmp
lret
jo
je
lock
jp
inc
xor
std
xlat
data16
mov
or
or
xchg
push
jbe
mov
xchg
adc
shlb
mov
daa
data16
push
pop
cmp
xchg
idiv
jb
fldenv
push
mov
sbb
pop
push
xor
imul
mov
test
outsl
jge
xor
icebp
push
dec
pop
and
test
das
xchg
pop
imul
mov
arpl
stos
jb
jp
ljmp
jbe
push
shlb
int
test
insb
aam
mov
movsb
cmove
incl
lea
stos
ror
mov
or
dec
sub
pop
mov
js
mov
lea
and
repz
test
loop
jns
cmpsl
mov
sbb
cld
jns
rorl
pop
cmpsl
and
mov
sbb
out
popf
outsb
lods
aaa
sbb
xlat
push
lahf
leave
cmp
push
jle
add
cmp
enter
and
pop
out
push
mov
lods
aas
xchg
insb
xor
sub
push
addr16
or
in
aas
jmp
pop
fcoml
lret
stc
dec
outsl
xor
cmp
or
movsb
xor
insb
xor
mov
sbb
mov
outsb
popf
lcall
sbb
nop
jb
xchg
push
mov
or
push
dec
call
jno
push
popl
aas
rorb
movsb
and
lret
addl
push
mov
cmpl
ret
aas
mov
outsl
cmp
cmp
data16
push
pop
push
and
mov
jnp
testb
and
xchg
les
adc
out
add
jle
leave
popf
mov
push
push
leave
inc
xor
jnp
lret
sub
pop
lcall
mov
or
mov
nop
dec
or
inc
bound
lods
jbe
sub
imul
fisubl
mov
divl
and
sahf
adc
cmp
jae
mov
xchg
sbb
pop
sahf
ret
fidivs
push
hlt
pop
nop
or
inc
mov
mov
inc
add
mov
pop
je
lods
sbb
ss
rcl
out
push
jo
rcll
test
incb
sarl
dec
in
inc
lock
incl
fwait
cmpsl
data16
mov
push
mov
jmp
in
push
inc
out
jb
push
les
xchg
mov
in
adc
mov
adcb
rcrb
pop
scas
xchg
leave
mov
ljmp
cltd
push
cltd
imul
or
subl
js
aam
mov
inc
in
jns
pop
repz
sti
je
cmp
inc
xchg
clc
push
pop
push
jecxz
sub
and
mov
or
and
sbb
jmp
xchg
push
stc
testl
mov
cmp
mov
pop
push
test
mov
and
adcl
mov
pusha
jo
int3
ljmp
stos
dec
dec
outsl
mov
aaa
ljmp
lret
cmc
and
out
sub
test
test
push
mov
in
repz
xor
sbb
xor
xor
fs
jno
cmp
xchg
in
lock
lret
mov
xor
mov
fstl
inc
movsb
sti
test
pop
jge
into
popf
mov
iret
loop
enter
mov
pop
jle
pop
push
iret
scas
cld
mov
and
pop
pop
pusha
lcall
xor
in
ss
fs
inc
add
das
jp
rolb
sub
cwtl
push
mov
xor
enter
cli
mov
lods
mov
fildl
je
push
aaa
movsb
lock
or
cs
rorb
jbe
adc
cmpsl
shl
mov
mov
push
insb
nop
cltd
sub
int
out
test
xor
gs
scas
cmp
int3
es
mov
inc
mov
mov
pop
inc
and
sub
and
aad
outsl
jecxz
sti
pop
dec
xor
jg
jns
sub
mov
push
aam
mov
movsl
jns
leave
fnstcw
xor
loop
leave
push
jp
lea
cmp
adc
fwait
cs
add
sub
leave
sub
adc
lea
clc
or
jnp
test
pop
out
fdiv
lock
mov
mull
ds
jbe
push
add
imul
or
xor
call
outsb
ds
outsl
gs
cmp
test
xor
aas
push
xchg
fstps
in
icebp
adc
xor
ret
data16
sbb
sti
adc
fwait
mov
subl
movsb
lret
mov
sub
push
xchg
pop
call
jg
decl
cld
lret
inc
lock
mov
imul
push
inc
sub
aam
ja
sub
lahf
fwait
shlb
fildl
into
iret
dec
add
popf
mov
or
xchg
shll
or
rclb
dec
inc
adc
jae
add
mov
or
xchg
or
inc
test
inc
jno
jne
shrl
dec
adc
fidivs
test
lahf
stc
into
sbb
lahf
push
js
jecxz
dec
mov
fstpl
aaa
addb
lcall
mov
inc
push
and
add
pushf
je
cli
in
xor
mov
dec
add
or
mov
jb
int3
lods
xor
cmp
push
mov
nop
jmp
dec
inc
jae
in
or
icebp
cmp
out
xor
lcall
mov
cmc
loop
pmuludq
cltd
and
pop
inc
fs
jg
pushf
sub
shl
or
or
lahf
lahf
into
cwtl
xor
mov
adc
cmp
xchg
mov
icebp
add
cmp
dec
mov
ja
xchg
or
roll
loope,pt
jo
mov
into
inc
mov
and
out
sub
jno
fs
adc
sbb
push
jae
and
pop
pop
mov
in
dec
insl
cmpsb
sbb
dec
popf
xor
and
adc
repz
ret
jmp
push
xor
push
push
pop
cld
jno
xor
ljmp
stos
xchg
push
and
mov
loopne
movsb
leave
lret
call
call
imul
inc
and
lods
cmpb
dec
cmp
in
add
sbb
aas
loop
add
out
sahf
out
sub
test
jo
in
sbb
add
push
lock
xorb
int3
sbb
mov
dec
inc
xor
icebp
lret
pop
xor
pushl
shl
cmp
ss
cmc
mov
pop
mov
xlat
fiadds
and
adc
push
push
or
pusha
pushf
mov
imul
jbe
cmp
sbb
daa
cmp
jp
and
add
pop
aas
and
enter
bound
jg
xor
xchg
mov
mov
sti
or
mov
mov
out
pop
or
xchg
jmp
pushf
sbb
mov
movsl
loope
mov
jmp
and
and
loopne
mov
cmc
ds
push
sbb
add
shll
pushf
cmp
pop
or
popl
roll
xchg
cmpsl
shrb
mov
push
faddp
cmc
xor
out
xor
rcr
test
xchg
cmp
pop
stc
inc
cmp
pop
mov
je
imul
jne
dec
add
pextrw
inc
mull
pop
pop
lret
mov
arpl
fmuls
test
mov
adc
cmp
mov
dec
mov
mov
rolb
pop
cli
loopne
xlat
aas
pop
shll
rcrl
es
lock
test
sub
pushf
test
xorl
int3
xchg
lock
inc
push
push
inc
add
rcrb
or
xor
fstl
adc
leave
pop
das
mov
or
popf
push
pop
jmp
sub
mov
pop
sbb
insb
lcall
jmp
xchg
dec
xchg
out
jno
pop
iret
sub
ret
in
sub
lea
and
pop
inc
lret
sub
push
adc
and
mov
mov
fs
daa
add
fcmovnu
mov
imul
mov
ret
inc
push
mov
iret
mov
jl
adc
ds
mov
frstor
and
push
cmp
adc
mov
fimuls
es
pop
enter
cmpsl
out
mov
and
xchg
loopne
je
out
sbb
fsubl
jge
sub
mov
push
inc
adc
mov
lods
loop
add
push
jbe
dec
pop
pop
xor
mov
cmpsl
jmp
cmp
fstpt
loope
xor
inc
inc
xor
xchg
ror
mov
xchg
pushf
les
add
adc
mov
lock
fisttpll
std
faddp
adc
sub
mov
arpl
idiv
dec
inc
clc
je
sbb
shll
and
ret
xor
xchg
xchg
cmpl
xchg
and
pop
push
mov
push
cli
adc
dec
xor
ret
add
pop
daa
ja
cmp
push
imul
movsb
out
pop
mov
push
int3
jge
xchg
sbb
adc
les
xor
dec
sahf
cs
iret
pop
mov
pop
pop
xlat
lahf
flds
pop
enter
add
or
and
mov
mov
add
insl
shr
push
into
arpl
jne
dec
push
xor
pop
test
in
int3
jnp
ds
addr16
adc
inc
push
xor
movsl
pop
lcall
mov
xchg
aam
or
mov
nop
loop
jmp
in
fwait
mov
test
jb
les
jns
repnz
jb
testb
push
les
mov
push
lea
mov
lcall
xchg
push
pop
sbb
lret
in
fldl
mov
xchg
shlb
fstpt
call
js
leave
dec
scas
mov
outsb
std
lds
mov
out
xchg
aas
jl
out
lret
pop
mov
movsl
cmp
push
fisttpll
adc
push
mov
xor
mull
jge
mov
stos
jne
push
adc
jno
rorl
xorb
insb
insl
push
clc
pop
push
adc
jae
aaa
adc
dec
or
mov
mov
lcall
and
shrl
outsb
and
stos
int3
push
pop
xchg
stc
mov
pusha
pop
addps
aaa
push
cmc
pop
sbb
popa
jbe
popa
addb
mov
mov
dec
push
js
push
jae
in
bndmov
add
push
or
loopne
push
stos
inc
sub
dec
adc
dec
in
in
fcmovne
add
pop
das
and
test
push
xchg
dec
lods
fwait
nop
jae
add
int3
pop
mov
inc
mov
mov
clc
cmp
and
leave
jb
mov
xor
cld
psubsb
stos
sbbl
jnp
cld
lock
std
cmp
or
fcomps
xchg
xchg
jns
inc
dec
lock
pop
mov
pop
test
jo
add
xchg
and
cmp
test
adc
cltd
popf
js
add
pop
loope
and
cmp
call
insb
mov
push
leave
or
mov
cld
and
push
sahf
push
or
popf
dec
addr16
jb
adcl
jl
push
popf
and
daa
pop
xor
adc
fstl
cmc
loope
daa
adc
inc
fldenv
lcall
push
mov
mov
push
ret
in
inc
mov
shrb
dec
repnz
ret
or
cmp
ret
xchg
repz
movsb
lret
cmpsb
add
out
int
pop
push
mov
in
pop
mov
xor
std
aam
jge
cmp
dec
push
bound
outsl
iret
cmpsb
jge
inc
rorb
sbb
pop
inc
inc
clc
gs
loop
stos
inc
inc
mov
lods
shll
jge
in
xchg
mov
imul
mov
xor
xchg
mov
subb
ret
lds
nop
xchg
mov
dec
nop
adc
adc
stc
jo
sub
arpl
or
pop
outsl
cmp
jmp
adc
pop
jmp
loopne
jmp
jl
pop
fsubl
push
pop
adc
fprem
or
pop
rolb
mov
mov
iret
mov
insl
jg
lret
inc
xchg
cmp
fidivs
fs
mov
xor
fcoml
xchg
fistpl
push
sbbb
dec
jae
mov
in
or
sbb
inc
in
lea
mov
insb
dec
test
movsl
inc
mov
stc
gs
xchg
fcomps
xor
clc
and
inc
lods
repnz
out
sbb
repz
ret
dec
scas
lret
shlb
jne
out
arpl
cltd
mov
outsl
or
push
inc
leave
idivl
sbb
dec
and
icebp
jecxz
sti
jbe
andl
dec
scas
js
sbb
fdivl
xchg
mov
push
xchg
mov
jle
cmp
adc
pop
xchg
cmc
lcall
and
int3
in
test
mov
xor
lock
out
ret
scas
pop
mov
sbb
out
or
mov
cmpsb
inc
mov
adc
into
push
inc
test
aas
inc
push
inc
mov
xor
push
stc
mov
xchg
dec
xlat
daa
ret
scas
inc
xor
push
mov
insl
pop
jmp
xor
mov
adc
xchg
sbb
dec
sti
jbe
in
into
or
xchg
add
push
lcall
icebp
imul
ljmp
ss
movsb
xchg
sub
mov
sti
sti
nop
lods
lret
stc
mov
sub
cmp
rcrl
lods
fimuls
fcmovbe
inc
insb
les
or
imul
out
nop
or
xchg
xchg
leave
dec
add
mov
xchg
out
inc
and
loop
ds
push
stos
fcoml
or
out
push
xchg
gs
clc
or
fmuls
out
jne
cmpsb
notl
pop
push
or
mov
in
cmp
std
and
cmp
sti
repnz
sbb
imul
mov
mov
mov
cmp
jl
cli
xchg
mov
roll
add
jmp
jo
call
arpl
inc
jae
or
fs
call
sub
add
enter
cltd
in
mov
cmc
sarl
mov
shlb
xchg
lods
fcompl
mov
cld
imul
mov
push
faddl
ret
inc
leave
jb
fisubrl
mov
jge
cmp
mov
jnp
cld
mov
ret
fwait
mov
or
or
mov
scas
cli
adc
es
cli
xchg
fsts
cmpl
add
addr16
aas
push
and
js
sub
adc
fsubr
sti
cs
adc
subb
fdiv
pop
push
dec
mov
sbb
push
and
mov
ret
push
jmp
incb
popa
sbb
inc
fisttpll
mov
sub
jle
sub
dec
gs
int3
data16
push
pop
xchg
mov
mov
test
mov
pop
xlat
inc
ljmp
sbb
inc
and
or
mov
pop
dec
xchg
cmpb
stc
mov
repnz
inc
les
movsl
dec
fbld
and
sub
popf
pop
push
jo
in
cmp
xchg
jae
pop
or
ficoms
inc
lret
add
popf
cmp
cli
popa
xorb
sbb
int3
ret
loop
push
mov
and
ds
repz
fsubp
loop
jbe
or
hlt
adc
test
jo
aam
mov
cmp
popa
push
sub
insb
cld
lea
inc
pushf
mov
enter
lret
repnz
add
add
fidivl
cmp
jge
push
call
fldl
mov
sbb
ss
adc
es
mov
mov
aaa
xchg
lcall
mov
leave
loope
push
inc
push
fildll
out
add
rclb
imul
mov
and
push
sub
je
mov
mov
mov
lret
push
add
stc
fistpl
imul
xor
pop
les
adc
push
cmpsl
dec
sti
mov
push
cmp
mov
fisubs
ja
add
adc
sbbl
mov
icebp
sbb
daa
push
xor
xchg
adc
mov
sbb
lret
mov
xor
fmuls
and
cmpsb
je
cli
lea
sbb
mov
leave
lcall
lods
xchg
push
jge
inc
les
inc
lret
sub
fisttpl
sti
stc
std
fcoml
fidivl
stos
loopne
test
repz
icebp
sub
mov
rorb
xchg
mov
dec
jecxz
pop
je
das
ja
sbb
mov
decb
or
mov
loopne
add
js
push
and
xor
lds
mov
fs
out
pop
repnz
dec
mov
in
imul
nop
mov
cmp
cmpsl
jge
cmp
in
and
add
mov
add
gs
mov
mov
jl
and
loope
out
insl
out
pop
shll
mov
std
shrl
push
adc
clc
out
inc
add
pop
insb
repz
or
dec
les
cmp
jae
sbb
and
fidivrs
dec
in
adc
cmp
sahf
stc
daa
lds
pop
sahf
in
push
int3
out
out
gs
sbb
adcb
das
jnp
sbb
jb
lret
or
gs
sub
mov
imul
or
sbb
test
adc
push
xchg
repz
sbb
lahf
lds
xor
mov
js
dec
outsb
aas
add
mov
sbb
sub
cld
xchg
popa
aam
std
inc
fs
sahf
push
add
sbb
ret
sub
push
in
dec
iret
add
xor
js
and
sbb
lcall
xor
aas
sbb
pop
add
fwait
jae
and
fs
dec
jp
inc
aam
imul
sub
int
push
and
jo
popf
mov
lret
cmpsl
dec
sbb
and
push
movb
cwtl
mov
arpl
xchg
inc
pop
seta
dec
js
test
or
dec
xchg
call
jb
xlat
in
sub
das
loop
jl
call
inc
push
xchg
push
jle
adc
arpl
ss
mov
xchg
loopne
pop
sbb
mov
mov
xchg
jb
imul
cmp
lret
and
xchg
in
bound
dec
mov
in
shlb
jmp
add
rolb
dec
xchg
inc
ja
mov
addr16
sub
aas
lret
addr16
jge
add
xchg
pop
push
scas
push
ret
call
test
shll
and
xlat
push
jne
lret
rolb
dec
ds
lock
ret
rorb
push
mov
sbbl
and
movsl
jmp
scas
fs
notl
gs
hlt
dec
test
lahf
imul
xor
pusha
jo
cmp
pop
cs
adc
push
lret
mov
and
sub
fcoml
adc
pop
nop
aas
leave
das
loopne
add
xor
pop
or
lods
cmp
add
in
ja
jbe
mov
jne
jnp
loop
xor
mov
sbb
push
xchg
xchg
cmp
mov
stos
ss
mov
add
xchg
push
mov
stc
add
pop
add
cmpsl
add
icebp
sub
cwtl
push
cmp
dec
ret
cmp
jmp
push
mov
push
pop
xor
cmp
aam
and
or
cs
repz
popf
xchg
push
rcrl
fisttpl
loopne
xor
mov
dec
in
cli
jnp
mov
sbb
out
mov
rorl
int
adc
xor
cli
fadd
mov
fldt
add
push
data16
ret
jge
push
sub
mov
int
iret
lret
dec
test
nop
push
lods
cmp
mov
or
pop
dec
cmpsb
fisubrs
xchg
cmpsb
sub
fisttps
pushf
in
xor
test
shl
inc
lret
jp
mov
stos
sbb
movsl
mov
cmp
repnz
gs
xor
insl
push
mov
bnd
pop
add
mov
insb
mov
rorl
ds
xor
mull
jmp
or
ja,pn
mov
cs
in
addl
jno
dec
push
loop
mov
xchg
sub
subb
push
inc
int
cli
ret
stos
xor
mov
push
fldcw
push
mov
pop
mov
jecxz,pt
popl
mov
shll
push
mov
aam
out
es
mov
sub
les
xor
jmp
popf
arpl
jo
stos
ret
inc
inc
imul
push
xchg
xor
push
mov
fidivs
mov
jg
mov
push
scas
std
mov
add
and
inc
cmpsb
test
xchg
adc
addr16
mov
and
dec
shll
inc
cmp
pushf
pop
subl
cld
jb
int3
and
inc
xor
dec
and
push
add
int3
ss
fildll
data16
shrb
les
mov
or
or
push
sahf
icebp
mov
out
or
xchg
push
sub
psubusb
lods
stos
dec
ret
int3
pusha
mov
in
lcall
inc
pop
sub
in
or
ja
rcl
mov
dec
fwait
and
xor
inc
inc
add
add
mov
dec
scas
jecxz
and
mov
shlb
sub
dec
addl
fisttps
pop
cmp
jo
cmp
pop
mov
fsubrs
fimull
sbb
sub
dec
push
jg
jge
outsl
pop
ret
lret
push
jecxz
je
aad
lahf
ret
les
insl
adc
mov
or
adc
pop
test
fsts
sbb
sbbl
mov
xor
cli
xor
mov
inc
aas
outsb
dec
push
xor
dec
daa
sarl
stos
sub
xchg
dec
jns
jg
in
fcoml
xchg
int3
andb
inc
pop
ja
nop
mov
mov
sub
dec
sbb
ljmp
out
loope
sbb
inc
adc
sar
roll
sahf
outsl
cli
push
push
shl
xchg
mov
repnz
push
std
scas
insl
outsl
cld
jno
adc
cmpsl
in
dec
add
imul
xor
mov
out
pusha
xchg
and
or
dec
divb
sti
sti
jecxz
xchg
cltd
or
fisubrl
cmpsb
cld
mov
push
insl
fisubs
orl
mov
clc
mov
gs
mov
ds
cmp
cmp
pop
scas
or
pop
mov
fcmovbe
cmc
jno
into
clc
test
mov
mov
loope
enter
test
xlat
inc
mov
icebp
sub
sahf
lods
push
dec
push
cmpsl
ja
pop
ss
pop
lret
mov
jne
cld
loop
in
cmc
mov
or
inc
push
aaa
jo
jb
ja
outsl
jo
adc
movsl
test
add
inc
leave
scas
and
insb
adc
cltd
pop
imul
xchg
xor
jg
das
push
stos
lret
xchg
and
jge
lds
dec
mov
mov
movsb
pop
xor
rclb
xchg
imul
pop
inc
lcall
adc
mov
pusha
and
mov
mov
sti
add
sbbb
push
mov
cwtl
int
test
pop
dec
xchg
test
jmp
add
dec
fadds
and
aaa
sbb
pop
pop
sub
adcl
add
iret
dec
mov
cmp
ja
push
out
mov
aas
or
icebp
dec
jno
push
cmc
fstl
int3
repz
push
sub
pop
aaa
push
jle
pop
dec
out
xor
sub
add
push
sahf
shll
movsb
rorl
sub
sbb
add
xlat
jne
insl
mov
sub
ja
gs
mov
subb
sahf
fldenv
cld
sub
xor
mov
inc
adc
cwtl
jl
xor
out
pushf
mov
sbb
mov
mov
xchg
bound
cmpl
or
cmpsl
mov
xchg
jns
or
xchg
mov
adc
shll
and
pop
mov
lcall
stc
test
into
adc
xchg
xor
jmp
in
xor
mov
pop
mov
insl
mov
cmp
mov
lcall
popf
test
pop
xchg
mov
or
inc
inc
aas
roll
and
push
inc
pop
adc
xchg
imul
xchg
push
jb
mov
cmpl
inc
push
popa
mov
inc
cmp
lret
inc
mov
dec
es
leave
shll
mov
and
cwtl
loope
out
add
sbb
xchg
push
loop
and
mov
stos
inc
push
cmp
or
icebp
inc
sbbb
pop
rorb
dec
mov
movsb
cli
sub
pop
jne
push
in
and
fcomip
lahf
cmp
fwait
lds
dec
or
adc
inc
aaa
mov
jne
mov
mov
gs
xor
add
pop
repz
pop
fists
mov
xor
xchg
aas
repnz
cmp
jmp
bound
nop
out
push
iret
pop
pop
loop
inc
push
js
scas
clc
out
or
dec
lret
xchg
pushf
inc
mov
sti
stc
push
rclb
imul
adc
imul
lds
movl
xor
push
push
jbe
pop
xchg
in
cmp
push
mov
in
mulb
add
negl
sarl
mov
cmp
sbb
test
fcomps
out
xor
xor
xor
imul
pop
jo
push
xor
std
mov
cwtl
movsl
dec
mov
xchg
and
sbb
aas
add
test
or
mov
repnz
push
lea
call
popf
jnp
insb
xor
fildll
loope
xor
or
cld
sbb
mov
inc
mov
test
push
cmp
stos
push
imul
mov
or
dec
mov
add
daa
adcl
sub
mov
cmpsl
and
mov
mov
and
ret
jmp
mov
xchg
mov
test
jno
push
cmpsl
pop
xorl
inc
and
sbb
lahf
pushf
int
or
mov
pop
or
sbbl
adc
bound
fstps
je
pop
push
xlat
cwtl
jbe
movsl
pop
mov
test
daa
jno
cli
push
loope
mov
test
push
ja
shrl
movsl
pop
rorb
cmpsl
jne
xchg
ljmp
mov
lock
fcmovnb
cmp
sbb
cmp
adc
stc
iret
imul
stc
iret
les
push
xchg
in
xor
lods
mov
push
imul
sbb
fiadds
mov
jge
mov
stos
mov
filds
outsb
insl
lds
pop
into
nop
out
sub
sub
int3
jns
aas
jl
push
push
repz
dec
and
ret
movsl
mov
and
out
insb
sbb
xchg
mov
mov
pop
fiadds
iret
lahf
mov
cmpsl
xchg
sub
adc
es
adc
rol
fwait
lock
mov
add
daa
sbb
inc
xchg
fucomp
out
cmp
js
sub
js
lock
mov
mov
sub
xor
jg
test
loopne
push
mov
inc
into
jge
imul
dec
test
clc
jne
cltd
cli
sbbl
subb
and
ficoms
imul
inc
add
mov
dec
cs
xor
push
popa
pop
jecxz
cld
mov
lea
jecxz
pusha
push
xor
clc
lds
repz
cltd
and
aad
jp
jmp
stos
gs
jg
add
lock
jg
push
mov
mov
jns
sub
push
imul
outsl
push
sbb
xchg
std
xorl
cli
xchg
shlb
cmp
cmc
daa
xchg
pop
xchg
or
data16
int3
das
xchg
bound
or
test
push
dec
repnz
out
xor
jle
out
dec
cmp
lret
push
lods
stos
daa
inc
xlat
xchg
and
sti
loope
add
daa
in
and
negb
jl
cmpl
dec
movsb
loop
mov
iret
and
add
cltd
imul
jmp
mov
jle
in
ret
cmp
push
iret
aad
out
mov
jmp
inc
popa
jb
cmp
inc
jmp
das
xchg
outsb
xchg
out
mov
fnstcw
dec
movsb
in
jo
stos
in
pop
in
ss
jg
incl
lret
adc
jns
add
subb
sbb
adc
pop
in
bound
jno
mov
scas
mov
pop
mov
inc
clc
jb
xor
mov
cltd
add
cmp
or
jge
mov
and
stos
out
mov
loop
fsubp
cmpsb
mov
mov
xor
gs
cmpsl
add
xchg
jmp
xor
in
in
in
jl,pt
aam
lcall
push
cld
insl
enter
ret
xchg
shrb
inc
out
inc
push
nop
cmp
push
test
pop
rclb
popa
std
gs
cltd
jno
xor
stos
aaa
inc
xchg
sub
sub
cli
cmp
pop
sbb
enter
push
movsb
mov
adc
adc
push
jbe
fistps
fcompl
int
fs
push
pop
dec
cmp
scas
call
mov
push
push
aas
out
fisubrl
and
shlb
call
mov
push
dec
dec
add
push
jo
mov
dec
ljmp
loope
adc
jno
movsl
test
cs
cli
ss
std
fistpll
mov
sub
sbb
stos
out
mov
sub
xor
fwait
cmc
lods
dec
mov
mulb
shll
jle
mov
ret
cmpsl
out
jge
movsl
rcrb
lds
cmp
adc
jge
push
stos
cmp
and
xchg
jnp
cmc
inc
cwtl
imul
lock
and
bound
xor
push
ja
lcall
or
fwait
inc
mov
call
popf
mov
add
sbb
xlat
rcll
cmpsb
pushf
mov
iret
loop
fs
push
push
out
jle
push
addb
add
push
inc
dec
xchg
pop
or
mov
int3
or
pop
test
repz
test
in
mov
adc
jae
or
push
jb
xchg
jg
sub
pop
jnp
xor
aam
add
xlat
adc
imul
dec
aad
xor
fldcw
push
lods
xchg
cmc
cmp
push
sub
iret
fidivs
adc
push
sbb
fcoms
loope
jle
xchg
dec
scas
mov
lcall
mov
fmulp
jo
rcll
out
scas
sbb
cmc
or
js
xchg
subl
sbb
push
sbb
xchg
xchg
cltd
push
pusha
xor
xchg
mov
xchg
xor
lods
sub
add
and
xchg
jecxz
mov
rcrb
xchg
mov
xchg
sub
stos
and
xor
jnp
ret
xchg
fadds
sub
mov
add
pop
sarb
aaa
xor
or
mov
into
shr
pop
add
pop
sti
pop
xor
xchg
mov
pop
lret
fdivrl
lret
push
xor
xlat
enter
sbb
and
rcll
mov
lret
out
adc
cmp
arpl
mov
push
jmp
xchg
sbb
dec
insl
mov
mov
js
push
test
in
or
pop
and
sbb
iret
add
or
mov
lds
add
test
add
sbb
push
pop
cmp
push
cld
cmp
and
pop
fisubrl
mov
test
push
adc
ret
mov
lods
cld
lods
xor
out
cmpxchg
mov
lods
popf
test
aam
pusha
xchg
dec
dec
push
xor
rcll
mov
dec
adc
adc
divl
rep
add
or
test
in
push
in
clc
pop
dec
ljmp
into
in
push
fcmovnb
mov
stos
es
xchg
aas
int
shrb
js
rcrl
out
dec
testb
les
nop
xchg
pop
cmpsl
xchg
loope
push
inc
dec
fildll
movsl
lcall
ljmp
dec
test
test
or
adc
dec
icebp
push
xchg
mov
mov
shrb
scas
pop
mov
cld
add
jno
mov
fcmovbe
jbe
mov
inc
out
sahf
lock
inc
sub
pop
addl
push
add
ret
out
pop
mov
imul
imul
lods
push
repnz
cmpb
mov
lods
xchg
cmc
scas
stos
or
pop
daa
jp
sub
inc
movsb
lods
pop
push
cltd
or
int3
enter
add
xchg
jle
and
ret
cmpsb
add
pop
xor
stos
mov
les
imul
or
push
clc
pop
clc
mov
sub
repz
arpl
int3
mov
ret
fistpll
inc
mov
dec
mull
mov
jbe
movsl
stos
cs
jns
xchg
insb
pushf
or
cmpsb
add
lods
mov
cld
lahf
mov
jmp
lods
sbb
adc
pop
mov
jb
push
inc
pxor
inc
mov
insb
sub
outsl
das
inc
mov
dec
or
xor
in
sub
ficompl
xor
sarl
movsl
lock
sbb
jp
mov
lahf
xchg
inc
inc
cmp
xor
pop
fistpll
xchg
add
fildll
and
dec
sub
sub
lahf
in
stos
pop
sub
push
fwait
daa
jle
xchg
and
addr16
outsb
in
adc
mov
sub
cmp
mov
cltd
sbb
gs
xchg
xchg
popa
pop
cmp
repz
out
or
rclb
cmpl
push
mov
in
add
dec
jno
adc
cmpsb
sbb
lock
jne
add
mov
pop
sub
cmc
pop
inc
mov
fdivrs
xlat
data16
cmp
push
stos
or
jmp
cmp
cmpsl
pushf
or
mov
mov
stos
sti
clts
mov
or
bound
aas
push
or
jmp
test
sbb
loopne
fwait
roll
mov
mov
jb
mov
and
pop
sbb
mov
div
lock
xchg
std
sub
lea
add
hlt
pop
xor
int3
push
loope
clc
xor
testl
cmp
inc
jl
inc
lods
sbb
repnz
add
cltd
sahf
push
ffree
push
or
dec
outsb
push
mov
or
fwait
mov
add
sub
bound
or
decb
xchg
es
insb
add
cmc
stc
xchg
or
mov
jecxz
sbb
leave
cmovnp
jo
mov
mov
or
aas
ss
int3
mov
mov
sti
xor
and
and
push
enter
andb
and
mov
lock
cs
push
fwait
arpl
cltd
test
push
or
hlt
in
es
xor
cmpsl
mov
insl
fs
in
movsb
je
out
daa
push
mov
es
sbb
movl
pop
stos
rolb
lahf
shlb
loopne
pop
addr16
outsb
adc
mov
xchg
pushf
dec
mov
into
inc
leave
jmp
inc
leave
sbb
out
inc
mov
movsl
cmc
hlt
push
or
xor
inc
sahf
sti
cltd
jp
push
xor
jnp
and
jmp
notl
lods
insb
xor
andl
aas
cmpsl
int
adc
shll
ret
daa
jge
outsl
mov
mov
and
or
or
dec
dec
push
shrl
adc
mov
fdivr
ss
inc
pop
cs
loopne
push
jbe
xor
xor
add
mov
jecxz
add
insb
mov
xlat
ljmp
pop
and
sbb
ficomps
mov
xor
jl
data16
mov
push
cmp
mov
lods
fnstenv
into
mov
push
jle
jno
es
and
or
out
mov
test
roll
mov
fstpl
xchg
push
jns
push
std
sub
mov
mov
notl
sub
sarl
jge
scas
fimull
incl
pop
xor
or
jle
mov
jae
inc
insl
sub
sar
mov
add
and
xchg
mov
jno
mov
push
subl
call
in
push
loope
add
ss
push
es
mov
pop
xchg
xchg
adc
adc
inc
or
andl
fldt
pusha
add
lcall
push
cli
cli
push
sahf
pop
dec
or
out
jnp
cmp
push
mov
mov
fcoml
add
xor
push
bound
mov
sbb
jno
std
inc
and
or
filds
das
xchg
fs
mov
pop
cli
fsubrs
sti
cmp
xor
aas
addr16
fldenv
sub
mov
xchg
fstps
bound
fistpl
cmpsb
sub
inc
xor
push
jg
andl
cmc
movsb
dec
pop
sbb
sub
mov
dec
mov
in
or
adc
cmpsl
mov
cltd
fs
inc
pop
cmpsb
jle
mov
mov
ss
insl
add
aad
lcall
jg
xchg
int
jns
xchg
dec
cwtl
mov
sbb
dec
rcrb
xlat
jno
stos
fldl
inc
adc
pop
dec
test
and
xlat
pop
push
dec
scas
cmp
and
mov
arpl
pop
cmpsb
jg
mov
jge
faddl
sbb
insb
fidivrl
arpl
pusha
bound
dec
inc
inc
mov
out
in
pop
cmpsl
push
push
pop
jae
aaa
mov
test
cmp
sarb
fwait
mov
shll
lret
inc
ficoms
cmp
pop
pop
push
ja
xchg
lcall
jne
push
stc
dec
jae
adc
leave
mov
andl
dec
sarl
xchg
jo
divb
cmp
daa
fs
sahf
gs
dec
or
pop
dec
cmp
push
inc
add
mov
dec
js
shlb
hlt
js
int3
xchg
push
daa
adc
imul
cli
sahf
inc
outsl
sahf
js
or
add
test
push
mov
mov
xchg
xchg
and
cmpsb
mov
jl
or
pop
sbb
xor
out
jns,pn
test
std
icebp
mov
xlat
sub
mov
inc
cmp
insb
lods
sbb
ret
cmp
fs
dec
lahf
cltd
mov
out
stc
sarl
imul
repnz
xchg
imul
das
fstpl
fidivrl
add
or
popa
xchg
aaa
add
loop
sub
popf
lods
add
jae
mov
out
sbb
sbb
mov
add
jmp
stc
adc
mov
xor
cmc
pop
in
out
scas
flds
ljmp
pop
loop
mov
out
test
sbbb
mov
out
and
dec
movsl
int
nop
jnp
out
mov
xchg
frstor
sub
or
fwait
sub
test
das
out
lcall
mov
orb
fmull
cmpsl
es
mov
mov
mov
xchg
sub
adc
dec
js
enter
shlb
cmp
cwtl
adc
or
mov
test
test
daa
fistpl
jnp
insb
in
ja
and
jp
sti
mov
insl
bound
es
movl
sbbb
xor
lahf
fidivs
int3
into
insb
cmc
shll
xchg
mov
repz
jns
push
xor
in
dec
push
movsl
movb
lret
dec
push
lods
add
jbe
add
mov
pushf
jmp
pop
and
ljmp
mov
jb
mov
push
in
nop
adc
xlat
adc
ss
xor
jne
or
fistpll
adcb
mov
imul
xchg
lods
lahf
mov
fstl
movsb
int
sub
and
daa
push
shlb
lods
dec
and
sbb
js
mov
xchg
jno
jne
and
mov
inc
add
fcoml
cmp
sub
and
icebp
out
loopne
int
mov
lock
shlb
mov
mov
jge
pop
xchg
lcall
jl
or
push
inc
repnz
mov
loop
lahf
sbb
ljmp
shll
pop
shll
mov
or
jno
iret
and
jge
sahf
or
adc
push
cmc
xor
cmc
inc
movsb
rorb
and
clc
lahf
jb
loopne
in
fsubs
or
jae
pop
clc
xchg
cmp
orb
mov
push
add
into
xchg
lret
mov
imul
pop
nop
mov
cmp
pop
cmc
jg
jmp
lahf
pop
xor
push
pop
fiaddl
test
and
xchg
and
push
add
mov
outsb
sbb
roll
hlt
test
jo
cwtl
lahf
push
movsb
mov
jg
inc
cmp
and
push
cmovne
xchg
jbe
fisttpll
sti
loopne
imul
ss
xchg
jge
neg
leave
jmp
jg
data16
add
clc
in
in
aas
movb
mov
test
push
sub
dec
mov
mov
outsl
andb
inc
mov
das
dec
cmp
mov
lds
jns
mov
or
loopne
fwait
out
ljmp
dec
and
test
xchg
cmp
jns
jae
mov
xchg
scas
jl,pt
add
in
cmc
popa
jns
ret
mov
jno
push
mov
jge
hlt
and
inc
cmpsb
inc
inc
add
or
jl
inc
rol
shll
xchg
mov
repz
dec
pop
nop
inc
test
lcall
outsb
inc
sarb
add
sbb
push
orl
mov
insb
ret
cmpsl
hlt
and
inc
std
or
mov
ja
insb
push
je
push
xor
push
loop
fstl
mov
shr
in
mov
mov
out
mov
dec
dec
repnz
or
popa
gs
sbb
push
mov
out
fildll
mov
jp
and
bound
and
je
jmp
fscale
into
dec
mov
imul
xlat
and
fsubl
pop
mov
mov
mov
js
ljmp
inc
stc
ret
xorb
xchg
inc
popf
mov
fisubrl
dec
aaa
cmp
aas
jb
push
test
lods
fwait
xorb
or
mov
loopne
cmp
jae
add
xlat
cmp
and
sub
fs
lahf
mov
pop
cmpsb
mov
xor
push
icebp
mov
or
push
dec
mov
les
setae
stc
or
mov
mov
pop
test
sub
and
repnz
dec
test
mov
cmp
cmp
ljmp
inc
dec
pusha
rorb
fcmovne
imul
dec
mov
xchg
test
mov
lret
pop
dec
jb
pop
mov
cwtl
mov
sbb
pop
lahf
dec
pop
ja
jne
push
pop
sti
lods
sub
mov
in
out
xchg
in
rclb
and
gs
and
lock
mov
and
addb
mov
sbbb
adc
or
sub
add
outsl
jbe
pop
sti
in
insb
aaa
jnp
scas
lret
pop
lcall
cld
aam
sbb
aas
idivb
fidivs
nop
mov
dec
lods
add
clc
mov
push
xor
adc
or
lahf
js
xor
sub
adc
adc
jo
lahf
or
in
jae
stos
jp
push
push
jns
sub
push
mov
dec
jge
xchg
rcll
mov
dec
mov
aam
fnstcw
jae
jecxz
imul
jno
sbb
adc
dec
dec
test
jl
xor
aaa
loop
cmpsl
xchg
fstpl
loopne
sbb
jnp
int
xor
push
cli
cmp
cld
stc
pop
insb
sbb
gs
repnz
jae
push
jp
jb
fstpt
and
sbb
repz
lods
lcall
imul
mov
mov
sbb
stos
xchg
xor
inc
and
mov
dec
xchg
sahf
sahf
pop
lods
cmp
out
mov
push
xchg
xchg
adc
push
aad
xor
enter
inc
mov
add
lock
dec
push
pop
pop
push
loop
jp
inc
outsl
sub
jmp
jo
pop
mov
aaa
cmp
outsl
mov
cmp
inc
ret
mov
orl
mov
jne
jae
push
xchg
clc
ret
xor
adc
movsb
sub
popf
xchg
dec
inc
out
mov
repz
push
in
jl
push
pop
push
sub
inc
xor
push
addr16
into
hlt
fs
je
in
push
dec
jne
and
gs
cld
fdivrl
mov
mov
sbbl
in
enter
mov
aas
or
mov
aaa
sbb
mov
lds
mov
mov
test
mov
pop
repz
rcll
ljmp
std
mov
dec
adc
lods
pop
sub
adc
cltd
pop
cmpsb
fwait
les
stc
push
les
and
lock
jp
insb
mov
and
inc
mov
jns
inc
jp
shl
andb
fildll
jns
std
movsb
dec
mov
mov
push
sti
or
cld
add
int3
ds
jne
outsb
inc
mov
mov
mov
movsl
pusha
jne
icebp
lret
fistpl
scas
arpl
mov
fdivrp
adc
jecxz
adc
cmpsl
addr16
sbb
bound
add
or
push
test
das
sbb
or
popa
dec
lods
mov
inc
mov
stos
testl
out
or
cld
jl
and
fcomps
mov
loop
and
shrl
lret
cmp
rcrl
jp
xchg
mov
enter
mov
pop
xor
dec
mov
push
sbb
sbb
jo
mov
cmp
fwait
push
push
inc
imul
ret
clc
mov
mov
push
ds
xchg
iret
dec
out
lret
mov
insl
std
xchg
out
jge
pop
rcll
roll
xchg
jmp
xor
in
mov
mov
mov
fimull
or
inc
xchg
jecxz
mov
rorl
popf
add
push
dec
imul
pop
sbb
xchg
aas
inc
je
leave
addl
jbe
mov
xchg
mov
popa
adc
in
jno
ret
fildll
mov
inc
dec
or
push
fldenv
mov
mov
sbb
loopne
fwait
pop
mov
ret
push
loope
add
adc
sahf
insl
jnp
not
cwtl
cmp
cwtl
rclb
rolb
lahf
arpl
fs
mov
cwtl
jbe
or
mov
out
mov
xchg
jg
stc
jl
cmc
bnd
mov
std
sbb
out
test
fdivr
cmp
int3
out
lods
jmp
out
sub
ret
mov
jge
aaa
xor
push
xchg
jecxz
loope,pt
pop
int
lock
lret
sub
push
mov
inc
clc
adc
dec
dec
mov
rorl
adc
push
add
data16
lahf
push
data16
cwtl
xor
sbb
adc
mov
ret
xchg
adc
xor
clc
mov
stos
sbb
icebp
pop
je
test
sarb
ss
jecxz
stc
xchg
inc
lahf
bnd
bound
mov
and
ficoms
movsl
sbb
in
xlat
jae
ja
sbb
imul
sbb
lock
mov
frstpm(287
call
jno
xchg
xchg
pop
cmp
movsb
cmpsl
mov
popf
xchg
divl
subb
jbe
mov
mov
sub
jbe
clc
filds
dec
repz
mov
adc
cmp
push
or
jmp
push
movl
cs
mov
jp
jmp
xchg
outsb
xchg
std
dec
imul
xchg
jge
xlat
test
sti
insb
gs
addr16
mov
xor
mov
mov
test
pusha
loope
ror
mov
int3
add
or
lods
mov
sub
dec
loopne
loope
sbb
cwtl
sbb
push
mov
xchg
mov
shll
adc
fstpt
push
xchg
xchg
add
and
rcl
ds
sti
push
jmp
or
adc
out
xchg
inc
fistl
mov
pop
and
adcl
in
jns
fdivrs
stos
fisubs
std
fidivrl
sub
mov
mov
sbb
sbb
ljmp
scas
jmp
inc
icebp
stos
stc
in
cmc
jo
sbb
dec
in
ds
or
ret
adc
or
lcall
dec
stos
dec
out
xlat
mov
mov
ret
hlt
inc
sbb
pop
mov
pop
adc
add
pop
mov
data16
sub
jns
sub
loopne
lods
rorl
test
pop
push
out
mov
jle
ret
inc
mov
inc
push
arpl
fs
ficoml
mov
xor
scas
leave
loope
ja
mov
add
xchg
mov
adc
repz
mov
xrelease
mov
data16
in
push
adc
push
mov
aam
mov
add
sub
cwtl
sahf
push
sbb
jno
cmp
dec
repz
xor
pusha
aad
test
pusha
sbb
sub
loope
pop
mov
jle
cmp
lods
out
add
push
popl
xchg
aad
fwait
sub
repnz
sti
setb
outsb
cmpsl
aam
les
repz
fst
sahf
lcall
adc
mov
dec
mov
stos
call
or
pop
lods
lock
pushf
stos
mov
sub
push
lret
cltd
or
mov
testl
mov
xchg
dec
in
pop
test
and
pop
iret
clc
mov
sub
das
adc
push
ss
push
aas
mov
orl
add
mov
adc
mov
out
or
jp
movsl
jne
jge
fnstcw
inc
mov
iret
btc
dec
push
cli
pusha
mov
cld
pop
jg
popf
mov
sub
mov
adc
data16
inc
mov
mov
mov
lods
into
jg
mov
int
mov
ret
fldt
push
jmp
cld
loopne
pop
dec
les
clc
jno
jbe
mov
sti
inc
xchg
sbb
cmp
sbb
out
adc
push
jns
popf
mov
and
or
push
add
outsl
dec
in
inc
add
sti
bnd
jb
mov
pop
in
dec
leave
sbb
out
insb
insl
pop
cld
negl
out
or
fisubrs
loope
insb
pop
inc
sbb
pop
ds
pop
cmp
inc
pop
or
out
xor
cli
aaa
adc
mov
movsl
shll
inc
jp
sub
test
fiaddl
mov
sub
out
ret
ja
idivl
imul
mov
adc
fadds
sbb
rclb
mov
dec
pop
sub
pop
adc
test
ret
pop
inc
popf
pop
sbb
jle
cltd
sbb
mov
insl
cmp
ret
mov
imul
mov
mov
mov
pusha
cmp
sub
adc
inc
dec
loop
sbb
stos
mov
jecxz
xchg
mov
dec
into
and
clc
or
or
push
inc
and
push
and
idiv
mov
xor
daa
in
sbb
ljmp
fsubl
and
mov
jae
in
jge
sbb
dec
mov
mov
cmp
mov
lret
pushw
aam
xor
mov
in
icebp
fimull
cmp
lcall
mov
add
out
lret
add
out
divb
dec
lods
aad
xor
fs
repz
pushf
ret
mov
and
cmp
and
adcl
mov
es
inc
cmp
pop
jge
xlat
xchg
and
xlat
jmp
mov
arpl
lods
add
dec
xlat
nop
test
popa
lods
xchg
ret
daa
adc
xchg
mov
and
inc
xchg
call
and
pop
fadds
rcrb
push
cmp
dec
clc
dec
jne
mov
dec
push
inc
mov
and
sarl
xlat
popa
or
int
adc
lea
leave
mov
lret
cmp
sbb
push
push
cs
cmpsb
stos
cs
lea
mov
mov
jbe
adc
cmp
push
test
scas
add
sbb
jle
xchg
mov
ja
test
es
jbe
add
imul
lods
adc
pop
jp
int
in
cmovle
push
nop
je
enter
sarb
mov
es
loope
je
xchg
and
sub
lods
into
mov
ds
mov
arpl
or
pmaxsw
inc
fcompl
popa
nop
loop
mov
push
into
dec
movsl
push
mov
sub
test
push
adc
sti
fcom
adcl
inc
xor
adc
or
fcmovnu
mov
test
add
xor
push
jg
xor
loopne
gs
push
sti
imul
mov
adc
mov
xor
sbb
xor
mov
dec
test
paddusb
jmp
ljmp
in
lea
xchg
sub
adc
push
and
cmc
lock
lahf
sahf
mov
cwtl
pop
sbb
push
jno
out
mov
push
gs
mov
pop
mov
fdivl
imul
push
notl
push
aam
cmp
mov
adc
lock
fidivrs
test
loopne
loop
inc
fs
mov
jnp
mov
ds
es
sbb
sbb
push
aam
mov
das
nop
js
aaa
mov
and
xchg
push
fldcw
jmp
and
pop
inc
dec
jns
aaa
jae
rcr
xor
cmp
dec
popa
call
add
shlb
pop
jle
and
xlat
shlb
adc
pop
mov
repz
xchg
dec
data16
repz
loop
push
sub
pop
idivl
arpl
add
ss
fmuls
mov
fadd
int3
jmp
imul
push
and
jbe
mov
daa
cmp
cmpl
aaa
cli
mov
xor
dec
push
dec
ja
ja
insb
inc
add
daa
ljmp
shll
mov
loopne
sub
das
and
fs
inc
mov
inc
sub
stc
in
inc
mov
cmp
pop
je
fcmove
pop
shll
inc
push
stos
rorl
mov
add
jp
repz
out
add
xchg
or
lret
stc
mov
cmpsl
into
xchg
cmp
popa
xchg
shll
add
popf
jl
inc
std
ljmp
mov
jbe
jp
add
adc
stos
lods
fwait
rolb
push
or
push
call
add
mov
adc
push
fisubrs
jno
je
mov
hlt
xor
in
push
jle
push
sbb
push
mov
sarl
sbb
jno
jnp
sub
rcrb
lods
fucom
popa
sti
or
iret
arpl
mov
scas
jb
popf
ror
sbb
fmull
adc
add
mov
xor
dec
pop
test
jae
xor
sti
movsb
pop
or
iret
mov
and
addr16
repnz
pop
pop
jo
loopne
mov
push
cmp
out
into
lret
hlt
push
imul
mov
or
fwait
cmp
mov
iret
push
dec
int
sub
inc
shrb
mov
xchg
or
test
clc
mov
xor
inc
mov
add
mov
adc
outsl
pop
mov
push
movsl
ljmp
and
push
outsl
jle
mov
insb
push
popf
sub
push
pop
daa
add
xchg
add
cli
xchg
repz
leave
and
jns
sbbb
ds
pop
pop
in
inc
jns
pusha
pop
aad
lods
pusha
and
shrl
jmp
sub
sbbl
push
jge
cmc
jg
xchg
mov
sub
mov
pop
mov
in
xor
pop
test
xor
aaa
cmpsl
fcmovnbe
mov
mov
add
data16
dec
movsl
out
or
pop
ficoml
outsb
jo
aas
movsl
fcoml
xlat
int
xchg
in
in
aam
jne
and
jae
das
pop
add
fdivs
mov
xchg
mov
aaa
popa
into
or
insb
sbb
push
mov
sub
sub
hlt
out
insl
bnd
sub
insl
movsl
int
jbe
sbb
roll
lods
jno
mov
xchg
cmpsb
stos
std
cmc
jmp
sbb
shrb
push
mov
and
lods
jo
sahf
dec
dec
lret
xchg
in
jg
mov
cmp
call
stos
cli
imul
sbb
pop
push
cmp
mov
mov
add
push
jecxz
xchg
jecxz
fimull
add
mov
and
divl
lods
xchg
mov
xor
sbb
clc
insb
testl
push
ss
stos
pusha
push
addb
adc
outsb
dec
dec
imul
outsl
rcrl
mov
or
jecxz
lret
inc
imul
pop
addr16
int3
adc
mov
stos
sbb
loope
mov
fisubrs
or
mov
insb
movsl
addr16
movsb
add
cli
ret
dec
hlt
jle
cmpsb
xor
loopne
mov
sbb
dec
nop
xchg
nop
xor
inc
stc
inc
mov
sub
stos
cmp
push
pop
xchg
rorb
xchg
testb
cltd
lea
sub
mov
stc
push
push
lods
push
jmp
adc
fcomp
push
pop
je
repz
ss
xchg
push
inc
cmc
pushf
inc
xorb
push
mov
mov
aam
imulb
mov
push
xchg
shr
stc
pop
add
aam
repnz
repz
fisubrs
cmp
ret
rorl
in
add
insb
and
in
test
daa
jl
insl
in
or
pop
mov
test
jecxz
jo
inc
mov
js
mov
lods
inc
dec
lods
lcall
ljmp
xlat
dec
das
insb
lcall
push
loope
imul
rorl
dec
sar
jno
insb
cmp
addr16
sub
dec
mov
movb
mov
fwait
pop
mov
xchg
mov
outsl
dec
sub
xchg
mov
and
add
pushf
mov
or
nop
xor
popf
iret
in
jmp
dec
jo
das
ret
cmc
cmovnp
testb
jle
test
pop
inc
js
jne
cltd
dec
dec
ret
mov
lret
outsb
cmp
jns
push
addr16
inc
mov
movsb
shl
fidivs
mov
mov
xor
loop
test
cmpsl
push
in
stos
cli
stos
mov
push
call
cmp
mov
stc
in
daa
in
pop
pop
cmp
les
repz
xor
dec
xchg
mov
dec
push
pop
dec
loop
lods
pop
push
push
mov
mov
and
xlat
mov
cmpsb
les
int3
pop
leave
cmpsb
xchg
push
out
inc
jge
lods
lock
je
or
daa
jg
xchg
mov
dec
sbb
inc
jbe
outsl
push
aaa
mov
out
test
fiadds
out
add
fiaddl
hlt
test
push
ljmp
scas
lock
jo
push
ljmp
stc
sbb
cmc
pushf
imul
cmp
test
enter
add
idivl
dec
mov
push
dec
or
fs
or
inc
insl
sbb
lcall
mov
outsb
xor
cmp
and
ljmp
or
outsl
jb
outsl
in
imul
and
or
push
mov
ja
pop
or
outsb
mov
xchg
dec
fnstsw
cmp
pushf
nop
aad
mov
ret
rcrb
addr16
xchg
sbb
rclb
cmc
xor
ljmp
scas
in
sbb
jne
cmp
mov
adc
jg
xchg
lret
jg
fcoml
int
pop
sub
and
jae
mov
test
aam
js
imul
shll
pop
pushf
rorl
fs
insl
sub
mov
dec
lcall
hlt
jnp
mov
cmp
jbe
iret
outsb
addr16
inc
mov
jae
cwtl
sub
push
lods
orb
mov
call
jae
jmp
and
sti
pop
iret
movsb
mov
mov
push
xchg
das
lock
aam
mov
shll
out
pop
out
insb
push
out
push
pop
paddb
js
or
mov
push
sub
leave
shlb
mov
lds
arpl
add
test
mov
add
xchg
ret
ror
pop
pop
negl
push
roll
inc
ficoml
mov
push
xchg
mov
mov
aad
mov
ret
rclb
sarb
push
loop
add
and
push
xchg
add
fwait
paddsw
or
inc
leave
lock
mov
cli
jmp
cmp
pusha
and
sbb
shrl
xchg
push
pop
es
sbb
gs
stc
push
hlt
xor
sahf
dec
cmp
pop
or
mov
dec
and
jle
subb
insb
cmp
pop
out
mov
dec
push
cmp
jmp
mov
cmp
cmp
dec
enter
sbb
adc
jecxz
jecxz
pop
pop
das
fsubrp
cmp
dec
cltd
sbb
pusha
fwait
incl
andl
mov
sub
jae
fadd
lea
fisubrl
sub
xor
xor
js
or
mov
mov
xor
mov
mov
fisttps
jecxz
jecxz
sub
addl
xchg
jle
xor
fisttps
fadd
sbb
mov
bnd
dec
test
fcompl
xor
add
aaa
pop
adc
add
orb
pop
scas
cmc
jl
shl
icebp
xor
fwait
xchg
pop
inc
loopne
cli
pop
popl
push
inc
mov
in
cs
orl
stc
popa
push
mov
fwait
cli
adc
jno
pop
fwait
and
gs
clc
and
add
popf
inc
test
mov
pop
or
rcr
push
mov
push
mov
dec
ds
cmc
fisttpll
mov
inc
in
fsubrp
inc
pop
pop
mov
jns
inc
pop
adc
push
ret
dec
push
rol
mov
fwait
push
ret
decl
mov
insb
push
xbegin
clc
jnp
mov
mov
sub
insb
cltd
aas
sbb
cmc
enter
pop
sar
sub
ror
icebp
or
mov
inc
lahf
int3
or
mov
cmp
sub
mov
push
in
icebp
inc
fwait
inc
sub
jne
or
push
mov
fnstenv
mov
mov
loop
fwait
adc
inc
dec
fimull
popa
dec
sub
jmp
sbb
rcll
xor
subb
insb
test
and
cmp
mov
in
lds
mov
inc
and
lahf
cmpsb
jae
sbb
jb
inc
mov
sbb
shrl
insb
out
ret
hlt
xlat
es
jmp
cltd
pop
and
inc
lret
dec
mov
sbb
int
cmp
xchg
insb
repz
cwtl
into
add
mov
jbe
mov
dec
stc
sub
and
mov
jb
cmp
cld
sbb
movsl
ret
or
xor
movl
inc
or
mov
ljmp
dec
xchg
push
add
test
mov
and
sub
pop
mov
cmp
and
popa
out
mov
fdivrs
dec
mov
int3
dec
xchg
xchg
add
mov
mov
pavgw
pop
adc
notl
ficompl
mov
pop
jb
mov
andl
sti
sub
in
adc
fisubrl
mov
inc
jle
mov
cld
les
test
jno
cmpsb
sub
sbb
pminsw
sbb
movsl
ja
jecxz
mov
and
xor
cmp
iret
mov
int3
jecxz
jne
xchg
stos
loope
aaa
in
sarb
ror
jns
push
push
or
sti
rol
dec
or
ja
dec
sub
sbb
xchg
and
push
out
push
push
pop
and
xchg
mov
loopne
and
and
adc
adc
aas
js
bound
loopne
fwait
or
xchg
arpl
aam
add
jbe
jp
inc
cmp
ret
pop
fnstenv
in
sbbl
and
or
test
int3
inc
xlat
gs
push
daa
push
xor
mov
hlt
subb
pop
sub
bswap
iret
fstps
dec
data16
mov
addr16
or
jbe
inc
jle
inc
lret
cmpsl
xor
jnp
and
or
aad
pop
pop
jl
mov
fwait
mov
pusha
or
adc
jge
int3
testb
or
xor
pop
mov
mov
scas
je
call
dec
pop
mov
mov
dec
jecxz
repnz
lahf
pop
fwait
mov
add
and
rcrl
pop
jnp
pop
push
out
int
mov
mov
lahf
ja
ja
fwait
mov
leave
sbb
stc
mov
or
cmp
push
inc
popf
mov
inc
out
bound
int
xchg
pop
jmp
and
sub
or
in
cltd
jecxz
mov
push
push
add
ret
push
ja
popf
ficompl
adc
add
call
test
mov
je
mov
adc
dec
dec
je
mov
add
daa
aas
jno
out
cmp
xchg
add
and
out
inc
insb
ds
inc
pop
imull
mov
repnz
xor
add
adc
sbb
jl
sbb
mov
out
inc
add
push
adc
stos
fistpll
repz
dec
fidivrl
cs
jo
insl
push
mov
repnz
mov
xor
fwait
stos
lods
push
js
lock
dec
xor
dec
rcr
shll
cmpsb
imul
test
sub
popa
add
pop
imul
int3
cltd
xor
cmp
imul
dec
leave
cmpsb
push
push
ret
scas
fwait
add
cs
insl
cmpsl
mull
mov
shr
jae
mov
daa
xchg
fcompl
jle
pop
dec
mov
pop
push
inc
pushf
mov
pop
mov
xchg
in
data16
mov
icebp
orps
ja
mov
mov
jp
aaa
add
cmp
jge
push
mov
sub
xchg
inc
cld
subl
xchg
or
into
add
out
movsb
in
pop
push
mov
push
dec
stos
inc
shrl
push
popf
jl
add
cmpl
stc
push
mov
pop
cs
lock
xchg
jbe
xchg
dec
jp
sbb
js
add
mov
inc
mov
fcomi
push
clc
mov
jno
adc
mov
fs
lock
lods
xor
sub
pop
mov
or
mov
add
adc
lahf
mov
xchg
mov
lods
jno
ljmp
mov
test
pusha
mulb
adc
jo
cltd
out
sub
ljmp
xchg
enter
xor
and
daa
popf
fbld
subl
mov
adc
loop
jl
sub
mov
rcr
xor
lods
inc
div
fidivrs
enterw
sub
push
fnstsw
inc
pop
jecxz
xor
dec
mov
out
and
test
mov
les
adc
rorl
mov
cmp
xor
ret
stos
pop
adc
shrb
cwtl
or
mov
testb
lods
jne
leave
xor
adcl
cmp
pop
mov
add
divl
repnz
mov
int
stos
mov
cmp
jmp
pop
outsl
ffree
xchg
das
push
test
stc
add
sub
mov
cli
test
push
xchg
jle
cmc
sub
add
ret
fcomps
mov
fsubs
mov
adc
fcoml
push
test
lods
out
ds
int
andl
cmp
in
sbb
mov
add
add
lock
xchg
pop
or
cmp
in
mov
jno
scas
cmpsb
dec
pop
xchg
gs
pop
inc
cmp
insl
aam
mov
jno
int3
inc
outsl
push
jo
push
push
jle
in
mov
cmp
cmp
jle
adc
push
adc
push
inc
mov
adc
jle
push
ss
sti
ret
xchg
lahf
les
leave
das
add
repz
daa
inc
jp
push
ljmp
mov
and
outsl
mov
out
std
loopne
mov
notl
lahf
mov
cs
lock
addr16
push
adc
fld
push
mov
fists
jno
in
jbe
pop
pop
stos
cmp
and
or
rcr
add
or
mov
out
lret
les
fdivs
cmp
sbb
comiss
out
mov
xor
inc
pop
push
stos
gs
cs
lret
push
jae
pop
push
lods
mov
movsl
loop
mov
jbe
aam
cmp
sbb
iret
and
shll
dec
loop
and
mov
enter
inc
psubd
and
lods
test
cwtl
in
scas
or
add
jne
jge
repnz
pop
mov
dec
int3
mov
cmp
outsb
sbb
cli
pop
int3
aas
popf
mov
gs
sub
adc
lea
stc
cmp
jge
or
or
or
mov
xchg
cmp
or
push
dec
fwait
cmpsl
mov
inc
push
stos
ds
sub
decl
cmp
mov
cwtl
mov
xor
inc
das
std
xchg
sahf
fwait
mov
jb
push
pop
ss
iret
xor
xchg
pop
mov
std
adc
push
daa
das
sbb
pop
xchg
pop
pop
cmp
sub
aad
cwtl
ljmp
fcoms
insl
jecxz
or
pop
push
mov
mov
arpl
xlat
jge
jb
cmpsb
mov
inc
cmp
dec
ret
gs
push
ss
imul
daa
mov
xchg
stos
push
cmp
xchg
push
jae
cmpsb
jns
sbb
rol
xor
jb
xchg
ret
jo
int3
mov
jl
mov
ret
or
out
push
inc
bound
cmc
in
mov
cltd
sbb
push
pushf
sarl
ficoml
or
adc
jae
push
pushf
pop
call
add
sti
popf
arpl
xor
orl
test
mov
sbb
pop
cmp
add
orb
jno
mov
inc
mov
adc
pop
int3
rolb
push
call
add
ljmp
in
aas
test
sbbl
insl
fisubs
jle
push
jbe
inc
mov
jg
push
xchg
rorb
fidivs
or
adc
lods
add
add
leave
das
jmp
and
ja
inc
and
pop
push
pop
test
or
movsb
mov
push
aam
sub
add
imul
call
xchg
scas
inc
lods
sahf
xor
adc
mov
xchg
movsb
in
cmp
ret
je
pop
adc
ja
shrl
ss
aam
fnstenv
xor
and
icebp
imul
hlt
icebp
mov
mov
cmpsb
mov
and
call
add
enter
xchg
inc
sbb
lea
or
loop
or
pop
outsb
pop
jne
test
aam
cli
push
lahf
push
imul
or
in
in
push
xor
out
lcall
mov
xchg
dec
jp
jg
push
jae
mov
lea
int3
scas
mov
test
push
inc
aam
test
mov
movaps
mov
aaa
mov
ficoms
nop
aaa
lock
andb
jg
push
dec
xlat
aad
mov
test
mov
daa
add
mov
xchg
in
dec
cmp
and
cmp
mov
insb
sbb
lret
and
cmp
mov
jb
mov
dec
cmpsl
xchg
xor
dec
aas
inc
aam
orb
or
fnsave
pop
adc
mov
es
adc
add
popf
or
xchg
jbe
adc
in
xchg
mov
loop
cmp
and
dec
iret
out
push
aad
sbb
es
jns
mov
pop
add
dec
fidivl
test
js
cs
clc
push
xchg
mov
mov
push
push
cs
xchg
sbb
cwtl
cmc
mov
cs
test
pop
jle
pop
push
adc
ss
mov
and
xchg
push
stos
inc
jne,pn
int3
xchg
jg
sbb
mov
sbb
cs
xor
repz
mov
imul
int3
xorb
xchg
cmpsl
push
fwait
icebp
es
sbb
icebp
int
nop
into
lcall
pop
fisubrs
cli
xchg
insl
xor
test
mov
push
imul
add
mov
and
dec
icebp
arpl
das
push
rcrb
stos
cmp
cmp
jnp
jg
sbb
mov
mov
fwait
sahf
pushf
xor
push
imul
dec
and
std
dec
sbb
outsb
or
push
and
test
lahf
call
pop
shll
jne
movsb
xor
leave
mov
stos
insb
cmp
fwait
test
fwait
add
adc
in
pop
cmc
xor
sub
movsl
add
enter
sarb
fcompl
push
repz
mov
or
popf
or
insl
out
and
and
mov
mov
mov
and
sub
inc
idivb
inc
xchg
inc
and
stc
decl
mov
addr16
fnstsw
cld
pop
push
aam
mov
xor
in
cs
jbe
lds
loop
sub
pop
cld
pop
cmpsl
dec
and
xor
and
adc
les
ror
cmc
pop
sbb
xor
push
js
adc
out
xchg
sahf
jmp
mov
adc
mov
mov
pop
adc
mov
or
or
or
test
sbb
pusha
dec
cmpsl
ss
jno
pop
je
lea
mov
pop
xchg
in
add
daa
movsl
ret
dec
jg
inc
fmulp
pop
fbld
mov
pop
and
dec
cmpb
call
insb
lret
xor
pop
inc
call
mov
adcb
popf
xor
add
mov
dec
scas
ficomps
cmp
out
pop
imul
ja
adc
negl
dec
mov
xchg
std
out
push
movsl
or
outsb
or
and
add
pop
cmc
push
jae
cmp
insl
test
repz
inc
negb
imul
movsl
out
push
mov
cmpsl
mov
push
aas
loop
out
scas
add
adc
push
mov
and
mov
repz
or
inc
pop
insb
lea
fidivrl
adc
push
jmp
rcll
dec
lahf
repnz
fwait
jmp
mov
xchg
sbb
shlb
inc
cltd
outsb
cwtl
daa
ds
loope
ss
cld
xchg
rol
and
cmpsb
pop
xor
lods
out
pop
mov
sub
mov
in
shrb
sbb
outsb
jmp
in
jno
xchg
in
mov
jge
lcall
inc
pop
aam
sub
loop
push
enter
adc
scas
cmpb
pop
and
and
mov
dec
outsb
ret
mov
mov
dec
xchg
adc
jle
pop
jns
and
insb
call
dec
inc
mov
pop
ficompl
subl
cld
mov
xor
cmp
jns
scas
pop
lods
pop
fidivrl
lret
mov
push
sti
and
mov
fldt
push
push
sarl
insb
sbb
pop
adc
and
lret
stc
enter
cmp
and
pop
sahf
adc
aam
mov
mov
cmp
movsb
pusha
mov
inc
stos
loop
dec
jge
jns
int
mov
cmc
pop
inc
add
push
or
fidivs
addr16
push
add
pop
push
test
and
or
test
imul
xchg
dec
mov
pop
mov
sbb
insl
mov
shl
add
jns
xchg
ja
push
xor
repnz
idivb
cmc
insb
dec
mov
call
loop
push
push
clc
xor
or
pop
jb
test
xchg
dec
cmp
adc
inc
lea
lock
inc
das
sar
jae
xlat
jno
push
adc
stos
ss
cltd
test
push
enter
cli
push
test
jo
psrlw
xchg
dec
push
loope
cli
dec
adc
jbe
jmp
xchg
lock
adc
mov
cmpb
jle
cmp
inc
or
decb
icebp
lea
std
rcrb
flds
sbb
push
sti
lea
push
pop
jecxz
repnz
and
iret
add
add
test
lret
xor
je
cmpsl
std
sti
pop
rolb
push
insb
xchg
adc
fdivr
call
fcomi
jmp
clc
mov
in
imul
cmp
mov
lcall
xchg
or
outsl
in
xor
bound
and
dec
popa
jae
cwtl
shll
xchg
repz
fisubs
fwait
movsb
sbb
mov
sbb
shll
dec
rcrb
rorl
or
xor
into
arpl
mov
mov
adc
test
or
lahf
out
imul
push
xchg
cmp
mov
inc
or
addr16
aad
sbbl
cmpb
out
push
fwait
cmp
mov
inc
setns
mov
lret
xor
cwtl
repz
shrl
outsl
sar
mov
pushf
imul
inc
sub
pusha
cmpsl
fidivrs
and
mov
std
lcall
cmpsl
test
stos
mov
pop
mov
jge
push
repz
sub
call
pop
pop
fwait
or
mov
punpckhbw
out
adc
bound
and
cld
adc
or
arpl
in
shlb
push
mov
jge
jns
xchg
nop
test
fwait
rorb
push
cmp
ja
push
loop
daa
in
mov
rorb
enter
jae
sub
pop
add
mov
insl
mov
jb
mov
js
jmp
adc
mov
rclb
pop
hlt
mov
xchg
jl
ret
cmp
hlt
push
cld
xchg
mov
cmp
mov
stc
or
cmp
aad
sub
aaa
push
les
xchg
outsb
into
pop
jnp
sbb
insb
mov
cmp
call
cmp
lcall
jne
inc
jb
sahf
mov
sub
pop
popa
loope
iret
and
cmp
scas
popf
ss
adc
cltd
pushf
repz
push
cmp
pusha
das
xchg
mov
adc
repnz
stos
xchg
mov
shrb
push
jl
lret
pop
aas
mul
leave
shl
mov
mov
mov
jmp
loope
and
pop
or
xchg
cmpsl
andl
test
in
jl
lods
cli
addr16
addr16
jecxz
popf
bound
pop
jecxz
popa
jmp
push
aaa
cltd
iret
sub
mov
pusha
and
jo
mov
or
push
push
lods
xlat
out
push
jae
jne
icebp
rcr
cmp
pop
shlb
push
repnz
dec
shrl
add
add
push
push
scas
popa
adc
in
lea
fnstcw
mov
test
mov
shrl
xchg
repz
add
in
xor
fwait
fwait
pusha
shl
sub
and
pop
sub
pop
sar
das
push
or
andb
stc
add
aad
sub
ret
push
mov
leave
das
dec
dec
pop
add
mov
dec
jns
mov
rolb
or
gs
or
aaa
fs
out
xlat
mov
fdiv
sub
sbb
push
imul
or
cltd
mov
xchg
add
fisubl
cmp
out
add
repnz
add
cmp
inc
mov
gs
in
mov
mov
cmp
or
xor
jbe
into
mov
and
sahf
or
pop
cmp
mov
aas
ljmp
fcoms
xchg
addl
or
add
imul
or
xchg
adc
lahf
loop
ja
jnp
jbe
fucom
add
rorb
pop
inc
test
mov
lods
cmp
mov
lret
lahf
mov
pop
inc
call
pop
in
and
fdivp
ja
enter
das
sub
ret
inc
popa
test
insb
xchg
out
decl
mov
imul
lods
jbe
andb
rcrb
sbb
nop
add
dec
jnp
or
push
push
jp
cwtl
dec
lods
lods
shrb
sarb
pop
cmp
outsb
or
sbb
cmp
cmp
ror
jge
ftst
cmp
mov
test
adc
movsb
addr16
repz
popa
fldl
mov
push
xchg
out
adc
subb
shlb
inc
mov
xor
mov
out
mov
push
cld
rcll
or
loope
dec
fisttps
and
ss
adc
jp
div
shrb
sub
dec
mov
js
dec
jnp
xor
jbe
adc
push
daa
cmp
or
sti
insl
cltd
lods
out
and
push
sarb
xor
jecxz
lcall
and
jge
out
xor
or
xchg
rclb
or
xchg
mov
movsl
aad
int
push
lock
dec
rcl
lret
mov
aaa
gs
mov
repz
mov
jmp
test
call
or
mov
int
xor
adc
fildl
negb
lcall
mull
cmp
ret
sub
popa
pop
stos
pop
gs
cli
scas
rolb
fdivrs
sbb
xor
pop
scas
sbb
adc
jmp
sbb
loope
inc
add
out
movq
mov
xor
dec
std
jecxz
dec
test
pop
add
jb
sub
sub
jmp
aam
mov
adc
xchg
addr16
mov
cmpb
out
jle
ljmp
rorl
jnp
frstor
inc
std
and
sbb
or
imul
push
into
xchg
jmp
lret
xchg
data16
pop
fxam
inc
add
pop
jge
fnsave
xlat
push
jne
pushf
fimuls
add
imul
out
sbb
pop
fwait
call
test
mov
in
popf
clc
sbb
ror
cmp
mov
dec
jae
jp
jge
jecxz
adc
inc
pop
mov
add
imul
outsb
xchg
and
push
push
das
addr16
mov
sahf
pop
jg
pop
jp
lds
mov
dec
scas
out
sbb
fcomps
sub
scas
es
dec
cwtl
in
inc
dec
fs
rcll
mov
mov
js
daa
int
jb
iret
out
push
add
shll
sahf
pop
jmp
aam
adc
sbb
and
adc
mov
idivl
pusha
sub
lret
dec
mulb
jl
adc
rolb
imul
sarb
cmc
sbb
sub
fidivrl
das
fcompl
fcmovnu
jo
popf
cmp
xchg
sub
out
adc
jmp
xor
cli
test
push
mov
cmp
xor
sbb
mov
shr
cmp
push
xchg
push
pop
loop
shl
cmp
sbb
adcl
push
faddl
int
int
addb
scas
bnd
inc
dec
fwait
adc
insb
cmpsb
and
arpl
push
xchg
fisttps
pop
rolb
jnp
mov
and
bound
aam
dec
aaa
fbld
mov
cmp
push
or
popf
dec
enter
insb
mov
insl
jnp
mov
or
xchg
jp
mov
mov
jb
sahf
je
and
ret
test
mov
inc
xor
aad
jge
shlb
add
repnz
lret
jbe
cld
std
ds
mov
push
ss
mov
test
rclb
stc
and
or
lahf
sub
sub
aas
push
mov
add
clc
scas
iret
and
mull
fiaddl
pop
outsb
xchg
xor
int
mov
lock
sub
adc
sbb
cld
jb
add
ret
pushf
repnz
pop
and
fists
push
bound
rorb
dec
inc
sub
jl
dec
push
xchg
fld
mov
lret
jne
test
jp
mov
jnp
out
push
scas
cli
inc
pop
cmp
in
mov
sub
jae
into
xchg
mov
ds
mov
lods
sbb
mov
imul
in
sub
mov
enter
cmp
mov
dec
shr
cs
popf
adc
mov
sub
sbb
andl
call
xor
pop
mov
sub
gs
in
add
jmp
push
out
test
repz
pop
sbb
jns
xchg
leave
adc
ret
push
and
sub
and
stos
or
cmc
lahf
xor
pop
jb
xor
xchg
xor
sbb
mov
pop
daa
jge
inc
mov
out
stos
test
or
ds
adc
shll
mov
imull
inc
fnstsw
push
fisttpl
mov
in
rorl
scas
mov
fistpll
cli
popw
or
pop
adcl
in
daa
sahf
mov
fnstenv
sbb
lahf
push
pop
rcr
outsb
push
xchg
xchg
dec
cli
addl
push
and
or
or
mov
push
or
adc
cmp
shll
je
sbb
xchg
or
cmpsl
enter
stos
sar
xchg
push
or
fcoms
orb
cmp
inc
outsb
jl
mov
outsb
fwait
sbb
jecxz
mov
push
out
dec
js
pop
ficoml
xchg
sbb
nop
adc
xchg
push
or
xor
out
sbb
frstor
xchg
cmpsb
sub
or
cmp
cmpsl
xchg
push
inc
inc
xchg
xor
xchg
dec
or
dec
push
xchg
mov
outsl
repz
jae
out
dec
xchg
dec
leave
mov
jno
lahf
lret
imul
adc
mov
inc
mulb
shrb
cmp
lods
inc
xor
jmp
push
subl
outsl
popa
sub
mov
sbbl
push
jle
inc
mov
push
push
jae
movsb
jmp
cmp
mov
movsb
dec
mov
mov
and
add
insb
inc
and
add
rcll
movsb
pop
cmp
add
popf
inc
or
sbb
add
imul
pop
mov
cmp
repz
push
subl
les
jae
fidivrl
fcompl
out
inc
push
jmp
mov
mov
out
mov
mov
and
fcoms
cmpb
xchg
sub
out
dec
sahf
aas
nop
leave
adc
mov
pop
push
push
push
in
rcrb
mov
add
pop
and
mov
dec
mov
sbb
xchg
xor
and
popf
xlat
mov
xchg
push
imul
lods
insl
add
adc
push
mov
cmp
sbb
jno
add
cltd
fstpt
mov
sub
ss
xor
jmp
xor
scas
dec
xchg
add
je
fidivrl
sbb
sbb
jg
push
int3
ja
jp
cmp
ficomps
aas
popa
fbstp
adc
ljmp
lahf
mov
inc
movsl
xor
sbb
outsb
ret
push
pop
xor
in
test
call
in
leave
outsl
sub
dec
aaa
ret
lea
cmp
push
pop
add
inc
push
push
mov
dec
xor
add
in
add
imul
mov
and
dec
into
mov
adcl
mov
addr16
mov
add
inc
add
add
in
aaa
sarb
and
ljmp
sahf
push
mov
lret
fmuls
scas
jge
mov
int
mov
pop
add
sbb
and
pushf
lock
jne
cmp
fidivs
inc
incb
or
adc
ja
stos
std
fimull
add
adc
ljmp
sbb
enter
and
in
mov
or
rcrl
jae
mov
pop
lock
inc
mov
into
mov
int
pop
and
and
or
mov
cltd
aad
clc
jmp
rcrl
test
enter
je
pop
es
jge
mov
xchg
pop
mov
cld
enter
jmp
cs
mov
inc
imul
stc
xorb
jmp
inc
mov
jno
test
jo
sub
sub
jg
out
inc
add
xlat
popf
jbe
mov
mov
aaa
mov
xchg
cld
es
mov
outsb
dec
scas
add
cmp
sub
ja
les
jp
xchg
sub
rol
xor
lods
out
fisttpl
mov
sbb
mov
push
cmp
arpl
push
aad
fbld
outsb
inc
push
fcomip
inc
pop
lods
scas
nop
bound
push
movsl
pop
int3
shr
add
pop
inc
add
fists
sbb
lret
adc
cmp
hlt
aas
sub
xchg
lret
xor
in
jmp
mov
stc
push
mov
shrl
inc
pop
inc
or
stos
cmp
nop
jo
shlb
aas
push
dec
dec
in
lds
push
mov
pop
sahf
in
je
sahf
inc
sub
jle
dec
outsb
mov
fs
jo
out
xchg
scas
mov
pushf
scas
dec
adc
xchg
push
add
dec
mov
ret
ss
sub
loopne
jmp
cld
aas
addr16
mov
cli
mov
push
mov
pop
lods
in
lret
jmp
sbb
aam
xor
fstpt
inc
sti
std
mov
adc
hlt
xor
lret
lret
xor
fildl
daa
jne
icebp
insl
movsl
test
push
ret
mov
sbb
into
dec
repz
sbb
mov
cmpb
leave
loope
xchg
jge,pt
xlat
or
xor
mov
and
pop
cs
test
xlat
fsts
mov
cmp
adc
mov
scas
pop
mov
xor
push
rcll
and
stos
push
lock
mov
jge
inc
mov
lock
aaa
mov
daa
popf
pop
ret
ss
scas
pop
inc
jno
cmp
push
repnz
insl
pop
sbbl
es
add
pop
ret
loop
inc
test
test
fidivs
dec
sbb
pop
lods
xchg
cli
in
or
add
cs
iret
stos
push
shll
pop
inc
dec
and
out
ja
sbbb
call
mov
and
addl
dec
mov
bound
cmp
pop
dec
dec
repz
xor
xchg
vmovntps
fs
pop
push
cmpsl
pop
cmp
jbe
add
fs
into
mov
in
jg
leave
cmc
loopne
adc
and
mov
and
movsl
xor
jp
xor
ret
and
cmpl
bound
push
push
cwtl
fstpt
sbb
push
mov
jle
push
fnstsw
and
icebp
movsl
outsb
sbb
rolb
add
gs
cmp
fmuls
cwtl
clc
cmp
push
mov
dec
aam
xlat
cmp
push
gs
stos
repz
sbbl
addr16
das
xchg
dec
sti
pop
jmp
cmpsl
add
shrb
leave
sub
mov
testl
mov
dec
lahf
mov
outsl
add
push
popa
mov
mov
aad
dec
fimuls
push
jmp
stos
pop
add
xchg
or
mov
or
or
sbb
mov
sbb
dec
fcomps
xor
cltd
jno
mov
aas
ja
loope
lods
stos
test
dec
outsl
addr16
jb
xor
aad
and
push
je
xchg
xor
inc
pop
aam
ss
and
dec
jp
and
pop
loope
and
into
mov
cmp
je
sbb
dec
test
jno
lock
push
aas
loope
ret
push
mov
ljmp
xor
sub
jecxz
addb
stos
push
inc
call
fdivrs
loope
xor
test
xor
cwtl
mov
popa
sti
and
cmp
js
out
sahf
arpl
lcall
aaa
xorb
out
mov
js
jg
dec
mov
les
push
mov
inc
mov
and
pop
cld
sub
and
cmp
aam
mov
popa
jl
hlt
pop
and
in
pop
add
mov
xor
or
add
cmp
inc
stos
pop
jae
mov
or
jg
imul
dec
sub
sbb
inc
add
cmp
pop
cmp
lock
out
shr
sbb
stc
loopne
mov
aam
mov
scas
sub
call
add
dec
push
add
fwait
sbb
push
pop
data16
test
dec
nop
add
and
cld
cwtl
mov
test
adc
push
scas
ljmp
push
dec
inc
adc
ror
aaa
pop
aaa
mov
lcall
call
add
ja
xchg
lods
xchg
in
test
aad
lret
out
psubw
mulb
shrb
push
jbe
push
jl
shrl
int
jnp
sbb
mov
pushf
pop
lods
mov
bound
insl
xchg
xlat
fadd
xchg
jne
loop
mov
repnz
dec
iret
test
pop
loope
fwait
loopne
xchg
adc
clc
cmpsb
jmp
fimuls
ss
inc
js
ss
pop
jbe
test
push
pop
mov
jle
addr16
sbb
and
stos
in
xor
inc
mov
pop
test
adc
add
dec
jno
pop
pop
push
xchg
cli
pusha
fwait
xchg
cli
ret
xchg
clc
cmpsb
sahf
shl
push
lock
dec
inc
sub
cmp
jo
data16
jno
mov
imul
sbb
mov
or
sbb
xlat
sub
or
push
lods
dec
xchg
sub
daa
and
out
sbb
pop
cmp
xchg
jmp
mov
mov
adc
inc
loope
iret
movl
dec
sub
scas
jp
sarb
push
and
push
mov
lret
loopne
cmpsb
xchg
jecxz
fs
push
lds
adc
aam
sub
xchg
cwtl
ficoml
dec
scas
nop
out
dec
sbb
fnstcw
push
mov
jmp
in
mov
xchg
xor
or
call
mov
in
sub
and
adc
icebp
jmp
inc
fsub
cli
adc
xor
inc
test
ljmp
aad
and
mov
mov
push
icebp
aam
pop
inc
mov
cwtl
xchg
and
lods
cmp
inc
ss
dec
scas
mov
or
sbb
inc
mov
adc
fiaddl
shlb
mov
mov
pop
ret
ja
jb
adc
push
xchg
mul
lock
dec
and
adc
lea
lahf
jg
add
dec
sbb
push
sbb
xchg
push
sub
out
jne
xor
xchg
orl
iret
outsl
scas
popa
dec
mov
push
push
inc
inc
outsb
stos
sub
mov
pop
fs
xchg
cmp
dec
std
add
testb
mov
push
pop
cwtl
outsl
or
test
mov
pop
add
fmul
movsb
sbb
jecxz
push
shrb
test
popa
nop
int
push
clc
aam
test
add
stc
fldl
mulb
movsb
mov
sub
jnp
ds
pushf
inc
pop
dec
sbbl
js
jge
cli
loope
inc
or
sbb
fwait
jne
add
sti
mov
outsl
lock
int
lods
push
push
jbe
sub
cmp
push
int
shll
addl
insl
jb
xchg
dec
adc
cltd
ficomps
mov
cli
mov
mov
cmpsb
cmp
data16
mov
rcrb
fisttpl
xor
inc
or
jae
fcmovb
and
cmpsl
lret
cmp
mov
out
and
cmpl
bound
test
xchg
pop
adc
or
ds
imul
cs
movsl
insb
or
push
outsl
shlb
test
popf
and
xor
imul
mov
outsb
pop
xor
mov
adc
mov
mov
mov
test
dec
pextrw
and
pusha
jns
mov
fcmovu
jo
cmpsl
repnz
fwait
add
xor
jns
stc
mov
cmp
hlt
in
bound
jmp
iret
add
aad
test
xchg
lds
addr16
inc
flds
xchg
rol
sbb
aas
fwait
insb
js
fstp
subl
clc
hlt
cmp
shlb
adc
test
mov
fwait
stc
test
inc
subl
test
lcall
mov
cltd
pop
outsl
inc
mov
int3
push
xchg
fidivl
mov
es
push
adc
fnsave
std
xchg
lds
lret
adc
pop
mov
pop
insl
fisubrl
testl
fnsave
fldenv
je
sbb
and
icebp
jl
ret
cmp
adc
inc
add
arpl
pop
ds
shlb
and
sti
jns
dec
dec
jne
les
loop
jecxz
inc
sar
add
cmp
xor
dec
icebp
xor
jb
jp
cmp
cmp
jns
inc
push
in
enter
fs
jbe
and
push
add
cs
mov
pusha
pop
pop
lods
lock
test
xor
add
subl
add
leave
add
sub
mov
daa
mov
daa
pusha
int
das
mov
add
inc
dec
push
cltd
hlt
mov
sub
push
xorl
movsl
and
and
and
shll
push
sar
fsubl
clc
jbe
fcmovnbe
xchg
lret
cmp
xchg
sub
call
mov
xor
xchg
sub
dec
int
jmp
mov
clc
push
das
jg
push
push
dec
mov
mov
fxam
hlt
insb
ds
cli
dec
add
imul
add
xor
test
cwtl
psrad
int3
addl
dec
xchg
sbbl
nop
insl
adc
leave
mov
sub
lret
jbe,pn
mov
sbb
add
out
pop
cwtl
rcrb
rcl
jno
sub
scas
or
and
lea
lods
sub
pushf
xchg
hlt
xchg
or
push
in
adc
in
dec
and
out
addr16
lods
into
and
imul
mov
jae
xchg
test
idivb
addb
mov
imul
pop
movsl
rol
adc
out
and
mov
mov
mov
fwait
sub
sub
add
lock
arpl
gs
lea
adc
inc
mov
xchg
popl
xor
lret
subl
in
dec
sbb
mov
repz
push
mov
test
push
pop
icebp
mov
inc
inc
xchg
mov
inc
xor
jle
cmp
scas
pushf
push
xor
and
or
lret
push
cmp
sti
push
sub
out
mov
lahf
xchg
ret
sub
into
test
cli
push
mov
jae
fisttpll
sbb
js
lock
sub
movsl
arpl
call
mov
out
inc
mov
loopne
in
sub
idivl
mov
mov
loope
ret
mov
in
push
js
mov
out
mov
int3
mov
roll
mov
sbb
add
sub
das
pop
call
push
js
insb
mov
sti
clc
enter
pop
out
and
sub
lahf
outsl
test
sub
repnz
pop
push
mov
fs
jmp
test
shlb
jge
add
add
js
insb
mov
add
jne
xchg
sub
je
push
inc
xor
cli
scas
jns
scas
scas
xlat
jo
sbb
aaa
cmp
shr
stc
aas
sahf
aam
pop
add
add
scas
mov
test
js
push
ret
scas
jbe
add
jecxz,pt
mov
jp
loopne
dec
outsb
sub
jg
push
ss
repnz
es
icebp
or
lea
mov
dec
pushf
fmull
add
add
mov
test
int
inc
cmpsl
add
data16
mov
pop
mov
sub
test
dec
fwait
sub
cmp
fwait
or
cmc
and
or
pop
shrb
mov
mov
jae
dec
push
jl
movq
fbstp
jl
inc
xor
mov
and
sbb
or
add
dec
fsubl
mov
repz
leave
iret
imul
push
xchg
xchg
mov
sbb
or
jb
jo
fldcw
movsl
lock
test
xchg
sbb
test
jbe
pushf
jo
mov
jne
icebp
sbb
shll
pop
jle
loop
push
mov
xor
inc
xlat
mov
mov
addl
addr16
jae
ss
pop
fstpt
or
mov
jp
fs
cltd
add
out
cmp
stos
dec
dec
sbb
lcall
imul
or
jp
push
xor
pop
jae
fistpl
into
adc
push
popa
push
or
pop
imul
out
ja
and
inc
ficoms
in
bound
mov
xchg
jmp
pop
mov
int3
movsl
xchg
mov
cwtl
adc
js
lods
out
cmpsl
in
inc
in
dec
iret
gs
xchg
sub
loope
sbb
mov
jle
les
xor
rcl
jo
and
xchg
dec
fadd
mov
por
mov
push
add
mov
push
sbb
push
xor
dec
mov
pusha
out
rep
stc
pop
aad
jns
out
xor
add
mov
lcall
push
jp
adcl
insl
push
repnz
push
fsubr
gs
dec
inc
out
insb
js
sub
test
mov
xor
xchg
addr16
loop
add
add
inc
mov
cmc
lds
lds
pop
std
dec
imul
jnp
jg
pop
xor
shll
in
push
std
fs
jle
xchg
sti
addr16
decl
sbb
sar
jge
std
mov
cmpsb
in
add
and
pop
fsubrl
lods
imul
pop
mov
adc
lret
mov
pop
mov
aas
pop
insl
mov
mov
mov
clc
mov
fwait
divl
lods
in
orb
sub
add
and
add
xchg
xchg
xor
pop
mov
inc
push
popf
lretw
inc
lock
pop
push
sub
loop
imul
inc
jnp
jmp
or
jns
cld
fdivr
push
sub
mov
push
add
inc
pop
push
out
in
push
stos
inc
bound
jp
jl
rolb
xor
sbb
xchg
rclb
arpl
xchg
repnz
xchg
dec
outsb
imul
sbb
scas
push
fldt
or
into
pop
push
xchg
and
xor
lock
aaa
or
je
mov
pushf
cmpsb
dec
es
dec
test
mov
xor
push
sub
inc
pushf
cmp
pop
orb
mov
sarl
push
pop
mov
cmove
and
fisttps
sbb
and
in
sbb
and
stos
adc
sbb
push
pop
cmp
fisubrs
inc
mov
and
xor
sub
mov
pop
pop
dec
ja
mov
hlt
shl
cs
lret
sbb
add
ficomps
xchg
icebp
out
jl
xor
inc
mov
fnsave
leave
sbb
aas
and
inc
ret
fiadds
out
lahf
add
outsb
test
inc
cmp
sbb
flds
or
sbb
movsb
sbbb
jge
xor
sarb
or
xchg
mov
or
fsub
dec
je
ljmp
mov
int3
cmp
mov
fwait
jecxz
push
orb
sbb
lods
cmp
imul
mov
jle
lea
in
mov
lcall
dec
or
jg
jnp
cmpsb
stos
movsb
xor
shrb
loop
mov
into
sub
imul
enter
pop
jl
out
jnp
insl
lds
jge
mov
fisubrs
jmp
add
dec
out
xor
dec
mov
les
iret
shlb
mov
jne
add
push
add
out
sub
loop
xchg
fistl
les
push
push
loopne
lods
ret
or
cli
inc
dec
mov
enter
into
lea
insl
xor
fsubl
push
mov
out
sbb
jmp
cmp
push
jne
xlat
sbb
inc
xor
push
mov
es
cwtl
nop
call
push
into
stos
mov
out
bound
loop
jno
push
lds
imul
add
shr
cmc
mov
kmovb
dec
xchg
arpl
adc
mov
xchg
pop
push
dec
ret
stos
and
push
ret
mov
clc
jle
and
aaa
jbe
rcrl
push
sti
xorb
divl
sub
sti
sbb
xlat
out
jno
pop
xchg
ss
mov
xlat
xor
addr16
in
jp
sti
std
iret
jno
nop
xor
lock
movntq
adc
xor
fimull
push
or
mov
aaa
aas
cmpsb
mov
mov
repnz
mov
shl
sbb
push
xor
test
jb
sub
daa
clc
rcrb
stc
jecxz
jb
imul
cmp
dec
sbb
xor
adc
jecxz
mov
inc
je
add
push
rorb
jecxz
xor
les
ret
jno
enter
stc
xor
xor
sahf
fidivl
pop
call
pop
jae
imul
outsl
in
mov
push
and
mov
sbb
std
inc
mov
jns
sbb
sahf
mov
mov
xchg
dec
jmp
lock
push
stc
sub
lcall
mov
out
cmp
fwait
cmpsl
xlat
push
bound
jg
jl
and
pop
mov
pop
dec
outsb
push
in
push
lds
dec
lods
test
cmp
and
sub
mov
pop
ret
xor
lods
inc
mov
lods
inc
lea
pop
test
ja
dec
loope
in
cli
jo
in
fidivs
jo
daa
int
push
add
jmp
int3
mov
mov
push
add
mov
or
pop
nop
dec
andl
les
inc
stc
inc
loopne
sbb
mov
cmp
rcll
js
xchg
pop
adc
xor
pop
fmull
popf
ret
mov
lods
out
cmp
dec
test
mov
rcll
jle
in
rep
mov
jbe
mov
xchg
xor
mov
fdivrs
subb
mov
test
add
fnsave
leave
add
mov
leave
loope,pt
lock
fwait
sub
in
not
fidivrl
data16
cmp
push
jno
jecxz
aas
push
push
mov
cwtl
or
addr16
xchg
xor
mov
xchg
frstor
loop
pop
enter
dec
xor
xchg
mov
or
fimuls
push
inc
jg
inc
mov
mov
loop
iret
imul
test
inc
inc
mov
outsb
dec
jmp
sbb
test
sahf
push
adc
mov
pop
shlb
icebp
int
mov
pop
andl
and
fnstsw
ds
sub
sbb
push
sti
mov
outsb
outsb
mull
les
push
mov
xchg
or
into
les
xor
icebp
adc
mov
inc
outsl
hlt
orl
scas
or
cltd
cmpb
mov
jo
imul
mov
inc
int
mov
add
pop
dec
add
scas
xor
lock
loope
dec
xchg
push
jne
mov
fldln2
or
jl
mov
cmp
stc
aad
fisubs
out
adc
adc
stos
sub
lock
out
mov
cmpsb
jge
mov
call
inc
add
test
rorl
rcrb
mov
test
mov
lea
test
popf
xchg
cmp
les
cs
incl
inc
rolb
push
ret
dec
ret
lock
jp,pt
jp
repnz
loope
cmpsl
ja
sub
sbb
add
and
loop
test
addr16
dec
push
in
and
imul
lret
pop
pop
lahf
adc
aas
loopne
xor
mov
js
xchg
sub
movsl
add
fsubrp
sbb
push
cmp
iret
and
dec
mov
push
mov
jb
mov
lds
jecxz
iret
mov
pop
fiaddl
or
pop
mov
sub
mov
stc
jle
je
adc
arpl
xchg
nop
and
dec
inc
dec
inc
push
in
sub
repz
ds
pop
jb
fdivr
jp
dec
push
out
aaa
lds
add
stos
shll
cmc
cmp
shrl
stc
scas
ficompl
or
pop
push
pop
out
stos
fistpll
add
aaa
mov
mov
mov
jno
jg
clc
mov
dec
adc
inc
into
daa
loop
cmp
imul
jecxz
or
pop
or
lret
sbb
sub
test
push
xchg
sub
leave
out
sti
mov
xor
lods
aaa
and
in
jp
xor
and
and
shrl
lahf
jb
mov
lea
mov
out
sub
pop
scas
popa
mov
adcb
or
imul
push
pusha
rorb
jle
jns
int3
addr16
push
lahf
int3
int
imul
rorb
jge
mov
jno
adc
sti
sub
mov
lods
outsl
jge
ss
div
push
gs
inc
cltd
or
stos
pop
inc
or
pop
pushf
mov
fiadds
xchg
rcrl
test
cmpsl
xor
mov
call
repz
xchg
dec
xor
call
call
mov
push
nop
cmp
std
fdivp
iret
mov
ds
insb
ds
in
lock
dec
mov
imul
out
add
cld
push
std
ret
enter
mov
sbb
jnp
xor
and
sbb
xchg
ss
scas
pop
jge
ret
enter
loopne
shrb
xchg
int3
in
fstl
inc
lcall
mov
push
adc
mov
and
mov
push
adc
hlt
insl
mov
add
mov
adc
ljmp
mov
ljmp
pcmpeqw
out
rcrb
clc
inc
or
push
mov
sahf
adcl
mov
fdivs
popf
stos
test
stos
cltd
xchg
shll
in
adc
aas
push
xor
inc
ss
mov
push
outsb
push
test
out
outsb
and
sub
loop
cmp
add
adc
hlt
mov
faddp
xlat
je
in
jmp
aam
push
orb
xor
das
out
xor
jns
sbb
lods
push
or
mov
pushl
or
add
movsl
nop
push
xchg
jns
jp
movsl
das
pop
mov
lea
cwtd
cwtl
iret
sbb
cs
add
idivb
sbb
fadd
jmp
sbb
inc
das
xor
ds
out
in
js
arpl
sbb
insb
arpl
and
and
stos
xchg
xor
push
ret
add
pushf
loopne
call
sahf
mov
sti
fstps
addr16
push
insl
daa
mov
fcom
clc
sbb
scas
adc
sbb
pop
adc
dec
shll
inc
mov
xor
fcom
jb
enter
fsubrl
rol
fs
jo
test
enter
ss
fldcw
mov
cli
push
jecxz
xor
test
mov
cmp
icebp
repnz
sub
out
xor
lock
iret
pop
ljmp
shll
pop
rcr
adc
fdiv
cmp
push
out
mov
add
pop
lock
cmp
and
cli
mov
cmp
aas
std
dec
push
out
pop
dec
mov
sahf
std
pop
xchg
add
ds
and
sbb
or
mov
push
cmp
out
mov
imul
fadds
xchg
jmp
fidivrs
fiadds
mov
into
popa
inc
fisttpl
xor
subl
ret
test
mov
mov
and
add
mov
sub
addr16
pop
out
inc
mov
out
out
adc
dec
push
sbb
int
pop
test
mov
push
repz
xor
xor
mov
les
xchg
enter
shll
icebp
shrb
cmc
jl
jae
subl
cmpsl
sti
loope
push
and
iret
out
scas
daa
idivl
pop
push
aaa
or
movsl
das
nop
test
mov
les
fimull
jne
push
add
or
aam
pushf
jge
fcom
push
scas
icebp
adc
xchg
icebp
pop
sbb
fidivl
sbb
dec
imul
push
dec
stos
jmp
jnp
pop
shll
ds
mov
aaa
mov
lcall
and
mov
inc
loopne
test
ret
test
or
mov
sub
enter
std
jg
add
imul
dec
jae
leave
xchg
sub
xchg
push
jp
and
movsl
ljmp
es
adc
imul
jo
or
mov
jmp
hlt
mov
in
xchg
push
lahf
pop
xchg
adc
adc
pop
data16
loope
cli
fstpt
sub
mov
jmp
push
push
add
mov
lea
arpl
push
les
es
outsb
cli
hlt
lds
cs
mov
cmp
dec
mov
jle
adc
push
mov
mov
aad
popf
scas
lahf
sub
push
or
insl
popl
arpl
adc
rcr
push
mov
rolb
and
mov
jecxz
mov
andl
fcomps
dec
mov
movsb
cmp
mov
sarb
mov
daa
stos
lods
jmp
pop
jecxz
jge
jg
inc
xchg
popa
out
das
int
shrb
mov
popa
pop
fcomps
notl
cmp
mov
inc
mov
push
cmpsb
jge
or
push
pop
lds
test
and
lods
mov
in
lock
jno
shrb
mov
mov
ret
cmc
fucom
xchg
scas
jge
pushf
dec
cwtl
imul
and
in
test
ret
decb
or
test
mov
insb
and
leave
cmp
cmp
inc
cmp
stos
pop
loopne
mov
xchg
push
jmp
arpl
or
push
pop
jnp
mov
xchg
mov
add
mov
fwait
cld
push
loopne
sub
and
pushf
add
sub
ror
gs
into
pop
lods
cltd
xor
and
xor
dec
daa
data16
fs
jb
fisubl
cmp
push
push
in
cmp
rorw
lods
cmp
dec
or
leave
push
jnp
mov
repz
stos
inc
mov
inc
adc
mov
sbb
dec
outsb
and
mov
fdivs
mov
movl
out
icebp
push
mov
out
add
int
leave
cmp
fbld
test
mov
imulb
xchg
call
inc
pop
outsb
mov
lcall
push
cli
mov
mov
xchg
sbb
adc
pop
mov
mov
and
gs
rcr
and
call
in
push
push
mov
mov
push
stc
adc
lods
add
xlat
loope
negb
in
sbb
aas
je
lock
xchg
jecxz
xor
pushf
adcb
push
shlb
and
cmp
xor
mov
sub
pop
ja
inc
jmp
cltd
stos
mov
cmpsb
jge
sbb
pop
sbb
push
iret
shll
cmp
insb
sub
and
jnp
sbb
push
add
mov
lcall
add
lock
inc
lahf
shrl
adc
gs
mov
jbe,pt
cmp
push
std
out
cmp
xchg
adc
adc
loopne
or
testl
popf
mov
enter
enter
cmp
cmpsl
ljmp
push
or
mov
and
cltd
fwait
mov
dec
jmp
popa
and
jne
mov
out
fwait
rcrl
mov
xor
mov
arpl
pop
les
int3
js
enter
sbb
push
aaa
rcrl
inc
inc
xor
sbb
xchg
cmp
jno
into
jmp
and
sub
lea
inc
jp
mov
mov
pop
fmuls
xchg
jecxz
movb
sahf
loop
mov
jl
sahf
or
sub
dec
cwtl
jae
mov
divb
xor
rorl
js
imul
int3
pop
pushf
or
gs
lds
lea
cmpsl
jne
mov
jl
jbe
mov
jecxz
movsl
jmp
pop
or
inc
mov
inc
jp
push
and
jo
sbb
push
mov
adc
outsb
fcomps
pop
mov
call
test
mov
jmp
aaa
pop
pop
cmp
std
pushf
inc
insl
add
sbb
dec
dec
pop
sbb
pop
jg
jae
xchg
pop
into
xor
jno
addr16
pop
mov
mov
mov
adc
jecxz
fcmove
sub
push
int
shrb
pop
fcomps
cs
loop
jmp
lcall
cmpl
test
rcrb
dec
push
push
sub
cmpsb
jns
jnp
xlat
adc
loope
scas
ficoms
out
incb
inc
or
xor
das
push
ds
or
outsl
iret
sub
mov
jmp
enter
in
cmp
jno
fistl
jbe
pop
xor
paddb
nop
inc
xchg
fsubrp
xchg
adc
imul
das
in
fidivrs
add
lret
addb
mov
sub
jmp
mov
add
out
movsb
loope
scas
shl
adc
ja
cmp
xlat
lret
test
scas
lds
push
pop
lret
jmp
mov
mov
pop
ret
pushf
push
dec
mov
rorl
adc
push
addl
jge
sub
ljmp
lahf
jle
mov
dec
arpl
add
mov
aas
mov
nop
outsl
jb
inc
dec
stc
adcb
push
repz
pusha
sbb
dec
pop
cmp
stos
fcmovu
dec
dec
xor
jg
ficompl
xor
stos
movsl
sbbb
adc
push
and
push
mov
cmp
cli
xlat
or
ret
int3
mov
and
int
add
rorl
push
mov
jge
add
add
dec
add
dec
mov
mov
ror
pushf
repz
adc
lods
pusha
aaa
hlt
int3
add
push
adc
cltd
js
ds
jp
dec
sar
jmp
pusha
fbld
jns
lcall
inc
xchg
sti
out
aad
dec
xchg
add
mov
popa
pop
sbb
pop
sub
out
into
lods
cld
sbb
fucomi
ret
pop
data16
mov
add
pusha
inc
repz
jae
stos
mov
bnd
or
fdivr
fmulp
sti
ffreep
ljmp
dec
add
in
imul
mov
call
xor
loope
lods
fcoml
xor
in
mov
cmp
pop
push
das
es
push
jl
ljmp
and
cmpsb
sbb
xchg
push
cwtl
aas
loop
jo
aaa
dec
xor
pop
jb
cmp
push
leave
mov
sub
mov
and
das
xchg
dec
mov
xor
out
and
in
imul
pop
les
inc
out
mov
out
mov
mov
icebp
push
pop
cmp
jbe
insl
call
xchg
cmp
sbb
fldcw
add
pop
mov
das
iret
out
sbb
xor
stos
movsb
iret
test
int
jb
push
dec
cmp
mov
adc
adc
popf
add
and
jbe
sub
loopne
inc
jne
mov
aam
mov
iret
jge
inc
stos
inc
push
push
aas
cmp
loop
sub
xchg
cmp
jbe
std
jmp
mov
test
fstps
shl
test
iret
and
add
add
adc
mov
sahf
mov
lods
push
xchg
sbb
scas
call
movsl
insb
dec
flds
lods
push
out
lcall
jb
jmp
mov
push
addl
mov
push
push
test
dec
add
or
stc
outsl
add
push
pop
cltd
sub
outsl
mov
add
cld
jnp
ds
outsb
insl
push
scas
pop
pop
imul
cmp
clc
data16
pop
cmp
iret
cld
xchg
aaa
sub
sti
imul
or
and
push
or
rcll
out
lods
pop
rclb
imul
iret
dec
sub
dec
test
sti
xor
lock
int
ja
cmp
lcall
lds
dec
repnz
ds
add
fnstenv
in
mov
test
imul
jge
mov
jns
mov
jecxz
push
insb
aas
mov
cwtl
cmp
stos
ror
mov
pop
dec
arpl
xor
imul
les
xchg
xchg
enter
pusha
fs
popf
pop
sbb
jb
lcall
inc
mov
sbb
xor
in
adc
stos
xchg
mov
pusha
inc
and
movsl
push
lahf
add
repz
jb
cmp
loop
repnz
rcrb
pop
and
pop
push
mov
xlat
xchg
outsl
sbb
insb
arpl
cmp
push
sub
xchg
sbb
dec
sbb
push
pushl
rcr
mov
dec
testl
adc
jbe
shll
adc
add
ss
mov
sub
insb
pop
inc
push
mov
flds
and
jl
mov
test
lret
and
fwait
ljmp
mov
and
pusha
pop
xchg
dec
cmp
cmp
xchg
xor
xor
pop
mov
dec
cmpl
adc
andb
int
loopne
ret
adc
push
sub
bnd
jle
adcl
imul
aaa
lock
rclb
hlt
mov
cs
in
inc
sub
ds
cmc
fsubrs
ror
insl
xor
imul
int
jg
shll
sbb
sub
jmp
and
ret
or
mov
and
mov
mov
out
ljmp
push
mov
mov
xchg
xor
add
bound
sub
hlt
fsubrs
xchg
xchg
into
popa
adc
movsl
decb
fsub
test
fwait
adc
cmpsb
push
and
dec
cmp
mov
dec
ljmp
pop
cmpsl
fcmovnbe
jb
std
insb
out
xor
out
ss
sub
jne
loop
inc
xchg
scas
cmp
aad
xchg
mov
in
add
jge
dec
jae
aaa
ret
lahf
stos
icebp
xchg
push
sbb
jmp
mov
push
stc
loop
cmc
jle
dec
mov
inc
add
std
stos
ja
cmpb
inc
dec
lock
cmp
das
fisttpll
push
cs
ss
cmpsb
mov
repz
out
xor
icebp
out
push
adc
and
clc
push
aad
dec
shll
inc
push
hlt
mov
popa
loop
test
mov
xor
dec
shlb
clc
test
xor
jbe
stos
fs
call
and
and
mov
in
pop
ds
xlat
fists
addr16
in
jbe
add
arpl
sbb
xor
popf
je
xor
xchg
stos
fwait
mov
mov
scas
inc
push
pop
sahf
inc
sahf
sarl
sub
push
in
xchg
rorl
mov
fwait
and
xor
xchg
loope
pop
push
repnz
inc
test
or
fildll
jmp
xor
gs
mov
aad
and
insl
xor
call
or
cltd
mov
cmpsl
inc
add
jmp
testl
jmp
movsl
psllq
mov
fistpl
sbb
xor
jns
sbb
xchg
mov
sbb
jge
xor
repnz
mov
jecxz
clc
cld
adc
or
sbb
pop
jbe
in
test
jg
cmc
add
insb
xchg
mov
xor
sarb
scas
pop
adc
mov
cmp
dec
movups
mov
push
sbb
push
mov
mov
fxch
aad
mov
shll
gs
out
je
rorl
mov
rorl
inc
sbb
stc
ret
push
dec
adc
jb
mov
arpl
pop
rcrb
rcll
scas
sub
push
das
mov
leave
mov
incb
cmp
nop
jecxz
outsl
mov
shlb
dec
int3
hlt
push
popa
push
dec
lret
aad
test
mov
adc
cmp
add
mov
dec
xchg
scas
dec
movsb
in
fwait
incb
fistl
lods
push
pop
xchg
jp
cld
ret
jno
push
xor
out
dec
sub
mov
in
movl
mov
scas
out
test
or
jecxz
icebp
ds
inc
clc
bound
popf
xchg
je
aam
sbb
xchg
leave
adc
inc
jae
in
and
loopne
mov
repnz
mov
xor
xor
push
insb
and
xor
push
push
cld
lcall
mov
fldenv
push
loop
inc
loop
mov
sub
jb
jns
sbb
in
cmpsb
xchg
or
and
mov
cmc
adc
cmp
ljmp
aaa
nop
lods
cmp
mov
and
inc
push
xor
xor
addr16
lock
std
push
pop
lahf
cmp
out
xor
pop
cmpb
add
dec
testl
fcoml
in
jge
push
das
push
jbe
add
fisubrs
pop
sub
lahf
fwait
pushl
orb
out
in
out
jae
gs
pusha
dec
lock
sbb
sub
cmp
sub
adc
inc
pop
sahf
jge
call
scas
add
sub
xchg
test
jp
jnp
push
imul
inc
dec
outsb
push
push
int3
pushf
adc
adcl
xor
xchg
aaa
mov
sub
int
mov
pop
push
sbb
push
lret
repz
leave
clc
mov
xabort
mov
stos
xchg
inc
hlt
nop
popf
popa
notb
pop
dec
add
and
out
xor
xchg
inc
loopne
icebp
pop
pop
lahf
clc
stc
leave
jp
mov
iret
jbe
sahf
push
aaa
es
xchg
cmpsb
decl
and
push
fadd
and
das
push
pop
xlat
stos
fnsave
fnstsw
mov
cmpsl
mov
sub
xor
and
fmul
out
cmp
repnz
sub
das
xchg
jns
addr16
call
pop
or
int
cmpb
jg
inc
lcall
and
test
and
mov
repz
ret
sub
js
in
ret
cwtl
inc
xchg
imul
cli
mov
inc
gs
lar
in
or
cmp
cli
pop
std
ljmp
leave
cli
jo
add
dec
jbe
stos
cmp
lods
xor
ret
lcall
cmp
popf
or
scas
dec
sub
xor
mov
dec
fucomi
sbb
sub
mov
inc
mov
inc
cmp
sti
fcom
jmp
mov
xchg
les
and
aad
es
or
loop
lock
inc
div
stos
fisttps
jg
push
nop
rorl
add
jno
in
jl
repz
rcll
or
inc
jno
testl
sar
push
push
cmp
fdivr
shll
pushf
inc
in
int3
pop
int
push
mov
inc
clc
or
dec
jnp
mov
add
mov
push
data16
sub
fisttps
mov
mov
pop
xor
and
jb
sub
mov
mov
and
jae
xchg
push
xchg
xchg
jo
jecxz
push
dec
fildll
xor
pop
or
testl
xchg
jnp
fs
outsb
sahf
call
xchg
add
int3
adcb
or
stos
add
lds
data16
xor
cmp
xchg
sbb
push
xor
inc
fdivl
push
dec
rcr
mov
pushf
fcmove
inc
fs
in
xchg
cmovb
sar
dec
ja
data16
and
cld
mov
dec
cmp
pop
idiv
mov
aas
fstpt
dec
dec
or
jo
mov
jno
cld
push
adc
jecxz
jecxz
xchg
add
xchg
mov
lds
or
cld
fldt
pop
and
mov
shl
pop
xchg
pop
sub
imul
jae
dec
fdivr
ljmp
mov
lret
lea
sbb
fs
dec
mov
addr16
out
mov
test
push
test
sub
add
mov
sub
ret
stos
push
cmpsb
xchg
mov
rcrb
icebp
and
xchg
hlt
das
icebp
mov
sti
jns
jo
or
pusha
popf
inc
sub
mov
rol
sub
mov
cmp
jmp
lret
xchg
jle
and
pushf
and
xor
add
jnp
lret
les
fwait
jl
lods
jo
jnp
lods
shrb
cmpsl
orl
cmpsl
scas
lea
popa
xor
jl
arpl
out
arpl
mov
fwait
insb
inc
jge
or
sti
pop
xchg
adc
add
xchg
sub
xchg
cmp
scas
or
mov
aam
pop
xchg
shrl
mov
hlt
mov
test
icebp
pushf
jle
enter
lahf
loop
sarb
sub
test
cmpsl
xor
push
adc
cmp
push
cmp
adc
outsl
gs
sbb
sahf
or
daa
push
adcb
icebp
js
jno
scas
push
mov
loopne
leave
aaa
shll
xchg
aaa
and
mov
dec
xor
inc
mov
pop
aad
jecxz
movsl
int3
xchg
into
xchg
push
mov
mov
hlt
mov
fisubrs
hlt
lods
xchg
cli
mov
pop
lret
and
pop
push
in
fdivl
jbe
out
lds
pop
sub
cmp
jp
fisttps
in
ljmp
test
fists
mov
xor
movsl
mov
lahf
sub
push
push
add
dec
es
or
pop
pop
mov
out
inc
clc
push
dec
xchg
mov
daa
int
add
cmp
into
sti
stc
pushf
jg
sahf
mov
int
outsb
cld
lds
mov
mov
pop
and
jg
subb
ret
shll
pop
cmpb
arpl
nop
xor
push
mov
xchg
insb
xchg
adc
out
and
dec
enter
int3
pop
or
popf
out
cwtl
pop
xchg
xchg
mov
jg
dec
imul
inc
mov
sbb
pusha
stc
cmc
ja
dec
fbld
jmp
mov
inc
fsts
int
cmpsl
xchg
or
into
aas
into
iret
mov
fldl
in
xor
sbb
or
lret
movsb
pop
fwait
lods
sbb
test
jmp
stos
pushf
xchg
sbb
out
sbb
mov
jnp
push
out
pop
aad
cltd
ljmp
test
repnz
mov
imull
stos
push
mov
add
fimuls
xchg
inc
movsb
cs
je
stc
es
mov
cmp
cmp
hlt
fbstp
and
repz
adc
je
add
fsubrs
faddl
nop
lds
dec
jecxz
fcmovnu
sbbl
xchg
mov
sbb
add
xchg
out
sub
mov
popa
ljmp
cltd
pop
iret
rorl
xchg
arpl
fucomp
lcall
pop
test
mov
jo
mov
dec
pop
jmp
cmp
add
call
loopne
js
cmpsb
ret
mov
loop
stc
int
jno
int3
pushaw
xchg
std
in
fucomp
sub
inc
mov
dec
scas
cli
push
out
imul
fistpl
sbb
sub
lret
push
sbb
lret
sub
dec
cmpsb
addr16
sbb
xchg
test
cltd
shlb
sbbb
ss
divl
mov
xchg
das
dec
push
mov
xchg
cltd
cwtl
loop
push
and
sbb
lret
rorl
xchg
or
addr16
lods
sbb
fistpll
push
lcall
mov
or
lret
adc
jmp
mov
pop
fstl
jo
gs
out
nop
pop
mov
add
dec
cli
mov
arpl
aas
jno
gs
mov
sbb
sub
loope
mov
outsl
dec
shl
adc
outsl
pop
cmp
xchg
jo
push
test
jle
mov
cmc
iret
xchg
hlt
mov
in
out
int3
mov
fcoml
sti
mov
mov
fildll
jmp
shrb
mov
sub
popw
cmp
jno
adc
outsl
pop
shll
pop
andb
outsb
pop
data16
xor
xor
in
bound
fiaddl
adc
loop
sbb
cli
hlt
lcall
ds
add
icebp
add
push
cmp
jp
aaa
or
and
xchg
icebp
test
mov
mov
and
orl
cli
push
push
mov
shrb
rcl
push
pop
insb
lock
inc
or
xchg
bound
mov
sahf
rorl
xchg
enter
lret
pop
xlat
jo
jecxz
sbb
or
add
mov
popa
mov
mov
mov
fcomp
jge
fcmovu
adc
mov
add
mov
imul
data16
sub
pop
inc
in
fists
fwait
lea
out
pusha
out
sub
pop
sbb
push
mov
xchg
loop
mov
pop
lock
cmc
cld
mov
das
sbb
ss
test
adc
mov
outsl
scas
fcomps
adc
cltd
mov
hlt
and
out
ja
addb
mov
pop
pop
cmp
fsubp
xchg
out
xchg
and
mov
test
lahf
adc
jecxz,pn
insl
sti
cmc
push
mov
mov
cltd
push
fildll
or
mov
or
pop
es
mov
in
cmp
dec
add
lock
mov
subb
cmp
add
add
in
arpl
movsl
sbb
ljmp
pop
aad
fs
ja
into
rclb
test
or
loope
test
loop
shlb
mov
repnz
adc
lock
cwtl
aas
push
push
je
dec
xlat
std
fwait
jmp
mov
cmpl
xchg
leave
loopne
divb
mov
out
mov
testl
cwtl
cwtl
arpl
bound
aad
idiv
pushf
fimull
jnp
je
jge
inc
jb
rclb
sahf
stos
bound
sbb
dec
inc
arpl
mov
add
cmp
mov
lea
scas
mov
loop
fistl
rcll
xchg
mov
sub
arpl
rcr
inc
out
cmp
dec
cmp
in
sbb
jecxz
lds
cmp
fimull
mov
pop
push
inc
mov
addr16
aaa
mov
mov
pop
jl
or
insb
pusha
outsb
fisubrs
inc
sti
std
jmp
lds
daa
mov
mov
cmp
shll
test
pop
jl
xor
xor
mov
cltd
test
imul
mov
jb
add
int
idivb
xchg
mov
push
aas
add
xchg
lret
scas
dec
imul
and
push
jp
or
lds
loopne
mov
les
mov
popf
out
pop
jo
das
inc
out
js
dec
push
push
aam
mov
fistps
mov
cwtl
pop
dec
adc
pop
adc
fstps
jne
mov
bnd
adc
xchg
aas
mov
out
sbb
icebp
ljmp
test
inc
cmpsb
dec
mov
cmpsb
shll
cwtl
std
cmc
jno
add
sbb
xchg
jae
or
neg
or
sbb
and
sbb
pusha
jae
cli
add
inc
scas
fs
stos
push
insl
pop
sub
out
inc
loopne
cwtl
sbb
mull
ret
cltd
rcr
sbb
mul
aad
leave
inc
or
sub
jae
lock
aaa
idiv
sbb
dec
and
mov
out
repnz
push
sub
xor
aaa
mov
inc
cmpsb
mov
fisubs
xchg
sub
mov
ret
shll
sti
jb
xor
ret
xor
inc
cmpsb
addl
cs
xchg
push
jno
and
cmpsb
xchg
adc
bound
mov
mov
rcrb
xchg
aam
int3
sbb
sbb
jb
or
icebp
into
dec
in
push
xor
scas
aad
jp
dec
xor
xchg
dec
lods
pop
push
fwait
push
mov
push
xchg
adc
inc
cltd
or
mov
pusha
outsb
and
xor
add
mov
add
or
lods
xor
jmp
mov
loop
push
sbb
out
lods
cmp
pop
jp
add
flds
mov
loope
add
repnz
jmp
or
inc
mov
scas
sbb
lock
sbb
lahf
shll
and
subl
pusha
push
sub
adc
cmp
bound
add
add
cmp
push
push
pop
jmp
cmp
outsb
jnp
inc
data16
sub
int3
xor
jp
bnd
aas
std
inc
inc
fwait
testb
push
dec
int
icebp
inc
shll
push
cmovb
mov
and
insb
in
out
in
mov
cmp
xor
xor
jne
icebp
rorb
out
loop
scas
mov
jae
sub
ja
or
mov
mov
adc
jno
sub
pop
insb
cmp
testl
dec
test
add
loope
dec
mov
insl
inc
jnp
push
sahf
and
xchg
pop
jae
jno
push
pop
xor
mov
in
jecxz
or
add
enter
dec
shrb
adc
mov
and
mov
mov
jo
adc
sub
in
les
orl
mov
pop
and
rcll
enter
mov
sbb
fcom
mov
jb
aam
mov
ljmp
mov
pushf
test
outsb
push
sub
bound
pop
addr16
add
leave
sub
ja
ss
in
pop
clc
aaa
mov
push
pop
adc
jno
sub
cmpsb
xor
jae
sub
test
jmp
add
mov
fwait
and
insb
push
push
aas
cli
mov
incl
rcrl
xor
stc
jb
adc
push
cltd
repnz
sbb
rcrl
test
sub
pop
lods
sbb
lret
inc
mov
clc
jmp
jb
xor
push
arpl
mov
sub
jnp
or
adc
sub
xor
cwtl
out
xchg
je
roll
xor
sub
pop
push
ja
rorb
in
xchg
test
dec
xchg
pop
test
xor
sub
or
or
mov
mov
and
xor
pop
sahf
stos
or
mov
inc
and
movsb
jle
loopne
jb
adc
push
push
nop
dec
push
int
cmp
add
jmp
mov
mov
push
mov
jnp
push
or
fldenv
xor
rorb
shll
pushf
mov
jg
hlt
add
mov
mov
mov
les
jo
aaa
out
fnsave
sub
or
adc
pushf
leave
scas
es
add
mov
jno
sahf
sahf
and
adc
cmp
stc
push
push
jae
push
mov
jecxz
cmp
xchg
imul
add
data16
cmp
scas
in
push
sub
mov
mov
jb
sti
addb
lahf
sbb
stc
pop
arpl
adc
fildl
popf
adc
aad
test
hlt
push
enter
rcll
pushf
jle
lret
xor
xchg
pop
pop
mov
in
fsts
insl
test
mov
xchg
dec
stos
jmp
ret
fdiv
jmp
dec
and
rcrb
fistl
lds
lret
xchg
mov
ja
dec
sahf
add
jo
push
mov
out
fs
mov
adc
add
xor
cld
or
mov
mov
mov
out
ja
int
add
popa
xchg
sahf
inc
mov
test
shlb
jnp
jmp
scas
and
pop
xor
jg
sub
inc
fcomps
jp
mov
mov
orb
sbb
and
je
mov
sub
inc
mov
insb
pop
adcl
mov
test
mov
and
gs
push
cmpsb
ret
ljmp
popa
into
push
fistl
or
outsb
pop
or
inc
add
test
out
scas
shlb
dec
nop
test
mov
dec
jmp
les
sub
cmc
sub
lcall
test
inc
sub
out
sbb
scas
sub
mov
out
mov
imul
xchg
push
fiadds
dec
xor
je
bound
xor
pop
pop
push
in
aas
mov
xchg
lods
sub
divb
add
movlps
xchg
pop
test
inc
les
and
icebp
loopne
sub
pop
lds
fildll
mov
pop
cs
adc
mov
fdivs
lea
fcoml
aam
lods
lahf
cli
fcoml
lods
daa
rcrl
mov
xchg
pop
mov
icebp
push
pusha
xchg
int
and
scas
outsl
mov
int3
jl
push
hlt
cvttps2pi
jns
out
movsl
or
jb
pop
jnp
hlt
sbbb
in
es
bound
dec
xor
inc
lock
push
or
dec
into
popa
lods
lds
icebp
jmp
sub
test
loopne
sub
mov
pushf
shl
jp
aaa
or
enter
popf
ret
rorb
pop
std
gs
stos
loope
leave
pop
leave
out
in
lock
and
imul
repz
push
pop
sub
lds
bnd
or
adc
les
push
mov
push
inc
in
scas
movsl
adc
sbb
sub
mov
andb
and
je
mov
or
adcl
lret
lcall
xchg
or
mov
push
push
cli
mov
xchg
xchg
jb
or
and
mov
imul
adc
shl
dec
add
lock
ljmp
sbb
push
jb
imul
push
xchg
push
not
cmpsb
pop
jns
mov
sahf
cmp
insb
push
in
mov
cmc
cmp
mov
xor
lea
popa
bound
stos
pop
jb
mov
mov
add
enter
fldl
subl
std
jnp
test
sub
ret
insb
push
xor
push
xor
jnp
mov
jg
lcall
pop
stc
push
loope
das
xor
dec
mov
or
mov
iret
fprem
js
sub
clc
sbb
push
test
fsub
lret
pop
mov
sub
outsl
inc
data16
push
mov
in
adc
jg
hlt
orb
pop
popa
je
xor
divb
rol
inc
xchg
js
mov
sldt
dec
adc
cmp
mov
jo
stos
dec
divl
xor
dec
fsubs
xor
xchg
in
divl
movsl
inc
lods
adc
mov
jmp
jp
incl
lret
mov
mov
xor
and
xchg
fistps
loope
jg
imul
and
jae
ljmp
xchg
inc
xlat
test
test
xor
mov
dec
sbb
add
lods
and
add
arpl
js
mov
mov
and
inc
jl
sub
sbb
cwtl
cld
cmp
out
fwait
adc
cs
shr
inc
es
cltd
ss
icebp
xor
subl
aas
clc
xor
jnp
sbb
cs
inc
jb
nop
lods
iret
jle
outsb
insb
mov
mov
ret
rcrb
lret
je
cmp
ficoml
divl
push
adc
in
xchg
aas
xor
pop
jmp
push
jno
dec
mov
sub
fwait
adc
fnstsw
cs
cmp
scas
cli
dec
ficompl
imul
xchg
ret
orl
fucomip
clc
jae
dec
cltd
or
shrb
lds
vmovaps
xchg
cltd
aam
sahf
sub
mov
cmp
mov
fmuls
pop
outsl
pop
cmpsl
aam
xchg
aas
les
pop
loop
inc
dec
icebp
bound
push
mov
push
call
sbb
mov
loopne
add
push
push
push
mov
pop
jp
mov
pop
xor
aad
sbb
arpl
aad
pop
jle
out
orl
jb
test
repz
jle
jle
pop
push
mov
xor
out
movsl
xor
mov
adc
xor
mov
filds
scas
jnp
xchg
jno
mov
call
or
and
sahf
lcall
fstps
mov
ret
mov
rcll
fs
aam
dec
vmovdqa
ret
add
hlt
fsubrs
jae
inc
cmp
arpl
and
jno
jnp
add
sub
std
xchg
out
stos
push
test
mov
push
insb
shrl
jl
icebp
or
pop
test
fs
mov
je
add
pop
leave
dec
sbb
mov
das
adc
out
incb
pushl
test
arpl
loope
insb
in
sahf
mov
rcrl
cmp
cmpsl
xchg
and
xchg
mov
sbb
loopne
add
jle
xchg
cld
push
dec
out
and
inc
loope
lcall
adc
mov
mov
sti
xor
lret
ret
adc
pop
pusha
cwtl
pop
jae
sub
pop
lods
lods
adc
mov
sbb
push
sbb
in
xchg
cmp
stos
aas
xorb
pop
jbe
dec
xor
sbb
inc
lahf
cs
push
add
ret
shl
mov
or
mov
mov
mov
mov
scas
test
sahf
sbb
les
loope
nop
inc
jno
jl
cs
loopne
stc
lret
sbb
push
add
sbb
rcll
stos
jnp
or
adc
aad
pop
mov
sti
mov
inc
cs
leave
mov
icebp
cmpsl
and
xchg
xchg
push
movsl
ret
inc
xchg
ret
imul
dec
bound
dec
dec
popw
or
test
adc
sub
js
fsubrp
pop
test
inc
mov
imul
sub
cmp
xchg
jo
in
mul
add
or
push
scas
mov
push
xor
xchg
adc
cmp
sbb
xchg
fldcw
sarl
adc
inc
pop
mov
popf
idiv
das
mov
ja
movl
xchg
jbe
cmp
pop
jbe
daa
les
cmpsl
add
jae
rclb
add
mov
int3
popa
add
mov
and
int
xor
aad
mov
inc
cmp
rcll
ljmp
movsl
jnp
cld
mov
cmp
cmp
pop
ffreep
popf
sbb
dec
cmp
arpl
js
mov
dec
nop
cld
dec
fldenv
mov
in
inc
sahf
adc
jb
add
popf
cmp
push
add
stc
add
and
pop
sti
dec
adc
fmul
xor
xchg
fildl
mov
js,pt
cmpsb
mov
out
hlt
fs
push
mov
sti
ljmp
xor
and
test
or
xor
hlt
sub
sub
nop
sub
inc
enter
push
call
popa
jge
mov
fs
jmp
lods
mov
pop
add
aaa
andb
pop
push
xor
mov
xchg
fmul
lahf
mov
inc
sbb
xlat
pusha
adc
push
jmp
jle
fsubrs
mov
clc
inc
sub
xlat
sub
lods
or
ror
cmpsl
sub
add
mov
or
sbb
push
bound
stos
out
adc
mov
cmp
call
in
mov
adc
push
movsl
push
inc
push
push
ljmp
bound
fdivr
rcrb
mov
cld
sub
or
daa
fcompl
sub
and
shll
sbb
cld
cmp
and
cmp
stos
push
mov
mov
outsl
test
mov
mov
lods
push
pop
aad
pop
jb
mov
sbb
ss
cli
push
inc
adc
xorb
jae
cmp
push
jecxz
sub
ljmp
mov
and
push
mov
push
lods
cmpsl
or
sbb
shll
int3
push
xlat
rolb
leave
enter
pop
inc
jl
bound
and
xchg
movsl
xlat
push
ja
std
pop
or
adc
add
clc
sahf
jp
push
incl
js
push
cmpsl
cmp
out
dec
mov
ja
imul
aaa
pop
lods
and
ljmp
xor
mov
stos
lods
sub
cmp
jmp
sti
xchg
or
cmp
pushf
sub
rcl
int3
pop
dec
popf
lcall
hlt
mov
cli
inc
lahf
cmpsb
stc
jb
and
dec
lock
pop
test
mov
xor
int3
nop
mov
and
and
or
ljmp
out
shll
push
cmpsb
jmp
mov
ja
xor
mov
inc
jb
push
js
or
jl
mov
inc
aas
je
cli
pop
cwtd
clc
fdivrl
jl
mov
call
dec
int
jl
loope
clc
mov
loop
jmp
out
aam
ljmp
stos
push
pop
leave
mov
add
cmp
sub
lds
and
test
ljmp
aam
jp
lods
andl
mov
aam
test
sub
test
clc
cmp
out
xchg
in
mov
shll
movsb
loop
int3
push
mov
lea
aam
cmc
hlt
daa
daa
adc
nop
inc
sbb
pop
es
mov
pop
push
sub
sbb
sub
and
stos
push
sbb
xor
cmp
cmpsl
push
lods
mov
xchg
mov
lea
xchg
cmp
adcl
push
adc
lea
in
add
out
mov
add
push
jne
int
in
lock
dec
call
push
xchg
fidivl
pop
sahf
lds
rorb
mov
pop
or
inc
cmp
pop
cmpsb
clc
icebp
int3
cli
dec
jnp
or
fwait
in
imull
adcb
sub
jmp
adc
add
js
int
lcall
arpl
jae
pop
and
pushf
dec
clc
cld
nop
rolb
jecxz
lret
jae
mov
ret
mov
test
push
call
lret
mov
arpl
mov
loop
mov
ljmp
pop
mov
into
out
sbb
adc
movsl
jne
adc
push
sub
add
dec
mov
stos
push
cmpsb
jmp
cmp
dec
mov
xchg
in
int3
mov
xchg
fsts
test
xchg
test
out
lea
lret
push
pop
adc
test
dec
icebp
ret
inc
je
into
enter
mov
or
out
inc
loop
xor
pop
lahf
icebp
cmp
pop
fdiv
shlb
push
dec
aaa
dec
adc
or
movsb
cmpsl
inc
jp
and
xor
bound
inc
mov
jmp
mov
jg
int
jge
cmpsl
add
fwait
and
cmp
lahf
jns
icebp
pop
xchg
ret
inc
dec
mov
push
mov
not
sbb
sub
int3
stos
scas
or
lock
fstps
xor
scas
pop
or
adcl
ss
push
inc
test
mov
jae
mov
les
xchg
inc
fwait
add
add
pop
cmp
push
dec
inc
in
xchg
inc
add
xor
adc
data16
shll
adc
cmp
fcmovb
icebp
dec
push
repz
and
enter
lock
int
sub
add
pop
aad
or
dec
cmp
cli
leave
add
lea
or
xchg
mov
push
sub
ds
ja
push
and
jns
jo
pop
or
jle
mov
cmc
out
xor
jle
ljmp
jae
sti
shl
das
test
pop
cmp
mov
pop
shlb
rcll
or
adc
sbb
and
cmp
add
mov
cs
cmp
sbb
iret
clc
scas
mov
aas
cs
or
packuswb
dec
inc
pop
iret
push
outsb
pushf
pop
cmpsl
popf
add
fcomi
pop
jp
xor
popa
cmp
out
add
mov
bound
adc
sub
cmp
dec
mov
cmp
mov
rcrl
jne
icebp
mov
mov
push
mov
xor
outsl
shlb
inc
in
pop
jp
push
dec
lock
jnp
cmp
jecxz
pop
and
dec
xorl
stc
scas
mov
adc
xor
adc
jne
inc
pop
mov
push
loope
cs
mov
xchg
adc
dec
or
lahf
aas
cmpsl
das
pop
and
lcall
fxch
pop
shrb
fs
fidivl
sub
imul
mov
push
sahf
and
cmp
stc
xchg
lods
sbb
bound
or
sbb
add
int3
shl
and
hlt
push
or
nop
clc
scas
inc
and
in
test
mov
sbb
roll
mov
xor
jmpw
in
into
test
test
dec
scas
mov
movsl
xor
lcall
jle
outsl
mov
lds
or
cmpb
mov
mov
mov
pop
xchg
aad
dec
and
cli
cli
adc
jmp
and
cltd
push
ret
sbb
mov
mov
pop
or
call
cmp
shlb
lahf
inc
ja
xlat
dec
nop
jb
pmaddwd
mov
mov
iret
jle
push
cwtl
sub
jecxz
mov
mov
iret
xor
jmp
out
jnp
out
mov
imul
shll
pusha
addr16
and
jp
xor
mov
mov
dec
shr
fsub
dec
or
ljmp
jp,pn
or
and
xchg
roll
cmp
filds
add
fmul
fstpt
xor
insl
divl
loope
push
imulb
mov
jne
cmpsl
xor
mov
decb
push
imulb
ds
daa
mov
push
sbb
not
sti
lahf
sub
and
adc
stos
xchg
jl
xor
lods
push
pop
stos
mov
sub
sub
mov
ja
mov
adc
lahf
cmpsl
test
xchg
ret
testb
outsb
xor
mov
jb
mov
push
fildll
arpl
cmp
movsl
or
mov
les
hlt
lods
clc
push
sub
loop
and
pop
rolb
jecxz
pop
inc
xchg
add
pop
lahf
mov
jecxz
jmp
movsl
and
pop
adc
and
shll
cmp
scas
sbb
or
daa
or
xor
push
iret
insb
push
orb
addr16
jmp
push
arpl
leave
data16
rclb
xor
sbb
push
xlat
cmp
filds
cltd
fdivrl
int
dec
jo
dec
cmp
mov
ret
xor
sahf
push
repz
adc
sub
xchg
testl
and
mov
mov
notb
in
pop
inc
mov
jb
mov
cmp
inc
xchg
inc
add
mov
adc
sbb
out
xchg
pop
jp
out
lock
movsb
scas
into
roll
int3
or
loop
or
jno
int
cmp
jle
xlat
and
inc
dec
pop
rorb
sbb
jne
sub
xchg
mov
mov
ss
jnp
jg
pop
mov
imul
ror
sub
mov
jle
push
test
inc
scas
fndisi(8087
xchg
jp
sub
pop
jae
aam
jg
mov
lea
lock
div
fnsave
mov
data16
das
addr16
enter
mov
inc
and
lret
arpl
mov
lcall
sub
daa
leave
fidivl
sub
ds
js
xchg
mov
iret
xor
aad
pop
mov
push
lods
dec
out
jmp
frstpm(287
cmp
imul
xchg
cwtl
mov
idiv
int
movsb
loope
xor
fbstp
sbb
rclb
jnp
or
jb
ficomps
enter
adc
inc
fdivrs
sbb
or
cld
pop
xlat
lret
loope
cld
lahf
pop
push
mov
inc
dec
push
cmp
sub
xor
shl
inc
push
sub
in
lock
sbb
lods
pop
icebp
bound
push
jns
std
repz
sub
es
pop
fwait
push
cltd
cmpsb
mov
mov
dec
outsl
dec
pop
xor
aaa
mov
dec
mov
mov
xchg
cli
mov
int3
pusha
xlat
jle
imull
imul
mov
stos
imul
jl
mov
add
adc
repnz
push
push
pusha
dec
test
pop
sarb
cmp
in
test
push
cli
cmp
push
mov
rcl
mov
xlat
pop
imul
adc
aam
sarl
xor
sbbl
fucomip
sahf
loope
rclb
fidivs
inc
lret
lret
in
lret
jmp
rclb
pop
inc
push
scas
outsl
cmp
popa
jne
std
outsb
cli
data16
jmp
and
mov
or
jbe
add
sbb
sahf
inc
loope
jecxz
mov
mov
xchg
sbb
jae
loopne
pop
or
call
fsubl
adc
xchg
fdivrl
insb
decb
mov
xor
shrl
lock
xor
loop
xchg
cmp
rcl
shrb
pop
ret
and
mov
cmpsl
test
std
fwait
cmp
stc
dec
lret
movsb
xor
sbb
dec
mov
jge
lock
jge
jmp
call
out
icebp
sbb
mov
push
xchg
push
jno
dec
and
rcll
and
adc
fcoms
ss
xor
and
jp
dec
sub
add
outsl
add
in
mov
jo
xchg
call
pop
je
cmp
jne
lods
add
or
repnz
pusha
xchg
adc
into
or
xchg
cs
pop
pop
push
testb
sahf
in
aaa
jle
jne
ret
imul
adc
and
push
mov
aaa
and
inc
or
mov
jne
pop
or
js
cli
in
test
gs
lahf
mov
int3
gs
dec
popa
mov
shll
and
sub
test
cmpsl
in
jbe
mov
dec
mov
xchg
mov
jge
imul
pop
cmp
and
cmp
mov
mov
jo
ljmp
dec
fidivs
jmp
repz
fcomps
pop
outsb
adc
add
jmp
jle
mov
mov
in
arpl
mov
xchg
push
lock
push
call
test
test
sbb
cmp
cmp
pusha
into
jecxz
push
jnp
cld
cmp
pop
fiaddl
cmpsb
addb
add
int
cmp
loop
mov
movsl
stc
lock
add
jb
fwait
and
fwait
mov
add
mov
in
push
inc
test
cltd
xchg
sub
data16
pop
push
loope
fs
sarb
loope
cmpb
ret
inc
inc
in
jae
lret
mov
dec
pop
nop
lcall
pop
call
xor
in
lahf
sbb
insl
clc
add
test
in
iret
das
inc
movsl
divb
jp
arpl
addr16
cmp
pop
jo
lods
sub
cmp
shll
loope
inc
sbb
sub
xlat
popf
movsl
mov
push
jno
pop
arpl
ret
xchg
scas
inc
rorl
lcall
jp
inc
bound
mov
or
cmpsb
daa
cmp
test
imul
orb
cmp
inc
mov
shl
data16
sub
mov
pushf
adc
fsubrl
int
mov
xchg
adc
imul
sbb
jne
cwtl
dec
push
fdivp
or
sbb
add
call
push
jp
stos
cmp
xor
xor
aaa
inc
xchg
mov
push
cmp
xor
lods
xor
pop
dec
or
mov
enter
xchg
adc
movsb
push
mov
mov
jbe
adc
jbe
sbbb
loop
ss
gs
and
sbb
insb
and
mov
ret
cmc
hlt
loope
into
insl
jns
fbstp
insb
mov
add
adc
stos
stos
pop
and
cmp
int3
jnp
and
sbb
mov
mov
sbb
dec
in
inc
mov
mov
pop
fisttpll
sub
mov
push
inc
scas
sbb
xchg
divl
or
movsb
mov
inc
mov
push
adc
fildl
shrl
or
push
ljmp
div
dec
aam
inc
jne
out
inc
es
or
or
repz
lret
lods
lods
fmul
push
add
adc
pop
xchg
jecxz
inc
leave
adc
inc
jg
sub
inc
jnp
adc
cmp
daa
ljmp
insb
std
cmpsb
push
enter
mov
sbb
fidivl
subl
addr16
add
add
pop
popf
enter
cmpsb
or
lret
xchg
mov
std
insb
shrb
cli
sarl
leave
divb
cli
lret
lret
sahf
enter
gs
and
cli
sub
movsb
mov
mov
pop
cmp
jl
je
mov
jo
cwtl
dec
pop
sub
jns
xlat
dec
inc
inc
mov
mulb
push
sbb
mov
mov
pop
les
rcll
inc
or
xor
popa
sub
push
jl
mov
pop
xor
out
fbld
rcll
xor
pop
jo
lcall
and
aas
lea
arpl
inc
add
adc
in
jae
jp
sub
lock
in
ret
iret
sub
pop
xor
mov
xor
xor
jp
je
sub
mov
cmp
cs
jge
loope
and
fdivrs
call
fdivs
or
sahf
test
mov
loope
cmp
jno
out
lods
add
ds
push
sub
pushf
fidivrs
cltd
imul
or
push
jae
and
call
inc
jne
imul
test
sbb
shl
iret
and
and
dec
daa
mov
shll
or
push
cmp
test
cli
jl
mov
jg
mov
pop
sahf
movsl
sti
cmp
bound
dec
jns
and
mov
or
dec
fsubs
scas
call
loop
dec
call
push
xchg
jbe
decl
and
outsb
data16
or
sbb
adc
adc
bound
pop
jge
jno
or
and
addr16
push
stos
cwtl
iret
icebp
ret
mov
inc
mov
xchg
inc
fildll
nop
nop
mov
rcll
sub
addr16
in
daa
sub
test
icebp
icebp
and
sahf
stos
jge
fdivrp
or
sahf
fcomi
pop
xor
mov
aaa
xlat
test
push
test
mov
dec
cmp
push
fistpl
sar
or
dec
lock
push
dec
inc
or
test
adc
fidivrs
add
adc
shlb
int3
add
cmp
in
xor
xchg
sub
mov
sbb
loopne
imul
ljmp
mov
fcompl
inc
sub
int
adc
dec
mov
xchg
lahf
cmp
imul
and
jae
lcall
lret
push
xchg
hlt
into
sub
enter
in
cld
pop
cmp
mov
adc
ds
nop
mov
jg
sub
sub
lea
mov
cmp
mov
inc
mov
push
pop
cmpsl
pushf
add
jmp
mov
adc
mov
cmp
scas
and
mov
iret
mov
mov
mov
push
mov
lahf
push
sub
das
jb
jp
bound
filds
lock
mov
jp
sub
push
unpcklps
std
ljmp
imul
jb
cmpsl
rorl
lds
mov
sub
add
pusha
add
pop
inc
add
mov
frstor
jg
xor
popa
loopne
sbb
scas
pusha
pop
mov
pop
hlt
ret
push
xchg
aad
mov
push
xor
mov
mov
dec
mov
test
pop
int
or
push
or
sub
shlb
scas
sarb
inc
cmpsl
lcall
cli
push
add
das
sub
test
xchg
jp
cmp
xlat
lret
bound
xchg
push
int
aaa
sbb
xor
xchg
add
xchg
and
bound
push
dec
push
mov
inc
aam
jp
and
movsb
mov
mov
sub
ficoml
mov
mov
iret
pop
sar
iret
js
in
pusha
sar
xor
mov
rorb
and
es
iret
push
inc
stc
push
sbb
push
push
cld
in
and
mov
repnz
clc
lods
jge
and
outsl
adc
lret
mov
mov
xchg
mov
adc
jno
in
pextrw
and
js
stc
xchg
sbb
orl
in
insb
inc
addl
daa
mov
movb
push
aam
xchg
sub
dec
sbb
sbb
ficoml
xorl
addr16
lret
xchg
inc
mov
mov
mov
xchg
and
mov
in
xor
xlat
mov
xlat
fisubrl
roll
iret
push
faddl
pop
mov
in
dec
sub
xor
enter
in
xchg
setne
aam
and
fildll
lods
mov
pusha
sub
sbb
inc
sub
adc
pop
cmp
cmp
test
mov
mov
push
mov
pop
lahf
mov
cmp
inc
stos
push
mov
sbb
sub
decb
add
pop
and
mov
sti
les
or
std
enter
outsl
push
mov
and
mov
pop
cmp
sbb
lahf
in
dec
jecxz
icebp
sbb
jl
xchg
sbb
xchg
sbb
mov
pusha
daa
sbb
dec
adc
cmpsb
adc
ja
cwtl
andb
sub
jp
in
cmp
cli
inc
sahf
xor
adc
rolb
lods
pop
mov
insb
mov
ds
push
inc
mov
dec
stos
sbb
mov
push
insb
mov
push
fs
inc
fwait
orl
dec
movsb
popa
icebp
and
lcall
jmp
xchg
xchg
js
jmp
and
jp
aaa
xor
sub
or
dec
in
mov
mov
lds
mov
test
in
dec
insl
push
les
and
incb
sub
pop
test
or
push
test
popa
cmovo
pop
mov
pmaddwd
mov
mov
mov
and
pop
mov
mov
dec
xchg
es
xchg
sbb
into
add
div
test
push
or
inc
jmp
daa
jbe
inc
pop
into
pop
cwtl
mov
andl
xor
mov
jne
pop
insl
jmp
out
out
xchg
xor
int3
les
dec
outsl
jb
sub
loope
xchg
lret
push
sbb
cmp
mov
dec
mov
addr16
push
fdivr
out
test
mov
dec
or
mov
rol
mov
add
fnstenv
mov
jo
mov
ljmp
arpl
sub
push
addb
mov
cmp
and
xchg
loop
jne
loopne
xchg
or
les
jp
mov
jne
dec
adc
or
cmp
in
sub
dec
mov
jp
mov
add
insb
inc
dec
pop
jle
or
leave
cmp
push
dec
stos
lods
mov
mov
jne
in
fs
inc
call
std
mov
dec
fdivl
pusha
or
xor
xchg
orb
out
push
adc
cmp
and
mov
add
pushfw
xchg
mov
xchg
pop
jmp
test
pop
xchg
cmp
adc
push
add
in
lret
sub
push
mov
inc
inc
fdivrl
shrl
dec
bound
cmp
sbb
push
sub
mov
dec
ret
pop
jb
iret
rorb
or
push
nop
imulb
fisubl
mov
or
pop
inc
cwtl
sti
inc
dec
mulb
popa
inc
sub
pop
lods
stos
mov
bound
inc
ds
daa
cmp
xor
adc
cmp
xchg
or
mov
inc
and
test
mov
sbb
dec
mov
mov
xlat
pushf
cmpsl
mov
adc
push
test
pop
xor
mov
mov
mov
fildl
movsl
lcall
add
and
ds
popf
pop
jle
pop
pop
cmovle
inc
mov
mov
adc
stc
rol
jge
adc
pop
jae
mov
fidivs
lret
jno
xor
sub
sbb
xor
jg
es
and
jle
jge
mov
call
xlat
pop
xchg
sub
lret
cmp
xchg
and
sub
dec
mov
movsb
lcall
addr16
lret
out
pusha
sub
rcrl
repnz
pop
int3
add
insl
push
add
ret
ljmp
sahf
push
out
cmpb
out
aad
mov
loope
out
sbb
shll
loop
cmp
dec
cmpsb
and
loope
xlat
mov
sub
in
aad
xor
subb
dec
clc
stos
cmp
ljmp
sbb
sbb
or
lret
mov
or
lods
xor
gs
jae
test
ljmp
fs
insl
push
loope
pop
roll
adc
push
sti
and
ficomps
add
sub
shlb
frstor
sub
sbb
jae
lds
or
mov
jno
sbb
mov
divl
dec
jl
fwait
and
xchg
xchg
mov
shlb
push
add
xchg
test
sub
push
cmp
xchg
jnp
dec
out
pop
mov
les
xchg
imul
ja
mov
or
or
or
jge
mov
push
dec
divb
push
outsb
loopne
adc
stos
pop
sbb
fwait
mov
movsb
xor
in
inc
jno
lods
sbb
push
add
sbb
ja
dec
imul
or
cmp
aaa
and
out
push
icebp
fcomps
pop
clc
add
and
sarl
push
push
cmp
jnp
xorb
clc
xor
mov
pop
lcall
out
inc
jnp
mov
inc
iret
xchg
inc
scas
jle
cmp
push
jmp
or
add
xchg
pop
stos
push
cmp
mov
aad
mov
lcall
jbe
fistpll
adc
jle
sti
jl
cmc
xor
push
cltd
stc
std
mov
sahf
out
pop
aam
pop
lahf
inc
mov
xchg
or
outsl
int3
loopne
jbe
pushf
dec
out
popa
add
inc
loop
push
jmp
js
dec
rorb
cmp
cmp
scas
in
add
mull
outsl
iret
xchg
arpl
pop
jae
fwait
push
mov
loop
or
mov
pop
mov
outsl
ret
mov
xchg
cld
fmull
and
cwtl
xor
nop
mov
push
bound
into
in
sub
loopne
test
jno
add
fnstsw
notl
pop
insb
cli
dec
mov
fldenv
outsl
filds
lea
adc
mov
xlat
je
addr16
call
sahf
in
mov
mov
sub
lea
xchg
adc
and
ror
cmpsl
xchg
orb
and
out
xor
mov
rcrb
xchg
jno
lods
cmp
sbb
hlt
jns
sub
sbb
xchg
in
xor
adc
jmp
ja
sub
stos
gs
ljmp
add
xor
loop
push
mov
add
scas
fadds
pop
xchg
out
xchg
mov
inc
lret
jnp
mov
and
pop
and
icebp
jno
or
mov
mov
push
fistpl
push
enter
ret
int3
sub
sbb
lret
xchg
call
xchg
xor
mov
inc
lahf
fsubrl
loopne
into
xchg
and
out
jmp
mov
cmc
xchg
jo
sbb
int
ljmp
cmovns
mov
xchg
and
xchg
inc
mov
lea
popa
stos
lcall
dec
jne
cld
cmpsb
push
cmp
call
add
mov
lcall
pop
adc
mov
js
enter
pop
clc
sub
xchg
sub
inc
into
call
fs
insb
leave
cmp
rorl
testl
and
loope
add
sbb
push
test
sub
or
pop
popa
fldcw
and
jae
repz
pop
out
and
add
into
mov
scas
pushf
mov
xchg
push
js
lods
add
stos
sub
rol
rcrl
push
push
cvtdq2ps
inc
sbb
jne
xor
sub
les
and
sti
sti
jl
clc
jle
xchg
sbb
sub
dec
insb
inc
and
cmp
loopne
add
lds
sbb
dec
sarb
aad
add
mov
pop
jbe
jp
imul
ljmp
test
jae
insb
out
jp
dec
mov
dec
fldcw
in
in
pop
push
xchg
cwtl
insl
movl
push
add
jnp
rcrb
rcrb
clc
sub
pop
fmull
js
in
or
ret
cltd
enter
clc
rol
fnstcw
cmp
fnstcw
cmp
jno
add
jbe
cmp
sbb
fidivs
xchg
adc
sub
cmp
cs
xor
out
mov
aaa
adc
les
sbb
cmp
push
jno
mov
mov
in
fbld
mov
xorl
mov
pop
dec
jmp
ljmp
mov
rol
lcall
inc
hlt
lea
addr16
scas
loope
add
and
jnp
cmpsb
mov
jle
lret
mov
rclb
hlt
adc
mov
mov
addr16
dec
mov
dec
das
std
sbb
outsb
lret
int3
imul
inc
or
sub
ret
sub
aam
push
cmpsl
sub
cmp
mov
jae
push
push
push
es
imul
aam
inc
and
fadds
ficompl
and
sahf
mov
call
popa
in
cmp
push
pop
ljmp
jecxz
cmp
repz
sahf
pop
call
fs
aaa
lods
clc
jg
lock
stos
mov
outsl
inc
sbb
dec
testb
scas
and
punpckhbw
jo
movl
xlat
mov
cmc
pop
pop
xchg
mov
imul
mov
xchg
movsb
insl
add
adc
incl
imul
pop
sub
lret
mov
ljmp
sbb
cmpsl
std
stc
mov
aaa
cld
inc
add
inc
sbb
push
mov
lret
mov
arpl
hlt
movswl
ror
mov
test
out
and
or
adc
jge
mov
cmpsl
sub
lahf
adc
mov
jns
cmpsl
mov
dec
out
in
in
mov
jno
les
dec
pop
ja
icebp
repz
fisubs
ja
inc
lock
jl
push
jnp
call
push
jecxz
pop
adc
adc
scas
sbb
xor
stos
mov
or
cli
dec
inc
insl
leave
inc
jmp
jg
xchg
inc
dec
jecxz
xlat
and
lock
xorl
outsb
icebp
add
mov
inc
sbb
dec
int
push
mov
stc
cmp
pop
xchg
mov
fidivrl
mov
cmp
xchg
testl
and
rol
jmp
push
push
mov
dec
imul
gs
test
pushf
pop
lcall
mov
imul
push
in
shll
leave
push
sbb
ret
outsb
pop
push
nop
fwait
cwtl
repnz
add
ljmp
adc
pop
pop
rcll
push
adc
sub
enter
sbb
sahf
hlt
andl
inc
mov
movsb
add
arpl
movsb
mov
bound
xchg
lcall
sbb
push
or
adc
jge
call
or
fwait
sbb
cmp
push
add
pop
mov
jb
mov
repz
dec
mov
mov
and
les
hlt
fs
mov
jns
int
jge
push
movsl
daa
ret
adc
push
inc
mov
je
cmpsb
add
orl
aad
pusha
sbb
cmpsb
and
or
test
idivl
out
sub
cmc
mov
and
ss
lock
fs
or
jnp
ficomps
pop
rolb
pop
es
insb
or
test
scas
inc
mov
mov
sahf
je
xor
add
arpl
push
mov
dec
cld
push
push
sub
adcl
fdivrl
inc
sar
adc
leave
fidivrs
xchg
shll
lahf
lcall
rorb
mov
insb
dec
sti
and
loope
sbb
mov
icebp
pushf
mov
call
hlt
push
cmp
pop
pop
lret
cwtl
sbb
rcll
cmp
inc
jne
push
jne
sbb
iret
orb
push
iret
pop
inc
adc
cmc
add
outsb
insb
add
lds
mov
mov
xor
daa
aad
jg
repnz
insb
fwait
mov
and
add
icebp
xchg
inc
scas
adc
push
push
mov
mov
ja
jg
ret
cmp
push
xorl
repz
or
loope
std
adc
mov
sub
jmp
sbb
out
lahf
sarb
ret
mov
push
sub
dec
and
fisttps
insb
add
push
std
fisubl
sbb
jecxz
add
movsb
jp
push
adcl
adc
fldt
mov
jge
push
aaa
sub
push
push
push
ds
insb
enter
and
insb
icebp
dec
in
add
out
adc
out
out
imul
and
test
jo
pop
sub
insb
sbb
add
xchg
cmpsb
pushf
icebp
mov
leave
daa
cwtl
aad
movsb
je
mov
lock
dec
call
mov
ret
mov
sbb
dec
test
inc
mov
and
inc
dec
repnz
sub
dec
addr16
xor
sar
push
mov
inc
push
scas
mov
jp
cwtl
jle
sbb
or
mov
adc
pop
aaa
dec
dec
lds
mov
mov
mov
pop
xor
fstp
jmp
mov
stos
cmp
jne
repz
fs
repnz
out
es
pop
xchg
rclb
insl
fldcw
dec
pop
in
inc
fwait
out
add
jecxz
mov
js
fmulp
pusha
xchg
xor
push
or
and
inc
mov
dec
in
xor
cmc
in
push
int
imul
and
mov
mov
inc
int3
mov
insb
and
fidivrs
movsl
sub
pop
outsb
xorb
mov
dec
clc
mov
xorb
fidivrl
sbb
jecxz
repz
lock
lahf
enter
xchg
mov
xchg
mov
xor
int
cwtl
es
mov
mov
xor
or
shlb
mov
js
pop
jmp
dec
or
lock
push
sti
shlb
fimull
faddl
movsl
fcomps
cmp
and
add
add
xchg
push
std
loopne
lahf
lods
lock
jne
adc
or
stos
mov
or
inc
mov
add
push
in
and
fbstp
or
xchg
adc
adc
out
testl
cmc
jge
dec
fidivl
jo
rorb
idivl
jl
inc
mov
movsb
or
cmp
mov
daa
scas
clc
inc
or
dec
or
sbb
pop
jne
jmp
lret
loopne
mov
pop
pushf
and
mov
pop
movsb
testl
rcrb
pushf
mov
pop
sbb
mov
lret
inc
mov
inc
cltd
xchg
cmp
pop
movsl
cmp
frstor
dec
dec
mov
mov
imul
sbb
aam
and
out
push
jg
imul
loopne
loop
pop
cmp
xor
aas
jbe
shrl
cmc
movsl
js
inc
mov
aas
out
lds
cld
sbb
lock
add
fcoml
push
arpl
and
xchg
stc
mov
and
or
xorl
lods
inc
outsb
int
push
inc
es
or
jo
sbb
leave
repnz
lods
jno
in
pusha
lcall
movsl
add
xchg
popa
pop
test
mov
out
xor
mov
sub
xlat
icebp
mov
dec
repz
sti
cmpsb
mov
dec
stos
lret
or
xor
push
sbb
stc
cld
mov
sub
sub
xor
mov
adc
stc
jne
jle
movsl
mov
cltd
jns
out
push
iret
stos
inc
push
jle
lahf
xchg
add
adc
imul
xchg
fwait
iret
sbb
sti
mov
jge
inc
std
dec
repnz
adc
lret
sub
mov
arpl
cmp
stc
test
xchg
dec
mov
in
inc
or
pop
fwait
clc
mov
dec
popf
flds
xchg
cmp
mov
test
int
ret
mov
adc
rol
push
jo
and
mov
xchg
mov
jmp
scas
mov
bnd
negl
je
inc
adc
lods
mov
adc
stos
mov
aam
sbbl
test
and
ret
idivb
iret
cwtl
aas
aad
mov
xchg
inc
vphadddq
in
cmp
dec
sbb
or
cmp
or
and
xlat
xor
es
aad
movsb
cmp
aad
jb
rorl
rol
add
sbb
das
out
je
push
and
ljmp
xchg
sbb
and
pop
push
es
idivl
mov
insl
arpl
jmp
fs
imul
sar
es
xor
dec
sbb
lcall
dec
lds
das
jnp
test
push
pop
test
incb
jle
sbb
sbb
add
dec
jnp
add
mov
lret
imul
mov
into
jmp
sbb
adc
ja
testl
subl
jecxz
jmp
or
ljmp
mov
jmp
xchg
cmp
xchg
adc
jg
cwtl
jb
jl
lea
xor
or
push
sbb
push
fnstsw
or
pop
icebp
push
jno
dec
jmp
add
pushfw
push
shl
add
out
xchg
cmpsl
les
jnp
lret
push
dec
xlat
xor
pusha
lea
push
or
or
pop
inc
jmp
popf
fwait
movsl
and
pop
add
mov
mov
out
repnz
push
imul
xor
fnstenv
bound
inc
mov
scas
scas
decl
sub
or
mov
xchg
ss
cli
rolb
and
rcrl
popa
cmpsl
loop
arpl
loopne
cld
shll
lret
add
add
pop
pop
push
out
cli
xorb
cmpsl
and
lret
pop
lea
jbe
and
cmp
lret
jnp
gs
stc
xor
and
ret
mov
in
imul
jp
inc
fcmovnu
stos
pop
das
push
jp
xchg
sub
mov
mov
mov
xor
adc
insb
add
xchg
xchg
jb
xchg
fmul
mov
fstpl
out
lods
lcall
out
xchg
cld
push
mov
out
xor
jle
out
cs
push
sub
mov
and
sbb
mov
in
test
cmp
xchg
fists
lock
cli
or
adcb
test
pop
fisttps
mov
pop
xchg
push
ret
dec
pop
push
roll
pop
jl
hlt
mov
dec
test
dec
leave
add
leave
loope
orb
adc
mov
sub
cwtl
or
push
outsb
cltd
popa
cli
dec
push
mov
xchg
in
out
out
dec
adc
gs
stos
das
sti
pop
or
jnp
inc
mov
jl
aaa
mov
clc
sti
mov
into
cs
pop
scas
les
pop
mov
dec
pop
cmp
pop
mov
das
lea
jmp
push
pop
je
imul
mov
mov
incl
cmpsb
fdivl
jge
push
cmp
sbb
sti
dec
scas
pop
inc
hlt
and
lea
je
movsl
hlt
cmpsl
fldcw
sysenter
testb
rolb
xchg
or
pop
std
loopne
jge
mov
cmp
popa
sbb
loopne
inc
jbe
cmpsl
js
out
pushf
cmc
push
push
push
enter
enter
push
xor
cmc
ja
gs
in
cmp
ret
mov
bnd
es
jmp
jno,pt
pop
mov
and
xor
pop
call
mov
xor
es
inc
mov
fidivrl
inc
stc
mov
jnp
sbb
push
repnz
push
mov
sbb
pop
mov
mov
aad
dec
xchg
pop
mov
dec
out
shl
dec
jnp
cmp
pop
add
rcrl
popa
stc
push
test
out
push
ret
daa
aas
cmc
jne
pushf
sub
jb
or
jns
in
xor
les
xchg
mov
add
and
dec
sbb
enter
outsl
push
fnstcw
mov
xchg
mov
sbb
inc
jae
retw
fiadds
pop
and
adc
jecxz
iret
ss
les
lret
icebp
test
sub
mov
test
or
test
inc
mov
pushf
cld
fs
and
arpl
add
int
xorb
mov
mov
pop
push
jbe
leave
mov
or
scas
jns
int
inc
cmp
xchg
push
dec
cmp
cmp
dec
addr16
aam
xchg
jl
nop
test
shl
fwait
mov
inc
cmp
pop
jae
mov
push
pop
inc
aaa
in
ficomps
stc
rcll
aad
push
cwtd
fidivs
fs
jmp
mov
out
out
out
std
pop
mov
int3
nop
sub
movsb
mov
fidivl
and
xlat
push
mov
rolb
movsl
mov
int3
pop
mov
lcall
movsb
xlat
jae
push
gs
push
insl
mov
or
inc
xor
jnp
sti
dec
push
xchg
pusha
cs
xchg
test
push
js
out
mov
lock
les
adc
dec
add
add
xor
xchg
out
sbb
fwait
in
mov
sbb
mov
filds
aaa
jo
imull
jge
inc
sbb
divl
addb
mov
cwtl
inc
jo
sarl
jb
test
icebp
adc
jno
and
push
add
sub
fldcw
test
daa
cmp
pop
cmp
adcl
int3
inc
dec
bound
mov
jmp
xchg
cmp
mov
clc
test
mov
sub
jne
cmp
push
mov
data16
jg
daa
stos
sub
adc
stos
mov
les
pop
xchg
adc
cmp
dec
push
aas
cmp
add
leave
add
mov
and
arpl
dec
xchg
jae
jp
mov
outsb
loop
cmc
add
imul
fs
lods
cwtl
into
mov
pop
fcmovbe
xchg
stc
les
pop
jno
rolb
push
rorb
sbb
inc
pop
fs
push
add
sar
push
scas
jnp
out
mov
shrl
insb
cld
jae
xchg
in
in
sbb
lret
nop
jb
jo
into
cltd
ljmp
dec
ror
add
imull
adc
call
lea
pop
adc
cmp
lahf
sub
js
cmp
ret
jne
test
xor
leave
popf
dec
and
insl
pusha
rclb
add
xchg
bound
icebp
add
push
fwait
in
inc
jns
cmpsl
mov
shlb
bound
out
pusha
fnstcw
in
fucomi
negl
out
pop
mov
push
cli
push
aad
stc
jge
gs
out
mov
xchg
incb
shlb
cmp
ret
fwait
jns
push
repz
fisubs
cmp
lods
cmp
lods
test
ja
test
xchg
fucom
cmpsb
lret
ja
roll
sub
shlb
mov
aas
xor
xorl
inc
jns
ds
push
cmp
cmp
inc
test
mov
fstpl
aam
jnp
sbb
rol
xchg
adc
insl
mov
shr
dec
push
mov
dec
shrl
hlt
adc
xor
inc
in
mov
pop
cs
jmp
push
and
idivb
pop
lret
mov
dec
arpl
clc
dec
lret
out
mov
inc
sub
jg
jbe
xor
xor
ss
rolb
je
lea
mov
dec
xchg
mov
in
push
std
cmc
sub
mov
cld
out
aad
lret
in
mov
push
sub
mov
mov
fdivl
stos
xchg
sbb
out
mov
and
push
in
cmpsb
imul
in
or
push
ret
push
loop
mov
sti
sbb
adc
pushf
arpl
hlt
cmp
ret
out
jecxz
ficompl
outsb
sbb
loop
inc
jbe
jecxz
js
jg
xor
adc
mov
push
cmp
cmpsl
clc
sub
mov
shll
mov
push
pushf
pop
add
mov
cmp
test
ficoml
lods
push
lcall
cmpsb
in
ret
and
pop
inc
lcall
xchg
sub
cli
js
mov
gs
insl
mov
push
mov
repnz
or
push
cmp
or
out
pop
lcall
call
pop
sub
mov
inc
rorb
lcall
sbb
mov
in
stos
enter
stc
cli
imul
leave
dec
data16
jg
adc
ret
aas
push
inc
push
xchg
inc
lcall
insl
ud0
push
xlat
mov
es
and
pusha
test
lcall
popf
push
decl
or
add
mov
push
imul
ds
lret
lods
insb
pushf
andl
push
push
sahf
mov
xor
adc
ds
dec
repnz
filds
les
int3
iret
mov
xor
arpl
shl
jbe
ljmp
xor
mov
stos
mov
mov
push
pop
sub
or
mov
stc
aad
pop
aad
clc
push
push
cmpsl
jg
leave
xor
adc
add
fwait
push
jg
lods
mov
je
pop
mov
xor
lds
in
sbb
js
adc
xchg
push
sarb
mov
aaa
imulb
adc
inc
movl
or
jae
fnstenv
jg
push
xchg
cs
sti
ljmp
pop
lahf
fisubrl
pop
nop
jl
insl
xchg
mul
mov
aam
xor
ljmp
push
sub
notl
rcrl
in
dec
adc
into
add
addr16
icebp
cmp
jmp
insl
data16
cmp
clc
lds
and
addr16
add
inc
gs
xor
mov
cmp
lods
lret
dec
inc
push
mov
hlt
pand
or
stc
adc
movsl
lds
cmp
in
fsub
div
mov
fnstenv
hlt
aaa
insl
push
aaa
inc
add
in
rcll
lcall
mov
je
movsl
subb
lret
xchg
lcall
aam
jle
mov
jmp
sbb
pusha
in
cwtl
hlt
or
lds
xor
out
inc
bnd
inc
dec
and
cmp
and
ss
and
mov
das
inc
and
xlat
jle
push
fdivrs
movsl
and
leave
lcall
adc
fisubl
sub
xor
mov
jmp
pop
add
nop
or
fimuls
mov
adc
sbb
jbe
push
jnp
test
shrl
out
xor
jae
adc
outsl
lods
aaa
cmp
pushf
pop
addb
daa
mov
mov
mov
add
lahf
push
pop
jno
mov
popa
shrb
xor
dec
popa
adc
cs
in
sub
xchg
or
js
mov
mov
jns
sti
jns
stc
mov
das
repnz
inc
into
inc
push
rclb
in
and
fcmovne
fprem1
je
mov
xor
in
lret
mov
dec
gs
pop
add
bound
mov
ret
lea
je
clc
lahf
ljmp
outsl
movl
dec
ret
mov
lods
mov
into
push
adc
xlat
fidivrs
jo
and
outsl
and
push
cmpsl
hlt
push
mov
popa
lds
add
jae
cwtl
out
and
add
bound
jl
loopne
dec
lds
add
popa
pop
adc
fnsave
sub
xor
repz
push
push
lret
lock
mov
xchg
adc
mov
lahf
out
pop
jg
and
push
lods
sub
fsub
cmp
xor
ret
cltd
and
clc
cmpsl
lret
pop
sub
dec
mov
mov
dec
xchg
xlat
outsb
cmp
bound
xor
decb
shrb
aas
fsubl
jne
loope
daa
mov
dec
inc
push
push
test
imul
mov
rol
add
lea
pop
sarl
adc
adc
cli
lds
daa
outsb
push
orb
or
add
push
add
sarl
sahf
mov
fs
fsub
xchg
adc
push
lret
addl
xorb
nop
adc
rorb
mov
dec
imul
stc
xorl
add
add
repz
mov
out
lods
daa
fstp
cmp
cli
mov
jl
test
adc
aam
ljmp
xchg
movsb
lahf
add
lcall
pop
stos
repnz
test
push
xor
jns
pop
xor
adc
rcr
movsb
sub
cmpsb
rol
imul
subl
stos
mov
dec
jmp
sub
insl
scas
add
mov
dec
mov
xchg
xchg
lret
cmpb
jnp
js
cmc
push
xor
imul
mov
and
xor
test
pushf
jp
push
or
out
xchg
jo
push
sbb
mov
subb
rol
div
jg
or
mov
in
pop
push
lea
lock
sub
rcrl
fistpl
sub
sbb
lea
add
adc
fstp
test
jo
cmp
xor
mov
mov
mov
mov
das
gs
std
mov
pop
adc
test
stos
jmp
or
pop
push
or
inc
dec
sarb
loop
roll
data16
push
iret
popf
incb
pop
xchg
leave
jnp
scas
xor
test
xchg
sub
divl
jge
in
mov
lods
in
xor
leave
pop
jg
inc
daa
rcl
cmp
sbb
lods
sbb
mov
pop
add
loope
leave
cmpsb
mov
pop
add
adc
arpl
xchg
int3
inc
sbb
imul
jno
cmc
mov
sti
fstps
in
inc
jl
sarl
add
sti
ja
ss
cmp
arpl
cmp
es
shlb
mov
cmpsb
cmpsl
dec
xchg
fldl
mov
imul
mov
push
int3
add
mov
outsl
jnp
push
mov
iret
mov
lock
pop
dec
pusha
jb
shl
pushf
filds
jge
mov
mov
dec
jns
pop
or
cmp
pop
jl
pop
fwait
cs
loop
lds
les
popa
test
pop
fsubr
inc
imul
adc
pushf
cmp
sbb
push
outsb
call
addl
pop
mov
pop
mov
pop
dec
mov
inc
out
shlb
lret
int
in
loopne
in
jp
mov
ss
jno
push
dec
add
popa
bound
push
add
pop
test
stc
xchg
mov
aad
punpckldq
insl
push
add
cwtl
repz
std
int3
repz
repz
pop
dec
sub
cmpsb
pop
mov
add
jo
inc
and
xor
mov
mov
mov
push
sub
mov
out
repnz
mov
in
testl
sub
insl
bound
or
jecxz
sti
imul
out
es
pop
mov
dec
inc
xorb
loop
jns
fimull
adc
test
sahf
imul
push
int3
dec
test
pop
xor
sub
fmuls
jae
cmpsl
mov
shl
testb
sbb
adc
scas
xor
jmp
dec
mov
jmp
ja
scas
xchg
mov
mov
lret
shl
or
xchg
mov
mov
jbe
lods
jmp
pop
cwtl
xchg
xor
mov
mov
sub
push
repz
ljmp
jecxz
xor
lods
inc
aaa
scas
negl
push
mov
lock
add
gs
ja
std
jo
xor
and
mov
pop
or
incl
xor
cli
push
bound
push
scas
add
xchg
mov
push
jb
shlb
sar
in
daa
outsb
xchg
inc
xor
add
adc
and
lds
imul
push
jg
test
jl
xchg
nop
in
jb
rcll
sbb
lods
mov
jo
faddl
push
in
push
xchg
aas
add
mov
mov
add
leave
adc
icebp
xor
sti
movsl
rcrl
add
movsb
xchg
shrl
jl
dec
sarb
dec
cmpl
pop
out
jmp
mov
push
je
shll
mov
inc
sub
shrb
lret
sbb
dec
cld
push
push
adc
adc
adc
int
icebp
inc
scas
and
out
and
push
cmp
xchg
and
sahf
aaa
add
push
mov
daa
movsl
aaa
push
in
sub
dec
js
sti
add
movsb
pop
mov
push
adc
add
push
xlat
das
icebp
xor
inc
jbe
or
sbb
les
cmp
mov
xchg
add
push
jg
cmp
test
sti
jecxz
enter
cmp
lahf
sbb
scas
fisttpll
data16
sbb
addl
subl
dec
add
or
push
adc
mov
cltd
mov
stos
jge
pop
daa
sub
out
pop
add
outsl
inc
pop
sub
test
push
mov
hlt
rorb
inc
arpl
fdivl
mov
lret
scas
loop
in
and
lcall
adc
gs
insb
lret
ja
mov
aas
lret
mov
xchg
pop
mov
cmp
repz
loopne
ret
leave
push
sbb
cmp
fldt
cmp
adc
mov
jb
cmp
dec
mov
push
fsubl
adc
mov
scas
adc
sub
insb
ret
ss
xor
lcall
ret
stc
aas
dec
or
mov
and
icebp
sub
je
and
in
cmpsb
add
sub
mov
and
hlt
jb
xchg
pop
adc
mov
test
movsl
lock
xorl
iret
roll
roll
rclb
mov
jle
mov
lds
icebp
jmp
push
movsl
sarl
push
repz
push
ds
call
js
mov
adc
mov
mov
xor
imulb
adc
adc
cmp
cmpsb
dec
call
mov
outsl
outsl
push
scas
shlb
push
outsb
sub
cmp
and
mov
fs
jle
jmp
ss
int3
jecxz
jne
push
sarl
and
setbe
gs
aam
pushf
clc
and
add
in
loop
out
jge
jle
lods
insl
roll
js
aaa
cmp
mov
dec
pop
add
mov
js
inc
gs
lods
fldenv
outsb
push
pusha
stc
pop
cmp
fbld
or
mov
inc
jns
xchg
xchg
pop
lods
in
jns
pop
ficompl
push
ds
popa
jl
push
icebp
clc
or
mov
testl
jmp
rcrb
fldl
movsl
push
xchg
and
sti
ret
rol
mov
in
test
cmpsb
mov
xchg
aas
adc
inc
adcb
test
adc
loop
jmp
or
and
nop
dec
xchg
loop
jo
outsb
lock
mov
lret
popf
dec
rorb
lret
xor
repnz
je
aaa
and
outsl
loope
and
aas
and
rolb
rolb
push
stc
or
mov
sbb
cltd
rclb
and
mov
lahf
xor
push
fists
add
imull
adc
xor
mov
or
lea
jo
imul
and
outsb
nop
in
sti
xchg
cltd
mov
add
in
jne
mov
ret
inc
outsb
jae
fistpll
shll
enter
cmpsl
ss
shlb
add
movsl
daa
loopne
push
enter
sbb
enter
dec
sahf
fs
or
nop
mov
sub
call
mov
mov
sub
and
and
cld
dec
jns
lock
push
ret
loope
loope
xchg
test
cwtl
leave
aad
daa
xchg
pop
push
adc
push
push
clc
pop
sub
shrb
inc
or
dec
push
mov
push
jne
jge
leave
rcr
leave
pop
mov
sti
jle
sbb
pop
cmp
mov
rcr
iret
insb
push
mov
mov
in
xchg
adc
mov
push
xchg
cmc
push
ljmp
dec
call
and
rcl
es
testl
fiadds
mov
and
add
pop
push
std
mov
dec
mov
sbb
js
scas
xorl
enter
mov
out
cmpsl
dec
and
mov
mov
cmpsb
xchg
ficoms
cli
mov
bound
fmull
sub
dec
sub
shll
pop
call
lret
mov
lock
outsl
jl
test
cmp
ffreep
hlt
repnz
mov
or
dec
ficomps
push
inc
gs
xor
lahf
push
jmp
movsl
sbb
sarb
shr
pop
int3
gs
mov
jecxz
inc
jge
shlb
iret
call
adc
xchg
scas
pop
ss
lods
test
lods
data16
xchg
add
sbb
jno
sub
andb
js
pop
fsubrs
outsb
dec
xor
inc
cmp
int
into
push
sahf
cmp
dec
cmp
iret
iret
stos
mov
sarl
enter
adcl
mov
inc
outsl
cmp
movsb
cwtl
mov
sbb
cs
mov
and
mov
jmp
into
pushf
ljmp
repz
add
shl
in
aam
ds
xor
popf
lock
xchg
sbb
in
and
xor
or
test
xchg
mov
call
xchg
cmc
dec
popf
pop
scas
inc
xor
aam
fstpt
stc
in
mov
out
mov
jecxz
js
lods
test
pop
mov
test
pop
icebp
push
sbb
jne
lods
into
xchg
jmp
lret
xchg
repz
ror
push
out
pop
mov
mov
daa
and
sbb
scas
cltd
pushl
adc
mov
fcoms
lods
sbb
test
sarb
add
mov
rolb
mov
dec
xchg
xor
add
test
in
cmp
outsl
cwtl
xchg
insl
lcall
sub
outsb
hlt
imul
mov
push
orl
mov
mov
int3
mov
fcmovbe
movsb
pushf
pusha
mov
bound
aaa
dec
cmc
jae
in
les
sub
mov
inc
xchg
sbb
mov
pop
ss
leave
cmp
xchg
movsb
les
pop
push
rolb
push
in
aam
outsl
mov
add
test
mov
dec
jo
inc
stos
mov
les
cmp
xor
fnsave
push
push
out
or
lods
xchg
lods
push
stos
inc
ffree
xor
stos
and
inc
jbe
xor
push
jle
pop
mov
pop
int
popf
jmp
jle
sti
add
inc
add
mov
jge
test
insl
and
je
test
repnz
push
ds
lods
sub
cli
bound
pop
xor
sub
add
xor
aaa
repz
aaa
pop
loop
arpl
adc
mov
adc
jge
xchg
dec
jg
cmp
push
cmp
push
call
mov
loopne
cmp
or
repnz
hlt
push
xchg
adc
cs
cmpsl
mov
lahf
std
cmp
pop
xlat
leave
mov
mov
cld
adc
or
mov
es
xor
out
jb
pop
icebp
mov
cmp
xchg
pop
ficoml
mov
imul
sub
aam
or
cmp
xorb
lret
sbb
mov
fs
push
xchg
cmp
das
cwtl
cltd
aam
in
xor
stos
adcb
fsubrs
sub
int3
jge
xor
movsb
int3
push
adc
push
sbb
push
dec
cmp
sub
sbb
inc
jp
mov
xchg
in
aad
pushf
inc
dec
xchg
cmp
push
into
clc
insb
push
adc
and
je
loopne
and
lock
lods
adc
or
inc
ret
push
pushf
hlt
push
xor
fs
mov
add
jbe
adc
sub
or
aam
lock
hlt
in
jnp
test
sti
mov
aas
aam
cmp
sbb
mov
jne
repz
jl
adcb
in
xor
dec
shrl
repnz
inc
jecxz
xlat
fucomip
sahf
cmc
jecxz
outsb
and
xor
bound
adc
mov
cli
sub
idivb
cmc
out
aam
cwtl
rcrl
int
fstpt
push
push
cmp
ret
hlt
add
sarb
pop
rcrl
dec
push
xchg
test
sub
push
and
xchg
jecxz
loopne
call
pop
rcll
mov
lret
jbe
imul
loope
jle
cmp
in
adc
xorl
pop
or
sbb
cmpl
sbb
pop
pop
xor
cmp
mov
fbld
mov
pop
dec
out
outsl
xor
cld
push
sbb
popf
popw
adc
cs
ljmp
cmpsl
adc
jnp
xchg
inc
add
jbe
test
in
jbe
in
lock
inc
std
lea
repnz
inc
ret
int
shlb
xor
std
aad
adc
and
dec
add
movsb
aad
clc
repz
leave
lcall
jne
std
inc
imul
into
imul
rep
in
or
je
xchg
cmp
mov
jnp
jmp
mov
or
dec
sub
daa
enter
mov
xor
adc
ss
in
stc
cmp
inc
sarl
lods
mov
stos
cmc
into
insl
pop
fwait
pushf
daa
mov
mov
dec
ret
js
fwait
bound
add
les
mov
dec
mov
inc
jmp
lea
inc
mov
int
xor
inc
dec
inc
push
mov
jne
test
insl
sbb
mov
sbb
fstpt
and
dec
push
pop
in
jb
and
add
mov
imul
cmp
sbb
jo
movsl
mov
aad
sbb
push
pop
hlt
add
cmp
aad
ret
flds
inc
pop
out
lock
cli
out
inc
in
sti
dec
pop
repz
es
jmp
leave
jnp
int3
daa
adc
mov
roll
jbe
jmp
cmp
or
xchg
js
xchg
dec
pop
or
jg
xor
xchg
js
adc
jp
sahf
mov
out
sub
out
call
aaa
addr16
mov
test
lea
xchg
or
add
sbb
repnz
pop
test
cld
mov
add
bound
push
mov
sub
std
mov
adc
mov
out
lret
fcmovb
mov
pop
and
mov
sar
jae
sub
jbe
pop
out
mov
xchg
push
out
rcrl
xchg
dec
into
repnz
cwtl
jae
sub
iret
sbb
pop
add
js
aas
cmpsl
jmp
mov
popf
push
adc
test
rcll
lret
stos
into
pop
movsb
jb
popf
pop
push
gs
sbb
pusha
inc
es
fidivrs
pop
mov
mov
adc
stos
iret
jge
out
adc
add
repz
push
call
dec
adc
ds
pop
and
ret
mov
pop
mov
mov
cmpsl
stc
loope
js
arpl
cmp
das
inc
dec
adc
out
inc
push
sub
or
loope
xchg
pop
dec
push
ds
inc
lret
adc
das
or
stos
or
adc
and
dec
mov
push
daa
mov
jae
fnstcw
aad
jo
xchg
pusha
inc
pop
inc
jbe
lahf
adc
fdivrs
push
lahf
insb
lahf
xchg
fbstp
or
push
mov
loop
mov
mov
data16
pop
push
cmp
lcall
add
push
iret
lock
add
lcall
jecxz
jo
int
push
mov
les
sub
imul
xorb
cld
popf
test
xchg
stos
mov
xchg
sbb
enter
not
push
stos
dec
cs
test
push
fiadds
mov
shrl
inc
mov
pop
jno
xchg
icebp
jge
das
jmp
pop
push
add
xlat
jecxz
ficompl
mov
test
mov
mov
leave
lahf
popf
testb
pop
pop
dec
jl
cmp
divl
xor
add
in
or
insl
xor
fcoml
fidivrl
mov
xchg
loop
nop
fidivrl
xor
rclb
shll
lahf
xor
insb
jmp
sub
pop
lods
sahf
add
xchg
aas
jmp
or
and
dec
fnstcw
jmp
mov
testb
leave
cmpsl
xchg
fisttpl
cli
jno
mov
lret
xchg
out
pop
into
inc
movsl
push
mov
in
jle
xchg
rolb
pop
scas
aas
loopne
push
stc
jmp
adc
fcmovnbe
sub
jo
push
jnp
iret
inc
loop
ficomps
scas
adc
lods
cltd
mov
adc
xor
std
add
and
cmp
dec
mov
jge
hlt
or
leave
fs
jmp
outsl
inc
inc
lds
testl
jge
or
mov
cmpl
lahf
mov
popf
jl
mov
push
sahf
jo
add
jecxz
cmpsb
or
stc
arpl
loopne
stos
adc
in
data16
repz
lock
inc
dec
bound
lods
push
cwtl
lods
cwtl
add
adc
pop
push
js
test
jae
rcl
jne
pushf
ljmp
test
dec
mov
inc
cwtl
inc
mov
test
dec
adc
call
mov
pop
outsl
adc
dec
mov
sarb
popl
xlat
sub
push
jmp
test
mov
lods
sub
fsubrs
cmp
andb
xor
sub
pop
repnz
add
loope
shl
mov
insb
cmp
out
sbb
cli
add
insb
push
leave
mov
iret
inc
xchg
sbb
xchg
bsf
mov
or
ret
adc
pop
jns
dec
dec
sub
sar
sbb
lods
mov
sbb
cmp
loopne
popa
or
push
outsl
clc
mov
push
sarb
mov
shr
adc
scas
jp
dec
jo
cli
inc
xchg
popl
mov
push
mov
iret
ds
movsb
ja
sub
and
xchg
sbbl
cmpsl
sbb
push
rclb
out
sbb
and
stc
lahf
mov
hlt
adc
mov
jecxz
in
clc
addr16
add
iret
js
push
dec
inc
movsl
das
mov
ds
clc
pop
pop
iret
pop
sub
ja
or
add
jmp
mov
push
jmp
cld
adc
sub
pop
shll
sti
mov
into
pop
sbb
nop
mov
pop
cmpsb
fwait
out
repnz
pop
movsl
test
mov
ja
inc
xchg
ss
daa
xchg
sub
push
xor
xor
jl
inc
bound
enter
xlat
adc
sbb
aaa
test
das
sahf
fidivs
sbb
insl
jae
xor
sub
out
fcmovu
dec
xlat
jmp
inc
add
sbb
ds
movsb
pop
xchg
jno
outsl
lods
imul
dec
push
cltd
cmp
and
xchg
mov
xchg
mov
icebp
jmp
mov
mov
les
mov
jbe
pop
push
in
sbb
fsubrl
pop
movhps
mov
add
test
notb
sub
add
sbb
xlat
outsl
push
mov
lret
sbb
testl
fsubrs
shl
or
xlat
sub
pop
sbb
stc
leave
cmp
clc
pop
popa
inc
jecxz
cmp
sub
cs
add
inc
sar
xor
es
add
xor
jno
mov
sub
push
push
in
mov
imul
xchg
mov
cmp
lods
popa
mov
aaa
faddp
xchg
in
inc
pop
imul
imull
mov
incl
es
incb
xchg
fsubs
not
xchg
rcrb
dec
mov
jg
or
lret
push
aaa
std
cmpsl
imul
std
pop
shrb
addr16
scas
bound
xor
add
mov
push
mov
call
out
mov
xor
adc
insl
js
stos
add
mov
pop
jae
imul
fisubl
fisubrs
aaa
idivb
and
scas
jne
mov
dec
adc
jo
je
fidivrs
sbb
and
std
les
and
vmovddup
jae
mov
mov
cmpsl
add
popf
cmpl
inc
and
pop
xor
repz
movsl
mov
test
xor
cmp
fs
pop
adcb
mov
mov
ss
sub
loop
pop
or
cmp
lahf
ljmp
cmpsb
loopne
push
ret
daa
sbb
jl
lcall
xlat
clc
mov
hlt
dec
mov
mov
xchg
jnp
inc
call
loope
sub
lea
pop
and
push
popa
jl
movlhps
callw
aad
call
subl
cmp
int3
lea
mov
cwtl
sti
fdivrl
sub
rcrl
inc
mov
std
mov
jne
xchg
inc
cmpl
int
aam
sbb
sti
outsl
xchg
rclb
stc
in
mov
adc
jns
add
out
les
aad
pop
negl
xchg
nop
iret
pop
pushf
and
popf
or
add
mov
aam
scas
repz
pop
aam
push
and
outsb
jb
dec
stc
mov
or
repz
das
les
stc
mov
xchg
cmp
fisttps
inc
xor
mov
push
jo
inc
sbb
rclb
and
xchg
scas
roll
inc
push
sbb
sub
push
xor
cmc
fnstsw
test
aad
loop
xchg
fimuls
outsb
push
in
mov
shrl
add
and
xor
call
out
in
cmpsl
xor
das
aas
daa
cmpsl
cli
mov
mov
push
subb
add
inc
cmp
aaa
mov
sub
repnz
or
scas
adc
rcrb
pop
jbe
sub
std
sbb
out
clc
adc
in
mov
ljmp
jb
je
jg
aam
mov
sub
leave
test
je
mov
stos
cltd
in
andps
mov
movsl
lds
xchg
imul
orl
jae
jmp
ds
iret
aaa
sub
rorl
sbb
push
pop
in
mov
das
outsl
lods
dec
mov
leave
mov
sbb
loop
push
pusha
mov
shrb
adc
pop
xchg
std
nop
adcb
call
xchg
jae
cmp
inc
pusha
adc
ljmp
adc
cli
cmp
push
sub
and
mov
add
jge
push
mov
cmc
fbld
mov
jne
push
push
std
or
ss
jmp
or
dec
pop
shl
xchg
aas
icebp
push
es
loope
cmc
pop
in
xchg
xor
inc
test
lea
sbb
mov
adc
mov
outsb
mov
pop
jle
cli
test
aas
add
jge
mov
xchg
xchg
jecxz
jg
arpl
sub
in
mov
jno
pop
out
repnz
fwait
mov
push
xorb
pushf
cmp
pop
cltd
ret
pop
cmp
inc
out
jno
sub
inc
popl
xlat
mov
and
inc
dec
sub
xchg
sub
and
push
andb
bound
xor
fcmovnb
icebp
mov
or
push
div
lods
sbb
cmp
jno
dec
adc
mov
fsubl
add
dec
sbb
dec
test
pop
or
scas
lds
mov
push
dec
cld
aam
stc
hlt
hlt
movb
fadds
inc
cs
jo
imul
pushf
cmp
movsl
fdivl
or
push
mov
sbb
add
out
mov
aaa
repz
pop
xchg
cmp
adc
dec
call
sti
in
jp
test
lods
insb
nop
xor
aas
insb
sbb
add
inc
xor
dec
jo
cmp
arpl
popa
dec
and
xor
lahf
fsubrs
or
loope
pop
push
and
cmp
adc
and
or
add
repnz
int
imul
ljmp
inc
push
adc
sbb
lea
or
jl
mov
nop
inc
loope
and
sub
shlb
mov
test
mov
mov
das
mov
mov
and
adcb
lods
test
enter
data16
mull
nop
jo
xlat
mov
test
cmc
insb
scas
shr
faddp
loop
out
fst
bt
mull
ret
jbe
push
out
jo
dec
pushf
jle
pusha
add
pop
mov
mov
js
sub
jecxz
and
mov
mov
xchg
insl
scas
push
out
adc
cmpsl
bnd
xchg
aas
sbb
scas
adc
ljmp
call
sbb
xor
xor
js
js
test
inc
ja
leave
pushf
xor
outsb
and
mov
push
insl
data16
stc
adc
jle
jb
insb
adc
xor
lods
dec
jnp
add
cmp
xlat
jb
out
xor
jns
mov
cld
xor
aam
in
jg
sub
inc
cmp
and
rol
out
pop
cs
pop
or
decb
jmp
pusha
cltd
ja
aaa
cmp
mov
inc
ffree
rcll
xchg
push
rcrl
sahf
cmp
lahf
imul
loope
lea
insl
mov
sub
ud0
loope
sub
insl
sbb
hlt
xchg
adc
cltd
lods
out
cmpsb
pushf
mov
mov
sbb
fisttpll
push
outsl
push
int
pop
fcomps
xchg
sub
adc
dec
dec
mov
cwtl
rorb
scas
cli
adcb
mov
push
pop
lret
jp
stos
out
jne
mov
inc
pop
imul
repnz
sti
xor
or
pop
dec
rcrl
push
push
mov
jae
mov
loop
outsb
roll
xor
orb
int3
fisttpll
dec
add
in
xor
sub
mov
bound
dec
add
pop
repz
es
push
lods
push
push
sub
test
mov
xor
test
xchg
lsl
mov
mov
clc
pop
adc
divb
stos
cmp
mov
lret
out
in
call
cmpsb
insb
ret
jb
lret
int
in
in
inc
cmp
iret
orb
jnp
sarl
mov
xchg
insb
imul
ljmp
mov
jno
cmc
bound
mov
xor
orl
jb
leave
repnz
popa
mov
inc
mov
fdivs
push
int
mov
mov
movsb
xchg
or
xchg
mov
sbb
scas
dec
pop
mov
add
mov
subl
mov
jmp
pop
mov
nop
je
mov
mov
popf
hlt
aaa
dec
daa
adc
xchg
cmp
sub
inc
or
cwtl
lock
mov
xchg
cmpsb
lahf
cli
pop
jnp
jb
sbb
ljmp
iret
std
in
sub
pop
call
lock
sub
sub
nop
mov
fcoms
lret
nop
sarl
xor
test
into
adc
jb
and
in
jle
pop
adc
xchg
pop
xor
jne
adc
stos
in
push
ljmp
jb
stos
aam
hlt
inc
xchg
pop
pop
jb
cmp
jl
pop
push
sbb
sbb
mov
imul
lds
push
add
mov
cs
jmp
mov
test
fildl
dec
add
inc
pusha
jge
je
inc
lock
inc
push
mov
push
mov
mov
lods
dec
mov
dec
loopne
aam
dec
cmc
pop
pop
repnz
mov
jg
adc
cld
cwtl
jge
push
mov
push
mov
sbb
mov
loop
push
out
inc
xchg
fsts
jmp
out
mov
lods
insl
loope
mov
mov
add
shl
mov
fcmovnbe
cli
cmp
int
pop
fidivrs
push
add
nop
imul
pop
mov
xor
xlat
int3
js
mov
adc
add
andb
je
cmp
xchg
fisubl
or
cwtl
ds
es
mov
jne
xchg
out
testb
cmp
mov
add
out
push
inc
scas
xor
enter
inc
and
jle
pusha
nop
call
add
ja
inc
nop
xor
mov
int
dec
stos
sbb
sbb
pop
and
loope
dec
call
dec
push
xor
popa
stos
xchg
or
lods
mov
and
cmp
mov
lahf
outsl
mull
ds
mov
outsl
push
rcr
or
filds
sar
dec
in
test
cwtl
outsb
sbb
mov
xlat
outsl
das
addb
sbb
insb
sub
mov
jp
or
loopne
fiaddl
popf
sub
adc
outsb
lea
sbb
stos
es
push
sbbl
mov
push
ljmp
imul
jbe
lea
cltd
push
negb
mov
iret
ljmp
in
inc
xor
ret
xchg
sbbl
mov
ljmp
mov
and
sub
std
in
xlat
xchg
lods
sbb
pushf
add
mov
push
mov
repnz
andb
stos
fwait
push
push
mov
in
xchg
imul
push
mov
jg
and
fidivrl
stos
outsl
cmp
mov
leave
imul
jecxz
dec
shll
ret
pop
in
pop
aaa
js
inc
ds
fldt
or
rclb
pop
imul
testl
into
adc
loopne
and
incl
fiadds
or
mov
lds
xchg
and
or
sub
ljmp
xor
movsb
pop
sbb
push
adc
movsl
pop
sub
mov
add
adc
xor
mov
xor
fisttpl
or
ret
xlat
imul
and
loop
pop
aad
push
mov
fidivl
rclb
jl
mov
test
mov
and
mov
ret
cmp
shrd
imul
mov
dec
cmp
fpatan
mov
or
mov
and
fildll
inc
mov
push
jb
jl
int3
fildl
aaa
adc
sub
sbb
xchg
dec
inc
lock
gs
imul
fcmovnbe
push
dec
aas
scas
inc
add
jle
adc
aas
dec
jae
or
enter
lahf
push
push
inc
pop
add
add
sub
call
jge
fs
add
scas
sbb
std
inc
or
test
shlb
jge
inc
std
data16
mov
push
fwait
sub
pop
mov
mov
and
dec
ret
inc
xor
cmc
dec
insb
dec
push
shr
add
pushf
in
or
rcr
push
insb
xor
stos
sub
xchg
hlt
in
jae
decl
xor
lock
xor
mov
sub
lret
sub
cld
xchg
push
xchg
push
loop
loope
pop
scas
adc
fidivrs
lcall
sahf
adc
xor
mov
add
ja
add
data16
mov
clc
ret
inc
inc
or
mov
stos
cmp
xor
negb
nop
rcl
js
das
xor
cmp
aas
dec
andb
bound
ja
dec
leave
and
sub
in
jecxz
push
ror
and
orb
pop
ja
aaa
jp
push
adc
xchg
pop
lds
fisubrl
das
jno
in
xor
popa
cli
push
mov
lahf
mov
and
stos
bound
in
jo
cmp
sar
jmp
xchg
jbe
mov
inc
fimull
cmpsl
es
stos
fcoml
mov
and
lret
inc
out
inc
xchg
icebp
mov
repnz
cmp
andb
std
call
and
push
pop
or
rcrl
in
jns
jp
scas
dec
dec
adc
xlat
mov
imulb
and
xchg
inc
xor
daa
xor
sbb
sti
push
mov
ret
inc
sub
fistps
cwtl
ss
insl
aam
in
xchg
cmp
leave
push
inc
in
int
std
mov
mov
lahf
rorb
dec
mov
call
dec
push
or
mov
push
push
leave
imul
out
sub
dec
cmp
aad
bound
imul
stos
push
movsl
mov
lcall
shrl
shl
rol
dec
dec
jmp
inc
sbb
jge
dec
loop
mov
fwait
inc
inc
and
roll
jae
nop
jbe
xor
lods
jle
daa
mov
adc
je
sub
mov
xchg
lds
pop
push
push
mov
pop
or
jl
js
repnz
xlat
loopne
mov
mov
adc
xchg
in
pushf
dec
outsb
xchg
push
push
divl
dec
out
dec
lcall
aad
sbb
stos
or
imul
bound
sub
popf
repnz
add
dec
and
shlb
les
sbb
ds
bound
outsl
pop
xchg
mov
test
je
lods
pop
mov
cs
aas
mov
jle
test
imul
imul
mov
das
js
xchg
and
lret
adc
loop
xorb
sbb
popf
fisttpl
cmp
cli
nop
sub
int3
out
fnstenv
stc
lods
pop
fiadds
faddl
sbb
mov
cmp
sbb
insb
sarb
sbb
mov
aad
ljmp
xchg
rcl
xchg
fisttps
or
mov
fimuls
cmpsl
dec
sbb
sub
or
mov
lea
sub
adc
push
jl
adc
int3
testl
or
pop
lods
add
cld
cwtl
fnsave
mov
sbb
push
xchg
push
lods
mov
mov
enter
mov
sar
xor
aad
dec
sbb
mov
lea
pop
stc
jae
cmpsl
mov
out
sbb
mov
aas
mov
dec
ljmp
cmc
jno
or
adc
test
gs
xchg
data16
ljmp
ja
call
push
test
push
popa
xor
mov
out
push
rcll
mov
xor
mov
push
adc
rcrl
dec
icebp
dec
jb
xlat
mov
ds
add
sbb
mov
xor
or
int3
or
jnp
shll
fwait
pop
pop
push
add
gs
and
dec
add
jg
cmpsb
jl
into
stos
iret
adc
or
xor
cltd
adc
cmpsb
fidivl
test
sub
mov
lods
push
out
and
pop
add
mov
jns
fadd
cmp
andl
outsb
jns
push
popf
mov
sbbb
mov
test
movsl
icebp
inc
cld
aam
and
pop
adc
lret
inc
in
jnp
jne
adcb
aas
hlt
rcrl
dec
pop
mov
mov
insb
lock
or
fdivrs
xchg
sub
lock
cmp
mov
addr16
fists
mov
push
push
ficoms
test
mov
push
dec
test
clc
or
test
dec
xchg
setge
and
in
mov
shlb
xchg
negb
int3
fsubrp
out
mov
or
mov
test
push
pop
leave
adc
fisubl
pop
stos
stos
dec
jge
insb
mov
pop
outsb
lret
int3
test
cltd
mov
addr16
test
enter
jns
xor
add
sub
pop
fiadds
mov
ds
push
sub
fstp
xchg
or
lret
sahf
shl
rcll
sbb
dec
decl
cmp
pop
loope
ret
adc
push
push
in
sahf
dec
popl
int3
and
in
adc
push
std
mov
cmp
out
xor
jg
icebp
and
fcmovnb
lea
mov
xchg
mov
jle
xor
sub
lret
inc
insl
mov
enter
enter
mov
cli
stos
pop
and
les
lods
stos
adcl
outsb
dec
shrl
rcr
inc
cmp
xchg
in
insl
inc
stos
cmove
cmpsl
ljmp
inc
sahf
mov
push
mov
mov
adc
int
pop
fs
and
xor
aad
enter
lret
cld
pop
dec
stos
jge
je
movsb
cmp
out
fisttpll
lock
sbb
xor
push
fwait
jbe
push
inc
insb
fdivs
push
ret
lret
imul
or
inc
mov
sub
lret
adcl
jg
js
les
adc
in
add
das
test
enter
add
add
jbe
push
dec
in
pop
xor
mov
fisubrl
cmp
dec
mov
mov
push
das
bound
stc
mov
xchg
sub
adc
pop
pop
or
inc
sub
push
pop
add
push
inc
xchg
cld
fnstsw
or
daa
cmovle
in
mov
addr16
lret
bound
xor
xchg
mov
xor
xchg
push
jns
push
dec
cli
mov
icebp
stos
cmp
jb
sbb
add
xchg
jae
bswap
lods
mov
or
add
sbb
fcoml
je
mov
cltd
std
js
push
mov
dec
cmc
test
inc
dec
inc
xchg
call
shlb
dec
std
in
repnz
cmp
aaa
inc
fs
lods
pop
add
hlt
mov
push
jl
sbbl
mov
movsl
cwtl
lcall
sbbl
mov
xchg
and
test
subb
push
inc
and
adc
or
xchg
out
adc
jbe
push
shl
loop
mov
cli
aas
stc
cmpsb
cmp
test
aaa
mov
push
or
and
lods
push
jmp
pop
sbb
out
movsl
insb
movsl
jle
push
pop
mov
cs
ficompl
dec
or
mov
dec
ret
mov
std
imul
mov
jne
push
hlt
cmp
mov
rorl
mov
lods
jno
dec
or
cmp
adc
push
dec
das
pop
ja
addb
movsl
rol
rorl
movsb
lret
fnstenv
inc
cmpsl
out
xchg
or
and
data16
jl
jnp
sahf
cmp
mov
in
out
cld
or
jb
cmpl
jg
inc
sub
xor
scas
cltd
sbb
test
add
into
popf
sub
sub
jno
into
jns
adc
popa
jo
sbb
test
inc
pop
dec
fstps
fs
out
fadd
fcomps
in
adc
pushf
mov
adc
push
or
mov
push
out
or
call
and
ret
in
ret
ficomps
rorb
sbb
sti
dec
pop
push
ss
cld
jge
loope
pop
aas
lret
pop
jo
pop
aaa
jb
cmp
jb
fdivs
xor
lret
pop
in
jecxz
lahf
ljmp
lcall
jg
push
mulb
adc
addr16
jmp
xchg
mov
push
add
inc
inc
mov
push
sub
incb
cltd
das
or
jge
sub
and
mov
xchg
ret
mov
and
or
hlt
adc
push
xchg
and
ror
ret
cld
dec
push
in
cmp
mov
aam
xchg
mov
stos
cmpsb
mov
adc
and
sahf
sbb
ss
mov
mov
fmull
push
mov
shll
int3
push
jl
or
jmp
jb
or
sbb
setl
aad
jns
or
jb
sub
and
hlt
dec
push
jp
imul
test
mov
adc
aas
or
cmpsl
adc
neg
pop
addr16
out
insl
jle
jnp
dec
ror
xchg
stos
sbbb
and
test
sbb
sub
sbb
mov
pop
outsl
sub
pop
lea
jmp
cwtl
adc
adc
gs
xchg
int3
call
sbb
cmp
inc
pop
xor
ja
jmp
cs
adc
pop
cmp
mov
divl
leave
pop
push
inc
jb
pop
or
cmp
lcall
aam
cmp
adc
insl
fldl
adc
add
movsb
push
xchg
loop
jne
int
jns
cld
lock
inc
mov
mov
mov
push
sbbb
inc
es
call
dec
push
jbe
xor
jl
mov
mov
push
or
mov
ret
jae
mov
adc
mov
out
ss
inc
mov
cmpb
lea
mov
inc
and
xor
js
dec
or
dec
xor
xchg
fnstcw
pop
cmp
das
pop
sub
jb
movsb
lcall
mov
sub
mov
jecxz
ja
mov
adc
loop
xchg
mov
xor
mov
mov
adc
add
scas
pop
dec
imul
cmp
mov
dec
aam
lahf
les
or
push
adc
es
mov
sub
in
mov
or
pop
outsb
pusha
pop
stos
nop
loope
fs
mov
adc
lret
das
test
mov
xor
pushf
and
mov
in
push
in
pop
mov
sub
and
in
out
xchg
dec
aam
pop
mov
push
xor
dec
jae
lods
out
add
mov
das
sarb
inc
jecxz
mov
push
sub
cwtl
inc
xchg
cwtl
and
adc
test
outsb
lds
mov
sbb
cmpsl
clc
sub
push
adc
push
pop
add
jae
mov
jle
mov
xor
inc
and
and
test
mov
std
loopne
inc
add
outsb
insb
push
push
arpl
lret
rcll
out
imul
call
scas
ja
dec
and
jo
outsl
push
cmp
es
shlb
test
loop
adc
aam
jge
inc
sbb
bound
jo
sbb
xchg
divl
sbb
dec
loope
pop
or
adc
test
sub
daa
cmp
leave
pop
loop
popf
subb
cmp
jno
popa
add
hlt
mov
dec
dec
test
or
push
pop
lret
fcompl
arpl
mov
pop
add
cli
and
add
lods
push
test
stc
mov
xor
dec
gs
cld
adc
movsb
in
sbbb
insl
adc
arpl
outsl
jg
fiadds
gs
pop
xchg
mov
inc
sub
and
cld
xor
or
pusha
repnz
div
xor
xor
mov
jno
cmp
test
loope
out
mov
in
add
inc
out
inc
outsb
sub
jbe
sbb
mov
sub
movsl
pusha
inc
jnp
mov
call
arpl
icebp
add
loope
adc
adcb
and
mov
pop
jnp
hlt
sahf
add
cmpsl
push
ss
mov
pop
push
push
xor
mov
movsb
inc
and
mov
xchg
cmp
iret
pop
xor
push
sbb
fwait
mov
cmp
mov
addr16
ret
fsubr
jg
cs
data16
adc
lahf
shrb
pop
pop
sub
lret
enter
imul
mov
add
jbe
enter
push
cmp
sub
hlt
sbb
movsl
sahf
sub
xchg
xchg
inc
in
in
mov
dec
jnp
xchg
into
xor
mov
lea
push
mov
shr
pop
pshufw
push
dec
mov
push
mov
pop
enter
cmp
xor
push
and
cwtl
les
inc
xor
adc
ja
testb
jne
fldcw
mov
repz
dec
movsb
push
out
add
sbb
pop
mov
xor
addr16
mov
pop
mov
mov
outsl
mov
outsb
fadds
cmp
or
test
sub
jmp
leave
lods
mov
ja
pop
jne
inc
lcall
or
icebp
test
cmpb
inc
outsl
dec
inc
adc
sbb
stc
popf
xchg
mov
or
dec
dec
sub
pop
dec
std
jne
insb
pop
pusha
shll
test
and
lods
dec
dec
adc
xorl
or
push
sub
pop
xchg
addr16
jo
adc
aaa
ret
scas
xchg
jecxz
sarb
add
popf
xor
cmp
push
ljmp
outsb
out
cmp
xchg
jge
repz
outsl
stos
les
dec
popf
jle
mov
jbe
adc
and
push
inc
aad
sub
xor
jbe
outsb
cltd
data16
or
or
xor
cmc
scas
fcoms
aam
pop
cmp
shrl
mov
sbb
xor
sti
inc
sahf
jbe
pop
mov
sarb
or
in
out
ljmp
xor
xchg
cmp
cld
pop
icebp
scas
mov
iret
mov
mov
iret
lds
mov
daa
mov
sbb
test
xchg
mov
mov
and
sub
mov
repnz
pop
inc
inc
hlt
cmp
mov
loope
cmpsl
cmp
orl
xchg
enter
mov
push
xor
aaa
lahf
imul
pushf
je
mov
les
inc
jo
mov
mov
lods
push
mov
pop
jg
mov
mov
cmpsb
lret
xor
add
add
pop
enter
dec
mov
loop
mov
jp
mov
rclb
jne
inc
mov
lock
in
mov
xor
inc
cmp
iret
cmp
fiadds
repz
movsb
xchg
sub
repnz
mov
stos
jne
xor
push
negb
lea
sarb
je
out
xor
clc
out
mov
cmc
aaa
aaa
lock
jle
xchg
lret
xchg
syscall
sub
sub
cs
jo
cmp
sbbl
inc
inc
jmp
repz
dec
dec
and
iret
rcrb
mov
dec
stos
cmc
push
xchg
imul
test
xlat
mov
dec
inc
mov
jae
inc
dec
scas
sbb
jl
stos
pusha
les
mov
and
pop
fidivrs
rolb
scas
jge
aas
enter
loope
daa
xlat
adc
cld
add
out
sahf
inc
adc
and
dec
out
movsl
adc
in
cmp
add
mov
push
cmp
sub
test
xchg
out
push
add
jecxz
jno
sub
sbbb
and
movsl
inc
jp
cld
add
xor
dec
sti
dec
mov
jg
addb
cld
jae
iretw
bound
dec
cmp
jecxz
push
pop
push
and
loope
jge
pop
add
xchg
outsb
iret
push
jmp
test
test
bound
push
mov
repnz
cmp
cmovs
out
cmp
mov
xor
insb
ret
fbld
xor
fistpl
xor
cmc
bound
push
mov
pop
cld
or
pop
xchg
ret
pop
cmp
inc
and
popf
ficoms
push
push
add
xor
test
movsl
adcl
in
xchg
adc
inc
in
jp
cmpsb
je
cmpsb
icebp
das
aad
lods
sub
adc
test
movsb
jb
test
mov
add
pop
xor
je
dec
incl
je
in
pop
pop
pop
jo
sub
mov
xor
jmp
ret
rcr
jle
xchg
mov
dec
and
mov
lret
rcrl
bnd
or
mov
push
xchg
sub
out
xor
movsl
fwait
cwtl
cmp
inc
daa
sbb
dec
fmull
out
xlat
mov
into
test
sub
cltd
push
and
les
cmpsl
jbe
orb
inc
inc
lods
jb
loop
subl
test
xor
ret
and
imul
add
xor
jo
ret
lret
das
imul
inc
mov
mov
xor
xor
sub
lret
mov
cwtl
pop
pop
in
out
adc
mov
add
loop
mov
ljmp
call
add
movsl
insb
pop
xlat
mov
jne
bound
shrb
xor
out
add
and
push
test
scas
mov
repnz
mov
jmp
test
pop
test
add
add
mov
mov
and
jmp
mov
in
sahf
gs
movl
ljmp
leave
sti
addr16
or
add
fucom
pop
fisttpll
arpl
xor
add
ret
aaa
add
iret
nop
rcrl
add
mov
lret
xlat
jl
in
into
rep
sub
fsubrl
jnp
gs
call
cmp
push
inc
enter
mov
cmpsb
rcrb
aad
adc
in
cmp
cli
mov
push
decb
dec
inc
xor
mov
mov
dec
mov
fs
lods
push
test
mov
adc
sub
out
fs
loop
mov
mov
aad
xchg
fdivrs
inc
adc
repz
sub
daa
jecxz
call
push
movb
jp
imul
or
jnp
mov
xchg
add
push
cld
inc
test
subl
mov
pop
mov
out
shlb
push
data16
add
and
pushf
mov
icebp
aam
mov
fs
add
rcr
ja
mov
push
mov
ds
or
mov
mov
xchg
lret
mov
jnp
pop
dec
mov
adc
sbb
outsb
loop,pn
lret
ret
mov
jae
mov
xchg
mov
cwtl
daa
insb
dec
and
cmp
pushl
outsb
mov
pop
mov
pop
mov
stos
jnp
mov
fwait
ret
push
stc
mov
mov
xor
dec
cmp
pop
xor
loope
pusha
cmp
divl
adc
sarb
lret
mov
insb
mov
push
sub
push
jns
in
xchg
jmp
jmp
cmp
lcall
or
or
shll
mov
push
in
dec
lret
lahf
pop
xor
out
lcall
daa
pop
mov
clc
xchg
cmpsb
pop
rolb
jbe
push
out
mov
pop
insl
rorl
push
fimuls
cmp
scas
inc
adc
js
outsl
dec
mov
pop
shl
xlat
cmp
and
or
xlat
stos
movl
push
fdivs
mov
insl
inc
insl
push
arpl
jp
leave
inc
cltd
and
movsl
insb
xchg
mov
sub
mov
push
jle
mov
push
inc
sahf
and
ss
pop
into
mov
jl
aam
out
jbe
dec
cmp
test
gs
pop
out
bound
cmp
imul
mov
std
hlt
mov
mov
andl
aam
aaa
les
rcr
sbb
add
movsl
add
popa
inc
adc
repz
sti
dec
push
cmpsb
pop
cmpsl
push
loopne
cwtl
sub
inc
mov
sub
lds
push
mov
cmp
in
lcall
inc
jne
or
jg
push
sub
sahf
in
mov
xchg
inc
arpl
add
sbb
cmp
or
ds
xchg
out
movsl
fidivrl
sbb
push
dec
sahf
xchg
pop
imul
push
xlat
inc
push
mov
pop
adc
push
sbb
in
mov
ret
pop
mov
sub
and
ds
jecxz
dec
data16
ret
leave
pop
add
shlb
xor
cmp
nop
adc
push
inc
mov
push
lahf
cmc
xchg
sbb
lret
out
push
test
jp
and
movsb
outsl
aam
mov
sahf
sub
outsl
push
dec
in
cmp
aaa
and
push
pop
mov
adc
loopne
rclb
int
mov
pushf
pusha
add
fldenv
and
scas
and
scas
dec
out
pop
dec
lahf
push
xchg
sahf
outsb
imul
and
mov
cld
daa
test
cmp
lret
pop
fstps
xor
add
xchg
sti
or
xlat
fnsave
xor
test
push
shrl
mov
sbb
cltd
scas
xorl
ss
jnp
pop
jbe
cmc
dec
push
incb
andb
add
xchg
rorb
add
and
ds
mov
cmpsl
sti
pushf
inc
aaa
popf
xchg
sbb
pop
je
call
mov
and
cmpsl
sbb
jbe
lret
rolb
mov
push
fidivl
xchg
dec
lcall
outsl
cmpsb
out
sbb
push
pop
dec
jp
inc
sti
ja
test
jmp
adc
mov
es
add
fisubl
push
push
sub
pop
jecxz
sub
mov
ss
push
out
pop
mov
jb
daa
imul
and
xor
xor
addr16
jg
shll
push
stc
xchg
repnz
test
inc
sub
adc
mov
pop
sbbl
dec
cmp
push
mov
dec
pop
cmc
add
add
rorl
lret
cwtl
adc
faddl
jl
sub
add
shrl
jbe
pop
or
popf
test
pushf
and
lods
je
xor
repnz
fs
repnz
bound
out
add
xchg
inc
cmp
sub
cmp
xor
cmp
mov
dec
pop
push
dec
dec
jne
mov
and
pushf
imul
lahf
push
lcall
outsl
mov
jle
cmp
sbb
jns
insl
push
xor
push
adc
test
rol
adc
arpl
mov
push
shl
cmp
mov
int
mov
sub
pop
mov
adc
rorl
mov
rcr
pop
or
aam
scas
popf
or
xor
mov
int3
int3
or
mov
jg
into
icebp
jae
repz
sbb
mov
imul
jp
sar
fwait
push
xchg
and
jp
addr16
pop
sub
mov
lods
push
xchg
xchg
sub
dec
fmull
or
mov
jmp
int
adc
cwtl
divl
xorl
out
cmp
xchg
xchg
aas
push
stc
nop
into
adc
mov
jmp
mov
xchg
lock
cli
cmp
add
iret
or
lods
add
mov
sbb
gs
xchg
lahf
push
xchg
loop
mov
mov
in
bound
sub
pop
push
int
sub
subl
mov
jno
fadd
and
leave
mov
and
loop
pusha
inc
out
leave
jmp
push
pop
lods
push
enter
in
cmpsb
xlat
add
add
or
shl
aas
aas
das
and
enter
pushf
or
loope
fcmovnbe
fldcw
imul
xchg
subb
xchg
mov
cmp
push
push
in
test
xor
adc
fistpl
std
pop
les
xchg
sahf
lods
jle,pn
repnz
in
stos
push
ret
mov
movsb
mov
mov
dec
mov
dec
pop
jecxz
fs
pusha
dec
nop
negl
popf
mov
jle
push
inc
roll
adc
mov
inc
lahf
js
push
aaa
xlat
or
add
das
aam
sub
lods
in
lcall
shll
or
add
pop
std
push
outsb
fidivs
out
add
aas
jae
sub
out
add
fdivr
push
adc
repz
sbb
jae
aam
jge
int
filds
cmp
jbe
xchg
jb,pn
xchg
std
movsl
jl
pop
mov
jo
jns
shrb
xlat
dec
push
stc
subl
ljmp
jo
inc
sub
jo
xchg
dec
xorl
aad
cld
fdivrs
or
dec
push
jmp
fwait
das
int3
jl
mov
inc
mov
fsubl
movsl
xchg
shlb
pop
fists
in
outsl
mov
psrld
inc
gs
and
mov
daa
stos
sub
mov
push
jmp
movsl
je
fs
inc
sub
fnstcw
fadds
pop
add
push
adc
inc
add
xor
cli
in
xchg
aad
add
pop
mov
sbb
jmp
loopne
sub
imul
mov
movsl
lahf
push
imul
dec
pop
insb
fsubl
sbb
into
pop
popl
in
and
imul
out
pop
cmp
inc
decl
mov
mov
mov
pop
ja
jg
cwtl
jecxz
lret
andb
fnsave
sarb
lds
sub
cmc
add
inc
mov
or
sbb
or
out
testb
dec
mov
push
mov
enter
aad
lock
pushf
lret
movsl
lret
add
adc
sub
out
smsw
jno
ret
inc
nop
ficompl
and
jbe
mov
push
pushf
lock
out
daa
jno
rolb
dec
rcr
inc
jp
xor
lret
push
sti
fisubrl
lcall
jns
xchg
sub
push
sbb
xchg
xor
add
sub
mov
mov
push
dec
mov
adc
or
jle
flds
pop
imul
pop
mov
and
ds
cli
jp
xchg
int
fcomps
out
lret
sbb
arpl
fiaddl
imul
sbb
in
xor
add
mov
xchg
xor
orb
add
sub
xor
dec
ret
test
sub
ficomps
xchg
ljmp
in
and
outsb
inc
xor
dec
test
arpl
les
ret
bnd
pop
pop
jp
shlb
inc
jp
scas
xchg
mov
push
or
dec
cltd
add
repnz
dec
shrl
sbb
lods
in
adc
inc
es
lock
std
mov
or
inc
cs
or
mov
pop
sbb
stc
push
inc
outsb
hlt
xchg
xchg
insb
shll
push
data16
enter
stos
into
insl
add
dec
test
jb
shr
push
mov
int
mov
jp
into
iretw
lds
push
jb
jle
or
aam
sbb
clc
clc
fisttpl
push
adc
cmp
mov
sub
pop
sub
insb
sbb
cmpsl
jns
lods
lret
xor
movsl
add
mov
insl
jmp
inc
and
mov
adcl
shll
add
push
cmpsl
pop
adc
xchg
and
stc
xchg
jae
je
and
sbb
jae
test
cli
xor
cmp
sub
xor
mov
jno
loope
xor
aad
push
push
mov
and
add
stos
add
test
or
mov
pop
movsb
pminsw
push
in
cltd
fstpl
xchg
jno
add
pop
mov
fnstsw
cld
push
mov
dec
mov
xlat
xor
push
loope
lcall
inc
sti
movb
sbb
lret
jg
sbb
fdiv
cmp
jl
xchg
sar
pop
xchg
and
bound
mov
inc
cltd
jmp
imul
mov
adc
cmp
loope
in
cmp
adcb
fisubrl
imul
fnstcw
lods
mov
or
pop
jnp
aas
pusha
dec
iret
fwait
push
inc
mov
adc
push
popa
jmp
xlat
push
lea
add
mov
fimull
clc
cpuid
mov
push
jp
mov
xor
lock
pop
dec
insb
jmp
xchg
inc
xlat
inc
mov
dec
arpl
out
test
and
jecxz
or
sahf
cmp
push
jmp
aaa
add
xchg
mov
int3
mov
mov
repz
pushf
movsb
sbb
movsl
mov
movsb
xchg
insb
push
xor
into
outsb
and
mov
xchg
push
mov
jp
jns
cmp
xor
popa
xor
pushf
adc
stos
mov
add
pop
jo
daa
pop
sarl
aad
lea
inc
cmc
sbb
inc
dec
subb
clc
sub
add
int3
add
push
sarb
lods
xor
ja
xchg
xchg
fstps
in
lcall
jmp
cwtl
xor
sahf
addr16
mov
cli
adc
fs
aaa
and
cld
iret
cmc
stc
or
push
fiaddl
inc
push
mov
das
jnp
ja
ja
fwait
insl
jl
xor
jle
xchg
sub
mov
mov
stos
cli
iret
cs
jg
push
xlat
out
aad
in
lods
mov
test
pop
mov
mov
testb
fmuls
xorl
addr16
sub
idivl
mov
hlt
pop
es
add
into
mov
loope
cmp
out
dec
cmp
mov
call
add
jge
adc
cwtl
pop
outsl
mov
add
or
dec
je
popa
mov
aad
out
imul
adc
fs
lock
dec
jge
adc
xchg
fnstcw
push
out
cs
arpl
fstps
scas
adc
out
ss
sub
cmp
jb
lods
xchg
loopne
xchg
imul
mov
push
insl
jae
ret
mov
mov
push
add
add
enter
std
in
dec
xchg
lea
ret
mov
std
and
movsb
mov
adc
mov
jge
fwait
xor
pop
mov
mov
test
fmuls
xchg
mov
mov
nop
push
push
sbbl
add
lods
add
push
sub
xchg
push
mov
sarb
push
mov
stos
inc
hlt
mov
jae
jnp
call
imul
mov
adc
cmpsb
dec
push
popf
mov
cli
or
hlt
ds
pop
rcrl
adc
movsb
nop
comiss
mov
xchg
sbb
fs
mov
mov
dec
and
sarb
mov
xor
mov
imul
jmp
rcl
pop
and
pop
add
fs
sbb
movl
dec
in
or
inc
and
sbb
mov
push
mov
sub
sar
dec
ljmp
push
pop
roll
lahf
fld
jb
jne
inc
xchg
add
shlb
or
sbb
dec
xchg
xchg
hlt
push
mov
sbb
jbe
sahf
push
les
into
sub
sbb
or
aad
add
neg
mov
roll
pushf
cs
leave
or
lods
mov
mov
sti
mov
icebp
sub
xchg
and
test
pop
and
int
cmpsl
jmp
je
inc
aam
dec
jo
repz
add
lcall
pusha
mov
leave
nop
in
rolb
gs
and
and
or
js
lret
mov
jl
dec
or
and
cmp
fcomip
pop
mov
and
xor
inc
xchg
shll
jl
ret
xor
dec
add
xor
inc
in
in
idiv
jl
imul
sub
inc
and
adc
lea
sbb
lods
aad
mov
push
in
sub
stos
loopne
mov
xor
xchg
jle
jecxz
inc
jge
call
ret
mov
sub
push
xlat
loop
dec
sbb
pop
inc
xchg
cld
or
out
mov
movsl
mov
sarb
xchg
jbe
mov
ds
push
cwtl
test
insl
clc
jne
push
mov
xchg
add
xchg
xor
add
push
add
stos
add
dec
insl
loop
sub
mov
xchg
arpl
aad
lods
mov
rol
and
push
scas
pop
enter
jbe
pusha
dec
repnz
dec
or
popf
imul
adc
mov
xchg
mov
out
jne
inc
xchg
mov
mov
daa
push
std
mov
roll
ror
or
xor
xchg
dec
mov
and
jecxz
cmpsl
add
cmp
push
mov
dec
xchg
xchg
jecxz
sub
scas
xchg
hlt
pop
mov
adc
shr
mov
outsb
add
dec
ja
adc
test
lock
mov
add
cmpsl
inc
test
mov
cltd
push
jno
adc
push
sub
lcall
mov
sub
stc
lea
stc
std
js
cmc
adc
cmp
or
lds
gs
dec
jns
jb
pop
mov
mov
cmp
mov
imul
adc
js
mov
in
xor
lods
addr16
mov
lret
icebp
or
sub
cwtl
and
out
jecxz
dec
pop
imul
xchg
cmp
icebp
fstl
sahf
add
sbb
orl
and
mov
xchg
add
sbb
sbb
mov
mov
gs
jg
add
add
pop
test
xor
arpl
xor
mov
jp
addl
stos
mov
push
push
loop
sub
sbb
dec
clc
cmpsl
fsub
stos
push
shr
or
lods
push
inc
insb
lret
xchg
mov
adc
add
dec
in
pop
movsl
into
sub
gs
scas
orb
outsl
mov
jge
xchg
adc
add
push
pop
mov
sbb
dec
testb
test
sub
mov
or
arpl
sub
cmpsl
xorb
mov
loop
shll
inc
nop
push
push
push
inc
fildl
out
jae
dec
bound
inc
mov
mov
mov
add
movsb
or
sbb
out
xor
push
sbb
je
inc
dec
cmp
or
or
mov
movsb
stos
imul
or
jge
and
mov
mov
add
pop
push
jle
je
sahf
or
push
pop
mov
push
jb
sub
pushf
xchg
fchs
push
xchg
jne
shlb
pop
fs
add
pushf
mov
add
mov
inc
xor
mul
loop
sti
adc
push
test
pop
jo
repz
addb
movsb
loop
push
push
pop
out
test
pop
sbb
sbb
loopne
fdivl
or
pop
sub
xorl
ficompl
test
jmp
jmp
push
aad
fiadds
dec
jmp
cmp
shrb
fistpl
test
jae
or
or
ljmp
jae
mov
std
jg
es
push
loop
mov
imul
xor
push
outsb
cmp
xor
cmc
dec
and
jo
in
xchg
dec
mov
das
mov
js
jge
cltd
mov
adc
in
arpl
inc
jle
add
call
or
push
push
bound
xchg
add
add
sbb
lahf
mov
cmp
jp
mov
sub
in
pop
insl
jp
add
loop
loop
cs
dec
js
das
xor
aas
jbe
mov
dec
mov
adc
cs
add
dec
push
jge
lock
int3
push
loope
or
repz
int
push
mov
cmpsl
pop
push
push
icebp
or
gs
js
nop
stc
pop
fsubl
pop
or
aas
and
dec
aam
cmpsb
inc
push
lret
cmp
ds
sub
hlt
lret
push
mov
mov
fcmovu
orl
mov
movsl
in
mov
mov
test
cmp
std
xchg
rolb
add
xor
daa
mov
xchg
mov
jmp
cs
add
pusha
jb
xor
jmp
dec
pop
inc
shll
cli
inc
mov
pop
adc
cmp
xor
jbe
cmp
ret
in
in
dec
jl
in
loop
dec
inc
loop
xchg
mov
mov
push
and
icebp
sbb
xchg
cmp
fwait
inc
addr16
inc
pop
dec
mov
pop
sub
or
jecxz
pop
push
cld
cltd
addr16
push
fsubrl
fimull
out
aam
mov
or
jmp
mov
mov
into
and
test
fldl
xchg
fimuls
pop
mov
vpmullw
aas
orb
rclb
aam
add
imul
cmpl
inc
mov
insb
sub
sahf
imul
mov
mov
mov
js
iret
cmp
xlat
or
jno
push
xor
lret
shlb
bound
les
pop
js
push
sbb
mov
clc
andb
push
stos
pop
cli
pusha
dec
cmp
mov
call
jecxz
pusha
hlt
rcl
jecxz
or
mov
dec
jns
loopne
xchg
shll
push
mov
aam
sbb
mov
pop
push
jns
dec
clc
dec
pop
mov
adc
sbbb
jg
mov
sbb
aam
test
mov
dec
addr16
inc
fcmovne
dec
xchg
lods
ljmp
stc
in
jecxz
imul
test
xor
sub
fnsave
dec
xor
out
lret
popf
dec
test
nop
aam
inc
push
jg
adcl
mov
and
mov
mov
lcall
cli
mov
mov
pop
xchg
push
sub
cmp
fcomps
pop
xchg
insb
lock
sbb
fnsave
xor
lcall
jne
cmpsb
rclb
add
lods
xchg
dec
int
ret
lds
ffree
dec
cmc
shlb
push
in
push
popa
fmul
and
xchg
adc
ss
xorl
push
cmpsb
add
sbb
outsb
push
outsb
push
fiadds
es
mov
or
andb
xchg
mov
mov
adc
lcall
idivb
push
or
mov
push
xor
mov
mov
inc
pusha
cmp
movsb
ss
mov
test
inc
ds
pop
sbb
icebp
adc
mov
and
jne
lcall
jbe
mov
lock
fsubrs
sub
and
adc
push
scas
movsb
mov
mov
mov
arpl
or
das
rol
dec
out
filds
sti
movsb
cwtl
mov
xor
xchg
add
cwtl
cmp
test
and
out
in
sbb
and
adc
divb
movsb
adc
push
mov
movsl
lret
roll
sub
mov
pop
outsb
jp
sub
sub
sub
in
inc
lea
mov
lock
stos
ja
xchg
call
pop
and
sub
mov
scas
xchg
rorl
enter
loop
lds
inc
pop
in
mov
mov
mov
add
addr16
jge
stos
push
out
jae
cmp
add
aas
push
cmpsl
pop
sub
add
into
clc
cmpsl
xor
mov
rolb
scas
mov
mov
cmp
clc
push
pop
mov
pop
mov
rolb
push
neg
or
mov
sub
lret
push
push
mov
add
cmp
jp
hlt
aam
pop
repz
jae
data16
scas
inc
and
inc
jecxz
fwait
mov
xor
aaa
cmpl
push
mov
std
push
divl
rorb
decl
adc
lock
int
inc
je
jo
scas
std
clc
push
lret
push
inc
xchg
xor
into
xchg
add
ret
repnz
dec
dec
pop
push
out
shll
in
test
or
repz
mov
out
je
dec
sub
jle
popa
mov
mov
mov
sahf
js
stos
dec
stos
lock
iret
xchg
push
add
add
jp
xor
dec
ret
pusha
xchg
mov
and
sar
jp
push
mov
mov
int3
movsb
dec
mov
ftst
add
imul
and
xor
cmpl
jb
adc
mov
sarl
aaa
mov
xchg
shrl
push
mov
cli
loope
and
aam
out
ret
fistl
and
fnstsw
jcxz
movsb
cltd
sbb
or
ja
dec
jno
dec
sub
add
test
addr16
fidivs
pop
and
bound
or
mov
or
loope
dec
fadds
add
sbb
mov
or
cmpsb
jmp
push
shrl
test
in
or
push
mov
roll
xchg
inc
in
mov
popa
xchg
jmp
inc
cltd
popf
dec
js
out
add
xchg
sub
fwait
rorl
push
leave
mov
in
scas
in
push
not
insl
mov
dec
bound
xchg
xchg
cs
rcr
mov
cmpsl
mov
movsb
mov
sbb
inc
pop
xchg
push
mov
or
sub
xchg
add
pushf
bound
inc
dec
cmp
cmpsb
dec
or
fdivrl
cmc
mov
enter
add
jp
lds
cmp
and
je
push
push
lret
imul
test
fistpl
add
aad
jge
mov
insl
cs
xor
insb
jmp
sbb
push
shll
xor
inc
pop
sbbl
js
mov
aam
fs
cwtl
into
push
faddl
ja
jbe
aam
mov
negl
adc
gs
dec
pop
repnz
dec
xchg
push
imulb
mov
cli
shll
lret
sbb
loopne
loop
jne
outsb
test
push
sub
shrl
sub
sub
out
mov
icebp
mov
adc
out
mov
loope
out
push
jb
sbb
stc
into
jg
inc
es
pop
adcl
fstpt
fimuls
cmp
mov
jo
icebp
xchg
or
in
clc
aas
loop
inc
push
repz
lods
repz
int3
mov
xor
in
dec
cmpb
aam
mov
mov
sahf
inc
movsl
pop
fcompl
mov
insl
test
xor
incl
add
andl
dec
fdivrs
out
mov
stos
ss
cmp
add
inc
imul
ja
andl
in
dec
imul
bts
lret
mov
mov
mov
lds
test
rcrb
adc
mov
push
lahf
daa
mov
js
nop
cwtl
in
es
mov
dec
cmp
jae
adc
xchg
sub
les
mov
cmc
notb
repnz
scas
repnz
or
popf
cmp
aad
or
rorb
pop
shlb
out
mov
fwait
mov
sbb
mov
mov
push
loope
enter
bound
xor
pushf
jecxz
mov
sub
aaa
shr
fnstenv
and
mov
push
add
adc
mov
out
cmp
sbb
adc
mov
add
mov
pop
iret
pop
inc
mov
push
inc
or
fdivp
inc
dec
mov
dec
cli
repnz
icebp
sbb
sub
cmpsl
ja
faddp
mulb
jmp
addr16
ret
punpckhdq
cltd
icebp
loop
lcall
loope
or
icebp
xchg
adc
xor
jnp
add
mov
inc
or
add
jle
push
iret
or
into
mov
xchg
pop
jle,pn
in
xchg
fiadds
cmp
push
cmpsl
mov
push
xor
pop
adc
dec
push
inc
cmp
lods
sar
push
mov
jg
scas
xchg
and
testb
xor
push
test
aas
dec
mov
std
mov
dec
cwtl
sbb
fistpll
adc
pop
into
scas
je
adc
inc
sub
loop
out
rcrl
fmul
fnstsw
movsl
adc
mov
stos
mov
sbb
jecxz
sbb
xchg
jnp
mov
xchg
or
das
or
jmp
push
cmp
lahf
xor
fwait
orb
inc
rcrl
in
push
into
dec
push
lret
ret
popa
pop
mov
mov
xchg
xor
jl
push
cmpsl
pop
sub
sti
scas
jb
sahf
sbb
add
shr
call
mov
mov
repz
enter
pop
or
mov
push
jp
pop
imul
cmp
jmp
aaa
adc
inc
lahf
adc
fdiv
mov
cld
inc
into
xchg
jnp
nop
out
xchg
cmp
sub
outsb
cs
arpl
push
adc
cmp
push
push
inc
pop
pop
rorb
xchg
and
mov
adc
stos
jmp
sbb
push
inc
jns
cmpsl
or
js
mov
lret
mov
fwait
dec
cmp
pop
push
dec
icebp
test
lds
ret
add
mov
mov
addb
mov
mov
adc
xchg
push
jle
jg
or
dec
jbe
jne
xchg
test
je
push
gs
xchg
pop
xchg
cmp
pop
dec
loop
push
xor
mov
test
cmp
fsubrl
lret
pop
sti
cld
aam
jp
xchg
cwtl
mov
push
cs
jl
lods
add
add
xchg
mov
stos
pop
pop
scas
jl
jbe
rorb
inc
fs
lods
pop
bound
cmp
pushf
lret
add
xchg
pop
cmp
stc
clc
es
dec
jp
loope
ds
inc
sub
cs
pop
and
xor
test
and
mov
jg
push
movsb
cs
lahf
mov
lcall
leave
out
inc
call
dec
aam
shll
aam
movsb
loope
rorl
sub
xchg
loopne
add
xchg
push
lret
pop
fldcw
loop
or
add
lock
outsb
push
or
sub
cmp
cld
dec
imul
jmp
xor
test
xor
mov
jo
push
xor
xchg
lret
mov
fstpl
scas
cmc
pop
sarl
cltd
dec
jne
dec
arpl
inc
jecxz
aad
inc
jg
xor
std
xchg
test
lret
pushf
int3
jae
dec
repnz
data16
fs
out
mov
push
inc
mov
jbe
pop
sub
mul
mov
scas
xor
stos
movsb
inc
sbb
es
mov
push
js
and
lea
int3
outsl
int
or
xchg
test
int
lods
outsb
mov
lret
inc
or
in
mov
mov
push
xor
jns,pt
cltd
adc
popa
insl
dec
fcoms
sub
xor
mov
repz
dec
cmp
cs
ret
shr
xchg
jge
gs
stc
jle
into
push
jle
mov
out
jge
add
bound
push
test
push
scas
pop
dec
push
shl
pop
xorb
sbb
or
je
sub
fsts
jp
daa
or
cld
sub
daa
ss
cld
cmpsb
rolb
mov
pop
dec
jns
insb
es
sub
pop
lcall
pop
and
mov
in
add
daa
fistps
arpl
clc
stos
push
push
aaa
dec
dec
xor
lret
fbld
testb
ljmp
leave
mov
std
rolb
pop
xchg
fldl
notb
cmp
inc
dec
bound
pop
jb
jnp
sbb
ja
stc
data16
aas
and
sbb
ds
fwait
int3
mov
adc
or
cmp
mov
incl
fs
bound
xorl
xor
jecxz
fldl
jecxz
xor
xor
fildll
popa
arpl
push
cmpsl
dec
shr
or
xor
ljmp
rep
inc
loope
bnd
pop
lahf
fstp
mov
xor
xlat
movsl
add
jl
js
test
aam
fisttpl
mov
cmp
mov
pusha
insl
mov
push
mov
jns
cmp
das
popf
js
jl
in
int3
stc
and
testb
jle
mov
popf
mov
ret
cmp
fbld
enter
add
xchg
xor
push
test
mov
mov
cltd
mov
jl
out
or
scas
xchg
in
dec
cmp
or
stos
nop
adc
sub
andl
mov
xlat
movsl
cld
int3
aad
or
adcl
pop
popl
cs
or
jecxz
fiaddl
lret
or
push
dec
aas
pop
cld
inc
mov
mov
aam
and
pop
loope
jne
roll
pop
out
por
sub
adc
push
fsubs
or
jae
fstps
sarl
dec
mov
nop
sbb
inc
out
outsb
adc
lods
dec
push
arpl
lods
inc
movsl
push
jp
push
sub
lock
mov
xlat
jl
and
ficomps
cltd
jnp
bound
and
dec
sub
or
es
sub
out
pop
adc
outsb
ljmp
mov
cmpsb
jo
fsts
fcomps
hlt
mov
das
lret
lods
lods
push
fisttps
mov
leave
inc
out
inc
loope
aam
or
cmp
rorb
movsb
scas
push
jns
push
das
fisttpll
mov
mov
mov
lock
pop
dec
mov
or
gs
sub
lods
mov
pushf
mov
aas
outsl
mov
ljmp
push
cs
out
add
fadd
shlb
sbb
shll
xlat
adc
dec
stos
adc
aad
aas
pusha
in
pop
push
int
mov
movsl
mov
test
std
js
inc
xchg
into
test
jb
xchg
movsl
and
int
jge
push
ja
jl
stos
inc
push
outsb
mov
sbb
mov
stc
push
aas
mov
imul
push
push
orl
stos
mov
fldt
int3
fs
cwtl
cmp
xchg
rorl
adc
xor
jae
aas
sti
xchg
or
in
sbb
leave
movsl
dec
add
jb
sub
nop
adc
inc
sub
addr16
inc
adc
and
mov
mov
push
cmp
testl
lods
in
fimuls
or
mov
loopne
sub
add
frstor
xchg
aam
cmpsl
push
jp
cmp
mov
pop
testb
pop
jg
dec
cmp
shrb
cmpsl
xchg
lds
movsl
mov
jo
fdivrl
cmp
inc
lahf
xor
cmp
jb
test
pushf
push
push
add
mov
mov
and
sub
or
fidivrs
mov
inc
push
sbb
dec
jne
mov
inc
hlt
adcb
jae
or
and
jb
add
lods
push
mov
stos
cmc
jbe
js
insb
jnp
jae
cld
dec
adc
cld
or
loopne
cmp
cltd
icebp
pop
negb
arpl
jb
pop
int3
stos
out
stos
daa
sub
and
cmpsb
dec
inc
adc
xchg
cmp
clc
push
inc
bound
inc
pop
push
add
lds
or
cmpsb
jno
sbb
jne
push
jne
out
bound
aas
cmp
adc
repnz
mov
lods
sarl
movsl
xor
in
mov
or
cli
inc
add
pop
xchg
nop
xchg
xchg
aaa
scas
lcall
out
push
scas
popa
adc
cmp
pop
into
clc
popa
or
dec
call
outsb
add
hlt
cmp
fildl
clc
icebp
mov
xchg
lret
test
jg
je
jp
rcl
mov
push
shrl
inc
int3
lret
xlat
ret
jmp
js
scas
fst
jle
jno
pop
mov
mov
aam
xchg
imul
xchg
inc
loopne
out
out
stos
mov
pop
ja
lock
pop
or
xor
xor
in
sub
push
mov
bnd
pusha
xor
xor
iret
outsl
stc
test
outsl
fsubrl
push
xchg
mov
je
jbe
or
shrl
shl
sbb
movsb
cmpsl
pop
add
aaa
xchg
mov
jb
xchg
mov
mov
bswap
insb
sarb
mov
fdivl
add
pop
mov
pusha
xchg
mov
sub
sbbl
loope
xchg
lods
fistps
stos
imul
pusha
icebp
jne
sub
xchg
shll
movsl
in
cmp
mov
aas
add
test
jae
loopne
ss
pop
xlat
imul
inc
std
sti
dec
cld
xchg
lea
aam
imull
and
dec
fdivrl
notb
lea
cmp
xlat
push
ret
mov
jae
push
dec
pop
out
mov
xchg
dec
out
jne
fnstsw
inc
and
pushf
inc
pop
add
pop
jmp
inc
and
adc
ja
inc
call
jecxz
lahf
jo
ds
stc
decb
xchg
lock
xchg
rep
push
add
lods
fildl
arpl
stos
xchg
lods
jno
shl
lods
testl
in
addr16
rcl
push
nop
daa
enter
mov
push
test
and
jecxz
xor
packsswb
fdivrl
adc
imul
mov
xor
fucomip
push
outsl
jle
mov
adc
jecxz
cmpsb
popf
jb
mov
fwait
incb
dec
ljmp
out
negl
push
and
push
xchg
cmp
mov
aad
test
mov
cld
call
repnz
add
test
lea
push
pop
xor
cmpl
inc
inc
mov
sbb
mov
icebp
add
roll
add
clc
lret
jno
or
mov
mov
inc
adc
call
imul
jns
adc
mov
xchg
jae
mov
pop
outsb
fabs
dec
push
mov
test
add
into
orl
sub
sahf
mov
out
loope
sbb
aaa
fisttpll
ret
mov
mov
dec
dec
fbstp
ret
out
or
push
adc
adc
inc
and
icebp
add
xchg
xchg
mov
xor
fisubrs
dec
adc
in
outsl
jmp
xlat
dec
xlat
push
mov
sbb
int3
sbb
ss
insb
jo
loope
pop
mov
daa
xchg
lods
scas
sub
test
mov
popf
lret
setg
out
mov
inc
and
imul
sub
xchg
ds
or
shlb
cmp
or
adc
pop
sar
push
mov
rclb
loopne
testb
lock
insb
sbb
dec
repz
insb
dec
jl
jl
outsl
mov
mov
jbe
clc
test
test
flds
jge
dec
push
adc
mov
imul
jne
xchg
or
call
movsb
mov
enter
inc
lds
sub
call
and
mov
sbb
lret
dec
imul
or
scas
or
xchg
cld
iret
sbb
sub
jne
out
sub
sub
and
cli
and
popa
lods
adc
mov
pusha
jl
push
xor
mov
sbb
das
cld
or
repz
jle
fldenv
cmpsb
arpl
jle
xchg
pushl
mov
out
adc
push
and
adc
repz
adc
sbb
mov
pop
push
les
movsb
addr16
test
out
xor
mov
in
sti
sbb
add
pop
sub
xlat
test
lret
fs
jecxz
mov
mov
sub
pop
mov
fidivs
stos
int3
add
push
pop
jo
xor
mov
rorb
inc
fisubrs
cmp
mov
add
cwtl
jecxz
icebp
pop
loopne
adc
mov
pop
int
les
pop
sub
push
or
mov
mov
inc
or
xchg
icebp
or
pop
ja
dec
mov
in
xchg
pushf
test
cmpsb
and
inc
inc
pop
clc
mov
sbb
or
pop
out
jp
xor
lret
fstps
push
inc
add
inc
mov
lock
sbb
inc
xchg
jl
mov
xor
lds
mov
or
xchg
xlat
sbb
xchg
mov
sub
mov
adc
aad
and
mov
test
fdivrp
ret
mov
jb
mov
jl
xchg
push
cmp
or
dec
sub
ret
or
mov
pop
pop
mov
loopne,pt
pop
push
scas
jge
xlat
dec
add
dec
mov
mov
push
lock
dec
lahf
push
mov
ret
popa
jne
lock
mov
pop
les
mov
mov
xor
iret
in
sbb
mov
sub
xchg
adc
shl
push
jmp
cmp
stos
mov
mov
push
xchg
lahf
or
mov
inc
xor
push
mov
jno
sub
popa
iret
mov
or
in
pop
cwtl
jl
scas
jge
nop
jne
repnz
push
xchg
mov
pop
subb
loop
mov
pop
js
and
outsb
es
or
fistpl
mov
pushf
adc
adcl
icebp
push
mov
cmp
fimull
jns
ret
movsb
scas
loope
mov
lods
notb
xor
ret
add
mov
dec
icebp
mov
xor
xor
das
cltd
in
mov
push
xorl
jecxz
add
stos
inc
stc
xchg
sbb
mov
lods
sub
mov
jns
sbb
xchg
cmp
aas
add
inc
cmp
mov
pop
inc
mov
push
pop
dec
and
mov
addr16
jle
in
xchg
jns
sbb
fsubs
icebp
push
add
sub
dec
lods
lds
add
push
or
pop
in
leave
jo
and
movsl
or
cmp
scas
mov
mov
sti
add
cmp
aaa
sbb
fdivrl
add
jae
rcl
mov
pop
push
cmp
sub
adc
pop
and
pop
mov
int
mov
pushf
dec
ja
loope
jge
lods
adc
add
lods
popa
imul
inc
into
retw
inc
and
sbb
push
pop
in
and
cmp
out
jg
lcall
xchg
xlat
stos
rolb
sub
pusha
mov
or
mov
mov
jb
jmp
iret
mov
mov
lcall
shlb
bound
fldt
sar
push
shl
xlat
test
int
shr
lahf
or
jle
jle
out
ret
mov
jge
out
add
pop
imul
and
repnz
in
inc
xchg
and
sub
std
lods
insb
pop
or
lea
out
push
loope
aaa
jl
fxch
in
mov
imul
push
pop
pop
add
in
adc
shl
mov
jp
test
xchg
out
cmc
mov
cmc
mov
insl
cmpsb
push
and
fidivs
mov
dec
arpl
push
imul
mov
shll
in
mov
cmp
jno
cmp
and
rcrl
xor
fs
xor
jns
imul
out
sbb
dec
scas
loopne
test
les
mov
sbb
mov
jl
int
mov
xor
add
dec
jo
outsl
cmp
dec
mov
stos
and
jae
push
push
jo
mov
adc
popa
pop
inc
cmp
inc
loope
pop
mov
mov
imul
dec
int3
leave
dec
out
sub
loope
sbb
mov
mov
pop
cmpsl
push
and
call
jg
xchg
push
iret
jnp
and
xor
xlat
jo
pop
push
dec
test
stos
dec
fdivrp
xor
xchg
jno
sub
out
sbb
push
ja
ret
mov
cmovbe
xchg
mov
out
cwtl
jmp
inc
into
icebp
pcmpgtw
mov
cmp
iret
mov
clc
popa
dec
out
pop
xchg
xchg
push
in
nop
sub
jno
sbb
and
jmp
vpmuludq
mov
les
or
pusha
adc
int3
push
mov
push
mov
jge
push
popf
rolb
or
and
aam
xor
fcmovne
mov
mov
sahf
ja
pop
fs
push
mov
pop
sti
push
or
sub
jmp
cmpsb
cmp
push
lds
je
in
pop
andl
mov
mov
stos
xor
mov
js
addb
fbld
pop
mov
pusha
mov
test
jno
inc
ret
sarb
cmp
sub
and
pop
jg
push
and
cmpsl
cmc
cwtl
int3
push
lret
stos
mulb
jns
outsb
lret
mov
jnp
dec
xchg
xor
or
repz
lahf
adc
hlt
xor
cmc
stos
inc
loope
pusha
xor
push
dec
call
adc
pop
cli
popa
adc
roll
push
fwait
daa
scas
mov
dec
jge
cmp
pop
movsb
and
dec
push
lret
or
sahf
xchg
addb
lahf
and
adc
pushf
pushf
bound
iret
jg
dec
scas
mov
xor
push
dec
xchg
jecxz
icebp
insl
je
dec
movsl
jne
cs
lret
mov
adc
xchg
mov
stos
cmc
in
inc
pop
jne
aad
pop
pop
xchg
jne
mov
ja
imul
out
xor
std
popf
pop
adc
push
ret
xchg
add
sub
add
jne
arpl
enter
inc
xchg
aas
pop
dec
adc
popf
adc
mov
xchg
sbb
popa
cmpsl
xor
mov
jmp
push
cmp
ficoms
out
adc
add
push
jp
lcall
push
pusha
ja
outsl
jb
sbb
dec
jmp
push
adc
cwtl
ja
stc
mov
dec
pop
inc
inc
xor
ds
scas
sbb
cmpsl
in
lods
cmpsl
out
shrl
or
orb
cmpsb
jle
jmp
inc
out
jo
out
sbb
aam
ljmp
xchg
in
repz
xchg
xchg
sbb
in
in
pop
stos
lret
jno
cli
mov
jo
adc
or
inc
outsl
adc
cmp
jp
push
aad
inc
addr16
jg
pop
in
mov
repnz
sub
lcall
addr16
xchg
test
fadd
stos
popf
call
int
out
orb
xor
loopne
or
addr16
push
mov
cmp
mov
daa
addb
stos
mov
sbb
sti
daa
aad
mov
sarb
iret
ds
cs
out
cmp
inc
imul
xchg
sbb
rorl
inc
jne
push
int3
sar
jmp
xor
into
incb
dec
jb
aam
xchg
xchg
mov
je
pop
jl
pusha
jb
pusha
cmpsl
inc
mov
add
push
in
push
mov
aas
mov
sti
daa
rcrl
gs
or
xchg
add
sub
div
aas
jno
mov
or
xor
and
bound
jb
adc
je
adc
outsl
push
in
movsb
in
loope
cs
sbb
jns
loope
sub
inc
lret
sbb
mov
in
addr16
xchg
jle
mov
dec
daa
jmp
mov
dec
pop
and
jo
jbe
lods
and
test
jl
and
test
jns
dec
xchg
cmp
divb
or
mov
pop
es
ja
aaa
mov
push
jno
shll
outsb
aad
dec
sbb
add
pop
loop
in
xchg
repz
add
mov
mov
inc
stc
rcl
or
mov
or
lea
popl
mov
mov
or
in
add
and
add
js
loop
pop
dec
pop
pop
jo
xchg
out
sarb
and
cmp
push
aam
imul
add
adc
ds
adc
add
or
jp
pop
mov
ss
lret
cmp
pop
sti
shr
inc
pop
cli
pushf
insl
cmovae
jne
in
repz
inc
jne
dec
stos
dec
nop
pop
dec
xchg
clc
xchg
mov
pop
shrl
test
mov
arpl
mov
pop
pop
and
addr16
jne
bound
ljmp
fisttps
add
inc
mov
adc
lods
addr16
loop
push
and
stos
push
fcomp
mov
jmp
out
push
in
push
movsb
dec
add
in
and
adc
test
test
fcmovbe
mov
cmp
lcall
mov
pop
int3
leave
mov
outsb
xor
lock
test
sub
adc
dec
adcl
mov
cmp
xchg
cmc
aas
in
adc
inc
fisubs
sub
inc
add
sub
dec
and
ljmpw
push
aaa
data16
notl
jae
ficoms
loop
jbe
xchg
mov
pushf
test
aad
mov
mov
shl
mov
popf
mov
dec
loopne
jle
adc
insb
das
xor
and
in
daa
imul
sti
ss
test
dec
pop
cli
aas
jge
or
pop
int
out
repnz
mov
fcoms
test
je
mov
xchg
cmpsl
out
shll
mov
in
out
iret
sbb
mov
movsb
push
jne
popa
pop
out
jl
lea
sti
pop
fiaddl
rorb
dec
in
cmc
cmp
idivl
cmp
xor
cmp
sahf
cmp
fldl
mov
xlat
mov
ja
aaa
mov
cltd
push
xchg
mov
test
xchg
cld
fs
test
mov
push
and
push
aas
pop
push
enter
mov
fsubs
cld
mov
cmp
push
das
adc
clc
pop
cwtl
lods
les
push
fsubrs
dec
scas
or
and
cltd
or
xchg
adc
test
cmp
loop
in
push
xor
xor
ds
push
push
fsubp
addr16
mov
outsb
test
pusha
movsb
repnz
icebp
rcrl
sub
push
mov
sahf
and
sub
sbb
cwtl
sub
pop
arpl
pop
daa
pop
pop
pushf
lret
sub
adc
mov
loop
cmpsb
adc
ret
int
lea
fistps
fnstenv
cld
jmp
add
lahf
lods
xchg
repz
add
push
xchg
test
out
sub
lods
xchg
inc
and
fimuls
fs
out
int
insb
jg
cli
in
xchg
push
fsubrl
jae
cmp
mov
ljmp
inc
pop
gs
and
mov
or
jmp
xchg
pusha
jmp
mov
add
and
js
sbb
cmpsb
mov
sub
add
lcall
int3
xor
mov
jle
or
out
push
notb
imul
add
insb
roll
push
push
imul
push
dec
stc
jmp
inc
xchg
dec
and
ljmp
add
sti
pop
cld
mov
data16
sbbl
mov
es
push
lcall
jmp
inc
cmc
mov
lock
cmpsb
push
adc
cmpl
out
negl
test
pop
in
leave
fdivrs
in
adc
insl
fiadds
xchg
popf
bound
xchg
push
out
mov
dec
adc
or
cltd
add
push
cmp
in
imulb
subl
jae
pop
fst
out
movb
dec
ss
dec
sbb
in
cmp
mov
mov
dec
enter
sbb
jle
cmp
push
ficomps
mov
xlat
push
enter
insb
push
aam
rolb
mov
cmpsl
rcrb
lcall
mov
add
cmp
mov
mov
jnp
test
push
in
rorb
xor
popa
and
test
jg
dec
inc
out
leave
mov
lahf
stos
dec
ja
enter
dec
ficomps
fwait
sub
xor
cmpsb
ljmp
xchg
inc
mov
inc
shrl
mov
stos
and
imul
add
sub
lret
ds
int3
mov
out
hlt
ljmp
xchg
xor
les
dec
or
insb
dec
je
inc
sahf
xor
nop
dec
scas
sbb
jmp
or
pop
inc
mov
mov
and
add
scas
test
mov
mov
leave
jle
push
mov
cmp
movsl
es
jbe
mov
ret
lea
push
or
mov
cltd
or
ljmp
aam
pop
sub
test
int3
jl
das
mov
sbb
lcall
push
push
push
push
outsb
rcr
xor
xchg
mov
subl
xchg
ja
bound
sbb
subb
js
pop
shlw
jmp
imul
cmp
xchg
icebp
loop
negb
add
addr16
jb
cltd
dec
mov
sub
cmc
bound
outsl
fs
mov
xlat
push
pop
ret
xchg
or
leave
push
in
sub
jne
add
outsb
loopne
adc
inc
cmpsl
inc
or
rclb
clc
inc
cs
mov
mov
mov
repz
in
push
inc
loopne
aad
enter
sti
clc
lcall
pushl
sti
js
and
out
xlat
mov
loope
iret
negb
push
fcmovnb
lea
rol
mov
cmp
and
adc
sub
cmp
add
jge
aam
dec
in
fisttps
jnp
pop
movb
cmp
push
lahf
cs
dec
dec
les
mov
das
jns
xor
aaa
mov
mov
fs
addr16
daa
enter
out
lods
mov
dec
rcr
or
leave
sub
inc
mov
jmp
test
bound
enter
fstpt
sbb
ss
jno
mov
lds
xor
leave
std
popf
fisttps
popa
dec
test
xchg
mov
fcomps
xchg
mov
test
cs
jg
pop
and
mov
or
cmp
lret
inc
cmp
clc
and
fcmovbe
icebp
sub
dec
in
pop
add
mov
pop
mov
push
call
jns
push
inc
je
icebp
into
mov
in
xchg
daa
sub
jecxz
std
dec
lahf
sub
xchg
cld
mov
xorb
std
jne
aaa
mov
push
mov
dec
mov
lea
lea
push
imul
mov
push
sarb
lahf
imulb
scas
jns
jo
mull
fwait
mov
stc
pop
in
cmp
fld
adcl
xchg
stc
xor
dec
mov
test
push
int3
nop
and
lea
mov
dec
or
lods
cmp
adc
fcmovb
and
push
sbb
movl
clc
in
ret
popf
lds
inc
fwait
call
add
mov
clc
add
rep
push
enter
popa
sbb
jo
leave
hlt
and
sub
cmp
pop
lea
int3
sub
nop
outsb
mov
adc
mov
sub
pop
dec
aam
mov
dec
push
xor
fistpll
insl
daa
adc
frstor
les
mov
iret
movsl
rcr
mov
lahf
lcall
leave
mov
out
push
shlb
push
rorb
in
loope
mov
adc
fisubrl
lods
sub
or
sub
or
aam
repz
lock
dec
daa
xchg
faddl
aad
jbe
inc
jnp
in
mov
imul
pop
test
insb
inc
jle
in
push
je
sti
stos
pop
test
mov
jl
lret
movsb
and
sub
std
xor
mov
lods
in
test
sub
fidivrl
call
and
rolb
pop
lds
cli
sub
mov
pushf
gs
lahf
mov
inc
mov
cs
daa
sbb
lcall
sub
xchg
cld
call
mov
fbstp
int3
subl
sbb
into
stos
cmp
sbb
gs
inc
sub
and
jbe
adc
mov
add
imul
enter
pop
xor
scas
fisttps
test
sub
add
lods
in
adc
sub
dec
dec
adc
add
fistpl
divb
ds
out
popa
inc
jmp
pop
lock
jae
dec
cmp
pusha
insl
mov
cmp
fwait
sahf
push
test
idivl
adc
inc
insl
punpckldq
mov
sarb
movsl
in
pop
xchg
cmc
cwtl
cld
shll
cli
add
xchg
push
cmp
call
jle
mov
int3
jp
add
mov
adc
lret
jbe
pop
in
mov
dec
xlat
push
shll
mov
push
aam
in
adc
lahf
or
fldl
out
pop
mov
jne
or
loopew
dec
imul
or
shl
xor
dec
mov
xor
std
pop
enter
outsb
mov
dec
xor
mov
xlat
test
call
add
lahf
nop
mov
xchg
adc
es
xchg
mov
scas
lcall
xor
and
cmp
push
pop
mov
jecxz
aad
sbb
fs
addr16
xchg
fdivr
pop
in
icebp
aaa
loopne
sbb
mov
xor
pop
and
xchg
aam
pop
pop
sbb
cli
or
aad
mov
xchg
repz
testb
mov
add
scas
sbb
and
xor
and
pop
mov
add
cmpsl
roll
xchg
or
jg
out
loopne
insb
or
lret
hlt
cmp
jb
test
std
mov
and
jae
les
lods
xor
adc
test
jmp
es
adc
push
int
mov
mov
cltd
sub
sbb
mov
pop
mov
addb
dec
fisubs
ret
mov
test
sbb
jae
repnz
push
sub
adc
or
loop
push
or
or
cli
sub
stos
fsts
pop
or
xchg
fisttpll
and
inc
or
xchg
fldcw
mov
fadds
mov
xchg
addb
ret
fldcw
jns
xor
in
hlt
sub
nop
cs
xor
push
lods
daa
frstor
inc
pushf
dec
test
rcl
pushf
cmpsl
pop
xor
flds
add
sub
out
aad
mov
jge
jne
or
add
bound
or
cmp
sub
pusha
adc
xor
cmp
rclb
rorb
dec
xchg
and
ljmp
sub
inc
pop
mov
cmp
iret
nop
mov
int
addl
scas
rcrb
pusha
cli
repnz
lods
loope
adc
das
prefetch
or
sbb
leave
pop
sahf
daa
and
mov
and
push
imul
sbb
lock
clc
sbb
jmp
pop
push
stos
sub
or
push
fwait
mov
bound
adc
fstpl
and
data16
mov
adc
adc
pop
stos
scas
fdivl
stc
rorb
sub
lock
jmp
mov
or
inc
jne
xchg
sbb
ret
inc
dec
inc
xor
sub
pop
jbe
outsl
cli
lods
daa
test
sub
lret
sbb
mov
mov
sar
movsl
jbe
push
mov
std
out
mov
movsb
cmpsb
das
out
or
mov
je
fwait
sbb
icebp
xor
sbb
sbb
sbb
xor
and
pop
in
ret
xorl
out
pop
push
arpl
insl
scas
dec
jle
or
or
and
xor
push
cmc
pop
cmpsb
adc
and
adc
fsts
out
cmp
xchg
push
and
fwait
mov
xchg
add
inc
add
sahf
test
xchg
mov
jmp
add
lcall
add
stc
sub
mov
rcrb
push
mov
cmovnp
xlat
dec
dec
dec
cmp
xchg
add
pop
aas
jecxz
jnp
mov
imul
cmpl
leave
icebp
lret
adc
push
cli
mov
into
push
push
sub
pop
adc
cli
mov
stos
dec
daa
pop
xor
rorl
sbb
sub
sub
or
add
aas
xchg
push
leave
or
adc
sub
mov
rolb
mov
or
push
test
lock
sbbb
data16
add
test
lods
push
cmp
mov
mov
into
pop
xchg
cmp
dec
stos
cmp
pusha
inc
int
es
adc
bound
pop
mov
je
roll
mov
lahf
pop
dec
sbb
lods
push
xor
xor
sahf
or
lret
push
fnstenv
clc
outsb
mov
xorl
jle
insl
gs
lods
jl
lods
mov
cli
dec
jmp
orb
pop
inc
push
jb
ret
mov
ror
cmp
mov
push
and
xchg
lret
fs
das
and
jae
mov
aam
add
lahf
int
mov
mov
mov
mov
fs
xor
mov
ret
cmp
std
adc
ret
push
bound
xor
mov
pop
adc
mov
push
fs
or
jg
fbld
ret
add
cmp
and
mov
fimuls
cmp
rorb
and
loopne
addr16
and
push
add
imul
outsb
sbbl
aas
pop
mov
ret
dec
jl
clc
icebp
sbb
arpl
mov
mov
mov
jo
pop
or
mov
pop
mov
jb
out
testb
dec
xorl
xor
cmc
lret
add
mov
pop
mov
sti
or
popa
jnp
subl
cld
jb
int
adc
fisttpl
mov
in
adc
lret
mov
fldt
scas
push
add
ljmp
inc
loope
push
movsl
sahf
jle
add
outsl
add
push
pop
mov
in
cmp
or
mov
adc
pop
rcll
lods
mov
into
jmp
lcall
fnstsw
inc
inc
jo
lea
cmp
add
xor
fdivp
sti
jno
imul
fwait
aaa
int
lods
popf
mov
jecxz
inc
mov
stos
mov
fs
scas
fisttpll
data16
addb
test
les
mov
flds
xchg
sahf
sbb
dec
sbb
adc
loopne
subl
pop
in
rolb
cwtl
xor
pop
sbb
add
and
add
cld
xchg
rolb
rorl
cmp
inc
lea
jb
pop
dec
shlb
mov
push
outsb
xor
adc
cmp
pop
cmpsb
and
or
in
add
pop
fucomi
inc
dec
jl
outsb
stos
xchg
ljmp
out
or
xor
or
mov
and
leave
mov
cmc
xchg
in
cltd
mov
sbb
sbb
push
jecxz
gs
int
jl
mov
mov
movsb
clc
arpl
mov
sub
push
jbe
or
test
push
adc
mov
ror
jle
daa
ret
cwtl
mov
mov
scas
or
scas
imul
dec
pop
aam
das
aad
jne
es
sbb
xchg
xor
in
sub
push
popl
popa
mov
cs
mov
mov
call
dec
stos
mov
dec
jo
out
mov
mov
adc
lds
xorl
xlat
xchg
mov
jne
fisttpll
data16
out
jb
decb
and
cmpsl
sti
pop
mov
js
daa
and
push
into
in
iret
je
lcall
repz
jno
cmp
or
push
inc
add
jns
shlb
insl
sbb
outsb
cmp
ja
push
add
lcall
sbb
lcall
fs
sahf
mov
sbb
add
stc
adc
incb
mov
loop
adc
push
pushf
pusha
ja
fstp
mov
js
mov
and
ljmp
sbb
add
sarb
aam
push
mov
lret
repz
incb
filds
adc
test
jne
jnp
push
push
fwait
push
and
xor
fldl2t
cmp
ljmp
xchg
test
rcpps
mov
cmpsl
xchg
rcll
adc
mov
or
stos
test
lds
jp
and
push
adc
sbb
data16
sub
ficompl
pop
stc
fiadds
push
arpl
cli
dec
pusha
xchg
pusha
mov
lds
mov
stc
push
push
mov
repz
sub
fwait
dec
inc
inc
popa
ret
jne
dec
loop
adc
in
nop
mov
inc
add
clc
out
fldenv
lods
ss
rorl
xor
push
aaa
mov
fwait
adc
mov
cmpsl
mov
inc
jne
cld
mov
outsl
xchg
lods
and
out
out
adc
push
aaa
dec
lods
xchg
arpl
int
sub
aam
popf
jbe
lods
mov
jge
ss
lret
fisttpl
jbe
cmp
jne,pt
imul
or
adc
push
or
and
push
sarl
push
lret
loop
inc
xchg
cmp
mov
mov
mov
lock
add
dec
jmp
test
cmp
cmp
movl
bound
sbbl
push
lock
push
cmpsl
add
sbb
repnz
pop
jmp
fisttps
stc
cmp
lahf
popa
ret
stc
inc
scas
pusha
push
jle
cmpb
sub
jp
lret
mov
add
imul
repz
jae
jmp
lcall
movb
inc
jnp
nop
shl
pop
mov
aam
pop
rcll
cld
mov
std
adc
test
adc
pop
test
outsb
xor
ret
xor
imul
inc
pusha
dec
ja
addr16
pop
in
hlt
fnstsw
repz
movsb
sub
push
jg
add
call
jmp
nop
pushl
sti
jb
add
mov
testl
mov
pop
test
aas
cmc
aad
xor
scas
test
inc
cmpsl
ds
mov
mov
xchg
and
jecxz
loop
inc
pop
bound
mov
lahf
icebp
fisubl
dec
jae
inc
gs
add
xchg
sbb
adc
inc
pop
sub
and
adc
jnp
lods
jecxz
pop
push
imul
ret
and
xchg
loope
mov
out
inc
pop
cmp
fcmovbe
mov
inc
flds
mov
pop
push
cmp
jne
fsubrp
loop
call
push
and
cmpsl
pop
sti
divl
scas
xlat
dec
cmp
nop
and
pop
xor
inc
in
sub
mov
inc
cmpb
mov
cmp
jns
jo
je
cld
int3
rcl
xchg
cltd
lahf
mov
dec
jne
fstpl
lret
lock
or
mov
mov
in
call
pop
dec
shlb
out
test
dec
jl
pusha
inc
imul
popa
dec
add
jno
idivl
mov
addr16
inc
bound
add
jecxz
pop
sahf
into
mov
add
movsl
mov
or
arpl
int3
mov
lods
andl
repz
adc
dec
dec
lock
fidivrl
in
mov
idivb
scas
fwait
xor
or
lcall
ss
in
daa
ds
push
movsl
idiv
sbb
popa
ja
rorb
aam
push
push
clc
sbb
adc
push
sub
push
fdivr
dec
mov
in
or
jbe
pop
mov
cmpsl
mov
xor
js
fwait
loop
mov
adc
jno
mov
dec
push
and
sti
cwtl
or
sbb
or
in
cli
sub
adc
jp
jg
jb
int
sub
push
fisubl
enter
popf
dec
jmp
fwait
out
jo
les
jge
fldenv
fimull
sbb
test
scas
fcoms
ja
adc
or
sti
sahf
in
testb
inc
es
shl
sub
movsb
aam
and
push
loopne
in
cmp
pop
cmp
jmp
mov
fistpl
pop
cmp
aas
fsubs
fldcw
mov
test
loop
pop
lock
mov
cmpsl
fbstp
mov
and
push
lret
dec
iret
loopne
pop
sbb
fldl
insl
mov
and
in
mov
leave
daa
pop
imul
sub
scas
js
sub
cmc
cmp
fdivl
fiadds
ljmp
xor
cmp
pop
push
mov
pushf
inc
cli
dec
mov
sar
pop
cwtl
stos
pop
mov
test
imul
xor
mov
loopne
dec
cmp
clc
sub
mov
pop
outsl
push
dec
rcr
lcall
movsb
sub
adc
sbb
xchg
clc
stc
imul
jle
sub
xchg
or
cmp
scas
mov
sub
outsl
es
mov
imul
add
shlb
sbb
gs
xchg
dec
jmp
jl
leave
ljmp
in
jmp
mov
fnsave
shll
stos
scas
or
ds
out
sub
adc
lock
cmp
fimull
push
sub
out
inc
pop
mov
inc
shrb
popa
or
mov
sahf
pop
lret
ljmp
stos
pop
mov
fisubrs
enter
stos
jl
cmpsl
out
bound
sub
mov
add
test
or
mov
cmp
ret
jecxz
inc
repnz
cmpsb
xor
add
pushf
xchg
arpl
and
mov
mov
hlt
push
sbb
mov
push
daa
mov
pop
idivl
add
jo
les
and
pop
add
arpl
or
orl
dec
lods
xorl
popf
lods
movsl
mov
clc
cmc
call
ror
cltd
mov
add
fsubrs
dec
cwtl
in
xchg
out
in
lds
mov
xor
sbb
push
cwtl
repz
or
fnsave
add
js
xor
mov
push
popa
fcomps
lret
in
dec
mov
pop
sbb
neg
xchg
stos
push
mov
pop
xor
add
add
mov
cmp
cmpsl
xchg
lods
cmc
jns
lahf
sub
jb
jg
pusha
hlt
pop
leave
mov
cmp
push
lret
push
enter
aas
mov
mov
ljmp
mov
xchg
jge
inc
jns
or
pop
sbb
test
sub
push
xchg
xor
les
gs
cmp
lret
xorl
scas
psubb
jge
mov
pushf
rorb
pushf
xchg
popf
push
and
insl
and
stc
js
mov
xor
inc
loopne
jae
insl
inc
cmp
cwtl
add
sahf
jns
shlb
adc
mov
mov
pop
test
inc
or
imul
add
dec
inc
mov
jmp
pusha
mov
imul
xor
jp
push
sbb
or
aad
je
test
in
lea
shl
pushl
scas
cmp
lds
int3
sub
icebp
xchg
lahf
jne
pop
inc
sbb
dec
mov
xchg
mov
fwait
xor
and
lea
orl
mov
cmp
aaa
sbb
std
cmp
and
mov
jae
cs
movsl
fcmovnb
stos
in
xchg
push
cld
or
fdivrs
jb
xor
in
sti
sbb
repz
sbb
mov
mov
sbb
aam
mov
cmp
inc
xchg
push
cmp
das
addr16
ds
pushf
add
add
push
test
lock
stos
and
fmulp
dec
dec
test
cld
test
xor
movsb
push
mov
cmp
mov
cmp
inc
jno
push
inc
add
xlat
leave
in
fiadds
sahf
ljmp
rcrb
jge
icebp
push
ljmp
sti
dec
push
enter
adcl
nop
loope
faddl
and
fbld
add
or
dec
int
pop
or
xchg
cli
lret
push
icebp
mov
push
rorl
popa
dec
fsubl
or
fadds
jns
mov
jle
jne
arpl
push
mov
or
push
leave
sub
mov
lret
repnz
cmpsb
cltd
xor
idivl
in
xor
inc
out
aas
loope
mov
fwait
mov
sub
jl
mov
out
rcr
fmuls
in
cmpsl
add
mov
xor
sub
scas
xchg
rdpmc
aas
jge
mov
stos
dec
bnd
dec
xchg
mov
imull
scas
add
and
xlat
mov
test
arpl
mov
or
and
pop
arpl
push
cmp
mov
lock
cltd
fbld
or
inc
repnz
pop
mov
mov
stos
adc
pop
fsts
xchg
fnstsw
scas
in
inc
popf
sbb
iret
les
lods
leave
pushf
xchg
pop
jb
or
and
cmp
ret
int3
sub
int
hlt
mov
cmpsl
mov
and
data16
inc
imul
bound
fisttps
push
test
xchg
and
sti
movsl
push
xchg
pop
addr16
mov
sti
mov
xor
xchg
adc
icebp
adcb
fidivrl
and
mov
in
clc
loopne
mov
outsl
pop
xchg
daa
push
mov
out
or
push
bnd
repz
out
call
out
mov
bnd
add
xor
xchg
jecxz
fisubrl
push
and
push
jb
enter
loop
lds
jo
push
adcl
inc
push
hlt
xor
mov
jne
sub
inc
dec
mov
into
in
mov
jmp
or
movsl
and
xchg
cmpb
xor
sub
subb
ror
movb
cmp
and
cld
cs
in
insl
and
lea
imul
add
adc
or
loope
out
fnstenv
pop
mov
mov
cmpsb
aad
cli
ret
leave
iret
lahf
mov
mov
aad
in
cld
std
jno
filds
lds
or
or
dec
daa
pop
cmp
xor
jnp
xlat
and
xchg
mov
data16
cmp
aaa
xor
pusha
mov
sub
mov
cmp
into
das
sti
sub
stc
js
pusha
popa
test
sub
jne
fbstp
fstps
into
scas
add
stos
xor
cmpb
lock
push
aas
push
pop
or
mov
push
add
mov
push
mov
ret
add
jmp
push
push
inc
das
xlat
add
js
lock
jge
sar
out
imul
adc
out
push
sbb
movsb
call
xchg
jge
and
pop
xorb
testl
dec
ficompl
mov
cmp
push
test
cmp
mov
xor
int3
scas
mov
mov
or
in
outsl
int
mov
inc
cltd
cwtl
ret
sbb
inc
pop
pop
sarb
loop
add
xchg
stc
mov
nop
sub
xchg
push
jno
jge
pop
insl
jns
jmp
pop
shlb
pop
xor
cmp
and
rcrl
mov
push
into
adc
int3
insl
add
push
sub
rcr
xorps
dec
jl
pop
popf
pusha
loope
xchg
mulb
cmpsl
sub
shr
xor
jns
aad
out
bound
rcll
mov
add
stc
clc
mov
stos
jae
inc
nop
xor
cmp
aad
pop
jno
xchg
xor
add
fiaddl
lret
setg
xchg
int3
jno
dec
dec
xchg
jmp
xor
ljmp
mov
mov
mov
or
mov
push
imul
and
fnstcw
mov
insl
popa
lret
xor
jno
hlt
and
pushf
aad
aad
mov
or
dec
movsb
inc
cmp
decb
dec
pop
jle
xor
cmpl
xchg
das
add
jg
mov
and
jo
popa
lret
das
cmp
pop
sbb
jecxz
lea
mov
insl
xchg
frstor
aas
xor
test
add
inc
push
fists
icebp
mov
sub
dec
sub
aaa
es
mov
jl
popa
and
jl
in
mov
mov
pop
adc
mov
test
sahf
je
mov
and
sub
lea
push
jmp
int
int
and
add
push
mov
jge
stos
mov
repnz
in
pop
or
movsl
jge
cld
pop
leave
xor
or
cmpsl
into
inc
mov
xchg
cmpsl
notb
aas
stos
add
mov
jmp
xor
jnp
lcall
stc
insb
adc
pop
cli
js
popf
out
xchg
arpl
mulb
push
sbbb
jle
sbbl
iret
pop
add
ljmp
aad
xchg
or
int
mov
mov
inc
mov
imul
push
lods
dec
aam
out
adc
dec
xchg
cmpsl
popa
adc
dec
jne
jecxz
insb
and
mov
cmp
lret
xchg
or
jb
sub
and
xor
jns
mov
sbb
lock
push
adc
push
mov
loop
xchg
cmpsl
lea
or
push
fwait
cmp
jne
xchg
fsubp
mov
adc
stos
pop
xor
or
push
adc
pop
push
pop
inc
dec
fisttpll
dec
out
cmc
push
cmpsl
sbb
call
and
xor
notl
aas
cli
pop
stc
jb
adc
insb
or
ret
adc
shr
dec
stos
pop
sub
jle
xchg
scas
xchg
pop
dec
xchg
pop
dec
repz
pusha
shll
jle
ficomps
mov
cmpl
fs
es
sub
mov
and
sub
addl
in
call
movsl
inc
mov
cmp
jmp
movsl
or
push
mov
mov
dec
pop
fisttpl
or
jns
jo
cltd
xchg
js
sbb
fldt
push
inc
sub
scas
rcl
and
pop
jo
inc
cmp
mov
add
ljmp
je
jbe
jge
aas
js
loope
int3
or
aas
cmp
jecxz
mov
xor
lea
lcall
xchg
hlt
xor
push
cmc
push
nop
mov
movsb
lds
adc
xor
jle
and
fdivrs
cs
insb
ficompl
mov
sub
jo
js
cli
dec
xlat
cmp
mov
pushf
pop
xor
mov
xchg
cmp
mov
lods
push
insl
loope
jg
jns
notl
fstpl
movsl
mov
test
scas
int
sub
fsubrp
and
incl
ljmp
mov
push
mov
mov
in
scas
jae
rdmsr
and
jnp
outsl
insb
mov
mull
mov
cmp
shr
adc
ja
mov
movsl
ljmp
dec
addr16
sbb
in
cltd
das
call
jnp
fsubl
jecxz
enter
add
lcall
mov
and
fadd
cltd
jle
and
pop
in
xor
xchg
mov
jecxz
add
pop
mov
mov
ja
xor
je
inc
cld
push
sub
xchg
loope
movsb
adc
clc
pop
jnp
stc
add
inc
test
jnp
pop
xchg
pop
sub
push
std
adcb
das
push
stc
adc
mov
sbb
test
frstor
jns
pop
lds
outsb
inc
pop
push
cwtl
or
xor
addl
int
dec
adc
je
or
mov
adc
fcmovu
out
test
cli
xchg
fbld
fldt
inc
mov
add
xor
pop
fwait
dec
pop
mov
xchg
clc
sub
loop
lds
loope
lret
in
int
cltd
pop
into
popf
mov
sahf
loopne
jg
sub
out
adc
inc
dec
outsb
daa
out
out
fwait
xor
hlt
es
shll
mov
sbb
lea
mov
pop
jmp
lret
mov
lea
and
xor
stc
mov
iret
fwait
adc
test
roll
add
mov
dec
mov
xlat
mov
cmp
mov
push
or
aam
lret
aam
imul
jb
mov
jbe
jg
imul
test
jl
cwtl
popf
jb
inc
repz
lds
inc
test
rclb
addb
jne
push
xchg
hlt
adc
in
imul
sahf
scas
xchg
movsb
sbbl
or
ss
call
cmc
inc
push
or
notb
fwait
dec
jne
jb
sbb
stos
pusha
mov
inc
in
mov
xor
jmp
ret
push
adc
scas
jl
pop
xchg
mov
loopne
shrl
push
mov
nop
int3
lret
and
mov
mov
in
call
mov
addr16
mov
and
pop
rcll
mov
aas
test
adc
push
adc
fsubl
sbb
push
mov
mov
insl
dec
inc
push
lret
inc
mov
inc
repnz
out
rolb
xchg
mov
mov
lahf
loopne
inc
mov
pop
std
cltd
sbb
adc
je
dec
mov
popf
xlat
dec
imul
das
lcall
imul
pop
jno
fwait
push
aam
pushf
mov
sub
sahf
cmp
hlt
inc
jbe,pn
mov
lret
adc
jns
mov
sbb
in
push
xchg
cli
cmp
hlt
popf
mov
not
lcall
jmp
and
sarl
push
insl
push
mov
jns
sahf
push
xchg
sub
fxch
inc
fistps
jno
out
loop
pop
jno
sbb
das
loope
into
dec
rorb
test
outsb
out
call
daa
xchg
iret
leave
cmp
fnstenv
lret
scas
jle
or
fsts
jmp
mov
lds
jae
sub
fcomps
xchg
add
aas
loopne
adc
lock
outsb
jp
adc
or
push
ffreep
mov
adc
rcr
stos
stc
mov
push
mov
inc
xlat
lret
mov
pop
imul
or
jne
xor
sahf
into
xor
push
push
lcall
out
dec
mov
xchg
pusha
icebp
gs
jne
andl
inc
jl
dec
jo
cmp
jle
xchg
fincstp
out
jle
pushf
pop
lods
or
mov
and
imul
ja
sbb
cmpsl
push
out
ja
movsl
cs
push
pop
scas
daa
int
sbb
repnz
js
rcrb
mov
cmp
arpl
in
orl
mov
decl
xchg
xor
xchg
inc
xor
dec
out
sub
call
jl
outsl
iret
loopne
stos
cmp
mov
int3
mov
pop
lock
xlat
sub
arpl
cld
in
pop
cmp
cmpsl
adc
aam
ret
xor
aas
mov
jo
push
sbb
add
ds
cli
rorb
and
insb
push
int3
or
and
inc
dec
out
je
call
fs
mov
mov
stos
popa
inc
jnp
lods
push
lods
sti
mov
pop
fisttpl
andl
add
and
and
jne
pusha
mov
cmovs
mov
mov
mov
test
loope
sub
inc
add
sub
xchg
push
lock
jo
dec
cmp
dec
mov
outsl
inc
xor
jne
adc
jne
lcall
add
scas
push
xchg
cmpsl
add
push
or
jae
mov
jle
imul
mov
push
sub
sub
inc
rcr
cmp
inc
jmp
add
jp
cmp
mov
xchg
adc
scas
ds
lcall
adc
push
mov
aad
lock
loope
call
int3
sub
call
push
or
xchg
cmpsb
insl
add
pop
inc
aad
loope
mov
mov
xchg
add
out
push
add
xchg
rcl
int3
hlt
mov
call
and
lock
out
negl
cmp
das
stos
xchg
mov
jmp
sub
cld
xor
jecxz
or
test
cmp
mov
jns
shr
sbb
loope
mov
pop
jnp
mov
test
rorb
jg
out
push
popf
mov
fidivl
std
test
dec
and
outsb
push
mov
push
out
fmull
insl
ret
or
xchg
in
pop
mov
nop
lds
add
mov
sbb
clc
fwait
mov
bound
sahf
cwtl
fwait
aas
adc
xchg
test
sub
pushf
lret
cmp
add
addr16
out
outsb
mov
popf
loop
sub
aaa
testl
movsb
aam
lods
nop
push
mov
adc
mov
nop
stos
into
mov
mov
ret
xor
adc
mov
ja
imul
arpl
pop
add
mov
push
jg
daa
lods
mov
inc
jp
xchg
lcall
add
out
movsb
push
jecxz
aas
add
and
jnp
adc
and
sbb
mov
ds
cltd
adc
nop
lahf
scas
cmp
cmp
jmp
or
push
or
lahf
mov
test
decl
dec
dec
jle
dec
shll
subl
jns
into
iret
jecxz
out
mov
push
adc
leave
pop
inc
push
jp
std
enter
push
sahf
jns
lock
push
rol
cli
popw
mov
cmp
les
in
loop
cmp
mov
out
sub
cmp
cs
dec
jl
sbb
jb
sub
addr16
xchg
mov
iret
dec
cmp
popl
and
inc
or
dec
push
cltd
jbe
inc
loop
jle
in
mov
jp
push
xor
push
sahf
add
push
cwtl
cld
inc
enter
jb
sbb
test
dec
mov
sbb
inc
incb
pusha
leave
cmp
xchg
hlt
xor
sub
cmp
popa
enter
jnp
jge
je
cmc
pop
xor
sahf
int
pusha
adc
push
mov
iret
jmp
jp
loop
pop
cld
sub
hlt
fstpl
test
add
push
movsb
jno
push
aad
in
jns
mov
xorl
es
addb
and
outsb
sbb
jle
xor
jmp
popa
dec
xlat
aam
nop
mov
loop
cmc
jecxz
adc
cs
ja
fucomi
mov
fsts
js
repnz
mov
sub
aad
bnd
xlat
and
push
imul
fwait
movb
test
stc
lds
push
rorl
pushf
repnz
cmp
and
mov
xor
decb
push
jp
cmc
imul
lcall
fwait
mov
jnp
in
mov
inc
in
cmp
cmpb
gs
mov
cmp
adc
mov
mov
ss
enter
ja
test
jbe
mov
sbb
lds
ret
inc
xchg
bswap
xchg
jo
pop
into
dec
push
pop
out
jecxz
arpl
jl
adc
sbb
xlat
lea
sub
insl
sub
pushf
xor
mov
iret
jb
mov
xor
mov
xchg
ljmp
dec
loop
lods
testl
lods
lret
clc
sahf
hlt
mov
cmpsl
cmpl
add
mov
test
movsb
push
add
cmp
or
xchg
inc
icebp
inc
aaa
xor
inc
push
jl
lea
enter
xchg
fwait
cli
cli
mov
mov
test
push
pop
or
ljmp
xchg
cmpsl
jge,pn
jecxz
inc
sub
push
inc
orb
pop
leave
aam
dec
push
aad
push
pop
and
xor
pop
orb
xchg
jecxz
pop
in
adc
loope
jns
aaa
cmp
pop
shlb
mov
and
jns
fdiv
shrb
mov
iret
xor
jb
jno
lock
mov
sbb
xor
push
dec
lahf
sbb
add
pop
lds
fildll
cmpsl
std
cmpsb
ljmp
fsts
xchg
dec
ret
int
lahf
test
testl
repnz
repnz
xchg
jg
imul
dec
push
xchg
cmp
push
roll
sub
out
sub
xchg
jne
lcall
inc
or
orl
les
test
jno
mov
push
test
aam
hlt
pop
lcall
mov
inc
and
and
pop
xorb
fwait
or
iret
sub
cwtl
push
pop
fucom
or
sarb
icebp
outsb
mov
andl
sub
mov
xchg
ret
cmp
xchg
dec
jg
ja
mov
out
mov
mov
fnstcw
mov
cmp
dec
xchg
adc
loope
and
sub
jne
jmp
sbb
mov
stos
test
jae
mov
neg
adc
pop
mov
and
test
ja
js
in
xor
pop
jb
sub
xor
cmpl
in
or
adc
rcl
mov
xchg
es
mov
cmp
pop
inc
push
mov
xchg
xchg
and
mov
lret
push
add
mov
nop
loopne
push
add
and
inc
sbb
iret
roll
cmp
inc
cmp
testb
xor
jl
sub
mov
cmpsl
fiaddl
and
jl
xchg
adc
or
cmp
pop
adc
movsb
enter
cmp
and
inc
dec
fiadds
ljmp
mov
mov
dec
lahf
hlt
in
es
pop
inc
inc
pusha
in
pop
mov
pop
mov
loopne
fincstp
fildll
dec
decb
mov
xor
sub
into
mov
sub
mov
xchg
adc
lea
scas
sbb
pop
jb
xchg
push
dec
nop
cmp
mov
mov
xchg
in
push
jb
lcall
inc
cmp
pop
sbb
push
mov
xor
xchg
int3
nop
xlat
sbb
scas
jl
pop
xchg
into
push
pop
pop
pusha
or
or
daa
aam
jbe
push
sbb
jo
push
test
xchg
and
sub
and
and
aas
test
scas
pushf
xchg
mov
lds
lea
sbb
shl
jle
or
sub
leave
shl
hlt
mov
jns
pop
pop
out
dec
in
jo
daa
call
pushf
popa
adc
insl
lret
pop
shll
rclb
mov
push
outsl
lahf
jne
mov
push
imul
xchg
jbe
adc
jns
and
adc
outsl
adc
adc
scas
push
push
push
fisubrs
into
sarl
jbe
inc
pop
movsb
mov
cmp
out
sbbb
adcb
jbe
loope
jbe
xchg
jle
lds
out
sub
and
xchg
sub
inc
or
testb
adc
push
fiadds
test
push
in
mov
jl
filds
cmp
loopne
mov
mov
sub
sub
push
xor
aad
into
ffree
xchg
insb
cmpl
loope
repz
xchg
pushf
push
cld
scas
fnsave
sbb
inc
xor
out
mov
mov
gs
push
out
es
inc
pop
cmp
aaa
xor
push
xor
cmp
xchg
or
jl
out
pop
xor
or
xchg
seto
das
inc
and
pushf
cmp
xor
jmp
outsb
mov
mov
clc
dec
lods
fdivl
cmpsl
lret
test
out
xor
push
xchg
fistps
fcmovnu
jo
inc
dec
xchg
std
xchg
dec
cmc
jmp
sbb
push
into
mov
push
jp
lret
in
pop
push
push
or
push
lods
xchg
or
push
jg
mov
scas
test
rcr
imul
sbb
mov
push
cmpsb
leave
hlt
test
pop
mov
ss
cwtl
movsb
push
bound
aaa
adc
test
std
lods
sub
or
mov
xchg
sbb
xor
xlat
cli
xchg
cmp
pop
popf
cmpsb
sbb
sub
and
adc
clc
push
aad
cmp
fwait
mov
scas
mov
dec
xchg
xchg
data16
std
shlb
mulb
in
hlt
adc
add
cwtl
push
jbe
jbe
mov
pop
test
cmp
decl
push
sti
jge
popf
jecxz
mov
jbe
jns
movsl
pop
imul
jle
adc
add
lock
or
insl
sbb
cmpsb
mov
xor
push
xchg
test
cmp
adc
xabort
out
mov
leave
inc
mov
lods
bound
je
and
stos
lret
xor
es
push
mov
mov
xchg
insl
loope
ret
lret
xchg
push
adc
scas
frstor
ret
lret
pop
xchg
lea
jle
cmpsl
ret
rcrb
xchg
movsl
jl
and
int3
sub
fcoml
mov
and
fdivs
mov
into
pop
or
pop
add
dec
mov
outsl
fisttpl
and
and
out
setns
push
or
hlt
xchg
jg
or
inc
pop
ficoml
dec
repz
pop
movsl
cmp
ss
pop
xchg
jno
test
push
daa
gs
stc
sbb
call
dec
sti
bound
hlt
out
add
stos
and
push
scas
xchg
imul
mov
cmp
mov
push
outsb
cmpsl
add
std
mov
les
xor
out
in
in
les
test
ret
andb
inc
bound
data16
add
rcll
adc
and
lock
out
jo
test
adc
xchg
insb
arpl
cld
aam
out
push
loopne
xor
repz
ljmp
cmpsl
rcrb
dec
iret
icebp
and
cwtl
test
test
sub
mov
cmpb
pop
inc
mov
clc
jmp
jae
popf
movsl
mov
cmp
pop
lods
xor
movsl
sub
std
fistps
cwtl
shlb
jge
clc
xchg
and
xchg
sbb
dec
push
enter
popa
mov
mov
mov
fwait
xchg
pop
xor
mov
or
push
cmpsb
dec
jae
push
mov
shrb
fld
arpl
add
add
test
int3
sub
std
pop
or
cld
repnz
cmp
inc
mov
mov
mov
add
mov
jo
xor
imul
inc
jo
les
jp
and
jl
add
jns
and
mov
mov
std
add
scas
pushf
adc
mov
mov
insl
xchg
mov
cmc
mov
mov
mov
in
push
sub
lcall
dec
movsl
sub
or
or
inc
push
mov
mov
jecxz
mov
movsl
or
lds
rorb
sub
sbb
adc
int3
scas
add
mov
leave
fldt
imul
add
icebp
pop
push
mov
jbe
mov
cmp
ret
pavgb
rcrb
xchg
fidivl
repz
pusha
jge
jmp
imul
push
xlat
push
cmp
shrl
in
xchg
jne
into
mov
xor
jns
daa
out
mov
ja
test
imul
and
fadds
sti
mov
lea
add
and
pop
and
jmp
jb
test
testl
push
dec
mov
push
pop
shlb
sti
je
dec
sub
sub
jno
adc
enter
push
adc
sub
push
or
cmp
std
dec
addr16
test
cmc
and
das
xchg
jnp
je
mov
sbb
jle
insb
mov
mov
mov
mov
cld
mov
int3
adc
incl
or
gs
or
jne
lret
dec
or
pop
cmpsl
mov
push
inc
leave
xor
pop
adc
mov
lods
dec
cmc
rcrb
mov
and
and
repz
push
push
push
ficoml
inc
rol
push
mov
pop
sub
enter
in
lock
xchg
imul
mov
sub
adc
jmp
push
repnz
mov
out
and
push
sahf
add
dec
lock
aad
rclb
out
sbb
pop
out
mov
cmp
rcll
add
mov
add
popfw
cs
fisttpl
push
cmp
adcb
xchg
sub
add
addr16
out
pop
mov
int
clc
mov
pop
in
mov
lcall
cmpsl
push
jmp
cwtl
stc
pop
pop
ficoms
dec
xor
sbb
push
xor
bound
jmp
imul
jno
movsl
cmp
das
shll
push
imul
xor
xchg
je
std
push
aaa
xor
add
stos
add
ret
pop
push
cmc
and
cmpsl
aas
mov
jne
pop
pop
fnstsw
xchg
mov
ss
mov
jno
js
icebp
mov
dec
jne
cmc
sbb
mov
shll
mov
les
push
movsl
jle
cmp
addl
sub
sub
lods
push
popf
push
mov
cmp
cmpsb
mov
loop
imull
lahf
xchg
push
movsl
sbb
mov
lcall
loope
dec
cmpsl
or
inc
xchg
inc
mov
leave
cltd
add
fistl
call
fdivrl
jmp
mov
jge
rol
mov
imul
and
mov
imul
mov
mov
jl
aad
sbb
jno
or
xchg
xchg
pop
jp
ret
js
mov
cmp
fs
fisttpl
cmpsl
or
cmpsb
sbb
jns
add
insb
cld
cmp
aas
roll
pop
aaa
mov
insl
jecxz
inc
jmp
mov
sub
lock
dec
and
fiaddl
iret
cwtl
xchg
lret
inc
fldcw
loope
or
pushf
mov
xlat
mov
jb
or
out
sti
sti
sbb
push
jo
mov
data16
iret
jnp
loopne
add
pop
add
push
xchg
popl
push
iret
push
vmovupd
jbe
xlat
pop
lea
mov
test
push
int
ficomps
cmpl
mov
or
or
fimuls
lds
sbb
sbb
mov
cmpsb
sub
pop
jbe
pushl
push
dec
mov
or
movsl
incb
outsb
add
in
pop
push
sbb
shrb
sti
lods
inc
cld
jecxz
fists
lea
pop
mov
jns
xor
mov
pop
push
add
insl
or
adc
std
push
jne
xor
into
push
xchg
or
dec
iret
sbb
stc
and
sub
stos
cld
mov
cld
es
cmp
push
cli
or
add
sbb
push
dec
and
xchg
add
sub
int
mov
inc
xor
pop
or
dec
test
mov
mov
idivl
mov
jne
shlb
jne
jge
inc
or
mov
sbb
xor
push
repz
je
sbb
cs
xor
pop
sub
lahf
inc
xor
in
faddp
das
rcll
mul
fwait
adcl
sub
test
jecxz
je
fbstp
cli
lock
and
ss
mov
outsl
jmp
mov
in
xor
sahf
mov
cwtl
leave
hlt
dec
and
aam
jge
or
mov
es
imul
xchg
leave
call
aam
repz
inc
ljmp
mov
dec
cld
les
sbb
mov
cltd
cltd
mov
sbb
mov
jmp
mov
xchg
aas
or
adc
insb
and
aam
mov
andl
ja
sub
jg
sub
les
aaa
push
inc
icebp
ret
xchg
lret
or
mov
pop
xchg
lahf
cmp
jp
add
sbb
xor
sbb
nop
gs
or
jecxz
scas
push
jns
scas
xor
push
jle
sti
dec
mov
add
sub
xchg
dec
xor
sbb
or
or
sbb
jae
sarb
dec
mov
dec
mov
jmp
inc
inc
push
xor
ret
sub
push
jb
test
cmp
lahf
je
stc
mov
int
jmp
lcall
cmc
adc
daa
inc
or
les
daa
and
lcall
nop
test
mov
inc
pop
fld
sbb
aad
adc
xlat
sbb
adc
lods
pop
push
xor
scas
mov
jle
dec
jbe
lods
movsb
or
clc
loop
mov
stos
mov
lahf
xchg
movsl
lea
fcoms
and
in
sbb
stc
mov
mov
enter
lret
aam
bound
loope
sahf
push
xchg
xor
jae
mov
icebp
movsl
in
fidivrs
xchg
cmp
cmp
pop
jg
jge
sarb
fistps
inc
mov
mov
jge
into
mov
push
mov
jne
mov
add
test
jnp
cmp
mov
test
rorb
aam
cmc
lds
int3
ret
xchg
push
test
fs
adc
pop
insb
mov
xchg
subb
adc
xlat
mov
scas
adc
cmp
out
cli
fnsave
inc
jae
sbb
xchg
pusha
test
dec
xchg
sub
jno
pop
cmc
leave
and
ret
mov
push
lods
rcr
push
sbb
out
sti
ja
xchg
push
addr16
pop
mov
icebp
push
outsb
xor
fwait
mov
ret
inc
push
sbb
xchg
and
jmp
stos
cwtl
inc
sbb
sahf
add
shlb
jle
sarb
mov
testb
cwtd
mov
mov
lcall
mov
cli
repz
mov
cwtl
cs
clc
shlb
jecxz
mov
pop
push
sar
loopne
jl
add
adc
fsubrs
repz
std
movsb
pop
push
les
jge
into
loopne
or
cwtl
mov
add
mov
adc
push
popa
sbb
sub
xor
and
push
pop
add
push
pop
inc
enter
sti
aaa
xchg
cmc
in
jbe
js
mov
cmp
outsb
lret
imul
and
pop
mov
cmp
xchg
flds
adc
sti
fldcw
sbbb
cmp
push
negb
cmp
cmp
loope
out
pop
ret
js
shl
pop
cmpsb
int3
cmp
stc
cld
mov
pop
bound
jno
xor
faddl
sub
aad
push
loope
lret
lods
inc
cli
cmpb
clc
int
add
stc
movsb
and
xor
jecxz
xor
or
xchg
cmpsl
inc
int
push
ss
xchg
mov
das
lds
outsl
pusha
mov
mov
mov
bound
lahf
mov
movsl
jmp
pop
push
jge
cmp
sub
push
dec
dec
mov
int3
jno
xchg
mov
or
jo
inc
in
cmp
sub
lock
jge
repnz
lock
sbb
xchg
and
add
jl
mov
push
add
jnp
lods
sub
mov
inc
pop
or
fstl
jmp
in
insl
fxch
in
jle
iret
push
push
inc
and
call
push
stc
iret
iret
aam
es
mov
stos
jecxz
mov
dec
lds
jne
xchg
sub
or
cmp
push
cmp
inc
stos
and
adc
pop
rolb
lret
sub
nop
pop
xchg
cmpsb
cmc
movsl
add
jo
jne
mov
xor
push
pop
jle
aas
jp
mov
das
das
sbb
rcll
dec
pop
insb
arpl
in
aam
lret
rorl
mov
dec
jnp
aam
je
mov
add
and
mov
test
sub
xor
xor
in
push
adc
jle
or
push
nop
shl
xlat
pusha
jbe
in
frstor
in
in
cli
mov
in
sub
jnp
jns
jp
adc
subl
lret
jmp
fcompl
adcb
inc
ret
pop
xor
rorl
mov
imul
cmp
adc
into
ret
aam
xchg
jb
dec
bound
lods
lock
xor
mov
hlt
sti
lods
inc
lods
sub
mov
xchg
cmp
mov
mov
testb
lea
xchg
jne
jmp
inc
mov
lahf
pop
adc
in
or
call
inc
repz
aam
lds
mov
sub
icebp
imul
mov
ljmp
fildl
in
cmp
push
ljmp
loopne
mov
fadds
cmp
lret
dec
inc
fidivl
cli
aas
cmpsb
mov
test
les
movsb
xchg
xchg
sub
or
adc
movsl
sub
pop
jg
outsb
mov
call
inc
loope
xchg
push
xor
sahf
xor
ljmp
shl
js
push
shl
mov
jnp
ret
push
pop
jge
jg
xchg
sbb
in
lock
cmpsl
dec
cmpl
test
push
add
xchg
into
pop
int3
jns
push
jns
ret
adc
lret
inc
push
or
pop
xchg
scas
pop
rcl
dec
inc
fimuls
aad
lds
mov
mov
jle
mov
cltd
add
or
cltd
dec
out
shl
fwait
adc
sub
aaa
or
arpl
adc
stc
jmp
or
sbb
push
add
insl
lds
inc
aas
test
sbb
cmp
enter
jbe
mov
dec
xor
xor
cltd
pmuludq
les
aas
xor
sti
fistps
mull
jns
and
xor
pop
cmp
fnsave
stos
out
cwtl
mov
lret
sbb
cmpsl
aaa
les
mov
mov
or
push
inc
inc
jmp
rorb
or
push
mov
out
sbb
pop
pusha
in
mov
xchg
addr16
jge
pop
xchg
dec
push
xor
ret
xchg
xor
jne
xchg
dec
push
and
imul
cld
or
push
mov
imull
push
push
in
into
mov
sbb
and
movsl
popf
in
sbb
lret
mov
leave
cmp
fstpl
fucom
mov
dec
xchg
divb
imul
cmpl
mov
gs
pop
pop
popa
test
pop
lcall
fsubl
loopne
lret
push
in
and
xchg
sbb
fcoms
lss
jo
mov
in
ds
ljmp
sub
aas
aas
and
lret
loop
xorb
pop
or
faddl
xchg
lahf
sbb
adc
out
push
mov
jno
mov
or
addr16
mov
shll
sbb
nop
pop
cld
or
movsl
popf
lds
push
sarb
or
push
hlt
lahf
push
xchg
fs
and
push
les
out
mov
pop
pop
jne
ds
sbbl
imull
xor
repnz
dec
inc
pop
mov
fwait
inc
outsl
jne
ja
xor
int3
pop
inc
pop
test
mov
cmp
xor
in
cltd
pop
sbb
mov
lcall
mov
mov
or
hlt
out
in
add
push
mov
cmp
bound
ja
cmovne
sub
pop
mov
jb
sbb
pop
add
mov
push
push
sbb
insl
add
test
stc
aaa
cmp
cmp
push
incl
jp
loop
cmp
pop
mov
aam
in
mov
add
xchg
mov
pop
jne
std
jle
lods
mov
and
fs
sub
repnz
test
push
add
cmc
mov
push
shll
sbb
cmp
dec
sub
pop
pop
cmp
pushf
test
ljmp
inc
and
xchg
cli
inc
jae
aad
je
sub
mov
lahf
dec
pushl
xchg
xor
js
test
inc
cmp
inc
out
mov
aas
sub
loopne
cmp
lds
jg
lret
xor
push
es
mov
sbb
pushf
lods
jge
and
sbbl
inc
xchg
dec
xor
mov
sbb
fwait
cltd
mov
mov
pop
clc
add
jge
int3
pusha
jmp
loopne
insb
adc
mov
and
aad
loope
jg
jae
fidivrs
fsub
push
aad
add
in
ret
ror
mov
inc
cmp
scas
in
call
and
and
mov
push
push
imul
adc
push
ret
adc
jnp
adc
ja
jp
imul
jns
pop
push
fimuls
push
jg
xor
imul
mov
pusha
xchg
adc
into
aam
jo
inc
mov
jbe
div
sub
jg
mov
in
mov
sbb
shlb
pop
push
or
pop
push
push
jmp
sub
jo
push
jnp
fildl
aad
fmuls
mov
std
pop
xchg
pusha
jecxz
jp
sahf
out
dec
out
and
mov
lret
popa
ficompl
sbb
adc
jo
pusha
add
stc
add
mov
sbb
test
clc
sbb
test
mov
mov
mov
mov
into
pusha
dec
test
xchg
xlat
mov
xchg
in
mov
cmpsl
sbb
and
add
inc
mov
adc
test
jne
sub
ret
xchg
dec
lcall
and
lret
loopne
inc
push
mov
push
int
and
outsl
fisttpll
push
orb
pop
sbb
stos
mov
cli
clc
pop
popf
cs
mov
lahf
add
adc
je
bound
into
scas
mov
xchg
xchg
pop
scas
mov
fs
xchg
pushf
pop
test
cltd
fbstp
push
mov
mov
jge
push
ret
jo
ss
mov
in
inc
fs
or
xlat
lock
aad
sub
and
leave
cwtl
hlt
fsubl
cli
push
sbb
call
push
aad
mov
sbb
mov
adc
inc
aam
mov
loopne
lcall
insl
adc
sbb
jno
sub
fidivrs
sub
stos
sahf
test
popf
sbb
testl
sbb
ljmp
rorb
gs
test
push
or
cmpsb
jo
sbb
sub
sbb
insl
repz
clc
or
inc
outsb
mov
test
inc
dec
test
leave
in
sbb
jne
xchg
lods
out
scas
xor
mov
rcrl
inc
ja
sub
icebp
mov
int
popf
lods
push
out
stos
mov
ja
mov
gs
in
jne
add
adc
mov
xchg
dec
dec
shlb
imul
push
pop
iret
push
add
dec
mov
jmp
das
xor
cmp
mulb
outsl
jl
xor
ds
hlt
mov
mov
xchg
xor
push
or
imul
push
in
dec
hlt
add
pop
jns
rclb
clts
outsb
popa
negb
dec
xchg
lea
sar
adc
fwait
and
lds
cmp
mov
push
enter
cwtl
call
in
jno
xor
adc
fcoml
mov
repnz
data16
testb
rcrb
in
dec
mov
mov
xor
add
insl
sbb
sti
adc
aaa
or
aas
mov
leave
into
xor
or
std
imul
push
push
inc
imul
mov
mov
mov
xor
and
xor
imul
push
mov
out
ljmp
fnsave
cltd
push
bound
dec
mov
fmuls
mov
push
mov
shll
xor
mov
xchg
in
or
mov
dec
js
test
shll
popf
scas
std
xor
cwtl
inc
dec
and
dec
lcall
ds
movq
fwait
and
pop
inc
inc
jno
inc
sbb
mov
mov
fisttps
ds
cld
out
jle
cs
jl
gs
enter
out
out
cmp
pop
sets
jnp
xor
add
adc
test
mov
lds
out
push
cmpsl
jb
sbbb
jns
dec
jecxz
or
sbb
rcll
or
sub
inc
imul
lea
lods
hlt
cmpsl
lret
fildl
aam
pop
or
dec
gs
jae,pn
xchg
push
jle
leave
and
dec
push
sub
out
pop
sahf
movsl
and
icebp
pop
jecxz
loope
call
inc
popa
rolb
mov
push
pop
dec
pop
mov
out
mov
hlt
je
push
jb
or
mov
sub
sbb
push
loope
sbb
mov
mov
push
mov
rorl
push
adc
xor
sarb
pop
jb
outsb
pop
push
xlat
subb
push
orb
pop
mov
pop
inc
out
sbb
rolb
pop
test
dec
dec
aam
out
andb
mov
and
cmp
jmp
into
mov
xor
iret
cmp
xchg
xor
dec
or
adc
nop
add
jbe
dec
cli
iret
fbld
and
fs
fistpl
pop
push
xchg
sbb
dec
les
fcompl
jnp
jno
inc
vprotq
push
and
cs
jmp
push
sbb
addr16
jl
out
mov
mov
lock
rorl
inc
aaa
sbb
outsb
fiadds
cwtl
sbb
or
and
add
decb
push
lods
sarb
fistpll
gs
push
cmp
add
roll
xor
ljmp
cmpsl
sbb
imul
cmp
inc
add
inc
aam
into
sbb
ret
fwait
loop
cs
jp
pop
mov
inc
mov
add
and
mov
mov
dec
and
jmp
js
mov
in
pop
aaa
cmp
in
jecxz
cld
rol
sub
dec
stos
jl
filds
loop,pn
int
jl
pop
outsl
jbe
inc
xor
jo
push
xchg
inc
stc
mov
into
repz
and
popa
sbb
btr
cmp
mull
and
and
imul
push
pop
push
daa
mov
outsb
push
sub
adc
pop
hlt
fisttpl
test
push
sub
sub
in
or
ja
sub
mov
lock
push
inc
xor
hlt
mov
ja
into
int
pop
sbb
push
inc
movsl
add
sub
mov
adc
inc
into
dec
test
outsb
pusha
inc
or
pusha
mov
pushl
sbb
mov
in
adc
lods
sub
and
clc
mov
mov
adc
andnps
add
ret
ret
andps
clc
mov
jmp
idiv
ret
shll
iret
pusha
dec
int
fcmovu
jne
ficoml
mov
cmp
outsb
pushf
in
test
mov
cmpsl
cltd
popf
in
loopne
pop
lods
dec
push
push
aam
fwait
test
inc
nop
pushf
jbe
incl
test
add
mov
sub
aam
jl
test
and
push
fdivrl
int3
cmpsb
lds
add
hlt
pop
dec
cld
pop
out
fisubrs
mov
cmpsl
push
shll
test
sar
mov
sub
lea
pop
sbb
rorb
lret
enter
pop
mov
mov
leave
call
xchg
mov
jg
push
hlt
fisubl
faddl
mov
out
inc
or
es
sub
cmpsb
js
pop
xlat
inc
ds
mov
mov
je
push
push
sbb
insb
dec
cmp
leave
addr16
jl
pop
decl
lods
xor
adc
add
inc
pop
adc
and
push
and
mov
xchg
call
jecxz
es
dec
pop
cmpsb
rol
sub
inc
in
sbb
cli
sbb
push
xchg
mov
sub
cmp
movsb
mov
pop
sbb
or
mov
xor
jmp
jns
arpl
mov
repnz
add
iret
add
movsl
dec
push
mov
xchg
imul
add
and
mov
and
push
push
mov
adc
jno
cmp
cmpsl
add
das
test
jle
loop
std
aad
cmp
aaa
dec
bound
pop
lock
inc
pop
aam
pop
jp
jle
xor
xor
mov
stc
pushf
leave
cwtl
mov
rcrl
add
aam
push
scas
cwtl
aaa
fbstp
sub
push
push
inc
mov
mov
jae
pop
or
sahf
xchg
test
xchg
stos
ljmp
pop
stos
push
addb
cs
mov
cmpsb
adc
jne
xchg
inc
scas
imul
dec
mov
bound
push
sub
rcrb
movl
out
es
sti
cmp
mov
dec
test
jg
cli
int
mov
push
mov
xchg
mov
testl
insb
mov
shrl
inc
fnstenv
arpl
jae
shlb
xchg
xchg
cwtl
mov
mov
add
dec
and
push
jae
push
xchg
es
jnp
pop
nop
cltd
fcomps
cmp
push
pop
lret
jmp
fdivrs
stc
loop
mov
in
out
jno
push
pop
adc
ret
push
mov
xchg
lods
mov
mov
cmpsb
sarb
setb
add
dec
pop
insl
lds
add
mov
xchg
dec
inc
movsb
ret
pop
mov
jg
adc
push
adc
cmp
xor
movsb
fisttpll
stos
xor
xor
cmp
jecxz
imul
test
push
mov
aas
xchg
lea
fisubrl
sbb
mov
test
xor
add
movsl
into
sub
push
jle
mov
sahf
sbb
lods
out
adc
or
movsl
push
and
adc
mov
imul
outsb
lods
js
jl,pt
dec
inc
mov
orl
and
adc
mov
push
lods
sbb
push
add
adc
aaa
mov
and
mov
dec
lahf
stos
insb
sbb
je
mov
sbb
cmp
xchg
dec
sub
and
mov
and
nop
push
xor
adc
aas
mov
jae
lds
mov
jbe
xchg
and
repnz
push
adc
push
mov
pop
adc
mov
lock
inc
adc
cmpsl
fadds
movsb
push
cmp
jns
clc
inc
mov
lret
push
mov
movsb
sbb
in
inc
movb
cli
outsb
data16
arpl
jmp
sbb
inc
and
mov
test
push
into
sbb
rcl
repnz
outsl
adc
jmp
fiadds
adcl
scas
sub
push
call
adc
and
xor
sub
dec
ljmp
xor
add
inc
sub
shrb
pushf
and
mov
and
movsl
mov
xor
jns
mov
add
addr16
stos
cmc
mov
pop
ss
rol
mov
aam
pop
in
xor
imul
mov
decb
xchg
in
imul
or
lods
test
sub
pushf
out
mov
xchg
les
stc
xchg
dec
jl
jecxz
ret
jecxz
test
mov
dec
add
int3
xor
and
imul
xor
jge
dec
jg
cmpl
mov
pop
sti
loop
div
int
sahf
bound
mov
sbb
insl
sbb
lahf
mov
add
in
xor
movsb
add
leave
shrl
adc
push
pop
enter
cmp
or
pop
push
mov
jns
and
lcall
push
sub
inc
xlat
pop
push
je
adc
insl
cmp
jns
or
mov
bound
add
cltd
rcrl
fcmovnb
mov
and
mov
push
sahf
inc
cmp
pop
mov
and
mov
xor
dec
mov
int3
std
dec
mov
adcl
push
mov
dec
jmp
and
dec
and
or
xchg
and
clc
shl
js
sbb
cmp
ljmp
rcrb
mov
xchg
inc
jp
mov
push
scas
out
sbb
ljmp
xor
inc
sbb
mov
pop
idivb
mov
arpl
sub
mov
fidivrl
mov
mov
or
ljmp
call
inc
pop
xorl
pop
mov
mov
mov
pop
dec
jns
arpl
out
jnp
add
push
xchg
je
fcomps
xchg
sbb
sbb
aaa
dec
shlb
xor
dec
jmp
or
neg
shl
movsb
inc
in
add
adc
int
add
jmp
jecxz
pop
mov
push
pop
push
xchg
stos
inc
icebp
popa
out
adc
mov
jne
cmp
jl
mov
dec
daa
jmp
push
jns
push
jmp
jae
sbb
xchg
aam
sub
into
xor
int
cmp
adc
push
or
ret
cmp
cmp
test
mov
pop
push
jnp
addr16
dec
push
push
pop
imul
movsb
push
push
pop
pop
mov
dec
mov
icebp
mov
cmp
pop
repz
push
cmpsb
add
idivb
andl
ficoms
inc
popf
les
lea
xchg
cmp
sbb
enter
lds
aad
imul
stos
mov
jbe
sbb
jno
iret
subl
sbb
xor
xchg
push
mov
fucomi
outsb
test
pusha
sub
xlat
scas
out
mov
and
movsl
inc
arpl
cli
icebp
push
fsubrl
mov
sub
les
mov
pop
mov
xor
xor
arpl
adc
push
ss
jg
and
jno
jle
mov
insl
jo
jle
add
ret
sbb
enter
push
mov
cmc
fld1
outsb
ja
shlb
roll
xchg
inc
adc
outsb
out
dec
lock
dec
scas
popf
xchg
scas
and
fnsave
dec
sub
jl
cmp
aad
outsb
xor
enter
cmp
aas
movsb
cmp
dec
dec
std
xor
into
rcrb
pop
fidivrs
fdiv
push
les
stos
inc
jb
std
mov
fimull
loope
shll
mov
push
xlat
push
dec
inc
jl
lcall
cs
popa
sahf
dec
icebp
pop
bound
cli
lahf
sarl
loopne
jno
dec
js
movsl
arpl
mov
fimuls
aas
xchg
fidivrs
outsl
and
add
jge
sbb
add
mov
stos
lods
inc
lds
push
ds
jae
scas
cmp
cmp
rcr
sbb
and
add
ljmp
mov
or
adc
or
jb
test
add
xlat
add
call
out
stos
sarb
in
pop
and
seto
push
out
jmp
add
sub
push
inc
jg
xor
push
std
mov
movsb
shrl
pop
xorl
orb
mov
lds
push
xchg
sarl
pop
divb
jbe
xchg
xchg
popf
xlat
jge
push
and
les
ret
push
xchg
cmp
shlb
dec
popa
and
cltd
es
jmp
stos
sti
inc
cmp
jg
xchg
in
jns
inc
jne
xor
mov
and
or
mov
mov
jbe
into
xchg
push
and
xor
pop
mov
pop
je
mov
push
sub
xor
add
enter
push
repz
out
or
sub
fwait
cwtl
sbb
pop
fiadds
mov
aas
imulb
adc
test
ficompl
in
mov
add
outsb
xchg
adc
js
mov
or
or
jle
mov
push
jg
arpl
ficoml
or
jo
gs
xchg
stc
dec
adcl
ror
push
mov
div
jl
jnp
fs
sub
mov
jmp
xchg
cmp
jbe
into
loope
cmp
cmp
jge
idiv
xchg
mov
das
repz
inc
in
divl
mov
loopne
js
divb
dec
or
xor
jecxz
xchg
notb
gs
cmpsb
pop
and
stc
fwait
loop
js
xor
xchg
mov
cmp
mov
mov
inc
mov
push
repnz
sub
inc
in
cmp
mov
and
push
je
xchg
push
push
movb
inc
xchg
sti
pop
pop
cmpsl
push
jno
xor
dec
fs
xor
jno
sub
inc
ret
jne
dec
pop
aad
pop
jecxz
fwait
popf
clc
mov
lahf
inc
push
jb
div
xor
pop
cmove
xchg
bound
jl
adc
ja
cmp
jne
ljmp
lcall
push
lcall
call
scas
cmp
ss
jl,pn
push
pop
add
cmpsb
dec
mov
lock
mov
mov
sub
pop
ljmp
ljmp
and
ds
daa
mov
mov
mov
loope
dec
les
sbb
jo
stos
dec
out
mov
and
int
popa
xchg
nop
outsl
mov
out
leave
or
xchg
je
add
push
aas
in
and
call
pusha
in
and
cmp
lods
sub
xor
in
xlat
or
lea
mov
push
dec
testb
aam
mov
mov
fildll
pop
pop
cmp
icebp
lods
fisttpll
iret
es
movsl
and
fcompl
sub
stos
inc
hlt
mov
fdivrl
roll
sbb
sarb
xor
es
inc
jle
fnstcw
mov
mov
into
push
and
pop
mov
das
sbb
lretw
fs
mov
jae
lock
aad
enter
xchg
js
iret
cli
stos
mov
rorb
fsubrl
popf
xchg
lods
mov
pop
push
lret
push
jecxz
or
ret
xchg
iret
into
sbb
lods
sub
mov
push
cmp
ret
dec
movsb
cmp
inc
xor
aaa
push
dec
shll
xlat
aaa
andl
in
sub
cmc
mov
add
pusha
mov
xchg
imul
cwtl
lahf
or
jle
cmc
inc
fwait
xchg
sbb
push
iret
mov
xor
or
sbb
mov
aaa
lret
lods
mov
loope
push
bound
cwtl
mov
out
aaa
and
push
xor
aaa
subl
insl
mov
jnp
inc
pusha
cmp
mov
mov
stos
mov
popf
push
in
ja
push
cmp
add
stos
arpl
lcall
add
mov
push
xor
movsb
dec
adc
jmp
jns
push
inc
hlt
xlat
mov
xchg
out
push
mov
jge
adc
fsubr
cmp
test
xor
cmp
fsubl
or
fwait
push
aas
xor
sub
mov
andb
sti
mov
jb
in
mov
xlat
inc
or
inc
sti
lahf
decl
jnp
int3
scas
xchg
push
and
push
xchg
jp
sbb
inc
push
cld
scas
shr
pop
call
ss
push
out
sahf
push
add
pop
and
push
outsb
or
sarb
sub
call
outsl
dec
lods
xlat
int3
adc
xchg
sti
or
sbb
scas
loop
sub
std
ret
movsb
sub
scas
in
inc
addr16
jns
fistpll
cmp
jecxz
push
subl
scas
dec
in
mov
inc
in
and
aad
add
and
dec
cmp
lahf
pop
and
xchg
fincstp
xchg
push
imul
mov
mov
push
out
stos
sbb
push
loop
mov
repnz
push
push
xchg
xchg
popf
les
add
sub
orl
dec
mov
push
inc
in
xchg
cltd
inc
sub
or
mov
ror
hlt
cmp
enter
sahf
inc
in
ja
push
xor
out
sub
push
pushf
cltd
cmpsb
mov
int
xor
arpl
insb
and
js
jnp
xchg
lret
sbb
rcl
pusha
je
cltd
mov
pop
std
int
push
iret
nop
aad
adc
sub
repz
iret
das
mov
mov
popa
sub
jle
cmp
mov
iret
ljmp
jbe
insb
mov
push
mov
xchg
sti
daa
hlt
pop
or
pop
xchg
jo
aaa
or
mov
pcmpgtb
add
out
outsb
add
orb
loop
outsb
scas
sahf
sbb
aaa
cli
or
fdivs
fs
roll
insl
mov
jle
lock
push
mov
subl
lcall
sbb
push
sbb
push
add
cs
into
xchg
sub
xchg
ja
icebp
jecxz
xchg
div
add
and
adc
arpl
xor
insb
into
adc
sbb
lea
xchg
mov
sub
cmpsb
cmpsl
in
mov
adc
into
mov
int3
push
pop
jle
sahf
inc
rcll
dec
push
repnz
and
cwtl
loope
jo
add
clc
or
shr
pop
sarl
into
dec
sub
xchg
jb
gs
sahf
sti
or
mov
add
add
mov
out
mov
test
stos
lock
sbb
sbb
or
dec
and
pop
in
ret
xor
xor
adcl
jg
jg
pop
jbe
sub
and
ds
xchg
mov
and
sub
inc
mov
xchg
sbb
data16
jno
lcall
or
jae
je
out
cs
mov
shll
in
pop
lcall
dec
mov
push
sbb
sahf
mov
in
sahf
push
add
mov
push
pop
sub
cs
pop
add
out
ret
je
xchg
je
cmp
movsl
fxam
push
ljmp
cmp
or
add
jp
xor
aam
dec
xor
clc
mov
mov
sti
jns
stos
loope
sbb
inc
arpl
and
outsb
sub
xchg
lods
cli
jo
mov
xchg
pop
pop
xor
jae
xor
sub
or
rcrl
mov
data16
lods
pop
mov
fadd
arpl
xor
test
jp
fs
mov
ja
in
adc
pop
sahf
ud0
jmp
push
rorb
push
ds
cmp
mov
pop
mov
sbb
jge
or
sbb
xor
pusha
or
sub
sub
push
test
arpl
mov
xchg
cltd
dec
or
loope
add
jne
jle
or
xor
fimull
mov
cmc
repz
ss
xor
push
pop
aam
loope
pextrw
das
mov
aaa
pushf
dec
out
inc
loope
jp
mov
pushf
std
test
mov
rcrb
out
in
lods
jmp
mov
int3
xchg
xchg
loop
jo
and
mov
shlb
jae
and
sub
outsb
js
popf
shll
dec
dec
push
dec
jmp
rolb
mov
pop
pop
ret
sbb
add
sub
mov
das
mov
jg
out
mov
popfw
or
enter
mov
and
inc
shll
push
dec
pop
out
sbb
adc
cmp
mov
out
loopne
fiadds
inc
sub
mov
push
dec
and
and
xorb
fmulp
mul
cmp
sahf
std
adc
fadd
addr16
sub
and
enter
add
xor
inc
pop
fmull
out
dec
xchg
push
lea
add
mov
xchg
and
mov
addl
push
ret
xchg
xor
out
cltd
push
es
addr16
or
daa
and
sub
std
dec
mov
sub
mov
lds
xor
or
fwait
test
fimuls
add
sub
pop
push
dec
int
mov
mov
push
inc
mov
and
fisttpll
cld
cmp
clc
pop
rcr
push
cmp
and
mov
sti
das
cld
mov
daa
icebp
mov
lods
ret
aam
in
pop
jne
xchg
outsl
mov
sbb
test
mov
xchg
scas
cmp
or
pop
xchg
cwtl
jno
jg
sub
and
lret
push
mov
and
aad
mov
lock
add
xchg
mov
dec
sub
ja
cmp
aad
sbb
cmp
clc
loop
hlt
mulb
fwait
cmp
xchg
adc
sbb
fnstcw
add
icebp
sub
mov
adc
daa
insb
aas
inc
adc
shrl
sbb
sahf
or
in
lcall
push
push
js
inc
ficoml
scas
cs
idiv
lahf
stos
cmp
pop
push
or
sbbl
xchg
sbbl
pop
loopne
int3
call
ss
es
repz
fcompl
scas
pop
xchg
cmc
hlt
lahf
mov
negl
js
jge
push
xchg
inc
imul
js
push
push
add
mov
inc
ljmp
ret
pop
fs
neg
je
rcr
push
int3
out
nop
call
fs
cld
and
adc
movsl
push
cmp
iret
mov
sti
jno
js
or
xor
lods
mov
outsl
scas
push
jle
lods
test
push
xor
int3
test
add
lahf
sbb
lods
rorl
mov
test
mov
sbbl
ja
xlat
add
inc
shll
push
lahf
outsl
xchg
push
sete
xchg
mov
xor
fsubs
xchg
jge
mov
cltd
lcall
push
add
sub
mov
jae
pop
rclb
rcrb
ret
mov
mov
adc
jns
pop
push
add
stos
lea
jmp
add
sbb
sbbb
in
sub
xchg
addl
add
insl
inc
adc
je
cltd
pop
cmpsl
popa
scas
stc
or
les
dec
cli
and
imul
stc
mov
add
imul
adc
mov
push
inc
lds
sbb
dec
cmp
xchg
or
xchg
pusha
cmpsl
lret
add
test
mov
mul
ds
jns
jne
mov
push
sub
push
add
pop
out
push
jle
xor
nop
add
mov
adc
mov
pushf
xchg
push
pop
cmc
into
leave
jne
aad
in
subb
xor
add
and
dec
and
push
jg
cmpl
sbb
xor
call
mov
inc
mov
push
stos
test
lods
dec
les
add
adc
jle
mov
in
dec
out
insl
jp
xor
fwait
cmpl
adc
sub
adc
sbb
mov
test
jns
jbe
sbb
jp
lds
push
pop
je
cmpsb
fisubrl
sbb
pop
pop
stos
mov
in
push
sub
filds
and
mov
loop
push
data16
and
jmp
sub
cmp
or
das
jb
in
xor
loope
mov
aas
sbb
popa
xchg
mov
and
les
add
dec
jne
adc
mov
inc
sub
jnp
push
sbb
xor
pusha
fwait
popf
mov
jnp
xor
das
aam
adc
xchg
cmpsl
ret
shl
dec
seto
xor
dec
sbb
lea
jmp
dec
add
inc
inc
in
inc
hlt
fwait
out
push
inc
pop
or
inc
pop
jg
xchg
inc
sub
xor
mov
sub
je
aam
lods
xor
lds
jo
lds
xor
jbe
push
fmull
xor
jl
xchg
jmp
dec
fwait
dec
inc
mov
jb
test
jns
cmp
lret
out
fst
leave
sub
mov
mov
inc
pusha
fldt
jb
xchg
cmp
insb
sub
cmp
fwait
push
pop
mov
sbb
adc
push
data16
les
sub
jns
inc
cmp
lods
insl
or
dec
dec
cmc
adc
inc
cmpsl
movsl
sbb
xchg
dec
pop
lock
pop
xchg
int
sbb
fsubrl
xchg
jo
mov
sti
hlt
movsb
jnp
add
xor
mov
mov
add
pushf
fwait
cs
loopne
jmp
aas
push
jmp
insl
pop
adc
es
loopne
rcrb
call
pop
aaa
enter
in
jo
ljmp
mov
mov
js
inc
or
fildl
mov
add
shll
popf
ror
add
in
xor
ljmp
cmpl
jp
aad
cmp
jns
dec
mov
jbe
push
sbb
add
test
sbb
jns
jle
dec
fisubl
adcl
fwait
pop
gs
adc
leave
inc
push
lock
mov
dec
aad
cwtl
xor
ljmp
xlat
mov
stos
cltd
inc
add
xchg
mov
out
orb
push
clc
add
stos
xchg
aaa
pop
inc
cwtl
sbb
jmp
sbb
xchg
fs
popf
cmp
mov
loop
lcall
movsl
sbb
push
or
sbb
push
repnz
inc
dec
add
xchg
int3
jo
std
stc
loopne
int3
fdiv
mov
push
jge
and
and
rol
push
lret
jge
push
jmp
push
push
pop
pop
stos
imul
xor
sbb
lret
xchg
in
lds
pop
test
push
adc
dec
sub
pushf
lahf
testl
faddl
jae
jb
sar
stos
repnz
mov
push
and
push
ljmp
xchg
icebp
xor
cmp
mov
mov
es
ficomps
sub
mov
xlat
jne
jmp
jae
or
add
andl
ljmp
and
sbb
daa
dec
jbe
shlb
pop
movsb
aam
inc
or
sbb
fstpt
aad
pop
je
sbb
mov
sbb
sub
mov
fsubs
xchg
les
lods
leave
rolb
and
fisubrs
icebp
sbb
fcos
rorb
push
mov
mov
out
inc
sub
std
fistps
mov
inc
jl
repnz
mov
inc
cmp
imul
fadd
shll
rcr
xchg
ja
mov
or
inc
push
stc
inc
xchg
or
adc
jbe
dec
xor
out
jle
inc
mov
cmp
and
dec
mov
es
fildll
in
mov
nop
add
les
iret
push
mov
das
and
insb
stos
fimull
sbb
lret
gs
lods
dec
lea
movsb
fldl
xor
cmp
xor
test
push
cmc
inc
mov
dec
sbb
push
add
scas
add
sub
outsb
mov
loope
movsb
loopne
xor
fs
js
movsl
sub
shlb
shlb
adc
lods
dec
mulb
mov
mov
je
pop
es
mov
ljmp
je
out
mov
inc
stos
cmp
clc
inc
cwtl
sub
in
popa
stos
xor
xor
lea
cs
insb
es
mov
in
adc
subl
pop
sbb
mov
add
bound
xor
icebp
or
adc
add
mov
mov
jne
lods
scas
ror
cli
subb
sbb
push
lret
addl
stos
jns
aaa
les
mov
clc
mov
adc
and
pop
jo
or
mov
dec
push
push
loope
insl
xchg
jge
fistpl
push
jbe
xor
into
lds
scas
sbb
xchg
lret
mov
es
icebp
mov
notl
es
int3
dec
cmp
dec
xor
push
lods
ret
cltd
mov
cli
loopne
adc
xor
or
push
sub
push
movsb
dec
aas
rcr
cltd
sub
movsl
sahf
fimull
jno
inc
push
std
cmp
cmp
test
movsb
mov
pop
push
push
hlt
hlt
loope
inc
jns
xchg
jne
mov
jns
cmp
imul
push
pusha
or
push
or
shll
orb
add
jns
jne
out
xor
xor
sbb
movsl
inc
push
dec
in
mov
inc
xchg
in
lock
xchg
mov
fs
pop
cmpl
lods
ror
xchg
mov
or
daa
dec
mov
push
and
inc
mov
aad
inc
scas
and
mov
dec
mov
push
mov
mov
mov
pusha
pop
mov
or
jl
inc
mov
inc
repz
mov
inc
aas
adc
adc
cs
sbb
cs
pop
shll
cmp
jo
shrb
imul
inc
xchg
jp
loop
inc
adc
dec
add
ret
push
or
jg
mov
pop
and
adc
add
add
dec
mov
data16
out
jmp
xchg
js,pt
lea
sbb
fimuls
imul
sub
or
inc
fwait
xchg
daa
out
add
sbb
cltd
popa
lods
and
inc
jae
cmp
pop
outsb
pop
push
xchg
stos
xlat
xchg
fnstenv
pop
and
add
nop
mov
lock
sub
xor
mov
js
or
fs
sub
mov
push
push
fsubr
xlat
push
jo
jnp
mov
inc
pop
xchg
ja
mov
insl
add
adc
xchg
cmp
cmp
push
rcll
or
push
outsl
sbb
push
cmp
dec
fdivl
and
and
adc
mov
sbb
push
jbe
imul
cmc
inc
imulb
and
ret
stc
push
test
stos
jbe
shll
mov
ja
push
pushf
add
mov
int3
imul
cmp
stos
call
add
loope
mov
pop
ror
mov
push
test
push
mov
ret
jl
push
sbb
mov
stos
rcrl
mov
dec
fcom
les
inc
sti
inc
mov
andb
repnz
sub
into
imul
push
push
cli
int3
imul
fwait
bound
jne
inc
fbstp
xor
cmp
ja
inc
jmp
sub
adc
aas
inc
lock
push
cmp
sbb
dec
addr16
subl
lcall
xlat
push
add
add
mov
cmc
cwtl
scas
cmc
cmpsb
push
sub
shll
ljmp
aaa
aad
xor
jge
dec
ds
in
cwtl
shl
adc
ja
mov
mov
gs
ljmp
cltd
sbb
mov
sub
pop
or
cwtl
xor
mov
jmp
pop
enter
xor
cwtl
cld
mov
in
lahf
aaa
inc
push
test
mov
imul
outsl
bound
addr16
dec
mov
into
sub
xchg
addr16
imul
cld
jle
mov
shll
mov
push
jns
xchg
jl
pop
pushf
iret
addr16
test
shl
ja
fsubrl
call
jbe
mov
scas
vphadduwd
aam
in
jmp
xor
and
mov
pop
lret
flds
ror
scas
push
fldl
leave
aad
aam
negb
push
add
lods
fucomip
lret
shl
pop
mov
sub
ret
enter
fmuls
pop
pop
outsb
push
cmp
and
dec
pop
scas
mov
cmp
outsl
cltd
ret
sti
adc
xchg
xor
xor
mov
loopne
orb
stc
mov
clc
mov
fiaddl
sbb
sub
xor
popa
enter
cmpb
fldl
jb
push
mov
loopne
cmpsl
inc
filds
jb
cmp
out
pop
in
and
ret
mov
xorl
hlt
push
cwtl
aas
in
sbb
mov
and
pop
or
ds
jnp
out
rol
add
adc
mov
arpl
int3
icebp
jbe
cltd
mov
jne
fmull
sbb
mov
inc
inc
imul
cmp
leave
stc
loop
xor
mov
or
and
cmp
loope
xchg
mov
stc
pop
test
fdivl
jns
cltd
inc
sti
xchg
adc
shll
add
dec
loopne
push
or
orb
mov
xchg
lea
lea
xchg
mov
adc
jmp
and
and
xor
inc
cmp
les
cmpsb
dec
jno
push
loopne
mov
insl
xor
mov
aas
cmpl
cmpsb
fwait
decl
mov
sub
add
fimuls
sub
cwtl
cmc
pop
jno
shll
int3
out
sub
rep
bound
pop
dec
mov
out
mov
sbb
sub
jecxz
aas
mov
adc
push
out
rcll
pop
loope
movsb
pop
cmpl
sbb
inc
idiv
push
rolb
sbb
add
inc
sub
roll
jecxz
iret
push
adcl
xchg
adc
inc
enter
mov
test
jbe
popf
xor
jo
add
pop
in
mov
xorb
pop
test
orb
popf
sbb
mov
or
vprotd
fwait
cmpsl
sti
mov
mov
scas
dec
sub
sti
xor
pop
mov
mov
jecxz
xlat
mov
fmull
dec
sarb
bound
pop
pop
cltd
push
cmp
insb
and
mov
inc
sub
fs
inc
xchg
sbb
add
mov
lret
sahf
in
call
and
add
jle
xchg
push
cltd
sub
mov
repz
dec
pop
nop
inc
push
cmpsl
pop
cmpsb
sub
mov
fsubp
push
ret
fst
scas
loopne
shll
popa
sbb
insl
fcompl
sub
adc
xchg
add
dec
nop
push
and
or
out
cmp
fadds
mov
sub
xchg
mov
sahf
into
dec
sahf
test
cwtl
mov
lds
shr
sbb
jne
dec
repnz
pop
sub
jecxz
out
gs
imul
add
sahf
nop
sahf
test
or
test
outsl
sub
scas
or
mov
add
and
shrl
mulb
fcoms
dec
enter
jae
popa
inc
scas
stos
or
sbb
fisttpl
adc
or
add
inc
repnz
ret
xor
inc
lahf
int
pop
daa
je
enter
addr16
leave
lcall
pop
pop
pop
push
jmpw
es
out
jbe
cld
and
loope
gs
xor
mov
inc
adc
xchg
mov
push
js
xor
out
mov
ret
cmp
es
mov
fdivl
fwait
icebp
insb
lret
outsl
outsb
jb
mov
sbb
pop
in
aas
aam
xor
or
dec
cmp
jne
add
test
and
shl
loope
jnp
jp
pop
xor
sbb
test
test
fs
xchg
xor
cmp
sub
sub
lcall
cmp
rcrl
mov
int3
lods
in
mov
fsubs
cmp
es
dec
mov
cld
data16
rorl
xchg
push
scas
sub
out
cmp
in
jae
sub
inc
adc
inc
faddl
repz
ss
mov
dec
mov
das
sbb
sub
popf
fmull
ljmp
arpl
sbb
xchg
push
mov
into
inc
mov
cs
loop
xchg
mov
jmp
les
push
jbe
lods
ja
dec
pop
pop
sub
pusha
xor
imul
mov
sbb
sub
dec
push
inc
das
sub
dec
push
lsl
fadd
dec
jne
mov
mov
and
popa
sbb
into
test
cmp
js
cld
cmp
lcall
mov
vorps
adc
mov
pop
test
imulb
in
lods
bound
js
xchg
ret
add
pop
icebp
cltd
test
mov
int
outsl
jecxz
xor
es
jle
mov
insb
mov
jae
popa
in
ss
mov
jne
mov
xchg
jle
push
scas
loop
cmp
dec
arpl
hlt
insl
xor
sbb
push
rorl
imul
push
pop
into
js
adc
mov
lea
decl
fsubrl
push
mov
push
mov
jmp
stos
mov
scas
jle
mov
xchg
jecxz
mov
test
add
xor
pop
inc
cmp
std
and
push
mov
std
call
and
push
jmp
aad
push
cmpl
mov
jp
mov
iret
xor
xorb
and
xchg
adc
adc
cmp
dec
out
mov
rol
pop
popa
add
jmp
aad
xchg
insb
adc
mov
and
cmp
jne
dec
in
xchg
push
test
cld
sbb
repz
mov
pop
lock
shrl
xorl
aas
out
mov
rcl
xchg
and
jae
out
jg
test
and
int3
inc
dec
inc
inc
ss
push
das
ds
clc
movsl
xchg
ror
stos
imul
fsubrp
stos
push
popa
fwait
shrb
xor
rorl
sub
cmp
test
push
dec
scas
sbb
stc
adc
clc
out
xchg
mov
lahf
and
arpl
push
lods
inc
push
bnd
jmp
out
inc
das
movsl
mov
test
xchg
enter
and
scas
mov
xor
jge
scas
or
lret
xor
jg
movsb
out
clc
mov
iret
gs
std
add
sbb
jmp
es
std
cwtl
mov
sub
inc
fxam
adc
xchg
ror
movsb
lahf
insl
imul
push
clc
sbb
cmp
popf
testl
enter
jne
sbb
stos
cmp
lock
mov
int
popl
push
sbb
enter
sbb
lods
push
stc
insb
cld
or
pop
jmp
outsb
cmpsl
or
inc
pop
sub
and
insb
or
cmc
pop
sbb
mov
mov
push
in
out
cmc
aad
cmp
lea
enter
clc
subb
fnsave
repz
cltd
jecxz
ljmp
sbb
repz
cltd
mov
pop
fcoms
mov
push
or
dec
orb
mov
std
sub
sub
iret
cmp
jl
imull
popf
or
popf
mov
sub
testb
test
cld
das
adc
pop
lods
mov
test
rorb
sbb
mov
or
xchg
clc
cmp
les
out
ss
pop
out
cld
gs
mov
test
inc
ljmp
xor
js
js
cmp
or
jb
push
adc
outsl
aaa
sub
and
leave
xchg
dec
or
inc
xchg
and
movsb
les
aam
xchg
lcall
scas
movsb
dec
fld
les
aaa
lcall
mov
push
bswap
jns
ja
and
mov
jmp
jb
mov
add
sarl
dec
adc
push
add
or
mov
in
dec
testb
jae
mov
dec
sar
mov
xor
jae
rolb
sub
push
icebp
popa
xor
jg
fistpll
jl
push
mov
cmp
je
dec
push
rcrb
mov
and
aam
xchg
mov
adc
pusha
pop
mov
out
dec
mov
cmp
sahf
test
push
and
iret
popf
jne
call
sbb
out
ss
stos
add
mov
subl
jl
repz
shl
das
aas
pop
pushf
and
pop
pushf
fidivrl
aaa
pushf
pop
sub
es
xor
dec
sub
das
stos
lret
iret
mov
sahf
mov
enter
mov
add
addl
dec
pop
jo
sbb
cmp
data16
sarl
xor
cwtl
mov
aas
lcall
cmp
call
aad
int
mov
es
mov
xchg
aam
mov
dec
jnp
cmp
dec
or
fldl
cli
and
pop
inc
je
fimuls
cwtl
shrb
adc
jl
rcpps
add
popf
cmp
add
mov
sahf
mov
inc
add
ret
push
jge
pop
xchg
andb
xor
xor
aaa
and
push
ljmp
or
jbe
fcompl
pop
jb
xchg
mov
xor
push
mov
dec
movsl
push
call
iret
ja
fs
lret
or
sbb
mov
test
loope
imul
rolb
pop
push
test
dec
xchg
out
jge
lahf
test
xlat
xor
jge
dec
cmpsb
push
xchg
lock
add
jb
sbb
dec
pop
test
mov
jecxz
inc
enter
adc
mov
mov
repnz
pop
pxor
in
adc
fisubrl
add
and
setnp
int3
in
inc
sbb
orl
pop
mov
xor
xchg
popf
xchg
adc
orl
out
outsl
mov
outsb
jbe
aad
sub
and
das
xchg
test
xchg
cs
mov
push
xchg
js
adc
jl
test
inc
int
mov
je
jae
js
scas
sub
outsb
lcall
add
or
or
cmp
xchg
les
inc
repnz
adc
lea
loope
movsb
cmpsl
ret
mov
in
jge
rcl
pop
mov
jp
and
addr16
daa
pop
cs
cmp
dec
push
shlb
cwtl
and
inc
push
xor
addr16
enter
xlat
mov
cltd
jns
lea
in
jae
jle
cmpsb
xchg
adc
sub
lret
push
sbb
mov
xchg
into
xor
jb
cmc
aad
mov
jo
ss
mov
sub
xchg
inc
push
icebp
adc
adc
mov
test
dec
sub
aaa
stc
fistps
or
jge
cmp
ret
movsl
add
mov
add
mov
std
outsl
jae
es
testl
dec
mov
mov
dec
in
xchg
or
mov
ds
leave
addb
out
dec
jo
cli
out
shlb
xchg
cmp
push
mov
lods
mul
nop
rorl
iret
cld
jns
scas
clc
test
popf
dec
dec
mov
leave
cld
xchg
jp
in
push
daa
dec
cs
fadds
outsb
jmp
nop
xchg
movsb
dec
movsb
rdmsr
adc
sbbb
xor
bound
in
sub
pop
scas
ret
stos
out
mov
testb
lret
mov
push
dec
pop
out
xchg
add
imul
pop
jmp
pop
andb
les
push
cs
inc
in
cmp
leave
pusha
pop
xchg
add
fcoml
int3
gs
pop
lds
jne
popf
test
fisubrl
iret
and
inc
daa
orb
ss
push
add
jmp
test
push
mov
repz
in
test
idivb
cmp
out
cmp
mov
jg
call
test
sbb
push
adc
hlt
add
sbb
fldt
cmpsl
cmp
inc
inc
add
or
hlt
sarb
lea
in
mov
loopne
fisubrs
out
pop
adc
out
jnp
lret
xor
push
mov
imul
nop
pop
fdivr
sub
dec
fldenv
dec
and
cmp
mov
int
neg
out
out
pop
mov
testb
call
xchg
mov
mov
push
jg
dec
inc
xchg
fisubrl
jmp
cmc
fsubrp
lods
add
push
xchg
xor
inc
push
xchg
sub
mov
imul
mov
push
push
mov
mov
push
mov
xchg
pop
dec
mov
icebp
mov
fsubrp
sub
push
stos
mov
imul
jae
push
cli
push
call
repz
icebp
mov
test
dec
gs
mov
fs
sti
jge
andb
aad
inc
insl
inc
imul
mov
or
cltd
aaa
mov
adc
jl
arpl
xchg
cmp
inc
xor
sub
aad
pop
out
movsl
pop
int3
and
jge
nopl
stos
aaa
out
pop
mov
mov
xchg
inc
push
xor
or
std
mov
faddp
cwtl
stos
testl
loope
imul
jb
lcall
sbb
sahf
sbb
cmp
xor
lahf
cmp
jae
jge
and
add
jbe
movsb
mov
clc
test
mov
push
sbb
fs
enter
gs
and
fistpll
cmp
hlt
add
sub
daa
sbb
mov
and
fwait
sbb
aas
divb
loopne
in
add
push
jg
cli
fdivl
dec
mov
fcompl
fsubrs
jno
mov
into
and
inc
mov
or
jge
popa
sub
daa
in
xchg
jbe
outsl
jge
add
mov
inc
pop
xlat
pop
jbe
lret
jnp
xor
jle
xor
mov
push
sbb
icebp
clc
shll
and
filds
jecxz
push
jnp
sarb
jns
faddp
adc
and
lock
lret
or
hlt
orb
jecxz
lods
mov
push
mov
push
and
inc
pop
jnp
cmpsl
xor
push
cld
add
mov
and
inc
sub
loopne
stos
cmp
fldl2e
mov
adc
jge
lahf
and
imul
rclb
in
out
jl
adc
out
stc
idivl
std
js
push
push
negb
insb
and
inc
idivl
ljmp
and
mov
scas
into
popf
and
cmp
clc
pop
cmc
pop
add
sbb
ja
lods
popa
dec
insb
pop
jp
test
lcall
dec
cs
loopne
push
jnp
or
es
cmp
popf
repz
cli
insb
mov
push
fsts
mov
mov
into
mov
cmp
stc
in
adc
mov
cli
or
jmp
lods
pop
clc
cmp
sbb
inc
mov
xor
scas
adc
add
adc
rclb
shrl
lahf
test
add
and
sbb
xor
mov
out
hlt
xor
pop
adc
push
loope
lds
cli
mov
ret
sahf
and
out
xchg
add
lahf
jno
xchg
stos
mov
and
retw
lods
fidivrs
add
lea
jge
push
sub
fwait
inc
mov
cs
cmc
fdivrs
xchg
xchg
jbe
or
xor
stos
cmc
into
mov
andl
rcrb
dec
enter
sbb
inc
or
fmuls
insb
pop
repnz
scas
pop
stos
cmpsb
push
and
mov
out
hlt
test
adc
xchg
add
jmp
mov
sti
gs
jb
xchg
adc
arpl
lahf
xchg
mov
iret
loopne
jae
movsl
mull
jb
xchg
test
mov
add
mov
into
icebp
jl
outsl
lods
and
aas
and
adc
lret
pop
pop
cmpsb
in
xchg
mov
adc
xor
int
ss
jle
fsts
scas
cwtl
inc
ja
mov
push
xchg
and
xor
data16
lcall
jmp
into
or
adc
jmp
lcall
fnsave
adc
sarl
fstp
jg
ds
sbb
or
push
daa
in
out
pop
push
leave
add
jg
jl
add
inc
pushf
jg
pusha
je
aas
in
pop
sbb
mov
clc
push
out
mov
and
test
loop
push
adc
leave
mov
loopne
and
repz
inc
jecxz
repnz
arpl
shll
cltd
sub
or
lret
push
push
pop
xchg
jb
sbb
mov
out
lods
imul
push
stos
dec
and
test
inc
cmp
movsb
pop
mov
les
adcb
loope
mov
or
cmp
aaa
cmp
out
mov
pop
jmp
or
push
dec
pop
adc
out
mov
aam
pop
inc
and
mov
fists
cmpsl
cld
mov
push
rol
fbld
jnp
adc
sbb
sub
xchg
jl
fcoml
mov
xchg
imul
scas
mov
xchg
mov
rcrb
jns
mov
icebp
stc
jb
push
cld
rcrl
mov
int3
test
xor
xchg
out
inc
adc
sbb
popf
lahf
imul
sub
sbbl
add
fadds
testl
rcrl
stos
ss
dec
in
test
imul
inc
mov
clc
std
rorb
leave
mov
mov
lods
and
xor
popa
rcl
aam
scas
shrb
arpl
fbstp
sbb
push
mov
cmp
out
jae
mov
inc
cmpsb
movsl
pop
repz
push
loopne
add
ret
divl
jecxz
inc
xchg
stos
idivl
mov
mov
ja
or
mov
rorl
cmc
add
dec
ja
pop
fisttpll
add
rcrl
shl
dec
mov
sub
inc
xchg
xchg
mov
bound
stos
xlat
xchg
pusha
pop
movsl
lcall
push
imul
jbe
aam
jmp
pop
pop
jb
rclb
jnp
fadds
scas
fdivrs
sahf
fcmovb
jno
cmp
sub
push
xchg
call
xor
icebp
movsb
outsl
inc
jp
imul
negl
outsl
in
jne
or
movsb
mov
sti
xor
int
in
xchg
sub
paddsw
adc
out
movsb
mov
pop
add
in
lcall
neg
xor
jmp
mov
dec
mov
lret
popf
orb
test
lret
jmp
paddb
movsb
xchg
cmp
lea
adc
adc
push
in
and
loopne
add
adc
jp
cmpsl
fists
or
mov
pop
dec
push
pop
lods
mov
xor
adc
inc
cltd
daa
je
xchg
inc
fs
arpl
ljmp
pop
loopne
out
mov
mov
aam
into
xorb
ss
jle
loope
out
sub
nop
pop
pop
xchg
rcrl
insb
popf
into
in
push
mov
and
or
xor
sub
shr
movsb
in
mov
mov
das
in
xchg
loope
fst
push
in
push
loope
ds
leave
push
das
xchg
ss
xchg
scas
fstpl
push
sub
adc
hlt
add
cs
jne
rcrb
dec
xchg
pop
insb
or
icebp
pop
aam
xlat
and
cmp
push
push
movsl
decl
lahf
frstor
jecxz
sub
aas
aaa
push
insb
mov
icebp
xchg
hlt
popa
cmp
inc
and
dec
aad
push
cmp
jecxz
daa
jb
popa
addr16
shrl
and
es
jae
mov
jge
and
inc
jb
test
scas
ss
shr
xchg
jo
jo
or
lcall
push
lahf
lea
scas
imul
in
imul
dec
push
dec
mov
add
scas
je
fs
sbb
mov
addr16
push
ja
push
inc
cmp
int
or
and
arpl
insw
out
ret
cmp
stc
xor
mov
outsb
fists
xchg
lods
imul
cmpsl
mull
xor
ja
imul
push
mov
gs
jp
sbb
adc
gs
pop
mov
push
pop
loopne
sbb
sub
adcl
or
xchg
test
jge
xchg
fcmovnu
add
inc
or
imull
xor
dec
lret
mov
scas
xor
sbb
pop
out
inc
pop
pop
shrd
je
sbb
push
xor
cmpsb
fldl
cmp
and
test
imul
das
xorl
aaa
sub
ret
mov
cmpb
cld
cltd
inc
aad
add
xchg
pop
aam
mov
xchg
imul
or
mov
sbb
jo
push
ja
sbb
and
sbb
bound
repz
mov
aam
stos
push
cmp
dec
addr16
out
aas
outsl
xor
loope
rcrl
nop
stos
sbb
aad
icebp
xor
jne
test
inc
pushl
cltd
sbbl
nop
into
mov
cmp
outsl
adc
fldl2e
in
cmpsl
testl
cmp
inc
scas
lahf
lds
idivl
xor
and
or
sub
mov
push
xorl
xchg
jno
pusha
les
sbb
ret
push
sbb
sbb
inc
mov
jns
icebp
scas
ret
push
adc
test
jg
push
pop
pop
sbb
jne
pop
lds
xor
aas
pop
ficompl
mov
dec
inc
add
jl
push
sub
negl
ds
scas
ljmp
mov
shl
push
movsb
in
scas
scas
jl
dec
rorb
aas
insl
adc
mov
xorb
aad
xchg
add
jns
pop
enter
sub
sarl
xor
hlt
jl
mov
push
adc
fisubl
inc
adc
test
adc
imul
into
aas
cmp
lahf
out
outsl
in
insl
xor
into
and
mov
and
dec
loope
in
out
cmp
fiaddl
add
dec
push
fists
lea
pusha
lret
mov
ret
cmp
ljmp
and
push
js
push
xchg
pop
clc
cmp
movsl
dec
lret
xlat
or
xchg
icebp
imul
dec
adc
xor
jne
aas
mov
adc
jecxz
aaa
adcb
pop
jo
les
mov
nop
ja
mov
mov
or
outsb
mov
outsl
jb
je
popa
mov
out
xor
push
sbb
sbb
subb
mov
pop
sub
clc
jmp
outsl
xor
js
ja
dec
cmpl
ret
push
mov
pushf
cmc
xorb
mov
mov
jnp
dec
add
test
scas
sub
add
andl
lods
popl
sbb
jmp
mov
mov
shr
inc
cwtl
push
xchg
inc
movsb
push
hlt
test
push
pop
mov
sub
push
repz
aas
adc
ljmp
hlt
or
dec
push
and
add
mov
jb
shl
cltd
mov
js
mov
dec
dec
pop
pop
or
jns
jge
push
lret
in
jae
fdivl
xlat
int
push
and
add
xchg
les
lea
jle
or
jmp
daa
cmp
push
aam
pop
sub
push
jbe
xchg
mov
mov
pop
rcrb
jb
or
mov
test
cmpsb
test
inc
movsb
sbb
test
xchg
dec
test
sub
mov
pop
pusha
lods
jle,pn
pop
xchg
add
test
icebp
mov
loope
int3
xchg
repz
popa
xchg
jno
or
adc
repz
mov
fnstcw
fwait
outsb
popf
xchg
push
mov
stos
jge
push
mov
add
test
aam
sub
and
shrl
ret
in
jo
mov
sar
cmp
adc
insl
xor
pop
lock
dec
fwait
mov
sub
adc
add
and
inc
call
mov
fcmovne
insl
fdivl
icebp
sub
test
pusha
push
fs
cli
loopne
xor
fimull
mov
inc
or
cmp
xchg
jns
je
or
sbb
jl
xor
sbb
adc
inc
shlb
mov
ja
mov
sbb
cmc
outsl
fcmovbe
data16
xchg
test
pop
cli
imul
insb
int
pop
movsl
scas
push
mov
adc
out
mov
imul
leave
ja
shrb
loope
fsts
mov
push
push
cmp
int
mov
out
int
mov
push
xor
jbe
repnz
cltd
sahf
enter
aas
test
mov
nop
test
fildll
mov
or
adc
mov
xchg
sbb
loop
outsb
leave
movb
pop
mov
leave
mov
and
and
jno
and
mov
mov
lock
pop
mov
xor
dec
jge
mov
lcall
xchg
jecxz
push
cltd
pop
insl
in
aad
arpl
aam
vunpcklps
and
xor
outsl
dec
sub
push
testl
sbb
or
push
pop
push
scas
dec
testb
fs
scas
inc
fisubl
mov
push
aam
in
dec
cmpsb
cld
fnsave
jl
jae
repnz
and
cs
adcl
lret
mov
popl
push
mov
push
mov
popa
adc
in
sti
mov
cwtl
repz
pusha
cmp
test
mov
icebp
call
mov
pop
enter
inc
fisubrl
clc
sub
sti
pop
push
or
sub
loope,pt
call
xchg
xor
inc
fwait
das
lret
loope
mov
in
jno
mov
xchg
or
xor
loopne
sbb
cltd
aam
outsl
stos
nop
or
mov
and
and
sub
dec
or
dec
hlt
fsubrs
adc
je
fcmovu
pop
xor
movl
pop
loop
addb
jmp
ljmp
mov
inc
sbb
sbbb
add
mov
leave
dec
or
imul
ret
push
pop
inc
arpl
jge
jns
js
aad
repz
lahf
adc
cmp
jno
clc
testl
stos
imul
push
stc
push
jg
movsl
in
out
xor
lock
hlt
jge
dec
orl
cld
add
push
scas
rcr
pop
and
mov
stos
fcoml
inc
mov
mov
jbe
sbb
out
fsubr
cmp
push
xorb
fcmovu
or
cmp
or
mov
fs
movsl
cmpsb
cmp
or
in
js
and
cmp
test
insl
pop
and
cltd
mov
dec
cmp
mov
jnp
fmuls
sub
stc
cmp
lret
shll
adc
dec
mov
lahf
inc
inc
mov
mov
add
mov
inc
es
mov
int3
pop
enter
xchg
mov
scas
pop
bswap
loope
out
lret
aam
or
sub
pop
dec
push
lds
cli
mov
xlat
mov
dec
ffree
stos
jb
sub
repz
mov
in
int
sbb
scas
jb
popf
mov
xchg
push
stos
push
mov
xchg
push
std
test
lds
ja
xorb
mov
add
stc
rol
adc
out
insl
cmpsl
mov
pop
push
mov
mov
decl
rorl
dec
dec
xchg
xchg
mov
jmp
mov
push
mov
stos
cmp
xor
in
rolb
lods
push
mov
iret
daa
push
xor
in
popf
std
sti
pop
pavgw
mov
mov
inc
push
mov
imul
push
mov
or
add
xor
mov
xor
ror
xchg
bound
dec
negl
push
ds
dec
fcomps
or
mov
nop
pop
pop
lock
into
pop
shl
mov
pop
loop
out
ss
cmp
aam
dec
inc
ljmp
mov
fisubrl
sub
and
shrl
ljmp
stc
inc
call
xchg
xor
mov
sar
sub
cmc
arpl
lret
add
vpcmpgtd
bound
test
jae
pop
aaa
sbb
hlt
cli
push
and
add
jmp
movb
jmp
cld
out
mov
lahf
mov
cwtl
sub
dec
gs
jbe
jl
mov
mov
or
daa
roll
mov
or
jae
test
add
mov
sbb
push
sbb
mov
sbb
cmp
mov
mov
sub
fnstcw
mov
cltd
sbb
sub
popa
dec
pop
call
xchg
outsl
scas
jl
push
and
sub
andb
xlat
daa
cmpsl
push
fs
je
jno
jne
sahf
dec
out
scas
jp
mov
ds
add
je
rcll
mov
and
aam
pop
adc
jo
inc
imul
sub
dec
jmp
adc
mov
sub
pop
int
cmpsb
cmc
aam
jg
pop
xor
mov
inc
hlt
cld
jns
add
shlb
inc
mov
popa
lds
inc
xchg
push
cltd
dec
xchg
in
std
lds
fmul
repz
rcl
dec
xor
push
lret
sub
jl
es
pop
cmp
dec
insb
shl
push
aaa
push
ficoms
sbb
dec
mov
out
mov
xchg
add
shl
popf
cmpsb
or
push
sarb
push
scas
add
mov
shrb
pop
jb
add
das
sub
sub
add
sub
mov
shrb
lock
aas
mov
out
pop
imul
cmp
lea
mov
fmull
mov
and
jmp
ror
mov
inc
mov
mov
cs
pop
stos
mov
pop
pop
add
mov
add
aam
cwtl
and
sarl
aaa
jecxz
dec
lea
in
push
mov
loope
mov
inc
aas
xchg
bound
movsl
sub
aas
push
stos
fbld
lea
sub
clc
push
popa
adc
mov
imul
lret
pop
pfsubr
push
imul
stos
pop
cmp
xor
ret
mov
sbb
cli
lcall
stc
std
in
push
pop
outsl
out
pop
in
inc
push
loop
mov
roll
jmp
jne
das
push
loope
or
js
sub
jecxz
lahf
imul
call
cmpsl
loop
mov
mov
in
pushf
or
pushf
mov
pop
cwtl
hlt
lret
in
pop
pop
icebp
xchg
jmp
and
ss
dec
mov
rclb
call
aaa
jno
jg
mov
lret
dec
scas
int3
push
popa
xchg
inc
sub
jmp
test
pop
xchg
or
sbb
adc
sub
jmp
sub
rcll
ret
mov
or
insl
mul
lods
nopl
and
cmp
pop
testb
adc
mov
dec
lret
arpl
je
dec
add
fs
dec
sbb
leave
xor
push
sbb
add
or
popf
dec
leave
cmpl
inc
inc
mov
shll
icebp
adc
pop
push
loop
movhps
shlb
leave
jne
mov
jmp
popf
fildl
leave
les
xchg
inc
je
and
jbe
inc
inc
out
sub
mov
jmp
faddp
iret
je
imul
push
xchg
xor
jne
mov
sub
addr16
push
add
out
jl
in
mov
aad
cmpsl
adc
lods
jns
pop
iret
fwait
mov
and
add
sub
sub
push
lds
push
add
sahf
clc
jnp
leave
arpl
xor
pop
setno
and
xchg
pusha
andl
jae
fnstsw
fistpl
pop
outsl
cmp
enter
xor
popf
lods
das
das
das
enter
mov
sbb
aaa
movsl
and
mov
jns
subb
dec
push
repnz
pop
sti
insl
cld
shll
je
movsl
push
inc
into
add
mov
cmpsl
lds
mov
pop
and
or
mov
cmp
xchg
inc
push
out
test
nop
push
add
cmpsb
push
lea
enter
or
pop
jmp
stos
icebp
cmp
pop
push
sub
sub
stos
mov
bound
arpl
xchg
int
mov
add
repz
pop
jg
insb
comiss
sub
adc
sub
in
xchg
repnz
push
vucomiss
dec
mov
mov
lds
inc
jge
jg
push
xlat
add
sub
vminps
in
ret
sbb
clc
stos
mov
add
inc
adc
das
orb
imul
adc
sub
cltd
or
pop
adc
jl
shl
pop
mov
aaa
jmp
cmp
push
mov
mov
jecxz
shll
mov
pop
pop
push
adc
xchg
ficoml
stos
adc
mov
mov
out
jo
xor
cmp
inc
shrl
mov
sub
and
movsl
inc
std
sub
dec
push
add
xor
outsb
or
movsb
jb
jmp
cmpsl
xor
leave
int
xor
das
or
jle
das
inc
cmp
or
pop
jno
add
fwait
dec
roll
sbb
mov
lret
xchg
out
outsl
std
dec
jbe
fwait
std
pop
jae
add
and
mov
aam
push
mov
iret
lods
ljmp
pop
movb
mov
mov
jl,pn
xor
mov
test
pop
hlt
invd
jae
mov
push
xchg
fs
movsl
xor
inc
inc
cmc
out
popa
fsubr
jae
int
cmp
fcoms
mov
aam
cmp
dec
lahf
les
cwtl
bound
cmp
push
jbe
aad
jb
stos
pop
mov
pop
or
pop
jo
cmpsl
addr16
test
mov
bound
cli
out
pop
xor
push
mov
sbb
loop
mov
or
fiaddl
sub
addl
lret
in
xor
sub
push
fidivrs
mov
fcomps
lods
adc
ja
mov
add
cwtl
jns
mov
inc
mov
pop
or
repnz
fnstenv
negl
adc
add
ret
add
push
xchg
mov
and
dec
dec
or
mov
mov
inc
iret
sbb
dec
shll
fisttpl
jp
jmp
test
loop
adc
mov
fs
mov
int
shll
imul
jge
mov
ret
and
or
imul
or
and
mov
add
nop
call
mov
jle
mov
jl
mov
push
cmp
imul
inc
add
iret
adc
rorl
mov
xor
ficoml
insb
and
mov
pop
call
shlb
out
int
jmp
pop
je
mov
inc
mov
xchg
ficomps
int
mov
adc
inc
add
lcall
xor
outsl
mov
xor
jae
loop
negl
mov
sub
ret
cmpsb
in
xor
sbb
sub
pop
xlat
inc
lcall
das
popa
std
fnstsw
pop
int3
lds
aaa
pop
mov
repnz
orl
ds
dec
mov
push
aam
push
rorl
ljmp
insb
out
daa
sub
pop
xor
sub
jo
faddl
sbb
subl
shrb
insl
xchg
rolb
nop
sbb
inc
jecxz
jnp
and
inc
cmpsl
adc
mov
popl
sbb
sti
adc
cmp
lds
data16
mov
je,pn
dec
mov
adc
fdivrs
hlt
sarb
mov
push
mov
adc
popf
aaa
pop
addr16
push
add
xchg
xor
sbb
out
jmp
push
lods
push
mov
ret
sbb
nop
ss
mov
xchg
shll
mov
js
leave
sub
in
scas
pop
lods
ret
or
push
xor
ja
xchg
xor
lds
inc
in
in
enter
and
push
test
movsl
addr16
dec
test
stos
shl
cmp
push
push
jo
lret
push
add
cmp
add
mov
jle
jl
jbe
jecxz
mov
mov
cmpsl
ljmp
pop
pop
push
flds
sbb
push
mov
sbb
lcall
or
add
aaa
aaa
or
repnz
xchg
repz
shlb
ret
mov
pop
out
enter
or
scas
mov
out
add
jbe
xchg
stos
lods
mov
sti
cmp
pop
mov
mov
aad
ret
push
lea
loope
std
iret
cmp
mov
lds
in
adc
push
add
jnp
daa
pop
add
pop
mov
in
inc
lret
xor
sub
mov
leave
cmc
push
sahf
shlb
cmpl
int
fdivrs
adc
ret
jl
outsb
sbb
sbb
bound
jmp
add
add
outsl
dec
pusha
aaa
push
mov
mov
mov
add
push
sbb
jnp
cld
mov
sbb
fwait
mov
loop
sub
pop
or
ja
add
mov
adc
mov
push
xor
iret
jl
jle
dec
into
dec
repz
jg
popf
testl
bound
push
dec
mov
inc
loopne
sub
cld
or
push
jo
pop
cmc
or
mov
sub
or
sbb
shrb
das
mov
add
inc
imulb
cmp
push
xor
data16
ret
mov
fistpl
or
testl
out
in
adcb
movsb
xchg
aas
cmp
movsl
push
inc
aad
in
mov
in
inc
testl
loope
push
repnz
sbb
mov
loopne
data16
xor
ret
mov
shll
shlb
fildll
addb
pop
mov
pop
in
and
pop
mov
notl
push
mov
idivb
jns
test
or
clc
add
dec
loopne
gs
hlt
roll
aaa
and
scas
mov
test
data16
jbe
mov
pusha
movsl
jne
xor
mov
jmp
jbe
jl
xor
mov
jnp
xchg
jle
adc
pusha
mov
insb
arpl
and
add
loopne
push
es
scas
jbe
arpl
jg
bound
in
aad
int3
jae
inc
ficomps
daa
adcb
inc
pop
cmpsb
jg,pn
fcmovnb
daa
dec
aad
and
xchg
roll
mov
lahf
aaa
cmc
jo
test
sub
lahf
inc
and
out
jo
pop
inc
fsubr
pop
jg
xor
ja
loop
cld
outsb
faddp
pop
push
inc
das
jo
inc
iret
js
imul
inc
or
cmp
test
sbbb
pop
dec
jne
test
outsb
push
xor
ds
dec
scas
test
into
inc
push
push
mov
loop
mov
jbe
cmp
inc
inc
scas
lds
and
movsb
push
lds
hlt
js
leave
dec
add
mov
orb
ds
jns
lahf
jno
mov
inc
mov
mov
aas
and
mov
jmp
dec
jns
adc
pop
ret
adc
pop
sub
daa
aaa
mov
push
movsb
dec
dec
ret
outsl
xchg
call
jae
inc
shl
lcall
sub
int
mov
mov
cmpl
xor
pop
ss
in
hlt
mov
adc
jb
icebp
mov
jbe
sbb
jl
push
ja
push
adc
jg
add
cmp
insl
sub
jle
jns
and
ret
dec
hlt
in
pop
mov
push
dec
aas
pop
les
sbb
negb
adc
dec
cmp
data16
ja
cltd
in
mov
mov
lcall
mov
sbb
test
cld
aas
xchg
ret
fs
fisubrs
xlat
inc
clc
out
add
xor
shll
mov
scas
inc
mov
jbe
push
ljmp
test
aas
packuswb
testb
repnz
xchg
sbb
clc
inc
out
ret
aas
xlat
pop
jo
ss
inc
fbld
adc
bnd
dec
jo
add
ljmp
add
add
or
inc
push
push
cli
sahf
aas
dec
shrb
adc
std
push
mov
hlt
cli
mov
cmp
xchg
in
jl
pop
jnp
rcl
in
jne
cld
bound
les
hlt
adc
aas
jle
adc
loope
mov
pop
adc
adc
xor
xchg
loop
jno
das
pop
test
lds
out
push
or
adc
div
add
add
mov
int3
jl
mov
fldt
ljmp
xlat
xlat
xlat
imull
pop
jl
sub
out
dec
movsb
les
movsl
xor
pushl
xchg
xchg
into
mov
cmpsl
inc
into
cmp
sbb
les
pop
mov
mov
aas
negl
jp
clc
xchg
std
inc
mov
xor
incl
out
in
call
test
aam
filds
scas
test
rorb
push
xchg
mov
sbb
in
jg
cmpsb
es
daa
fwait
shll
add
fdivs
rorb
adcl
nop
daa
popa
sbb
jle
push
cmp
mov
inc
push
clc
mov
mov
adc
pop
cmp
bound
push
testl
lret
push
stos
mov
pop
mov
add
sar
outsb
test
adc
repz
aas
pop
popf
test
sahf
adcl
and
lods
leave
lods
adc
dec
int
cmp
lea
sub
adc
in
pop
adc
je
aas
push
and
popa
mov
roll
outsl
dec
mov
jno
aaa
push
jbe
dec
fwait
cli
jo
adc
pop
lods
cmp
lds
orl
mov
mov
ds
and
lcall
ljmp
fistl
pop
cs
mov
test
xor
jbe
mov
dec
int
fwait
mov
adc
repz
add
outsb
adc
inc
xchg
add
inc
pushf
fsub
sbb
push
dec
and
dec
loop
pop
sti
iret
cmp
sarb
insb
cmc
loopne
xorl
xchg
stc
pop
push
adc
cli
cmp
mov
cmp
repnz
aaa
mov
jno
mov
adc
inc
ss
mov
mov
inc
test
mov
mov
lret
rorb
cwtl
push
in
cmpsl
ret
and
mov
rorb
dec
enter
and
or
sbb
sub
movsbl
out
mov
lret
adc
lock
xor
aad
hlt
rcll
mov
ret
xchg
sbb
out
mov
movsl
xor
xchg
fs
mov
mov
ficoml
cmpb
ret
cld
rcr
or
xor
mov
and
xchg
cmpsb
adc
or
cmpsb
adc
mov
jl
outsb
lds
addr16
orl
mov
leave
pop
iret
repnz
or
mov
push
mov
xchg
dec
gs
loope
fmull
mov
aaa
inc
rorb
push
and
sbb
cmp
enter
leave
cmp
nop
out
mov
or
out
cltd
ror
dec
jmp
rcll
xor
push
pushf
jmp
jnp
adc
xlat
sub
fdivrl
or
adc
sti
or
movsl
outsl
and
mov
aad
and
jno
movsb
dec
sub
mov
int
insl
scas
into
push
outsb
add
incl
push
lods
jno
fstpt
jecxz
jp
mov
getsec
push
mov
sub
mov
in
scas
sbb
push
jp
daa
icebp
aad
jecxz
push
outsb
mov
scas
scas
xchg
das
mov
daa
inc
mov
incb
stc
xor
push
mov
cmp
lret
outsb
push
shl
dec
out
jae
cmp
jmp
cmp
pop
mov
jno
out
test
movsl
in
mov
mov
sbb
outsb
subl
clc
push
push
cltd
mov
add
push
sbb
push
mov
ja
je
out
int
pop
movsl
push
inc
inc
hlt
add
fistpl
adc
xchg
mov
adc
cmp
or
jle
jp
mov
mov
ja
inc
inc
leave
pusha
mov
or
cmp
add
aas
inc
xchg
sub
inc
inc
sbb
cmp
pop
push
mov
outsl
jg
in
add
addr16
mov
jp
mov
imul
and
repz
cli
mov
add
lcall
popf
mov
scas
test
fwait
shlb
sarb
sub
leave
icebp
or
pop
das
or
push
cmp
lods
mov
fildl
sub
pop
dec
into
ljmp
stos
ja
lods
or
push
ja
cwtl
push
rcrb
or
inc
in
sbb
shl
imul
jge
mov
adcl
mov
out
ds
xor
pusha
add
inc
push
out
mov
in
xchg
cs
jb
es
jbe
out
mov
ffreep
add
sbb
cmp
leave
inc
stc
mov
icebp
xor
ljmp
rorl
les
imul
cmp
push
testl
negb
popa
push
push
ror
popa
pop
sbb
stos
inc
sahf
aas
divl
mov
fnstsw
xor
imul
cmpsb
ja
dec
popa
sub
add
jl
adc
push
mov
cmp
push
cmp
pusha
lea
mov
cld
ja
mov
fldl
setl
cmpsl
jmp
fs
daa
outsb
out
xchg
outsb
pop
loopne
inc
aad
dec
mov
mov
rclb
movsb
dec
pop
jbe
outsl
lock
stc
and
jno
dec
adc
push
clc
in
or
add
arpl
decb
or
dec
std
dec
add
test
in
loop
lock
lahf
sbb
bnd
outsl
mov
int3
push
fstl
adc
ret
and
shll
add
jbe
pusha
jg
mov
or
arpl
sbb
or
hlt
pusha
movsl
adc
imul
xchg
dec
pop
fcmovu
push
daa
mov
pop
adc
cmp
into
cld
xchg
sbb
jne
xchg
cmpsl
iret
mov
lret
cmc
push
adc
mov
ds
in
cs
jl
mov
xor
fidivs
imul
fnstcw
push
loop
jg
sub
test
arpl
cmp
cmp
mov
pop
loope
pop
xlat
scas
test
imull
push
xor
mov
into
cmp
rcrb
jbe
pop
mov
mov
scas
inc
pop
cmp
mov
popf
ja
lods
loopne
fsubs
add
add
ds
mov
xor
inc
push
mov
loop
push
pushf
fiadds
inc
xchg
aaa
or
popf
mov
mov
mov
xor
xchg
repz
push
xchg
repnz
dec
cwtl
adc
and
ud0
std
or
scas
push
sbbb
xor
push
int
outsb
icebp
iret
ffree
xor
ja
subb
into
out
xor
mov
mov
cli
in
test
lds
xchg
adc
leave
lock
sub
icebp
and
hlt
or
std
clc
adc
cmp
pop
sub
xchg
fiadds
fs
pop
aam
mov
lods
nop
cld
test
fistps
jne
nop
and
and
xor
push
roll
into
sarb
pop
popf
shlb
mov
add
mov
stos
loop
out
jecxz
test
stos
pop
mov
push
stos
in
push
rcl
sub
pushf
cmp
inc
movsb
push
test
ja
cmpsb
push
sbb
add
rorl
loope
sub
movsl
arpl
sbb
push
jo
iret
adc
out
call
in
pop
les
push
xor
cmp
or
jmp
push
daa
adc
clc
loopne
dec
inc
jo
cmp
pop
mull
sbb
or
cmpsl
mov
jl
jbe
xchg
arpl
mov
rcl
push
inc
mov
or
xchg
rolb
inc
jle
jecxz
pop
push
test
pop
repnz
add
call
inc
scas
jp
xchg
in
gs
shl
pop
mov
xor
popf
xchg
xchg
aas
ret
cmc
mov
sub
mov
and
roll
push
and
and
rcll
pusha
arpl
xor
dec
xchg
int
cli
push
jmp
xlat
sbb
insl
adc
repnz
call
cmp
int
adc
pop
mov
fidivrs
popf
orl
sbb
fsubrs
pop
jne
movsb
ja
xchg
add
inc
scas
ficompl
in
add
mov
and
adcl
movsl
fistpll
gs
testl
cmp
in
mov
xchg
pop
fwait
out
sub
add
test
mov
nop
mov
cs
xchg
cld
sub
rcr
cmp
pop
pop
test
mov
inc
or
imul
int3
jbe
je
mov
sbb
mov
sub
rep
stc
fisubl
mov
add
jp
fmulp
mov
fiadds
cld
shrb
push
cld
arpl
fnstenv
es
call
mov
sbb
incl
pop
and
sti
fisubrl
lcall
fisttps
sarb
mov
push
and
stos
or
jb
xlat
mov
cmp
addr16
sbb
pop
mov
push
jae
and
into
mov
ja
pushf
cmp
lret
mov
jnp
mov
xchg
cwtl
cpuid
int3
dec
cwtl
jne
sbb
xor
xchg
sbb
jmp
popa
xorb
pop
xlat
sbb
mov
ret
aaa
pushf
js
inc
xchg
cmp
push
dec
xor
ss
mov
and
mov
lret
fnstcw
sub
movhlps
dec
jae
insl
fxtract
jl
outsb
push
aad
bound
in
mov
mov
cltd
fcoml
sub
pop
jg
in
fisttps
jl
dec
jle
xchg
jecxz
inc
icebp
pop
jne
mov
das
mov
fadds
aam
push
push
ftst
dec
aaa
cmp
mov
push
dec
out
sbb
lds
or
cwtl
pop
adc
pop
vcomiss
popf
lods
repnz
add
enter
iret
sub
js
movb
mov
dec
cmp
mov
negb
lods
jo
aaa
mov
mov
mov
js
lcall
test
mov
mov
push
ret
and
outsb
insl
mov
mov
adc
xchg
jle
ret
push
inc
mov
test
mov
popl
and
push
add
popf
mov
cmpl
in
mov
push
bound
frstor
movsb
addl
push
adc
in
cmp
xchg
sbb
or
xlat
iret
and
fadd
jecxz
jg
xchg
mov
inc
mov
pop
ds
mov
mov
mov
xor
or
or
je
inc
movsl
xor
ficoml
fnclex
scas
int
iret
push
jmp
out
scas
sti
cs
push
mov
lret
fs
movsb
sub
inc
xchg
mov
dec
out
shr
jns
xor
sbb
and
loop
fstpt
push
addb
push
sub
and
push
shll
fwait
outsl
imul
subb
mov
in
mov
sbbb
cmc
mov
inc
sbb
shll
stos
mov
into
loopne
rorl
push
stc
add
setg
repnz
int
loop
pop
outsl
push
mov
cmp
aaa
les
stos
mov
cli
pushf
add
enter
sub
in
fdivrs
dec
shrb
xor
subl
dec
aam
lods
cwtl
mov
cltd
xchg
xorl
ja
imul
cmp
cmp
adc
jo
sar
in
aaa
xchg
jne
xor
into
mov
shrl
in
push
push
sub
jns
add
out
fdivrl
sub
pop
inc
fiaddl
fnstcw
aaa
add
mov
jg
movl
and
ror
fildll
push
xor
adc
insl
or
inc
jg
rol
cmpsl
mov
decb
mov
ret
scas
cmp
repz
stos
clc
cltd
and
imul
ss
in
pushf
pop
sub
cwtl
or
xor
scas
scas
int3
push
dec
mov
je
lock
sbb
cltd
dec
nop
jb
repz
jle
inc
xchg
mov
mov
pushf
in
aam
fnstsw
aas
fcmovnbe
jns
test
outsl
enter
pusha
dec
mov
mov
test
out
lods
xchg
push
gs
pop
icebp
int3
cmc
pusha
xor
jecxz
lcall
xchg
repnz
xor
in
loope
add
push
mov
sbb
push
mov
inc
shrb
or
jmp
in
lods
aas
std
roll
sub
mov
mov
fdivs
sub
push
mov
insl
daa
sub
out
lretw
les
fdivrl
shll
ja
into
aad
stos
mov
xchg
push
test
and
ficomps
in
inc
mov
in
mov
inc
mov
test
fstps
pop
mov
icebp
or
repz
les
cli
addr16
nop
inc
xchg
lds
push
fmull
movl
sbb
int
jo
lds
in
ja
push
jnp
fwait
ret
fcmove
sub
rclb
dec
push
mov
xchg
add
int
aas
jmp
adc
fwait
dec
pop
sbb
pushf
jmp
mov
adcb
dec
mov
sahf
aam
jp
xchg
addr16
test
sbb
inc
xor
jb
std
or
push
inc
mov
sub
cmp
scas
sub
test
std
mov
adc
rcll
ss
lahf
inc
movsb
pop
jp
mov
pop
addr16
js
inc
lcall
fcmovb
mov
out
mov
out
movsb
ljmp
sbb
into
jne
fldt
sbb
arpl
shlb
out
outsl
lds
test
aas
sbb
xchg
and
add
cli
clc
sub
add
mov
in
mov
sbb
rclb
or
xchg
jl
pop
dec
adc
push
mov
jb
cltd
icebp
enter
xchg
scas
lret
ljmp
arpl
ss
imull
lcall
xchg
gs
jbe
or
cmp
imul
fcompl
int3
xchg
enter
cwtl
push
add
rcr
jge
sub
cmp
jo
add
frstor
fwait
jmp
ljmp
inc
push
cmp
xchg
jp
fldenv
jecxz
and
sub
jl
sbb
mov
jmp
sbb
adc
xchg
dec
pop
jno
xlat
lock
and
movsb
xlat
lds
or
bound
sbb
mov
pop
add
cmpsl
mov
and
fs
or
xchg
call
aas
or
jecxz
inc
int3
add
arpl
jmp
jl
xchg
cli
add
sub
js
jb
divb
or
push
push
ret
out
das
mov
inc
mov
mov
or
cli
mov
jo
mov
sbb
jp
jo
xchg
incb
adc
jp
fs
inc
mov
les
es
in
lods
addr16
add
dec
lds
or
shll
xchg
xlat
cmpsl
in
fstps
or
pop
shr
add
inc
inc
rol
mov
jno
lret
and
inc
or
jmp
push
xchg
xchg
mov
inc
in
out
pusha
pop
mov
clc
mov
sti
lahf
cltd
out
jne
mov
shlb
stos
sarb
jae
cmpsl
jno
jecxz
push
lods
mov
lods
jg
fstps
inc
add
adc
inc
xchg
cmpsb
pushf
xchg
add
pop
test
js
test
pop
xchg
fidivl
mov
xor
cltd
stos
sbb
fs
shlb
and
outsl
jae
and
jmp
dec
out
pop
arpl
shlb
rcr
xlat
xorb
mov
sbb
lods
and
mov
data16
dec
jmp
rcll
bound
push
pop
iret
sub
adc
and
sub
fs
mov
or
lods
adc
cwtl
js
push
mov
sti
push
out
add
lods
lea
rcl
sbb
ss
sbb
mov
xchg
cli
sub
and
cmc
sbb
sub
loopne
xchg
and
mov
in
sti
push
mov
mov
push
aad
cmp
je
scas
testl
aam
gs
daa
pop
mov
xor
cli
mov
sub
out
mov
dec
into
cmp
push
pushl
lods
int
js
and
inc
and
mov
aad
or
out
xchg
cmp
cmp
rcrb
loop
lods
xchg
inc
sti
xlat
jecxz
mov
inc
dec
cs
and
lods
movsb
fisttpll
mov
shll
fsubrl
in
mov
mov
cmp
outsb
add
iret
stos
hlt
fisubrs
dec
in
outsb
fwait
jle
jmp
sbb
adc
pop
add
pop
pop
cmp
scas
es
ljmp
adc
lock
adc
mov
out
fstl
in
insb
rcl
cmp
mov
inc
push
dec
testb
hlt
push
pop
daa
js
fidivs
dec
iret
imul
mov
mov
imul
andnps
pop
stos
js
sbb
lret
cmpb
ljmp
and
fidivl
dec
mov
mov
and
leave
sub
mov
mov
lar
dec
inc
add
jle
jae
aas
mov
xor
or
rclb
inc
xor
mov
adc
mov
push
jge
sbb
xor
in
cmp
mov
mov
mov
faddl
jo
sbb
xor
push
mov
inc
nop
or
stos
js
mov
push
aam
maxps
ljmp
add
sub
out
test
adc
jne
sbb
jle
bound
and
mov
aam
cmpsb
jl
or
jae
sub
jae
mov
sub
cmp
rcl
xchg
iret
ret
sub
sub
dec
scas
in
add
dec
sbb
std
push
ljmp
rolb
or
push
es
push
cmp
mov
xor
lods
xchg
cs
cmp
cs
push
dec
call
inc
shlb
add
or
inc
andl
and
adc
inc
lock
aaa
faddl
jmp
stc
cld
mov
fcmovu
cld
jbe
push
flds
out
pushf
add
scas
std
xor
inc
cltd
mov
mov
ret
jg
mov
addr16
xor
nop
cmp
add
test
inc
imul
push
idivb
xor
mov
jl
xchg
xor
cltd
mov
out
sbb
sti
sahf
push
leave
loopne
jp
mov
ret
les
jg
jl
push
jo
cmp
mov
popf
mov
out
mov
xor
or
cmp
cmp
adc
icebp
scas
stos
and
inc
or
mov
mov
or
sbb
pop
cmp
shl
xchg
or
outsb
xlat
pop
push
sub
jecxz
push
mov
xchg
jecxz
leave
insb
push
stos
test
pop
add
repnz
dec
lods
xor
dec
loop
lcall
fwait
sub
out
jo
cmpsl
sbb
sbb
in
testl
jle
add
push
inc
dec
cli
add
mov
mov
push
lock
mov
enter
mov
cmp
mov
inc
push
jbe
jae
add
test
xchg
push
rolb
push
imul
sbb
lea
cmp
pusha
mov
sbb
xor
inc
sbb
enter
jb
shlb
dec
dec
mov
andl
insl
sahf
mov
pop
or
aam
push
ss
sub
gs
cmp
xor
pop
daa
mov
ret
jns
sar
inc
push
loop
mov
mov
cmp
and
add
icebp
sbb
out
jns
pushf
dec
sahf
mov
sti
inc
pop
cmp
jne
xchg
outsb
push
ja
in
pop
sub
adc
mov
mov
mov
loop
sbb
jmp
icebp
call
shll
jmp
stos
lret
dec
ss
cli
push
and
jecxz
adc
xor
inc
aaa
push
aas
xor
rcr
pop
sub
movsb
bound
sti
test
scas
push
jnp
push
je
rcl
sub
mov
outsb
mov
push
push
inc
sub
inc
out
stos
mov
imul
imul
inc
aaa
jbe
pop
inc
aad
cmpl
add
cmp
mov
xor
push
mov
dec
fisubrl
movsb
enter
nop
pop
mov
push
mov
inc
outsl
or
xor
inc
fwait
push
push
scas
out
test
mov
aaa
push
or
loop
int
mov
push
push
test
enter
and
sub
pop
xchg
orb
fdivrl
jle
pop
adc
imul
call
add
aad
pop
stos
sub
int
sbb
call
vmwrite
dec
push
xorl
aaa
pop
arpl
and
cld
dec
rcrb
adc
ds
sub
fld
pop
or
xchg
fildll
es
dec
mov
pusha
xchg
mov
fdiv
pop
es
mov
call
sub
push
sbb
pop
lret
setge
jne
loopne
test
jnp
hlt
insb
fiadds
scas
rolb
jns
in
or
hlt
or
sub
jmp
and
cmp
sub
shrb
adc
push
lahf
xchg
xchg
cld
int
dec
cmp
insb
pushf
dec
cmpsb
popf
or
sti
ljmp
mov
dec
aad
insl
es
test
repz
xor
arpl
push
mov
push
enter
daa
aam
and
data16
cmp
add
sahf
xchg
hlt
es
es
repnz
cmpsl
es
popa
ret
pop
or
push
dec
ja
lcall
lea
ret
jne
fs
inc
movsb
xchg
dec
hlt
or
push
push
iret
mov
and
push
fdivs
fisttpl
dec
and
push
fimuls
ficompl
fcomi
adc
leave
dec
scas
fimuls
mov
stc
mov
sbb
int
divl
imul
or
movzbl
arpl
lret
sub
test
adc
lods
cmp
fcompl
mov
jne
pop
and
or
sub
mov
cs
mov
mov
in
dec
scas
lahf
pop
and
mul
ljmp
jae
add
push
sbb
adcl
mov
push
or
mov
pop
and
xor
movsb
lahf
lods
inc
pop
dec
mov
or
stc
dec
xchg
test
repz
push
inc
adc
mov
rclb
jb
movsb
cmp
xchg
mov
cltd
sarl
xchg
ret
xchg
xchg
sbb
jle
and
pushf
fs
lret
xchg
sbb
xor
sbb
pop
movsl
lcall
rcrl
sbb
jne
test
mov
adc
ss
jp
test
and
xor
hlt
bndldx
cmp
rcr
iret
cmp
iret
mov
push
call
cmp
add
xor
lret
sub
add
and
jmp
mov
fsub
cmp
inc
jns
mov
imul
loopne
les
push
nop
lret
add
gs
mov
iret
jp
movsb
ljmp
lahf
push
xchg
jnp
cmpsb
push
out
fcomip
js
in
add
inc
pop
scas
pop
std
push
jecxz
mov
lods
ds
add
jmp
in
cmp
mov
pop
xchg
inc
es
fstpl
out
jecxz
or
jb
sub
loope
popf
mov
jl
dec
xchg
mov
cmp
dec
pop
repnz
shl
xor
mov
adc
fisubrs
push
fmuls
aas
hlt
sub
aas
je
shr
xchg
out
mov
add
jo
rorb
dec
xor
rcrl
xchg
test
ja
mov
sti
dec
pop
and
push
aaa
sbb
sbb
push
adc
popl
out
mov
fldcw
shll
scas
lret
repnz
pop
mov
cwtl
and
fidivrl
cmpsl
dec
leave
insl
mov
addb
jb
jno
lret
aaa
out
mov
int3
mov
inc
es
and
dec
push
call
jecxz
aas
pop
orb
and
cmpsb
add
and
push
loope
imul
test
mov
push
sub
addr16
jb
mov
cs
xor
lret
push
out
mov
test
add
jnp
sti
incb
cmp
mov
aas
scas
aad
push
lds
lcall
stos
imul
std
out
mov
and
ret
clc
pop
insb
cmp
lcall
sbb
sbb
or
and
xchg
fstl
imul
jbe
pop
jbe
pop
and
inc
std
lret
push
daa
sbb
bnd
mov
loope
sbb
js
jae
es
lds
hlt
out
mov
mov
fs
scas
cmpsl
sbb
hlt
sbb
add
pop
test
mov
xchg
aam
imul
mov
xor
fucomp
je
lods
jmp
dec
jmp
xor
lds
jns
sbb
scas
jbe
adc
mov
mov
rcrb
push
rorb
out
popa
inc
inc
lret
pushf
mov
cmp
ljmp
inc
inc
pop
cwtl
push
adc
repz
das
dec
xchg
and
dec
cld
xchg
inc
add
movsl
cmp
rcll
test
sub
je
mov
dec
in
xchg
xor
addr16
cmp
cli
inc
or
imul
mov
enter
cltd
push
adc
mov
les
or
pop
pushl
test
jp
sub
xor
pop
jg
popa
sbb
sbbb
sbb
mov
lock
add
jns
and
in
xlat
mov
xlat
xchg
or
or
bndldx
loopne
pop
and
push
nop
shlb
sbb
lret
mov
and
scas
cs
cmp
cmp
nop
arpl
fwait
mov
dec
push
shll
inc
add
lret
mov
sbb
xlat
jg
jns
xor
rol
cld
jg
mov
mov
mov
pop
xchg
or
xchg
cs
mov
ffreep
dec
add
lcall
cmpsl
cmc
ds
lea
fcompl
push
cmpsl
pushf
loope
xor
outsl
lods
mov
mov
cmp
les
sub
hlt
or
sti
sarl
adc
jb
popa
or
adc
cwtl
inc
or
mov
sub
pop
push
xchg
stos
pusha
jle
xor
pop
and
push
xchg
xor
sub
icebp
outsb
lahf
divb
cli
mov
clc
subl
or
mov
mov
cmp
bound
sub
iret
nop
dec
fwait
cmovl
rcrb
mov
int
cmp
mov
cltd
into
stos
loop
push
xor
and
orl
loope
jb
movsl
xor
cs
pop
add
jbe
mov
mull
ljmp
or
xor
es
adc
mov
ret
test
pusha
and
dec
loop
adc
xlat
cmpsb
inc
add
xchg
mov
fiadds
in
mov
adc
je
add
nop
pop
stos
loop
jb
push
xchg
inc
or
or
pop
jb
repz
call
lret
repnz
mov
sti
mov
xor
test
scas
les
int3
inc
jae
jnp
leave
scas
iret
mov
dec
and
das
inc
ss
cmp
icebp
popf
sbb
ds
ficoms
movsl
test
inc
ja
das
cmpsb
xchg
xchg
and
push
add
inc
pop
mov
xchg
stos
xlat
cmp
jbe
rcll
sub
in
inc
adc
cmp
sti
clc
cld
mov
inc
dec
jle
or
jecxz
es
push
hlt
dec
inc
sbb
jo
dec
mov
lock
popa
jno
loopne
mov
dec
rcrb
cli
xchg
das
jo
cmp
pop
pop
das
push
xchg
ret
add
mov
pop
adc
fistpl
inc
lock
repz
rcll
pop
cmp
cmp
sbb
test
dec
or
movl
and
pop
loopne
shll
mov
and
mov
jne
popa
ds
fldl
in
out
cltd
push
cmpsb
jo
dec
mov
dec
sarl
xor
lea
sub
pushf
arpl
jge
pop
and
bound
adcl
fs
pop
xorl
cmc
mov
jae
sbb
jp
fdiv
dec
cli
mov
push
mov
js
pop
lret
icebp
pop
push
jg
decl
scas
and
fidivl
inc
popf
aaa
mov
popf
add
frstor
mov
mov
inc
sarl
aad
andl
rcl
sbb
and
mov
ret
cld
std
mov
in
pop
and
push
mov
adc
xchg
fisubrs
lcall
inc
inc
ret
sub
jbe
mov
stos
ficomps
jle
jmp
sahf
cmp
es
sub
lds
ljmp
stc
adc
aad
and
push
pop
mov
lahf
aam
push
mov
stos
fsts
int
and
ret
sub
cmp
movsb
mov
cmp
loop
xchg
aad
xor
cltd
sbb
adc
int3
popf
daa
push
adc
jecxz
xor
jne
jne
movsb
scas
mov
add
push
test
add
movsb
xorl
jnp
jo
jns
push
sbb
stos
stos
xor
out
rol
fbld
fwait
arpl
out
mov
push
pop
jno
add
xor
outsb
jmp
and
aaa
and
gs
jg
mov
sub
jmp
and
stos
pusha
pop
icebp
mov
add
or
or
ret
mov
lahf
cltd
adc
or
or
test
pop
mov
cmp
test
mov
ret
test
xchg
les
jae
dec
lret
rorb
jo
ficoml
int3
mov
xchg
adc
mov
pop
or
fwait
lret
dec
out
fmuls
test
call
outsl
hlt
lea
inc
cmp
imul
or
addr16
mov
repz
dec
mov
mov
pop
sbb
jge
aad
sbbb
movsb
jl
jnp
push
loope
aas
ret
dec
jecxz
fwait
mov
pusha
adc
pop
lds
sub
shll
mov
sub
mov
xor
push
lea
stos
cs
loope
xchg
jnp
jno
add
dec
into
incl
push
not
and
cmp
cmp
pop
stos
inc
xchg
inc
jmp
bound
repnz
jge
push
mov
sti
mov
rcr
outsb
jmp
sbb
jl
xchg
addb
sahf
dec
hlt
ds
ja
push
in
aas
mov
jl
mov
dec
lret
mov
fiaddl
repnz
push
mov
pop
mov
popf
dec
movsb
jne
jnp
xor
movl
movsb
mov
mov
jge
rol
jae
andl
rcl
lahf
add
jb
adc
dec
adc
pop
push
lock
xor
iret
inc
xor
mov
call
iret
sbb
dec
sahf
ss
popf
in
lea
mov
push
xchg
lahf
popa
cmpsb
sub
jb
mov
enter
push
das
in
cwtl
in
lods
dec
in
mov
int3
dec
lret
sub
scas
add
sub
fs
mov
je
lea
mov
fsubrl
push
inc
xor
gs
std
test
and
in
out
fucomip
and
rcrb
cld
int3
cld
xchg
dec
popf
insl
cli
adc
dec
test
mov
stos
cmpb
shrl
inc
andb
xor
xchg
sbb
jnp
cmpsl
push
xorl
and
or
lods
xlat
mov
mov
add
mov
xor
ds
jb
les
xchg
dec
scas
repnz
add
stos
fwait
ret
mov
pop
jb
aas
push
cmpsb
xchg
jg
rcrl
sbb
sbb
jp
cmpsb
int
nop
popl
pop
xor
js
pop
and
addr16
lock
mulb
ja
xchg
xchg
sub
inc
cmp
loope
outsl
out
movsb
stos
mov
and
cli
add
xchg
cmp
or
clc
rol
call
sbb
lcall
rorb
adc
adc
inc
fildll
or
test
jmp
gs
adcb
jle
dec
or
or
lods
push
jbe
mov
cmp
loop
pop
mov
sub
pop
sbb
dec
xor
ss
fwait
push
sarl
hlt
rcrb
loop
jnp
outsb
adc
cmp
fistps
fisubrl
scas
hlt
movsb
jmp
cmpsb
sbb
inc
stos
or
ds
ret
les
pop
lea
cld
lcall
ret
into
imul
jl
pop
sbb
xchg
nop
cli
jecxz
sub
out
push
dec
pop
movsb
icebp
lahf
out
je
xchg
jbe
sarb
mov
cmp
push
pop
and
pop
mov
mov
popa
sub
ja
jle
lea
ljmp
add
leave
frstor
dec
addr16
ljmp
cmp
or
les
ja
push
imull
inc
add
fstl
inc
ja
push
pop
jnp
ret
add
fsubrs
paddw
out
mov
addr16
sahf
and
or
roll
int3
push
mov
lods
push
xchg
adc
push
punpcklwd
dec
mov
adc
pop
ds
out
aaa
sbb
hlt
dec
pop
insl
dec
iret
cmp
sub
or
xchg
jg
aad
adc
loope
pop
xchg
dec
inc
bound
cmp
iret
xchg
gs
loop
repz
js
adc
lea
mov
ss
or
push
inc
enter
add
andl
fstpt
mov
inc
fst
pop
push
sub
inc
out
add
and
cwtl
xor
cmp
adc
cmp
xchg
sub
xchg
fstl
mov
ss
jecxz
adc
fisttpl
out
cmp
and
dec
mov
mov
cs
hlt
cmp
lods
xchg
dec
fstl
ds
lea
mov
push
mov
pcmpgtw
pop
mov
mov
inc
lods
jl
push
xchg
add
sub
bound
push
ror
xor
lea
pusha
addr16
stos
jbe
dec
les
scas
adc
lods
rcll
sbb
push
push
dec
jp
dec
mov
clc
jae
lret
jns
jb
add
add
imul
setno
add
dec
xor
test
mov
xchg
ret
inc
sbb
sub
jb
in
cmp
test
mov
or
std
or
xlat
call
test
jle
sahf
loopne
aaa
shlb
add
pop
add
xchg
subl
pop
outsl
dec
outsb
pop
inc
inc
lds
stos
jp
loopne
xor
lods
adc
gs
dec
sbb
xchg
rcr
sub
sbb
rolb
outsl
clc
dec
dec
out
loopne
ljmp
mov
jb
xchg
push
push
dec
mov
lret
jb
add
push
push
mov
push
andb
pop
mov
adc
ljmp
dec
cmp
cmc
mov
arpl
mov
xor
sub
cwtl
nop
xor
shll
sub
pop
dec
inc
add
fldl2e
andl
jbe
je
popf
mov
xchg
sub
aaa
int
fcmovnu
mov
out
jnp
into
pop
cli
rorl
pop
lods
push
mov
sub
inc
clc
lods
adcb
jl
test
adcb
roll
mov
sbb
push
xchg
jnp
cmp
cmp
icebp
inc
movsb
xor
mov
hlt
adc
mov
daa
mov
add
dec
mov
mov
cs
and
or
xlat
cld
pop
inc
iret
and
sub
lds
clc
mov
in
repnz
sub
inc
adcb
xchg
push
cmp
aas
fsub
mov
mov
lret
jae
idivb
mov
in
andl
jno
or
jnp
jp
inc
sbb
push
and
test
fisttpll
popf
xchg
lods
arpl
scas
orl
push
or
scas
ret
mov
iret
sbb
xlat
inc
aad
stc
imul
ret
cmp
std
stos
cmp
aaa
mov
insb
lds
shlb
enter
fimull
call
adc
loop
aas
clc
jecxz
es
cmc
dec
dec
adc
cld
jp
bound
cmpsl
test
ja
stc
cwtl
cli
push
js
enter
out
mov
fidivs
sbb
xlat
fwait
xor
cmp
xchg
pusha
inc
dec
cmpsl
adc
push
filds
mov
mov
add
xchg
hlt
push
jge
out
cmp
cwtl
xor
jmp
sbb
mov
cmp
add
and
ret
xlat
or
xchg
repz
hlt
idivl
dec
ret
das
les
sub
dec
je
pushf
ja
or
cmp
and
mov
mov
cmp
call
pxor
xor
jle
lret
add
pop
movsb
xor
movsl
int
add
sbb
dec
inc
addr16
pop
fimull
xchg
adc
stos
insl
xchg
mov
adc
shrb
adc
push
sarb
fs
mov
cmp
mov
xor
xor
lods
mov
mov
cld
out
sub
inc
cmp
push
les
lea
pop
test
leave
js
cld
jae
ret
arpl
imul
sub
repz
push
iret
pop
mov
pop
lcall
incb
sbb
pop
movsb
in
scas
push
sti
les
imul
xchg
lea
enter
inc
mov
add
xor
in
inc
cwtl
push
mov
jb
dec
scas
rcll
shl
push
cmc
movsl
pop
mov
movsb
lods
test
aam
imul
out
xor
xlat
jo
and
jmp
push
repnz
xlat
xchg
inc
out
pop
sub
mov
rcrl
xchg
out
dec
in
and
repnz
fs
mov
lds
inc
cltd
fsubs
rcpps
inc
mov
imulb
push
insl
dec
mov
jl
add
mov
inc
movsb
mov
lahf
push
xchg
out
mov
dec
mov
and
mov
mov
not
cwtl
sti
and
lds
dec
jno
dec
jnp
loop
inc
xchg
jne
mov
sti
mov
push
add
aas
test
push
pop
cld
cmp
pop
jb
xchg
and
pop
xor
inc
sub
pusha
popf
sub
jnp
add
xchg
outsl
movsb
sbb
adc
imul
cmp
daa
and
xchg
mov
pusha
push
mov
push
gs
mov
out
dec
cld
adc
and
stos
ret
lcall
testb
xor
addr16
jg
mov
test
mov
mov
int
push
add
and
or
and
outsb
movsb
clc
and
sbb
fistpl
inc
xchg
and
cltd
inc
pop
ss
inc
enter
push
and
mov
cli
loope
in
jbe
push
cmp
sub
add
in
dec
cmp
mov
lret
and
and
mov
push
xchg
xchg
js
je
push
call
or
sahf
repnz
inc
inc
fmull
popa
mov
das
mov
add
imul
cmpsb
leave
push
sti
pop
bound
loope
cmp
andb
psadbw
out
and
popf
popa
dec
fnstcw
cs
cmpsb
pop
and
jne
add
mov
cmp
adc
movsb
outsb
pop
insb
loopne
in
jae
adc
xchg
aaa
ljmp
out
mov
adc
in
imul
dec
insl
push
mov
push
ljmp
and
inc
mov
cmp
pop
xchg
fidivl
jbe
aas
mov
rcrb
and
cmpb
dec
push
aad
divb
sbb
shl
js
add
pusha
jno
dec
in
gs
imul
jne
sbb
pop
xchg
and
adc
jge
in
lock
xorl
mov
loope
xchg
stos
push
mov
add
addb
xchg
mov
fwait
sbb
add
and
mov
cmp
imul
arpl
and
mov
add
mov
push
insl
fnstcw
imul
jno
bound
int3
pop
cwtl
cmpsb
inc
in
loope
out
mov
mov
sti
clc
mov
test
popa
mov
dec
mov
outsl
dec
mov
enter
out
add
in
mov
outsb
js
cmp
sbb
lock
cs
in
pop
int
inc
push
or
jno
fcoms
stos
test
sbb
imul
in
sub
inc
cmp
aas
inc
jb
and
loop
xor
push
mov
mov
mov
cmp
cltd
cmp
pop
jmp
pop
rolb
cltd
mov
adcb
add
lcall
das
xor
mov
or
out
push
cwtl
enter
orl
cmp
shll
sub
inc
movsl
pop
test
rclb
sub
add
inc
mov
xor
daa
inc
mov
imul
jp
push
add
lcall
and
imul
push
rcrl
fs
sub
mov
dec
inc
inc
test
insl
stc
lret
bound
inc
jmp
cmp
xor
xchg
push
es
or
mov
pushf
popa
pop
push
ss
jge
lea
mov
add
nop
imul
sbb
pop
stc
pop
pushf
xchg
js
imul
stc
mov
pushf
je
sbb
xlat
pop
inc
pop
pop
aaa
roll
xchg
cmc
fcoms
sub
cmp
dec
push
dec
xor
jp
and
mov
dec
inc
mov
xchg
and
or
fildll
mov
xlat
cmp
pop
adc
lods
ss
xor
jae
add
mov
sub
xor
sbb
push
cli
xchg
lahf
testb
xchg
outsl
orb
out
es
fmuls
fsubrl
popf
and
fs
insl
icebp
sub
shl
inc
enter
mov
js
push
xchg
fbstp
cmpb
cmp
cmp
inc
mov
jb
dec
mov
and
ret
and
cmp
nop
xchg
xchg
sub
pop
lea
cs
daa
fstpt
and
jae
mov
mov
movsb
jbe
and
out
fidivl
clc
push
push
push
fsub
fadds
mov
mov
testb
sbb
cltd
andb
mov
xchg
rcrb
leave
leave
adc
mov
push
xchg
or
cwtl
cmp
icebp
fists
lea
adc
inc
inc
lea
xor
test
mov
mov
gs
jge
leave
and
int3
mov
inc
push
hlt
jne
push
xchg
gs
cltd
pop
repz
fadd
mov
xchg
or
push
aam
cmp
cwtl
adcl
pop
xchg
rorl
push
aas
sbb
xchg
repnz
and
dec
sahf
cmpb
inc
in
adc
insb
cmp
pop
insb
xor
sub
mov
ret
push
xor
faddl
mov
ss
aam
aaa
jbe
sbb
dec
mov
sub
dec
mov
loopne
pop
mov
and
or
jl
jecxz
mov
in
push
lods
rcrb
inc
movsl
fnstenv
xchg
pop
movsb
add
sub
mov
jbe
or
sub
mov
fbstp
xchg
mov
and
and
push
sbb
out
or
insl
sbb
fcos
cld
leave
lods
push
dec
push
cwtl
add
or
repz
mov
mov
mov
cmp
int
gs
fs
hlt
pop
aaa
repz
arpl
insl
push
jb
mov
int
adc
cmpsb
jb
pop
sbb
test
adc
int3
iret
push
mov
nop
xor
xlat
cmp
mov
loopne
daa
or
inc
popa
stc
in
jl
aas
mov
ficomps
testb
les
gs
stos
inc
orl
jnp
and
pop
lcall
or
jns
sti
shl
cmp
xrelease
rcll
add
dec
pushw
mov
inc
cmp
sub
push
ljmp
decl
sbb
rolb
add
mov
imul
or
push
loopne
adc
or
js
sub
mov
dec
adc
mov
sub
test
adc
mov
jo
subl
je
fists
sbb
adc
gs
in
xchg
sahf
jge
mov
out
push
cmpsb
or
cmp
jne
aam
pushl
and
jo
xchg
sbb
cmpsl
xor
aad
fildl
jbe
or
fs
mov
lret
cmp
dec
pop
mov
dec
and
loop
aas
cmp
clc
cmp
filds
xchg
insb
fcoml
and
leave
lds
into
outsb
testl
mov
jo
jmp
sbb
outsl
or
stc
push
mov
lret
xchg
mov
sbb
data16
xlat
sub
data16
sar
int3
add
mov
test
inc
stos
loopne,pt
jl
lret
les
std
out
icebp
popf
push
mov
mov
scas
scas
add
fstps
or
repz
sbb
sub
lods
push
inc
sub
mov
mov
in
dec
push
test
mov
negl
fwait
pop
or
outsb
mov
fidivrl
xchg
adc
addr16
xchg
repz
adc
vpsrlw
sbb
push
cs
inc
sub
enter
xchg
cmp
jg
lret
push
popf
pop
dec
dec
rcll
mov
test
xor
shlb
lods
mov
imul
imulb
scas
add
adc
xor
insl
and
mov
sub
outsb
imul
cld
popf
mov
push
pop
outsl
jb
aam
aas
adc
imul
xchg
dec
xchg
mov
repz
cs
xchg
jmp
pop
mov
mov
mov
stc
jecxz
sarb
pop
test
cmp
push
rorl
js
xchg
push
scas
incb
inc
sahf
xor
add
pop
or
or
pop
sub
cwtl
sbb
xor
push
or
xor
adc
nop
xchg
adc
int3
add
andb
mov
xchg
test
into
push
pop
mov
int3
push
dec
jne
out
fwait
out
pop
sub
out
lret
xor
mov
aaa
das
cmp
sub
sahf
addr16
outsb
cmp
mov
mov
ss
pusha
xchg
add
scas
mov
mov
jns
jnp
in
cs
xchg
hlt
fsubrl
and
and
fstps
popa
ja
btl
aam
pop
jg
sbb
mov
out
xor
ret
sub
push
cmpsl
xchg
push
or
test
fidivrs
push
mov
xchg
iret
addr16
add
iret
xchg
int3
or
out
jge
and
cwtl
shrb
imul
xchg
js
push
and
decl
mov
mov
mov
jecxz
xor
dec
mov
fmuls
stos
lret
sbb
mov
in
sub
ss
dec
test
stos
push
gs
dec
sub
adc
adc
add
aas
cmc
call
in
and
jb
push
mov
cmc
rcrb
dec
sbb
cltd
mov
mov
test
xchg
mov
nop
je
lods
cmpsb
jbe
cmc
mov
mov
arpl
fwait
bound
mov
xchg
sub
pop
hlt
jecxz
idivl
mov
mov
jg
ror
clc
or
sub
jge
dec
sbb
xchg
jnp
or
push
pop
jns
mov
push
adc
mov
adc
dec
fstps
jge
test
push
xchg
outsb
js
sbb
sub
mov
call
int3
popa
jg
lahf
js
hlt
push
pusha
sbb
leave
dec
mov
ja
sub
adc
movb
fists
sbb
std
mov
and
jle
pop
frstor
mov
mov
jge
inc
lods
cmp
fwait
sbb
dec
sarb
jns
mov
adc
je
sbb
aaa
or
leave
loope
push
sbb
add
test
sarb
pop
fucomip
xchg
in
in
fdivrl
mov
fs
sbb
dec
add
fs
xchg
cli
rcrl
and
repz
jmp
jbe
jg
jnp
push
aaa
mov
adc
adc
fdivp
les
ret
fcomps
mov
mov
or
cmp
adc
imul
adc
cmpsl
pop
push
jecxz
jg
add
push
ret
or
cli
xor
daa
out
mov
and
stc
outsl
inc
inc
pop
mov
call
imul
cld
aam
shlb
add
mov
fimuls
push
cltd
sub
or
mov
mov
es
dec
test
clc
sbb
movsb
jno
cmp
add
aad
insl
add
or
aas
cmc
in
xor
pop
notl
xchg
push
bound
dec
dec
mov
cli
mov
and
testb
jecxz
xchg
mov
roll
jmp
outsb
pop
xchg
pop
rorl
jp
or
and
dec
xchg
in
sbb
jns
xor
mov
xor
scas
hlt
sub
jns
jo
adc
mov
bound
mov
dec
push
lret
add
jne
and
out
cmc
inc
les
into
fucomip
cmp
sub
push
and
dec
ret
jno
jns
inc
addl
popa
push
mov
movsb
sbb
cmp
lret
mov
or
cwtl
and
jne
inc
sahf
incb
lret
sahf
sub
add
lods
lock
lods
fsts
mov
or
mov
shlb
imul
jno
mov
stos
int
shlb
into
adc
ds
popa
out
push
sbb
movzbl
xor
jno
in
mov
aas
out
xor
and
out
mov
sbb
or
lcall
lock
int
push
xchg
icebp
icebp
jmp
lahf
out
into
bound
sub
mov
cmc
das
fnsave
rorl
adc
shlb
mov
loop
cs
mov
outsl
inc
fadds
jge
out
lcall
pop
int3
pop
dec
sbb
stc
push
xchg
xlat
cwtl
nop
jecxz
and
fstpl
in
jns
rcrl
cmpl
mov
out
lret
add
jnp
mov
or
adcl
mov
push
sbb
mov
sub
shlb
aad
pop
icebp
enter
inc
sahf
aam
insb
jnp
cli
mov
and
nop
lock
xchg
pop
js
inc
repz
cs
and
xchg
sbb
lret
lock
pop
in
scas
dec
ljmp
das
pushf
cmpsl
les
notb
inc
mov
push
je
pop
sub
add
jo
xor
fildl
inc
jge
fwait
xor
cmp
mov
jl
add
and
inc
mov
out
mov
pop
arpl
inc
inc
icebp
ficomps
adc
cmp
shlb
arpl
push
aaa
xor
call
and
pushf
popf
shr
in
movsl
insb
fwait
shrl
std
mov
and
jle,pn
aaa
push
stos
mov
sub
sub
test
add
xor
mov
outsb
sbb
lods
sbb
lock
cmp
mov
out
cmpsb
jle
scas
inc
adc
jns
dec
push
dec
in
imul
cmpsl
jno
pop
cmp
lcall
inc
jg
cli
and
push
jnp
mov
sbb
or
fs
jl
jae
repnz
jmp
mov
and
out
cmpsl
stc
cmp
xchg
xor
mov
out
pop
and
dec
sbb
inc
cwtl
out
repnz
and
push
push
mov
rcrb
insb
jl
ljmp
xchg
add
in
jne
imul
cmp
or
jmp
idiv
jge
loopne
inc
adc
lds
cmc
xchg
xchg
inc
sbb
scas
aad
vpsubq
incl
dec
mov
mov
lock
mov
pushl
pusha
pop
fisttps
leave
xchg
test
sbb
mov
mov
add
or
cld
mov
repz
les
mov
jnp
jg
sahf
nop
sub
incl
fs
ret
mov
lret
mov
ja
in
xchg
int3
mov
lret
push
scas
mul
mov
mov
pop
add
aam
xor
adc
xchg
je
ficoml
ljmp
out
mov
and
push
or
in
add
out
insb
adc
and
pop
jecxz
sbb
sub
xchg
loopne
mov
inc
jmp
sbb
gs
int3
push
jle
xchg
dec
sahf
movsb
or
inc
mov
push
push
xchg
push
and
das
xor
popf
mov
fidivl
xor
sahf
xor
outsl
mov
mov
lea
lods
mov
sbb
push
lcall
scas
jp
je
cmp
repnz
pusha
fmull
cwtl
xchg
sub
push
push
inc
adc
inc
and
stc
ds
aaa
mov
bnd
jge
dec
push
pop
add
push
loop
or
pop
adc
lea
mov
fdivl
adc
jnp
aaa
cmp
cwtl
imul
or
mov
sti
jo
lret
cmpsl
pop
aaa
xchg
out
stos
jle
inc
pop
and
out
insb
jle
lods
jb
or
sub
jge
inc
adc
push
icebp
sbb
cmp
sti
das
jne
jno
and
dec
rol
mov
ljmp
cltd
fldt
fildl
shlb
out
loop
leave
push
or
icebp
jmp
clc
fisubrs
or
mov
xor
ja
or
and
jp
pusha
xchg
mov
add
dec
insb
mov
mov
int3
icebp
popf
or
outsl
mov
mov
push
rcr
loop
imul
cmp
cmp
sar
fsubrl
push
dec
fcomip
mov
out
xor
mov
xor
add
cmp
imull
js
into
aad
dec
adc
lahf
sub
aam
mov
test
ret
mov
enter
sbb
pop
hlt
imul
fucomi
gs
cmp
daa
jl
insl
jge
popf
insl
cmpsl
mov
roll
xchg
dec
cld
cwtl
push
dec
sbb
add
jne
xchg
outsl
add
mov
ds
loopne
js
adc
xor
sbb
push
bswap
jmp
inc
outsl
sbb
ret
fidivs
scas
insl
inc
scas
xchg
push
and
pop
inc
imull
nop
fwait
push
out
mov
enter
into
fbld
mov
dec
arpl
add
and
lods
push
je
pop
fs
jb
outsl
pusha
pop
cmc
data16
dec
mov
cmp
lods
stc
push
inc
cmp
jns
shl
lds
sbb
out
cmc
pop
bound
xor
jmp
cwtl
out
sub
mov
lea
dec
push
inc
jle
mov
stos
dec
xchg
jg
dec
dec
xchg
or
dec
in
std
inc
pop
test
idiv
int
pop
push
pop
and
cmp
mov
jge
xor
add
push
leave
mov
popa
movsb
mov
pop
sub
sub
rcr
fcmovnbe
adc
addr16
push
sub
pushf
call
mov
pop
cmpsl
xor
or
and
adc
mov
push
repnz
cmp
cmp
sbb
pop
push
jmp
call
pop
jb
or
mov
fwait
mov
mov
ja
adc
fbld
scas
int
mov
and
and
ret
out
sbb
cmc
xchg
xlat
and
fwait
movsb
sub
ret
daa
addr16
popl
push
xchg
pop
pop
adc
pop
dec
dec
les
add
mov
mov
jmp
gs
inc
jge
push
test
pop
arpl
lock
fcmovbe
jmp
mov
loope
sub
ja
scas
pop
ljmp
push
lds
addr16
cwtl
add
imul
shrb
fs
cmc
mov
mov
lods
mov
and
jge
loope
fs
out
dec
outsl
or
add
popf
dec
in
or
mov
add
jl,pt
xchg
fdivs
xchg
cmp
fldenv
das
shrl
push
mov
loop
test
sbb
mov
mov
mov
mov
cs
xchg
les
xchg
leave
cmp
adc
push
jb
pusha
push
hlt
push
in
sbb
dec
loopne
das
adcb
lods
imul
mov
sub
mov
xor
fcmove
arpl
repz
js
pop
cwtl
jecxz
mov
inc
mov
jg
sbb
stc
mov
mov
mov
test
push
loopne
out
or
or
cmpb
fiaddl
inc
nop
adc
std
inc
aad
insb
repz
cmp
xor
cmpsl
mov
mov
icebp
pop
sbb
mov
sti
aaa
jmp
js
mov
jl
les
fists
lcall
adc
fimuls
xor
mov
lods
sahf
cmp
cld
add
scas
push
das
out
jmp
pop
mov
inc
cmp
adc
add
sahf
jno
insb
lods
aaa
cmp
adc
sbb
sbb
lret
cltd
lea
mov
pushf
aaa
or
jle
xchg
mov
js
jbe
cmp
inc
mov
out
shll
push
jmp
cwtl
rcrb
in
ja
push
add
dec
cmc
lcall
nop
pavgb
hlt
dec
repnz
ficompl
stc
xchg
repz
repz
dec
push
pusha
inc
push
adc
and
clc
popf
bound
out
pop
push
mov
sbb
clc
or
mov
rclb
mov
jbe
and
pop
pusha
sub
out
mov
cmp
or
loope
gs
ljmp
mov
es
movsb
divl
test
cwtl
sub
cmp
adc
lahf
jbe
pop
testl
loop
mov
lock
jp
flds
and
repz
lock
mov
mov
and
out
jnp
cs
iret
add
mov
adc
pop
or
dec
pop
aad
adcb
cmp
clc
pop
dec
fs
fcoml
inc
mov
push
nop
int
outsb
pushf
mov
mov
mov
fwait
cltd
adc
pop
sub
mov
lock
xor
mov
stc
pop
pushf
test
adc
push
and
jg
mov
xchg
inc
gs
cmpsb
jl
ljmp
fiadds
push
cltd
outsl
scas
mov
xor
push
xchg
and
xchg
mov
cmp
mov
shll
inc
enter
lea
fadds
adcb
jb
addr16
push
sbb
push
adc
in
pop
xor
mov
loopne
add
stos
mov
lock
jg
icebp
push
jg
pop
and
aas
icebp
xchg
mov
mov
add
lcall
mov
mov
xor
adc
dec
xor
sti
ret
pop
cmp
sahf
jne
xor
adc
push
sbb
inc
ja
fidivs
jnp
sub
push
xchg
in
movsl
cmpb
pop
xchg
mov
cltd
inc
out
testl
mov
xchg
or
or
out
cmpsl
cmp
ds
mov
add
inc
out
and
fcompl
push
lea
outsl
test
inc
stos
dec
pushf
sti
mov
pop
rcr
cmp
dec
insl
in
cli
xorl
jbe
in
nop
scas
stos
jo
in
call
fdivs
lds
bound
lahf
inc
jmp
clc
mov
in
pusha
pop
xchg
push
sbb
xchg
jne
iretw
push
insb
data16
mov
xor
adc
or
xchg
shlb
push
ja
jmp
pcmpgtb
ss
notb
jg
rorl
push
xor
in
ror
jp
cltd
jecxz
or
or
dec
and
imul
in
push
pop
popf
test
data16
fsubp
mov
lods
jb
add
aam
or
lret
push
lcall
cmp
out
adc
cmp
pop
dec
or
mov
jbe
add
and
sbb
mov
mov
rcl
gs
scas
push
xchg
popf
xorb
lahf
dec
imul
pop
ds
cmpsb
jp
push
adc
shlb
dec
sbb
out
jnp
xchg
pop
into
dec
sbb
cli
adc
in
inc
int
inc
or
mov
sub
cmp
push
enter
pop
xor
cmp
fwait
mov
inc
jno
mov
pop
push
and
xor
push
ljmp
add
out
cmpsb
imul
test
adc
in
fucomip
std
lahf
imul
lret
fldl
or
in
fwait
in
sub
inc
lods
mov
inc
xor
rorb
push
ficomps
push
fwait
aam
jb
cltd
mov
mov
lock
popf
cwtl
add
mov
push
push
insb
mov
cltd
mov
in
sub
inc
pop
xor
push
sub
jp
adc
inc
das
mov
push
mov
xchg
add
sahf
dec
jno
rolb
jo
inc
push
call
ja
aaa
inc
adc
inc
rcll
out
inc
scas
mov
sahf
ficomps
cld
loope
mov
aas
stos
cs
jnp
loopne
loop
xchg
inc
ret
push
insl
aaa
roll
and
imulb
add
stos
popf
jo
repz
sbb
mov
cli
pushf
mov
test
fcmove
sub
pop
sbb
sbb
pop
scas
pop
sub
add
adc
icebp
jmp
xchg
xor
push
mov
jb
or
xchg
cmpsl
out
fbld
shrb
ljmp
aad
mov
or
in
mov
pop
or
pushf
call
cli
loope
vmovups
mov
xor
in
nop
les
jne
insb
adc
mov
imul
inc
roll
and
in
sub
sbb
pop
aam
fsubl
rorb
fstl
pop
cmp
cltd
push
lret
lock
pop
add
push
adc
and
stos
add
xchg
pop
fucomi
pop
mov
sbb
decb
and
enter
pop
xchg
mov
lret
iret
xor
outsl
ss
mov
inc
xor
shll
aaa
lcall
and
mov
andl
stos
sub
mov
fdivrl
lahf
ds
icebp
pop
adc
pusha
repz
mov
out
daa
loop
lock
iret
xchg
fwait
mov
sub
push
aaa
cmp
inc
jg
nop
icebp
imul
out
jno
out
jns
pop
sub
das
add
out
ds
and
push
pop
gs
mov
fdivrp
cmp
mov
sbb
pop
addr16
mov
inc
mov
and
inc
jle
cmp
mov
lret
or
xor
cmp
lock
and
xor
dec
xchg
sbb
push
lret
scas
je
mov
mov
hlt
xchg
jo
dec
push
lock
cmp
inc
sarl
jns
push
ret
movsl
xor
inc
aas
into
inc
out
mov
out
loope
sbb
or
movsb
inc
mov
pop
and
mov
repz
ret
int
push
sub
hlt
adcl
int
mov
test
push
jg
mov
sarl
inc
ds
push
leave
add
sub
sub
fs
in
stos
xor
push
inc
jle
cmp
outsl
das
call
test
shlb
pop
adc
sub
inc
mov
jae
and
mov
ja
mov
das
ret
sub
sub
pop
out
and
mov
fstl
inc
cld
les
xor
pop
ret
mov
fsubl
pop
sarb
popa
fsubp
inc
lcall
shll
jae
pop
mov
test
daa
dec
stos
push
jo
jno
es
sbb
cmc
ss
cmc
inc
jne
mov
pop
push
pop
push
xor
pop
mov
rolb
push
pop
insl
add
orb
cmp
mov
jne
inc
aad
inc
cmpsl
xor
push
adc
adc
dec
outsb
cltd
ret
cmpsl
and
or
sti
jne,pt
jns
lcall
xor
pop
jno
jle
aas
or
clc
adc
das
in
add
sbb
mov
push
dec
and
pop
popf
xor
int3
cwtl
inc
aas
mov
test
inc
icebp
push
xor
mov
cltd
xchg
cld
mov
mov
mov
insb
push
loop
mov
mov
push
cmp
inc
mov
xchg
and
fnstcw
fildll
call
cmp
sub
push
enter
jmp
xlat
push
or
cwtl
mov
sbb
int
dec
cmpsl
mov
mov
lcall
outsl
mov
inc
mov
pop
xchg
shlb
dec
jbe
push
scas
pushf
adc
or
mov
push
aas
adcl
mov
imul
out
and
addb
push
in
js
popf
jno
push
adc
sbb
mov
int
pop
and
mov
scas
les
call
xchg
sbb
or
inc
lret
mov
mov
push
sub
outsb
mov
mov
fists
lret
das
push
mov
cmp
jne
inc
pusha
test
int
mov
sti
cli
push
lods
insb
mov
stc
inc
loope
and
cs
mov
jns
mov
cmp
mov
mov
lcall
les
cmp
inc
jge
mov
loop
xor
lods
push
jae
dec
repz
inc
or
add
inc
push
sub
imull
mov
jbe
inc
mov
mov
notl
inc
jae
jae
rorb
xlat
sub
in
mov
test
out
sub
imul
cwtl
loop
cmp
mov
mov
push
push
pop
scas
repnz
fs
adc
xchg
jp
in
jns
mov
cmpsl
fucomip
rcll
je
sarl
jb
or
dec
adc
push
je
fcompl
leave
mov
mov
enter
pop
xor
mov
adc
movsb
pop
iret
scas
push
mov
xor
enter
push
lock
test
mov
cmp
cmc
mov
loop
xchg
das
pop
pusha
sub
ja
xlat
scas
hlt
popf
mov
sub
arpl
inc
push
imul
xchg
gs
xchg
rdmsr
imul
divl
mov
mov
push
imul
call
neg
cld
cli
push
shll
cmp
mov
jecxz
pop
cmp
and
sbb
jle
imul
pop
ret
repnz
mov
repnz
mov
jecxz
test
les
mov
cmpl
fdivl
fcmovbe
out
inc
pushf
stc
mov
mov
jge
xchg
outsb
nop
scas
adc
cmp
and
out
jbe
jge
ficompl
lds
push
add
repnz
in
sbb
in
jmp
sbb
cmp
in
or
pop
js
les
lcall
in
and
int
jb
or
sbb
jne
or
jbe
pop
jl
insb
xchg
shrl
test
cmp
pusha
fadds
jae
or
sub
mov
xor
pop
test
ss
and
mov
mov
in
xchg
mov
aad
and
lock
adc
mov
sbb
or
dec
sbb
subb
out
push
rclb
mov
into
sub
popa
add
cs
jmp
loopne
cmpsb
pop
cmp
xor
mov
cmp
imul
xchg
adc
push
fimull
test
or
das
lock
mull
mov
add
stc
js
mov
ja
jle
push
and
loop
rcr
push
push
sti
xchg
fbld
enter
and
mov
xchg
pop
dec
xchg
sbb
jno
mov
mov
inc
and
scas
mov
pop
mov
dec
mov
je
or
movsl
int3
cwtl
iret
xchg
cltd
jnp
xchg
sbb
xor
imul
call
sahf
outsb
push
ds
hlt
ja
fldt
fisttps
pusha
and
divb
jecxz
mov
ds
push
std
pop
pop
mov
idivl
cli
cmp
sub
mov
push
jl
sbb
in
lock
or
fucomp
sbb
std
nop
push
and
pop
mov
dec
mov
sarl
mov
lret
add
pop
dec
push
sbb
das
jbe
dec
and
xchg
mov
lret
mov
mov
mov
add
xchg
bound
imull
cmpl
es
loopne
mov
into
and
aam
add
push
outsl
pop
jl
out
fwait
aam
push
cmpsb
in
xchg
adc
ja
lock
js
into
jl
ljmp
pusha
stos
test
mov
xchg
aad
repz
sub
int
ljmp
inc
les
gs
imul
inc
xchg
xor
cmp
fimuls
or
cli
jp
adc
cmp
ljmp
inc
test
in
jmp
cmp
or
and
shll
dec
xchg
je
mov
ficomps
bound
sub
sbbl
push
pop
lods
arpl
int
sti
popa
mov
jecxz
lock
ss
pop
mov
sti
movsl
jae
mov
jl
imul
dec
pop
loopne
pop
sbb
ficomps
je
sbb
sbb
xchg
or
xchg
dec
insl
and
cltd
outsl
mov
add
xchg
pop
pop
sub
or
loop
inc
loop
rol
mov
test
pop
or
into
cmp
or
inc
and
mov
ja
push
sbb
and
shrb
mov
mov
jb
sbb
stos
or
mov
or
sbb
ficompl
shrl
jb
or
mov
bound
push
push
ja
jg
test
fdivrs
mov
repz
ja
mov
sti
add
call
push
add
cli
mul
addr16
aad
xchg
inc
imul
addr16
pop
mov
pop
ret
rep
movl
jnp
inc
das
adc
add
inc
sub
pop
sbb
bound
sti
out
insb
mov
test
cbtw
inc
jo
ljmp
pusha
and
or
xchg
test
mov
test
clc
pop
fsubr
clc
repnz
mov
sub
push
divb
mov
adc
dec
out
xor
dec
mov
mov
pop
negl
add
push
pop
cld
lret
jnp
mov
pop
and
mov
jnp
enter
fsts
xchg
outsb
cmpb
fldenv
cld
dec
push
cmpl
sub
jno
fdivp
enter
out
jae
cmp
mov
ret
pushf
imul
push
jecxz
jno
xchg
out
in
clc
or
popa
inc
fcoms
in
mov
xor
decb
loope
xchg
lods
dec
sbb
inc
pop
daa
ds
mov
out
lret
pop
stos
or
push
outsb
jno
and
repnz
lds
adc
xor
jo
js
or
out
lret
dec
sarb
push
aas
cmp
cmp
jae
sbb
mov
lods
add
dec
imul
adc
and
dec
shl
in
jo
mov
sar
xor
addr16
negl
fstpl
rcl
pushf
xor
jmp
lret
icebp
lods
or
push
nop
add
mov
aaa
repz
lods
mov
gs
mov
in
les
fnstsw
cmpsb
pop
add
mov
push
movsl
aas
jge
sti
hlt
lods
and
andl
lret
cli
mov
ret
shrl
lods
cmp
push
mov
ja
lods
sbbl
mov
test
mov
sub
xchg
adc
movsl
jge
lods
xchg
jae
out
inc
add
push
cmp
jb
xchg
and
cmpsb
aas
outsl
xor
popf
addr16
sub
sub
jl
adc
jnp
popf
adc
inc
sbb
pop
xchg
and
push
loop
cmp
stc
mov
lds
push
insl
fstps
pop
lods
pop
pop
sub
push
lcall
inc
leave
add
adc
mov
nop
addl
int3
lods
out
xchg
inc
sbb
sbb
call
xor
mov
test
repz
mov
out
mov
mov
ret
in
testb
in
mov
ds
in
das
stos
or
pop
stos
ret
imul
and
sbb
jnp
lcall
mov
xor
cmpb
lock
add
add
lock
cltd
subl
into
shrb
jno
cmp
push
mov
jecxz
dec
inc
cmp
push
xchg
out
mov
loopne
jle
movsl
mov
lods
pmaddwd
shl
pushf
ror
push
aam
sahf
call
pop
or
cmp
mov
in
mov
lcall
adc
and
cwtl
test
cmp
mov
adc
xor
lock
or
cld
cmpsl
dec
lret
pop
and
adc
bound
imul
aaa
mov
pop
or
add
adc
mov
stos
push
mov
mov
push
addl
xor
adc
jno
addb
cmpsl
loope
es
push
cmp
mov
in
mov
dec
jl
sub
jl
push
sub
and
ss
and
jge
mov
jno
xor
push
repnz
stos
or
jb
orb
pushf
cld
decl
repnz
fsubr
rol
imul
sub
mov
mov
adc
sahf
jbe
call
dec
cs
insb
inc
mov
enter
addr16
fcmovnbe
daa
cmp
int3
ljmp
movsl
dec
out
jnp
mov
pop
cli
lret
pusha
mov
mov
int3
cmp
xor
test
movsl
in
loop
outsb
mov
sub
fs
dec
lock
orb
mov
bound
push
cmc
jl
dec
xchg
dec
mov
xchg
scas
sahf
in
mov
ja
mov
xchg
mov
les
incb
lahf
sub
cmp
int3
loopne
rol
fdivs
lods
inc
addr16
out
dec
hlt
test
je
push
rcl
rorb
push
mov
inc
ss
es
scas
lcall
sub
xor
out
sub
xor
lahf
mov
insl
sub
popa
iret
sub
shl
add
in
fsubl
and
or
jne
aad
and
mov
arpl
stos
insb
cmp
lods
fs
mov
hlt
push
fstpl
pop
and
popl
rorb
cmpsl
mulb
fistpll
lock
outsl
cmpsl
rcll
xchg
inc
je
xchg
mov
lret
cwtl
or
dec
xor
push
pop
mov
sarb
test
jne
insb
in
mov
pop
pusha
push
out
out
test
sbb
mov
push
test
mov
add
sbb
dec
pop
ficompl
sbb
or
mov
and
push
and
inc
fbstp
jge
mov
adc
into
test
sub
mov
mov
arpl
int3
pop
and
clc
hlt
jae
fcomip
mov
pop
mov
lret
lods
fisttpl
jbe
and
ret
and
sti
ficomps
sbb
push
mov
orb
outsb
out
jo
adc
push
mov
lcall
xchg
push
pop
in
repz
pop
inc
cltd
push
push
xor
std
pop
cli
mov
addr16
mov
mov
mov
dec
cmpsl
mov
sbb
out
mov
repnz
push
out
popf
dec
mov
or
cmpsl
sbb
mov
in
icebp
dec
rcrb
popf
sbb
rcrl
add
mov
pop
mov
sbb
pop
mov
pop
bound
xchg
in
fsubrl
sub
cmp
ljmp
push
test
and
mov
pop
dec
in
inc
sbb
in
sti
xchg
sbb
fimull
movsb
jb
jo
imul
ja
inc
cmpsl
xchg
bound
fidivl
jmp
out
ja
ljmp
or
lahf
repz
push
jb
inc
or
mov
dec
mov
and
ffreep
xor
icebp
adc
orb
jle
lods
insb
jg
mov
inc
ds
push
clc
loope
push
push
cmp
imul
iret
test
leave
adc
out
mov
sub
sub
das
dec
mov
mov
cmp
outsl
leave
sahf
out
rcl
dec
or
add
pop
das
push
je
push
jno
mov
or
repnz
inc
jne
loope
push
pop
mov
sbb
mov
dec
sbb
in
mov
sbbl
mov
insb
aad
dec
andb
mov
xor
ret
cmp
aas
adc
mov
sbb
rcll
cmpsb
pop
mov
add
jge
sub
sub
icebp
call
mov
sub
rol
aam
sti
mov
js
adc
adc
dec
inc
jge
cs
je
inc
cmpl
push
stc
sti
mov
sbb
sti
sbb
and
popa
cmp
adc
mov
xchg
pop
sbb
or
sbb
loope
cs
ljmp
dec
inc
jno
mov
mov
jge
repz
and
xor
cmc
or
inc
repz
mov
ss
push
fimuls
adc
push
jmp
movsl
adc
inc
ret
jle
jo
int3
scas
push
lret
out
mov
sbb
das
sub
jns
loopne
decl
jae
outsb
pop
push
dec
gs
shlb
int3
mov
fsubrs
dec
fistpl
addl
inc
daa
xor
cmpsb
fmulp
cld
ss
mov
and
jno
mov
lods
lea
jb
negl
adc
out
aam
cmp
subb
lret
ja
jae
jbe
jbe
out
dec
cwtl
hlt
and
dec
push
mov
mov
cmc
cmp
dec
in
add
decl
ljmp
sar
mov
enter
loop
sbb
jge
ljmp
shlb
xchg
or
cmp
insb
scas
clc
loope
jbe
xor
ret
xlat
mov
and
mov
pop
faddl
mov
fwait
cmpsb
ficomps
lods
aam
sub
scas
cmp
mov
add
outsl
mov
mov
mov
fldenv
inc
rcr
mov
inc
cmp
or
jmp
lods
lahf
pop
fsubr
out
lret
ds
movsl
orl
jl
das
aaa
fwait
in
dec
outsb
cmp
mov
push
adc
pop
mov
sbb
mov
push
cmpsl
enter
sti
xor
add
int3
iret
gs
and
int3
add
xor
mov
sbb
dec
mov
mov
les
stc
adc
push
call
fcmovnu
sub
push
sub
jne
ret
jne
test
imul
cmp
js
and
sub
xlat
sbb
mov
pop
cmove
test
lahf
les
inc
loop
stc
repnz
inc
mov
or
sarl
dec
inc
fstpl
xchg
add
push
iret
pop
jne
xchg
mov
or
xchg
sbb
adc
leave
pop
mov
into
lds
sbb
jo
jno
sbb
outsl
test
insl
cmp
rcll
aam
mov
outsl
push
in
shlb
pop
push
adc
scas
lahf
xchg
push
std
xor
cld
sbb
add
les
aad
inc
shlb
ror
xchg
les
xor
sbb
daa
xor
jns
or
and
add
cmpsb
in
push
repz
add
cs
jbe
pop
inc
push
hlt
movsb
shlb
push
lahf
notl
adc
xchg
lock
fstp
int3
mov
test
je
out
xor
cli
in
inc
mov
mov
cmpsb
push
ret
testl
int3
mov
dec
push
test
sbbb
gs
jmp
add
icebp
loope
xchg
mov
jne
mov
pop
nop
test
scas
inc
int3
mov
in
push
cmp
sbb
or
pop
cmp
ret
sbb
jecxz
adc
jmp
or
xor
cmpsl
cmp
push
cmp
dec
lds
or
pop
loopne
sub
pusha
mov
mov
inc
divb
adc
fbld
cld
and
lahf
shr
jmp
or
jo
stos
push
cs
popf
fidivrl
adcl
movsl
ds
fldcw
mov
pop
in
movsb
adc
pop
push
cli
ss
sbb
push
and
in
push
scas
push
jecxz
mov
mov
scas
insl
cld
inc
aam
movsl
lock
ljmp
sbb
push
push
cs
shll
movsl
in
jp
adc
fisubrl
push
add
xchg
ja
into
outsl
out
mov
adc
push
jp
push
push
inc
enter
push
jecxz
add
inc
cmp
push
add
adcl
mov
ljmp
in
fstl
adc
repnz
in
add
insl
pop
add
dec
mov
mov
push
mov
push
mov
lock
stos
or
xchg
mov
cmp
pop
outsl
fdivrs
in
sbb
sbb
outsb
or
push
lock
out
xchg
push
ja
add
fdivr
add
mov
sub
cmc
pop
call
inc
add
xchg
and
stos
lcall
ja
fnstsw
arpl
lret
cmp
stc
mov
cltd
jmp
or
enter
shl
roll
scas
pop
stos
out
lret
loopne
push
mov
ss
insl
xchg
sbb
dec
xchg
fcompl
jo
adc
jle
add
xor
mov
pop
jl
hlt
lret
fsubrl
les
call
dec
cmpsb
sbbb
and
sbb
xchg
push
cmpsb
cmp
fsub
jecxz
inc
icebp
ds
jl
aaa
xchg
add
adc
jg
dec
pop
sahf
mov
jno
mov
adc
pushl
idivl
cltd
mov
push
mov
lods
xchg
pop
and
xchg
flds
shrb
jne
movsb
out
adc
push
add
push
mov
push
sahf
push
es
repnz
aaa
pushf
xchg
cmp
push
movsb
pop
or
arpl
pushf
jge
aad
pop
sbb
and
testl
in
cs
inc
popa
aad
mov
das
loope
xchg
xchg
gs
mov
jg
and
xor
and
mov
dec
icebp
pop
xchg
je
bound
mov
cmp
mov
xor
jno
push
inc
inc
pop
xchg
fnstsw
mov
cltd
pushf
xchg
push
inc
mov
pop
xor
adc
nop
pop
and
jne
mov
mov
mov
cs
jmp
lods
sbb
mov
and
mov
ss
dec
ja
mov
clc
aaa
bnd
idivl
and
xchg
pusha
fcmovnu
enter
jns
vmovntps
hlt
and
cli
fprem1
xchg
jae
cld
repz
push
popf
adc
scas
add
mov
fistpll
aad
push
mov
out
gs
sarb
and
sbb
adc
fstpt
imul
dec
mov
fidivrs
jne
push
fdivrl
incb
out
xchg
push
icebp
shlb
je
mov
or
pop
sti
mov
or
jmp
in
mov
pop
xor
and
icebp
xor
loopne
jno
pop
std
xchg
aad
sub
in
xor
and
mov
or
adc
sbb
jle
cmc
jno
push
xor
xchg
fists
test
sbb
and
imul
mov
sbb
repnz
fidivs
push
addr16
movb
rcrb
dec
cmp
movsb
xor
daa
xor
jle
cmp
mov
xor
jno
mov
insl
repnz
jns
fstpl
jb
sbb
lcall
adc
xor
ljmpw
dec
add
pusha
fcompl
dec
push
rolb
adc
mov
dec
addr16
fistps
xlat
mov
or
ret
jb
pushf
cwtl
out
sbb
dec
cmp
mov
xchg
lret
pop
and
sbb
sub
push
add
dec
cmpsl
out
sub
test
in
lea
inc
add
push
mov
xchg
lcall
mov
popa
jnp
mov
adc
or
pusha
fdivl
adc
xchg
popa
sub
andl
ret
fs
ds
jb
xchg
lods
adc
pop
mov
ret
orl
xor
cwtl
lret
sbb
mov
push
inc
aas
adc
lret
dec
add
insb
sbb
cmp
cmp
rclb
xor
pop
add
and
sub
xchg
and
mov
inc
in
xchg
jae
push
sub
jns
push
xor
jns
pop
sbb
aad
pop
add
sub
imul
lcall
jo
ja
movsb
dec
ret
sbb
mov
outsb
or
mov
out
add
cmpsl
sbb
cmp
or
into
hlt
in
lret
dec
sub
xor
mov
add
lret
mov
sahf
popf
jmp
fwait
add
push
add
adc
jp
inc
mov
fisttpll
jo
pop
insb
aaa
mov
repz
popa
daa
lret
jmp
lods
xor
xor
cmp
pusha
dec
add
pop
enter
ja
mov
mov
mov
test
dec
and
cli
mov
in
aad
outsb
cmp
xchg
jge
mov
js
add
jecxz
cmc
std
mov
xchg
adc
arpl
daa
stc
mov
adc
outsl
movsb
pop
jle
fldcw
out
mov
scas
jno
test
fwait
mov
xchg
mov
gs
and
ret
iret
mov
dec
mov
repz
pop
ja
jo
repz
xlat
aad
push
sahf
in
or
lds
sahf
jecxz
jmp
hlt
cmp
pushf
stc
push
ret
pop
ds
mov
add
sbb
pop
pop
jae
in
mov
mov
lret
add
or
xchg
addb
push
repnz
es
je
pand
mov
addr16
jge
xorb
and
mov
push
adc
in
xchg
outsb
xchg
cmp
popf
mov
pop
andb
xor
push
cmp
divb
incl
loop
cwtl
ljmp
add
or
add
mov
mov
mov
mov
mov
cmp
inc
aas
jl
mov
jne
and
mov
mov
jp
pavgw
xor
mov
test
rorb
pop
fldl
xor
ss
test
lahf
hlt
mov
repz
rclb
sub
mov
int
sub
and
sub
sub
mov
jmp
lock
hlt
pusha
push
pop
jge
mov
popa
dec
mov
cmpl
ret
pop
jb
sub
jns
push
xchg
push
and
inc
add
pop
dec
es
add
test
dec
fsubr
stos
adcl
test
orl
mov
cmpsb
lret
loop
add
pop
pusha
dec
or
cs
aad
jo
leave
push
cs
mov
icebp
sbb
cmp
sbb
jno
imul
pop
inc
jg
cmc
or
ja
roll
leave
and
or
mov
fisubs
mov
mov
inc
nop
popf
or
jb
aas
xor
or
mov
pop
inc
jne
push
xchg
lods
fxch
int
mov
imul
inc
jge
pop
pop
jecxz
xor
xchg
ljmp
ljmp
pop
aam
mov
jo
fsubr
dec
lds
psrad
lgs
repz
or
notl
lret
hlt
movsl
ret
ds
dec
xchg
daa
mov
fidivs
imul
cmp
push
dec
lods
icebp
or
fists
dec
shl
adc
push
jmp
xor
outsl
shrl
fiadds
popa
or
fmull
iret
pop
pop
nop
mov
fistpll
sub
adc
cmp
and
jns
xor
and
and
inc
adc
iret
les
sub
jp
inc
aam
inc
xor
insl
or
lds
xchg
out
jge
xor
clc
les
out
xchg
imul
addr16
xchg
addl
add
inc
lcall
out
add
flds
cmp
add
scas
add
aas
stos
xlat
jge
jecxz
lods
fcoms
add
aam
adc
or
mov
enter
mov
cmpsl
dec
ss
enter
push
loope
test
pop
out
dec
test
xor
mov
add
mov
cld
and
add
cmpsl
imul
push
fwait
jecxz
mov
add
mov
lret
bound
std
or
aad
cmpl
mov
jno
mulb
push
cmp
ja
testb
jmp
jb
imul
mov
cli
repnz
xchg
outsb
push
fnstenv
mov
das
pusha
ja
inc
pop
pop
mov
cmp
ljmp
lea
fists
repnz
or
lds
jg
pop
push
xchg
sbb
pop
inc
js
cmpl
mov
push
adc
je,pn
jb
mov
dec
add
mov
or
enter
jl
jns
mov
lahf
jmp
mov
dec
outsl
dec
jle
mul
jl
jae
sbb
mov
test
fs
inc
lods
pop
cltd
out
out
mov
mov
sub
out
inc
aad
test
loope
sub
mov
jo
test
sub
imul
ja
lods
mov
cmp
cmc
pop
in
aam
pop
pusha
pop
loop
enter
mov
xchg
jb
enter
mov
jb
mov
xchg
push
sub
mov
pop
adc
push
inc
mov
dec
cltd
lods
ljmp
lcall
nop
cmp
repz
sub
std
leave
push
loop
mov
sub
inc
and
sbb
es
call
jl
xor
outsb
lods
jmp
mov
das
jp
lds
lret
mov
std
cwtl
inc
in
and
sub
inc
hlt
jecxz
aam
daa
pop
mov
ds
inc
and
mov
mov
pop
xor
fistpll
icebp
pop
mov
cmp
clc
out
mov
cwtl
xor
dec
dec
in
jns
scas
fisttpll
xchg
lods
xlat
mov
mov
adc
sbb
inc
fiadds
fisubl
cld
setno
dec
sub
dec
xchg
dec
gs
cmp
arpl
jmp
push
sbb
fsubr
dec
xlat
cmpsl
inc
add
dec
xchg
data16
and
cli
xor
xlat
loop
fsubr
dec
sti
cmpsb
xor
dec
sbb
cmp
jge
dec
cmp
sbb
outsb
inc
pop
xchg
and
fistpl
mov
int3
jmp
adc
arpl
mov
fisubrl
cmp
mov
repnz
ret
inc
fsubs
ja
pop
mov
and
aam
out
adc
dec
push
or
scas
test
or
cwtl
fwait
dec
rcrl
push
jae
add
push
cmp
mov
cli
addr16
mov
xor
enter
loopne
imul
sarb
jmp
push
and
add
inc
xchg
mov
pop
lods
cmp
or
repnz
or
fisttps
insb
xchg
stos
dec
cmp
cmc
push
imul
sub
mov
push
shrb
push
add
add
fs
imul
sbb
lock
xor
outsl
jne
stos
mov
hlt
fstl
dec
adcb
movsb
scas
outsb
icebp
inc
jne
arpl
inc
add
mov
mov
cli
in
add
add
sarb
pop
fwait
lcall
scas
in
cli
pop
jp
mov
and
cmp
loopne
lock
cwtl
or
mov
out
sbb
and
mov
pop
cs
sti
inc
movsl
js
and
pushf
arpl
pop
xchg
es
or
push
jmp
lret
xchg
sub
orb
int
enter
nop
lcall
push
mov
adc
adc
ja
popa
ficoms
push
stos
mov
mov
push
push
test
repnz
cmp
inc
pop
shrl
xor
mov
rclb
es
fs
dec
jmp
fwait
pop
or
faddl
pop
das
or
sahf
jmp
mov
pop
cmp
js
pop
and
mov
jb
mov
and
sahf
sti
fldt
div
pop
clc
loop
aas
jnp
cwtl
add
daa
xchg
inc
pop
mov
aad
ja
dec
out
into
inc
xchg
inc
xor
pusha
add
xlat
inc
or
pop
ss
pop
iret
mov
push
das
lods
dec
adc
mov
cmp
pushf
sub
je
movl
pop
addr16
pop
add
and
bound
roll
push
jmp
mov
add
push
mov
dec
fidivrs
sub
aaa
bound
rcl
sub
jo
push
mov
sub
outsb
addr16
cmp
in
rcrl
test
pop
lock
sub
cmpsl
cwtl
or
jns
test
jno
jl
test
sbb
push
clc
pop
pop
cmpb
jecxz,pn
jg
jle
das
pusha
clc
xor
out
pushw
ret
jmp
fisubs
aam
andl
cmp
add
std
pop
sbb
and
dec
dec
dec
pop
cmp
xlat
cmc
mov
repz
into
fimuls
sub
loop
push
xchg
subl
loop
xlat
or
mov
push
inc
fwait
sub
je
cmp
xchg
mov
jns
jb
sub
lret
cmc
in
pusha
add
loop
pop
pop
xchg
repnz
mov
jbe
enter
xlat
mov
jb
lods
mov
dec
mov
xor
lret
repz
sbb
ficoms
lock
pop
call
test
addb
outsb
lods
outsl
dec
sbb
xor
pusha
in
cmp
pop
enter
enter
xchg
mov
xchg
in
ljmp
pop
lds
ret
insb
jl
das
sbb
das
enter
xchg
adc
sti
xor
xchg
popf
sbb
pop
jnp
fdivl
in
stos
fimull
mov
cmp
es
fstpl
jl
push
clc
mov
outsl
sbb
faddl
push
mov
addr16
rcrb
pushf
xor
mov
cmp
mov
and
jmp
shr
mov
jp
je
mov
shr
sub
mov
loopne
mov
pushf
insb
and
movb
add
outsl
inc
pop
xchg
mov
sub
xchg
add
push
xchg
jecxz
push
xchg
or
push
addr16
fidivs
pop
sbb
js
loope
lods
push
cmp
mov
cmp
in
mov
addr16
loopne
jp
in
xor
or
push
fidivs
mov
shl
dec
jmp
push
mov
cmp
pop
pop
lods
mov
push
arpl
mov
sti
mov
stc
xchg
std
test
fstl
cmp
and
das
xor
push
fldenv
lret
mov
mov
mov
pmaddwd
hlt
mov
xchg
ja
mov
dec
ljmpw
jg
push
data16
lods
std
jns
dec
fdiv
mov
mov
mov
cld
cmp
adc
dec
rcl
push
xchg
fldt
jge
pushf
or
js
addr16
cmp
sub
inc
push
test
mov
jge
mov
faddl
cmp
cld
xchg
testl
filds
leave
std
adc
cwtl
xchg
push
jno
push
mov
fstpl
jge
adc
cmp
mov
inc
xchg
addr16
push
cmp
add
and
cmp
test
add
cmc
push
loope
or
cld
pmullw
testb
pop
lcall
popa
repnz
mov
testb
leave
cs
adc
xor
push
push
sub
sbb
jbe
pop
mov
push
sbb
sub
sahf
mov
mov
mov
ret
push
sbb
push
xor
lods
xchg
push
sbb
adc
and
iret
mov
dec
shrl
mov
inc
subl
jae
xchg
gs
xor
xchg
mov
dec
pop
jmp
mov
inc
cmp
inc
movsl
fcmovnb
xchg
adc
mov
cmp
in
loope
ret
dec
insl
adc
inc
xchg
test
cmp
mov
jb
test
add
adc
adc
mov
mov
outsl
add
pop
fdivr
xor
incl
pop
push
in
inc
xchg
lods
add
jbe
xorb
xor
or
js
add
popf
adc
roll
and
or
sub
negb
sub
imul
jb
shl
imull
arpl
pop
aas
arpl
pop
inc
xchg
pop
loop
push
adc
push
out
jns
movsl
lret
cltd
enter
and
dec
outsl
imul
scas
aam
in
push
fcmovnu
add
xor
and
pop
cli
ljmp
dec
repz
stos
std
sbb
test
lds
nop
outsl
jno
mov
mov
xchg
pop
mov
das
push
test
cmp
pop
mov
and
mov
fistpll
repz
push
adcb
adc
sub
pop
pop
mov
jns
fmul
mov
leave
pop
mov
nop
popa
xchg
push
sbb
mov
ljmp
fs
or
rorb
xchg
call
test
ret
sarb
dec
adc
add
push
setns
andl
mov
xor
push
pop
mov
push
cmp
add
sub
xchg
rorl
push
movsl
jle
outsb
inc
call
sub
leave
sbb
int3
xor
inc
cmp
insl
jge
daa
fimull
data16
hlt
xor
mov
lahf
jmp
adc
test
sbb
test
xlat
ds
jnp
ja
mov
mov
fstp
imul
stc
lds
xchg
and
daa
adcb
xlat
mov
push
adc
lret
fdivr
fstpt
and
in
adcb
mov
cmpsb
mov
add
adc
fsubs
add
neg
ss
mov
inc
in
dec
push
enter
lds
data16
imul
inc
add
sub
jl
loop
dec
push
pop
pop
push
mov
cld
mov
lods
dec
ret
dec
jb
pop
movsb
std
mov
outsb
mov
shlb
and
int3
movsl
je
dec
rorl
rep
sbb
dec
and
inc
lcall
lods
push
jns
sarb
dec
lea
xchg
xchg
cmp
mul
les
dec
xchg
mov
xchg
popa
int
add
mov
rcl
adc
out
mov
pop
sbb
add
mov
mov
mov
call
mov
cmp
pop
push
lret
mov
mov
xchg
popa
cmp
add
insb
popf
xchg
adc
sbb
pop
cmp
add
jmp
in
imul
in
pop
leave
cmc
sub
jb
xlat
std
sub
repnz
mov
mov
xchg
dec
test
jno
out
in
mov
jno
leave
repz
xchg
push
pop
mov
inc
dec
js
cwtl
out
jmp
dec
inc
test
lock
clc
push
pop
outsb
mov
xchg
pop
adc
in
or
jmp
shl
push
xchg
mov
enter
lds
jne
out
mov
push
xchg
bound
cld
int3
inc
push
orl
outsb
fldt
lods
inc
rcrb
jmp
mov
xchg
mov
mov
data16
mov
push
lret
test
mov
outsl
inc
push
mov
scas
lret
sti
int
jb
sbb
roll
insb
jne
push
pop
mov
xlat
push
mov
cmp
sub
fidivs
mov
adc
fldl
das
xor
pop
sub
cmpsl
cmpsl
pop
mov
xor
add
pop
sub
loopne
jle
xchg
jp
andb
xchg
insb
fwait
ds
mov
lcall
mov
adc
jae
imul
lock
xor
aad
jge
inc
or
jmp
mov
pop
fsincos
rclb
mov
or
test
cmpsl
sub
vaddsubpd
sbb
mov
cmp
mov
xor
or
xchg
sub
fwait
sub
outsb
pusha
mov
xor
cli
dec
sbb
jmp
fisttpl
fnsave
movsl
int
and
push
pushf
inc
push
mov
ss
xchg
cmp
into
loop
das
mov
out
jl
call
movsb
inc
outsb
jnp
xchg
xor
add
mov
insb
cwtl
jo
or
neg
cmp
jl
pop
add
bound
pop
test
mov
mov
mov
iret
dec
mov
sbb
jg
test
aaa
cmp
mov
inc
cmp
sbb
sarl
and
lods
icebp
jge
incb
pushf
xchg
in
pop
push
test
or
adc
ds
idivb
cmp
adc
sahf
mov
inc
imul
outsb
mov
mov
ja
pop
int
push
out
mov
add
mov
sub
mov
stos
rolb
lret
fimull
mov
mov
mov
push
jnp
sbb
inc
dec
hlt
movsl
dec
movsl
mov
mov
stos
fsubs
loope
mov
mov
ret
xchg
jg
lock
cmp
mov
dec
or
jnp
fldl
push
push
or
pop
out
mull
and
push
sub
adc
insb
in
dec
popf
ret
je
insb
in
roll
fstps
std
sbb
pop
stos
mov
mov
or
and
daa
add
insl
gs
leave
jo
das
push
cmp
testl
add
push
xchg
cmp
negl
sbb
or
jp
bound
les
outsl
arpl
int3
xchg
js
cmc
aas
rcl
int
stos
adc
cmp
mov
enter
cltd
and
aas
or
and
aam
mov
inc
std
jb
cmp
test
lret
jns
aaa
add
rcrl
aas
shll
sbb
xchg
cmp
mov
in
add
lret
adc
fcomps
inc
push
fdivrl
notb
call
movsb
mov
fsubs
gs
dec
aam
pop
fsubrs
enter
loop
sbb
mov
sub
repnz
xchg
jg
lds
leave
and
xor
bound
addr16
add
lahf
imul
add
aad
mov
or
hlt
sbb
scas
dec
xchg
in
movsl
xchg
xor
jge
jb
aaa
std
xor
jmp
jo
adc
ljmp
sub
stos
fimull
add
movsb
pop
xchg
stc
pop
orl
bound
push
push
out
repnz
cmp
mov
mov
cltd
test
ja
or
fsubl
and
repnz
cs
das
jo
mov
shlb
hlt
lahf
mov
test
jno
mov
push
xor
mov
jne
stos
jno
jmp
sub
ss
mov
pop
jb
mov
xor
or
pop
sbb
in
dec
mov
in
pusha
xlat
push
mov
out
lret
jl
into
xor
out
lahf
rolb
dec
xchg
xchg
cmp
push
stc
stc
fwait
and
std
rcrl
jns
gs
mov
ret
lds
dec
leave
push
sbb
pop
subl
mov
lods
js
inc
sub
pop
and
insb
das
pop
adc
pop
cmc
pusha
aam
mov
cwtl
mov
inc
xor
adc
xchg
xchg
push
jno
into
in
mov
mov
cmpl
xor
inc
push
sub
mov
mov
iret
add
sbb
or
xor
loope,pn
ds
in
rcll
sbb
outsl
cmp
popf
xchg
ljmp
sub
ja
push
popa
jmp
lods
arpl
cli
cltd
adc
xor
pop
mov
mov
pop
mov
inc
jb
add
dec
movsl
cld
lods
sub
mov
insb
sub
mull
cmp
loopne,pn
jmp
aam
outsl
ljmp
xor
push
mov
mulb
cmp
lahf
cmpsl
aad
dec
adc
arpl
mov
dec
imul
in
pop
dec
fcom
xchg
daa
mov
mov
sbb
sbb
pop
clc
lret
push
fwait
adc
fnstsw
cmp
cs
jns
pop
aaa
in
dec
and
pop
mov
push
dec
inc
outsl
cmpb
imul
std
insl
push
push
pop
dec
xor
push
sbb
mov
or
jl
iret
dec
cmpsl
inc
insb
test
add
xchg
add
dec
ss
mov
scas
call
popf
mov
mov
push
jmp
popa
cmp
out
or
push
negl
in
es
enter
rcrb
insl
stos
pusha
adc
inc
mov
sub
mov
cmp
mov
xor
dec
sbb
stos
pop
jb
push
cwtl
sub
mov
push
xor
and
daa
jge
jg
jecxz
clc
int
xchg
aas
xor
ljmp
pop
leave
test
push
scas
pop
mov
cmp
arpl
cmpl
pusha
jb
mov
ja
leave
sub
inc
in
adc
sbb
xchg
jmp
lds
icebp
push
clc
mov
leave
ror
xor
das
xchg
mov
out
jnp
push
in
loopne
mov
addr16
les
adc
xchg
and
ficomps
xor
in
dec
shl
test
lock
push
pop
in
shll
push
or
xchg
les
icebp
insb
cs
xchg
insl
pushf
pop
cmp
in
sbb
movsl
cwtl
sbb
aaa
and
adc
cmp
sub
pop
gs
mov
dec
adc
sub
cs
mov
inc
mov
les
out
jns
push
or
arpl
test
mov
add
mov
add
inc
dec
test
in
mov
dec
mov
gs
pusha
adc
inc
xchg
imul
mov
in
lea
jl
data16
test
xchg
pusha
inc
cld
fdivrs
push
xchg
sub
sbb
cmpb
or
mov
shll
adc
setnp
into
cwtl
push
push
xchg
fldt
push
xor
dec
pop
pop
cmp
sahf
dec
iret
sar
pushl
div
pop
pop
out
inc
mov
setp
and
arpl
ss
and
jge
movsl
loop
xor
lcall
jae
xchg
cmp
aas
sub
movsb
insl
mov
xor
lahf
jo
les
movsb
lods
mov
outsb
lret
and
movsl
or
push
jg
cltd
mov
pop
sti
and
cs
push
fiaddl
popl
leave
add
cmp
xchg
jp
xchg
lods
mov
jae
cmp
test
push
xchg
mov
inc
jle
mov
and
cmp
std
dec
or
push
iret
push
mov
jnp
and
push
mov
int
fnsave
hlt
mov
jnp
sub
or
adcl
and
cli
dec
add
and
leave
and
sub
and
adc
in
pusha
pop
mov
sbb
repnz
sbb
xchg
pop
or
push
andl
pusha
lods
aas
inc
das
inc
das
inc
sub
sbb
mov
and
mov
stos
popf
jb
scas
test
pop
pop
adc
xchg
xbegin
add
xchg
aas
jae
sbb
xchg
pop
popl
inc
xor
lcall
mov
pop
cwtl
ljmp
mov
and
lret
gs
sbb
push
popa
std
xchg
arpl
mov
sub
add
decl
mov
std
push
inc
push
pop
icebp
das
and
frstor
outsl
stc
pop
in
test
rorl
mov
pop
insb
test
aam
adc
fcmovu
stos
daa
mov
mov
stc
test
mov
add
jb
push
ret
jae
loop
nop
dec
les
icebp
arpl
fiadds
mov
jmp
mov
sub
test
push
push
in
js
cmp
sti
lods
stos
orb
cli
mov
pop
jl
dec
or
cmc
or
daa
sub
dec
mov
mov
and
addr16
aas
mov
push
mov
out
call
mov
jnp
dec
xchg
adc
xor
stos
and
shl
and
cmp
jg
lret
bound
clc
inc
inc
call
pop
test
jle
adc
mov
int
bound
out
aam
insb
std
enter
mov
xor
inc
out
pop
pop
push
andl
fptan
ret
jbe
and
icebp
lret
repnz
mov
push
xor
in
mov
adc
sub
and
xchg
adc
sahf
adc
adc
out
dec
addr16
mov
mov
cs
in
mov
mov
enter
pop
aaa
mull
cmp
cmp
popf
add
test
or
decb
cmp
cmpsb
out
mov
push
push
jecxz
and
sub
int
movsb
pop
test
xchg
mov
cmp
mov
lock
or
dec
test
cmp
push
mov
push
push
adc
mov
aad
paddw
lds
mov
out
fwait
jne
add
xor
mov
rcl
jecxz
call
add
ficompl
xor
pop
mulb
leave
out
push
icebp
iret
push
cmp
fnsave
mov
icebp
and
sub
jne
mov
je
lcall
ret
xchg
int3
lea
push
jmp
sbb
jle
xchg
out
lret
add
add
add
add
out
jmp
int3
ds
jb
stos
jno
jmp
push
dec
xchg
enter
das
pop
fs
jl
out
insb
popf
mov
sbb
stc
pop
push
jle
xchg
stos
in
popf
je
imul
movsl
add
jne
aas
jle
outsb
mov
cld
ja
imul
outsl
dec
sub
out
push
pushf
rcll
int
xchg
movsl
or
fcmovnu
and
cmp
ss
cld
inc
cmc
and
outsb
scas
pop
adc
shlb
mov
stos
or
sub
mov
adc
fstpt
lahf
cli
ja
cwtl
mov
dec
sbb
dec
pop
cld
insl
out
int3
mov
xchg
dec
dec
push
jmp
xlat
push
pop
pop
xchg
pop
push
adc
and
sbb
fs
in
bound
pop
push
cmp
daa
in
fmuls
repnz
bound
setge
jnp
jnp
andl
lods
mov
cmp
lods
sbb
pusha
jge
mov
jbe
repz
cltd
test
out
leave
adc
dec
and
mov
dec
loope
inc
cmovge
xor
pop
mov
jns
xor
cmp
iret
cld
and
inc
in
adc
icebp
fmull
xor
mov
in
nop
ljmp
inc
inc
sub
lods
inc
pop
jne
leave
pop
add
dec
test
ja
sbb
stc
cmp
out
mov
cs
push
inc
mov
test
inc
pop
inc
ret
je
mov
lods
popa
cmp
push
nop
mov
xchg
aad
aad
outsl
pop
mov
ss
cmp
clc
imul
dec
cwtl
cmp
fwait
dec
pop
pop
lods
andl
pop
dec
jmp
sub
xchg
pop
and
mov
sarl
xor
or
add
out
aam
xchg
mov
jmp
jp
xchg
ret
shrl
jecxz
and
mov
out
stc
cs
pop
jmp
mov
push
push
add
xor
daa
jp
jge
je
jge
jne
push
or
mov
cmc
jg
mov
jge
sub
cmovb
adc
xchg
fisubrl
sbb
sbb
jl
test
hlt
stos
out
and
cmp
imul
mov
pop
cltd
jne
adc
sub
movsb
adc
cmc
test
int
push
sub
push
xor
ja
fldcw
inc
and
jne
outsb
sbb
int
jmp
mov
les
loop
mov
push
sbb
xor
mov
adc
mov
stos
sub
and
jge
sti
popa
call
inc
mov
imul
mov
xchg
push
fisubrs
jg
cmp
lods
sub
or
orb
fists
aam
cmp
fbld
fwait
dec
inc
inc
mov
sbb
adc
scas
loopne
sub
mul
add
jno
addr16
jae
fwait
stos
enter
loopne
mov
dec
lock
lret
bound
xlat
fistps
push
sub
sbb
push
mov
xor
mov
fwait
add
aad
das
mov
add
out
sbb
nop
bound
mov
cmp
lahf
jb
push
outsl
jno
imul
popaw
fcompl
int3
fwait
mov
and
and
jbe
ja
jle
jne
mov
sub
cmp
jge
cmp
mov
add
mov
repz
hlt
cmp
and
into
jecxz
mov
push
int
xchg
pop
into
imul
or
push
xlat
inc
sbb
je
pushf
mov
loopne
mov
or
scas
je
mov
cmpsb
cmpsl
popa
pop
jle
dec
clc
sbb
xor
inc
jmp
fcomps
mov
pop
push
imul
mov
push
int3
in
cmp
adc
arpl
std
shlb
mov
dec
add
movsl
lods
mov
ljmp
sarb
je
mov
xor
lahf
out
sti
jb
out
pushf
and
in
jns
mov
cmpsl
sub
pop
pop
mov
roll
adc
mov
xchg
mov
jae
jmp
push
sbb
xor
pushf
addb
sub
mov
mov
sahf
jecxz
aam
imul
pop
out
aam
add
int
gs
jb
lea
cmp
fldenv
push
notl
sub
jp
adc
push
in
icebp
xlat
or
sub
out
xchg
mov
sbb
in
xlat
lcall
loopne
out
insb
sub
pushf
leave
shrl
fildll
xor
xor
pop
insl
clc
cld
inc
jo
adc
shl
push
mov
jb
mov
mov
adc
dec
and
outsb
gs
cmc
mov
jle
in
imul
or
loopne
stos
xchg
stos
sbb
xorl
push
add
jnp
nop
ss
xchg
pop
nop
dec
or
mov
sub
mov
dec
out
mov
cld
jp
out
rcrb
mov
jmp
pop
andl
push
lods
adc
jle
rcrb
inc
lea
pop
xchg
push
or
add
mov
sbbb
cmp
std
insl
call
cwtl
in
push
sub
test
dec
sbb
arpl
sbb
mov
inc
sub
adc
scas
xchg
jle
es
out
iret
mov
cmp
popa
loop
add
enter
xchg
gs
clc
loop
pop
xchg
sbb
mov
xchg
lret
inc
add
pop
aas
adc
sahf
mov
mov
out
stc
add
sbb
jb
test
jb
gs
icebp
jnp
pop
test
loopne
xchg
es
movb
jno
inc
cmc
push
adc
in
inc
ja
pusha
repnz
push
jbe
xor
jae
sbb
test
lahf
insb
stos
clc
in
sbb
inc
in
cmp
pop
js
mov
or
mov
ja
push
stc
scas
jmp
imulb
ret
xchg
shll
cltd
inc
aas
jae
psrad
int
pop
xchg
add
sub
rorl
inc
xchg
bound
dec
push
ret
addr16
addr16
ss
insb
ja
fcomip
call
cwtl
movsl
lods
add
mov
cld
adc
pandn
sub
ljmp
sbb
cld
jg
sbb
cmp
xchg
mov
lret
xchg
mov
mov
rcr
pop
xor
mov
mov
adc
mov
fcomip
push
sub
sub
lock
les
shl
pop
push
or
repz
xor
and
jnp
adc
sub
icebp
rcrb
movsl
clc
es
and
nop
data16
out
in
sub
adc
test
push
mov
shlb
je
shrb
add
in
sub
inc
sub
adc
xor
arpl
shrl
jbe
fcomps
dec
test
enter
push
mov
adc
testb
gs
rol
out
lds
shlb
xchg
lock
xor
or
gs
push
xorl
sub
lods
popf
jp
add
mov
pop
lahf
jl
push
movsb
leave
jns
xor
dec
mov
out
sbb
out
lret
orl
mov
push
bound
add
sub
cmp
cmp
sub
bound
dec
mov
pop
les
lds
sahf
mov
dec
sbb
xor
call
sbbl
cmpsl
inc
aas
inc
cwtl
ljmp
push
pusha
fwait
js
mov
lret
xchg
dec
aas
push
outsb
mov
push
pop
jp
mov
lds
ret
lret
sub
add
cld
lock
and
adc
cmc
stos
adc
inc
popf
fcoml
jmp
sub
and
movsl
jecxz
fistpl
mov
push
sbbb
mov
jge
xsavec
bound
cmp
out
sub
add
fcomps
mov
pop
add
fisubrl
cltd
xchg
push
les
cmp
call
sub
pop
jge
andb
or
arpl
or
jecxz
imul
adc
or
int
inc
xor
arpl
insl
push
cs
cmp
or
les
jns
dec
lret
xchg
mov
pushf
lods
sti
mov
dec
lea
mov
sub
das
xor
test
xchg
and
xor
outsl
lds
shlb
pop
inc
sti
mov
ljmp
push
add
fnstenv
rorb
pop
xchg
pop
add
sahf
pop
lds
shll
mov
aas
mov
or
mov
inc
xchg
comisd
xchg
lcall
push
inc
push
sub
arpl
jae
fildll
jp
sub
push
sti
mov
or
fwait
subl
mov
inc
das
shll
xchg
xor
or
jno
ss
outsl
ret
add
mov
fists
and
xchg
push
js
mov
add
icebp
loop
ret
jb
inc
push
push
in
xor
push
pushf
outsl
mov
jno
xor
ljmp
std
int3
xorl
xlat
jmp
js
loopne
cmc
xchg
add
mov
push
ss
testb
scas
add
sbb
jl
testb
and
repnz
sbb
mov
lods
int
scas
stc
ds
loop
pushf
ret
cld
mov
lcall
jg
add
inc
clc
test
mov
insl
pushf
pop
or
dec
dec
fs
xchg
gs
lahf
daa
insl
mov
js
sarb
loopne
in
push
gs
xchg
pop
icebp
jo
loop
jp
movsl
ljmp
sub
daa
nop
addr16
rorl
loopne
or
push
add
push
pushf
loopne
jno
sub
mov
test
mov
stos
movsb
jecxz
sbb
cmovae
mov
jl
sub
aaa
inc
mov
cli
fistps
rep
inc
mov
adc
add
flds
mov
out
pop
jo
ss
aam
jl
incl
xchg
jge
lret
mov
mov
call
cld
push
insl
loop
lret
push
lahf
lahf
fucomip
push
dec
fisubl
push
mov
inc
and
rol
add
sbb
xor
xchg
mov
in
mov
jl
or
scas
in
xchg
jb
cli
sub
ja
cli
xchg
leave
mov
pop
inc
gs
jb
pop
add
fldenv
mov
fsubrs
xchg
inc
push
add
mov
lods
mov
push
jle
enter
mov
pop
jle
lock
mov
test
hlt
lret
push
push
rol
aad
pop
pop
fs
mov
dec
xchg
sbb
fwait
mov
incb
dec
and
iret
mov
add
or
sub
sbb
pop
movsl
adc
xchg
aad
jb
add
sti
in
cwtl
and
aaa
loope
jno
cmp
pop
sub
mov
outsb
add
lods
lds
mov
mov
test
arpl
pop
ror
ja
push
scas
jno
stc
cs
ror
cmp
mov
inc
fldenv
cmp
push
mov
mov
scas
out
fcomi
lahf
mov
pop
mov
mov
stos
sti
push
mov
sub
lods
jno
push
mov
popa
mov
xchg
xor
xlat
sub
inc
or
lods
xor
aam
xlat
fistps
popf
rclb
jns
mov
test
verr
out
mov
loope
add
sub
or
js
loope
loopne
loopne
cs
dec
lret
jb
push
mov
inc
outsb
out
and
or
lret
jg
outsb
addb
ljmp
adc
and
mov
xchg
push
lcall
dec
add
mov
inc
dec
cld
scas
jne
mov
pushf
les
divl
jae
lahf
xabort
shlb
inc
lret
adc
xchg
rolb
js
lock
add
enter
dec
shll
sbb
pop
lds
repz
sti
je
cmp
cld
clc
pop
or
lret
scas
jle
and
lds
cli
addl
and
fidivl
cltd
or
or
jb
out
pushf
jecxz
out
sub
int
insl
pop
push
scas
ss
sub
orb
cwtl
lds
jnp
jo
xchg
inc
sub
adc
xchg
jns
les
outsb
insl
ss
xor
ret
adc
out
xor
pop
inc
gs
shll
or
xchg
leave
clc
mov
out
int
aaa
popa
out
jle
clc
inc
dec
or
mov
dec
adc
mov
nop
out
dec
or
stos
mov
popa
push
test
aam
iret
mov
clc
fldcw
adc
jns
pop
aad
inc
fs
imul
dec
ret
push
cmp
in
jb
sub
cmp
pusha
sbb
mov
sbbl
loopne
mov
shl
mov
test
movsl
iret
push
mov
inc
cmp
pop
inc
shrl
pop
or
xor
mov
jbe
jl
mov
jecxz
punpckhbw
mov
sub
mov
and
push
or
outsl
dec
cmp
je
fisubrl
pusha
and
pop
inc
inc
mov
pop
rcrl
mulb
ss
imul
das
xor
xchg
and
mov
or
inc
mov
nop
inc
sub
adc
cs
movsb
fisttpl
nop
enter
sbb
jb
push
ret
inc
in
xor
daa
aam
xchg
sti
xlat
jo
aaa
jnp
sti
movsb
repnz
in
scas
aad
and
loop
xchg
orb
hlt
pop
sub
ret
push
pop
mov
cmpsb
xchg
mov
ds
push
push
sub
pop
or
mov
adc
lcall
outsl
lock
xor
dec
aam
fdiv
in
mov
fstpl
pop
js
push
lret
aad
rcll
jb
fdiv
mov
mov
in
pusha
icebp
dec
std
sbb
sbb
jne
test
sub
outsb
insb
aam
sub
rcrb
push
test
dec
adc
lcall
decl
jmp
pop
stos
xor
mov
and
aas
std
shr
jnp
hlt
mov
pop
sar
inc
test
sbb
push
or
lret
cmp
add
xor
xchg
adc
popa
insl
movsb
cmpsl
push
imul
gs
jnp
int3
inc
mov
insb
xorb
loop
xchg
ffree
xchg
nop
insb
popa
mov
pop
xchg
nop
std
jge
lahf
scas
insl
jae
pop
cli
cmpb
in
dec
xor
jno
pop
mov
sub
fcompl
dec
xchg
sub
add
sbb
mov
sub
insb
push
pop
loop
lods
xor
add
lds
orb
popa
lock
sbb
cmc
cmp
in
stos
and
jl
cmp
scas
add
popf
adc
dec
mov
cmpsl
ficoml
sarb
mov
jecxz
lods
lds
lods
adc
sub
pop
daa
mov
mov
and
mov
mov
fidivl
mov
pop
mov
pushf
andb
cmp
mov
and
fadd
in
and
jge
cmpsb
pusha
or
iret
mov
cld
daa
pop
aaa
js
cltd
les
popf
data16
dec
cmpsl
cmp
dec
pop
test
dec
xor
leave
jae
jge
pop
and
int3
xchg
shrl
sub
das
repnz
mov
popa
sbb
xor
cmpsl
aam
xchg
dec
mov
dec
cmp
pop
repz
jne
push
jnp
ds
mov
pop
xchg
mov
push
push
mov
loope
push
cmpsb
xor
lea
sbb
cmp
sarl
lds
inc
cli
jecxz
add
jge
ret
mov
xorb
pop
pop
into
test
int
mov
mov
sar
mov
and
ds
movl
add
push
sub
add
sub
pop
std
and
mov
aaa
adc
divl
sub
aas
cmp
jbe
in
jo
cli
add
inc
lds
push
insb
dec
dec
and
inc
inc
stc
mov
loopne
push
xor
jnp
test
xor
mov
cli
xor
cmp
fs
sbb
loop
adc
xchg
jo
decb
xchg
adc
mov
test
hlt
int3
mov
dec
cmc
out
jge
mov
mov
into
and
outsb
dec
fiaddl
adc
sar
fidivl
sub
ss
leave
gs
mov
loop
pop
sbb
iret
ret
push
push
or
fnsave
add
lahf
cwtl
ds
add
sahf
imul
pop
sub
jecxz
mov
fistpll
cmp
xor
push
ljmp
and
leave
cmpsb
push
fnsave
xchg
jb
adc
or
inc
cld
outsl
sbb
mov
imul
cmp
test
lret
xor
jmp
dec
rolb
and
or
xchg
in
addr16
dec
sub
or
pop
ret
mov
sbb
fwait
pushf
jp
rcr
mov
cmpsl
scas
das
and
roll
dec
in
cmp
or
nop
push
imul
outsl
addr16
jb
mov
inc
mov
jle
sbb
add
mov
jae
pop
xor
xchg
xchg
adc
repz
imul
xor
ret
push
mov
into
lret
call
fs
scas
popf
ja
pop
mov
mov
repz
jne
and
add
sub
jle
ds
pop
lods
push
push
sub
popl
jge
mov
inc
mov
clc
inc
outsb
clc
sbb
and
cli
jne
xchg
in
fimuls
loopne
mov
push
jnp
outsb
sub
rorl
xor
popa
mov
xchg
sbb
insb
cmc
inc
jno
adc
xchg
enter
dec
mov
inc
mov
sbbb
movsl
test
jmp
sahf
pop
jle
cmp
jg
add
sbb
je
dec
push
push
int
scas
and
mov
stc
cmovnp
mov
inc
cld
cli
jns
adc
imul
rclb
fsubl
sbb
dec
fs
pushf
sbb
and
mov
lock
mov
test
mov
push
sub
sti
pusha
xchg
js
pop
test
xchg
cltd
xor
repnz
dec
sbb
sbb
or
nop
das
cmp
mov
cwtl
repnz
xchg
fisubs
stos
add
sarl
xor
movsl
insb
je
lds
test
inc
mov
test
mov
cmc
xchg
clc
dec
mov
push
lea
subl
std
add
push
mov
xor
cmp
imulb
out
cmp
push
push
test
enter
mov
jne
mov
jne
fcompl
in
hlt
jg
mov
lods
cli
pop
xor
jne
sbb
mov
or
mov
lods
add
sub
std
shll
jbe
pusha
inc
lret
xchg
shrb
iret
xor
int
and
fidivs
push
data16
inc
aas
sbb
les
jno
add
ljmp
mov
cmp
dec
lret
mov
jl
cmc
scas
add
cwtl
fwait
pop
inc
sbb
aaa
adc
gs
inc
roll
mov
cmc
jns
out
push
call
loopne
cmp
cmp
aas
add
daa
dec
dec
loope
jb
push
inc
pusha
mov
test
pop
mov
cltd
mov
nop
inc
push
jno
mov
inc
test
fnstcw
imul
mov
cmp
enter
fsubr
mov
add
sarb
outsl
xor
mov
push
pop
jnp
mov
pop
xchg
ret
int
cltd
adc
in
pop
test
sub
cmpb
ljmp
mov
pop
fcoml
mov
or
inc
fs
fstps
test
mov
and
lock
loopne
hlt
mov
ret
adc
cmpsl
leave
push
popf
scas
push
ja,pt
popf
iret
dec
and
ds
pop
sub
fisttpll
mov
ret
sahf
mov
scas
in
add
lret
enter
inc
ret
sub
jge
loope
pop
pop
sub
cmp
mov
adc
cvtps2pd
orb
sub
out
pop
lock
cmc
and
shrb
in
test
pop
xor
add
cmp
jo
dec
mov
movsb
int3
insl
es
clc
dec
inc
rorl
jmp
mov
outsl
jbe
dec
inc
cld
add
arpl
adc
test
jmp
test
iret
mov
push
sarl
repz
lret
test
sbb
jge
cmc
push
enter
stos
jp
outsb
ljmp
adc
call
fcomps
or
add
lods
pop
inc
jne
mov
add
dec
outsl
jns
mov
scas
push
fimuls
ss
in
imul
and
jecxz
jl
inc
add
fmuls
dec
push
jg
ret
std
mov
out
adc
bnd
ret
stc
rorl
int
repnz
sbb
movl
mov
cmp
jmp
adc
data16
jno
and
mov
loopne
dec
or
xor
dec
int
fs
pop
mov
or
out
dec
mov
or
mov
jp
dec
or
inc
imul
xlat
xchg
jmp
pop
sbb
lcall
adc
xchg
cmp
jne
test
je
aam
cmp
pop
loop
pop
xchg
jge
or
mov
scas
mov
jne
fwait
vcmpss
jmp
stos
lds
mov
push
adc
and
or
popa
call
xlat
inc
adc
pusha
sub
lret
out
inc
nop
pop
fcmovnu
xchg
jno
push
mov
int3
inc
adc
mov
into
mov
scas
in
out
cwtl
inc
movsb
mov
scas
imul
ss
stc
lea
popa
adc
je
and
and
mov
cwtl
fsubl
lret
xchg
clc
xor
cli
imul
jge
inc
xor
mov
hlt
sub
movsl
test
ljmp
in
and
mov
cmp
sub
imul
cmp
sbb
add
je
mov
mov
outsl
xchg
pop
push
cmp
jg
sar
adc
add
push
in
pusha
ss
push
dec
sub
std
jp
adc
lock
sbb
inc
and
fldl
les
jmp
dec
inc
insw
inc
test
jb
aas
hlt
in
xor
jbe
pop
sub
xchg
inc
lods
dec
and
test
fwait
mov
inc
sub
cmp
or
and
cmp
repnz
js
mov
mov
iret
cli
push
insl
lret
shrb
sbb
inc
or
loope
repz
out
testb
pop
cmp
add
push
lret
dec
mov
ror
cmp
mov
ss
ret
xchg
frstor
vmwrite
scas
jge
or
xchg
dec
xor
push
sub
dec
dec
cwtl
push
and
mov
test
mov
mov
ret
pop
fcomps
push
cmpsl
and
call
and
das
lcall
jae
fstl
hlt
and
pop
adc
int3
les
in
fsubrs
into
sbb
mov
pop
pop
aas
jecxz
loope
lea
or
jns
dec
jne
loop
enter
cmp
adc
cltd
dec
adc
stos
nop
cld
sbb
jnp
push
add
lret
bound
fwait
pop
mov
pop
rorb
push
inc
pop
fwait
pop
jae
in
prefetch
sub
dec
pop
push
xchg
les
or
fstpt
mov
movsl
add
int3
push
adc
dec
add
es
cmp
sti
in
out
ret
loope
push
aas
add
cmp
mov
aaa
jne
movsb
pop
dec
mov
push
pop
lret
push
lock
mov
inc
cmpsl
cld
inc
ret
test
xchg
push
and
fldenv
out
sbb
or
pop
adc
iret
repz
xchg
test
std
inc
sbb
ficompl
out
mov
sti
jmp
sub
add
pop
clc
stc
push
sub
fldcw
jp
les
add
les
clc
ficoms
or
dec
and
sarl
pop
mov
mov
cmp
push
flds
aaa
inc
or
movsb
test
sti
sub
push
stos
or
inc
adcl
sbb
cltd
push
into
ja
cmp
outsl
mov
cld
adc
int3
bound
add
jnp
inc
ds
out
pop
repz
movsb
pop
lods
push
fists
dec
ret
mov
mov
pusha
lahf
inc
and
push
jno
add
pop
test
lods
and
in
jmp
sbb
pop
rcrb
sub
lds
loopne
inc
loopne
mov
mov
addr16
js
in
ret
add
xor
daa
xchg
sub
xchg
jne
cmpsb
aad
repnz
push
mov
xor
insl
push
jns
inc
push
xchg
push
popa
test
pop
inc
or
sbb
sub
test
loope
in
lahf
mov
mov
dec
jge
cltd
movsl
adc
loope
add
stos
ja
pop
fiadds
ja
mov
inc
add
sbb
inc
mov
stos
mov
pop
imul
cmpsl
dec
sbb
lea
mov
sbb
fsubr
mov
jae
dec
cmp
mov
test
ds
insl
mov
dec
sbb
out
in
in
mov
shll
int3
pop
fbstp
les
das
movsl
stos
lods
mov
std
cwtl
and
adc
mov
mov
out
andb
mov
mulb
jmp
out
add
cltd
popa
aad
test
stos
leave
shlb
push
add
xchg
insb
aas
pusha
inc
test
xchg
aas
lock
test
pushf
sbb
pusha
shll
pop
xor
pop
cmp
push
dec
xchg
jge
push
mov
icebp
stc
int
or
jmp
or
pop
inc
push
dec
dec
xor
shrl
mov
xor
pop
dec
jp
push
sub
into
dec
and
sbb
out
xor
shr
jbe
xor
push
jns
xchg
push
into
jnp
mov
leave
int
sbb
mov
adc
xor
sbb
sahf
cmp
mov
or
pop
out
jp
jp
mov
adc
mov
push
xor
push
int
ret
ljmp
in
mov
dec
out
fadd
mov
inc
mov
cmpsb
lcall
sbb
push
fcoms
jns
xchg
mov
adc
or
es
shl
cltd
popf
inc
es
and
inc
mov
and
sbb
inc
sub
insl
enter
cmpsl
sti
pop
cmp
nop
push
mov
mov
rcrb
into
into
test
sbb
scas
pop
push
aas
scas
or
sbb
or
mov
rorb
sbb
les
daa
cmpsb
cmpsb
xor
es
push
fstpt
jle
push
in
nop
inc
jg
and
and
and
add
add
add
and
or
inc
add
pop
add
pop
dec
add
jl
add
fmuls
push
stos
inc
add
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
sbb
jg
dec
inc
xor
jnp
cltd
inc
jg
decl
jg
mov
lret
dec
into
xor
mov
dec
idivb
mov
dec
incb
sbb
std
mov
je
dec
mov
out
add
into
std
int
mov
dec
pop
sbb
pop
outsl
pop
sbb
outsl
jg
jg
sbb
test
fisttpll
xor
jae
std
test
out
cli
filds
fstpt
cltd
pop
mov
int
jg
test
xor
xor
xor
or
xor
xor
popa
xor
bound
xor
bound
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
