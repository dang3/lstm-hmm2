sbb
add
mov
xchg
fdivrl
mov
fists
inc
adc
mov
loopne
mov
sarb
xor
faddl
or
xchg
adc
or
out
jns
fiaddl
cmp
add
movsb
sbb
insb
mov
icebp
push
ret
mov
inc
jge
and
pop
jp
clc
les
scas
js
int
dec
outsl
jge
xchg
subb
movsl
sbb
lock
arpl
inc
fsts
mov
shll
jb
xchg
call
adc
pop
pop
pop
xchg
loope
pop
stc
mov
jns
push
insb
sub
sub
pop
rorb
into
pop
sbb
pop
das
test
dec
cmp
outsl
jne
xchg
fdivrl
sub
xchg
rorl
add
lahf
add
mov
rcr
iret
sti
fisubrs
adc
test
xrelease
and
xchg
notb
fld
xor
cmp
cmpsb
xchg
int
insb
dec
sahf
lcall
imul
in
lahf
adc
faddl
mov
jmp
xor
movsl
inc
out
je
pop
int
lret
sahf
jae
xlat
popa
pop
idivl
daa
xor
mov
rol
jle
inc
adc
adc
ficompl
out
pop
push
int
mov
cs
add
out
and
or
sub
loop
arpl
pop
or
pop
mov
push
lahf
sub
daa
or
sbb
push
push
or
aam
mov
lds
pop
mov
sbb
outsb
call
inc
mov
sti
cmc
aam
adc
test
arpl
pop
sbb
lea
enter
cld
mov
fisttpll
mov
or
sbb
push
xchg
adc
shlw
sub
xlat
bound
push
rorb
sub
or
leave
add
jb
int3
mov
in
sub
addb
ficompl
sub
xchg
pop
outsl
jb
cmp
push
out
mov
mov
push
cwtl
or
push
imul
shrl
xchg
call
mul
lcall
pop
sti
fistpll
adc
xor
sti
jle
xchg
das
call
inc
daa
cmp
dec
or
cmp
jmp
fadds
mov
jecxz
les
push
mov
inc
lahf
shr
mov
out
push
sahf
xor
jns
imul
sbb
movsb
and
sbb
aaa
adc
js
popa
jle
pop
jge
mov
xchg
jmp
and
jmp
cmp
push
int
mov
mov
cmp
cltd
loope
pop
scas
jl
and
call
loope
xchg
sub
sbb
sahf
add
xlat
icebp
sbb
inc
outsl
hlt
into
sub
fs
mov
xchg
sbb
outsl
dec
cmpsb
arpl
mov
mov
jl
mov
addb
adc
add
push
sahf
inc
loopne
stos
in
jg
daa
adc
lods
pop
jnp
dec
xchg
rcrl
pop
call
cmpsb
leave
lret
sub
scas
dec
lea
sub
xor
sbb
add
mov
movsb
jo
test
mov
movsb
fadd
pushf
jbe
jnp
out
sbb
mov
dec
repnz
dec
pop
test
mov
and
fsubrl
repnz
jecxz
add
movsl
out
jl
cmc
mov
lea
pop
pop
mov
mov
mov
jp
ljmp
mov
es
pop
jnp
out
lock
cmp
imul
xchg
jo
rcrl
shrl
jne
aaa
sbb
iret
lret
and
inc
push
sbb
imul
hlt
ljmp
jp
nop
popf
mov
xor
out
dec
mov
stc
sbb
mov
in
ds
xchg
nop
pop
clc
repnz
popf
dec
jae
jge
rorb
pop
push
dec
pushf
add
stos
dec
fcoms
inc
fwait
inc
fsubl
xor
out
push
jbe
test
cmp
das
iret
push
mov
ds
nop
leave
xchg
sbb
xor
xchg
cmp
negl
dec
add
insb
movsl
mov
rcrb
cld
or
or
pop
cmp
add
xchg
xchg
and
adc
imul
inc
adc
inc
mov
pop
lods
xlat
nop
imul
mov
fistps
orb
repnz
cmp
pop
sub
xchg
in
call
mov
ja
lret
sbb
or
sbb
jb
stc
push
repz
insb
int
adc
mov
insb
mov
in
cld
cmp
jle
in
stos
or
cmc
repnz
and
sub
lcall
jno
pop
add
or
pop
mov
pop
lds
pusha
fdivr
and
jl
cmpsb
mov
adc
ds
loopne
sarb
shlb
pop
inc
into
pop
mov
xchg
and
test
jmp
xor
mov
push
pop
add
call
push
dec
test
jae
or
add
dec
xchg
fstpt
fdivrs
aam
add
mov
test
outsl
in
stc
sbbl
or
cmc
pop
mov
nop
jle
lds
popf
inc
out
rcrb
in
xor
sbb
mov
jge
xor
testl
jecxz
add
std
dec
cli
push
lods
pop
fwait
insb
pushf
aam
sti
daa
adc
data16
shr
pop
outsb
icebp
dec
mov
sbb
or
not
imul
and
in
dec
fldcw
mov
jecxz
repnz
data16
jb
aaa
cmpsl
enter
cmpsb
xchg
xchg
sti
mov
xlat
mov
adc
rorl
push
add
das
movsl
pop
push
cltd
xchg
call
and
shl
sbb
pop
mov
jne
dec
ss
mov
add
push
jg
ljmp
sub
push
mov
mov
lods
push
mov
mov
cmp
rclb
cmc
sbb
bound
lods
nop
divb
inc
add
into
loopne
outsb
pop
xlat
mov
and
das
loopne
fiadds
adc
mov
sbb
mov
cmp
nop
inc
in
xor
xchg
pusha
pop
es
jecxz
inc
in
test
dec
sti
or
adc
sbb
ret
add
js
mov
test
or
inc
std
lea
pop
shlb
add
add
mov
out
in
add
outsb
mov
shll
repz
aam
or
lret
out
and
mov
sbb
and
in
bound
movsl
fs
adc
jp
outsl
pop
cli
and
in
mov
test
and
cld
test
or
dec
cmp
dec
mov
jne
add
push
and
lcall
mov
test
fcompl
inc
orl
jg
and
mov
adc
or
cmp
or
xchg
into
cmc
xchg
fbstp
xlat
pop
int3
and
xchg
rcr
stos
outsl
xchg
fwait
dec
push
xor
sub
cmp
out
daa
popf
sbb
push
or
mov
mov
sbb
loopne
das
cmpsl
jge
loopne
cmp
dec
lods
add
inc
and
imul
clc
and
jbe
sub
clc
in
mov
aam
cmp
sbb
jmp
adc
aaa
push
popl
loope
rcrb
mov
insl
stos
push
mov
jno
adc
mov
mov
adc
je
mov
dec
push
mov
into
ja
xor
push
negb
lret
xchg
jp
xor
cmpsl
jg
sahf
dec
mov
out
cmpsb
popa
mov
jns
sbb
xchg
stos
sub
add
xchg
sti
dec
lahf
jmp
mov
imul
stos
jae
mov
pop
lret
xor
inc
lods
mov
loope
or
add
jbe
add
mov
mov
mov
sahf
cmpsl
popf
repnz
fwait
push
daa
imul
outsl
and
push
and
test
and
sub
mov
imul
inc
sub
mov
orl
cmp
pop
pop
mov
in
int3
jle,pn
and
pop
dec
jecxz
fucomi
stos
jl
ljmp
jnp
xchg
negl
mov
mov
inc
dec
mov
inc
call
lret
xor
mov
cltd
mov
fists
cld
cmp
sub
data16
test
in
mov
aam
aaa
pop
or
or
popa
insl
out
mov
mov
xchg
mov
or
mov
inc
lods
or
mov
mov
dec
jmp
add
dec
insb
jns
loope
jmp
jl
outsb
lret
fisubrs
aad
aaa
cmc
dec
in
or
add
cmp
xchg
xor
lods
xor
and
xor
sbb
dec
ljmp
and
pop
pop
xor
jb
and
add
push
xchg
je
push
mov
clc
in
push
jns
xchg
jo
ja
mov
and
insl
out
shll
fimull
cmp
mov
pop
push
out
test
mov
dec
loope
cs
insl
jg
addr16
test
lods
push
pop
in
xchg
test
aaa
cmpsb
mov
cmpsl
push
pop
mov
ja
adc
pop
xlat
or
xor
jmp
adc
loop
cmc
push
in
ja
jo
sub
push
sahf
xor
dec
pusha
mov
mov
pusha
mov
pop
rcrb
push
mov
sub
scas
lock
aas
int
lret
sbbb
fmuls
stc
mov
mov
add
push
push
je
call
loop
xchg
push
ljmp
daa
fs
fiaddl
pushf
fadd
lods
adc
mov
sahf
out
pop
loopne
imul
jmp
inc
test
cmpsb
pop
jmp
fimull
rcrl
adc
lods
cmp
cmpsl
mov
and
arpl
and
cli
cmp
cmp
add
lds
out
fiaddl
rorl
add
or
ds
jle
fistps
inc
imul
sti
scas
dec
mov
sbb
jne
adc
add
sbb
mov
je
xor
out
test
int
movsb
inc
cmp
sub
shl
loop
mov
pop
ljmp
cmpsb
xchg
iret
test
and
add
out
orb
xor
insl
mov
out
add
sbb
stc
mov
sub
add
movsb
jge
adc
jle
inc
pushf
fdivrl
wbinvd
jae
rcrl
movsl
add
push
mov
aaa
jo
push
adc
xor
jno
cmp
leave
fidivrl
notl
in
dec
cmpsb
jecxz
pusha
adc
lahf
cld
jns
xchg
mov
xor
popf
dec
mov
in
outsb
fmull
mov
xchg
xor
jl
cmpl
xchg
pop
xor
mov
stc
stos
loope
outsl
mov
adc
les
pushf
scas
add
ljmp
ja
loop
clc
cwtl
das
vmovq
sub
xor
das
out
lret
jge
outsb
call
jle
mov
ljmp
dec
lods
cmpl
gs
mov
jp
adc
jns
cmp
into
cmp
sub
pop
scas
outsl
push
adc
div
push
cmc
loope
mov
stc
scas
sbb
fcoml
jmp
jecxz
adc
adc
pop
test
repz
test
xchg
adc
jle
push
call
incl
aad
sub
iret
cmp
pop
lods
inc
xchg
jle
lret
cmp
xchg
idivl
xor
iret
scas
stos
stc
xor
movsl
out
and
cmp
fldcw
sarb
add
mov
stc
and
mov
fsubs
js
testl
mov
insl
mov
mov
lds
cmpb
testl
cmp
je
cmp
cmpsl
mov
mul
or
xchg
out
adc
ret
xor
movsb
mov
andb
or
ss
je
xchg
mov
sbb
scas
out
cwtl
lods
cmpsb
dec
ja,pt
mov
loopne
pop
into
sub
jns
out
inc
mov
push
insb
das
dec
in
insl
push
es
scas
push
jnp
or
add
dec
pop
movsb
add
out
mov
aaa
or
pop
scas
sahf
cmpsb
pop
dec
mov
js
sub
je
dec
jecxz
jb
insl
sahf
push
mov
and
add
fstpt
push
mov
lret
call
in
arpl
adc
xor
or
dec
pop
push
rcr
or
leave
sbb
push
mov
cmp
int
sahf
lret
sub
aad
xor
out
inc
scas
ds
pusha
ds
inc
orl
sub
lods
jp
clc
inc
cmp
pop
and
cmp
clc
in
pop
cmp
add
jno
bound
repnz
aaa
cmc
and
sub
or
out
xchg
loope
ss
lds
pop
lock
fnstenv
lods
std
jmp
dec
add
jns
push
out
push
fstps
in
scas
jno
test
sbbb
mov
in
pop
sbb
insl
mov
push
pop
jp
fnstenv
xor
mov
lahf
xchg
popa
in
pop
outsl
dec
cmp
test
aaa
aas
xor
pop
lods
push
mov
cmp
in
mov
vscatterpf1dps
loop
fwait
xor
dec
mov
mov
jp
in
xor
nop
test
and
orb
cld
mov
jae
inc
das
cld
add
mov
cmp
lds
dec
mov
and
push
cmp
arpl
rorb
ja
mov
mov
pushf
xor
xchg
jno
inc
push
hlt
dec
adc
jecxz
mov
orb
jns
cld
sahf
arpl
dec
sub
xor
push
sti
dec
fnstsw
imulb
or
test
sub
call
sub
jmp
lods
adc
pop
push
test
push
pushf
lcall
or
out
fstps
or
fadd
orb
loop
lcall
xor
xchg
lock
xor
ret
ret
inc
xorl
shlb
jnp
cmp
lahf
fsub
jne
mov
lret
push
outsl
cs
xlat
xchg
adcb
hlt
frstor
dec
js
inc
insb
sbb
hlt
pusha
outsl
add
or
stos
test
mov
outsl
fstpt
adc
sub
je
mov
pushf
lcall
std
test
or
repnz
pop
mov
lock
push
outsb
test
fists
cmp
sub
pop
mov
mov
shrl
and
outsl
cmc
fbstp
sahf
cmp
bound
inc
inc
mov
mov
inc
inc
cmp
aam
jle
les
scas
mov
mov
dec
xchg
inc
or
int
test
jecxz
bound
leave
dec
and
cld
fs
or
inc
aas
sbbl
mov
xchg
fistl
mov
cmp
sbb
enter
shll
cli
aas
ljmp
xchg
lahf
jge
jns
stos
imul
add
int3
sub
roll
mov
fidivs
gs
jae
mov
aas
add
pusha
arpl
lds
add
adc
and
fdivl
jbe
test
add
mov
roll
push
js
sub
daa
movsl
xor
test
sub
push
pop
shlb
fs
cltd
push
xchg
mov
push
add
pop
mov
sub
lahf
dec
sbb
sbb
aas
pusha
lods
pushf
dec
ljmp
xchg
fdivl
testb
dec
or
in
cltd
movsl
mov
push
pusha
sbbl
scas
cmp
icebp
pop
sub
push
mov
jb
cmp
ds
test
insb
inc
orl
dec
push
ret
push
sbb
cmp
push
mov
mov
dec
cmp
das
imul
mov
test
dec
aam
icebp
pop
dec
sub
fcoms
push
pop
sub
push
inc
mov
in
push
sbb
sub
std
sub
fwait
pop
in
rorl
nop
fisubrl
xchg
sahf
hlt
xchg
imul
mov
mov
adc
cltd
daa
scas
lret
lods
dec
push
cli
dec
lret
cmp
adc
test
or
jne
xchg
or
mov
arpl
scas
rcll
xor
movsb
ret
lcall
rorb
mov
mov
jno
mov
ficompl
inc
lahf
lock
xor
ljmp
pop
out
sysexit
stc
rcll
mov
daa
xchg
sbb
xchg
sbb
or
inc
pop
mov
dec
mov
fsub
cmp
jb
cmp
jp
cltd
stc
cmpsb
in
jne
mov
sbb
hlt
cmpsb
inc
pop
xor
xchg
pushf
push
cmpsb
mov
xchg
aam
mov
mov
xchg
push
in
inc
sbb
xchg
std
cmp
fnstsw
xchg
out
pop
movsb
popa
adc
or
jnp
scas
pop
scas
mov
add
cmp
fsts
pop
sub
in
push
sbb
in
push
lods
jae
or
arpl
into
in
rcll
mov
xor
mov
clc
mov
fisubl
sub
mov
dec
movsl
inc
je
stos
pop
fsts
in
adc
add
outsl
std
pop
inc
sbb
sahf
and
mov
cmp
mov
out
mov
hlt
lret
je
outsl
stos
push
int3
mov
and
adc
pop
and
test
jae
fwait
lods
out
push
xlat
add
fistl
in
fnstenv
xchg
bound
xchg
mov
cmp
out
xchg
stos
cmpsl
pusha
loop
lret
sbb
movsl
out
lret
aad
in
inc
xor
cmp
mov
pusha
in
sbb
and
loopne
in
jl
push
bound
std
mov
cmp
loope
jo
inc
cmp
inc
push
rcll
xor
in
and
jl
or
and
push
js
mov
jno
xlat
out
int3
es
jae
pop
insl
or
mov
jle
gs
push
mov
sub
daa
mov
call
sahf
jecxz
cmp
sub
xchg
jno
adc
fsubrs
fs
mov
sbb
iret
jns
sbb
in
jl
cmp
xchg
xlat
std
or
fsubr
insb
jmp
hlt
sub
sub
mov
jg
mov
shlb
xchg
sbb
popf
mov
cmc
cmp
popa
inc
push
mov
pop
mov
addr16
inc
and
add
das
lcall
hlt
jb
pop
jp
lret
xor
adc
out
mov
jnp
aad
sbb
loope
xor
test
cmpsl
pop
dec
xchg
lcall
aam
fucomi
push
imul
or
push
cmp
mov
dec
mov
inc
pop
sbb
jmp
inc
push
sbb
popf
imul
subl
insb
mov
dec
das
popf
int
cld
aaa
je
adc
jp
adc
push
jge
fnsetpm(287
sbb
outsb
adc
mov
or
rcll
and
daa
fsts
xchg
inc
in
mov
aad
insl
inc
out
test
xchg
xchg
stos
sub
sub
push
test
imul
mov
out
shl
test
cmp
insl
jnp
les
outsb
push
add
mov
outsb
addr16
mov
aam
movsl
popa
sbb
gs
leave
adc
data16
or
adc
inc
or
stc
pop
pop
in
inc
push
sub
cwtl
push
icebp
ret
jp
ss
clc
lods
les
push
jl,pt
not
inc
sub
adc
or
scas
jae
xor
jns
outsl
lods
insl
fldcw
add
dec
inc
cli
xor
pop
shll
jl
pop
pop
push
je
stos
aas
dec
mov
ret
add
dec
stos
pop
pushf
notb
push
push
stos
test
shl
sub
lret
xor
inc
sbb
fsts
fiadds
sub
xchg
std
xchg
or
and
sbb
and
xlat
enter
leave
call
jp
incl
push
pop
je
std
mov
dec
dec
mov
adc
mov
cmp
push
jo
jecxz
push
jnp
push
shll
or
or
adc
xor
xchg
pop
test
push
sub
xchg
push
push
jne
mov
ftst
dec
das
xchg
jecxz
into
scas
popf
jg
out
sbb
and
pop
pop
jbe
pushf
aad
shlb
dec
fiadds
test
out
jne
pop
repnz
pop
sbb
ss
push
push
ret
in
testb
xchg
xchg
jae
insb
lods
scas
xchg
mull
je
adc
mov
es
fwait
pushf
push
clc
pop
loope
ficompl
add
sbb
lods
inc
add
inc
push
fldt
mov
and
stc
in
in
xchg
int3
pop
addr16
cwtl
mov
mov
lret
sub
stc
cmp
adc
repz
xor
in
push
lods
xor
and
rclb
popa
mov
mov
cmp
outsb
jnp
mov
fs
push
push
or
cmpsl
adc
adc
xchg
sarb
dec
rcl
out
insl
push
shlb
jno
sbb
cmpsl
cmp
lret
bound
dec
imul
sbb
shlb
in
sub
andb
sbb
in
and
dec
iret
shll
jae
scas
sar
sub
cmp
fucomip
push
mov
mov
sub
std
adc
xor
adc
in
into
mov
fwait
add
and
int
adc
push
notl
loopne
les
push
xchg
adc
inc
sbb
and
test
lret
jns,pn
xlat
js
out
rorb
stc
mov
stos
mov
out
dec
cwtl
leave
adc
jle
pop
jnp
sbb
xchg
lea
and
les
pushf
stc
ds
push
js
fsts
lret
jbe
xchg
push
and
cmp
xor
sbb
mov
push
jl
cs
ficomps
fwait
add
jbe
in
adc
test
sub
int
and
insb
scas
cltd
add
pop
push
mov
fidivs
orl
iret
ficomps
sbb
xor
mov
add
shll
push
jne
leave
mov
imul
jl
mov
xor
inc
aam
inc
les
frstor
sub
sbbb
cmpsl
or
jno
je
rclb
shrl
mov
sub
icebp
mov
adc
popa
xchg
out
mov
fisttps
nop
leave
lods
call
jp
and
push
sbb
inc
xor
sti
aas
pop
mov
out
insb
andb
push
rcrb
and
std
lea
mov
mov
out
dec
add
mov
pop
fs
dec
add
enter
cmp
dec
mov
dec
sbb
jno
and
lahf
into
adc
js
or
push
stc
ljmp
xchg
sbb
cmp
xor
outsb
scas
mov
repnz
xor
mov
push
xchg
xchg
mov
pop
mov
add
lahf
cmp
data16
or
sti
lahf
push
gs
mov
bound
add
daa
and
and
cmpsl
dec
das
js
stos
into
jecxz
pop
std
add
cmp
mov
lods
mov
bound
mov
shr
jae
inc
pop
in
scas
jbe
mov
cmp
push
std
fnstsw
adc
pop
ljmp
es
push
sub
and
cmp
lods
jge
lods
cmc
pop
sbb
adc
mov
mov
aad
sbb
enter
mov
ja
out
out
dec
push
ret
push
aaa
aad
inc
mov
sarb
mulb
sar
cltd
sbb
or
push
mov
inc
jg
mov
in
lds
cmp
gs
push
insb
out
in
adc
in
and
dec
adcl
shlb
sub
or
sub
jge
jns
xor
xchg
sbb
cli
test
xor
jmp
testl
es
sbb
test
cmp
nop
mov
data16
loop
lret
mov
fsts
add
jmp
xchg
or
jbe
xchg
orl
sbb
mov
scas
jle
fs
out
addr16
rcll
ss
je,pt
in
dec
sar
scas
pop
repnz
mov
push
xor
sbb
lods
ret
imul
lds
push
sbb
outsl
out
cmpsb
push
xchg
jns
jns
sub
ds
mov
push
test
aas
add
inc
test
pusha
outsb
cmp
and
mov
xchg
jo
ds
mov
mulb
mov
sahf
pop
fcomps
aaa
ljmp
xchg
or
inc
mov
mov
push
xlat
jecxz
sub
mov
add
aas
loopne
or
stc
sbb
ja
or
pop
jns
jb
pop
pop
test
push
dec
sbb
xchg
mov
jl
mov
pop
and
in
pushf
pop
adc
adc
loop
sbb
xchg
iret
subl
dec
xchg
stc
pop
or
dec
sub
fiadds
mov
xor
lods
push
ja
jne
pop
daa
jbe
fstp
push
jbe
lret
jle
fsubrl
les
mov
mov
lea
sbb
pop
fsubl
inc
inc
std
or
aam
lahf
push
mov
jmp
sub
and
jge
jge
push
push
mov
cmp
idiv
imul
mov
test
xor
mov
cmpsb
nop
addr16
ja
mov
daa
jle
jo
push
cltd
xchg
call
mov
outsb
inc
sti
dec
fiaddl
fwait
push
add
push
arpl
sbb
and
mov
mov
xchg
loop
les
jnp
sbb
in
sub
push
jne
pop
mov
dec
sub
adc
mov
repnz
sbb
insb
mov
iret
sbb
dec
call
xchg
push
rorl
add
or
lods
cmc
mov
aam
xchg
das
fnsave
push
out
ret
stos
jge
mov
lfs
std
aas
scas
lcall
mov
adc
jl
adc
or
adc
hlt
xchg
sbb
out
sbb
cli
lods
xor
add
ja
sub
subl
out
pop
xchg
sub
fdiv
add
loopne
out
inc
push
cmp
adc
dec
inc
aaa
and
sub
rcr
pop
mov
clc
or
push
or
testl
movsl
push
or
loop
adc
dec
lods
or
lret
mov
cmpsb
pop
xchg
jns
add
adc
fucomi
sub
negb
cmp
xor
inc
ljmp
mov
outsb
mov
scas
sub
testl
add
pop
inc
cmp
mov
push
mov
adc
rclb
pop
pop
xor
jecxz
xchg
adc
cmpsl
lods
pop
xlat
push
and
mov
clc
dec
es
mov
movsl
ficomps
cmp
xchg
jns
add
and
ret
xorb
sbb
pop
dec
lret
or
mov
icebp
inc
lds
rorl
fabs
adc
enter
icebp
sbb
das
or
bound
pop
jg
push
repnz
add
mov
ret
sbb
add
pop
fistpl
inc
lock
sbb
adc
dec
sti
sbb
xor
dec
mov
pop
cmpsl
mov
shll
push
inc
je
xlat
pop
int
ja
jne
and
mov
and
aad
xorl
jno
les
xor
fwait
andl
lret
ret
mov
test
push
clc
xchg
stos
sbb
mov
gs
xchg
call
inc
mov
adc
or
mov
xchg
out
jnp
daa
lahf
rcrl
push
cwtl
pop
and
ret
out
mov
stos
stos
mov
insb
mov
mov
shl
ljmp
adc
mov
mov
inc
or
lret
sbb
enter
mov
lahf
and
gs
pop
push
sub
xorb
out
cld
sahf
push
push
xchg
lods
sbb
sbb
stos
loope
nop
hlt
aad
xorb
xchg
mov
xlat
in
int3
aaa
pop
push
fnsetpm(287
fcomps
icebp
in
ftst
loop
mov
inc
dec
pop
push
mov
xchg
push
gs
call
sbb
shrl
dec
cld
and
outsb
scas
push
in
ret
cmpsb
insw
in
mov
pop
negl
cld
push
pop
or
cwtl
jle
fidivl
cltd
inc
adc
mov
outsb
inc
inc
pop
sbb
sahf
in
xchg
xor
inc
jbe
test
bnd
ret
cmp
lret
cltd
scas
xchg
jne
fisubrs
and
in
or
jnp
or
inc
adc
mov
mov
neg
push
jo
push
ficomps
xchg
shlb
cmpb
jmp
adc
mov
xor
nop
aam
dec
and
jmp
add
fsubrl
add
adc
insl
jge
mov
jle
mov
daa
sub
pushf
fstpt
rolb
test
push
pop
mov
sub
push
cli
adc
jmp
mov
in
rcr
pop
in
sub
repnz
scas
mov
mov
lret
sbb
adcl
jp
lock
ja
lea
rcrb
ljmp
sahf
push
stos
mov
push
sarb
outsl
shlb
push
sarl
jle
loope
out
sysexit
sbbl
fiaddl
rep
push
or
sub
data16
lods
mov
mov
fidivrs
inc
add
adc
inc
pop
dec
sbb
loop
fdiv
xchg
push
fisubrs
mov
cmp
fmull
dec
xchg
jle
cwtl
loope
xchg
mov
cmp
aad
xor
cmp
aas
jle
lock
mov
leave
insl
mov
xor
push
sub
push
aad
cli
stos
lret
lock
push
or
mov
xchg
jnp
scas
cmc
aas
dec
pop
mov
and
mov
pop
int
dec
incb
inc
cmp
nop
cmc
sbb
cli
or
jmp
aam
iret
shrl
std
xlat
push
cmp
xor
jmp
add
cwtl
popa
xor
sahf
pop
push
test
pop
dec
jae
mov
in
in
divl
je
loope
fisubrs
adc
inc
mov
inc
xor
es
stc
pop
dec
mov
adc
hlt
lods
cli
xor
mov
pop
repnz
rcrl
xchg
inc
pop
test
pop
movsb
xor
cld
xchg
cmpsb
mov
into
scas
adc
pop
enter
dec
lock
int
xchg
mov
rcll
adc
mov
dec
jae
ficompl
pop
pop
out
xchg
inc
scas
frstor
roll
add
in
fdivr
push
cmp
mov
aad
mov
mov
xchg
mov
icebp
mov
in
cmp
fcomi
xchg
mov
mov
lret
push
cmpb
push
lahf
push
sub
adc
lods
dec
sbb
icebp
mov
xor
ljmp
sub
les
pop
ret
mov
mov
or
push
dec
push
lock
pop
out
orb
shl
jmp
pop
pop
or
mov
fs
or
rcll
inc
shll
adc
lods
fnstenv
jb
repz
xchg
cmp
leave
or
outsb
neg
int3
inc
mov
inc
push
fisubs
ficoml
cmc
int3
add
cmp
in
pop
mov
or
push
pop
das
sti
xor
mov
out
out
xor
scas
cmp
in
add
iret
repnz
loopne
test
leave
loope
rcr
xchg
jecxz
and
imul
fs
cltd
popf
out
iret
es
inc
cmpsl
test
neg
fistps
add
aam
add
mov
jbe
lods
je
out
repnz
mov
or
sbb
enter
addr16
xlat
imulb
test
push
lods
lret
push
mov
int3
jmp
aaa
repz
jo
daa
bswap
adc
mov
mov
testl
mov
mov
mov
cmc
aaa
fs
cmp
cwtl
push
and
inc
gs
mov
mov
or
jns
sub
call
xchg
rclb
adc
out
clc
in
add
repz
dec
xchg
js
shrd
mov
xor
addr16
out
ljmp
xor
adc
sub
adc
pop
xchg
scas
add
cwtl
sarl
jecxz
sarl
lahf
fcmove
adc
repz
add
fcmove
sub
jae
and
inc
mov
xchg
inc
and
xlat
aaa
sbb
aas
jns
loop
negl
jge
out
mov
jle
cli
mov
mov
pop
fisttpll
mov
add
arpl
jl
incb
daa
sbb
or
and
inc
das
outsb
fcompl
fcmovu
lahf
xor
ja
out
test
sub
sub
addr16
stos
lret
sub
rcr
inc
push
xchg
pop
jg
bound
sahf
in
jno
adc
mov
xchg
adc
repnz
repnz
sub
mov
inc
and
lret
popf
dec
movsb
in
iret
and
lea
xchg
pop
cmp
mov
jno
sbb
iret
ret
xor
loope
cmp
int
aas
mov
lret
pop
inc
stos
aas
js
dec
push
inc
jp
movq
or
mov
adc
push
jns
cwtl
mov
sbb
pop
xchg
adc
xor
int
inc
xor
imul
adcb
je
clc
push
jns
xor
add
js
mov
dec
jge
adc
ret
int3
fcompl
mov
fwait
movsb
mov
lret
mov
push
add
ds
stos
push
and
test
enter
fincstp
hlt
sbb
div
and
scas
bound
jecxz
shrb
mov
pop
mov
imul
test
dec
ljmp
andb
jge
jg
dec
jnp
jecxz
test
pop
ljmp
rcl
lcall
mov
push
out
mov
adc
cli
int3
rorl
mov
xor
outsl
imul
loop
pop
xchg
fisubl
pop
cmp
mov
rcr
movsb
sub
shlb
pusha
sbb
cmp
insl
mulb
add
shll
stos
stc
ret
call
mov
xor
jns
lret
jmp
notl
ficompl
add
pop
call
mov
sbb
inc
sbb
add
adc
inc
push
imul
inc
test
test
sub
xchg
mov
pop
adc
adc
push
mov
adc
in
mov
push
xor
vmovupd
or
jge
movsb
sbb
mov
jle
adc
notl
jecxz
call
test
jl
dec
pop
pop
icebp
into
cmovb
test
mov
jl
inc
and
xrelease
pop
aam
inc
loopne
push
outsl
cmc
fcoms
mov
cmp
xchg
insl
in
mov
sbbb
pop
aas
sub
xchg
mov
out
loope
mov
jns
adc
loope
fdivp
sahf
inc
jbe
or
imul
jle
mov
jno
jb
jnp
das
jne
push
mov
add
push
mov
jne
aaa
enter
cmp
outsb
out
sbb
bound
add
test
xchg
cmp
pushf
rorb
fs
lds
movsb
sbb
mov
inc
sbb
push
jne
jg
insl
add
dec
jne
lea
push
dec
push
sub
push
sbb
or
int
push
xor
inc
testl
jg
pushf
mov
cmp
fwait
and
mov
dec
mov
cmpsb
sub
cmp
pop
mov
jl
and
lahf
arpl
adc
xchg
jne
out
pop
vmovaps
sar
xor
xchg
mov
cmp
jp
push
aam
hlt
sub
add
push
xor
data16
lods
pop
in
cltd
pop
xor
sub
lods
mov
repnz
test
mov
push
insl
aas
decl
jge
lea
sbb
cs
imul
test
add
lds
mov
xor
dec
sub
or
and
ffreep
pop
mov
adc
push
inc
push
jp
inc
repz
mov
fistpll
sub
jle
mov
js
dec
dec
cs
xchg
sbb
aam
mov
adc
xorl
stc
jmp
xchg
mov
add
jl
cmpsl
sbb
daa
hlt
xor
les
xchg
out
fcoml
test
mov
add
cwtl
mov
stos
shlb
xchg
popa
arpl
mov
xchg
mov
add
jne
xor
imul
jecxz
push
jno
cmp
scas
xchg
inc
cmp
fsubrl
dec
xchg
jge
xor
sub
jg
push
push
mov
adcl
bound
jae
test
in
popa
lods
mov
mov
aas
loop
jae
sbb
mov
add
push
aas
jmp
jnp
adc
nop
int
mov
scas
adc
daa
filds
add
cs
in
fistps
adc
add
jns
aam
jmp
sti
cmp
addb
cmp
sti
adc
movsb
cmp
jp
cmpsl
sbb
call
add
imul
push
cwtl
lret
push
call
dec
and
sbb
in
in
xchg
inc
mov
repz
inc
cmp
insb
pop
push
sub
movsl
mov
sub
or
out
or
fnstcw
mov
lock
xlat
loop
mov
movsb
sahf
dec
psrad
gs
sti
mov
jge
test
sub
pop
imul
or
adc
xor
mov
mov
js
xchg
cwtl
fwait
add
adcb
sub
aas
push
cmp
cltd
movsl
cmpb
mov
test
bnd
xor
push
mov
mov
ret
lds
push
lods
pop
cmpsl
mov
cmp
add
repz
roll
stc
je
pusha
in
jns
cmc
lret
test
sahf
in
push
int3
cwtl
xor
push
lret
out
adc
stos
inc
aad
xor
sahf
and
shlb
xchg
out
in
test
mov
xor
add
fdivs
popl
popa
mov
stos
roll
xor
xor
inc
andl
repz
and
repz
xchg
call
stos
xor
cmp
pop
pusha
and
mov
cmp
mov
out
pop
mov
cltd
jge
xchg
mov
test
mov
scas
lods
adc
sbb
cmpsb
mov
xchg
mov
jnp
jecxz
push
mov
test
cmp
leave
jno
inc
and
sarl
lds
les
push
jp
test
xchg
mov
pop
test
or
lea
push
push
negb
mov
in
cmp
cmp
adcb
std
rcl
push
or
cwtl
sub
pop
inc
ds
cmp
pop
xchg
push
jbe
inc
ret
push
pop
aas
and
mov
imul
inc
scas
addr16
or
and
or
out
imul
push
mov
fcmove
loope
mov
loopne
mov
loop
popa
and
jnp
and
mov
dec
xor
sub
aas
leave
and
or
rorb
sub
and
add
inc
mov
push
mov
sbb
lds
aaa
rcrb
les
sbbl
adc
mov
repz
test
sub
pop
stos
jmp
lcall
cmp
inc
imul
jmp
cmc
test
gs
nop
outsb
pushf
mov
inc
in
out
or
jnp
push
addb
push
imul
and
xor
ljmp
cld
xchg
or
flds
or
movsl
movsb
cli
mov
in
xchg
lock
sub
adc
add
cmp
jb
xor
aaa
mov
shll
movsl
add
jbe
das
aam
pop
cs
jae
dec
les
jecxz
imul
xor
sbb
pop
adc
bound
sbb
jl
cmpsl
test
scas
fisubrs
std
pop
sbb
jge
xor
pop
mov
jbe
sbb
pop
mov
repz
fistpl
inc
and
sub
push
lret
sub
test
xchg
mov
lcall
xchg
loopne
mov
lods
rorl
pushl
mov
aas
mov
mov
and
jns
xor
sbb
fisttpll
lds
and
test
into
pop
adc
and
lahf
push
icebp
mov
mov
xchg
or
xchg
fwait
mov
xchg
jp
inc
dec
inc
add
pop
add
scas
cmp
xor
add
push
jnp
jb
xchg
jl
xchg
inc
or
ja
int
lret
mov
or
cmp
addb
jecxz
push
mov
sarb
ss
push
jnp
popf
loopne
jle
icebp
in
int
push
inc
mov
adcb
mov
out
popa
inc
push
sub
xchg
je
push
adc
cmpsl
lods
jns
push
push
xchg
sbb
dec
jmp
leave
jl
sbb
sub
mov
jbe
ret
int
xchg
and
fnstcw
xchg
xchg
aam
jns
adc
and
adc
jp
xor
js
xor
fidivs
in
scas
stos
dec
subl
sub
add
mov
sbb
test
mov
js
mov
aaa
mov
andb
js
or
xchg
in
and
mov
push
int
mov
sbb
pusha
inc
ds
test
xor
sahf
in
das
and
stos
and
adc
lods
daa
cltd
bound
xor
ret
in
mov
sti
stc
repz
movsl
xchg
inc
and
rorb
outsl
add
lock
dec
aam
jnp
imul
mov
cmp
pop
stos
pop
xor
inc
jbe
stc
loopne
dec
or
add
fs
xlat
arpl
dec
push
or
xor
xorl
pop
add
xlat
hlt
inc
aam
xor
dec
hlt
outsl
dec
jb
popf
sub
fisttpll
bnd
ja
fstl
mov
or
xchg
mov
stos
cmp
inc
fadds
or
ds
adc
xchg
fidivrs
add
sub
es
aaa
adc
xchg
adc
and
dec
pusha
lods
stc
mov
pop
push
bound
mov
stos
xlat
xor
and
mov
mov
shll
scas
adc
enter
insl
push
cs
loope
xor
aam
push
adc
cmp
jg
outsl
faddp
inc
xor
pop
int
out
rcrb
mov
pop
add
psllq
and
out
stos
adc
das
jo
mov
call
pop
movsb
adcb
mov
bound
and
jp
out
and
lahf
ret
nop
mov
jp
fdivl
out
mov
pop
cld
mov
sahf
dec
xchg
mov
cld
rorb
cwtl
int
mov
inc
cmpsl
hlt
mov
arpl
jmp
jno
mov
ljmp
xchg
mov
xor
icebp
push
lds
sub
inc
int
add
je
and
roll
sub
sbb
adc
sahf
jl
and
lahf
aam
fs
stos
pop
dec
dec
cmpsl
mov
xchg
or
mov
fwait
outsl
sbb
in
push
push
and
lds
stos
loopne
fcmovnbe
daa
popf
cli
into
dec
movb
pop
jmp
andb
es
in
sbb
pop
stos
or
add
push
loope
cmp
fs
or
add
xor
mov
call
xor
push
xchg
sbb
sbb
mov
push
mov
gs
cltd
xchg
movsl
push
and
daa
js
ret
xor
shrl
mov
and
mov
mov
push
mov
mov
jl
aad
push
or
xor
pushf
test
icebp
aad
dec
and
or
repnz
xor
xchg
jbe
cld
mov
sub
fistl
enter
repz
mov
pop
std
and
and
sbb
clc
jp
fbld
int
fdivl
xchg
std
mov
dec
sbb
dec
call
test
push
test
fnstenv
daa
lods
pushl
shlb
xor
push
mov
pop
xor
into
imul
and
addr16
repz
out
mov
jae
dec
cmc
push
push
movsb
sub
dec
inc
jge
sub
test
out
push
and
in
mov
mov
pop
ds
outsb
xchg
cmp
lods
push
jae
popf
xchg
cld
lret
mov
psubsb
dec
fimull
lret
pop
mov
clc
jnp
maskmovq
divl
movl
int3
dec
jnp
add
or
aad
test
aaa
int
fs
push
mov
and
loop
cmp
push
xor
arpl
inc
xor
lret
mov
test
lea
inc
and
in
xchg
mov
daa
rcrb
aaa
int
mov
lds
xor
cmp
repz
sahf
jl
ss
jge
mov
or
mov
push
enter
fs
aam
js
es
push
fisttpll
mov
cwtl
mov
ffreep
int
fstl
outsl
xchg
rcrl
xchg
pop
inc
popa
leave
jg
ljmp
jbe
pop
push
lahf
push
test
push
adc
aad
pop
mov
and
mov
aam
out
lcall
cld
and
data16
push
mov
aam
int3
push
punpckhbw
andl
push
lcall
ss
sub
enter
fidivrl
in
mov
adc
popa
bnd
test
test
push
inc
sbb
int3
mov
dec
fnstenv
push
dec
arpl
sarb
cld
movsb
xchg
popl
movsl
cltd
mov
in
sbb
out
int
and
adc
arpl
sti
cmp
sbb
xor
aaa
mov
xor
fsubp
repnz
cmp
cmp
push
and
sub
sbb
dec
fmuls
push
test
jne
jae
popa
lahf
subl
or
sbb
rol
inc
stos
push
dec
jae
pushl
hlt
jae
cltd
es
stos
add
movsl
mov
mov
rcll
fs
and
xchg
push
int
test
sahf
push
xlat
fnstenv
dec
cld
jb
add
shrl
sub
mov
cmp
cmpsl
or
push
push
aas
mov
stc
or
popa
jg
popf
cmc
fs
add
xor
iret
outsb
jnp
jb
sbb
rclb
mov
mov
jbe
fnsave
repnz
jp
cltd
insl
mov
and
mov
sub
fucom
mov
lds
or
incb
xchg
push
test
movhps
mov
xor
inc
sub
out
sub
xorl
call
outsl
xor
inc
rcl
and
xor
imul
cmp
mov
imul
mov
arpl
sti
ljmp
sarb
sbb
mov
ror
rcrl
pop
xlat
sbb
fwait
sbb
pop
push
stc
repnz
jl
sub
mov
mov
out
sbb
dec
pop
scas
mov
sbb
jbe
jle
xchg
jns
inc
pushl
lahf
sub
scas
sbbl
mov
xchg
mov
dec
cmp
xor
cmp
mov
arpl
fnstsw
test
test
dec
push
mov
inc
daa
add
sub
movaps
xchg
jmp
lcall
pop
inc
aam
std
jl
jbe
xchg
stos
out
lret
and
push
lcall
je
call
hlt
das
sbb
nop
psrlq
cs
and
lret
stc
push
sti
mov
sbbl
cmpxchg
dec
mov
push
or
pop
cmpsb
sahf
mov
jmp
sti
shlb
into
lret
push
fdivrl
repnz
and
mov
imul
push
or
int3
ret
pop
add
cltd
je
cwtl
mov
lock
inc
cmp
daa
inc
jo
cmp
fucomp
out
jl
icebp
sbb
mov
ja
xor
add
in
or
lock
add
mov
push
fisubs
jns
adc
pop
in
outsl
lret
add
js
mov
cmpsb
adc
cmp
cmpsb
in
pop
inc
cmp
pusha
mov
and
pop
xlat
insb
cmpsb
movsb
rclb
arpl
std
mov
mov
sub
sub
in
outsl
or
push
loopne
and
or
stos
ss
inc
sub
jmp
repz
loope
dec
fdivrl
or
mov
add
loope
out
add
and
push
pop
stos
mov
loop
push
dec
jle
sub
enter
cmp
lods
fwait
int
xor
es
fsubrs
sbb
cmp
cmp
adcb
bound
mov
outsb
xor
add
cs
push
mov
shlb
imul
shrb
pop
inc
pop
adc
mov
xor
jo
cmp
fimull
push
cmp
aam
loope
stos
jb
fstl
push
sti
incl
ficompl
push
mov
inc
addps
jecxz
cld
cwtl
cwtl
jo
shll
stc
inc
mov
or
lcall
shl
adc
jecxz
sub
dec
dec
test
out
push
jle
std
push
fildll
fcmovnb
adc
stos
lcall
mov
stc
push
out
or
mov
lock
vmovdqa
mulb
ret
divb
sub
push
cwtl
iret
inc
lea
push
in
popf
xor
dec
rorl
cltd
push
mov
imul
mov
push
iret
rorb
insb
pop
imul
inc
test
scas
aas
mov
xor
bound
sarl
cmp
or
lods
lock
xchg
cs
push
and
cmp
sub
ret
cmp
dec
add
cs
add
jne
in
hlt
mov
cmp
incb
lods
repnz
mov
insl
imull
pop
push
sbb
add
xchg
sub
sahf
mov
jbe
test
mov
icebp
dec
loope
out
mov
aas
push
out
leave
jae
fadds
jnp
xchg
push
cmp
jnp
xchg
scas
sbb
lods
or
fstl
hlt
jbe
add
leave
fistl
pusha
dec
xchg
xchg
stc
pop
int3
popf
lret
mov
jns
sbb
xor
dec
leave
loopne
lret
mov
mov
rcrl
lods
je
fsubrl
out
stos
push
sbbl
data16
mov
xchg
xlat
sbb
pop
mov
imul
sti
mov
mov
or
add
pop
mov
mov
popw
int3
vdivpd
cmp
xchg
shlb
add
es
push
sub
push
pmaxsw
lahf
xchg
jno
aas
fildl
outsl
add
and
loopne
sub
aam
jne
jl
insl
mov
ds
sbb
mov
outsb
adc
dec
and
dec
cli
inc
push
and
and
or
inc
int
add
aam
mov
dec
movsb
repz
dec
popf
jns
jecxz
or
sahf
daa
imul
mov
adc
aam
inc
xchg
movsb
cwtl
xor
leave
dec
mov
jno
sbb
into
frstor
testl
movsb
ja
popf
cmp
push
mov
xorb
dec
aad
cmp
jecxz
adc
pop
test
adc
mov
rcll
cmpsb
push
mov
pop
daa
lods
dec
push
inc
mov
ficoms
scas
mov
push
mov
js
xchg
insb
lods
or
aam
in
daa
xor
cld
mov
pop
jne
push
fmul
in
ret
lea
stos
mov
or
mov
mov
adc
or
mov
mov
push
or
rorb
pop
sti
adc
rcll
lahf
pop
mov
shrb
cld
adc
xchg
stos
mov
fsubs
xor
mov
or
ret
pop
out
adc
fbld
pop
test
outsb
fstpt
inc
xor
ds
xchg
shll
test
xlat
or
inc
jne
test
mov
push
popf
xchg
cli
adc
jmp
bound
pop
out
adc
mov
pop
sbb
cmc
mov
pushf
push
rcll
mov
adcl
popa
icebp
sar
lods
aaa
push
or
pop
adc
mov
or
jmp
mov
push
dec
and
xor
dec
pop
mov
fdivrl
mov
push
aaa
or
push
sti
xchg
xor
inc
fsubrp
test
aam
mov
ret
or
popa
out
xchg
lea
dec
xchg
xor
sbb
mov
mov
cmc
add
rorl
push
cmp
cmc
data16
dec
or
test
nop
cmp
test
push
adc
out
sbb
mov
pop
aas
mov
gs
sbb
arpl
clc
pushf
leave
lock
es
pop
test
dec
addl
mov
mov
push
test
push
dec
andb
adc
add
or
sub
testl
aad
pusha
rcrl
mov
add
in
xchg
sbb
sahf
out
mov
sub
out
pop
jmp
punpckhbw
mov
sbb
imul
xlat
flds
addr16
add
lcall
inc
mov
push
addr16
test
ffree
push
inc
lahf
add
jo
popa
in
mov
or
in
cmp
pop
mov
jge
int3
mov
mov
push
inc
add
mov
aas
roll
cwtl
dec
add
sbb
and
jns
pop
in
fadds
cmpsb
xor
jo
jmp
mov
repz
push
adc
ss
jl
in
arpl
mov
lret
sti
ss
jns
push
push
push
cs
push
mov
xor
pop
push
inc
pop
rorb
fiaddl
lcall
mov
iret
xor
pop
mov
mov
cmp
and
shlb
aaa
jle
sub
sarl
adc
nop
in
fsubrs
loop
jle
xor
xor
push
call
xor
loopne
fsubr
je
imul
sbb
lods
and
rorl
out
jo
out
mov
pushf
mov
and
push
push
addr16
cmp
call
xchg
mov
jno
adcl
mov
inc
js
das
into
cmp
pop
mov
xlat
ja
icebp
mov
roll
jmp
cli
inc
mov
and
insb
std
test
ss
pxor
push
scas
test
push
push
and
movsl
ficompl
gs
rorl
fldenv
pop
fistl
xchg
cmpsl
push
push
and
inc
sbb
sbb
xchg
or
ret
xchg
pop
mov
push
sub
aas
jg
popa
stc
shrl
xor
nop
addl
jns
test
push
daa
out
mov
orb
shl
repz
lea
mov
fildll
inc
sub
mov
fwait
mov
jl
lret
mov
in
inc
iret
push
cwtl
ret
inc
jbe
pop
loop
xchg
sub
push
hlt
insb
stc
add
push
test
or
dec
pop
sbb
mov
add
jge
push
mov
ss
insl
inc
push
sti
out
insl
cmp
pop
movsl
mov
adc
jb
pop
pop
enter
or
or
mov
into
xor
mov
push
out
aas
lret
loop
aaa
push
bound
enter
mov
mov
int3
push
jle
sub
cld
sub
pushf
lods
pusha
mov
enter
jae
shr
push
add
dec
std
pop
xor
jp
mov
loop
jg
jns
iret
jno
insb
cmp
cltd
or
stc
jmp
test
and
add
and
in
orb
sbb
scas
mov
mov
lret
loope
pop
or
fdivrp
pushf
mov
fcompl
mov
insb
xor
jne
add
and
mov
adc
shr
mov
sahf
jns
pop
pop
fcompp
iret
fiadds
xchg
jmp
lret
xor
jbe
cmp
sub
imulb
dec
fsubr
dec
mov
pop
cmp
test
adc
jnp
faddl
cmc
clc
cmp
push
imulb
shl
push
pop
out
add
negb
cmp
mov
ret
gs
ret
sti
adc
inc
dec
push
cld
and
xor
xor
and
or
adc
loope
mov
cmp
frstor
push
shrb
insb
pop
dec
or
push
aas
mov
push
inc
push
mov
or
std
mov
in
dec
mov
clc
ss
fistpl
mov
sbb
pushf
outsb
sbb
lahf
fnstsw
call
xchg
xorl
scas
dec
pop
and
xor
movq
in
shrl
sub
cmp
cltd
les
addr16
mov
xchg
into
pop
lcall
fstps
aas
xor
or
pop
aas
out
cmpsb
cld
sub
clc
adc
mov
push
add
jnp
into
inc
push
adc
jnp
xlat
push
or
push
in
or
in
mov
pop
cmp
mov
sub
adc
mov
cld
jle
cmp
mov
pop
sbb
nop
lcall
dec
imul
push
cmp
cmp
bound
lods
cmp
jecxz
jmp
cmpsb
lods
push
adc
cwtl
xor
dec
push
cmpsb
sub
jb
in
dec
sbb
in
add
inc
aam
mov
ss
stos
iret
popl
negb
inc
or
push
dec
leave
pop
imul
inc
jmp
mov
lds
mov
int3
xor
ret
aas
mov
lock
sub
ret
ret
mov
inc
cwtl
jno
clc
or
inc
hlt
mov
mov
mov
sahf
test
aas
cli
scas
xchg
inc
stc
push
cli
pusha
mov
xchg
shl
mov
in
loopne
mov
xchg
xchg
icebp
pop
jbe
xchg
pushf
add
int3
jb
mov
out
push
popf
test
repz
or
xchg
sbb
aas
movsb
cld
jge
push
sub
test
psrld
push
jl
call
clc
push
dec
imul
mov
int
jne
mov
jnp
jl
lret
dec
adc
lock
adc
xor
mov
xchg
clc
xchg
sbb
add
pop
xor
fcom
mov
cmc
add
shll
mov
xor
add
cmp
mov
icebp
addr16
loopne
test
mov
faddl
sbb
scas
xor
dec
idivb
xchg
int
shl
jne
cmpsl
paddw
push
mov
add
ljmp
insb
and
xor
cmp
push
sub
xchg
mov
sub
pushf
dec
out
xorl
sar
xor
js
sub
xor
loop
fidivs
mov
clc
cltd
lea
inc
and
scas
roll
aam
lcall
dec
sub
aad
bound
jb
clc
adc
mov
or
push
stc
jl
outsb
sub
shlb
lods
jge
xchg
and
or
mov
out
jnp
in
sub
orb
pop
add
lret
mov
xor
out
ret
inc
stos
add
xor
pop
rcll
jp
cmp
cmc
shrb
test
add
cmp
repz
or
cmp
mov
je,pt
push
xchg
push
gs
cmp
or
inc
mov
sub
rcl
mov
xchg
mov
hlt
pop
stc
pop
dec
inc
mov
into
push
push
xchg
xchg
jg
jp
jecxz
mov
sbbb
inc
in
leave
dec
into
mov
rcl
or
sub
sub
lods
jp
add
mov
outsl
push
xchg
mov
xchg
lahf
pusha
stc
cmc
or
lock
mov
mov
mov
jle
push
jno,pn
test
lret
shll
push
fidivrl
add
in
mov
int3
sub
sbb
mov
sti
lods
adc
test
mov
out
dec
inc
loope
mov
imul
sbb
sub
mov
dec
jns
rorl
adc
sahf
cmp
pop
lret
fs
jne
outsl
dec
fcmovbe
jbe
movsb
dec
cmc
pushf
jp
out
or
jle
mov
jge
sbb
jo
pop
adc
popf
test
or
je
sarl
inc
mov
lcall
xchg
insl
data16
mov
cmpsl
cmp
mov
aam
jo
movsb
jns
in
jg
xchg
inc
cmc
cmp
inc
mov
and
dec
push
jmp
rcll
pop
mov
arpl
jne
imul
lahf
xchg
xchg
dec
mov
pop
cmc
sbb
clc
pop
repnz
movsb
lock
push
xchg
stc
inc
sub
sbb
into
leave
cwtl
cld
xor
ficoms
js
jmp
dec
rcr
mov
mov
repnz
sub
lcall
std
jmp
or
pop
jbe
ret
aas
lret
pop
icebp
cwtl
mov
and
psllw
jb
les
clc
lods
loope
add
mov
std
cmp
jmp
jmp
add
pop
mov
xor
lret
test
into
jbe
xor
or
jl
out
loop
ret
mov
bound
dec
insb
imul
sbb
mov
inc
mov
jle
mov
push
test
jecxz
out
sub
lods
and
pop
xchg
adc
aas
rclb
push
popf
fcmove
jne
adc
jb
mov
sbb
or
dec
sub
movsl
jae
adc
inc
adc
jp
push
cmp
sbbl
jns
es
lods
and
inc
sub
fldl
push
cld
cmp
pop
pop
push
adc
mov
clc
cmc
cmc
inc
or
stos
sti
xchg
int3
pusha
lods
sbb
or
lods
shrl
sub
inc
lods
arpl
mov
int3
cmp
pop
cwtl
ficomps
mov
lret
leave
sahf
push
push
mov
arpl
icebp
pop
sbb
sbbl
xor
nop
sbb
pop
push
stos
mov
push
mov
repz
push
addr16
movsb
lods
mov
pop
push
lahf
and
adc
outsl
scas
daa
ja
dec
jmp
sahf
lret
in
xchg
sbb
adc
push
cmp
das
stc
add
jbe
clc
jnp
mov
stos
xchg
mov
jne
and
adc
lret
sti
sub
push
enter
pop
mov
jg
jnp
add
jbe
xlat
out
fwait
xchg
add
adc
pop
or
xor
push
scas
out
mov
sbb
cmp
push
pop
mov
addr16
jns
mov
sub
or
adc
xchg
jb
sbb
jl
push
jp
jo
mov
imul
and
sbb
in
into
or
test
jns
dec
loop
addr16
out
cmp
jnp
push
jno
enter
jo
xlat
std
repz
ja
inc
sub
pop
or
mov
dec
shlb
into
jp
xchg
fsubl
xchg
test
xchg
or
mov
dec
mov
pop
addb
in
popf
stos
ds
push
scas
lds
mov
std
sahf
sub
js
cmp
test
sbb
sbb
lods
test
lods
pop
imul
mov
movsl
mov
clc
adc
in
push
inc
sub
test
sahf
out
mov
mov
lods
lcall
mov
imul
out
dec
mov
inc
int3
jecxz
lret
fidivrl
imul
bound
xchg
xor
fs
orb
adcb
pop
dec
and
jb
adc
sti
stc
push
add
addb
xor
das
pushf
cli
lahf
popf
push
lock
add
outsl
pop
pop
movsl
stc
xor
movzbl
xchg
pop
lods
jnp
sbbl
dec
jno
cmpsb
jp
jno
adc
adc
repnz
sub
cmp
pushf
push
unpcklps
hlt
push
movsb
mov
daa
sub
lock
and
fcmovnu
or
mov
push
dec
sahf
dec
cmpsb
cmc
pushf
movsb
sub
leave
ficompl
pop
xor
mov
lock
jnp
aas
and
test
in
inc
cli
xchg
dec
inc
cmp
iret
stos
sub
adc
in
cltd
dec
cwtl
dec
xchg
cli
or
punpckldq
movsl
into
or
lahf
ds
push
jmp
cmp
inc
mov
or
sbb
adc
das
xor
dec
lcall
sbb
push
xchg
xchg
movsl
daa
and
out
pop
out
mov
inc
pop
dec
fidivs
adc
push
sub
cli
inc
sub
lret
in
cmc
push
in
shlb
stos
xor
mov
mov
pusha
jnp
cmp
adc
fistl
mov
xchg
xchg
xor
mov
cmp
stc
inc
jge
aaa
imul
out
rolb
test
add
cmp
popf
push
clc
hlt
adc
jg
icebp
stc
push
mov
add
js
or
dec
lods
jge
test
les
popa
xchg
mov
mov
inc
cmp
xchg
loopne
dec
pop
mov
pop
cmpsb
inc
lock
cmp
int3
push
push
sub
in
lahf
icebp
xchg
xor
outsl
or
adc
jp
mov
inc
xor
xchg
jb
push
loope
sbb
and
push
sbb
xor
movsl
add
loopne
or
xchg
shll
loope
and
push
lock
sbb
in
in
jno
add
xchg
pusha
pop
sub
push
cli
cli
imulb
jo
in
push
adc
push
aad
jecxz
mov
xor
rorl
sbb
pop
bound
pop
mov
ds
pop
inc
enter
int3
mov
inc
mov
cmp
push
or
pop
shl
cmp
mov
enter
lret
mov
mov
out
addr16
inc
lods
mov
xchg
push
push
mov
pop
push
adc
dec
std
lods
test
rcpss
xor
pop
cmpsb
cmpsb
add
cmp
mov
add
test
or
mov
push
in
jp
test
cmpsb
arpl
sub
xor
nop
cmp
lock
gs
sbb
and
into
push
sti
adc
in
in
dec
mov
aaa
inc
sub
and
jp
inc
aam
sbb
jmp
jb
sbb
aad
mov
cltd
insl
fwait
sahf
out
or
add
or
popf
jge
push
rclb
sub
bound
push
sbb
fistps
and
sahf
jb
fdivrs
mov
jno
inc
or
cmp
rol
mov
loop
xorl
or
sarl
or
xchg
stos
sub
and
inc
mov
mov
aaa
and
adc
popf
pop
adc
loop
jb
inc
dec
out
lret
push
fiaddl
jecxz
lock
jp
stos
inc
into
cmp
mov
addl
and
and
pop
out
lahf
mov
test
stos
ds
out
sbb
rolb
jne
test
xor
mov
sti
mov
decl
imul
jmp
adc
cld
icebp
sti
into
inc
pop
dec
jae
or
jo
jecxz
aam
push
test
inc
adc
jnp
popa
inc
and
test
fsubrs
arpl
subl
into
mov
je
pop
fcmovnu
dec
lods
into
sub
jbe,pt
sbb
addr16
jecxz
jbe
jae
and
out
out
mov
jae
jno
cmp
aam
cmc
push
enter
je
push
shrd
sub
ror
pop
inc
mov
movsl
adcb
ss
sar
or
je
and
or
stc
dec
cs
pop
icebp
filds
cmc
push
mov
sub
enterw
jo
imul
or
cli
test
xchg
test
data16
push
mov
push
push
cmp
cli
adcb
mov
mov
jl
outsb
inc
xchg
push
es
lods
add
clc
int3
fildll
mov
push
pop
mov
inc
xchg
aas
repz
mov
and
push
or
es
inc
inc
adc
mov
or
arpl
loopne
bound
and
xchg
out
push
xor
in
inc
sbb
sbb
pop
jbe
and
cmpsl
mov
jns
mov
mov
jns
add
inc
scas
cmc
mov
fsub
inc
ret
pop
stos
jl
nop
mov
cmp
ja
fwait
ret
mov
test
imul
ficoms
push
mov
cmp
sbb
mov
adcb
icebp
mov
stos
mov
movsl
sub
push
inc
test
dec
out
xchg
cwtl
pushl
sub
je
xchg
sub
adc
cmc
stos
fisubs
jecxz
jecxz
fucom
xor
rcrb
rcrl
movsl
dec
add
cmpsb
xchg
loopne
lcall
xor
add
mov
mov
mov
push
jge
mov
cmp
adc
pop
popa
pop
imul
jbe
icebp
cld
cmp
std
push
push
or
mov
xchg
aad
inc
jns
jmp
test
jecxz
in
stos
es
jns
lret
mov
movsl
cmp
neg
subb
or
push
add
scas
push
lods
inc
jnp
dec
mov
and
jp
push
jl
jecxz
adc
inc
pop
cmp
enter
or
push
shll
push
push
movsl
or
xchg
into
jne
repnz
rep
arpl
arpl
xor
mov
repnz
mov
clc
jge
add
dec
sub
rolb
and
mov
cmpb
lds
shlb
ficomps
mov
xchg
out
in
pop
das
or
add
mov
push
or
push
cli
dec
in
jb
push
leave
pop
jmp
xor
mov
sbb
shlb
addr16
rorl
cmp
push
adc
adc
ret
mov
mov
push
sub
pop
test
shrl
mov
xor
inc
push
clc
mov
stos
lahf
and
rclb
std
mov
inc
jg
cmp
xor
jg
hlt
cmp
xchg
jecxz
add
test
jmp
inc
xchg
sub
pop
cli
sbbb
mov
jmp
in
mov
dec
enter
lds
lcall
insl
out
jmp
mov
sahf
add
pop
inc
dec
in
pop
xor
xchg
std
sbb
mov
hlt
out
int
xor
scas
das
or
repz
fsubs
sbb
jae
repnz
call
or
xor
mov
lahf
pushf
xor
jmp
out
jg
xor
mov
xor
outsb
divl
std
cmp
push
repnz
adc
fcompl
jnp
inc
call
inc
aam
cmp
cmp
pop
bound
push
sbb
sti
loopne
fldenv
out
outsl
out
jle
adc
mov
test
out
fmuls
pop
inc
push
leave
push
xchg
nop
adc
cmp
scas
or
test
pop
sbb
flds
and
and
dec
adc
aam
cmpsl
push
outsl
stc
cmp
and
aas
in
jl
dec
pop
popf
loop
in
mov
iret
fnstenv
xor
sub
insl
add
pop
mov
lcall
adc
cmp
pop
pop
pop
sub
push
sbbl
jge
dec
mov
rcrb
inc
mov
sbbb
push
cmp
mov
or
inc
loope
je
in
repnz
stc
add
xlat
mov
pop
lret
lods
out
cmp
mov
pop
jb
test
ror
popf
or
ds
cmp
push
nop
dec
sbb
hlt
std
mov
jl
mov
sub
repz
leave
decl
cmc
mov
sub
add
imul
in
rcrl
jg
and
mov
jmp
inc
inc
rolb
xchg
movsl
test
js
inc
jnp
pusha
jno
mov
adc
into
in
sarb
test
mov
mov
mov
jne
insl
sbb
lea
ds
into
cmp
icebp
fistl
push
ror
movsb
push
outsb
add
les
jle
mov
ret
lret
mov
lret
stos
cmc
es
jg
push
push
pop
cmpsb
adc
xchg
push
fisubrl
add
sbb
insb
push
mov
and
sub
iret
inc
fstpl
xor
pop
std
push
inc
dec
dec
ffreep
stos
enter
mov
mov
das
mov
mov
add
cmp
stc
jnp
repnz
jbe
pushl
push
scas
arpl
lcall
lret
stos
or
sub
inc
call
mov
adc
xor
mov
arpl
in
adc
leave
jbe
sbb
and
xchg
fistps
cmpsl
nop
inc
fs
bound
add
int3
or
in
push
popa
dec
sbb
xor
add
mov
shll
adc
cmpsl
cmp
or
pushf
dec
mov
jge
adc
push
lret
enter
mov
jbe
adc
mov
push
faddl
pop
movsl
aam
push
xchg
xor
fmul
adc
dec
jp
pop
and
popa
xor
js
test
add
xlat
cmpsb
cmp
mov
pop
ds
xor
mov
rol
cltd
xor
test
cli
aas
or
sub
movsb
test
js
mov
outsb
ss
insl
cltd
xor
push
sub
xchg
push
scas
loopne
pop
sets
aaa
or
dec
push
mov
and
enter
out
xchg
jne
call
and
sub
sbb
cmc
cld
out
xchg
stc
mov
loop
lahf
pop
xorb
into
popf
or
and
push
sahf
jmp
leave
sti
jae
jnp
jne
push
in
add
and
lds
push
sub
addl
test
mov
pop
sub
mov
dec
aaa
inc
add
divl
es
idiv
push
inc
popf
push
rcll
movsl
int3
push
stos
adc
test
out
or
fcomip
andl
add
sbb
arpl
call
or
daa
enter
fstl
add
cmp
cmc
xor
int3
push
in
and
in
add
leave
pop
dec
out
jnp
mov
ds
dec
cmp
xor
push
jmp
mov
loop
outsl
cmpb
loopne
movsl
pop
inc
aaa
repz
sub
arpl
adc
je
fimuls
cmpsb
dec
xchg
xor
out
lock
or
pop
call
stos
push
xorl
out
stos
insb
out
je
test
xchg
xchg
jle
hlt
sahf
push
or
dec
pop
or
test
arpl
mov
in
mov
stos
lahf
inc
dec
pop
roll
sub
xor
sbb
in
mov
sbb
sahf
push
push
xor
repnz
hlt
mov
xchg
testl
jp
icebp
dec
mov
inc
xchg
pop
lea
repnz
xor
div
mov
cmp
lock
mov
xor
popf
fwait
pop
test
xor
popf
outsl
pop
repz
push
shlb
rcrl
add
lcall
cmpsb
dec
inc
repnz
out
bound
fsts
xor
inc
arpl
jl
cmp
mov
call
inc
xchg
leave
sti
test
xor
test
sbb
adc
mov
stos
xchg
out
in
adc
fsubl
andl
or
lret
stos
pop
out
dec
fucomp
and
xchg
sbb
out
push
daa
sbb
cmc
push
push
movsb
jb
ja
sbbl
in
movsl
sub
in
sbbb
sub
ljmp
xchg
push
hlt
jno
jae
push
stos
hlt
adc
push
sub
inc
in
jbe
lret
mov
test
aas
movsl
mov
scas
jge
lret
dec
testl
pop
movsb
ja
addr16
adc
lret
popf
jne
cltd
cmp
mov
jge
cltd
mov
es
in
repnz
xor
pop
shr
pop
cld
inc
sarb
movzwl
cld
faddl
or
add
xchg
add
repz
mov
mov
shufps
shr
xor
int3
dec
pop
mov
notl
fsubl
lea
and
enter
lea
movsl
lcall
mov
or
pop
vcmpsd
aas
or
loope
clc
cmp
or
je
sub
xchg
mov
cmp
ljmp
into
mov
out
pop
vpaddsb
pop
fdiv
rorl
xchg
fstpt
mov
hlt
push
fs
xor
add
xor
pop
inc
fsubrl
imul
stos
lock
sub
add
fdivl
add
int3
mov
mov
rcrb
lret
mov
in
sub
mov
subb
inc
mov
and
mov
mov
jbe
cs
dec
in
fmuls
cmpsb
xchg
cli
fwait
loope
mov
adc
daa
dec
cmp
mov
or
xor
rcrl
mov
imul
xor
jns
lahf
call
stos
mov
mov
xchg
jns
shrl
dec
mov
aam
or
lods
xchg
xchg
cmp
cmp
push
stos
sbb
adc
inc
sbb
push
popa
jns
and
cmp
sub
dec
cmp
and
incb
pushf
adc
inc
in
dec
pop
ds
cltd
push
fsubrl
insl
jnp
mov
pop
cmp
push
dec
mov
and
mov
xchg
jg
call
arpl
dec
fidivs
sbb
push
jno
adcl
sbb
push
sbb
adc
lret
sub
sub
andb
pop
test
mov
test
xchg
push
mov
add
sub
mov
bound
add
sub
cmpsl
and
repz
sbb
xor
and
jb
dec
inc
insl
test
cmp
es
xchg
xchg
sbb
pop
push
mov
jp
scas
or
cmc
mov
and
fwait
call
fisttpl
push
popa
daa
dec
push
hlt
inc
and
ret
test
jl
daa
enter
std
mov
cmp
mov
xor
and
lret
dec
scas
pusha
mov
sti
movsb
int
cmp
cmp
lahf
inc
in
push
mov
sub
iret
out
jge
or
jle
je
and
mov
in
sbb
jg
xchg
lods
dec
jbe
cwtl
and
scas
adc
enter
jl
sub
int
shlb
adc
call
hlt
out
sbb
xorl
inc
insl
lret
xor
daa
xor
inc
mov
mov
in
pop
mov
adc
lret
inc
outsl
movsl
jbe
inc
int
sub
stc
shlb
inc
lahf
int
loopne
bound
sahf
inc
dec
or
popa
ret
mov
push
dec
mov
or
aaa
and
pop
mov
jmp
lret
into
subl
test
or
in
mov
loope
out
and
call
test
aad
dec
pop
bound
enter
lods
popa
push
xchg
lock
ljmp
jmp
mov
mov
xor
cs
test
xchg
jae
roll
xlat
inc
adc
cwtl
jae
out
pop
sub
jge
pop
inc
or
ss
pop
jmp
adc
fistl
jmp
mov
sbb
pushf
push
int
out
mov
add
pop
add
jo
jle
mov
lock
mov
push
out
cltd
shrl
mov
and
xor
adc
push
adc
mov
pop
pop
andb
sub
pushf
push
inc
cmc
lock
and
lods
cmp
inc
test
push
les
mov
mov
jnp,pn
lahf
lea
pop
in
jns
es
loope
sbb
divb
inc
inc
push
lock
dec
jno
outsl
add
cmp
add
pop
jmp
sub
je
out
jns
jno
aam
movsl
sbb
test
cli
sub
dec
test
outsb
movsl
cltd
cld
int3
mov
xchg
sub
push
xor
inc
or
in
xor
pop
inc
xchg
icebp
jnp
inc
paddusw
repnz
ret
cmpb
lret
xor
mov
and
jmp
fnstsw
ds
add
push
push
push
sbb
rcrb
cmc
dec
jp
and
shl
test
into
push
push
adc
std
xchg
in
xchg
sarb
mov
addr16
jno
aas
mov
mov
aaa
mov
cmpl
out
mov
dec
push
jbe
push
mov
lahf
adc
adc
or
mov
fnstcw
push
scas
cs
cmp
cmp
les
push
push
add
out
setnp
and
push
mov
xor
push
cmp
fdivrs
inc
xchg
rcl
lcall
repz
sub
fsubrl
inc
or
mov
jl
inc
rorl
push
jo
pop
cmp
fmul
sahf
push
das
cmpsb
dec
sbb
out
pop
ret
hlt
cmpsb
mov
adc
call
out
mov
pusha
fsubrl
mov
imul
push
mov
or
cwtl
test
pusha
push
adc
push
lret
repnz
lock
pop
pop
loopne
cmp
add
mov
dec
jbe
mov
rcrl
xchg
sub
sbb
or
sub
fstps
inc
hlt
sarb
std
mov
mov
outsb
roll
mov
daa
test
mov
jmp
repz
cmp
ds
push
and
mov
out
mov
repz
nop
cwtl
add
xlat
std
or
xor
adc
lock
ret
cmp
mov
gs
mov
out
fists
lock
nop
push
xor
cmpsb
arpl
cmp
lods
jge
rol
xchg
and
push
jle
stc
xor
loope
mov
mov
jo
mov
inc
inc
xor
or
jle
jmp
sbb
xor
pop
xchg
mov
mov
mov
jbe,pn
test
xchg
in
cmp
loopne
scas
test
xchg
xchg
push
add
jno
mov
cmp
add
ret
cmp
mov
lret
cmpxchg8b
sbb
inc
push
je
pop
cwtl
shrb
sbb
lods
or
adc
loopne
cmpsb
or
sub
xor
lods
sti
sahf
fists
nop
test
dec
into
or
mov
pop
and
sti
jns
sbb
daa
mov
ds
les
pop
push
arpl
jge
cmp
xor
in
andb
stos
je
test
jmp
dec
jle
out
mov
insb
aam
dec
or
xor
pusha
pop
rclb
sub
mov
pop
inc
mov
movsl
int3
xor
jle
cs
lods
ret
or
dec
jo
or
rorb
test
sub
mov
adc
out
add
lret
stc
push
jl
dec
mov
lret
pop
fbstp
mov
das
data16
aam
mov
xchg
dec
push
adcb
adc
xchg
jnp
mov
fs
stos
lock
jecxz
or
popa
sub
and
aaa
pop
mov
mov
adc
xchg
jmp
pushl
cmp
sbb
sub
and
fadd
out
mov
mov
aaa
mov
sub
addr16
add
xchg
mov
or
mov
push
aad
cmp
cld
lods
addr16
movsb
and
repz
jle
inc
mov
adc
xor
gs
add
xchg
sahf
adc
cmp
jp
dec
sub
xor
jecxz
rolb
sub
pop
mov
add
loop
lret
mov
inc
pop
test
pop
rorl
shrb
adc
mov
pop
sahf
xor
data16
fsubs
pop
sub
sahf
mov
pushf
movsb
or
nop
inc
xchg
rolb
inc
jnp
xchg
cld
lods
divb
add
push
sar
rol
add
loop
adc
xor
bound
int3
and
lret
ror
les
pusha
shrl
test
sbb
xchg
pop
imul
xchg
rcll
mov
mov
jecxz
and
jle
sbb
hlt
dec
inc
lods
cmp
sub
push
pop
mov
pop
mov
movsb
stos
cli
cmpsl
popf
into
sub
and
sub
mov
arpl
push
cmpsb
xchg
scas
jp
test
notb
or
jmp
iret
addb
and
test
sub
mov
xor
cli
mov
jecxz
push
mov
and
xor
lcall
lahf
sti
adc
lods
add
aad
mov
faddl
je
test
fdivrl
test
xor
jns
cld
shll
loope
xchg
rcl
xor
out
fstpt
cmc
ja
popf
std
cmp
add
cmp
cwtl
dec
in
mov
push
cs
sub
mov
subl
jecxz
xor
cld
mov
icebp
je
sub
mov
mov
es
add
movsb
adcl
xchg
ret
dec
jbe
inc
pusha
jo
xchg
mov
lds
jne
orb
call
push
pop
test
cmpsl
dec
mov
jecxz
out
adc
sbb
lods
aad
pop
sbb
adc
leave
cs
lods
push
cmp
mov
shrl
orl
pop
inc
ljmp
adc
cltd
in
leave
push
test
jmp
pushl
ljmp
out
or
mov
xchg
fcoms
mov
mov
push
idivb
xchg
sbb
xlat
push
aad
jl
shlb
jge
push
cld
leave
sub
xor
adc
push
aaa
pop
push
pushf
xchg
mov
cmc
or
or
lods
jnp
dec
ret
repz
push
push
not
pop
in
and
or
loopne
cmpl
int
int
and
sub
jmp
adc
pop
sbb
lea
jge
out
dec
addr16
jl
jae
xchg
aam
push
and
adc
lods
mov
or
sub
cmp
sbb
mov
out
and
mov
add
push
rcll
ret
push
pop
call
mov
push
dec
mov
dec
jl
ds
dec
notl
xor
and
mov
cs
loop
and
loope
lret
cmpl
xchg
mov
mov
inc
push
aad
dec
mov
add
cmp
and
in
fcmovbe
push
leave
mov
stos
add
jnp
mov
inc
mov
add
push
pop
cmp
les
mov
adc
outsb
push
cs
xor
jb
push
sub
cmpl
push
jne
add
call
ret
fdivr
mov
pusha
je
add
inc
ret
inc
pause
mov
cmpsb
mov
adcb
cmc
stos
loopne
or
test
push
and
xchg
out
inc
ja
js
jno
in
mov
cwtl
movsl
out
enter
cmp
int3
loopne
enter
jp
rol
push
push
mov
test
xor
pop
push
cwtl
xlat
icebp
not
dec
xchg
lahf
lods
xlat
mov
mov
push
mov
pop
jl
int
dec
pusha
mov
mov
mov
jnp
xchg
jae
lds
ljmp
stc
ret
daa
imul
loope
xor
adc
leave
repz
jmp
lahf
dec
dec
popf
inc
lock
je
test
mov
push
jb
mov
push
test
repnz
shll
jae
gs
or
test
lds
mov
inc
mov
movsb
insl
test
mov
repnz
icebp
or
adc
fisubs
mov
xchg
inc
dec
xor
mov
xor
aas
bound
dec
xor
adc
hlt
add
and
cs
jne
or
and
jae
jl
mov
dec
sub
es
dec
outsl
add
out
or
jle
jns
aas
lock
add
add
xor
push
fstpt
push
cmp
leave
lock
insb
adcl
mov
pop
adc
addr16
dec
and
inc
jl
into
pop
cld
inc
mov
add
inc
cmp
lea
fsubp
xorl
loop
loopne
adcb
xchg
leave
fs
ret
and
out
sbb
xorl
mov
and
gs
pop
add
xchg
fs
jae
rclb
mov
sahf
xor
sbb
mov
data16
test
jne
int
or
and
add
pusha
dec
mov
test
mov
in
adc
shl
inc
hlt
inc
cwtl
int
js
fidivrs
jne
mov
subb
add
pusha
lret
loop
xchg
or
xchg
fisubrs
sub
leave
cmp
dec
adc
pop
outsl
out
mov
xchg
sbb
sbb
add
xchg
sahf
mov
sbb
jle
pop
pop
fwait
outsb
pushf
lret
stc
divl
inc
decb
xchg
mov
pusha
mull
dec
sbb
mov
ds
adc
cmp
sub
jne
aaa
sti
mov
jns
test
int3
add
add
push
sub
fwait
cwtl
mov
mov
mov
pop
mov
mov
ljmp
mov
or
and
out
std
mov
imul
out
sub
std
sub
mov
daa
cmpsl
push
jae
jmp
pop
jmp
pop
shrd
pop
dec
pop
rcrl
in
dec
pop
mov
mov
nop
pop
inc
fsubl
xchg
lds
cmp
jge
int3
rcl
jle
mov
pop
insb
daa
xor
and
jmp
lock
adc
xor
orb
daa
cmpsl
popf
xorb
outsb
push
or
das
pop
mov
dec
std
xchg
cmp
cmc
adc
in
and
dec
inc
and
cmp
movsl
mov
imul
mov
mov
ds
ja
adc
test
sub
pop
or
mov
jne
fndisi(8087
adc
std
dec
sbb
das
in
jmp
mov
jp
frstpm(287
cmp
mov
or
xchg
scas
ret
adc
dec
push
sub
push
out
xchg
or
or
addb
ret
loopne
push
aam
dec
movsl
unpcklps
mov
and
add
cmp
xchg
mov
add
dec
lods
jbe
mov
rcr
dec
div
mov
add
out
in
inc
les
cmc
xchg
in
ret
sbb
jge
nop
pop
add
popf
pushf
ja
pop
jae
int
shll
ss
jo
add
lods
jg
pop
pop
ret
adc
mov
inc
jbe
dec
sub
loope
adc
out
rcr
sbbb
cmp
lods
dec
and
sahf
jge
inc
xor
dec
add
mov
arpl
movl
jg
hlt
fsts
dec
mov
dec
mov
xchg
sahf
out
cmpsb
xchg
sbb
mov
jb
std
xchg
or
jp
mov
adc
xchg
push
subb
ret
adc
stc
or
mov
inc
popa
loope
aaa
movsl
icebp
or
bound
push
mov
lock
icebp
push
sub
sbb
cmp
aaa
jbe
movsb
adc
lcall
jno
xchg
xor
or
xchg
mov
int
sahf
int
in
mov
rclb
out
mov
lahf
mov
sbb
cmpb
mov
popa
or
sbb
lcall
inc
push
sub
mov
adc
fmuls
pop
push
arpl
mov
daa
outsb
rorl
in
loopne
test
shll
jno
sbbb
xor
mov
aaa
cld
dec
sub
imul
or
int
sub
jno
lods
mov
dec
add
je
push
dec
stos
out
idivl
dec
inc
test
rcrl
pusha
xlat
sbb
imul
adc
mov
cmpsl
sub
mov
andb
inc
inc
loopne
cmp
push
daa
mov
cli
scas
orl
push
popf
jnp
lods
add
pop
cmp
pop
les
xchg
mov
mov
int
inc
mov
mov
push
dec
lcall
addb
ret
or
in
or
lds
pop
jecxz
mov
or
dec
cmc
sti
pop
push
popf
out
inc
iret
dec
xor
jae
nop
ucomiss
add
or
sbb
xor
out
xor
rol
out
jecxz
add
or
or
lahf
add
jge,pn
iret
stos
xchg
clc
in
test
addb
pop
scas
inc
pop
fists
pop
or
mov
sbb
inc
push
imul
mov
inc
dec
fwait
dec
arpl
punpcklbw
jmp
push
push
bound
and
popa
adc
movsb
cmp
cld
jo
push
jne
sub
xchg
sub
sbb
add
add
into
test
xchg
mov
xchg
es
sbb
inc
pop
dec
emms
jae
xor
jno
add
cwtl
enter
xchg
lret
pop
imul
insl
mov
out
xor
dec
or
sub
add
push
fs
fidivs
sub
popa
sub
adc
in
adc
xchg
mov
sahf
sbb
push
push
addr16
jbe
xchg
mov
or
out
pop
inc
jne
cmc
pop
add
jmp
fadd
jp
cmp
sbb
mov
addl
iret
mov
inc
add
or
arpl
data16
inc
cmp
pop
aaa
loope
les
movsb
cmp
xor
daa
add
push
add
adc
or
divb
push
shr
jae
sub
jecxz
mov
push
inc
jbe
jbe
movsb
sub
mov
mov
jmp
cmpsb
mov
sbb
or
test
add
fcompl
movsl
jne
jb
out
out
outsb
xchg
xchg
stos
push
out
std
sahf
imul
mov
mov
mov
or
pop
sub
xor
xor
dec
mov
jnp
and
xchg
sub
in
ljmp
pop
add
int
rcll
js
sub
and
add
sub
jb
aas
mov
mov
aam
lds
mov
push
fwait
and
sbb
stc
mov
push
testl
push
in
push
testl
stos
test
pop
and
stos
into
cltd
lods
les
and
inc
mov
imul
adc
pusha
pop
inc
shlb
aam
daa
out
nop
xchg
mov
pop
sarb
test
ss
sub
mov
in
lods
sbb
out
push
adc
xsave
loop
xchg
ret
mov
xchg
adc
shl
sahf
add
xor
adc
inc
in
sub
das
bound
add
cmp
lcall
mov
leave
in
or
jnp
out
mov
lahf
inc
inc
es
mov
and
call
imul
adcb
push
mov
divl
in
jg
into
ss
jle
inc
mov
rol
in
push
xchg
out
sub
pop
aas
stos
adc
sub
push
insb
mov
pop
xor
insb
jnp
pop
insb
adc
mov
push
lret
rol
and
lret
dec
mov
dec
nop
push
cmp
mov
enter
xor
aaa
sbbl
mov
andb
jmp
lock
pop
push
movsl
add
fsubr
mov
mov
jns
lcall
adc
fsts
mov
sbb
mov
repnz
push
pop
cmpsb
rorb
inc
fs
cmp
xchg
test
fisttps
mov
loope
daa
int
pop
sbb
cld
push
push
xor
and
dec
push
inc
cmpsl
repz
aaa
pushf
sbb
cmc
add
push
out
xchg
mov
sub
pop
sbb
aad
imull
iret
and
ficoml
xchg
lcall
mov
cmpsl
add
xor
mov
inc
or
in
mov
mov
in
inc
bound
cmpb
sub
sub
mov
dec
pop
loope
or
xchg
pop
fistpl
xchg
imull
jle
mov
std
stos
iret
sub
jg
das
sub
push
and
lods
in
cld
lock
mov
ret
repz
div
cwtl
stos
int3
dec
aad
push
dec
js
mov
pop
clc
or
stos
movsl
cli
and
out
iret
fs
cwtl
dec
hlt
jg
jno
xchg
cmp
pop
cltd
in
das
aas
xor
cmc
cmpsb
out
sub
pop
daa
adc
xchg
pop
aad
mov
test
pop
jl
insl
sub
pop
das
aad
pusha
es
pmullw
adc
movsb
shll
adc
loop
inc
mov
dec
dec
faddl
and
sub
jnp
xchg
decl
jle
call
sub
adc
dec
or
add
rcrb
lods
mov
pop
test
cld
popf
pop
leave
mov
sbb
aas
inc
popf
lods
lods
nop
pusha
push
stos
xor
aaa
loope
enter
test
xor
mov
imull
sbb
sbb
push
jb
push
and
adc
dec
lahf
xchg
add
sbb
adc
mov
cmp
sbb
js
xor
shr
sti
sahf
aam
popf
in
clc
sbb
das
mov
add
xchg
sub
negl
cltd
adc
mov
pop
mov
out
out
sbb
scas
mov
call
mov
xor
test
or
mov
pop
sbb
inc
sbbb
push
out
iret
fs
and
mov
xor
sub
std
sub
add
adc
ja
cmp
stc
insb
and
push
pushf
adc
mov
jne
mov
lcall
adc
mov
fdivrl
or
pop
pop
mov
stos
xchg
adc
mov
stos
xor
scas
xchg
xchg
out
jge,pn
inc
stos
or
shlb
sbb
mov
in
cmp
inc
mov
std
inc
mov
mov
jbe
fs
pop
fisttpll
in
xchg
pop
ret
cmpsb
out
xlat
mov
enter
std
movsb
xchg
sub
jmp
inc
lock
adc
imul
mov
test
adc
add
lahf
outsl
jns
outsb
mov
xchg
outsb
icebp
out
jp
cmpsl
cmp
lock
or
mov
pop
mov
cld
cld
inc
xchg
das
sbb
sbb
shll
inc
sub
in
mov
call
xorb
fcoml
std
inc
dec
pop
enter
sbb
mov
cmp
cli
ljmp
jl
push
ds
mov
ret
sar
pop
aaa
loopne
pop
shll
into
inc
dec
loop
xchg
mov
inc
adc
inc
lahf
insb
arpl
pusha
or
popa
es
stc
sub
idivb
test
jecxz
stos
mov
xchg
push
adc
lea
pop
adc
ret
pop
mov
jle
rcrl
and
dec
stos
or
loope
mov
mov
test
and
add
int3
int3
inc
out
mov
mov
in
jae
mov
fs
or
pop
in
cmp
cli
add
cmpsb
imul
sbb
pop
and
ja
cwtl
sub
lock
xor
cs
cmp
fwait
scas
incb
pop
imul
push
dec
xor
pop
les
inc
aad
rorb
sbb
mov
jns
scas
sar
sub
popa
inc
push
jg
push
into
dec
mov
fidivrs
xchg
pop
cmp
popf
orl
mov
and
gs
ret
xchg
imul
mov
popa
push
push
clc
ss
lock
mov
jl
clc
mov
fists
test
je
xor
cltd
out
pop
bound
sbb
je,pn
jbe
out
push
shll
adc
mov
push
sti
adc
push
jg
xchg
insb
sbb
lock
lock
addb
and
push
shrb
jmp
enter
scas
mov
pop
repnz
in
iret
nop
pop
sub
fldt
sti
in
or
dec
mov
scas
js
stos
in
jmp
mov
daa
mov
xchg
push
cltd
lock
add
lahf
push
sub
fdivp
fsts
mov
ret
sti
inc
mov
xor
lret
pushf
pop
push
cmp
mov
in
shll
xchg
fcomps
lret
mov
xchg
pop
cli
sbb
mov
into
xchg
ret
mov
inc
stos
shll
mov
inc
jnp
lods
repnz
push
ret
adc
pop
bound
add
mov
shl
mov
sbbl
testl
pusha
inc
inc
xchg
lea
mov
mov
ss
sub
mov
push
test
xchg
push
jbe
arpl
fsubp
shlb
test
iret
out
lock
push
mov
jmp
push
add
cltd
cmp
xor
ficoml
ret
inc
pop
insb
push
jg
std
fidivrl
imul
iret
scas
cmp
shll
and
movsl
sub
enter
add
inc
cmp
push
mov
inc
and
dec
daa
repz
sub
sub
inc
rcr
mov
movsb
cmp
daa
mov
int3
sbb
sbb
fwait
mov
bnd
adc
mov
cmp
xchg
test
pop
jmp
daa
pop
pop
adc
imul
aaa
shrl
out
daa
popa
or
call
ret
into
mov
leave
aam
and
stos
push
push
sub
mov
inc
push
imul
xchg
cli
push
sbb
lods
sub
or
fs
aad
sub
and
les
in
test
xchg
adc
mov
in
cmp
ja
insl
mov
fldl
mov
pushf
shll
mov
or
andb
mov
subl
pop
jmp
out
jmp
mov
cmp
and
gs
push
jnp
fildl
push
and
test
sahf
mov
sbb
rcll
mov
fwait
pop
das
stc
mull
fucomi
out
arpl
cmpl
pushf
push
jnp
push
mov
or
or
lea
sub
jne
jne
movsl
push
jge
cmpl
cld
mov
add
data16
lea
pop
ss
xor
push
pop
nop
loopne
dec
pop
pop
loop
mov
xor
decb
int3
aad
shll
repz
repnz
stos
aam
cmp
push
dec
mov
aam
jae
test
shll
push
lcall
sbb
lret
push
or
notl
jb
stos
xchg
stos
lods
pop
cmpsb
mov
xor
cs
jae
arpl
inc
add
xor
icebp
cmpsb
pop
xor
pop
in
add
pop
jno
cmp
jnp
pop
roll
xchg
ret
mov
jp
sub
lahf
lcall
mov
mov
add
arpl
push
push
fsubr
mov
mov
movsb
rclb
push
fdivl
xchg
sub
insl
fisubrs
mov
inc
outsl
mov
sbbl
in
push
int
xor
xchg
or
and
add
pop
or
jecxz
push
xor
jno
dec
xchg
in
sub
in
in
or
or
loopne
loopne
sub
sbb
insb
fcom
push
scas
inc
mov
imul
lret
cmp
scas
mov
loop
das
pop
sbb
dec
add
shll
dec
fidivl
xchg
xchg
push
into
push
mov
add
out
outsb
in
mov
xchg
mov
loop
mov
test
sbb
and
es
int
in
loope
jg
stos
sbb
movsb
in
nop
and
add
add
daa
or
adc
test
xchg
mov
repz
fwait
test
enter
sub
lcall
aaa
xchg
xchg
push
or
jmp
xchg
rclb
dec
dec
leave
mov
xchg
negb
out
sti
andb
mov
sub
int3
mov
in
shll
out
std
out
fmull
pop
push
xor
addl
ss
inc
mov
jae
lret
out
sbb
pushf
out
out
adc
fcoms
cmpsl
clc
jbe
test
mov
data16
jnp
call
and
stc
jne
cmp
mov
push
out
add
and
imul
psrlw
lods
mov
insb
push
in
test
lcall
xchg
xchg
pop
dec
dec
and
pop
loope
mov
lret
mov
push
pusha
and
pop
mov
scas
jbe
test
loopne
les
push
jb
dec
jge
inc
xlat
cmpsl
mov
mov
mov
lds
leave
js
sbb
mov
iret
adcb
sbb
cmpsl
jno
xor
dec
pusha
sbb
scas
shll
daa
and
mov
add
jne
push
leave
insb
xor
lods
push
and
decb
lods
ja
hlt
cmp
rolb
jne
mov
imul
dec
push
xchg
icebp
jne
je
add
test
sbb
mov
fwait
xor
repnz
jno
mov
cwtl
inc
fcomp
pusha
add
bound
pop
adc
cmp
or
pop
shr
in
adc
push
xchg
jae
and
mov
mov
and
jecxz
xor
jle
mov
adc
jne
inc
push
mov
pop
pop
cltd
test
xor
xor
cmp
loop
adc
filds
add
add
scas
lcall
cwtl
mov
lds
orb
call
mov
and
jmp
inc
and
jmp
mov
push
inc
inc
mov
popf
repz
mov
mov
sbb
mov
call
gs
mov
in
movsb
xchg
loop
in
and
dec
mov
in
cs
mov
fldcw
test
call
lock
cltd
and
xchg
and
movsl
cmp
lret
and
mov
pop
dec
add
xor
mov
fidivrs
jmp
mov
std
rcl
sbb
mov
mov
lock
dec
fisubrs
add
jge
mov
mov
push
into
das
cli
outsb
adc
insb
fisubrs
out
inc
mov
sbb
outsl
fsubrs
push
xor
test
enter
fidivl
enter
push
dec
push
popf
repz
repnz
iret
popf
inc
mov
jmp
fstl
pushl
je
hlt
movsb
lea
pop
cli
push
inc
mov
fidivl
or
mov
rclb
leave
icebp
ss
mov
lock
fstps
mov
int
mov
jae
movsl
xor
jns
sbb
mov
or
jb
imul
hlt
outsl
push
cmpb
mov
dec
dec
push
or
fsubl
jecxz
jns
into
frstpm(287
mov
nop
movsb
pop
adc
bound
inc
add
cltd
add
rorb
out
sbb
xor
pop
sbb
jns
jno
test
test
jnp
iret
mov
cmp
jae
xor
push
outsb
mov
pop
int
dec
repnz
xchg
sub
lret
xchg
sahf
aas
sub
aas
jecxz
lcall
ljmp
sub
hlt
aaa
loope
lahf
sbb
stc
dec
divb
test
push
outsb
pop
int3
sub
or
cmc
cmp
and
mov
or
sbb
xor
orb
enter
cmp
bound
lods
loop
sub
leave
xor
call
inc
mov
and
in
push
jbe
sbb
xchg
shlb
adc
in
jge
addl
jmp
cmp
leave
pop
mov
xor
test
out
lea
inc
mov
sub
repz
imul
xchg
pusha
cmp
imul
loop
jns
sbbb
adc
jl
cs
push
iret
outsl
iret
std
shlb
and
incb
pop
cltd
pop
adc
cli
xchg
adc
daa
cmp
cmp
xchg
push
xor
inc
mov
jb
or
dec
cmp
mov
fwait
mov
pop
cmp
std
xorb
cmpsb
lahf
jmp
js,pt
out
lods
sbb
stos
cmc
lahf
jl
adc
out
and
rol
loopne
movsl
inc
jno
mov
rorl
cli
repz
arpl
repnz
jmp
cmpsb
ret
jnp
movsl
cltd
inc
adc
pop
lock
ja
scas
jp
lahf
inc
push
cmp
std
cmpsl
push
mov
xor
push
repnz
lret
dec
xor
mov
lea
dec
nop
mov
xchg
xlat
or
movsb
enter
cmpsb
xlat
std
add
pop
scas
dec
fidivl
mov
int3
add
imul
push
inc
mov
inc
sbbb
mov
incl
dec
enter
mov
mov
adc
sub
xchg
imul
push
sbb
dec
lock
cmp
frstor
icebp
lods
pop
sti
add
add
mov
push
call
and
adc
lock
frstor
fisttpl
or
pusha
stc
mov
outsb
dec
subl
nop
mov
push
or
pop
xchg
in
lcall
inc
pop
fsubr
int3
sbb
adc
rcll
aam
scas
fucomip
lahf
enter
cmpsl
mov
lock
lea
addr16
aam
aad
scas
mov
fsubr
and
fcompl
add
jg
cmp
orl
cwtl
mov
xchg
cli
add
mov
outsb
adc
out
and
inc
cmpsl
scas
jl,pt
xchg
add
test
sti
jae
sahf
insb
inc
adc
jle
popf
xor
and
sub
push
adc
and
movsb
xchg
in
psubd
gs
dec
push
hlt
xor
ror
mov
lret
jmp
adc
lahf
xor
add
idiv
cmp
inc
bound
jle
jne
inc
jmp
popa
push
addb
hlt
out
mov
int3
iret
outsb
aad
push
imulb
paddsb
and
dec
iret
mov
test
cmpsl
ficoms
int
and
inc
mov
loope
aas
dec
lea
lahf
push
popa
add
les
or
scas
sahf
stos
fucom
lret
jge
or
push
and
xchg
or
push
sahf
or
sub
sub
cmpsl
jo
imulb
cltd
lcall
cmc
jecxz
dec
inc
ljmp
cli
aaa
sub
add
mov
and
push
test
push
adc
jmp
or
push
push
pop
and
push
xchg
cmpsb
sbb
inc
push
and
outsb
lods
shrl
lcall
mov
shrl
leave
inc
mov
pop
cmp
sbb
xor
aam
inc
inc
lahf
mov
dec
cmc
clc
mov
mov
adc
mov
mov
popf
fst
push
jno
icebp
fmulp
jno
fmuls
outsl
push
arpl
or
inc
sub
dec
dec
loope
mov
imul
sub
dec
inc
add
mov
push
mov
xor
loopne
jecxz
cs
or
out
icebp
scas
repz
inc
sbb
mov
xchg
sarl
dec
ud0
pop
cltd
or
popf
push
jo
cmp
add
jb
pushf
and
lods
xor
aas
mov
lret
jmp
xchg
mov
push
lahf
cmpsl
or
mov
in
movsl
call
out
jae
push
xchg
xchg
or
push
pop
outsb
or
mov
aad
adc
and
pushf
idivb
neg
mov
lcall
jne
mov
iret
mov
daa
push
in
or
sar
sbb
sub
rcr
fldl
stos
or
aad
insl
rolb
scas
in
jmp
cmp
jmp
cmp
mov
sahf
cmc
mov
sbb
rcr
in
xchg
mov
jg
test
jns
mov
mov
push
pop
ja
daa
cli
pop
adc
pop
fs
jbe
test
aad
inc
lcall
jnp
push
pop
dec
mov
sub
xchg
lcall
sahf
and
ror
pop
inc
les
das
cmp
fnstsw
mov
adc
mov
mov
fisubl
mov
loopne
pop
in
test
sub
stos
fwait
lods
mov
xchg
fs
push
pusha
or
mov
and
in
pop
jge
xchg
pop
aam
pop
sbb
push
push
jl
inc
adc
lahf
mov
nop
cmpsl
insb
inc
add
test
cwtl
and
repz
out
jge
mov
adc
outsl
lahf
arpl
sbb
bound
push
inc
sub
cmp
jmp
iret
lret
aas
loop
mov
xor
push
in
imul
les
inc
lock
mov
mov
clc
aas
mov
daa
or
xlat
pop
loopne
out
call
sub
shrl
dec
push
and
int3
mov
ja
add
mov
jno
addr16
jle
or
test
sub
dec
jp
xchg
pusha
inc
and
jmp
jo
or
mov
push
out
mulb
decl
add
jnp
mov
pop
imul
push
cwtl
xchg
loopne
div
xor
or
int3
pop
pushf
icebp
adc
sbb
in
pop
xorb
or
inc
jne
pop
cmpsb
nop
hlt
fsubrp
cs
xchg
stos
out
inc
iret
imul
scas
adc
mov
fisttpl
stos
cltd
mov
in
cmp
mov
or
sahf
rorb
lods
rcll
jp
xor
xchg
scas
sbb
ds
xor
push
aaa
inc
andl
flds
xchg
add
and
cld
rcll
ss
and
lcall
dec
pushf
cmp
sbb
sbb
loopne
subl
jbe
adc
mov
or
dec
push
mov
jo
mov
xor
call
arpl
sbb
fcmove
ficoms
dec
movsl
xor
movsl
in
fwait
jb
push
cwtl
xchg
jns
pusha
aad
pop
adc
aam
in
pop
sub
cmp
jne
sbb
in
push
mov
xor
lods
mov
data16
inc
ret
dec
aas
xchg
cmpsl
sub
pop
mov
fcom
mov
dec
in
or
inc
mov
add
cmp
stos
pop
mov
enter
push
inc
dec
sub
ljmp
xor
ss
std
jnp
fistl
data16
and
fwait
adc
popf
sub
pop
gs
xor
jl
jmp
lds
aas
pushf
aad
mov
push
mov
jmp
fdivrs
cli
cmpb
cwtl
jne
xchg
sarb
dec
lret
dec
push
lods
pop
jmp
imul
mov
mov
adc
cli
pop
jecxz
adc
dec
adc
scas
loop
dec
aaa
jo
mov
pop
cld
xor
sarl
jmp
mov
daa
dec
mov
mov
aaa
or
test
out
push
inc
mov
arpl
xchg
inc
addl
test
xchg
arpl
ds
dec
adc
lcall
or
mov
sub
sbb
cmp
out
mov
dec
cmp
adc
jnp
int
and
pop
mov
cmp
inc
jo
cwtl
inc
mov
lea
test
es
dec
stos
inc
mov
out
push
xor
jmp
out
push
loop
lret
ds
inc
shrl
rolb
inc
outsl
jb
xlat
fdivs
cmp
inc
sub
orb
mov
lock
push
dec
sbb
subl
inc
orl
stos
movsl
push
xor
push
dec
xor
dec
jns
scas
inc
mov
daa
enter
jge
stos
pop
dec
xchg
mov
clc
stc
std
push
jle
outsb
adcb
and
jo
and
pushl
cli
add
sub
push
nop
xor
or
jae
clc
inc
inc
cltd
xor
xchg
dec
shl
pop
stos
mov
bts
mov
mov
das
adc
fldt
insl
push
pusha
mov
lods
loopne
test
or
lods
in
negl
add
and
xchg
adc
dec
hlt
fsubrs
pop
push
fcmovb
in
dec
cs
pop
ds
push
cmp
in
lods
xor
std
add
sbb
das
mov
xor
test
ret
and
pop
cmp
repz
pop
push
jecxz
dec
test
xchg
ret
pop
xchg
and
in
or
aas
adc
dec
and
pop
push
adc
pop
repnz
pop
stc
mov
and
das
imulb
sub
cmp
push
xor
insl
adcb
xchg
fldcw
pop
data16
jmp
mov
lea
les
mov
sub
insl
jl
sub
jmp
arpl
sbb
jne
pop
lock
mov
loop
lods
push
mov
cltd
cmpsb
out
mov
dec
cmp
pop
cmc
orb
mov
popf
add
std
mov
dec
les
idivl
or
adc
push
jae
inc
stos
mov
sub
mov
jne
push
stc
and
dec
mov
inc
mov
add
add
mov
mov
mov
imul
jbe
cmp
outsb
daa
icebp
push
jge
repz
cmpsb
sub
es
cld
mov
jo
or
imul
enter
sbbb
xchg
enter
cwtl
aas
adc
lock
fldl2t
data16
scas
push
outsl
aas
inc
sbbb
pop
fdivrl
mov
iret
add
mov
mov
int3
pop
and
and
out
pop
jo
shrb
cmp
pusha
icebp
mov
repnz
or
cmp
lret
mov
xchg
and
loopne
movsl
cmc
xchg
nop
mov
fwait
dec
scas
mov
push
pop
xor
imul
and
loopne
cmp
sub
mov
mov
sub
dec
cwtl
add
jbe
out
cmpsb
push
dec
test
jmp
js
xchg
and
and
fiaddl
mov
mov
and
popf
cld
mull
es
fildll
stos
mov
int3
dec
adc
cmp
mov
iret
mov
in
das
xor
or
mov
dec
outsl
repnz
mov
std
mov
dec
mov
jo
xor
push
pop
aas
lock
mov
and
fidivl
int
pop
push
or
mov
outsb
mov
xor
iret
movsb
roll
lar
dec
cmc
cpuid
mov
xor
jle
popf
cmp
jl
loope
sub
sarl
mov
or
popa
stc
fs
jno
xchg
dec
dec
call
and
mov
ja
jp
push
sahf
out
and
pop
repz
jbe
std
xor
xor
neg
decl
dec
xchg
push
stc
clc
dec
int
xchg
pop
mov
cmp
std
fldenv
shrl
sbb
push
popf
mov
push
adc
mov
clc
leave
aas
sahf
ds
cmpl
xor
adc
push
jnp
je
or
adc
cmpsb
lahf
dec
add
xchg
sbb
inc
sub
inc
aam
std
imul
inc
jb
stos
jbe
dec
iret
out
sahf
mov
repz
lods
or
jle
jmp
or
jo
jae
mov
scas
mov
mov
mov
fstpl
shll
pop
adc
mov
cmp
in
push
mov
in
ljmp
addr16
pushf
jp
in
pop
add
hlt
cmp
pop
outsb
nop
lahf
aad
enter
loopne
aas
bound
mov
stc
or
mov
sbb
pop
xor
rcll
jb
xchg
add
ds
jecxz
or
mov
fucomip
push
dec
test
mov
sub
xchg
loope
jmp
jo
daa
bound
inc
and
add
jmp
push
push
jb
sbb
das
mov
mov
jo
imul
stos
jb
clc
or
mov
imul
out
je
push
push
lidtl
pop
pushf
lcall
into
imul
fsubrs
fidivs
mov
xchg
out
and
std
aas
pop
lahf
jo
push
jg
jne
jecxz
xor
and
mov
cltd
pop
cmp
pop
dec
aam
jle
mov
or
scas
fnsave
cmp
lods
push
sub
leave
call
pop
das
aam
shl
lods
mov
mov
inc
inc
aad
pop
xlat
nop
fsubr
fcomp
jl
fcmovbe
data16
mov
inc
rcr
mov
aaa
xchg
les
repnz
pusha
icebp
xor
daa
scas
out
cli
xor
ja
add
loopne
test
iret
inc
stos
mov
pop
aas
popf
add
fsub
pop
orb
add
movsl
leave
ficompl
inc
es
es
in
mov
jno
imul
mov
mov
ja
mov
xchg
mov
mov
je
or
jge
cmp
jle
lcall
iret
adc
xchg
xor
testb
jb
push
dec
or
repz
aam
ja
clc
flds
test
pop
scas
into
int3
push
xor
daa
fcmove
add
mov
inc
imul
sub
jo
add
out
es
scas
nop
lcall
push
cmp
cmpsl
fiaddl
mov
cwtl
mov
je
and
adc
xor
in
in
bound
xchg
xchg
jnp
faddl
icebp
out
out
add
ret
add
lahf
adc
xchg
add
in
mov
mov
push
in
cmc
into
jmp
and
adc
hlt
and
inc
je
popa
arpl
pop
sub
scas
sub
mov
shl
inc
xchg
mov
push
add
mov
scas
jle
lret
stos
std
aam
cwtl
add
outsb
sbb
pop
sbb
push
pop
ret
mov
inc
ljmp
lret
cmp
fs
dec
mov
and
mov
push
push
xchg
sub
adc
nop
xor
mov
xchg
mov
fs
int
and
dec
jno
mov
mov
mov
jmp
mov
sti
jo
adc
in
sbb
incl
js
out
dec
movsl
lea
pusha
scas
xchg
dec
mov
rcl
ret
jae
mov
add
gs
into
and
xlat
pop
adc
push
inc
push
xor
daa
mov
dec
ror
add
ret
push
imul
inc
mov
psubsw
ds
and
push
add
mov
loopne
inc
cmp
push
mov
fnstenv
test
dec
out
push
push
in
pop
pusha
not
jno
cltd
inc
mov
and
xchg
mov
mov
jo
iret
xchg
xchg
int3
xchg
xor
hlt
push
push
in
mov
faddl
sbb
popf
jo
cli
sub
mov
xchg
into
sahf
xchg
fildl
int
dec
outsl
jecxz
test
in
xchg
inc
sbb
stos
aam
dec
and
ljmp
cmc
sbb
mov
pop
or
pop
xor
fisubrl
in
repz
mov
stos
sub
pop
pop
pop
mov
push
push
cli
scas
push
pop
push
xchg
insb
xlat
pop
xor
cs
les
cld
iret
adc
pop
xor
fwait
or
push
gs
inc
fcomp
push
testb
mov
mov
popa
cmc
xchg
mov
jmp
pop
and
cmpsb
xchg
mov
xor
shlb
fsubp
jle
shlb
ljmp
cmp
pushl
int
int
fsubrs
xchg
inc
repnz
fmull
push
dec
imul
cmpsb
lcall
and
cmp
les
xlat
mov
outsb
fisttps
pop
xor
aam
mov
xchg
addr16
insb
rcl
jo
insb
and
ret
cmp
add
ret
xor
pop
or
cltd
mov
outsb
sahf
xchg
fxch
test
pusha
lea
inc
icebp
enter
xor
jecxz
cld
mov
fwait
pop
stos
lahf
ja
xor
cltd
pop
ljmp
std
xchg
in
pop
movsl
mov
outsl
sub
push
leave
xor
xlat
icebp
fdivs
pop
jb
dec
leave
cmpsb
xchg
push
xor
aam
imul
jo
fs
jb
pop
loope
add
cmp
mov
xor
inc
nop
cmpl
mov
test
test
fidivrs
jne
aad
sbb
pop
sbb
out
mov
movsl
mov
push
sbb
xchg
sti
outsb
repnz
call
fmul
jo
ffree
pop
xor
mov
iret
aad
jns
cltd
cmpl
jae
mov
mov
mov
in
jnp
and
push
add
loopne
in
pop
sub
adc
lods
lahf
xor
test
lahf
cmp
ljmp
adc
insb
mov
mov
adc
push
mov
dec
outsl
mov
out
les
inc
orl
loope
mov
pop
fidivrl
xor
ficoms
and
mov
inc
leave
pop
push
jp
lds
fdivl
mov
or
fwait
call
scas
insl
push
cli
mov
sub
mov
fsub
and
push
add
mov
push
inc
pusha
add
sub
faddl
xor
es
xchg
les
jb
test
sub
into
mov
mov
pop
test
jnp
push
push
and
cmp
rorb
rclb
push
jg
dec
add
dec
popf
push
xor
test
mov
call
adc
pop
mov
mov
mov
fs
in
mov
ja
lret
mov
into
lds
lahf
fistpll
sbb
ja
add
iret
sbb
fmuls
or
mov
movsl
clc
lock
mov
decb
mov
inc
insb
cmpsb
add
enter
leave
pop
popa
call
cltd
jo
mov
lret
ds
push
xchg
test
jne
xchg
test
addr16
pop
lea
xchg
mov
mov
lahf
out
cmp
push
lret
inc
and
lahf
dec
dec
bound
inc
loope
insb
push
js
cmp
mov
mov
out
adc
test
cld
sahf
cltd
in
movsb
inc
mov
outsb
mov
jge
fnstenv
outsl
and
add
fwait
cmpsb
outsl
xor
cmp
out
outsb
std
js
xor
sbb
rcrb
xchg
fstl
mov
xchg
cmp
and
addr16
sarb
int
bsr
push
in
mov
add
add
aam
rcl
dec
jno
out
ds
adc
inc
sbb
xchg
movsl
push
push
mov
scas
test
dec
fldenv
or
sub
in
xor
mov
aas
push
mov
rclb
xor
data16
imul
sbb
mov
or
mov
cmpsb
add
insl
cmc
dec
mov
adc
inc
in
lea
cld
jne,pn
inc
or
mov
pop
fwait
fs
mov
inc
cmp
rcll
cmp
inc
mov
icebp
mov
je
push
mov
pop
and
mov
mov
mov
aaa
imul
inc
inc
xor
jle
pop
cld
sbb
daa
pop
jmp
pop
dec
shrl
ror
push
fstl
movsl
iret
aam
lods
data16
adc
push
jae
cmp
int3
loope
cltd
pop
outsl
jno
out
pop
ret
sub
stos
je
ret
cmp
push
inc
lods
aam
xor
mov
insb
sub
add
dec
push
sbb
cmp
jmp
sbb
inc
xchg
shrl
mov
sub
dec
in
mov
xchg
sub
cmpsb
mov
jp
add
mov
inc
add
pop
rorb
xor
movsb
das
sbb
mov
adc
adc
xchg
xor
xor
add
in
push
jae
test
pop
ljmp
fmuls
out
xchg
sbb
adc
inc
cmp
xor
pushf
push
js
dec
mov
shlb
xor
inc
pop
subb
cld
imul
jae
mov
sbb
fwait
mov
pushf
aaa
nop
sbb
test
pop
dec
mov
negl
cmc
fs
mov
cltd
aam
aas
xchg
sbb
xchg
cmp
mov
or
imul
mov
repz
arpl
pop
dec
push
jmp
data16
mov
push
xchg
jp
jg
xchg
pop
stc
ret
ss
and
sub
fdivrs
or
jecxz
or
inc
cmp
cmp
cmp
enter
movsl
loop
into
outsl
mov
jg
sbb
imulb
push
mov
push
cmp
pop
xor
inc
xor
daa
data16
sub
inc
out
xor
in
mov
mov
test
data16
sub
repnz
ljmp
notl
or
mov
pop
mov
fisttpll
arpl
cwtl
cmpsb
ret
jnp
imul
sbb
jb
fprem1
push
cmp
add
out
inc
in
testb
orw
stc
in
stc
insb
stos
rcrl
stc
les
and
rol
aas
inc
lret
and
insl
ds
mov
jno
push
mov
mov
dec
call
xor
in
adcl
sbb
mov
push
aad
jnp
sub
xchg
adc
in
mov
cmp
jb
mov
test
loopne
xchg
jmp
pop
mov
and
movsb
or
int
pop
lret
pop
mov
jbe
scas
sub
stos
ja
cmp
dec
fs
push
stos
sub
mov
jbe
pop
lods
xchg
xor
les
add
jae
dec
push
inc
xchg
push
push
adc
shll
push
fiadds
inc
push
sbb
loop
xor
mov
repz
mov
push
pop
sub
pop
jmp
sub
in
aas
push
mov
sti
cmc
inc
outsl
add
std
lods
rol
push
aas
lock
sub
addr16
jno
push
xchg
pop
jo
jns
ret
inc
cmp
xchg
xchg
sti
loopne,pn
dec
icebp
loopne
sub
mov
jno
js
mov
or
out
mov
lds
mov
clc
and
jecxz
adc
mov
rolb
arpl
in
add
jp
mov
leave
les
mov
mov
sub
xor
cld
femms
hlt
movsb
sub
or
add
cli
jb
pop
sub
andl
imulb
mov
or
pop
push
stos
pop
stc
pop
push
ret
lret
frstor
or
imul
sub
jae
or
into
adc
cmpsb
cmc
and
in
rorb
repnz
mov
mov
iret
push
stc
add
cs
std
ret
sbb
mov
mov
inc
mov
jno
sub
nop
adc
mov
sbb
sbb
jne
xlat
mov
sub
push
mov
sbb
scas
adc
lret
push
add
incl
data16
dec
dec
test
push
outsl
cmpb
leave
pop
mov
xor
dec
lahf
test
xor
adc
adc
mov
pop
and
and
mov
cmp
mov
xchg
fldenv
pop
stos
push
icebp
out
jecxz
call
xchg
dec
inc
lret
lret
pop
mov
repnz
stc
vshufi64x2
lret
scas
jp
push
mov
xchg
test
xor
into
shlb
jnp
outsl
lahf
mov
mov
adc
imul
repnz
mov
xor
cld
xor
pop
setp
aad
shrl
and
scas
fcoms
shrb
add
adc
out
sbb
lret
ljmp
shlb
jo
lea
mov
inc
mov
test
addr16
popa
jo
ljmp
outsb
mov
aad
inc
pop
and
cld
pop
mov
in
sub
and
mov
sub
js
or
fisubrl
fs
inc
mov
mov
sub
inc
mov
push
mov
scas
fnstsw
movsb
cmpsb
in
dec
ss
add
add
scas
out
jns
adc
stos
jne
std
sub
int3
lods
repz
or
adc
mov
fsubl
out
outsb
aaa
xor
mov
scas
filds
lret
dec
sub
dec
fcmovu
test
test
mov
ljmp
out
sub
xor
xchg
sub
sub
je
mov
jne
data16
ret
pop
test
pushf
hlt
jnp
cltd
dec
lods
ss
mov
inc
sbb
scas
scas
ret
mov
fisttpll
cmp
lods
insl
addl
repz
adc
inc
iret
ss
xchg
pop
adc
test
shll
jnp
rclb
addl
nop
js
jmp
mov
fs
push
and
out
addr16
loop
loopne
adc
mov
scas
out
sti
gs
es
mov
loopne
sub
arpl
adcl
mov
mov
pop
or
jbe
push
sub
mov
xchg
aas
mov
out
test
mov
fstpl
mov
jmp
sbb
icebp
jbe
push
mov
pushf
fidivrl
pop
popf
or
dec
shll
and
sub
lcall
test
outsb
stos
push
fwait
pop
sbb
loopne
or
shll
xlat
xchg
out
cmpsb
push
sbb
std
or
and
pusha
roll
push
mov
xchg
and
jg
xchg
mov
xor
cmp
jle
xchg
fs
frstor
aas
mov
popa
lret
test
sub
orl
imul
xchg
ret
lods
sbb
or
jo
xor
incl
or
sbb
repnz
loopne
cmpsb
mov
xor
sti
pop
std
push
jo
adc
out
dec
jg
jle
sbb
mov
jno
test
cli
mov
pop
out
in
fcmovu
pop
or
push
lahf
test
mov
pop
es
xchg
mov
daa
cld
mov
xchg
add
mov
mov
leave
lds
sub
sbb
out
bswap
or
dec
sahf
push
add
cmp
or
xor
out
jecxz
sub
adc
add
popf
movsl
mov
jno
daa
in
cmp
divb
stos
push
shll
xor
orl
pop
in
inc
rcll
rorl
and
mov
dec
dec
daa
sub
test
loope
negb
push
cmp
cmp
sub
notb
out
cmpsb
and
addr16
mov
pop
sti
cs
inc
or
mov
pusha
out
hlt
clc
xchg
jecxz
inc
imul
inc
mov
push
inc
repz
ficompl
mov
xchg
add
jle
pop
sub
nop
enter
inc
dec
cwtl
mov
inc
add
and
test
loope
gs
inc
adc
pushw
stos
std
lods
sub
sbb
imulb
dec
sbb
mov
fidivl
pushf
shll
sar
lods
sub
sbb
hlt
dec
jle
jecxz
add
cld
and
es
cmp
ds
rolb
ret
mov
pushf
into
movsb
xor
arpl
sub
jmp
xor
sub
cmp
mov
nop
fucomip
aas
adc
xchg
inc
push
lods
orl
iret
cltd
sbbb
push
mov
dec
loopne
fs
mul
xor
dec
sub
jb
adc
fwait
movsb
mov
push
xor
stc
clc
lret
icebp
popa
adc
aad
push
rcrl
sti
enter
fldt
pop
mov
fs
cld
jge
je
sub
inc
testb
jno
push
out
lret
cmp
mov
cmp
out
mov
fs
jnp
mov
jne
cmpsl
pop
adc
inc
cs
cmpsl
xchg
dec
pop
and
lcall
xor
pop
hlt
jmp
sbb
jp
jp
push
ss
dec
stc
sbb
dec
push
cs
popf
insl
cmp
push
lret
icebp
fcoms
stos
cmpsl
lret
xchg
sbb
fst
xchg
sbb
inc
dec
sub
lds
mov
scas
lret
and
mov
xor
icebp
mov
out
outsl
push
add
jg
mov
rcl
repnz
shrb
call
cmp
lods
or
std
and
mov
inc
pop
mov
aad
push
lea
ja
xchg
mov
cs
dec
mov
mov
adc
cmp
xchg
inc
sbb
mov
in
jmp
cmp
fwait
cmp
mov
adc
mov
dec
mov
ds
and
xchg
cs
dec
cmp
fbstp
jecxz
add
jb
inc
mov
out
movq
inc
out
mov
xchg
loopne
mov
aam
insb
add
push
cmpsb
sub
lea
test
push
lods
ficoms
inc
ljmp
push
ds
jg
xchg
outsb
cmp
stc
ret
or
xlat
aam
ret
and
jmp
shlb
test
sub
sbb
sbb
cmp
sbb
sub
mov
popa
sub
stos
call
subb
mov
popf
rorb
and
xor
pop
or
aaa
xlat
sbb
mov
push
push
xchg
inc
ret
adc
das
ret
pop
jnp
divb
mov
inc
xor
into
iret
push
dec
into
movsl
and
lcall
mov
sub
daa
ret
add
or
jbe
sbb
ficompl
test
inc
and
stos
out
imul
dec
push
adc
mov
mov
sbbl
iret
sbb
sbb
and
or
cmpsb
sub
imul
xchg
pop
adc
mov
pop
inc
ss
push
xchg
jbe
jl
adc
push
sbb
jp
push
mov
aas
sub
stos
out
mov
jecxz
jns
jp
sub
fiaddl
mov
mov
xchg
xor
jns
fwait
mov
fisttps
das
xchg
push
mov
scas
sbb
fs
mov
cli
mov
mov
inc
js
jno
shl
insb
inc
xor
movsb
mov
pop
add
push
xchg
sbb
fists
fnstcw
data16
daa
lds
arpl
outsl
outsl
fisubs
mov
mov
sbb
jns
lret
inc
int
and
push
aaa
xchg
scas
mulb
add
adc
jmp
test
aad
jmp
mov
test
ret
and
jmp
xor
push
jbe
xor
bswap
dec
cmp
shl
idivb
fs
ficoml
mov
cltd
cli
popf
repnz
rol
mov
ja
dec
in
push
jno
loop
leave
sbb
add
mov
cmpsl
ljmp
cld
data16
adc
and
divl
xor
pushf
xor
das
enter
pop
icebp
mov
std
movsl
pop
xchg
lret
sbb
mov
inc
dec
ljmp
fcoms
cld
outsb
es
xor
add
cmp
mov
mov
hlt
xchg
or
arpl
loop
push
decl
cmp
jp
outsl
out
or
out
mulb
mov
sarl
inc
inc
sbb
fwait
jb
outsl
cs
mov
adc
dec
jbe
test
push
pop
sahf
mov
pushl
push
pop
xchg
mov
jno
sub
mov
rcr
jne
sbb
dec
mov
loop
mov
and
jo
cmp
pushf
lcall
lods
leave
je
sub
repz
mov
sub
mov
ret
hlt
mov
xor
aam
adc
adc
mov
xor
das
inc
call
jg
int
pusha
pop
xor
add
xor
sti
inc
ror
sbb
ret
mov
imul
jne
jns
sub
rcrl
mov
notb
xor
mov
xchg
or
push
push
stos
movsl
cmp
jne
push
sti
cmp
cs
fists
dec
jbe
cwtl
test
and
dec
cmp
insl
fisttps
push
pop
push
xor
sbb
aas
rol
bound
sub
fmul
incl
lods
clc
in
lcall
adc
fstpt
js
and
jne
mov
pushf
sub
xchg
pushf
jle
mov
loop
xchg
sbb
outsl
fiadds
sbb
sbb
cltd
dec
push
fdivrs
scas
mov
mov
rol
jne
inc
roll
adc
loop
in
imul
pop
mov
hlt
mov
push
cmp
xchg
test
mov
imul
mov
aam
outsb
pop
inc
inc
jne
in
aam
insb
iret
inc
sbb
test
adc
in
sub
movsl
mov
sbb
adc
aad
add
adc
cld
add
bound
add
xchg
aaa
es
sub
jns
push
cs
leave
dec
mov
mov
arpl
testb
lock
jmp
arpl
pop
mov
push
jle
lahf
filds
jp
mov
xchg
adc
pop
sbb
lods
call
clc
xchg
fcom
fildl
sbb
call
dec
or
scas
xor
lea
mov
mov
mov
xor
push
ud0
out
aam
rcrb
out
movsb
loope
andb
add
into
call
pushf
orb
cmpb
scas
sbb
jecxz
enter
int
addr16
jmp
repz
jae
repnz
nop
stos
das
xchg
push
jle
ret
ffreep
sub
push
push
sbb
out
inc
mov
sbb
imul
inc
lahf
xchg
lret
xchg
test
add
xor
mov
popf
popa
out
dec
js
mov
cmp
gs
gs
cmpsb
xlat
in
and
pop
lret
mov
je
aas
pop
int
mov
pop
inc
fisubrl
out
pop
and
jbe
stos
push
loopne
inc
dec
cltd
cmpsl
stc
jmp
push
mov
clc
mov
jl
fs
mov
push
cltd
dec
sbbl
out
jae
xchg
stc
out
dec
pushf
cwtl
pop
popa
inc
movsl
popf
xorl
xchg
ficompl
rdtsc
icebp
repnz
xor
sbb
leave
xor
and
add
cs
mov
add
xchg
shrl
adc
dec
mov
cs
xchg
and
das
inc
mov
xlat
negb
dec
fs
dec
aam
clc
test
jbe
mov
and
push
and
xor
xchg
fmull
mov
arpl
adc
cmp
mov
iret
orb
and
add
mov
cwtl
inc
rcl
insb
gs
lcall
adc
add
loopne
push
aad
ret
out
jle
es
sahf
inc
scas
xlat
cwtl
add
adc
cmp
mov
pop
sahf
cli
into
stos
cmp
pop
and
arpl
pusha
push
les
pop
stos
std
mov
test
xchg
cmp
fwait
testl
jle
xorb
daa
test
mov
idivb
out
sub
repz
icebp
pushf
sbbl
movsb
jg
jp
out
add
sahf
lea
xchg
xor
test
fisubrl
rclb
mov
mov
jno
push
js
or
fcmovbe
js
into
aam
les
dec
nop
xchg
pop
icebp
push
inc
cltd
inc
stos
rcl
hlt
cmc
sub
pop
sbb
subl
in
inc
shl
xchg
or
add
push
pushf
push
or
mov
xchg
scas
stos
movsb
mov
pop
adc
sbb
idivb
loop
mov
xchg
or
mov
arpl
dec
pushw
push
xor
nop
scas
in
mov
ja
add
xchg
lods
jecxz
xor
sbb
adc
loop
and
std
sarl
in
cli
mov
and
add
push
push
xor
xchg
out
or
aaa
in
sbb
cmpsl
fmuls
negb
addb
xchg
dec
pop
subb
add
mov
cld
push
xor
pop
dec
cmpsb
pop
and
repnz
dec
ret
sub
clc
in
cmp
cmp
inc
mov
and
js
and
adc
pop
je
push
xchg
nop
adc
xchg
in
mov
dec
push
outsl
xlat
fstpt
repz
jmp
in
sti
push
lea
cmp
loope
pop
lcall
popl
dec
mov
lahf
lret
test
cld
lea
pop
sbb
fdivs
cmpsb
mov
mov
add
mov
cmp
andl
and
sbb
aad
pushf
add
repz
rorl
and
mov
aas
mov
xchg
mov
cmp
inc
sbb
dec
lahf
test
test
cmp
add
imul
xor
inc
and
scas
je
lret
int
mov
and
push
call
jne
popf
jmp
les
movsl
int
jo
jo
scas
shrl
fs
out
stos
or
push
divb
xor
add
fdiv
insb
mov
dec
aas
push
and
loopne
push
cmp
jge
notb
hlt
add
pop
addb
outsb
mov
mov
das
aad
sbb
xchg
sbb
and
jp
pop
fdivl
xchg
fdivl
mov
push
cmp
or
shrb
icebp
xchg
outsb
push
stos
xchg
xchg
cmp
data16
in
xchg
out
sti
roll
cld
ret
in
fwait
inc
cs
ja
xchg
shl
in
repnz
pop
sub
aaa
adc
add
jg
loopne
xchg
or
or
jge
fdivs
sbb
shlb
and
push
mov
or
sub
xorb
das
ljmp
cmpsb
imul
push
cld
dec
jae
jnp
cmp
sbb
dec
mov
jmp
aaa
push
out
fs
cmc
sbb
pop
adc
clc
arpl
xchg
dec
scas
ljmp
jp
pop
lcall
push
imul
ds
lock
aaa
mov
adc
or
ds
or
mov
ret
or
repnz
pop
test
test
mov
js
mov
out
sbb
enter
dec
clc
adc
dec
or
jo
repz
push
imul
pop
sbb
sbb
adc
cld
xor
push
xchg
dec
and
sub
int3
jmp
push
cmp
push
mov
test
adc
sbb
dec
xchg
loopne
test
pop
mov
hlt
aaa
jo
out
adc
in
inc
mov
push
out
movsb
pushf
jnp
int
pop
pop
mov
mov
fbld
adc
lret
mov
adc
mov
cmc
mov
jle
lea
iret
adcb
push
xchg
xchg
mov
shr
fiaddl
xchg
and
repnz
mov
packsswb
push
fucomp
orl
fnstcw
push
xor
xchg
mov
jb
dec
jge
loope
addr16
pop
movsb
add
dec
xor
and
push
cmp
aas
sahf
daa
loopw
pop
mov
xchg
cmpb
jmp
movsl
jecxz
sub
adc
fildl
ret
mov
sbb
in
sub
into
sub
enter
sub
or
cltd
add
imul
add
mov
xor
mov
lock
sub
mov
inc
adc
hlt
or
mov
leave
outsb
mov
and
in
pushf
sbb
xchg
push
mov
jle
sub
add
cwtl
add
std
sub
inc
push
dec
jle
rorl
icebp
ficoms
xor
jmp
xor
insl
xchg
cmpsl
mov
mov
pop
gs
xor
shr
cld
arpl
jo
push
stc
ret
inc
jo
and
insl
fldenv
and
data16
push
pop
roll
movsb
mov
inc
mov
sbb
fwait
in
out
jle
pop
loope
pop
dec
adc
jb
push
inc
cmc
adc
pop
lods
inc
out
jl
sub
out
clc
mov
xchg
call
sti
test
leave
jnp
ss
add
outsb
pop
lea
xchg
xchg
andl
into
scas
test
idivb
xchg
dec
les
popf
loope
test
outsl
orb
fisttpl
int
sbb
dec
dec
pop
xor
add
lret
sub
sub
jns
fxch
jg
mov
lods
lcall
shll
sbb
cmpsb
jecxz
jb
and
stos
movsb
sub
in
add
je
sahf
pop
push
stc
inc
sahf
mull
nop
sub
out
icebp
mov
cltd
inc
insl
adc
xchg
or
or
nop
dec
jb
push
adc
cmp
pusha
jnp
mov
loop
sbb
push
test
and
and
or
cmp
scas
or
repnz
cmpsl
lret
fwait
sbb
lret
sub
inc
rclb
xor
repnz
xor
cwtl
mov
lods
fdiv
test
sbb
cmp
jae
jno
mov
popf
jb
pushf
movsl
add
aas
mov
push
cmp
pushf
in
mov
or
add
xchg
pop
aas
pop
imul
add
fisubs
aam
mov
iret
lock
dec
sbb
je
imul
dec
push
or
add
adc
dec
repz
mov
dec
sub
popf
mov
mov
outsl
push
sahf
jmp
enter
push
pop
adc
mov
mov
jae
pop
xchg
jl
pop
lods
xchg
sbb
int3
push
icebp
sbb
pop
fdivs
imul
mov
daa
orl
arpl
push
xor
jl
aam
push
pop
push
add
lock
sbb
jmp
pop
add
addl
data16
insl
pop
addr16
push
mov
inc
dec
inc
push
mov
ret
add
mov
popa
cmp
mov
into
cmc
fldl
mov
scas
cwtl
out
xorl
cwtl
mov
xchg
clc
imul
xlat
scas
pusha
scas
mov
stos
outsl
adc
inc
test
addl
mov
ds
bound
cmp
loope
insl
dec
sti
stos
inc
jnp
inc
inc
inc
lret
das
adc
sub
cmp
dec
adc
data16
and
in
inc
pushw
sarl
adc
or
cmc
faddl
cs
jmp
sbb
mov
jae
jbe
pop
pop
cmp
out
pop
fidivrs
jo
sub
and
outsb
call
mov
negb
xchg
xlat
popa
pusha
adc
cmp
cld
xor
push
pushf
ljmp
dec
sub
sub
sbb
out
xchg
outsb
dec
add
das
jl
mov
ret
mov
adcl
or
jge
xchg
call
mov
pop
imul
cmp
and
xor
push
cmp
push
xor
lea
and
adc
push
ja
outsb
cmp
incb
cld
jnp
imul
in
push
mov
in
in
fdivrl
rorb
add
aas
mov
adc
iret
ret
mov
jp
add
rorb
loopne
loope
rcl
xlat
call
ds
sub
mov
into
xor
stos
mov
sbb
mov
cld
cltd
cs
mov
cmc
test
xchg
popa
jbe
or
setle
mov
repz
xchg
dec
ret
rcrb
prefetch
or
cwtl
scas
mov
push
push
or
lret
fldenv
add
jmp
fnsetpm(287
sahf
cltd
loop
mov
sbb
cmp
xchg
pop
push
scas
push
xor
cwtl
push
pusha
insb
xor
ljmp
fistpl
xor
int3
cmovo
outsb
push
clc
adc
adc
inc
jno
mov
mov
sub
js
lret
ss
fldt
out
mov
arpl
mov
sub
inc
pop
stos
vandps
repz
jl
add
add
sub
subl
cmp
lds
sbb
shrl
scas
pop
hlt
rcll
cld
int
divl
cmp
jp
mov
inc
jb
outsl
shr
sbb
pop
std
aad
mov
sub
push
lds
out
push
test
aas
sbb
sbb
arpl
mov
addl
in
push
jae
fidivrl
and
sbb
loope
in
out
mov
jmp
mov
sub
idivb
inc
sbb
data16
int3
adc
mov
jmp
orb
cmp
fisttps
mov
scas
bound
les
sub
and
test
shl
lods
adc
ss
jle
and
sub
insl
jmp
adc
nop
out
mov
mov
or
jae
lods
pop
cld
mov
into
cmp
add
insb
xchg
lcall
adc
dec
jle
xchg
divb
sbb
jne
ja
rcrb
sub
push
dec
insb
popl
stc
or
clc
mov
add
lock
and
popf
mov
xchg
mov
sbb
rcrl
test
push
add
incb
out
sbb
hlt
adc
inc
push
adc
cmp
or
data16
sti
in
ret
mov
or
sbb
into
xor
rcl
les
int3
in
mov
mov
movsl
inc
xor
ror
nop
leave
xchg
mov
andl
stc
test
es
jno
imul
inc
fsub
cwtl
daa
aad
das
std
mov
dec
dec
pop
dec
sahf
sub
jp
jae
icebp
adc
fmulp
inc
lods
sub
dec
xchg
inc
cmc
jle
mov
ficompl
pop
adc
stc
mov
ret
iret
loop
popf
pop
dec
inc
inc
lahf
outsb
sbb
xchg
xor
pop
or
imul
inc
shl
pop
cwtl
repnz
adc
addr16
add
call
pop
adc
movsb
icebp
adc
cmp
jmp
scas
mov
mov
cmp
push
mov
jno
lds
repz
cs
mov
ret
bound
out
outsl
sub
mov
iret
mov
mov
sub
push
hlt
sub
mov
ja
fwait
loop
cmp
push
addr16
rcr
mov
testb
outsl
adc
int3
mov
xchg
xchg
pop
jmp
or
gs
pop
and
xchg
pop
fidivrs
hlt
cmp
sub
in
jg
lea
inc
or
or
out
mov
add
and
xchg
mov
and
lret
push
push
xchg
mov
roll
jno
cmp
adc
not
fdivrl
and
sbb
das
popf
ret
loopne
jnp
jne
daa
rcl
test
shrl
and
popa
mov
mov
cmpsb
sub
add
mov
sbb
shlb
call
pop
jnp
pop
jle
adc
inc
xorb
stc
testl
jmp
mov
call
lret
stos
fstps
dec
xchg
fstp
pop
xchg
pop
push
outsl
outsl
outsl
mov
inc
inc
ja
outsb
push
and
mov
pop
push
add
sub
mov
xchg
add
jl
outsl
js
mov
or
incb
je
imul
call
mov
mov
ret
inc
popa
add
or
outsb
lods
push
and
stc
sbb
sbb
add
mov
in
dec
and
addr16
xchg
adc
jo
and
mov
aam
mov
popf
ja
rcr
push
push
mov
pop
push
stos
test
cmc
out
test
sub
xchg
out
outsb
in
dec
push
stos
or
pop
inc
or
mov
mov
sti
and
push
loop
or
fs
mov
cmp
xor
ret
movsl
daa
fidivs
insb
or
push
adc
lods
dec
pusha
push
dec
jns
jge
add
mov
fidivrs
xchg
test
pop
pop
xlat
lea
sub
dec
lcall
sub
push
hlt
adc
in
adc
mov
lret
iret
mov
xlat
mov
push
xor
jo
in
xchg
and
ds
rcrb
xlat
mov
push
sti
stc
xor
or
xchg
out
mov
jne
xchg
cs
inc
mov
lret
mov
jmp
push
jge
scas
fdivl
push
fadd
xor
jge
add
pop
iret
rcr
inc
mov
incb
outsb
jns
fistps
lcall
mov
mov
xchg
or
push
shrl
fs
cmpsl
pop
aas
les
add
sarl
out
pop
mov
inc
adc
mov
in
sub
jae
jge
ffreep
int3
aad
mov
xchg
xor
adc
or
xchg
sti
stc
std
icebp
lcall
sahf
js
adc
fwait
cltd
shrb
call
je
loope
inc
inc
in
inc
jg
mov
sub
repz
cwtl
pop
repz
mov
std
push
sub
lock
mov
out
mov
push
imul
nop
ja
add
adc
lret
pop
ljmp
lods
sub
sub
and
inc
in
jbe
inc
mov
pop
sti
js
sbb
pop
fnstcw
mov
and
stos
cmp
xor
rcrl
bound
jl
adc
je
out
mov
jecxz
jne
mov
movsb
jo
and
push
sub
lea
scas
shll
rorb
cmp
fcompl
push
push
pushf
popa
loop
call
adc
adc
dec
arpl
mov
imul
leave
nop
jns
or
sbb
cltd
sarb
cmp
test
inc
xchg
mov
decb
enter
les
addb
xlat
test
pop
xor
rcrb
jmp
push
iret
xchg
mov
push
shr
cmc
cmovne
aas
in
lock
xchg
popf
xlat
rorl
xchg
pop
pop
pop
outsb
sbb
dec
jecxz
jge
xchg
mov
mov
dec
lret
ret
hlt
jg
push
inc
test
fistpl
xor
adc
lea
pusha
std
cmp
fdivrl
mov
cltd
lret
mov
pop
aaa
ds
js
ret
add
es
loopne
cld
sbbl
shr
sub
shrl
or
enter
movsb
push
int3
aas
sub
std
subl
dec
ret
or
adc
sbb
adc
mov
dec
sbb
jecxz
mov
lds
repz
dec
in
nop
roll
add
imul
mov
leave
outsl
fwait
iret
mov
int
cmc
mov
jge
aam
xorb
add
lahf
ret
xor
xchg
sbb
mov
out
mov
dec
popf
xlat
lods
and
xlat
lods
xchg
rcll
repz
ds
inc
inc
sbb
add
lcall
in
cld
enter
out
insl
iret
inc
add
scas
and
enter
leave
jle
xchg
loope
mov
outsl
mov
mov
push
in
rorb
repz
or
add
mov
insl
and
and
dec
addr16
adc
fnsave
mov
dec
ret
mov
gs
jno
notl
into
mov
mov
arpl
es
cmp
clc
and
out
out
insb
mov
jle
pop
daa
jo
js
push
and
je
push
popf
pop
loop
aad
rclb
push
cmpb
adc
xchg
repz
pop
mov
ja
imul
subb
jp
adc
popf
lret
add
inc
pushf
push
jmp
jg
sub
cs
add
aam
xor
inc
sub
jge
popl
inc
adc
mov
imul
jmp
xor
adcb
fnstenv
mov
fcmovbe
ja
cmp
mov
sbb
dec
mov
jle
cmpsb
shll
std
enter
sbb
cmp
test
and
mov
jno
cs
insl
adc
jo
mov
cmp
roll
dec
loopne
and
jle
mov
pusha
mov
rolb
mov
push
daa
lea
dec
mov
dec
pop
jle
in
shlb
jbe
in
xchg
pop
outsb
loop
xor
inc
mov
jg
cmp
cmp
mov
push
mov
jge
push
mov
repnz
ss
das
jb
cmp
push
adc
sub
xor
insb
mov
scas
add
lds
cmpsb
push
dec
mov
nop
sbb
je
int3
inc
xchg
ret
ss
mov
out
stc
push
sub
inc
pushf
scas
inc
divb
lahf
push
sub
stos
icebp
and
push
dec
xchg
rcrl
sub
out
push
or
or
cmp
pushf
leave
sbb
mov
add
add
decb
xor
ds
in
push
jne
test
aam
mov
adc
icebp
loopne
negl
mov
mov
jmp
or
adc
addr16
ret
adc
adc
adc
ret
cld
sub
addb
jne
scas
pop
int3
pop
cmpsl
mov
dec
inc
sbb
out
ret
jecxz
rolb
insl
push
enter
in
jg
shl
dec
jb
cmp
rcrl
icebp
push
pop
sbbb
enter
aas
mov
xchg
dec
dec
sub
js
outsl
jmp
jmp
sahf
sub
inc
cmp
mov
and
mov
mov
ds
or
push
cli
mov
push
setb
mov
inc
xchg
or
cmp
mov
xlat
out
lea
cmpsb
cmp
jp
lods
jmp
cmp
xchg
or
cmp
sbb
fsubrl
add
and
xchg
push
cltd
mov
out
mov
cli
fwait
jp
out
out
cmp
adc
push
jnp
or
int3
xor
lret
outsb
push
jne
sub
in
and
jp
fwait
repz
or
jecxz
lcall
fldenv
cmp
loop
cmpsl
fmul
in
cwtl
mov
jg
mov
loope
filds
aad
aad
pop
decl
cmp
ljmp
ja
test
popa
scas
sbb
stos
adc
jp
test
orl
cmpsl
fwait
dec
in
push
scas
push
repnz
push
pop
mov
pop
ret
icebp
push
pop
iret
pop
mov
cmc
addb
lods
jmp
arpl
rcll
mov
push
movsb
test
adc
push
or
jnp
and
add
cwtl
shrl
out
xorb
mov
pop
stc
dec
mov
clc
bnd
fimuls
scas
in
dec
xchg
xchg
jle
push
cwtl
scas
mov
lret
jmp
pop
cmp
inc
pop
jmp
dec
loopne
mov
iret
push
sub
mov
mov
movl
mov
sbb
xchg
rcll
xchg
adc
pusha
sbbl
jecxz
fistl
loope
cld
imul
jmp
dec
push
mov
cmc
fistpll
shrb
dec
inc
jb
inc
xchg
push
cmpl
pop
paddsb
xlat
mov
out
andb
imul
pop
push
or
test
aad
clc
sbb
repnz
jns
addr16
scas
fdiv
test
mov
xor
push
push
cltd
lea
sub
and
adc
not
icebp
ret
rcr
xor
add
insb
push
dec
push
andl
dec
fsubl
imul
stos
imul
mov
lret
pop
and
sbb
mov
lds
ja
lock
mov
and
out
jo
andb
pop
pushf
leave
in
lds
rcll
stos
push
or
jnp
xorb
xor
or
or
jecxz
sahf
add
xchg
into
jns
jle
out
int
iret
sbb
push
sbb
mov
mov
out
in
sbb
xchg
or
push
mov
repnz
inc
les
fnstcw
sbb
icebp
cmp
jmp
and
push
stc
push
adc
loopne
idiv
xchg
in
hlt
push
mov
cmpsl
frstor
mov
xor
lcall
fmull
sbb
mov
lock
push
sbb
out
push
imul
lahf
fdivrl
jle
iret
push
movsb
xchg
mov
xchg
fimuls
stos
movhlps
pop
lcall
in
test
mov
out
dec
scas
test
sbb
xchg
sub
or
add
add
jmp
fadd
call
ja
shlb
push
push
mov
cmp
faddl
clc
pop
cltd
mov
icebp
or
fs
adc
xchg
mov
push
adc
pop
mov
bound
int
jae
rcr
sbb
int
inc
shl
mov
push
mov
divb
mov
fs
sub
xor
push
rdtsc
and
add
cld
inc
mov
fcoms
out
mul
or
in
cltd
or
cmp
xor
in
add
out
jecxz
push
sbb
sbb
dec
punpckldq
inc
and
shlb
hlt
xor
xchg
push
mov
repnz
scas
lret
mov
jge
lahf
jg
pop
test
aaa
call
push
push
into
or
mov
mov
cmp
inc
lahf
cmp
insl
jb
scas
xor
mov
xor
xor
xor
cmp
pop
sbbl
mov
repnz
pop
sbb
inc
push
popa
aad
adc
add
and
push
imul
pop
loope
aas
cmpl
lahf
adc
sbb
cmp
cmp
shll
mov
outsb
xchg
xor
loop
and
adc
jecxz
ds
adc
push
push
jl
mov
in
fdivrl
loopne
jle
aad
add
iret
mov
flds
adc
incl
cs
xor
pop
xchg
popf
push
sbb
repz
movsb
pop
or
mov
js
mov
outsb
rcrl
in
xchg
roll
fstl
in
sahf
je
cmp
aam
scas
sarb
inc
and
push
andb
xchg
xchg
sub
push
xchg
jl
jno
lods
int3
push
cmp
jae
push
jmp
ret
inc
cmp
or
mov
push
mov
xchg
jne
sahf
inc
xor
cmpsl
inc
fnsave
lret
dec
jl
pop
or
push
pop
ficoms
dec
and
out
xor
in
push
cmpsl
les
dec
lret
and
int
in
push
aaa
push
cmp
cs
loopne
mov
mov
add
repnz
inc
cmp
data16
movsl
xchg
outsb
sti
inc
add
pop
push
sbb
popa
push
imul
lret
and
mov
push
ss
add
mov
arpl
shrb
cmp
pusha
sub
inc
jg
mov
fwait
stos
jle
pop
sbb
cmpsb
loop
jbe
popa
xchg
loopne
lds
dec
test
mov
cltd
xor
jo
pushf
adc
shr
outsb
and
adc
pop
ds
cmpb
mov
je
mov
data16
nop
push
and
xchg
fcomps
les
pop
sub
outsl
repz
pop
mov
xor
jae
and
push
lahf
pop
push
bound
lds
je
imul
sbb
mov
icebp
mov
fimull
insb
add
push
sahf
loope
push
jne
sub
outsl
sub
mov
jne
cltd
cltd
ret
pop
add
jae
sbb
stos
jp
xchg
jnp
pop
jbe
mov
mov
aad
add
cmp
mov
popa
jecxz
into
imul
and
ljmp
mov
adc
roll
lods
movsb
ss
ret
fidivrs
imul
adc
cmpsl
adc
bnd
nop
fcomip
decb
jg
pcmpgtd
xlat
or
mov
cmp
int3
and
loope
ret
loopne
push
add
jl
js
out
cmpb
int3
shr
in
sti
or
xor
xchg
call
popa
pop
loopne
xor
mov
cli
xchg
cmp
loope
repnz
add
pushl
incb
cld
mov
mov
in
mov
stos
popa
faddl
xchg
ror
sub
sahf
int
xchg
jae
mov
imul
push
mov
mov
dec
inc
lret
mov
sbb
insl
leave
pop
mov
inc
test
sub
dec
rorl
pop
xchg
mov
xor
lahf
fidivrs
inc
mov
fwait
cmpsb
ret
shll
sub
repz
testl
cmp
adc
cmp
lock
xchg
and
in
std
out
sti
mov
lock
dec
mov
mov
sar
mov
gs
fstl
cli
sub
xor
pusha
ja
push
cmc
jae
mov
shrb
stos
dec
aas
and
adc
xor
cmp
jmp
scas
add
mov
mov
mov
and
cmp
lds
xor
and
lea
loope
cltd
addr16
fbld
push
aam
fcoml
scas
mov
int
add
push
in
xlat
sbb
adc
or
pop
call
fwait
subl
test
mov
andb
xchg
add
int3
int
jge
ljmp
cmp
iret
and
mov
popa
dec
xor
cmp
movsl
ja
sub
sub
insl
adc
push
in
mov
rol
cmpsb
jb
add
cmp
sub
or
adc
xchg
testb
sub
in
add
mov
mov
mov
lcall
adc
ret
dec
dec
or
xorb
sub
and
push
cmp
mov
xlat
jmp
pop
movsb
pop
js
call
sbb
sub
push
lea
push
pop
adc
push
mov
fs
mov
pop
dec
pop
mov
lea
cli
mov
in
jno
mov
not
adc
sbb
js
cld
in
int3
scas
out
mov
in
adc
cs
dec
inc
iret
dec
in
outsb
inc
xchg
inc
jecxz
pushf
scas
aas
pop
insb
xlat
inc
or
xor
out
pop
popf
rcr
and
ret
push
mov
data16
mov
add
call
inc
bound
jge
adc
ljmp
sub
stc
in
dec
icebp
int
lahf
add
fsts
js
mov
sub
cmp
ljmp
hlt
cmp
cmp
and
pushf
js
aam
mov
dec
dec
and
js
in
mov
pop
push
out
aaa
mov
inc
movsb
mov
xlat
stos
and
sarb
dec
scas
sub
cmpsb
and
and
inc
loope
sbb
sub
jp
push
jo
fisttps
lret
pop
out
xchg
mull
or
movsb
sarb
xor
push
dec
aam
inc
dec
xor
jno
push
inc
add
push
jne
push
in
jg
inc
int
cmp
in
sub
xor
cmpsb
mov
push
inc
cmp
push
loope
js
aam
xchg
sbb
clc
xchg
inc
push
push
scas
mov
pop
out
push
es
pop
add
in
testb
cmp
mov
or
hlt
hlt
loop
in
scas
jns
mov
scas
cmp
push
loop
fbstp
jge
add
cwtl
shll
mov
sbb
fmuls
out
sub
icebp
push
scas
bswap
mov
xchg
lret
daa
sbb
sbb
mov
xor
int3
adc
cmpsb
push
cltd
insl
jb
lods
daa
push
mov
int3
mov
cmp
push
es
das
ds
or
sub
or
idivb
mov
lret
imul
jb
call
stc
iret
int
jg
mov
sbb
sahf
in
jnp
dec
in
jmp
push
cmpsl
lock
out
pusha
adc
xor
adc
push
xchg
cwtl
or
jmp
mov
dec
jnp
adc
hlt
test
inc
push
mov
xor
fcoml
xchg
pushf
in
inc
adc
out
dec
cmp
adc
aaa
lcall
fidivrl
dec
sbb
ret
add
pop
cmp
pusha
out
or
fstpt
xchg
jge
fidivl
mov
sub
or
mov
push
in
or
dec
cli
arpl
incb
and
adc
in
jmp
jne
pop
int
xchg
dec
and
out
movsb
int
lret
pop
in
popf
iret
push
add
inc
pop
dec
jmp
sub
nop
cmpsb
str
push
jbe
fidivrs
daa
mov
xchg
mov
mov
cmpsb
and
adc
cmpl
inc
xchg
imul
mov
adc
mov
xchg
hlt
xlat
sahf
nop
sub
sbb
out
push
jmp
rcll
shrb
push
sub
fld
pop
sahf
movsb
in
and
sub
jb
push
outsl
cmp
js
faddp
jo
pusha
es
pop
inc
jmp
push
xchg
pop
xchg
xlat
arpl
and
addl
mov
push
lret
pop
mov
sub
and
daa
nop
push
add
les
cltd
and
add
rdtsc
and
sub
xor
cmp
push
sti
jo
sub
mov
in
mov
in
push
or
sbb
jl
leave
idivb
pop
iret
shll
pushl
out
cmovae
jae
fdivrs
daa
nop
jl
xchg
iret
jbe
jbe
lea
or
mov
outsb
les
mov
jnp
adc
mov
or
cmpsb
push
mov
or
addr16
push
and
iret
sub
push
mov
cmp
add
or
inc
add
sbb
fst
mov
stos
push
mov
pop
add
imul
shlb
pusha
sub
fidivrs
xor
int
cmp
xchg
add
popf
mov
sub
adc
sahf
jmp
dec
fdivp
rorl
inc
jb
jl
jns
movsb
addb
mov
iret
pop
sarl
xchg
pushf
and
sub
sub
inc
sti
adc
jb
js
jbe
or
xchg
cwtl
xchg
sub
push
mov
xor
sbb
loope
subl
jns
loopne
nop
arpl
xchg
cs
add
add
dec
pop
sbb
push
dec
pop
add
push
mov
stos
testb
sahf
arpl
cmp
cmpsb
es
lock
inc
cs
rolb
nop
xor
pusha
jmp
das
xchg
imul
out
mov
fidivs
sbb
scas
push
xor
inc
jecxz
nop
mov
inc
nop
push
xchg
jecxz
cmp
adc
mov
pop
les
ror
push
movsl
add
subb
xchg
shll
dec
adc
xchg
sbb
jmp
and
and
push
mov
les
inc
rcrl
mov
jmp
mov
push
pushf
sbb
shr
sub
mov
fdivrs
filds
mov
jl
mov
push
xchg
rcrl
nop
sbb
inc
pop
ss
jecxz
mov
jns
dec
push
fidivl
sbb
mov
mov
adc
sbb
je
out
sub
out
cmp
clc
repnz
repnz
push
sahf
cld
pusha
xchg
and
lods
cmc
js
shll
call
xchg
clc
fistpl
sahf
xor
mov
jecxz
sub
or
mov
sub
mov
sahf
inc
call
mov
scas
push
jge
mull
push
jle
mov
adc
jecxz
push
in
aas
push
jo
adc
mov
xor
push
xchg
inc
mov
pop
cld
call
fists
jbe
or
ffreep
or
lock
mov
mov
cwtl
jg
xorl
rorl
cmp
sub
in
cmp
ja
push
jo
sbb
mov
les
cld
sti
clc
shrb
mov
mov
notl
pmaxsw
adc
jmp
int
iret
mov
movsl
cmpsl
addr16
pop
ja
and
into
mov
dec
and
adc
add
loope
sub
push
leave
dec
xor
subb
mov
jp
push
lods
push
add
dec
or
push
pushf
in
insb
fcomp
and
push
inc
sub
out
loope
decl
xlat
jns
adc
notl
cmpsl
xorl
jle
insb
and
imul
imul
xchg
sbb
in
ret
mov
fdivl
sub
xor
inc
push
test
pusha
sbb
pop
xor
xchg
imulb
fldenv
loopew
mov
jl
cmpsb
int
jns
jb
hlt
and
pop
subb
cmp
cltd
sub
stos
addr16
pushf
cmpsl
imul
mov
xchg
mov
cltd
inc
mov
mov
addr16
inc
scas
xchg
cs
lret
xchg
inc
jge
std
cmp
inc
int3
into
xchg
and
test
sub
out
clc
and
nop
rorb
or
xlat
icebp
xchg
cli
push
mov
les
mov
inc
lret
js
push
lock
sbb
xor
bound
cmpsb
ds
fistl
rolb
push
das
push
sub
aas
xchg
iret
jg
mov
mul
jp
inc
orl
addr16
ljmp
out
cmp
outsb
inc
adc
pop
pop
mov
pop
into
pop
jne
js
clc
push
out
or
addr16
jp
sbb
add
nop
xor
movsb
js
bound
sahf
loop
dec
fstps
dec
ret
pop
out
inc
loopne
dec
dec
adc
sub
addl
test
push
mov
inc
inc
cmpsl
add
call
repz
mov
repnz
js
and
pop
sub
or
pop
dec
aaa
sub
jmp
aas
mov
jecxz
in
test
jne
inc
push
shll
sahf
and
mov
ror
cmp
push
add
sub
ficoms
add
xchg
cmp
scas
movsl
pushf
fnstcw
outsl
inc
into
pop
and
mov
orl
adc
xor
les
dec
out
pop
sub
ror
cmpsl
dec
mov
bound
xlat
or
pop
scas
or
test
js
rcrl
arpl
lods
mul
adc
cmp
xchg
cmp
xchg
fsubs
push
test
mov
fcmovb
aas
dec
lret
lods
xchg
rol
or
xor
sbb
stos
cmc
test
inc
jns
mov
fildll
inc
xor
rcrl
adc
jne
sarl
jg
or
aas
hlt
aaa
fldcw
jle
rclb
jne
popa
call
fisubrs
push
scas
mov
mov
mov
push
or
imul
addb
jg
jg
mov
jb
or
aad
out
mov
cwtl
outsb
jmp
repnz
stc
mov
and
sub
jae
xor
sub
cmp
roll
outsb
mov
popa
inc
stc
xchg
adc
inc
jb
xchg
popa
ret
test
cmp
inc
sahf
sub
cli
cmp
stos
dec
lock
incb
xor
pop
sub
mov
addr16
cmp
pop
outsl
adc
mov
insb
mov
push
inc
push
fdivl
mov
jmp
and
and
movsl
jno
push
arpl
or
std
pop
sbb
dec
in
das
fnstcw
pop
jmp
icebp
jae
and
pop
cmp
push
fisttpll
lods
scas
call
inc
xor
xchg
jno
add
mov
lock
sub
ja
pop
dec
push
add
jge
push
jb
in
in
push
in
cmp
cmp
jmp
adc
dec
in
jge
repz
shll
mov
dec
sti
rclb
xchg
mov
cltd
sub
outsl
fsubr
xchg
mov
add
scas
stos
jo
push
sbb
iret
imul
clc
push
data16
fidivrs
test
out
inc
xchg
xor
mov
pop
mov
sbb
out
aas
adc
out
mov
xor
fidivl
xchg
cmp
mov
push
repz
faddp
ja
push
popf
inc
xor
mov
arpl
aam
daa
mov
mov
xlat
aas
mov
sub
sbb
ret
adc
fdiv
cmp
and
add
mov
sub
dec
cmp
jo
fs
lret
jb
movsb
in
test
push
lods
or
adc
roll
dec
jae
jecxz
fidivrl
pop
xchg
cmp
lret
or
sbb
fisubl
sbb
dec
pop
daa
in
add
dec
lock
cmp
sbb
pop
repz
fisubrs
push
mov
adc
aad
jno
add
push
lret
jne
cltd
jecxz
sbb
adc
push
jg
stos
xchg
movsl
mov
jl
fsubs
loop
pop
ljmp
fisubs
movsl
xlat
xchg
sbb
hlt
repz
call
fsts
std
inc
cmovle
mov
mov
and
dec
fdivs
nop
fistpl
fnsave
jbe
xor
add
aad
js
jno
jbe
fs
mov
add
cld
xchg
ret
imulb
std
sti
mov
leave
loopne
mov
outsb
mov
inc
mov
scas
bound
stos
mov
aas
and
popa
jbe
sub
mov
dec
push
mov
sar
pop
rcr
in
dec
shrl
fnstsw
add
daa
jp
inc
cmp
rclb
mov
repz
int
mov
int
mov
lea
gs
in
ret
lcall
mov
hlt
fisubrs
sub
push
fstpl
movsb
test
sbbb
lds
clc
sbb
pop
add
xor
loopne
push
adc
pop
xchg
xor
mov
call
jno
xchg
popf
fcompl
lds
jae
scas
xchg
lds
jl
div
out
jl
or
fildll
adc
fs
mov
adc
rorl
and
test
insb
fcmovne
inc
push
mov
mov
lods
jne
jmp
scas
dec
xor
mov
movsb
cwtl
xor
xor
ret
out
ror
add
mov
aas
push
add
inc
push
pop
sbb
jge
pop
scas
pop
aas
inc
aaa
and
push
jmp
jne
sbb
sbb
int3
and
fwait
jbe
mov
sahf
or
popl
subl
fisubl
leave
les
push
adc
aaa
and
and
adc
dec
lds
xor
cmp
ret
mov
add
std
clc
mov
cmc
and
loopne
push
idiv
aaa
xchg
mov
and
xchg
rcl
xchg
dec
lret
push
mov
insb
mov
cli
inc
pop
mov
dec
mov
lret
int
xor
pop
sbb
sbb
jle
lahf
cmp
inc
mov
adc
clc
aad
mov
popf
pusha
sbb
jl
clc
inc
sti
pop
jb
movsb
push
bswap
test
fsubrp
insl
and
jb
and
arpl
test
rol
and
fidivs
xchg
pop
lock
mov
mov
enter
jg
sbb
inc
fiaddl
lock
push
mov
lock
out
in
adc
fiadds
sbb
xchg
mov
jnp
add
inc
pop
jo
xor
jg
inc
sti
push
add
shll
mov
sub
or
icebp
push
aaa
add
add
jbe
sarl
mov
mov
fisttpl
jns
push
lahf
xchg
adc
ret
pop
out
out
in
pop
out
test
mov
mov
shrl
inc
adc
subb
sti
icebp
scas
xchg
inc
cmp
fstpt
bound
ret
pop
into
cmp
mov
cmpsl
mov
cmp
enter
arpl
daa
ljmp
es
mov
sbb
cmpb
repnz
cltd
daa
out
jae
aam
lret
into
loope
cmpb
mov
mov
insl
repnz
push
pop
add
add
rorl
out
dec
cs
adc
and
roll
mov
jmp
push
je
fnsave
lods
jns
adc
pop
pusha
sarl
mov
loope
inc
out
xchg
mov
mov
sarb
or
lcall
xchg
stos
leave
sbb
mov
test
jae
xlat
int
nop
add
cmp
jne
in
loop
in
shll
or
lret
andb
xor
addr16
xchg
and
fwait
xor
lcall
and
repnz
int
adc
or
jb
in
mov
loop
test
aaa
popf
pop
mov
inc
jg
jbe
sbb
stos
add
xchg
rol
into
mov
addb
or
bound
movsl
shrl
call
and
jns
insl
pop
dec
push
sub
cs
dec
lods
frstor
xor
mov
dec
inc
xlat
jmp
sbb
and
mov
mov
mov
xchg
ljmp
or
xchg
dec
sub
loope
inc
xchg
dec
jg
xchg
mov
mov
cmpsl
cmp
pusha
and
xchg
enter
sbb
sbb
scas
ret
inc
out
fidivrs
nop
or
cmp
or
std
enter
push
cs
mov
fildll
loop
cmp
incb
mov
fidivl
sahf
addb
pop
jno
jg
mov
or
dec
lea
cmp
mov
xor
out
jae
pop
in
push
and
adc
cmpsl
call
popa
jns
push
push
jle
pop
inc
and
std
adc
out
cli
jl
out
mov
sbb
fstpt
jg
jge
sub
pushf
fcomps
clc
mov
adc
sbb
pop
pop
jge
out
mov
cwtl
jmp
mov
xlat
dec
mov
sub
in
push
jp
jge
lcall
lds
rol
jb
add
out
outsb
insl
adc
in
or
add
test
xchg
push
test
dec
int3
scas
fistl
iret
cmp
imul
cmp
pop
insl
aas
test
call
inc
int3
addr16
mov
xchg
mov
adc
nop
inc
jo
mov
mov
cs
sbb
stos
in
in
popa
fcoml
sub
or
imul
jg
in
idivb
adc
repz
push
mov
sub
ss
xchg
lcall
push
xor
inc
jae
push
mov
stc
xchg
sti
icebp
sbb
scas
xchg
sbb
dec
pop
xchg
mov
stc
mov
pop
mov
fsts
sbb
adc
jecxz
out
sub
push
addb
xchg
jge
add
mov
mov
jl
jbe
lahf
or
cmc
push
push
in
push
test
pop
sbb
fistl
xbegin
dec
arpl
xchg
cli
gs
dec
and
cmp
mov
push
fstpl
and
push
daa
mov
ret
mov
mov
enter
sbb
pop
lods
adc
cmp
inc
sbb
pop
adc
cmpb
lss
shrl
mov
dec
imul
mov
mov
jne
xchg
adc
xchg
rcr
cmp
in
mov
pop
lcall
sbb
push
lods
jbe
adc
outsl
jns
adc
dec
or
scas
cmp
pop
adc
sarl
mov
inc
xchg
adc
jno
mov
fs
jl
cmp
xchg
testl
mov
push
divb
clc
xor
out
outsb
and
xor
jno
movsb
sbb
cmp
jo
mov
xor
icebp
in
inc
test
insl
js
xor
jl
in
scas
jle
daa
lcall
inc
sti
cwtl
xchg
inc
pop
adc
adc
sbb
jae
outsb
add
or
stc
loope
sbb
mov
jecxz
or
xlat
mov
sbb
pop
cs
stos
pop
ds
leave
and
data16
clc
mov
mov
fs
sbb
test
decb
outsl
dec
xchg
push
imul
sub
xchg
xchg
inc
mov
add
ljmp
fstpl
sbb
dec
arpl
nop
sub
jmp
out
adc
mov
ds
cmpsl
out
inc
aaa
mov
mov
mov
mov
lcall
jmp
and
mov
and
push
sarb
jae
pop
jns
sti
fsub
rorl
pushf
add
nop
sub
xlat
mov
iret
mov
cmpsl
pop
xor
push
stc
stc
jmp
in
push
adc
sbb
out
mov
sbb
adc
pop
stc
jmp
ss
inc
mov
xor
xchg
xchg
popf
addr16
push
scas
sbbb
jge
xor
test
and
cltd
xlat
dec
lahf
aam
ljmp
push
in
push
clc
dec
push
mov
test
cmpsl
xor
repz
mov
xchg
sub
mov
mov
imul
imul
sub
mov
xor
dec
sbb
adc
dec
aad
lods
cmpsb
enter
movb
or
dec
insb
adc
mov
xlat
iret
mov
shrb
jbe
adc
cmpsb
pop
pop
aad
jp
xor
mov
sub
lret
mov
ja
imul
jmp
dec
pushf
mov
mov
dec
das
mov
rorl
ss
aaa
mov
jg
lcall
xor
inc
mov
sub
mov
movl
xchg
jns
in
and
push
jmp
in
cmpsl
mov
jb
ficompl
dec
pop
iret
aam
mov
mov
add
in
fbld
mov
fwait
pop
icebp
jp
and
push
and
mov
mul
mov
mov
pop
decb
dec
push
jp
cli
test
adc
mov
insb
mov
out
ljmp
push
mov
cmp
jp
dec
pop
sarb
pop
cmp
add
push
pop
outsl
out
mov
mov
sarl
cwtl
es
int3
sbb
out
mov
imul
cs
mov
add
pmaxsw
dec
mov
sub
and
xor
xchg
pop
jmp
add
adc
jns
push
and
add
sarl
scas
in
ss
mov
int3
adc
cmp
mov
inc
cmp
pop
jmp
aam
iret
orb
push
dec
cmpsl
xor
fwait
decb
mov
icebp
jb
sti
jp
xchg
movsl
jmp
sbb
sub
iret
into
dec
lcall
aaa
inc
mov
mov
adc
add
lea
push
jp
pop
gs
lahf
out
inc
inc
mov
insl
pop
push
psadbw
mov
scas
jmp
cs
jecxz
lahf
imul
lock
jecxz
ret
inc
dec
mov
adc
pop
aam
inc
dec
inc
jecxz
add
loope
mov
pop
push
jecxz
inc
adc
push
inc
sub
and
outsb
add
dec
in
stos
ljmp
mov
fstl
push
and
lret
movsl
movsl
mov
or
std
rcrb
in
mov
arpl
sbbb
push
incb
bnd
pop
mov
in
repnz
dec
push
aad
in
nop
into
dec
test
stc
in
fistps
cmpb
loopne
fcoms
int3
cltd
pop
xchg
jbe
pop
jo
cmp
pop
or
push
cmpsb
leave
xor
insb
in
fs
and
lods
into
int3
jbe
imul
mov
push
lds
outsb
insb
xor
aam
push
add
pop
in
sti
pop
pop
lcall
aad
sbb
mov
jecxz
jle
sub
jp
lea
mov
hlt
lcall
push
xor
repnz
cmp
ret
inc
and
movsb
imul
jp
insl
jmp
mov
pushf
jmp
jns
rcrl
mov
fsts
pop
cmp
movsb
mov
cwtl
sub
xlat
or
lahf
stc
stos
jnp
lds
jne
fstl
daa
xor
cmp
xchg
shr
jo
fwait
bswap
jbe
shlb
xchg
fildll
sub
xorl
push
jns
and
push
xchg
mov
cltd
dec
mov
xchg
ret
mov
push
les
dec
mov
iret
out
or
push
jno
daa
iret
cltd
mov
pushf
mov
dec
push
in
aas
dec
mov
outsb
test
daa
cs
sarb
mov
fwait
test
out
fisubrl
xor
out
jae
nop
sbb
sbb
xor
push
jae
jnp
ret
dec
jg
fdivrl
ljmp
jmp
mov
mov
rorl
add
dec
aam
mov
mov
sbb
inc
data16
lahf
adc
cmp
adc
push
in
jbe
mov
cld
test
inc
roll
mov
ss
aad
cmpsb
xor
popa
imull
or
insb
fcomi
daa
cmp
into
jae
aam
cmp
icebp
lds
dec
lds
insb
mov
mov
mov
stc
inc
sub
xor
lods
and
popf
mov
fisttpl
dec
outsl
push
andb
rorb
pop
scas
insl
xchg
add
ss
sbb
ds
pushf
mov
pop
add
pop
icebp
lahf
es
cmp
mov
ret
ds
dec
xchg
inc
cmpsl
xchg
add
mov
cwtl
push
sti
jb
faddl
jl
pushf
jl
popf
jne
jp
insb
cltd
pushfw
loope
pop
dec
mov
and
sub
out
dec
hlt
dec
movsl
push
negb
and
pop
jns
lods
repnz
in
pop
inc
out
cs
add
mov
dec
js
repnz
aas
jg
dec
cmpsl
lcall
insl
or
cmp
notl
imul
movsl
mov
xlat
sbb
popf
sbb
cwtl
pushf
call
flds
mov
cmp
and
mov
out
in
pop
out
sbb
insb
jmp
sub
jb
scas
inc
inc
mov
ret
ljmp
cmpl
lock
mov
inc
cmp
push
mov
nop
sti
dec
sbb
aad
mov
sbb
icebp
testl
mov
jmp
pop
leave
mov
pop
sbb
adc
pop
arpl
ds
xchg
iret
pop
in
testl
je
clc
pop
dec
movsl
notl
push
faddp
cmp
sarl
out
es
jg
mov
mov
jmp
in
hlt
push
cmpsl
inc
ljmp
int
testl
stos
dec
xchg
cmp
lock
ret
xchg
push
xchg
mov
mov
adc
shlb
inc
cmc
jno
push
movsl
int
adc
lock
push
push
iret
stos
ret
or
and
and
pop
xor
in
mov
dec
aad
iret
ret
xchg
test
stos
mov
roll
data16
lret
cmp
icebp
dec
cmp
mov
cwtl
jg
xchg
scas
out
or
xchg
jp
mov
jle
sbb
test
cwtl
jg
lahf
inc
pushf
into
call
add
lahf
and
out
lea
ja
cmp
nop
cmpsl
jmp
cs
mov
pop
daa
lds
xor
test
xlat
dec
out
mov
inc
ficoms
fwait
and
imul
js
stos
fsts
mov
push
mov
jb
jp
inc
inc
jae
insb
lods
sti
jmp
mov
jb
mov
xor
add
xchg
movsb
scas
cmpb
or
nop
pop
icebp
addr16
scas
clc
push
push
cmp
adc
sub
lds
cmp
shlb
mov
cwtl
fwait
and
insl
loopne
xchg
or
fwait
in
ret
mov
jl
cmc
das
lods
inc
sbb
xor
cmp
xor
pop
movsb
ja
rcrb
adc
in
stc
outsl
imul
push
sub
mov
push
jns
test
daa
stos
rcr
push
adcb
mov
mov
popa
inc
fisubs
insb
jmp
stos
jle
inc
rorb
test
push
gs
test
hlt
adc
orb
jnp
test
sub
xchg
jge
fmull
lea
popf
dec
jbe
loope
addb
adc
leave
pop
or
cmpsl
fnop
sub
fisubl
push
test
dec
cmp
fwait
daa
fnsave
daa
mov
inc
adcb
repnz
call
pop
es
in
mov
push
sbb
sahf
ds
pop
movsb
das
daa
push
pop
pop
sahf
xchg
inc
or
or
mov
lret
test
popf
sub
push
loop
mov
stos
ret
mov
xor
xchg
jl
and
mov
imul
sbb
add
mov
inc
mov
lods
jno
inc
jo
leave
mov
sbb
pop
js
push
inc
inc
xchg
ds
sarb
les
inc
lret
lahf
sbbb
xlat
stos
lcall
in
lret
ficoms
or
test
mov
addr16
lret
adc
sub
test
sbb
fistps
mov
test
sbb
cmp
shl
dec
mov
or
in
ljmp
loop
sbb
dec
stos
adc
mov
clc
sub
pop
sbb
loopne
out
dec
outsb
ror
arpl
loop
jmp
mov
dec
xchg
mov
push
mov
out
mov
adc
outsb
inc
adc
xlat
inc
test
movsb
cmpb
in
xor
jb
mov
jle
inc
shl
clc
jg
lret
frstor
mov
ror
and
dec
enter
cmpsb
fisttpl
push
dec
cmpl
ds
daa
mov
xchg
cmpsb
popf
and
or
add
lret
ljmp
movsl
stos
jb
or
jbe
addl
imul
jmp
and
xchg
call
in
jns
std
jmp
test
jbe
push
mov
sub
mov
rcl
lods
add
imulb
sub
ret
je
inc
loop
and
inc
jecxz
scas
pop
mov
xor
sbb
xchg
push
repz
fcmovne
rep
je
adcl
adc
aaa
js
ret
lods
fnstcw
sbb
nop
scas
inc
in
cmp
dec
mov
aam
cmp
xchg
cmp
and
dec
stos
dec
fsubs
pop
in
nop
test
ja
inc
mov
sbb
inc
mov
imul
add
test
movsl
jno
mov
es
stos
lret
jge
xchg
xchg
xor
imul
xor
xchg
push
es
pop
push
pop
sar
mulb
dec
mov
and
xlat
cmp
inc
imul
jle
and
jmp
inc
push
mov
lods
jcxz
adc
leave
inc
mov
imul
cmpsb
inc
pop
sbb
fildl
xor
mov
lods
call
add
data16
push
dec
lock
repz
int3
adc
jb
mov
cltd
imulb
jge
fldenv
ja
inc
pop
jmp
add
or
bound
movsb
stos
lahf
jns
jp
fstps
imul
ficompl
out
inc
gs
cmp
insb
mov
jmp
cwtl
push
sahf
inc
inc
push
dec
adc
sbb
xchg
xor
dec
jecxz
je
mov
in
sub
popf
loope
fcmovne
sti
jns
stc
dec
inc
jmp
fisttpl
mov
ret
dec
mov
in
imul
popa
pop
lret
mov
sbb
jle
mov
dec
mov
clc
gs
addb
std
inc
mov
in
xchg
or
fisttpl
adc
out
mov
je
xchg
xor
xchg
jnp
iret
pop
fs
imulb
out
sbb
or
sbb
inc
cmp
pop
fwait
rol
xchg
or
imul
pop
enter
leave
sbb
push
inc
cmp
shll
fwait
sub
push
shll
leave
xchg
ret
push
xchg
push
and
sti
jno
scas
adc
in
das
push
rcl
lods
dec
cmpsb
sbb
mov
jge
mov
sbb
xorps
mov
dec
iret
sbb
mov
popf
adc
fistpl
mov
mov
pop
push
repz
adc
xchg
fwait
ss
lods
mov
xchg
test
ja
popa
mov
cld
addl
repnz
sbb
jo
adc
imul
xchg
adc
or
and
mov
mov
dec
adc
int3
hlt
pop
fimull
or
jle
adc
into
std
sahf
jecxz
pop
xchg
int3
xchg
andb
enter
xor
incb
les
sub
pushf
jnp
lcall
fisubs
cmpsl
push
pop
repnz
test
cli
cmp
inc
loopne
push
or
and
lds
jnp
mov
push
aam
jnp
repz
push
xchg
imul
gs
cwtl
sub
mov
inc
es
es
xchg
lea
imul
push
shr
and
mov
xchg
dec
dec
cmc
ds
mov
sub
cli
scas
and
sub
testl
popa
cmp
xor
lock
in
dec
ss
int
push
mov
lea
mov
and
xor
sbb
push
ret
loopne
repnz
lcall
and
mov
pop
sti
inc
mov
fnclex
push
inc
loope
sub
mov
lds
cmp
cmc
daa
xor
imul
popa
iret
inc
icebp
pushf
jnp
mov
adc
arpl
push
and
movsl
cmc
ret
sub
mov
fimull
in
cld
mov
aad
test
mov
dec
mov
lahf
jo
loop
mov
pop
push
aaa
push
xor
aad
push
inc
mov
lea
xor
xorb
sbb
mov
pushf
cmc
les
scas
rcrl
push
enter
xor
and
mov
hlt
mov
jne
xchg
jo
adc
jbe
and
cmp
or
pop
inc
sub
add
imul
xchg
push
cld
mov
lds
pop
ret
or
mov
pop
sub
mov
mov
sbb
push
cs
sbb
xchg
jb
dec
xchg
sbb
test
test
fs
cmp
xchg
jae
leave
int3
std
loope
out
add
icebp
mov
xor
notb
mov
sarl
outsl
mov
add
inc
mov
fwait
ja
rorl
popf
aaa
mov
jae
or
mov
pushf
adcl
xor
fmull
pushf
push
fisttpll
sub
fdivrl
dec
lret
inc
xor
pop
cwtl
lret
lods
dec
out
lock
mov
imul
push
cmpsb
out
mov
inc
rcrl
push
lock
jo
mov
sarb
das
or
lods
push
cli
dec
lea
lret
cld
jl
fwait
repz
and
mov
mov
push
mov
xorb
ja
pusha
sbb
jmp
xchg
js
inc
xor
cmp
sub
std
in
xchg
iret
repz
push
push
jnp
mov
ljmp
mov
mov
push
testl
mov
push
inc
iret
adc
cld
pop
pop
mov
fistps
push
test
popf
pop
enter
pop
fstpl
xor
subb
fsubl
xor
pop
repnz
popf
dec
cltd
push
arpl
or
inc
es
or
xchg
push
dec
lret
cs
or
cmp
in
stos
mov
and
fs
nopl
mov
les
shll
xor
test
inc
ret
mov
int3
xor
xchg
bound
jns
popa
scas
testl
aas
xor
outsl
outsl
jl
setns
ja
add
and
sub
int3
shlb
sbb
mov
pop
xchg
push
and
fldcw
ret
cmpsb
mov
mov
mov
and
inc
cmp
dec
imul
push
jno
lock
cmp
dec
jno
xchg
leave
ret
aam
push
dec
inc
pop
ljmp
adc
stos
int3
ja
sbb
push
and
mov
insb
mov
and
ret
scas
negl
or
test
lahf
dec
int
lcall
fs
gs
xchg
andl
aaa
lods
aam
mov
fcmove
pushf
or
push
dec
inc
int3
or
lock
lahf
jb
rolb
xchg
add
adc
dec
push
pop
mov
scas
inc
clc
cs
xor
inc
test
std
mov
mov
clc
cs
call
sbb
xor
cwtl
or
or
pop
popf
imul
rcl
jnp
imul
mov
xchg
or
cmc
in
nop
loop
xor
mov
test
or
mov
and
xchg
dec
pop
jb
call
jo
lret
fcomps
dec
loop
fstpl
push
sub
pop
movsb
mov
shll
loop
xor
xchg
jno
aas
inc
leave
push
cmc
ficoms
test
std
pop
in
pop
sbb
popf
aaa
jno
sbb
lahf
push
cmp
or
movb
sahf
hlt
mov
jae
jne
rcl
pop
lahf
enter
inc
popf
shrl
shrb
sahf
int
inc
add
into
xchg
lret
add
pop
push
mov
sbb
loop
jnp
fs
jmp
mov
dec
cmp
pop
aas
mov
outsl
jb
push
pop
or
add
mov
and
je
enter
or
into
stos
fnstenv
loope
or
rorb
add
push
pop
lds
test
fdivrl
scas
sub
mov
shl
nop
cli
cmovns
pop
add
mov
inc
pop
cli
cmpsb
lods
jge
jno
sub
loope
jl
lret
jno
je
adc
pop
std
inc
ret
lahf
fmull
jmp
add
inc
jo
mov
cwtl
negb
mov
dec
movsl
jl,pn
mov
hlt
das
pop
and
xchg
dec
pop
int
jg
push
aam
sub
out
movsbl
scas
faddl
xor
push
push
sbb
pop
mov
addr16
fsubs
fcoml
push
subl
push
xlat
repz
scas
cwtl
bnd
lock
mov
fidivrl
inc
inc
aad
jmp
xchg
push
mov
loope
jle
ja
mov
shlb
and
xor
fbstp
fs
jno
in
rcrl
insl
aaa
mov
mov
push
inc
mov
jb
outsl
aas
push
imulb
fwait
hlt
in
add
jbe
jne
dec
dec
lret
and
fs
pop
fnstsw
mov
and
fsubs
fs
mov
sbb
xor
sub
mov
sub
aaa
xchg
movsl
int
ljmp
jnp
int3
xor
lea
jo
xor
mov
int
adc
sub
xor
or
push
ljmp
add
movsb
leave
fcomi
in
jle
imul
scas
incb
sbb
in
cmp
lds
into
xchg
popf
jae
enter
mov
jo
test
mov
fwait
popf
mov
ss
clc
pusha
sub
lods
add
inc
dec
repz
test
aaa
arpl
imul
js
outsb
jmp
jp
jp
add
shll
sbb
mov
scas
jno
or
ret
sub
js
fisubrs
icebp
mov
push
adc
jno
lds
cmpsl
imul
xchg
stos
cmc
sti
rorb
xchg
jae
stc
add
aad
push
sbb
cmp
push
bound
xchg
popa
inc
ljmp
call
js
lods
jb
or
call
or
rcll
andb
scas
hlt
cwtl
int3
dec
and
enter
cmp
jns
arpl
cltd
pushf
jl
push
movsl
hlt
out
push
in
mov
push
inc
mov
sub
imul
mov
mov
xchg
mov
fs
adc
mov
or
xor
jle
mov
cli
and
in
in
dec
movsl
mov
xor
cmpsl
inc
pop
pop
leave
call
aam
cld
js
mov
and
mov
fwait
icebp
pop
xchg
pop
push
fs
addr16
mov
xor
js
xchg
sub
xchg
push
add
inc
xchg
cmp
xchg
popa
cmpsb
dec
jnp
add
es
popa
fisttpll
pusha
shl
sub
sbb
or
push
xchg
out
pop
hlt
test
sbb
cmp
mov
xor
mov
adc
adc
push
das
jb
les
setge
pop
aam
dec
cmp
sbb
das
loope
mov
or
js
addb
xor
outsl
pop
idiv
mov
inc
dec
sbb
and
fbld
icebp
jl
xor
cmp
add
xchg
clc
push
jo
pop
cmp
sub
iret
push
mov
je
aad
shlb
bound
mov
xor
repnz
data16
push
cld
arpl
jge
mov
jp
testl
push
or
outsb
pop
xchg
jle
mov
jge
xor
cmp
out
lds
pop
add
lret
leave
push
pop
popf
cmp
pop
clc
inc
dec
fs
xor
dec
loope
inc
adc
xor
cli
mov
call
mov
fldcw
ljmp
add
sub
scas
insb
adc
xchg
scas
dec
push
sbb
aam
mov
mov
jge
std
or
pushf
inc
inc
add
repnz
fadd
inc
outsl
sub
pop
std
loop
cwtl
mov
bnd
push
cli
push
fcmove
xchg
cli
dec
or
add
fwait
mov
out
inc
je
rclb
inc
xchg
fiaddl
fbstp
iret
sbbb
add
xchg
imul
mov
or
ljmp
aas
sub
aad
ljmp
loope
cli
or
cld
cmp
out
xor
xlat
cld
fstpt
adc
jbe
jns
lahf
rclb
xchg
xor
jns
dec
repz
fsubrl
mov
push
test
mov
lea
ja
out
ja
ljmp
sbb
mov
lcall
xor
movsl
sahf
scas
addl
fldl
into
mov
mov
loop
mov
mov
in
sbb
mov
xor
cli
stos
lea
push
mov
sub
test
cmp
imul
or
cmp
daa
push
lret
dec
lahf
dec
lcall
sub
mov
ljmp
push
mov
mov
pop
xor
jg
mov
jno
push
jge
arpl
rcl
mov
fucomip
movsb
fsubs
roll
cmp
int3
in
add
aam
sub
lods
or
jne
cmp
add
enter
or
push
push
mov
shr
inc
stos
imul
xchg
mov
arpl
sbb
mov
mov
nop
scas
and
test
cmp
test
push
addr16
inc
lahf
add
sti
adc
push
fs
rclb
inc
pop
nop
xchg
popa
xchg
xchg
iret
popf
bound
nop
fldl
inc
es
out
pop
es
push
push
popf
inc
repz
mov
adc
dec
repz
jbe
jp
in
fsubr
fldcw
mov
pushf
xchg
insl
ja
test
cmpsl
and
sub
enter
or
sub
ret
test
inc
push
push
jge
sbbb
repz
sub
mov
cltd
xchg
lahf
and
sbb
movl
dec
mov
pop
stos
mov
xchg
aad
sbb
pop
lcall
call
movsb
and
lods
daa
movsl
inc
or
push
mov
jne
ret
sub
push
loope
cs
cld
mov
cmp
lods
jl
mov
jo
cmp
mov
jb
cmp
adc
pop
xchg
fwait
mov
jge
push
scas
and
xchg
out
cltd
lods
adc
jl
push
andl
and
mov
fdivrs
jmp
pop
or
out
cmp
and
jmp
loopne
pop
push
mov
sahf
test
arpl
js
scas
imul
movsb
loopne
outsb
sub
aas
test
add
push
jmp
mull
pop
iret
adc
repz
mov
pop
add
roll
sub
push
rorb
and
cmpsb
jmp
rcl
or
adc
inc
pop
out
testb
sub
push
fcmovnu
and
daa
mov
fimuls
xor
fwait
jecxz
les
cmp
loope
ljmp
mov
pop
pop
cmpsl
pop
pop
pop
cmc
rcrl
jns
sbb
inc
sub
fbstp
adcl
ret
push
cltd
add
lock
xor
hlt
pop
jnp
dec
repz
addr16
sti
and
aad
ret
mov
jp
jnp
xchg
fisubl
push
aad
mov
data16
mov
xor
sbb
pop
pop
sbb
xchg
leave
lods
jmp
lock
push
and
push
out
and
sub
adc
addb
je
mov
sbb
out
popf
sub
jns
add
cmp
jb
xor
mov
sarb
pop
cmc
lcall
push
lcall
dec
out
xchg
lds
int
je
mov
stos
and
call
incl
push
jmp
fwait
jge
repz
out
dec
popa
imul
fcmovu
mov
loopne
dec
xlat
mov
push
pop
jns
pusha
or
mov
test
lods
fucomip
fistps
jl
cli
pop
jge
and
mov
leave
pop
push
xor
cmc
je
and
mov
adc
xchg
aam
push
shlb
mov
or
jl
dec
xor
mov
sahf
in
jbe
pop
popf
out
mov
inc
adc
and
add
push
fisttps
into
xchg
addr16
and
xchg
popa
sub
fsub
inc
out
xor
jg
sbb
lcall
gs
jno
and
lret
add
test
xor
andl
popa
pushf
push
ret
scas
push
push
lds
push
mov
push
xorl
fcoms
aas
push
jmp
xor
push
pop
cltd
mov
pop
xchg
xor
fwait
mov
ss
sub
cmpsb
mov
stc
xchg
mov
clc
sbb
stos
cld
fisttpl
fadds
leave
add
adc
outsl
xchg
lret
lahf
mov
pop
and
dec
test
mov
mov
scas
faddl
lea
adc
jns
bound
add
bound
fisttpll
mov
xchg
cs
cmp
cmp
xchg
xor
or
rolb
pop
jbe
lcall
stc
addr16
movsl
inc
and
scas
pop
push
lret
stos
pushf
in
mov
or
xchg
arpl
push
push
orl
inc
or
inc
das
lahf
stos
inc
lods
fsin
pop
mov
cmp
mov
ljmp
add
sti
xor
push
outsl
loope
sbbb
loop
shr
adc
sub
imul
aaa
adc
adc
xor
sahf
das
aas
jne
aaa
mov
adc
jge
add
or
cmp
shrl
xor
lahf
mov
pusha
push
flds
dec
test
mov
pop
mov
mov
pop
out
jp
inc
movsb
fistl
test
in
mov
or
shlb
std
hlt
adc
and
arpl
add
filds
pop
addr16
add
cmp
dec
xchg
pop
push
jmp
es
add
cmp
ja
push
pop
out
shrl
push
daa
dec
ret
and
push
stc
mov
pop
shl
dec
xchg
jle
push
imul
mov
mov
mov
int
stos
pop
xor
xchg
mov
mov
dec
dec
outsb
cmp
ret
movsb
pushl
dec
mov
fsubl
xchg
lods
aas
pop
lock
inc
outsb
cmpsb
stos
mov
cmc
push
ljmp
dec
jo
dec
test
pop
pop
push
pop
lods
mov
sub
nop
jle
bound
xlat
loopne
aad
mov
lods
jo
sub
cwtl
push
movsb
cmp
pop
leave
lock
xchg
xor
mov
lods
sbb
sub
repnz
pop
ret
aaa
xchg
ljmp
cwtl
mov
jnp
scas
clc
sub
fsubrs
insb
int3
mov
fbstp
imul
xchg
jp
lods
pop
nop
and
push
cmpsb
scas
xor
into
fldcw
loop
adc
mov
lods
repz
and
mov
insb
scas
repnz
sub
mov
test
push
cmc
orl
rclb
sbb
mov
add
aaa
jmp
subl
iret
fldcw
mov
call
icebp
jmp
xchg
jbe
out
push
nop
repz
aam
scas
add
mov
insl
inc
shlb
mov
cmp
shll
repnz
lahf
inc
scas
mov
stos
and
or
sti
and
pop
xchg
imul
sub
cmp
cmp
dec
cmp
dec
mov
data16
and
addr16
fwait
ja
jbe
mov
ljmp
sbb
adc
imul
pop
cmp
test
jmp
aam
sub
in
loope
add
in
push
cli
popf
xchg
xor
jecxz
adc
jbe
movsl
xor
fstps
loope
and
or
pusha
repnz
mov
in
cmp
cld
cmpsl
push
aad
movsb
sub
stos
cmp
lds
sub
sbb
cmp
gs
in
je
cmp
dec
xchg
fwait
lahf
sub
inc
pop
stos
sahf
psubusb
and
scas
ljmp
outsl
or
aaa
lock
xchg
nop
ficoms
pop
lcall
jae
repnz
push
cwtl
repnz
fbld
mov
aad
jae
out
fdivrs
jbe
or
rclb
imul
loopne
data16
adc
fbld
int
lret
adc
xor
js
test
pop
mov
jb
mov
ss
daa
icebp
xchg
jb
and
mov
mov
sarl
fwait
int3
mov
mov
jo
bnd
and
sti
xchg
and
xchg
cmp
xchg
fldl2e
sbb
je
mov
cmp
loop
inc
imul
das
andb
push
mov
lcall
xchg
mov
mov
xchg
out
sbb
push
pushf
ds
sub
jno
pop
sub
and
out
and
push
mov
clc
or
fnstsw
xchg
cmpsl
sub
ficompl
es
aad
pop
mov
shl
push
jp
js
cmp
push
rolb
adcb
fistl
pop
cmp
ds
cwtl
and
pop
xor
in
in
aad
fdivs
add
dec
mov
mov
fdivl
scas
dec
ljmp
jmp
cmpsl
mov
in
or
mov
fcmove
pop
addr16
adc
cmp
pop
popf
scas
jmp
and
and
mov
mov
xor
lea
mov
divl
movsl
and
cmp
cld
pop
xchg
jmp
mov
test
out
dec
sbb
xchg
idivb
repz
pop
imul
mov
push
sbbl
in
aaa
adc
adc
adc
je
lock
and
mov
roll
aam
test
std
mov
push
jne
and
or
adc
ja
out
ret
in
movl
ret
je
jo
push
jae
add
call
mov
jp
sbbb
sbb
outsl
jns
inc
fs
mov
fcomps
inc
and
flds
or
sub
mov
sub
test
lret
jae
ficoms
sub
push
push
rorb
add
dec
rolb
aad
test
pop
jae
push
cmp
mov
xchg
mov
cmpsb
mov
cwtl
and
aam
or
data16
sub
inc
adc
sbb
out
mov
rcll
ret
ja
mov
sbbl
pop
fisttps
in
fdivp
lret
stos
fildl
ret
leave
xchg
xchg
xchg
sub
in
insb
push
insb
int3
popf
mov
push
ss
fdivl
cs
jbe
out
add
push
xchg
add
mov
test
cld
mov
cmpsb
xor
js
cli
mov
mov
das
jge
cmc
xchg
shrb
outsl
iret
ja
or
sarl
les
xchg
sti
out
lods
mov
imul
adc
inc
rorb
push
aaa
mov
mov
fsts
fidivrs
and
push
sub
and
jle
mov
outsb
call
dec
mov
enter
incb
rcll
xchg
mov
clc
rcl
lock
loop
dec
adc
xor
out
bound
rcr
ret
addr16
sub
push
inc
inc
jbe
cmpsb
rol
outsl
sbb
cwtl
cs
pop
fstpt
push
ss
popa
data16
filds
and
add
addr16
mov
pop
mov
cmp
sti
and
push
decl
push
scas
inc
jp
pop
insl
mov
cmpsb
push
mov
push
jg
sub
rcrl
int3
jmp
pushf
mov
add
shll
inc
xor
ljmp
push
je
xchg
push
xchg
insb
popa
cli
fucom
les
sbb
push
pop
pop
push
sub
ret
aaa
dec
inc
adc
cs
jg
addr16
call
xchg
test
fisttpl
jnp
fdivrs
movsl
inc
repz
add
lods
movsl
dec
loopne
mov
sub
pop
jecxz
js
cmp
mov
loop
cmpsl
cmp
inc
ret
ljmp
or
sbb
in
cs
jmp
xor
mov
push
cmp
insb
rcr
ret
xor
fimull
or
push
aaa
lahf
mov
inc
or
xor
fs
jae
push
cli
jns
or
sub
in
inc
add
dec
sbb
push
add
mov
je
mov
inc
mov
lcall
or
dec
pop
lods
mov
dec
add
lret
or
mull
inc
xchg
sbb
jecxz
test
mov
pop
push
add
xor
adc
iret
mov
mov
addr16
pop
xor
xchg
in
dec
add
rolb
mov
fsubr
lds
rep
cld
push
dec
popa
xchg
movsb
int
and
mov
repz
dec
sbb
in
add
xchg
test
movsb
lods
nop
xor
mov
cmp
lock
test
int
sub
les
pop
mov
adc
cmc
fisttpll
sub
pop
cmp
js
lcall
sbb
clc
int
push
fdivrl
bound
decb
scas
push
hlt
jns
jp
cmp
das
fptan
movsb
lret
lods
lret
mov
dec
cmp
push
jle
xor
inc
popf
or
or
mov
inc
cltd
pushf
inc
test
jae
jno
pop
aad
jns
mov
jecxz
pushf
in
or
mov
in
cmp
cmp
cmpb
xor
mov
or
cmp
xor
lcall
mov
mov
inc
add
pop
jmp
cmpsb
push
or
mov
push
jo
pop
cmp
mov
ljmp
adc
or
in
dec
loopne
in
rcl
frstor
dec
rclb
add
jge
mov
movsl
push
adc
cmp
and
cli
mov
out
fnsetpm(287
popf
int
loopne
jle
cmpsl
dec
aam
movsl
fdivp
movsb
popa
jne
iret
stos
mov
pop
cmc
in
lret
sarl
lahf
sub
pop
xor
adc
test
xor
add
loop
dec
push
cmp
stc
push
cmc
push
fildll
stc
mov
xchg
xor
psubw
and
sub
int
and
mov
aaa
icebp
sub
test
jle
iret
in
sahf
jge
ds
jnp
inc
daa
mov
int
jecxz
sbb
add
call
clc
movsl
inc
dec
div
iret
in
push
dec
popa
jbe
pop
fs
cld
mov
cmpsb
xchg
sub
cld
fucom
or
add
add
fdivr
or
push
or
data16
mov
fistl
fstps
test
outsl
or
fcompl
rclb
outsl
xor
cwtl
icebp
aaa
xchg
in
jmp
jnp
ret
out
mov
sbb
xor
sub
fucomip
cmp
push
jno
scas
and
push
jns
mov
or
adc
jmp
sbbb
xchg
mov
inc
shrl
jp
mov
and
repnz
mov
and
add
int3
fldenv
lcall
cmp
adc
les
not
je
mov
dec
or
inc
mov
push
fisubrs
into
fcomip
adc
shrl
jecxz
std
adc
mov
inc
inc
cld
push
sbb
jmp
repnz
pop
scas
cmp
jecxz
aas
jge
std
dec
into
adc
dec
push
mov
lret
cmp
fs
int3
in
out
pop
mov
dec
adc
xor
rol
xchg
and
out
mov
mov
leave
sbb
inc
push
cld
push
sbb
push
cmc
fs
add
xchg
jg
pop
movsl
adc
out
adc
xor
jp
add
mov
add
fsub
dec
adcb
mov
imul
shl
arpl
xor
icebp
shl
and
jl
outsl
leave
xchg
repz
cmp
out
and
inc
rolb
mov
arpl
loope
dec
fldcw
fwait
cmpb
pop
pop
test
cmp
push
sub
mov
iret
add
fsts
push
stos
mov
movsl
mov
pop
pushf
and
mov
nop
aaa
xor
lds
jbe
or
dec
xchg
sarb
adc
jo
and
mov
int
and
push
xchg
subb
or
inc
fs
cs
xchg
sub
mov
dec
or
pop
stos
or
out
int3
fs
or
leave
xchg
push
xor
imul
dec
or
jo
ljmp
jl,pn
xor
repz
inc
in
sbb
outsl
ds
dec
rcr
in
imul
lods
das
lea
lahf
vrcpps
mov
or
inc
jae
test
pop
sub
or
adc
adc
cmp
jp
add
xor
sbb
xchg
outsl
jle
inc
pop
aad
stos
rolb
out
jb
mov
cmp
mov
mov
pusha
test
std
mov
sub
cli
scas
scas
sub
lods
les
js
addb
xchg
clc
shlb
cwtl
lea
xchg
sbb
in
add
cmc
int3
sti
fbld
mov
adc
push
cwtl
fs
and
xchg
jno
into
cltd
cmp
nop
dec
cmpsl
push
push
dec
movsl
mov
incl
daa
aaa
aaa
dec
or
push
xchg
mov
mov
rol
push
xchg
lea
jp
dec
xchg
mov
push
xor
setbe
fimull
cmpsl
xor
pop
out
mov
mov
sahf
dec
out
and
cmpsl
and
rclb
and
xchg
lcall
push
fdivrl
xorb
pop
popa
aam
mov
in
add
cmpl
fidivs
cmp
cwtl
dec
stos
jo
jb
dec
mov
call
mov
add
arpl
flds
inc
push
lcall
xchg
xchg
xor
sbb
sub
xlat
cmpsb
out
lods
dec
pop
int3
cmp
mov
push
push
push
or
imul
out
sti
icebp
cmp
push
mov
pop
jle
ficomps
lods
lods
push
in
les
aas
insl
sbb
insl
mov
sbb
adc
mov
mov
jp
mov
aam
xor
dec
popa
cld
stos
lds
add
sbb
add
xorb
pop
test
pop
cmpsl
in
dec
sbb
cld
xchg
and
mov
xchg
xor
adc
sbb
hlt
mov
ss
pop
ds
pop
or
mov
xor
or
fisttpl
mov
addr16
sbb
jo
push
out
dec
pop
dec
jbe
cmp
mov
or
sbb
mov
leave
aaa
cmp
dec
cmp
pop
test
sbb
dec
shrl
cmc
aaa
xchg
shlb
jns
mov
test
cmp
sti
mov
pop
and
mov
sub
mov
rorb
pop
xor
popf
xor
mov
add
cmp
pop
bnd
pop
inc
jno
iret
in
mov
xor
xchg
mov
shlb
push
mov
aad
fisttpl
jmp
lcall
pop
inc
dec
push
cmp
xchg
xor
repnz
ficompl
clc
cmp
mov
mov
sbb
adc
cld
push
pop
or
clc
sub
enter
mov
ret
push
out
sbb
enter
cmpsl
ljmp
sbb
mov
mov
dec
mov
fisttpll
xchg
mov
xchg
push
mov
mov
sub
adc
jno
jl
pop
test
dec
mov
adc
mov
jno
mov
fs
outsb
pop
pop
mov
pop
call
fwait
out
xor
das
outsl
pop
gs
into
fsubl
gs
sub
icebp
adc
or
iret
jnp
fists
cmp
repz
rolb
in
cmc
fwait
lret
adc
sub
loope
inc
mov
cmpsl
and
xchg
arpl
cmp
pop
inc
sbb
cltd
jae
das
sub
test
adc
xor
or
mov
or
xchg
push
adc
pop
lods
ljmp
dec
test
pop
je
neg
fimuls
cmp
sub
in
divb
movsl
leave
mov
or
sahf
mov
out
test
add
push
scas
jb
ja
das
mov
cmp
mov
mov
es
jo
andl
mov
adc
aam
mov
in
xor
adc
in
sub
dec
pop
sub
push
mov
mov
es
int3
jge
mov
push
fdivl
xchg
mov
stc
push
loope
inc
fidivrs
mov
and
sbb
push
jmp
outsb
ret
adc
rolb
pop
jno
fwait
pushf
jge
adc
bound
cmc
push
out
pop
inc
adc
pop
fwait
mov
scas
fwait
jo
push
add
mov
dec
jno
mov
mov
in
aam
test
inc
enter
fwait
out
sub
mov
push
iret
insb
testl
in
mov
fstpt
pop
mov
add
pavgw
mov
mov
push
sub
jo
lahf
fsubr
dec
cmp
and
mov
adc
mov
jl
mov
repnz
xchg
dec
test
inc
mov
imul
xorb
outsl
or
insl
xor
inc
push
xchg
scas
xlat
fwait
les
push
xchg
pop
out
test
mov
repz
sbb
fildl
iret
aas
fisubl
cmp
jae
add
pop
pop
bound
jge
add
push
adc
pop
sahf
mov
rcr
popa
add
rcrl
out
push
pop
and
jg
pop
push
pusha
mov
rcll
cmpl
jno
in
mov
and
loope
pop
sbb
imul
lret
mov
fcmovb
add
or
mov
xor
in
push
mov
in
and
into
cmp
pop
out
es
scas
loopne
lock
cmpsl
or
cmp
xor
movsl
xchg
in
mov
repnz
push
lret
adc
roll
adc
push
fcoms
clc
sbb
shl
dec
jo
fwait
cmpsb
xor
repz
pop
clc
shl
imul
jle
jbe
or
ljmp
shrb
bsf
add
push
movsb
lahf
sub
xchg
xor
push
dec
inc
cmc
stos
popa
xchg
adc
popf
out
adc
adc
pop
sbb
stc
fimuls
fidivrs
das
adc
insl
pop
mov
mov
xor
xchg
rcll
pop
das
dec
cwtl
inc
test
les
jmp
pop
stc
jmp
std
cmp
cmpb
cmp
adc
xchg
and
mov
mov
dec
cs
push
or
jne
fcoml
sub
neg
pusha
push
gs
cmp
and
mov
jg
test
or
daa
out
mov
outsl
inc
or
lods
lock
add
scas
popf
clc
mov
sbb
aaa
in
repz
adc
xor
jl
push
fnstenv
inc
dec
push
jmp
add
cmpsb
inc
inc
mov
mov
mov
xchg
fcmovu
jl
clc
push
xchg
stos
imul
or
xchg
ds
mov
int
shll
xchg
and
or
repnz
add
loope
sarb
jne
inc
mov
lock
out
or
cltd
mov
iret
aas
xor
fldt
dec
stos
xor
sub
movsb
cs
cltd
jns
jg
stos
sahf
divl
jo
adc
adc
test
xchg
sub
in
fisttps
jmp
push
add
pop
dec
fisttpll
fstl
sbb
in
mov
test
jnp
clc
dec
mov
imul
lock
movsb
stos
xchg
mov
push
imull
out
sbb
mov
das
mov
push
adc
lret
sahf
shlb
xchg
je
adc
repnz
xor
ds
rorb
mov
rclb
adc
stos
xchg
iret
and
adc
mov
repz
not
mov
call
mov
lret
shrl
or
mov
stos
sub
mov
sub
cmpb
insl
addr16
lods
push
fsubrs
adc
jns
pop
jle
iret
jns
adc
mov
lcall
fstl
push
mov
xchg
jo
test
punpckhwd
mov
mov
and
add
ret
jge
test
shll
daa
jecxz
mov
inc
scas
mov
adc
outsb
lock
xor
enter
sub
mov
pop
into
outsb
outsl
das
xor
testb
pop
adc
js
ret
jb
cmp
adc
pop
sub
popa
dec
jae
fistl
jmp
dec
out
xchg
arpl
fdivl
inc
push
jg
mov
js
or
js
mov
xchg
popf
or
sub
cmp
repnz
jg
jecxz
imulb
or
mov
sub
movsb
in
insl
cmpl
pop
xchg
cmp
bound
xor
incl
push
lcall
int
and
pop
mov
rcll
aaa
lods
mov
stos
fstps
in
mov
xor
js
gs
mov
decl
sbb
repnz
inc
cld
test
sbb
lahf
pop
enter
repz
mov
popa
pop
sbb
test
nop
pop
lock
fcoms
mov
pop
nop
icebp
repz
fisubl
jmp
ret
lea
mov
mov
mov
shl
test
fldl
insl
outsb
lods
cmp
or
pop
or
bts
add
jmp
inc
repnz
jle
mov
xor
dec
test
mov
pop
jge
aaa
fwait
push
inc
xor
and
cli
cmp
xchg
adc
xchg
push
mov
push
adc
mov
ret
rorb
dec
cmp
addr16
imul
pop
push
push
outsb
popf
cltd
xchg
pop
adc
shll
dec
outsl
pop
fisubrs
xlat
arpl
pop
mov
movaps
sarl
data16
xor
add
xor
pushf
adc
out
test
cltd
movsb
mov
mov
imul
lods
xchg
mov
test
int3
cmpsl
or
in
push
in
xchg
repnz
add
leave
mov
jl
mov
dec
ficomps
mov
addr16
xor
pop
xor
jg
rol
and
cmp
add
sbb
stos
movsl
jae
and
aaa
addb
push
shr
xchg
dec
inc
cmp
bound
mov
jne
psadbw
imul
dec
outsb
out
jp
andl
or
xchg
nop
mov
adc
fdivl
jmp
inc
push
push
aam
jecxz
pop
push
cmp
sbb
aad
xlat
jmp
xchg
and
jmp
fsubrs
xchg
jl
mov
ss
jge
or
fisubrs
adc
fsub
pop
push
or
ret
popa
inc
into
inc
cmp
stos
and
or
data16
dec
xchg
sub
shrl
iret
xchg
in
xor
lret
clc
adc
test
jp
aam
lret
ss
arpl
xchg
outsl
xor
in
popa
pop
push
rcrb
mov
xchg
aaa
scas
xchg
mov
movsb
mov
jae
ss
inc
pop
ficoml
loopne
clc
xor
mov
cmp
gs
sbb
xlat
shrb
jmp
fwait
jno
xor
xchg
nop
fisttpll
sbb
lock
xchg
dec
lcall
movsb
popf
cmp
xchg
jne
ja
sub
jle
aam
call
fnstenv
dec
ss
inc
mov
dec
mov
dec
iret
mov
cmp
xor
imulb
mov
dec
xchg
pop
xchg
sbb
push
hlt
sub
inc
push
lds
rorl
mov
movsl
push
into
cwtl
stos
imul
cmp
mov
sbb
inc
fcmovnu
es
add
roll
pop
lahf
pop
call
nop
mov
and
and
xor
out
sbb
loopne
inc
mov
ds
mov
jne
sub
repnz
push
push
mov
test
jmp
add
std
lret
daa
stc
sete
jbe
push
xchg
ror
sbb
pop
inc
jae
xchg
mov
cmpsl
sbb
dec
push
fstl
inc
in
cmp
or
or
repz
out
movsb
shlb
jl
aas
loope
mov
je
rclb
xor
or
aam
cmp
inc
sub
mov
mov
clc
pop
int3
stc
addr16
jmp
imul
lret
cmp
xchg
and
cmp
xchg
sarb
inc
push
push
ds
cmp
mov
in
xor
pop
add
dec
adc
mov
mov
scas
mull
arpl
and
mov
xor
xor
out
jns
lcall
aas
paddw
push
outsl
inc
in
test
shl
pop
bound
cli
push
cltd
ja
mov
dec
stc
pop
rclb
sbb
xor
xchg
mov
sub
pop
jmp
scas
or
mov
mov
js
jae
mov
xchg
ret
or
pop
std
xlat
xor
mov
and
in
sbb
push
add
adc
lret
ret
ret
dec
push
push
fstps
addb
xchg
or
fimull
xor
sbb
dec
scas
je
shrb
mov
fsubr
iret
jns
push
stos
or
loope
or
mov
addr16
out
stos
mov
jns
mov
cmp
jns
sahf
xor
jno
nop
in
mov
jg
jb
popf
les
loope
imul
jge
fsubrp
pop
jmp
imul
pop
sbb
or
sbbl
enter
push
sub
fnstsw
in
xchg
jb
push
test
push
gs
fdivs
sub
lahf
fucom
or
test
cld
jmp
call
lea
pop
lcall
dec
lds
movsl
scas
add
mov
cmpsl
addl
mov
negl
in
out
adc
movsl
push
stos
loopne
into
test
jmp
aam
andl
or
push
and
movsl
xchg
add
adc
push
sub
add
mov
cltd
sub
loope
jno
jle
mov
inc
ret
addr16
out
jns
aam
lret
mov
inc
mov
inc
mov
nop
aad
bound
mov
pop
cwtl
call
pop
jo
mov
or
les
xchg
loopne
imul
xor
pop
cmp
cli
scas
out
xor
jmp
hlt
mov
lods
and
push
test
or
jmp
push
pop
lret
rcrb
out
ljmp
scas
sbb
repnz
push
rorb
push
pop
cld
mov
fs
adc
push
or
adc
dec
scas
jmp
dec
inc
or
sub
inc
mov
aad
jle
fistpll
and
test
sbb
cltd
sbb
es
push
add
fistl
push
inc
jg
push
inc
iret
xor
das
inc
xchg
sub
out
int
add
loop
in
enter
mov
movnti
sbb
push
push
leave
stos
addr16
mov
lret
in
push
push
pusha
inc
xchg
sub
cld
sbb
fwait
sti
pop
shll
sti
cmp
call
std
shll
push
icebp
je
xchg
sub
push
xor
popa
dec
in
cltd
aaa
push
enter
pusha
lods
add
pop
sbb
outsl
pop
xchg
xor
sbb
inc
movl
adc
xor
insl
xchg
ret
mov
sbbb
cs
aam
dec
cmp
mov
add
or
daa
dec
or
sub
dec
loop
cmp
out
push
cs
pop
lods
pop
dec
push
mov
mov
mov
push
rcrb
cltd
pop
dec
sub
or
pusha
rorb
pop
add
lods
inc
aaa
popf
notb
jns
cli
cmpsb
dec
call
test
outsb
mov
sbb
fimull
mov
loopne
cmp
cmp
cli
jp
or
sub
lods
out
sbb
int3
out
aas
mov
lahf
xchg
fadd
mov
cmp
out
cmc
xchg
stos
shlb
pusha
adc
mov
adc
mov
jle
nop
in
cmp
sub
push
dec
inc
dec
jle
out
leave
and
in
std
aas
in
in
xchg
divb
cmpsl
add
adc
loope
stos
pop
jmp
lock
inc
pop
rorb
cltd
fwait
mov
lret
jle
or
push
std
mov
shlb
in
fldenv
sub
out
enter
jmp
adc
fmull
sbb
push
mov
pop
lock
push
mov
or
int
xchg
add
dec
sbb
dec
push
incb
jl
movsb
mov
les
push
inc
mov
xchg
daa
jecxz
loopne
push
icebp
popf
jmp
sub
mov
and
ljmp
lret
rolb
dec
xchg
pop
dec
lds
cwtl
xchg
ficompl
xor
xor
fmuls
adc
mov
cmp
loope,pt
or
sbb
cmp
jnp,pn
inc
cmp
divl
xlat
movsl
mov
test
aam
dec
push
aam
xchg
mov
das
or
loope
ficoms
inc
leave
jnp
sbb
cmc
xlat
add
incl
inc
push
push
and
cli
orb
shll
or
mov
ret
dec
mov
in
test
negb
push
ja
jmp
xchg
mov
inc
bsf
sub
int3
xor
pop
jbe
fidivrl
ds
scas
pusha
lods
scas
pop
jecxz
mov
or
mov
push
icebp
movsb
dec
test
fwait
adc
test
jno
dec
bound
xchg
adc
das
cli
push
in
cli
leave
es
sub
dec
mov
push
gs
jno
nop
repnz
cwtl
inc
xor
adc
cltd
jo
inc
mov
cmp
in
mov
dec
mov
sbb
into
mov
fstpt
jae
iret
insb
xorl
mov
jb
xor
xchg
int
mov
and
repnz
sub
stc
jge
ret
cld
mov
imul
push
add
mov
add
mov
add
mov
pop
aaa
insb
mov
mov
int
imul
mov
aad
inc
rol
or
mov
push
lock
mov
pop
jnp
sbb
lret
dec
add
jno
scas
jp
inc
sub
js
repz
out
sub
sbb
popa
or
fisttpll
addb
call
pushf
pop
sbb
fs
cmp
xor
mov
jmp
dec
rorl
loope
fldcw
fs
mov
test
jmp
sbb
outsb
adc
orl
fldl
stos
dec
lret
inc
lcall
fistl
and
sub
cmp
inc
dec
icebp
test
jp
sub
sub
dec
xchg
aam
inc
mov
push
mov
mov
or
test
xchg
pop
adc
cld
sub
out
in
mov
jg
sub
shr
jnp
push
outsl
lret
mov
out
xor
enter
les
cmp
jae
popf
stos
xor
xchg
dec
clc
push
mov
cld
pop
loop
leave
mov
lret
add
cmp
in
out
pop
testl
jmp
push
mov
rcrb
movsl
lcall
ret
pop
ja
shrb
sahf
mov
cmpl
lretw
pop
adc
pop
inc
insb
sarl
push
cmp
jmp
ja
lret
les
dec
js
or
and
cmp
je
mov
mov
loop
aam
ret
movl
fidivs
pop
pop
mov
gs
test
sahf
mov
fs
daa
and
outsb
pusha
cwtl
xor
mov
data16
push
paddb
loop
pop
add
mov
shlb
jl
movsb
shr
mov
std
mov
push
push
xor
pop
or
sub
pop
jno
out
push
gs
ljmp
imul
in
and
imul
enter
leave
fst
shll
lock
or
fsts
mov
sbb
out
out
rorl
mov
inc
lret
ja
outsl
cmpsb
push
pop
adc
inc
cmpsb
rorb
lods
mov
mov
push
out
outsl
ffreep
xchg
call
aam
lds
mov
mov
pop
adc
mov
arpl
adc
xchg
dec
shrb
dec
sahf
pushf
cmp
imul
cmpsb
sbb
mov
insb
rcrb
inc
daa
aad
jl
cmp
xchg
sub
test
mov
leave
andb
mov
cmpsb
fmul
inc
fisubrs
adc
sbb
cmp
mov
add
dec
xchg
jmp
mov
call
jge
push
rorl
xor
adc
and
fldl
in
jp
xor
cmpsb
mov
mov
mov
mov
fbstp
icebp
mov
test
out
jne
mov
gs
imul
sbb
cpuid
lds
jmp
mov
in
push
in
repnz
cmp
ljmp
mov
mov
mov
jle
jp
pop
inc
cmp
int3
and
adc
push
out
adc
into
cmp
je
pop
sub
mov
cs
mov
dec
scas
inc
add
xlat
insb
cli
das
mov
dec
jns
pop
ljmp
and
leave
inc
cmc
dec
pop
nop
sbb
or
pop
push
xchg
sbb
movsb
aam
xchg
pop
or
out
iret
pushf
out
hlt
xor
leave
dec
lea
jge
ja
outsl
adc
or
repnz
cwtl
pop
mov
lods
scas
jmp
xlat
or
ljmp
push
cli
mull
mov
xadd
xor
popa
movl
loop
fmull
loope
pushf
inc
mov
test
push
adc
push
push
shrb
push
pop
push
gs
sub
mov
inc
ds
xor
rcl
xor
ss
ret
test
xchg
xor
or
or
stos
fstps
add
pop
fwait
in
mov
or
scas
addb
lahf
popa
push
imul
repnz
shl
cs
insl
pop
sub
sbb
in
hlt
arpl
aad
adc
mov
std
popa
xchg
loopne
fstps
and
push
xor
repz
insl
icebp
scas
mov
jb
lret
sub
or
inc
sbb
mov
shll
movsb
cli
shll
aas
sbb
xor
nop
outsb
pop
jnp
loop
iret
xlat
push
shll
or
sub
mov
add
clc
dec
jp
mov
and
js
inc
mov
push
cmovne
movsl
xchg
pop
jno
xchg
in
jo
xor
std
or
xor
pop
and
mov
mov
fistl
mov
mov
popf
dec
scas
lods
cmpsb
fwait
mov
out
in
fs
mov
add
les
pop
sahf
and
es
stos
jmp
ja
or
xor
fcompl
ret
stc
mov
jp
stos
push
lahf
xor
cmp
dec
icebp
xchg
and
xorl
push
inc
xchg
loop
insb
mov
add
xorb
jecxz
xchg
lret
fcmovb
cmp
xchg
adc
arpl
xor
jmp
cmp
mov
mov
insl
insb
dec
dec
cmpsb
sti
lock
cli
daa
jno
dec
and
sub
xor
adc
adc
xchg
flds
loop
sbb
movsl
test
leave
jb
or
sahf
js
ja
pop
cmc
insb
push
mov
sahf
push
push
dec
adc
ja
hlt
xor
sbb
les
and
mov
inc
xchg
or
lret
mov
mov
out
ficoml
incb
data16
loope
mov
rorb
decb
pop
mov
sub
test
in
sbb
ret
mov
mov
es
es
mov
jge
out
test
movsb
inc
test
xor
xor
les
clc
jg
lret
sbb
xor
lcall
scas
popl
pushf
xchg
xchg
nop
cld
sti
inc
sub
in
cmp
daa
mov
pushf
push
adc
cmp
in
insb
xchg
in
stos
out
mov
fs
xorl
xlat
sbb
in
mov
and
push
aas
aad
enter
or
jle
push
pushf
decb
lcall
imul
mov
mov
addr16
fnstcw
push
inc
xchg
lret
push
lea
inc
sbb
xlat
and
sub
cli
pushf
xchg
hlt
dec
jmp
or
push
sub
les
jge
sbb
xor
pop
rclb
xor
sub
mov
mov
cmp
inc
or
inc
mov
jl
add
add
jmp
mov
cli
and
cmp
bound
pop
out
mov
pop
xor
mov
js
aam
sub
test
pop
jb
push
add
loop
aad
sti
mov
out
ljmp
adc
ss
ret
mov
shll
mov
nop
adc
and
xchg
ret
push
xchg
leave
fdiv
pop
mov
push
adc
movsl
xor
ss
fwait
cs
ljmp
mov
arpl
mov
or
xchg
mov
jecxz
aas
fwait
repz
add
mov
iret
or
jne
mov
jmp
adc
jle
icebp
push
cs
mov
repz
cmp
push
pop
bound
movsb
rorl
stos
sub
bound
aad
adc
fwait
insb
hlt
add
pushf
add
xchg
cld
testl
loopne
push
gs
pop
out
jg
mov
mov
pop
pop
cmp
dec
and
repnz
cltd
lods
xchg
inc
push
xchg
mov
mov
pusha
iret
jp
syscall
mov
rcll
mov
xchg
repz
lea
mov
arpl
fwait
push
cmpl
aad
pop
insb
push
jecxz
add
iret
push
popf
xor
mov
ret
sti
sub
sbb
in
int3
rcrl
add
push
jae
in
pusha
lods
nop
mov
and
and
ja
cltd
call
lea
movsl
ficoml
loope
xchg
js
in
push
stos
dec
push
xor
imul
ljmp
es
cli
adc
or
mov
orl
pop
inc
fimuls
push
push
das
lods
test
or
xchg
sti
xlat
mov
mov
push
push
cmp
inc
ret
cmpsl
cmp
cmp
daa
lods
pop
loope
idivb
sub
insl
js
pop
sub
mov
jl
ss
movsl
imul
icebp
jp
xchg
int3
movsl
and
out
pop
test
enter
add
mov
mov
fstpl
pop
mov
jno
in
addr16
cmp
movsl
mov
fwait
ret
cmp
pop
sbb
enter
and
xor
in
repnz
shll
lds
fwait
scas
lcall
lcall
popf
popf
jmp
mov
sar
aaa
dec
flds
dec
jo
test
fsubs
mov
push
sub
pop
pop
inc
mov
addl
mov
ljmp
repnz
in
cmp
jns
lahf
dec
xor
out
dec
sbb
cmp
mov
sbb
and
bound
rclb
fcoms
loopne
pushf
rolb
push
loope
push
mov
or
into
and
lahf
xchg
sub
out
and
sbb
loope
push
lret
aaa
add
call
sub
movsb
aas
cwtl
fadds
or
cmp
addr16
mov
imul
mov
cltd
jns
popf
mov
or
mov
mov
pusha
jge
cli
jg
pop
loop
inc
cmp
cmp
jne
sbb
mov
ljmp
jbe
sbb
xchg
sbb
test
xchg
jbe
lahf
cld
imul
push
sahf
frstor
into
mov
ljmp
bnd
into
stos
aad
inc
popf
sub
or
clc
clc
out
into
and
cmp
aad
lcall
imul
es
and
mov
daa
lahf
push
daa
jne
popa
pop
mov
test
pop
add
mov
out
and
jb
fdivrl
jo
dec
cmp
mov
mov
dec
aam
xor
in
xchg
mov
cmpl
sbb
popf
scas
les
dec
cwtl
pop
inc
nop
test
movsl
fsubrl
pop
and
cs
and
mov
add
sub
lds
jb
ret
cmp
popf
enter
mov
fcoml
jb
cwtl
gs
movsb
inc
pop
fadd
xchg
pop
pop
push
scas
inc
fsts
and
push
mov
mov
jge
mov
xchg
ret
cltd
loopne
lahf
jp
pop
cmp
fs
xor
out
test
or
mov
shrl
or
jecxz
mov
arpl
lret
mov
cmp
sarl
fnstenv
mov
add
inc
pop
mov
cmp
sahf
push
mov
cltd
fdiv
push
popf
add
out
in
xchg
mov
or
xor
jb
into
lea
or
loopne
jb
ret
xor
xor
divb
jecxz
cli
rclb
push
popa
mov
mov
std
insl
dec
mov
fnsave
cmp
dec
cmp
std
cmp
inc
stc
push
sub
decb
lock
ss
adc
mov
sub
add
sub
out
add
xor
pop
sub
and
movsb
fcmovnu
xchg
jb
sub
arpl
dec
lret
popf
jl
lahf
mov
push
xchg
arpl
pop
add
sti
sbb
hlt
lock
cmp
mov
jae
ss
syscall
pop
arpl
cmpsl
cmp
jecxz
xor
fstpl
sbb
aam
and
daa
lcall
arpl
sub
xchg
test
fistl
enter
or
ret
divl
iret
lea
incl
ds
xchg
jl
cmp
pop
mov
sbb
xchg
mov
pop
dec
jp
mov
adc
mov
fstpt
sub
xchg
and
inc
inc
xchg
sub
int3
scas
inc
pop
popf
jnp
add
daa
in
jecxz
out
lods
fsubp
shlb
dec
ds
push
les
fsubrl
mov
fdivrl
jg
jge
and
ret
nop
pop
push
and
and
pop
jp
inc
lcall
aam
in
push
out
fdivs
mov
mov
mov
clc
pop
adc
or
xlat
ljmp
sbb
stos
fidivrl
cmpsl
mov
int
xor
ljmp
loopne
add
dec
pop
xor
cmc
xor
and
ds
dec
push
arpl
pop
pop
mov
out
or
sbb
pop
pop
sub
dec
jp
test
lret
jne
inc
stos
out
scas
das
fsubr
pusha
arpl
fcompl
sbb
cmpsl
ret
mov
adc
xchg
filds
and
fisttpl
mov
push
mov
aam
sub
and
inc
data16
inc
dec
mov
mov
dec
iret
movsb
push
ret
xchg
sbb
es
aaa
lds
mov
aad
enter
mov
dec
test
mov
jle
ret
loop
cmp
repnz
mov
push
jp
inc
xor
test
cmp
aam
add
pop
fldl
in
ret
scas
inc
aam
jl
add
cs
mov
je
fsubr
nop
mov
jne
call
ljmp
out
decl
push
mov
aas
sub
xchg
cmpl
sub
sar
lds
and
aaa
and
adc
cmp
push
mov
mov
imul
in
push
dec
inc
dec
push
in
addl
cmpsl
or
pop
dec
mov
enter
in
sub
jecxz
push
xor
dec
mov
ret
adc
jl
dec
pushl
pop
jb
sarl
add
dec
cli
lret
fwait
inc
add
mov
mov
leave
jge
push
movsb
pop
push
add
jb
pop
clc
mov
xor
mov
inc
mov
aad
mov
movsb
sahf
or
cld
lret
mov
int3
xor
mov
jbe
scas
jne
jl
push
clc
push
sub
add
pop
in
xchg
inc
and
sbb
jge
inc
pushf
mov
hlt
inc
pop
xchg
xor
jne
leave
test
push
jmp
fnop
out
dec
in
add
into
ljmp
into
pop
outsb
clc
jl
cld
stos
cld
lea
je
pop
movsl
in
out
mov
mov
fbstp
adc
decb
or
jb
sub
and
lods
jbe
lcall
sbbl
std
das
int
xchg
push
cmp
add
ja
push
jecxz
lret
inc
insl
vpaddsw
mov
xor
inc
adc
cmp
cmp
inc
jno
push
icebp
or
xchg
push
mov
fs
in
inc
jb
or
idiv
pop
std
xor
loopne
loop
sti
test
jae
sarl
mov
movsl
inc
cld
and
jns
mov
xor
push
outsb
pop
cmp
and
adc
mov
mov
mov
dec
jmp
sub
js
repz
sbb
cmp
jecxz
cli
cmpsb
jecxz
inc
dec
sbb
push
or
imul
movsb
cltd
jecxz
in
aad
sbb
scas
jnp
push
xlat
lahf
mov
enter
jl
shll
int
movsl
pop
mov
mov
adc
je
pop
inc
stc
lret
jno
xchg
jle
ror
and
cmc
mov
sub
jl
cld
scas
aad
sub
sbb
insb
add
sarl
in
enter
je
scas
jns
dec
pop
lods
stos
pop
xor
imull
sahf
adc
iret
lret
cld
and
cmc
idivb
mov
cmpsl
mov
mov
xchg
sub
pop
mov
cmp
daa
sbb
sub
xchg
push
js
mov
mov
inc
clc
push
jno
xchg
adc
test
jmp
push
movl
outsb
dec
dec
ret
mov
adc
jae
and
sbb
push
sti
cmp
sub
push
cmpsb
pop
sub
add
mov
mov
pop
push
xchg
push
inc
xor
add
xor
xchg
js
subb
add
stos
loopne
ljmp
xor
jbe
mov
jns
insl
or
inc
dec
inc
xchg
leave
shl
jbe
xchg
inc
xor
dec
fdivr
popf
sbb
adc
ret
mov
scas
aad
xorb
add
fstpl
loop
js
jmp
fstpl
loopne
stos
jle
js
xchg
rorl
jo
xchg
mov
add
popa
out
push
push
ret
jo
cltd
idivl
dec
push
sbb
jl
jecxz
push
shrb
cmpb
les
mov
xor
mov
add
mov
xchg
lea
dec
dec
pop
les
les
and
push
outsl
ja
dec
inc
fs
mov
sar
mov
sti
xchg
xchg
fwait
mov
cli
dec
ja
mov
mov
mov
xchg
cmp
fwait
inc
out
in
mov
dec
ss
lds
push
daa
test
daa
shlb
push
jnp
xchg
xor
cmp
push
sbb
cmp
clc
je
dec
sbb
andl
outsb
sbb
mov
pop
mov
xchg
aaa
rclb
in
inc
jp
je
bound
fwait
arpl
inc
add
stos
sbb
rcr
jbe
sub
jo
xchg
inc
mov
sub
mov
outsb
mov
add
add
xchg
mov
int
ss
mov
and
in
imulb
pop
das
or
jno
insl
and
inc
lcall
jge
jecxz
call
mov
or
leave
sarl
into
jae
das
dec
add
loop
mov
mov
jp
insl
fucomi
sub
fstpt
dec
popf
add
arpl
pushf
jmp
adc
mov
mov
dec
cmpsb
sbb
mov
fsubrp
push
lret
nop
pop
cmp
mov
xor
push
sub
dec
out
sbb
rclb
fildl
decl
mov
mov
aaa
popf
lds
pop
mov
addr16
in
sti
xor
mov
xchg
xchg
mov
and
in
lock
mov
rcrl
lods
mov
cwtl
push
xor
push
adc
imulb
loop
and
or
jecxz
sbbb
inc
jecxz
dec
inc
pop
std
arpl
lea
clc
cs
movsl
push
into
aas
lret
push
pop
shlb
cmpsb
mov
jg
mov
jbe
xor
sub
movsl
xor
mov
xlat
ficomps
outsb
dec
rcll
jg
xor
dec
pop
stos
mov
stos
mov
scas
inc
inc
cmp
push
mov
jmp
jne
sarb
mov
rol
add
mov
mov
dec
cmp
dec
in
or
decb
loopne
test
int3
repnz
lret
sub
adc
and
inc
inc
push
stos
xor
cmp
mov
loop
xor
lods
gs
mov
insl
mov
cltd
les
xor
stos
adc
arpl
cmp
ds
xorl
test
mov
adc
mov
cmpsl
shlb
xchg
lea
adc
xor
and
lahf
and
jo
add
shlb
dec
enter
cmc
repnz
lock
mov
stos
jae
xchg
lds
or
pop
mov
push
fs
test
push
jmp
outsl
shrl
lods
mov
mov
pop
sub
xchg
pop
adcl
xchg
mov
cwtl
dec
and
or
aad
ret
xchg
fsubp
aaa
fmuls
mov
cltd
std
and
movsl
cmp
andl
push
push
inc
pop
sbb
pushf
aas
clc
xchg
sub
mov
fisubl
xor
inc
std
xchg
push
loopne
mov
pop
mov
mov
xchg
pop
movsl
stc
test
in
and
fs
imul
add
push
fnstenv
stc
sub
ljmp
iret
push
arpl
push
pop
add
in
dec
xchg
jl
pop
lods
or
daa
push
stos
stos
mov
addr16
adc
insb
and
mov
sahf
mov
xchg
lds
mov
jnp
xor
sub
adc
adc
xchg
mov
mov
push
mul
jno
sarb
dec
pusha
mov
sbb
inc
push
add
jmp
mov
sub
adc
pop
sarl
into
or
sbb
sbb
repz
jp
pop
movsb
loop
push
cmpb
js
lea
bound
aaa
test
mov
lea
jnp
mov
xor
outsb
outsl
pop
dec
dec
push
adc
push
flds
out
or
dec
adc
mov
subl
mov
test
frstor
jnp
data16
icebp
test
jne
dec
add
jle
push
and
lea
repnz
dec
jp
cltd
push
movsl
popa
stos
or
mov
mov
sahf
in
loope
cmp
or
mov
psllq
mov
cld
xor
test
arpl
sub
push
fs
fistpl
fistpll
iret
fdiv
sub
pop
mov
sti
fdivs
stos
mov
jb
int3
enter
outsl
add
sub
add
jg
rcrl
cmpsl
out
ss
stos
hlt
test
outsl
repz
mov
jecxz
pop
leave
dec
js
add
cld
stos
aas
add
sbb
add
sbb
ficoms
aad
je
cmpsb
mov
out
xor
push
ss
cs
sbb
movsb
gs
xor
and
incb
pop
out
jecxz
sbb
dec
or
out
andb
xor
repz
fimull
pop
sbb
sub
cmp
dec
lcall
scas
and
call
lock
jp
inc
cmpsl
ret
push
je
jb
xor
xor
pop
sbb
jns
pop
mov
mov
test
mov
jp
lock
out
and
xlat
into
sbb
jne
pushf
cmp
jmp
dec
sarl
jmp
dec
ds
ds
mov
jp
es
adc
inc
cld
mov
pop
inc
mov
lcall
int
xchg
inc
call
xchg
lret
rcll
push
push
sbb
cli
xlat
xchg
jne
jecxz
jp
jmp
inc
sub
jle
xchg
xchg
adc
mov
popa
je
push
stos
subl
popa
movsl
mov
pop
pushf
mov
or
popf
push
out
push
fcoms
xchg
ret
xchg
sarl
pop
dec
mov
push
or
mov
iret
scas
insl
jecxz
mov
jno
nop
jecxz
flds
lret
arpl
and
pop
repnz
jne
testl
test
dec
negl
lret
jg
jmp
add
xor
lret
les
imul
hlt
fildll
adc
jno
dec
mov
dec
in
xor
mov
mov
push
push
mov
mov
and
outsb
es
sub
jns
stos
pop
pop
mov
call
cmpsb
adc
mov
jo
data16
push
jns
out
xorb
push
cld
imul
xchg
xchg
fidivrl
scas
enter
mov
push
pop
pop
repnz
push
outsb
xor
fwait
vporq
lods
inc
stos
push
lret
movsb
jmp
arpl
fistps
in
in
add
add
sbbb
ror
shrb
lock
jae
jl
cltd
iret
movsl
xchg
mov
dec
mov
iret
fimull
fisttps
and
mov
mov
es
movsl
mov
hlt
sbb
mov
mov
and
mov
icebp
mov
cltd
jae
shr
push
js
mov
inc
imul
dec
xchg
dec
das
adc
mov
sub
ret
sub
mov
ss
inc
xchg
mov
sti
movsl
cmp
mov
cmp
cwtl
mov
mov
jl
mov
fcompl
mov
cmpb
inc
adc
in
stc
push
push
jmp
cmp
xlat
xchg
imul
fisubl
hlt
sbb
fldenv
push
lods
dec
mov
jge
iret
add
ret
inc
push
ja
lret
inc
lds
cmp
loopne
or
out
lret
sbb
int
dec
push
push
aam
sahf
adcb
or
imulb
push
mov
rcr
shlb
sub
ret
or
mov
scas
or
mov
push
mov
das
xor
aaa
cmp
iret
mov
xchg
imull
pop
je
test
sbb
push
jbe
push
bound
ficoms
mov
jmp
jae
ret
int3
nop
daa
xor
adc
out
jns
outsb
lock
adc
fsubrl
bound
popa
call
mov
mov
lods
xor
rorb
out
shrb
mov
popf
xchg
inc
or
xlat
sbb
sub
popa
inc
mov
sub
and
hlt
push
insb
push
aas
mov
and
out
mov
adc
xchg
push
add
push
push
xor
xlat
mov
hlt
movsb
lea
inc
sbb
xor
mov
sub
lods
popa
add
push
test
mov
jnp
jae
ror
js
adc
sbb
loop
pop
arpl
gs
fs
cmp
ds
cli
jb
fimuls
or
mov
scas
ds
dec
sub
add
in
nop
dec
jbe,pt
xor
xrelease
inc
jae
les
mov
cmpsl
jns
test
xchg
call
psrad
pusha
mov
xchg
idivb
repnz
push
sahf
xchg
dec
js
cmpsl
les
inc
and
inc
shll
je
push
out
adc
push
adc
js
add
ja
push
idivb
pop
mov
dec
popa
ds
lds
mov
mov
nop
aad
add
sbb
sub
cmp
scas
push
icebp
pop
mov
jmp
mov
sub
cmpsb
inc
xchg
push
icebp
test
sahf
in
movsb
inc
jns
push
notb
add
fwait
cli
xor
unpckhps
fldenv
add
sub
xchg
dec
sti
inc
inc
and
int
xchg
stos
push
divb
adc
dec
leave
mov
icebp
jne
mov
cmc
push
sbb
shl
xchg
out
cmp
adc
push
lods
daa
cmp
sub
mov
mov
mov
dec
fmul
inc
adc
dec
les
xlat
jg
in
dec
pusha
in
je
pop
cmpsl
or
mov
scas
xor
jecxz
pushf
les
aas
xor
int3
lcall
mov
js
stos
ret
outsb
xchg
xlat
cmp
clc
in
addr16
lds
into
adc
jno
cmpsb
pusha
pop
insb
jp
popa
out
and
aad
or
cld
fsubr
cld
mov
push
and
push
scas
inc
frstor
mov
inc
cmp
inc
pop
es
mov
sbb
roll
call
sti
sti
dec
xchg
lcall
sbb
mulb
cmpxchg
pop
or
or
mov
or
fcoml
mov
fmul
sub
out
int3
pop
arpl
pusha
or
outsl
gs
mov
and
pop
pop
call
sahf
sub
pop
dec
add
xchg
clc
repz
cmpsb
loop
dec
jl
pop
dec
lret
mov
push
inc
dec
cmove
addr16
jge
mov
cltd
pop
jno
and
jb
int
jge
loop
jae
ret
jg
scas
mov
repnz
js
icebp
sub
jg
push
fwait
cwtl
inc
xor
adc
inc
cmpsl
mov
inc
push
add
ljmp
ret
xor
icebp
sti
aad
dec
cltd
cs
fs
stos
xorb
lock
aas
stc
pop
mov
mov
mov
mov
stos
jmp
sbbb
aam
in
dec
sbbl
jne
ss
inc
add
lock
in
xchg
stos
push
inc
pop
insb
cmpb
clc
aaa
insb
in
sub
cltd
stos
push
shlb
pop
popf
xchg
rolb
popf
cwtl
cmp
int3
cmpsb
je
push
mov
js
das
scas
sub
in
fcoml
adc
int3
add
jge
clc
addb
clc
cmpsb
xchg
push
xchg
lds
call
repnz
call
nop
shlb
loope
cmp
sti
sarb
xchg
fdivs
std
loope
iret
mov
sbb
sub
and
push
aad
jg
mov
popa
sub
mov
adc
in
ret
or
xchg
test
or
push
mov
mov
fwait
dec
jne
sbb
mov
pop
cmp
mov
test
or
adc
xchg
shl
fsubl
mov
sbb
idivb
jno
and
popf
shll
dec
xor
lcall
test
fnsetpm(287
xor
leave
xchg
jo
and
test
in
and
cmpsl
push
mov
dec
repz
jp
mov
lods
mov
mov
sub
xchg
inc
adc
pop
clc
jmp
add
rcl
push
xchg
and
inc
lds
jecxz
mov
leave
pop
in
aad
push
push
pop
sbb
outsl
xchg
pop
popa
mov
mov
pop
mov
in
xchg
ret
pop
and
insl
test
xor
test
xor
mov
aas
jo
mov
loopne
pop
sub
jp
jns
fisubl
pop
shlb
pop
addr16
shr
jge
movsb
mov
outsb
sub
imul
shll
push
jle
inc
stos
mov
xchg
das
fildll
xchg
jns
and
add
sub
adc
jae
jb
jnp
cltd
sub
cli
dec
or
fsts
xchg
add
stos
sbb
mov
mov
int3
mov
rclb
shrb
leave
push
icebp
jle
sbb
xor
and
mov
cld
aas
or
and
dec
jbe
out
cmpsl
push
and
cmc
dec
mov
mov
in
pusha
shll
and
mov
es
ss
or
pop
jmp
xlat
les
push
out
out
inc
shlb
jmp
add
xlat
sub
roll
xchg
xchg
cmpsb
mov
mulb
test
and
jbe
mov
addl
fcmovnbe
add
scas
inc
adcl
jo
and
fbstp
mov
and
sbb
xorl
mov
jns
aam
mov
inc
jmp
scas
mov
xchg
inc
cmp
jo
hlt
fsubrl
add
stos
mov
outsl
dec
push
lods
and
sub
es
std
pop
aaa
scas
jecxz
mov
mov
mov
push
sub
or
or
xor
andb
xlat
adc
fdivrs
cmp
mov
mov
cld
dec
sbbb
ljmp
movsb
xor
lods
ds
mov
or
or
repnz
and
daa
nop
jecxz
xchg
push
cmc
aam
inc
or
aad
repz
adc
mov
jno
sbb
sbb
orl
push
jl
aas
int
pop
fdiv
xchg
and
pop
push
mov
sub
push
dec
in
xchg
sub
xlat
sub
stos
lds
jge
repz
inc
add
fucom
cltd
mov
imul
jno
fwait
inc
pop
dec
push
addr16
sbb
adc
inc
je
fbstp
adc
fsubrs
jbe
in
hlt
dec
mov
jnp
fcomip
xor
jmp
xchg
xchg
loop
mov
mov
pop
call
fcmovu
or
adc
loopne
xchg
xor
fidivs
das
mov
popf
and
add
xchg
cld
sub
add
push
lea
mov
jle
dec
xchg
sbb
pop
rcrl
mov
xchg
mov
mov
inc
pop
xchg
pop
idivl
mov
cmp
push
lock
out
fsubs
outsb
in
xor
lods
rcrb
or
xor
loope
imul
jmp
outsb
lock
sub
lahf
ja
aam
das
xlat
jecxz
lahf
dec
es
mov
jb
dec
add
or
pop
outsb
mov
mov
or
jg
and
ss
push
add
stos
xchg
adcl
mov
subb
inc
xor
push
mov
repnz
lcall
test
stos
sbb
push
outsb
lods
insl
pop
test
clc
sbb
xchg
jo
and
loope
shl
push
imul
lret
dec
iret
inc
dec
or
xchg
dec
test
sub
dec
sub
loop
mov
xor
ret
adcb
int3
sub
popa
jecxz
pop
decl
mov
mov
mov
jo
xlat
jbe
mov
xchg
aam
sbb
test
xchg
or
pop
in
add
mov
int
push
mov
dec
ljmp
sub
in
push
inc
cwtl
shll
pop
aam
mull
sbb
xchg
sbb
js
jp
repnz
leave
imul
data16
notl
and
and
cli
cmpsl
and
les
jne
adc
cmp
scas
mov
test
inc
mov
mov
lods
add
mov
sbb
xor
xor
imulb
inc
movb
sbb
pop
shll
jne
test
nop
mov
rcrl
nop
test
insb
into
push
inc
mov
scas
mov
out
addr16
gs
lock
mov
scas
push
push
lahf
inc
les
jne
jp
pop
in
or
and
or
or
cmp
stos
in
push
hlt
imul
xchg
cmp
add
push
xchg
je
xchg
sub
inc
daa
stc
mov
xor
adc
pop
push
pop
push
xor
pop
lock
leave
outsb
add
hlt
fmul
xchg
pop
xchg
shlb
pop
pop
scas
dec
sub
cs
sbb
jecxz
loop
xchg
cmp
jbe
adc
dec
push
jo
jecxz
repz
mov
test
xchg
sub
mov
ds
loop
add
push
mov
minps
or
mov
adc
mov
cltd
mov
nop
out
or
mov
inc
or
pop
push
mov
jmp
cmp
mov
mov
sub
ficoml
adc
nop
adc
mov
fldl
mov
jo
add
mov
push
inc
gs
int
mov
lods
or
rcrl
mov
adc
cltd
push
jb
gs
mov
cmpsb
je
and
push
and
sub
and
and
daa
pop
cli
lods
lret
add
in
push
push
cmp
out
xor
sbb
mov
jbe
mov
inc
push
fldcw
inc
xor
xor
adc
scas
shll
adc
dec
inc
mov
daa
dec
jo
in
inc
les
mov
mov
aad
jae
cmpb
das
or
add
stos
enter
sbb
or
push
popa
mov
es
and
pop
cmp
xlat
dec
push
popa
mov
adc
sub
jbe
int
or
pushf
out
mov
cmpl
adc
mov
xorb
inc
jp
jl
mov
mov
js
inc
add
or
push
iret
addr16
and
aad
in
pop
imul
sub
lods
mov
out
cmc
cmp
sub
push
mov
inc
mov
cmp
orl
outsb
sub
shlb
aad
xorl
loopne
mov
sbb
inc
mull
cmp
shrl
lret
testl
xor
repnz
test
push
xchg
jp
xor
jge
popf
push
sbb
rcll
jnp
cwtl
aad
add
pop
fsubrl
xor
cmpsb
sahf
push
dec
mov
cmpsb
sbb
fldt
xchg
add
cmc
jg
addr16
bound
push
mov
sbb
sub
daa
jnp
nop
insb
pop
imul
sub
jbe
add
repz
popa
addr16
in
js
ret
and
jle
xor
and
pop
pop
rol
push
lret
adc
mov
stos
cltd
push
rcrb
inc
inc
lcall
and
push
xlat
insl
data16
test
outsl
inc
xor
pop
and
test
lds
sbb
mov
gs
pop
das
stos
xchg
xchg
repnz
inc
pop
jge
leave
jmp
cmpl
ljmp
adc
mov
test
mov
daa
inc
dec
popf
out
pusha
es
mov
das
in
pop
in
xchg
pusha
dec
cmpsl
aas
hlt
ljmp
fisubl
push
lods
mov
inc
jg
clc
pop
lahf
ss
dec
mov
lods
outsl
mov
arpl
rclb
push
sbb
rcll
pop
jno
xchg
lods
or
addr16
icebp
repz
inc
inc
inc
rorb
pop
mov
pop
xchg
sub
push
daa
jge
adc
sbbb
lods
test
std
repnz
pop
inc
pushf
pop
pop
mov
icebp
xchg
cmp
inc
icebp
in
sbb
movsb
push
jne
movsl
push
fwait
sub
adc
in
and
push
and
pop
cmc
sub
jno
jle
xchg
or
or
xor
or
lret
add
sbb
push
mov
sub
inc
cwtl
rcll
xor
push
je
into
add
aas
dec
mov
mov
aas
mov
loope
fs
jnp
inc
dec
xor
imul
xlat
or
ss
xlat
inc
mov
sbb
iret
cltd
sti
push
enter
loop
insl
outsb
pusha
fs
xor
rcl
mov
ja
divb
shlb
insb
push
lret
cmpsb
loope
mov
inc
inc
mov
pop
ret
push
xlat
jbe
in
inc
fiaddl
mov
sti
loop
xchg
cmp
add
add
pop
xchg
push
sarl
xor
pop
ss
cmp
in
mov
shlb
pop
xchg
shrb
aam
in
push
lods
popf
addb
mov
sub
imul
inc
mov
xchg
adc
sti
sbb
insl
imul
jns
dec
scas
arpl
push
xchg
xchg
sbb
cltd
rcll
subps
mov
push
out
mov
push
jmp
incl
adc
les
push
cmpsl
mov
bound
mov
imul
rorb
in
fdivrl
add
sub
fidivrs
xchg
and
icebp
push
sub
pop
les
lret
jno
xchg
sbb
xlat
sub
xchg
xor
xchg
pop
pop
push
cmpl
add
in
adc
dec
repz
movsb
and
lds
push
popa
cmpb
jo
pushf
jnp
jl
pusha
loopne
fisubrl
insl
xchg
sub
sbb
lret
lods
sub
add
div
xchg
popf
test
lods
mov
pop
daa
fistpl
add
add
fs
cmpsb
push
sbb
and
hlt
push
cli
mov
adc
mov
mov
xchg
xor
dec
mov
mov
divl
dec
mov
push
jno
mov
sub
push
xlat
mov
mov
inc
stos
xchg
fs
pop
icebp
sti
mov
pushf
aam
jbe
js
add
jl
inc
jp
lahf
hlt
mov
aam
nop
test
adc
adc
push
aam
popf
push
fsubl
int
stos
js
cmpsl
cmp
sub
cmc
mov
loopne
xchg
push
call
jnp
pop
insl
sbb
out
push
mov
pop
sub
and
out
xchg
ret
mov
jb
insb
sbb
add
out
daa
scas
xor
xor
mov
stos
mov
mov
fucomp
or
adc
insb
mov
cltd
and
sbb
frstor
fldenv
movsl
jno
int3
icebp
cld
sub
scas
inc
fimull
mov
push
sub
jle
clc
xlat
cld
xchg
addb
pop
movsb
insb
rcrb
jb
mov
add
or
inc
addr16
dec
ret
cltd
in
repz
push
dec
xor
test
fldcw
or
rorl
and
repz
sbb
mov
fs
mov
sbb
mov
clc
stos
ret
sbb
ja
data16
int3
add
in
add
rorl
sub
xchg
sti
dec
test
add
std
pop
test
popa
mov
adc
xchg
xchg
push
and
idivb
shr
ljmp
jp
pop
mov
xchg
ljmp
push
mov
add
mov
add
ds
shlb
aaa
jle
fsub
push
and
ret
pop
mov
mov
cmp
into
dec
daa
push
adc
int3
adc
pop
cli
and
out
push
dec
xchg
cld
popf
mov
outsl
fistps
stc
int
les
inc
iret
inc
and
lahf
stc
jmp
jb
fmuls
in
lcall
mov
cmp
push
aas
data16
pop
imul
movsl
out
in
sbb
into
lds
mov
mov
sbb
adc
dec
test
sbb
test
add
stos
push
call
test
pushf
stos
inc
sarb
fsubl
lods
filds
pushf
roll
cmp
pop
mov
pop
mov
dec
in
sbb
stos
test
mov
sub
adc
and
leave
push
add
cmp
lret
push
cmp
push
jle
and
ret
pop
add
leave
jbe
jmpw
mov
push
or
cmpsl
test
outsl
or
dec
cli
mov
xor
aad
sbbl
fsubs
lahf
inc
mov
pop
dec
mov
jb
dec
sub
dec
inc
sub
fucomp
pusha
test
pop
aad
movsb
mov
loop
push
ret
in
stos
leave
insb
fnstcw
sbb
xor
mov
mov
orl
insl
arpl
sahf
stos
mov
subl
adc
adc
cmpl
sbb
mov
sub
mov
mov
jns
mov
adc
jne
gs
mov
mov
mov
fwait
cltd
push
ds
sti
les
sbb
jge
and
cli
mov
sub
xor
xor
stc
sahf
movb
movsb
mov
cmp
xchg
arpl
mov
push
dec
xor
cmpsb
std
adc
adc
out
sub
pop
jg
inc
daa
inc
mov
test
cmpb
stos
fs
jno
or
jmp
inc
inc
cmp
inc
stos
test
mov
ljmp
sub
je
or
movsb
mov
mov
mov
xchg
shl
iret
mov
dec
fdivs
or
inc
div
mov
xchg
jb
jnp
iret
fidivrl
inc
or
inc
dec
sti
adc
push
jae
repnz
mov
and
mov
xor
shl
ljmp
shr
sub
aad
sbb
add
into
aad
xor
loopne
ds
into
pop
and
mov
push
mov
adc
cmp
sbb
and
insb
inc
into
in
rcr
sub
mov
mov
arpl
scas
xchg
orl
jl
xchg
and
jns
mov
xchg
int3
sub
daa
pop
mov
inc
sbb
or
cmpsl
fildll
sbb
rorl
mov
js
inc
mov
in
jmp
mov
xor
mov
sub
gs
in
push
add
mov
ja
pop
arpl
sbb
stos
push
jnp
push
imul
jb
mov
aas
sbb
repnz
mov
push
push
adc
inc
push
aam
inc
scas
flds
mov
imul
jo
add
mov
call
mov
pop
loop
add
mov
adc
push
aas
add
or
call
stc
xor
test
xchg
inc
sub
pop
cmp
fcmove
adc
fwait
mov
xor
rolb
mov
pop
xor
sbbb
outsl
xor
loopne
out
stc
stos
idivb
in
sub
push
int
pop
outsl
shr
or
sub
in
outsl
in
mov
add
fnstsw
call
out
jl
dec
cwtl
cld
dec
leave
sub
arpl
add
out
fistl
or
push
cmpsl
and
lods
dec
jns
cld
pop
dec
push
mov
test
ds
jmp
sub
mov
mov
inc
cmp
nop
in
push
push
std
push
in
push
sbb
push
sbb
jne
sti
cmpsl
hlt
xor
push
or
sbb
or
sub
ss
xchg
mov
cmp
jmp
sub
jmp
adc
sub
push
inc
xchg
fsubp
rolb
imul
lock
aad
xchg
out
cmp
lret
mov
es
cwtl
add
push
jns
lret
cmpsl
jo
test
dec
sbb
jecxz
arpl
sub
fisttpll
xchg
test
push
out
rclb
xor
or
add
xor
ds
pop
fmull
xor
out
leave
insl
aad
into
pop
xchg
mov
inc
lahf
negb
std
lret
movsl
or
mov
mov
shr
mov
loope
clc
jecxz
sub
mov
or
mov
cmp
imul
push
xor
arpl
pop
stc
sbb
jb
sbb
cmp
pop
push
jecxz
lods
stos
push
je
lods
sub
xor
aam
clc
cmp
les
and
fsub
cld
add
stc
aaa
aas
in
inc
mov
sub
mov
pop
mov
into
call
dec
imul
push
push
sahf
push
mov
fstpt
sarb
lret
dec
push
das
mov
mov
mov
and
ret
outsl
mov
cltd
push
cmp
imul
insl
push
pop
jno
fidivrs
xchg
cs
adc
movsl
mov
mov
and
mov
repnz
sbb
ljmp
push
fs
pop
jmp
xor
cli
in
fs
sub
fisttpll
in
loop
or
and
mov
je
jno
imul
movsb
int
push
inc
pop
test
lods
xchg
xchg
shll
pop
xchg
in
ja
lret
xchg
ds
pop
lret
ja
inc
jae
je
rcrb
adc
push
das
push
rolb
jb
sub
jne
jns
dec
inc
push
xchg
cltd
ret
mov
mov
pushf
insl
add
paddw
cli
fscale
dec
xor
aas
fwait
adc
fistpl
loopne
push
lahf
cmp
loope
mov
dec
cld
orl
sbb
stc
dec
fstl
or
xchg
push
inc
and
jmp
stos
and
jb
adc
cli
mov
loop
add
stos
dec
inc
jp
sub
pop
and
bnd
lock
jmp
jge
inc
xchg
xchg
les
xor
aas
movsl
pushl
loope
xchg
pop
ret
pop
jae
jno
fsts
cmp
cmp
ds
setne
sub
arpl
xlat
dec
jecxz
pop
movsl
je
in
mov
xor
dec
cltd
inc
arpl
repz
xor
inc
sti
mov
mov
repz
icebp
sbb
scas
cmp
rorl
rolb
outsl
jle
jp
add
scas
sbb
and
cmc
les
mov
addr16
add
pop
pusha
adc
imul
xor
or
icebp
cld
xlat
or
cmp
int3
movl
xor
shll
mov
sbbb
jno
addr16
daa
test
add
stos
lea
lret
mov
push
enter
cs
xchg
scas
pop
xchg
lds
cmp
test
adc
js
push
repnz
inc
mov
in
iret
fists
idiv
inc
jb
ja
mov
dec
jo
test
mov
mov
repz
fldcw
gs
aam
icebp
jno
call
subl
movsl
ret
cmp
int3
or
xor
add
mov
imul
out
inc
lods
pop
and
fcom
add
mov
scas
inc
xor
ret
sti
xchg
sti
aas
ljmp
shlb
dec
sbbb
stc
sbb
push
pop
cmp
fs
aaa
sub
int
stos
xchg
cmpsb
jl
jg
or
adc
cwtl
insb
lea
addr16
jb
push
fbld
and
or
lods
mov
adc
sbbl
mov
jmp
insb
repz
mov
nop
mov
in
loopne
fsubp
mov
push
fistl
mov
outsb
shr
mov
repnz
sti
sbb
push
cmp
inc
lock
pop
xor
out
mov
ficoml
mov
jnp
popf
jmp
out
fstps
inc
dec
nop
test
stc
jge
sub
mov
dec
lods
push
out
mov
fsubs
sti
test
xor
lahf
xor
sbb
enter
cmc
jg
jnp
sub
aad
cmp
test
dec
pop
lock
pusha
xchg
stos
xor
jbe
loopne
mul
shlb
in
cmc
adc
loope
add
add
mov
daa
loopne
jb
cmp
adc
lods
xor
xorb
pop
fucomp
nop
gs
repz
jl
mov
div
push
repnz
xor
pop
popa
movsb
jmp
lea
inc
loopne
imul
mov
mov
icebp
nop
dec
mov
xor
sub
mov
xchg
mov
push
clc
cmp
lds
cwtl
jns
inc
stos
mov
pop
pop
aas
leave
cmc
mov
and
pop
mov
lods
ret
pop
sub
lock
orl
fldcw
pop
and
sub
mov
and
push
sbb
pop
fucomip
subb
push
std
sub
or
xchg
std
insb
jg
jo
loop
cld
ljmp
sbbb
out
lock
fnstsw
inc
ja
pop
rolb
and
adc
sub
mov
stc
ss
jp
jg
cli
mov
dec
jnp
sbb
sub
jle
fildll
push
lahf
shlb
cwtl
popl
push
daa
and
mov
xchg
rolb
xchg
movsb
mov
dec
lods
sub
popf
pop
cs
pusha
setns
lds
shrl
xor
cmp
repnz
jmp
hlt
popf
sbb
sbb
push
data16
mov
mov
pop
dec
and
inc
into
popa
shrl
out
sub
adc
jge
aad
in
outsb
mov
pushf
dec
jae
hlt
cwtl
inc
pop
cs
xchg
mov
jae
enter
pop
mov
loop
mov
add
sub
sbb
roll
push
test
fstpt
xchg
fiaddl
ds
ret
stos
and
xchg
pusha
mov
aad
sbb
stc
fistpll
lds
in
pop
jmp
mov
pusha
pop
xor
pop
pop
xchg
xchg
dec
pop
int
push
cmpsb
inc
dec
lret
test
mov
orl
aam
out
push
movsb
data16
fisttpll
inc
add
mov
gs
fnstcw
in
stos
mov
dec
add
cli
mov
and
xchg
clc
inc
sub
adc
lds
mov
dec
lahf
icebp
xchg
out
test
imul
shlb
lods
cmpsb
loope
cmpsb
gs
push
sbb
test
mov
jge
movsl
push
dec
inc
and
or
cmc
mov
xor
mov
mov
push
lret
sbb
sarb
rcrb
pop
mov
push
xchg
aas
mov
adc
jle
or
cmp
add
or
cmpsl
jo
ret
out
test
jo
sbb
iret
and
adc
dec
add
or
and
push
into
fdivrs
mov
pop
sub
xchg
or
les
testb
dec
insb
push
push
testl
sbb
arpl
push
sub
nop
xlat
aaa
mov
rorb
mov
and
scas
xor
mov
scas
mov
repz
mov
scas
insb
stc
xor
or
push
lret
xor
popa
popf
cltd
dec
add
mov
aam
pop
push
fistpll
inc
adc
icebp
xchg
std
sti
adc
mov
mov
sub
sti
xchg
dec
lret
paddsw
popf
cltd
stos
insl
push
das
int
cmpsl
inc
xchg
fwait
outsl
or
fmul
dec
lea
xor
mov
xchg
fsubl
xchg
pop
push
or
aam
cmp
or
pop
xchg
frstor
into
out
pop
imul
jmp
test
xchg
jbe
sbb
lock
lret
das
imul
add
mov
stos
mov
mov
adcb
jmp
cmc
sahf
lods
mov
cs
and
xor
in
addr16
add
xor
mov
jns
test
int
and
ss
sarb
sbb
pop
add
hlt
inc
sub
mov
push
les
scas
mov
and
in
mov
pop
adc
sahf
xchg
add
inc
out
test
mov
sarl
push
inc
lret
sar
testl
orl
mov
or
ret
repz
cmpsl
pop
inc
aaa
jno
push
mov
insl
out
scas
shll
mov
fiadds
data16
lahf
cmp
push
lods
push
push
xor
lret
js
and
mov
xor
pop
cmp
pop
add
push
xchg
leave
bound
xor
adcl
push
dec
jns
aas
sbb
test
adc
sub
fimull
cmp
es
lahf
addb
gs
jmp
repnz
inc
mov
mov
pop
and
adc
stos
js
shlb
cmp
inc
xor
and
mov
fbld
incl
or
scas
mov
push
test
mov
jbe
fistpl
push
das
push
jb
xchg
aad
sub
mov
rorb
push
mov
cs
pop
push
push
sarl
test
enter
sub
xchg
mov
dec
lock
jns
xchg
test
nop
insb
mov
shl
stc
dec
or
mov
stos
jno
or
push
push
cmp
jmp
inc
addl
mov
repz
jno
jo
fldl
mov
fsubl
fisubrs
or
popf
lea
aam
call
adc
cmp
xlat
lret
adc
jns
fidivrs
andb
push
sub
les
das
jns
push
pop
push
test
xor
push
jle
xor
stos
inc
repz
hlt
sub
inc
pop
aaa
mov
or
pop
outsl
jge
jecxz
cmp
jl
adc
je
adc
sub
ja
dec
pop
mov
cwtl
addr16
jecxz
jg
repz
pop
addr16
lcall
pusha
xchg
fidivrl
jmp
ljmp
push
and
imul
mov
add
nop
sbb
imul
mov
xchg
sbb
inc
jo
xchg
xchg
push
sti
insl
mov
pop
cmp
stos
add
popf
mov
arpl
mov
movb
mov
xchg
cmp
scas
pop
pop
xchg
xchg
push
dec
xor
js
push
mov
int
shl
loope
mov
aam
sbb
jb
adc
xor
jmp
movsb
cld
cld
out
test
idivb
addb
push
ret
into
adc
btc
dec
push
cmp
push
or
subb
cmp
mov
jno
sti
mov
icebp
adc
iret
std
in
xor
lret
pusha
imul
int3
cltd
js
mov
scas
cmpsl
sbb
cmp
aam
dec
loopne
cmpsb
clc
divb
ljmp
cmc
or
and
push
cld
ret
loope
and
sub
xchg
add
inc
and
jns
push
cmpb
push
aaa
mov
push
cmp
jno
mov
cmpsb
dec
mov
lcall
mov
sub
stos
fwait
xlat
push
or
pushf
rorb
cmpsl
into
fstps
int3
jae
icebp
out
lret
push
cld
scas
inc
dec
push
ss
mov
add
push
mov
cmp
xor
mov
outsl
jmp
cmpsb
mov
jno
lret
fistl
into
mov
aad
sti
int
inc
dec
jl
lcall
fwait
and
jmp
push
push
popa
ret
mov
xor
pxor
xchg
mov
insl
iret
fs
loopne
mov
push
les
insb
ljmp
push
push
mov
or
add
arpl
or
mov
xchg
movsb
adc
mov
fisttpl
jp
adc
pop
leave
repz
pusha
xor
push
pop
mov
pop
test
xor
inc
popa
clc
xchg
int3
sti
repz
mov
xchg
cmp
push
je
push
cmp
add
mov
test
mov
arpl
fadd
lds
popa
aaa
adc
aaa
insl
and
sbb
lods
movsl
loop
aaa
lods
cmp
pop
jbe
cmp
mov
mov
aas
pop
dec
dec
pop
ret
cltd
iret
adc
dec
sbb
xchg
lret
jnp
subl
sub
mov
pop
ret
jp
push
cmpsl
in
push
popa
movsb
int
push
and
fildll
rcll
mov
lcall
lcall
pop
fldt
mov
mov
aaa
or
lahf
insl
loop
pop
adc
mov
mov
jecxz
popa
scas
sub
lock
aaa
push
je
mov
cli
inc
xor
jb
cmp
mov
scas
and
cltd
aas
lret
rorl
in
call
mov
jns
or
adc
sti
push
jle
jno
les
inc
and
subl
mov
decl
xlat
push
sahf
pop
dec
mull
flds
stos
xor
dec
inc
out
cld
movsb
xchg
test
lret
and
pop
inc
xchg
sahf
xchg
ret
js
cmp
cwtl
mov
outsl
std
out
faddl
sub
imul
out
pop
movsb
mov
cmpsl
pop
push
movsb
shlb
adc
push
mov
sub
adc
sub
cld
jp
lods
lods
push
test
jae
mov
inc
test
add
and
add
int
fstpl
mov
ljmp
inc
dec
cld
mov
jge
fisubrs
push
inc
andb
jle
push
gs
icebp
sbb
sub
dec
inc
popa
push
cld
jge
push
loope
outsb
xchg
pop
cmp
and
or
mov
jl
add
loopne
cwtl
sbb
xchg
add
flds
xchg
fstpl
out
popf
leave
fcompl
mov
imul
xchg
fnstenv
int3
lods
in
cs
mov
divb
sub
cmp
repz
ljmp
pop
jbe
fcomps
xor
out
xor
lahf
sbb
xor
clc
or
cmpsl
fsubp
cmp
adc
sbb
jl
sub
jmp
addb
insb
insl
icebp
cmp
insb
mov
mov
push
fwait
stos
repz
pop
pop
lcall
and
push
or
pop
btr
cmp
mov
int3
jl
shl
addb
out
aaa
xchg
fsubrs
adc
les
divl
xor
push
and
jecxz
or
adcl
test
mov
pop
xchg
mov
xor
loop
pop
mov
push
sbb
mov
lods
test
sbb
xchg
mov
mov
push
mov
dec
test
clc
ljmp
jno
ss
jg
int
ss
add
dec
lock
xor
call
mov
filds
pusha
iret
pop
mov
in
mov
stc
cs
enter
mov
mov
js
dec
cmp
clc
pop
scas
scas
push
inc
inc
xlat
mov
popf
fldcw
arpl
sub
insl
pop
inc
push
dec
pop
dec
mov
arpl
mov
lock
pop
sti
xchg
xor
cmp
adc
push
jbe
cmp
int
fadds
pop
jmp
mov
mov
sub
mov
addr16
jb
stc
enter
ja
xor
pop
jmp
pushf
dec
jp
int
lret
or
sub
int
nopl
add
adc
ds
adc
add
xor
stc
fsubs
push
sbb
in
stos
sbb
int3
das
in
aaa
arpl
loop
jge
push
test
push
sub
inc
movsb
sub
aaa
ja
test
sub
and
pop
xchg
hlt
loopne
mov
xor
sbb
mov
mov
dec
cmp
mov
dec
adc
jns
push
cmc
icebp
lcall
jle
std
std
cmpl
jne
into
popa
add
cld
mov
inc
pop
and
or
push
incb
or
adc
xchg
loopne
xor
mov
lea
sahf
xchg
mov
sub
push
add
fcoml
popf
call
cwtl
push
lahf
outsl
add
sub
cmpsl
lret
cs
push
data16
imul
sbb
dec
enter
xlat
xor
push
sbb
movsl
out
iret
adc
dec
mov
fsubrs
inc
popf
adc
inc
addr16
movsb
xchg
js
imul
shl
adc
adc
loope
mov
mov
insb
or
push
mov
jbe
xchg
mov
lret
push
mov
mov
or
fucomp
pushf
push
add
lret
sub
cmpsl
sbb
xchg
xchg
aam
cmp
pop
sbb
mov
test
js
push
pop
hlt
cmp
xchg
out
cmp
sbbl
shl
push
outsb
or
test
push
mov
push
inc
jmp
dec
bound
pop
shll
stos
cmp
xchg
out
mov
mov
imul
mov
mov
jnp
adc
fwait
nop
cmc
roll
pop
fnsave
xor
mov
fstps
jecxz
adc
shlb
push
and
cli
mov
pop
loop
add
xchg
pusha
mov
xchg
xchg
cltd
jmp
insl
iret
cmp
mov
lret
push
push
push
icebp
mov
add
stc
out
xchg
lds
sbb
test
pop
ja
mov
jne
push
xchg
push
out
mov
sbb
test
popa
sub
outsl
add
sti
fidivrl
sub
sub
mov
ja
add
mov
jmp
push
test
adc
fs
mov
pop
adc
rorl
inc
pop
lock
daa
in
pop
push
xchg
jge
jo
fmuls
or
loope
aad
fs
push
loopne
lahf
dec
lret
xchg
call
push
outsl
mov
push
dec
gs
pusha
not
cmpsl
call
popf
aad
test
xchg
xor
jl
es
cs
jmp
add
insl
push
mov
je
cmp
ljmp
pop
sbb
test
ja
and
pushf
fstl
add
push
ds
sbbb
leave
add
addr16
pop
fnstsw
push
pop
fchs
int3
sbb
cmp
test
inc
jae
sysexit
cmp
icebp
cli
dec
daa
xor
test
mov
jl
jp
lock
or
push
cmp
fxtract
pop
fxch
lods
mov
or
ficomps
ss
push
or
push
push
xchg
push
std
jl
jl
pop
pop
pushf
sbb
pop
nop
xor
jmp
pop
addb
outsb
jnp
bound
mov
jmp
out
push
mov
dec
and
dec
push
dec
inc
fimull
ss
popa
mov
shrl
fisubrs
nop
and
out
gs
inc
and
push
add
in
enter
andl
pop
mov
cmc
in
aad
xor
dec
js
lock
aad
out
int3
jle
repz
sub
jl
pop
jge
add
inc
xchg
out
or
out
add
dec
stos
rol
cltd
imul
test
and
dec
test
pusha
xchg
addr16
enter
push
hlt
test
dec
or
cmp
push
dec
divl
daa
pop
mov
test
jbe
inc
xchg
das
ficoms
jg
ret
fidivs
sbb
xor
xchg
mulb
cwtl
outsb
out
mov
add
int
fld
ljmp
ret
inc
imul
std
movsl
nop
mov
pop
cltd
int3
sbb
jge
dec
test
leave
inc
into
xlat
cli
mov
adc
mov
ss
ja
mov
shl
popa
jmp
mov
adc
rclb
push
fsubrl
int3
mov
divl
dec
lods
mov
push
add
cmp
sbb
push
shl
insl
xchg
mull
xchg
mov
cs
clc
add
add
push
aas
jb
rorb
stc
sahf
bound
sahf
adc
test
insl
nop
mov
hlt
mov
cmp
inc
test
ja
adcb
push
inc
add
xchg
push
jbe
imul
js
mov
int
outsl
ds
sbbl
or
lea
inc
mov
lahf
mov
sbb
jo
mov
mov
in
test
scas
push
fdivrl
jb
xor
icebp
mov
xor
insl
push
stos
mov
test
mov
mov
pop
xor
jp
xchg
imul
pop
inc
mov
movhps
sbb
mulb
fcoml
mov
aas
mov
inc
sub
repz
jne
jp
addb
lods
cmpsl
push
imul
insb
inc
lcall
mov
insb
sbb
cmp
fists
mov
nop
cmp
icebp
cmp
xor
sbb
cmp
divl
mov
out
rclb
xchg
inc
aad
and
aad
cmp
push
pop
lods
loopne
leave
mov
lods
pop
add
fs
faddl
mov
ss
xchg
iret
add
ficomps
sbb
mov
sbbl
cmp
mov
cmp
cmp
mov
mov
push
adc
rcr
in
dec
int3
mov
scas
in
cmp
enter
cmpb
mov
sub
out
pushf
addr16
mov
imul
add
and
sub
xchg
shrl
hlt
out
push
call
mov
movb
ss
pop
jg
arpl
push
in
mov
push
cs
sahf
jbe
sbbb
fcompl
enter
lret
test
ret
arpl
add
adc
cld
dec
mov
add
and
in
inc
in
push
sub
mov
mov
jp
jne
push
fimull
inc
mov
repnz
ror
lret
fcmovnb
add
dec
aam
mov
xor
scas
popf
push
mov
jmp
mov
in
mov
adc
pop
aad
xlat
or
dec
inc
das
ds
push
ficoml
xchg
popf
push
dec
xchg
nop
and
adc
dec
mov
push
cmpsb
cmp
xchg
push
add
jmp
mov
aam
push
sbb
roll
add
jo
jl
movsb
jnp
add
add
pop
mov
adc
mov
pop
push
or
mov
mov
jne
ret
and
push
adc
mov
das
dec
add
aas
jmp
inc
shll
adc
fiadds
pop
pop
shrl
jno
xchg
in
sbb
sbb
pop
daa
mov
cmp
jnp
sub
xchg
shlb
xor
xchg
mov
mov
call
in
xchg
ljmp
add
frstor
out
call
xchg
out
cmpsl
push
jge
xchg
mov
in
sahf
je
xchg
cmp
cmp
mov
pop
cmp
push
mov
ljmp
movsb
outsb
mov
add
movsl
scas
and
shll
sbb
int3
cmp
cmpb
imul
xchg
dec
insl
mov
adc
sbb
add
sub
mov
inc
jmp
mov
mov
ds
je
xchg
mov
stc
mov
add
lahf
lods
popf
jb
xor
sbb
in
cmp
outsl
cmp
out
stc
xorb
sti
and
loop
cmp
or
scas
flds
pushf
push
subb
lds
inc
scas
mov
std
mov
xchg
sbb
xchg
dec
jnp
or
jp
mov
data16
or
mov
sbb
xor
xor
sbb
mov
scas
lcall
lcall
mov
cld
das
mov
fcomps
enter
es
addr16
outsl
popw
xlat
in
adc
cmc
rorb
movsb
fs
or
and
lcall
stos
shlb
stos
pop
adcb
movsb
pop
mov
jl
xor
out
int3
cli
mov
push
out
fdivrl
nop
push
int
cmpsb
cmp
lds
mov
adc
imul
ret
sti
or
adc
std
jno
frstor
mov
repz
pop
into
in
dec
scas
rolb
in
inc
in
insb
cmp
dec
sti
pusha
mov
xchg
dec
out
jmp
popl
lahf
inc
cwtl
lds
ljmp
insb
mov
test
addr16
mov
xor
daa
es
jg
leave
enter
imul
mov
add
orb
movsb
or
fildll
shrb
xchg
jecxz
mov
mov
jo
call
and
repz
mov
sbb
mov
and
andl
xchg
mov
addr16
mov
cmp
es
cmp
add
adc
aam
rcl
cs
jno
push
dec
lahf
and
imul
mov
loopne
mov
pusha
and
shrl
mov
inc
cmp
stos
mov
or
cmp
fsubl
loop
cltd
aad
scas
ret
aam
test
sub
scas
out
aad
sbbl
jnp
xchg
test
or
cmp
setle
dec
dec
jns
push
dec
cmp
cmp
addr16
jb
cmp
hlt
mulb
push
addr16
scas
cmp
inc
and
mov
fldcw
in
addr16
xor
mov
lret
les
and
call
btc
fistpll
sbb
inc
mov
fwait
or
jno
push
les
aaa
jg
add
push
nop
cmpsl
fcoml
cmp
inc
aad
pushf
mov
out
xchg
mov
stos
dec
sub
pop
fdivrl
adc
jmp
jp
pop
fistl
ffreep
add
add
fs
pop
adc
push
dec
cli
xchg
sub
pop
pop
xor
xchg
das
inc
pop
jge
das
dec
aad
jns
xor
or
xchg
fsubrl
dec
andb
mov
dec
add
adc
in
js
fsubrl
subl
imul
stc
inc
push
sbb
xchg
jmp
shll
rcrl
sbb
andl
int3
mov
mov
pop
adcl
fstl
fcompl
jg
rsqrtps
add
ret
fdivr
mov
nop
roll
in
aaa
xchg
xor
lock
stos
push
xchg
and
hlt
cld
imul
pop
aas
js
orb
std
sub
je
jmp
bt
rclb
aaa
sbb
adc
and
cmp
or
push
xchg
mov
dec
test
sbb
outsl
add
push
arpl
sub
xchg
push
std
mov
gs
mov
mov
addr16
inc
int3
pop
icebp
jnp
movsl
inc
shl
cmpsb
and
inc
mov
mov
and
fimuls
adc
push
cltd
xor
inc
mov
pop
lods
pop
pusha
ja
loopne
adc
lods
add
sub
mov
adc
clc
repnz
add
subl
jmp
sub
pop
and
cs
jb
shlb
ja
dec
lods
sbb
pop
negl
insl
insb
sbb
mov
jno
mov
shl
mov
jae
jle
add
sti
pop
mov
push
sub
dec
shlb
lret
push
inc
jo
mov
inc
adc
iret
fxch
sbb
aaa
pop
and
cmp
aaa
pop
or
aaa
sti
ficompl
idivl
repnz
ret
push
arpl
sbb
xor
jle
adc
sub
add
outsl
mov
and
mov
push
test
les
popw
sub
dec
ret
into
xchg
push
sbb
ljmp
cmp
subps
lret
mov
ret
xchg
bound
aam
and
jno
outsl
test
repz
mov
outsb
or
sbb
loop
mov
lods
sahf
xor
mov
insb
jo
test
std
clc
cli
popa
std
and
dec
and
test
fldenv
and
mov
jge
pop
sub
mov
dec
mov
xchg
add
add
jl
mov
xor
pop
testl
xor
imul
push
sub
imul
sbb
mov
sbb
jbe
push
inc
out
and
mov
lds
les
mov
cmpsl
xor
aas
jmp
pop
push
out
in
cmp
xor
dec
push
cmp
int3
test
add
loop
pushf
and
sbb
cmp
pushf
mov
lret
icebp
add
inc
add
jo
jge
or
ds
push
inc
cmc
push
mov
fnstcw
mov
or
xor
call
aaa
dec
pop
arpl
xor
lcall
xchg
pop
jle
lret
clc
xchg
mov
lods
popa
fyl2xp1
or
adc
dec
inc
mov
pop
jno
add
mov
insl
inc
jge
pop
pop
xchg
pushf
lcall
enter
imul
dec
aas
cmp
mov
mov
cmp
jmp
sti
ja
imul
fstl
jo
pop
xchg
cmp
xorl
cltd
scas
fwait
cwtl
test
mov
hlt
mov
iret
sbb
sbb
cmp
hlt
mov
int3
lahf
jae
add
ljmp
sub
mov
cmp
mov
push
in
jle
sub
cld
jne
mov
pushf
pop
and
push
ds
cltd
sahf
xchg
mov
add
cmpb
scas
movsb
mov
std
fwait
stc
fs
mov
pop
popf
outsl
orps
mov
adc
sbb
pop
nop
ja
adc
aas
mov
test
aam
add
loop
mov
ficomps
cmp
mov
sbb
adc
cli
jp
cmp
mov
adc
in
inc
pop
dec
lcall
loope
push
inc
xlat
icebp
roll
daa
scas
mov
mov
outsl
daa
or
fadd
or
loope
inc
ficoml
call
sub
cmp
pop
into
mov
or
nop
ss
fidivrl
in
mov
pop
lds
loope
or
pop
xchg
dec
jno
mov
jmp
jl
push
lds
aaa
push
push
mov
push
sbb
cs
sahf
mov
xchg
dec
cltd
inc
jg
mov
sub
js
cmova
loop
cmpsl
pop
mov
add
xchg
push
psrlw
jge
sarb
adc
test
cmp
loopne
lods
push
mov
in
fsubp
lock
mov
addl
cmp
push
pop
jb
leave
jno
pusha
sub
or
stc
dec
inc
mov
lret
out
fildl
repz
test
les
jle
in
leave
clc
mov
fstpt
add
mov
push
pop
jp
or
popa
mov
xchg
inc
fnstsw
cmpsb
xor
dec
sahf
inc
xor
or
inc
or
out
rorl
popa
ror
out
add
hlt
out
push
nop
loopne
mov
sti
add
pop
dec
jle
loope
sub
mov
out
mov
hlt
inc
arpl
inc
lret
lea
mov
xor
pop
dec
add
fisubs
push
divl
scas
xchg
cmp
push
dec
xchg
stc
jmp
ror
dec
mov
push
test
sar
mov
pop
cwtl
lcall
cs
cmpsl
gs
push
mov
out
gs
mov
mov
lret
stc
in
xchg
icebp
inc
push
ja
push
in
rcrl
insl
aaa
add
push
sbb
xchg
test
stos
aad
in
sub
stc
out
insb
pop
or
retw
not
xor
sbb
pushf
mov
adc
jo
push
ret
movsb
negb
leave
push
xor
cmp
jbe
mov
cltd
adc
imul
fldt
addr16
dec
int3
xchg
fcoms
iret
outsb
jl
inc
loopne
add
popl
pop
lods
push
xchg
data16
pop
mov
negb
add
or
jnp
jo
daa
stc
pop
or
and
pop
rclb
loopne
and
inc
into
iret
pop
adc
lods
push
add
int3
lret
pop
xchg
dec
cmpsb
js
adc
cmpsl
pop
repz
jp
test
dec
jle
jb
shrl
movsl
fsubrp
ljmp
xor
mov
add
add
cli
test
int
cmpsb
cmp
scas
fwait
and
and
push
sbb
mov
lods
push
fadd
shll
mov
mov
push
aad
mov
adc
insl
inc
aad
pop
fmull
xchg
lods
in
jb
ljmp
jle
xor
es
push
daa
mov
sub
add
xchg
stos
inc
inc
dec
movsl
addr16
movsl
inc
push
pop
add
cmp
mov
fwait
call
sbb
cltd
arpl
testl
int3
push
push
inc
pop
adc
test
jae
and
fsubs
pop
jmp
inc
lods
xchg
cmpsb
push
adc
cmp
lds
leave
dec
lcall
pop
xchg
gs
mov
jb
sbb
fbld
es
sbb
stos
shl
add
push
es
test
xlat
pop
add
and
aas
xchg
mov
xchg
scas
jecxz
in
push
lods
iret
pop
vpshad
repnz
push
pop
xchg
in
popf
dec
in
cmp
repnz
popa
and
jns
xor
hlt
sub
fcom
mov
mov
clc
mov
js
in
sbb
or
cmpsb
cmp
push
jnp
stc
pop
push
or
jle
nop
pusha
jecxz
roll
outsl
and
mov
cltd
sub
pop
scas
mov
mov
mov
popa
arpl
and
aam
xchg
pop
js
cmp
test
lret
mov
out
add
fisttpl
pop
pop
add
sarl
insl
jge
out
fsubr
xchg
ficoms
fmul
pop
jmp
push
or
imul
xchg
inc
inc
jbe
sub
mov
add
xchg
orb
xchg
filds
lods
dec
mov
sub
fdivrl
pop
loope
cli
inc
push
jl
lock
cld
push
pop
ficompl
mov
lods
pop
and
push
je
or
mov
or
lret
jge
das
mov
stc
call
stc
jae
jl
mov
push
mov
call
mov
js
cmp
iret
ret
xlat
jb
sahf
fiaddl
icebp
jg
or
rcrb
es
inc
cmp
aad
imul
dec
pop
cmp
xor
mov
repnz
xchg
lcall
lret
sbb
addb
add
divl
sub
or
cli
aad
cwtl
pop
or
cmp
push
in
ret
or
cwtl
add
xchg
lods
and
sarl
mov
dec
lods
js
or
inc
dec
xor
repnz
es
mov
lahf
rcll
stos
sbb
stos
adc
xchg
jbe
jno
sar
push
jle
aas
das
sub
mov
or
into
push
pop
stos
push
pushf
sub
cli
out
dec
pop
ret
xchg
push
repnz
es
fildll
inc
rorl
jb
add
clc
scas
xchg
and
mov
adc
and
pop
push
pop
dec
mov
push
outsl
pop
mov
enter
cmp
rolb
push
cmp
aam
es
pop
mov
xchg
stos
xor
sbb
cmp
lods
xlat
shl
jbe
sbb
aaa
xchg
pop
aad
sbb
mov
mov
cwtl
arpl
add
push
pop
nop
sub
cmc
jp
in
mov
loop
mov
jbe
mov
lods
add
fldenv
inc
or
ja
sbb
fisubs
lahf
xchg
scas
popf
cmp
sub
push
pusha
into
jns
jecxz
xchg
call
fcomp
std
std
data16
into
xor
ss
call
in
dec
lds
mov
mov
rorb
lret
mulb
orl
jbe
mov
xor
data16
push
xor
jb
push
loopne
add
int3
adc
push
inc
mov
dec
rorl
pop
mov
fwait
int3
cmp
jmp
push
xchg
test
stos
sub
iret
cld
sbb
adcb
addr16
rorb
pop
pop
loopne
out
jge
test
pop
les
cmp
movswl
loope
and
int3
mov
aaa
mov
jl
add
in
inc
cmp
xor
pop
push
xchg
and
out
inc
adc
and
jmp
and
cld
xor
lret
jge
scas
test
xlat
lea
popf
imul
add
cmp
scas
pop
add
dec
lret
mov
push
mov
sub
je
movsb
xchg
push
or
or
push
xchg
sbb
xchg
mov
arpl
cmp
inc
sbb
jge
ret
loopne
dec
pushf
inc
jp
mov
mov
lahf
adc
xor
mov
sub
push
adc
mov
aad
popa
mov
dec
mov
xor
lea
cmpb
lret
fcoml
aas
push
sub
stos
adc
push
leave
aaa
icebp
fcmovnu
ret
cmp
xchg
cmpsl
push
push
repz
rcll
lods
inc
xchg
xor
loop
pop
addr16
dec
mov
mov
es
not
aam
out
xchg
push
push
rcl
cld
ss
cmp
mov
mov
and
ljmp
add
xchg
mov
jno
dec
iret
xchg
inc
xor
mov
leave
in
jge
push
mov
pusha
lods
into
adc
add
mov
fxch
inc
xchg
xchg
jmp
movsb
movsl
imul
adc
lret
push
je
imull
mov
scas
shrl
xlat
mov
lods
inc
fistps
push
xor
or
mov
bound
shlb
shlb
repnz
movsl
jmp
xchg
xchg
sahf
dec
aam
push
xor
mov
rcll
fsubrs
sub
adc
je
push
nop
fs
sbb
outsb
sub
sub
lods
adc
or
sbb
into
sti
repnz
filds
or
test
mov
cmp
aas
mov
leave
adcl
jg
mov
ret
mov
push
xchg
jle
out
sbb
adc
inc
mov
cltd
adc
scas
jb
sahf
fnstsw
mov
scas
add
rcll
int
stos
in
fstl
enter
fadds
aam
daa
pop
xchg
popa
repz
xchg
jb
loopne
addl
shrl
sbb
or
les
dec
fisubrs
xor
mov
movsb
xchg
fisttpll
dec
mov
xchg
xchg
loop
lock
sti
js
roll
in
jl
push
mov
fbstp
push
aad
ljmp
cmc
nop
inc
pop
and
lods
and
data16
fstl
pop
lcall
hlt
dec
enter
adc
jecxz
scas
sahf
popf
pop
mov
jg
scas
inc
arpl
test
mov
sbb
mov
cmpsl
push
push
pop
lahf
or
jmp
pop
xor
das
sub
dec
inc
dec
jge
cmp
subb
xor
rolb
sub
pushf
sub
lock
test
cli
dec
push
mov
icebp
fs
or
hlt
repz
insl
arpl
sbb
xchg
lahf
insb
stc
mov
mov
add
push
cmpsb
mov
xchg
call
in
xchg
bound
test
cwtl
rolb
jo
in
mov
pop
mov
adc
addr16
test
xchg
inc
aaa
cs
inc
es
test
lahf
insl
int3
les
mov
sbb
hlt
in
jns
test
popf
aaa
sbb
minps
jnp
nop
adc
and
adc
iret
pop
pop
push
lock
and
sub
xchg
outsl
rcrl
pop
xchg
popf
inc
popa
push
inc
sbb
mov
or
mov
imul
push
and
push
xchg
shll
or
outsl
add
out
xchg
lds
sub
bound
mov
push
adc
xchg
sub
fucomi
mov
sarb
mov
xor
xor
inc
ljmp
push
movsb
mov
popf
lods
jg
scas
push
insl
sbb
mov
in
cmp
popf
pop
cltd
mov
daa
daa
int
stos
push
sbb
fs
mov
cmpsl
add
pushf
adc
inc
loop
out
sti
cmc
sbb
mov
fildl
mov
arpl
in
call
aaa
pop
loop
or
or
addr16
lds
pop
out
push
sbb
xorl
dec
mov
rdpmc
dec
mov
sub
mov
cli
pushf
imul
add
add
push
out
test
popf
or
ljmp
pop
loope
and
repz
mov
and
xchg
aad
outsb
add
xchg
cmpb
insb
lahf
mov
fstl
cltd
loopne
pusha
mov
in
and
pop
fwait
std
adc
mov
jge
or
aad
loopne
dec
jbe
push
fisubs
cwtl
test
lea
nop
mov
pop
stc
add
xor
test
xchg
jbe
leave
mov
cltd
pop
iret
xor
cmp
adc
mov
push
mov
divb
test
adc
incb
lock
or
test
mov
jo
mov
fbstp
pop
jns
cmp
xor
mov
fistpll
loopne
cmpb
pop
sarl
adc
cmpsb
mov
jnp
cmp
mov
dec
cltd
pop
adc
mov
jg
lahf
mov
sbb
in
push
push
adc
push
test
push
xchg
mov
mov
adc
sbb
cmp
mov
pop
int3
std
test
pop
fwait
cmp
add
ficoms
repz
icebp
shlb
arpl
inc
roll
stos
test
sub
mov
fsts
insb
xchg
ja
pop
adc
xor
in
dec
push
sbb
xchg
arpl
xor
jecxz
cltd
pop
sbb
inc
js
or
stc
mov
mov
rcll
popf
aaa
xchg
ljmp
pop
mov
cmpsl
sbb
shrd
loope
add
cmpsb
push
and
xor
xchg
adc
sahf
addb
loop
lock
sarb
int
jge
adc
scas
mov
iret
jmp
and
mov
inc
xchg
jmp
mov
xor
mov
test
jnp
inc
lcall
adc
cld
in
std
jg
jle
aaa
dec
or
and
gs
sbb
les
and
jg
sarl
add
add
scas
adc
sbb
xchg
loope
fisttpl
mov
jnp
insl
mov
pop
ret
dec
push
mov
xchg
inc
jecxz
mov
aam
jne
add
mov
sub
lret
jo
mov
push
adc
repnz
push
sti
push
jno
jbe
mov
push
mov
xor
xlat
js
inc
out
jb
pop
insb
push
push
cli
sbbl
ret
mov
push
repz
aas
lret
ret
dec
mov
sub
fcoms
lahf
lea
shr
mov
ja
cmp
lret
mov
inc
aam
es
or
imul
loop
mov
int
cwtl
dec
leave
sbb
outsb
add
and
clc
and
stc
addr16
fnclex
sub
or
jge
test
mov
aas
mov
and
and
shlb
xchg
gs
sbbl
rolb
lcall
gs
push
fisubrs
leave
out
dec
mov
xchg
insl
out
pushf
leave
xor
sbb
std
outsb
jo
add
lds
bound
mov
xchg
jo
icebp
add
aad
leave
lea
movsb
pusha
lock
cmp
push
mov
pop
imul
xchg
push
fxch
pop
or
inc
xor
xchg
cwtl
dec
push
adc
mov
filds
sbb
xlat
mov
cltd
scas
mov
sub
xchg
nop
mov
popa
sub
xor
neg
pusha
xchg
int
daa
xor
or
pop
faddl
pop
fisubs
insb
aad
sti
inc
fsubrs
stos
aad
cmp
iret
ja
out
out
mov
and
clc
or
cli
mov
lods
mov
sahf
adc
xchg
jg
mov
rolb
inc
dec
stc
xchg
cld
pop
fdiv
mov
movsl
pop
xchg
mov
pop
lcall
sbb
push
data16
mov
push
aad
in
or
popf
inc
xor
push
mov
jae
cwtl
push
sub
sbb
jo
insl
mov
out
mov
cmp
in
mov
add
sbb
and
cmp
aas
int
pop
mov
mov
out
lods
leave
pop
je
jl
add
jno
cmpsl
cmp
push
jne
push
jo
cli
or
jns
xor
int3
mov
jecxz
mov
xor
outsb
or
lsl
aad
push
cmp
in
cmp
jle
adc
sub
cmpsl
sub
shll
pop
sbbb
xorl
push
es
cmp
jmp
cmp
repz
xor
lods
les
popa
sub
lret
mov
inc
cwtl
sti
popf
xor
adcl
sbb
lea
cmp
lahf
adc
jns
mov
push
pop
xor
fnstenv
inc
pop
in
addr16
lcall
sti
outsb
pop
jns
sbb
push
nop
xchg
les
call
sbb
roll
test
cli
push
adc
dec
push
add
dec
adc
fstpl
mov
jo
aam
pop
adc
pop
sahf
loope
xlat
in
mov
outsb
test
add
shll
inc
xor
and
or
sbb
jmp
test
div
xchg
pop
dec
xorb
ret
stos
push
pop
jmp
fs
mov
fistps
adc
into
sbb
clc
jae
flds
mov
pop
mov
clc
xchg
mov
add
dec
out
lods
movsl
cmp
and
lods
call
fwait
in
shr
mov
push
xor
pushf
mov
add
arpl
cld
loope
imul
add
mov
jbe
adc
sahf
test
ja
add
lcall
jbe
mov
mov
aaa
inc
fstpl
popa
adcl
aam
orb
mov
xchg
sub
js
int3
out
mov
push
and
mov
jns
pop
sbb
sahf
cmp
ret
loope
push
pop
in
dec
xchg
or
flds
push
push
xor
dec
jbe
jp
outsl
pop
mov
cli
xor
test
add
xchg
xor
cld
add
jne
xchg
dec
jmp
cmp
cmc
xor
pushf
into
fdivrs
inc
pop
fs
adc
add
and
and
cld
inc
imul
mov
and
xchg
rcl
xor
in
mov
dec
mov
std
fcmovne
mov
pusha
shrl
mov
or
jb
or
mov
pop
and
lods
jbe
and
fwait
outsb
pop
in
aas
inc
fistpl
pop
dec
dec
movsl
lret
xchg
pop
ficomps
cmpsb
inc
dec
pop
ret
and
xchg
pop
mov
mov
xor
dec
jbe
and
xlat
call
mov
adc
cmp
lods
jnp
stc
test
mov
and
es
jl
pop
imul
cmp
cmp
enter
pop
clc
adc
cs
dec
xchg
cmp
movsl
push
ss
push
xor
mov
jecxz
and
mov
out
xchg
or
mov
mov
cli
rcrb
in
cli
inc
stos
sbb
jb
push
les
movsl
push
aas
movsl
imul
cmp
jle
mov
clc
js
sbbl
cmp
sti
les
pushf
and
push
mov
xor
adc
jne
lods
mov
xlat
mov
hlt
stc
jle
xor
push
das
pop
imul
xor
daa
in
sub
xor
test
add
int
in
xor
push
mov
mov
pusha
lret
aas
pop
push
add
test
rorb
mov
call
in
xor
sbb
push
outsb
mov
or
mov
sahf
jno
arpl
add
xor
dec
imul
xor
jmp
ja
nop
movsl
bound
enter
sbb
xchg
push
cmpsl
dec
loope
sti
mov
jecxz
mov
fwait
cmp
daa
negb
xchg
dec
mov
pop
movsl
mov
shrl
mov
xor
rolb
fdivrl
xor
inc
iret
mov
ret
or
outsb
xchg
jg
inc
lods
fs
pop
call
movsb
stos
pop
popa
int
xchg
xlat
insb
mov
mov
inc
jmp
or
push
popf
mov
jne
fldl
mov
sub
imul
dec
shrb
xor
aas
pop
test
sti
xlat
sub
dec
or
mov
mov
xchg
dec
push
fsts
les
lea
dec
shlb
test
js
jge
adc
roll
push
jb
or
mov
adc
jne
inc
xlat
lcall
call
xlat
stos
sar
cwtl
outsl
mov
inc
mov
aad
cmp
imul
jp
addr16
clc
mov
cmp
xor
test
loope
push
dec
js
enter
cmp
int3
pop
jae
xchg
mov
addr16
dec
adc
cwtl
fcmovu
daa
jno
cld
int
iret
mov
ds
aas
cmpsl
push
pop
and
push
adc
popf
mov
jae
cmpsb
addl
in
inc
loop
xchg
xchg
repnz
and
cltd
hlt
adc
sbb
jbe
imul
data16
imul
adc
cmp
cwtl
push
lods
in
xor
stos
outsl
mov
rcll
xor
add
jmp
xchg
jb
aad
in
std
rcl
and
cltd
adc
xchg
daa
bound
shl
xorb
cmp
pop
pop
dec
jne
filds
xchg
mov
add
je
xchg
pop
dec
cmp
xor
push
push
orl
dec
mov
mov
mulb
xchg
std
sub
xchg
xor
mov
lret
xchg
rolb
pop
jne
xor
call
sub
mov
xchg
arpl
int3
sub
aaa
or
in
loope
into
jbe
pop
lahf
shrb
pop
fwait
and
xchg
cmpsl
mov
mov
arpl
rorb
sub
nop
push
fmuls
xchg
lret
lcall
inc
mov
enter
int
or
pusha
add
cmpl
push
push
out
pop
or
adc
cmp
and
in
pop
mov
mov
mov
stos
pop
sbb
jp
mov
or
sbb
in
push
mov
out
jo
xor
into
mov
andb
in
jmp
scas
mov
mov
dec
jp
lock
cmp
jb
in
lods
xchg
inc
scas
sub
mov
movsb
pop
daa
repnz
insl
je
in
pop
out
pusha
aas
in
xchg
ja
lods
inc
mov
shl
sub
sbb
sub
popa
xchg
popf
add
mov
out
dec
aas
leave
out
addr16
add
mov
mov
sub
or
xchg
push
in
sub
sub
push
repnz
jbe
mov
cli
jecxz
pop
xchg
dec
adc
sub
cld
mov
fwait
xchg
inc
flds
fs
or
pop
xor
sbb
mov
int3
mov
dec
xchg
movsb
hlt
lcall
inc
pop
mov
leave
mov
cmp
push
cmp
xor
lret
movups
lret
push
sahf
mov
push
xchg
sub
xchg
adc
jl
mov
sub
int3
cli
and
cltd
test
add
xchg
mov
sub
fstp
jl
add
outsl
push
jb
pop
mov
cld
sahf
outsb
icebp
popf
xchg
sub
inc
pop
xor
bound
xor
or
mov
test
dec
xchg
jno
ffree
mov
ret
and
hlt
pop
ret
pop
cmc
fisttpll
fcomps
sbb
xchg
xchg
sbb
ret
pop
inc
mov
jae
leave
gs
cmp
mov
mov
or
dec
scas
inc
and
loopne
pop
cs
xchg
je
sub
movsl
cli
adc
out
adc
mov
jecxz
stc
jbe
cmc
inc
data16
inc
fsubrs
fs
and
movsl
sub
outsb
mov
aaa
sahf
std
ficompl
jl
push
rep
setno
cmpl
sbb
cmp
dec
push
xchg
inc
loopne
sbb
sbb
jp
adc
test
adc
loop
inc
xor
roll
push
pop
aad
loopne
mov
repnz
into
jbe
sbb
pop
shr
andl
in
fstl
push
test
stos
mov
shrl
fdivs
push
xchg
xchg
sbb
mov
iret
in
aad
lcall
jo
cltd
push
cmpsl
int3
je
and
ret
mov
loop
ret
test
xchg
jbe
fildl
cwtl
inc
in
xchg
inc
ljmp
and
fnstenv
cwtl
shrb
sub
fiadds
aas
das
data16
aas
loopne
jbe
rcr
jb
push
enter
ror
xlat
xor
test
lahf
out
push
pop
xor
aad
or
add
cmpsl
lret
push
les
je
mov
mov
push
or
ffree
push
mov
jb
insb
fnstsw
xlat
aam
std
mov
fstps
gs
and
in
out
xchg
in
leave
cld
cli
in
sarl
mov
xor
sbb
add
bound
or
add
mov
cmc
pop
jecxz
mov
pop
daa
push
shl
dec
lods
divl
sbb
je
cmp
cmp
pop
and
add
leave
popf
pop
enter
lock
push
push
cs
aam
inc
mov
xchg
inc
xor
aam
push
aaa
mov
inc
or
int3
in
testl
xchg
popf
jb
cmp
mov
dec
xchg
ret
shr
push
dec
or
xchg
icebp
imul
or
mov
shlb
cld
adc
jns
lock
bound
and
xchg
pusha
lcall
arpl
xchg
scas
into
push
ja
mov
mov
leave
leave
fnstsw
frstor
mov
nop
push
xor
mov
pop
outsb
mov
xor
mov
dec
jnp
push
or
lds
jnp
in
adc
outsb
popf
mov
sahf
sbb
loope
xchg
mov
add
sbb
std
sub
in
ljmp
sub
or
int3
mov
dec
fwait
jno
addr16
adcb
pop
inc
aam
jl
outsl
inc
cmp
dec
cs
sar
xor
into
out
xchg
in
adc
popf
dec
or
scas
xor
mov
dec
out
aam
or
jp
imul
hlt
jno
sahf
jp
cmpl
pop
mov
psubw
aam
adc
mov
sbb
mov
dec
rcll
subl
pop
dec
iret
scas
pushf
ds
jne
add
push
xchg
mov
mov
roll
xor
sub
aas
repz
loope
cmp
pop
pop
nop
bnd
dec
popa
dec
jae
push
mov
fnstenv
bsr
dec
lret
push
push
sbb
mov
enter
mov
inc
pop
xor
push
mov
scas
adc
or
sbb
ret
std
andl
mov
xor
call
arpl
int
cmp
je
fdivrp
shll
mov
xor
icebp
push
adc
xchg
inc
jbe
xchg
mov
jo
or
and
ficomps
push
in
xchg
jle
sub
add
mov
into
and
test
mov
cs
dec
clc
dec
fisubs
jbe
or
in
nop
ret
aaa
lock
cmp
sti
pop
sbb
xlat
mov
dec
stc
outsb
cmc
loope
sbb
lret
insb
cmpb
int3
mov
mov
loop
stos
cs
xor
aam
std
fs
aas
and
xchg
jp
pop
xchg
sub
jne
adc
adc
sbb
pop
mov
or
jne
aad
rcr
dec
sub
pop
or
movsl
dec
pop
push
aad
sahf
sbb
jge
imul
cmp
ss
push
xchg
cmp
cmp
movsl
xor
test
rcrb
gs
inc
cmp
cmpl
cmp
aaa
mov
out
ret
outsb
mov
faddp
data16
xlat
rolb
mov
jae
testb
lods
mov
cli
sbb
inc
pusha
mov
jmp
jle
dec
mov
scas
daa
bound
sub
gs
mov
mov
sbb
aas
xchg
out
lds
lds
frstor
lret
lods
or
xchg
lock
xchg
cmpb
fs
mov
push
not
pushf
test
lahf
iret
in
dec
mov
dec
fistl
in
push
fxch
cld
and
xor
clc
outsb
push
add
cwtl
ja
push
sub
fsubrl
pushf
shrb
add
stos
cmp
lahf
push
xor
xor
cmp
addl
mov
std
roll
test
lods
sti
sub
lcall
xchg
mov
xchg
inc
daa
push
cmp
loope
sti
xorb
xlat
comiss
call
xchg
out
jmp
fnstcw
mov
test
xchg
lea
cltd
xlat
pushf
shl
cltd
adc
lahf
aad
cmp
les
push
out
sub
stos
mov
outsl
mov
push
ljmp
ror
push
iret
jno
stos
xor
mov
and
xchg
jbe
repnz
ds
ss
icebp
xor
les
xchg
pop
les
mov
inc
xchg
xor
test
push
decl
andb
dec
mov
cs
mov
mov
xchg
push
cwtl
fisubrs
mov
cmc
jne
fmuls
fwait
jmp
loopne
rcr
test
pop
push
sbb
out
mov
cmp
mov
cmp
mov
aad
repz
xor
mov
movsl
jne
pop
cmp
insl
mov
js
mov
addr16
rclb
std
rcl
sbb
or
add
les
lds
mov
cld
test
and
dec
xchg
and
add
adc
mov
mov
or
cmp
mov
bound
cmpsl
loope
cwtl
mov
sbb
sub
push
inc
mov
lret
xor
ret
or
pop
cmp
pop
sbb
jnp
daa
movb
mov
scas
sbb
or
fnsave
sub
in
inc
push
jg
mov
pushf
ror
xchg
lahf
mov
daa
mov
mov
dec
les
std
mov
lods
idivl
out
and
lcall
gs
out
imul
subl
cld
fdivp
inc
push
pop
out
in
test
mov
xor
mov
pushf
clc
jae
mov
ret
jo
and
out
fistl
jae
in
push
pxor
push
add
xchg
dec
scas
mov
add
push
jne
aad
push
push
adcl
out
ret
jb
incb
xor
hlt
jnp
pop
mov
push
jp
aad
inc
mov
movsb
or
andb
xchg
adc
roll
mov
arpl
out
test
cmpsl
in
adc
push
repz
jmp
les
xor
dec
out
outsl
daa
les
data16
test
mov
or
js
lds
addr16
push
jg
add
cmp
sbb
adc
and
and
int
or
mov
inc
in
lahf
lock
add
mov
ljmp
lock
popf
shl
lods
fldt
push
sub
jl
shll
int
mov
dec
mov
movsl
pop
mov
and
sbb
mov
mov
mov
cmpsl
inc
xor
dec
push
shll
push
cmc
out
adc
xchg
lcall
call
lahf
xchg
movsb
mov
outsl
inc
daa
enter
pop
enter
push
xchg
dec
pop
mov
sub
lcall
repz
lret
sbb
lea
pop
popa
add
fs
movsb
lret
jecxz
pop
repnz
lret
push
movsb
shll
and
int3
addr16
fdivrs
jnp
pop
in
in
lahf
xchg
sub
and
jecxz
xor
aad
xor
mov
sbb
xor
mov
cld
sbb
or
rolb
addr16
movsl
lea
pop
testb
call
jge
insl
jne
xor
inc
fistpll
out
ss
js
sub
xor
push
and
fistpll
outsb
fidivrs
cmp
adc
mov
adc
xor
pop
mov
js
lock
pop
mul
inc
sbb
roll
sahf
loopne
inc
add
cwtl
fimull
adc
add
into
xor
add
pushf
out
jns
cmpsl
push
push
jnp
arpl
loopne
sub
cmp
mov
fistps
call
fistl
fcomip
sub
stos
mov
lds
pop
sbb
lahf
cmp
cli
notb
fisubs
popa
lods
jbe
add
scas
bound
sbb
pop
loope
sub
lret
adc
push
jne
or
addb
insb
xchg
es
in
int
or
jae
insl
add
mov
je
sbb
jno
cltd
in
mov
aad
in
cmpsl
ds
sbbl
push
enter
testl
push
sub
dec
mov
lods
popa
mov
int
and
push
mov
outsb
stc
jo
and
adc
mov
xchg
pop
jg
jb
popa
js
lcall
pop
sbbb
das
shll
pop
pop
mov
mov
sti
loopne
addb
std
mov
movsl
add
and
aam
inc
cmpsb
mov
repz
pop
cmp
in
inc
outsb
lods
or
mov
notl
shll
inc
dec
push
sarb
or
xchg
sbb
popa
std
sarl
inc
xor
inc
inc
divb
cmc
inc
push
sub
ds
les
lds
inc
push
mov
das
or
cli
imul
das
sti
cld
into
add
std
cmp
js
add
pop
sbb
mov
fldl
jmp
outsb
icebp
jne
sub
bound
pop
jno
dec
push
lock
and
ret
std
in
or
mov
iret
scas
mov
add
dec
faddl
iret
shlb
mov
adc
movsb
sub
rol
leave
push
and
shll
jno
test
jnp
lods
int3
or
sbb
sbb
out
imul
xchg
movsl
jge
fmul
outsl
cmp
cmc
jnp
into
mov
fwait
cmp
pop
rcrb
das
jnp
aas
lock
das
xlat
mov
inc
in
out
lret
sub
frstor
mov
lea
push
push
leave
or
dec
sub
arpl
lock
das
pop
push
mov
dec
dec
fs
out
lods
sarl
xchg
mov
pusha
xchg
adc
sub
icebp
jb
test
lahf
fcmovbe
sbb
pop
or
cli
xor
cmp
mov
test
out
and
stos
lock
pop
lcall
pop
pop
xchg
push
cmc
jl
popa
dec
jg
or
aam
insb
inc
insb
roll
out
fidivrl
loope
pusha
dec
sub
mov
hlt
repz
int
fs
cmp
scas
stc
sbb
leave
js
popl
and
inc
addr16
test
hlt
cli
out
adc
lret
sub
inc
add
push
int
jp
push
jmp
clc
shrl
out
inc
mov
cmc
mov
ret
inc
mov
lock
rorb
ja
lcall
or
fwait
test
push
and
cmpsb
push
and
or
insb
pop
in
dec
scas
mov
rorl
movsl
add
push
add
lock
out
in
call
shlb
cmp
scas
dec
lods
icebp
int
fwait
xor
rorl
mov
loop
adc
sbb
sahf
inc
mov
pop
rep
push
int3
and
mov
lahf
in
pushf
popf
jmp
in
stc
dec
test
pop
add
mov
ljmp
fsts
inc
in
or
pusha
mov
loopne
lahf
jae
lret
flds
in
mov
cmp
js
in
decl
leave
cld
sub
mov
flds
nop
bound
jno
fnstenv
sub
fdivr
repnz
xchg
mov
ficoml
fwait
iret
push
xchg
xor
cmp
and
mov
mov
lods
out
lahf
inc
sbb
int3
into
out
and
lahf
cli
jne
push
push
pop
dec
inc
pushaw
sahf
push
popa
push
fldt
sarl
cmpb
mov
inc
popf
mov
inc
fidivrl
je
lcall
pop
sbb
clc
sub
fs
in
inc
mov
inc
call
mov
clc
pop
pusha
dec
mov
jmp
sbb
jae
or
in
xlat
jge
mov
insb
js
ficoml
dec
pop
aas
mov
sbb
xchg
mov
jnp
jno
adc
xlat
jmp
dec
out
lcall
out
loope
aad
jno
cs
pop
inc
xor
cmp
ds
cld
frstor
jb
cmp
insb
add
aam
jb
mov
movsb
ss
sub
or
sysexit
xchg
jne
rolb
outsl
xchg
push
into
das
push
mov
jbe
pop
jns
xor
lods
call
mov
add
int3
cmc
sbb
out
aam
outsb
cli
push
test
test
test
movsl
pop
jecxz
xor
inc
and
inc
cmp
cwtl
addl
iret
js
sub
fadds
mov
popf
sub
inc
and
adc
xchg
cmp
mov
inc
mov
mov
in
test
mov
sbb
cli
mov
ret
je
dec
stos
mov
decl
repz
sarl
mov
push
std
int3
addl
push
dec
add
adc
dec
aas
test
into
xchg
mov
and
loope
popa
outsb
ljmp
loope
xchg
lret
frstor
or
daa
inc
gs
adc
pcmpeqb
popf
or
jecxz
dec
fisttps
sarl
gs
shll
into
movsl
mov
inc
adc
aam
movsl
xchg
stc
popf
adc
in
xchg
jns
js
mov
repnz
in
jl
inc
jl
dec
sar
je
xor
ret
sub
or
pop
fcmovnu
gs
xchg
and
sub
dec
add
inc
pop
xor
incl
mov
xchg
jp
and
sub
xor
xchg
xor
sub
imul
jno
inc
std
xchg
sbb
rcrl
aas
inc
or
mov
dec
add
mov
rcrl
mov
daa
int3
lcall
pop
shll
pop
pop
imul
adc
cmpb
push
and
outsl
repz
xor
in
lods
push
sbb
neg
roll
inc
push
enter
jl
sar
dec
mov
mov
cmp
xchg
mov
xchg
xchg
jmp
xor
movsl
int3
mov
gs
icebp
mov
sbb
pop
dec
jo
pop
or
mov
dec
test
subb
scas
mov
outsb
xchg
fs
xchg
inc
and
and
mov
nop
sahf
dec
lret
xlat
pop
sbb
enter
js
mov
and
inc
inc
sahf
shrl
insl
adc
cmpsb
add
cmc
cwtl
xor
cltd
aas
inc
xor
pop
cmpsb
pop
das
ror
dec
aam
and
js
or
jae
push
add
aad
pop
sbb
roll
icebp
or
int3
cli
cmp
scas
out
ds
std
ret
daa
xor
sub
mov
ljmp
dec
data16
pushf
enter
inc
int
imul
jp
sbb
in
ja
in
mov
addr16
inc
adcl
inc
inc
sub
push
lret
push
jae
mov
jns
int3
push
jp
in
mov
mov
das
movsb
mov
repz
loope
gs
pusha
stos
pop
pushf
test
data16
jnp
push
sub
jo
mov
xor
movsl
mov
sbb
orl
and
jns
jle
rcrb
loope
lock
sbb
lret
shrb
aaa
xchg
cmpb
cmp
xchg
cmp
frstor
adc
jg
sbb
mov
inc
jbe
push
cli
push
popf
mov
adc
in
inc
push
lret
hlt
lcall
cmpb
push
mov
hlt
loope
adc
test
bound
push
outsl
fldenv
test
gs
dec
pop
mov
pop
mov
fidivl
mov
or
jl
ss
fcoms
pop
sub
xchg
mov
push
sbb
cltd
aaa
stos
iret
pop
jns
sub
int
shrl
or
rorl
stos
sbb
ret
jb
call
fdivr
int
cs
jns
int3
lcall
inc
xchg
dec
repnz
pop
cmp
aad
lret
int
sbb
xchg
xchg
out
loope
outsb
imul
pop
or
inc
add
sub
ret
mov
add
inc
in
test
mov
jno
outsl
sbb
movsl
mov
add
subb
jnp
stos
cmp
ficompl
test
cmp
fnstenv
xor
adc
into
mov
hlt
leave
adc
push
es
out
shlb
sub
shrb
sbb
popa
jnp
dec
arpl
adc
push
int3
or
subl
cmp
in
sbb
mov
ret
popf
xchg
cmp
xor
sub
outsl
mov
push
or
push
sub
push
dec
shll
pop
pop
sbb
push
loope
jp
clc
jne
fmull
sbb
fwait
inc
insb
inc
cmp
jno
inc
out
push
mov
xor
loop
jae,pn
dec
imul
mov
add
mov
jmp
mov
xor
cmpsl
dec
das
fs
push
xlat
cmp
sub
sub
mov
movsl
jl
lods
cwtl
int
ljmp
sub
in
pop
sbb
aas
push
push
mov
sub
inc
popa
xchg
or
test
mov
pop
loopne
dec
push
scas
je
and
and
mov
std
daa
xchg
xor
jne
arpl
insb
push
outsb
mov
xchg
sti
rolb
cmpsb
pop
adc
adc
jbe
dec
sbb
mov
or
jbe
and
mov
out
mov
ret
or
mulb
sub
xor
xchg
in
push
jo
pop
rcrl
dec
adc
pop
test
add
add
adc
xchg
pop
mov
repnz
dec
jno
lea
loop
jl
jg
sub
test
fstpl
or
gs
pop
movsl
cli
or
pop
mov
clc
outsb
cs
dec
lods
dec
das
imul
mov
mov
sbb
add
xorb
dec
push
shrl
pushf
loop
sbb
xchg
imul
push
movsl
pop
call
adc
sahf
repnz
and
lret
cld
leave
out
xor
pusha
mov
add
sti
lahf
divl
repz
mov
mov
and
adc
pop
ds
rcr
or
xchg
scas
popf
cmpsb
stc
into
mul
pop
out
imull
in
xor
sub
push
sahf
cmp
incb
sbb
jp
dec
push
lret
icebp
and
xor
jmp
xor
xchg
jecxz
or
ja
in
cwtl
repnz
sahf
xchg
and
pop
test
cmc
mov
movsl
cli
xor
push
fs
mov
call
fdiv
clc
mov
fstl
mov
mov
xlat
add
fadds
push
inc
fs
out
pop
mov
or
xchg
add
mov
ljmp
es
mov
add
cmc
insb
mov
lds
lods
sub
push
gs
lods
jle
popf
insl
out
pop
in
xchg
cmp
xchg
fidivs
xlat
ljmp
mov
sbb
aaa
mov
in
in
pusha
imul
or
int3
out
loop
test
in
nop
pop
andb
mov
sbb
pop
xchg
or
cmp
add
ja
xchg
divb
pop
mov
mov
lea
movsb
add
mov
bound
and
xchg
movsl
scas
movsb
lret
and
mov
or
ljmp
mov
mov
mov
out
push
sub
iret
ja
data16
jb
test
sbb
xchg
inc
lcall
addr16
movsl
shr
fadds
lea
sub
sbb
divb
mov
shrl
jns
or
mov
cmpsb
adc
dec
out
rclb
outsl
icebp
cmpsb
aaa
jne
pop
jno
mov
ret
out
jb
jmp
vmwrite
pop
rclb
pushf
popa
sti
negb
xchg
adc
dec
ret
adcb
cmp
cwtl
int
sub
js
lret
rcrl
ficoms
push
and
int3
mov
aad
arpl
lea
xchg
pop
xchg
test
cmp
loope
iret
les
mov
fsubrs
mov
cmp
or
jnp
or
mov
mov
fs
ret
sub
jae
lahf
sbb
sbb
xor
or
test
inc
push
xchg
call
in
enter
aas
ret
fscale
sbb
lods
mov
mov
movsl
js
daa
out
or
sbb
lds
jl
xchg
movb
xor
mov
cld
adc
cs
pshufw
mov
mov
cs
add
ss
or
cs
rep
xor
xchg
subb
daa
jecxz
rcll
stos
test
xchg
mov
xchg
out
scas
adc
and
daa
jo
pop
xchg
imul
out
scas
sbb
imul
mov
pusha
outsb
fsubrp
cmp
xchg
add
fsubl
xor
xchg
jecxz
sbb
push
outsl
add
das
add
push
cmpsb
loopnew
ljmp
pop
mov
roll
dec
data16
mov
or
lcall
xor
inc
mov
cmp
inc
sbb
mov
test
inc
or
fdivr
repnz
sbb
mov
or
stos
pushf
test
sub
popf
push
adc
loope
lahf
jno
add
ffreep
dec
andb
mov
mov
inc
leave
hlt
cld
jp
in
subb
shll
inc
hlt
add
jle
rcll
mov
out
dec
lods
mov
imul
push
push
inc
sub
jl
or
je
stos
cmp
scas
int3
pop
fimuls
and
and
xchg
mov
jmp
xor
ret
shlb
add
ret
xchg
or
inc
bound
insb
ret
hlt
lcall
xor
mov
addr16
inc
xchg
inc
mov
jae
lcall
repz
movb
roll
jne
js
or
xchg
js
test
push
cmp
fimuls
aad
popa
dec
jb
mov
data16
jbe
push
dec
sub
in
cmc
cmpsb
sbb
add
sub
mov
test
xchg
jo
arpl
ja
or
mov
pop
push
sbb
lcall
mov
shr
imul
lds
bound
lods
sti
out
hlt
adc
cmp
dec
sub
lahf
call
loop
out
mov
in
popf
mov
add
cli
or
adc
jg
aas
xchg
or
sahf
xchg
pop
stc
lcall
cli
mov
roll
sbbb
imul
add
mov
xchg
xchg
push
insb
xor
cwtl
dec
das
out
fwait
stos
dec
int
xor
xor
xor
lods
stos
jb
lahf
push
mov
movsl
fcmovnbe
insb
mov
int
lock
xor
dec
cmp
andl
and
out
xchg
gs
sbb
insb
out
push
stc
and
inc
xchg
pop
addr16
out
jmp
das
cmp
cs
fwait
or
loop
xor
mov
cmpps
mov
adc
mov
xor
test
cmc
xchg
jmp
shll
or
cmc
xchg
gs
repz
test
pop
push
idivb
gs
shl
and
mov
lcall
inc
out
in
lods
fxch
sub
or
lock
pop
adc
shlb
ds
fmuls
aad
sbb
idivl
xor
push
subl
add
test
mov
fsubp
jl
mov
and
xchg
dec
pusha
fbstp
dec
fwait
ljmp
jmp
rcll
or
pop
outsl
ret
adc
pop
mov
pop
fcmovne
dec
sbbb
jne
add
stos
scas
mov
dec
cmp
mov
rcl
addl
mov
adc
mov
mov
orb
push
pop
sar
call
sti
cltd
daa
pop
fs
iret
jb
movsb
subl
xchg
cld
inc
es
inc
pusha
mov
mov
movb
jb
insl
test
les
xor
add
add
xchg
fstpt
out
jns
out
adc
adc
jp
cld
xor
mov
push
jb
mov
dec
enter
nop
dec
xor
in
shll
jbe
lret
jnp
insb
es
xchg
xor
jmp
leave
push
adc
test
xchg
addr16
fimull
mov
rcl
dec
add
jne
jb
in
das
xor
pop
lock
mov
mov
mov
scas
mov
movsb
lahf
movsl
lock
jb
fst
add
insb
fucomip
adc
adc
push
mov
sub
out
scas
push
push
pop
in
stos
lea
push
jmp
xor
mov
or
mov
aad
and
ret
imul
fcmovu
int3
test
ret
jge
fldt
rorl
inc
insl
stos
or
gs
mov
inc
in
jecxz
push
sahf
pop
int
aam
dec
insl
mov
mov
aam
or
sbb
adc
jnp
pop
stos
in
std
inc
sbb
ror
out
inc
lods
sub
sbbb
dec
rol
pop
jmp
mov
in
lods
mov
lea
push
and
cmpsb
add
pop
mov
adc
dec
dec
stos
and
sbb
ret
test
mov
sbb
shlb
or
popl
mov
imul
inc
imul
lea
out
or
pusha
cmp
inc
xchg
and
inc
mov
mov
dec
into
roll
cmp
test
add
test
testb
ljmp
sarb
mov
bswap
adc
xchg
shlb
cwtl
scas
cmp
cmp
jnp
or
jmp
sbb
movsl
xor
ljmp
stos
or
xor
jecxz
add
mov
push
push
adc
cs
mov
sbb
in
dec
enter
stos
sbb
jl
fidivrl
lock
add
je
addb
cld
jnp
cmp
scas
push
mov
dec
push
ss
fldl
fsubrs
daa
pop
cmpsl
xlat
in
out
mov
xor
das
cmp
inc
jo
inc
jecxz
or
sbb
mov
cmp
aad
enter
cmpsb
test
daa
inc
movsb
mov
fwait
mov
mov
imul
lret
push
aam
ret
imul
cmc
stos
ja
adc
mov
enter
setle
js
sub
int3
fbstp
mov
scas
test
or
pop
push
jle
and
jp
mov
decb
xlat
repz
or
cmp
inc
fsubl
out
xchg
inc
lods
ret
jle
jo
sbb
out
lcall
push
jmp
xor
mov
push
in
sbb
insl
leave
push
lods
lods
shl
mov
pushf
push
in
cmpsb
push
xor
sbb
add
icebp
sbb
push
std
or
and
jns
ficoms
shl
ja
cmp
rclb
jbe
pop
dec
push
inc
repz
push
xchg
fcomps
bound
ds
scas
je
pop
ffree
dec
in
sbb
sbbb
imul
push
cmp
sbb
lea
or
pop
pop
aas
mov
andb
mov
jo
jmp
pop
les
enter
jecxz
rcl
fdivrs
jge
arpl
loope
mov
push
sbb
test
popf
jno
pop
fsts
popa
into
push
inc
lahf
rcrl
mov
cwtl
sbb
filds
ret
adc
movsb
or
inc
enter
mov
jge
dec
fs
add
dec
jo
test
cltd
cmp
pusha
jecxz
insl
cwtl
cmpsl
test
jle
in
daa
lcall
push
mov
mov
adc
xchg
sub
xchg
pop
sub
cmpsl
push
mov
int3
lds
stos
mov
pop
ds
rcrl
subb
dec
pop
or
cltd
adc
clc
stc
addr16
inc
pop
fisubrl
sub
mov
icebp
stos
mov
push
dec
add
das
test
fisttpl
repnz
js
arpl
adc
and
shll
stc
jp
sbb
out
inc
or
mov
pop
or
les
aas
inc
adcl
lcall
xchg
lret
in
leave
push
sahf
push
stos
push
xchg
jno
pop
adc
test
mov
mov
add
out
mov
pop
jge
jnp
leave
pop
sub
sbb
xlat
pop
loope
jae
imul
mov
lcall
jbe
jnp
stc
xorb
nop
divl
pop
mov
adc
imul
mov
ja
mov
aas
cli
sub
and
sbbb
inc
fisttpll
jl
dec
push
push
dec
adc
fstpt
in
inc
push
movsb
push
pop
lods
repz
sbb
aas
push
aas
test
faddl
and
push
and
adc
push
push
mov
and
cltd
imul
iret
mov
jnp
fiadds
jo
push
jl
cli
cmp
das
push
ret
sub
daa
add
add
mov
inc
lahf
xor
popa
je
scas
sub
out
loope
sbb
add
out
xchg
out
jae
hlt
popa
mov
adc
sub
cmp
sbb
and
mov
rcl
and
iret
cli
mov
mov
imul
out
in
push
clc
mov
sbb
jnp
in
jmp
mov
xor
push
and
xor
gs
orb
xchg
mov
aad
lret
adc
push
add
inc
dec
addr16
dec
cmpsl
jl
ds
ljmp
pop
cmpl
mov
out
add
out
push
inc
mov
mov
and
aas
jecxz
add
push
clc
lods
sbb
lock
dec
sub
and
clc
stc
fsub
aam
push
adcl
movb
xor
enter
test
aam
jns
jae
iret
adc
dec
xor
sti
push
addr16
or
andb
sbb
fiaddl
cli
subl
push
mov
js
addr16
std
and
dec
imul
es
cmp
adc
jmp
xchg
out
fsub
cmp
leave
jp
lret
callw
mov
out
sub
jecxz
lahf
xchg
mov
and
mov
pushf
mov
outsb
lahf
outsl
xorl
repz
mov
pop
not
cld
daa
xchg
adc
in
push
mov
pushf
pop
jmp
sub
lret
add
jmp
mov
adc
mov
test
ret
inc
lock
mov
add
push
xor
or
pushf
mov
jecxz
pop
pop
cmp
pusha
pop
mov
pop
dec
gs
xor
out
in
fildll
mov
mov
mov
jns
ss
xchg
xchg
sbb
jmp
inc
adc
in
jae
push
xchg
je
outsb
or
int
jb
inc
daa
mov
mov
xchg
in
push
jmp
in
ret
mov
cmp
arpl
test
std
les
sbb
outsb
cs
mov
imul
je
mov
fistl
ja
fistps
dec
adc
adc
ret
and
sub
mov
sti
pushf
fwait
in
adc
inc
jnp
mov
sub
ret
dec
mov
mov
aad
pop
push
dec
adc
fnstenv
into
and
mov
shll
iret
sbb
mov
adc
add
inc
pop
loope
adc
mov
dec
dec
inc
scas
add
movsl
mov
ret
cltd
fistps
sbb
xor
sub
lods
add
cmp
data16
push
movsl
ficoml
mov
pop
icebp
mov
inc
rclb
xchg
sbb
cmp
mov
mov
mov
mov
sub
sbb
and
xchg
dec
jle
lock
or
add
mov
push
push
push
push
dec
adc
push
inc
arpl
lcall
jmp
adc
xlat
in
jne
push
jne
xor
jg
lds
lahf
insb
outsl
xor
inc
adc
in
and
mov
imul
sub
lcall
xchg
cmp
int3
cmp
and
xor
or
mov
cli
mov
nop
ret
call
mov
insl
std
sbb
pop
inc
cmp
cmp
pop
dec
cltd
jl
xchg
clc
push
in
out
in
mov
push
sub
jmp
cmp
mov
mov
inc
mov
sti
pop
jl
mov
shr
xor
inc
call
pop
add
add
mov
vmovss
jmp
sahf
pushf
lret
cs
in
fdivrl
ja
inc
pushf
cmpsb
sbb
push
cmp
rep
repnz
daa
adc
xchg
in
outsl
push
push
iret
ret
pop
adc
xor
imul
decl
jecxz
pop
aam
mov
rcll
inc
or
adc
mov
dec
or
or
dec
insl
stos
shrb
cmpsb
shll
rol
jno
jno
into
in
xchg
adc
sahf
in
cmp
jmp
fildl
jmp
inc
inc
negl
stc
sbb
push
lds
jne
xchg
mov
cli
mov
cld
imul
arpl
rolb
inc
into
dec
gs
stc
and
xor
and
mov
and
lock
adc
leave
cmpsb
mov
dec
add
iret
and
popa
sbb
cmc
mov
popa
push
pop
inc
xor
cmc
fsts
out
fidivrs
lea
jge
rcrl
and
push
sub
dec
aad
stc
xlat
outsb
jnp,pn
push
cmp
pop
add
imul
testb
sarl
idivl
xchg
or
mov
xchg
adc
test
pusha
mov
pop
sbb
rorl
cmp
cmp
mov
mov
jmp
mov
mov
insb
cltd
and
imulb
or
pusha
clc
in
arpl
imulb
lods
mov
jno
jmp
mov
mov
in
cmp
or
push
inc
mov
mov
test
in
icebp
adc
inc
sub
lcall
xor
push
addr16
nop
or
jecxz
sub
cmp
cmc
sbb
sub
and
repz
fs
xchg
ret
push
inc
adc
cmc
outsl
adc
out
adc
icebp
xchg
idivl
jne
fimull
xchg
in
or
lods
and
movb
cmp
cltd
fistps
hlt
and
jl
enter
testl
push
mov
loope
out
subl
sub
inc
hlt
mov
mov
dec
sti
push
fwait
pop
scas
test
mov
test
mov
adc
jge
in
stos
js
arpl
test
adc
jecxz
mov
stos
aad
inc
add
cmp
lods
addr16
pusha
fucomip
pop
push
repnz
xor
mov
lock
mov
cld
mov
popl
jo
nop
sti
mov
gs
jae
adc
pushf
mov
test
cld
or
dec
loop
sub
int
mov
fcomp
lock
arpl
shll
imull
mov
lea
lds
jno
mov
push
jae
int
mov
push
call
mov
xchg
push
subb
js
cmp
stc
int
mov
pop
push
mov
in
out
sbb
lods
adc
adc
iret
push
cmp
mov
insl
pusha
fs
les
lcall
pusha
shrb
jno
mov
inc
xor
inc
aaa
stos
lock
in
mov
pop
js
dec
inc
dec
stos
inc
or
inc
mov
sub
test
movsb
aad
pop
sbb
pushf
inc
push
xor
pop
ret
mov
pop
aas
add
filds
sbb
es
jg
not
outsb
inc
aas
je
aam
ljmp
cmc
test
add
addr16
xor
nop
mov
aad
stc
leave
lret
inc
push
xor
ficoml
and
dec
mov
stos
and
insb
and
jo
mov
pop
mov
daa
xor
clc
jl
iret
das
jecxz
and
hlt
mov
cs
das
ret
shll
sahf
movsl
adc
stos
mov
mov
sub
aad
cmpsl
aad
jb
xor
xchg
cwtl
daa
clc
pushf
mov
mov
ret
push
lea
push
test
call
shll
xor
cltd
jbe
jns
mov
jp
lret
fildl
popa
inc
aad
loop
fstpl
mov
push
ds
mov
and
xor
pop
in
and
pop
push
fs
test
cmp
jae
mov
hlt
mov
sbb
rorb
outsb
xor
pop
mov
insb
jle
fdivp
push
xor
daa
add
or
or
or
imul
or
mov
cmp
push
lds
lods
fbstp
imul
push
add
mov
and
es
mov
jge
outsl
mov
fcompl
shrl
add
ds
xchg
ja
push
inc
ljmp
push
pushf
mov
push
ds
lock
adc
add
pop
lea
or
xor
fbld
xor
in
pop
adc
mov
call
or
js
xor
xor
push
sbb
in
sbb
lods
and
aam
pushf
and
adc
mov
mov
in
shr
outsl
push
lock
mov
fists
and
cmp
mov
loopne
pop
fisubl
and
or
pop
mov
movsl
imulb
roll
test
repnz
push
inc
pop
xor
mov
add
je
aad
or
add
fcoms
add
mov
adc
clc
int3
sbb
leave
sbb
xor
xor
scas
xchg
adc
inc
pop
xlat
rolb
inc
subl
xchg
aam
stos
jge
sub
xor
enter
adc
mov
les
arpl
mov
pop
call
inc
or
adc
cli
or
or
pop
add
fldcw
jp
pop
inc
adc
je
int
mov
and
leave
clc
xchg
lods
rclb
sbb
movsl
scas
pop
push
dec
mov
orb
daa
or
outsb
int
les
sub
sbb
adc
ss
pop
clc
lods
inc
insl
cwtl
cs
aaa
inc
pop
or
push
sub
mov
cwtl
mov
out
cs
out
fcompl
sbb
iret
in
lea
jecxz
or
cmpl
xchg
pop
xor
or
mov
lahf
mov
insl
call
loop
add
sbb
into
orb
imul
lret
jb
adc
outsl
sbb
xor
inc
mov
cwtl
pop
insl
pop
push
mov
push
add
mov
push
xor
dec
ret
insb
fucomip
add
icebp
sub
cmp
xor
cmpsb
dec
pop
push
mov
jnp
fwait
idivb
or
pushf
pop
sbb
int
lds
mov
jb
enter
es
in
lret
loop
outsb
cmp
dec
and
xchg
mov
jmp
or
cmp
push
movl
in
xchg
inc
cmpsb
cmp
pop
sbb
mov
aam
cmpb
and
mov
icebp
jle
cmc
mov
stc
scas
xor
add
sbb
jg
rclb
lret
shll
xor
dec
out
in
jb
lcall
push
sbb
xchg
mov
xor
leave
jle
inc
inc
and
lods
imul
fstpt
mov
inc
or
push
sbb
clc
sub
jle
ds
fisubrs
pop
adc
aam
mov
dec
ljmp
fsubp
sub
das
sub
cld
add
jns
test
or
daa
gs
mov
pop
in
repz
mov
clc
mov
and
xor
sbb
inc
xchg
sti
mov
movsb
sti
sbb
cs
sub
gs
xchg
into
popa
popf
ljmp
aas
cmc
cltd
push
mov
frstor
je
xor
adc
ljmp
jns
aam
je
lods
int
lcall
jo
stc
testb
andb
push
jg
sub
mov
sub
dec
outsb
stos
xor
xor
cmpsl
sub
lock
sub
dec
pop
orb
out
sti
and
gs
push
and
and
adc
adc
pop
and
cmp
mov
in
mov
xor
lea
jecxz
ljmp
xchg
movsb
aad
or
jecxz
dec
shlb
repz
sbb
lock
arpl
jne
jb
inc
ffree
sbb
loop
dec
and
insb
dec
sub
fcom
sbb
cs
aad
shrl
test
fiadds
or
cmp
pop
aaa
xchg
mov
sub
stc
xchg
lods
negb
xor
mov
add
and
mov
xor
leave
test
mov
jecxz
scas
cmpsb
xlat
xchg
cmpsl
dec
sub
adc
xchg
mov
xor
nop
fstpl
and
sub
cli
lcall
out
inc
stos
jnp
imul
and
mov
xchg
ja
inc
test
xor
lods
sbb
sub
push
pop
lret
jmp
popf
loopne
jge
sbbb
xchg
pop
jle
sbb
mov
enter
stos
add
imul
lea
cmp
test
adc
insl
mov
pop
dec
pop
lock
cmp
mov
fsubrs
xchg
dec
mov
pmulhuw
fwait
cmp
mov
mov
sbb
pop
add
arpl
rolb
lret
lret
iret
aaa
or
cmp
push
pop
pop
stc
mov
or
cltd
js
add
adc
out
stos
rcrl
aaa
aaa
loope
xchg
stos
mov
movsl
arpl
push
mov
aad
sbb
in
fdivs
lods
sub
movl
inc
int
sti
sub
mov
cmp
cwtl
adc
xchg
inc
push
cmp
add
sub
xor
mov
stc
outsb
leave
loop
mov
cmp
leave
jne
ss
bound
jbe
lock
pop
mov
mov
ret
bound
inc
jno
xchg
dec
pop
xchg
push
pop
jnp
orb
push
push
xchg
jnp
out
cld
or
jle
and
cli
loop
fldenv
push
es
aas
cli
dec
push
jb
int3
neg
aaa
cmp
add
inc
cwtl
pop
in
jle
rcl
push
xor
fwait
adc
adc
cmpsb
or
ds
dec
stos
das
cmp
imul
dec
loopne
not
and
inc
jb
hlt
mov
adc
sbb
and
fsubrp
enter
inc
out
scas
xchg
mov
fdivr
and
jae
xchg
loop
jae,pt
fdivp
xchg
inc
out
aam
test
imul
fcomip
xor
int
jp
sti
pop
scas
pop
dec
or
dec
sbb
sahf
cmp
stos
cli
orl
pop
daa
push
data16
push
dec
mov
jno
movsl
repnz
cli
add
inc
dec
les
leave
pop
add
enter
pop
push
ficompl
fcoms
xlat
push
and
lock
jns
ss
jne
lahf
xchg
sub
mov
inc
jbe
test
and
loopne
lret
hlt
sbb
int3
insl
in
mov
sbb
f2xm1
mov
dec
mov
sbb
sub
or
inc
in
push
or
iret
shr
xchg
add
pop
jg
lret
gs
shr
dec
pop
out
inc
out
arpl
adc
dec
sbb
adc
out
mov
cmpsb
flds
and
rcr
addl
pop
mov
xlat
adc
cld
dec
pushf
xchg
cmpb
push
mov
fs
jne
enter
add
dec
or
xor
cmpsl
push
and
pop
mov
je
adc
movsl
or
addb
sti
push
mov
add
arpl
aam
hlt
pop
jg
imul
cmp
jb
repnz
push
dec
je
es
sbb
pop
fcomp
jp
mov
or
test
cld
cmp
hlt
pop
stc
mov
add
in
lret
push
test
test
inc
loope
mov
data16
push
fadd
push
xor
or
std
push
gs
icebp
push
pushf
adc
jg
popa
or
add
xchg
sbb
shll
lcall
cmp
cmp
and
pop
and
std
inc
lds
push
lcall
aam
sbb
dec
fisttpll
inc
xchg
push
jmp
inc
dec
xor
jl
repz
xor
imul
inc
adc
jl
cmp
aaa
ret
sahf
sbb
je
das
rdtsc
into
pop
mov
jecxz
or
add
mov
adc
out
push
in
mov
mov
or
out
mov
lods
cmp
sbbb
repz
lds
int3
pop
sbb
lds
lcall
shlb
adc
je
sbb
scas
mov
das
stc
mov
enter
lea
mov
dec
fs
xchg
inc
clc
hlt
test
mov
sti
ror
ds
cwtl
ret
xor
add
test
stos
repz
lods
xor
jmp
mov
mov
adc
shll
inc
pop
test
jb
pop
push
fcmovbe
sbb
cs
lcall
aad
dec
stos
mov
lods
mov
repz
fisubrl
cld
scas
int3
mov
aam
mov
es
push
lods
es
sti
adc
xlat
ja
aad
femms
fdiv
outsl
call
jo
mov
outsb
andb
cltd
mov
sbb
adc
add
out
movsl
loop
fildl
or
xchg
pop
inc
cmpsb
xchg
mov
push
hlt
mov
cmpsb
mov
add
xlat
push
and
test
mov
icebp
jnp
ss
mov
lock
pop
lods
aas
mov
hlt
fwait
inc
cmc
shll
in
fsubs
in
jp
scas
sub
ja
pop
xchg
sbb
sbb
insl
out
inc
lret
cwtl
sbb
mov
cmp
out
mov
out
adc
inc
ss
pushf
call
ss
add
mov
arpl
or
and
mov
ds
jbe
dec
sub
jl
mov
xchg
and
sbb
std
test
dec
lea
inc
mov
add
xchg
add
jge
cmp
pushf
les
dec
insb
arpl
es
mov
mov
lcall
test
es
xchg
out
cld
inc
incb
mov
sub
leave
inc
jp
addb
stc
cmp
fstps
sbb
and
loopne
xor
pop
mov
adc
adc
mov
cmp
sbb
pop
subb
adc
push
mov
outsb
mov
xorl
jnp
sub
in
test
mov
shrb
in
push
mov
sub
adc
pop
push
jnp
mov
push
mul
dec
imul
dec
into
fisttps
xchg
pop
ss
shlb
pop
push
xchg
dec
in
jae
jmp
fidivs
decb
sti
cmp
cli
loop
ljmp
push
sahf
clc
jnp
or
push
int3
outsb
mov
pusha
dec
data16
xlat
adc
fwait
data16
jg
push
jge
sbb
pop
sbb
cltd
sbb
lea
pop
icebp
out
setno
cmpsl
repnz
cwtl
rolb
inc
fsubl
sbb
mov
insl
and
adc
cmpsb
jecxz
iret
adc
imul
stc
adc
sbb
bound
push
and
sbb
aas
or
xlat
hlt
dec
jle
xor
out
shrl
cmp
mov
pop
scas
and
in
xor
imul
test
mov
push
sahf
stos
sbb
mov
data16
test
sub
adc
cmp
int3
sub
cmp
jno
daa
fs
imulb
sbb
cmpsb
stc
pop
and
dec
dec
lock
rclb
jl
cwtl
push
dec
ss
dec
sahf
cmc
mov
out
push
addr16
sbb
cld
imull
and
mov
xor
mov
call
sahf
clc
sbb
stos
jo
sahf
das
adc
int3
mov
pop
cltd
ss
idivl
pop
xor
aas
push
test
mov
ret
push
gs
call
pop
or
sbb
sbb
push
sbb
daa
jle
and
int3
std
pusha
xor
mov
test
cmp
xchg
pop
sbbb
lods
stc
inc
sub
adc
xchg
mov
cmpb
aam
repnz
jae
sub
cmc
push
cmp
inc
int
mov
int
sbb
filds
cmp
scas
cltd
mov
pop
mov
xchg
mov
imull
negb
cmp
adc
daa
push
movb
mov
xchg
pushf
jne
aas
jge
sub
adc
out
sbb
fwait
adc
push
mov
loop
cmp
jno
mov
fs
mov
or
jg
push
in
data16
cwtd
xchg
xchg
xchg
push
je
cmp
cltd
cli
pushf
dec
push
cltd
je
pop
and
aaa
xor
pop
xor
add
orb
out
fnstenv
test
data16
fistl
lahf
mov
movsl
xchg
aad
stc
pop
push
ja
shll
cmp
icebp
sub
xchg
in
mov
bound
scas
jecxz
lret
sbb
push
mov
sub
xor
call
rcll
add
loopne
sub
out
inc
mov
rolb
xor
out
add
xchg
enter
jne
int
jmp
cmpsb
je
sarl
jo
mov
mov
out
xchg
cltd
lcall
dec
outsl
xchg
out
cmp
aad
mov
test
test
adc
fidivl
push
scas
dec
ss
push
addr16
leave
imull
scas
psraw
cwtl
cmp
cs
cltd
stos
jecxz
stos
sbbb
or
jno
inc
cmpl
fisttpl
mov
xchg
call
out
rcll
je
lods
cmp
jno
scas
int3
ds
fimull
mov
adc
cld
inc
lods
or
jp
push
mov
xor
lea
nop
jno
pop
mov
mov
pusha
pop
pop
call
cmpsb
ds
out
ljmp
cltd
dec
leave
sub
mov
imul
jne
mov
fdivl
ja
xor
cmp
ja
add
lock
sbb
adc
pushf
lret
repz
pop
ds
je
mov
or
add
fs
test
add
fnstsw
inc
pusha
sbb
and
push
push
push
aaa
lock
dec
loopne
ret
pop
pop
imul
test
inc
icebp
mov
mov
gs
in
adc
mulb
dec
das
jmp
mov
mov
addr16
lods
mov
inc
bound
push
aas
pop
push
data16
mov
lahf
sahf
int3
inc
out
inc
rcrl
xor
aam
in
add
out
ljmp
je
sarb
sbb
mov
jno
dec
sbb
lret
sbb
sbb
mov
push
cmp
lea
jle
xchg
aaa
mov
mov
out
mov
fmuls
enter
mov
fcom
add
xchg
test
out
rorb
mov
scas
cmp
ds
jp
movsb
mov
cwtl
fistpll
and
xor
mov
push
mov
xor
or
push
shrl
int
pop
pusha
add
in
push
lret
sti
movsl
xor
xlat
sbb
lods
xchg
and
pop
pop
xchg
xchg
mov
mov
adc
push
lret
lret
bound
divb
add
scas
mov
and
mov
les
dec
stc
cli
shrb
clc
ljmp
add
in
out
add
dec
shlb
fists
sub
addr16
stc
bound
jno
movsl
adc
lea
cwtl
inc
int3
adc
and
mov
add
mov
jnp
ljmp
or
std
adc
push
fisubs
imul
inc
xlat
roll
inc
jge
inc
xor
pop
jno
cmc
cmp
or
dec
fucom
dec
ds
aad
rcrl
cwtl
sahf
jno
pop
imul
jbe
push
fxtract
jecxz
mov
out
inc
aam
rorl
imul
xor
push
leave
mov
test
in
sbb
int3
dec
addr16
mov
fiaddl
les
jns
ret
or
int3
fs
push
arpl
test
mov
cmp
ud2
jg
adc
jmp
sub
fmuls
stos
in
movsl
xchg
dec
in
jecxz
aad
inc
bound
push
or
jnp
insl
in
ret
adc
fs
cmpsl
test
enter
in
aam
repz
inc
in
mov
addl
clc
daa
loopne
dec
ja
lods
lds
add
imul
loope
fadds
push
sub
js
bound
movsl
inc
mov
sbb
cmpsb
push
or
clc
xchg
test
in
loopne
push
stos
mov
or
in
jmp
in
fildl
ds
mov
bound
pop
jg
xor
mov
sub
mov
push
mov
insl
sub
call
pop
xor
inc
xchg
and
jg
insb
lret
mov
cmp
divl
pop
adc
push
push
cmpb
ljmp
lcall
inc
imul
pop
push
popa
xor
xlat
adc
sub
adc
lods
sarl
scas
push
rorb
mov
loopne
aad
cli
enter
sub
mov
pop
and
movsb
daa
push
or
xor
xchg
xchg
xor
mov
sub
xor
test
dec
push
mov
iret
dec
decl
pop
sub
inc
daa
pop
pop
mov
push
dec
dec
fldcw
das
fwait
jo
test
lea
mov
mov
push
push
cmp
popf
mov
popf
ja
push
sub
mov
repnz
dec
loopne
xor
std
add
push
fstpt
adc
mulb
or
xorl
cmpsl
jmp
clc
std
sbb
sbb
flds
mov
push
push
and
mov
mov
lods
or
lahf
adc
scas
out
jge
roll
mov
inc
add
in
in
cmp
sahf
sahf
mov
call
jg
subb
pop
mov
cmpsb
stc
icebp
cmp
cmp
mov
mov
in
int3
cmpsb
stos
stos
inc
fmul
test
iret
mov
mov
imul
adc
push
fsts
ja
call
inc
stos
cmp
lods
push
mov
pushf
add
xchg
mov
mov
mov
xchg
mov
fists
repnz
pop
push
jnp
repz
or
or
cmp
icebp
and
and
lea
add
into
push
test
pop
xchg
sbb
iret
dec
adcb
mov
dec
xchg
mov
ljmp
xor
outsl
sbb
pop
sub
popf
das
jnp,pt
or
fldl
daa
jmp
fldl
repnz
lea
push
cli
and
nop
pushl
xchg
mov
lea
dec
fadds
shl
mov
shlb
js
mov
in
inc
enter
inc
addr16
dec
out
std
mov
imul
pop
mov
add
mov
push
in
pop
jg
push
xchg
mov
ljmp
mov
xor
aam
jbe
mov
addb
jle
leave
cmc
flds
insb
out
inc
xor
mov
nop
arpl
and
inc
mov
xor
bound
and
stc
xchg
lods
dec
imul
bound
cmp
cmp
cmp
mov
xor
mov
pushf
xchg
jge
or
hlt
shrd
rcrb
push
hlt
es
aad
imul
stc
bound
scas
repnz
hlt
mov
cmp
cld
aam
push
mov
mov
mov
ja
mov
adc
mov
jns
ja
nop
aas
pop
loope
add
mov
sub
sbb
es
movsb
fucomp
pop
divb
addr16
cmp
mov
xlat
push
jg
mov
or
fstl
sbb
cld
cmp
dec
out
stos
insl
je
mov
jae
jns
push
sub
inc
pushf
addb
enter
fadd
cmp
adc
jb
das
sub
popa
mov
in
push
xchg
jp
addl
cmp
dec
pop
sub
pop
jbe
enter
jecxz
mov
cmp
cmp
mov
mov
jbe
sbbl
jns
sub
addl
xchg
aaa
out
iret
lcall
sub
cmp
into
pop
out
sub
xchg
bound
fwait
int
or
xchg
pop
inc
or
push
xchg
or
adc
mov
aam
fdiv
loopne
cmp
mov
in
add
cmc
in
imul
scas
sbb
mov
in
mov
stos
repnz
dec
mov
lock
add
sub
mov
add
arpl
xlat
or
and
mov
xor
push
iret
in
aam
or
xor
mov
add
into
test
loope
movsl
add
insb
sbb
sahf
pop
push
es
or
mov
inc
das
xchg
mov
xchg
cmp
xchg
adc
lea
and
mov
push
testl
sahf
and
inc
cld
xor
jae
add
sub
das
inc
outsb
test
xor
adc
test
rcll
pop
cli
decb
or
and
arpl
mov
repnz
or
cmp
mulb
xchg
cmpsb
lds
jecxz
mov
jge
pop
jns
in
jns
movsb
push
mov
dec
xchg
xchg
sbb
jns
imul
daa
scas
cwtl
mov
mov
or
je
fiaddl
imul
out
jg
push
aas
hlt
xor
add
fcomp
lcall
icebp
cmp
ja
sub
js
imul
jne
leave
shll
push
mov
or
pop
in
jne
aam
push
fadds
push
push
or
mov
jg
add
ljmp
mov
jle
pop
fcmovu
cli
push
sub
das
lods
push
add
lods
test
fs
push
add
mull
cmp
cmp
mov
out
or
popf
mov
push
push
cli
aad
test
outsl
gs
jae
fmull
aam
xchg
jb
mov
mov
mov
ja
dec
ljmp
or
dec
cli
repnz
cmc
push
loope
sti
cmc
pop
push
subb
lret
and
addl
pop
inc
nop
mov
movsb
adc
inc
jle
lret
push
xchg
gs
mov
sbb
pop
jmp
imul
jns
stos
mov
jle
xor
inc
repz
push
jge
rorb
js
jg
lret
add
fisubs
leave
jmp
in
fldt
cltd
cmpsb
xor
fsubrl
daa
push
mov
mov
aas
inc
ljmp
xor
dec
aad
bound
lcall
or
test
jo
lods
nop
cltd
adc
movsl
sub
or
or
pop
mov
adc
xchg
cmc
or
lret
adc
cmp
cs
insb
out
inc
test
ret
rorl
gs
sbb
xchg
add
dec
pop
xlat
ja
rcll
and
inc
arpl
dec
ret
mov
mov
inc
icebp
ds
xchg
bound
ss
in
test
jno
clc
lock
sub
jno
rcll
and
inc
int
hlt
or
lcall
push
xchg
mov
inc
and
shlb
cs
popa
sub
in
lock
sub
adc
movsb
aaa
and
jbe
aas
loopne
nop
data16
mov
lods
scas
and
push
lock
mov
lock
rorb
jmp
mov
lret
loopne
jp
inc
pop
push
mov
mov
mov
xor
mov
jne
repz
fistpl
inc
mov
lret
push
fdivs
insl
sub
lods
or
cmp
xchg
hlt
sbb
call
shrl
xlat
add
jns
inc
pop
xchg
rcll
cltd
std
dec
pop
add
lret
and
pop
imul
aad
movsb
sub
add
add
clc
imul
ret
loope
inc
xchg
ja
mov
loopne
dec
jmp
xor
insb
or
cmpsl
adcl
mov
imul
mov
lds
or
int
jo
mov
cmp
add
jo
outsb
jno
ja
add
ljmp
push
add
dec
popw
loope
pop
sub
pop
jg
sub
call
aad
inc
test
fdivl
hlt
scas
jne
and
lock
xor
insb
fnstenv
out
sti
ja
lahf
out
jecxz
inc
ja
popf
std
jge
fldl2e
mov
es
and
dec
in
aas
loopne
cmp
lcall
sbb
addb
pop
inc
push
test
test
fistl
jb
mov
insl
sub
in
jo
loopne
sub
pop
jecxz
and
scas
cmp
movsb
dec
ja
in
sbb
add
js
popa
addl
jb
jp
aas
sub
sti
int3
orb
mov
and
xor
mov
mov
jns
and
arpl
pusha
push
inc
out
imul
xor
inc
and
movsw
cli
mov
mov
cwtl
lods
jecxz
xchg
jge
mov
adcb
xor
loop
test
or
cmp
ds
mov
push
pop
mov
popa
gs
pusha
out
ds
add
xor
inc
test
push
gs
iret
fs
in
loop
outsb
sub
cld
call
mov
inc
repz
xlat
imul
xchg
loope
pop
push
jmp
fs
rcll
cmp
cmp
jl
aad
clc
jnp
pop
xchg
lcall
push
xor
sti
inc
out
call
and
push
add
mov
enter
add
or
or
or
push
outsl
add
mov
jns
sub
pop
dec
dec
outsl
hlt
stc
nop
mov
cli
cmc
int3
pop
cmp
mov
movsb
sub
nop
push
test
jmp
test
pushf
xchg
leave
out
std
cmp
cmp
je
movsb
push
cmp
cmp
mov
xchg
jb
cmp
jmp
cmpsb
push
test
mov
rclb
inc
mov
sub
inc
aaa
push
mov
dec
loope
stc
sbb
addr16
cmp
sahf
xchg
cmpsb
insb
mov
orl
aaa
ds
outsl
pop
xor
sbbb
inc
mov
lret
jp
jp
xchg
lds
sub
pop
andl
cmp
push
pop
cmp
and
adc
lock
mov
cmp
jbe
add
call
jge
cmp
pop
idivl
insl
pusha
cmpsw
fistpll
or
pusha
iret
test
pop
insl
scas
xchg
dec
inc
daa
inc
repz
lcall
xchg
mov
arpl
sar
mov
mov
jmp
sti
dec
push
aad
inc
andb
repz
lcall
jb
ret
pusha
popf
loope
rolb
xchg
ss
push
jno
icebp
pop
leave
jle
in
lods
popa
jle
push
sub
inc
imul
push
dec
lret
mov
es
lret
aad
mov
mov
mov
push
mov
xor
fisttps
pop
xlat
sar
into
pop
jno
sbb
adc
ljmp
jae
scas
cmpb
stc
mov
mov
sbb
sub
pop
or
xor
push
in
out
in
imul
lcall
sub
movsl
in
pop
dec
dec
push
pusha
cli
cmp
or
push
daa
addr16
rclb
jne
or
inc
sub
jno,pn
sbb
xor
fsubrs
cs
jl
inc
subl
pop
stos
call
xor
repnz
scas
jnp
mov
icebp
jecxz
clc
mov
cmp
xchg
andl
push
and
xor
inc
cmp
push
push
dec
sbb
movzbl
call
add
stc
dec
in
jecxz
mov
pop
jne
xor
pop
into
inc
in
jmp
sti
jbe
dec
inc
push
les
cmp
cmp
push
mov
jo
jno
add
outsb
rol
out
add
outsb
add
int3
aad
mov
and
imul
inc
int3
lock
aas
cmp
das
mov
mov
xor
in
sub
std
rcrb
jmp
inc
rorl
mov
in
int3
push
add
popa
dec
insl
cmp
push
aam
jg
into
pop
push
dec
imul
mov
jp
dec
sub
nop
push
iret
jb
push
and
xor
loop
pop
fcomps
or
lcall
jmp
pop
outsl
add
push
int3
pop
xchg
test
dec
addb
sbb
inc
das
fmuls
bound
into
add
aas
es
or
dec
shrl
push
mov
scas
fsubrl
in
mov
inc
js
mov
inc
xchg
jo
xchg
iret
inc
push
mov
jbe
or
dec
hlt
daa
out
fdiv
nop
jns
leave
arpl
shl
scas
inc
dec
dec
test
inc
mov
push
sti
pop
mov
cmp
test
xor
fsubrs
and
nop
in
add
jmp
jl
push
divl
jb
bound
xor
mov
push
loope
in
gs
xchg
ja
or
xor
repnz
popa
jnp
js
mov
pop
jecxz
cmp
pop
mov
lcall
push
std
movsl
pusha
mov
and
add
mov
notl
ret
std
xor
adc
pop
push
daa
inc
cmp
mov
movb
xor
xchg
call
pop
mov
push
sbb
mov
popf
loop
mov
xchg
mov
cli
aam
lods
incl
jae
out
pusha
add
add
int
adc
adc
adc
aas
xchg
out
mov
jno
push
daa
lcall
pop
cmc
out
sub
jnp
popa
scas
ja
and
bswap
mulb
inc
test
mov
out
mov
in
cwtl
in
adc
ja
push
add
jns
cmp
outsl
test
sbb
dec
pop
aad
arpl
and
scas
adc
enter
dec
aam
call
or
orl
ja
mov
lret
xor
enter
ret
add
das
mull
mov
push
sbb
in
movsb
xchg
dec
pop
xor
in
xchg
pop
lcall
dec
pop
add
mov
outsb
add
stos
push
pop
pop
in
and
icebp
xor
xor
cld
lahf
fildl
shrl
je
clc
mov
push
pop
and
lods
loopne
fsts
dec
push
and
mov
in
dec
mov
sahf
sbb
xor
fstl
xor
sbbb
jl
fdivl
fldl
inc
js
in
cmp
outsl
vpshab
sub
fisubl
or
inc
lcall
sbb
xchg
sub
and
mov
xor
jecxz
xchg
rol
jno
xchg
jae
jmp
ss
fld
fisttpl
popa
push
xchg
mov
add
in
cmp
xchg
jecxz
cs
adc
push
inc
pop
iret
sbbl
scas
sub
cmp
dec
xchg
rcr
sbb
sub
loop
pop
fldcw
push
pop
adc
ljmp
mov
sar
jb
mov
sti
jo
loopne
xchg
insb
and
fsubrl
stc
dec
in
pop
shrl
and
ret
stc
test
loope
adc
mov
leave
pop
add
inc
sub
pop
pop
notb
push
sbb
lds
and
out
ja
dec
and
fisubrs
jge
mov
imull
inc
cs
sbb
push
mov
mov
sbb
xchg
dec
push
adc
adc
xchg
inc
in
mov
aas
shrb
mov
sbb
test
dec
mov
fs
test
pop
arpl
xchg
or
aaa
aas
push
cmpsl
ja
xchg
sbbb
dec
jle
adc
aaa
rcll
or
mov
and
mov
cmp
mov
sbb
push
in
in
jae
fldt
imul
push
fldcw
jns
insb
cs
add
mov
jle
inc
pop
mov
dec
or
and
or
fbstp
idivl
mov
add
pop
repz
pop
pop
pop
mov
femms
ror
ljmp
aad
in
imulb
pop
sbb
push
mov
xlat
adc
mov
push
and
shrl
and
push
jl
int3
push
ret
cmpsl
js
std
out
push
imul
scas
or
dec
iret
dec
in
mov
fnstsw
jo
inc
jle
mov
test
mov
sar
adc
and
dec
lcall
arpl
ds
popa
into
inc
test
dec
jmp
test
aaa
fnstenv
pop
insb
std
add
adc
rorl
mov
mov
or
cmp
jno
rcrb
xchg
jg
outsl
and
enter
sub
pop
sub
mov
cmp
add
push
ret
shll
rcrb
dec
dec
out
sbb
add
fsubrs
stos
lock
and
test
movups
in
aas
inc
push
push
shll
add
ja
mov
sub
daa
mov
push
call
xor
jp
sbb
clc
cltd
xchg
clc
popl
sti
test
mov
sbb
sub
jns
dec
mov
xor
or
ret
and
inc
inc
jae
jns
push
inc
jg
pop
xchg
dec
in
push
in
sbb
ss
sbb
sbbb
lock
jl
jno
ret
xchg
lahf
pop
ret
mov
outsb
out
leave
das
inc
cli
outsl
push
outsb
mov
popf
mov
xchg
xchg
lahf
ja
fs
aas
inc
jmp
inc
shl
xor
xchg
mov
push
loopne
hlt
mov
outsb
idivb
mov
xor
hlt
jge
sub
mov
lock
or
leave
mov
stos
pop
mov
es
decb
lds
lcall
sub
cmpl
cld
sbbl
in
add
es
mov
xchg
push
or
mov
inc
lret
adc
cmpsl
lret
jne
lret
lcall
push
push
sub
xchg
jmp
repnz
mov
xchg
pop
enter
fbld
xor
dec
icebp
outsb
je
sahf
mov
paddsb
adc
jge
loop
fisttps
pop
xor
and
in
xchg
or
fmul
push
xor
test
mov
add
or
inc
push
push
adc
or
inc
mov
cli
call
mov
mov
lea
mov
jns
sbbb
push
push
lock
jb
aam
mov
imul
xchg
or
repnz
jbe
stc
adc
add
jl
sub
mov
aaa
fisubrs
cmp
push
mov
scas
sub
xchg
mov
scas
cmp
cmp
or
mov
sub
aaa
xor
cmc
daa
into
dec
xor
nop
pop
pop
cmp
ds
out
dec
scas
pop
outsl
stos
ficoml
pop
mov
push
sub
mov
mov
ja
fs
shlb
das
ja
cli
mov
add
pop
jo
cmpb
leave
fstl
movb
and
int3
ss
inc
mov
rcr
jb
mov
xchg
ja
add
jge
and
mov
jb
cmpsl
sbb
pop
jbe
xchg
sar
adc
vmovmskps
mov
and
bound
add
pop
xchg
dec
cmp
divb
orl
rclb
movq
push
pop
iret
adc
adc
sub
imul
int3
cmpsb
cs
int3
jo
iret
jb
lock
mov
ss
fwait
mov
imul
mov
sti
stc
std
cmp
arpl
test
xchg
cmp
push
mov
pop
nop
lcall
adcl
dec
push
and
xchg
jge
and
and
jns
scas
mov
outsb
in
test
xor
mov
jmp
ret
data16
out
mov
jne
add
out
dec
iret
aas
minps
pop
pop
sub
add
clc
jge
ficoml
negb
adc
sub
mov
sub
sbb
lods
cmc
push
cmp
aaa
pop
mov
cmp
movsl
test
stos
mov
xor
std
in
bound
mov
pop
out
sti
imul
push
and
in
addr16
adc
cltd
test
jb
outsb
sbb
outsl
je
addr16
fadds
push
fidivrl
and
adc
jnp
ret
dec
inc
lret
scas
add
add
or
stos
xchg
dec
mov
repnz
out
mov
lcall
pop
loop
jne
inc
mov
add
lock
icebp
cmp
mov
fstpt
and
adc
push
lea
xchg
les
push
cmc
ficompl
push
sbbb
je
lea
inc
sub
loope
push
xchg
jg
inc
cmpsl
out
hlt
push
sbb
int
enter
dec
and
sbbb
jns
xchg
pop
push
mov
sbb
xor
in
and
aaa
mov
push
xchg
dec
xor
scas
sub
cltd
movsb
ffree
and
jno
addl
xchg
cmp
inc
out
and
jo
dec
lock
fstpl
cmpl
add
push
pop
iret
xchg
sarb
jle
gs
lods
dec
notl
mov
neg
pop
cld
ljmp
arpl
cld
cmp
shll
pop
xor
scas
add
mov
out
fnstcw
pop
jb
movsl
pop
sub
test
rcrb
mov
mov
jnp
dec
adc
adc
popf
dec
cmp
fdivl
mov
jmp
sbb
filds
getsec
add
and
dec
sub
adc
roll
sahf
subb
inc
cmp
ret
push
ljmp
out
pop
in
push
lock
mov
imul
pop
shll
iret
pop
lahf
and
pop
loop
ja
cmp
mov
mov
xchg
cmp
sbb
sub
ds
lods
jge
fucom
push
cs
and
cwtl
adc
push
int
jbe
daa
dec
call
cwtl
mov
roll
das
push
jge
fmull
and
ss
or
jnp
lret
stos
or
test
movb
cld
push
fiaddl
sub
pop
sub
repz
addr16
dec
jbe
out
cmp
mov
scas
add
mov
jnp
sbb
xlat
mov
fucomp
rolb
dec
inc
inc
xchg
inc
push
xchg
pop
sbb
and
in
lods
jmp
arpl
sbb
cmp
sbb
pop
cs
insb
xchg
push
push
sub
aas
test
insb
sti
lcall
cmp
xchg
enter
fisttps
push
mov
hlt
sub
xor
cmp
out
adc
inc
cmp
inc
stos
stos
push
cs
mov
sbb
pop
jecxz
sub
outsl
negl
pop
push
xchg
cmpl
push
ret
enter
mov
jmp
mov
cmc
lahf
sbb
or
ljmp
daa
pop
and
cmp
je
xchg
jp
mov
pop
addr16
jnp
pop
and
and
mov
mov
stc
jns
test
mov
pop
in
lcall
pop
sahf
stos
ret
call
jl
cmp
mov
lcall
mov
shll
clc
xchg
sub
push
or
test
cmp
dec
and
mov
cmp
cmp
fwait
dec
mov
adc
pop
fucomip
cmp
lahf
mov
mov
mulb
test
in
push
cmpsl
pop
out
fdivs
aam
inc
inc
cwtl
mov
push
xor
sub
test
dec
aad
lea
enter
movsl
inc
xchg
es
addr16
and
lret
out
cmc
nop
lock
dec
shlb
sbb
fnstsw
gs
mov
or
lds
ficoml
data16
cmp
dec
mov
pop
in
dec
daa
xchg
ficompl
dec
or
jnp
scas
lcall
dec
mov
mov
addr16
mov
out
pop
mov
cmp
pop
cmp
push
outsl
mov
push
jbe
adc
ljmp
and
sub
push
lds
inc
mov
cmovnp
xor
fnsave
mov
cli
sbb
mov
aam
mov
or
ret
movsb
jle
sahf
inc
mov
mov
add
xchg
stc
inc
ret
xchg
jge
mov
popa
aad
jecxz
sahf
jmp
jmp
ds
fwait
cwtl
xchg
adc
cmpsb
xchg
rorl
pusha
sbb
arpl
jp
push
push
xor
neg
shll
add
cwtl
std
push
add
call
xchg
mov
dec
int3
int3
or
push
sub
jmp
lahf
lret
adc
aas
movsb
cmp
jbe
mov
mov
inc
loope
shrb
jno
repnz
adc
pop
jecxz
mov
jmp
xchg
pop
popa
or
enter
stos
jge
fs
leave
mov
fisubs
dec
cmp
arpl
push
stos
inc
movsl
sbb
test
repnz
jbe
fs
inc
mov
push
dec
pop
outsb
clc
sub
shll
push
cmovl
or
mov
sub
adc
sub
sbb
pop
push
mov
add
adc
mov
rorb
sbb
xchg
add
mov
mov
int3
fwait
push
jmp
mov
ds
or
dec
xor
xor
dec
xor
lea
data16
jp
scas
inc
push
xlat
push
sbb
rclb
cmp
sbb
jp
pop
lahf
in
lret
jle
cmp
sysenter
je
out
rcrl
xchg
lods
shll
outsl
jle
aas
movb
cli
inc
fcmovnu
in
mov
mov
outsl
imul
sub
jns
dec
ret
adcb
adc
adc
and
adc
jl
push
mov
sub
adc
mov
pop
pop
jns
mov
pop
pop
pop
loope
test
lock
int3
call
sbb
aad
imul
dec
movsb
cmpsb
mov
or
jns
in
mov
mov
or
xchg
cld
push
stc
ss
sbb
add
lea
and
fwait
mov
sbb
sahf
mov
ret
lods
mov
insb
inc
les
rcl
imul
add
mov
in
in
js
sub
data16
loopne
add
pop
out
sub
rorl
adc
and
aad
xor
xor
sbb
add
icebp
adc
clc
popf
mul
xchg
leave
ds
sub
in
xchg
sub
ficoms
cmp
mov
dec
loop
cmp
xchg
dec
faddl
outsb
rorb
cld
sbb
gs
pushf
stc
aas
outsl
mov
push
pushf
adc
lods
andb
nop
aam
sbb
push
mov
shlb
aaa
testl
lea
or
and
lret
rorb
loopne
movsb
xor
es
xchg
pop
xorb
fidivrs
fisubrs
xchg
jecxz
push
movsl
shlb
push
addb
and
or
out
xor
imul
push
mov
insb
leave
add
sub
xchg
daa
inc
insl
pop
lods
cmp
xor
pop
pop
mov
mov
fisubrs
cmp
in
xor
aas
hlt
jnp
and
jl
mov
pop
sub
adc
leave
ja
add
insl
popa
jns
in
mov
in
out
xorb
cmpsl
ss
mov
mov
pop
outsb
xor
xor
leave
scas
jb
cwtl
sub
adc
aad
inc
cwtl
lret
mov
push
mov
leave
into
ret
mov
imul
ja
inc
inc
mulb
jg
dec
arpl
fmulp
dec
ret
jnp
push
dec
mov
xor
push
pop
xor
cmp
or
jb
push
mov
add
jbe
dec
xlat
pop
mov
mov
or
fimuls
int
ud2
mov
arpl
sbb
dec
push
xchg
test
stc
sbb
enter
and
stos
pop
pop
mov
add
jge
mov
push
xor
push
cmp
push
rorl
mov
inc
xchg
jnp
daa
rcrb
stos
pusha
mov
push
xchg
ss
es
data16
outsl
mov
adc
aaa
ja
mov
data16
iret
stos
shl
mov
ss
jnp
mov
loop
lock
icebp
pop
loope,pt
in
icebp
sub
test
push
sub
cmp
xchg
pop
daa
push
jbe
arpl
push
cmp
int3
rol
dec
fidivs
cmp
loopne
inc
xchg
addr16
mov
lahf
test
sti
adcb
das
push
ret
pushf
mov
sbb
movsl
pop
mov
aad
movsb
int
pop
ja
out
pushf
dec
ret
adc
les
push
push
scas
xchg
aad
std
imul
jecxz
int3
ret
push
inc
fisttps
stos
stos
inc
pop
repz
jp
or
sbb
ret
dec
inc
or
inc
mov
dec
mov
or
add
inc
mov
jg
sarl
movsb
jg
fcomps
push
inc
jmp
inc
ret
mov
lods
test
add
jmp
stos
pop
frstor
mov
add
inc
push
mov
mov
sub
sbb
or
ds
filds
loopne
xchg
sbb
leave
lea
movsb
push
repz
adc
sub
notb
dec
aad
lret
cmp
int3
std
popa
jle
push
scas
mov
outsl
jg
fildl
mov
mov
sbb
xor
sbb
rclb
mov
dec
leave
repnz
mov
stc
sbb
dec
fcompl
out
jnp
int
lret
imul
out
pop
rcll
xchg
in
mov
and
add
mov
or
sarb
mov
cmpsb
sbb
addl
out
xor
sub
pop
cmp
aas
ljmp
roll
sub
push
cmp
inc
lods
push
test
xchg
add
cmp
mov
xchg
sbb
js
loope
ljmp
mov
adc
inc
cmc
jmpw
inc
sbb
push
lret
les
nop
inc
test
in
movsb
jecxz
sbb
sarl
mov
lret
add
or
insl
sbb
call
adc
xor
mov
xlat
gs
add
sahf
sub
adc
jno
addr16
mov
jae
xor
adc
mov
mov
push
fldl
mov
jmp
lret
fcomps
add
xor
notl
dec
adc
sub
jne
sub
dec
jo
mov
add
stos
fld
cmc
outsl
add
sbb
bound
sbb
mov
or
xor
pop
out
popa
add
mov
cmpb
push
cwtl
and
cmp
stc
push
pushf
dec
int
and
sub
imul
push
daa
rol
iret
adcl
sub
push
mov
mov
sbb
aaa
pop
mov
into
in
sbb
cmp
dec
testl
lcall
test
push
jae
xor
push
pop
mov
jne
xchg
stc
jge
xchg
nop
mov
xor
cmc
fistpl
xchg
out
stc
in
mov
push
repz
xchg
xchg
lret
mov
push
popf
xlat
test
mov
cmpsl
mov
das
in
sbb
xchg
pusha
pusha
int
jmp
stc
push
adc
int3
add
sbb
sbb
pop
mov
xchg
adc
aas
test
sti
test
xor
jae
push
push
sub
dec
push
fisubrl
mov
and
test
call
test
cld
and
push
mov
vpcmpeqd
xchg
jmp
das
xor
push
notl
dec
fdivrl
push
pop
ss
mov
fimull
addr16
testl
aam
insl
mov
mov
int3
dec
adc
jge
movsl
sub
mov
add
adc
push
orl
inc
adc
call
pop
inc
xchg
mov
adc
pop
pop
insl
push
or
in
mov
lret
sbb
icebp
pop
sbb
pop
ret
out
pop
fwait
dec
pop
cmc
nop
add
sub
add
push
adc
das
fnstenv
lea
mov
sbb
mov
cmp
test
jg
mov
jmp
xlat
mov
imul
shrl
stos
adc
imul
mov
fyl2xp1
push
or
jge
rcrb
sbb
movsb
ljmp
pop
or
sbb
jmp
fwait
cmp
jmp
sbb
and
repz
add
jmp
psubd
jmp
jle
sahf
adc
and
mov
es
sbb
sub
test
jp
outsl
movsl
mov
jp
dec
jmp
mov
and
or
xchg
data16
jb
or
jae
dec
push
or
test
jmp
fildll
xorb
imul
pushf
jmp
add
and
popf
xor
jmp
arpl
xchg
sub
jmp
jmp
mov
and
imul
jns
and
test
pop
or
sub
sbb
das
frstor
addb
push
loopne
mov
pop
enter
popf
les
add
cmp
daa
pop
xor
test
xchg
or
push
adc
fld
or
lods
mov
mov
or
xlat
pop
dec
fwait
cwtl
sub
rclb
sbb
inc
rcll
xchg
mov
in
cmp
inc
add
sub
pop
push
or
push
cli
gs
popf
stc
or
bound
push
ret
and
pop
or
sbb
cwtl
add
ljmp
mov
aaa
inc
or
pop
arpl
and
int
lahf
cmp
movl
arpl
add
lea
jle
orb
out
pop
out
pop
lods
mov
xchg
fcmovnu
dec
movsl
xchg
sub
das
test
cwtl
xchg
das
mov
xchg
xor
inc
push
cmp
jl
popa
mov
inc
sub
int3
push
push
push
pop
dec
adc
jns
mov
insb
inc
sbb
xchg
mov
jb
sahf
add
and
lock
movsl
sub
pop
out
test
push
fcmovne
test
dec
fsubrs
push
lahf
icebp
nop
out
push
lcall
cmp
or
daa
lret
cld
cmp
rorl
lret
rorl
dec
jg
fmull
or
xchg
push
jnp
sub
pop
call
aas
adc
leave
inc
repnz
add
xor
aaa
push
shrb
jae
add
pop
sub
scas
or
xchg
fmul
inc
stos
outsb
jno
mov
std
add
clc
arpl
mov
push
rcl
dec
repnz
test
xchg
aad
mov
xchg
dec
xor
mov
dec
add
loop
sbb
andb
or
std
jb
imul
xchg
pushf
scas
xchg
push
jnp
xor
xor
pop
lods
arpl
jnp
jnp
inc
sbb
cmp
outsb
mov
mov
add
imul
repz
and
sub
mov
xor
orb
insb
scas
adc
sarl
hlt
movsb
stc
add
and
mov
sbb
pop
adc
jb
cltd
xor
int3
jb
fildll
icebp
insb
sub
xor
mov
into
jg
jo
mov
test
outsb
pop
push
insb
in
inc
rcll
cmp
dec
xlat
test
movsb
cmpb
das
test
testl
nop
movsl
cmp
in
xchg
mov
add
fcmovne
ficoml
das
inc
mov
int
cmp
into
inc
out
push
call
test
jecxz
mov
fs
cs
add
daa
pop
xor
xchg
and
cmp
xchg
stos
push
mov
and
lods
repz
cmpl
test
xchg
iret
stos
aas
push
pushf
dec
bound
in
adc
pop
adc
ret
dec
in
inc
sub
sbb
push
arpl
push
cmp
push
or
xchg
stos
inc
sub
cwtl
repnz
pusha
lock
mov
and
loopne
xorl
lds
shl
imul
cmpxchg
add
loopne
xlat
adc
sbbb
ret
dec
aaa
and
mov
rcll
push
int
aad
outsl
test
mov
mov
stos
jns
jbe
mov
jp
jg
xor
mov
ds
jl
mov
inc
pop
in
in
sub
int
xchg
in
adc
mov
mov
dec
in
add
mov
lahf
rcrl
adc
aaa
add
out
in
mov
inc
mov
bswap
push
pushf
mov
nop
es
andb
jne,pn
orb
xchg
and
mov
into
add
decb
stos
mov
xchg
push
arpl
jns
movsl
and
mov
sbb
jae
in
jbe
mov
push
xchg
loopne
pop
push
iret
popf
addl
scas
in
movsl
jle
mov
in
les
jmp
sub
mov
fisubrl
xchg
jecxz
cmp
push
xchg
xor
adc
or
push
cmc
jo
ljmp
cmpl
mov
cld
fsubl
and
ss
and
push
xor
and
imul
mov
test
mov
xor
sbb
mov
inc
loope
test
fwait
arpl
jg
hlt
cltd
xor
pop
in
nop
pop
rcrl
idivl
sub
mov
xorb
int3
push
inc
sbb
mov
xor
fwait
gs
cmc
mulb
or
lods
adc
mov
pushf
sbb
je
xchg
or
lods
add
pop
push
stos
jnp
ljmp
cmp
dec
add
mov
cmp
lods
scas
daa
imul
push
fwait
in
dec
push
inc
fbstp
xchg
scas
test
int3
out
pop
rolb
cltd
int
popf
mov
jle
mov
inc
lods
sbb
sub
in
sbb
cmp
fnstenv
dec
cmpsl
add
in
orl
xchg
cmp
dec
sub
test
ljmp
fdivl
addr16
cwtl
aas
mov
aad
mov
fmuls
rorb
loop
test
popf
mov
mov
sbb
sbb
loop
lock
loope
stos
push
push
and
mov
adc
push
sahf
cltd
mov
lahf
lret
add
jmp
test
jp
xchg
ljmp
mov
cs
xor
leave
mov
out
dec
in
pop
in
mov
pop
xchg
add
jmp
mov
ljmp
insl
or
pop
shrl
in
adc
cmp
shrl
and
mov
les
xchg
rcll
aam
aad
pop
mov
mov
dec
cmp
mov
pop
lahf
int3
xlat
daa
jb
adc
adc
leave
dec
mov
push
test
std
add
or
sub
mov
nop
xor
movsb
pop
add
mov
clc
jb
dec
popa
and
adc
mov
lret
fcmovu
mov
cmpsl
push
jb
xchg
mov
aaa
pop
cmp
jecxz
lock
push
xor
sbb
push
cmp
xor
arpl
les
inc
cmpsl
sub
adc
jbe
jne
push
cld
fwait
rorb
push
outsl
ret
outsl
sbb
test
pop
jns
dec
loopne
pop
and
je
sbbl
jecxz
ljmp
shrl
push
pusha
sub
mov
std
test
sbb
iret
iret
test
into
fdivrl
pop
in
lea
mov
add
or
nop
adc
lcall
pop
cmp
int3
pop
sub
adcb
outsl
sub
aad
jbe
js
add
jo
outsb
repnz
and
inc
sbb
cld
test
inc
rclb
add
outsl
popf
cmp
xor
aas
sahf
stos
mulb
rcr
icebp
sub
cs
jle
mov
pop
aaa
insb
jno
jns
pop
fmull
jmp
repz
lcall
arpl
fstp
cli
fs
movsb
add
cmp
jle
add
cmp
adc
test
pop
dec
add
out
or
and
push
loopne
and
add
xor
dec
negl
les
ss
pop
loopne
out
outsb
rcrb
stos
jae
sub
or
sub
or
insb
xchg
push
adc
adc
sti
mov
xchg
or
mov
mov
fistpll
test
add
lret
mov
add
dec
pop
xchg
cmc
rsm
dec
xchg
loopne
or
sbb
in
fnsave
outsl
ss
mov
and
stos
sbb
loopne
inc
cmp
stos
mov
fnclex
js
dec
mov
xor
xor
fidivs
das
scas
or
stos
lods
mov
jg
push
or
arpl
stc
ljmp
jae
sub
popa
rcll
mov
orb
jecxz
push
cwtd
js
xchg
pop
clc
sub
loopne
ja
push
add
cmc
push
cmp
mov
push
mov
popf
aam
lret
pop
mov
xchg
mov
sbbl
sbb
lock
lcall
dec
jbe
push
xacquire
or
adcb
pushf
xchg
xchg
rolb
pop
dec
lret
cmp
insl
hlt
add
aaa
push
cmp
fadd
mov
cmpsb
lcall
decl
inc
insb
xchg
xchg
sub
inc
push
cmpl
or
pop
jmp
dec
dec
mov
jge
mov
push
push
push
jp
das
dec
aas
mov
outsl
mov
inc
adc
popa
mov
js
es
loop
add
and
cmp
shlb
mov
sbb
mov
mov
push
cmpsb
pop
push
es
dec
scas
add
call
cmpsl
add
cmp
loope
sbb
sahf
push
xchg
outsl
xchg
ret
daa
out
xchg
pop
xor
loopne
inc
test
cs
mov
xchg
lret
hlt
xchg
test
jae
hlt
xor
mov
sbb
bound
and
int
mov
out
lods
inc
push
cs
adc
fcom
xchg
jl
fsubp
jl
mov
adc
loop
mov
sub
push
aam
out
lret
and
mov
ret
shrl
push
lea
rcr
mov
cs
stc
sub
pop
xlat
fistl
xchg
mov
jnp
movb
mov
mov
cmp
lret
push
xor
jecxz
xlat
pop
pop
pop
stos
add
pop
mov
mov
lea
adc
lcall
pop
je
cmp
daa
jle
mov
jbe
pop
aam
scas
jbe
jecxz
inc
fwait
push
into
movsb
rcrb
adc
xor
mov
xchg
add
test
xor
call
push
push
inc
mov
scas
into
test
in
adc
push
bound
jbe
cmp
xchg
sahf
jmp
int
jbe
mov
movsb
push
and
gs
mov
inc
sti
inc
mov
inc
test
stos
sbb
dec
int3
adc
cmpsb
pop
fidivrl
mov
pop
dec
daa
push
cs
inc
sub
mov
sbb
cmp
jae
lea
pusha
lds
dec
aas
gs
shrl
push
push
cmp
std
sub
pushf
leave
push
imul
sub
jbe
icebp
enter
jmp
leave
xchg
add
insl
int3
cli
jae
mov
inc
xchg
popf
xlat
push
mov
shll
in
pop
scas
cmp
lock
ficoms
rclb
inc
inc
xor
cld
push
popa
mov
cmpsl
add
sub
out
mov
xor
ljmp
mov
jnp
cli
fsts
pop
lcall
push
setp
subl
inc
fists
mov
and
pop
xlat
les
jns
lahf
add
jg
jbe
cmp
mov
pop
adc
imul
push
mov
rol
movl
sbb
sahf
test
inc
je
lds
inc
outsl
sbb
int3
mov
xchg
iret
popa
loope
xor
rorl
push
lcall
fistpll
pop
cld
stos
shll
aaa
mov
cmp
xor
movsl
movsl
int3
jmp
imul
add
push
push
je
call
fs
roll
test
sbb
loopne
mov
test
pop
sbb
daa
mov
out
in
inc
add
lock
cmp
stos
add
call
andb
rep
insl
sub
das
dec
frstor
int
mov
out
jns
test
mov
mov
dec
out
push
mov
sub
in
mov
xchg
sub
push
insb
push
jle
jns
inc
cmp
push
rorb
lods
add
mov
std
in
inc
lds
mov
push
scas
push
or
jl
arpl
cs
ss
sub
mov
out
inc
sub
jge
push
jns
dec
mov
pavgw
cs
mov
push
hlt
add
in
daa
dec
roll
test
mov
inc
jl
mov
pop
mov
out
cli
es
sbb
imul
xor
mov
les
sahf
lds
push
imul
push
push
xchg
lock
cmpsl
pop
or
js
pop
loope
rcll
sbb
add
jae
sbb
divb
push
movsl
push
fbstp
dec
pop
out
jno
xchg
adc
stos
insb
mov
xchg
fs
fs
test
push
mov
adc
push
xchg
sbbl
push
lock
pop
xchg
adc
outsb
mov
imul
sub
stos
add
mov
ret
in
pushf
inc
gs
leave
cwtl
mov
mov
pop
in
adc
sub
sbb
leave
mov
cmpsl
out
iret
and
pop
mov
mov
bswap
cmc
ret
and
sbb
jo
fsqrt
sbb
shrb
repnz
sbb
xchg
jo
mov
or
inc
movsl
mov
pop
push
jbe
aas
repnz
out
imul
push
movsl
sbb
ret
ss
fistpll
repz
jp
push
adcl
cmpsb
andl
ds
mov
test
xchg
sub
pop
xchg
repz
cltd
xchg
aad
cwtl
mov
cmp
mov
movsb
sahf
mov
daa
daa
pop
lahf
cmp
je
movsl
pop
inc
cltd
inc
fistpll
and
int3
rcll
mov
or
jbe
orl
mov
fistpll
and
rolb
lret
rol
fcomip
daa
add
pop
and
int
cmp
cmp
leave
jecxz
cmp
add
iret
xorb
rcl
push
push
lcall
cmp
inc
xchg
mov
and
notl
aaa
xchg
sub
into
daa
imull
xor
testb
loop
iret
ljmp
aad
in
xor
mov
adc
repz
push
lret
xchg
push
aaa
pushf
push
push
scas
add
mov
mov
cmp
les
clc
lahf
mov
mov
mov
cmp
addr16
test
fsubr
fwait
cmp
pop
xor
xor
sbb
pop
pop
pusha
jae
pop
sub
and
mov
mov
pop
or
xor
sar
xchg
rep
lods
xchg
lods
inc
fwait
sbb
popf
shrl
rorl
pop
or
stc
jnp
bound
mov
or
pop
pop
add
outsb
ret
test
inc
mov
aas
xor
pop
or
rcrb
fsubs
pop
rcl
mov
imul
repz
mov
pushf
lea
movsl
rcrl
pusha
sub
test
in
mov
lcall
movsb
cmpsb
movl
ja
fs
jae
mov
outsb
jmp
inc
pusha
loopne
pop
fcmovbe
call
lock
mov
cld
cwtl
mov
cmp
jecxz
roll
and
xor
cmp
call
xchg
pusha
inc
jae
cmpsl
sub
mov
cli
cli
or
adc
mov
and
cwtl
sub
insb
lds
repnz
repnz
in
je
scas
or
or
rcrb
dec
daa
and
xor
imulb
test
jecxz
xor
ficoms
ss
push
push
mov
adc
pop
jge
ss
mov
ja
and
iret
cmp
xor
sbb
int
cmp
sbb
adc
adc
push
icebp
push
fisttps
stc
scas
or
testl
cmp
in
jbe
sbb
sbb
and
popa
pop
cwtl
cli
fbstp
sub
aaa
pop
push
mov
movsl
sub
stos
mov
test
aas
sub
push
fwait
ja
negb
dec
mov
js
in
mov
ds
mov
dec
aas
mov
cmc
push
push
out
imul
xchg
cwtl
push
inc
dec
inc
mov
sbb
enter
inc
ss
loopne
add
dec
rorl
mul
cmpl
in
pusha
pushf
popf
gs
cmp
mov
xchg
inc
inc
or
inc
xlat
mov
jge
mov
mov
pop
divb
out
in
sahf
into
adc
push
fwait
je
sbb
sahf
dec
and
leave
lahf
loopne
mov
dec
lods
in
and
rorl
icebp
cld
jmp
xor
jns
dec
in
popa
and
movsb
cmp
push
push
ret
sbb
sub
push
arpl
cmp
cmp
sbb
xchg
aam
jno
mov
fidivrs
xor
inc
icebp
sbb
cmp
sub
jp
js
pop
xor
xchg
cmp
test
loopne
pop
stos
cwtl
call
xor
ja
sahf
push
inc
and
aad
jle
bound
jne
and
mov
push
add
aaa
es
aas
mov
pop
cmp
popf
sahf
pop
insl
xlat
test
pop
and
je
lock
lods
mov
pop
loopne
outsb
movl
mov
shl
push
lcall
mov
setp
stc
adc
inc
nop
dec
mov
lahf
loop
mov
sub
jne
xor
xlat
mov
adcb
inc
lock
andl
out
mov
adc
xor
or
sub
sub
adc
iret
sbb
sub
adc
nop
sbb
cmpsl
subl
mov
push
rcrl
jge
loope
mov
mov
sub
popf
push
je
loop
lock
pop
mov
sbb
jle,pt
dec
cmp
sbb
xchg
push
mov
fnstcw
adc
mov
loopne
sahf
jno
js
stos
repnz
pop
or
mov
out
mov
cmpsb
push
xor
cmp
and
nop
imull
shl
cs
mov
jo
jns
sub
ret
arpl
xor
leave
jo
inc
cmpsb
inc
mull
mov
mov
lods
loop
mov
mov
mov
ss
inc
loop
jo
adc
mov
scas
sbb
lds
sbb
sub
mov
out
jmp
mov
loopne
jbe
ds
dec
movsb
mov
enter
jmp
adc
shlb
or
or
test
jno
test
jae
sub
mov
jno
loope
inc
adc
lock
and
gs
lock
sbb
push
or
jl
mov
adc
cmp
or
mov
jle
xor
or
in
fcomp
int3
cmp
pusha
stc
inc
pop
int
mov
adc
lea
gs
ljmp
jbe
movsb
fmulp
push
mov
test
shll
add
and
lahf
mov
xchg
push
ss
outsb
imulb
sub
mov
fwait
add
mov
icebp
in
push
test
push
in
cmp
movsl
je
into
add
imul
dec
mov
repz
bnd
int3
std
jmp
dec
lret
add
stos
cltd
ret
stc
lahf
inc
cmp
fs
and
das
pop
inc
je
fwait
jmp
ud1
or
aam
sub
xor
cmp
inc
loope
xchg
jmp
loop
mov
or
mov
in
push
or
push
aad
mov
inc
inc
and
sub
cmp
pushf
fldl2t
sub
mov
mov
sbb
xlat
sub
adc
fldl
and
and
push
mov
mov
mov
add
gs
icebp
dec
adc
ftst
shll
inc
ss
rcrb
adc
dec
fdivr
push
dec
inc
push
in
push
mov
inc
call
jge
into
sbb
stos
add
lock
andl
push
inc
div
bound
outsl
jo
fst
and
aad
movsb
clc
push
aam
sub
sub
sub
push
es
mov
mov
mov
sub
adc
adc
std
push
mov
cmc
das
rorl
and
adc
int3
push
sub
test
icebp
ss
push
pop
mov
or
dec
dec
mov
mov
fildl
sbb
nop
push
movsl
ss
ljmp
fwait
loop
lret
adc
sbb
lea
sub
loope
out
add
xor
ja
and
jae
mov
inc
push
fbstp
or
cli
cmp
mov
in
cmp
lock
scas
mov
and
or
add
pop
cld
scas
mov
xchg
je
aad
pop
mov
sbb
in
inc
lods
ror
sbb
mov
insb
jmp
in
ljmp
inc
inc
and
bound
mov
mov
daa
xchg
je
fcmovnu
cmp
faddp
pop
adc
push
add
jb
pop
fcomp
push
out
mov
jbe
mov
enter
jb
xor
sbb
mov
pop
cld
inc
gs
pop
divb
movsb
cld
fimull
xor
jecxz
or
cmp
add
jbe
and
inc
pop
jmp
or
mov
pusha
xchg
push
xor
adc
push
jp
mov
imul
iret
or
dec
sub
cmp
inc
int
lahf
sub
jle
out
ja
pop
mov
sti
xlat
test
imul
xchg
out
push
lods
popa
adc
sub
lret
xor
imul
mov
fsubrs
ret
sub
jnp
push
sub
sbb
aaa
push
repnz
pop
loopne
mov
pusha
sub
mov
out
das
sbb
sub
out
sbb
hlt
sbb
fwait
stc
mov
add
pop
push
loopne
add
push
push
or
nop
xchg
sub
scas
sub
mov
push
cmp
scas
or
stc
xchg
je
or
adc
fisubrs
js
out
fwait
pop
or
mov
push
add
and
inc
movsb
cmp
daa
xchg
xchg
popfw
shll
mov
movsb
jns
je
dec
loope
std
add
into
jle
adc
mov
inc
pop
push
ret
scas
out
xor
push
and
sub
movsl
jg
mov
mov
test
mov
add
mov
mov
add
into
cmp
jne
pop
iret
mov
stos
fdivrs
mov
lahf
inc
leave
push
xor
insl
mov
xor
int
ja
addr16
pop
sbb
icebp
mov
mov
ficompl
aaa
adc
hlt
dec
aaa
xor
cltd
in
or
adc
repz
fs
dec
push
lds
or
popf
mov
rclb
mov
pop
or
negl
xor
stos
rcrl
hlt
adc
fs
andnps
sti
xchg
js
movsl
rcl
cmpsl
pop
adc
dec
movl
add
pop
inc
cmp
mov
sub
ret
cmpsb
xlat
jo
and
pop
fidivrl
insl
int3
mov
iret
pop
and
ret
rorl
lret
adc
mov
jbe
out
das
pushf
imul
push
ret
jo
jno
ficompl
out
add
cmp
and
js
mov
movb
push
les
cmpsb
xchg
inc
ficoms
in
sub
mov
xchg
scas
sar
stos
inc
jo
cmp
cltd
mov
in
pushl
and
outsb
fsubs
push
icebp
pop
pop
xchg
mov
stos
push
scas
sarl
in
xor
std
xor
push
lret
cmp
xor
jle
or
movsl
mov
sahf
jns
and
jbe
pop
jne
sub
cmp
es
xor
cmp
xor
inc
adc
push
adc
lods
dec
jl
shrl
sub
testl
push
push
popa
stc
push
mov
jb
lods
mov
int3
add
bound
es
sub
dec
and
inc
je
cmpsb
adcl
fldcw
out
jp
sbb
pushf
mov
fwait
out
daa
sub
repz
sbb
clc
mov
add
or
mov
mov
icebp
mov
fisttpll
loope
mov
sub
push
sarb
lret
rcrb
sbb
and
mov
outsb
clc
cmp
xlat
test
decb
lahf
inc
inc
inc
inc
in
adc
insb
shrl
addl
cltd
push
aad
adc
sbb
out
adc
aas
xor
lret
data16
pop
inc
or
stc
jno
std
popa
push
cmp
andl
xchg
lods
aam
scas
mov
adc
jo
mov
mov
sbb
sarb
add
or
enter
push
out
mov
sub
shlb
mov
sbb
inc
mov
ret
push
lock
ljmp
mov
lret
xor
aam
add
inc
call
testb
mov
push
push
sbb
adc
adc
cs
pop
jp
pushf
sub
jp
xor
icebp
rcrb
lods
ret
sbb
ljmp
adc
shl
lods
sub
and
xchg
push
xchg
sti
adc
pushl
mov
xor
dec
btc
stos
jne
sbb
adc
call
subb
sub
mov
fiadds
insb
cmpsl
sub
jo
pop
sub
aas
in
jle
repnz
mov
mov
stc
push
dec
sub
outsb
ret
mov
dec
enter
push
pusha
push
lret
push
std
mov
call
jge
mov
pop
inc
in
add
loopne
sti
inc
in
or
stos
cmp
mull
mov
aas
inc
jl
cld
jmp
sbb
movsl
popf
aas
hlt
fxtract
push
sub
nop
xor
idivl
push
mov
pop
aas
inc
dec
testl
mov
jo
out
arpl
lret
mov
adc
fdivl
enter
sub
xorl
sbb
sub
orb
je
jo
iret
sub
xchg
aam
pop
add
pushf
cmp
fsubrp
cs
mov
and
lods
into
in
bound
icebp
in
ret
cmp
jo
inc
arpl
xor
mov
shll
xchg
jge
popa
xchg
inc
inc
fldenv
xchg
ds
xor
popf
push
mov
mov
sbb
cs
add
add
add
test
imul
pusha
mov
jmp
dec
add
shl
pop
cs
jg
mov
pop
leave
pop
add
push
out
add
adc
pusha
push
aam
les
jae
push
and
mov
cltd
push
js
popf
aad
pop
inc
jle
mov
mov
shll
or
mov
pop
mov
dec
loopne
mov
push
or
sub
arpl
iret
lret
xor
xchg
and
test
call
cmp
fyl2xp1
shll
mov
jns
push
and
push
xlat
loop
ljmp
jl
push
fadds
js
mov
cmc
cltd
popa
and
cmp
stos
jl
scas
xchg
jo
dec
ss
cld
or
dec
loop
sahf
add
add
pop
loop
mov
ds
or
imul
pop
fisttpll
ficoml
mov
ljmp
sub
movsl
lea
scas
inc
out
jbe
shl
mov
das
pop
xor
or
sbb
repnz
outsl
xor
subb
scas
add
pop
mov
lret
jmp
push
mov
inc
cmp
sbb
or
push
or
aam
sbb
repnz
test
stos
xor
lahf
inc
js
ljmp
jecxz
lahf
jp
daa
imul
inc
push
dec
into
ret
and
mov
cmp
add
daa
mov
mov
xlat
lock
out
js
ret
and
jo
xchg
mov
icebp
mov
addr16
loopne
scas
out
or
push
inc
int
mov
jns
movsb
dec
stos
lods
fisubs
inc
dec
cltd
pop
xor
xchg
mov
leave
cli
clc
add
repz
push
mov
addl
jmp
push
adc
push
fsubs
add
mov
xchg
aaa
xchg
and
ja
fldl
dec
les
in
mov
pop
xchg
mov
outsb
packuswb
div
repz
je
push
inc
ficoml
xor
add
clc
push
pop
jno
fmuls
add
lods
rcr
add
mov
push
xchg
adcl
adc
fcoml
shl
fildl
stos
repz
sbb
or
jbe
jae
add
shrl
loope
dec
ret
cld
push
mov
out
push
movsb
jo
push
xchg
xor
lock
sub
xchg
push
cmp
pop
lea
lahf
mov
sahf
dec
insb
pop
jae
mov
mov
movsl
fmuls
inc
lds
jno
dec
mov
xchg
cmp
repnz
fbld
cmp
cmp
lock
ljmp
add
stos
mov
out
and
je
out
pop
cmp
or
sbb
push
movsl
icebp
jg
cltd
sbb
mov
jb
push
scas
jns
pop
les
stos
cmpsb
lret
jle
daa
std
sub
pop
jb
sbb
sarb
pop
cmc
lahf
push
jle
dec
lea
push
adc
fwait
cmp
adcl
and
dec
inc
dec
lock
outsb
rolb
cmp
jo
push
inc
pop
pusha
divl
inc
inc
add
inc
orl
das
and
fcmovne
js
stos
sbb
lea
and
scas
mov
mov
movsb
cmpsb
and
jb
aad
push
mov
or
in
jle
pop
xor
aam
push
sahf
fnstenv
nop
mov
dec
int
lret
adc
int
add
in
push
sub
sbb
pop
aad
daa
xchg
xor
jo
dec
push
mov
add
or
fdivs
addr16
sub
and
add
xor
and
xchg
jns
dec
lea
movsb
dec
das
push
mov
dec
xor
shll
mov
jecxz
push
je
repnz
mov
pop
or
fiaddl
rolb
das
les
pop
jecxz
xchg
cmpsb
mov
xor
mov
jg
mov
dec
dec
cmp
stc
aad
inc
cmpsb
hlt
jo
jns
jmp
je
lahf
add
sbb
lret
stc
sub
sbb
out
loopne
pusha
cmp
mov
or
and
sub
adc
pop
jge
repz
sub
cmp
or
xor
scas
rcrl
jnp
movsb
xchg
sub
out
leave
insl
dec
mov
pop
push
loop
pop
aad
xchg
push
sbb
lret
xchg
daa
rorb
pop
mov
or
jae
mov
mov
mov
add
sbb
out
mov
stos
xchg
cld
cmpsl
sbb
cld
cmp
sub
popf
push
clc
sub
mov
push
je
stc
sub
dec
cwtl
adc
iret
in
mov
dec
inc
outsb
mov
ds
mov
stos
push
lea
jno
mov
out
jbe
mov
cmc
push
lods
aaa
xor
repnz
mov
cmc
adc
les
or
cmp
add
mov
and
shlb
xchg
jle
xchg
daa
je
repnz
xchg
js
pop
lret
pop
dec
jns
or
inc
lahf
aad
fstl
cmc
stos
int
sbb
jae
js
pop
out
out
pop
in
push
cmp
jno
cltd
cmp
mov
and
mov
sub
mov
imul
and
mov
ret
fisttps
imul
mov
sub
loope
imul
mov
mov
les
int3
inc
push
test
pop
adc
stc
xchg
adc
push
xor
idivb
insl
repz
je
mov
xchg
pop
xor
jnp
movsb
and
sub
dec
std
mov
mov
mov
lea
sub
adc
mov
rorb
add
add
rorl
jecxz
sahf
and
mov
insb
call
dec
lock
sbb
jle
orb
push
inc
mov
or
fs
imul
cmpsl
cld
lcall
xor
and
and
gs
mov
call
sub
sti
pop
les
adc
inc
fs
int
xor
mov
push
xor
dec
push
dec
ret
scas
and
jae
mov
inc
push
mov
cmp
sub
stos
pushf
popf
lods
sbb
popf
js
shll
outsb
xchg
jae,pt
lcall
aaa
cld
out
cmp
inc
mov
xor
out
or
mov
jns
xchg
mov
and
rorb
push
addr16
push
jmp
sbb
stos
mov
lods
xchg
lock
pop
aas
mov
or
xchg
cmp
or
data16
fwait
xor
mov
jb
sub
xchg
loopne
mov
lods
popa
jmp
aas
insl
out
daa
or
xchg
fcompl
mov
sub
movsb
push
aas
dec
scas
add
dec
stos
out
pop
cmc
loop
rcrl
std
mov
out
lea
lcall
push
or
repz
ficomps
mov
or
mov
loopne
lahf
out
xchg
mov
xor
dec
test
stos
bound
sub
adc
adc
hlt
loopne
sbb
xor
movsl
in
pushf
bound
rep
sbb
or
mov
jle
sbb
jl
in
push
pop
sub
xor
mov
fwait
cmp
fnsetpm(287
mov
dec
ret
jae
lea
xchg
pop
cs
jo
into
xchg
lods
movsb
mov
mov
sbb
xchg
sub
test
clc
cwtl
push
push
je
mov
js
sarl
shrb
loopne
jo
jle
out
sbb
jne
movsl
test
lret
or
pushl
add
sahf
sarb
adc
add
dec
sub
aaa
add
push
jmp
mov
jl
repz
mov
jp
gs
mov
js
test
jne
add
fstl
adc
movsl
jb
test
lcall
pop
aaa
and
or
loopne
movsb
pop
scas
jb
push
mov
test
mov
cmp
into
mov
in
and
hlt
mov
leave
fwait
or
push
xor
fcomps
push
nop
mov
adc
inc
cmp
and
enter
push
faddp
lods
testb
js
pushf
xor
pop
testl
xor
pop
jno
push
in
mov
lahf
adc
js
hlt
div
lock
jnp
arpl
mov
xchg
or
xchg
dec
loopne
hlt
mov
mov
xor
sbb
mov
sbb
push
in
outsb
push
cmp
adc
mov
fdivs
sbb
pop
push
cmp
add
loope
out
xchg
cs
jae
cli
sub
bound
cmp
mov
inc
incl
mov
jmp
popa
or
cld
rcrb
jle
pushfw
cmp
bound
adc
sbb
xchg
std
in
pop
test
iret
jno
imul
inc
xor
mov
movsl
scas
adc
pusha
xlat
icebp
test
mov
nop
lea
jl
icebp
xchg
out
mov
cs
mov
sbb
shl
push
repnz
add
aam
lgs
sbb
test
cmpsb
ret
leave
sbb
pop
out
test
cltd
fcmovnu
dec
imulb
ja
jge
imulb
jge
jb
or
repnz
sbb
cmc
push
cmpsl
pop
out
fdivl
dec
inc
in
or
jl
lods
int
stos
dec
sbb
int3
mov
fcomip
add
das
dec
out
dec
iret
mov
mov
or
and
inc
aam
mov
scas
pop
std
dec
fcompl
pop
pop
jns
adc
mov
jp
into
ljmp
or
mov
xlat
mov
sbb
lods
fildl
imulb
push
out
sti
cwtl
test
nop
or
stos
adc
aad
mov
jno
scas
or
jo
test
in
mov
sbbb
jg
mov
js
jne
and
mov
out
dec
cld
and
jg
push
xchg
mov
cli
lea
clc
push
repz
jb
filds
pop
cli
sbb
and
shr
repz
into
cmc
in
stos
and
shlb
shrl
and
xchg
push
pop
es
dec
jb
mov
dec
addr16
maskmovq
negl
mov
sbb
ds
addr16
shr
or
dec
clc
jb
cwtl
rorl
push
jp
jge
ljmp
popa
pop
inc
stos
repnz
mov
mov
in
adc
loop
dec
jecxz
and
push
out
fnsave
or
loopne
dec
movb
xor
nop
inc
inc
arpl
push
pop
dec
aaa
inc
xor
shrb
bound
mov
in
cmp
test
cwtl
fsubp
iret
mov
das
fimull
scas
imul
xrelease
push
jl
adc
and
pop
xor
inc
dec
push
repz
mov
cmp
cmp
je
cmp
mov
mov
nop
pop
push
and
cmp
fisttpll
push
sbb
sbb
push
xor
aaa
adc
jg
mov
out
mov
inc
lea
int
and
int3
mov
pusha
iret
cmp
pop
data16
or
lret
bound
aad
insl
mov
mov
test
mov
jmp
inc
xor
cltd
std
mov
jmp
cmpsb
rcll
add
out
mov
stos
dec
mov
lret
mov
sub
mov
xchg
fdivrp
cmp
cwtl
add
call
sahf
les
out
or
jno
mov
fistpl
and
and
rcrb
iret
call
stos
popa
shl
mov
push
and
sbb
sbb
mov
jno
fnstsw
setge
outsl
push
sbb
rcrb
icebp
add
add
mov
inc
xor
in
jle
cmp
sub
pop
scas
push
push
pop
popa
test
ljmp
jo
mov
inc
repz
shr
fmull
les
adc
sub
rcrb
lret
cwtl
sbb
jb
pop
push
insb
loopne
push
rclb
iret
adc
and
in
lods
cmp
push
outsb
jbe
xor
pusha
imul
int3
mov
adcb
adc
fisttps
inc
jg
mov
mov
jmp
adc
inc
dec
push
mov
dec
mov
adcl
or
arpl
rcrb
mov
push
push
ja
mov
inc
xchg
addl
in
repnz
push
aaa
inc
dec
std
pop
push
jo
lret
fstpt
or
jge
rcl
or
pop
xchg
dec
bound
push
cwtl
dec
pop
cmp
cmpsb
lret
div
out
push
mov
in
pushf
orl
cmp
inc
mov
jecxz
jmp
fldenv
cmp
and
inc
aad
cmp
mov
pusha
cmp
adc
or
imul
fdiv
addr16
push
xchg
cmpsl
daa
pop
icebp
mov
mov
int
push
adc
lret
and
subb
xchg
lret
clc
aad
xor
inc
fldcw
lahf
subl
push
std
test
cltd
xor
xchg
cmp
inc
in
outsb
int
ret
movsl
mov
push
ss
data16
stos
dec
cld
mov
dec
xchg
test
jle
cmp
repz
andb
fsubrl
jo
adc
and
mov
enter
lea
loope
and
dec
sub
movsb
adc
imul
pop
cld
mov
adc
xor
inc
in
leave
outsl
out
dec
push
lods
xchg
inc
lahf
mov
mov
mov
les
push
push
es
inc
repnz
pushf
xchg
mov
inc
mov
dec
fidivs
add
aas
mov
adc
test
pop
rcrl
inc
xlat
cmp
sarl
xchg
push
test
daa
fiaddl
sbb
mov
addr16
push
leave
xor
bound
in
fldt
popf
ds
cmp
xchg
xchg
fwait
sbb
dec
roll
scas
in
leave
mov
lods
fnstsw
mov
jge
test
xchg
lcall
bound
out
dec
mov
es
fsubs
sub
pop
cmp
std
dec
or
mov
int
mov
jmp
fsubl
mov
pop
aaa
stos
sbb
test
mov
mov
xchg
jae
jns
xchg
pop
int3
cmp
jle
das
stos
push
jp
xchg
orl
mov
mov
in
push
xor
sub
cs
jmp
xor
imul
cmp
mov
adc
lods
nop
adcl
pop
pop
xor
sbb
adc
je
lods
leave
and
dec
and
adc
int
sbb
enter
pop
filds
ss
andb
add
stc
dec
popf
push
inc
loop
mov
sahf
scas
dec
mov
jno
ret
in
lret
mov
cmp
lods
clc
and
loopne
cmp
stos
repnz
pushf
inc
mov
jbe
enter
movsl
dec
jge
es
xchg
ljmp
ffree
mov
adc
jae
cmp
cmpsb
xchg
xor
shr
or
enter
jo
push
xchg
pop
stc
dec
lock
lea
add
xlat
mov
out
xor
adc
xchg
mov
in
fwait
adc
insb
push
mov
and
lret
out
inc
xchg
imul
pop
cmpsb
mov
pop
ret
cwtl
leave
xchg
mov
xchg
popl
adcb
jns
leave
push
cmp
jae
mov
sti
mov
cwtl
push
cs
movl
push
pop
imul
and
ss
dec
js
mov
cs
sub
pop
and
ljmp
mov
in
rol
jp
sahf
into
adcl
pop
int3
shll
std
add
fisubrl
popa
ja
loopne
mov
je
push
pop
aaa
pop
popa
fisttps
test
lods
xchg
fidivrs
mov
sahf
fstpl
jno
pop
cmp
pop
popf
inc
push
adc
rolb
or
pop
mov
mov
inc
xchg
enter
pop
movsb
rol
and
mov
mov
jg
icebp
xchg
pop
scas
mov
test
cwtl
xor
shll
mov
sbb
jbe
push
loopne
subl
out
popf
aaa
push
sbb
loop
add
xor
rcll
mov
addr16
sub
add
push
cmpsl
mov
in
or
xlat
mov
dec
pop
cmpsl
shll
inc
add
int
sub
jle
mov
mov
scas
push
sub
xor
scas
ret
icebp
fcoml
jecxz
stos
or
fwait
xor
pop
gs
call
stos
push
cwtl
inc
pop
popa
les
clc
xor
mov
ffreep
hlt
cltd
mov
bound
cli
push
jno
in
icebp
pop
scas
cmp
lds
pop
sbb
imulb
mov
out
xor
aas
push
addr16
or
daa
inc
out
add
mov
sbb
les
xlat
inc
jbe
mov
push
cs
in
ds
pop
mov
mov
adc
dec
jb
jo
adc
dec
xlat
mov
inc
sti
xor
jge
ds
cs
mov
shll
push
mov
or
lds
dec
xchg
std
fsubs
cli
lcall
inc
gs
fldl
dec
fcoml
mull
les
jle
aaa
sbb
lods
fucomi
cmp
mov
and
cmp
cltd
cmp
push
loopne
sbb
jp
scas
and
outsl
pop
sub
inc
jb
rolb
adc
scas
push
cltd
cli
push
mov
in
fdivl
xchg
and
repnz
mov
insl
ret
push
pop
sub
adc
lock
cmp
inc
add
inc
mov
add
inc
movsb
pop
ss
pop
movsb
cmp
pusha
ret
mov
xor
daa
dec
arpl
or
testb
enter
ficomps
dec
and
push
mov
add
xchg
test
fisubs
fldcw
jp
mov
nop
xor
add
mov
xor
jl
mov
push
test
push
xchg
rcr
je
cli
adc
jnp
pop
mov
push
cltd
cli
mov
push
jnp
push
call
fwait
addr16
dec
fcmovbe
cmp
cwtl
or
jno
shlb
stos
int3
shrl
and
pushf
jo
popf
xchg
push
inc
pop
lret
ja
dec
mov
jecxz
popf
arpl
pop
mov
dec
scas
imulb
cmp
in
leave
out
mov
push
std
inc
inc
dec
jns
inc
jmp
mov
push
adc
or
enter
lds
xorb
sbb
and
in
ret
lods
push
popf
pushf
imul
pop
dec
andl
pop
shll
aad
idivl
jns
mov
mov
fs
pop
push
jmp
cmp
outsl
arpl
xchg
out
inc
jle
aas
in
std
and
addr16
or
data16
pop
jb
or
imul
xchg
cmc
scas
imul
jns
dec
dec
mov
xchg
lahf
sub
or
sbb
cmp
push
movsw
ret
dec
xchg
aam
xchg
movsb
jb
into
jne
sbb
mov
xlat
cmpsl
mov
mov
jb
sbbl
fwait
sub
lock
movsb
dec
repnz
xchg
outsb
inc
loopne
dec
mov
jmp
sub
lcall
pop
push
or
pop
cltd
cmp
xchg
jns
xor
pop
mov
clc
sub
arpl
mov
leave
mov
insl
mov
stc
xchg
jbe
test
or
fidivrs
mov
inc
pop
add
push
aad
gs
ja
xacquire
and
in
mov
mov
pop
out
nop
jmp
lret
sub
leave
jbe
fidivl
jmp
les
std
xor
and
or
aas
mov
scas
and
mov
popf
adc
imul
add
mov
xchg
lods
pushf
cltd
lret
jbe
shlb
aas
pushf
bound
and
mov
popf
int
xchg
loop
xchg
aaa
in
pop
jae
mov
and
fildll
cmp
push
imul
movl
push
js
mov
mov
xchg
cltd
cmpsb
clc
ficoms
jl
push
fisubrs
xlat
sub
cmp
jne
mov
dec
mov
int
sub
pop
inc
andl
cmp
or
rcrb
xlat
ret
test
arpl
cs
sbb
or
in
arpl
mov
lods
fbld
xchg
inc
add
mov
jmp
cli
or
jns
cmc
mov
cs
sub
and
stc
enter
movsb
popf
pop
add
and
sub
mov
xchg
ljmp
icebp
mov
cmp
aad
imul
loope
xchg
cmp
loope
jge
lret
inc
aad
mov
sbb
cmp
cmpsb
shrb
jmp
add
sahf
pop
dec
lods
aaa
mov
cmp
xor
mov
jae
cmp
or
pop
shll
mov
jbe
mov
add
ds
in
sahf
sbb
push
loop
ja
xor
in
comiss
add
leave
pop
xor
xchg
cmp
mov
sbb
mov
cmp
in
test
out
push
imul
leave
sahf
xor
ds
jb
cmp
add
addb
notb
inc
lea
adc
imul
jae
out
aaa
xor
adc
orl
inc
shr
loopne
jae
fsts
cmpsl
mov
aas
in
roll
xor
xchg
out
ficompl
adc
sub
push
leave
hlt
scas
cmp
adc
mov
test
mov
repz
fistps
out
xor
push
inc
call
mov
loop
mov
popf
xchg
stos
outsb
shrl
pushl
out
lods
aaa
pop
jge
mov
stos
enter
outsl
loope
out
lret
ss
jmp
in
lret
pop
jnp
ficoml
cmpsl
orb
dec
int
pop
js
sub
xor
mov
fwait
rclb
sub
jmp
outsl
jns
jb
stc
pop
sbb
popf
jg
call
loope
loop
dec
push
add
sub
push
mov
mov
ret
shl
lret
ja
aas
loop
jmp
mov
aad
jae
cmpsb
fistpll
leave
int
cli
xor
sub
add
adc
cs
dec
std
das
lcall
mov
mov
or
jae
sbb
ss
repnz
and
mov
xor
pop
int3
test
dec
xchg
jae
jo
dec
orl
test
adc
add
test
repnz
fbstp
sub
out
dec
push
mov
push
add
inc
mov
fldt
dec
inc
and
out
sub
orb
cltd
inc
cmp
cli
test
mov
jnp
xchg
leave
pop
sub
out
in
and
adc
sub
stc
pop
lods
cmp
ljmp
sub
movsb
add
mov
stos
inc
outsb
adc
insb
xor
fwait
lea
pop
xchg
pop
inc
jge
js
mov
pop
push
sbb
fsubrs
lret
lret
pop
mov
mov
in
jns
fnstenv
xchg
loopne
in
mov
push
fbstp
roll
sti
das
dec
in
loope
lret
pop
or
insl
in
inc
imul
cld
ja
jno
loop
orl
lret
push
into
push
ds
mov
popa
outsb
test
or
orl
ret
roll
sbb
cli
dec
shl
fnstenv
mov
add
mov
sahf
xchg
sti
jno
push
mov
xchg
cmp
jl
jmp
cwtl
fnsave
dec
jnp
insb
ret
pop
mov
loopne
cmp
faddl
add
and
xlat
lcall
jae
jmp
je
mov
push
push
cmp
add
icebp
sahf
cmp
in
pusha
es
push
add
push
jmp
or
stc
clc
pushl
fsubrl
pop
adc
cmp
and
xor
iret
jl
mov
jo
pcmpeqw
sub
jns
jnp
inc
jmp
mov
xor
inc
push
stos
xor
imul
mov
and
xorb
jno
sbb
dec
mov
cmc
int3
xchg
push
sahf
push
sarl
cmp
aam
fwait
xchg
in
sbbl
out
js
inc
shl
out
lcall
fiaddl
mov
pushf
inc
adc
dec
and
insb
test
jne
test
daa
cmpsl
sarb
test
ljmp
inc
andb
or
cmp
pop
mov
cmpsb
nop
std
stc
pusha
or
cmp
rcrl
cltd
or
mov
push
inc
or
xor
cmpsb
dec
addr16
fiadds
push
je
inc
mov
ss
push
clc
gs
sub
or
mov
push
push
outsb
adc
lea
sbb
cmp
xor
out
mov
fldl2t
xchg
pop
and
lret
nop
cs
push
xchg
int
lret
insl
sub
add
pop
jmp
jp
addb
pop
cmpb
xchg
pop
dec
xchg
pop
aam
push
loop
clc
adc
inc
fnstsw
jb
pop
adc
pop
loop
inc
shrb
shrl
xlat
push
or
fwait
pushl
mov
pop
ret
test
pop
inc
xor
or
pushf
ss
notb
fisttpl
inc
cltd
and
inc
push
mov
lods
lods
les
xchg
pop
pop
out
imul
imul
fcomps
testl
fmuls
mov
mov
sbb
out
cmpsl
jmp
jle
add
mov
js
cmp
inc
cmp
clc
push
or
out
popf
das
pop
add
mov
sar
xchg
aaa
dec
add
xor
in
xor
cmp
cwtl
dec
jle
hlt
pop
pop
mov
dec
sbb
stos
adc
loope
les
jnp
dec
add
cltd
pop
pop
sub
push
bound
std
js
xchg
sub
int3
jp
pop
out
ficompl
fwait
sbb
sub
sub
fisttpll
inc
orb
mov
ret
rolb
lret
fnstsw
mov
or
mov
and
jl
jge
es
std
jae
sbb
andb
es
lods
xchg
in
fidivrs
loopne
add
jbe
sbb
scas
cmpsb
leave
stc
movb
cmp
faddl
scas
mov
repnz
mov
ds
mov
dec
xor
sbb
clc
inc
ss
push
neg
push
mov
mov
mov
sub
push
call
mov
call
mov
repnz
and
imul
cwtl
mov
mov
jns,pt
push
pop
cmc
cmpw
lods
mov
mov
pop
or
mov
push
mov
mov
xor
inc
notb
notb
cmp
inc
xchg
pushf
mov
lret
pop
mov
ja
push
stos
adc
pop
scas
pushl
shlb
test
test
xchg
mov
into
shrb
xlat
loop
push
jmp
int3
into
or
lods
ret
enter
xchg
scas
push
mov
mov
bound
mov
loopne
cmp
outsl
test
arpl
nop
jnp
cmpsl
push
call
orl
mov
inc
pop
inc
lret
jns
jno
mov
testb
mov
inc
mov
push
fdivp
add
sti
xor
sub
dec
scas
fstpl
dec
ja
popa
and
sub
sti
movsb
adc
mov
push
clc
lods
outsb
leave
xor
vmaxpd
dec
add
sub
inc
fdivl
int3
lahf
pop
scas
add
push
inc
mov
loope
mov
aas
loope
les
hlt
mov
lahf
push
xor
mov
and
dec
std
adc
xlat
jne
dec
popf
mov
repz
lock
pop
sahf
mov
pop
mov
movsb
lea
fcoml
fildll
les
scas
xchg
mov
icebp
subl
loope
ljmp
mov
lods
jge
cmp
xchg
subb
ljmp
in
cli
mov
fisubrl
mov
pop
mov
stc
iret
in
mov
push
adc
inc
xchg
out
inc
xor
sti
pop
test
pop
mov
leave
inc
push
dec
sub
bound
and
inc
sub
xor
lea
cli
mov
pop
sub
test
sbb
orb
add
or
js
and
mov
dec
bound
xorl
add
fnstsw
inc
or
adc
inc
push
pxor
sub
cmp
jno
xor
mov
cmp
imul
sbbl
adc
lret
arpl
cmp
push
mov
sbbb
popa
fcmovnbe
sub
sbb
adc
test
fstpl
mov
jl
out
push
push
push
out
sbb
push
gs
adc
add
ljmp
adc
popf
lahf
mov
push
xchg
add
ret
outsl
xlat
pop
adc
bound
adc
cld
pop
enter
mov
push
aad
adc
gs
aas
lret
adc
jbe
repz
dec
or
cmp
imul
out
push
push
sub
lods
cmpsb
out
jecxz
shl
lcall
xor
inc
adc
mov
lcall
out
pop
sbb
adc
xchg
imul
aaa
lret
xchg
sub
call
or
lret
aam
sbb
mov
das
mov
lahf
cmp
cltd
repz
inc
xor
and
and
mov
insb
cld
mov
push
add
add
fdivrl
test
mov
jecxz
mull
test
test
scas
sbb
dec
outsb
ds
mov
xchg
test
and
fcom
in
lods
rcll
xor
movsl
pusha
stc
popf
mov
stc
sarl
mov
mov
popa
or
add
hlt
sbb
loope
adc
rclb
and
js
adc
jle
stc
cmp
into
aam
aad
movsb
mov
cmp
out
xor
or
mov
push
mov
xor
dec
and
cli
cli
jo
xchg
push
lcall
jne
pop
add
pop
cmpsl
jg
inc
xchg
xor
fnstsw
scas
xchg
shll
lret
stos
dec
xor
and
mov
mov
out
dec
mov
pop
test
mov
mov
add
out
divb
dec
loopne
ds
jge
mov
aad
xchg
sbbl
inc
jecxz
xor
sbb
test
lret
enter
mov
and
sub
leave
call
scas
sbb
call
in
mov
mov
das
insl
and
leave
inc
leave
mov
imul
rol
and
jp
cmp
mov
imul
jge
cmpsl
int
movsb
dec
std
fsubr
push
stos
subl
sbb
sub
push
popf
jns
ss
jmp
pushf
jns
add
mov
jg
out
sahf
ds
jnp
and
add
les
dec
int
aam
rcr
or
jle
xor
push
mov
hlt
mov
push
xchg
inc
push
and
addl
sub
pop
scas
js
mov
outsb
mov
inc
lods
fsubl
push
cmp
enter
sub
xchg
cmp
jnp
insb
mov
cli
mov
jne
pushf
rcrb
popf
jne
or
xor
imul
add
lahf
sub
sbb
mov
in
cli
sbb
movsb
ret
cmp
incl
mov
cmp
or
adcl
cmpsb
fwait
cmp
or
mov
pop
call
fwait
mov
pusha
cmpsb
add
test
jle
cwtl
jg
adc
shrl
pop
and
insb
adc
xchg
lods
add
xor
ljmp
movsb
pop
mov
cmp
fnstsw
xchg
mov
inc
xorb
ss
and
call
jnp
mov
mov
or
jnp
out
mov
dec
iret
xchg
pusha
push
xchg
xor
mov
cli
lahf
cwtl
inc
out
gs
test
adc
lret
mov
test
jl
sarb
mov
or
call
sub
push
xor
insl
sbb
movl
inc
sbb
push
pusha
pop
aad
add
add
pop
lcall
stos
sarb
aaa
inc
xchg
xor
ret
cmp
aas
test
sub
fadds
repz
jo
insl
push
mov
fidivl
imul
pminsw
daa
cs
dec
test
negl
sub
jo
bound
sbb
imul
mov
push
mov
rolb
mov
mov
xchg
and
lock
in
jne
xchg
mov
test
push
push
mov
test
mov
sbb
add
es
push
sbb
notl
int3
mov
xor
cmc
iret
insl
and
in
jle
mov
xor
cwtl
mov
jg
or
outsl
mov
andl
dec
push
mov
mov
sahf
xchg
and
faddp
out
outsb
jns
loope
inc
sub
lret
je
mov
test
loope
lahf
in
sbb
dec
adc
negl
xchg
in
pushf
pop
mov
mov
outsb
xchg
dec
or
jmp
je
bound
lock
popf
xchg
mov
or
aad
testb
movl
pop
in
rclb
cmp
inc
fsubrl
or
je
leave
or
jp
push
out
cld
stos
in
addr16
int3
aam
stos
jb
mov
xchg
pop
ss
fs
arpl
mov
pop
ljmp
inc
rcrl
fistpl
loope
mov
pop
fmull
dec
push
cmp
jp
stos
adc
lgs
inc
xbegin
in
xchg
jge
sub
cmp
adc
push
dec
mov
frstor
adcb
xchg
mov
fisttpl
lea
push
lods
push
leave
cs
fs
mov
mov
pop
dec
add
jmp
iret
in
xchg
xchg
or
or
data16
shll
loop
cmp
mov
and
jne
fimuls
lods
lret
add
loope
rcr
out
adc
mov
sub
aad
and
lods
push
mov
push
hlt
jmp
mov
and
pusha
dec
into
dec
add
aad
adc
jmp
mov
filds
jmp
and
je
or
pop
rclb
adc
jbe
pop
and
add
dec
add
scas
and
xor
and
ss
outsb
push
dec
lds
test
sub
sbb
push
sub
je
jle
test
ret
inc
cs
clc
jae
adc
jae
out
sub
mov
push
sub
pop
sahf
aad
mov
inc
sbb
push
test
movsl
pop
and
insl
roll
imul
mov
sub
mov
inc
sub
mov
mov
push
mov
and
loopne
xchg
pop
or
cmp
loopne
cltd
mov
and
add
sub
push
add
pushl
fsubs
push
cltd
jno
pop
fwait
mov
lds
ljmp
popa
jp
lcall
or
sub
add
pop
fnstcw
inc
frstor
lods
es
mov
mov
lods
cmp
mov
aad
cld
sub
lret
mov
mov
mov
test
adc
clc
sub
jbe
push
mov
mov
jnp
sbb
xor
mov
adc
jmp
mov
push
outsl
sbb
pop
sbb
call
push
mov
pop
lods
mov
bndldx
jle
xlat
add
push
fisubrs
cmp
pop
lret
cmp
outsb
xchg
jb
push
fs
jg
jp
adc
sti
pop
push
call
cmp
push
mov
xchg
clc
sbb
repnz
lret
mov
cmp
test
sbb
sub
dec
in
xor
push
mov
add
std
and
inc
iret
bnd
loop
arpl
lret
cmp
aad
movsb
push
test
mov
xchg
inc
insb
ss
enter
dec
adc
adc
push
cmpsb
push
outsl
jb
xchg
loope
mov
in
xchg
rorb
mov
mov
push
dec
adc
xor
out
cmp
stos
sub
icebp
lret
cmp
sub
subb
sub
daa
fidivl
enter
push
xchg
xlat
sbb
sub
outsl
int3
popa
or
sbb
ss
adc
aaa
jle
dec
fld
andl
inc
fcompl
xchg
sbb
mov
jb
fsts
loopne
xor
fidivl
into
std
out
jno
loop
mov
push
sti
fs
adc
add
fsubl
or
pop
outsb
aas
adc
test
insb
fisubrl
dec
pusha
dec
pushl
pusha
lea
popf
mov
test
dec
addr16
xchg
jge
dec
pop
data16
xchg
fidivs
stc
notl
pushf
in
ds
inc
loopne
scas
out
jo
dec
lock
les
sahf
rolb
call
or
xchg
xchg
gs
jae
sbb
test
xor
in
jecxz
je,pt
cmc
mov
repz
hlt
je
adc
dec
pop
rcrb
hlt
vpsubb
pop
dec
pop
repnz
filds
mov
das
into
ror
mull
cmp
repz
ja
popf
in
pop
nop
jno
xchg
sbb
cmp
shll
mov
mov
scas
jne
mov
push
jmp
mov
out
or
lea
lret
xchg
xchg
fcmovnbe
inc
icebp
add
push
lea
int
int
out
fsts
mov
sub
leave
inc
cmp
push
movsl
mov
popf
sub
adc
fistpl
mov
pop
cmp
div
xor
leave
jge
fs
outsl
xchg
jp
fidivrl
ss
das
pop
out
daa
inc
test
insl
jp
xchg
jmp
mov
and
xor
movsb
lods
iret
xchg
and
jg
inc
outsb
ja
hlt
push
push
jb
test
jle
cmp
lods
subl
jp
pushw
or
add
in
aaa
push
sbb
fdivs
cmp
popa
sbb
es
sbb
scas
stc
add
movsl
call
mov
jnp
push
xor
sbb
push
sbb
xor
xor
jo
add
adc
or
push
jns
add
scas
aad
bound
jbe
ficoml
xor
movsl
std
and
loopne
pop
pop
lret
push
js
repnz
xchg
cmp
popf
cmp
sub
push
aad
iret
inc
je
xchg
xchg
out
xlat
sbb
ds
pop
mov
and
adc
pushf
arpl
out
cmp
cs
pop
xchg
inc
jno
mov
xchg
or
xor
popf
dec
push
adc
mov
mov
xchg
adc
mov
sti
ss
adc
mov
mov
pop
cmp
push
push
mov
pop
in
ret
or
ror
movsl
sbb
xchg
jecxz
xchg
ss
xor
pop
dec
push
adc
stc
push
popa
mov
sub
aad
mov
adc
xor
subl
and
repz
mov
cli
loop
fidivl
fadds
imul
pop
jno
mov
and
lcall
out
fimuls
ljmp
scas
cmpsl
rcrl
cmp
cmp
xchg
in
jg
mov
mov
sub
cmpsl
lret
jp
std
pop
and
ds
mulps
ss
pop
xchg
or
sbb
jg
inc
xor
aas
iret
cmp
mov
gs
sub
mov
lods
repnz
das
fwait
test
jge
xchg
loopne
add
mov
or
addr16
sub
jmp
push
dec
xchg
xchg
mov
mov
inc
shll
enter
sbb
test
movsb
int3
pop
mov
and
xor
jbe
cld
jg
push
mov
xchg
dec
or
jl
and
mov
xchg
mov
stc
in
shlb
cli
shrd
pop
mov
sub
mov
fnsave
mov
outsb
fs
adc
jmp
out
repnz
push
lods
dec
inc
movsb
jns
mov
mov
push
mov
out
dec
push
popa
mov
mov
dec
sti
or
sub
sbb
ljmp
mov
add
insb
mov
push
dec
pop
imul
leave
mov
push
jg
loopne
repz
and
imul
mov
mulb
or
add
adc
push
xor
ds
push
repz
loop
ficomps
push
sahf
xorl
pusha
aaa
aad
rorb
cmpsb
fwait
add
test
pushl
ret
cmpsb
mov
fimull
je
mov
cmpsl
jo
jo
mov
or
inc
sub
lcall
push
push
mov
je
add
in
leave
adc
mov
test
ret
scas
shrb
push
mov
mov
movsl
xor
lcall
xchg
sbb
shr
pop
imul
leave
std
mov
push
push
rorb
ja
ficoms
inc
jns
orl
jns
dec
aas
sub
movsl
mov
mov
adc
pop
add
jge
inc
dec
stc
outsb
xor
push
lret
mov
hlt
sub
pop
lock
mov
mov
cmc
push
inc
sub
mov
test
addr16
stc
arpl
lock
xchg
jge
cwtl
jmp
mov
and
mov
jle
cltd
xor
cmp
fbld
xor
std
imul
push
xchg
and
sub
pop
ds
push
leave
inc
sbb
jmp
mov
shll
clc
add
inc
mov
jns
and
jle
push
rcll
das
pushf
das
negl
outsb
shlb
cmpsb
fs
pop
pop
cmp
mov
loope
orb
add
mov
push
pop
inc
adc
dec
mov
mov
add
inc
jno
sbb
adc
inc
lock
mov
incb
nop
pop
ds
mov
dec
loope
jo
xor
aam
icebp
sub
cs
pop
icebp
adc
sbb
cmpsl
mov
jno
push
pusha
out
fisubrl
sahf
mov
pop
cmpsb
aad
push
test
sub
jp
sbb
sub
les
dec
ret
xor
out
aaa
inc
inc
xor
ficompl
xchg
mov
jg
dec
imul
and
mov
pop
out
aad
lock
imul
dec
cli
add
sub
icebp
imul
mov
imulb
imul
repnz
xchg
stos
sub
aaa
adc
lea
jne
movsb
push
cmp
test
lods
add
dec
aaa
cli
scas
jne
outsb
xchg
jecxz
out
int
cmp
test
mov
std
sub
pop
mov
jp
xor
cmp
fiaddl
push
cmpsb
pushf
imul
cmpsb
adc
pop
js
and
pop
popf
inc
pop
sahf
xchg
add
test
sbb
xor
mov
and
stos
xor
push
loope
push
fs
aaa
sbb
jbe
jle
scas
jne
mov
ljmp
dec
imul
in
sbbb
sbb
add
dec
insl
adc
int
cs
popf
add
fs
cmp
fldt
popa
dec
in
sbb
scas
xor
call
push
adc
cmc
loop
fmul
hlt
stos
pop
in
push
pop
xchg
mov
sub
cmp
mov
and
xor
mov
jns
fldl
adc
inc
add
dec
and
push
cltd
mov
jl,pt
fildl
shlb
push
popa
fwait
inc
stc
scas
mov
or
les
sub
sub
lods
push
mov
cmp
es
mov
fldt
cmpsl
add
push
std
dec
out
push
jp
dec
popa
les
jl
jns
inc
imul
xchg
xchg
ja
fsin
cltd
mov
lods
pop
jo
push
xchg
les
fdiv
scas
jecxz
inc
test
pop
test
inc
cmpsl
push
aas
xchg
stc
mov
cmpsl
scas
insl
jp
insl
ret
icebp
jne
xchg
popa
xchg
pushf
mov
subl
mov
cmp
jns
jmp
aas
lea
mov
mov
xlat
js
xlat
fnsave
arpl
int
dec
or
sub
cmp
sbb
push
dec
cmpsb
ja
sub
insl
push
mov
mov
push
push
rorb
and
sahf
lcall
stos
adc
addr16
loop
jp
loop
mov
test
mov
roll
xchg
ret
push
iret
in
movsb
mov
daa
xor
loop
clc
dec
lea
cs
aam
xor
fcoml
mov
cmp
andl
pop
clc
nop
xor
lods
jge
call
mov
cs
and
mov
jbe
fsubl
insl
mov
and
scas
jmp
push
xchg
clc
fidivl
enter
inc
leave
test
sbb
and
mov
out
mov
cmp
and
fwait
je
inc
pop
dec
clc
repz
xchg
dec
das
dec
mov
movd
inc
mov
and
xchg
out
sbb
mov
inc
aas
iret
inc
pop
js
dec
push
adc
adc
mov
sbb
cmp
jg
repnz
stos
or
lret
test
pop
mov
cmp
scas
jnp
sbb
xor
jg
push
mov
xchg
jg
xchg
adc
mov
add
cltd
mov
xchg
adc
mov
and
sbb
jb
mov
test
loop
lret
enter
cmpb
fsubs
scas
push
das
cmp
lea
jge
sbb
in
sahf
test
stc
or
push
sbb
sub
repz
sbb
aas
out
mov
daa
leave
fcoms
pop
xchg
adc
adc
mov
repnz
pop
in
mov
dec
jno
enter
add
lods
lcall
or
jbe
ret
lods
int3
int3
pushf
lods
mov
outsl
cmp
xor
fbstp
xchg
je
stc
jmp
es
lcall
push
leave
mov
out
lock
aad
or
rcrl
ret
xchg
sub
xor
push
gs
js
punpcklwd
sbb
sbb
js
movsb
lea
mov
pop
pop
mov
pop
push
pop
jo
xchg
push
pop
and
dec
xor
xor
or
mov
mov
xor
daa
je
leave
fnstsw
mov
addr16
add
loop
mov
cli
jecxz
and
pop
lcall
repnz
or
or
sbb
mov
sahf
sbb
add
pop
xlat
dec
jne
or
test
lret
dec
int3
stos
adcb
dec
and
orl
sbb
jp
fwait
sahf
aaa
imul
bound
inc
dec
sbb
jg
jb
loop
aaa
sbb
jbe
dec
push
dec
and
mov
adc
data16
ss
in
cmp
mov
hlt
mov
mul
mov
dec
dec
cmp
rcrb
insl
call
aam
dec
loop
mov
jl
inc
mov
or
mov
aaa
in
jl
jg
push
jns
sub
xchg
cmp
enter
ret
cmp
sbb
mov
mov
inc
jnp
add
into
sti
and
and
movsb
push
fstps
imul
jns
stc
js
push
jae
pop
cmpsw
ret
inc
outsl
idivb
sahf
ljmp
add
lds
push
inc
inc
sbb
sbbb
int
push
cmpsb
sti
dec
lret
cwtl
loope
pop
mov
fildll
mov
addl
clc
icebp
scas
xor
gs
mov
push
test
mov
pop
xchg
push
cmp
adc
mov
inc
mov
sbb
mov
sbb
rorb
loope
mov
pop
add
mov
aad
mov
jae
push
pushf
cltd
in
popa
mov
test
adc
jmp
lds
xor
xchg
or
enter
add
lea
popa
sub
test
movb
mov
in
movsl
mov
jg
pop
cmp
cmp
mov
js
cwtl
pop
xor
outsl
cltd
cmpsl
jo
add
mov
inc
mov
add
lock
jmp
adc
xor
nop
ret
std
xchg
xchg
sbb
cmp
std
loope
mov
hlt
test
outsl
out
mov
or
mov
shr
pop
scas
push
lock
inc
fistps
add
mov
in
rcl
mov
jge
adc
mov
inc
imul
and
lods
aad
sarl
xor
and
repnz
and
loop
addr16
rclb
in
mov
rol
inc
stos
dec
xor
pushf
mov
and
lods
push
push
xor
pop
push
dec
jbe
out
push
push
and
pop
lods
clc
push
scas
inc
and
xchg
cmpsl
inc
push
ss
add
xlat
divl
inc
insl
jg
dec
mov
and
int
stos
add
xchg
pop
add
fiaddl
mov
pushf
imul
xor
xor
std
inc
or
dec
repnz
add
jnp
dec
jo
lea
dec
adc
or
adcb
xchg
mov
cmpsb
int
mov
repz
cs
pop
movsb
jle
adc
fcomps
adc
rcll
call
mov
fmulp
xor
cmpsb
out
es
mov
aas
fidivrs
lods
fucom
push
cmpsb
mov
cmp
inc
loopne
pop
call
ficoml
push
cmp
jb
std
orl
or
int3
adc
mov
jne
inc
not
cmp
and
rcll
mov
sbb
das
pushf
arpl
int
inc
adc
mov
dec
adc
jb
cmpsb
fidivrl
or
mov
mov
cld
pop
pop
jbe
dec
rcr
dec
es
dec
shrb
inc
and
shll
ret
inc
mov
jne
pop
cmpsl
pop
xor
push
cmp
sbb
lret
fwait
imul
cmpsb
xlat
shll
jne
jg
loopne
cmp
jbe
scas
lock
imul
xchg
add
dec
subb
aad
dec
movsb
mov
inc
cmp
xor
movsl
lcall
lret
add
and
enter
les
rcll
out
adc
repnz
pop
popf
imul
ljmp
adc
or
cmp
sub
loop
inc
and
idiv
push
sbb
test
mov
jecxz
sub
sarl
stos
pop
inc
stos
pop
insb
lret
xor
mov
cmpsb
sahf
cmpsb
xchg
scas
nop
call
sbb
sbb
xchg
inc
jp
dec
adc
dec
es
ds
inc
push
test
shrl
push
hlt
cmpl
ja
push
fstps
nop
cs
or
stos
mov
jnp
sub
sub
pusha
sysexit
shl
mov
daa
add
outsl
mov
divl
clc
aad
mov
mov
pop
jecxz
ja
push
mov
lahf
cmpsl
adc
push
in
mov
mov
les
or
adc
adc
mov
lcall
inc
mov
repnz
pop
adc
sbb
mov
fldenv
lea
sub
pop
repz
jge
push
add
imul
pop
hlt
scas
sub
mov
mov
ljmp
jp
enter
push
and
fcompl
sahf
enter
insb
fsubr
loope
xchg
repz
aaa
and
iret
gs
shrl
imul
sub
jle
hlt
clc
dec
bnd
dec
mov
xor
test
xchg
add
dec
sbb
pusha
sbb
xor
jp
xor
stos
add
arpl
sti
add
adcb
add
jno
lret
cli
mov
jne
inc
hlt
sbb
mov
inc
adc
aam
lds
fcoml
pop
mov
cli
dec
aas
pushf
push
fsubr
mov
adc
aaa
popf
mov
sbb
mov
xchg
pushf
in
movsb
aam
jae
pop
roll
out
xchg
cmpsb
pop
mov
xor
cltd
cmpsl
iret
testb
dec
push
idivb
fsub
push
cmp
xor
xor
sub
out
stos
fadds
xchg
rcll
mov
inc
cwtl
outsl
leave
pop
jnp
mov
mov
xor
inc
scas
ftst
mov
mov
out
popa
mov
or
or
xor
in
dec
pusha
fbstp
push
clc
lods
xchg
jbe
sar
xor
push
mov
adc
cli
cltd
int
jge
pop
pop
jmp
mov
cmpsb
cmpsb
nop
mov
mov
test
jbe
ljmp
clc
mov
scas
mov
js
mov
sbb
addr16
xchg
aas
inc
pop
insl
aaa
push
dec
xchg
int
es
add
gs
lcall
in
in
orl
cmc
xchg
out
xor
sbb
in
lods
add
fistl
shl
cmp
pusha
in
inc
xor
ljmp
enter
xchg
nop
mov
sbb
lahf
rclb
add
test
mov
jg
sub
xchg
xchg
int3
push
popa
sbb
mov
xor
out
mov
roll
sub
xchg
sub
add
push
mov
or
push
jmp
arpl
mov
lcall
push
cli
cmp
mov
test
nop
scas
mov
cmpsb
jg
or
add
fstps
push
ss
dec
jnp
lods
pop
cmc
lret
mull
and
mov
xlat
dec
xor
cmp
popf
adc
cmpsb
nop
test
loop
add
dec
addr16
mov
sbb
fsubrs
andl
enter
jns
jmp
add
sbb
stos
sahf
sbb
inc
jle
jo
scas
dec
jge
xchg
sbb
in
movsl
subl
clc
xor
dec
sub
cli
hlt
outsb
pop
outsb
xor
sahf
pusha
sbb
xchg
loop
push
outsb
push
inc
rcrl
mov
cmp
mov
cs
sbb
arpl
int
jne
mov
push
in
std
cmp
ljmp
fprem1
pop
sbb
flds
jmp
inc
leave
dec
das
inc
test
push
xor
sub
xchg
int3
cmp
jecxz
mov
lock
lret
pop
aam
loop
xor
arpl
iret
test
xor
mov
sub
out
push
cwtl
dec
fstl
cmp
outsb
jge
shrb
pop
dec
je
jb
mov
adc
data16
scas
lods
adc
dec
mov
adc
stos
lea
pop
addr16
hlt
or
stos
mov
das
leave
movsb
lock
xor
test
les
fwait
adc
stos
les
shl
push
inc
adc
or
sbb
jo
xor
notl
mov
mov
sbb
cmp
xor
int3
sbb
mov
shll
mov
pop
insb
js
dec
xor
inc
into
mov
adc
inc
es
xor
xchg
mov
dec
sub
and
fists
push
test
cs
lods
sti
mov
and
insl
inc
jae
xchg
scas
dec
pop
shlb
lcall
xor
mov
sub
and
push
cmp
cs
sbbb
jg
xlat
push
push
push
jno
add
pop
mov
orb
pop
gs
mov
lea
jns
xchg
lds
push
cmpsl
test
das
lea
dec
add
mov
push
mov
mov
xchg
rcr
into
push
js
sub
push
sbb
cmpl
mov
rcrb
loop
fcomp
and
cmp
cmovbe
xchg
jne
push
add
and
jecxz
leave
ret
je
ja
xor
dec
rorb
fadd
xor
scas
cmp
adc
mov
mov
mov
push
sbb
outsb
in
pop
insl
inc
pop
jg
rclb
mov
cmpsl
imul
adc
push
pop
mov
leave
xchg
inc
aam
push
leave
arpl
jg
int
push
adc
jecxz
pusha
aad
in
dec
mov
rorb
adc
or
jg
inc
sub
icebp
xchg
inc
sbb
nop
mov
xchg
adcb
xchg
cmp
in
push
fsubr
cmp
loope
dec
or
insb
xor
cmpsl
xchg
mov
movsl
mov
bound
movsl
insl
ret
sub
pop
in
mov
pop
dec
lret
push
cwtl
xor
cmp
push
push
cmpsl
add
mov
gs
cmp
das
movsl
mov
ja
xchg
lahf
jnp
je
ret
sti
mov
js
dec
adcl
scas
mov
rcl
cmp
mov
pop
mov
sub
cltd
adc
pusha
test
add
lcall
xor
pop
test
mov
cwtl
lcall
pop
adc
scas
jb
fwait
or
xchg
popa
dec
test
fdivrs
fdiv
orb
out
jbe
pop
loop
sahf
fsubrl
dec
ret
leave
dec
sbb
std
test
sub
mov
adc
push
cmp
out
int
bound
imul
in
add
adc
dec
das
scas
cmp
pop
and
cli
pop
outsb
or
and
push
xor
fcom
and
jmp
or
cmp
popa
rorb
pop
daa
cmp
cmp
xchg
cld
dec
call
mov
mov
and
sub
in
imul
loop
daa
lds
lahf
out
out
dec
insl
push
pop
scas
xchg
push
std
mov
push
sub
jp
pusha
add
sbb
test
lcall
push
xor
xor
out
aad
test
ficoms
pop
loope
cwtl
out
jl
cmpsl
inc
scas
pusha
inc
jo
subb
pop
or
mov
jb
iret
pop
inc
or
cltd
cmp
jnp
imul
out
out
adc
mov
cmpsl
loop
stos
leave
push
or
xchg
push
mov
pop
ret
push
into
data16
in
mov
cld
sahf
adc
sbb
inc
sahf
dec
and
fldenv
xlat
jo
push
lds
out
dec
ss
pop
arpl
sbb
rcrb
jge
scas
mov
xlat
mov
adcb
pop
out
cmpb
add
leave
xor
cmp
rolb
imul
pop
rcpps
xchg
cs
and
jbe
mov
je
popw
push
adc
push
mov
xlat
rcrl
hlt
ror
or
xchg
cltd
dec
cltd
cli
imul
int3
mov
jl
xchg
rol
fbld
push
jl
ljmp
mov
int3
mull
stos
out
cld
pop
push
iret
mov
icebp
or
pop
addb
adc
sbb
loop
rcr
rorb
jae
mov
fisubs
bound
mov
fnstenv
sarl
aad
lods
rclb
add
shrl
out
lock
lret
mov
outsb
sub
ret
aas
xchg
jo
dec
ss
nop
xor
sbb
mov
sbb
test
xchg
mov
and
push
jmp
insb
lret
mov
out
lcall
jmp
sbbb
jno
cltd
pop
jg
jl
mov
adc
dec
lea
mov
fwait
mov
xor
mov
leave
sahf
xor
jno
jb
pop
jnp
dec
bound
sti
sub
loop
aas
outsl
das
stos
pop
loop
iret
dec
mov
inc
jmp
scas
outsl
loopne
mov
xchg
inc
add
pause
xchg
out
icebp
js,pn
pop
dec
sbb
std
and
out
stos
jo
inc
sbb
pop
dec
pop
in
mov
aas
out
negl
push
fwait
cmpsl
cmp
cmp
mov
jecxz
lahf
dec
daa
inc
cltd
stos
xlat
lret
mov
ljmp
mov
fcompl
sarb
mov
out
add
in
loop
xchg
cmp
test
popf
or
mov
js
repz
aas
loope
and
jnp
dec
add
lods
mov
clc
test
xor
leave
sbb
adc
xchg
inc
inc
div
mov
inc
jg
std
enter
in
mov
dec
jecxz
popf
sbb
sbb
or
sub
sub
mov
jns
pop
sbb
jmp
jno
jbe
loopne
pop
enter
test
loopne
inc
sbb
xlat
sar
hlt
ret
add
xchg
ret
jecxz
xor
lret
push
xor
repz
movsb
mov
mov
dec
enter
mov
aam
or
push
movsl
stc
xor
mov
and
scas
sbb
xor
xchg
xor
js
loope
andl
test
les
adc
repnz
xor
ljmp
not
xchg
adc
pop
test
ret
inc
lret
add
xchg
xor
pop
xchg
pop
fldt
outsb
insb
or
aas
daa
aad
xchg
and
or
mov
ljmp
ljmp
popa
push
xchg
dec
xor
addr16
daa
lods
repz
lods
mov
aad
xchg
daa
xor
and
mov
add
scas
xchg
xor
sbb
sub
xchg
jecxz
incb
inc
xor
pop
nop
bound
inc
pop
jne
out
cmp
shlb
adc
nop
lcall
xor
cmp
and
lret
pop
jns
push
cmp
dec
in
or
addr16
iret
clc
or
jns
dec
iret
stc
fsubl
addr16
lods
lock
jmp
decl
test
sub
sub
test
add
dec
xchg
jo
jbe
sbb
push
sbb
jg
inc
pop
test
adc
test
daa
push
into
mov
imul
and
into
popf
sub
les
fs
push
cmp
pop
notb
cltd
movsl
jge
push
adc
push
xor
pop
int
hlt
adc
xor
es
jo
andl
ficompl
jo
outsl
mov
mov
popf
mov
inc
loopne
mov
out
and
andl
out
or
adc
lea
mov
or
jo
sub
mov
cmpsl
adc
outsb
or
jae
or
imul
adc
pop
pop
mov
repnz
cmp
les
fdiv
mov
and
lods
dec
sub
and
sahf
cwtl
cmpsb
dec
mov
mov
mov
push
decl
insl
xor
lahf
xchg
and
loop
inc
push
jge
adc
pop
lret
lret
cmp
inc
cld
xchg
data16
gs
lret
add
push
inc
mov
orl
movsl
arpl
fisttpll
lahf
test
mov
jmp
fimuls
xor
dec
das
xchg
fadds
scas
jns
in
rorl
pop
iret
pop
ljmp
dec
in
mov
or
dec
sahf
lea
cmp
movaps
decb
mov
cmp
push
pop
pusha
out
hlt
lods
mov
out
out
clc
lahf
sbb
inc
and
adc
jns
lcall
add
sbb
jl
xchg
pop
fadds
stos
pop
xchg
or
mov
mov
rclb
out
xor
fidivrl
in
fstpl
jno
sahf
mov
and
idiv
cwtl
out
movsl
scas
dec
in
push
cmc
mov
jnp
xchg
cltd
mov
xor
lock
pusha
popf
push
fstps
int
jg
jb
inc
mov
mov
pop
jns
or
out
pop
add
mov
add
adc
adc
fimull
fwait
rcl
adcb
sub
lcall
adc
dec
daa
pop
xor
push
mov
fldt
adc
imulb
xchg
sbb
in
and
dec
jmp
out
lahf
xor
lahf
push
add
mov
shll
lock
add
test
push
dec
fwait
inc
push
sbb
fmuls
dec
and
xlat
lret
inc
and
lcall
adc
mov
add
or
mov
add
jecxz
fsts
lret
dec
jnp
stos
in
in
sbbl
adc
movsl
sub
jb
cli
lret
jecxz
push
jecxz
call
pushf
ja
mov
clc
push
push
aad
stos
arpl
nop
fcomps
ucomiss
shlb
ja
mov
sub
popf
xchg
les
leave
push
mov
out
adc
mov
ds
pusha
out
scas
pop
aaa
jo
xchg
fucomip
ja
dec
xchg
mov
push
mov
xchg
test
cwtl
pusha
mov
sbb
stc
test
mov
bound
xchg
mov
into
fdivrl
jnp
jne
aam
mov
pop
lock
jmp
mov
mov
add
push
test
mov
or
mov
and
jl
adcb
cld
or
iret
fsts
stos
dec
rclb
and
sub
mov
mov
dec
adc
orl
push
cmp
jge
loope
movsl
data16
pusha
cmc
cmp
fiadds
addr16
sbb
repnz
test
arpl
push
mov
cltd
lret
or
std
test
ret
shr
inc
xchg
sub
stos
xchg
push
sahf
push
cmp
xor
jae
mov
movsb
daa
adc
push
mov
shrb
mov
pusha
jg
adc
popf
gs
pop
xchg
pop
push
jne
add
mov
pop
pop
or
aad
sub
mov
push
ljmp
mov
arpl
fnstenv
xchg
inc
outsb
in
pusha
xor
shll
mov
dec
pusha
aaa
sub
lahf
insl
mov
aas
sbb
lret
popl
push
fs
shlb
movsb
xor
pop
cmp
pop
das
cmc
xchg
dec
xlat
mov
cmpsb
xchg
jecxz
das
sub
cltd
cs
movsb
pusha
stc
push
lods
pusha
xchg
mov
clc
cmpsb
jg
dec
cmp
fucomp
setae
outsb
xchg
sbb
scas
push
xor
sahf
repz
cmp
push
pop
jae
cmp
inc
hlt
and
xchg
dec
push
movsl
clc
add
cmp
bound
jge
push
ficomps
xor
mov
shll
insb
imul
push
ja
push
fwait
int
push
push
adc
pop
mov
dec
dec
fiadds
ret
rclb
ljmp
xchg
pop
xor
ja
sbb
jns
push
dec
pusha
out
icebp
movsb
adc
xchg
jae
xchg
sub
mov
pop
push
pop
lahf
dec
mov
jno
mov
stc
popf
fmul
ds
es
mov
sub
push
xor
cld
add
dec
xor
pop
sbb
xor
xor
call
add
push
jmp
lret
or
mov
sbb
pop
movsb
or
dec
test
ljmp
sbb
pop
sbbb
or
lret
out
mov
xchg
add
jb
or
sbb
sub
imul
mov
push
xor
xor
ljmp
rol
bound
dec
fldenv
push
jmp
xchg
xchg
inc
or
pop
loopne
cltd
aas
lret
adc
iret
ficompl
pop
xchg
fwait
das
cld
inc
repnz
in
icebp
mov
jl
push
lret
stc
sbb
lret
les
cmp
pusha
test
pop
push
imul
adc
cmp
daa
mov
cld
lcall
jp
lret
sbb
pop
mov
inc
cmpsl
mov
test
pop
test
mov
inc
cmp
mov
int3
sbb
sub
lret
inc
addr16
enter
sarl
sub
movsl
rolb
mov
push
arpl
push
pop
or
std
mov
jnp
jg
adc
js
int3
pushf
mov
jle
jg
mov
mov
add
out
pop
adc
repz
arpl
cmp
push
ljmp
repz
jae
stos
scas
insl
sahf
push
rcll
les
mov
aad
xchg
push
orb
push
adc
xor
xchg
pop
inc
xor
fwait
and
fs
xor
sbb
xchg
inc
sub
ss
arpl
mov
mov
pusha
das
movsl
add
cmp
mov
scas
ret
test
xor
xor
rolb
mov
ja
and
int3
dec
insb
adc
call
inc
mov
fsubrl
cmp
cs
sbb
cmpsb
mov
scas
mov
sbb
mov
mov
dec
daa
in
ja
orb
lret
jne
lcall
xchg
aas
mov
cli
jno
sbb
xor
push
iret
dec
outsl
scas
bound
add
mov
sbb
test
mov
xchg
mov
push
xor
movsl
les
jg
jnp
das
add
or
jae
scas
imul
sbb
mov
addr16
repz
pushf
and
lods
cmp
adc
jl
pop
dec
mov
fsub
adc
add
inc
dec
xchg
daa
jle
test
das
psrlw
mov
js
addr16
popl
int3
add
stos
fcompl
and
inc
mov
gs
push
aas
xchg
cmpsb
mov
fsubrl
outsl
xchg
xor
sub
lret
and
aaa
sub
cmp
xchg
imull
jns
add
pop
rolb
adc
adc
cwtl
iret
stos
ds
fisubs
call
loopne
adc
int3
xlat
repz
imul
scas
ja
es
mov
dec
negl
xor
and
test
in
sarl
jmp
add
pop
pop
push
xlat
or
pusha
or
mov
jge
pop
enter
ja
aad
es
fdivrp
mov
arpl
iret
dec
sub
test
fimuls
fadds
xchg
pop
lds
adc
rcl
sbb
lds
jnp
cwtl
arpl
lds
test
ss
add
sbbl
or
pop
mov
lods
rorl
cmp
pop
jno
sti
mov
sti
sbb
je
es
das
nop/reserved
mov
jle
and
in
fbld
sti
add
or
mov
rcll
mov
filds
or
jb
xor
xor
add
push
popa
in
sub
mov
stos
es
xchg
or
mov
repnz
jmp
into
push
xchg
stc
in
xor
add
pop
and
push
pusha
and
or
sbb
rorb
repz
cmp
rcl
stos
push
std
mov
push
addl
jns
or
and
dec
push
popf
in
in
gs
es
in
dec
gs
pop
out
mov
int3
cmpsb
sub
rol
adc
inc
std
outsl
sub
mov
mov
mov
pop
pop
pop
insb
es
lcall
xor
xor
jnp
iret
cmp
mov
push
shrl
aas
xabort
rorb
xor
mull
or
dec
jecxz
and
dec
ljmp
add
aaa
in
cmp
sahf
clc
jnp
push
imul
ja
jbe
lret
and
inc
cmp
adc
mov
hlt
mov
int3
mov
inc
andl
cmpb
cmp
cmpsb
test
xchg
push
enter
add
sub
in
push
cli
ror
and
cmp
int3
sub
xchg
adc
es
stos
stos
inc
sub
pop
xorb
xor
and
mov
mov
sbb
jle
sbb
mov
add
arpl
xchg
outsl
add
lret
xchg
sub
and
icebp
subl
dec
lret
cltd
loop
je
addr16
mov
out
sub
popf
sbb
sbb
xchg
and
xchg
jl
mov
jmp
jns
repnz
jp
aad
ficompl
pop
repnz
in
fisubl
js
sub
push
imul
push
ror
test
js
sbb
ljmp
lret
xor
rorb
jb
scas
pop
xor
inc
push
ja
in
pusha
movsb
lds
int
lret
loop
inc
cmp
add
pusha
ficomps
sub
dec
insb
addr16
loop
sub
int3
movsb
lcall
inc
fs
cmp
push
push
imul
mov
jecxz
movsl
add
xchg
mov
pop
cmp
shll
jo
std
les
rolb
aam
lret
insb
dec
fadds
ret
fimull
mov
sbb
adc
push
push
dec
or
adc
sub
aaa
push
std
inc
push
cmp
push
scas
jne
popa
xor
xor
into
push
repnz
shll
int
sub
dec
inc
jb
jnp
insb
dec
sarl
iret
rclb
outsl
inc
int
adcb
cld
and
mov
scas
paddq
push
sub
repz
adc
out
fld
push
aas
out
dec
xor
cmpsl
add
ds
xchg
int
add
mov
rcr
mov
imul
sub
addr16
dec
daa
xchg
push
rclb
sahf
push
mov
jg
dec
fidivl
push
push
test
mov
or
movsl
pop
fdivrs
cwtl
lcall
test
dec
pop
lods
lock
aaa
mov
testl
or
pop
push
push
int
mov
pop
inc
pop
mov
nop
mov
sub
loope
aad
shl
nop
ret
cmp
ficomps
dec
movsl
sbb
clc
jg
adc
stc
sbb
and
dec
fisubl
fiadds
test
mov
test
add
cmp
push
pop
mov
jne
xor
rolb
loop
xchg
shrb
hlt
lea
popa
sub
jp
decb
jle
out
push
out
lret
push
push
scas
arpl
nop
mov
xor
push
sub
cmpsb
popa
jl
arpl
xchg
cmp
and
int3
ret
cmp
fidivl
gs
ja
scas
std
adcb
inc
adc
repz
inc
jnp
mov
sbb
mov
push
pop
cmp
sbb
push
test
sbb
cmp
lods
pop
iret
inc
sub
sub
inc
cmpsb
ret
sbb
or
push
leave
sahf
or
xchg
and
sbb
push
sbb
dec
add
cmp
xchg
idivl
jle
ficomps
mov
pusha
jb
and
add
sub
cs
sub
jecxz
and
sbb
pop
mov
scas
push
adc
sub
mov
push
cs
mov
lret
fimull
aaa
fisttps
test
push
jl
jp
es
and
sbb
lcall
cmpl
ds
imul
out
push
into
xlat
cmp
push
js
jnp
push
xchg
mov
xlat
sbb
outsb
sbb
sub
add
mov
mov
incw
insl
pushf
add
xchg
stos
sub
ret
loope
aas
add
and
mov
push
sub
push
dec
loopne
mov
xor
pushf
ds
adc
and
add
jbe
mov
movsl
xor
xchg
roll
out
dec
mov
daa
xchg
je
mov
mov
pushf
jl
stos
ret
addr16
mov
cs
mov
imul
mov
pop
ret
xor
aaa
push
aam
nop
xorb
sub
jg
lods
jle
adc
sbb
adcl
mov
imul
mov
xor
mov
adc
jp
int3
or
lahf
inc
movl
push
inc
fisttpll
dec
sbb
sub
out
data16
fdivr
lea
xchg
pop
sbb
shrb
pop
sub
scas
repnz
push
xchg
add
push
int
cwtl
cltd
cmp
jo
pop
mov
cmp
sarb
jbe
mov
int3
imul
scas
sub
nop
fsubr
xlat
cs
int
add
cld
add
mov
adc
in
iret
xchg
leave
jecxz
sbb
out
and
pusha
adc
out
xor
es
cmp
and
out
cmp
cmp
and
fwait
in
jb
add
and
sub
add
popf
repnz
mov
push
push
pop
ja
out
sarb
jns
insl
push
cmp
lds
leave
mov
sbb
pushf
or
fbstp
mov
mov
xchg
leave
and
shll
push
jmp
jne
jns
xchg
test
inc
xchg
mov
jecxz
sbb
mov
ja
pop
sarb
js
inc
dec
stc
sti
lahf
andl
es
sbb
push
fadd
pop
pop
mov
cs
or
sarl
and
cmp
and
push
adc
mov
scas
out
dec
lea
dec
ds
je
imul
xlat
or
pop
add
fcomip
mov
or
mov
test
push
out
mov
call
lods
dec
int3
outsb
enter
pop
lcall
lods
jns
out
pop
andb
lea
pop
sub
mov
ds
inc
sub
in
gs
xor
sub
icebp
popa
fdivp
cld
pushf
ljmp
shlb
add
mov
pop
stos
jle,pt
hlt
ret
cmp
pop
ds
in
pop
push
mov
loopne
popa
xor
mov
push
sub
xor
mov
ret
jbe
mov
fdiv
out
xor
jle
xor
test
xchg
mov
addr16
rorb
fldt
push
jmp
mov
sbb
lock
rol
lahf
mov
lret
ret
out
ja
xchg
mov
enter
sahf
fadds
pop
push
fisubrl
jns
dec
fiadds
pusha
mov
ud2
pop
negb
cmovg
jns
sub
cmp
fs
stc
in
dec
sub
subl
lret
mov
nop
cltd
test
test
and
xor
data16
push
nop
pinsrw
inc
ja
and
xchg
pop
loop
xchg
mov
inc
cli
aam
fcomps
lret
sbb
fwait
out
ficomps
dec
das
pop
rdpmc
push
loopne
arpl
dec
fnstenv
shrl
mov
add
les
xor
imul
pushf
jp
sbb
jbe
loope
mov
and
pop
repz
sbb
pop
and
fstps
xchg
insb
outsb
out
hlt
mov
push
and
xchg
aaa
shlb
adc
inc
pop
fldl
lea
adc
sarl
cli
testb
mov
faddp
mov
add
es
out
mov
cmp
dec
sub
call
cmpsb
pop
mov
outsb
mov
mov
lock
cs
mov
push
js
bound
jl
inc
jne
jae
pop
or
repnz
mov
cmp
out
pop
mov
stos
dec
stos
jne
push
cmp
jp
ret
cli
cli
rcrl
push
mov
inc
push
bound
cld
sub
adc
cs
push
call
dec
pop
inc
lret
pop
lahf
push
iret
cmp
mov
movsb
adc
imul
nop
in
mov
test
pop
pusha
dec
sbb
repz
mov
cmpsb
test
or
jb
mov
jo
repz
cmpsl
push
dec
movsb
shlb
pop
incb
aaa
sbb
in
popf
popl
and
jns
sti
nop
cmp
fwait
cmp
xchg
pop
outsl
xorl
inc
mov
rcrb
jle
xchg
sbb
push
cmpb
neg
addr16
adc
add
sbb
add
mov
xor
in
add
andl
ja
pop
mov
cmp
xchg
jo
mov
ret
sbb
aas
jg
mov
aad
iret
shl
inc
inc
hlt
lock
mov
or
mov
push
es
jg
repz
lock
push
loopne
dec
mov
inc
xor
out
inc
push
inc
hlt
push
or
call
push
or
movsb
jge
cmp
pop
subl
ret
pop
je
push
movsb
mov
mov
jp
adc
inc
xor
or
enter
rol
call
cwtl
test
dec
cmp
rclb
sub
xor
dec
stc
ja
test
cmc
xchg
icebp
or
iret
sti
aas
popf
int3
push
sbb
jno
mov
jmp
lcall
push
add
test
sub
dec
mov
aam
outsb
adc
orb
stc
ss
leave
jnp
and
xor
sub
mov
dec
aam
std
sti
stos
mov
inc
fcompl
clc
add
add
stc
outsb
pop
lock
repnz
leave
and
adc
in
mov
ss
repz
lret
stc
jbe
and
inc
movsl
xchg
popa
out
movsl
push
in
rol
jae
push
js
mov
inc
inc
adc
xlat
ficoms
mov
sub
fdivrp
rcrb
add
ret
out
mov
hlt
jp
jbe
outsb
pop
jp
movsl
jmp
std
mov
data16
mov
les
sub
dec
mov
nop
sub
jecxz
aad
decb
leave
jbe
sub
push
xlat
xor
pop
jb
mov
bound
push
mov
xchg
xor
jecxz
pusha
mov
into
mov
sub
test
adc
sbbb
outsl
push
cmp
mov
mov
js
rdmsr
jmp
xchg
test
in
out
and
clc
call
lret
loop
add
mov
or
jmp
js
pop
pop
push
xchg
push
push
cltd
pop
jl
mov
mov
cltd
or
pusha
daa
cli
mov
addr16
mov
pop
test
cmp
inc
test
or
cmp
push
ljmp
test
jns
rcr
cwtl
loop
add
pop
mov
inc
inc
lock
sub
loope
or
outsb
adc
shll
addr16
scas
lret
cltd
call
jno
and
ljmp
cmpl
imul
xor
xlat
adc
mov
addl
iret
and
rcll
fcoms
push
inc
adc
pop
jbe
call
xchg
mov
adc
popa
sti
mov
cmp
mov
fiadds
add
fisttpll
call
cmp
loope
je
mov
jno
call
jnp
ret
and
mov
push
and
pushw
scas
popa
xchg
es
cwtl
jmp
leave
mov
pop
pop
out
jg
xchg
cs
lcall
js
pushf
imul
jp
mov
jle
jae
cltd
push
and
xchg
pushf
sbb
movsl
leave
fdivs
out
mov
fcmovb
or
mov
repz
gs
inc
xchg
push
int3
mov
xlat
lds
cmp
sahf
jg
sub
movsl
adc
mov
out
ja
fs
scas
inc
xorb
adc
faddl
mov
mov
sbb
mov
ss
hlt
fwait
hlt
int3
add
stos
mov
jle
popa
sbb
sub
add
sub
jno
sub
pop
roll
test
repnz
xchg
and
fmul
mov
and
xchg
pop
sub
mov
jmp
movsb
js
jb
inc
push
clc
int
mov
jbe
jecxz
lock
sub
mov
int3
out
cmp
xchg
adc
cmpsb
cmp
call
leave
jle
dec
sub
ror
mull
xchg
pusha
jne
sahf
in
out
int3
pop
es
insb
pop
icebp
lds
popa
inc
sarb
int3
cmpsl
loopne
cmc
sbb
cmp
insl
push
dec
add
test
push
popf
pop
add
lock
mov
cmp
fldt
stos
jg
cmp
lret
dec
inc
pop
pop
jmp
push
into
xchg
pop
mov
movl
xchg
pop
movl
xor
fidivrs
and
in
imul
push
in
shrb
sub
cld
call
cwtl
xor
mov
nop
in
jecxz
cmp
push
incl
mov
pusha
and
push
cmp
mov
push
sbb
add
cmp
lds
or
popf
inc
dec
fidivrl
fsubrl
insl
bound
dec
push
rorb
or
dec
adc
cmp
daa
lret
dec
pop
push
xchg
mov
mov
add
push
cld
fisubrl
in
decl
pminub
stos
push
dec
dec
sub
pop
and
jge
into
sbb
push
mov
jecxz
pusha
sbb
in
mov
xchg
xlat
adc
arpl
rcr
movsb
pop
shlb
lret
adc
push
pop
inc
aam
dec
push
aas
pop
jno
iret
lods
loope
test
insl
rcrb
adc
mov
push
es
xchg
into
push
outsb
mov
pushf
int
fsubl
xchg
pop
push
adc
mov
loope
sub
mov
mov
scas
mov
mov
lahf
cmp
leave
aaa
cmpsb
mov
mov
lcall
iret
ljmp
jl
fsubr
pusha
std
xorl
je
jmp
adc
cmp
jno
adc
pop
lods
lcall
dec
js
xlat
jb
mov
decb
push
popa
dec
push
adc
adc
insb
lea
insl
outsl
fnstenv
sbb
add
xor
insl
and
enter
rcrl
jbe
popa
sub
cli
es
into
pop
loop
fstpt
mov
bound
dec
sahf
pop
inc
into
enter
in
push
fimuls
mov
cwtl
push
movsl
out
xor
leave
xchg
jb
xlat
jle
inc
sbb
dec
int
out
test
out
adc
aas
sbb
lcall
dec
out
popf
pop
cmc
xchg
mov
loope,pn
int
dec
dec
jb
jbe
je
mov
stos
subl
fisubl
push
push
jo
xchg
or
or
test
xor
fwait
addr16
lds
xchg
xchg
movsl
pop
cmp
mov
and
pop
lahf
or
stc
in
pop
imul
mov
dec
inc
cmp
jl
mov
cmpsl
adc
inc
fs
jl
jge
cli
add
adc
jmp
inc
mov
inc
xchg
outsl
pop
xchg
push
std
and
cli
inc
sub
adc
out
icebp
cmp
movsb
repnz
and
pop
int
adc
pushf
aad
xor
out
cltd
mov
adc
xchg
mov
ret
out
popf
cwtl
popa
mov
dec
push
ljmp
jno
jae
pop
jb
popa
jo
inc
mov
das
mov
sbb
jb
inc
adc
jbe
or
sbb
lcall
mov
arpl
mov
in
xor
mov
fwait
shlb
pop
pop
shlb
test
mov
jnp
ljmp
xchg
sahf
and
pop
mov
dec
repnz
mov
mov
sub
and
scas
or
pop
push
sub
arpl
xchg
rcl
test
or
pop
mov
xlat
mov
mov
into
pop
push
dec
movsl
es
imul
jns
mov
frstor
mov
dec
push
inc
mov
cmp
and
ljmp
mov
aas
adcb
mov
cmp
sbb
clc
xor
adc
pop
add
mov
frstor
rclb
cmpsb
or
sbb
push
rcll
repz
jg
push
or
test
push
xchg
mov
and
xor
test
idivl
or
fldenv
xor
cltd
mov
aam
or
xchg
leave
addr16
pop
inc
push
add
adc
lret
mov
daa
jge
lcall
push
lahf
andb
xor
cs
xor
mov
aam
mov
negb
jno
mov
rcr
adc
jp
pop
mov
lds
lock
inc
mulb
sub
sub
xchg
rolb
xchg
adc
inc
mov
pop
hlt
cmp
lret
add
inc
pop
push
adc
rclb
xor
sbb
pop
scas
sbb
outsl
test
and
adc
andb
mov
into
ljmp
or
push
pop
lods
enter
dec
mov
dec
pop
fdivrl
sub
test
inc
mov
daa
lods
jno
xchg
inc
outsb
scas
xor
and
fstp
cmpsl
sbb
push
dec
aad
mov
xor
cs
rcr
fabs
add
dec
push
inc
sbb
shll
fdivrs
push
adc
sar
or
dec
gs
sub
fists
call
mov
cmpsb
pop
ud2
mov
pop
xchg
pop
adc
and
xor
pushf
jecxz
xchg
sub
sub
fcoml
push
mov
jecxz
rolb
mov
cmp
iret
outsl
or
jnp
dec
cmp
pop
mov
lahf
in
dec
sarl
pushf
movsb
into
xor
ficoms
std
enter
int
mov
inc
jl
int
in
into
push
add
cmp
cwtl
jp
loop
bound
xlat
cmp
or
movsl
outsb
cmpsb
imul
jno
in
mov
inc
enter
sbb
movsl
ret
pop
xchg
mov
jp
mov
sahf
ficoml
xchg
inc
lds
mov
lods
pop
ds
loopne
inc
pop
sub
inc
jl
jl
stos
add
push
push
mov
mov
mov
shll
inc
rcl
aas
mov
inc
cmc
adc
dec
push
call
push
jmp
xchg
fdivr
jb
sbb
xor
push
hlt
scas
stc
jb
in
inc
jns
aam
stos
insb
xchg
scas
jo
ja
xchg
sub
add
xor
dec
or
push
mov
das
shl
mov
pushf
sub
mov
test
or
xchg
pop
push
cmp
les
sbb
sbb
lret
cli
mov
and
xchg
push
sahf
jo
jle,pn
pop
jae
insb
lcall
dec
push
mov
inc
or
ss
sub
mov
fwait
insl
mov
loop
aaa
mov
mov
push
xchg
mov
xchg
scas
aad
mov
ret
adc
mov
push
jae
adc
nop
and
xchg
cwtl
shrl
xchg
test
mul
and
test
sahf
and
in
push
jb
les
adc
lret
arpl
jp
mov
cmp
jecxz
cmpsl
test
hlt
frstor
fs
xor
xchg
test
ret
fs
mov
add
lahf
out
inc
push
cmp
loopne
or
pop
mov
xchg
insb
xor
sub
movl
xchg
cmpsl
adc
int
data16
cmp
cmp
inc
xchg
arpl
rol
xchg
mov
and
xor
popa
lods
cmp
test
imull
or
les
hlt
mov
inc
aas
adc
enter
mov
sub
xor
dec
cmp
jb
fcomps
cwtl
je
pop
sbb
cmp
shr
inc
sub
mov
jmp
int
test
pop
mov
jecxz
jo
ret
roll
es
ds
stc
rorb
gs
push
inc
jl
cmp
in
xor
lret
jle
push
cmp
stos
cmp
push
xor
cmp
push
cmc
push
dec
cmp
movsb
sub
mov
cmpsb
mov
jae
push
jno
orl
imul
or
ret
in
jb
and
mov
roll
ud2
ret
cmp
movsb
or
dec
ss
jg
stc
xchg
sub
dec
mov
or
sub
test
xor
les
and
lcall
mov
bound
xlat
repz
xor
lcall
push
mov
mov
enter
sub
or
out
addr16
pop
cmpsb
ja
clc
inc
int3
and
dec
movsb
or
mov
call
sbb
cmp
pop
or
adc
xor
adc
int
jecxz
add
jo
cmpsl
jo
loope
daa
out
sbb
imul
xchg
lea
stos
push
test
xchg
sahf
push
in
call
in
fwait
mov
xchg
lret
fcmovu
test
negl
insb
mov
jg
sub
inc
or
out
scas
or
in
jbe
into
sub
movsl
or
in
fwait
mov
push
call
add
je
sub
push
lcall
push
negl
adc
xchg
popa
jns
push
mov
call
jle
mov
xorl
rorl
fnstcw
mov
adc
push
sub
cmpsb
xlat
stos
mov
pop
imul
adc
inc
and
inc
andl
test
or
das
pop
fsubr
test
inc
pop
mov
aaa
add
mov
test
in
jne
js
sbb
jne
adc
mov
push
fisttps
leave
nop
hlt
cmp
addr16
stos
add
leave
xlat
mov
push
decb
lcall
rcrl
lods
inc
decb
movsl
mov
inc
mov
or
sahf
insb
sub
xor
stos
enter
jb
jecxz
rolb
shlb
xchg
ret
mov
out
mov
aam
mov
add
xchg
xchg
das
add
cld
fists
int3
rcrb
enter
rcll
sbb
dec
bound
sbb
lret
mov
mov
ffree
test
dec
lahf
mov
nop
mov
jns
adc
fildl
insl
inc
xchg
xor
cmp
push
lock
cwtl
std
xchg
jne
out
dec
insb
mov
push
ret
arpl
mov
sbb
je
or
insb
filds
aam
cmp
out
xchg
stos
test
repnz
or
cmp
int
loop
aas
test
movsl
xchg
xchg
popf
jge
rorl
repz
mov
sarb
mov
jl
inc
daa
cli
cmc
pop
leave
insl
inc
aas
pop
xchg
xchg
inc
repnz
enter
jl
pop
pop
pusha
repnz
xor
iret
pop
mov
iret
std
movsl
test
inc
inc
and
jecxz
scas
jnp
cmpsl
std
stos
insb
outsl
pop
arpl
lods
mov
jns
cmpsb
std
or
fcmovnb
mov
jno
xchg
sbb
mov
ljmp
cmp
mov
fcompl
enter
sbb
dec
lock
dec
jp
sbb
cwtl
cmc
cmp
repnz
fwait
push
jo
push
sahf
sub
jle
dec
stos
sbb
inc
mov
xchg
adc
push
cld
outsb
lods
fwait
cli
xchg
xor
add
imul
mov
test
dec
xor
cmp
icebp
pop
cmp
add
lcall
jb
pop
mov
loopne
xor
psubusw
jge
xor
dec
xlat
xchg
push
jbe
pushf
jbe
fsub
nop
in
pop
and
leave
xchg
push
mov
cmpl
mov
sbb
pop
mov
sub
insb
dec
jmp
adc
outsl
adcb
pop
push
adc
mov
out
cmc
movsb
sub
loope
inc
imul
das
and
mov
andb
out
mov
aas
ds
stc
cmp
imul
xor
daa
mov
std
lock
stos
daa
jne
pop
or
ds
or
mov
jae
inc
jp
ss
daa
adc
and
mov
dec
dec
mov
xor
jbe
es
mov
and
jecxz
mov
lahf
mov
cmp
movl
ss
or
mov
fmull
or
add
xchg
fists
add
sub
sti
ficoml
ud2
aaa
fcomip
mov
xchg
pop
sbb
mov
idivl
mulb
ffreep
jb
inc
lds
push
fnsave
fld
cmp
cwtl
jne
mov
popf
mov
ljmp
dec
jg
cmp
pop
jl
inc
adc
lods
inc
fisubl
xor
and
jmp
cmpsb
and
in
xor
jbe
out
inc
push
sub
inc
repz
out
pusha
int
xor
pop
fisubl
inc
into
fimull
push
cmp
cwtl
and
pop
cmp
lds
sbb
inc
mov
cmp
jns
aaa
sbbl
mov
mov
mov
cmpsb
das
daa
mov
fnstsw
frstor
aaa
xchg
in
pop
push
into
sti
push
fstps
cld
jl
adc
dec
mov
and
leave
xor
adc
cld
lds
cmpsl
and
cmc
pop
in
cs
add
lock
xchg
push
add
ja
repz
fsubl
in
dec
arpl
dec
scas
bound
lret
loopne
mov
out
mov
movsb
sbb
lds
and
mov
arpl
push
pop
std
out
mov
mov
lods
fsubl
or
fiadds
jns
fidivrl
add
mov
mov
int3
aaa
xchg
sbb
xchg
mov
ljmp
insb
ret
cmpsl
clc
js
sub
and
mov
pusha
sbb
mov
xor
mov
jecxz
inc
push
sarl
lcall
inc
mov
js
test
mov
add
test
sbb
jns
leave
xor
push
mov
into
inc
or
ss
sub
ret
mov
ljmp
pushf
outsl
jg,pn
out
jmp
add
lcall
movl
int3
jnp
lock
mov
xchg
fbld
xor
cmp
pop
out
sub
pop
outsl
or
xchg
mov
or
xor
pusha
cmp
and
push
sarb
sbb
and
loopne
pop
xchg
repz
sti
cli
add
test
int
jb
negb
mov
fcoml
inc
rcr
cld
cli
out
out
cli
imul
stos
clc
out
jbe
push
aam
pop
adc
dec
push
pop
jge
push
lcall
cli
cltd
out
jb
sti
cmpsb
sbb
lret
mov
scas
push
lcall
and
test
in
in
out
inc
outsl
es
popa
jg
pop
cmpsb
inc
mov
cli
jne
pop
mov
fwait
inc
adc
out
in
fcomi
in
ret
clc
movsl
xor
cmpl
pushf
push
xor
arpl
fimull
cmp
mov
pop
jg
ds
sub
and
aas
mov
cmp
sbb
decb
inc
in
add
dec
add
add
pushf
sub
insl
cmp
stos
push
adc
pusha
jb
push
inc
nop
nop
or
scas
inc
xchg
and
addb
ficoml
sbb
fstl
scas
es
adc
inc
cwtl
jnp
sbb
iret
jne
pop
das
int3
stc
xchg
ret
js
cli
popa
sbb
jnp
sarb
divl
ficoms
leave
xor
lods
pusha
mov
xchg
icebp
test
repz
or
sahf
mov
into
push
neg
fstps
loope
mov
adc
xchg
rolb
je
call
jmp
stos
adc
lahf
lods
sbb
imulb
mov
inc
mov
out
jnp
mov
adc
pop
mov
adc
push
add
xchg
lea
mov
dec
jl
hlt
sbb
cmc
jmp
sub
aad
sbb
out
testl
xchg
adc
push
in
test
jnp
xchg
pop
mov
jbe
mov
popa
cmp
mov
and
int
loopne
repz
loopne
dec
jl
push
sbb
test
jnp
lret
sar
cvttps2pi
add
push
ja
or
mov
dec
in
pop
dec
outsl
xor
xor
lods
fld
insl
mov
add
xlat
stos
jno
ret
pop
aaa
cltd
outsl
lret
and
xchg
fwait
hlt
add
dec
pop
cmp
fdivrs
mov
shl
stos
outsb
daa
hlt
add
stos
es
jns
aad
mov
mov
aad
std
mov
pop
test
mov
dec
jl
repnz
push
pop
gs
add
mov
lea
xchg
outsb
mov
jne
jge
or
ret
fisubl
fcoml
std
leave
mov
lret
dec
cmp
sub
jne
aad
sub
dec
sub
es
mov
in
fisubrs
out
scas
inc
cmp
shll
dec
adc
stc
loop
aaa
cmp
sahf
outsl
ret
inc
cmc
jnp
inc
pushf
aas
sbb
test
pop
jmp
adc
pop
or
pushf
decb
sub
cmc
mov
pop
mov
or
push
push
stc
arpl
lcall
adc
jne
xor
jnp
arpl
xor
aam
cld
in
sub
pop
mov
add
mov
add
jle
jo
dec
mov
fs
xchg
mov
out
popf
lcall
shrb
pop
outsb
jp
scas
cmp
scas
cmp
mulb
out
rcrb
push
into
jbe
jae
add
xchg
je
jae
call
add
aas
inc
clc
inc
xor
sbb
icebp
dec
inc
push
cs
dec
lds
int3
sbb
dec
mov
mov
mov
pop
push
adc
add
sbb
inc
cmp
pushf
sbb
xchg
adc
mov
jle
cld
cwtl
jmp
ds
idiv
and
fwait
push
mov
mov
inc
pop
jl
jnp
mov
add
outsl
mov
cld
jmp
sub
xchg
or
or
fsts
xor
jae
sbb
dec
jecxz
imul
loope
pop
mov
xor
fldt
cmc
shlb
and
bnd
addr16
pop
sub
gs
mov
fs
jl
pop
pop
leave
jnp
mov
xor
sti
gs
test
popf
outsb
arpl
mov
mov
fwait
lcall
pop
inc
popf
int
adc
dec
sbb
repnz
sbb
jp
add
adc
and
inc
sahf
adc
ror
push
pushl
adc
xor
mov
jns
adc
scas
movsl
push
xchg
and
inc
or
push
mov
cmc
loop
stos
out
lds
leave
in
cmp
movsl
pop
cltd
xchg
pusha
sub
add
pop
dec
mov
in
in
mov
into
push
imulb
mov
imul
adc
jmp
mov
movsl
negb
mov
push
out
dec
iret
out
pop
or
data16
incb
or
aaa
fdivrs
dec
dec
cli
cmpsl
add
or
test
jo
jae
loop
mov
sahf
push
cmp
and
les
xor
cmc
push
inc
xchg
jg
add
inc
mov
xchg
in
scas
shr
mov
inc
popf
sahf
and
test
pushl
in
fnstenv
jp
leave
loope
and
adc
push
rorl
dec
ljmp
xchg
lea
imul
xor
xchg
mov
mov
aad
out
push
dec
inc
push
mov
shufps
pop
ret
xchg
cwtl
jnp
dec
jmp
loope
lock
push
pusha
imul
js
pcmpgtw
push
andb
inc
push
fldenv
push
or
idivl
out
mov
pop
xchg
add
mov
push
hlt
and
lds
test
jo
inc
push
xchg
hlt
aas
inc
xchg
sti
ss
inc
mov
pop
mov
mov
rol
mov
dec
cmp
jge
fcoml
jbe
adc
mov
pop
jecxz
outsb
mov
daa
xchg
sbb
call
xor
sti
or
mov
jge
leave
pop
imul
jns
mov
adc
mov
inc
lret
push
jb
sub
bound
pop
push
mov
mov
push
sub
sbb
sub
nop
stc
sub
mov
and
and
sub
imulb
dec
jbe
imulb
xlat
dec
jge
pop
xor
mov
into
pop
imul
out
or
push
jne
jle
fs
cmp
push
fs
pop
dec
mov
out
pop
cmp
xchg
lcall
scas
mov
into
dec
aad
sbbb
mov
or
jb
jmp
sub
sahf
pop
adc
enter
scas
insl
xchg
or
push
jb
inc
popa
in
in
outsl
mov
jno
inc
scas
or
lcall
mov
pusha
divb
xchg
pop
mov
out
repnz
jge
or
dec
pop
sbb
xor
mov
enter
jmp
adc
cmp
push
call
push
inc
sbb
mov
fidivl
mov
sbb
sub
aaa
lea
mov
mov
movsl
lock
in
sbb
mov
or
sub
shll
inc
mov
and
wbinvd
das
push
nop
xlat
add
jne
mov
sbb
ss
and
inc
test
lock
pop
cld
mov
inc
xchg
lods
pop
sub
mov
popf
repnz
lds
inc
cwtl
inc
lret
imul
ljmp
clc
roll
mov
sub
loopne
xlat
subl
pop
jmp
xor
mov
int
push
cmc
nop
xchg
shlb
push
cmpsb
dec
or
or
and
test
call
or
imul
insl
mov
imul
fxch
repnz
sub
pop
add
add
repz
popa
sub
push
push
mov
leave
cmp
mov
jmp
sub
mov
sub
in
xchg
mov
loope
ss
lret
dec
ljmp
adc
aad
sub
cmp
in
push
cli
mov
or
sbb
push
cwtl
xchg
adc
aam
mov
lretw
inc
mov
xor
sbb
mov
std
mov
pop
loopne
ficoms
xlat
pop
orb
cmp
test
add
int
fwait
push
sbb
mov
loope
aaa
loopne
lock
outsl
mov
mov
jne
inc
adc
jge
push
sub
adc
adc
jge
lods
cld
push
addl
std
dec
xchg
mov
in
idivb
test
mov
adc
mov
negl
leave
add
sub
dec
imul
or
xor
fdivs
scas
or
mov
pusha
mov
sbb
pop
int
adc
arpl
sahf
lret
outsb
push
push
mov
std
jb
add
std
inc
aam
adc
cmc
jb
jmp
insl
dec
xchg
sbb
cmc
shlb
cmpsb
mov
xchg
mov
stos
popl
fsubrl
or
push
jne
lcall
inc
mov
mov
xchg
xor
cmpl
inc
lock
xchg
addb
and
imul
sub
mov
dec
mov
mov
cmc
sbb
xchg
inc
push
mov
cli
or
scas
sbb
daa
nop
sbb
hlt
repz
push
add
fstpt
loop
movsb
outsb
fsubrp
inc
jl
xor
mov
lea
cmp
push
adc
xchg
add
rep
add
int3
jno
mov
cld
loope
lock
push
smsw
pop
dec
das
mulb
iret
aad
push
sahf
int3
adc
popa
daa
mov
enter
mov
ljmp
fiaddl
leave
test
or
lea
ja
sbb
xor
pop
dec
cmp
mov
in
lret
or
cmpsb
inc
cmp
push
push
add
dec
push
pusha
movsb
mov
xor
lretw
je
mov
stos
rcr
outsl
cmpsb
cmp
dec
sbb
cmp
pop
pop
ret
add
leave
sub
imulb
cs
jns
or
or
adc
loope
das
mov
dec
push
mov
out
pop
cmp
cld
sbb
jae
mov
xchg
lcall
inc
pushf
icebp
ljmp
xor
push
xor
dec
and
adc
push
shrl
mov
fnstsw
xor
mov
and
test
ret
add
pop
dec
fsubs
mov
xor
aad
xor
pop
iret
xchg
dec
add
sub
xchg
inc
scas
or
dec
adc
push
scas
sbbb
popf
fs
test
cmpsb
or
sub
dec
fwait
add
mov
rorb
xchg
xchg
fldl
repnz
cmpsb
mov
xchg
lods
loope
sub
push
adcl
jb
mov
mov
or
add
lods
pop
adc
cmpb
cmp
ret
ret
push
cmc
add
push
adc
and
and
decb
dec
mov
cmp
cmp
push
aad
push
xorb
inc
jge
cli
cld
jbe
bound
aas
jns
and
mov
jg
dec
and
sub
dec
rclb
psllw
insb
lret
or
pop
jmp
and
lahf
mov
rorl
div
adc
ja
cmp
test
imul
lret
sbb
int3
rolb
ljmp
and
lcall
sbb
pop
insb
dec
push
mov
fwait
mov
std
dec
push
mov
loope
stos
add
mov
loop
and
mov
pop
sbb
scas
adc
xor
aas
mov
inc
mov
jnp
push
xor
push
sbb
arpl
std
lahf
add
aas
rcrb
in
lods
fidivl
and
inc
mov
popf
fwait
sub
fdivrl
lret
add
shll
add
in
and
adc
and
or
jmp
cmp
sbb
jp
sub
popa
outsl
xchg
icebp
mov
sbb
cmpsb
outsl
mov
xchg
stos
movsb
pop
pop
sub
out
mov
enter
jo
push
jns
add
test
or
add
mov
cmpsb
loopne
in
mov
pusha
rorl
or
xor
mov
popl
loopne
je
xchg
dec
stos
mov
pop
cmp
adc
sbb
test
xorl
aaa
mov
les
cli
push
rcrl
mov
adc
xor
in
out
pop
dec
xchg
lock
movsb
add
popf
xor
and
add
repz
dec
dec
ljmp
and
test
lret
mov
mov
mov
xchg
call
adcb
test
mov
add
mov
das
xchg
fidivrs
lahf
scas
mov
jle
add
js
sub
jge
sbb
das
test
imul
in
cs
aam
stos
gs
mov
in
iret
cmp
inc
movsl
cmp
in
movsl
cmp
cmp
mov
fadds
mov
subl
mov
jae
adc
xor
hlt
scas
aad
mov
movb
mov
pop
icebp
sarb
ret
jp
lret
xchg
outsb
jo
popa
sbb
jp
jo
lea
in
js
movsb
mov
mov
fnstsw
xchg
sub
pop
cs
sti
repz
xchg
xchg
fnstenv
mov
adc
push
call
pop
and
inc
cmp
data16
mov
cmp
pop
aaa
insb
or
jecxz
pushf
jmp
shrl
imul
push
adc
icebp
repnz
push
dec
push
hlt
shr
fcomi
mov
sub
jecxz
mov
fbstp
jnp
popa
dec
pop
mov
pop
jp
jecxz
dec
loopne
xchg
lret
dec
test
loop
push
in
pop
insl
push
ss
test
and
popf
lock
jno
vpminub
scas
push
dec
xlat
mov
in
data16
jae
test
nop
xor
test
xor
adc
xor
xor
push
cmpsb
push
scas
int3
adc
bound
aaa
push
gs
adc
es
push
ja
ds
mov
fisubl
xchg
xor
sub
outsb
push
push
test
std
adc
lods
hlt
push
mov
mov
mov
mov
mov
jne
imul
inc
mov
arpl
or
aad
jmp
cmpsb
fnstcw
xlat
mov
inc
ss
lds
in
adc
pop
pusha
out
movswl
pop
out
lods
xor
mov
mov
xchg
push
jno
push
xchg
pop
dec
hlt
lret
add
pop
ret
jg
sti
push
lea
jg
pop
rcrb
rolb
sbb
sbb
pushf
mov
sub
inc
in
xchg
xchg
es
mov
sub
lds
outsb
mov
test
scas
jne
rcll
stos
movsb
adc
dec
and
and
sbb
arpl
jmp
or
pop
shrl
lea
inc
fisubl
mov
aad
pop
cmpsb
ds
popf
adc
pop
inc
test
and
cmp
sbb
adc
mov
jo
jo
dec
movsl
shll
sbb
pushf
and
sub
push
fistps
mov
js
lock
add
and
jl
mov
outsl
or
sub
dec
cld
cmp
in
iret
int
sarl
fidivrs
xchg
es
aaa
out
repz
fadds
add
scas
push
inc
testb
cli
mov
lds
mov
sub
cmc
push
xor
sub
clc
lds
int
adc
imul
insb
push
and
sahf
loop
pushf
sub
xor
mov
cltd
and
add
add
ret
sbb
and
inc
call
jl
add
push
dec
jge
lret
jl
cmp
cmp
mov
cltd
xchg
fwait
mov
pop
xlat
pop
sub
adc
pop
pop
sub
mov
insb
in
bound
scas
add
mov
inc
clc
add
movsl
xor
xlat
pop
xchg
cmp
ss
fucomi
aad
push
test
int
stos
sahf
xchg
xchg
repnz
jmp
or
mov
mov
pop
inc
aas
pop
inc
inc
sti
enter
insl
stc
sti
add
in
iret
pop
loopne
imul
inc
in
outsl
adc
sub
fwait
mov
scas
les
in
sbb
inc
pop
int
cld
rcr
mov
mov
cmpb
das
xor
rcl
and
xchg
pop
xchg
sbb
scas
pop
int3
aam
jnp
leave
and
stc
fsubr
and
fnstenv
pushf
push
rclb
outsl
xor
xor
imul
loopne
jmp
aaa
add
sahf
or
mov
call
cmp
adc
lret
dec
xor
pop
mov
and
xor
lcall
je
or
ja
cmp
js
mov
inc
xor
or
and
negb
push
fwait
mov
gs
xchg
aam
dec
mov
mov
pop
and
outsb
pop
ja
cmp
xchg
pushf
ficompl
adc
dec
cmp
lock
jno
mov
dec
icebp
in
popf
arpl
pop
cmp
mov
jmp
stc
lods
es
shlb
in
clc
shrb
cmp
scas
in
and
or
clc
in
dec
loopne
xchg
xor
mov
sbb
repz
inc
mov
sarb
aad
out
cmp
lds
notl
movsb
jg
inc
push
dec
pop
add
shr
sahf
daa
hlt
pop
movsl
xor
mov
and
push
xor
mov
jg
mov
mov
inc
cmp
mov
push
jb
or
cli
xor
jmp
lret
mov
cmp
add
daa
hlt
sub
inc
daa
and
mov
jae
mov
jae
mov
push
jno
lahf
cmp
loop
data16
xlat
mov
pop
inc
or
push
rorl
subb
mov
dec
enter
mov
sub
fs
insl
or
in
sbb
mov
inc
aaa
lods
lea
add
xorl
scas
test
push
mov
or
fcomps
push
ret
cmp
mov
rorl
cmp
xchg
stos
sub
nop
outsb
ret
ret
jl
adc
gs
or
xor
mov
int3
cmp
inc
cwtl
xor
das
cmpsb
loopne
pop
in
and
imul
sbb
mov
sub
scas
jae
aam
filds
flds
cmp
mov
imul
repz
inc
cmpsb
cwtl
mov
pop
fwait
loopne
int
test
dec
aam
jg
lock
sub
and
jo
out
enter
jae
jne
fcomip
adc
lret
xor
or
or
xchg
aam
cmp
dec
jne
push
jo
testl
arpl
aad
push
adc
lcall
push
sarb
test
std
aad
imul
xor
into
mov
adc
or
pop
mov
or
or
xor
inc
daa
fs
jmp
std
lea
xchg
cmp
pop
push
jno
fdivrl
negl
in
dec
mov
inc
push
mov
push
adc
dec
aas
dec
push
outsb
sarb
ds
popf
out
pop
divl
repz
adc
jo
mov
jo
scas
jp
xor
xchg
call
xchg
addr16
push
jl
fwait
xor
xchg
add
div
pop
sub
xcrypt-cfb
and
mov
idivb
cmp
lods
and
jge
fisttpl
mov
fs
xor
cmp
outsl
pop
imul
stos
fwait
jmp
cmpsb
ret
sbb
lahf
pop
mov
jecxz
test
sbb
insl
inc
shr
adc
cmp
lahf
xchg
fs
aad
imul
sbbl
push
jae
scas
insl
pop
call
push
leave
pop
inc
push
jno
pop
xchg
test
call
outsl
jg
sub
sarl
pop
scas
inc
ss
xchg
sbb
repz
pop
inc
jl
fistl
mov
in
int
inc
sbb
sub
or
insb
adc
cltd
inc
sub
xchg
add
dec
sub
mov
int3
shr
push
sbb
jp
cli
add
mov
scas
cmpsb
inc
mov
insb
js
sub
popa
xor
insb
jne
mov
mov
xlat
inc
pop
mov
pop
mov
jg
sahf
ficoms
lods
int3
mov
xor
lods
push
mov
mov
and
jnp
mov
out
mov
mov
mov
cmp
xchg
imul
les
addr16
pop
scas
mov
cmp
jmp
test
sarl
dec
out
lret
xchg
xor
adc
and
push
shll
mov
aad
pop
cmp
add
hlt
jg
push
loopne
jo
jne
out
mov
cmp
mov
jae,pt
cld
xchg
lods
filds
sbb
adc
pop
clc
or
cmpb
pop
inc
ds
icebp
dec
outsl
adc
pop
aad
push
loop
cmpsl
dec
mov
xor
sub
icebp
aaa
dec
and
lods
sbb
cwtl
xchg
je
test
push
stc
or
test
fnsave
loop
and
xchg
test
sbb
mov
add
mov
jb
andb
or
mov
ffreep
movsb
leave
pop
scas
insl
jns
mov
aaa
fnsave
push
mov
cmpsb
mov
inc
pop
paddq
cmp
ds
sbb
add
sub
push
es
arpl
std
shrl
mov
cmp
dec
xor
ljmp
pop
insl
fistl
mov
inc
nop
pop
daa
add
arpl
addl
sahf
je
out
mov
pop
mov
pop
cmp
imul
clc
aas
mov
jne
sbb
pop
outsl
cmpsl
mov
movsl
pop
pop
jbe
test
mov
icebp
push
sub
daa
rorl
sub
loope
repz
or
aad
add
scas
mov
jl
outsb
les
fmul
cmpsb
int
jp
and
gs
rcll
int3
int
push
lahf
out
scas
jg
mov
out
push
mov
cwtl
or
pushf
lcall
pop
or
arpl
mov
scas
cmpsb
adc
pop
sub
inc
jns
sbb
mov
lea
pop
movb
fcmove
sub
mov
pop
xor
lahf
ss
pushf
xchg
repnz
xchg
outsb
jae
movb
dec
add
xor
enter
shll
mov
fwait
push
xchg
test
rol
js
dec
push
xchg
add
add
ror
orl
pop
sbb
cmpsl
inc
adc
int3
jno
pop
jl
mov
aad
pushf
ja
mov
pop
mov
lea
into
or
rorb
dec
ret
fisttpll
int
pusha
sub
lcall
cmp
cltd
pop
out
mov
or
lret
call
in
out
pushf
dec
jns
scas
in
dec
stos
jle
xchg
or
mov
icebp
mov
sbbb
movb
loopne
cltd
or
sbb
mov
cmp
sub
jmp
mov
push
mov
mov
adc
jb
ret
rorl
pop
mov
sbb
call
scas
sarb
inc
mov
pop
pop
dec
fisubrs
xchg
xchg
clc
mov
add
rorl
xchg
mov
or
cld
add
sbb
dec
add
adc
push
xchg
jg
ljmp
mov
pushf
mov
mov
loope
test
push
pop
mov
and
orb
sub
jecxz
push
sahf
fwait
mov
xchg
out
mov
enter
lock
jae
jns
scas
dec
loopne
jmp
and
cmp
pushf
imul
push
mov
dec
fidivs
enter
lret
mov
add
jp
into
jp
jnp
jg
add
and
mov
mov
jle
aaa
fcmovb
popa
push
out
dec
and
adc
out
sbb
pushf
sti
stc
sub
sahf
ljmp
mov
bound
push
dec
pop
xor
test
inc
icebp
test
adc
popf
mov
dec
jg
mov
push
insl
dec
sti
sbb
xchg
cmp
mov
lds
cli
cmp
pop
ret
outsb
or
in
push
mov
in
jb
xchg
xchg
and
rolb
aam
out
aaa
xlat
ljmp
sbb
push
jg
cmpl
jne
js
mov
sti
jle
sbbb
jbe
cmpsl
or
fstpl
jbe
movsl
clc
das
mov
lea
pusha
adc
cld
and
xor
push
loop
push
cmp
jo
ljmp
pusha
push
sbb
ja
inc
mov
movsb
dec
popa
xchg
lret
xlat
test
push
xchg
loopne
cmp
push
adc
imul
xor
test
push
sub
jle
call
pop
js
xchg
mov
cmpsb
dec
pop
or
hlt
jl
push
cltd
lea
mov
xchg
je
cmc
and
xchg
sbb
repz
push
push
and
hlt
mov
jp
subb
lret
out
adc
or
lret
aam
push
idivl
pop
adc
push
sub
jb
inc
loopne
sub
fcmovnu
ja
cmpb
lcall
or
cmp
arpl
jo
push
pop
sti
jmp
push
cwtl
loope
adc
cmp
negl
and
xchg
ds
rep
not
ficomps
xor
push
inc
gs
and
fsubr
push
cltd
lock
es
jecxz
add
hlt
int3
dec
lock
int3
pop
push
adc
aaa
push
aaa
hlt
xchg
mov
fisttpll
mov
call
loop
or
jmp
sub
rorb
dec
mov
mov
pop
sub
dec
mov
inc
jmp
mov
cmp
daa
test
sbb
out
push
aas
mov
add
pop
sub
cmpsb
and
dec
mov
pop
and
int
mov
xchg
mov
ds
lret
fwait
mov
lock
mov
mov
lds
jns
test
inc
das
pop
int
inc
jle
jbe
pop
rol
sbbb
push
std
sub
mov
stos
ja
add
testl
aaa
dec
int3
out
inc
pop
adc
pop
dec
into
scas
and
fcomi
mov
mov
dec
sub
inc
mov
ljmp
aaa
or
enter
xlat
inc
loop
push
sub
setl
mov
cmp
sbb
sub
push
dec
jge
dec
out
insb
shl
and
xchg
daa
lret
mov
inc
xchg
out
and
ljmp
fisttps
mov
cltd
std
jns
inc
push
xchg
loopne
push
cmc
cltd
ficoml
push
cld
mov
dec
js
clc
idivb
daa
sbb
aas
shrd
stos
mov
pop
dec
int
inc
inc
jmp
jmp
iret
sub
icebp
cmp
ljmp
hlt
es
dec
dec
mov
cltd
push
add
mov
jg
jns
jp
sti
fldcw
or
mov
lods
xchg
mov
inc
outsb
in
aas
dec
dec
dec
mov
cmp
stc
out
rorb
push
jge
add
sahf
xchg
nop
outsl
pop
xchg
daa
sub
xor
pop
xchg
addr16
cmp
or
inc
rcrl
xor
push
inc
mov
loope
mov
mov
jecxz
pop
movsb
popa
cmp
shl
lret
sub
sti
out
fcomps
or
dec
outsb
adc
aam
cwtl
loop
rorb
cmpsb
test
sub
sbb
push
popa
mov
fucomp
dec
adc
cwtl
cmc
mov
lret
xor
data16
mov
std
sbb
pop
and
in
test
fwait
imul
push
adc
leave
add
pop
push
sbb
mov
xor
pop
out
dec
push
pop
jle
jge
hlt
in
out
aas
loopne
xchg
adc
or
inc
adc
pushf
xchg
enter
pop
cmp
fistl
dec
sbb
push
in
mov
aad
int
cmp
std
dec
lcall
xchg
leave
subl
cmp
and
cli
sbb
sbb
push
push
inc
pop
cwtl
ss
cmp
outsb
pop
mov
data16
ss
stos
add
leave
cmp
xor
int
jp
mov
aad
fnstcw
fstl
neg
iret
call
int3
xchg
pop
cld
sub
mov
inc
inc
pop
inc
leave
push
xchg
in
adc
mov
xor
sub
enter
jge
fildl
xchg
inc
sbb
scas
inc
fucomip
insl
add
test
xchg
mov
push
dec
mov
jo
adc
sbb
mov
cmp
pop
pop
dec
xor
rol
mov
xor
xchg
push
fisttpl
lret
push
mov
inc
jae
addb
dec
or
pop
and
popf
pop
lret
push
daa
mov
cmp
and
inc
mov
xchg
cmp
popf
push
ja
fmulp
scas
lahf
or
adc
and
xor
xorl
inc
pop
mov
inc
push
and
pop
or
adc
push
push
insl
mov
test
pop
mov
in
xchg
outsb
push
inc
mov
push
popf
dec
xor
vshufps
aam
jmp
inc
arpl
insb
cmp
mov
push
ret
cmp
sbb
or
fidivs
nop
push
cmp
ficoms
loope
je
hlt
out
test
testb
std
push
inc
ja
inc
mull
divl
decl
test
add
ret
jle
cli
sub
pop
dec
xchg
push
jnp
out
leave
sbb
dec
adcb
repz
insb
aas
xchg
repz
imul
mov
adc
xchg
shr
iret
icebp
sub
jne
or
xorb
xlat
dec
inc
loope
sarb
mov
adc
xor
mov
lods
push
jg
int
mov
or
cmpsl
pop
xchg
ljmp
int3
aaa
mov
pop
xor
pop
mov
aas
scas
and
test
dec
ja
aam
jae
pusha
xor
enter
push
mov
xchg
icebp
or
imul
xchg
xchg
adc
data16
pop
cmpb
mov
ljmp
and
sbb
jo
lea
jp
inc
cwtl
xor
xchg
pop
fistpll
testl
adc
or
cmc
insb
pop
daa
pop
shrb
fmuls
lret
lods
pop
xlat
rclb
lea
repnz
mov
mov
mov
or
push
sub
jmp
adc
shlb
cwtl
dec
lds
incb
lock
mov
fsubrs
lahf
das
mov
mul
in
jno
pop
subl
inc
xor
int3
jg
jne
and
loop
lods
pop
add
dec
adc
xor
repz
ffreep
push
mov
pop
loopne
push
adc
jmp
mov
and
xor
add
addr16
fcompl
out
stos
scas
cli
js
inc
ss
mov
insw
cld
xor
enter
xchg
mov
cmp
adc
jne
push
pop
mov
rol
test
jno
imul
jg
daa
and
xchg
and
js
in
or
xorl
push
outsb
popf
iret
xor
hlt
xchg
loopne
sub
xchg
jmp
sbb
pop
lcall
lds
enter
mov
jmp
jecxz
popa
jge
fwait
lds
movhlps
mov
cli
push
adc
adc
cmpsl
int
adc
pop
jmp
or
cmp
push
lods
ficomps
mov
sub
addr16
add
aas
cld
pop
xchg
mov
in
sub
lret
sub
or
inc
sti
pop
out
in
sub
add
mov
add
sti
adc
push
jo
icebp
lock
sub
jg
daa
roll
sahf
in
xlat
mov
daa
cmpsb
or
jp
test
clc
cmp
int3
leave
push
push
mov
or
bnd
dec
jns
push
pop
jge
out
into
mov
or
repnz
test
dec
mov
ss
insb
popa
jg
int
or
mov
add
pop
pop
xor
xlat
jno
cmp
loope
pusha
inc
dec
jp
pop
mov
stc
push
sbb
sbb
sbb
cltd
sti
or
in
pushf
dec
dec
pop
loope
sbb
cld
cmpsl
cmp
inc
test
sbb
cltd
or
sbb
push
fisttps
loopne
mov
aas
bound
sarl
pop
dec
push
mov
test
and
nop
or
push
xchg
repz
and
jp
push
iret
lea
fsts
dec
jmp
lahf
push
jbe
enter
aaa
push
cltd
mov
pop
outsl
pop
test
pop
les
jne
loop
mov
mov
xchg
xor
xor
testl
pop
adc
lods
fimull
cmp
push
mov
jl
cmp
mov
fadds
daa
push
xchg
adc
jle
hlt
jne
into
lock
flds
testb
notb
cmp
fwait
sbb
out
pop
ljmp
add
and
mov
test
into
scas
mov
jne
pop
mov
js
fincstp
out
addl
dec
loope
je,pt
cli
mov
std
sbb
xchg
pop
jg
dec
fs
pop
mov
ficomps
out
jmp
pop
sub
clc
les
cmp
vdivss
ja
stc
adc
adc
mov
pop
loope
cmpsb
rorb
popf
xchg
insl
mov
xchg
xor
cmpsb
and
lcall
adc
pop
add
cvtpi2ps
shl
xchg
clc
es
mov
je
jl
inc
fsubl
ljmp
idivl
xchg
sbb
xor
out
pop
in
push
lcall
bound
shll
ficomps
add
inc
addr16
cmpb
jne
sbb
adc
pop
inc
xchg
mov
pop
sbb
cmp
shl
stc
ret
fimuls
mov
cmpl
inc
cmp
mov
sub
jae
mov
popa
sbb
mulb
loopne
int3
in
dec
mov
cmpsl
cmp
aas
sub
lock
pop
call
or
pop
movb
jle
pop
jecxz
xor
stos
jo
xor
adc
ret
imul
dec
rorl
xchg
cltd
push
loopne
popa
mov
lods
push
push
shlb
out
lret
push
cs
mov
add
push
shl
sarb
and
stos
jnp
and
pop
outsl
cmpsl
and
sahf
dec
rclb
xor
in
and
xor
xor
dec
or
das
lahf
pop
cli
jl
lret
sbb
pop
jns
pop
out
je
mov
sbb
jg
mov
mov
mov
mov
add
xchg
sub
sbb
mov
test
jp
iret
dec
xor
aaa
int3
add
pop
cmpsb
out
sti
mov
pusha
push
outsl
fmull
in
cwtl
add
insb
push
sar
pusha
test
sarl
dec
mov
popa
jno
popa
std
push
cmc
adc
repz
push
insb
rorb
andl
push
inc
add
nop
imul
mov
pop
mov
fcmovu
pop
das
mov
and
lahf
imul
add
out
cwtl
fxch
cmc
insl
aaa
or
lret
or
loope
adc
xor
inc
repz
stc
int3
ret
adc
jge
dec
ror
fmull
lea
ret
repnz
pop
jb
sub
popf
mov
loop
inc
pop
sub
mov
andb
int3
repz
not
xorb
push
outsl
mov
sub
inc
mov
ret
xchg
xor
test
pop
push
jmp
or
mov
inc
shlb
cltd
dec
inc
fistps
inc
xchg
aas
xchg
popf
push
aas
mov
pop
icebp
xchg
sub
mov
xchg
sub
or
bnd
cs
push
popf
cmp
xchg
mov
dec
dec
and
insb
dec
and
or
push
out
xchg
push
fadds
movsb
leave
or
cwtl
push
add
jg
push
flds
push
xadd
add
sub
sbb
or
and
jecxz
adc
daa
cmc
pop
cmp
scas
dec
cmp
cmp
stos
loopne
and
push
andb
xchg
movsl
add
mov
inc
push
int
cmp
jbe
out
sub
stos
jb
push
and
leave
pusha
xchg
add
or
in
scas
cmpsl
test
add
jle
and
push
arpl
int3
sbb
sub
fwait
push
inc
enter
mov
lods
pop
int3
cmp
push
mov
adc
push
push
inc
fneni(8087
subb
inc
xor
and
inc
dec
xchg
pop
xchg
mov
shlb
rorl
jecxz
jl
mov
dec
inc
jbe
xor
inc
iret
and
out
aas
int
add
fwait
inc
jae
cmpsl
or
sbb
or
lcall
inc
in
mov
jg
xchg
inc
xlat
mov
pop
fidivrl
aaa
dec
jl
outsb
lods
sbb
pop
mov
sbb
lahf
movsl
dec
or
jmp
lahf
or
scas
push
xor
sti
stos
fisubrs
mov
xorb
mov
scas
mov
jle
stc
cltd
shrl
outsb
mov
hlt
clc
push
and
mov
repz
jl
sbb
add
bnd
cmpsb
push
xor
arpl
stos
adc
ret
mov
arpl
xor
adc
adc
pop
in
mov
mov
pop
rcrb
inc
jl
jne
ficoml
jae
sbb
pop
sub
cltd
fnsave
add
push
fcomip
ffree
jo
pop
outsl
sarb
sub
ja
cmpb
xor
mov
int3
imul
add
dec
inc
lahf
push
shll
mov
sub
shl
inc
rcrl
push
sbb
cwtl
negb
push
nop
add
in
aam
movsb
add
xor
mov
xor
and
mov
int
rclb
push
out
ja
xchg
push
xlat
mov
iret
add
mov
and
ret
ror
jbe
pushf
popa
sub
fst
stc
adc
xor
pcmpgtb
pop
cmc
or
popa
imul
adc
dec
sub
mov
push
push
in
outsb
cmc
pop
into
lods
dec
xorb
cmc
iret
push
xchg
mov
cmc
push
mov
lods
mov
dec
cmp
sub
inc
fwait
add
cmpsl
push
repz
jno
mov
cmp
sbb
idivb
cld
mov
sbbl
dec
cmc
push
stos
mov
out
out
in
xchg
shlb
push
popa
push
stos
jne
sbb
aad
inc
mov
jmp
adc
jp
clc
js
mov
in
lock
jne
sub
gs
adc
out
jns
push
shl
pop
addr16
sbb
xor
insl
insl
mov
nop
inc
lock
mov
leave
loope
les
ljmp
sbb
mov
sub
movsl
xchg
ret
xchg
mov
cmp
loop
or
inc
popf
or
mov
test
loope
subb
cld
and
push
push
or
aad
dec
fcoml
imul
adc
enter
imul
cli
imul
shlb
test
add
out
testl
push
jge
sbb
mov
xchg
add
cmp
push
popaw
or
jbe
xor
push
scas
sbb
mov
or
into
in
xchg
add
movb
push
cltd
jge
cmpsl
hlt
sub
mov
cltd
ficompl
in
or
loopne
jecxz
ja
popa
and
dec
cli
aas
xor
cmpsb
stos
fcompl
push
es
call
pop
mov
rcrl
mov
in
pop
sbb
sbb
imul
pop
outsb
stc
push
repz
adc
stos
and
xor
pop
test
popa
fisubs
iret
inc
gs
imulb
inc
sub
push
inc
or
cmpsb
icebp
pushf
testb
rcrb
iret
sahf
push
decl
int
roll
mov
insb
decb
push
int3
lods
mov
jbe
mov
bound
sbb
add
in
add
repnz
jo
out
add
xor
mov
gs
fwait
and
sbb
push
sbb
jmp
push
in
dec
pop
xchg
and
xchg
mov
out
std
sbb
and
loopne
lock
repnz
pop
mov
out
lds
stos
lret
push
and
test
lretw
pop
rcll
jecxz
cmp
lret
cmpsb
ss
cmp
cmp
sbb
pop
sbb
cmp
push
dec
lods
inc
mov
xchg
ljmp
aam
pusha
jne
out
out
cmp
mov
cltd
inc
xchg
rcrb
addr16
je
lea
lea
push
subl
lock
mov
popf
add
xchg
shlb
shll
inc
cld
or
adc
es
push
das
lret
aad
fisttpl
cmp
mov
jle
mov
aas
sbb
cmp
push
pop
sbb
add
daa
movsl
mov
mov
pop
test
out
inc
or
insb
pop
push
and
js
xchg
jecxz
lds
sub
mov
sub
dec
mov
packssdw
inc
add
or
ror
in
jb
mov
pop
mov
in
push
or
lret
or
jae
lds
pop
cmp
repz
mov
mov
xlat
sbb
fwait
mov
js
lea
mov
mov
fldt
adc
test
test
aaa
mov
pop
mov
lods
int3
out
mov
pusha
shll
les
sub
loopnew
pop
cmp
lret
jne
add
fcoml
cmp
shll
xchg
arpl
mov
in
ja
in
add
lcall
jmp
or
xor
mov
pop
mov
lock
outsl
adc
push
movsl
repnz
lret
or
leave
jae
cmp
out
outsb
add
gs
dec
cmp
cmpsl
jbe
push
mov
insb
cmp
dec
pop
or
jle
lods
dec
dec
mov
jp
je
xchg
iret
or
xchg
adc
push
das
sbb
js
pop
mov
inc
gs
imul
push
je
cld
mov
ja
pop
mov
mov
js
clc
mov
and
in
push
cmpsl
add
lret
jmp
jle
outsb
pop
push
int
jle
jp
inc
lret
push
dec
adcl
and
pop
adc
les
sub
cwtl
and
push
jp
cltd
pop
mov
push
enter
jb
shlb
add
xchg
xchg
mov
stos
xchg
pop
xchg
into
push
cli
jmp
out
leave
dec
or
mov
repz
mov
dec
std
scas
push
push
add
leave
sub
sub
popf
mov
xchg
cld
add
xor
ds
cmp
inc
movsl
test
loope
sti
nop
add
fwait
xor
aas
or
push
repz
sub
fimull
dec
cmp
xchg
into
xorb
jmp
xor
xchg
mov
scas
sbb
into
or
call
xor
dec
jbe
sub
mov
jne
add
and
int3
sbb
pop
jae
xchg
add
popa
inc
lods
sti
xor
jmp
fmul
sub
out
loopne
and
cld
cmp
adcl
cmp
xor
adc
lock
into
xchg
push
inc
cmp
enter
and
push
ret
movsb
cwtl
sub
test
adc
das
fidivrl
sti
jns
popl
xchg
xor
out
inc
popf
or
call
or
adc
pop
data16
fildll
and
mul
xchg
and
addr16
jae
and
idivb
filds
rolb
inc
xchg
ror
cmp
jo
dec
mov
fildll
imul
mov
push
in
loopne
sahf
sub
adc
dec
iret
adcb
xor
mov
xchg
into
pop
cmpsb
pushf
movsl
inc
jbe
in
push
adc
dec
sub
das
jo
add
mov
movsl
ret
in
sbb
icebp
cli
or
pop
pusha
sub
pop
mov
daa
fwait
sub
and
cltd
sub
nop
dec
mov
dec
xchg
push
inc
jae
cld
or
mov
fwait
jge
mov
stos
pop
cmpsb
mov
mov
int3
dec
loopne
inc
cmp
push
mov
jno
mov
fidivrs
inc
daa
out
js
xor
bound
inc
sub
mov
push
and
pushl
packsswb
lods
dec
int
and
push
inc
pop
aaa
mov
insb
ja
pop
jmp
xchg
popf
dec
xchg
jp
in
inc
mov
xor
inc
xchg
and
testl
add
outsl
lahf
outsb
sbb
add
outsl
sub
test
mov
int
sarl
lds
push
sub
inc
and
cmc
jge
add
inc
xchg
lods
ja
mov
pop
into
sbb
inc
inc
xor
inc
mov
in
cmp
inc
fsub
addr16
sbb
gs
cmpsl
out
lahf
aas
stc
jmp
xor
cli
fidivrs
pop
push
jne
mov
lock
sub
pop
pop
pushf
outsl
dec
mov
push
lret
mov
repz
popf
shrl
inc
loope,pn
push
xorb
xor
std
cmp
test
mov
lods
bound
in
test
sbb
sarb
pop
add
pop
pop
jle
push
push
jle
jg
icebp
push
sbb
mov
in
pop
mov
xchg
ficompl
sarl
jecxz
or
sub
outsb
sbb
arpl
dec
or
push
std
movsb
jno
mov
push
mov
imul
addr16
sub
test
push
mov
jbe
out
cwtl
inc
stos
or
fadd
push
ljmp
mov
mov
dec
clc
ljmp
mov
inc
fnstcw
pop
es
sbb
cltd
cmp
push
bound
mov
sbbl
test
cmp
cli
test
scas
mov
ficompl
and
stos
mov
adc
cmp
cmp
mov
lret
cltd
pop
and
jmp
fistps
shrl
mov
fs
jne
add
xchg
jnp
push
repnz
sbb
orb
mov
or
hlt
ljmp
cld
lods
int
jecxz
shll
fcmove
fisttpll
int
sbb
scas
imul
ret
bound
pop
les
cmpsb
or
mov
and
clc
enter
or
mulb
add
rorl
sbb
adc
int
popf
lock
cli
mov
ja
cmp
adc
les
adc
fwait
pusha
aas
sbb
bound
loopne
adc
mov
push
std
bound
rolb
and
aaa
aas
dec
std
adc
inc
adc
mov
nop
inc
push
mov
jbe
cli
mov
and
xor
shlb
dec
sub
mov
fldl
xor
repnz
or
xor
hlt
leave
ret
faddl
pop
jle
dec
push
mov
lcall
sbb
xor
pusha
insl
dec
adc
mov
mov
push
dec
test
ret
mov
cmp
xor
mov
dec
xor
pop
jle
rol
push
dec
mov
mov
pop
fcomip
xor
jecxz
test
in
push
adc
scas
aad
push
or
daa
pop
ljmp
mov
add
mov
add
cmp
pop
ljmp
movsl
gs
fildll
pop
lcall
mov
push
in
repnz
scas
add
pop
jne
mov
test
add
mov
enter
jbe
sub
xor
inc
add
jnp
aas
inc
sbb
mov
ret
add
jo
nop
sub
fwait
es
mov
jecxz
gs
imul
pop
inc
loope
dec
mov
lret
mov
adc
sub
divb
int3
sub
out
cmc
adc
mov
xchg
push
pop
mov
iret
fdivl
cmp
sbb
pop
jg
jl
dec
into
cmc
dec
xor
sub
and
xchg
inc
movsl
roll
or
aas
out
js
mov
pop
rcll
lgs
inc
or
sub
jno
jecxz
add
cmpl
pop
jl
push
ds
adc
sti
sbb
push
jno
inc
les
sahf
cmp
push
mov
sub
add
or
and
js
gs
xor
inc
movsb
rorl
and
call
jno
clc
jg
cli
outsl
icebp
cmp
sbb
pop
jl
cmp
bound
mov
cmp
stc
aas
cmp
mov
setb
dec
out
dec
push
jb
lahf
pop
stos
fbstp
cmp
scas
adc
fdivrs
scas
cmpsl
std
flds
in
dec
mov
popf
xor
add
in
xchg
fs
mov
adc
mov
push
mov
pop
popa
push
pop
cli
jg
dec
push
lock
add
jp
bound
cmp
jmp
push
int
pop
and
movsl
jg
inc
mov
cmp
adc
call
aas
into
xchg
clc
out
sub
push
cmpl
mov
jmp
push
ror
ljmp
movsl
test
jge
mov
cmp
mov
bound
or
add
pusha
lcall
dec
idivb
xchg
push
sbb
sahf
add
sbb
fdivs
push
pop
int3
push
enter
inc
lcall
cmp
or
sub
push
dec
dec
repnz
jo
dec
cmp
xchg
pop
call
scas
pop
adc
bound
lea
cli
inc
scas
push
or
and
push
mov
mov
xchg
cmpb
mov
or
sbb
gs
xor
repz
xor
test
push
lret
mov
fadds
stos
cmp
mov
loope
lret
xchg
loope
push
xchg
call
nop
inc
fwait
add
aaa
cmp
mov
sub
and
sbb
ja
call
mov
mov
inc
movsb
movsb
ds
ds
push
lret
das
sarb
pop
sub
xchg
in
sub
jecxz
mov
adc
and
insl
xchg
jne
jnp
pop
xchg
and
scas
mov
loope
lods
cld
jo
imul
or
xchg
frstor
loop
cmp
std
std
divb
loop
scas
inc
faddp
pop
sarb
scas
inc
pop
mov
or
filds
rcl
sbbl
les
adc
mov
les
icebp
xor
pop
push
orb
cmp
notl
shll
xor
inc
les
in
lahf
add
loope
addr16
movsb
mov
mov
mov
jne
push
lcall
mov
push
out
scas
xor
fs
and
adc
jl
add
jge,pn
cmp
movsb
sub
gs
add
mov
addr16
cmp
fprem
sbb
jp
mov
cmpsb
scas
jne
mov
movsl
fnstcw
mov
dec
mov
jns
pushf
mov
xor
push
pop
insl
mov
in
xchg
in
ss
dec
push
fcoml
pushf
mov
and
mov
cmpb
nop
psraw
dec
out
fildl
inc
lock
pop
jmp
subb
push
sbb
popa
ja
jae
mov
inc
cs
pushf
sub
jg
lods
adc
mov
sahf
bound
insl
cmp
ret
roll
test
frstor
jle
sub
test
dec
minps
bound
mov
add
xchg
leave
rcrl
aaa
sub
scas
and
adc
test
dec
or
int
es
adc
shlb
add
pushf
test
leave
fimull
jnp
cmp
mov
xchg
mov
cli
inc
mov
dec
or
jbe
push
mov
sbb
mov
or
jbe
sti
test
in
pop
insl
or
mov
sbb
mov
cvtps2pi
imull
das
and
xor
jb
jb
pop
dec
in
sbb
jl
cmc
dec
mov
push
imul
xchg
jecxz
out
fucomi
jge
mov
dec
push
mov
and
jmp
pop
out
cmpsb
or
ss
pop
mov
leave
js
out
or
ret
xchg
jnp
xor
insl
and
cs
sbb
push
loop
mov
pop
and
add
cmp
int
xor
add
xlat
mov
das
and
adc
mov
xor
and
in
or
mov
push
iret
xor
stos
lods
enter
idivl
lods
out
lock
imul
or
insl
cmp
mov
nop
mov
jl
mov
test
imul
push
xchg
xor
data16
sbb
popa
jnp
mov
jnp
sbb
shlb
scas
jge
cli
lock
test
xchg
test
dec
daa
lods
cmp
clc
out
and
pop
sbb
fcoml
addl
xor
cmc
leave
push
out
lret
mov
lcall
adc
iret
out
fsts
lods
xor
cmp
imul
stc
mov
scas
jbe
add
jno
data16
iret
popa
testl
movsb
stc
mov
pop
push
pop
push
mov
dec
cmc
pop
pop
jmp
xchg
add
icebp
pop
in
dec
decb
xlat
push
popa
xchg
jo
out
lahf
adc
repz
push
push
jg
imul
add
push
or
inc
push
jo
pushf
sub
xchg
pusha
xchg
lods
or
or
inc
fadd
xor
mov
insb
dec
into
ret
and
dec
xchg
stc
mov
or
cmp
jmp
push
sbbl
cwtl
mov
cmp
mov
add
scas
mov
xor
and
or
movsb
jbe
adc
jo
lahf
push
andb
push
jge
lods
pushf
fidivrs
cmp
adc
push
jge
mov
xchg
lods
mov
or
cmpsl
push
or
test
and
clc
subl
out
cmpsb
cwtl
icebp
test
arpl
dec
mov
cmc
add
pop
les
outsb
jae
mov
das
push
fld
add
popf
aad
aam
xor
loopne
and
push
jne
add
cltd
in
dec
mov
jmp
xchg
inc
xor
je
mov
dec
push
movsl
cmp
inc
popf
inc
bnd
or
stos
test
aam
loop
jl
or
and
pusha
add
xchg
ret
movsb
loopne
in
imul
scas
es
movsl
add
jnp
gs
xchg
push
test
jnp
lock
mov
in
add
add
jae
je
adc
jbe
pop
cmp
xchg
fisubrl
cmpb
adc
jno
aas
push
xlat
push
shrl
ja
or
mov
inc
and
test
aad
xor
xor
jp
jp
sbb
mov
mov
jnp
xor
mov
cmpsl
pop
std
mov
mov
push
cwtl
sub
mov
mov
pop
xor
testb
popa
inc
insl
loop
lea
aas
xor
cmpsb
insl
scas
sarl
out
adc
pop
stc
nop
icebp
in
les
mov
pop
push
int3
aam
xchg
cmpsl
aas
pmaxub
push
xor
xchg
cs
outsl
lret
cmp
add
push
jns
dec
and
push
xlat
imul
aaa
sar
cmc
mov
mov
dec
mov
les
insb
cmp
bnd
movsl
cltd
dec
movl
sub
lock
pushl
les
shl
jne
adc
mov
je
jmp
push
or
and
xchg
adc
ret
mov
xchg
push
xor
lods
out
sbb
xor
pop
jmp
fildll
push
push
clc
call
lret
and
loop
mov
filds
movsl
jbe
ljmp
or
mov
into
outsb
jb
jmp
pop
out
dec
pop
add
sub
mov
int
jmp
push
rcr
enter
push
mov
imul
into
roll
hlt
push
xlat
lahf
ljmp
pop
test
or
adc
xchg
test
fildll
testl
into
cmc
mov
pop
not
lods
orb
daa
aad
mov
pusha
aam
sub
add
xchg
mov
stc
aaa
sbb
icebp
ret
fistps
mov
fs
and
inc
pop
sub
lds
mov
xor
enter
and
shll
test
xchg
ds
dec
sarl
mov
jecxz
xor
sbb
iret
in
pop
into
push
lret
jp
mov
addr16
std
rorb
pop
aam
mov
or
mov
xor
arpl
fbld
clc
jmp
sub
adcb
ret
data16
leave
adc
or
stos
fwait
test
xchg
aad
lret
data16
aam
xor
mov
push
dec
repz
xor
sbb
or
add
xchg
pop
es
inc
ja
ja
dec
cmpsb
and
jl
jae,pt
inc
jge
dec
insl
ss
ljmp
lods
inc
xchg
or
xor
aas
xchg
mov
cmp
popa
hlt
pop
sbb
jne
xlat
rorl
add
sub
std
xchg
sub
mov
mov
dec
sarl
jp
aam
leave
jg
pushf
iret
test
pop
icebp
mov
xchg
mov
inc
fiadds
jmp
xchg
cmp
lret
push
pop
insb
cmp
sub
cld
movsl
mov
adc
mov
pop
icebp
ret
aam
addr16
fwait
add
data16
jnp
clc
push
push
mov
jmp
mov
push
mov
jg
dec
push
call
push
fists
ljmp
stos
mov
mov
add
jnp
mov
push
and
lret
jb,pn
cs
out
pop
jmp
push
mov
add
pusha
xor
cmp
ret
ds
push
fiadds
xchg
cmp
xchg
inc
inc
scas
rclb
pop
mov
pop
sbb
and
push
hlt
cmpsl
out
mov
fsts
movsl
mov
in
push
call
mov
das
in
gs
inc
adc
pop
inc
das
pop
push
jp
jae
push
sub
cmp
adc
lahf
enter
aam
shl
test
add
or
ja
inc
cmp
fildl
push
lods
in
mov
sti
push
sbb
pop
sbb
mov
pop
jns
xchg
stos
jmp
adc
sub
lods
xchg
mov
jge
xchg
add
lahf
aam
bound
inc
loopne
and
lea
cmp
icebp
pusha
push
mov
xchg
jns
rcrb
ljmp
repnz
sub
cmp
sti
jae
mov
mov
clc
sub
inc
xchg
out
sbb
sbb
pop
sub
pop
push
cmpb
outsb
pop
and
jg
sahf
js
push
mov
and
mov
fidivrl
test
in
mov
xchg
je
cmpsl
xchg
pushf
es
loope
xor
inc
jns
or
gs
test
std
test
fstl
or
cld
or
jo
dec
mov
out
jae
test
sar
dec
push
push
sub
mov
cmpsl
ljmp
push
cld
pop
fs
ret
sub
shlb
sub
cli
mov
lock
mov
out
lds
jle
jmp
adc
out
pop
adc
fcomi
loope
lret
jle
lock
in
pop
in
mov
movsb
sub
xor
fldt
pushf
insl
stos
xchg
popf
inc
sbb
xchg
dec
and
and
lds
mov
ret
dec
fs
or
arpl
pop
dec
outsb
out
lea
mov
jmp
lahf
bndstx
insl
lret
dec
cmp
movsl
push
out
nop
jg
addb
mov
dec
das
cmp
or
mov
mov
pusha
add
push
push
in
xchg
movb
pop
cmc
mov
push
push
aam
cs
ds
dec
in
dec
test
rcll
lock
in
add
xchg
rcrb
xchg
or
cltd
lds
mov
and
mov
push
xchg
das
sub
aad
cwtl
int
inc
sbb
fildl
push
push
movl
cli
push
adc
xor
ret
sar
mov
xchg
ljmp
mov
lods
or
movsb
cmp
arpl
out
jge
mov
jbe
xor
xchg
iret
ja
imul
int3
pop
jbe
adc
mul
int3
rol
outsb
mov
push
scas
rcll
hlt
adc
pop
repnz
dec
repz
les
dec
add
or
adc
pop
stos
or
out
hlt
cld
jmp
xchg
mov
in
dec
inc
cmpsl
insl
or
mov
add
cltd
cld
pop
jns
hlt
jo
sbb
or
movsb
repz
clc
outsb
int
in
cmp
and
jle
fucomp
or
call
iret
cltd
enter
dec
je
jns
sbb
cld
mov
dec
mov
test
adc
out
and
sbb
call
in
arpl
cmc
or
xlat
mov
ret
in
adc
out
loope
int
and
sbb
jae
cmp
rolb
pop
fwait
ret
mov
xor
test
arpl
jnp
sub
in
arpl
loop
jne
jne
xchg
jl
ret
aad
cli
shl
add
movsb
lock
addr16
cmp
mov
dec
or
andl
loope
in
xor
pop
out
pop
pop
je
add
jno
shrb
or
sti
push
xchg
and
testb
add
scas
cli
sbb
mov
sub
js
fmulp
scas
cli
jl
mov
inc
add
ds
enter
imul
sbb
and
sub
and
xchg
inc
xchg
xchg
arpl
xchg
cmp
in
add
adc
mov
jo
xchg
mov
insb
ret
cmpsl
xor
pop
inc
sub
aaa
lods
test
sbb
arpl
mov
shl
js
dec
fwait
dec
sbb
xchg
xchg
dec
mov
dec
cwtl
push
mov
cltd
jmp
in
cmp
xor
imul
jl
sbb
fcomps
cmpl
int
inc
pop
and
add
pop
addr16
mov
inc
aaa
int3
mov
fnstsw
dec
lahf
sahf
jb
enter
or
stos
cwtl
dec
push
mov
std
add
mov
mov
or
mov
js
sub
mov
push
mov
sub
icebp
xchg
ficoml
jecxz
gs
jb
or
decl
inc
lds
sbb
mov
pop
inc
insl
jne
das
mov
lret
lcall
inc
add
xchg
rcr
adc
dec
cmp
push
jmp
pop
jmp
mov
lret
lret
jae
push
mul
loope
adc
mov
in
dec
xor
sub
cmp
out
inc
or
inc
dec
out
pop
push
mov
jmp
out
push
stc
sti
adc
xor
or
jnp
mov
mov
adc
dec
aam
mov
push
mov
outsl
xchg
lret
inc
xor
ret
push
stos
daa
pop
push
scas
aas
loopne
xchg
out
xor
outsl
ds
sbb
js
hlt
sub
stc
outsl
mov
pop
cmpsl
xchg
inc
out
adc
sub
cs
and
ljmp
xchg
mov
and
cmp
jge
xchg
mov
sbb
dec
pop
and
loopne
xor
loop
jl
xchg
data16
cmpsl
sbb
adc
and
mov
leave
pop
adc
pop
add
into
mov
jecxz
xlat
sub
mov
push
and
ljmp
dec
adc
cmpsb
xchg
test
push
jle
test
jns
push
add
test
xchg
mov
and
adc
ja
mov
dec
dec
adc
mov
pop
call
adc
and
repz
int
dec
stos
loop
or
jg
lods
dec
push
cmpsb
int3
xor
ss
and
mov
or
out
mov
icebp
aaa
repz
loopne
adc
xchg
xchg
sub
push
hlt
loopne
push
cmpsl
and
dec
or
rolb
jae
sub
adc
add
jmp
add
notl
add
mov
pop
mov
dec
adc
ds
mov
movsl
mov
jnp
add
lods
and
mov
insb
dec
mov
lds
cmp
mov
jg
jnp
imul
jae
jae
mov
pop
mov
xchg
pop
emms
push
clc
push
jecxz
sub
test
cmp
addb
pop
clc
sub
stos
or
iret
fidivrl
jnp
clc
push
mulb
icebp
xor
dec
adc
dec
adc
jecxz
jmp
mov
pop
inc
add
popa
xchg
xor
dec
mov
and
dec
jmp
push
enter
outsb
dec
xchg
cmp
inc
nop
push
mov
sbb
int3
imull
imul
push
sbbb
data16
mov
mov
jno
dec
xchg
in
in
cwtl
add
aaa
jns
dec
mov
mov
pusha
das
loopne
je
gs
mov
sub
mov
lock
adc
cli
test
or
mov
sbb
ffree
push
fs
lods
leave
adc
movsb
lea
sti
lret
les
sahf
jg
inc
pop
leave
pusha
jb
mov
lahf
jb
xor
testb
mov
push
push
sub
ds
sarb
pop
lahf
es
push
addr16
mov
sbb
nop
pushf
dec
and
stos
repz
add
mov
mov
jecxz
xor
xor
scas
ljmp
xchg
je
xor
popa
sub
jae
mov
add
xchg
and
je,pn
je
jmp
in
fidivs
xchg
sahf
inc
lds
xor
lds
lahf
pop
je
mov
mov
inc
jge
sub
add
xchg
push
jecxz
out
popa
dec
push
addr16
shrl
xor
cld
and
pop
dec
into
pop
in
mov
dec
rcr
mov
cli
out
js
int
adc
xchg
ja
mov
xor
call
mov
jp
in
nop
sahf
sbb
and
jno
jnp
imul
cltd
stos
fimuls
enter
and
xchg
std
xchg
mov
jne
jae
push
xchg
fdivrs
or
pop
test
in
cmp
dec
jecxz
ret
push
or
movswl
sbb
daa
inc
clc
outsb
bound
push
icebp
add
cmp
pop
jecxz
es
sbbl
cmp
xor
cwtl
or
inc
rcrb
push
adcb
sub
mov
push
ffreep
pop
xchg
lods
inc
push
jecxz
xchg
outsb
testb
popa
js
dec
hlt
sub
out
ja
test
es
dec
pop
shll
pop
add
gs
cmp
les
ljmp
cmpl
out
rcrl
lcall
fdivl
adc
cmc
pop
mov
sub
out
cmpb
fs
or
ljmp
ss
push
or
fwait
in
inc
xchg
scas
jo
loop
sbb
shrb
arpl
stos
mov
add
jne
mov
test
xchg
cmp
aam
in
push
lods
xor
in
mov
xchg
aam
inc
jbe
jl
arpl
pushf
lea
mov
lea
mov
pop
inc
push
std
xchg
pop
mov
cmp
shr
mov
iret
stc
fwait
push
jae
in
rcrb
inc
out
je
cld
pop
push
mov
int3
popa
test
add
and
cmpsb
mov
pop
xor
pop
inc
sti
stc
ja
xchg
dec
imul
or
jecxz
ja
mov
dec
lea
mov
push
push
repnz
rep
call
loop
cmpsb
fiadds
xchg
mov
mov
adc
jg,pn
lret
or
popf
loop
dec
cmp
lock
jecxz
inc
pop
pop
jne
in
inc
add
mov
call
push
and
rorl
mov
push
adc
and
int
jl
lret
ja
and
lods
sub
mov
cmp
inc
jmp
mov
sti
bound
call
mov
inc
sbb
xor
push
xchg
fdivrl
fistl
xchg
insl
pop
xchg
jbe
mov
test
xchg
in
xchg
adc
push
xchg
es
test
dec
scas
outsb
cmp
inc
aas
mov
out
sbb
add
stos
push
fwait
push
pop
cltd
outsb
lock
sub
sbb
sbbl
cld
mov
aam
repz
leave
cld
out
adc
add
mov
or
leave
out
cmpsl
mov
jb
mov
cmp
mov
jp
jnp
push
pop
and
mov
repnz
push
xlat
jno
pop
pop
test
add
imul
or
test
addr16
ss
xchg
aad
rolb
in
js
cmc
sbb
push
push
sub
fildl
insl
into
scas
call
stos
add
inc
test
movsb
clc
and
jbe
ljmp
cmp
pop
add
xchg
ds
shr
and
mov
lods
fbstp
repnz
sbb
push
inc
add
xlat
push
in
cli
add
mov
lock
test
adc
push
xor
test
imul
cmpsb
jo,pn
imul
xchg
mov
xor
inc
lret
fmulp
or
lret
imul
mov
ds
lock
daa
mov
lcall
add
cli
addr16
adc
stos
in
cltd
xchg
mov
imul
scas
cmc
push
ret
sar
mov
jl
scas
or
mov
mov
pop
pop
out
or
imul
xor
divl
loope
repnz
repz
dec
outsl
cli
shr
dec
jmp
mov
lds
shrb
aas
fmul
leave
mov
test
mov
rcl
cmpb
cs
sti
mov
mov
add
orb
outsb
inc
sbb
popl
cmp
or
lods
loopne
fistps
pop
jmp
imull
push
mov
jp
pop
sbb
ror
push
push
mov
divb
push
mov
cs
les
hlt
lds
xchg
repnz
ret
xchg
mov
leave
and
add
push
xchg
or
fucomp
pop
jmp
lea
cmp
adc
shlb
dec
add
xorl
sahf
into
mov
dec
inc
sbb
out
ret
in
xchg
pop
cmp
cs
xor
jge
push
sub
inc
leave
mov
fadds
das
xchg
xchg
pushf
mov
cs
jno
inc
lea
push
xor
dec
gs
adc
adc
adc
xorl
in
add
in
inc
lods
hlt
ds
out
fisttpl
sbb
sub
xchg
imul
out
inc
push
push
push
loopne
mov
mov
mov
fnstcw
cld
inc
push
fisubrl
in
ret
lds
add
or
sbb
pop
mov
int
orb
ss
inc
fcoml
pop
and
subl
pop
push
inc
mov
jno
sbb
outsl
mov
bound
test
test
push
push
inc
mov
out
ret
xor
mov
incb
mov
mov
jg
mov
mov
or
loop
mov
loopne
dec
cmc
imul
push
fisubrl
xchg
or
push
incl
fwait
push
lds
dec
mov
jae
xchg
mov
decb
or
inc
adc
pop
xor
mov
jg
jmp
adc
aam
pop
scas
das
retw
sarb
add
call
cmp
cmp
shlb
mov
pushf
xchg
push
rcl
lock
jecxz
fldl
jo
addr16
scas
inc
push
push
xor
sahf
aam
insb
mov
xlat
or
inc
lahf
xchg
pushf
sub
sub
testb
xor
ja
sbb
jb
mov
push
pushf
sbb
cld
inc
clc
jecxz
mov
mov
dec
es
cmpsb
push
jnp
xor
ret
les
cmc
jo
mov
cmc
inc
mov
insb
es
jb
pop
jbe
ret
notl
add
jae
mov
das
adc
jb
leave
aaa
dec
rolb
xchg
iret
dec
xchg
jnp
or
push
lock
aad
push
add
inc
jg
fistps
cmp
xchg
std
lods
inc
mov
stos
fnsave
add
mov
pop
add
loop
movsb
xor
call
or
dec
mov
les
mov
add
cmp
data16
xor
out
xchg
dec
jp
imul
xlat
mov
cmp
xor
out
cmp
add
imul
sti
xchg
push
dec
jae
sbb
xor
ja
cmp
stc
or
insl
and
pusha
je
mov
add
mov
xchg
mov
repz
stc
lret
jnp
loop
add
dec
cs
jb
pusha
fidivl
cmp
mov
out
mov
incb
in
sbb
leave
or
cmp
inc
push
jnp
sbb
ss
jp
xlat
jo
outsl
ss
push
fcompl
data16
dec
cmp
out
cmc
jg
das
out
stc
movsl
jecxz
pop
inc
xchg
xchg
and
dec
sti
pop
je
jb
mov
scas
or
in
jns
dec
xor
xchg
xor
add
xor
fadds
lea
sub
int3
fisubs
xor
decl
jns
dec
jno
fwait
cld
shr
dec
addr16
decb
jns
and
mov
jg
jae
sbb
out
dec
add
mov
enter
ljmp
jb
pop
inc
dec
xchg
in
mov
loop
fmuls
lock
mov
cld
stc
popa
xchg
stos
and
movsl
xor
sbb
pop
and
inc
sbb
xchg
add
fldcw
inc
insl
jp
mov
hlt
lcall
and
popa
mov
neg
fiadds
pop
jl
lds
mov
and
pushf
inc
sbb
rep
mov
dec
dec
fcomip
cli
fstl
mov
mov
clc
dec
pusha
pop
fildl
rorb
mov
js
mov
adc
mov
or
inc
mov
popa
mov
insl
jg
cld
enter
xor
cmp
std
push
and
insl
sti
mov
xchg
xor
dec
push
push
fcmovnu
push
sarb
and
inc
xchg
mov
arpl
sti
add
mov
les
outsl
ljmp
ja
dec
repnz
xor
test
fidivs
gs
cmp
add
jp
cmpsl
nop
jns
fisttps
bound
js
and
roll
out
mov
in
hlt
dec
test
lcall
movsl
test
cmp
adc
mov
fidivs
cmc
fwait
test
cmp
or
mov
add
xor
rcll
sbb
dec
xchg
mov
or
out
or
sbb
decl
xchg
jge
jmp
arpl
adc
ss
pop
loope
and
mov
cmp
shll
mov
xor
repnz
scas
ret
insb
test
push
mov
mov
and
pavgb
lret
sbb
stc
movsb
cmp
pop
mov
mov
cld
cmp
hlt
out
dec
imulb
js
cmovs
sub
mov
mov
mov
jnp
sbb
paddsw
scas
mov
add
faddl
mov
xor
mov
mov
mov
mov
les
cmpsb
inc
lcall
push
int3
adc
aam
fistpl
inc
or
jno
mov
sub
fs
fstp
inc
pop
stc
rcrb
dec
fstpl
push
lcall
mov
loopne
nop
daa
pop
jle
sub
mov
sbb
loope
inc
xor
sbb
push
pushl
insb
mov
jl
or
test
push
fsubrs
or
test
icebp
cmc
jne
cmp
outsl
jge
push
ljmp
out
std
sub
js
add
jle
mov
rolb
push
or
into
and
push
push
or
dec
adc
and
sub
push
push
in
shrl
jle
push
imul
sbb
xor
mov
out
mov
pushf
add
repz
adc
or
out
mov
push
sbb
sahf
mov
mov
pop
in
xchg
stos
fs
jns
pop
xlat
mov
pop
das
jbe
cmpsb
jnp
hlt
ret
jbe
or
orl
jae
mov
push
pusha
fwait
inc
js
xchg
leave
pop
jp
imul
mov
push
or
cmp
test
loope
mov
jae
pop
insb
aaa
mov
mov
jno
daa
dec
mov
adc
mov
lods
push
ds
sbb
dec
subl
enter
cmpsl
pushf
lods
dec
push
xor
test
mov
loop
sbb
mov
ja
add
in
inc
js
dec
xchg
push
jmp
stc
adc
les
ret
lahf
in
add
pop
lcall
add
mov
imul
sbb
test
jmp
outsl
mov
dec
add
aas
popa
cmp
jbe
or
push
push
pop
rcll
jnp
icebp
jae
mov
lea
push
loopne
hlt
cmp
sbb
repz
or
negb
mov
jl
or
cmp
gs
sti
dec
mov
cmp
inc
cld
pop
adc
loop
aas
ret
loope
dec
inc
loop
mov
cmp
arpl
imul
jae
pop
and
clc
aad
xor
pop
pushf
lahf
adc
insb
call
leave
lods
enter
push
mov
inc
xchg
mov
cld
repnz
pop
add
mov
xchg
add
adc
pop
jl
push
ret
cmp
xchg
jmp
sbb
sbb
jecxz
mov
popf
and
pop
xor
adc
xchg
or
mov
pop
push
mov
mov
pop
gs
aaa
fists
mov
aam
push
mov
mov
sbb
daa
loopne
push
int3
push
add
out
adc
mov
add
adc
adc
sub
into
cmp
arpl
sti
cmpsb
aas
scas
sbb
les
or
push
lods
pop
gs
xchg
and
ja
clc
fnstcw
cmc
dec
arpl
mov
dec
js,pt
sbbb
add
xor
stc
in
sarl
loop
adc
mov
mov
fstp
gs
test
mov
mov
xchg
and
sub
inc
pop
mov
lods
fwait
push
jbe
lret
add
sbb
lea
outsl
mov
jne
mov
rclb
push
je
pop
out
enter
dec
movsb
mov
mov
les
inc
xlat
nop
sub
push
ds
xchg
cli
xchg
lock
out
adc
scas
cmp
lods
hlt
jo
xor
sbb
mov
cmp
inc
sahf
cmp
lahf
jbe
incb
or
and
dec
xor
sahf
inc
xor
sbbb
into
jbe
jg
lret
lock
icebp
xchg
mov
xchg
pop
addr16
inc
es
lret
and
fdivl
xor
in
enterw
jle
sbbb
std
cltd
push
in
in
jne
xlat
outsb
jp
cmp
andl
cs
aas
imul
pop
and
cltd
jae
arpl
mov
xchg
mov
ja
mov
ret
out
in
les
je
shll
inc
mov
sub
lea
cmpps
push
jo
mov
lock
xor
andl
movl
cmp
test
data16
cld
gs
cli
mov
cmpsb
pop
les
jg
mov
lret
in
mov
outsb
hlt
scas
mov
bound
and
sub
push
ds
ret
mov
cwtl
shr
loopne
int3
mov
push
xchg
in
sahf
and
xchg
pop
cmpsb
mov
xchg
shll
shll
cmp
sbb
test
pcmpgtd
xorl
sbb
iret
out
pop
adc
and
cmp
jns
mov
mov
ror
sahf
xor
mov
jg
pop
popf
and
out
or
xchg
loope
mov
imul
fldt
imul
nop
inc
lret
pop
test
mov
jp
mov
daa
fcmovnbe
imul
push
mov
fwait
cmp
in
inc
sub
movsb
or
jmp
movb
push
pop
xor
cmp
or
mov
inc
add
mov
in
loopne
push
lahf
insb
clc
sahf
repnz
test
gs
lahf
in
fcmove
cmp
das
cli
sbb
add
loope
lds
adc
or
es
add
fcomi
orb
xor
add
out
sbb
jmp
shl
mov
out
or
gs
mul
lock
cltd
cltd
imul
nop
add
mov
test
add
lea
scas
icebp
sub
lods
shl
hlt
hlt
pop
cmp
xchg
sahf
les
shll
pusha
outsl
mov
push
enter
xor
out
shrl
fwait
dec
outsl
sbb
int3
popa
mov
xorl
jns
mov
stos
jp
adc
ficompl
aad
cltd
jle
cmp
add
ljmp
int
mov
jne
inc
lods
cld
add
in
cmp
mov
xchg
and
pusha
lds
sub
jmp
inc
out
outsb
dec
enter
pop
mov
lret
cmp
jbe
mov
push
dec
aas
test
push
scas
stos
xor
cli
and
pop
cmp
insl
push
popf
pop
ficoml
ja
cmc
cwtl
add
cld
jbe
mov
pop
lea
mov
into
sub
pop
dec
dec
sbb
in
sarb
loope
and
mov
xchg
pushl
push
movsb
mov
inc
inc
dec
jb
in
mov
sub
sub
enter
shrb
adc
shlb
popa
pushw
sarb
das
int3
mov
rcrl
jbe
lock
add
dec
push
addr16
cs
into
hlt
add
dec
pop
and
cmpsb
scas
mov
push
sub
push
xchg
cld
mov
dec
pop
xor
xchg
inc
sbb
add
jne
sub
inc
aad
cltd
scas
sbb
pop
cmovo
pop
ss
or
pusha
cmovl
and
adc
cli
fwait
xchg
aad
ja
push
std
shlb
sub
mov
lcall
fnstenv
xchg
push
fs
sub
pop
lods
jne
mov
xchg
loop
test
sub
cs
push
xchg
push
pop
pop
lods
sub
imul
jno
loop
xor
mov
jmp
out
inc
add
lds
loope
enter
jmp
lock
fs
movsb
jno
in
pop
push
mov
rol
sbb
adc
pop
mov
adc
jp
dec
insl
jmp
pop
xchg
and
icebp
js
or
xor
mov
push
filds
pop
jg
mov
cmp
push
fisttps
std
jbe
mov
ds
inc
jo
inc
inc
dec
in
nop
jb
loope
dec
sbb
sbb
jmp
test
jo
fldcw
push
mov
inc
cmpsl
into
jnp
and
or
or
out
pop
dec
mov
cmpsb
daa
push
or
aad
imul
jg
or
add
jg
pop
je
lods
ljmp
push
lret
xor
shlb
cmp
inc
add
add
sbb
ljmp
add
arpl
and
ds
imul
cmpb
and
out
ret
sarl
cmp
call
sbb
or
jmp
sub
xchg
jle
sahf
and
push
cmpps
cmp
orb
fimuls
and
dec
sbb
out
mov
push
dec
jle
sbb
and
cmpsb
mov
xchg
aam
inc
addb
rcll
jno
or
add
add
push
dec
xchg
pusha
addr16
mov
jbe
xor
je
popa
mov
or
mov
fisttpl
dec
or
cli
sbb
sub
jns
and
inc
je
movsl
or
dec
jbe
outsl
scas
mov
cmpsb
jns
or
jecxz
inc
xchg
mov
add
loop
sar
popa
imulb
mov
and
cmpsb
movsb
dec
call
iret
mov
inc
push
fs
into
pop
mov
and
outsb
orl
add
mov
pop
dec
sbb
sub
enter
daa
cmp
ds
movsb
cmc
out
sahf
inc
sub
pop
cmp
std
icebp
push
mov
push
das
push
xor
fisubs
test
in
dec
lret
inc
std
outsl
xchg
cmp
cmp
outsb
movsl
out
sbb
cltd
pop
imul
pop
stc
test
xor
jb
into
pusha
jns
sub
leave
dec
ljmp
push
jg
mov
and
popa
push
orl
repnz
mov
dec
aad
lret
dec
jno
mov
adc
dec
sbb
sub
sub
jmp
pop
js
gs
push
mov
or
int
mov
in
fistpll
pop
jg
clc
in
les
ret
repz
pop
test
xchg
std
outsl
mov
xchg
sub
out
push
mov
fsubs
jno
xchg
gs
fidivrl
stc
add
test
dec
rcrb
hlt
dec
jle
push
sbb
std
add
mov
jns
stos
xor
jmp
pusha
fildl
xor
cwtl
fistpll
cmp
sub
in
lds
sti
push
dec
xchg
push
xor
cmp
cmc
aam
call
ss
sub
xorl
adc
leave
cli
lcall
push
mov
sahf
and
repz
in
fsub
and
fsubrl
jb
mov
out
inc
xchg
movsl
leave
pop
jb
xchg
mov
sti
cmp
and
lea
inc
cwtl
sub
or
or
mov
movsb
mov
push
push
sub
imul
sahf
cltd
push
incl
insl
gs
outsl
in
pop
dec
cs
lods
movsb
ss
adc
mov
dec
loop
mov
jne
mov
imul
lock
cmc
setns
xlat
ret
scas
bound
xor
int3
gs
cmpsl
inc
loope
push
ret
data16
ret
or
sbb
insl
cmp
out
pushf
mov
adc
roll
mov
or
add
insl
xchg
pop
in
adcb
xchg
fadds
xchg
rclb
sub
mov
xchg
shrb
shlb
push
mov
stos
adc
or
mov
cmp
popa
mov
nop
cld
cli
sbb
data16
mov
adc
shll
mov
and
sbb
imul
push
out
or
aaa
xchg
test
aaa
jl
imul
aad
push
cmc
adc
inc
jecxz
std
jbe
das
mov
jmp
push
pop
aad
jp
mov
mov
repnz
cli
xchg
movsl
lcall
loop
ljmp
mov
call
pop
out
mov
jle
ffree
adc
mov
sahf
jge
dec
dec
mov
pop
jne
adc
pop
cmp
rcl
mov
push
movsl
dec
add
sbb
sbb
in
push
shll
xchg
pop
fildll
aad
jne
push
aam
jmp
in
loop
in
pop
dec
pop
mov
push
or
sub
ss
hlt
mov
sahf
mov
testl
mov
jo
test
jo
mov
xchg
loop
mov
cmp
mov
lods
shlb
jns
iret
ror
ret
xlat
pop
push
mov
inc
movsb
mov
mov
sub
inc
lahf
sub
sub
sahf
js
repz
jb
repz
int3
cmpsl
add
fsubrs
aam
cmp
sahf
fsubr
cwtl
loope
aam
and
add
mov
ret
iret
add
mov
add
jns
sahf
adc
dec
ja
adc
push
jno
sub
xchg
or
xchg
cmp
lds
inc
mov
sbb
push
fwait
inc
mov
mov
int
scas
cld
lcall
xchg
fisubrl
outsb
dec
cmpb
dec
and
xchg
ljmp
cmp
insl
jmp
fcoms
scas
in
sub
mov
push
mov
mov
inc
dec
push
jl
fsubr
mov
and
arpl
or
xor
shlb
jg
cs
shll
outsb
fcmovnu
pushf
shll
movzwl
mov
or
adc
sub
sbb
pop
imul
lret
dec
push
sbb
jbe
xor
add
mov
pop
jl
imul
test
clc
les
xchg
or
movsl
cmp
or
call
mov
or
rcrl
cmp
inc
ljmp
xchg
push
int
jo
shl
mov
dec
pop
out
jle
fs
or
rorb
in
gs
cld
push
mov
xor
cmp
xlat
aas
and
mov
scas
nop
stos
push
add
push
fisttpl
mov
or
mov
add
pop
rsqrtps
jl
pushf
sub
sbb
test
clc
lcall
mov
addb
push
gs
cmp
jb
pop
jg
and
lcall
inc
in
cmp
adc
jp
sbb
sub
jbe
dec
push
jnp
inc
and
pop
loopne
jl
cmpl
and
mov
dec
jno
dec
push
cmc
inc
sub
push
xchg
mov
mov
stc
iret
inc
test
push
cmp
and
inc
dec
fiadds
and
lret
in
ficomps
int
es
jecxz
pop
pushf
scas
scas
pop
aaa
call
movsl
fsubl
cmc
imul
inc
mov
lds
ret
or
xchg
adc
lock
daa
sub
jge
insl
add
fidivrl
mov
mov
orl
inc
lods
mov
inc
cmp
cmp
jnp
add
mov
jbe
cmp
dec
mov
bound
es
mov
and
jle
sbb
insb
or
pop
pop
adc
pop
mov
cmp
insb
add
fmuls
dec
sbb
cmp
push
and
je
aam
inc
fnstenv
iret
addl
mov
adc
dec
aam
and
dec
xor
fcmovb
cmc
pop
xchg
add
and
sub
and
jne
add
or
and
jle
insl
push
add
ret
cld
jl
ljmp
nop
aad
mov
xor
fidivs
icebp
lret
pop
adc
hlt
jnp
jo
and
jbe
stos
xchg
sub
das
pushf
inc
out
mov
sti
nop
push
sbb
rolb
imul
sub
scas
dec
pop
jl
fs
loop
rclb
add
mov
lods
outsb
push
push
cs
loope
sub
xor
cs
les
xlat
mov
pop
cmp
clc
and
daa
mov
add
cmc
cmp
jbe
lcall
sub
aaa
ss
mov
mov
stos
sbb
push
pop
lcall
loop
jbe
pop
in
scas
imul
adc
push
das
stos
jl
clc
ret
frstor
cmovle
push
popa
push
fsub
mov
add
loopne
iret
inc
xor
outsb
dec
cmpsb
scas
add
fs
inc
jns
nop
push
xlat
iret
cmp
mov
cmp
push
imul
dec
out
sub
cmp
mov
fsubs
out
gs
jo
cltd
add
cmp
and
mov
je
icebp
aas
or
sub
mov
add
icebp
mov
xlat
mov
pop
ss
cmc
sti
leave
sbb
sub
pop
lods
and
sbb
cld
inc
repnz
ret
push
ss
xchg
xchg
xchg
lcall
daa
mov
int3
cmp
xchg
lods
std
aad
outsl
addr16
inc
repz
pop
xchg
push
int3
mov
jp
cmp
xchg
data16
sbb
adc
push
repz
add
and
or
cmp
dec
int
cwtl
pushf
push
cltd
cmp
sti
stos
jle
xchg
bnd
push
sbb
adc
push
pop
push
xchg
xor
bound
scas
sbb
and
je
stc
shll
out
pop
jmp
aaa
arpl
lret
jmp
cld
insl
add
test
adc
dec
cli
leave
pop
es
mov
insl
sub
mov
lret
jno
xor
xor
outsb
push
pop
in
fcomp
pop
inc
lret
inc
and
es
jg
cvtps2pi
sub
shlb
int
ret
shll
addr16
adc
ljmp
and
lods
rcrb
cmp
xchg
mov
es
add
repnz
rolb
movsb
xchg
ja
daa
push
lcall
movsb
mov
fnstenv
test
imul
xor
and
test
push
inc
dec
jge
repnz
test
outsl
mov
test
pop
mov
adc
mov
inc
adc
fndisi(8087
jb
sbb
pop
stc
sbb
inc
lea
es
jecxz
arpl
pop
jg
inc
cld
into
aam
test
out
mov
sub
stc
mov
add
mov
push
inc
push
scas
ss
out
in
push
dec
jge
push
fwait
stos
ljmp
cmc
jb
in
dec
data16
inc
and
pop
xchg
es
das
fsubl
scas
fwait
or
test
stos
mov
add
push
pushf
adc
dec
cmp
xchg
mov
movsl
inc
movsl
mov
sbb
inc
in
xchg
sbb
ss
mov
scas
pop
shlb
jo
mov
popf
push
push
lods
mov
sub
mov
in
jge
mov
or
int
ds
push
jnp
jnp
cmp
jg
add
mov
je
dec
jl
jl
daa
or
jb
addr16
fidivrl
sub
mov
pop
pusha
pop
fldl
fsubrs
jbe
outsl
push
pusha
imul
mov
add
jnp
mov
push
lock
clc
sarb
sbb
jnp
cmp
out
cmp
mov
insb
cltd
int
dec
ljmp
stos
cmc
dec
mov
xor
lea
add
or
mov
fistl
rcrb
lahf
sbb
andl
fadds
movsl
push
sbbl
push
shrl
aam
test
mov
mov
in
sub
adc
insb
insb
xlat
cmp
shrl
lods
cld
jno
aaa
shll
jnp
insl
mov
add
imul
ret
pop
add
bound
aaa
cltd
ficompl
fdivs
pusha
clc
jge
fucomip
sub
adc
add
adc
shlb
cltd
mov
adc
inc
adc
mov
sbb
pop
jo
loopne
test
test
scas
ret
into
sub
loop
outsb
ljmp
add
sub
and
xchg
out
push
sbb
mov
int
or
ds
pop
cmpsl
inc
jmp
and
cltd
and
sbb
aad
insb
adc
and
sub
push
fisubrl
mov
and
test
inc
push
pop
jae
pushl
mov
cmp
push
pop
call
lcall
divl
lret
arpl
hlt
stc
adc
sbb
fcoms
pop
or
movsb
inc
pop
jno
mov
ljmp
add
insb
or
nop
cmp
rorl
fwait
loop
cmp
xor
lret
ficomps
in
in
cli
cmp
push
mov
xchg
ficoml
dec
jg
rorb
mov
test
or
and
ja
push
daa
iret
mov
pop
cmpsl
sbb
nop
mov
mov
mov
jp
cltd
mov
mov
fsub
cmp
int3
leave
pop
cmp
sub
sbb
mov
insl
rorl
inc
in
add
int
leave
data16
loop
cmp
lds
dec
das
pop
js
mov
lcall
and
jg
pop
and
clc
stos
insl
lret
xchg
cltd
mov
dec
pop
adcl
xchg
arpl
pop
mov
mov
ficoms
dec
shrb
enter
lea
jmp
pop
popf
call
sbb
adc
sub
shlb
pop
or
movsb
sbb
outsl
scas
push
jge
cmc
lods
pop
xchg
xchg
nop
cli
push
pop
jecxz
mov
out
sub
xchg
xchg
xchg
cmpsb
mov
cmc
mov
leave
test
xor
xchg
insb
add
std
sbbl
pushf
push
fsubs
loope
fnstenv
inc
ja
inc
adc
mov
xor
adc
jbe
das
xchg
pop
xchg
xchg
inc
pop
sbbb
adc
mov
jno
push
dec
idivb
out
rorb
js
xchg
fdivl
adcl
add
mov
dec
aam
sarl
push
loop
pop
dec
or
and
inc
insb
inc
imul
cmp
adcl
imul
lcall
js
jl
in
xchg
sub
test
icebp
das
jae
and
cmp
sti
ds
mov
or
fbstp
push
outsl
sbb
stos
xchg
ret
inc
push
out
push
mov
inc
jb
adc
push
dec
mov
data16
loope
push
or
data16
adc
das
dec
scas
dec
xchg
mov
rorl
stos
test
insl
pop
rcl
mov
jbe
xor
xchg
fildl
xchg
or
sub
pop
leave
push
std
adc
test
inc
lret
fsubr
mov
addr16
incb
fstps
andb
out
push
push
inc
jle
roll
dec
cmpsb
and
push
fwait
mov
in
cli
cmp
adc
ja
add
pop
jge
jmp
xlat
inc
dec
test
mov
jmp
jns
pop
sbb
cld
add
and
into
sub
mov
xlat
adc
jno
xchg
repz
xchg
and
cs
jbe
or
or
or
cli
ja
push
pop
mov
jmp
movsb
fcmovbe
mov
out
add
inc
in
push
or
sbbl
xlat
xor
ret
xor
test
arpl
cmpsb
cmpsl
arpl
or
out
out
adc
jecxz
jecxz
loop
mov
outsl
sti
scas
mov
stos
mov
jp
dec
sub
push
cli
push
fdivrl
out
adc
dec
in
cmc
sub
pop
pop
dec
cmp
sub
push
aam
lret
repz
lret
push
add
ja
dec
mov
in
fisttpll
loopne
stos
int
hlt
sub
adc
jl
ljmp
jmp
imul
or
push
pusha
or
dec
mov
mov
lcall
xchg
mulb
movsb
scas
cli
test
add
sub
or
mov
and
or
adc
xor
lock
and
pop
sbb
out
add
test
movl
xchg
lock
push
iret
push
sbb
cld
mov
movsb
fsubl
pop
sbb
in
int3
mov
sub
jge
je
and
lods
add
dec
rcll
sbb
and
outsb
hlt
sahf
bound
dec
push
popa
xchg
dec
lea
shrb
ret
xchg
adc
push
decb
dec
aam
repnz
dec
sub
hlt
pop
loope
hlt
sub
lods
xchg
push
ret
xchg
lahf
shl
mov
mov
dec
and
push
lea
lods
push
outsb
or
loope
out
test
fcomps
add
das
inc
xor
loop
js
sbb
xlat
addr16
aas
loopne
divb
test
jns
call
mov
dec
mov
inc
inc
ret
daa
out
in
xor
jg
dec
pop
pop
imul
icebp
xor
xor
mov
xor
push
sahf
mov
int
xchg
pop
mov
pop
sbbl
lret
jno
gs
mov
mov
and
jecxz
inc
cmpsb
ss
daa
mov
fwait
rcrl
mov
inc
pop
push
sub
movsl
lods
imul
enter
outsl
cmp
stos
loop
gs
lea
dec
mov
lock
jnp
xor
adc
loope
movaps
cmpsb
dec
adc
aam
test
add
rcrl
push
lds
fcomps
inc
xor
hlt
in
add
pop
andb
inc
aam
pop
mov
fldcw
mov
outsb
shrl
cmp
cmpsl
popa
icebp
cmc
push
jb
xchg
pop
pop
scas
out
imul
pop
test
mov
fwait
push
push
ljmp
jg
dec
in
lds
ljmp
dec
push
pop
push
push
cmc
cmc
outsl
in
rdmsr
shrl
push
popa
sti
sub
lods
fisubrl
lret
xlat
nop
jmp
mov
dec
sub
out
push
push
insl
xchg
pop
fs
adc
or
js
scas
pop
cltd
jo
add
push
mov
mov
or
loop
outsb
test
ret
js
adc
mov
adc
cli
push
fsubrp
ret
mov
adc
movsl
scas
sub
jmp
xor
les
outsb
lods
and
leave
loope
inc
jmp
clc
adc
repnz
clc
or
mov
mov
test
jg
pop
mov
sub
fcmovnbe
cltd
out
push
cmpb
jo
popa
push
fdivs
dec
jns
test
lret
xor
scas
fwait
scas
jle
dec
rorb
test
cmp
repz
pop
cmp
test
adc
cmpsl
jl
or
mov
pushf
int3
stos
shlb
mov
sbb
popa
aam
push
aad
lret
cld
dec
and
fs
jnp
or
insl
push
sub
arpl
mov
outsb
or
pusha
adc
sub
addr16
sub
or
jl
sub
xor
fisubs
dec
inc
leave
push
inc
pushf
and
adc
jmp
js
sarl
cli
into
inc
push
scas
in
add
rcrl
mov
cmpsb
lret
scas
or
dec
aas
pop
loope
lret
mov
data16
cmp
sar
fwait
push
cmp
into
adc
mov
sub
int
in
repnz
dec
std
insb
nop
bnd
fisttps
insb
sub
cmpsl
push
iret
cs
jo
xor
adc
cmp
push
ljmp
les
push
or
cmc
arpl
xchg
test
rorl
leave
cld
xchg
xchg
loope
or
xchg
add
inc
pop
aad
jo
mov
mov
jb
and
test
fidivrl
not
sbb
lods
lret
stos
dec
mov
lret
jo
pop
mov
movsb
sbb
sub
dec
cmp
cs
int3
jg
out
iret
les
fcmovne
dec
ljmp
sub
jg
pop
sub
xor
sbb
or
call
stc
cwtl
push
stc
pop
fwait
cmp
and
mov
mov
xchg
gs
rcl
enter
pop
or
outsb
pop
cmpsl
stos
pusha
aam
push
mov
loope
jge
ret
test
xor
cmp
pop
enter
mov
fnsave
dec
orl
sbb
iret
lcall
adc
cmp
push
add
rorb
imul
mov
movsl
add
sbb
mov
shlb
popf
outsl
inc
cmpsl
add
jnp
mov
jns
xchg
jne
scas
jmp
cltd
xor
xor
xchg
add
xchg
iret
adc
jbe
mov
mov
add
sub
shlb
or
mov
mov
or
in
xchg
outsl
shll
es
jo
loopne
shl
or
mov
pop
or
lea
dec
pusha
pop
mov
add
jne
push
pop
pop
loop
in
adc
out
test
pushf
sahf
inc
xchg
mov
adc
sti
int3
mov
jns
in
or
jecxz
mov
call
xchg
std
sbb
shll
loope
jle
mov
add
stos
mov
movsl
xlat
jae
clc
stc
xor
xchg
jns
mov
insb
and
dec
stos
rolb
fisubrl
adc
mov
xorb
aaa
outsl
push
aas
test
out
push
adc
adc
movsb
stos
out
mov
clc
ss
lret
xor
adc
loop
xchg
aam
cmpsb
push
xchg
inc
sbb
mov
inc
popf
insb
insl
sbb
xlat
xor
imul
int3
ljmp
lret
xchg
shl
mov
add
mov
fisttpll
int3
fcoms
cmc
sub
out
push
dec
adc
mov
mov
push
push
aaa
jae
mov
int
add
shlb
push
xor
inc
adc
lds
push
dec
lret
adc
xlat
sarb
fwait
stos
mov
scas
inc
dec
cs
jmp
push
xchg
fsub
mov
push
cmc
test
adc
mov
xchg
pop
xor
and
sub
dec
pop
xorps
ja
aam
call
dec
or
fwait
movb
mov
out
cwtl
rcrl
sub
push
outsl
popf
cmp
imull
call
rcrb
mov
rcl
or
mov
clc
mov
and
jne
mov
jmp
je
xor
lea
dec
sbb
mov
in
jecxz
insb
or
mov
sub
xor
test
inc
xchg
adc
enter
mov
scas
sub
pop
mov
test
push
and
scas
clc
in
daa
xchg
xchg
jbe
out
pop
inc
xorl
xchg
jbe
shr
les
jmp
mov
add
push
scas
pop
inc
stos
subl
inc
aaa
xchg
jno
in
arpl
es
movsb
negb
and
mov
sub
movsb
cmp
out
pop
jnp
iret
aad
jbe
xchg
hlt
xor
nop
aaa
pop
sbb
mov
fucomp
cmp
in
or
outsb
insb
cmp
fcoml
in
bound
xchg
leave
fwait
or
xlat
movsl
mov
loop
sbb
cmp
out
pop
int
mov
aaa
cmp
or
jae
test
jne
dec
cmpb
out
pop
sbb
dec
addb
cmpsl
imul
mov
push
mov
jne
lods
mov
mov
scas
fstps
imul
inc
outsl
cld
pop
ja
or
cmp
mov
or
xor
sub
push
jle
cmpl
imul
mov
dec
dec
mov
les
xlat
mov
sub
adc
imul
insl
push
lds
adc
inc
in
out
cmc
test
out
es
xchg
stc
jns
jns
xchg
lret
testb
cmp
xor
add
lds
cmc
and
fcoml
push
mov
xor
cmp
adc
pop
das
data16
icebp
mov
mov
xchg
arpl
scas
push
inc
mov
inc
aas
ds
sbb
insb
push
xor
movsl
out
hlt
xchg
xor
add
xchg
xor
clc
es
jg
dec
insl
fwait
iret
mov
adc
pop
add
push
pop
xchg
pop
jo
shl
insb
jo
stc
inc
cmp
fnstsw
jg
dec
rolb
inc
mov
aas
imul
scas
nop
sbb
push
lret
and
or
mov
sub
sub
push
sub
popf
int
ret
in
jns
lock
push
fwait
pop
scas
fcomps
fwait
icebp
pop
ficoml
jns
mov
sub
fmul
pop
jg
retw
out
out
or
push
fcompl
sub
add
sub
movsb
fsubrs
push
or
lret
sub
pop
jns
jb
pop
rolb
inc
dec
aaa
lcall
mov
mov
fdivrs
in
mov
mov
sub
lahf
push
test
mov
dec
iret
push
ja
lcall
xor
dec
into
scas
outsb
mov
xor
mov
ljmp
xchg
addr16
push
das
repnz
cltd
sub
xchg
xchg
mov
not
cmp
icebp
mov
mov
fbstp
test
sub
xor
push
push
or
ss
arpl
shlb
dec
test
dec
jnp
jmp
repnz
jge
lods
inc
adc
arpl
pop
adc
lahf
xchg
lret
out
and
xchg
jge
cmc
iret
lret
and
lock
je
mov
daa
jbe
and
popa
icebp
sbb
or
fst
adc
std
ret
add
push
sbb
push
ret
and
out
iret
cmpsb
fcoms
in
int
aad
inc
mov
mov
fwait
loop
rep
lds
mov
mov
ds
adc
pop
sub
dec
popa
jge
mov
insl
mov
imul
enter
ljmp
mov
mov
lahf
xlat
ret
and
test
push
xor
pusha
mov
sub
sub
push
test
mov
ljmp
fnstcw
setl
popf
push
rorb
xchg
mov
sub
cmpsb
adc
jnp
ds
fldt
adc
mov
pop
jno
dec
imul
inc
pop
imul
jbe
xchg
xchg
jbe
bnd
xor
shlb
xor
rorl
cmp
jo
push
xchg
push
repnz
dec
nop
shl
fs
xchg
adc
sub
jg
dec
and
loope
and
fstl
mov
pop
pop
sahf
or
lods
arpl
lret
inc
xor
adc
sbbl
fxch
push
jo
mov
test
xor
sbb
int3
mov
pop
push
push
pop
push
mov
adc
cmpsl
movsb
sarb
pop
stos
sbb
jl
hlt
pop
mov
mov
xchg
fwait
lock
jge
cmp
mov
fcomip
in
sti
cmc
repz
repz
aaa
in
ja
inc
adc
lods
inc
mov
pop
pop
js
enter
and
jmp
xchg
iret
or
fstp
dec
lahf
mov
mov
gs
mov
dec
push
push
lahf
xor
scas
add
cltd
int
and
and
adc
outsb
lock
sub
loop
mov
inc
mov
mov
cs
pop
mull
js
into
sub
push
lods
cmpsl
mov
addr16
jae
or
cmp
and
add
mov
cltd
inc
mov
stos
iret
mov
cmp
jns
mov
mov
xchg
mov
ret
mov
adc
ja
outsl
lret
or
xor
pop
clc
int3
mov
leave
nopl
bound
add
cmp
mov
pop
aad
iret
pop
inc
lds
push
je
jp
cwtl
adc
in
push
mov
xchg
push
push
icebp
hlt
cmc
xchg
aad
push
movsb
sti
hlt
js
mov
pop
shlb
testl
jo
stc
push
adc
lods
add
adc
push
mov
cld
mov
outsb
dec
dec
popa
insb
scas
mov
cmpsb
pushf
mov
mov
mov
or
lock
cmc
adc
fcos
xlat
sbb
xor
imul
or
adc
mov
add
cmp
xor
mov
sub
lods
xchg
in
mov
pushf
jmp
mov
sbb
and
xchg
sub
mov
push
cmove
push
imul
lcallw
sbb
cmp
movsb
loop
cmp
cmp
adc
call
mov
mov
pop
movsl
loop
jne
lods
outsb
enter
xor
pop
inc
mov
lods
orl
lods
mov
jg
xor
add
or
mov
sbb
mov
adc
out
dec
jb
ficoms
fcmovb
in
sub
imul
adc
push
cld
add
cmpsb
stos
mov
sub
cld
fildl
add
ret
clc
jl
cwtl
fldl
xchg
stc
cmp
fldt
mov
sahf
lret
dec
or
lea
sti
int
dec
push
xchg
push
sub
add
cmpsl
fdivs
sbb
mull
mov
insl
cli
add
mov
les
xorb
mov
cld
jmp
stos
sub
fs
and
xchg
mov
outsb
push
add
roll
dec
mov
out
imul
adc
aad
mov
push
mov
fs
cmp
lods
iret
leave
pop
push
xor
insl
insb
cmp
jl
cmp
cmp
push
and
push
int
push
lods
pop
ja
fdivs
add
lock
pop
mov
xchg
dec
and
and
jecxz
cmc
xchg
lcall
xchg
loopne
mov
and
in
shl
stos
rcrl
jge
push
xor
repnz
hlt
add
mov
bound
out
mov
outsl
aaa
test
int
push
push
mov
cmp
stos
xor
jg
mov
xlat
jmp
pusha
or
inc
outsb
and
push
iret
cli
mov
sbb
mov
cwtl
xchg
sahf
fs
cmp
cmp
in
pop
lods
sub
xlat
ret
ror
fdivl
pop
insl
jle
arpl
jge
rol
mov
xchg
jns
sub
xchg
test
push
hlt
mov
call
stos
loope
fidivrl
das
dec
ret
int3
loopne
in
shlb
sub
pop
dec
pop
pop
xchg
mov
rclb
push
lcall
dec
out
ss
ljmp
or
mov
xchg
push
cmp
xchg
lock
aad
test
nop
cs
icebp
dec
mov
ret
cmpsl
insl
inc
in
loopne
test
push
mov
mov
mov
xlat
into
jg
andl
test
inc
cmpsl
mov
pop
div
testl
mov
or
orb
lea
jmp
std
sub
and
dec
sbb
mov
mov
mov
lea
leave
faddl
jl
dec
popa
frstor
jle
adc
addr16
push
fucom
lock
movsb
sbbb
imul
cmpl
adc
push
jl
or
in
or
and
shlb
xacquire
sti
cmp
fstps
add
cmp
pop
out
jge
jns
pusha
jnp
jne
and
stos
fidivrl
test
xchg
pushf
ret
imul
sub
test
pop
fstpt
add
add
das
in
cmpsl
lret
mov
repz
mov
out
jl
cmp
fs
inc
cmp
cmp
mov
jecxz
cmp
pop
sti
mov
jmp
stos
jb
sub
std
mov
and
and
or
mov
pop
push
movsb
outsb
lret
fwait
push
cmc
dec
ret
and
or
sub
jge
negb
mov
in
mov
and
xchg
mov
and
add
pop
in
call
leave
nop
push
aaa
stc
xchg
add
cld
rorl
sbb
xchg
mov
push
into
add
xor
push
js
mov
cmp
stos
popa
ja
cmpsb
mov
push
mov
cwtl
into
xor
test
or
inc
mov
and
fcmovu
xchg
xchg
pop
and
xchg
insl
mov
sbb
push
into
adc
enter
pop
xchg
mov
dec
scas
pop
fisubrl
pop
xor
jmp
pusha
leave
xor
mov
push
imull
subb
mov
mov
mov
xor
cltd
jo
adc
or
jle
or
imul
movhps
or
incb
dec
jmp
aad
cmp
scas
jnp,pt
pushf
add
bound
js
shlb
mov
mov
dec
xor
cmpsl
cmpsb
adc
inc
je
pop
cmp
xchg
jge
inc
fs
mov
push
cmpsb
dec
adc
fdivrs
lods
loop
test
dec
add
scas
push
push
test
adc
xor
jmp
and
lea
subl
gs
xchg
cmp
jno
ret
inc
adcb
inc
jp
in
insl
mov
push
in
mov
test
jge
cmpsl
xor
add
cwtl
mov
pop
call
xlat
mov
pop
push
cmpsl
decl
xchg
add
imul
cs
push
mov
jo
lods
iret
mov
in
lret
xor
js
xor
cmpsl
iret
push
pushf
aas
sbbl
mov
in
cmp
and
mulb
rcll
inc
pop
xchg
sqrtps
popa
cmp
adc
mov
xchg
and
pop
jne
cmpsb
cs
mov
xor
xor
stos
into
sub
dec
lea
and
jl
lock
and
nop
call
dec
mov
jns
xchg
jecxz
es
xor
mov
inc
dec
push
xchg
mov
rolb
xlat
mov
adc
sbb
in
add
ljmp
scas
jmp
cltd
pop
icebp
mov
roll
call
xor
rcll
mov
or
pop
test
mov
dec
mov
dec
dec
adc
pop
adc
inc
dec
mov
lods
es
imul
enter
mov
loop
nop
jb
sbb
pop
outsb
pop
lods
pop
call
dec
pop
dec
pop
mov
mov
in
out
fisttps
outsb
mov
push
mov
lods
add
mov
sub
inc
or
mov
adc
sub
inc
in
lret
stos
dec
cmc
push
lock
pop
scas
mov
cmpb
bound
and
push
ljmp
rorb
xchg
add
mov
and
cmp
adc
sbb
xchg
test
fwait
decb
out
filds
fcmovb
stos
xorl
jg
popf
mov
and
add
mov
xor
cltd
sbb
dec
outsl
inc
leave
mov
pusha
data16
fmuls
in
lahf
in
mov
or
js
ret
cmc
inc
cs
int3
dec
dec
lock
daa
pop
push
xor
adc
fstl
jle
fdivrs
dec
or
fsubs
outsl
jno
iret
insb
xor
mov
add
es
pusha
xor
adc
dec
pop
inc
loopne
pop
es
addr16
jle
xor
imul
cmp
xor
xchg
es
decb
lods
test
or
jbe
push
out
cmp
push
ds
test
loope
pop
iret
std
nop
sub
cltd
jbe
pusha
imul
dec
cmp
dec
icebp
pop
shrl
sub
and
or
xchg
push
test
mov
jp
in
mov
lcall
xlat
lds
movsb
add
js
add
out
sti
add
pop
pop
or
mov
jmp
dec
stos
repz
sbb
and
aas
cmp
fldcw
std
push
xchg
adc
pop
jno
mov
sarl
testb
data16
mov
loopne
xorb
movsl
push
cmp
stc
pop
mov
iret
lea
pusha
push
xchg
and
push
in
push
mov
movsb
loope
outsb
outsl
shlb
jge
aas
xor
aaa
or
inc
call
adcl
mov
push
imul
mov
cmp
mov
stc
cmp
cwtl
inc
aad
das
idiv
jae
mov
fdivr
push
lahf
push
pop
dec
sub
xlat
xchg
inc
mov
sbb
and
pop
jno
cli
out
faddl
bound
push
dec
and
stos
mov
cs
into
xchg
push
test
hlt
iret
shll
imul
push
cli
sti
cmc
out
ljmp
dec
in
movsl
jl
cmp
push
flds
inc
stc
inc
out
cltd
cmp
add
call
dec
insb
mov
lock
xor
shlb
es
test
mov
popf
lds
enter
xchg
into
xchg
mov
sbb
and
aad
movsl
mov
into
fwait
jg
cld
and
mov
jbe
pop
pop
mov
inc
dec
dec
and
dec
jmp
insb
mov
adc
pop
sbb
insb
and
cld
gs
sub
mov
rcr
mov
push
aaa
shlb
mov
in
mov
sahf
pop
lret
cmp
cmp
push
pop
or
test
loop
cld
outsl
xchg
inc
mov
inc
stos
fistpll
out
pushf
jae
subb
add
mov
loopne
pop
decl
fsub
and
sti
jle
cmpsl
andl
das
dec
lds
push
scas
and
inc
cwtl
jle
inc
or
add
repnz
pop
psubw
xchg
sub
icebp
push
mov
xchg
in
rcll
push
fcoms
in
and
adcl
mov
sarb
pop
clc
sbb
add
jge
arpl
call
js
pop
inc
sub
xor
or
lds
mov
mov
xchg
inc
push
xor
fs
xchg
mov
mov
mov
pop
inc
cld
xchg
or
stos
pop
xchg
ret
cli
mov
lds
xchg
xchg
and
movsl
repz
mov
xor
test
xchg
aam
stc
int3
fildl
cmp
dec
scas
testl
sub
sbb
pop
and
ret
mov
xchg
xor
dec
mov
into
push
push
mov
das
dec
adc
sarl
cltd
nop
pop
jle
mov
stos
jne
jne
mov
mov
and
jbe
orb
mov
decb
push
mov
cli
adc
dec
xor
jl
inc
js
dec
xlat
das
adc
add
jp
ret
ja
sbb
pop
mov
rol
pop
std
jbe
pop
outsb
mov
dec
jg
lcall
lahf
inc
pop
je
enter
lods
sbb
pop
xchg
jnp
sbbl
xor
jno
imul
call
xchg
cmp
mov
sub
das
fistpl
xchg
scas
jmp
xchg
and
addl
ret
adc
adc
adc
jecxz
loopne
out
divl
in
mov
xorl
pushf
mov
iret
inc
leave
pop
outsb
lea
loope
adc
jbe
pop
xor
xlat
rorl
add
or
movsl
or
and
mov
fidivs
icebp
arpl
test
fiaddl
ret
or
insl
pop
xchg
leave
fcmovnbe
leave
lret
mov
inc
sub
scas
outsb
jle
mov
or
mov
test
or
lds
and
mov
xchg
movsl
dec
hlt
xchg
mov
mov
arpl
xchg
aam
jns
test
mov
ja
out
adc
adc
aam
mov
push
out
or
adc
push
shlb
inc
jbe
test
add
mov
call
lock
jae
mov
inc
ret
push
rcl
cli
xor
mov
jmp
sahf
mov
test
dec
pop
pop
in
mov
adc
push
in
pop
add
pop
call
into
jnp
push
jb
test
fwait
mov
das
lret
test
adc
loop
or
mov
hlt
imul
or
add
stos
cmp
lahf
pop
pop
pop
imul
icebp
pop
in
cwtl
loopne
adc
mov
fs
loope,pt
sbb
sti
cmc
pop
out
mov
mov
divb
cmpsb
lods
sahf
das
push
jne
mov
faddl
jb
dec
test
ret
and
bound
aad
cmp
sbb
xchg
leave
int3
lea
stos
push
lods
sub
cmp
pop
imul
xchg
ss
jno
jb
dec
add
xlat
mov
pcmpeqb
sbb
xchg
cmpsb
das
sbb
or
cltd
push
push
js
mov
inc
ss
rcl
pop
mov
pop
mov
call
fdivs
pop
fcmovne
dec
xchg
adc
lea
lods
xchg
xorl
sub
and
mov
mov
dec
shll
ss
or
inc
dec
outsl
push
mov
outsl
imul
lret
int3
mov
into
jl
or
jbe
andl
imul
push
mov
mov
cld
ret
add
js
movsl
idivb
mov
call
and
sti
daa
mov
adc
js
mov
xchg
cmc
outsb
sbb
hlt
popa
in
jnp
movsl
andnps
pop
rcr
out
inc
fstpl
arpl
hlt
mov
test
and
div
xor
pop
and
xor
pop
int3
movsl
out
and
cmp
cmp
movb
loop
dec
cmp
push
lods
xor
jle
imul
mov
hlt
xchg
cmpsl
sbb
adc
jl
inc
leave
or
jne
test
lret
cmp
loope
fiaddl
inc
shl
scas
adc
fistpl
ljmp
loop,pn
push
and
orl
sbb
mov
adc
push
std
jge
stos
inc
daa
cmpsl
pop
jns
adc
call
cmp
push
or
rcl
or
scas
insl
pop
xchg
xor
mov
add
jmp
and
push
mov
rorl
outsl
out
std
sbb
xor
cltd
add
jl
hlt
sbb
rorb
ja
lods
cmp
mov
xchg
push
into
xchg
repz
jmp
movsb
test
pop
mov
lahf
push
xor
dec
and
push
mov
adc
mov
loop
mov
aad
push
ja
dec
idivb
adc
pop
daa
imul
lret
push
adc
ss
stc
out
inc
imul
mov
push
std
mov
icebp
movsl
in
cwtl
in
sub
and
stc
xchg
pop
mov
nop
push
mov
dec
mov
xchg
scas
aad
cs
dec
in
hlt
pop
push
sarl
stc
and
popw
fucomi
mov
pop
jle
insb
int
icebp
inc
jge
xchg
push
cli
negl
push
andl
sbb
xor
or
add
jbe
stos
mov
mov
in
inc
movsb
enter
dec
or
jnp
adc
sub
add
out
jecxz
cld
add
mov
adc
pop
jbe
fdivrs
add
cmp
dec
test
insb
push
mov
les
subb
and
lea
mov
mov
pusha
jmp
sbb
push
setns
lods
gs
stc
add
pop
daa
push
mov
leave
sub
out
xchg
adc
out
loope
push
pop
dec
pushf
mov
ja
fstpl
jg
sub
pop
mov
cmp
sbb
push
xchg
push
sub
daa
and
frstor
xor
mov
enter
lcall
xor
mov
inc
sarl
mov
sbb
add
sahf
xchg
jbe
and
jp
or
outsl
pop
imul
lret
lea
or
xor
xchg
jge
lods
xlat
lcall
and
jo
test
xlat
adc
lods
addr16
pop
sahf
dec
fdiv
loop
int3
sbb
dec
pop
lret
sub
mov
loope
movswl
cmp
mov
xor
mov
jns
aad
shr
cs
and
pop
test
push
aam
mov
loopne
mov
fidivrs
in
xchg
mov
mov
or
imul
sbb
out
push
push
and
sbb
jmp
push
push
mul
std
repz
lcall
pop
std
push
les
movsl
adc
pop
and
or
push
in
int3
add
sub
cs
jbe
add
push
push
stos
or
sahf
xor
in
clc
pop
js
mov
js
dec
into
inc
dec
mov
lahf
ja,pn
lret
bound
shl
sub
xchg
inc
shr
mov
das
sbb
dec
mov
mov
rorl
push
ljmp
mov
mov
sub
and
hlt
stos
rclb
in
mov
shrl
xchg
mov
xchg
adcl
adc
cmp
xor
into
fcoml
fiaddl
push
cmp
enter
cmp
xor
xor
notw
sbb
cli
mov
sbb
jne
insl
adc
pop
push
sbb
push
mov
xor
push
or
dec
sbb
fisubs
and
movsb
sub
mov
pop
lods
lahf
add
push
jp
xchg
push
jge
leave
pop
or
mov
adc
xor
push
fs
fs
lahf
sti
stos
cli
leave
repz
cmp
ss
leave
mov
mov
xchg
mov
out
dec
pop
inc
xchg
cltd
cmp
test
mov
pop
jo
mov
test
sub
out
xor
clc
add
mov
or
enter
test
clc
sbb
mov
xor
das
add
sti
cmp
jae
dec
test
aad
ss
scas
cmp
andl
jnp
mov
fldt
je
pop
in
data16
aam
and
iret
cltd
pop
ds
imul
jns
cmp
jae
xor
dec
or
and
jae
int3
fsubrs
loop
dec
xor
or
cmp
jge
seto
test
or
stos
int3
flds
push
pop
inc
out
ljmp
clc
dec
jns
mov
mov
subb
and
inc
ds
lods
lahf
cmp
cmp
mov
sbb
or
mov
and
popf
rolb
dec
xor
push
mov
mov
popf
mov
lods
xchg
pop
adc
mov
sbb
jmp
mov
mov
mov
ret
fcmovb
mov
jo
push
mov
stos
push
stos
sbb
xor
cmp
daa
insl
push
mov
dec
push
sub
shrl
leavew
addb
push
ss
push
rclb
adc
mov
push
jecxz
jnp
cmp
movsb
pop
mov
insl
cmp
fs
repnz
ljmp
rcl
xlat
je
add
mov
inc
imul
daa
iret
int3
mov
add
mov
push
fcmovb
cs
lcall
ds
sub
sub
push
imull
or
dec
mov
mov
jle
sub
js
pop
ret
pop
inc
cli
ljmp
push
mov
enter
inc
lahf
jmp
xchg
in
cmp
inc
and
push
mov
jns
movsl
scas
xor
push
jl
inc
push
xor
jmp
out
call
pop
pop
push
or
pop
popa
fs
add
clc
sbb
popf
mov
sbb
add
pusha
and
mov
mov
sahf
pop
and
testl
aad
pusha
cmpsb
lcall
cs
inc
pop
or
lock
mov
hlt
push
jno
sbb
cmpsl
inc
ret
movsl
add
pop
scas
jecxz
fdivrl
inc
sbb
mov
and
je
push
mov
xor
lods
loop
daa
adc
popf
in
or
shlb
push
sbb
jns
cltd
pop
adc
sbb
add
mov
sbb
pop
sub
mov
mov
fsubrs
call
rolb
mov
pop
ja
xchg
mov
xlat
dec
fucomi
xor
stos
mov
xchg
fnstsw
ret
mov
test
xchg
movsl
enter
push
cmpl
sbb
jge
int3
inc
stc
sub
lods
rorl
push
mov
rorb
hlt
fwait
xorb
sub
mov
imul
dec
insb
inc
loope
repz
jb
adc
jne
pop
lods
nop
cld
jge
data16
mov
inc
cmp
xor
sbb
repnz
mov
dec
gs
es
or
push
sbb
xchg
inc
fs
test
lock
lret
mov
aam
mov
test
fadds
sub
add
lods
mov
xor
in
ret
imul
mov
gs
popa
flds
stos
jmp
mov
in
roll
rcrb
andl
sbb
fs
cmp
sbb
dec
inc
xor
xor
in
push
orl
pop
enter
enter
ja
lods
les
pusha
shll
jmp
fdivl
dec
push
arpl
aam
js
mov
xor
shr
pusha
ror
lods
push
jmp
ret
dec
xchg
jb
cwtl
xchg
dec
cmp
adc
outsl
loope
adc
and
jle
rcrb
and
xchg
cmp
out
aam
mov
inc
enter
mov
or
data16
enter
and
add
add
mov
and
ret
je
aas
repz
mov
xchg
jae
outsl
rclb
xchg
jnp
fisttpll
js
xor
shll
ds
test
call
mov
outsl
sub
xor
repz
pusha
mov
pop
sbb
imul
sbb
add
xor
pop
jne
ljmp
and
dec
divl
in
sahf
fistpll
jmp
mov
jbe
pop
fdivrl
sub
ja
enter
xor
sahf
enter
pushf
stos
adc
mov
jae
lcall
dec
xchg
mov
pop
and
sub
ds
mov
sbb
out
inc
pop
outsb
lret
pop
imul
dec
jl
pop
gs
test
int
jnp
xor
out
in
rcr
mov
push
inc
scas
push
xchg
test
sbb
push
pushf
sbb
out
xchg
push
jae
rcl
xor
xor
cmp
jl
push
cli
mov
std
adc
inc
movsb
adcb
icebp
fst
shrb
lock
imul
sbb
out
inc
movsl
cmp
icebp
sbb
mov
mov
ror
adc
mov
das
push
loope
mov
test
lods
pop
enter
xor
lret
call
jns
sbb
test
iret
and
xchg
loopne
in
cs
and
mov
lea
inc
scas
jmp
clc
inc
push
stc
popf
add
jmp
xchg
ljmp
and
pop
sbb
inc
in
or
xchg
jmp
fnstsw
orl
add
inc
rorl
fiaddl
sbb
or
lret
movsbl
je
xor
jmp
pop
sub
push
jg
cli
and
sub
jle
lods
sub
shlb
repnz
lock
jecxz
rep
sti
mov
je
push
test
or
dec
inc
xchg
mov
and
int3
mov
out
pop
and
iret
jnp
gs
xor
lods
jmp
push
fadds
fsubrl
pop
stos
arpl
aam
fs
in
xor
or
decl
movsb
lods
xchg
out
cwtl
jge
repnz
imul
test
sbb
xor
hlt
jecxz
lds
xor
inc
inc
cmp
test
sub
call
fwait
hlt
scas
lcall
jns
sbbl
aaa
cmp
adc
pop
dec
xchg
outsb
jmp
push
jge
test
add
sub
aaa
ss
mov
mov
popa
adc
pop
xor
inc
push
ficoml
push
push
xchg
or
dec
lahf
and
fs
sub
mov
clc
mov
and
mov
or
pop
mov
pop
or
cmp
dec
jecxz
andb
dec
mov
sub
popf
popa
add
mov
or
leave
sbb
cld
mov
add
push
fs
or
shlb
jae
mov
and
push
ja
xor
and
jg
dec
add
fcomps
aam
adcb
popa
adc
xor
fsubrs
cld
and
jmp
sub
mov
ss
ret
sar
shlb
mov
push
mov
push
or
pop
cld
fs
and
mov
add
xlat
ret
insl
xchg
bnd
flds
pop
mov
fs
or
pop
adc
in
clc
mov
sub
mov
or
mov
inc
and
sti
xchg
mov
lods
and
icebp
cmp
sub
mov
mov
fisttpl
and
dec
mov
insb
mov
pop
mov
clc
leave
jno
jmp
or
mov
movsl
int
arpl
test
nop
in
movb
xchg
outsl
int3
mov
inc
fdiv
fisubl
int3
push
jg
test
repnz
ficoml
mov
lret
sbb
sub
xor
stos
dec
dec
ret
push
cmpsl
rcrb
stc
inc
pop
mov
faddp
xchg
pop
push
arpl
out
sbb
in
movsl
aam
jg
addr16
pushf
add
cmp
inc
add
popa
add
jle
cmp
mov
adc
adc
cs
adc
test
pop
lret
ret
push
aaa
dec
movsl
fcoms
inc
jb
cmp
pusha
push
sbb
pop
jno
mov
and
inc
ljmp
fldt
sbb
subb
aad
cs
leave
xor
ret
pop
dec
lahf
xor
hlt
push
rcrb
mov
js
xchg
xchg
adc
cmp
dec
push
xor
mov
sbbb
cmp
aam
or
sub
cmp
xchg
jbe
xchg
jne
gs
imul
popf
push
mov
cwtl
dec
std
mov
dec
jl
stos
vmwrite
mov
dec
dec
cld
mov
sahf
push
scas
cmpsl
jecxz
and
pop
sahf
mov
add
adc
arpl
out
dec
out
jae
aas
adc
mov
out
jge
mov
jae
jnp
bound
shlb
dec
xchg
pop
cmpsl
imul
ja
inc
or
loop
filds
mov
dec
mov
lret
movsb
mov
sbbb
cmp
repnz
test
insb
inc
jp
inc
mov
jae
add
ja
dec
test
push
or
or
xchg
out
cs
xchg
fcmovnbe
cmp
subl
dec
out
and
cli
sbb
flds
jnp,pt
loopne
outsl
cmp
rcr
push
cmp
push
mov
jns
ljmp
pop
loope
loope
or
out
fdivl
or
jmp
lods
dec
fcoms
scas
push
push
add
and
mov
jmp
or
movsl
pusha
fsubrs
xor
pop
outsb
add
shlb
xchg
and
scas
pop
mov
add
pushf
push
fcompl
push
call
insl
xor
fwait
mov
push
mov
or
ret
adc
cmp
dec
mov
and
push
pop
push
imul
or
js
adc
or
out
sbb
jb
aad
mov
or
dec
push
sub
inc
test
cmpl
mov
or
fs
mov
imul
jmp
push
mov
sbb
pop
bound
mov
sbb
and
cmp
jge
pop
pop
mov
adc
add
sahf
cmp
cmp
dec
lea
xchg
mov
xor
ret
jg
pop
cmp
scas
mov
mov
push
mov
mov
lahf
leave
popf
xchg
cmp
inc
pusha
out
in
scas
mov
xlat
arpl
adc
fwait
lret
add
icebp
sbb
pop
jns
mov
leave
mov
jo
jmp
push
fdivs
arpl
pmaddwd
push
out
push
xlat
mov
pop
jl
in
int
test
jmp
inc
pop
push
gs
inc
jnp
jns
jp
ficoms
pop
lret
icebp
int
and
pop
test
cwtl
cmp
jo
fdivl
or
fcomi
xor
push
xor
je
test
jmp
negb
xchg
xor
jo
sbb
fs
cs
pop
xchg
ja
sbb
arpl
and
inc
fdivr
pusha
mov
sarl
cmp
les
das
mov
outsb
lea
daa
ja
jg
mov
jns
aad
jge
adcl
das
in
cmc
test
pop
sub
push
mov
pop
sbb
cmp
je
fisttpll
sbb
fldl
xchg
testb
sbb
add
aaa
mov
insl
dec
xchg
sbb
rol
mov
xchg
mov
pop
jle
imul
in
bound
pop
imul
cmp
or
fistl
jnp
mov
xchg
xchg
push
sub
scas
mov
mov
out
outsl
sbb
incl
xlat
push
popa
jmp
push
ja
enter
movsl
xchg
ss
mov
ret
ja
dec
dec
fdivp
xlat
lahf
jle
push
pop
mov
filds
sub
stos
cmpsb
into
iret
js
pop
in
fwait
inc
scas
adc
xchg
and
jmp
mov
cmp
adc
mov
pop
jnp
lret
rorb
xchg
push
flds
outsb
sub
mov
ljmp
loop
iret
dec
ficompl
mov
adc
mov
es
das
mov
sarb
dec
mov
mov
shrl
push
sbb
mov
scas
in
mov
sbb
xor
sub
lods
jl
stos
cmp
add
imull
out
mov
shrb
jecxz
in
adc
cmovnp
test
call
xlat
sub
push
or
test
scas
mov
negl
mov
mov
sub
push
cld
lcall
je
lcall
into
add
pop
pop
jae
pop
stos
cmp
push
adc
pop
xor
stos
repz
cmp
xchg
mov
push
adc
cmpsb
int
sbb
cmp
xchg
cmp
repz
pop
cmc
iret
out
push
lret
or
fcomps
inc
xchg
xchg
xor
in
loope
xchg
mov
adc
arpl
adc
jecxz
dec
sbbl
mov
and
jl
xchg
outsb
jmp
xor
push
push
pop
add
jl
jbe
jp
or
ss
push
fnstenv
fcomps
les
and
mov
int3
enter
icebp
ret
jae
inc
mov
imul
inc
sar
outsl
lock
outsb
mov
sub
data16
jl
imul
lds
sub
sbb
mov
cmp
xor
jae
mov
arpl
inc
or
xchg
xor
test
and
jp
popf
and
cmp
bndldx
inc
lods
out
push
aad
lahf
jecxz
ds
jge
jne
movsl
jne
jnp
or
inc
mov
pop
or
jge
imul
imul
mov
push
dec
inc
mov
pusha
jo
les
xor
repz
jp
cmpsl
jno
push
ret
fs
push
xor
push
mov
sbb
cmp
cmp
add
push
fimuls
cmp
pop
mov
xor
xchg
add
js
movsb
insl
jge
leave
xchg
fdecstp
add
xor
repz
insb
ret
mov
outsl
sbbl
push
add
les
les
pop
daa
dec
jno
sub
icebp
ljmp
int3
daa
mov
push
mov
or
mov
or
mov
mov
xchg
pop
or
sub
rorb
popa
jnp
aas
clc
jg
inc
sbb
mov
in
push
fwait
adc
jge
in
jg
or
ja
xor
pop
or
rcl
pop
pop
lcall
mov
xchg
dec
or
dec
dec
pushf
in
jmp
jl
mov
ja
lds
dec
adcb
xchg
scas
aas
inc
loope
mov
push
xor
pop
frstor
jne
out
inc
mov
xlat
mov
cmp
cltd
mov
or
cmp
xor
sahf
std
inc
pop
sbb
adc
lods
pop
and
pop
test
je
pop
or
incl
sub
stc
imul
repnz
out
xlat
xchg
rol
lea
dec
inc
mov
mov
shll
sarl
in
je,pn
cmpsl
dec
shlb
lahf
repz
sbb
in
and
rcrl
xchg
sub
inc
mov
cwtl
xorb
rorl
xor
imul
add
cmc
je
sub
lret
repnz
js
and
movsl
adc
lcall
int3
and
div
lock
xor
push
jns
push
adcl
hlt
gs
test
xchg
and
sub
pop
sub
stos
fcmovnb
cli
or
mov
mov
loop
stos
xlat
push
les
xlat
mov
xor
mov
dec
jae
xrelease
sbb
movsb
outsb
lea
sub
cmpsl
mov
add
dec
setp
adc
rclb
cmpsb
lea
jbe
imul
cs
pop
xchg
loop
push
pushf
xchg
or
stos
ljmp
movsb
xchg
sarb
leave
xchg
push
lock
test
pop
and
fwait
ja
stc
addb
hlt
or
sub
push
push
repnz
gs
xlat
mov
xor
push
cmp
mov
add
rclb
sub
daa
popa
jmp
push
sbbl
mov
sub
sti
outsb
pop
inc
lods
sub
sub
sub
cmp
sbb
nop
or
sarl
cmp
mov
sbb
or
in
outsb
scas
fldl2t
fldt
addr16
sbb
pop
fwait
mov
lds
push
sbb
xor
imul
dec
mov
pop
out
lods
fwait
clc
aam
sub
iret
outsl
and
dec
xor
rcl
sar
rcr
push
mov
stos
in
ja
and
sahf
cwtl
fisttps
xor
jecxz
push
add
xchg
scas
addr16
mov
add
movsb
and
inc
add
or
or
pop
mov
inc
stos
mov
mul
sbb
sbb
sbb
sbbb
stos
pop
aas
loope
dec
inc
pop
and
ja
inc
cwtl
pop
inc
xchg
gs
imul
xor
push
incb
dec
pusha
jbe
jne
xchg
mov
xchg
xchg
inc
shlb
addr16
iret
outsl
sub
fdivl
dec
sbb
xor
cld
cmp
xor
rcrb
ficoml
out
push
rol
arpl
test
arpl
push
shll
xchg
sub
shrl
xlat
femms
dec
xchg
cmp
push
mov
xor
out
xor
sub
es
lods
fwait
inc
sub
cwtl
sbb
out
clc
jl
fnsave
ret
jmp
or
jmp
inc
pop
inc
sub
xlat
cmp
mov
mov
pop
cvtps2pd
int
sbb
arpl
jae
add
inc
stc
addr16
or
mov
std
jmp
jmp
push
mov
mov
icebp
mov
or
fs
cltd
mov
add
inc
push
pop
push
pop
movsb
sub
leave
mov
mov
mov
xor
xchg
fsts
jmp
sub
push
shll
jo
and
xor
mov
lds
mov
flds
sbb
test
fstl
add
in
inc
sbb
lcall
outsb
and
repnz
shrl
or
les
mov
add
and
jae
jl
mov
test
jae
insb
movsb
inc
jne
fdivs
push
sbb
fstl
mov
sahf
mov
arpl
enter
je
in
push
insl
sub
out
push
imul
mov
ljmp
test
sub
jecxz
cmpsl
adc
sub
ljmp
aas
ret
adc
push
mov
daa
fsubp
lds
mov
movsb
sbb
stos
out
and
adc
shll
mov
lods
cmp
adc
pop
out
inc
sbb
push
pop
aaa
add
inc
fstpt
mov
inc
insl
jle
lock
inc
add
stc
and
pop
xchg
adc
cmp
pop
cwtl
or
jne
inc
daa
sbb
icebp
xchg
xor
out
js
add
int3
cltd
movsb
stc
cmp
mov
jl
ljmp
test
mov
nop
scas
lea
mov
cmp
subl
test
rol
shrl
ds
xchg
and
outsl
jmp
cmc
cmp
push
pushf
mov
and
inc
mov
loop
out
cmp
aam
cmp
leave
scas
test
test
jle
insl
and
pop
jo
mov
dec
inc
hlt
xchg
or
adc
out
and
mov
sarb
mov
pusha
xor
or
lahf
insl
daa
sti
xchg
push
push
sbb
mov
add
push
xchg
pop
jg
or
das
jnp
fwait
popf
pusha
pusha
loop,pt
push
sarb
xchg
push
mov
test
mov
jle
xchg
idivl
and
fsub
cmp
push
inc
dec
out
sub
xor
aas
pop
in
jp
inc
cmpsl
cmp
mov
arpl
mov
xchg
add
test
arpl
or
inc
adc
insl
xor
rorl
mov
aam
mov
inc
out
or
je
mov
cmpsl
scas
lahf
imul
iret
nop
jmp
mov
jle
daa
mov
dec
shl
pop
lret
jne
or
mov
mov
dec
cmp
and
push
sbb
cld
mov
xchg
jmp
cltd
movsl
test
inc
mov
mov
xchg
adc
inc
aad
cmpsb
cmc
dec
insb
mov
fldt
imul
dec
icebp
sub
mov
dec
movsl
lods
or
add
test
push
fwait
push
jno
fstl
je
arpl
cmc
repnz
and
imul
fldl
xchg
int3
mov
or
push
sub
psubsb
jae
mov
cmp
push
mov
cmp
ds
lea
sbb
push
fadds
xchg
inc
js
mov
jge
push
jp
shrb
dec
popa
xor
jmp
mov
das
jno
sbb
jg
jecxz
imul
fs
mov
jo
fmul
adc
sbbb
cmp
xchg
or
add
push
dec
inc
cltd
inc
cmp
test
dec
arpl
mov
in
adc
adcl
mov
push
pop
enter
subb
stc
mov
sub
push
notb
aad
mov
out
iret
push
mov
mov
push
mov
xchg
lret
sbb
fwait
mov
adcl
ret
mov
xorb
jbe
cli
and
out
aam
xlat
push
sbb
js
repnz
in
add
lret
into
pop
int3
lret
mov
fcmovb
mov
pop
enter
test
call
mov
xchg
jno
and
jae
adc
shlb
and
jo
sbb
sub
out
inc
fisttpll
popf
fs
std
add
pushf
xchg
fsubl
rcr
jae
dec
cld
in
sbb
jae
dec
sub
stos
outsl
and
nop
loop
sarb
jl
roll
mov
inc
sbb
sbb
pop
mov
push
or
push
inc
divl
ret
lock
mov
dec
jne
jno
xchg
sbb
das
dec
fwait
dec
inc
and
ljmp
mov
lods
jmp
andl
jg
fisubrs
dec
lods
push
jns
and
xchg
insb
push
jo
pop
and
cltd
stc
sbb
fwait
adc
inc
loopne
andl
call
mov
addb
lahf
mov
xchg
fistl
call
adc
pushf
pop
jg
or
addr16
cmp
ja
pop
mov
dec
call
fnsave
movsb
add
push
pop
adc
sbbl
pop
sbb
xchg
bound
dec
push
xchg
in
mov
nop
sti
test
pushf
or
dec
dec
arpl
push
xor
mov
inc
push
dec
mov
cmc
test
out
ret
test
test
ss
pop
popf
imul
pop
mov
pop
out
pop
mov
mov
icebp
push
push
jp
push
push
aaa
movsb
in
out
addr16
mov
cli
cli
xor
xchg
arpl
adcl
imul
dec
inc
push
or
jnp
scas
jns
mov
cmc
mov
repz
enter
dec
push
pop
push
jae
mov
pop
mov
jp
std
stos
fsubrp
aam
lea
fs
and
xor
mov
mov
loop
ja
push
cmp
ret
fstpt
inc
inc
push
sbb
ret
jno
xchg
jo
push
cmc
ljmp
pop
push
test
lahf
test
call
rclb
dec
insb
ds
add
mov
imul
sbb
mov
mov
clc
sub
jp
lea
push
leave
jg
call
outsl
repz
xor
sub
jle
cld
data16
and
decl
popa
jg
in
xchg
xchg
jmp
iret
jns
mov
mov
or
es
xor
out
ja
test
cmp
sub
mov
nop
or
sbb
dec
cld
sub
out
cmp
xor
sub
rorb
cmp
es
ret
mov
outsb
jmp
lahf
loopne
out
push
push
dec
inc
dec
popa
xor
std
xor
adc
and
les
subl
mov
ret
in
jno
push
inc
add
insb
fnstenv
mov
xor
jmp
movsb
fdivs
inc
push
test
out
pop
notb
stc
pop
movl
push
testb
fisubs
xchg
out
mov
lahf
push
or
xor
xchg
pop
cmp
imul
xchg
leave
mov
push
cld
cmpsb
in
sbb
sbb
xorl
and
shlb
pushf
movsb
sbb
loop
jae
add
xchg
cltd
mov
or
stos
js
push
std
hlt
cwtl
sub
mov
out
cwtl
or
enter
pushf
sbb
add
out
leave
ret
mov
cltd
pop
dec
lahf
mov
ret
push
inc
cs
xchg
mov
sub
add
and
dec
and
mov
pop
push
lods
jne
pop
aad
mov
cmpsb
lock
mov
xchg
jp
jge
pop
mov
stc
mov
ret
and
pop
add
fidivrs
xorb
in
in
icebp
popf
cmp
mov
data16
pusha
or
sub
daa
jle
rcrl
fnstsw
sub
mov
xlat
scas
mov
mov
xor
addl
cmpsb
fistl
rolb
cmp
out
jae
in
xchg
jmp
sub
scas
mov
sbb
icebp
jle
dec
and
movsl
in
cmp
test
pushf
push
mov
rolb
xlat
imul
cmp
xchg
fs
sbbb
dec
and
icebp
xchg
insb
inc
adc
pop
cmpsb
push
frstor
insl
lret
push
in
and
lahf
cmpsb
push
movsb
fwait
aas
in
stos
pop
stos
push
or
mov
adc
shlb
jecxz
inc
das
bnd
xor
add
ret
scas
pusha
mov
jge
cltd
adc
sti
push
mov
stc
ljmp
shlb
nop
scas
fadd
call
cmpsl
stos
dec
shl
or
cmp
push
sbb
or
inc
es
or
into
shlb
popf
or
xor
and
lret
imul
and
cmp
or
stos
inc
cmpsl
shrb
sub
xor
xchg
jmp
sub
inc
je
adc
insl
sub
pop
sub
inc
aam
clc
and
es
inc
dec
pushl
jge
add
sbb
fs
cld
sub
and
xor
fwait
cmp
add
push
gs
mov
scas
stos
pusha
cmp
outsl
insl
inc
sti
and
sahf
jb
jmp
ljmp
mov
cmp
mov
lahf
test
arpl
or
pop
cmp
pusha
cli
stc
mov
and
inc
ret
cs
pop
xor
cmpsb
pop
clc
or
sub
mov
add
repnz
addr16
outsb
rcll
out
call
fstpl
add
xor
aam
std
jmpw
js
bound
xor
xor
data16
and
in
mov
mov
add
pop
and
aad
loopne
lahf
push
pop
mov
clc
outsl
cmp
sub
sub
pop
mov
adc
sbb
jb
pusha
cmc
inc
enter
adc
xchg
mov
cli
pop
xchg
in
xor
in
mov
add
xor
xchg
pop
cwtl
pop
addr16
mov
sahf
mov
pushf
lea
out
loope
pop
ljmp
rcl
stc
pop
subl
inc
arpl
push
sbb
out
mov
rcll
push
mov
mov
dec
inc
jle
mov
fistpl
mov
xchg
push
aas
mov
cwtl
shl
add
popa
sti
ds
mov
idiv
lcall
inc
inc
and
xchg
cmpsb
pop
dec
push
int
and
hlt
push
aas
xchg
jg
lods
mov
dec
xor
shl
and
pop
jno
sub
sub
and
dec
push
xchg
xor
jmp
into
clc
push
sbb
icebp
inc
pop
fsubl
mov
mov
adcb
sti
call
std
adc
or
and
push
aaa
mov
pushf
sbb
hlt
push
push
cmp
shlb
lods
xchg
pop
fidivrl
push
jle
inc
lock
mov
cmp
and
jb
cmc
sub
cmp
scas
cmpsl
movsl
adc
sbbl
push
aas
dec
xchg
dec
ss
mov
mov
sbb
push
xchg
or
mov
adc
adc
xor
lods
push
inc
xor
out
xchg
adc
out
pop
scas
mov
jb
lock
push
lcall
addb
dec
xor
ret
mov
push
jp
lret
lock
and
lods
sbb
jge
lret
adc
sahf
mov
or
insb
lahf
cmc
jae
add
ficoms
gs
lahf
xor
adc
fldt
adc
cmpsb
xchg
iret
inc
call
daa
pop
inc
cltd
jp
xor
pop
ja
out
movsb
sahf
push
mov
sahf
adc
sarl
fistpl
cld
mov
adc
pop
dec
adc
test
ja
mov
andb
mov
add
or
push
hlt
push
in
mov
test
sub
addr16
xchg
loop
aad
shrl
push
mov
mov
movsb
add
sbb
rolw
cs
sbb
push
pusha
ja
mov
fs
aas
fisubrl
out
rcr
sbb
dec
loope
mov
test
xchg
xorb
adcb
dec
xchg
int3
sbb
popf
dec
sbb
aam
pop
aad
xchg
mov
jl
pop
dec
test
push
push
jp
push
dec
xorb
icebp
rcrl
arpl
push
inc
js
mov
mov
ret
lds
inc
dec
sti
orl
mov
cmp
push
mov
jl
jo
pop
cmp
fcompl
ds
mov
mov
arpl
dec
jmp
out
xsha256
cmpsb
adc
mov
fwait
ja
ss
pop
sub
lods
ja
and
jne
pop
repnz
xchg
imul
pop
jmp
mov
and
pop
je
adc
cmp
push
loope
adc
add
lods
leave
fmull
pop
pop
jl
or
mov
xchg
xor
inc
negb
in
shll
dec
sub
bound
bound
xchg
and
xchg
mov
push
enter
jl
xlat
popf
outsl
push
inc
das
add
ret
repz
subl
add
mov
push
jmp
or
jl
cmpsl
ret
inc
cmp
add
xchg
xchg
jno
gs
shlb
movsb
xor
push
test
push
sbb
mov
and
rorb
cmp
adc
test
subb
fs
pop
xor
repz
xor
jl
decb
xchg
imul
push
jp
and
jge
ret
das
push
cmp
push
cmp
fsts
lahf
testl
pop
insl
insb
in
daa
sahf
inc
cmp
notb
stos
mov
into
test
and
push
loop
pusha
cli
sbb
in
jl
lods
in
xchg
scas
mov
add
stc
push
mov
loop
leave
jb
cmp
pop
lret
jo
dec
mov
int3
int
pop
xorl
xchg
test
fwait
inc
and
aaa
cmp
mov
arpl
mov
xor
and
pop
das
arpl
stos
rorb
fimuls
scas
or
rcrb
shll
dec
dec
andb
sbb
inc
clc
clc
push
mov
xor
leave
out
or
mov
idivb
xorb
js
jns
sub
jp
daa
jecxz
add
mov
stos
jp
xchg
dec
adc
cmp
ljmp
jp
mov
pop
inc
imul
pop
imul
lods
and
ljmp
or
xor
stos
decb
cmc
pop
dec
sbb
je
mov
jnp
je
mov
mov
push
mov
inc
add
cmp
or
inc
les
mov
xchg
jmp
mov
mov
push
lods
jl
cli
pop
hlt
xor
in
test
push
std
aad
loopne
pop
jl
pslld
inc
dec
call
arpl
scas
mov
sbb
ds
rcrb
std
or
rorl
out
ss
pop
xor
leave
dec
dec
lcall
push
sub
jmp
push
loopne
sarb
and
and
lea
mov
lea
ret
inc
out
jmp
in
jg
sbb
sahf
cs
es
jmp
rolb
mov
mov
negb
and
xchg
fs
fidivrl
pushf
shl
imul
mov
popa
ja
jp
xchg
cmpsb
push
dec
lcall
or
ljmp
xchg
shl
pop
ljmp
pop
sbb
loopne
arpl
mov
lea
dec
lea
test
mov
cmp
jnp
lcall
mov
test
push
mov
testl
pop
mov
sub
mov
mov
sbb
iret
and
movsl
jbe
lahf
das
pop
jge
mov
sub
ja
push
gs
lret
mov
pop
pop
addr16
lret
pop
jo
sub
pop
cmpsb
or
pusha
or
push
mov
movsb
jnp
daa
retw
and
add
cmc
lcall
scas
adc
iret
xchg
add
mov
mov
rcrb
gs
dec
int
inc
jp
lcall
orb
das
adc
jae
les
jmp
ds
dec
ret
pop
rcl
dec
subl
adc
sub
test
gs
fwait
pop
sub
sub
jae
shr
out
loopne
movsb
inc
mov
xchg
rcr
mov
scas
add
sbb
out
mov
scas
mov
and
sub
ret
push
mov
pop
xor
inc
repz
xchg
sahf
lock
mov
notl
sti
inc
xchg
and
mov
xchg
lret
jae
push
inc
push
sub
mov
std
xor
mov
mov
or
cmpsb
sbb
mov
mov
dec
test
jecxz
scas
adc
jnp
addr16
cmpsl
ljmp
jmp
cwtl
popa
jg
jge
mov
fdivrl
outsl
xchg
xor
cmp
test
out
iret
pop
out
pop
pop
lret
sub
and
xor
pusha
xor
push
sbb
adc
and
dec
andb
sub
jge
jge
daa
and
pusha
mov
mov
cmp
push
stc
sarb
pop
int3
xchg
xor
inc
xor
sbb
in
jae
xor
aaa
and
rcr
pop
jge
adc
mov
lcall
enter
addps
or
jg
or
js
add
lcall
mov
jg
adc
jae
or
and
stos
enter
mov
enter
or
sahf
mov
sub
sbb
jl
sub
out
mov
fdivs
inc
gs
fwait
mov
push
out
outsl
sahf
mov
fisubrl
aaa
xchg
jbe
xchg
stc
push
imul
lahf
das
stos
cmpsl
inc
rcll
xor
pop
notl
andb
xchg
pop
insb
test
inc
pop
adc
int3
mov
iret
cmpsb
jo
movsl
and
cli
ja
lahf
jnp
cmpsb
add
shrl
pusha
add
lahf
xchg
test
movsl
jne
xchg
lock
push
fidivrs
mov
pop
add
cwtl
jg
lret
adc
dec
push
int
das
aas
movsb
add
inc
jmp
mov
sub
dec
or
or
insb
clc
shrl
sub
cmp
dec
xchg
mov
jo
fwait
xor
lret
enter
jno
sub
mov
mov
jae
or
xchg
in
push
int3
or
and
push
xor
and
dec
bound
addr16
mov
out
dec
adc
mov
fmuls
outsl
sub
in
jmp
pop
sbb
cmp
inc
stos
fbstp
jge
jge
and
sub
xchg
outsl
pop
shlb
aaa
xchg
out
ret
addl
mov
int3
mov
enter
mov
scas
and
mov
ss
ret
mov
and
lods
int3
rcr
jecxz
add
push
mov
movsb
inc
push
xor
add
sbb
scas
movsb
mov
pop
jne
in
adc
add
shll
mov
xchg
add
push
and
pop
add
dec
scas
loope
cmp
sub
and
aad
aam
or
out
dec
pop
jg
jbe
outsb
test
inc
das
mov
sbb
pop
sbbb
je
stos
cmp
loope
addb
mov
mov
loope
mov
jp
nop
dec
scas
cmp
sarb
inc
or
leave
popf
fsubrl
mov
cmpsb
gs
and
push
test
xchg
jmp
mov
cmp
les
pusha
add
outsl
adc
lock
mov
mov
pop
repz
push
mov
gs
or
addr16
push
push
sti
insb
xchg
xor
fmul
mov
out
test
mov
sub
orl
xchg
loopne
sarl
mov
and
push
iret
into
mov
dec
fwait
xor
movsb
mov
lcall
inc
mov
inc
sub
into
adc
mov
aas
pusha
into
ret
hlt
xorl
mov
sbb
subl
imull
adc
insb
adc
gs
pop
mov
mov
jnp
ljmp
xor
add
xor
cs
jns
cmp
or
out
sarb
mov
add
call
inc
mov
or
imul
or
mov
int3
insb
jp
dec
imul
pop
lcall
and
jns
jb
shll
ret
jb
pop
sqrtps
call
push
sbb
movsl
das
mov
add
mov
aam
mov
push
movsb
mov
popl
movl
je
dec
push
movl
mov
cmpsl
mov
mov
adc
test
int3
add
sbb
inc
mov
movsb
mov
mov
andb
add
frstor
mov
cmpl
xchg
fildl
cmp
aam
pop
fcmovnu
xchg
add
iret
cmp
repnz
mov
shl
imul
and
xchg
lcall
mov
cmc
xor
and
mov
mov
adc
xchg
mov
enter
inc
insl
sub
test
mov
mov
jecxz
in
fnstcw
int3
inc
xor
jo
mov
or
mov
xchg
rcll
data16
mov
aad
mov
out
call
aaa
cmpsb
xor
dec
inc
sub
add
fisubrs
sub
xchg
mov
push
stc
imulb
call
and
jle
inc
ja
add
icebp
cmp
lds
dec
icebp
jnp
shr
mov
insb
add
mov
mov
jle
and
jno
jne
mov
dec
scas
sbb
fwait
sub
lods
shlb
insb
inc
xchg
adc
jne
push
les
imul
sbb
dec
cwtl
xchg
fisttpll
or
fcompl
mov
xor
data16
inc
mov
gs
pop
xchg
xchg
out
fs
adc
mov
pop
ret
pop
inc
sbb
call
stos
or
cmp
aad
sub
mov
xor
ja
sub
sbb
jecxz
mov
scas
mov
fcoms
inc
lea
sbb
adc
test
loope
sbb
sahf
or
mov
inc
leave
aam
in
xchg
insb
loop
scas
dec
cmp
and
mov
fsub
inc
into
in
ljmp
ret
push
jne
or
inc
js
test
in
and
push
and
dec
loop
je
aad
adc
cmp
pop
or
push
jne
jl
fildl
and
sbb
in
roll
mov
mov
icebp
clc
les
pop
fidivrs
mov
repz
cs
push
ss
andb
out
insl
sub
lcall
xor
clc
aas
jmp
sub
sub
lods
popf
mov
cmp
sbb
mov
sub
lcall
sub
jle
push
xorl
ret
xchg
data16
in
fldt
ds
iret
pusha
lret
mov
gs
movsb
movsl
pushf
das
ljmp
mov
xlat
mov
test
inc
fcompl
mov
clc
lahf
mov
xchg
cwtl
scas
repz
mov
mov
out
push
loope
add
cmp
mov
loope
dec
shll
jb
inc
xchg
icebp
cmp
mov
xchg
gs
pusha
xchg
mov
ds
ds
js
pushf
shll
xchg
jb
imul
lock
repz
movsl
push
sub
jp
loope
mov
xor
sarb
sbb
mov
sbb
xchg
pop
push
jmp
cmp
mulb
or
cmp
lahf
insb
pop
es
add
call
cltd
sub
mov
rcrb
adc
callw
jg
fcomi
add
cmp
stos
sub
push
out
leave
ret
loopne
jmp
adc
pop
mov
pop
cwtl
push
or
xchg
push
or
jp
ror
push
mov
scas
jnp
adc
cmp
fcmovnb
sti
jg
inc
and
inc
stos
mov
push
cs
test
lss
clc
add
xchg
push
cmpsl
xor
inc
dec
pop
inc
sarl
xchg
xchg
testb
push
adc
ret
mov
pop
jne
fidivs
adc
lods
inc
sti
ror
bsf
clc
inc
jge
loope
and
lds
loopne
inc
mov
sbb
fnstenv
jne
insl
push
inc
mov
ss
mov
outsl
fildl
jne
insb
push
aaa
inc
inc
push
and
push
add
sahf
cmc
lock
shrl
test
lods
adc
mov
inc
fs
cmp
push
insb
mov
insl
enter
inc
fcomip
add
iret
int3
sbb
or
cmp
loopne
jae
adc
push
ljmp
xchg
adcb
cmp
pop
fmuls
pop
pushf
and
push
out
cld
pushf
push
daa
mov
adc
xchg
push
mov
popf
rolb
ljmp
xor
sbb
dec
std
test
fcoms
test
pop
lock
inc
out
lret
repz
cmp
jg
ss
jo
jmp
pop
xchg
popa
push
sub
ds
mov
or
fs
xchg
aaa
push
mov
inc
pop
push
add
or
mov
push
mov
addb
push
in
add
mov
fcomip
fildl
sub
das
dec
int
xor
and
cs
cmp
dec
loope
nop
in
or
pop
ja
stos
int3
shll
inc
rcr
mov
sub
inc
insl
cmp
xchg
insb
icebp
shl
cmp
add
repnz
aaa
pop
xchg
mov
lods
fcmovnu
stos
sbb
jb
ss
xor
insl
pop
pop
flds
dec
jne
and
and
lods
xor
pushl
bnd
sarb
mov
mov
or
notb
mov
cmpsl
cmp
or
loopne
mov
and
repnz
movsb
pop
pusha
roll
lret
lret
ret
push
mov
ss
sbb
rep
mov
and
lods
scas
out
pop
push
mov
inc
testl
cmc
push
rclb
sub
repz
ja
dec
xchg
or
movsl
and
pop
push
std
push
sti
push
roll
cmp
jb
pop
push
lret
ret
dec
jnp
or
lahf
cmpsl
or
xchg
jp
push
xor
mov
stos
mov
push
or
mulb
sti
int3
lcall
lea
bnd
and
and
jle
lcall
fisttpll
int
xor
sahf
int3
jo
aas
out
notb
mov
xor
push
stos
push
shl
insl
lods
and
cmpl
xchg
divl
xchg
adc
orb
pop
xchg
dec
cwtl
mov
mov
mov
subl
cmp
jb
arpl
ljmp
cs
movups
xor
hlt
jno
imul
adc
movsb
sub
cmp
orb
mov
cmp
jl
pop
push
popa
mov
icebp
sub
sub
js
adc
cli
xchg
xchg
and
add
mov
addb
leave
roll
dec
add
shlb
rorl
xor
sub
add
jmp
and
push
inc
xchg
push
outsb
fdivr
popf
mov
out
xchg
or
xor
add
jge
pslld
jmp
gs
je
out
stos
xchg
lock
adcb
cmp
push
cltd
outsl
pop
fidivs
std
dec
add
out
repz
imul
or
test
movsb
or
mov
pop
inc
ret
jns
testb
inc
sbb
xchg
adcb
adc
dec
mov
mov
mov
jmp
and
add
xor
adc
xor
or
jno
hlt
adc
adc
xchg
test
jecxz
clc
imul
sbb
xchg
aam
push
ljmp
aad
in
enter
aad
and
test
add
lds
roll
or
sub
xchg
inc
mov
sbb
pushl
sub
jecxz
fisttps
mov
mov
in
out
add
dec
push
test
sbb
imul
mov
cmc
fisubs
mov
cmp
lea
pop
sub
cwtl
pop
lock
xlat
addb
es
mov
and
repnz
aad
cmp
cmp
adc
lret
cmpsl
nop
push
cs
repz
jecxz
inc
xor
andl
add
imul
in
or
repz
popf
pop
jp
adc
mov
cmp
das
pop
aaa
adcb
pop
push
jnp
nop
mov
push
lea
stos
iret
dec
dec
cmpsb
pushf
divb
mov
inc
call
inc
push
or
push
adc
pop
scas
stc
mov
mov
mov
fiadds
ja
ljmp
arpl
pop
xchg
or
and
cli
in
add
dec
andl
out
test
in
repz
push
lahf
icebp
clc
ficompl
loop
loopne
sub
pop
data16
jo
jecxz
lds
iret
push
daa
iret
jnp
inc
mov
jle
out
stos
dec
out
dec
mov
sub
adc
test
pusha
loop
scas
test
dec
dec
ffreep
mov
arpl
pop
cmp
test
dec
mov
fcoml
lahf
or
xor
mov
lds
push
jb
lds
add
ds
inc
jns
and
lds
divb
mov
jb
dec
std
out
pop
jle
lret
jl
and
xchg
jnp
js
jg
jl
cs
repz
aad
mov
push
js
jle
sahf
cltd
cmp
sahf
icebp
rep
ljmp
or
loope
and
cmp
dec
std
mov
cmc
xchg
jns
mov
les
iret
aas
ljmp
mov
jle
mov
or
xlat
movsl
mov
fnsave
cmp
iret
ret
repnz
test
push
repz
inc
push
les
pop
mov
repz
cmp
lods
adc
push
add
cmp
sahf
inc
and
sahf
arpl
js
movsl
bswap
xlat
mov
add
adc
imul
xchg
push
push
pop
mov
testl
and
jae
stos
xchg
arpl
inc
in
mov
inc
js
mov
push
xor
sbb
in
cmp
imul
dec
inc
inc
pushf
pop
shl
imul
ljmp
decl
loopne
jo
push
jb
aad
jnp
mov
inc
mov
inc
lcall
inc
sbb
mov
mov
sbb
int
sahf
dec
cmp
sahf
and
out
adc
icebp
add
fs
fldcw
rcll
sbb
mov
xor
ret
rorl
push
xchg
idivl
repz
jno
aad
or
mov
xlat
jae
cmp
dec
subl
rcr
lret
ret
sub
push
or
jmp
xchg
in
in
mov
repz
xchg
xlat
add
movsb
inc
pop
push
or
inc
push
lcall
add
in
push
rorb
mov
dec
lret
shll
or
add
xchg
test
mov
ret
add
xchg
movsb
out
adc
test
fsts
inc
daa
xchg
pushf
clc
mov
adc
fwait
or
rcrb
lea
aas
scas
movsl
sahf
scas
mov
popf
mov
fsubrl
push
xchg
cli
cmp
sbb
sub
cmp
inc
sti
sub
fdiv
add
jne
fcmovbe
sbb
inc
sbb
dec
sub
shrb
mov
dec
aaa
xor
jle
xchg
pop
inc
es
sub
stc
fs
je
popa
fwait
pop
pushf
sub
and
adc
xor
push
ds
mov
ds
xchg
sbb
xchg
out
mov
pop
or
and
out
cmp
mov
loop
stc
mov
jne
pop
fists
cli
or
cmpsb
inc
pop
xor
cmp
mov
dec
test
testl
in
mov
sti
mov
push
mov
xchg
movsl
xchg
cltd
sub
pop
pop
scas
les
sbb
push
add
adc
jnp
cmpsb
push
test
push
add
repnz
in
inc
and
es
inc
sbb
loop
insb
inc
pusha
mov
iret
stos
daa
jnp
dec
insb
loopne
xor
inc
jb
in
lea
inc
or
xor
and
push
fwait
data16
call
dec
inc
lods
adc
push
or
ret
inc
xor
sbbl
push
jbe
mov
adc
testl
aas
xor
add
mov
push
leave
in
icebp
lret
jbe
jmp
lcall
in
jno
ret
jo
sbb
daa
add
add
cwtl
lock
lret
cwtl
not
fsubrl
dec
movq
test
dec
test
aas
sbb
sbb
mov
push
lock
cli
lcall
insl
sbb
lcall
imul
jae
popf
mov
inc
sahf
call
out
mov
and
cld
mov
bound
push
jmp
mov
mov
pop
or
and
mov
mov
stos
in
push
or
cmc
pop
decl
mov
es
lcall
call
sub
idivb
xor
or
push
lret
imul
inc
mov
mov
imul
pop
outsb
dec
mov
mov
xchg
lcall
das
pushf
imul
frstor
pop
xor
jmp
out
mov
add
or
sub
sbb
mov
and
shrb
mov
adc
sti
jmp
add
add
pop
jno
push
jbe
test
mov
cltd
fldcw
push
inc
cwtl
cmp
push
mov
ss
hlt
lea
sub
and
into
sarb
stos
daa
add
test
addr16
cwtl
dec
insb
push
mov
stos
dec
add
fmull
fisubrl
lea
pop
sbb
subl
jae
popf
cwtl
pop
int
jp
jne
inc
pop
push
adc
repz
sti
faddl
imul
mov
dec
mov
jmp
out
ja
stos
dec
cmp
clc
cmc
xchg
popf
jg
sahf
xchg
cmp
push
cmp
outsb
cmp
jne
out
insl
mov
stos
or
repz
fdiv
mov
jns
insb
or
jle
aaa
mov
bound
cmp
sarb
fstpt
push
cltd
add
pop
adc
rolb
jae
mov
sahf
pop
ret
out
xchg
call
xor
push
sahf
and
mov
repz
sub
mov
cs
test
out
or
lds
testb
pusha
adc
xchg
dec
lods
or
xor
lea
call
fadd
xchg
inc
pop
mov
push
insb
mov
insl
lret
mov
outsb
enter
lcall
iret
sub
ret
mov
mov
iret
aad
fiaddl
push
leave
add
dec
movsl
jne
sub
fcmovb
add
cmp
popf
pop
mov
add
lods
mov
jnp
outsl
mov
xor
mov
pop
sbb
pop
imul
xchg
add
pop
xchg
inc
inc
dec
push
iret
hlt
stos
mov
mov
movsl
clc
jne
xchg
xchg
cld
mov
outsl
ficompl
or
out
ret
in
shrl
loopne
dec
mov
jmp
xchg
inc
sub
addr16
mov
dec
repnz
mov
xchg
out
xor
loop
mov
and
pushf
dec
jecxz
jecxz
popf
mov
push
dec
mov
sub
jl
add
js
iret
cmpsb
mov
adc
and
sub
test
xor
pusha
push
aam
lret
adc
push
icebp
nop
int
sub
or
cmp
cmpsb
addr16
mov
xlat
lret
xor
enter
mov
jo
cmp
leave
inc
std
aam
sbb
jmp
sti
xacquire
or
cmc
fs
add
cmpsb
mov
mov
movb
and
inc
clc
sar
mov
ret
ss
insl
jb
mov
sbb
sahf
lods
aad
jnp
rcrl
mov
cltd
add
add
sub
subl
jo
mov
shl
test
imulb
push
push
jne
jecxz
sub
push
fistl
sbb
cwtl
mov
adc
and
or
mov
pop
dec
repz
stos
stos
xchg
jge
and
xor
imul
inc
mov
adc
and
shlb
mov
sbb
fcomps
es
xchg
out
bound
mov
add
sti
sbb
pushf
fdivr
jb
daa
push
loope
test
sub
mov
shlb
rorb
jae
jecxz
xor
add
out
js
and
mov
fists
orb
inc
cmp
cmp
repnz
cli
into
jle
ss
push
push
mov
popa
lahf
and
pop
std
pop
xchg
xchg
add
xchg
push
jp
lock
je
xchg
add
and
dec
fstpl
xor
and
cmc
mov
mov
scas
add
pushl
rep
lret
xchg
sahf
pop
fwait
sti
or
pop
push
pop
pop
clc
lcall
jg
notb
lcall
pop
push
pop
add
inc
mov
jle
out
dec
pop
lea
jns
into
adc
bound
lods
xchg
fldt
daa
sub
iret
sbb
mov
pop
pop
popa
mov
dec
das
mov
in
enter
mov
out
adc
ja
ficoml
shlb
outsl
sbb
dec
icebp
sbb
inc
sub
out
xchg
mov
dec
nop
mov
sbb
out
pop
ljmp
jg
jmp
pop
lea
loope
scas
xor
int
mov
outsl
jae
dec
imul
call
add
adc
lock
in
push
add
sub
shlb
clc
and
and
imul
addb
jmp
add
cli
xlat
add
negl
imul
lea
gs
or
jnp
jl
pop
xor
mov
nop
push
jge
mov
or
sub
arpl
jo,pn
dec
out
jl
bound
fistps
lea
repz
imull
insl
sbb
mov
mov
jmp
data16
sarl
hlt
mov
ds
loopne
fwait
loopne
pop
push
jecxz
mov
adc
into
notl
jbe
push
pop
test
int
pop
cmp
add
mov
mov
xor
imul
mov
dec
sahf
je
xchg
mov
fidivs
mov
cmp
ds
cwtl
push
gs
filds
xchg
xor
mov
push
push
jae
pop
jle
mov
lods
mov
loop
mov
in
cmp
into
aam
lods
clc
cmp
pop
sbb
mov
insl
pop
sarb
enter
test
push
aad
push
mov
mov
int
add
adc
outsl
xor
jge
mov
iret
sbb
adc
add
pushf
imul
clc
inc
add
xchg
push
scas
mov
mov
cmpsl
popl
arpl
or
lds
add
test
ret
or
sbb
dec
push
jecxz
cltd
push
jae
sub
pop
sub
hlt
imul
sub
scas
inc
jne
sbb
int
pusha
pop
xor
inc
mov
adc
push
cmp
fidivl
loop
dec
insb
mov
xchg
scas
stos
test
adc
inc
lret
add
and
rcl
lret
xor
xor
sub
mov
mov
ret
xor
jae
aad
repz
in
pcmpeqd
ds
pushf
jbe
jmp
mov
jp
push
jg
xor
pop
sub
lret
mov
imul
cmc
loop
xchg
cmp
das
hlt
in
icebp
and
lret
cmp
cltd
test
mov
sub
repz
pop
stos
push
mov
mov
xor
arpl
mov
aas
out
lods
in
or
cmp
jge
push
es
dec
fidivs
or
rclb
mov
mov
or
outsb
ljmp
leave
fnstsw
imul
dec
push
mov
aaa
push
stos
jge
ss
sarb
dec
adc
pop
test
xchg
pop
and
out
in
push
pushf
jg
cmp
xor
cmp
inc
addl
outsl
mov
xor
faddl
subl
push
and
adc
gs
outsb
xchg
dec
ljmp
enter
cmp
cmp
ffreep
cmpb
in
cmpsl
push
jl
cmc
call
cli
out
sbb
int3
aam
mov
jge
sub
sbb
jbe
and
adc
sbb
pop
jb
dec
sub
jmp
xchg
xchg
mov
inc
js
cli
enter
push
repnz
sub
bound
inc
mov
dec
mov
adc
adc
test
cmp
ss
push
fsubrs
cli
dec
ret
mov
aas
lret
pop
orl
adc
pop
aas
jno
pop
mov
mov
mov
iret
mov
nopl
lods
idivb
and
mov
and
les
fwait
in
sub
jnp
jb
repnz
adc
lahf
subl
push
leave
pop
mov
test
sub
sahf
pop
scas
arpl
inc
ror
mov
repz
aas
lea
cmp
add
daa
rcll
xor
test
fsubl
xor
add
mov
sti
pusha
xchg
xchg
std
popa
or
xor
dec
adc
jno
fcoms
enter
ret
cmc
scas
outsb
mulb
into
pop
js
inc
jno
mov
mov
popa
add
repnz
push
adc
dec
adc
lret
sbb
jmp
pop
clc
outsl
mov
push
aam
jmp
insl
es
fidivl
xchg
arpl
in
pop
jmp
bound
out
lret
cmpsl
arpl
dec
xor
or
psubb
div
mov
fcoml
mov
pop
pop
lret
inc
inc
jae
and
xchg
enter
mov
or
cmp
sti
lea
lahf
clc
ss
aas
ss
movsb
jl
iret
daa
sbb
cmpsb
loopne
addr16
mov
jo
add
ret
shlb
adc
in
lret
sbb
inc
ret
jmp
xchg
jmp
pop
and
cld
xor
add
push
insb
flds
les
std
lahf
aaa
pop
ret
cld
imul
outsl
adc
xchg
cmpsb
push
popa
mov
lret
loopne
pusha
dec
mov
incl
mov
pop
cmp
mov
popa
lahf
sub
mov
and
aaa
mov
jb
push
jb
pushf
sti
ret
lcall
ljmp
pushf
jmp
movsb
sbb
dec
push
mov
nop
push
out
jbe
xor
shrl
sub
sub
mov
psrlw
jo
repnz
gs
mov
insl
jge
imul
outsb
adc
adc
aam
adc
mov
imul
push
fsubrs
add
ffree
xor
insl
stos
jae
stos
cld
shrb
push
mov
xchg
jo
and
push
stos
mov
loopne
adc
imul
mov
sbb
stc
call
inc
in
in
adc
jg
push
outsb
or
stos
adc
mov
xchg
mov
sbb
icebp
add
pop
xchg
shl
shll
jns
lds
outsb
in
pop
inc
push
fadd
mov
out
xor
sbb
mov
ljmp
xchg
bound
jne
xchg
mov
pusha
icebp
addr16
jp
test
nopl
jmp
inc
pop
sub
fildll
outsl
subl
xchg
in
cmp
push
je
or
cmc
mov
cmp
inc
repz
and
adc
dec
jge
jp
pop
and
enter
fistl
mov
sahf
fsubrs
loop
mov
mov
jle
addr16
dec
stc
lcall
sub
cmp
repnz
hlt
es
out
sub
cmpsb
scas
adc
subb
sbb
into
ss
xchg
pop
cmp
cmpsl
or
jge
dec
mov
xchg
xor
adc
mov
movsb
lret
sbb
sub
repz
fists
push
add
mov
arpl
call
jb
pushf
and
enter
mov
in
inc
mov
push
hlt
push
pop
bound
roll
jge
cltd
cli
xlat
aam
push
add
push
call
mov
and
rcl
xchg
sub
and
mov
mov
add
pop
fnstenv
jl
mov
aam
add
adcb
in
loopne
lock
ret
inc
cmp
lock
sub
or
jne
cmp
sbb
jecxz
mov
pop
dec
push
push
dec
das
fmull
pop
out
in
adc
imul
dec
xchg
push
push
adc
mov
xchg
call
mov
ret
ret
sbb
stos
xor
xchg
lahf
ret
lods
inc
ljmp
jl
out
xlat
or
push
popa
je
or
push
fstpl
dec
add
imul
mov
std
and
cmp
xchg
roll
dec
dec
notb
fbstp
jo
fs
sbb
nop
cmp
mov
adc
jne
testl
dec
pop
iret
inc
out
divl
ret
push
push
sbb
and
dec
rorb
pop
enter
mov
xchg
in
pusha
mov
int
repz
imul
lds
add
inc
stos
movsl
mov
pop
pop
icebp
xchg
icebp
fsubr
repz
mov
in
sbb
dec
xchg
pop
ret
mov
jg
xor
leave
jg
daa
inc
dec
sbb
xchg
fwait
and
adc
sub
cmp
mov
fmull
test
or
adc
push
ds
rcrl
mov
inc
loopne
jne
xchg
inc
shll
jo
adc
lea
mov
insl
scas
push
xchg
imulb
lea
sbb
mov
sbb
lock
xor
xor
add
loopne
mov
dec
incl
cld
or
insb
lods
push
push
in
sarl
mov
aas
hlt
mov
pop
or
rol
jnp
neg
pop
imul
jnp
out
dec
fstps
add
mov
sarb
in
stos
fdivr
pop
enter
cwtl
adc
repz
push
lcall
sub
xchg
jmp
push
je
lret
cmp
or
add
nop
or
cmp
inc
addr16
xchg
movl
mov
lock
in
xchg
xchg
adc
sbb
int
stos
into
mov
rolb
xchg
pop
fsubrl
pop
lret
fisubl
pop
pop
loopne
ljmp
mov
pop
mov
leave
hlt
movsl
scas
jbe
subb
sti
rclb
add
adc
push
xor
shrl
lcall
or
cmp
mov
cmp
push
js
and
push
pop
xor
add
xchg
mov
popa
test
jp
scas
push
repz
push
lds
int3
jne
pop
pop
and
roll
xor
dec
mov
jl
lds
sbb
out
cmp
shl
pop
jl
mov
movsb
lcall
xchg
cld
mov
ficoml
fcompl
add
pop
pop
sbb
and
ror
jle
js
add
xor
rorb
mov
jae
mov
in
mov
int3
aam
mov
ficoms
mov
pop
mov
ret
cmpsb
jb
push
loop
mov
iret
mov
enter
mov
cmpsl
xchg
cs
fcoml
icebp
out
outsl
ljmp
aam
popf
shlb
aad
movsl
dec
xchg
shll
push
and
lods
or
sub
adc
push
mov
ret
cmp
add
icebp
xchg
sbb
cmp
cmpsl
jecxz
mov
repnz
add
fcoml
stos
ss
xor
cmp
stos
lds
subl
out
mov
jp
jle
push
xor
sbbb
in
inc
and
xor
leave
shr
fidivrs
lds
rolb
sbb
ficoml
insl
fwait
lcall
into
cltd
push
mov
xchg
jb
popf
xlat
int3
pop
iret
lret
mov
cmc
inc
sbb
std
xchg
inc
and
jle
dec
xchg
insb
add
mov
in
ss
cmp
in
mov
jl
push
enter
push
mov
lock
xor
push
or
sbb
xchg
pushl
std
rolb
jns
pushf
es
mov
lret
jecxz
loop
adc
aad
pop
and
jecxz
mov
sarb
lock
lods
mov
inc
mov
inc
ret
mov
jge
rcll
sbb
dec
outsl
add
dec
iret
sub
or
and
lcall
jb
ljmp
jg
dec
pop
leave
or
dec
jne
xchg
fisubl
icebp
scas
and
pop
xchg
pop
sub
mov
aad
ret
sbb
cmp
jnp
loop
fidivrs
xor
cwtl
aam
add
sub
push
jne
pop
loop
lods
cmp
sbb
and
jle
cld
xor
xchg
sbb
les
xlat
inc
loop
dec
cmpsb
scas
mov
stc
push
push
stos
xor
ljmp
xor
test
filds
fwait
jle
inc
mov
cmp
pusha
pushf
and
loopne
adc
shr
push
popf
repnz
mov
stos
jns
inc
sbb
dec
sbbb
aad
cmp
jnp
cmp
mov
imul
test
push
movsl
das
adc
fwait
ds
mov
inc
lahf
js
push
inc
dec
jne
adc
jnp
jecxz
xor
mov
arpl
mov
cmpsb
or
adc
mov
pusha
in
mov
jle
popa
mov
loop
sbb
mov
outsb
jmp
addl
cwtl
jno
test
aam
stos
push
shrb
fwait
gs
inc
pop
lods
ficoms
pop
test
sub
pop
stos
aas
push
xchg
push
pop
popa
adcl
lret
lcall
or
pop
movsl
xchg
call
mov
enter
in
pop
sub
test
pop
jno
push
push
jecxz
test
sti
sub
icebp
xchg
push
out
movsb
andb
add
xchg
xchg
dec
loopne
enter
or
dec
adc
dec
push
insl
insb
mov
xchg
sbb
out
out
and
jae
frstor
add
stc
add
and
loop
dec
loop
int3
inc
push
sub
fnstsw
sti
and
jns
xor
cmp
jb
push
insb
cmp
orb
push
fidivl
pusha
popf
cld
and
js
sbb
xchg
arpl
jmp
imul
push
mov
rolb
jbe
cmp
push
sbb
mov
xchg
cmp
xchg
cmp
aam
fdivp
xor
addr16
jg,pt
out
loopne
xchg
std
push
subl
dec
dec
sbb
sbb
add
or
pop
arpl
leave
sub
les
repnz
lods
sbb
sti
pop
int
cmpsl
and
mov
repnz
adc
dec
bound
jg
add
orl
lea
mov
in
ficompl
fidivl
aad
add
clc
mov
inc
aas
xchg
ret
pop
fs
add
mov
sti
std
call
sbb
and
test
lret
ds
lcall
sti
inc
inc
outsl
mov
xchg
call
xchg
enter
dec
pop
cli
xchg
movsl
xchg
sbb
test
lea
leave
jb
jo
mov
push
xchg
xchg
cmpsb
nop
data16
clc
orb
inc
and
push
add
push
gs
adc
xchg
pop
jmp
icebp
push
sbb
sbb
and
and
test
push
je
jns
test
jl
mov
mov
mov
push
dec
add
inc
inc
or
xlat
rorl
push
mov
xor
jns
and
pop
sub
in
push
xchg
xchg
popf
outsb
aam
push
xor
xor
mov
int3
push
and
sbb
or
xor
add
in
lock
push
fidivrl
xor
push
pop
add
imul
mov
add
test
pop
mov
les
das
jmp
push
loopne
cmpl
lds
mov
adc
sbb
seta
mov
dec
pusha
insb
jg
push
sub
add
inc
lods
mov
xchg
addr16
sub
mov
pop
jmp
add
jns
xchg
loopne
jl
cmc
mov
mov
jbe
xchg
cmc
ljmp
and
xchg
adc
jmp
aaa
mov
scas
ss
push
ror
push
gs
ret
sbb
dec
and
stos
push
sub
test
mov
cmpsb
insl
mov
stos
or
cmc
into
mov
call
lock
mov
mov
ret
loop
iret
pop
inc
jns
adc
jno
adc
lahf
fbstp
cmp
dec
rcr
inc
cmp
in
add
cmp
pop
in
or
dec
in
mov
fwait
sbb
imul
push
and
mov
jbe
mov
test
ret
adc
nop
negl
mov
xchg
mov
sbb
adc
mov
mov
bound
push
jno
or
je
mov
adc
and
mov
dec
xchg
pop
and
ret
mov
mov
adc
loope,pt
or
hlt
jnp
cmpsb
cli
xchg
mov
sbb
cmp
mov
inc
subl
push
ret
dec
ljmp
lods
xchg
fisubrl
outsl
out
pushf
jge
test
stc
add
jp
adc
orb
add
cmp
icebp
in
fs
lea
pop
pop
adcb
repz
icebp
pop
inc
lds
xlat
cmp
push
scas
or
jnp
sahf
cwtl
fcoms
mov
xor
pop
stc
lea
insl
iret
dec
dec
jl
loop
mov
cmpsb
jne
leave
mov
lcall
pop
xchg
jge
sub
mov
mov
insb
pop
jge
mov
and
and
sarb
out
sti
insl
lock
js
or
loope
and
push
xchg
cmp
hlt
ret
mov
jmp
mov
roll
mov
inc
and
or
iret
sbb
jo
sbbb
scas
dec
sbb
insb
into
mov
or
dec
mov
jp
shll
sbb
dec
and
repz
push
das
test
fldt
sub
movsl
add
xchg
adc
or
mov
adc
sbb
cmp
mov
sti
cld
xor
cmp
test
loope
ja
gs
pop
div
sub
pop
sub
mov
dec
nop
mov
js
xor
sbb
add
addl
fdivrl
adc
pushf
lock
loop
leave
test
in
ds
cmp
pop
dec
push
add
dec
inc
aad
cmp
das
pop
adc
jae
mov
add
push
loop
mov
mov
sub
ja
in
sti
arpl
dec
sub
mov
aam
mov
or
mov
icebp
sub
push
arpl
and
or
rcl
mov
pop
ficoml
push
in
push
shrb
lods
mov
mov
out
cli
sub
xchg
lods
mov
pop
loopne
repz
lcall
scas
and
mov
dec
xor
xchg
dec
add
test
mov
cltd
addr16
jle
aas
or
cmpsl
fsubrl
fcompp
push
repnz
icebp
or
es
cmpsb
mov
arpl
and
xchg
push
je
push
push
xchg
fsubrs
mov
adc
js
repnz
bound
sbb
push
rcll
dec
cld
test
enter
aad
fnstenv
jo
ret
orb
jmp
fdivrl
dec
inc
push
in
pushf
in
push
jl
cs
xchg
or
mov
fiadds
lock
cmp
pushw
inc
lods
mov
fistpl
rcl
sbb
aaa
mov
or
pop
fxch
pushf
jle
out
adc
scas
sbb
sub
dec
frstor
pop
inc
mov
cli
bound
sahf
enter
ficomps
jns
push
add
lcall
call
out
sahf
out
out
cmp
sarl
add
repnz
mov
pop
jl
mov
lcall
movsl
xchg
push
outsb
jle
daa
sbb
cmp
inc
das
sahf
lahf
movsl
pushf
daa
or
das
mov
and
cmp
movsb
rclb
push
xor
call
call
inc
mov
jno
les
cmpsl
stc
jne
iret
cmpsl
addr16
mov
movsb
jno
or
sti
mov
xchg
mov
cli
mov
xlat
xchg
xor
shl
out
push
add
xchg
cld
mov
jb
dec
in
and
xor
notb
xor
ds
addr16
imul
xor
pop
jno
fcomip
fisttpll
cmpsb
lock
popl
int3
popa
xchg
stos
xchg
and
dec
nop
dec
or
bound
push
jnp
shll
pop
insl
cmp
mov
incb
adc
imul
inc
jle
jle
mov
orb
addr16
or
bound
ss
dec
scas
insb
cli
test
mov
test
pop
xchg
mov
sets
dec
stc
sbb
add
mov
iret
push
hlt
and
cmp
and
jns
ret
insl
int3
out
jnp
xchg
lret
adc
pusha
push
enter
sbb
aad
ss
inc
sub
repnz
mov
sbb
imul
pop
je
add
sub
frstpm(287
inc
dec
or
popf
pop
xchg
push
inc
js
cmp
dec
dec
mov
pop
shrb
add
xadd
inc
mov
nop
dec
test
xor
jb
xchg
adcl
ret
outsl
pop
icebp
movsl
rcrl
sub
xchg
pop
fistpll
mov
fwait
in
shr
fucomp
inc
loope
in
int
arpl
sbb
mov
std
mov
int3
mov
popa
inc
cmp
out
iret
mov
jb
test
push
add
sub
leave
repz
scas
xor
adc
jbe
mov
push
mov
xchg
fwait
lea
std
adc
insl
adc
pop
hlt
dec
bound
xlat
dec
roll
jp
insb
or
pop
cmp
mov
xchg
in
bound
loope,pt
jno
inc
fidivrs
pusha
push
call
push
stc
xchg
xor
fs
mov
jmp
clc
ljmp
mov
fisubs
and
aam
mov
mov
mov
imul
sub
mov
cli
shll
mov
lret
and
jbe
shlb
mov
jg
test
je
mov
add
cmp
add
hlt
cli
outsl
sub
sub
xor
push
lods
inc
lea
adc
icebp
aas
mov
sahf
push
dec
in
add
add
lret
sbb
psllq
ret
cmp
mov
or
dec
repz
mov
cld
fimuls
test
outsl
push
mov
loopne
and
js
loopne
mov
adc
jmp
sub
pop
inc
addl
dec
dec
sbb
outsb
jmp
xor
dec
repnz
repnz
test
hlt
inc
repnz
push
ljmp
fsubrp
lret
fsubrs
adc
xchg
pop
cmp
jmp
aas
fsubs
push
rcll
cmp
sti
addr16
mov
mov
sub
ret
push
or
push
mov
lds
ret
push
loop
mov
sbb
sarl
ljmp
add
mov
movl
das
pop
dec
jcxz
push
push
cmp
xor
hlt
mov
test
sub
sbbb
aas
out
out
or
test
into
mov
and
pop
xor
adc
adc
jmp
fwait
arpl
icebp
faddl
mov
pop
popa
mov
movsb
pop
les
cmpsb
pop
ror
and
out
mov
in
lds
add
loopne
pop
xor
and
sbb
orl
fistpl
popa
adc
pushf
add
movsl
clc
push
inc
and
std
in
shlb
xchg
push
stos
xchg
test
hlt
stc
shll
jp
or
pop
jl
xor
mov
and
jns
lea
movsb
mov
gs
pusha
mov
xor
data16
pop
xchg
cmpsb
mov
jbe
mov
mov
dec
mov
add
ljmp
jmp
jmp
jmp
add
je
jle
sub
ret
xor
leave
or
ficoml
sbb
sub
mov
cmp
lret
and
adc
or
loopne
or
sub
in
fdivrs
movsl
rcrl
mov
xchg
jecxz
jge
jle
cwtl
mov
sbbb
sbbb
sub
add
mov
sbb
push
dec
dec
push
pop
xchg
mov
pushf
and
dec
mov
pop
dec
je
add
hlt
out
mov
fdivrl
out
mov
jmp
cmpsl
mov
adc
pop
mov
add
mov
cmp
mov
fs
jae
jp
mov
xor
push
jecxz
bound
xchg
push
inc
mov
and
or
pop
or
mov
mov
inc
ret
sub
in
push
lcall
jl
mov
loope
push
in
push
aaa
std
push
jle
jmp
shl
push
lods
adc
in
sbb
pop
out
popa
daa
pop
sub
adc
test
xchg
add
jns
outsl
mov
jmp
int3
jae
out
pop
adc
push
xchg
sbb
out
and
das
movsl
mov
outsl
add
nop
mov
xor
inc
ja
in
sub
mov
int3
jo
ds
add
push
jb
xchg
mov
outsl
mov
mov
movsb
int3
sbb
xor
shl
cmp
imulb
xor
inc
sub
and
mov
mov
movsl
cmc
mov
nop
inc
jp
test
sbb
out
xor
xchg
insb
lock
sub
lcall
push
addb
push
adc
pop
in
xor
push
inc
popf
cwtl
cmpsb
push
mov
push
jno
or
xor
std
lret
hlt
and
adc
ds
in
fadd
and
or
and
jg
or
adc
pop
pop
adc
stos
imul
mov
fwait
push
aaa
call
pop
insb
jbe
out
or
jl
int3
mov
stos
addr16
in
aam
test
shrl
or
cmpsl
adc
dec
fiaddl
sub
scas
js
pushf
movsl
outsb
pop
fcompl
mov
cmc
xchg
ret
repz
ja
lds
ret
add
add
shlb
jno
lods
inc
lahf
mov
fcomps
pusha
jae
and
arpl
into
sbb
icebp
sub
pusha
fadds
fistpl
adc
add
imul
dec
in
push
or
les
mov
and
lds
cmp
mov
pop
xchg
mov
dec
mov
push
jnp
popf
cld
rol
push
ret
pop
jp
add
cmp
addb
sub
push
push
sbb
add
scas
xor
and
sbb
jle
or
dec
dec
lods
or
jmp
ss
push
ret
orb
and
test
outsl
test
sahf
dec
cmpsb
out
les
jns
sbb
in
xchg
xchg
and
jae
push
push
push
and
push
test
fld
enter
cmp
add
mov
cmpsb
mov
mov
pop
movsb
lahf
movsl
out
jecxz
jmp
sbb
xor
imulb
xchg
test
xor
pushf
das
push
outsl
fcmovu
dec
xor
xlat
leave
insb
stos
lods
loopne
int3
xor
icebp
mov
sbb
mov
mov
pop
pop
ficoml
sub
aam
adc
and
in
fnstsw
ret
adc
sahf
leave
mov
clc
int3
pop
sub
pop
les
test
add
cmc
lods
adc
xchg
pushf
push
mov
or
mov
xor
fwait
push
sub
mov
negl
and
clc
enter
mov
das
jl
fldcw
sbb
aam
pop
sahf
in
add
bnd
sub
rorb
xchg
outsl
dec
shlb
enter
inc
test
dec
subl
cmpsl
push
rorl
ljmp
repnz
adc
cmc
test
mov
lret
pop
andl
loopne
fcmovb
jp
sub
sub
les
pusha
adc
insl
jns
sbb
loop
mov
pop
call
jmp
ret
jno
pop
cwtl
aam
ret
or
push
aas
stc
mov
and
sub
cmp
add
add
roll
dec
jno
insl
xchg
mov
jl
ret
adc
mov
cmp
int3
les
lods
xchg
fdivs
js
dec
fldenv
in
pop
xchg
rclb
imul
inc
or
leave
popa
cli
lcall
or
das
sarb
mov
sbb
cmpsb
cmp
dec
ret
push
in
jl
mov
xor
dec
and
movl
mov
sti
scas
insb
hlt
sub
jp
cmova
xchg
js
push
fstp
jmp
pop
pop
jmp
loop
mov
sbb
jge
rorl
mov
push
cmpsl
cmp
push
rorl
push
fsubs
hlt
js
cmpsl
sbb
ficoms
test
mov
test
adc
and
pop
dec
xchg
ret
xchg
sub
jns
mov
pop
adc
adc
xchg
inc
jns
jecxz
or
ficoms
into
cmc
jo
dec
jl
jnp
jp
xchg
pusha
in
cmp
xor
gs
cmc
lds
jns
fucom
aas
xchg
adc
sbb
scas
mov
sbb
subl
loope
mov
push
hlt
and
mov
pop
adc
jmp
and
and
mov
shl
fidivrs
add
xchg
xor
inc
pop
sub
fistpll
das
adc
testb
xor
ss
fnsave
fxch
mov
lret
std
mov
shr
mov
mov
idivb
mov
test
mov
xchg
ja
punpckhdq
mov
dec
loope
xor
aas
sub
cltd
inc
cli
pop
push
xchg
xchg
pop
xor
xchg
cs
sbb
xchg
pushf
jbe
repnz
cmp
jl,pn
sub
outsl
adcl
or
or
sub
lock
dec
mov
xchg
jg
fsubrp
mov
les
cmp
dec
ss
cmp
push
cli
in
fsubr
out
flds
xchg
cmp
mov
xchg
in
test
test
and
adc
add
or
adc
add
loopne
mov
les
xchg
sub
aaa
or
xchg
loope
inc
jg
xlat
or
sbb
sbb
aad
xchg
lahf
popa
pop
je
inc
push
cmp
ds
fistps
pop
mov
cltd
cwtl
fldenv
test
push
jmp
dec
push
je
push
aam
add
xchg
mov
xor
test
popf
pop
mov
stos
ljmp
sbb
lock
iret
xor
dec
cmc
cmp
stos
insb
pop
cld
out
data16
ja
gs
dec
xor
fbld
mov
jl
jg
sub
ja
pusha
pop
push
adc
inc
jns
inc
or
pop
jb
fldenv
add
cmp
shrl
addr16
xor
adc
jl
outsb
lahf
sbb
fildll
lock
or
pop
dec
mov
sbb
cmp
addps
xor
js
mov
push
leave
pop
and
int
mov
lcall
add
ror
jbe
jns
inc
mov
aaa
jle
push
test
imul
push
jl
xchg
test
xchg
call
fs
sbb
xchg
movsb
shll
gs
out
mov
pop
and
dec
test
leave
imul
and
cmp
and
iret
in
jo
xchg
out
fisubl
std
ja
push
clc
push
imul
insl
mov
pop
xor
push
pop
mov
insb
xor
cmpsb
fldcw
push
cwtl
push
cli
jo
int3
push
in
and
add
int
shll
adc
ds
mov
daa
sub
inc
sahf
lods
ret
fyl2xp1
push
xlat
in
jne
fdivs
pop
mov
sub
lret
push
pusha
loopne
mov
fistpll
pop
push
rcrl
aad
inc
xor
ficoml
push
scas
push
popa
call
int3
ficoml
ficoms
lock
inc
repnz
xchg
cmpsb
push
outsb
xchg
push
scas
pop
dec
xchg
subb
xchg
inc
lret
icebp
call
divl
pop
pop
jno
mov
rolb
bound
push
sub
sub
mov
pop
mov
movsl
std
adc
pop
ficompl
pusha
js
cmp
jne
inc
xor
mov
aam
loop
push
popf
push
std
out
or
push
sub
rcl
outsb
xchg
push
std
pop
pop
loope
mov
xchg
out
cmc
in
dec
les
xchg
lcall
ds
cmp
cmp
enter
mov
fsub
in
xchg
and
leave
pop
and
sbb
pop
push
xor
test
xor
stc
and
pop
aas
lods
cmp
mov
jbe
push
loope
add
and
lock
enter
or
mov
nop
push
scas
xchg
xor
inc
lahf
push
jno
insb
lds
sbb
sti
insb
or
sub
outsl
imul
or
pop
testb
int
or
jmp
test
and
sbb
lcall
data16
rcll
cld
jl
xor
pop
data16
enter
roll
cli
cmp
popa
xchg
or
mov
fisubrs
and
xor
nop
fwait
mov
ret
or
test
sub
das
dec
xchg
adc
sbb
ljmp
add
cmpsb
aad
ljmp
cmp
mov
xchg
xor
jle
inc
cmp
mov
imul
jb
xchg
mull
xlat
out
push
shrb
adc
xor
rcl
push
hlt
lods
lahf
xor
pop
repz
push
pop
inc
mov
pop
fs
int
push
pop
pop
pop
xchg
jno
ret
mov
push
cmp
sbb
clc
xchg
cs
and
inc
mov
jl
or
cwtl
and
test
leave
push
gs
and
cmpsl
fisubs
test
pop
arpl
aad
xchg
lods
dec
pop
mov
cmp
cmpsl
jge
std
stos
mov
divl
or
enter
sbb
dec
mov
daa
arpl
fldt
xchg
lods
or
lret
call
icebp
out
inc
sbb
add
out
dec
fdivrp
scas
xchg
add
push
fs
jecxz
sub
and
sub
call
das
xorb
test
mov
shlb
addr16
ds
pushf
mov
insl
jmp
and
xchg
push
pop
inc
rcl
mov
loopne
mov
jge
jmp
faddl
addl
imul
jmp
push
mov
dec
jo
daa
iret
jnp
or
outsb
push
jp
cltd
mov
and
lret
dec
jbe
iret
les
stos
sbbl
add
pushl
xor
xor
aas
push
mov
cltd
cld
loopne
lret
sbb
pop
call
daa
sub
std
dec
js
xchg
push
mov
ljmp
xchg
movsb
scas
das
rorb
mov
add
mov
inc
xchg
xchg
jbe
mov
or
fwait
nop
adc
icebp
cld
ja
ficompl
adc
cmpsl
sarb
lret
push
repnz
mov
ljmp
icebp
sub
inc
jge
in
mov
xor
adcb
mov
pop
sub
out
outsb
rcrl
pop
mov
cltd
lret
iret
stc
mov
loop
mov
pcmpeqb
pop
ljmp
mov
sbb
dec
orl
gs
mov
pop
pop
les
repz
movsl
and
mov
lock
mov
mov
jae
scas
arpl
pop
pop
mov
or
pop
push
cmc
push
cmp
dec
dec
rcl
sbb
adc
inc
dec
dec
lret
ret
and
out
mov
orl
shll
adc
cmp
leave
test
ja
fscale
jnp
pop
scas
mov
cmp
adc
stos
jno
push
xor
repz
xor
push
mov
jg
xor
push
jae
inc
add
stc
jne
popf
xor
icebp
dec
xor
pop
mov
sbb
test
loope
or
aam
in
cwtl
xchg
mov
pop
mov
add
xor
inc
lods
lret
mov
pop
mov
pop
scas
js
and
mov
dec
test
and
je
xor
xchg
pop
in
push
or
fbld
cs
dec
hlt
adc
inc
xchg
loope
xlat
or
xor
hlt
push
inc
mov
into
push
cmpsb
and
xchg
mov
out
popf
push
insb
repnz
mov
ds
pop
mov
aad
push
jns
jle
cwtl
test
leave
and
and
or
mov
loop
xor
adc
jnp
dec
inc
gs
mov
mov
ss
fstl
lods
dec
js
pusha
cmp
in
or
or
getsec
fs
lahf
jecxz
iret
nop
sbb
call
mov
push
cmp
adc
sub
aad
pop
or
jb
mov
hlt
rcrl
scas
mov
outsb
inc
out
das
jecxz
xlat
xor
dec
test
repz
mov
leave
push
cmpsl
imul
mov
inc
mov
subb
push
cli
sbb
jae
pop
popf
and
movsb
popa
xchg
cmp
adc
lcall
adc
dec
fwait
pop
adc
xchg
repnz
dec
mov
in
mov
jle
stc
xor
int3
shlb
outsb
sbb
mov
sti
dec
arpl
xchg
sahf
js
sahf
lods
mov
mov
mov
xchg
dec
mov
xor
cmp
ror
inc
pop
std
jl
pop
ret
lods
dec
lahf
fs
sbb
push
xchg
icebp
out
pushf
and
and
xchg
sbb
mov
inc
fmulp
pusha
icebp
mov
jle
cmpsl
jmp
mov
xchg
jno
cmpsb
test
out
jecxz
sub
add
mov
gs
or
mov
ss
icebp
ret
sub
add
mov
stc
nop
arpl
inc
sahf
cmpsb
push
pop
in
xchg
fnstenv
push
pop
mov
cltd
pop
adc
or
outsl
movsl
push
mov
aam
aas
lock
movsl
push
add
aam
in
add
rcl
and
in
cwtl
sbb
mov
push
sbb
ljmp
pop
lcall
imul
movups
sahf
mov
mov
subb
jb
xchg
xor
jno
fisttps
ss
scas
and
jl
push
enter
lea
enter
mov
flds
dec
push
test
sarl
mov
push
std
dec
or
xlat
mov
mov
mov
out
les
subb
movsb
pop
pop
orl
fidivl
ficomps
inc
roll
loopne
push
nop
mov
mov
push
pop
cltd
sbb
cmp
nop
aad
ret
push
pop
mov
icebp
sub
jmp
ja
inc
sub
je
sti
lcall
add
cs
orb
mov
add
scas
out
xchg
mov
mov
pop
push
mov
shl
push
sti
decl
clc
pushf
cmpsl
les
sbb
hlt
mov
xchg
pop
jecxz
sar
mov
sub
addr16
pop
sahf
ss
ffreep
cwtl
push
or
push
sbb
lods
xchg
xor
loope
dec
cli
push
lds
pop
push
dec
jl
inc
push
mov
ds
icebp
data16
xchg
imul
sub
mov
fisttps
aad
les
cmc
leave
dec
push
xor
dec
push
inc
call
or
mov
or
repz
pop
mov
pop
das
inc
pusha
push
ja
es
mov
cmp
lahf
mov
callw
inc
pop
jo
push
xlat
jge
insb
movsb
xor
div
ljmp
dec
repz
jae
push
jle
clc
cld
xchg
in
mov
daa
mov
mov
fsubr
push
fucomi
dec
mov
fcoml
jmp
pop
xor
pop
lods
mov
test
jno
bound
cmp
fists
loopne
enter
adc
or
pop
aas
push
repz
sub
mov
into
and
subb
sub
xor
push
and
int3
pushf
fisubrl
xchg
inc
mov
xor
int
xchg
adc
mov
and
push
mov
mov
jecxz
imul
or
lods
sbb
dec
pop
popf
test
into
mov
push
je
inc
dec
xchg
or
push
sar
js
mov
jmp
mov
sbb
lea
nop
push
leave
mov
int
inc
add
jl
pop
mov
cmp
shlb
inc
lcall
lock
cmc
or
fucom
cli
sbb
outsl
mov
mov
iret
or
roll
jmp
fnstenv
jns
xor
ret
push
dec
popa
jns
daa
pusha
fwait
dec
mov
push
jecxz
and
cmp
ret
test
sar
adc
cmpsl
stc
sub
popa
jg
mov
jmp
out
mov
jb
scas
dec
jecxz
rcll
ret
cmp
mov
xor
popf
lock
push
popa
and
scas
add
insl
lahf
and
pop
outsb
and
into
aad
pop
and
sti
mov
mov
jge
push
xchg
popa
lret
aad
fsubr
shrl
imul
lock
and
mov
cmp
scas
dec
test
jno
stc
adc
ja
mov
dec
or
adc
push
and
sbb
mov
mov
roll
pop
divb
xchg
jns
inc
das
xchg
mov
jp
sarl
mov
sbb
insb
pop
push
loop
out
movsb
pop
xor
xchg
fxam
or
lret
lret
mov
mov
imul
xor
aam
sbb
sbb
es
xor
inc
push
mov
mov
or
sbb
inc
cmp
cmc
inc
js
inc
shr
pop
sahf
inc
inc
inc
data16
inc
cmpsb
mov
mov
int
fwait
es
cmpsb
lods
fmul
arpl
cmp
shrb
adc
mov
add
movl
div
in
in
pop
lcall
mov
popa
ret
cli
push
lahf
push
bswap
daa
jecxz
xchg
jo
xchg
lods
scas
lods
shrd
xchg
adc
cmp
test
jae
pusha
movsb
out
dec
sub
call
cmp
xchg
xor
jl
clc
jl
popa
push
mov
fdivs
inc
into
push
test
jp
out
dec
rorl
lods
or
xchg
fstl
sbb
cmp
stos
mov
or
bound
dec
xor
mov
setnp
inc
push
aas
push
pop
sbbl
sbb
and
jge
mov
mov
sbb
or
inc
jo
loop
fxtract
xor
push
push
aad
outsb
movsl
mov
xchg
stos
cmpsl
mov
mov
out
incb
mov
mov
mov
sbb
adc
push
push
movsb
xlat
xchg
fimull
fidivs
loopne
add
sub
scas
loop
out
lds
hlt
das
dec
mov
sbbl
sbb
sub
adcl
pop
jno
ja
out
into
pop
shrl
in
lcall
out
adc
and
xlat
bound
mov
add
mov
and
aas
popl
xor
aad
stos
out
xchg
add
inc
push
mov
push
jmp
xchg
push
push
call
push
jecxz
adc
jae
daa
lods
pop
mov
repnz
fcmovnb
sbb
push
push
lods
ret
or
dec
and
jp
sarl
sbb
inc
movsb
push
sbb
fwait
add
sbb
mov
loopne
pop
xchg
mov
pop
mov
or
xchg
dec
jbe
imul
leave
leave
out
or
dec
mov
cs
and
mov
insb
jb
fidivrl
fmuls
cmpsl
stos
xor
idivb
add
xchg
mov
sub
jge
sahf
mov
xchg
fimuls
jne
inc
dec
push
mov
ret
mov
pop
std
lock
or
cmp
xchg
xor
and
and
jle
push
push
jmp
pop
in
cmc
je
add
jbe
movsb
inc
xlat
inc
out
hlt
cltd
in
pop
fnsave
xchg
imul
sub
add
test
fbld
lds
add
popf
aas
mov
movsl
mov
mov
ret
xchg
jmp
scas
or
rorl
cmp
repnz
push
ja
call
sub
add
mov
xor
divb
push
imul
push
sub
jmp
xchg
pop
mov
xchg
add
mov
mov
jnp
ss
sub
sub
add
pop
pop
ds
incb
mov
out
jmp
jne
mov
hlt
and
and
scas
cmp
out
dec
lret
push
sbb
pushf
outsl
fldenv
sbb
bound
jns
xor
mov
or
mov
xchg
push
push
jg
dec
insl
sbb
or
dec
adc
cmp
add
fwait
adc
int3
mov
xlat
arpl
xchg
lahf
repnz
xor
push
sub
or
add
and
mov
jmp
scas
mov
xchg
daa
lods
ja
jae
test
sti
pusha
fisttpl
adc
and
jae
out
jge
push
xlat
and
mov
jbe
sbb
adc
fdivrs
cmpsb
stos
ds
test
scas
aaa
shlb
lcall
pop
and
add
jl
add
outsb
jecxz
add
aaa
lcall
add
out
cmp
sub
pop
push
rorl
jle
imul
xor
push
or
popl
movsb
pushf
cld
mov
insl
popa
testb
dec
push
sub
mov
insl
ss
inc
dec
lcall
mov
push
jb
add
xor
mov
shrb
xchg
and
sbbl
fsts
mov
cwtl
scas
test
loope
mov
je
stos
or
cmpsl
pop
sub
sub
xchg
mov
push
and
popa
repnz
popf
fs
mov
pop
push
and
add
into
pop
and
fdivl
shl
bound
add
inc
adc
mov
inc
inc
or
test
xchg
jo
sub
outsb
sar
call
pop
cwtl
pop
push
leave
ds
jecxz
pop
pop
sbb
iret
bnd
and
pop
cmpsl
push
icebp
fxch
sub
outsb
ficoml
xchg
jmp
hlt
mov
mov
ds
pop
popa
mov
mov
mov
orl
out
pop
jno
and
fcoms
aam
add
cld
jp
push
repz
incl
outsl
xchg
push
imul
ret
js
call
lahf
stos
out
loop
sahf
lea
daa
fcoml
xchg
xor
cmpsb
sbbl
ret
lcall
mov
pop
push
in
cli
std
lods
xor
xchg
jg
cmp
dec
fisttpll
jne
pop
mov
cmp
mov
cmc
ds
je
mov
test
mov
ja
iret
xchg
jmp
sub
sub
pop
push
push
dec
mov
push
aam
pop
dec
mov
sbb
imul
mov
push
icebp
in
out
cwtl
movsl
pop
jmp
sub
scas
dec
mov
xor
sub
lahf
mov
cmp
stos
mov
sahf
lret
pop
mov
cmp
lock
and
pusha
dec
push
mov
and
sub
sub
aad
loopne
bnd
popa
or
and
fs
out
sahf
test
call
orb
sub
sarl
xor
loopne
xchg
loop
pushf
fwait
jne
jo
arpl
imul
aad
loopne
int3
adc
adc
mov
mov
xchg
insb
jg
roll
pop
jo
outsb
mov
add
out
incl
pop
xor
int
mov
pop
mov
xchg
push
xchg
mov
ret
mov
fists
in
mov
adc
in
mov
subb
std
int3
cmp
dec
mov
push
dec
push
shll
and
sbb
mov
and
test
push
jecxz
xor
add
pop
outsb
sbbb
ljmp
cmp
dec
and
gs
mov
xor
mov
or
out
test
stc
or
aad
mov
aad
mov
mov
push
scas
rep
lcall
pop
inc
iret
ljmp
fcmovnb
adc
leave
xchg
out
jl
jecxz,pn
mov
arpl
cltd
xchg
js
int
test
or
sti
es
iret
fadds
mov
sti
aaa
fadds
sahf
insb
pop
fsubrs
xchg
mov
mov
pop
outsb
sub
inc
xor
aam
xchg
xor
xchg
roll
sbb
sahf
ficomps
jnp
mov
addr16
sbb
out
adc
das
js
sub
adc
sbb
leave
mov
xchg
lea
inc
xchg
xor
lret
push
dec
mov
xor
add
xchg
jecxz
sbb
xchg
pusha
cs
rolb
jg
jle
lds
xchg
hlt
mov
sub
xor
inc
inc
mov
scas
daa
fildl
neg
or
sub
shlb
push
sub
cmp
sbb
sub
andl
aad
jo
or
lods
das
int
imul
xor
mov
mov
mov
and
stc
mov
mov
dec
mov
outsl
scas
jg
imul
mov
outsl
fs
sbb
call
cmp
orb
loope
cmp
scas
sub
cli
mov
mov
hlt
in
movsl
xlat
jne
add
xchg
gs
bnd
mov
or
stos
sarb
out
movsb
inc
scas
mov
leave
jae
dec
jno
push
je
test
mov
dec
dec
mov
popa
pushf
into
dec
dec
fwait
lahf
rcrb
lea
jle
pop
sbb
jge
ss
jecxz
jle
jle
sub
hlt
pop
sub
sub
jae
pop
pop
sub
dec
sub
inc
push
add
mov
sbb
xor
and
fldenv
pop
cmp
pop
pop
xorl
and
or
sbb
sti
repz
pop
daa
imulb
mov
stos
ss
into
cmpb
fsub
xor
sbb
dec
cltd
pop
imul
std
loop
daa
subb
bound
cwtl
jl
sub
fwait
shlb
stc
jns
push
mov
sub
pop
aam
insb
imul
sub
jb
mov
test
roll
test
lods
add
loope
push
pop
push
insb
jl
scas
lods
jnp
aam
mov
jg
add
mov
arpl
mov
popa
jo
insl
fnstcw
mov
jb
ja
pop
push
xchg
and
dec
cmpb
fcompl
aam
aad
ficoms
ret
pop
jnp
mov
test
call
dec
insl
imul
insl
mov
jb
test
popa
push
push
dec
std
cmpsl
mov
rol
rep
sbb
or
out
push
add
or
pop
add
pushf
sub
push
data16
in
cmpsb
int3
clc
mov
mov
cld
push
data16
pop
and
xchg
cwtl
int
stos
fdiv
dec
mov
dec
add
cmp
jp
ss
jmp
data16
inc
cltd
aaa
pop
add
sti
dec
les
mov
and
in
aaa
xor
bound
sub
leave
sbb
mov
bound
lods
xchg
mov
dec
cs
ret
cmc
add
fdiv
stc
or
mov
or
and
icebp
cli
pusha
dec
int
xchg
inc
jnp
jns
xor
mov
push
ret
fldcw
les
mov
vprotq
add
xchg
cwtl
xchg
subb
rolb
fiaddl
push
dec
jle
adc
and
imul
cmp
jmp
add
inc
aad
idivb
fisubrl
cwtl
push
dec
mov
xor
adc
sbb
mov
xlat
ja
jb
dec
test
scas
mov
dec
push
pop
xor
in
mov
sar
test
and
inc
and
pop
mov
jbe
daa
push
pop
into
xchg
mov
mov
aaa
loop
xchg
aad
fidivs
dec
incb
adc
loope
movsl
mov
sub
xchg
pop
sar
lahf
into
sbb
jge
ds
cmp
test
mov
push
sti
imul
aam
adc
xor
int3
mov
in
mov
cmp
mov
xor
fwait
sub
inc
jmp
mov
aaa
insb
sub
add
xchg
mov
arpl
sub
cmp
out
xchg
test
jne
xchg
leave
cmc
hlt
insl
mov
les
jle
pop
shl
std
aas
dec
mov
and
ret
sbb
sub
cmc
adc
adc
adc
mov
xchg
mov
mov
orb
inc
fisttps
mov
sbb
fcomip
lret
into
xchg
jg
test
push
insl
ljmp
adc
repz
repnz
daa
jmp
mov
cmp
data16
in
sbb
cs
mov
push
dec
mov
jge
mov
scas
mov
or
pop
add
mov
inc
xor
xchg
xor
aam
test
cmp
mov
int3
jmp
or
sub
fdivl
fnstsw
add
jp
js
out
cli
lret
fisubl
xor
rolb
adc
das
fimull
nop
cmpsb
pushl
imul
inc
jg
cmp
sub
jb
imul
aas
cmp
fisubs
loop
jnp
push
mov
xor
cmpsl
mov
xchg
adc
mov
popf
dec
rcr
dec
pop
mov
test
ret
inc
clc
and
or
mov
rcr
scas
les
scas
cs
xor
cmp
or
push
add
sahf
and
dec
mov
push
pop
bound
fildl
mov
sbb
insl
mov
push
jmp
fnstcw
adc
cmpxchg
jne
in
es
ficoms
fisttps
insb
lods
popf
sarl
scas
lcall
call
cmc
jl
outsl
lds
xor
mov
subl
jbe
int3
dec
jle
mov
aad
rcrb
mov
cmp
ret
sahf
imul
push
jbe
xchg
adc
outsl
adc
in
mov
jno
jl
push
pop
adc
push
repnz
adc
ljmp
shrb
ss
int
mov
fsubrs
xor
jge
out
inc
push
in
xchg
dec
call
pop
adc
or
cmp
mov
xchg
int
jo
adc
insb
ja
fcoms
aad
addr16
outsl
sub
aas
addb
dec
lret
imul
dec
jno
leave
fmul
fs
pop
sahf
xchg
das
and
jmp
std
cmc
icebp
clc
jmp
and
mov
push
fsubs
lds
lods
mov
fisubrs
sbb
xor
dec
in
inc
sbb
push
sub
adc
xchg
push
in
leave
or
stos
fstpt
adc
mov
ja
addr16
mov
mov
mov
iret
rolb
ret
mov
fsubs
mov
push
xlat
negl
mov
int3
jl
push
std
fcmovnbe
xchg
cmp
inc
mov
mov
insl
xchg
ljmp
fs
xor
cltd
in
mov
sbb
movsl
dec
or
roll
inc
rcrl
pop
jmp
jge
or
fucomip
xor
sub
popf
xor
aad
lods
negl
aas
inc
push
jb
xchg
xlat
and
sbb
rcr
fisubs
mov
sahf
data16
fldl
xchg
es
xlat
sbb
and
std
adc
lods
pop
inc
add
cmp
inc
enter
cmpsb
and
fwait
dec
js
ss
jo
jb
jecxz
lds
pushf
cmp
jmp
push
mov
sub
addl
cltd
push
imull
mov
ljmp
mov
mov
leave
stos
jl
sub
pop
aad
sarb
mov
lods
test
sub
jmp
in
mov
fistl
test
push
mov
insb
leave
test
inc
cmp
divb
popl
ret
scas
sbb
js
sahf
dec
pop
scas
std
jno
and
sub
lret
mov
pop
adc
mov
inc
shrb
shrl
cli
cmp
aas
add
sbb
mov
ljmp
mov
cmp
and
popf
imul
sub
or
insb
sbb
or
cmpsb
lcall
lods
pusha
lahf
mov
cmc
mov
jne
movb
push
adc
fst
xchg
adc
aam
test
imul
loopne
cmp
xchg
lahf
push
cltd
pop
xchg
sahf
adc
int3
pop
cmp
mov
daa
adc
test
int
adc
fiadds
mov
xchg
cwtl
test
mov
cmp
sub
cmp
xor
ficompl
rcrb
fdiv
int3
jle
fidivs
rolb
cmp
push
jecxz
or
sub
leave
mov
mov
int3
dec
fdivs
push
jbe
lret
push
pushf
fidivrs
sbbl
dec
lea
mov
out
imul
adc
mov
push
sbb
data16
inc
call
in
out
mov
sbb
repz
xor
cwtl
call
fucomip
repnz
mov
sub
push
jmp
in
enter
iret
loopne
test
pop
push
mov
mov
xor
je
ja
popa
mov
sub
push
inc
stos
scas
aam
clc
movsb
adc
shr
mov
dec
lcall
push
cld
lcall
xor
pushf
push
adc
jnp
xor
lds
sti
and
mov
sub
ja
cmp
xor
adc
shrb
pop
and
mul
data16
mov
es
mov
ss
push
shr
insb
hlt
jb
dec
rcr
lahf
sahf
push
daa
hlt
dec
xor
push
shrb
outsl
jno
mov
mov
aam
push
jno
sub
jae
outsb
mov
stc
sbb
mov
scas
scas
add
je
or
in
xor
dec
dec
xor
inc
pop
sarb
cld
into
xchg
fimuls
sub
outsb
sbb
gs
adc
xor
jge
sbb
push
leave
and
sub
jnp
prefetch
and
jb
sub
and
out
sbb
lds
std
imul
add
adc
inc
mov
out
mov
cli
sbb
call
stos
lock
jb
in
add
cmp
jge
movsb
add
imul
jno
rcl
mov
pop
add
inc
push
aas
or
pop
cmp
cmpsl
lds
jle
or
sti
xlat
push
and
enter
repnz
jns
xchg
dec
xchg
out
pop
mov
mov
mov
xchg
mov
call
cwtl
pop
in
mov
decl
gs
jb
mov
inc
push
pop
daa
je
sbb
pushf
test
out
push
jb
imul
push
mov
test
ret
and
and
jae
lds
aam
xchg
adc
dec
popf
jmp
jecxz
pop
jmp
xor
test
dec
repnz
jmp
xchg
icebp
sbb
cmp
push
repnz
and
xchg
je
in
lea
xchg
sti
xor
cmpsl
or
cltd
push
test
outsl
sub
dec
mov
mov
pop
ret
sahf
add
mov
sti
jmp
mov
cltd
mov
mov
add
out
leave
fstpl
push
movsb
popa
movsb
sti
jo
mul
jl
clc
fstpl
xchg
pop
dec
jmp
jecxz
pop
ret
pop
jmp
aam
insl
push
xchg
gs
inc
xor
movsl
jg
pusha
inc
out
movsl
in
movsl
jl
adc
int
sub
loopne
lods
pop
adc
std
imul
sub
cmc
add
jle
stos
xor
cmpsl
notl
push
call
leave
mov
scas
ret
rcl
rcr
jne
sbb
movsl
ret
jbe
inc
clc
out
cmp
adcb
xlat
xchg
inc
mov
push
outsb
fmull
out
cmpsb
shlb
adc
sbb
mov
data16
dec
mov
cmp
inc
push
inc
push
jnp
inc
je
cmp
or
pushf
lds
out
push
dec
push
pusha
into
xchg
movsl
sub
add
cli
shrb
jmp
ja
dec
push
jns
in
adc
lcall
call
pop
add
xchg
jbe
in
inc
fldt
xor
lea
addr16
rcll
mov
inc
dec
ret
ja
ret
or
push
inc
cmpb
push
xor
mov
jg
rorb
sbb
hlt
lds
pop
into
lods
arpl
sub
inc
stc
out
in
aaa
rcll
cmp
mov
mov
test
adc
test
imul
loop
mov
push
xor
mov
dec
dec
sbb
rolb
je
rorb
dec
enter
insb
cmpsl
push
iret
inc
lret
repnz
adc
cmp
aaa
pushf
mul
xchg
jns
subb
sbb
imul
fcomps
mov
or
mov
std
xor
mov
mov
call
lcall
lret
xor
lahf
ss
ret
stos
push
mov
mov
std
xor
sbb
je
scas
cmpsb
fistpll
ja
cld
and
pop
cmp
adc
mov
data16
mov
pop
adc
sbb
in
mov
cmc
jmp
ljmp
cmp
xor
loopne
push
iret
in
lea
and
or
stc
or
std
popf
add
scas
arpl
mov
or
push
sahf
mov
inc
insb
iret
sub
or
fadds
sbb
adc
adc
add
daa
pop
clc
ja
add
adc
ret
not
pushl
push
lcall
sub
or
les
xlat
inc
pushl
sbb
rcrl
mov
sub
int
out
hlt
and
out
sub
bound
shlb
imul
sbb
lock
ret
push
xor
sub
jecxz
out
leave
push
test
xchg
aaa
ficomps
sbb
add
cli
shll
lcall
mov
inc
jae
xor
jle
inc
cmpsl
cmp
cli
lods
fucomi
imul
mov
sub
imul
cmc
insb
adc
dec
dec
cmp
sub
or
in
or
dec
shrl
pushf
mov
hlt
pop
cli
sbb
mov
iret
aaa
and
nop
fimull
mov
push
movsb
add
cmp
dec
icebp
xchg
push
and
xor
sbb
imul
sbbl
inc
shlb
jmp
pop
pop
pop
mov
fdivs
add
jno
cmpl
mov
jnp
push
pop
in
lock
dec
sarl
imull
lods
in
pop
adc
xchg
sbb
sbb
popf
shl
pop
jl
bound
xor
lods
roll
mov
dec
repnz
js
add
sbb
outsb
and
lret
push
aas
fs
mov
popf
mov
xor
imul
ds
fisubs
fisubrs
push
iret
ret
inc
aam
adcl
push
nop
inc
xor
rolb
and
add
cmp
push
adc
adc
ss
fisubs
inc
sbb
das
add
lahf
jb
dec
inc
leave
stos
stos
int
loope
xchg
inc
es
cmp
dec
dec
imul
xchg
mov
leave
fisttpll
and
jb
add
mov
pop
push
ret
pushf
mov
or
rol
ffreep
adc
jae
les
adc
jge
test
mov
lods
cmp
cltd
jb
inc
xor
ja
daa
lea
shlb
mov
pushf
mov
fidivl
mov
iret
test
sub
add
push
cmp
add
cmp
movsb
icebp
imul
cmp
jp
adc
sbb
jp
test
sti
es
mov
pop
or
jp
jno
sbbl
popf
scas
aaa
ja
push
and
into
jge
cmpsb
arpl
mov
nop
pop
jae
arpl
cwtl
es
lret
lahf
repnz
pusha
movsl
xchg
add
icebp
lods
cmc
jb
das
pop
movsl
push
fstpt
push
iret
xor
xorl
xor
sahf
test
xor
sar
dec
adc
sbb
insb
or
push
aam
fcoml
insb
mov
outsl
sbb
repz
insl
add
call
ja
lret
nop
mov
cli
jge
cmp
into
push
jbe
jb
cmp
sbb
sub
popa
push
pop
mov
xor
dec
rclb
icebp
fsubp
insb
add
pop
test
mov
push
sti
frstor
mov
shl
fs
or
scas
ljmp
lods
xchg
lock
cmpsb
add
xchg
outsl
cmp
push
ss
jp
pop
and
and
fcompl
jmp
fs
mov
scas
mov
mov
clc
sbb
mov
cli
mov
imul
aaa
adc
in
xchg
mov
daa
idivl
pop
clc
mov
pusha
lds
push
push
rcll
inc
sub
cmp
pop
fildll
gs
push
cmp
mov
xchg
lahf
das
cmp
leave
xchg
add
sahf
test
inc
push
and
push
mov
fcoml
mov
pop
or
inc
dec
cmp
lods
sub
dec
adc
xchg
jecxz
cs
jbe
ljmp
sti
xlat
dec
out
js
push
ss
pop
imul
mov
scas
and
and
push
leave
pop
imul
scas
mov
mov
bound
imul
sub
dec
adc
fdivrl
pop
cmp
outsl
shl
into
aam
mov
inc
dec
test
insl
or
sub
dec
cmp
adc
jmp
out
subb
outsl
lret
ja
ret
push
iret
fsubrl
mov
or
scas
mov
sbb
repnz
cmp
jne
jne
or
sbb
arpl
mov
ret
push
adc
mov
xor
cwtl
dec
jbe
nop
mov
insl
xor
repnz
imul
sbb
pop
test
xor
subb
in
dec
adc
cmp
fdivrl
xchg
cmp
mov
cwtl
movsl
test
sub
sahf
lds
sbb
in
sbbb
add
sub
aam
cmpl
mov
pop
dec
mov
test
push
adc
dec
add
clc
cmp
std
fdivrl
into
or
sub
add
movsb
dec
mov
xchg
js
jp
cltd
jne
fdivl
push
xchg
lahf
cld
lret
push
sbb
dec
sub
adc
stos
cli
mov
mov
repz
movsb
cs
inc
fdivrl
stos
mov
arpl
mov
mov
pusha
or
inc
test
addr16
iret
mov
ss
enter
sbb
xor
adc
and
ljmp
sahf
and
jl
out
xlat
adc
cmp
mov
imul
mov
and
push
scas
daa
mov
cmp
fisttps
scas
mulb
mov
add
test
xchg
in
sub
adc
sbb
out
jnp
adc
jg
cmp
lods
ds
out
push
jge
imul
popa
inc
push
test
pop
aad
lds
xchg
xlat
cs
mov
fistl
imul
stos
push
fs
scas
test
mov
addr16
jnp
push
xchg
or
dec
aam
cmp
out
das
mov
out
ret
jnp
je
mov
mov
je
jle
mov
ret
inc
fldt
sbb
sub
mov
push
jle
and
iret
mov
lods
and
xor
test
ljmp
add
push
imul
sbb
push
dec
dec
pusha
je
scas
iret
sbb
stos
js
out
in
imul
in
jno
inc
adc
push
aam
icebp
push
lret
xchg
pop
xor
pop
xchg
inc
stc
shrl
push
divb
arpl
sbb
in
xlat
or
mov
mov
into
fisubrs
mov
cmp
xor
lret
xchg
daa
dec
pop
insl
dec
jb
inc
loop
lods
xlat
adc
mov
cmpsb
nop
push
test
mov
das
fnsave
adc
dec
lods
and
shl
mov
icebp
dec
cmp
and
mov
ss
aaa
mov
shrl
fldenv
lods
cld
xlat
dec
mov
push
and
addr16
daa
adc
xor
fldt
adc
and
push
push
in
in
mov
lahf
sub
test
mov
xchg
dec
jnp
push
dec
adc
jg
lods
mov
mov
stos
loopne
sahf
lea
std
bnd
nop
subb
outsl
xor
stos
ljmp
add
cmpl
push
mov
push
xchg
mov
fdivrs
cmpsl
call
xchg
test
xchg
dec
cmp
or
ljmp
and
ds
add
call
mov
xor
aas
pop
sub
push
sbb
mov
xchg
cmp
lods
xchg
pop
mov
and
mov
mov
clc
mov
add
inc
mov
xlat
filds
pop
add
sub
movsl
or
ret
jmp
xchg
mov
cli
jo
fdivrs
jbe
icebp
pop
adc
or
mov
aas
lea
sti
ret
in
fwait
inc
fdivs
adc
sbb
fcompl
repz
jns
out
pop
jb
outsb
bound
scas
xor
mov
outsl
and
in
fcoms
fimull
and
mov
mov
jbe
xchg
pop
mov
pop
fidivrl
jne
and
push
xchg
or
jp
pop
sar
cmp
cmpsb
sub
and
bound
pop
add
sbb
fldenv
aad
lret
push
stos
dec
jecxz
jecxz
outsl
je
push
jecxz
mov
dec
popa
popaw
clc
xor
and
mov
fistpl
stos
sbb
data16
lea
push
inc
loopne
insl
out
outsl
aaa
or
ret
fisttpl
jp
jns
imull
and
lods
sbb
dec
repz
xor
testb
jmp
or
mov
iret
jl
push
repnz
repz
lret
push
mov
or
or
bnd
cmp
or
jge
xchg
mov
sbb
jl
push
cli
mov
sub
xor
rcll
mov
leave
sarl
and
mov
inc
xor
mov
dec
dec
lods
xor
dec
fisttpll
lcall
pop
fisubl
iret
mov
lret
jo
cmc
call
and
push
xchg
or
dec
dec
pushf
xchg
xchg
fsub
pop
fmull
popa
sbb
ja
insb
adc
cmp
div
xchg
add
sbb
lods
mov
jae
sub
jbe
adc
clc
in
push
lahf
ficoms
loope
cmp
xchg
cmp
scas
sbb
insb
fsubrs
xor
scas
cmp
mov
int3
aad
xchg
fdivrs
mov
add
pop
in
stos
adc
dec
cmp
fs
pop
pop
insb
push
insl
cmp
pushf
fwait
leave
jo
in
adc
mov
mov
nop
fsub
loope
insb
mov
loop
and
in
lret
push
mov
adc
daa
inc
mov
fsubl
push
dec
mull
fisubl
es
lds
jp
pop
push
jg
pop
test
sub
or
ljmp
dec
lock
pop
fdivrs
mov
push
leave
lods
in
test
mov
mov
cmp
nop
jns
hlt
sub
clc
cltd
xchg
adc
pop
jmp
xchg
in
outsb
inc
jle
lahf
icebp
xchg
ror
push
add
ja
pop
std
jo
or
addl
adc
or
push
inc
lahf
add
rorb
xor
cmp
cmp
push
int
push
lahf
and
dec
mov
cmpsl
lods
sahf
sub
xlat
cmp
addr16
out
mov
dec
orl
jecxz
sar
or
lods
icebp
mov
xchg
mov
or
adc
inc
pop
dec
jmp
sub
xor
inc
dec
fisubrs
push
mov
sbb
xor
push
outsb
das
and
mov
jl
testw
jl
pop
das
jge
xlat
mov
fcom
dec
ds
push
fildl
adc
adc
adc
pop
loope
iret
sub
xor
iret
sbb
ret
pop
push
aas
and
data16
loopne
aad
cmp
sarl
inc
mov
test
repnz
sub
pop
enter
xor
scas
jns
fwait
fwait
daa
or
nop
std
jns
sbb
dec
call
jbe
xor
ds
adcl
sarb
or
add
or
xchg
out
imul
test
std
sub
rcrb
jnp
or
jp
add
xor
push
push
int
imul
push
adc
cmp
aaa
pop
sub
lahf
cmp
xchg
cmp
sbb
mov
bound
jae
jle
idivb
sbb
mov
and
sub
stc
gs
sub
push
xor
test
and
push
scas
shll
sbb
mov
cmc
divl
or
test
sub
into
adcb
shrb
pop
inc
pushf
adc
pop
arpl
imul
xchg
jecxz
push
pop
leave
adc
outsb
add
shl
mov
xor
add
je
enter
ds
cmc
adcl
xchg
loop
pop
cmp
bound
int3
pop
mov
das
xchg
out
mov
jb
iret
aaa
dec
cmp
jae
fldl
pop
in
jg,pt
jno
inc
jno
jne
dec
jmp
xor
insl
fistl
or
loop
jmp
dec
jg
jne
incl
enter
cmc
in
cmp
hlt
xor
push
pop
cld
leave
movb
dec
shl
xchg
repnz
lds
inc
jl
mov
pop
rorb
mov
sbb
std
pop
push
fdivrl
scas
lcall
aaa
lods
imul
sahf
int3
adc
icebp
jb
enter
inc
mov
inc
inc
mov
mov
cli
sub
mov
adc
cmpsl
and
cwtl
mov
jbe
aad
mov
cmp
push
mov
mov
lods
sbb
adc
mov
movsl
loop
mov
jg
add
mov
outsb
movsl
ret
and
divl
pop
pop
fistl
dec
lcall
jno
xor
gs
cltd
mov
jmp
imul
or
sarb
jge
xor
out
push
add
push
outsb
xor
sub
lret
aaa
or
add
insb
aaa
cmp
pop
sub
jo
dec
mov
cmp
jge
push
and
sbb
sbb
jo
iret
int3
and
sbb
adc
xchg
xchg
fwait
insl
xchg
arpl
ja
enter
out
aad
inc
test
mov
xchg
lds
or
push
jae
lods
adc
jo
adc
push
shr
ljmp
pop
xor
fldlg2
out
xor
mov
mov
push
dec
orb
lods
into
add
sbb
aaa
xchg
xor
sbb
push
xlat
popa
and
das
cmp
out
fwait
jne
xchg
inc
test
or
add
adc
xchg
arpl
sub
js
or
sbbb
xor
cmpsl
mov
or
pusha
sbb
roll
mov
sub
pop
jmp
adc
into
push
cmp
ret
mov
fcmovnbe
test
pcmpeqd
xor
pop
loop
stc
xchg
fsubrp
iret
flds
push
mov
mov
clc
inc
out
and
xchg
cmp
pop
xchg
push
rcr
mov
and
fsts
push
add
cmp
popa
addr16
popa
daa
pop
jge
inc
std
lods
ljmp
or
add
js
mov
xchg
insl
dec
loopne
out
popa
nop
aam
push
inc
sub
xlat
test
cmc
jns
mov
es
aad
loopne
sbb
fists
sbb
out
xchg
mov
xchg
xchg
stos
pop
adc
fisttps
xor
push
cmp
js
cld
inc
stos
dec
ret
rol
fidivrl
aam
mov
inc
test
roll
cmp
or
cli
inc
addr16
pushf
cli
push
push
xor
flds
xchg
flds
inc
aam
cmpb
mov
cmp
cmpsb
ljmp
lret
mov
std
mov
repnz
pop
xchg
divl
fadds
fwait
mov
scas
sub
pop
movsl
cmp
sub
dec
and
imulb
fidivl
std
daa
and
in
jnp
lret
insb
stos
cmp
xor
mov
repz
mov
pop
movsb
jnp
cltd
xchg
cltd
dec
and
sbb
jo
dec
pop
pop
pop
pop
push
lahf
inc
loop
jle
cld
test
ss
jno
mov
mov
fisttps
lret
xchg
xchg
jp
push
lahf
add
iret
sub
pop
xchg
cmp
data16
lcall
or
xlat
callw
inc
jle
fadds
jnp
in
xchg
xchg
dec
hlt
or
js
pop
rorl
pop
push
and
out
arpl
cld
cmp
add
jle
repz
push
rorl
mov
mov
or
popl
in
add
data16
lock
rcl
sub
xchg
dec
mov
xchg
shlb
mov
xchg
sti
xor
dec
divb
repnz
mov
or
xchg
fistpl
fnstsw
cwtl
jg
pop
mov
rolb
jo
scas
and
or
ret
mov
imul
shll
xchg
mov
mov
shlb
push
mov
jg
cld
inc
xchg
mov
mov
pop
xchg
push
repz
sub
pop
mov
es
mov
cmpb
and
fs
inc
inc
lret
jp
enter
lahf
cltd
hlt
or
xor
and
mov
orl
push
icebp
lea
or
mov
fists
das
lcall
insb
int3
adc
hlt
jecxz
pop
lea
lcall
sub
nop
outsb
into
movsl
fidivrs
in
push
push
jle
pop
mov
sub
push
fsubrs
or
add
xor
std
bound
sahf
loopne
sub
sbb
or
sahf
lods
pop
add
cmp
jg
emms
dec
dec
jne
push
xor
insl
ljmp
and
mov
fsubs
fucomi
xchg
xor
add
adc
jae
lret
fidivrl
ljmp
sub
and
loop
clc
push
cmp
stos
mov
adc
into
mov
add
test
nop
bound
add
pop
in
xchg
push
push
xor
jnp
mov
push
js
and
inc
inc
add
add
fwait
in
in
sysret
enter
aaa
xchg
pop
jnp
incb
sub
or
xor
addb
icebp
leave
in
movsl
dec
nop
adc
sarb
and
loopne
jmp
xor
aaa
jnp
pop
in
iret
cmp
pop
or
jnp
push
pop
and
sub
dec
or
mov
inc
aas
jo
xchg
push
jnp
lret
aas
filds
mov
or
cmp
adc
pop
mov
jp
sarl
sbbb
testb
test
push
ljmp
shlb
mov
cwtl
insb
gs
push
sar
sbb
push
not
nop
into
add
push
pop
insb
add
sbb
out
out
outsl
or
and
add
imul
add
adc
insl
add
dec
add
lock
scas
xor
mov
mov
lcall
test
sbb
add
xor
push
out
addr16
cmp
and
push
push
xorl
mov
pop
es
mov
cmp
mov
sbb
jnp
icebp
leave
loopne
out
fdivs
jmp
mov
xchg
mov
inc
aas
or
subl
in
or
mov
pop
push
push
push
stos
add
cmp
mov
xor
notb
in
aad
lods
aaa
stos
ljmp
cmpsl
lcall
js
ja
gs
mov
movsb
add
lret
cmp
xchg
fucomp
pop
and
sub
ss
cs
inc
frstor
jne
mov
sbb
test
pop
imul
cs
cs
xor
fnstenv
mov
es
aad
and
mov
cli
pop
cmp
aam
out
jecxz
fnsave
daa
lahf
sub
rorb
xchg
adc
sub
or
mov
sbb
jae
fidivrl
ds
xchg
sub
inc
pop
adc
xor
ja
mov
and
mov
aas
aas
push
ja
imul
cld
dec
sti
fsubl
push
test
loopne
popf
add
stc
in
fstps
xchg
jnp
xchg
out
les
arpl
imul
loop
xor
jno
pop
jno
lretw
test
fs
ror
or
jl
daa
lods
aaa
push
push
jo
outsl
fidivrs
push
iret
cmp
push
repz
lock
std
jge
dec
lods
jo
hlt
mov
mov
xchg
aaa
adcl
test
push
and
lds
cmpsl
popa
sub
inc
ror
xor
jle
notl
loop
cmc
test
mov
cwtl
jge
and
push
incl
mov
inc
popf
mov
add
outsb
aas
inc
ret
insl
jmp
aaa
or
pop
clc
adc
rolb
sbb
jp
mov
sub
repnz
and
sub
sub
dec
adc
ljmp
inc
in
arpl
clc
outsl
cmpsb
xor
xchg
sbb
lcall
mov
ss
movsb
lret
loope
movb
inc
mov
call
out
push
jle
mov
cmp
inc
add
push
sbb
mov
xlat
andb
arpl
dec
dec
mov
cmc
das
sbb
mov
cmpsb
sub
sub
inc
pop
lret
fidivrl
cmp
and
sub
mov
mov
sub
addr16
mov
repnz
jecxz
jne
jl
xchg
sub
loop
dec
ret
push
pop
mov
cmp
rcrb
pusha
adc
rcrl
subb
sbb
test
aad
push
or
mov
pop
sti
jg
cli
ljmp
xor
push
cmpsb
jno
push
jbe
pop
and
mov
andl
push
push
sub
inc
inc
mov
enter
jge
dec
movsl
lahf
mov
mov
rcrl
push
inc
inc
adc
fs
lret
sub
repz
inc
inc
fidivs
rcll
imul
data16
mov
daa
in
xor
sbb
jno
cmp
adcl
cld
mov
aaa
aad
sub
cmp
push
hlt
push
xchg
sbb
sbb
mov
jno
addr16
fidivrl
mov
or
inc
aad
out
divl
pop
xchg
call
lock
idiv
movsl
rolb
cmp
icebp
xor
xchg
aaa
jno
push
outsb
dec
sbb
mov
and
push
loope
and
jb
lret
cmovg
mov
adc
pop
cmp
daa
push
aaa
shll
sbb
lahf
fs
jmp
lahf
push
push
orl
push
fbld
mov
adc
loopne
dec
xor
int
les
cmpsb
xchg
sbb
cld
push
cld
mov
dec
lea
adc
sbb
std
xchg
int3
mov
testb
imulb
mov
mov
mov
or
xchg
cli
and
insl
add
push
or
sti
cmp
pop
les
xor
ss
push
or
sbb
cli
cmp
sbb
stc
scas
xchg
push
cmp
leave
loopne
fwait
push
outsl
stc
mov
mov
jb
adc
dec
push
push
xlat
dec
xor
mov
mov
mov
sbb
shr
add
dec
cmc
fstpl
ss
icebp
pop
pop
xchg
insl
mov
cli
out
notl
push
mov
push
jne
ret
sub
push
inc
push
cld
popa
ss
push
mov
and
roll
jae
clc
jae
dec
shrl
mov
xchg
sub
sbb
sub
in
pop
popa
inc
push
in
fwait
aaa
jle
leave
mov
xchg
int
xchg
inc
lret
dec
mov
or
xor
pop
mov
aad
inc
pushf
imul
sub
add
shlb
push
std
roll
imul
fimull
inc
jmp
fwait
dec
int3
mov
ret
lea
jecxz
insb
lcall
dec
inc
insb
daa
test
mov
xchg
inc
int3
popa
dec
jo
ja
mov
test
mov
add
call
iret
sub
aaa
mov
mov
nop
jmp
sub
outsb
lret
insl
test
daa
sub
adc
pop
xorb
mov
dec
sbb
fistpll
adc
push
inc
inc
or
jle
arpl
xchg
jno
xlat
and
fidivrs
mov
outsl
add
movsb
push
fs
cmc
mov
fstl
mov
pushf
dec
scas
push
mov
and
mov
jge
sbb
hlt
or
jp
xchg
mov
mov
pop
div
stc
movsb
test
ss
cmp
jge
mov
lahf
sub
jg
leave
pop
shll
mov
sbb
cmp
mov
dec
lret
aad
fldl
mov
cs
dec
mov
mov
cltd
and
jl,pt
mov
popa
inc
or
sbb
cltd
cmpl
dec
jns
add
or
mov
inc
icebp
jae
mov
pop
out
add
mov
adc
shrl
dec
cmp
sbb
jo
mov
push
push
or
cwtl
pop
fmul
dec
xchg
stc
sub
bound
pop
dec
rcll
xchg
idivl
pushf
push
nop
or
xor
mov
icebp
ljmp
lds
mov
ret
daa
pop
rol
in
push
xchg
sub
push
fdivrl
loope
insb
mov
aas
mov
scas
xchg
fs
scas
fucom
ret
mov
rolb
push
mov
mov
or
sbb
sub
js
sub
ret
xchg
xor
pop
das
or
stos
insb
xor
and
mov
int3
ret
mov
add
jmp
pop
pop
push
mov
xchg
ds
lret
cli
daa
rorl
dec
repz
imul
sbb
insb
idivl
test
ret
push
ds
xor
jno
emms
adc
fstp
incb
dec
jno
mov
outsl
cmpsl
add
xor
inc
mov
mov
cmp
dec
xor
fisttpl
adc
popf
adcb
fstpt
call
sbb
test
jns
loope
iret
sub
dec
ss
pop
xor
adc
sub
xchg
popf
sub
sbb
ret
stos
outsb
adc
adc
test
adc
xchg
rorb
cmc
sbb
out
mov
mov
popf
ss
dec
adc
dec
scas
or
call
push
fcoms
jg
jb
jmp
sub
push
mov
daa
stos
pop
add
xor
push
lock
and
iret
popf
mov
pop
push
push
cmpb
mov
inc
adc
sbb
mov
inc
outsb
inc
lods
lret
or
es
cmp
stc
lods
adc
pop
lods
rcrb
mov
push
dec
or
jl
std
sub
pusha
mov
stc
xchg
repz
and
sub
mov
pop
push
cli
pop
fiadds
mov
jnp
inc
orb
imul
int
mov
inc
pop
out
movsl
mov
mov
jo
in
outsl
pop
stc
stos
pop
dec
aam
adc
jb
fucomp
in
inc
cmp
dec
fcomp
gs
shlb
mov
push
lock
out
mov
or
xchg
dec
out
inc
cmp
push
cs
into
jae
loop
roll
sub
xchg
mov
lcall
enter
loopne
pushf
addr16
push
icebp
mov
jmp
imul
dec
arpl
sbb
xchg
pop
jo
jge
jle
sbb
std
inc
aad
cmp
lret
mov
hlt
jl
mov
add
lods
mov
stc
dec
add
fsubp
push
cld
cmp
movsl
and
out
pop
inc
add
sbb
cmp
jbe
fnstsw
ret
in
xor
clc
mov
lea
jbe
dec
pusha
aas
dec
icebp
fwait
mov
and
setge
lret
enter
sub
xor
mov
sub
cmp
icebp
ja
sbb
lret
sti
or
js
pop
pop
or
add
int
push
lds
sti
fstl
test
xchg
lea
imul
aas
xchg
idivb
inc
dec
xor
rcrb
mov
mov
and
cmp
into
lods
push
lods
sahf
jle
and
xchg
ss
lcall
xlat
jp
imul
dec
ds
mov
jae
aam
dec
jl
add
add
jnp
and
sahf
lsl
ljmp
xor
jbe
dec
sti
mov
mov
cmpsl
in
iret
fsubrs
and
inc
mov
push
jmp
and
pop
lods
cwtl
out
dec
or
dec
inc
sub
xor
or
jns
popa
mov
push
gs
test
xchg
imul
mov
inc
dec
movsl
and
hlt
mov
jmp
cmp
ja
pop
pop
inc
mov
lret
ret
sahf
add
sub
les
mov
stos
fsub
cmpsl
xor
lcall
dec
add
in
movsl
mov
aad
xorb
inc
pop
ficoml
mov
xor
cmpsl
xor
xor
jne
mov
stos
jg
fbstp
negb
shl
bound
fstpt
sub
test
outsb
xchg
lret
je
iret
cwtl
int
aaa
jle
clc
sub
cmp
xchg
push
dec
xor
hlt
and
lock
xchg
mov
and
mov
pop
fildl
bound
aas
call
shlb
xchg
mov
aad
repnz
stc
dec
pushl
xor
lods
mov
mov
sbb
add
loop
aam
jno
out
adc
xchg
cmp
pop
lods
std
adc
mov
lock
aam
push
pushf
xor
add
inc
pop
in
repz
lret
xchg
adc
inc
mov
pop
xor
dec
jmp
or
insb
sarb
out
shr
int
fisttpl
add
outsl
mov
ffree
sti
or
pop
loope
xorb
shlb
lods
dec
lods
inc
rcrb
insl
cld
xlat
mov
adc
sarl
out
scas
out
xchg
adc
mov
dec
cltd
push
push
scas
pop
mov
xchg
out
call
pop
cli
adc
mov
jp
int
mov
jecxz
pusha
mov
jnp
ret
jecxz
mov
out
idiv
push
stos
divb
pop
clc
xchg
cs
mov
pusha
mov
rcll
int
mov
xchg
popf
mov
push
lock
or
into
out
push
dec
aaa
inc
sbb
rcr
rorb
mov
xor
enter
cmpsl
aad
jp
std
and
test
push
cmp
xchg
pop
xchg
filds
adc
cltd
notl
sbb
dec
push
leave
sbb
pop
push
lahf
sbbl
mov
ret
aaa
xchg
lahf
mov
mov
scas
fistl
mov
int3
daa
xchg
loope
jne
fnstsw
or
push
pop
mov
cld
movsl
xchg
cwtl
cmp
mov
sub
in
pop
mov
aaa
jo
dec
pop
mov
cmp
orl
mov
pop
add
out
test
push
adc
lea
shlb
xchg
inc
aaa
mov
push
sub
cli
mov
aaa
mov
add
icebp
mov
mov
test
cmp
adc
cmpsl
adc
dec
or
mov
gs
loopne
adc
out
dec
rolb
out
push
adc
icebp
aas
les
cmp
test
fsubrs
adc
dec
sti
xchg
je
push
fmull
push
push
dec
xchg
push
inc
add
or
ret
scas
dec
movsl
lods
lock
xchg
clc
ja
stc
outsb
pop
fmul
rcr
mov
ljmp
sub
xchg
sbbl
imul
pop
lods
imul
scas
mov
sar
repz
xchg
inc
into
mov
adcl
aam
cmp
pushf
cwtl
ficoms
xchg
arpl
jae
adcl
adc
roll
es
and
mov
int
mov
jnp
andb
lods
add
cmp
adc
mov
imul
in
dec
cmpl
push
sti
aam
std
add
jmp
cmp
mov
pop
pop
hlt
inc
arpl
jmp
outsb
add
inc
dec
push
pop
lret
jle
fildll
sbb
lret
push
mov
aad
fs
in
enter
sbb
add
push
push
loopne
pop
movsb
inc
lcall
lods
mov
pop
movsb
ja
fdivr
repnz
push
shlb
repnz
sahf
xor
mov
and
or
mov
sahf
sarl
ficompl
sub
xor
leave
jp
fdivrs
jns
aad
mov
mov
sti
ss
out
aas
popa
push
lea
dec
adc
xchg
ffree
es
pop
cld
scas
pusha
aad
jge
dec
cmpb
cs
jle
adc
mov
mov
fcomi
cmp
cwtl
and
sbb
cli
rolb
out
add
mov
lock
fisubs
pushf
inc
xchg
std
dec
rorb
stos
or
fcoml
xor
repnz
shrl
jnp
xchg
inc
fidivl
loop
pop
mov
mov
std
lret
sub
jp
andb
movsl
xchg
imul
cmp
je
loop
stos
mov
fidivrl
or
outsl
mov
es
lahf
mov
ret
icebp
jge
mov
jl
jo
jge
mov
mov
jo
andb
adc
mov
push
mov
stos
gs
pop
push
push
sub
mov
mov
loopne
jp
xchg
outsb
mov
out
sbb
sub
sbb
mov
mov
lcall
and
aad
sbb
inc
xchg
dec
pop
ss
cmp
cwtl
and
sub
adc
add
cmp
outsb
jno
cmp
ror
bound
mov
and
aam
cmp
mov
xorl
push
arpl
fsub
addr16
dec
mov
jge
pop
cmp
adc
inc
aaa
push
jge
xchg
mov
inc
popa
and
rcll
jnp
adc
cwtl
pusha
js
test
cltd
xchg
jmp
daa
or
xor
sub
xchg
je
ds
aam
xor
icebp
mov
push
push
cs
loope
add
adc
lea
in
mov
rcrl
sub
mov
fwait
xor
mov
sbb
cmp
sbbl
fmul
mov
xchg
mov
mov
not
jo
mov
inc
lea
into
ja
lahf
clc
push
mov
cmp
cmp
pop
es
dec
cld
mov
enter
scas
test
adc
or
jnp
ss
hlt
sbb
jmp
pop
push
fidivrs
pop
adc
cmp
pop
pop
inc
out
jnp
repz
cmpsb
push
sahf
bound
rolb
frstor
push
dec
jmp
rcrb
insb
sbb
jle
mov
cwtl
push
neg
ret
pusha
or
fsts
lods
sub
jmp
and
add
sbb
clc
pop
mov
ja
call
rorb
pusha
and
stos
in
mov
enter
cli
pop
lds
lock
adc
mov
wrmsr
ljmp
lock
fs
mov
jb
lods
leave
xchg
out
out
js
xor
sbb
mov
inc
movq
dec
xlat
icebp
xchg
lock
mov
and
and
and
or
fisubrs
cmpsl
mov
adc
cmp
popf
pop
xchg
jo
push
fisubs
xchg
loopne
xchg
xor
push
mov
sub
into
loop
sahf
int3
xor
cmp
aam
sbb
test
push
imul
jno
fucomi
jne
repz
stos
add
and
xchg
mov
out
ret
pop
mov
dec
stc
rorl
and
loop
fsubl
dec
mov
mov
dec
dec
lret
mov
movsl
ss
pop
sbb
jle
lock
sbb
bound
mov
sub
call
lahf
sbb
in
pop
test
lahf
in
push
push
or
les
bound
pushf
js
and
ret
jnp
push
inc
nop
push
fmulp
clc
neg
popa
in
in
idivl
scas
and
jno
xchg
in
js
and
mov
cld
xorb
sub
mov
pop
mov
jae
jo
dec
out
in
xor
jne
sbbb
mov
ficompl
mov
jecxz
mov
aad
in
sbb
dec
lret
push
pop
jl
ja
sbb
daa
call
xchg
aaa
insb
mov
dec
sub
mov
stc
nop
jle
pop
jg
inc
sbb
xchg
pushf
and
mov
daa
nop
and
push
dec
scas
outsl
xor
nop
pop
hlt
loop
pusha
call
xchg
outsb
or
les
pop
popa
inc
ret
pop
adc
sub
pop
movsb
lss
out
lods
sub
or
mov
jns
push
fisttps
push
sub
and
addr16
add
inc
sbb
shlb
adc
cmpsl
push
sahf
lea
lds
mov
mov
cltd
inc
shll
push
into
ljmp
insb
add
in
dec
sub
sub
and
inc
mov
into
jmp
adc
inc
pop
bound
add
pop
call
mov
mov
fisubs
inc
outsb
arpl
xor
loopne
dec
lcall
mov
pop
pop
xor
add
dec
fwait
mov
leave
data16
pop
xchg
adc
sbb
dec
stos
cltd
sbb
gs
xor
sub
stos
sub
lret
std
insl
dec
push
mov
jmp
cwtl
out
sahf
loopne
sti
pop
dec
adc
sbb
aam
xor
test
shr
or
into
mov
shrl
xor
mov
arpl
cmp
in
mov
loopew
out
test
ror
add
sbb
stos
sbb
mov
sti
dec
add
mov
hlt
pusha
mov
stos
cmpsl
push
push
mov
fisttpl
aas
cmpb
ret
out
cmpb
push
ficomps
lcall
icebp
shlb
mov
cmp
push
mov
push
add
js
shl
insl
mov
ret
mov
fdivrs
out
fdivr
clc
insb
mov
jg
inc
fcoms
dec
imul
sbb
mov
mov
sahf
inc
shll
or
add
dec
test
and
dec
sbb
data16
dec
cmp
mov
cli
xchg
test
shlb
aas
mov
mov
sti
addr16
mov
inc
mov
and
and
and
add
adc
outsb
imul
mov
addb
icebp
push
data16
mul
fiadds
pushf
pop
push
scas
sahf
push
sub
sbb
popf
adc
cwtl
repz
mov
mov
jns
add
pushf
and
xchg
jne
add
sbb
fidivs
sarb
mov
call
sub
or
lret
shl
outsl
lahf
aaa
dec
ds
jp
push
inc
js,pn
cmpsb
jae
fcom
jecxz
and
jnp
lahf
sub
mov
pop
mov
cmpl
arpl
jne
cmp
out
sarl
loopne
xor
adc
sbb
and
sbb
insb
mov
mov
add
movsb
mov
int3
lcall
cltd
inc
pop
andl
clc
lahf
arpl
popf
cmp
stc
js
es
loop
out
mul
cmp
rol
fistl
adc
adc
cs
xchg
or
cltd
mov
popf
stc
inc
scas
pop
dec
push
lret
gs
lret
mov
cltd
test
stos
fwait
xchg
lcall
icebp
or
jb
xor
decl
inc
xchg
mov
sub
pop
test
mov
aaa
cld
shlb
mov
cmp
clc
and
dec
cs
lods
xadd
xor
das
fildll
cmpl
dec
sbb
jp
sub
testb
sub
adc
out
push
sarl
dec
dec
pop
xchg
testl
cmp
inc
jbe
xor
and
in
outsl
push
testb
mov
aaa
push
dec
xchg
jl
data16
mov
add
or
xchg
mov
scas
rorb
dec
sbb
js
jno
cmp
test
popa
out
out
repz
add
roll
add
and
and
in
dec
and
and
pop
push
call
xor
xchg
sbb
int3
adc
adc
or
mov
lret
push
fdivl
mov
adc
adc
ret
push
sbb
in
sub
test
out
lods
jmp
add
scas
jl
mov
jbe
and
sub
fidivl
cld
imul
mov
xchg
sarl
mov
out
or
mov
loopne
out
psubb
outsl
xchg
jecxz
pushf
inc
jae
aad
jle
repnz
shl
mov
pop
lods
cmp
jmp
stc
cmp
xor
add
adc
pop
adcl
dec
push
popa
enter
cmp
mov
popa
loope
add
adc
pop
sbb
adc
ljmpw
mov
imul
pop
pop
mov
je
mov
pop
mov
push
sub
or
or
aam
sbb
and
push
into
stos
jecxz
xchg
and
sub
aad
pushf
or
fisubrl
cmp
je
sti
in
lock
sub
cmp
in
movsb
inc
daa
xor
dec
lcall
fidivrs
stos
out
push
mov
mov
ss
es
push
fcoms
mov
dec
adc
stos
in
aaa
push
subb
loope
lock
lock
sbb
and
jecxz
jae
and
jno
rorl
xor
jecxz
lea
dec
jge
jo
xchg
xchg
pop
mov
not
sbb
lock
push
ja
adc
cwtl
xchg
lret
or
nop
cld
mov
popa
out
cmp
sub
dec
mov
scas
jne
xor
clc
jne
xchg
movsl
xor
cmp
jge
jmp
insl
xor
dec
mov
or
dec
dec
fcmove
sbb
and
fcmovbe
inc
sbb
pop
mov
insb
or
shll
mov
mov
add
in
mov
out
push
imul
add
pop
ja
mov
fs
test
hlt
pop
loop
sub
ror
idivb
xor
es
std
das
sbb
or
mov
push
or
mov
xchg
pop
dec
insb
xchg
inc
dec
jo
out
xchg
mov
add
jmp
jbe
je
xor
mov
pop
cmp
pop
vpunpckhwd
jae
mov
xchg
sub
cmp
mov
test
sbb
push
gs
das
sbb
or
or
adc
mov
aaa
xor
lahf
pop
int3
dec
push
and
mov
jbe
fisubrl
sub
popa
jmp
add
push
push
sub
mov
jnp
mov
dec
sub
mov
ljmp
jge
xchg
mov
sti
mov
adcl
les
cmpsb
stos
mov
arpl
shl
sub
dec
lods
dec
mov
inc
xchg
jle
sub
sbbb
xchg
ret
popa
cmp
mov
sti
bnd
std
push
mov
mov
push
lcall
adc
xorl
stos
inc
dec
pusha
mov
sub
add
hlt
add
ja
pop
sbbl
leave
das
or
das
jb
ja
xchg
xchg
pop
jbe
pop
adc
xchg
je
aad
inc
sahf
repz
jge
clc
cli
rol
mov
sbb
jp
mov
das
in
test
add
sub
popf
and
and
frstor
movsb
fcomip
mov
xchg
fildl
lret
clc
shll
ret
mov
icebp
icebp
je
inc
inc
out
aas
mov
negl
xchg
fildl
mov
jne
scas
mov
dec
mov
popa
ja
mov
inc
hlt
loopne
cmpsl
mov
shrl
push
and
adc
mov
push
xchg
in
dec
sahf
movsl
push
xor
adc
mov
ficoml
imul
mov
and
adc
je
sub
add
sbbl
out
and
ljmp
push
jmp
cmp
sti
inc
stos
bound
outsl
push
pop
jb
enter
shlb
shrl
add
or
nop
mov
bndldx
out
ficomps
or
inc
std
icebp
movsl
sbb
loope
lods
aam
pop
cmp
push
adc
lret
pop
lds
iret
fcoms
insb
xor
in
sub
push
lea
aas
daa
or
imul
jne
fsubrl
mov
jle
scas
xchg
sbb
shlb
push
push
push
adc
jae
jl
insl
push
xor
ss
xor
jne
mov
cwtl
aaa
das
ret
fcoms
fbld
imulb
popa
mov
iret
test
adcl
flds
push
or
inc
repnz
cs
and
ss
addr16
jmp
out
cmpsl
mov
jnp
clc
adc
cwtl
cltd
aam
jp
ja
xchg
sbb
cli
mov
inc
shrb
mov
stos
xor
cli
sub
das
pop
imul
aad
repnz
out
xlat
xor
sub
scas
pop
sub
mov
jnp
add
popa
testb
cmp
std
mov
daa
pop
or
jo
add
fistps
insb
ja
enter
fildll
cli
faddl
inc
pop
fisubrl
addr16
fcomip
sbb
fdivrs
dec
mov
adc
addr16
mov
inc
inc
push
lods
stos
imul
out
loopne
lea
outsb
out
sub
dec
jg
in
mov
test
lcall
cmp
andb
push
rcll
loop
push
push
daa
fidivrl
mov
cmp
pop
adc
jns
lret
test
mov
cmpsl
shll
mov
jecxz
repnz
mov
fld
mov
mov
out
fistl
inc
jmp
mov
js
mov
vcvtps2pd
es
lods
lods
in
xor
les
fimull
roll
and
push
lock
mov
add
mov
jl
mov
icebp
scas
icebp
mov
push
mov
add
fsubrs
loope
cs
cmp
jo
xor
jp
lret
js
in
repnz
mov
add
shlb
dec
dec
inc
mov
jae
xchg
push
stos
int
jnp
sbb
sahf
jmp
cmp
popf
add
movsl
lret
cmc
push
out
mov
icebp
mov
cmp
aam
mov
icebp
std
mov
js
mov
adc
cmp
jb
test
push
popa
mov
jbe
inc
shrb
xor
fisttps
lcall
cmpl
imul
ja
push
sahf
xchg
popf
fs
or
push
jp
js
inc
or
push
add
stos
cltd
inc
popf
and
xor
inc
call
jbe
dec
jb
jne
or
punpckhdq
adcl
jae
cmpsb
xor
pop
outsl
lods
clc
loopne
fsubl
scas
jmp
pop
insb
gs
in
push
fisubrs
pop
leave
scas
pop
xabort
inc
sti
stc
scas
shlb
shlb
sbb
ja
clc
insl
cli
inc
ret
mov
dec
push
push
push
and
jmp
test
dec
jle
iret
mov
ret
or
ficoml
add
push
dec
in
jns
stc
pop
dec
adc
adc
fcomps
push
xchg
das
mov
jle
sbb
fwait
jnp
sbbb
insb
pop
add
push
arpl
divb
ret
cli
xor
xor
mov
sub
xor
and
leave
test
dec
xorb
jmp
sbb
out
push
jno
movsb
lods
mov
and
fistpl
add
adc
jae
lret
mov
xchg
int3
imull
popa
fsubrs
repz
push
xchg
xor
dec
adc
stc
mov
pop
mov
hlt
nop
sbb
mov
xor
push
and
xchg
xchg
cmpsb
dec
cli
jae
push
mov
arpl
mov
ret
push
mov
lret
test
andb
pop
xor
jo
icebp
pop
or
mov
test
sub
jge
add
cld
mov
mov
hlt
cmpsl
sub
or
pop
dec
cmp
lods
shl
mov
movl
cmp
dec
xchg
pop
hlt
xchg
cltd
fidivs
aaa
call
cld
out
out
ja
xor
adc
and
dec
lock
push
pop
scas
jmp
cwtl
pushf
push
loope
push
pusha
or
inc
and
sbb
out
mov
mov
jmp
or
jo
addb
mov
outsl
push
rol
test
in
jae
push
xchg
or
push
jno
insl
xor
shl
and
dec
mov
icebp
push
mov
outsb
mov
das
gs
sbb
jecxz
subb
cmp
or
cmp
sbb
dec
scas
inc
add
push
and
push
mov
bound
sub
add
push
mov
out
repz
andl
xor
imul
cld
sub
dec
not
sub
lock
dec
sub
mov
add
imul
idivl
mov
mov
dec
addr16
dec
test
lcall
in
popf
cli
xor
outsb
in
mov
stos
cmp
out
arpl
imul
sub
lret
mov
sbb
jo
pusha
iret
pop
popf
xor
stos
xchg
decb
xor
pop
mov
push
mov
pop
jae
pcmpeqd
stc
mov
pop
fnsave
rdpmc
es
or
sahf
nop
mov
clc
pop
inc
pusha
cmp
jecxz
inc
cwtl
push
push
popf
int3
xchg
sarb
addb
push
or
sbb
jmp
push
inc
aam
shl
aad
jne
dec
movsl
mov
in
add
push
pop
lret
cli
xor
adc
adc
mov
testl
out
mov
mov
mov
dec
mov
test
sub
cmp
icebp
int
lock
cmp
shr
jmp
fcmovne
cmp
imulb
mov
or
nop
adc
push
fdivs
rorb
dec
lods
mov
daa
loopne
xchg
loopne
ret
insb
mov
fwait
jl
pushf
push
cmp
lret
mov
cmc
enter
dec
movsb
out
dec
lea
xlat
mov
icebp
inc
xchg
shrl
pop
inc
mov
jb
jmp
movsl
lret
pop
icebp
ficoms
pushf
fnstcw
lea
pusha
loop,pn
cmp
or
in
xchg
mov
imul
xchg
mov
jbe
push
jnp
stc
inc
cmp
nop
dec
cmp
dec
in
sbb
pop
pop
mov
std
adc
aaa
push
sti
push
out
push
mov
pop
mov
dec
cltd
into
imul
push
sub
shll
mov
out
xchg
or
ret
mov
cmp
jae
pop
leave
mov
sbb
pop
popa
fnstsw
jns
sbbb
xchg
and
cmc
data16
into
and
pop
stos
int3
cmp
out
push
inc
scas
adc
sbb
cmp
push
mov
aad
mov
pop
mov
sbb
inc
mov
push
fwait
repz
imul
sub
fs
int
xor
ds
pushf
push
xchg
call
subl
mov
xchg
stc
divl
call
dec
clc
dec
xor
and
les
rcr
or
cmc
imul
punpckhdq
mov
shlb
cmpsb
in
mov
push
scas
mov
mov
call
push
pop
dec
inc
pop
fldl
mov
movsl
mov
mov
or
push
and
out
push
movsl
sbb
mov
push
xor
pop
dec
stos
pop
sub
mov
ljmp
mov
mov
inc
call
jmp
xor
or
push
mov
ret
lds
pop
sub
fisttps
xchg
inc
mov
sbb
imul
outsb
fstps
mov
shrl
xchg
mov
fsts
inc
fs
xchg
mov
loop
out
mov
sti
sti
in
aad
ret
adc
mov
int3
fcomps
dec
mov
mov
inc
or
mov
les
pop
jno
xchg
sub
adcl
push
ror
test
insb
push
sbb
xchg
pop
dec
mov
dec
cmp
in
andb
ds
jnp
cmpl
mov
repnz
cltd
sub
adc
cltd
mov
movsb
aam
lcall
jge
cltd
fbstp
inc
pop
pop
jns
xor
test
mov
add
cld
aas
sbb
faddl
jmp
cmp
cmp
in
jne
out
sahf
pop
cmp
dec
jns
mov
ror
stos
sbb
stc
shrl
je
iret
movsl
add
mov
push
sub
add
aad
stc
testl
mov
and
xlat
test
mov
fdivl
mov
stos
mov
cli
out
mov
fbstp
push
or
mov
leave
xor
sbb
in
mulb
out
jl
push
xlat
stc
sbb
fisubs
movb
cltd
add
jp
aad
push
js
sub
adc
movsl
mov
cmp
jnp
sahf
mov
adc
repz
cmp
xor
div
pop
inc
nop
inc
in
jge
jg
std
test
mov
aas
sbb
push
mov
insl
or
lock
out
or
xchg
loopne
arpl
sbb
imul
and
add
xor
and
mov
in
mov
insb
cli
dec
push
or
popf
test
lret
das
xor
jmp
and
push
std
push
rol
lret
sbb
ljmp
lea
mov
insl
push
jge
out
outsl
repnz
roll
mov
or
push
add
ror
pop
enter
stc
xlat
fadd
inc
aas
pop
mov
pushf
int3
mov
mov
in
adc
daa
mov
and
std
nop
jge
or
mov
addr16
mov
mov
mov
fstpt
cmc
adc
scas
cmpsb
jecxz
fmul
js
loope
lret
push
out
xor
fwait
test
movsb
aad
outsl
outsb
stos
dec
fdiv
sbbb
imul
inc
and
sub
fxch
sahf
mov
js
clc
lret
aad
jae
inc
mov
data16
leave
xor
out
pop
cmp
cmp
jg
js
cmp
repnz
xor
fisubs
pop
fstps
add
push
adc
sbb
sub
repz
sbbb
in
sbb
sub
out
sbb
cmpb
xchg
lahf
cmp
or
fcmove
pop
imul
cmp
xor
movsl
add
test
icebp
sbb
mov
adc
add
pop
das
jno
xor
fistpll
lcall
lock
mov
cltd
rclb
push
sub
and
gs
or
hlt
std
fldt
clc
jl
test
mov
je
hlt
sub
arpl
jge
call
xor
push
xchg
lods
cmp
mov
xor
pusha
sbb
and
adc
jb
adc
ds
inc
out
pop
lock
int
popa
sbb
push
inc
xor
jp
ds
pushf
adc
fwait
mov
cmc
flds
sbb
sarl
out
sub
arpl
test
mov
cmpsl
das
jbe
sahf
xchg
sub
into
inc
bound
scas
iret
sahf
dec
push
pop
ds
aas
faddl
loopne
or
fimull
xor
dec
imul
gs
ljmp
aam
lret
pop
iret
xor
sarb
mov
adc
push
mov
ljmp
ret
add
add
sbb
adc
fs
out
scas
mov
ss
divb
dec
in
jno
dec
popa
lds
dec
js
cmp
add
and
cltd
mov
inc
mov
mov
xchg
push
and
add
insl
shl
adc
sub
cli
cs
cmp
mov
pop
cmp
jl
sub
cmp
pop
aad
or
fidivrl
addr16
in
imul
ljmp
add
loope
cmp
icebp
push
xchg
xchg
and
mov
repnz
push
cwtl
jmp
call
mov
mov
inc
jmp
out
cmp
inc
sub
into
fwait
and
pop
repz
and
or
fsubrs
and
fbld
movsl
sbb
cmp
lcall
xchg
dec
dec
dec
and
lahf
adc
pop
outsb
mov
out
and
and
enter
gs
jnp
sub
lods
jl
xlat
mov
sbb
pop
and
pop
ljmp
ficomps
cmp
inc
movsb
repnz
adc
xor
push
out
subb
cli
pop
jae
hlt
pop
in
test
jmp
std
add
sub
sahf
sbb
xchg
pushf
mov
movsb
dec
aam
sub
pop
idivb
mov
sti
imul
cmp
mov
int3
push
push
and
jne
sbb
popf
aad
in
nop
lret
fbstp
mov
fsubp
pusha
fwait
addl
test
sbb
shrl
aad
pop
cmp
pop
lahf
bound
cmpsb
dec
lret
mov
xor
repnz
jecxz
or
shll
add
cmp
enter
mov
pop
imul
inc
dec
push
xor
iret
push
dec
int
iret
out
and
outsb
or
xchg
cli
les
adc
sbb
mov
push
ja
cli
xor
jnp
inc
aas
lods
es
mov
mov
adc
pop
out
rol
fwait
xor
movsl
pop
mov
insb
ret
inc
es
cmovns
ret
imul
jg
add
sahf
push
fdivrp
mov
mov
dec
sub
mov
call
stc
mov
jno
sub
popf
arpl
sahf
addb
dec
shrb
rclb
fidivs
fwait
inc
inc
insb
adc
adc
xor
and
jle
jnp
mov
xor
clc
lcall
add
cmc
fwait
cli
ret
dec
mov
jb
cld
jb
call
add
ret
lock
inc
mov
pop
scas
pop
les
loope
xchg
out
or
call
enter
ljmp
inc
xlat
sahf
orl
push
ja
lret
jbe
aas
addr16
pop
movsb
pop
inc
push
xor
lds
xchg
test
and
in
jb
xchg
mov
dec
cmpsl
jns
testb
mov
xchg
and
jno
mov
jbe
mov
and
jo
push
jns
orb
fdivrs
inc
pusha
inc
mov
rcrl
adc
test
clc
pop
and
aam
outsl
lret
dec
add
cld
dec
in
int3
addr16
movsb
mov
sbb
sbb
cmp
sbb
ret
outsb
or
add
mov
cld
int
lret
aaa
out
and
icebp
rorb
pop
mov
mov
cld
scas
lods
inc
or
or
shr
cmp
popa
packsswb
xchg
repnz
or
lods
fs
jb
ja
dec
rcll
mov
pop
imul
mov
mov
pop
dec
pusha
clc
retw
sub
push
pop
xor
sbbl
jbe
imul
inc
outsb
std
cli
jnp
call
fdivrl
fisttps
aad
callw
pop
out
xchg
testb
movd
das
xchg
bound
hlt
popa
sbb
cs
or
mov
or
push
sbb
inc
movl
inc
cmp
mov
xchg
dec
push
mov
gs
fimull
lret
mov
or
jns
outsl
xor
loopne
sbb
in
cmp
dec
lods
add
xchg
inc
addb
rcrb
cltd
mov
mov
xchg
inc
cs
lds
dec
push
aad
adc
les
ljmp
cwtl
push
call
aam
or
jae
xlat
stos
stos
js
jno
out
mov
add
les
push
pop
push
lea
and
movsb
mov
mov
loopne
push
and
mov
bound
sub
jp
scas
jmp
add
xor
dec
cmp
call
adc
adc
loope
mov
nop
shrl
xlat
mov
xchg
pusha
imul
adc
inc
in
mov
fisttpll
addr16
cmc
mov
or
loop
out
and
sbb
push
ffreep
movsb
jae
jne
outsl
cmp
cmp
push
rcl
xchg
dec
push
cwtl
bound
mov
ss
rcr
movsb
das
mov
outsl
inc
cmp
lret
in
dec
mov
out
or
inc
sub
inc
test
cmpsl
sub
stos
rorl
mov
lods
sub
sub
ret
dec
loopne
jle
mov
jecxz
out
jb
loop
xchg
dec
cmpsl
mov
xorb
fcmovnu
imul
in
xor
cmp
mov
je
or
std
je
adc
mov
sbb
inc
out
sub
jmp
add
test
jae
pop
mov
jp
ret
nop
and
loope
lret
dec
dec
or
inc
loope
movsb
loopne
xor
repz
scas
xorb
pop
loopne
adc
cmp
mov
cmp
outsl
iret
sbb
mov
testb
cmp
sbb
mov
in
sahf
addl
dec
fists
add
mov
stos
mov
inc
into
and
dec
inc
adc
dec
add
test
jns
jg
out
repnz
scas
fucomi
out
loop
outsb
icebp
das
xchg
and
stos
mov
loope
out
in
or
pop
pop
imul
dec
std
jb
incb
mov
nop
add
mov
mov
fwait
sbb
dec
add
cld
mov
pop
adc
mov
fiadds
mov
add
insb
mov
dec
subl
xchg
int
xor
flds
das
jno
push
push
lds
fwait
dec
mov
sbb
xor
push
xor
push
mov
xor
dec
xlat
js
shr
push
lds
fidivs
push
es
push
test
jl
pop
lret
loop
xor
inc
jo
pop
mov
imul
loope
cwtl
scas
jo
mov
int
xchg
mov
sarl
popf
loopne
dec
jmp
test
xchg
adc
or
jl
into
mov
test
rorb
sub
aam
inc
pop
jbe
les
pop
ret
adc
sub
dec
dec
or
and
or
popa
repz
movsl
sar
adc
in
sbb
in
push
mov
sbb
adc
in
cmp
stos
pushf
lret
cld
daa
movsb
out
xor
movsl
je
cmp
inc
add
pop
inc
push
aaa
imul
dec
mov
std
push
popa
leave
insb
inc
xchg
push
cli
movsl
out
mov
adc
subb
cmovno
push
mov
and
cmp
sti
cmp
xchg
mov
mull
fimull
cmpsl
sbb
sub
cs
test
pop
sahf
mov
cltd
das
cmp
aas
iret
aaa
mov
dec
test
xor
mov
mov
ds
cmp
scas
xchg
fwait
mov
loop
pop
fsubrs
pushf
int
adc
mov
pop
cmp
pop
mov
cmp
leave
mov
cmc
test
push
fidivrl
mov
fwait
lds
mov
add
xor
mov
add
scas
and
loopne
int
xchg
lret
push
cltd
push
push
dec
xor
push
cmp
movsb
pushf
add
adc
xor
ret
pop
iret
gs
lock
pop
sbb
mov
aaa
xchg
ret
xchg
or
sbb
in
cli
lahf
dec
push
mov
sbb
andb
loop
xchg
adc
cmp
xchg
sbbb
lahf
xor
cs
scas
loop
into
sbb
inc
push
and
adc
inc
movsb
jno
loopne
jnp
rcrl
mov
or
jmp
sub
cmpb
push
jle
cmc
stos
mov
out
stos
pop
xor
jo
cli
outsb
test
mov
pop
xchg
addb
mov
push
je
jne
pop
jg
push
push
dec
mov
push
int3
add
dec
cmp
sti
add
sahf
sub
mov
jp
push
bound
outsl
cmp
sub
mov
fdivrs
js
dec
lcall
mov
adc
adc
ja
sub
pushl
std
add
stos
adc
int3
inc
pop
xchg
lds
out
mov
popa
sarl
adc
or
ss
pushf
mov
popf
mov
lds
push
inc
cmp
and
inc
stc
fwait
mov
inc
fiaddl
pop
cmp
xor
stc
in
stos
fldcw
shll
ja
aad
cmp
lds
and
xchg
lock
mov
jp
push
mov
popf
xchg
push
jp
repz
rorl
xor
ja
pusha
xchg
cmp
repnz
loope
cmc
add
sbb
xor
out
sbb
inc
fisubrs
shl
xor
xchg
ljmp
scas
pop
mov
push
sub
sub
mov
cld
fpatan
jnp
outsl
sbb
lods
dec
add
pop
and
sahf
sarl
push
cmp
daa
dec
aad
sub
inc
push
xor
mov
imul
jle
sbb
sbb
mov
mov
iret
xchg
inc
mov
push
add
sbb
adc
jge
adc
mov
mov
mov
sbb
push
mov
xor
pusha
ss
mov
rorl
int
jge
adc
pushf
std
jle
pmuludq
jno
cwtl
lods
psrad
leave
ret
cmc
xchg
sub
popf
pop
outsb
out
pop
mov
cmpsl
cmc
clc
stos
xchg
insl
aaa
jle
stc
fsubl
sbb
repz
xchg
lret
movsb
sarb
push
cld
mov
mov
in
jge
loope
movsb
repnz
mov
mov
in
xorl
or
rcl
lock
mov
negl
lods
or
scas
sub
sub
dec
mov
aaa
sbb
roll
mov
sbb
jbe
in
inc
xlat
jmp
popa
inc
std
or
into
fwait
in
movsb
pop
daa
add
pop
ret
loop
jae
test
push
cmpsb
pop
les
outsl
sbb
jge
movsb
shrb
pop
lock
leave
cmp
add
mov
xchg
js
adc
ljmp
je
idivb
fucomip
sub
push
mov
lahf
je
mov
scas
shrb
xchg
or
push
cmpb
shll
adc
jmp
mov
mov
mov
out
repz
add
scas
push
xor
adc
movsl
and
xchg
push
test
fsubs
mov
cld
adc
enter
rorl
das
push
fildl
cmp
divb
ret
dec
dec
aam
les
sbbl
xchg
xor
sbb
push
rcrb
add
mov
out
or
je
ret
jmp
mov
dec
lea
and
push
lret
push
mov
pop
pop
fwait
cli
add
in
pop
stos
sbb
mov
push
xor
xchg
dec
hlt
xor
mov
repnz
xlat
cmp
lock
daa
mov
adc
sub
ret
aas
outsl
es
outsb
fisubs
xor
sbb
cmc
fwait
jl
cmp
jecxz
xchg
and
fwait
daa
jecxz
nop
mov
push
fdiv
dec
movsb
or
in
rclb
or
cltd
fistpll
pop
xchg
pop
mov
jl
push
mov
mov
pop
lahf
ja
insb
pop
dec
dec
mov
jp
xor
gs
pop
cli
ret
jns
lcall
dec
fcomip
mov
mov
les
shl
push
sti
jae
jnp
lea
outsl
jns
sbb
popf
and
xchg
xor
xor
mov
stc
loopne
in
mov
testl
mov
loop
push
fistpll
xor
mov
mov
jl
adc
inc
push
mov
jae,pt
fisttps
popa
hlt
xlat
or
mov
stos
pushf
cmp
mov
popa
fnstenv
pop
inc
or
scas
sbb
out
mov
sbb
inc
xor
fidivrl
xor
pop
inc
adc
or
dec
xchg
cmpsl
inc
pop
enter
addr16
or
lcall
sbb
loop
mov
sbb
xlat
frstor
rcrb
dec
cmp
sbb
adc
ret
and
shll
jge
popa
dec
hlt
push
add
mov
std
pop
pushf
fcmovnu
or
jmp
adc
sti
rolb
push
mov
sub
loopne
mov
andb
mov
imul
xorb
sarl
push
sbb
rclb
xchg
dec
mov
mov
push
lods
fstpl
pop
mov
pop
xchg
dec
push
or
call
or
jg
addr16
push
decb
push
cmp
test
cmp
inc
cmc
shrb
test
adc
xlat
mov
int3
ja
stc
in
rclb
dec
aaa
add
mov
into
jp
mov
insl
or
mov
cltd
mov
int3
cmpsb
jl
aaa
into
xchg
inc
add
xor
cmpsb
pop
push
push
adc
or
pop
int
or
bnd
xchg
mov
or
call
pop
sub
popf
fsubs
jle
stos
mov
js
outsb
sub
cli
jne
or
cli
xchg
rorl
inc
adc
nop
aad
mov
iret
lret
push
mov
xchg
leave
rcrl
sbb
aad
xor
mov
jl
sti
jo
fdivp
in
jae
xchg
jg
inc
xor
xchg
insl
or
scas
mov
push
add
push
and
shlb
fs
shlb
jge
cmpl
lfs
popf
jg
aas
push
call
lret
into
mov
std
xchg
push
scas
xchg
cli
out
adc
shrl
das
mov
outsl
aaa
pushf
fidivl
mov
xor
and
xchg
data16
and
push
or
hlt
enter
xor
sti
jge,pt
jno
rorb
pop
mov
gs
test
inc
adc
cmpsl
daa
out
js
push
leave
pop
outsl
xlat
push
mov
lcall
xor
ja
pusha
ret
fcomps
rolb
ljmp
gs
mov
inc
into
mov
xchg
jmp
test
lahf
xor
icebp
pop
cmp
pusha
data16
mov
out
lock
pusha
lcall
push
mov
int
lret
mov
mov
pop
sbb
mov
add
lret
std
out
pop
stos
ja
mov
stc
pusha
pop
stos
jle
pop
or
adc
ret
and
inc
pop
rcrb
dec
mov
mov
xor
in
jo
subb
idivl
sbb
outsb
xchg
cmp
ds
sub
lahf
stc
add
test
sbb
imul
and
cmp
xor
pop
lea
sahf
jnp
gs
push
das
mov
dec
fnstsw
int3
movsb
add
jmp
jno
sbb
ret
sbb
or
jge
daa
outsl
mov
dec
xchg
mov
jb
imul
pop
movsl
movsl
mov
movb
lock
sub
pop
sbb
xor
jno
ret
adc
xchg
movsb
sahf
xlat
bound
adc
xchg
or
or
add
rcll
stos
fnstsw
icebp
cld
lods
fsubr
cld
or
adc
push
xorb
lods
subb
sbb
cmp
push
xchg
gs
push
loopne
cwtl
push
stos
jl
aad
jo
lahf
add
leave
loopne
push
jns
mov
aad
sbb
lret
mov
xchg
outsb
mov
data16
incl
lea
sub
mov
sbb
les
add
aam
das
mov
inc
sub
icebp
loop
dec
mov
outsb
inc
repnz
lds
scas
inc
shlb
mov
add
mov
out
xor
dec
fistpl
arpl
aad
pushf
inc
jne
cmc
or
sbb
xor
sub
sub
add
xchg
aas
and
cmp
fisttps
push
xor
dec
jp
pop
dec
pushf
or
lcall
sbb
mov
or
jecxz
ret
xchg
push
stc
pop
lahf
xchg
call
addb
inc
repnz
pop
cmp
and
aam
pop
popa
js
pop
xorb
lods
or
lds
leave
cmpsl
aam
add
sbb
jl
pusha
adc
ja
mov
sbb
sub
out
sti
dec
pop
and
gs
push
sub
jnp
insl
lret
xor
mov
popa
push
or
xchg
sbb
dec
jno
lret
lret
xor
sub
xor
js
aas
xchg
xor
rcl
mov
jmp
xor
in
pop
sbb
sti
dec
cs
imul
imul
jg
cmc
cld
cltd
sub
bound
mov
shl
add
sbb
out
stc
cmp
push
test
loopne
outsb
add
jl
popf
inc
inc
dec
cmp
and
popl
pop
sub
xor
jle
mov
jmp
iret
cmc
jg
fists
sbb
ret
sbb
or
mov
inc
scas
cmp
hlt
pop
dec
loope
aad
xchg
in
inc
mov
add
inc
es
mov
aad
cmp
cmpsl
int
xchg
jb
popa
jo
test
mov
shlb
jb
mov
aam
mov
mov
mov
add
jg
in
jno
jbe
xchg
lret
cmpsb
addr16
movsb
inc
stc
inc
or
into
mov
rcll
mov
inc
inc
repnz
push
fdivrl
inc
jno
or
pop
push
or
pop
push
jnp
sbb
shlb
sub
cltd
daa
and
mov
sahf
cmc
bts
rcrb
jbe
lds
aam
pusha
cmpsb
data16
fmuls
dec
xor
mov
decb
ret
outsl
in
repz
cmp
xchg
cmp
mov
jg
call
repz
mov
negb
push
jmp
adc
dec
fstl
pop
xor
test
cltd
jne
bnd
outsl
fs
in
add
ss
roll
inc
mov
adc
add
mov
jo
lods
dec
pop
adc
and
pop
xchg
xlat
pop
cld
or
daa
dec
out
pop
push
es
fnstcw
sbb
jo
ds
mov
outsl
dec
clc
ds
ficoms
popf
xchg
lds
mov
rcr
repnz
xor
cmpsl
cld
popa
ja
cmp
inc
sub
mov
xchg
leave
mov
je
inc
mov
shll
inc
xor
lret
repnz
jmp
inc
pop
xchg
add
out
ds
mov
sub
sub
or
orb
loopne
lods
in
sbb
fs
jns
std
mov
pop
lods
push
xchg
dec
fmuls
pop
cmp
cmp
bnd
and
in
adc
sub
push
lahf
test
or
pop
cmc
inc
xor
imul
mov
add
push
test
pop
jmp
and
adc
pop
adc
rcll
push
fisubl
lods
mov
sbb
jne
mov
fdivrl
imul
hlt
sar
jnp
inc
jp
lods
jmp
xor
xchg
rol
add
addr16
pop
sbb
ja
int
fs
das
subps
jp
xor
sub
pop
xor
adc
adc
add
pop
ret
xchg
adc
jmp
iret
imul
js
mov
call
aas
and
or
sbb
negb
rcrb
mov
das
push
sub
cli
xor
xchg
cmp
pop
test
pop
or
fdivl
mov
cli
and
adc
test
adc
xor
mov
lock
imul
repz
mov
or
sub
sub
dec
insl
xor
ror
es
iret
xlat
adc
stc
and
mov
pop
adc
jl
out
js
mov
or
insb
mov
lret
aas
mov
js
dec
je
push
mov
ljmp
imul
sbb
fidivrl
es
lods
push
sbb
call
fs
push
lock
aas
out
scas
loopne
daa
loopne
add
sbb
cmp
fisubrl
inc
and
and
sbb
inc
xchg
cmc
fstp
adc
nop
cmp
pop
pop
daa
sub
arpl
jge
dec
and
ret
pop
pop
sbb
mov
pop
sub
push
xchg
out
mov
jge
add
pushw
jecxz
repnz
ljmp
in
mov
mov
ds
push
aaa
inc
push
jmp
ss
mov
out
out
jo
stc
out
sbb
and
jl
and
inc
fs
into
cmp
adc
mov
in
jnp
mov
jnp
das
int3
subl
pop
movl
scas
jnp
enter
inc
dec
mov
movl
adc
mov
dec
movsb
xchg
loope
lea
adc
in
and
mov
push
fcmovne
imul
adc
mov
ljmp
popf
jg
add
clc
ds
jbe
fadd
sub
addr16
ret
rolb
xchg
mov
jnp
cmp
movsl
inc
adc
mov
adc
and
jmp
lahf
xor
movsb
lcall
mov
sbb
adc
cmp
sti
lods
xchg
sbb
popa
adc
mov
sub
testl
xchg
pop
jle
and
outsb
push
daa
dec
stos
mov
and
xchg
shlb
mov
mov
in
adc
sbb
push
mov
hlt
clc
in
ret
dec
call
mov
adc
scas
loop
rorb
inc
pop
cmpsb
xor
dec
inc
xchg
bound
sysenter
mov
std
add
dec
les
sahf
sbb
imul
lods
popa
xchg
insl
add
testb
dec
cmpsb
test
cli
mov
cmovl
clc
adc
and
scas
test
jl
rcrl
imull
ja
sbb
add
cmpsb
xchg
fcmovnb
mov
cmp
xor
or
sub
outsl
xor
enter
and
into
mov
into
mov
jbe
dec
pop
hlt
cld
push
jbe
in
pop
and
arpl
mov
enter
xchg
xor
insb
into
fimull
lret
push
adc
xor
push
rorb
cmc
arpl
inc
jp
inc
loope
fmuls
clc
cmp
outsb
loope
flds
mov
mov
rorl
lds
xor
pop
pop
inc
aam
icebp
xor
lds
push
cmp
xor
rcrb
jnp
inc
and
push
pop
call
dec
cmp
mov
inc
add
mov
lcall
pop
jno
ja
jg
fs
xchg
es
fs
ds
lods
cld
mov
je
fwait
xor
cwtl
sbb
sub
aaa
in
enter
lea
mov
es
jl
jp
mov
and
pop
adc
mov
xor
push
xchg
mov
pop
inc
lods
frstor
es
push
jmp
add
and
mov
test
lahf
outsl
fidivs
mov
inc
add
js
pop
scas
push
ds
mov
enter
jb
add
leave
cmp
push
mov
jmp
dec
pop
dec
ficompl
loopne
sub
rsm
adc
and
xor
cmpsb
ljmp
push
out
sbb
xor
mov
je
adc
std
dec
testl
mov
outsb
sti
pop
add
pusha
daa
leave
insl
cmp
add
pop
mov
push
cmp
sub
iret
inc
cli
jmp
push
push
ja
dec
enter
enter
lods
shrb
sbb
inc
in
cmp
test
add
sbb
fbld
or
fs
pause
les
in
test
aas
sbb
cmc
fisubrl
push
jno
jo
sub
mov
push
fwait
xor
mov
addr16
cmp
rcr
xlat
xchg
mov
jbe
popf
in
bnd
cmp
or
xchg
sub
ret
mov
fidivs
inc
inc
jmp
or
fiadds
shlb
ja
test
mov
bound
or
jnp
jae
mov
fcoms
mov
dec
lret
filds
movl
stos
cmp
pop
xchg
mov
cmp
pop
sbb
ds
sub
fs
sbb
and
hlt
sbb
jmp
inc
push
cmp
out
push
imul
ja
js
dec
ret
shrl
push
scas
jl
mov
push
test
in
aas
adc
repnz
shlb
xor
fbstp
xchg
mov
pop
pop
mov
xchg
cmp
mov
out
fisttps
push
out
xchg
shll
sub
lock
cmp
stc
dec
sbb
fwait
jecxz
cmp
stos
sbb
jbe
fwait
dec
mov
loopne
repnz
sbb
push
dec
fistl
popf
mov
add
js
mov
pop
adc
mov
mov
cmp
int3
test
in
lret
push
jp
data16
scas
mov
or
push
jno
jmp
icebp
jmp
lcall
es
dec
and
adc
add
jb
rcrl
sbb
adc
mov
jmp
ss
dec
out
fisttpl
ljmp
das
xchg
inc
inc
and
psllw
sbb
dec
add
cmpsb
mov
stos
test
sar
out
mov
in
or
dec
aas
sti
fldcw
sbbb
or
push
das
pop
mov
lock
jb
jp
jo
sbb
adc
jno
or
jno
cmc
loop
insb
into
inc
fcmove
inc
jmp
leave
or
aad
adc
daa
pushf
or
fcomps
push
inc
or
inc
cmp
mov
mov
jae
jb
je
jecxz
lcall
mov
dec
mov
inc
adc
lds
cwtl
dec
add
rclb
outsb
test
fdivs
xor
mov
mov
push
imull
outsb
orl
inc
add
cltd
es
cmc
adcb
xchg
sbb
pop
and
xchg
mov
hlt
cmp
or
sub
cmc
jecxz
bound
mulb
cmpsl
ret
nop
leave
test
mov
stc
lar
push
lcall
rcr
sub
xor
lcall
outsb
fwait
in
or
out
pushl
sahf
dec
ss
shl
movsb
or
cmpsb
lock
xorl
fisubrs
sbb
ss
in
test
test
nop
nop
or
lods
mov
repnz
push
push
inc
arpl
popa
cld
sub
imull
pop
pop
shll
lds
aaa
inc
data16
gs
cmpsb
xchg
popf
lret
add
sti
and
lds
cli
cmp
xor
mov
inc
rcl
jae,pn
lret
and
xor
fistl
ret
ljmp
add
push
and
xchg
jae
cwtl
dec
gs
pusha
loope
pop
pop
aam
sbb
mov
dec
adc
xor
shrl
push
jne
xchg
divb
aaa
into
jae
in
push
call
adc
lock
push
pop
cmpsl
test
stos
mov
or
xchg
mov
rcr
adc
mov
cmc
or
mov
jle
scas
mov
pushf
jp
mov
bound
mov
mov
lar
cmp
dec
fs
jb
mov
cmp
cmpsb
fwait
mov
or
lahf
cmc
orl
into
or
jmp
in
int
out
dec
lea
push
mov
cmp
add
cmpsl
jno
scas
rcl
imul
inc
cmp
fistpl
aam
fucomp
mov
mov
lcall
in
inc
mov
pop
mov
lret
fs
imul
dec
popa
jg
sti
mov
jle
cmp
dec
insb
in
push
insb
pop
mov
xchg
or
push
xor
test
lock
add
mov
not
pushf
loopne
sbb
insb
fisubrs
inc
sahf
add
pop
cmp
and
shll
jb
xchg
push
lahf
outsb
push
add
jo
cmp
cmp
push
cwtl
mov
fcompl
in
imul
popa
data16
arpl
fnstsw
sub
xchg
pop
xchg
mov
out
pop
sbb
loope
bound
daa
mov
jns
lds
movsb
add
adc
xchg
cmp
hlt
sbb
pushaw
sbb
repnz
jbe
xor
imul
scas
pop
sbb
sub
mov
idivl
cmp
dec
cmpsl
fisttpl
inc
imul
xchg
negb
and
cmp
cmp
sbb
lret
add
in
xlat
mov
jg
stc
fidivs
daa
xchg
mov
mov
in
pushf
out
xor
ror
push
and
sahf
adc
int
cs
adc
std
fisubl
mov
sub
incl
sbb
stos
pop
push
lret
mov
out
sarb
mov
push
fwait
or
push
popa
lods
sti
fcmovnb
mov
mov
aaa
sbb
loop
ja
clc
dec
arpl
inc
aas
jo
iret
ret
mov
movsb
cmp
mov
data16
inc
and
jmp
xlat
mov
sarb
fsubr
dec
loopne
in
xchg
mov
and
jp
lahf
inc
lret
xchg
lret
ficompl
pushf
sbb
ss
xor
and
pop
lret
mov
aaa
inc
test
inc
not
popl
fsubrl
jmp
inc
negb
sub
xor
mov
mov
js
stc
or
ror
sbb
bound
insb
xchg
lock
rcrl
lret
popa
dec
xchg
mov
aaa
xchg
out
sbb
ljmp
ljmp
gs
in
add
testb
out
leave
mov
add
sbb
into
dec
lahf
xchg
inc
ret
fimull
mov
add
jecxz
pop
push
pop
in
aas
xor
mov
inc
das
fsubrs
or
adc
dec
sub
pop
in
or
mov
add
out
shlb
and
jno
sbb
adc
mov
mov
push
movsb
bound
push
adc
out
push
mov
mov
out
xchg
js
xor
mov
mov
and
les
in
push
inc
pop
push
mov
aaa
into
cld
adc
test
data16
mov
loop
call
mov
fmull
lock
sub
jge
scas
inc
and
mov
stc
data16
lds
push
cmp
inc
popa
jp
pop
dec
xor
push
in
inc
hlt
nop
mov
movsb
mov
stc
es
pusha
cli
dec
sub
cs
lds
shrb
sbb
addb
pop
inc
cs
dec
js
in
xor
clc
outsl
pop
adc
inc
cmpsb
loope
push
sub
pop
mov
mov
pop
stos
or
cmpsl
add
iret
stc
imul
addb
push
outsl
call
lods
lds
shrl
pop
dec
pop
or
mov
dec
push
pop
adc
xor
enter
sbb
mov
mov
stos
shll
faddp
dec
fnstcw
scas
lods
inc
aad
cmp
sbb
mov
mov
lds
arpl
xchg
and
out
fcoms
rclb
and
pop
xor
popf
xchg
call
mov
xlat
insl
jns
stos
mov
or
pop
in
int
jns
push
add
fistl
cmpsl
cmp
sbb
adc
mov
push
cmp
test
mov
ljmp
fisubl
int3
das
int
push
push
popf
or
xchg
push
enter
sbb
and
fucomip
je
loop
ljmp
dec
xchg
mov
adc
mov
jbe
test
into
pop
jae
popf
icebp
jnp
div
sub
iret
jge
stmxcsr
sti
ret
and
xchg
shrl
insb
adc
inc
jnp
inc
sar
jbe
jno
arpl
lods
mov
les
imul
out
inc
aaa
out
andl
add
xchg
lahf
mov
or
mov
xchg
int
cltd
lret
out
jae
and
popa
fwait
call
push
gs
jl
add
and
add
cwtl
dec
sub
ret
jecxz
xchg
inc
arpl
add
push
stos
sbb
sar
rorb
jmp
pop
pop
shrb
dec
sbb
adc
or
sbb
add
mov
xchg
repnz
inc
enter
and
cmc
add
fwait
popa
test
jns
bswap
or
jnp
push
mov
mov
xlat
aas
movsb
add
imul
jp
stc
sbb
cmpsl
fistpll
aaa
mov
fdivs
lret
aad
jno
shll
cmp
add
mov
sub
or
popa
sar
hlt
fidivrl
sbb
dec
rcrb
sub
ret
gs
push
clc
push
ffree
and
adc
aaa
fldt
scas
sti
xchg
mov
and
push
and
jae
aam
cmp
mov
xor
into
jle
or
movsb
lahf
cwtl
dec
fdivrs
ret
ret
sti
rorb
and
sub
pop
and
fisttpll
add
push
and
inc
nop
jg
rcll
jno
push
scas
cmc
xchg
or
cwtl
test
int3
roll
xchg
jbe
leave
test
sub
dec
push
repnz
jp
repnz
mov
push
stos
fmuls
ret
mov
sub
dec
call
aad
mov
movsb
rcll
mov
test
cltd
std
dec
sub
mov
mov
xlat
addr16
adc
rcrb
push
push
inc
imul
adc
loop
mov
adc
daa
or
mov
sbb
xchg
je
inc
ja
xchg
inc
loope
add
fiaddl
sub
or
fsub
adc
xchg
xor
add
push
movsl
out
mov
stos
or
ja
sub
dec
sub
das
add
or
ret
sbb
pop
dec
mov
cmpsb
int
jp
pop
xchg
sub
sbb
adc
jl
sbb
or
push
add
mov
add
lret
int
sbb
mov
mov
mov
shlb
cli
jle
mov
adcl
negl
mov
int
and
fwait
and
mov
jp
xor
aaa
jp
push
pop
stos
or
inc
call
arpl
dec
dec
inc
out
sub
mov
jb
sbb
cmp
or
pop
lods
push
sbb
pop
cmp
dec
les
cmp
test
dec
mov
outsl
call
mov
cmpsl
cmpsl
dec
adc
arpl
inc
inc
dec
xor
cmp
cmp
movsl
cltd
xor
or
dec
push
add
adc
dec
push
repnz
adc
and
jnp
mov
xor
data16
and
lea
in
es
cmpsb
popa
jg
and
push
imul
jp
jbe
jmp
mov
push
jb
push
daa
mov
mov
js
mov
or
popa
sahf
jl
sbb
sub
scas
cmp
cmp
dec
ficompl
addl
les
lret
gs
and
mov
xchg
cltd
pusha
in
push
xchg
stc
adc
sbbb
adc
lret
sbb
xchg
orl
int
add
mov
xchg
add
int3
pop
mov
not
push
and
cmpsl
movsl
int
jo
or
sti
sbb
push
fistl
push
inc
add
xor
cmpsl
mov
vmread
in
test
push
push
xchg
in
dec
std
in
xchg
lret
lods
sub
lods
sub
cvtps2pi
mov
cwtl
sahf
das
or
out
adc
cwtl
jge
add
mov
call
stc
lahf
mov
mov
cmpsl
push
jne
jnp
inc
stos
je
repnz
lahf
or
mov
adc
jle
mov
push
das
inc
ds
inc
orb
or
mov
out
daa
cmc
push
test
aas
in
cmp
push
push
fwait
mov
sub
push
and
stos
jmp
fdivl
sbb
jno
ret
dec
lods
jae
hlt
fldcw
je
out
xor
js
jecxz
das
ljmp
int3
push
ss
xlat
xor
test
fwait
mov
add
test
cs
mov
dec
rol
add
or
stos
mov
aaa
and
or
push
mov
paddusb
ja
or
movsl
mov
cld
xor
mov
icebp
lods
das
xchg
in
sbb
out
add
sub
push
mov
jle
mov
std
pop
mov
adc
mov
xchg
fnstenv
pop
mov
out
mov
inc
mov
out
lcall
xchg
cmp
mov
in
jbe
push
dec
int3
adcb
ss
adc
xor
les
mov
xchg
or
mov
clc
popl
jbe
cmc
out
sub
push
cli
cmp
xorl
jo
mov
mov
lods
jp
cmovp
xchg
lea
or
ja
push
xlat
pop
js
xchg
inc
xchg
js
inc
jb
mov
xchg
mov
outsb
adc
sbb
dec
cli
in
por
scas
orb
lods
jl
les
cmp
daa
dec
lret
shl
sarb
or
arpl
push
sbb
dec
pop
sbb
popf
loopne
adc
mov
xor
cli
pop
push
push
loope
jae
sub
mov
xor
lahf
in
lock
mov
push
or
cltd
in
add
js
mov
adc
ljmp
push
sbb
in
pop
aad
mov
mov
test
sti
jo
mov
xor
ja
pop
xchg
xor
mov
loop
mov
lret
icebp
jmp
or
sbb
adc
call
in
imul
xchg
xchg
mov
test
test
mov
aad
mov
mov
push
xor
cmp
pop
adc
jae
stos
and
dec
out
daa
jl
pop
or
mov
loopne
and
sub
stc
js
cltd
rorl
jae
and
jle
stc
xchg
test
nop
push
pop
add
pop
xor
enter
clc
adc
or
das
mov
dec
leave
xor
or
or
out
loope
mov
cld
add
test
in
inc
movsl
pushf
xchg
ret
cwtl
jnp
lea
sbbl
lods
pop
addr16
rclb
add
jp
push
push
and
xchg
mov
push
outsl
xlat
mov
cli
lods
test
das
adc
int3
inc
aaa
fmul
cmc
and
jne
push
sbb
mov
sub
cmpsl
lds
inc
sub
les
or
das
cmc
pop
jecxz
mov
sbb
pop
lahf
fmuls
mov
or
jl
xor
lods
adc
sub
or
mov
xor
out
adc
nop
fnstenv
subl
jge
adc
mov
aas
loope
movsb
xlat
mov
movsl
push
cmc
sub
cmpsl
mov
inc
dec
dec
fsubrl
jns
adc
mov
outsl
adc
fmul
pop
mov
xchg
adc
push
into
adc
xchg
jns
scas
push
push
shrl
test
push
or
jbe
lods
ficoms
xor
icebp
clc
xor
sub
out
hlt
mov
sub
mov
mov
mov
iret
xchg
call
xchg
in
lea
xchg
or
lods
push
ljmp
nop
std
cmpsl
jo
jno
nop
xor
cmpb
xchg
sub
sub
pop
inc
shlb
jmp
pusha
rorb
adc
mov
and
mov
cmp
xchg
sub
xchg
xchg
jle
xchg
aas
lret
pop
push
ds
mov
cmp
jne
pop
fbld
and
xchg
cmc
mov
inc
push
clc
or
lds
lock
iret
xchg
xchg
lcall
jp
push
test
mov
aaa
out
xor
icebp
push
out
sbb
pushf
in
jns
ds
sbb
push
icebp
lahf
subb
inc
fists
es
fcmove
mov
div
mov
cltd
xorb
rcll
int3
sbb
fnsave
imul
and
rdmsr
int
loopne
jge
ficompl
xchg
mov
sub
mov
arpl
cltd
cld
movsl
add
push
pop
mov
xchg
int
adc
mov
jmp
iret
loope
xchg
cmp
loope
mov
jl
mov
aam
dec
stos
pop
je
jne
test
push
adc
cmc
jge
frstor
push
test
mov
mov
mov
fmuls
inc
push
jno
jecxz
xchg
subl
ljmp
push
hlt
test
mov
push
or
jmpw
mov
roll
mov
mov
clc
mov
fdiv
cmp
adc
idivb
jno
cs
and
or
mov
adc
scas
mov
mov
call
inc
pop
daa
inc
lahf
dec
dec
insl
out
sahf
jp
push
and
mov
adc
jno
sbb
mov
ret
fimull
cwtl
outsl
imul
dec
iret
sbb
adc
sbb
imul
xor
jae
repnz
fisubrl
xor
fisubl
sub
mov
out
dec
ljmp
mov
or
or
fldcw
orl
cltd
cmp
lds
out
pop
test
sahf
outsl
cld
jge
leave
xor
inc
mov
sub
adc
add
cmpb
out
jmp
inc
mov
inc
aad
jo
mov
cmpb
xchg
dec
sub
inc
pusha
mov
leave
inc
dec
cmp
int
inc
mov
call
enter
pusha
or
or
mov
xchg
cmp
cmp
xor
adc
sbb
adc
add
jo
sub
push
xchg
inc
sti
pop
xchg
dec
xchg
inc
inc
pop
push
sbb
stos
push
lret
xchg
or
mov
leave
frstor
sbb
int
lret
lcall
mov
repnz
cmp
int3
fldcw
push
sti
or
nop
dec
loopne
dec
sub
and
pop
push
push
jle
jne
xor
and
jg
cmp
js
xor
pop
sbb
cmp
pop
pop
mov
stos
mov
mov
sarb
xchg
js
or
add
xor
sub
pop
repz
fbstp
loop
imul
and
push
in
insl
les
mov
das
inc
xor
jmp
daa
xchg
sbbb
or
dec
data16
sar
imul
test
cwtl
je
mov
sbb
mov
push
cmpsl
adc
jne
push
adc
sti
inc
ljmp
and
push
cmovbe
rorb
imul
cmp
push
dec
jl
jecxz
push
sbb
jl
jo
xchg
subl
ror
cmpsb
sbb
xchg
sbb
or
sub
dec
mov
rcrb
ja
mov
dec
sbb
jno
inc
and
inc
adc
clc
or
hlt
and
and
pushf
in
sbb
ret
cmp
sbb
mov
and
sub
sbb
push
clc
or
push
fidivrs
arpl
pop
stos
jmp
addr16
out
inc
sahf
cmc
out
daa
sarl
xlat
push
fsub
and
in
js
inc
adc
and
cmpsb
repz
adc
aas
fimuls
mov
ds
addr16
mov
pop
mov
sbb
inc
mov
insb
out
std
es
pop
mov
insb
fidivs
movsl
cmpsl
fiaddl
lods
ficoms
cld
cmp
cmp
mov
pop
dec
sbb
mov
pop
cs
ja
scas
push
lahf
mov
ja
xchg
xor
fisubrs
xchg
sub
fcompl
xchg
idiv
fwait
and
mov
cmp
ds
pop
and
or
inc
loop
pop
shrb
into
adcb
fwait
cltd
leave
mov
cmc
xor
hlt
mov
leave
and
xor
scas
add
mov
cli
dec
cmp
loope
int3
test
sbb
out
push
popl
sbb
add
in
lods
mov
int3
xchg
mov
frstor
aas
divl
xchg
ds
repnz
jne
adc
ret
jne
jle
add
xchg
push
out
aaa
aaa
hlt
mov
dec
popf
loope
testl
ss
or
pop
fdivrs
jnp
xor
stc
jge
mov
push
rorl
mov
jnp
cmp
push
aaa
sbb
inc
loope
sbb
xor
out
push
jmp
stc
mov
fsubrl
aam
mov
pop
add
and
push
fdivrl
lds
push
ja
mov
inc
dec
pop
jnp
dec
ss
mov
popa
mov
cmp
cmp
imul
ret
inc
sbb
sub
fs
cmp
imul
pop
aaa
out
fcom
sub
inc
mov
mov
or
cmp
mov
mov
and
lcall
inc
icebp
push
xchg
pop
sbb
in
jecxz
std
hlt
lret
add
jo
ds
jns
pop
repz
xor
adcl
stc
sbb
xchg
xchg
mov
std
or
popa
mov
clc
fdivl
adc
daa
stc
dec
jno
mov
and
out
pop
xchg
fisubs
mov
push
sbb
ficompl
ror
pop
jno
addl
or
pusha
dec
sub
popa
andb
pop
add
pop
test
addr16
dec
sub
lock
pop
inc
jp
jb
pop
orb
jp
aas
xchg
lds
mov
test
jb
mov
lock
cli
push
mov
sub
enter
cmp
xchg
popf
add
popf
mov
addl
mov
or
imul
loopne
clc
lret
cli
ss
dec
mov
ficomps
xor
daa
add
adc
arpl
pop
jg
xchg
data16
add
and
and
movsb
jns
sbb
out
mov
mov
mov
rcrl
mov
inc
outsl
sahf
pop
out
sbb
mov
inc
pop
adc
cmp
add
sbb
mov
cmpsl
inc
ret
mov
test
mov
repz
or
sub
push
xchg
fcmovnu
js
cmpsb
adc
push
inc
sub
aam
mov
ret
cmpl
inc
jle
or
test
dec
mov
mulb
test
mov
jns
mov
or
jge
clc
dec
ret
into
ljmp
fisubrl
inc
sub
pop
mov
xchg
pusha
mov
movb
mov
pop
mov
sub
or
ficoms
push
mov
fistl
outsl
or
je
sbb
ds
add
sub
jns
cmp
pop
xchg
lds
bswap
push
sub
ljmp
cltd
cmpsb
dec
test
pop
fsubs
mov
lret
cwtl
push
pop
push
cmp
fidivrl
and
inc
bound
inc
cld
push
dec
mov
mov
mov
mov
int
dec
shll
dec
cwtl
lods
adc
pop
xor
int3
pop
mov
cmp
pop
lea
jns
repz
add
push
fbld
test
iret
sahf
faddl
jmp
xchg
push
cmp
mov
sti
adc
test
push
cli
out
mul
leave
std
xchg
xor
inc
into
mov
adc
or
and
out
lret
in
out
push
mov
outsl
subb
mov
mov
loop
enter
or
and
xchg
xchg
jp
lods
orl
sbb
idivl
pushf
rclb
js
xchg
jmp
out
push
pop
cmpsb
xchg
cld
pop
add
inc
fdivs
inc
jmp
mov
inc
pop
stos
sti
fcomip
addl
and
adc
cs
ffreep
xor
movsb
sub
ficomps
and
mov
fmul
stos
cmp
inc
add
mov
scas
mov
inc
repz
pop
pusha
insl
dec
cwtl
mov
xchg
hlt
xor
sub
push
xchg
xor
jns
stc
imul
cmp
ja
xor
out
push
xchg
or
mov
out
loope
sub
adc
xchg
mov
stc
inc
adc
orl
int3
incl
into
jmp
fisubrs
cwtl
scas
movsl
xor
cmp
jne
popf
ret
mov
popf
inc
popf
dec
adc
fucom
negl
pop
push
xor
stc
adc
les
call
mov
pop
inc
xor
repz
mov
call
xorl
aas
and
push
and
cmp
stos
or
imul
pusha
inc
jle
aam
pop
in
inc
xchg
adc
dec
jg
test
test
out
subl
xor
outsl
and
out
add
mov
inc
cmp
xor
jg
mov
inc
loope
mov
cmp
mov
mov
pop
stc
jnp
inc
jb
into
mov
push
xchg
in
mov
pushf
sbb
xlat
js
cmp
ja
adc
mov
idiv
push
push
ret
pop
cmc
shlb
clc
add
pop
nop
mov
dec
xchg
out
jmp
fmuls
mov
aas
sbbl
cmpsl
or
jecxz
adc
lods
clc
mov
das
testl
bound
sbb
fdivrl
xor
xor
pop
mov
dec
mov
sbb
sbb
insl
or
in
js
repz
xlat
pushf
pushf
mov
leave
and
add
cmp
inc
in
je
mov
sbb
jnp
cmpsl
aaa
clc
or
sbb
out
inc
jmp
or
lahf
insl
std
stc
int
and
jb
fnstcw
mov
repz
or
hlt
mov
in
mov
leave
mov
mov
clc
sub
jge
lret
xchg
jmp
test
pop
leave
cmp
in
add
sub
xchg
insb
out
stos
sub
sbb
dec
idiv
out
push
xor
fstps
sti
pop
testl
shll
iret
test
cltd
xchg
sub
outsl
sahf
mov
or
insb
jg
xor
les
shll
testl
xchg
addr16
pop
or
sti
and
lret
in
ret
push
fdivrs
insl
fs
data16
ja
add
stc
lcall
mov
in
push
and
sub
call
xchg
xor
sub
inc
negb
test
cmp
mov
mov
xchg
mov
mov
push
inc
adc
and
lret
or
sbb
push
pop
adc
mov
push
pop
ljmp
fs
xor
cmpsl
mov
cmpsl
mov
pop
mov
sub
into
or
xchg
ret
sbbb
dec
xor
test
ss
stc
jge
jecxz
cmp
cmp
sbb
sub
clc
scas
dec
pop
movsb
and
xchg
add
pop
inc
pop
outsb
data16
clc
ret
mov
repnz
cld
mov
insb
mov
ja
lods
fmulp
mov
dec
scas
insb
fcmovbe
into
push
jecxz
jbe
adc
inc
cmpsb
out
mov
imul
push
jmp
repz
jnp
xchg
pop
pop
ja
xor
nop
inc
sub
jnp
sahf
stos
shlb
lahf
testl
add
add
gs
jp
mov
pop
dec
rcr
loope
add
xlat
push
jp
ret
mov
movsb
jge
xchg
mov
jl
test
ret
inc
cmp
mov
inc
adc
xadd
repz
sbb
in
shlb
xor
cmp
mov
jns
push
mov
sub
int3
pop
mov
mov
or
jg
test
int
das
pop
push
and
inc
movsb
imul
and
xchg
jl
jg
adc
jns
imul
mov
scas
sbb
mov
dec
arpl
mov
and
adc
adc
mov
pop
mov
test
jp
lods
lea
sbb
loop
and
lahf
mov
xchg
sti
fadds
mov
outsl
gs
mov
mov
stos
pusha
movsb
jae
dec
adc
or
orb
and
popa
jns
push
push
sub
shlb
jns
fsubrs
push
mov
xor
pop
or
aaa
addr16
push
mov
jo
lods
xlat
mov
jo,pn
push
dec
aad
pushf
icebp
push
and
or
sbb
movsl
ficompl
mov
and
xchg
out
sarl
aam
mov
lahf
sahf
inc
push
inc
cmp
rclb
repnz
fdivrl
inc
std
mov
call
jno
mov
jg
inc
lret
mov
aaa
daa
push
cwtl
cmpb
jae
fidivl
out
loope
jo
cmp
adc
pop
mov
pusha
hlt
push
adc
adc
popa
out
xor
inc
push
leave
or
push
fdivs
movsb
shlb
jecxz
cmp
gs
dec
shll
sbb
test
addr16
pop
icebp
call
out
xorl
fdivrl
xchg
xor
push
inc
add
rcl
pop
push
dec
dec
adc
cmp
jge
hlt
outsl
jmp
scas
dec
and
mov
adc
das
jne
sti
adcb
mov
mov
mov
andb
mov
sub
mov
push
jno
outsl
ja
cli
loope
fisttpl
add
sbb
mov
fnsave
push
fpatan
or
js
outsl
psraw
jae
aad
lcall
sbb
mov
push
mov
cmpsl
leave
push
xlat
cmp
outsl
mov
int3
xchg
jge
loopne
out
xchg
add
inc
in
adc
lret
movsb
icebp
or
lock
shrb
fcmovnb
mov
xchg
lods
lahf
fstps
inc
hlt
and
shlb
movsb
and
das
mov
add
mov
insl
push
adc
dec
jecxz
inc
bound
xchg
jns
mov
pop
or
fldt
movsl
ljmp
mov
cmp
mov
cli
daa
dec
dec
jno
jns
push
mov
test
lcall
or
popf
mov
lods
and
dec
mov
sbb
jns
add
aam
push
ret
in
aad
stos
mov
pop
xchg
jae
sub
in
mov
fwait
xchg
add
xchg
sub
jae
out
push
ja
xchg
mov
push
xor
pop
fsubrl
fisubrl
lret
in
mov
xchg
push
out
popa
popf
ss
aaa
or
mov
pop
pop
mov
jno
repnz
mov
fistl
fildll
inc
push
js
xor
shlb
daa
lea
addr16
pop
pop
incb
sbb
loop
movsl
add
hlt
mov
repz
aaa
roll
stc
inc
stos
and
jno
iret
xor
jb
pusha
push
push
shll
orl
jmp
dec
or
xchg
sarb
push
cmp
sbbl
push
and
cs
or
adc
xchg
pop
inc
ficompl
stos
dec
mov
or
push
out
inc
push
lcall
mov
xchg
sahf
aad
dec
out
je
inc
gs
cltd
imul
inc
lock
sbb
xor
shlb
adc
jmp
push
std
fsubl
sub
popl
mov
xor
fwait
in
addr16
aaa
fmuls
insl
mov
lret
into
or
in
and
xchg
mov
inc
es
rcrl
pop
js
add
mov
xor
popf
jo
loopne
jmp
mov
int3
sahf
subb
push
mov
add
adc
or
scas
sahf
fnstcw
stos
leave
dec
add
stos
or
in
fs
jmp
pop
stos
xchg
mov
imul
repnz
and
jg
dec
push
sahf
leave
mov
cmp
sub
pop
insl
loopne
aam
mov
icebp
dec
push
in
enter
pushf
push
sbb
lret
sub
mov
push
mov
das
jg
movsb
push
popa
push
mov
jecxz
jo
xchg
xor
lock
inc
aas
jbe
jo
inc
xchg
shlb
scas
loop
sub
dec
addr16
lahf
mov
pop
xchg
outsl
cmpsl
adc
clc
in
scas
sbb
js
mov
inc
push
test
loope
cs
cmp
sub
loop
cmp
sub
aaa
sub
addr16
push
fcompl
lahf
divb
pop
enter
or
dec
dec
es
popf
sbb
jl
adc
adc
iret
insl
pushf
cs
andl
cmp
dec
jg
mov
test
xchg
add
out
or
inc
inc
adc
aas
aad
and
cmpsb
or
les
stc
popf
mov
sub
ljmp
paddusw
jmp
repz
mov
les
nop
dec
add
mov
and
push
lcall
fstl
xchg
mov
fs
lret
push
push
cmp
mov
mov
test
stos
sub
lcall
aaa
test
mov
fcmovnu
pop
cs
out
sti
dec
mov
jne
xchg
outsb
cmp
clc
imulb
pop
xchg
shlb
fiaddl
ja
loope
fldcw
pop
clc
pop
repnz
jmp
and
xchg
outsl
mov
mov
stc
mov
ljmp
mov
scas
outsb
cmpl
pusha
fwait
or
rcl
and
cli
out
cld
mov
out
adc
in
mov
lret
push
jns
pushf
lret
lock
ficomps
rcl
cs
xor
out
ret
cltd
ret
lahf
outsb
inc
push
adc
addb
dec
iret
dec
jge
jbe
into
mov
xchg
xor
mov
lds
faddl
lcall
xchg
sbb
imul
xchg
jecxz
into
jbe
xor
cltd
mov
lcall
mov
push
pop
pop
pop
hlt
mov
ja
dec
pop
jge
clc
fadds
add
mov
sbb
jp
xchg
outsl
in
shl
xor
fwait
sub
sub
xchg
jno
sbb
out
test
jl
and
test
or
jns
and
ret
adc
dec
fisubs
cltd
sub
mov
push
inc
sub
scas
in
dec
insb
lret
inc
popf
aas
push
imul
dec
stos
jge
push
and
xor
xchg
dec
popa
mov
lock
negb
cmp
mov
add
adc
jge
cld
cmp
pop
or
push
arpl
or
mov
ficompl
repz
pop
sti
shrl
dec
dec
add
add
sbb
dec
or
ds
adc
jp
cmp
fnstsw
into
test
insl
mov
push
scas
and
jae
int
into
arpl
xchg
out
sub
dec
mov
jecxz
cmp
mov
shrl
pop
inc
imul
icebp
add
and
bound
fwait
jnp
xorl
out
xor
icebp
xchg
lods
jg
add
push
push
cmp
in
js
cmpl
mov
scas
out
ja
push
das
rcll
pop
pop
cmp
mov
mov
add
mov
pop
mov
enter
imul
inc
stc
sub
adc
ret
test
mov
jp
xor
push
push
pop
dec
ret
popf
loop
les
jl
fsubl
leave
cli
out
jns
rclb
popf
test
decl
jecxz
imul
and
ja
pop
int3
pop
pop
pop
pop
aam
fsts
xchg
scas
dec
insl
xor
jno
orb
jecxz
jae
shll
mov
and
and
shll
leave
subb
insl
out
in
inc
mov
push
pop
rcrl
push
sahf
shll
mov
out
jmp
cltd
jge
mov
ljmp
jg
mov
push
xchg
xchg
pusha
jae
imul
mov
jae
push
repz
xor
shll
shl
push
fldt
xchg
imul
fwait
and
mov
add
das
xchg
dec
loopne
or
test
test
sarb
aas
dec
push
xchg
sub
sbb
js
movb
adc
repz
adc
dec
xor
and
mov
jno
das
jb
dec
mov
or
cmp
jg
mov
push
jle
mov
test
pushl
and
mov
mov
stc
push
int
repnz
mov
lahf
shlb
jecxz
add
out
std
fildl
jno
xorb
repz
fwait
pop
push
and
cltd
insl
dec
es
scas
in
mov
stos
cwtl
out
lock
out
lret
test
leave
xchg
xor
aad
and
sbb
dec
int3
dec
inc
insb
xchg
ljmp
out
lds
lret
enter
mov
push
mov
fstl
mov
mov
cmp
in
testb
repz
jno
jne
dec
push
pop
adcl
mov
aaa
cltd
out
cmp
sbb
lcall
les
fwait
mov
inc
mov
out
cmpsl
cmpb
jp
pop
xchg
stos
out
lcall
lea
fsubl
add
xchg
jmp
out
cli
inc
mov
push
insl
mov
add
adc
stos
push
mov
push
shrl
outsl
adc
jbe
imul
cmp
sahf
add
xchg
pop
cmpsb
ja
rol
dec
test
xor
aaa
loop
jo
inc
cmp
fstl
ds
std
into
mulb
out
inc
adc
out
lahf
je
sbb
jno
nop
aaa
cmc
mov
or
jle
fsubrp
adc
pop
pop
aam
xchg
jecxz
add
and
add
mov
mov
mov
xchg
out
mov
add
ljmp
cmp
jae
mov
inc
cli
popf
cmpsl
loope
cmpsb
cmpsl
lods
call
int3
aas
push
dec
iret
jo
mov
inc
sbb
hlt
inc
call
rorb
icebp
pusha
cmp
mulb
add
sarl
and
shl
outsl
or
mov
pop
outsb
aam
jp
rorl
xchg
in
adc
ds
fcmovnb
xchg
pop
inc
lcall
push
loop
stos
mov
pop
imull
and
mov
aaa
cmp
jg
mov
sahf
loope
pop
stos
mov
hlt
lods
iret
mov
call
jle
mov
imul
add
push
adc
in
push
pop
cmpsb
jns
bound
mov
shrl
addr16
mov
in
jge
sbb
mov
inc
cmpsl
lea
mov
or
push
jo
scas
jno
scas
js
sub
mov
dec
dec
js
enter
inc
jmp
mov
xchg
jo
xor
mov
dec
add
mov
push
out
test
pop
sbb
sahf
push
xlat
sub
jge
out
ret
mov
sahf
aam
jmp
jnp
stc
out
popa
daa
pop
ljmp
pop
fisubrl
test
or
enter
aad
addl
ljmp
push
stos
subl
sarb
lods
adc
mov
das
mov
pusha
ds
aaa
jp
push
push
pop
ds
and
mov
mov
cld
cmp
sub
stos
cmc
xchg
xchg
jnp
icebp
or
popa
shlb
push
pop
push
and
push
pop
int
pop
mov
jmp
repz
ds
fisttpll
lds
int
out
pop
insb
lcall
jle
mov
sub
lock
push
ret
or
outsl
inc
push
stos
ret
enter
sbb
mov
mov
out
ret
fnsave
aaa
addb
pop
cltd
or
std
jecxz
adc
lret
adc
mov
loopne
or
enter
fcoms
rorl
scas
cmpsb
pop
div
push
dec
dec
repnz
je
jg
pop
pop
mov
test
arpl
inc
jge
in
push
dec
add
data16
ret
rol
sub
iret
or
inc
mov
insl
sbb
mov
pop
cmpsl
lret
pusha
pop
mov
pushf
xchg
xor
sub
mov
pushf
arpl
jb
xor
push
lock
imul
movsl
out
out
decb
xor
jb
push
cld
jmp
stc
mov
or
test
sbbl
sbb
fsubp
cmp
inc
pop
imul
movsb
or
jb
mov
stos
mov
fwait
push
data16
cmp
xchg
stos
mov
inc
bound
pop
mov
push
push
xor
fistps
lret
cmp
dec
dec
gs
rol
jbe
sub
js
mov
popl
rcll
mov
add
xchg
or
ja
rorb
cmp
ret
dec
mov
insl
daa
pop
bound
jp
les
xchg
popf
pushf
dec
cli
pop
out
clc
mov
pop
repz
out
pop
data16
xor
mov
sbb
xor
mov
cmc
lods
xchg
inc
lods
incb
test
xchg
je
and
les
dec
and
mov
jb
push
xchg
mov
cli
pop
dec
sbb
dec
add
cmpsl
shlb
xchg
cmpsb
aas
mov
cmpsb
std
push
mov
mov
cld
xor
cld
sub
jl
push
inc
mov
int
sub
xor
inc
mov
aam
lret
xchg
mov
xor
mov
movsb
inc
mov
push
das
testb
jmp
ss
push
push
mov
jg
loop
dec
xchg
icebp
pop
or
inc
out
test
movsb
in
inc
jmp
xchg
jmp
mov
or
in
cmpsb
jae
adc
push
inc
out
in
xlat
imul
ja
outsb
enter
test
out
sar
loop
imul
mov
inc
mov
push
jne
dec
xlat
sub
ss
jle
or
push
adc
xchg
adc
movsl
popf
xchg
dec
lods
subl
clc
shll
mov
lcall
popa
xchg
xchg
inc
nop
mov
pop
repz
div
and
movsb
out
rorl
dec
movsl
fnstcw
sub
mov
push
rclb
outsb
or
xchg
nop
sub
sbb
pop
mov
movsb
movsl
scas
sub
or
enter
cmp
push
stos
dec
mov
xchg
push
lahf
inc
mov
scas
ret
into
fistl
in
xchg
fscale
dec
mov
push
xorb
aas
cmc
mov
lods
outsl
out
and
xor
dec
out
lods
incl
xor
inc
shlb
jnp
push
or
adc
in
jmp
mov
push
xchg
ss
in
sarl
xchg
in
cmp
cmc
or
dec
xchg
lods
loopne
xor
inc
adc
scas
jne
cmpsb
xor
sbb
push
sbb
or
in
jecxz
les
out
adc
cmpsb
mov
test
mov
sti
jnp
pop
sbb
cli
or
cmp
jbe
roll
data16
cmp
addb
adc
mov
sbb
push
add
inc
push
mul
sub
shrl
out
in
stos
cmp
lcall
inc
jecxz
loope
aas
xchg
shll
cmp
rol
and
cs
and
incb
jno
aaa
sbb
mov
or
out
subl
mov
cmp
mov
pop
push
add
dec
out
sbb
sub
imul
decl
shrl
adc
insl
xor
sub
repz
mov
jmp
scas
jmp
loop
jle
lahf
daa
addr16
push
xor
movsb
mov
pop
test
and
arpl
fdivrs
push
nop
push
mov
repz
cmp
xchg
inc
mov
loop
mov
movsb
add
out
into
dec
inc
dec
and
pop
shrl
lret
int
and
fucomp
push
inc
cmp
or
test
mov
inc
icebp
mov
testl
lods
cmp
or
das
inc
mov
push
dec
and
out
shll
sbb
clc
dec
enter
je
inc
add
push
clc
cmp
scas
jne
sub
bound
xchg
mov
out
es
xor
xor
nop
lods
adc
push
mov
rorb
mov
sub
fnstcw
jmp
mov
jl
out
pxor
dec
xor
divl
jge
sub
fs
imul
fwait
out
mov
xor
sub
xchg
jl
adc
notl
pushf
mov
insl
mov
sub
or
push
cmp
lret
dec
cmp
notl
leave
add
mov
pop
mov
cwtl
mov
pusha
cli
xchg
pusha
loop
mov
movsb
test
aaa
repnz
or
stc
xchg
in
pop
mov
fcmovne
ljmp
add
test
lret
cmpsl
loop
xchg
fdivl
stos
dec
xor
subl
and
sub
mov
fdivrp
or
jle
popa
sti
push
and
insw
jbe
sbb
lahf
jno
pop
cwtl
aam
stos
fsubs
inc
mov
scas
xchg
jp
stc
push
aad
in
enter
data16
and
jno
movq
insb
mov
mov
mov
stos
clc
adc
test
cmp
jbe
ljmp
lret
imul
mov
mov
xchg
js
inc
in
stos
stos
xor
rorl
jo
and
push
dec
dec
sarl
int
data16
shr
inc
xchg
dec
cmpl
lds
je
aad
fsubp
lods
movsl
push
movsb
outsb
shr
cwtl
push
mov
inc
shr
and
shrb
pop
mov
test
fmul
dec
mov
and
xor
push
andl
push
aas
testb
loope
dec
out
movsl
adc
sbb
mov
stc
pop
test
adc
ljmp
pop
sbb
inc
mov
fdivl
dec
add
jp
roll
cltd
cltd
sahf
add
adc
jo
std
jmp
into
push
cld
cld
push
shll
aas
cmp
sub
pop
add
fsubr
sub
pop
mov
lds
divl
out
sub
ja
push
scas
loopne
in
scas
fistps
addr16
mov
pop
push
lea
in
dec
add
rorb
adcb
jp
ret
sub
lock
dec
dec
sbb
rclb
cmp
xor
aas
jle
dec
sub
pop
push
scas
sbb
and
rcrl
movsb
inc
mov
fistl
into
shlb
ljmp
jl
out
push
inc
add
call
int3
out
adc
cli
fists
inc
xchg
stos
pop
inc
mov
jge
in
pop
xchg
jge
jnp
out
cmp
sbb
sub
in
lret
sbb
pop
popa
cmp
push
mov
mov
bound
cmp
add
scas
dec
and
mov
mov
dec
dec
ljmp
scas
sub
std
das
gs
shrl
push
xchg
xchg
lret
sub
ds
loopne
arpl
ljmp
insb
sbb
nop
push
lret
outsl
pop
cwtl
push
scas
iret
pushf
mov
pusha
cwtl
mov
pop
pushw
loop
ret
les
punpckldq
lods
andb
lds
add
dec
push
test
xor
jl
push
out
addr16
mov
mov
out
cmc
pop
sbb
subb
cltd
ret
sti
mov
cwtl
jbe
ret
pop
lahf
jnp
and
sarb
adc
mov
push
dec
mov
mov
add
and
das
cmp
and
adc
insb
pop
push
fcompl
jbe
les
stc
les
push
inc
iret
bnd
out
mov
inc
add
mov
sbb
icebp
xchg
iret
push
mov
sbb
xlat
call
ret
lods
scas
cmpsb
sbb
sbb
and
jo
adc
icebp
sub
jle
negb
mov
gs
mov
iret
push
movsl
or
shrl
sub
aaa
gs
dec
loop
insb
inc
bound
mov
test
pushf
adc
jns
aas
push
les
loope
mov
adc
dec
push
or
push
sti
ljmp
sbb
fisubrl
inc
xchg
or
stc
mov
insl
mov
leave
js
add
fnstcw
adc
data16
xor
xchg
sbb
mov
inc
pop
sbb
inc
dec
shrb
loop
daa
stc
xchg
adc
push
push
sbb
mov
sub
jg
and
push
clc
mov
rcrl
sbb
xor
stos
push
in
cltd
out
pusha
fdivs
cmp
cmpsb
scas
pop
movd
inc
and
xchg
enter
xchg
cmp
test
out
in
mov
mov
pop
and
push
jg
mov
rorl
pop
add
cmpsl
xchg
leave
mov
cs
pop
notl
mov
popa
loope
aad
mov
xchg
scas
lahf
lods
clc
fwait
rcrl
pusha
inc
pop
mov
shlb
outsb
push
and
push
sub
in
or
add
mov
push
jmp
sub
out
cld
sub
out
jae
mov
fcomps
std
add
sbb
xchg
mov
subl
stc
sbb
sarl
jne
jl
psrlw
notb
mov
add
fisubrs
pop
xorb
dec
out
mov
lods
dec
jmp
mov
sbb
jnp
je
sub
xchg
jne
jg
mov
or
push
jg
pop
mov
repnz
or
in
jb
sub
dec
sbb
fiaddl
imul
enter
call
or
daa
adc
xor
loope
jp
mov
ret
jnp
sub
fsts
fsts
iret
dec
adc
out
push
outsl
or
dec
andl
push
div
add
jne
jle
mov
in
mov
or
sbb
cmc
je
cmp
inc
in
lods
stos
inc
mov
dec
gs
push
jl
cld
push
out
mov
and
mov
xadd
repnz
aaa
fs
dec
out
icebp
imul
dec
notb
sbb
lret
inc
repnz
lea
lds
mov
push
add
push
mov
jne
je
fs
rclb
push
mov
sti
ret
out
hlt
mov
lret
xchg
push
insl
fnstsw
cmp
xchg
aam
nop
jnp
mov
icebp
fcoml
xor
push
repz
push
xchg
push
fnsave
fnstsw
aam
xor
xchg
testl
sahf
add
lock
pop
jns
out
xchg
andb
mov
add
into
and
loope
out
imul
sbb
das
add
arpl
dec
mov
lcall
adc
hlt
jecxz
nop
lds
and
dec
test
addr16
test
mov
and
imul
sub
pop
sub
xorb
imul
mov
ds
mov
mov
mov
roll
dec
lock
insb
sub
bound
cmp
mov
fabs
push
cmp
add
addb
xchg
fcoms
jb
mov
xchg
xor
pop
rcr
xor
push
fcmovnu
jne
arpl
mov
dec
inc
jns
dec
movsl
int
jo
aas
dec
mov
mov
in
or
movsl
scas
ljmp
xchg
out
mov
or
push
dec
xchg
add
lret
xor
push
adc
scas
es
pop
ljmp
js
stc
test
adc
int
ficompl
lret
fwait
popf
jnp
xchg
fisttps
pop
and
mov
pusha
push
push
add
push
lret
sbb
mov
cwtl
jbe
stos
pushf
lret
loopne,pt
xor
ffreep
lea
js
aam
sbb
inc
mov
fsubrs
orl
dec
inc
add
cli
dec
dec
or
lret
fadd
iret
clc
xchg
popa
sahf
dec
std
fucompp
adc
mov
mov
and
je
xchg
mov
sbb
xor
shl
push
cwtl
stos
jnp
push
push
sbb
xchg
xchg
sub
cmp
ds
xorb
pop
es
xor
jno
push
fistl
idivl
adcl
or
out
xchg
out
inc
lcall
inc
or
loopne
push
cs
mov
in
jb
outsb
jae
push
fadds
dec
adc
into
fcmovb
add
jns
xchg
mov
orl
rep
subb
rcrb
sti
and
shl
xchg
sti
mov
dec
dec
lods
fimuls
dec
inc
mov
xor
aad
jg
xchg
xor
cmc
movsl
shlb
jge
mov
push
cltd
cmp
push
addr16
leave
ret
inc
cmp
shlb
adc
adc
or
mov
dec
insl
inc
test
cmp
ffree
xor
jno
andb
sub
stos
mov
push
aas
jb
mov
jns
test
lock
jb
clc
es
xor
testl
mov
sbb
cmp
addb
roll
cmpsb
pop
mov
inc
pop
adc
sbb
arpl
sub
lahf
xor
loop
dec
call
xchg
jno
jecxz
mov
adc
pop
jecxz
fisubl
add
mov
fisubrl
mov
pop
cld
popf
mov
mov
mov
sub
mov
mov
enter
mov
pop
adc
lods
pushf
rcr
adc
jmp
rolb
lds
push
iret
inc
iret
push
outsb
pushf
pushf
and
add
or
fsubr
fidivl
lods
cmp
enter
cmpb
lahf
cmp
mov
test
add
mov
dec
xchg
pop
pop
jle
decb
mov
pop
xchg
scas
xchg
push
shrb
add
pop
and
sbb
loopne
sbb
mov
iret
push
mov
cmp
push
mull
xchg
lcall
hlt
jbe
adc
movsl
stos
inc
xor
insb
inc
fmuls
inc
jb
js
fdivrl
fwait
rol
pop
push
adc
fldt
xchg
jle
out
and
jne
fcoml
fs
mov
or
inc
out
fdivrl
sub
mov
scas
cmpsl
movsl
inc
in
in
ficoml
daa
addr16
lea
std
push
popf
pop
movsb
shrl
test
sub
ja
lods
movsb
js
rol
xchg
inc
xchg
mov
jge
outsl
popf
fucomip
ror
std
mov
test
pusha
adc
push
pushf
aas
pop
fldenv
push
adc
or
fdivl
adc
push
sub
popf
insl
sub
insl
cmp
js
mul
out
ret
adc
xor
mov
mov
scas
xor
out
mov
or
data16
fmul
scas
lea
jmp
or
cwtl
lret
mov
jbe
sbb
cmpsb
and
aam
adc
les
out
pushf
mov
ds
daa
mov
addb
and
xor
ret
adc
push
push
adc
mov
adc
and
mov
hlt
shrl
shll
push
cmpb
adc
aad
add
mov
incl
cmc
pop
std
into
cltd
xchg
mov
mov
je
in
push
pop
mul
sub
shll
pushf
inc
repnz
sbbl
jl
lods
push
movsb
or
push
dec
jp
cli
mov
adc
les
dec
xchg
mov
xchg
push
jno
lods
mulb
xchg
fdiv
cli
test
mov
add
emms
mov
push
sub
scas
cmp
shr
mov
repnz
dec
call
sbbl
mov
es
in
inc
dec
mov
cmpb
lret
in
jle
cltd
rcrl
sbb
or
jmp
xlat
shrb
popf
cmp
inc
lods
cmpsb
ja
jnp
std
in
test
jmp
mov
repnz
stos
mov
push
xchg
push
aaa
call
mov
pop
minps
je
jle
lcall
popa
orb
dec
stc
push
into
jbe
scas
cmpl
add
fcoms
enter
lock
mov
test
ret
or
sbb
out
in
mov
dec
aas
insb
sbb
cld
and
int3
pusha
xlat
and
mov
or
outsb
lret
inc
pop
stos
in
push
sbb
icebp
jnp
jle
and
scas
add
cld
pushw
push
cmpsb
test
dec
mov
shlb
inc
sbb
nop
jecxz
nop
fcmovne
adc
sbb
in
adc
mov
mov
push
push
ds
add
mov
stos
in
scas
cli
push
xor
jle
mov
scas
out
sahf
repz
xchg
mov
cmp
popa
lea
scas
jmp
jnp
sbb
push
add
inc
ret
icebp
data16
hlt
cwtl
cltd
mov
shrl
jae
fdivs
adc
mov
adc
sbb
push
fs
movsb
adcb
call
mov
test
push
pop
movsb
sub
pusha
mov
stos
outsl
add
xchg
xchg
mov
mov
xchg
adc
xor
push
data16
testl
ret
and
les
mov
mov
insl
xor
fwait
jge
jb
aas
aam
mov
mov
dec
cmp
jmp
bound
xor
and
jnp
xchg
loope
scas
mov
push
sbb
cmp
lods
and
jecxz
call
fadds
out
sahf
stc
mov
mov
iret
xor
ss
rcl
pushf
push
aas
call
and
push
sbb
pop
pop
aas
mov
push
xchg
push
sub
cli
jb
inc
jbe
jmp
and
les
add
lahf
jg
js
xor
rcll
gs
mov
dec
insl
out
js
sbbb
add
adc
add
mov
shll
sub
push
shr
jp
jns
leave
or
fstl
xchg
push
inc
dec
inc
scas
loopne
pop
mov
pusha
loopne
sbb
loop
push
xchg
shll
pop
mov
push
fcmovbe
roll
pop
fs
pop
push
popa
lock
loop
lcall
pop
out
popf
mov
mov
out
adcl
sahf
mov
rolb
push
idivb
and
cmp
call
cltd
rorl
xchg
or
aaa
hlt
xor
mov
loope
cmc
pop
sbb
cmp
mov
outsl
fidivl
xor
fs
jmp
push
fwait
cmp
sbb
mov
mov
jbe
andb
inc
xchg
scas
repnz
jp
test
and
jnp
insb
adc
test
in
icebp
repnz
mov
int3
xor
xchg
imull
shll
ljmp
pop
jle
xchg
xorb
xor
loopne
cmpsl
int3
cmc
sub
mov
or
sbb
cmp
adc
dec
jae
rclb
cmp
cs
std
in
pop
inc
jb
adc
pop
or
ror
pop
adc
leave
mov
das
clc
mov
iret
fildl
outsl
push
lret
adc
mov
mov
aad
imul
cmpsl
mov
mov
and
enter
dec
push
cmp
gs
sti
inc
push
fwait
out
pop
rorl
popf
popa
inc
lcall
test
hlt
add
in
test
xchg
add
movsl
into
add
xor
xor
daa
xor
test
bnd
push
clc
push
xchg
imul
insb
aad
addl
shll
lcall
lret
outsl
jecxz
cmp
pop
aaa
mov
xchg
and
adc
clc
mov
ds
dec
adc
inc
and
je
data16
test
enter
push
insl
add
adc
dec
cmp
jno
mov
jne
jg
mov
pop
stc
lds
ret
or
lahf
mov
xor
ja
dec
subl
mov
xchg
stc
js
test
xchg
sbb
dec
out
dec
xchg
rcll
aam
dec
leave
sbb
loop
jns
push
mov
cmp
call
popf
sahf
mov
and
or
pop
xor
ret
aas
stos
sarl
inc
mov
and
cwtl
and
or
mov
sub
push
pop
adc
xor
stos
sub
cltd
cli
lds
or
push
icebp
jge
cmp
push
inc
fidivl
aas
push
nop
out
xor
imul
dec
push
push
jmp
xchg
mov
ljmp
movsl
dec
xchg
test
sbb
js
jge
cmc
inc
repnz
std
mov
aas
pop
push
xchg
jb
mov
fbstp
jmp
les
xor
xor
inc
inc
cwtl
out
popf
mov
adc
mov
adc
cwtl
std
jge
cmpsl
cmp
adc
fnstenv
add
sub
mov
popa
dec
push
inc
mov
pop
fcmove
scas
pop
xchg
pusha
clc
std
mov
inc
fsubrl
pop
adc
repz
fs
lods
aaa
out
insb
cmp
jp
sub
inc
es
call
jg
jnp
xor
shll
scas
mov
mov
cmc
add
jns
arpl
xor
cmpb
mov
xor
inc
sbb
mov
sub
ljmp
sub
dec
xor
cltd
xchg
mov
stos
shl
mov
cltd
xchg
xor
pop
pop
fimull
fsubp
lret
and
pop
stc
dec
add
xor
adc
roll
les
or
mov
inc
popa
ss
mov
lcall
add
xchg
jl
pop
shrl
daa
inc
xor
fcoml
mov
add
cwtl
popf
mov
int3
cmp
cmp
daa
test
mov
pop
xor
adc
std
out
das
insl
int
in
push
mov
sbb
sub
sub
mov
push
add
imul
cmpsl
in
int3
fwait
int
mov
add
dec
push
push
adc
add
test
jbe
js
xchg
and
xchg
pop
cmpsb
es
or
cmc
arpl
call
std
in
lock
sbb
ja
adc
or
and
ja
ficoml
int
cmp
pushf
adc
xchg
rclb
push
and
cmp
push
xor
sub
xorb
and
enter
pop
xor
ds
js
adc
mov
int3
scas
adcl
inc
xchg
cmp
add
js
jnp
dec
pop
lods
add
cwtl
add
inc
sub
ret
pop
cmp
push
lahf
enter
jnp
inc
dec
mov
mov
imul
rorl
dec
dec
xchg
cld
movsb
jne
pop
in
loop
mov
push
mov
bound
call
int3
iret
popl
repz
sub
add
imul
or
mov
lcall
aas
or
dec
cmp
inc
lcall
jnp
push
push
int
sbb
or
movsb
rcrb
mov
je
add
int
mov
roll
adc
ficomps
je
xchg
and
enter
bound
out
outsl
cmp
inc
icebp
cmp
and
jmp
jo
jg
lock
add
fimuls
lock
out
or
push
jnp
fmuls
xor
out
test
gs
loopne
pop
push
lret
mov
rclb
cltd
adcl
out
mov
cmp
xor
push
cs
daa
push
fisubrs
cli
test
xchg
inc
mov
mov
mov
inc
sub
sbb
or
out
add
test
pcmpgtw
int3
loope
and
in
inc
mov
mov
mov
push
xorb
aas
mov
cwtl
out
sub
clc
shrl
cmc
mov
movsb
dec
push
add
cmc
int3
cmpsl
mov
xor
jnp
ss
fnclex
pop
jo
mov
jnp
xchg
in
add
and
push
in
daa
aad
movsl
dec
push
mov
test
lret
les
pop
daa
pop
adc
push
cwtl
popa
sub
jp
mov
xor
cmpsl
lret
stos
sub
mov
js
cltd
out
cmp
mov
mov
int
cmp
call
or
vunpckhps
lret
mov
nop
lret
test
cmp
shlb
pop
xor
jno
inc
xor
popf
jl
dec
xchg
test
outsl
jne
outsl
stc
arpl
push
sub
loopne
lods
cmpsb
mov
sub
push
fwait
or
pusha
push
scas
jge
mov
fmull
out
add
xchg
mov
mov
add
jecxz
gs
jnp
inc
jno
adc
shlb
in
aad
jne
and
loop
call
mov
add
and
add
nop
push
ss
mov
adc
lods
fcmovbe
cmp
cmc
xlat
cld
repz
sbb
pop
push
sahf
adc
test
rclb
sub
js
cli
ds
stc
outsb
jo
daa
dec
sub
imul
cwtl
mov
push
or
repnz
adc
stos
hlt
les
fidivl
sarl
adc
lret
out
inc
stos
inc
inc
das
add
js
mov
jg
std
sbb
inc
aaa
mov
mov
dec
pop
lret
mov
dec
push
push
rolb
mov
aad
imul
inc
lds
pop
cltd
mov
adc
inc
inc
dec
xor
ret
cmpsl
movsb
loopne
dec
mov
fists
and
mov
jae
xchg
sub
xchg
mov
jg
imul
movsb
jp
jg
lret
fincstp
inc
xor
aam
mov
jne
sbb
dec
xchg
out
dec
xor
xor
stos
xor
inc
jne
push
rcl
icebp
sbb
mov
in
pop
insl
jge
mov
test
lods
pop
xor
jae
aas
popf
xlat
inc
mov
rcl
sti
popa
inc
dec
arpl
es
jbe
sahf
popf
jmpw
adc
fadd
sub
ljmp
or
and
mov
inc
mov
mov
sub
adc
enter
mov
xchg
fdiv
out
add
enter
cmp
pop
xchg
push
rep
xlat
enter
jp
add
js
add
mov
sub
cs
shrl
mov
push
or
push
scas
xor
adc
pop
jb
xchg
xor
inc
les
fmuls
xlat
mov
jmp
mov
push
mov
cmpsb
hlt
out
pop
fnstsw
push
or
lods
addr16
jmp
test
jnp
cli
xor
mov
pop
out
jb
mov
lods
mov
jne
dec
xor
jbe
dec
sbb
and
jecxz
cmpl
test
xorl
xlat
dec
lea
roll
imul
xchg
arpl
jmp
mov
cmc
int3
cwtl
pop
inc
jge
outsl
pop
add
jae
dec
sbb
mov
dec
or
cmp
dec
aam
sbb
lods
loopne
xor
mov
jb
test
adcb
adc
bnd
mov
call
xor
push
loopne
in
cld
es
xchg
fadd
cmp
pop
stc
push
jle
inc
lock
or
js
jle
push
clc
gs
pop
and
das
stos
sub
or
ljmp
into
cs
push
mov
cs
xchg
sub
mov
je
or
enter
xchg
sub
in
and
and
sbb
test
int
rorb
sub
pop
out
lock
push
test
mov
es
xchg
outsl
mov
cmpsl
lods
mov
andb
pop
cmpsl
jmp
in
or
or
into
or
push
popf
mov
cs
jno
out
jae
dec
xchg
inc
fwait
lcall
mov
inc
fcmovnu
lret
lcall
mov
clc
jbe
or
jns
xor
loope
movsb
push
add
fldenv
loop
cmp
movsb
in
js
fsubrs
lret
push
jecxz
cmpsl
jo
cli
push
mov
add
loopne
out
sbb
adc
sbb
insl
in
out
mov
cmpsb
movsb
jb
out
jl
es
into
scas
xchg
sbb
add
in
cmp
mov
push
cmp
hlt
cmp
cmpsl
xor
dec
popf
inc
cwtl
xor
js
rclb
mov
aad
pop
frstor
test
hlt
push
int
loope
and
imul
sub
aaa
decb
pop
pop
adc
jbe
sbb
cmpsb
nop
in
cld
cmp
sub
push
add
jnp
lods
outsl
pop
xchg
xchg
jmp
push
or
mov
cmp
xchg
add
mov
mov
cmpsb
outsl
mov
pusha
mov
mov
hlt
out
test
jle
dec
iret
ficoms
xor
popa
xchg
rcl
out
jle
mov
or
or
fmulp
roll
add
std
sub
in
jno
popf
cmpsl
fcom
leave
cwtl
maxps
push
sbb
call
out
xor
or
cmpsb
stc
cltd
mov
lcall
mov
jl
repz
sub
cmc
push
stc
or
adc
lret
mov
lahf
mov
push
mov
inc
movsl
pop
repnz
mov
bound
mov
ljmp
mov
shr
insl
cltd
sbb
xlat
dec
sarl
scas
sbb
inc
lahf
xor
dec
fsubr
dec
mov
xchg
sub
pop
das
cmp
jle
popf
rorb
mov
mov
movsb
inc
push
out
jmp
mov
or
mov
lock
icebp
cmp
inc
call
shlb
mov
xchg
dec
stc
mov
cmp
jae
clc
aad
sbb
sub
jne
sub
arpl
adcb
mov
cmp
mov
outsb
pop
hlt
pop
rorb
mov
lss
ret
pop
in
mov
mov
out
inc
mov
lea
sub
hlt
shr
les
adc
scas
pop
inc
lret
jbe
cmpb
stc
movsb
cli
mov
cmpsb
fnstenv
cld
sahf
aad
insl
sub
push
bound
addl
loop
repnz
inc
in
sub
pop
lods
push
or
cwtl
adc
and
inc
cltd
test
outsl
in
mov
or
addr16
xchg
mov
jno
sbb
xor
dec
subb
pop
cmpsb
fwait
jnp
in
and
mov
and
ja
lcall
pusha
int3
sub
sub
jnp
dec
sub
push
in
mov
push
dec
notl
inc
test
xchg
fcmovne
jp
lea
cmp
or
add
inc
ja
popf
outsl
pop
pop
dec
or
cmp
dec
inc
rcrb
and
jmp
mov
cmp
push
push
inc
fnstenv
cmpsl
popf
xlat
inc
stc
pop
and
adc
push
cmc
sarl
dec
fdivrl
lahf
dec
push
jno
in
sub
sub
test
pusha
fsubl
fildll
jne
sub
sbb
lret
ss
daa
jg
mov
mov
das
mov
popa
inc
hlt
es
lock
cmp
inc
mov
sub
fnstsw
sub
loop
adc
cmpl
insb
aad
loop
test
jmp
or
jg
lds
sub
lods
inc
fcoms
lret
cmp
nop
jbe
lea
pop
cs
mov
loopne
mov
pop
jne
imul
in
mov
fists
jmp
rcrb
movsb
sbb
pushl
xchg
pusha
pop
je
mov
test
and
fs
add
or
mov
push
cld
xchg
shrl
xchg
jle
out
push
xchg
xchg
in
jecxz
clc
push
mov
mov
daa
out
and
mov
xor
and
sti
iret
mov
jne
jecxz
push
lcall
mov
sub
sub
inc
repz
repnz
ja
div
mov
sub
daa
or
jo
test
mov
pop
jnp
jbe
cmpsb
mov
sbb
cmp
xchg
lea
pop
fwait
cmp
and
push
mov
or
inc
dec
out
fisubrs
add
mov
push
loopne
sbb
pop
dec
and
fstpl
fcmovnb
mov
adc
lahf
cmp
cltd
gs
mov
xchg
mov
int3
mov
loop
pop
in
add
sub
popa
pop
iret
or
ds
movl
jb
in
jb
cmp
add
dec
jmp
fmul
inc
jb
cli
sub
cmp
jb
fbld
test
inc
mov
lahf
xor
mov
xor
ljmp
xlat
cmp
inc
mov
and
addr16
sub
lea
js
jg
and
dec
outsl
leave
fcmovnbe
jae
cmpsb
fnstsw
push
pop
sbb
xor
mov
sub
loop
ja
and
mov
outsl
cmp
aaa
ds
jge
pop
push
add
mov
jle
iret
pop
outsb
je
adc
pop
cmp
cmpsl
shll
das
std
and
lea
rolb
pop
jecxz
cmp
in
push
push
xchg
xor
rcrb
push
bound
cld
cltd
inc
mov
sbb
addl
imul
ja
mov
and
es
int3
inc
add
popa
sahf
cmp
hlt
lahf
loop
inc
pop
jmp
fdivr
cs
dec
cmpsb
mov
dec
and
js
lods
dec
mov
mov
dec
lods
into
sbb
push
addr16
arpl
andb
push
adc
pop
sub
sahf
or
push
adc
imulb
aam
fsubl
sub
mov
push
or
mov
pop
cltd
cmp
lret
fnstenv
outsl
mov
cli
int
add
jbe
and
pop
push
std
mov
cs
jae
sub
xchg
xchg
lahf
fwait
sbbb
add
sbbb
cmp
pop
pop
data16
sti
sbb
xchg
dec
push
lret
test
out
jo
clc
paddw
sti
movsl
pop
pop
out
icebp
sbb
inc
mov
add
pusha
add
inc
fcompl
popf
fldcw
mov
mov
mov
icebp
dec
adc
adc
mov
stc
insb
xor
cmpsb
push
inc
scas
and
push
mov
scas
xchg
jae
repz
fcomps
jge
jle
movsb
mov
idiv
push
pop
xlat
repnz
das
pop
jb
das
fistpl
lahf
jge
shrl
fidivrs
xchg
jns
jb
int
mov
mov
lods
stos
push
adc
push
add
push
popa
loop
clc
iret
add
out
push
inc
icebp
jl
pushf
stos
stc
xor
fstl
mov
ret
call
mov
push
push
add
and
adc
push
cs
or
lahf
mov
test
cmpb
lcall
inc
mov
sbb
pop
pop
pop
mov
movsb
cmp
lahf
dec
mov
div
mov
mov
stos
sbb
lods
stc
arpl
cmp
sbb
insl
lea
ss
pop
add
mov
dec
stos
lahf
cltd
lds
lcall
mov
mov
jmp
push
jecxz
mov
pop
xor
push
push
add
sbb
int3
mov
jmp
jb
out
dec
inc
mov
cld
movsb
test
and
sahf
movsb
push
call
adc
js
sbb
repz
push
or
mov
enter
aad
sbbl
fsubrp
xchg
inc
pop
das
jge
adc
popf
cmp
in
stos
dec
push
mov
out
adc
mov
dec
jge
popf
andl
jbe
jmp
mov
insb
sbb
int3
mov
pop
xchg
fnstsw
mov
or
mov
pop
add
pop
cmpsb
push
rolb
aam
hlt
pop
out
push
sbb
sub
push
lock
add
negl
mov
push
mov
enter
jne
fidivrs
mov
out
shl
int3
add
es
incl
loopne
pop
ret
lahf
and
stos
mov
pop
lea
ret
xchg
mov
popl
ljmp
enter
scas
push
jg
jl
pop
and
shlb
into
iret
push
or
mov
aad
call
lret
sub
scas
rolb
mov
xor
mov
or
mov
test
subl
addr16
sbb
dec
fwait
aam
jg
cld
sub
mov
inc
xchg
cmp
fwait
inc
xor
mov
push
scas
repz
lea
jb
xor
jo
and
xchg
cld
push
fwait
outsb
inc
push
and
inc
imul
cmpsb
aad
pop
loope
pusha
arpl
pop
jb
jmp
sbb
addr16
mov
mov
inc
fsubs
pop
imul
add
mov
out
jl
mov
sub
jbe
mov
sahf
jg
pop
movsb
movsb
sbb
xor
test
xor
popf
mov
inc
out
pop
clc
cmp
lock
repz
jmp
ret
nop
ret
fs
pop
out
test
push
std
out
push
xor
jl
sbb
or
imulb
sbb
ficoml
and
mov
pop
dec
add
xchg
xchg
leave
nop
xor
test
mov
fld
insl
test
nop
outsb
adc
movb
xchg
out
arpl
lea
cwtl
jge
mov
mov
aam
jb
or
cs
push
jmp
pop
push
lods
in
xchg
sub
mov
ss
out
int3
jbe
ja
loop
popl
xor
push
movsl
add
and
xor
mov
xchg
std
push
dec
mov
arpl
xchg
push
iret
test
fdivs
mov
mov
or
lea
mov
lods
icebp
mov
mov
jle
adc
inc
ljmp
xchg
xor
stos
push
lea
cmpsb
pop
movq
cwtl
mov
mov
in
cmp
jns
mov
sti
xor
test
gs
out
fcompl
cltd
mov
sub
js
xchg
addr16
pop
jmp
negb
pop
pop
mov
inc
xchg
xchg
fnsave
push
pushf
aad
pop
mov
or
sub
xchg
fsubl
in
xorl
dec
mov
mov
cmp
pop
rorb
cmp
pop
cmpsl
and
mov
in
lret
in
sbb
js
sub
mov
and
ljmp
rcrl
mov
jle
or
inc
jb
mov
popf
adc
cmp
lods
inc
add
imull
imul
loopne
in
mov
andb
cmp
insl
cwtl
dec
out
push
clc
loopne
xlat
inc
rep
jge
dec
rorb
inc
cwtl
push
pop
mov
fiaddl
inc
add
out
cmp
mov
movsl
or
xor
shr
insb
inc
jbe
lods
xchg
repz
mov
mov
out
icebp
call
sub
and
lds
aam
push
jb
addb
adc
adc
dec
xor
or
mov
pop
mov
lock
cmp
and
inc
stos
sbb
pop
stc
lret
xchg
rcr
subl
lods
testb
cmp
ss
fidivl
int
icebp
repz
nop
push
add
cwtl
aas
pop
cmpb
in
dec
jae
enter
stos
push
inc
fcoml
cmp
xor
jecxz
stos
addr16
ds
es
fildll
das
xor
sbb
push
mov
cltd
sub
ljmp
xchg
mov
repnz
adcl
mov
inc
sbb
imul
cmp
in
out
enter
adc
imul
insl
loopne
je
divb
xchg
push
insl
xor
lods
gs
mov
clc
add
aaa
insl
push
xor
push
dec
mov
cwtl
es
jp
test
mov
jne
adcl
faddl
mov
negl
fnstsw
orb
mov
xor
stos
fadd
jae
aaa
mov
adc
jg
addr16
mov
jae
mov
mov
inc
add
pop
outsb
mov
inc
push
adc
adc
mov
jo
adc
stc
pop
mov
mov
js
orb
push
andnps
xor
dec
lcall
icebp
push
xchg
pusha
cwtl
sub
xchg
push
mov
aaa
cmp
sbb
insl
ss
lock
sub
sbb
jp
jle
pusha
mov
arpl
push
ja
sub
pop
fs
lea
mov
pushf
aas
pop
out
adc
test
mov
push
adc
inc
shlb
pslld
push
nop
xor
insb
sti
ds
dec
arpl
jge
jns
js
mov
popf
aas
pushf
inc
pop
icebp
mov
ret
cmp
mov
mov
rorl
jbe
sbb
pop
aam
loope
xchg
mov
sub
cli
push
xchg
adcl
aam
enter
add
idivb
jne
out
pusha
rcll
shll
mov
push
enter
movhlps
mov
stos
shl
test
fmull
sbb
mov
rolb
pop
mov
lods
inc
or
orl
xchg
jae
inc
rcll
xchg
sub
daa
in
mov
mov
lock
adc
mov
push
out
sub
or
jmp
adc
jae
push
loop
call
es
add
inc
cmp
cs
push
adc
inc
pop
xor
or
sub
lcall
call
and
lret
ja
scas
cltd
mov
jns
notl
adc
daa
jmp
mov
dec
mov
ret
cmpsb
nop
mov
add
jo
xor
xor
inc
pop
jo
imul
pusha
sbb
fucom
icebp
arpl
lds
push
xor
subl
sub
mov
cltd
inc
or
data16
pop
sbb
lea
shl
cmp
xchg
push
jne
lock
clc
mov
iret
jns
ss
scas
into
dec
xchg
aam
xchg
xchg
xor
into
or
imul
mov
push
aas
inc
stc
add
push
lds
xchg
xchg
cmp
add
ja
sarl
rol
sbb
sub
inc
sub
inc
mov
clc
jmp
adc
rclb
idivl
xorl
out
pop
adc
std
inc
lret
enter
shlb
or
adc
rolb
mov
stos
and
out
jb
or
pop
pop
sub
enter
leave
imul
fcoml
pop
jnp
mov
lcall
filds
movsb
nop
push
popf
pusha
je
inc
insb
cmp
sbb
nop
cmp
mov
imul
popf
mov
sub
fistpll
ds
shlb
xor
pusha
hlt
out
fs
and
int
sbb
sub
push
fistpl
outsb
mov
shrl
or
aaa
out
mov
or
xor
mov
aad
mov
unpcklps
adc
test
push
mov
cmp
push
add
loope
add
push
std
cmpl
jmp
add
mov
jnp
xor
and
arpl
push
inc
aaa
shll
mov
outsl
lods
push
mov
push
xchg
cmp
xor
xor
dec
popa
adc
popa
mov
or
test
add
pop
stos
adc
jecxz
push
fistps
mov
outsl
mov
adc
test
dec
mov
neg
fwait
xchg
repz
xchg
neg
xor
in
mov
rolb
cmp
adc
add
in
sarb
imul
sarl
sub
pop
inc
clc
popa
jle
ljmp
iret
enter
or
ret
fstp
sbb
mov
rcll
imul
pop
enter
xchg
movsl
mov
test
lods
push
push
pop
js
int
lds
sbb
imul
push
sbb
jae
je
jmp
mov
test
ret
pushf
jns
sahf
and
cld
repz
dec
mov
in
es
pusha
xchg
loope
sub
pushf
jmp
ficompl
sub
arpl
iret
mov
das
xor
mov
in
movsb
fidivrl
add
cli
mov
push
out
sub
test
fldt
mov
push
mov
popa
adc
push
neg
test
ret
cltd
xlat
xchg
movsb
sti
popf
cmc
adc
lds
int3
fisubl
lret
adc
xchg
adc
imul
ss
mov
sub
jnp
sub
inc
sub
daa
fcomps
sub
ds
mov
or
adc
mov
sbb
add
mov
mov
lods
daa
test
jns
stos
int3
imul
shll
pushf
cli
push
pop
lods
dec
inc
stc
jb
push
imul
sub
jno
notb
lret
xchg
fmulp
test
aad
data16
xchg
mov
lret
test
outsl
mov
mov
sbb
shll
orb
jno
cmp
popl
add
lret
add
iret
sub
aas
das
adc
js
xor
popf
in
cwtl
pop
or
shll
out
cmp
movsb
push
lahf
sbb
adc
sbb
inc
cmp
popa
std
inc
xchg
clc
cmpsb
mov
ljmp
fsubl
mov
outsl
sub
sbb
jmp
shlb
inc
mov
loopew
mov
movsb
int
jge
mov
sbb
cmpsl
adc
shlb
jle
inc
push
movsl
fcoml
scas
jbe
push
out
push
lret
jmp
push
xlat
lock
xchg
int
mov
in
enter
fmul
retw
or
movsb
pop
push
sub
sti
repnz
push
fsubs
icebp
mov
cli
test
jle
or
fstps
dec
jns
out
add
ss
mov
flds
scas
pop
fwait
int
or
cld
push
sbb
cli
js
mov
xor
mov
ficompl
mov
jb
pop
ljmp
cltd
sub
push
pop
ret
in
scas
xor
xchg
ljmp
or
out
fwait
xchg
mov
lds
inc
test
mov
test
mov
dec
sub
sub
lods
test
jg
mov
in
je
and
enter
sahf
out
test
xchg
push
sbb
dec
adc
sub
jb
fs
shl
into
jnp
sti
popf
in
test
dec
and
adc
fsubl
test
fwait
aaa
add
pop
cmpsl
scas
into
push
sub
lea
scas
push
sbb
sub
ljmp
popa
incl
stos
sub
mov
jle
mov
jmp
iret
repz
cmp
cmp
add
push
xchg
push
mov
pop
roll
hlt
dec
addr16
iret
sbb
lret
fs
push
bound
push
hlt
dec
clc
add
cmp
out
mov
push
inc
push
lds
mov
and
sbb
adc
cmpb
icebp
lcall
xor
jecxz
in
xchg
xchg
out
dec
sbbl
add
mov
incl
xchg
fwait
iret
xor
icebp
arpl
bound
jmp
aam
pusha
data16
add
push
sbb
cmp
lret
outsb
sbb
fsubrs
pop
fwait
push
xlat
bound
mov
mov
push
daa
in
cmc
push
leave
sbb
stos
jge
jcxz
xor
sbb
dec
cmpsl
subl
jne
pop
inc
or
jns
dec
adc
test
loop
ret
xchg
and
dec
and
jle
popa
mov
mov
jmp
push
sbb
adc
shll
add
roll
lea
repz
lcall
pop
in
adc
jg
das
ljmp
repz
adc
cs
and
sbb
push
or
push
shll
mov
sub
sub
xchg
lock
test
mov
xchg
add
out
or
pop
loope
or
push
sbb
mov
sbb
push
cs
scas
adc
in
idivl
cli
jg
shlb
mov
inc
leave
inc
jns
jp
xor
ret
pop
rcll
pop
pop
or
push
adcb
les
lahf
stc
jge
scas
push
and
cltd
pusha
and
aas
sub
push
hlt
lret
lret
and
fwait
xlat
push
stc
fucom
fildl
xchg
sarb
dec
iret
xor
dec
shlb
sbb
xchg
xor
lahf
rcll
pop
dec
fidivrs
in
or
sbb
mov
out
cmc
leave
mov
dec
out
pop
gs
insb
push
addb
cmp
test
or
arpl
movsb
xor
jno
xchg
out
mov
push
push
cmp
sub
mov
not
rolb
xchg
stos
repnz
aam
pop
jp
adc
test
sarl
cltd
es
xor
lcall
or
mov
cmp
dec
std
xor
inc
xchg
ljmp
push
insl
mov
lcall
shll
sub
js
int
mov
iret
lock
leave
leave
fdivrp
push
sbb
loop
bound
out
mov
jp
in
jnp
sub
pop
pop
sub
add
sub
mov
adc
test
adc
adcl
lea
push
pop
push
pop
scas
xor
mov
mov
out
mov
movsb
add
cltd
ljmp
mov
repnz
jb
adc
idivb
imul
xchg
fisubs
popf
clc
clc
xor
cld
ret
cmp
repz
xchg
out
jmp
stc
sbb
lcall
js
jnp
sub
and
push
push
iret
es
add
rcl
mov
mov
mov
repz
mov
test
stos
sub
rcl
adc
push
leave
mov
cmp
lret
and
cltd
scas
shr
cs
int
call
inc
loopew
add
ret
mov
mov
std
mov
xor
std
popl
movsl
and
clc
mov
test
xor
sub
xor
mov
mov
cmpsb
testb
mov
push
inc
aas
push
test
cmpsl
cmpsb
mov
inc
out
sub
pop
mov
xchg
mov
jo
pop
lods
mov
inc
push
call
daa
jbe
cmp
ds
mov
mov
mov
push
dec
inc
add
xchg
adc
out
test
data16
push
cmp
push
jns
js
and
or
add
cmp
outsb
sbb
xchg
mov
and
mov
mov
xchg
pop
push
push
mov
push
mov
imul
or
sahf
xor
sbb
xor
jo
push
stos
sbb
jmp
push
cmp
mov
inc
repnz
loope
adc
xor
shrl
xchg
xchg
add
push
rorl
jne
push
xlat
push
cmp
cmp
cmp
xor
mov
popa
add
cmpsl
into
fcomi
iret
arpl
in
sbb
inc
dec
mov
inc
mov
xchg
daa
sub
gs
in
and
xor
and
mov
or
lcall
xchg
or
kmovw
sub
pushf
popf
int
jg
jge
fnstcw
pop
or
out
jnp
cld
std
movsl
xchg
push
add
mul
insl
mov
clc
fcmovnbe
jp
aam
inc
push
popf
xchg
cmp
xchg
pop
sbb
adc
mov
lcall
mov
pop
xor
or
jp
or
lea
add
bound
pop
or
lds
scas
cmp
fsubs
xchg
sti
jns
dec
loop
aaa
cld
xchg
adc
mov
mov
sti
leave
ja
adcb
mov
mov
dec
jnp
mov
in
xor
aam
fcoml
into
testl
mov
cmp
inc
cmpsl
sub
mov
ret
in
in
sub
jnp
in
test
lahf
mov
mov
xor
mov
cs
adc
imulb
orb
and
mov
fldl
test
testb
inc
jae
inc
push
aas
push
imul
jp
mov
sub
icebp
inc
cmp
jae
call
xlat
shll
lcall
lods
ret
loope
in
add
popa
sbb
jl
mov
pop
sub
mov
sbb
fisubl
sub
inc
cwtl
or
mov
cmpsb
sbb
rcll
adc
dec
scas
test
movsl
xor
mov
scas
std
xchg
jecxz
dec
das
test
push
mov
mov
inc
lds
loop
inc
xchg
adc
stos
loopne
or
push
test
jl
dec
imul
lret
pop
daa
stos
xlat
jae
mov
decl
push
pusha
add
js
andl
sub
mov
nop
mov
rclb
mov
repz
stos
or
popf
js
mov
lea
lods
lods
aaa
les
rcll
dec
jb
xchg
mov
scas
inc
add
push
jnp
ljmp
mov
bndstx
int3
pop
paddb
int
push
xchg
jmp
dec
jg
mov
xor
sub
cmp
jae
inc
mov
loopne
leave
bnd
orb
imul
jbe
insb
cmp
push
adc
flds
xchg
pop
xchg
push
push
mov
rorl
mov
mov
jne
pop
lods
call
add
jne
jbe
mov
cmc
push
loope
lds
sbb
inc
jno
push
pop
sbb
popa
pop
push
out
sbb
mov
pop
jmp
and
mov
inc
mov
rorl
shll
dec
bound
xor
in
push
lcall
lds
js
fstl
cwtl
xchg
test
jae
rorl
pop
mov
jbe
or
xchg
cwtl
rorb
fnstsw
and
sub
mov
mov
aam
fdivr
dec
mov
add
mov
hlt
jno
std
loope
pop
dec
dec
push
jnp
mov
mov
imul
out
movsl
std
dec
jp
les
mov
outsb
add
out
sbb
shll
mul
xlat
in
ljmp
std
ret
fisttpll
lret
mov
lahf
xchg
out
int3
and
sbb
ss
xchg
mov
push
adc
push
lods
sub
add
jge
jmp
jmp
xor
or
vblendps
mov
fstl
fisubs
aam
rorb
pop
sahf
dec
jecxz
scas
jae
sub
sub
ss
jmp
push
push
mov
int3
add
icebp
mov
jnp
sub
jae
mov
push
in
int
jns
mov
xchg
xchg
pop
outsl
and
push
xchg
cmp
lahf
mov
dec
in
or
mov
mov
insb
scas
jbe
das
jp
and
ds
lock
into
pop
xor
repz
addr16
cmp
jg
and
mov
mov
inc
daa
push
mov
out
mov
out
ljmp
jle
cmp
pop
mov
pop
test
test
fxch
inc
push
ja
jno
xor
push
mov
pop
jmp
stos
fmulp
es
dec
ucomiss
ljmp
nop
jmp
xchg
xor
push
dec
pop
push
inc
xchg
fisubl
clc
jl
ljmp
ficomps
lret
icebp
mov
cmp
out
cmp
pushf
adc
xchg
sbb
stos
and
add
lret
jne
int3
cld
jmp
sub
inc
pop
daa
jp
sar
ja
inc
insl
mov
jnp
cmp
and
sub
cmpsb
jecxz
xchg
dec
mov
scas
dec
rcrl
arpl
outsb
mov
cli
sub
scas
or
push
outsl
sbb
mov
dec
lret
mov
or
pop
aaa
inc
sbb
add
icebp
dec
lock
lahf
add
shlb
hlt
pushf
sub
xchg
mov
scas
outsb
jo
stos
xchg
dec
xchg
int
into
dec
leave
adc
lahf
mov
jl
insl
or
scas
cmc
inc
jecxz
inc
outsb
into
or
sahf
add
push
loope
arpl
aad
mov
ja
jecxz
mov
jnp
jno
adc
imulb
outsb
incb
lea
adc
sub
lods
inc
mov
fucomp
shrl
or
dec
bound
xchg
dec
mov
aam
sbbb
or
xor
cmp
into
dec
mov
jle
in
or
sub
jge
fisttpll
shl
data16
stc
inc
dec
pop
and
popf
pop
test
dec
adc
je
into
push
loope
mov
movsb
test
cli
sbb
jge
xchg
push
mov
aad
in
dec
mov
fbstp
pop
rorb
stos
sahf
imul
shll
pop
shr
shlb
xor
xor
fwait
je
std
pop
sub
xchg
mov
xchg
push
xor
cltd
clc
nop
xchg
movsl
add
insl
pop
imul
lods
adc
mov
push
xorl
rorb
fmull
or
lock
shll
insb
es
insb
jl
sub
xorl
jge
xor
pop
cmp
xor
sub
fadds
mov
inc
cwtl
sbb
lods
sub
scas
jbe
enter
inc
push
sub
shlb
push
inc
or
jmp
imul
dec
mov
cmp
cmp
pusha
sub
outsl
popf
lods
fwait
in
push
cwtl
mov
push
xchg
xchg
pop
mov
test
ret
or
jl
pop
xchg
sbb
jb
jno
cmpsl
pop
js
or
sub
clc
xchg
xor
scas
pushf
fdivrl
pop
jo
iret
outsl
les
xchg
call
jge
mov
xor
lods
pop
mov
out
rcrb
lret
out
xor
inc
imul
adc
pushf
ror
data16
mov
test
pop
cmpsb
xchg
push
push
pop
stc
mov
movsb
clc
jg
stos
mov
xchg
daa
sub
lret
aaa
shrb
inc
jp
jp
arpl
addr16
call
int
jecxz
adc
aas
lods
xchg
pop
insb
mov
mov
addl
and
jns
mov
xor
mov
add
test
repz
dec
stc
fwait
push
mov
inc
sub
mov
or
mov
rcll
lock
adc
fucomp
pop
ficoml
das
shll
je
jo
push
out
xor
inc
push
add
jnp
cmp
or
rcll
mov
pop
and
fiaddl
mov
mov
sbb
gs
push
push
adc
loope
into
add
dec
or
arpl
out
ficoml
adc
cmpsb
inc
call
adc
sbb
mov
xchg
xchg
in
pop
arpl
dec
push
imul
inc
cmp
dec
inc
cmp
xor
ret
mov
mov
fldcw
cmp
dec
mov
mov
push
into
add
jns
and
test
xor
mov
insl
adc
ficomps
mov
push
sub
push
add
movsb
sbb
outsb
fnstsw
das
test
add
movsb
out
call
int
pop
xchg
jmp
jl
stos
mov
push
loope
test
or
imul
xor
js
lret
mov
movsl
mov
data16
xchg
inc
cmc
enter
dec
js
lret
lods
daa
mov
call
lds
mov
or
out
mov
insl
jecxz
jnp
inc
scas
jo
gs
pop
shlb
aam
inc
mov
fistpl
inc
fucomip
push
xor
xor
bnd
lods
les
add
cmp
sbb
inc
xor
adc
aaa
cwtl
jo
xchg
test
pop
pop
test
arpl
sbb
pop
leave
mov
dec
outsl
jo
pusha
xor
fistpl
pop
rep
xor
movsb
dec
push
insb
aam
push
mov
es
ficompl
cmp
lea
fistps
loopne
mov
xchg
push
add
shlb
jae
and
xchg
ret
lret
daa
cmpsl
adc
int3
push
call
fld
repz
sub
add
add
adc
sbb
xchg
out
xchg
mov
inc
js
sbb
dec
pop
mov
mov
stos
push
mov
outsb
sub
pop
movsl
ja
fnstenv
icebp
and
push
pop
inc
inc
push
xchg
jecxz
out
movnti
inc
jg
mov
or
xor
cld
dec
dec
fists
test
jbe
xor
int
cmpsl
dec
mov
lret
lcall
movsl
mov
or
or
scas
pop
outsl
movsb
cmpsl
das
gs
xor
pushf
mov
sub
pop
sbb
jmp
add
xchg
jge
or
and
xor
prefetcht2
push
sub
mov
nop
adcl
xchg
loop
sahf
pop
stc
popl
and
mov
push
mov
jg
and
xchg
jmp
scas
pop
fisubl
and
or
mov
and
or
cmp
sarb
xor
sbb
aad
push
push
lea
ret
mov
decb
je
insb
pop
and
mov
and
add
inc
fimull
adc
dec
lret
out
jno
aaa
mov
movsl
lret
iret
mov
rcrl
push
cs
iret
lahf
jne
cwtl
incb
fsts
and
xor
adc
xchg
roll
pushf
xchg
mov
aaa
pop
in
and
pop
inc
sub
or
mov
call
das
cmp
mov
shr
sbb
jecxz
inc
jb
cmp
js
test
or
out
mov
or
pushf
js
adc
ds
pop
movsl
imul
insl
ljmp
xchg
adc
outsl
loope
ja
adc
pop
xchg
loope
and
aad
int
aas
push
mov
es
dec
adc
cld
jmp
sbb
add
dec
cld
idivb
cltd
jbe
sub
pop
pop
xor
inc
in
sub
das
ret
cmp
inc
xchg
sbb
insb
adc
test
frstor
clc
adc
dec
loope
ljmp
daa
adc
and
pop
and
adc
jb
flds
xorb
inc
jae
mov
into
dec
subl
ret
jg
xchg
and
dec
add
shlb
dec
jb
xchg
insb
mov
lcall
scas
mov
movsb
rcl
cli
call
fldl
rolb
and
jg
mov
repz
and
pop
cmc
push
int3
mov
sarl
or
hlt
mov
cltd
cmpsl
pop
std
mov
jmp
test
scas
push
les
xlat
sbb
xor
inc
add
cmp
and
div
imul
pushf
and
xor
subb
loop
je
push
ja
loopne
out
inc
xchg
cmp
push
sti
sub
jae
mov
xor
push
imul
ss
cltd
inc
xchg
inc
into
into
insb
fmul
mov
push
in
jg
mov
loope
fcompl
in
pop
aad
sub
cmpl
orb
fdivrs
cmp
adc
mov
outsl
pop
mov
repz
push
inc
cmpsl
mov
dec
dec
mov
cmp
lcall
test
xchg
pop
and
sbb
test
cmp
cli
clc
cld
pop
mov
pop
or
mov
mov
pop
je
test
push
std
lods
mov
push
andb
mov
pop
inc
add
inc
mov
dec
adc
mov
xchg
mov
mov
ret
fyl2xp1
mov
aaa
hlt
subb
jo
mov
mov
fdivl
and
mov
pop
cmpsb
add
mov
pushf
addl
test
push
out
aas
mov
outsl
sti
dec
in
aas
xor
std
cmpsl
sub
or
loop
push
mov
sub
fisttpl
pop
and
mov
shrl
sub
cld
mov
out
mov
jge
cmp
mov
push
dec
rorb
mov
mov
mov
add
xchg
lret
not
cmpsb
inc
dec
pop
out
pop
jns
lret
sbb
jnp
js
in
sub
mov
cmp
add
std
shlb
aaa
clc
pop
mov
dec
and
pop
and
sub
addl
inc
pop
sbb
xchg
jno
sub
iret
leave
jno
or
and
lods
lret
rcrb
icebp
std
loop
cmp
mov
xchg
std
leave
cmpl
lds
mov
cmp
lods
cmpsl
sbb
add
push
xor
adc
sbb
or
in
jno
and
mov
mov
xor
lods
cs
and
aas
das
xor
dec
cmp
mov
jmp
cmp
xor
add
push
sub
xchg
mov
lahf
daa
mov
or
iret
arpl
addb
mov
and
mov
xlat
dec
js
std
in
mov
mov
pop
lret
into
and
out
push
repnz
jmp
stc
sbb
cmp
jmp
or
out
xor
mov
lahf
xor
pop
aad
in
mov
ja
inc
and
aam
mov
cltd
push
cmp
test
sbb
push
push
fsubr
adc
dec
and
mov
shlb
frstor
mov
mov
sbb
cmp
xor
data16
jnp
repnz
sbb
inc
test
adc
jg
sbb
scas
aaa
sub
lods
adc
clc
dec
xlat
adc
cmc
stos
mov
or
jge
stc
sbb
outsb
cmp
dec
and
out
loopne
idiv
arpl
mov
fistl
mov
sbbl
ja
imul
sbb
adc
ljmp
out
inc
mov
and
mov
sbb
mov
jge
gs
adc
xchg
outsb
push
arpl
push
xchg
sbb
es
jae
fcmovnb
aad
call
outsb
dec
adc
rorl
jne
es
push
popl
and
xor
or
inc
jge
mov
sub
dec
gs
in
adc
cmp
and
stos
cmp
cmp
mov
adc
mov
mov
add
dec
xor
divl
jmp
sti
add
cmp
movl
jo
lock
pop
fcompl
test
aaa
aam
mov
jae
inc
lods
rcll
inc
or
lret
insb
cli
jb
and
push
or
push
and
mov
or
and
mov
inc
jno
add
dec
cmpsl
test
stc
xor
cmc
iret
ljmp
ret
popl
lahf
popa
fcoms
mov
fistl
in
mov
adc
mov
lcall
mov
or
xor
ja
mov
arpl
mov
insl
popf
sub
bound
xchg
mov
add
xchg
jno
ret
outsb
sub
dec
add
dec
mov
loop
adc
and
lret
cmp
lahf
inc
xor
jns
sbb
stc
insl
sub
cmp
mov
mov
pop
xlat
in
movl
and
add
jmp
inc
jnp
fdivrp
in
xor
inc
repnz
iret
push
pop
roll
mov
mov
pop
movsb
or
pop
mov
dec
mov
data16
adc
cmp
sub
sub
out
mov
lock
adc
out
pop
push
scas
lock
adc
or
jae
sbb
loopne
push
imul
int3
cmp
mov
jb
mov
xorl
lret
push
ret
cmp
jle
and
stos
mov
mov
ljmp
cld
xor
xchg
fucom
lret
sbb
sub
movsb
push
test
imul
scas
push
push
movsl
in
repz
xor
sub
push
loopne
decb
cld
sbb
fld1
mov
jnp
cmp
mov
or
fwait
sar
cmp
push
jg
push
out
into
cmp
cli
sbb
mov
inc
lcall
jle
mov
gs
push
in
jmp
pop
xrelease
cmpsl
inc
stos
sub
mov
pushf
repnz
mov
adc
jp
add
dec
cmpsb
outsl
sub
adc
mov
add
lock
mov
out
pop
pop
pop
fcmove
movsb
add
push
push
clc
xor
rcl
insw
mov
das
push
fneni(8087
mov
cmp
and
ffreep
fstl
inc
inc
ret
mov
repnz
js
popf
jnp
inc
xchg
es
or
inc
ret
into
jbe
das
jmp
jge
inc
sar
dec
push
or
rolb
mov
frstor
push
js
jmp
in
adc
int
jmp
roll
adc
iret
jns
jp
push
das
or
sub
iret
aam
stc
mov
xor
inc
lcall
cwtl
sub
js
push
push
not
leave
movsl
fmulp
adc
xor
clc
subb
inc
add
adc
inc
test
push
pop
cmp
arpl
mov
lahf
inc
pusha
andb
notb
je
popa
sti
jp
roll
mov
add
and
aaa
jne
fldl
fucompp
int3
in
outsl
jo
sub
cmp
loopne
mov
aaa
push
out
and
out
inc
loop
imul
mov
jg
pop
stc
pusha
fstpl
lcall
scas
addr16
idivb
sti
cs
jnp
into
leave
call
pop
xor
xchg
and
sub
pop
sub
mov
rcrl
fwait
sbb
push
lret
xor
xchg
ljmp
sub
je
stc
pop
xor
enter
sub
rclb
mov
mov
andb
icebp
xor
loop
xchg
sbb
inc
jno
or
jns
push
xlat
rcrl
sub
call
xor
das
hlt
in
and
scas
push
ret
mov
aad
xchg
or
jbe
mov
jle
in
cmp
ja
stos
lcall
hlt
cwtl
mov
mov
xchg
pop
pop
or
xchg
ds
jmp
ret
mov
cmp
or
or
cltd
sub
arpl
jnp
popa
dec
inc
aam
das
dec
mov
xchg
sbb
lahf
adc
pushf
fs
xchg
cmp
or
shlb
push
nop
mov
daa
loop
pushf
pop
pop
and
xor
sahf
imul
mov
out
negl
xor
sbb
enter
std
outsb
pop
bound
jne
jmp
int
xor
data16
pushf
xchg
xor
sbb
add
adc
add
or
or
sbb
jg
decb
clc
test
cmp
loopne
pop
mov
enter
jae
adc
sub
leave
pop
outsb
stos
push
in
add
std
sbb
sti
push
rclb
fadds
call
mov
lahf
jnp
or
movsb
add
leave
push
test
jbe
cmpsb
inc
sbbb
sub
lods
rol
sub
pop
adc
jb
or
or
movsl
ret
pop
lahf
dec
lea
adc
int3
popa
pop
xor
mov
in
cmp
jns
sub
mov
pop
mov
lods
xchg
aad
add
popl
jmpw
cmp
adc
inc
vmptrld
cs
call
lahf
dec
ret
call
pop
mov
sbb
lods
jge
dec
xor
sbb
jmp
and
mov
cmp
cli
data16
mov
sbb
sbb
mov
inc
pop
fistps
sahf
int3
xor
dec
aaa
cmp
daa
test
aaa
jecxz
mov
cmp
cmpsl
inc
dec
lret
cmpsl
testb
xchg
movsl
pop
dec
jb
cltd
inc
jo
dec
mov
sub
and
mov
jle
enter
sbb
shrb
inc
outsb
xor
aad
or
xchg
popa
jecxz
daa
dec
js
dec
in
cmp
push
in
out
jo
cmp
add
jg
sub
xchg
lods
lods
sbb
mov
ja
scas
jns
push
adc
outsl
sahf
daa
fs
cmp
pop
or
xor
daa
mov
dec
out
sahf
imul
dec
cli
fwait
mov
insl
loope
adcl
fdiv
xchg
jb
sub
in
icebp
data16
out
mov
cmc
pop
jle
mov
mov
mov
into
in
sarl
xchg
adc
and
arpl
pop
and
mov
push
xor
pop
lcall
sbb
sub
decb
enter
push
jmp
mov
cld
movsl
xlat
cmp
pop
stos
add
cmp
pop
push
pop
lock
and
imull
mov
loope
jne
xor
leave
pop
dec
mov
dec
jecxz
aam
xor
loop
jns
mov
pusha
cmpl
into
cli
or
cmp
adc
xchg
test
movsb
cs
push
and
or
loop
popa
pop
ds
inc
mov
add
and
xor
daa
xchg
and
mov
xchg
scas
lcall
repz
rcrb
mov
xchg
cmc
inc
or
jge
loope
ljmp
idivl
in
scas
das
outsb
hlt
add
xlat
sti
and
cmpsb
lods
adc
daa
std
mov
lods
jne
pop
mov
dec
and
pop
cmp
xchg
dec
mov
or
cmp
inc
out
sbb
cmpsb
cld
push
pushl
mov
test
dec
adc
jle
add
sub
ror
push
test
out
lock
fdivr
movsb
into
xlat
les
xchg
mov
push
inc
push
inc
fdivrs
inc
jae
lea
int
mov
mov
cmp
sbb
out
mov
fldt
into
push
sti
mov
jno
pop
sbb
insb
add
lcall
out
insl
adc
mov
and
mov
xchg
pop
es
addr16
inc
pop
lock
sbb
into
pop
data16
iret
push
dec
push
mov
cmp
ja
insb
fdivs
dec
fisttpl
sbb
stos
repz
add
or
pop
xor
mov
dec
lds
leave
cmpsl
lock
rcr
push
idivb
xor
or
iret
test
add
ss
pushf
sub
lahf
jo
mov
ret
push
test
je
jae
jmp
add
mov
or
data16
idiv
rcrb
js
cmp
in
push
jg
pushf
add
ffreep
xor
scas
fcomp
pop
add
test
ret
adc
aaa
testb
stos
jns
shll
out
dec
dec
jne
loop
adc
xchg
or
push
fs
sbb
test
mov
leave
jb
jmp
mov
dec
es
mov
adc
shl
sbb
jb
push
sbb
aam
aas
xchg
sub
out
cmp
repnz
cmp
jge
jbe
stos
imul
jl
std
mov
add
mov
push
pop
inc
movsl
and
and
adc
rcr
sbb
incb
jl
shrl
sti
aad
xchg
ds
push
mov
cli
ja
and
call
sbb
jmp
addr16
dec
or
sbb
addl
dec
push
add
dec
jl
test
sub
and
adc
imul
and
mov
lret
sub
cmp
cld
sub
mov
xor
cltd
sub
stos
xor
movsl
xchg
cmp
or
sbb
push
xorl
pushf
jo
popa
sub
ret
outsl
fwait
inc
outsl
pop
shl
popa
or
and
into
outsl
aaa
xchg
cmpsl
jb
out
data16
mov
pop
or
dec
dec
cwtl
shlb
pop
sarb
sub
imul
mov
addr16
or
and
pop
std
add
mov
xchg
mov
loope
xchg
xchg
sbb
enter
inc
cmc
xchg
dec
gs
xor
inc
inc
xor
out
test
mov
sub
mov
xchg
mov
nop
cmc
shrl
cmp
std
mov
xorl
testl
ret
imul
mov
in
add
push
hlt
adc
xor
lcall
adc
or
cmp
jecxz
add
lds
xchg
daa
xchg
pop
xchg
loop
or
mov
lret
xchg
ljmp
adc
or
mov
fdivrl
fisubrl
cmp
ret
sahf
in
push
push
std
hlt
xchg
mov
mov
pop
dec
insb
pop
xchg
adc
das
das
rcl
mov
daa
test
pop
les
mov
and
xchg
push
mov
or
dec
int
push
les
xchg
pop
sti
scas
sbb
lahf
xchg
cwtl
push
jmp
enter
iret
add
jae
push
jae
ror
mov
jne
pop
lret
fsubs
icebp
jmp
ret
stos
lcall
test
enter
outsl
cmp
test
ja
scas
jae
adc
js
in
xor
sbb
clc
hlt
pop
cmp
imul
jp
into
pop
jb
int3
std
fucomp
add
dec
push
subl
add
leave
pop
rcl
jl
mov
jae
xor
scas
rclb
out
xor
popf
popa
dec
imul
popa
xchg
dec
lcall
int3
pop
gs
xor
lret
movsl
mov
inc
push
cmp
shrl
xor
sub
mov
aas
pop
cmp
cli
fcompl
mov
add
clc
sbb
xchg
sub
insb
out
mov
cmp
mov
xor
popa
shlb
enter
inc
and
sub
insb
ss
shll
push
imul
mov
lds
sub
add
inc
call
fsubrs
js
jae
push
lret
jnp
xchg
jl
stos
sahf
sub
adc
inc
out
adc
dec
pop
mov
adcl
sub
shrb
and
fs
mov
fwait
pop
mov
mov
out
test
adc
addr16
jno
sub
xor
and
sbb
and
sbb
and
sub
inc
pop
icebp
cmp
jns
test
dec
jae
fwait
mov
adc
rcrl
mov
sbb
jo
data16
iret
add
and
fadd
test
mov
xchg
cmp
cmp
insl
cmp
iret
movsl
mov
xor
xchg
jecxz
cmp
xor
lret
mov
jmp
stos
mov
fcomps
mov
loopne
adc
sub
sub
add
push
or
dec
sti
lret
outsb
loop
jmp
das
mov
test
neg
adc
mov
or
jp
rorl
cmp
icebp
test
enter
aam
cmp
aad
sub
dec
or
lahf
adc
mov
cmp
aad
leave
xchg
push
cmpsb
in
test
ja
cmp
adc
addr16
lret
fadd
add
xchg
sbb
gs
jge
cmpl
xor
out
or
mov
outsl
jo
xor
ja
cmp
rclb
sti
jmp
rolb
int
ja
push
or
pop
lock
in
test
aas
push
xchg
jbe
divb
mov
cs
vpshufd
sub
in
iret
add
mov
or
sarb
mov
enter
adc
mov
ror
dec
mov
sbbl
into
cmp
sub
in
dec
inc
addr16
jae
adc
inc
xchg
fidivrs
push
aas
jmp
cmp
jge
shl
mov
ret
lret
adc
inc
or
mov
sbb
fwait
scas
clc
aas
dec
inc
or
adc
xchg
idivl
pop
pop
jge
imull
mov
adc
xor
mov
push
cmp
xor
lcall
test
arpl
stos
sbb
sbb
jmp
nop
outsl
xor
dec
inc
daa
cltd
mov
negb
push
rorl
test
rcll
mov
sbb
sbb
dec
loop
push
mov
pop
inc
push
lods
in
jnp
call
fmull
fadds
bnd
aam
decl
sub
sbb
mov
aam
movsb
shl
movsb
test
loopne
stos
xchg
lods
or
push
push
pushf
jg
push
adc
cmp
adc
xor
inc
imul
getsec
lds
cltd
mov
lret
fwait
sub
or
push
xchg
leave
daa
cmc
addr16
adc
mov
or
rolb
shrl
popa
out
std
out
xchg
lret
imul
roll
fs
outsb
ja
or
mov
xor
mov
jns
pop
adc
xor
lahf
and
ss
dec
xor
outsb
adc
cmp
lods
inc
pusha
xchg
sarb
sbb
or
sbb
or
dec
andl
scas
cli
cmp
push
sbb
xchg
cltd
mov
shrb
icebp
xor
inc
pop
mov
pusha
sbb
sbb
xor
std
dec
ja
dec
inc
negl
dec
xor
andb
push
xor
jecxz
arpl
pop
cmpsb
mov
xchg
and
and
outsb
sub
aas
ss
data16
cmpb
dec
push
xor
lret
pop
imul
mov
sti
lock
sti
push
cmp
adc
pop
aam
lcall
test
pop
and
repnz
fs
gs
mov
out
sbb
jo
shll
rclb
jp
test
fiaddl
push
lea
shr
mov
dec
mov
fidivrs
mov
or
mov
cwtl
cli
outsl
dec
rcrl
mov
or
lea
and
push
loope
das
outsb
mov
pop
add
stc
push
les
insb
pusha
pop
and
insl
mov
insl
das
mov
xor
mov
push
scas
sbb
dec
data16
pop
nop
adc
xor
notl
mov
sub
addr16
pushf
xor
add
sbb
or
cld
dec
fucomi
jno
shrl
js
int3
push
and
cmp
sahf
in
imul
pop
test
daa
push
aad
cmp
cmp
jb
mov
fbstp
push
jmp
adc
dec
xor
shrl
xchg
lret
pop
imul
mov
sbb
dec
push
pop
pop
test
mov
pop
lcall
and
hlt
cmc
mov
aas
lods
add
sbb
js
lret
inc
leave
outsl
add
xor
cmp
aad
mov
jo,pt
repnz
lock
popf
inc
ljmp
or
fidivs
push
push
cltd
bswap
xor
into
test
inc
dec
cltd
xor
popf
and
xorb
pop
and
adc
fidivs
sub
out
xor
sub
sub
push
ret
push
push
sbb
push
lahf
imul
loope
fst
push
cmc
mov
ret
popa
or
inc
loope
mov
sub
popf
lods
rcrb
jbe
mov
cmp
idiv
cmp
push
aas
mov
push
pop
test
das
jge
or
lock
mov
xor
scas
sub
inc
test
jmp
add
pop
push
test
fldt
pop
mov
pushf
outsb
mulb
mov
popf
mov
or
xor
enter
or
outsl
or
mov
xor
pop
aam
stos
cmpsb
cmp
cmp
pop
cmpsl
sub
lds
adcl
mov
popa
pop
and
daa
imul
jbe
adc
cmp
inc
xchg
ja
imul
pop
out
bound
and
movsb
add
jmp
xchg
mov
leave
push
ss
int
fdivrs
movsl
pop
dec
fsubs
push
add
test
xchg
in
cmp
mov
xlat
fistpll
and
shlb
in
push
sbb
push
cmp
in
cli
sub
adc
inc
outsl
jp
adcb
or
repnz
mov
int3
mov
inc
ljmp
xchg
push
mov
aam
cld
ffreep
and
dec
xor
sbb
stos
pop
sub
jae
push
sub
dec
stos
mov
sarb
pop
adc
jmp
jne
push
add
dec
and
lods
sbb
mov
in
adc
add
push
stc
cmpsb
sub
or
inc
xor
add
out
pop
ljmp
loopne
bound
lods
popa
repz
call
or
sub
and
add
cmpsb
mov
jo
cltd
and
mov
ss
fwait
scas
pushf
adc
icebp
adcl
push
adc
inc
outsb
mov
lret
sbb
cmpsb
mov
dec
dec
jo
rcrl
push
ret
sti
cwtl
data16
push
mov
dec
cwtl
fldcw
add
cli
xor
pop
adc
pushf
xrelease
rol
stos
nop
mov
cmp
insl
inc
cmpsl
stos
aas
xorl
cs
syscall
xchg
sti
xchg
jg
lea
cmp
sarl
outsb
pop
imul
fcomps
jecxz
in
fstps
pop
mov
test
ret
aas
je
or
rcrl
mov
repz
mov
xchg
lea
addr16
loopne
push
jmp
pop
lds
fcmovnu
or
sbb
jae
pop
jae
cld
je
cmp
cmp
mov
bound
cmp
aas
lods
mov
dec
test
testl
icebp
clc
scas
add
pop
rcrb
jge
xchg
xchg
sarl
or
nop
and
cwtl
sub
cli
stos
sbb
lds
std
jmp
fists
lret
jae
sete
cmp
test
test
shrb
in
add
mov
jle
sub
gs
sbb
test
dec
pop
mov
sbb
pop
sti
into
shr
pop
pop
ficoml
cs
das
repz
rcr
mov
adc
aas
out
sub
and
addr16
xchg
out
xor
and
add
imul
int3
cmpsb
movsl
subl
imul
mov
ds
jnp
xor
mov
out
mov
inc
lds
in
roll
jecxz
dec
stos
movsb
push
out
arpl
push
mov
es
mov
inc
xor
in
popf
jge
inc
adc
aam
addb
call
bound
cmp
dec
sbb
mov
pop
sbb
jns
movsb
dec
xor
imul
lock
sarb
mov
ret
xor
cld
jnp
xor
adc
mov
or
add
int3
mov
popa
adc
ja
xchg
sarl
mov
movsl
les
mull
and
popa
repnz
push
xor
inc
mov
or
xchg
cltd
in
das
je
fstp
xor
imul
lea
ja
add
and
inc
fadds
daa
mov
test
in
sbb
pop
cltd
push
je
fsubrs
add
dec
loop
fmul
adc
enter
mov
cmc
xchg
daa
inc
or
xor
adc
jne
stos
loop
add
int3
fs
push
aas
mov
push
inc
add
scas
sub
out
pop
adc
xor
adc
cmc
sbb
rolb
lea
mov
fs
mov
outsl
or
adc
cmp
mov
inc
sahf
clc
xor
cmp
cmp
into
mov
imul
xchg
aas
es
lods
jno
pop
jnp
inc
dec
push
popa
or
jo
fists
stos
push
in
xchg
push
test
xchg
sub
shrl
push
pop
xchg
add
inc
fisttps
mov
int
inc
xchg
xlat
mov
push
pop
aaa
ja
out
xlat
add
aas
sbb
je
fisttpll
sbb
ficompl
add
mov
enter
into
mov
mov
and
jnp
rclb
out
push
mov
lcall
lea
lods
ret
sbb
push
daa
into
dec
aad
jb
mov
bnd
push
xor
sbb
nop
shlb
out
hlt
pop
inc
hlt
popa
inc
test
push
outsl
stos
loop
test
xchg
js
push
stos
outsl
ds
push
nop
sbb
jne
pop
mov
add
imul
subb
push
int
sub
jl
pop
out
jl
mov
aad
lock
cmp
sti
mov
cmc
outsl
stos
inc
adc
bound
sub
leave
inc
fwait
cmp
xchg
pushf
and
test
sbb
movsl
cltd
xchg
inc
mov
push
xor
test
push
test
jae
cmp
cli
aad
movsb
lcall
call
aaa
inc
add
add
orl
push
pop
enter
pop
pop
mov
xchg
or
and
shlb
or
inc
test
mov
cltd
aam
sbb
jmp
cmpsl
mov
pop
mov
cmp
add
jns
mov
ljmp
das
add
arpl
clc
mov
xor
dec
data16
add
rcrb
xchg
lcall
add
cmp
ljmp
dec
sub
adc
ja
add
ja
in
lods
cmp
adc
aam
jb
subl
pushf
daa
xor
xchg
icebp
add
int
shrb
mov
xor
clc
lock
push
inc
dec
in
lcall
xor
lea
repnz
mov
or
jae
call
les
push
jecxz
xchg
lahf
push
adcb
mov
sub
out
test
int3
inc
rclb
lret
leave
jmp
xor
sbb
jnp
dec
ja,pn
jecxz
jo
pusha
xchg
outsl
push
lahf
cmp
insl
push
xchg
inc
in
sti
xor
mov
dec
test
aam
pop
ss
lret
cmc
mov
dec
aas
js
enter
stos
lods
cltd
negb
pusha
fisubrs
xchg
ds
or
pop
mov
in
push
push
xchg
add
int
lea
fsubs
pop
push
repz
mov
lret
dec
mov
int3
xchg
insb
dec
in
popf
jge
dec
rolb
movsb
lret
stos
jmp
xor
jecxz
mov
mov
mov
je
outsb
pop
cltd
dec
xor
adc
lods
pop
out
loop
test
test
nopl
add
es
pushl
fwait
xor
mov
jecxz
jge
into
and
xchg
lea
dec
es
repz
dec
sub
xor
addr16
mov
pop
or
inc
in
out
fiaddl
loop
pop
pop
inc
fstpl
mov
out
jnp
lret
push
push
pop
or
icebp
aas
xchg
add
shl
aad
dec
mov
sahf
xchg
mov
pushf
mov
pop
test
and
pop
fildll
dec
xor
out
ss
pop
push
mov
fildl
pop
sub
outsl
out
sbbl
jle
pop
out
jo,pt
jp
sub
aaa
mov
add
fisttpl
lret
or
sbbl
mov
push
push
xor
jmp
aam
adc
ss
call
cmp
sbb
sub
dec
nop
push
mov
or
rclb
or
jb
lcall
mov
jns
xorb
cmp
mov
fst
pop
fstp
and
cmp
fldenv
adcl
or
inc
pop
in
aam
hlt
lock
push
sbb
notl
std
lret
mov
jge
mov
hlt
stc
mov
jne
pushf
mov
loope
cmp
test
out
pop
out
clc
popf
ror
mov
lock
dec
lret
ret
push
lret
xor
fimuls
lahf
aaa
fdivl
sbb
jmp
repnz
mov
jae
jp
stos
in
leave
cmp
inc
dec
mov
xchg
dec
adc
push
sbb
movsb
inc
dec
mov
xor
push
imul
push
mov
mov
lret
das
and
das
xchg
stc
or
std
loop
mov
mov
or
popf
mov
je
push
sbb
sbb
jb
stos
jae
daa
orb
pop
loop
orb
mov
insl
inc
jae
stos
andl
icebp
mov
sub
enter
mov
cmpb
iret
insb
xchg
cld
fisubl
iret
mov
fsubl
inc
daa
xor
jno
mov
jle
out
ss
push
push
dec
jp
out
dec
and
sub
inc
cmp
adc
imul
mov
lds
lahf
mov
shrl
sahf
in
int
pop
pop
fs
in
repnz
test
call
xchg
mov
and
adc
popa
insl
daa
add
xchg
xchg
cmp
fdivrp
into
leave
imul
cmpsl
xchg
or
lds
divb
notl
loope
mov
cld
mov
bound
fnstenv
ret
scas
add
sbb
fidivrs
sete
rclb
mov
clc
push
jb
and
mov
iret
xchg
add
insl
insb
dec
icebp
or
out
idivb
rolb
sbbl
cli
push
into
add
repnz
aad
and
cmp
int
mov
cmpsb
out
lock
jl
xor
mov
add
icebp
es
movsb
adc
jo
lret
mov
dec
mov
mov
pop
shrb
mov
scas
cmp
inc
xchg
push
dec
push
loope
mov
or
mov
bound
lahf
inc
dec
loopne
pop
xchg
xor
cs
jbe
bound
mov
mov
dec
mov
add
push
dec
gs
adc
or
dec
std
into
cmp
jne
or
fdivl
out
add
mov
add
in
inc
rol
fimuls
dec
aaa
movsb
fisubl
lret
jg
mov
hlt
in
adc
out
lea
fistpll
fwait
popa
loop
scas
out
adc
lock
into
dec
movsl
mov
sub
sub
ds
insl
adc
dec
std
pop
mov
jae
iret
inc
dec
jbe
cmp
iret
xlat
shll
and
xchg
and
inc
pop
mov
cmpsl
inc
pop
pop
stos
xchg
mov
out
adc
add
push
add
jmp
dec
cld
push
jl
push
jle
pusha
xchg
jo
mov
popa
xor
add
mov
cmp
push
repnz
loop
test
fcoml
popf
decb
dec
cmp
stc
cmpsb
cmp
roll
push
es
clc
push
add
fbstp
iret
push
aaa
mov
mov
rolb
sub
push
mov
insl
mov
mov
mov
movl
cli
pop
pushf
jne
scas
outsl
and
xchg
popa
pop
sbb
test
insb
lret
outsl
push
ret
bound
lcall
ret
adc
pop
or
popa
mov
sub
push
jno
arpl
cwtl
mov
pop
ror
scas
sarl
push
faddp
adc
mov
mov
int
and
fwait
or
pop
in
add
pop
jle
pusha
xor
or
lret
inc
lods
scas
xor
mov
inc
popf
sbb
xchg
mov
adc
push
sarl
pop
or
push
test
mov
nop
inc
pushf
scas
cmc
test
gs
pop
jb
jb
fsts
jns
or
mov
pop
sbbb
std
push
ss
or
jecxz
jge
pop
in
mul
popf
mov
andl
jne
xchg
movsl
xor
xor
and
sti
push
push
shll
pop
pop
jl
inc
or
lds
xchg
mov
lock
cld
enter
shll
in
push
or
fisttpll
out
lock
sbb
popf
mov
repz
adc
je
mov
and
imul
inc
xchg
fiadds
jle
mov
add
mov
mov
jle
pop
cwtl
xchg
add
pushf
imul
dec
aad
push
mov
arpl
loope
pushf
fdivrl
or
xchg
mov
out
test
mov
add
lret
push
xchg
jno
insb
jmp
roll
adc
in
pusha
enter
cmc
adc
mov
pop
in
stos
inc
adc
adc
std
mov
push
pop
pop
iret
cmp
mov
jno
ds
negb
scas
lretw
js
iret
in
int3
adc
jns
add
ds
inc
mov
cs
out
xchg
sub
mov
mov
adc
pop
movl
mov
es
js
xchg
push
imul
test
hlt
xchg
sbb
xor
shlb
jb
ss
addl
mov
jno
cmpsb
cmpb
ds
in
xor
dec
js
mov
xchg
in
add
mov
sub
jge
dec
cmp
push
pop
xchg
test
lock
js
aam
cltd
enter
scas
pop
inc
imul
jns
jmp
push
inc
inc
jp
adc
inc
sub
les
mov
insb
mov
test
std
mov
movsb
jae
jbe
pop
std
mov
sub
repz
push
mov
arpl
int
adc
mov
lret
jmp
cmp
insl
call
test
sub
cli
mov
push
icebp
enter
js
mov
mov
cmpsb
pop
loope
shlb
ret
push
repnz
scas
jo
push
jg
jecxz
cmp
pop
bound
ss
je
jecxz
scas
mov
fbstp
repnz
stc
push
ror
sbbl
cltd
leave
insl
cs
sahf
jb
shll
loope
arpl
mov
push
pusha
xor
mov
jae
sub
xchg
lahf
cmp
pop
jg
out
cmpsl
mov
pop
push
cmc
lcall
enter
jne
loopne
push
imul
mov
xchg
fsubs
das
add
scas
or
mov
jp
ljmp
das
adc
mov
sub
and
pushl
cs
movsl
rclb
hlt
pop
sub
lahf
fwait
push
dec
sbb
arpl
mov
and
xchg
lahf
ljmp
data16
movsb
mov
aam
or
aam
in
lods
inc
imull
sbb
outsb
mov
fdivl
in
lods
jg
movsb
or
sti
mov
pop
bound
push
ljmp
inc
jmp
adc
xchg
pop
inc
rcl
adc
enter
inc
adcb
fwait
mov
dec
out
xchg
stos
out
push
rcrb
and
test
push
loope
clc
or
push
sahf
movsb
mov
adc
cltd
loopne
push
out
cmp
or
pushf
test
leave
inc
vmwrite
shlb
enter
leave
adc
jb
xchg
pop
lods
mov
mov
or
mov
push
jge
repnz
dec
cmpsl
into
outsl
dec
mov
mov
ficoms
insb
shll
and
test
test
leave
mov
rcl
cwtl
and
stc
pop
xor
dec
dec
or
xchg
cmp
jle
ss
sub
popa
mov
add
mov
or
push
out
xchg
push
test
push
jnp
push
fidivrs
mov
pushf
shll
rcll
mov
fistpl
push
sub
stos
xchg
lea
mov
or
in
insl
repz
cmp
mov
pcmpgtd
jg
mov
daa
lds
sub
xorb
mov
les
loope
add
jae
vmovupd
addr16
xchg
cmp
inc
rolb
outsb
ljmp
mov
xor
add
mov
in
mov
pop
or
int
pop
mov
push
arpl
movsl
inc
or
rolb
idivl
test
jns
mov
mov
add
push
nop
popf
adc
clc
ljmp
dec
lea
or
sbb
dec
push
lcall
js
cmp
add
add
or
push
cmp
sub
mov
rcrl
out
aaa
repnz
mov
push
ret
shl
xor
fdiv
mov
or
test
out
je
mov
pop
jns
xor
dec
imul
pop
stos
or
sbb
out
push
adc
repz
arpl
cwtl
call
pop
movsb
jae
aam
in
and
or
cmpsb
jns
or
xlat
lret
jmp
mov
dec
cs
repz
rcrb
sbb
aad
jl
mull
push
sti
lods
pop
js
negl
pusha
xchg
mov
push
xchg
jbe
fidivs
in
xchg
leave
adc
ret
add
jg
jne
scas
pushl
daa
xor
int
nop
test
jno
sub
and
lods
insb
test
icebp
inc
push
push
mov
xchg
and
sub
inc
lods
cmc
adc
in
enter
cmpsl
mov
in
mov
aad
adc
sbb
mov
int3
jb
sbb
insb
daa
shl
inc
pusha
inc
cmp
test
and
fisttps
cmc
popf
test
test
and
mov
add
lock
mov
push
movsb
mov
xor
fistpl
inc
fisubs
adc
add
int
pop
aaa
repz
repnz
dec
jl
jg
aad
sub
mov
jle
fwait
cmp
xor
cmp
cltd
in
mov
out
cmc
sub
add
stc
andl
ret
mov
mov
mov
popa
add
adc
jle
ret
jns
rclb
mov
mov
shlb
pop
rorb
jmp
cmp
bound
mov
push
mov
std
ds
pop
cmp
inc
adc
rol
add
or
mov
std
sub
and
out
fisttps
dec
cld
xor
pop
xor
adc
repnz
mov
pop
fdivs
lods
jno
outsb
cmp
scas
mov
cwtl
jg
xor
icebp
adc
xchg
mov
bound
jmp
pop
pop
mov
std
push
xchg
mov
push
aam
mov
dec
push
push
push
test
mov
scas
xor
push
jb
xor
shlb
push
xor
mulb
icebp
and
jp
inc
jp
push
cwtl
and
repnz
xchg
dec
inc
push
out
mov
lods
inc
outsb
ret
and
out
pop
pop
jp
psubb
fwait
test
mov
lock
pop
pop
cmp
dec
mov
jnp
ret
sahf
jne
push
int3
stos
roll
lret
cld
sbb
and
adc
fists
je
ljmp
push
adc
sub
fs
scas
push
inc
cmp
fs
xchg
in
cmp
adc
ja
mov
rorb
xor
xor
adc
fwait
xor
movsl
repz
adc
mul
lods
or
call
das
test
jl
rep
cltd
pop
or
cmp
pop
push
dec
call
push
pushf
inc
cmpsl
jbe
mov
inc
repz
gs
xor
mov
push
mov
call
fidivrs
lret
pop
push
fsubr
cli
out
xchg
sub
pop
cmp
in
cmp
jge
lahf
cwtl
push
cmc
test
divb
push
push
mov
cmpsb
mov
imul
sbb
in
div
test
out
mov
rorb
xlat
cwtl
or
sub
popa
xchg
stos
mov
shll
jge
push
pop
and
sub
xchg
test
and
pop
inc
dec
adc
imul
jae
or
dec
xchg
xchg
cmp
sbb
jge
ss
jno
sub
pop
push
ficompl
ret
or
mul
mov
xor
nop
xchg
mov
fnsave
add
rcll
in
push
rorb
cmp
call
pop
mov
jbe
xchg
inc
nop
and
push
lret
in
mov
js
mov
jne
cmp
nop
inc
jae
inc
add
inc
cltd
jo
fisubrs
js
enter
mov
fisubrl
adc
mov
or
jo
inc
out
pop
in
lds
fbld
fcmovu
rcl
hlt
test
leave
loope
lds
cmp
sbb
mov
pop
in
rcl
shrb
in
lahf
cmp
jp
jle
pop
cmp
cmp
out
gs
cmp
out
mov
repnz
add
std
test
push
mov
dec
nop
add
mov
div
lahf
adc
out
mov
sbb
dec
sbb
xchg
sub
sbb
cli
fisubrl
mov
cwtl
pop
sub
rolb
aad
adcl
adc
cmc
in
mov
sahf
lret
push
addr16
dec
test
cmp
aad
mov
sbbb
xchg
or
lahf
inc
adc
scas
fisubl
inc
in
xor
stos
adc
in
pushf
test
pop
jne
add
xor
push
subl
sbb
push
fnsave
pop
mov
clc
movsb
inc
xlat
push
push
out
pop
aas
fwait
out
fisttps
scas
pop
into
pusha
xchg
sub
stos
lahf
incb
sbb
pop
ret
push
addr16
sub
js
lret
push
cmp
enter
andl
cmp
or
and
adcb
adc
insb
mov
adc
rcr
mov
int3
outsb
insb
aas
or
test
mov
lret
mov
in
cmp
jg
jns
pop
setne
adc
pop
pop
aam
into
ret
in
jno
fsubl
mov
lock
daa
aas
mov
or
inc
scas
dec
outsl
outsl
sbb
jecxz
cld
lret
cld
jecxz
int
xor
outsl
push
mov
dec
push
addr16
push
mov
test
cld
jno
pusha
into
test
aam
mov
mov
push
jle
mov
clc
xor
push
int
stc
sub
repnz
jmp
mov
pusha
mov
adc
fisubs
adc
testl
cmp
fbld
jle
xchg
repnz
lods
jp
push
test
aad
aaa
in
cld
loopne
pop
or
push
outsb
adcb
xor
xor
push
in
fmuls
cs
leave
jmp
mov
loopne
cld
mov
imul
jge
jg
mov
out
ret
and
cmp
inc
dec
cmp
js
daa
mov
loopne
add
loope
into
ucomiss
in
leave
push
mov
cmp
jp
jbe
pop
jnp
int
out
aam
lods
mov
pop
shl
fisubl
hlt
xor
or
fistps
pop
es
pop
sbb
mov
add
mov
movsl
cmc
ds
popf
and
cmp
iret
out
sti
enter
dec
bound
ljmp
sub
bound
mov
xchg
push
mov
hlt
and
push
roll
cmp
cmc
xor
add
or
mov
filds
fidivrl
sub
xor
ljmp
dec
push
pop
jl
sub
loopne
lret
lret
pop
fidivrs
push
mov
xor
mov
into
lea
fildll
jmp
mov
cmp
sahf
out
mov
clc
sbb
daa
data16
nop
dec
dec
aaa
je
int
daa
cmp
stc
fidivrl
repz
test
sub
sbb
mov
mov
shrb
lret
lcall
fwait
dec
sub
push
jl
push
stc
fcomi
lods
daa
movsb
and
inc
scas
mov
mov
mov
jmp
xor
les
mov
or
aaa
push
mov
jno
mov
jg
xlat
stc
or
jne
or
hlt
mov
sub
and
enter
cmp
or
imul
sysret
sbb
xor
mov
push
cmpl
xchg
fiaddl
fnstsw
add
unpcklps
call
push
rcl
inc
lock
add
jbe
pop
ja
addr16
mov
mov
clc
fadd
inc
pop
and
ret
jns
shrl
int
decb
sub
mov
jae
mov
push
ret
sbb
mov
clc
test
sub
jg
jo
and
ret
add
push
pop
fdivp
dec
xchg
adc
jb
clc
xchg
enter
cmp
lock
push
dec
pop
pop
mov
or
sbb
loop
andps
sub
int
and
imul
pop
pushf
lret
mov
mov
das
mov
push
dec
cltd
and
lret
dec
mov
lret
and
jo
clc
add
test
fs
fistpl
and
pop
faddl
or
ret
fstpl
es
daa
jbe
push
arpl
bound
aas
adc
movsl
or
orl
jmp
inc
sbb
enter
roll
rolb
and
adc
shrb
rolb
mov
clc
xor
fdivl
fildll
mov
mov
decl
or
cmp
jno
filds
and
repz
in
lret
jae
test
add
clc
popa
repnz
mov
mov
push
dec
and
inc
iret
addl
adc
imul
push
push
mov
add
or
int
jge,pt
fiadds
and
mov
cmp
call
cmp
fisttpl
addr16
push
gs
pop
adc
sub
jg
test
mov
aam
or
cmp
test
sub
jne
sub
call
inc
pop
cmp
xchg
loope
jns
stos
lock
adc
and
cmp
ja
js
vmovapd
lret
pop
jns
cltd
repz
mov
mov
ss
xchg
int
test
insb
dec
inc
jmp
cmp
push
lods
xchg
daa
fucomi
cmp
dec
xchg
rolb
jne
fldl
jmp
repz
mov
mov
jnp
lods
sbb
pop
call
out
adc
xchg
imul
lds
adc
sub
jecxz
sti
fisubl
fdecstp
insb
sarl
stc
adc
push
xor
add
iret
roll
mov
dec
jp
lret
je
sbb
sbb
out
jbe
gs
pop
push
mov
and
inc
xor
push
in
xor
cmp
or
inc
pop
andl
mul
pop
mov
jge
fsubrl
jle
push
or
popa
enter
dec
inc
sub
into
push
imul
loopne
loope
xor
scas
add
mov
popa
mov
hlt
mov
stc
push
out
or
es
divb
aad
pop
mov
dec
cltd
fmull
fisttpll
imul
call
add
xchg
xlat
je
adc
out
and
push
dec
fbld
test
fsubrl
sti
cmp
mov
stos
shll
mov
stos
adc
inc
pusha
mov
imul
or
and
loop
imul
xor
fmull
push
out
push
mov
jbe
bound
outsb
mov
sub
push
push
aaa
pop
daa
xchg
sarl
and
or
loope
mov
loopne
test
mov
cmpsl
hlt
mov
jbe
out
jnp
out
sti
mov
stc
mov
mov
inc
add
ret
mov
dec
xchg
mov
daa
sbb
and
nop
push
or
mov
xor
sub
pop
pushf
je
jecxz
in
mov
dec
faddp
repz
xchg
js
insb
loope
cmp
inc
push
pop
pop
mov
sub
xor
sub
comiss
mov
mov
out
idivl
push
jmp
inc
pusha
sbb
sbb
and
mov
test
sbb
jno
add
pop
inc
lret
sub
mov
dec
cltd
adc
and
xor
sbb
bound
xor
and
mov
push
mov
dec
sbb
xor
xor
out
and
jno
pop
mov
sub
or
xchg
cs
es
push
xor
xchg
mov
dec
inc
shr
sub
sub
cwtl
dec
add
push
or
add
and
mov
cmpsb
mov
inc
pop
mov
clc
sub
push
mov
in
fldcw
jne
pop
or
fxch
mov
mov
addl
ror
lret
je
inc
mov
adc
inc
mov
lcall
jb
and
mov
shrl
cmp
mov
and
lcall
or
dec
cmp
popl
gs
add
negl
lods
fdivl
jae
xor
xchg
out
shll
pop
roll
int3
or
push
call
add
fidivrs
sbb
in
xlat
adc
push
pop
test
cmp
jmp
xchg
mov
pop
and
roll
inc
sarb
cmpsl
mov
jmp
notb
pop
xchg
jmp
pop
sbb
push
scas
xlat
stc
std
sti
lds
mov
outsl
pop
imul
loop
iret
mov
xor
enter
mov
cmp
lods
aad
sbb
lahf
jb
nop
inc
push
push
icebp
pushf
dec
popa
cli
shrb
rol
ja
out
adc
lahf
push
mov
in
je
pushf
cmpsl
and
loopne
pop
push
das
cmp
xchg
push
in
jmpw
pop
dec
hlt
push
push
sub
enter
pop
mov
mov
adc
sbb
dec
jb
adc
inc
inc
xor
push
insb
mov
or
sbb
sbb
loopne
mov
push
inc
mov
fsubrs
add
mov
mov
ret
testl
test
mov
ja
rclb
add
inc
imul
out
xchg
and
into
shlb
mov
mov
fldl
inc
aas
cwtl
lea
add
pop
add
in
pextrw
jae
pop
push
jge
xchg
inc
xchg
pop
inc
push
pop
mov
dec
add
jecxz
movsb
xor
jp
mov
mov
add
or
das
enter
pop
push
xchg
inc
enter
aaa
adc
lcall
and
test
sbb
mov
sahf
stc
out
pop
and
daa
fcmove
cmp
scas
mov
cmp
cld
and
or
lahf
or
lods
out
test
pop
mov
lock
mov
hlt
mov
push
fmull
cmc
scas
mov
call
sarb
or
test
dec
push
mov
mov
push
and
mov
mov
aam
sub
xchg
dec
je
mov
mov
imul
jecxz
cld
mov
sarb
das
push
jecxz
leave
add
jl
or
sbb
adc
clc
cmp
adc
push
pop
xor
sub
and
or
sbb
dec
jle
pop
jne
sub
iret
in
jae
mov
xlat
mov
push
das
loope
push
es
ss
add
xor
mov
das
mov
mov
lea
jo
movb
and
cmc
test
mov
add
lds
cmpsb
and
mov
push
data16
cli
mov
mov
adc
lret
ja
mov
bound
bound
pusha
or
push
les
sbb
mov
sti
roll
das
pusha
push
and
push
loope
out
sbb
movsl
aam
ficompl
or
das
jbe
insb
sub
insb
lcall
out
fstpl
jle
scas
fucomi
xchg
int
cmp
push
loope
in
pop
push
mov
idivl
lret
iret
aaa
sub
lahf
sti
pop
or
mov
out
and
mov
je
cmc
dec
subb
mov
mov
hlt
in
inc
test
repnz
cs
xchg
popf
mov
loop
fldcw
pop
imul
cwtl
inc
stos
test
ljmp
sbb
jns
out
or
lret
fbstp
sbb
cltd
loop
jno
mov
pop
out
inc
jmp
jge
pop
fcompl
mov
dec
xchg
push
and
roll
nop
push
sbb
or
jg
or
pop
push
aad
jl
sub
pop
xchg
iret
faddp
lahf
push
sti
leave
cli
jo
push
pop
test
lret
ljmp
xor
shr
outsl
dec
enter
js
mov
pop
test
mov
and
repz
xchg
mov
mov
lods
dec
mov
jo
mov
cltd
mov
push
xchg
les
cwtl
mov
das
stos
jle
cltd
enter
pop
fsubrs
mov
jmp
daa
mov
push
out
cmp
jno
fld
add
or
inc
jne
in
lods
sbb
lods
mov
jbe
scas
mov
shll
pop
add
fs
mov
rcrl
fisubrs
andb
addr16
dec
and
or
xlat
nop
jno
aaa
xor
lea
xor
repz
mov
push
sbb
mov
jae
lods
in
lea
test
push
push
xlat
andb
iret
push
movsl
in
pop
mov
xor
and
lods
jo
leave
popf
cmp
dec
es
cmp
cs
cld
mov
fmuls
adc
lods
push
xor
dec
scas
mov
aam
jge
mov
ficomps
pop
dec
dec
decl
or
or
cwtl
lods
adc
scas
push
testl
fnsave
leave
pop
push
mov
div
lret
outsb
imul
xor
shll
outsl
out
xor
cmp
mov
mov
lods
fwait
sbb
imul
loope
filds
arpl
lds
add
inc
out
jp
lea
cltd
lret
imul
dec
jno
popf
fimuls
das
pop
aam
xchg
aaa
cmp
xchg
jmp
adc
idivb
movsl
push
cwtl
add
sbb
dec
push
pop
arpl
addr16
jg
std
mov
loopne
test
repz
sbb
xchg
int3
cmp
je
mov
popa
inc
sub
inc
or
lret
push
icebp
add
sbbl
and
aaa
je
add
jmp
pushl
mov
xchg
leave
sbb
into
imul
stc
lock
push
clc
push
xchg
xor
idivl
mov
ret
lea
add
scas
and
inc
je
mov
fbld
or
out
iret
outsb
fidivs
fmull
dec
mov
stos
cwtl
fldt
lret
jno
mov
mov
in
inc
bound
mov
andl
dec
mov
cld
sbb
addr16
hlt
iret
test
ljmp
xchg
cmp
jg
jae
frstor
mov
push
aaa
xor
fwait
sbb
shll
es
cmpsl
loope
or
dec
sti
dec
pop
call
or
movsl
std
add
xchg
cmpsb
adc
pop
leave
mov
inc
cmp
push
daa
jp
xor
bound
inc
das
xor
mov
mov
subl
xchg
jno
fnstenv
dec
pop
insb
sbb
adc
bound
lcall
push
jbe
negb
mov
and
jb
mov
leave
ss
fdivs
stos
popa
pop
pop
xlat
sar
or
mov
or
pop
cs
pusha
insb
adc
xor
sbb
out
pop
sahf
mov
push
es
pop
fcmove
shlb
cli
jecxz
lods
pop
cmp
mov
jae
ljmp
mov
inc
push
daa
or
cli
fs
out
mov
aas
dec
add
mov
leave
mov
mov
cmpl
and
xchg
minps
fnstenv
inc
xor
insb
lcall
dec
mov
out
or
and
out
sarb
pop
cld
aam
iret
inc
addl
cmp
push
push
je
jb
int
fldl
push
mov
jbe
jbe
rcrb
test
dec
jnp
iret
inc
sbbb
xor
sub
pop
cmc
jnp
test
outsb
cmc
addr16
shlb
loop
testb
cmp
call
inc
stos
xchg
pop
mov
pushf
xchg
dec
jp
mov
xchg
mov
mov
pop
add
mov
pusha
pop
cmpsl
cmp
jle
in
stc
push
fnstcw
cs
mov
insl
jo
cmpsb
adc
cmp
fsubs
cmp
or
push
adcb
shrl
lods
sub
cmp
call
or
ret
sarl
adc
outsl
mov
jae
ds
js
test
push
loopne
out
jmp
jmp
mov
xchg
mov
xor
dec
or
xchg
test
not
cmp
aas
cli
cmp
stos
sarl
popf
mov
inc
fs
push
add
das
js
push
aas
pop
in
sub
or
adc
and
js
mov
lea
inc
rorl
popl
shl
mov
pop
jb
pop
xor
nop
mov
pop
jp
cmpl
xor
les
pop
cs
mov
xor
or
lods
incl
pusha
sbb
mov
aas
ljmp
jb
inc
inc
xchg
xchg
mov
cld
mov
xchg
addl
push
sbb
ljmp
mov
add
push
stos
cmp
test
ret
call
popa
and
outsl
ret
in
imul
xor
adc
out
pop
fcomp
das
cmp
jle
loop
dec
dec
ds
xor
xor
sub
mov
xlat
insb
mov
outsb
xchg
pushf
hlt
xchg
add
xchg
mov
aaa
or
mov
leave
and
jo
jecxz
mov
cmpsl
popa
data16
mov
mov
cmp
dec
clc
lock
insl
push
or
xchg
js
mov
xor
inc
insl
cmp
mov
jg
xchg
mov
aam
push
test
test
push
xchg
movsb
sti
rclb
jp
dec
mov
jo
add
test
bound
pop
div
add
adc
sub
addl
sub
sbb
push
scas
cltd
mov
or
jecxz
enter
xor
or
pop
imul
xchg
lea
mov
inc
push
dec
hlt
xor
call
addr16
enter
add
adc
cmp
xchg
cmp
or
add
dec
mov
xchg
jnp
cmp
pop
mov
cmpb
ss
and
sahf
mov
mov
scas
ljmp
bound
repnz
in
sbb
fnop
dec
in
decl
xor
mov
pop
pop
sub
je
lret
xor
jno
ljmp
xor
cmp
adc
movsb
gs
lret
push
pop
ret
cmp
mov
push
stc
int3
mov
xor
push
and
mov
dec
mov
shrl
add
mov
xchg
xchg
push
adc
inc
inc
adc
hlt
cmp
sub
lods
mov
fchs
cs
nop
cltd
push
cmp
xchg
jp
adc
push
sti
rorb
mov
xchg
cmp
mov
loope
clc
inc
pusha
jne
fwait
mov
sbbb
imul
add
xchg
inc
jle
iret
mov
sbb
xchg
stos
test
rep
pop
aas
test
test
or
js
ss
push
dec
insl
xchg
ret
int
sub
fcompl
arpl
mov
insb
mov
adcl
or
or
in
sarb
mov
out
lret
mov
int3
out
hlt
js
in
xchg
xor
or
je
fmuls
inc
sub
test
jnp
cwtl
or
jno
loopne
fnstcw
or
mov
jae
sub
sub
cli
loopne
pop
aaa
cmp
add
testb
dec
or
insl
xor
test
or
jl
hlt
test
push
mov
push
jb
jns
shlb
lods
pop
sub
in
sbb
add
jecxz
push
pop
repnz
lahf
push
pushf
mov
in
xchg
add
lods
mov
ss
jg
or
nop
pop
mov
add
testl
out
mov
ljmp
or
jnp
test
lea
mov
ss
inc
cs
mov
add
iret
jecxz
repz
sub
and
jge
outsl
or
dec
iret
sbb
mov
jle
enter
mov
shl
subl
cmp
xor
sub
xchg
cwtl
inc
mov
in
push
fdivr
sahf
insl
pop
loop
mov
mov
mov
ja
aam
adc
add
mov
jo
out
mov
bound
fmull
lahf
push
in
test
and
push
test
push
cmpsl
xchg
pusha
pop
cmp
je
cmp
push
jge
mov
xchg
imul
jb
pop
stc
pop
jge
dec
bound
jle
icebp
notb
sub
mov
adc
mov
out
push
mov
lods
rcrb
mov
add
mov
outsb
and
sbbl
sbb
ds
push
jle
or
shrb
lahf
dec
pusha
inc
testb
scas
sub
xor
xchg
xor
cmovp
dec
mov
stos
in
shll
gs
push
push
repnz
dec
sub
pop
pop
lods
jp
loop
xchg
cmp
inc
scas
dec
mov
or
xlat
in
jge
jle
sbb
push
xor
xchg
sbb
lods
out
mov
fdivr
mov
cmp
mov
sub
sub
popa
sub
mov
call
mov
sbb
out
mov
iret
movsb
add
and
lock
bound
lods
mov
ret
repnz
gs
dec
test
xchg
out
out
push
out
in
lds
into
mov
jno
jmp
xchg
push
vpermil2ps
ret
test
dec
xchg
insl
xchg
mov
push
jnp
mov
mov
add
mov
cmpxchg
adc
pop
and
mov
ljmp
rcrl
add
and
nop
scas
subl
push
inc
fsubrs
cmp
insl
scas
and
stc
movsl
dec
fcomp
dec
stc
inc
xor
dec
das
mov
mov
cmp
mov
jmp
jecxz
or
jl
or
push
daa
pop
repnz
mov
fildl
repnz
stos
cmc
movsb
mov
add
xor
shlb
mov
insb
push
shl
js
adc
add
mov
xor
je
dec
adc
pop
pop
negb
push
out
jns
out
inc
mov
or
dec
and
adcb
cs
aaa
fwait
lods
leave
xchg
mov
cmp
mov
fisttpl
cmp
pop
xor
fwait
sub
push
pop
test
mov
repnz
popa
imul
cmp
loope
icebp
mov
mov
shlb
adc
fdivrl
cmpb
test
add
in
aas
inc
mov
pop
scas
mov
xchg
repz
lods
flds
ss
push
test
faddl
sub
fcompl
je
fimuls
cmp
std
lods
sub
mov
sbb
xchg
shl
sarb
outsl
cltd
inc
cmc
in
stos
call
aam
adc
lods
jo
sti
mov
scas
adc
iret
popf
stc
out
icebp
cmp
int
inc
ficoml
jnp
imull
movsb
pop
jl
sbb
sub
push
push
inc
dec
les
or
insb
pop
mov
sub
mov
jne
sub
pop
push
mov
mov
cmp
dec
xor
mov
or
add
sbb
push
push
lock
and
xchg
cli
lahf
hlt
shll
pop
and
cmp
pop
or
add
add
jp
jmp
das
int
xchg
clc
xor
xchg
dec
jmp
push
lods
xchg
in
and
sub
mov
add
inc
in
fistpll
ret
int
inc
mov
cs
in
or
mov
ret
les
rolb
pop
mov
mov
mov
xchg
sub
sti
xor
outsl
push
fdivp
into
add
sub
pushf
arpl
mov
roll
jo
fsubrl
movhps
jns
cmp
loope
ss
repz
push
imul
mov
pop
fisttpll
ficompl
inc
mov
test
cmp
mov
push
pop
dec
lods
in
iret
or
test
inc
sbb
mov
push
mov
sbb
xlat
fldenv
or
mov
ss
pop
jno
adcl
mov
push
inc
push
cmpsb
jnp
fcoml
adc
mov
lods
int
sbb
jae
imul
pop
filds
mov
dec
or
int
adc
loopne
push
xchg
dec
fcmovbe
popf
mov
stos
inc
in
divl
mov
fwait
mov
jne
xor
test
mov
adc
incl
cmpsb
mov
sub
sub
fucomip
inc
cli
and
lcall
mov
xchg
scas
inc
in
pushf
ret
lcall
sbb
fmuls
cmp
lock
lahf
aam
aad
lea
or
frstor
jb
sarl
arpl
out
jne
xchg
xchg
ret
xlat
je
sarl
mov
out
in
xor
jle
xchg
push
daa
inc
cmpsb
or
push
mov
sbb
cmp
or
sbb
stc
adc
bound
aas
cmc
iret
mov
jg
sub
pop
popa
add
xor
sbb
pop
stos
dec
testl
outsb
or
outsl
scas
test
push
and
es
adcl
jo
les
jmp
ja
clc
pop
or
sub
and
push
fld
or
lea
scas
inc
xor
inc
addb
and
cld
pop
pop
add
int
pop
aaa
add
std
fsubs
jo
xor
adc
insb
out
ficoms
or
shrb
and
bnd
test
xor
addr16
in
add
sbb
sar
mov
xchg
xor
leave
pop
test
iret
lret
lahf
outsl
xchg
divb
loopne
leave
aaa
mov
cwtl
adc
mov
jge
sti
fisttpll
pavgb
or
fcoms
xchg
xor
repnz
pop
ret
push
pop
mov
or
mov
das
lret
cld
or
shll
jns
out
push
push
stc
inc
jne
mov
fiadds
in
mov
int3
add
pop
dec
scas
insl
lods
cs
sahf
sub
je
shll
sbb
daa
push
jae
xor
inc
mov
inc
lret
add
jge
jbe
inc
mov
test
add
cmp
lcall
sub
aam
cwtl
mov
cmpl
mov
sub
or
sbb
sti
inc
xor
mov
jnp
dec
xor
movsb
xlat
sbb
cmp
jg
sbb
sahf
jnp
lcall
adc
add
add
imul
add
inc
xchg
test
lahf
or
jnp
jno
mov
and
shll
xchg
mov
xor
add
mov
pop
lds
ds
shl
sub
ds
ds
push
mov
xchg
ds
dec
xchg
loope
gs
jne
jl
arpl
xchg
adc
ret
dec
xor
mov
add
xchg
test
rorl
fidivs
pop
xor
sbb
fadds
call
outsb
mov
push
cwtl
scas
inc
stos
fistl
sub
push
hlt
roll
xlat
cmp
cmp
cmp
ja
sbb
xchg
cmp
addr16
jb
fs
cld
xchg
rclb
cmc
mov
sbb
sbb
dec
push
xchg
adc
int
loop
stos
push
jp
push
jecxz
xlat
and
lahf
add
and
adc
rcrl
cmp
sub
shll
dec
movsb
fdivs
ds
rcr
fstpl
pop
stos
or
push
sbb
ljmp
add
int
mov
or
xor
sahf
and
lock
test
sbb
int3
jecxz
ljmp
into
mov
test
rol
cmp
xor
pushf
nop
push
and
mov
xchg
push
mov
jns
iret
mov
pop
gs
ja
push
imul
mov
jg
out
adc
and
cmp
pop
lock
dec
jp
and
xor
imul
in
movsb
test
cmp
push
xor
loopne
fcoml
ljmp
xchg
adc
adc
lret
icebp
pop
incl
sub
ficoml
and
pop
imul
jmp
cmp
xor
jle
lret
lea
sub
add
mov
std
jl
imul
cli
lcall
cmp
cmpsl
inc
inc
fdivr
imul
pop
loope
push
push
std
pusha
xchg
mov
call
cld
pop
cld
push
lahf
cltd
adc
pop
xlat
xchg
push
lahf
xchg
mov
xor
je
enter
insb
xchg
xchg
inc
popa
xor
mov
mov
xor
pop
mov
and
pushl
imul
jecxz
mov
mov
dec
inc
mov
mov
mov
cmp
fwait
arpl
sbb
stc
das
pusha
mov
adcb
sti
jbe
ljmp
jecxz
adc
outsb
xchg
loopne
mov
mov
sbb
rcrb
addb
fs
jl
inc
xchg
jmp
cmp
lret
cld
call
or
jo
sub
loop
cld
pop
inc
dec
pushf
add
or
add
shr
repz
dec
sub
mov
inc
xchg
pop
or
pop
fnstsw
xor
pop
fisubs
add
jecxz
sub
or
js
icebp
or
push
cltd
into
fdiv
or
aad
shrl
dec
insb
aaa
fsubr
outsl
lea
and
icebp
incl
out
ret
arpl
stos
ja
jl
sbb
push
mov
ror
into
inc
cwtl
sub
ret
sbb
popf
and
dec
mov
scas
adc
in
and
fisubl
inc
cmpsl
sarb
jle
fwait
out
xchg
loopne
xor
xor
jle
xchg
mov
inc
add
dec
jecxz
das
test
xchg
nop
jecxz
mov
int
outsl
sub
out
insb
pop
cmp
mov
pop
pushf
arpl
loope
mov
ficomps
cmpsl
push
mov
dec
add
mov
pop
inc
mov
sub
pop
mov
fwait
icebp
nop
mov
add
push
out
mov
cmp
movsl
jno
xchg
mov
popf
jnp
adc
add
test
dec
sub
sar
fildll
js
mov
test
add
pop
das
enter
or
stos
dec
sahf
roll
push
sub
divl
cmp
pop
mull
cmc
and
negl
iret
push
xchg
out
lcall
cmp
dec
or
inc
jmp
das
mov
negl
jo
rcll
stos
add
cmp
lret
xchg
cmp
in
int
lods
push
sub
pop
mov
js
jnp,pn
mov
pop
or
pop
pop
sub
sbb
dec
sbb
int3
aam
and
xorl
or
xchg
loopne
inc
aam
movsl
mov
cmpsb
outsb
movsb
mov
sub
out
repz
addl
sbb
sbb
jb
inc
inc
push
cmc
cmpl
inc
dec
xor
jl
sub
xchg
sub
xlat
ss
and
mov
and
mov
mov
sub
pop
sub
daa
dec
into
cmp
das
std
and
push
mov
daa
adc
add
mov
pop
cmp
add
ret
gs
jae
mov
cmpl
repz
fmuls
inc
fwait
aam
dec
insl
sbb
xchg
pop
jo
jnp
sbb
or
and
std
lds
or
lcall
jnp
xorb
push
mov
mov
leave
mov
repz
xchg
nop
and
hlt
jae
xlat
jmp
lret
mov
or
inc
daa
push
xchg
jb
icebp
or
shl
mov
add
jo
jg
je
in
fildll
jle
xor
mov
in
mov
add
sarl
out
mov
push
sbb
ljmp
push
test
inc
push
testb
jns
fwait
xor
sbb
ret
push
pop
loop
loopne
or
or
fcomps
xchg
adc
xor
movsl
hlt
inc
adc
shlb
sub
lret
test
add
loopne
mov
pop
stos
mov
cmp
scas
daa
push
add
mov
add
sub
mov
ffree
setbe
push
cmp
sarl
push
std
mov
les
stc
mov
jge
popa
pop
repz
or
mov
mov
adc
mov
xchg
mov
ds
push
add
xchg
sbb
sbb
popf
lret
fmull
push
or
mov
mov
push
imul
mov
scas
sahf
imul
lds
add
repz
imul
popf
frstor
pop
cmp
pop
lahf
std
mov
dec
jbe
or
js
dec
jnp
incl
push
lods
ljmp
arpl
sub
addr16
sub
psllq
sar
cld
das
ret
aad
cmc
loopne
mov
jle
cmpsl
shlb
mov
std
loope,pn
jns
jne
push
inc
imul
out
sub
das
xor
jl
loop
enter
sbb
addr16
jae
sbb
mov
leave
sub
push
push
dec
leave
dec
nop
lods
push
push
or
out
and
pushf
phsubd
push
ja
inc
jp
push
mov
in
jl
loop
push
gs
cmp
sbb
in
cmpsl
adc
sbb
cmpsb
cwtl
dec
fcomp
movsb
das
pop
cmp
stos
cmp
push
call
inc
fisttpl
cmp
pop
mov
fwait
jge
pop
add
in
jle
sbb
pop
test
sbb
pop
cmp
adc
pop
rcll
mov
add
push
add
xor
ret
xor
push
rorb
pop
lcall
das
push
or
jae
js
sub
arpl
xchg
in
mov
leave
and
gs
push
cmp
daa
sub
hlt
cmp
cmp
cmp
ljmp
mov
popa
pop
movsb
jmp
inc
aam
mov
xor
and
mov
cmc
data16
arpl
pop
or
insl
mov
int3
fistl
fdivl
mov
mov
dec
fs
clc
repz
mov
in
dec
mov
sbb
icebp
in
subb
mov
xchg
sbb
sub
jp
ljmp
imul
sbb
mov
lret
cwtl
or
xchg
jl
shrb
lcall
clc
xlat
dec
gs
test
out
xchg
ja
jl
js
cld
adc
xchg
aad
loop
hlt
xor
jle
push
arpl
cld
stos
es
cmp
dec
push
push
testl
xchg
fisubs
xchg
jno
out
arpl
nop
roll
mov
mov
pop
stc
push
es
pusha
pop
dec
and
jne
inc
call
pop
ja
and
pop
pop
arpl
mov
sub
int3
jae
mov
leave
sbb
or
fildll
fbld
divl
and
aad
mov
pop
jae
lcall
decl
push
loopne
movsb
xchg
sbb
add
pop
fsubr
mov
xor
mov
movb
lcall
leave
jnp
jb
movsl
enter
stos
test
add
loop
lret
idivb
ret
cmpsb
mov
clc
imul
mov
pop
pop
add
cmpsl
push
dec
jg
inc
pop
cmp
insb
popf
fs
and
mov
mov
scas
jg
dec
pop
les
adc
daa
in
mov
fnstsw
jo
das
pop
filds
jle
adc
mov
or
aaa
insb
sbb
out
hlt
and
test
jbe
xchg
xlat
enter
fcomps
stos
inc
mov
mov
cmp
sub
or
ret
lret
lods
je
test
hlt
dec
stos
jne
xor
fsubs
cmp
mov
pop
mov
mov
movsb
mov
pop
in
push
jns
stc
sbb
lret
pusha
mov
xchg
sbb
lods
inc
sbb
xchg
jmp
cmp
pushf
xchg
popf
push
fsubrs
sub
xchg
popf
jo
mov
cli
xchg
mov
push
scas
or
fiaddl
pop
jno
and
cwtl
mov
or
cli
xor
mov
xor
add
mov
sti
movsb
jmp
inc
push
movsb
dec
out
or
hlt
pop
xor
stos
pop
sub
lds
jl
sahf
leave
mov
adc
mov
scas
jnp
xor
lea
popa
and
mov
mov
fistpl
ret
pop
push
cmpsl
ljmp
sub
stos
pop
adcl
faddp
cmp
ret
clc
push
orl
push
enter
pusha
or
xchg
sub
clc
aam
mov
push
mov
pushf
je
int
mov
push
rorl
fldt
mov
out
xor
daa
loope
sub
cmp
jbe
push
leave
ss
ret
jg
shlb
inc
xor
mov
cmp
pusha
mov
in
pop
pop
ret
mov
jp
int3
jl
test
jne
xchg
cmpsl
cld
and
push
sub
or
test
aad
sbb
mov
divl
sub
sarb
in
cmp
jb
jmp
xchg
loop
adc
inc
fimull
orb
add
outsl
mov
mov
in
lock
jno
cmpsb
imull
adc
fsubr
test
and
mov
addr16
loop
pop
fcoms
xchg
push
mov
js
mov
push
movsb
scas
pop
clc
xor
jmp
lahf
dec
stos
push
add
roll
add
xchg
into
jb
sbb
ds
js
jae
cmp
inc
sbb
aad
sbbb
push
mov
pop
std
add
jg
sarb
scas
mov
sbb
ja
mov
and
mov
push
dec
lahf
addr16
add
mov
pusha
sbb
xorb
fcomip
lret
cmpsb
jmp
scas
or
in
dec
mov
inc
mov
pop
insl
pop
cmp
xor
lds
das
xor
mov
fadd
scas
xor
ja
push
stos
mull
iret
add
arpl
jp
out
adc
iret
xor
mov
pop
inc
mov
mov
dec
insl
cmp
scas
mov
push
lret
les
test
sub
inc
sub
jp
cmc
add
stos
pop
sahf
sub
fstpt
shlb
xchg
xor
xchg
shlb
je
out
sbbl
mov
das
outsb
mov
test
sub
int3
bound
shl
test
add
push
xlat
in
stos
xor
mov
jle
ficompl
and
rorb
xor
and
lret
filds
mov
test
jmp
dec
int
jbe
or
mov
popl
sti
or
push
and
push
mov
loope
inc
mov
rcll
inc
add
mov
lods
push
push
mov
adc
pop
mov
imul
mulb
out
push
lcall
in
gs
push
pop
outsb
in
sbb
sub
dec
pop
repnz
fsubl
mov
xchg
sarl
adc
mov
sbb
cmp
cmp
adc
jp
jb
adcb
mov
mov
popa
in
iret
mov
mov
cmp
cs
push
outsb
jg
imul
lea
scas
push
lret
icebp
into
xor
repnz
inc
mov
mov
icebp
jno
jecxz
jne
mov
xor
mov
out
popf
pop
jbe
or
push
fidivrl
outsl
jle
and
adc
jne
fisttpl
fcmovne
ja
gs
inc
mov
xor
push
adcl
push
mov
xchg
pop
mov
fs
cs
insl
inc
pop
sbb
push
cltd
test
lcall
sbb
xor
pusha
xor
sti
mov
into
pusha
cmc
sbb
lret
sahf
pop
fmuls
fmuls
sbb
lret
je
imul
adc
jmp
sub
push
mov
aad
out
lods
les
inc
cmc
and
ss
adc
push
cwtl
cmp
in
sbb
add
mov
sub
fnstsw
pusha
fdivs
jg
xchg
xchg
cmp
in
shll
dec
xchg
sub
aam
lods
dec
inc
rorl
sub
lret
xchg
cwtl
mov
mov
les
xchg
out
lret
lock
pop
dec
test
add
push
pop
rclb
jp
enter
mov
xor
xchg
mov
call
push
pop
data16
sbb
sub
mov
xchg
cmp
jg
push
int
sub
not
add
xor
mov
aam
mov
test
sbb
push
lock
sahf
rcl
push
out
lea
ljmp
xchg
fnstsw
stc
lret
mov
out
inc
mov
and
mov
sub
nop
hlt
movsl
mov
stos
imul
mov
clc
in
sbb
ja
or
iret
lds
movsl
ljmp
push
imul
sbb
add
cltd
mov
xor
inc
cld
mov
mov
lretw
inc
mov
jl
int3
pop
ja
ljmp
jae
jg
pop
add
lret
pop
lds
cmpb
nop
pop
mov
sti
jbe
lahf
sub
mov
inc
dec
pusha
sbb
mov
loope
mov
xchg
cli
rsqrtps
shll
jle
xor
sub
dec
jge
repnz
lcall
jo
jb
bnd
mov
jmp
mov
call
sbb
inc
mov
or
icebp
or
lret
aaa
mov
dec
inc
jp
adc
pop
loope
mov
lods
iret
push
subl
and
add
or
mov
push
push
inc
adcb
fldpi
std
sub
push
mov
pop
add
dec
loope
mov
clc
mov
dec
sub
adc
jno
cld
fldt
mov
repz
cmp
mov
or
subb
inc
into
jno
push
insl
jecxz
sub
sbb
dec
ret
jno
and
std
jo
jne
daa
cltd
add
cmp
mov
icebp
es
jno
jecxz
and
cmp
add
inc
sub
push
lahf
movntps
inc
mov
rcrb
icebp
outsl
pop
pop
sbb
int3
int3
or
fisubrs
rol
test
xchg
or
pop
popa
int3
arpl
push
out
xchg
inc
lret
add
mov
js
cmpsl
push
pop
jp
xchg
test
out
cmp
ljmp
mov
lods
test
or
mov
mov
jbe
jmp
mov
sub
lea
dec
icebp
movsb
int
lahf
mov
cmpsl
inc
notl
inc
xor
lcall
jae
bound
xorb
and
mov
cs
xor
push
ret
push
lcall
pusha
jle
pop
das
sbb
cmpsb
test
and
push
lods
push
xor
mov
fwait
arpl
loop
jg
fists
inc
fsubs
dec
ja
cmpsl
insl
cmp
dec
jno
adc
pop
push
inc
sub
std
shlb
inc
jne
inc
aam
pushf
jo
rcll
enter
inc
mov
xor
loopne
orb
pop
jg
les
lods
xchg
lret
mov
mov
sbbb
xor
iret
shrb
popa
sub
lret
cmp
push
adc
adc
adc
daa
cs
adc
dec
dec
xor
daa
add
insb
xchg
sbb
rol
fmul
pop
lcall
test
dec
inc
sub
cmpsb
aam
add
imul
lret
and
insl
or
xchg
sbb
scas
hlt
pop
push
test
mov
ljmp
loop
push
ja
dec
and
pop
das
mov
sti
mov
xchg
inc
xor
stos
or
mov
testl
js
pushf
test
loope
or
out
mov
lods
push
faddl
loop
popf
loop
pop
push
pop
shlb
cli
xchg
jnp
mov
inc
cli
lret
pop
jnp
aaa
shl
push
jns
or
pop
push
ds
xchg
scas
cld
pop
jo
cli
aad
mov
cld
push
mov
sub
fistps
mov
fldcw
xchg
inc
aam
mov
testb
in
test
adc
inc
push
mov
xchg
lret
fidivrs
and
cwtl
xor
lea
mov
sbb
cli
hlt
dec
ds
fcomps
push
mov
popf
mov
sub
push
leave
mov
mov
cmp
adc
mov
movsb
jae
and
sahf
lahf
sbb
mov
adc
sahf
jae
adc
push
or
bound
in
scas
fstps
mov
lahf
pop
fiadds
mov
fnstenv
xor
pop
adc
sti
push
outsb
inc
mov
jo
and
ficomps
cmpsl
inc
in
aas
ss
shlb
jl
xchg
sub
xchg
imulb
movsl
aad
std
add
push
subl
sbb
adc
cmp
jmp
push
jg
les
mov
push
and
mov
aaa
repz
and
testl
and
icebp
mov
or
jl
add
cmpl
in
mov
or
test
movsb
aam
stos
mov
icebp
lret
into
test
cmp
adcl
mov
loop
imul
pop
mov
rcr
cmp
inc
pop
push
call
lea
jecxz
xor
cltd
stos
cmpsl
pop
mov
int3
inc
pop
add
and
push
inc
aam
adc
inc
dec
jb
xchg
xor
int
xor
out
leave
cmp
mov
in
neg
push
pop
ds
dec
pop
jns
les
pop
mov
pop
sub
fimull
sarl
out
inc
xor
jge
js
sbb
lret
adc
fcmovnb
jb
fcomip
mov
cmpsl
push
or
fdivs
mov
cmpsb
sbb
inc
out
pop
xorl
inc
inc
std
subl
or
mov
cld
xor
lock
mov
adc
out
xor
inc
fs
mov
mov
and
imul
adc
rolb
xor
xlat
push
mov
sbb
cld
push
inc
xor
in
ljmp
sub
imul
push
jg
lods
mov
push
imul
fstpt
out
push
mov
and
inc
ss
xor
cmp
test
jb
jb
lea
mov
aad
outsb
test
in
enter
mov
out
cld
xor
mov
dec
sti
fiadds
add
rclb
inc
and
mov
or
dec
mov
gs
lret
retw
push
pop
rep
and
rcll
pop
inc
add
aam
push
fcmove
jl
sti
pop
mov
mov
push
or
sbb
bts
dec
imul
int3
cli
xchg
sbb
scas
adc
daa
out
cmp
mov
loopne
cmp
cwtl
out
daa
mov
cmpsl
fwait
jbe
fwait
adc
frstor
pop
xchg
popf
pop
int
mov
push
and
or
out
out
pop
jecxz
or
add
fwait
push
inc
xchg
test
paddb
cmp
mov
clc
hlt
jg
xchg
sahf
lods
push
pop
mov
push
pop
jp
cltd
jo
xchg
push
fisubl
push
cmp
mov
dec
rclb
push
lods
in
add
adc
std
inc
popa
js
mov
sbb
add
sub
mov
cmp
cmp
icebp
push
inc
scas
push
dec
subl
adc
popf
icebp
or
insl
push
or
loope
stos
lds
icebp
push
cmp
sbb
push
inc
addb
enter
pop
cli
mov
ds
shlb
in
scas
xchg
je
fstps
jecxz
dec
xor
cltd
push
mov
dec
mov
mov
clc
fcmovnbe
pop
negl
loopne
sub
es
add
iret
scas
in
cmpsb
dec
jmp
sbb
xchg
xor
std
mov
insb
mov
jns
push
mov
nop
dec
out
int3
xlat
lahf
push
mov
adc
inc
xchg
jno
stos
imul
inc
int3
xor
fcoml
sbb
loop
or
sahf
jnp
movsb
ja
push
mov
xchg
inc
shll
in
lea
or
testl
stc
insb
sub
fs
and
or
or
cmpsl
scas
ret
pop
test
daa
or
xchg
movsl
mov
fsubl
and
imul
and
int
jbe
shrl
int
in
mov
test
fisubl
test
subl
mov
add
jae
popa
fstps
insb
and
mov
sub
mov
jmp
xlat
xor
mov
das
inc
fnsave
xchg
xor
pop
das
add
push
mov
das
bound
orl
inc
out
or
clc
int
adc
sub
or
push
ret
scas
push
mov
cltd
xchg
sub
iret
mov
push
js
dec
push
inc
sub
jns
or
push
jnp
cmp
pop
xor
les
pop
loope
push
inc
cmp
imul
sbb
jbe
jb
mov
or
push
jecxz
cmc
loopne
lds
jge
lods
mov
cmp
leave
sbb
or
leave
outsb
sub
xchg
inc
pushw
in
hlt
inc
jp
mov
fwait
lods
in
pop
and
dec
sbb
arpl
stos
push
jno
jg
inc
adc
out
mov
outsb
push
fstpl
mov
and
enter
fdivs
in
adc
xchg
cmp
cmp
aas
cmpsb
mov
xchg
stc
jno
push
cmp
fdivs
shrl
inc
xchg
sbb
jmp
cmp
out
loope
in
and
aam
dec
or
add
cmp
add
adc
or
out
or
mov
jg
cmpl
push
adc
push
xchg
roll
mov
xchg
out
gs
gs
inc
leave
dec
in
test
js
add
adc
add
xchg
test
imul
fsubr
sub
xor
adc
sub
adc
out
je
push
xchg
lock
ret
xor
repnz
mov
movsb
add
xchg
rcrl
adc
push
or
rolb
bound
mov
mov
insl
iret
aad
subb
pusha
das
lods
sub
int
push
cwtl
mov
sub
in
xchg
sar
arpl
je
dec
mov
pop
das
pop
push
xor
mov
dec
push
lcall
in
pop
sahf
mov
ret
test
out
adc
add
adc
out
outsl
and
stc
mov
xor
aas
outsb
xchg
movsb
clc
mov
pop
mov
pop
and
negl
dec
ret
fwait
inc
fcomp
pop
ja
xor
sahf
push
adc
sbb
pop
add
in
mov
mov
add
jmp
xor
mov
aas
cmp
das
scas
jge
cwtl
icebp
test
fwait
ds
xchg
aam
push
out
cmp
add
push
push
jmp
add
in
scas
push
inc
dec
js
mov
insb
sbb
rorb
mov
dec
add
xor
xor
xchg
test
ja
and
loopne
xchg
int3
es
leave
cltd
dec
xor
lcall
jp
xor
sarb
sbb
cmc
mov
push
mov
pop
mov
push
lret
push
in
xlat
xchg
or
int3
mov
enter
xor
xchg
jo
adc
pop
rcll
or
inc
mov
or
and
sub
cwtl
and
adc
std
pusha
insb
dec
mov
rorl
shll
fldt
sbb
pop
std
cltd
add
or
sbb
xchg
xor
iret
hlt
dec
movsb
inc
push
adc
lods
mov
ljmp
cmp
jle
lods
rcrl
push
jp
jecxz
mov
mov
fcmovnbe
movsb
les
in
lods
fimull
or
cmp
add
jmp
outsb
leave
xor
xchg
cmp
andl
and
cmp
aad
cltd
lods
ret
cltd
add
fstl
jo
mov
or
inc
push
jp
sub
cs
mov
pop
lock
mov
jl
sbb
fs
push
adc
icebp
roll
push
add
mov
ds
jne
adc
into
and
lods
push
cmp
xchg
les
ja
xor
xchg
sub
cmpsb
dec
mov
mov
test
cmp
loop
xchg
les
cmp
and
aad
xchg
and
jl
scas
cmc
ret
aam
pextrw
mov
sahf
dec
xchg
xchg
data16
xchg
call
mov
mov
dec
pusha
shlb
movsb
sub
fadds
or
or
cmpsb
and
out
int3
or
out
aas
daa
push
shll
pop
int
cmp
pusha
enter
or
xor
push
xor
std
mov
mov
test
mov
inc
in
lea
pop
repz
jb
imul
push
dec
insl
push
imul
push
push
mov
sbb
adc
adc
cmp
notb
je
jno
jb
or
add
mov
jp
stc
mov
jb
insl
cli
ljmp
jns
or
or
adc
pop
xchg
cs
stos
dec
adc
or
or
xor
add
jb
cli
shlb
add
xchg
mov
aad
fsubp
cwtl
fcomip
notb
and
mov
out
imul
rorb
sahf
cmpsl
scas
ret
das
push
mov
xchg
push
xchg
scas
xchg
imul
push
out
fwait
lcall
imul
fidivrl
cmp
mov
dec
cs
add
out
pop
std
adc
popf
cmp
mov
mov
pop
rolb
adc
sbb
cmpsl
ret
cs
inc
mov
xchg
pop
test
adc
mov
out
jo
and
push
stos
or
add
sbb
je
rcll
leave
adc
je
cld
int3
adc
loope
xor
xor
mov
xchg
enter
shrl
jle
mov
fidivl
sbb
fs
pop
gs
lds
ljmp
push
dec
pop
jno
aas
in
inc
xor
outsb
sub
dec
aad
jns
loop
leave
andl
mov
xor
icebp
out
mov
int3
lods
pop
fwait
sub
jnp
mov
jle
fldcw
sub
ds
das
inc
pop
outsb
jo
lret
xlat
xor
insb
mov
push
mov
rcl
pop
lea
out
test
jecxz
pop
jge
push
xor
ret
mov
loop
cltd
or
into
cmp
mov
rclb
fisubs
into
idivl
jb
adc
ret
cmp
push
cmpsl
out
sbb
lea
jbe
fdivr
jbe
shl
nop
mov
push
and
sbb
imul
outsl
iret
jge
cmp
inc
adc
test
mov
cmp
loopne
or
ss
stc
clc
lds
aaa
pop
test
push
psadbw
and
fidivrl
jbe
adc
xor
es
sub
fs
jge,pt
and
shrl
stc
aas
jbe
sub
pop
jmp
xor
scas
mov
push
adc
lahf
sub
mov
adc
lret
cmp
mov
sbb
pop
jb
test
dec
add
sbb
mov
cmp
adc
jbe
ret
sub
inc
jb
rcrl
cmp
jge
movzbl
repz
imulb
cmp
aas
mov
xor
int
ds
call
xlat
adc
jp
jl
sub
loope
test
pop
les
cs
sbb
aas
pop
or
and
frstor
jg
mov
arpl
lea
sub
push
mov
sbb
fs
push
and
insl
movsb
mov
les
fs
and
rcr
dec
push
das
cmpsb
dec
jns
mov
jp
scas
test
xchg
int
jb
mov
fs
xor
and
pop
clc
inc
mov
fs
lret
sbb
adc
and
cmp
rolb
mov
mov
push
mov
pop
push
pop
out
cmp
mov
cmp
or
sbb
jae
and
add
fstps
pop
cmpsb
pop
out
pusha
cmpsb
movsl
dec
dec
cmp
ja
jne
sbb
cmpb
pusha
push
xchg
add
xchg
jecxz
lahf
mov
mov
push
jnp
pop
test
gs
mov
in
std
fcmovnu
and
or
xchg
frstor
jnp
and
add
test
and
mov
les
rcrl
xchg
loope
das
xor
dec
aad
or
push
dec
jae
dec
xchg
pop
push
cmp
mov
push
xor
push
lock
cwtl
jo
adc
pop
mov
pop
and
loope
or
xor
mov
mov
in
mov
jns
test
mov
mov
aas
jg
loope
cmpsl
and
sbb
add
sub
lock
cmpsl
dec
add
addr16
scas
sub
adc
xor
iret
push
lcall
mov
insb
push
popf
or
cmp
fcompl
jp
jnp
xchg
lahf
cmp
popa
outsl
or
hlt
or
out
xchg
cmp
adc
xorb
and
out
pop
pop
pop
jl
data16
pop
std
stos
icebp
ficoml
ds
aam
mov
adc
andb
cmc
xchg
add
bound
out
or
or
leave
std
inc
cld
mov
rorl
and
pop
cli
mov
xchg
mov
xchg
sbb
loope
iret
fwait
stc
aam
clc
negl
cmp
into
mov
or
cmp
sub
cmpsb
mov
push
cwtl
mov
lods
out
add
dec
add
pop
pop
xor
jl
ds
xchg
jnp
das
lret
or
nop
sub
mov
or
xchg
xchg
push
push
negl
dec
js
je
lds
popa
lods
pop
dec
lret
out
xorb
push
fdivrl
fidivs
or
cmc
cs
cmp
insl
inc
test
subl
sub
sbb
push
popa
fisubrl
sub
xchg
push
dec
push
outsl
xchg
inc
inc
imul
add
hlt
enter
leave
cwtl
or
bound
jg
sti
xchg
xor
lds
cld
adc
sub
ljmp
mov
in
fst
adc
mov
xor
or
dec
xchg
in
xchg
lret
pop
lret
std
mull
lcall
inc
insl
shlb
xchg
fidivs
mov
loopne
pop
mov
ds
jbe
and
outsb
je
add
or
jecxz
pop
sbb
ret
movsl
pop
jae
and
outsl
rclb
xor
mov
jg
pop
fdivs
stos
loope
mov
xchg
mov
and
xchg
push
xor
pop
cmp
shll
rcll
mov
push
push
or
mov
mov
mov
add
outsl
mov
adc
lret
mov
je
xchg
mov
jb
repnz
mov
push
test
pop
sbb
rclb
fists
in
fbld
and
and
std
repz
jge
addr16
icebp
cmp
outsb
dec
add
rclb
pop
mov
pusha
imul
add
xor
icebp
test
sahf
into
push
insb
int3
ret
hlt
cltd
or
sub
imul
cltd
dec
dec
mov
data16
cmp
mov
fmull
lahf
adc
adc
pop
dec
sub
mov
sbb
xor
inc
test
stos
mov
movl
mov
dec
aam
push
adc
xor
sbbb
les
mov
mov
jno
call
xchg
xchg
or
lods
jl
enter
inc
pop
xor
push
fnstsw
push
and
pop
and
cld
and
mov
shll
es
gs
push
jbe
sbb
daa
leave
lods
pop
mov
in
insl
mov
addb
mov
adc
pop
lea
aam
repnz
lret
shll
scas
dec
cmp
xlat
out
int3
inc
shll
xor
push
xor
add
push
adc
add
inc
push
shl
lret
mov
pop
addb
dec
push
cwtl
mov
mov
je
sub
mov
cmp
clc
or
sbb
cwtl
cs
mov
pop
push
popf
mov
jp
scas
jns
mov
outsb
lret
xchg
iret
loopne
dec
hlt
xor
cs
lods
push
fistpl
push
dec
loope
mov
shrb
push
testl
push
aaa
mov
sbb
decl
inc
je
mov
jg
cmp
cld
inc
mov
aam
cmp
mov
dec
pop
lret
in
mov
adc
jb
inc
inc
xchg
sbbb
jnp
pop
sbb
adc
addr16
lods
pop
mov
ret
inc
push
sahf
push
jb
and
vxorps
adc
mov
lods
imul
mov
sub
add
inc
nop
les
in
hlt
jp
repz
jle
mov
dec
jb
sbb
adc
loopne
fs
mov
aaa
mov
arpl
dec
sahf
popf
cld
xor
cmp
pop
fimull
js
cmpsl
shrl
or
in
xlat
pop
dec
xor
lret
test
sub
add
or
repz
inc
jnp
inc
loopne
mov
add
push
fwait
ret
mov
jl
lcall
or
inc
int3
mov
testl
fimull
pop
stos
cld
adc
enter
mov
xor
lods
adc
mov
inc
mov
insl
add
push
cmc
in
xlat
je
ficompl
pop
out
add
inc
shll
aam
mov
adc
dec
or
mov
cs
mov
sbb
pop
sahf
sub
push
sub
pop
rorb
out
dec
movsb
jl
pop
cmpsl
orb
xchg
jmp
mov
and
shl
in
stos
sub
push
and
test
push
jp
ljmp
gs
or
inc
pop
sbb
insl
jo
subb
dec
mov
xchg
cli
fucomip
or
fldenv
mov
fdivrs
sbb
push
mov
lahf
mov
mov
dec
les
cmpsl
cmp
aaa
into
xor
movsb
jns
mov
mov
orb
mov
pop
mov
sub
push
fs
mov
movsl
adc
cwtl
jle
jb
rcll
dec
inc
out
mov
ja
xchg
xor
imul
lods
xor
adc
inc
fistpll
adc
fs
iret
add
inc
push
cmpsb
jmp
cmp
cmp
dec
jg
cmp
mov
push
cmp
js
jb
icebp
cmp
ljmp
mov
leave
loopne
xchg
sarb
hlt
jle
mov
test
pushf
jle
add
mov
repnz
jg
mov
call
mov
push
push
xchg
movsl
jmp
addr16
push
xchg
out
mov
dec
mov
sub
adc
ja
and
test
out
repz
adc
inc
enter
jns
fimuls
mov
and
pop
fidivrl
repnz
xor
jbe
lods
jno
add
clts
fisttpll
lea
mov
add
and
in
leave
add
int3
pop
aam
jle
test
into
lret
cmp
jo
adc
push
mov
xor
mov
ret
add
int3
mov
adc
dec
std
and
inc
and
add
int
testl
enter
imul
test
insb
dec
or
push
and
aam
jle
gs
mov
lock
sbb
lds
iret
movsb
sbb
daa
out
test
and
mov
push
in
adc
push
ret
popf
jnp
inc
gs
mov
shlb
sub
repnz
clc
jb
stos
mov
cmp
rcll
std
xchg
popf
out
nop
pop
inc
fwait
add
imull
cmpl
cltd
xor
lcall
mov
jecxz
enter
sahf
adc
lahf
fistpll
imul
aas
pop
enter
push
cs
negl
dec
add
clc
inc
clc
ret
adc
rcl
sbb
lds
add
mov
dec
mov
cli
sub
jo
ds
pop
mov
pop
aaa
lock
ss
repnz
hlt
fld
jb
mov
lock
jp
out
jne
inc
sub
and
and
jmp
jmp
pop
ja
je
inc
or
clc
adc
test
or
sbb
movsl
pop
inc
or
cmpsb
das
jg
jecxz
pop
mov
sbb
fisubrs
in
test
movl
subb
sub
mov
loopne
xchg
sbb
mov
ja
loop
sub
out
dec
and
jne
out
xor
mov
add
and
mov
rorl
imul
pusha
push
adc
rcrb
andl
data16
fldenv
out
xor
call
inc
push
inc
xor
xchg
or
test
xchg
sahf
bound
push
mov
jae
fdivrs
movsb
jnp
mov
ja
movsb
xor
repnz
movsl
xchg
pop
add
test
je
jne
fwait
or
inc
jae
insb
or
cld
hlt
mov
pusha
jns
or
or
aaa
dec
iret
jmp
call
mov
bound
test
or
stc
lods
shr
adcb
xchg
or
js
sbb
jno
out
sub
hlt
mov
xchg
and
nop
fimull
aas
call
test
fwait
in
sbb
cmp
mov
cmpsb
push
in
push
dec
mov
xor
jle
adc
sbb
in
in
test
add
addr16
les
xor
iret
add
or
hlt
add
movsl
sub
cmp
ret
sahf
pop
xchg
push
push
mov
or
pop
loop
sbb
adc
clc
aam
aad
cmc
mov
imul
xchg
loopne
stos
mov
jno
cmp
mov
rcr
cltd
jge
out
arpl
xor
outsl
imul
mov
add
ds
ss
mov
push
pop
cmpsb
bound
enter
adc
xchg
sbb
mov
cmpsb
push
lea
imul
lods
js
sbb
dec
in
mov
pop
cld
adc
mov
addr16
setg
inc
inc
ficompl
jo
mov
adcb
mov
es
or
bound
xlat
in
cmpb
divl
pop
sbb
mov
jp
add
xor
js
cmp
cs
sbb
aad
add
popa
pop
cmpsl
cs
adc
push
test
loope
mov
mov
sbb
mov
jg
pop
ljmp
cmpsb
in
daa
xchg
in
addl
cmc
xchg
bound
aam
add
push
shll
popf
or
and
cmp
fidivl
push
xchg
push
push
inc
xor
xchg
insl
repz
ss
imul
cmp
adc
sbb
sub
loop
sarl
inc
push
cmpl
sarb
mov
sti
stc
subb
fucomip
popf
and
sub
sbb
enter
insb
pop
or
fstpl
or
jno
stc
dec
mov
cmpsl
mov
call
xchg
sbb
lods
cltd
jmp
js
popa
shl
add
insb
or
inc
adc
cmp
mov
frstor
adc
nop
pushf
pop
stos
mov
mov
or
bound
fs
and
adc
pop
dec
pop
sbb
xlat
shr
or
aas
lret
jb
xorl
push
inc
jb
sbb
dec
dec
mov
stc
dec
inc
mov
sbb
imul
ss
or
cmpl
imul
mov
icebp
xchg
cwtl
jns
ret
mov
pop
repz
lods
or
xchg
push
xlat
inc
sbb
mov
or
fsubp
hlt
jecxz
aaa
add
shr
xchg
jo
or
jae
mov
mov
loope
ja
fistps
sub
jle
adc
jecxz
push
mov
and
in
inc
jmp
add
xor
ret
push
cs
xchg
sub
mov
add
lea
or
jp
pop
test
mov
jge
inc
push
mov
sub
pop
fsubrl
out
cs
push
movsb
add
lahf
push
sub
int3
xor
cltd
ljmp
lea
pushf
mov
cld
ss
movsl
xor
push
int3
jo
mov
jbe
inc
sub
sub
mov
or
pop
adc
push
inc
sarb
xchg
cmpsl
call
mov
loope
ja
js
xchg
mov
mov
cmpsb
mov
add
mov
adc
sbbl
scas
add
movsl
js
pop
xor
outsb
push
xor
lock
adc
mov
stos
sub
jns
jecxz
jne
and
test
repnz
push
lock
out
mov
cmp
dec
lcall
cmpsb
outsb
and
xchg
das
std
hlt
inc
mov
xor
ret
les
add
adc
das
jae
sub
dec
out
punpckhbw
aaa
rorb
shll
movsb
insb
lods
punpckhbw
stos
ret
push
sub
nop
js
ds
addr16
mov
pop
sbb
dec
pop
mov
mov
pop
pop
push
push
rcll
inc
sub
out
push
push
cltd
movsl
push
mov
daa
jbe
popa
int3
push
mov
faddp
cltd
rcl
xchg
pop
int
pop
and
fisttpll
jae
push
das
or
stos
bound
pop
xchg
mov
sbb
and
lock
xor
idivw
loop
mov
lods
jmp
mov
orl
movsb
mov
shrb
jg
pop
xchg
inc
jecxz
xchg
sbb
xor
stos
or
sub
cmc
jge
lods
ljmp
mov
sbb
cmpsl
cli
push
lods
xchg
icebp
in
xchg
xchg
roll
sbb
sbb
pop
in
pop
cmpsl
push
scas
and
inc
icebp
jnp
lods
lret
mov
stos
jl
sub
int3
push
ds
push
mov
and
shl
jae
pushl
rorb
dec
xorb
cmp
cld
leave
fadd
sarb
add
jle
inc
jp
ret
xor
adc
ficoml
cmp
pop
scas
cmp
push
lods
dec
out
inc
mov
rolb
mov
js
call
or
add
lods
xor
js
movsb
ljmp
scas
mov
mov
imul
scas
out
xchg
xor
mov
mov
loop
push
sbb
decl
mov
xchg
xchg
hlt
push
sti
lods
flds
xorb
push
add
scas
into
sbb
mov
inc
push
and
loopne
sbb
fwait
pop
lcall
push
mov
movb
sbb
pop
pop
les
lods
ss
out
xchg
sbb
jne
pushf
xor
mov
push
or
mov
sti
pop
or
nop
insl
enter
out
jb
popa
xor
imul
jae
pushf
mov
jp
dec
jl,pt
hlt
stos
push
inc
subl
pop
add
or
mov
outsb
decb
sub
pop
in
push
je
movsb
add
stos
std
mov
pop
push
jle
pop
out
xlat
dec
sub
jp
sub
xor
cmpsb
fsubl
lea
mov
push
insl
pushf
scas
push
sbbl
ds
int3
addr16
fs
mov
lock
mov
push
lods
pop
and
dec
outsb
cmp
mulb
out
ffree
loope
jp
push
je
dec
sbb
popf
add
out
ja
pop
in
add
cltd
adcl
mov
cmc
imul
adc
in
sub
or
aam
xlat
dec
xchg
cli
repnz
loopne
mov
insb
xchg
out
cmp
fisttps
mov
mov
xor
xlat
sub
das
fstp
push
or
xor
push
push
or
in
cmc
sbb
mov
ret
loop
mov
xchg
nop
xchg
dec
add
cmc
pop
mov
pushf
dec
sbb
sub
push
cmpb
insl
aas
imul
sbb
icebp
decl
mov
cmp
sub
arpl
or
mov
cmp
gs
pop
or
mov
lock
pop
sbb
movsl
sbb
xor
and
jmp
sarb
adc
cld
mov
cwtl
mov
fnstenv
and
orl
int3
fcmovnb
sub
mov
adc
push
cltd
fidivrs
popa
xchg
mov
idivl
fcomps
fcmovbe
jnp
adc
aaa
les
or
pop
push
andb
enter
push
insb
mov
jg
orb
dec
outsb
cmp
cmp
out
insb
jb
push
insl
dec
addl
pop
xor
iret
sbb
dec
mov
xor
dec
fs
jnp
xor
jmp
xchg
ror
and
pop
inc
jge
nop
mov
mov
push
cmp
in
adc
mov
push
mov
jnp
data16
filds
pop
jp
inc
xorb
leave
sti
in
lock
enter
jle
leave
lds
popa
dec
mov
xchg
jne
add
jmp
test
movsl
mov
data16
push
jle
adc
mov
js
rcrb
sub
cmp
cltd
adc
ss
pop
ret
jb
sub
addl
cmp
jae
dec
insb
xchg
jo
fnstcw
mov
xor
mov
or
or
test
mov
fadds
or
or
ficoms
ja
int3
daa
or
jg
mov
bndldx
ror
jne
mov
ds
and
or
stos
jmp
sub
inc
out
sbb
xchg
xor
nop
pop
lret
call
mov
cmc
mov
mov
popa
insl
fisubl
add
ret
jp
sub
fcoms
int3
fistpl
mov
add
ljmp
and
inc
lds
outsb
inc
test
cmc
mov
xchg
call
sbb
cmp
cmp
jmp
and
daa
pop
roll
mov
cmc
cmpsb
or
jae
pop
test
rcrb
xchg
test
mov
roll
shll
xchg
cmp
mov
inc
cmp
pop
js
loope
stos
ja
push
movsb
cmp
movsb
rol
lock
shll
in
jb
adc
jnp
mov
dec
dec
pop
imul
divl
cmc
cld
lds
mov
push
jo
dec
cmc
rclb
loope
mov
mov
loopne
cmp
mov
loopne
stos
jae
je
sub
in
cwtl
ja
addl
push
jle
sub
mov
xor
ret
mov
xchg
dec
sbb
pop
mov
lahf
xchg
dec
test
daa
iret
loope
push
jg
or
mov
jo
sbb
mov
mov
fsts
je
cmc
sub
rclb
inc
out
stos
mov
das
mov
mov
jno
stos
fistpll
pushf
icebp
dec
pusha
lret
pop
adc
jmp
mov
cmc
sbb
pop
sbb
fsubp
or
jmp
mov
xchg
mov
lahf
fistl
incl
xor
or
enter
imul
in
xlat
cmp
test
adc
xor
cmpsb
xor
and
outsb
clc
mov
inc
push
pop
lcall
fldenv
rorb
outsl
outsl
aad
xchg
loope
sahf
cmp
push
mov
orb
xchg
push
das
adc
sbb
test
and
jns
push
mov
jbe
cs
jne
fistpl
leave
or
or
dec
xchg
and
dec
pop
aas
cld
sub
call
mov
jno
sbb
outsl
rcl
mov
mov
jl
fdivl
jge
inc
dec
cmp
adc
enter
inc
jo
jbe
int
jbe
lcall
cmpsl
dec
pop
xchg
sbb
dec
xchg
add
scas
mov
mov
int3
cmp
addb
cmp
push
xchg
sub
sbb
nop
mov
or
mov
xor
fldcw
dec
mov
int3
sbbl
insb
mov
and
xor
call
pop
xchg
cltd
daa
or
fstps
fs
scas
scas
ja
stos
mov
and
pop
arpl
lahf
out
les
icebp
lret
add
add
fwait
adc
cmp
mov
jp
mov
fwait
insb
test
aam
aam
sbb
pop
add
and
cmpb
add
lret
stc
arpl
imul
mov
lock
stc
jno
popa
mov
mov
or
cwtl
std
shrl
jl
inc
push
jg
cwtl
rolb
loopne
rorb
and
push
out
xchg
ret
add
fcoml
sub
pop
xchg
rclb
or
push
add
pop
sub
pop
xlat
ss
insl
fmuls
rorl
in
test
cmp
arpl
xchg
inc
jl
sub
jb
pop
mov
dec
adc
add
cld
inc
addr16
aaa
push
stos
push
cld
push
pop
int
jecxz
mov
mov
ret
sbb
pop
ss
fildll
mov
and
and
int
mov
out
testl
ja
dec
jb
ficoms
push
mov
xor
jnp
inc
jge
cmc
out
shlb
xchg
push
mov
pop
insb
fs
jnp
inc
std
push
lds
fsubl
ret
sbb
mov
push
pop
aas
jl
aad
pop
rcrb
jge
jns
lock
out
gs
xchg
fwait
dec
adc
jo
out
cld
inc
inc
jno
pop
pushf
call
ffree
sti
push
inc
mov
int3
ret
dec
inc
add
add
insb
int3
add
inc
jp
inc
mov
imul
and
xlat
sahf
insb
adc
not
jo
loopne
adc
cmp
notl
jg
xor
outsl
popf
xchg
pop
nop
pop
jg
add
lcall
scas
loop
sub
jnp
mov
or
mov
push
loop
add
dec
mov
and
lea
out
mov
sbb
shlb
push
test
or
pop
dec
cmp
repnz
icebp
push
add
dec
fnstenv
or
sub
fnstcw
in
stos
cmp
adc
adc
and
sub
cli
cmpsb
mov
hlt
add
dec
jle
ret
mov
xchg
addr16
jns
push
pop
arpl
stc
pusha
xchg
pusha
inc
push
aas
push
dec
fsubs
pop
jne
sbb
xor
xchg
sarb
xor
mov
movsb
adc
jno
enter
ret
cmp
popa
dec
add
cmp
dec
push
xchg
int3
into
gs
mov
lods
out
mov
and
xor
ss
pop
ds
cmp
dec
jbe
aam
inc
push
mov
fcoms
iret
adcb
fistpl
xchg
repz
or
hlt
inc
out
mov
jbe
mov
sahf
push
jge
es
int
xchg
orl
insb
push
or
mov
lock
adc
mov
loop
sub
jl
loope
jecxz
add
sbb
push
das
insl
mov
pop
adc
sub
sub
out
ds
gs
or
pop
pop
jnp
jo
rorl
in
dec
test
and
or
push
cmpsl
xchg
fstl
jns
jmp
ret
aad
das
pop
mov
aaa
mov
je
xor
mov
push
lret
aas
test
lahf
fildll
or
push
xorb
mov
pop
out
push
sbb
fistpl
pop
sbb
jle
inc
icebp
je
dec
pop
frstor
cmp
add
xchg
sub
fs
aaa
inc
shrb
and
popf
dec
outsb
into
movsb
mov
pop
imul
xchg
add
ds
iret
jae
push
xchg
fimull
sbb
jnp
gs
andb
lods
mov
jb
in
adcb
and
sub
jno
jno
cmovg
lahf
add
lods
fs
mov
sbb
cmp
sbb
test
sbb
and
xorl
and
and
sbb
test
adc
mov
dec
cmp
jg
xchg
andb
lret
fdivrs
xchg
jnp
xor
ljmp
iret
cli
test
sub
repz
sti
jge
jnp
pop
ljmp
enter
mov
movsb
jle
imul
rcll
leave
inc
jg
jno
je
les
shll
mov
int3
js
push
mov
cmpb
ffreep
dec
mull
pop
shrb
mov
ljmp
test
xchg
pop
jmp
or
movsl
cmp
fistpl
push
imul
int
mov
sub
pop
or
xchg
fists
jge
cli
inc
cmp
jle,pn
xchg
mov
jne
add
cmc
xchg
mov
xchg
add
and
ss
clc
movsb
dec
jecxz
push
test
in
rcrb
pop
stos
lahf
fs
cmp
ds
sub
mov
push
fidivl
push
mov
mov
mov
in
mov
lret
add
cmp
mov
pop
or
or
push
cmp
mov
aas
push
jle
stc
cld
aaa
jg
add
ret
in
aaa
push
cwtl
add
jecxz
xor
rorb
clc
jnp
sub
shll
cmpxchg8b
ja
and
mov
inc
push
test
aas
jmp
and
pop
jo
sbb
lds
inc
enter
mov
repz
mov
icebp
fwait
lods
sbb
mov
mov
in
sbb
cmpsl
cmp
sub
ret
cmp
sub
push
shll
arpl
jmp
dec
insb
arpl
ret
iret
pop
out
fcompl
push
mov
pop
jnp
and
dec
inc
dec
xchg
dec
outsl
mov
cmc
insb
pop
incb
enter
dec
xchg
and
pop
fldcw
mov
pop
mov
pop
rcrb
xor
jb
fs
jnp
scas
in
lock
sbb
cmc
les
clc
out
out
ja
or
popa
out
int3
jg
insl
repnz
mov
pop
adc
or
push
push
cs
jb
mov
jne
jge
or
aas
add
ljmp
or
outsb
int
push
mov
or
xor
std
fadds
jbe
shlb
push
pop
xchg
adc
mov
pop
dec
push
or
dec
jl
inc
xor
xchg
cwtl
filds
cmp
fnstcw
cwtl
adc
cmp
mov
testb
hlt
rolb
xchg
push
loop
ss
in
pushf
push
mov
or
fimuls
sub
shrl
jno
and
stos
mov
fsubrs
cld
add
and
lds
jl
push
ret
pop
jmp
inc
fcmovnu
arpl
ds
out
push
adc
jmp
fwait
add
imul
jbe
bound
movsb
fldcw
adc
and
push
lods
mov
pop
sahf
loope
daa
rcrb
xor
jo
mov
lret
and
xor
sarb
pop
add
adc
push
push
fldcw
popa
xchg
pop
imul
aad
xchg
lret
dec
dec
mov
add
scas
fucomip
dec
xchg
mov
xlat
sbb
add
rorl
ljmp
add
shll
adc
lcall
nop
push
pushf
mov
jg
xor
insb
and
mov
push
push
lds
jecxz
in
stos
push
inc
es
loop
cmpsb
test
shrl
loope
popf
rcr
mov
sub
inc
leave
xchg
and
mov
les
xchg
insb
pop
sub
or
stc
popf
jmp
pusha
dec
imul
clc
stos
adc
arpl
stos
frstor
std
jle
repz
sub
inc
icebp
or
jp
enter
pop
mov
ret
cmp
dec
mov
fsub
dec
ret
das
mov
loop
daa
cs
ljmp
enter
sub
sub
mov
lcall
cmpsb
dec
sub
scas
adc
lods
orb
lock
mov
cmpsl
mov
in
icebp
rorb
rclb
mov
fs
dec
inc
pop
into
mov
push
fldcw
add
hlt
lea
gs
je
shrl
lock
mov
test
dec
out
jns
push
mov
out
in
stc
add
ret
mov
adc
sub
addr16
jp
les
xchg
mov
enter
outsb
inc
jae
enter
xchg
int3
les
mull
push
iret
wbinvd
adc
fistpl
xor
lock
jmp
xchg
sbb
loop
pop
lret
aam
and
lea
pop
or
sbb
add
sbb
dec
push
loopne
jb
jns
sub
aas
scas
mov
inc
lret
jp
jbe
sbb
pop
dec
pop
ret
movsb
jl
mov
jbe
lret
lods
fistpl
test
ds
mov
and
pop
mov
lahf
jnp
movsl
adc
mov
jp
mov
scas
jge
repnz
int
pop
fiaddl
lea
mov
stc
adc
and
je
jne
ljmp
sbb
leave
mov
enter
mov
sbb
popf
loop
popa
push
in
jns
out
dec
sti
jbe
insl
mov
pop
and
mov
cwtl
outsl
push
add
mov
dec
imul
enter
add
stc
jecxz
pop
pushf
fsubr
sbb
cmp
pushf
clc
inc
inc
push
ja
jmp
adc
add
mov
mov
repnz
mov
in
outsb
xchg
into
repnz
in
xor
pop
add
mov
mov
pusha
inc
add
inc
arpl
sbb
cs
fucomi
jo
das
or
pop
adc
add
pop
ljmp
iret
fwait
rorb
sbb
cli
mov
xchg
xor
jg
test
cmpsb
sbb
outsl
or
sahf
ret
stos
and
int3
popa
push
rolb
cmpsb
mov
rclb
sub
inc
xchg
fcmovnu
mov
movsl
pop
cli
mov
mov
add
pop
outsl
nop
cmp
ud2
jmp
xchg
add
popa
mov
loopne
xchg
stos
adc
daa
xor
dec
mov
sub
bound
mov
sub
pop
test
push
leave
mov
or
data16
cld
xor
imul
sbb
mov
out
cmpsl
insb
loop
lcall
into
std
jg
lcall
lea
negb
ja
insb
or
adc
inc
cmpb
popf
rol
incl
pushf
mov
cwtl
movsl
clc
sarl
push
push
cmpsb
xlat
sbb
adc
mov
push
pusha
cmpsl
xor
jmp
cmc
mov
outsb
mov
dec
and
mov
xor
leave
out
nop
loope
js
dec
xchg
hlt
cmp
pusha
arpl
test
mov
out
dec
add
nop
loop
add
pop
cld
jo
push
ret
sbbl
inc
inc
fldt
lcall
pop
es
aas
jle
jp
pop
repz
xchg
popa
jp
test
dec
in
xor
cmp
loop
mov
cmp
insb
pop
inc
mov
cmpsb
iret
mov
out
test
jmp
push
jnp
dec
je
jo
outsl
rcrl
sub
pop
arpl
sub
sub
jmp
lahf
lret
cmp
xor
das
jl
sbb
adc
dec
inc
js
cmpl
add
xchg
jg
cltd
mov
ret
pop
xor
in
mov
jo
insb
inc
pop
add
fst
clc
fcompl
testb
in
icebp
and
loope
iret
or
rcrb
add
stos
mov
ja
out
data16
aam
xchg
push
je
sub
aad
ficoms
sub
fstl
mov
cli
cmp
movsb
arpl
aaa
bound
or
lods
sarl
ja
and
push
cli
dec
jae
lds
test
popf
cmpb
cmpsl
test
stos
nop
sub
xlat
test
mov
leave
repnz
inc
xor
xchg
ficoml
mov
movsb
inc
dec
pop
inc
and
jb,pt
mov
std
mov
push
rorl
dec
inc
sbb
pop
mov
inc
or
mov
push
aad
jne
add
dec
scas
ja
ret
inc
xchg
xor
jno
pop
int3
roll
sub
push
cmp
insl
lock
adcl
or
xor
pop
jge
data16
jecxz
sbb
add
xchg
insl
add
cmpsl
cmpsl
lret
mov
es
adc
sbb
xor
mov
int3
rcrb
cmc
pop
pop
jnp
dec
mov
adc
adc
fiaddl
shlb
jl
shlb
sti
sahf
mov
int3
mov
insl
mov
test
inc
and
int
jg
ret
int3
out
ret
cmpb
dec
adc
sarb
jecxz
lds
les
stos
lock
popf
fiadds
jp
xor
jl
dec
bound
out
jle
ds
xchg
mov
in
fwait
push
push
and
mov
pop
fsub
insb
push
pop
push
into
dec
jecxz
fmuls
pop
lahf
cmp
mov
jne
loope
rcl
mov
stos
pop
mov
pop
out
pop
leave
sub
add
pop
sub
xlat
or
fnstsw
sub
xor
pop
outsl
jge
adc
dec
cs
dec
xor
lret
jae
mov
jle
xchg
enter
adc
test
out
into
cmc
movsl
push
fistpl
js
mov
mov
xchg
xlat
adc
call
jmp
cltd
push
push
xor
add
aam
dec
add
and
adc
rep
mov
push
xor
fcomip
gs
xor
rol
xchg
dec
push
jo
inc
jae
je
out
push
sub
xchg
out
xchg
cs
clc
pop
cmpsl
mov
xchg
sarl
call
aad
cmpsl
lcall
push
je
jmp
cs
mov
dec
and
pop
cmovnp
push
mov
xor
pop
dec
sub
mov
or
jbe
pop
fucomip
push
pop
xor
repz
mov
sarb
cmp
adc
pop
in
jne
rorl
mov
push
sbb
or
mov
xchg
inc
cmp
insb
das
adc
xchg
mov
out
shrb
dec
mov
fimuls
mov
lret
adc
mov
sbb
add
nop
scas
and
cld
push
mov
stos
sbb
mov
and
ss
loope
mov
jno
dec
in
call
pop
pop
mov
add
adc
int
stc
lcall
ret
je
nop
sbb
sub
lea
cli
cli
repz
xor
dec
insb
and
adc
ds
cld
push
mov
ret
jb
add
nop
sbb
pop
pusha
jae
sbb
mov
rorl
push
push
or
sti
jo
push
dec
sbb
push
pop
sub
pop
add
filds
popa
loop
into
std
mov
rclb
mov
jns
mov
mov
mov
mov
ss
int
jmp
loop
aad
and
stc
int
mov
int3
mov
fisttpl
daa
int
adc
sbb
mov
pop
mov
aad
cld
sbb
popf
add
xor
or
sbb
and
and
imulb
cmp
push
pop
jnp
push
push
lea
inc
and
out
outsl
sub
inc
jns
xor
or
outsl
mov
cli
adc
imul
xchg
jg
mov
xchg
fdiv
test
or
or
sti
pop
cmp
andb
cmpsb
aad
mov
push
test
aad
or
mov
xchg
or
fldl
std
movsl
orb
sbb
shrl
icebp
and
adc
mov
outsl
sbb
aad
xchg
outsl
xlat
rcll
inc
imul
arpl
cld
or
sarl
lea
lock
cmp
addr16
rcrb
and
mov
jmp
pop
add
out
loop
adc
jnp
jnp
push
cld
mov
in
dec
test
inc
out
loop
pusha
lods
in
sbb
test
push
cmp
rol
xor
out
add
cwtl
lret
or
insb
pop
mov
push
mov
movlps
mov
sbb
fildl
cwtl
cmp
mov
test
ss
enter
jae
clc
insb
xchg
mov
or
mov
rolb
cmpb
and
dec
jne
and
xor
jae
test
xchg
sub
outsl
addr16
push
jne
hlt
adc
mov
adc
push
mov
data16
mov
jl
push
in
cmp
rcll
jl
adc
test
or
mov
popf
xchg
sahf
loopne
xlat
and
mov
lret
cmpsb
inc
das
push
imul
dec
pushf
xchg
sahf
sub
jmp
mov
ret
fcmovu
sub
or
popf
mov
out
add
and
mov
mov
xchg
shll
into
repz
stos
stos
fs
lock
test
mov
adc
pop
push
cmp
pop
movsb
in
test
pop
std
pop
cld
and
sti
lods
sbb
in
jae
in
repz
push
or
xchg
xlat
les
daa
xchg
loop
xor
imul
popa
aam
fnstcw
lock
nop
dec
and
mov
icebp
stc
adc
data16
shlb
and
repnz
nop
mov
dec
rcrb
mov
fnsave
rcrb
xchg
or
lret
enter
int3
test
jmp
cmp
mov
sbb
clc
es
add
pop
jnp
pop
fsubrs
sbb
mov
rol
mov
pop
clc
ret
repz
cltd
xor
mov
cltd
mov
enter
stos
bswap
sbb
dec
daa
mov
jp
push
orl
sub
rol
stc
insb
dec
xlat
push
ljmp
mov
cmc
aas
mov
mov
cld
icebp
mov
and
out
cmovb
in
sbb
movsb
inc
mov
push
cs
cs
shll
mov
negl
fisttpll
jge
xorb
mov
sub
inc
loopne
jnp
cltd
jmp
sbb
or
sub
loope
and
inc
jne
pop
sub
cmp
movsl
xor
or
fistl
imul
pop
pop
rcrb
in
in
jne
mov
xor
stc
push
jge
cmpsb
arpl
enter
and
ss
mov
notb
repnz
mov
dec
lock
sub
push
insb
or
or
inc
jo
or
or
pop
cmp
arpl
sti
pop
cmp
sub
add
dec
fstl
adc
add
mov
mov
mov
nop
jbe
jg
cmc
adc
imul
sbb
jge
sub
mov
cmc
mov
cs
push
jne
or
cmp
pop
mov
std
fisubs
icebp
cltd
movsb
jnp
pop
stc
sub
stos
push
movl
clc
stos
push
shrb
repz
lcall
sub
xor
sub
mov
rcrb
inc
or
sub
les
fidivs
ds
cs
pop
pop
out
dec
pop
add
xchg
ret
sbb
push
cmpsb
cmpsl
test
iret
sbb
iret
sub
hlt
aas
and
sub
push
imul
enter
int
roll
ret
mov
lods
jb
pop
dec
outsb
aas
je
aam
inc
xlat
jb
cmp
inc
lcall
rorb
rcll
stc
mov
sub
iret
cmp
pop
cmp
push
pop
adc
dec
mov
push
out
adc
cli
aas
aaa
add
jnp
cmp
shr
shrl
pop
xchg
fcmovu
push
and
xchg
fs
lea
cmpb
test
movb
dec
sbb
mov
dec
mov
cmpsb
push
jp
add
cld
in
imul
xchg
imul
int
mov
out
test
popa
and
call
loopne
scas
and
stos
adc
js
adc
inc
cmp
pop
adc
jno
in
pop
adc
mov
sub
loop
sbbl
call
xor
mov
addr16
ljmp
add
in
shl
mov
jge
ljmp
pop
fs
push
es
sbb
adc
mov
mov
sti
xor
xchg
rcr
repz
sub
ljmp
push
dec
mov
adcl
ficompl
jecxz
xchg
xchg
add
cmp
lret
insl
xchg
ss
enter
cli
out
mov
aam
dec
hlt
les
sub
call
sbb
jae
rol
fidivrl
sub
push
es
mov
xchg
aam
jp
sbb
daa
rorl
mov
push
xchg
inc
sub
xor
push
shll
or
inc
ljmp
inc
outsl
ret
mov
dec
cmc
mov
shlb
jp
jecxz
cmpsb
xlat
outsl
hlt
and
lods
iret
daa
scas
jge
cmp
ret
fs
orl
ja
ss
popa
push
dec
stos
stc
adc
push
fstl
lods
popf
inc
inc
mov
gs
shl
mov
lahf
or
push
dec
xor
mov
or
jl
stc
xchg
add
dec
ja
les
add
bnd
jo
movsl
ret
and
sub
outsl
aam
notl
daa
adc
movsl
rcrb
rep
sarb
insb
mov
daa
xor
mov
dec
lock
xorl
jbe
ds
cmpsl
ss
gs
popa
popf
insl
dec
push
sub
testl
mov
pop
stc
lret
rcrl
rcrl
mov
mov
pop
pop
jmp
arpl
sub
addr16
popl
rorb
xchg
mov
xchg
repnz
jmp
lods
push
sahf
mov
fidivrs
xchg
inc
jp
or
fadd
repz
mov
sbb
jecxz
jecxz
aad
loope
callw
pop
inc
add
test
nop
jne
fwait
adc
mov
mov
stos
cmp
iret
rcrl
add
sbbl
mov
mov
pushf
mov
ret
mov
jne
repnz
mov
push
inc
jno
aam
int
movb
test
outsl
adc
mov
push
into
cmp
sar
mov
inc
test
std
xchg
sbb
pop
inc
push
out
adcl
out
push
or
adc
scas
cmp
sbb
jae,pn
xor
daa
mov
mov
out
enter
fwait
cltd
leave
shrb
call
inc
aas
lahf
xor
enter
rorb
inc
cmp
cmp
jge
mov
mov
add
xor
faddl
jl
mov
dec
jns
ret
adc
ret
movsl
sbb
sbb
xchg
xor
fdivs
lock
cmp
pop
cmp
cmp
lret
xor
mov
andb
cmp
gs
xchg
fsubr
or
dec
lea
ret
lds
in
popf
xchg
or
fiadds
lret
inc
xchg
cmpsb
jmp
xchg
movsb
mov
sub
cmp
mov
jae
mov
adc
mov
movl
xor
aam
xchg
fs
in
mov
sti
arpl
jp
jnp
mov
adc
or
cwtl
push
outsb
jnp
xor
dec
iret
cmp
sub
pushf
fsub
inc
pop
inc
insb
ja
das
aaa
mov
or
pop
push
out
fnstenv
xor
es
mov
jg
clc
repnz
push
inc
xlat
hlt
adc
inc
out
add
jno
sarl
mov
sub
mov
sbb
stc
pop
ds
dec
out
cmpsb
movsl
pushf
hlt
gs
ljmp
pop
adc
sbb
push
out
daa
lods
push
out
shrb
and
push
scas
andb
int3
test
js
aad
adc
mov
cmpsb
out
fiaddl
sbb
push
fstpt
dec
cwtl
lret
xlat
mov
xlat
adc
sbb
jle
xorb
roll
out
negb
xor
sbb
popa
mov
stos
mov
dec
idivl
dec
bound
int3
movsl
push
imul
int3
std
loope
push
loope,pt
jl
shlb
subl
mov
xor
adc
pop
cmp
and
xlat
add
pop
stos
mov
movsl
lock
hlt
sbb
adc
adc
inc
cmp
inc
addr16
adcb
lods
rcrl
cmpl
int
fucomip
test
mov
push
lcall
mov
sarl
cmp
sbb
int
jg
popf
icebp
insb
addl
fisubs
dec
jo
aaa
sub
xchg
lds
push
movsb
push
or
std
mov
aad
or
mov
sub
pop
in
addr16
jmp
filds
movsb
cmp
mov
mov
xchg
lods
mov
int3
cwtl
cmp
fdivs
and
fsubs
push
scas
or
pop
cmp
outsl
add
std
jnp
jno
in
insl
out
testb
sub
pop
call
subl
cs
mov
out
xchg
test
fdivrl
pop
stos
hlt
cmpsb
xchg
sbb
fwait
push
adc
dec
cwtl
inc
push
mov
jno
in
jo
inc
pop
lret
clc
movsl
push
hlt
push
popf
or
insl
daa
stos
ret
negb
mov
repz
push
jo
mov
sub
or
ljmp
cmp
ret
cmpsb
inc
inc
push
insb
xchg
test
loopne
cwtl
xor
pop
stos
jge
jns
int3
mov
push
rol
scas
shlb
sti
dec
mov
movsb
pop
pusha
mov
sarl
jecxz
es
dec
mov
push
add
scas
cmp
xor
pop
int
and
pusha
xchg
mov
or
aaa
xchg
aas
jo
lea
dec
lods
incl
pop
stc
cmp
in
mov
xlat
dec
inc
test
or
inc
and
mov
cs
sub
xlat
pop
mov
sbb
sbb
rcr
fdivr
test
sub
xchg
mov
js
xchg
lret
out
enter
gs
inc
pcmpgtd
ret
aam
sub
lods
jbe
pop
or
push
mov
loop
loopne
adcb
lahf
data16
pop
dec
or
daa
imul
push
insl
and
hlt
fidivs
ljmp
adc
mov
jns
add
cld
push
ficomps
xlat
mov
lret
cmpsb
mov
inc
fcoms
jg
xor
mov
lret
add
adc
fwait
dec
push
pop
int
in
sbb
adc
mov
test
movsb
dec
pop
arpl
xor
stc
data16
movsl
in
and
push
xchg
sbb
cld
in
or
ret
xor
xchg
fcomps
xchg
jle
add
rcrl
jge
xchg
sbb
xchg
mov
es
ljmp
fmulp
addr16
adc
jge
mov
pop
mov
fcmovnu
mov
bound
or
push
sti
add
test
jp
xchg
jbe
mov
xchg
sub
xorb
push
adc
jb
push
les
into
xor
neg
mov
mulb
push
scas
int3
aas
scas
mov
or
mov
lea
pcmpeqw
hlt
std
mov
xor
adc
dec
or
andl
jmp
fadds
dec
mov
loopne
or
out
lock
adc
mulb
out
xor
adc
dec
inc
adc
add
jle
insb
sahf
xchg
fs
out
pop
lret
add
mov
pusha
jnp
int
jmp
stos
repz
add
int
lcall
das
cmp
xor
outsl
cmpsl
cmp
pop
adc
dec
dec
dec
in
push
and
je
or
inc
sbb
subb
or
icebp
xchg
jne
pop
mov
mov
push
daa
jmp
popf
dec
ds
hlt
push
lret
addl
dec
std
in
or
mov
xchg
cmp
xor
fs
and
in
outsb
jge
ret
movsb
push
icebp
aas
mov
dec
mov
pop
rep
daa
and
ss
mov
iret
adc
push
pop
cmp
mov
sbb
cmpsl
inc
inc
cmpsl
test
movsb
and
xchg
fisttpl
pusha
dec
repnz
or
jle
sarl
lahf
dec
sub
or
pop
mov
jbe
or
add
or
ss
or
adcb
loope
sub
inc
loop,pn
cld
dec
dec
out
lcall
xor
xlat
jp
rclb
lcall
notl
xchg
or
jecxz
rol
enter
pop
sbb
ret
enter
adc
or
pop
mov
sahf
mov
int
adc
and
inc
pop
mov
lahf
rcrl
mov
enter
pop
xchg
xor
push
cld
cmp
mov
out
inc
mov
push
push
inc
xlat
lret
jmp
sbb
das
lock
and
xchg
cmp
jg
sbb
push
and
in
sub
cmp
outsl
pop
sub
mov
in
mov
push
fistpll
add
mov
lods
outsl
rcrb
pop
gs
mov
rorb
jmp
sar
jo
popa
inc
sysexit
in
sbb
xchg
div
daa
push
mov
leave
mov
outsl
and
inc
mov
xchg
xchg
mov
daa
cmpsl
pop
push
sub
mov
sbb
test
pop
and
test
adc
push
jbe
mov
xchg
jae
add
aad
int3
jno
shll
insl
inc
test
fs
popf
in
push
sbb
jmp
mov
lods
mov
clc
in
sub
sahf
pop
cmpsl
stc
sub
bound
jge
push
pop
dec
cmp
int3
push
loop
and
sarb
call
gs
sbb
iret
pavgw
and
jl
push
push
jbe
sbb
and
xchg
les
icebp
and
and
xlat
out
inc
out
or
loopne
daa
fldt
mov
or
sbb
in
out
adc
leave
loopne
cli
xor
mov
jge
jae
repz
pop
fisubrs
fs
xor
xor
mov
cmp
loopne
pushf
pop
sub
test
mov
pop
mov
clc
cltd
and
lds
imul
ljmp
loope
lcall
cmp
fbld
sahf
xchg
xor
rcrb
mov
pop
fs
add
xor
test
mov
fadds
sbb
mov
sub
inc
adc
and
lock
add
test
sahf
push
and
mov
mov
mov
add
mov
xchg
xor
xchg
and
jne
inc
in
inc
push
sbb
scas
mov
push
pop
popf
rcrb
sub
divl
mov
inc
xor
dec
cs
jp
jae
jns
xchg
push
adc
xchg
lods
mov
pop
add
xchg
fcmovbe
or
inc
cmc
cwtl
es
xchg
loop
mov
pop
test
sub
into
mov
mov
sub
add
ds
jo
je
and
push
hlt
xchg
out
ds
adc
pop
les
hlt
mov
or
dec
xor
shrb
inc
mov
mov
stos
test
test
std
fdivrs
fldl
dec
sbb
sub
inc
into
notb
jle
and
movsl
pusha
push
dec
cmp
js
popf
ss
sbb
add
lods
sbb
mov
push
cli
push
push
ds
sub
mov
adc
push
mov
pop
mov
cmpsl
testb
adc
sub
add
fstp
add
pop
loop
adc
sub
lea
lret
adc
xor
adc
or
popf
push
imul
outsb
jge
adc
or
mov
xchg
mov
addb
insb
bound
std
mov
bswap
loope
mov
js
pop
test
mov
ljmp
mov
pop
and
out
movsl
cld
inc
js
lret
cmp
pop
int
dec
sub
arpl
loopne
cmp
push
dec
fstpl
adc
das
adc
mov
shl
jae
sub
mov
testl
popf
mov
loopne
lahf
ja
jge
cmp
sub
sbb
xchg
arpl
in
cltd
jno
mov
xchg
xor
fldenv
pop
cmp
dec
mov
add
mov
adc
iret
cmp
pop
pop
cmpsb
idivb
iret
cmpsb
push
sub
xorb
mov
cmc
lret
inc
mov
notl
arpl
mov
adc
out
cmpsb
and
mov
ds
repz
jp
test
in
add
vmwrite
ljmp
mov
call
push
les
jno
sub
test
icebp
push
or
mov
in
into
jg
ljmp
popa
sbb
daa
fnstsw
sub
sub
dec
icebp
cmp
sarl
in
adc
adc
mov
cmp
stos
mov
push
addr16
das
adc
jno
pop
fcoml
loope
aas
imul
sub
sub
jecxz
popa
jge
mov
aam
mov
shll
or
jecxz
test
movsl
in
arpl
cmpsl
mov
or
inc
and
cs
repz
mov
fwait
ret
ud0
dec
push
idivb
adc
orl
je
push
xor
and
or
hlt
push
outsb
cltd
loop
test
stos
imul
dec
jns
xchg
rcl
dec
xor
lock
ret
sub
or
mov
ss
push
mov
xchg
adc
daa
hlt
xchg
push
xor
mov
pop
frndint
pop
mov
ss
mov
cmp
lahf
cmp
test
test
fmuls
mov
add
movsb
xor
adc
xchg
ds
cmp
and
jno
pop
pop
test
dec
inc
cmp
je
dec
cltd
stc
dec
mov
loope
test
sbb
test
test
xor
or
and
sbb
es
xor
jnp
and
daa
pop
push
fdivl
insb
aaa
arpl
adc
sub
pop
pushf
push
xor
push
fwait
addr16
dec
jb
pop
cmp
mov
push
or
fs
popl
mov
insl
adc
iret
xchg
int3
movsb
xchg
push
sbb
push
xchg
loop
mov
sbb
cmp
lods
push
pusha
out
or
adc
and
inc
dec
sbb
loope
xor
gs
icebp
into
xlat
mov
or
popa
sbb
and
mov
xor
cmp
daa
sub
fistpll
ljmp
push
cld
jae
adc
and
xor
std
jne
bound
movsl
test
ja
iret
or
hlt
and
test
cmp
shl
into
scas
sbb
lret
roll
fsubrs
sbb
sbb
add
sar
fnsave
lret
stc
sbb
pop
mov
xor
pop
and
out
add
or
mov
cmp
test
aam
int
sbb
mov
outsl
xchg
add
jmp
xor
xchg
ss
sub
imul
sub
repz
sbb
or
ret
pop
cmp
sbb
shll
out
mov
fnstenv
inc
out
negl
jmp
xor
push
sub
xorl
xchg
or
inc
jl
mov
das
dec
cmp
mov
pop
outsb
ja
enter
es
shll
mov
sbb
shll
aam
and
push
sar
stos
repz
sub
gs
inc
shrl
or
movsb
and
push
jl
decb
sub
pop
dec
add
fisttpll
and
pop
cmp
mov
inc
cmp
mov
sbb
push
jo
enter
push
xchg
push
test
and
fs
fmull
ficoms
or
subb
scas
test
pop
cmpsl
in
mov
and
ja
xlat
add
pop
sub
out
fcoml
mov
pop
rolb
push
shrb
cwtl
loope
xchg
mov
jnp
jne
cwtl
fmuls
shrd
sbb
mov
mov
add
imul
add
lcall
lret
ja
jno
imul
add
in
int3
addr16
mov
call
dec
nop
fiadds
adc
push
add
inc
aaa
mulps
mov
lret
mov
lea
mov
jo
inc
pop
adc
mov
pop
mov
call
cmpxchg8b
jmp
xor
mov
pusha
subl
mov
testl
movl
xchg
cmpsl
sbb
mull
arpl
and
fwait
pusha
inc
jnp
adc
call
or
inc
pop
pop
dec
enter
cmpsl
adc
das
xchg
jns
aas
shlb
pop
in
jge
push
jge
scas
cmc
in
orb
dec
pop
loopne
mov
mov
test
cmc
xchg
xorl
push
in
sbb
jle
add
jg
loop
ljmp
loopne
add
rcrb
or
je
idivb
call
dec
xor
loope
cmpsb
or
enter
fwait
dec
and
xchg
pop
mov
xchg
out
cs
lods
imul
sub
mov
and
iret
xor
mov
add
repnz
xchg
mov
adc
xor
mov
std
jg
pop
sbb
jmp
or
xor
push
cmp
pop
dec
adc
aas
aaa
add
adc
insl
repnz
sub
dec
mov
fbld
loope
mov
push
dec
push
inc
fdivr
add
jnp
pop
fwait
aaa
fwait
je
inc
hlt
imul
add
aaa
xchg
xchg
mov
xorl
orb
aas
sbb
imul
arpl
lods
add
pop
fsubl
or
enter
loop
lods
push
testl
push
inc
pop
in
fs
imul
iret
mov
fbstp
sub
inc
movq
in
imul
fs
pushf
fs
pop
jp
push
xchg
loope
ljmp
or
repz
xchg
mov
add
and
add
in
pop
pop
add
ljmp
arpl
xchg
leave
enter
lock
lods
pop
pop
out
popf
ficompl
into
or
mov
sbb
es
xor
lcall
lods
adc
ljmp
sub
mov
repz
incb
mov
push
cmp
enter
je
rcl
cmpsl
stos
lret
mov
pop
push
cmpsl
sbb
adc
rcrb
pause
das
inc
in
dec
out
cmp
gs
data16
gs
lcall
xchg
mov
and
sub
sbb
fsubp
xor
clc
iret
sbbb
dec
xor
jo
pop
pop
push
je
cmp
leave
jmp
mov
jg
out
xor
sub
xchg
push
imul
dec
pop
sub
std
or
sub
icebp
iret
cmpsl
fmull
in
cwtl
int3
xor
or
cld
jne
add
int
mov
inc
push
xor
ret
addr16
lretw
sbb
push
xchg
popf
xchg
in
cli
lahf
inc
pop
jae
pop
fcoml
mov
ds
inc
in
pop
jl
insb
pop
push
cwtl
add
movsl
stc
adc
mov
cmpb
jb
ret
sbb
jmp
movsb
push
addr16
popf
pop
dec
dec
pop
mov
into
add
cmp
mov
or
mov
push
push
std
outsb
dec
mov
shlb
imul
mov
test
mov
dec
and
pop
push
sub
xchg
xlat
loope
std
stos
scas
jecxz
mov
aas
mov
adc
test
fildll
mov
mov
aad
test
int
cwtl
jmp
nop
push
stos
xlat
pop
popf
sub
push
jle
adc
mov
jge
outsl
fadds
cmp
mov
cmp
xchg
mov
mov
out
xchg
adc
int3
outsb
lret
mov
adc
daa
and
pop
dec
adc
inc
out
adc
jmp
push
es
xchg
aas
test
addr16
int3
repnz
xchg
loope
adc
and
pushf
pushf
fs
pop
mov
imul
xchg
sarl
sub
pop
out
dec
sbb
jbe
jge
shl
mov
mov
inc
add
data16
fstp
movsl
mov
in
push
nop
adc
push
sti
rorl
aad
jle
cwtl
lcall
repnz
mov
inc
repnz
repz
dec
dec
push
inc
pop
in
inc
jns
enter
mov
adc
mov
or
ror
gs
dec
lret
push
xchg
jae
mov
xchg
inc
mov
loope
fmuls
jmp
dec
fstps
mov
sbb
sbb
and
push
in
imul
cli
loope
lahf
sbb
fcoml
scas
repz
inc
jae
xchg
cmp
inc
out
push
mov
outsl
addr16
call
sub
and
les
sub
fstl
or
scas
mov
in
add
and
dec
dec
test
in
dec
popa
stos
mov
into
fcompl
call
fsubrs
je
xor
stos
imul
mov
sub
xchg
fisubs
dec
data16
lret
bound
mov
jae
xlat
int3
push
push
fs
dec
pop
jge
cmp
push
mov
xor
xchg
sti
xchg
add
ror
inc
jmp
pushf
mov
pop
div
test
dec
xchg
clc
xchg
movb
and
lds
sub
or
mov
mov
lcall
xchg
cs
or
sub
lahf
test
push
sti
cmp
jae
arpl
add
lcall
xchg
mov
mov
and
add
sub
and
in
xchg
cmp
enter
xor
clc
push
add
push
mov
sub
xlat
fbld
ficomps
paddsw
loope
dec
sarb
push
lods
push
fldcw
std
sbb
jns
sbb
xchg
pusha
bound
mov
into
mov
es
and
iret
jbe
add
aad
je
mov
jns
dec
pushf
mov
sub
xchg
pop
movsl
lock
xchg
xor
xchg
pop
stos
fs
push
bound
orl
test
mul
in
xchg
and
loope
fucomp
xchg
out
adc
dec
stos
and
xor
repnz
iret
and
xchg
add
cmp
stc
and
jb
jne
xchg
inc
jno
jo
fwait
lahf
xchg
repnz
or
push
dec
pop
stc
push
and
cs
push
and
xchg
mov
stc
out
push
jnp
mov
aaa
mov
mov
jns
dec
mov
jno
cmp
test
dec
sbb
mov
loope
cmp
idivb
sar
lods
and
jecxz,pt
aam
test
jp
cmp
fwait
ja
jnp
sub
inc
scas
mov
dec
push
mov
push
jae
ja
and
mov
cmp
xchg
sarb
push
popf
adc
inc
lods
mov
loopne
add
fcoml
xchg
loope
xchg
mov
mov
scas
add
mov
aaa
mov
loope
sarl
dec
imul
idiv
shr
notb
out
out
xor
loope
cmp
and
das
mov
pop
imul
ja
leave
out
mov
pop
inc
popf
aad
sahf
clc
cmp
push
mov
add
inc
test
mov
mov
imul
inc
lea
test
pop
stos
gs
add
xor
or
xchg
jmp
enter
jno
and
imul
repnz
in
in
cmpsl
xor
daa
dec
sarl
mov
rolb
hlt
gs
rorl
iret
dec
sbb
sbb
push
sbb
faddl
movsl
lods
adc
and
sarl
lods
mov
sbb
jb
pop
jae
repnz
test
sub
adc
pop
mov
loopne
aad
shll
out
inc
nop
iret
or
mov
cmpsb
stos
sub
outsb
lea
xchg
cltd
inc
int3
scas
mov
jge
stos
xchg
sbb
cmp
push
mov
imul
sbb
mov
ret
mov
repnz
xor
inc
nop
or
xlat
cmpsb
psubw
mov
cmpb
inc
pop
inc
jne
cmp
cmp
mov
push
adcl
fadds
js
mov
dec
roll
cmp
cmp
rorl
pop
insl
aad
sti
in
cld
cmpsb
decb
clc
mov
arpl
sahf
pusha
jns
mov
xlat
add
pop
int
or
adc
or
stc
xlat
sub
xor
push
mov
xchg
adc
inc
push
mov
or
mov
dec
add
inc
mov
arpl
cmp
dec
push
scas
mov
in
mov
imul
add
loop
push
mov
shl
cld
inc
pushf
test
add
push
icebp
adc
mov
xor
sub
orb
pop
lods
ret
sbbl
mov
mov
adc
cmp
dec
jo
cltd
xchg
mov
mov
and
cli
gs
add
movsl
clc
dec
mov
fdiv
sub
and
xorb
call
mov
mov
repnz
inc
push
stos
mov
and
push
xor
push
movsl
push
jnp
das
add
stos
outsb
and
lods
pop
lret
pusha
xor
mov
data16
dec
mov
arpl
clc
ds
jle
or
shll
lea
xchg
jne
adcb
and
mov
xchg
dec
mov
mov
lods
lods
dec
sub
addr16
inc
jb
xlat
mov
cmp
cwtl
jnp
jnp
jl
js
pop
sbb
js
xor
jl
and
pushf
mov
popl
outsl
jle
jno
sub
push
imul
imul
cli
outsl
xchg
sbb
sbb
dec
or
push
mov
mov
mov
lods
inc
add
cmp
push
aad
and
xchg
xor
in
andb
pop
fiadds
mov
inc
or
push
stc
or
shll
push
cmp
popf
stos
mov
push
int3
and
cmp
cltd
jg
push
push
jne
sbb
insb
xor
jbe
inc
sbb
scas
pop
mov
test
out
std
aaa
inc
sub
mov
shlb
pop
and
mov
cltd
ja
push
mov
sub
cmpsb
pop
stos
sub
sub
sbb
adc
test
cmp
repz
xchg
test
or
dec
aaa
loopne
xor
mov
dec
scas
in
mov
xchg
rorl
hlt
fnsave
sbb
enter
mov
sti
and
adcb
js
inc
orb
inc
mov
and
fdivl
mov
popf
adc
cmp
je
dec
jnp
add
add
cmp
lahf
movsb
popa
cmp
and
xchg
cmpsb
sbb
mov
jl
mov
cmpsl
cs
mov
xor
mov
enter
icebp
insb
repnz
push
scas
push
and
xor
push
pop
push
sbb
jbe
inc
push
dec
loopne
int
inc
inc
popa
popf
sub
inc
push
jecxz
fwait
pop
sbb
jae
outsl
mov
jle
and
test
comiss
or
inc
sub
lea
in
ret
fnstsw
dec
dec
mov
and
ret
sbb
mov
adc
or
cwtl
cwtl
fisubl
addb
ljmp
mov
jno
mov
adc
nop
cmp
int
cmp
and
jmp
ljmp
sbb
lock
cmpsb
cmp
cltd
shll
and
adc
insb
in
push
push
pop
inc
fistpll
or
jecxz
cwtl
ret
cs
bound
icebp
jbe
mov
jg
jp
xchg
ror
fdivrs
and
fs
pop
cltd
xchg
inc
popa
pop
lahf
shl
and
mov
cmp
xor
mov
inc
push
cmp
jo
arpl
or
stc
aam
mov
pop
xchg
popa
sbb
jle
fsubl
jne
xor
jecxz
arpl
testl
xchg
bound
mov
sub
push
mov
shr
sbb
ret
pushf
pxor
cltd
cmp
jnp
cmp
pop
repz
ret
inc
xchg
push
fmull
or
repz
je
ret
test
sbb
popf
xor
adc
mov
jb
test
mov
fdivp
dec
aam
or
mov
add
dec
push
add
sub
inc
cmc
sbb
sbbl
iret
cli
out
int3
mov
pushf
cmp
cltd
sahf
xlat
mov
or
scas
mov
idivb
jp
aad
mov
cmp
ja
sbb
mov
xchg
loop
adc
or
sbb
xor
das
ljmp
mov
leave
shrl
bound
rol
pop
jecxz
or
add
push
push
or
jp
sarb
mov
sbb
jno
rcrl
mov
pop
push
sub
fwait
sbb
movsb
push
aad
xchg
dec
popa
mov
or
lcall
fiaddl
shll
fnstenv
push
outsl
sahf
adc
nop
nop
lods
ficoms
outsb
pop
cmp
in
push
movsl
or
sbb
fcmove
dec
inc
js
cmp
arpl
fs
push
aaa
icebp
lret
xchg
push
dec
jl
push
xorb
aad
mov
mov
jge
scas
dec
xchg
sarl
sbb
inc
cmp
andb
and
inc
repnz
mov
or
ja
ja
outsb
sub
cmc
lret
cmp
mov
in
mov
mov
or
gs
mov
sti
pop
lods
sahf
pop
or
pop
fwait
cmpsl
mov
mov
scas
ds
adc
cmp
dec
adc
mov
ss
push
xlat
inc
xchg
or
ret
mov
jnp
sub
inc
jo
ja
push
stc
fnstsw
test
ret
cwtl
iret
jb
hlt
insl
or
jge
sti
sbb
out
outsl
xchg
test
hlt
lock
mov
jns
sbb
jle
mov
out
adcb
rclb
pop
dec
xchg
xchg
outsl
mov
lahf
imul
push
sbb
push
push
outsb
mov
xchg
fcmovbe
push
add
xor
sub
sbb
cld
push
sti
test
insl
fistps
pop
std
and
dec
arpl
jle
inc
iret
cmpl
fsubs
mov
insb
mov
xchg
push
cmp
addr16
addl
sub
adc
mov
add
xlat
out
int
int
mov
inc
jp
and
mov
hlt
xor
aad
scas
sahf
mov
cltd
xor
icebp
movsb
pop
and
scas
xchg
sub
lds
loopne
xchg
test
outsb
test
ss
dec
sbb
jl
or
lea
adc
daa
test
popa
je
and
pop
cmp
outsb
bound
mov
repnz
test
icebp
xchg
jae
cli
je
cltd
iret
rcr
push
insl
or
mov
scas
mov
imul
push
inc
cld
ljmp
negb
int
cltd
xor
sub
subb
or
iret
aas
mov
push
popf
sbb
loop
je
jnp
movb
and
mov
and
gs
ds
int3
mov
pop
lahf
mov
or
movsl
jg
dec
xchg
fwait
int
fistps
sub
jb
roll
xor
xor
push
and
movsl
out
dec
insl
add
outsl
outsl
rorb
test
sbb
das
lods
cmp
les
or
and
sbb
test
mov
mov
repz
std
aas
adc
xor
adc
ss
mov
push
and
jle
std
imul
mov
mov
outsl
push
pop
mov
adc
pop
frstor
adc
push
and
loopne
in
nop
mov
xor
jecxz
and
enter
pop
in
inc
cmpsb
leave
pop
int
lods
lods
icebp
mov
int
dec
shrl
cmp
mov
jne
jno
lret
insb
sub
xor
add
jne
cmp
sahf
fistps
fyl2x
addl
out
ss
xor
scas
pop
out
jnp
pusha
push
xor
mov
ret
fiaddl
add
aam
lds
inc
dec
and
push
pop
pop
nop
sub
pushfw
xorl
add
movsb
test
adc
push
sbb
fsubrp
stos
in
bndldx
pusha
and
movsb
lds
hlt
fistpll
push
jnp
fs
lret
cmp
fisubs
inc
addr16
test
ret
call
sbb
imul
std
adc
das
sbb
fs
mov
les
lahf
dec
movsl
in
add
aad
jle
mov
adc
lret
dec
mov
add
gs
and
and
mov
sahf
dec
inc
aad
xchg
mov
shlb
xlat
sbb
loope
jl
push
cmp
fwait
jne
popa
mov
mov
lods
inc
cwtl
popa
pop
popf
mov
adc
lock
mov
add
imul
adc
push
cmp
add
cmp
rorl
icebp
stos
rorl
push
add
mov
pop
xor
lret
repz
mov
scas
pop
push
inc
aaa
cmpsl
sbb
mov
adc
les
cli
mov
dec
dec
and
imul
inc
dec
addr16
push
repnz
pop
cmpsl
in
xor
sbb
dec
mov
push
inc
das
push
cmp
mov
mov
and
sbb
movq
pop
and
jl
dec
cmp
jns
out
add
das
fimuls
in
jae
xchg
dec
push
decl
mov
inc
stos
push
push
movsl
movl
lock
adc
into
add
ljmp
out
icebp
jmp
push
dec
jl
daa
jecxz
loope
mov
xchg
jae
sti
aad
stc
or
aaa
mov
pop
addl
sub
out
cmp
out
jne
aaa
xor
inc
fwait
jle
pusha
mov
dec
daa
cmp
sbb
jecxz
xor
mov
inc
inc
popa
mov
pop
xchg
mov
mov
ja
cltd
xor
dec
ret
jmp
sbbl
jle
popa
dec
jecxz
inc
scas
shlb
idivb
adc
imul
shlb
mov
arpl
in
push
aad
aas
inc
call
testl
xchg
mov
cmp
inc
je
jecxz
jns
inc
cmp
addr16
jge
lret
arpl
cld
inc
shll
es
into
repz
pop
cmp
hlt
rorl
xchg
sbb
lret
stos
je
repz
add
jg,pn
fimuls
push
shlb
push
out
mov
pop
enter
dec
out
lods
repz
mov
sbb
aas
ja
sbb
add
xadd
cwtl
xchg
mov
stos
mov
mov
fnstcw
std
loop
loop
and
sub
mov
xchg
mov
push
pop
xchg
ljmp
push
sbb
dec
pushf
aas
mov
mov
xchg
ret
push
mov
sbb
test
shll
inc
mov
into
scas
das
dec
adc
sbb
sbb
sarb
les
lock
cmp
lcall
pop
out
sub
jbe
loope
pop
push
es
push
stos
push
mov
cs
mov
data16
pop
mov
pop
pop
lret
lahf
inc
push
add
xchg
xor
mov
fdivl
call
fwait
push
notb
jl
pop
out
mov
mov
mov
nop
cmpsl
adc
lds
push
adc
jge
add
dec
xor
gs
pop
stos
popf
xchg
pop
mov
lock
inc
sub
jnp
xchg
out
cmp
pop
mov
sub
jge
xchg
stc
mov
daa
fdivrs
enter
das
jecxz
mov
adc
mov
cmp
das
cmc
fsubs
sbb
outsl
push
and
xor
xor
nop
mov
sub
adc
ljmp
mov
mov
stc
sub
jo
or
out
or
arpl
aas
movsb
jp
adc
push
dec
std
enter
pop
mov
imul
fisubrl
outsb
mov
jns
adc
xchg
adc
ds
and
adc
imul
jg
mov
xor
gs
jecxz
xchg
lahf
mov
xor
xchg
and
pop
test
mov
fdivs
popa
rol
and
lea
push
fsubrs
xor
inc
fwait
je
in
popf
mov
mov
inc
ljmp
addr16
stos
mov
mov
cmpsb
and
push
xchg
lret
mov
pop
cmp
mov
addr16
sub
mov
or
and
lret
and
pop
pop
or
rcrl
push
dec
sbb
xchg
sbb
pop
push
sahf
in
mov
fbld
stc
leave
lcall
ljmp
xor
pop
ss
mov
adc
ret
cmp
fisubl
cld
mov
mov
lock
aas
lods
popf
lret
add
mov
sub
inc
stc
mov
sbb
and
adc
and
mov
pusha
adc
and
das
mov
cmpsl
inc
jae
push
or
pop
hlt
mov
shll
sti
loop
popa
mov
and
out
jo
inc
repnz
iret
inc
mov
mov
push
and
hlt
je
xor
or
sub
or
inc
xchg
sbb
nop
pop
ret
aaa
loop
lock
push
aaa
movsl
jecxz
inc
mov
sbb
or
aad
rcll
mov
sub
ret
fsubrl
aas
jmp
mov
cltd
xchg
adc
sbb
mov
mov
xchg
in
repz
enter
mov
scas
sti
repz
sbb
push
jo
dec
mov
xchg
mov
pop
mov
hlt
mov
pop
lds
mov
aas
adc
sbb
pop
loope
dec
nop
push
mov
in
or
test
and
imul
enter
cmp
sbb
loopne
pop
sub
xorl
push
rorb
lahf
cmc
call
inc
outsl
mov
xchg
test
jne
mov
fadds
mov
cli
push
and
bound
dec
push
dec
cmp
roll
rorb
stos
lods
adc
cmp
jecxz
add
sti
jecxz
in
popa
jae
adc
aas
dec
pushf
out
mov
dec
dec
push
xor
cltd
addb
add
out
shll
fisttpll
pop
jp
aas
divl
xor
mov
jmp
repz
adc
mov
fcomps
sbb
aad
mov
inc
pop
pop
lret
aaa
sbb
sbb
jge
int
and
shlb
and
mov
bound
cmp
jg
fcmove
mov
scas
add
inc
cli
jle
int
xchg
pop
push
add
mov
jmp
lods
ljmp
lcall
and
iret
adc
jp
mov
adc
dec
sbb
mov
gs
mov
sub
mov
into
repz
pop
adc
lahf
loopne
and
xlat
ret
sbb
aaa
loop
sahf
lret
gs
ja
addr16
movsl
mov
ljmp
ret
pop
in
mov
pop
and
add
add
pushf
sub
sub
addr16
std
xchg
stos
fstpt
sti
push
je
dec
xchg
mov
fcmovu
icebp
iret
jle
sbb
add
mov
cmpsl
push
or
inc
mov
add
mov
and
pusha
mov
pop
mov
cltd
dec
popa
loope
repnz
clc
inc
in
cwtl
add
test
push
inc
and
mov
add
popa
pop
sbb
imul
adc
sbbl
inc
and
into
lret
push
daa
arpl
adc
lds
scas
test
pusha
jbe
jb
or
stos
js
cs
lret
sub
repz
inc
or
pop
out
add
cltd
in
in
mov
outsl
ret
popf
out
insb
sbb
xchg
pusha
mov
mov
leave
fdivp
cmp
xchg
sbb
cltd
mov
sbb
in
pop
cld
push
rcl
std
and
jb
mov
loopne
idivl
cld
stos
jbe
mov
lea
xchg
add
mov
lds
mov
sahf
out
popa
pop
fsubp
leave
xlat
add
pop
dec
xchg
mov
and
aaa
add
decb
out
cmpsl
rcl
mov
aam
in
adc
ljmp
leave
das
cmp
movsl
mov
or
test
cmp
mov
mov
cmp
sub
nop
cmpsb
popa
rcll
loopne
xchg
testl
jle
cs
leave
xor
cld
movsl
inc
test
and
subl
mov
into
aaa
add
sbb
cmp
or
mov
out
test
dec
cmpsl
adc
insb
jmp
fldenv
mov
ja
xor
in
aas
push
shlb
cwtl
pop
add
dec
mov
negb
mov
xchg
out
sbb
dec
pop
aad
cwtl
lret
fs
int3
subb
sub
aad
imul
test
push
mov
ljmp
movsb
xor
sbb
es
push
pop
arpl
pop
cwtl
out
push
setp
sbb
jb
pop
push
add
ja
ret
jno
adc
andl
push
xor
dec
mov
repz
push
adc
jnp
inc
mov
xchg
loop
nop
rclb
sbb
loope
lds
test
sbb
mov
push
mov
frstor
and
jmp
and
pop
jo
stc
ss
arpl
imulb
pop
mov
outsl
and
pop
jp
jno
add
je
sub
mov
xchg
dec
sub
outsb
push
arpl
xor
sbb
sbb
inc
push
dec
int3
and
push
xchg
and
mov
rorb
dec
mov
call
or
pop
mov
push
pusha
jmp
pop
adc
stos
push
push
mov
out
xor
jg
dec
fwait
and
add
hlt
jecxz
repz
or
lea
or
cmp
pop
cmc
push
repz
cs
fwait
movl
cs
ja
mov
scas
imul
jp
aaa
mov
aaa
xchg
lock
adc
mov
jmp
incl
int
lds
repnz
cwtl
enter
loope
mov
loop
adc
and
jl
adc
out
enter
sub
sbb
inc
jns
mov
lods
notb
xor
dec
push
cmpsb
mov
or
push
adc
or
xchg
stos
xchg
mov
ret
mov
jg
sbb
ds
scas
out
jbe
mov
inc
mov
mov
push
test
sbb
loope
addb
mov
mov
dec
jl
mov
mov
es
fwait
pusha
mov
iret
cmp
cmpsb
and
mov
mov
or
movb
lret
pop
mov
imul
fstl
mov
lods
jb
push
mov
test
popf
stos
outsl
or
fcomp
loopne
fs
pop
int3
in
out
icebp
xor
cmp
fwait
adc
leave
insb
out
scas
sub
outsb
aaa
jae
scas
int3
jp
bound
adc
psadbw
leave
fcmovnbe
aad
cmc
add
mov
xchg
ja
ja
out
or
inc
aad
jge
xchg
insl
xchg
pusha
adc
and
subl
test
out
dec
mov
xor
pop
pop
aaa
mov
xchg
jge
test
shrb
mov
jle
in
enter
push
and
push
jo
sarb
lret
imul
dec
xchg
cltd
inc
jle
or
subl
jge
bnd
jge
jne
fs
adc
int
sbb
in
or
shr
shlb
push
test
hlt
out
sbb
in
mov
xchg
aad
dec
out
mov
sbb
in
sti
pop
cmp
aaa
loope
cmp
mov
leave
shll
idivb
fsub
sub
adc
mov
lcall
lods
roll
xor
ljmp
jnp
fs
dec
and
in
xchg
dec
outsl
push
int3
cmpsb
cwtl
mov
bnd
data16
mov
out
mov
mov
orb
ds
push
inc
sub
xchg
add
clc
push
ret
sbb
lods
inc
stc
adc
scas
out
mov
xor
add
fisubrl
push
pop
cmc
push
es
jnp
pop
jp
insl
int3
dec
fisttpl
xchg
or
push
cwtl
pop
flds
ss
in
inc
cld
mov
loopne
pop
negl
shll
cmp
cmpsl
daa
xor
jb
int3
out
mov
xchg
fcomps
faddl
je
pop
mov
jp
cmpsl
int
jne
stc
or
stos
frndint
lret
shlb
jp
lods
test
jp
nop
push
mov
sti
in
js
pusha
js
lahf
cli
cmp
mov
rcrb
xchg
mov
jae
mov
jno
mov
jne
ret
add
add
stos
out
test
mov
dec
hlt
lock
dec
mov
pop
lea
jbe
ret
xchg
pop
xchg
inc
xchg
add
mov
mov
xor
jb
add
scas
std
jae
mov
aad
mov
sbb
repnz
ljmp
mov
ret
hlt
cmpsb
ljmp
cmpsb
cmp
in
mov
dec
sbb
int3
fildll
inc
xor
addl
xlat
insb
icebp
mov
repnz
inc
jns
inc
lods
sub
xchg
sub
mov
push
lcall
aaa
sub
add
jp
lods
icebp
cmp
fcompl
dec
mov
sub
in
imull
hlt
cmp
xor
pushl
addb
dec
dec
mov
stos
push
mov
imul
fnstenv
cltd
adc
imul
ret
push
sahf
test
std
pop
push
fisubrl
bound
add
dec
cmc
nop
mov
cmp
dec
mov
add
dec
cwtl
inc
cld
movl
inc
aam
sub
mov
loopne
jo
ret
sbb
mov
mov
sub
pushl
outsb
cmp
dec
jl
xchg
mov
icebp
addr16
imulb
cld
sub
pop
cltd
pop
dec
xchg
stos
cwtl
inc
xchg
xor
daa
fwait
and
jns
repz
dec
cld
pop
pop
cld
inc
scas
hlt
jge
dec
addr16
in
fidivrl
push
rcpps
mov
or
mov
fisttpll
lds
fcoms
mov
pop
mov
and
ljmp
dec
xor
aam
in
jbe
push
and
mov
lods
push
cmp
inc
dec
les
lods
push
leave
lock
mov
push
icebp
and
xchg
in
lods
xchg
negl
cmpsb
cmp
mov
ljmp
pusha
dec
les
rorb
dec
ret
pop
fcmovnu
dec
cwtl
xchg
inc
fsubrs
repnz
les
cs
test
outsb
jo
sub
mov
pop
mov
fwait
fs
inc
xchg
int
fdiv
inc
sahf
jle
inc
dec
dec
push
mov
sbb
popf
mov
push
out
add
pop
jecxz
xchg
push
popa
pop
fcmovnu
add
sub
jge
sub
test
adc
jo,pn
push
std
ja
jle
xor
or
aad
mov
lret
jne
shlb
adc
mov
movsl
sbb
xchg
loop
mov
les
mov
push
fs
lods
add
ret
into
pop
sbb
inc
cmp
adc
inc
pop
aaa
ljmp
fdivrs
and
or
jle
xchg
dec
xchg
mov
sbbb
or
into
inc
rorb
jl
call
aam
sarb
outsl
push
xchg
and
cmp
daa
in
pop
dec
pop
adc
shr
inc
aad
lea
stos
repnz
aad
push
sub
mov
inc
les
and
cs
jae
push
mov
push
mov
xchg
fdiv
lods
xchg
fnsave
add
dec
icebp
jnp
adc
out
add
pop
jmp
jns
cli
pop
rcl
mov
divb
add
loope
inc
ret
push
mov
fisubl
movsl
jns
movsb
in
push
shl
xor
imul
cmp
add
subb
jbe
in
mov
je
adc
jge
push
dec
sub
or
xchg
scas
outsl
pop
pop
inc
add
mov
cltd
cs
sbb
adc
pop
dec
pop
aad
jp
mov
mov
inc
dec
mov
test
mov
cwtl
mov
push
jl
adc
cwtl
adc
std
inc
imul
clc
mov
cwtl
push
add
cmp
in
pop
aam
test
movl
add
mov
stos
fidivl
fstl
cli
inc
int3
inc
jo
stc
xchg
mov
jp
stos
push
lret
cmpl
dec
xchg
jae
ljmp
lret
out
inc
pop
dec
lret
jecxz
fsubrl
jle
mov
cmp
mov
adc
pop
int3
nop
lret
popa
out
inc
loopne
xor
xor
std
test
lock
xor
int
cmp
lds
or
xlat
rcrb
fistl
pop
dec
add
mov
cs
lock
movsl
aas
xchg
push
and
mov
scas
inc
das
mov
in
jl
push
adc
cmp
mov
popl
cmpsl
fwait
push
int3
cmp
push
imul
or
jnp
test
fnsave
mov
mov
xchg
inc
cmp
add
sub
sub
mov
cs
adc
cli
cltd
push
jmp
push
mov
dec
out
push
ret
pushf
xor
push
add
adc
imul
popa
pop
inc
xor
movsb
shlb
pusha
push
jo
adc
cmp
xor
cltd
mov
and
sbb
sti
jmp
iret
frstor
mov
ja
fwait
addb
outsl
jne
fsts
movl
pop
cli
rcrb
das
stos
iret
incl
dec
mov
jno
leave
inc
sbb
lock
dec
scas
mov
popf
ds
cli
jb
inc
mov
loope
push
mov
lds
stos
mov
int3
lds
fiaddl
test
pop
pop
push
push
adc
push
insl
inc
test
dec
ds
leave
pop
mov
outsl
sub
jo
mov
pusha
in
push
jno
mov
inc
shll
xchg
test
jbe
mov
and
mov
and
rcll
push
mov
sub
sub
sbb
or
iret
push
jno
pop
bound
ficoml
pop
dec
and
in
dec
jno
loop
pushf
aaa
movsl
dec
test
imul
jg
or
push
pop
ja
nop
mov
cmc
pop
mov
sahf
add
jp
cmpsl
add
mov
mov
cmp
cmp
and
or
sbb
sub
mov
mov
test
xchg
xchg
xchg
cmp
loopne
mov
push
xchg
mov
xor
pop
xor
pop
lock
ljmp
sbb
adc
fsubl
pop
xor
popf
in
push
ds
js
cmpsl
pop
mov
mov
aas
orb
aad
fmul
dec
adc
ja
mov
jp
pop
or
cmp
sbb
jns
push
mov
je
jecxz
filds
aas
mov
pop
push
cwtl
imul
mov
repz
fisttpll
mov
or
test
fsub
mov
ficomps
xor
in
pop
popf
pusha
scas
cmp
leave
xorb
add
mov
cmpb
movsl
data16
pushl
xchg
es
fdivs
adc
mov
xor
mov
mov
push
jle
mov
mov
lock
dec
push
addl
fs
push
popf
rolb
lds
push
inc
out
lret
push
mov
sahf
adc
sub
imul
aaa
sbb
ret
sarl
xchg
xchg
cs
dec
imul
rcr
xchg
add
push
fbstp
rcrl
pop
push
arpl
mov
pop
daa
mov
inc
add
fwait
in
int
and
sub
imul
dec
adc
or
mov
jl
lods
movsb
repz
or
lcall
mov
fs
adc
insl
sahf
add
in
out
cmpsl
pushf
imul
sub
and
stc
mov
dec
lret
pop
or
scas
dec
ret
xor
popf
add
scas
fistps
add
adc
jle
push
mov
inc
add
mov
adc
push
dec
ds
cs
cmc
mov
daa
shlb
sbb
dec
popf
xor
lahf
repnz
hlt
mov
push
mov
mov
mov
test
dec
and
jbe
out
and
xchg
inc
ja
sub
ret
pop
dec
fimull
fwait
adc
loopne
lcall
add
sbb
jno
test
lret
fldcw
pop
push
push
fwait
or
jg
push
je
loopne
cmpsb
iret
dec
into
fildl
and
in
icebp
inc
inc
stc
imul
aas
shrl
dec
call
out
pop
jns
push
or
mov
dec
mov
ljmp
jo
pop
insb
jle
popa
mov
push
rorl
mul
loopne
adc
fistpll
dec
rorl
mov
call
pop
mov
and
push
movsb
or
cli
dec
call
jo
lahf
dec
cld
ljmp
fmuls
ja
cltd
popf
icebp
nop
ret
insl
roll
xor
and
sahf
jne
or
jmp
cwtl
neg
out
dec
jmp
rcl
loop
cmp
lahf
inc
orb
leave
push
mov
jb
in
ljmp
lock
or
rcr
sub
in
fcoml
scas
jb
insb
sti
mov
xchg
das
lock
mov
jb
push
push
sti
jl
lods
test
nop
adc
daa
pop
mov
imul
je
pop
aad
xor
cs
loop
cs
fisttpll
in
push
imul
arpl
mov
mov
in
sub
adc
and
mov
dec
jecxz
xchg
jbe
call
loopne
rcrl
adc
imul
sbb
incl
dec
addr16
or
in
or
jl
test
aam
mov
xchg
jae
daa
les
enter
cmp
mov
dec
dec
lret
jae
push
push
push
popf
pop
pop
jo
mov
test
add
xchg
cltd
pop
jl
mov
add
fsubl
dec
sbb
push
imul
sub
es
insb
adc
xchg
pop
xchg
push
fistpll
adc
and
add
fnstcw
aaa
pop
das
jecxz
das
je
push
adc
inc
sbb
or
mov
xchg
aam
add
mov
stos
das
data16
inc
add
setbe
xor
xor
cli
mov
cmc
shll
sub
arpl
dec
shll
fwait
pop
and
xor
mov
scas
mov
stos
xchg
push
pop
jnp
mov
sub
sub
outsl
into
jb
push
nop
bound
mov
rcrb
or
pop
mov
divb
lcall
fcmovu
jp
frstor
movsl
adc
xchg
movsl
pusha
scas
jg
adc
adc
popf
or
xchg
rcrl
lods
mov
adc
mov
lret
fstpt
bound
cmp
adc
imul
insb
jae
xchg
pop
addb
dec
or
inc
or
ljmp
add
cs
lea
cwtl
fmulp
pop
jp
xchg
inc
jb
xor
insb
in
pop
jmp
push
xor
dec
xchg
je
std
sub
call
dec
sub
fildl
and
xchg
pop
addr16
arpl
daa
pop
xchg
inc
and
jne
lret
fnstcw
and
cmpb
xor
popf
iret
or
xchg
movsl
imul
or
rcr
or
js
je
jle
mov
out
sbb
imul
xorl
rolb
les
sti
push
pop
ret
pop
fstps
sbb
jo
push
nop
lret
sub
lock
mov
push
mov
xchg
push
popa
lret
fxch
out
or
es
and
mov
std
repnz
daa
push
inc
mov
push
xor
mov
fwait
push
sbb
fsubs
mov
insb
mov
inc
mov
mov
add
imul
pop
cvtps2pi
mov
xchg
push
cmpb
xor
sarb
lods
mov
add
push
int
mov
adc
leave
lret
adc
xor
dec
aad
sbb
mov
negl
ret
add
pop
int
add
mov
mov
leave
mov
jo
sub
clc
or
lret
add
add
js
mov
aad
sti
test
adc
sbb
insl
or
xchg
mov
dec
adc
loopne
pop
add
sub
jno
or
pushf
outsl
mov
jl
mov
sub
pop
or
mov
fwait
mov
rcrl
data16
inc
les
test
mov
push
daa
lret
ss
mov
dec
xchg
pop
in
dec
mov
jno
mov
das
or
in
aad
in
mov
jb
mov
sbb
mov
andl
ja
ss
ljmp
mov
ja
sti
leave
xor
in
fcmove
push
or
inc
stos
pop
lock
insl
cmp
outsl
jb
lahf
notl
mov
jne
cwtl
sub
xchg
addr16
lcall
cmp
fildll
pop
lods
pop
jl
notl
leave
mov
lcall
push
cmp
inc
cmp
cmp
lock
lcall
out
pop
daa
push
js
cmp
ds
daa
cmp
imull
nop
cmp
mov
insb
fcomi
cmp
jns
inc
scas
fistl
add
xor
xor
shll
outsl
incl
out
pop
stos
ret
inc
outsl
test
mov
sti
pushf
push
xchg
js
repnz
loop
mov
push
pop
dec
loopne
leave
push
repnz
arpl
push
popf
cmp
jmp
shlb
arpl
mov
daa
mov
mov
cmp
insl
adc
cld
pop
js
aam
into
cmc
and
orb
das
push
jne
imul
outsl
add
cmp
xchg
inc
bound
pop
or
sub
addr16
imul
and
jmp
sub
div
mov
stos
cld
stos
rolb
mov
or
sub
enter
dec
dec
jns
pop
sbb
movq
in
shrl
jns
add
dec
jns
push
sbb
dec
or
xchg
xchg
push
lahf
adc
cmpsl
js
mov
cmp
cs
shll
inc
cmp
inc
sahf
cli
and
xchg
lods
jns
pop
mov
aad
out
cmpb
inc
lock
push
xchg
add
pop
sbb
stc
fcmovu
adc
stos
pop
xor
push
sbb
or
movsl
lods
push
pop
push
mov
jnp
cmp
shlb
add
or
push
scas
stos
flds
cmp
mov
clc
das
mov
repnz
pop
icebp
push
popa
mov
jnp
push
xchg
pop
mov
pop
inc
sub
sub
or
dec
stos
xchg
lret
stos
stc
out
data16
ds
lea
iret
sub
scas
mov
jne
popa
mov
mov
mov
lea
cmpsl
in
dec
call
adc
sub
into
dec
add
mov
push
movsb
repz
sbb
xlat
in
sbb
in
jp
adc
incl
mov
shrb
dec
push
inc
sbb
in
cwtl
inc
mov
or
shl
clc
and
arpl
adc
jle
ret
daa
aaa
xor
pop
mov
cmp
xchg
push
popa
mov
subb
orl
lret
daa
cmp
push
aad
mov
jb
pop
sub
ljmp
xor
icebp
pop
jp
iret
out
jge
mov
cmovb
std
mov
clc
jl
inc
mov
jmp
psllw
add
dec
and
hlt
lds
pop
inc
ja
xor
mov
lea
mov
push
cmp
lds
aam
push
sub
cmpsb
mov
lock
adc
mov
push
sbb
lds
jns
cmp
inc
jae
fdivr
shrl
dec
fcomp
jae
cmp
jbe
ja
add
mov
xor
sahf
adc
mov
jg
mov
lcall
bound
lods
loop
jbe
sbb
lds
popf
xchg
cmp
mov
repnz
mov
mov
or
push
sbb
loopne
testl
push
mov
add
pop
fndisi(8087
ss
popa
roll
lret
push
insl
out
jo
cmpsl
mov
inc
aam
jmp
cmp
push
fdivl
inc
sub
pushf
int
popf
cs
xchg
fldenv
pop
insb
lock
stos
xchg
jl
rclb
out
insb
jne
stos
sub
jns
pop
andb
xchg
fwait
test
mov
xchg
and
enter
and
and
xchg
mov
pop
and
cltd
pop
jg
jg
adc
in
sbb
lcall
inc
lods
inc
outsl
inc
pop
xor
cmp
xchg
pop
jmp
mov
mov
sbb
les
arpl
add
inc
test
add
sbb
test
arpl
stos
and
ja
sbb
arpl
movsb
sub
jl
fldenv
pop
ja
pop
xor
xlat
cmp
in
mov
aaa
cmpsb
add
sbb
add
jnp
jecxz
mov
loopne
mov
mov
pop
jp
cmc
mov
lret
addl
pusha
mov
fs
movsb
and
incl
mov
test
out
int3
inc
or
loopne
inc
xor
arpl
into
jns
pop
mulb
add
retw
jns
std
mov
leave
fwait
adc
dec
stos
pushf
stc
jbe
mov
inc
int3
fildl
jecxz,pn
les
ds
lods
sub
shlb
cmpsl
push
cwtl
sar
loopne
adc
mov
adc
fucomip
or
pop
adc
test
xchg
xor
outsb
add
jno
jnp
clc
sub
dec
jge
add
jg
sub
fimuls
js
nop
mov
pop
jns
fdivrs
testb
std
add
sub
push
in
mov
std
movsl
mov
sub
outsb
adc
shlb
out
sbb
mov
ljmp
hlt
jnp
xchg
dec
mov
fwait
add
fwait
add
ret
lock
fwait
cltd
nop
arpl
mov
mov
sub
lea
mov
mov
ret
jbe
mov
leave
in
mov
scas
fnstenv
mov
push
cltd
sahf
mov
lea
dec
mov
sub
push
div
xor
je
inc
loop
adc
lds
add
je
dec
popf
xorb
vphadddq
cld
jp
shr
add
push
lods
rclb
fcmovnbe
xor
lret
out
adcb
cmp
mov
add
ss
dec
sarl
into
sub
mov
mov
inc
int3
dec
mov
lret
stc
test
inc
xchg
pop
cmp
mov
into
mov
stc
ja
das
inc
xor
out
mov
pusha
test
aad
inc
stos
cli
mov
out
sbbl
std
dec
ret
xchg
inc
jmp
and
pop
cmp
ret
data16
sti
cmpsb
add
mov
or
int
test
mov
mov
imul
sub
and
rcll
daa
popf
ja
adc
sti
mov
shrl
adc
pop
pop
push
sub
mul
ja
lds
or
dec
pextrw
pop
out
cmp
stc
fs
mov
or
cwtl
cmpl
xor
sbb
push
js
mov
jae
mov
sub
jecxz
xor
aad
and
scas
mov
push
inc
js
xchg
int
push
loope
leave
adcl
add
adc
ret
mov
cwtl
jno
jbe
push
test
in
mov
das
inc
stos
xor
lea
or
enter
dec
sbb
jp
or
mov
je
xchg
mov
push
xor
push
sub
notl
mov
lock
inc
xor
adc
repz
sub
and
xchg
sub
dec
sbb
inc
cmp
sub
dec
das
push
iret
mov
push
movsb
hlt
cmp
xchg
xchg
inc
cmc
xor
push
dec
mov
adc
pop
jno
jnp
mov
jecxz
cwtl
aas
in
pop
stc
ds
dec
inc
sub
mov
pusha
gs
or
mov
mov
push
cs
sub
orb
divl
cmc
pmullw
xchg
pusha
fsubl
std
rolb
scas
pop
lahf
mov
xor
inc
xchg
sub
insb
mov
jb
pusha
pop
mov
das
push
mov
push
jnp
xchg
dec
scas
add
push
jb
ftst
imul
mov
sbb
add
cmp
rolb
cmpsb
bound
test
or
push
inc
and
or
sbb
adc
out
mov
enter
or
xchg
sti
rolb
out
aaa
sub
push
add
adc
jp
imul
sbb
dec
pop
pop
add
aas
and
add
mov
pop
jno
xorl
les
std
dec
lds
fsubrl
inc
ret
cmpsb
lret
push
fbld
xchg
cld
push
and
dec
jge
fisubrl
xor
xor
outsl
sbb
fmull
pop
mov
jne
lret
sub
fstpt
clc
js
gs
pop
addr16
dec
cmp
adc
in
jne
arpl
mov
out
pusha
dec
push
jle
ds
and
mov
popf
pop
push
cmp
movsb
dec
jb
push
cmpsl
test
inc
test
mov
cmp
jmp
movsb
cltd
aam
and
stos
sub
aad
mov
cmp
cmpl
out
ds
jo
insb
lahf
and
xor
jbe
adc
pop
imul
test
bound
adc
xor
insl
test
dec
addb
arpl
xchg
lods
repnz
xor
out
sub
call
fwait
jecxz
sahf
and
stc
sahf
xor
dec
mov
sbb
lods
lret
fwait
jle
sbb
mov
and
sbb
push
sub
repz
jg
std
or
in
test
jle
xchg
or
lods
adc
or
fiaddl
mov
mov
das
insb
xchg
in
cmp
push
scas
push
leave
push
pop
pop
inc
xchg
fs
shl
add
mov
push
faddl
sub
sub
int
xor
sub
jmp
lcall
and
push
arpl
bound
add
pop
sbbl
imul
lods
jbe
jg
sbb
out
mov
popf
or
fistpl
pop
push
add
aas
push
mov
imul
nop
lds
inc
lock
data16
push
cwtl
sbb
stos
xchg
enter
jno
fcompl
or
pop
mov
pop
outsb
cmp
lock
dec
mov
xor
sahf
xor
mov
push
lds
into
dec
mov
outsb
jb
mov
cli
lret
xor
pop
jno
push
test
xchg
add
dec
jg
mov
popa
inc
push
sbb
or
or
shrb
jae
xor
leave
scas
mov
cmc
imul
push
mov
aam
repz
xchg
lret
inc
insl
mov
mov
inc
sub
test
push
jo
mov
mov
lcall
push
cmp
lahf
sbb
sub
scas
mov
jecxz
ljmp
lds
push
ss
enter
test
xor
gs
in
cs
mov
inc
mov
fcoms
fdivs
outsl
inc
sti
gs
xor
inc
mov
cld
sub
lods
push
xor
lods
stos
push
jge
mov
sub
xchg
outsl
sarb
dec
sub
shrl
jmp
or
das
stos
mov
hlt
adc
sub
add
mov
inc
pop
adc
push
popa
insl
test
mov
xchg
lret
xchg
inc
xorl
mov
mov
jns
jo
sbb
inc
pop
jno
adcb
mov
jne
inc
das
into
frstor
jle
or
ret
or
mov
xchg
inc
xor
das
int3
inc
fcompl
out
and
xor
jbe
jae
mov
push
xchg
test
shrb
jb
stos
call
scas
fidivs
jmp
in
mov
int3
imul
add
out
pop
mov
sbb
aam
xchg
sbb
pop
jecxz
cld
rcrl
cmp
and
lea
jae
jp
mov
add
mov
lcall
inc
test
divb
add
inc
in
test
rorb
mov
or
mov
pop
jnp
and
out
out
jecxz
add
enter
or
jno
jecxz
in
in
ret
stc
out
push
repz
in
data16
scas
cmp
mov
mov
in
pop
and
and
lds
pusha
aam
int
inc
cmp
or
sbb
mov
pop
repz
pop
mov
xor
inc
xchg
and
sahf
jg
pop
lds
xchg
dec
scas
in
pop
xor
push
cld
push
pop
icebp
sarl
out
or
pop
jo
sar
and
fucomp
sbb
daa
nop
pop
cmc
je
cmp
cmp
push
push
in
xchg
movups
jge
loopne
xchg
mov
cltd
test
jne
pop
add
test
aas
arpl
in
sbb
imul
xchg
xor
imul
pcmpeqb
jge
push
jns
repnz
cmpsl
insl
mov
in
inc
xor
fwait
bswap
mov
aad
dec
cld
sub
dec
andb
dec
sub
dec
fmuls
cltd
imul
push
sbbl
push
rcrb
loope
rol
pushf
sbb
test
sti
lret
sahf
jno
sbb
mov
das
sbb
shlb
pop
and
out
mov
data16
xor
loope
mov
lahf
mov
inc
dec
sbb
push
sbb
or
jp
repnz
cmc
xor
jmp
xchg
dec
pop
pop
pop
cmpsl
xchg
mov
pop
lahf
xor
bound
out
jecxz
lods
and
inc
push
sbb
sar
cmp
aam
inc
adc
pop
cwtl
mov
in
sub
scas
rorb
jnp
ret
pop
inc
pusha
adc
out
inc
sbb
inc
shrl
enter
addl
sub
cmp
fsubl
mov
and
cmp
cmp
push
xlat
adc
pop
loopne
dec
xor
jecxz
fnstcw
notl
fildl
je
add
fstpt
daa
xchg
stc
lret
xor
jge
mov
xor
cmp
cli
add
popa
inc
jae
sub
push
daa
add
mov
jl
rep
add
int
mov
subl
pop
icebp
popf
xchg
cmp
sub
inc
aaa
fnsave
sahf
into
jmp
clc
addr16
idivb
paddsw
pop
cltd
jp
adc
mov
push
or
sbb
scas
xor
aam
add
cmpsb
sub
jb
push
and
inc
mov
jns
sbb
fmul
and
mov
push
jnp
rep
shlb
out
xchg
dec
push
and
stc
fwait
aaa
jbe
es
pop
adc
repnz
int
push
and
ret
sti
loopne
push
sub
out
lea
xor
mov
and
xlat
in
cmp
add
fisttpll
out
shl
adc
sbb
jns
call
mov
cld
push
dec
xchg
push
push
pop
inc
rolb
loopne
push
mov
icebp
dec
jmp
sbb
arpl
fmulp
and
xchg
popa
notl
and
sar
adc
xor
cwtl
cmovg
dec
push
ss
sub
inc
sub
or
bound
xchg
lds
jns
pop
push
pop
int3
pop
cmp
sahf
mov
fdivr
jne
shlb
jns
or
ret
ret
int
inc
arpl
call
icebp
add
and
jmp
test
xchg
repz
rol
cmp
and
sub
stos
test
fwait
xor
imul
packsswb
mov
cmp
inc
divl
pop
sbb
shll
mov
dec
ds
add
pop
dec
xor
imul
pop
add
dec
sbb
push
mov
cmpsb
dec
roll
and
mov
xchg
cmp
push
pop
aas
pusha
push
fs
mov
or
adc
adc
adc
dec
sub
ja
jne
add
cs
lods
xor
dec
jl
leave
xor
ret
mov
cmp
insl
or
movl
pop
fdivr
stos
repz
imul
into
dec
dec
aas
pop
xor
icebp
lods
push
ljmp
mov
xor
daa
dec
clc
cmp
cmc
mov
jo
mov
out
imul
dec
int3
or
dec
mov
test
dec
mov
fs
lcall
push
or
leave
popa
out
push
add
pop
inc
cmp
xor
dec
shrl
ds
pop
shl
lods
or
frstor
add
ljmp
cltd
inc
lret
pop
call
or
fcmove
adc
fs
mov
es
and
jl
mov
inc
lods
pop
int
outsl
xchg
sub
mov
mov
cmc
xchg
mov
ds
jmp
leave
mov
pop
cs
shlb
and
out
addr16
jmp
sub
icebp
jl
push
sub
sbb
mov
add
addl
xor
mov
mov
mov
or
mov
dec
jmp
cmpsb
push
mov
pusha
add
or
mov
mov
pop
hlt
push
mull
out
jl
dec
mov
out
stos
dec
rcll
cli
hlt
pop
xchg
pop
jge
in
fmul
hlt
adc
imul
notl
leave
in
xchg
call
mov
and
pop
inc
cmpsl
mov
test
test
push
lods
and
lods
pop
dec
pushf
pusha
add
pop
mov
push
stos
int
and
dec
lock
ret
fwait
aad
mov
or
push
inc
pop
jae
lret
xlat
cmc
add
sub
imul
or
xor
aaa
lret
push
cli
loop
ret
scas
adc
cmpsb
les
cli
jmp
out
test
std
add
ja
inc
leave
call
mov
cs
sub
fstl
outsl
inc
shrb
xchg
cs
cltd
jg
mov
cmp
pop
aaa
dec
push
ret
inc
hlt
xchg
sbb
rcrl
jae
mov
adc
mov
jnp
add
insl
loop
sbb
inc
dec
add
pop
test
out
and
mov
cli
xchg
scas
jnp
mov
mov
cs
mov
inc
rorl
call
and
dec
jo
mov
push
inc
stos
outsb
mov
je
inc
cld
inc
inc
push
mov
xchg
mov
mov
adc
out
xor
out
arpl
fdivrs
mov
aaa
inc
out
lds
insb
push
fwait
shrb
clc
mov
cmp
fwait
daa
test
cmp
cltd
rolb
loopne
lcall
mov
and
inc
hlt
inc
mov
mov
push
push
push
out
sbb
stc
xchg
pop
fnstsw
cmp
idivl
addb
push
shll
cld
divb
enter
into
mov
mov
dec
sahf
mov
ds
ret
push
stc
sti
sti
lret
dec
mov
push
push
jae
fisubl
pop
mov
fcmovnb
inc
test
xchg
outsb
shl
lock
icebp
xchg
cmp
imul
cmpsl
daa
pop
add
sbb
in
cmpb
sub
cs
add
popf
cli
xlat
es
xchg
adc
sub
and
and
and
aaa
inc
ja
mov
call
lods
movsl
pop
sbb
loope
xchg
push
lods
xchg
dec
jle
arpl
ja
dec
loopne
cmp
mov
push
mov
mov
xchg
adc
mov
gs
int
add
mov
shl
dec
fucomi
aad
sbb
mov
and
dec
aad
xor
dec
aaa
mov
hlt
inc
out
dec
xchg
test
mull
lcall
in
mov
jno
mov
cmp
sti
mov
cld
arpl
pop
mul
or
dec
push
mov
xchg
jg
and
jl
or
pop
aam
hlt
or
test
and
or
xorb
mov
call
xchg
mov
divl
push
lret
scas
pop
and
popf
fisubrs
aas
jmp
test
and
loop
cs
insl
jle
jb
xchg
and
jno
inc
int3
sti
sahf
sub
add
mov
mov
into
xlat
shl
xlat
je
out
add
test
insb
lods
jp
test
push
shlb
mov
clc
xchg
xor
push
mov
sbb
mov
cs
xchg
xchg
push
adc
xor
pop
xchg
enter
ret
and
addl
inc
inc
or
pop
mov
mov
cmp
inc
mov
sti
aaa
mov
cmpsl
fninit
mov
adc
in
sarl
insb
pop
sub
jne
aam
xchg
or
pop
adc
push
jecxz
adc
dec
xor
xor
xchg
dec
int
mov
stos
jae
pushl
test
jno
pop
xchg
add
pop
ds
dec
adc
shll
ja
jl
mov
pop
shrb
stos
sbb
adc
and
mov
sbb
test
jo
dec
mov
shll
int3
push
adc
xor
jge
mov
xchg
aam
sbb
fnstenv
neg
mov
inc
pusha
mov
mov
push
icebp
addb
push
mov
stos
cmp
jo
jp
int
or
sub
ret
push
jns
out
lcall
jbe
repz
lds
fisubl
outsl
pop
and
pop
mov
rclb
scas
sbb
mov
std
xor
sub
push
push
adc
fisubrl
stos
iret
adc
sub
cs
fdiv
sbb
cwtl
jae
pop
sub
sub
fstps
xor
test
shrl
stos
scas
lret
jl
dec
repnz
dec
test
mov
ss
mov
add
ds
hlt
push
sub
push
out
lea
fbstp
adc
incl
mov
and
popa
fnsave
jle
push
jl
push
push
aad
xchg
adc
bswap
xor
aad
lea
imul
in
cmp
aas
xchg
mov
nop
mov
repnz
ret
xchg
ret
dec
cmp
negl
pop
movsl
out
out
mov
or
pusha
cmpsl
mov
popa
lcall
fcomps
jne
hlt
hlt
pop
pop
dec
inc
sub
test
and
int3
out
or
movsb
stos
iret
stos
push
sbb
sbb
jge
shll
lods
xchg
push
push
insb
push
lock
jp
push
xor
insb
out
push
push
xor
leave
xorb
bound
pushf
loope
cmpsb
sbb
jge
fs
int
daa
or
xchg
mov
and
jmp
in
repnz
push
leave
js
jge
lret
mov
or
xor
sti
shrl
in
mov
mov
mov
movsb
sar
jo
sub
scas
rcrb
testb
flds
cs
inc
or
mov
fs
enter
and
and
lea
fwait
inc
adc
xor
incl
xor
hlt
out
inc
or
mov
mov
orb
pushf
pop
lds
pop
pop
xor
aam
ror
hlt
sub
sbb
addr16
push
call
lods
push
imulb
inc
lea
xchg
rorl
js
call
push
jnp
push
mov
out
clc
bound
test
xchg
lret
stos
scas
sbb
insl
jge
add
testl
jo
outsl
and
jp
insb
dec
add
mov
add
shl
rcrl
ror
push
dec
jmp
call
popa
je
es
loopne
mov
dec
push
jo
push
dec
xchg
pop
fld
movsl
dec
fidivl
test
adc
je
cwtl
aam
xchg
scas
pushf
mov
mov
adc
push
sbb
cmpsl
ljmp
dec
movsl
addr16
inc
and
mov
loop
shll
aaa
jb
adc
inc
and
aas
push
ret
in
xor
les
and
dec
pusha
int3
dec
mov
mov
pop
lods
dec
lock
mov
out
or
outsl
add
adc
das
ljmp
shr
adc
fstl
jg
jg
push
mov
stos
pop
xor
scas
jmp
pop
pop
stos
call
push
ret
shrl
sbb
sbb
js
xchg
clc
adc
into
outsb
and
dec
in
cld
icebp
lea
mov
pop
iret
cmp
adc
testl
mov
jnp
xchg
ss
or
stos
cs
inc
scas
xor
cmpsl
ljmp
imul
cmp
xchg
scas
mov
add
push
and
sbb
or
inc
cmpsl
scas
mov
dec
xchg
jnp
jae
stos
jns
lods
mov
lods
or
test
into
dec
outsb
int
inc
flds
mov
js
cwtl
clc
out
mov
or
adc
scas
test
mov
paddq
xchg
ss
jbe
push
push
ret
loop
jae
adc
outsl
repz
jne
cli
mov
mov
mov
insb
rcrl
inc
inc
fisttpl
fildl
adc
push
push
mov
sub
xchg
xor
sbb
clc
shl
push
mov
jae
ds
enter
jge
mov
gs
inc
cli
push
daa
sub
inc
aaa
dec
int
scas
push
cwtl
mov
pop
sbb
mov
adcb
scas
lods
mov
add
in
leave
push
es
hlt
arpl
push
push
jb
push
loop
pop
and
add
mov
or
xchg
movsl
fmul
pop
push
push
cmp
push
mov
adc
rolb
mov
add
clc
pop
xorl
lock
jns
push
push
movsl
push
shll
cwtl
in
or
mov
pop
pop
insb
dec
and
inc
cmp
stos
mov
sub
xor
pop
dec
ds
and
mov
pop
push
dec
mov
sbb
icebp
and
jbe
inc
mov
movl
stc
push
nop
add
je
in
out
and
jecxz
dec
adc
and
mov
icebp
fcomp
icebp
adc
mov
add
push
or
dec
in
pop
repz
mov
jne
dec
pop
mov
sbb
int
mov
or
add
dec
lcall
add
js
ljmp
scas
push
insl
push
loopne
mov
iret
cmp
daa
push
add
inc
scas
sbb
inc
movsb
cmp
add
out
mov
mov
loope
sub
cld
mov
bound
pop
icebp
out
orb
les
test
fimuls
dec
es
addb
pop
js
mov
addr16
repz
aam
fcmovu
cld
inc
xor
jo
pop
fsubl
popa
sahf
ret
in
sbbl
jnp
lret
jmp
outsl
in
xor
fisubs
push
xchg
lods
xchg
adc
add
inc
into
mov
mov
mov
je
jb
in
xchg
cwtl
sub
push
and
cltd
je
xlat
imul
ffree
mov
int
in
hlt
or
or
fbld
jg
inc
mov
in
mov
dec
cmp
ret
sub
mov
sbb
mov
pop
insl
jns
sahf
jecxz
frstpm(287
xchg
popa
mov
add
cld
insl
cmp
jl
aas
mov
pusha
mov
mov
lret
inc
ljmp
cmpsb
jo
fwait
or
dec
loop
pop
ss
aaa
lret
andb
pop
pop
pop
jle
push
addr16
xchg
lcall
push
cwtl
loope
or
xchg
popa
lcall
cmc
jl
fidivs
mov
xchg
test
mov
cmpsl
lea
popl
ret
pop
adc
int
insl
js
and
inc
xor
stos
and
ret
sbb
es
out
sahf
jecxz
inc
mov
lods
cmp
jne
int
or
adc
or
pop
push
outsl
lcall
inc
xor
add
inc
pop
or
pop
out
int3
in
out
jbe
mov
sbb
pusha
mov
push
adc
rolb
sbb
pop
or
aad
jecxz
pop
adc
xor
shll
mulb
mov
push
xlat
mov
and
ficomps
aam
or
push
pop
xor
bound
jb
pop
xor
mov
ret
movsl
jb
xor
mov
push
cmp
imul
add
lcall
loopne
jnp
lret
mov
mov
inc
mov
int
jns
pop
scas
stos
fstps
inc
jbe
push
clc
adc
orl
push
cwtl
lret
pop
sbb
scas
inc
or
dec
xlat
test
arpl
push
cld
popf
mov
push
mov
jbe
je
add
nop
jg
mov
pushf
daa
bound
xchg
pop
cmpsb
andb
out
xor
jo
cli
test
bound
xchg
mov
fisubs
mov
std
aas
fs
add
mov
out
shrb
inc
in
fidivs
addr16
sbb
aas
mov
mov
fcmovbe
js
fwait
xchg
fnstcw
cmpsl
and
mov
enter
mov
or
test
into
and
repz
movsb
cmp
mov
jmp
mov
mov
outsb
orl
mov
incl
repz
jno
add
or
sub
adc
xchg
inc
ret
or
pushf
icebp
mov
xchg
fs
fadds
sub
pop
daa
mov
dec
or
pop
mov
mov
ss
out
dec
jg
or
mov
sbb
push
jle
jb
ljmp
adc
xchg
iret
popa
int
dec
inc
adc
or
lods
shlb
jae
sbb
xor
enter
sub
push
jecxz
dec
xchg
movsb
and
nop
cmc
call
jmp
fcmovbe
int
sub
xchg
icebp
pop
or
pop
popa
dec
push
xor
shlb
inc
xchg
and
insl
jecxz
mov
or
mov
adcb
andb
daa
aaa
jle
test
fistpl
sbb
das
in
popa
jb
test
adc
inc
cmpsb
jb
cmpsl
das
xor
push
mov
push
cpuid
lret
mov
dec
imul
outsb
mov
outsl
int3
bound
aaa
pop
mov
adc
test
shl
insb
test
in
lret
imul
ljmp
jno
mov
sbb
xchg
out
inc
fs
lret
call
rclb
ja
outsl
mov
pop
xchg
in
pop
mov
ret
push
xor
stos
sub
and
imul
arpl
and
dec
mov
cmp
call
pop
mov
dec
xchg
or
enter
pop
jmp
inc
jns
out
cmovo
cmp
cmp
adc
push
rcr
int3
int3
mov
and
xor
cmpsl
in
jge
xchg
addb
gs
imul
jns
pop
ja
clc
enter
lds
push
sahf
sbb
push
or
vmread
xchg
mov
pop
adc
inc
in
add
xchg
push
fbstp
leave
cld
in
cs
ret
test
mov
mov
cmpsl
gs
lret
ja
jbe
scas
adc
mov
pop
cmp
paddw
pop
sub
sbb
adc
push
pop
test
sub
adc
jecxz
mov
sub
mov
sarl
in
jbe
cmpsl
repz
push
mov
scas
ds
adc
xorl
adc
clc
mov
js
jmp
jne
mov
xlat
cli
mov
xchg
out
dec
or
subb
sbb
inc
dec
dec
add
cld
xor
and
mov
jmp
dec
jbe
jg
cmp
test
or
mov
int
imul
mov
test
push
lret
pop
mov
adc
pop
stc
mov
xchg
add
in
pop
mov
aam
pop
mov
dec
sub
movsb
xchg
cwtl
cmpsl
push
stos
jb
ret
sub
pop
aad
push
push
mov
xchg
clc
jns
cmp
scas
into
pop
sar
insl
decb
shlb
imul
aas
clc
popf
cmpb
cwtl
mov
xlat
stos
xchg
push
fimull
in
enter
outsl
pop
insb
int
sub
ficoms
push
outsb
icebp
lret
dec
loopne
push
out
call
fldenv
pop
lret
inc
ss
in
dec
jo
out
pop
pop
jle
jecxz
xchg
int
lea
addr16
xchg
sbb
pop
insl
dec
fwait
es
imul
rclb
loopne
das
das
push
popa
cmp
xor
pushf
cltd
outsl
out
push
jecxz
shrb
mov
pop
sub
aaa
je
sub
jns
js
push
adc
jb
mov
pop
shl
std
sti
jge
xlat
sbb
push
cmp
jmp
push
insb
push
sahf
mov
decb
fsubrl
adc
int
xchg
mov
pop
mov
push
add
jae
fstpt
mov
mov
mov
inc
aam
pusha
xchg
pop
jg
mov
mov
pusha
or
nop
cmp
dec
push
mov
jae
add
adc
jae
aaa
mov
jbe
cltd
ds
xor
push
cmpl
cmp
adcb
dec
jp
dec
test
cmpl
inc
scas
adc
jnp
in
jns
pop
jle
add
repz
movsb
mov
or
cmpsb
nop
inc
sub
fs
pop
out
xchg
jp
mov
add
push
cmp
adc
pop
fsubl
add
movsb
mov
pop
pop
inc
les
add
lea
pop
call
and
call
test
xor
mov
xor
scas
push
lret
or
js
add
adc
mov
pop
mov
aas
mov
push
or
inc
repz
sahf
outsl
stos
cld
ljmp
cli
ret
push
cmpsb
mov
jg
fnsave
pusha
mov
mov
rcll
int3
call
fcmove
call
ret
mov
jmp
inc
jnp
stos
mov
sbb
mov
sbb
bswap
xchg
sarl
pop
mov
dec
daa
cmp
inc
jge
or
mov
scas
pop
fldl
pop
repz
add
iret
add
pop
cmp
js
jns
hlt
loope
loope
push
push
ret
cwtl
xchg
add
rorb
lcall
xchg
and
lods
push
fdivs
xor
adc
mov
pop
sbb
dec
pop
scas
pop
sti
je
jp
dec
sbb
inc
mov
je
push
popf
or
jbe
addr16
sti
fdivrs
cmp
jnp
in
data16
orb
lcall
push
aad
cmp
int
test
fisubs
jl
std
jae
stos
mov
fsts
lahf
ss
bnd
gs
adc
enter
enter
pop
or
scas
xchg
in
enter
jb
imul
sub
push
mov
push
jo
es
push
or
stc
push
pop
into
rorl
outsl
mov
dec
pushf
lods
sub
dec
sarl
or
pop
test
sub
jb
jne
add
notb
or
xchg
jbe
inc
int3
xchg
cwtl
loopne
add
imul
int3
outsl
gs
dec
dec
je,pt
adc
nop
mov
xlat
nop
mov
jo
pusha
je
shrb
jo
mov
in
cmpb
jp
or
sub
imul
mov
jne
popf
lret
or
jg
cwtl
dec
jmp
inc
mov
xchg
xchg
push
sbb
jmp
add
loop
sbb
out
movswl
fdivrl
std
shlb
imul
mov
pop
pusha
js
add
cmp
inc
es
sub
sbb
out
adc
fcom
ja
push
jmp
push
pop
ficoml
push
int
idivl
push
cmp
fcmovb
daa
sarb
lcall
push
in
cwtl
daa
jmp
sub
insb
and
int
sbb
jmp
lret
ficompl
inc
push
das
cmp
jmp
imul
rclb
movsl
daa
dec
lods
fnsave
cmp
mov
cmp
mov
mov
dec
pop
mov
test
jg
cli
jle
dec
xchg
cmpsl
cltd
ds
cmp
adc
idiv
sbb
sbb
std
adc
or
jo
ja
mov
insb
nop
scas
insl
shll
ret
rorl
fldt
add
std
std
movl
test
add
int
pushf
jne
and
fs
sbb
pop
lret
nop
dec
pop
test
rcrw
ret
imul
pop
xor
add
adcl
cmp
loop
int3
xor
jg
xor
jg
in
hlt
mov
xchg
stos
xchg
push
std
jns
mov
sbb
rorb
pop
sub
xor
and
dec
sbb
repz
jne
fwait
in
stos
lock
jne
push
xchg
imul
insw
jbe
ret
jns
xor
fistpll
test
js
cmp
cld
fs
bound
repnz
xchg
cld
je
inc
jmp
mov
daa
loope
insb
adc
or
dec
scas
out
xchg
xor
cmp
xor
dec
jo
in
movsb
in
pop
mov
xor
inc
push
push
clc
mov
mov
iret
test
sti
push
jnp
adc
push
jae
aas
mov
test
push
cmc
adc
lret
loope
fcmovu
xor
or
cmp
mov
outsl
enter
sbb
loopne
in
loopne
daa
fldl
cmp
test
stos
jnp
xlat
fnstenv
repz
repz
adc
and
pop
inc
and
cmp
xchg
push
leave
adc
and
and
push
fwait
sbb
icebp
gs
scas
les
mov
sbb
pop
fldcw
mov
cli
pop
shrb
xor
xchg
push
sub
stos
stos
movsb
in
cmp
lods
jae
test
test
mov
fisubrs
into
aam
cld
pop
inc
dec
mov
mov
js
in
mov
fs
mov
cmpsl
sarl
pop
call
into
mov
and
jnp
shrb
jle
loopne
enter
shl
test
call
sbb
imul
xor
inc
pop
xor
fisttps
in
sbb
fdivs
sub
out
mov
jns
and
and
shlb
pushf
int
xchg
sub
out
loope
cmc
jmp
punpckhdq
cltd
scas
inc
int
inc
mov
stos
sub
xchg
sbb
in
sbb
jo
repz
jmp
sti
dec
test
lea
aas
repnz
xor
stos
test
xor
out
or
dec
fs
inc
jne
adc
push
fcmovbe
dec
and
fistpll
cmp
aas
mov
push
std
in
ss
gs
ja
sbb
push
cmp
inc
int3
mov
xlat
movsl
push
cmp
adc
sub
cmc
pushf
pop
sub
pushw
fnstenv
sub
mov
dec
mov
or
mov
jne
aas
ret
fwait
inc
pusha
xchg
enter
mov
mov
pop
cwtl
mov
cmp
fdiv
push
data16
dec
es
sub
and
outsl
push
test
out
test
enter
movsb
sahf
dec
aaa
ds
fsubs
stos
xchg
push
mov
sub
dec
leave
jmp
push
lds
fiadds
mov
mov
xchg
aad
sub
lock
repz
or
mov
lods
mov
test
test
shlb
xchg
sbbl
xlat
mov
inc
or
ljmp
lods
fxch
and
out
arpl
das
ds
out
int3
mov
xchg
cmp
lret
shlb
dec
adc
xchg
pop
cltd
cmc
add
inc
xchg
shrb
fsubrl
cmp
inc
shlb
les
movsb
push
or
push
cmpsb
cmp
mov
repnz
sub
fistpl
cmp
push
dec
add
rorl
rcrb
or
xchg
lock
push
in
rorb
lcall
jle
sbb
jae
dec
jne,pt
dec
mov
push
jp
cmp
mov
or
dec
adc
inc
push
les
data16
fadd
cmpb
nop
movsl
mov
in
jb
loopne
sbb
lods
out
outsl
mov
lret
ficompl
dec
sbb
pop
insl
jnp
mov
mov
jns
push
repz
sbb
out
xor
mov
in
pop
insl
adc
add
or
sbb
or
cmp
dec
adc
je
jbe
cmp
sbb
mov
loopne
push
or
ret
add
js
and
xchg
push
pop
dec
or
jns
mov
pop
push
repz
into
leave
pusha
or
test
cmpsb
das
mov
cwtl
rcrb
test
inc
cmp
lods
push
mov
push
scas
test
test
es
imul
adc
dec
fcoms
dec
push
cld
aam
mov
lcall
sbb
pop
xchg
sub
sbb
jnp
cmpsl
cvtps2pd
pushf
push
push
jle
xchg
or
inc
xchg
adc
jne
addr16
hlt
and
mov
shrb
ja
xor
inc
aaa
push
pop
jg
stos
or
push
push
outsl
lret
add
out
int3
imulb
adc
push
mov
stos
shll
inc
nop
lret
sti
mov
add
arpl
sub
loopne
mov
mov
loope
insb
ja
pop
jb
mov
mov
rcrb
mov
rolb
andb
mov
add
xor
into
xchg
xchg
stos
dec
stos
movsb
arpl
push
adc
imul
fcoml
mov
lret
call
sbb
jg
out
xchg
cmp
xchg
jg
repz
imul
inc
mov
add
ljmp
fmulp
aad
outsb
xchg
xchg
test
fwait
std
jno
arpl
sub
loopne
out
and
in
or
mov
jb
inc
cs
testl
xor
pushf
jnp
mov
jnp
in
mov
ss
inc
js
popa
aas
aas
sub
push
iret
popaw
dec
loopne
outsl
dec
mov
cmpl
jecxz
or
sbb
jg
iret
or
pushf
arpl
aad
lods
loopne
fistpll
push
or
dec
and
test
push
mov
mov
pop
insl
testl
fs
outsl
mov
clc
mov
pop
aam
repnz
jae
push
cs
adc
arpl
ud1
popf
popf
loopne
repnz
test
jo
pop
lcall
fs
dec
xchg
lods
shll
sahf
call
adc
or
pop
mov
inc
scas
idivb
xor
lods
push
lret
es
push
jl
adc
cli
add
xchg
cld
jno
lret
sbb
testl
lret
sbb
xchg
xchg
mov
lock
ret
or
icebp
aaa
add
outsl
push
xor
inc
js
call
mov
jae
pop
gs
in
jle
loop
div
loope
sahf
lock
out
push
scas
ljmp
jp
test
sbb
pop
mov
xchg
insb
mov
fsubs
lret
lret
jmp
push
push
out
sub
insl
lcall
sahf
sti
ja
cltd
test
dec
mov
nop
mov
push
rorb
add
push
cs
loopne
lock
xchg
add
pop
jmp
xor
ret
aam
adc
mov
xchg
dec
inc
cmp
ret
xor
pop
jbe
ds
mov
pop
mov
ja
pop
stc
lods
imul
nop
adc
jb
and
add
lods
mov
inc
mov
mulb
inc
pusha
jle
jmp
mov
xchg
ret
or
mov
xchg
out
mov
pop
cmpsb
xchg
mov
xor
popf
int3
push
repz
cmp
push
inc
sub
xlat
mov
out
mov
add
stos
pushf
lcall
cmpsb
imul
xchg
adc
sub
inc
int3
imul
in
mov
mov
stos
mov
loop
jp
push
mov
cmc
inc
xchg
outsl
push
mulb
mov
adc
nop
sbb
les
dec
jmp
or
repz
adc
mov
push
mov
add
jl
xor
outsb
inc
push
icebp
add
mov
gs
xchg
dec
xor
dec
mov
sbbl
cld
and
pushl
ljmp
mov
lds
or
cli
je
fidivrs
cld
fsubrs
sbb
sar
imul
and
inc
sbb
sbb
xor
cmp
sbb
mov
or
mov
pop
pop
mov
das
xor
inc
mov
sub
push
adc
aam
inc
repz
popf
push
sbb
push
add
cmpsb
int3
pop
push
mov
push
push
xchg
frstor
pushf
cmp
fisttpll
mov
sbb
movsb
cmp
xor
jnp
adc
test
pushf
fstps
add
xor
mov
mov
mov
lcall
dec
mov
pop
insl
xchg
add
sub
in
jne
xor
arpl
aaa
mov
rorb
fbstp
es
mov
sub
rolb
or
and
cmp
cs
xor
mov
mov
dec
xor
in
push
inc
mov
xor
ljmp
cmpsb
mov
sti
adc
or
cli
push
lds
fsubs
xchg
js
outsb
fnstsw
cmp
dec
xchg
fistps
pop
jno
adc
pop
scas
mov
jne
pop
inc
jae
mov
sbb
ficomps
push
mov
shrb
in
xchg
jp
mov
xor
lods
dec
out
ss
in
sbb
shlb
push
sbb
jne
sbb
rcrb
xchg
ret
dec
cmp
add
stos
xorl
sbb
xchg
add
in
push
fstl
sti
in
flds
clc
in
int
stc
incl
adc
test
or
adc
out
mov
outsl
loop
cmp
mov
jb
in
out
dec
sbb
xchg
push
cmp
rcrw
sbb
mov
jns
jnp
lret
mov
into
out
into
andl
std
sub
xchg
outsl
mov
inc
ja
fistpl
jmp
xlat
push
mov
fwait
mov
push
ss
mov
push
dec
inc
mov
popa
shl
jns
fsubrs
sti
mov
call
push
xor
cs
mov
decl
and
dec
lahf
xlat
add
andl
aaa
push
and
leave
andb
adc
mov
mov
push
es
adc
fisubs
in
xor
mov
stc
loopne
inc
popf
add
and
repz
mov
ret
mov
add
ja
jmp
rclb
dec
dec
jmp
mov
xchg
push
add
sbb
jge
in
cmpsb
jecxz
aam
lock
xor
jecxz
test
aad
sub
movsb
in
pop
shll
stc
push
dec
outsb
adcb
mov
mov
push
mov
dec
push
popw
leave
fisttpl
aad
rcrb
jno
adc
xchg
cmc
outsb
push
inc
xchg
nop
stc
cmp
add
jge
sbb
or
xor
cmc
sub
add
fidivs
je
sub
and
adc
call
lods
and
nop
stos
test
fisttps
imul
mov
mov
imul
hlt
adc
pop
lock
jb
sub
mov
jl
int
cs
dec
movsl
inc
xlat
push
imul
push
stos
dec
cvttps2pi
push
test
or
xchg
gs
addr16
pop
mov
xlat
movl
xchg
cltd
sub
add
and
fsubrs
jge
push
test
or
or
push
cmp
or
adc
xor
inc
push
movl
xchg
dec
sti
loope
icebp
ret
mov
stos
shrl
cmp
loop
jbe
cmp
enter
xchg
stos
ja
pop
mov
mov
mov
sbb
sbb
adc
sub
shlb
sub
cld
sub
and
cmpsb
pop
mov
xchg
mov
cltd
lock
mov
mov
adc
nop
aad
jg
scas
dec
outsl
jo
inc
xchg
mov
sti
mov
pop
loop
xor
imul
out
mov
dec
mov
mov
lcall
ja
or
in
sbb
pushf
dec
js
insl
fstps
jmp
pusha
pop
lods
aam
out
mov
cmp
push
repnz
hlt
mov
call
ss
jl
jns
or
push
call
pusha
pusha
jmp
mov
pusha
leave
xor
or
add
push
xor
fs
aaa
sub
outsb
lcall
fcoms
inc
shlb
les
les
lret
ficompl
test
xchg
and
xchg
dec
popa
fwait
in
xor
push
jle
popa
call
mov
into
xor
or
popa
or
dec
loope
inc
fwait
cmp
pushf
jge
cmpsl
xchg
dec
insb
and
push
call
out
dec
call
add
dec
ja
fsubrl
lds
jae
jl
jp
xor
aad
mov
iret
jmp
pop
mov
outsl
pop
stos
or
loop
insl
mov
cmp
push
mov
roll
xchg
inc
mov
push
dec
pop
add
ret
inc
nopl
mov
loopne
push
pop
lods
mulb
push
push
outsl
lods
lret
in
sbb
ficoms
subl
fisubrl
loope
mov
les
test
std
sbb
mov
mov
inc
shlb
push
pop
pop
mov
ret
in
adc
add
gs
xlat
jp
cmp
push
cmp
das
dec
jmp
xor
mov
xchg
aam
mov
js
gs
jg
aam
pop
dec
inc
mov
jb
or
clc
lea
popf
dec
mov
in
add
fstps
outsb
ljmp
outsb
call
xor
adc
fcmovnb
movsl
loopne
aaa
add
outsl
into
out
adc
loop
notl
adc
jae
in
dec
jae
jns
sub
movsb
sbb
lret
out
sub
js
jl
jmp
add
ret
cwtl
inc
pop
dec
sar
xor
lds
sahf
cmp
out
mov
ret
rep
test
mov
xchg
pushf
inc
popf
mov
enter
popf
pop
int
repz
stos
dec
mov
cld
lods
mov
mov
jmp
add
xchg
push
jge
out
hlt
xor
icebp
sbb
out
dec
mov
push
adc
push
or
roll
pop
sti
sub
pop
jmp
sarl
popf
adc
cld
adc
push
cld
push
and
insl
rcr
outsb
sub
xchg
push
cmc
pop
push
pushf
inc
lahf
loope
orl
dec
hlt
mov
loop
dec
xor
push
roll
push
jmp
xchg
daa
or
adc
mov
and
dec
add
or
daa
mov
cs
imul
mov
stos
arpl
dec
push
mov
pop
enter
cld
mov
es
push
push
or
adc
and
ss
or
mov
and
jge
mov
and
scas
pop
ret
ret
sarb
es
jae
rcl
xchg
js
pop
push
shlb
mov
daa
mov
pop
or
lock
iret
xor
cmpsb
add
inc
xchg
pop
sub
inc
leave
xchg
pop
lret
fsubs
push
mov
jecxz
out
testl
mov
gs
stos
pop
xchg
popf
decb
out
mov
fimull
aad
mov
mov
repnz
and
lahf
add
jae,pt
and
jae
push
mov
add
mov
mov
cmpsb
push
lock
stos
or
mov
mov
loopne
out
mov
int3
inc
das
rorb
push
in
or
es
push
dec
mov
jb
sub
cs
clc
mov
aad
mov
xor
fucomi
fsubrl
dec
andl
popf
ss
test
add
shrl
fbld
push
mov
xlat
push
fnsetpm(287
jg
pop
xchg
lds
popa
add
outsl
cmpsl
push
cmp
cltd
ret
mov
xchg
test
pop
lahf
cmp
cmp
lock
dec
imul
xor
in
filds
nop
aam
es
fmul
fldenv
jmp
push
adc
sub
or
push
push
inc
test
js
sahf
bound
cmpsl
pop
jb
in
dec
inc
pop
or
mov
or
je
in
adc
sbb
xchg
or
ret
xor
push
dec
imul
mov
push
mov
or
or
mov
pop
mov
loop
cmc
out
add
add
push
sahf
insl
out
int3
xor
lret
jle
xchg
mov
and
fstpt
add
jge
stos
dec
lret
insl
sahf
into
adc
faddl
or
cld
mov
pop
out
mov
aas
jge
cmp
or
mov
xor
roll
aad
aaa
and
clc
add
cltd
jo
xor
mov
clc
dec
and
cmp
sub
call
test
leave
cmp
lahf
push
xchg
pusha
andb
mov
outsl
stc
cmp
mov
xor
xchg
sbb
test
shl
pop
mov
add
cld
popa
sbb
sbb
cmp
stos
into
dec
mov
push
jge
aas
mov
push
push
mov
adc
arpl
or
pushl
mov
es
popf
roll
cld
data16
dec
dec
mov
mov
or
pcmpeqb
inc
cld
mov
mov
mov
loope
sbbb
or
and
sbb
and
xor
mov
dec
push
jae
divb
sub
data16
sbb
or
sbb
add
outsb
imull
lock
loopne
push
sar
lds
inc
repz
sbb
sarl
xor
and
jno
xor
test
fiadds
dec
lods
fwait
iret
rcr
jge
xor
stos
adc
push
xchg
jg
mov
out
inc
jecxz
aam
xor
in
rcl
cmpsb
outsl
mov
pop
jb
inc
jo
lods
hlt
lret
inc
movsb
sub
std
mov
stos
cwtl
cltd
mov
je
push
inc
decb
jns
fsubl
divb
cmp
lea
mov
dec
fisttpl
daa
in
clc
or
pop
jae
xor
aaa
mov
into
pop
stc
sbb
push
in
push
sub
dec
in
cmp
or
sbb
inc
jmp
dec
mov
sub
and
dec
cmp
cs
dec
lods
icebp
jne
push
fistl
jmp
inc
dec
or
mov
pop
inc
inc
insl
daa
pcmpeqb
and
pop
les
pop
lahf
fstpt
sbb
pop
jo
fldl2t
sub
das
imul
dec
add
repnz
nop
stc
mov
jo
mov
scas
sahf
xchg
shl
sti
aaa
adc
sbb
movsl
cmp
out
rdtsc
fidivrs
arpl
out
add
mov
push
sbb
dec
push
inc
inc
insl
mov
pusha
push
sub
adc
dec
mov
in
loop
sti
cmp
jne
jp
pop
into
push
pop
mov
pop
push
pop
inc
nop
adc
cltd
ret
mov
lea
xchg
scas
add
mov
movsb
or
pop
xor
sbb
aaa
rolb
xchg
out
push
cmpsl
sub
mov
and
es
dec
rcr
les
jae
cmp
js
mov
jge
popl
loopne
cwtl
scas
or
mov
insb
addr16
stos
mov
test
stc
clc
lret
andl
inc
push
sbb
lock
incb
push
add
xchg
and
dec
jge
in
out
sbb
cltd
jae
sbb
jp
pop
insb
icebp
lahf
push
sbb
mov
mov
out
xchg
in
jno
movsb
adc
jne
jle
popf
push
mov
sbb
and
xchg
add
pop
hlt
dec
xchg
push
in
loope
adc
aas
mov
jle
mov
aaa
sub
mov
jmp
cmp
pop
inc
push
je
dec
xor
xor
jl
xchg
xlat
imul
lahf
xchg
sarl
fadds
aas
dec
push
divb
dec
rcr
cltd
mov
icebp
lds
into
rolb
ds
adc
movsb
inc
loopne
mov
add
loope
hlt
adc
lcall
mov
jne
sbb
enter
daa
cmpsb
adc
xor
xor
mov
addr16
cmpsl
pop
into
jno
ja
pop
lret
push
lods
dec
jne
ja
arpl
test
or
push
ret
outsb
insb
sbb
pop
call
aas
xor
sbb
int3
jmp
add
sbb
dec
mov
lods
xor
bound
scas
rcrb
dec
imul
js
jno
mov
pop
cld
or
cmp
cli
imul
dec
repz
dec
je
int
addr16
ja
test
iret
repnz
xchg
lods
lods
aaa
imul
sti
push
sbb
negb
xor
pop
mov
arpl
test
ror
jcxz
push
fdivl
mov
xchg
mov
jl
mov
push
aam
fwait
xchg
stos
pop
mov
xor
shrb
gs
enter
jg
fsts
stc
arpl
ljmp
fidivs
dec
in
and
cs
mov
mov
mov
jbe
add
mov
sbb
or
popl
push
adc
call
xchg
cmp
rcr
push
or
aad
pop
sbbb
pop
or
xchg
cmp
popf
adc
cmp
jbe
jns
lods
sub
in
xchg
fcomi
fdivrs
dec
cli
dec
push
or
cmp
faddl
mov
fwait
lret
je
daa
xchg
outsl
mov
in
push
adc
inc
pop
pushf
xchg
push
xor
add
pop
or
dec
sbb
push
inc
ficomps
inc
fwait
in
mov
int
clc
jo
xor
adc
add
rclb
gs
mov
pop
inc
xchg
xor
aam
pop
xorb
xor
dec
jns
insl
shrl
pushf
or
jmp
mov
pushl
leave
push
xchg
dec
pop
stos
rcr
pop
lret
stc
fcoms
jp
mov
call
scas
test
dec
cmp
hlt
and
inc
jp
out
add
repnz
insl
les
aaa
cs
add
dec
testb
cmp
push
dec
pop
mov
dec
push
cltd
mov
movsl
sub
cmp
push
dec
add
ljmp
mov
fcoms
mov
aaa
adc
jge
dec
mov
jae
lea
lods
fwait
out
leave
fsubp
test
cwtl
cmc
cwtl
mov
or
mov
clc
xchg
add
pop
cli
adc
jp
stos
das
repnz
enter
ss
jno
sub
pop
pop
stos
sub
inc
ret
ja
mulb
fs
inc
loope
xchg
push
in
mov
or
stos
repnz
outsb
adc
les
ljmp
add
and
movb
cmp
mov
mov
inc
or
mov
pop
call
repnz
pop
movsl
or
cld
int
les
inc
dec
push
cltd
inc
xor
and
popa
or
inc
inc
xor
into
sti
push
push
sub
jo
lea
inc
data16
ds
hlt
dec
rcr
je
inc
jnp
mov
push
mov
lods
mov
pop
pcmpgtb
sub
cmp
xchg
sub
jb
iret
out
icebp
sub
stc
addr16
xor
xchg
js
aaa
dec
and
aas
sbb
push
inc
jmp
ret
mov
lods
cltd
fwait
lret
ja
xbegin
inc
hlt
je
push
cli
das
mov
das
mov
ja
dec
lcall
dec
cmp
sub
arpl
outsl
inc
jg
mov
add
push
add
cmpsl
rolb
addb
inc
pop
pop
enter
pop
clc
inc
inc
cmc
xchg
dec
icebp
and
sub
in
dec
les
jmp
or
xchg
push
or
in
nop
js
push
sbb
cmpsl
ljmp
imul
mov
pusha
test
or
push
arpl
adc
addr16
std
jge
or
xchg
imul
jae
inc
out
lods
loop
cmp
pusha
lahf
fs
mov
je
clc
ss
pop
inc
ss
mov
popa
and
mov
sub
loopne
and
xchg
lock
xor
xor
dec
ljmp
pop
add
sbb
testb
cmp
push
loop
or
lea
pop
xlat
xlat
push
sub
add
pop
add
and
mov
sub
shlb
repz
ficoml
loop
mov
sub
mov
inc
out
int3
jb
pop
pushf
out
xlat
and
test
int3
add
lea
lcall
int
mov
mov
fdivrp
sbb
pop
jg
ficoms
leave
push
imul
shl
inc
push
and
into
lock
mov
outsb
stos
shll
fisubl
addr16
dec
mov
sub
les
cwtl
adc
cmpsb
in
jnp
stos
fidivl
mov
inc
std
idivb
call
insl
push
cltd
mov
sub
mov
dec
mov
and
add
jmp
leave
push
adc
xor
push
jl
mov
mov
push
sub
rclb
mov
push
cmpsb
mov
jge
inc
mov
cmp
pop
pop
fincstp
pop
addr16
loopne
stc
loopne
jge
push
push
js
push
lock
pop
ss
push
mov
cmp
pop
lcall
clc
fcompl
sub
pop
mov
adc
add
test
bound
adc
in
xchg
add
mov
jle
test
jmp
adc
mov
mov
xchg
mov
jo
pop
into
push
push
push
bound
or
test
mov
ficoms
jp
lea
mov
add
mov
loopne
fnstcw
jne
pop
xlat
dec
sub
into
mov
mov
rcrl
imul
cmp
jle
adc
decb
fdivr
ret
stos
loopne
scas
xchg
mov
test
and
mov
outsl
loop
out
jp
js
into
push
ljmp
and
sbb
mov
fildll
js
push
push
adc
jbe
dec
sub
sub
arpl
mov
imul
inc
cmp
call
fistpl
lret
mov
je
add
imul
sub
or
ss
roll
mov
rcr
imul
repz
je
add
pandn
out
iret
dec
cmp
std
push
sub
dec
mov
inc
rcrb
xor
lds
js
add
test
arpl
jmp
cld
sbb
andb
dec
lods
push
jo
lret
jb
cmp
or
xchg
sub
jecxz
ret
cli
adc
mov
pushf
jmp
dec
adc
mov
xor
insb
scas
icebp
sbb
push
les
scas
add
pop
mov
out
loopne
xchg
sbb
adc
cmp
jb
addb
mov
jne
pop
cmc
push
xchg
adc
inc
lcall
or
cmpb
jae
cmpsb
cmpsb
and
pop
mov
push
call
mov
lods
pusha
scas
insl
mov
lahf
push
or
add
dec
loopne
das
xor
push
fabs
in
cmp
xchg
movsb
cmp
mov
ret
add
jl
arpl
fs
das
push
jne
ret
lock
xor
pop
push
cmp
dec
push
or
sub
inc
nop
fsts
jae
or
lock
lcall
out
mov
xchg
imul
push
das
and
sbbb
shll
sub
lock
lea
mov
imul
in
mov
cmp
out
jp
call
sub
call
jmp
jmp
dec
add
or
jne
add
lods
scas
fldenv
pop
lods
cltd
or
stc
movsl
lods
cmp
xchg
out
in
sbb
aaa
cmp
jae
pop
aas
jns
das
movsl
push
mov
in
add
test
jae
mov
mov
add
movsb
subl
cmovge
mov
loope
sbb
out
push
lcall
dec
std
xor
mov
xchg
cmp
psraw
sub
adc
cmp
add
insl
jae
jecxz
std
movsl
pushf
in
push
dec
mov
add
pop
lcall
dec
xchg
scas
icebp
push
inc
sbb
out
cld
mov
lods
shl
cmp
mov
fstps
aaa
fisttpl
sbb
pop
pop
out
and
fsubrl
stos
adc
xchg
int3
adc
pop
add
gs
push
jno
mov
movl
out
rol
sti
into
pop
inc
lock
cmpsb
xchg
sbb
ss
sbb
je
adc
add
push
cmp
push
push
xchg
rolb
rdmsr
add
sbb
xchg
repz
aad
js
mov
inc
push
cmp
leave
mov
rclb
mov
mov
outsb
mov
push
orb
repnz
daa
pop
mov
xor
jno
data16
mov
imul
pop
sub
insl
pusha
pop
popf
lods
push
jnp
mov
lods
xor
jecxz
sub
nop
pop
bound
sub
push
shrb
mov
je
hlt
sub
mov
jae
cltd
and
test
nop
add
xchg
loop
fidivrl
out
stos
call
mov
or
inc
jae
jnp
jnp
jmp
ja
sub
mov
dec
pop
rcl
cmp
in
sub
andl
mov
xor
out
adc
adc
test
add
dec
lods
jo
mov
inc
or
inc
xor
or
cltd
pushf
mov
es
sbb
addr16
xchg
test
lds
push
dec
push
adc
hlt
pop
jbe
dec
inc
cmpsl
mov
dec
repz
fildl
lds
pop
sub
clc
jnp
pop
xor
sahf
sub
jns
icebp
push
stos
pop
xor
jbe
mov
and
stc
or
pop
mov
push
es
in
shl
and
fidivrs
in
ror
sti
test
and
es
fidivs
lret
push
xrelease
inc
push
xchg
cmp
mov
scas
aas
nop
gs
adc
clc
outsb
or
std
aaa
and
aas
lock
insb
cs
sub
lcall
xchg
pop
mov
das
fcomps
push
dec
xor
cmp
sub
into
mov
push
sbb
stos
mov
cmp
fisubs
scas
or
test
lock
imull
aam
sbb
aaa
aad
add
xor
jge
stc
dec
frstor
daa
push
cmp
dec
inc
lds
imul
add
sub
push
and
fsubr
adc
lcall
fimuls
push
and
fimuls
xor
mov
pop
or
test
fmull
push
jbe
add
add
int3
cmc
mov
daa
jb
mov
scas
jecxz
pop
sub
dec
push
sbb
push
xchg
push
xor
mov
icebp
jns
lds
adc
rcl
lcall
jae
cld
nop
js
jl
mov
testb
shlb
ret
hlt
hlt
xchg
lds
dec
sbb
push
cmp
sub
dec
sarl
orl
pop
cmp
sub
in
gs
out
cmp
mov
mov
lahf
xor
adc
fsubrs
inc
cmp
add
out
xor
mov
jo
jns
add
inc
pop
or
jo
shr
cmp
daa
push
jns
int
pop
test
inc
dec
mov
and
inc
bound
lds
pusha
lret
sbb
xor
mov
leave
gs
clc
decb
sbb
cld
addr16
cmc
aam
aaa
jne
inc
mov
jmp
sub
mov
sub
mov
daa
test
lret
adc
lea
sub
movsl
ret
fdivs
jmp
inc
outsl
jle
jl
sbb
lock
aam
pop
jmp
push
cmp
fildll
cld
divb
and
push
jnp
mov
adc
out
cwtl
stc
fcompl
pop
fwait
and
popa
push
repz
in
push
leave
rcrb
stc
in
push
or
or
and
push
lods
xor
xchg
jp
lods
pop
mov
pop
jo
aad
aaa
mov
lods
ja
std
adc
cmc
repz
bound
test
push
xor
repz
mov
sbb
mov
out
jecxz
pop
mov
jmp
rcr
pop
push
xchg
jne
jae
adc
inc
mov
mov
inc
addr16
pushf
sbb
ds
outsl
add
loop
jns
js
lock
mov
or
fsubrl
inc
adc
sbb
outsl
rolb
or
ljmp
push
mov
xchg
add
pop
or
imul
lret
cmpsb
and
adcb
sbb
sbb
dec
shl
xchg
pop
aaa
mov
lahf
fs
lods
push
xlat
mov
call
push
add
dec
insb
enter
ja
adc
mov
movsl
push
sahf
js
push
ret
sub
push
call
lret
jns
mov
scas
xor
js
xchg
aad
fwait
add
popf
or
xor
dec
mov
xorl
data16
movsl
cmp
dec
inc
adc
loop
mov
sahf
cmp
or
pop
sahf
or
ja
and
push
inc
lds
dec
jg
xchg
int3
xor
scas
xchg
scas
xchg
and
sbb
jb
pop
xlat
lods
cmc
pop
adc
or
in
push
push
aas
adc
popl
pop
pushf
inc
imul
sub
out
add
imul
jg
sti
out
push
fistpl
repz
jno
enter
testl
jmp
jmp
mov
sbb
stos
sbb
insb
push
jb
scas
xchg
das
incl
lock
xor
out
shll
jge
lods
pop
inc
inc
lock
push
int
jle
bound
mov
pop
call
and
dec
mov
in
dec
adc
xchg
cmp
loope
hlt
jo
push
cmp
mov
inc
scas
adc
xchg
mov
in
test
and
inc
stc
jnp
mov
das
clc
jns
sarl
mov
aad
movsb
jns
sbb
mov
repnz
mov
adc
pusha
sti
sahf
out
mov
mov
mov
push
in
popa
jo
in
out
jmp
jmp
or
push
dec
add
sub
dec
rorl
out
mov
cmp
sbb
sbb
sub
rorb
push
cmp
lock
cmp
lea
out
rol
pop
mov
sub
sbb
xorl
push
jnp
test
shll
mov
sub
cltd
scas
es
imull
lea
decl
inc
mov
cs
xor
pop
jmp
lcall
subb
add
or
add
mov
pop
or
pop
dec
aaa
cli
dec
push
push
fwait
jp
push
jge
daa
rcl
inc
mov
xor
jp
lcall
push
mov
pop
cmp
pop
mov
push
mov
and
pop
adc
out
popf
jecxz
push
or
data16
lods
push
nop
add
mov
adc
or
dec
decl
inc
arpl
add
jae,pt
pushf
inc
adc
andb
lods
mov
jno
jno
lret
mov
dec
iret
xor
stc
icebp
sub
sub
insb
cmp
or
lods
xor
dec
cmc
pop
and
outsb
cmp
and
inc
in
js
in
mov
inc
jns
mov
xchg
xchg
scas
jbe
rorl
xor
fmull
icebp
dec
push
push
push
jecxz
out
bound
xor
cmpsb
rol
adc
decl
fimuls
mov
sbb
xor
xchg
jp
jle
repnz
outsl
andl
cmpsl
inc
adc
je
repz
loopne
jecxz
jbe
add
inc
push
popa
and
notb
sub
rcr
push
mov
in
pop
fstpl
pop
jno
cmp
xchg
and
xor
in
fs
jg
add
adc
mov
jmp
aaa
loope
or
mov
mov
mov
push
inc
cmp
ficompl
pop
lods
out
jmp
dec
movsb
fwait
aaa
leave
and
xchg
out
jl
lock
scas
pop
fwait
mov
mov
fsubrl
scas
dec
lock
xor
in
dec
mov
and
pop
pop
dec
lcall
pop
punpckhdq
pop
xchg
mov
out
scas
mov
fdivl
fldenv
xor
jnp
xchg
arpl
mov
jle
xlat
dec
mov
cltd
loop
je
xor
sub
mov
test
mov
and
adc
loope
test
push
movsl
ficomps
jb
insl
jl
aam
movsb
jne
sub
cmp
inc
mov
sbb
push
or
sub
sub
cmp
jecxz
pop
sbb
cmp
pop
push
jp
adc
add
pop
push
push
data16
mov
add
insl
xchg
flds
xor
or
nop
push
jge
inc
fnstsw
inc
insl
cld
mov
mov
adcb
dec
bnd
cmp
xlat
pop
test
xchg
mov
lds
xchg
notb
or
pop
adc
sub
es
rcrl
out
lock
fwait
test
xchg
mov
xchg
mov
jnp
ds
push
int
adc
pop
fisttpl
sub
push
imul
add
lret
js
mov
mov
xchg
in
jecxz
sub
jnp
jp
mov
jle
rolb
decb
jno
sub
lods
cmp
gs
leave
orl
int
mov
xchg
push
mov
sbb
je
xchg
loop
aam
mov
mov
push
leave
dec
pusha
sub
test
loop
mov
jne
mov
pop
mov
or
lock
dec
pop
in
aam
dec
mov
add
push
cmc
cwtl
lods
leave
jno
push
push
add
ss
shll
cmpsl
sub
sbb
cmpsl
and
subb
xchg
and
inc
mov
je
and
or
jne
and
sbb
cmp
aam
pop
inc
cli
aaa
hlt
fistpll
dec
scas
sbb
jge
inc
mov
icebp
cli
cs
mov
popa
rolb
push
mov
mov
dec
ret
pop
gs
aam
jge
xor
mov
push
in
ficoms
dec
pop
add
loopne
stc
lret
sti
jnp
lods
in
in
jge
mov
or
xchg
add
ficoml
mov
or
mov
adc
inc
sbb
test
imul
scas
push
sub
mov
jmp
sub
sbb
mov
and
mov
xchg
fnstsw
daa
mov
mov
pop
mov
loopne
sub
mov
int3
fnstsw
hlt
mov
gs
jbe
je
mov
xlat
dec
std
mov
fisubrl
sahf
push
repz
mov
lds
or
xor
pop
or
lds
and
mov
fisttpll
xchg
arpl
inc
pop
iret
pop
fcompl
mov
lcall
pop
stc
pop
push
repz
scas
mov
test
icebp
popf
push
push
mov
or
cs
jne
test
dec
gs
dec
cwtl
inc
inc
mov
or
mov
push
mov
fwait
pop
xchg
fnstcw
mov
mov
jns
jne
cs
xchg
insb
jl
shlb
fidivrs
inc
add
inc
sar
call
jl
mov
data16
pop
in
push
xchg
cmovge
push
ret
sahf
pop
lds
add
imul
gs
jb
sbb
inc
jge
sahf
hlt
cmpsb
sbb
lods
mov
test
daa
dec
add
into
out
mov
pusha
fs
aaa
loop
negl
mov
adc
push
ljmp
push
icebp
jae
les
mov
jno
aad
ss
movsl
cwtl
mov
pop
dec
mov
jo
mov
xor
mov
outsb
mov
cmc
jnp
and
sbb
cli
dec
cmp
push
mov
in
cmpsb
xchg
imul
js
mov
mov
addr16
cmp
jmp
pop
int3
pop
jb
or
test
jo
pop
inc
sbb
add
add
data16
imul
sub
mov
push
xchg
sub
je
addr16
mov
push
je
sub
out
or
aaa
mov
ss
call
mov
jl
pop
xchg
sbb
jno
jl
pop
out
idiv
test
mov
xor
iret
ret
dec
xchg
js
out
mov
xor
loope
outsb
adc
or
loop
fs
xor
jg
inc
jp
cmpl
push
mov
mov
addl
xchg
mov
out
les
jmp
mov
scas
jbe
mov
or
loop
jl
loope
xor
test
pop
jmp
pop
push
movsb
jmp
outsl
nop
xchg
ljmp
decl
xchg
pop
fldl
ja
in
cmpsl
outsl
popf
pop
push
adc
bound
mov
mov
push
mov
js
out
cmpsb
int
push
adc
add
sub
loopne
sti
inc
fs
pushf
xor
jg
xchg
and
cltd
adcb
movsb
out
mov
push
inc
lahf
das
cmpsl
sbb
sub
fcomps
mov
in
jns
xchg
xchg
mov
in
pusha
jb
ljmp
jnp
mov
adc
lea
das
mov
stc
in
fwait
pop
loopne
fcmovbe
lret
in
cmp
loopne
js
cmp
pop
adc
mov
scas
add
sarl
in
sbb
loopne
push
out
xor
inc
add
mov
stos
dec
cmp
aaa
into
lods
xlat
push
int3
nop
mov
sub
mov
movsb
inc
out
inc
arpl
incb
jg
or
dec
add
or
cmpsl
mov
icebp
addl
cmc
add
mov
ljmp
out
push
cwtl
in
sub
out
or
mov
movsl
xchg
aaa
jge
lds
jecxz
das
and
xchg
mov
mov
jne
mov
inc
push
pusha
ret
aam
in
insb
jae
jno
xchg
in
fcmovb
vpmaxsw
sub
pop
cmp
inc
inc
int
and
lock
cmp
test
test
jbe
call
lahf
push
iret
mov
fisttpl
dec
jle
xchg
out
movsl
or
ret
push
add
sub
or
xchg
push
out
add
cmp
add
pop
sub
dec
xor
lea
lods
loop
jmp
push
hlt
inc
int3
fwait
lea
in
dec
sub
and
add
mov
push
push
or
ret
scas
daa
popa
imul
andl
cmp
test
sbb
fstpt
fadd
or
adc
xorps
int
mov
in
adc
ret
and
pop
push
in
pavgw
jo
or
pop
in
sub
mov
rorl
xor
jo
rclb
call
or
mov
cmp
pop
cmp
stos
pop
pop
mov
ret
inc
jp
cmc
mov
sub
loope
push
leave
imul
or
mov
jae
adc
out
or
sbb
dec
pop
and
sahf
in
and
lret
mov
out
pop
rcrb
stos
inc
lods
xchg
shr
mov
and
mov
jp
sarl
scas
mov
sbb
sub
aam
test
jl
mov
jbe
mov
pop
lds
pop
xor
inc
andl
push
test
shll
sub
lcall
or
push
je
lret
stc
cmp
push
mov
push
cli
jg
mov
inc
cltd
push
imul
lock
inc
shlb
mov
sbb
fmulp
push
pop
xlat
imul
sbb
lret
jecxz
adc
xchg
mov
into
subl
xor
inc
out
inc
mov
sahf
lret
in
adc
in
imul
lret
popa
data16
xchg
pop
pop
scas
stos
add
mov
jno
mov
xor
pop
cmp
dec
mov
rolb
sub
adc
lahf
mov
loope
sub
push
flds
inc
mov
out
gs
or
push
xchg
hlt
shlb
push
pop
sbb
arpl
bound
xor
call
cmp
xchg
stos
fldl
loope
pop
out
mov
pop
pop
insb
test
lahf
shlb
and
mov
lahf
inc
cmp
lahf
jmp
dec
mov
in
call
inc
cltd
jne
or
lahf
mov
adc
lods
imul
mov
cwtl
out
and
repnz
and
add
leave
das
lds
mov
divb
je
sbb
cmp
int3
xchg
enter
int3
jmp
cli
pop
fcoms
jecxz
push
rcrb
fstps
jno
push
clc
xchg
or
xchg
push
pop
or
lcall
pop
xchg
in
jns
nop
mov
xor
ds
shll
test
cwtl
popf
shll
mov
sbb
cwtl
mov
icebp
daa
ret
inc
sbbb
js
cld
mov
loope
sub
cwtd
pop
fs
rclb
mov
add
aaa
and
iret
icebp
lock
push
pop
push
xor
push
cmp
cmp
scas
sbb
shlb
inc
dec
sti
adc
add
mov
int
cltd
cmpb
push
xor
mov
jmp
and
jl
hlt
or
mov
push
lcall
jno
mov
jo
stc
mov
ljmp
mov
out
jbe
inc
inc
pop
add
pop
loope
sub
add
fucomip
test
mov
lret
mov
adc
or
pop
fwait
scas
dec
insb
xchg
and
push
movsb
mov
pop
ret
mov
out
pop
dec
jb
pop
aad
mov
jo
repz
ret
xchg
fnstsw
jne
rcll
sub
clc
and
cmp
adc
add
xor
pop
outsb
jp
dec
xchg
cmp
push
loop
in
icebp
jp
lods
mov
test
add
and
jo
rorb
mov
mov
push
push
mov
push
pushf
sti
lahf
mov
loopne
pop
fstpt
fcomps
inc
scas
fadds
ret
pop
mov
gs
and
inc
lock
test
stc
movsb
push
lea
nop
icebp
ficoms
xor
fcomps
xor
test
sarb
enter
pusha
insl
or
mov
xor
push
xchg
mov
ds
cli
imul
cmp
stc
movsb
inc
and
or
jns
jmp
test
push
test
iret
addb
out
dec
divb
mov
sbb
int3
jmp
outsl
lock
pop
jnp
imul
jno
or
test
xchg
dec
popa
rcrb
cld
add
ret
les
push
loop
loope
jg
lcall
mov
adc
in
lret
js
cmpsb
stc
mov
in
mov
fidivs
fldl
mov
or
mov
jne
mov
in
out
scas
mov
and
sbb
daa
outsb
push
and
mov
push
or
push
push
int3
xor
cmp
dec
inc
push
rorl
loop
lods
add
stos
mov
lret
call
mov
cmp
push
ret
into
jge
pop
divb
mov
inc
stc
jmp
mov
cwtl
in
add
clc
sbb
and
int
cmpxchg
adc
pushf
movsb
std
negb
lods
les
jmp
push
lock
or
hlt
movsl
bnd
adc
mov
shrb
jb
sbb
mov
pop
cmc
sub
add
mov
loop
lods
mov
fwait
fwait
cmp
dec
add
pop
sbb
add
jb
inc
insb
hlt
aam
out
push
xchg
inc
xchg
mov
xor
push
jnp
add
xlat
or
call
xchg
loope
stos
sti
sub
mov
jecxz
sbb
or
jne
mov
pop
add
inc
cs
dec
sub
neg
fists
jg
lea
add
lahf
testb
pushf
insl
xlat
sbb
xor
mov
js
mov
xlat
sti
pop
mov
or
sbb
bound
subl
jno
ds
mov
and
xchg
call
and
jmp
hlt
fwait
popf
shlb
roll
sub
jno
push
jl
pop
aam
jbe
sbb
lret
inc
lds
pop
push
pop
cmp
or
mov
sbb
pop
xchg
cmp
repnz
fsubs
ss
pop
cli
pop
jp
lods
and
dec
cmp
les
fldl
fcmovb
loope
insl
or
jo
xchg
jne
outsb
leave
outsl
sub
cmc
fs
mov
icebp
mov
pop
cmpsl
sahf
dec
cmp
mov
jne
jmp
xchg
adc
cmc
in
sbb
es
cmp
nop
ret
aaa
stc
sub
outsl
outsb
mov
inc
movsb
mov
rolb
jns
push
fildl
inc
shll
xchg
or
insl
dec
pop
mov
sahf
cmc
out
int
pop
in
into
fstl
leave
lret
push
stos
shlb
cmp
insb
and
daa
xchg
dec
push
adc
add
inc
loopne
in
dec
jbe
mov
mov
inc
mov
test
out
ret
cmp
dec
or
stos
xchg
inc
test
lret
repnz
cmp
mov
ljmp
rolb
daa
xchg
fldcw
std
sub
ret
loopne
mov
arpl
int
jl
lea
xor
mov
sbb
or
es
pushf
mov
fucomip
adcl
inc
xchg
imul
stos
pop
pop
push
inc
lret
mov
push
add
mov
fs
into
dec
sbb
or
arpl
adc
cmp
push
pop
in
das
clc
in
pop
test
add
aaa
add
popa
leave
gs
mov
and
repz
xchg
inc
mov
arpl
lahf
test
mov
mov
nop
popa
cmp
and
cmp
js
and
cmp
sub
mov
mov
or
scas
mov
out
mov
loopne
test
cld
nop
cmp
xor
or
add
divl
adc
inc
pminsw
pop
addr16
dec
divb
pop
jg
scas
movsb
movsb
mov
dec
adc
leave
pop
xor
push
sub
subl
push
stos
jg
movsb
xor
cmp
movsb
and
push
daa
adc
mov
add
sub
jae
mov
rcl
push
cs
dec
into
pop
sub
aad
inc
rcr
dec
push
push
bound
mov
test
push
or
add
or
js
popa
lret
test
dec
into
pop
mov
ja
stos
in
hlt
mov
rcr
mov
mov
jno
leave
xchg
out
adc
adc
adc
shl
notl
mov
in
push
add
stos
stos
ljmp
not
push
sbb
sub
and
lds
or
or
xchg
in
stos
add
push
cmp
mulb
xor
fldl
pop
hlt
gs
dec
adc
icebp
dec
nop
xchg
icebp
in
and
mov
icebp
fwait
imul
loop
jns
push
in
dec
aam
sub
jmp
push
daa
sbb
pop
pop
inc
adc
inc
stos
cld
imul
mov
lcall
ret
mov
aaa
or
mov
add
out
xchg
aaa
push
mov
pushf
andnps
repz
lea
and
jmp
dec
jge
out
mov
and
jp
out
jg
lods
cmp
in
fisubl
pop
addr16
scas
test
sbb
test
gs
iret
inc
repz
repnz
inc
pusha
aad
add
push
shl
popf
mov
imul
sub
lds
je
les
push
inc
pop
xor
icebp
adc
lret
imul
gs
or
jae
sbb
shll
adc
sahf
gs
les
xchg
ljmp
mov
ljmp
xchg
add
bound
adc
scas
xor
cmp
or
loop
movsl
inc
scas
pop
jns
xchg
sub
mov
es
pop
jne
dec
rcl
inc
mov
mov
push
pop
out
out
inc
cs
cmpsl
iret
mov
xchg
cmp
mov
sahf
xchg
pop
pop
bound
push
call
ds
lock
and
ret
stos
inc
scas
sub
xchg
push
insb
ret
out
dec
rorl
stos
pushl
or
sub
repz
les
mov
or
xchg
andnps
shrl
mov
mov
test
leave
dec
mov
mov
jp
in
fldl
mov
enter
or
in
loopne
mov
addr16
movd
cld
jg
scas
add
out
pop
mov
ret
popa
dec
dec
xor
dec
into
adc
outsl
sbb
jno
scas
cmp
loop
adc
inc
dec
cli
cs
dec
cld
mov
jge
inc
inc
repz
or
lods
pop
xchg
mov
loope
cld
mov
adc
xchg
div
sub
repz
jge
pop
dec
fucomp
push
cmpl
mov
dec
repnz
mov
inc
and
or
push
xchg
cmpb
or
fwait
clc
aas
mov
lods
adc
and
mov
jnp
addr16
fistpl
jne
cltd
xor
lea
popf
adc
std
xchg
enter
in
and
inc
xor
test
fimull
dec
push
push
adc
jae
daa
xchg
cmp
sbb
xchg
inc
test
fs
test
ficomps
call
fstl
fdivrp
add
xchg
loope
add
and
dec
mov
jae
sbb
mov
mov
and
or
aam
outsl
in
pushf
jg
lret
fnsave
push
and
loopne
negl
jg
adcb
sub
inc
shlb
std
lock
lock
pushaw
and
jge
jl
adc
cmpsl
mov
sub
mov
sub
ljmp
fpatan
jnp
ds
xchg
cmp
or
inc
out
push
mov
adc
and
ds
ljmp
addl
cmpsb
popf
mov
and
mov
enter
nop
data16
scas
push
jp
rorl
xor
sti
gs
popf
pop
insb
and
loopne
pushl
daa
in
dec
call
aas
repnz
add
data16
push
mov
sub
push
push
fnstsw
push
pop
stos
popa
sub
mov
iret
xchg
adc
and
xor
fmull
scas
mov
in
xchg
add
dec
fldt
fwait
cmc
mov
jo
fcmovb
fisubs
xor
or
mov
es
sbb
ret
in
mov
outsb
mov
loopne
repnz
mov
push
dec
mov
dec
jl
aaa
sahf
pop
dec
dec
cmpsb
or
scas
mov
or
in
pop
sub
in
inc
clc
inc
xchg
fstpl
xor
dec
cltd
test
push
xchg
sub
mov
mov
add
lret
mov
and
stos
jo
stos
iret
push
das
jbe
mov
adc
cmp
add
fwait
mov
fs
pop
xchg
movsl
xlat
push
jo
adc
cmp
add
int3
int3
push
xchg
repz
mov
jecxz
cmpsl
ret
stos
arpl
sub
cmp
push
dec
sbb
sub
xor
and
mov
mov
out
fidivl
icebp
jns
arpl
movsl
push
sub
cld
mov
rcrb
mov
and
xor
dec
int
lahf
xchg
roll
lods
or
pop
lods
gs
rolb
mov
loope
jmp
fidivs
add
add
push
sbb
mov
lods
push
movsb
cmp
ds
push
and
orl
inc
and
add
aam
xchg
pop
mov
xor
cmp
mov
das
mov
mov
xorl
push
pushf
lahf
pop
inc
push
and
xlat
inc
xchg
push
in
inc
cli
or
xchg
mov
out
outsb
out
adc
xchg
xor
loop
icebp
test
and
test
arpl
cmp
in
fs
and
xor
pop
lret
add
and
add
stos
cltd
out
out
int
imul
mov
bound
es
jne
jnp
sub
shlb
out
mov
arpl
lds
fs
adc
loopne
cmc
das
and
dec
mov
add
cmpl
push
das
pop
dec
mov
dec
cld
les
orl
pushf
mov
std
pop
pop
cmp
inc
jl
mov
sbb
mov
stos
and
gs
pop
lahf
jmp
add
add
in
mov
nop
leave
iret
aam
repnz
lea
sbb
sarb
stos
push
push
push
out
xchg
jae
pop
or
test
pop
jbe
push
and
cmp
mov
fcompl
jo
popf
sub
cmp
loop
imulb
xor
or
dec
push
xchg
xor
push
mov
data16
fmull
xchg
ss
pusha
insb
inc
xchg
nop
xchg
jp
aas
sub
mov
cs
inc
bound
mov
mov
inc
insb
push
push
mov
lret
push
cmp
daa
cmp
mov
rolb
lret
je
jp
xchg
xor
dec
sbb
jle
clc
jle
xchg
rclb
sub
dec
pop
pop
aaa
ret
push
imul
add
jno
mov
xchg
into
mov
cmp
stos
xchg
insl
out
sahf
pop
mov
adc
aas
andb
rcr
loope
mov
inc
hlt
jge
jnp
inc
pop
in
xor
adc
and
ja
ljmp
cmp
pop
and
movsb
sub
lretw
test
movsl
jg
rcll
ss
leave
fstpl
fldcw
leave
xor
rorb
mov
outsb
pop
mov
mov
imull
sub
imul
sub
sbb
xchg
xor
test
imul
je
lret
push
xor
mov
cmpsl
pop
cmpsl
int
mov
sub
inc
outsb
outsb
sub
hlt
aaa
sar
cmp
int3
adc
mov
pop
into
mov
mov
lock
jo
sbb
adc
nop
push
pop
xchg
inc
nop
pop
out
mov
ja
sbb
or
mov
sub
sti
enter
pop
movsb
add
pop
sbb
adc
jo
fisttpl
pop
es
fsts
rolb
dec
cli
push
cmp
xchg
jne
out
daa
addr16
mov
and
pop
test
xchg
cmpl
mov
push
xchg
adc
rorl
mov
rolb
imul
xor
dec
and
dec
rclb
mov
outsb
cli
in
repnz
pop
ss
imul
push
mov
repz
mov
leave
jl
jne
cmp
push
jne
pavgw
shll
je
pop
mov
mov
in
stc
test
test
outsb
arpl
cmp
push
jle
cmpb
sub
sub
cs
fdivrs
sbb
xor
fiadds
aas
cmp
mov
mov
mov
in
xor
xor
or
xor
push
adc
fisubs
gs
lock
inc
cld
loop
je
adc
outsl
js
pop
mov
iret
cmp
inc
xor
leave
mov
push
pushf
fistpl
jmp
jmp
ret
add
imul
adc
adc
cs
ret
mov
out
xor
dec
xchg
aam
dec
adc
dec
jl
fcoms
add
pop
mov
lret
iret
jle
jb
or
sbb
cwtl
es
mov
scas
inc
mov
bound
ffreep
nop
adc
sbb
push
out
push
cmp
cmpsb
test
adc
stc
mov
cld
iret
nop
mov
ljmp
dec
jnp
fistpl
mov
xor
test
inc
outsb
cmpsb
xchg
sub
xchg
mov
xchg
aaa
loop
daa
mov
inc
sbb
das
andb
dec
das
add
sub
arpl
push
xchg
xchg
dec
push
sbb
popa
std
stos
mov
mov
adc
add
xchg
mov
sbb
inc
sti
cwtl
xor
ss
jno
xchg
add
add
xchg
sbb
push
mov
push
pop
movl
lret
shl
push
xchg
test
lea
shll
jnp
scas
das
mov
mov
out
out
push
push
mull
push
insl
addb
out
lcall
jge
iret
mov
scas
adc
cs
ljmp
xchg
inc
fsubl
sti
scas
sbb
cld
jb
jo
sub
adc
fimull
pop
jne
adc
xchg
int3
fstp
inc
jns
sub
idivb
jp
rclb
sbb
fs
add
int3
dec
xor
and
cmp
scas
xor
ss
mov
pop
pop
jle
test
dec
cmp
std
mov
pop
cld
xlat
sub
jo
add
das
fsts
add
sbb
or
adc
int
test
add
inc
cmpsl
es
and
lds
mov
jle
lea
cmp
stos
nop
ret
pop
adc
add
push
jp
shrl
iret
test
imul
test
mov
inc
addr16
imul
push
stos
adc
pusha
inc
nop
pop
call
sbb
mov
test
ja
xor
decb
fidivrs
repnz
stos
dec
lock
repnz
cwtl
jge
or
popf
sub
fiadds
add
or
add
mov
adc
xor
xchg
scas
mov
dec
imul
mov
xor
cmpsl
je
mov
dec
and
pusha
jno
push
inc
add
xor
leave
sbb
push
jb
call
push
and
repz
daa
cmp
repz
addb
enter
xchg
sahf
sbbl
mov
loope
cmp
in
xchg
aam
adcl
sbb
mov
mov
pop
sub
sbb
popf
sub
movsl
pushf
imul
inc
inc
gs
push
lret
fidivl
ljmp
and
or
cli
sbb
or
test
loope
xchg
dec
inc
mov
lock
mov
cmpsb
mov
xorl
xor
and
push
fdivrl
or
ret
out
jge
in
cmp
mov
iret
fs
repz
loope
js
jbe
add
sbb
jp
sub
adc
out
jnp
test
rolb
aas
inc
cwtl
scas
mov
and
rclb
inc
jge
in
sbb
fdivrl
jno
mov
js
inc
leave
imul
cmp
mov
repnz
xor
push
inc
mov
sbb
popa
jmp
lock
xor
mov
pop
fsub
pop
data16
nop
cmc
lahf
cmpl
dec
ret
inc
pop
xor
xchg
sar
es
js
roll
inc
scas
mov
cld
dec
testl
inc
fcompl
jmp
mov
stos
call
mov
adc
push
outsb
mov
sub
or
mov
mov
mov
outsb
arpl
pusha
xorl
cs
xor
in
call
inc
cmpsb
stc
mov
pop
ret
sub
stos
dec
lds
dec
mov
pop
bound
adc
and
lret
xchg
push
mov
pusha
mov
test
pushf
andl
pop
loop
outsl
adc
dec
imul
jbe
xor
mov
test
cli
mov
mov
inc
mov
or
or
inc
mov
nop
jo
out
jno
mov
sahf
repnz
add
insb
jl
push
cmp
pop
insb
dec
cmp
imul
daa
mov
out
sbb
pop
cmc
sahf
pop
jno
or
in
jp
cmp
or
hlt
hlt
xchg
mov
cmp
rclb
and
cmp
dec
insb
dec
xor
cmp
jge
call
adc
imul
mov
push
cltd
in
sub
adc
fmuls
mov
jecxz
stc
jl
sbb
stos
xorb
add
mov
jmp
inc
dec
mov
push
fdivrs
popf
or
mov
sbb
xchg
jge
mov
xchg
std
aas
push
or
xchg
les
stos
outsl
pop
aas
inc
xor
inc
ret
fstl
cs
in
cmpsb
in
ret
push
inc
xchg
fldcw
js
cs
sbb
fisubl
hlt
pop
pop
sbb
add
ret
xchg
add
or
and
les
nop
mov
jns
das
stos
pop
lock
push
scas
popa
pop
push
push
adc
jae
mov
popf
mov
and
cs
insl
stos
lock
std
rorb
cmp
xchg
mov
cmp
stos
bnd
insb
cmpl
stos
pop
sbb
add
push
cmp
mov
in
fldcw
push
testb
push
scas
in
fs
mov
jmp
stos
inc
cmc
arpl
mov
and
mov
mov
xchg
xchg
sbb
xor
pop
push
fstpt
scas
leave
mov
or
loop
mov
mov
sbb
inc
xchg
mov
cld
popa
xor
ds
int3
lahf
xchg
sbb
addr16
xor
popw
sbb
lods
cmp
stc
sub
xor
lock
addr16
loopne
gs
dec
imul
jle
lahf
and
inc
inc
mov
fs
inc
jnp
xor
and
popf
ret
mov
cmp
inc
rcrl
mov
mov
lret
popa
or
push
add
cmpsl
dec
adc
movsb
das
icebp
enter
pop
push
int3
mov
fs
adc
fstpt
xchg
mull
fwait
and
stos
mov
mov
out
or
data16
and
dec
push
cli
sbb
mov
fwait
mov
das
pushf
test
sbb
in
in
or
loop
data16
jl
fstps
mov
and
popf
outsl
mov
pop
xchg
xchg
cmpl
icebp
mov
bound
test
jns
dec
adc
mov
mov
test
shrb
sbb
cwtl
xor
or
icebp
outsl
mov
repnz
jmp
das
gs
sub
loop
cli
xchg
sub
popf
adc
daa
fidivrs
push
jae
cmp
insl
outsb
rolb
sub
mov
dec
pop
fmulp
sub
xor
jp
adc
xchg
xor
in
hlt
add
inc
out
pop
scas
sbb
sbb
mov
sub
mov
ret
pop
inc
add
xor
sub
cmpb
subb
or
lahf
xchg
les
mov
movaps
int3
imul
insb
push
mov
idiv
mov
test
mov
push
and
loop
push
mov
xchg
rorl
and
push
mov
pusha
iret
mov
xor
jge
lods
mov
outsl
cwtl
out
jp
bound
fmull
cmpsl
js
loope
mov
lret
es
adc
outsl
outsl
jae
dec
dec
fmuls
rolb
clc
xor
jle
jp
push
les
fs
push
fstpt
test
push
out
jae
lret
sub
push
pusha
pop
imul
mov
imul
sahf
lcall
js
add
out
cs
jo
mov
pop
push
ljmp
outsb
aad
inc
jo
or
leave
pop
push
and
push
dec
add
inc
or
fstpt
ret
inc
psadbw
sarb
add
dec
push
pop
cmc
xlat
cmpsl
je
lods
andb
jno
mov
in
jl
stos
pop
lea
or
imul
and
int3
dec
and
sbb
cs
fwait
out
mov
adc
and
jecxz
lds
mov
cli
test
leave
sbb
inc
lret
mov
mov
cmp
test
inc
cmp
jp
cmp
mov
rolb
loop
mov
rorb
into
dec
xor
mov
dec
js
pop
dec
aad
jge
ja
xlat
xor
loop
cmp
mov
mov
sbb
dec
cwtl
push
dec
fimuls
mov
sahf
popa
mov
mov
xchg
or
testb
sub
xor
inc
or
fsubrl
aaa
lcall
sti
dec
push
arpl
enter
sti
lahf
in
int
repnz
add
add
cmc
repnz
dec
mov
pop
stos
jno
mov
ret
imul
jnp
jae
stc
and
mov
sbb
stc
or
movsb
inc
inc
and
pop
or
sarb
push
cli
into
into
f2xm1
lds
or
mov
ret
idivb
push
and
inc
std
sub
and
mov
jno
rorl
cmpl
gs
test
xchg
fildl
rclb
mov
out
xchg
push
mov
mov
jo
sub
divb
mov
popa
xchg
ficoms
and
pop
push
leave
paddw
hlt
inc
rcrb
add
mov
repz
pop
call
add
add
in
stos
out
daa
cltd
stos
mov
mov
adc
jno
stc
movsb
push
xor
into
add
mov
inc
std
dec
insb
jle
adc
cmp
push
test
xchg
out
add
sub
or
dec
cltd
sbb
mov
push
in
jp
fs
hlt
stos
or
imul
iret
push
push
mov
arpl
xor
push
shrb
ret
popa
cli
mov
push
lods
mov
data16
adc
dec
xchg
push
rcr
mov
adc
xchg
sub
ds
cmp
jl
ja
sarl
sub
test
inc
out
sbb
mov
cld
sub
mov
inc
js
or
rcrl
in
cltd
loope
out
push
jno
arpl
clc
push
cmp
dec
push
stos
pop
std
push
xor
dec
add
iret
clc
cmc
out
adc
sbb
inc
xchg
push
aad
cli
adc
cltd
dec
fdivp
test
or
loop
jnp
fs
jmp
clc
outsb
pop
inc
cmp
mov
xor
ret
loopne
pcmpgtd
pop
je
push
xchg
add
xchg
fwait
adc
insb
imull
cs
in
or
jbe
or
loop
int
les
daa
test
push
mov
bound
nop
cmp
subl
inc
cmpsb
fidivl
inc
push
adc
cltd
cmpsl
sahf
fs
xchg
xchg
and
mov
dec
lahf
pop
cvtpi2ps
fidivrl
mov
rcrl
push
jbe
cs
push
imul
cmp
inc
lods
shrl
mov
negl
gs
push
mov
js
sarb
and
fldcw
pop
stos
in
inc
or
popf
xor
add
push
das
cld
jb
push
xor
mov
or
mov
cmp
xor
dec
js
aaa
dec
test
cli
pop
stos
xchg
jp
fwait
sub
orl
mov
and
jge
adc
lea
jo
mov
fisubrl
in
xchg
adc
insb
fs
flds
xchg
xchg
arpl
xor
xor
xchg
stos
mov
insb
xor
into
filds
cld
cltd
lods
pop
fidivrl
push
hlt
in
cmpsl
fwait
sar
inc
sub
or
lcall
das
les
leave
xor
jle
pop
scas
sbb
jp
inc
push
aad
xor
mov
daa
out
pushf
adc
test
sub
and
pop
pusha
push
js
cli
mov
dec
mov
fdivr
fwait
mov
stos
jno
outsl
out
inc
jge
cld
mov
xor
ficoms
out
mov
jmp
mov
mov
sub
fldl
jbe
cmpsb
sbb
pop
stos
cli
adc
ds
cmp
fwait
adc
test
cmp
fwait
out
movsl
lret
pop
scas
test
je
imul
and
rcl
aad
mov
xchg
das
mov
out
and
push
push
inc
aaa
jbe
sti
mov
add
ss
outsb
shll
mov
in
ffree
inc
mov
clc
fsub
inc
cli
or
popf
cli
cmp
lahf
call
cltd
pop
xor
pop
ljmp
psllw
pushf
and
fs
sti
xor
out
das
sbbl
aad
aas
neg
std
out
mov
inc
xchg
jmp
cmpsl
mov
sbb
arpl
sbb
and
push
or
xchg
daa
fidivrl
adc
stos
or
ret
inc
jne
dec
lahf
add
inc
out
push
xor
or
sbb
ja
pop
rclb
test
fistl
scas
cmp
inc
fadds
dec
adc
mov
or
loop
lcall
xchg
jle
jb
inc
ret
mov
push
mov
fbld
sbb
sbb
int
int
in
xor
nop
cmp
cmpsb
push
pusha
insb
aad
loop
shr
dec
cmpsl
mov
xchg
mov
sbb
mov
les
sub
in
je
inc
jae
ja
jbe
loopne
mov
pusha
cmp
cmp
stos
pop
mov
cmc
inc
sub
lcall
cmp
ret
mov
imul
insb
push
std
cmpsl
out
inc
fnsave
mov
pop
push
sbb
pop
aas
in
mov
lock
and
cmp
call
push
xor
pushf
cs
sbb
and
int3
icebp
jo
pop
outsl
xlat
jnp
sub
push
loope
aas
popa
dec
xor
sub
test
mov
add
mov
xchg
jbe
pusha
xor
or
and
fstps
mov
mov
jns
and
in
sti
lahf
shll
sbb
mov
xor
mov
sbb
push
push
mov
in
fstpl
dec
pushf
cld
scas
jns
call
sbb
in
test
mov
rcll
add
movsb
scas
fsub
iret
inc
ja
inc
into
clc
popf
sbb
gs
sti
in
and
xlat
jnp
mov
es
or
push
ss
sub
dec
icebp
add
aas
cmp
adc
subl
inc
mov
mov
fmuls
stc
enter
sti
xchg
cmc
xchg
xchg
in
inc
mov
and
sti
insl
xlat
jge
fiaddl
mov
sub
mov
sbb
cwtl
mov
xor
pop
js
arpl
xchg
pop
mov
jecxz
xor
fs
scas
stos
lahf
in
stos
push
push
sbb
add
push
add
cmovp
outsb
into
cwtl
mov
xor
loope
sub
aam
ljmp
cmp
out
or
in
or
fidivl
je
push
inc
test
adc
xor
and
jae
les
test
jno
jmp
lret
and
mov
popa
loope
inc
mov
push
adc
inc
sahf
lds
lret
inc
mov
sub
ds
popa
jns
push
in
lods
push
mov
lcall
in
imul
outsb
push
loope
dec
testl
add
sbb
sahf
sub
fildl
lahf
mov
inc
dec
pop
mov
push
fsubl
xchg
test
push
das
xor
cld
mov
daa
jp
jne
sbb
insl
inc
mov
add
popf
loopne
push
and
popa
mov
jmp
pop
inc
mov
jb
js
popf
sti
push
lret
in
pop
ret
or
shlb
and
loop
dec
pop
mov
cwtl
xchg
xor
ja
fstl
and
mov
sti
cltd
push
fisubl
pop
in
cmp
xchg
movsl
inc
inc
stos
aas
je
push
mov
rclb
adc
push
pop
sub
or
sub
mov
jne
fcoml
cmp
inc
daa
hlt
les
xor
fs
push
inc
mov
rcr
jmp
mov
push
cmp
js
subb
test
stc
pop
clc
sbb
or
mov
pop
cltd
shlb
popa
and
dec
push
stos
leave
inc
adc
rorl
pop
sub
out
jmp
push
mov
negl
call
xchg
repz
adc
mov
stos
out
mov
aam
add
icebp
icebp
enter
push
pop
xlat
je
xchg
push
stos
outsb
xor
dec
mov
jl
rolb
cmpsb
jne
pushf
lret
jge
or
push
sub
cmpsl
lock
jns
cld
add
stos
rcl
adc
sub
rcr
mov
rcrl
and
dec
popa
ds
xchg
orl
xor
push
mov
cmp
shrl
jg
imul
loopne
shr
jo
cltd
outsb
sbb
add
pop
sbb
out
pop
dec
ficompl
dec
fiaddl
and
sub
push
mov
mov
pop
and
scas
aas
dec
fidivrl
add
sti
enter
data16
sbb
jbe
mov
stos
inc
lods
xchg
sahf
inc
mov
or
jns
mov
repz
lahf
push
push
int3
movsl
mov
rorl
push
add
xchg
repz
xchg
faddp
cmpsl
pop
movsb
fidivs
in
cmp
and
in
dec
fstpl
bound
insb
loop
mov
addl
xor
pop
arpl
aas
bound
mov
das
push
std
dec
popf
push
inc
js
sub
pop
fwait
mov
insl
or
sub
icebp
lods
jno
notb
jns
pushf
cld
mov
sbb
jecxz
mov
xor
xchg
fildl
mov
mov
enter
aaa
rolb
add
fstps
stc
add
jns
jge
inc
pop
and
lods
es
mov
in
xchg
scas
and
mov
orl
ds
mov
add
into
ljmp
jb
fs
xor
shr
xchg
aaa
mov
call
push
cmc
les
cmc
call
cmp
imul
pop
push
and
jbe
scas
cmp
mov
shlb
or
jmp
loope
je
nop
push
aas
pop
mul
daa
jne
sub
xchg
dec
ds
pushf
loopne
cli
jp
dec
pop
test
inc
jmp
mov
adc
dec
jl
bound
pop
nop
push
dec
insb
rorb
adc
cmpsl
push
ret
pop
dec
fcompl
ds
cmp
adc
mov
dec
jle
add
int3
xor
pop
fdivs
insb
cltd
loop
clc
into
pop
outsl
aas
setp
mov
mov
mov
xchg
adc
cmp
jge
inc
mov
push
decl
ljmp
out
inc
add
add
mov
inc
mov
push
and
jne
or
je
imul
and
bound
jg
pop
out
or
lock
pop
lods
pop
lea
aaa
pop
mov
push
mov
push
in
int
stos
xor
jne
fimull
test
pop
jnp
jp
fisttpll
sbb
push
xor
cmp
mov
xor
in
mov
jp
xchg
and
xchg
orl
or
es
fcmovu
test
outsb
mov
mov
xchg
jb
aad
pop
movsl
xorb
jg
negl
test
test
in
into
mov
sub
ret
jecxz
movsb
iret
jle
in
xchg
repz
xabort
pop
out
xchg
cmpsb
in
lods
sub
mov
push
cltd
xor
cmp
mov
ds
pop
je
add
sub
daa
adc
hlt
divb
add
pushl
mov
out
mov
int3
hlt
adc
sbb
pop
in
int
clc
iret
jne
cmp
xor
adc
pop
lcall
sub
cmp
push
dec
ret
inc
ja
std
jle
mov
or
pop
divb
cmp
xchg
push
in
cmp
movsl
sbb
or
adc
mov
add
fs
aam
int
stos
sub
in
out
jge
outsl
push
and
int
jmp
dec
popa
cmp
mov
bound
mov
jecxz
push
xor
ret
sahf
adc
popa
jle
push
pop
fiadds
mov
mov
sbb
mov
in
push
pop
inc
mov
xchg
push
and
test
push
xor
les
push
adc
or
mov
arpl
add
aam
fwait
pop
cmp
lcall
mov
mov
sub
loop
adc
and
lock
dec
imul
sar
je
sbb
nop
sbb
pop
push
dec
cmp
bound
or
push
filds
mov
adc
sbb
movsb
ret
push
jbe
cltd
xchg
les
or
pop
pop
jne
fcomip
dec
and
dec
dec
xlat
push
push
cmc
jle
pop
xor
pushf
mov
adc
insb
in
lea
mov
mov
aaa
pop
or
aaa
mov
jb
cmp
push
sub
jns
push
jnp
cmp
pop
jns
dec
mov
aam
outsl
and
sahf
xchg
outsl
das
pop
shlb
std
cmp
mov
add
in
lcall
inc
jno
adcb
les
jecxz
mov
in
mulb
lea
cmp
pop
fidivl
sar
jle
xchg
or
pop
xor
call
mov
int
clc
lcall
cmp
dec
add
mov
inc
xor
add
pop
out
imul
into
das
mov
cmp
push
in
xchg
mov
pop
outsl
sub
loope
pushf
mov
dec
xor
dec
loopne
int3
mov
dec
test
jo
sbb
mov
jo
cld
jo
and
aad
in
inc
jmp
sbb
sbb
imul
loop
xor
aas
pop
sahf
ret
cwtl
addr16
add
jl
mov
fidivs
pusha
adc
pop
xchg
int
test
inc
push
xor
clc
cmc
movsl
test
push
push
out
or
insb
stc
fs
clc
and
fstl
sbb
out
ljmp
or
jle
bound
outsb
gs
ljmp
xchg
mov
push
dec
loope
cmpb
sti
je
xchg
jo
ja
shrl
or
popf
pop
cmp
das
lcall
daa
lret
jb
adc
ss
iret
aas
insl
test
shrb
test
mov
mov
cli
int
sahf
sub
fisttpl
int
addl
mov
mov
data16
push
mov
and
test
mov
mov
push
jmp
aas
cs
adc
pop
ror
mov
hlt
add
mov
in
test
out
push
jo
fcomps
pop
and
gs
insb
inc
rorb
adc
aad
sub
sbb
into
pop
and
movsl
sub
in
shrb
lcall
cmpsl
js
clc
fs
lock
fwait
and
fsubs
cmp
adc
dec
aas
or
pop
dec
and
rcrb
jno
push
in
adc
enter
adc
xchg
hlt
jge
call
mov
xchg
inc
mov
lret
adc
int3
popa
pop
inc
loope
mov
jg
cmpsb
push
sub
mov
movsb
dec
pop
stos
iret
sub
add
xchg
cmp
jmp
push
in
jbe
insl
fiaddl
push
addr16
fsts
xor
xor
fdivrp
fistps
push
in
es
sub
add
inc
xor
lea
mov
or
enter
adc
sbb
adc
add
movsl
and
pop
mov
lods
and
je
aam
or
dec
push
inc
mov
cmp
imul
lahf
call
aad
jge
call
dec
adc
fnstcw
dec
xor
push
or
gs
jmp
mov
mov
adc
enter
sbb
icebp
jl
popf
push
mov
test
push
mov
xor
in
cmpsl
and
mov
insb
mov
test
into
ss
lcall
push
imul
pop
lret
mov
pop
rcrl
mov
fildl
fadd
inc
fs
and
mov
push
dec
pop
repnz
inc
xor
bndstx
mov
sub
xchg
xor
jecxz
pop
in
push
cmp
fimuls
pop
cmp
stos
daa
mov
ret
push
pop
loop
xchg
mov
ds
cmp
adc
std
insb
out
gs
xor
loope
jle
cwtl
into
cmp
rol
xor
push
jle
mov
idiv
rorb
mov
push
sub
adc
clc
dec
test
loope
fisttpl
out
add
cmc
insl
rcl
lahf
adc
pop
adcl
in
jmp
cli
and
mov
pusha
addr16
jo
dec
stc
xlat
sub
sbb
sub
sbb
pop
xchg
outsl
pushf
mov
pushf
mov
adc
sub
fcmovu
lahf
imul
stos
clc
dec
cmp
scas
shl
xlat
ret
pop
out
push
xchg
jae
sbb
repz
xor
in
jnp
xchg
sbb
outsb
std
ret
mov
sub
sub
and
test
cmp
push
adc
addr16
pop
fildll
push
dec
insb
int3
cld
mov
in
lods
inc
sbb
adc
and
xchg
push
inc
int
adc
xor
mov
adc
cld
rorb
and
imul
push
and
pusha
fwait
movsb
pop
outsl
and
mov
xchg
je
cmp
cmc
sbb
outsl
mov
roll
inc
mov
mov
outsb
test
xchg
pop
push
rcr
pop
in
fstpl
insb
and
lcall
lds
mov
sub
xchg
push
push
cltd
cwtl
pop
mov
sub
fistpll
mov
push
and
test
call
mov
cwtl
xchg
push
cmc
inc
mov
push
cmpsl
sbb
or
mov
mov
call
aaa
xor
fs
stc
jo
cli
in
in
push
jne
cmp
out
or
cmp
adc
repnz
mov
or
das
jl
test
subl
int
push
add
pop
mov
ja
or
sbb
xor
inc
int
and
cmpsl
imul
jmp
mov
or
aaa
movsb
sbb
mov
lret
dec
clc
pop
call
mov
xchg
sbb
push
out
xchg
sti
jbe
xorb
lods
lret
mov
push
jg
int
nop
leave
adc
ljmp
xchg
test
mov
insb
std
mov
dec
xor
in
push
mov
sub
rcrl
test
or
and
push
shlb
dec
add
outsl
lea
push
mulb
cmp
in
out
mov
xchg
sub
dec
xchg
mov
cmp
or
in
loop
xchg
shl
mov
addr16
add
cwtl
push
fsubs
repz
xchg
mov
jle
fucomp
inc
xor
insb
xchg
mov
dec
sahf
in
outsb
mov
sbb
adc
mov
or
and
flds
pushf
lods
mov
cmp
lcall
xchg
xor
jae
jle
lds
int
adc
test
push
sub
fwait
popf
mov
call
hlt
mov
mov
add
movb
outsb
add
vcvtdq2pd
sbb
pop
or
lock
or
mov
mov
les
jg
test
jg
cmp
into
push
and
inc
mov
sub
mov
jge
gs
insl
je
adc
and
sbb
ss
in
mov
sbb
andb
bound
popa
adc
das
push
jae
or
or
push
test
out
ficoml
andl
cmc
pusha
addr16
fucomip
dec
adc
jl
fadd
xchg
stos
loopne
out
lret
out
sub
cltd
daa
cltd
clc
jns
cmp
ds
inc
addl
and
mov
push
sub
fwait
mull
cmp
lret
push
cli
test
mov
lcall
movsb
test
bound
lahf
mov
adc
dec
int
lock
mov
push
movsb
subb
in
rcrb
adc
aad
mov
sbb
sbb
jle
xchg
mov
repnz
outsb
int
in
js
sub
int3
in
xor
jp
inc
mov
xchg
inc
sub
cs
inc
imull
jl
jns
mov
pop
sub
cmp
hlt
xchg
mov
xor
mov
add
lcall
and
cs
out
sub
sub
xchg
jbe
insb
lods
lcall
mov
dec
dec
xor
scas
cli
pushf
nop
stc
mov
xor
insb
dec
sti
lods
ljmp
je
fadd
mov
loope
cld
push
fwait
loope
adc
in
sub
arpl
pop
fmull
lods
mov
mov
jnp
call
lods
in
aas
pop
sahf
inc
and
hlt
data16
pop
fucomip
cli
xchg
cltd
sbb
and
loope
mov
out
xor
and
xor
in
rclb
mov
push
jp
test
sti
cmp
sbb
enter
scas
cli
test
test
xchg
sub
pop
test
jge
in
cmp
add
mov
lods
or
mov
cmp
pop
test
in
mov
mov
cs
mov
cmp
xor
divb
lods
and
xchg
fldt
pop
pop
movsb
gs
adc
sub
scas
movsb
mov
aad
sub
or
out
and
cmp
outsl
mull
mov
xchg
mov
lahf
std
sbb
imull
cmp
cs
out
cwtl
inc
xlat
inc
fsubl
fildll
movsb
fldl
adc
and
jmp
mov
in
adc
inc
icebp
adc
fistl
dec
movsl
jnp
movsl
or
mov
push
xlat
rcr
out
add
inc
popa
inc
lea
pop
lods
adc
jg
sub
sub
mov
insb
sub
les
aad
cmp
mov
push
xlat
pop
jb
sub
push
les
mov
dec
mov
and
mov
imul
xchg
lods
push
popf
clc
fucom
ja
imul
pop
pop
into
jne
mov
nop
ret
jbe
mov
add
mov
mov
pop
arpl
mov
xchg
cwtl
dec
mov
daa
mov
int3
push
test
adc
add
shll
fstpt
arpl
or
nop
inc
addr16
test
adc
sahf
lods
ret
rcrb
xchg
test
stos
jmp
insl
xchg
and
or
lret
in
popf
adc
insl
lea
leave
jle
test
adc
insl
jb
fsubrl
mov
call
out
ja
dec
cmp
push
mov
aam
movsl
inc
out
and
ds
pusha
sarb
cmp
push
inc
popa
leave
pop
andl
xor
loop
pop
pusha
mov
mov
pushf
xor
jne
movsb
add
jge
and
insb
inc
out
lret
inc
xchg
jp
and
pop
lcall
rorb
sub
push
lds
testb
mov
inc
sbb
push
sahf
pop
test
call
ficoms
adc
mov
sub
adc
push
outsb
imul
popa
rorb
inc
adc
outsl
add
dec
fdivrs
ficompl
and
xchg
lahf
mov
aad
xchg
xorb
mov
enter
inc
fsubrl
add
mov
pusha
call
mov
scas
ret
push
pop
mov
stos
pusha
popf
in
shrl
int
mov
addr16
shrb
dec
inc
add
pop
xchg
out
lahf
negb
fcmovnb
fsub
mov
mov
push
xlat
outsl
data16
js
data16
mov
test
test
fxch
pop
adc
and
add
or
leave
xchg
mov
test
loope
push
outsl
int
push
aas
sbb
lds
movsl
pop
not
adc
xchg
aas
fiaddl
xor
jg
popa
cltd
mov
std
lcall
mov
dec
adc
add
pop
movsb
inc
jae
stos
mov
stos
out
leave
inc
xchg
rcll
addr16
pusha
or
add
lret
cs
int
jns
push
jae
je
pushl
lds
jbe
cmpl
mov
jbe
dec
mov
push
sahf
adc
mov
or
pop
movsbl
pop
adc
pop
cmc
pop
pop
cli
jno
mov
lock
addb
gs
dec
pop
imul
or
call
insl
ja
or
scas
pop
xor
mov
addb
sbbl
dec
js
lock
fnstcw
in
js
icebp
add
jb
test
push
je
out
mov
and
aaa
ja
mov
cltd
lds
je
test
imul
punpckhbw
ds
adc
cs
adcb
sbb
aas
loop
jmp
ud1
xchg
adc
xor
out
add
lcall
jbe
xchg
push
icebp
out
mov
in
lock
ljmp
and
dec
push
aas
mov
adc
ja
insl
dec
jle
rcll
jge
imul
adcl
fdiv
add
sbb
cwtl
jns
loope
dec
xchg
mov
inc
adc
ret
fcoml
lods
popa
adc
cmp
or
repz
dec
orb
mov
ret
pop
test
sarl
dec
push
dec
cmpl
shrl
add
mov
add
dec
sbb
dec
fdivs
in
test
les
or
subb
xor
push
cmp
fisubs
call
mov
or
aam
or
lret
and
add
sbb
sti
int
jp
sub
mov
mov
repnz
dec
insl
stos
mov
sub
cltd
lea
fisttps
dec
add
mov
pop
and
or
mov
hlt
or
mov
jbe
imul
mov
push
xchg
cmpsl
mov
cli
cmp
jg
xor
aaa
mov
sti
mov
mov
popf
lods
lret
fistl
push
lods
imul
push
and
fistl
push
out
adc
sub
mov
adc
or
mov
mov
dec
jl
rcl
or
dec
xchg
adc
mov
imul
sub
xor
ja
not
adc
push
mov
add
lods
call
mov
outsl
pop
movsl
mov
jbe,pn
stos
dec
dec
fsubl
push
or
dec
into
inc
or
xchg
fisttpll
or
mov
xchg
cwtl
shll
lods
fmull
mov
notb
cmp
cmp
push
push
leave
lret
dec
inc
mov
fistl
shrb
sub
push
enter
dec
lcall
sub
cwtl
dec
popa
push
inc
ret
push
jl
dec
sbb
mov
test
xor
push
in
lahf
jae
jl
push
enter
lods
das
and
jnp
mov
lods
mov
dec
cmp
lcall
addr16
mov
mov
inc
dec
or
xchg
fisttpll
cs
cmp
or
cmpsl
enter
pop
and
or
loopne
jg
push
jge
jl
mov
mov
aaa
xchg
sbb
cmp
and
pushf
adc
insl
leave
ds
or
mov
daa
test
dec
xchg
inc
dec
xchg
mov
jge
cmp
jle
lods
das
fwait
movsl
movsl
fs
aam
mov
jns
sub
imul
jnp
sahf
cld
cltd
jo
inc
pop
outsb
xchg
hlt
loope
out
clc
mov
je
mov
push
jnp
jae
aaa
mov
mov
xor
adc
iret
lods
nop
xchg
dec
xchg
aad
in
outsb
pop
jbe
inc
cmc
xchg
les
mov
adc
pop
imul
inc
xchg
or
movsl
fisttpl
pop
pushf
sbb
xchg
or
bound
jnp
xchg
cmp
and
fcmovbe
ds
sbb
sub
mov
js
nop
sub
xorb
sub
andl
pop
insl
out
in
testb
lea
sub
shll
pop
xor
lods
xchg
push
daa
cmp
ss
addb
xor
or
fisttpl
test
aam
addl
aad
mov
and
mov
pmulhw
jbe
xchg
dec
adc
repz
scas
jae
mov
cmp
sbb
adc
fcoml
mull
in
cmp
jle
icebp
pop
into
add
ljmp
mov
xchg
cmp
inc
inc
add
sub
pushf
pop
xor
stos
inc
cmp
aas
lods
jnp
add
xchg
pusha
jmp
jbe
mov
adc
leave
fs
loop
inc
add
xchg
xor
mov
push
push
notl
jmp
imul
lods
outsl
jl
lcall
les
jg
rcrl
in
dec
mov
or
sub
outsb
rclb
mov
aas
fildll
mov
ljmp
call
setb
enter
call
and
add
pop
dec
sbbl
jb
xchg
mov
and
sarb
mov
cs
dec
push
sub
mov
lods
cmp
cmp
or
enter
cmp
rcll
out
push
mov
mov
dec
icebp
mov
add
add
popf
rcrb
xor
mov
pop
or
jo
cmp
adc
iret
pusha
popf
mov
cmpsl
add
and
out
fmuls
or
mov
add
data16
std
pop
outsl
add
sbb
mov
in
icebp
gs
mov
dec
mov
out
lods
cmp
jbe
movsl
and
stos
and
movsl
call
and
inc
dec
shll
cwtl
call
dec
pop
mov
mov
xchg
xchg
ss
fisubl
hlt
mov
dec
dec
push
js
mov
dec
add
cmp
push
mov
data16
dec
jge
das
xor
dec
out
sar
outsb
stos
js
adc
sbb
leave
mov
mov
mov
dec
pop
adc
cmovno
pop
bound
out
loopne
sbb
mov
setno
push
sar
inc
push
jle
add
mov
jmp
scas
sbb
jns
stc
into
xchg
xchg
hlt
and
lea
icebp
lds
xorl
xchg
pop
and
adc
mov
std
cmc
xchg
jae
inc
rcr
ds
rcll
and
jo
push
xchg
int3
aaa
pop
scas
or
iret
dec
lcall
inc
cmp
out
add
mov
or
testl
push
lock
arpl
ret
in
adc
scas
sub
jb
jmp
cwtl
in
orb
cmpsl
faddl
mov
add
pop
fimull
mov
dec
ficompl
mov
lods
push
test
popa
pop
fistpll
dec
jae
icebp
inc
xor
dec
inc
imul
xor
flds
lcall
leave
push
shl
popa
xor
jle
mov
dec
push
sbb
das
das
pusha
mov
xor
insl
js
sahf
imul
pop
dec
in
push
pusha
pop
subb
mov
popa
mov
fiadds
int3
inc
adc
je
scas
adc
xchg
mov
push
or
in
in
aad
shll
or
mov
adc
cmpsl
fwait
push
sbb
mov
sub
xchg
jno
movsl
push
or
sub
cmp
mov
mov
faddp
iret
into
ss
mov
push
scas
ficoms
mov
mov
cmpsl
outsb
xor
imul
inc
and
jb
pop
popf
pushf
imull
push
xor
ljmp
jb
jmp
rorl
xor
adc
gs
cmp
push
stos
mov
inc
outsb
mov
inc
addb
jg
cli
xchg
add
jns
dec
and
dec
pop
cld
ljmp
lret
mov
dec
push
sub
inc
cmp
test
adc
es
into
loop
jmp
aas
push
dec
push
xchg
pop
pop
sub
mov
dec
sub
filds
jns
jp
in
jns
fcoms
popa
or
xchg
mov
js
idivl
daa
xor
les
lcall
ret
out
and
mov
jbe
adc
lahf
movsl
add
lds
popa
movsb
andb
test
pusha
pop
push
out
xchg
xchg
push
and
aas
sti
inc
and
cmp
shll
add
cmp
cmpsl
sahf
out
mov
fidivs
shl
mov
push
pop
shl
inc
nop
add
cmp
les
cmp
mov
sub
cld
push
mov
pop
sbb
mov
sub
jnp
sbb
sbb
loope
inc
pop
lea
repz
sbb
pop
popf
fisubrl
fucomi
mov
or
mov
or
push
jo
cmp
or
or
sbb
jecxz
lcall
cmpsl
xor
mov
cmpl
or
insb
loopne
sahf
je
pop
aas
or
xchg
loope
sbb
push
out
mov
pop
cmc
sti
xor
mov
and
xchg
sbb
mov
inc
and
stos
insb
aad
sbb
jmp
imul
out
inc
jnp
popa
popw
adc
lahf
notl
pop
pop
in
mov
push
hlt
sbbl
or
xchg
mov
test
mov
adc
shr
add
mov
mov
imul
xor
push
jno
cwtl
divb
fcoml
push
xchg
dec
clc
mov
scas
aam
insl
push
scas
add
sbb
ja
push
jge
fst
ret
push
cld
andl
or
adc
ror
pop
xchg
mull
inc
push
or
loop
sbb
rolb
loope
lods
je
jnp
ss
loopne
fidivl
lcall
aas
addl
push
pop
xchg
sbb
fisubs
mov
cmp
jge
insl
xor
enter
or
push
fnstcw
popf
or
outsb
lahf
cmpsb
mov
jle
inc
cld
xor
xor
loopne
out
xchg
ljmp
cmp
cld
out
xor
mov
sub
mov
add
mov
mov
dec
shll
test
inc
movsb
jge
xor
jmp
xchg
aas
jno
insb
popf
cltd
popf
cmpsb
xor
in
fs
mov
int
and
out
mull
daa
pop
xchg
push
pop
cmp
scas
mov
lret
xor
sub
xchg
stos
xchg
mov
push
jl
outsl
and
dec
shlb
icebp
xchg
cmp
mov
dec
lea
xchg
pop
aas
lcall
pop
or
cld
sahf
aas
loope
fwait
addr16
push
adc
cmp
xchg
push
push
out
cmp
cmp
jp
pop
inc
fldcw
stos
call
test
mov
cli
xchg
dec
scas
jge
mov
cmp
aam
aam
add
popf
aaa
ja
lcall
dec
mov
pushw
jno
push
fiaddl
sbb
call
or
bound
outsb
jnp
fdiv
into
cmpsb
out
or
sbb
mov
test
andl
xchg
xorb
mov
mov
xor
fdiv
cltd
fsts
push
aam
ret
mov
andl
outsb
sub
mov
cmc
test
xrelease
sub
xchg
fldcw
test
ljmp
lods
xchg
inc
fisttps
mov
outsb
adcl
das
popf
xor
mov
insb
rcrl
mov
out
mov
in
outsb
or
cltd
lret
xchg
rclb
pop
fwait
mov
or
xor
bound
mov
sub
rcl
add
dec
mov
cli
aam
leave
rcl
mov
and
repnz
jge
sbb
and
addr16
lret
lock
pop
jo
test
mov
add
and
lcall
jl
outsl
adc
xchg
testb
addl
insl
divl
jle
xor
repz
push
jb
in
lcall
mov
mov
push
rorb
and
push
xchg
add
rcrb
movsb
cmp
pop
sbb
push
aaa
cli
cmp
mov
jmp
scas
inc
mov
or
xor
inc
arpl
fimull
notb
mov
and
mov
sub
loopne
pop
jae
outsb
sahf
push
cmp
mov
lret
push
push
ss
ds
xor
lret
fisubrl
jne
jp
imull
mov
or
imul
mov
sbb
call
repnz
js
insb
subb
xchg
pushf
lcall
scas
adc
dec
pop
xchg
fnstsw
out
cwtl
mov
jp
push
jns
xor
cmp
sar
mov
mov
mov
jne
push
shrl
mov
lret
and
jbe
daa
mov
rcrb
jmp
outsb
testl
movsb
les
shl
mov
mov
xor
mov
iret
clc
adc
add
out
and
fadd
popf
mov
daa
fisubrs
dec
jge
or
pop
cld
lret
cmp
out
dec
ss
inc
lret
add
es
adcl
lea
cli
subl
lods
loopne
jnp
mov
clc
je
ljmp
ds
loop
mov
cmpb
in
ret
mov
cmpl
mov
ror
iret
cmpsb
adc
mov
cld
jge
lret
daa
sub
outsb
add
sbb
insl
sti
jecxz
cmp
jbe
or
aas
in
hlt
test
cmp
cs
outsl
rcrl
pop
fnstsw
adc
adc
xor
ljmp
push
mov
xchg
inc
pusha
adcl
sbb
nop
xchg
leave
jbe
lcall
sub
pop
stos
imul
jp
sbb
jmp
xchg
ret
mov
xchg
adc
xchg
iret
stos
aad
sbb
xchg
out
pop
lea
mov
icebp
loop
xchg
and
cmc
add
lret
inc
loope
xchg
pop
adc
cmp
cmp
push
mov
xchg
popa
push
aam
sub
cmp
and
pop
repnz
or
inc
mov
and
ret
adc
divb
in
cld
mov
das
lock
adc
or
es
in
dec
xor
lods
mov
adc
in
and
and
lods
addr16
in
lds
sahf
clc
insb
mov
negb
pop
push
and
pusha
lea
bnd
popa
adc
pop
mov
mov
and
movsb
lret
into
push
mov
add
jno
and
movsl
scas
cli
cs
mov
or
adc
test
adc
adc
pusha
imul
mov
mov
fwait
int
hlt
push
xor
stc
push
sub
cmc
shl
stos
xchg
xor
add
jb
lods
orb
lock
dec
mov
mov
test
adc
mov
xchg
dec
repz
mov
jp
or
pop
add
sub
cmp
dec
cld
icebp
jbe
outsb
loope
ror
mov
out
jmp
inc
cltd
rcrl
pusha
jle
push
add
insl
jmp
mov
add
hlt
test
sbb
je
mov
fldcw
dec
mov
scas
mov
lcall
cmpsl
sub
sbb
out
mov
addr16
popf
xor
inc
pop
jmp
aas
mov
ficomps
dec
xor
fadd
mov
js
push
jbe
sbb
fisubrl
ficoml
mov
mov
mov
enter
repz
cmp
sbb
test
inc
and
into
adc
dec
test
push
mov
cmpl
enter
push
mov
cld
push
push
ss
mov
pop
loop
hlt
in
sbb
dec
add
test
and
inc
or
popa
stos
jge
imul
cltd
inc
das
je
out
cwtl
sub
mov
pushf
cmp
pop
outsl
leave
es
test
addr16
imul
inc
insb
inc
and
inc
mov
mov
in
pusha
divb
fnstcw
lods
adc
push
pop
mov
stc
rclb
jne
and
xor
insl
xchg
sub
shrd
mov
pop
or
cltd
push
mov
xchg
sub
jae
mov
mov
shrb
cmp
rcrb
sbb
jae
pusha
fists
push
or
out
dec
sub
aaa
stos
and
dec
rorl
sub
test
mov
nop
cltd
jge
cli
sbb
ja
or
dec
pop
push
push
add
push
in
jo
popa
xchg
push
pop
xchg
aam
shl
add
sbb
ljmp
push
jo
loop
jmp
sbb
decb
cs
mov
jbe
jecxz
and
popf
loopne
jge
movb
fcoml
es
mov
inc
xchg
iret
popf
and
sbb
scas
pop
clc
and
rol
mov
push
or
lahf
test
pusha
rcrl
push
sarl
pop
int
lea
popa
aaa
cwtl
and
or
xor
call
xlat
in
fisubs
std
sub
call
es
fists
je
test
push
xchg
inc
repz
aad
mov
mov
inc
lds
xchg
daa
sub
cmp
add
fnstcw
mov
mov
mov
push
pop
dec
dec
lds
std
nop
mov
sbb
lds
sub
mov
mov
mov
test
cmp
push
mov
sarl
dec
in
fimuls
aam
jp
jl
shlb
addr16
cmpsb
lahf
add
xor
xor
push
mov
repz
movsb
aam
ret
or
pop
add
mov
cmp
clc
les
orb
jo
shrb
xchg
pop
stc
mov
xor
cmp
push
inc
movlps
jecxz
cmovns
inc
and
push
push
mov
test
or
call
mov
in
ds
int
cli
je
push
jp
lret
mov
sbb
cmp
ret
pop
arpl
out
jns
xor
jo
jecxz
dec
jo
cmp
and
icebp
rcll
mov
or
sub
push
xor
inc
das
sar
repnz
mov
pusha
call
in
inc
dec
cmp
es
inc
and
aam
pushf
lock
pop
int
sbb
cli
dec
shll
cmpsl
pop
addr16
push
mov
lods
pop
mov
fadds
push
ss
loope
mov
push
lods
rcl
ja
int
arpl
mov
cld
push
add
fmull
jbe
push
in
enter
mov
lahf
mov
insl
dec
repnz
cmpsl
cmpsl
mov
cld
lret
or
fstpt
dec
or
xchg
inc
adcl
sub
mov
clc
cmp
xchg
dec
ret
and
cmp
jno
xor
pusha
pop
mov
xchg
rolb
mov
cmp
rorb
mov
sbb
xor
lods
je
das
jb
jmp
sbb
stos
jg
or
cmp
jns
sbb
shr
popf
lahf
mov
cli
dec
sub
sbb
scas
pop
sbb
outsb
adcl
je
lods
mov
movsb
sti
sbb
aas
dec
dec
mov
xchg
nop
cmc
mov
les
or
aam
sub
cs
andl
call
pop
aad
lea
dec
test
pop
lds
jecxz
xchg
jno
ja
enter
jmp
fsubr
and
aaa
mov
sub
xchg
sub
movsl
subl
xchg
lcall
cmpsl
test
cmp
lock
dec
mov
sub
icebp
mov
mov
or
jecxz
fiaddl
sub
cs
jg
out
arpl
sbb
push
jo
leave
ss
imul
mov
fisubrs
mov
inc
inc
pop
pushf
xchg
mov
or
add
pop
inc
js
xor
fwait
mov
cmp
imulb
inc
std
inc
aas
inc
dec
rcll
xchg
inc
out
xor
sub
testb
mov
aaa
jle
pop
dec
xchg
sbb
mov
pop
movsb
inc
and
scas
das
xor
std
lock
jmp
jb
in
lret
js
pop
imul
cwtl
arpl
sbb
movl
sbb
push
flds
sbb
repz
dec
lods
cwtl
fcmovne
jle
sar
and
fstpt
in
add
adc
shlb
or
mov
xor
mov
sub
loopne
orb
xchg
aas
cmp
popf
fistps
dec
adc
in
push
mov
inc
dec
jmp
and
lods
cmp
pusha
and
xlat
dec
mov
push
adc
sub
pusha
sbb
xchg
repz
iret
adc
lds
iret
lcall
mov
pop
data16
dec
ljmp
cwtl
enter
or
stos
lcall
push
cld
cs
jecxz
fcoml
stc
push
repnz
addr16
push
push
jne
and
and
dec
cmp
mov
inc
cmpsb
sbb
mov
jno
push
sbb
stos
pop
mov
stos
xor
test
dec
add
sarl
and
and
sub
xorl
fwait
jo
icebp
addr16
lret
push
dec
test
in
stos
sahf
mov
mov
lock
faddp
push
pop
lea
xlat
xor
cmpb
sub
addr16
imul
pop
jo
jecxz
in
jno
hlt
push
sti
inc
andl
dec
adc
mov
jbe
std
stc
ret
shrb
inc
add
sub
push
call
daa
and
pop
test
mov
push
inc
clc
mov
adc
stos
mov
push
cmpl
andb
popa
mov
adc
or
mov
mov
adc
and
loop
mov
addl
ja
sti
jecxz
ffreep
pop
mov
in
pop
and
insl
ror
shlb
sub
jno
movsl
fwait
cmp
out
imul
pusha
xor
cld
xchg
dec
dec
lea
loop
enter
cmp
cmp
loope
clc
pop
cmc
lret
cmp
cltd
lods
inc
daa
push
mov
shrb
ret
push
jae
sahf
divb
jecxz
movsl
inc
lock
mov
fisubrs
cmp
lret
mov
pop
or
add
mov
out
ss
jl
ljmp
sbb
jp
adc
or
cmpsl
push
movsl
sub
aad
push
cld
mov
add
cltd
adc
adc
xchg
push
es
movsb
std
shll
dec
in
mov
sub
mov
jnp
jl
aad
mov
cmc
xor
outsl
sbb
xor
addr16
iret
pslld
movsl
in
mov
inc
and
hlt
je
lds
sbbb
sbb
movhps
pop
xor
and
cmp
popf
pop
addr16
inc
ss
sbb
push
adc
and
rorl
mov
and
lret
cltd
and
cmp
sbb
dec
dec
adc
add
repz
jmp
jmp
mov
mov
xchg
pop
int
pop
pop
adc
adc
call
mov
lret
and
inc
sub
jno
push
sub
outsb
subb
push
adc
gs
shlb
rcrl
js
rol
fldt
mov
dec
pushf
movsb
and
add
mov
push
rorb
mov
ret
xchg
inc
add
add
shll
ret
sbb
repz
xor
sbb
stos
push
mov
mov
aaa
ficomps
addr16
out
pop
add
loope
insb
shlb
cmpsb
test
mov
jp
sahf
iret
sbb
mov
lock
scas
stos
xor
cmp
dec
mov
add
mov
jbe
cmp
mov
fsubl
jmp
xor
movsb
xchg
andb
adc
pop
pop
loop
or
icebp
sbb
test
mov
sbb
pop
or
dec
popfw
div
adc
adc
pop
scas
mov
adc
or
cmp
push
jne
inc
lea
arpl
or
pop
xor
and
scas
mov
xchg
leave
das
inc
lds
xor
jg
xchg
inc
test
data16
pushf
lock
into
xchg
mov
lcall
mov
jge
pop
lcall
mov
add
out
push
fistl
dec
sbb
pusha
inc
dec
dec
mov
sub
movsl
jl
mov
jnp
fwait
mov
jae
out
lldt
xor
sub
add
rcr
dec
dec
fwait
negb
add
and
lahf
dec
sbb
inc
inc
xor
push
jp
mov
add
push
pop
mov
pop
xor
leave
sbb
pop
js
or
mov
hlt
mov
xlat
loope
sub
mov
enter
xchg
add
movsl
cwtl
loope
daa
inc
add
dec
mov
ja
dec
mov
scas
sub
loope
arpl
push
inc
ret
xchg
cmpsl
dec
imul
cli
out
js
aad
test
pop
in
pop
fcomi
std
int
bound
adc
cmp
loop
inc
jnp
imul
lods
in
into
or
sbb
sub
aam
jb
pop
mov
mov
mov
js
inc
mov
jb
les
outsb
fists
inc
pop
out
out
and
jmp
leave
sbb
ja
push
inc
aad
lods
das
mov
loope
shrb
cmp
les
fwait
mov
push
ds
cmp
jmp
data16
and
cwtl
ljmp
imul
add
adc
fimuls
cmp
mov
push
sub
lcall
cld
mov
das
loope
cmpl
addr16
test
les
movsb
js
icebp
jg
jns
repz
dec
leave
enter
into
push
into
frstor
jp
insb
or
push
pop
push
mov
roll
scas
addb
jno
or
and
xor
jno
xorb
or
xlat
mov
sbb
insl
leave
gs
popa
cmp
or
push
jge
jb
xor
cmp
dec
pop
inc
imul
add
cmp
xchg
stc
add
std
lods
and
ds
adcb
jmp
movsb
lret
pop
icebp
sub
and
mov
and
insl
dec
repz
pop
xchg
sti
inc
jb
or
shld
lret
push
xchg
gs
ret
mov
std
pop
or
fdivrs
and
cmp
pop
cs
lea
or
insb
loop
lds
jo
xchg
pusha
sub
aam
sub
jg
mov
dec
or
fcmovnb
call
cmp
mov
imul
mov
icebp
cltd
mov
mov
movsl
cmp
push
push
mov
or
mov
inc
jmp
cmp
int
out
pop
pop
pop
std
loopne
sbb
push
inc
sbb
sbb
test
pop
inc
mov
lods
dec
mov
or
roll
scas
inc
addr16
addb
test
loope
mov
inc
dec
dec
adc
fists
cmp
sub
leave
mov
jae
int3
or
sbb
iret
out
jnp
mov
lret
in
mov
ja
aaa
jb
out
sub
fisttpl
and
xchg
cli
cmp
push
xor
jge
mov
into
push
insb
mov
adc
fsubrl
xor
sbb
jno
sub
jmp
ljmp
add
int3
mov
pop
inc
ja
insl
xor
mov
out
push
imul
test
xor
and
pop
in
ret
push
enter
imul
xchg
xchg
adc
jle
mov
filds
jo
mov
cltd
mov
push
cmp
or
jmp
sub
ljmp
inc
cmp
add
and
sbb
and
outsb
sahf
mov
inc
jns
jge
dec
imul
add
in
ret
into
ja
inc
push
scas
xorb
xor
or
pop
cwtl
pop
fimull
clc
adc
sarb
js
ds
pop
push
lret
ficoml
stos
addb
rcll
icebp
jl
add
mov
xor
mov
js
ret
mov
outsl
ficoms
add
or
jp
xchg
add
sbb
mov
mov
mov
sub
nop
imul
gs
cwtl
ret
fisubrs
rorb
pop
pop
ja
sbb
sub
xchg
dec
dec
add
fdivl
jp
pusha
dec
in
xchg
lcall
adc
mov
pop
jb
loope
jecxz
adc
mov
inc
mov
stos
push
cmp
call
xchg
out
pop
xor
aaa
jle
mov
out
fsubrs
inc
fs
clc
cs
mov
add
dec
das
cwtl
and
imul
in
ja
pop
jbe
cmpsl
cmp
sub
sbbb
je
das
mov
clc
mov
aas
test
mov
push
push
adc
int3
mov
imul
dec
cmp
sub
gs
test
and
sbb
insb
and
mov
and
mov
rorb
je
or
xor
sub
pop
sub
push
mov
clc
push
xchg
mov
fstps
cmp
daa
fadds
pusha
call
aas
sti
cmp
fwait
cltd
mov
dec
pop
lods
ficompl
ret
or
std
pop
sbb
sub
xchg
dec
testb
hlt
call
testl
ja
mov
sub
inc
xchg
sub
mov
jmp
decb
mov
roll
sahf
inc
sahf
jp
sahf
je
push
fs
mov
sbb
lea
inc
push
enter
hlt
sarl
adc
rcrl
xor
cltd
jge
stos
push
push
enter
push
in
andb
scas
shrb
cmp
dec
repz
xchg
xor
push
je
pop
jge
adc
rolb
and
jbe
pop
jne
or
add
call
mov
cmpl
loop
sub
daa
cmpsl
xchg
out
cmp
mov
aam
test
inc
loop
inc
outsb
shrl
dec
xchg
cltd
xchg
xchg
aad
mov
and
in
in
jbe
sub
loop
mov
jnp
ss
or
and
cmp
adc
outsb
inc
loopne
lret
adc
scas
fs
mov
pop
xchg
push
add
inc
sbb
inc
xor
push
int
mov
jmp
pushf
ret
shll
pop
pushf
dec
mov
xchg
xor
mov
addr16
mov
sbb
or
aaa
imul
outsb
xchg
lcall
rol
cmp
sbb
and
xchg
and
push
outsl
push
xchg
and
in
pop
fisttpl
add
outsl
ja
lret
fiaddl
and
nop
add
mov
mov
dec
test
fwait
add
push
dec
mov
into
cltd
popf
mov
outsl
sbb
mov
repz
dec
scas
or
add
jae
rol
xchg
add
dec
int3
test
jp
shll
or
push
xchg
test
inc
sti
mov
in
pushf
lcall
scas
jle
out
in
dec
sahf
inc
xor
jns
fldl
rorb
adc
jb
and
adc
dec
outsl
pop
sbbb
pop
mov
call
push
pop
lock
cmp
add
mov
jbe
lods
and
xor
aam
xchg
mov
add
call
cld
pop
xor
mov
adc
or
mov
cs
xor
insb
jns
test
pop
negb
fdivl
mov
add
out
xchg
adc
xchg
xchg
in
mov
adc
test
out
cwtl
mov
adcl
or
or
imul
mov
cmp
shr
jnp
test
popa
lahf
mov
mov
adc
subl
inc
push
xor
call
clc
out
stc
and
mov
adc
nop
fisttpll
jge
push
mov
scas
fimull
cmp
push
or
jae
or
fstpt
dec
cmc
xchg
inc
xchg
jle
stos
outsl
pop
mov
pop
cltd
dec
inc
inc
int3
dec
xor
fdivl
mov
jno,pt
mov
mov
add
xchg
sbb
daa
out
sbb
mov
dec
stos
out
or
xor
test
arpl
inc
scas
cld
test
rcl
adc
add
mov
lods
inc
lods
pop
into
lahf
inc
iret
ds
iret
pop
shrl
xchg
add
dec
pop
push
or
pop
cmp
xor
mov
push
jge
shl
pushf
xor
stc
sub
shll
into
aaa
mov
imul
stc
mov
sahf
dec
push
in
lea
mov
popa
and
sbb
pusha
push
dec
jns
cs
xchg
mov
push
pushf
ret
xchg
rcl
dec
dec
pop
adc
mov
add
es
iret
mov
fldcw
std
mov
mov
test
cmc
jns
cmp
out
jmp
xor
les
pop
xorl
inc
add
adc
mov
pop
sub
jbe
rep
and
fidivl
push
or
scas
jle
sub
push
dec
sarl
lret
add
ret
rcl
jnp
push
and
push
xchg
aas
leave
loop
pop
xchg
xor
cmpsl
sti
or
test
insl
adc
dec
pop
outsb
icebp
aaa
xlat
imulb
add
add
out
imul
xchg
push
jg
loop
add
adc
dec
and
jnp
leave
push
cwtl
jbe
fucom
pop
push
inc
and
mov
test
push
dec
xor
or
mov
adc
xorb
lods
shrl
iret
or
pop
lahf
jg
repz
jbe
mov
fmulp
addr16
inc
sub
pusha
xor
mov
fsts
insb
clc
lahf
and
addr16
movsb
std
mov
sbb
jmp
lret
adc
pop
xchg
mov
lea
mov
push
sbb
inc
push
xchg
daa
add
sub
rcll
enter
or
cmpl
and
xor
xor
mov
popf
xor
ja
fcompp
add
inc
xor
push
cmpsb
xchg
mov
div
xlat
inc
dec
fsts
aas
xchg
inc
popf
std
dec
ficompl
in
pop
jae
stos
adcl
dec
imul
xchg
in
lea
hlt
leave
mov
push
int3
aas
xchg
sbb
add
js
mov
jge
nop
pushf
leave
int
pop
addr16
xchg
in
xchg
mov
inc
dec
pop
push
jmp
push
adc
pushf
stc
xchg
lcall
jmp
inc
cmp
pop
xchg
sbbb
dec
js
mov
and
mov
xchg
mov
imul
pop
or
inc
fidivl
pop
arpl
inc
out
and
inc
push
and
sbb
xor
faddl
repz
push
lahf
out
mov
mov
mov
pop
jle
fstl
push
mov
mov
sbb
mov
icebp
jecxz
mov
loopne
out
stc
sbb
inc
test
jo
jbe
hlt
fcmovu
push
cmp
adc
into
push
gs
adc
int3
xlat
shrl
mov
cmp
push
pop
das
int
nop
and
cli
jle
and
mov
adc
popa
lret
cmp
cmpsb
lret
shll
sub
jne
jmp
loope
cli
fstl
xor
and
mov
loopne
mov
divl
push
cmp
mov
xchg
jl
popf
mov
movl
dec
inc
dec
adc
pop
push
andb
jae
xor
imul
mov
xchg
idivb
push
loope
pop
pop
cmp
xor
out
shr
or
mov
inc
add
jne
loop
repz
popf
call
or
arpl
cli
test
mov
add
shrl
in
adc
mov
push
fistps
xor
push
adc
mov
pusha
mov
ja
pop
jne
push
cmpsl
lret
leave
xchg
pushf
xor
insl
xchg
pop
dec
xor
and
addb
ret
mov
rolb
sbb
or
adc
mov
xor
mov
xchg
cwtl
insl
pop
pop
pop
or
adc
jp
repz
xlat
jl
or
jmp
xorps
add
xchg
push
cmpsb
xchg
mov
adc
or
dec
pop
pushf
and
adcl
clc
or
sub
outsb
jg
pop
subb
or
fildll
or
adc
cmpsb
fwait
push
inc
dec
or
sbb
stos
outsl
or
ja
fld
jo
int3
lds
outsb
adc
xchg
push
iret
push
sti
scas
jecxz
jnp
out
adcb
push
cmpsl
mov
cmp
mov
sub
xchg
or
fstps
push
jb
out
ffreep
movsb
cs
mov
xor
jecxz
insl
out
sbb
orl
ret
jmp
add
insb
addl
add
sub
push
cli
roll
jecxz
xor
jp
lds
inc
je
push
xor
loopne
cmpsb
xchg
imul
mov
jl
sub
sub
outsl
xorl
cwtl
ss
pop
fildl
out
push
and
xchg
add
sub
decb
test
cld
jb
jae
aam
dec
cltd
adc
enter
xor
out
xchg
push
stc
lret
in
cmp
roll
xor
adc
xchg
add
xchg
out
fld
lcall
mov
adc
cwtl
mov
sbb
aas
idivb
adc
cmc
pop
mov
xorb
mov
adc
pusha
fs
sbb
dec
decl
xor
lods
mov
mov
adc
jp
sub
lcall
pop
mov
bound
out
imul
and
outsl
push
lock
dec
push
ljmp
and
daa
cmpb
dec
int
enter
add
add
jmp
adc
xchg
cmp
imul
jbe
roll
xchg
xor
flds
popf
pop
addl
lret
sbb
dec
ret
mov
jmp
mov
movsl
movsb
repnz
xor
mov
sar
ds
pop
cmp
ror
or
mov
icebp
mov
mov
push
inc
mov
sbb
xor
insb
push
outsb
jno
in
xchg
mov
repz
sbb
push
arpl
icebp
mov
sbb
repnz
or
cmp
ds
dec
clc
popa
pop
sub
xchg
loopne
mov
dec
ja
pusha
lods
push
fisubl
xchg
inc
je
cmpsl
gs
sbb
sub
stos
insb
faddl
xchg
sbb
cwtl
or
cmp
fimull
movsb
lret
movsl
cwtl
mov
mov
decl
stc
fisubs
push
movsb
dec
in
xor
jge
std
adc
dec
hlt
mov
shlb
fcmovnb
sbb
stc
mov
popf
outsb
fndisi(8087
loop
aad
jp
inc
adc
and
mov
xchg
cmp
imul
jno
cwtl
cli
mov
dec
lcall
ja
or
les
ja
xor
mov
fidivs
fldcw
xchg
movl
ljmp
pop
sub
enter
dec
add
push
std
ss
repnz
mov
push
incb
jne
sub
mov
dec
fwait
xchg
insb
pop
xchg
repz
adc
cmpsb
mov
aad
and
out
addr16
xor
stc
mov
mov
adc
imul
lods
call
jp
mov
nop
shl
icebp
stc
mov
pop
cmc
out
test
jo
sti
and
pop
js
and
xchg
cmpsl
jmp
xor
push
push
mov
ljmp
sbb
mov
jae
cltd
pop
pop
lahf
fildll
inc
sub
fsubp
sbb
cmp
mov
pushf
jno
push
dec
jne
adc
dec
mov
inc
cmpb
mov
lods
push
xlat
enter
push
test
negl
mov
movl
inc
mov
add
cs
in
rcrb
push
jl
add
popf
clc
add
loop
and
dec
mov
test
movsb
mov
movb
std
mov
cltd
adc
mov
cld
pop
mov
pop
xchg
mov
sbb
lret
cmp
fbld
push
fs
into
push
mov
pop
mov
lea
sbb
mov
dec
imul
fsub
push
aaa
divl
std
fwait
cwtl
subl
mov
sub
mov
xchg
aad
into
loop
and
leave
dec
stos
mov
xor
xor
pop
push
cmp
popa
xchg
or
loop
and
dec
pop
jne
int
mov
cli
movb
std
repnz
jecxz
out
int3
in
push
jbe
dec
xchg
lods
jecxz
jmp
les
push
pop
cmova
cli
sbb
dec
adc
sbb
les
js
mov
and
sbb
or
pop
ss
mov
cwtl
jno
adcl
movsl
jae
inc
fisubrl
pop
out
push
add
lcall
clc
das
mov
push
or
jbe
in
in
push
ret
out
cmp
pop
loope
movsl
mov
das
or
mov
pop
xchg
xchg
xchg
repz
push
mov
mov
in
out
data16
inc
xchg
iret
xchg
leave
sti
xchg
aas
sar
iret
xor
xchg
sub
or
xchg
adc
fucomp
jecxz
cmp
and
mov
xor
cmp
add
in
in
fistpll
iret
jl
add
mov
push
xchg
aad
push
jge
test
loope
rolb
mov
ljmp
jmp
sbb
cmp
loope
test
and
push
mov
iret
into
call
dec
mov
les
aam
jg
jge
mov
mov
cmpl
mov
dec
cmc
or
xchg
mov
cmp
out
xchg
repnz
out
mov
pop
inc
jle
fimuls
inc
lds
mov
mov
aas
sbbb
enter
ss
jnp
lahf
lock
adc
push
addl
sbb
xor
sbb
pop
adc
sbb
insb
subl
imul
cli
mov
enter
mov
adc
push
adc
xchg
pop
pop
xor
int3
jnp
aad
push
jae
test
cmp
jnp
xchg
popf
and
lea
rclb
shl
sub
leave
in
mov
mov
xlat
push
or
mov
mov
push
ljmp
adc
sbb
cmp
mov
push
lods
ret
mov
jecxz
or
outsb
and
pushw
mov
push
sub
add
popa
dec
daa
lret
addb
jae
and
push
mov
add
mov
push
xor
in
les
xor
adc
adc
mov
ss
xchg
repnz
adc
outsb
fsts
xor
jge
jae
add
insl
add
xchg
scas
push
call
inc
dec
jge
lahf
imul
ja
mov
jg
push
pop
xchg
call
cmp
cltd
adc
jle
mov
movsl
fs
sbb
dec
cmp
dec
imul
call
jns
push
or
je
sbb
adc
xor
ret
repnz
jmp
dec
add
pop
dec
hlt
fisubrl
xchg
xchg
mov
jge
neg
dec
mov
pop
pop
data16
jns
mov
roll
push
push
sub
and
jmp
jmp
movsl
mov
push
mov
daa
sub
repz
push
out
and
inc
jmp
sbb
shr
mov
stos
sbb
pop
idivb
test
push
cmpsl
sbbl
lea
nop
xor
mov
sbb
lret
fmuls
stos
cld
sub
in
mov
ja
or
cmc
inc
and
xor
mov
shl
lret
sbb
mov
jne
shlb
loope
test
jno
mov
outsb
stc
lahf
js
jnp
inc
out
int3
push
xchg
ljmp
fistpl
jb
pop
mov
jge
call
dec
xchg
es
mov
mov
ret
or
cmp
add
imul
in
jae
pusha
xchg
shrb
into
orb
xor
sbb
mov
mov
movsb
cmpsb
push
push
rcrl
inc
xchg
mov
lock
jne
push
dec
xchg
dec
jo
sbb
arpl
fldenv
sbb
aad
mov
xchg
push
sub
dec
push
hlt
cmpsl
daa
lret
scas
sbb
inc
xchg
xor
outsl
jo
cmp
lcall
popf
jae
loope
add
dec
or
repnz
bound
mov
ljmp
inc
rorb
ret
inc
jge
out
dec
jmp
xor
test
dec
nop
mov
das
lret
loopne
mov
fwait
and
or
enter
or
jno
inc
mov
mov
shrl
jl
xchg
adcb
scas
movsb
rclb
push
int
cmp
jae
pop
aaa
mov
adc
mov
inc
cmp
push
ficompl
mov
lds
xchg
pop
adcb
movsl
xor
add
shrb
fidivrs
mov
fimull
mov
xchg
out
jle
sbb
adc
test
push
pusha
ret
aas
inc
xor
adc
ss
mov
inc
orl
jns
mov
shl
sbb
cmpb
outsl
add
mov
cmp
lods
mov
jb
pop
cli
jbe
mov
pop
out
push
ret
jo
push
jae
rclb
inc
add
int3
dec
movsb
pop
js
cli
sbb
lret
xchg
sub
std
dec
ss
mov
mov
sub
pop
xchg
pop
xor
test
xchg
xchg
mov
mov
hlt
test
sub
xlat
iret
push
aas
in
dec
mov
lret
unpckhps
dec
lahf
subl
fidivl
inc
mov
roll
ret
and
push
mov
sbb
push
ja
sahf
xor
fistpl
mov
hlt
mov
jns
or
ror
sub
mov
cmp
cmp
xchg
sysret
jecxz
filds
mov
mov
hlt
pop
clc
or
adc
test
jo
out
cmp
xor
push
adc
cltd
sbbl
and
mov
pop
outsb
pop
pop
lahf
in
stc
push
insl
mov
mov
cmc
data16
push
mov
js
dec
adc
mov
int
insb
jg
jnp
mov
rolb
icebp
mov
sbb
cmp
pusha
or
add
inc
push
inc
mov
and
ljmp
push
das
jmp
jne
inc
jbe
jae
inc
cmpsl
mov
mov
loop
ljmp
call
mov
fwait
pop
adc
add
push
dec
cltd
push
mov
call
mov
push
scas
pusha
mov
jecxz,pt
inc
hlt
sbb
mov
mov
jecxz
int3
add
popa
mov
cmp
pop
dec
in
jae
mov
lret
mov
lock
push
scas
xchg
aaa
das
js
fmull
test
push
stos
adc
adc
mov
mov
ss
arpl
sub
lret
or
scas
stos
jg
inc
shl
mov
mov
xchg
push
mov
push
push
inc
or
aas
sbb
xor
outsb
std
insb
gs
lea
ja
pop
in
dec
femms
sub
mov
mov
popf
lret
inc
movsl
addr16
mov
fadds
fimull
mov
movsb
mov
inc
stc
xchg
and
fdivl
xchg
outsl
dec
and
mov
inc
das
stc
mov
ret
test
ljmp
int
lods
cld
ja
out
rorb
jmp
xor
lods
pop
xchg
jle
popf
cs
leave
lret
imul
push
in
dec
outsb
inc
nop
sub
enter
rorl
lock
cmp
cltd
inc
cli
add
cli
in
out
cwtl
arpl
fistps
out
loop
adc
adc
arpl
dec
lret
jns
mov
jp
add
out
xchg
fwait
mov
loop
lret
enter
fucomp
jne
int
pop
aas
sub
xchg
inc
imul
popf
enter
push
mov
in
cmpl
jp
jns
xor
lret
ret
push
push
xchg
push
add
cmp
cli
adc
sbb
push
rol
adc
mov
sbb
pop
ss
dec
lahf
adc
loope
push
and
inc
popf
push
or
xor
or
mov
cmp
cs
xchg
aam
jbe
sbb
clc
testb
pop
ret
ja
mov
fcoms
mov
xchg
xchg
jb
les
pushf
push
add
jno
fsubrl
sbb
push
mov
push
inc
mov
jo
out
lea
push
lret
insl
loope
ficompl
dec
std
sub
mov
repnz
nop
pushl
test
data16
mov
insb
sahf
iret
jge
push
daa
xor
jmp
xchg
ret
and
mov
adcb
push
into
xor
pop
fldcw
inc
xor
xchg
jne
jae
out
repz
rclb
push
out
leave
js
jne
lcall
leave
ja
mov
fmull
push
pop
mov
adc
fwait
in
mov
cs
mov
int3
jecxz
fcomp
and
lea
add
lods
dec
fidivrs
fimuls
dec
add
push
imul
dec
push
fs
sbb
fistpl
mov
jnp
adc
sbb
sub
mov
xchg
cltd
ja
orl
cmc
lret
xchg
pop
pusha
daa
inc
mov
fdivrs
es
xor
jp
push
fldt
mov
in
mov
lret
call
jmp
dec
les
mov
inc
cmp
sub
fcmovnb
stos
jg
mov
push
jle
jecxz
sub
pop
cmpsb
outsl
xchg
pop
pop
inc
push
rorb
lret
stc
out
dec
inc
sbb
add
je
aam
dec
lods
das
sahf
andl
bound
push
test
mov
lods
lret
sub
mov
dec
icebp
sub
sbb
cltd
sbb
push
aam
fs
popf
in
pop
adc
inc
scas
push
outsb
pop
mov
daa
dec
mov
into
cmp
or
lret
mov
cmp
add
xor
enter
pusha
adc
daa
inc
lea
test
cmpsl
jle
insl
movsb
mov
pop
adc
dec
push
add
loop
shll
addl
cmp
jmp
jg
inc
fcmovnbe
adc
adc
and
mov
or
lods
repnz
shl
mov
cmp
jmp
aam
and
dec
leave
pop
sbb
or
test
adc
dec
jnp
adc
enter
stos
xchg
jle
xor
mov
insb
cwtl
cltd
sbb
jno
lds
lea
push
movsb
test
mov
cmc
push
dec
jo
adc
jp
or
jge
sub
and
inc
cmp
pop
or
outsb
daa
cltd
or
arpl
mov
or
inc
mov
xor
roll
negl
dec
jg
add
ljmp
insl
hlt
cltd
or
cmpsb
dec
mov
jns
jb
xchg
popf
lcall
sub
add
scas
inc
inc
adc
mov
outsb
jne
mov
or
sbb
jp
cmp
scas
scas
mov
adcb
imul
dec
repz
xor
paddq
nop
mov
es
push
test
das
nop
add
outsl
fldcw
xchg
cmp
repz
inc
inc
sub
jnp
or
aam
xor
ret
outsb
dec
cli
imul
xchg
cmc
jp
lods
push
aad
in
out
hlt
mov
mov
fldl
xor
lret
sbb
jmp
or
outsl
add
movsb
icebp
adc
dec
push
xor
xor
lock
jbe
xchg
adc
push
xor
outsl
mov
push
repnz
leave
push
repz
js
add
xlat
and
dec
xor
leave
push
sbb
arpl
rol
and
pop
or
stos
adc
cmp
pusha
cmp
jp
cmpsb
scas
or
stos
mov
pop
adc
cwtl
or
popa
outsl
pop
test
nop
dec
fstps
enter
aaa
test
shrl
out
movsl
mov
adc
add
stc
jns
mov
sub
call
negb
lret
xchg
jmp
outsl
daa
mov
cwtl
inc
ret
or
and
pop
push
and
push
sti
int3
adc
out
sub
inc
sub
outsb
fcmovb
dec
jecxz
dec
xchg
dec
pop
pop
and
inc
adc
in
loop
jp
repz
mov
lds
cmpsl
mov
sub
int3
loop
data16
push
sub
nop
cmp
test
sub
hlt
dec
adc
ljmp
movsb
cmp
mov
jle
add
jo
enter
add
fisubl
aad
mov
sbb
aam
f2xm1
pop
scas
arpl
xchg
xrelease
aad
add
xchg
cs
stos
fstpt
andl
jmp
push
dec
and
mov
andb
xor
iret
dec
cmp
rorl
cld
in
push
pop
fidivl
xor
push
or
lds
sbb
jecxz
std
inc
add
cld
pop
inc
loop
cmpsl
cld
jno
cmc
into
pop
outsl
push
mov
test
outsl
inc
or
mov
jns
pop
mov
push
cmp
cmp
add
jp
dec
gs
jnp
sbb
ret
ss
push
inc
cli
cmp
lahf
jmp
arpl
pusha
faddl
adc
std
push
push
push
out
or
jecxz
sub
jmp
pop
lret
fistpll
test
or
cmpsb
outsl
enter
mov
mov
jl
push
fbstp
cwtd
sub
icebp
hlt
daa
pop
clc
and
pop
add
les
pop
stos
push
sbb
test
push
into
push
addr16
push
loop
nop
mov
push
lcall
cmp
popf
out
add
dec
xchg
mov
or
and
mov
mov
and
push
or
cmp
rcr
aad
mov
or
adc
inc
cmp
mov
rcrl
xchg
or
in
mov
xor
imul
add
cmc
shlb
loopne
int3
xorb
and
fidivrs
and
pop
push
stos
ficomps
add
add
cmp
push
pop
cs
imul
cwtl
clc
or
sahf
in
pop
and
popa
nop
dec
sbb
mov
inc
test
shlb
jno
mov
add
xchg
xor
test
insl
push
std
and
push
aad
push
xchg
cmp
jbe
dec
or
push
test
push
shlb
clc
ret
pushf
es
xor
loop
mov
popa
push
pop
in
mov
pop
sbb
into
arpl
add
sbb
hlt
popa
lock
or
in
mov
aas
push
cmp
xchg
lret
aad
mov
jae
rcll
sbb
push
aas
mov
push
pop
aaa
dec
mov
out
stos
das
sbb
xchg
pop
xlat
xorb
or
push
divb
xchg
lcall
mov
mov
and
popa
out
addr16
sub
sbb
aam
scas
xchg
fistpll
push
arpl
xor
sbb
mov
jbe,pt
outsb
dec
mov
adc
loop
gs
pop
cmp
ljmp
pop
dec
scas
mov
dec
icebp
push
dec
mov
lds
fs
lds
scas
mov
sahf
rcrl
test
int3
jnp
xorl
popa
ds
push
add
lcall
or
dec
dec
mov
jle
jge
push
in
and
ja
pop
jne
mov
or
mov
dec
mov
arpl
xchg
mov
adc
jae
ror
dec
pop
and
jmp
je
and
arpl
xchg
jo
mov
mov
xchg
loopne
sbb
out
jae
adc
aaa
fidivrl
cli
sub
divl
xchg
popa
jnp
or
xchg
hlt
dec
cmpsl
xchg
and
shl
ja
dec
inc
sahf
jbe
dec
sbb
xchg
pop
lods
xchg
push
add
outsl
loope
cli
xorl
aam
pop
mov
mov
mov
xor
cmpsl
mov
fdivrs
aam
ja
ja
negl
popa
fdiv
in
sub
rcrl
dec
pusha
movsl
decl
ret
mov
enter
push
xchg
pop
cmp
mov
imul
sbb
mov
in
mov
xchg
lock
inc
or
inc
jp
jecxz
xor
and
adc
sub
mov
hlt
jnp
fildl
cmp
mov
mov
mov
jl
lods
fiadds
hlt
popa
leave
and
sub
out
pop
cs
and
xchg
ret
and
test
cmpsb
les
mov
sbb
leave
or
jnp
dec
cs
xchg
rolb
pop
pushf
lcall
cmpsl
cmpsb
pushfw
mov
jno
jge
mov
and
sbb
mov
inc
in
mov
clc
rorl
nop
out
sub
int
add
mov
push
pop
sub
mov
lahf
gs
incl
xchg
sarl
mov
js
mov
lods
xor
xor
sbb
loope
jle
sahf
stc
lods
std
ljmp
inc
les
jge
popf
dec
orl
mov
mov
fwait
movsb
loope
push
lods
pop
pop
insl
mov
ds
jg
fwait
inc
mov
jnp
ds
into
sbb
push
push
ljmp
jnp
jnp
xchg
inc
add
js
cmp
fimull
push
lret
js
aaa
roll
and
shll
mov
cmp
xor
inc
inc
jns
lock
sbb
in
fldcw
fcompl
fcmovnbe
xor
imul
icebp
negb
mov
daa
sbb
inc
mov
repnz
loop
stos
in
loopne
daa
adc
lds
mov
or
fdivs
aas
push
repz
mov
dec
sub
inc
mov
sub
add
int
test
jns
insb
xchg
add
mov
ja
cmp
lds
test
cmpsl
imul
sub
fnstenv
or
sub
cmpsl
or
js
pop
mov
inc
inc
sbb
or
xlat
or
stc
mov
xchg
dec
and
nop
sub
pop
arpl
mov
inc
popf
aas
icebp
cmp
sbbl
cmp
bound
or
out
dec
insl
out
stc
jno
orb
xchg
mov
pop
scas
outsl
ret
or
into
push
xchg
cmp
cld
xchg
dec
mov
cwtl
sti
mov
add
cli
pop
add
hlt
or
lds
and
mov
clc
pop
fs
lret
adc
cmp
imul
xchg
xchg
sbb
inc
cltd
dec
dec
xor
loop
mov
fs
adc
movb
int
mov
mov
or
insb
dec
pop
mov
pop
xchg
mov
jle
adc
fisttpl
fwait
out
xchg
sbb
mov
in
negb
lcall
ja
inc
mov
pop
loopne
sbb
test
mov
adc
test
push
push
add
scas
inc
and
sbb
push
icebp
insl
mov
outsb
adc
rolb
or
adc
iret
or
cmpsb
mov
jle
push
adc
push
in
fisubl
push
and
jae
jnp
mov
shll
adc
aaa
rolb
or
mov
lret
loopne
push
push
jnp
add
mov
or
sub
out
mov
lock
inc
xor
sub
pop
cmp
xor
outsb
mov
es
clc
inc
scas
adc
xchg
pushf
cli
es
pop
push
jnp
fwait
std
mov
jl
roll
lret
mov
daa
mov
sub
mov
inc
test
aad
mov
sbb
cmpsb
pop
jge
out
dec
out
sbb
data16
mov
insb
jb
add
push
aas
pop
mov
int
xchg
sub
scas
or
xorb
aas
cmp
mov
sub
cmpsb
add
dec
sub
inc
cltd
aaa
jl
mov
xor
pop
or
fs
imul
push
pop
add
mov
dec
sahf
ds
lds
xlat
pushw
ljmp
fstp
cmp
leave
pop
jo
cld
sbb
in
push
in
filds
std
popf
inc
cmp
jg
lret
sti
movsb
jecxz
and
fnstenv
outsb
dec
jae
dec
jns
fucomi
mov
dec
adc
test
je
cmp
movsl
pop
jbe
xchg
xor
jge
subl
repnz
scas
test
inc
imul
stc
loopne
xchg
jg
adc
int
xchg
fidivrl
aad
incb
popa
cmp
jno
mov
out
fildll
mov
dec
add
push
repnz
lock
mov
and
push
lock
inc
sub
out
add
in
jmp
filds
in
dec
add
out
cwtl
jmp
xor
sysexit
shlb
or
fwait
mov
xorl
testb
or
stc
xorl
mov
pusha
jmp
inc
lods
sbbb
outsl
push
ds
jmp
inc
decl
repnz
scas
sti
mov
dec
xor
xor
rolb
jl
fisttpll
jmp
out
mov
int3
mov
jp
lcall
rorb
ss
jp
test
int3
jmp
sbb
inc
rorb
scas
lahf
test
lret
xchg
sub
xlat
fistpll
testl
loopne
repz
clc
je
movsl
inc
outsb
scas
insl
fadds
aam
sbb
push
mov
stos
add
gs
and
lods
pop
subb
fs
push
add
cmp
lcall
sbb
xchg
pop
or
xchg
loop
or
inc
cltd
ret
cld
cwtl
filds
jb
adc
std
mov
dec
flds
jg
xlat
jae
sbb
in
std
mov
hlt
pop
mulb
enter
fs
andl
push
aad
sub
loopne
sub
xchg
jp
mov
movsb
dec
inc
out
inc
call
add
cmp
daa
and
mov
rclb
or
outsb
jmp
push
movsb
jp,pn
sahf
pop
mov
test
mov
decb
jbe
ljmp
pop
into
test
mov
cmpl
test
ds
call
gs
int3
push
pop
fldcw
jp
sbb
pop
sub
sbb
inc
imul
and
sbb
cmp
xor
or
jae
push
out
cmp
sub
pop
cli
cmpsb
fldcw
jae
lods
cwtl
and
add
bound
hlt
inc
pop
das
dec
jns
xor
xor
shl
jge
jnp
mov
inc
std
lods
je
push
pop
idivb
and
outsl
in
scas
mov
mov
mov
mov
aas
and
out
data16
cmp
add
and
mov
icebp
xchg
fcoml
jae
popf
xchg
or
sub
xchg
ljmp
sub
mov
mov
js
fwait
std
xchg
add
aam
lods
cs
cmp
inc
pop
mov
dec
pop
lods
mov
cwtl
dec
sbb
and
jnp
jp
pop
popf
lahf
xchg
mov
xchg
scas
imul
mov
sysret
cmc
mov
insl
lret
rorb
sub
pushf
inc
negl
leave
add
pop
jle
test
pop
es
stos
cmc
jns
cld
sbb
and
push
xor
xchg
fst
test
rcll
nop
fbstp
lret
into
sar
out
cmp
das
mov
sub
jnp
or
imul
aam
adc
or
dec
test
xor
in
subl
mov
cwtl
xor
negb
mov
int
and
sbb
or
pop
or
mov
and
into
ja
mov
mov
lcall
mov
aas
xor
idiv
dec
sbb
xor
mov
outsl
cmpsb
jge
and
and
lea
js
out
ret
push
lods
aad
xchg
jmp
xor
aaa
jbe
push
mov
push
mov
dec
outsl
pop
in
sub
push
insb
push
mov
call
in
cmp
hlt
push
movsb
and
pop
ja
inc
inc
aas
daa
pusha
call
cwtl
inc
adcl
mov
push
cmc
fisttpl
movsl
pop
cmp
or
xchg
mov
pop
jp
in
ljmp
les
sub
and
lahf
fldcw
scas
mov
pop
rcll
fs
dec
cmp
mov
cmp
sbb
jge
inc
in
pop
pop
sbb
inc
cmp
decl
sbb
stc
mov
push
fwait
inc
and
push
cltd
dec
loope
andb
push
leave
jns
pop
les
imulb
jmp
scas
icebp
cli
aaa
cwtl
pop
popf
xorl
aad
addb
sbb
sahf
mov
pop
mov
jge
dec
xchg
out
loope
and
pop
mov
xchg
js
pop
dec
jne
or
xchg
sbb
xchg
sti
aaa
je
cmpsb
in
mov
fldl
xchg
test
and
xchg
arpl
mov
xor
fcomps
mov
mov
idivb
ja
lcall
hlt
rcll
jl
mov
mov
mov
inc
mov
in
sti
mov
dec
sbb
xchg
insb
lea
in
jle
shl
repz
mov
mov
ret
repnz
add
mov
jns
jmp
xchg
pop
lea
iret
xchg
pop
ret
out
out
jge
mov
push
push
add
enter
jo
add
sbb
push
fcoms
icebp
clc
xor
in
and
mov
or
fs
mov
cmpsb
jecxz
adc
rcll
pop
scas
mov
iret
add
fs
out
jl
jnp
stos
mov
mov
outsb
adc
adc
or
lock
orb
add
pushf
mov
sub
xchg
cmp
out
fstpl
lret
test
adc
pusha
pop
iret
adc
fdivr
lcall
idivb
cmp
int
push
aad
inc
testb
mov
sahf
xchg
clc
mov
jbe
sbb
cs
hlt
sti
pop
mov
pop
pop
sub
icebp
inc
stos
inc
inc
rcr
adc
imul
inc
inc
sub
loopne
xchg
insl
add
cmp
out
cmp
imul
mov
jae
add
lcall
sti
je
dec
jbe
shrl
sub
ja
or
dec
sbb
cmp
hlt
stc
sub
pop
mov
sbb
cli
cmc
addb
inc
test
jo
sbb
pop
testl
lea
pop
ds
sub
out
mov
fs
or
inc
or
and
add
mov
and
mov
ss
out
mov
jmp
pop
mov
sbb
sbb
fdivrl
jns
cmp
mov
bound
leave
adc
sbb
push
sub
popa
js
fdivrs
mov
mov
sub
cmp
xchg
jle
insl
mov
outsl
pop
inc
fcos
mov
mov
call
int
mov
and
js
arpl
je
xor
bound
jmp
aam
call
into
sbb
dec
jo
xchg
popa
mov
xlat
cltd
or
lcall
cmp
pusha
xlat
inc
xor
daa
xor
sbb
mov
adc
xchg
fidivs
adc
jecxz
cltd
add
ljmp
mov
ret
jge
dec
test
add
sub
mov
cmpsb
pop
fldl
jno
add
mov
sub
inc
ret
and
mov
in
xchg
lds
dec
sub
or
pushf
or
mov
xchg
fmull
xor
adc
and
dec
cmp
std
cmp
and
dec
bound
push
mov
jge
cmc
xchg
cmp
aad
inc
shrb
or
cmp
sub
mov
ja
sub
lahf
stc
dec
push
imul
fbld
iret
enter
mov
jge
pop
movsl
cmp
mov
das
in
pop
xor
and
aad
test
cmp
test
call
les
adc
pop
cs
insb
or
adcl
jge
scas
jno
fildl
inc
add
mov
rclb
js
fadds
ret
sti
out
jl
push
mov
ja
xchg
lods
in
enter
pop
pop
or
xorb
jae
xor
cwtl
es
pop
xchg
pusha
clc
jbe
fsubrp
jle
repz
adc
add
sbb
in
sub
adc
sub
fcoml
lret
cld
push
sbb
gs
loope
ret
jmp
xchg
mov
mov
stc
notb
push
popf
ss
dec
xchg
sbb
cmpsb
dec
out
lret
sbb
xchg
sbb
scas
sarb
lods
sbb
sarl
sbb
sbb
add
jo
pop
loopne
fwait
movsl
sti
aam
aas
jle
lea
fldt
bound
mov
adc
push
clc
test
mov
aad
sbb
pop
pop
in
jnp
clc
mov
movsl
mov
adc
vmread
ficompl
cmp
mov
hlt
add
sbb
and
adc
dec
mov
sub
jo
or
pop
rorl
jecxz
push
and
das
fimull
cmp
sbb
out
push
hlt
cmp
jo
jmp
aam
lahf
repz
inc
shll
xchg
aaa
shrd
sub
cmpsb
into
adc
cmp
adc
rcrl
test
xor
lds
ss
and
sti
lods
out
xor
insl
out
cmpsb
int
xchg
sub
test
jo
cld
pop
ja
pop
sub
mov
pop
pop
adc
cmp
lods
cli
mov
push
iretw
mov
mov
mov
cltd
iret
jno
int
scas
ret
inc
cmp
movsb
push
popl
or
ljmp
pushf
int3
adc
and
lahf
mov
mov
test
stos
mov
test
aaa
fsub
lods
lret
mov
dec
push
push
popa
sbb
test
scas
leave
scas
push
xchg
mov
jbe
xor
or
test
mov
sahf
bnd
mov
dec
jbe
mov
inc
push
xchg
push
and
xor
fisubrs
out
fcmovne
dec
inc
cmp
cld
sbb
mov
lods
ljmp
xor
xchg
arpl
test
lea
jmp
repz
ror
movsl
mov
push
mov
xorb
cmpxchg
push
in
lock
enter
sub
xor
pop
mov
test
push
out
lret
jg
scas
and
pop
jmp
inc
or
mov
pop
fiadds
int
inc
mov
aas
xchg
imul
pop
ljmp
pop
mov
push
inc
push
sub
stc
push
mov
push
push
stos
push
shl
pushf
lods
sub
mov
add
xchg
test
pushl
xchg
jbe
jne
push
add
cmc
fcoms
nop
shrl
rcrb
lret
cmpl
mov
es
mov
mov
jae
int
sbb
cmp
adc
sub
movsl
mov
in
leave
out
lcall
int
sbb
xlat
cmp
out
jae
mov
cmp
pop
negl
xchg
inc
fsubr
aas
out
jo
shlb
push
and
das
push
jo
adc
test
out
decl
or
pop
mov
sub
xchg
jnp
scas
iret
cmpsl
jle
fsts
sub
mov
adc
sahf
fisubrs
push
push
bswap
xchg
and
pop
and
jb
jbe
xor
add
inc
xor
outsl
mov
mov
xor
es
sub
dec
pop
push
dec
test
jmp
push
mov
pop
xor
xchg
ret
xchg
add
jne
or
xchg
js
mov
std
mov
js
push
test
std
cmc
idivb
or
xor
mov
adc
mov
shrl
jp
in
mov
inc
insl
cmpsl
add
dec
scas
adc
xchg
sbb
jne
pop
cmp
mov
adc
push
repnz
fucomip
ss
in
and
leave
rcr
inc
adc
inc
adc
jl
cli
outsl
pop
xor
dec
push
out
bound
add
fsubrs
mov
mov
loop
jnp
insb
js
in
sub
mov
aam
mov
mov
and
stos
dec
sub
mov
imul
fwait
inc
lods
inc
push
jbe
jbe
jge
fidivrl
scas
popf
adc
jecxz
fsts
aad
cld
pop
icebp
out
mov
jge
lahf
mov
add
mov
stos
fadds
cmp
pushf
nop
sti
jno
jge
push
movsb
cmp
imul
insl
adc
pop
hlt
in
or
rorl
pop
es
or
mov
inc
fcoms
jg
pop
sub
sbb
lock
addr16
int3
pop
mov
lds
ja
addr16
and
sub
mov
dec
sub
push
xchg
inc
mov
ret
cmpsl
bound
xchg
mov
sub
stos
or
sub
or
aaa
mov
sbb
into
hlt
or
jmp
adc
lea
insb
cmpsl
xor
mov
cmp
nop
inc
add
add
sub
xlat
push
xchg
xchg
mov
push
out
repz
lahf
dec
add
es
add
mov
cld
sub
mov
mov
addr16
inc
mov
push
mulb
in
adc
lds
push
cwtl
inc
mov
dec
inc
mov
pusha
mov
aaa
sub
cmpsl
add
lods
cwtl
jbe
sbb
lcall
pop
or
adc
mov
int
adc
data16
repnz
xlat
or
sub
or
jo
sbb
pop
test
iret
pop
sub
cmp
popf
mov
lret
xorb
mov
mov
cs
rorb
in
std
in
mov
xchg
in
add
mov
inc
jns
mov
inc
sahf
std
mov
fdivr
adc
mov
add
push
lock
xchg
nop
pop
aas
xor
xor
ja
push
lock
or
mov
scas
enter
xchg
jmp
addr16
inc
xor
fldcw
xchg
addr16
jmp
push
or
repz
ret
inc
test
ror
sub
inc
or
cmp
or
pop
sub
mov
int3
push
add
cltd
xor
dec
xor
jns
jp
or
int3
mov
pop
dec
ds
lods
push
outsb
stos
mov
sub
in
in
fdivl
cmp
xchg
cmc
pop
lea
cmpsb
mov
fucomip
or
sti
jecxz
imul
sub
ffree
xchg
jecxz
mov
ret
mov
call
add
bound
pop
out
jns
sbb
icebp
out
xor
inc
jo
xor
fs
add
sbb
dec
push
cmp
mov
lret
dec
negb
xor
test
jno
add
cmp
xor
pop
mov
aad
push
data16
mov
flds
or
in
mov
test
fistps
sahf
fildl
adc
and
fistpl
scas
imul
inc
loopne
out
jo
pop
lea
dec
out
sub
pop
inc
bound
jae
mov
push
icebp
adc
loop
and
arpl
pop
mov
int3
mov
in
adc
xchg
loop
and
push
int3
mov
incl
mov
push
push
mov
je
add
cs
shlb
xlat
enter
dec
gs
xchg
pop
out
sub
push
pop
imul
stos
jb
aaa
xor
in
mov
sub
lcall
in
in
mov
mov
out
jnp
iret
fildl
ljmp
outsb
loop
push
jbe
cltd
loopne
pop
sub
ljmp
aaa
call
sarb
popl
loopne
dec
pop
divb
jge
rclb
int
mov
push
hlt
push
into
pop
cs
add
sbb
mov
mov
in
jmp
lods
insl
sarb
call
jp
jb
das
cmp
sahf
pop
and
int
jb
test
aaa
cmpsl
call
push
xchg
dec
jnp
xor
out
sub
ljmp
lea
inc
loopne
ss
loopne
in
jnp
icebp
jb
dec
sbb
mov
cmp
stc
push
jl
dec
cmc
lock
jnp
lods
mov
jg
jns
jne
pushf
jmp
xor
inc
mov
mov
lock
pop
add
int3
mov
jb
cmpsl
jecxz
xchg
push
imul
ja
ss
shrl
adc
sub
adc
add
or
mov
add
call
xchg
inc
jmp
or
jnp
add
mov
cmc
stc
and
nop
or
mov
test
in
inc
rcrb
push
shll
xlat
ljmp
sbb
rolb
push
gs
pushf
pop
jno
outsl
xchg
adc
push
xchg
shl
int3
jnp
adc
mov
mov
lods
xchg
dec
push
push
es
movsb
mov
clc
push
pop
dec
aad
mov
jmp
mov
or
jl
xchg
push
stc
leave
ret
fwait
repz
add
rcll
adc
popf
loopne
es
stos
jnp
inc
xchg
pop
pop
cld
jecxz
ret
add
xor
jns
rcrl
lahf
cmp
xlat
pop
jle
es
in
jmp
cli
mov
aas
sbb
or
xchg
inc
les
sub
jp
jl
enter
dec
fdivs
dec
and
stos
xchg
aaa
ja
jbe
jl
push
push
dec
pushf
xor
xor
mov
sbb
std
rcr
jle
icebp
movlps
repz
shl
add
fidivrl
xor
sbb
xchg
scas
mov
mov
push
movsb
mov
rcr
movb
fisubs
or
clc
sti
sahf
sbb
jg
subl
icebp
inc
fnstcw
mov
scas
aas
or
fnstcw
pushf
pop
dec
jns
mov
add
das
add
jnp
out
mov
mov
pop
xchg
mov
dec
aam
jl
lea
pop
inc
fisttps
test
fidivrl
iret
out
xor
pop
leave
in
push
loopne
or
ret
mov
mov
icebp
pushf
rcl
mov
sbbb
hlt
push
mov
lock
xchg
inc
aad
xchg
adc
jp
xor
icebp
xor
mov
mov
aaa
mov
outsl
mov
and
and
sbb
or
push
scas
ss
xchg
or
inc
fdivrl
pop
daa
push
ret
push
jle
stos
out
hlt
push
inc
push
xchg
pushf
ljmp
lret
cmp
mov
and
cld
mov
push
add
mov
testl
cli
ficoms
fadd
enter
popa
push
in
ljmp
and
aam
add
loope
xor
fsubrs
ss
clc
stc
subl
dec
js
cmp
movsb
fbstp
pop
jae
and
xchg
adc
scas
inc
adc
xchg
inc
xor
xchg
lcall
rclb
sub
mov
sub
dec
aaa
push
cmp
leave
stc
loopne
divl
das
fidivl
loopne
sub
sbbl
lds
or
js
pop
jmp
test
dec
and
mov
icebp
xor
mov
or
xor
hlt
ret
push
cmc
movsl
xchg
aad
popf
xor
mov
mov
mov
inc
mov
enter
dec
mov
xchg
gs
adc
fnstenv
fdivrl
rorb
aas
xchg
dec
les
inc
mov
and
sbb
push
sub
iret
imul
ljmp
dec
sub
outsl
mov
insb
xchg
mov
popf
mov
xlat
or
jg
mov
ret
xor
std
mov
imul
dec
lds
rcl
and
icebp
rcr
or
lahf
mov
icebp
popf
adc
pop
mov
mov
fnstsw
insb
les
push
out
mov
inc
fistpl
loop
fs
xor
lock
loopne
lds
cmp
fs
cmp
mov
ds
mov
inc
out
or
xchg
jmp
lods
jns
and
jl
pushf
repz
loopne
pusha
mov
daa
insl
add
dec
jp
push
std
clc
cli
jge
and
in
outsb
xor
adc
rorb
cmc
movsl
dec
cmc
rorb
repz
pop
xor
sbb
out
in
pop
repnz
inc
in
divb
jo
mov
cmpl
fs
dec
lcall
xchg
insl
push
mov
cltd
xchg
enter
jns
hlt
insl
fwait
aaa
mov
add
mov
add
enter
mov
aad
push
cmp
push
fisttps
mov
in
loopne
adc
loopne
rclb
ds
fbld
fisubs
pop
adc
stos
dec
cmp
cltd
mov
cmp
push
sbb
inc
push
dec
out
call
xlat
stos
int3
sar
shl
pop
dec
xor
and
popl
cmp
mov
pop
push
xchg
mov
inc
dec
int
stc
sbb
in
es
and
dec
flds
notl
mov
mov
mov
in
mov
xor
dec
mov
testb
jne
subb
mov
imull
das
popf
scas
jbe
pop
jns
mov
mov
dec
fldt
mov
mov
scas
pop
sbb
aam
dec
ljmp
cltd
hlt
dec
daa
sub
jns
sub
mov
cmp
xor
dec
inc
pop
and
or
std
mov
dec
push
adc
push
mov
ja
jne
test
mov
aas
test
push
jnp
xchg
das
outsb
scas
adc
loop
nop
fcompl
adc
repz
enter
ds
mov
iret
lods
jbe
xor
xor
and
xchg
mov
je
jno
adc
std
aas
hlt
push
imul
jb
push
push
div
xlat
push
mov
cmc
adc
test
insb
or
push
in
mov
leave
sub
movsb
pop
or
xchg
in
adc
stos
jecxz,pt
negb
mov
dec
push
lcall
jmp
shll
mov
addr16
movsl
xor
nop
fiaddl
test
movsb
stos
mov
ret
ljmp
cmpsb
xor
daa
and
mov
pop
repz
mov
and
js
xchg
or
sub
dec
stos
movsl
addr16
mov
jbe
loopne
cs
jns
ficomps
cs
sahf
fisubrs
out
pop
mov
mov
pop
push
mov
ljmp
sbb
jae
cli
test
jmp
hlt
mov
dec
int
sub
push
mov
or
pop
ja
push
inc
bound
in
jb
imul
mov
inc
cmpsb
arpl
hlt
les
pop
addr16
lods
xchg
arpl
aaa
dec
pop
aam
rcll
inc
push
daa
inc
stos
mov
fisubs
sbb
bound
insb
aaa
mov
xchg
pop
mov
adc
and
mov
mov
lret
in
popa
bnd
ret
mov
mov
push
incl
sub
int
ja
inc
mov
in
mov
fmuls
stc
into
inc
push
cs
xor
punpckldq
nop
dec
fcomi
les
xchg
test
std
push
pop
icebp
fnsave
addr16
xchg
xlat
dec
lahf
mov
and
fucomi
sti
repz
cmpl
sub
test
sbb
out
lds
push
adc
mov
cli
mov
cmc
mov
jge
mov
adc
popf
ret
outsb
push
or
daa
mov
in
add
fimuls
dec
sbb
fcmovb
inc
enter
pop
inc
js
xchg
pop
ja
sbb
sahf
sti
arpl
insb
out
and
mov
mov
mov
andb
fs
call
xor
fsubs
xor
movsb
mov
pop
adc
inc
insb
xor
test
mov
loope
jp
arpl
jnp
sub
mov
hlt
loopne
mov
adc
inc
dec
movsl
jle
push
xchg
subb
call
push
dec
jmp
stc
jg
push
cmp
and
push
cmp
fildll
mov
mov
mov
jne
xchg
movsb
mov
mov
or
jl
adc
cmp
leave
mov
ja
lock
inc
add
pusha
cmc
fisttpll
shl
xchg
out
cmp
sub
int3
sbb
pop
cmpsb
jbe
ret
pusha
xchg
inc
aaa
sbb
lock
in
hlt
or
lret
sbb
sbb
mov
in
int
repnz
stos
push
jl
icebp
shrb
cltd
mov
test
sub
mov
push
xor
enter
jmp
xlat
push
jl
cli
dec
or
push
daa
data16
mov
inc
imul
jle
pop
jno
mov
stos
mov
int
mov
mov
flds
pop
fdiv
repz
jecxz
push
rcll
imul
jne
push
scas
fnstcw
xchg
test
xchg
or
jge
cmp
xor
loope
and
fsubrl
inc
mov
mov
test
push
fucomi
jnp
dec
pop
cs
imul
lods
leave
or
test
mov
xorb
inc
mov
xchg
ret
fimuls
cwtl
cmp
int
dec
sub
rcl
andb
and
pushf
sahf
mov
mov
or
call
shrb
or
adc
dec
movsb
mov
popa
mov
push
jp
lock
push
notrack
jmp
addr16
cwtl
out
mov
add
mov
fsubl
ret
js
pop
xchg
pop
mov
jae
stos
cmp
and
call
ret
adc
sub
cmpsl
sub
cmp
fstps
and
out
out
jp
jle
gs
pop
push
aaa
dec
pop
jne
add
xchg
out
cmpsb
and
cmp
xorl
loopne
and
std
dec
addb
sar
popa
pusha
leave
popf
rol
aaa
ljmp
divb
aam
pop
sub
mov
popa
lret
scas
icebp
sub
mov
daa
cmp
dec
ljmp
pop
stc
imul
aaa
in
push
add
mov
mov
loopne
pop
aas
enter
filds
push
push
lahf
mov
mov
pop
fcmovnb
xchg
repz
and
mov
jne
data16
jp
jae
cwtl
aam
mov
push
mov
inc
pop
popf
sub
adc
pop
push
jae
adc
scas
js
lds
or
scas
lds
sub
aas
stos
mov
lret
push
cmp
xor
cltd
cmp
lcall
enter
aam
dec
arpl
scas
and
data16
aas
stos
mov
mov
ljmp
into
mov
xor
shrd
out
xor
stc
sbb
cmp
insb
loop
mov
lahf
imul
mov
jo
adc
jle
xchg
stos
dec
jge
hlt
cmp
in
jne
and
loopne
adc
cmovge
popf
push
bound
cmp
sbb
cld
pop
xchg
cmp
movsb
inc
test
sbb
adc
xchg
fsts
repz
mov
ss
ss
inc
rcl
jg
sbb
jp
andl
mov
jno
scas
inc
mov
cmp
stc
dec
hlt
idivl
movsb
cmp
mov
lahf
clc
out
icebp
adc
ret
addr16
fnstsw
cli
xchg
int
xor
sub
gs
loopne
popa
adc
mov
fwait
ds
jno
dec
test
std
pushf
aas
xor
mov
fadd
ss
adc
jge
aam
xchg
jno
pop
ret
xchg
dec
nop
lret
adc
ret
mov
mov
repz
addl
imul
mov
frstor
xlat
add
fsts
add
add
mov
pop
dec
push
cltd
fsub
xchg
mov
jo
or
xchg
imul
int
lret
hlt
testl
imul
dec
push
xchg
repz
les
call
mov
mov
loop
mov
fdivp
pushf
fdivrl
cli
and
sarb
push
cmp
ss
inc
shll
ret
dec
sarb
xchg
in
fists
push
test
bound
fiadds
enter
aam
mov
icebp
or
in
js
xor
sub
xchg
repnz
icebp
and
add
ficoms
mov
jge
call
add
mov
aas
out
sbb
leave
enter
stc
rcrl
xor
stos
inc
xchg
cld
sub
xor
fwait
dec
sub
icebp
add
mov
das
popa
sahf
in
lods
mov
pop
out
xchg
dec
push
pop
push
pop
jo
cmp
add
jb
sub
and
lahf
fadds
add
cmpsb
push
cmp
lahf
cltd
outsl
push
repz
mov
xor
in
jp
or
xor
sub
xor
ljmp
scas
test
push
cmp
nop
sub
pop
sahf
fmul
cmp
fisttpll
sar
in
mov
sub
cmp
arpl
lahf
pop
movsb
adc
aas
add
dec
scas
in
mov
or
mov
cmp
int
rorl
xchg
jnp
sub
cs
cmp
incb
cs
adc
push
xor
sbb
popf
enter
gs
pop
test
push
cmp
xchg
fidivs
dec
pop
scas
lea
adc
dec
inc
repnz
jb
fisttps
jle
fbld
add
incl
dec
insl
mov
fsubp
data16
push
pop
xchg
cmp
inc
inc
and
sub
sub
jo
adc
movsl
icebp
out
ret
adc
std
out
mov
pusha
jbe
xlat
js
insl
xor
movsb
push
rcr
jne
ret
or
sub
shlb
in
movsl
lahf
sub
push
mov
jo
push
jle
jae
add
rcrb
push
test
dec
jns
cmp
fstpt
jge
int3
dec
jl
add
sbb
inc
arpl
inc
rclb
data16
mov
jg
mov
add
dec
push
adc
dec
ret
fs
mov
ljmp
lock
xlat
push
mov
leave
sbb
jmp
and
xor
mov
ret
dec
or
lahf
movsl
jae
mov
hlt
out
daa
inc
jo
jle
je
inc
fcompl
or
xchg
mov
sub
add
sbb
fnclex
sbbb
pop
push
xchg
stos
sahf
pop
insl
or
xchg
hlt
sar
mov
push
loop
push
xor
mov
enter
fadd
sbb
ljmp
adcl
pop
out
jp
sbb
xor
dec
jmp
xlat
ss
pushf
mov
push
mov
mov
outsl
mov
xchg
mov
xchg
xchg
inc
sbb
jge
sbb
in
popa
inc
mov
imul
shlb
sub
subl
adc
jp
and
sbb
jbe
in
stos
adc
mov
out
test
pop
roll
xor
test
pop
dec
xchg
shll
mov
sub
orb
or
nop
jl
or
or
mov
jmp
sbb
add
mov
adc
pop
popa
pop
mov
adc
lods
cmp
xchg
jns
mov
ret
push
sub
mov
out
adcb
inc
sub
pop
and
les
lods
or
xchg
xor
stos
mov
mov
adc
and
cmp
pop
cwtl
scas
nop
dec
xor
lock
std
inc
loope
sbb
mov
mov
jae
and
fistl
mov
aam
push
fldt
repz
or
fdivl
inc
sarl
mov
bound
push
fdivp
insb
loop
cli
cmp
dec
push
fnsave
mov
aaa
data16
rorl
dec
testl
ljmp
hlt
pop
xchg
and
enter
out
inc
pop
sub
mov
iret
notl
inc
pop
pop
test
push
adc
cli
push
cmc
fdivl
dec
orb
sti
pop
xchg
notl
jne
test
mov
mov
loopne
addr16
inc
mov
adc
xor
mov
or
xor
je
leave
inc
mov
stos
mov
dec
negl
xor
mov
in
push
out
jl
mov
adc
pop
inc
cmc
out
push
jno
shll
ljmp
negb
insl
push
std
inc
cmp
stos
sub
cmp
or
push
sbb
or
pop
jp
mov
xor
push
lret
notb
mov
inc
cmp
shr
imul
cmp
aam
ja
outsb
mov
inc
jno
push
rorl
cmp
pop
jmp
mov
sbb
stos
testl
mov
dec
mov
mov
jae
test
mov
and
and
fwait
pop
jp
cmc
pop
pop
push
cwtl
mov
lret
cmc
cmp
std
inc
daa
xor
ret
ljmp
out
popf
push
hlt
inc
rcrl
repnz
mov
cmc
inc
leave
xchg
push
adc
dec
jecxz
dec
scas
mov
jb
pop
int3
add
in
cmp
shrl
movsl
imul
sbb
stos
mov
and
cmpsl
mov
push
call
and
push
cmp
mov
pop
imul
repnz
inc
movsl
pusha
es
stos
and
std
hlt
xchg
inc
cli
and
ja
pop
add
inc
imul
cli
fdivrs
inc
mov
jl
enter
out
testl
imul
into
movl
shlb
mov
add
les
mov
leave
int
js
xchg
xchg
cltd
in
out
xchg
xlat
int
fldt
adcb
xlat
or
lods
dec
shlb
enter
mov
mov
sbb
inc
pop
sbb
pop
loope
mov
in
jne
imul
lods
mov
enter
sbb
mov
dec
mov
aam
sbb
shll
xor
dec
inc
sub
filds
mov
mov
mov
mov
sub
mov
lret
cltd
cmp
test
mov
xchg
xchg
xchg
push
fidivs
push
pushf
add
cltd
push
stc
cltd
or
or
xor
pop
pop
int
test
shll
xchg
cld
pop
mov
or
mov
insb
xor
inc
das
lock
xor
popf
sbb
mov
xor
xor
pop
inc
stos
mov
mov
mov
or
xor
mov
ds
adc
iret
insb
mov
sbb
adc
xchg
sub
inc
cmp
int3
in
out
push
ficoms
cmpsl
mov
jmp
stc
repz
scas
mov
int3
xchg
fdivrl
jne
xchg
ja
adc
test
xor
cltd
ss
mov
fsts
xchg
jne
clc
add
popf
push
and
mov
sbb
arpl
loope
inc
cmpsl
lret
adc
lcall
lret
bswap
adc
inc
idivl
fptan
jl
push
ss
cmc
xchg
lcall
dec
sub
out
and
int3
add
movsl
and
mov
scas
enter
adc
stc
dec
add
jle
sbb
mov
jmp
xor
mov
and
and
pop
lret
fistps
cmp
xchg
test
add
and
std
cmpb
jmp
inc
sub
sbb
arpl
fcomp
pushf
sti
lcall
pop
inc
sbb
mov
in
decl
inc
fcmovb
notl
je
add
clc
inc
jno
pop
mov
movsb
sub
cmp
inc
cmp
and
xor
push
jecxz
xchg
fs
addr16
add
add
fucomip
mov
cmp
push
rcrl
mov
mov
lods
call
lahf
stos
jb
fsubl
popa
clc
mov
xor
mov
pop
jns
xchg
adc
push
call
pop
sbb
fstp
sub
jg
cmove
vcvtss2sd
lret
jg
shll
add
pop
bound
xor
mov
xorb
jmp
enter
clc
cmpsb
inc
pop
jge
mov
dec
mov
sub
sub
mov
inc
leave
int
jae
adc
add
sub
mov
cli
cmp
ljmp
data16
mov
push
or
mov
addr16
aad
lock
addr16
in
dec
lret
mov
cmc
mov
aas
fucom
adc
jecxz
inc
push
stos
subl
sub
es
and
push
dec
xor
sbb
xchg
fnstsw
addr16
push
sub
cmp
ds
mov
fnstcw
jnp
push
adc
adc
stos
push
pop
in
stc
leave
xor
jne
dec
jge
repz
pop
in
lods
pop
mov
adc
into
xchg
mov
adc
jl
pop
inc
inc
stos
les
shrb
cmp
cwtl
mov
shll
xor
in
test
fstl
add
push
cmpsb
daa
jns
or
cmovno
sbb
push
pop
push
mov
into
push
xchg
xchg
jmp
mov
mov
pop
fidivs
sub
lock
mov
push
jno
stc
pop
inc
ret
pop
ret
sar
dec
andb
repz
push
mov
lret
add
ss
in
pop
mov
in
pusha
cmpsl
repnz
xor
xor
stos
cs
mov
dec
sbb
dec
mov
mov
mov
daa
icebp
mov
fiaddl
sub
bound
inc
add
jnp
push
fs
popf
cs
mov
add
imul
ss
mov
sub
mov
movsb
pop
arpl
mov
pop
adc
push
shlb
ret
insb
pop
lock
dec
adc
fistl
lret
in
cmpsl
adc
inc
ret
push
add
jns
insl
jbe
hlt
outsb
cmc
cmp
xchg
xchg
cs
jns
sti
adc
push
jno
addr16
jecxz
cmp
scas
dec
mov
ret
cmp
fwait
rorb
je
fs
mov
ret
fs
call
in
jg
and
lahf
cmp
jae
loope
adc
jae
negl
test
and
adc
or
outsl
out
xlat
add
xor
xchg
in
mov
or
mov
mov
mov
arpl
das
jno
or
xor
imul
popa
pop
push
and
push
das
xchg
xchg
pop
jge
iret
jae
jl
xor
in
gs
scas
mov
fs
std
mov
call
movsb
jge
mov
rcrb
jnp
lea
in
sbb
push
cwtl
aad
dec
es
inc
cmp
mov
stos
movsb
lods
arpl
sbbl
lcall
inc
inc
dec
mov
xchg
mov
dec
and
out
fwait
cmc
shlb
mov
sahf
mov
adc
xchg
adc
mov
shl
fisubs
mov
mov
xchg
addl
dec
pop
mov
sar
cmp
mov
jg
ja
push
lret
push
imul
sub
xor
xor
sub
pop
jnp
jo
mov
mov
adc
ja
cmc
pop
lcall
outsl
movsl
xor
aad
movsl
push
pop
push
gs
popa
ss
lock
or
mov
mov
out
pop
ds
pop
pop
sbb
adc
cwtl
cmp
jo
mov
mov
lahf
sbb
outsb
xchg
test
mov
or
xchg
imul
leave
gs
gs
cwtl
jecxz
shrb
ss
jns
loop
dec
jne
enter
movsl
stos
mov
and
mov
faddl
adc
pop
mov
mov
lock
sbb
and
push
inc
lods
or
loope
std
fcoms
add
sub
cmp
cli
in
or
in
xorl
xchg
sbb
notl
mov
mov
imul
inc
in
add
fcompl
push
stos
fidivrl
dec
out
jae
add
mulb
test
out
fidivrs
aas
outsb
add
mov
jo
repnz
inc
pop
stos
xor
and
mov
sbb
mov
xchg
insl
jne
jno
mov
int3
out
outsb
in
stos
sbb
call
pop
jo
pop
fcompp
cmp
mov
sysenter
out
call
cltd
fdivp
addr16
xchg
mov
dec
icebp
dec
test
outsl
insl
shlb
sbb
dec
nop
xor
push
cltd
test
pop
push
or
aam
arpl
in
dec
mov
mov
push
shr
subl
cltd
mov
xchg
pop
ljmp
dec
adc
out
push
lds
test
jle
movsl
sub
out
bound
xchg
mov
js
daa
sub
lahf
lock
push
out
clc
in
je
jecxz
mov
movsb
js
adc
aad
sbb
jp
or
mov
push
imul
mov
push
ret
xor
adc
cli
add
push
out
xor
imul
push
outsb
pop
insl
mov
mov
jge
xchg
and
aad
or
jmp
xchg
into
jo
xchg
shlb
stos
cmp
lahf
and
pop
test
outsb
inc
movsl
sbb
push
dec
popa
sarb
scas
or
mov
mov
std
shll
lods
insl
jb
ss
cltd
leave
sar
int3
xchg
jle
fisubrl
mov
jp
push
inc
fwait
int
cmp
divl
loop
sbb
scas
cmpl
fs
inc
ljmp
cmp
mov
sbb
and
or
push
add
mov
ja
push
loop
xor
mov
dec
add
or
in
in
lds
out
xchg
cli
test
loopne
mov
mov
rcrl
pop
adc
sbb
stos
xchg
cmp
mov
xor
popf
pop
fdivrs
lds
push
ds
dec
dec
pop
mov
jb,pn
fsubr
xchg
sbb
sbb
push
outsl
inc
arpl
and
push
hlt
inc
mov
es
inc
test
fbstp
gs
int3
test
and
jae
xchg
cmp
les
lret
dec
jp
hlt
xchg
test
fs
fcmovnu
mov
cs
shrb
lods
add
ror
pop
xchg
in
rcrb
mov
rdpmc
jmp
sbb
cmp
sub
dec
xor
mov
ret
aam
push
fsubs
cltd
shl
mov
cmc
setbe
popf
int
lcall
mov
rcrl
push
test
int
test
cmc
xor
mov
adcb
sar
xor
mov
sbb
mov
add
cs
lret
nop
push
into
mov
push
shll
lods
add
sub
lock
bound
jae
dec
lock
inc
jl
out
lret
das
cmc
jno
push
push
xchg
xchg
sarl
nop
sbb
sar
and
testb
mov
fdivr
out
shl
push
enter
jp
dec
jmp
dec
and
adc
fbstp
sbb
lahf
and
js
mov
adc
add
jno
and
mov
lahf
cmc
clc
dec
cmp
inc
sub
clc
aaa
xlat
repnz
sub
icebp
sbb
push
jo
lret
lods
xor
inc
push
lds
push
xor
mov
push
cmp
mov
sub
jae
fidivl
loop
enter
lret
xor
sbb
pop
xor
and
pop
and
adc
in
and
add
sub
push
dec
testl
pop
cmp
push
dec
out
cltd
xor
sahf
fs
in
mov
mov
or
outsl
mov
mov
mov
sbb
leave
xor
add
ja
adc
inc
clc
push
fcomi
and
and
mov
fstsw
bound
mov
add
pop
cltd
sbb
aaa
outsl
std
sbb
scas
pop
or
ret
pop
jge
ss
iret
sub
movl
aam
insb
ret
jle
push
mov
dec
sbb
pusha
jne
or
ret
aas
fbld
sbb
jne
or
push
push
nop
imul
xchg
daa
incl
push
std
and
sub
add
out
nop
cmp
cmc
mov
or
mov
mov
jb
movsl
out
daa
repz
or
call
sub
mov
scas
mov
test
push
decl
testl
pop
sbb
mov
xchg
push
jle
inc
mov
xlat
sub
fnstsw
xor
sub
pop
nop
movsb
xchg
addr16
lock
and
mov
cld
mov
mov
or
jno
lret
repz
icebp
inc
jb
jne
dec
int
mov
loope
sub
mov
nop
pop
fnstsw
testb
mov
icebp
arpl
mov
mov
repz
mov
pop
push
aam
cmpsb
rorl
mov
pop
push
es
jns
xor
iret
mov
cwtl
out
ljmp
mov
fisubs
pop
sbb
pop
mov
jo
and
mov
shlb
imul
xchg
les
or
or
jne
scas
ret
mov
clc
xchg
loopne
mov
rol
jno
jl
inc
push
jo
lods
mov
rcrl
mov
clc
inc
repz
lcall
inc
xor
test
int3
clc
xchg
push
sbb
cmpl
sbbb
add
cmpsl
mov
addr16
add
cmpsl
push
int
adc
daa
dec
and
inc
mov
subw
clc
fcomi
fs
pop
cmc
test
bound
cmp
lret
dec
movsb
hlt
fimuls
xchg
cmp
addb
sbb
mov
push
ret
mov
xor
clc
dec
dec
lods
fcomp
movhps
ret
inc
jmp
cli
ret
lahf
mov
movsb
pop
push
pop
dec
dec
icebp
xchg
inc
mov
sbb
cmpsb
or
imul
xchg
lcall
fldenv
add
cmc
fmul
ljmp
jno
ds
sub
movsb
gs
jl
outsl
dec
xorl
adc
rcr
das
gs
nop
and
mov
bound
xchg
mov
cmc
cmp
mov
test
scas
inc
loop
add
loop
push
mov
jno
xchg
pop
ja
mov
stc
jbe
jecxz
and
mov
sarl
mov
mov
outsl
mov
fdivr
ja
sub
pop
mov
pop
in
ret
outsl
and
cld
dec
loopne
icebp
popl
and
cmc
sub
mov
enter
cmpsb
mov
imul
xchg
stc
lcall
fisttps
add
xchg
mov
aam
gs
fidivs
push
inc
cmp
rcrl
mov
xlat
cs
mov
loop
pop
push
neg
xchg
lret
sbb
lods
shlb
jp
int
stc
insl
and
xor
loope
movsl
mulb
repz
lret
mov
call
push
sbb
adc
pushf
or
repnz
outsl
int3
divb
ds
ret
rclb
insl
call
cltd
cli
add
pop
pop
aaa
stos
xchg
xchg
icebp
sbb
es
push
enter
sbb
test
bound
lret
call
pop
mov
sbb
and
xchg
push
fnstenv
gs
ret
in
pop
iret
mov
dec
and
out
aam
inc
and
push
clc
out
cmp
mov
scas
imul
cmc
jno
clc
pop
lcall
dec
mov
add
sub
test
cld
xchg
inc
cmpsl
cld
pop
pavgw
xchg
fcmovu
adc
roll
outsl
or
jne
loop
and
jl
sarb
das
pushf
inc
pop
xchg
mov
jne
nop
lds
int3
cmc
addr16
int
sub
test
push
xorb
jmp
jne
mov
add
mov
repz
imul
push
popa
out
scas
mov
push
push
add
in
lahf
jne
mov
fwait
test
inc
sbb
and
adc
cld
test
mov
jnp
push
push
cmp
ja
mov
rcrb
add
popf
out
leave
inc
jno
lods
das
xor
mov
lods
push
lods
inc
aad
int3
cmp
add
dec
push
pop
fsubl
bound
in
lea
cmp
call
sbb
shrd
sub
pop
mov
add
xor
ficoms
sub
imul
jo
test
jne
and
add
loope
das
lea
into
sbb
and
add
filds
imul
aam
push
mov
xor
xor
xor
jl
jb
mov
out
lea
mov
sbb
jl
adc
ljmp
mov
lea
fcmovb
mov
lds
repnz
negl
cld
inc
mov
inc
std
inc
dec
or
cmp
lods
popa
sbb
in
call
push
mov
stos
arpl
js
out
je
lock
mov
or
push
ret
push
pushf
jb
push
imul
stos
imul
sbb
insl
mov
add
orb
imul
aam
vmovd
sbb
jnp
sub
or
loopne
mov
nop
in
inc
xchg
jg
push
jne
adc
icebp
ja
aam
xchg
dec
call
test
iret
fldt
adc
movsb
aaa
shlb
jno
pop
xor
popa
cmp
jg
jle
cmp
xchg
scas
pop
js
xchg
shll
mov
and
fstl
cli
dec
dec
bound
push
pop
jbe
push
cmpsl
rorb
xchg
notl
sbb
cmp
adc
inc
mov
or
xor
or
push
clc
pop
stos
test
leave
mov
or
pop
xchg
pop
jae
xchg
mov
daa
or
mov
in
adc
dec
fs
add
aas
sub
shl
mov
in
loopne
loope
jle
mov
scas
add
call
js
ds
in
dec
mov
andl
out
dec
sub
adc
and
dec
sbb
loop
movsb
cmp
pusha
add
stos
adc
jbe
xor
or
cmpsl
sub
pushf
call
push
fstps
stos
mov
pop
push
imul
fisubrl
dec
add
cmpsb
inc
xchg
stos
pop
pop
outsl
call
lahf
dec
sbb
bound
mov
test
and
sbb
or
xchg
push
jl
cmpsb
push
mov
in
imul
aaa
and
sbb
pop
cmp
mov
rcl
inc
or
push
add
cld
inc
add
ret
xor
lahf
idivb
lock
mull
add
mov
movsl
add
jo
fdivrs
pop
xor
push
mov
mov
push
stos
or
sbbl
add
sub
rcrb
pop
jp
lds
lcall
shrl
xor
jne
mov
xchg
incl
xor
pop
push
adc
pop
lret
orl
out
or
lds
lret
xor
cwtl
test
push
outsl
xlat
jmp
fldl
or
inc
and
outsb
mov
pop
and
and
mov
fstps
mov
cmp
lds
ret
sub
cltd
retw
mov
in
push
out
jo
enter
pop
push
sub
mov
inc
ja
or
test
add
sub
xor
push
aas
and
daa
xchg
add
xchg
lds
mov
inc
iret
sbb
inc
addr16
sbb
pop
push
sub
xor
mov
mov
fwait
jns
sub
xchg
popa
nop
repnz
js
test
dec
sbb
inc
popf
and
jb
subl
push
dec
xchg
adc
mov
dec
adc
mov
fdivs
cwtl
imul
adc
jp
xchg
test
jbe
mov
rorl
hlt
lret
insb
push
in
xchg
sbb
movsb
imul
cs
add
jecxz
xchg
repz
nop
jg
mov
sub
jns
inc
push
sti
push
mov
test
cmp
pop
mov
mov
sahf
bound
mov
sbbl
test
sbb
mov
adc
mov
jne
fistpl
popf
push
test
testb
shr
pushf
loopne
mov
sbb
xchg
loope
pop
and
pusha
fldl
shll
int3
jbe
out
mov
out
out
dec
mov
dec
das
mov
dec
outsb
jne
icebp
stos
jno
jp
movsl
mov
cs
xchg
mov
fisubs
cmp
inc
and
cmp
and
mov
ss
push
stos
es
out
mov
repnz
orb
sub
mov
adc
lea
add
xor
les
roll
jecxz
jge
sti
mov
mul
xor
or
jl
psllw
mov
adc
cmpsl
fstpl
dec
xchg
jl
push
mov
pop
xlat
invd
jmp
sub
mov
out
inc
cwtl
mov
jo
subb
addb
ret
pop
cwtl
mov
sub
inc
sub
jne
jmp
roll
or
jmp
dec
mov
or
jnp
aaa
adc
push
out
arpl
lret
hlt
movsb
aad
dec
cmp
test
push
aas
test
arpl
xor
fwait
sub
jns
mov
push
or
test
push
imul
adc
mov
addr16
lods
pop
sbb
xchg
adc
cmp
mov
pusha
rolb
mov
inc
xchg
mov
loop
loop
sub
xor
fs
inc
and
mov
cmp
aaa
insl
jbe
outsl
push
mov
mov
inc
cwtd
push
push
mov
in
cltd
cmp
xor
mov
js
dec
pop
clc
jle
shrb
mov
mov
testl
shl
loope
test
pop
dec
xchg
push
push
xor
mov
in
cmp
aad
cmpps
or
xor
cmpsl
mov
sbb
push
pop
lret
bound
add
push
jcxz
cmpsb
add
out
enter
mov
mov
cld
add
lds
stos
pop
arpl
dec
xchg
jl
pop
mov
insl
loop
xchg
push
jecxz
and
mov
lcall
mov
sti
lret
adc
ret
xchg
int
add
mov
sub
je
clc
mov
popa
scas
jle
mov
mov
pop
pop
ret
mov
fnstsw
jmp
sub
sub
mov
push
mov
mov
adc
jmp
adc
addl
mov
test
call
das
push
out
jae
loopne
jne
xor
push
adc
inc
cmpsb
and
pop
cs
xchg
push
imul
movsl
int3
sbb
mov
lret
push
imul
pusha
push
gs
pop
cmp
pop
inc
iret
sarl
cmp
xor
lds
daa
push
mov
push
mov
add
xchg
add
stc
mov
icebp
mov
popa
iret
mov
shrl
mov
std
cmp
adcl
mov
jp
xchg
loopne
dec
test
cmpsb
jns
cs
stc
and
lret
inc
adc
mov
stos
testb
lcall
mov
mov
dec
out
jb
inc
out
test
enter
lods
addb
fmul
and
mov
repnz
push
inc
adc
cs
mov
and
jmp
pop
nop
sbb
addb
xchg
sbb
test
adc
cmp
leave
lahf
fbld
or
les
cmc
pop
inc
loop
ss
push
sbb
shl
fisubl
test
scas
in
scas
mov
ss
cld
jl
hlt
idiv
es
ss
mov
bnd
scas
pop
or
push
mov
cmpsb
jp
add
mov
imul
mov
fdivr
jmp
jl
dec
dec
mov
movsb
mov
mov
fidivrs
btr
mov
sbb
adc
sub
loopne
dec
negb
aas
push
mov
add
ss
repnz
cli
ret
loope
ret
or
fcmovb
shll
je
mov
add
hlt
dec
xchg
stc
orb
inc
aas
and
pop
push
or
mov
bound
or
cmp
inc
mov
test
loopne
dec
xchg
arpl
ret
jb
leave
pop
and
int3
icebp
pop
lock
lahf
dec
ret
inc
rcrl
pop
test
into
adc
adcb
lret
mov
popf
js
loope
rcll
dec
add
aad
mov
sub
jecxz
pop
push
push
lahf
mov
jne
mov
inc
add
mov
push
ret
or
mov
sub
stos
jnp
orb
outsl
outsb
dec
push
nop
xlat
or
jb
fcmovne
mov
mov
and
inc
mov
imul
stos
and
psubusw
push
int
in
xchg
push
adc
jo
clc
popa
sub
xchg
leave
pusha
add
pop
jl
insb
sbb
sahf
mov
jne
pop
jne
inc
hlt
or
xor
xchg
xlat
das
test
in
iret
enter
mov
in
xorb
mov
int
push
inc
dec
aam
xchg
push
mov
xor
and
lcall
repz
mov
lds
fsubp
xor
inc
pusha
mov
pop
daa
jae
adc
push
adc
inc
jmp
add
mov
sbb
loope
lea
cmpb
int
inc
jmp
movsl
dec
inc
scas
fdivrl
sti
insl
cmpsb
pop
fisttpll
loope
movsl
mov
ds
incb
es
mov
pushf
push
push
fstl
ljmp
fcoms
adc
aaa
popf
mov
mov
cmp
mov
adc
adc
inc
cmp
mov
cmpl
sub
pop
iret
js
push
aam
ret
das
sbb
xorb
inc
aaa
mov
lret
fimuls
xor
jge
imul
dec
jle
pop
and
int3
cmpsl
out
dec
addb
add
xorb
mov
push
testb
xchg
test
insl
jp
and
ds
and
xchg
popa
dec
test
insl
cs
mov
or
mov
roll
daa
mov
sahf
ljmp
imul
mov
bound
mov
lret
push
jo
mov
xor
push
sub
mov
jo
scas
lods
xor
mov
movsb
jl
lret
mov
mov
lock
outsl
test
stc
sub
inc
notb
cmp
in
pop
mov
push
or
sub
xchg
scas
inc
and
adc
adc
dec
jns
repnz
insl
inc
jl
cs
lcall
cmp
sbb
jg
scas
fs
inc
repz
jbe
mov
daa
lock
jbe
dec
gs
add
int3
dec
sub
sbbb
mov
xchg
push
inc
cmp
in
loope
dec
jmp
jae
mov
mov
fisttps
push
loope
lods
in
adc
stc
pushf
jne
out
movsl
xchg
sub
decl
out
hlt
cmp
fwait
sub
outsl
xchg
or
sahf
jge
mov
jb
and
mov
stc
movsb
dec
sbb
cmp
mov
lds
sarb
push
aam
fs
xchg
pop
and
fstpl
mov
mov
jne
inc
cld
or
jge
mov
xor
add
pop
cmp
fisttpll
fcomps
dec
shll
rol
outsb
xchg
imulb
lods
sbb
ss
adc
int3
rolb
cs
sbb
fiadds
rorl
fwait
mov
jmp
push
sub
cmp
sbb
add
sbb
fcompl
scas
aad
movb
jno
out
dec
push
lahf
push
call
test
adc
dec
cmp
scas
or
mov
xchg
outsl
mov
mov
icebp
in
lods
arpl
jle
or
in
imul
mov
mov
ja
xor
mov
scas
lret
shll
and
jne
cmp
jp
lahf
jne
jns
or
andl
loope
push
xchg
mov
sti
push
jo
sub
and
jb
or
es
jmp
or
jno
and
add
out
jbe
add
int
popf
push
push
sarl
ret
call
cli
aad
negb
mov
daa
push
pop
and
ljmp
xor
xchg
sbb
push
mov
jecxz
cs
push
pop
cmp
fisubs
xor
outsl
ss
cmp
fs
push
mov
ljmp
pop
iret
mov
lea
in
in
mulb
arpl
cs
cmp
push
cmp
mov
test
fisttpl
adc
arpl
adc
add
enter
gs
lods
cmpsl
xchg
loope
mov
jmp
jg
jmp
imul
je
push
sahf
push
push
jns
dec
mov
xchg
or
inc
jae
ret
repz
cmp
test
xor
adc
xor
shlb
xchg
add
mov
pop
push
xchg
or
outsl
mov
cmpsb
sbb
sub
cmpb
jbe
rclb
loopne
std
adc
jp
inc
mov
or
lock
xor
int3
jmp
or
and
fisubl
cld
out
adc
leave
out
mov
pushf
jle
loopne
mov
dec
cld
or
push
lock
roll
jbe
sub
sti
loop
icebp
cmp
cltd
insb
mov
push
xlat
test
fdivrl
mov
adc
imul
clc
addl
aam
gs
lret
jmp
out
mov
mov
testl
sbb
push
gs
mov
xor
ss
jo
push
jb
cs
xor
dec
daa
ss
icebp
lods
xchg
lods
or
sbb
out
or
mov
mov
or
int
ja
sbb
je
xor
outsl
lds
sbb
pop
gs
mov
outsb
jecxz
mov
addr16
and
sbb
iret
stos
mov
mov
push
fdivrs
repnz
and
xchg
fcompl
pusha
daa
shlb
xor
out
cmp
test
aas
xchg
repnz
pushf
sub
mov
push
xchg
adcl
into
jns
imul
dec
mov
rorl
int3
hlt
sbb
dec
dec
jbe
mov
xor
mov
cs
in
inc
rorl
add
rclb
ficomps
pop
lea
sub
imull
sub
pop
sub
mov
adc
sub
xor
call
xchg
cld
pop
xchg
imul
xchg
mov
sub
or
addr16
ss
insl
in
pop
pop
push
fs
xor
sub
cmp
fsubl
cmp
push
inc
jae
adc
dec
or
rcrb
clc
cmp
divb
mov
inc
mov
jb
jge
into
and
ljmp
push
mov
rorb
es
rcrl
push
pop
cwtl
pop
sub
mov
sub
lds
leave
sub
adc
fbstp
lret
mulb
pop
sahf
aam
push
mov
pusha
push
add
icebp
mov
inc
insb
adc
pop
mov
inc
add
mov
push
xchg
call
jbe
inc
and
icebp
cmp
fadds
adc
jns
pop
scas
and
iret
hlt
nop
xchg
cmpsb
jne
xchg
cmp
jo
addr16
jmp
jb
addr16
aas
daa
test
add
sbb
jecxz
jecxz
mov
sbb
cmp
pop
mov
push
sahf
in
mov
shl
bound
adc
out
sbb
dec
sub
dec
flds
popf
test
xor
dec
jp
or
sub
xor
into
add
cmp
sub
add
es
call
jo
mov
mov
mov
test
rcrb
je
aam
rorb
lods
cmp
popl
adc
idivb
sbb
pop
sbbb
jb
jne
lods
fcmovnbe
es
xchg
movsb
js
enter
aam
xlat
cs
sbb
pusha
mov
push
fldenv
or
dec
aad
sar
mov
popf
add
jo
xchg
lret
pop
jmp
jo
punpckhdq
mov
xor
lock
sub
ret
cs
notb
mov
loop
mov
lret
test
xchg
in
mov
xchg
jae
add
test
popf
scas
ret
add
jbe
jle
inc
gs
jno
stos
mov
test
or
setb
adc
into
ljmp
in
xor
mov
cmp
sub
popf
iret
mov
jle
jo
dec
jmp
cmpsb
sbb
outsl
sbb
xor
sub
lds
sub
xor
sub
outsl
mov
iret
or
scas
adc
xchg
and
aas
mov
sbb
and
adc
orl
mov
and
add
adc
lret
cmp
mov
sti
out
sbb
jmp
mov
lret
sub
xchg
jge
aaa
sarl
dec
sbb
xchg
lret
xlat
jl
mov
shll
lret
dec
mov
sub
xor
adc
push
add
movsl
push
lret
pop
mov
hlt
xchg
mov
mov
fisttps
out
mov
popa
xchg
jo
scas
aas
test
cmc
subl
aaa
adc
and
mov
addr16
idivl
push
mov
in
push
sub
mov
mov
repnz
dec
jmp
jecxz
cs
testb
inc
push
cli
pop
jmp
add
popf
xor
shr
mov
sahf
sbb
lcall
stos
popf
into
cmc
dec
mov
push
xchg
sub
sbb
shlb
push
jg,pt
pop
dec
icebp
fstpt
pop
push
lahf
out
popf
xchg
xchg
enter
dec
std
sbb
cmp
lds
sub
mov
pusha
push
mov
out
int
mov
outsb
int3
sbb
add
fnstcw
mov
sbb
stos
loope
mov
sarl
cmpsl
in
nop
ja
icebp
mov
outsl
popa
loopne
arpl
push
leave
inc
jge
xor
or
movb
data16
dec
dec
xor
adc
or
xor
push
stos
sub
mov
daa
inc
cmp
and
ja
movsl
xor
mov
sarl
dec
or
arpl
rol
xchg
jecxz
daa
sub
mov
dec
mov
or
das
xor
jge
imul
mov
repz
cmpsb
add
adc
and
mov
sbb
loop
push
or
mov
outsl
jnp
push
mov
mov
mov
insl
cs
mov
pop
jns
xor
cmc
es
pop
pop
xor
pushf
aas
lock
lds
loopne
dec
xor
dec
sub
subl
in
js
jp
push
in
sbb
adc
pop
sub
into
lahf
cmpsb
sarl
dec
sbb
sub
sbb
imul
and
fiaddl
mov
push
inc
lods
adc
dec
add
ljmp
sub
test
lock
pop
jg
mov
inc
popa
movsb
pop
adc
push
outsb
pusha
add
icebp
ja
dec
test
lock
fadds
mov
jmp
mov
adc
enter
cmp
lock
cmpsb
xor
ljmp
adc
ret
adc
jae
xchg
dec
pop
je
into
out
and
and
push
ss
push
sub
inc
push
mov
fs
mov
arpl
sub
decl
push
mov
sub
inc
std
pop
adc
cmp
adc
mov
sbb
ss
push
insb
leave
push
mov
inc
mov
sub
mov
jl
push
lret
jo
xchg
xchg
inc
mov
shll
or
outsb
lahf
pop
add
push
dec
add
xor
je
add
shll
sub
test
push
int
mov
les
mov
pop
mov
leave
inc
js
rol
pop
insb
xor
inc
lcall
dec
add
push
jbe
jge
jl
add
mov
jmp
incb
add
or
xor
testl
std
and
inc
out
pop
es
sub
scas
lahf
mov
add
popf
out
stos
cwtl
push
imul
out
push
mov
in
icebp
mov
pop
ficoms
sbb
mov
sub
in
mov
add
add
adc
je
iret
mov
fdivl
mov
inc
inc
xor
std
and
fsubrs
scas
test
mov
bound
daa
jge
out
inc
ficoml
cmpsb
cmp
jb
std
inc
cmp
leave
pop
lods
insb
xchg
jns
jl
and
push
testl
in
adc
xchg
cmc
addb
inc
mov
add
sbb
lcall
or
push
nop
sub
sti
xchg
mov
pop
cwtl
flds
mov
enter
jae
rclb
pusha
hlt
dec
and
icebp
sbb
mov
jbe
rol
mov
adc
inc
addl
lods
fsubl
imul
sahf
pushf
scas
ja
jle
mov
lahf
mov
adc
inc
ja
mov
mov
lods
ss
lods
cltd
inc
adcb
scas
sbb
ds
idiv
pop
data16
out
fmul
sbb
cmp
lret
sub
dec
fisttpl
mov
aam
into
pop
pop
lods
sub
aad
icebp
add
sbb
jnp
xor
mov
rcrl
mov
mov
pop
fistpll
jecxz
mov
adc
mov
outsb
sbb
enter
adc
fisttps
xchg
or
mov
sub
ljmp
mov
imul
xchg
cmc
cmp
add
xlat
sub
push
adc
stos
movsb
into
add
pop
dec
lret
dec
jmp
jg
lods
mov
divl
adc
jp
mov
idivb
cmpsl
loope
mov
inc
ja
mov
pop
lods
mov
mov
repz
pop
in
fs
ljmp
rep
push
aad
pshufw
add
xchg
test
je
imul
mov
xor
mov
jmp
adc
das
stos
add
and
test
imul
mov
xchg
push
lahf
cmc
ficomps
and
in
sbb
arpl
jl
inc
add
scas
hlt
xor
xor
pop
xlat
adc
leave
xchg
pop
mov
pop
mov
and
rcl
repz
iret
dec
jg
fcomp
sbb
inc
xor
and
inc
jo
pop
pusha
dec
fisttpl
and
xor
xchg
mov
sub
aaa
adc
jae
lcall
xchg
xchg
int
aas
cmp
or
pop
push
fwait
adc
xchg
or
fs
cmc
nop
adc
mov
iret
dec
testl
cmp
cld
imul
lods
push
jns
outsl
adc
aad
push
xchg
stos
fisttps
popa
inc
stos
enter
sub
nop
dec
sbb
insb
mov
lret
daa
outsl
mov
cmovs
add
jbe
mov
mov
or
inc
cmp
pop
fs
scas
repz
outsl
cmp
pop
push
cmp
cmova
cli
sub
addl
test
push
inc
cmpsb
int
icebp
cmc
jle
jo
push
cmp
lock
ss
shll
push
inc
pop
ret
int3
mov
inc
sub
inc
imul
adc
or
ds
mov
jmp
enter
aaa
xor
pop
cmpsb
nop
movsb
int
bound
or
sub
or
or
sub
add
leave
jb
push
ljmp
push
pop
scas
movsl
lret
testb
scas
push
pop
out
cmp
out
ljmp
mov
push
pop
pop
add
sbb
pop
leave
mov
adc
fwait
xchg
cmp
fwait
movsb
aad
int3
ja
scas
dec
sub
mov
pop
out
xchg
adc
cs
imul
jo
mov
xor
vpcmpgtd
push
and
jge
mov
inc
loopne
lret
jecxz
ret
mov
adc
jnp
cltd
jmp
pop
mov
inc
cltd
sbb
in
loopne
pushf
dec
adc
xchg
sub
add
or
incl
shlb
lcall
adc
adc
add
mov
gs
adc
adc
dec
jle
ficompl
loope
inc
add
in
dec
into
push
pop
outsb
sub
xchg
stos
daa
bound
in
add
in
inc
daa
in
out
push
xor
adcl
pushf
mov
sbb
jp
sbb
and
sub
les
bound
and
pop
out
or
aam
ds
loop
ret
lcall
or
add
push
xchg
add
dec
xor
dec
push
movsb
sub
add
inc
push
adc
and
or
jg
dec
ljmp
fcomps
iret
pop
jp
dec
mov
mov
scas
testb
add
mov
mov
push
pop
gs
sahf
jnp
out
subl
and
mov
jns
xor
push
and
push
pop
add
push
cltd
mov
iret
lcall
shll
mov
inc
shl
ftst
xchg
movsl
add
shlb
xchg
fs
push
enter
push
cmp
mov
mov
outsb
scas
les
sbb
xchg
pop
pop
mov
out
pop
sub
mov
pushf
push
mov
cs
mov
aaa
bound
int
lret
scas
push
mov
dec
dec
add
inc
pusha
mov
std
xchg
cwtl
arpl
loope
mov
mov
aaa
shll
mov
outsl
push
stc
inc
aam
mov
stc
add
mov
sub
mov
aam
int3
sarb
mov
mov
and
jo
mov
jb
jo
scas
jbe
pop
push
aaa
add
inc
lahf
pop
sub
out
test
sub
sbb
adcb
loope
jbe
scas
sub
and
aam
mov
dec
int3
dec
insl
mov
pusha
lea
xchg
es
into
mov
xchg
mov
rcrl
in
adc
int3
mov
push
jae
sub
fcoml
ret
inc
inc
jmp
lahf
mov
xlat
outsb
pop
jle
jecxz
cmp
mov
shll
test
push
addr16
sub
push
xchg
mov
xor
push
sarb
inc
adc
shrl
pop
es
and
scas
mov
daa
push
aad
xchg
sbb
xchg
nop
subb
mov
mov
fistps
sahf
clc
add
lret
mov
leave
mov
pop
mov
mov
push
dec
add
jae
jnp
xchg
imull
js
fcoms
popf
loopne
xchg
mov
sbb
cmpsb
adc
enter
stos
test
pop
lahf
mov
xchg
shrl
test
push
cmpsl
sbb
mov
cltd
adc
popa
push
push
aas
stos
push
mov
and
cmp
mov
adc
jg
aaa
mov
pop
mov
insb
mov
push
in
test
loope
xchg
addb
loopne
clc
enter
movl
pop
insb
jb
out
clc
scas
xor
sbb
jb
xchg
jmp
adcl
popa
fdivrs
sarb
jo
mov
movsb
idivl
or
pop
int
sub
push
fstpt
push
insb
mov
addr16
out
fimuls
into
rcrl
push
cs
xor
push
dec
bswap
inc
push
mov
outsb
pop
pop
wrmsr
scas
cmpsb
lods
mov
mov
jno
gs
fwait
push
cli
lds
xor
nop
jl
mov
dec
jae
repnz
fldcw
repnz
cmp
push
jbe
js
cmp
sub
pop
loope
adc
jnp
lcall
sub
xchg
jmp
xchg
sub
and
jle
loop
xor
push
jo
pop
dec
xchg
sbb
je
xchg
shl
inc
and
sub
xor
sub
add
div
cmc
outsl
movsl
imul
loope
lea
xchg
xor
jbe
rolb
inc
xchg
xchg
divb
pop
jecxz
pusha
das
nop
arpl
loope
mov
lgs
into
mov
lds
notb
shlb
xor
repnz
aas
das
pop
sub
adc
lds
std
lret
ret
push
xchg
pop
mov
xchg
dec
mov
mov
mov
or
jle
insl
mov
aas
bound
into
sbb
es
mov
jnp
shrb
outsb
add
gs
pop
mov
or
fsubrl
lods
cmc
js
jmp
andl
jb
lcall
sub
pop
movzbl
es
insb
and
push
cmp
xor
and
arpl
test
lahf
lret
push
lret
pop
pop
sub
imul
int3
jb
into
add
xchg
cmp
sub
add
mov
vpavgb
inc
mov
sbb
dec
leave
mov
and
xor
int
add
sub
imul
mov
cmp
pcmpgtw
and
dec
xor
in
push
or
scas
xor
inc
push
fisttps
mov
fs
mov
loop
xchg
or
xor
adc
xchg
fldenv
push
jae
mov
in
inc
out
mov
pusha
sbb
dec
cmp
push
cld
fsubp
pop
js
lret
fs
lds
pop
sub
pushf
and
fsubrp
aam
repnz
pop
xor
sbb
sub
into
mov
add
cmp
gs
xchg
pop
mov
adcl
jbe
push
adc
sub
sub
and
adc
jno
sti
rcrb
cmpsb
iret
fs
popf
arpl
inc
xor
js
imul
push
push
pop
fwait
mov
cmp
gs
lret
cld
mov
mov
call
fiaddl
js
imul
mov
gs
push
cmc
xchg
and
std
nop
mov
mov
jmp
addr16
adc
or
pop
pop
jecxz
xlat
adc
aas
sub
jae
lahf
mov
and
xor
das
in
sub
adc
push
cmp
cmpsb
push
mov
inc
les
sbb
inc
and
repz
outsl
stos
divl
loope
mov
mov
sub
sub
push
push
fbstp
fsts
in
pop
lods
andl
xor
add
test
xchg
lds
iret
movsb
rorl
jp
lret
dec
mov
rcrl
adc
dec
iret
pop
nop
dec
aam
mov
in
sub
int
rclb
pushf
pop
hlt
cmp
lds
sbb
insl
xchg
inc
divb
fidivrl
push
ret
mov
and
jle
leave
xor
push
inc
js
addl
cmpsl
pop
std
dec
mov
add
jge
repz
insl
pop
push
pop
scas
or
sarl
fisubl
and
call
lret
cmp
inc
ljmp
inc
out
out
push
into
mov
cltd
add
rep
dec
ret
stc
cmpsb
pop
xor
sub
pop
shlb
enter
and
mov
sbb
sar
repz
or
rol
push
jge
outsl
arpl
mov
pop
push
lret
cmp
jle
mov
mov
fsubs
aaa
inc
xchg
xlat
pop
adc
and
add
jecxz
mov
ljmp
push
aad
out
lods
lcall
mov
and
pop
pop
cltd
lods
cmp
adc
addr16
dec
push
dec
pop
enter
pop
mov
jnp
mov
lods
inc
sbb
push
dec
mov
lds
jnp
lds
stos
cli
orb
lods
enter
inc
xchg
push
mov
daa
aas
testl
ret
sbb
xor
sub
dec
xor
pop
push
mov
mov
out
mov
imul
pop
cmpl
inc
outsl
push
sahf
mov
pop
sbb
mov
or
adc
gs
sub
mov
mov
cltd
sbb
push
pop
xchg
in
dec
out
hlt
jg
jmp
push
rorb
cltd
and
push
mov
lock
rcr
inc
jge
push
fdivr
mov
pop
dec
dec
and
cld
nop
mov
insl
mov
into
je
cmp
stos
jge
test
xor
mov
fisttps
insl
jne
xor
pop
imull
sub
insb
arpl
jae
jne
jp
add
enter
sbb
mov
fldln2
adc
addl
sub
loope
mov
loope
js
cmp
call
or
pusha
movsl
mov
pop
cltd
roll
shll
pop
sub
adc
popf
inc
std
orl
xor
mov
cmp
and
mov
lods
out
test
andl
shll
pop
addl
aas
rcrl
js
sub
stos
out
inc
lahf
cmpsb
cld
mov
lods
pop
dec
push
push
dec
negl
cltd
mov
inc
add
mov
rorb
orl
push
and
push
mov
mov
sbb
or
mov
mov
sbb
in
and
scas
pop
jle
je
pop
mov
test
in
paddsw
pushf
cmp
mov
mov
inc
xchg
lods
shll
dec
mov
mov
jl
dec
in
movsl
adc
xor
and
mov
dec
and
xor
mov
je
scas
sbbb
inc
adc
ja
arpl
pop
pop
push
dec
jmp
lods
clc
and
pushf
mov
lods
jge
inc
dec
insl
mov
cmp
jle
rolb
mov
sahf
les
ret
mov
mov
fstpl
adc
repz
mov
and
jmp
and
das
xor
pop
jmp
into
lods
pop
or
push
and
xor
and
aam
movsb
push
fwait
xor
dec
pop
push
inc
pop
aam
adc
fisubrs
jb
out
pop
push
xor
cmpsb
mov
sbbl
cltd
inc
inc
std
inc
add
call
imul
add
nop
sbb
rcrl
out
inc
imul
aam
test
inc
dec
dec
pop
fcomip
fsubl
outsb
mov
xor
and
xchg
xor
insl
push
mov
call
call
inc
jle
test
pop
cmp
xor
jle
mov
or
aam
and
cwtl
subb
add
imul
mov
out
jge
icebp
mov
hlt
insb
sti
lea
imul
or
lret
das
push
adc
scas
jl
stc
jmp
add
gs
push
mov
sbb
cmpps
xor
pop
lret
fldenv
adc
icebp
enter
les
out
mov
cltd
clc
dec
hlt
mov
bound
add
or
lahf
in
les
repz
xlat
add
sbb
dec
jo
inc
aam
mov
ljmp
outsb
mov
cmp
dec
cmpsl
loope
loop
sbb
pusha
jb
cmp
lods
mov
and
xchg
and
mov
sub
push
cmp
sbb
jg
test
sbb
aas
sbb
mov
leave
out
sbbl
pop
ret
adc
das
stc
mov
add
repnz
mov
xchg
mov
push
mov
jno
pop
jl
xor
dec
scas
push
fistps
imul
pop
mov
loopne
add
out
inc
push
dec
call
xchg
cmpsb
push
in
in
lods
and
lock
or
rorb
cmp
sti
call
adc
xor
shlb
arpl
ffreep
aaa
sbb
ret
cltd
fildl
pop
mov
cmp
outsl
sub
jno
mov
adc
jg
arpl
repnz
dec
xor
popa
inc
or
adc
rcrl
inc
stos
cmp
xor
xchg
or
jmp
fstl
sub
in
sub
xor
xor
xchg
inc
jnp
cmp
xchg
call
cmc
pop
into
sbb
hlt
fisubs
mull
movsb
imul
es
jb
pusha
aaa
sarb
movsl
sarl
call
mov
jecxz
pop
xchg
mov
xchg
stos
push
adc
jbe
lret
inc
call
in
in
and
aam
and
dec
xor
fwait
icebp
lcall
insb
jle
nop
iret
test
xor
jnp
push
aaa
outsl
inc
cmc
fnstcw
in
mov
sub
xlat
inc
and
call
pop
stos
and
add
pop
imul
cmpsb
shlb
iret
sarl
dec
or
and
inc
cmp
dec
sbb
outsl
dec
add
and
adc
jmp
adc
dec
arpl
dec
add
lahf
scas
testl
sbb
xchg
jp
sti
pop
dec
xchg
jecxz
mov
mov
inc
into
dec
xchg
jb
xchg
add
adc
in
fwait
mov
xchg
jmp
pusha
insl
push
jmp
in
inc
xlat
mov
testl
and
mov
adc
inc
jg
xor
pop
insb
adc
imul
and
mov
xchg
add
push
or
jnp
cmp
call
mov
sbb
push
jecxz
add
mov
iret
push
ss
loope
mov
jg
cli
test
push
rcrl
xor
loop
insb
aam
add
movsb
add
xchg
xchg
jns
icebp
insb
es
push
and
data16
int
jne
sub
inc
sub
ljmp
and
jp
in
sbb
cmp
push
repz
and
int
push
add
cmp
dec
fisubs
mov
nop
push
inc
pop
gs
pop
daa
popf
dec
cmp
rol
xchg
enter
in
jmp
xor
or
stos
test
jmp
adc
fxch
jp
push
sti
or
outsb
sbb
and
sbbb
push
inc
pop
pop
inc
pop
sbb
sub
or
int3
dec
xchg
not
movsb
cmp
jnp
aaa
push
sbb
pop
filds
jl
in
mov
pop
lahf
popa
leave
xchg
aaa
daa
ljmp
dec
scas
sbb
mov
inc
roll
or
lcall
sbb
cmpsb
pop
daa
pop
or
mov
or
or
mov
and
mov
sti
sahf
inc
ret
mov
jns
jecxz
jb
sub
in
cwtl
jmp
outsl
in
cmp
push
scas
cmpb
addl
jae
aaa
pop
and
roll
stos
lret
imul
pop
push
imul
movsl
add
push
mov
mov
fwait
cli
jle
pop
fistps
cmp
pop
cmp
das
push
dec
adc
sbb
cmp
mov
jmp
add
sti
dec
addl
aas
cwtl
xor
mov
jg
in
pop
fidivs
ljmp
push
mov
pop
sub
stos
out
xchg
mov
leave
and
aad
sbb
jg
xlat
cmc
ja
icebp
mov
add
lret
xor
in
push
movsb
je
outsb
push
mov
dec
and
pop
sbb
mov
int
aad
test
push
push
push
scas
mov
inc
sbb
enter
xchg
sbb
xchg
push
mov
loop
and
jecxz
push
add
mov
cmp
fcompl
sbb
mov
dec
xchg
push
faddl
das
rorb
scas
adc
xor
lcall
movsb
mov
call
sbb
daa
lds
lcall
mov
lds
jg
adc
xchg
pop
sti
aaa
inc
push
jle
cmp
loop
sub
add
dec
aam
mov
rol
or
filds
stos
sahf
lret
adc
jge
or
stos
pop
in
lock
gs
test
jb
or
stc
add
dec
push
mov
cmpsl
fwait
sbb
and
push
popf
jmp
mov
or
nop
or
or
loopne
int3
test
imul
aas
dec
neg
xor
and
lods
push
mov
movsb
push
imul
test
adc
push
jp
pop
lds
cmp
push
jge
adcl
jbe
arpl
inc
jns
adc
mov
xchg
lea
es
sub
dec
es
push
cmp
sub
xor
mov
mov
xchg
cmp
insl
add
mov
flds
loopne
push
pop
push
inc
sub
inc
pop
sub
pop
call
mov
dec
inc
pop
sub
les
mov
jno
fadd
sub
pop
out
mov
xchg
mov
lcall
fcomp
add
add
push
stos
rorb
add
xchg
test
pop
pop
mov
or
push
cld
shl
xor
test
jo
pop
outsb
pop
mov
fldl
mov
ds
orl
adc
loopne
and
test
es
fidivrs
cmp
and
mov
int3
or
std
lret
in
xor
dec
insl
mov
fldenv
fwait
ds
cmp
sbb
mov
or
mov
dec
cmp
pop
fstpl
shll
add
pop
xor
loope
iret
adc
and
xchg
imul
js
int
jg
adc
or
out
out
inc
pop
xor
jo
ss
roll
imul
nop
push
cld
sbb
daa
stos
jl
das
fwait
inc
andb
pop
inc
sub
mov
ja
sub
add
add
lods
sub
push
mov
cmpsl
jmp
int3
test
je
mov
mov
dec
arpl
xchg
mov
add
sti
ss
sbb
sbb
mov
mov
aas
or
rcrb
mov
cmpl
int
and
cmpsl
cmp
and
pop
push
xchg
loopne
bound
insl
dec
daa
loope
fdiv
inc
hlt
pushf
xchg
adc
push
pop
cltd
fstpl
out
inc
pusha
add
clc
test
push
lcall
movsl
in
stos
add
rcl
xchg
enter
mov
mov
mov
cltd
cmp
notl
sbb
fistl
xchg
mov
insb
popf
inc
pop
imul
pop
push
fidivrl
mov
inc
sbb
lods
jnp
sahf
shlb
lret
fmuls
pusha
mov
mov
push
pop
insb
out
mov
pop
and
fistpll
inc
push
push
test
scas
add
and
mov
out
adc
das
dec
lcall
movsl
add
dec
push
out
inc
xchg
sbb
inc
pop
shlb
cmc
inc
jbe
jmp
movsl
jge
push
mov
cld
push
lods
lea
dec
rcrl
fnstsw
sbb
inc
cmpsl
push
jl
and
jb
push
dec
jno
add
adc
sub
inc
bound
pop
in
jl
fstp
ljmp
mov
xchg
mov
push
enter
and
add
int
repnz
in
and
pop
mov
aaa
dec
xchg
into
mov
xor
dec
fsubp
sar
push
aaa
test
ret
dec
aad
cmp
mov
jle
lods
adc
insb
xchg
mov
test
sub
fidivl
es
lea
xlat
ja
lock
jbe
in
lock
add
mov
rorl
mov
cltd
cld
push
daa
rorb
mov
popf
jne
jmp
or
jnp
movsl
scas
mov
jns,pt
pop
lea
inc
lea
fsubr
push
test
in
shrd
xor
mov
movsl
lea
sbb
pop
mov
popa
arpl
in
and
cmpsb
push
dec
push
push
xchg
push
sub
cmpsb
int3
adc
lea
or
dec
push
je
je
icebp
icebp
icebp
cmp
loop
mov
jge
pop
pushf
sub
insb
or
and
jg
dec
insl
fldenv
mov
xor
arpl
cmp
cmp
aam
iret
ja
call
ret
icebp
aam
add
pop
int
cmp
inc
test
mov
outsl
rcrb
push
jnp
cmp
jns
push
sub
ljmp
stc
add
xchg
mov
adc
in
mov
in
unpckhps
pushf
adc
mov
lret
call
jae
push
jo
test
adc
lods
xchg
shl
jbe
jae
inc
aad
xchg
rorl
out
lret
stos
sbb
sarb
mov
das
sub
xor
jb
mov
test
sbb
popa
mov
loope
xchg
inc
test
jne
inc
xchg
inc
sahf
ret
int
push
inc
xor
add
push
xchg
inc
outsb
pop
dec
sbb
rcll
push
ds
and
jge
in
mov
insl
sub
jp
lret
leave
mov
inc
sub
mov
adc
mov
or
cwtl
sub
jp
mov
dec
js
jge
outsb
fldt
dec
xchg
mov
mov
nop
adc
bound
or
inc
rclb
sarb
or
loop
mov
std
shlb
and
pushf
jns
iret
in
dec
stos
stos
mov
out
icebp
mov
add
fcmovnu
cmp
mov
rcrb
pop
sbbb
cmp
call
data16
add
rclb
call
xchg
sti
popf
loopne
insb
and
xchg
shll
mov
in
shl
cmp
mov
push
imul
in
std
imul
imul
push
lods
stos
or
inc
ret
repz
adc
jp
mov
daa
mov
mov
negb
xchg
fcomps
adc
xchg
cmp
popf
nop
dec
mov
fucompp
ffree
frstor
jg
sbb
popf
leave
cmpsb
dec
aas
insl
shl
sbb
fisttpl
cli
sbb
lea
add
xlat
push
jge
lret
mov
dec
jl
outsb
shlb
enter
jle
test
lahf
ljmp
fistps
add
adc
pop
insl
mov
sti
fstp
test
mov
lret
jmp
xchg
fsubrs
test
xchg
cmp
push
push
add
ficompl
cs
clc
cmp
cmp
test
mov
sub
adc
mov
lods
enter
fs
sar
cmp
cs
add
lret
mov
pop
stos
xchg
insb
jb
iret
leave
lahf
dec
adc
adc
aam
inc
outsl
jbe
pop
aaa
decb
dec
pushf
cmpsb
fldl
out
mov
ljmp
inc
mov
gs
jne
ret
sti
xlat
sbb
mov
ret
pop
daa
sub
xchg
pop
mov
xor
cmp
mov
push
sbb
sbb
mov
out
xor
xlat
or
xor
out
and
mov
jbe
insl
dec
cmp
test
and
xor
ror
xchg
test
mov
dec
push
pop
jp
xchg
enter
push
inc
push
sbb
popa
popf
xchg
loopw
dec
stos
cmp
jae
into
leave
ljmp
gs
fldenv
or
leave
mov
xor
or
sub
lock
sbb
jo
sub
mov
push
enter
pop
fldl
repz
push
andb
gs
sahf
cltd
mov
mov
inc
jp
mov
lcall
pop
vpmacssdql
xchg
pop
xor
mov
movsl
testl
or
lds
fldcw
clc
dec
inc
inc
or
int3
insl
dec
push
fnstcw
js
add
lock
rcrl
pop
or
test
xor
xchg
aaa
iret
jg
or
xchg
xor
shrb
pop
clc
sbb
icebp
inc
cmp
aas
movsb
xor
fisubs
xor
pop
arpl
xchg
aaa
ljmp
push
mov
iret
adc
cmp
fistpll
xchg
jg
lods
jge
loop
fsubrl
mov
push
filds
ds
dec
push
fdivl
cmpsl
jecxz
cwtl
push
sub
sti
sub
lds
int3
push
xchg
mov
add
mov
or
ds
mov
mov
scas
rol
xchg
xchg
sahf
sub
js
enter
push
cli
and
xor
std
push
cmpsl
pop
pop
cld
ret
dec
jge
int
adcl
xor
aas
cmpsl
mov
loopne
jle
sub
sbb
imul
enter
test
add
ret
iret
es
and
mov
jb
mov
add
xchg
loope
scas
leave
push
push
add
sarl
or
repnz
xor
push
andl
inc
lahf
fcoml
inc
push
sub
cltd
fcoms
mov
add
cli
stc
pop
stos
leave
mov
iret
js
cld
outsb
cmc
sahf
mov
sti
mov
lahf
nop
shll
mov
repnz
cmpsl
out
xchg
mov
mov
pop
adc
test
movsb
clc
mov
and
jb
jnp
cwtl
repnz
lds
es
mov
shrb
and
sbb
loopne
dec
lret
cmp
jle
mov
iret
bound
repz
sub
fldt
lods
jl
fwait
scas
cld
in
cmp
mov
xchg
dec
xlat
mov
push
iret
cmp
fcmove
or
mov
mov
push
rol
mov
xchg
xchg
jecxz
adc
xor
sub
dec
clc
pushf
pop
jbe
mov
mov
push
js
mov
aad
and
pop
jbe
xchg
icebp
add
into
pop
bound
data16
xor
jl
cmp
xchg
lods
fmull
gs
xchg
sbb
int
add
inc
out
repz
push
rclb
jle
je
fdivl
gs
pushf
inc
out
jl
or
leave
adc
rol
jecxz
jae
stos
or
xchg
push
push
sub
pop
mov
push
xor
push
sub
pop
xchg
mov
imull
incl
push
mov
frstor
sbb
xor
mov
cwtl
jecxz
mov
in
pop
arpl
mov
jecxz
adc
push
fs
jbe
in
mov
shll
fnstsw
push
push
and
in
js
loop
out
pop
fisttpll
lret
sbbl
movsl
fcomi
inc
and
fs
xor
enter
cli
dec
out
pushf
fstl
inc
inc
push
aam
imul
and
andb
fwait
or
xlat
lods
test
inc
jne
js
out
sbb
pushl
dec
nop
mov
mov
in
jbe
fs
sbb
bound
jge
cs
ret
pop
and
pop
push
ja
mov
xchg
xchg
je
adc
lds
dec
push
ret
xlat
loope
dec
sub
or
xlat
scas
sbb
sbb
loop
mov
hlt
scas
rol
in
mov
xchg
add
outsl
mov
popa
push
mov
sbb
in
jl
sub
add
les
stos
mov
ljmp
mov
mov
xchg
jl
popf
jne
in
cmp
aad
js
loopne
mov
mov
jg
mov
cmp
fidivrl
das
lods
push
les
or
ret
popa
ja
jg
rcrl
sub
jne
das
lcall
rcrb
data16
adc
inc
mov
cmpsl
sbb
dec
stc
cld
test
loop
dec
clc
mov
sbb
mov
cmp
mov
inc
inc
mov
loope
and
shrb
test
mov
mov
test
or
xchg
testl
rcrl
out
imul
roll
cmpsl
aaa
fwait
inc
jle
imul
jne
out
inc
and
and
jmp
loopne
dec
cltd
xchg
add
adc
lahf
int3
sbbl
pop
sub
loope
inc
inc
fnsave
mov
add
push
xor
mov
sub
jg
sub
sbb
mov
ja
lret
xor
xor
mov
hlt
mov
jns
in
das
and
stos
push
dec
fisubrl
xchg
cmp
cmpsb
cmc
outsl
cmp
jp
or
mov
adc
cmp
subl
mov
xchg
ret
xchg
dec
mov
ret
in
push
das
cmc
dec
ror
mov
sahf
lock
adc
and
push
int3
rcr
mov
sbb
xchg
leave
rcrl
imul
inc
jp
bound
inc
and
dec
xchg
inc
sub
xchg
std
pop
clc
test
enter
dec
mov
cmp
movsb
mov
sbb
notl
dec
push
lea
jne
aad
adc
adc
ljmp
xor
add
xor
int3
mov
add
shlb
dec
jp
jp
cmc
sarb
push
repnz
mov
dec
test
ja
lods
jp
repz
push
fstpl
adc
inc
fs
inc
push
popa
inc
ds
push
ret
inc
mov
cmp
rcll
mov
and
sbb
jle
loopne
insl
adc
push
push
imul
insl
cmpsb
shll
cmp
or
gs
mulb
and
jle
test
cmp
mov
mov
stos
je
lret
xchg
sarl
cmp
cld
mov
sbb
outsl
cmp
adc
les
pop
enter
mov
push
pop
inc
xchg
data16
sub
fldcw
pusha
jo
push
fs
add
pop
add
and
fs
fwait
jne
mov
xchg
int3
and
xchg
mov
mov
xlat
xlat
lock
dec
sub
cs
popf
mov
or
sub
shll
push
and
mov
nop
xchg
dec
xor
icebp
test
xor
dec
movsb
aad
fildll
dec
adc
jecxz
movl
repnz
stos
and
xchg
push
jbe
inc
mov
mov
add
inc
imul
rcr
pop
push
lret
imul
loopne
xchg
in
xchg
xchg
push
lahf
sarl
iret
es
int
mov
icebp
inc
xchg
je
jbe
mov
sbb
xchg
enter
jp
leave
xchg
lahf
leave
xor
cmc
cmp
adc
ja
call
pop
fmul
mov
mov
int
adc
mov
cld
popa
loop
pop
cs
push
shrb
jmp
std
push
out
mov
mov
sahf
xor
lock
test
popf
xchg
cmp
sbb
sub
mov
test
jbe
mov
lds
cmp
stos
insb
stos
fnstsw
mov
add
or
sub
add
hlt
dec
pop
loopne
stos
test
adc
jp
push
mov
dec
out
cmp
in
outsb
jmp
or
dec
shll
mov
push
out
int3
leave
add
push
pushf
ret
jecxz
add
aaa
aaa
cmp
sub
adc
jbe
dec
dec
dec
cmc
iret
test
movsb
test
insl
xchg
data16
pop
inc
jecxz
or
or
fcomps
arpl
fists
pop
adc
jecxz
xchg
aaa
mov
mov
sbb
shr
lahf
dec
and
loop
aaa
lret
push
sbb
mov
mov
subl
xchg
movsl
mov
cld
in
ljmp
outsl
into
adc
xchg
scas
movl
sbb
pop
mov
fisttps
sub
fisttpl
jg
icebp
add
iret
js
xlat
and
or
rcl
insl
push
or
arpl
sarb
popa
ds
xchg
cmc
loop
and
aaa
pop
inc
add
xchg
adc
data16
stos
jne
mov
push
cmc
imul
scas
mov
jbe
testb
add
icebp
jnp
mov
scas
dec
stc
mov
test
arpl
jmp
loopne
jae,pt
xchg
hlt
test
lods
xchg
mov
mov
aaa
das
xchg
xor
out
cmpsl
inc
push
test
add
daa
pop
movsl
hlt
pop
loope
div
mov
lret
pop
test
push
dec
addl
jb
inc
add
mov
add
xchg
jmp
stc
into
xchg
subl
adcb
idivb
mov
add
jbe
sti
popf
out
fiaddl
mov
int
push
lock
imul
dec
sub
adcb
cmp
pusha
jnp
mov
sub
scas
outsb
loop
mov
xor
das
mov
nop
ds
mov
outsb
pop
adc
in
pop
jle
push
mov
and
outsb
into
add
mov
push
xlat
dec
pop
jge
in
pushf
shll
jl
or
std
out
or
ret
sbb
xor
xchg
jne
data16
add
mov
aad
cmpsb
pop
mov
lea
inc
inc
movsl
jbe
jnp
add
test
inc
sbb
ja
punpckhbw
bnd
mov
pusha
insl
ss
add
outsl
sti
pop
mov
cltd
sbb
outsb
xchg
subl
int
add
outsb
dec
sarl
xchg
push
mov
jl
xchg
loope
mov
jmp
in
pop
mov
cmp
cltd
ja
movsl
add
outsl
add
lock
mov
dec
sub
arpl
movsl
hlt
and
out
mov
mov
stc
sub
add
cwtl
sub
pop
mov
push
dec
jne
cli
lahf
stc
push
or
or
loope
fs
int3
pop
or
push
pop
jle
into
jecxz
xchg
cltd
ficoml
repz
dec
dec
adc
and
cmpsb
hlt
pop
mov
shrb
mov
fiadds
cmpsb
rorb
adc
and
add
fs
push
sbb
in
xchg
out
test
sub
sub
adc
idivb
sub
int3
dec
pop
inc
cmc
jns
mov
push
lds
mov
lods
lret
lods
in
js
mov
ljmp
out
and
in
movsl
stc
jge
ljmp
cmp
push
loope
shlb
insl
fistps
outsl
dec
mov
jo
push
mov
outsb
inc
inc
inc
and
xor
ror
stc
dec
inc
call
mov
push
sub
inc
out
test
popa
divb
push
pop
mov
call
enter
stc
movsb
mov
mov
jle
xor
jbe
sbb
popa
sbb
cli
push
in
cmp
cmp
add
xchg
push
and
insb
outsb
sub
and
inc
enter
inc
leave
jns
dec
jno
pop
jb
lds
lret
xchg
fcom
pop
cmp
inc
ds
mov
or
enter
iret
test
lods
xor
int
inc
int3
je
sub
loop
push
or
mov
stos
xor
lret
push
sub
insl
jp
push
xlat
mov
jmp
dec
pop
add
or
jg
inc
mov
loop
ds
xchg
xchg
push
and
pop
sbbl
cs
or
jp
jp
mov
ja
or
jl
sbb
roll
aas
gs
dec
aas
lods
mov
mov
jb
lret
orb
in
mov
mov
nop
inc
add
push
es
jmp
jo
inc
icebp
inc
xor
test
ljmp
mov
fdivs
jle
push
bnd
in
out
dec
mov
xlat
cmpsb
dec
out
movl
adc
xor
in
loop
xor
mov
repz
pop
or
or
inc
das
js
cltd
jmp
sbb
aas
and
test
lds
movsl
push
or
inc
pop
lahf
xor
test
cmp
adc
pop
aam
xor
cmc
cmc
xchg
pop
aas
andl
in
std
roll
fnsave
and
fs
xchg
add
pop
dec
nop
dec
pop
cld
int
xchg
dec
sbb
jns
ret
sub
mov
pop
jp
push
sbb
dec
in
subb
call
add
stos
xchg
dec
jl
std
testb
adc
dec
jp
xchg
jns
dec
xlat
or
mov
loopne
fldl
pop
mov
push
loope
or
imul
dec
int3
inc
sbb
xlat
loopne
push
lods
scas
sarl
jge
and
xchg
jmp
dec
cs
pop
adc
inc
and
scas
mov
mov
lahf
lcall
sbb
nop
hlt
mov
dec
dec
mov
xchg
push
jbe
addr16
mov
insl
std
dec
stos
sub
rclb
inc
cs
pop
bound
mov
sub
ds
ret
stc
and
and
test
daa
in
xchg
std
jmp
out
inc
int3
mov
xchg
xor
dec
js
pop
adc
rcrl
dec
adc
pop
xchg
ficompl
lea
divl
xchg
lds
shr
dec
adc
aad
xorb
int
sub
pushf
inc
dec
addl
mov
pop
sarb
xchg
push
mov
dec
mov
pop
sbbl
movsb
xor
or
imul
push
cltd
aaa
inc
xchg
xor
lock
ds
pop
mov
nop
adc
movnti
sbb
subb
shrb
adc
push
out
jecxz
mov
sub
rorb
aad
popf
or
push
inc
mul
in
and
test
imul
cmp
dec
cli
or
mov
stc
pop
or
xor
and
addr16
and
hlt
mov
lea
ja
dec
int
adc
inc
jne
push
sub
sbb
push
pop
test
leave
cmp
cmpsb
jns
push
scas
mov
xchg
movsb
xchg
xor
cmp
push
loop
lods
pushf
sub
inc
mov
mov
imul
rcrb
xchg
cld
mov
push
mov
ficoms
cmp
pusha
in
in
mov
inc
sub
pop
fcoms
jae,pt
in
daa
repnz
jl
fildll
cmp
jno
dec
push
sbb
or
push
and
push
and
cmpsl
leave
stc
movsb
mov
fcomps
pop
xchg
lock
pop
jno
pop
sub
gs
add
push
add
fisubrl
push
push
or
jbe
ret
push
les
data16
cmp
add
cs
je
bound
cmc
andl
mov
xchg
gs
in
in
mov
inc
push
xchg
xchg
xlat
push
adc
fwait
mov
aad
out
mov
mov
xor
xlat
xchg
sbb
fisubl
pop
arpl
fld
adc
xchg
sub
test
push
dec
jb
xchg
xorl
sti
sbb
sub
dec
stos
jno
outsb
add
scas
inc
cld
test
push
sub
sbb
add
xchg
cmpsl
mov
aam
aaa
stos
lods
stos
ret
xchg
cmp
movsl
lods
jmp
bound
pop
outsb
test
pusha
jecxz
loopne
fsubrp
out
int
sahf
scas
out
jp
pop
sbb
dec
pop
inc
add
int3
popf
rol
mov
pusha
sbb
and
stc
sub
out
lahf
ljmp
adc
int3
nop
popa
mov
repz
push
fidivl
movsl
mov
orb
mov
cwtl
lds
fnstsw
outsb
jle
xor
and
push
lret
test
pop
testb
aam
test
sbb
enter
int
std
and
inc
mov
lods
mov
rorl
fists
add
sub
and
mov
xlat
inc
aas
xor
push
cmp
or
jbe
sub
pop
loope
xchg
ljmp
insl
out
cli
jb
test
mov
es
or
sbb
leave
out
adc
xchg
adc
hlt
jne
sbb
xchg
mov
mov
sub
jae
mov
and
mov
nop
sbb
cmp
xchg
push
pop
push
dec
inc
out
lret
sub
jle
sbb
stos
shll
inc
fst
xchg
mov
pop
and
and
inc
addl
mov
pop
inc
or
xor
pop
jecxz
dec
xlat
ret
and
ja
push
or
ret
jne
xor
add
or
sbb
test
pop
ret
sbb
push
daa
inc
pop
ds
adc
nop
in
dec
mov
xor
pop
jno
cltd
cmp
hlt
leave
xorb
push
mov
xchg
daa
out
in
push
adc
mov
jle
shll
and
cmp
arpl
movsb
mov
je
clc
add
lock
pop
inc
sarl
leave
adc
xchg
gs
out
enter
adc
jle
push
inc
cmp
mov
enter
add
push
jmp
int
mov
stos
mov
js
lcall
test
dec
cmp
xchg
sbb
mov
add
insl
cmpsl
push
pop
fwait
and
aam
repz
mov
pop
fwait
int3
imul
xchg
lret
out
flds
adc
push
or
aaa
insl
test
inc
xchg
data16
dec
faddp
lods
aas
inc
cld
and
stc
pop
push
outsl
pop
lods
mov
xor
mov
inc
inc
sbb
jl
adc
jge
dec
sbb
mov
push
je
clc
aas
loopne
adcb
jnp
or
test
fists
lcall
ss
testb
cli
cmp
xor
xchg
ja
out
orb
je
lods
in
or
inc
xorb
sub
pop
sbb
xchg
dec
outsl
inc
sbb
lea
addr16
pop
callw
into
out
lods
xor
jg
call
mov
inc
or
lcall
adc
adc
cmp
mov
ljmp
test
in
stos
ljmp
and
jecxz
das
sub
outsl
jge
xchg
xchg
push
push
iret
mov
mov
dec
adc
push
sub
scas
push
lret
aaa
loop
addb
mov
mov
notl
lcall
inc
cmp
mov
jp
call
add
int
cmp
or
shlb
pop
sbb
jnp
hlt
mov
imul
pop
cmp
daa
cmp
in
lods
inc
xor
sti
xor
jle
sub
mov
and
mov
sbb
lret
in
adc
mov
subl
xchg
mov
gs
jmp
jno
pusha
mov
ds
enter
loop
xchg
ss
pop
add
loope
and
clc
pop
lds
push
sbb
ss
push
mul
rcrl
adc
add
pop
sbb
xchg
and
mov
sbb
nop
adc
jmp
fs
xor
lods
sti
sbb
inc
movsb
lcall
in
add
sub
iret
or
inc
and
cld
cmpsl
mov
xor
leave
rol
push
in
cmp
test
cmpl
pop
jnp
jne
mov
xor
inc
sarl
adc
sbbl
inc
lock
jp
or
adc
xchg
in
subl
sbb
or
mov
out
ret
shl
jns
adc
les
stos
out
fisubl
xor
jbe
andb
jmp
clc
popa
aam
and
xchg
push
pop
push
or
adc
cli
ret
lds
adc
je
inc
dec
bnd
mov
outsb
fcmove
fcmovnb
mov
cmp
inc
pop
and
ret
fildl
ja
inc
call
or
dec
sbb
xchg
dec
out
sub
andb
or
dec
out
outsl
outsl
jg
icebp
shrb
mov
fcompl
sahf
cwtl
cmp
sub
or
mov
setl
call
js
outsl
pusha
xor
pop
jb
stc
je
ljmp
mov
push
push
stos
lods
xor
push
scas
inc
repnz
xor
push
lods
in
mov
mov
mov
sti
push
out
mov
insl
dec
xchg
add
lahf
mov
int3
add
loopne
idivl
fstp
push
sub
adc
jbe
xchg
or
lea
and
je
aad
imul
push
inc
aas
cmp
adc
les
repz
mov
dec
les
add
fcoml
js
nop
add
insl
jb
gs
push
sub
xor
dec
jge
repz
mov
and
push
push
cld
sub
test
hlt
mov
sarl
sbb
in
xor
stos
mov
sbb
imull
cltd
cmpsb
arpl
cmp
jnp
subb
cwtl
ret
dec
lret
adc
push
add
ja
cmp
jge
push
dec
jge
pop
adc
mov
pop
xchg
mov
out
xchg
int
movsl
xor
cmp
push
enter
push
sub
adc
cmpb
mov
pop
movsb
lea
int
ljmp
addr16
cmpsl
mov
outsl
push
pusha
loop
jl
sub
sub
ret
xor
xor
dec
add
je
inc
inc
cs
data16
jne
test
pusha
je
jbe
std
outsl
out
shll
lahf
mov
cmp
mov
fucomi
or
mov
push
mov
cmc
mov
ljmp
jl
dec
pop
das
adc
je
flds
xchg
lods
jne
aam
sbb
push
and
in
fcomps
cmpsb
repnz
sub
ja
inc
and
dec
sbb
lret
movsl
mov
mov
cmp
xor
xor
in
ljmp
aas
jns
inc
mov
outsb
cmp
xchg
imul
mov
icebp
int3
rol
pop
movsb
sub
sbb
xchg
mov
bound
xor
loope
hlt
out
loope
sbb
mov
rcr
inc
lahf
lea
dec
xor
rcrl
jne
pop
out
xor
dec
jle
stos
fldenv
and
xor
ret
mov
lret
and
out
lods
test
inc
lds
cmpsl
xchg
mull
inc
stc
arpl
call
inc
pop
pop
mov
inc
loopne
rclb
lret
xor
js
adc
push
in
cmp
xchg
push
gs
push
out
and
jnp
inc
fwait
rorl
mov
add
aas
cmp
in
inc
das
lcall
inc
mov
cltd
cmp
cmc
loopne
mov
jae
push
arpl
popa
xor
adc
ss
in
aad
and
lret
add
sub
int3
ficoms
mov
dec
sbb
push
mov
cmp
test
loope
jne
repnz
pushf
jno
jge
int
ret
adc
icebp
mov
cmc
adc
push
or
fiadds
jl
clc
mov
dec
push
xor
rolb
imul
mov
push
xchg
ja
scas
push
add
or
stos
mov
pop
cmp
mull
xlat
scas
jmp
pop
fisubrl
ljmp
sahf
dec
mov
xor
push
sbb
mov
stc
addr16
ds
and
add
mov
mov
dec
in
inc
xchg
test
xor
adc
ja
jns
sbb
cmp
lock
xor
loop
push
ret
xor
mov
mov
or
xor
jno
test
insl
jae
mov
leave
or
xor
mov
hlt
cmc
orl
iret
sbb
pop
xchg
adc
outsl
cmpsl
sub
sbb
cmpb
mov
and
rorl
jge
jnp
adc
stos
and
pop
insl
in
in
les
leave
scas
xor
pusha
mov
sbb
inc
adc
jno
sbb
mov
xor
xor
fistpl
daa
loope
aam
pop
adc
xchg
int3
sahf
lcall
pop
mov
std
xorb
cmp
mov
bound
jnp
dec
push
push
lret
jb
or
out
enter
mov
cmp
dec
aam
cmpsb
add
and
and
ds
jmp
cmp
lret
call
mov
jmp
bound
xor
pop
and
stc
or
pushf
push
pop
jne
lods
mov
mov
mov
cmp
addb
sub
test
hlt
add
and
fistps
stos
push
push
adc
xor
xchg
mov
pop
ret
xchg
xchg
jnp
in
sbb
and
cmpsb
push
ljmp
inc
cmp
jmp
or
sub
sub
arpl
flds
adc
mov
xchg
jmp
pop
insl
cmp
mov
fwait
mov
mov
adc
and
leave
and
rorb
push
add
cmp
into
shll
lcall
hlt
cmpsl
sti
addr16
mov
sbbb
clc
pop
xchg
push
pop
ret
outsl
cli
pop
sarb
mov
scas
mov
xchg
jp
mov
out
lea
xlat
mov
rolb
xor
mov
movsl
mov
push
push
notl
int
scas
out
mov
in
push
insb
inc
pop
les
sub
or
pop
push
inc
pop
lcall
inc
add
jne
test
lcall
sti
lcall
sbb
xchg
push
xchg
inc
push
mov
cmpb
dec
cltd
pop
test
js
cwtl
xchg
xchg
fildl
cwtl
pop
add
outsb
clc
cltd
and
pushf
rclb
sbb
jno
jge
sbb
adc
sub
jp
xchg
dec
fsts
mov
cmpsl
lret
xor
mov
jp
lds
xor
jge
stc
xchg
push
clc
or
push
std
dec
jnp
dec
add
cld
add
rcll
test
cli
mov
lods
sbb
test
sbb
shrb
bound
fiaddl
push
movsb
jle
mov
jb
mov
outsl
pop
xchg
xlat
sarb
pop
cwtl
int3
aam
subb
fptan
mov
jb
add
mov
daa
pop
out
aas
mov
cmp
and
cmp
cmp
xor
shll
mov
adc
hlt
adc
jg
lea
cmpsl
lret
inc
lods
aam
cmpsl
or
scas
pop
bnd
inc
or
shl
dec
fwait
inc
cmpsl
aaa
imul
stos
xchg
lret
mov
nop
mov
fiadds
cmp
hlt
pop
mov
loope
push
aaa
addr16
xchg
filds
fildl
cmp
andl
or
out
in
mov
bound
and
movsb
je
mov
xchg
add
add
or
pop
sbb
xchg
inc
push
hlt
mov
add
pshufw
pop
add
pop
lock
add
mov
add
iret
dec
mov
mov
mov
sbb
adc
adc
out
lcall
pop
loopne
mov
mov
inc
lods
xor
push
lcall
daa
fmulp
pop
pop
aad
inc
sbb
cmp
loope
or
jle
adc
mov
mov
dec
add
adc
xchg
and
enter
mov
aad
or
fs
or
clc
aas
decl
sbb
ja
jecxz
jne
sub
add
mov
je
lock
pop
dec
cmp
jno
loopne
pop
jg
xchg
sbb
push
lea
mov
push
dec
inc
in
insb
loope
mov
push
mov
cltd
movsl
and
in
aam
xlat
dec
mov
mov
iret
lahf
mov
enter
sub
loopne
lods
cmpb
cmp
jge
imul
push
jnp
mov
mov
sbb
lahf
pop
lods
pop
push
dec
es
jg
sbb
mov
xor
push
push
clc
push
mov
lods
test
inc
scas
test
es
notl
add
xorb
mov
ret
es
leave
push
pushf
imull
xor
stc
mov
and
pop
add
es
pop
or
dec
mov
sbb
xlat
and
popa
jo
sbb
inc
mov
into
std
push
out
adc
sub
sbb
in
cmp
fsubs
cld
jb
pop
jle,pt
aas
loopne
enter
add
sub
nop
mov
add
add
cmpsl
cli
mov
hlt
dec
lods
cmc
cmpsb
mov
and
fs
fimull
ret
dec
test
jecxz
in
fisubrs
push
imull
mov
xor
xchg
jae
xchg
xor
add
inc
pushf
inc
push
sbb
push
pop
sub
faddl
icebp
xchg
inc
stc
jb
inc
not
jns
hlt
push
aad
push
lret
out
stos
cmp
insl
negl
xchg
and
ret
xor
fdivr
jns
adc
popf
xchg
sti
cmc
insl
inc
and
add
xor
mov
outsb
ljmp
sub
sti
push
cmp
jl
pop
jmp
shlb
testb
in
cmpsl
enter
aad
xor
xchg
mov
add
mov
jmp
iret
mov
mov
add
jb
inc
cltd
addr16
dec
insl
mov
movsb
mov
cmpsb
insl
mov
xor
fwait
mov
jmp
movsb
stc
xlat
fwait
pop
mov
test
push
pop
loopne
mov
aam
xor
and
inc
sbb
imul
movups
lea
ljmp
mov
xchg
jb
or
push
mov
mov
inc
push
jle
addl
mov
insb
mov
pop
insb
loopne
ljmp
dec
mull
adc
jbe
test
cld
push
jmp
sub
push
dec
mov
push
loopne
movsl
add
test
sub
popa
xor
jecxz
mov
stc
fwait
mov
adc
push
mov
jmp
cmp
and
xchg
fstps
clc
sub
jns
mov
mov
mov
cmp
xor
daa
ret
dec
pop
sub
or
shll
scas
std
sarb
dec
xchg
sub
cmp
pop
cmp
nop
jg
pop
mov
mov
sbb
pop
ret
or
push
add
sbb
push
pop
mov
ret
and
aad
sbb
cmp
sub
inc
mov
cmpsb
popa
add
pop
cmp
xlat
out
sub
int3
adc
aam
into
xor
mov
sub
and
movntps
outsb
cltd
fwait
xor
stos
push
cmp
mov
jns
jle
dec
lds
fldt
repnz
push
into
in
mov
mov
mov
fisttpl
mov
cli
jg
add
outsl
test
and
add
push
add
lods
mov
xlat
add
negb
ret
or
in
js
or
scas
jb
outsb
jbe
pusha
int
rcrb
cmpsb
xchg
je
mov
fwait
cld
sahf
push
cmp
xchg
adc
and
mov
sbb
cwtl
xchg
lahf
push
jle
aas
adc
fsubl
insb
and
fs
inc
sbb
sub
imul
pusha
aam
in
sub
adc
sub
sub
cwtl
mov
mov
pop
pop
xchg
xchg
jl
inc
in
or
dec
fwait
dec
popa
icebp
cmp
aam
and
add
repz
adc
scas
mov
inc
aam
push
addr16
sub
mov
icebp
jne
jb
lea
sub
stos
cmpsb
rclb
mov
xchg
ret
mov
mov
lds
loopne
jp
sub
xor
sahf
mov
cmp
es
pop
jp
sbb
outsb
push
and
pop
mov
sbb
mov
push
into
inc
inc
mov
dec
add
mov
jl
scas
xchg
cmp
int3
das
cmpsl
ss
sub
lock
bswap
push
xlat
pop
cmpsb
repz
jl
sbb
dec
stos
adc
outsl
notl
jp
jmp
jae
sub
and
cmp
jo
sarl
std
or
aas
mov
cmc
lds
push
je
idivb
mov
push
lahf
jno
pop
mov
cwtl
faddp
hlt
and
pop
lods
mov
lcall
sbb
icebp
sbb
and
and
ljmp
pop
or
fdivs
inc
test
scas
jbe
inc
icebp
mov
ljmp
test
or
sub
pop
xchg
int3
pop
cmp
pop
stos
mov
cmp
or
loopne
ja
jne
repnz
pop
mov
xor
pop
ljmp
dec
test
enter
push
mov
dec
sbb
leave
and
lods
out
aad
inc
and
jne
repnz
sahf
mov
and
cwtl
mov
test
fstp
xor
ljmp
mov
lea
sbb
jb
mov
xchg
sbb
fldenv
push
push
push
pop
mov
fsubr
adc
lahf
es
add
pop
push
xor
mov
push
dec
aad
mov
gs
leave
mov
dec
lea
pushf
jmp
insl
mov
jp
lods
inc
aas
sub
push
loope
fistpll
aad
dec
push
xchg
nop
pop
push
pushf
mov
adc
xchg
cmc
pop
sub
fidivs
repz
and
cmp
es
test
outsb
push
pop
and
es
std
add
ss
mov
inc
and
inc
mov
mov
lds
mov
leave
dec
inc
sub
movsl
adc
js
sub
xor
jl
stos
xchg
xchg
sarl
shl
rcl
test
in
shll
or
inc
adc
aas
inc
xchg
in
hlt
mov
jge
push
mov
add
int3
rolb
pop
sti
cli
in
or
es
add
adc
addr16
pop
xor
fiadds
lock
call
xchg
js
cmpsb
cmpsb
jnp
sbb
adc
testl
ret
rolb
xor
lods
roll
sub
popf
inc
cli
dec
xor
xor
mov
bound
stc
dec
adc
push
inc
cld
cld
jp
or
ja
mov
jecxz
gs
ja
aam
inc
jno
and
das
cmc
fdivrl
es
inc
mov
sti
xor
movsl
sbb
sbb
sbb
cmp
or
mov
sub
lea
push
pusha
sbb
leave
sbb
dec
mov
pushf
cmc
inc
cwtl
test
mov
cmpsb
mov
adc
xchg
adc
dec
ja
xchg
out
sub
mov
push
dec
mov
pop
cmpsb
testl
mov
sahf
iret
cmpsl
and
push
fmull
std
jnp
pop
sbb
add
sti
pop
inc
scas
lcall
repz
mov
lret
bound
sbb
ret
lret
xor
enter
punpckhbw
stos
dec
sub
out
sub
cmp
sub
leave
imul
cmp
addr16
mov
inc
rcrl
xchg
jo
cwtl
out
data16
aas
mov
sbb
inc
adc
push
adcl
sub
sahf
cmp
stos
pusha
outsl
push
sub
sti
faddp
xor
rolb
mov
pop
adc
and
daa
jecxz
jge
shl
inc
sub
loopne
push
sbb
sub
push
mov
or
fsubr
out
add
jecxz
test
and
test
das
mov
add
mov
mov
sub
ficompl
push
xor
mov
aam
pop
insl
inc
cld
aad
fiaddl
pop
cmp
out
mov
jecxz
dec
shrl
mov
push
daa
mov
jp
call
aaa
mov
xchg
mov
push
xchg
sub
mov
mov
mov
sub
dec
dec
sub
mov
mov
and
pop
insb
mov
mov
daa
pop
adc
stos
or
jnp
mov
jge
cli
jns
jp
data16
sub
call
mov
nop
jne
jne
in
xor
fistps
fmull
pop
call
sbb
add
xchg
xchg
mov
sbb
iret
subb
and
fstps
repz
sti
movsl
outsl
lcall
cmpsb
fs
xchg
mov
lret
jbe
inc
mov
mov
js
adc
scas
mov
push
or
xchg
lcall
mov
inc
xchg
sbbb
aaa
adc
pop
out
push
inc
adc
andb
mov
or
pop
push
imul
mov
jecxz
mov
and
mov
push
mov
mov
out
inc
fs
lcall
ret
jecxz
sbb
pusha
adc
push
js
test
mov
or
inc
xlat
xchg
pop
sbb
pop
stos
imul
shrl
movsb
mov
ljmp
fs
xchg
sub
sbb
and
lods
popa
imulb
jl
add
dec
jge
test
cmp
nop
cltd
ja
mov
pop
xchg
sarl
pop
mov
mov
aas
popf
push
pop
in
fdivl
into
push
mov
xchg
or
mov
enter
loopne
push
add
lods
aas
inc
or
adc
adc
sbbl
leave
lds
add
fadds
lea
adc
push
int
push
cmpl
cmp
mov
pop
outsl
aas
xor
lods
test
gs
fwait
mov
aam
push
inc
jne
stc
fcoms
test
mov
icebp
lcall
adc
dec
addr16
stos
xor
cmp
movsb
mov
test
ret
add
sbb
adc
jnp
jnp
loop
push
jb
sbb
loopne
xor
scas
inc
xor
out
push
mov
or
test
mov
mov
mov
in
lret
insb
je
fs
lock
dec
pop
testb
movsb
mov
xor
je
cld
aam
cmc
int
insb
mov
repnz
leave
es
push
jge
mov
jle
movsl
cmp
loope
jmp
test
mov
inc
imul
aaa
pop
ss
mov
and
jle
cmpsl
test
test
in
add
xlat
push
lods
gs
fcompl
lahf
popf
push
es
loopne
imul
pop
xchg
sub
enter
xchg
jecxz
mov
sbb
jb
orb
adc
das
dec
push
push
repz
mov
nop
leave
and
push
pop
cld
pop
pop
adc
mov
movsb
pusha
fsubrs
in
and
dec
xchg
pop
scas
stos
add
call
mov
pop
xor
dec
mov
aas
out
das
mov
cmp
sub
ljmpw
rcrl
mov
ss
inc
push
xchg
test
push
mov
in
popf
or
push
popa
adc
std
mov
push
xor
mov
call
loop
and
lods
subl
lret
and
push
decb
in
int
xchg
pop
mov
fldt
sti
vpmaxsw
push
xlat
mov
xchg
cmp
mov
add
cmc
mov
push
mov
mov
or
imull
push
int
jb
cmp
movsb
int
ret
movsb
outsb
aaa
pop
inc
jle
cs
mov
xor
outsb
ss
lahf
ds
jle
aaa
xor
adc
xchg
cmp
cmp
jp
sub
dec
int
ds
ret
fldcw
mov
xchg
das
push
adc
mov
mov
movsl
xor
cmp
test
xchg
aaa
inc
outsl
inc
jecxz
inc
mov
mov
sti
fldl
and
loope
mov
loop
jecxz
jno
aam
test
mov
mov
lret
pusha
lods
in
or
js
data16
push
shll
int
push
cmp
lret
ss
out
sub
fbstp
decb
orb
out
cmp
je
and
jecxz
les
and
leave
mov
test
push
insb
dec
dec
pop
idiv
mov
jb
xchg
xor
int
push
lcall
mov
mov
jecxz
cmp
xchg
ljmp
mov
mov
fcomps
adc
dec
out
icebp
lret
sub
mov
sbb
insb
xchg
lock
repnz
negl
arpl
lods
in
cs
push
ja
mov
std
pop
or
pop
loop
cmpb
in
push
cmp
mov
clc
js
dec
sar
stos
ljmp
pop
add
fistl
jecxz
jo
idivb
imul
sub
adc
repnz
jne
sti
imul
insb
push
mov
rclb
repnz
test
and
mov
dec
mov
xor
mov
mov
cmpsl
out
into
mov
movsb
push
xchg
iret
popa
out
or
add
ret
insb
push
fwait
pop
mov
ljmp
push
test
mov
sub
sbb
scas
push
fwait
mov
pop
push
cmpsl
pop
mov
mov
test
add
jp
ss
test
inc
popl
add
js
repnz
cmp
dec
xor
addr16
mov
out
sbb
iret
jns
les
inc
push
movsl
jp
in
cs
inc
ror
or
ljmp
ja
cvtdq2ps
xchg
pop
xchg
mov
sub
cmc
push
add
jp
pop
jo
mov
bound
jno
cmp
fldenv
fs
pusha
or
cs
add
jp
mov
pop
in
sti
or
sbb
mov
lods
jns
inc
and
mov
jmp
addr16
jnp
push
mov
insb
mov
popa
push
sub
xchg
xchg
add
mov
add
mov
pop
into
fidivrl
jno
push
cltd
push
std
mov
adc
and
jp
test
inc
out
fimuls
push
mov
cmp
jb
lock
mov
movsb
cld
ret
and
rclb
lahf
cmpsl
dec
xorl
push
dec
lret
inc
ljmp
int3
jle
cltd
adc
mov
push
push
loope
inc
movsb
shlb
movsb
sub
cld
add
insb
ret
and
jge
pop
in
pop
pop
lret
cmp
and
insb
sub
adc
pop
xor
imul
mull
pusha
mov
dec
shr
in
fwait
lds
cli
in
shr
cs
gs
imul
mov
pop
lret
add
jb
ret
hlt
sahf
inc
in
xor
loopne
addr16
xchg
push
imul
ret
jle
mov
daa
push
cmpsl
popf
les
pushl
push
add
cmpl
pop
dec
xlat
dec
jecxz
cmpsl
aaa
into
stos
sbb
mov
sbb
mov
std
inc
in
and
movsl
adc
mov
inc
jmp
pop
cli
push
pop
stc
adc
xchg
pushf
cli
xchg
hlt
push
pop
sahf
xchg
push
inc
and
xchg
cltd
push
out
in
ja
subb
into
push
out
repnz
shlb
push
in
push
test
std
stos
movsl
pop
lret
adc
cmpsb
mov
mov
sbb
or
jnp
pop
stc
sbb
cld
add
subb
les
xchg
aam
out
mov
add
dec
shl
in
movb
in
push
mov
adcb
and
pusha
mov
lods
or
repz
imul
sbb
push
testl
jmp
lret
pop
repnz
sbb
lret
xor
in
inc
inc
std
and
xor
sub
in
ret
lret
fs
aad
fcompl
stc
mov
hlt
xlat
jb
loop
xchg
sbb
pop
add
leave
ljmp
push
cwtl
mov
stos
and
fldl
outsl
and
or
jmp
sub
insl
and
cmc
leave
cmpsl
leave
mov
into
mov
addb
pop
stc
lods
cltd
cli
jae
inc
mov
cltd
ret
dec
xchg
mov
add
xor
xor
jnp
sti
jp
or
push
mov
xor
jno
das
dec
cmp
mov
push
inc
cli
mov
jmp
std
mov
inc
daa
jnp
push
xchg
pop
jl
add
lea
les
jmp
xchg
inc
mov
or
and
cmp
ss
mov
jp
dec
and
and
arpl
out
dec
stos
push
xor
sbb
vcvtps2dq
repz
into
test
xchg
aas
in
inc
call
adc
lods
mull
ret
je
cltd
das
scas
inc
inc
or
popa
arpl
testl
stc
addr16
clc
cmp
insb
push
cmc
push
repz
or
xor
push
adc
icebp
testb
push
mov
xor
cmp
mov
add
aad
jecxz
jp
aad
jb
es
xor
pop
sub
in
iret
jl
jg
mov
in
adc
sbb
lcall
arpl
xor
call
std
cmp
inc
shrl
ds
gs
sahf
fucomp
je
sub
jne
callw
inc
and
cmp
and
aaa
dec
pop
hlt
fisttps
xchg
ds
nop
jl
dec
mov
push
sbb
scas
decl
outsl
mov
push
mov
jmp
testl
faddl
sub
or
test
js
lret
mov
pop
sub
dec
jecxz
push
scas
loop
jg
mov
dec
add
lahf
cmp
adc
push
sahf
lods
imul
dec
repnz
add
push
inc
shr
pop
add
or
add
mov
popa
movsb
mov
es
pop
hlt
pop
or
or
mov
scas
sti
and
fstl
xchg
es
xchg
pop
add
aam
fs
test
sbb
cmpsl
divl
pushfw
jnp
or
test
stc
add
popf
out
movsl
pop
fwait
adc
push
stc
push
xchg
je
adc
mov
sahf
mov
aas
movsl
sub
aas
hlt
inc
std
je
fsubrl
sarb
mov
jne
sbb
push
sar
inc
cmpl
fbstp
push
lcall
adc
push
scas
pop
sbbb
sub
fwait
dec
int3
out
inc
xchg
dec
adc
icebp
ljmp
or
sbb
and
jns
xchg
mov
sahf
mov
std
clc
ret
jae
jo
int
xor
sbb
aad
dec
mov
or
xchg
cmp
add
mov
aad
cmpb
pop
jl
xchg
mov
into
out
sahf
jbe
js
mov
fs
mov
cli
mov
mov
ja
pop
adc
dec
pop
rorl
push
lds
fistpll
dec
jno
push
gs
xchg
cmp
sbb
pop
jae
sti
test
push
mov
or
xor
mov
pop
cmpl
push
cmp
push
jne
fcomip
and
jns
test
and
xchg
cmc
cmpsb
or
mov
lock
aad
aaa
pop
aam
scas
in
or
cli
inc
sbb
pop
fnsave
cli
test
pop
notl
jecxz
fistps
and
std
shll
jbe
cld
pusha
mov
pop
jl
jge
je
hlt
push
sbb
fstps
lock
gs
cmc
and
cmp
cmpsb
or
cli
sti
addl
add
jmp
cli
cmc
icebp
loope
push
sti
pop
add
stos
scas
stos
mov
sahf
push
mov
jmp
adc
sarb
jno
mov
mov
cmp
popa
hlt
add
pop
jle
xchg
ret
imul
sahf
or
out
in
mov
imul
lret
adc
cli
lahf
testb
mov
jl
retw
lahf
dec
adc
jbe
sub
or
into
leave
sub
imul
in
mov
push
push
movsb
cmp
add
lret
jae
mov
sub
bsr
push
out
shll
arpl
rcrl
pop
je
and
dec
lret
push
int
test
in
push
call
insb
jno
ja
push
imull
repnz
xchg
daa
push
mov
ja
mov
andl
cmp
popa
andb
loope
jecxz
cmp
popf
fistpl
imull
dec
or
cmp
outsl
imul
push
inc
fistpll
push
gs
das
inc
clc
sub
inc
mov
fdivrs
movsb
fadds
xor
inc
add
repz
std
aas
test
cltd
test
mull
sub
inc
cmp
push
pop
flds
inc
mov
jo
pop
in
and
xchg
xchg
ja
mov
cwtl
rcll
xchg
fists
adc
stos
mov
scas
outsl
lea
sbb
les
fdivs
aam
imul
mov
or
mov
sub
mov
add
test
dec
xchg
int
mov
cld
push
dec
scas
movsb
xlat
xchg
add
xchg
xchg
sbb
aas
push
cwtl
jbe
sarl
add
xchg
mov
sbb
mov
je
lods
dec
arpl
repz
in
les
jmp
imul
add
push
mov
daa
ja
mov
arpl
call
dec
xchg
mov
dec
mov
sbb
pushf
or
rcr
es
jnp
bound
jmp
jmp
jle
movsl
insb
or
or
sub
cmp
scas
loopne
adc
adc
pop
inc
or
mov
sub
adc
add
pop
aaa
add
xchg
repz
pop
or
push
iret
mov
sahf
imul
pop
movsl
cmp
std
sbb
push
into
push
shl
xchg
jne
pop
or
ljmp
popa
out
push
adc
lret
dec
dec
push
mov
test
aam
mov
pop
mov
fs
stc
add
pop
jge
lret
pusha
add
imul
add
add
fucomip
sbbl
jg
push
lock
into
inc
adcb
pop
inc
jmp
sub
in
push
rcll
push
push
ret
mov
adc
sub
push
jmp
push
sbb
xor
pop
adc
out
xor
enter
and
jle
push
ret
xor
push
ljmp
pop
mov
movsb
and
mov
hlt
iret
mov
mov
inc
xchg
xchg
lds
and
stos
pop
test
mov
lcall
dec
in
add
lods
sub
inc
lahf
insl
enter
mov
test
imul
push
and
sbb
jae
hlt
ret
dec
push
push
and
je
fildll
jle
imul
int
lods
jno
mov
inc
faddl
fmull
lahf
into
inc
adc
push
sbb
insb
sub
in
mov
sub
in
sbb
jnp
int
nop
ret
and
cwtl
int3
icebp
lret
repz
mov
int
rcrl
xchg
push
lods
adc
jecxz
rol
sub
dec
jg
lret
cmp
sub
mov
repz
aaa
inc
xchg
test
xor
mov
aad
js
lds
in
inc
xchg
fiadds
mov
mov
push
push
ret
sti
sub
sahf
fcoml
add
adc
mov
jle
stc
jl
test
imul
xchg
pop
or
lcall
mov
stos
xchg
add
jo
sbb
inc
rorb
lds
scas
shll
test
pop
or
stos
fldl
nop
xchg
out
inc
aam
movsb
inc
xchg
xor
test
push
int
pop
mov
mov
push
fwait
loopne
inc
lea
lret
dec
push
xchg
push
cli
out
mov
sub
mov
jns
mov
imul
arpl
pushl
mov
lods
mov
test
mov
xchg
push
sub
repz
in
inc
inc
push
xchg
mov
pop
lcall
dec
jge
dec
aam
ret
and
enter
and
inc
dec
jne
dec
out
ret
mov
inc
data16
popa
out
std
lock
arpl
pushf
lret
push
or
sub
mov
daa
inc
adc
xor
cmp
xchg
cltd
iret
mov
rclb
dec
bswap
jle
adc
jmp
adc
inc
mov
cwtl
push
ss
int3
sti
mov
push
shl
jbe
pop
ret
lods
jb
jne
xor
sbb
mov
mov
xchg
xchg
or
push
mov
in
ljmp
inc
lock
sub
sub
sbb
push
sbb
push
mov
jne
xor
adc
push
outsb
lcall
ret
cs
dec
shll
cmp
cwtl
sti
shl
int3
sub
dec
addr16
dec
and
inc
aam
mov
pop
push
fisubrl
into
lea
mov
aad
gs
adc
xor
dec
into
pusha
xlat
push
dec
push
sbb
jns
mov
mov
ja
subb
dec
call
push
mov
fcoms
jo
leave
cmpsb
mov
popf
or
pop
xchg
shll
addb
scas
xchg
jp
shlb
stc
xor
ret
mov
data16
pop
hlt
loop
pop
negb
popf
push
shld
inc
or
push
icebp
imulb
nop
cmp
ret
add
adc
or
sarb
xor
pop
xchg
cmpsb
daa
rcr
das
xor
aam
mov
and
mov
mov
insl
sarl
inc
arpl
mov
ja
fwait
push
mov
adc
sbb
aam
inc
or
rcrb
xchg
lea
stos
loope
mov
push
jae
insb
sarl
xor
adc
arpl
iret
scas
add
adc
fwait
add
es
adc
mov
in
dec
in
adc
inc
ret
and
lea
cld
and
subb
gs
or
test
sbb
in
stos
mov
push
mov
add
sarl
rcrb
inc
inc
pusha
pop
and
or
adcl
sbb
lods
shlb
mull
push
js
fwait
outsb
nop
aam
mov
or
int
push
pusha
xchg
call
lcall
test
sahf
cmpsl
jmp
and
sub
inc
lret
or
lods
xchg
sarl
scas
imul
nop
xchg
outsl
sub
xchg
sbb
shll
loopne
pop
fwait
ret
mov
cmp
push
dec
fidivl
jbe
and
cwtl
stos
leave
stos
lahf
inc
inc
adc
push
sarl
jae
rclb
cld
in
jle
pop
dec
cwtl
call
loope
gs
cltd
mov
mov
xor
push
pop
arpl
mov
sahf
call
jbe
lret
outsb
mov
repz
notl
loope
jp
or
test
jnp
ret
xor
jmp
xchg
sahf
push
xor
scas
adc
xchg
icebp
mov
aad
nop
mov
sub
stos
push
insb
dec
rclb
jne
mov
pop
jp
mov
xchg
and
lret
sub
mov
cmp
int3
add
dec
xor
jge
nop
int3
insb
vcvtsi2sdl
cmp
dec
popf
push
lods
in
popf
adc
stos
pusha
fnsave
jb
xlat
sub
mov
jge
inc
rol
imul
test
nop
loope
sbbb
pusha
and
js
xor
lock
fwait
sbb
fdivl
ret
dec
leave
xor
insb
aas
sub
and
or
pop
sub
call
cmp
xchg
test
or
adc
hlt
add
mov
or
jno
int
stc
iret
lds
mov
adc
cmp
pop
mov
fwait
jl
sub
add
or
pop
push
sub
repnz
cmp
out
jb
cmp
pop
scas
dec
lcall
pop
fisttpl
lret
inc
push
mov
sub
mov
add
jmp
scas
sbb
fsubrl
xchg
popa
loopne
ret
jecxz
sub
adc
lods
add
cmp
lock
and
push
inc
adc
fnsave
sbb
aaa
das
pop
mov
pop
xlat
jg
cltd
aaa
aam
dec
outsl
dec
push
call
push
xor
push
sbb
push
in
int3
scas
sbb
das
cmp
jno
push
mov
inc
xchg
ja
dec
pcmpgtd
fcomps
fisubrs
test
and
lea
or
mov
and
cwtl
cmpsl
fcmovnb
sbbb
or
cmp
xor
push
push
cmpsl
loop
scas
stc
and
lret
lret
rolb
inc
jno
sub
mov
pop
adc
loop
inc
sbb
push
outsb
jge,pt
arpl
or
lods
gs
mov
mov
adc
add
dec
outsb
loopne
les
push
push
aam
incl
mov
aam
cmc
adc
cmp
inc
mov
cmpsl
out
inc
add
loop
popf
lea
pop
stos
jae
or
or
loopne
xchg
cmp
push
xchg
or
dec
sbb
or
shl
push
pop
pushf
add
mov
test
stc
stc
ds
mov
lahf
mov
inc
pop
xchg
aaa
sbbb
arpl
push
les
inc
rorl
pop
inc
clc
jle
gs
adc
mov
inc
stc
in
and
and
dec
sub
lds
adc
lcall
fwait
xchg
aad
inc
lea
push
xchg
inc
hlt
aas
mov
add
sub
nop
adc
out
xchg
jg
lock
push
dec
add
cmpsb
leave
jne
imul
pop
fistpll
imul
insb
push
test
jno
test
leave
lods
frstor
adc
add
mov
sub
cmp
in
adc
sti
push
xchg
lret
loopne
jle
fcomps
es
xchg
insb
pushf
adc
test
je
lea
ss
and
sbb
adc
cwtl
mov
test
into
jecxz
add
in
cmp
out
pop
jecxz
test
dec
icebp
mov
lcall
fmull
repz
mov
jmp
adc
std
adc
sbb
out
lahf
aam
das
adc
jge
cmp
xchg
stos
ss
repnz
mov
pop
out
sub
scas
scas
daa
out
add
pop
and
xchg
xchg
mov
outsb
mov
adc
pop
mov
mov
cmp
mov
sti
inc
nop
fwait
into
test
outsl
mov
int3
cmpsl
insb
stos
mov
cmpsb
jbe
pop
or
mov
xchg
cs
adc
dec
or
gs
jl
mov
fsubs
jecxz
or
mov
pop
cmp
stos
pop
fistps
mov
iret
inc
adc
push
jbe
stos
not
repnz
int3
push
add
mov
in
in
imul
mov
xor
sbb
popa
or
and
sbb
sub
jo
inc
imul
adc
daa
sbb
bnd
imul
lods
and
testb
es
pop
aas
pushf
push
xor
mov
push
jecxz
dec
pusha
out
dec
pop
lods
shl
filds
and
sahf
sub
mov
stos
mov
dec
jae
ret
call
dec
lock
stos
xchg
push
or
notl
or
outsl
out
fcmove
outsb
and
mov
je
add
rorb
pop
lock
jb
push
or
jne
cmpsl
ss
mov
mov
in
loop
out
mov
xchg
leave
or
ss
pop
add
inc
cmc
mov
movsl
inc
int
repz
sub
lods
inc
jnp
mov
cmpsb
and
jne
sub
inc
stos
test
add
push
subl
test
xchg
lret
shrb
mov
test
movmskps
aad
aaa
je
or
xor
imulb
jb
xor
jo
mov
and
sahf
lods
add
push
imul
jbe
xor
shr
aam
jb
imul
mov
cli
lea
adc
fistpll
es
stos
xor
orl
notb
jnp
outsb
and
inc
inc
je
lock
mov
in
jnp
inc
push
cmp
orb
jp
mov
cmp
adc
int
shlb
or
imul
sbb
sub
mov
mov
and
sarb
cmp
fcompl
and
xlat
insl
je
sbb
xchg
mov
xor
mov
jp
cmc
dec
je
pop
adc
mov
push
das
ret
jle
insb
or
popf
inc
jno
inc
cmc
pop
cwtl
jne
lds
or
out
in
mov
mov
in
jno
jo
lcall
shrl
lret
adc
inc
out
adc
imul
push
cmpsb
jge
cmp
scas
adc
xor
xor
in
std
hlt
pop
push
mov
push
jo
mov
nop
test
lock
xlat
sbb
and
dec
sbb
pop
lods
loope
test
or
pusha
in
stos
dec
cmp
or
mov
jmp
sbbb
cmpsb
aad
dec
sub
push
imul
sub
dec
divb
mov
xor
pop
imul
shll
jecxz
aaa
xlat
jnp
mov
mov
movd
xchg
inc
xchg
hlt
ds
cwtl
inc
arpl
xchg
xchg
xchg
arpl
add
test
mov
arpl
test
lret
mov
jo
enter
les
aaa
fdivs
xchg
xor
and
mov
mov
scas
mov
ret
insl
dec
sbb
test
add
repz
jecxz
sbb
dec
mov
jl
push
imul
dec
int3
dec
imul
shr
bound
sbb
imul
or
pop
stos
pop
push
stos
das
testl
insl
outsl
add
orb
pop
inc
and
les
cmc
pop
psubd
sub
push
pop
stos
and
jnp
sbb
sub
dec
push
sbb
and
out
and
cmpb
dec
xlat
nop
popa
lcall
push
repz
push
sahf
add
int3
adc
je
sahf
in
or
in
and
mov
dec
int3
add
addr16
and
hlt
loop
lock
mov
inc
mov
fadd
inc
loop
sub
mov
jbe
pop
xchg
repz
test
fbld
xchg
or
pop
dec
xor
roll
cmpsl
push
hlt
xchg
xchg
cmc
inc
inc
mov
mov
fiadds
add
pop
sbb
clc
pop
icebp
push
jl
ja
stc
add
push
ljmp
jae
sub
mov
pop
lock
int
rcr
or
lret
divl
in
mov
repnz
jl
pop
aad
and
aas
jle
or
inc
fs
inc
pop
mov
and
lahf
mov
mov
push
lahf
pop
dec
fwait
dec
dec
mov
lods
or
testl
cmpsl
dec
adcl
icebp
cmp
push
testl
push
fldenv
lret
aad
cli
inc
mov
packssdw
mov
sub
mov
mov
iret
xchg
imul
adc
aas
out
lds
scas
mov
in
add
mov
nop
cmp
or
sbb
popa
mov
std
in
fistpl
mov
pop
leave
jb
enter
ret
stos
enter
jno
mov
pop
pop
mov
push
push
movb
fistpl
pop
test
or
push
arpl
push
pop
insl
sbb
push
fildl
mov
sbb
inc
scas
in
fsubrp
xchg
inc
sbb
aad
fildll
sbb
test
fbstp
push
push
cmp
xchg
cmp
adc
mov
data16
jne
loop
xor
aad
sub
jl
test
mov
mov
repz
stos
adc
dec
cmp
sbb
adc
fidivrl
mov
or
stos
dec
gs
mov
out
xchg
push
in
sahf
mov
mov
dec
mov
and
xchg
pop
negl
xchg
xor
out
add
into
mov
cs
jno
shrb
cld
mov
pop
cmc
lret
sbbb
xlat
inc
bound
jno
cmp
add
cli
add
in
mov
push
pushf
jl
dec
inc
dec
push
xor
mov
or
pop
adc
in
pusha
mov
inc
cmp
in
aaa
and
fnstcw
clc
int3
mov
nop
rcr
xor
cmp
lret
inc
dec
gs
aad
jge
je
lods
jnp
mov
push
movsb
cmpb
or
sub
es
xchg
in
icebp
ljmp
xchg
pop
divl
sub
out
xchg
xchg
int
fadds
jmp
insb
stos
scas
pop
test
add
cmc
dec
cmp
xchg
push
repnz
sbb
cmp
test
pusha
fldl
fnstenv
rcll
adc
sbb
into
pop
mov
shll
mov
inc
in
cmp
mov
ds
ss
dec
lods
scas
sub
or
inc
into
jb
dec
sub
fsubrl
ds
cld
lods
test
jbe
shll
cmp
jl
mov
into
sbb
push
vmwrite
and
inc
mov
loopne
pop
insl
inc
sub
jle
xor
sbb
xchg
mov
gs
sbb
cs
pop
or
mov
int3
out
sahf
dec
mov
dec
std
or
cmp
jl
jne
mov
jo
mov
fsubs
cmc
lea
jae
jp
push
icebp
push
fcoml
mov
xor
or
gs
mov
leave
lods
loop
insl
fiaddl
and
iret
popf
jg
adc
cwtl
es
push
adcb
jbe
pop
sbb
push
jno
lret
lods
dec
lret
lcall
mov
jle
xor
movsl
and
mov
mov
cmpsl
insb
je
jmp
pop
cmp
jmp
cltd
shlb
mov
sub
in
and
add
popa
rcrb
imul
dec
pop
mov
cld
hlt
pop
divb
lods
and
ja
inc
aad
aas
pushf
stos
mov
sbb
pop
mov
mov
leave
ret
ds
leave
daa
xchg
jge
pop
hlt
cmp
pop
ja,pt
imul
and
push
xlat
xchg
mov
mov
cltd
lods
push
call
jne
sub
pop
loopne
xlat
mov
cld
cltd
scas
jno
scas
push
cmp
dec
inc
andb
jg
xlat
iret
stc
cmp
lds
mov
jo
xor
ret
mov
sub
and
test
dec
add
jno
mov
or
aam
cmpsb
or
sahf
jne
sub
fwait
xor
jecxz
jns
cwtl
in
mov
les
xor
fcmovnu
pop
imul
add
fldenv
jge
stc
cmp
in
test
sti
xor
cmp
adc
bound
push
push
mov
mov
push
in
and
fwait
icebp
add
in
adc
push
pop
movsl
icebp
mov
sti
cmpsb
lods
add
adc
push
or
add
xor
fs
into
cli
mov
xor
popa
fisubs
dec
jnp
outsl
sub
xor
and
jns
mov
in
hlt
out
gs
push
stos
imul
mov
daa
jbe
add
push
fs
pop
cwtl
pop
sub
cmp
int3
dec
repz
ret
pushf
lret
cmp
stc
ret
fistps
fcmovnbe
sub
or
cmpsl
or
mov
or
sarl
mov
fnstcw
jp
mov
mov
mov
adc
and
xchg
push
arpl
and
ds
pushf
pop
jnp
or
hlt
insb
sahf
imul
add
repz
and
in
aas
call
out
mov
fs
cmpsb
mov
clc
dec
cmp
cwtl
repnz
je
fmuls
aad
fcmovu
sbbb
pop
or
enter
hlt
enter
cmp
js
add
mov
mov
outsb
or
ror
fisttpl
jb
insb
cmpsl
test
test
push
adc
cmc
imul
ja
adc
pop
cli
hlt
cmp
mov
adc
loopne
jmp
cmpsb
arpl
stos
movsl
fdivs
imul
pushf
pop
adc
call
mov
mov
add
lret
or
sub
lods
mov
dec
lea
xor
and
push
jns
mov
mov
scas
xor
inc
fdiv
push
push
xchg
add
and
mov
jp
adc
inc
push
divb
inc
rorl
mov
lahf
pop
xor
jae
call
sub
shlb
cli
add
xlat
arpl
shl
pushf
sbb
add
or
lcall
sub
mov
pop
or
sbb
mov
pop
push
jg
shll
dec
negb
push
aas
in
or
push
xor
pop
insl
and
jecxz
push
ret
in
inc
add
mov
es
jb
sti
out
push
ss
idiv
pop
xor
das
pop
in
aaa
add
pop
stc
es
into
inc
cmp
adc
jns
and
jne
pop
cmc
in
push
push
jb
and
std
jmp
mov
and
xchg
add
cwtl
push
test
xchg
mov
cltd
lods
test
pop
iret
out
cld
inc
push
push
shll
mov
out
xor
sbb
test
push
add
out
inc
dec
inc
pop
fs
push
xchg
je
jle
mov
sbb
push
fmul
mov
xchg
lret
out
push
add
pop
add
aaa
int3
lea
or
mov
aaa
cmp
shll
stc
jbe
aad
and
or
mov
pop
mov
mov
addl
mov
pusha
cmp
xchg
fsubp
in
in
mov
shrl
adc
icebp
push
push
pusha
fsubrl
jle
sub
ror
dec
outsl
rolb
mov
jns
lock
rorl
mov
adc
daa
add
repz
lods
xor
movsb
cld
sbb
aad
shlb
aad
mov
test
and
into
repnz
inc
pop
div
scas
jns
stc
xchg
xor
dec
rcll
pop
test
push
adc
fcmovnu
loop
repnz
gs
es
mov
lock
pop
mov
sub
inc
push
push
dec
cmp
dec
test
imul
call
daa
test
and
movsb
dec
xchg
push
decl
daa
inc
sub
sub
push
mov
aam
adc
movsl
jle
out
scas
push
xchg
mov
xchg
and
imul
and
push
popf
loopne
and
loope
push
bound
mov
mov
mov
loopne
xchg
mov
imul
mov
mov
loop
dec
sub
lods
add
jno
ret
sub
and
mov
pop
jne
les
or
mov
outsl
aam
xlat
xor
pushf
mov
cmc
xor
mov
out
add
pop
xchg
fdivrl
int3
vpsubusw
sub
mov
loopne
and
lock
dec
fcmovnu
jno
cmp
enter
add
push
int3
dec
loop
insl
xor
sub
xchg
bound
in
mov
mov
movsl
mov
pop
push
cmp
adc
lret
rcrb
xchg
sarl
sbb
inc
enter
stc
dec
shll
add
popa
inc
js
loope
cmp
cmp
insl
sub
cmp
out
stos
push
mov
xor
cs
jb
scas
cmp
testl
xor
cmpsl
xchg
imul
lods
js
push
pop
pop
repz
les
ljmp
stos
inc
push
scas
ljmp
xchg
dec
pop
xchg
cmova
adc
add
xchg
in
xor
push
faddp
ljmp
cld
repnz
and
xchg
ja
xchg
mov
add
xchg
cld
dec
push
jb
mov
pop
dec
testl
pop
aaa
jmp
inc
dec
outsb
imul
dec
add
pop
pop
xchg
pop
aas
scas
add
mov
popf
pop
stos
mov
int3
cmpsl
jno
jl
mov
call
sarl
xor
add
decb
pop
mov
sbb
lds
sub
arpl
aad
jmp
popl
gs
mov
fs
adc
pop
sbb
mov
lahf
dec
insl
cmc
loopne
fldl
fcomp
lods
bound
add
and
push
nop
inc
int
mov
pop
lods
dec
dec
shrb
shll
inc
adc
dec
dec
xor
or
sbb
and
popl
enter
adc
out
pop
fucomi
mov
pusha
sbb
and
pop
test
pop
xchg
inc
fcoms
scas
pushf
fcom
out
call
jo
call
inc
loope
lds
xchg
inc
lods
mov
ret
in
sbb
sbb
mov
xchg
lods
adc
lds
loope
cli
or
jp
mov
outsb
stos
dec
into
test
cwtl
pop
loop
pop
sub
add
sarb
add
int3
add
mov
scas
out
ret
ret
into
mov
into
aas
in
hlt
and
and
jg
sub
pop
imul
sbb
mov
andb
cmpsb
or
cmc
test
or
mov
push
in
dec
xorl
sub
cmc
or
roll
ljmp
out
nop
xchg
into
inc
cmp
test
inc
insl
dec
inc
jbe
lcall
jp
stc
out
sbb
cltd
sbb
enter
jbe
xlat
sbb
movsb
mov
and
jo
mov
pop
jge
mov
mov
lock
in
pop
cs
sbb
pushf
popa
xor
mov
sbb
loope
je
ja
jle
outsb
push
mov
mov
out
rclb
jmp
cmpsb
outsb
imul
xchg
aam
rcl
or
push
and
mull
icebp
sub
inc
lret
movsl
sub
arpl
out
loopne
subl
jne
bound
fstl
repnz
push
stos
sti
xor
pop
push
mov
jnp
mov
dec
add
lea
dec
rep
mov
inc
pop
jne
and
pop
int
aam
repz
inc
clc
fdivrs
xchg
xor
jnp
jb
pop
cmp
add
mov
ja
inc
jbe
popf
inc
inc
mov
sar
add
sbb
pop
pop
jmp
xchg
into
insb
hlt
aam
dec
mov
push
shll
daa
divb
shrb
push
call
cmpsl
jmp
and
das
in
jl
lahf
sbb
outsb
jae
mov
rolb
or
push
loop
imul
inc
xchg
addr16
pop
test
fcom
inc
cld
or
pop
xchg
jae
int3
test
or
pop
fistpll
scas
dec
xchg
lret
pop
sub
loope
sarb
sahf
adc
dec
add
gs
mov
add
jnp
gs
mov
sub
xlat
jo
inc
fdivrl
jno
inc
push
jge
aam
lods
mov
aas
cmp
jecxz
add
adc
and
enter
sub
sbb
sbb
and
lods
add
dec
jg
cmp
ret
std
pop
cmp
or
cmp
mov
xchg
or
pop
mov
adc
nop
pop
cli
call
adc
lcall
mov
xor
sar
outsb
pop
jae
xchg
incl
xchg
sbb
shll
insb
add
pusha
js
aad
xlat
sar
xchg
mov
adc
aas
popf
out
aaa
push
repz
mov
or
shll
shlb
pusha
cld
scas
stos
scas
xchg
adc
sbb
pop
jae
and
pushf
pop
sbb
scas
xor
loopne
ficoms
in
stc
or
or
sbb
push
mov
aad
push
lea
push
xchg
out
iret
stc
pop
mov
jno
inc
push
repz
xor
mov
in
ja
add
leave
push
cld
daa
cmp
and
and
jg
dec
movsl
xor
jg
out
pop
in
dec
sbbl
pop
add
add
adc
and
xchg
dec
je
jge
outsb
bnd
pop
scas
dec
xchg
and
pushf
adc
repz
fsts
lret
out
lds
shrl
cmp
in
enter
push
out
add
je
pop
push
inc
xor
push
or
inc
push
test
pop
and
subl
insl
mov
jo
pop
lock
sahf
adc
movb
sti
jge
scas
mov
dec
dec
test
cmp
stos
xchg
pop
jl
movsb
inc
add
sub
mov
inc
icebp
outsb
pop
imul
sets
cwtl
sub
shlb
sti
in
mov
test
pop
sti
lret
jo
daa
mov
lods
cmp
cmp
push
xchg
pop
add
pushl
into
rcll
and
hlt
jbe
or
test
and
inc
int3
jbe
sbb
sbb
dec
loop
mov
sbb
aad
je
daa
fmuls
xor
aam
and
or
cwtl
inc
cmp
push
add
decb
loop
jno
and
xchg
mov
loop
mov
sbb
addl
lock
and
xor
ss
lea
out
jmp
gs
out
push
dec
adc
nop
pop
lcall
mov
jp,pn
adc
add
iret
add
adc
out
aam
inc
pop
repz
movsl
or
mov
mov
xor
scas
xchg
xorb
ret
cwtl
in
sarl
lods
dec
mov
enter
stc
fstpt
cmp
rorl
ficoms
fadd
adc
adc
movsl
lods
jno
popa
add
test
aas
push
iret
clc
fdiv
add
iret
xor
rolb
lret
std
or
adc
in
imul
xor
pop
stos
insb
mov
xor
stos
cltd
dec
daa
jmp
and
fcomi
cli
pop
push
aas
add
ror
dec
cld
jne
pop
xor
loope
movsb
add
jecxz
addr16
pop
xchg
cmp
jnp
sahf
inc
push
cmp
incb
int
cmp
fcmovnb
xor
sub
and
dec
hlt
mov
add
test
cmp
loop
inc
neg
bnd
add
fwait
mov
icebp
movl
jo
subl
cld
dec
sub
push
hlt
push
push
mov
aad
and
movsb
leave
adc
xchg
fiaddl
adc
jnp
arpl
mov
int
stos
bound
add
ds
push
in
xchg
lods
mov
pop
inc
pop
sbb
adc
imul
sti
pop
scas
shlw
dec
int
push
lods
push
sub
stc
pop
std
aam
xchg
or
xlat
push
jns
add
test
sub
xor
into
sahf
test
and
jb
adc
out
in
aam
es
push
xor
sti
popl
push
pop
lods
mov
enter
sub
lcall
and
je
pop
arpl
sub
push
and
add
push
cmpb
cmp
add
jb
lcall
and
ja
mov
push
xchg
cwtl
fcoml
sub
popa
mov
lret
popf
mov
pop
loopne
std
dec
jne
imul
subb
sbb
insb
mov
push
cmp
sarb
fs
jg
in
and
les
dec
movsl
push
mov
ret
add
xchg
and
inc
or
jno
xchg
and
imul
jmp
cmp
add
and
mov
leave
decl
lods
pop
jle
sbb
push
aas
cmpsb
dec
sub
xchg
adcl
mov
ret
xchg
mov
dec
lcall
std
sbb
adc
adc
out
xorl
stos
dec
or
arpl
bound
stos
adc
aas
adc
sarb
mov
xchg
jle
in
popf
cmpsl
push
test
testl
nop
jo
fnstenv
scas
ret
movsl
rdmsr
dec
movsl
xchg
push
roll
aam
xor
xor
out
in
jl
lret
add
adc
xchg
mov
orl
xor
inc
test
ret
cmp
xor
mov
cmp
pop
enter
sbb
mov
cmpsl
pop
cmp
or
mov
jae
mov
and
inc
int
movsl
pop
js
jae
mov
cmpsl
jg
cmp
rcll
flds
sbb
mov
xchg
testl
xor
jmp
icebp
bound
push
push
dec
xor
sbb
aad
stos
cs
cmp
fwait
in
out
xor
sbb
inc
jg
mov
ficoms
daa
or
or
sub
ljmp
sbb
xchg
addb
bsr
mov
insb
bound
xlat
lea
test
push
add
push
cs
pop
ret
inc
cmp
dec
add
out
in
pop
incb
dec
xchg
lahf
bnd
cmc
es
jo
aam
jae
in
xlat
test
adc
ret
xchg
adc
mov
out
sub
pusha
movsb
cmpl
scas
nop
jo
push
pop
outsb
jmp
ljmp
repnz
outsb
lcall
mov
pop
lcall
inc
cmpsb
lods
sbb
add
xchg
mov
sbb
pop
std
xchg
shll
jo
test
ds
out
inc
jp
fmulp
pop
or
rorb
sbb
mov
popf
jecxz
pop
shl
pop
mov
pop
cld
xor
xchg
insb
sbb
push
ja
fwait
mov
inc
imul
insl
movsl
fcomps
jl
fiadds
sub
imul
les
cwtl
mov
fsubrs
rol
xchg
mov
int
lret
sti
icebp
cs
pop
sub
push
div
add
mov
das
jo
lret
inc
mov
cmp
push
mov
out
mov
add
iret
movsl
mov
xchg
sbb
fwait
mov
push
dec
rclb
call
lret
scas
mov
shrl
divl
xchg
arpl
sbb
or
pop
imul
nop
sarb
inc
iret
and
push
mov
js
mov
test
mov
ret
in
int3
insl
mov
rol
sub
stos
cld
push
jne
sbb
inc
repz
push
lret
das
aam
jp
in
js
fistpl
lds
and
add
xchg
int3
int
movsl
xor
add
divb
stos
pop
adc
cmp
mov
in
mov
daa
stos
sub
ficoms
imul
sub
rcl
shlb
cmp
push
orl
mov
xchg
imul
push
jae
inc
cmpsb
icebp
sub
stos
leave
pop
and
fdivrl
ja
dec
inc
ret
cld
pop
pop
lcall
sub
push
push
test
fstl
roll
fcmovbe
popa
cmpsb
mov
cli
jnp
jmp
jbe
addr16
insl
add
dec
int3
mov
aaa
xchg
sbb
push
notl
pop
bswap
push
movsb
jnp
pusha
fwait
stc
into
icebp
mov
ret
decb
es
xchg
sti
movsl
push
dec
loopne
adc
dec
popa
movsb
mov
scas
pushf
cmp
pushl
push
push
fnstsw
lret
jne
dec
aad
dec
setg
push
xor
sub
pop
loopne
sbb
notl
push
lret
bnd
add
xlat
outsl
test
jge
mov
lods
popa
cmpsb
push
push
cmp
int
fs
or
cli
cli
addr16
xchg
push
cmp
movsb
mov
adc
mov
fildll
jl
jge
mov
sbb
scas
xor
xor
js
sub
dec
mov
or
and
cmp
cmp
mov
or
rorb
cmp
lret
inc
sbb
std
xor
test
xor
dec
mov
flds
or
fsubrl
mov
and
dec
adc
je
mov
mov
cltd
push
mov
shlb
cmpsb
jnp
xor
je
sbb
sub
mov
fnstenv
or
xchg
pop
inc
push
add
popf
mov
pusha
es
push
push
mov
lock
or
sub
mov
pop
out
frstor
jo
cli
icebp
fstpt
sbb
adc
inc
dec
bound
or
inc
sbb
inc
lret
jne
sbb
inc
mov
int3
jmp
das
xchg
jge
add
inc
xchg
outsl
into
add
loope
sub
jae
mov
xchg
xchg
jno
push
jg
add
into
je
jno
lahf
lahf
cwtl
fninit
push
leave
mov
fistpl
mov
lea
iret
or
stc
nopl
test
add
push
addr16
sbb
sbb
rcrl
in
pop
xor
hlt
mov
cmp
sub
pusha
in
lods
fnstcw
xchg
mov
or
mov
xchg
mov
roll
pop
rcrl
cmp
lock
or
aam
dec
or
and
adc
inc
xchg
loop
pop
lods
mov
xor
icebp
pushf
pop
jns
out
lods
push
jae
mov
push
insb
sub
jge
cmp
in
xor
pop
pop
push
es
cmp
sbb
gs
int3
xlat
int3
push
pusha
popa
add
mov
xlat
stos
dec
jb
cwtl
mov
test
repnz
inc
and
add
and
fnsave
call
jmp
push
push
arpl
inc
ss
and
sub
ljmp
aad
mov
adc
xchg
ret
cmpsl
adc
lcall
scas
ud0
ficoms
repnz
mov
mov
pop
or
xorb
xchg
scas
and
add
data16
mov
movb
jg
imul
pop
mov
aas
mov
in
lds
xor
mov
orl
or
cltd
jo
icebp
xlat
pop
push
and
outsl
pop
xor
iret
call
hlt
scas
mov
je
fwait
dec
lret
jb
adc
adc
mov
inc
je
and
outsl
mov
iret
fistps
subl
jl
icebp
rorb
push
clc
mov
test
repz
jbe
push
push
push
ficomps
xchg
lcall
fcoms
lahf
inc
in
mov
mov
add
rolb
mov
fstps
xchg
and
xor
sub
dec
lods
push
movsl
fdivp
sub
dec
sub
lock
fxam
push
addl
cmp
int
cmp
jmp
xor
jl
mov
scas
repz
inc
test
mov
push
jle
dec
outsb
cli
add
popf
jmp
xchg
fcomps
call
in
push
mov
stc
dec
inc
out
mov
inc
nopl
mov
std
js
push
je
mov
dec
inc
push
push
cmp
jl
ret
pop
add
int
cmp
das
inc
gs
inc
cmpb
mov
and
lahf
out
pusha
jle
mulb
push
dec
mov
repz
add
sbb
jge
xchg
jp
pushf
push
addr16
lret
aas
jp
adc
daa
xor
imul
and
push
or
push
xor
dec
jl
popa
mov
push
push
fbld
and
sbb
flds
pop
ss
jge
stc
xlat
inc
test
repnz
add
xor
js
cmp
into
addr16
sbbl
inc
stos
sub
inc
ja
movsb
push
or
mov
out
cwtl
pop
test
sbb
loop
add
pop
xchg
fcmove
inc
jp
sbb
dec
push
ljmp
xor
sahf
mov
sub
lock
lods
je
cmp
mov
push
pusha
stos
pop
fdivs
es
loopne
shr
enter
cli
out
push
mov
inc
mov
xchg
icebp
pop
mov
mov
mov
loop
xchg
sub
push
and
xchg
push
inc
mov
cs
xchg
push
sti
pop
push
in
mov
stos
xor
cmp
movsl
jl
sahf
or
in
sub
xchg
rol
mov
adc
pop
movsl
lret
and
pop
lea
out
push
subl
cld
outsb
push
adc
cld
mov
testl
pop
push
pop
mov
lea
pop
lret
mov
pop
addl
xchg
ret
cwtl
out
lods
mov
dec
xchg
push
int
lahf
xchg
push
stc
sub
push
mov
insl
and
add
mov
mov
mov
shlb
sbb
cmp
rclb
hlt
mov
scas
adc
lods
mov
jl
fstl
mov
lea
addb
mov
xlat
pop
pop
or
mov
jg
lcall
mov
sbb
adc
dec
xor
test
addl
and
cmp
sahf
xchg
sbb
cmp
mov
push
or
fldcw
fildll
sbb
jno
mov
popa
mov
adcl
fs
xchg
adc
mov
repz
jo
mov
addps
cld
push
jl
mov
mov
add
stos
add
repz
dec
dec
xchg
push
cltd
scas
dec
mov
pop
xor
mov
push
pop
inc
fsubs
fstpl
mov
lock
pop
xchg
push
insl
mov
jg
sbb
pop
lea
into
jae
push
je
subb
cmp
repz
inc
addl
xchg
jg
ret
mov
sbb
push
adc
sub
push
inc
xchg
imul
lret
lods
inc
cld
daa
jne
push
ljmp
or
subl
aaa
fisubl
cbtw
jp
aam
fstl
push
mov
xorl
repz
dec
mov
cli
mov
sub
mov
test
cli
dec
sub
jbe
and
test
fildl
scas
enter
lret
mov
std
push
lcall
mov
lret
rorl
in
in
adc
pop
das
in
mov
xor
pop
jp
xchg
and
pop
or
sbbl
mull
sbbl
pushf
mov
loopne
loopne
jbe
inc
mov
repz
jecxz
jmp
test
xor
xor
rclb
jg
hlt
rclb
xor
cs
clc
rclb
cmpsb
insb
in
outsb
imulb
mov
xchg
xor
sar
movsl
xchg
xor
shrl
stos
jmp
sbb
pop
inc
into
iret
hlt
aam
imul
idivl
add
repnz
or
mov
cmp
jne
shr
or
dec
fsubrp
push
mov
sub
ret
ja
jmp
fcomps
ss
push
xchg
jb
adc
or
xor
mov
jb
jl
sbb
repz
sub
cmp
jo
ljmp
inc
mov
dec
nop
mov
cltd
cmpsb
int3
into
push
jns
mov
jnp
lods
jl
sub
das
sub
insb
lock
ret
mov
arpl
icebp
or
lcall
fidivrl
faddl
sub
jp
cmp
pushl
push
jge
shll
pop
test
bound
rolb
cmp
and
dec
xchg
push
es
mov
and
push
outsb
jge
lcall
inc
jns
les
negb
pop
push
je
insl
mov
xchg
jo
inc
lcall
mov
jb
or
dec
mov
iret
push
dec
out
lock
mov
or
scas
test
sahf
ret
cmp
ds
ljmp
sbb
addr16
jge
mov
xchg
cwtl
rcl
inc
xor
inc
ljmp
cmp
jae
pusha
ja
push
test
fadd
cmpsl
mov
imul
outsb
jmp
mov
mov
xor
cltd
pop
jo
aas
loopne
clc
mov
mov
mov
sub
xchg
xor
fwait
andnps
stos
or
add
ds
and
jmp
push
clc
inc
pushf
xor
repnz
cmp
aad
or
fwait
jmp
ret
xchg
inc
sub
mov
xchg
mov
cmp
stos
cmp
or
fisubl
push
jo
xchg
jge
cltd
sbb
xorl
cmp
pop
fsubl
add
lods
mov
pop
fmul
dec
in
sbb
lods
mov
xor
in
aas
icebp
int
adc
mov
out
push
sub
jle
mov
push
mov
inc
push
cwtl
or
aad
es
cmpsb
xor
xchg
xchg
test
lea
push
mov
xchg
xor
mov
cmp
mov
jns
sub
xorb
dec
cmp
lret
cmpsl
mov
rcrl
inc
faddl
sahf
sub
fs
mov
mov
stos
mov
dec
cmpsb
aaa
add
mov
sub
leave
xchg
fbstp
sti
add
mov
sbb
jmp
orb
in
out
pop
push
mov
dec
jl
dec
nop
cmp
ret
cs
adc
adc
bound
int
test
stc
fldl
out
les
icebp
rorl
pop
repnz
jno
ret
data16
sahf
mov
ja
out
mov
mov
mov
mov
cmp
jp
mov
jle
shlb
ficoms
sbb
mov
push
mov
lods
pop
push
jmp
or
push
lcall
pusha
outsl
repnz
loope
jbe
push
notb
out
adc
mov
lods
adc
ja
xor
fimuls
jae
jp
cmp
bound
cltd
xchg
sarb
and
and
cmp
decl
inc
das
pop
test
pop
sbb
cmp
jp
imul
sbb
mov
sbb
movsb
cmp
loopne
xor
xlat
imul
lahf
adc
popf
fnstcw
push
pop
jb
in
loopne
or
xlat
loope
dec
jge
loope
stos
test
gs
inc
sbbb
and
cmp
insl
adc
ret
imul
adc
enter
pop
cmpsb
lcall
lods
stos
fdivrs
pop
out
sbb
scas
ret
pop
push
adc
insb
insb
fdivs
inc
test
jo
dec
js
and
push
scas
push
in
or
pop
sub
pusha
aas
das
jbe
jp
icebp
sti
enter
iret
iret
cmp
and
xchg
icebp
test
aad
andl
movsl
xchg
push
dec
pop
test
sbb
test
mov
or
fstpl
ret
cmpsl
scas
pushl
mov
mov
xchg
ret
shr
dec
xchg
sub
push
lds
bound
mov
inc
mov
gs
add
stc
dec
in
sbb
xchg
mov
inc
insb
ss
cmp
push
addb
jge
ret
or
xor
mov
jmp
out
cltd
cld
loopne
xchg
pop
inc
inc
pop
xlat
movsl
in
addl
mov
sahf
sub
pop
sar
aaa
in
pop
mov
mov
jl
mulb
jmp
mov
xor
fcomps
imul
loop
movsl
jno
sub
inc
pushl
push
mov
xchg
iret
add
mov
or
gs
add
and
pop
jmp
ss
mov
insl
mov
pusha
adc
mov
mov
jg
cltd
sub
sub
adc
jno
dec
sub
or
stos
sub
imul
iret
and
add
js
push
pop
incl
je
dec
scas
mov
fwait
jp
dec
fwait
mov
nop
pop
shlb
jecxz
pop
les
pushl
adc
ss
adc
sub
and
and
xor
xchg
loopne
leave
enter
or
dec
cmp
out
jo
mov
bound
test
outsl
out
clc
out
xchg
sbb
mov
loopne
cltd
aad
push
sti
movsb
idivl
cmp
xchg
decl
push
xchg
movsb
sub
sub
mov
adc
pop
mov
cmp
fwait
mov
mov
or
mov
push
sub
in
aaa
iret
push
mov
aas
js
loope
insl
mov
xor
mov
xchg
or
cltd
pop
jp
mov
iret
dec
jae
pop
xor
or
std
test
jbe
push
in
sti
or
les
fwait
and
loopne
dec
es
adc
push
dec
fs
stos
mov
or
push
push
ror
cld
idiv
loope
stc
lcall
loop
int
push
jmp
ljmp
add
dec
jo
cmp
jg
out
rcl
cmp
insl
dec
xor
nop
mov
mov
shlb
sub
fwait
arpl
lds
dec
push
xlat
shrl
out
jecxz
fmul
repz
cmpsb
pop
je
xchg
cwtl
out
mov
fdivr
jo
test
xchg
dec
ret
mov
in
gs
sub
popa
dec
scas
pop
push
lret
add
and
jge
mov
pop
mov
ds
mov
lret
add
mov
push
adc
sbb
aad
ds
jno
and
unpcklps
dec
add
xchg
jg
xchg
jnp
into
insb
in
push
das
hlt
xchg
int3
mov
xorl
lcall
dec
xchg
push
fsubrs
push
pop
scas
idivl
outsl
movsb
mov
push
out
loop
or
jmp
mov
mov
sbb
loope
sti
add
das
call
cmc
add
pushf
mov
int3
and
pop
cs
inc
scas
mov
lds
dec
and
sbb
push
sbb
xchg
cltd
push
repnz
mov
and
stos
pusha
movsl
in
insb
push
add
sub
mov
outsl
push
sub
push
testb
add
or
rorb
jmp
dec
dec
aad
repz
sub
adc
lret
ret
lcall
push
insl
mov
add
sub
sub
andl
sbb
mov
jecxz
lret
insb
sarl
mov
xor
out
xor
adc
insb
cltd
lahf
into
xchg
mov
mov
in
inc
sti
jnp
and
xchg
lahf
pop
fstpl
shrl
push
mov
aaa
outsl
enter
or
popa
in
xchg
ss
sbb
sbb
dec
insl
jbe
sti
or
test
fdivl
xchg
xchg
push
fsubrs
mov
pop
and
or
push
shl
dec
aaa
push
out
sub
push
int
push
repnz
in
dec
adc
mov
mov
bound
mov
nop
mov
test
jg
sar
xchg
shll
imul
add
enter
xchg
or
das
mov
adc
mov
xchg
adc
xor
pop
movsb
xchg
or
imul
jo
insl
pop
xor
lahf
xor
adc
insb
mov
dec
cltd
ret
jbe
ret
into
xor
push
push
add
ret
aas
int3
dec
xchg
push
fadds
jl
xchg
ret
push
clc
pusha
add
mov
pusha
xchg
stc
iret
je
cmp
dec
std
mov
imul
testb
mov
add
and
stc
xor
sarb
shl
pop
dec
pop
dec
in
add
nop
lods
and
jle
daa
imul
jle
daa
mov
cmp
cmpsl
inc
cltd
jnp
leave
loope
sub
jb
add
adc
or
sub
fwait
into
sahf
and
cmpsl
mov
cmp
fimuls
scas
lret
dec
jge
andb
mov
xchg
jmp
pop
and
stc
cld
push
pusha
stos
cmp
dec
cwtl
inc
add
dec
enter
shrb
push
in
mov
jns
mov
and
mov
fstps
cltd
mov
cli
les
mov
sbb
adc
add
cmc
fs
adc
sbb
cmc
xchg
lods
movsl
sti
pop
scas
data16
call
aas
icebp
mov
pop
or
mov
adc
out
inc
pushf
stos
adcb
sbb
popa
into
dec
xor
std
cmp
push
scas
aaa
lods
stos
test
stos
loop
andl
or
jae
jne
mov
mov
mov
xorl
testl
or
in
and
jae
adc
fisubs
xor
flds
stos
rcl
sub
inc
pop
xor
pop
xchg
mov
pop
data16
clc
inc
insl
jl
jae
test
xchg
dec
in
mov
cmp
sbb
jns
cltd
cmpsb
fnstenv
pop
dec
xchg
shrb
adc
jp
shll
jp
add
in
xor
fstl
push
rolb
mov
daa
jbe
imul
jae
push
cmp
jne
div
into
out
lcall
jg
lahf
sbb
mov
sbb
sbb
fistpll
insb
nop
addr16
pop
test
xchg
push
inc
in
push
mov
push
repnz
out
arpl
out
or
push
ljmp
test
decl
pop
int
inc
cmovge
sbb
cmp
rorb
pop
sti
in
mov
add
mov
ljmp
push
push
pop
mov
dec
and
push
dec
icebp
xchg
jns
and
sub
inc
imull
mov
push
mov
jo
scas
loope
or
test
sub
and
mov
jns
movsl
jge
test
mov
pop
in
cmp
loop
test
lret
imul
fcomps
jne
pop
incl
mov
inc
cmp
fldcw
or
bound
lods
xchg
mov
fs
ret
push
jae
pop
pushf
jb
das
syscall
pop
xchg
pop
sub
mov
add
mov
pop
or
mov
adc
mov
inc
inc
jo
jae
out
push
xchg
bound
sub
popf
jbe
sbb
sub
jl
mov
push
xchg
mov
bound
sub
ja
aaa
lahf
movsl
push
movsb
js,pn
mov
int3
lret
shrb
mov
lcall
or
sub
lods
add
pop
bound
nop
fidivrl
inc
pop
adc
push
faddl
sub
add
std
pushf
pusha
shrl
jne
and
je
lds
or
das
mov
mov
push
fidivl
lcall
inc
or
sub
ja
add
xchg
and
xor
mov
js
in
jle
ret
sub
or
and
fisubl
stos
push
pop
icebp
sbb
pushf
repnz
push
std
incb
repz
mov
xor
dec
or
inc
stc
sti
popw
push
sti
or
cmp
dec
jno
pop
mov
xor
pop
out
repnz
popf
xchg
dec
test
xchg
mov
xor
mov
push
sarb
ljmp
stos
les
xchg
jmp
xchg
je
pop
adc
or
xchg
in
cmp
aad
jp
iret
imul
or
cs
jae
adc
xchg
adc
in
pop
loop
inc
mov
movsb
imull
dec
pop
inc
movsl
repz
pop
mov
cmp
std
adc
fiaddl
jnp
in
push
xchg
lret
dec
fisttpll
cwtl
pop
mov
cmc
stos
pushf
sahf
scas
ja
scas
sbb
wbinvd
push
pop
sbb
pop
outsl
es
cmp
add
insb
push
fisttpll
adc
sbb
repnz
cld
push
mov
out
and
add
mov
les
mov
enter
xor
sub
jno
sar
fmull
cmpsb
dec
pop
mov
mov
cmpsb
pushf
cmp
jne
push
hlt
jae
push
push
ffreep
cmp
fwait
adc
fdivrl
fmull
push
fisttps
fdivs
or
inc
dec
aaa
jmp
loopne
or
nop
push
ljmp
adcl
inc
jb
lock
xor
mov
mov
sbb
mov
psubw
push
gs
cli
push
xlat
imul
mov
js
or
cwtl
call
jne
xchg
xor
aaa
shrb
cmpsl
lret
mov
fisttps
test
cli
jns
adc
popf
pop
popf
pop
xchg
call
or
shlb
filds
inc
inc
pop
inc
cltd
ds
push
hlt
aad
in
push
divl
lods
ds
pop
adc
xchg
mov
cwtl
test
dec
hlt
outsb
scas
push
and
fnstenv
cmp
js
xchg
mov
lcall
rolb
popa
test
xor
add
jp
jp
mov
adc
adcb
xor
inc
jmp
mov
faddp
fwait
lods
add
out
in
xor
adc
stos
or
ljmp
pushf
dec
push
shrb
pop
shrb
or
jmp
mov
adc
push
fcos
fcoml
cmp
sub
hlt
call
xchg
mov
rcll
push
xlat
loope
arpl
xchg
pop
rclb
sarl
sti
push
push
adc
mov
xchg
mov
out
push
or
push
mull
sahf
mov
pop
popa
subb
mov
mov
mov
mov
test
jae
mov
mov
push
aaa
int3
cmp
push
inc
jp
std
popf
xchg
aad
push
fcmovnb
jo
and
mov
out
xor
push
xor
jno
adc
loopne
dec
sub
mov
cmp
mov
or
es
jae
lock
stc
add
gs
fdiv
inc
cmpsb
aad
push
and
inc
aam
std
ret
incb
pusha
mov
int3
jae
cmp
cli
outsb
mov
push
xor
adc
imul
pop
test
sub
test
bound
inc
cld
sbb
pop
arpl
lret
and
inc
stc
mov
cmpsb
mov
arpl
pop
fmull
sbb
lea
adc
movb
jmp
xor
repz
outsb
mov
clc
mov
rol
sbb
inc
dec
out
shl
jmp
xchg
and
mov
ret
jae
out
mov
or
dec
inc
pop
pop
dec
in
into
cltd
stc
cmc
jo
addl
and
lret
pop
cs
push
into
jae
lea
ja
jge
xor
mov
imul
push
inc
mov
cli
lds
test
dec
ret
mov
jno
js
adc
push
ljmp
mov
cmp
dec
cmp
mov
ljmp
popf
movsl
addr16
mov
mov
leave
adc
jnp
push
xchg
test
cmp
adc
jne
push
mov
ds
std
gs
ret
aas
and
sub
cmp
insl
movsb
repnz
in
jge
or
dec
testl
aad
pop
inc
gs
push
xlat
icebp
ss
dec
sbb
add
addr16
mov
inc
xchg
or
jl
xchg
lret
jae
sti
xor
stos
movsl
xchg
icebp
and
xchg
cmp
sbb
jbe
inc
mov
clc
xor
sub
or
cmp
scas
push
mov
sub
fcmovne
arpl
dec
add
mov
inc
andb
jl
ret
push
adc
push
in
fwait
inc
das
fidivs
in
hlt
loopne
fucomip
sub
push
or
out
outsl
shll
jle
push
pop
icebp
out
stos
xor
fxch
sbb
and
mov
out
mov
insb
out
push
stos
lds
cmp
pop
and
movsb
or
stc
fimull
int3
pop
dec
aad
push
mov
xor
in
in
sahf
repz
jbe
dec
sub
mov
ja
inc
xchg
mov
cmp
inc
mov
adc
add
add
aas
xchg
sbb
sahf
xchg
inc
std
rcr
in
mov
mov
push
daa
xchg
cltd
pop
lds
pop
and
int3
pop
mov
imul
push
test
push
sarb
mov
adc
std
pop
mull
fldl
xorb
nop
jnp
mov
in
movsl
add
jp
call
stc
jg
aas
cmp
shll
pop
loopne
mov
mov
call
stos
pop
adc
das
adc
stos
mov
mov
and
dec
xchg
pmulhw
or
and
insl
test
sbb
cmpsb
and
gs
adc
inc
jmp
adc
add
les
pop
jge
popf
sub
ror
add
aad
lds
shl
fidivl
adc
mov
pop
decl
outsb
loope
sub
pushf
add
lds
into
dec
sub
or
xlat
test
push
adc
xlat
jns
pop
data16
cmc
push
scas
mov
xchg
push
aaa
jp
push
fstl
adc
push
lea
out
inc
ffree
iret
xorb
sbb
push
shrl
dec
cmp
add
ss
push
nop
mov
dec
arpl
icebp
push
xchg
hlt
pop
lock
mov
dec
jno
and
mov
popf
out
and
lahf
fmuls
xor
mov
mov
xor
adc
repz
pusha
shrl
xchg
hlt
scas
mov
push
xchg
pop
mov
in
outsl
adc
inc
inc
xchg
cmp
aaa
xor
je
lods
jb
push
sbb
shrl
loope
dec
sub
cmpsl
jns
insb
fdivrs
sbb
inc
mov
mov
sub
fistps
movsb
mov
loopne
cmp
xor
xor
in
ljmp
shrl
mov
jno
cmp
lea
bound
ja
repnz
jo
in
push
mov
mov
outsl
sub
inc
sbb
ljmp
fs
cs
jle
push
dec
push
inc
scas
inc
pop
dec
or
outsl
je
mov
mov
rolb
sbb
xchg
and
mov
xor
insb
mov
adc
inc
push
mov
ror
je
lods
sti
adc
rorl
add
add
incb
js
data16
cs
dec
shrl
movsl
daa
jnp
fs
fdivrl
ja
push
xchg
sbb
test
ss
cmp
lcall
dec
in
arpl
push
cld
jp
dec
pop
clc
nop
cmp
cmp
loop
xchg
mov
sbb
mov
jp
repnz
jle
int
sti
pop
push
xor
into
jo
mov
pushf
test
nop
ja
or
mov
adc
xor
popf
cli
aad
pop
or
sbb
sbb
jmp
sbb
ret
dec
pop
daa
ror
icebp
pop
fsubs
mov
cmpsl
mov
xor
mov
shrl
jg
sub
and
mov
fs
imul
popa
jge
lret
sbb
mov
leave
jg
xchg
push
pop
sub
push
inc
jecxz
and
jp
or
jp
mov
out
or
jl
loope
ret
cmpsb
cmp
aam
out
insb
shll
outsl
add
test
pop
addr16
mov
in
xchg
jge
or
into
loopne
ljmp
mov
push
stos
popf
lock
hlt
les
lock
mov
idivb
lods
ja
xor
sbb
lahf
pop
pop
nop
dec
mov
outsb
fcompl
pop
ret
sub
xchg
jne
and
adc
arpl
and
pop
es
loope
push
or
lods
clc
arpl
imul
testl
icebp
icebp
gs
mov
lret
aas
push
insb
or
cmp
xchg
test
inc
mov
aas
mov
test
mov
jmp
jmp
call
imul
push
fs
mov
insl
imul
pop
movzbl
lret
iret
int3
jbe
outsb
cmp
rorl
or
pushf
inc
out
mov
mov
pop
cmp
pop
ret
mov
fcmove
mov
fists
jne
or
xchg
js
cli
sbb
dec
lock
jg
mov
jnp
jo
pop
and
sub
int
push
jae
scas
sub
ljmp
test
xchg
xchg
pushl
sbb
and
cmpsl
fwait
jb
mov
aam
aas
scas
add
fldt
cmpsl
sbb
jae
xchg
add
das
das
loope
xor
xor
jle
jb
pop
xchg
js
jo
jp
or
aam
cli
nop
mov
lcall
sbb
aaa
dec
shrl
cmp
sub
sub
mov
popa
jecxz
in
gs
lcall
adc
or
in
les
iret
add
addl
mov
cmpsl
loopne
test
je
int3
cmp
push
push
dec
test
dec
bound
jo
fisubrl
lods
fcmovb
or
loop
aaa
push
into
xchg
inc
das
sub
aad
mov
out
pushf
cmp
adc
cs
adc
dec
sti
pop
sub
movntq
out
nop
pop
in
leave
dec
sbb
sahf
js
sbb
xor
and
lret
hlt
pop
mov
cmpl
shrb
idivb
pushf
xchg
pop
imul
sbb
in
pusha
aas
sti
fsubrl
jo
mov
dec
adc
inc
mov
ja
sbbl
mov
mov
faddp
test
ficoml
adc
push
push
inc
cmp
mov
aaa
sbb
jmp
pop
mov
add
xchg
das
mov
dec
test
and
jge
fsubl
xor
nop
stos
sub
pop
sub
add
fs
outsl
enter
mov
xor
das
xchg
jl
push
rclb
loop
insb
lret
lds
jo
fdivl
cmp
nop
cmp
mov
pop
mov
loop
jmp
add
dec
mov
mov
sbbl
jbe
and
jg
jmp
xchg
mov
jge
rcr
dec
push
add
and
nop
inc
dec
xchg
mov
ja
pusha
lahf
sbbb
jb
iret
rorl
movsb
notl
inc
enter
push
cmp
mov
sbb
in
jmp
sbb
cmpsb
mov
mov
push
into
lahf
in
mov
jno
or
sbb
sub
ljmp
repz
pop
sub
cmp
add
hlt
out
clc
dec
divl
cmpsl
cmp
loop
jp
aad
jnp
jns
jne
aaa
jl
xor
jnp
or
fwait
js
or
and
jb
jnp
ret
or
inc
mov
ret
aaa
rcrb
shlb
dec
das
pop
dec
and
lea
mov
lea
fbld
jp
into
lods
inc
sub
cwtl
nop
mov
imulb
lods
cmpsb
lock
sarb
adc
pop
je
daa
mov
inc
dec
dec
mov
xor
lahf
mov
pop
inc
jo
and
pop
pop
cmpsb
push
mov
xchg
int
jno
icebp
sbb
mov
test
aas
sub
jmp
cmpsb
add
mov
cmp
arpl
add
icebp
adc
xchg
sub
mov
inc
push
inc
mov
inc
dec
loopne
aam
add
jl
xchg
movsl
mov
push
leave
testb
mov
push
xchg
mov
jmp
pop
lcall
inc
sarb
and
inc
pop
leave
mov
push
notb
sti
test
lods
in
stos
cmp
inc
dec
xchg
fldl2t
mov
and
xor
and
mov
or
movl
movsb
insl
nop
pop
test
fwait
sarb
repz
pop
lods
out
nop
xchg
stos
adc
in
xorb
int3
notb
popl
mov
mov
fistpll
lods
mov
mov
and
mov
dec
lock
and
repz
jl
jnp
push
push
and
jecxz
mov
mov
jns
inc
xchg
dec
jg
repnz
and
mov
movsb
push
roll
and
inc
aas
outsb
push
jp
fisubl
mov
sar
dec
or
popf
cwtl
aad
mov
mov
mov
enter
stos
xor
adc
movsb
call
lret
dec
test
jbe
jae
jecxz
dec
jo
mov
dec
scas
pop
or
loopne
mov
imul
movsl
and
scas
std
pop
scas
jae
mov
add
mov
sub
subl
adc
pop
into
sahf
ficoml
xchg
fwait
out
in
xchg
cmp
gs
movsb
cmp
sahf
xchg
nop
fadds
jo
bound
xchg
jg
push
out
xchg
sbb
xor
mov
test
inc
pop
push
es
insb
es
subb
ljmp
mov
std
out
loop
mov
pushf
in
and
push
push
cli
jae
jmp
std
mov
mov
arpl
stos
daa
or
adc
cmp
adc
and
push
leave
int3
sbb
dec
push
xchg
mov
orl
lahf
mov
out
jno
xchg
decl
push
inc
cld
in
js
jae
lret
add
daa
js
push
in
push
cs
lock
lds
sub
jb
fimuls
add
mov
shlb
mov
sbb
sbb
xor
pop
and
adc
enter
sub
lods
cmp
adc
addl
mov
cmp
pop
out
and
push
xor
inc
div
mov
insb
mov
dec
ficoms
xchg
movsb
push
dec
inc
scas
jge
lcall
push
push
and
pop
jbe
mov
sub
shll
mov
push
pusha
add
sbb
jp,pn
ficoms
mov
mov
fnstsw
jp
inc
ja
pop
jae
jp
lcall
push
jmp
pushl
incl
pop
or
out
sub
jne
fld1
stos
mov
add
cwtl
cmp
mov
cmp
arpl
loopne
mov
add
test
dec
mov
ss
xlat
arpl
pop
aaa
fists
pop
pop
pop
jne
cmp
xorl
adc
and
into
inc
out
roll
fidivl
mov
sbb
push
mov
ss
push
loopne
push
inc
and
xchg
imul
cmp
or
loope
push
mov
enter
mov
and
dec
mov
je
pop
push
scas
dec
int3
imul
cs
arpl
add
outsw
dec
or
cmpsl
jb
into
sbb
stos
mov
ret
arpl
sbb
sub
add
adc
mov
pop
out
int
sbb
int3
add
mov
pop
in
mov
fnstsw
inc
xor
xchg
aam
test
pop
fs
je
and
sti
cmp
push
dec
add
pop
vmovntdq
popa
stc
inc
sub
push
cmp
fnstsw
jnp
jns
call
inc
mov
inc
shlb
dec
sub
fadds
aad
mov
mov
mul
dec
push
inc
mov
mov
push
out
pop
sbb
lret
divl
dec
fimull
into
aad
repz
sbb
out
in
xorl
orb
mov
cmp
cmp
testl
sub
adc
lret
dec
jp
frstor
divl
push
ja
add
jmp
dec
ret
out
push
sti
cmc
sbb
test
lods
fucom
faddl
pop
leave
enter
mov
idiv
xchg
cmc
jle
xlat
scas
inc
outsl
out
js
or
adcb
jmp
shll
loop
inc
test
cld
repnz
sbb
and
push
xor
loopne
push
dec
jne
cwtl
pop
repz
fstps
jbe
out
sub
inc
and
mov
mov
dec
outsw
mov
imul
fwait
inc
ret
mov
vsubpd
jl
push
lret
sub
mov
out
scas
adc
jno
inc
or
loope
inc
sbb
mov
inc
xlat
movsb
loop
cmc
pandn
mov
xor
addr16
mov
jbe
pop
cmp
dec
or
pop
mov
jnp
rcrb
pop
jae
sub
sbb
lret
cmpsl
data16
lahf
cld
in
dec
mov
stc
ret
cmp
sti
add
jge
xlat
mov
insb
jl
sti
sub
sbb
inc
shr
shll
movsb
stc
mov
pusha
daa
nop
pop
cld
out
add
or
orb
shrl
loop
loopne
pop
cltd
movsl
cs
or
hlt
inc
mov
sbb
gs
mov
cmp
xor
in
pop
push
xor
lods
je
pop
jb
sarb
addb
dec
sti
loope
mov
mov
xor
and
push
ljmp
sarb
pop
xchg
mov
and
out
lods
add
and
mov
icebp
cli
dec
fs
push
popf
iret
leave
mov
lods
adcb
sbb
ljmp
stos
jnp
xor
sti
fcomps
push
mov
es
mov
push
push
ds
lods
add
jp
or
mov
pop
sbb
loop
xlat
mov
cmove
mov
insl
fnsave
aad
cmp
mov
jg
fcmove
sub
fldenv
subl
cmp
cld
cltd
jecxz
mov
daa
jg
lcall
xlat
mov
pop
mov
mov
test
pop
icebp
jnp
push
movsl
dec
clc
sub
sbb
inc
mov
inc
fldt
jne
cmp
inc
jecxz
pop
xlat
cmp
xchg
xor
mov
jp
outsl
lret
inc
hlt
jg
orb
ljmp
fcomps
dec
pop
cld
stc
mov
lret
int3
pop
sub
add
mov
jp
jge
ja
cmc
xchg
frstor
mov
jb
mov
test
fistpl
adc
stos
cmp
jne
mov
out
sbb
arpl
or
mov
xchg
inc
data16
pop
cmpb
mov
fwait
jp
sbb
jo
hlt
xor
fwait
add
test
pop
lret
stc
inc
cmpsl
xchg
pop
xor
mov
rorb
pop
ss
loop
adc
fmul
je
adc
daa
inc
mov
incb
in
out
stos
lea
roll
pop
dec
and
push
lods
push
scas
out
out
cmc
insl
pop
test
stc
push
flds
repnz
aam
ljmp
and
mov
in
mov
popf
dec
into
ret
rorl
ljmp
jmp
or
repz
mov
iret
in
mov
orl
fwait
dec
les
jmp
shrl
jle
pushl
mov
adc
sub
aam
xor
mov
and
lock
add
mov
mov
outsl
inc
pushf
fdivrs
insb
cmp
pop
out
ret
je
and
lea
mov
lcall
lock
rcrb
mov
jns
in
sbb
mov
jo
jp
stos
jb
sbb
fs
add
inc
mov
mov
inc
and
push
out
add
push
pop
inc
iret
stos
sub
jae
jne
repz
mov
or
adc
add
push
jnp
mov
pop
std
xor
inc
mov
mov
dec
sbb
xchg
jno
imul
test
insl
jl
add
test
popa
mov
mov
lahf
jns
mov
lods
and
movsb
mov
jmp
jo
dec
xor
cld
dec
ret
and
loope
adcb
push
xchg
mov
push
sbb
mov
mov
test
xchg
jl
pop
mov
push
fcmovbe
mov
push
xor
adc
pushf
push
pop
ja
push
jmp
sub
sub
and
mov
jne
adc
or
xor
lods
adc
in
les
insb
shll
lahf
mov
mov
pusha
jmp
outsl
sbb
fnsave
inc
adc
popf
ret
cld
jne
cwtl
int
adc
mov
ffreep
ret
daa
test
dec
sub
xchg
mov
lea
xchg
push
mov
cld
xchg
out
dec
test
jnp
mov
jnp
push
loope
cwtl
and
pop
adc
mov
xor
jge
mov
pop
fbstp
test
mov
aas
pop
adc
fildl
sub
lods
mov
or
xor
mov
ds
adc
or
iret
in
ja
xchg
push
loope
cmc
dec
jae
dec
jno
jb
rorb
stos
mov
mov
dec
cmpsl
cli
dec
xor
dec
pop
mov
popf
and
pop
outsb
and
dec
fcomps
cmp
mov
sub
mov
pusha
neg
lret
mov
cmp
je
pop
cltd
jns
out
test
xchg
xchg
je
adc
cs
sub
mov
inc
mov
test
mov
daa
mov
fists
std
rorl
mov
or
mov
popfw
rcrl
sti
std
xchg
repnz
sbb
sbb
add
mov
out
js
aas
ja
repnz
or
aam
mov
sbb
sarb
jo
por
aad
outsl
movsl
into
sahf
push
fadds
lods
fidivrl
fldl
xor
xor
arpl
inc
test
hlt
sbb
movsl
or
es
cmpsb
dec
xchg
in
xor
std
mov
adc
mov
cmp
sbb
cmpsb
shr
xor
xchg
mov
popa
jae
out
fs
jmp
mov
daa
rcrl
jo
xor
add
aad
xor
rcr
incb
loopne
aam
rorl
dec
xchg
out
js
mov
push
mov
cli
add
and
xchg
mov
mov
xor
mov
ljmp
cld
cmp
stos
mov
sbb
jg
les
inc
sbb
aaa
test
push
or
sub
fwait
sbbl
daa
and
test
dec
jle
and
fdiv
hlt
jno
stos
nop
mov
repnz
div
lods
jp
pop
dec
cs
xchg
xchg
outsb
pusha
adc
ss
sub
mov
fidivs
test
mov
jae
int
dec
dec
inc
loopne
hlt
loope
movsb
aaa
jl
pop
mov
fbld
xor
hlt
xor
js
fdivrl
out
pop
jmp
ss
test
stos
mov
or
adcb
insl
xlat
mov
in
out
jmp
stos
leave
or
xlat
and
in
imul
outsb
mov
jge
gs
cmp
js
sbb
and
test
lea
scas
or
daa
mov
cld
loopne
popf
mov
and
loopne
cld
push
aam
xorb
test
popa
clc
inc
out
and
clc
in
adc
mov
iret
pushf
jnp
outsb
add
xor
and
pop
daa
repz
push
cmpb
ret
jge
and
stc
ror
out
je
int
dec
mov
pop
arpl
pop
addr16
jne
mov
dec
sub
jg
rol
int
mov
xchg
or
incl
ret
pop
ret
hlt
outsb
jle
out
sbb
lods
cmp
mov
mov
jecxz
fisubrl
mov
fbstp
ljmp
inc
xor
add
jmp
sbb
in
dec
inc
sbb
jmp
inc
loopne
mov
aad
divb
sarl
daa
cmp
sbb
jge
cmpsb
mov
mov
push
xorl
pushl
dec
adcb
pop
push
push
addl
pop
fldt
stos
into
mov
pop
repz
adc
adc
add
aaa
mov
nop
xor
jp
add
push
mov
mov
inc
mov
lret
jecxz
adcl
popf
sbb
cs
andl
gs
adc
dec
xchg
aaa
fs
push
ds
mov
lahf
loop
mov
add
stos
pop
push
lea
mov
lret
fadd
sbb
repnz
icebp
imul
pushl
push
xor
dec
ret
shll
cs
sub
sbb
push
lods
mov
loopne
les
fsubp
mov
in
in
mov
fs
mov
jo
andb
scas
mov
ret
adc
cmp
mov
inc
inc
ret
xchg
jmp
icebp
jl
sarb
and
icebp
xor
sti
inc
xorb
imul
repz
dec
push
call
pop
and
imul
or
dec
and
push
inc
mov
mov
mov
imul
and
jg
push
dec
stc
mov
inc
aad
mov
ds
mov
fsubrl
push
out
sbb
mov
imul
idivl
inc
lret
ss
xchg
addr16
mov
ret
hlt
hlt
xor
test
jl
push
inc
imul
int
pop
or
xor
lret
cmp
pop
sub
lods
repz
xchg
or
sbb
movsl
mov
mov
lret
xorb
adc
mov
rcr
imulb
imul
inc
andb
inc
pop
sti
xorb
dec
adc
push
pop
out
mov
les
roll
dec
push
fucom
cmp
pop
push
in
test
inc
xorb
xor
leave
pop
jne
lret
xor
ja
jo
cwtl
jecxz
imul
shlb
sbb
jmp
loopne
mov
popa
dec
pop
push
xchg
sbb
fisttpl
filds
dec
push
and
cmpsl
and
loopne
test
jmp
push
add
scas
xor
cmpsb
xlat
sar
inc
ret
pop
or
pop
inc
pop
neg
ud2
jge
ljmp
pushf
push
scas
dec
xor
dec
mov
out
aam
dec
ds
pop
rcrb
imul
add
xlat
cmp
push
and
jp
sub
es
push
frstor
pop
xchg
cmc
xor
add
mov
dec
and
mov
mull
fisttpll
faddl
stos
mov
fsubl
push
sbb
inc
jno
jl
jne
das
rorb
je
mov
ss
add
enter
aaa
test
ficoms
in
jecxz
jo
push
es
push
cmp
cwtl
xor
sub
mov
and
jnp
int3
mov
mov
dec
iret
inc
push
data16
sub
je
lods
jp
enter
ret
xlat
push
jl
add
xchg
rclb
inc
pop
cwtl
and
push
adc
cmp
adc
mov
cld
mov
xchg
mov
xchg
push
mov
data16
dec
fwait
inc
sub
sti
nop
sahf
and
add
xchg
cmp
mov
push
ret
mov
aad
cmp
and
lock
jbe
xor
cmp
into
xlat
xor
in
jne
mov
negb
loopne
aam
cmp
sub
pop
add
es
stc
dec
mov
movsl
mov
mov
pop
scas
insb
push
or
sbb
repnz
mov
xor
stos
adc
push
fstpt
mov
mov
add
outsl
lea
pop
inc
adc
or
and
stos
jp
xchg
push
cmp
jne
test
push
cmp
les
xchg
daa
pop
dec
add
cmp
adc
sti
leave
movsl
mov
outsb
sbb
cmp
pop
mov
insb
lea
dec
fists
sub
xchg
cmp
test
les
xlat
cld
push
push
pop
cmpsl
mov
mov
lods
or
lret
xchg
push
ss
dec
and
mov
pop
cs
xchg
rcrl
les
mov
mov
in
mov
lods
sub
xlat
dec
dec
pop
adc
imul
in
pop
xor
jnp
or
mov
cmpsb
adc
push
push
and
rolb
sub
js
test
fmuls
rcrl
mov
pop
int3
mov
mov
cmp
in
icebp
les
sbb
jae
and
mov
add
das
adc
out
fildll
mov
add
call
rcrl
and
pop
stc
ljmp
jb
das
int3
fcmovbe
sahf
ret
push
nop
stos
inc
xor
add
push
mov
imul
push
mov
mov
aas
sub
adc
and
xor
imul
pop
inc
test
mov
push
cmp
addb
nop
mov
xchg
insl
dec
icebp
cmpsb
adcl
shll
jb
add
icebp
lret
push
clc
roll
inc
adc
sub
jl
idivb
or
sahf
inc
imul
ret
sub
leave
shll
cwtl
rcrb
sbb
or
and
loopne
pusha
mov
mov
popf
xchg
inc
xchg
xor
inc
cltd
es
lods
xor
jp
pop
test
dec
dec
fnstsw
pop
js
jno
mov
les
inc
out
xchg
sbb
mov
adc
xchg
hlt
fnstcw
ror
imul
stos
dec
or
sbb
add
test
push
aad
hlt
outsb
or
clc
jmp
test
pop
xchg
mov
inc
dec
or
cwtl
lea
mov
in
ja
loop
jge
mov
imul
lahf
lea
pop
xor
cmp
pop
shufps
pop
in
cmpsl
and
fistl
mov
xor
add
imul
aam
lret
and
iret
in
test
pop
cmp
push
arpl
pop
movsl
xchg
mov
addr16
sub
mov
push
or
and
mov
mov
shll
push
sub
cld
xor
adc
lahf
pop
cmc
mov
cld
lcall
push
sub
sbb
leave
fsubrs
and
inc
ljmp
add
push
sub
pop
xchg
loop
movsb
es
mov
stos
inc
jg
shlb
mov
bnd
mov
clc
pop
notl
mov
ret
int
mov
and
addr16
data16
outsb
adc
adc
push
push
inc
repz
insb
cmp
int3
lahf
dec
push
adc
push
xor
xor
sub
pop
lds
aam
addr16
out
pushf
jb
push
cmc
mov
sub
mov
push
xchg
lds
seto
cmpsb
roll
in
clc
sarb
stos
xchg
pop
inc
push
cmc
pop
aaa
lea
in
inc
in
xchg
mov
shrb
inc
xchg
cmp
js
dec
sbb
push
dec
push
and
jmp
andb
notl
xchg
daa
and
xor
mov
xchg
repnz
sahf
dec
jecxz
xchg
shll
jbe
push
add
add
adc
stos
sbb
jb
movsb
frstor
mov
mov
cs
jmp
ret
fisubl
jmp
hlt
or
mov
jecxz
fldt
xchg
push
jmp
pop
or
andb
lcall
or
or
stos
pop
mov
pop
push
xor
mov
jne
jl
add
pop
sahf
pushf
out
je
bound
pop
movsl
inc
xor
push
jo
jae
sub
xchg
and
inc
sbbb
xchg
call
pop
pop
xchg
andl
add
push
dec
inc
xor
incl
js
outsl
pop
xchg
orb
or
and
mov
adc
mov
mov
sahf
add
dec
outsb
dec
dec
ds
push
loopne
cmpsb
adc
push
sub
leave
xchg
inc
adc
or
pop
rcll
gs
rcrl
repz
movsl
mov
les
stos
out
dec
fiaddl
js
xor
neg
xchg
xchg
jns
xor
pop
inc
gs
out
movsb
cld
jg
push
loope
pusha
gs
cmp
aam
popa
idivb
adcl
jl
enter
mov
add
movsb
rol
in
daa
xchg
mov
fnstsw
mov
add
ljmp
ja
test
lds
xchg
dec
daa
cmp
rcl
es
mov
movsb
or
and
ja
cmc
lea
xchg
cmp
jns
push
dec
jne
cmpsb
jo
xchg
mov
cmp
dec
mov
aaa
adc
les
xlat
sbb
rcrb
pop
push
sub
cmp
cld
mov
fdiv
add
add
out
add
jmp
cmp
loope
dec
mov
mov
or
pop
or
pop
fisubrl
mov
test
shrd
pop
ret
sbb
inc
loop
mov
add
push
lcall
imull
mov
push
stc
int
lods
in
lock
loopne
add
sub
push
iret
push
out
int
adc
out
outsl
aad
mov
pop
mov
inc
jno
mov
or
icebp
sub
ds
add
inc
add
mov
out
stc
jg
data16
fiadds
inc
dec
inc
ds
xor
pushf
xchg
aas
arpl
jno
test
jns
out
dec
cld
add
inc
in
out
inc
popf
pusha
mov
ds
cltd
sti
xorb
mov
sbb
dec
loop
or
mov
mov
fwait
pop
loopne
fiadds
outsl
sbb
orl
dec
leave
sub
xor
push
jno
xor
or
popa
mov
stos
iret
fdivs
mov
popf
nop
div
cmpsl
cs
mov
mov
loope
imul
aas
inc
push
iret
mov
pop
jl
sub
jb
cmp
or
out
mov
mov
shl
pop
jns
shll
push
mov
mov
mov
mov
shrl
adc
jmp
dec
push
addr16
in
hlt
shlb
arpl
fldt
inc
ds
iret
and
mov
negl
mov
xchg
mov
pusha
imul
aas
xchg
in
sub
popa
in
pop
ficoml
inc
push
xor
cmp
movsl
push
ret
clc
in
popa
sbb
xchg
and
rorb
jmp
hlt
adc
cs
push
fldl
sti
xor
pop
arpl
shl
jl
or
lods
dec
xor
dec
mov
sub
clc
fildll
lock
loop
sub
xor
xor
mov
mov
fnsave
mov
lock
in
adc
int3
mov
addr16
pop
lock
je
add
lahf
pop
cmp
pop
pop
mov
in
ror
aam
pop
int
jle
into
cmp
loope
fs
icebp
nop
xchg
icebp
movsl
xor
sub
addr16
or
push
shll
inc
int3
mov
or
test
lds
or
aaa
sbb
push
insl
push
filds
xchg
jb
push
rorl
jns
inc
fwait
loopne
sub
cld
dec
xor
mov
out
or
popa
ret
jmp
lock
addl
pop
sub
or
shll
jo
out
idivb
pusha
or
shlb
xor
sub
push
fstpt
arpl
mov
inc
jl
jg
lret
jg
jae
push
pushf
sbb
push
jae
js
addl
movsl
sub
dec
xor
repz
test
cmp
inc
data16
xchg
cmpsb
ja
mov
pop
scas
ds
or
mov
out
lods
jns
cmpsl
pop
fiadds
xor
cmp
lahf
push
xor
jle
in
inc
mov
cmc
cwtl
icebp
mov
fnstenv
lock
imul
js
push
pop
lahf
jae
mov
aaa
je
sbbl
cmp
iret
cltd
mov
fsubr
adc
xor
clc
scas
in
not
cmp
push
pop
inc
out
mov
call
pop
js
xlat
movsl
lcall
or
mov
ror
insl
pop
cmc
or
mov
push
clc
xor
add
mov
sub
add
dec
sbb
pop
push
mov
xor
pop
ffree
inc
loopne
pop
pop
jle
mov
bound
inc
add
mov
mov
push
mov
cmp
pop
hlt
add
xor
out
scas
repnz
ds
xchg
xchg
push
rcrb
pop
js
jge
fistps
outsl
adc
mov
out
push
adc
mov
repz
int
lods
subl
inc
lret
push
adc
add
aaa
fwait
xchg
stc
loope
mov
dec
xchg
fiaddl
adc
das
and
sub
inc
inc
and
repz
dec
jle
adc
ja
aam
out
xor
dec
int
add
mov
pop
add
sub
out
push
mov
mov
mov
cs
sub
sbb
imul
mov
in
xor
sbb
dec
mov
adc
or
repnz
cmp
sbb
cs
jmp
or
push
add
jl
mov
and
or
cmp
shl
xor
and
mov
stc
mov
pop
dec
xor
es
mov
mov
stc
movsb
movsl
push
loope
inc
sbb
dec
aaa
fildll
mov
into
sub
push
xor
stos
push
lret
mov
in
xor
mov
pop
mov
push
repnz
xchg
sahf
push
jne
inc
push
xchg
pop
fcomip
cmp
test
mov
xchg
cs
inc
das
mov
cmp
clc
fwait
xchg
addr16
sub
or
movsb
sbb
jns
jns
jne
jb
cwtl
inc
pop
shll
add
aad
mov
add
sbbl
pop
scas
jecxz
jb
cltd
mov
dec
out
cmp
xor
or
pusha
adc
sbb
mov
cmp
cwtl
pop
push
sub
clc
out
sbb
call
lea
add
sub
or
push
mov
pop
sub
imul
jp
mov
mov
imul
in
pop
mov
sarb
rcpps
push
adc
int3
and
mov
cltd
fs
dec
lahf
imul
mov
xchg
push
xor
fcmove
jne
mov
es
inc
movsb
bound
popf
cs
mov
jmp
dec
push
sbb
cmp
or
cmp
aam
xor
jmp
mov
mov
mov
aas
or
and
jb
insb
sub
aaa
ror
jecxz
xchg
out
xlat
jge
rcrb
xchg
jns
xchg
mov
js
pop
sti
dec
call
bound
mov
and
jae
mov
cmpsl
fstps
cmp
xor
jb
aad
loope
sbb
xchg
push
sub
call
mov
lcall
xor
lods
sub
dec
xor
or
call
pop
stc
pop
sbb
lret
rcr
stos
notl
aad
ds
add
dec
repnz
push
and
cmpsb
mov
or
cmp
les
add
xor
in
out
addr16
int3
test
cmp
pop
icebp
out
cmpsb
jbe
movsb
leave
int
jnp
jmp
jmp
add
inc
add
in
sbb
mov
test
shll
push
dec
lret
mov
jb
addr16
out
sbbl
fimuls
ret
scas
ja
and
mov
mov
loopne
and
or
jge
repnz
inc
loope
dec
dec
pusha
les
xchg
xchg
push
lret
pop
and
jne
mov
xor
dec
fistpll
inc
je
mov
arpl
sbb
push
jae
push
popa
xchg
adc
loope
test
int3
sub
add
adc
out
rcrl
test
cltd
ss
insb
sti
xchg
or
add
loope
mov
fisubs
inc
push
sbb
in
repz
adc
mov
dec
rep
jle,pt
pop
adc
cmpsl
and
aaa
xor
lahf
push
pop
xchg
cld
enter
sbb
clc
jmp
fiadds
xchg
cmp
out
test
subl
xchg
cmpsl
or
enter
pop
pop
cli
fwait
dec
mov
testb
cs
sahf
mov
scas
push
fnsave
aas
imulb
outsl
ret
addb
sti
loope
dec
das
add
xchg
push
call
and
mov
dec
repz
inc
pop
inc
movsb
mov
jmp
iret
addb
dec
imul
movsl
mov
iret
out
add
insl
or
inc
add
and
push
or
push
imul
es
movsl
popa
jne
inc
jecxz
addr16
clc
push
cmpsb
xor
push
es
adc
jle
ss
inc
nop
and
push
cmpsl
sti
orl
push
loope
inc
sub
sbb
movsb
xchg
inc
adc
cmpsb
out
mov
call
cmp
lock
jp
in
imull
xchg
scas
cld
mov
and
add
in
xchg
in
mov
xchg
stos
push
inc
add
out
lcall
fwait
jo
xchg
mov
imul
loopne
popf
cmp
pushf
jg
mov
ds
scas
push
mov
pop
xor
hlt
lock
out
aas
sahf
stos
lret
or
inc
jg
movd
mov
cmp
shll
imul
jne
mov
mov
insl
popf
pusha
bnd
xchg
mov
aad
imul
or
mov
cli
scas
scas
add
xor
cmp
pop
loop
fidivl
pop
daa
and
dec
data16
and
in
stos
push
aam
dec
mov
subb
loopne
daa
jp
scas
fs
mov
lds
loopne
dec
xor
in
bound
lahf
cmc
cmpsb
xchg
cs
aas
lods
dec
rorb
loopne
fs
mov
jno
xchg
into
aas
jb
mov
decl
mov
cmp
sbb
sub
xor
inc
push
xor
and
insl
mov
into
push
stos
inc
in
jno
xor
or
fidivl
xchg
xchg
jns
aaa
psubusw
int3
aam
pusha
idiv
hlt
cwtl
inc
cmpsb
mov
int3
jecxz
popf
rorb
bound
fwait
sbb
ljmp
inc
lods
dec
add
enter
mov
push
jmp
in
cmp
popf
or
dec
shl
and
rorb
jbe,pt
xor
sub
out
fwait
mov
cwtl
lods
rorl
push
push
pop
loope
ljmp
dec
call
fwait
shrb
sbb
roll
mov
int
adc
xchg
stos
sbb
jmp
mov
cmc
pop
inc
bound
push
popf
xchg
and
gs
xor
imul
cli
inc
stc
ss
inc
dec
lods
cs
enter
leave
mov
adc
test
and
popf
add
or
insb
lcall
add
pop
and
test
mov
adc
inc
testb
xor
mov
cmp
sbb
arpl
outsb
pop
in
mov
xchg
daa
out
scas
lods
lea
jmp
pop
lahf
ss
scas
jmp
mov
lcall
push
lock
jae
or
insl
loopne
out
stos
mov
mov
pusha
and
inc
js
mov
shlb
bnd
and
mov
mov
jge
mov
cld
xor
mov
addb
adc
int
clc
lret
icebp
mov
ljmp
pop
stos
jns
iret
push
jno
xor
fistps
xor
jmp
push
pop
mov
pop
mov
incb
in
pop
and
ret
mov
clc
es
in
mov
fstl
addr16
aaa
pushf
andl
pop
imul
jb
xor
jl
ja
loop
jl
or
dec
push
mov
loope
mov
and
xchg
lods
or
ljmp
clc
iret
mov
idivb
xchg
and
pop
icebp
imul
call
pusha
sbb
pop
add
cmp
add
fidivrl
jnp
arpl
sub
xchg
mov
dec
and
xor
les
pop
and
jae
push
add
call
sbb
sbb
gs
jmp
xchg
repz
pop
out
scas
cmp
sub
mov
xchg
push
icebp
push
dec
sub
andb
lcall
dec
lea
inc
mov
in
cmp
xchg
sbb
ss
jg
nop
fs
inc
mov
les
mov
in
adc
pop
testl
loopne
ljmp
pop
jae
lcall
ja
into
adc
xchg
inc
je
call
mov
jge
test
sub
popl
push
mov
scas
jg
and
push
popf
push
inc
mov
inc
add
cld
repnz
cwtl
in
nop
loop
ret
jbe
lods
adc
xor
data16
push
je
jne
jl
cmp
dec
ljmp
popf
inc
jae
xchg
push
jmp
xchg
pop
leave
inc
cmp
int3
and
test
rolb
jb
or
lea
mov
dec
xchg
cli
out
sahf
mov
pop
out
xchg
adc
adc
mov
pop
mov
xchg
adc
out
mov
push
movsb
inc
in
into
bound
popa
faddl
sarl
repnz
xor
loopne
mov
outsl
insl
push
fmuls
add
fisttps
push
icebp
nop
lea
or
jl
push
mov
xchg
xchg
pop
pusha
cmp
cmp
dec
push
xor
fs
add
mov
mov
or
mov
mov
movl
cs
mov
mov
stc
pop
sbb
jne
inc
jo
cmp
xlat
insb
sub
das
add
insb
sti
jle
outsl
clc
inc
pop
and
dec
sbb
jle
insl
cmpsl
push
sahf
mov
lret
lret
stos
cltd
xor
pushf
pop
xchg
and
xchg
push
rorb
or
jb
lret
push
lea
jp
testl
fstps
in
sbb
es
fisttps
mov
cmpl
dec
xor
mov
xchg
jnp
xchg
stos
lahf
xchg
sti
pop
sarb
jmp
add
stc
cli
xchg
testl
jo
sbbl
fs
cli
scas
out
adc
cmpsl
fwait
outsb
push
push
push
jecxz
loopne
mov
pop
sub
sub
mov
popa
mov
sub
dec
mov
fs
or
xchg
and
mov
inc
push
int3
lods
cmp
mov
movsl
pop
xchg
mov
stc
test
dec
jbe
das
gs
add
pop
out
cmp
cmc
mov
mov
xor
dec
mov
dec
stos
and
jo
or
pusha
insl
dec
jl
jmp
aaa
sbb
inc
adc
or
shll
add
outsb
push
bound
inc
dec
mov
xchg
ljmp
inc
mov
pop
clc
add
inc
bound
mov
add
stos
push
dec
add
fdiv
jno
xchg
inc
daa
pop
or
mov
aad
adc
jnp
loope
sub
pop
ret
ss
and
in
sbb
adc
cmp
stc
daa
add
stc
mov
sub
movsl
call
add
jp
xor
stc
push
test
insl
clc
iret
dec
outsl
cmpsl
cmpb
fs
enter
es
sub
test
pop
sbb
orl
aam
add
aam
cli
and
sub
cmc
add
xchg
loop
jmp
inc
decl
lea
adc
sti
mov
sub
jae
jne
mov
nop
adc
fisttpl
ljmp
and
cld
dec
dec
aas
outsl
std
add
mov
mov
inc
mov
pushf
nop
add
xor
sub
sub
push
arpl
sub
cld
in
adc
test
inc
lods
push
cs
daa
adc
ret
cmp
push
aas
std
insb
repnz
movsb
mov
scas
pop
into
fsts
xor
jno
xor
jmp
adc
ret
dec
popf
and
cmp
or
or
cmp
mov
xchg
add
mov
cwtl
sbb
cwtl
sbbl
pop
sbb
jle
xlat
scas
push
repnz
ljmp
add
xchg
pop
dec
mov
movsb
aas
insl
iret
sbb
stc
sti
mov
ja
into
xor
shrl
pop
das
push
fcomi
xor
and
loope
xchg
push
push
cli
inc
roll
pop
scas
sub
xor
or
jae
rcll
cmpb
mov
lret
cmc
sbb
push
mov
jne
or
jecxz
mov
lea
cmp
roll
int
sbb
sbb
mov
shr
xchg
iret
pop
jo
pop
jp
ds
adc
jbe
sahf
mov
rcl
jl
mov
jl
cmp
jae
shl
push
pushl
popf
rcl
pop
push
lahf
jns
xorl
add
lea
fsubs
push
mov
jns
dec
test
pusha
out
decb
xchg
insb
jbe
hlt
add
mov
or
push
lcall
lahf
and
jmp
mov
cld
addr16
les
cmpsl
ds
mov
pop
punpckhbw
adc
imul
cli
ret
adc
adc
cmp
add
mov
enter
out
jnp
xor
inc
jns
rcpps
xlat
repnz
imul
xor
fwait
negl
mov
add
xchg
cmp
add
sub
push
movsb
jl
imull
loope
fldl
and
cmpsl
shlb
in
push
sub
and
add
mov
cmp
rclb
jno
and
inc
mov
mov
rol
mov
add
xchg
mov
lods
push
xor
and
mov
cmpsl
xlat
push
xor
ret
subl
xchg
push
pushf
stos
mov
and
stos
addr16
sbb
stos
fsubs
add
pop
jl
std
pop
packssdw
out
push
inc
inc
and
sub
pop
pop
sub
out
pop
mov
mov
insb
call
and
sti
dec
mov
mov
sub
outsl
pop
popf
clc
jns
cltd
jne
jge
mov
js
pop
or
dec
daa
out
push
xor
cmp
add
xor
or
rorl
cs
dec
push
repz
sbb
adc
jle
jl
pop
and
push
pushf
adc
fwait
std
pop
or
icebp
jbe
movsb
inc
mov
sub
and
jge
or
sub
and
mov
bound
add
sti
fnstcw
outsb
and
idivl
or
adc
mov
imul
pushf
xchg
xor
fsub
fwait
icebp
adc
add
dec
cmp
ret
wbinvd
dec
adc
iret
call
scas
sub
adc
push
pushf
fisubl
dec
ror
outsb
inc
je
dec
sbbb
push
mov
es
xchg
fisubl
lods
stc
xorl
dec
in
shll
cwtl
daa
or
or
pop
dec
cmpsb
mov
test
cmpsl
mov
ss
int
dec
xchg
jae
push
mov
es
movw
xor
sub
into
outsb
add
and
hlt
inc
fildll
inc
add
sbb
js
into
iret
loop
out
scas
cmp
add
add
insb
mov
out
aaa
test
jge
add
aam
jg
push
inc
mov
int
cmp
cmp
sub
icebp
shrl
cld
or
sarl
lods
push
ja
mov
jnp
jmp
dec
data16
in
popf
mov
cs
imul
loope
push
outsl
jb
mov
pop
inc
push
daa
sub
or
ss
cld
mov
sub
inc
ret
jae
stos
imul
out
xor
inc
jno
and
inc
testb
test
fists
cmp
notb
ja,pt
bound
mov
lock
inc
in
adc
inc
push
jmp
cltd
inc
jge
cmpsl
sbb
mov
lret
push
pushf
les
arpl
shll
sbb
ficoml
jp
cs
push
sub
int
jp
aas
test
inc
jbe
and
imul
mov
movsb
push
xor
gs
inc
push
xchg
mov
push
sub
das
loopne
cmp
fs
in
sub
cmp
or
mov
jbe
cmpsl
adc
shl
bound
mov
inc
adc
add
aas
push
mov
push
call
pop
insl
xor
jg
or
test
add
and
gs
cmp
jnp
xchg
les
je
pop
movsl
inc
movsb
inc
mov
pop
pop
arpl
leave
cmpsb
cmc
mov
push
dec
jmp
or
jbe
rol
pop
push
ret
and
je
pop
sub
pop
dec
add
mov
xor
lahf
test
pop
xor
aam
aaa
mov
rorb
lret
in
xor
std
cmp
sbb
cmpsl
es
xor
mov
mov
lock
mov
add
out
fisubs
push
movsb
int
xor
push
rcr
push
loopne
add
icebp
int3
fscale
test
loope
inc
daa
in
jl
fdivrl
mov
nop
addl
mov
pop
mov
adc
aaa
test
add
fld
es
dec
daa
add
icebp
or
mov
or
js
pop
jnp
test
ret
pop
leave
or
mov
aaa
nop
cmc
clc
ret
fstpl
out
or
jl
stc
jo
dec
xchg
pusha
cwtl
outsl
inc
inc
iret
mov
mov
inc
psubusw
or
add
shrl
add
vmovhpd
mov
adc
inc
cltd
pop
and
push
add
mov
mov
not
adc
mov
xchg
iret
xchg
jno
sbb
mov
in
lret
xlat
cmpsb
and
adc
loop
dec
out
jmp
imul
insl
adcl
jae
push
pop
ja
push
ljmp
es
jle
inc
sbb
ret
pop
shrb
aaa
leave
push
push
cmp
fucomp
in
cmpsl
in
and
mov
dec
mov
push
rcrl
fmull
jmp
jbe
iret
cmp
mov
inc
xchg
mov
xchg
adcl
addr16
pushf
jl
jns
add
xchg
cld
jno
xchg
xchg
xor
cld
incl
xchg
xor
mov
test
outsl
stc
sbb
dec
imul
popa
in
jl
and
mov
pusha
cs
jns
pop
pop
sbb
movsb
cmp
outsb
mov
add
and
test
mov
sbb
inc
shl
and
leave
mov
inc
dec
mov
dec
sbb
in
push
fldcw
bound
cwtl
cs
pop
in
sbb
cwtl
jbe
pop
imul
clc
adc
and
inc
jno
std
cld
pop
mov
xchg
imul
sub
addb
ss
out
inc
add
jl
ud2
inc
jns
push
clc
mov
in
scas
flds
fdivs
outsl
cmpsl
rolb
ljmp
int
or
mov
frstor
les
movb
xor
out
push
imul
dec
mov
cmp
testl
dec
sbb
fs
xchg
pop
add
fstpt
lods
icebp
mov
mov
movsl
push
xor
cld
adc
cmp
ret
in
add
push
dec
cli
loope
bound
jne
fsub
dec
jg
mov
or
and
nop
sbb
xchg
mov
sub
xor
fucomi
out
int
jns
pop
mov
daa
daa
loope
add
imul
ds
std
test
pusha
call
push
ret
scas
sahf
inc
mov
pop
loopne
rcll
and
mov
addr16
mov
stos
cmpsb
popa
ljmp
pop
push
pop
in
xchg
ss
mov
je
mov
adc
sub
cmp
pop
enter
jp
mov
cmpsb
jb
push
aam
bound
or
pushf
ret
cmp
dec
xchg
sub
and
adc
cld
adc
outsl
je
lret
or
lret
out
adc
mov
popf
in
jg
shl
out
jge
cld
sub
out
mov
or
mov
jnp
pop
mov
lods
or
jns
cmp
imul
sub
fnstenv
mov
push
imul
sbb
pop
lock
lcall
mov
mov
cltd
push
dec
adcl
arpl
cmp
daa
aaa
push
lods
lock
or
out
jb
sub
pop
sub
pop
sti
ret
sub
call
hlt
push
pop
sbb
push
stc
and
inc
shr
dec
lods
lret
sub
jnp
and
lock
fildl
shrb
push
push
and
cmp
lret
push
repnz
mov
jecxz
cmp
xchg
bound
sub
stos
repnz
icebp
scas
into
in
fwait
sahf
lock
les
mov
jb
push
dec
bound
xor
add
std
adc
cmpb
hlt
sbb
mov
into
and
aas
pop
xchg
gs
xchg
sub
sbb
push
or
rcrb
and
adc
fcomp
cmp
arpl
sbb
mov
gs
orb
mov
add
aas
dec
popf
jmp
adc
popa
daa
mov
mov
cmp
addl
in
cmc
mov
jo
imul
les
add
xchg
jecxz
xchg
cmp
xchg
adc
or
nop
pop
movsb
and
scas
mov
xchg
dec
stc
frstor
loope
cmp
mov
push
std
jb
mov
sbb
icebp
xor
pop
cld
insl
je
xchg
dec
clc
or
sahf
aaa
inc
daa
pushf
lahf
xor
fwait
adc
or
mov
movsb
loop
xor
cwtl
aaa
jnp
cmp
callw
pop
insb
jge
cmp
lock
inc
cmc
or
mov
scas
test
mov
sbb
xchg
scas
or
xchg
fsubs
cmpsl
cmovb
jb
xchg
xchg
jno
andb
pop
rcrl
inc
lcall
aaa
mov
je
mov
pop
push
aam
xchg
jns
shlb
in
aad
cmpsb
sbb
test
push
add
lahf
dec
pop
icebp
jb
jo
or
sub
sti
in
movsl
test
jns
jge
scas
mov
hlt
mov
mov
in
push
call
pop
inc
roll
cli
ja
in
sub
dec
iret
dec
movl
jmp
mov
and
cmp
nop
xor
jmp
bound
shll
sbb
xor
insl
mov
mov
jmp
ds
test
sbb
scas
mov
lock
jp
mov
add
rorl
test
xchg
ud1
pop
cwtl
adc
bound
add
pop
push
dec
mov
ljmp
xchg
sub
sub
insl
dec
pop
fwait
sbb
sti
jl
xchg
mov
sub
cli
dec
imul
mov
mov
pop
sbb
das
cmp
jg
sbb
int
daa
loopne
xchg
imul
sar
outsl
mov
jns
lods
leave
pop
xchg
xchg
insb
jl
push
xlat
jl
pop
aaa
mov
mov
or
jp
xor
xor
adc
stos
jne
sub
add
sbb
loope
and
mov
ljmp
jmp
sbb
aam
mov
cmpsl
pop
push
and
outsl
inc
sarl
sbbb
fisttps
outsb
inc
pop
mov
add
lock
jae
dec
mov
or
das
jmp
lret
aas
divl
shl
cld
mov
push
lock
adcl
stos
and
popa
popf
mov
and
sub
and
push
dec
lahf
ja
cli
data16
mov
test
pop
psrld
sbb
ret
ljmp
push
mov
xchg
xor
daa
out
sbb
fwait
inc
cld
inc
daa
push
loopne
jb
sbb
popa
andl
sub
pop
inc
adc
fwait
insl
imul
cld
cli
into
clc
xor
loope
ret
or
in
popf
sbbb
jo
fisttpll
aad
xlat
stc
sbb
dec
dec
push
jb
roll
scas
pop
lea
lahf
mov
dec
mov
jge
cmp
adc
aas
cld
daa
ds
scas
dec
aam
mov
fdivrl
push
push
jl
jmp
add
lret
pop
xor
pop
pop
and
inc
mov
sahf
dec
xchg
out
stos
ror
inc
scas
pop
scas
jp
pop
sbb
insb
dec
jnp
insb
sbb
add
push
nop
jb
prefetchw
add
sbb
and
or
xor
dec
ret
adc
pop
ss
rclb
mov
or
scas
dec
int3
and
clc
test
push
push
les
in
push
xchg
dec
das
out
daa
in
xor
xchg
mov
lret
adc
or
inc
repz
push
orb
cmc
ret
out
adcb
and
cld
lret
movq
in
mov
xchg
iret
gs
push
xor
xchg
shl
jp
adc
stc
mov
lcall
fstpt
int3
dec
fidivrl
out
mov
push
xor
push
fwait
in
nop
dec
push
test
xor
in
fmull
sti
dec
les
dec
push
cmp
or
ljmp
jecxz
daa
out
test
cmp
mov
pop
sub
pop
hlt
pop
sub
test
int
iret
inc
jnp
test
filds
xor
ja
xor
push
xor
xchg
push
nopl
mov
push
test
inc
or
sub
push
jmp
dec
aas
movsb
pop
in
push
dec
inc
add
xchg
js
fidivrl
dec
pop
icebp
jb
cmp
jp
lcall
jmp
mov
test
mov
mov
inc
test
adc
cmpsb
dec
pop
or
or
into
jl
pop
inc
jae
xor
xlat
add
shr
xchg
and
and
add
cmp
inc
xor
push
test
clc
inc
rcll
aas
std
setae
inc
out
mov
aad
jne
shll
jmp
call
adc
test
and
ss
cmp
adc
and
mov
shl
imul
addr16
jae
lret
pop
and
sahf
pusha
loop
cmp
xchg
shll
pop
insl
outsb
test
push
mov
xchg
aas
cwtl
adc
fsubrl
inc
das
js
ds
pop
dec
sub
xor
pushl
xchg
xlat
inc
cmpsl
mov
mov
cmp
in
sbb
in
cli
mov
jne
sbb
stc
add
xchg
pop
addr16
movsb
mov
push
shl
mov
or
sahf
loop
pop
into
sahf
jle
adc
xor
dec
sbbl
in
int3
mov
ds
or
inc
in
cld
test
xor
xchg
aam
mov
dec
mov
fcmovnb
test
mov
icebp
test
mov
mov
daa
lret
into
mov
imull
cmp
mov
sub
mov
inc
scas
mov
pop
mov
mov
jbe
and
mov
sub
fidivs
mov
or
jnp
aaa
lods
out
fs
aaa
lods
adc
add
sbb
push
stos
lahf
inc
fisubrs
adc
xchg
sub
pop
or
pop
lret
xchg
loopne
sbb
and
jne
testl
insb
xchg
jecxz
dec
sub
std
lods
xchg
cmc
ljmp
mov
int
ja
jnp
xor
dec
jno
mov
jle
aam
mov
xchg
push
sbb
imul
push
stos
or
ror
mov
pop
pop
insb
pop
xchg
repnz
pop
xchg
jmp
jl
pusha
subb
nop
lcall
jbe
mov
push
xchg
push
addr16
fnstsw
lahf
or
or
cmp
cmpsb
sbb
icebp
lods
aam
inc
pop
mov
xchg
dec
imul
fcomps
clc
xchg
popw
sbb
xor
lea
mov
push
cltd
dec
int3
and
dec
fwait
es
sbb
out
cs
sub
mov
xchg
leave
pop
adc
jb
out
cld
pushl
stc
mov
mov
sub
adc
sub
push
xor
and
inc
js
cld
sub
out
sbb
mov
mov
xchg
mov
sbb
int
or
xorl
xor
fdivrp
inc
aaa
or
outsl
clc
popa
into
les
jmp
sbb
movsl
cld
jb
jp
push
fisubs
and
inc
pop
addb
adc
iret
cmpsl
into
cmp
dec
inc
mov
andb
fisubl
jge
mov
inc
int3
iret
aas
lret
jb
mov
pop
pop
fisttpl
aad
bound
js
mov
mov
mov
pop
cmpsb
mov
lods
fst
adc
mov
mov
mov
jge
outsb
mov
cmpsb
xchg
pop
jl
mov
mov
pop
or
pop
out
pop
popf
cmp
cmpsl
ljmp
enter
popa
std
out
aad
inc
out
xchg
pop
xor
jnp
mov
sub
cmp
xor
inc
sbb
mov
xor
mov
arpl
push
iret
out
daa
ds
or
fcmovb
shll
xchg
cltd
adc
test
or
rclb
mov
enter
fs
mov
out
xor
jbe
js
xorb
push
mov
push
scas
hlt
arpl
jno
sarb
ss
ja
mov
lahf
iret
inc
mov
jo
xchg
pop
ret
or
jne
mov
xor
and
outsb
jnp
xor
cmpsl
fistl
pop
sub
xchg
pop
daa
mov
mov
xor
outsl
mov
in
fmuls
xor
into
jmp
rclb
or
sub
xchg
jno
sti
push
icebp
aas
fucomp
mov
dec
cmc
call
aas
xchg
ljmp
inc
int3
mov
popa
ret
add
clc
push
ret
push
repz
mov
push
jg
mov
xor
cmp
mov
arpl
cs
add
lea
mov
push
and
lret
insb
push
je
mov
and
cmpsb
pop
cmp
adc
ret
xlat
jns
pushf
out
inc
push
and
add
shr
ja
add
push
rcr
inc
sub
aam
imul
sbbb
sub
sbb
push
out
clc
push
nop
inc
rcrb
cmpsl
enter
inc
mov
je
mov
mov
jae
cmpsb
add
out
push
cmp
xor
rcll
aaa
lods
test
outsl
sbb
adc
cmp
pfcmpgt
aaa
lret
and
out
lret
push
int
sub
or
int3
pop
jbe
cli
shrb
or
cmc
inc
mov
cmc
lret
or
outsl
pop
xchg
push
lods
push
out
test
push
and
xchg
cmp
loop
nop
iret
stos
mov
mov
jbe
mov
adc
mov
and
neg
or
mov
int
jle
daa
loop
mov
and
mov
lods
pop
data16
push
les
sbb
movsl
and
pushf
and
xlat
sbb
sti
les
inc
sbb
shl
repz
jae
daa
xchg
push
stos
inc
shll
sbb
fs
push
xchg
subl
push
and
push
jbe
cmp
push
and
dec
dec
add
xor
lcall
mov
and
icebp
cwtl
les
xor
mov
es
sub
insb
loopne
cmp
not
mov
xchg
mov
ljmp
xor
push
mov
orl
sub
xchg
adc
mov
or
xchg
xlat
dec
and
aam
pushf
jno
loopne
lea
push
inc
das
daa
int
imul
mov
pushf
jb
sbb
fwait
sub
loop
sub
imul
negl
popa
out
lahf
pop
repz
mov
mov
enter
xor
inc
inc
popf
push
sti
push
jmp
andb
xchg
mov
fidivl
movsl
xchg
in
pop
test
cmp
notb
ficoms
insl
bound
jle
xchg
fwait
and
jle
sti
pop
sub
loop
es
xchg
iret
pop
lcall
dec
xchg
mov
push
test
add
hlt
inc
ja
cld
fidivrl
movq2dq
inc
cltd
xchg
into
mull
outsl
rorl
mov
sub
rclb
addr16
jp
lret
mov
ss
pusha
test
xor
popf
fsin
push
adc
fstps
lahf
add
adc
rcr
jle
adc
scas
inc
je
lahf
inc
imul
sti
fsubl
int
dec
mov
fisttpl
popa
lods
mov
mov
dec
les
pop
repz
cmp
mov
sub
mov
cmpsb
leave
movb
cmp
shll
mov
icebp
pushf
notl
inc
or
push
cmpsb
lods
cmp
pop
daa
shl
stos
mov
or
sub
jmp
sbb
jle
fnstsw
outsb
lret
adc
lahf
jg
mov
or
push
mov
call
inc
cmp
xor
int
xchg
ds
jae
cltd
ficoms
shlb
outsb
cmp
sbb
repz
ret
push
mov
dec
lcall
inc
fdivl
adc
xchg
orl
fs
fs
add
cmp
fildl
aaa
cmp
nop
xchg
fisttpll
dec
mov
aaa
sub
lock
cwtl
or
aaa
mov
and
out
outsl
inc
jae
leave
fs
jb
dec
or
mov
inc
sti
push
mov
and
cmp
je
jae
loop
mov
popa
movsb
add
cmp
test
cwtl
and
es
sti
inc
dec
and
subl
jae
or
xchg
lret
cmpsl
lock
test
outsb
sub
in
scas
inc
lret
pop
adc
xchg
xor
sbb
xlat
loopne
jp
call
imulb
cltd
pop
jns
xchg
inc
mov
popf
fsubl
and
and
mov
xchg
or
je
mov
cli
mov
xchg
pop
notb
add
or
mov
in
inc
sbb
mov
pop
test
sbbb
ficompl
adc
jb
test
push
out
subl
jge
dec
or
ss
lcall
aas
not
jmp
jle
xchg
add
ljmp
adc
ret
pusha
mov
mov
dec
ret
pop
jb
cwtl
and
daa
xor
dec
sub
scas
pop
insb
inc
pop
insl
jmp
lahf
mov
and
loopne
in
or
inc
jnp
xor
stc
jnp
sti
inc
roll
add
xor
jno
dec
je
outsl
divl
test
adc
jge
iret
jmp
sub
xor
pushf
sbb
sub
mov
lock
in
pop
pop
loop
mov
push
pop
jb
mulb
xor
orl
xchg
bswap
icebp
enter
xor
inc
stos
shrl
ret
popa
sbb
or
dec
js
ret
adc
or
lret
cli
sbb
arpl
repnz
adc
aas
or
hlt
stos
iret
jbe
je
mov
cli
push
test
lret
push
push
pop
push
std
in
xor
xlat
iret
sbb
imul
pop
and
dec
xchg
cmp
cmp
dec
adc
in
rorb
inc
xchg
test
or
pop
pop
xor
inc
int
arpl
xchg
dec
out
mov
adc
mov
nop
lea
pop
addl
adc
shr
xchg
or
out
std
std
inc
inc
and
sub
outsl
js
inc
cwtl
out
inc
push
lea
jmp
inc
test
rcrl
adc
es
cmp
push
movsl
add
jo
cs
cltd
je
ds
add
cwtl
sub
les
or
je
cli
dec
pop
loope
ret
push
inc
mov
xchg
or
push
or
xchg
fsts
faddl
pop
mov
or
xor
sbb
rclb
mov
pop
rorl
xor
inc
pop
fmul
js
jecxz
les
std
shrb
cmpb
mov
mov
ljmp
push
loop
mov
movl
shlb
fnstcw
cmp
add
pop
rol
mov
jge
dec
out
pop
xchg
testb
pop
dec
dec
gs
push
pop
add
mov
pop
dec
cwtl
mov
mov
mov
inc
sbb
sbb
and
add
xchg
sti
fistpll
dec
ret
push
jb
out
filds
fwait
popf
icebp
mov
sbb
out
xchg
lahf
sbb
push
jle
aam
fs
mov
xor
xchg
dec
adc
loop
fwait
jge
cs
call
pop
mov
push
hlt
xor
fisubs
mov
push
xchg
stos
sub
mov
push
jge
das
in
jle
leave
mov
lret
femms
int3
xchg
stos
xchg
orb
in
scas
das
aaa
lea
or
pop
pop
sbb
call
or
addl
and
les
hlt
dec
je
cmpsl
hlt
scas
lret
out
mov
push
jns
mov
jmp
insb
lods
rcrl
sub
in
sbb
dec
ficomps
or
jbe
jmp
or
cmp
mov
xchg
inc
push
add
inc
xor
sub
jp
xchg
xchg
es
in
xchg
mov
insb
sbb
mov
jge
mov
rclb
hlt
xor
pop
jp
xlat
lret
les
mov
and
in
lds
nop
cmp
lea
jp
push
pop
stos
add
stos
sahf
ljmp
inc
pop
mov
aad
flds
add
test
mov
inc
mov
mov
sbb
jno
inc
dec
sbb
aam
movsl
sbb
sbb
mov
pop
or
add
iret
mov
cmp
andl
popa
in
jp
adc
dec
dec
push
in
sarl
cltd
push
mov
push
stos
pop
stos
cwtl
xchg
repnz
push
loop
pop
icebp
movsb
xchg
inc
mov
icebp
pop
out
inc
adc
mov
add
jb
and
lods
pop
lret
fmulp
add
int3
jp
js
and
popa
ret
mov
mov
nop
lea
hlt
inc
mov
push
ret
mov
and
fldenv
dec
mov
pop
lahf
or
out
mov
fnstsw
dec
arpl
in
in
sahf
xor
scas
mov
pop
mov
ret
or
into
add
push
test
sar
fcoml
jmp
adc
mov
dec
or
gs
sahf
mov
dec
push
xchg
xchg
imull
jp
stos
sbb
hlt
jns
leave
xchg
loop
movsl
idivl
sub
pop
hlt
daa
fdivrl
addr16
mov
imul
cmpsl
jno
ljmp
mov
and
fimuls
sbb
add
dec
stos
fimuls
lcall
add
sub
pop
pop
jp
mov
mov
jle
sahf
mov
enter
xor
jne
lcall
mov
or
dec
or
mov
cmp
sti
lods
fdivl
test
ds
mov
cmpsl
popf
movsl
sahf
mov
and
gs
push
aaa
lcall
in
push
jge
xchg
mov
ja
cli
les
xchg
and
out
push
push
add
jne
rcrb
dec
cmp
inc
mov
aad
xor
mov
movsl
mov
ret
popf
icebp
outsl
ror
jnp
push
repnz
std
mov
or
mov
pop
sub
fnsave
xchg
push
hlt
icebp
lahf
inc
inc
lods
movsl
je
in
pop
pop
leave
inc
std
lret
stc
test
cmp
pop
sub
and
jmp
cmpsb
mov
xor
pop
loop
xchg
movsl
or
inc
cli
push
fimull
push
pop
sub
adcl
cltd
cltd
pop
fwait
mov
xchg
mov
test
jo
fsubrl
ret
adc
lahf
hlt
adc
mov
and
push
mov
jo
cmp
inc
sub
mov
notb
ss
leave
ss
imul
mov
fdiv
maxps
mov
dec
inc
jae
repz
test
cli
push
mov
mov
mov
inc
sbb
scas
scas
into
cmp
xor
scas
mov
mov
and
sbb
fs
mov
hlt
ja
pop
mov
lea
push
jns
icebp
pop
adc
pushf
popa
adc
leave
ret
lods
mov
cs
pop
sub
mov
in
fidivrs
in
pop
iret
pop
icebp
inc
push
neg
push
mov
mov
lock
sbb
adcb
in
jb
cmp
mov
xchg
xor
aas
push
pusha
mov
out
clc
scas
add
imul
ja
or
mov
add
sub
xor
xchg
sub
xchg
insl
xchg
cmpsb
in
test
in
or
pop
addr16
cmp
in
sbb
rorl
dec
icebp
cmp
jp
jno
xor
jmp
gs
rcrb
clc
movb
loopne
dec
add
adc
mov
jge
into
inc
and
xchg
rorl
fwait
add
push
repnz
pop
pop
sbb
xlat
or
pop
popa
test
lea
mulb
xlat
pop
adc
sahf
push
xor
mov
mov
lahf
xchg
ret
ss
sub
sbb
out
out
mov
cld
add
mov
mov
in
cmpsl
data16
test
xchg
daa
and
and
adc
stos
outsb
pop
push
shll
pop
add
in
rcrb
xchg
adc
cli
sbb
les
daa
fstp
xchg
or
daa
push
add
popa
jnp
je
inc
mov
xchg
mov
cld
push
and
sub
outsl
ja
cmp
mov
xor
iret
call
outsb
stos
jb
or
movsl
push
ds
loop
jnp
fcom
imul
and
shrl
add
jbe
outsl
out
loopne
pop
jo
subl
jns
cli
outsb
inc
mov
and
mov
stos
and
arpl
int
leave
int
pop
cs
arpl
push
mov
xlat
sub
sbb
out
mov
pop
cmp
inc
sub
test
pop
clc
ret
or
and
imul
test
nop
xchg
pop
loopne
mov
mov
xlat
mov
mov
or
cmp
and
jecxz
sub
mov
test
and
add
outsb
cwtl
je
push
sti
jge
push
cmp
shlb
mov
cvtps2pd
or
cmp
mov
jo
daa
loop
fistpll
inc
cmpsl
rclb
shrl
std
test
push
arpl
and
sbb
inc
cmpsl
loope
fcoms
or
mov
jmp
dec
push
pop
push
add
arpl
push
ret
mov
inc
push
rorb
je
cmpsl
cmp
jnp
dec
xor
dec
fwait
pop
jno
pop
cmp
fsubl
aad
int3
push
pop
lahf
mov
pop
aad
mov
jmp
pop
testb
aaa
leave
dec
addr16
es
scas
bound
out
sub
mov
cmp
inc
mov
jmp
orb
adc
sbb
push
ret
sahf
jbe
movsb
mov
shrl
mov
adc
add
pop
cwtl
in
scas
jb
loope
mov
lret
and
add
stos
or
loop
sbb
out
ljmp
adc
outsb
sbb
push
mov
lret
jbe
inc
jns
rcrl
add
mov
adc
cli
jnp
stc
add
and
xor
je
mov
fisttps
push
stc
add
or
mov
test
in
cmp
add
sub
pusha
mov
dec
inc
push
pop
push
cmp
or
ss
push
xchg
cmp
int
push
mov
push
fisubrs
mov
xchg
xor
xchg
jns
pop
or
mov
mov
andb
inc
adc
jmp
jb
lods
adc
insb
sbb
ja
inc
push
xchg
sub
sbbb
push
movsl
or
mov
fcompl
cmp
orb
sub
inc
pop
mov
or
aaa
xor
mov
movsb
pusha
in
fisttpl
xor
dec
inc
xor
dec
out
or
outsl
xchg
mov
pop
mov
ds
gs
clc
fldl
loop
ljmp
cmpb
mov
or
enter
and
movsl
ljmp
dec
xchg
js
ret
inc
loopne
cli
sahf
aaa
ret
ja
jnp
lret
lock
inc
jno
pop
je
movsl
daa
sbb
mov
xlat
es
cmp
dec
into
fidivs
jne
mov
jno
leave
add
and
mov
andl
rcll
pop
xchg
fbstp
std
and
jle
sahf
out
xchg
je
jno
imul
pop
jnp
push
lds
add
out
into
mov
daa
fidivrs
lods
mov
mov
mov
xchg
pop
dec
mov
sbb
aad
inc
cwtl
mov
shrl
jmp
jns
push
and
inc
sbb
shrl
aad
cmp
aaa
divb
movsl
icebp
or
fcompl
sbb
pop
or
jg
lret
outsb
push
out
jmp
orb
mov
bound
mov
and
xchg
lods
dec
jns
push
jno
inc
inc
mov
push
sahf
push
jg
insl
push
scas
fidivrl
jmp
jp
sbb
stc
lds
or
push
pop
sub
xchg
loope
pop
or
inc
adc
inc
xchg
mov
jns
sbb
sbb
push
arpl
pop
js
inc
movsl
dec
lcall
jb
inc
or
iret
pusha
repnz
cmp
loop
adc
roll
jb
shrb
xchg
mov
jae
and
enter
adc
push
aaa
pop
movsb
jnp
test
aas
adc
or
cmpsb
jns
mov
cmp
loopne
push
cmpsl
pop
out
mov
adc
shl
mov
rorl
scas
inc
adc
or
loopne
stos
sub
jne
push
sbb
or
loop
pop
mov
jmp
nop
pusha
xor
scas
mov
push
cli
pop
push
dec
popf
icebp
mov
ret
cli
push
dec
shll
pop
insb
inc
lock
cwtl
or
mov
or
dec
mov
ror
andb
mov
xor
add
mov
ljmp
or
push
lods
cmpsb
in
paddsb
push
ret
xor
aad
dec
mov
test
iret
adc
cmpsb
fld
dec
xor
lcall
inc
mov
sahf
jnp
jmp
fisubs
xor
lahf
and
lods
popa
iret
xchg
pop
mov
cmpsl
mov
xchg
push
out
mov
movsb
pop
cs
movl
js
test
sub
or
mov
enter
add
cmp
pop
inc
add
pop
jo
cltd
inc
in
xor
dec
mov
inc
sbb
jl
cld
push
dec
cs
cli
inc
dec
mov
mov
nop
xor
jecxz
insl
or
out
cmp
loopne
icebp
ret
lcall
loop
pushf
lea
adcl
cltd
adc
push
or
in
daa
iret
les
jle
fsts
dec
pop
shrl
enter
jae
cmp
pusha
add
lds
add
pop
mov
cli
or
adc
xchg
in
mov
out
mov
cwtl
js
dec
icebp
add
subb
mov
int
lret
jo
je
push
cmp
in
test
mov
dec
test
push
or
dec
jns
mov
test
mov
xchg
nop
xchg
stos
jecxz
fsin
pusha
mov
dec
pop
dec
loopne
in
and
fs
mov
sahf
sbb
in
xlat
outsl
dec
lods
push
xchg
shlb
pushf
sbb
aam
push
lea
jnp
cmp
lret
mov
mov
test
add
je
fwait
mov
add
cs
pop
into
in
sub
sbb
xor
sbb
jbe
adc
xchg
xchg
dec
lahf
and
pop
icebp
cli
lock
aad
repnz
stos
adc
pop
test
pop
ljmp
test
dec
fstpl
repz
les
mov
sub
aad
inc
xchg
mov
arpl
pop
fnsave
icebp
and
lret
mov
mov
pmulhw
int
out
sbb
rcrb
mov
mov
fisttpll
cmc
xorl
jbe
insb
and
dec
pusha
pop
std
jo
cltd
inc
jg
loop
les
push
push
aaa
add
dec
pop
mov
out
cmp
xchg
mov
subl
mov
int
lret
loop
mov
pop
imul
lret
xchg
mov
sub
enter
sbb
mov
or
xchg
inc
jge
pusha
pop
ss
xchg
shrl
insl
mov
push
ds
mov
into
push
xorl
notb
outsb
cltd
les
aas
inc
adc
adc
pushf
das
adc
add
hlt
hlt
and
xchg
daa
repz
or
mov
mov
daa
out
jo
test
mov
rcll
sub
bound
cmpsb
mov
and
outsl
cmp
mov
test
aad
ljmp
jno,pn
dec
dec
pusha
xchg
lock
inc
xchg
xchg
push
je
jnp
xor
es
mov
add
push
mov
inc
jg
mov
push
arpl
xchg
jl
add
mov
cmp
sti
ja
adc
je
or
bound
add
out
dec
insb
dec
add
sub
add
rcrb
cmp
dec
pop
ljmp
ret
add
pop
dec
adc
popa
mov
pop
inc
imul
push
add
jecxz
adc
sbb
int
dec
add
mov
add
xchg
in
xor
sti
shrb
sub
xor
xlat
jg
adc
cld
inc
push
cmp
cmc
cmp
loop
loopne
or
andb
out
cmp
sbb
xor
ds
repz
mov
add
xchg
cld
mov
adcl
cli
push
decb
out
aad
push
fsub
out
dec
push
mov
inc
insl
rclb
fdivs
scas
pop
scas
rorb
es
in
mov
xor
cmp
cmp
fcoml
mov
mov
cmp
imul
fldcw
in
aaa
movsl
xor
out
jecxz
sub
xchg
mov
int3
push
arpl
and
xor
leave
int
xor
fsubrs
pushf
int
aam
ljmp
mov
sbb
cmp
cmp
sub
inc
pop
xchg
popf
mov
add
xchg
xchg
pop
mov
adc
lods
xor
pop
fwait
out
sub
cmc
sbb
jb
pop
xchg
pop
jg
pop
adc
shlb
mov
sahf
loopne
enter
nop
mov
jg
add
inc
lock
call
cmp
sbb
or
jbe
notl
cltd
fisttps
jecxz
mov
rol
cmp
jl
mov
idiv
arpl
pop
mov
jg
ret
insl
stos
pop
or
adc
mov
aad
fnstcw
insl
push
jne
stc
mov
mov
in
and
sbb
xchg
xchg
inc
popa
bound
aam
cli
push
aam
int
roll
dec
scas
icebp
and
cmp
mov
in
rcrl
lock
stos
xchg
mov
dec
inc
sub
cmp
push
jmp
ss
inc
imul
rcrb
jo
or
cs
arpl
dec
pop
jne
and
adc
mov
call
aas
nop
sub
xor
dec
push
movsb
adc
fdiv
insb
or
jmp
pop
cmp
or
hlt
pop
nop
push
jg
push
sub
push
dec
test
xchg
mov
xchg
cmp
push
push
out
mov
pop
rcl
ss
sub
mov
fwait
xchg
xchg
add
fmull
in
dec
xor
scas
ja
cltd
pop
sbb
insl
ret
aad
sbb
sbb
cwtl
sub
cltd
push
or
nop
test
xor
aad
dec
insb
loopne
sarl
ficompl
ss
sub
xchg
ss
dec
test
sbb
cmp
or
lods
mov
fdivrs
scas
jnp
inc
bound
adc
je
adc
mov
sahf
xor
out
or
xor
xchg
and
pop
jl
inc
ret
in
dec
shlb
mov
icebp
fchs
pop
in
push
mov
jbe
test
cmc
mov
outsl
cmpsb
stos
scas
xchg
fwait
mov
andb
inc
push
pop
imulb
movsl
imul
xor
push
mov
add
repz
jp
jle
inc
call
jle
sub
imul
mov
mov
pop
mov
xor
inc
lcall
push
lock
ret
leave
jmp
push
leave
cli
mov
mov
inc
inc
pop
in
out
adcl
aad
push
lret
jge
scas
arpl
shr
jl
daa
or
inc
scas
lret
std
out
dec
loope
xchg
rcrl
dec
jne
add
iret
mov
fcmovbe
cmp
mov
jl
dec
pop
xor
mov
call
jp
mov
lahf
inc
ffree
neg
xor
xchg
lret
bound
outsb
push
cmpsl
je
jle
fcoml
inc
enter
xchg
ret
and
int3
es
in
adc
call
gs
cmp
inc
jbe
mov
or
mov
pop
push
int3
addb
dec
xchg
fists
jne
sbb
jecxz
les
lret
xchg
mov
push
pop
cmp
rcrl
xor
nop
mov
cmp
loopne
pop
loope
inc
xchg
jmp
ja
adc
jge
je
popf
push
push
sbb
push
in
jecxz
pop
lds
pop
mov
add
int
scas
inc
inc
push
stos
or
cmpsl
mov
testl
in
into
push
sub
sub
subl
cmpsl
jbe
ljmp
xor
push
dec
mov
xor
jns
jl
cmp
pop
inc
push
xchg
jl
mov
hlt
push
stos
mov
ljmp
dec
jmp
push
cmp
mov
jmp
pop
mov
jne
ds
xor
in
xor
dec
xchg
xchg
dec
lods
xlat
pop
mov
mov
outsl
jno
in
or
lea
or
mov
xlat
icebp
clc
out
fsubrs
and
pop
dec
scas
fildll
xchg
movsl
add
dec
xchg
mov
mov
or
jb
in
mov
jne
gs
sahf
adc
or
cmp
dec
sub
mov
inc
xchg
mov
fildll
add
or
test
hlt
fadds
shlb
sbb
pusha
shrl
adc
fs
std
push
in
lret
sti
sbb
nop
adc
fsubp
das
outsb
test
pop
fldt
push
jp
shlb
and
lea
movsb
aas
neg
test
sub
dec
xor
dec
insl
cmpsb
and
mov
pop
xchg
jge
movsl
inc
enter
cs
scas
in
out
xchg
add
out
push
js
inc
mov
push
clc
mov
daa
pop
repz
cmpsb
mov
push
lahf
inc
jno
dec
dec
iret
jp
mulb
inc
add
sub
mov
inc
aad
movsl
lret
pop
arpl
push
xchg
jbe
loop
outsb
push
rorl
leave
sub
mov
mov
dec
cmovnp
test
inc
sbb
inc
fldl
adc
std
imul
xchg
popa
xor
int
and
cwtl
sub
jg
hlt
hlt
pop
es
je
das
push
dec
dec
cmp
popf
imul
mull
jae
sbbl
push
imul
xorl
pop
sbb
cmp
rorb
push
xor
mov
xchg
pop
xlat
inc
xlat
dec
xor
xchg
xchg
and
inc
aad
mov
sub
icebp
bound
fldcw
call
jle
pop
sub
bound
es
inc
addb
push
icebp
and
adc
test
dec
adc
xchg
jmp
dec
push
pand
insl
dec
les
cli
pop
sub
ljmp
dec
aad
add
sbb
add
push
int
or
cmp
inc
xor
sbb
inc
adc
in
push
jp
sar
fxch
mov
mov
or
aaa
out
stos
push
push
fwait
jl
jnp
mov
mov
lret
pop
mov
push
cmp
test
lcall
dec
cmp
lds
xchg
es
ds
xchg
pop
pop
xor
out
mov
mov
imul
mov
inc
sub
cmp
arpl
sub
adc
jmp
adcb
dec
scas
mov
dec
xchg
xor
aas
call
imul
xor
clc
fsts
lret
jae
and
push
insb
mov
movsl
mov
daa
stos
rcl
pop
imul
movsb
adc
fisubrl
mov
push
jecxz
data16
pop
ret
lods
loop
aas
cmp
scas
dec
pop
and
js
gs
loope
lock
push
les
lea
test
jge,pn
sbb
jno
jo
imul
inc
lock
scas
les
xchg
stos
ret
in
push
outsb
daa
pop
sub
addb
hlt
jne
push
add
js
ror
push
sub
int3
sub
xor
mov
push
scas
cmp
sahf
jo
dec
pusha
mov
into
mov
imul
ss
iret
imul
xor
js
mov
mov
adc
in
bound
sahf
das
push
scas
push
test
sub
je
enter
jb
or
mov
into
or
outsb
push
pop
add
call
jb
inc
push
insl
stc
outsl
sahf
or
sub
xor
sub
pop
jle
mov
mov
xchg
jnp
add
sbb
mov
clc
das
stc
pushl
mov
sbb
or
sbb
pop
popa
inc
push
push
adc
jge
mov
mov
sub
xor
aaa
in
xchg
pop
xor
sub
loop
pop
addr16
sbb
push
dec
in
out
push
mov
and
sqrtps
ret
mov
sbb
or
jmp
jo
movsb
push
xchg
sbb
gs
sbbb
sub
insb
fwait
xchg
nop
inc
aam
fxch
cmpsb
adc
sub
mov
xor
out
inc
inc
call
cwtl
mov
push
xchg
clc
les
movsb
addr16
pop
sub
xlat
sbb
add
ficompl
xchg
jg
hlt
xor
pop
cmp
cs
dec
push
add
jae
stc
fisubl
aaa
enter
sub
inc
mov
shll
fcoml
bound
loop
lret
int3
and
scas
aad
out
xchg
dec
and
fwait
push
mov
add
lods
pop
fadd
pop
bound
xchg
mov
sub
shl
cmp
insl
adc
stos
xchg
pop
mov
mov
or
out
push
sarb
push
cs
mov
scas
add
pop
mov
popa
mov
jecxz
and
jp
lret
mov
dec
sub
add
mov
pop
and
repz
orb
jno
aas
inc
lret
mov
or
xorl
cwtl
xchg
and
adc
stc
fildl
push
sti
stc
xor
mov
push
xchg
outsl
fwait
add
dec
enter
lret
repz
fs
aas
ss
jno
mov
add
dec
hlt
ret
test
pop
fldenv
add
loopne
repz
adc
cmp
pop
fistl
push
into
data16
movsb
pop
mov
lods
jns
adc
popa
mov
ret
je
sti
pop
add
lock
je
in
or
mov
push
xlat
sbb
std
nop
scas
xor
pop
push
cltd
ret
push
mov
repnz
push
jns
or
ss
mov
xchg
aas
shll
sahf
test
cmp
mov
cmp
pop
cld
or
xchg
dec
stos
dec
mov
xchg
mov
xchg
or
xchg
rcll
imul
stos
shlb
fsubrl
outsb
rcr
popf
mov
shlb
xor
pop
sub
das
cmc
popf
scas
sbb
xrelease
popf
aas
daa
orb
pop
cmp
iret
push
out
nop
dec
mov
aaa
subl
jo
loop
sbb
shrb
jbe
jecxz
or
push
ss
scas
xor
sub
cmpsb
mov
loope
mov
inc
out
fwait
add
push
pop
out
cs
xchg
xor
in
test
pop
jp
xchg
sub
dec
push
fldl
fldt
repnz
jl
mov
stc
pop
out
inc
pop
fidivrs
mov
out
int
daa
add
sbb
lds
mov
fbstp
mov
mov
pushf
hlt
dec
nop
mov
pusha
dec
sub
push
add
mov
cmp
out
jg
shrb
fildll
outsl
fbstp
aam
pop
testb
cwtl
push
pop
jg
cs
in
jns
jbe
fldt
icebp
mov
in
xor
adc
addr16
dec
int
sti
jae
push
clc
cmpl
loop
push
sub
je
pusha
pop
sti
into
lods
inc
inc
enter
in
push
mov
adc
stc
stc
sub
or
aam
mov
and
mov
mov
sbb
fdivrl
cltd
cwtl
add
cltd
jae
xlat
leave
pop
mov
or
sub
jns
testb
insb
push
mov
out
test
xor
stos
inc
pop
sar
push
add
cld
xchg
std
sti
ja
iret
popa
fsubrs
ss
pop
inc
fisubrs
xchg
dec
addr16
addr16
cmp
push
and
out
sbb
sbb
scas
or
dec
pop
inc
push
pop
push
sahf
addl
cmp
insb
out
pop
fisubrs
mov
push
dec
sub
lea
divb
and
jbe
loope
pop
mov
and
cmp
mov
nopl
sub
aam
sbb
xchg
cmpsl
cmp
inc
mov
inc
fldl
test
iret
jge
pop
xlat
shrb
int
das
not
shrl
test
mov
loop
popa
adc
xchg
xor
out
mov
adc
testl
mov
add
xchg
aas
aas
inc
mov
inc
popf
jbe
dec
inc
xchg
mov
andl
dec
or
adc
mov
pushf
adc
fadd
jmp
add
or
sahf
xor
or
pop
pop
shrl
jns
lods
outsb
xlat
mov
rclb
mov
add
rol
and
mov
aam
and
cli
xchg
nop
fnstenv
roll
inc
mov
jnp
and
xchg
dec
ljmp
fdivrs
test
xor
fbld
aad
test
sbb
mov
daa
xchg
mov
ds
sbb
es
mov
sbb
pop
jg
mov
out
dec
and
icebp
fnsave
mov
dec
mov
and
mov
idivb
js
mov
mov
iret
loop
imull
and
jmp
orb
add
rclb
mov
cltd
fptan
lea
out
aad
test
and
stc
fcom
sub
enter
adc
iret
leave
xor
scas
mov
int3
ss
mov
lea
imul
enter
cwtl
pop
sub
mov
pop
xchg
insl
in
mov
outsl
add
or
vmovntps
outsl
or
mov
xor
lods
test
fcomip
add
pop
xchg
xchg
jmp
stc
ljmp
div
mov
sbb
xchg
mov
mov
rcrl
mov
nop
mov
movsl
jge
lcall
fistps
xor
cs
mov
inc
jns
xor
adc
push
mov
loope
and
pop
iret
pop
and
jp
mov
jno
fwait
jge
iret
shlb
pop
inc
mov
dec
sbb
ret
xor
cmp
js
aaa
into
inc
pop
pop
xchg
imul
dec
call
cmpsb
ljmp
or
jl
adc
mov
mov
push
in
jl
xor
xor
aam
mov
xor
adc
adc
lret
mov
xchg
and
xchg
mov
adc
pop
dec
std
loopne
loopne
mov
pop
outsl
mov
xchg
lods
dec
lret
or
sti
add
in
mov
outsl
insb
bound
dec
icebp
and
cmp
mov
loope
cmc
xor
in
or
jecxz
cmp
sub
adc
gs
jne
les
lds
fimuls
push
jae
push
test
push
das
ficoml
jo
xchg
cmp
sub
sbb
and
lcall
scas
cmp
pop
jne
cmp
sbb
outsl
mov
push
push
add
mov
cmpsl
repz
sti
add
incl
and
enter
rcll
lret
data16
xor
and
imul
adc
adc
mov
jbe
enter
adc
das
sbb
mov
inc
aam
loopne
sub
xchg
std
cwtl
push
fldt
mov
adcl
push
enter
imul
icebp
pop
add
pop
mov
adc
je
test
les
mov
mov
mov
sub
ljmp
mov
les
xchg
cmpsl
sbb
mov
decb
mov
shrb
lea
bnd
bound
xchg
lahf
icebp
cmp
push
iret
add
shlb
insl
adc
orl
adc
mov
jns
test
sahf
lret
inc
jmp
repz
aam
mov
sbb
xor
and
outsl
jp
es
mov
jp
out
sbb
or
leave
pop
mov
xlat
add
mov
xchg
adc
bound
mov
imul
sbb
sub
and
add
xor
fimull
ljmp
aad
sub
rol
lret
jl
mov
push
mov
inc
sbb
cmc
xlat
fs
out
sub
rcl
dec
rclb
int3
dec
lahf
pusha
cmp
sub
mov
jne
rcrl
addr16
adc
or
jnp
lret
inc
sahf
jae
nop
in
add
mov
jl
leave
dec
mov
dec
cli
sub
fldcw
mov
iret
push
sti
test
movl
fldenv
nop
inc
sbb
adc
std
shll
cmp
sbbl
jbe
pusha
in
sub
repz
xor
cmp
jmp
or
push
es
mov
mov
loop
cmp
or
jge
orb
mov
mov
add
std
imul
cmp
clc
outsb
mov
xor
cmp
movsb
jecxz
cli
in
cmp
jae
arpl
jl
mov
adc
sub
mov
push
insl
push
add
add
fs
into
gs
sub
mov
xchg
inc
cmp
std
iret
les
mov
push
fwait
lea
dec
js
pop
in
ret
adc
inc
mov
mov
cmpsl
test
mov
cwtl
pop
cmp
repz
jp
stos
outsb
xchg
inc
out
cmp
jl
imul
or
aaa
int
ret
mov
out
shl
fidivs
dec
sbb
inc
or
std
push
cltd
and
inc
sbb
lea
lods
jo
add
clc
call
clc
cmpsb
popf
test
push
mov
stos
xchg
add
and
or
mov
xor
mov
stc
insb
sbb
sbb
in
cmpsl
mov
sbb
lgs
or
fsubl
mov
jno
sub
xchg
into
mov
or
xor
and
add
pop
push
out
xor
negb
movsl
testb
mov
mov
cmp
sbb
out
sbb
js
xor
stos
aaa
loop
and
out
into
push
pop
xchg
cmp
mov
mov
inc
xor
addb
orb
test
lret
push
movsl
xor
lret
ljmp
pusha
ret
js
xor
sub
ds
mov
mov
pop
fcoml
testl
cli
fdivrl
insb
mov
push
cmc
mov
mov
loope
outsl
xchg
fs
std
push
popa
mov
lret
adc
mov
enter
scas
cmp
sbb
lahf
xor
out
shll
inc
jns
inc
fcoml
scas
sbb
lahf
jge
mov
fistl
xchg
mov
cmpsb
cmp
and
mov
sahf
test
mov
mov
outsl
das
outsb
xchg
add
or
mov
jbe
xchg
fadds
lret
pop
inc
aam
sub
push
mov
jbe
and
mov
imul
lret
stos
icebp
xchg
dec
jl
test
aam
sub
adc
aad
movsb
push
jecxz
addr16
xchg
ljmp
cmp
loop
cmpsb
push
enter
jno
out
sbb
iret
or
push
cmc
pop
sub
insl
push
push
and
or
cmp
scas
mov
xor
sbb
jbe
faddl
out
jg
pop
jge
lea
jl
and
clc
or
or
bound
mov
dec
lds
push
and
sub
jp
xchg
test
or
push
mov
mov
pop
subb
mov
add
mov
loopne
es
mov
xchg
int3
jg
es
push
push
cmp
push
aas
pop
pop
cs
pop
adc
stos
adc
xchg
push
mov
ja
ret
xor
test
sbb
insb
popa
stos
cmp
sbb
xor
mov
adc
jmp
scas
sbb
data16
inc
rcrb
mov
shlb
fists
cwtl
popa
es
pop
mov
dec
loope
or
imul
and
dec
adc
cmp
enter
fstl
addl
inc
in
jl
adc
subl
aas
inc
mov
jbe
lods
aad
dec
push
in
sbb
pop
lahf
ret
lods
mov
lahf
adc
fcomip
ljmp
lea
lret
iret
push
xorl
inc
and
mov
imull
imull
scas
xor
sbb
fnstsw
decl
adc
dec
jns
adc
push
sub
mov
ss
fwait
or
xchg
or
repz
xor
mov
lds
pusha
inc
mov
sub
imul
out
cmpsb
push
in
pop
jecxz
adc
insb
pop
jae
sbb
push
and
jo
popf
mov
jb
arpl
cmp
loope
lcall
cmp
xor
mov
out
sbb
jb
imul
sti
jns
mov
xor
inc
xor
add
jl
out
call
dec
ret
sbb
aas
ja
sub
in
addr16
xor
in
std
incl
jge
scas
push
push
data16
xor
fidivs
out
dec
adc
pop
lea
dec
add
sub
lcall
std
mov
pusha
std
hlt
cmp
add
mov
push
jmp
and
data16
inc
cli
xor
mov
mov
loop
push
call
push
push
sub
aam
movsl
icebp
les
jge
dec
inc
sti
andb
stc
jmp
xchg
xor
add
lcall
push
ss
addr16
add
fbld
cmp
or
in
lcall
push
mov
inc
cmpsl
inc
lahf
xchg
adc
or
adcw
mov
mov
cld
pop
icebp
mov
repnz
cmp
sub
fldl
dec
adc
or
icebp
adc
jns
pop
pop
push
mov
iret
dec
sbb
loopne
push
insl
jmp
pop
pop
cmpsb
movsl
push
push
push
test
cmp
xor
dec
xor
fwait
adc
adc
push
aam
cld
cli
stc
cwtl
sbbb
xchg
cmpsb
ss
inc
cmp
mov
sub
dec
jl
jae
nop
cmc
jb
add
or
fdivs
insl
gs
mov
inc
xchg
or
cltd
ret
or
lds
ss
inc
pop
jb
test
aam
sbb
or
xor
adc
fstpl
pop
xchg
movzwl
xchg
es
pop
and
push
stos
pop
push
dec
cmp
sti
cli
xorl
lcall
cmp
imul
iret
push
mov
push
and
add
cmpsl
sbb
push
dec
dec
imul
pop
adc
int
outsl
stos
stos
aam
mov
popf
stos
and
lret
ret
repnz
cmc
mov
dec
pop
sbb
push
jns
sub
jnp
imul
dec
xor
push
pop
pop
xchg
xorl
sub
mov
cltd
add
ss
xor
cmpsl
sub
inc
hlt
xchg
and
cmp
or
enter
or
orb
fbld
sbb
mov
ss
adc
sub
adc
stos
push
pusha
sbb
jge
push
add
jg
xchg
mov
imul
dec
push
cmc
or
cmp
mov
movsb
mov
mov
push
inc
daa
dec
adc
fidivl
sahf
mov
jno
jbe
add
push
dec
pop
jp
pop
leave
cwtl
out
hlt
xor
movsb
xchg
je
fisubrs
stos
and
pusha
adc
or
push
and
out
mov
repnz
push
xlat
add
sarl
mov
in
pop
loop
fcoms
and
cmpsb
fsubr
cmpsb
addr16
arpl
scas
lock
inc
jbe
je
inc
icebp
stos
test
fstpl
sarl
adc
cs
xor
jno
add
jo
fcmovbe
pop
shrb
cmpsl
push
mov
jge
push
fwait
adc
jp
cmp
pop
mov
mov
cmp
cmp
icebp
mov
pop
das
dec
out
out
sti
call
sub
xchg
ret
lods
in
aas
pop
addr16
popf
jmp
dec
cmc
test
cmpsb
cltd
icebp
mov
push
adc
inc
xor
out
out
push
stos
mov
mov
inc
and
sbb
mov
sbb
jle
cltd
xor
cli
xchg
std
push
pop
or
cld
push
movsb
out
inc
rclb
xor
pop
das
push
sub
push
mov
pop
mov
cmpsb
rolb
pop
mov
add
jmp
dec
fildll
call
pushf
mov
xor
lret
jae
xchg
inc
fdivr
mov
add
push
adc
ljmp
mov
sbb
in
clc
cmp
ds
data16
xor
adc
xchg
cwtl
jne
sub
cmp
lds
mov
icebp
and
inc
xchg
inc
faddl
push
repnz
jmp
je
rcll
mov
pop
or
aam
cmpsb
cmpsl
adc
sub
sbb
and
ret
scas
jge
hlt
dec
add
dec
scas
jno
imul
shrb
test
fmuls
inc
out
ljmp
mov
cmc
scas
inc
push
mov
add
and
and
shrb
lods
push
je
cmc
mov
mov
dec
mov
loope
sub
mov
movsl
incb
vphaddubq
dec
pushf
pop
xchg
pop
and
sbb
loopne
adc
sub
sbb
icebp
adc
js
imul
std
pop
ljmp
push
mov
in
test
xor
jns
inc
pop
lock
cltd
add
pushf
push
and
sbb
inc
add
sarb
mov
ret
cmp
gs
int
enter
inc
add
ret
cmp
mov
movsb
int
insl
adc
stos
pop
jmp
loop
hlt
ljmp
out
rcrl
push
push
int
sub
adc
adc
scas
adc
push
das
ds
or
call
scas
ds
test
jne
inc
in
and
jg
xor
sbb
xchg
adcb
mov
inc
adc
jge
push
push
ret
icebp
mov
xchg
out
imul
mov
adc
add
dec
dec
jnp
or
cmp
cli
add
stos
jb
mov
call
stc
push
int3
in
daa
dec
xchg
xor
pop
lret
aaa
stos
xchg
outsb
jmp
sbb
into
xor
cmpsl
test
out
lock
lret
aad
sbb
lcall
movsb
sub
cld
outsl
dec
stos
sbb
insl
es
and
xor
cwtl
insl
jo
out
call
mov
push
inc
cmp
stos
inc
jae
or
leave
iret
mov
xchg
aad
add
dec
or
mov
int3
add
xor
jecxz
adc
sub
enter
rorb
js
in
sub
popf
fwait
or
xorl
sbb
das
stc
mov
nop
cld
or
sbb
cmp
jae
pop
mov
jo
jge
jnp
or
inc
push
jmp
mov
nop
call
mov
das
into
and
sbb
fsubl
loopne
scas
sub
xchg
push
dec
sbb
sbb
cmpsb
cmp
and
enter
pop
mov
cltd
movsb
mov
and
arpl
in
shrl
fwait
movsb
in
cmp
mov
jg
fcomp
mov
repnz
cltd
subb
lods
shlb
hlt
mov
xchg
adc
in
push
aaa
lret
mov
mov
inc
lahf
lcall
and
add
out
mov
mov
fstps
into
fcoml
xorb
outsl
cmp
sahf
xchg
or
add
cmpsb
sub
adc
bound
dec
push
inc
jge
js
ja
xor
xchg
pushf
mov
arpl
fsts
sub
dec
mov
outsb
mov
enter
xchg
jne
aaa
testb
fidivrs
rcl
mov
dec
cmp
ret
dec
and
jns
lds
mov
dec
cs
fnstenv
in
lahf
xor
push
xchg
pop
dec
jle
test
icebp
and
and
pop
sahf
xor
movsb
mov
cmp
mov
add
fisttps
repz
clc
pushf
stos
outsb
xlat
cs
nop
jle
jns
cmpsl
and
ljmp
in
pushf
into
sbb
mov
mov
push
or
sub
xchg
pusha
aad
scas
cmp
jmp
cmc
or
addb
push
inc
dec
xchg
mov
pop
faddl
adc
push
jns
jno
sbb
bsr
js
pop
bound
dec
and
data16
in
pop
xor
pop
lcall
movsb
sbb
scas
or
aad
mov
daa
stos
xor
imul
in
dec
in
push
cli
ds
hlt
and
mov
cwtl
test
in
xchg
mov
jp
mov
subb
cli
ss
aas
filds
inc
push
lods
loop
sub
mov
rol
punpckhdq
jne
movl
and
pop
mov
sbb
int
stos
nop
cmp
test
sbb
inc
dec
or
arpl
ss
pusha
sub
mov
xor
test
lods
add
pop
lods
mov
jmp
flds
pop
cmpb
repnz
inc
ljmp
aad
out
mov
popf
jl
loope
jle
and
mov
int
mov
jae
mov
ficompl
dec
dec
adcb
mulb
jle
xchg
mov
xchg
lret
fistl
sahf
shl
sub
ret
push
mov
and
xor
add
xchg
jl
cmp
sub
stos
dec
pop
or
push
push
mov
hlt
out
jne
ljmp
mov
pop
sbb
hlt
arpl
jg
inc
icebp
test
xor
jne,pt
ljmp
cmp
orb
xor
pusha
out
pop
pop
push
cmp
or
pop
cmp
mov
dec
cmp
test
ret
pusha
xchg
icebp
add
es
mov
gs
popa
loope
mov
ret
hlt
jmp
das
imull
aas
adc
lret
pop
clc
jns
push
cli
in
dec
mov
lret
pop
pop
xchg
or
lret
or
and
sahf
jmp
add
push
dec
add
out
xorb
mov
adcb
and
inc
cmovs
adc
or
mov
clc
pop
shll
int
mov
or
movsl
mov
ja
mov
in
cmp
stc
cmp
cltd
inc
fisttps
dec
scas
sub
in
or
out
xchg
or
or
xor
or
xor
or
aam
sti
mov
add
xchg
clc
andl
push
das
cmc
inc
push
jne
lret
and
mov
cmpsb
out
push
xchg
or
mov
or
test
movsl
test
add
pushf
or
push
xor
int3
cmp
js
and
push
adc
add
gs
sub
fiadds
sub
sbb
dec
xor
loope
test
lcall
sbb
mov
dec
pop
test
mov
lcall
push
xchg
mov
xchg
sub
push
jbe
sahf
mov
aas
lock
fidivs
or
jle
mov
shrl
leave
aad
movsl
xchg
jge
sub
cmp
sub
sub
sti
dec
inc
add
cmp
jb
xchg
cmp
aad
sub
aam
das
xor
cmpsb
pop
mov
in
jecxz
jmp
push
sub
test
loop
lods
js
in
fstpl
push
jle
xor
lods
enter
mov
ljmp
nop
outsl
and
addr16
mov
mov
cwtl
adc
fs
gs
push
sbb
loopne
inc
add
jb
repz
sbb
std
jmp
in
add
andl
push
fistpl
sbb
inc
lret
fcmovnb
out
and
out
jecxz
imul
sub
sbb
ljmp
fnstsw
inc
jb
in
in
out
mov
jbe
js
insb
jge
test
addl
aas
jmp
dec
mov
das
out
test
sub
xor
xchg
out
pop
iret
or
xchg
sbb
inc
mov
fmuls
xchg
movsb
push
xor
mov
jnp
jne
sbb
mov
cmpsl
std
cmpsb
js
imul
ljmp
push
jae
xor
testl
adc
xor
call
lcall
call
xor
xchg
cld
call
sbb
cld
ret
mov
cmc
lret
mov
ret
xchg
and
dec
stos
add
inc
xor
mov
and
dec
in
cmp
fimull
add
iret
sbb
into
sldt
aam
bound
adc
sbb
inc
fcmovne
mov
cmp
cmp
outsl
stos
sub
adc
sbb
xor
decb
mov
int3
xlat
cld
out
jnp
lods
jae
and
je
jbe
push
adc
xchg
push
and
cmp
cltd
push
sbb
dec
ljmp
imul
pop
sbb
sub
cmc
pop
out
addr16
sahf
push
inc
sbb
mov
fsubrl
fwait
push
cli
ret
clts
and
xchg
cmpsl
xor
ret
lea
sbb
rol
add
mov
dec
pop
cmp
out
cli
push
sub
popa
fdivs
xchg
scas
movsb
movsb
iret
mov
mov
iret
jo
jle
mov
or
dec
arpl
rol
popa
sahf
mov
cltd
jo,pt
sbb
mov
inc
add
imul
rol
bound
lods
pop
repz
fstpl
insl
add
jg
stos
xor
sub
mul
stos
or
mov
or
pop
xor
in
or
mov
imul
pop
repz
xor
ljmp
in
sub
sub
pop
dec
jmp
arpl
ss
stc
movsl
or
and
mov
pand
sbb
cs
stos
popf
icebp
decb
pusha
sarb
les
cmp
mov
xor
lret
enter
jle
add
mov
adcl
cld
and
outsl
pop
push
dec
mov
mov
stc
lret
int
fstl
out
imul
shlb
sub
sbb
pop
scas
cltd
out
jbe
out
xchg
int3
adc
dec
lar
push
insl
xor
das
lds
fstpl
xchg
mov
cmpsb
cmp
add
shll
xor
jl
fbstp
fists
repz
cmpsb
stos
jecxz
or
or
outsb
dec
ret
in
pushf
cld
mov
nop
mov
sub
inc
adc
sbb
push
xchg
xor
lea
insb
rcrl
jnp
pop
int
fisttpll
cmp
fsubrl
jbe
out
orl
or
decb
out
stos
add
repnz
mov
or
adc
pop
scas
inc
lds
dec
mov
shll
ljmp
lret
inc
dec
adc
sti
sbb
dec
xchg
pushf
jb
dec
xor
icebp
or
mov
cmp
cmc
sysret
ret
dec
fdivr
jge
in
loopne
cmp
arpl
in
mov
out
inc
add
cmpsl
insb
sbbb
or
pop
adc
mov
in
or
nop
cmp
out
cld
je
inc
jns
pop
cwtl
mov
es
jecxz
fiadds
push
pop
jne
sbb
sub
and
and
or
jle
test
movsl
daa
fadds
xlat
or
lods
cwtl
jne
push
mov
std
cs
cs
sub
repnz
push
out
test
es
aam
xor
mov
dec
cmp
subb
and
test
gs
stos
popf
fs
int
xchg
jl
cmp
add
in
lds
mov
test
bound
aas
fadds
or
dec
test
cmp
faddp
jno
add
popa
into
mov
or
mov
mov
sub
cmpsl
arpl
clc
mov
mov
lret
inc
mov
inc
fidivl
mov
popa
lock
mov
scas
inc
les
cld
push
dec
or
jns,pt
mov
scas
mov
mov
mov
mov
jmp
xchg
adc
shr
std
insl
push
loopne
add
push
popf
pop
scas
mov
add
cmp
jnp
ds
add
test
aam
aaa
jae
xchg
inc
jl
jns
xchg
test
outsb
add
jecxz
icebp
call
mov
and
push
rcr
push
or
push
outsb
cli
mov
test
jns
xchg
ds
pop
and
es
aaa
push
mov
inc
stos
mov
jecxz
push
dec
jl
mov
cmpsl
lods
fstpt
inc
mov
sbb
inc
push
mov
add
xchg
jmp
pop
push
imul
mov
cmpsb
inc
fdiv
scas
movl
inc
adc
sbb
jns
cmp
loope
loope
adcb
cmp
jecxz
lods
xchg
sti
popa
insb
mov
rcrl
faddl
adc
adc
mov
sbb
movl
in
adc
and
inc
xchg
in
xor
sti
jp
jecxz
lret
adc
repnz
pop
imul
mov
movb
dec
call
sbbl
xor
inc
mov
mov
mov
push
cmpsb
pop
ja
in
adc
xchg
stos
dec
pop
movsb
test
pop
push
hlt
divb
dec
push
in
test
fstl
notb
sbb
in
pusha
and
test
repz
xchg
mov
mov
mov
sbb
push
jne
jo
pop
push
xchg
cmp
jmp
sbb
push
mov
sbb
cwtl
adc
iret
daa
sbbl
xor
pop
cmpb
adcb
mov
jae
push
es
inc
paddw
aas
sub
cmp
lods
rorl
push
mov
mov
jle
outsl
scas
mov
sub
xchg
imul
addb
push
cwtl
and
filds
inc
pop
arpl
ljmp
scas
add
ret
push
push
xchg
test
rolb
test
jo
or
mov
gs
sub
stos
inc
mov
mov
cmpl
xchg
mov
sbb
out
mov
and
aas
bound
pop
xchg
pop
out
rol
or
std
xor
inc
das
mov
das
and
ds
push
cmp
leave
fisttpll
cld
fmuls
sub
add
enterw
std
mov
pusha
mov
mov
pop
lods
mov
ret
ret
mov
sti
adc
in
xor
adc
fldenv
adc
mov
add
mov
adc
loopne
loopne
sub
sbbb
push
cwtl
push
movsb
xor
cli
aam
dec
fistpll
cmp
cltd
mov
dec
and
xchg
add
mov
into
mov
or
in
lcall
mov
cmp
dec
iret
push
xchg
jl
je
cs
fstpl
pop
mov
pop
scas
pop
imul
mov
mov
sarl
add
js
dec
push
or
mov
dec
sub
addr16
daa
cmp
or
lcall
sarl
add
insb
scas
pop
sbb
stos
fwait
mov
pop
push
testb
inc
fistps
fdivrs
sub
mov
daa
lcall
push
pop
pop
jl
jb
loope
int3
sub
xchg
dec
jmp
lret
jbe
jns
scas
adc
lds
bnd
clc
adc
mov
pop
cltd
or
aad
mov
push
adc
daa
add
ret
sub
test
dec
pop
test
loope
xor
insb
sub
pop
fistpll
and
daa
aas
dec
sbb
dec
jb
mov
pop
sub
fiaddl
lahf
dec
test
int
sub
push
push
aas
sub
mov
dec
pop
shr
lock
jg
aaa
arpl
es
mov
pop
movsl
ficomps
add
out
test
scas
and
jp
jnp
divb
es
mov
nop
push
pop
hlt
add
adc
mov
mov
xor
adc
cltd
inc
mov
jle
mov
dec
subb
int3
test
fidivrs
sub
inc
outsb
rcrl
fadd
mov
adc
push
inc
loopne
mov
xchg
xchg
popf
jmp
out
ds
and
mov
or
leave
and
gs
sbb
sti
js
in
cmp
lret
cmp
or
inc
mov
and
push
shrb
add
inc
out
pop
outsl
and
ficomps
cmc
daa
incb
mov
gs
mov
leave
ret
nop
xor
pop
idiv
jp
inc
je
repnz
notb
sti
mov
sbb
add
jmp
xor
shlb
pop
popf
push
push
leave
jnp
or
sahf
mov
add
insb
add
mov
out
call
int3
std
mov
test
test
lahf
mov
int
sbb
leave
and
sbb
and
jo
mov
mov
xor
cmpsb
test
push
out
rcl
push
cmp
fwait
xchg
in
mov
call
jmp
test
out
and
mov
imul
push
scas
pop
int
rcll
subb
leave
leave
lcall
inc
shrl
mov
and
inc
lahf
lock
mov
test
inc
repnz
push
add
push
fists
cld
push
inc
mov
imul
adc
neg
push
popl
sub
jb
lds
rcrb
mov
cltd
loopne
or
add
jb
inc
das
mov
in
repz
mov
je
mov
rdmsr
mov
divb
dec
push
iret
inc
lods
inc
pslld
cmp
dec
xor
loope
push
fidivs
out
ds
jmp
jbe
sbb
cmp
push
add
or
movsb
fwait
jle
xor
inc
out
cmp
inc
mov
jbe
sub
stos
call
adc
out
mov
mov
fistpl
lock
jmp
in
jne
jmp
cmp
sbb
mov
cmpsb
dec
lahf
xor
lods
mov
inc
ret
test
mov
addr16
adc
or
pusha
aam
and
daa
aam
lds
xchg
bound
test
adc
fisubrl
cmpsb
xchg
or
lock
inc
mov
mov
lods
lods
jne
pop
adc
pop
cltd
push
inc
pusha
xor
fsubp
test
sub
aam
add
loopne
inc
jge
sub
xchg
loope
jp
inc
imul
mov
js
insb
mov
ret
das
rcl
lret
rorl
scas
jno
mov
add
adc
leave
loop
jg
sbb
jp
cmp
lret
enter
xchg
mov
sub
dec
cwtl
in
sub
push
test
jmp
jbe
imul
inc
add
hlt
lock
in
dec
ret
aam
sub
mov
iret
push
out
cmpsb
inc
mov
subl
rorl
xlat
pop
push
cmp
inc
adc
cmp
mov
leave
jbe
push
sbbb
push
sub
scas
push
hlt
xor
mov
fcomip
push
shll
int3
sbb
mov
cmc
fsts
lock
repnz
fmul
cwtl
data16
loop
mov
movsb
sti
arpl
std
in
adc
mov
cwtl
sub
and
mov
fmull
xchg
xor
cltd
ja
push
into
push
je
xchg
insl
push
inc
dec
int
and
popf
cmp
adc
movsl
std
in
test
out
arpl
mov
jo
jo
xor
jp
fnsave
sub
popf
mov
pop
jmp
jge
bnd
pop
or
sbb
repnz
and
ss
mov
loopne
imul
sub
add
bound
fstpt
data16
mov
mov
mov
or
push
rclb
and
fs
fnstenv
jae
sahf
inc
mov
fimull
int3
ja
add
cmp
or
jnp
jecxz,pn
loope
mov
and
mov
jns
add
lcall
in
outsl
or
mov
add
hlt
scas
in
cmp
fisubrl
push
dec
int
push
and
cs
pop
adc
dec
jmp
lods
inc
pop
addl
lock
stos
mov
mov
pop
ja
testl
inc
jecxz
cmp
adc
sbb
xorb
ret
ds
and
mov
pop
imul
scas
pop
ja
pop
dec
mov
scas
push
and
jo
xchg
scas
jp
xchg
pop
ds
sbbl
push
stos
lahf
inc
repnz
in
sete
dec
cmp
jbe
jmp
fs
jg
incl
loopne
jb
mov
fcom
lock
pusha
push
xor
mov
imul
in
das
inc
je
mov
inc
pop
lods
call
popa
jno
lcall
popf
stos
stc
ret
iret
adc
push
lods
repnz
push
pop
add
sub
mov
cmpsl
mov
push
mov
jl
dec
cwtl
dec
dec
lret
sub
shrl
or
sub
xor
sub
icebp
ficoml
jge
repz
gs
mov
push
mov
aaa
dec
push
xchg
push
subb
jl
outsl
sub
lods
fistl
sub
or
daa
jl
bound
ret
test
add
ja
enter
and
sbb
dec
dec
or
sub
sarb
loope
sbbb
mov
xchg
das
pusha
out
aaa
in
ss
fmulp
movsl
mov
cld
and
mov
movsl
pushf
lahf
sub
mov
insl
bound
xchg
lahf
lret
sub
or
xchg
ja
or
cmpsb
mov
stos
shll
xor
cmp
hlt
mov
les
stc
fsubrs
insl
pusha
push
cs
or
or
mov
xchg
adc
ss
dec
xchg
arpl
pop
dec
movsl
mov
push
pop
bound
lcall
daa
int
sbb
mov
fst
pop
and
push
adc
dec
jb
jnp
sbb
cmp
pop
stc
inc
sub
rorl
in
repnz
dec
push
jne
fnstcw
lock
cmp
jno
jae
mov
adc
cmpl
xchg
call
outsb
popa
mov
mov
ss
ss
inc
popf
imul
adc
loop
popf
sbb
popf
les
cmp
dec
jle
mov
inc
add
push
clc
testb
xchg
in
ljmp
mov
sar
lds
punpckhbw
loopne
cmp
mov
and
div
mov
data16
sub
outsb
and
sbb
pop
out
std
in
cwtl
mov
and
insb
popa
popa
jno
add
int3
lea
jns
addr16
and
insl
xchg
iret
pop
in
imul
fiadds
sub
ds
adcb
int
sbb
les
push
aad
jno
cmp
and
call
mov
dec
sbb
and
mov
dec
loop
mov
test
enter
ret
jp
push
sbb
push
out
jo
test
shrb
into
addb
ret
sarb
mov
daa
ret
fists
push
addr16
mov
push
adc
dec
xchg
stos
inc
jno
movsb
bound
xchg
lods
notb
sub
les
xchg
in
sbb
adc
sub
arpl
scas
xchg
popf
dec
in
mov
or
mov
jb
fmulp
sbb
jo
jnp
jno
jmp
int3
test
xchg
hlt
lret
sbb
ja
push
mov
sub
jp
fcompl
mov
push
xor
xor
jp
out
push
aad
sbb
sub
mov
cld
push
adc
pop
inc
push
sbb
fwait
xorb
leave
int3
mov
stos
test
lock
sahf
sub
dec
jmp
int
int
loope
lods
mov
push
sti
ljmp
mov
jbe
sub
iret
cli
push
add
pop
loope
lea
push
dec
mov
cld
daa
and
test
mov
dec
iret
jmp
pop
adc
cltd
mov
xchg
insl
cwtl
push
int
push
mov
add
bound
inc
test
mov
loopne
push
inc
les
xor
pusha
add
or
pop
lahf
mov
mov
cmc
add
in
push
add
adc
dec
insl
xchg
push
inc
xchg
sbb
sbb
jno
lods
shr
jne
xor
lret
pop
in
loope
dec
fidivrs
stos
sub
or
mov
jns
pusha
push
push
fldcw
test
ds
cmp
scas
out
inc
je
xchg
adc
pop
std
idivb
jno
inc
scas
lods
ljmp
loope
and
mov
jb
lcall
inc
inc
idivl
es
sarl
jl
sbb
in
stc
xchg
jecxz
cmc
and
sbb
lea
mov
out
mov
ret
repz
adc
xchg
dec
mov
inc
shlb
out
mov
clc
cmpsb
adc
xor
pop
sub
test
call
mov
mov
xlat
push
fdivrs
icebp
jecxz
enter
jle
mov
ficoml
popf
cwtl
add
jno
outsl
cmp
je
jge
pop
lea
sub
cmp
cltd
inc
lcall
mov
idivb
lods
sbb
mov
cs
cmp
popl
jbe
xlat
imul
cmp
pop
pusha
fnsave
in
sahf
jge
inc
mov
negl
push
cmp
int
imul
lock
mov
ret
cmpsb
test
cmp
neg
enter
dec
leave
js
sub
fstp
sub
ds
loop
int3
ret
mov
push
mov
addr16
stc
in
xor
aad
jl
and
dec
out
xor
mulb
push
imull
xor
sbb
dec
xor
xlat
sub
mov
or
cwtl
movsl
or
mov
or
icebp
inc
cltd
sbb
negb
sbb
jge
movsl
pop
ss
sti
call
dec
mov
push
cmpsl
mov
out
mov
bound
insb
cmpsl
jnp
cmpsl
mov
push
in
dec
les
adc
cwtl
xchg
imul
mov
out
pop
xchg
mov
int3
xor
sub
mov
decl
mov
ja
ficoml
fildll
pushl
int3
sub
xchg
xor
stos
jo
lahf
pop
in
sbb
cmp
xchg
dec
das
jne
jns
rorb
not
mov
add
inc
movsb
xchg
lret
mov
dec
int3
daa
jns
stc
mov
js
and
add
in
push
xchg
jb
inc
lret
and
lcall
outsb
or
ds
mov
popa
jge
outsb
or
sub
sbb
or
insb
sbb
insl
inc
jb
stc
out
out
pop
pushf
mov
rorl
mov
lss
mov
std
lret
push
bound
lret
leave
ja
mov
lret
les
or
pop
loop
sti
popf
pop
call
fs
nop
pop
imul
mov
jno
mov
xchg
fsubp
fcomps
mov
outsb
popf
jae
xchg
mov
mov
ja
sbb
push
mov
fsubrs
fsts
push
outsb
inc
dec
dec
xchg
mov
add
dec
into
std
loop
mov
icebp
mov
lods
jne
sahf
and
or
and
std
hlt
mov
push
inc
bnd
aam
pushl
movsl
enter
push
dec
inc
enter
mov
or
lock
sti
test
out
sti
mov
pop
jp
cs
cld
imul
loop
cwtl
dec
xor
cmp
add
push
or
daa
aaa
shll
pop
jge
das
dec
mov
sub
mov
in
out
jp
push
movsl
or
jns
lret
bound
daa
and
icebp
sarl
movsl
out
cmp
sbb
repnz
loope
in
fxch
add
hlt
xor
nop
xor
cld
or
fsubr
mov
mov
leave
cmp
mov
xchg
xchg
imul
adc
add
scas
xchg
mov
ljmp
lea
nop
xchg
add
pop
push
jb
pop
mov
ds
gs
ret
mov
in
test
jle
cmp
cld
xchg
cs
xor
stc
dec
and
bound
call
or
adc
lock
aas
cli
fcoml
jnp
push
push
jle
psubq
jecxz,pt
mov
pushf
add
cmpsl
lahf
fcomps
sub
inc
mov
nop
das
push
add
dec
scas
scas
sbb
jle
dec
mov
jae
inc
mov
jle
repz
bound
out
push
ja
adcl
leave
sti
mov
mov
fstps
pop
lods
inc
jmp
in
ret
test
mov
jnp
out
insl
inc
in
jnp
imul
pop
inc
or
xchg
arpl
push
sbb
mov
cmp
outsb
addr16
lock
stc
cmpsb
aaa
outsl
inc
addr16
ljmp
shlb
in
sbbb
jmp
add
jl
pop
jno
andb
cld
repnz
dec
mov
sbb
mov
ret
sub
mov
add
sbb
shlb
sarb
icebp
pushf
mov
dec
out
push
push
rorl
pop
sub
andl
iret
mov
mov
fdivl
or
xor
lods
ljmp
jae
loop
xchg
jl
push
cmp
mov
call
cmp
push
cli
mov
fcoml
paddb
sbb
outsl
mov
das
loopne
cmpsl
iret
mov
cli
psrlq
inc
mov
mov
pop
aaa
ja
aad
inc
insl
xchg
scas
stc
data16
pop
leave
ja
jp
cmpb
cmpsb
pop
mov
aas
mov
inc
fcmovnbe
xchg
and
aad
lahf
pop
js
push
aam
popa
push
icebp
lods
mov
pusha
mull
mov
pop
jp
mov
jmp
movsl
iret
outsl
mov
orl
lret
xchg
fldt
lods
mov
fistpll
lds
movsl
cmpsl
ljmp
ss
xchg
outsl
test
cli
pop
dec
shll
jp
mov
dec
je
pop
stos
inc
push
popa
cmp
jge
hlt
sbb
sub
inc
jne
fs
imul
out
mov
in
sbb
sbb
jmp
out
mulb
rcl
mov
and
cli
out
adc
mov
jge
clc
lock
mov
jns
mov
stos
daa
rorl
cmpsl
push
xchg
js
call
mov
or
mov
push
mov
icebp
js
test
mov
mov
mov
dec
dec
loope
mov
adc
xor
ret
scas
popa
insb
xor
addr16
popa
fnsave
fs
xchg
jl
fisttpl
ret
jmp
stc
pop
loopne
movsl
jne
int
push
ret
mov
mov
mov
sbb
cli
add
sbb
jmp
and
ja
sbb
sbb
lods
pop
pushf
cwtl
int
iret
test
in
repz
jmp
pop
insl
mov
loopne
inc
imul
xor
cmc
or
or
xchg
nop
and
inc
fimuls
cmp
jl
jle
pop
test
or
js
cmp
adc
outsl
imul
pop
stos
mov
dec
aad
shll
lcall
mov
lock
ret
pop
lret
add
in
jecxz
scas
jae
int
adc
push
xor
movsl
in
push
mov
inc
xchg
cmp
mov
dec
sahf
jge
cld
stc
cmpsb
mov
push
popf
adc
repz
bswap
mov
inc
ficompl
sahf
call
hlt
dec
fisubl
lods
leave
xlat
add
lds
and
push
xchg
shlb
cmp
outsb
out
mov
push
and
push
inc
jb
and
cmpsb
sbb
adc
and
dec
push
cmp
sti
das
test
mov
and
jae
or
sub
sbb
sub
scas
fcoml
lods
jg
icebp
les
xchg
jmp
movsb
fstpt
out
negl
clc
jo,pt
xorl
lods
jae
or
imul
pop
xchg
xchg
or
xor
outsl
mov
adc
popf
sahf
icebp
sbb
jmp
push
aaa
arpl
mov
scas
jnp
xchg
and
mov
iret
out
add
fisttps
adc
lock
testb
and
inc
or
jp
xchg
pop
int
icebp
cli
mov
jbe
addb
test
pop
or
push
mov
jb
cmp
in
pop
jg
call
out
sub
loop
mov
pop
push
outsb
cmp
push
cwtl
sbb
pop
mov
sarb
mov
shl
sub
loop
es
sarl
mov
pop
mov
es
sbb
popf
push
cmp
dec
loopne
pop
cltd
das
mov
js
scas
jge
cmp
cmp
jmp
fnstsw
les
dec
and
push
dec
sti
cmp
adc
cmp
cmp
add
outsb
adc
sbb
dec
push
sti
fadds
testl
bswap
cmpsl
loopne
fnstenv
pushf
mov
jno
testb
bound
xchg
pop
loopne
or
jo
fsts
and
nop
insl
icebp
inc
xor
mov
outsb
inc
push
dec
bnd
loopne
cmp
mov
std
xchg
push
movsb
cmp
rcr
and
out
sub
cli
adc
xchg
movl
ja
jle
mov
lret
leave
pusha
cwtl
daa
sub
inc
or
cmp
mov
mov
nop
sbbb
out
jbe
push
jle
popa
movsl
sbb
push
pop
dec
scas
and
mov
pop
add
mov
stos
push
add
fxch
cmc
js
enter
jl
test
sti
out
jge
imul
ret
popa
insl
pop
fdiv
add
data16
fdivs
push
sbbl
xor
adc
mov
das
clc
shlb
fadd
shll
cmp
jecxz
cmp
dec
js
jle
stos
loope
xor
pushf
jle
dec
sub
stos
mov
shll
and
imul
notb
roll
aas
or
ror
jne
or
or
add
pop
mov
clc
xchg
jno
or
mov
cmp
or
lcall
cmp
icebp
lahf
test
mov
dec
inc
xor
cmpsl
add
scas
mov
int
shrb
adc
subb
mov
xor
adc
icebp
fsubl
mov
lea
mov
jnp
call
xchg
adc
mov
cmpsb
pop
enter
xchg
test
insb
mov
lods
dec
add
jnp
jg
jle
dec
dec
mov
pop
out
adc
mov
cli
insl
or
in
jo
mov
lods
and
mov
push
addb
mov
rcr
jl
pop
loopne
cmp
or
add
int
sub
movsb
ds
inc
xchg
out
in
popf
pushf
cmc
mov
out
ja
ret
lahf
push
mov
add
stos
aad
das
fs
imul
xchg
sub
stos
jl
hlt
jae
insb
adc
lods
mov
fwait
sub
loop
and
lahf
rclb
subl
mov
fistpl
scas
enter
sub
outsl
xor
jecxz
insb
sbbl
bound
add
push
shlb
pop
fwait
cwtl
ja
mov
loopne
dec
jge
test
loopne
lea
inc
int3
sti
sub
imul
les
mov
push
imul
mov
inc
pop
inc
shll
adc
mov
inc
shrb
imul
adc
push
fstl
cmc
shlb
add
js
data16
mov
or
dec
nop
test
add
push
das
xchg
fiaddl
xor
xor
rorl
jbe
cs
and
sbb
xor
push
shrb
sahf
jle
xor
popa
xchg
jo
dec
loop
popa
sbb
jno
xchg
sbb
sbb
dec
xchg
outsl
bound
add
pop
cmc
out
sub
repnz
fildl
loope
xchg
lock
adc
mov
fidivl
ja
xor
adc
out
pop
jle
or
clc
or
dec
cmpsl
dec
pop
sub
xor
inc
pop
aad
pop
cld
popa
pop
pusha
mov
mov
xchg
fistl
cwtl
repnz
or
mov
pushf
pop
adc
and
or
mov
cmp
xor
pop
mov
cmpsl
leave
arpl
mov
cmp
arpl
pop
pop
adc
inc
add
es
out
loop
mov
pop
leave
loop
add
sub
push
jmp
inc
mov
cmp
pop
mov
and
adc
mov
test
xchg
mov
pushf
ret
mov
jmp
mov
ret
in
inc
dec
sbb
mulb
mov
xor
es
testb
jo
mov
mov
popa
stos
sbb
dec
popf
into
fsubrl
xchg
cmp
cwtl
add
xor
aad
mov
les
inc
rcl
xchg
std
mov
into
or
sti
not
idivl
sti
and
popa
sub
shl
subb
movsb
sti
mov
inc
dec
cli
pushf
dec
ret
mov
push
aaa
dec
xchg
inc
lods
dec
fcmovnu
fwait
jno
and
gs
cld
mov
addr16
out
sahf
and
imul
mov
jnp
xchg
rcrb
popf
sub
mov
mov
aas
lods
daa
push
adc
mov
mov
outsl
data16
push
mov
pop
popa
jp
fnop
add
xchg
in
lcall
cwtl
les
xor
inc
std
inc
jl
sbb
out
out
and
or
popf
lds
xor
pop
sbb
shlb
in
push
cmp
adc
mov
dec
pop
or
lock
cmp
add
test
adc
mov
jl
aad
hlt
or
dec
pusha
stc
cltd
jecxz
pusha
mov
scas
fidivrs
mov
int3
and
loop
adc
out
adc
lods
fdiv
cmp
int3
cmc
jns
sbb
mov
arpl
pop
mov
es
mov
mov
push
push
or
or
inc
inc
orl
js
jge
jns
int3
inc
lods
shrb
mov
or
mov
adc
and
iret
or
xorl
sbb
jne
mov
or
mov
out
or
push
push
inc
sbb
ret
mov
cmp
push
stos
in
scas
xchg
and
cmp
xchg
sub
out
jl
or
jne
cmpsl
rcrl
enter
xchg
js
adc
cmp
xchg
stos
pushf
push
cmp
sbb
shll
daa
push
dec
sbb
jne
cmc
mov
std
mov
pop
or
cmp
int
push
xor
mov
out
pusha
add
and
lahf
dec
hlt
in
es
push
mov
jle
adc
pop
and
cmp
xor
enter
xlat
xchg
or
iret
testl
cmc
xchg
movsb
push
inc
aad
push
mov
aas
push
adc
jle
jae
mov
repz
stos
push
shlb
mov
sub
sub
mov
inc
dec
dec
jbe
xchg
js
subb
mov
call
pusha
sub
mov
push
jb
or
mov
mov
add
cmp
or
cs
lds
dec
in
shlb
jns
sbb
sarl
push
and
mov
adc
xor
cmpsl
cmp
jns
pop
jae
ficompl
inc
je
fsubrl
fsubl
inc
rcr
pusha
or
add
pop
into
push
divb
sub
xchg
xor
orl
movsl
lret
pop
pop
and
test
lods
cmp
dec
xchg
inc
fidivs
flds
push
test
or
lock
add
loop
jl
jmp
hlt
add
pop
cltd
sbb
out
lea
shl
and
ljmp
or
push
push
mov
scas
add
mov
popf
and
test
push
notb
push
shll
cli
or
jge
cmp
sub
sti
inc
inc
xchg
and
xor
icebp
lock
adc
add
jle
mov
mov
fcmovb
mov
add
cli
cmp
addr16
clc
jae
out
idiv
pop
pop
incl
sahf
lods
ja
xor
mov
sub
clc
mov
lret
or
xchg
dec
inc
lods
xchg
mov
inc
jns
inc
arpl
xchg
out
faddl
rolb
mov
cmp
imul
dec
int3
cmp
in
out
clc
std
push
subb
ljmp
dec
jnp
add
jmp
aam
shll
inc
mov
mov
lret
mov
pop
cmp
mov
jmp
cld
push
iret
cmp
fldl2t
add
fstl
lea
mov
jl
sti
xor
push
inc
pop
ljmp
dec
jp
mov
sahf
mov
adc
dec
mov
aaa
lods
mov
cmpsb
jb
dec
mov
cmpsb
mov
js
and
aam
cmpsb
imul
mov
js
fnstenv
xchg
cmpsl
fistps
add
daa
mov
std
aam
insl
sub
mov
push
mov
icebp
loope
out
arpl
es
popa
mov
fmuls
cmc
jnp
mov
orl
inc
sub
pop
push
cmp
lahf
pusha
inc
mov
out
pushf
sbb
push
ja
fldl
hlt
and
cs
movsb
les
or
push
dec
loope
aad
lds
cmp
daa
jl
daa
and
test
ds
xchg
cmp
jb
mov
into
cmp
out
add
shll
ljmp
and
daa
pop
add
ss
dec
and
xchg
lock
mov
pop
pushl
and
push
jb
jg
inc
jge
jge
gs
mov
fnstsw
xchg
btcl
pause
das
test
lea
aad
or
test
fstpl
lds
or
sbb
mov
out
mov
insb
or
lods
lods
insb
sub
jecxz
sub
inc
imul
mov
ljmp
sbb
fmul
call
scas
hlt
inc
push
mov
jb
push
mov
inc
inc
je
dec
pop
popf
xchg
mov
out
cmp
inc
xchg
xchg
or
inc
lock
push
pop
inc
lret
and
ret
pop
aad
jge
dec
push
xchg
pop
clc
fcmovnb
cmpsl
mov
outsl
sub
mov
push
push
lock
jne
jle
pop
lods
cltd
xorl
cmp
mov
icebp
movl
sub
shrb
jno
hlt
and
outsl
xor
pushf
stc
in
pop
mov
bound
jo
outsl
push
fistpl
mov
push
pop
pop
dec
sahf
xchg
cmp
clc
pushf
sti
sub
jl
cwtl
sub
out
andl
sahf
dec
fcmovb
lcall
lahf
dec
jae
pop
loope
mov
divl
not
scas
cmpsb
test
xor
adc
pop
inc
clc
jge
cmp
loopne
call
mov
mov
or
sbb
rol
jmp
mov
popa
seto
mov
jae
lea
and
lcall
xor
aam
stos
rcll
sub
jae
inc
jmp
es
int3
inc
add
movsl
loope,pn
gs
jbe
dec
lods
sbb
adc
push
pop
cmc
add
out
adc
lret
mov
push
scas
gs
jl
pusha
iret
push
ret
push
cli
mov
pop
add
pop
adc
xor
mov
xchg
push
cmp
scas
jo
pushf
push
cli
mov
aaa
repz
mov
lahf
hlt
aas
adc
stos
and
sbb
inc
pop
pop
pop
sbb
cmp
leave
pop
insl
sbb
push
lcall
loop
icebp
push
rol
jg
push
pop
decb
push
into
in
sti
pop
or
inc
mov
xlat
mov
in
mov
push
arpl
push
sti
mov
nop
push
cmp
fcmove
stos
pop
aad
mov
repz
outsb
addb
cli
scas
scas
pop
push
test
add
push
xchg
stos
pusha
sahf
rcr
and
mov
sbb
xchg
cmp
ljmp
xor
jl
adc
out
jecxz
xchg
fs
lret
sub
push
test
mov
jge
jmp
lea
sub
js
pop
stc
add
outsb
inc
ljmp
xor
jle
xor
sbb
mov
repnz
aas
xchg
xchg
adc
adc
sarb
aas
jo
jb
cli
lods
mov
popa
or
push
js
inc
lcall
jmp
sbbl
pusha
fcomi
pop
sahf
lcall
out
ljmp
jne
addr16
inc
cmc
fildl
xchg
adc
dec
int3
xor
jmp
fcoml
sub
push
fsubrs
mov
in
int
adc
lcall
lahf
faddl
fadd
sub
and
inc
in
aaa
jl
dec
into
scas
jo
ds
mov
jg
xchg
pop
pop
hlt
and
decl
shlb
sbbl
xchg
inc
xchg
rclb
in
insb
sbb
insb
outsl
ja
adc
push
and
sub
jmp
jno
fimuls
and
cld
sahf
test
and
in
test
sub
dec
cld
xchg
les
xor
out
ss
lods
jle
into
mov
jecxz
rolb
or
ja
mov
add
in
fbstp
inc
fwait
repz
bound
dec
mov
ljmp
inc
data16
aam
jae
ret
call
add
test
xor
out
fwait
lret
dec
out
aam
push
js
mov
push
dec
test
sbb
cli
cmp
lds
xor
fdiv
jb
loope
sti
jbe
and
aaa
les
in
jp
add
xchg
mov
add
pop
sbb
mov
push
sar
insb
push
mov
icebp
aas
fcomps
mov
push
cld
sub
fidivl
pop
sub
ss
lret
inc
lods
lret
lods
out
xchg
movsb
inc
cltd
xchg
xlat
adc
addr16
xchg
cmpb
out
out
jmp
ret
dec
and
mov
in
rcll
hlt
lods
sub
push
push
shlb
jg
sub
roll
shll
or
pop
xchg
in
jg
push
aas
jecxz
test
mov
push
lods
aad
pusha
jg
mov
mov
pop
iret
addl
jbe
jmp
js
mov
rcrl
adc
pop
inc
lcall
xor
fstpt
push
add
xchg
cmpsl
adc
add
sbb
inc
or
pop
ds
lcall
int3
test
mov
aaa
sbb
pop
cmp
push
mov
sub
jnp
loop
cs
pop
add
in
pop
push
xor
fwait
orb
jmp
mov
adcb
or
loope
popa
shll
mov
mov
popa
movsl
push
movsb
and
push
insl
mov
cmp
pop
aam
mov
stos
fucomip
fwait
pop
adc
dec
mov
aad
cltd
inc
xchg
xlat
ja
sahf
cmpsb
mov
lcall
push
jbe
imul
or
xchg
dec
cs
mov
inc
gs
jl
pop
in
pop
imulb
repz
fs
or
dec
and
mov
dec
ret
hlt
jo
mov
dec
fs
pusha
dec
xchg
jle
je
call
sbb
cwtl
lcall
jae
mov
fbstp
xchg
mov
mov
mov
outsb
xchg
dec
jge
jne
cmp
or
idiv
adcl
inc
loop
push
pushf
sbb
adc
ret
loop
sub
xchg
mov
test
into
jne
mov
loopne
adc
repz
jge
xchg
push
mov
andl
pop
aaa
dec
jb
lahf
push
jns
scas
jns
scas
lods
aaa
fldenv
sub
cmc
cwtl
in
or
xchg
mov
or
mov
lds
lea
mov
push
out
cmpb
clc
test
jmp
sahf
out
jmp
aad
lret
jo
xor
and
lds
or
adc
ret
mov
xor
pop
movsb
xchg
iret
sbb
sub
dec
adc
jmp
add
jbe
mov
push
dec
arpl
into
pushf
out
xchg
xor
lea
add
shl
ds
mov
clc
pop
push
inc
mov
pop
or
cld
sbb
movsl
cmpsb
adcb
cs
into
adc
shlb
add
jno
gs
inc
popa
ss
fsub
mov
sbb
es
add
jnp
xchg
push
aaa
in
imul
pop
push
in
sub
pop
in
and
fstl
cs
je
or
inc
movsl
pop
pop
icebp
adc
lds
mov
xorb
out
mov
cld
out
hlt
push
lret
inc
testb
cli
rcll
icebp
lds
push
sub
test
cmc
mov
out
push
xchg
push
pop
mov
icebp
xchg
xchg
pop
int
mov
jbe
xor
pop
or
pop
cmc
or
xchg
cmpsl
adcl
test
lods
and
pop
ja
inc
sub
cmc
lahf
stos
test
leave
or
sbb
xor
cmpsb
outsl
push
cmp
insb
daa
add
inc
call
mov
jge
cmp
call
fisubrl
inc
mov
jecxz
arpl
adc
push
sahf
mov
lret
stos
aas
call
cmp
xchg
addr16
dec
int3
mov
iret
daa
mov
addl
xor
lret
xor
add
bound
arpl
xorl
rcrl
adc
outsl
mov
push
mov
mov
ljmp
mov
inc
int3
mov
cmp
loopne
jg
mov
and
idivb
pop
jb
xchg
mov
dec
hlt
sarb
fsubs
mov
xlat
fsubr
cmc
jo
js
pop
or
mov
sahf
js
fcomps
outsl
ljmp
negl
pop
add
popa
in
divb
adc
hlt
aad
xor
mov
nop
xchg
jle
insb
push
mov
xchg
mov
aas
pusha
inc
or
adc
out
adc
xor
push
out
sub
jno
aaa
ret
jae
xor
shlb
push
pop
je
cmpsb
hlt
lds
add
add
aas
xchg
decb
mov
jmp
cmp
lods
jle
xor
cmp
xor
push
mov
mov
divl
pop
cmp
mov
fwait
cmp
jmp
insl
push
daa
push
pop
out
or
xchg
imul
xchg
sarb
mov
fcomi
and
mov
push
mov
inc
dec
fdivr
jle
data16
mov
subl
mov
sbb
enter
mov
inc
lods
jp
cmp
mov
jp
add
jmp
mov
clc
lcall
ss
insl
data16
ret
repnz
sbb
pop
push
gs
imulb
and
mov
scas
pop
cld
sub
and
add
or
dec
cmpsb
push
stos
and
addl
inc
loop
icebp
lahf
mov
shll
outsl
imul
imul
rclb
add
incl
cld
or
mov
mov
shll
das
inc
adc
sub
test
loop
ret
pop
xor
cltd
pop
inc
aas
fcoms
mov
gs
inc
push
jae
aas
fsubrs
adc
cld
lret
lahf
dec
mov
and
arpl
test
push
inc
adc
int3
push
cmp
jp
adc
rcr
nop
mov
xchg
jge
and
mov
and
mov
call
fbld
aaa
push
dec
icebp
jle
dec
push
mov
mov
and
iret
les
mov
scas
jmp
dec
orl
push
pop
or
ret
dec
icebp
xchg
je
cmp
int
fadds
xor
push
mov
cld
jp
shrb
insb
dec
mov
lret
jl
stos
pop
test
pushf
lret
mov
stc
lret
xor
jg
jp
dec
cmp
fstps
jae
arpl
push
aam
std
add
push
test
cli
out
scas
cld
bound
mov
sub
or
inc
in
and
or
lds
and
mov
orb
dec
and
sbb
leave
into
stos
cld
test
adc
bound
es
pop
in
xor
xchg
inc
fisubrl
and
test
dec
fwait
push
cmpsl
test
xor
imul
movsb
call
push
setno
gs
push
jae
sbb
aas
cwtl
mov
fiaddl
sahf
repz
dec
sbb
xchg
xor
ds
mov
add
arpl
lods
lret
jecxz
jle
mov
xchg
daa
add
popl
aam
fsubrl
or
das
popa
cmp
jmp
xchg
and
sub
je
jno
popf
std
aaa
imul
out
cmpsl
push
lahf
decl
leave
xor
mov
push
xchg
xchg
gs
aaa
jge
xor
lcall
leave
shr
dec
rcll
adc
scas
mov
imul
mov
pop
jge
loopne
xchg
pop
jnp
cs
call
in
daa
cs
ds
mov
aad
bound
push
cmpsb
cwtl
push
outsl
lock
nop
test
aad
lods
lea
aaa
push
fcoms
cmc
xchg
xchg
data16
mov
int3
mov
int
mov
flds
xchg
jne
sbb
push
les
inc
nop
mov
outsl
imull
pop
int3
xlat
daa
das
pop
mov
hlt
sub
stos
aas
jo
dec
repnz
lock
pop
ror
lahf
test
aaa
insl
into
shr
outsb
or
add
sbb
mov
adc
pushf
pmuludq
xchg
push
inc
adc
xor
mov
fcomi
aad
scas
push
movsb
dec
or
cmpsl
nop
lods
fiaddl
dec
push
lret
jle
loopne
loopne
rcl
adc
dec
jmp
mov
inc
adc
xchg
fdivr
xor
xchg
pop
rolb
jg
insb
push
mov
jo
sarl
in
js
adc
jne
push
jle
adc
cmpsb
shrl
movsb
jmp
inc
repz
fdivr
sbb
xchg
enter
lods
gs
fistps
in
call
add
mov
dec
cmp
inc
inc
popf
mov
pop
fildll
dec
enter
mov
hlt
sub
add
xorb
sbb
cmovg
sysret
jp
fldt
mov
mov
fwait
pop
icebp
jmp
lds
test
dec
clc
loopne
lahf
nop
repz
arpl
push
jb
push
mov
insb
add
cmp
insl
stos
xor
sub
fstpt
subl
pop
sub
mov
mov
lret
mov
jecxz
into
fwait
inc
pushf
paddw
push
gs
fwait
dec
xor
mov
subb
popf
movsb
mov
xor
stos
sub
inc
ljmp
ds
pop
std
adc
rclb
fsubrs
lods
movl
lret
ss
or
and
addr16
call
andb
sub
push
dec
xchg
clc
sbb
jno
fwait
dec
mov
mov
xchg
cli
bsr
std
insl
jle
fiaddl
and
std
xor
cmpsb
push
lcall
shrb
mov
mov
dec
rcrb
pushf
call
incb
push
repnz
xor
or
xchg
sub
mov
inc
lret
xor
push
faddl
cltd
add
mov
xchg
mov
data16
fcmovb
mov
rcr
mov
pop
lcall
imul
jne
fwait
pop
or
push
iret
les
aam
ljmp
shlb
clc
fsubl
pop
int
and
xor
add
mov
add
cs
iret
sti
mov
arpl
jle
xchg
push
mov
js
popf
js
mov
or
sub
pop
ret
shr
mov
and
setb
mov
add
loop
dec
sbb
adcb
nop
push
pusha
jno
scas
and
jb
pop
sti
cmp
insb
std
ja
push
cmpsb
sub
sahf
add
pop
and
or
dec
and
sbb
inc
cmp
idivl
mov
mov
int
outsl
mov
push
loop
push
lret
stos
dec
push
sbbb
xchg
cli
pushl
jp
mov
rol
jbe
dec
inc
repnz
out
mov
sub
xchg
cmc
jmp
cld
lahf
adc
pop
inc
pop
xlat
mov
hlt
push
jo
hlt
lock
mov
pop
test
call
cld
add
sub
and
cmp
sub
lods
cmp
jbe
pop
ficompl
jbe
xlat
addr16
lds
jno
je
mov
pop
fistl
enter
sti
mov
and
mov
xchg
std
sbb
stc
mov
mov
lea
xchg
std
push
push
mov
push
pop
xor
xchg
cmp
mov
outsl
inc
or
int
sub
lret
xchg
ret
dec
inc
fmulp
call
lods
add
movsb
pop
sbb
pop
sti
outsb
inc
adc
dec
xchg
add
movsb
pushf
adc
adc
pop
adcb
loop
imul
inc
mov
push
mov
outsl
dec
in
out
pop
mov
jae
imul
movsl
jns
in
mov
jns
push
and
in
cmpsl
jnp
in
jae
add
xchg
js
sahf
push
pop
dec
das
movsb
into
mov
cmp
scas
mov
sbb
fsts
lods
jge
les
cmp
mov
add
sbb
mov
fidivrl
push
jns
inc
dec
mov
xor
nop
push
ja
xlat
mov
jl
lret
in
fnsave
sti
add
loope
jo
cmp
aas
imul
pop
ret
dec
xchg
cmpsb
pop
test
in
in
fstl
sub
cltd
movsb
cmc
inc
int
push
inc
push
aad
mov
inc
pop
jbe
scas
test
fsubrl
xor
and
pop
test
mov
sbb
das
adc
add
fsubrl
mov
sub
bound
fsub
xor
fdivl
movsb
nop
dec
xchg
push
mov
push
jbe
sarl
mov
js
adc
arpl
pop
cmp
fistps
mov
les
cmp
xor
dec
mov
cmp
xlat
movsl
test
in
clc
insl
pop
xchg
xchg
js
addr16
mov
add
mov
in
push
add
out
rol
or
or
xor
pop
push
imul
jge
and
test
mov
or
jl
loope
mov
jns
sub
mov
imul
repnz
mov
jp
or
jns
mov
sub
xchg
and
add
fcmovb
fisubrs
dec
popf
and
cmp
in
lods
mov
pop
cmp
mov
jb
imul
pusha
push
test
lret
cs
pop
xor
movsl
or
xchg
adc
ljmp
dec
pushf
sub
or
or
cmp
popf
data16
inc
and
movsb
jmp
icebp
stc
fisubs
inc
das
push
add
pop
pop
xchg
xlat
lds
jbe
incl
inc
jmp
add
ss
stos
and
dec
fdivs
insb
lahf
jle
cmovp
insl
bound
xchg
pop
daa
jb
movsl
arpl
rclb
dec
lods
lods
push
popf
xor
cmp
movsb
or
in
pusha
push
push
scas
lods
xchg
and
mov
lret
in
xor
fwait
xchg
or
jecxz
mov
cli
lcall
stc
adc
insb
jae
clc
push
lea
fsubrl
mov
sub
sub
push
xlat
xchg
xchg
xchg
cltd
test
cmpsl
sti
inc
add
iret
xchg
in
jae
sbbl
fucomi
outsb
fimull
xchg
sarb
std
test
ret
mov
add
xlat
mov
push
sub
mov
xchg
cmpsl
cmp
and
pop
push
mov
cld
lea
subb
xchg
loop
adc
ja
inc
jg
mov
fisttpll
mov
aaa
xchg
rorl
pop
scas
fisubrs
push
movsb
daa
test
and
fs
add
in
sub
xchg
sbb
psubw
cltd
mov
mov
popa
insl
pop
popl
cwtl
and
stos
int3
test
notl
pop
fldl
shrb
popa
mov
adc
mov
int3
and
mov
testb
push
fs
push
mov
fs
movsb
hlt
mov
movsl
jmp
roll
out
in
scas
aam
sub
adc
ret
sqrtps
sti
jmp
imul
dec
lods
pushl
push
pop
xchg
xchg
movsb
xchg
mov
xchg
push
out
pop
xchg
add
test
popa
decl
xor
jnp
xor
mov
push
cmc
lcall
or
jne
sub
pop
in
ljmp
xchg
cmp
popa
popf
mov
cmpl
pushf
insl
pushf
in
pop
jl
pop
cmpsb
xor
aaa
insl
fcmovnbe
xchg
mov
daa
enter
fldcw
and
leave
xchg
fbstp
outsb
jg
mov
out
push
ds
ret
mov
dec
in
lea
out
enter
inc
or
fldl
mov
in
cmp
adc
popf
int3
shrl
ja
xchg
pop
rorl
fstpl
push
sbb
jb
out
pop
outsb
dec
mov
scas
movsl
out
bound
fsubs
xchg
cmp
or
jae
add
addl
jp
inc
push
xchg
mov
mov
dec
ss
jl
xchg
call
popa
adc
cltd
lahf
out
outsl
leave
cmc
ljmp
fnsave
sahf
test
xor
pop
xor
xor
mov
outsb
xor
stos
gs
dec
push
hlt
ret
adc
push
aas
pushf
dec
adc
mov
mov
sbb
out
fsubl
jnp
adc
cmc
mov
mov
in
sbb
mov
leave
xchg
mov
pop
fsubl
xor
lock
jbe
subl
or
sub
or
stos
lea
mov
enter
sub
push
cmp
add
mov
xchg
cmp
jecxz
ficoms
dec
sub
subb
and
dec
push
bound
dec
mov
and
sbbl
xchg
jbe
fs
mov
out
insl
rolb
fcom
dec
sbb
sub
or
cmpsl
jmp
mov
sbb
and
ss
mov
and
pop
stos
cmpsb
sbb
shl
push
data16
imul
test
push
fsts
pop
push
lods
pop
int
adc
bound
xchg
shr
adc
pop
out
stc
xchg
js
into
movsl
cmp
out
ja
scas
cli
hlt
cmp
outsl
inc
sarl
imul
mov
jecxz
dec
mov
or
xor
shl
dec
mov
das
xor
dec
std
cld
aas
fmull
xchg
cmp
pop
shrb
adc
jge
sarb
pop
outsl
mov
jecxz
dec
fisttpll
mov
leave
jmp
and
std
iret
iret
jl
test
jne
lret
movaps
inc
sbb
les
mov
xlat
test
into
je
or
mov
adc
add
test
test
lds
fs
out
icebp
loopne
shlb
sbb
cmp
xor
popf
pop
and
fwait
enter
xor
cwtl
cs
and
pop
rcrb
add
cld
jne
insb
sti
or
jmp
loopne
jp
mov
cmp
arpl
ret
ss
out
or
jp
mov
lock
jmp
push
pop
mov
xchg
push
xorl
imul
cmc
testl
cld
jne
xlat
pop
je
flds
or
inc
repnz
inc
mov
aad
shrl
test
data16
add
mov
xor
pop
mov
sub
add
stos
fbstp
aad
dec
sub
jecxz
adc
inc
push
or
adc
out
es
movsl
pusha
mov
jmp
adc
adcl
dec
out
test
and
cmc
stc
jns
stc
jp
dec
jl
lds
inc
xchg
mov
arpl
add
mov
jl
pop
aam
sbb
mov
sbb
out
inc
fsubrs
jbe
out
xchg
out
addl
iret
adcl
stc
inc
and
sub
rolb
push
pop
aam
sbb
jb
xor
push
data16
mov
lods
int3
xchg
xor
cmpsb
xor
xor
dec
push
roll
je
xchg
ljmp
test
popa
outsl
insb
ret
xchg
mov
push
sbb
ret
stos
fisttps
gs
jp
sub
ret
mov
aas
cmp
mov
add
hlt
pusha
and
idivb
es
iret
push
push
rcrl
daa
pop
jno
fs
test
xor
adc
dec
inc
xchg
insl
fidivl
cmpsb
jle
pop
push
jbe
or
mov
mov
mov
negb
les
jbe
mov
and
movsb
sub
push
push
mov
push
xor
in
ss
pop
mov
and
xor
sysenter
xchg
shll
loope
jl
aam
xor
xor
lret
xor
mov
jle
mov
push
jg
lea
sbb
add
jle
lret
adc
rol
sahf
inc
addr16
xchg
sub
dec
adc
dec
jb
test
jge
xchg
into
mov
jecxz
test
sti
pop
das
fistpll
into
call
inc
mov
xchg
rcrl
mov
xorb
or
imul
sar
dec
mov
pop
add
cmpsl
push
mov
addr16
xlat
arpl
in
mov
lret
movlps
xor
sub
jle
daa
js
fcmovne
xor
xchg
outsl
out
inc
js
sbb
pop
or
pop
lods
push
ja
xor
enter
or
sub
push
in
mov
dec
das
xchg
arpl
add
adc
mov
aad
cmp
mov
icebp
and
inc
mov
push
leave
lock
cli
sbb
dec
xor
cmc
subb
inc
jmp
aam
sti
pop
imul
jecxz
pop
cmp
pushf
aas
or
dec
or
in
mov
movsb
add
xor
adc
adc
mov
and
mov
xchg
jns
mov
orb
inc
sub
orb
ja
sti
outsb
sbb
rclb
add
out
dec
dec
xchg
ror
inc
xchg
fdivrl
mov
add
sub
pop
adc
sub
push
jmp
sbb
fildl
stos
and
jns
lods
gs
jp
inc
in
jle
gs
inc
sbb
sub
outsl
pop
dec
loope
daa
imul
bnd
ss
out
xlat
push
pop
mov
xor
add
mov
jo
jmp
aad
sub
mov
fcmove
repnz
mov
xor
push
mov
hlt
xchg
add
out
movsb
loope
fucomi
add
divb
adcl
sbbl
sub
pusha
mov
mov
jno
ret
mov
xchg
xor
arpl
insb
sub
div
dec
out
jnp
and
mov
and
stos
xchg
clc
add
xchg
sub
mov
icebp
ja
cld
stos
or
divl
and
enter
popf
call
cld
iret
gs
jns
jne
outsl
mov
gs
and
in
bound
inc
sbb
gs
test
mov
out
add
outsb
mov
lea
push
mov
pop
fbld
test
loope
dec
jmp
test
test
cmpsb
das
xor
cmovbe
shl
sub
push
in
mov
ret
xchg
orb
jp
shlb
jnp
jge
mov
out
push
aam
outsb
mov
out
faddp
rcrb
jle
xchg
mov
and
andb
pop
popf
into
jmp
sub
inc
cmp
lret
dec
pushf
lods
cmpsb
ds
data16
dec
jnp
pop
les
xchg
sbb
fiaddl
xchg
adc
mov
mov
aas
ret
jo
jle
inc
mov
xchg
aad
stc
dec
or
push
idiv
popa
mov
push
lods
fnstcw
xchg
repz
rsqrtps
push
mov
in
sbb
int
in
cwtl
sbb
or
test
mov
jg
push
sahf
push
fwait
loop
sti
test
xchg
inc
fstl
cs
mov
lock
popf
xor
stc
addr16
xor
inc
sub
cmp
push
cmc
mov
push
test
into
movsl
imul
daa
testl
push
pop
and
sbb
mov
push
cld
jmp
mov
ret
adc
xchg
data16
fidivrl
xor
mov
sbb
mov
inc
pop
movsb
sbb
negb
js
sub
outsl
mov
int3
mov
inc
pop
shrb
shlb
adc
pushf
fwait
insb
bswap
inc
pop
sub
pop
mov
test
mov
gs
sbb
lea
pop
imul
idiv
scas
push
and
gs
dec
in
mov
push
jmp
or
xchg
ror
imul
test
popl
fwait
add
imul
ds
jne
in
and
and
fmul
into
cltd
cmp
xchg
leave
sti
mov
imul
orl
fsub
ret
nop
xor
ss
mov
outsb
daa
es
and
pop
test
in
add
xchg
mov
mov
pop
push
repz
out
xlat
pop
mov
nop
in
rorl
sub
xchg
mov
out
adc
int
int
fstpl
xor
dec
pop
lods
repnz
jbe
popa
pop
dec
push
pshufw
mov
adc
jge
xor
into
enter
into
xor
ficoms
inc
scas
and
sarl
pop
test
push
or
adc
mov
mov
xor
cld
nop
insl
mov
add
outsb
mov
stc
cltd
loopne
movsl
test
sub
loopne
xlat
mov
mov
mov
cmp
insb
fisubs
jecxz
js
jbe
repz
cmc
aaa
mov
test
leave
push
and
lock
or
js
icebp
arpl
loopne
roll
sub
mov
add
mov
dec
int
cwtl
loope
loope
push
rorb
mov
xchg
icebp
and
and
inc
mov
mov
stos
repz
aaa
mov
in
lret
or
push
cmc
jg
or
add
addr16
loopne
xor
inc
int
jne
xchg
adc
mov
mov
fidivl
dec
inc
xchg
in
fldt
pop
cmp
xor
stc
ret
cmp
jmp
cmp
pop
and
outsb
inc
shr
test
fidivs
pusha
mov
push
sub
cmp
xchg
pop
sbb
mov
les
repz
jne
pop
enter
add
jnp
js
cmc
inc
es
popa
mov
cwtl
jbe
add
cltd
mov
insl
dec
sub
or
push
popa
loop
lds
fmull
fwait
movsb
mov
push
or
mov
loope
pop
xchg
pop
xchg
insb
fisubrs
pop
adc
inc
push
shr
jb
gs
jnp
arpl
mov
sti
fs
add
mov
gs
sub
ds
lock
lahf
push
dec
dec
pop
mov
sbb
movsl
pop
mov
and
sub
cwtl
imul
shrb
mov
inc
or
mov
sahf
and
mov
mov
adc
dec
fisttpll
mov
fadds
fildl
out
cmp
lods
aam
icebp
mov
xorb
mov
xor
rcl
inc
dec
sbb
cmp
inc
je
scas
scas
aam
push
addr16
sub
mov
mov
les
ds
movsl
repnz
lcall
maskmovq
mov
dec
lcall
cmp
js
sbb
push
cmp
xchg
mov
xchg
mov
cltd
inc
jmp
out
pop
pop
cli
xchg
jmp
aad
mov
mov
mov
jecxz
fsubl
sbb
inc
jae
sbbl
and
mov
dec
mov
sahf
dec
cmp
cmpsb
cmc
push
fdivs
mov
push
pop
fbld
lods
mov
pop
lea
hlt
push
movsl
adc
and
sub
mov
fcoml
jecxz
mov
adc
adc
inc
mov
and
inc
pop
fistpll
addb
std
imul
cmp
loopne
hlt
andb
jmp
inc
shlb
xor
aad
mov
inc
and
aad
xor
in
in
mov
xlat
add
lahf
pop
cmc
rcll
dec
push
inc
aaa
dec
data16
xchg
cmp
xor
adc
jo
or
inc
xchg
cmp
loop
jmp
test
int3
lea
or
sub
or
sub
or
cmp
outsb
je
nop
ficoms
mov
pop
push
clc
adc
sbb
sub
push
test
es
fildl
cmc
mov
xchg
mov
mov
imul
jg
xor
mov
xor
push
mov
mov
outsl
aam
outsb
or
into
and
lods
mov
add
popa
lock
xchg
pushf
adc
test
or
sbb
lods
mov
loope
std
std
in
fwait
adc
jmp
mov
test
dec
mov
mov
fs
cmp
cmpsw
adc
out
push
push
mov
mov
add
mov
adc
icebp
sti
fbld
cltd
dec
sub
add
mov
stos
rcrb
or
into
fildll
dec
and
xor
jmp
daa
dec
xor
in
pop
mov
aam
mov
inc
inc
or
xor
xor
enter
mov
clc
push
in
push
pop
mov
sar
push
cmp
adc
addr16
rcll
cs
jmp
insb
jecxz
add
push
fiaddl
add
faddl
outsl
sub
xor
in
mov
std
sarl
gs
add
insb
mov
dec
push
push
lea
lods
add
mov
mov
std
scas
adc
dec
xor
data16
cmp
in
insl
ss
mov
pop
sbb
mov
stos
arpl
je
mov
mov
cli
pop
mov
pop
ja
dec
test
cli
push
int3
in
jb
cmp
scas
sar
scas
xor
jbe
ds
outsb
loop
jmp
dec
jno
pop
ret
fldcw
div
rcll
push
arpl
scas
jecxz
idiv
enter
and
cmp
xlat
jl
and
jmp
adc
out
aam
lea
dec
and
adc
test
loopne
imul
es
fsubs
mov
xchg
pop
sahf
xchg
je
sub
cs
in
pop
add
mov
mov
lock
sbb
testb
sub
js
mov
shll
add
cmp
std
and
jb
jno
mov
test
or
arpl
fbld
xchg
mov
xor
jl
daa
mov
inc
xchg
push
call
jl
xchg
sub
std
and
ds
cmp
mov
test
adc
and
dec
mov
push
std
lahf
repz
pop
or
or
adc
pop
and
notb
fwait
mov
sbb
lds
xlat
aas
or
pop
outsl
mov
scas
out
jp
test
pop
mov
je
jnp
test
xchg
inc
mov
lahf
fldenv
dec
stc
mov
rclb
aam
sub
int3
jb
add
fadd
sbb
xchg
ja
cwtl
push
and
lds
sbb
or
xor
sub
cld
lcall
mov
out
sbb
xor
mov
jecxz
push
adc
pop
mov
loope
pushf
jp
mov
push
add
inc
or
adc
mov
xchg
inc
cwtl
and
pusha
pop
xor
pop
lods
sbb
ret
mov
mov
lock
xchg
mov
lahf
jmp
out
adc
les
xor
inc
daa
xchg
cmpb
in
or
sub
adc
pop
dec
lret
push
pop
mov
std
add
jno
ss
jns
sub
imul
aad
mov
fs
pusha
cmp
inc
fistl
popf
push
mov
aaa
sub
inc
jg
dec
sahf
pop
mov
jge
outsl
sti
mov
jecxz
pop
mov
push
xchg
pop
ljmp
fcomip
bnd
mov
adcl
fisubrs
xorb
or
push
sub
mov
xor
stos
daa
fwait
cmpsl
loopne
adc
scas
jp
jl
daa
insb
pusha
inc
mov
adc
push
lods
rolb
adc
jp
jmp
mov
inc
icebp
test
or
notb
xchg
fwait
inc
jp
xor
scas
fidivl
adc
xlat
movsl
shll
out
inc
add
test
gs
mov
addr16
mov
loopew
inc
inc
or
fisttps
into
or
js
les
jns
push
add
fistpll
scas
add
cltd
adc
in
movsb
mov
cmp
int3
lea
outsb
cmp
lods
jl
hlt
cmp
popf
jecxz
xor
xor
jns
sarl
arpl
mov
adc
sub
pop
or
andb
push
jmp
lods
mov
jno
fdivs
jmp
xchg
jo
fisttps
aas
xchg
push
xchg
mov
ret
pop
insl
cltd
aaa
movsl
dec
jge
pusha
jmp
in
jbe
les
ffreep
push
mov
int3
sbb
inc
push
lea
xchg
outsb
and
sbb
xor
rolb
fs
icebp
arpl
jns
adc
xchg
cmp
push
inc
pusha
or
test
fiaddl
cld
out
cmp
movsl
xchg
or
sbb
push
lock
repnz
dec
push
in
jl
sti
xor
dec
jp
mov
loop
fildll
sub
daa
adc
idivb
jne
aam
jo
mov
jp
repnz
pop
ja
imul
inc
cwtl
cmp
aam
std
lods
xchg
push
in
mov
flds
sub
jp
add
pop
cmp
sahf
fdivr
stos
std
int3
loope
add
mov
js
push
rcrb
mov
mov
jg
shlb
adc
pushf
adc
jecxz
fdivl
test
xor
outsl
cmp
jp
push
fildll
or
and
pop
mov
adc
adc
xor
loope
into
pop
mov
push
mov
dec
xchg
xchg
jbe
cmp
mov
ret
popf
movl
push
movsb
mov
rolb
cmpsl
add
in
mov
sub
adc
mov
xor
dec
mov
xchg
stc
adc
dec
div
popa
addr16
lcall
and
jbe
jg
cs
xchg
dec
or
push
ficomps
outsl
enter
btr
in
lcall
mov
or
dec
xchg
data16
popa
in
cmp
rorl
adcb
mov
out
loope
jp
fsts
fstp
bound
sub
leave
repz
jne
mov
pop
xchg
sti
dec
push
xor
daa
add
loopne
std
mov
scas
std
ja
adc
test
fimull
call
adc
inc
mov
lds
inc
stc
fs
fsubs
mov
push
andl
rcll
push
in
aas
jge
cmp
xor
jmp
inc
push
or
movsl
in
and
dec
push
push
sub
in
add
cmp
rcrb
jg
adcl
fadd
lods
sub
jnp
popa
jp
mov
sbb
xchg
pop
push
mov
ljmp
ljmp
cmc
mov
xchg
dec
fbstp
pop
lds
hlt
cld
lea
jle
mov
adc
imulb
pop
imul
dec
adc
sub
cmp
gs
push
and
jmp
jo
mov
dec
dec
imul
or
in
mov
insl
sbb
pop
cltd
cmpb
fmull
sub
negl
and
sbb
jg
mov
and
add
xchg
in
popf
xchg
mov
xchg
jl
mov
or
jae
mov
adc
dec
sub
scas
adc
cmp
stos
or
cmc
ret
mov
xlat
sub
lods
fdivrs
sbb
cmp
lret
addr16
pop
push
push
outsl
cmp
mov
jnp
sar
cld
sub
push
mulb
fcompl
dec
fwait
cmp
test
push
rcl
jle
adc
and
jg
lret
pusha
sub
mov
xor
adc
push
push
adc
cltd
sbb
xor
xor
sbb
loopne
push
cld
popa
sub
xor
pop
lock
ss
and
mov
push
xor
mov
adc
pop
and
loopne
xchg
fimuls
mov
add
andb
loope
mov
xchg
in
addl
aad
sub
pop
xor
xor
pop
pop
sti
push
shll
idiv
movsl
sti
in
xorl
xor
lea
fwait
push
or
mov
jmp
adc
rcr
aaa
into
outsb
push
pop
mov
nop
and
fwait
or
cmp
cwtl
insl
adc
leave
rcll
inc
aam
adc
adc
loope
dec
test
popf
sub
push
daa
push
push
mov
into
cmovb
cmpsb
dec
fdivl
jp
or
and
push
mov
cltd
call
inc
and
push
loope
stc
addl
xor
jo
xchg
jo
mov
xor
unpcklps
push
sub
mov
xlat
out
jmp
and
jae
push
hlt
jle
sar
sbb
sbb
xor
jo
and
mov
dec
push
subl
xor
mov
xchg
dec
cwtl
outsl
and
icebp
sbb
setnp
aaa
mov
jge
lret
add
sbb
in
fisubl
push
pop
add
adc
xchg
sbb
lret
pusha
cmp
bound
add
sbb
shr
pop
pop
pusha
add
or
mov
push
push
sbb
sbb
out
out
ds
addr16
xchg
popl
xor
or
adcl
insl
push
mov
cld
jns
enter
idivb
test
or
fdivp
xchg
mov
xchg
call
inc
cmp
mov
mov
pop
fcomps
into
dec
gs
sub
scas
nop
cmc
jno
xchg
xor
repz
xlat
mov
movsb
cmc
gs
mov
cli
mov
jge
inc
outsl
mov
sbb
mov
in
fmull
pusha
cmp
loope
xchg
leave
aad
daa
sub
mov
or
xchg
imul
bound
add
xchg
nop
mov
lret
scas
or
mov
push
xor
xor
push
cltd
mov
mov
sbb
out
jno
mov
mov
movsb
push
clc
ret
les
add
cmpsb
xchg
jne
jmp
imul
cs
sarl
sbb
sbb
fistpl
sbb
hlt
pusha
and
stos
outsl
inc
adc
call
test
cmpsl
test
lret
sub
cli
scas
pop
pop
or
add
jmp
fiadds
loope
mov
or
pop
nop
aad
mov
stc
cwtl
pop
je
ja
cmpsl
ss
push
cwtl
jno
pop
cwtl
aam
cli
jo
es
lods
mov
push
test
lcall
aaa
mov
pushf
xchg
ret
fwait
vmovsldup
rolb
cmp
idivb
ret
dec
jl
add
ret
jo
es
test
out
push
cmpsb
icebp
outsb
jae
hlt
nop
scas
movsl
cltd
and
fisubrl
lods
ret
cmpsb
xchg
je
pop
mov
cmc
cmp
mov
inc
orb
imul
in
add
cmp
inc
test
pcmpeqb
andl
out
into
xchg
outsb
imul
divl
and
pop
mov
fwait
cld
loop
xchg
lods
cmp
les
ss
push
or
lret
out
stc
jbe
jmp
sbb
sub
inc
js
int
xor
aaa
scas
xor
lods
dec
mov
sub
into
rclb
sahf
mov
mov
xchg
sub
sbb
or
aas
or
pushl
enter
mov
inc
jno
xor
mov
ret
mov
push
lret
fdivp
jl
adc
sub
aas
jge
lret
stc
aad
jns
in
loop
xor
lock
sbb
sti
mov
sti
xchg
mov
and
or
scas
rcrb
mov
mov
jmp
mov
ljmp
xorb
mov
jae
push
data16
fisttps
sub
sbb
daa
cmp
fwait
jo
out
testb
push
and
in
pop
shll
ret
cld
into
enter
xchg
aam
dec
add
bound
mov
pop
ror
jb
dec
and
in
inc
adc
out
aaa
dec
jp
aam
adc
cmp
shll
xchg
xor
fdivl
mov
faddl
xchg
add
imul
mov
sahf
test
or
scas
std
cwtl
adc
fistpll
sub
addr16
xor
mov
xor
sub
adc
inc
stc
mov
jno
and
mov
jnp
dec
push
loope
in
xor
pmaxsw
jge
or
out
dec
cli
mov
test
std
cs
filds
mov
jno
in
mov
in
or
inc
lods
cmp
in
divl
loopne
push
sub
inc
popa
pop
pop
sub
loope
lret
sbb
idivb
adc
sbb
out
imul
push
sahf
pop
cld
sub
jne
jo
pop
cltd
je
push
push
or
pop
icebp
inc
mov
clc
mov
push
and
cmc
loop
push
mov
mov
push
popf
inc
js
das
push
hlt
idivl
aad
fs
sbb
in
in
aam
cli
inc
push
xor
or
cmp
mov
cmp
mov
xor
add
and
insl
push
repz
test
ret
jbe
into
aaa
imull
mov
mov
xor
pop
aaa
and
cmpsb
mov
lret
jo
add
or
add
sbb
jne
mov
add
sub
mov
xchg
pusha
fsubr
xchg
lahf
inc
pop
push
out
sub
and
xchg
and
fldenv
mov
pushf
and
jmp
cmp
add
int
xor
and
leave
mov
inc
arpl
mov
jle
adc
scas
sbb
nop
loope
mov
icebp
lea
mov
into
mov
dec
lahf
mov
dec
fstps
es
daa
xor
push
cmc
pusha
mov
rol
mov
sub
add
mov
push
pop
adc
adc
cmp
icebp
int
out
push
enter
lea
repnz
jmp
xchg
insl
push
pop
sub
xchg
sbb
xchg
les
pop
ret
inc
test
xlat
lret
test
insb
cmp
sub
test
loopne
out
and
sub
sub
pushf
pop
fs
add
inc
jmp
or
xorb
jne
shrb
subl
cltd
in
sub
fwait
data16
push
call
cmp
pop
jnp
cmpsl
lods
stos
inc
pop
or
mov
cmp
xor
aam
pop
test
loopne
cmpsb
shll
je
dec
out
and
ja
jo
mov
adc
xchg
push
inc
ljmp
push
jbe
push
push
adc
popa
std
es
in
jmp
xor
stos
sbb
stc
or
stos
insl
rorl
mov
pusha
dec
jns
mov
push
arpl
mov
cmp
xchg
add
loopne
adc
int3
cmpsl
or
add
sbb
ds
add
push
lea
add
inc
int3
icebp
push
or
inc
cs
xor
fidivrl
insb
mov
pop
lahf
fstpl
xor
mov
jecxz
xor
add
mov
xor
loop
subb
and
mov
jg
std
in
and
xchg
leave
lds
test
jp
popf
ljmp
repz
mov
sbb
xor
fsubrs
xlat
icebp
mov
aad
xchg
jle
adc
dec
pop
aam
inc
inc
pop
je
mov
push
stos
sti
cmpsb
leave
fiaddl
add
mov
jns
pop
ljmp
mov
out
push
arpl
mov
mov
pop
fsubl
cmc
pop
lcall
lret
shlb
pop
sub
ret
push
dec
sub
shl
cmc
and
out
in
scas
mov
jne
mull
pop
sbbb
imul
aaa
inc
push
insb
cs
repz
add
dec
pop
enter
pop
test
adc
inc
sub
shrl
fs
in
mov
mov
xchg
mov
mov
sbb
push
jmp
lds
mov
gs
addr16
or
mov
xor
bnd
repz
and
scas
call
dec
mov
ror
jmp
sarb
sbb
mov
daa
mov
dec
cmp
or
rcrb
shll
inc
adc
int3
cmp
pop
movb
sti
push
jge
lock
pushf
xchg
cmc
xchg
cmp
fsts
mov
or
imul
mov
inc
mov
stos
dec
movsb
fwait
jns
in
lcall
cmc
mov
mov
je
std
aas
lods
pop
sub
xchg
out
dec
cld
dec
dec
popa
adc
jl
insb
pop
or
adc
xor
sbb
jmp
sbb
sbb
mov
add
fcoml
inc
insb
jmp
lahf
inc
pop
jmp
outsl
loope
pop
and
xchg
test
push
jo
mov
jno
divb
mov
mov
cwtl
scas
test
dec
mov
sub
add
call
jecxz
bnd
rcrb
mov
xchg
xchg
daa
mov
or
jl
push
fisubrs
js
aad
jp
lea
xchg
xchg
movsb
pushf
jecxz
or
mov
and
sbb
nop
mov
sub
std
mov
xor
pusha
fildll
dec
mov
adc
outsb
mov
in
lea
and
in
lret
xor
movsb
fistl
add
loop
or
cmp
ret
add
jns
sbb
mov
mov
jp
test
fiadds
xchg
clc
mov
and
xor
ret
inc
pusha
std
pop
or
hlt
mov
xchg
popf
jb
aam
inc
sbb
fnstsw
xchg
ja
mov
in
lcall
xchg
movsl
sub
push
ljmp
pop
adc
add
int3
push
sub
cld
clc
sahf
cmpsb
shr
es
adc
sbbb
sbb
xchg
cmp
cmp
sbb
and
cmpsl
adc
sub
push
inc
in
dec
inc
mov
sbb
inc
jg
sub
inc
push
jp
lock
dec
fcomip
cwtl
sarb
or
lret
and
mov
lods
call
cmpsb
ret
pushf
push
cwtl
sti
pusha
mov
jle,pt
mov
mov
jbe
dec
fidivrs
lcall
jb
push
push
push
addr16
mov
stos
std
push
inc
fs
jl
nop
es
mov
pop
cmpl
nopl
sub
and
cmp
or
sub
mov
adc
aam
lcall
or
jae
xchg
sub
pop
mov
testb
inc
test
aam
jno
or
add
mov
not
inc
jno
int
ret
rcrl
inc
nop
push
popf
gs
and
ret
push
or
stc
ret
imul
in
lea
mov
notl
lcall
scas
rclb
jo
adc
mov
js
outsl
pop
scas
popa
pop
dec
data16
imul
jecxz
jmp
sbb
pop
lret
mov
or
fnstcw
mov
mov
jo
data16
sub
cmpsl
xchg
addr16
mov
rcll
dec
inc
xchg
sbb
je
mov
cli
test
sub
clc
xor
leave
or
aad
xor
imul
fimuls
push
into
mov
xor
test
or
adcb
mov
std
adc
and
movsl
jo
arpl
rcrb
fimull
pop
iret
lods
cmp
ret
les
iret
out
jbe
outsb
popf
test
stos
arpl
mov
sbb
mov
xor
push
xchg
ret
add
iret
hlt
or
arpl
mov
into
orb
cmp
adc
inc
xlat
inc
ss
lock
xchg
adc
push
jmp
scas
cltd
mov
sahf
mov
xor
les
call
sahf
mov
or
mov
stos
loope
jge
movsb
add
cmp
dec
mov
push
fcomps
setb
cmpsl
jecxz
repz
icebp
mov
pop
js
push
mov
fucompp
add
bound
ja
iret
cs
or
and
sbb
push
rcll
in
mov
popa
jp
xor
cli
add
ja
scas
push
xchg
into
outsb
mov
iret
movsl
les
addr16
dec
out
aas
dec
inc
mov
stos
cmp
enter
aam
lret
sbbl
push
pop
jp
cmp
or
and
or
push
lret
lods
sub
jp
daa
sub
data16
ljmp
add
dec
lret
or
sbb
pop
adc
out
scas
xchg
jp
xchg
pusha
xor
cmp
push
dec
imul
mov
mov
push
daa
add
sbb
xchg
jnp
rorl
sub
pop
inc
data16
ss
adc
or
cmp
movl
lahf
js
push
jne
les
and
fwait
inc
add
jmp
je
or
or
xchg
aam
daa
js
aad
cmp
dec
mov
xlat
bound
add
cli
and
mov
xor
push
lahf
cmp
add
xchg
dec
add
notb
push
enter
stc
or
pop
mov
fcmovbe
sti
in
daa
in
jns
mov
adc
or
jg
nop
jl
mov
movsb
sbb
mov
push
pop
fwait
ret
or
ja
inc
cld
cmpsb
cmpsl
xchg
sub
sbbl
stos
jecxz
xor
gs
mov
loopne
fs
or
adc
scas
dec
pop
orb
fs
lods
cmp
ret
add
add
insl
pop
mov
lcall
mov
arpl
add
int
aaa
inc
lods
adc
insb
dec
jno
and
jl
lret
xchg
jle
jmp
aad
into
push
mov
sbb
mov
mov
ret
lods
out
les
into
and
jae
fnstenv
or
pop
jb
test
testb
inc
mov
or
push
mov
xor
xor
addb
jo
add
add
aas
push
roll
mov
or
push
jne
add
jmp
cmpsl
cmp
fisttpll
pop
xor
popf
mov
mov
cmp
cmpb
cli
adc
fldl
push
add
in
sub
popa
pusha
testb
jne
pop
pop
dec
jge
push
pop
pop
xchg
repz
or
push
dec
jno
sahf
repnz
xchg
out
xor
mov
jl
imul
adc
adc
mov
dec
mov
insb
xchg
pop
dec
adc
jp
inc
ja
and
xchg
inc
xor
push
push
ficomps
mov
sub
leave
or
dec
mov
jbe
clc
or
dec
sbb
sarb
int
arpl
sbb
loop
in
mov
sub
clc
jl
lea
dec
inc
or
mov
popf
loop
jmp
loop
into
mov
push
filds
fmul
xor
sbb
adcb
inc
stos
js
cmpsl
movsb
adc
mov
mov
cld
cmp
je
jle
shrb
cmpsl
pop
sbb
stc
das
int
lret
xorb
add
clc
adc
dec
repz
cwtl
cmpsb
push
sbb
clc
pop
push
lds
xor
imul
ja
pop
inc
dec
mov
xchg
pop
fwait
xchg
ja
and
notb
test
out
jae
cwtl
mov
add
dec
push
fwait
and
adc
adc
sbb
dec
pop
pushf
dec
pop
mov
xchg
fdivrl
popl
dec
jmp
sahf
dec
sub
loop
data16
adc
jge
scas
pop
ret
cmp
or
and
fst
imul
push
test
mov
inc
xchg
fistl
sbb
mov
sbb
add
cli
pop
scas
ret
xchg
add
xchg
push
insl
push
sbb
jg
fisubrs
stos
clc
in
xor
sbb
inc
testl
rorl
inc
out
pop
push
dec
rcrl
xchg
push
jo
mov
insb
outsl
outsl
int
lret
je
jecxz
mov
push
pop
mov
adc
dec
mov
pop
mov
cmp
push
loop
lret
xchg
cmp
inc
adc
inc
fsubr
cmp
sbb
ljmp
and
nop
push
stc
add
jmp
scas
mov
jle
incb
adc
out
imul
xchg
icebp
push
xchg
aas
int3
pop
xchg
jns
push
pushf
leave
cmp
xor
fnsave
mull
push
pop
xlat
loopne
mov
nop
xchg
aaa
xor
jg
mov
and
out
push
mov
dec
test
in
ja
fisttps
xor
push
fists
cwtl
int
pushl
pop
add
xchg
sub
lcall
or
scas
pop
or
negl
cmp
mov
inc
jno
xchg
rol
js
dec
shlb
popa
xor
sti
sub
and
pop
icebp
xor
insl
hlt
adc
or
out
in
mov
xchg
pop
xchg
stos
jne
insb
mov
mov
insl
dec
xchg
sbb
cltd
daa
out
cwtl
jbe
mov
pop
adc
shll
mov
cmc
inc
inc
jge
adc
jmp
or
xor
pop
sarl
pop
leave
fs
pop
and
cltd
inc
add
inc
aaa
cmp
and
fs
in
test
mov
andl
adc
mov
push
ljmp
ss
push
add
xchg
loop
aam
cmp
fnsave
adc
xor
and
add
mov
sti
inc
sub
and
arpl
das
stc
mov
loop
addl
dec
fwait
adc
mov
push
inc
icebp
loope
das
test
shll
ja
lock
mov
adc
xchg
mov
adc
out
hlt
mov
rorb
jnp
scas
lods
lock
xor
inc
add
andb
jle
in
pop
jp
xor
cmp
lahf
into
pop
push
rcll
in
jno
push
and
pop
outsb
call
aaa
ficoml
arpl
out
aas
and
loopne
movsb
xchg
lcall
fildl
cmpl
mov
or
xor
jge
fs
dec
inc
in
icebp
jl
mov
icebp
dec
out
sub
cmp
ja
ret
pop
rcl
imul
xchg
xchg
sbb
cltd
je
mov
xchg
repz
xor
fsubr
mov
jo
enter
bnd
mov
nop
lret
in
and
mov
cmp
dec
dec
mov
test
andl
and
pop
lods
dec
jno
shll
push
mov
popf
lods
ja
and
sbb
out
into
jg
mov
jns
mov
xchg
loop
mov
pop
pop
test
push
dec
add
test
push
pop
mov
mov
dec
mov
adc
outsl
je
lcall
insl
test
daa
outsb
push
stos
xchg
mov
and
lahf
mov
jp
adc
adc
inc
or
sbb
cmp
clc
xchg
les
adc
sbb
loopne
popf
mov
cmpsl
mov
adc
fldenv
xor
adc
daa
pop
insb
test
push
add
inc
push
leave
adc
sti
lods
jns
out
dec
push
mov
pop
testl
test
cmc
or
ficompl
lahf
jle
test
mov
or
adc
xor
fwait
testb
sub
adc
mov
sbb
inc
repz
test
pop
shl
test
mov
mov
dec
loope
in
aam
in
dec
fidivrs
adcl
jp
xchg
xor
ficoms
pop
xor
adc
mov
cmpsl
and
repz
inc
movsl
inc
add
cwtl
shrl
mov
add
repnz
dec
pop
push
jo
fnsave
push
inc
ss
pushf
pushf
icebp
lcall
inc
fs
outsl
xor
nop
mov
pop
ret
push
pop
outsl
inc
ds
shr
ss
push
outsb
mov
adc
out
add
and
push
call
jecxz
daa
jo
out
jne
loopne
imul
sub
sbb
jno
inc
pusha
jne
cmpsl
xchg
cltd
pop
rorb
ljmp
push
mov
in
leave
nop
aaa
add
cmc
cmp
dec
and
inc
mov
in
dec
bound
iret
shll
or
clc
dec
pushf
daa
fnstenv
jne
jnp
loope
sub
gs
mov
ljmp
das
rorl
sahf
insb
or
std
js
mov
daa
mov
mov
adc
sbb
cmp
jmp
pop
jns
nop
mov
les
jnp
je
loope
cmp
repnz
std
sub
xchg
add
mov
mov
pusha
ds
jno
mov
push
xchg
mov
ljmp
shr
adc
mov
adc
adc
aam
and
hlt
cwtl
mov
leave
pop
repz
sub
and
ret
jnp
daa
fisubrs
mov
pop
js
push
call
inc
ja
xorl
sbb
or
lock
jg
test
ss
scas
jno
orl
imul
and
fcomps
ss
or
push
fwait
and
cltd
fcompl
sbb
pop
pop
add
mov
sub
rcr
loopne
adc
or
fildl
ret
cmp
repz
sub
js
dec
cmp
push
addr16
popa
sbb
in
adc
or
adc
cmp
jp
pop
lret
aam
jle
mov
shl
xchg
test
test
ljmp
sub
dec
jns
je
inc
mov
mov
loop
lea
lock
out
ficoml
push
jl
iret
lods
imul
div
test
dec
enter
sbb
xchg
enter
enter
lahf
aam
cmp
cmp
and
push
pop
pop
push
repnz
or
stc
inc
and
cs
dec
ja
fwait
insl
inc
add
lock
leave
dec
inc
clc
cltd
ljmp
aam
cmp
test
jle
fs
or
push
mov
push
ljmp
mov
pop
xor
out
pop
cmp
xorl
into
in
test
fisubl
scas
push
xor
movsl
or
and
fadd
pop
pop
add
lea
mov
fsubl
sub
imul
xor
inc
js
xor
cmp
jp
inc
adc
int3
jo
push
lock
stos
out
sbb
cmp
loop
pop
push
nop
sbb
sbb
pusha
out
outsb
jno
adc
jmp
mov
xor
cmpsb
lret
sub
imull
pusha
ficomps
mov
outsb
inc
es
xor
xchg
inc
add
pop
repz
cmc
lahf
cmp
push
popf
adc
mov
ret
fs
pushl
movsbl
mov
imul
and
fimuls
out
sub
sub
in
loop
dec
cmpsb
std
sti
cmc
add
enter
jp
inc
mov
and
jmp
mov
dec
and
xor
and
in
xchg
and
ds
mov
mov
pop
jmp
pop
adc
clc
shr
inc
sbb
push
or
ljmp
lret
inc
lods
mov
fcompl
test
push
mov
or
jp
mov
xchg
mov
mov
cltd
stos
dec
cmp
jl
jg
popa
mov
int
lret
jp
nop
sar
xor
or
in
ror
aam
add
or
scas
sbbb
sub
jb
lahf
jae
jecxz
movsl
in
cmc
and
xor
insl
pop
or
imul
out
cmp
out
out
arpl
jne
das
aam
in
gs
loop
das
xor
cmpsl
adc
jge
imul
xor
xor
ret
daa
imulb
ret
sbb
push
xor
xor
jb
dec
mov
mov
xchg
mov
xor
lock
sbb
push
add
xchg
mov
iret
sub
adc
test
sahf
inc
std
inc
xor
mov
pop
and
repnz
add
insl
xor
xchg
xchg
scas
fildl
shll
cmp
mov
enter
add
adc
push
cmpsb
jo
and
sbb
jnp
js
xor
test
mov
ljmp
mov
sbb
cmp
inc
hlt
mov
or
mov
adc
sbb
cld
cmpsl
lcall
mov
and
ret
pop
das
cmpb
add
or
pop
cmpsl
push
mov
addr16
bound
push
fsubrl
add
fisttpll
pushl
sub
pop
inc
je
xor
mov
addr16
mov
lock
push
xor
repz
outsl
lock
mov
sub
mov
jp
push
mov
in
cmp
jecxz
xor
dec
cmp
xchg
and
shrl
sub
inc
mov
in
clc
add
movsb
push
stos
jnp
sarb
ret
cmpsl
jmp
sbb
sbb
mov
mov
hlt
cld
lods
mov
push
insb
movsl
ficomps
mov
mov
inc
mov
cmpsl
mov
push
pushf
jns
aam
and
ljmp
test
mov
movsb
inc
xor
in
xor
aas
out
push
aas
repz
out
pop
lret
fnstsw
sub
dec
or
dec
leave
pop
out
and
cmpsb
les
sahf
mov
adc
inc
inc
xchg
addr16
fisubl
popfw
and
mov
lret
push
flds
out
xor
mov
xor
js
add
add
or
inc
sub
xchg
push
sub
and
push
mov
popa
loop
cltd
outsb
call
or
inc
xor
cmc
xor
or
inc
adc
mov
sub
sahf
inc
sub
fldt
scas
dec
dec
dec
push
dec
and
jno
adc
cmp
pop
sbb
push
push
mov
pop
add
cli
or
push
lods
mov
movsl
mov
pop
pop
lahf
push
jle
mov
cmp
movsl
int3
mov
mov
sub
and
clc
xorb
xchg
mov
dec
ficoms
aam
adc
arpl
insb
push
or
pop
cmpsl
pop
mov
repnz
push
cld
data16
test
pop
sbb
inc
fistpll
mov
or
clc
rcll
test
inc
jne
jmp
hlt
dec
addb
loope
and
cmpsb
and
popf
stc
dec
clc
out
bswap
pushf
daa
in
mov
rclb
push
es
lret
fbstp
stos
nop
scas
cmpb
sub
mov
mov
movsl
mov
std
addr16
les
out
and
test
or
lods
shl
int
mov
pop
fxtract
fsubs
xlat
inc
push
pop
jg
fwait
lret
pop
fs
dec
movsl
cmp
xor
inc
mov
mov
orl
mov
cmpsl
ss
ret
pop
and
cld
loope
fsubrl
int
addr16
out
mov
lock
test
test
inc
mov
cmp
inc
aam
mov
lret
insl
dec
out
push
xchg
inc
shll
call
mov
fwait
add
movsl
std
arpl
sub
adc
xor
push
or
scas
ja
cmpsb
push
inc
pusha
sub
mov
lret
leave
imul
add
mov
pop
push
pop
lds
cmc
push
push
stc
lret
xorb
cmp
filds
int3
popf
addr16
adc
test
es
repnz
mov
mov
xchg
push
sbb
inc
xor
es
or
mov
or
aaa
jmp
adc
adc
or
sub
fisttpl
or
sub
mov
add
cmp
jbe
push
lock
mov
lods
sbb
les
jg
out
nop
aaa
decl
cmp
mov
movsl
insl
and
shrb
ss
aas
push
ret
jge
imul
stc
jno
xchg
sub
mov
mov
dec
xor
std
pop
sar
adc
mov
lret
mov
je
insl
repz
jo
mov
jae
xchg
xor
add
imul
pop
add
repnz
icebp
cmp
push
arpl
mov
cmp
mov
test
notl
bound
push
cmp
sti
mov
jl
mov
jae
push
into
or
xor
lahf
add
cltd
mov
mov
aad
out
dec
or
sub
imulb
pop
subl
jmp
xor
add
scas
add
mov
sarb
xchg
and
pop
xor
dec
add
cs
jecxz
out
popf
jp
and
or
jmp
cwtl
ss
movsl
and
jmp
outsb
mov
xchg
inc
add
pop
div
and
into
xchg
aad
cmp
add
daa
push
cmpsb
lcall
pop
clc
jo
inc
imul
adc
and
arpl
push
sbb
add
cmp
stos
movsb
xor
mov
mov
mov
cwtl
cmpsl
inc
xchg
ret
iret
mov
in
xor
push
loop
and
jne
add
pop
loopne
sbb
addb
mov
mov
ret
js
fldl
ja
xchg
add
dec
cmpsl
or
dec
mov
fstl
lods
adc
sbb
push
call
bnd
inc
dec
dec
sarl
jmp
xor
mov
jle
es
stos
pop
mov
inc
pop
lcall
shlb
fsubl
rcrl
sarb
divl
aas
in
or
test
testl
sbb
data16
mov
ljmp
orb
push
mov
xchg
mov
cmp
ficompl
idivb
and
pop
push
sub
push
xchg
or
outsl
pusha
icebp
and
push
pop
jnp
sub
dec
fmull
lods
das
outsb
cmp
es
nop
movsl
and
mov
or
scas
or
mov
popf
sub
loope
dec
sbb
sub
rcrl
sub
push
in
negb
and
fwait
push
pusha
std
jecxz
mov
add
stos
es
gs
js
xor
sub
ret
les
lret
jo
pop
xchg
cmp
inc
cmc
mov
dec
mov
rol
aaa
in
out
xchg
aad
add
ds
cltd
mov
mov
call
pop
roll
and
or
cs
insb
ret
iret
xchg
jle
fwait
xchg
pop
and
mov
cmp
jno
jge
cmpsb
cwtl
ss
mov
cmp
adc
jg
inc
test
adc
rolb
js
clc
lock
into
aad
xchg
mov
addr16
shll
loop
add
and
mov
mov
xor
mov
sbb
mov
inc
lods
and
mov
stos
pop
fldt
scas
mov
in
movsl
stos
dec
loope
stc
cmp
and
faddl
jo
xchg
hlt
decb
mov
inc
incl
xchg
cmovns
adc
add
jb
and
cmp
dec
roll
mov
rcll
ljmp
icebp
or
and
fnstcw
and
add
in
lock
int3
outsl
nop
popa
inc
add
mov
mov
or
dec
daa
jle
mov
inc
repz
inc
mov
and
fs
cwtl
adc
mov
fisttps
lods
aas
jbe
and
sti
add
stc
inc
cmp
mov
inc
add
or
sub
sbb
rolb
jl
cmc
xor
and
pop
cmpsl
sti
inc
fsubs
dec
sbb
inc
and
shl
jg
pop
insb
cmp
imul
inc
shrl
fisttpl
sbb
test
ja
mov
hlt
add
push
lcall
les
add
into
pop
push
nop
out
jp
mov
stc
or
sub
pusha
mov
loopne
out
pop
popa
jne
mov
and
aas
fs
mov
in
pop
add
rorb
jl
repnz
sbb
fwait
inc
cwtl
mov
lcall
icebp
out
or
fdivs
bound
mov
push
jbe
xor
dec
xchg
out
xor
push
sbbb
xchg
and
loope
jo
lret
repnz
movsl
fmull
push
xchg
lods
loope
push
pop
dec
ds
cmp
jmp
rorb
jge
adc
push
lock
bound
dec
pusha
dec
jp
inc
add
xchg
mov
or
mov
movsl
and
cmpl
mov
test
jb
aad
and
addb
movsl
sub
xchg
xchg
xchg
pop
daa
std
adc
cmp
mov
adc
or
mov
xchg
ret
icebp
pushf
jne
rcrl
mov
jb
jae
dec
xor
push
outsb
inc
push
shrb
insl
in
lds
int
mov
outsl
xchg
std
dec
xchg
mov
mov
adc
xor
and
cmp
fidivs
xchg
clc
leave
push
int
adc
push
sbb
stc
andb
stos
ret
stos
fwait
pop
je
icebp
clc
bound
insl
lret
add
xchg
orb
das
movsl
sub
adc
xchg
in
sub
push
fwait
lcall
cmpsb
dec
mov
ja
xor
test
and
cmp
lahf
not
pop
lahf
stos
jo
inc
ss
xor
arpl
fnstsw
jle
mov
cmp
inc
mov
int
lcall
xor
xor
sub
inc
loop
cmovb
jmp
jg
lods
mov
shrl
mov
mov
jno
sti
push
fnsave
gs
popf
lret
or
jecxz
mov
fwait
xchg
cmpsb
add
mov
push
xor
xor
dec
mov
mov
inc
cmpsl
cmpsb
aas
pop
xchg
sbb
test
add
jno
jns
mov
mov
mov
jo
sbb
jmp
xor
rcrl
inc
and
hlt
nop
aas
jp
sub
cwtl
std
sahf
frstor
pop
sub
std
cli
mov
outsl
sbb
mov
jbe
aad
push
cmp
insl
lret
sti
stos
aaa
sub
jno
cmp
lret
rolb
mov
jmp
stc
jg
std
inc
adc
jge
xchg
in
test
enter
xchg
popa
lods
cmc
xchg
dec
frstor
jb
mov
mov
rcll
out
pop
flds
adcb
lcall
cmp
mov
push
and
xor
mov
mov
mov
cmpsl
jne
sub
shrl
leave
sahf
inc
shr
lret
xchg
sbb
adc
jae
dec
jge
lret
cli
ja
mov
sub
sti
gs
cld
mov
addl
sbb
push
add
data16
push
clc
mov
push
enter
jmp
daa
out
dec
mov
aas
pop
sbb
scas
ljmp
mov
pop
xchg
loopne
shlb
and
call
add
add
cwtl
xor
mov
jmp
inc
loop
jecxz
icebp
pusha
fsubrp
clc
dec
addr16
and
dec
mov
lahf
cmp
scas
and
mov
stos
dec
cs
cli
das
add
mov
inc
cmp
add
rcl
mov
xchg
xor
inc
or
out
rclb
pop
adc
xchg
aad
stos
cmp
or
loop
jp
push
lods
mov
ret
test
cld
into
cld
inc
fs
and
movsb
xor
jnp
aaa
scas
push
repnz
iret
orl
dec
mov
xor
sub
push
jp
std
ljmp
mov
inc
dec
push
js
loop
fsubr
mov
std
js
push
ffreep
pop
out
out
and
addr16
dec
push
or
sbb
ret
out
lret
xchg
push
out
rcll
stos
xchg
adc
pop
push
iret
pop
mov
sub
hlt
or
pop
test
adc
inc
pushf
fldcw
xor
xor
in
lods
mov
mov
inc
jp
push
xor
stos
lea
add
push
push
cltd
mov
push
icebp
in
nop
xlat
test
repnz
popf
jnp
push
lahf
cli
sbb
test
cmp
xchg
dec
adc
ret
lea
addr16
sub
adc
ja
and
add
bound
test
pop
sbb
adc
jg
mov
test
into
push
mov
or
adc
cmp
xor
iret
nop
mov
add
adc
add
push
mov
aaa
cmpsl
cmp
jbe
lods
pop
jno
gs
outsb
xor
xchg
mov
sti
aam
and
repz
cld
scas
jb
lea
ficoms
cmp
cmp
and
sub
rolb
inc
insb
and
dec
in
imull
sbb
jae
hlt
test
in
das
stc
hlt
pop
out
jno
shrb
mov
push
mov
popa
mov
xchg
xchg
movsb
and
hlt
addb
adc
or
lcall
mov
push
adc
les
imul
mov
or
test
aam
inc
pop
push
sub
test
sub
aaa
sti
imul
pop
mov
or
fildl
dec
mov
mov
pop
repnz
mov
mov
loopne
cltd
insl
mov
aas
ljmp
cmpsl
jp
aaa
test
cmp
xlat
fwait
sub
xchg
adc
data16
xchg
clc
sarl
scas
negl
mov
loope
sti
or
mov
and
fistpll
lret
int
xlat
hlt
mov
sbb
imul
and
lahf
outsl
cld
movsl
pop
jb
xor
std
hlt
xor
jg
and
out
daa
pop
pop
pop
int3
test
xchg
fs
es
add
popf
cmp
push
lret
adc
sti
sbb
cli
mov
sahf
and
sub
pop
js
dec
xchg
cmpsl
jbe
or
sub
dec
sub
push
je
out
lods
dec
jbe
fadd
stc
scas
cli
jno
bnd
popa
gs
and
cltd
lds
int3
mov
loopne
mov
xchg
mov
add
imul
cmp
lret
cltd
fiadds
lret
or
xchg
das
dec
adc
stc
inc
js
add
call
aaa
vxorps
push
jmp
or
fisttpll
jnp
or
cmp
dec
pop
pop
clc
lahf
xchg
ficomps
mov
add
pop
pop
aam
and
in
jp
lds
mov
sahf
cmpsl
lock
push
cmpsb
es
mov
inc
scas
adc
jbe
insb
add
gs
inc
add
push
or
call
fcomps
in
ret
mov
aad
mov
jbe
push
or
mov
dec
ret
aas
aas
mov
add
in
and
xor
xorb
es
xchg
in
inc
loopne
xor
in
xchg
pop
inc
negl
jo
ja
dec
inc
loop
sub
ja
pop
and
mov
into
lock
xorb
pop
dec
inc
jae
adc
fistl
adc
sub
xorl
into
out
sarl
xchg
mov
pop
push
out
xchg
ljmp
insl
stos
cmpb
out
jne
mov
daa
xlat
inc
mov
xor
inc
imul
std
or
fldenv
ds
data16
jne
clc
mov
jnp
push
in
popa
pop
test
inc
xchg
jns
xor
adc
mov
rcrl
std
or
push
xchg
je
ficompl
in
xor
shll
mov
das
jmp
or
je
outsl
inc
daa
sub
int
mov
mov
pop
inc
jne
dec
xchg
jns
sbbb
xchg
lods
and
jo
dec
es
push
adc
aam
mov
mov
mov
cmp
sbb
insl
fwait
daa
jo
and
mov
inc
or
sub
adc
ss
jl
inc
jo
push
and
cmp
aam
push
push
stos
ljmp
arpl
mov
and
jmp
in
popa
xchg
jg
xchg
pop
mov
lods
popa
cwtl
mov
mov
mov
out
ret
or
sbbb
in
mov
cmpsb
mov
aaa
shr
subb
mov
int
in
outsl
enter
fdivrl
icebp
idivl
sahf
daa
adc
dec
int
push
pop
outsl
scas
inc
sbb
out
ffree
pop
jnp
mulb
jecxz
dec
mov
loope
adc
in
mov
mov
shlb
push
nop
fisubrl
push
fstp
mov
mov
mov
xchg
pop
pop
dec
xor
outsb
aam
int3
jae
mov
or
xor
data16
fldenv
ds
xchg
mov
div
mov
jge
inc
pop
mov
sbb
imul
lcall
cwtl
int
aaa
aas
nop
lods
call
lea
mov
mov
xchg
sub
cli
push
sub
jecxz
es
push
lret
cwtl
out
adcb
mov
shll
xorl
lcall
gs
xchg
xlat
ljmp
and
fst
dec
hlt
jecxz
test
neg
leave
fisttpll
xchg
test
pop
mov
jg
or
xchg
or
shlb
xor
inc
add
jb
je
addr16
sahf
xchg
iret
jecxz
rcr
shl
imul
fs
sub
insl
out
mov
mov
andb
ljmp
mov
jns
sub
xchg
stos
sub
jp
test
mov
adcb
loopne
lret
mov
mov
sub
sub
lods
add
jne
mov
inc
mov
adc
push
jl
bnd
jge
inc
mov
pop
in
xchg
and
adc
rcrl
inc
xlat
jmp
sbb
push
push
add
js
xchg
insl
pop
mov
jg
mov
push
les
xchg
push
sbb
pop
cmp
or
stos
mov
jmp
sbb
nop
mov
pop
cmp
popf
and
sbbl
notb
add
jg
xchg
mov
lds
lock
mov
shlb
js
adc
pmuludq
mov
xchg
nop
or
popa
cltd
jg
ja
or
add
sub
jecxz
pop
sahf
cltd
rol
enter
rclb
in
inc
dec
leave
lods
mov
mov
ficoms
cmp
imul
xor
dec
cwtl
push
imul
int3
xor
mov
add
and
inc
mov
push
pop
fimuls
fwait
lret
push
fidivrl
pop
jbe
enter
sub
rcr
xchg
jns
mov
mov
std
mov
in
and
mov
cmp
cmp
inc
cmp
jmp
add
jo
pop
xor
mov
inc
cwtl
fiadds
fcompl
movsb
jb
jge
aad
dec
clc
push
test
ret
insb
xchg
jle
lea
shll
stos
push
test
cmp
xor
mov
sub
cs
add
xchg
xor
cld
mov
out
lcall
inc
push
adc
dec
xor
orl
cwtl
xor
adc
icebp
sub
pop
clc
push
xchg
hlt
cmp
push
daa
mov
pop
call
and
jo
mov
in
jns
aas
inc
and
xchg
xchg
iret
inc
pop
jle,pn
xor
int
in
mov
jae
jo
les
stos
out
inc
pop
xor
inc
sbb
mov
sarb
das
mov
scas
fbstp
jns
loop
xchg
xchg
mov
or
mov
mov
add
sarb
dec
fs
mov
push
insl
addl
pop
xor
fmull
pusha
std
or
inc
fs
test
insl
ret
xchg
shlb
mov
jnp
jmp
mov
movsl
mov
pusha
push
add
dec
stos
stos
fcmovb
clc
inc
adc
mov
pop
cmp
insl
mov
adc
popa
cmpsl
aam
daa
sbb
fstl
ds
out
ret
inc
mov
fimuls
or
push
lods
in
js
add
lret
loope
lret
popa
idivl
data16
fldt
jmp
ret
mov
push
jno
pop
ja
push
mov
test
sbb
or
les
lock
add
cmp
aad
mov
pushf
push
inc
cs
daa
push
cmp
mov
test
push
mov
cmpsb
jle
xor
aam
adc
movb
jp
cwtl
cld
jno
mov
mov
movsl
mov
jge
push
or
mov
pop
xchg
mov
ss
xlat
adc
sbb
adc
js
jmp
or
pusha
ret
daa
imul
xor
shll
jnp
mov
pop
and
shl
outsl
fdivrl
mov
mov
dec
cmpsl
mov
fistl
mov
add
jmp
push
xor
les
sub
daa
addr16
mov
cmp
enter
lret
cmp
xchg
in
sbb
push
sub
cmpsl
cmpsb
stc
test
sbb
rcr
sti
fldt
add
cmpsb
shrl
xor
jns
mov
pushf
jnp
adcl
mov
in
testl
sub
fs
cmp
leave
dec
cmp
adc
cltd
sub
mov
mov
xchg
sbb
js
adc
cmp
inc
push
in
mov
cli
mov
pop
or
scas
pop
lsl
and
pop
jg
sub
mov
cmpsb
and
lret
lret
out
movl
inc
mov
sbb
jmp
adc
sti
movsl
push
xchg
inc
filds
in
or
cmc
test
daa
fiaddl
movsb
push
add
out
sbb
xor
popf
iret
pop
shl
jb
add
es
into
stos
sahf
fwait
pcmpeqb
xchg
push
sub
dec
cltd
mov
outsb
add
adc
dec
insl
jg
daa
cmc
shl
adc
ds
movsb
xchg
sub
dec
cmp
sbb
int3
es
inc
ja
frstor
sbb
lods
push
les
cld
std
out
lods
dec
add
pushf
es
sbb
or
jg
or
push
icebp
inc
mov
cmpl
subl
sub
or
push
out
pop
mov
pop
cmc
shll
cld
not
jmp
dec
in
cmpsl
push
lock
fildll
adc
mov
sahf
ret
mov
sbb
jl
shl
aad
out
in
and
lods
mov
and
cld
sbb
ljmp
jp
iret
xchg
push
jmp
gs
pop
xor
mov
sbb
loopne
rorl
jb
data16
mov
int
insl
mov
in
cmpsl
daa
push
jb
adc
lds
das
mov
clc
js
adc
jae
pop
lock
push
dec
cmp
mov
pop
push
addr16
inc
mov
pop
push
push
data16
dec
mov
sbb
lcall
adc
ja
fnstenv
stos
test
hlt
cld
pop
lock
roll
int3
stos
cmp
outsb
dec
mov
out
in
jnp
cmpsl
dec
test
cld
lret
push
cmp
mov
push
ljmp
int3
insb
mov
lods
dec
mov
dec
lds
pushf
mov
sbb
xchg
rorl
sbb
adc
mov
pop
push
pusha
push
xor
clc
adc
call
insb
pop
inc
test
add
add
add
mov
test
pop
mov
movsl
shl
shll
inc
daa
int3
std
lahf
lahf
test
jne
jns
lcall
push
popf
or
mov
sahf
jmp
adc
hlt
leave
pop
mov
inc
xlat
lock
jl
pop
fcomps
mov
iret
fisubrs
cmp
add
rcll
mov
ss
loopne
adc
jbe
xchg
xlat
or
pmovmskb
arpl
and
xchg
jmp
pop
les
mov
mov
lea
pop
jg
and
xor
mov
in
add
testb
push
sub
jbe
inc
pop
pop
sub
adc
and
repz
mov
ljmp
lods
aas
nop
inc
inc
mov
addb
cmpsb
mov
dec
inc
lcall
dec
sbb
adc
cmpsl
nop
inc
lods
aaa
adc
pop
sarb
ficomps
push
int3
or
push
fs
jg
xor
out
frstor
inc
ret
sub
push
sbb
jp
mov
inc
mov
adc
xchg
ret
jge
sub
sub
sbb
dec
repz
scas
fwait
outsl
jbe
mov
in
and
inc
stos
mov
pop
cs
push
int
mov
andl
popf
inc
leave
cmp
cmp
and
cli
addr16
mov
jns
sbb
scas
dec
jle
call
sarb
jecxz
dec
mov
jge
js
ljmp
into
test
xor
xor
push
outsb
mov
pop
add
pushf
mov
and
push
iret
in
mov
cmc
mov
add
cmpsl
out
inc
pop
shll
mov
mov
mov
shlb
and
imull
cwtl
xchg
cmp
mov
aaa
push
xor
cmpsl
lcall
test
dec
loop
int
inc
in
repz
pop
mull
lcall
lea
xchg
jae
shll
mov
imull
mov
test
sbb
popf
and
mov
fadds
xor
xchg
push
mov
sbb
in
lret
pop
pop
push
xchg
cmc
lcall
sbb
and
xor
js
jmp
pop
xchg
ljmp
pushf
ljmp
arpl
xchg
push
or
arpl
out
adc
bound
mov
push
icebp
ja
add
and
in
adc
pop
and
lcall
outsb
mov
push
xchg
xor
out
fwait
insl
roll
pop
xor
push
dec
test
mov
add
out
int
mov
jg
in
xlat
jle
sbb
ret
int
dec
mov
stc
xlat
xchg
or
addr16
stos
gs
xchg
mov
aaa
ficomps
or
jge
dec
cmp
lock
mov
js
mov
ds
incl
xor
add
fs
sub
rcll
movsb
clc
mov
pushf
mov
jns
pop
repz
dec
mov
ret
dec
push
cmpsb
ljmp
call
repz
scas
insb
pop
roll
inc
add
inc
xchg
mov
push
mov
test
mov
jae
pusha
nop
call
jg
cmpsb
stos
xchg
fimuls
lahf
and
test
mov
mov
gs
imul
das
hlt
or
shlb
int
dec
pop
aam
aaa
jmp
and
shlb
rol
mov
xchg
adc
mov
dec
in
aam
ljmp
sbb
jle
in
cmp
xchg
outsl
pusha
lock
pop
mov
jns
cli
pop
mov
repz
data16
and
inc
movaps
add
or
inc
push
xor
mov
add
mov
ljmp
push
shrb
adc
jl
push
out
push
aaa
add
sahf
repz
xchg
sbb
xlat
push
pop
rclb
add
imul
pop
fidivs
daa
adc
mov
sub
dec
jle
andb
dec
adc
xchg
shlb
mov
sub
rol
xchg
cmp
and
popf
imul
movsb
fwait
imul
test
popa
jecxz
and
ret
or
or
hlt
inc
lods
movsl
fildll
mov
jno
filds
sar
and
in
xchg
out
insb
adc
popf
ja
mov
lods
sub
sarb
mov
sub
dec
loop
sarb
mov
inc
int3
jns
fnstenv
sub
and
sbb
les
push
inc
aas
xchg
jge
arpl
pop
sub
pop
in
and
in
lea
ds
add
inc
pop
hlt
and
in
pushf
push
xchg
add
jge
int
lea
jbe
adc
or
test
cmp
inc
sbb
fisubs
loop
in
shr
adc
shl
inc
mov
mov
or
lds
rcll
out
mov
adc
insl
aad
loop
jl
dec
and
aaa
sbb
push
inc
push
mov
shll
in
inc
or
adcb
push
fimuls
push
test
dec
sbb
push
sub
lods
fwait
dec
pop
mov
push
repz
popf
dec
mov
mov
sbb
xor
cmp
push
push
mov
outsl
pop
mov
mov
repz
push
aaa
dec
in
imul
loope
aas
test
inc
addr16
pop
xor
lret
scas
dec
shll
dec
rcr
dec
push
push
or
add
ret
dec
jns
ljmp
inc
dec
add
xor
lds
jle
arpl
jecxz
std
lds
fcmovb
and
setns
lods
jo
sub
inc
call
clc
les
lret
jmp
pop
push
shrb
push
xchg
xchg
js
lds
add
xchg
lret
push
jle
push
js
je
lahf
lock
cld
iret
add
and
jecxz
adc
sahf
in
mov
sbb
jmp
cmp
xchg
movsb
sbb
mov
daa
push
mov
mov
sub
stc
fwait
imul
pop
aaa
mov
or
mov
movsb
shrb
push
dec
mov
adc
add
inc
subl
pop
cmpsb
addr16
mov
lods
add
out
adc
add
mov
dec
sub
adc
push
cmpb
pushw
mov
dec
mov
dec
cmpsl
lods
movsl
and
arpl
fst
push
bound
dec
aad
or
sub
sub
jl
fsts
js
add
out
jae
test
xchg
mov
lret
xchg
inc
xlat
in
cmp
mov
xchg
lret
repz
cmp
xchg
push
js
iret
roll
cmc
push
ret
or
jge
xlat
loope
push
ja
mov
repnz
sub
or
fisubrl
int3
and
mov
stos
cmpsb
dec
iret
in
inc
rorl
lret
les
cmp
xor
mov
cs
push
or
bound
adc
mov
in
test
xor
mov
dec
xchg
dec
cltd
dec
cmp
fstl
jg
sbb
mov
fisttpl
xor
push
dec
xchg
push
rclb
push
fisttpl
int3
add
inc
insb
sbb
xor
fucomip
dec
mov
addr16
mov
mov
bound
and
xor
jb
xchg
cltd
loope
test
sub
aas
xorl
fisubs
fdivs
add
lods
out
jae
lds
out
xchg
fs
pushf
xor
jae
push
push
xorl
jno
mov
jb
push
fdiv
and
test
addr16
dec
sbb
test
lcall
call
jg
stos
mov
decb
adc
pop
xor
mov
mov
and
fsubrl
aaa
xchg
lds
lahf
mov
dec
dec
cli
push
ret
insb
and
xchg
testl
imul
jno
ret
fiadds
sub
xchg
inc
rolb
ret
adc
ds
stc
or
cld
bound
dec
mov
mov
in
xor
ds
ret
push
sub
adc
mov
out
popf
jmp
xor
loopne
inc
cwtl
dec
xor
push
fs
addl
and
jbe
mov
mov
fistps
cmpsb
cli
ret
in
ja
jp
sub
fistpl
fstp
mov
lret
jmp
pop
mov
jnp
fsubrs
ss
cltd
adcb
test
xchg
fs
or
cmc
aad
push
jle
sub
arpl
adc
divb
fwait
stos
dec
imull
inc
xchg
push
adc
shr
mov
jae
outsl
mov
scas
mov
fldl2t
std
out
dec
mov
ret
aas
mov
and
or
xchg
push
rcll
aam
sbb
cmpsb
std
jl
jbe
cmpsb
sub
push
sbb
lea
or
loope
mulb
pop
ficoms
orl
std
or
je
mov
cvtdq2ps
push
fldt
push
fimuls
or
ds
repz
and
ja
pushf
cmpb
jae
add
fisttpll
sbb
mov
stos
std
jns
pop
repnz
dec
and
pop
and
mov
cs
mov
mov
fdiv
repz
pop
in
push
lcall
add
pop
das
dec
in
mov
sub
addl
xor
mov
mov
xor
pop
and
sbb
sub
shlb
sbb
aaa
mov
or
divb
leave
je
xchg
idivb
cmpsb
cmpsl
dec
adc
jno
fists
sahf
pop
push
pop
stc
fdivr
popf
pop
stos
sbb
rclb
stc
test
inc
sbb
jbe
and
mov
popl
xor
mov
out
dec
mov
push
repz
mov
lret
mov
jecxz
cli
and
xlat
fcompl
divb
mov
adc
rcl
and
mov
lea
mov
in
push
out
sbb
pop
lods
mov
jns
andb
insl
js
leave
in
aas
int
out
cmc
test
es
stc
xchg
xchg
dec
cmp
push
out
push
xor
mov
cltd
xchg
adc
sub
inc
sbb
or
pop
cmp
xchg
sbb
iret
outsl
push
fsubrs
lret
out
or
mov
dec
stos
dec
add
jp
fldt
cmp
cmp
addb
fnstsw
or
push
lret
sarb
test
pop
js
clc
ds
pop
add
nop
or
fildl
shll
loopne
mov
mov
movsb
sub
inc
adc
jp
and
das
inc
push
cmpsb
push
push
clc
push
negl
dec
add
aaa
mov
mov
nop
or
fsubrl
cmp
out
cmp
pushf
inc
aas
repnz
jl
mov
xchg
sbb
rcll
xchg
ret
push
and
xchg
inc
jl
add
jnp
aaa
ljmp
or
xor
pop
push
lods
divb
dec
push
icebp
add
cs
imul
xor
fisttpl
jmp
inc
lahf
dec
xchg
push
lods
cltd
pushf
call
or
clc
xchg
nop
inc
pop
clc
cmp
notl
push
add
pushf
sahf
inc
cli
lcall
in
xchg
push
or
in
xchg
hlt
or
push
xchg
mov
push
enter
popf
adc
push
in
int
scas
jbe
mov
ss
ret
push
pop
adc
lock
mov
cmpsb
in
push
imul
jb
cs
sbb
adc
lods
aam
loope
mov
outsl
orb
pop
mov
jmp
lock
das
ret
sbb
dec
pop
insl
jnp
or
jle
sarb
or
popa
adcl
jns
daa
addl
push
adc
mov
andb
mov
sub
aas
jae
lret
out
arpl
cwtl
jne
inc
movsb
mov
stos
or
push
dec
fldenv
es
ss
call
sti
stc
out
cli
mov
dec
or
add
sbb
pop
in
cmp
dec
imul
add
pop
cmp
jecxz
add
sub
cmp
jge
sbb
cmp
or
dec
pop
pop
jecxz
dec
std
sub
out
inc
std
bound
mov
loopne
dec
or
out
add
xchg
loopne
jnp
dec
jp
jg
cmp
sub
cmp
jo
sbb
pop
adc
push
out
dec
in
aaa
clc
roll
xchg
ja
push
fs
adc
mov
pop
mov
sbb
fisttpl
pusha
mov
inc
pop
sti
out
adc
mov
dec
sub
add
js
mov
leave
aad
shll
push
jb
icebp
shrl
in
pop
inc
or
push
xchg
ret
push
lcall
rdmsr
jg
sbb
pop
mov
outsl
jbe
les
add
adc
in
in
push
out
cmpsl
pop
jl
add
mov
aam
out
push
mov
addb
push
fsin
aam
mov
add
cs
not
xchg
test
fdivp
xchg
aam
ror
sbb
sbb
sbb
sub
push
out
ja
push
mov
jle
sub
inc
inc
loope
les
jmp
inc
mov
std
adc
jbe
add
test
push
clc
jl
xlat
bound
mov
mov
and
lahf
cmp
cwtl
mov
stc
mov
push
mov
push
imul
push
sbb
cltd
pop
iret
fwait
repnz
imul
mov
repnz
jge
mov
cmp
lods
xchg
xchg
cmpsb
jae
gs
xchg
inc
enter
sbb
mov
rcrl
lret
insb
sbb
jmp
cs
scas
push
outsb
add
fimull
call
aam
mov
scas
cmc
dec
clc
in
je
sbb
push
cmp
pop
sbb
mov
sub
add
ret
popf
push
rcl
push
imul
or
nop
xor
decl
xchg
and
mov
into
push
lret
push
and
dec
out
ja
sub
aaa
arpl
inc
push
lods
pop
sub
movsl
rol
movsl
je
int
test
fdivrs
jecxz
fs
lcall
pop
scas
clc
leave
add
ficompl
mov
jmp
or
je
fdivl
les
mov
into
push
repz
fwait
sarb
or
jb
jp
jns
lcall
es
mov
arpl
into
fnstenv
cmp
or
outsl
arpl
fdivp
fwait
test
fistpl
icebp
fimuls
arpl
inc
push
inc
jne
aas
popf
mov
int3
scas
add
lret
jmp
mov
lock
loop
xchg
adc
lret
and
fcomps
pop
push
repz
push
xor
pop
inc
insb
jo
into
sub
mov
mov
in
int3
test
inc
sub
shlb
hlt
cmp
adc
sub
mov
in
jnp
jmp
sbb
mov
xor
mov
insl
int3
not
sub
push
xor
xchg
or
pop
pop
pop
mov
or
xchg
aaa
loop
adcl
pop
inc
mov
popa
cmp
mov
pop
jge
or
mov
inc
sbb
rcll
and
pop
inc
or
pop
repz
mov
cmp
sbb
push
cwtl
adc
xor
decl
fdivl
loopne
jb
cmp
das
or
mov
xchg
arpl
scas
mov
mov
pushf
mov
mov
push
clc
inc
ss
pusha
and
test
scas
movsl
scas
mov
jbe
loopne
jns
push
sub
push
and
adc
mov
jg
add
cli
push
test
ss
xorb
and
adc
mov
pop
inc
bound
popa
adc
and
imul
cwtl
leave
ljmp
insb
fdivl
jo
xchg
cli
out
push
jle
lret
push
mov
das
mov
es
rorl
xor
jp
ss
jmp
push
cltd
dec
aad
pop
mov
or
xchg
sbb
shrb
xchg
jmp
iret
jbe
lea
out
sub
hlt
cmp
js
lahf
stos
mov
mov
and
out
mov
pop
mov
popf
cli
push
mov
popf
add
test
sub
add
imull
ret
lds
lcall
daa
int3
sub
adc
add
lock
dec
enter
mov
fdiv
dec
pop
rolb
iret
cmp
popa
icebp
mov
mov
fsubrs
lds
insb
hlt
xor
adc
stos
ja
aaa
mov
fsubr
or
repz
push
ss
push
jp
fcmovnbe
add
incl
out
push
jmp
sahf
rcrb
scas
inc
add
call
mov
and
icebp
mov
xchg
sub
push
popf
cmp
fwait
inc
pop
xor
icebp
or
lods
xor
and
addl
cmpsb
repnz
jle
shll
jo
inc
mov
inc
dec
jg
inc
mov
mov
in
stc
loop
aas
mov
mov
or
dec
lcall
mov
in
inc
popf
insb
rclb
pop
add
and
sub
outsl
gs
pop
mov
mov
or
arpl
lods
mov
or
daa
lahf
and
insb
inc
ja
inc
outsl
std
loop
fimuls
repnz
out
and
mov
xor
ret
inc
xor
outsb
std
mov
xchg
fistpll
sbb
adc
add
sbbl
mov
mov
add
xchg
dec
movsl
xchg
xchg
cltd
xor
cmp
mull
loop
or
int3
xor
int3
cmp
sbbl
cmp
and
loop
ret
push
jb
inc
push
fwait
add
dec
vpunpcklbw
sbb
daa
add
dec
popa
icebp
test
mov
movsl
add
loope
test
sahf
pop
cwtl
inc
lret
mov
call
lea
mov
into
lods
pop
xlat
or
or
ja
stc
fs
fmul
f2xm1
or
in
mov
adc
sbb
cs
inc
add
pusha
xor
vmread
jns
and
insb
push
mov
and
in
push
inc
test
movsl
sbb
ja
mov
pop
xchg
adc
sti
add
cltd
sti
mov
sub
cwtl
js
push
pop
cmc
pop
fistpll
loopne
push
fdivl
cmp
rorl
pop
push
sub
popf
bound
stos
icebp
iret
fisttps
in
js
cmp
imul
ss
mov
subl
inc
inc
dec
gs
xor
mov
inc
mov
clc
dec
fisttpll
fcomip
pop
lods
add
push
into
mov
test
stc
push
sbb
sub
nop
into
push
cmp
dec
fiadds
mov
cmp
adc
sbb
jp
shlb
add
hlt
add
mov
fbstp
int
adc
les
adc
in
push
lret
inc
in
mov
xor
xlat
sub
insl
clc
xchg
out
adc
mov
jge
and
add
xchg
mov
mov
mov
sbb
repnz
dec
mov
pop
jl
pop
cmp
rcl
lods
cmpsb
adc
dec
stos
outsl
jbe
push
dec
jl
jmp
fdivp
jg
xor
imul
scas
and
mov
xchg
xchg
mov
sahf
orb
xchg
sbb
popa
outsb
ja
fiadds
mov
stos
fstpl
pop
add
out
cmp
out
jbe
out
sub
push
sub
dec
jne
rcrb
jmp
adc
mov
roll
stc
int
or
xchg
pushf
jns
pop
pushf
pop
pop
cli
jp
jg
scas
cmp
inc
ss
leave
and
das
jnp
icebp
mov
xchg
movsl
sti
call
dec
out
inc
imul
lret
addl
jl
mov
xchg
mov
dec
inc
pop
std
push
inc
inc
fistpll
and
insb
out
pop
in
fwait
inc
mov
inc
ljmp
cmp
mov
or
lahf
lds
int
test
call
loopne
cli
arpl
test
fwait
int
movsl
in
mov
fwait
and
mov
cmp
dec
pop
imul
int3
mov
xchg
ds
sbb
mov
xor
mov
gs
shl
pushf
xchg
mov
not
mov
sbb
adc
imul
add
lcall
scas
sbb
int
ficoml
inc
push
adc
jns
inc
cmp
fstpl
lcall
testb
scas
stos
dec
clc
xor
leave
xchg
jno
adc
iret
fldcw
addb
push
js
xchg
adc
inc
cmp
xchg
pop
leave
dec
xchg
imul
jg
jb
imul
lret
lcall
fadds
pop
aad
lods
add
in
daa
pop
push
test
and
icebp
test
jge
mov
jnp
mov
pop
in
cltd
mov
adc
xor
mov
or
call
cmp
mov
xor
mov
clc
xchg
jo
add
dec
push
fsubrs
mov
cmc
in
lock
mov
je
into
mov
xchg
push
stos
sbb
aas
je
std
cmp
jbe
stos
fsubrp
mov
iret
pop
movl
inc
stos
cwtl
aas
test
jmp
push
sub
lea
popa
mov
cmp
sbb
mov
cli
sub
sbb
mov
mov
dec
cmp
mov
inc
mov
test
push
pop
lds
xor
test
and
xchg
mov
and
sub
fstpt
data16
pop
adc
lds
adcl
push
loopne
cmc
loop
cwtl
ret
fcmovnb
xchg
push
hlt
dec
ss
pushf
call
cmp
cmpsb
jnp
ret
cmc
test
mov
std
cmp
xor
arpl
mov
mov
pop
jl
add
daa
cli
pop
sub
xchg
enter
mov
jno
lret
jne
jge
in
dec
and
add
mov
test
icebp
lahf
cmpsb
xor
fwait
insl
add
lret
mov
aas
dec
sub
scas
inc
cmp
lahf
or
inc
je
fbld
mov
stos
xorb
sbb
push
leave
dec
lea
aaa
jb
inc
mov
loopne
lcall
pop
adc
xchg
pop
js
adc
or
mov
outsl
repz
pop
ss
push
jns
aad
jbe
ljmp
xor
push
cmp
inc
mov
aam
mov
scas
mov
lods
imul
cmp
das
xchg
add
pop
add
arpl
mov
xchg
rcll
stc
jmp
adc
fistpl
arpl
cmpsb
pop
dec
inc
and
mov
nop
dec
inc
pop
movsb
shlb
mov
add
lock
dec
hlt
rcl
adcb
popf
push
test
add
orb
fisubl
cmp
sub
in
jb
pop
idiv
aad
or
imulb
aaa
jns
ja
fisubs
sub
lock
ss
inc
shl
sub
test
mov
add
pop
int3
mov
cmp
cmpsl
scas
pop
out
loopne
shrl
loop
push
movsl
popa
int
rcr
sbb
push
sarl
and
add
or
cmp
bound
subl
int
and
ja
sbb
ficoml
push
loopne
adc
gs
mov
pop
lods
inc
ficompl
jecxz
repz
pop
mov
aaa
pop
stos
jp
cltd
push
cmpsl
stos
jl
rclb
pop
cmpsl
jg
shrl
fists
adc
and
mov
pop
ret
je
fcos
daa
and
repz
dec
je
add
push
sub
push
xlat
add
mov
ret
mull
ds
inc
jns
jns
movsl
xchg
cmp
pushf
and
test
add
or
push
aas
lret
xchg
push
stos
test
inc
addr16
jae
xchg
jle
xchg
out
daa
mov
pop
xchg
push
adc
and
dec
dec
pop
or
add
mov
sahf
mov
lahf
out
fsubp
repz
or
add
mov
in
sbb
insl
sub
leave
cld
hlt
pop
mov
loope
pop
pop
ds
mov
push
sub
repnz
jl
shrl
sub
scas
sub
rol
adc
orl
sbb
pop
xchg
pop
pop
mov
and
inc
bound
movsb
jnp
inc
cld
js
mov
fistpll
not
dec
outsl
cmp
xor
int3
jp
sub
pop
leave
aaa
js
stos
fsts
inc
mov
xor
dec
mov
into
mov
sbb
jb
and
xchg
cmc
adc
jae
sahf
pop
sbb
aaa
jns
test
inc
stos
out
mov
jae
pop
rclb
sub
lret
mov
mov
cmp
clc
scas
xor
and
cmp
or
shl
sub
jb
dec
and
nop
inc
xchg
lret
out
cwtl
and
insl
adc
mov
test
dec
push
sub
cmpsl
jb
mov
mov
dec
xchg
fdivp
cmp
popa
sub
push
arpl
test
mov
js
in
rolb
xchg
imul
lcall
ret
push
push
ret
stos
pop
enter
mov
idiv
ret
or
int3
lock
jae
test
cmc
in
icebp
loope
into
sub
cli
popa
ret
js
int3
fwait
xlat
push
inc
in
mov
push
out
cmpsl
ret
cwtl
push
dec
sbb
aad
pushf
in
rcr
arpl
int3
inc
adc
dec
sti
bound
push
out
dec
fbstp
push
pushf
dec
or
sbb
outsl
pop
into
out
mov
test
ja
sbb
cld
rorb
jle
push
ret
imul
xchg
dec
xchg
aam
stos
or
in
xor
xchg
mov
xchg
test
cli
push
cmpsl
imul
pop
sbb
xchg
jae
or
test
inc
aaa
imul
ds
push
popf
pop
iret
add
push
bnd
data16
jmp
testb
scas
xor
or
cld
push
gs
js
gs
lahf
sbb
shlb
sbb
loope
or
lods
fldcw
xchg
mov
out
jge
inc
sbb
sub
leave
or
test
inc
mov
or
pop
adc
iret
outsl
mov
stos
mov
push
loope
ret
mov
out
push
or
fbld
xchg
jno
test
fcmovu
mov
cmp
and
sar
and
in
jne
pop
shrb
or
mov
xor
int3
mov
push
int3
pop
xchg
popf
bound
and
push
push
sahf
push
stos
mulb
or
andl
mov
mov
and
mov
idivb
hlt
fincstp
pop
test
or
sbb
cmp
and
fdivl
leave
push
adc
andb
fsubr
jl
push
xor
test
pop
sub
shll
data16
lods
dec
push
xchg
pusha
pop
mov
adc
adc
mov
cmp
loope
lahf
lcall
int3
or
loope
cld
jne
cmpsl
cltd
or
inc
push
xor
xor
mov
inc
or
fimuls
shl
mov
jno
mov
jg
xchg
pop
push
add
dec
push
sbb
fdiv
adc
mov
xchg
leave
dec
jle
dec
xchg
or
cmp
sbb
mov
xchg
adc
sbb
lock
iret
inc
mov
pop
std
cld
movb
pop
pop
nop
arpl
imul
sbb
fs
lret
stc
cmp
orb
adc
dec
dec
shr
in
mov
in
push
lret
mov
test
mov
adc
pop
rclb
bound
mov
mov
sti
jmp
or
pop
rorl
loopne
xchg
cmp
testl
push
mov
jb
push
or
addr16
sub
sub
mov
push
ret
add
scas
xor
xchg
bound
outsl
sbbl
repz
xor
mov
jl
loop
jl
test
movsb
out
pop
inc
pop
test
mov
mov
into
jae
mov
mov
fsubrs
mov
xchg
adc
push
enter
rorb
ret
mov
out
out
ret
ret
loope
xchg
lock
cmp
or
shrl
test
nop
add
stc
cs
pop
sbb
adc
dec
add
aad
js
bound
xlat
add
xchg
lea
cmp
not
pop
loope
jecxz
cmc
sahf
aad
sub
mov
aas
ja
add
push
repz
aaa
cmp
call
jnp
mov
push
imul
cmc
sbb
dec
daa
xchg
leave
ds
pop
mov
cmp
sahf
stos
iret
or
outsl
ljmp
xchg
cwtl
enter
les
js
clc
xchg
aaa
push
gs
addl
pop
pop
push
cs
pushf
mov
shlb
jge
adc
faddl
push
pop
push
rcll
cmc
rclb
movsb
in
je
stc
popa
ret
cmp
data16
fidivs
pop
dec
sub
cmp
add
movsl
cmp
iret
dec
stos
and
sbb
cwtl
lahf
movsl
jnp
mov
jmp
mov
mov
cwtl
xchg
pop
rolb
lcall
fidivrl
pop
add
enter
sbb
cmp
bnd
add
push
mov
and
pop
test
lock
in
cmp
ljmp
dec
mov
sub
fistl
and
mov
lret
and
dec
jg
inc
aam
sbb
repz
ss
and
push
mov
cmp
inc
push
mov
fdivrs
push
fistpl
ljmp
xor
push
pop
sub
out
shll
aad
sub
test
xor
mov
dec
test
fadd
cmp
imul
cs
dec
in
push
push
mov
jae
mov
jno
cs
adc
lcall
mov
pushf
mov
inc
sub
stos
movsb
lret
or
inc
or
test
out
fsubl
scas
mov
mov
mov
push
mov
adc
dec
sub
pop
pop
inc
push
aam
jg
jecxz
push
sub
sub
pop
mov
sub
mov
inc
sbb
mov
xor
ja
in
nop
cwtl
fistpl
dec
mov
mov
dec
push
mov
xchg
push
cwtl
je
dec
shrb
stc
mov
es
shl
push
mov
aam
movsb
add
mov
mov
sti
jno
outsl
jae
mov
xlat
lret
push
stos
outsl
call
sbb
insl
out
ja
psubusw
ret
in
addr16
push
int3
push
xchg
sbb
push
aas
lcall
jmp
out
push
mov
sbb
sbb
xchg
xchg
rorl
xchg
test
sbb
lods
outsb
in
fnsave
mov
bswap
stc
adc
insb
dec
pushf
inc
cli
ss
inc
xchg
jecxz
dec
mov
adc
lahf
inc
xor
inc
or
add
dec
sbb
mov
aaa
int
mov
out
aam
pop
mov
in
pop
repnz
das
push
outsb
and
std
inc
js
dec
shll
cmp
jmp
sub
cwtl
push
cmp
and
sbb
and
and
ljmp
movsl
fisttpl
adc
jns
stos
mov
into
mov
push
cmp
test
mov
dec
shlb
pop
outsb
inc
imul
push
lock
pop
fnstenv
enter
jg
fistps
into
dec
pop
jp
push
clc
out
jno
mov
ret
add
test
pushf
or
aad
xchg
cmc
loope
jmp
jl
paddb
iret
pop
test
gs
bound
xlat
mov
lret
xchg
sbb
cmpsl
push
lret
pop
mov
in
mov
xchg
inc
mov
dec
pop
mov
mov
sub
std
cltd
mov
popl
sar
adc
and
xchg
in
lock
shll
lret
sbb
shl
stos
pop
cs
mov
incb
jp
inc
mov
imul
fsts
jnp
dec
scas
cmp
mov
push
lret
mov
ja
arpl
testb
subl
sub
hlt
jle
aas
xor
dec
inc
in
sbb
sub
or
cs
test
movsl
inc
pop
in
jb
inc
push
ret
xchg
mov
xor
xor
pop
fwait
push
jg
or
ret
sub
out
push
lret
add
or
xlat
fiadds
push
int
ret
jg
pop
cmpsl
mov
enter
out
jae
jecxz
fsubs
adc
mov
cmp
int
std
sub
cs
movsl
dec
cmp
hlt
mov
xchg
sub
or
stos
subb
cmpsb
in
jl
pop
jbe
repnz
imul
pushl
mov
xchg
imul
sahf
push
mov
and
cmp
mov
int3
push
je
or
add
push
out
out
aad
cmp
push
mov
imul
adc
push
sbb
scas
inc
cmp
mov
pop
xchg
xor
mov
imul
outsl
stc
loop
pop
out
mov
jp
arpl
inc
or
ds
movsl
sbb
push
dec
insb
popl
and
lock
jecxz
mov
mov
mov
hlt
push
scas
push
adc
mov
das
aaa
repnz
jmp
das
out
imul
pushf
cwtl
pop
std
and
movsl
pop
mov
popa
jl
inc
sbb
or
sub
and
mov
pop
jl
out
ss
repnz
inc
adc
jne
adc
loopne
push
inc
aaa
fcompl
lret
movsl
mov
add
or
mov
dec
daa
mov
scas
sbb
sub
push
ljmp
pusha
add
stos
jb
daa
dec
fucomip
ljmp
push
sbb
in
mov
insl
inc
dec
pop
jbe
inc
mov
and
inc
dec
jg
mov
rcr
add
push
fnstenv
fisubs
fnstsw
les
sub
ret
int3
std
dec
mov
mov
nop
pop
xchg
fadd
dec
pop
or
sti
or
or
mov
rcrb
incb
dec
aaa
push
mov
stos
jbe
sbb
int
inc
inc
mov
jne
mov
mov
cli
out
jl
or
nop
pop
mov
push
mov
repnz
mov
dec
stc
jbe
leave
jne
orb
push
shr
in
cltd
sti
scas
fcompl
int3
movsl
lea
mov
cld
divb
ljmp
cwtl
jns
cmp
shrl
imul
jge
xor
and
adc
neg
adc
sbb
push
adc
lahf
xchg
mov
jae
test
push
ret
xor
mov
orb
pushf
xor
or
fld1
mov
xlat
mov
mov
cld
lcall
insl
or
or
pop
push
and
flds
sub
push
dec
sahf
push
enter
lods
push
ficoms
dec
lahf
bound
dec
push
insl
mov
fmuls
jge
fidivs
push
and
xchg
test
scas
sbb
add
mov
stos
out
rol
out
jns
in
call
mov
push
lret
push
cmp
test
add
test
mov
in
scas
and
dec
mov
sub
or
adc
idivl
mov
ds
pop
xchg
sbb
inc
xchg
lods
lods
inc
cs
jmp
decl
sbb
lret
fistpl
in
push
fwait
mov
aam
pusha
and
inc
cmp
out
push
repz
dec
mov
jp
jns
and
jle
addr16
arpl
sbb
add
lea
insb
stos
out
jo
jp
jp
add
bound
adc
enter
xor
jae
sub
inc
mov
aas
push
sbb
add
push
rclb
ja
or
fildll
cmp
mov
aaa
and
jg
xor
loopne
cli
addl
js
cmpsb
cmp
sub
mov
dec
nop
and
ffreep
or
sbb
lret
icebp
mov
xchg
mov
push
xor
and
add
aad
leave
mov
cs
leave
or
fiaddl
mov
xchg
cmpb
shlb
pop
add
cmp
sahf
xchg
or
jecxz
xchg
ja
test
popa
in
xchg
xor
xor
jmp
jno
mov
lock
iret
fimuls
out
call
std
mov
hlt
xchg
fsubrl
dec
xor
enter
iret
inc
inc
std
iret
cmc
insb
bound
je
lret
in
in
xchg
out
ja
dec
inc
xchg
subb
adc
in
push
xchg
loopne
cmp
pop
cli
das
jo
arpl
cld
shrb
std
insl
cmp
lcall
pop
lea
test
pop
sbbl
outsb
sbb
aaa
loope
and
rclb
in
push
divb
lret
clc
and
test
xchg
test
outsb
mov
xchg
aad
cmc
js
outsl
xor
in
rcl
jae
mov
pop
push
sub
or
xchg
test
gs
ret
mov
xchg
std
xchg
xor
pop
loopne
dec
out
lods
ds
lahf
mov
adc
xchg
cmp
push
cwtl
push
adc
js
cmp
int
pop
mov
add
lods
xchg
dec
addr16
cmpsb
cli
jmp
lahf
mov
icebp
cltd
jg
repz
xchg
jecxz
mov
jp
dec
push
test
divl
and
lods
push
pop
clc
in
mov
push
aam
add
adc
sbb
sbb
daa
cld
lods
pop
lret
jle
dec
fwait
cmp
cmp
std
je
push
sub
dec
in
fsubr
xchg
pop
pop
push
sub
in
jo
repnz
jp
push
stos
popf
scas
rep
shlb
int
lahf
adc
add
xchg
pop
sub
push
sub
xchg
mov
or
in
lcall
ljmp
mov
xchg
ljmp
mov
pop
aad
sbb
xor
pop
xchg
ss
sub
dec
xchg
mov
mov
ds
pusha
lea
xchg
cmc
outsb
out
xchg
lahf
jecxz
fbstp
xor
dec
mov
outsl
fnsave
das
dec
subl
inc
pop
mov
cmpsl
jmp
sub
cld
dec
pop
push
jb
add
sbb
fcomps
std
loop
jecxz
add
shll
gs
outsl
jae
xchg
mov
stc
mov
mov
shr
pop
cmc
pop
out
pop
xchg
pusha
or
adc
cmp
inc
lahf
lahf
les
sub
push
mov
into
cmp
push
test
pop
out
mov
fistl
cmp
dec
jns
xchg
call
lret
mov
fstl
pop
hlt
jle
or
loope
insb
xchg
jp
mov
aam
xchg
mov
dec
xchg
xor
icebp
mov
cmpsb
lcall
pop
cmpsb
sbb
dec
les
dec
sub
xor
iret
lret
test
shrb
ds
jnp
mov
rcrl
pusha
mov
popf
xlat
dec
pop
in
jge
sbb
xlat
push
ja
cs
test
into
sub
shll
popf
sahf
push
sarl
xor
pop
scas
inc
mov
cli
xor
add
cli
in
and
insb
rol
lret
mov
icebp
adc
add
inc
stos
popa
ret
pop
xor
int
or
ljmp
jnp
ficomps
cwtl
dec
ja
daa
or
xor
adc
pusha
arpl
xor
in
cmpsl
jge
jbe
mov
test
jnp
ret
sub
in
sub
pusha
pop
xor
cld
sbb
mov
mov
test
push
pop
insb
movsl
inc
xchg
push
xchg
add
jno
jp
push
xchg
xlat
mov
and
cmp
push
mov
sti
aam
add
imul
out
repnz
aaa
pop
push
sub
cld
xchg
cs
add
dec
sbb
gs
dec
jp
addl
cwtl
mov
ss
xlat
xchg
cli
xchg
pop
aas
lds
es
mov
jecxz
xchg
js
cmp
cmp
jmp
filds
cltd
mov
out
cld
mov
or
fcmovne
sahf
mov
imul
cmp
cwtl
imul
ds
xor
lods
xor
les
addb
aaa
xchg
fldl
lock
aam
push
dec
xorb
cwtl
push
int3
addl
out
leave
mov
sbb
xchg
lds
dec
aam
lcall
jno
pushf
mov
push
jmp
lcall
xchg
call
push
pop
ret
push
sbb
xchg
insb
xchg
subb
sahf
pushf
aad
mov
cmp
push
pop
push
cld
ret
pop
enter
inc
ja
sub
push
leave
xor
loopne
adc
les
push
fistpll
mov
shll
loope
mov
jl
and
adcl
jle
jge
dec
pop
fnstcw
jl
jmp
and
xchg
into
add
stos
or
push
pusha
fimull
movsb
out
arpl
shlb
add
jnp
adc
aas
inc
aad
or
add
into
mov
mov
lahf
lahf
pop
or
popf
mov
inc
mov
scas
out
xchg
add
adc
popf
loopne
aad
dec
add
push
aam
and
jne
or
adcb
sahf
cmp
decb
test
fstps
imul
ljmp
test
mov
jle
inc
sub
js
push
cs
lret
pop
xchg
mov
popa
sbb
jno
xor
sbb
stc
xchg
adc
in
sbb
xchg
out
pop
decl
lret
std
andb
pop
int3
rorb
fiadds
mov
dec
call
lret
cs
sub
sbb
enter
outsb
cmp
out
xchg
mov
lods
call
mov
pop
shrl
pop
ret
pop
mov
icebp
mov
stc
sub
cmp
or
push
dec
mov
push
add
repz
shrb
xchg
or
push
inc
lock
cmp
xchg
pop
add
cmp
lock
add
jg
mov
into
orl
mov
into
pop
cmp
cwtl
jge
sbb
xchg
je
jns
mov
dec
add
hlt
leave
push
cmpsl
mov
pop
pop
dec
stos
nop
mov
loopne
stc
fdivl
dec
inc
mov
repnz
leave
or
xlat
jbe
out
mov
mov
sbbb
jge
jo
mov
mov
mov
out
pop
cltd
insb
inc
push
push
cmp
mov
add
jno
pop
mov
push
shlb
das
lcall
cmpsb
and
inc
mov
stos
lea
push
rcrb
aad
adcb
xor
mov
sub
dec
sbb
jge
mov
lret
pop
push
ja
movsb
sbb
xor
xor
outsb
dec
test
lods
shrb
mov
mov
jo
js
aas
imul
js
mov
ss
lret
jne
lock
cmpsl
inc
out
inc
adc
addr16
lock
shrb
dec
js
and
in
inc
gs
shrb
push
add
dec
push
pop
inc
bound
mov
fstpt
std
pop
push
cmp
sbb
or
pop
jmp
jae
jbe
mov
dec
fcomip
punpcklbw
mov
xchg
mov
test
imul
pop
push
push
cmp
push
and
xor
lcall
repz
sbb
mov
mov
cmc
mov
dec
sub
ds
inc
das
xchg
mov
cltd
addr16
jne
in
insb
shll
rclb
pop
mov
jns
fdivrp
mov
jae
rorb
dec
inc
add
or
lcall
ret
jb
sub
jmp
in
sbb
popf
push
stos
pshufw
jo
cmp
and
mov
in
test
xchg
call
cs
push
jle
pop
mov
sub
mov
xchg
push
mov
and
push
daa
bound
sbb
or
sub
in
out
or
jg
inc
push
mov
xchg
fiaddl
xchg
mov
push
movsl
lds
or
fidivs
sub
lcall
jae
lea
dec
adc
xlat
iret
add
and
sub
std
cmp
pusha
jb
out
das
jle
aam
les
lea
std
sbb
mov
inc
nop
pushf
mov
xor
or
and
test
jns
xor
aaa
andb
inc
fstps
mov
stc
mov
repz
lret
in
mov
ja
push
cltd
adc
adc
push
addl
push
dec
ja
sarl
dec
insb
daa
sbb
ds
mov
mov
out
xchg
jge
movsl
pop
into
push
mov
incb
in
insl
xchg
xchg
pop
lds
push
add
mov
jb
jmp
test
add
icebp
jecxz
xchg
into
ja
cmpsb
call
insl
leave
jns
mov
out
and
out
fwait
jns
cwtl
sbb
lret
stos
cmp
sbb
inc
jns
js
fisubrs
or
xor
mov
mov
push
or
mov
and
lcall
adc
insl
daa
xchg
jnp
or
lret
insb
sub
in
push
test
add
fstl
imul
jno
fwait
xor
mov
data16
outsb
andb
int
mov
mov
jns
mov
in
jnp
neg
rol
xchg
test
loope
lahf
call
mov
aas
mov
lret
hlt
aaa
jae
out
mov
dec
xchg
adc
scas
pop
setge
xchg
test
xor
add
dec
xchg
fsubrs
shr
jmp
mov
lods
jle
inc
int3
xchg
stc
push
sub
lds
push
or
pop
push
cltd
jmp
call
push
mov
cmc
mov
mov
pop
cmpb
aas
mov
cmp
cmp
jg
fs
push
dec
adc
clc
sbb
fimuls
aam
insb
int
inc
mov
sbb
sbb
aas
lahf
and
mov
adc
and
icebp
mov
lods
scas
popf
aad
test
adc
pop
or
addb
inc
rorb
sbb
outsl
lds
and
mov
dec
popf
notl
and
sbb
cwtl
jecxz
hlt
scas
mov
mov
fwait
mov
iret
repz
arpl
xchg
adc
aaa
gs
cmp
mov
mov
das
pop
or
pop
test
jae
cs
cmpsb
mov
push
inc
mov
adc
imul
rcll
stos
js
enter
push
in
jnp
in
jl
lret
dec
and
fimuls
fmuls
nop
int
fmull
cmp
repnz
fmull
mov
cmp
xchg
enter
in
andb
pop
mov
pop
mov
popf
adc
repnz
xchg
xchg
addb
stos
xchg
sub
out
push
pop
or
cmpsb
imul
push
dec
fstps
dec
and
nop
scas
lock
mov
xor
jge
repz
lea
lds
les
xchg
sbb
sti
jbe
iret
mov
dec
cld
in
sub
jb
mov
fldt
pop
andb
ss
ljmp
pop
leave
pop
addr16
or
je
or
pop
push
lret
or
cmp
enter
cmp
push
fdivs
sbb
repz
and
dec
jnp
js
arpl
subb
jecxz
dec
fcmovbe
shll
psubw
cltd
sti
repz
inc
out
std
fs
add
sub
mov
loope
inc
test
mov
pop
lret
inc
fsubl
in
cmp
and
ds
popa
dec
sub
test
mov
ljmp
or
push
mov
inc
pop
lahf
sbb
fldl
popf
cld
pushf
push
das
jg
jecxz
or
adc
testl
and
xchg
jl
xor
mov
mov
jae
mov
ja
mov
adc
push
push
or
rcrl
mov
cmp
add
mov
ja
push
cli
adc
sbb
nop
push
cmp
dec
adc
or
clc
mov
add
je
add
and
lret
scas
cli
cmp
repz
dec
sbb
jnp
dec
neg
jle
dec
mov
and
xor
ficoms
xchg
mov
mov
cmp
cltd
mov
and
ljmp
popl
inc
xchg
jnp
pop
in
and
movsl
fildl
jge
xchg
jo
out
mov
cwtl
xchg
sti
cmc
sub
popa
lcall
fimuls
mov
movsb
repnz
movsl
sub
test
div
das
push
sti
aam
test
inc
xor
inc
out
in
out
push
lea
push
ljmp
mov
pushf
jecxz
xorl
and
test
xor
lcall
and
adc
nop
and
cli
sbb
push
sbb
mov
outsb
mov
or
inc
cmp
fnstcw
mov
mov
mov
insb
pop
or
push
sbb
pop
pop
push
sub
push
add
cltd
dec
sbb
sbb
xor
inc
xchg
mov
dec
dec
dec
jle
mov
adc
inc
popa
sbb
pop
cld
ret
repnz
push
xchg
icebp
cmp
nop
out
mov
push
shll
scas
sbb
inc
jo
pop
fdivs
cmp
call
adcb
mov
cmpsb
lods
cmp
jecxz
push
shlb
add
cmc
jle
pop
jne
inc
and
mov
dec
pop
ds
loope
mov
sbb
outsb
sbb
push
out
lds
jae
ljmp
inc
sbb
xchg
mov
ret
and
mov
lret
in
push
cmpsl
arpl
fisubl
dec
aaa
les
aaa
push
je
mov
mov
xor
sbb
cmp
sarl
xchg
js
mov
pop
hlt
xchg
jnp
sar
inc
mov
mov
pop
add
xchg
std
pop
addl
mov
push
sbb
push
or
stc
cmp
out
aad
push
inc
lds
fiaddl
push
xor
fldt
or
jbe
add
inc
jecxz
out
addb
out
xor
push
aas
repz
mov
push
or
cmp
cmp
pop
add
sbbb
outsb
mov
and
push
jns
cmp
in
xchg
mov
das
mov
mov
jmp
xchg
lidtl
adc
jmp
mov
mov
sbb
popa
mov
ficomps
jne
mov
insl
popa
xchg
xor
jne
imul
mov
cmp
stos
push
sub
xchg
jg
addl
add
jbe
jp
in
jnp
incb
pop
fcompl
arpl
aad
aaa
xchg
notl
push
cli
mov
ja
lods
sbb
sbb
fsts
pop
fstpl
mov
test
js
in
pop
cmpsl
mov
sub
mov
inc
mov
and
xor
add
inc
push
add
notb
div
dec
negb
xchg
push
lret
inc
pop
int3
sub
aad
gs
ss
insb
add
cmp
push
push
jle
lods
adc
mov
pop
mov
and
loop
jbe
es
adc
je
fs
inc
stc
in
lods
pop
xor
repz
inc
sbb
sub
and
test
xchg
xchg
mov
cli
lret
loope
fisubs
out
sbb
fdivs
mov
jo
aas
adc
test
push
pop
pop
or
ret
mov
cmpsl
out
andb
pop
sub
pop
sub
das
adcb
mov
inc
mov
adc
jnp
xchg
int
neg
test
push
insl
stos
inc
subb
mov
clc
aam
imul
jmp
xor
das
lods
xorb
out
adc
dec
icebp
or
iret
scas
clc
mov
lret
repnz
ficomps
lock
cmp
mov
test
sbb
loope
iret
xor
xorl
pop
jecxz
xor
push
cwtl
push
xchg
push
rclb
jmp
xor
movsb
stos
or
mov
and
push
lea
test
pop
outsb
push
adcl
xchg
aad
xor
mov
into
adc
fnstenv
mov
lods
sbb
add
sbb
xor
pop
adc
sbb
jp
pushf
jg
mov
dec
mov
aaa
cmp
sub
cmp
and
xchg
aaa
jne
and
dec
xlat
cli
movsb
out
push
sahf
add
push
or
and
popf
xchg
adc
add
dec
in
pop
movsl
cmpsb
popf
hlt
mov
mov
xchg
nop
jae
lds
and
mov
add
imul
sub
xchg
inc
int
imul
hlt
jecxz
daa
mov
cld
cs
dec
lretw
sbb
and
push
imul
push
ds
xchg
push
adc
mov
lret
jmp
dec
or
ret
inc
dec
cs
cmp
jno
adc
enter
subb
xchg
mov
scas
pusha
dec
cli
push
jbe
xor
arpl
adc
lods
leave
icebp
inc
mov
cltd
push
lret
mov
xchg
lea
inc
sarb
or
lret
gs
cmp
out
rorb
jge
and
or
xor
imul
mov
jp
jmp
mov
dec
loopne
ss
lds
popf
or
pop
and
mov
call
ret
and
xchg
inc
sahf
xchg
ljmp
mov
andl
test
inc
je
pushl
test
test
sbbb
push
inc
mov
dec
dec
inc
xor
jmp
rorl
sbbb
addr16
sbb
fmul
mov
or
adc
int3
xor
or
and
cli
and
ss
lcall
aad
lods
add
fs
inc
test
movsb
ret
push
cld
mov
jge
js
es
mov
loopne
ss
inc
add
clc
xchg
jle
sarl
fdivrs
gs
fsubrl
and
or
into
gs
stos
or
push
sub
pop
popa
xchg
xchg
or
mov
ljmp
lods
mov
mov
sub
cmp
or
shrb
push
std
mov
sbb
mov
jnp
fisttpll
adc
mov
test
les
lea
sbb
mov
lahf
outsl
jae
add
dec
and
add
clc
and
sub
insb
dec
sbb
mov
repnz
jns
push
dec
lret
push
ret
sbb
add
test
jmp
xor
push
sub
xchg
orl
dec
mov
movsl
imul
inc
fsubl
mov
rcrl
aaa
repz
dec
ret
sbb
lret
roll
mov
cld
fimull
popa
in
inc
ret
adc
adc
sarb
pop
inc
sub
sti
xor
xchg
push
jge
pop
mov
jle
sbb
mov
mov
call
test
sub
mov
popl
ds
mov
xor
leave
or
push
jmp
insb
inc
pop
push
mov
dec
lahf
rclb
sub
xor
aaa
or
sti
leave
test
and
aam
cmp
pop
rorb
insb
addr16
inc
frstor
loope
xchg
push
pop
nop
repnz
sub
mov
iret
mov
sarb
push
lcall
sbb
sti
insl
add
push
xchg
mov
pop
out
call
jne
jne
mov
pop
call
leave
push
mov
pop
cmc
xchg
inc
cmp
nop
xchg
rcrl
push
shlb
xor
data16
mov
sbb
leave
sbb
stc
dec
mov
repz
xor
jl
mov
loop
sub
in
add
dec
push
mov
push
jb
xor
imul
sarl
jne
xchg
jmp
add
add
dec
lea
test
mov
mov
sub
rcrb
and
xor
sub
lock
fs
ja
or
dec
int3
mov
sub
push
ja
or
lret
push
xor
jne
add
jge
je
mov
fdivl
pusha
and
fstp
sbb
icebp
mov
push
pushf
jbe
inc
test
or
test
outsb
xor
mov
add
aam
lea
dec
and
fucomip
adc
sub
sbb
jge
mov
lods
mov
aad
dec
mov
xchg
and
sahf
ret
inc
sbb
sahf
stos
cmpsb
ljmp
fidivrl
xchg
mov
rclb
fsubl
jo
push
dec
push
imul
adc
jnp,pt
adc
sbb
out
lods
add
fsub
dec
jmp
pop
add
add
push
rol
inc
jns
sub
loope
push
mov
js
cmp
or
xchg
out
push
lds
sbb
insl
or
leave
push
neg
push
xchg
sub
stos
inc
push
sub
daa
cli
xchg
cmpsl
ds
sub
sub
xor
imul
mov
out
jecxz
sub
sub
xchg
adc
cwtl
into
and
xchg
shl
popf
sub
sub
aad
inc
mov
adc
jae
out
test
jmp
out
push
daa
mov
fstps
leave
in
je
sbb
pop
dec
inc
and
jno
or
std
loopne
enter
xchg
push
incb
xor
cmp
push
xchg
popa
and
push
stc
jbe
shll
and
sub
les
pcmpgtb
shl
and
sahf
jmp
shlb
mov
pop
insb
cltd
mov
ljmp
xchg
icebp
adc
xchg
add
aam
cs
sbb
cltd
test
sbb
sub
mov
add
lods
dec
call
mov
xchg
insl
pop
xchg
adc
leave
push
out
push
fsubl
repz
stos
gs
xorb
xor
cmp
xchg
mov
dec
cli
mov
push
lea
mov
jle
out
icebp
mov
push
xchg
rolb
cld
jne
mov
pop
outsb
lods
xor
jae
mov
mov
add
mov
aad
stc
mov
ja
add
je
xchg
sbb
in
push
dec
lock
jmp
fs
or
inc
dec
insb
inc
mov
xchg
aad
jmp
pop
nop
mov
inc
loope
adc
pop
lds
js
push
aad
fwait
lds
sub
push
xchg
mov
sub
ljmp
aas
fstps
imul
sahf
lea
nop
adc
cmp
test
fdiv
stos
adc
test
js
xchg
dec
cmp
testl
mov
sub
fucomp
out
imul
sub
inc
fsubl
into
dec
pop
push
jns
pop
aas
roll
adc
in
stos
fidivrs
es
pop
sbb
and
aad
fidivrl
xor
mov
fldenv
fbld
int3
inc
js
sbbb
in
std
ficoms
push
mov
frstor
pop
jb
cli
das
xor
xchg
pop
sti
in
fs
pop
imul
in
inc
outsw
adc
lret
mov
push
jmp
mov
sbb
mov
mov
outsl
ds
mull
xchg
loopne
data16
adc
jg
imul
xchg
push
pop
lds
mov
add
pop
mov
out
sbb
cs
push
mov
mov
pushf
ret
sub
lods
cmp
dec
ds
in
add
icebp
mov
outsb
cmp
push
add
jns
pop
mov
push
cld
xchg
fs
stos
jne
inc
scas
add
and
lret
rcll
mov
sbb
fwait
cmp
dec
inc
fidivs
je
ljmp
les
inc
out
roll
adc
mov
das
lahf
shlb
scas
fmull
fldl
sbb
lret
jne,pn
and
cmp
mov
test
push
or
ja
sbb
ss
int
mov
cld
xor
popf
mov
lds
shlb
out
inc
out
mov
out
or
xchg
imul
test
xchg
ja
pop
fwait
in
ja
mov
adcb
or
sbb
movsb
ss
mov
sub
xor
xchg
pop
mov
xor
sbb
cmp
and
aaa
fadd
fldcw
out
imul
sub
arpl
dec
pop
je
push
mov
arpl
dec
push
xor
scas
mov
js
in
in
cs
and
lods
mov
imul
jl
out
sbb
jns
sbb
rclb
mov
ljmp
adc
push
mov
fwait
je
xchg
fs
mov
outsb
dec
adc
imul
dec
orb
pop
out
pop
out
fisttpl
roll
stos
shl
cmc
push
fstpt
pop
or
push
inc
into
and
push
bound
imul
inc
rol
push
aam
pop
sub
adc
dec
xchg
push
lcall
pop
mov
mov
jb,pn
inc
mov
hlt
pop
jae
pop
in
loop
sub
dec
and
lock
push
inc
int
xchg
lret
repnz
push
or
xor
or
out
pop
lods
xchg
and
std
mov
hlt
add
inc
pop
jl
mov
mov
pusha
shr
lods
sbb
inc
and
pop
fidivrl
and
aam
mov
dec
out
in
and
stos
and
jns
sti
mov
xchg
xor
rorl
dec
mov
outsb
pop
scas
and
insl
xchg
mov
leave
jno
les
dec
mov
aad
add
shl
iret
cld
cmp
push
mov
xor
pop
nop
jge
cmp
cmp
cwtl
jo
imul
xlat
xchg
inc
lods
sbb
cld
in
mov
jnp
cmp
inc
push
cmp
inc
and
pop
xor
sub
jb
in
xchg
add
pop
shrb
dec
mov
int3
test
movsb
out
test
outsl
pop
push
mov
rclb
std
out
test
ds
jp
jl
out
outsb
fldt
scas
mov
pop
std
iret
lret
jbe
xchg
es
aas
mov
cmp
addb
out
test
and
jae
insl
adcb
insl
mov
pop
jnp
adc
xor
pop
fldcw
sbb
imul
push
mov
pop
loopne
movl
ss
push
mov
aas
xchg
sbb
jae,pt
aas
aaa
ja
stos
sbb
fimuls
pop
add
mov
push
lea
andb
inc
mov
and
mov
jmp
jge
adc
scas
jg
mov
jge
pop
sahf
sbb
fiadds
dec
mov
jge
or
sbb
fdiv
mov
dec
xor
insb
sarl
shrl
shrl
mov
js
in
daa
das
out
or
sbb
rol
cmc
jae
lret
clc
ds
stos
aaa
rclb
xchg
add
jl
aam
mov
mov
jmp
xchg
cmp
pop
cld
cwtl
xor
sub
sbb
popa
inc
jnp
sahf
inc
or
mov
rol
lret
jnp
fs
movaps
inc
xor
orl
leave
sub
sub
xchg
or
mov
pop
ja
lahf
imulb
xor
sbb
clc
cmp
mov
dec
aam
ds
mov
ret
adc
inc
fucomp
add
outsb
xor
and
das
push
lods
xchg
incl
jge
loopne
sbb
movsb
movsl
ja
add
mov
dec
mov
popf
repz
out
dec
lea
das
stc
cmp
mov
dec
test
cmpsb
adc
cs
ja
loope
xor
test
out
ror
out
mov
fbld
inc
fldl
enter
sub
pop
lret
aam
xor
inc
jnp
cwtl
movsb
sbb
pushf
mov
stc
sub
dec
ljmp
jno
xorb
inc
push
clc
xchg
push
mov
rcrb
outsl
push
and
jge
sbb
out
sbb
fs
aam
push
sbb
sarl
pop
jo
or
sbb
call
jno
cmpsl
int3
mov
mov
jmp
dec
mov
or
es
add
fwait
pop
sub
jno
fs
and
dec
adc
sub
aad
es
xor
jg
push
cmp
xor
shlb
loopne
mov
xor
test
aaa
and
out
mov
and
add
pop
icebp
xchg
dec
stc
sub
stc
add
dec
mov
sub
repnz
xchg
in
sbb
mov
sar
js
adc
dec
mov
mov
pop
push
adc
xor
cmp
cltd
cmp
pop
and
repnz
pushf
inc
inc
cmc
sbb
movsb
pusha
test
test
cmp
inc
clc
mov
xchg
fisubrs
pop
mov
jle
jno
dec
fnstcw
mov
xor
inc
insb
mov
daa
or
outsb
mov
dec
pop
xchg
push
in
out
stc
jmp
cld
lock
nop
mov
xchg
daa
push
negl
les
movsl
or
int3
xchg
bound
jb
vmovshdup
in
sarl
inc
call
or
pop
cltd
push
dec
mov
mov
call
out
dec
push
lahf
popf
cwtl
mov
xor
pop
cmpsb
pop
int
in
push
clc
mov
xchg
dec
pop
cmp
pop
pop
mov
popf
mov
push
andw
rol
add
ss
jmp
iret
cmp
test
mov
fists
lods
push
dec
mov
add
movsb
push
cwtl
sub
pop
sub
inc
nop
pop
push
fadd
mov
xchg
mov
sarl
sub
rolb
jmp
or
aam
imul
js
pop
push
cmc
pop
pop
xchg
out
push
aam
xlat
pop
add
iret
lret
in
xchg
jb
pop
push
inc
mov
pop
jp
mov
cmpsb
mov
stos
fldt
das
lsl
je
ss
movsb
cmp
fcmovu
pop
stos
push
inc
mov
insb
rcll
pop
pop
inc
popa
xchg
int
jnp
xchg
inc
cmpsl
inc
enter
hlt
repnz
jge
cmpsb
loopne
loope
mov
lret
push
sbb
lods
add
mov
xlat
and
xchg
dec
test
and
cmpsb
jns
aaa
or
xchg
fbstp
loop
mov
test
pusha
cmp
mov
xor
gs
aam
in
std
adc
xchg
sub
ja
std
pop
sbbl
inc
and
insb
dec
add
sub
out
dec
cmpsb
push
mov
in
mov
cmp
and
fadds
cmp
arpl
mov
pop
repnz
inc
mov
loop
arpl
dec
pop
jle
aaa
in
mov
pop
in
cmp
loop
outsl
xchg
popa
adc
mov
mov
test
ret
jecxz
fstpl
fldenv
mov
inc
push
jmp
outsl
in
cli
movsl
sbb
and
pop
sbb
mov
cld
mov
pop
pop
out
push
fildll
fwait
aas
mov
and
inc
lea
sbb
ret
lcall
lea
sub
scas
or
lea
popf
test
insl
mov
js
or
addr16
ljmp
mull
fcmovbe
aam
add
pop
jnp
dec
or
arpl
cli
and
jmp
xchg
pop
or
pop
or
sub
push
mov
das
ss
jo
stos
loop
mov
pusha
push
incb
outsl
lods
cmp
stc
mov
lods
out
int3
data16
and
ds
gs
ja
add
stos
ret
jno
in
jmp
dec
jl
sub
cmp
imul
data16
scas
je
insl
or
fisubrl
pushw
jle
out
sub
int
decl
cmpsb
dec
jge
cmp
or
cli
jbe
and
fld1
mov
cs
push
arpl
sbb
pop
lods
and
in
push
repnz
mov
aas
int
or
nop
ljmp
mov
std
push
fsubr
sti
jecxz
pop
inc
sbb
test
add
and
cmpl
pop
test
arpl
cli
int
in
mov
add
je
xor
icebp
inc
xor
xchg
popl
test
sub
lret
loop
push
add
mov
pop
out
xor
jle
loop
es
aad
and
xchg
outsl
dec
out
aad
push
cmpsb
into
cmpb
aad
ja
fwait
add
lea
repnz
fdivrl
adc
xchg
outsl
sbb
test
inc
mov
fstps
and
adc
push
test
jae
push
mov
ds
jle
je
fwait
xorb
mov
xor
mull
adc
inc
stos
add
xchg
nop
fistpl
aas
mov
xor
xchg
ret
int
cmpsl
mov
js
push
in
sbb
sbb
jg
stos
ss
jne
call
sub
movsb
inc
or
pop
ror
sub
push
jmp
test
fimull
mov
push
pop
adc
xor
or
or
jbe
sub
cwtl
lods
jle
out
add
push
daa
pop
jmp
and
iret
adc
xchg
rol
sub
jp
jge
lods
js
dec
enter
mul
cs
jmp
div
std
cmpsb
lret
mov
inc
rep
pop
out
sub
iret
push
sbb
sahf
jmp
xor
xor
dec
mov
sub
rorl
cmp
xor
enter
in
cltd
iret
outsb
mov
mov
mov
xchg
idiv
test
insl
dec
dec
mov
shr
out
and
push
aas
arpl
adc
ret
addl
add
cld
inc
lea
lods
ja
clc
xchg
mov
inc
mov
xlat
sbb
fistpl
push
leave
pop
dec
pop
mov
jae
dec
or
cwtl
jg
add
mov
mov
cmp
pop
imull
cs
or
fs
sbb
int3
fsubrl
or
movsb
pop
pop
and
nop
enter
shl
xchg
js
subb
adc
les
cli
mov
xor
js
das
stos
xchg
sbb
and
adc
dec
mov
and
push
mov
jge
mov
je
cmp
jge
dec
pop
andb
push
lods
dec
xlat
fbstp
icebp
inc
cld
sub
ficomps
sub
or
cmpsl
inc
jnp
xor
lret
sbb
rorb
and
dec
sub
pop
xor
leave
push
push
daa
pop
dec
push
cmp
sbb
ror
jns
lcall
pop
ja
mov
je
out
inc
and
fcoml
push
xor
ret
jae
bound
aam
jge
mov
push
enter
xchg
xchg
punpcklwd
rclb
push
and
push
ss
mov
pop
dec
add
jmp
mov
adc
jns
xor
jne
push
fsubrl
gs
inc
mov
xchg
aad
stc
jb
add
or
mov
push
aad
jno
dec
mov
pop
sub
mov
cmp
outsl
int
dec
cmpsb
jmp
insb
cld
mov
or
push
pusha
mov
dec
cmp
lret
call
rorl
xor
addr16
aam
aaa
mov
adc
ficomps
ss
imul
jmp
fisubrs
jnp
fsubs
xor
nop
xor
sub
mov
aad
call
js
lcall
mov
std
fstpt
mov
xchg
subl
push
and
xor
je
sub
repz
pop
pop
mov
pop
sub
sar
mov
inc
movsb
stos
pop
ret
in
fildl
sub
jl
ljmp
and
lahf
test
test
mov
cmp
jg
xor
mov
push
ja
in
stc
dec
clc
add
jno
inc
xchg
je
cmc
pop
sub
ljmp
mov
xchg
jmp
popf
fisttpll
lds
jp
push
subl
dec
shll
sbb
mov
rcrl
lahf
cmp
inc
xchg
aas
mov
mov
xor
pop
adc
fisttpll
xchg
outsb
mov
repnz
lahf
and
sub
or
ds
cmpsb
cmp
ret
add
hlt
push
fimuls
adcl
shlb
jmp
int
push
xor
jmp
arpl
imul
movsb
add
adc
call
dec
cwtl
push
fmull
add
lret
dec
orl
fimuls
push
hlt
mov
add
into
outsl
out
cmp
lahf
pop
test
rol
addr16
sbb
shll
add
nop
add
push
movsb
mov
mov
add
in
and
adc
adc
mov
aaa
out
mov
lret
mov
lcall
in
shr
int3
mov
cmc
sub
scas
cmp
pushf
sarl
mov
outsb
push
js
jnp
mov
repz
in
out
xchg
shll
inc
aas
xchg
xor
jnp
lds
outsl
xchg
adc
inc
scas
lret
ja
js
dec
popa
paddsb
mov
js
je
add
mov
fisttpl
popf
out
cld
xchg
stc
add
mov
dec
cmp
dec
not
and
jge
pushf
stc
pushf
pop
jbe
out
into
lods
add
mov
dec
hlt
fdivrl
test
shl
mov
fsub
cmp
rolb
ljmp
pop
hlt
mov
lods
lea
shl
in
das
dec
xchg
dec
ja
adc
jns
adc
xlat
mov
cmp
push
or
leave
addr16
xchg
sbb
cmp
push
or
loope
dec
into
mov
popf
jg
lret
fmulp
cmpsb
in
inc
push
out
cmc
jle
mov
cli
in
mov
jo
idivb
aas
imul
fcomps
xchg
stos
xchg
hlt
leave
cmp
outsl
xchg
mov
popa
orb
inc
lods
lods
cli
inc
daa
fimuls
clc
iret
cmp
mov
cltd
push
push
fmuls
dec
push
mov
insb
sbbb
mov
fbstp
into
test
add
pop
nop
mov
lcall
stos
xlat
les
leave
xchg
xchg
inc
out
or
rolb
pop
adc
adc
sub
lret
mov
nop
jge
jb
or
mov
add
push
fnstsw
and
loope
ja
jmp
add
mov
inc
or
adc
das
mov
mov
xchg
add
pop
adc
jl
js
call
addr16
mov
pop
sbb
repnz
scas
sub
lods
jmp
test
jg
xchg
test
mov
aaa
call
push
push
outsb
lock
aad
stos
pop
inc
or
push
add
in
add
pushf
push
xor
out
mov
das
xchg
pop
lahf
xor
mov
mov
dec
pop
enter
add
jmp
enter
movsb
inc
push
clc
pop
shrb
dec
and
pop
rcrb
mov
and
sbb
jp
mov
pushf
cwtl
loope,pt
imul
mov
pop
mov
or
imul
pushf
mov
ficoml
into
and
shrb
fdivs
inc
addl
loop
xchg
lods
inc
lahf
push
or
fld
nop
add
fnsave
add
iret
mov
push
push
add
push
divb
xor
pop
jl
mov
push
outsb
and
fidivl
fistps
ucomiss
xchg
outsl
mov
cltd
adc
insl
daa
fnstsw
lock
inc
jecxz
jecxz
push
mov
add
repnz
mov
adc
aaa
pop
out
cmpsb
adc
lods
xchg
enter
jle
in
push
xlat
scas
testl
imul
je
sbb
ds
add
xchg
movsb
sbb
cmp
xchg
jmp
push
lret
lock
cmpsb
in
test
je
mov
xchg
dec
jae
cmp
adc
add
pop
stos
cmp
fisubs
das
rcll
pop
out
out
pusha
cld
mov
les
pop
cld
xchg
push
fisttps
cltd
sbb
jnp
lret
dec
push
loop
loopne
pop
loopne
inc
mov
sbb
mov
loope
outsb
test
mov
lds
scas
push
je
in
jae
cmp
call
popa
in
lcall
dec
jle
or
scas
adc
xchg
mov
iret
cmp
insb
dec
lret
andb
mov
pop
sbb
and
imul
je
pop
ds
pop
fsubrp
sbb
xor
and
lods
xchg
jle
pop
push
fdivrs
inc
or
fisttpl
pop
cmpsl
shlb
pushf
cmp
jmp
pop
mov
pop
ror
mov
and
call
cmpsl
add
pop
lods
inc
fisubl
sbb
push
loopne
test
cwtl
scas
iret
push
in
sub
adc
jbe
fisubrs
xchg
or
jno
not
cmp
daa
and
cltd
sub
ljmp
and
mov
daa
xchg
push
movsl
incl
push
lret
imulb
pop
addr16
hlt
insl
cmpsb
enter
bound
out
mov
mov
inc
popf
fwait
loope
pop
pop
mov
pop
dec
loope
movsb
nop
xchg
sub
data16
push
test
adc
lcall
dec
jle
testl
cmpl
js
jle
sub
daa
sub
clc
mov
add
push
cmc
pusha
inc
pop
sub
sti
ljmp
repz
insl
js
xor
subl
call
cltd
testl
or
mov
shr
scas
sar
lahf
int3
push
ljmp
ret
xchg
adc
add
fldt
mov
pop
call
push
sbb
or
lcall
fisubl
xchg
ja
lret
lret
and
scas
jg
outsb
sbb
push
movsb
push
arpl
mov
inc
jo
pop
push
test
idivl
scas
and
scas
aad
mov
movl
xlat
ret
or
and
cli
jecxz
fldt
lock
in
fisttps
fbstp
mov
out
shll
cmpsb
xchg
inc
loopne
mov
inc
jno
dec
loop
loop
in
add
or
insl
sbb
insl
outsl
mov
ficomps
mov
inc
movsb
or
test
add
and
in
bound
scas
cmpsl
gs
push
ret
sub
test
andl
insb
jge
ret
xor
mov
mov
push
sbb
nop
in
lods
add
das
sub
jbe
add
test
and
cmp
push
xor
lods
movsb
sub
cmc
stos
pop
jb
bound
int3
push
into
xor
cltd
xchg
test
loop
xchg
xchg
mov
loop
xchg
sub
mov
xchg
xchg
adc
mov
testl
scas
mov
add
repz
cmp
add
into
add
push
fcomps
dec
rcrl
daa
negl
mov
pushf
cmp
pop
sbb
and
jl
lcall
js
imul
xchg
pop
out
or
xchg
sub
pop
xchg
out
inc
movsb
xchg
out
out
jbe
xchg
int
mov
jp
insl
loope
sbb
out
ja
jg
sbb
pop
mov
push
xchg
xchg
pusha
add
lods
mov
cmp
adc
mov
mov
std
jb
loop
adc
and
mov
test
inc
dec
aas
mov
pop
pop
jno
dec
xchg
sbb
fwait
sbb
or
or
imul
xor
xchg
push
dec
jbe
jo
shlb
bound
mov
push
les
pop
xlat
push
test
dec
ljmp
daa
mov
fisubs
jne
jne
cmp
bswap
ja
ljmp
ss
inc
xor
lret
cmc
out
pop
mov
nop
dec
fstpl
shl
call
xor
mov
inc
or
or
cmp
jle
sub
add
xor
sti
dec
aam
call
jne
arpl
add
stos
dec
insb
adc
in
inc
insl
xchg
sub
jbe
add
stos
push
jge
mov
cld
outsb
mull
scas
add
fdivr
outsb
cmp
fstl
lock
or
mov
scas
adc
dec
int
cmp
mov
out
out
mov
outsb
mov
push
cmp
sahf
cmp
jg
aad
mov
cmp
dec
or
gs
mov
mov
mov
cltd
sbb
add
jae
mov
xchg
addr16
jmp
cmpsb
jb
dec
je
enter
cmc
fs
or
pop
bound
and
out
ja
jge
icebp
lods
sti
mov
popf
jne
les
push
in
je
dec
movsb
inc
push
sub
mov
sbb
enter
ss
sub
or
pop
jns
aad
in
pop
test
dec
adc
movsb
test
push
stos
xor
jp
sub
and
mov
mov
and
push
test
dec
aam
out
lock
and
iret
cmp
pop
jg
cmc
fisttps
jae
or
and
xor
push
loopne
jno
push
sbb
or
mov
adc
push
inc
dec
fcoms
aas
dec
push
inc
fisubrl
push
aam
rcrb
in
mov
and
add
mov
sti
rcll
inc
sbb
popa
mov
sbb
sub
jns
mov
xchg
lods
pop
inc
shrb
mov
out
pusha
jns
outsl
outsl
fmul
test
ret
movsb
mov
dec
cmp
ret
cmp
ret
rcll
cmp
mov
negb
dec
addb
jmp
repnz
inc
inc
loop
mov
loop
out
cmp
sbb
sbb
cmpsl
call
inc
sub
mov
cli
mov
adc
insb
mov
jb
xor
lcall
ja
sahf
into
sahf
jne
cld
lcall
or
xor
jp
ljmp
je
pop
mov
mov
repz
and
aas
jg
enter
sbb
mov
dec
jg
lcall
inc
sbb
xor
cltd
adc
dec
inc
lea
dec
add
je
clc
ja
jno
addr16
cmp
xchg
shl
aad
add
enter
jne
js
inc
leave
xchg
out
clc
dec
leave
add
ljmp
lds
mov
shr
lahf
pop
andl
outsl
popf
jo
js
sub
push
cmp
cmp
pop
pushl
je
mov
sub
mov
sub
adc
stos
rcr
jge
sbb
and
xor
arpl
inc
leave
lods
int
jle
int
je
and
xor
jo
repz
jne
cmp
ret
loope
les
fistl
lods
mov
stos
pop
mov
cli
pop
testb
mov
add
push
out
inc
iret
sub
mov
pop
cmp
outsb
mov
jne
dec
adc
or
adc
jnp
mov
fsubrl
inc
sbb
pop
mov
cmp
xor
cmp
xchg
mov
loopne
fbld
dec
sbb
inc
inc
lea
imul
data16
and
jns
es
lret
sbb
ljmp
ds
cmp
or
lahf
mov
cmp
mov
mov
stos
cmp
nop
sub
push
ds
rorl
xor
and
repz
xchg
into
pusha
dec
data16
push
les
cmp
sbb
popa
adc
jg
push
test
stc
mov
movsb
ret
mov
xchg
test
and
push
adc
into
stos
fisttps
scas
std
or
fxch
cmpsl
lret
jnp
add
fistps
mov
or
and
loope
jbe
push
mov
shrb
stos
push
outsb
mov
and
sbb
and
cld
mov
imul
jle
pop
mov
ret
stc
insl
push
xchg
fisttps
imull
lret
into
in
std
iret
arpl
rcr
or
add
das
xor
push
ds
nop
in
fmull
adcb
test
lret
mov
fstps
sub
std
enter
shr
cmp
rcll
aaa
adc
fdivrs
inc
jge
push
and
in
adc
into
jnp
lea
into
adc
mov
sti
mov
lock
fbstp
sub
jno
sub
xchg
pusha
sbb
lret
in
adcl
fs
js
sub
popf
mov
adc
out
mov
fwait
jae
iret
outsb
push
push
aaa
push
xchg
jno
push
jl
push
rol
mov
mov
inc
pop
jge
cmpl
cmpsl
movsb
mov
mov
fwait
shrb
test
jo
mov
push
aas
cmp
ds
mov
popa
out
aad
xchg
lea
jp
lods
mov
inc
int
adc
adc
lahf
test
jmp
xor
stos
sbb
xchg
mov
xchg
xchg
cli
or
xchg
xchg
push
pop
mov
je
cli
fsubs
out
sbb
call
inc
xchg
jb
xchg
lea
sbb
scas
dec
rclb
test
mov
pushf
dec
sahf
lock
push
ss
mov
mov
mov
cmp
stos
adc
push
sarb
inc
and
jp
data16
fisubrl
xchg
adc
xor
int3
adc
sbb
scas
jle
movsb
std
push
test
xor
dec
into
in
js
sahf
sub
cmpsb
xchg
adc
cli
inc
loopne
sbb
daa
mov
pop
sbb
add
cld
adc
xchg
mov
dec
in
ss
sub
sbb
ret
test
xor
je
das
mov
sub
test
in
mov
jo
adc
divb
mov
insl
iret
cwtl
jae
jno
ds
out
jns
pop
xor
jo
xchg
mov
sbb
scas
fnstenv
push
jns
out
inc
nop
xor
loopne
mov
mov
cltd
dec
cmp
push
cmp
repnz
lahf
push
jmp
jmp
mov
mov
arpl
outsb
insl
sahf
iret
jno
pushf
pop
test
sbb
xor
int3
std
push
jge
int
cmp
jg
shlb
cli
xchg
stos
add
sub
sbb
mov
lock
inc
mov
adc
mov
jns
add
cwtl
vcvtsi2sdl
arpl
jnp
lcall
filds
mov
lock
data16
aaa
cmp
mov
push
jns
sub
mov
outsl
mov
sub
imul
sbb
jno
loopne
add
into
or
cltd
ss
sbb
mov
stos
dec
adc
sbb
test
jns
pop
out
sbb
adc
push
and
mov
pop
testl
mov
or
mov
filds
out
push
xor
cmp
push
test
fsub
pop
repz
mov
add
stc
jge
mov
loopne
movsl
in
or
jb
cmpsl
xchg
pop
jb
adc
int
jo
jo
pop
add
adc
cmp
mov
loopne
push
dec
mov
sahf
push
fs
jno
pop
inc
cmp
sbb
jp
cmc
push
mov
jge
mov
mov
adc
mov
stos
xchg
push
xor
xorb
lods
unpckhps
mov
jecxz
add
loope
fisubs
add
adc
mov
inc
int3
push
push
or
mov
lods
or
sub
pop
inc
xor
dec
jmp
xchg
and
ss
xchg
push
jne
jg
xor
fdivr
inc
cmp
mov
int3
sbb
mov
or
fwait
cwtl
sub
aam
push
jmp
or
cmc
jl
and
movsl
lret
test
cmc
dec
inc
loop
mov
adc
neg
shr
outsb
mov
cmp
xchg
add
fs
aam
inc
jno
test
sbb
dec
es
inc
dec
sub
mov
push
es
and
push
sti
lret
jl
test
jp
ret
andl
aaa
push
and
test
dec
and
insl
out
add
fldcw
jne
movsb
test
loopne
dec
pop
and
adc
cmpsb
scas
rorb
fnstsw
fs
lock
cmp
and
cltd
inc
jne
push
and
push
cmp
add
ds
orb
dec
add
rorb
sbb
aam
pop
int3
insl
bound
stc
inc
jbe
mov
push
arpl
xor
es
and
push
cwtl
mov
push
push
push
push
sub
xchg
andl
xor
lcall
add
stos
sub
push
pusha
jle
mov
in
sarb
lahf
sbb
fwait
adc
shll
and
jb
frstor
rolb
outsl
lret
aad
mov
sbb
jmp
lret
dec
jae
repnz
push
pop
dec
adc
push
aad
aaa
addr16
ror
pextrw
cmp
scas
ret
mov
pushf
fstps
mov
push
hlt
pop
enter
sbb
and
jp
call
xor
out
in
pushw
pop
lods
pop
lahf
jge
mov
push
xor
pop
loope
xchg
and
or
sbb
push
cmp
or
jnp
hlt
and
push
rclb
dec
mov
stc
jecxz
dec
lea
out
push
adc
cmp
dec
inc
dec
mov
repnz
mov
push
xchg
rclb
pop
cmpsl
into
in
sti
aaa
fnstsw
ficoms
adc
lock
shrl
sbb
cmp
mov
xchg
in
push
fsubl
pop
dec
push
andb
fmuls
push
pop
lahf
inc
cltd
in
scas
fnsave
dec
push
push
rcll
mov
stc
jmp
jno
xor
push
dec
jne
pop
add
sub
clc
inc
lcall
test
stos
js
adc
stc
std
add
mov
or
sbb
mov
leave
or
das
movsl
sub
adc
adc
test
mov
repz
sub
stos
or
fwait
push
imul
fdivr
sarb
mov
pop
stc
ds
xchg
ret
mov
inc
insl
xor
jb
in
sub
test
iret
jge
jae
jp
js
mov
xchg
pop
lret
iret
push
and
add
call
in
sti
mov
lahf
xchg
pop
int
add
cmp
mov
pop
dec
rcll
cmp
xor
mov
movsb
cli
call
test
repz
xchg
jl
adc
sub
stos
imul
jle
out
jmp
std
jnp
call
ss
jbe
in
and
xchg
xor
cs
or
out
inc
sub
pop
jl
pop
mov
xchg
lods
mov
cmp
enter
clc
ret
xor
movsb
sbb
fistpll
dec
shl
stc
lret
pusha
lock
pusha
xor
mov
sub
scas
mov
shrb
sbb
mov
test
sbb
jnp
or
push
dec
or
push
mov
add
dec
mov
xor
fdivrs
inc
xor
outsb
push
inc
sbb
jg
pop
dec
cmp
or
inc
dec
loope
call
lret
lods
mov
inc
iret
lret
add
xchg
out
jb
cwtl
ret
cmc
inc
push
aad
pop
lret
lahf
xor
mov
es
cltd
pop
es
pop
inc
aas
push
mov
outsb
icebp
push
mov
jle
xor
divl
out
xchg
xchg
insb
mov
xchg
pop
sub
jle
inc
lcall
repz
push
mov
rclb
inc
clc
sbb
sub
or
lcall
movsb
daa
dec
mov
pop
into
int
jns
in
mov
stos
xchg
adcl
xchg
cmpsl
jbe
lcall
adc
jnp
ljmp
sbb
xchg
pop
aad
sarb
movsb
pop
mov
shll
xchg
cmp
pop
dec
jg
pop
pop
cmpsl
hlt
testb
icebp
adc
xorb
sbb
pop
push
sub
push
in
fnstenv
xor
sub
xor
push
movsb
pop
insl
rcll
les
adc
fildl
stc
xor
mov
xor
imul
ret
cli
iret
das
nop
cltd
std
rorb
mov
dec
sbb
pop
or
jae
std
icebp
ljmp
adc
pop
insl
nop
dec
cs
arpl
shr
dec
stos
out
icebp
xor
test
pop
aam
dec
sti
pop
std
mov
xchg
fsubrs
leave
in
mov
dec
movsl
mov
push
ficompl
or
cld
mov
aaa
arpl
mov
lods
mov
mov
and
xchg
rcll
mov
enter
xorl
icebp
mov
xchg
sbb
or
test
add
fs
dec
sbb
fnstenv
lods
cmp
xor
xlat
sarl
mov
jp
xor
sarb
mov
loopne
and
mov
add
mov
dec
xor
adc
cli
and
xor
je
test
mov
es
test
add
pop
add
aam
jmp
icebp
or
out
mov
mulb
movsl
push
mov
cmp
lods
stos
push
aas
add
fstps
outsb
fcoml
mov
lds
pop
pop
mov
fs
stos
stos
dec
add
push
xchg
add
pop
cmpsl
lods
push
adc
mov
xor
or
adc
mov
sbb
cmp
xor
lods
jmp
aad
divb
flds
shll
inc
aam
das
or
bound
cmp
push
xor
push
adc
cs
mov
mov
inc
fmuls
daa
and
dec
scas
push
cltd
push
aaa
xor
jo
sbb
test
test
mov
fs
and
adc
test
sbb
dec
in
inc
pop
sub
std
mov
nop
repz
sbb
sub
lahf
inc
pop
xor
push
andb
fldl
and
gs
shll
inc
pop
repnz
and
sahf
lods
pop
call
ret
push
movsb
adc
inc
sbbl
je
adc
jge
and
and
psubusb
xor
adc
fists
inc
mull
lods
pop
and
jbe
sbb
jnp
and
and
aad
cmpsb
cs
subb
mov
jno
inc
stc
mov
inc
push
cmpsl
ror
fs
adc
jo
dec
in
sarl
jnp
cltd
jbe
scas
dec
jmp
xchg
dec
lea
cmp
push
popa
stos
and
mov
bound
pop
and
lods
push
lods
ficoms
and
lahf
inc
sbb
enter
icebp
js
pusha
add
inc
dec
sbb
pop
mov
fwait
xchg
adc
add
mov
cltd
iret
lds
cmp
and
jge,pt
push
xchg
out
nop
bound
push
mov
sub
push
rcrb
popa
cmpsl
pusha
cmp
ficomps
dec
hlt
rcr
push
cmpsl
xchg
jo
mov
sahf
or
loopne
pop
cmpsl
fiadds
ss
aad
sub
adcl
mov
and
or
push
imull
rolb
push
xor
inc
sub
pushf
push
mov
pop
cmp
ja
dec
jns
test
mov
call
daa
rol
xchg
and
das
lret
xor
es
dec
pop
sbb
div
and
mov
jecxz
rolb
sti
xchg
sti
sbb
xchg
xchg
mov
imul
inc
sti
pop
mov
inc
jmp
jl
jp
mov
mov
scas
jo
mov
inc
shlb
mov
add
dec
mov
pusha
aaa
stos
and
or
add
imull
jne
mov
xchg
lods
lock
cmp
xor
add
dec
dec
ds
fidivrl
mov
sub
inc
lcall
in
mov
push
and
ja
imul
out
sar
cmpsl
cmp
and
fldenv
outsb
mov
sbb
dec
cmp
xor
push
jnp
xor
popa
or
daa
dec
lods
in
cmc
sbb
push
sti
ret
push
out
arpl
mov
je
ja
mov
sbbb
pop
mov
scas
js
out
mov
stos
xchg
pop
cmp
sarl
std
lret
mov
lds
in
pop
aad
in
push
out
xor
imul
or
adc
add
shrb
js
jecxz
cltd
xchg
pop
xor
ret
mov
mov
xchg
mov
fistl
mov
xor
xor
ds
xor
hlt
cwtl
mov
fcompl
and
inc
jnp
gs
jg
mov
test
inc
push
orb
pop
mov
rcr
jge
or
hlt
jg
test
cmp
jp
pushf
sbb
imul
dec
test
scas
loopne
outsl
add
cmpsl
sbb
insb
cwtl
and
adc
rolb
mov
pop
and
sub
adc
cwtl
fs
jle
repz
inc
fsubr
pop
das
inc
dec
mov
jae
and
mov
xor
cmp
push
inc
cltd
lret
mov
movsb
es
dec
and
add
leave
iret
ret
push
invd
je
adc
cmp
or
mov
testl
pop
arpl
cmp
mov
mov
pop
in
mov
leave
test
test
out
jb
pop
stos
mov
jp
pop
repz
lcall
or
ffree
sub
pop
enter
inc
and
jmp
mov
movsl
lahf
dec
sbb
inc
cmp
imul
push
ret
addb
ljmp
sbb
sbb
xchg
sub
movsl
pop
scas
stos
and
and
mov
pushf
movb
mov
bnd
push
call
and
scas
push
stc
and
in
shlb
dec
pop
mov
ffreep
cmp
nop
ret
xchg
ret
xchg
lret
jle
addr16
xchg
mov
mov
push
ret
pop
mov
mov
adc
fcoms
cmp
pop
add
inc
sub
fldenv
leave
jne
imul
imul
js
cmp
or
jmp
add
stc
aam
push
es
out
mov
loope
scas
dec
mov
das
insb
sbb
cmpsl
cld
fs
cmpsb
add
or
pusha
and
sub
sarb
mov
cmp
jp
mov
out
enter
call
outsl
int3
lret
out
jbe
testb
fcmovb
mov
and
jl
mov
gs
jmp
pop
and
jo
mov
cli
pop
xchg
fstpt
inc
xchg
cmp
ret
mov
jge
test
pop
lods
push
sarb
popa
cs
mov
dec
push
cmp
insb
adc
jp
js
aaa
jmp
ss
mov
add
jle
push
dec
out
int
cmc
int
and
or
mov
pop
jae
push
mov
pop
jb
mov
and
pcmpgtw
int3
adc
cmpsl
test
xor
xor
pusha
in
sub
or
mov
xchg
mov
movsb
dec
push
subl
xchg
clc
sub
mov
stos
jns
bound
xor
cs
jge
ja
ret
insb
adc
and
into
mov
cmp
cli
xor
stos
insl
pop
lret
test
std
leave
xchg
clc
je
sbb
sub
add
jne
or
sub
cmp
nop
orw
mov
inc
inc
iret
xor
fsts
pop
xchg
out
sti
ror
add
fistl
dec
adc
push
pop
fnstcw
inc
xlat
adc
push
cmp
jecxz
pop
lcall
in
inc
in
adc
stos
push
and
test
mov
mov
lods
push
aas
lret
push
ljmp
jl
mov
in
pop
int
sbb
mov
sub
ret
cmpsb
je
jns
insb
push
adc
sbb
ds
jo
out
in
xchg
repz
ljmp
out
jmp
pushf
stc
pop
or
iret
push
mull
or
sub
clc
cmp
mov
cmp
lahf
xor
into
sbb
mov
dec
xchg
jl
iret
xor
push
test
out
cmpsb
or
add
les
push
ljmp
test
in
dec
xlat
inc
es
mov
adc
jge
rcr
and
leave
fstp
xchg
test
xor
fldenv
andb
fsts
andb
pop
and
shlb
push
imul
mov
sbb
sub
push
notb
sbb
or
pop
xchg
lcall
mov
dec
push
andb
cltd
fisttpll
andl
int
fld
sbb
xor
add
pop
call
sub
pop
mov
idivb
je
fstl
lahf
mov
cs
jmp
jae
cmp
sub
sbb
and
xor
xchg
les
xor
sub
dec
adc
and
xchg
inc
pop
mov
in
test
pop
dec
and
repnz
cmp
test
fwait
xor
pusha
lret
in
stos
mov
jns
pop
xchg
push
repnz
xor
mov
cmp
add
inc
or
stos
pop
repnz
imul
push
lds
cs
aaa
lret
or
into
push
xchg
xchg
and
rcrl
fimuls
dec
mov
bound
ffreep
in
mov
cltd
out
les
int
nop
pop
push
xor
mov
clc
ficoml
push
jmp
push
sub
or
sub
sub
test
xor
aas
idivl
mov
sub
cmpsb
mov
push
inc
clc
and
roll
cmp
xchg
xor
pop
jno
loope
dec
mov
cld
xorl
inc
sub
jmp
or
enter
mov
out
cmp
test
xchg
andl
and
filds
incl
lods
lods
mov
loop
ss
repz
lahf
sbb
fidivrl
mov
jbe
icebp
mov
insl
add
stos
cmpsb
jg
neg
test
stos
pop
xor
hlt
in
lea
pop
fsubl
hlt
out
loop
movsb
fnstenv
adc
add
fcoms
jle
xor
aas
daa
rcll
mov
xchg
insb
xorb
inc
or
inc
cwtl
outsl
lds
xor
rcl
dec
xor
pop
jmp
lods
push
mov
loopne
aam
and
cmp
mov
push
mov
ss
inc
pop
lds
hlt
mov
outsb
repnz
enter
ds
push
lods
jp
adc
pop
jmp
clc
loop
leave
sub
rcl
mov
sbb
gs
out
popf
call
xor
xchg
push
hlt
out
sahf
push
and
mov
push
pop
pop
dec
fcomi
lret
sbb
adc
sbb
inc
stos
mov
imul
mov
pop
test
popf
jnp
dec
cmp
movsl
enter
push
add
popa
sub
inc
jae
into
call
push
pop
jle
fisubrs
xor
inc
xchg
xlat
or
inc
pop
xor
sub
xchg
subb
jp
mov
mov
mov
pop
add
sub
bound
mov
cmp
outsl
stc
fstps
mov
jle
stc
bound
sub
repz
test
xchg
xlat
push
sahf
les
add
inc
add
cs
hlt
pop
pop
shlb
insb
cltd
mov
mov
sub
and
jo
add
cmp
jae
in
pusha
inc
aam
fildll
mov
arpl
sub
pop
stos
test
les
insb
mov
lret
dec
xchg
and
cmp
and
out
mov
int3
mov
nop
jno
push
or
cmp
pusha
call
aad
push
shrl
ja
je
cmp
nop
divb
xor
test
dec
cmpl
fcmovnu
dec
imul
add
mov
fiadds
cmp
cmp
xchg
das
sub
xchg
add
lea
pop
push
pop
jne
push
xor
pusha
and
cmpsb
in
fwait
mov
andl
cmpsb
bound
scas
cmc
loopne
mov
push
repnz
in
sar
addr16
cld
add
incb
push
xchg
aam
xor
ss
mov
cmp
cmp
sbb
xchg
loope
xor
xor
jp
jno
movsl
inc
frstor
fmull
cmp
jg
cmp
je
pop
jg
cmp
repz
sub
dec
enter
flds
rorb
xchg
pusha
cli
jnp
sbb
cmc
jecxz
es
pushf
andl
jp
jae
hlt
mov
rcr
in
mov
aaa
repnz
nop
mov
fldt
jmp
xchg
push
jecxz
push
add
cmpsb
cwtl
jg
icebp
push
pop
fdivrs
jbe
or
jne
jae
sub
push
scas
lahf
xor
inc
inc
push
out
into
outsb
cmpsb
mov
daa
or
mov
jnp
fisubl
push
dec
cmpsb
lret
nop
dec
ds
imul
cs
fisubl
jnp
aaa
addl
lods
inc
sub
xor
inc
mov
roll
xchg
ljmp
fadd
xchg
fsubr
jmp
bswap
push
dec
fucomip
jecxz
xlat
or
sub
fisubrs
mov
cli
mov
inc
fwait
inc
and
lods
cmp
bound
inc
pop
in
ss
mov
add
push
mov
push
inc
test
lock
leave
mov
xchg
xchg
bound
mov
pusha
nop
fwait
cmp
lods
outsl
mov
pop
or
in
mov
adc
adc
out
ret
jp
cmp
in
ss
adc
mull
pop
fwait
pusha
jb
jnp
xchg
jle
pop
cmp
xor
pop
or
push
cltd
addr16
dec
stos
rclb
fbld
xchg
iret
dec
movsl
pop
call
dec
pop
mov
mov
ret
psubusb
dec
je
mov
mov
push
int
int
xchg
sahf
ds
jns
jbe
mov
pop
ljmp
dec
xchg
popf
push
adc
in
orl
push
push
leave
or
into
mov
mov
imul
add
aas
push
xchg
test
call
insl
cld
dec
hlt
mov
mov
fnstcw
jg
arpl
sbbl
loopne
inc
cmp
push
nop
icebp
test
lcall
test
arpl
inc
notb
push
push
rep
int
mov
mov
lea
sub
sbb
icebp
shl
enter
aad
insl
push
sahf
and
fstpt
jmp
dec
imul
and
daa
outsb
push
adc
insb
mov
sub
jo
xchg
enter
xchg
pop
test
ljmp
adc
imul
jne
mov
and
add
jle
ficomps
sub
in
inc
or
repz
pop
dec
fmuls
loope
cld
stc
xor
cli
push
rolb
sub
cs
scas
outsb
mov
jmp
cmp
cmc
test
jno
out
sbb
mov
inc
mov
mov
sub
rorb
and
push
leave
jno
sub
dec
jne
pushf
xor
push
notb
inc
clc
loope
addb
leave
add
mov
xchg
or
into
cmp
mov
push
addl
ja
sahf
mov
fstps
test
mov
xchg
mov
cltd
clc
mov
jns
add
mov
fwait
or
or
sub
jge
lods
aas
mov
jnp
decl
sbbb
jns
jmp
lock
nop
mov
outsl
test
scas
jb
inc
mov
mov
mov
jl
sbb
mov
add
out
scas
ror
iret
jmp
cwtl
jbe
push
loopnew
mov
dec
subb
mov
mov
push
pop
fcoms
push
or
mov
jg
adc
and
mov
mov
xlat
and
enter
dec
push
sbb
fbld
sub
jl
jo
xchg
enterw
repz
cmpb
repnz
dec
cmc
popa
inc
popf
mov
add
pop
cld
stc
out
ret
add
sub
sahf
jmp
cltd
scas
insb
inc
negl
js
push
adc
test
adc
jnp
or
dec
shll
lret
subb
xchg
and
mov
jno
lcall
mov
fdivrl
scas
lods
dec
addr16
dec
adc
bound
push
xor
jmp
call
adc
xchg
shll
or
adc
test
shll
push
hlt
mov
xchg
push
pop
push
nop
and
ljmp
rolb
push
stos
lcall
lods
or
pop
inc
xor
dec
adc
sub
popa
fcmovnu
xchg
mov
nop
and
pop
xchg
fidivl
mov
mov
cld
test
mov
xchg
lret
movsl
sub
fsubl
nop
or
icebp
and
and
xchg
xchg
jnp
es
or
movsb
push
sub
pop
test
add
cmp
xor
sub
rdpmc
jne
dec
lock
push
cmc
or
mov
add
js
sti
inc
lahf
lcall
xor
orl
adcl
addl
sbb
jp
sub
rorl
lret
fcomps
jno
fs
clc
outsb
sbb
arpl
or
lret
loope
mov
dec
outsb
push
xor
cmp
lcall
cmp
push
push
xor
in
adc
out
fcoml
cwtl
cmpsl
enter
adc
lods
neg
xchg
pop
mov
dec
loop
inc
cld
jo
sbb
loop
jge
repnz
push
mov
sbb
mov
jle
dec
or
mov
insb
inc
fldl2e
jecxz
aas
mov
imul
add
push
push
fistps
scas
pop
es
loope
test
addr16
add
jge
outsb
dec
xchg
jmp
inc
movsl
pop
test
pop
lcall
sub
lods
iret
lret
ss
lock
inc
daa
fldt
jbe
pop
sbb
mov
mov
pusha
movsb
es
sub
inc
out
or
cltd
jno
mov
push
fwait
adcb
adc
xor
cmp
pop
sub
add
jno
insb
xlat
xchg
mov
mov
dec
ds
aas
fsubrp
outsl
ss
xor
jmp
imul
mov
lods
mov
in
add
test
rclb
stos
scas
jmp
pop
pop
adc
cmp
push
test
pusha
shlb
sub
jecxz
mov
mull
or
mov
shlb
jno
sahf
icebp
jbe
rclb
mov
adc
mov
loop
stos
arpl
pop
dec
fimull
andl
out
jg
mov
inc
jnp
sbb
push
xlat
stc
mov
jl
pop
push
dec
and
xchg
jge
das
aaa
mov
out
sarb
sub
aam
inc
popa
push
ret
scas
mov
popf
cmp
mov
lods
jl
rol
enter
push
pop
xor
xchg
xchg
sub
xchg
inc
jb
dec
dec
jno
sbb
out
jmp
jl
cmp
stc
fistl
push
xor
ror
dec
adc
sbb
lret
push
mov
testb
sbb
or
xchg
or
push
rclb
mov
scas
in
xor
sub
cmp
out
dec
shlb
shll
ds
ret
shll
dec
nop
andb
stos
pusha
dec
xchg
dec
push
mulb
or
dec
pop
cmc
sub
push
enter
ret
daa
jo
pushf
push
adc
mov
dec
nop
gs
add
adc
test
mov
sub
pop
and
or
mov
jo
pop
xchg
dec
adc
xchg
repz
in
sbb
aad
push
loop
in
push
in
lods
jo
sbb
ret
ret
fcompl
jae
pop
leave
and
imul
jbe
lahf
pushl
dec
mov
sbb
push
jne
push
xor
inc
jne
and
daa
jo
mov
pop
popf
push
pop
enter
and
or
xor
in
inc
jbe
cmp
cmpxchg
and
and
xchg
inc
aam
dec
loop
mov
sub
or
sub
shll
jl
push
les
jmp
int3
mov
or
push
xchg
in
outsl
icebp
jnp
inc
dec
xor
outsb
das
jne
mov
and
pop
add
out
mov
jmp
cmp
lcall
ss
icebp
sbb
mov
std
hlt
push
fs
jle
stc
mov
pop
adc
xor
lea
out
bound
mov
mov
andl
imul
stc
sub
cmp
adc
cmp
or
ftst
ret
mov
fdivs
nop
mov
ja
ss
scas
std
rorb
lahf
or
insb
sbb
test
jge
pushf
aas
lods
xlat
mov
lahf
xchg
adc
jb
popf
icebp
pusha
fdivrs
add
and
lods
orl
pop
mov
add
sbbl
xchg
call
cs
sar
or
cmp
mov
in
mov
lret
dec
gs
cmp
cmp
data16
in
movsb
xchg
fs
or
fistpl
cld
pop
or
push
lcall
pop
xchg
sub
pop
lcall
jmp
inc
add
jle
fldcw
sub
mov
cmpsb
mov
add
mov
push
stos
or
mov
inc
push
scas
mov
cmp
out
ljmp
cmp
adc
cld
push
mov
das
movsb
shr
sbbb
lret
sub
aad
out
jne
pop
jb
inc
cli
or
movsb
mov
insb
fcomps
push
xor
stos
push
mov
push
adc
cld
in
daa
fcoms
scas
mov
stc
rcl
jg
pop
xor
cmp
repz
pushf
aam
mov
ss
mov
cmpsl
push
inc
addl
dec
mov
dec
and
mov
dec
sbb
sub
add
cld
or
fnstenv
lea
mov
cmp
xor
rorb
mov
xchg
int3
inc
out
outsl
pushf
mov
es
call
xchg
xchg
popa
jle
out
adc
adc
sub
cmp
sub
iret
rcll
in
xchg
and
mov
cmp
mov
test
dec
cmp
call
push
push
daa
outsb
mov
rep
loope
fdivrs
mov
movsb
notl
ret
lock
arpl
xchg
mov
lahf
dec
test
add
jmp
gs
sti
adc
pop
add
xchg
jle
aas
loopne
scas
sbb
inc
xor
lock
pop
cmp
lea
bound
push
mov
push
sbb
sbb
fistpll
mov
sbb
repz
test
cmp
and
mov
hlt
in
xchg
mov
push
sbb
jo
lea
jno
xor
ret
ret
movsb
loopne
test
and
pop
pop
xor
sarb
pop
lods
xchg
ljmp
test
jns
leave
pop
and
jnp
jae
fstl
pop
xchg
pop
daa
mov
gs
mov
and
cmc
sbb
insl
adc
sahf
and
cwtl
movb
call
lahf
je
mov
int
out
mov
dec
push
cmp
mov
je
stc
push
lds
adcb
inc
adc
mov
outsb
or
clc
push
jle
xor
mov
dec
cmp
ja
and
popl
imul
sbb
cmp
iret
das
xor
call
popa
lods
and
pop
or
xchg
sub
mov
cmp
shll
adc
cmpsb
outsb
ljmp
xchg
int3
ds
xchg
mov
jo
jb
ret
dec
sarl
pop
cld
ja
lret
push
mov
movl
addr16
and
outsl
xor
jge
mov
xchg
or
xchg
xor
pop
cli
pop
aaa
adc
mov
pop
mov
fidivs
fadds
mov
and
pop
dec
movsb
jl
inc
es
rorl
and
aam
lcall
push
pop
mov
add
xchg
mov
xorb
jge
sub
pop
cmp
loope
in
pusha
pop
push
jae
add
mov
aaa
scas
adc
sbb
inc
ret
test
cmp
jno
testb
xor
test
test
in
jno
ficompl
aas
icebp
imul
cmpsl
lcall
xchg
das
test
popa
sti
jns
push
sar
icebp
add
mov
std
mov
push
cmp
gs
xor
ret
clc
adc
pop
adc
enter
cmpsb
mov
cs
out
mov
in
scas
sub
fisubl
outsl
jo
xchg
adc
cmc
mov
sarb
pop
xor
mov
daa
adc
clc
lock
shl
mov
aaa
mov
cmp
cmp
stos
stos
add
ret
adc
mov
mov
fdivr
decl
shll
out
sahf
mov
sahf
iret
daa
fmuls
adc
add
inc
jno
loopne
push
and
xor
mov
mov
pushf
adc
idivb
int
adc
jmp
ret
in
mov
dec
aad
and
push
orb
inc
mov
ljmp
leave
cmpsb
ss
and
jge
jnp
inc
out
mov
aad
loopne
out
adc
dec
iret
adc
mov
popa
pushf
inc
lret
test
and
adc
rol
sbb
cmp
mov
cmpsl
aam
das
xchg
in
xorb
xor
lahf
xchg
ret
sub
or
cmp
push
push
inc
dec
ljmp
lods
cli
inc
xor
movsb
dec
cmpsl
imul
cltd
stos
lret
pop
sti
sti
dec
addr16
out
xchg
and
push
push
inc
inc
test
lcall
clc
lcall
jno
stc
cmp
fdiv
imul
mov
and
addb
cmp
push
sar
push
lea
mov
enter
stos
mov
xchg
add
sbb
sti
mov
scas
jmp
dec
mov
xchg
test
xorb
inc
ss
push
inc
and
cltd
push
js
cwtl
fistpll
ss
ret
adc
pop
jnp
jmp
and
xor
movsb
loopne
stos
inc
shrb
cmpsb
cmc
loope
fcmovbe
mov
jg,pt
adc
int3
dec
outsl
push
cld
sarb
pop
aad
adc
fwait
mov
sub
addb
testl
sbb
sbb
inc
cmp
inc
lods
dec
nop
sbb
subb
fisttpll
ret
add
xchg
mov
outsl
ljmp
out
mov
xor
aad
adc
adc
xor
lods
rorl
lret
mov
jl
xchg
out
rol
mov
push
cli
lock
stos
mov
mov
pop
sbb
out
mov
push
stos
imul
adc
or
pusha
inc
jnp
fstpl
cmpl
fwait
aas
adcb
add
jae
icebp
cmc
fildll
arpl
xchg
ret
xchg
mov
shll
dec
repnz
sbb
jb
xchg
hlt
cltd
cmp
and
pop
pop
pop
mov
cmp
mov
and
dec
insb
cs
das
es
mov
jnp
push
mov
jae
xchg
lcall
or
jge
sub
sahf
cmpsb
sub
inc
scas
cmp
mov
mov
scas
and
or
add
pop
push
cmpsl
mov
mov
out
cmp
loop
xor
pop
mov
xlat
das
fldenv
inc
dec
filds
call
inc
xor
or
xchg
sub
dec
jne
push
test
jg
movsb
mov
jl
adc
mov
lock
inc
sysenter
xorb
cwtl
add
ja
cmp
cld
cwtl
cwtl
cli
inc
scas
aam
xor
or
mov
sbb
add
scas
sub
cs
mov
xor
mov
xor
fcomps
xchg
sbb
push
pop
ds
lods
repnz
pop
mov
and
mov
push
pop
mov
inc
test
sub
push
or
js
scas
mov
in
or
sub
int3
cmpb
mov
dec
xchg
loope
lods
add
mov
cmp
pop
sbb
call
mov
mov
or
xor
jnp
jle
fs
mov
xchg
sub
jbe
cmp
xchg
pop
sbb
loope
sahf
jge
mov
in
jo
or
cmpsl
test
out
mov
mov
popf
ret
bound
sbb
cmpsb
pop
sbb
and
inc
idivb
mov
pop
or
xchg
fwait
les
jns
xor
cltd
pop
push
push
inc
out
out
clc
cmp
xchg
insb
insb
addr16
imul
dec
lock
sub
xor
out
test
dec
mov
mov
lret
pop
mov
mov
mov
pushf
gs
push
jge
pop
das
scas
or
aas
fidivrl
jp
or
jnp
shrl
rcrl
movsl
movsb
sbb
add
fnsave
mov
jb
sbb
enter
mov
adc
xchg
or
test
add
add
lock
int
es
lods
and
daa
jbe
clc
add
push
les
mov
data16
shll
inc
pop
arpl
pusha
fwait
test
push
lret
fsubr
shll
and
mov
repnz
shll
adc
mov
pop
out
or
and
dec
push
faddl
push
cmpsl
push
xchg
push
pop
sbb
mov
sbb
cwtl
test
rcll
ds
jecxz
pop
mov
ljmp
gs
cmp
xchg
mov
ljmp
pop
sub
cmp
sub
dec
out
gs
rcrb
jno
mov
icebp
jnp
push
mov
cmp
in
ret
dec
mov
jge
or
add
add
jne
cmp
mov
adc
addl
fsub
sbb
in
ret
mov
mov
lods
stos
jg
outsl
fidivl
jne
stos
xchg
in
in
or
xchg
ja
fcomip
jge
jg
xchg
jge
mov
sbb
xchg
lock
or
mov
add
inc
add
int3
and
lret
jae
jne
cmp
jnp
push
xor
jp
orb
mov
in
out
ljmp
iret
pop
and
out
adc
pop
bnd
sti
fsubrs
enter
xchg
test
mov
pop
mov
xor
movsl
xor
aam
lahf
mov
mov
or
rclb
xchg
xchg
mov
inc
daa
mov
clc
pop
mov
xchg
add
arpl
lods
mov
mov
pusha
inc
jl
filds
dec
fbstp
daa
sbbb
outsb
adc
xchg
lcall
lahf
dec
cld
xor
shrb
and
xchg
fstp
mov
out
and
fdivrl
cmp
ret
sub
add
inc
jo
mov
iret
loop
idivl
in
and
aas
sti
flds
imul
jmp
je
stc
test
jp
sahf
add
out
pop
lds
dec
and
adc
inc
sub
imul
mov
adc
mov
push
xchg
test
lahf
jns
or
ret
mov
test
inc
xor
jae
add
push
sti
pop
insl
jb
sub
cmpsb
jbe
pop
jne
xor
cmp
ret
dec
jae
lahf
call
xchg
mov
push
je
jmp
xchg
into
and
mov
hlt
ljmp
js
fldl
loope
mov
jl
clc
push
daa
nop
mov
cmpsl
gs
cvtps2pi
mov
xor
sbb
inc
push
cli
imul
push
pop
push
sbb
lret
xchg
mov
jle
in
mov
pop
rol
iret
mov
outsb
sub
stc
aas
rorl
xchg
cmpsb
mov
add
sub
adc
popa
sbb
ds
ror
mov
int3
shl
shll
inc
outsl
dec
mov
call
pushf
sbb
lahf
insb
fists
add
cmp
lcall
nop
mov
mov
mov
test
push
adc
inc
subb
stc
into
icebp
addr16
lods
addl
xor
mov
mov
inc
bound
pop
in
lret
pushf
cmc
cs
movsl
cwtl
es
lret
shr
mov
jbe
xor
xchg
or
rorl
pop
fidivs
fdivl
cmpb
push
cmpsb
rorl
pop
ret
jle
cmpsb
or
mov
unpcklps
adc
mov
out
add
test
lods
jno
sbbb
stos
aaa
xchg
daa
cltd
loopne
jne
adc
push
jo
and
std
adcb
mov
fs
fcomp
ja
lods
and
mov
or
xor
notb
notl
jge
sub
and
push
add
add
cmc
pop
repnz
xor
or
test
cmp
dec
dec
and
or
push
sar
int3
sbb
mov
out
xlat
add
int
dec
xchg
xlat
xchg
sub
mov
push
outsb
pop
ja
push
xor
stos
rcl
push
add
ja
mov
mov
or
xchg
xchg
hlt
jge
or
mov
push
shrb
cmp
pop
xchg
mov
int
push
xchg
loope
jns
or
cmp
cmp
lods
inc
punpckhwd
imul
inc
xor
mov
ret
jne
shll
pop
int
dec
inc
inc
movsb
jecxz
cmc
push
jmp
mov
int
iret
cmpsl
dec
test
xor
mov
call
in
pusha
cmp
fbld
scas
cmp
lret
jae
sti
mov
jno
icebp
lret
xchg
shll
jg
pusha
mov
and
adc
inc
stos
idivb
or
xlat
outsl
xchg
ret
or
test
inc
adc
push
mov
cmpsl
ljmp
test
cltd
insb
push
test
cmp
das
pop
mov
mull
jecxz
jg
lods
add
pop
ss
lea
cmp
cli
lock
lahf
or
jp
and
enter
cmpsb
js
gs
sub
xor
adc
subl
or
sbb
mov
ja
xor
test
sbb
out
add
divl
je
mov
mov
pop
mov
mov
push
das
push
mov
in
xor
loopne
jle
xor
movsl
lea
sbbb
add
js
aam
mov
lods
icebp
int
sbb
shll
jnp
aas
addb
mov
and
aad
pop
xor
dec
cltd
daa
inc
cwtl
std
loopne
mov
sbb
dec
repnz
xchg
jmp
pusha
jg
add
rcll
mov
add
pop
ror
leave
cmp
outsl
popf
pop
aam
movsb
inc
xlat
out
movsl
into
cli
mov
sub
in
jns
or
out
call
push
je
push
out
out
imul
mov
mov
cmpsb
aad
inc
mov
cmp
cmp
push
pop
movsl
aad
shll
lock
jle
dec
dec
loopne
pop
out
xchg
sbb
mov
mov
gs
jle
mov
scas
mov
push
jo
mov
sub
pop
fistl
popf
bswap
int3
in
fs
jp
mov
jp
shrb
xchg
xor
jmp
ljmp
in
lret
mov
xchg
mov
inc
shrl
pop
lock
mov
push
scas
pop
aas
jnp
push
jae
sahf
xor
mov
inc
mov
gs
and
insl
push
cmpsb
dec
push
jp
aas
jo
jg
cmp
dec
enter
inc
mov
mov
loopne
xchg
test
adc
insl
jp
sub
push
out
fadd
cmc
in
mov
add
adc
es
cltd
daa
mov
xchg
inc
adc
jb
popl
aas
testl
movl
ljmp
and
rcrl
mov
xchg
xorb
sub
adc
ret
ljmp
int
bound
push
out
cmp
dec
faddl
loopne
adc
call
and
std
mov
inc
aas
fdivs
js
ss
dec
scas
les
cmp
or
stos
mov
stc
ljmp
aas
or
xchg
pop
fidivrs
xchg
mov
xchg
movsb
sub
cmp
ljmp
clc
inc
test
lock
push
mov
pusha
cmp
inc
sbb
cmp
jmp
or
insb
jmp
out
add
rorl
inc
pop
cs
fstpl
fcomps
outsl
outsb
repnz
inc
inc
jle
xor
test
mov
test
add
dec
pop
ljmp
jbe
iret
xchg
mov
cmp
stos
xor
out
cmp
es
fistps
lods
sub
pop
fldl
sub
mov
test
add
pop
mov
jl
dec
and
mov
sahf
push
sub
push
add
cmc
xchg
ja
push
sub
jbe
ret
ss
not
inc
bound
dec
jne
fcoms
and
fsubr
pop
jno
int
mov
es
xor
push
jg
pushf
cs
nop
ret
mov
mov
fstps
pop
ds
or
push
mov
mov
mov
int3
xor
dec
xor
add
mov
ss
push
pop
pop
inc
xor
sahf
in
xor
jl
jnp
pop
pop
stos
movsb
jae
sub
push
in
out
push
imul
outsl
jg
outsl
or
xor
test
bound
ljmp
dec
adc
pop
movsb
in
pop
push
in
stos
push
xchg
adc
push
icebp
cmpsb
inc
cwtl
sbb
jnp
ljmp
push
xor
sti
sub
mov
shlb
or
push
dec
dec
insb
inc
lret
into
je
adc
dec
mov
daa
sub
mov
shlb
pop
in
or
int
push
call
popf
adc
mov
mov
push
fmull
inc
flds
leave
dec
cs
xorb
mov
lea
xor
testl
arpl
lea
shrl
in
je
stos
leave
jle
repz
mov
stos
enter
mov
incb
ds
sub
xlat
mov
je
cltd
mov
lcall
push
je
sub
ss
add
cmp
jns
dec
loopw
out
cltd
in
enter
daa
dec
push
cmp
out
cmpsb
sbb
xchg
mov
ds
ds
fmul
sub
fsubr
mov
mov
gs
adc
testl
pop
inc
push
sahf
ret
xor
xor
xor
les
in
rorl
aam
sbb
adc
das
dec
je
xchg
jge
and
gs
fcmovbe
cmp
jecxz
sbb
add
test
xchg
fbstp
stos
imul
and
dec
or
fadds
sub
je
ret
and
adc
xchg
adc
or
lods
mov
cmp
pop
xor
sub
aad
adc
adc
inc
ss
and
cmp
xchg
mov
jecxz
mov
mov
das
popf
jmp
xchg
xor
inc
jb
ljmp
mov
cmc
mov
dec
jo
test
mov
in
xor
stos
push
fbld
mov
nop
dec
cmpsl
fwait
jecxz
out
mov
sbb
fsub
and
or
add
sbb
mov
imul
fprem1
push
das
adcb
jb
cmp
mov
popf
fcmovne
lods
add
scas
fldl
pop
sub
roll
iret
xor
inc
pop
adc
push
cmp
addr16
jp
repnz
inc
add
ss
push
daa
push
adc
test
in
add
jne
pop
adc
mov
inc
popf
cmp
jnp
push
rcrb
xchg
or
sub
mov
mov
bound
out
xchg
push
push
push
cmp
inc
int
mov
and
or
jg
xlat
addl
dec
sbb
rcr
in
adc
lods
insb
xor
dec
sub
jle,pt
aas
cld
cli
or
xchg
xor
xchg
fildl
fstps
inc
adc
inc
cs
xchg
pop
xor
inc
adc
xchg
jnp
push
in
sbb
lret
out
mov
jmp
test
push
icebp
sti
sti
cli
or
out
mov
adcb
pop
push
outsl
out
jbe
fwait
jge
adc
imul
dec
fildl
push
adc
lahf
movb
mov
scas
or
mov
into
mov
enter
icebp
xchg
jnp
xchg
int3
aam
fucomi
jo
jecxz
int
fisubrl
sub
inc
mov
je
inc
call
pop
inc
mov
pop
dec
pop
test
add
or
aaa
and
mov
sbb
and
repnz
stos
jo
aaa
xchg
inc
sub
cli
mov
test
pop
or
clc
repz
in
clc
and
cmp
leave
xor
cmp
pop
popa
mov
jle
sbb
repnz
std
testl
pop
and
push
lods
and
cmp
lods
loope
in
mov
xchg
rcrl
xchg
mov
roll
nop
mov
mov
fistpl
addr16
rcll
imul
sbbb
mov
insl
pop
jecxz
jnp
popa
mov
fwait
in
stos
xchg
out
push
pop
adc
mov
lock
mov
push
mov
or
cltd
aam
pop
in
xor
sbb
inc
or
adc
add
rol
out
andb
out
mov
cs
in
mov
mov
scas
mov
pop
mov
into
mov
les
lret
pop
mov
inc
outsb
mov
cmp
jmp
mov
mov
jb
xor
sub
imul
aad
pop
vpaddsw
mov
clc
jbe
xor
ja
lock
and
sbb
dec
cmp
jae
gs
mov
ds
mov
lret
fildl
es
mov
or
test
insb
pop
sub
xlat
mov
and
xor
sbb
cli
push
loop
test
insl
inc
adc
lds
mov
lds
or
push
pop
pop
sbb
aad
dec
xchg
adc
test
testb
xchg
jl
shll
inc
fdivr
bound
out
push
cmc
fadd
push
push
fisttpll
popa
mov
and
jg
es
or
mov
cmp
lock
outsb
lods
sub
mov
dec
stos
pop
test
sub
loopne
loope
cli
mov
imul
dec
out
cmp
popf
mov
and
inc
test
call
popa
cwtl
jmp
add
inc
pop
aas
inc
mov
sub
cmpsl
pop
popa
jbe
lods
cmc
nop
jecxz
mov
aas
xor
cmpsl
xorb
jmp
and
inc
out
mov
roll
adcl
mov
in
leave
inc
sahf
add
push
jbe
xchg
cmp
addl
sub
adc
cltd
adc
xor
cs
hlt
pop
fnsave
in
and
fisubs
mov
jno
push
inc
and
mov
mov
sub
rolb
pop
pop
mov
mov
push
mov
add
mov
int3
bound
xchg
xlat
cmp
sti
push
cmp
gs
mov
mov
ljmp
push
lods
or
aaa
pop
push
xor
sahf
add
pop
dec
cmp
std
push
hlt
inc
pop
mov
xchg
add
jno
and
lock
jnp
loopne
push
and
clc
sub
ja
xchg
dec
mov
adcb
fstpt
inc
orb
outsl
das
and
shrb
jmp
inc
lcall
sub
mov
or
xlat
shrb
ret
enter
pop
jne
out
mov
sbb
add
mov
in
mov
and
sbb
adc
push
or
rcrl
shrb
jg
lock
push
xchg
insb
push
hlt
cs
out
jle
mov
jne
test
sub
pusha
sub
mov
sbb
fsubl
int
push
gs
inc
jp
jbe
dec
push
int3
inc
add
out
popf
xchg
pop
jmp
out
or
fildll
xchg
ss
popa
xor
push
push
pop
xchg
shrb
cmpb
mov
xor
pop
sti
outsb
mov
arpl
clc
sub
clc
lcall
inc
popa
sbb
out
fs
mov
mov
sbb
and
mov
cwtl
mov
or
push
lods
push
cmp
lret
fistl
stos
fcomps
negl
data16
mov
into
test
test
cmpb
fidivrs
push
lcall
dec
imul
pop
dec
in
repz
push
adc
out
in
ficoml
inc
cli
xchg
ja
shr
cmp
aas
inc
mov
dec
clc
mov
sbb
lret
mov
mov
je
loope
pop
sbb
sahf
or
rcll
rclb
addr16
ret
pop
mov
call
sbb
pop
shr
scas
outsb
call
inc
xchg
in
movsb
pop
les
lds
cmp
ja
out
add
mov
adc
inc
push
inc
push
repz
cmp
data16
or
pop
cmp
sbb
push
add
bound
adc
pop
mov
mov
adc
xor
rcrb
mov
outsl
xchg
jbe
sbb
mov
or
sub
xor
popa
jl
cmpsb
int
test
repz
in
stos
ljmp
xchg
push
jg
cli
and
mov
in
and
outsb
out
mov
xor
xchg
push
shrl
mov
mov
inc
push
into
sbb
lahf
ret
sub
mov
cltd
gs
dec
mov
xchg
dec
stc
jns
jle
inc
and
or
pop
fwait
dec
mov
imul
mov
ret
inc
fisttps
andl
mov
jo
or
pop
lahf
xchg
aaa
sbb
pop
push
mov
push
push
add
stc
sti
lds
adc
dec
and
fcoml
repz
mov
jbe
fiaddl
adc
cld
testb
nop
test
shrb
jo
cmp
repz
mov
mov
fwait
and
test
clc
sub
sub
es
push
xchg
push
repz
inc
pop
cmp
sti
add
mov
adc
cmc
xor
in
cs
sub
sti
sub
lds
push
sahf
xchg
call
das
popf
lea
mov
push
inc
ss
sub
inc
xor
or
idivl
shl
fs
std
lcall
jbe
push
pop
sbb
add
fisubrs
push
add
clc
lods
or
fsubr
shll
add
cmp
mov
sbb
xchg
dec
or
mov
and
lret
std
daa
pop
test
outsl
jnp
insb
jmp
testb
sbb
cmp
lock
repnz
imul
pusha
add
dec
or
adc
xchg
mov
push
cltd
mov
mov
int3
jbe
out
adc
mov
or
stos
pop
sbb
xor
mov
andl
mov
mov
or
jl
dec
aaa
out
cmpsl
or
jp
add
orl
scas
mov
cmp
add
fwait
xlat
shl
test
fdivr
bound
loope
pop
inc
bound
movsb
scas
lock
jmp
data16
mov
mov
sarb
inc
sbb
dec
sub
aas
push
lahf
dec
lods
mov
sbb
lcall
mov
movsb
aas
mov
gs
jae
out
imul
mov
lret
cmc
scas
bound
xorl
jne
jbe
loop
cmpsb
sbb
adc
dec
cmp
les
shll
cmp
jp
lods
dec
jbe
lcall
dec
push
shr
int
into
sbb
orb
idivb
adc
in
pop
xor
mov
add
pop
mov
int
or
sub
mov
popf
rorb
add
mov
js
push
sbb
addl
repz
and
fldt
les
out
jo
fs
sahf
xchg
aas
data16
sarl
sub
ljmp
mov
repz
mov
cs
or
mov
push
arpl
repnz
test
or
fwait
movsb
das
ret
xor
jae
fwait
adc
mov
mov
lcall
sub
dec
call
mov
push
mov
popf
insl
out
dec
nop
push
roll
mull
lea
push
push
ret
leave
je
popf
imul
out
cmpsl
out
adc
mov
pop
jp
mov
int
sti
push
jp
test
jge
test
enter
js
ficomps
js
adc
inc
cmpsb
inc
push
iret
or
dec
adc
cmpsl
js
mov
xor
enter
pop
adc
sub
pusha
negb
scas
loope
push
out
dec
pop
pop
daa
pop
test
push
data16
lcall
jne
cmp
push
push
das
shrl
cltd
pop
cs
test
sub
cld
jnp
subl
inc
roll
sub
xchg
xchg
gs
and
test
inc
push
and
bnd
es
adc
testb
std
push
scas
sbb
scas
adc
mov
lret
addl
fcompl
sti
mov
nop
jg
fs
idiv
aas
scas
and
adc
mov
pop
add
sti
gs
rcrl
lods
sbb
push
lea
fsubl
push
int
jae
pop
outsl
xlat
mov
push
jno
cmp
xchg
cmp
adc
mov
addr16
mov
mov
fsubrl
inc
push
arpl
cmc
dec
clc
cmp
and
push
shll
bound
fmull
sbb
repz
mov
or
std
fildll
mov
shlb
out
pop
sbb
outsb
xchg
inc
les
jge
enter
fldcw
and
aam
cmpsb
in
cmp
adc
adc
aaa
jecxz
inc
stc
out
jns
xchg
and
sbb
out
and
jo
pop
shrl
sbb
jmp
sbbl
into
jge
xchg
std
lock
mov
adc
mov
sarb
mov
nop
xor
rclb
shlb
lret
cmp
jl
cmp
test
jno
push
popa
inc
or
jmp
lahf
mov
cmp
in
imul
test
mov
push
lret
jg
pop
push
dec
in
adc
xchg
xchg
mov
and
cmp
out
test
mov
cltd
mov
popl
adc
dec
and
ja
aas
or
adc
mov
pop
ret
mov
out
mov
push
xchg
das
push
dec
mov
fbstp
xor
ficomps
jp
sbb
jg
push
pop
cltd
cli
mov
push
shlb
xchg
fstpl
cvtps2pi
add
mov
popf
enter
pop
sub
cmp
mov
adc
push
sbb
mov
sbb
and
sar
dec
data16
sub
icebp
mov
push
lret
pop
xchg
adc
lcall
add
xor
insb
outsb
std
xor
jo
jne
inc
rol
jb
imul
jmp
mov
mov
ja,pt
mov
fisttpll
and
insb
adc
adc
ljmp
insl
into
fsubrp
cld
sbb
push
xchg
xchg
shlb
inc
es
mov
push
pushl
jno
jle
fidivrs
dec
imul
insb
repnz
mov
int3
into
jns
xchg
push
sbbb
adc
push
dec
out
dec
push
hlt
inc
sbb
jbe
repnz
int
jle
jmp
xchg
mov
out
xchg
mov
repnz
popf
test
inc
push
jns
add
jae
jbe
jge
pop
das
jge
dec
mov
mov
ja
sub
cmpsb
mov
les
popf
jge
cmpsb
mov
lock
pop
mov
dec
clc
pop
xchg
mov
dec
imul
pop
mov
repz
cs
into
stos
mov
xchg
jnp
xchg
movsb
jnp
enter
add
jns
sub
add
iret
movsl
shl
lods
dec
xchg
jns
mov
xor
cmc
mov
lret
xor
pop
and
cwtl
push
mov
inc
fbstp
push
fisttpll
cwtl
into
xchg
test
es
sub
ds
stos
insb
pop
lods
das
mov
jae
lock
orb
cmp
les
jp
dec
dec
pop
lds
push
mov
gs
rolb
pop
mov
mov
fadds
and
repnz
xor
and
aad
imul
sbb
push
sahf
adc
cmp
out
mov
jg
shll
sti
or
jb
in
movsl
sti
sti
mov
mov
xor
sbb
add
out
std
cmp
add
sahf
fisubrs
inc
adc
mov
push
sti
sub
fwait
xor
vmread
daa
jb
fisubrl
lret
add
ret
inc
push
cli
out
mov
mov
or
xor
mulb
cmpsb
out
mov
jbe
cmp
lahf
mov
insb
cmpl
inc
pop
imul
loopne
enterw
add
pop
and
fcomps
pusha
out
mov
ucomiss
outsl
push
ror
inc
sub
mov
cli
jmp
es
fs
fldenv
icebp
pop
mov
leave
pop
imul
sbb
pop
imull
repnz
test
out
mov
xor
pop
in
jge
xchg
inc
add
arpl
pop
mov
xchg
insl
aas
push
or
sub
pop
pop
outsl
mov
jne
subb
dec
icebp
nop
and
int3
xchg
lds
addr16
xor
mov
nop
add
shll
push
leave
mov
js
xor
cld
sbb
insb
push
mov
or
negl
fwait
out
push
push
sbb
sbb
orb
mov
aad
or
xor
push
push
hlt
cmp
pop
popa
outsb
inc
lods
aam
sub
sbb
add
xor
ret
out
leave
or
das
xor
mov
div
loopne
xchg
andl
fcmovnu
pop
sti
cmp
cld
shl
xchg
sub
shlb
aam
cmpsb
inc
rorb
mov
fsubrl
int3
test
push
inc
cmpsl
xlat
push
mov
jns
mull
gs
xchg
push
int
push
aas
push
int3
fidivs
sub
sub
and
adc
mov
ljmp
mov
mov
sub
out
sbbb
jg
inc
aaa
rcrb
pop
cmp
clc
setl
gs
inc
das
pushl
mov
or
or
xor
out
and
shll
adcl
daa
test
out
xor
adc
dec
divb
stos
adc
add
cmpsb
sti
dec
leave
cmp
popa
fsubp
repnz
testb
sbb
mov
pop
mov
test
fsubl
popf
sbb
in
add
in
or
stos
fs
mov
arpl
jg
in
adc
cmp
shll
into
or
pop
cmp
pop
mov
or
dec
in
mov
jne
cmp
mov
push
repnz
jge
push
cld
jno
pop
testl
push
pop
pop
inc
imul
sub
add
ss
cmp
sub
mov
scas
enter
out
scas
in
mov
jmp
daa
adc
out
cwtl
push
mov
sub
adc
sbb
cmc
push
clc
cmpsl
out
out
mov
and
ljmp
lret
mov
fists
cmpsb
sahf
cmp
notb
out
insl
nop
inc
xchg
insl
shrl
cmp
clc
inc
mov
loop
cmp
xchg
fiaddl
lcall
aaa
push
push
fisubrl
negb
jge
mov
sti
jns
leave
lods
mov
bound
or
xchg
cltd
dec
mov
adc
xchg
mov
lcall
mov
xchg
push
std
shll
and
and
insb
cmpb
ret
fimull
and
inc
or
cmp
rcpps
aaa
and
lahf
fildl
addr16
dec
jb
nop
mov
xchg
addr16
xchg
bnd
pop
mov
aam
bound
mov
cltd
cwtl
mov
inc
dec
andb
mov
shl
and
int3
sbbb
and
hlt
stos
sub
and
adc
pop
inc
dec
push
ret
ss
xchg
dec
add
mov
pop
cmp
xor
add
mov
and
loop
inc
pop
jbe
and
stos
add
mov
lahf
mov
push
call
loope
lods
xlat
inc
mov
mov
push
add
xor
sub
movsl
adc
or
test
loope
cmp
mov
fsubrs
nop
ret
les
jnp
scas
xchg
or
insl
mov
int3
dec
int3
popf
addr16
out
xor
lret
dec
xor
pop
popa
mov
in
xchg
movl
mov
inc
and
orb
add
and
insb
xchg
jns
lds
mov
sti
and
data16
sub
hlt
cvttps2pi
lret
xor
das
push
pop
sub
lds
xchg
cwtl
nop
negl
iret
sbb
int3
inc
bound
adc
pop
jp
sub
pusha
aad
push
call
outsl
cmp
inc
xchg
push
dec
push
andb
dec
out
in
inc
dec
jmp
scas
fsubr
ds
divl
sub
inc
loop
arpl
das
push
add
sub
popf
mov
aad
xchg
lcall
cli
adc
or
push
adc
pop
test
dec
out
icebp
enter
inc
bound
repz
push
iret
test
lea
imul
jne
lret
test
push
dec
lcall
int
cwtl
sub
imul
adc
or
push
mov
jmp
lods
cmpsl
mov
dec
xor
fnstsw
call
fwait
jp
stc
add
mov
sbb
push
jb
cmp
aam
in
ret
xor
fdivp
addl
aam
or
mov
xor
and
cmpsl
test
xadd
test
xchg
fldenv
dec
mov
sbb
pop
sub
mov
inc
sbb
and
dec
in
addr16
pop
push
jnp
data16
mov
lock
mov
lock
jbe
mov
sahf
nop
dec
aas
pop
enter
fdivp
mov
cmp
dec
mov
icebp
mov
cmc
mov
int
add
sub
jl
mov
mov
call
dec
sahf
aas
inc
mov
xor
or
call
push
sbb
rolb
outsl
ljmp
lret
pusha
cmp
mov
lds
adc
sub
pop
das
jnp
in
sub
into
pusha
pop
sub
andb
add
in
mov
mov
test
in
dec
arpl
shlb
or
and
shrb
rorb
ss
and
imul
fprem1
repz
jmp
jle
adcl
inc
inc
icebp
fsubr
push
dec
outsb
inc
mov
imul
js
cmp
xor
jbe
cmp
loopne
dec
cmpsb
pop
add
pop
mov
ss
xor
xor
adc
scas
sub
cltd
pop
cmp
xor
add
cmp
lock
fucom
ja
outsb
xchg
fiaddl
test
xchg
ret
repz
lret
and
mov
jae
std
sbbl
arpl
negl
mov
adc
cmpsl
fmuls
mov
mov
cmpsl
neg
imul
fstl
mov
pop
inc
ret
std
pop
cltd
lret
and
and
daa
mov
sahf
or
push
or
pop
and
mov
jge
mov
and
push
scas
push
out
movswl
mov
jecxz
and
sti
lret
iret
cmpsl
inc
test
push
pop
pop
fstpt
fisubrl
outsb
inc
lods
sub
mov
sbb
push
adc
lcall
xor
push
jb
sbb
test
and
dec
cwtl
mov
mov
faddl
outsb
mov
xchg
inc
xlat
and
bound
mov
xor
addb
pop
lock
pop
leave
fidivl
iret
ret
xchg
push
xchg
popa
xor
jmp
adc
divb
inc
push
fcom
sbb
jp
mov
aaa
in
f2xm1
lret
lret
add
mov
xchg
repnz
mov
xchg
mov
pusha
sarl
jo
push
jns
xchg
out
addl
mov
jbe
dec
test
cmp
clc
das
xchg
push
cmp
imul
sbb
bound
mov
xchg
xlat
sarl
mov
loopne
jle
jmp
mov
push
pop
ret
fstpt
mov
or
mov
in
rcr
jno
enter
or
push
shll
jge
sbb
jg
rorb
loop
add
xlat
mov
jmp
pop
repnz
insl
testb
or
popf
repz
in
add
push
dec
loopne
in
cmpsl
aaa
pop
lcall
inc
xor
fldcw
das
gs
lds
jp
mov
xor
or
loope
mov
std
fimuls
in
mov
xchg
je
sti
mov
cvtps2pd
test
jle
out
aaa
pop
mov
vmovntps
add
and
lret
das
adc
test
pusha
and
test
lahf
xlat
mov
clc
dec
mov
xorl
fdivl
adc
xor
mov
fidivrl
pop
into
lret
jns
dec
in
shlb
push
sbb
jb
fwait
iret
lcall
cmpsl
loopne
mov
cmp
add
test
clc
hlt
neg
rcr
push
jbe
and
lcall
lcall
iret
fwait
insl
add
call
in
push
jno
ret
shrl
lods
push
fisubrs
jbe
rorl
int3
loopne
add
push
dec
adc
test
xchg
nop
cmp
je
das
xchg
sbb
cmp
pop
pop
push
scas
mov
inc
cs
aaa
add
inc
adc
imul
pop
jg
fnstenv
xor
inc
cmp
inc
xchg
add
xchg
cltd
cmc
push
int3
mov
movsb
mov
adc
cmp
mov
jg
sub
popf
popf
cmp
dec
jecxz
mov
fs
stos
cmp
sub
jecxz
hlt
lods
cmpsl
fwait
cmpsb
popa
lds
rclb
enter
push
and
sti
sbb
add
out
shlb
lahf
mov
mov
jmp
sti
cmp
movl
ret
mov
xchg
fcom
out
or
fdivrp
push
mov
pop
mov
dec
cmp
loop
sbb
sub
push
push
out
add
adc
inc
mov
xchg
push
sbb
and
fildll
push
pop
sub
cwtl
je
jnp
xchg
cmpsl
sbb
repnz
jns
repnz
mov
jns
dec
push
in
sbbb
cmp
frstor
push
dec
not
nop
pop
popl
test
sbb
call
popa
ss
popa
mov
sub
push
and
out
cmp
pop
movsl
ror
jns
cmp
cmpsl
pop
in
js
dec
sti
sub
cli
fnstcw
mov
jl
orps
mov
add
sub
pop
fsubrl
mov
push
iret
lahf
mov
neg
mov
push
pop
fisubs
fsubl
xchg
pop
inc
pop
mov
test
sub
add
xor
repz
mov
jge
push
xor
insl
sub
jmp
and
adc
dec
shll
arpl
mov
pop
mov
jmp
jmp
push
lret
sbb
push
lds
cmovo
jns
jp
test
ljmp
scas
iret
imul
mov
dec
mov
mov
js
jne
test
xor
cmp
sub
dec
mov
push
push
loop
add
lahf
mov
mov
inc
mov
xor
pop
into
or
pop
es
lcall
pop
shlb
xor
or
jae
push
rolb
ss
and
sub
adc
jno
xchg
out
stos
push
sbb
jns
clc
mov
bound
add
js
fcomp
xchg
imul
jge
pop
push
mov
pusha
scas
mov
lock
test
cmpsl
insl
repz
mov
dec
xor
push
fwait
mov
and
adc
adc
stos
mov
mulb
inc
dec
jp
jbe
stc
push
clc
stos
popf
sahf
sbb
adc
dec
js
aam
inc
dec
mov
dec
mov
loope
in
dec
jmp
dec
cltd
adc
sbb
or
mov
push
imul
lret
ret
mov
mov
jne
xor
dec
lret
push
leave
insl
push
loopne
popa
fnstenv
popa
lea
gs
dec
fwait
cs
inc
jg
loop
lea
jno
mov
pop
pop
adc
adc
shl
fdivl
outsb
jp
ljmp
mov
fnstsw
in
aaa
dec
icebp
cmpb
push
enter
sbb
fsubrl
orl
roll
orl
subl
push
imul
and
and
pop
mov
jecxz
lea
pop
int
jbe
repz
dec
in
pop
cwtl
sub
xchg
jp
iret
cmp
push
inc
sub
mov
mov
push
pop
jmp
or
adcl
mov
jg
hlt
or
das
cwtl
frstor
stc
aad
ljmp
dec
div
adc
jg
mov
pushf
pop
popa
dec
inc
incb
stos
arpl
jno
clc
sub
mov
or
pop
sub
dec
jnp
scas
rorl
fsubrs
push
adc
pop
imul
inc
xor
sub
dec
ss
inc
push
andl
sbb
insl
cmp
sub
stc
jmp
repz
movsl
mov
aaa
jmp
push
mov
push
mov
sub
inc
sarl
shr
mov
cmp
sahf
jnp
xor
cmp
jns
jnp
inc
add
jno
inc
sub
or
adc
movsb
je
movsb
rcrb
push
stc
mov
inc
adc
rorb
test
sti
imul
sub
or
int3
mov
stos
mov
cld
in
ds
cmc
lods
mov
xor
and
mov
call
call
or
popa
push
ficoml
scas
fstpl
cmp
aam
mov
loopne
bound
out
cmp
shll
lahf
jb
repnz
bound
dec
in
bnd
jmp
je
movsb
test
popf
out
mov
or
xchg
rolb
adc
jge
sub
mov
cmp
lahf
aas
inc
jae
in
sbb
or
push
int3
int3
mov
popa
aad
or
or
xchg
std
mov
pop
fs
stc
jg
pop
int3
ja
push
mov
xor
imul
sbb
mov
rclb
aam
dec
add
push
sbb
lea
fsts
xchg
rorb
sbb
fisubl
test
push
inc
sbb
sub
stos
pop
cmpsl
int3
inc
mov
xchg
mov
andl
sbb
adc
mov
mov
add
lock
and
addr16
dec
sub
sub
loopne
je
xchg
frstor
jge
push
or
mov
jae
cmpsl
cmp
or
loopne
cmp
subl
cmc
aad
cmp
pusha
pop
or
mov
insb
dec
data16
or
jae
leave
test
mov
push
jbe
enter
nopl
cmp
inc
clc
jmp
push
mov
fmul
jl
gs
out
and
inc
imul
daa
repz
cmpsl
or
rorb
ljmp
pop
add
aas
out
jmp
jb
vpor
add
mov
ret
or
andl
out
mov
adc
push
ds
or
xchg
insb
test
pop
repz
fwait
xchg
stc
aad
xor
ss
loope
sbb
xor
mov
adc
mov
and
pop
jp
lahf
call
lret
cmp
ret
mov
mov
or
sbb
cltd
xchg
or
in
movsl
movsb
popa
sub
adc
mov
sbb
rsqrtps
fisubrs
jbe
fcoml
icebp
jne
shlb
xor
int
xor
jecxz
xor
int
jbe
cltd
pop
push
cmp
sbb
aaa
dec
in
mov
sub
or
mov
mov
clc
sub
rcrl
mov
xchg
mov
push
shrl
fldt
out
pop
stc
lahf
fstpl
inc
bound
sub
jbe
nop
sub
push
push
cmpsl
dec
popa
jle
cmp
or
inc
mov
es
icebp
cmp
loope
into
in
xchg
xchg
scas
or
mov
jp
add
dec
es
mov
test
cmp
pop
mov
and
or
push
push
mov
cli
xchg
mov
cmp
mov
sbbb
add
pop
shlb
jns
or
fs
aam
loopne
mov
cmpb
sarb
xchg
and
int
lcall
lret
sub
pop
adc
add
jne
cld
pop
stos
mov
mov
jmp
repnz
lods
sbb
fldt
sbb
mov
dec
dec
pop
ret
mov
call
mov
mov
ss
movsl
out
or
frstor
pop
push
out
pop
into
js
cmp
jo
push
mov
xorl
test
mov
mov
int3
cld
cmp
fsubs
jnp
in
je
jne
adc
mov
jecxz
notb
add
jl
lods
popf
pop
sbb
add
call
es
rolb
xor
lahf
fsubrl
or
adc
pusha
dec
leave
or
ret
test
adc
subl
out
clc
mov
dec
pop
aas
and
mov
pop
cmp
pop
adc
mov
and
cmp
sbb
out
je
cmc
ds
mov
ror
push
jns
mov
outsb
idivl
mov
imul
push
in
xchg
outsl
in
lret
inc
scas
add
loope
and
jecxz
loope
test
jno
pop
sub
mov
call
shlb
jg
cltd
dec
data16
sub
cmc
or
addr16
in
pop
pop
mov
xchg
faddl
pop
sbb
call
mov
xchg
jb
jbe
cmpsb
stos
jne
inc
imul
jge
inc
mov
pop
xchg
mov
bound
mov
mov
out
push
pop
jge
xor
jl
jge
push
push
dec
xchg
xchg
xchg
mov
icebp
xchg
dec
shr
aaa
dec
das
out
mov
jmp
sbb
push
inc
dec
xchg
fisttps
fcomps
loope
lds
fisubrl
movsl
push
aaa
cmc
pop
cltd
cwtl
add
sarl
cs
mov
mov
xchg
xchg
nop
and
aad
mov
sbb
test
mov
scas
fcoml
je
pop
lret
orb
jge
idivw
scas
push
dec
pop
sub
movsl
and
sti
add
mov
inc
push
not
xor
xor
or
inc
loope
jl
mov
pop
dec
pop
and
out
xor
push
in
mov
pop
fwait
xchg
xchg
adc
repz
cmpsl
or
pushf
out
cmc
fwait
dec
inc
ss
dec
pop
xor
call
sar
sbb
xchg
mov
add
xchg
sti
push
hlt
or
lcall
dec
sbb
xor
sub
movsbl
js
add
xchg
mov
cmp
lret
or
mov
add
dec
ja
int3
pop
ljmp
in
fisubrl
sub
imul
clc
data16
push
notl
imul
sbb
and
adc
sahf
repnz
cmp
fcmove
xchg
mov
js
enter
enter
xlat
int3
pop
jmp
aad
fsts
xor
xchg
lock
cmp
push
xchg
pushf
adc
or
rcr
imul
pop
lret
pop
scas
adcb
sti
and
jae
add
jb
roll
inc
shl
mov
test
daa
pushf
cmp
das
ljmp
clc
push
out
out
nop
inc
inc
mov
test
nop
dec
in
add
add
loope
jo
sub
and
adc
pop
xor
mov
out
xchg
sbb
insb
repnz
cwtl
aam
out
dec
inc
or
aas
inc
inc
pop
jae
jge
daa
mov
cmp
fwait
testl
jo
sub
sti
aam
push
je
dec
dec
leave
sbb
js
cltd
rcll
fdivl
shl
fsubl
cmp
pop
insl
das
pop
jle
or
or
dec
dec
scas
daa
dec
mov
push
std
imul
stos
pop
xor
xor
mov
mov
in
or
out
iret
mov
jnp
xor
fdivrs
and
lcall
push
mov
mov
mov
cwtl
xchg
jae
push
dec
test
aaa
cmp
into
xor
pop
shr
in
fs
ja
shlb
xchg
clc
pop
and
in
cmp
cmp
inc
mov
outsl
in
sub
pop
imul
scas
in
adc
mov
lret
adc
jecxz
rcrb
mov
repnz
negb
insb
or
mov
insl
push
inc
fiaddl
shl
xchg
imul
push
mov
jge
xchg
pop
sub
ds
xchg
fwait
nop
std
push
das
pop
fs
loope
fcomps
dec
push
in
fwait
ds
fnstsw
bound
cmp
in
das
push
mov
sbb
sub
push
icebp
fldlg2
push
stos
add
inc
and
push
ret
sub
es
and
push
pop
dec
adc
mov
inc
push
lret
scas
push
xchg
test
mov
pop
lcall
aas
fldl
pop
scas
pop
jo
hlt
pop
xor
push
jns
or
xor
push
lret
stos
fcoml
xchg
sar
out
dec
or
mov
and
add
daa
dec
cmp
mov
data16
mov
xor
xor
adc
or
stos
push
jbe
sub
cmp
xor
mov
lret
add
push
pop
jne
sbb
jp
fists
insl
lcall
nop
icebp
xchg
negb
ss
rol
cmpsb
cwtl
dec
test
pop
out
hlt
hlt
add
in
aad
lcall
test
in
pop
xor
loopne
daa
fwait
mov
pop
cmp
rorb
mov
sub
rcrb
xchg
pop
mov
stos
aaa
test
iret
mov
dec
cmp
call
das
lret
mov
push
xchg
or
in
loopne
sbb
je
test
adc
xor
xlat
mov
icebp
sub
xchg
pop
mov
xchg
xchg
jmp
mov
jmp
push
aaa
mov
push
das
dec
adc
mov
clc
cmp
xchg
mov
dec
jle
icebp
movsb
aam
mov
lret
stos
adcb
out
and
mov
jb
fstps
cmpsl
mov
sbb
push
fbld
jg
inc
popa
outsb
sub
fcmovnb
sub
int3
idivl
sbb
out
cmp
jns
cmp
xchg
js
add
es
mov
mov
sbbb
sbb
add
inc
out
hlt
ret
xor
sbbl
scas
inc
mov
js
jle
mov
jne
cwtd
dec
sarb
and
mov
sbb
das
sbb
movsl
lea
fs
in
jb
stos
cmp
imulb
fmulp
cmpsl
ret
mov
cmp
test
add
in
cmpsb
inc
leave
fnstsw
sub
ja
push
jle
pop
inc
cltd
push
lahf
dec
aam
and
inc
pushf
add
testb
stc
pop
aad
std
decl
out
lock
jo
jnp
xchg
addr16
stos
icebp
sbb
fwait
repz
aas
push
mov
sti
enter
enter
dec
lret
cmp
sub
push
xor
daa
mov
cmc
mov
push
test
leave
mov
mov
pushf
add
jno
scas
push
inc
xchg
xor
jo
aad
or
and
sbb
pushf
shrb
dec
int3
adc
outsl
ja
ljmp
sbb
pand
shl
lcall
pop
enter
das
adc
sbb
xchg
or
mov
rorl
test
xlat
movsl
jmp
lea
adc
push
in
lret
or
std
pavgb
mov
cmc
jecxz
jl
push
mov
loope
pop
fildl
inc
xor
and
xor
movsb
jns
pusha
lds
ja
jl
push
shlb
out
add
cmp
lcall
add
lret
lret
in
mov
add
jns
xor
ret
outsb
rorb
pop
call
incb
add
movsb
mov
adc
scas
mov
cmp
inc
leave
pop
in
repnz
mov
mov
push
aaa
sbb
cltd
lock
ss
mov
sbb
jne
jmp
js
test
out
adc
mov
fimull
adc
std
and
clc
int
addr16
rcrb
pop
xchg
loope
pop
in
adc
xor
in
jbe
ret
cmp
mov
jae
jge
sarl
cmp
sbb
mov
inc
sbb
push
cmp
mov
xor
cwtl
mov
in
fsubs
lods
stos
inc
bound
es
mov
xor
and
dec
jg
cltd
ret
mov
lea
xchg
jns
aaa
lcall
rorl
inc
adc
adc
je
int3
sarb
inc
pushf
jns
test
fists
sbb
sbb
jg
jmp
shlb
ss
sbb
sarb
jo
lret
and
inc
cmc
push
xor
sbb
add
jp
cs
xchg
mov
lods
stos
cmp
aaa
nop
in
loop
mov
adc
xchg
fsubl
fldenv
mov
leave
mov
add
jo
aam
sarb
lcall
sub
ja
pop
or
xchg
cmp
dec
push
fs
jo
rcrl
sbb
add
out
js
add
jbe
mov
inc
jbe
mov
fcmovbe
sarl
xchg
dec
lds
mov
scas
jle
fisubl
data16
jge
ret
out
sub
fstl
pop
jp
ficoml
jecxz
pop
ss
mov
mull
sbb
push
cmc
xor
sbb
outsl
lods
sahf
cmpsl
js
stc
pop
cmpsb
cmpsb
int3
pop
in
and
test
or
fstpt
lods
out
das
cmp
data16
mov
lahf
jb
call
sbbl
aas
xor
adc
arpl
mov
adc
out
sbb
lds
pop
mov
cli
sub
xor
adc
jle
mov
aaa
and
aad
mov
jp
cmp
pop
xlat
inc
subb
fdiv
xor
mov
push
adc
in
std
sbb
or
push
mov
loop
xor
push
in
in
pop
daa
int3
mov
ds
dec
mov
cmp
rcrl
and
pop
les
les
push
xchg
loope
add
xor
loop
repnz
out
addr16
ljmp
nop
push
mov
cmp
jg
pop
lcall
cs
push
das
mov
jae
test
fcmovnbe
cmp
lahf
scas
sub
xchg
mov
inc
push
test
aas
cwtl
mov
adc
es
sub
push
cmp
insl
lds
dec
lret
sbb
add
scas
mov
inc
loopne
sub
addr16
inc
scas
sub
xor
dec
mov
pop
icebp
inc
mov
jns
jb
sub
adc
imul
out
mov
or
xor
xor
ffree
adc
mov
in
or
das
mov
js
insb
in
mov
add
ss
negl
jb
int
ret
jle
mov
imull
dec
dec
push
into
andl
adc
sar
jecxz
mov
push
int
movsb
arpl
dec
call
clc
adc
stos
daa
faddp
xchg
fstps
rclb
jno
sbb
jmp
jne
xor
inc
cli
movsl
jbe
in
cmpsl
adc
mov
mov
mov
cmp
add
mov
mov
add
or
imul
xchg
movsl
jge
sub
les
and
ret
jge
pop
iret
andb
in
cmpsl
sahf
sub
cmc
loop
stc
aam
lcall
mov
scas
pop
sbb
mov
cmpsl
fs
in
flds
icebp
movsb
shlb
push
push
mov
aas
fidivrs
movsl
mov
stos
lcall
jl
out
pop
lea
or
cmp
xlat
gs
pop
mov
pop
out
outsl
imul
fs
cld
ja
cltd
jmp
out
pop
sbb
push
aas
fsubl
mov
sbb
out
adc
fldenv
lds
xchg
cmc
out
out
adc
shll
shlb
push
or
jg
mov
fistpll
xor
rol
int3
sub
imul
xchg
sbb
into
stc
and
cmp
aas
icebp
or
push
loopne
js
push
lods
mov
add
or
ss
and
ret
add
push
xor
mov
into
sarl
xor
lock
push
or
jnp
pusha
shl
stos
sarl
mov
jg
aam
sahf
and
test
mov
mov
xor
loop
data16
push
inc
push
fsubrp
jp
cmpsl
push
or
xchg
cltd
sbb
or
push
cmpsl
cwtl
sub
stc
sti
hlt
xor
adc
mov
leave
pop
lea
je
lret
mulb
or
imul
sub
pop
push
mov
lods
add
mov
arpl
ffreep
notb
vpsubsw
aaa
adc
jns
add
push
sbb
dec
mov
out
push
pop
mov
mov
mov
or
mov
fdivl
and
adc
pushf
xor
xchg
and
sub
cmp
cmp
decb
adc
xchg
push
cmp
inc
xor
adc
sub
adc
mov
or
push
push
lock
push
xor
mov
fadd
mov
fldt
cmp
mov
aam
xchg
lret
mov
testl
mov
movsl
mov
dec
jae
pop
loopne
pop
lret
xor
scas
adc
xchg
mov
inc
andl
rorb
pop
mov
jle
sub
arpl
mov
sub
mov
and
icebp
lcall
xor
xor
mov
mov
xchg
imul
sarl
mov
pop
sbb
sahf
push
repz
lret
shrl
aad
adc
jae
int
sbb
or
stos
or
dec
mov
cmp
fcmovnb
bnd
inc
pop
std
push
icebp
mov
hlt
int3
test
repnz
cltd
xor
jge
arpl
jg
jb
and
pop
add
lods
mov
aaa
adc
jnp
sbb
fisubl
mov
in
lret
mov
jmp
fisubs
popf
inc
mov
and
rol
jne
push
daa
sub
fnsave
xchg
enter
gs
iret
dec
in
add
add
jne
cmp
jg
icebp
arpl
pop
scas
lds
cmp
insl
loop
mov
mov
push
test
push
aam
mov
jmp
subl
xchg
stos
out
and
cmp
jl
pop
ljmp
lods
sub
enter
sahf
xchg
out
pop
shrl
or
push
subb
inc
mov
or
test
out
cmp
ja
in
mov
mov
test
mov
jns
push
mov
mov
pop
or
mov
xor
in
cmp
aaa
pop
arpl
mov
mov
addb
jmp
lds
xor
pusha
mov
push
mov
mov
mov
mov
push
adc
icebp
iret
jbe
sysexit
stos
jno
pop
aad
fs
call
sbb
inc
xor
inc
pop
mov
sarb
fstps
stos
insb
loop
add
xor
adc
dec
mov
cmp
stos
mov
sub
int
xchg
out
mov
add
scas
add
mov
mov
and
xor
js
mov
inc
std
sub
push
stc
xchg
jbe
cmp
adc
jge
dec
or
jne
and
arpl
outsl
xor
cltd
push
xor
xchg
add
add
lret
jmp
sti
das
mov
stc
xor
scas
std
push
add
daa
ja
sarb
dec
sbb
cli
notl
scas
gs
inc
mov
ss
sub
pop
loopne
orb
or
sbb
pushf
sub
fisubl
inc
negl
nop
cmp
nop
fistpl
push
mov
jne
cmpsb
call
in
arpl
push
dec
fcompl
mov
pop
daa
in
sbb
adc
sbb
or
mov
insb
sahf
fldcw
adc
adc
xor
stc
add
push
ret
jnp
andl
scas
dec
push
out
pop
or
mov
push
sbb
in
cli
inc
cmp
rorb
mov
sub
jp
in
and
push
inc
mov
fcom
fistpll
jl
jle
mov
push
loope
sub
stos
and
xchg
dec
nop
aam
repz
push
shlb
cld
sbb
or
fsts
fsts
les
into
rcrb
imul
js
push
jl
and
flds
pop
push
or
sarb
xchg
push
mov
pop
out
push
out
lock
xchg
imul
inc
jecxz
jmp
or
dec
lret
jo
cmp
adc
shll
push
scas
arpl
inc
xor
dec
push
imul
add
xchg
or
das
je
movsb
sahf
xor
jne
in
push
add
pop
lret
cmp
push
aas
sub
test
push
fs
and
mov
xchg
cwtl
lahf
xchg
or
test
and
in
pop
sub
icebp
fs
idiv
fimull
jle
movsb
push
dec
jbe
cld
int
les
out
pusha
int3
outsl
pop
cmp
sahf
push
fldcw
hlt
mov
push
lret
shr
mov
fisttps
lods
fcmovnbe
les
test
pushf
adc
jl,pn
cmc
mov
adc
sbb
test
dec
je
lods
lcall
mov
stc
mov
movsl
test
out
aad
aam
inc
lods
nopl
jnp,pn
daa
cmp
pop
daa
pop
sbb
aad
mov
jbe
aam
adc
imul
icebp
lods
in
sub
mov
and
add
lahf
mov
out
fdivs
ljmp
iret
push
push
mov
lds
pop
repz
ss
scas
insb
fstpt
fucomp
mov
bound
mov
dec
movsb
sti
pop
xchg
ffree
mov
test
test
pop
in
stos
push
repnz
xchg
shll
xchg
adc
pop
daa
fldl
jg
jae
cmpb
add
scas
sti
xchg
inc
jmp
xor
xchg
aas
push
cmp
xor
cld
mov
pop
mov
loope
xchg
mov
out
mov
stos
lds
xor
or
leave
or
aad
shlb
dec
push
paddsw
mov
cs
or
imul
aaa
add
or
lret
sbbl
lahf
or
jo
dec
fisubl
push
aaa
lods
sub
pop
jo
or
leave
mov
push
pushf
stos
fisttps
iret
mov
ds
lahf
xchg
ljmp
outsb
mov
movsb
xchg
cli
push
daa
insl
jb
ret
or
punpckhwd
jmp
aas
xor
ljmp
flds
xchg
pop
sub
shl
fistps
cmp
in
out
mov
fbstp
sahf
mov
mov
cs
ror
jecxz
jno
dec
push
mov
push
insb
cld
lret
push
inc
imul
pushf
int3
cmp
dec
fs
jmp
mov
out
sti
scas
test
sub
pop
inc
pop
jmp
inc
jo
adc
addl
cli
int3
iret
mov
jp
ja
popf
stc
sub
or
xor
add
pop
cmp
iret
inc
pop
push
test
aad
aaa
xor
mov
insl
cs
fisubrs
mov
or
add
rol
dec
pop
and
mov
or
enter
bound
jno
mov
outsb
scas
in
cmc
jno
cli
repnz
int
subl
xchg
pop
sub
scas
call
test
outsb
ja
mov
inc
dec
push
add
in
pop
sbb
sbb
push
clc
imul
pop
test
lods
xchg
adc
xor
and
jbe
imul
inc
test
sarl
popa
es
cmp
stos
jmp
push
outsb
aam
pusha
outsb
popa
loop
xchg
adc
popf
pushf
sahf
jne
outsl
add
inc
int
fwait
test
and
enter
out
lcall
cmpsb
pop
int
or
cmpsl
push
ret
daa
mov
sbb
hlt
or
pop
cmp
pop
loope
pop
mov
sbb
hlt
fldt
loopne
cmp
shlb
pushl
jne
int3
mov
pushf
hlt
imul
arpl
outsb
add
sub
fucomp
mov
xchg
fmulp
sub
mov
jge
sub
fwait
sub
xor
gs
in
push
push
mov
in
leave
jmp
sub
mov
sbb
std
imul
adc
sahf
jo
rorl
lcall
push
jb
loop
out
nop
adcb
mov
jo
pop
pop
arpl
lahf
idivb
sub
fidivrs
aas
xor
cmp
lds
lods
mov
loope
sbb
daa
adc
lds
and
int
daa
xlat
insb
mov
mov
add
aam
movl
pop
cmp
into
test
lret
icebp
xor
je
data16
cmp
testl
cmp
lret
sbb
in
out
aas
sbb
xor
sbb
arpl
iret
cs
pop
cli
xchg
jmp
fcomps
pushf
pop
repnz
push
in
mov
pop
adc
mov
adc
insb
out
iret
jg
or
enter
jge
mov
sbb
out
cwtl
cmpsl
icebp
leave
rcrl
add
cmp
loopne
imul
insl
mov
aaa
stos
push
push
xchg
shrb
fists
popf
xlat
in
pop
cmp
pop
cmc
sub
xchg
loope
pcmpeqb
nop
test
mov
jae
xchg
daa
ret
outsb
xlat
adc
pause
cmpsb
aam
adc
adc
push
fidivrs
ds
fidivl
mov
xchg
xor
js
inc
adc
scas
jo
in
test
popa
lods
adc
adc
in
adc
xor
les
push
xchg
add
or
insl
push
fwait
mov
adc
add
or
sbb
cmp
bound
pop
mov
mov
daa
xor
jb
fdivrl
stos
notl
or
dec
cmp
or
std
xor
aam
frstor
fs
inc
loopne
fwait
push
adc
es
add
arpl
cmp
xor
in
fisubrs
into
idiv
cmp
jge
ljmp
jo
les
fdivp
ss
mov
jbe
xchg
add
xchg
or
jb
xchg
les
add
adc
loopnew
sbb
fimull
lcall
mov
xchg
inc
jnp
push
lret
xorb
xchg
push
outsl
push
call
int3
ret
jnp
sbb
icebp
mov
inc
and
sbb
jnp
push
xchg
and
jae
pusha
in
into
repz
push
test
xor
int
jnp
cltd
rcr
repz
fistpll
and
pop
inc
add
daa
nop
adc
or
mov
pusha
cmpsb
scas
outsl
mov
dec
ret
stos
pop
daa
jb
or
pop
push
rorl
xchg
mov
and
mov
movsl
aas
xchg
pop
sbb
adc
cmp
pop
pxor
push
ficomps
bound
test
push
cmp
jge
xchg
jmp
pop
push
and
mov
dec
popf
or
test
push
int3
cs
and
cwtl
pop
orl
fbld
aaa
fs
test
lods
scas
repz
stos
loopne
jp
cmp
cmp
fists
call
xchg
mov
mov
je
clc
cs
mov
rcrl
bound
repnz
cmp
jae
fwait
es
xor
adc
push
mov
sti
cmp
js
popf
mov
rcrb
adcl
sbb
or
push
or
xchg
loope
lods
mov
lcall
or
je
or
ljmp
mov
mov
test
aam
imul
jb
xor
sahf
inc
notl
mov
bound
icebp
iret
add
fisubs
adc
aaa
lcall
and
mov
and
mov
cmp
call
and
stos
pop
scas
hlt
fildll
rcll
movsl
xlat
dec
aas
mov
xchg
lock
test
xchg
xchg
mov
hlt
inc
mov
ds
pop
jns
lds
loopne
lods
xor
hlt
dec
push
pop
push
sbb
push
sub
mov
mov
lods
js
cmp
nop
or
sub
sub
enter
sub
jg
jg
push
adcb
sub
sub
repz
fisubs
or
iretw
dec
add
aam
icebp
out
imul
cmp
imul
sbb
or
pop
shrb
test
dec
nop
xor
ja
cmp
fldt
or
rcll
inc
adc
dec
sbb
gs
cmpsl
dec
ds
lret
and
bound
mov
subb
sbb
push
pushf
iret
mov
jbe
cld
push
push
xchg
in
addr16
pop
cli
mov
loope
jnp
cmp
int
scas
mov
sbb
in
js
popf
or
xor
xchg
dec
push
outsb
mov
pop
mov
xchg
sub
out
cs
add
je
scas
xchg
xor
mov
lahf
fidivl
or
lods
lods
push
xor
js
stc
fidivs
cmp
filds
aad
in
mov
jno,pn
cmpsb
push
fsub
add
mov
es
dec
sbb
mov
dec
scas
in
inc
adc
int
test
aam
pop
cmp
push
sub
sti
fs
test
xchg
faddl
lcall
aaa
clc
cmp
jo
cmpsl
or
in
and
and
fstl
pusha
sar
out
imul
outsb
popf
push
sbb
ljmp
jle
inc
sub
leave
ja
adc
xor
inc
stos
adc
lcall
mov
test
sbbl
adc
xor
in
mov
in
mov
xor
mov
leave
inc
stc
pop
cmpsb
int
mov
in
sub
xchg
mov
shlb
pop
jl
pop
mov
iret
ds
pop
pop
std
sarb
and
aam
aaa
jne
daa
mov
scas
inc
push
add
or
push
push
add
mov
mov
hlt
rorb
xchg
sbb
movsb
mov
rcrl
mov
das
sub
push
out
in
ret
jge
mov
neg
add
repnz
or
lret
out
mov
rclb
nop
les
sub
movsb
inc
xchg
adc
adc
mov
mov
jl
iret
or
push
sub
jmp
orl
mov
mov
rcrb
inc
lds
sbb
mov
fs
out
dec
mov
pop
cmp
mov
popf
and
dec
xchg
int
insb
jle
fstl
adc
fwait
dec
push
jge
mov
push
adc
add
fsubp
or
add
jecxz
ja
push
inc
data16
adc
ret
lock
cmpsb
inc
push
btr
repz
loop
stc
push
out
sbb
pop
mov
jno
cmpsb
js
into
mov
xor
shlb
js
mov
xchg
out
inc
es
daa
fnclex
pop
xchg
mov
clc
push
sbb
in
in
and
mov
fisttps
rcrb
sub
mov
mov
jp
out
mov
jns
pop
pop
rorb
popa
rcrb
lcall
cmpsl
je
pop
rorl
xor
and
popa
mov
test
sub
adc
pushf
mov
add
rclb
fcoml
ja
inc
xor
inc
cwtl
and
mov
xchg
mov
pop
movsb
fidivl
cmp
lahf
fmuls
test
fcmovnbe
pop
insb
stc
out
or
bound
cld
dec
jmp
mov
stc
int
add
sbb
test
sbb
cli
jge
mov
loop
out
jnp
fsts
push
sbb
pop
stos
cwtl
and
fs
lods
stc
push
repnz
jp
jmp
loopne
xchg
sti
jns
mov
fnstcw
arpl
pop
jmp
mov
dec
mov
sarl
outsb
push
mov
cmp
sti
stos
push
push
andl
push
clc
insl
stos
push
pop
mov
cwtl
ljmp
mov
inc
push
mov
pushf
jno
mov
jecxz
xchg
ja
and
mov
sahf
int
lods
jnp
daa
xor
pop
xor
sub
enter
fbstp
mov
xchg
inc
cmc
call
pop
pop
loop
mov
mov
jecxz
xchg
xchg
sbb
aaa
scas
jecxz
ja
aad
and
leave
pop
adc
mov
or
and
daa
dec
imul
fnsave
adc
and
xchg
ds
imul
cmp
pop
jb
xchg
neg
pusha
stos
xchg
sub
mov
pop
test
adc
pop
and
sub
pop
mov
addr16
popf
sbb
xor
mov
scas
adc
jbe
mov
pusha
testb
movsb
add
aaa
inc
ljmp
xor
push
sbb
cmc
xor
je
xor
xchg
cwtl
movsl
push
add
fists
aaa
jnp
cltd
mov
aaa
cltd
pop
jae
sub
aaa
leave
cli
push
test
adc
mov
or
jp
push
mov
cmc
outsb
fstpt
mov
enter
pop
xor
push
cli
pop
cs
mov
dec
jne
leave
dec
or
adc
in
jno,pt
movsl
mov
lods
nop
mov
cmp
xor
es
ret
mov
loopne
aaa
mov
rcr
mov
sub
in
sub
xchg
int
out
mov
mov
lods
movq
stos
movsb
lcall
pop
lods
aaa
dec
idivl
or
lret
inc
xchg
cmpsl
mov
mov
inc
push
movsb
into
call
sbb
push
mov
enter
add
mov
mov
loope
stos
add
movsl
insl
stos
call
in
andl
bound
test
push
pop
and
mov
pushf
loope
cmp
or
mov
je
cmp
jnp
fwait
mov
push
push
push
xchg
sbb
add
sub
je
push
imul
insl
cmpsl
les
jns
out
inc
xchg
in
pop
xor
jb
hlt
mov
mov
stos
xchg
xchg
inc
daa
jle,pt
mov
in
fdivp
out
jle
popf
mov
mov
out
loope
push
mov
xchg
cmp
mov
push
mov
ja
mov
popf
out
std
jg
mov
stos
cmp
sahf
xor
and
sahf
dec
adc
sbb
xorb
cmp
push
scas
enter
push
cmp
inc
stc
call
aam
jo
adc
es
mov
adc
inc
xchg
insb
push
notb
out
insl
icebp
ljmp
adc
data16
loope
iret
sbb
adc
popa
out
push
xchg
outsl
sub
fmuls
dec
leave
cs
mov
dec
test
pop
clc
mov
xchg
movsb
cmp
repz
out
jl
scas
out
jnp
mov
add
inc
nop
imul
in
outsb
lar
mov
adc
mov
inc
ret
mov
fmul
insb
repnz
cld
mov
cmp
data16
mov
int
xor
adc
xchg
mov
sub
add
pop
jns
andb
out
ret
xchg
jmp
dec
loope
and
mov
sub
pop
scas
jmp
outsl
mov
adc
dec
outsb
jmp
lods
enter
mov
leave
loopne
bound
test
jge
cli
push
cmpsb
imul
shll
pusha
inc
iret
or
pop
jne
mov
dec
rcrl
adc
inc
ss
push
paddusw
sbb
inc
jge
aam
mov
loop
pop
push
std
sbb
sub
pop
cmpsb
adc
adc
cld
or
xor
xchg
aas
add
mov
pop
xor
add
cltd
loopne
outsb
test
add
jbe
sbb
lds
cwtl
adc
out
popf
cld
icebp
test
cmp
adc
adc
sub
fcompl
mov
shlb
and
jp
outsb
add
or
jbe
mov
jmp
je
push
mov
fdivl
or
into
cmp
inc
adc
adcb
lds
push
in
fwait
mov
fsubl
sbb
or
dec
mov
int
arpl
push
push
jbe
lods
cmpl
xor
pop
xor
xor
xchg
popa
fidivs
or
jl
ret
or
xor
mov
aam
shll
sbbb
pop
mov
add
and
jp
xchg
notb
or
cmp
add
pop
cmpsb
out
popf
mov
aaa
adc
std
cmp
sbb
mov
outsb
dec
jmp
fildl
dec
cltd
or
shlb
inc
push
xrelease
add
subl
sti
inc
mov
ds
repz
xchg
jae
popf
nop
subb
dec
mov
in
test
je
add
add
gs
aas
dec
cmc
cmp
rcrb
dec
pop
xchg
leave
mov
or
adc
adc
and
cmpsl
inc
mov
mov
insb
push
push
xchg
int
or
inc
subl
popa
jbe
incl
add
or
mov
push
out
out
push
add
mov
jg
jp
mov
in
daa
mov
jp
sahf
mov
stos
sub
or
scas
stos
mov
inc
xchg
fcmove
mov
dec
xor
inc
fwait
loopne
aas
jge
test
lock
pusha
xor
insb
stc
push
and
testl
and
jge
ja
icebp
mov
push
stc
xchg
add
mov
jge
pop
dec
scas
icebp
pop
or
jmp
mov
ret
xchg
cmp
out
in
xchg
jmp
xor
jge
js
push
push
test
lcall
fldenv
cmpsb
aas
scas
dec
dec
pop
iret
sbb
ss
or
cltd
leave
add
add
lret
mov
lods
push
mov
lods
push
lods
stos
dec
or
xchg
in
xchg
pop
pop
pop
push
test
sub
mov
out
xchg
inc
cmovns
or
dec
mov
and
es
lds
adc
jmp
pop
cmp
hlt
and
push
aas
icebp
fwait
xchg
mov
lock
popa
lcall
scas
pusha
fistpll
fstpl
cmp
sbb
in
iret
hlt
mov
mov
push
into
jg
insl
cmp
das
and
outsb
or
in
addb
adc
punpckldq
add
hlt
int
cmp
lcall
mov
mov
pop
insl
or
push
fucom
inc
mov
sbb
jp
sbb
jle
jge
fs
or
mov
lcall
es
arpl
cltd
xor
mov
jnp
mov
fs
push
sbb
enter
insl
into
xor
mov
lods
mov
call
dec
xor
cs
ljmp
pushf
fiaddl
cmp
push
inc
adc
add
cld
pop
pusha
mov
arpl
fldl
leave
and
pop
lea
xchg
lret
std
push
xor
xchg
mov
xchg
addb
stc
pop
mov
inc
mov
mov
lahf
pop
in
movb
mov
addr16
pop
bound
rol
fisttps
js
loope
dec
or
sub
xlat
xchg
mov
arpl
xchg
cmp
dec
in
ja
dec
into
push
dec
pop
stos
daa
jnp
push
clc
xor
pop
jb
in
xchg
mov
daa
int
gs
fwait
jae
add
cmp
mov
push
and
inc
imul
cmp
xchg
pop
xchg
or
daa
sub
xlat
mov
cmp
in
sbbb
cld
sub
cmpsb
mov
out
pop
push
jo
mov
lds
jmp
pop
xlat
xor
push
imul
test
jns
pop
addb
jnp
repz
test
jne
xchg
cwtl
mov
addr16
add
jno
adc
mov
stos
cs
ja
xchg
xchg
cmp
mov
movsl
push
fdivrs
xor
mov
rcrl
and
mov
dec
lret
sbb
dec
inc
rcl
adc
push
je
cmc
sti
fucomip
leave
dec
xor
fdivs
pop
inc
cli
pop
out
cmc
cmp
dec
dec
dec
das
pop
ja
stos
dec
arpl
mov
mov
rorb
mov
inc
xlat
stos
cmpsl
sbb
dec
sbb
mov
sub
je
dec
dec
jno
xchg
rorb
jbe
cs
das
subb
xchg
cld
jns
mov
sub
insb
cmp
push
add
xlat
cmp
sub
dec
lret
sahf
mov
inc
and
adcl
adc
mov
cwtl
out
pop
xor
andb
mov
xchg
cmc
lret
daa
mov
sub
jno
xchg
or
push
xchg
and
hlt
mov
jecxz
add
movsb
mov
push
hlt
inc
insl
cmp
lock
cltd
adc
pop
push
imul
push
sbb
and
and
in
sbb
icebp
es
xchg
mov
or
inc
into
in
aad
sti
jbe
pop
adc
xchg
insb
call
inc
or
mov
into
ret
mov
inc
test
mov
int3
mov
lods
xchg
clc
jg
push
mov
cmp
sbb
insb
sti
adc
sbb
mov
adc
aaa
xchg
jnp
push
aaa
xor
sbb
addb
aam
cltd
adc
dec
jle
push
xchg
and
mov
mov
lods
jne
push
es
push
cld
sarl
fcoms
movsb
sub
ret
and
cs
push
mov
mov
sub
pop
or
mov
pop
insb
ficoms
ds
cs
sti
jns
sub
sbbb
lret
push
push
decl
shrb
movsl
repnz
pop
and
imul
mov
mov
ss
bound
jb
mov
cmp
fs
pusha
into
out
shl
xchg
fisttps
xchg
jg
mov
mov
add
mov
mov
jne
addl
push
xor
jbe
fnsave
dec
jp
stos
lods
enter
cmp
adc
mov
push
mov
inc
stc
ljmp
repz
xor
jl
xor
je
pop
orl
into
sbb
mov
jnp
jae
push
pop
or
fisubl
push
push
mov
dec
addw
push
push
clc
stos
pusha
push
push
fsubr
or
sbb
push
mov
clc
mov
push
push
and
test
fistl
popf
push
adc
add
shrb
sbb
add
sub
imul
and
push
jge
mov
clc
rorb
mov
leave
imull
xchg
push
pop
jge
inc
sbb
jne
sti
mov
pusha
adc
cmp
and
jo
cwtl
jno
lods
inc
xchg
push
outsl
dec
das
loopne
sarb
jae
ljmp
xor
adc
mov
mov
cmp
xor
out
cmpsl
push
and
mov
pop
sahf
hlt
cmp
aas
xor
mov
cli
jmp
sbb
cs
sub
test
nop
int
mov
sub
in
loopne
xchg
repz
and
mov
filds
pop
test
rcr
add
pop
flds
add
add
xor
cltd
lock
or
pop
mov
adc
jge
fabs
add
mov
add
pop
stos
cwtl
sbb
sub
or
mov
insl
scas
ftst
js
mov
hlt
subl
jle
and
aam
pop
test
push
test
shlb
fisubs
mov
fwait
sbb
push
pop
mov
adc
sub
js
aaa
inc
lea
aas
jae
fisttpl
daa
int
inc
jo
sub
sub
ja
outsb
push
sahf
add
cmc
mov
sbbb
shll
pop
inc
enter
or
incl
test
jnp
inc
adc
scas
push
out
insl
push
mov
inc
cli
mov
xchg
lahf
add
and
lods
sbb
lods
pop
popa
mov
push
add
add
scas
cltd
or
mov
ret
or
and
popa
jno
mov
movsb
cmp
add
aaa
or
sub
popf
in
xor
cmp
cmp
adc
scas
push
sub
inc
or
lods
iret
push
mov
es
out
lahf
adc
cmc
scas
dec
inc
mov
xchg
ljmp
sub
fwait
imul
aas
add
mov
adc
sub
inc
stos
jnp
pop
into
fstl
test
lret
fs
jno
cmpsb
add
adc
sbb
outsb
push
arpl
or
dec
mov
add
inc
xchg
cmpsl
test
xchg
out
out
lods
jno
in
ljmp
sbb
aam
stos
clc
jbe
orl
pusha
inc
adc
cwtl
arpl
cld
push
mov
pop
mov
mov
imul
ljmp
stc
cmc
pop
ret
pop
outsb
push
iret
pop
das
mov
gs
int
mov
or
push
jnp
fldl2e
lods
or
mov
lods
and
mov
mov
xor
pop
mov
push
push
adc
roll
sbb
inc
scas
cmp
out
scas
int3
cmp
out
sar
xchg
lds
add
ss
sbb
push
jns
fldt
lds
mov
xchg
daa
popa
je
push
mov
aas
stc
ficoms
cmp
push
fistps
fbld
and
pop
inc
icebp
movlps
mov
or
in
xchg
ret
mov
cmp
pop
inc
cmp
fs
mov
inc
cld
jbe
ljmp
lds
push
sbb
jmp
into
xor
sbb
ss
mov
xor
sbb
insb
fnstenv
mov
pop
mov
pushf
adc
rolb
and
cli
sahf
jae
outsb
dec
xchg
clc
pop
mov
loopne
pop
and
test
and
rolb
imull
je
cmpsl
mov
adc
sub
jb
sbb
insl
mov
xor
cmp
divb
pop
xor
lcall
xor
rorb
aad
cmpsb
or
movsl
sub
cld
int
and
sbbb
jmp
sarl
negl
mov
jbe
mov
sti
xchg
je
lods
sahf
jns
cmp
mov
out
in
popa
pusha
xchg
cmp
mov
fs
loop
pop
pop
movsl
addl
cmp
xchg
movsl
sbb
mov
insb
pop
xor
cmpsl
dec
fcomps
lods
outsb
aad
dec
sahf
xor
adc
fcompl
clc
out
sarl
lea
push
scas
mov
adc
pop
repnz
imul
les
daa
gs
aam
sbb
sub
pop
sti
push
mov
sbb
ds
pop
fnstsw
lret
inc
outsl
push
int
out
lea
lods
loopne
pop
lret
jp
clc
mov
movsl
mov
jle
cmp
push
xchg
adc
push
or
jle
hlt
pop
insl
mov
add
fsubl
leave
add
or
shll
jb
pop
das
sbb
jg
cmpsb
add
std
into
mov
adc
cmp
aam
adc
jo
xlat
cmp
cwtl
cwtl
xchg
xchg
das
jl
sub
ljmp
jge
cld
test
jb
test
cmpsb
cmpsb
push
testl
call
or
add
or
stc
fldt
rcl
aad
loop
adc
pop
pop
int
test
sub
lods
or
push
dec
sbb
repnz
fwait
aam
push
ss
inc
int3
pusha
mov
cwtl
xchg
pop
and
sub
negb
cltd
or
cmpsl
mov
aas
scas
idivl
stc
fists
jne
sbb
cmp
div
mov
jae,pn
xchg
jb
xchg
sbb
std
inc
std
mov
aas
aam
in
or
sarl
adc
jmp
xchg
insb
add
sub
push
jp
adc
cmpsb
push
in
pop
cwtl
popf
test
xor
aas
imul
stc
ds
negl
jl
jno
sub
wbinvd
sbb
in
sbb
in
or
out
sahf
out
pop
mov
xchg
outsl
dec
push
aad
hlt
xchg
push
ret
enter
gs
jns
mov
cmp
outsb
add
mov
mov
sbb
jp
push
lahf
das
data16
lods
sbb
out
xchg
push
or
fcoms
dec
out
cld
in
movsb
gs
lret
sbb
je
jmp
cmc
bound
imul
cmp
int
fsubl
icebp
in
scas
dec
pop
xchg
push
inc
cld
data16
mov
movsl
lods
dec
mov
fisubrs
movsl
aad
dec
aam
movsb
inc
int3
mov
rcll
in
je
sti
mov
aam
cmp
enter
das
lods
lret
jmp
pop
and
imulb
sub
sti
inc
dec
out
xchg
ficoms
movl
inc
lods
aas
dec
adc
xor
jae
pop
subl
pop
push
sub
les
dec
jecxz
adc
jo
mov
loope
jnp
pusha
xchg
sti
les
dec
lock
js
adc
sbb
jnp
popa
negl
mov
xor
or
je
inc
cld
or
or
js
fnstsw
jb
pop
mov
xor
out
scas
loop
int
fucomp
and
roll
cmova
cmpsw
adc
sbb
mov
mov
test
jmp
ljmp
in
adc
popa
and
aas
mov
jnp
sub
add
fnstsw
fs
or
inc
cmp
adc
push
in
push
xchg
or
cmp
jb
cltd
mov
jl
cmp
mov
xchg
cmpsb
and
stos
enter
test
push
push
add
cmpl
icebp
adc
out
push
cltd
cmpsl
cmp
xchg
or
les
in
and
sti
push
stos
ret
xchg
mov
insl
stos
out
out
stc
or
mov
lds
in
mov
xor
insl
mov
inc
push
clc
xor
adc
dec
je
in
lods
mov
sub
jne
rcrb
mov
pop
fcom
adc
daa
cmp
out
fwait
sub
jge
loop
mov
pop
test
mov
mov
and
and
in
repnz
ja
hlt
add
sub
push
div
sti
xor
cld
mov
inc
xchg
out
cmp
mov
rcll
dec
pop
shrl
xor
mov
js
dec
cwtl
sbb
bnd
jecxz
sbb
pop
mov
push
mov
shrl
imul
cmpsb
adc
mov
aam
rcr
int
ss
popa
addr16
les
repnz
ljmp
icebp
and
cmpsl
push
ret
imul
add
xchg
xchg
mov
jnp
jg
sti
aam
xor
and
push
bound
out
mov
fisubs
cmova
aam
cs
inc
fsubrs
scas
insl
sahf
cmp
xor
sub
data16
fdivs
insl
pop
xor
sti
push
push
sbb
ljmp
lock
push
out
aas
jns
pop
shlb
mov
cmpsb
xlat
mov
repz
lods
fnsave
mov
sbb
lock
xor
jmp
arpl
dec
ds
xor
cmpl
adc
pop
loopw
push
lods
mov
out
sarl
or
loop
push
scas
mov
out
mov
js
lods
hlt
data16
sarl
dec
loopne
xor
adc
push
in
xlat
fimuls
jns
xor
cmp
ror
fs
cmp
inc
jae
xor
aaa
pop
rcl
sub
pop
or
cmp
pop
imul
or
pause
xor
jne
inc
jmp
aaa
jb
les
cmp
sub
mov
xor
push
pusha
push
outsl
stos
fld
lret
jg
mov
adc
pop
inc
clc
rorl
les
pop
cld
addr16
cwtl
sbb
outsb
inc
test
pushf
enter
inc
jp
push
push
js
dec
push
cmp
push
mov
push
jne
dec
or
sub
les
movsl
imul
sbb
jl
popf
mov
push
shrl
sti
mov
faddl
stos
test
xlat
or
push
daa
repnz
loopne
mov
jle
lods
xchg
clc
jne
adcl
mov
cltd
stos
pop
inc
jnp
pop
sahf
sbb
push
xor
outsl
fs
mov
and
or
imul
lcall
mov
mov
inc
fisubs
sahf
lods
sub
pop
push
sbb
scas
inc
cmc
rcrb
adc
clc
or
mov
sub
cwtl
fs
mull
adc
sbb
inc
imul
and
add
clc
jl
int
stos
gs
inc
sub
pusha
mov
mov
mov
shrl
add
pop
dec
xchg
pop
sar
jne
jne
leave
mov
and
sbb
dec
scas
dec
divl
cmp
cmpsl
push
mov
rcrb
mulb
sti
fs
aam
scas
sub
or
in
sub
nop
jle
movb
and
push
mov
push
jne
xchg
out
dec
ss
inc
test
mov
mov
std
int
mov
and
or
movsb
add
mov
adc
mov
btr
dec
xchg
inc
outsl
fldcw
mov
sub
sub
std
daa
mov
enter
sub
mov
rcll
insb
and
icebp
sbb
xor
rolb
inc
xorb
mov
mov
xchg
xchg
jbe
lods
int3
jmp
repz
or
insb
xor
jmp
xor
leave
sahf
xchg
dec
add
mov
mov
sbbb
fiaddl
cs
stos
and
aam
sub
sahf
pop
jge
push
scas
repz
mov
insb
daa
outsb
or
fisubl
mov
mov
jle
aam
cmp
sbb
dec
sub
push
inc
scas
push
cmpsb
or
test
cltd
mov
in
mov
adc
and
mov
mov
sub
cltd
cmp
call
sbb
js
das
fisubrs
mov
dec
gs
push
lods
jb
mov
rcr
sahf
in
inc
adc
stos
in
jge
arpl
jg
mov
fldt
cmp
add
rcrl
jge
sub
jo
mov
xor
sarb
and
rcrl
or
inc
jp
daa
jmp
rorb
jnp
cld
xor
movsbl
or
xchg
cld
aad
adc
xchg
xor
mov
cwtl
mov
push
insl
hlt
push
xor
hlt
int3
pop
dec
icebp
add
clc
and
sbb
jl
stc
or
pusha
cmpsl
rcrb
and
fcmovnbe
lea
or
sahf
stos
repz
test
jmp
sar
dec
adc
mov
js
repnz
ja
sbb
mov
movntps
cmp
dec
insl
aas
add
sti
lods
cmp
and
mov
movsb
jmp
js
out
jg
adc
xchg
jl
and
and
pop
test
repz
jno
loopne
daa
repnz
cmp
sti
scas
roll
imul
push
fcoms
aam
xor
popa
cwtl
inc
in
and
cmp
fxch
push
es
sub
inc
ljmp
cmpsb
insb
push
imulb
iret
out
daa
pusha
adc
jne
movsl
sbb
add
nop
cmp
ja
jns
sbb
shlb
frstpm(287
in
dec
add
call
fcoms
push
or
jae
and
pop
and
daa
xchg
mov
cltd
add
xchg
gs
fnstsw
repz
adc
popf
sbbl
cmp
cld
out
mov
out
dec
xchg
add
mov
or
or
inc
cmp
shrl
cmp
imul
push
push
mov
into
pop
xlat
arpl
mov
adc
loopne
sbb
daa
jmp
mov
mov
push
popf
fdivl
dec
and
fidivrs
fbld
clc
add
ds
cmp
add
dec
jecxz
repz
rcl
push
mov
bound
aad
sub
outsl
cmp
addr16
mov
pcmpgtb
adc
mov
lods
popf
xchg
mov
out
xor
ret
stos
lret
push
sub
daa
sub
lahf
dec
in
and
and
cwtl
cmc
dec
fs
ret
push
sub
cmp
sbb
dec
es
mov
fstl
ljmp
subb
or
xorb
fmulp
loop
repnz
adc
test
pop
xor
scas
xchg
test
iret
rcrb
js
dec
sub
pushf
sub
or
jbe
lods
stos
sarb
cmc
lock
jmp
fimuls
fstpt
ret
sbb
jecxz
fs
stos
sbb
push
mov
clc
jp
push
add
and
stos
dec
and
push
pop
into
pop
es
fisttpll
ljmp
inc
jmp
stos
push
inc
dec
mov
add
ret
cmp
inc
ror
mov
mov
mov
add
mov
jmp
incl
addr16
daa
jecxz
push
pcmpeqb
mov
xor
cmp
addr16
xor
mov
pop
ljmp
mov
inc
roll
fstl
leave
mov
cli
fld
neg
xor
push
mov
or
xorl
add
movsl
xor
fstpt
pop
rcrb
or
pop
adc
xor
out
shr
repz
out
push
and
pop
sbb
mov
mov
int3
cltd
sub
addb
or
push
lret
push
xchg
js
dec
xchg
ret
xchg
pop
mov
push
mov
out
popf
aaa
xor
jle
das
idivb
fstpl
cs
adc
out
sbb
out
mov
loopne
fistpl
push
out
sbb
adc
and
mov
jp
jno
push
je
sbb
xchg
ss
jae
les
jmp
sbb
and
inc
push
je
fdivr
cmp
cmpsl
mov
xchg
loop
jmp
cmpsl
shll
stos
pop
inc
lods
vmread
icebp
test
push
in
sbb
sub
mov
mov
bnd
jg
add
cmp
pop
cmp
push
hlt
dec
jnp
mov
cmp
pop
jecxz
in
addb
pusha
push
jl
mov
ror
cmp
sub
shll
lret
into
sbbl
cmp
xchg
mov
cld
test
or
stc
inc
ss
out
les
pop
xchg
mov
xchg
pop
pop
pop
jnp
scas
out
push
lea
les
mov
imull
xor
sbb
mov
lods
das
mov
jbe
jecxz
push
mov
mov
outsb
jns
jmp
jge
fldcw
hlt
mov
add
mov
sbb
in
fstps
les
sub
stos
sti
cmpsl
pushf
pushf
adcb
mov
mov
jmp
xor
dec
iret
pop
pop
mov
add
clc
and
add
insl
sar
adc
sub
je
push
fisubrl
es
jno
cmpsb
aad
pop
mov
outsl
and
adc
fwait
sub
cld
push
movsb
lods
jmp
sbb
pop
out
cmpsl
mov
dec
push
shlb
jp
mov
cltd
test
lds
pop
mov
cmp
ds
loopne
sub
clc
aam
movsb
jne
or
enter
dec
inc
add
push
sbb
icebp
lret
pushf
loope
rorl
pusha
mov
int3
ja
jb
fidivrl
pop
mov
mov
call
sbb
push
insb
popl
rorb
add
mov
andb
jecxz
mov
ret
mov
iret
cmp
pop
push
out
popf
jg
push
dec
dec
insb
dec
cmp
call
cwtl
push
inc
loop
iret
test
cmp
lret
scas
xchg
inc
dec
loope
out
inc
js
jo
pop
mov
cwtl
pop
mov
cmp
sti
dec
dec
sub
xchg
jmp
dec
push
js
mov
je
sub
pop
pop
or
push
shlb
add
add
and
adc
xchg
fisttps
jne
js
push
mov
std
cmp
add
push
lock
push
mov
sub
pop
add
mov
daa
push
inc
add
and
das
adc
rcrb
jns
mov
stos
ja
jne
xlat
adc
repnz
inc
imull
sbb
stos
leave
cmp
xchg
push
cmpsb
dec
cmp
fildll
lret
lahf
xlat
mov
loope
pop
jno
mov
cld
or
or
push
xchg
mov
imul
mov
xlat
or
mov
out
into
mov
loope
mov
test
test
cmp
dec
xchg
mov
pop
shrb
lods
sub
dec
adc
addr16
mov
out
mov
int
pop
sbb
cli
xchg
gs
stos
movsl
repnz
sub
sub
rcrb
sahf
fisubrs
sbb
push
or
cmp
xchg
cmp
push
lret
repz
sbb
fistpll
xchg
cld
add
arpl
jp
push
outsl
inc
cmp
mov
or
repz
push
js
xchg
xchg
pushf
dec
jnp
xor
inc
sarl
inc
and
fcomps
inc
lcall
push
push
add
or
rcll
loop
pop
mov
scas
fwait
push
adc
inc
inc
test
stos
cld
jo
or
into
shlb
mov
shlb
adc
xor
dec
roll
sub
out
jle
gs
jl
inc
lods
jo
cmp
aam
call
cmp
mov
sarl
jb
dec
inc
cwtl
call
cs
pop
mov
xchg
cld
mov
xorl
sub
les
mov
xchg
repz
je
jns
mov
lods
call
pop
mov
push
add
daa
push
nop
fidivrl
xchg
mov
pop
xchg
pop
das
neg
push
xor
mov
cmp
imul
xlat
add
mov
inc
inc
sahf
js
ljmp
pop
pop
or
mov
pop
and
shrl
sub
inc
jmp
imul
and
inc
int
pushl
inc
icebp
xchg
dec
insb
mov
jnp
cmp
sti
xchg
fsubs
sub
cmp
push
int3
outsl
jle
or
jnp
inc
mov
mov
xchg
xchg
adc
lret
jne
lahf
push
int3
cmp
pop
sub
cmovs
lea
xor
clc
xchg
hlt
movsb
lock
js
shrl
xchg
rcrl
add
jne
sbb
add
das
das
repz
mov
out
push
insb
xor
mov
adc
negb
dec
shl
push
sub
or
sbb
mov
mov
cmp
mov
and
clc
mov
xorl
cmpsb
insb
inc
sarb
aam
cmp
bound
std
es
idivl
fisubrs
xchg
xchg
insl
adc
xor
adc
pop
ret
cmpsl
jns
aam
mov
fwait
xchg
cmp
mov
jno
xchg
add
jecxz
cmp
dec
idivl
test
aam
mov
push
push
das
jle
ljmp
xorl
mov
aad
inc
sarl
addr16
and
cmp
sbb
dec
in
add
fldenv
pop
dec
pop
ss
out
dec
in
dec
insb
ds
mov
push
out
outsl
fmull
ja
or
aaa
push
lods
shl
pop
or
sub
shlb
out
pusha
mov
xchg
js
or
adc
xchg
mov
jg
sbb
cmp
nop
adc
test
inc
cltd
mov
dec
mov
enter
roll
out
cmp
out
jmp
sbb
pop
in
rorl
pushf
data16
cmp
lahf
insl
and
in
add
lock
xor
cmp
add
ret
insb
aad
lret
imul
loop
push
cltd
pop
xlat
mov
enter
outsb
js
dec
pop
pop
xchg
insb
and
cmp
das
dec
pusha
pop
lods
test
adc
jno
xor
imul
shll
add
jg
sub
mul
xor
aaa
jbe
loop
jp
mov
xor
add
aaa
ret
xchg
pop
loop
outsb
out
sub
lds
add
lods
push
icebp
cld
mov
leave
sbbb
jg
mov
cs
jg
push
nop
dec
jnp
cmp
jl
and
inc
bound
out
xor
cmp
push
adc
pop
push
xor
mov
jbe
mov
push
testb
adc
notl
jns
mov
mov
xchg
rorb
and
rcl
nop
add
and
pop
jb
inc
popf
aas
jb
es
mov
scas
push
sub
pop
cmpsb
int3
mov
call
addl
out
lods
pop
in
out
xor
sub
insl
enter
daa
pop
mov
inc
daa
mov
imul
loope
pop
jnp
mov
xor
mov
adc
push
sahf
mov
movsb
sbb
je
hlt
int3
mov
imul
push
adc
outsb
loop
es
lods
fwait
or
add
les
lock
repz
sub
test
mov
mulb
inc
popaw
cwtl
frstor
push
into
dec
lea
test
mov
neg
cmpl
imul
xchg
cmp
outsb
in
sti
push
lcall
orl
jecxz
inc
call
xor
leave
fcomip
lret
bound
cmp
cltd
mov
jnp
sahf
push
addr16
je
cmp
ret
mov
cmp
loopne
jge
inc
cld
movsb
jle
test
xlat
pop
fstps
xchg
arpl
inc
push
data16
sbb
fstpl
in
mov
mov
push
cwtl
or
dec
loope
jbe
cmpsl
sbb
jg
jle
sub
loop
inc
in
add
jns
or
and
lods
les
fiadds
xchg
pop
lds
add
out
das
inc
dec
pop
mov
popa
jnp
in
ds
pop
mov
cmp
adc
pop
nopl
add
push
andb
cmp
lds
das
jnp
ret
sub
xchg
scas
subl
insb
jge
mov
movsl
bound
xchg
test
rcrb
xor
cmpsb
pop
movsb
clc
jb
mov
stos
pop
test
int3
dec
inc
or
push
mov
scas
punpckhwd
dec
jae
repz
jl
jecxz
adc
popf
pop
add
cmp
mov
sar
mov
mov
mov
fisubl
xor
sti
mov
js
enter
cld
push
sbb
mov
aam
fstl
push
test
fisttpl
mov
lods
adc
mov
ss
int
test
jg
out
mov
or
mov
data16
jmp
loop
mov
pusha
cmp
loop
push
enter
add
jae
pushf
sahf
enter
lea
mov
imul
clc
popa
inc
enter
pop
daa
andl
cs
in
ja
jle
jge
xchg
inc
push
js
push
xor
pop
int3
pop
adc
repz
int
cmpsl
mov
imul
sarl
mov
inc
in
sar
mov
mov
jb
xchg
mov
out
outsl
jp
mov
sub
push
pmullw
lea
xchg
mov
in
out
imul
mov
mov
cmp
daa
add
aaa
mov
nop
jge
ds
into
popf
mov
dec
sbb
xchg
pop
inc
or
es
rolb
xchg
das
out
pop
pusha
icebp
cmp
sbb
movsl
ljmp
je
pop
push
push
popa
xchg
std
addr16
cmp
mov
xchg
jno
test
and
adc
cmpsb
sub
xchg
xlat
adc
xor
cmp
sub
xlat
mov
lcall
pusha
jecxz
jb
lock
fwait
lods
cli
popa
daa
add
push
icebp
cmp
mov
sbb
movsb
mov
iret
xor
addr16
fnstenv
and
xor
sub
bound
mov
or
scas
into
jno
dec
repnz
xchg
sbb
xchg
xchg
pop
xor
sbb
jp
pusha
or
sbb
push
out
movsb
imul
push
or
out
cmpsl
mov
movsb
xlat
aam
and
adc
inc
int3
and
test
add
lds
or
in
mov
es
mov
in
mov
lret
dec
mov
mov
icebp
mov
in
inc
fwait
adc
sub
call
inc
iret
cltd
mov
ds
ret
ret
psllq
add
mov
ficompl
and
daa
mov
test
xchg
call
inc
sub
xor
aam
aad
lret
test
das
aaa
pop
pushf
out
push
push
add
aas
jae
imul
add
iret
aas
test
sub
pop
lds
repnz
adc
lods
call
sub
stos
mov
cltd
lock
push
or
xlat
div
add
adc
xor
xchg
lods
inc
out
mov
fcomps
call
icebp
push
jb
popa
or
in
int
push
ret
adc
inc
divb
mov
cltd
xchg
adc
cwtl
adc
dec
insb
xor
cmc
push
mov
mov
dec
or
stc
js
mov
nop
push
or
fisubrl
pusha
int
aam
push
inc
das
dec
rclb
dec
fdivrl
jb
adc
push
cmp
aas
xchg
ja
inc
pop
fmuls
jp
adc
pop
roll
pop
outsb
or
in
arpl
lods
push
mov
loop
pop
arpl
movsl
jbe
jnp
repnz
out
jle
xchg
push
lret
cltd
jg
push
lahf
shrl
push
push
lods
push
mov
jp
pop
out
xchg
in
or
out
adc
adc
cmp
push
mov
insl
test
imul
lret
sbb
loope
test
jne
rolb
or
fnstcw
or
ljmp
xor
pop
sbb
cmc
push
jo
jns
mov
pop
jl
mov
mov
je
jle
xor
mov
and
adc
cmp
xchg
and
int3
push
push
and
add
pop
push
xor
iret
nop
xchg
je
out
rcrl
xchg
push
xchg
cmp
push
jnp
movsl
gs
js,pt
jl
push
inc
icebp
cmp
and
lock
cli
sbb
mov
inc
push
adc
and
jno
xlat
test
push
sub
iret
jmp
or
xchg
jl
mov
popa
shrb
daa
in
lret
std
xchg
pop
sbb
xor
push
cmpsb
ret
and
xchg
jnp
sarl
insb
mov
mov
push
ds
jge
sub
dec
xchg
xchg
insb
push
xchg
or
das
aas
rol
xchg
pop
xlat
add
imul
dec
jmp
dec
adc
xchg
cmpsb
dec
aad
stc
cltd
cmp
idivl
ja
jbe
xchg
mov
fdivp
xchg
cmp
lock
std
inc
js
out
imul
sub
cmp
mov
out
sbb
popa
sub
jo
add
nop
sbb
inc
fcomps
daa
cmp
xchg
insl
dec
xlat
outsl
dec
outsb
mov
sub
pop
and
ficompl
jbe
adc
jecxz
hlt
outsl
xchg
int
aaa
mov
pusha
shlb
iret
divb
scas
xor
add
jecxz
jp
push
xlat
adcb
inc
lret
in
sub
cmpsl
lret
sarl
mov
ffree
mov
movsl
adc
daa
enter
popa
jae
inc
stc
repz
push
mov
roll
add
fs
pop
xor
or
idivb
xorb
sub
jbe
int3
push
shr
sub
sahf
shrl
mov
in
ljmp
lcall
idiv
mov
mov
test
test
pop
rol
jmp
or
jp
insl
pop
jge
rcll
or
and
mov
jmp
mov
cs
mov
xchg
adc
jb
aas
mov
pop
aad
push
xor
or
sub
jno
addb
fists
in
enter
dec
sbb
in
inc
mov
or
cld
or
call
inc
pop
push
pop
jno
int
je
dec
mov
dec
mov
aad
insl
jmp
pop
pop
or
outsb
shr
imul
jge
mov
in
xchg
es
iret
mov
pmullw
pop
xor
xor
pop
int3
push
fldcw
pop
cmp
pop
gs
adc
mov
cmp
scas
aas
movsl
pop
dec
sbb
test
lods
js
pusha
js
out
mov
mov
mov
adc
pop
icebp
shlb
mov
aam
mov
xor
cmpsb
sahf
push
sbb
jae
lcall
xchg
movsl
loop
or
call
xchg
sub
outsl
es
or
jb
jae
scas
iret
mov
mov
xchg
or
fsubs
pop
jg
lds
or
sub
push
push
add
pop
mov
cwtl
pop
add
aas
fnsave
inc
push
mov
clc
inc
xor
adc
sbb
pshufw
cli
icebp
lea
inc
testb
arpl
fildl
mov
ljmp
push
mov
push
imul
pop
jne
xchg
pop
out
xchg
ffreep
xchg
inc
xchg
xchg
jecxz
dec
cmp
cmpsb
cmp
lods
add
pusha
fnsave
jg
jge
mov
mov
std
mov
jno
sub
inc
cmpb
repz
adc
push
roll
cld
fildl
lahf
lds
or
out
in
mov
icebp
stos
sbb
inc
xor
leave
outsb
cli
push
mov
out
sar
xor
jle
lods
push
rorb
int
xor
lods
int
sarl
addr16
mov
pusha
lret
push
fadd
inc
std
sarl
les
add
pop
lods
sbb
adc
jb
test
mov
xlat
mov
adc
or
add
push
push
decl
rol
push
sub
jo
inc
cmp
int3
mov
dec
rorb
lods
cmp
stos
shrl
popa
cmpsb
mov
sub
add
in
shll
cmp
loop
mov
test
push
mov
dec
inc
mov
lret
scas
jg
mov
mov
mov
mulb
xorl
pop
andb
xor
dec
pop
mov
sub
mov
mov
scas
lret
test
aaa
pop
and
dec
jle
jecxz
minps
adc
psubsw
add
or
cmp
stc
repz
sub
je
adc
lods
std
shrb
or
jmp
xor
rorl
stos
mov
jmp
pop
fisttpll
or
jmp
daa
mov
mov
pop
or
call
pop
into
mov
stc
stc
out
push
sub
xchg
mov
mov
dec
pop
and
pop
inc
sbb
cld
jne
sub
dec
cmp
sub
testb
mov
lock
vmovss
pop
lret
sbb
adc
outsb
sbb
lods
ret
lds
cmp
push
fsubrs
cmp
addr16
push
insl
mov
ja
push
outsl
push
loop
test
out
int
pop
dec
xchg
cmp
adc
sub
std
lcall
add
mov
xchg
pop
out
mov
cmp
dec
push
pushf
sbb
test
lea
inc
movsl
mov
jle
repz
in
sbb
push
ds
mov
fiaddl
mov
std
addr16
xor
dec
shl
xchg
pcmpgtw
nop
mov
nop
or
jp
pushf
and
or
lds
lock
xlat
mov
jecxz
mov
mov
xor
sbbb
pop
jg
fldcw
popf
jge
dec
hlt
add
dec
xor
addr16
mov
push
mov
sbb
insb
leave
jne
sbbb
fiaddl
shll
out
les
inc
mov
in
sti
fists
jmp
fwait
daa
mov
and
mov
into
imul
jnp
add
jne
mov
dec
add
xor
cs
dec
sub
inc
mov
mov
pop
lret
arpl
aad
stc
ljmp
insl
sbb
cld
addr16
cmp
mov
cmp
fs
jnp
pusha
jb
lcall
iret
push
out
xchg
adc
xor
push
add
cld
xchg
sarl
mov
in
pushf
sbb
and
add
data16
imul
sti
das
jns
gs
adc
mov
addr16
inc
stc
sub
jo,pn
cmp
std
leave
xor
sub
pop
popa
into
mov
outsl
add
inc
into
rol
pop
int
das
pop
sub
push
sti
std
sub
sbb
add
out
mov
jb
addr16
inc
mov
mov
xor
sti
in
nop
idivl
daa
negb
imul
mov
mov
mov
bnd
stc
xor
mov
pop
xor
cmp
call
jge
hlt
xchg
mov
popa
or
inc
adc
or
dec
nop
ja
lds
orl
adc
cmpsl
lret
les
mov
enter
sub
fisubl
mov
lret
mulb
and
xchg
sub
icebp
dec
stos
iret
or
lahf
out
leave
inc
mov
es
out
or
in
mov
lods
lahf
test
xlat
loop
add
mov
int
lods
jo
xchg
ljmp
cwtl
arpl
rcrl
mov
mov
aas
test
testb
test
adc
mov
fsts
xchg
pushf
out
std
aam
jae
lds
test
clc
pushl
jecxz
mov
ss
sub
xchg
mov
cmp
xor
scas
and
xchg
bound
push
lahf
in
enter
cmp
or
popf
mov
clc
xlat
lods
stos
aaa
dec
test
mov
cmp
push
jbe
mov
jecxz
and
or
xchg
xchg
xor
aam
sbb
cmc
shll
mov
cmpb
pop
lcall
xlat
bound
into
fists
inc
subl
sub
idivl
stos
inc
iret
xchg
addl
dec
pop
jp
inc
test
in
popf
cmc
jno
shll
inc
aaa
push
push
sub
fdivr
push
and
mov
aam
xor
loopne
ds
mov
rorb
inc
std
adc
mov
sub
sbb
jle
xchg
add
mov
ljmp
gs
mov
idivl
jo
ja
outsb
iret
dec
ret
push
dec
in
push
and
push
outsl
inc
idivl
mov
adc
daa
test
sub
aas
sti
jns
inc
sbb
pushf
mov
adc
inc
stos
mov
and
pop
sbb
sub
fiaddl
xchg
push
mov
orb
je
shrb
sbb
outsl
shl
push
dec
into
gs
sbb
xlat
imul
jmp
mov
cmpsb
shll
sbb
jne
sbb
fmulp
lret
jae
pop
sbb
mov
shl
shll
sbb
aaa
into
sbb
inc
jo
mov
sbb
jne
push
leave
cmp
xor
rorb
pop
cwtl
cmp
into
aam
jge
lret
addr16
jbe
enter
adc
out
sahf
subl
cmpsb
jae
test
dec
es
repz
gs
inc
xchg
and
sub
jb
shrl
jg
add
mov
xor
popa
loopne
jb
mov
aaa
or
adc
mov
enter
mov
sahf
cmp
and
jge
enter
int3
int
and
mov
sbb
cmp
jmpw
nop
outsl
insl
adc
ror
xchg
stos
mov
fdivs
clc
jo
xor
rcrl
insb
xchg
stos
jg
cmpsb
or
loope
es
sub
dec
inc
enter
sub
jl
lods
mov
mov
and
loope
ficoml
add
mov
aad
mov
lea
fs
xchg
lds
das
test
inc
inc
outsl
dec
in
and
sub
scas
test
idiv
pop
jl
push
jo
cwtl
pop
loop
stos
jecxz
cmp
stc
cmpsb
cmp
pop
dec
sub
and
push
dec
ss
xor
repz
inc
cld
pop
sub
roll
lods
sbb
sbb
pcmpeqw
data16
ds
xlat
ret
xchg
xchg
jno
nop
xor
mov
ret
jnp
out
arpl
negb
lock
ljmp
mov
add
pop
cmp
push
jg
mov
shrl
jo
jl
dec
cld
sub
pop
sub
xor
pop
add
shl
lods
mov
xor
push
adc
xchg
mov
movsl
pop
sahf
xchg
mov
adc
inc
mov
fadds
add
cmpsl
fmulp
inc
fs
jb
lret
pop
push
addr16
xchg
jno
cmp
or
lea
dec
jmp
add
pop
les
fnsave
xchg
mov
add
cltd
sti
ret
adc
icebp
adcl
je
pop
sbb
pop
add
subl
ja
xchg
jb
dec
xchg
pop
sub
jno
mov
fcmovnu
push
test
shll
push
es
cld
mov
ja
jmp
jno
insb
pop
addr16
in
sbb
pop
aad
ret
mov
int3
and
jmp
jle
jle
fcoml
mov
mov
inc
or
leave
xchg
mov
ja
mov
insb
or
jl
mov
ss
xchg
xorb
dec
aaa
adc
stos
xchg
outsb
repnz
in
repnz
popf
movb
adc
xchg
aaa
push
inc
and
adc
jmp
aad
std
adc
icebp
in
out
inc
cs
add
jae
xchg
int
dec
inc
cwtl
jp
pop
rcl
xor
pushf
mov
pop
dec
lret
push
adc
mov
cmp
or
mov
addb
mov
inc
sub
rolb
dec
movsl
cmp
push
sbb
cmc
dec
fcompl
mov
lock
fdiv
inc
inc
inc
aas
fwait
push
jns
insl
jno
mov
adc
jg
shll
mov
test
jnp
imul
mov
mov
rolb
jl
ljmp
fs
into
leavew
bound
lret
ljmp
insb
and
push
jmp
out
jb
push
mov
fs
sti
pop
xchg
xchg
xor
lock
sub
cld
jmp
jp
and
mov
shlb
push
test
and
cwtl
out
xchg
and
insl
sub
push
inc
outsb
fcomp
push
xchg
xorb
sub
xor
xchg
lcall
xor
bound
cmc
subb
fmull
add
mov
in
xchg
xchg
sub
insl
shlb
test
out
pop
xchg
popa
or
xchg
jl
ja
rcr
inc
out
pushf
lea
imul
hlt
movsl
data16
cmp
ret
call
and
pop
pusha
cld
paddsw
jge
and
mov
and
lret
fdiv
sub
pop
icebp
je
xlat
xchg
or
andl
mov
fcmovb
test
or
dec
xor
inc
dec
adc
pop
mov
add
cmp
xchg
in
les
icebp
pusha
xchg
sarl
pusha
cmp
sub
adc
into
jecxz
push
test
sti
xor
aaa
int3
daa
fsubrl
je
aam
aam
test
cmpsb
lahf
icebp
dec
outsl
repz
into
ds
dec
into
int3
push
ds
push
mov
shrl
dec
repnz
incl
jge
dec
pusha
and
adcl
inc
insb
test
or
jle
imul
mov
in
cmpsl
mov
repz
xchg
xchg
xlat
push
pop
push
pushf
nop
cmp
dec
sbb
adc
adc
jns
dec
or
decb
mov
mov
std
shll
jmp
and
sbb
ja
sub
sbbl
mov
adc
dec
leave
mov
cmp
sbb
mov
adc
push
mov
daa
add
sbb
and
adc
inc
pop
pop
inc
sub
mov
xchg
arpl
pop
daa
jl
bound
into
jle
fwait
ss
lahf
call
cltd
stc
xchg
push
jne,pt
iret
sahf
bound
out
sti
pop
ret
or
call
stos
dec
add
lock
sub
cmpsb
sub
adc
cmp
jo
popa
ljmp
daa
push
inc
adc
fstp
push
mov
push
push
mov
mov
cli
orb
sub
xchg
inc
sbb
movsb
lock
or
scas
outsb
aam
sub
and
bound
sti
arpl
mov
dec
xchg
and
push
test
sti
cmpsb
xor
lods
mov
sbb
mov
fstps
std
mov
fucom
enter
adc
inc
aam
popf
push
sub
xchg
test
rorl
or
in
push
adc
and
paddusw
std
mov
inc
pop
loopne
js
das
lods
test
inc
aam
mov
pop
mov
xchg
pop
push
mov
cmp
movsb
iret
add
xchg
add
push
and
mov
mov
xor
lods
pop
jmp
pop
sbb
and
jp
pop
std
int
push
pop
xchg
cwtl
les
and
mov
add
sbb
aaa
in
and
cmp
push
push
xor
adc
or
imul
push
fidivrs
adc
cld
pop
add
pop
pop
adc
mov
mov
cli
add
add
jne
xchg
mov
push
mov
sbb
adc
fiadds
cs
jmp
subb
adc
bound
and
jbe
ds
je
cmpsl
std
adc
xchg
mov
and
cmp
dec
imul
iret
rcl
jno
jae
int3
jo
or
aas
cli
je
out
out
mov
adc
mov
dec
test
ss
xchg
mov
repz
out
lds
bound
aas
std
das
push
sahf
mov
iret
xlat
and
test
mov
inc
sbb
loop
aas
push
and
daa
sbb
cmp
movsb
push
sbb
xchg
je
ljmp
jge
pop
xchg
ret
popa
xchg
sbb
lods
inc
add
or
sbb
cld
dec
stos
xchg
sub
sub
lods
orb
stos
ds
jb
int
add
push
inc
dec
cmpb
xor
arpl
repz
ss
lods
jne
fwait
xchg
out
sbb
push
or
dec
pusha
mov
push
mov
lret
std
mov
mov
outsb
pop
in
adc
adc
push
dec
mov
sti
addr16
jo
dec
nop
stc
push
adc
push
lret
xchg
dec
cmpsb
movsl
sub
ja
fs
stos
into
in
xchg
and
movsl
jae
sub
sub
push
ljmp
scas
rclb
or
xchg
ljmp
mov
sarl
inc
fs
lcall
aam
test
es
add
pop
mov
dec
mov
push
pushf
test
xchg
inc
dec
lods
into
xchg
cltd
popa
into
push
fs
dec
sahf
or
test
and
stos
dec
jnp
icebp
mov
sub
sahf
jno
rcrb
sub
or
pandn
mov
out
dec
push
cwtd
rcr
sti
sbb
mov
iret
jmp
mov
adc
int3
jmp
dec
push
fisttpll
jb
gs
repnz
sbb
xchg
notb
sub
test
faddl
sbb
pop
cmpsb
lcall
mov
mov
test
cmp
ds
outsl
inc
mov
xchg
mov
push
xchg
vpmacssdqh
pop
inc
push
cmp
repz
shl
pop
xchg
insl
sbb
fistpl
add
popf
mov
xchg
pop
dec
jbe
mov
jno
sarl
pop
loopne
std
mov
ror
out
ds
call
and
lcall
pushf
sbb
xchg
imul
dec
fsts
cmpsb
push
repz
mov
or
cltd
nop
xchg
subb
mov
dec
sub
ss
push
popa
sub
push
in
add
mov
dec
pop
in
insb
mov
insb
xchg
xor
sub
repnz
inc
cmp
mov
push
aas
filds
jge
sub
xchg
cli
add
fmul
mov
lock
xchg
add
mov
xor
into
xor
out
call
cmp
lcall
cmp
out
scas
xchg
push
movl
or
test
xor
sahf
xchg
xchg
and
mov
cmpb
push
xchg
mov
or
mov
xchg
pusha
ret
out
jmp
mov
insl
push
test
add
popa
or
sub
and
out
loopne
popa
aad
aam
fwait
mov
aas
pop
mov
movsb
shrb
mov
fldl
in
cmp
inc
xor
xor
sub
pop
shlb
mov
daa
hlt
les
shll
pop
xor
push
mov
push
hlt
jl
or
sahf
jns
popa
xchg
add
sbb
ja
in
jecxz
ss
mov
adcl
inc
in
enter
out
push
dec
mov
pop
pop
sbb
cs
mov
pop
lods
ficomps
push
mov
push
pop
adc
outsb
pushf
incb
mov
push
stos
call
dec
lock
sbb
xchg
orl
and
dec
push
or
mov
pop
sbb
rcrb
data16
adc
sbb
repz
push
es
xor
and
lods
lret
sbb
movsb
in
adc
andl
ficoml
out
leave
lahf
iret
and
je,pt
mov
xor
or
mov
imul
mov
divl
or
pop
cmp
mov
jmp
std
jp
or
jbe
xor
jae
or
pop
rcrl
iret
xchg
push
mov
add
addr16
mov
mov
add
mov
dec
jecxz
mov
arpl
fcoms
les
jae
cltd
cli
jl,pn
cmp
and
xlat
loop
xchg
and
push
mov
cmpsl
sbb
insl
jl
loopne
fists
inc
mov
jbe
adc
jo
cmpb
daa
cmp
jne
fidivs
mov
ret
sbb
das
dec
dec
out
dec
push
sar
sarb
dec
pop
mov
shl
loop
lcall
cmp
popf
sbb
clc
in
ret
xchg
stc
mov
add
addr16
push
in
dec
dec
and
sub
xchg
repnz
add
adc
jno
or
sbb
movsb
andb
or
xchg
xchg
cmpsb
sbb
pop
xor
sub
js
repz
cmpsb
or
mull
dec
mov
jns
gs
push
hlt
inc
fdivrp
cmp
lcall
cmpsl
popf
jbe
push
and
xor
divb
cmc
jmp
cld
pop
outsb
test
cld
adc
mov
cmp
in
xor
pop
enter
or
pushf
aaa
or
lret
int
loopne
imul
mov
fnstsw
xor
nop
pop
xchg
ljmp
mov
add
fincstp
sbbb
inc
mov
aad
nop
mov
xor
pop
mov
leave
das
mov
mov
add
pop
scas
dec
adc
dec
xor
push
rcrb
sbb
popf
test
aam
loopne
sbb
jne
jl
mov
fimull
shlb
mov
xchg
xor
and
pushf
mov
pop
hlt
rolb
dec
notl
outsl
mov
stos
mov
in
out
nop
mov
out
sti
dec
cli
adc
jns
cs
inc
aad
mov
sub
in
jg
test
cmp
icebp
sub
jbe
mov
ja
test
rcrl
or
arpl
xchg
inc
jp
lods
test
loope
or
test
push
push
or
inc
sub
pop
pop
cmp
xchg
out
push
mov
pop
mov
and
dec
movsl
mov
aaa
lret
xorb
insb
sbb
orl
inc
das
call
repz
xor
dec
test
pop
int3
gs
adc
add
mov
dec
mov
fmull
add
jbe
push
push
dec
sbb
loope
test
in
cmp
in
and
scas
mov
int
pusha
push
rorw
imul
jle
adc
and
fs
mov
jae
movsl
push
fidivl
mov
cmpsb
inc
adc
or
pop
das
adc
jmp
icebp
pop
mov
mov
cmpsl
inc
enter
jp
mov
pop
addl
push
addr16
fsubl
sbb
xlat
movsb
and
addl
or
mov
xor
or
inc
clc
adc
push
into
sub
or
js
mov
pusha
dec
inc
sbb
test
cltd
jecxz
int
xor
push
pushw
int3
fstpt
in
ja
cs
push
ds
mov
lret
fs
jecxz
lock
sbb
add
dec
dec
fwait
xchg
cmpsb
pop
ss
ja
or
dec
ja
cli
aaa
out
push
push
ja
mov
insb
and
fidivs
out
pushf
or
xlat
test
in
push
jmp
sbb
fldcw
push
hlt
jmp
cmp
loopne
xchg
icebp
or
inc
jo
cmp
xor
cmpsl
outsb
rcr
or
popa
mov
jno
aas
and
sarb
stc
jb
inc
fiadds
add
lods
pop
xlat
sarl
or
xor
jae
mull
popa
hlt
jle
sbb
cltd
add
mov
mov
aas
jnp,pt
mov
bsf
pop
mov
adc
sub
jbe
mov
jno
mov
push
andb
adc
or
scas
int
dec
enter
mov
adc
sub
test
mov
lret
jo
les
dec
pushf
fdivp
rcll
jmp
lea
add
in
ljmp
rcrb
je
cwtl
ljmp
pop
lret
inc
push
loopne
cmp
cmp
ljmp
mov
fs
lret
push
mov
pop
outsb
sbb
addr16
jl
push
es
fbstp
loopne
cli
adcl
push
dec
arpl
mov
and
sub
push
out
sub
jmp
int
xlat
jae
adc
add
pop
lahf
imul
sbb
jle
xorl
jb
inc
push
lock
ror
dec
cld
sbb
aam
aad
and
pop
negl
add
imul
loopne
mov
into
push
xchg
shrb
mov
stc
or
mov
fsubr
or
jle
jns
in
pop
cmc
roll
out
xor
push
cmp
fcmovne
mov
mov
xchg
add
xchg
and
add
outsl
aad
sbb
test
dec
sbb
cmp
xlat
ja
sbb
pop
scas
es
push
cmp
sbb
xchg
dec
or
rcrb
adc
in
and
sbb
addl
sti
adc
push
xchg
xor
pop
add
or
inc
xchg
xchg
inc
jae
fstpt
inc
arpl
roll
mov
lock
cmc
add
rorl
insb
mov
repnz
or
xchg
mov
dec
push
dec
arpl
ret
ret
mov
popf
cmpsl
rcll
inc
shll
sub
xchg
xor
jo
mov
test
pop
outsl
fwait
xor
mov
movsl
inc
mov
out
idivl
xchg
jne
sbb
mov
push
mov
loopne
lds
in
iret
lea
xlat
in
jecxz
pop
jmp
aad
movaps
rep
out
clc
push
imul
lar
mov
inc
icebp
xchg
roll
cmc
pusha
or
inc
shll
js
loop
jge
pop
js
sbb
shrb
jmp
les
adc
enter
mov
loope
outsl
ret
jns
sti
insl
incb
and
xor
adc
fnstcw
add
pop
jp
test
outsl
mov
cwtl
lock
insl
dec
push
push
sbb
or
push
test
repnz
mov
outsb
das
or
mov
push
cmp
pusha
sbb
mov
dec
popf
hlt
mov
pop
iret
dec
cld
je
inc
sarl
mov
pop
stc
xchg
out
inc
aas
pop
leave
xor
mov
adc
lds
xor
fidivs
fsubp
dec
dec
ja
add
mov
mov
fcmovb
test
xor
and
pop
or
lock
or
jae
test
imul
sbbb
jmp
jo
sbb
aad
and
xchg
clc
mov
push
mov
ja
std
xchg
jns
xchg
outsl
movsb
sub
jbe
mov
xchg
mov
dec
fildl
sbb
iret
mov
filds
sarb
add
aam
repz
xor
xchg
jg
adc
cltd
cwtl
icebp
pushf
jecxz
adc
mov
dec
dec
push
fadds
outsl
shl
inc
sbb
inc
addr16
mov
rcl
in
fisubrs
and
and
xor
xor
adcb
sub
push
or
cmp
mov
jecxz
aad
rol
pop
popf
fisttps
cli
jecxz
xchg
mov
xor
mov
fsubrs
dec
mulb
or
add
pop
xor
jo
ud2
adc
addr16
xchg
daa
iret
push
insl
xor
imul
cmp
mov
xor
je
sub
inc
xlat
loope
in
jle
loope
ds
jmp
fsubl
rcrl
inc
out
imul
dec
leave
inc
call
aam
sub
insb
push
add
xchg
fiadds
sarl
in
dec
sub
icebp
push
rolb
ret
cli
inc
into
cmpsb
jle
ret
add
xchg
mov
ret
pushf
or
out
nop
cmp
xchg
scas
cmp
call
scas
or
xchg
cltd
sbb
or
or
repz
dec
pop
mov
shll
jmp
fnstsw
ljmp
add
jo
popa
mov
or
dec
in
cli
cmp
cmp
mov
or
ss
inc
add
cmp
pop
jmp
arpl
or
sahf
insl
push
fcmovnb
popf
pushf
pop
sub
push
test
sub
mov
inc
push
ficoms
adc
jge
jne
adc
add
inc
push
push
insb
push
lret
fs
inc
ds
jmp
cmpsb
lds
fwait
jle
pop
icebp
arpl
cltd
mov
fsubs
jo
repnz
add
outsb
cmp
xchg
cmp
xlat
outsl
es
test
cmc
or
aam
out
addb
push
xor
sub
movsb
push
aaa
pop
rolb
sar
loopne
sarl
nop
inc
sbb
je
xchg
push
cmpsl
push
sbb
inc
push
pop
ss
xor
cld
sub
add
outsl
jnp
int
shll
lahf
cmp
dec
xchg
negl
xor
cwtl
pop
aad
int
pop
sub
sub
mov
xchg
jle
mov
xor
push
stos
dec
out
push
inc
pushf
clc
pop
mov
push
adc
sbb
cmp
jb
outsl
inc
hlt
dec
cwtl
stos
int
lock
into
mov
sub
add
push
nop
gs
sub
xchg
sbb
lret
rep
lock
jnp
mov
out
adc
cmp
mov
loop
hlt
lods
lahf
mull
mov
shr
and
fbstp
pop
adc
add
pop
sub
js
mov
in
fisubs
sub
xor
fdivl
jmp
xchg
mov
leave
jl
inc
or
lods
sub
add
jmp
jno
clts
or
aam
push
push
xor
push
jl
cld
cld
cmp
and
cmp
jae
outsl
js
mov
mov
aad
addr16
pop
sub
lea
push
imul
imul
lods
shr
mov
add
stos
inc
or
xor
fcmovne
jno
mov
leave
xchg
lods
push
out
xchg
mov
call
pop
xor
mov
jo
mov
xor
arpl
xchg
enter
inc
icebp
rolb
adc
jno
aaa
ss
pop
cmpsl
add
dec
aam
aad
sbb
stos
add
pop
cmp
mov
mov
popf
dec
xchg
adc
jo
lcall
fdivrp
xor
adc
mov
jge
int3
sarb
dec
push
into
fadds
sbb
test
and
popa
sub
cmpsl
xor
dec
pop
scas
pop
xchg
scas
out
imul
out
inc
xchg
sbb
xchg
imull
xchg
or
lds
jns
or
pusha
ss
arpl
daa
jp
lds
push
adc
xchg
clc
gs
fstpl
pop
adc
xchg
idivb
mov
push
push
adc
jne
mull
bound
aad
popa
pop
fnstsw
dec
add
push
inc
cmpsb
andl
inc
xor
push
sub
or
mov
pop
xchg
sub
mov
shll
push
xor
das
pop
cmpsl
mov
xchg
or
sahf
sbb
xchg
inc
and
inc
insl
push
imul
cmpsb
addb
inc
das
cli
arpl
cwtl
or
out
rclb
jno
dec
idivb
adc
inc
lods
stos
ss
or
pushl
sub
daa
cli
loope
sbb
dec
xor
outsl
jecxz
sub
loope
stos
push
and
adc
add
mov
xor
or
xor
dec
into
dec
jno
or
push
lods
mov
fcoml
lret
repz
jmp
mov
and
push
dec
jne
fisttpll
inc
sub
movsl
mov
arpl
xchg
dec
push
loope
rorl
dec
data16
cli
fistl
push
cli
es
push
push
jne
pop
test
pop
nop
fisttpll
shrb
sub
xorb
push
sbb
ja
xor
sbb
sub
ljmp
adc
add
or
sahf
xor
xchg
iret
insl
aad
jae
les
jmp
and
mov
cltd
mov
fnsave
pushf
push
xor
test
fisttpll
inc
movsl
ds
xchg
push
daa
ret
cmc
pcmpgtd
pusha
stos
jecxz
mov
xchg
nop
sub
mov
das
push
pop
enter
cli
imul
call
out
jno
push
das
fists
xchg
in
jmp
aas
sub
sub
mov
stos
xchg
in
cltd
xchg
mov
cmp
shl
clc
xchg
pop
adc
test
enter
xor
sub
mov
pop
inc
and
ss
xor
cmp
imul
test
addr16
stc
ljmp
mov
xor
push
addb
scas
fisubrs
and
ljmp
jnp
add
adc
stos
stos
data16
jno
xchg
inc
cltd
orb
lret
stos
lods
ret
and
and
add
lret
cmpsb
cmp
jle
lods
imul
inc
dec
cmp
push
mov
or
adc
inc
xor
or
je
fisttps
arpl
mov
out
sub
sbbb
mov
imulb
das
sahf
test
mov
xor
lret
cmc
lea
jg
rcll
or
out
sbb
adcb
cwtl
enter
iret
dec
flds
in
lahf
sub
and
sbb
or
inc
test
imul
cli
shl
filds
cmp
dec
dec
sbb
sub
or
push
mov
cmp
cmp
sub
pop
xor
fs
out
and
movsb
outsl
xlat
jnp
lret
and
ljmp
inc
jns
push
dec
scas
xchg
lock
test
or
push
lea
dec
out
jo
inc
pop
jmp
mov
hlt
cmp
clc
push
icebp
frstor
inc
fisttpl
push
imulb
cli
mov
test
std
inc
dec
add
mov
sub
mov
clc
cmpl
insb
fldcw
push
adc
rorb
in
ja
jae
lods
jle
fdivs
cmpsb
pop
call
adc
adc
iret
mov
and
jnp
outsb
add
xor
mov
in
lahf
jae
int
pop
orl
scas
sbb
sub
sub
jecxz
jmp
fwait
push
mov
sbb
cmpsl
sub
cli
in
mov
repnz
or
cmpsb
fwait
and
jecxz
adc
fiadds
cld
cmpsl
jnp
mov
and
setae
jl
or
enter
scas
cli
xchg
mov
inc
lcall
sti
pop
sub
aas
lahf
lock
imul
mov
mov
adc
imul
push
stc
jp
pop
lock
sarl
push
push
push
out
in
loopne
pop
test
insb
int3
jbe
fmulp
mov
popa
stos
or
lock
ss
andb
push
cmp
jmp
testb
jnp,pt
dec
mov
inc
inc
mov
lret
add
movsl
movsb
push
mov
test
push
and
gs
push
sbb
ds
inc
icebp
rorb
jo
addr16
cld
cmc
test
xor
in
mov
lea
xchg
inc
jne
sahf
push
pop
mov
es
das
out
inc
mov
popa
test
mov
in
clc
mov
andb
outsl
mov
pop
push
lret
dec
popa
jl
mov
cs
push
imul
sub
cmpsl
fcmovnu
adc
fidivrl
sbb
jl
adc
cwtl
movsb
xor
xorb
shlb
movsl
outsb
lods
mov
add
jle
push
clc
mov
fwait
mov
aad
inc
insb
jbe
dec
ficomps
mov
add
cmpsl
jne
add
sub
jns
push
enter
mov
pusha
and
mov
popf
sub
jbe
xor
push
das
mov
and
cld
mov
fisttpl
cmc
ja
mov
inc
xor
xchg
stc
aaa
das
cld
cmp
xlat
mov
xchg
jno
arpl
gs
push
mov
incl
lret
pop
out
adc
out
das
or
adc
loope
das
mov
xchg
xor
inc
movsl
xlat
jnp
mov
push
mov
test
pop
stc
add
aaa
pop
adcb
add
cwtl
je
push
mov
pop
add
adc
ja
dec
inc
inc
mov
mov
and
adcb
iret
jb
test
aam
cmp
pop
push
xor
inc
inc
fisubrs
add
adc
dec
loope
test
clc
shrb
push
pop
addb
fldl
xorb
jne
lret
insl
adc
call
andb
dec
sbb
jb
aam
jae
jnp
ljmp
sbb
pop
scas
adc
or
into
pop
iret
jmp
sbb
xlat
mov
cmpsb
cmp
dec
push
sbb
mov
add
mov
xor
stos
mov
adc
xlat
mov
je
js
sbb
add
add
mov
sbb
sti
jge
push
or
jl
jne
jecxz
xchg
mov
cmpsb
testl
push
ds
repnz
mov
loope
rclb
adc
xchg
stos
cmp
xchg
in
pusha
jmp
sub
outsl
call
mov
mov
loopne
dec
sub
js
pop
jl
enter
or
sbb
mov
dec
ljmp
mov
xlat
cmpsb
fs
aam
cld
lea
lea
jge
push
add
loope
jbe
cwtl
js
fsts
enter
jb
sti
jo
out
lock
inc
das
std
loope
mov
daa
inc
in
xor
push
sub
mov
jno
jge
aam
and
jne,pn
ljmp
lds
aaa
mov
shrl
and
pushf
inc
dec
sub
icebp
leave
mov
cltd
lret
mov
imul
and
into
aaa
mov
cmpsl
out
push
dec
mov
sub
inc
cmpsl
sbb
push
incl
push
mov
imul
loop
stos
mov
dec
push
dec
fnstcw
shll
pop
push
aad
push
scas
cmc
dec
movb
insb
ss
testb
call
inc
das
sub
pop
sbb
jmp
mov
imul
loope
scas
push
jle
outsl
inc
adc
lcall
xor
and
arpl
cmp
mov
cwtl
pop
mov
hlt
xchg
inc
adc
mov
adc
scas
clc
jb
push
push
fwait
add
stos
mov
mov
mov
das
push
push
and
cli
stc
std
add
ja
inc
ds
and
std
jle
sarb
loop
add
in
imul
movsb
movsl
lock
out
insb
test
and
or
dec
jp
lods
es
test
out
lea
and
cmp
cwtl
mov
adc
push
rol
push
sti
iret
bound
push
sbb
icebp
xor
add
cld
and
in
mov
arpl
lcall
push
ds
cs
push
arpl
fldl
and
push
andb
dec
mov
ret
mov
adc
xchg
imul
mov
push
adc
push
sub
fmulp
mov
ds
decb
push
cmp
mov
pop
repz
jp
jg
loopne
mov
mov
fistpll
cmpsb
int3
inc
inc
outsl
test
rorb
enter
pand
cmc
jno
xor
cmp
cs
rol
cltd
jmp
addr16
sbb
int3
mov
xor
and
pop
out
push
cmc
mov
in
rcrb
adc
xchg
inc
cli
movb
mov
out
lret
xchg
jne
leave
sub
inc
ret
or
push
movl
repnz
push
or
enter
loope
sbb
stos
add
in
xchg
push
lods
gs
push
adc
cld
or
push
cli
xchg
xchg
cmp
or
jp
push
add
jmp
test
repz
leave
out
test
add
xor
lods
repnz
jl
out
xchg
hlt
rcl
and
shll
mov
cli
iret
cmp
imul
mov
mov
add
ds
pop
popf
xor
pop
push
mov
pusha
jg
lcall
loope
push
mov
movsl
pushf
or
jne
jnp
in
fsubrl
int3
xor
xlat
mov
shll
rclb
cwtl
scas
ret
shll
push
scas
popf
cmp
aaa
adc
mov
inc
inc
loopne
adc
mov
stos
into
loop
ret
lea
ror
pop
sub
iret
pop
das
push
xchg
pop
adc
or
scas
mov
jns
stos
lods
sbb
dec
xchg
shl
mov
mov
sahf
sbb
sub
jg
cmp
sub
loope
or
pop
sub
arpl
daa
mov
push
ret
jmp
clts
add
out
in
sbb
outsb
sub
pop
or
pop
jne
icebp
dec
or
shll
repz
out
mov
mov
mov
or
mulb
inc
lea
pusha
stc
imul
int
ss
fwait
push
push
xchg
mov
fnsave
jb
into
outsb
rcr
inc
add
or
inc
cmp
pop
divb
add
mov
leave
dec
rcrb
xor
into
out
adc
lock
mov
push
ljmp
or
pop
aas
mov
xchg
popf
sbb
fs
ds
sub
xor
lret
out
hlt
test
int3
sbb
jb
lret
lcall
aad
mov
mov
sbb
sub
cmc
or
imul
mov
pop
cmpsb
rorl
push
insl
cmpsb
je
jecxz
push
sbb
loop
add
cli
adc
insl
inc
xor
mov
dec
popl
js
adc
pop
sbbb
xchg
loope
add
pop
pop
lret
addr16
stc
and
int3
ret
push
fdivl
das
fmull
fs
sahf
dec
leave
data16
enter
test
jl
pushf
ret
sub
jp
aad
stc
fmull
jae
loope
loope
repz
scas
out
mov
jp
pop
xchg
dec
mov
or
fcoml
cmp
ljmp
xchg
fsubp
call
or
mov
dec
bnd
mov
in
ret
loop
stos
jnp
dec
pushl
scas
adc
fnstenv
sbb
mov
pop
adc
pop
icebp
sub
mov
push
mov
jp
insb
or
push
jecxz
loope
repnz
xchg
sub
aad
cmp
aad
xchg
adc
sbb
sbb
cmp
adc
jle
push
fwait
int
scas
iret
inc
cli
int3
and
and
pusha
push
xor
jo
es
xor
fsubl
sahf
dec
out
negl
fiadds
xchg
mov
dec
lahf
mov
pushf
sbbb
int
add
xor
mov
popf
imul
repnz
int
pop
mov
mov
scas
push
icebp
sbb
inc
test
jle
repnz
push
filds
scas
and
sbb
and
xor
push
push
push
sbb
or
fstps
mov
or
ja
rcr
fists
xor
cmp
addr16
push
xor
sbb
js
mov
int
mov
mov
pop
lcall
sbb
bound
adc
push
test
and
cltd
cltd
mov
jp
cmp
std
cmc
ret
or
cli
xchg
rol
xchg
movd
sbb
sub
cwtl
xchg
aam
sbb
push
mov
jo
icebp
cwtl
sub
dec
rorb
enter
out
mov
nop
xlat
out
data16
lds
mov
dec
add
add
cmp
pop
or
js
pop
clc
ret
mov
adc
or
cmpsb
dec
data16
mov
xchg
mov
sbb
xchg
in
loop
push
cmp
jge
dec
test
add
lcall
in
xor
add
divb
mov
sahf
cmp
into
sub
and
out
jae
es
pop
push
fistpl
std
sbb
aad
in
jae
cmp
xchg
mov
pop
dec
xor
ja
inc
andb
xchg
sub
xorl
mov
adc
xor
sahf
cmpsl
sub
add
ja
je
inc
mov
mov
hlt
sub
imul
jo
test
dec
ror
adc
xor
cmp
xchg
cmp
sti
lahf
roll
xchg
mov
shll
scas
jecxz
dec
pushf
movsl
ret
sbb
call
jg
mov
fldt
sbb
dec
push
xchg
ljmp
mov
sbbl
je
repnz
push
imul
push
lea
dec
adc
andb
mov
or
test
leave
out
mov
fistpll
loope
int
stos
sbb
ficoml
inc
shll
les
push
iret
adc
push
cmp
dec
pop
dec
inc
aad
inc
push
les
adc
addr16
mov
into
add
push
idivl
fcmovnb
idiv
loop
lret
push
or
cltd
out
popf
xor
cmp
aaa
push
cmp
cmp
in
or
xchg
aam
mov
out
mov
leave
jl
out
xchg
andl
adcl
pop
loop
xchg
int
xor
addr16
imul
iret
enter
icebp
cmpl
push
jns
xchg
pop
sub
repnz
sub
mov
and
jo
and
mov
into
sarl
cwtl
scas
pop
subb
mov
sbb
add
mov
iret
sbb
repz
sbb
jl
lret
dec
push
test
sbb
test
cs
daa
mov
lods
or
jo
paddb
add
xchg
cli
add
mov
scas
testb
mov
jecxz
lea
aad
pop
movsl
aam
xlat
push
rorb
stos
push
xor
lret
cmp
adc
int
jb
repnz
int3
sub
inc
dec
sbb
test
adc
mov
xchg
mov
bound
std
in
dec
push
xchg
test
loope
or
jg
bound
enter
and
sub
sub
shrb
lock
rolb
mov
cmp
std
js
adc
sbb
and
mov
jno
add
ja
push
mov
or
cs
pop
fbld
mov
js
or
hlt
push
inc
aas
sbb
lods
mov
scas
pushf
mov
rcll
jge
push
cmp
sarl
shrb
or
mov
cltd
enter
pop
mov
mov
pop
xchg
sbb
fimuls
cwtl
ds
add
mov
imul
xor
adc
add
in
add
in
pop
ja
cwtl
xchg
mov
das
mov
lcall
xor
dec
and
ss
mov
push
sbb
repz
scas
scas
cmp
push
dec
sbb
outsb
add
mov
cmp
and
and
pop
addl
fdivs
mov
sbbl
repnz
jb
push
gs
xchg
fstpl
repz
adc
xor
loop
aaa
and
mov
dec
or
xor
pop
or
jmp
inc
mov
cwtl
xchg
xchg
mov
xlat
popw
inc
adc
fwait
jg
inc
cmpsb
sbb
in
adc
popa
dec
xchg
shrb
pop
jns
push
leave
jb
and
push
mov
sbb
icebp
adc
mov
inc
test
push
jae
jecxz
inc
pop
pop
cmp
pop
in
inc
mov
pop
imul
mov
cld
sbb
mov
mov
outsb
gs
dec
push
dec
pop
sub
jle
inc
xor
pop
test
out
and
insl
rcll
movsl
lds
jle
stc
xchg
and
push
outsb
sahf
std
xchg
sti
inc
leave
int3
pop
enter
stc
pop
mov
adc
lret
flds
pushf
inc
mov
ret
fwait
mov
loopne
bound
push
iret
or
mov
jle
inc
fcmovnb
sahf
es
repnz
xor
mov
xlat
lahf
sub
xor
sub
sub
subb
fbld
rclb
lea
sti
in
addr16
imul
jnp
loope
cmp
dec
leave
nop
in
pop
add
jle
push
or
mov
je
das
xor
sub
imul
rolb
pop
insb
in
cmp
xor
fsubrs
loope
mov
inc
cmp
sub
mov
or
jnp
mov
sub
roll
mov
pop
leave
ror
pop
shrl
adc
sbb
enter
adc
xchg
cli
lret
fbld
xor
lcall
stos
mov
xlat
stos
jle
push
repz
jmp
out
repz
xchg
sbb
push
insb
fwait
pusha
int
jnp
cmp
pop
in
dec
in
cmp
dec
in
outsb
jecxz
imul
xor
in
in
xor
es
flds
push
les
dec
add
loop
mov
jns
jle
aaa
push
mov
sarl
sbb
nop
stos
lahf
ror
int3
cmp
mov
leave
cmpsl
lcall
ds
xchg
testl
xchg
dec
out
and
fsubrs
call
mov
push
shlb
sub
pop
movsl
sahf
cs
dec
movl
mov
mov
ret
loope
push
pop
cmp
jne
xor
in
sbb
or
enter
mov
mov
mov
or
loope
or
pusha
cmpsl
data16
fisubrl
add
xlat
stos
mov
aas
mov
sbb
ret
dec
imul
sub
fistpl
sarb
inc
lea
pop
jcxz
stos
push
repnz
in
xchg
cmp
in
fs
ret
repz
stos
mov
scas
sub
mov
adc
and
add
pop
into
mov
and
push
cltd
andl
mov
sbb
lds
inc
pop
xchg
imul
push
stos
int3
fstpl
ret
cmp
jno
into
cld
cmp
enter
sti
shlb
out
cmc
hlt
push
les
sub
sub
dec
xor
and
popf
nop
and
test
fs
testl
mov
dec
hlt
test
pop
outsl
cwtl
xor
mov
out
loopne
xor
rcrl
dec
out
jmp
out
mov
add
mov
jae
jl
minps
and
xchg
cwtl
mov
movb
mov
jo
cld
mov
call
sbb
xor
pop
leave
or
push
je
lret
sub
add
lret
into
cmp
mov
pop
xchg
push
pop
sbb
add
in
adc
push
cmp
imul
add
aaa
jns
lahf
sub
out
mov
push
ja
mov
loope
cmc
mov
loopne
pop
popf
push
enter
out
add
sub
sub
popa
inc
adc
xchg
rorl
lods
fs
and
xor
push
cmpb
sarb
cmpsl
or
aaa
xchg
dec
or
mov
int3
pop
mov
nop
adc
lea
rol
out
cmpsl
and
dec
mov
cli
jmp
sbb
inc
mov
addl
scas
push
popf
jge
std
pop
je
and
xlat
stc
mov
aas
mov
js
and
popa
fists
out
fcmovbe
push
inc
sbb
fistpll
add
inc
xor
xchg
push
rorl
outsb
dec
sub
mov
inc
pop
jg
xchg
movsb
arpl
push
loopne
mov
pop
pop
xor
inc
orl
jle
jbe
arpl
pop
dec
push
sbb
sub
gs
sub
leave
das
push
jns
mov
lods
adc
in
pop
pop
xor
inc
not
jbe
mov
lods
fidivrl
pop
fmul
fstpl
jp
inc
sar
outsl
bnd
mov
shll
in
jecxz
ja
pop
setae
pop
inc
dec
cli
push
inc
inc
sub
sbb
push
test
arpl
cmpsb
jns
lret
fnstsw
rcll
cli
aad
xchg
adc
outsb
jo
out
jno
cmp
sbb
xchg
popa
scas
mov
cmp
dec
xlat
mov
call
pushf
aam
pusha
push
pop
mov
leave
dec
sub
cmpsl
das
loopne
dec
outsl
cmc
jmp
inc
aam
pop
pop
sahf
ret
mov
jo
repnz
pop
cmp
lahf
sbb
jge
sbb
sbb
dec
loope
lea
or
daa
in
xor
mov
mov
cltd
sub
inc
mov
out
mov
pop
icebp
mov
ja
fcoml
mov
fistl
lds
push
jns
inc
or
inc
push
push
and
and
test
testb
fdivrp
xor
sarb
fcomps
adc
adc
xor
dec
xlat
sbb
iret
mov
xor
fucom
lret
and
ret
clc
lea
mov
mov
popa
jecxz,pt
cmp
insl
mov
sarl
jb
out
lds
stos
or
or
lea
push
pushf
xor
in
imul
es
jmp
int3
inc
out
and
xlat
lock
loope
jl
mov
shlb
in
insb
mov
out
lds
dec
and
aaa
push
cmp
mov
xor
ljmp
xchg
bnd
push
and
mov
and
pop
loop
pop
enter
inc
jno
repz
dec
das
fisubl
sbb
add
aad
xchg
fdivrl
add
or
jo
inc
fildl
lahf
lahf
jns
out
ret
cmpsb
xor
inc
inc
hlt
stos
jnp
mov
fimull
in
pop
es
fwait
add
inc
popa
and
sbb
icebp
gs
pop
bound
fidivrs
and
ljmp
in
or
lea
mov
call
in
xchg
leave
inc
pop
lcall
dec
sbb
inc
in
inc
and
push
js
call
mov
xor
push
mov
test
sub
xor
adc
ret
rol
imul
mov
mov
fnstsw
insb
fnstsw
ja
subb
int3
addr16
cld
push
cmc
xchg
mulb
xchg
js
data16
js
shrl
jo
dec
scas
cli
and
xchg
sub
inc
adc
repnz
lret
sub
mov
ficompl
les
mov
and
shl
jo
lods
xchg
inc
dec
jns
lret
push
scas
jge
cs
push
aas
enter
shll
cmpsb
inc
bnd
decb
lds
pop
loop
test
pop
sbb
cwtl
push
pop
lea
pop
dec
push
add
push
sub
rsqrtps
cmp
xlat
jnp
mov
flds
je
adc
fs
mov
adc
inc
add
add
push
leave
pop
mov
popf
sarl
iret
or
or
cmp
sti
xlat
jle
jg
arpl
out
mov
cwtl
fbstp
xchg
xor
add
insb
loop
ficoms
jp
mov
jno
dec
adc
loope
call
mov
xchg
cmp
test
in
fwait
or
xchg
add
push
xchg
push
sti
hlt
data16
stos
lea
shlb
mov
inc
ret
sti
pusha
push
fistps
repz
loopne
mov
mov
jge
xor
pop
daa
inc
imul
jg
dec
jns
push
outsb
cmpsb
adc
push
mov
std
mov
sub
into
dec
pop
and
xor
subb
inc
pop
popf
mov
loop
add
shll
pop
xchg
call
loopne
sbb
xchg
out
mov
or
mov
repz
gs
insl
xchg
pop
addb
jle
negl
es
push
sbb
lock
pop
stos
jl
push
lahf
pop
mov
jecxz
xor
in
adc
mov
lds
mov
push
ret
or
insl
mov
xor
lock
div
shlb
dec
mov
shl
js
jnp
addr16
fcmovbe
cli
js
cmp
je
dec
cmc
mov
or
xchg
shll
mov
sub
mov
cmc
jle
inc
clc
hlt
xchg
adc
push
jecxz
inc
scas
std
push
bound
stc
cmp
jmp
xchg
mov
mov
mov
jae
jnp
dec
adc
jb
aas
inc
sysenter
sti
cli
ret
das
sub
mov
mov
lods
rcll
testb
lahf
add
loopne
rorl
cmp
movsl
push
lock
or
push
test
and
pop
add
cmpsb
pushf
jno
cmp
xlat
in
jo
loope
jbe
stos
and
enter
dec
jmp
lods
or
movsb
insl
mov
popa
xchg
xchg
adc
sub
cmpsl
vcvttss2si
pop
lcall
push
cmpsl
pop
fildl
insl
mov
mov
mov
lahf
and
lods
test
add
xchg
inc
inc
dec
pop
std
sbb
les
push
inc
add
push
sahf
jae
inc
outsb
sbb
jbe
jle
testb
das
pop
jge
jb
mov
jmp
jecxz
or
mov
pop
and
addr16
ljmp
aam
popf
loop
cltd
loopne
jo
dec
loope
sbb
add
cmp
sub
push
dec
pop
lds
jg
jns
sbb
jne
in
shl
mov
sub
jno
dec
sti
outsl
lret
pop
adc
or
ljmp
mov
pop
dec
dec
add
cmc
xor
dec
inc
mov
gs
js
sarl
or
jmp
stos
outsb
test
stos
mull
fdivrs
fcmovu
and
xchg
push
outsl
lods
mov
jmp
cmp
and
push
sbb
aaa
sbb
incb
cmp
sub
cmpsl
push
stos
adc
cmp
fimull
mov
stos
in
mov
icebp
aas
lahf
ret
subb
jg
mov
mov
mov
pop
lock
and
mov
add
mov
mov
enter
xchg
int
das
push
xchg
iret
shll
enter
pop
fcoms
push
call
adc
sbb
sub
adc
xchg
dec
mov
jns
xchg
push
or
push
leave
inc
mov
push
inc
enter
mov
dec
mov
xchg
xor
cwtl
mov
pop
lock
divb
xchg
enter
lahf
mov
inc
dec
pop
cmp
sub
pop
ja
xchg
movsl
std
mov
rol
cmp
or
insl
xor
clc
fwait
mov
xchg
jmp
sbb
sub
cwtl
adc
addr16
int
sbb
sub
sub
arpl
xor
stc
fsubrl
mov
xchg
mov
ljmp
dec
jg
pop
scas
lods
xor
subps
jae
lea
add
add
lret
mov
sub
fwait
inc
sbb
ret
lods
aas
push
jnp
push
lock
sbbb
loope
arpl
lods
stos
xchg
std
repz
jne
sbb
addr16
fdivrs
jb
add
ret
inc
sbb
les
aas
xchg
push
sbb
and
js
and
mov
dec
cmpsl
mov
pop
xor
cmp
test
cmp
and
test
stc
jl
lea
les
dec
lret
sti
fsub
gs
pushf
pop
jb
cwtl
bound
mov
mov
xchg
loope
jmp
inc
scas
lahf
cli
test
xorb
dec
dec
or
mov
xchg
jmp
xchg
and
mov
leave
inc
mov
inc
cmp
adc
xchg
adc
jb
ss
xlat
out
jae
and
das
inc
icebp
movsb
and
xor
les
je
push
insb
push
fcom
dec
nop
addr16
inc
pop
sub
add
rol
daa
mov
xor
stos
cmp
jbe
pop
jne
in
adc
lcall
xor
cwtl
or
lods
sbb
cmp
in
xor
cmp
xlat
dec
mov
sub
test
jmp
in
jbe
movsl
adc
imul
sbb
cmpsl
jns
mov
fistps
fwait
jle
loopne
outsl
mull
gs
rorl
mov
cmp
dec
idivl
mov
addr16
mov
pop
outsl
int3
or
out
xor
jo
xor
inc
popa
divl
pushf
xlat
mov
xlat
scas
jae
xor
out
mov
push
cld
mov
mov
arpl
stc
cltd
cvtps2pi
add
jae
out
jmp
scas
cwtl
mov
adc
movsl
stc
popf
jno
cmc
mov
leave
inc
mov
lock
add
sub
in
and
dec
xchg
inc
call
test
outsb
pushf
dec
outsb
lret
imul
sub
jle
pop
inc
ss
outsl
orl
out
mov
mov
and
xchg
fisubl
lock
mov
jle
or
xor
aas
stos
lret
xor
jnp
outsb
or
cmp
sbb
es
mov
jnp
out
fnstenv
or
std
icebp
pushf
int
xorl
ret
push
jge
adc
adc
adc
subb
mov
pop
add
mov
fdivrs
jmp
sub
inc
pushf
lods
xchg
push
test
push
add
mov
incl
stc
xor
stos
mov
popf
nop
mov
lcall
xor
mov
mov
sbb
cmpl
sub
fcompl
xor
imul
fists
mov
or
fadd
sbb
outsb
fwait
push
xchg
inc
fists
int
mov
int3
dec
daa
loopne
mov
cmc
or
cmp
cli
and
sbb
xchg
xchg
loope
lcall
jg
adc
out
jg
lods
and
fbld
repnz
cmc
mov
and
push
inc
mov
adcb
mov
das
adc
xor
sub
sub
pop
add
jl
fdivrs
test
pop
scas
dec
stos
pop
les
nopl
inc
mov
xchg
dec
gs
cld
mov
sbbl
mov
gs
pop
jbe
sti
insb
cmp
mov
pop
sbb
sub
orb
pop
lea
cmp
dec
fisttpll
pop
mov
sbb
lock
jb
sbb
push
pop
mov
and
push
out
and
lods
sti
jge
rcl
mov
and
inc
stos
filds
cmp
shrl
idivl
scas
xchg
aad
clc
insb
push
inc
mov
and
arpl
adc
cmpsl
xchg
mov
pop
aas
pop
dec
pushf
xchg
inc
lret
je
mov
dec
popa
and
sbb
xchg
xor
cltd
jne
sbb
shr
fwait
call
sub
inc
popa
or
fcompl
xor
push
addr16
inc
es
lret
mov
insl
js
scas
fstl
add
mov
cmp
notl
ds
cmc
adc
leave
sub
cmp
cs
sbb
push
add
jno
ja
cltd
test
push
pop
addr16
jecxz
ss
mov
into
or
mov
push
repz
mov
mov
mov
xchg
pop
xlat
sub
jb
outsb
shl
jbe
cmp
adc
xchg
int
leave
lret
gs
fdivrs
cs
aad
int3
dec
daa
sbb
push
add
mov
xchg
fcomps
dec
loopne
or
lds
lret
xlat
scas
adc
add
pop
div
cmp
push
adc
test
mov
jns
sub
in
xchg
push
repz
and
jl
sbb
ret
pop
in
xor
shlb
add
leave
cmpsb
xchg
dec
dec
insb
test
aad
lods
je
pop
push
inc
push
out
mov
mov
pop
add
jo
jno
cmpb
jecxz
lea
into
and
out
lret
mov
sbb
iret
stos
ficoml
test
lret
xor
sub
ja
mov
add
div
push
fs
push
inc
aad
rol
stos
call
gs
or
inc
adc
or
jge
pop
inc
aas
push
sub
cmp
stos
scas
mov
cli
out
aaa
adc
mov
xor
cltd
pop
outsl
inc
xchg
aas
aam
out
cld
xor
es
pop
inc
out
adcl
jns
pusha
sbb
or
ljmp
scas
testl
into
add
das
inc
jecxz
jl
idivl
in
mov
cwtl
pop
adc
dec
cmp
test
jle
lahf
lock
pop
xchg
xchg
xchg
jbe
xlat
cmc
cmp
jo
or
xchg
jno
int
stos
jne
xchg
mov
xor
dec
and
testl
push
adc
xorb
sbb
cmc
push
push
dec
adc
pop
lcall
add
sbb
sub
cmpsb
sub
ljmp
inc
lock
xlat
push
jmp
pop
cmp
cmp
in
jg
mov
and
push
pop
inc
dec
pop
xor
ja
in
jae
jecxz
jp
clc
pop
out
rclb
ret
and
jb
cmp
push
lret
cmp
or
jns
mov
mov
mov
daa
mov
inc
jecxz
push
aas
xor
in
jg
cwtl
cmp
jnp
mov
push
pushf
dec
jae
cmpsb
es
es
mov
scas
sbbl
ss
lret
jecxz
fimuls
or
xor
fisttpl
mov
sbb
push
mov
xchg
xor
fadd
into
ljmp
test
je
cs
inc
or
pop
or
rcrb
lock
mov
mov
pop
cmp
popa
dec
imul
jnp
inc
sarl
adc
mov
dec
ljmp
insb
gs
pop
push
out
popf
in
sbb
pushf
sub
dec
ret
add
jns
push
nop
je
xor
sti
pop
add
inc
add
dec
pcmpeqd
adc
adc
push
mov
lods
mov
sub
test
mov
jp
xor
out
xchg
cmp
in
mov
out
in
mov
lahf
out
cli
add
add
nop
orb
cmp
mov
cmc
sbb
setbe
xor
cmp
dec
mov
sbb
test
fsubl
pop
call
iret
lret
mov
xchg
pop
test
mov
loope
sub
aas
lea
push
test
adc
jb
jmp
jno
adc
repnz
mov
divl
popf
and
adc
addb
push
aam
popf
jae
lcall
inc
lret
pop
dec
sub
cmpsb
mov
adc
aam
lods
popa
cld
xlat
shrb
mov
jo
adc
push
xor
roll
cmpsb
shrb
pop
fistpll
shr
enter
rcrb
mov
sbb
add
stos
fwait
jmp
mov
insl
add
mov
sbb
mov
in
add
cli
int
js
xlat
stos
dec
adc
pushf
sbb
scas
dec
lahf
and
push
sbbb
mov
push
imul
cs
daa
clc
push
sub
popf
inc
dec
sub
and
aaa
shl
dec
mov
hlt
subb
fld1
jl
enter
aas
sub
enter
jo
dec
cmpb
ret
mov
and
cmp
push
mov
jecxz
rcll
les
xor
push
ja
scas
lods
mov
repz
repnz
push
fs
movsb
arpl
sbb
push
mov
cmpsl
mov
clc
sarb
pop
push
mov
stc
int3
mov
xor
pop
or
add
call
lret
pop
and
and
daa
jnp
and
addr16
xchg
add
mov
nop
subl
push
in
sub
int
mov
mov
fisttps
shr
in
mov
mov
add
sub
pop
loop
mov
dec
mov
faddp
scas
inc
sub
and
cmp
out
inc
mov
xor
add
push
mov
jge
call
mov
mov
call
lret
int
mov
sub
xchg
sub
mov
fcomps
ja
into
xchg
ret
inc
dec
js
sbb
cmc
dec
sub
add
add
and
cvtps2pi
cmp
xchg
fildll
jle
dec
mov
push
testb
test
addl
mov
sub
mov
js
insl
or
fs
pop
imul
iret
dec
mov
mov
cmp
jmp
int
es
stos
ds
xchg
mov
jp
or
cld
aad
jmp
adcl
dec
cmp
cmp
xchg
into
mov
aad
jb
int
sub
sub
inc
fdivrl
xor
mov
cld
ficoms
mov
shlb
add
mov
shrb
push
rolb
push
imul
data16
sahf
scas
popa
stc
fwait
or
dec
in
sti
dec
sti
lods
daa
notb
lcall
jno
sbb
pop
testl
cmc
fs
sub
fs
mov
cmp
imul
jb
movsl
lret
ficoms
std
push
cmc
pushf
lcall
adc
notl
jl
leave
mov
push
scas
pop
inc
mov
cltd
into
xchg
sub
ficomps
jnp
movsb
adcl
sub
out
aad
call
lret
sbb
cmpsb
das
sbb
and
sbb
xchg
aad
cmpsl
dec
adc
xchg
in
cmp
add
scas
xchg
push
or
cmp
pusha
jecxz
lods
movsl
lret
add
shlb
mov
sbb
push
iret
mov
das
inc
je
adc
mov
xor
cmp
sub
and
pop
cld
inc
imul
cmp
mov
cld
dec
sbb
testl
jnp
push
and
iret
dec
jnp
pop
sbb
movsl
cmp
test
lods
jecxz
add
andb
je
dec
or
cmp
mov
test
mov
sahf
inc
test
push
xchg
push
mov
leave
dec
pop
xchg
mov
inc
cld
push
push
mov
lret
hlt
mov
std
xchg
mov
mov
pop
repz
dec
imul
pop
mov
jns
orb
and
inc
loopne
shl
cli
out
jmp
cmpb
or
dec
rcrb
gs
in
pop
cmp
xor
popl
into
rcrb
sbb
nop
jge
sahf
dec
adc
outsb
mov
cmpsl
faddl
sbb
pop
cmp
push
arpl
sbb
pop
cmpsl
push
sbb
sti
addl
lret
cmp
pop
jmp
and
pop
dec
sarl
outsb
pop
pop
mov
leave
es
into
inc
pop
mov
push
in
pop
int3
sub
or
out
lret
ret
in
jns
aaa
jge
push
push
push
in
sub
jg
dec
loope
lock
cmp
movsb
ret
fisubrl
or
bound
es
xor
push
mov
jmp
cli
sbb
or
clc
jp
nopl
sbb
dec
in
lods
xor
std
ss
mov
nop
mov
sub
mov
aam
or
mov
clc
jl
jno
std
push
pushf
jb
mov
cmp
and
lock
lret
xor
pop
insl
jecxz
loopne
push
dec
sbb
cmp
xchg
pop
mov
les
fcoms
inc
arpl
sub
xor
gs
add
inc
hlt
or
fwait
repz
scas
pop
inc
pop
xchg
test
xchg
cmpsl
in
inc
leave
sti
lea
out
add
xor
xbegin
lret
out
dec
lods
inc
leave
pop
out
sbb
cmpsb
xchg
push
lahf
stos
jbe
and
mov
dec
hlt
outsl
imul
lock
cmp
sahf
push
fdivl
test
xchg
jmp
adc
pushf
add
pop
adc
pop
cli
mov
push
cmp
add
mov
add
fsubrs
push
andl
repnz
cmp
iret
push
adc
mov
ret
jp
mov
movsb
adc
push
cld
fs
add
jl
imul
mov
out
push
sub
ljmp
xor
adc
aas
sbbl
rcl
inc
arpl
add
data16
pop
sahf
push
int
pushf
lret
dec
rcrb
jo
fwait
jae
xchg
iret
test
mov
sub
sbb
push
sbb
xor
mov
inc
cmp
push
shll
rcll
dec
int3
xor
rcrl
in
movsl
lret
xchg
dec
cwtl
mov
ror
mul
sbb
dec
arpl
cmp
iret
xchg
mov
adc
arpl
mov
ret
das
dec
mov
xchg
jnp
test
roll
mov
jl
mov
fdivrl
iret
xor
push
push
inc
aaa
int3
fsubrl
inc
sbb
push
icebp
gs
cmp
in
movsl
push
jmp
sbb
jno
jbe
or
fstl
gs
mov
clc
lahf
cmp
inc
xor
aam
sub
xchg
cmp
xchg
xor
cltd
iret
es
mov
and
enter
shlb
je
mov
jmp
out
rcl
pop
mov
or
xor
cmp
mov
addr16
jns
fcmove
out
ja
je
adc
jmp
inc
xchg
mov
jo
fst
push
cmp
fdivl
add
or
mov
and
mov
push
xchg
pop
mov
and
cltd
rcr
inc
xor
mov
lcall
push
push
xor
xlat
shrl
or
inc
bound
loop
test
aas
jo
incb
out
ret
int
aaa
adc
sub
xchg
ds
jecxz
test
xchg
test
cmpsb
push
lea
arpl
mov
mov
pop
test
push
cmp
adc
dec
arpl
mov
push
or
aas
dec
dec
mov
xchg
negl
movsl
icebp
adc
fs
ficompl
sub
imul
inc
and
jg
pop
test
jae
mov
jae
xchg
dec
xor
dec
and
cmp
dec
jae
orl
pop
or
movsb
inc
cld
push
or
lea
push
nop
fcmovbe
sbb
arpl
push
inc
lods
loopne
setb
rcl
lret
jo
cmp
jp
xchg
mov
rcrb
adc
clc
loopne
std
int
sub
ret
mov
inc
jno
mov
mov
pop
scas
popf
xchg
push
fs
lods
xchg
sbb
xor
mov
aad
jns
add
mov
inc
xchg
adc
pop
jb
jne
js
mov
into
sbb
das
mov
fnstenv
cld
ficompl
leave
pushf
daa
loope
je
into
jmp
mov
sub
insl
subl
shlb
lret
push
or
inc
sti
bound
aas
mov
loopne
adc
fdivl
lea
add
xor
setp
jb
adc
pushf
popa
cmpsb
pop
mov
or
dec
sbb
movsl
ret
lcall
cmc
enter
sbb
pop
xlat
popf
fnsave
push
inc
mov
jg
pop
mov
inc
aas
sub
sbb
stos
cmp
cs
inc
cld
pop
daa
pushf
sbb
xor
xlat
fucomi
jne
inc
mov
test
inc
jle
out
push
jno
repnz
mov
jns
mov
in
xchg
fidivrs
pop
or
push
outsl
cmp
sub
lock
loopne
adc
outsb
shlb
nop
xor
fiadds
dec
mov
and
xor
jne
cmp
outsl
pushf
xor
out
mov
mov
mov
cmp
repz
fistpll
lods
ljmp
in
sbb
int
in
jb
call
cmp
xchg
dec
fwait
xorb
mov
loop
je
lahf
loop
repz
xor
mov
pop
mov
je
or
hlt
fbstp
inc
cmpsb
cld
dec
mov
into
pop
pop
daa
stos
push
sarb
mov
les
test
jns
push
fsubrs
icebp
jne
imul
inc
mov
mov
repz
mov
add
adc
insl
xchg
daa
cli
lahf
hlt
les
je
gs
mov
arpl
jno
pop
fldcw
int
cmp
push
stos
push
xor
sub
shl
out
jmp
outsb
hlt
addr16
addl
rcrb
xchg
int3
js
iret
xchg
xor
jb
pop
leave
scas
lods
push
cmp
faddl
fimuls
ret
xor
loope
hlt
sbb
push
mov
addr16
pop
out
clc
push
add
add
jg
lods
loope
sbb
rorl
sbb
addr16
out
inc
movsb
pop
mov
mov
mov
and
movsl
pop
xchg
dec
jge
test
ljmp
sarl
xchg
jns
std
mov
and
push
xlat
sysenter
and
js
and
sbbl
outsl
fucomip
cmp
xchg
pop
sbb
sbb
xor
mov
sub
enter
movsb
sti
dec
pop
inc
sbb
push
in
sub
mov
call
cmpsl
xor
jbe
aaa
mov
int
adc
inc
push
mov
imul
mov
or
in
or
xchg
dec
add
and
cli
movsb
scas
outsl
mov
out
loopne
fwait
or
ljmp
data16
dec
xlat
fwait
shll
call
ret
pop
mov
shrb
test
inc
jle
fiaddl
repnz
dec
dec
popf
sahf
popa
xor
inc
or
int
or
jg
je
and
pop
nop
scas
sarl
jge
lock
frstor
or
or
loopne
sbb
push
aas
cmp
in
xchg
leave
sub
add
xor
sbb
xchg
in
dec
add
mov
cmp
scas
mov
jmp
sbb
inc
enter
call
jns
xlat
fsub
sub
jo
lret
push
sub
hlt
push
xor
mov
mov
pop
addr16
filds
xchg
pop
jo
push
push
cld
dec
loop
push
push
push
dec
mov
pop
xor
push
cltd
jne
mov
xor
aas
iret
pop
sub
push
fimull
sub
mov
cmp
jmp
mov
mov
pop
add
mov
pop
mov
cltd
xchg
inc
dec
popa
or
push
fstpt
inc
inc
shlb
xlat
mov
and
sub
mov
jecxz
mov
lods
les
ja
lret
mov
mov
mov
pop
in
adc
sahf
loope
mov
push
adc
cmpsb
pop
faddl
and
imulb
mov
pop
xor
ss
mov
cwtl
push
push
test
adc
icebp
ror
mov
mov
leave
mov
ljmp
fnstcw
push
fnstcw
popf
xor
sbb
sbb
leave
movsl
lods
xor
scas
sti
push
aam
sub
mov
push
or
test
pusha
lds
lcall
pop
mul
or
pop
dec
loop
popf
adc
lods
cmpsl
mov
jno
stos
cli
mov
push
jmp
cli
jmp
daa
pop
pop
icebp
inc
icebp
xor
fmull
aas
jle
add
jae
daa
jbe
mov
rcrl
push
pop
dec
shrb
scas
test
in
mov
cmpsl
dec
inc
sbb
js
push
sbb
bound
das
lods
mov
mov
xor
loop
mov
inc
adc
cmpsb
in
mov
mov
mov
data16
add
repz
or
roll
lcall
push
icebp
hlt
nop
sarb
xchg
xor
xchg
add
inc
push
pop
xchg
push
dec
jmp
mov
jg
js
pop
jbe
inc
sbb
push
mov
and
loopne
cmc
stc
scas
lret
cmc
loope
cmp
jmp
out
push
sub
or
fsts
mov
jns
xor
dec
test
mov
add
xchg
cmpsb
dec
lods
test
jb
aaa
repnz
shr
mov
inc
add
mov
stos
lock
wbinvd
popf
push
jae
arpl
jg
clc
scas
popa
sbb
dec
sbb
xor
daa
ret
push
scas
sbb
sbb
pop
out
xchg
mov
or
adc
pushf
xchg
add
stos
loope
jecxz
and
adcb
in
jecxz
cmpsb
mov
mov
jno
push
lea
add
ss
ds
stos
cmpsb
ja
out
and
or
dec
out
lret
out
icebp
les
cmc
test
sub
xchg
inc
mov
repnz
ds
in
jns
fadds
inc
out
add
je
addr16
mov
mov
out
xchg
push
xchg
ficoms
sbb
cmpsb
cmp
test
test
mov
fs
mov
ficoms
push
xor
bound
sbb
shrl
arpl
push
adc
out
adc
rol
cmpsb
loope
arpl
mov
xchg
xchg
mov
pushf
out
inc
daa
pop
das
ds
subl
jl
fistps
pop
pop
xchg
sahf
shlb
mov
popl
ds
ds
test
push
mov
inc
hlt
push
ss
pop
pop
adc
jge
out
fiadds
sbb
daa
xchg
popa
icebp
push
jge
aad
out
movl
repnz
and
adc
jo
outsl
sbb
call
shll
xchg
mov
mov
addr16
pop
jnp
mov
js
mov
jns
xchg
add
sbb
xor
inc
mov
xor
fsubr
pop
inc
test
jmp
mov
fistpl
lods
ret
cmc
call
test
xor
xor
and
or
jg
imul
cmp
mov
call
pop
cmp
inc
into
js
adc
sub
xorl
fucomi
cs
push
js
cld
dec
test
cmpb
test
cmc
mov
jmp
clc
mov
shrl
sub
popw
subl
or
jae
jbe
sbb
sti
out
lods
cmp
xchg
jae
inc
sti
xchg
adc
mov
out
orl
mov
push
pop
xor
test
ss
sti
lahf
mov
pop
insl
push
sbb
xchg
sbb
mov
pop
xchg
hlt
dec
cmp
push
stos
or
fnstcw
or
clc
mov
lcall
adc
cmp
push
add
ss
xlat
daa
shlb
mov
leave
mov
dec
repz
cltd
jns
xor
rcr
cmp
pushf
push
mov
clc
xor
dec
dec
xchg
call
adc
andnps
mov
push
ja
sbb
and
jmp
icebp
enter
pusha
ljmp
xchg
sbb
cmp
jmp
addr16
adc
and
jbe
sti
mov
cwtl
movb
test
ja
sbb
sbb
push
inc
lock
arpl
jb
and
pop
mov
into
lds
imul
stos
jecxz
mov
imul
lret
xchg
in
lea
sbbl
scas
fisubs
mov
or
andb
popf
cmp
mov
add
inc
push
inc
mov
xor
push
xchg
sbb
hlt
xchg
mov
notb
lock
jnp
pop
push
xor
jae
es
imul
xor
stos
or
cmp
cmpsb
xor
xchg
imul
fcomip
and
mov
testl
mov
mov
mov
mov
push
popf
mov
pusha
ljmp
adc
inc
sub
or
or
outsl
add
jae
cmp
cmp
jno
pop
test
gs
out
xchg
cmp
mov
inc
aas
out
mov
mov
es
pushf
xchg
xchg
mov
ret
repz
cwtl
loopne
mov
aad
add
pop
shll
and
mov
lea
push
nop
mov
pop
cmc
shl
push
loop
arpl
fwait
lods
adc
pop
lock
jecxz
hlt
and
aas
mov
xchg
dec
mov
arpl
icebp
imul
dec
pop
clc
jmp
or
subl
jnp
dec
pop
pop
enter
insl
jnp
inc
xchg
sbb
mov
pop
push
imul
aaa
mov
into
push
xchg
daa
ret
adc
push
sahf
add
push
in
adc
iret
fildl
in
cmpsb
std
pop
fs
pop
enter
dec
adc
dec
mov
inc
loope
stos
arpl
mov
popa
hlt
cmp
mov
push
adc
test
xor
negl
leave
shlb
and
rep
pop
push
pop
sbb
test
inc
add
xchg
mov
cld
and
ret
mov
inc
mov
shrb
into
stc
lret
push
clc
fisubl
fadds
or
cmp
xor
outsb
and
mov
sub
mov
dec
retw
pusha
adc
cmpb
sbb
pop
mov
push
jge
dec
dec
mov
cmpsb
fisttpll
add
ret
nop
jle
inc
sbb
and
inc
xor
xchg
ret
frstor
icebp
cs
ret
int
add
ret
lahf
test
and
arpl
adc
fcoms
cwtl
mov
cmp
push
push
imul
ljmp
and
fisttpl
movsl
popf
stos
add
aaa
je
pop
push
shr
sbb
lock
pusha
out
jmp
push
xor
stc
pop
mov
test
inc
inc
xchg
lcall
psubusw
push
xchg
xchg
es
pop
mov
inc
pop
mov
pop
xchg
jmp
aad
dec
in
xchg
into
aaa
add
mov
add
lods
hlt
cmp
stc
cmpsb
mov
push
test
aas
movq
adc
in
ds
sbb
jnp
adc
std
outsb
xor
push
add
or
inc
sbb
rclb
pop
adc
xchg
xchg
cs
stos
inc
xchg
lods
ret
cmpsb
fildll
stos
mov
push
dec
jo
mov
ret
shl
popf
adc
neg
scas
js
add
xchg
jl
pop
adc
and
adc
adc
adc
sub
mov
xchg
popf
test
sub
push
sub
shll
fisubrl
imul
xchg
jae
mov
mov
pop
aad
xchg
pop
and
push
xchg
sbb
mov
jbe
push
shrb
rcrb
fbstp
dec
jp
test
push
and
push
or
push
shll
or
pop
jno
jmp
stos
add
aas
mov
hlt
lds
es
movsl
pop
push
ljmp
pop
push
sub
or
outsb
mov
cmp
sti
sub
popf
pushf
jo
mov
lods
pop
lcall
cmp
push
outsl
es
push
movsl
lea
jle
lret
inc
cmp
ret
inc
repz
test
add
ljmp
std
mov
lock
arpl
mov
hlt
mov
pop
mov
dec
xor
enter
in
sbb
fs
mov
scas
aad
push
andb
xlat
mov
and
mov
mov
xor
jno
movsl
movsb
mull
xchg
xor
sahf
sub
movsl
enter
pop
jecxz
mov
push
jnp
nop
or
call
mov
je
mov
inc
in
jb
adc
and
sti
xor
sub
out
mov
popf
jns
pop
xor
push
cltd
inc
outsl
xchg
sahf
adc
mov
rcrb
aas
push
negl
fldcw
sub
into
mov
and
lock
cli
fldl
mov
push
cli
test
aam
out
sbb
dec
ret
push
fdivrs
sahf
cmp
xchg
out
not
cld
add
push
hlt
xor
pop
out
pop
mov
xor
or
sub
lcall
ret
mov
and
lock
jnp
lea
jge
jb
data16
mov
sbb
pop
ja
mov
mov
stos
cld
mov
repz
mov
adc
xchg
ljmp
and
and
addr16
inc
mov
xchg
jne
aam
xor
push
xchg
in
fs
iret
aas
xor
mov
int
stos
popa
sbb
mov
sbb
pop
mov
lods
pop
test
iret
mov
mov
mov
dec
jnp
jmp
cs
add
inc
test
and
mov
leave
lea
or
mov
popa
add
ljmp
sti
cmp
sbb
movb
test
insl
add
jno
fsts
push
mov
stos
sub
int
and
jle
aaa
rcl
loope
cltd
into
int3
imul
mov
sbb
mov
adcb
iret
xor
fdiv
call
add
pop
or
mov
inc
and
sbb
dec
nop
stos
not
iret
fdivs
mov
aad
scas
cltd
pop
frstor
out
cmp
dec
stos
aaa
xor
xor
push
subb
push
cwtl
outsb
ret
xchg
stc
pop
test
iret
jne
jo
ljmp
in
push
ss
add
insb
ja
mov
sbb
test
lcall
cltd
loop
push
and
xchg
leave
sbb
cmp
test
pop
mov
mov
pop
js
xchg
in
fucomip
sbb
jae
lahf
add
movsl
int
inc
lret
or
jecxz
or
pop
out
sub
xchg
mov
aaa
xchg
cmp
xor
gs
dec
sub
mov
mov
inc
fbstp
xor
mov
test
pop
sub
or
sbbb
rol
pop
fs
sbbb
js
lods
dec
cmp
lock
xchg
gs
mov
dec
sbb
repnz
or
mov
lea
shll
pop
lret
loope
push
pushf
enter
mov
btc
loopne
inc
mov
aad
roll
mov
sub
ret
testb
sbb
test
sub
xchg
ja
leave
das
lods
nop
clc
mov
aas
loopne
stos
dec
pop
outsl
repnz
jmp
and
cwtl
mov
push
rep
ret
adcb
fstl
addr16
pusha
fiaddl
fdivl
cwtl
xchg
or
sub
mov
add
inc
roll
jns
dec
into
pusha
xor
sbbb
push
adc
xor
gs
mov
arpl
cmp
dec
leave
arpl
sub
adc
jae
rorb
sub
fidivrl
stos
mov
pop
jbe
mov
push
add
inc
in
das
dec
add
jns
leave
iret
jae
sbb
int
rcr
adc
mov
xchg
adc
shll
mov
xchg
aaa
xchg
adc
out
xor
fisttps
lods
jg
outsb
jmp
pushf
mov
test
jp
push
cli
jmp
insl
push
add
cmp
std
das
mov
daa
hlt
test
lds
sub
insb
repnz
mov
lock
lcall
icebp
adc
and
add
cmp
clc
and
or
sub
pop
or
std
sti
xchg
jl
cwtl
andb
xchg
adc
jg
mov
xor
jmp
pusha
into
inc
pusha
mov
lcall
xor
pop
movsb
rorb
mov
push
mov
data16
andl
push
lods
mov
adc
in
adc
movsl
scas
outsl
cmpsb
lahf
in
lock
jbe
sbb
xor
mov
pop
or
ss
dec
sti
and
add
call
test
push
sub
sub
fsubl
movsl
ficoml
push
mov
sahf
inc
loop
adcl
and
adc
pop
les
je
mov
jno
xlat
and
hlt
or
pushl
cltd
pop
jmp
xor
cmpsb
lahf
lea
mov
int3
lret
add
add
ficoml
scas
stos
mov
lret
xchg
cmp
xchg
sub
cld
lret
push
sub
cli
jl
outsl
int3
outsl
or
mov
xchg
add
mov
jns
xor
adc
xor
inc
iret
sbb
sub
xchg
dec
insb
jbe
mov
loopne
sahf
sbb
das
sbb
mov
adc
adc
mov
cli
inc
mov
stos
dec
dec
mov
jmp
xchg
aad
mov
or
fcoms
mov
insb
cmp
pop
ret
icebp
inc
dec
lds
sbb
mov
imul
mov
bound
cmp
jle
mov
pop
pushl
out
bound
mov
pushf
push
mov
loopne
cld
out
jp
iret
push
or
icebp
sbb
cmpsb
lret
sbb
aad
jno
adc
ds
push
add
test
inc
addr16
xchg
enter
dec
push
ds
js
ljmp
and
test
xchg
inc
jge
mov
push
sar
mov
jno
adc
popf
fwait
dec
pop
sub
jg
fistpll
out
test
pop
lods
lods
adc
insl
aaa
ljmp
in
sub
jns
notl
aam
push
jnp
das
push
or
xchg
jmp
mov
scas
add
adc
insb
sbb
loopne
mov
hlt
pop
mov
mov
pop
shrb
pop
jo
bound
jbe
leave
insb
mov
dec
mov
push
or
es
subl
idivl
mov
sbb
inc
mov
stc
test
lods
aas
pop
int
pop
sbb
dec
mov
jecxz,pt
jmp
imul
mov
mov
or
sub
mov
adc
lods
mov
loope
or
push
sub
push
xlat
xor
shr
xchg
std
mov
arpl
pop
and
mov
adc
pop
scas
xchg
cmpsl
adc
fld
mov
inc
pop
flds
scas
aad
cltd
imul
pop
adc
sub
loope
das
push
jecxz
rclb
clc
shrb
shrl
jns
jecxz
out
xor
lea
push
popa
dec
sub
adc
cmpsb
mov
adc
xorb
aad
shll
add
loope
mov
cmpsl
mov
cli
push
push
addb
faddl
dec
lea
dec
xchg
dec
leave
aaa
ja
push
dec
lret
dec
pop
mov
test
push
sub
and
fwait
pop
cmp
mov
mov
jle
notl
insl
inc
cmp
sbb
or
loopne
lods
or
fimuls
in
pop
push
call
mov
cmp
inc
mov
lea
jmp
jmp
add
cmp
test
xor
aad
jle
mov
sbb
mov
adc
scas
xor
dec
cli
loopne
stc
sbb
or
mov
je
pop
mov
stos
in
push
push
push
stc
inc
lret
pusha
dec
dec
jge
js
mull
push
xchg
fadds
mov
or
pushf
cmpsb
imul
sarb
pop
mov
stos
xchg
pop
push
mov
lods
mov
jb
leave
aas
jecxz
daa
rolb
ja
and
cmp
ret
clc
movsl
or
push
inc
and
mov
js
dec
roll
cmp
mov
mov
pushf
jp
xor
jmp
cld
cmp
cli
scas
sahf
sahf
sbb
sub
pop
movsl
insl
inc
out
push
out
jbe
in
push
ret
push
out
je
in
push
sbb
into
mov
dec
jno
ja
or
pop
in
push
popa
in
sbb
lcall
in
and
add
aas
popf
push
adc
mov
sub
jmp
clc
cmpb
mov
jb
lods
call
ss
mov
cmc
or
mov
sbb
inc
pop
sbb
fstps
pop
inc
mov
and
insl
and
outsb
pop
addr16
loopne
pop
in
and
lcall
mov
mov
lahf
and
push
mov
movsb
adc
add
or
xchg
out
fildll
pop
int3
inc
pop
xor
xor
rolb
sub
pop
cmp
dec
inc
cmp
testl
or
lcall
not
imul
repz
xor
jle
xchg
test
pop
xor
ret
dec
dec
mov
mov
sbb
add
pushf
push
mov
or
mov
push
in
cmpsb
sub
xchg
push
xchg
xchg
dec
js
jbe
mov
into
movsb
idivb
lret
fsubs
and
es
jmp
mov
clc
inc
or
movb
mov
push
push
push
dec
leave
lcall
cmp
push
push
lret
sub
pop
jb
xor
addl
xor
inc
cmp
adc
out
mov
imul
push
xchg
jle
into
push
addb
adc
daa
fisubl
scas
loope
adc
or
inc
lret
daa
sub
scas
cwtl
xchg
push
nop
mov
dec
inc
inc
les
loopne
inc
rclb
outsb
mov
fists
and
mov
mov
stc
scas
in
movsb
sbb
orb
mov
sub
ja
nop
xlat
daa
mov
repnz
xchg
mov
pop
jo
insb
mov
in
jecxz
out
jl
ja
mov
xor
cmp
test
push
cmp
xchg
sub
dec
sbb
push
xchg
iret
push
jno
bound
xchg
and
cmp
aas
dec
mul
daa
or
loopne
loope
xchg
cmp
cltd
cwtl
cli
pop
shrb
decb
sbb
xchg
pop
ja
cmp
aas
xor
add
lret
sbb
mov
sub
or
addr16
and
fwait
mov
dec
lea
fstl
fsubrs
jns
movd
cwtl
mov
scas
lret
imul
in
test
add
sbb
fdiv
sub
push
or
mov
repnz
mov
jl
fsub
cmp
pop
test
jb
addr16
cmpsb
lock
sub
adc
jmp
cmpsl
hlt
insl
ror
out
mov
testb
xchg
inc
or
call
outsb
scas
test
and
sahf
add
mov
outsb
lods
add
in
addb
push
mov
mov
mov
jbe
mov
xor
adc
adc
jnp
or
inc
insb
mov
lods
popf
call
ret
xchg
cltd
pop
mov
pop
inc
push
adc
dec
in
xchg
je
popa
or
pop
jo
jp
movsb
lahf
mov
cmc
xchg
xor
pop
pop
ss
fdivs
jne
leave
sahf
pop
jge
loop
ljmp
jb
xchg
cltd
inc
sub
mov
mov
cmp
pop
cmp
repnz
pop
scas
sarb
popa
sub
into
and
inc
cmp
pop
imul
and
jle
push
sub
push
and
cmpsl
xchg
add
push
mov
movsl
repnz
inc
jl
pop
stos
fyl2xp1
xchg
push
stos
rcll
fmull
in
fisubrs
ja
inc
data16
mov
mov
xor
sbb
xor
in
fstpt
or
out
pop
out
dec
test
inc
in
add
pop
adc
inc
or
jne
ret
sti
adc
popf
push
arpl
adc
aad
jp
loop
mov
cld
push
into
cmpsb
cwtl
sbb
inc
xchg
daa
pushf
rcl
xlat
xchg
out
xchg
es
sbb
data16
or
pushf
sbbb
sub
fdivp
dec
dec
jnp
cmp
push
ljmp
cltd
sbbb
mov
add
in
jge
int
lret
adc
mov
and
cs
cmp
adc
pop
or
ja
cli
pop
fbld
add
sub
mov
pop
je
scas
clc
or
and
mov
aas
dec
and
addl
xchg
std
mov
adc
ss
imul
cmp
dec
popf
addr16
pop
stos
outsb
movsl
sub
es
ds
pusha
push
movsl
cmp
into
fadd
cmp
fiaddl
inc
push
mov
inc
fbld
shrl
jecxz
out
sub
out
jg
test
addr16
sbb
clc
push
sete
movsl
ficomps
jmp
mov
push
and
repnz
adc
or
add
cwtl
lea
imul
add
xchg
lds
xchg
lods
mov
emms
arpl
negl
insb
and
fsub
in
das
push
ljmp
shl
dec
jge
sub
and
jo
out
xchg
mov
fidivrl
sahf
jg
push
pop
push
orl
mov
sub
scas
iret
xchg
rcll
mov
cmp
mov
loop
cmp
and
adc
xlat
dec
pushf
addr16
jbe
scas
mov
pop
into
mov
xchg
outsl
adc
jns
sbb
into
mov
outsb
sahf
mov
xor
ja
add
in
cmpl
jnp
inc
addr16
loope
sub
mov
hlt
pop
mov
pusha
mov
add
imul
cmp
fimull
pop
add
jle
hlt
xchg
mov
pop
pop
jae
mov
mov
pushf
pop
stc
scas
dec
stos
inc
xchg
jb
xor
and
mov
sub
xor
and
es
or
mov
adc
fnstcw
rclb
mov
add
push
rcrb
and
insb
xchg
mov
mov
sub
xor
in
cltd
loopne
dec
sbbl
sub
xchg
sub
sbb
shr
test
enter
outsb
outsl
mov
dec
jb
insl
scas
dec
enter
sbb
fsubl
xor
and
mov
sub
xchg
lea
jmp
in
hlt
fcoms
in
push
fbstp
nop
xor
xchg
push
cwtl
xchg
lret
cmpsb
add
cmc
pop
subb
outsb
adc
lahf
mov
cwtl
fs
cltd
je
sub
data16
in
das
arpl
pop
mulb
stos
repnz
fdivp
mov
lea
push
cmp
jbe
xchg
inc
testl
in
or
loopne
pop
cwtl
clc
mov
ret
mov
lods
and
push
push
mov
push
adc
xor
pusha
test
mov
or
out
or
test
fisubl
mov
out
insb
add
orb
sarl
pop
mov
dec
aad
popa
mov
xorl
pop
mov
stos
push
mov
mov
repnz
imul
mov
dec
add
xor
sti
adc
test
call
test
std
les
outsl
pop
push
pop
fidivl
bound
insb
mov
cmp
adc
loope
insl
push
cmp
sub
push
xchg
push
pushf
mov
push
or
add
push
mov
in
mov
and
cmpsl
fsubr
and
ret
xor
pusha
cltd
jno
and
das
push
mov
js
adc
bnd
dec
add
ret
test
mov
ja
inc
jno
shll
addl
sub
push
andb
loop
mov
jecxz
adc
sub
inc
xor
and
cmc
cmp
jmp
pop
bswap
test
repz
or
mov
cwtl
pop
mov
arpl
mov
daa
fwait
js
dec
sbb
mov
cli
out
dec
cmp
jo
jns
repnz
cltd
cmpsb
mov
scas
sub
popf
dec
jle
mov
popa
push
repnz
popa
or
lods
sbb
test
sbb
ficoml
cs
not
gs
movsl
int3
xchg
imul
inc
flds
cwtl
push
test
mov
aad
sbb
out
aam
mov
add
mov
je
inc
enter
adc
mov
stc
cmp
sar
jle
or
ja
shrl
cmpsb
and
cwtl
rcr
mov
push
mov
xchg
movsl
lock
das
jecxz
iret
lret
push
sub
xchg
js
and
pushf
push
xchg
or
mov
mov
imul
xor
lcall
inc
inc
or
push
test
loope
in
data16
pop
or
pop
dec
je
xchg
loop
sbb
or
outsb
call
jge
mov
cli
mov
aad
push
stc
mov
push
jge
push
enter
pop
mov
jb
xor
test
mov
or
jo
test
js
cmp
aas
push
and
sub
xchg
mov
mov
fdivrs
or
jmp
adcb
call
mov
xchg
xchg
cs
icebp
sbb
jecxz
dec
push
test
movsb
stos
add
sub
push
add
inc
add
movsb
test
mov
popa
bound
mov
lret
aaa
jge
adc
or
aad
cltd
aam
pop
repz
daa
call
mov
xchg
xchg
xor
lock
frstor
adc
push
in
stos
cmp
js
fs
pop
inc
jae
xchg
movsl
int
ds
sub
imul
jle,pn
out
jo
xchg
sbb
out
push
stos
sbb
test
adc
dec
xor
sbb
or
sub
pop
mov
shrb
xchg
arpl
inc
call
flds
pop
or
sub
jle
mov
fimull
sbb
repz
popa
roll
inc
cld
inc
push
mov
push
rol
subl
sub
cmp
xchg
jb
jmp
jmp
rcrb
je
mov
jecxz
arpl
xchg
pop
push
cltd
hlt
fxch
fcmovnbe
mov
push
fstpt
jg
mov
lret
cmp
stos
and
lock
outsb
adc
inc
std
aam
add
addr16
fldt
dec
stos
outsb
pop
mov
arpl
in
dec
rorb
sub
subl
inc
fs
clc
in
pop
fldcw
push
test
lret
out
dec
fwait
dec
ljmp
and
std
into
adc
adc
push
stc
pusha
lea
adc
pop
and
test
mov
pushf
mov
sub
ficompl
add
adc
jno
xchg
shl
mov
pop
dec
je
mov
mov
ljmp
push
mov
xchg
cmpsl
mov
clc
mov
jnp
ds
jl
rorl
mov
lahf
adc
pushf
or
scas
aas
bound
lahf
aas
xchg
aas
and
add
jnp
push
push
cmp
inc
push
int3
ret
bound
add
les
pop
jb
mov
dec
fucomip
vpmaxub
jns
fs
movsb
sbb
inc
and
loopne
or
mov
mov
mov
pusha
jecxz
sub
mov
push
mov
push
xchg
pop
outsl
pop
jmp
sub
dec
std
leave
or
out
xchg
in
jge
lcall
cmp
mov
xchg
xchg
sbb
push
xor
mov
lret
imul
ljmp
cltd
xor
pop
xchg
xchg
cltd
clc
and
sbb
mov
adc
in
xor
shlb
in
inc
cmp
dec
js
or
dec
cmp
filds
add
xchg
ror
xchg
fnstsw
nop
lret
cmp
icebp
cmp
push
xor
call
push
mov
and
ss
mov
dec
iret
inc
sub
loopne
lods
sbb
sbb
sbb
adc
inc
sti
xor
mov
inc
repz
popl
adc
sbb
fisubrl
pushf
xchg
loope
out
dec
jo,pt
popa
repz
lods
push
sbb
add
jno
add
imul
or
xchg
dec
outsl
ds
adc
stos
movsl
loopne
sub
popa
mov
addr16
and
pop
shlb
mov
sub
aaa
andl
hlt
mov
lds
arpl
cmp
mov
in
push
cwtl
shl
push
sahf
lret
stos
fdivs
pop
ret
fisttpll
mov
psubw
pop
mov
sbb
stos
jo
adc
push
dec
xor
pop
xchg
int3
jno
add
addr16
cmpsb
sub
xchg
bswap
adc
sbb
call
fbld
test
jo
lahf
mov
jnp
mov
adc
rcl
mov
iret
adc
mov
adc
and
mov
or
jb
push
mov
fwait
leave
bound
and
inc
and
iret
sbb
sub
testl
dec
mov
jae
fidivrs
or
out
sbb
ja
fsubp
shlb
loop
scas
lock
xchg
mov
imul
sahf
xor
jno
das
sbb
pop
push
push
cmp
daa
shlb
push
mov
repnz
pop
push
cmp
adc
push
pop
rcr
inc
sub
pusha
xor
push
sub
jo
ja
dec
sti
les
xor
ret
push
pop
ret
in
movsl
cmp
xor
cs
adcl
jge
adc
add
cmp
int3
cmp
mov
fldenv
jns
les
icebp
adc
dec
xchg
inc
jge
fisubrs
mov
mov
lods
adc
sub
pop
out
lahf
je
pushl
lds
gs
lahf
out
negb
dec
es
outsl
ja
mov
mov
mov
sbb
xchg
test
push
lcall
aad
out
pushf
push
adc
hlt
shr
push
imul
hlt
push
mov
jle
add
mov
cmpsl
xchg
push
call
popa
js
fcomps
push
jb,pt
sub
inc
and
xlat
ljmp
ret
imul
jne
call
jo
iret
mov
xor
pop
loopne
push
ficoms
mov
roll
nop
nop
mov
adc
lahf
push
and
scas
mov
lods
ffreep
jns
dec
add
arpl
dec
xchg
mov
fs
mov
cmc
lcall
fmuls
or
fistpll
push
stc
jmp
cmp
js
fimuls
mov
sbb
sbb
adc
out
aad
cmp
icebp
test
jb
mov
jns
and
das
push
inc
mov
scas
sti
stos
iret
arpl
jle
jg
mov
jge
sub
sarb
sti
inc
cmpxchg
push
rcll
sbb
hlt
rorb
jle
xor
pop
mov
cmpsb
pushf
inc
rcr
ljmp
xlat
out
dec
jle
es
fstpl
fs
ljmp
andb
inc
insb
andb
inc
fstpl
xchg
xchg
dec
lds
shlb
or
shlb
ja
mov
mov
lock
jno
xor
dec
sarl
mov
std
add
imul
mov
push
xor
xlat
xchg
xchg
stos
sarb
add
lods
mov
and
sub
cld
data16
dec
inc
add
icebp
loop
in
mov
lea
jecxz
mov
jb
mov
inc
add
sub
sub
das
into
test
daa
xchg
in
mov
pop
sti
fmul
inc
scas
inc
inc
ss
mov
jl
pop
cmp
xchg
lcall
lahf
fwait
sbb
push
mov
rcll
xchg
sub
lock
daa
push
sub
adc
int3
sbb
xchg
les
or
jp
add
hlt
cld
push
mov
mov
ljmp
fstpl
jge
mov
mov
lea
cli
push
mov
std
inc
out
pushf
mov
jmp
mov
lea
shr
push
jmp
cwtl
sub
pop
icebp
dec
int
je
cmp
cmp
jae
dec
nop
xchg
mov
or
fstpl
xchg
sti
jp
cmpsl
jp
fwait
into
inc
push
push
cmp
dec
xchg
fldt
lret
mov
mov
fcoml
aas
pop
shr
push
xchg
mov
adc
fwait
cmc
dec
xchg
jge
mov
push
test
popf
mov
jp
sbb
out
jg
add
hlt
pop
push
mov
lods
std
add
add
push
mov
adc
add
push
hlt
fcmovnu
pop
add
push
insl
lret
push
mov
dec
arpl
fsubl
call
pop
pop
and
idivb
pandn
arpl
sbb
adc
loope
in
call
les
in
decl
int
fsubr
xchg
jmp
into
dec
arpl
roll
sbb
nop
jl
or
push
sbb
insl
jg
cli
orl
and
mov
out
insw
daa
mov
or
xlat
or
pop
pop
mov
adc
test
mov
jecxz
jbe
add
movsl
and
pop
xor
jno
dec
adc
mov
add
ret
jg
outsl
cmp
aam
or
icebp
cwtl
cs
mov
in
push
fisttpll
outsb
ja
mov
xor
push
xorb
inc
jle
pop
adc
das
pop
adc
pop
xor
xchg
mov
int
leave
or
push
lods
push
in
out
push
sub
andl
inc
xor
mov
clc
lds
push
pop
push
xor
nop
arpl
std
dec
mov
cwtl
jnp
cmp
xchg
pop
cmp
push
sbb
mov
sbb
imul
jle
jns
dec
sbb
jne
jmp
dec
and
fidivs
dec
adc
sti
cltd
jo
xor
mov
mov
data16
or
inc
rol
test
sbb
sbb
fmuls
sbbb
fcoms
sbb
mov
jnp
mull
jg
jo
push
xchg
mov
pop
push
cld
cmp
xor
mov
inc
test
xor
repz
cmovg
and
inc
or
int
pop
mov
xchg
dec
mov
push
inc
shr
cli
dec
pop
lds
mov
mov
push
jno
popa
jbe
stc
and
push
lahf
outsl
iret
lcall
sub
or
sbb
loopne
cmp
inc
push
jg
push
aas
xor
push
xor
mov
loope
fstps
scas
xchg
push
mov
inc
shrb
cli
and
in
lret
sbb
fchs
fisttpll
sbb
setb
aaa
outsb
int3
cmp
add
fcomp
push
cmp
cli
movsl
dec
cs
pop
adc
fwait
daa
cmp
xor
lret
cmp
pusha
pop
pop
inc
mov
out
test
cmp
rcrb
rsqrtps
fists
cmp
mov
add
sub
mov
push
mov
xor
dec
jbe
pop
push
gs
ss
mov
popa
mov
lret
lret
push
cmp
bound
adc
jg
jno
sub
pop
stc
mov
dec
and
fwait
sub
movsb
lea
jbe
sub
inc
xchg
inc
out
into
or
xor
sbb
test
inc
sub
into
push
add
pop
push
adc
jp
insb
mov
mov
lea
and
cmpsb
mov
adc
mov
inc
jne
mov
ss
jle
test
push
sti
jp
loopne
rorl
aaa
jle
push
add
daa
addr16
push
push
insl
pusha
dec
jnp
push
int
adc
push
add
int3
push
push
cld
arpl
das
mov
pop
mov
movsl
mov
into
jg
popa
mov
ljmp
mov
mov
inc
mov
repz
das
mov
mov
xchg
xchg
dec
sbb
ljmp
int3
mov
arpl
lds
push
sub
or
test
pushw
aaa
sbb
push
mov
movsb
mov
lock
mov
xchg
xchg
popa
stos
mov
pop
and
fildll
arpl
adc
lret
xchg
insl
movsl
test
mov
je
popa
ds
push
andl
data16
imulb
or
test
pushf
test
sbb
int
xchg
add
cmpsb
xchg
jne
int
jg
or
repz
mov
mov
add
adc
jae
sub
lcall
ja
jmp
lds
rcl
mov
pop
je
cmp
pop
push
or
xor
adc
push
xor
push
dec
scas
aam
push
or
fldcw
xchg
add
ja
cmc
cld
mov
out
mov
in
subb
push
loope
push
xlat
push
mov
loop
js
or
push
adc
mov
insb
rclb
mov
and
or
and
in
xchg
es
rolb
in
push
sub
push
scas
test
mov
addb
xchg
popf
insb
push
imul
pop
adc
adc
cwtl
add
loop
in
cmp
xor
rorl
mov
arpl
mov
in
cmp
pop
and
xor
cmc
pusha
fdivrl
cltd
mov
jl
cmp
pop
xor
jno
dec
into
pop
mov
xlat
movsl
inc
aad
movsb
xchg
hlt
push
movsl
and
addr16
ror
jb
add
mov
lods
dec
in
lret
addr16
sbb
scas
faddl
fldcw
mov
push
sarl
push
dec
fiadds
cmp
mov
push
sqrtps
dec
or
jno
lods
dec
je
inc
ret
cmpsl
popa
xchg
add
pusha
arpl
xchg
movsb
int
rcrl
xchg
movsb
xchg
addb
xlat
jge
in
push
scas
xor
cmp
sub
iret
sti
cmp
movsb
xchg
sbb
insb
or
dec
mov
adc
ljmp
les
fsubr
dec
dec
pop
mov
fucomp
into
mov
imul
in
mov
pop
test
sub
bound
jae
and
and
repz
into
jg
fwait
shl
mov
mov
and
scas
sarl
xchg
frstor
mov
lret
push
icebp
xchg
jo
je
xchg
mov
jle
mov
mov
sub
sahf
sub
scas
xor
pusha
adc
leave
rorl
xchg
out
mov
popf
or
mov
xchg
xchg
adc
addl
sub
ret
sbb
insb
negb
fimull
dec
pop
daa
jb
pop
call
orl
in
sbb
dec
mov
xor
loopne
dec
inc
jo
mov
into
dec
adc
jp
xchg
stos
mov
loopne
imul
nop
or
sbb
dec
dec
pop
test
sti
sbb
cltd
aam
xchg
dec
loope
mov
outsb
sbb
outsl
sahf
adc
push
lret
and
dec
xor
es
mov
cmp
push
lds
mov
push
addl
je
shlb
lret
cwtl
popf
mov
rclb
xor
mov
inc
adc
sbbb
dec
xor
cwtl
jo
sub
adc
cld
sbb
hlt
add
lea
pop
sbb
lods
mov
out
movsl
nop
dec
lret
pop
sub
lret
js
push
push
sbb
outsl
mov
mov
test
mov
xchg
icebp
push
inc
sahf
out
fdivp
mov
aaa
xor
push
lahf
iret
sub
inc
outsb
jb
clc
inc
sbb
push
pop
jno
hlt
xchg
es
repz
test
sub
fisubrl
dec
shl
andb
or
out
mov
add
cwtl
inc
lea
aaa
popf
inc
dec
push
into
stos
loopne
insl
jb
out
rcrb
sub
out
push
dec
aad
jle
icebp
cmp
mov
mov
mov
mov
xchg
int
ljmp
lods
inc
pop
cwtl
andb
insl
int
les
push
cmp
movsb
pop
mov
test
movb
arpl
jle
test
movsl
idiv
adc
roll
aad
jbe
and
sub
imul
icebp
or
dec
mov
and
popf
cmpsb
clc
dec
popa
jbe
into
out
addr16
inc
xor
outsb
fstps
add
push
adc
pushf
sbb
pop
out
adc
add
addl
add
mov
sub
push
cmpl
fiaddl
add
ljmp
mov
mov
stos
incl
adc
push
adc
daa
popa
mov
adc
in
push
test
lahf
stc
call
es
in
cmp
fcmovnb
xchg
pop
sub
pop
mov
imul
rorb
push
inc
add
out
je
jnp
mov
fs
sub
jecxz
imul
out
je
mov
sti
mov
ss
outsb
aaa
add
ret
cwtl
mov
mov
sub
xrelease
fmul
and
and
imul
adc
sbb
mov
imul
pop
imul
jle
repz
pop
adc
incb
mov
mov
sbb
mov
xor
push
jmp
sub
adc
mov
cltd
mov
loop
push
fisubrs
pop
inc
pop
addl
adc
push
pop
jns
stos
inc
insl
ret
mov
xchg
jne
push
dec
rcll
dec
push
mov
xchg
sub
inc
mov
inc
add
ja
push
into
jg
lds
xlat
int
push
and
rcrl
mov
popf
rclb
sbb
lock
and
cmp
inc
jnp
jg
sbb
xor
mov
fildl
xor
add
adc
push
fwait
mov
int
mov
lret
xchg
and
adc
jmp
scas
sub
fwait
pop
fiaddl
imul
pop
pop
int
int3
inc
jecxz
xchg
cmp
inc
jp
push
xor
jns
sub
lcall
movsl
push
clc
sub
and
jmp
int3
test
push
sbb
push
push
push
sar
insl
jp
pusha
push
test
jb
mov
sbb
pop
cli
pop
out
mov
lods
and
aad
push
xor
hlt
fidivrl
js
and
testb
lret
jno
push
clc
cmp
testb
cmp
jo
dec
fnstcw
sti
mov
outsb
cli
pop
stos
test
jo
xor
in
mov
xor
jae
add
pop
lods
push
ret
jge
fsubl
push
stos
and
sbb
inc
mov
add
jmp
jno
inc
call
pop
fildll
scas
jne
lcall
and
bound
mov
inc
mov
cs
mov
lea
lahf
rolb
dec
mov
mov
pop
jae
push
mov
popf
mov
rcll
inc
fsts
and
das
jge
mov
pop
sbb
lods
xchg
mov
pop
jp
cmpsb
in
mov
lea
mov
cmp
add
ljmp
mov
jb
fnstcw
push
test
outsb
ret
es
and
jo
jmp
inc
push
mov
inc
inc
push
jmp
mov
aas
mov
mov
xor
cmp
test
add
mov
leave
mov
aam
jnp
jmp
pop
cmp
xchg
inc
mov
aad
jg
shll
inc
outsb
cli
lret
in
inc
and
out
fldcw
mov
in
pop
fwait
stos
into
mov
pushf
stos
mov
rcrl
ja
lock
sahf
mov
add
mov
push
divb
jno
inc
ds
sti
mov
stos
gs
std
adc
pop
cmpsb
iret
sub
jecxz
xchg
and
or
jno
ret
and
scas
or
xchg
xchg
out
jge
sbb
mov
xchg
and
adc
and
push
pop
mov
xor
sub
ja
out
out
out
repz
pusha
dec
mov
cmp
dec
repz
lock
inc
outsb
sbb
std
mov
ret
mov
fs
mov
rorb
xor
pop
fadds
push
dec
dec
xchg
mov
pop
cmp
jp
or
sbb
pop
out
inc
jg
out
out
push
pop
push
or
sti
stc
cmp
inc
pop
inc
jno
es
mov
testb
mov
aad
cmpsb
inc
and
mov
inc
aad
mov
adc
mov
or
mov
xor
sarl
sahf
or
pop
pop
pop
inc
push
jle
adc
pop
mov
mov
mov
movsb
adc
sub
imul
orl
pop
es
push
push
cltd
adc
stos
aaa
sbb
aaa
addr16
inc
call
out
data16
mov
bound
fcompl
mov
cmpsb
inc
mov
dec
jg
aad
pop
mov
pop
push
mov
rorl
ret
sbb
sbb
lea
cli
inc
lods
adc
jmp
lret
daa
adc
or
pusha
es
in
ss
popf
xchg
fcom
pop
lea
fwait
mov
push
imul
mov
ret
js
ret
add
xchg
dec
clc
sub
clc
add
mov
stc
xchg
mov
cmp
sub
js
push
in
xchg
dec
cli
adc
lret
jmp
clc
mov
outsb
mov
sub
or
js
daa
xor
add
cmp
adcb
fdivrl
xor
repz
mov
push
adc
push
mov
xchg
js
fwait
or
shll
testl
fistps
sahf
test
loop
pushf
outsb
jne
xor
ret
fs
add
lds
inc
pop
fstpl
xorl
shl
lds
fwait
and
xor
dec
mov
popf
and
add
cmp
lea
jne
cmp
xchg
pop
add
sahf
add
jmp
int3
shll
xchg
push
dec
shr
jo
lock
inc
adc
push
push
add
cltd
ret
fimull
mov
sub
fldt
out
test
ja
clc
lods
nop
aas
push
add
xor
sub
and
shlb
lock
lret
dec
jo
pushf
fiaddl
jl
mov
push
sub
in
xor
pop
daa
cmp
mov
mov
fnsave
ret
lcall
imulb
fsub
ja
dec
pop
sub
xlat
or
lods
jbe
arpl
ja
sti
adc
pop
or
inc
mov
into
and
pop
push
pop
mov
popf
fdivl
jl
lcall
pop
icebp
cwtl
sub
jp
out
mov
pop
int3
jno
daa
pop
jge
inc
mov
xchg
aad
mov
stos
and
in
xor
mov
jle
stos
xor
xchg
addl
ficomps
sub
sbb
and
sarb
shr
cmpsl
mov
jle
jge
fs
test
push
adc
iret
ret
andb
push
pop
nop
pop
cwtl
mov
fwait
loopne
sbbb
lock
sub
lea
movsl
or
add
push
mov
subb
sbb
xor
movsb
lds
arpl
xor
or
xor
sub
test
cwtl
mov
and
ret
arpl
lea
inc
or
xor
je
pop
les
je
xor
ss
mov
sub
cli
ljmp
add
cmpsb
dec
dec
cmp
in
stos
rcrb
sbb
pop
sub
adc
int3
adc
adc
ret
mov
jo
xchg
loopne
fwait
adc
cmpl
scas
mov
jle
mov
sbb
or
ja
or
cli
mov
test
sbbl
adc
fisubl
jp
inc
sub
xor
dec
repz
aaa
mov
cli
mov
ret
pop
add
sbb
lods
int3
popl
mov
lahf
mov
xor
cmp
inc
lea
ljmp
add
dec
push
push
or
cmp
mov
frstor
push
rcrl
cmp
dec
mov
movsl
sub
pop
mov
sbb
and
push
lods
or
ja
or
mov
out
and
push
dec
lcall
push
call
mov
adc
jecxz
iret
test
fildll
sub
ds
mov
pop
sub
push
inc
mov
das
or
push
ret
loop
cmp
inc
jno
hlt
int
xchg
scas
jb
adc
cmp
mov
dec
mov
xlat
outsl
loopne
lods
dec
rorl
int
xor
dec
cmc
fsts
jnp
jo
enter
mov
jo
or
out
jno
sbb
xor
or
lea
lods
das
pop
daa
add
ja
icebp
test
jg
out
cmc
add
repz
dec
insb
in
push
repz
mov
adc
push
mov
ret
cmp
adc
push
in
inc
loopne
mov
into
xchg
fisttpll
mov
add
aas
inc
mov
lods
xchg
insb
cs
sub
lcall
cmpsb
notb
xor
xchg
jnp
je
adc
imull
adc
rep
cmp
and
inc
mov
gs
xchg
xlat
scas
inc
or
mov
jno
iret
cmp
push
push
test
dec
mov
ret
mov
popf
xor
cmp
fwait
inc
pop
fdiv
out
pop
mov
mov
and
xchg
lock
and
scas
addl
adc
sub
pushf
sub
cmp
xchg
je
inc
adc
js
push
mov
ret
sub
add
subl
xchg
xorl
das
ja
nop
mov
dec
mov
imul
stos
pusha
cmp
inc
xchg
out
enter
ret
cmp
and
in
clc
addr16
pop
adc
popl
adc
shl
mov
mov
inc
dec
jo
jns
adc
and
clc
das
xor
mull
xlat
insb
add
dec
aaa
enter
andl
rorl
mov
cmp
popa
or
adc
xchg
int
xor
or
and
xchg
pop
ret
mov
fdivl
mov
hlt
add
mov
jge
fstl
xor
lock
ljmp
mov
and
cld
pop
shrl
cmp
add
scas
frstor
repz
mov
icebp
dec
and
sub
add
xchg
aas
sbb
xorl
icebp
mov
cmp
push
pop
ret
test
aas
fdivl
inc
mov
cmc
leave
or
xchg
jmp
stc
cmp
jp
jmp
fsts
pusha
sub
bnd
pop
push
lods
add
adc
faddl
dec
sub
mov
je
mov
mov
lret
inc
adc
mov
dec
mov
xlat
addr16
xchg
jno
fsubrs
xchg
jno
sti
cmp
jbe
mov
imul
jg
jl
cmpsb
pop
imul
addl
shll
lea
ss
sub
push
outsl
sbb
fwait
dec
add
and
lods
xchg
out
loope
jo
dec
enter
push
fadds
fnstsw
push
je
mov
mov
iret
push
push
sbbb
loope
push
loope
sahf
add
cli
jb
mov
xchg
cmpsl
popf
sub
jg
outsb
clc
inc
test
fmuls
out
jae
outsb
in
xchg
sub
scas
jne
les
mulb
jbe
mov
push
leave
sub
or
add
idivl
adc
xchg
cmc
push
out
sbb
ss
imul
fxam
mov
out
mov
das
fsubs
loope
out
adc
cli
loope
lahf
icebp
fidivs
cmp
xor
or
stc
nop
popa
rorl
pop
test
shrb
mov
das
cwtl
cs
and
out
das
lds
clc
shll
gs
xor
pop
or
sub
jle
shrl
lods
je
out
jbe
les
in
stc
mov
jp
out
gs
les
fsubrs
into
jmp
dec
pop
icebp
mov
add
icebp
cld
dec
icebp
nop
push
bnd
mov
lea
scas
lret
jmp
inc
in
pop
ss
sbb
cld
ud2
loopne
je
pop
jne
mov
xchg
mov
fucomi
popl
roll
and
jns
cmp
dec
fmull
push
adc
mov
sahf
bound
int
in
push
std
push
xchg
lds
dec
inc
sbb
ljmp
mov
or
loope
xor
lcall
bound
xchg
pop
pop
jo
sahf
fstpt
mov
add
out
mov
pop
adc
or
lahf
aad
adc
xchg
in
jae
dec
repnz
and
and
pop
lods
pop
xor
inc
mov
and
add
xor
fistpll
rcrb
cmp
dec
sti
enter
and
into
pop
push
mov
push
mov
insl
cwtl
in
ret
dec
xchg
sub
divl
or
and
mov
addr16
jg
push
stc
and
data16
fsubrs
mov
pop
sub
pop
jg
out
push
xchg
scas
mov
outsb
inc
jno
clc
or
jp
cmp
mov
test
jp
cltd
sub
rclb
pop
repnz
call
jmp
lahf
xchg
xchg
mov
cmpsb
pusha
add
jmp
pushf
cmp
inc
pop
aam
push
pop
mov
push
push
xchg
pop
hlt
and
dec
sbbl
pop
xchg
jp
shll
ficompl
jmp
xchg
and
jmp
mov
out
daa
or
test
and
jae
jg
or
sbb
xchg
mov
jae
ja
mov
cmpsb
pop
cmp
push
je
test
xor
sbb
idivb
dec
push
hlt
sbb
mov
mov
gs
lret
add
addb
pop
jns
ss
repnz
or
loopne
mov
movsl
insl
and
pop
push
mov
xorb
adc
mov
cmp
out
mov
cli
aad
stos
sbbb
push
mov
pop
ljmp
andb
aad
jp
out
inc
mov
aaa
mov
dec
out
pop
sub
aam
xlat
cli
sbb
sti
mov
jbe
fwait
jo
cli
roll
push
dec
and
mov
sbb
xlat
rcr
mov
add
repnz
add
dec
pop
xor
loope
lods
cmpsl
out
mov
outsl
std
ja
xchg
inc
cld
cmp
push
jmp
cmpsl
add
aas
in
xchg
xor
and
les
fwait
push
xchg
pop
adc
mulb
fisttpll
push
jns
fsubp
addr16
dec
test
ret
lahf
dec
add
cli
cmp
aas
push
pop
push
cmp
into
sbb
push
les
fyl2xp1
stc
mov
ds
mov
lcall
mov
int3
sbb
arpl
scas
jbe
dec
sbb
inc
push
push
and
sar
xchg
push
mov
fnstenv
cltd
popa
inc
mov
jmp
jge
push
xor
mov
call
inc
add
push
xlat
xor
xor
mov
pop
jle
jmp
arpl
xchg
mov
cli
test
add
mov
xor
pop
cs
lock
divl
test
push
call
in
inc
stos
inc
dec
jnp
mov
popa
movsl
arpl
mov
adc
xchg
fstl
loopne
inc
pop
iret
push
mov
stos
adc
cwtl
lret
push
in
cwtl
mov
sbb
mov
kmovw
popf
jne
add
xchg
push
lock
add
jp
jne
lret
jmp
nop
push
pop
push
call
xchg
push
outsl
pop
jno
xor
insl
stos
adc
shl
pushf
sub
mov
fnstsw
xor
pusha
jge
leave
jns
sbb
addb
push
xchg
inc
push
xor
jle
xchg
std
jmp
mov
pop
mov
sbb
jle
pop
jns
inc
sbb
out
dec
incl
or
cld
lock
mov
pop
pop
lret
not
int
sub
test
adc
pop
push
setb
outsl
jns
adcl
out
pop
mov
inc
frstor
jg
shll
sbb
sbb
insb
inc
fmuls
js
out
sar
sbb
pop
or
jae
mov
adc
jle
faddl
sbb
cmp
fnsave
repnz
lock
add
pop
xchg
jge
dec
cmp
andb
jmp
push
add
popf
aaa
or
and
js
inc
mov
cltd
daa
xor
insl
mov
roll
mov
adc
and
and
xlat
mov
adc
sbb
mov
nop
outsb
aam
xor
imul
xchg
rol
mov
pop
ror
xchg
add
jg
dec
cmp
sti
bound
std
inc
push
jns
and
and
xor
dec
mov
rorl
dec
in
bound
or
out
xor
jae
or
nop
xchg
jnp
sub
cmp
cmp
sub
ret
out
hlt
cmpsl
cmp
lea
push
mov
cmp
dec
mov
sub
or
or
mov
nop
sbb
push
loope
sub
jl
sahf
sbb
rclb
scas
mov
lret
push
test
mov
hlt
xchg
mov
fs
adc
call
mov
mov
mov
sbb
loop
int3
jno
jne
and
sub
jle
aas
es
mov
dec
adc
sub
jns
xchg
pop
lods
pusha
mov
add
push
inc
ret
cli
aam
aas
push
xor
lret
cmp
pop
test
sbb
and
movsl
dec
ja
sti
loopne
sahf
outsb
sub
out
push
enter
add
pop
mov
cld
imul
fsubl
scas
dec
xor
mov
rcrb
out
add
sbb
push
xor
movsb
cmp
cmp
scas
and
xchg
test
enter
cmc
cld
mov
xor
cmp
shll
icebp
add
dec
pop
xchg
cmp
test
stc
loopne
ffree
js
xchg
in
xlat
inc
mov
adc
mov
mov
pop
and
leave
repz
pop
jnp
push
push
mov
mov
xor
arpl
sub
fidivrl
add
xchg
sub
clc
testl
sbb
in
in
popa
shlb
xorl
insb
aas
add
addr16
mov
pop
popa
xor
sbb
sub
cmc
cld
sub
push
lea
cmc
mov
sbb
lods
aas
or
mov
rclb
add
push
movsb
fs
flds
fdivp
push
add
fucomip
add
push
jbe
sbb
lcall
inc
mov
cmp
out
aad
jl
jnp
or
adc
int
xchg
dec
ljmp
adc
xchg
mov
dec
xchg
stos
fwait
cmp
int
or
push
mov
aad
sbb
pop
sbb
leave
movsb
xchg
or
in
popa
enter
push
xchg
call
sbb
sahf
sbb
inc
sbb
sub
adc
fwait
cwtl
pushf
push
jecxz
or
aad
or
js
add
mov
iret
and
jo
cld
scas
mov
or
sbb
mov
lret
testb
mov
inc
push
cmp
adc
pushf
das
lret
mov
andb
call
push
xchg
int3
lds
push
dec
mov
xor
or
idivb
fadds
pusha
call
xor
outsb
retw
mov
and
dec
sub
jns
mov
xor
repnz
inc
repz
repz
ret
xchg
shr
sti
jg
xchg
dec
add
rcl
pop
ss
add
and
pop
xchg
das
and
jns
pop
dec
jg
std
add
ffree
stos
lret
adc
jmp
gs
add
jbe
test
pushf
xchg
insl
mov
lods
xor
cs
aaa
lea
dec
or
in
lret
jp
outsl
push
mov
mov
lahf
divl
das
addb
bound
notb
mov
xchg
aaa
stos
lea
fsubl
xchg
push
sub
sti
sbb
or
int3
sub
and
cmp
adc
pop
imul
fdivrl
lret
xor
negl
cmp
push
sar
and
cmp
dec
ljmp
cli
and
add
xor
das
and
imul
mov
push
sbb
sub
sbb
inc
dec
jmp
imul
addr16
dec
xlat
push
cmp
inc
aaa
int
roll
push
adc
fistpll
mov
mov
subl
pop
aas
in
mov
xor
sti
icebp
data16
add
jg
inc
xor
lds
fidivrs
lea
cmp
call
mov
jb
mov
push
pop
pop
insb
lock
jge
in
ljmp
divl
jno,pt
fwait
dec
mov
push
mov
lods
xlat
mov
loope
mov
loopne
cli
movsl
cmp
test
es
pop
add
lahf
mov
sbb
lods
fwait
and
aad
adc
jno
adc
sbbb
cs
sbb
out
stos
cld
insb
cli
inc
inc
arpl
cwtl
stos
mov
aaa
push
jae
sub
rcrl
outsb
cld
jne
add
lcall
and
adc
push
sub
sub
cmp
daa
inc
pushf
jo
sub
push
push
push
adc
icebp
sbbb
lods
test
lahf
xchg
and
cmpsb
add
push
aam
je
jmp
rcrb
dec
cltd
aas
xchg
xchg
mov
ss
test
les
sbb
cld
test
scas
and
nop
xor
fbld
cmovne
sub
sub
xlat
push
ret
inc
inc
insb
adc
mov
and
mov
stos
in
mov
rolb
xchg
cmpsb
insl
aas
leave
pop
ja
inc
adc
mov
mov
mov
loop
leave
xchg
mov
xchg
xor
mov
adcl
cmp
jmp
inc
cmpsl
lock
mov
or
fldenv
jnp
push
add
out
adcl
loop
cmp
loop
aas
inc
stos
outsl
cmp
push
notb
clc
out
dec
test
or
scas
iret
divl
stos
xchg
and
in
inc
lds
hlt
sub
xor
fwait
test
repnz
push
pop
aaa
cmc
pop
pop
or
mov
mov
mov
cmp
loope
mov
adc
fwait
xlat
and
sti
aaa
sub
jbe
aam
and
adc
nop
into
stos
aas
push
lods
lods
in
cmpsl
mov
xchg
aad
loopne
jno
repz
cmp
or
pushf
cmp
cmp
fsubs
add
xchg
imul
pop
pop
cmp
lret
xlat
cs
inc
iret
mov
add
pop
jne
scas
or
sahf
cwtl
inc
fisubs
push
xchg
fistpl
out
les
loope
loope
cmc
lahf
mov
sub
movsl
mov
popf
movsb
xchg
subb
bound
sub
call
jns
clc
lcall
sbbl
mov
rclb
dec
mov
inc
and
jae
in
cs
gs
pushf
cltd
xchg
jge,pn
ret
push
sbb
stos
push
mov
pop
inc
ja
jmp
add
into
repz
xchg
adc
pop
sub
xchg
jl
fs
stc
movsb
cmpb
add
stos
pop
pop
mov
flds
cmp
or
sub
ja
shlb
xor
out
mov
adcl
stos
mov
mov
jne
push
lret
dec
and
inc
sub
movsl
push
mov
lret
dec
ret
lods
xor
dec
lods
mov
inc
imul
out
jnp
test
fsub
lods
in
xchg
dec
imul
or
or
xchg
inc
ljmp
dec
push
jnp
call
mov
stos
sub
jle
and
insb
add
or
test
xchg
jp
lock
pop
imul
jno
sub
out
xchg
stc
xor
jns
dec
cmp
push
fistpll
arpl
mov
movsb
cmp
fs
mov
mov
cmp
xor
jl
cld
mov
or
sbbl
scas
insl
or
jle
push
dec
push
js
sbb
pusha
cwtl
cli
testb
or
sarb
pop
shll
xchg
insb
daa
sbb
and
outsb
pop
popf
xor
fildll
mov
orb
pop
lods
repz
jo
roll
test
push
or
adc
sub
mov
shlb
js
sbb
pop
cli
jb
call
push
push
fcomip
je
ficoms
adc
jle
lock
incl
cld
sub
add
cmp
push
adc
mov
inc
loope
jne
mov
xlat
into
data16
test
icebp
arpl
xchg
pop
je
mov
nop
mulb
sbb
pop
iret
sub
mov
pop
adc
lds
cmp
cltd
xor
dec
mov
arpl
xor
cmpsl
push
mov
dec
and
or
cmp
pop
vmread
mov
cmpsb
pop
neg
into
mov
shrb
inc
int3
fstpl
add
or
nop
test
add
push
outsb
sahf
xchg
push
lcall
ljmp
or
in
and
icebp
jne
inc
enter
lea
pop
sahf
out
cmpl
add
je
les
in
hlt
mov
add
push
mov
jmp
mov
xchg
int
insb
cmp
adc
lods
mov
jp
mov
aad
adc
cli
xchg
shll
jle
xlat
jp
popa
or
daa
pusha
push
push
lods
adc
xchg
adc
adc
stos
loope
push
fidivrl
mov
out
dec
add
hlt
scas
inc
stc
xchg
popf
stos
les
not
int3
inc
lock
das
add
stc
iret
movsb
mov
sbb
cwtl
lcall
push
add
xchg
mov
jno
inc
sub
daa
jb
loopne
mov
xchg
or
das
imul
subps
dec
rol
jns
lds
gs
cmp
xlat
test
pop
aam
and
cli
mov
ds
push
incl
xor
sub
popf
out
flds
leave
add
pop
push
repnz
inc
ret
cmp
lods
shlb
pop
and
jns
mov
std
push
push
sbb
loopne
or
stos
ljmp
popf
mov
test
xchg
push
ret
std
xor
out
bound
mov
bound
or
xchg
and
ret
push
dec
mov
mov
sub
cmp
lods
add
loope
imul
shr
sub
dec
or
inc
es
jmp
jae
pop
pop
neg
cltd
rclb
mov
push
bound
insl
pusha
insb
popf
jle
les
push
jae
pushf
out
shl
sbb
cmpsl
cmp
mov
mov
out
lret
jne
movsl
mov
dec
loop,pn
pusha
out
mov
popa
xor
fadd
cli
imul
pop
test
or
ss
shr
pop
es
cld
cli
cmpsb
lock
xchg
imul
imul
cli
xchg
in
push
add
test
cmpsb
push
and
decb
inc
adcb
movsl
fsqrt
dec
leave
cmc
and
sbb
lret
mov
popa
mov
push
aad
lds
sahf
adc
lret
jbe
push
outsl
int3
aad
icebp
mov
inc
adc
xor
ss
xchg
jb
inc
xchg
lods
test
call
and
cmp
jecxz
pushl
pop
jno
mov
movl
repz
fdivrl
cmp
dec
aam
hlt
mov
ss
push
leave
mov
sbb
ret
jecxz
or
pop
push
cmp
add
lock
gs
pop
xor
push
xchg
outsl
ss
das
add
imul
out
inc
insb
popf
lea
jp
or
rcll
in
cs
dec
xchg
adc
ret
push
jecxz
lods
mov
or
add
outsl
aam
repz
xor
cmp
mov
outsl
sub
les
cmp
pushf
jno
mov
sub
xchg
cs
je
daa
lods
enter
shr
inc
fs
es
or
push
add
stos
mov
mov
sbb
ljmp
bound
incb
dec
ffreep
cmp
xlat
sti
gs
out
dec
das
cli
in
jae
shlb
stos
movsl
pusha
xor
test
mov
aas
fs
cs
push
insl
xchg
divl
loope
ja
push
ss
lods
sub
sub
ss
pop
and
mov
push
ljmp
inc
mov
lret
les
test
insb
ret
imul
dec
ficomps
xchg
dec
adc
add
addr16
add
addr16
fwait
popf
sbb
inc
mov
dec
add
icebp
out
enter
loope
rclb
call
xchg
insl
xlat
pop
testb
rcr
xchg
mov
in
adc
movsl
lcall
cmp
stos
mov
xor
push
lock
or
insl
dec
test
and
out
out
dec
out
jb
sub
mov
outsl
fistpl
jbe
je
mov
push
jns
adc
test
inc
pop
xchg
push
shll
cmp
pushl
sub
bound
jns
mov
gs
adcl
xlat
cmp
sub
jp
xchg
iret
add
ja
loopne
mov
dec
psllw
xchg
dec
cmp
sbb
scas
jne
mov
and
mov
mov
aas
lcall
outsl
push
pop
ss
imul
call
sarb
push
sbb
and
rorb
mov
fistpll
das
sbb
divb
daa
and
dec
mov
lahf
xchg
imul
popf
pop
jmp
cmp
mov
aam
jp
and
mov
shll
lret
push
shll
mov
or
int3
fists
loope
repnz
jle
mov
cs
inc
lods
sub
arpl
and
stos
sti
jge
adcb
out
fsubs
mov
cmp
mov
shl
add
xchg
xchg
nop
das
mov
cld
in
mov
mov
pop
movl
cmp
pop
push
dec
outsb
jg
ljmp
addb
add
test
cmp
bound
xchg
mov
scas
or
mov
mulb
xchg
or
gs
scas
loop
mov
pop
iret
mov
and
rcrl
xchg
in
xlat
sti
leave
lret
sti
in
xchg
popf
sbb
adc
outsl
pop
pop
pop
push
and
imul
lea
dec
inc
fwait
test
sbb
dec
pop
and
jl,pt
int
cmpsl
jbe
movsb
xor
loop
mov
mov
sahf
scas
idiv
push
inc
jmp
inc
jmp
dec
fsubr
ljmp
add
fdivrl
xor
cmp
adc
popf
out
jge
xchg
hlt
fs
pop
cs
xor
sub
aaa
mov
xlat
pop
out
add
xor
jae
nop
stc
loopne
jnp
clc
add
daa
aam
push
mov
or
mov
and
lcall
pusha
pop
or
test
xorl
xor
imul
mov
dec
xor
xor
lahf
xor
aam
notb
push
sbb
and
cltd
sbb
lock
mov
ret
push
roll
push
add
insb
mov
pop
les
ljmp
imul
cs
std
divb
push
mov
cmp
js
icebp
or
mov
jo
pushaw
add
and
push
jp
adc
int
adc
mov
fs
rcr
inc
roll
cld
sub
std
cmp
cmp
push
aad
sbb
and
pop
push
fs
into
fisttpll
xchg
cmpsl
sbb
mov
dec
ret
or
xorb
pushf
imul
sub
mov
pop
cmp
sub
in
bnd
pop
lret
push
mov
stc
sbb
enter
stos
adc
aaa
sub
inc
in
popf
insb
fmuls
pop
adc
es
add
pop
mov
mov
cmpsl
xchg
out
jae
into
loopne
sbb
sbb
ja
stos
push
movsb
xchg
lret
add
cld
in
pop
mov
lret
lods
push
popf
inc
popa
leave
loop
divl
mov
add
push
fimull
mov
popf
stos
cmc
cs
cmp
mov
and
fisttpl
mov
test
stos
push
xchg
sbb
mov
sub
loop
and
xchg
sahf
test
sub
shlb
mov
or
jmp
inc
stos
ss
cmp
out
stc
pop
je
push
sbb
pop
xchg
scas
pop
cmp
or
pop
cwtl
lods
jns
pushf
inc
push
stos
imul
xor
aas
sub
adc
scas
mov
and
lret
xorb
andb
aad
add
adcl
incb
loop
les
cmpsl
jne
stos
lahf
cmp
mov
outsl
rcll
cmc
fsts
popf
dec
jnp
push
scas
arpl
movsb
add
adc
iret
mov
shrb
pop
data16
xchg
out
dec
pop
push
aad
stos
movsb
mov
icebp
out
lret
mov
push
or
push
out
out
sub
rclb
push
jge
ret
xchg
and
cmpsl
jle
insl
ljmp
shll
jbe
adc
and
enter
jg
push
jo
and
xor
ljmp
lahf
sub
icebp
sbb
ds
add
pop
adc
jae
adc
jns
sar
jmp
arpl
sub
dec
pop
cmp
mov
bound
inc
pop
lock
test
imul
push
xor
pop
in
pop
sahf
and
add
cld
and
sbb
or
adc
leave
or
jns
popa
xchg
hlt
arpl
mov
fcomps
dec
or
cltd
lret
xchg
insl
mov
jb
push
xchg
out
mov
pushf
std
dec
jecxz
adc
jecxz
idivb
fimuls
repnz
xor
pushf
pop
cmpsl
push
call
das
lds
jns
sti
and
pop
scas
mov
ljmp
outsb
inc
inc
mov
out
aad
push
rcl
mov
mov
leave
fucom
ja
jl
and
fwait
sahf
adc
mov
jmp
andb
jae
mov
mov
adc
in
and
xchg
sub
lods
mulb
daa
outsl
das
enter
pop
mov
push
pop
jbe
roll
sub
or
and
filds
xor
push
cmp
or
ljmp
aad
in
rdpmc
mov
dec
pushf
sbb
sbb
orl
inc
int
ljmp
xor
dec
sub
pusha
pop
dec
repnz
loope
and
das
adc
cld
lret
add
jne
rorl
enter
xor
cltd
test
fsubrl
aam
mov
imul
out
ror
scas
divb
ficoml
mov
mov
inc
mov
enter
outsb
pop
out
arpl
inc
das
iret
das
mov
shld
push
sahf
hlt
lods
xor
mulb
inc
cld
mov
mov
pop
pop
lahf
es
jbe
mov
pusha
addr16
jecxz
ret
or
jo
test
cmc
jne
and
call
adc
ljmp
cmpsb
pop
lahf
int3
andb
pusha
and
sbb
lea
adc
mov
fsts
add
test
enter
sbb
cltd
adc
add
mov
mul
or
or
adc
mov
or
ficoml
cli
daa
sbb
jge
out
mov
iret
out
add
es
js
iret
push
push
pop
fidivrl
test
sub
lods
out
mov
mov
mov
pop
bound
cld
das
gs
data16
or
push
xchg
clc
push
dec
enter
shrb
jnp
mov
push
push
inc
cmp
xor
mov
mull
pusha
add
cmpsb
push
dec
out
jns
fsts
xchg
test
and
out
push
test
stc
xor
inc
aaa
loope
jb
xor
mov
jae
push
mov
outsb
and
nop
mov
lahf
testb
mov
stc
push
fs
js
jae
add
mov
fcmovnbe
or
aaa
and
fucomp
mov
jns
or
jns
push
xchg
lds
jle
pop
and
or
cmpsl
shll
push
outsl
mov
ret
mov
sbb
ss
hlt
enter
aas
ds
jle
mov
movsl
xlat
mov
andb
lock
inc
iret
cmc
std
aaa
mov
jmp
in
and
gs
add
dec
xor
mov
xor
pushf
movsb
adc
fs
ficoml
popf
jae
xchg
and
pop
aad
out
mov
lret
out
jmp
stc
sub
aaa
add
lods
push
jp
add
repz
movsl
aas
mov
addl
mov
push
xlat
and
jbe
mov
scas
icebp
and
xrelease
call
ffree
mov
dec
ds
mov
jns
add
outsb
cmpsl
sub
pop
and
mov
jns
pop
cli
leave
push
in
sbb
push
jle
inc
inc
sbb
in
or
cmpsl
mov
popa
sub
pop
jge
cmp
out
test
dec
test
jnp
mov
dec
ja
push
js
aas
das
ds
cmp
xchg
push
adc
jecxz
flds
dec
xchg
xor
pop
cmp
pop
mov
push
mov
out
lret
subl
adc
mov
and
loop
sbb
adc
popa
pop
arpl
mov
adc
add
rorb
dec
fs
mov
mov
sbb
fsub
ja
ds
bound
test
mov
mov
aas
shrl
and
je
sbb
sub
jmp
ljmp
inc
jecxz
cwtl
mov
les
dec
dec
subl
jle
gs
ds
sbb
mov
push
mov
xor
inc
frstor
sbb
mov
sti
mov
test
repz
jmp
mov
inc
xorb
enter
movsl
into
cltd
jnp
cmc
sub
push
movsl
into
and
fdivrl
aaa
lea
ror
out
mov
jecxz
data16
push
xor
cmp
dec
adc
mov
xchg
or
pop
mov
push
or
add
lea
pop
mov
mov
jns
pushf
push
int3
and
repnz
xchg
jl
push
cmc
or
ror
mov
hlt
and
lds
cwtl
call
jmp
add
addr16
or
mov
punpcklbw
jbe
push
cli
dec
pop
insb
cmpsl
push
movsb
ret
xchg
pop
aaa
sub
mov
popf
jge
push
mov
pop
sbb
shlb
lea
in
lret
or
lret
cmc
push
daa
call
push
mov
dec
dec
pop
std
mov
insl
inc
rcrb
sub
lock
jmp
push
dec
sub
pop
xor
mov
mov
and
imul
push
push
ljmp
ficompl
test
test
hlt
insb
arpl
out
sub
arpl
jge,pn
sahf
dec
stos
jns
pop
mov
xchg
out
sbb
jg
jle
outsl
mov
or
pushf
jb
or
cwtl
cwtl
aam
push
push
insl
cmp
mov
xor
popa
mov
adc
push
mov
push
cld
les
int3
sbb
pop
or
push
in
jae
push
mov
add
dec
pop
aas
js
outsb
jmp
push
sub
dec
divl
and
ljmp
lret
push
andl
addr16
mov
jg
mov
lahf
push
sbb
inc
push
lds
notl
in
pop
js
das
fcmovnb
xor
cmpsl
shlb
std
cmc
pop
inc
pop
fiaddl
mov
hlt
jno
and
or
cld
adc
or
ret
xor
into
fs
int
adc
and
fs
shrb
mov
and
cmp
idivl
mov
dec
push
fdivrl
sahf
mov
pushf
je
xchg
js
pusha
pop
sbbb
in
data16
fildll
push
ljmp
test
xchg
mov
icebp
fisttps
pop
arpl
and
icebp
dec
ds
push
int3
push
cmp
sub
pop
ds
sbb
jae
cld
push
repnz
dec
pop
xor
add
imul
push
rcrb
sub
xchg
in
ret
lods
loop
test
or
cmpsl
clc
cld
out
jo
adc
sbb
lock
jno
data16
data16
lods
dec
push
test
pushl
mov
add
add
and
fcmovne
mov
xchg
aam
lea
pop
out
pop
inc
add
fbstp
xchg
cs
icebp
mov
scas
mov
je
jno
cs
rcl
out
es
in
xchg
ja
xor
mov
and
imul
sti
adc
jge
dec
or
mov
xchg
shlb
dec
movsb
psrld
mov
inc
rolb
pop
or
and
inc
add
or
cmpsl
je
push
add
ljmp
jns
jne
jle
pop
out
out
or
outsb
mov
xor
push
popf
rcrb
sub
ds
cmp
fs
sbb
rol
sahf
pop
lret
sarl
mov
xor
mov
adc
and
pop
aas
and
pop
cmp
sub
cmp
shrl
sbb
pop
cwtl
loopne
cs
cmp
jns
ret
mov
xchg
mov
mov
in
sub
xchg
mov
pop
dec
dec
lret
jl
ret
and
fistpll
cwtl
dec
cmp
mov
jne
pop
adc
sbb
push
fsts
pop
inc
addr16
cmp
xchg
inc
rolb
inc
push
dec
xchg
stos
fstpt
cmp
cli
xor
push
in
cli
xorl
mov
mov
mov
pop
icebp
push
rcl
pop
dec
cmp
ja
jecxz
lahf
mov
int
xor
jae
int
push
fiadds
hlt
leave
mov
outsb
mov
inc
cwtl
popf
fistpll
pushf
cmp
inc
repz
jmp
push
or
lahf
and
into
sti
lcall
pop
scas
in
mov
push
fbstp
and
scas
xchg
dec
lahf
in
push
add
inc
jo
shll
aas
xchg
cmp
add
out
adc
in
imul
pusha
ret
ja,pn
dec
ljmp
cwtl
xor
mov
in
aaa
in
add
popf
bound
xchg
xlat
jle
cmp
fstl
dec
cs
test
xchg
push
popf
cmp
adc
loopne
push
dec
pop
mov
test
lret
jle
insb
push
imul
popa
mov
and
add
fcom
dec
pop
inc
imul
add
jnp
dec
pop
test
cmc
popf
mov
loope
shlb
je
pushf
arpl
or
test
lret
push
js
mov
out
leave
js
sahf
insb
lahf
adc
xchg
repz
sar
inc
xchg
rolb
lahf
push
and
mov
cld
lret
jno
loop
imul
xor
push
insb
xchg
out
sub
das
mov
int3
cwtl
jno
pop
hlt
xlat
sub
cmp
subb
add
lock
imul
sbb
movsb
xchg
jp
addr16
mov
leave
pop
inc
aaa
and
dec
icebp
faddl
leave
or
shlb
incl
idivb
jl
sahf
test
and
or
mov
dec
jbe,pn
jbe
loope
pushf
mov
jg
call
or
ds
outsb
out
and
arpl
sahf
aad
mov
jbe
dec
pushf
pushf
mov
and
lock
ss
fnsave
jecxz
add
pushf
insl
mov
dec
lods
out
push
jecxz
inc
mov
or
cld
aam
ficoml
repnz
pop
mov
add
push
addr16
ds
aas
dec
xor
leave
add
inc
add
mov
test
push
mov
jmp
mov
mov
pop
push
insl
jle
jl
aam
lret
push
xor
fnstcw
push
jg
iret
mov
in
push
leave
mulb
cs
ret
orl
sub
dec
jbe
mov
lods
incl
xlat
jo
in
fstl
shrb
push
xor
shl
cmp
mov
repz
mov
cmpsl
mov
dec
divb
pop
test
cmp
jecxz
mov
in
pusha
sbb
pop
xchg
xchg
sbb
fidivl
inc
mov
fsubrl
mov
es
fsubrp
cltd
mov
mov
mov
aas
xlat
jle
push
pop
push
shlb
mov
push
lock
stos
mov
pop
stos
add
jle
and
dec
xor
add
mov
xchg
xor
out
push
movsb
sbb
hlt
cwtl
mov
in
add
das
jecxz
add
out
cmpsl
sub
test
clc
cmp
adc
sub
cwtl
jl
jns
add
and
mov
repnz
sub
xor
or
mov
pop
aaa
shrl
inc
pop
pop
and
pop
lret
mov
dec
lods
add
cmpsl
dec
xor
cld
cmp
lea
in
jl
mov
stos
loop
mov
data16
sub
push
mov
jecxz
inc
test
xor
jecxz
je
jnp
xchg
push
jno
fisubs
xor
jg
lock
fwait
and
jne
dec
add
mov
pop
adc
push
int
testl
sub
mov
pop
cmpl
test
push
inc
out
mov
inc
or
add
pop
pop
cmp
sbb
faddl
dec
fists
adc
insl
xorl
add
pop
imul
repnz
sub
outsb
sub
dec
idivb
and
xchg
std
call
lcall
imul
sub
fadd
js
je
testl
jp
out
mov
fldcw
and
mov
into
aad
push
mov
in
rcl
cmc
inc
into
mov
dec
into
xor
cld
inc
ret
idivb
mov
nop
test
dec
xchg
aam
xor
mov
out
mov
cwtl
inc
and
mov
sti
push
insl
or
adc
dec
pop
mov
rclb
and
int
cmp
lods
adc
rol
out
cltd
jl
xchg
xor
xchg
jecxz
mov
lret
mov
mov
xchg
or
pop
sbb
fsubs
adc
mov
add
pop
pop
mov
in
js
pop
sub
or
xorl
cwtl
popa
testl
jno
pop
jmp
adc
scas
out
movsb
jo
mov
loope
fadd
in
sub
jb
out
inc
xor
adc
aam
ret
dec
outsb
dec
ret
int
sbb
dec
daa
and
out
mov
and
stos
call
sub
jo
popa
xor
xor
push
sahf
data16
inc
cli
pop
jp
dec
jbe
mov
ljmp
dec
hlt
rorb
outsl
adc
push
les
jg
rclb
pop
int
sub
aam
aam
rcr
bound
jne
mov
aas
insb
dec
inc
inc
inc
stos
mov
xchg
xchg
sub
ljmp
mov
and
fadds
aas
sbb
and
mov
push
std
xorl
xor
imul
push
call
into
popf
rorl
test
xor
mov
fwait
pop
ret
mov
aad
mov
icebp
mov
addr16
jecxz
jo
mov
jge
pop
jne
pop
cld
push
xor
mov
inc
loop
xlat
push
pop
cltd
cmpsl
lret
clc
push
into
push
inc
popf
pop
negb
inc
lock
cmpsb
dec
outsl
dec
push
jne
loopne
test
clc
sbb
sub
popl
jae
or
and
inc
in
cmpb
pop
adc
mov
mov
mov
scas
outsl
aaa
push
sbb
sub
dec
sub
xchg
mov
or
jns
push
enter
or
jmp
ret
xchg
sub
pop
sahf
or
dec
insb
sub
lcall
or
sbb
mov
hlt
inc
and
rorb
test
ja
lods
cmpsl
mov
adc
sbb
aaa
subb
dec
dec
das
cmp
xchg
push
ja
sbb
mov
call
jne
enter
repz
leave
dec
sbb
nop
es
pop
and
ret
push
pop
gs
fsubrl
or
mov
add
testl
and
adcl
jg
sbb
pop
adc
jg
adc
js
addr16
loop
inc
test
xor
mov
cs
cmpsl
adcl
stc
out
shrb
in
test
fucom
adc
mov
loope
cmc
and
jb
orl
xchg
arpl
jg
pop
adc
sub
and
cltd
mov
std
dec
pop
pop
mov
jmp
mov
and
int
cltd
lock
ret
xchg
add
dec
aad
push
dec
stos
sbb
fisubrs
jge
in
pop
push
push
or
incl
jp
mov
out
sahf
out
inc
xchg
out
cmp
jbe
xor
add
cmc
mov
push
adc
stos
pop
mov
push
cmp
inc
popf
xchg
lds
rcrl
or
push
xchg
ret
or
ret
inc
add
shlb
cmpb
adc
xor
or
jb
mov
test
mov
inc
loopne
scas
shrb
pop
xor
add
dec
lahf
sahf
adc
xor
push
cs
cmp
jmp
lods
int3
insb
pop
push
nop
push
jnp
sbb
sarb
cld
das
sub
lret
push
push
aad
mov
jecxz
mov
adcl
jecxz
and
fdivrl
cmpsl
out
dec
mov
out
test
mov
xor
jns
icebp
sub
adc
pop
cmp
loopne
xor
aad
mov
fmulp
fwait
push
xchg
cmpsb
mov
mov
aaa
sbb
mov
push
push
or
push
lea
mov
inc
dec
xchg
lret
xchg
nop
mov
mov
fisttpl
in
mull
idivl
fistl
adc
dec
or
and
pushf
or
inc
adc
mov
dec
lcall
pop
xchg
dec
test
ljmp
or
pop
pushf
adc
ret
ja
lret
inc
loope
xlat
ljmp
pop
cmc
idivl
xchg
xchg
jecxz
xor
adc
pop
push
scas
dec
cmp
out
pop
adc
call
cld
or
movsl
sbb
mov
pop
mov
mov
jecxz
xchg
aad
pop
push
jecxz
sbb
mov
jp
and
icebp
fmul
jp
add
imulb
gs
cmp
out
jb
subl
mov
mov
and
pop
push
sub
aad
iret
popa
mov
push
cmp
mov
sbb
hlt
gs
std
sbbl
mov
xchg
out
test
jne
mov
xchg
cmp
push
push
adc
loop
dec
mov
jno
jl
loope
adcl
adc
mov
jae
lahf
in
shlb
push
mov
test
push
jne
cmpsl
and
xchg
pop
xchg
pop
mov
or
outsl
ds
mov
aad
adc
ds
iret
cmp
xor
ja
dec
cmp
fistpl
lcall
mov
stc
xlat
sbb
pop
xchg
shrb
pop
pop
and
sahf
xchg
mov
adc
and
adc
mov
xchg
mov
xchg
push
popf
mov
lret
clc
lahf
test
icebp
add
jmp
sahf
ret
out
xlat
mov
push
jo
pop
mov
rorl
mov
push
or
jne
adc
jae
aaa
adc
fsubr
mov
stos
push
repz
mov
stos
addr16
in
jno
mov
cmp
jae
test
xlat
popa
xchg
sbb
pop
dec
or
repz
aas
or
popf
fiadds
push
lret
push
mov
mov
mov
sti
sub
je
sbb
sbb
dec
sub
cmp
mov
sahf
and
lahf
stos
jl
xchg
fidivrs
mov
sahf
jl
out
or
dec
aaa
or
lods
cmp
nop
mov
inc
sub
int
es
icebp
pop
out
rcll
aad
jb
jne
xor
pop
dec
xchg
or
ret
xchg
mov
push
std
and
cmp
es
mov
insl
push
fcomip
fldl2t
popa
mov
dec
jle
lods
outsb
mov
jg
shll
aaa
outsl
es
xor
mov
cmp
jo
cmpb
mov
jns
jge
xor
test
mov
or
add
cwtl
xor
daa
xor
mov
icebp
lock
jno
in
ret
mov
adc
cmpl
dec
mov
or
jns
mov
clc
adc
pmulhw
int
lcall
int3
enter
dec
imul
outsb
xchg
ljmp
aaa
jmp
adc
js
ss
push
jge
pop
cmc
mov
or
pop
aad
inc
outsb
fwait
addb
cmp
movsl
enter
shr
dec
das
pushf
sbb
mov
movsl
inc
push
mov
fisttpll
lock
pop
arpl
cs
sbb
and
dec
dec
rclb
repnz
xor
mov
imul
jmp
movsl
or
ffree
and
mov
mov
jns
pop
mov
out
mov
inc
ds
pop
flds
and
and
pop
ret
dec
mov
lcall
mov
ret
push
push
clc
push
push
jmp
ficomps
lods
fldl
aas
jle
inc
fscale
fldln2
dec
lds
repnz
scas
addr16
arpl
imul
ljmp
ja
mov
test
fbstp
dec
sub
push
das
inc
xchg
data16
js
test
adc
pop
xor
mov
aam
pop
cld
push
mov
sub
aam
arpl
in
pop
lcall
cmp
sub
push
push
add
pop
cmp
push
test
mov
sbb
ja
mov
in
adc
in
inc
insb
sbb
lea
addr16
push
add
cmp
enter
push
je
or
fisttps
jg
lret
jnp
fimuls
enter
and
add
insb
in
push
jecxz
mov
enter
fwait
mov
cwtl
inc
dec
negb
jns
ret
xchg
sti
dec
addr16
push
mov
popf
sub
popf
push
es
cli
mov
inc
mov
fnsave
push
jp
stc
popf
enter
jg
mov
lods
push
jmp
and
and
or
dec
pop
pop
das
rcll
xchg
cli
jmp
pop
lods
ljmp
xchg
cmp
mov
rcll
aaa
mov
clc
loopne
inc
xlat
and
enter
and
xor
jb
hlt
stos
or
inc
mov
or
scas
leave
cmp
gs
adc
shr
mov
xchg
sahf
lods
push
fs
cmp
pusha
or
fld
je
dec
xchg
pushf
aaa
mov
pop
xor
xchg
mov
push
fcomi
int
xchg
fwait
loope
push
icebp
sbb
nop
xchg
sbb
lret
cmp
sar
cmp
jecxz
mov
shll
xchg
addr16
cs
pop
xchg
lahf
stos
xlat
cmc
ss
fcoms
lret
daa
dec
out
inc
inc
imul
pop
cs
and
cmpsl
pop
leave
jge
adc
add
addr16
and
adc
shrl
push
adc
orl
xchg
adc
push
push
inc
add
add
or
push
mov
mov
push
sbb
clc
adc
lds
pop
jmp
xor
cld
pop
sub
mov
clc
fwait
xchg
fadds
sbbl
mov
ljmp
push
add
mov
pop
add
mov
subl
ss
loope
dec
mov
and
int3
adc
and
or
pop
aad
dec
ficompl
cmp
mov
inc
leave
cmp
sub
mov
and
stos
pop
jae
pushf
addl
cld
mov
xor
push
nop
inc
cmc
mov
and
xchg
push
leave
push
arpl
jns
jle
xchg
int
lahf
jle
push
jp
xchg
sub
cmp
add
mov
aam
ret
inc
sbb
inc
mov
pop
fs
ror
cmp
add
mov
or
arpl
mov
pop
ja
in
fwait
inc
or
nop
lock
sbb
or
xor
adc
pop
fsts
pushf
in
pop
pop
mov
and
scas
mov
push
pop
into
mov
daa
jo
and
mov
xor
insl
fists
movsb
stc
pop
jl
push
cmp
in
mov
aad
sbbl
cli
fldcw
adc
fsubrs
xor
in
mov
inc
in
andl
js
xor
cmpsb
cmp
decl
clc
movsl
rcrl
add
sbb
dec
jle
cli
stc
inc
jb
repz
or
sub
adc
fistl
cmp
cld
and
testb
inc
sbb
call
ja
mov
pop
mov
mov
inc
push
sahf
lahf
push
pop
xor
jl
cld
shll
and
or
xchg
das
test
push
jge
inc
jo,pt
xchg
pusha
cmp
stc
push
insb
les
dec
cmpsl
mov
es
inc
test
movb
xorl
push
pushf
mov
in
xchg
jl
xor
mov
push
adc
xchg
shl
inc
test
out
jge
bound
stc
out
mov
xorl
add
out
lock
jle
jo
sub
das
xchg
aam
sarl
movl
add
lods
in
and
repz
mov
addl
cmp
pop
cmp
stc
mov
add
jl
test
xor
pop
dec
out
xchg
mov
js
mov
inc
pop
pushf
push
or
insl
insb
sbb
adc
or
mov
jnp
loopne
sub
gs
ret
push
gs
out
fs
push
adc
and
das
sbb
inc
adc
mov
das
loop
dec
xchg
aam
nop
das
xor
imul
repz
lcall
mov
imul
fdivs
sahf
push
pop
nop
jnp
mov
xchg
arpl
sbb
cmc
lahf
mov
dec
js
je
xchg
ficomps
mov
fwait
xor
fstpl
xor
hlt
push
sub
je
cmp
mull
jae
inc
add
cltd
xchg
mov
push
jne
push
std
sub
inc
push
pop
ret
loop
ret
shl
fadds
shlb
jb
and
jle
lcall
lods
scas
push
jae
xor
daa
adc
or
xor
imulb
add
sbbl
test
addl
add
add
imul
outsb
js
lea
or
sub
sbb
mov
pop
push
nop
std
xchg
push
xchg
pop
inc
int
mov
cmpsl
in
sbb
mov
or
jge
adc
imulb
or
push
pop
sbb
lods
movsb
mov
icebp
jne
sbb
mov
cmp
aam
movsl
jnp
push
bnd
dec
jle
jmp
xchg
inc
imull
sub
jne
ja
ja
enter
push
jle
rol
sub
cli
popl
pop
add
adc
add
sbb
lcall
aam
shlb
js
test
je
dec
outsb
pop
stc
in
jbe
fiaddl
repnz
jecxz
sub
mov
nop
scas
cmp
push
shlb
inc
cwtl
xchg
inc
scas
lcall
adc
and
es
clc
add
insl
lods
dec
pop
lods
stc
fdivr
add
xchg
push
push
lods
icebp
jbe
push
loope
cmp
es
inc
push
jl
xchg
push
fstps
pop
add
cld
cwtl
add
int3
js
and
ds
adc
adc
xor
xchg
cmpsl
in
jmp
pop
lods
aam
mov
jo
xchg
adc
insb
cmpsl
cmp
test
pop
stc
xchg
dec
cmovbe
fnstenv
repnz
pop
sti
xor
das
stc
pop
xchg
andl
repz
inc
repnz
adc
mov
push
mov
jle
jmp
push
in
pop
rcrb
jle
pushf
cmp
std
xchg
addr16
cs
sbb
mov
cmpsb
popf
aam
rcrb
dec
outsw
sub
dec
std
xchg
adc
push
push
in
xor
dec
movsb
cltd
in
popa
or
cmpsl
out
or
out
mov
jmp
iret
in
dec
mov
ss
cmp
mov
jnp
bound
jge
mov
out
jg
leave
ljmp
inc
sbbl
iret
add
cmpsb
ljmp
shll
mov
int3
sbb
movsb
mov
movsb
mov
nop
call
mov
sub
pop
inc
into
lds
in
sbb
lcall
adc
out
arpl
mov
xor
cmp
es
xor
cmpsb
mov
dec
adc
adc
loop
pop
and
mov
sbb
ficomps
subb
mov
mov
sbb
sbb
cld
outsl
dec
testb
notl
add
lret
mov
inc
mov
fidivrl
dec
adc
mov
shlb
adc
in
out
call
aas
jns
pop
imul
and
xchg
dec
dec
leave
mov
sub
sbb
dec
imul
sbb
aaa
and
out
les
lods
jg
rorb
jbe
aam
mov
dec
or
adc
xchg
iret
sbb
fsts
add
and
ror
push
sbb
dec
orl
seto
and
incb
push
sti
cmp
and
cmpsl
xor
scas
stos
and
jae
cmp
xor
cmp
shlb
sbb
mov
xor
ja
not
enter
in
iret
outsb
imul
cmc
fwait
add
push
movsl
ss
mov
sarb
clc
test
push
mov
mov
fisubl
repnz
mov
scas
xor
sbb
sbb
pop
int
add
ja
sub
in
jo
jno
imul
arpl
inc
dec
or
outsb
mov
subb
imul
lods
sub
adc
dec
mov
add
ret
cmc
cli
add
xchg
sub
adc
mov
xchg
dec
add
push
sub
push
int3
push
push
add
enter
lret
ss
xor
loopne
pop
roll
xchg
push
inc
xor
popf
sbb
aam
mov
gs
mov
sarb
sub
sub
sbb
or
sub
in
jno
sub
add
mov
ret
orb
and
mov
mov
push
into
outsb
orb
push
pushf
xchg
push
outsl
lcall
inc
xchg
mov
jl
int3
jnp
in
add
rcrb
fisttps
inc
push
mov
icebp
adc
stc
imul
pushl
cmpsb
or
ja
sub
lds
mov
mov
ss
repz
cmp
adc
les
mov
jp
in
mov
mov
mov
or
xor
sbb
and
dec
xchg
mov
sub
in
mov
or
xchg
mov
iret
adc
mov
test
ss
push
repnz
aad
sub
je
jle
in
mov
push
mov
ss
inc
or
mov
cli
mov
xchg
jg
out
mov
outsb
cwtl
ret
into
mov
ret
sbb
jne
out
stos
loopne
mov
inc
dec
push
jp
xlat
fisubs
testl
ss
movsb
shl
insb
sbb
mov
ret
jae
push
push
dec
insb
scas
fwait
test
mov
jne
sbb
dec
icebp
enter
mov
lods
test
pushf
sarl
jae
mov
dec
jecxz
enter
pop
out
fdivrs
mov
push
mov
insl
loope
jl
sarb
mov
cmc
xor
lea
out
xor
cltd
int3
pop
push
bound
testl
adc
xchg
push
mov
imulb
lods
out
icebp
xor
es
rorb
lcall
fs
jle
sbb
popa
push
xlat
cmp
cmp
sub
pop
in
xor
adc
fs
push
xchg
rep
sbb
out
fildll
in
loop
loop
xchg
or
out
imulb
out
sbb
pop
aas
jecxz
add
out
outsb
push
jb
dec
into
shld
outsb
add
in
cmc
pop
outsb
leave
pushw
in
test
sub
fsts
dec
arpl
pop
nop
mov
stos
mov
mov
xchg
insl
add
and
xor
aaa
mov
pop
cld
xor
pushf
mov
cli
xlat
test
fistpll
faddl
push
push
jmp
cmp
dec
dec
imul
add
rol
fwait
lods
movsb
in
xchg
and
gs
jno
cld
and
in
cmpsb
dec
jb
imull
movsl
aas
mov
xchg
adc
adc
leave
sbb
jo
icebp
outsb
sbb
ss
and
lret
in
pop
in
lods
mov
dec
ljmp
or
mov
pop
and
pop
sub
cmp
dec
xchg
sub
and
add
movsb
pop
fcompl
dec
xchg
cltd
mov
cmpsb
or
icebp
lods
fxtract
outsb
mov
add
sub
push
testb
mov
mov
rep
jle
test
out
and
jge
xor
loopne
out
sbb
pop
adc
sbb
jno
adc
dec
mov
xor
sub
shll
dec
sbb
mov
cmp
xchg
std
in
aas
dec
aas
es
cwtl
mov
int3
cmp
fldt
fcomps
push
mov
mov
jmp
stc
inc
addr16
iret
into
sarb
jb
les
test
jge
adc
add
loop
inc
or
cmpsb
xor
addr16
repnz
push
adc
and
inc
pushf
fistps
sub
lods
aas
mov
daa
xlat
loope
jg
fldenv
cli
xor
mov
shl
dec
cmp
mov
cmc
fidivrl
icebp
enter
sub
jno
xor
adc
aad
fs
cmpsl
sbb
push
sub
jbe
mull
push
pop
jge
cmpsl
sub
sahf
mov
pop
inc
sbb
scas
adc
aad
dec
movb
lret
inc
gs
fcoml
scas
xor
inc
jnp
adc
jo
sbb
inc
jbe
out
not
and
push
jg
push
add
imulb
inc
add
mov
lock
iret
cmp
addr16
mov
xor
push
jp
xor
es
mov
pop
cs
jl
lret
pop
scas
movsl
sub
icebp
pop
inc
mov
jne
inc
xlat
and
xor
cmpsl
mov
mov
pushf
xchg
mov
stc
xchg
mov
jmp
jo
es
push
add
adc
aaa
rorl
jb
out
outsb
fidivrs
mov
inc
lods
out
push
mov
mov
repz
or
in
jae
inc
push
incb
mov
daa
dec
bound
inc
sub
sub
push
test
jns
jne
push
test
inc
cmp
pusha
cld
mov
xor
cs
mov
pushf
and
cmp
sub
decl
pop
jne
jmp
mov
mov
pushf
ja
sub
sbb
or
add
aam
xor
inc
push
lock
push
repz
sub
or
sub
sbb
push
out
cwtl
sahf
dec
fdivrs
insl
iret
stos
pushf
adc
inc
nop
iret
aam
mov
mov
shlb
repnz
lret
hlt
pop
inc
inc
outsb
add
adc
and
les
loope
mov
cmp
loope
andl
pop
pop
cmp
and
inc
sub
or
xchg
pop
mov
xor
popa
es
pushf
xor
jns
mov
outsb
sub
sbb
xchg
fisttps
in
dec
repz
pushf
fisubrs
sub
mov
leave
ret
test
xchg
adc
xchg
mov
es
push
inc
cld
fstps
sbb
into
and
sahf
pop
push
lods
jle
mov
je
add
addb
push
lahf
bound
inc
jo
test
and
xchg
lcall
xchg
xor
mov
xchg
lret
sti
push
aas
cmpsb
lahf
pop
shlb
ds
in
in
mov
sbbb
call
insb
xchg
mov
sbb
popf
aas
stos
push
iret
mov
xchg
ja
mov
sub
sub
leave
repz
imul
lods
sub
xor
je
out
fwait
sbb
repnz
add
lahf
sar
icebp
xor
pop
jl
in
add
mov
xchg
jnp
jmp
jmp
xchg
push
dec
xchg
pop
and
cmp
je
and
jno
int
jle
sub
loopne
inc
inc
dec
test
out
mov
movsl
sub
mulb
fistpll
pop
fdivr
sbb
sub
jnp
jb
inc
xchg
cmpb
add
arpl
orb
call
cld
pop
scas
sub
decl
dec
push
mov
mov
pop
insb
xchg
cmp
pop
fistpl
loop
xor
pop
dec
fbstp
sti
popf
add
push
and
mov
js
dec
sub
loop
push
js
clc
outsl
cmp
mov
ret
or
push
jecxz
mov
add
push
out
and
inc
add
jno
add
add
fndisi(8087
mov
adc
sti
and
lea
and
mov
jle
sub
dec
push
xchg
pop
inc
test
andb
push
pushf
inc
xlat
popa
pop
dec
jge,pn
push
mov
jbe
xchg
js
cmpl
imul
jo
mov
or
ret
push
push
lds
enter
xor
insb
stos
mov
jmp
stc
bound
frstor
ret
and
cmpsb
and
lret
jae
mov
sbb
mov
add
stc
sub
testl
inc
inc
dec
es
inc
push
cltd
push
pop
movsl
out
pop
call
xchg
inc
rclb
push
xlat
cwtl
addr16
lock
mov
jp
call
push
lock
sbb
inc
mov
stos
outsb
movsb
adc
pop
sbb
incb
xor
jne
in
pop
pop
pop
in
dec
and
mov
pop
rcrl
sbb
mov
push
sbb
cmp
or
xlat
pop
imul
cs
mov
insb
jmp
sbb
cwtl
mov
jo
mov
jo
add
adc
outsb
add
es
inc
ss
scas
cli
push
cmpsb
in
aad
fwait
test
mov
iret
hlt
aas
xchg
or
dec
sub
in
shlb
fists
lahf
add
daa
in
aad
fadds
int3
data16
lds
push
and
call
pusha
ljmp
xchg
adc
or
push
or
ror
movsl
out
sub
movsb
mov
test
push
push
in
repnz
popa
pop
or
stc
das
pop
adc
les
ret
add
xor
in
sbb
lods
std
sbb
inc
ret
xor
test
js
enter
aam
in
push
mov
jbe
jge
dec
fwait
in
call
cmp
adc
xchg
mov
jb
stos
xchg
adc
pop
or
push
xor
jge
xor
adc
xchg
lcall
popa
jbe
jnp
adc
mov
add
dec
push
mov
sub
fisttpll
ds
orl
and
fs
sbb
popa
xchg
push
adc
push
lock
aaa
jl
jno
lret
lahf
mov
mov
fldpi
push
sbb
dec
repnz
mov
inc
in
add
fidivrl
pop
dec
ss
sbb
push
subl
idiv
mov
imul
jo
cwtl
mov
aaa
repnz
pop
add
sub
push
jbe
adc
mov
cwtl
xor
stos
lods
mov
ja
icebp
icebp
inc
push
inc
or
jns
xor
jmp
add
mov
test
aam
or
pmaxub
jno
jno
or
cwtl
mov
pop
aam
cmc
daa
adc
dec
ret
cld
sbb
aad
jle
push
outsl
xor
clc
cmp
jge
cmc
jns
ret
add
mov
cli
out
in
mov
xorb
jge
cwtl
aam
insl
into
push
xchg
mov
fwait
mov
jo
cmpsb
jbe
int
mov
or
cmpsl
rclb
xchg
out
mov
push
xchg
mov
mov
rolb
inc
clc
mov
test
in
es
add
outsb
adc
sti
adc
and
imul
jmp
xchg
mov
xchg
popa
leave
push
ja
daa
mov
std
movsb
loopne
daa
enter
jg
lea
out
inc
jp
lock
xchg
arpl
adc
ret
scas
cmp
repnz
rcll
cmp
jmp
sbbb
enter
cmpsl
pop
aam
mov
cmp
xchg
sbb
sub
push
add
mov
sub
mov
dec
fs
xchg
xor
idivl
inc
sti
cmpl
pop
lret
push
clc
fs
sbb
mov
ds
daa
sub
arpl
es
popf
aam
xchg
xchg
cli
inc
into
push
dec
jge
fistps
das
sbb
outsb
int
mov
in
in
pop
mov
or
mov
mov
cmp
or
pop
mov
cmp
sbb
dec
add
dec
or
fsubr
xchg
js
mov
nop
jp
sahf
insl
dec
ret
cs
dec
inc
mov
mov
es
jl
stos
lods
adc
cwtl
cltd
sub
movsl
sub
push
lcall
out
add
dec
insl
movsl
dec
lret
sub
push
xorb
ret
xchg
jl
pop
cwtl
imul
sti
mov
or
fstpl
mov
fstpt
pushl
cmp
scas
mov
mov
pop
mov
mov
loopne
cmpsb
data16
jmp
mov
xchg
adc
add
xchg
jg
aam
xor
movsb
mov
rcrb
jmp
sbb
or
pop
dec
ret
mov
jnp
xchg
jno
mov
in
and
add
mov
xchg
imul
jo
mov
push
ljmp
cli
jmp
cmp
dec
sbb
mulb
ljmp
lods
inc
xchg
in
scas
lcallw
sub
adc
and
andl
xor
jns
add
shll
add
es
sub
adc
xchg
sub
mov
lret
popf
rolb
adc
ja
mov
xchg
mov
je
push
xor
pushf
fdivr
icebp
mov
mov
add
xchg
fwait
into
jae
int3
add
push
and
insb
in
daa
inc
aas
cltd
dec
mov
mov
xchg
push
push
sub
inc
dec
add
ret
add
jbe
add
clc
mov
sbb
out
pop
jo
xchg
fcomip
mov
cmpsb
mov
addr16
mov
and
loopne
adc
jl
movsl
add
xor
scas
mov
test
inc
xchg
pop
shrl
inc
out
pop
loopne
ds
js
jle
fucomi
xchg
jl
loop
mov
xchg
ljmp
aam
shlb
or
stos
lret
inc
jge
sbb
dec
je
push
int3
adc
bnd
push
sti
xchg
lods
pop
rcrl
and
inc
aad
leave
fldt
shlb
enter
rolb
pop
pusha
xchg
stc
and
cld
xchg
pop
mov
arpl
icebp
mov
test
repnz
popa
xor
int3
jecxz
je
icebp
fmul
mov
xchg
push
ret
in
mov
icebp
lcall
test
mov
incb
pop
mov
inc
dec
stos
stos
mov
inc
xlat
ja
adc
inc
add
mov
mov
cmp
insb
push
pop
ret
orl
jo
push
int
cld
xlat
add
dec
cmpsb
aad
xchg
mov
adc
push
xchg
jmp
xchg
or
mov
or
and
test
in
fisttpl
outsl
xor
xchg
or
dec
mov
pop
fnstenv
sub
out
nop
adc
int3
push
jge
sbb
or
fstpl
jnp
add
push
jge
pop
pop
cli
mov
outsl
fstl
mov
push
add
jno
sti
je
imul
add
ret
hlt
ret
dec
repz
inc
sub
das
pop
mov
pusha
xor
scas
call
mov
cmp
sbb
or
push
pop
adc
cs
jne
push
int3
roll
in
in
adc
xchg
jbe
loopne
push
or
mov
test
xor
subb
pop
cli
jbe
mov
xchg
sahf
cli
dec
icebp
add
rcr
cltd
pop
aam
les
add
arpl
and
inc
aad
or
stos
dec
cmp
fistpll
ljmp
xchg
in
stos
test
jno
lods
ds
je
xor
sub
mov
pop
adc
fildll
jmp
lret
cmpsb
in
dec
scas
ror
adc
cmp
push
inc
icebp
adc
ret
hlt
mov
out
mov
test
push
mov
cmc
fs
jo
scas
pushl
les
repz
xchg
lods
or
jg
dec
xchg
mov
jmp
jb
cmp
sbbl
push
push
xchg
xor
push
call
jecxz
rcrl
and
or
fdivrp
mov
push
mov
in
push
or
fwait
in
das
lds
arpl
mov
bound
xor
aaa
mov
cmp
xor
aam
insb
ficoml
rorl
repnz
xchg
mov
cli
dec
xlat
out
iret
stos
xchg
call
fildll
mov
pop
pop
xor
push
push
jmp
cmp
adc
mov
adc
ljmp
mov
out
test
mov
pusha
push
jl
mov
cmpb
or
inc
dec
push
pop
orl
pop
sub
mov
movsl
movsl
sub
outsl
pop
jns
xor
cmp
xor
int
std
repz
or
mov
dec
pop
arpl
and
dec
jle
push
push
fbld
rcrl
adc
aaa
inc
stos
clc
mov
cld
jb
shll
les
cmp
sbb
jae
mov
arpl
mov
mov
xlat
cmc
dec
ljmp
out
sahf
in
jbe
sub
inc
leave
push
mov
imul
adc
call
xchg
xchg
pop
push
xchg
sub
fcmovb
push
pushf
cld
aad
wrmsr
push
cmp
pop
xor
and
in
jb
pop
pop
cmp
push
test
divb
mov
call
or
add
in
cmp
movsb
push
or
pop
imul
pop
xor
mov
bound
cmp
push
lret
jmp
int
inc
xchg
lock
dec
xor
xchg
hlt
mov
lds
js
mov
dec
movsl
xchg
jbe
mov
inc
jp
push
pop
adc
iret
mov
pop
subb
repnz
das
add
mov
jae
mov
push
shrl
sub
test
sahf
out
fbld
das
xor
cld
stos
hlt
test
sub
mov
pop
jne
cmp
jecxz
jnp
push
movsl
dec
adc
jbe
jnp
cmp
adc
arpl
adc
jne
jle
push
xorps
popa
mov
jno
mov
nop
insl
mov
or
clc
orb
stos
int
pop
adc
and
cmp
jno
clc
mov
lcall
push
xor
sub
inc
add
sbb
mov
dec
loop
lds
sbb
fdivs
mov
cmp
mov
mov
adc
rcr
add
nop
push
shlb
push
adc
add
adc
mov
mov
xchg
mov
ss
jns
outsl
sbb
mov
dec
insb
mov
decb
faddp
push
pop
imul
mov
aaa
aad
xchg
inc
pop
pop
lcall
popa
mov
ret
xor
call
xor
test
xchg
jg
xor
into
ljmp
cmp
lcall
movsl
sub
fisubl
push
push
rorl
mov
ljmp
hlt
mov
jg
and
imul
inc
out
xchg
mov
jo
inc
xchg
push
push
imull
sub
ss
jl
mov
subb
pop
iret
push
ss
pop
dec
add
repz
cmp
adc
andl
jmp
xchg
mov
mov
push
pop
xor
pop
repz
jmp
test
jns
and
mov
and
cli
std
mov
xchg
cld
push
xchg
pop
clc
mov
clc
in
push
push
std
xchg
out
or
jae
cltd
xchg
je
scas
repnz
dec
lret
out
bound
pop
call
and
movsb
dec
pop
lds
ljmp
or
xchg
xor
aaa
insb
fisubrl
push
aad
cmpsb
mov
shll
cmp
stos
negl
mov
enter
dec
pop
pop
xchg
mov
mov
dec
or
notb
push
cltd
add
pop
mov
cmpb
dec
mov
mov
out
push
ret
inc
lea
int
cmc
inc
jp
dec
sbb
call
jp
mov
into
jns
inc
scas
nop
mul
popf
xor
lods
roll
jmp
notl
add
sub
jge
je
inc
cmpsl
fs
push
pop
pop
or
xchg
ljmp
dec
cmp
xor
pop
daa
mov
andb
xchg
sub
mov
cmp
xchg
das
cmpb
jp
clc
push
loope
jae
or
stos
fbstp
xor
loope
movsb
sbb
sbb
jbe
sbb
xor
stos
out
ret
out
and
dec
sbb
xor
fmull
fidivrs
adc
daa
fdivr
dec
sub
movsb
rclb
loopne
fistpl
sbb
inc
jnp
mov
popa
outsl
or
push
clc
dec
arpl
cmp
imul
mov
pop
out
lahf
and
pop
arpl
nop
mov
pop
test
cmc
int3
stos
sbb
aad
in
xor
rclb
and
dec
push
inc
xor
loop
mov
sub
out
inc
into
fstpt
int
dec
adc
mov
dec
pop
addr16
push
mov
cmp
subb
mov
push
mov
call
cmc
movsl
shl
pop
pop
cmp
icebp
idivl
push
testl
cmp
push
push
imul
pushf
lock
loope
jne
imul
add
mov
cltd
pop
insl
mov
pop
fists
dec
icebp
or
sbb
mov
testb
lret
jnp
cs
std
mov
loop
lcall
loop
add
and
and
pop
outsl
xchg
cld
orl
loopne
bound
cmc
sbb
shr
lds
out
outsb
mov
push
mov
addl
cmp
xchg
add
inc
lods
xor
and
popf
dec
jnp
outsl
push
in
adc
xor
mov
mov
ja
icebp
stos
aas
das
ss
xor
jge
scas
push
dec
cmp
jno
mov
cmp
aaa
sub
push
mov
add
inc
outsl
cmp
sub
adc
add
push
clc
dec
jmp
leave
inc
icebp
mov
xchg
xchg
pushf
lock
dec
xor
dec
mov
shl
push
xchg
repz
stos
pop
dec
jl
or
adc
mov
add
mov
test
dec
sub
or
or
lods
adc
mov
inc
adc
sti
repz
stc
cwtl
stos
sub
pop
push
nop
adc
inc
pop
sbb
out
jb
popf
xor
jg
lret
lock
dec
or
jb
sar
iret
ret
rorb
sbb
sbb
mov
adc
ret
or
das
sti
das
jge
pop
cmp
xchg
fiaddl
data16
cmpb
dec
stos
test
loopne
sbb
iret
adc
jp
fdivr
xchg
repz
cmp
push
inc
enter
scas
mov
mov
inc
rolb
sahf
mov
xor
mov
inc
inc
shrl
fdivrl
cwtl
mov
or
cwtl
lret
mov
out
ss
mov
iret
push
sbb
inc
pop
mov
xor
mov
push
leave
inc
aas
pop
scas
mov
sub
orl
push
mov
pushf
repnz
rcll
dec
push
sbb
sbb
aad
add
inc
test
jns
mov
lds
mov
and
sub
movsb
pop
enter
jbe
mov
fstpt
lods
popa
jp
mov
inc
mov
loopne
lahf
clc
ja
xchg
add
sbb
xor
aas
xchg
push
mov
aas
and
mov
mov
sub
push
std
inc
mov
je
stos
jae
mov
add
jno
push
pop
dec
adc
lods
loop
iret
repnz
jbe
xor
dec
jno
iret
dec
call
int
into
test
or
out
subb
mov
cmc
sub
repz
call
mov
stc
stc
out
clc
and
fisubl
js
shrl
cmp
test
adc
mov
jne
sbb
out
andb
imul
dec
cltd
mov
int3
add
jo
jnp
lret
mov
xor
adc
cmc
sbb
pushf
jb
bound
daa
negb
mov
inc
xchg
xor
jo
bound
sub
sahf
inc
insl
mov
and
pop
std
jge
cltd
mov
sbb
test
jg
push
mov
push
jns
shlb
pop
push
daa
jecxz
cmc
jne
jp
adc
pop
out
mov
adc
adc
mov
push
inc
mov
sub
xchg
popf
cmp
xchg
push
xor
add
loopne
or
xchg
adc
shll
and
xor
mov
xchg
push
mov
sbb
daa
lods
push
in
sti
mov
jmp
lcall
fmull
movsl
or
decb
push
imul
push
or
aaa
icebp
arpl
mov
pop
test
int3
cld
loope
js
ds
test
mov
sbb
jg
insb
js
push
es
cmp
xchg
iret
mov
scas
pop
xchg
and
pop
cmp
ja
mov
jo
mov
out
in
adc
fs
dec
xor
hlt
arpl
jge
ret
mov
sbb
fstpl
scas
mov
push
add
cwtl
je
cs
jb
dec
inc
jns
sbb
xchg
fsubrs
mov
inc
out
jp
inc
xor
dec
inc
loop
mov
mov
outsb
or
mov
lret
iret
insl
loop
aaa
out
jmp
ficoms
mov
sub
pop
lock
rcrl
jecxz
in
push
stos
sti
xor
sub
sbb
pop
lods
xchg
and
pop
arpl
fsts
pushf
bound
stos
and
or
jg
pop
cmp
pop
in
pop
pop
hlt
sub
lock
in
push
or
push
xor
aad
xor
and
inc
mov
xchg
mov
inc
mov
sub
xlat
lret
aas
push
ret
jne
dec
es
pop
fidivl
pop
and
daa
mov
in
xchg
pop
js
cmpsb
ja
out
ljmp
sti
jp
jns
enter
insb
push
sbb
mov
enter
imul
jbe
dec
div
in
push
in
add
add
bound
mov
rcrb
call
pushf
pop
in
rol
xchg
mov
test
stos
dec
push
dec
inc
mov
gs
mov
and
subl
jp
in
jle
sub
stos
sub
pusha
mov
rcl
fs
leave
rolb
rcr
pushf
pop
xor
repnz
inc
das
mov
data16
aam
popa
jne
imul
scas
cmp
push
and
cmp
push
cmp
in
push
test
cs
mov
sub
pop
lea
dec
xchg
or
cltd
add
pop
nop
negb
pop
dec
pop
gs
jle
ret
std
add
aad
xchg
pushf
fistps
cmp
jne
inc
push
mov
std
dec
mov
popa
sbb
mov
jmp
test
pop
inc
lahf
xlat
daa
mov
dec
pop
arpl
inc
outsb
adc
sbb
cmp
and
inc
sti
mov
pusha
fwait
mov
push
mov
sti
in
xor
mov
mov
test
mov
frstor
mov
pop
sbb
inc
cmp
push
xchg
pop
scas
nop
test
inc
mov
jb
es
mov
inc
rol
inc
xor
xchg
mov
adc
fsubr
nop
stc
xchg
mov
inc
sub
mov
or
fsubrs
loop
leave
cli
mov
mov
adc
or
js
shl
lahf
push
inc
sbb
add
jl
imul
divl
shll
mov
dec
mov
push
aas
aad
xor
inc
sbb
pop
out
sbb
imul
xchg
xor
adc
xchg
nop
out
aad
jbe
push
loop
sbb
mov
shrb
mov
sub
es
mov
ja
mov
test
call
pop
mov
pop
jge
jnp
adc
jb
lea
in
jb
test
and
imul
cltd
fistpl
pusha
inc
mov
push
das
idivb
js
insb
dec
xchg
cmp
shl
sahf
pop
inc
push
aas
mov
lea
cli
xchg
jmp
pop
pop
shlb
xor
sti
push
pop
lock
or
pop
cmp
fwait
mov
xchg
inc
add
cmp
lods
cmp
mov
adc
jp
sbb
popa
int
jb
loope
xor
mov
addl
xorl
cli
dec
pop
pop
ljmp
push
xchg
xorb
das
pop
call
cmp
ljmp
std
out
dec
mov
outsl
or
pop
ljmp
mov
xor
push
jp
dec
inc
int
or
arpl
insl
test
push
and
xor
inc
sbb
inc
mov
sbb
rcll
loope
sbb
add
xor
test
lret
or
add
xchg
or
push
mov
mov
push
cmp
sbb
inc
cmp
jae
fs
call
xorb
popw
adc
xor
or
fists
dec
mov
sbb
fisttps
adc
xchg
scas
dec
iret
out
cli
dec
outsb
aam
cmp
pop
dec
pop
push
cmp
jae
stos
std
adc
adc
or
push
ja
es
push
mull
mov
push
loope
mov
test
mov
pop
jb
sbb
cmc
cmp
into
jecxz
lcall
fnstsw
mov
jge
push
sub
movsb
cld
rolb
rcrl
mov
inc
shr
test
ret
or
ss
mov
push
mov
test
pop
and
cld
mov
or
loopne
pop
jp
das
andb
mov
add
lret
stc
sub
xchg
sbb
mov
adc
in
cmp
lret
sbb
mov
fdivr
cs
mov
out
scas
mov
push
dec
pop
out
into
stc
lds
outsl
push
mov
ss
lret
push
dec
and
stc
adc
pop
loope
push
and
cmp
mov
add
mov
adc
pop
push
cmpsl
test
test
lret
mov
test
stos
test
push
sbb
addr16
push
cmpsl
push
add
addb
push
int
mov
mov
fsubl
mov
shll
enter
inc
ret
mov
test
adc
jg
pop
inc
xor
test
out
or
pop
hlt
inc
xor
push
loop
mov
in
lret
fcomi
sub
imul
inc
cli
lret
fisttps
inc
xor
push
stos
sbb
loop
mov
or
mov
jae
or
jns
sbb
push
xchg
cmp
fstpl
mov
mov
sbb
add
push
push
aas
divb
xlat
mov
pushf
scas
mov
cmp
sbb
les
test
mov
movsl
cmp
ss
mov
push
bound
fstps
mov
stos
jle
mov
or
xor
adc
faddl
jp
aaa
and
pop
sub
push
cs
pop
push
add
lcall
daa
imul
aaa
push
imul
lret
dec
cmp
imul
mov
inc
push
and
cld
pop
jl
outsl
enter
push
mov
mov
cltd
dec
flds
test
cmp
shl
inc
jp
out
inc
cmc
sub
jl
mov
cwtl
scas
adc
or
clc
adcb
idiv
dec
imul
vpcmpd
sahf
cmp
push
shlb
lret
mov
inc
mov
pusha
test
xor
leave
loop
aad
push
rorl
cmpl
push
jbe
ss
and
call
pop
mov
cmp
movsl
and
data16
lods
adc
in
call
mov
rorl
test
mov
pop
jo
ror
xor
sahf
sbb
test
outsl
xor
sub
popf
mov
add
push
stos
es
pop
mov
mov
and
mov
push
aam
aad
ror
repz
ljmp
imul
rorl
jnp
pop
pop
out
cmc
push
or
fstpl
jae
dec
sub
or
lea
and
push
popl
aaa
push
das
jae
mov
test
ljmp
iret
mov
jge
or
and
cmc
test
xorl
add
pop
pop
mov
dec
cli
pop
pop
dec
mov
aad
adc
pop
dec
js
pop
mov
scas
add
or
in
js
pop
jo
push
push
push
cmp
insb
sbb
pop
cmp
mov
xchg
hlt
cld
pop
and
fiadds
jno
mov
pop
mov
jbe
and
icebp
pusha
fildl
pushf
xor
in
arpl
jne
pop
pop
dec
movsl
lea
sub
add
outsl
lcall
adc
pop
inc
cmp
leave
and
mov
clc
add
and
fst
push
dec
btc
or
xlat
unpckhps
or
int
hlt
std
push
cmp
inc
xchg
scas
aad
dec
les
xlat
iret
pop
sbb
cld
mov
out
in
push
and
or
aaa
xchg
lock
lcall
cs
push
sbb
pop
mov
jle
bound
mov
movl
sahf
enter
mov
fisubrl
xchg
adc
and
mov
aas
sub
cltd
mov
in
mov
outsb
jg
xchg
xchg
mov
or
mov
xchg
loope
je
lods
add
sbb
mov
dec
roll
xchg
shlb
bound
nop
aad
lds
push
or
push
aam
ss
cltd
add
or
pop
mov
sbb
out
dec
shll
or
call
or
jnp
push
popf
mov
cmp
pop
inc
pop
cmpsb
or
and
ds
loop
out
mull
out
push
mov
mov
lds
jo
dec
cltd
fisttps
mov
lret
std
push
lods
push
push
mov
lahf
push
add
nopl
rorl
xor
andl
cmp
sbb
add
push
xchg
clc
lods
jae
dec
bound
loopne
imul
jge
lock
push
out
aas
sbb
cmp
cli
outsl
mov
es
sub
out
and
push
test
rorl
dec
std
fs
and
nop
int3
cmp
mov
adc
dec
or
xlat
test
mov
jb
xor
dec
xor
js
hlt
sarl
push
inc
outsb
or
add
cmc
stos
add
jmp
repnz
dec
mov
lret
addl
popf
fcoms
iret
lds
lods
ret
in
xchg
mov
bound
xchg
aad
inc
cmp
cmp
test
add
mov
fmuls
fmull
pushf
jns
dec
push
bound
dec
mov
push
and
imul
repnz
clc
cmp
push
dec
adc
bound
and
jle
dec
inc
daa
hlt
sbb
adc
push
scas
mov
scas
push
jp
jl
inc
lahf
push
mov
cmp
sbb
push
mov
int
ljmp
jne
inc
insl
loopne
cmc
int
jns
xchg
push
test
inc
xchg
dec
scas
das
jmp
pop
out
int
or
xchg
and
ja
mov
arpl
in
mov
cs
dec
cwtl
push
pop
jp
fs
jbe
push
xchg
push
dec
add
jecxz
xor
mov
xchg
sub
xchg
and
cmc
xor
pop
sub
sti
add
lods
aam
sbb
jne
mov
mov
push
std
ds
test
xor
mov
std
pop
xchg
push
cmp
std
adc
adc
jge
pop
mov
push
aad
push
icebp
jl
jns
push
cmp
add
or
gs
in
in
leave
aad
std
jb
popf
push
adc
fnstenv
push
call
daa
adc
scas
pop
out
xchg
movb
push
or
and
shl
and
jmp
fucomip
adc
mov
mov
fsubrs
jp
std
fidivrs
shlb
fs
iret
and
add
faddl
cwtl
mov
getsec
push
bound
push
dec
aad
dec
add
xor
push
dec
loop
mov
ja
test
sbb
lahf
xor
frstor
jmp
xlat
dec
rolb
sbbl
cmp
leave
adc
or
adc
or
rorl
mov
push
cs
mov
imul
or
pop
not
add
loopne
es
divb
mov
cltd
xor
sbb
packssdw
push
push
mov
xor
dec
sarb
inc
push
mov
xor
adc
xchg
xlat
pop
inc
dec
sbb
iret
lahf
mov
addb
test
add
insl
bound
cmc
jnp
cmc
loopne
sti
cmp
cmp
sbb
in
aam
out
or
mov
movsb
xor
mov
ret
out
mov
adc
lods
cmp
jl
push
jb
pop
fisttpll
sbb
call
mov
mov
jae
je
jmp
inc
lahf
hlt
out
jnp
mov
cli
push
cld
mov
movsl
or
mov
arpl
or
push
scas
sbb
add
out
js
pop
lcall
mov
fmul
mov
arpl
nop
cmpl
dec
xchg
fwait
cmp
loop
out
cmpsb
std
jae
or
jo
dec
loope
loope
sbb
mov
fbld
lret
xor
movswl
jge
sub
iret
sub
xchg
add
pop
lock
cltd
mov
sub
test
daa
repz
push
repz
push
jmp
mov
jbe
outsl
pop
adc
mov
icebp
das
pop
xchg
pop
or
jmp
not
out
xor
push
loop
mov
fwait
scas
bound
call
push
sahf
iret
icebp
ret
push
aaa
int
rclb
dec
fnstsw
scas
mov
push
insl
cmp
xor
xor
dec
popa
mov
inc
xchg
popa
in
push
sbb
cmpsb
xchg
aad
dec
sub
fstl
lret
jo
add
jns
xlat
frstor
sahf
xchg
loopne
std
test
lock
not
lret
nop
dec
lea
into
das
inc
cwtl
call
ror
iret
mull
cli
in
xchg
les
cmpsb
xor
into
mov
jp
lret
jno
sbb
adc
jp
xchg
faddp
ret
in
xor
ljmp
out
mov
out
in
jns
popf
pop
push
bound
and
dec
adc
add
mov
nop
add
xchg
adc
xor
inc
mov
shll
sub
out
rep
insl
cmp
inc
xor
xor
dec
mov
mov
es
call
pop
gs
rcrl
stc
js
dec
mov
dec
test
jecxz
adc
test
and
dec
jmp
loopne
add
adc
cli
and
ljmp
in
mov
jp
or
push
lcall
push
jo
inc
andl
inc
inc
aad
scas
ljmp
leave
sub
xchg
pop
pop
out
jp
and
sub
ja
push
jl
push
xor
pop
aas
xchg
ljmp
fildl
mov
xchg
mov
cs
push
and
xchg
ds
add
loope
xor
ja
jb
outsb
and
loop
push
add
in
mov
mov
insl
push
cmp
push
add
shrb
scas
cmpsl
add
cmp
clc
mov
sub
inc
frstor
or
dec
mov
adc
lcall
out
js
adc
lds
call
xchg
arpl
mov
pop
aam
les
out
ss
push
cmp
stos
xor
cmp
cmc
and
cmc
in
lahf
gs
fs
orl
xor
jge
xor
or
out
int3
xchg
mov
repnz
lcall
and
inc
fdivp
pop
outsb
int3
nop
call
fwait
mov
sbb
cmp
cmp
push
xor
mulb
testb
or
cmp
es
push
push
cld
pusha
ds
cmp
out
push
sub
in
mov
repz
mov
cmpsb
jle
adcb
cmpsl
movsb
cmp
pop
insl
in
push
flds
in
loopne
jmp
iret
adc
out
adc
rcll
cld
mov
sub
mov
cs
sbb
mov
ss
sub
sti
cmpsb
xor
leave
xor
das
mov
ret
cli
xchg
cmc
je
mov
pop
xor
xor
mov
sbb
mov
pop
sahf
fs
xchg
sarl
stc
jo
mov
jge
test
dec
fmuls
fisubrl
stc
shl
push
mov
adc
mov
notb
iret
jb
sub
pop
sti
cmp
mov
cmp
fs
mov
add
pop
repz
loopne
and
test
sbb
lret
xor
adc
dec
xchg
rorl
jns
dec
mov
mov
cwtl
mov
fistps
popl
mov
movsb
add
loope
mov
mov
fs
mov
jmp
imul
xchg
mov
push
add
test
xor
test
popf
mov
and
mov
aaa
insl
push
je
sub
repnz
test
lret
lods
pop
push
shr
inc
adc
sti
nop
test
rorl
adc
adc
inc
cmp
jae
into
push
ficomps
sahf
sahf
push
ficomps
rolb
popf
daa
nop
insb
enter
add
testb
bnd
cmp
fdivrs
lret
adc
sti
xlat
arpl
daa
cmp
push
adc
shr
xchg
push
daa
add
adc
loop
jb
fs
shll
sub
pop
adc
stc
icebp
jae
mov
or
std
lret
mov
sbb
mov
in
imul
cwtl
sub
and
test
and
aam
jecxz
comiss
inc
inc
fistpl
daa
inc
fs
xor
and
flds
outsl
test
leave
mov
ret
bound
xchg
bt
adc
push
pop
jnp
jne
daa
aad
add
cmp
mov
jl
test
adc
mov
ss
pushf
lret
les
sub
and
mov
test
negb
sub
adc
int3
push
int3
enter
lock
nop
or
mov
jns
loopne
sub
shrl
inc
sbb
loope
dec
xchg
add
mov
ret
fsubrp
outsl
loopne
cmp
xor
mov
cmpsb
out
call
and
in
leave
andb
jmp
fcomi
sahf
and
ss
int3
jbe
push
lret
inc
lea
sub
pop
sub
pop
jg
mov
sub
lret
mov
mov
into
xchg
and
cli
out
fildll
aaa
nop
in
cmc
cs
stos
sar
test
int3
out
insl
and
mov
shll
jp
repz
lret
cs
or
add
lcall
mov
hlt
jb
jl
sti
insl
cmp
and
cmp
cmpsb
fistpll
mov
jmp
lcall
mov
mov
xor
test
cmpsb
dec
sarb
xchg
pushl
and
stos
pop
mov
jo
cwtl
iret
sub
fs
sbb
divb
lock
ljmp
mov
daa
imul
ss
int
push
movsb
insb
js
add
ret
jp
xor
lods
and
fwait
insl
das
ret
lods
div
jg
xchg
adc
scas
vcvtpd2ps
mov
and
std
in
shll
lahf
or
loope
and
mov
call
jmp
sub
xchg
pop
xorb
and
imul
push
aas
push
mov
mov
xchg
outsl
rolb
or
out
fisubrl
cmc
mov
mov
cld
rolb
icebp
fnstenv
hlt
loop
and
imul
ret
jne
pop
jno
jmp
les
fbld
jmp
xor
hlt
add
mov
mov
les
mov
fnstenv
mov
mov
adc
dec
and
pop
mov
scas
and
mov
sbb
cmp
sub
ljmp
cmp
mov
cmpsl
inc
xchg
mov
mov
incl
lea
jo
push
and
int3
pop
add
cmp
or
cmp
sub
repnz
cmp
jb
loop
xchg
ss
inc
arpl
mov
cmp
sub
popw
dec
lcall
push
mov
pop
ljmp
lods
adc
fisttpll
cwtl
mov
mov
in
push
in
jecxz
jne
xlat
btc
and
in
out
cli
push
push
repz
test
inc
cmp
arpl
add
adc
cmpsb
dec
xchg
adc
ficomps
fdivrl
leave
push
dec
shll
lods
jne
mov
sbb
and
push
push
mov
mov
mov
out
scas
daa
add
test
fsubrl
xchg
and
lods
cmp
repz
jmp
cltd
outsl
jns
sub
sub
dec
push
mov
or
push
dec
cli
xor
xchg
add
mov
int3
shlb
lods
enter
stos
data16
pop
bound
loope
popa
scas
mov
sbb
push
push
mov
jge
xchg
pushf
lret
mov
or
fisubs
push
repz
fdivrl
sahf
adc
lcall
js
push
xor
push
cmp
loopne
and
mov
loope
and
pop
mov
mov
loopne
dec
inc
jnp
jp
mov
cmp
mov
add
pop
loopne
daa
mov
jo
inc
mov
dec
loop
xor
nop
cwtl
fs
xor
push
or
cmpsl
and
pop
int
push
scas
shl
jns
ret
pop
mov
push
jle
fadd
popf
jb
pmulhuw
and
inc
pushf
mov
mov
cmpsb
test
pop
cs
pop
add
es
jecxz
popa
mov
pop
mov
mov
test
fldcw
fimuls
and
inc
cli
sbb
test
jle
or
adc
jne
dec
push
ss
loop
push
pop
insb
or
adc
subb
hlt
xchg
shlb
pusha
xchg
dec
fisubrl
cltd
cmpsl
and
jl
push
mov
jae
mov
dec
rcll
mov
xor
xchg
sub
daa
mov
lds
push
xor
inc
or
mov
cmp
fmuls
imul
rcrl
inc
add
mov
jp
add
cmpsl
fdivs
xor
lock
pop
ret
mov
push
into
adc
xor
adc
mov
adcb
mov
dec
rol
adc
push
jns
lret
mov
popa
sub
int3
jnp
lret
std
test
pusha
jb
aam
outsl
push
in
jne
xchg
mov
icebp
clc
outsb
mov
and
hlt
in
mov
sbb
cld
das
mov
dec
dec
enter
rcrl
cmp
jp
jno
push
mov
add
sub
negb
jg
jb
shr
sub
movsl
pop
cmp
xor
lahf
and
dec
xor
ret
out
dec
inc
ret
hlt
data16
loopne
icebp
and
in
jnp
jb
xchg
xor
cmpsb
inc
jmp
and
subb
cmp
sub
mulb
js
insl
mov
jae
aam
pop
push
ss
stos
or
jmp
stc
sub
dec
rcrb
pop
adc
dec
pop
addr16
leave
sbb
xchg
adc
jmp
inc
xchg
mov
mov
or
xlat
movsb
inc
dec
aam
jae
push
or
and
shl
pop
shll
push
loope
fsub
in
fdivr
andb
mov
jnp
mov
cmpsb
dec
xor
push
adc
pand
dec
into
movsl
arpl
mov
add
pop
mov
sub
call
cmpsl
out
inc
popf
mov
in
inc
bound
outsb
insb
out
adc
xor
scas
mov
imul
xchg
and
mov
pcmpeqb
mov
loopne
push
popa
sub
je
inc
pop
movsl
testl
mov
lods
mov
xor
push
shlb
mov
cwtl
int3
sub
cld
addb
dec
enter
jecxz
popf
cmpsb
push
popa
mov
lret
push
xchg
xchg
imul
testb
roll
dec
sbb
aas
cmp
in
sub
sbb
ret
int
mov
xchg
jmp
outsb
cmp
mov
mov
cli
popa
lods
mov
push
jl
and
imul
js
std
push
pusha
jle
push
mov
sbb
fldenv
jecxz
andl
shrl
pop
fcoms
lods
mov
xchg
mov
into
push
stos
loope
data16
loope
jnp
mov
sarl
add
cmpsl
jbe
pop
xchg
ljmp
mov
or
sbb
inc
add
test
xchg
cmp
jge
or
pop
int
out
jge
rorl
in
adc
daa
and
jnp
shll
into
arpl
sbb
push
nop
add
sbb
lea
icebp
inc
sbb
sti
lock
adc
fidivrs
int
pop
xchg
dec
in
sub
scas
fnstsw
scas
icebp
insl
ret
add
lahf
cmp
push
movsb
jo
movsb
loope
jns
jns
fadd
xor
je
mov
xchg
adc
mov
mov
pop
outsb
aas
adc
popa
into
xchg
divps
es
push
pop
sbbb
orb
out
cmp
mov
enter
jbe
stos
cmpsl
and
sbbl
divl
lods
dec
cli
fnsave
clc
mov
stos
clc
push
push
dec
idivl
imul
xor
ja
mov
jge
mov
xor
stos
shrb
push
sti
fdivl
popa
clc
mov
shlb
adc
jns
cli
sbb
add
cwtl
idiv
lret
adc
add
push
sahf
adc
mov
xchg
or
jge
ds
cmp
jnp
fsubl
inc
push
sbb
lret
cmp
mov
and
adc
pop
jmp
push
fmuls
icebp
xchg
sbb
fs
xor
jae
pop
or
dec
es
stos
outsb
stos
jmp
mov
sti
fucom
stos
movsl
adc
mov
mov
jbe
out
sti
mov
push
shlb
push
sti
inc
lods
add
and
lods
loope
mov
and
push
pop
push
gs
dec
push
dec
pusha
mov
shrb
mov
jno
rcr
xchg
push
movsl
and
jmp
sub
xchg
mov
sbb
or
dec
in
jge
push
int3
outsb
leave
shll
repnz
hlt
pop
adc
push
mov
sub
repnz
js
mov
shl
stc
jmp
lret
fucomi
pop
imul
cmpsl
leave
xchg
in
sub
sbb
adc
mov
jbe
xor
dec
lret
adc
leave
hlt
cmp
cmp
dec
sub
cmp
js
imul
cmp
js
mov
or
in
mov
arpl
pop
divb
jae
fimull
jb
jp
ljmp
mov
sub
add
sbb
xchg
test
mov
insb
mov
xchg
ss
movsb
jl
or
cmp
sar
fdivrs
je
imul
jo
inc
inc
out
lcall
mov
mov
mov
ja
in
mov
je
dec
mov
or
push
xchg
inc
mov
in
hlt
mov
add
push
jle
adc
push
repnz
mov
lcall
fisttps
fs
add
add
xchg
int
out
ljmp
addr16
leave
xor
push
mov
adc
ss
cltd
push
cltd
fucomi
out
inc
adc
jb
fsubl
out
pop
ljmp
and
mov
popf
ret
aam
retw
xor
mov
jno
sbb
fidivrl
mov
loopne
fsubs
sbb
icebp
das
fmul
mov
shlb
cs
cli
cs
lods
mov
fwait
inc
loope
add
jb
outsb
aas
es
lods
popl
mov
mov
loope
movsl
adc
pop
andl
cmpsl
sbbl
out
lea
jg
cwtl
xor
xchg
and
mov
fcomi
cmp
std
push
mov
push
jnp
jns
sbb
mov
pop
xchg
rol
mov
jns
adc
cmp
fisubs
mov
dec
pushf
jne
icebp
pop
sbb
stc
xor
fildll
cwtl
dec
daa
addr16
jno
test
dec
outsb
fisubl
and
out
jne
mov
test
add
jmp
pushf
add
push
ds
lea
aaa
inc
pop
inc
xor
or
cmp
scas
mov
or
shlb
xadd
mov
or
call
xor
cmc
push
popf
sbb
bound
dec
out
rcl
or
pusha
sub
xor
inc
push
lds
leave
rcrb
and
je
divl
mov
hlt
js
std
mov
dec
test
add
imul
stos
jb
outsl
adc
adc
push
leave
push
inc
loope
mov
enter
call
push
or
fimull
dec
cmp
mov
lret
int3
lcall
fsubl
cltd
icebp
cli
xor
cmpsb
add
loope
inc
and
dec
push
leave
mov
adc
jl
jp
or
push
ljmp
dec
iret
in
pop
std
inc
and
std
movsb
push
popf
xor
sbb
pop
mov
outsl
mov
nopl
mov
pop
cli
out
jne
clc
pop
test
pusha
daa
add
cmp
popf
je
push
nop
dec
pop
or
fmul
mov
pop
fs
push
jp
mov
xchg
and
mov
bound
ds
movsb
daa
ret
and
lock
daa
sub
stos
fprem
js
mov
mov
xor
jge
sarb
sub
push
inc
iret
into
arpl
inc
xchg
shlb
mov
pop
in
scas
jbe
movsl
jne
sti
cmp
imul
lret
push
ret
push
inc
jnp
cmp
xor
cmp
and
mov
mov
pushf
xchg
jle
loope
fsts
fimull
add
aas
neg
pop
lcall
addr16
imul
mov
andl
ljmp
mov
xor
push
push
ret
xadd
cmc
inc
stos
xor
push
test
lret
dec
dec
dec
pop
pop
xchg
inc
fwait
shl
xor
lahf
outsb
lret
push
cmpl
sarb
neg
stc
ljmp
test
stos
test
les
arpl
shrb
lahf
push
enter
inc
in
loopne
aaa
decb
cmp
lcall
mov
in
insb
ja
in
add
jg
push
cs
xchg
pop
loopne
dec
dec
lods
push
dec
call
push
cmc
aam
int
outsl
pop
mov
add
pop
mov
dec
in
mov
jne
fs
pop
xlat
loope
repnz
ss
push
xchg
stos
jns
jns
adc
lahf
mov
addr16
jae
push
jmp
mov
xchg
jne
pop
and
xchg
stos
xor
daa
cli
inc
lret
xorb
xchg
mov
jbe
add
sahf
xorb
cmc
pusha
jb
iret
fnstenv
adc
push
es
and
pop
sbbb
int
inc
call
addr16
dec
dec
sarl
cli
dec
in
pop
sub
cmpsl
mov
stos
cmp
pushf
mov
inc
cmp
jle
push
xchg
dec
imul
xchg
xor
push
jno
cld
testl
mov
jns
cmp
lret
push
in
dec
lds
cwtl
mov
and
lds
xlat
mov
xor
ljmp
cmpsl
sbb
out
int
sub
inc
fdivr
enter
jae
add
dec
xchg
pop
xor
mov
xor
aam
test
pop
ds
dec
mov
aaa
pop
jnp
outsl
cmp
data16
outsb
int3
aam
lahf
add
mov
mov
lea
in
sub
sub
xchg
pop
iret
pop
scas
add
cmp
fmull
cmp
push
ja
add
scas
cmpl
mov
or
fndisi(8087
push
shl
lods
and
out
pop
mov
out
and
aas
cmpsl
jp
mov
aas
pop
cmpsl
inc
cmp
loope
and
mov
mov
imul
cmp
je
ret
pop
or
cltd
or
push
ret
sbb
lods
test
ficoms
and
adc
push
inc
iret
fldt
adc
ficompl
jno
xchg
mov
std
ja
scas
fs
push
adc
mov
stos
insb
jg
mov
jl
cs
sbb
mov
push
aam
inc
push
into
arpl
mov
and
std
pop
int3
xor
leave
jg
mov
mov
data16
mov
mov
pushf
scas
rorl
inc
adc
push
pop
ret
jne
pop
or
in
cmpsb
inc
dec
jno
data16
ficompl
add
pop
cmc
cwtl
jno
roll
jecxz
sub
add
push
test
fwait
push
dec
in
inc
jmp
push
pop
xor
pusha
lods
or
subl
xor
dec
out
lods
rcrb
xchg
push
dec
sbb
cmpsb
dec
sub
xchg
lods
movntps
sub
fdivrl
or
pop
pop
jle
cmp
leave
and
lds
aad
loopne
dec
xchg
add
sbb
or
adc
xchg
leave
cmp
xchg
cli
push
mov
test
in
xchg
cmpsl
lcall
push
inc
in
dec
jns
dec
jmp
adc
into
not
sbb
jp
iret
pop
or
jo
jecxz
es
aad
outsl
jl
shll
test
sarl
xor
das
cli
pop
sub
jns
addr16
popl
test
pop
xchg
sarb
or
fiaddl
xor
jmp
jo
fldenv
loopne
andb
aad
adc
daa
fcoms
in
fwait
sahf
jns
push
shlb
sub
loop
and
mov
jns
or
cmp
push
pop
mov
cmp
xlat
cmp
popf
decb
pop
ljmp
mov
in
push
xchg
sub
aad
inc
fimull
push
dec
in
stos
push
inc
cmp
inc
test
xor
add
loop
es
adc
gs
jb
insb
sub
mov
hlt
jnp
sub
jp
fadds
incb
rol
cmc
stos
iret
int3
aas
fildll
add
shl
or
dec
cmp
adc
dec
push
cmp
add
and
movsw
sub
jbe
xchg
addb
inc
push
mov
inc
test
dec
addl
pop
fninit
sbb
cmp
jae
xchg
and
jbe
cld
test
adc
xchg
lock
mov
mov
incl
jnp
pop
in
jnp
push
jns
arpl
add
mov
call
push
push
push
inc
les
mov
jle
dec
and
lods
add
or
stc
xchg
nop
cmp
mov
fdivrl
mov
std
sahf
push
aaa
stos
rcrb
fwait
sub
out
stos
dec
popa
xor
xchg
sar
outsb
xchg
mov
mov
cmp
jbe
test
shl
es
mov
or
dec
pushf
pusha
pop
mov
mov
xchg
jg
xchg
dec
out
jnp
jl
adc
push
aam
jne
cmp
push
sti
inc
pusha
out
sub
test
inc
fsubrl
lsl
adcb
sahf
dec
jnp
or
xchg
pop
sub
fistps
into
mov
dec
jge
dec
gs
mov
sbb
jne
mov
mov
fiaddl
add
or
leave
sub
int3
aam
xor
call
mov
icebp
sub
call
aaa
and
scas
sbb
flds
dec
mov
aad
mov
lds
push
add
les
in
jae
std
jmp
nop
mov
pop
lret
push
add
aad
pusha
into
les
bound
sub
push
testb
daa
dec
test
movsl
fiaddl
sbb
movsb
or
dec
lret
ja
in
push
push
adc
and
enter
xchg
add
fnsave
ss
test
or
out
hlt
test
and
jnp
imul
mov
lahf
xor
adc
mov
xlat
pop
sbb
pop
jae
loop
sahf
push
lahf
adc
cmc
fistpl
xchg
jb
ds
push
jno
ss
cmp
fs
jecxz
and
mov
movsl
jae
inc
mov
mov
in
fidivs
cld
xor
in
jo
stos
inc
dec
out
jg
icebp
pop
add
repnz
les
rclb
stos
pop
rcll
data16
gs
xchg
sbb
outsb
into
out
mov
xchg
add
out
setns
fdivrs
jmpw
stc
addl
fisttps
dec
mov
adc
arpl
scas
xbegin
sbb
jnp
insl
lahf
fcmove
sbb
cltd
lods
sub
movsl
xor
xor
ss
subb
stos
sub
pop
cmp
addr16
call
add
sub
jecxz
in
push
push
sahf
jle
fstpt
sub
xor
es
stos
adc
pop
ds
daa
je
xchg
sub
push
add
les
sub
adc
mov
mov
outsb
adc
bnd
int3
cli
xchg
xchg
dec
leave
cmpsl
cs
jl
and
or
test
pop
mov
int3
call
add
cmpb
test
mov
and
or
enter
ja
inc
jns
pusha
dec
mov
clc
ret
sub
aaa
and
rorl
add
mov
cmp
jo
mov
dec
cmc
pavgw
mov
add
dec
aas
sub
mov
test
in
in
xchg
mov
xchg
outsb
dec
fmuls
mov
les
cmp
jmp
mov
rorl
or
outsb
pop
mov
adc
out
loope
insb
pop
mov
adc
ljmp
mov
incb
stc
push
aam
and
mov
jg
adc
mov
in
or
pop
hlt
aas
push
iret
xchg
pop
xchg
sbb
cmc
sahf
jb
cwtl
inc
pop
imul
cmp
inc
and
pop
pushf
xor
adc
add
adc
push
jl
xor
pop
mov
pop
push
and
icebp
lret
sarl
clc
xchg
xchg
loop
mov
lcall
psubsw
pusha
sub
mov
jge
leave
adc
ret
mov
imul
mov
fisubs
xchg
jge
dec
cmp
xchg
out
jge
lahf
jle
test
leave
jbe
inc
xor
sarl
icebp
adc
test
insb
fwait
in
movb
push
mov
jmp
test
dec
sub
add
bound
loop
sub
data16
ja
sbb
mov
jecxz
mov
leave
daa
sub
loop
ret
shlb
add
xchg
aas
mov
push
mov
dec
pop
movsb
insb
lods
in
pop
rcr
lds
mov
stos
fdivl
das
pop
jmp
jmp
jb
int3
inc
andl
pop
in
pop
rcll
cltd
bound
inc
push
xchg
mov
js
stos
in
mov
data16
xchg
pop
out
add
dec
cmp
testl
and
jns
loopne
lret
push
cli
pop
test
push
sbb
orb
mov
adc
cmp
lods
test
and
cmp
in
and
and
mov
mov
scas
outsl
je
test
push
shlb
ret
rcll
ds
push
dec
jnp
pop
flds
or
jp
pusha
xchg
scas
addb
jae
xchg
push
ret
jno
and
lahf
mov
fisubrl
int3
lret
inc
cwtl
or
inc
jne
mov
cmp
shll
leave
daa
test
mov
xlat
cwtl
gs
sbb
scas
or
xor
ljmp
inc
lods
jp
sbb
pop
jb
inc
push
sbb
add
addl
mov
or
bound
das
jbe
add
dec
mov
pop
lret
xorl
shlb
push
adc
sarl
and
gs
push
ret
lock
xor
and
stc
xchg
inc
xlat
jnp
xchg
out
sub
arpl
test
gs
xchg
or
xchg
ret
dec
mov
fwait
dec
jg
cmp
cmpsb
dec
dec
adc
pop
int3
pop
pop
out
testl
push
jne
es
jl
xchg
adc
cmpsl
cmp
adc
pop
push
pop
stc
xchg
dec
inc
aaa
mov
jnp
nop
add
filds
ss
rclb
repz
ret
or
in
aam
jmp
dec
bound
sti
clc
inc
xor
dec
adc
pushf
pop
mov
mov
pop
ljmp
ljmp
imull
mov
daa
gs
mov
mov
mov
in
jp
mov
mov
dec
sbb
insl
arpl
pop
inc
push
cs
and
lock
push
or
js
sbb
aas
push
jo
jl
fdivrl
push
daa
lock
fwait
call
insb
xchg
cmp
shl
lods
xchg
fwait
movsb
jl
insb
push
aam
adc
cmpsb
mov
sbb
adc
andl
jno
mov
sub
pop
add
push
xchg
push
pop
out
pop
dec
gs
push
xchg
jo,pn
sub
cli
hlt
out
sahf
or
mov
and
cmp
xchg
adc
fsts
scas
mov
cwtl
ret
out
pop
sub
icebp
outsl
aas
cmp
je
xchg
mov
out
cmp
add
vcvtdq2ps
movsb
fmull
sti
mov
ja
scas
inc
sub
sub
loopne
mov
jl
test
sbb
hlt
sub
cmpsl
mov
push
xor
inc
punpcklwd
inc
mov
sub
call
pop
lahf
pop
pop
stos
and
rcll
sub
dec
fs
and
addr16
icebp
movsb
scas
in
add
andb
out
int3
lret
adcl
cmp
sub
jge
hlt
addb
std
xchg
imul
mov
mov
push
cs
loope
and
stos
add
mov
add
bswap
cmpl
and
outsb
lret
fistl
push
add
xchg
scas
sbb
stc
fldcw
jle
and
fcmovnu
in
xchg
daa
inc
in
imul
outsb
int
mov
movsb
repnz
dec
mov
pop
fcoml
stc
mov
sub
out
inc
adc
xchg
dec
sbb
ljmp
insb
cmp
sub
movsl
fcoml
adc
shll
test
popa
outsl
negl
inc
fucomip
or
fsubrp
popf
sub
sbb
lods
inc
mov
push
iret
mov
mov
or
and
mov
cmp
test
stc
dec
cltd
ficoml
loop
jp
jne
push
sub
inc
jnp
cwtd
push
scas
clc
lods
lock
xchg
jbe
cwtl
sub
or
ja
and
or
repnz
push
rcrl
sbb
fdivrs
cmp
sahf
out
mov
dec
aaa
faddp
adc
stos
adc
aas
pop
ja
and
mov
std
ss
clc
out
fwait
cmp
cltd
out
and
cld
dec
lods
sub
dec
jbe
pop
lods
xchg
imul
pop
ja
ljmp
xor
cmp
repz
xor
orl
lcall
outsl
push
lods
push
aas
popa
mov
scas
mov
repz
pusha
jae
icebp
in
xorl
fdivrs
fidivrs
xchg
push
dec
mov
in
outsl
mov
loop
push
int
mov
mov
ja
and
inc
les
ficoms
add
hlt
add
or
sahf
out
insb
cmpsl
lods
popf
stc
lcall
rep
add
sbb
push
nop
imulb
jae
fcoml
and
lahf
jnp
or
ffree
push
mov
in
clc
fldcw
lret
push
ja
push
repz
sub
push
rorl
movsb
pushf
mov
into
nop
add
test
scas
dec
push
or
out
fwait
test
add
ds
rorb
shlb
cmp
jg
pop
sub
mov
push
je
and
iret
addr16
fisubrs
dec
push
jecxz
cmc
cmc
inc
inc
ret
test
inc
ret
aad
aad
cwtl
clc
movsl
call
data16
pop
xor
xchg
sbb
aas
dec
sarb
push
in
scas
lds
repz
and
faddp
sbb
add
imul
rclb
insl
xchg
adc
mov
je
cmp
stos
sbb
xchg
sbb
scas
fs
sbb
rcll
mov
not
dec
test
int
ret
repz
sbb
mov
ljmp
inc
ret
aam
scas
fdivrl
push
add
cli
or
or
sahf
inc
aam
mov
xor
and
pop
mov
ret
ja
dec
out
out
pop
mov
xorl
dec
mov
dec
movsl
or
test
sbb
call
iret
sbb
out
cmpsl
lcall
jns
pop
add
dec
fcoml
inc
mov
inc
test
xchg
clc
inc
subl
xor
cmp
outsb
mov
xchg
adc
sub
mov
scas
neg
shll
bound
loop
mov
scas
jmp
je
icebp
push
jb
jbe
mov
fmuls
xor
rcl
rorb
cs
std
sbb
adc
sar
aas
xchg
cs
gs
movsb
outsb
pop
xorl
hlt
lods
repnz
mov
nop
cmp
fnsave
or
lret
mov
lds
ljmp
dec
outsl
adc
mov
hlt
cltd
jne
pop
dec
xchg
shll
test
cld
loope
xchg
mov
stos
js
jo
and
fnstcw
mov
sbb
repnz
jae
lods
push
inc
fisubl
aad
pushf
push
aas
add
xchg
lods
int3
adc
fs
ja
mov
pop
push
lods
fwait
sub
inc
ds
push
xor
ljmp
test
dec
out
add
dec
pop
mov
cmpsb
jmp
jns
adc
lret
inc
xchg
mov
cmp
shr
pop
mov
lods
jns
ss
scas
mov
ret
adc
push
adc
dec
notl
push
adc
jne
in
div
call
sti
in
mov
roll
fldl
ds
fs
mov
mov
imul
shll
xchg
sbb
lret
mov
add
push
or
dec
jecxz
pop
jg
bound
xchg
test
in
cmp
dec
mov
mov
sbb
repnz
lds
mov
cmpsb
ret
dec
push
jnp
rclb
out
cltd
fidivl
jb
push
test
mov
data16
cmp
insl
pushf
test
and
xor
add
es
xor
faddl
or
or
cli
mov
mov
sbb
das
in
cs
in
call
adc
jg
fstpl
outsb
fcoms
fstpt
stc
js
sbb
imul
dec
xor
shlb
aaa
out
mov
or
test
es
inc
les
aas
mulb
dec
inc
inc
insb
lcall
in
cmp
fstpt
sub
dec
ja
dec
jmp
mov
inc
and
cmp
pop
insl
xor
addr16
push
lock
add
testl
push
xor
inc
loope
mov
xchg
out
mov
pop
std
in
and
ret
cltd
sub
roll
das
lds
push
mov
and
push
cltd
stos
fidivs
lret
imul
dec
sub
repz
lret
jnp
and
nop
xorl
loope
push
loope
mov
xchg
pushf
movsb
mov
out
xchg
pusha
stos
and
sub
inc
cmp
add
js
inc
sahf
aas
mov
int3
mov
adc
cld
mov
dec
leave
fs
ret
cmp
push
inc
lret
and
enter
adc
push
movsl
shll
inc
pop
dec
lea
inc
dec
dec
jns
call
filds
nop
inc
insl
loop
gs
out
cwtl
sbb
mov
outsl
cli
xor
or
sub
sub
dec
cmpsl
in
std
lock
adc
ljmp
push
fsubrs
cld
bound
fwait
or
shrb
lds
out
dec
jl
shld
xchg
dec
sahf
or
cld
inc
std
push
adc
ja
adc
jo
fs
jmp
pop
std
stc
ret
ss
int3
dec
hlt
push
dec
push
xor
xor
call
loop
jo
cmp
ljmp
adc
sub
std
stos
mov
incb
mov
dec
mov
das
jg
push
add
lds
popa
out
sbb
pop
mov
pop
mov
xchg
mov
imul
stos
jg
cmpsl
adc
sbb
jge
mov
xchg
dec
test
or
mov
bound
cmp
jecxz
push
dec
cli
mov
repnz
lds
and
subb
inc
cltd
push
push
mov
jae
daa
lret
roll
sbb
bound
xchg
sti
mov
dec
jbe
cmp
xchg
adc
mov
inc
jp
inc
icebp
inc
in
scas
cmp
jge
add
js
jae
jb
dec
in
out
jno
stos
inc
inc
leave
nop
xlat
jo
mov
daa
mov
pop
or
xchg
imul
pop
lret
xor
xchg
jno
mov
pusha
cmpsl
push
cmp
stos
out
cltd
jns
xlat
or
push
out
and
push
repz
adc
rolb
sarl
int3
lea
mov
mov
push
dec
or
fimuls
in
push
mov
rorb
pop
cs
call
inc
jmp
jne
sub
xchg
sbb
mov
push
popa
mov
mov
push
add
fistps
rol
aas
push
adc
roll
lds
repz
insl
jl
jno
stc
mov
fs
test
dec
and
cmp
xchg
pop
push
xor
mov
jb
daa
mov
stc
std
inc
repz
push
dec
jns
inc
fs
jbe
out
xchg
ret
add
push
subb
dec
ljmp
in
out
mov
stc
mov
in
mov
pusha
lret
jno
push
popf
mov
pushf
aas
lret
xor
xchg
aaa
movsl
cmp
xor
dec
mov
jo
or
loope
je
popa
js
pop
sbb
lret
or
arpl
movsl
inc
add
pop
push
push
xlat
push
add
cmp
repnz
ja
es
or
ret
outsb
test
mov
push
adc
aas
shll
and
and
jae
enter
inc
fnstenv
adc
ljmp
or
in
shlb
jnp
fsubr
lret
dec
cmp
pop
pop
push
xchg
push
rcrb
data16
mov
mov
fs
or
andl
jnp
mov
cmp
imul
popa
xor
mov
lret
cmpsb
mov
xor
je
test
fcomp
mov
fs
jge
hlt
cs
stos
cmc
or
test
xchg
ret
in
bound
lods
dec
or
push
aad
dec
cmp
hlt
jge
lock
pusha
mov
sub
lret
cmp
sahf
push
pop
mov
push
jb
pop
dec
sub
fimuls
movsb
test
fldt
insb
sbb
push
test
push
mov
adc
mov
aam
inc
sub
and
push
out
mov
les
jo
daa
in
lcall
add
bound
add
jle
xor
sub
xorb
and
pop
outsb
cmc
push
ret
gs
pop
mov
pushf
pop
js
xchg
xchg
cwtl
icebp
push
dec
xchg
push
movsl
loop
mov
or
dec
popa
js
jge
aam
cmp
aaa
out
push
int3
push
fadd
int3
fsub
scas
adc
jb
mov
xor
enter
clc
mov
jmp
arpl
jo
or
or
movsb
jle
xor
lds
mov
shll
pop
adc
and
mov
mov
clc
popa
add
dec
add
ficoml
and
add
mov
push
out
mov
mov
movb
js
and
jge
insl
fsub
cltd
sti
cmp
sub
cmp
adc
scas
cli
gs
or
sub
lock
rolb
push
scas
sub
jo
inc
sbb
js
out
fwait
nop
jbe
repz
in
and
scas
shlb
push
mov
or
dec
aas
and
icebp
test
das
inc
fstps
popa
inc
jbe
push
cs
xorl
mov
xchg
xchg
addr16
adc
arpl
int
stos
out
xor
test
push
pop
mov
xor
ja
pushf
mov
inc
js
fsub
jmp
fnstsw
shl
mov
lods
xlat
add
dec
mov
xor
pop
xchg
dec
cmp
mov
sub
out
fsubr
pop
xchg
xchg
push
xor
xchg
fmull
adc
pop
mov
mov
dec
or
cmpsb
adc
int3
xor
dec
loope
pop
push
pop
iret
gs
ljmp
adc
jae
out
gs
or
sub
xor
lods
aas
mov
pop
push
xchg
sbb
clc
in
cmpl
cmp
add
jb
hlt
dec
repnz
pusha
dec
dec
jae
push
cli
andb
mov
les
lds
outsl
mov
lods
mov
push
mov
sahf
sub
ljmp
aam
ret
dec
xor
or
inc
push
rorl
mov
push
lret
fldt
jae
subb
sbb
out
and
fs
in
or
ret
cmp
xor
inc
sub
jb,pt
bound
inc
ljmp
pop
xor
cs
lods
sub
movsb
loopne
sub
adc
mov
dec
pushf
mov
sahf
std
xlat
fnstsw
arpl
aaa
addr16
xor
dec
das
xchg
iret
xchg
xchg
push
scas
enter
xlat
mov
dec
out
icebp
ffree
iret
sub
cmp
xchg
mov
in
and
frstor
lods
cmpsb
jmp
mov
mov
test
mov
popa
cmp
int3
repnz
in
dec
decb
imul
add
in
ss
cltd
ficompl
mov
fwait
andb
fildl
mov
ljmp
mov
push
push
xor
cltd
ss
aad
pop
daa
rcl
inc
popf
repz
sbb
iret
jg
cmp
mov
iret
add
sbb
cmp
inc
mov
aad
stos
sbb
add
add
add
fadds
and
das
pop
clc
stos
lock
popf
out
fwait
aad
inc
sar
or
jp
xor
dec
les
adcl
push
outsb
sahf
out
lahf
or
lds
jmp
ds
lahf
shlb
sahf
mov
push
adc
cmp
sahf
and
adc
inc
cmc
pop
fnsave
insb
daa
pop
sub
jb
daa
pop
inc
mov
lahf
lret
adc
int3
cld
jp
call
sbb
jo
scas
test
repz
andb
xchg
lock
icebp
in
popl
or
movsl
les
addr16
sbb
dec
xlat
jb
cmp
pop
xor
sub
cmp
cli
dec
mov
in
and
hlt
lods
cmc
cmp
mov
das
mov
je
jno
in
popa
dec
push
notb
repnz
fwait
inc
sub
outsb
dec
dec
cs
push
stos
negb
clc
push
repnz
std
push
xor
sub
mov
xchg
lcall
cld
jb
mov
push
sub
mov
int3
and
icebp
xor
jp
adc
mov
mov
sub
push
sbb
pop
test
xor
xchg
clc
stc
lods
inc
inc
jge
cwtl
dec
insb
bound
push
imul
xchg
push
loopne
or
inc
jg
out
xor
push
inc
sub
sub
enter
adc
jno
mov
mov
test
mov
leave
mov
sub
ffreep
daa
push
or
jae
call
popf
add
dec
or
pop
repnz
jno
sbb
stos
push
sbb
gs
call
xchg
and
out
inc
dec
adc
iret
add
out
add
mov
cltd
not
out
mov
test
loop
into
sub
dec
pop
negl
lret
dec
mov
daa
hlt
cld
sub
repnz
js
mov
idivl
mov
lods
cmp
shl
add
push
fstl
daa
jbe
pop
call
ret
cmp
movsl
inc
mov
xor
sbb
bound
aam
mov
sub
adc
adc
in
pop
adc
ds
jmp
in
pop
sub
rcl
insb
mov
and
push
nop
mov
ja
or
add
pop
imul
in
ret
aam
fwait
aam
addr16
pop
stc
lret
xor
jae
mov
xor
push
rcrl
sub
ret
jnp
push
fdivrs
mov
gs
push
push
lcall
fsubr
ret
hlt
in
js
outsl
popa
jp
adc
std
aaa
iret
in
and
xor
test
call
sub
inc
jmp
mov
insl
pop
and
popf
mov
das
ret
leave
in
dec
lret
test
pop
jbe
popf
jmp
scas
mov
inc
jle
sbb
sub
push
shlb
shll
xor
mov
movsl
pop
iret
mov
adc
jl
push
mov
mov
loope
add
fwait
les
push
ja
xchg
adc
xchg
inc
std
xchg
jl
in
ja
xor
pop
dec
sarl
mov
aam
pusha
pop
sti
aam
icebp
xor
push
push
outsl
rol
add
sbb
sarl
push
fnstenv
call
sub
push
add
pop
sarl
ja
xor
insl
jl
dec
mov
fidivl
nop
mov
lret
out
rcrb
cmp
lahf
fiaddl
mov
ss
int3
decl
cmp
je
into
stc
in
int3
icebp
fs
push
hlt
fidivs
sahf
std
imul
push
mov
test
pushf
pop
xchg
mov
jae
imul
gs
daa
and
mov
insb
inc
insb
fildll
mov
pop
inc
xorb
xchg
int3
push
cmp
clc
pop
lret
stos
jb
cmp
or
movsl
jle
dec
mov
mov
pop
jg
dec
loop
ret
xchg
lods
xchg
lods
es
ret
mov
fsub
lock
inc
or
sahf
push
jbe
mov
push
cmp
sbb
pushf
lock
push
inc
lea
cmc
mov
bound
push
rcl
test
dec
jge
lret
aam
pop
in
or
std
sahf
sbb
pop
sarl
outsb
xchg
push
jnp
jg
push
insl
dec
sbb
insb
lea
xchg
imul
jge
jmp
and
rcrb
rolb
in
inc
jae
scas
adc
cmpsb
ljmp
jo
xchg
xlat
mov
jb
fiaddl
imul
test
inc
cltd
dec
add
cmp
dec
testb
mov
sub
shll
and
cs
push
sbb
dec
jo
jle
add
jle
and
repz
mov
shll
mov
lods
es
or
mov
dec
mov
jne
jg
stos
cmp
add
adc
je
sahf
in
aaa
out
jbe
lret
ret
mov
cmp
outsb
int
mov
add
jp
xchg
ds
sbb
clc
faddl
sbb
xchg
add
ror
sbb
xor
push
pop
inc
jl
push
xlat
xchg
pop
insb
mov
cmpb
or
or
pop
pop
xchg
push
rcl
sub
mov
xor
out
in
mov
sar
iret
sbb
xchg
jne
arpl
rcrb
mov
into
mov
jnp
or
dec
rolb
ficomps
add
or
inc
pop
sbb
sub
out
xor
dec
and
mov
xor
imul
inc
push
cwtl
add
cmp
xchg
bound
bnd
lea
mov
jl
popa
into
push
jnp
lods
fwait
dec
repnz
sbb
xchg
into
mov
jl
outsl
xor
jg
sahf
fdivs
jge
and
cmp
fsubrl
sbb
sub
stos
out
cs
es
or
cmc
fidivrs
scas
das
xor
sbb
xor
repz
pop
lret
pop
repz
or
add
xchg
out
sbb
cli
dec
cs
data16
aad
dec
pop
sub
pop
subb
cmp
aam
mov
lea
xor
pop
ljmp
popf
stos
lods
xchg
lret
fistpl
push
ljmp
mov
add
faddl
dec
and
stc
xlat
mov
js
aad
sub
pop
sbb
test
push
mov
sarb
add
and
ret
xor
addb
fistl
repnz
mov
sbb
sub
icebp
push
pop
jg
jb
or
pop
arpl
nop
lret
repnz
push
in
mov
cmp
daa
xor
in
dec
push
imul
pop
dec
jo
and
jge
xlat
cs
push
ret
mov
xor
stos
mov
sti
inc
sbb
ss
cltd
push
mov
lods
add
jecxz
jns
sarl
subl
pop
mov
inc
add
pop
out
test
push
int3
xchg
mov
fistl
or
cwtl
push
push
inc
mov
cmc
out
adc
push
clc
fadd
cmpsl
dec
inc
jbe
into
leave
pushf
dec
cmp
in
inc
test
jbe
add
rcr
dec
enter
ror
aad
sti
jne
xor
jb
or
int
aas
mov
pop
fxch
dec
insl
pop
sub
inc
addr16
mov
push
in
das
out
jmp
je
and
call
js
pop
mov
test
sbbl
push
nop
fs
cltd
mov
ljmp
add
cmc
stos
out
push
and
je
cwtl
jg
mov
xorb
xchg
and
mov
stc
fs
mov
scas
fmull
loop
popf
fsts
incb
imull
push
ss
jge
mov
ucomiss
mov
push
test
jne
cwtl
ret
pushf
dec
sub
jg
mov
rolb
loopne
stos
std
rcrb
ss
and
push
cmc
jns
test
or
pop
cltd
test
stc
mov
test
ljmp
popf
inc
pusha
shl
mov
lock
sbb
popa
popf
loope
call
fisttpl
aas
xor
scas
or
addb
push
insl
xor
jns
pop
shl
inc
scas
push
and
mov
test
pop
mov
clc
dec
repnz
pusha
jo
outsb
outsb
clc
jg
sub
scas
repz
sarl
lahf
mov
pop
out
dec
cmp
xchg
cld
sarl
mov
bound
lcall
and
lods
sub
push
ret
xchg
mov
sahf
sub
or
pop
inc
add
lods
cmp
repnz
popa
mov
js
sbb
sub
fwait
adc
shrl
inc
mov
call
mov
int3
pop
dec
cmp
push
outsb
xchg
lods
fisttps
dec
dec
cmp
nop
lcall
push
mov
clc
or
sbb
ss
push
pop
pusha
or
dec
add
sub
out
insl
dec
sbb
movsb
lock
cs
dec
out
jbe
mov
ss
sub
mov
xor
stos
sti
imul
pop
aas
cmpsl
dec
mov
insb
rcll
ljmp
dec
add
xchg
cwtl
and
push
lods
push
ds
push
cmc
or
jle
les
and
dec
adc
lods
mov
mov
mov
xor
cltd
mov
repnz
jecxz
xor
xchg
mov
out
out
jnp
sbb
mov
and
fidivrl
xor
addb
adc
sub
stos
int
in
out
das
xor
jns
cmp
dec
jns
fs
sahf
imul
pushf
xor
mov
ret
mov
out
or
dec
sub
repz
addr16
aaa
jl
and
sbb
mov
jecxz
or
shr
sbb
and
xlat
xchg
or
add
lock
xorb
jmp
test
dec
inc
arpl
cwtl
push
movsb
sub
push
rorb
xchg
shll
jl
aad
sbb
fbld
nop
mov
lds
gs
or
xor
xchg
test
imul
dec
mov
mov
pop
sbb
xor
loope
shll
or
xchg
ds
add
mov
je
rcrb
jl
pop
push
aad
add
push
loope
sub
rcl
das
push
mov
js
sahf
and
adc
and
push
adc
xchg
shr
push
cmc
shll
xchg
sbb
jbe
adc
jb
in
inc
dec
pop
pop
or
and
inc
fnstenv
mov
push
jb
adc
and
cld
mov
mov
je
add
inc
pop
test
adc
cli
mov
pop
popf
cmp
mov
clc
nop
les
fwait
stc
xor
and
cli
lcall
mov
cli
sub
push
leave
or
mov
xchg
mov
or
into
push
sbb
aas
pusha
out
push
scas
scas
mov
inc
popf
mov
out
jp
push
mov
hlt
mov
push
insb
and
pusha
loope
sti
fsubrl
inc
or
insl
in
push
mov
sbb
mov
daa
scas
in
xchg
in
ret
sahf
outsl
test
cltd
add
inc
rorb
std
xor
into
hlt
and
mov
lock
shll
push
mov
lea
push
fcmovbe
sbb
hlt
jl
dec
push
imul
jo
insl
xor
lea
cmp
stos
push
xchg
xchg
loopne
sbb
xchg
or
lret
jmp
movsl
int3
lods
jae
cmp
add
mov
aaa
aaa
mov
ds
adc
inc
gs
hlt
xchg
roll
out
xchg
ljmp
or
in
mov
outsl
sbb
inc
test
xor
xchg
int
pop
adc
mov
dec
pushf
xor
xor
xorl
sub
pop
inc
mov
dec
lds
ret
in
mov
pushf
pop
in
stc
lock
xchg
sbbl
out
sub
jno
stos
in
sti
pop
adc
pop
dec
test
xor
push
scas
ret
fsubr
or
mov
push
test
mov
cmp
repz
out
jno
xchg
inc
repnz
dec
cmp
mov
cmp
and
mul
in
call
dec
cmp
cmp
pop
orb
out
repnz
xor
sub
addr16
addl
lds
lret
lgdtl
cmp
xchg
out
xchg
insb
cltd
fsubl
out
test
imul
dec
ret
fimuls
lods
add
adc
pop
inc
jnp
outsb
add
or
gs
mov
pop
add
jne
in
pop
aad
std
jae
imul
aas
les
xchg
mov
clc
dec
cltd
daa
mov
sub
jl
jns
std
push
cwtl
mov
pop
push
pop
stos
roll
cwtl
in
scas
jle
adc
sbb
mov
loope
dec
imul
out
add
lods
push
repnz
mov
fsubs
mov
push
and
sub
in
jbe
or
mov
sbb
sub
inc
sub
sub
lcall
daa
mov
fists
adc
arpl
xchg
mov
xor
int
outsl
les
sub
inc
add
sarb
fisttps
sub
fsub
scas
rclb
mov
cld
push
mov
stos
or
push
fisubl
fistpll
insl
popa
ret
leave
je
fimuls
test
clc
lods
in
lods
pop
jo
push
fistps
lods
add
ljmp
loopne
sub
data16
lahf
pop
rep
pop
icebp
push
dec
pop
xor
lods
push
ja
mov
stos
nop
decb
hlt
mov
push
sbb
xchg
cld
adcl
pop
in
in
cmp
loopne
cmp
mov
ret
adc
mulb
lods
lds
loope
hlt
int3
fsubrl
movsb
mov
push
jge
mov
ss
fsubrl
and
adc
movsl
fimuls
jp
inc
sarb
adc
leave
push
inc
inc
decb
into
es
mov
icebp
pop
aam
sbb
loope
dec
int3
xchg
aas
jb
push
sub
into
rclb
mov
inc
js
jne
and
ja
xchg
stos
das
sub
push
inc
pop
jmp
pusha
in
mov
mov
rcll
lcall
jbe
inc
or
xchg
push
and
fcmovu
xor
popf
popa
cmpsl
xor
pop
lret
inc
or
xchg
jg
add
jp
ja
xor
pop
ljmp
xchg
arpl
movsl
loopne
stos
js
dec
mov
mov
mov
mov
pop
pusha
test
add
push
push
mov
dec
cmp
sbb
xor
xchg
xchg
push
xor
bound
lea
jo
insb
jbe
imul
mov
dec
push
xchg
inc
adc
cmp
cmp
pop
int
and
pop
jb
aam
out
mov
jns
shrw
push
xchg
das
cmpsl
adc
xor
mov
and
insb
stos
js
int3
cld
jo
pusha
cmp
cld
dec
cltd
sbb
jnp
xor
push
iret
sub
outsl
dec
std
inc
in
cmp
push
cmpsl
xchg
js
mov
repz
mov
sub
adc
cmpb
vpsllq
stc
addr16
in
sbb
aad
enter
cmp
xchg
inc
jno
repz
xchg
jo
xchg
and
jbe
mov
dec
inc
adc
and
push
and
clc
mov
and
movsl
inc
mov
les
loopne
fistpll
add
lret
cmp
adcl
rclb
mov
popa
mov
lea
add
cwtl
xchg
outsb
mov
add
popf
mov
or
push
faddl
mov
sub
popa
cmp
in
cmp
pop
stos
inc
push
icebp
fs
das
pop
xlat
pop
dec
stos
push
push
add
rcll
pop
xorl
movl
jg
pushf
mov
push
jmp
mov
lock
les
mov
insb
add
mov
fldcw
in
mov
lcall
add
ret
subl
cs
dec
adc
jbe
dec
push
xchg
jne
and
mov
imul
push
mov
xchg
sbb
pusha
pop
mov
loopne
add
add
push
jp
pop
ficoml
fmuls
xbegin
adc
xor
pop
push
jecxz
mov
je
pop
mov
filds
mov
in
pop
lahf
lcall
sub
push
mov
int
adc
mov
into
int3
mov
mov
std
lret
add
and
into
les
in
or
dec
addr16
ss
ds
pusha
in
aaa
mov
data16
mov
pushf
cmp
insb
xlat
or
cmpsb
cmp
arpl
mov
pop
jmp
mov
and
sbb
stos
jb
outsb
and
xor
sub
add
ret
mov
cmpsl
add
xlat
mov
cmp
mov
or
mov
dec
adc
es
dec
es
xlat
das
mov
imul
int
je
pop
mov
xor
adc
push
inc
mov
pusha
jecxz
and
sbb
xchg
imul
vpunpckhbw
leave
adc
es
sarb
push
dec
ret
mov
jmp
js
mov
fimull
rcrb
push
cmpsl
loope
mov
cwtl
cmp
enter
ja
dec
inc
xchg
mov
outsl
enter
movsb
mov
pop
rcr
cmp
imul
sbb
cmp
lret
jl
inc
in
push
fstl
and
inc
push
je
popf
std
sbb
or
or
fistl
jb
sub
mov
push
mov
or
scas
repz
and
jae
bound
insb
rolb
mov
scas
icebp
mov
add
sbb
xor
xchg
insl
and
mov
push
rep
adc
and
fmul
push
repz
pop
repz
testl
jp
mov
cli
int3
aad
sbbb
aaa
into
pop
dec
mov
push
pushf
add
fisttpll
pop
stos
mov
or
out
cmpb
das
clc
mov
and
xchg
jl
pop
dec
cs
dec
pop
cmpsl
fcoml
stos
fidivl
add
push
xchg
xor
test
sub
sbb
lahf
outsl
or
mov
fs
cltd
fisubrs
repz
cmp
xchg
mov
or
and
lret
sub
fcomps
mov
add
pop
fcmovne
int
mov
pop
les
adc
icebp
std
add
cmp
ret
lds
in
mov
int3
stos
lcall
jecxz
jae
fwait
mov
xchg
jecxz
fnstsw
and
shl
add
dec
xchg
dec
push
jne
cmp
mov
nop
mov
jne
sub
bnd
mov
arpl
sub
les
mov
xchg
jecxz
inc
sub
enter
ror
add
popa
push
pusha
inc
xchg
mov
flds
add
lret
cmp
xor
out
loop
jl
mov
hlt
jae
pop
xchg
push
shll
int
and
and
mov
inc
inc
not
dec
or
inc
int3
ret
cmp
lret
xchg
aam
cmp
mov
inc
pop
hlt
mov
pop
shr
pop
jbe
jge
pop
mov
ja
jo
outsb
dec
adcb
pop
inc
loop,pn
gs
test
add
mov
icebp
ja
into
sahf
test
push
or
inc
and
pop
sbb
sub
push
mov
dec
movsb
mov
adc
push
push
jb
or
lcall
add
cld
jge
popf
pop
ret
daa
pop
xor
fsubrl
mov
mov
jecxz
fisttpll
jge
js
jo
mov
hlt
adc
sub
mov
fprem
or
jns
adc
call
sbb
cli
lahf
stc
and
fsubs
scas
inc
pop
sbbb
movsl
mov
decl
lds
jbe
stos
xchg
ss
loope
in
push
std
add
loopne
sbb
jne
hlt
iret
fimull
add
pop
pop
call
cmp
jecxz
xor
xchg
adc
jb
mov
xor
mov
push
fcompl
ret
scas
xchg
jb
into
sub
xor
ret
jb
mov
pop
sub
cmp
push
sub
dec
std
add
mov
mov
add
ss
hlt
cli
loop
add
mov
bound
fnsave
fstp
mov
int
test
pop
inc
clc
pusha
sbb
dec
xchg
fistpll
subb
lcall
adc
add
lahf
repnz
and
add
hlt
mov
mov
out
pop
mov
jecxz
scas
into
mov
cmp
xchg
in
or
mov
scas
andb
xchg
in
mov
mov
mov
subl
lcall
fnstsw
aaa
fstp
enter
or
dec
inc
insb
push
push
dec
ja
cmp
cmc
mov
adc
out
imul
add
mov
pop
jg
jle
addr16
fmuls
jl
pop
or
mov
lcall
sub
dec
fsub
cmp
js
sub
inc
jb
jne
fistl
fsubl
lods
mov
dec
inc
shr
js
sbb
cli
mov
lock
jbe
sub
fldenv
repnz
lret
add
inc
jno
jb
sbbb
mov
ret
aaa
mov
jne
pop
punpcklwd
jne
mov
pop
mov
scas
imul
mov
das
push
sbb
test
stos
mov
jne
dec
lods
je
jmp
lds
mov
int3
jno
std
sub
jbe
or
aam
divl
jl
mov
pop
andb
popl
pop
or
xor
testb
and
nop
push
push
in
and
dec
jnp
bound
outsl
mov
push
xchg
sbb
add
xchg
bnd
cwtl
cmp
jp
add
adc
loop
imul
and
xchg
std
ds
rorb
scas
sbb
sti
fs
pop
xchg
sub
fiadds
push
pop
pop
imul
repnz
add
inc
dec
scas
lock
loop
xchg
pop
decb
and
mov
jp
mov
adc
sub
gs
pop
leave
hlt
inc
mov
movsb
pop
aas
sti
daa
cmp
scas
movsl
mov
ds
movsb
jge
call
out
mov
or
push
jo
repz
push
xor
push
add
add
inc
in
sbb
sub
jge
pop
pusha
xor
test
dec
xlat
push
push
dec
push
cmpsb
ds
out
loopne
cs
inc
shr
xchg
aaa
cmp
push
lods
mov
xorps
push
sarl
int
jns
iret
and
jle
int
es
mov
xlat
and
jns
pop
push
js
rorl
hlt
jecxz
mov
daa
loop
in
scas
xchg
lea
mov
insb
shrl
popa
mov
inc
and
fcmovb
jge
sub
add
add
cmp
xchg
cmpsl
in
nop
or
dec
add
pushf
adc
cs
push
jg
mov
roll
sar
mov
mov
xchg
mov
and
paddusb
outsb
sub
or
mov
xlat
jmp
xchg
test
dec
pop
push
adc
outsb
lahf
sbb
sub
jmp
aas
gs
cmp
fcom
repz
cmc
xchg
popf
pop
and
sbb
cmp
sbb
cmp
clc
stc
rcrb
lcall
imulb
jmp
dec
jge
enter
cmpsb
cltd
leave
test
sub
mov
es
out
outsl
cmp
jge
inc
mov
mov
pop
add
push
ret
lahf
outsl
dec
movsb
cmp
lods
mul
mov
ja
into
mov
inc
imul
rcrl
dec
pop
stos
ficompl
pop
incl
aas
cmpsw
push
xorl
mov
addr16
push
lea
pop
lea
shl
cmp
pop
inc
sub
jl
popa
jge
and
sbb
push
adc
loope
popf
call
ficomps
sub
push
sub
xor
addr16
xor
or
sub
jb
inc
push
sahf
cmp
pop
push
fcomps
cltd
testb
xchg
mov
jno
mov
clc
cltd
cmp
push
push
repz
je
stos
imul
inc
popa
int
scas
jae
push
incl
and
xor
xchg
pop
and
xor
lock
lahf
jae
aaa
jo
and
lcall
jmp
add
mov
loop
inc
data16
sub
push
test
sbb
mov
or
cmpsb
ss
cmc
pop
mov
push
jmp
push
mov
sbb
data16
std
xor
pop
mov
mov
mov
fsubl
push
mov
dec
into
stos
pop
imul
sub
adcl
sarb
in
and
xchg
jbe
push
push
ret
xor
push
push
add
cmp
inc
mov
stos
in
pop
or
cmpsl
pop
add
sbb
xchg
xor
aad
ja
sub
out
xor
imul
pop
cmp
addr16
dec
inc
aaa
xchg
les
mov
xorb
mov
cwtl
xchg
pop
jo
stc
sub
inc
inc
jno
or
push
fwait
pop
push
inc
sbbb
loopne
cmp
fsubl
fprem
fidivl
mov
sbb
sbb
imul
lcall
repnz
xchg
clc
add
inc
inc
sub
mov
call
fdivrs
mov
cmp
inc
xor
insb
inc
sub
jo
cwtl
sbb
add
stos
mov
xor
iret
mov
clc
mov
test
jne
mov
jne
movsb
jns
inc
in
mov
fcoml
fidivrl
outsb
fstpl
lret
stos
jmp
mov
iret
and
or
stc
dec
jo
sub
mov
pop
mov
mov
jns
mov
rolb
mov
dec
mov
mov
sub
lods
adc
xor
outsl
movsb
and
fldt
jp
push
dec
mov
jnp
cmp
and
out
and
stos
in
punpckhbw
mov
cs
je
repnz
fprem1
call
or
cmp
cltd
div
jae
in
push
jae
int3
pusha
mov
cmpsb
add
mov
xor
mov
sub
push
fcomps
dec
sbb
andb
xor
add
dec
pop
push
dec
add
lods
push
ljmp
xchg
data16
xchg
add
pop
hlt
ljmp
push
push
mov
mov
push
sahf
lret
or
loop
in
in
fisttps
insl
outsl
ljmp
pop
xor
rorb
shlb
mov
mov
push
pop
and
nop
mov
xchg
xor
adc
xor
es
int3
dec
jp
add
mov
mov
loop
mov
sahf
adc
repnz
xchg
add
dec
insl
mov
lahf
adc
jg
fs
or
jnp
push
fbld
add
je
mov
sub
push
add
jno
test
cltd
or
mov
dec
aas
in
cmc
dec
or
cmp
popa
jge
sbb
mov
dec
pop
xchg
popf
pop
jecxz
fcomps
pop
mov
lods
roll
push
pushf
sbb
dec
stos
notl
mov
mov
lcall
insb
aaa
inc
push
mov
mov
inc
sbb
lret
mov
push
mov
mov
mov
jecxz
inc
push
xchg
adc
loopne
xchg
pushf
popf
je
jo
sub
mov
pop
dec
jge
or
xchg
int3
and
pop
arpl
pushf
cmc
jmp
les
cli
add
jg
jo
add
aaa
stos
hlt
add
pop
add
push
sbb
cmp
adc
repnz
outsl
popf
lret
push
cld
adc
cmp
or
or
mov
popf
aad
jge
fwait
cmc
ljmp
add
inc
adc
in
cmp
or
lds
sti
mov
aas
adc
imul
mov
ss
sarb
mov
aaa
mov
cmp
jl
dec
rcrl
movsb
insb
push
dec
les
mov
add
add
cmp
test
cmp
fbstp
mov
push
popa
in
mov
dec
jmp
in
pop
out
add
out
inc
adc
loopne
jge
fisubrs
popf
mov
lcall
jl
pop
dec
add
movb
cmp
std
xor
stos
mov
jo
cmp
movsb
sbb
dec
push
cld
mov
in
lret
mov
mov
inc
add
dec
sahf
and
test
mov
pop
pop
cli
in
inc
xor
jne
pop
push
popa
push
sbb
sbb
xchg
dec
stos
aas
lods
adc
js
dec
cmp
cmp
adc
out
cli
pop
pushf
mov
inc
xchg
dec
and
sti
mov
mov
xor
push
mov
imul
pause
fmulp
pop
sbb
fsub
and
adc
dec
mov
leave
mov
mov
or
fdivr
jecxz
mov
jo
fstpl
mov
scas
shll
stos
lcall
inc
sbb
fwait
hlt
out
xor
adcl
sub
test
test
cmp
adc
or
mov
adc
sti
mov
nop
xchg
data16
iret
pop
add
xor
adc
cli
xchg
imul
scas
dec
movsl
nop
add
adc
xor
add
xchg
lcall
aam
mov
int3
xchg
mov
mov
inc
push
inc
mov
mov
ret
lods
dec
mov
pushf
lock
pushf
mov
adc
xchg
jnp
ds
lds
sarb
mov
add
and
dec
jae
ror
pop
sti
rcrl
pop
mov
or
lret
push
jecxz
sub
xchg
enter
jecxz
idivl
sbb
or
cmp
mov
stos
pop
dec
gs
jg
or
jecxz
push
mov
sbb
jl
xor
pop
stc
push
pop
sub
daa
out
test
out
imull
sbb
icebp
add
pushf
mov
scas
pop
push
pop
xchg
mov
pop
sti
aaa
dec
or
dec
ret
and
sarb
movsl
pop
lock
adc
lret
repz
mov
hlt
adc
pop
xor
nop
mov
mov
icebp
sahf
mov
or
test
or
rcrl
mov
lods
mov
arpl
inc
dec
xchg
push
arpl
cs
pop
paddb
cld
imul
and
mov
dec
outsl
lods
and
xchg
add
push
dec
popa
in
mov
push
ljmp
inc
jo
mov
popa
stos
xchg
xor
xor
sbb
adc
mov
dec
insl
in
repnz
loope
enter
dec
and
mov
aam
lret
sbb
pop
pop
jnp
outsl
aas
in
sbb
jb
mov
adcb
ud1
adc
push
jnp
std
fsubrs
push
out
xchg
mov
cli
adc
enter
inc
popfw
dec
incb
add
xor
cmp
add
adc
inc
fcomi
imul
dec
movl
mov
xchg
jl
imul
iret
mov
fiadds
mov
mov
mov
pop
imulb
fistps
inc
pop
mov
sbb
xlat
inc
pop
insl
repnz
jle
icebp
adc
inc
cmpsl
jg
nop
pop
cmpsl
mov
ds
mov
dec
and
aam
sbb
add
xor
xchg
fcoms
call
push
and
jmp
add
es
sbb
stos
push
mov
mov
hlt
icebp
andb
jmp
pop
test
xchg
jecxz
cmovp
xor
jo
fdivrl
sbb
sbb
lods
xor
lods
repz
in
jnp
jmp
pop
iret
or
cmp
out
sub
adc
lods
jae
push
inc
jmp
ficompl
dec
xchg
inc
inc
jmp
shll
popf
repnz
pop
arpl
mov
mov
cmc
aad
and
insl
sbb
push
sub
jmp
cmp
repz
in
lods
sbb
and
xchg
out
cld
add
scas
and
sbb
cmp
ss
and
leave
rorb
pop
mov
cmpl
mov
sbb
pop
push
sahf
sarl
mov
add
addl
fmull
ja
int
xchg
loope
pusha
es
add
imul
mov
shl
ficoms
sahf
mov
inc
cmp
and
lock
mov
lea
loope
add
popf
xor
dec
xlat
icebp
xchg
rcr
push
mov
mov
dec
push
push
xor
dec
pop
xor
inc
mov
add
outsl
push
test
addr16
mov
pop
add
test
bnd
test
adc
push
lcall
adc
push
test
push
icebp
pop
cltd
shll
sub
shll
movsl
repz
cmp
lahf
addr16
fwait
mov
aad
xlat
cmp
leave
stc
and
outsl
mov
mov
mov
dec
out
inc
mov
sbb
in
outsl
dec
imul
pop
bound
popl
inc
test
cld
stc
add
mov
call
lock
jg
push
out
sbb
xchg
ja
adc
cltd
in
xchg
popf
hlt
faddl
sbb
jnp
fimull
add
cltd
out
cmpsb
mov
in
push
stos
or
mov
fsts
stos
and
jnp
cmp
inc
imul
rorl
mov
insl
cmp
loopne
dec
sti
pop
sbb
push
sahf
aas
and
pop
add
add
fsubrp
xor
xlat
bswap
sbb
out
push
sbb
imul
pop
sbb
mov
sub
xor
fmuls
inc
fst
inc
mov
cmp
shrb
xor
sti
pop
lahf
iret
or
lds
lret
fbstp
fprem1
inc
in
sarl
xor
jecxz
mov
jmp
xchg
call
fstpl
cld
inc
in
adc
mov
and
jo
dec
dec
dec
int
pop
cwtl
sti
dec
inc
jg
push
push
aam
mov
lret
in
fisubs
outsl
bound
cmpsb
pop
enter
pop
pop
fwait
jae
adc
ds
fwait
jnp
aam
out
insl
and
test
push
push
pop
xchg
adc
les
and
xor
ljmp
cmp
push
test
test
cmp
mov
bound
fidivl
pop
adc
outsb
push
jbe
leave
mov
imul
fdivp
mov
sbb
fldl
inc
xor
lret
jp
jo
movsl
jns
scas
jecxz
sub
mov
dec
jb
lret
pop
cmove
imul
mov
or
mov
fcomps
aaa
leave
mov
mov
mov
repnz
or
and
sub
jo
adc
iret
aas
dec
mov
lock
pop
or
jae
push
add
xchg
add
nop
pop
jnp
sbb
mov
das
fwait
repnz
xor
sub
push
shlb
push
sbb
in
push
nop
fs
push
pcmpgtd
xor
xor
les
pop
loop
sub
mov
dec
xor
or
cmp
pop
filds
push
add
mov
fildll
jb
and
stos
push
outsl
std
fcomps
pop
mov
movsl
mov
sbbl
lahf
xchg
divb
mov
inc
sbb
negb
movsb
pop
jle
or
fistps
lret
dec
data16
sbb
push
mov
push
shr
gs
add
fwait
pop
mov
scas
fsubrp
filds
or
add
fistl
loop
insb
sub
push
mov
inc
hlt
pop
push
pop
jl
inc
xchg
cmp
mov
mov
xor
cmp
mov
sub
test
outsb
xchg
ljmp
daa
and
pop
adc
frstor
ret
test
lahf
pop
clc
outsb
sti
popa
fidivl
jmp
inc
add
adcl
pop
jecxz
js
jle
add
xchg
cs
sahf
pushf
or
jb
jmp
loop
popf
enter
out
jns
into
jno
sbb
test
stc
sub
xchg
fsts
fwait
scas
imul
push
iret
dec
cld
hlt
jno
aam
cld
cltd
test
fadd
es
rcl
sbb
xor
in
jae
add
cltd
or
mov
cs
mov
dec
divb
mov
mov
jg
push
jo
sub
sbb
aaa
dec
mov
jecxz
sbb
test
cmpsb
pop
sub
and
jo
cmp
mov
sbb
mov
inc
jmp
into
xchg
fstp
loop
add
cwtl
and
jns
jge
pop
sbb
cmpsb
sti
lahf
js
dec
or
nop
adc
loope
test
outsl
loopne
pop
cmpsb
test
jecxz
test
loop
push
fcoms
loope
movb
lds
inc
xchg
and
addr16
lds
lods
xor
sub
pop
into
adc
into
in
enter
mov
xchg
imul
out
sbb
and
shl
ja
pop
pop
pop
cmp
xor
jnp
insl
rorb
cmp
scas
xlat
or
or
or
clc
jmp
loope
mov
cmpsl
xchg
or
rcr
in
addr16
dec
jl
btc
jle
jmp
test
ficoml
sub
push
fdecstp
jecxz
js
or
cmpsb
sahf
mov
inc
sbb
iret
addr16
subb
xchg
xor
outsl
out
mov
mov
jmp
rcrb
lods
push
es
je
push
rorl
add
adc
enter
int3
and
lds
loope
or
mov
les
jmp
nop
scas
adcb
popa
loope
loop
dec
ss
pushf
pop
cmpsl
xchg
ss
cmp
pop
pop
es
addr16
sub
add
loopne
testl
pusha
mov
fldl
mov
jns
add
mov
adc
mov
push
mov
mov
inc
add
inc
xchg
fwait
xchg
js
push
inc
dec
adcb
push
cmp
or
xor
xor
hlt
cmpsl
mov
fadd
and
sbb
jb
fisttpll
dec
jg
fadds
mov
idiv
mov
jb
mov
adcb
and
test
mov
icebp
jnp
ret
repnz
das
sbb
jo
in
sbb
mov
loopne
jae
popa
inc
std
movsl
push
xchg
cmp
aas
adc
dec
fcomps
xor
fidivs
dec
in
mov
std
xchg
popa
add
fs
push
loopne
mov
cmp
inc
inc
or
mov
testl
or
into
jp
dec
mov
movsl
xchg
jne
sub
mov
adc
pop
pop
pop
stos
icebp
sub
xchg
je
imul
aad
int
insb
out
cltd
jmp
push
sbb
jp
lret
xchg
mov
mov
sub
mulb
test
or
arpl
insl
sub
jle
pop
jmp
test
jp
push
jno
nop
sub
push
push
xchg
bound
xchg
ja
push
jb
aam
add
xor
outsw
aas
pop
mov
mov
dec
je
jmp
or
repnz
pop
fstps
mov
sbb
out
jns
arpl
dec
push
inc
and
fcompl
iret
outsb
xor
jge
adc
sub
jo
lahf
mov
xchg
add
call
mov
push
test
push
cld
xchg
movsl
subl
push
dec
rolb
inc
xor
mov
lcall
or
lock
in
loop
cmp
aam
push
pop
movl
stc
sbb
sbb
or
xlat
push
iret
mov
mov
and
sbb
push
outsl
push
or
daa
cmpsl
aam
lret
push
mov
and
adc
decl
out
div
mov
idiv
js
mov
cmp
je
pop
push
or
xor
jae
in
push
movsl
ror
repz
enter
mov
fwait
addr16
sub
xchg
fldl
cmp
push
inc
and
lret
cmpsb
xor
mov
jle
sbb
push
and
xchg
adc
lret
das
ja
lods
xchg
imul
dec
hlt
jo
inc
pop
imul
mov
repz
mov
ss
sbb
fs
lock
ljmp
cmc
jbe
or
dec
leave
fistl
mov
rcl
incb
loope,pn
mov
rorl
movsb
loop
cmp
jb
cmp
sbbl
pop
push
ljmp
cld
sbb
fincstp
sub
push
mov
xchg
stc
push
fcomp
xchg
mov
push
xchg
aad
rolb
adc
xchg
aas
sbb
xchg
push
xchg
jns
push
add
mov
cmp
shrl
int
pusha
jg
add
leave
adc
shr
and
inc
dec
push
ret
in
rcrl
and
and
jg
dec
shll
sbb
fdivl
xor
inc
push
lcall
imul
ss
cmp
fcoml
ret
push
shl
das
mov
pop
dec
rorl
cmpsb
lods
ret
test
cs
pushf
loopne
outsl
pop
sbb
jo
sub
bound
inc
pop
and
jbe
filds
cmc
leave
por
into
in
cmpsb
ret
jae
ds
and
jno
xchg
fcom
mov
xchg
dec
aam
scas
cmp
ljmp
inc
rorl
pop
mov
add
movsl
cmpb
jne
dec
js
sub
loopne
outsl
cltd
popf
insb
movsl
pushf
push
out
loop
sbb
out
fmul
add
fmul
add
mov
xchg
fildll
inc
push
inc
and
mov
les
jmp
jecxz
push
out
cmp
leave
mov
je
xlat
cmp
cli
xchg
inc
jne
jb
out
cmp
cmp
daa
sbb
xor
dec
push
dec
mov
adc
aaa
cs
ljmp
add
rolb
mov
fldenv
insl
mov
loopne
inc
ror
fsub
cmpsb
cmp
cmp
mov
adc
push
dec
movsb
pop
sub
aad
jp
mov
pop
jle
mov
addb
inc
testl
sub
jae
push
push
fisttpll
shlb
ret
jmp
mov
jge
cmp
pop
sbb
cmpl
mov
addr16
ret
jg
xlat
imul
jmp
or
jo
push
xchg
test
xchg
push
movsb
push
xor
int
add
int
jmp
jo
or
pop
mov
xchg
fucom
je
push
std
iret
push
mov
jo
lods
inc
cwtl
mov
jp
mov
in
lock
mov
imul
pop
mov
add
mov
popf
or
push
inc
sub
in
insb
xchg
xor
sub
inc
iret
loopne
push
ja
add
jno
sti
div
lock
add
das
aas
lea
mov
mov
pop
pop
sub
cmp
sub
rclb
ficoms
sub
call
xchg
sahf
dec
loop
mov
push
jne
ss
rcl
mov
push
lret
negb
dec
dec
repz
cld
lea
xchg
adc
out
das
ljmp
xor
dec
std
mov
shrl
push
movsb
inc
test
xor
mov
das
in
add
jl
mov
lret
mov
push
push
cmp
mov
pop
addr16
inc
imul
push
or
ret
dec
js
fucomp
xor
out
cmc
mov
outsb
lret
pop
fnsave
or
leave
shlb
insb
jae
clc
adc
inc
lods
icebp
jle
sbb
dec
adc
adc
mov
push
imul
dec
loopne
inc
jbe
aam
scas
cmp
inc
lods
shlb
add
lock
sbb
gs
mov
roll
cmp
pop
out
lahf
call
sti
add
mov
gs
dec
sar
lea
xchg
push
jmp
icebp
mov
pop
mov
adc
mov
cwtl
push
jne
mov
pop
out
ja
rcr
or
addr16
pop
les
jae
sub
stc
cli
clc
fdivl
mov
sub
fcmovnbe
jbe
gs
popf
mov
or
lods
inc
hlt
imul
sbb
push
in
jg
data16
lcall
xchg
xchg
imul
fistpl
adc
ss
pop
and
cmp
add
xlat
pusha
cmc
repz
adc
fcmove
push
int
mov
pushl
stc
std
dec
imul
ror
scas
outsl
dec
out
loop
lcall
inc
pop
or
ljmp
sub
sbb
dec
repz
xor
xor
stos
aaa
insl
lods
orl
negl
jbe
jecxz
xchg
push
lods
stos
je
or
mov
push
notb
mov
dec
xor
and
insl
enter
cmp
dec
push
pop
and
inc
out
push
pushf
sub
ds
or
test
data16
int
xor
int3
jl
mov
sub
sbb
pusha
rclb
mov
imul
xchg
lcall
push
pop
jecxz
and
push
mov
loopne
aaa
sbb
cmp
lods
subb
adc
push
add
or
pop
cmp
cmpsl
fcoms
xchg
add
adc
dec
fst
jnp
sbb
push
xor
mov
outsl
pop
xchg
add
lcall
push
mov
mov
pop
dec
pop
out
inc
push
sbb
add
test
sub
and
cltd
shll
cmp
inc
sub
dec
xlat
test
lcall
add
xchg
inc
jns
cwtl
cmc
fadds
loopne
cmp
dec
jg
sbbb
loope
cmp
xlat
shll
sub
push
out
stos
push
cmp
and
cmp
pop
push
sbbb
les
xor
pusha
xchg
jg
outsl
sahf
cwtl
xor
mov
sub
xchg
push
add
sti
dec
inc
bound
imul
fnstsw
pusha
repnz
lea
or
add
cmpsb
iret
mov
ret
fmuls
xlat
daa
xchg
das
cmp
fsubs
push
mov
adcb
mov
int
jecxz
dec
lock
cmp
mov
rcl
imulb
inc
loope
insl
fwait
sub
add
jp
or
mov
idivb
clc
xor
sub
jns
stos
jle
mov
push
mov
cs
ljmp
and
inc
xlat
fsubrs
imul
outsl
add
cmp
pop
push
pop
stos
test
in
outsl
sub
add
and
repnz
je
xchg
dec
sbb
push
add
lret
addr16
dec
fistps
xchg
xor
inc
cmpsl
movsl
push
lock
add
mov
xchg
arpl
push
and
add
jno
mov
pop
cli
arpl
into
pop
lret
pop
arpl
jb
push
inc
adcl
cmc
hlt
out
mov
mov
and
div
xchg
xchg
imul
and
cwtl
call
lcall
test
leave
pop
cli
add
sub
cli
aad
fwait
loopne
or
stc
lcall
mov
movsl
or
xlat
push
fwait
push
shll
lods
cmc
xor
dec
loop
xchg
cmp
fistps
lock
fs
jbe
or
add
push
call
ret
pop
cmpsl
scas
inc
push
stc
xlat
ret
enter
movsb
pop
es
and
shlb
push
lds
mov
pop
sub
pop
add
mov
ds
out
in
pop
adc
xor
pop
mov
jae
pushf
lahf
in
addl
sub
idivb
push
mov
call
or
fisttps
adc
icebp
cmp
out
mov
mull
pop
rorl
call
cmp
imul
insb
mov
pop
push
pop
cltd
add
fisttps
adc
paddusb
jp
lret
ljmp
mov
inc
cmp
test
sub
popf
notl
mov
fnstsw
fincstp
stos
sub
cmpsb
decb
bound
in
int3
xchg
and
pop
xor
test
testb
mov
adc
mov
push
pop
and
xor
push
push
push
jnp
adc
insl
jb
or
mov
lcall
inc
jne
or
into
xchg
add
lret
mov
adc
outsl
scas
leave
mov
pusha
mov
lret
mov
xchg
cmovne
cmp
ffree
int
fistps
cmp
scas
lds
sbb
je
lock
loope
and
out
or
cmc
xchg
mov
mov
fisubrl
xor
enter
lret
add
lcall
and
xchg
ficompl
into
shll
imul
or
pop
fisttpl
mov
jle
push
cmc
pop
jne
add
mov
cs
fcoml
lock
aas
mov
mov
notl
loop
sub
push
xor
sub
adc
push
stos
xlat
sbb
ret
pop
xor
adc
into
sbb
sarl
popf
jge
hlt
int3
mov
add
dec
iret
add
push
cmp
adc
pop
ret
leave
xchg
cmp
into
scas
xor
fisttps
les
out
jg
popf
addr16
mov
and
addr16
push
cmp
pusha
xor
cltd
enter
jecxz
orb
add
inc
or
outsb
lds
lcall
xchg
mov
std
mov
pop
jmp
jmp
pop
iret
out
cmpsb
loop
xchg
das
lods
outsb
push
imul
mov
xchg
adc
mov
imull
mov
enter
mov
cmp
enter
xor
add
ret
insl
xchg
xchg
jg
sub
fnstsw
sarl
xchg
fists
or
fs
pop
fwait
or
shr
movsb
ja
movsl
sub
adc
xor
or
mov
jns
jae
in
les
inc
xor
cmpsb
add
imul
pop
popf
out
lret
int
dec
xchg
mov
lods
repnz
aas
jo
xor
mov
daa
sahf
fbld
jg
dec
xor
and
cmp
inc
rolb
xchg
cwtl
repnz
push
das
mov
fs
jnp
testl
gs
je
int
pop
jp
inc
icebp
loopne
pop
or
movsl
mov
cmpsb
fdivrs
push
push
sub
sbb
pop
cmc
pop
mov
lcall
bound
movsb
dec
adc
lret
lcall
jp
jmp
popa
add
push
jle
mov
fstpl
add
gs
pop
testl
jae
icebp
insb
addb
sti
scas
mov
pop
icebp
pmaddwd
mov
lods
repz
insl
nop
lds
mov
jb
add
cltd
hlt
or
insb
adc
or
decb
sbb
outsb
pop
data16
stos
inc
lods
push
pop
aad
xor
dec
push
roll
movsl
mov
aas
shlb
cwtl
dec
xlat
das
jg
mov
aaa
call
cmp
or
mov
repz
stos
mov
and
stos
lods
mov
xchg
adc
and
xor
mov
cli
lret
and
inc
andb
dec
call
enter
fwait
sti
or
scas
dec
ret
push
push
lock
nop
cltd
dec
cmp
dec
dec
jle
jne
sub
out
jnp
sarl
sarl
xchg
aaa
ss
in
lods
dec
popa
cld
xchg
shrl
fisubrl
call
call
pop
imul
mov
mov
in
and
xchg
mov
inc
adc
sar
rcrl
sub
push
lcall
stos
jle
jmp
mov
push
dec
test
inc
pop
in
mov
mov
or
outsb
arpl
orb
pop
push
xor
xor
push
jmp
inc
dec
xorl
xchg
pop
mov
data16
pop
xor
std
cmpsb
movl
or
mov
fiaddl
sti
lock
and
loopne
xchg
and
stos
clc
mov
mov
sub
add
xchg
outsl
ljmp
inc
popa
jno
jb
bound
loope
dec
dec
or
dec
ss
imul
or
and
sub
jno
sbb
dec
loope
xchg
outsb
fidivl
xchg
dec
add
ss
pop
jg
cmpsl
push
adc
loope
movsb
loope
sbb
int
jmp
testb
push
mov
xor
outsb
cld
mov
mov
fsubl
sar
dec
jmp
les
xor
xchg
dec
pop
push
mov
and
jmp
mov
push
fisubrs
inc
pavgw
mov
fisttpll
ret
inc
and
ss
testb
icebp
sub
cmp
arpl
outsb
cs
outsb
out
inc
imul
inc
orb
lods
adc
out
mov
and
insl
jb
adc
xor
dec
cmc
sub
xor
aas
mov
sbb
lahf
ret
icebp
dec
out
mov
aam
xchg
mov
shrb
mov
dec
lods
xchg
popf
shll
out
mov
or
outsb
push
sahf
mov
out
rcr
mov
gs
xchg
pop
dec
hlt
shl
loopne
outsb
sub
aad
insb
mov
bound
mov
and
scas
mov
shl
xor
enter
adc
inc
inc
and
and
dec
push
int
stc
mul
sti
mov
xchg
adc
inc
push
inc
jns
mov
pop
mov
int3
lods
aam
dec
and
mov
aad
or
cmpsb
stos
aas
popf
roll
mov
ja
out
in
mov
mov
pop
shlb
dec
xchg
push
in
lret
mov
mov
lret
or
xchg
xor
push
jle
inc
cmp
jmp
in
loop
sbb
call
rcl
pop
push
jl
cmpsb
adc
xchg
sub
shr
stos
add
pop
out
into
add
shlb
add
popa
xchg
ds
sbb
hlt
mov
loope
or
aas
mov
subb
push
jp
lahf
rolb
sub
int
adc
jmp
inc
out
xlat
mov
out
dec
insb
repz
cmp
xchg
sbb
inc
jle
or
or
rolb
jmp
xchg
bound
aaa
xchg
jnp
mov
add
dec
aas
test
in
imul
subb
sbb
out
std
xor
scas
rolb
push
pop
fcmove
sbb
xor
out
aad
sti
cmp
jbe
mov
jns
xchg
mov
ficoml
push
shlb
imul
loopne
mov
adc
dec
mov
cmpb
in
xchg
lea
clc
pop
sbb
ljmp
xchg
and
or
andb
pop
sbb
mov
loop
sbb
xor
xchg
mov
stos
pop
dec
lds
std
mov
mov
loop
pop
jmp
cwtl
dec
push
adc
aaa
adc
hlt
in
psrlw
lods
jne
xchg
xchg
push
into
ret
mov
lahf
imull
orl
inc
mov
cmp
shlb
xchg
movsb
rclb
push
fs
pop
inc
jne
pop
mov
push
lcall
jae
push
rol
mov
insl
in
cmp
pushf
adc
mov
filds
pop
add
pop
mulb
mov
push
sarb
sub
xor
sub
cmp
mov
pop
add
jl
dec
xchg
push
sbb
mov
pop
jno
outsb
dec
enter
inc
fwait
jnp
sahf
inc
push
add
out
lock
dec
sbb
adc
add
call
inc
int
sub
add
lods
xor
mov
xlat
pop
dec
test
std
std
dec
jnp
mov
add
gs
mov
cltd
cltd
fdiv
and
jmp
lock
dec
sbb
push
jecxz
leave
out
sti
cmpsl
sub
outsl
inc
popa
lods
or
mov
enter
je
pop
addb
lahf
lods
ret
mov
inc
push
sub
gs
mov
sti
ds
pop
pop
pop
or
or
adc
test
cmp
add
insb
cmp
stos
cld
fildll
ss
cmpsl
cmp
mov
imul
jb
pushf
int3
push
cltd
cmp
lock
sub
out
fs
mov
pop
mov
and
orb
mov
and
mov
mov
ds
add
jg
xlat
add
or
test
dec
sbb
fisttpll
jns
out
pusha
inc
mov
mov
int
nop
btc
sub
fcmove
aas
andb
cmp
ja
mov
cmpsb
iret
inc
loopne
aas
and
jmp
bound
pop
xor
xor
shlb
jnp
jp
shll
xchg
jae,pt
xor
pop
mov
and
dec
or
fwait
jp
mov
iret
fs
data16
repz
adc
pop
xlat
adc
mov
xchg
sbb
dec
and
out
out
cs
pushf
sbbl
xchg
jno
test
sub
push
icebp
aas
out
mov
cmp
push
push
sub
sub
fists
sub
mov
stos
movsb
sbb
cmp
lea
pop
cmp
jmp
xchg
push
jb
fldl
imul
pop
dec
psubq
es
xchg
adc
xchg
cwtl
cmp
dec
mov
sub
mov
mov
loop
pop
xchg
dec
loop
xchg
mov
jnp
test
stos
cwtl
pop
loope
jnp
outsb
in
outsb
mov
in
mov
cs
mov
cmp
xchg
lahf
insb
adc
mov
sbb
gs
popf
mov
or
gs
mov
lock
out
pop
sub
lahf
mov
and
mov
insl
fdivs
es
inc
push
ja
dec
clc
adc
loopne
xchg
movsb
pop
out
adc
sub
stos
mov
ljmp
xor
gs
cltd
adc
cmp
pop
or
in
dec
sti
xor
shrl
cld
ss
pop
jne
test
rcr
xor
loop
pop
sbb
sbb
arpl
ljmp
int
mov
sbb
arpl
xor
adcl
add
xlat
cmpsb
push
in
aam
push
adc
insb
jnp
insl
dec
pop
repz
and
fcompl
or
test
mov
fwait
dec
imul
ret
or
fdivrl
arpl
call
mov
xchg
ret
stc
push
movsl
and
inc
and
leave
sbb
xchg
cmp
sti
mov
mov
lods
push
pop
jge
add
sarb
xchg
loop
mov
push
xchg
enter
vcvtsd2si
shrl
aas
ret
popf
xorl
test
or
jae
xchg
insb
pop
mov
adc
sbb
fisubrs
or
rcl
lods
out
insb
lcall
pusha
ja
in
stc
mov
in
outsb
scas
ss
or
or
faddp
and
jb
inc
mov
lcall
xchg
sbbb
jecxz
addr16
xchg
add
arpl
jno
mov
mov
jne
xchg
out
loopne
daa
add
sub
inc
cmp
cmc
lods
or
loop
xor
mov
cmp
sub
push
iret
lahf
hlt
inc
xchg
lods
lret
sbb
dec
add
ret
dec
cmp
dec
xor
add
add
fcos
sub
jns
jge
push
push
inc
or
and
mov
sub
std
mov
mov
xchg
adc
cmc
call
cld
xchg
cwtl
cmp
les
xlat
xor
mov
cmp
xchg
out
xchg
adc
iret
cmp
int
popf
mov
mov
les
outsb
xorb
xor
xor
xor
int3
and
push
mov
lds
roll
andb
aam
push
push
jle
push
mov
fs
std
push
imul
sub
push
pop
iret
jl
ret
mov
into
cmpsb
out
sbb
ret
test
mov
mov
jmp
negl
or
pop
sti
jnp
xorb
inc
cmp
cmpsl
pop
cmpsb
ds
jb
movsl
push
lret
imul
out
nop
gs
lods
fidivrs
mov
outsb
jbe
insb
sbb
jae
es
adc
repz
lea
mov
jae
mov
xor
aas
mov
dec
dec
dec
addr16
test
xor
push
pop
xchg
outsl
mov
lret
xor
lods
jecxz
scas
mov
sub
dec
out
scas
xchg
repz
inc
xchg
xchg
mov
or
sbb
cmp
es
mov
test
imul
outsl
shll
das
mov
jmp
xor
mov
lahf
data16
dec
sar
cmp
jmp
inc
aam
push
dec
dec
mov
ret
xor
imulb
inc
testb
fs
jne
mov
cmp
rcll
popa
int3
xlat
lret
in
test
mov
adc
cli
scas
jp
push
dec
and
xchg
adc
mov
call
into
push
jne
sbb
mov
lock
adc
inc
fsubr
testb
lret
popf
cmp
das
pop
lcall
sbb
fxch
sbb
sar
mov
sub
jne
or
push
cmpsb
cmc
jmp
bound
lahf
cli
popa
mov
xchg
sbb
dec
adc
pop
mov
adc
jl
push
sub
mov
cmpsb
sub
fsts
inc
and
xchg
push
out
push
repnz
rcl
xchg
jo
daa
xorb
fdivr
cld
dec
cmp
lret
push
adc
xchg
mov
loope
das
push
cltd
out
fildll
divb
jecxz
enter
test
mov
pushl
mov
xchg
hlt
je
sub
scas
adc
inc
xchg
or
loopne
or
movsb
mov
sahf
aam
pushf
xchg
imul
mov
or
lock
sbbb
in
lds
dec
mov
xchg
sbb
mov
andb
in
mov
in
std
push
push
mov
testb
sub
fs
imul
sbb
mov
arpl
dec
xchg
xchg
pop
inc
dec
call
lods
xchg
push
popa
insb
add
and
int3
adc
mov
adc
cmp
les
mov
lods
push
xchg
sar
adc
loopne
repnz
in
in
popf
sub
mov
pop
or
adc
pop
fldcw
hlt
sub
sbbb
popa
jmp
cs
imul
add
imul
daa
lock
jns
add
nop
jno
in
xor
stos
outsl
xlat
pop
pop
in
push
repz
imul
dec
or
imul
bnd
aam
jbe
leave
lods
andb
sub
ret
pop
stc
push
rcrb
mov
iret
mov
sbb
mov
sbb
push
cmp
mov
mov
mov
add
adc
sbb
jbe
jecxz
stc
fisubs
ret
lods
in
call
lods
fdivrl
mov
les
int
outsb
mov
xor
mov
movsb
or
push
add
cs
pop
inc
xor
leave
mov
sahf
jmp
insl
mov
mov
stos
out
lret
fadds
mov
xchg
dec
push
cld
insb
jle
sar
gs
dec
int
sbb
cmp
push
mov
jbe
loopne
sarl
adc
cmp
lret
mov
ret
adc
stos
xchg
or
in
cld
xchg
jg
mov
fidivs
lahf
ret
xchg
mov
dec
mov
mov
xor
loopne
cmp
aad
inc
inc
int
stos
sbb
outsl
push
mov
idivb
cmpl
shrl
subl
adc
jno
in
les
fdivs
int3
xlat
fists
lds
xchg
adc
jnp
loope
add
or
mov
aad
aaa
jae
inc
xlat
cmc
sub
add
push
lods
cltd
jecxz
xor
cmp
xchg
test
add
pop
push
stos
add
pop
rcrl
sbb
sar
mov
mov
dec
test
movsb
out
in
cmc
stos
js
jo
arpl
test
add
push
dec
inc
sub
daa
jp
sbb
sbb
jle
test
and
cmp
adc
cs
fstpt
stos
call
inc
jo
sbb
add
mov
leave
fbld
outsb
inc
adc
push
xor
add
test
arpl
sub
inc
xor
mov
cbtw
jns
test
int3
xlat
push
add
nop
and
jge
dec
mov
rorl
rcll
cmp
dec
jae
outsb
jo
faddl
repnz
xchg
or
sub
sub
jbe
mov
xchg
out
jno
xor
repnz
sbb
sbb
sti
dec
les
test
insb
in
dec
sub
cmp
and
arpl
xor
push
shll
inc
imul
les
rorb
out
dec
ret
or
push
cld
xor
mov
rolb
and
shl
std
std
lea
sbb
inc
adc
shrl
sbb
dec
idivb
jl
sbb
mov
out
jae
lods
mov
sub
and
or
cmp
xorl
mov
int3
push
aaa
gs
dec
fs
mov
add
push
fldenv
ret
mov
mov
adc
jno
mov
data16
sub
outsb
mov
pop
popa
cmpb
lret
jae
fidivrs
dec
lcall
cwtl
dec
xor
or
cmp
pop
xchg
jge
sti
loop
xor
subl
int
sub
out
jns
pop
rcll
mov
mov
sti
adc
cs
rep
cmpl
int3
lods
fs
and
ds
adc
or
out
call
adc
mov
cmp
adc
rcrl
xchg
or
dec
ja
fistps
in
add
sarl
push
pop
in
xor
add
and
mov
pop
sbb
mov
mov
push
pop
fdivs
loope
mov
jbe
call
scas
call
mov
nop
dec
xchg
xor
cmp
stos
fcomps
pop
leave
push
sbb
pop
inc
stos
fdivl
pop
stc
mov
xchg
out
jns
inc
mov
stos
or
cmp
test
push
mov
pop
lret
jmp
sub
mov
adc
push
adc
xchg
xor
int3
cmp
pop
aaa
jge
cmp
jbe
jno
mov
push
sti
cltd
andb
mov
mov
movsb
aam
sbb
mov
jbe
fimull
insb
andb
js
push
int3
sub
fstp
sub
das
pushf
leave
or
sub
jo
and
out
mov
sub
cmp
lods
sbb
inc
scas
stc
mov
imulb
jne
fdivr
and
ret
pop
xchg
xor
xchg
sarl
pop
das
cmpl
xchg
pusha
filds
insb
mov
sbb
push
mov
push
es
push
push
mov
cli
data16
sbb
dec
push
insb
xchg
inc
subb
pop
testl
js
rcrl
sti
jle
movb
adc
movsl
scas
cli
loop
sub
and
jnp
xchg
xchg
lods
je
and
pop
inc
dec
cmpsb
xchg
mov
lret
lret
cld
mov
int3
jge
mov
push
jne
daa
rolb
or
outsl
push
movsb
inc
lock
cmp
mov
inc
add
movsl
jbe
mov
insb
lock
imul
std
and
scas
clc
dec
and
inc
js
sbb
into
mov
sbb
ret
and
filds
aad
mov
stos
adc
jmp
int
js
test
xor
adc
sahf
fs
jge
repnz
add
mov
cmc
ja
outsb
jmp
xor
dec
xchg
mov
inc
movsl
push
neg
pop
push
mov
call
or
and
mov
and
int3
fld
sub
xor
mov
loop
cmpsl
loopne
outsl
cs
jp
and
jne
xchg
jo
insl
stos
lret
mov
insb
cmp
fcmovnbe
xor
cwtl
cmp
jg
mov
sub
xor
adc
xor
sub
fldt
rcll
jge
xor
or
lods
cli
fs
mov
movsb
adc
mov
xchg
cmp
or
sbb
push
or
inc
mov
adc
test
jne
clc
out
sbb
and
imul
inc
arpl
and
sub
movsb
and
push
lods
vpmuludq
pop
lods
imul
les
jmp
or
mov
inc
in
mov
adc
insb
jnp
sub
cmp
sub
js
adc
xlat
jno
insb
add
dec
rclb
into
fmuls
ficompl
push
lock
dec
ret
out
ss
lea
call
stos
jp
or
inc
arpl
stos
xor
jmp
gs
xor
popa
sti
cmp
mov
adc
insl
mov
out
xchg
test
insb
rcrl
out
clc
inc
scas
jae
ret
nop
cmp
adc
subl
pop
jno
mov
fwait
ror
fucomi
lret
aam
lea
imul
outsb
jns
mov
cmpsl
or
bound
ljmp
mov
adc
nop
or
fs
mov
pusha
inc
inc
nop
ret
pop
fcmovu
out
mov
cld
decl
jmp
fisubs
xchg
sbb
sti
jns
call
inc
and
sahf
pop
nop
aas
inc
lock
inc
je
cli
outsl
cmp
mov
xchg
call
stos
sbb
sbb
and
or
or
and
sbb
icebp
xor
lcall
inc
or
push
pushf
or
mov
sbb
fsubrs
ljmp
jo
jbe
das
sub
cmpsl
adcb
push
pushl
stos
push
mov
in
push
je
cmpsl
inc
dec
push
fwait
lcall
cmp
jo
imul
clc
out
repnz
push
inc
xchg
jae
dec
sub
mov
fidivrs
or
xor
inc
imul
lcall
mov
fwait
test
jecxz
sub
andl
xchg
cmp
lods
pop
dec
jmp
add
mov
sbb
cmc
ss
sbb
nop
mov
and
mov
fwait
dec
jo
icebp
ds
xor
inc
or
xchg
xor
sbb
mov
xchg
and
lods
fsts
js
and
das
cmp
ficoms
ds
adc
add
adc
dec
dec
mov
pusha
fmull
cwtl
jg
cmc
test
mov
xchg
push
ja
clc
push
cltd
add
adc
jecxz
xor
push
cmp
xchg
into
loopne
adc
cs
fimuls
aas
and
dec
out
pop
mov
mov
mov
cmp
daa
jg
clc
rcrl
inc
sub
adc
idivb
test
or
or
mov
mov
mov
cwtl
add
mov
push
xor
ljmp
adc
push
add
xor
pop
pop
nop
js
xor
loopne
cmp
inc
jns
leave
arpl
shlb
fs
sbb
cmp
sahf
into
mov
xchg
inc
sub
pop
in
mov
insb
ja
mov
gs
push
daa
inc
pop
aas
mov
lock
inc
add
loop
pop
sbb
jle
pushl
bound
jecxz
arpl
jae
xor
mov
aam
fwait
and
push
pop
fiadds
cwtl
ffreep
adc
call
insl
xchg
ss
stos
inc
pop
shlb
mov
add
nop
icebp
pusha
dec
int
enter
or
jno
adc
inc
popa
lods
fisttpll
dec
sarl
jmp
fists
aaa
imulb
mov
loop
es
clc
adcl
loopne
je
jge
sub
or
add
fisubs
pushl
mov
in
ret
inc
push
js
ret
mov
mov
sbbl
gs
iret
dec
insb
pushf
push
mov
aaa
push
stos
imul
pop
out
mov
jnp
push
sbb
xor
popl
and
insb
pop
jo
fbld
sahf
push
jo
iret
dec
ja
mov
lcall
and
cmp
push
fadd
fidivs
mov
pop
mov
mov
mov
cs
adc
stos
scas
or
dec
pop
jecxz
and
subb
aas
pop
and
in
adc
test
mov
jecxz
aaa
sbb
or
xchg
xchg
sub
fninit
imul
lahf
pop
dec
adc
jae
repz
jecxz
ret
and
and
ret
loopne
dec
iret
leave
stos
push
cmp
sub
shll
cmp
push
outsb
mov
push
repz
scas
xchg
test
sbb
mov
dec
push
pop
xor
fs
pop
les
sbb
sbb
jge
push
lcall
enter
cmp
cmp
dec
jne
and
loop
cmp
iret
lret
sub
ja
add
out
push
popa
xchg
addr16
out
cmpsb
push
mov
aam
mov
cmpsl
stc
sub
cmp
and
cmpsl
es
xchg
cmpsl
lods
mov
cmp
inc
push
xor
mov
or
mov
lcall
jne
xchg
add
push
dec
pop
addb
fsts
aas
cmp
sbb
repnz
repnz
movsb
pop
fisttpl
nop
and
insl
cmp
pop
fdivs
repz
pop
fcoms
gs
mull
ljmp
jle
adc
les
fdivp
jbe
sbb
mov
mov
into
and
roll
inc
test
ljmp
jge
adc
movsb
in
test
sub
lea
ret
cld
cli
xchg
insb
sub
int
inc
sub
mov
jno
xor
adc
mov
pop
push
and
jnp
adc
lret
in
adc
data16
insb
xchg
imull
scas
mov
pop
pop
subb
test
mov
mov
fwait
movsl
cli
pop
jae
mov
cmp
pushf
mov
sub
cmp
pop
out
mov
fmuls
gs
cmpsb
data16
push
dec
popf
sub
loop
movsl
mov
xchg
mov
adc
aaa
mov
add
mov
or
or
xor
aad
jns
adc
fnstsw
repnz
add
scas
pop
mov
xchg
pop
pop
lret
dec
xchg
adc
je
lahf
add
sti
cmp
push
jmp
dec
inc
xlat
aaa
movsl
in
shll
lcall
lcall
loopne
into
and
fbstp
add
js
testb
mov
cmp
out
out
xchg
pop
mov
sahf
sbb
and
leave
out
xchg
sti
iret
das
inc
jo
clc
sbb
xchg
aas
movsl
popa
and
jl
ret
in
fcoml
fisubs
sahf
das
dec
sbb
in
jnp
gs
leave
imul
adc
sub
mov
inc
mov
xchg
mov
xsha1
cmpsb
or
out
add
xlat
jmp
sbb
loopne
es
aas
dec
nop
mov
xorb
mov
pop
inc
adc
fstps
rcrl
adc
out
in
aas
mov
mov
jp
out
mov
leave
adc
psubd
fstps
dec
outsl
xchg
pop
ja
dec
outsl
or
pop
adc
add
aaa
les
das
add
dec
or
popa
in
ss
aas
dec
icebp
shlb
sbb
cmp
mov
cmpsb
xchg
and
push
outsl
ficompl
sti
fmul
pop
push
popa
xchg
push
loope
movsl
cmp
dec
aam
pop
aad
push
iret
pop
push
lods
mov
pop
call
sar
iret
or
ret
bound
and
push
and
cmp
push
es
movsb
add
dec
out
fcmovb
mov
test
insl
inc
repz
lret
pop
mov
cmpsl
in
loopne
clc
xchg
pop
in
pop
pop
jecxz
mov
adc
mov
divb
mov
lds
scas
pop
imul
mov
mov
mov
ss
out
xchg
mov
pop
xor
ja
jae
cs
pushf
or
imul
imul
or
pop
inc
push
xchg
sub
int3
pop
and
push
jmp
jmp
jecxz
sub
gs
cmp
pop
xchg
insb
cli
pop
mov
mov
lods
mov
adc
leave
push
mov
or
shr
or
daa
dec
pop
push
mov
sbb
popf
inc
cmp
fdivs
mov
push
jmp
fwait
decb
and
mov
push
je
dec
mov
pop
and
mov
lock
push
pop
mov
gs
mov
out
loop
mov
jnp
ror
xchg
mov
mov
push
xchg
sub
mov
imul
and
inc
insl
std
fadd
andb
dec
je
xchg
jne
adc
sti
jl
mov
mov
test
push
mov
push
or
push
dec
mov
sbb
sub
add
inc
test
jns
add
or
inc
cmp
mov
push
xor
nop
dec
cld
orb
mov
in
and
adc
or
mov
in
les
stos
xor
in
inc
rcr
jnp
adc
or
jecxz
mov
jne
push
cmc
add
push
ljmp
test
mov
ljmp
inc
mov
push
ss
add
xor
mov
sti
stc
push
cltd
sbb
jo
cltd
lret
adc
push
xchg
lods
mov
stc
out
adc
ret
push
push
lock
push
stos
rorl
fsubs
mov
mov
inc
jl
shlb
sub
test
or
xchg
jo
aam
push
sbb
into
stc
and
bound
jae
clc
push
fildl
push
pop
mov
xchg
push
int3
addb
lret
push
scas
push
int
out
orb
ja
ljmp
xchg
test
mov
mov
push
sbb
cmpl
adc
pop
cld
sub
jnp
mov
adc
push
mov
ss
mov
mov
inc
lret
js
mov
int3
outsb
dec
or
jmp
mov
enter
lods
push
inc
mov
jo
mov
divb
cmpsl
aam
cwtl
pop
fwait
pop
mov
mov
and
icebp
push
push
mov
mov
into
mov
add
leave
mov
shll
push
shlb
repnz
mov
inc
lock
lret
adc
inc
mov
and
jle
push
and
push
mov
add
lret
sbb
test
test
aad
imul
inc
pop
es
cmp
mov
int3
mov
mov
int
pop
ljmp
dec
mov
mov
pop
ds
mov
xor
push
cwtl
js
mov
fdivr
jg
mov
sbbb
in
push
mov
lds
in
out
add
push
cmp
add
adc
jns
fcompl
and
dec
dec
pop
sbb
dec
xor
mov
dec
xchg
ljmp
mov
ljmp
je
in
icebp
sub
out
jle
rolb
rcrl
mov
xor
ret
gs
gs
mov
jnp
xor
push
xchg
negl
in
cmp
pop
jg
sub
test
fsubrl
xor
and
adcl
push
ss
fnstenv
lea
and
adc
fs
aas
insl
lds
loop
addr16
insb
int
sbb
pop
jmp
add
xchg
sbb
ja
jg
mov
xchg
jg
hlt
inc
gs
pop
je
inc
push
jb
shlb
scas
ret
lods
out
adc
enter
outsl
aad
push
sbb
or
mov
jno
mov
leave
aaa
repz
adc
shlb
or
mov
xchg
cltd
inc
mov
lods
cwtl
inc
sbb
aam
sub
push
leave
mov
mov
adc
shr
inc
ljmp
daa
insl
sahf
out
cmp
jl
mov
cmpsl
mov
pop
jp
sub
in
mov
insb
sub
push
shlb
addr16
ret
rcrb
sub
imul
cmp
sub
or
addps
mov
xchg
xor
inc
popa
pop
cmp
xchg
movsl
lcall
sbb
out
push
addl
call
push
sarl
cmp
fwait
ja
mov
pop
inc
test
pushf
adc
das
ds
hlt
loope
je
xchg
jne
pop
sbb
insl
lods
sbb
xchg
dec
iret
or
mov
sub
sahf
mov
push
loope
sbb
loop
sub
or
dec
xchg
out
fnstcw
xchg
jo
lds
loop
scas
push
adc
add
dec
mov
inc
in
fisubl
pushf
sub
sbb
mov
dec
mov
push
loope
enter
mov
jbe
jecxz
xlat
jns
mov
lds
mov
push
ja
cwtl
ljmp
jbe
dec
aaa
arpl
jmp
movsb
outsb
insb
pop
cmp
cmc
xor
mov
jne
loope
and
repz
lds
lret
add
clc
or
test
or
sbb
mov
or
scas
or
test
add
mov
int
aad
cmpsl
cmp
fidivs
xor
pop
dec
jno
add
jge
pop
pop
in
out
mov
sub
lcall
dec
dec
and
jle
imul
xchg
xorl
mov
gs
adc
jno
mov
into
xchg
jno
jg
cwtl
insb
jp
dec
xchg
fldln2
cmpsb
xor
xchg
sbb
pop
xorl
dec
mov
push
dec
mov
xchg
add
pop
push
mov
in
xchg
push
lahf
in
and
cmp
sbb
bound
jns
aas
sbb
and
pop
adc
mov
cmp
das
loope
push
jo
repnz
cmpl
mov
nop
stos
arpl
mov
std
into
sub
push
push
lods
fmuls
les
mov
push
insb
pusha
int
ret
push
xchg
cmp
jp
xchg
dec
xchg
aad
inc
ljmp
loopew
sub
aas
mov
dec
out
inc
sub
out
lahf
aaa
jb
adc
cmp
push
push
or
lahf
push
fiaddl
mulb
addr16
out
jnp
xor
gs
fldcw
test
mov
aam
cmp
lea
cmpsb
ds
cmp
xor
idivl
xlat
int3
leave
jno
xchg
xchg
push
add
or
ret
ds
and
stos
inc
out
loopne
clc
out
pop
clc
mov
mov
scas
jle
lahf
jnp
or
add
dec
dec
sub
pop
and
push
add
sub
xorl
int3
pop
and
sbb
cmp
adc
movsl
or
test
pop
orl
ljmp
dec
test
scas
jbe
inc
lods
pop
scas
push
xor
add
inc
mov
es
fidivrs
lds
mov
cmp
push
imul
scas
jge
lahf
inc
sbbb
xchg
dec
imul
stos
cmp
gs
lret
inc
inc
movsl
jne
and
jp
lock
call
adc
xor
outsl
sbb
lahf
or
cmp
adc
mov
and
sbb
xchg
js
fwait
outsb
jno
pop
mov
dec
sub
dec
mov
mov
or
addr16
in
cmp
or
aaa
imul
or
sbbl
hlt
add
andl
xchg
outsb
lret
stos
popa
push
leave
add
cmp
cmpsb
int
sbbl
popf
pop
repnz
fistps
movsl
adc
bound
xchg
lahf
pop
mov
lods
dec
pop
inc
xchg
lcall
hlt
pop
pushf
xlat
mov
and
dec
jecxz
dec
adc
nop
and
iret
es
jo
xor
icebp
xchg
pushf
clc
xchg
jle
out
fsubp
mov
ljmp
fcmovnb
xlat
jnp
jo
call
jno
outsb
aad
dec
jl
je
mov
fbstp
loop
cmp
mov
dec
and
arpl
jno
xor
push
fs
mov
aad
fwait
push
push
or
fisubrs
lret
mov
push
jno
xor
pop
int
adc
add
and
or
add
dec
scas
adc
lahf
lods
or
je
jae
sbb
pusha
jb
xorb
cltd
in
int3
into
sbb
add
mov
in
jbe
in
pop
sub
adc
mov
jg
lods
scas
insl
outsb
and
ret
cmpsb
mov
push
add
dec
push
inc
add
ss
negl
mov
push
scas
sbb
outsb
push
cwtl
lods
ret
xchg
jo
call
ljmp
fadd
add
xchg
jae
aad
leave
fistpll
mov
adc
xchg
mov
push
dec
mov
mov
lahf
rolb
jb
cli
call
inc
xor
test
in
cmpsl
xor
in
in
or
inc
push
sahf
pop
movsb
cmpsl
nop
insb
js
icebp
push
ds
sti
push
in
jne
or
test
xor
mov
insb
xchg
mov
mov
pop
adc
mov
rolb
adc
add
mov
lahf
lahf
fs
call
or
push
push
cs
sbb
add
call
sar
inc
and
lcall
cmp
std
cmpsl
cmc
das
and
pop
pop
ja
push
out
jp
test
xchg
dec
xchg
call
push
decb
fimuls
sbb
dec
xchg
das
xchg
dec
inc
lea
test
adc
xor
sub
inc
out
sub
jns
inc
jo
ror
sbb
and
dec
notl
xchg
mov
cs
xchg
pop
pop
sub
stos
pop
cs
adc
push
ja
jns
js
dec
jmp
jle
sahf
call
adc
jns
sub
xor
pushf
mov
mov
nop
push
pop
mov
rorl
or
xor
xor
push
sub
push
jb
push
fcmovnbe
fldcw
xchg
sarb
cmp
je
cld
repz
outsb
inc
ret
mov
jge
add
ja
push
mov
sbb
cmp
xchg
mov
cli
push
aaa
rolb
jg
ljmp
and
dec
repz
je
fcomps
out
test
push
inc
jl
aas
arpl
push
mov
fdivrs
add
dec
hlt
in
and
loopne
rcrb
cmpb
fucomi
and
mov
push
movsl
sarb
or
push
movb
pop
fldl
mov
stos
xchg
and
push
dec
roll
mov
ljmp
sub
outsb
lds
cmp
in
sbb
lcall
and
add
orl
add
mov
shrb
push
sub
sbb
sti
mov
xor
adc
outsb
outsl
ret
data16
lock
call
mov
cwtl
xor
pop
jnp
jge
and
push
adc
xlat
push
rcll
or
stos
js
cmp
mov
rcll
push
jecxz
pop
inc
es
in
ret
inc
pop
in
lods
mov
outsl
pusha
adc
loopne
pop
mov
into
pop
ja
jmp
out
mov
daa
cmp
ds
popf
mov
mov
mov
lahf
lods
imul
call
adc
loopne
stos
pusha
dec
sbb
ret
aam
jb
sbbl
and
mov
cmpsb
inc
dec
sbb
out
xchg
jmp
dec
mov
pop
xchg
and
lods
insl
add
jae
je
and
gs
push
ljmp
mov
pop
jnp
xlat
into
push
adc
mov
push
inc
int3
mov
stc
cmp
fsubs
and
adc
ja
gs
shlb
sbb
dec
cmp
lcall
or
mov
insb
pop
leave
cmc
js
cmpsb
jle
jmp
push
sbb
pop
shrb
scas
mov
fstl
pop
dec
mov
and
aad
xor
pusha
aam
mov
cmp
xlat
mov
mov
add
scas
cmp
insl
xor
inc
decb
or
fwait
std
jle
sti
mov
jmp
inc
push
inc
xor
leave
pop
sbbl
xor
xchg
dec
jecxz
sub
xlat
xor
add
into
dec
mov
xchg
in
jl
xor
test
xchg
fwait
adc
test
pop
clc
rcll
int
mov
mov
jecxz
or
or
leave
icebp
pushf
xchg
mov
lcall
mov
cmc
das
lcall
ds
cwtl
mov
push
lods
in
fidivrl
cmc
add
pop
pop
push
add
addr16
mov
mov
rclb
inc
imul
dec
dec
xchg
jb
sbb
pop
xor
mov
sar
into
sub
sbb
call
jmp
call
cmpsl
sbb
inc
in
stos
lods
jnp
dec
aad
inc
in
adc
mov
test
or
cwtl
adc
icebp
aaa
push
frstor
lods
mov
aad
out
sub
lahf
cs
jns
and
int
test
rcll
int
out
icebp
dec
roll
sub
add
mov
mov
push
adc
leave
push
out
lahf
int
pop
cltd
push
repz
adc
or
jnp
sbb
pop
xor
or
movsl
mov
push
add
fs
mov
sbb
push
push
mov
cmp
data16
dec
rcr
mov
xor
stos
iret
loop
loopne
rolb
adc
mov
jg
mov
sahf
pusha
inc
aad
es
jne
aam
aam
push
and
ja
ret
sbb
inc
js
imul
arpl
jne
jno
mov
cld
fistpl
push
mov
shlw
xchg
add
cmpb
icebp
stos
adc
jecxz
adc
lods
cli
jne
cmp
cwtl
pop
and
jo
scas
jmp
xor
cli
repz
mov
adc
outsb
or
das
ret
xor
cwtl
out
add
jmp
mov
cltd
jo
lea
jmp
mov
lahf
lods
rolb
iret
cltd
faddl
ficompl
pop
jp
add
lret
sbb
lods
outsl
movsb
pop
inc
pop
das
mov
mov
shl
int3
aam
mov
add
daa
mov
inc
mov
in
cwtl
out
xor
cmp
jb
es
pop
and
pop
sti
jg
mov
es
inc
adc
pop
xchg
and
ljmp
inc
enter
and
je
mov
cmp
popf
dec
cmp
sub
mov
jl
mov
fstpt
into
pop
cli
insl
int3
push
jecxz
sbb
xchg
rorl
jp
cmp
aam
and
or
aaa
fcmovnbe
jbe
mov
test
test
jb
inc
sub
arpl
push
mov
fbstp
data16
add
push
push
lret
jae
imul
sub
cmc
jp,pn
inc
loop
inc
test
and
andb
cwtl
outsb
jns
mov
lret
xor
push
fidivrs
aam
cwtl
idivl
mov
repz
subl
hlt
ja
aad
add
fsubrp
aaa
clc
adc
or
loop
push
or
leave
sti
xchg
mov
dec
lock
stos
stos
push
jae
sbb
jmp
cli
aad
adcb
xchg
in
ret
sbb
movb
addr16
dec
js
call
arpl
dec
fwait
fwait
add
lods
loope
push
and
les
stos
add
sub
dec
and
sbbb
jo
xchg
push
lock
js
jle
imul
cmp
mov
mov
mov
inc
mov
hlt
pop
dec
pop
lds
insb
nop
jge
and
mov
or
aas
and
jbe
scas
notb
out
cmp
fwait
mov
leave
push
ljmp
sub
xlat
add
adc
loop
mov
add
jge
jmp
bound
mov
dec
cli
or
sub
mov
ds
jb
jbe
pop
lods
dec
xchg
out
aad
movsl
mov
cmc
xor
in
ljmp
icebp
outsl
out
jbe
adc
rcll
inc
aaa
add
or
dec
pushf
pop
les
xor
ficoml
xchg
cmc
out
cmp
xchg
fmul
cwtl
lods
gs
xchg
cmp
xchg
dec
test
mov
mull
push
shl
lret
mov
test
rcrb
mov
int
xor
cmp
lcall
insl
mov
dec
and
js
cmc
arpl
cwtl
inc
pushf
or
jmp
xchg
mov
lahf
mov
dec
mov
das
adc
ret
add
mov
fnstsw
inc
data16
leave
push
mov
pop
clc
inc
mov
mov
push
push
push
call
push
aaa
dec
fmull
dec
pop
and
jge
roll
sub
xchg
lret
sbb
ret
fsubrs
sub
and
sbb
mov
ljmp
push
xor
scas
dec
xor
lods
sub
or
in
dec
mov
lcall
dec
mov
jg
fldl
into
fisttpl
xor
insl
cld
xchg
dec
xchg
push
cmp
daa
cmp
or
nop
jmp
dec
imul
cmp
jp
cmp
lods
add
cld
sub
cs
into
add
adc
xchg
arpl
cmp
repnz
sbb
jno
popa
add
xor
shl
xchg
xchg
rolb
jb
arpl
nop
ds
sub
pop
pop
popa
lcall
scas
call
adcl
rclb
mov
sub
js
jmp
in
push
test
xor
cld
pop
mov
mov
sbb
int3
pusha
roll
xchg
dec
sahf
mov
or
jbe
cltd
inc
jns
out
jb
int
cmp
fs
pop
xorl
add
cmpb
push
sahf
rorl
inc
inc
fs
inc
mov
dec
sbb
mov
hlt
repnz
je
mov
hlt
popf
inc
mov
imul
and
cmp
sar
in
jbe
jge
setae
adc
mov
lods
cwtl
inc
jbe
mov
mov
mov
int
mov
cltd
pusha
fcompl
jnp
addr16
dec
add
mov
or
outsb
in
sub
gs
dec
mov
andb
dec
cmc
shll
pushf
in
or
jl
cmc
cld
insl
call
inc
lock
std
pop
in
or
sbb
jns
dec
int
sub
stos
icebp
inc
mov
mov
stos
push
and
mov
push
ret
add
les
pop
ds
inc
out
dec
jnp
lods
lock
add
int3
mov
std
ret
in
xchg
push
push
rcll
or
rcl
pop
push
fwait
daa
push
out
dec
cmpsl
mov
push
pushf
popf
push
test
insb
dec
mulb
xor
mov
bound
movsb
jo
cmpsl
das
or
cmp
mov
or
lock
out
cld
cmp
adc
mov
jo
mov
pop
push
add
push
nop
add
dec
fdivrl
push
and
mov
mov
push
in
xor
cmp
outsl
movsb
lods
add
inc
into
or
inc
orl
dec
adc
out
add
ret
push
lock
xchg
push
push
add
dec
aaa
cmp
inc
mov
int3
sbb
daa
xor
mov
jbe
xor
enter
adc
pop
fucom
inc
push
mov
xor
popf
cmpsb
cmp
fdivrs
dec
out
pop
out
mov
pop
iret
xchg
jecxz
push
add
stos
adc
jne
fdiv
stos
xchg
jns
orb
jge
xor
pop
mov
jns
loope
sbb
std
pusha
shll
aaa
xlat
sbb
push
sub
gs
cwtl
repz
aam
ror
decb
lahf
inc
xchg
ja
inc
stc
insb
fwait
sbb
mov
into
push
jp
dec
mov
jbe
sub
ret
insb
inc
add
push
and
dec
xchg
push
inc
or
cmpsl
and
pop
fdiv
mov
sbb
arpl
jg
xchg
cmp
dec
inc
js
testb
leave
mov
adc
xchg
add
xchg
or
cmp
outsl
sbb
scas
pmaxub
ds
sahf
divb
cmp
lods
or
repnz
cltd
cli
mov
jb
inc
cmpsl
jbe
pop
call
push
insl
jo
push
inc
adc
adc
xchg
xor
jge
add
adc
mov
stos
jp
js
mov
pusha
jns
sub
or
adc
enter
cld
ret
inc
add
ficoml
lahf
jae
ja
sahf
jle
mov
ja
stos
dec
call
mov
out
and
rcll
shrl
dec
xchg
fwait
std
mov
repnz
cmp
ja
addb
mov
inc
xlat
arpl
adc
mov
or
sub
sub
add
xlat
pop
les
and
cmp
pop
push
xchg
pushf
sub
mov
popf
mov
adc
jmp
ret
xchg
test
mov
mov
lods
orl
stc
repnz
scas
xchg
iret
mov
ficoml
pop
call
xor
mov
adc
subb
and
insl
nop
jp
or
daa
repz
repz
cli
ljmp
imul
orb
rcrb
sti
pop
ficomps
lock
test
sub
testl
ljmp
testb
outsb
dec
adc
mov
add
call
and
lcall
je
jge
pop
inc
cmp
xor
jno
or
iret
pop
lods
or
bound
mov
std
dec
std
cmpsb
fst
mov
jbe
inc
cmpl
jnp
js
xchg
icebp
int
dec
sbb
hlt
jmp
xchg
mov
jb
jno
movsl
iret
out
in
inc
gs
mov
mov
mov
cmc
leave
mov
and
xor
add
cs
addr16
gs
int
aam
lret
dec
jne
sahf
fisttps
and
pop
push
je
sub
or
fcompl
scas
jecxz
in
clc
pop
fnstenv
dec
mov
test
sub
jae
xorb
push
sahf
test
mov
xlat
out
jg
movsl
mov
pop
rcr
add
or
push
mov
pop
bound
mov
les
imul
xchg
das
xchg
int
pop
jb
mov
dec
push
out
js
sbb
jne
xchg
mov
daa
ss
inc
aas
cmpsl
cmpsl
leave
lret
mov
mov
and
pop
sbb
js
int
lcall
lret
aas
lahf
jne
orl
pop
in
sub
push
fdiv
stos
shlb
mov
sbb
push
sbb
mov
out
int
xchg
lret
cmpsb
cmpsb
dec
sbb
jl
push
lret
sub
inc
inc
and
jo
ficoms
bound
add
stc
pop
out
jl
loope
xor
mov
loope
es
inc
adc
jno
daa
jge
movsl
jge
mov
int3
nop
fists
push
inc
mov
mov
or
pop
push
rorb
jl
mov
push
das
mov
adc
cmc
or
adc
je
sbb
pop
inc
shrl
daa
pusha
mov
fwait
lds
out
push
xlat
fldt
cmpsl
xlat
mov
jmp
imul
push
insb
aaa
nopl
pop
mov
and
stos
jo
xchg
dec
jbe
pushf
in
test
dec
imul
test
insl
arpl
repz
mov
mov
nop
ffree
and
fs
les
ss
aaa
jmp
adc
add
push
sbb
loope
mov
test
cmpb
movaps
aam
sbb
mov
loope
xor
sbb
loope
dec
incl
dec
jge
adc
adcb
test
loop
out
push
mov
sub
leave
and
add
lahf
std
pushf
mov
call
jle
ficoms
mov
dec
xchg
push
add
loope
in
fstps
pop
xorl
sbb
aas
xchg
jg
shr
mov
xchg
leave
popf
xchg
sti
sti
push
mov
inc
cltd
pop
sbb
loop
into
sbb
sub
lret
push
mov
add
and
stos
fisubrl
sbb
loope
leave
andl
dec
adc
cmpl
fisttps
push
xchg
in
pop
ljmp
push
movsb
in
sub
mov
xchg
xor
or
into
daa
cmpsb
testb
xor
jb
rcrl
mov
dec
dec
mov
sub
mov
pop
nop
sti
mov
shll
popf
rclb
push
js
out
jne
aam
dec
fbstp
cmp
mov
add
inc
lds
adc
and
push
popa
dec
pop
inc
lods
jb
pop
fsubr
push
push
je
pop
test
data16
movsl
push
mov
sub
xor
stos
push
mov
cmp
mov
sub
loopne
rcr
insl
ss
sbb
add
ret
jg
mov
or
mov
rcrl
push
adc
data16
dec
ljmp
jb
add
dec
jb
nop
jb
arpl
pop
xor
xor
bswap
xchg
pop
sub
shll
rcl
xchg
mov
jnp
insl
fstpl
cmpsl
idiv
and
push
mov
std
mov
or
sbb
scas
addr16
stos
jg
adc
int
fwait
imul
mov
loope
inc
je
lret
jmp
scas
pushf
lods
aas
in
mov
push
in
xchg
xchg
movsl
xchg
sub
rol
fbld
outsl
lock
jno
mov
scas
jp
nop
in
lods
pop
js
ret
xor
lods
add
inc
pop
dec
mov
add
dec
faddp
pop
imul
sbb
stos
je
sbb
enter
inc
call
push
popf
fbstp
scas
add
mov
movsl
inc
mfence
push
dec
shrb
cmpsl
es
int3
aam
xlat
divl
inc
lods
ljmp
ret
ficoml
cwtl
inc
out
and
incl
xor
insl
loopne
pop
lods
cwtl
push
inc
sub
jne
out
clc
push
sub
push
daa
popa
data16
pop
jb
out
out
pushf
insb
pop
das
jns
pop
xor
push
movsl
or
jmp
ret
or
leave
sbb
and
sarb
add
fcomps
popf
scas
sbbb
ljmp
jbe
fidivs
scas
mov
jne
dec
pop
dec
pop
ret
mov
ljmp
mov
mov
repnz
xchg
outsb
dec
jne
out
mov
lods
scas
and
pop
out
repz
test
xchg
mov
mov
in
div
mov
test
scas
push
mov
test
js
mov
test
xchg
loopne
xchg
rorl
ljmp
pop
fwait
cmp
lods
inc
pmaxub
lahf
lret
or
fs
pcmpgtw
xchg
sub
les
dec
xor
movsl
int3
dec
and
inc
test
jns
loopne
cld
push
movsb
pop
divl
jae
subb
and
adc
cmp
out
int3
loopew
clc
addr16
mov
sahf
adc
sti
pop
addl
jecxz
jge
loope
or
scas
mov
js
mov
xor
sbb
dec
das
movb
mov
mov
leave
ret
xchg
stc
and
inc
es
jne
mov
ds
mov
mov
sbb
lds
test
mov
push
and
push
sub
sbb
mov
add
inc
push
arpl
scas
movsl
jb
insl
push
leave
xor
arpl
mov
cltd
dec
jno
mov
and
mov
pop
add
pop
in
xchg
into
jge
das
mov
enter
sub
cwtl
mov
loope
dec
or
dec
lea
mov
mov
test
mov
cltd
jbe
test
fs
and
enter
in
ret
cs
push
insl
addl
aad
cmp
push
mov
dec
fstl
mov
push
mov
push
add
cmc
or
repnz
push
mov
les
gs
test
addb
in
sbb
jo
mov
lret
adc
iret
rcrl
xor
idiv
jp
mov
test
xchg
lcall
in
pop
mov
adcb
je
arpl
repnz
les
int
insl
jl
add
dec
jmp
lahf
cmp
push
int
cmc
xchg
pop
sahf
push
mov
sti
popf
daa
lcall
xchg
jae
sbb
adc
sub
mov
mov
hlt
loope
xor
mulb
idivl
std
adc
fs
cmp
in
loopne
aas
adc
lea
lods
pushf
dec
repz
mov
imul
call
sbb
stc
icebp
inc
and
cmp
movsl
and
adc
mov
push
cmp
or
and
xchg
jno
inc
call
shll
fisubrs
leave
cs
jmp
sarl
and
or
jle
lods
cmp
ja
je
outsb
xor
pop
ss
push
mov
jmp
mov
cmpsl
cmp
pop
ret
and
jecxz
and
fxch
dec
leave
xlat
jp
fimuls
jbe
dec
outsb
daa
fucom
xor
mov
les
cmp
cmpsb
ss
adc
test
sbb
xor
fisttpll
add
add
push
pop
fcomip
icebp
stc
sbb
in
jnp
orb
push
int
pop
inc
pop
outsb
mov
push
push
das
inc
inc
cmp
jo
out
adc
mov
fstps
jne
loop
popf
cli
in
mov
sbb
or
or
addr16
add
cmp
outsl
loope
xor
dec
mov
or
sbb
jl
cmp
mov
mov
call
or
xchg
mov
std
gs
pop
arpl
push
aad
divl
sub
outsl
mov
cwtl
pop
sub
jnp
jecxz
daa
mov
cmp
cmp
leave
jns
js
scas
sbb
sub
into
nop
sub
xor
and
shrb
cwtl
add
mov
xchg
rorb
std
ds
mov
cmc
imul
or
mov
push
sbb
pop
andb
or
push
int
pop
push
movsb
inc
les
out
test
test
lcall
fs
cmp
push
mov
fisttpll
ja
sbb
push
imul
adc
xchg
xor
xchg
repnz
or
pop
orb
in
pop
pop
gs
scas
insl
xor
adc
or
ret
mov
rcl
cmp
icebp
or
hlt
mov
cmp
cmp
mull
inc
lock
inc
shll
push
pop
stos
jb
test
push
sub
mov
sub
lods
inc
mov
add
xlat
repz
mov
dec
and
in
xchg
es
cmp
rcl
ljmp
sbb
sub
loop
out
psllw
pushf
movsl
jns
dec
pop
push
or
pop
cmp
cmp
inc
pop
push
adc
sahf
sbb
xchg
xchg
adc
or
inc
mov
jge
sbb
sbb
cmc
jmp
daa
cld
lahf
add
shlb
pop
adc
xchg
mov
rorl
mov
popf
xchg
test
push
mov
std
cltd
add
cli
aaa
addl
inc
inc
mov
inc
cld
and
lret
push
enter
xchg
pop
sub
inc
into
sub
pop
pusha
out
lahf
cmp
pop
jae
or
js
xor
mov
stc
call
outsl
sub
xchg
sarb
rcr
pop
in
dec
xchg
arpl
and
fldenv
int3
sub
outsb
sahf
mov
mov
enter
xor
mov
or
mov
stos
or
lods
std
arpl
xchg
jg
lock
sti
es
mov
mov
push
cwtl
js
lds
lds
rorl
cltd
cs
aam
shlb
push
aam
mov
fld
jbe
aas
dec
push
adc
rorl
pop
mov
cmpsb
mov
cmpsl
sbb
mov
dec
jg
xor
add
jmp
lahf
jle
in
xchg
in
mov
dec
mov
lret
fdiv
movsb
mov
mov
mov
popf
push
dec
inc
mov
jge
outsl
mov
xor
vmread
fucom
sbbb
lock
mov
add
nop
push
jmp
mov
cmp
mov
pushf
pop
jp
lock
add
dec
mov
sti
xor
cmp
mov
shrb
pop
repnz
dec
or
fiaddl
ja
xchg
cwtl
mov
jecxz
mov
pusha
repz
pop
aad
inc
xor
mov
inc
add
sbb
fcomps
lret
insl
popa
mov
fldt
sbb
inc
mov
jo
lahf
mov
dec
scas
pushl
pushf
test
mov
imulb
mov
adc
sbb
dec
addr16
in
add
xchg
sub
cmp
adc
xchg
mov
sbb
adc
cwtl
cli
in
subb
sbb
aaa
sbbb
sbb
xor
jge
pop
cmp
xchg
and
or
xor
outsb
call
test
enter
adc
jae
mov
inc
test
mov
xchg
xlat
push
stos
or
pop
sub
es
mov
mov
inc
mov
movsl
adc
inc
jno
pop
push
dec
movsl
fucomp
xchg
sbb
add
das
push
cmp
push
pop
shrl
xchg
lahf
mov
in
lock
sub
pop
fsubrs
or
xor
ret
xor
push
idivb
mov
les
les
ret
leave
xchg
or
pop
jl
repz
jbe
xor
test
bound
add
pop
cs
loope
add
push
lret
je
notb
or
es
and
jge
jl
jge
sbbl
dec
jmp
sarb
movsl
jge
push
int
negl
iret
es
mov
xchg
loop
loopne
mov
rcll
push
sub
loope
xchg
push
lahf
fs
cwtl
adcb
mov
lods
repz
inc
xchg
cld
push
sub
xchg
mov
inc
fldt
xor
dec
das
rclb
jge
notl
or
testl
mov
add
pushf
ret
sahf
mov
push
xchg
jns
and
rcll
mov
and
outsb
mov
or
mov
xchg
out
adc
add
sub
mov
jmp
loop
mov
push
lock
xlat
pop
scas
out
ss
out
xchg
scas
mov
cltd
aas
inc
lcall
and
test
rcrb
and
mov
mov
inc
das
shr
dec
fisttps
arpl
sub
sub
adc
and
popf
jbe
push
sub
push
push
incb
cmp
leave
push
call
push
add
push
mov
jge
and
sbb
xchg
in
cmp
sarb
dec
xchg
and
idivb
cld
mov
ret
or
mov
mov
push
bsr
rorl
push
push
jle
push
pop
stc
out
sub
cmpb
mov
rorl
fisttpl
sbbb
ds
cli
lock
shll
sbb
sub
xchg
les
mov
jnp,pt
sub
shll
pushf
lds
mov
jmp
in
xor
or
dec
loop
jnp
mov
xor
push
mov
rcrl
into
repz
inc
dec
push
xchg
push
jecxz
mov
inc
hlt
mov
leave
andl
xor
ss
aas
int
daa
adc
sub
ss
les
or
ljmp
mov
in
jg
push
inc
sbb
leave
int3
or
xor
pop
inc
push
aaa
or
adc
clc
mov
mov
mov
mov
xor
add
mov
roll
mov
or
dec
sub
out
adc
xchg
jo
test
int
imul
aas
ret
cli
jbe
push
inc
scas
rcl
pushf
mov
imul
fsubrs
pusha
es
inc
add
jae
mov
pop
add
mov
xor
in
mov
mov
pop
pusha
aas
fadd
pop
or
inc
sub
fnsave
xor
jne
cmp
dec
push
cmpsb
fildl
aas
dec
mov
sahf
daa
insl
decl
sti
xor
testl
mov
cld
out
mov
push
ss
jp
fwait
push
cmpsw
rol
xor
xor
sahf
movsb
es
lock
and
jb
or
in
push
mov
clc
inc
mov
push
mov
mov
icebp
mov
mov
jae
mov
cmpsl
fnsave
jb
pop
or
lahf
sarb
lods
dec
dec
loope
aam
mov
fs
mov
or
aas
adc
std
rcrb
aam
dec
outsl
scas
mov
and
xchg
jp
inc
xchg
test
add
xchg
cmpsl
mov
bound
push
orb
adc
int3
into
xchg
pmullw
cld
dec
pop
dec
xchg
stos
or
fldenv
inc
push
mov
fstpl
in
jmp
fcoml
inc
mov
faddl
sub
insb
mov
cmpsl
je
gs
cmpsl
add
and
mov
fsts
push
nop
arpl
xchg
jecxz
cmp
jno
xchg
sub
xchg
aaa
js
fistpll
fcoml
inc
mov
insb
or
add
jmp
lea
push
imull
aad
repnz
xchg
or
orl
adc
pop
sub
clc
jecxz
icebp
popf
stos
das
mov
mov
mov
xchg
push
call
cmpsl
xchg
and
imul
fdivrp
xor
lret
stos
and
mov
push
push
out
add
rcrl
dec
lods
inc
jne
scas
xor
mov
shll
cmp
lods
pop
dec
cltd
xchg
int
mov
insb
or
jb
sbb
push
in
mov
popa
xchg
loopne
pop
mov
or
in
hlt
enter
push
push
push
popa
aas
jne
imul
jo
sbbb
xchg
in
or
mov
int
popa
jge
pusha
fstl
push
push
pop
push
push
repz
adc
xchg
gs
jbe
ljmp
sbb
repnz
adc
std
xchg
fiadds
pushf
in
cmp
or
jge
push
sbb
mov
dec
pop
int3
cld
fcmovne
push
mov
lock
into
xchg
mov
clc
cwtl
sahf
mov
rclb
jae
into
push
inc
daa
mov
mov
shlb
fcmovb
pop
sub
shll
dec
std
push
xor
in
cmc
cmpsl
adc
xlat
xchg
sub
outsl
add
movsb
adc
adc
clc
movsb
aad
int3
xchg
dec
cmp
sbb
xor
repz
inc
xor
int3
leave
push
rcl
dec
clc
add
fbstp
push
data16
lock
rolb
pusha
insb
xor
imul
jb
in
pop
push
mov
test
movsb
xor
outsl
fdivs
xchg
ss
mov
pop
repnz
stc
add
mov
ja
test
inc
loop
mov
mov
popf
js
enter
test
cmc
push
clc
mov
pop
mov
in
push
leave
sbb
add
fisubs
mov
in
inc
pop
push
mov
cld
mov
out
push
mov
mov
and
repz
ja
xchg
movsb
mov
into
gs
sub
jns
dec
inc
clc
dec
mov
cwtl
cmp
cltd
loope
arpl
mov
adc
ficoml
popl
adc
addr16
add
imul
adc
ss
leave
rolb
scas
pop
out
test
mov
dec
rolb
repnz
outsb
dec
std
dec
aad
cmpsb
or
jb
adc
and
int3
fbld
cmpsb
mov
mov
jecxz
std
mov
jo
pushf
jecxz
stos
ret
fwait
ret
shrb
fstpt
mov
gs
or
xor
dec
push
mov
dec
lds
push
mov
std
imul
test
fwait
pop
inc
shr
inc
orb
xor
pop
lahf
lock
popf
out
adc
movl
scas
rcrl
test
xlat
mov
jl
roll
or
or
repnz
mov
mov
call
jmp
pop
lcall
lahf
mov
fsubrl
popf
loopne
add
sbb
lahf
cmp
sar
mov
cld
add
add
std
out
and
sbb
lahf
sub
rorb
nop
pop
push
sbb
je
push
jmp
push
mov
fdivl
jp
cwtl
jo
lods
lret
and
lock
stc
mov
sub
lock
enter
loope
fdivrl
jle
mov
dec
add
mov
sbb
popa
repz
lret
std
xchg
mov
shl
push
mov
pop
aad
mov
es
cmpsb
pop
fstps
xchg
icebp
or
pop
lods
sahf
inc
lds
mov
out
hlt
pusha
xchg
divb
jno
xor
dec
jo
xchg
xorb
test
xor
dec
loop
push
mov
out
sub
jmp
dec
push
stc
jmp
push
pop
jmp
sbb
sbb
clc
jl
sub
les
lods
push
pop
clc
ret
es
stos
mov
ds
cmp
arpl
add
rclb
sbb
in
or
jno
rolb
pop
sub
dec
lret
call
xchg
in
das
js
sbb
fistpll
mov
ds
xor
faddl
aad
scas
call
nop
xor
xchg
dec
std
jno
rclb
mov
stos
mov
cld
cmp
pop
in
mov
and
repz
add
and
rcrb
mov
repnz
add
sub
cmpsb
lds
push
in
jno
dec
ret
repnz
insb
mov
or
jl
mov
scas
inc
mov
mov
imull
shll
lds
push
popa
cmpl
cmpsb
jo
adc
sbb
rolb
lds
fidivrs
leave
pusha
bound
shll
clc
jge
or
add
ds
push
mov
add
call
idivl
dec
jnp
cmpl
out
mov
push
jbe
xchg
jmp
orl
in
int
xchg
pop
inc
fisubs
popa
sub
and
cmovg
stos
fisubrl
push
adc
pop
gs
push
cli
sbb
xchg
ret
mov
push
cmp
or
or
lds
xchg
repz
adc
stc
sub
movsl
mov
jg
aam
js
and
add
pop
sub
fs
inc
imul
pop
mov
dec
and
scas
sub
sbb
gs
xor
adc
testl
sbb
mov
loop
xchg
inc
pop
sbb
loope
jp
xchg
clc
add
dec
dec
punpcklbw
ljmp
xchg
insb
ds
or
xchg
cmp
push
arpl
dec
xchg
mov
jge
sbb
mov
mov
xchg
cld
pop
jg
movsb
fstpt
movsl
mov
pop
pop
enter
cli
bound
adc
pushf
andl
lods
pop
jecxz,pt
xor
add
loop
pop
inc
cmp
pop
in
les
rorb
mov
push
xchg
cmp
repz
adc
ret
add
int3
push
sub
cli
mov
sbb
lret
mov
add
jmp
testb
es
ljmp
inc
lret
sbb
or
or
mov
cmp
jecxz
sub
dec
cmp
or
aas
push
push
ljmp
inc
loopne
cmp
sub
sub
pop
sub
int
popf
lret
dec
pushf
jmp
test
movsb
call
sbb
out
mov
push
lahf
int
push
sbb
cmp
pushf
pop
bound
or
hlt
push
pop
insb
les
mov
adc
movsl
aas
cmc
orl
cmc
shl
cwtl
shl
add
mov
xor
push
sbb
fnstsw
xchg
xchg
dec
out
in
aas
out
fadd
data16
adc
out
es
jl
test
in
dec
sbb
lea
pusha
test
mov
jae
jmp
mov
mov
aas
or
sub
ret
jns
hlt
mov
into
ljmp
xor
mov
test
xor
daa
sub
inc
test
test
xor
adc
ds
mov
jmp
jle
dec
aam
or
sub
adc
sub
jp
push
mov
inc
inc
repz
mov
movsl
push
icebp
pop
cmp
out
sub
cld
sahf
cmpsb
pop
shll
cmp
jle
inc
lock
lods
sbb
mov
movsb
das
cwtl
lea
jbe
fdivrs
outsl
inc
jp
sahf
mov
mov
push
clc
rorb
mov
nop
popf
ficoml
pop
or
pop
xchg
popa
cmp
loopne
movsl
sub
inc
lea
mov
and
jnp
add
xchg
or
mov
xchg
mov
xor
sub
imul
cmp
sahf
stc
dec
pop
xor
sub
mov
scas
aaa
popf
lahf
shlb
pusha
mov
sahf
ret
cltd
lods
cs
xor
sbb
mov
or
push
es
aaa
sub
in
push
movsb
xor
aaa
mov
push
dec
aad
jecxz
hlt
xlat
ss
shrb
pop
pop
loop
in
xchg
loop
hlt
test
xor
mov
decb
cmp
mov
sbb
lcall
iret
mov
out
mov
cmc
jmp
cwtl
es
sbb
add
arpl
pop
jge
jmp
pusha
inc
add
adc
int
push
ja
sub
cld
popa
cld
shll
jp
cmpsb
sub
es
mov
sbb
mov
push
add
lea
inc
pop
mov
inc
arpl
mov
jb
jo
test
add
add
loopne
daa
mov
push
or
cwtl
mov
mov
fstpl
jae
and
jecxz
pop
inc
cld
sbb
mov
fldcw
arpl
push
and
pop
add
sub
mov
and
sete
mov
or
mov
mov
rclb
adc
cmp
push
ss
mov
jns
lret
imul
dec
adc
lret
fcompl
or
pusha
ljmp
or
jl
push
fcmovb
xor
cmp
mov
ss
jne
in
sbb
hlt
je
dec
daa
adc
jb
or
mov
in
rorl
xor
jg
pop
les
dec
push
pusha
sarl
and
dec
jg
ror
lds
aaa
imul
jb
lret
or
cltd
sub
or
lds
dec
push
das
mulb
in
sti
inc
cmpsb
inc
arpl
xchg
ds
push
sub
sbb
call
es
pop
xor
and
ret
pop
insl
aam
scas
or
pusha
imul
mov
dec
jecxz
dec
xchg
sub
leave
imul
rclb
sbb
mov
add
inc
mov
adc
jo
and
shl
xchg
cwtl
and
pop
mov
aam
ret
std
gs
lahf
sub
or
mov
mov
push
sub
inc
in
mov
jo
sub
std
pop
nop
jne
push
test
jecxz
and
mov
xchg
pusha
out
mov
xchg
and
call
sbb
or
fwait
or
out
je
lock
mov
or
add
je
jl
jmp
test
adc
rol
nop
add
xor
int3
mov
or
adc
cmp
decl
jno
adc
in
dec
ja
lcall
jge
pop
fists
mov
jge
and
add
lds
push
fdivr
add
gs
jb
mov
jbe
imul
pusha
into
push
dec
inc
shr
cmc
loope
jnp
clc
mov
repz
nop
jno
mov
jae
mov
push
int3
repz
rclb
inc
aam
pusha
pop
xchg
addr16
mov
dec
divb
sub
lret
fistpll
push
negl
stc
std
jo
addr16
sub
fcomp
and
or
pusha
imul
lret
std
jle
cltd
shlb
adc
mov
mov
sub
push
dec
push
jg
sub
call
dec
push
sbb
daa
jne
mov
push
or
data16
iret
cltd
lret
dec
lods
dec
dec
xchg
int
push
ret
or
jnp
fcmovnb
enter
popa
test
int
fstpt
es
xchg
mov
push
popf
jno
pop
jo
jg
jne
and
cli
adc
aad
lcall
outsb
pusha
inc
fistl
stos
shl
xchg
out
push
stos
push
mov
call
mov
mov
mov
adcl
loope
add
sbb
stc
icebp
cltd
add
pop
push
mov
xor
mov
lahf
jg
jno
dec
sbb
push
loopne
xchg
mov
mov
pop
or
into
push
fwait
in
cmp
ret
ds
push
imul
jne
arpl
rol
jbe
cmp
je
inc
in
inc
out
add
add
incl
adc
push
push
jne
lcall
cmpsb
sub
rcr
dec
sbb
xor
lret
jo
mov
sub
jb
xor
pop
pop
xchg
mov
pop
or
sbb
sub
pushf
insl
outsl
mov
cmp
inc
push
sub
inc
sbb
and
cmp
jmp
mov
into
sahf
gs
data16
ss
push
fbld
fs
and
lret
lock
jb
push
popf
xchg
test
jle
fstps
outsl
mov
and
stos
shr
pop
pusha
int
xor
into
inc
mov
mov
or
inc
insl
not
push
fsqrt
popa
test
rcrl
pop
mulb
ss
xchg
add
pop
lcall
dec
pop
imul
dec
mov
xchg
jp
push
subl
xor
pop
xchg
mov
sbb
xchg
cmp
fists
cmp
jle
sarb
cmp
bound
mov
addr16
and
bound
ss
or
cmp
jnp
pop
lcall
push
nop
ds
mov
ds
adc
dec
cltd
fisubs
and
add
push
push
mov
mov
mov
ds
pop
jge
xlat
adc
and
out
xchg
jns
shrb
xchg
fnstsw
ret
xor
or
pop
sub
stc
sbbl
out
or
pop
cltd
push
jmp
repnz
pusha
adc
add
bound
ja
fadd
mov
and
lds
mov
lahf
pusha
xor
push
and
in
rcrb
xor
enter
pop
test
adc
add
scas
iret
adc
dec
push
aas
popf
push
sti
hlt
in
mov
xor
incb
enter
xor
mov
dec
sub
loop
sti
add
popf
pusha
sbb
xor
fucomi
stc
or
aaa
mov
rcll
das
sub
mov
inc
jno
aaa
pop
mov
mov
xchg
repnz
in
sub
adc
inc
shlb
insb
fs
test
jne
ds
fidivrs
lods
push
dec
addr16
lret
lods
cmpsb
pushf
add
gs
dec
jecxz
sarb
dec
bound
test
ficoms
in
lods
test
sbb
pop
mov
xor
int3
aam
stos
lds
xor
mov
xchg
stos
push
dec
or
xchg
addl
cmp
fldt
adc
mov
add
nop
fmul
sarb
push
sub
sub
mov
add
cmpsb
sub
pop
js
lret
sbb
cmp
dec
jmp
jle
add
dec
daa
rol
xor
xor
stc
cmpsb
ljmp
outsb
fnstenv
sub
xchg
xchg
mov
sub
xchg
roll
sub
jb
flds
mov
int
add
xor
sbb
xchg
push
mov
inc
adc
inc
imulb
addr16
mov
jo
xchg
sti
out
mov
xchg
cmp
sbb
adc
or
mov
gs
mov
hlt
add
push
sub
movsl
lret
popf
jecxz
cmp
cmp
inc
push
dec
shrb
loope
iret
aaa
iret
and
pop
push
cmc
jl
incb
iret
mov
xor
aam
pop
arpl
cmp
dec
jmpw
jns
mov
cmpsl
mov
enter
dec
jns
lret
or
fisubrs
outsb
insl
pop
mov
imul
cmp
gs
sub
mov
in
cmp
sub
sbb
sar
fcomps
mov
aam
xchg
cmp
lcall
push
and
jg
imul
call
mov
cmp
outsl
ret
push
fwait
push
sub
hlt
in
pop
les
push
mov
idiv
cmpsl
mov
cmp
out
fucomp
and
mov
sarl
clc
sub
insb
xor
mov
hlt
adc
movsl
mov
mov
and
jbe
stos
nop
lea
mov
sbb
add
inc
cld
test
iret
loop
bound
orl
jp
cwtl
sti
das
add
sub
mov
roll
dec
inc
add
xor
lret
mov
jg
mov
add
sbb
movsb
and
lahf
mov
cmpb
fildll
pop
fstpl
fistpl
ds
pop
adc
popf
and
add
adc
mov
xor
dec
jg
mov
and
inc
out
cmpsb
int
cmp
mov
and
push
adc
jae
cld
insb
xchg
xchg
out
cmpps
dec
aaa
mov
fists
xorb
mov
inc
push
pop
in
dec
insl
xchg
mov
cmc
into
aad
xchg
mov
dec
sub
xlat
push
fwait
clc
leave
mov
adcb
rcl
out
fisubrl
sbb
dec
shll
mov
cmp
les
inc
rorl
xchg
sahf
cmp
lods
shr
xor
cs
mov
jecxz
adc
sbb
xlat
mov
hlt
sbb
mov
rclb
sub
loopne
xchg
push
jg
sti
push
sar
adc
add
sub
in
js
popa
aas
int3
and
push
lock
pushf
push
xchg
cld
jns
xor
push
test
xchg
aad
push
vmulss
pop
cwtl
add
inc
jg
jno
sub
mov
hlt
in
insb
pop
push
inc
shlb
scas
inc
scas
push
push
fnstcw
dec
bswap
int3
repz
or
push
cmp
and
cmp
outsb
fisttpll
in
sub
mov
mov
adc
movsl
retw
lods
cmpsb
les
adc
in
xchg
sub
daa
mov
js
adcl
cs
fidivrl
or
xor
sahf
adc
hlt
mov
flds
dec
orb
popa
sub
sub
pop
sbb
lock
popa
arpl
inc
imul
mov
push
insl
pop
mov
testb
pop
mov
movq
add
ret
xor
pop
mov
or
ljmp
je
xchg
cmp
fiaddl
imul
or
add
enter
and
and
push
push
insl
mov
xchg
mov
imul
stos
lods
fwait
xor
pop
dec
ret
fists
sub
jg
loopne
mov
mov
cmpsb
cmc
ss
xchg
outsl
xor
das
lret
dec
cmp
sub
push
xchg
inc
fwait
stc
xchg
adc
push
sbb
xor
push
lret
inc
cmp
in
mov
sti
push
stos
mov
sti
mov
nop
cmp
xchg
pop
pop
push
mov
psrlw
inc
mov
xchg
inc
out
sbb
sub
in
mov
pop
lea
adc
add
sahf
jns
cmpsb
sub
test
cmpsb
adc
mov
adcl
hlt
or
lahf
sbb
xor
nop
sub
pop
push
push
xchg
divb
adc
lcall
dec
xchg
sub
gs
xchg
enter
jg
mov
jb
cmpsb
pop
insb
dec
sbb
dec
repnz
xor
cmp
fwait
sbb
push
dec
xchg
lret
cmp
jno
sahf
stc
xor
push
stos
pop
push
pop
leave
inc
in
fsubr
aam
mov
xchg
movsb
pop
add
xor
sub
aaa
scas
scas
out
popf
push
stos
fdivrp
cmp
daa
fneni(8087
hlt
mov
mov
push
loope
pop
js
xor
ret
sbb
pop
adc
push
int3
adc
and
loopne
sbb
pop
jne
inc
sub
xor
push
ret
aas
xchg
xchg
and
and
lahf
push
adc
lcall
inc
sahf
push
test
mov
ficoms
mov
jl
add
repz
dec
sub
push
cltd
imul
loope
inc
int3
cltd
sti
xchg
inc
inc
fmull
push
cs
mov
rcr
lcall
or
and
scas
fdivs
and
dec
insb
mov
fsubr
test
leave
xor
in
cmp
sbb
enter
rclb
out
gs
mov
cwtl
jns
cmp
das
xor
mov
cs
cmpsb
imul
outsl
aas
pop
xchg
mov
in
clc
jno
cli
cld
sub
sahf
inc
ss
jbe
sub
out
fstl
loopne
arpl
loope
xchg
es
add
xor
xchg
mov
adcl
cwtl
push
sahf
and
fucomip
and
xchg
lods
in
inc
mov
stc
jle
add
jb
lcall
push
add
movsl
push
in
lahf
inc
sarl
fnstsw
adc
int3
and
xchg
mov
pushf
sub
addl
mov
xchg
dec
icebp
test
xchg
jae
xchg
mov
mov
xchg
inc
adc
inc
mov
xchg
mov
sbb
sub
aaa
mov
dec
mov
call
add
mov
lds
dec
xor
push
mov
dec
idiv
mov
or
pop
ficoms
dec
pop
mov
push
push
or
bound
push
xchg
push
push
fs
push
addr16
jmp
mov
jge
aam
mov
ret
add
fbld
xor
js
jns
cwtl
iret
in
inc
adc
pop
or
sub
mov
mov
lods
cmpsl
int
inc
testb
rclb
cmp
popa
aad
or
and
push
rcll
push
inc
dec
orl
mov
sub
lea
rcrb
mov
pop
sub
cmp
sahf
fcompl
push
jmp
mov
push
adc
shr
xor
popf
add
sbb
mov
in
lret
rolb
push
repnz
dec
aam
sbb
pop
mov
or
jl
mul
movsl
insb
stc
rcrb
shrb
mov
mov
test
pushf
push
xor
cli
in
test
repz
ljmp
pop
addr16
and
in
shrl
stc
xor
dec
inc
jge
or
pop
lret
cwtl
adc
mov
inc
insl
inc
into
popl
mov
int
adc
jl
and
sbb
icebp
adc
mov
xor
xchg
cwtl
pop
jge
jnp
jg
xchg
loop
rorl
negl
sbb
push
push
cld
or
dec
mov
out
in
dec
in
pusha
inc
je
popf
or
jmp
xchg
pop
outsl
pop
fs
and
mov
iret
daa
jle
pop
or
xchg
jo
mov
and
xchg
mov
fnstsw
jnp
mov
mov
das
jb
enter
in
loope
xchg
xor
or
jle
pop
movsb
sub
pop
lahf
gs
inc
xchg
sbb
ss
fs
sub
dec
xchg
orb
adc
mov
mov
mov
addb
imul
adc
int3
in
push
pushf
pop
push
sti
loope
pop
outsl
xchg
cmpsb
push
movl
sti
push
decl
xchg
mov
dec
mov
cmp
xor
and
test
imul
call
push
xchg
ja
xor
add
xchg
mov
jecxz
call
sbb
mov
enter
adc
push
pop
jmp
sbb
or
bound
push
jmp
fsubs
push
mov
xor
jne
mov
ret
mov
lret
sbb
ljmp
adc
xchg
add
xchg
faddl
enter
jecxz
fsubp
aam
xorb
mov
vcvttps2dq
pop
push
call
cmp
divl
into
imul
mov
leave
xchg
cmp
imul
sub
dec
roll
lea
in
clc
cmp
jp
adcl
lret
popa
xchg
xchg
cmc
dec
out
inc
clc
iret
out
mov
sub
add
adc
ficompl
cmp
mov
dec
aas
mov
fwait
dec
push
and
inc
es
mov
cli
insb
mov
pop
mov
rclb
sbb
sbb
or
cmp
das
shll
mov
add
add
aaa
xchg
jno
and
xchg
addl
lcall
pusha
mulb
adc
outsl
addr16
push
add
out
or
mov
int3
lock
imul
fimull
int
pop
mov
pop
cmpsl
xlat
int
addr16
sub
pop
xchg
xchg
add
jg
push
in
jns
cmpsb
jo
sbb
fdivrs
nop
sbb
and
clc
mov
in
cmp
in
sahf
jp
jae,pn
push
icebp
stos
aas
cltd
flds
inc
aaa
mov
in
sub
pop
or
xchg
or
sbb
push
cmp
les
cmp
push
imul
mov
lret
cmc
rcll
notl
mov
gs
packssdw
clc
inc
jge
sbb
pop
mov
sub
sbb
ret
or
arpl
and
leave
xchg
cli
cmpl
loope
les
inc
fistl
sub
mov
les
inc
add
mov
mov
andb
add
pop
pushf
inc
lods
stos
inc
xchg
out
ss
je
mov
cmp
sbb
js
in
js
push
popf
pop
xchg
adc
lret
mov
cmp
mov
adc
xor
xlat
cmpsl
nop
lret
in
or
stos
repnz
stos
xchg
shr
leave
dec
adc
cmp
test
cmp
push
enter
push
arpl
pop
add
and
imul
es
in
xchg
inc
ja
adc
into
cmp
mov
dec
lret
and
out
mov
movsb
imul
ret
hlt
mov
add
push
or
xchg
les
cmp
mov
adc
cltd
jmp
aad
jo
and
push
lret
stos
adc
adc
jnp
sbb
mov
add
es
xchg
xlat
adc
inc
pop
and
and
pop
mov
push
sub
inc
push
mov
cltd
mov
lock
jne
test
cwtl
add
and
inc
adc
jg
adcl
fisubrs
xchg
jmp
dec
and
xchg
dec
pop
cmp
fidivrl
rorb
cld
and
xor
mov
mov
addr16
shrl
bound
stos
pop
je
and
xor
mov
push
cwtl
es
addps
pop
xor
adc
mov
loopne
imul
push
shll
mov
pop
cs
jbe
das
cmc
jl
insb
mov
repz
ficoms
leave
mov
mov
and
inc
or
jmp
fbld
mov
stos
jmp
pop
xchg
inc
add
stos
pusha
add
xor
mov
xchg
cmp
or
sub
jg
movsl
add
ljmp
movb
mov
add
ret
sbb
and
xchg
jb
xchg
mov
mov
cmp
rolb
addl
shll
scas
lock
push
cmp
cmp
inc
rclb
inc
add
mov
fstps
pop
push
dec
int
cs
sbb
sbb
dec
and
jl
or
les
scas
push
mov
idivb
pop
mov
cltd
xchg
inc
popf
out
call
xchg
fwait
gs
out
cmp
dec
or
mov
and
mov
mov
std
movsb
ret
push
fsubrl
outsl
icebp
cmp
inc
ljmp
mov
les
stc
call
test
and
loop
lods
test
lea
orb
mov
test
cmpsb
cltd
cmc
mov
pop
sub
out
jae
push
add
mov
jns
rol
add
rcl
inc
das
in
arpl
mov
rclb
pop
pop
sub
xchg
loope
sbb
pop
sahf
int
sbb
cs
and
xchg
jp
cltd
rol
mov
aaa
in
mov
sub
das
sub
mov
pushf
adc
or
test
sar
mov
jae
fcoms
dec
push
or
shrb
in
je
mov
sbb
xchg
xor
xor
outsl
test
inc
inc
imul
pop
fwait
pop
or
jne
inc
or
inc
aad
mov
xchg
inc
fimull
push
addr16
in
jae
sub
clc
movsb
xor
jl
jno
popf
sub
fwait
roll
mov
dec
jbe
gs
sub
mov
jl
rcrb
lcall
imul
add
xchg
pop
mov
jg
sbb
xchg
aam
push
adc
js
lds
fsubr
add
fildl
xor
mov
push
aad
addr16
test
stc
push
sbb
cmpsl
loopne
pop
sarl
in
jbe
loope
jp
arpl
xchg
xor
sbb
addr16
fbld
mov
movsb
cs
nop
inc
xorb
inc
push
imul
cmc
filds
pop
adc
int3
sti
xchg
inc
mov
and
xor
sbb
inc
fstpl
inc
xor
out
scas
jge
jns
cmp
adc
mov
sub
sub
or
mov
sub
shlb
lret
and
mov
in
fcoml
shlb
cmc
cld
call
pop
and
inc
dec
hlt
loop
xor
push
rcrl
inc
js
mov
inc
movsb
in
repnz
adc
mov
and
push
xchg
cltd
xor
nop
mov
fldt
mov
add
inc
ja
inc
cmp
xchg
dec
adc
mov
aas
inc
and
out
jp
cli
imul
mov
mov
sbb
jmp
clc
shlb
int3
add
popa
insb
mov
lods
and
int
movsb
push
jae
out
push
out
movb
es
pop
nop
mov
push
pop
and
jmp
mov
stos
push
sub
dec
pop
std
add
add
sahf
shlb
stos
cmp
test
repz
fisttpl
adc
test
pop
cmc
push
repz
pop
mov
mov
sbb
or
push
test
inc
sbb
data16
insb
arpl
mov
inc
xchg
add
repz
stos
scas
mov
imul
sub
xchg
or
mov
adc
mov
in
adc
and
stos
scas
add
out
cmp
nop
ss
rcll
push
xor
push
cwtl
pusha
xchg
push
in
jbe
ret
mov
ljmp
ds
stos
pop
cmp
add
mov
addr16
mov
xlat
or
outsl
mov
mov
cmpsb
jb
sub
inc
cltd
cmpsl
add
sub
imul
into
add
push
addr16
push
in
cmp
cmp
dec
push
les
cwtl
js
pmaddwd
es
and
sarb
pop
fidivl
push
and
in
aaa
mov
shll
xor
stos
inc
outsl
mov
daa
lahf
pop
cmpsl
fs
out
add
popa
leave
jp
sub
rorl
iret
out
mov
add
xchg
dec
or
xchg
pop
push
divl
xor
pushf
fildl
cli
cmp
lahf
icebp
mov
ds
lret
and
lods
ret
imul
sahf
push
pop
outsb
jae
mov
mov
push
xor
int
js
test
or
add
push
jne
xor
and
or
push
sbb
sub
ss
stos
push
test
dec
mov
mov
push
pop
xlat
pop
fdiv
adc
jo
pop
popa
adc
mov
mov
add
or
lds
in
hlt
repz
xor
stos
adc
mov
sub
fcmovnb
das
sub
mov
fsub
inc
outsl
mov
repnz
ss
mov
sar
jg
mov
jg
and
pop
jge
das
or
jecxz
jns
add
xlat
mov
sbb
push
add
mov
lret
add
mov
int3
inc
sbb
cmp
jns
mov
dec
cmp
leave
dec
test
pop
xchg
push
lds
in
cmpsb
push
sbb
cli
pop
in
xorl
das
fmull
jg
xchg
dec
bnd
test
fsubs
aas
adc
js
and
jno
push
lret
and
sahf
or
icebp
xor
mov
mov
sbb
xchg
inc
xor
cld
inc
xchg
push
in
xchg
or
bnd
arpl
aad
jecxz
jmp
pop
mov
mov
or
repnz
jo
inc
xchg
adc
sbb
je
lret
sbb
in
or
aad
repnz
and
cs
ffree
out
ja
sub
mov
sub
xchg
add
cmpsl
fbld
mov
mov
push
aad
xor
pop
dec
cmp
stos
inc
filds
pushf
mov
bts
xchg
shl
sub
mov
adc
andb
mov
cmp
in
das
dec
aam
fcmove
fistpll
out
xchg
mov
cli
pop
fnstenv
in
daa
adc
cmp
fcmovb
mov
notb
mov
andb
aas
cmp
iret
dec
stos
sahf
test
je
push
push
and
xor
sahf
mov
jne
mov
cmpsb
stos
int3
sub
fstps
cltd
out
sub
insb
lds
adc
xrelease
aad
cwtl
outsl
adc
fsubr
lds
mov
sub
pop
pusha
mov
inc
fs
pop
popf
cmp
add
es
scas
fs
dec
jae
sub
mov
out
push
or
add
pushf
int
sub
pop
aas
repz
jmp
or
ljmp
loopne
fidivl
js
mov
insb
testb
cmp
test
scas
shlb
mov
arpl
int
mov
fdivrl
push
jae
dec
mov
xor
add
pop
test
in
ret
adc
loope
mov
ljmp
mov
out
stos
outsb
bound
inc
cmp
pushf
dec
icebp
mov
add
fdivs
dec
push
sbb
add
imul
js
or
imul
xchg
jne
lock
movsl
rcll
xchg
loopne
pop
cs
push
es
clc
push
inc
sub
dec
cmp
jg
daa
pop
dec
cld
test
lret
mov
dec
mov
daa
call
mov
pop
push
xchg
mov
sti
cmc
sbb
call
or
pushf
pop
add
dec
add
xor
arpl
enter
cwtl
add
in
inc
xchg
push
je
jg
lock
sub
push
mov
aaa
and
inc
inc
jmp
adc
and
std
stos
call
jno
adc
ljmp
jg
push
ret
stos
lods
and
mov
sbb
int3
cmp
js
inc
or
push
mov
ja
push
mov
mov
gs
cmp
rorb
mov
fisttps
pop
dec
ds
lea
lret
dec
mov
stos
cmp
imul
mov
or
aas
movsb
push
xchg
fcoml
pop
shll
mov
aas
xor
int
std
inc
aad
add
popf
fs
pop
pop
gs
dec
jbe
mov
ja
push
incl
enter
pop
jle
adc
mov
add
fidivs
or
jae
xchg
jmp
adc
stos
cmc
cmp
pushf
mov
sub
mov
cmc
and
add
mov
fwait
push
lods
mov
lds
mov
mov
and
cmp
or
jecxz
lods
iret
fsubrl
jge
xchg
in
sahf
fldl
fs
sub
jl
repnz
adc
xchg
or
dec
sub
dec
ljmp
and
enter
xlat
pop
stos
insb
xor
cmp
cmpb
flds
test
jmp
jb
fstps
pop
sahf
clc
push
mov
push
sub
mov
fwait
imul
dec
les
out
lahf
ds
inc
rclb
xchg
xor
imul
sub
stos
sub
push
pop
mov
test
sbb
cmpb
jg
bound
out
mov
fisubl
rorl
jmp
dec
ja
fwait
movsl
in
orl
and
pop
loopne
cmp
inc
xchg
rcll
xor
mov
mov
adc
jecxz
idiv
mov
lcall
enter
xor
xchg
out
and
dec
jno
mov
fidivrl
mov
lret
outsb
pushf
push
push
mov
pop
and
ljmp
jp
and
or
mov
pusha
jb
fstps
icebp
and
scas
sub
inc
test
pop
ret
jge
sarb
mov
push
mov
shll
out
lret
cmp
dec
push
cmp
fldl
pop
mov
mov
jp
std
push
sub
divl
inc
repnz
push
imul
cmp
addr16
fs
cmovbe
repz
iret
mov
repz
cli
or
out
jne
and
adc
sbb
in
ss
push
fwait
ficoml
push
je
js
push
push
adc
addr16
mov
adc
add
push
xor
push
adc
jmp
fists
mov
xchg
movsl
ja
aad
xchg
popf
ret
cmc
out
adc
and
test
mov
sub
jl
cwtl
xor
xlat
lret
dec
xor
and
cmpb
push
xchg
cmpsl
call
ss
dec
and
and
out
inc
jae
ret
pop
dec
inc
jecxz
pop
imul
jl
inc
fnstenv
cmc
sub
push
and
call
dec
pop
mov
movsb
notb
pop
xchg
orl
repnz
jg
in
push
fistpll
imul
test
mov
ret
filds
mov
cwtl
xchg
insl
out
in
cmc
xchg
add
push
nop
ss
cwtl
repz
lcall
sahf
push
adc
mov
push
les
push
mov
stos
sub
shrl
movl
fsubrs
pop
stc
repz
aam
negl
push
push
movsl
mov
adcb
rolb
cli
out
fnsave
cmp
add
mov
inc
cli
dec
aam
add
pusha
jl
sbb
aad
aas
adc
inc
lret
fisubs
outsl
loop
lahf
and
mov
sub
jge
jle
ret
sbb
aas
inc
inc
fdivrl
push
cmc
dec
pcmpeqd
mov
cwtl
xchg
sbb
mov
pop
adc
dec
cmp
push
jle
jae
pop
jle
movsb
push
add
in
dec
ja
push
sub
rcr
jp
lret
pop
mov
jecxz
xchg
jl
mov
push
es
xchg
icebp
cmp
or
rep
sbbl
daa
iret
mov
in
dec
repnz
mov
inc
pop
call
fcom
jbe
sub
out
sub
push
xchg
fldl
jg
lods
lock
add
shr
jne
mov
mov
out
pushf
mov
repz
cli
orl
aad
inc
popf
adc
inc
cmp
popa
loopne
push
call
mov
test
cwtl
cmpsb
pop
sti
mov
push
outsl
mov
jg
mov
jl
lock
pop
xchg
push
dec
mov
pop
and
and
jp
dec
and
subb
or
cmp
das
movsb
imul
adc
ret
scas
jl
insb
outsb
mov
movsb
loope
nop
sub
lods
or
fwait
pop
fcmovb
addl
mov
jo
push
out
out
lcall
aas
adc
leave
adc
mov
cmova
andb
xor
mov
pushf
clc
or
movsb
hlt
or
das
jmp
sub
ret
jo
sub
xor
das
inc
ret
jns
jle
test
sub
fimuls
cmpsb
ja
movsl
xor
mov
or
sub
js
leave
pop
loopne
subb
into
in
js
loop
adc
mov
mov
sbb
xchg
mov
rcrb
loop
mov
add
push
cmp
push
jl
ret
pop
inc
into
aaa
jl
adc
sbb
push
cmpsb
cld
loope
scas
movsl
in
js
add
xor
mov
insl
ja
dec
imul
jp
dec
shlb
dec
add
out
nop
mov
fst
sbb
stos
dec
sahf
dec
xor
inc
ljmp
popa
in
push
inc
insl
and
sbb
xor
icebp
loopne
gs
jne
in
mov
or
jecxz
rolb
jge
into
cmp
cwtl
mov
cmp
mov
xorb
fnstcw
push
cmp
dec
aam
test
cs
sub
mov
mov
ds
push
dec
cmpsb
aam
lahf
push
xor
mov
sti
daa
jno
sub
jbe
ss
xor
cli
lahf
inc
cmpl
adc
dec
je
negb
ret
sub
inc
cmp
arpl
jb
cmp
mov
mov
sbb
jp
pop
mov
push
cmp
adc
sub
scas
cmpsb
call
xchg
lret
jge
mov
sub
lods
pop
lret
fs
cmp
addr16
gs
lds
sub
xchg
stos
mov
fisubl
out
sub
fwait
clc
xlat
push
dec
call
adc
in
jp
shll
fistpll
inc
fdivrp
popf
xor
ffree
test
sbb
jp
add
inc
fcoms
loopne
outsl
push
dec
xor
fcompl
push
push
inc
mov
pop
stos
xor
arpl
sbb
sub
ja
pop
lods
hlt
shrl
shlb
mov
ljmp
mov
xlat
fldl
add
add
ficomps
es
outsb
xchg
movsl
ret
cli
or
std
shr
mov
pop
je
ret
movsl
pop
sbb
int
in
sti
jmp
inc
ljmp
xchg
shlb
mov
mov
lock
xlat
loope
push
scas
popa
or
sbb
faddp
fiaddl
sub
gs
adc
sub
ret
add
fbld
cs
and
mov
jae
xchg
jl
mov
pop
mov
loope
ja
jmp
adc
and
sbb
or
or
data16
xchg
addr16
outsl
ds
sahf
insl
fldln2
test
dec
jmp
inc
flds
jo
adc
inc
add
movsb
mov
mov
dec
mov
fwait
and
repnz
lcall
cs
js
xchg
test
sub
pop
mov
dec
jbe
and
out
loope
xchg
push
popf
xchg
iret
push
ja
dec
cmp
xor
lea
std
ljmp
rcl
or
push
jmp
mov
push
ljmp
movsl
js
aam
mov
aas
idivl
mov
mov
xchg
decb
repnz
or
xchg
out
cmp
dec
add
xor
ficoml
mov
inc
pushf
sbb
ror
gs
jg
fs
push
adc
cmp
stos
mov
sub
hlt
dec
add
cmc
stos
mov
je
xor
out
lret
push
push
das
push
mov
add
out
cld
push
push
insl
and
mov
shlb
fistpl
sub
int3
cmpsl
mov
das
inc
pop
dec
and
cmp
loope
push
sbb
lcall
jb
dec
test
mov
jns
pop
pop
jns
popa
sti
sub
xchg
and
jne
repz
sarl
cmp
arpl
out
mov
andl
inc
mov
mov
push
lcall
xlat
mov
aas
aas
cwtl
sbb
push
mov
mov
scas
in
push
sbb
sub
xchg
pop
cmc
negl
sbb
les
jb
push
mov
pop
and
jae
cmpsb
jae
mov
xor
pop
icebp
xor
adc
and
icebp
cmc
sub
and
jno
rcl
inc
xchg
iret
fdivrs
in
push
adc
dec
arpl
mov
ret
sub
cmp
lret
sarl
mov
inc
mov
and
inc
push
sub
pop
mov
stos
push
inc
insl
in
sub
outsl
xchg
lock
push
inc
mov
movsl
sbb
call
adc
loop
jmp
lods
adc
and
jp
inc
aaa
sbb
xchg
rorb
das
cld
jb
xchg
mov
nop
out
cmc
cs
or
pop
lcall
and
mov
test
cmp
ret
int3
pop
test
pop
xor
arpl
sub
jmp
mov
ja
into
ret
jmp
xchg
je
gs
fwait
test
xorl
push
push
jge
inc
jmp
cmpsl
jecxz
lds
mov
mov
mov
xchg
push
sub
ds
pop
ret
pusha
sahf
test
push
mov
xor
push
inc
mov
mov
and
dec
out
js
test
loop
gs
sub
jmp
sti
xor
pop
jae
or
push
les
sub
pushf
inc
rcrb
dec
xor
push
bound
data16
push
push
xor
in
and
xchg
jl
enter
mov
sbb
hlt
pop
mov
sub
push
fwait
pop
mov
jo
or
mov
pop
cmp
int3
cmpsb
sbb
jb
or
aaa
and
ret
shll
loope
je
pop
xor
xchg
xchg
mov
xor
push
mov
fadd
and
sub
or
jle
and
push
callw
movsw
push
mov
push
push
loop
cmp
push
xor
je
stos
pop
pop
or
out
inc
nop
pop
pushf
sbb
dec
xchg
repnz
pop
pop
hlt
or
push
jg
icebp
mov
mov
adc
cmp
inc
addb
sbb
xchg
adc
jbe
dec
and
stc
or
popa
and
in
adc
inc
mov
fdivl
popf
and
push
cli
push
ja
pop
popf
mulb
cmp
cmp
or
std
outsl
test
xor
cs
mov
ret
cmp
mov
mov
xchg
xchg
mov
in
ja
xor
std
or
adc
mov
cwtl
dec
cli
push
dec
ljmp
popa
popf
push
lcall
nop
sbb
push
sub
cmp
xor
cli
fmull
jmp
push
or
lea
mov
adc
adc
rcl
hlt
sar
or
rcrb
iret
add
stos
mov
repnz
pop
cmp
dec
scas
arpl
icebp
xchg
xchg
imul
push
lret
aam
xor
lcall
add
push
pop
mov
push
push
sbb
stos
mov
fidivs
aas
or
filds
or
dec
xor
dec
push
inc
jmp
cmp
pop
mov
aam
mov
sbb
test
mov
add
in
push
adc
or
push
jo
push
inc
jbe
jnp
push
sub
mov
ja
lahf
xchg
jmp
iret
dec
testb
nop
popa
fs
adc
jno
or
or
or
cmp
sub
or
inc
fst
divb
mov
xor
adc
cltd
mov
cmp
jecxz
sbb
int
sahf
ljmp
fistpll
mov
out
dec
cwtl
xchg
pop
mov
mov
push
sub
add
in
add
lahf
and
jb
xor
xlat
jle
imul
push
fistl
xorl
jmp
cwtl
ja
dec
push
mov
popa
out
adc
inc
fsubr
jl
inc
lret
add
and
cld
es
les
jp
test
mov
dec
sbb
scas
icebp
out
aad
mov
cvtps2pi
shlb
inc
dec
popa
cld
mov
push
sbb
cltd
or
arpl
jle
outsl
and
in
cmc
lahf
xor
pop
stos
imul
xchg
add
pusha
pop
popf
lea
or
ljmp
outsb
mov
lahf
push
mov
or
or
mov
test
xchg
lea
push
rolb
fimull
mov
das
in
inc
and
lock
fdivrp
cmp
das
jae
sub
sub
fstps
lret
dec
int3
adc
add
jae
into
stos
dec
mov
stos
push
mov
div
adc
xor
das
bound
jle
ret
jns
sti
jl
mov
les
les
pop
addr16
scas
jl
std
nop
lds
ret
flds
and
orb
inc
or
les
das
pushf
mov
dec
adc
mov
fcmovne
dec
idivl
sub
sbb
xchg
sti
out
data16
mov
aam
dec
push
stc
movsb
fisubs
push
jl
inc
jle
je
jmp
jno
mov
outsl
popa
sbb
pop
push
sbb
lret
stos
outsl
push
mov
jae
loope
nop
xor
jb
mov
aas
lea
je
fildl
adc
std
imul
test
dec
xor
xchg
sti
outsb
lret
inc
or
roll
arpl
pusha
xor
incb
ret
call
pop
inc
mov
jmp
cmp
mov
inc
xor
xlat
mov
cmpsl
sbb
mov
outsl
or
leave
fsubl
xchg
push
pop
mov
mov
cmp
add
fs
mov
call
outsb
sbb
mov
or
addr16
xchg
lea
adc
clc
add
hlt
ja
in
clc
cld
andb
pop
repnz
xorb
pusha
fwait
scas
in
iret
mov
movsb
mov
pop
inc
int
pusha
sbb
mov
test
fists
pop
frstor
mov
insb
mov
sahf
mov
popa
mov
mov
dec
int3
jns
les
dec
cmp
inc
mov
push
or
inc
or
loopne
sar
stos
out
adc
pop
jle
sbb
jns
jbe
adc
dec
mov
mov
cld
pop
lods
movsb
fsts
cs
xor
cmp
dec
or
ljmp
jo
and
stos
pop
sbb
sahf
sub
mov
push
mov
out
ljmp
aam
stc
push
in
test
push
cmp
aas
jns
mov
push
mul
jge
inc
hlt
pusha
out
test
adc
hlt
aas
add
push
out
adc
mov
inc
adc
sbb
push
xchg
rcrl
sub
pmaxsw
cld
cwtl
mov
mov
ficompl
jo
in
leave
mov
in
inc
std
sub
fbld
addr16
push
xor
dec
call
les
push
mov
mov
sahf
jecxz
hlt
and
stc
call
iret
lret
dec
mov
pop
push
add
into
iret
xchg
push
int
push
cltd
add
inc
push
xor
scas
sbb
xor
sbb
bnd
mov
pop
out
into
loop
outsl
pop
inc
imul
rorl
dec
mov
iret
out
xchg
jp
fwait
mov
mov
push
adc
insl
pop
icebp
push
mov
mov
lock
in
add
xor
fs
mov
sbb
adc
fcomps
add
add
xor
popa
push
pop
std
aad
icebp
inc
and
leave
rolb
jg
shlb
sub
mov
xlat
enter
cmpsb
push
icebp
mov
jno
or
lods
or
addr16
and
sti
fcmovu
mov
loope
push
and
lea
add
mov
push
pop
pop
fs
std
loop
sub
mov
clc
divl
cmp
add
mov
inc
sbb
xchg
mov
mov
rolb
out
mov
push
daa
xor
add
adc
repnz
or
addr16
enter
pop
fcomp
mov
negl
inc
imul
ficoml
pushf
insb
jns
or
jmp
aad
outsb
cmp
nop
sar
cld
shl
add
cmpsb
sbb
popa
sbb
sbb
sub
adc
jg
div
mov
cwtl
fs
add
aam
arpl
mov
cwtl
xorl
inc
push
ss
jno
ja
jge
push
sbb
jo
jns
ret
nop
sahf
fmuls
sbb
jb
inc
sub
cmp
mov
pusha
sbb
adcl
add
pop
in
mov
sbbl
das
lea
test
loop
pop
call
inc
repnz
mov
ja
ror
push
pop
psubsb
adc
push
mov
lcall
push
cmpsl
adc
sti
push
addr16
std
hlt
outsb
hlt
sbb
or
or
push
and
add
aad
fcoms
push
or
mov
add
cmpsb
xchg
pop
lock
push
dec
dec
pop
mov
sub
cmp
cmc
popa
js
jne
add
dec
inc
mov
pusha
sbb
inc
fsubrs
xor
int
fisubrl
mov
adc
bound
add
mov
mov
mov
add
push
push
ret
into
push
push
lahf
insl
iret
shrl
mov
xor
pop
mov
push
in
jmp
mov
aas
shr
jo
mov
shll
jp
in
sarb
add
aaa
sub
mov
fnsave
jmp
sub
mov
adc
mov
xchg
cltd
insb
adc
mov
mov
xlat
iret
add
xchg
mov
js
jge
add
mov
xor
jne
test
fbstp
loopne
lea
sub
xor
cwtl
rcll
dec
cmp
cmp
insb
mov
mov
sub
test
sarl
sbbl
pop
xor
sub
mov
or
loop
dec
push
push
push
dec
adc
dec
ja
repnz
enter
loop
push
mov
aas
and
sub
xorb
test
jecxz
adc
icebp
jp
cltd
push
cmp
xchg
aaa
rcrl
mov
outsb
mov
xchg
jns
cwtl
out
ljmp
popa
add
ss
daa
sbb
xor
xor
data16
dec
cwtl
cmp
shl
mov
std
adc
and
mov
leave
or
stc
cmpsb
cmc
movd
lods
mov
inc
and
and
pushf
mov
fwait
push
and
fcoml
inc
out
loope
out
outsl
push
add
and
outsl
mov
dec
mov
sti
sub
jmp
cmp
sub
mov
popf
arpl
fmulp
and
gs
dec
push
mov
add
add
pushf
imul
jl
mov
xchg
cltd
scas
pop
ljmp
jge
bound
les
mov
jmp
pop
xlat
xchg
push
dec
push
out
stos
adc
sub
adc
xchg
jmp
scas
pop
dec
push
sbb
pop
xlat
xchg
loope
cltd
div
ret
cltd
jg
inc
cltd
sub
call
mov
out
arpl
mov
jecxz
xor
lea
ja
mov
pop
subb
lcall
daa
jp
pop
lret
popf
xlat
nop
mov
dec
sub
jge
mov
jmp
mov
js
or
sahf
dec
into
rorb
dec
push
mov
mov
scas
mov
add
aam
pop
movsb
imul
cs
sub
ja
mov
nop
mov
mov
push
mov
test
pop
lds
sbb
aas
lcall
dec
pusha
fimull
test
lret
ljmp
mov
sub
pop
jno
push
mov
data16
xor
test
mov
cli
andl
cmp
dec
mov
mov
mov
or
nop
idiv
pop
push
cmpsb
mov
push
cmp
enter
pop
xchg
and
decl
int3
shlb
xchg
fiaddl
pop
push
icebp
xorb
dec
dec
and
mov
mov
leave
ja
lods
mov
pop
cmp
dec
loopne
xor
cmp
mov
xchg
cmp
movsb
fcomps
lock
mov
test
mov
inc
dec
add
pop
jne
mov
pop
mov
pop
out
xor
mov
fisubrl
fidivrl
das
insl
sub
adc
jo
negb
and
dec
out
sub
mov
nop
cmp
xchg
rolb
js
or
cmp
mov
sub
loopne
jbe
add
popf
fldenv
sbb
sbb
add
icebp
dec
gs
sbb
out
mov
icebp
jno
cli
and
ret
mov
inc
mov
cmpsb
push
and
mov
dec
sub
xchg
int
icebp
fsub
or
jp
or
test
sti
sub
rorb
jp
and
call
test
test
xor
inc
cmpsb
jae
cmpsb
and
lcall
xchg
mov
in
out
ret
sahf
push
lahf
sub
push
in
movsb
mov
imul
ret
pop
cmpsb
leave
imul
sahf
imul
push
mov
faddl
dec
icebp
outsl
call
nop
outsl
nop
mov
mov
insb
cmp
xor
inc
fstl
jp
adc
testb
inc
subb
xchg
and
stos
pop
inc
repz
jae
xchg
sbb
mov
roll
stos
fidivrs
lods
jae
outsl
or
mov
into
push
add
flds
sbb
movsl
data16
imul
sbb
xor
clc
mov
bound
stos
fsubrs
jecxz
add
pop
stc
test
xor
stc
jg
or
rcrb
aam
and
arpl
lret
jo
and
push
imul
call
stos
imul
aas
cmpsb
or
movsb
xchg
cmp
inc
ja
mov
sbb
xchg
add
dec
ret
lods
mov
test
sbb
sbb
xor
jne
scas
call
pop
jg
test
jmp
fsubrs
pop
out
add
fadd
imul
or
shrb
shlb
mov
sbb
adc
fwait
mov
lods
rolb
xor
movsb
pop
stos
rolb
loop
and
nop
mov
adc
add
test
test
icebp
cmpsb
sbb
or
and
xchg
daa
xchg
push
aad
xorb
push
ja
adc
cs
sub
and
sbb
jge
cmp
pop
adcb
or
pop
mov
sub
pop
jns
and
sub
sub
cmp
out
pop
fistl
mov
das
pop
mov
ret
mov
lods
mov
aam
jns
aam
and
sub
cmp
push
jge
rcr
jmp
jae
or
sti
push
jno
jecxz
inc
fistpl
xchg
nop
jo
and
movsb
xor
or
mov
std
inc
jnp
cmpsb
fs
in
mov
sub
pushf
out
cmc
xor
es
push
or
sbb
mov
das
mov
adc
ja
fcmovb
xor
test
push
pop
mov
mov
lcall
sti
std
sub
clc
jo
pop
mov
and
movsl
lret
addb
outsb
ret
lods
adc
xor
test
int
cmpsb
rcrb
leave
mov
js
clc
cld
dec
aad
or
mov
decl
adc
jge
ss
xchg
xchg
add
jp
iret
inc
outsl
pop
inc
lock
xchg
xor
mov
push
push
and
push
es
cmovp
cld
and
add
imul
sub
jbe
in
addr16
dec
sbb
and
xchg
and
aad
pushf
dec
pop
mov
xlat
add
adc
add
sti
lods
adc
nop
cmc
es
pop
pop
jle
fidivrs
in
xchg
pop
lret
mov
dec
pop
sub
stos
roll
es
out
lahf
xor
loop,pn
sub
enter
sub
xor
and
iret
xchg
clc
push
mov
repnz
lods
mov
das
fdivrl
cmp
xor
lcall
faddl
mov
ja
cmp
push
xor
cltd
push
cld
addr16
in
outsl
adc
pop
adc
rcl
mov
inc
sbb
fdivs
std
add
mov
mov
push
aas
lahf
mov
mov
movsl
inc
mov
lcall
sbb
nop
pop
jne
shlb
roll
push
dec
ret
leave
pushf
and
out
or
cltd
sbb
xchg
dec
or
push
pop
ja
sub
mov
add
add
pop
and
lret
push
imul
mov
loop
pop
fistl
cmp
clc
jo
sbb
in
xchg
push
addr16
test
pop
fcoml
movsb
and
xor
repnz
pop
daa
ds
data16
mov
xchg
addl
out
inc
xchg
pop
ljmp
or
add
out
popa
dec
movb
xchg
sub
sub
inc
pop
loopne
jecxz
push
sbb
jle
sbb
xor
stos
leave
inc
jge
das
and
imul
andb
fs
das
sub
add
outsl
pop
in
mov
pop
push
jp
dec
not
and
sub
stos
stc
dec
jns
sbb
or
lock
jb
pop
dec
mov
mov
int3
popf
cmp
mov
clc
loop
shlb
push
adc
cmp
pop
push
inc
pop
cli
xor
mov
bound
int3
ret
jno
sub
jae
dec
and
add
xor
insb
roll
inc
or
in
add
lcall
shrb
mov
loope
js
clc
dec
lds
push
sti
imul
sbb
fstps
push
mov
js
stos
sti
movsb
lret
sbb
and
sti
and
cmp
imul
insl
dec
inc
repnz
fsubr
jl
push
pop
cmp
hlt
mov
andl
jmp
xor
jecxz
xlat
fadd
sbb
mov
jmp
sbb
lahf
pop
pusha
xchg
ret
mov
sub
cmp
pushf
fdivrl
pop
cld
jge
ret
or
ds
and
jb
xor
in
xchg
repz
dec
ss
scas
sahf
les
pop
xlat
lods
cmp
aad
subb
dec
jmp
mov
repnz
cmpb
sbb
das
xorl
push
cld
loopne
in
jg
xchg
sub
les
ja
sub
or
sbb
sbb
sbb
aas
mov
push
fnstenv
inc
sub
cmpsb
sbb
and
sbb
je
or
push
out
outsl
mov
js
in
popl
and
add
jl
cltd
adc
repz
xchg
push
movsl
xchg
lea
repnz
cltd
addr16
mov
das
xor
pop
movsl
lods
rclb
shl
mov
xchg
jns
popa
mov
add
gs
inc
add
mov
fsubrs
adc
enter
sbb
iret
mov
imul
js
lea
xchg
inc
lcall
push
mov
outsb
mov
std
adc
push
sub
orb
es
push
sbb
into
fidivrl
fstl
or
sbb
push
or
push
mov
xchg
mov
sub
ffreep
insb
add
aad
push
sub
sbb
jmp
jecxz
add
mov
enter
cmp
gs
icebp
add
pop
stos
pop
aam
imul
lcall
or
or
loopne
rorl
pop
cmpb
adc
add
popf
lret
movsb
dec
jno
mov
dec
push
dec
add
aad
push
into
pop
cwtl
call
clc
or
push
dec
in
xorb
fiaddl
movl
xchg
mov
arpl
jg
push
aas
sub
xor
cmp
rcrl
ficoml
mov
or
in
push
test
pop
cli
xchg
xchg
pop
fld
and
popa
mov
inc
mov
movsb
shll
hlt
out
loop
leave
add
push
insl
mov
lret
repz
cmp
std
inc
xchg
cmp
cwtl
cmpsl
xchg
lods
in
cld
in
mov
inc
int3
dec
push
sub
cmpsl
dec
xor
shrb
mov
fmull
dec
push
aam
dec
mov
outsl
addr16
jno
clc
fsubrs
dec
pop
xchg
push
push
lret
mov
in
or
cmp
xlat
add
es
inc
and
jnp
mov
or
cwtl
xchg
push
or
int3
data16
outsl
icebp
sbbb
and
out
lds
jno
jae
aaa
sub
xchg
mov
fmuls
adcb
ficoms
sub
dec
jmp
dec
add
jl
xchg
jmp
cwtl
add
call
in
mov
aad
or
rorl
data16
test
sbb
aas
clc
or
es
mov
cli
or
cmp
add
and
jns
lds
xor
in
out
jae
test
decl
sahf
mull
xchg
enter
test
call
adc
sub
pop
int
or
shl
pop
jno
test
mov
jbe
nop
into
sub
mov
sti
nop
enter
mov
xchg
add
push
sub
cmpsl
xchg
sub
cld
aaa
addr16
test
mov
sbb
lahf
into
mov
stc
rcll
ljmp
xor
inc
add
loopne
fiadds
mov
pop
add
sbb
xor
mov
inc
insl
cwtl
cmp
pop
cmp
cs
add
sbb
test
mov
jnp
jbe
rolb
stos
push
cmp
push
xchg
lods
pop
out
inc
addr16
ret
loop
jp
xchg
jp
mov
mov
mov
lds
repz
mov
test
fwait
outsl
xor
in
sub
in
pop
aaa
mov
shll
cmpsb
lock
rcl
sub
dec
out
pop
push
pop
hlt
cmp
lods
cmp
aas
stos
lds
pop
push
mov
das
and
cmp
jg
inc
test
sub
lds
mov
xchg
rorb
mov
add
icebp
aam
and
out
push
enter
loop
lods
pop
sub
cltd
jbe
int
test
les
mov
mov
jne
outsb
push
or
movsb
or
xchg
cmpsb
pop
adc
cmp
dec
pop
bound
lret
cmp
mov
loopne
lock
dec
into
scas
and
add
push
jns
sbb
hlt
adc
in
or
int3
push
nop
jb
mov
and
mov
or
mov
mov
andnps
and
sahf
fs
nop
movsl
or
mov
push
lock
mov
xor
sahf
ds
mov
sbb
mov
push
or
loope
sahf
jae
pop
lret
dec
push
cwtl
shlb
xchg
jecxz
inc
sbb
cmp
and
pop
push
mov
ja
sbb
insl
in
cld
pop
ret
inc
jl
mov
jo
lret
fldl
sbbl
cmpsl
push
jmp
lahf
pushf
sbb
sbb
dec
test
sub
or
ljmp
cmp
cmc
mov
cwtl
push
adc
dec
js
cmpsl
add
aad
xchg
sbbb
andl
or
ficomps
pop
lods
sub
fimull
or
xor
cmp
sub
push
fistps
imul
and
or
shrl
jecxz
nop
xchg
sbb
fstpt
fldl
sbb
sub
jbe
or
lock
push
mov
and
cli
test
inc
push
test
jo
addr16
negl
je
jmp
sti
mov
bsr
mov
in
lds
inc
das
xchg
je
or
jecxz
push
dec
lahf
pop
mov
sahf
int3
mov
jp
and
jno
imul
dec
shlb
push
inc
or
push
and
hlt
bound
lahf
arpl
pusha
add
pop
or
lods
mov
fildll
fwait
xor
lret
fwait
adc
push
pop
sbb
xor
in
and
adc
les
f2xm1
push
xchg
fstpl
cmp
js
pop
repz
pop
push
sub
movsl
mov
pop
gs
imul
mov
shlb
in
xchg
xchg
xchg
cs
test
sarb
pop
sub
adc
pop
pop
loop
lahf
adc
popa
cltd
pop
loop
scas
out
imul
fsub
mov
and
jae
sbb
cli
lea
addr16
cmp
fsubrs
fwait
fwait
pushf
dec
jns
fimull
push
iret
in
inc
mov
rcrl
mov
xor
outsl
inc
mov
or
add
repnz
pop
dec
lds
push
adcb
out
repz
push
cltd
ja
scas
test
mov
rcrb
pop
sbb
sub
xor
ret
enter
andb
lods
icebp
adc
xchg
pushf
js
cwtl
stos
jns
pop
jp
add
push
scas
aas
xor
cmpsb
sbb
sub
add
mov
push
repnz
mov
js
sbb
push
imul
inc
add
lea
jbe
sbb
sbb
and
push
and
jge
nop
and
inc
jg
pushf
lds
lods
jo
adcb
dec
fnstsw
shlb
loopne
lods
mov
ret
sbb
jne
movsb
jle
lahf
loope
push
inc
dec
iret
jl
mov
xor
jg
mov
sub
imul
jmp
loope
xchg
sub
mov
xor
pop
xchg
xlat
loope
sahf
aas
ficomps
xchg
add
cmp
or
sub
sub
leave
int3
push
pop
jb
push
shll
jp
cltd
inc
push
out
mov
jnp
aas
xlat
test
adc
and
add
mov
add
test
movsl
add
jmp
sbb
das
add
mov
adc
in
mov
icebp
mov
es
cmpsl
pop
pop
or
pop
inc
fistps
test
inc
dec
inc
mov
jmp
mov
push
xor
push
add
outsl
adc
mov
lock
fwait
mov
inc
cmc
enter
imul
mov
fwait
into
fcmovu
cwtl
popa
add
cwtl
vmovq
cmc
inc
xor
pushf
jg
cmp
js
clc
pop
sub
xchg
movsb
jns
push
or
jg
xor
stos
mov
cmp
lods
add
sub
inc
inc
test
adc
js
mov
imul
and
test
sub
in
dec
je
push
sbb
lcall
push
scas
aad
mov
std
mov
jns
clc
cmp
sahf
lahf
dec
dec
mov
jno
clc
jo
jle
xchg
dec
cli
cwtl
scas
mov
dec
in
sbb
push
enter
jg
add
jnp
pop
daa
inc
xor
cltd
cld
nop
or
fidivrs
fldenv
push
mov
or
inc
xchg
mov
icebp
sbb
adc
lcall
sub
jb
cmp
push
pushf
xlat
mov
fnstcw
mov
or
or
jle
cltd
adc
sti
aam
push
xchg
mov
xchg
jle
out
stos
roll
mov
mov
loopne
fimuls
sahf
jg
sbb
xor
dec
jns
or
loop
jmp
sbb
push
mov
push
ss
ljmp
add
mov
in
adc
lret
mov
jg
cmp
xor
inc
jae
in
xor
jno
xchg
movsb
testb
call
mov
sub
es
jmp
inc
inc
xchg
sbb
je
aam
xchg
mov
daa
movsl
jmp
xchg
in
push
dec
fimull
icebp
lods
shrl
sub
mov
sti
insl
mov
lret
dec
pop
mov
dec
cmpsl
nop
inc
jecxz
adc
mov
push
outsl
xchg
cwtl
jb
cmp
aas
test
mov
and
sbb
int3
or
sub
incb
xchg
out
jo
pop
dec
aas
push
mov
cmp
and
mov
sub
lods
cmp
sub
and
mov
jl
mov
mov
aas
loop
xchg
js
push
aas
adc
pop
fs
dec
jmp
pusha
cwtl
in
sbb
dec
mov
fadds
pop
test
out
lret
in
dec
cltd
in
adc
xchg
pop
pop
cmp
in
jge
test
mov
jne
sub
push
push
mov
clc
sbb
sub
xor
fsub
lcall
dec
push
lea
add
mov
lret
jns
dec
lcall
fldcw
loope
or
mov
jb
sbb
mov
inc
dec
fildll
dec
enter
xchg
lcall
out
in
repnz
mov
lods
addr16
aam
into
sbb
leave
lret
enter
mov
jns
sub
mov
in
test
lret
outsb
or
repz
fnsave
ds
jp
shll
ds
shlb
xor
addr16
mov
sbbb
cli
leave
push
mov
add
pusha
push
imulb
mov
or
fildl
mov
aad
add
stos
std
sti
sahf
lods
call
sub
lret
outsl
shl
cmpsl
mov
fiadds
int3
adc
stos
ja
xchg
fiaddl
aaa
in
pop
pop
aaa
sub
pop
rclb
outsb
cld
and
push
pop
aam
mov
jle
shr
dec
jnp
sarl
insb
popf
stos
sarl
hlt
sub
push
fmull
pop
jns
push
mov
inc
cli
lahf
fstps
les
add
sbb
mov
inc
aad
call
movsb
jmp
rolb
cmp
sbb
aas
sub
fwait
cli
out
and
mov
cmp
repz
mov
mov
leave
das
jno
shlb
insl
adc
loope
in
notb
pop
outsb
hlt
shr
or
lcall
pop
lods
push
mov
aam
xor
pushf
push
add
sub
aam
cmc
jg
sub
jo
enter
pop
sbb
pop
mov
mov
mov
xlat
aas
cmpsl
fsubs
out
into
dec
int
cli
push
pop
mov
mov
loopne
into
adc
cltd
add
jecxz
loope
mov
dec
enter
das
movsl
cmp
sbb
fistpl
cmp
push
inc
add
add
jnp
lret
orb
mov
xchg
outsl
jo
mov
outsl
add
mov
inc
das
cmp
push
cmp
outsl
mov
cmp
jne
or
inc
mov
push
sbb
outsl
in
mov
das
shlb
loopne
pop
push
push
pushl
loop
push
jne
cltd
cld
dec
add
push
mov
scas
sub
mov
js
rolb
pushf
mov
sbb
cmp
mov
fisubs
ss
mov
loopne
adc
cmp
movl
dec
inc
pop
sarb
jl
and
dec
push
cmc
fs
movb
jno
lods
sahf
sbb
cmp
cltd
jmp
cld
inc
cli
popf
test
shr
sub
xchg
xor
adc
ficomps
aad
mov
xchg
xchg
adc
dec
push
arpl
push
outsl
lret
in
push
shlb
out
fnstenv
mov
mov
xchg
sub
imul
push
mov
dec
xor
xchg
imul
or
sub
ficoms
inc
xchg
and
jns
iret
das
cld
cltd
stc
je
inc
fists
adc
nop
pusha
cli
lret
js
mov
shlb
leave
xchg
les
mov
jno
scas
fiaddl
pushf
jmp
sbb
mov
sub
mov
sub
leave
mov
push
test
movsb
mov
push
sub
vsqrtpd
xor
xchg
stos
add
xchg
mov
add
and
pop
jbe
pop
inc
jg
in
xchg
push
jecxz
and
mul
loopne
mov
push
xor
into
fwait
adc
clc
leave
mov
pop
cmp
or
pop
sbb
cmp
sbb
sets
cmp
fwait
das
jb
sti
mov
sub
test
jl
xor
cwtl
or
les
pop
jnp
push
push
cmpsl
add
inc
ja
lock
dec
jnp
aam
aaa
add
enter
loope
jmp
dec
ds
out
gs
and
pop
test
stos
das
shlb
mov
mov
loopne
pop
mov
sbbl
enter
adc
pop
adc
outsl
mov
jp
sbb
js
cmp
lods
incl
mov
pop
push
adc
or
xor
jae
or
mov
xor
pushf
ret
or
mov
mov
fdivs
jne
stos
push
fsts
sbbl
cmp
shlb
shl
stos
dec
lret
dec
inc
sahf
and
sbb
sbb
pop
xchg
cltd
sbb
rorb
or
sbb
xchg
lods
repz
jecxz
cs
cmp
jae
mov
dec
add
pusha
popa
int3
push
add
addr16
adc
mov
pop
cwtl
mov
and
dec
das
cmp
xchg
mov
test
rclb
dec
dec
cmp
sub
inc
mov
mov
mov
xor
dec
xor
push
mov
movsl
dec
mov
neg
lret
mov
mov
test
jns
nop
ret
stos
sbb
cmc
dec
out
in
insb
popa
sbb
pop
add
lds
mov
sub
leave
jg
hlt
hlt
mov
int3
insl
test
rcrb
sbb
xchg
and
cmc
cmp
cmp
cltd
aam
jb
and
jns,pn
sbb
lahf
arpl
sub
dec
ds
inc
out
aam
mov
sarl
mov
enter
aam
adc
cmp
jns
out
ljmp
pop
pushf
inc
int
push
push
int3
xor
or
in
scas
pop
sbb
lds
test
jo
sbb
lds
es
push
and
sbb
test
push
ds
mov
inc
add
lcall
and
or
push
add
addb
and
xor
push
ret
cmc
into
pop
pop
nop
cwtl
icebp
jle
add
pop
scas
cmp
jle
push
aaa
cmc
ljmp
mov
fiadds
cmp
mov
lret
inc
mov
in
or
xchg
in
loop
xchg
sbb
pop
in
insl
fstl
jne
rcrb
je
pop
push
cmp
addl
daa
inc
mov
ret
adc
in
fstpt
xor
insb
mov
xchg
jmp
mov
cmp
sub
cld
xchg
fisubrs
jmp
divl
ljmp
sbb
iret
cmp
dec
stc
xor
pop
roll
shlb
pop
xor
out
mov
adc
in
push
xchg
push
outsb
and
stc
or
inc
mov
pop
pop
or
and
ss
mov
shlb
inc
ds
outsb
sbb
gs
sub
mov
mul
pop
adc
cmp
stos
filds
shr
sbb
lahf
fidivl
mov
lods
fdivrs
mov
and
mov
in
repz
adc
fiaddl
fadd
scas
sub
inc
push
je
jns
cmp
cld
jp
mov
out
mov
xlat
xchg
or
pop
fldt
jmp
or
mov
mov
mov
out
aam
jp
add
mov
cmpsb
out
repnz
out
sbb
mov
scas
aad
lods
aaa
fwait
adcl
repz
fsubp
inc
cmc
setp
fidivrl
mov
mov
jg
negl
call
sub
jnp
call
out
cltd
fcmovbe
gs
pop
cld
daa
add
adc
or
adc
jmp
inc
mov
push
xlat
or
cmpsb
mov
adc
enter
inc
add
adc
jae
arpl
inc
xchg
fwait
loop
mov
or
mov
xchg
ret
dec
dec
pop
enter
and
xchg
cmp
outsl
sbb
push
jbe
mov
dec
add
sbb
stos
cmpsb
push
push
cld
adc
mov
movsb
mov
popf
out
mov
out
rorl
in
lods
insl
leave
stc
mov
test
sbb
jae
neg
ret
dec
clc
mov
sub
popa
clc
shll
outsl
and
and
stc
jnp
jns
pop
and
inc
bnd
mov
xor
lods
int
fisubl
gs
jge
test
je
xlat
rcrb
jno
mov
movsl
sub
mov
xor
ret
repz
add
inc
out
mov
daa
jbe
xor
cmc
mov
popa
shl
sub
pop
stos
xchg
mov
push
mov
sti
mov
pop
sub
xchg
shl
jbe
sub
inc
stos
aad
loope
mov
jns
pop
sbb
add
sbb
xor
jbe
ror
or
insb
push
mov
rcrb
dec
fcoms
mov
insb
pop
insl
fidivrl
decb
mov
push
arpl
mov
shlb
fdivr
popf
adc
add
or
push
fadd
push
push
fcmovu
cmp
dec
inc
cltd
andl
daa
fdiv
enter
jge
arpl
jae
dec
filds
mov
add
jnp
cwtl
std
mov
out
stc
inc
es
dec
push
cmp
mov
arpl
xchg
jns
and
jno
mov
mov
cli
enter
mov
adcl
or
cltd
repnz
inc
dec
arpl
mov
clc
test
sarl
hlt
lcall
lahf
mov
cld
andl
es
outsb
lds
pop
push
pop
stos
test
cld
enter
icebp
nop
test
pushf
lcall
mov
lcall
das
push
xchg
sti
cmp
push
js
fsubrs
fs
jp
in
nop
pop
inc
lods
push
pop
cli
cmpsb
push
jg
pop
cltd
xchg
mov
icebp
ficompl
sbb
pop
sub
pusha
inc
xlat
mov
adc
xor
cmp
pop
arpl
test
gs
jno
push
data16
ret
out
getsec
test
lahf
ss
les
pop
xor
lret
stc
mov
pop
push
pop
mov
shrb
cmp
pushf
rcll
paddw
insl
jp
cmovo
rol
shll
repz
imul
test
adc
or
sub
xadd
dec
std
mull
xchg
aad
jno
pop
jne
sub
enter
test
out
dec
jns
xchg
dec
jns
or
dec
fsubrl
xchg
sbbb
js
xchg
jno
mov
outsb
add
int3
sub
mov
jecxz
loope
ds
sub
xorl
stc
rorb
stos
insb
out
ret
jb
aad
movsb
roll
cmp
xor
xlat
mov
ret
xor
dec
fs
js
scas
scas
xor
out
xor
jge
jb
je
jno
dec
or
pushf
jne
xor
outsl
clc
mov
inc
daa
xchg
ja
inc
mov
lods
stos
mov
mov
push
in
sbb
cmp
in
fst
in
pop
add
adc
fdivs
bound
enter
cld
xor
repz
inc
fsubl
fdivrs
mov
mov
dec
lds
int3
xlat
loopne
inc
mov
sbb
in
ja
push
sbb
stos
adc
imul
f2xm1
repnz
out
insl
mov
and
push
frstor
sub
adc
cmp
jbe
dec
insl
pop
push
shll
popf
sub
add
and
jnp
cmp
mov
nop
sbb
inc
add
mov
xor
fcomp
out
aad
negb
cmp
cmpb
push
movsl
and
xor
push
mov
repz
pop
in
xchg
push
pop
sbb
cltd
call
and
stos
inc
xor
out
xor
test
in
dec
mov
mov
hlt
sbb
pop
jl
xor
leave
push
imul
xorl
cmpsl
mov
pop
inc
jb
es
fdivs
roll
scas
sahf
xchg
jbe
cmp
mov
ja
or
xchg
fdivs
cs
shlb
inc
cmp
not
lods
or
repz
jb
mov
inc
lock
loop
push
mov
lcall
dec
jns
xor
sbb
pop
repnz
jmp
imul
mov
aam
insb
roll
shl
test
and
and
mov
sbb
ss
mov
and
mov
fldl
lods
push
mov
stos
fs
not
cmp
push
movsb
jp
aas
sub
dec
cmp
stos
test
push
dec
jne
jnp
inc
mov
sub
xchg
or
addr16
mov
jl
mov
out
and
mov
dec
aad
int
andb
xchg
mov
scas
in
fs
fiaddl
fs
sbb
inc
dec
jb
je
cmp
dec
lret
mov
sysexit
mov
stos
mov
mov
adc
sub
or
ss
loop
mov
mov
lock
inc
std
and
enter
add
arpl
mov
test
sub
xchg
push
mov
pop
inc
adc
push
or
jbe
stc
cmp
adc
inc
xchg
mov
pop
data16
icebp
push
in
mov
gs
dec
aaa
xchg
fwait
adc
mov
push
jns
mov
enter
and
addb
daa
sbbb
orb
push
mov
cmpl
dec
adc
pop
jbe
mov
xchg
aaa
insb
jne
jb
shr
ret
loop
adc
add
fstl
sub
push
mov
rcrb
dec
ret
testb
scas
jg
mov
xor
sbb
ds
mov
cmp
push
dec
mov
das
call
fmull
lds
out
inc
lods
gs
popf
lea
ja
pop
es
push
imul
outsb
add
arpl
rol
cwtl
xor
jge
inc
add
call
or
in
mov
out
xlat
dec
ja
rcrb
rcrb
ljmp
daa
mov
mov
pop
shll
push
ss
out
in
ss
fbld
sub
jle
sub
insb
mov
sbb
rcll
out
movsl
int
test
imul
push
imul
gs
xor
mov
neg
lahf
pop
mov
push
movl
rcrb
imul
cmp
ds
shlb
outsb
inc
jg
sub
fcomip
sub
add
add
inc
int3
add
push
mov
cmc
adc
inc
sbbb
add
sbb
in
pop
outsl
mov
mov
and
or
imul
lock
push
daa
fcmovb
mov
in
iret
int3
cli
cli
dec
sbb
push
sbb
flds
mov
xor
je
inc
add
shrb
imul
mov
jb
ficomps
sbb
fisttpl
bound
lret
mov
fwait
mov
lds
jno
rcrb
stos
cmp
lret
cmc
dec
sbb
add
mov
jne
push
mov
mov
mov
shll
push
dec
ret
ret
dec
movsl
stos
push
lock
iret
add
cmp
xor
cs
imul
xor
or
add
push
or
nop
adc
mov
sbb
dec
inc
pop
xor
inc
adc
dec
jb
xchg
inc
data16
sbb
mov
in
and
jo
adc
push
ss
and
xor
imul
cmp
xchg
dec
jbe
insb
lahf
daa
and
pop
dec
cltd
jg
dec
sbb
aad
push
lock
adc
adc
sub
xchg
cli
or
cld
sbb
inc
lods
notl
iret
xchg
mov
loope
rcll
push
jmp
mov
loope
lock
pop
int3
clc
hlt
fdivrs
pop
xchg
cmpsl
addr16
out
inc
js
roll
bound
imul
fiaddl
cmp
inc
in
sbb
leave
out
ja
pusha
sub
lar
add
xchg
mov
push
js
jge
fimuls
sbb
lea
push
mov
enter
repnz
mov
mov
inc
into
sbb
adc
fs
nop
pop
push
dec
mov
jp
out
test
xor
cmp
ds
popf
sbb
pop
adc
test
cmp
push
jg
xor
call
lret
mov
jge
jl
mov
lret
mov
push
jecxz
addr16
lret
mov
shlb
and
sbbb
fnstcw
clc
test
cld
cli
mov
or
add
pop
js
leave
loopne
pop
dec
mov
orb
mov
cmp
push
pop
lcall
jae
iret
push
js
hlt
inc
clc
jae
and
mov
mov
outsl
sub
fdivl
adc
pop
inc
lods
stc
movlhps
cmp
push
stos
inc
rol
decl
movsl
xchg
xchg
mov
rcr
xchg
leave
or
jns
in
mov
dec
add
push
and
push
in
cmc
and
mov
sahf
xchg
lahf
and
cmpsw
xor
mov
popf
pop
jmp
dec
xchg
inc
outsb
movsl
in
loope
inc
movsb
fiaddl
or
rcrb
aaa
mov
data16
or
lods
rorb
sahf
icebp
cmp
lahf
lods
add
loope
mov
and
ja
add
jmp
aas
cmc
xchg
das
jo
scas
push
pop
gs
fcoml
mov
cmp
movsb
push
dec
fistps
aas
adc
sbb
ret
ja
out
xchg
lcall
fisubrl
mov
xchg
in
cmp
jp
cwtl
popa
mov
and
inc
in
mov
cmp
dec
fmull
movsl
cmc
cmp
clc
adc
xchg
leave
incb
sahf
repz
icebp
dec
cli
jl
jp
aaa
pop
insb
dec
inc
or
mov
mov
jmp
std
scas
stc
out
xchg
in
mov
xchg
xchg
sbb
jmp
pop
scas
dec
addl
push
leave
and
lret
add
test
mov
sbb
mulb
mov
xchg
xlat
push
mov
jae
loope
insl
inc
gs
sahf
orl
and
ret
adc
aad
mov
addr16
call
sbb
mov
sahf
pop
in
cmp
and
and
int3
test
mov
pop
cld
jp
loopne
arpl
shlb
pushf
aaa
insl
sub
mov
dec
add
test
out
inc
fistl
cmp
mov
lods
cmp
add
loop
sbb
lcall
xchg
xor
xor
xchg
aad
int
je
addr16
mov
rorl
lods
jmp
mov
xlat
in
cmp
shll
movsb
dec
mov
adc
mov
fwait
out
js
out
in
sbb
cmpl
adc
pop
sbb
mov
outsb
push
cmpsb
sbb
mov
mov
fwait
pop
jne
dec
mov
mov
mull
test
xchg
cmp
xor
stos
sub
pop
sbb
xor
and
sbb
mov
pop
lret
insb
stc
loop
add
shll
sbb
dec
xlat
cmpsl
push
cmpsl
cmpsl
push
mov
dec
cmp
gs
inc
aaa
sarb
repnz
loopne
xor
push
fs
aam
loopne
cmp
xor
add
mov
insb
sbb
in
jno
jp
test
mov
movsl
call
mov
test
loope
dec
shl
aaa
mov
cmp
jge
dec
jns
and
add
bound
cmp
icebp
mov
mov
sub
outsl
pop
push
jnp
lahf
jmp
test
adc
outsb
lods
dec
mov
sub
push
sub
leave
rorb
pop
mov
mov
cli
push
xchg
pop
xor
push
int
xchg
lods
jnp
jmp
aad
decb
stos
jb
push
nop
adc
lds
and
cltd
push
mull
loop
mov
pop
outsb
and
mov
mov
adc
arpl
or
add
and
xchg
out
jl
and
std
popa
cmp
jle
dec
xchg
jle
sbb
aam
jns
add
sub
inc
mov
push
sbb
jb
adc
icebp
cltd
add
lea
mov
fildl
cmp
in
inc
jb
jge
sahf
call
xchg
sbb
jecxz
aas
push
dec
out
icebp
lret
movsb
xchg
test
stos
test
mov
push
inc
sbb
call
fstpt
inc
adc
sbb
int3
pop
jne
dec
into
scas
pusha
adc
inc
call
movsl
push
jle
outsl
enter
in
data16
ds
or
adcb
inc
cmp
ret
mov
test
enter
sbb
loop
dec
into
jne
jno
push
xor
add
adc
jmp
adc
cld
in
mov
pop
fdivrs
sbb
movsl
scas
and
lret
mov
icebp
scas
jge
fs
mov
lea
mov
stc
add
in
iret
lds
imul
xchg
aad
out
icebp
adc
mov
call
lods
mov
pop
lods
sub
imul
cmp
inc
cmpsb
shll
dec
cmc
add
mov
push
inc
shlb
pop
fisttps
repz
data16
xchg
mov
cs
xor
ja
sub
pop
push
push
repz
ret
xor
pop
in
gs
sub
fisubrs
ss
lods
cmp
stos
or
sub
xor
shll
imul
loopne
fdivr
jne
outsb
add
cmp
std
fs
mov
inc
insb
xchg
inc
lahf
cwtl
push
fsubs
mov
iret
rorb
movb
dec
aam
sub
inc
ss
in
add
xchg
push
cmp
mov
popa
xchg
data16
jne
adc
sub
xor
sbb
popf
jecxz
sti
cwtl
cmc
cmp
sbb
pop
test
dec
and
imul
and
enter
sub
repz
pop
jae
sbb
push
and
out
not
mov
in
jge
sub
cmp
push
jno
insl
rcrl
adc
out
call
cmpsb
add
js
int3
push
cmp
inc
in
imul
dec
outsb
cli
jge
out
sbb
test
lea
cmp
rcll
jns
test
clc
sbb
pusha
stos
mov
mov
jge
push
push
add
mov
and
push
adc
or
pop
push
pop
or
outsb
jnp
fwait
out
jmp
push
jno
xor
pop
push
das
xor
ret
xlat
add
and
xor
cmp
sbb
xchg
les
and
jbe
aas
lret
sub
or
adc
mull
mov
outsb
lahf
pop
aaa
jl
ficompl
xor
dec
aas
movsl
std
jnp
mov
mov
insl
mov
mov
andb
pop
cmc
mov
pop
shll
test
test
xchg
inc
into
mov
or
jns
mov
test
jae
ds
push
mov
jnp
daa
fstpl
sbb
mov
xchg
in
daa
adc
cmp
test
cli
insb
inc
mov
js
cmc
shrl
push
adc
push
ret
scas
push
ja
and
push
in
cmp
outsb
call
fisubrs
lret
inc
lods
mov
aas
inc
or
jge
adc
inc
fisubl
mov
repz
int3
out
pushf
mov
inc
mov
add
std
push
ror
sbb
push
push
out
clc
dec
xchg
sbbl
shrb
push
loope
lods
push
pushl
in
adc
mov
lods
cmpsb
test
sbb
lret
lea
mulb
pop
gs
in
mov
xchg
push
mov
jge
mov
and
jb
mov
dec
sarl
xchg
and
pop
loop
xchg
dec
and
sub
enter
and
or
xor
lock
bound
movsl
loope
adc
repnz
call
xor
aad
pop
call
and
or
mov
cli
and
addr16
movsb
sbb
andl
inc
jae
inc
lret
sub
jg
bound
jo
daa
and
cwtl
add
xor
test
ja
lds
outsb
jp
aad
sub
into
mov
mov
mov
jne
mov
mov
inc
xor
aad
push
out
cmp
aad
mov
mov
xlat
into
shrl
sahf
dec
bound
insb
in
int
cltd
inc
outsb
jmp
dec
cmc
mov
cli
inc
cmpl
jle
in
into
ret
fidivs
xchg
imul
add
popf
pop
xor
mov
lcall
lods
addb
and
ja
movsl
jecxz
mov
insl
push
fdivs
xchg
sbb
fstpt
sbb
push
and
je
push
pop
idiv
mov
nop
ss
stc
outsb
xchg
mov
sti
notl
inc
pop
addr16
pop
ret
mov
xchg
cmp
scas
mov
xor
mov
sbb
mov
and
xor
sbb
lret
nop
mov
icebp
pop
outsb
std
dec
xchg
ret
jae
hlt
dec
push
cmpsb
js
sbb
sub
inc
loope
ds
adc
dec
mov
mov
push
xchg
inc
repnz
aaa
repnz
cli
orl
mov
cmp
stos
xlat
test
add
add
inc
loopne
cmp
mov
pop
dec
adc
cmp
adc
jl
cmpsl
fwait
outsb
push
aas
push
push
dec
adc
xchg
lret
loopne
movsb
sahf
ds
stos
int3
inc
adc
mov
inc
pop
mov
mov
ret
popa
mov
jb
std
aaa
mov
cmp
cmpsl
or
sti
out
movsl
push
xor
add
xor
dec
bnd
je
sub
out
outsl
push
dec
push
xchg
sti
sub
lock
addr16
lcall
shr
push
add
loope
aam
or
pop
in
inc
mov
out
add
ret
in
mov
dec
or
dec
cltd
mov
jecxz
into
pop
outsb
repnz
in
sahf
lret
pop
dec
sbb
jno
jecxz
cmpsl
arpl
in
jge
nop
cmp
dec
enter
movsl
mov
leave
mov
cmp
jo
aaa
push
cmpsl
mov
sub
in
cli
or
mov
roll
mov
mov
mov
ror
xchg
adc
cmp
scas
xor
pop
das
mov
lds
test
mov
aam
mov
sub
lcall
pusha
push
icebp
or
or
sti
shr
or
sub
std
mov
movsb
icebp
push
bound
movsl
pop
incb
and
in
out
call
cld
loope
fcomip
cltd
push
bound
std
lret
std
add
sti
out
cwtl
inc
inc
push
cs
mov
mov
mov
in
xor
xchg
insl
addr16
xchg
xchg
arpl
pop
mov
jmp
dec
je
dec
in
push
leave
lret
jecxz
sbb
push
cwtl
mov
shlb
stc
ss
lods
movsl
fnstenv
outsb
cmpsl
xor
pushf
jnp
lret
das
popa
in
adc
mov
mov
orb
iret
movsl
cli
mov
loope
mov
xchg
xor
imul
or
shll
test
repz
add
push
xor
jmp
xchg
push
stos
mov
andl
dec
pop
xor
sbb
push
jge
add
add
xor
add
lds
cli
js
jl
mov
sarb
xchg
pop
aad
imul
repz
roll
ret
mov
cmp
push
ficomps
xor
lods
or
mov
xor
aam
mov
sub
xchg
loopne
imulb
into
inc
fldenv
xchg
hlt
sbb
inc
cmc
add
hlt
rcrb
cmpsb
loopne
jmp
fwait
jne
ljmp
movsl
and
in
popf
iret
add
in
pusha
adc
loopne
sbb
bound
adc
mov
cmp
mov
xchg
test
sub
mov
push
rol
outsl
sbb
sub
scas
cmpsb
fsubp
lret
or
jae
in
movsl
push
add
bound
mov
jge
imul
fwait
popa
mov
mov
lret
mov
mov
imul
popf
imul
fnstsw
push
add
fcoml
or
call
mov
das
mov
es
aad
in
sahf
add
push
inc
pop
add
xchg
cltd
movl
xchg
int3
push
pop
mov
cmpsb
les
pop
sub
dec
xor
adc
js
mov
repz
lahf
ja
outsb
jb
gs
push
repnz
aas
inc
cmpb
inc
or
sbb
cmpsb
xor
cld
out
iret
jp
addr16
fsubrl
stc
pop
sub
or
pop
mov
pop
mov
cltd
xor
xchg
addr16
rorb
je
mov
inc
in
dec
mov
mov
adc
scas
fdivrs
in
popa
shr
jmp
dec
and
push
popf
mov
stos
jge
sarb
dec
push
int
pop
inc
cld
push
mov
jae
sbb
mov
pusha
or
add
loop
test
in
addr16
inc
lea
pop
addr16
pop
xor
scas
jl
icebp
mov
xchg
rcll
xchg
loopne
lock
cmp
jnp
sbb
push
loop
insl
leave
dec
int
test
jnp
shlb
jns
mov
test
mov
bound
imul
mov
fldl
jne
pop
lahf
add
orl
clc
insb
and
fcoms
xchg
sbb
mov
je
fcomps
and
inc
ja
adc
dec
int
add
scas
scas
mov
mov
mov
loop
sbb
mov
xor
xor
push
jae
mov
popa
inc
ret
inc
push
mov
popf
mov
dec
mov
push
and
and
ret
xchg
inc
inc
das
or
hlt
fs
pop
outsb
and
lods
addl
lret
cmp
mov
mov
jns
test
out
test
xchg
popf
xchg
roll
fld1
push
insb
and
adc
jecxz
sub
scas
mov
hlt
lcall
stos
pusha
fsubrl
lret
outsl
imul
sub
mov
push
sarb
push
xchg
mov
in
ffreep
fs
mov
pop
xor
outsl
rcll
mov
mov
and
jnp
out
rorl
mov
and
xchg
aam
jb
jbe
cwtl
orb
or
out
adc
lods
cmp
lock
repnz
in
lret
mov
stos
push
les
loop
aas
xchg
rcrb
push
cmp
sbb
ljmp
outsb
lock
and
or
insl
cs
inc
xchg
pop
lea
sub
xchg
fstp
cmp
ficompl
add
std
arpl
sti
pop
jae
cltd
inc
mov
call
or
add
cli
scas
dec
inc
mov
icebp
cmp
in
push
shlb
aam
adc
int
jp
dec
xchg
push
push
mov
jnp
loopne
jg
xor
cmp
jbe
mov
inc
mov
test
dec
ja
in
push
int
mov
pop
cmp
and
outsl
lea
enterw
stos
mov
jnp
clc
xor
pop
xor
push
roll
jns
xor
and
mov
add
inc
aam
into
ret
dec
ds
clc
lahf
ds
sbb
dec
pushf
iret
add
scas
xchg
lods
gs
xor
add
loopne
and
lock
scas
jno
bound
vpsubsw
xlat
push
and
cmp
clc
cs
lret
mov
fsubl
mov
hlt
sub
inc
scas
cltd
dec
xor
jne
inc
jbe
jmp
or
int
xor
jmp
fs
jge
push
sbb
in
incb
insl
leave
cld
insl
enter
bound
xchg
xor
cli
mov
test
pop
pop
xchg
jge
pop
insl
xchg
pushf
cwtl
pop
mov
push
mov
adc
xchg
cmc
gs
sub
mov
xchg
sub
mov
lods
push
jp
adc
rol
mov
call
fildl
mov
push
outsl
xchg
and
jno
ret
jmp
sbb
xor
add
push
outsb
dec
jne
or
popf
sahf
inc
push
lds
mov
pop
subb
xchg
daa
dec
sbb
stos
sti
cmp
cmp
shlb
out
jmpw
push
ss
or
cmpb
stc
dec
inc
outsl
adcl
jge
dec
int
cltd
test
icebp
loope
test
out
or
add
push
mov
jle
adc
test
call
loope
jle
pop
imul
and
scas
ds
lock
ljmp
repz
pop
push
scas
and
xor
insl
adc
mov
sar
imul
loopne
inc
push
mov
je
mov
dec
sbb
push
scas
mov
imul
inc
stc
inc
push
push
outsb
push
cltd
aaa
fisubrs
adc
pop
xor
sbb
pop
push
ja
lods
and
test
shll
jb
aad
cs
pop
xchg
mov
push
push
dec
fwait
loop
push
testl
adc
dec
pop
loope
int3
les
lret
xor
sahf
sub
xor
stos
les
in
jne
aam
pop
pop
insb
mov
ss
jae
sahf
push
imul
scas
mov
jp
iret
jae
aas
cs
and
lock
stc
loop
pop
sbb
movsl
jns
adc
push
push
stc
int
test
cmp
das
jmp
ret
cmp
dec
ret
push
adc
jns
inc
fstpt
hlt
or
jp
adc
sub
jg
jl
enter
sub
cmp
xchg
movsb
push
sarb
ss
mov
xor
sbb
mov
cltd
pop
inc
neg
outsl
push
sbb
push
xor
mov
or
in
rcr
lock
fdivr
cmp
loop
adc
jl
dec
shl
cltd
cmp
sbb
push
shlb
adc
in
data16
mov
jne
mov
out
dec
je
fmul
push
int3
xor
mov
ret
std
sub
dec
icebp
shlb
out
sbb
inc
pop
cmp
es
stos
js
lea
mov
shlb
mov
pop
inc
mov
popf
xchg
ds
repnz
pusha
sbb
jnp
mov
hlt
or
sub
inc
adc
xor
lds
cltd
mov
dec
adc
sbb
data16
scas
sbb
pop
int3
cwtl
inc
cmp
or
push
mov
negl
lcall
idivl
insl
inc
mov
or
mov
xchg
xchg
cmp
add
sub
sub
call
inc
loope
jp
ss
das
mov
dec
or
cmp
or
ja
mov
mov
fstpl
cmpb
enter
popf
xchg
xchg
loope
mov
xor
xorb
or
adc
incl
jp
pushl
jnp
orl
movsb
sub
inc
ret
xchg
xlat
mov
repz
fmull
test
sub
fs
sub
out
dec
add
arpl
ret
movsl
sub
dec
mov
push
jne,pn
sbb
push
jge
scas
in
test
sarl
pop
adcb
lods
or
mov
pop
popa
lea
lds
xchg
push
rolb
addr16
insl
pop
sbb
mov
aaa
test
push
mov
xchg
cs
mov
or
ret
andl
pop
inc
sbb
cld
push
arpl
jmp
int
sbb
outsb
push
sbb
repz
je
inc
outsl
scas
outsb
fdiv
mov
jnp
add
push
xchg
sub
add
pop
dec
out
std
xchg
gs
ficoms
inc
repz
call
js
add
mov
mov
sub
jbe
mov
inc
lds
pop
test
insb
push
push
add
test
rcr
test
iret
cmpsl
sarl
push
pop
lock
pushf
dec
pop
fwait
rclb
cwtl
mov
xchg
divl
sub
movsl
and
test
adc
bnd
lcall
cmp
sub
imul
pop
and
jae
sahf
pop
insb
pop
mov
mov
pop
in
xor
stc
jl
pushf
flds
xchg
mov
mov
lods
pop
rorb
adc
dec
adc
test
jp
mov
lea
xchg
dec
aas
push
xchg
xchg
lret
adc
lea
mov
addr16
rorb
mov
lock
mov
mov
xor
lret
add
shll
pushf
insb
jnp
iret
sbb
jecxz
mov
jae
xor
mov
xchg
sbb
subb
push
and
loope
rol
aam
or
lock
test
fdivrs
and
push
clc
or
loop
test
mov
jae
sahf
ret
xchg
adc
fsubrs
scas
dec
jge
xor
shr
sbb
jo
arpl
iret
ss
mov
stos
sbb
push
pop
std
add
add
cli
aas
push
add
shlb
movsl
jmp
lahf
shl
pop
mov
xor
pop
adcb
gs
ror
add
dec
mov
push
add
enter
mov
fst
cmp
dec
faddl
pop
std
xchg
movsl
mov
ret
lea
mov
jmp
movsb
dec
fs
shll
sub
pop
mov
cmp
js
pushf
xlat
pop
dec
jno
stc
clc
pop
mov
cmp
mov
jp
jecxz
mov
dec
jg
ja
jg
xlat
sub
test
popa
sub
pop
cmpsl
add
xchg
mov
std
scas
push
test
scas
mov
daa
mov
lcall
ljmp
jmp
aam
sahf
cmp
xor
mov
or
clc
outsb
sub
std
jb
sub
lret
adc
ss
dec
inc
fstpt
test
pmaddwd
jl
push
cmpsb
pushf
cmpsl
dec
sub
cld
xlat
leave
push
mov
outsb
mov
add
or
rcr
sahf
outsb
mov
fimuls
gs
ss
cmp
xchg
stc
pusha
and
mov
xor
dec
push
call
sbb
cld
cmp
or
ret
cltd
outsb
sub
cmp
pop
cltd
lods
mov
mov
shl
lods
scas
out
into
ficomps
clc
mov
fistpl
sub
addr16
mov
ja
sbb
insb
roll
out
call
inc
sti
inc
addr16
adcl
jae
js
movsb
fistl
iret
sbb
les
jecxz
popf
xor
packuswb
vmread
inc
bound
cmp
test
xchg
daa
lods
mov
hlt
xchg
in
jne
and
jecxz
mov
pop
and
nop
push
cmp
scas
dec
stos
adc
cmp
insb
add
lret
cs
jg
int3
inc
mov
mov
ljmp
fcomp
ds
pop
cld
or
icebp
sbb
push
adc
das
iret
out
shlb
dec
out
inc
push
mov
mov
movsb
dec
and
cli
hlt
pusha
mov
mov
scas
mov
jmp
js
xor
xor
ja
xchg
jecxz
gs
xchg
pop
jae
mov
push
mov
jb
and
outsb
lea
mov
pushf
mov
and
push
jne
out
and
jo
push
das
js
mov
stos
xor
imull
lods
in
je
movsl
mov
mov
cmp
mov
pop
and
loop
cmp
rcrb
negb
insb
cmp
lods
test
and
in
and
push
cmp
cmp
addr16
icebp
pop
pop
jmp
arpl
test
pop
fs
adc
ljmp
and
sbb
pop
loopne
cmp
pop
or
test
jne
fnsave
or
xchg
inc
cmp
mov
sbb
cli
inc
imul
cmpsb
adc
in
xor
daa
lea
jle
mov
cmp
repnz
ss
or
push
mov
aam
outsb
mov
jae
adc
xchg
xchg
xor
jne
dec
jno
xor
push
dec
and
jb
je
sbb
loopne
push
mov
loopne
push
std
sub
nop
sbb
push
cltd
jge
imul
scas
pop
ja
jle
or
pop
pop
ss
pop
add
ja
inc
push
mov
inc
arpl
add
stos
sub
stc
add
cmpsb
pusha
lret
xchg
divb
jae
push
fwait
cwtl
pop
cmp
fstps
xchg
lods
sbb
adc
lcall
push
movsb
lds
icebp
daa
mov
pop
add
and
push
insl
cld
sbb
roll
push
insb
es
xchg
xor
mov
fwait
cmp
fwait
push
or
mov
mov
mov
imul
lret
jo
fisubl
pop
jmp
and
push
pushf
mov
nop
call
or
iret
pop
jle
pop
std
fmul
sub
fisubrs
cmp
add
xchg
inc
loopne
mov
iret
icebp
arpl
inc
cmpsl
dec
pop
cwtl
ss
pop
ds
mov
xchg
int3
subl
mov
cltd
pusha
mov
sbb
sahf
adc
and
loopne
in
xchg
cltd
clc
movsl
cmpsb
daa
xchg
sub
sub
fldl2e
ret
neg
js
mov
jle
cmp
rorb
push
jns
sub
mov
xchg
push
shl
xor
pop
out
add
push
arpl
jecxz
cmc
add
and
clc
cmp
xor
test
cmp
stos
scas
bound
mov
pop
cmp
xor
mov
push
jmp
fiaddl
sub
xchg
sub
and
icebp
xchg
enter
mov
or
outsb
add
lahf
int
call
js
add
daa
mov
sub
add
inc
mov
jmp
sbb
sbb
arpl
call
int
jnp
das
mov
les
lret
ret
cmp
jle
jbe
jle
popf
iret
pop
xor
pusha
inc
fld
nop
fwait
dec
jae
mov
push
jecxz
mov
ljmp
nop
mov
pop
sbb
mov
push
lods
xor
rcrb
andps
fbstp
mov
add
or
or
inc
push
test
pop
mov
lea
mov
lods
dec
gs
imul
jl
jb
clc
fstpt
loope
dec
in
dec
into
cmp
loopne
pop
add
stos
ret
cmp
inc
and
adc
repz
pop
addl
popf
sub
adc
jle
loop
stos
push
rorl
adcl
in
mov
sub
outsb
ja
jecxz
lods
dec
cmpsb
inc
dec
es
and
adc
loop
lds
stc
test
in
jmp
inc
sub
lcall
or
cmp
mov
lret
insb
mov
outsb
mov
push
pop
movsl
mov
lods
pop
and
push
sub
adc
mov
loop
aam
jge
jbe
les
movsl
push
push
xchg
and
scas
aad
divl
mov
xor
inc
inc
lods
stos
adc
or
cmpsb
std
lea
mov
mov
push
mov
fdivr
or
pop
mov
scas
repnz
cs
movsl
cmp
scas
divb
push
cmp
fnstcw
cmc
pop
dec
test
add
jle
xor
xor
xor
sbb
dec
sub
cld
test
adc
push
addb
mov
push
dec
es
ljmp
sbb
aad
adc
aas
fxch
add
sarl
in
outsl
fs
dec
mov
mov
cmp
add
inc
jmp
lock
out
fiaddl
push
mov
and
pop
cmp
mov
fcmovb
sub
iret
jns
pop
repnz
sti
inc
gs
pop
xchg
sbb
cmp
pop
jne
jmp
sbb
imul
mov
ret
fdivr
mov
sarl
shrl
rorl
lds
jg
add
out
pop
hlt
fcmovbe
mov
into
mov
xor
pop
mov
mov
addr16
pop
loopne
xor
inc
bound
js
addr16
test
fisubrl
ss
and
ficoms
push
and
je
jp
cmp
sub
cmpsl
mov
enter
sbb
ret
mov
jns
mov
dec
shrl
push
inc
jecxz
mov
sbb
inc
mov
mov
xchg
movsl
add
lock
aaa
adc
ds
mov
ljmp
es
inc
mov
mulb
fldcw
jmp
imul
incl
cmpsb
dec
insb
hlt
loope
lret
hlt
xchg
lea
add
sub
dec
adc
out
bound
xor
lret
ret
pop
into
imul
jns
sbb
pusha
loopne
scas
xor
dec
and
fsubrs
xchg
jecxz
ljmp
jae
dec
es
in
xchg
int3
add
inc
pop
or
hlt
int
sub
mov
shlb
inc
ficoms
cmp
lea
aas
insb
and
and
cmp
lock
push
js
sbb
dec
xchg
inc
xchg
andb
cmp
sbb
movsl
jo
aaa
and
pop
pop
and
mov
lcall
in
pop
stos
jge
jecxz
xor
inc
jl
jge
inc
es
rolb
mov
push
pushf
push
fidivs
sbb
pop
pop
mov
add
jp
shrb
cmp
lods
xor
insl
and
mov
adc
mov
mov
cmpb
lds
xor
jmp
rol
jmp
lret
roll
xor
push
lret
xchg
inc
sub
movsl
fistl
nop
adc
lahf
or
fldl
lret
imul
jmp
jns
sbb
jmp
rcrl
mov
adc
test
push
jmp
adc
mov
addr16
and
fldenv
jg
setle
enter
ds
add
mov
cltd
push
pop
xlat
pop
scas
xchg
lcall
outsb
lahf
jb
xchg
gs
adc
or
ss
sbb
clc
or
dec
add
cmc
add
std
jno
jno
daa
fwait
jecxz
jbe
inc
lds
das
fisubl
adc
xor
cmp
push
test
imul
jp
mov
fwait
mov
ja
mov
out
sub
icebp
pusha
lahf
sbb
mov
or
idivb
pop
movsb
ret
adc
jmp
or
jl
cmp
int3
jecxz
pusha
sbb
ljmp
dec
fldpi
inc
push
pop
pop
loopne
xchg
cld
inc
push
mov
jae
pop
clc
test
mov
ret
sub
and
xchg
fildll
push
addr16
hlt
and
stc
add
out
mov
popa
xor
in
cwtl
add
or
loop
sub
cmp
pop
xor
jmp
fdivrl
leave
mov
cs
push
ret
mov
xor
push
pop
mov
ja
adc
loop
das
pop
push
cli
pop
cmpsl
test
and
add
inc
jnp
ja
dec
dec
pop
movsl
lock
call
loope
fimuls
mov
xor
fcoml
xchg
jl
iret
shll
popa
lret
jae
xor
rcrl
dec
xor
movsl
int
xchg
add
jecxz
sbb
leave
ljmp
idiv
jo
rol
jno
enter
fldlg2
test
add
mov
dec
outsb
add
jnp
dec
fnstsw
push
aad
cmc
pop
insb
jb
addr16
dec
fs
jnp
mov
test
xor
stos
mov
in
or
sbb
jne
add
mov
mov
dec
jno
adc
andl
in
pop
adc
in
fmull
add
mov
add
gs
mov
dec
dec
data16
and
gs
jl
and
jo
dec
xor
movsb
jno
jns
sub
roll
test
add
loopne
push
lret
adc
test
andb
mov
popa
outsl
mov
adc
jmp
jecxz
and
inc
sub
jae
cwtl
aaa
dec
lret
cwtl
into
das
sub
push
lods
sbb
inc
mov
std
in
iret
outsb
push
sti
push
push
sbb
cmp
cmp
cmp
clc
cld
insb
add
shl
add
sbb
push
rcrl
add
daa
jno,pn
mov
add
lds
inc
pop
repz
sub
lock
push
movsb
out
pop
jle
fwait
lods
fcomps
into
pop
testl
clc
jae
dec
fisttps
jno
mov
mov
outsb
repz
ret
test
or
mov
rorb
pop
add
fimull
out
pop
cltd
fstpt
roll
or
cmpsb
nop
xor
lea
jb
sub
cmp
mov
cs
xchg
pusha
pushf
inc
pushf
cmpsb
push
mov
dec
sti
xchg
sbb
ficompl
test
cmc
xor
or
add
or
xchg
xchg
cmp
andl
sbb
pop
xor
neg
xchg
enter
lods
jo
push
out
lods
xchg
mov
push
mov
push
jg
xchg
lahf
pop
scas
ret
fists
push
jb
cmp
jbe
pop
mov
sub
lods
mov
mov
adc
inc
mov
outsl
mov
inc
xchg
or
pop
out
mov
ljmp
pop
rcrb
mov
mov
mov
pop
cltd
dec
test
pop
sbb
ret
shl
mov
xchg
or
mov
int
int3
and
call
dec
or
mov
jne
add
sbb
xchg
fisubrs
lret
jecxz
cmpsb
sar
mov
aam
or
xchg
add
push
pusha
or
ds
gs
mov
xchg
mov
inc
dec
sub
das
in
ljmp
sbb
mov
xchg
mov
pushf
mov
push
scas
push
cld
push
dec
jp
add
or
sti
add
iret
lret
xchg
sbb
movsl
loopne
int
ja
shlb
push
call
xchg
sahf
pop
cmc
pop
jl
test
dec
push
lods
sub
xor
ret
ffree
sub
dec
dec
sahf
mov
inc
adc
add
mov
mov
jbe
mov
xlat
ret
imull
or
out
insl
jle
push
cwtl
in
mov
ficompl
xor
orl
movsl
xchg
daa
mov
pop
ja
les
jbe
xchg
in
jno
lods
inc
push
mov
xchg
int
scas
fs
jle
or
test
pusha
into
jnp
cmp
arpl
jnp
or
jp
pop
std
jmp
dec
orb
cmp
xor
gs
sarb
shlb
scas
mov
push
lret
add
lods
in
xor
xor
pop
dec
xlat
add
mov
fstpt
cld
sahf
xchg
dec
mov
mov
out
sub
insl
int3
dec
or
aam
add
and
je
imul
pop
pop
insb
or
sub
sbb
incl
test
or
es
adcl
inc
fmul
inc
sub
xchg
cmpsl
xor
int3
iret
adc
fstpl
cmp
mov
movsl
int
add
out
lods
xor
out
xchg
ljmp
adc
mov
dec
pop
and
sub
out
jl
fdiv
lods
sub
xchg
outsb
rol
fcoml
add
push
addl
cwtl
je
push
add
adc
test
data16
imul
inc
adc
out
mov
pop
lret
aam
pushf
sub
bound
lods
jl
inc
mov
jae
and
and
shll
stos
pop
lods
call
mov
jne
dec
scas
icebp
push
fistps
ss
ret
lods
les
add
cmpsb
inc
push
mov
mov
loop
pop
lds
movsb
test
mov
adc
push
testb
pop
add
outsb
addr16
sbb
push
xchg
test
movsl
jecxz
push
pop
faddl
xchg
jo
enter
lods
repnz
inc
and
in
stos
xor
addr16
add
cmpsl
add
sub
loope
clc
adc
mov
fcmovbe
mov
std
sbb
stos
mov
mov
sub
or
dec
pop
sbb
scas
roll
test
fidivl
test
cmc
pop
icebp
dec
mov
push
aaa
repz
xorl
imul
lds
or
lea
fstps
jne
lret
into
xchg
sub
imul
pop
push
int3
pop
inc
cmp
ja
insb
dec
pop
getsec
mov
pop
sub
cmp
jae
push
mov
sub
dec
leave
sahf
hlt
xor
and
push
jno
rcll
xchg
std
in
push
cmpsb
fsubs
repz
mov
call
stos
mov
nop
sub
in
jl
repnz
dec
in
mov
add
mov
imul
repz
push
adc
cltd
cld
inc
cmp
inc
insb
mov
mov
std
clc
hlt
cmp
add
inc
ror
xor
sbb
loop
filds
jb
stos
xor
jo
lret
or
std
xchg
jb
lods
repnz
lods
xchg
mov
inc
mov
dec
inc
mov
mov
icebp
mov
cltd
jp
clc
sbb
shll
int
cmp
je
scas
push
adc
jnp
pop
lock
sbb
jno
lock
mov
dec
adc
cmp
pop
lahf
pop
sub
das
push
insl
xlat
xor
jge
pushf
lock
adc
imul
cmp
push
or
mov
jae
dec
cmc
ret
inc
movsb
neg
in
xor
sti
sbbl
sbbb
fcmovbe
push
das
aaa
and
add
adc
lahf
popa
mov
dec
loope
sbb
out
sub
jne
dec
or
xlat
psubw
sub
loope
dec
shrl
ret
ds
pop
fdivrs
enter
aam
jg
xchg
jp
movsb
adc
ficompl
int
les
and
addl
stos
rorl
test
xchg
cli
adc
inc
lret
fwait
pop
jns
and
inc
mov
aaa
push
ja
jbe
jge
in
inc
xchg
jnp
pop
rclb
loope
out
inc
loope
sbb
pop
adc
imulb
add
sbb
icebp
daa
lret
lods
insb
mov
lock
in
push
lock
sub
cwtl
mov
xchg
loop
fcompl
jg
add
fdivrs
add
sbb
push
jge
xor
xor
mov
xchg
add
int3
and
jns
push
rcll
repz
xchg
ljmp
mov
ljmp
out
daa
stc
jecxz
frstor
loope
mov
and
pop
xor
inc
adc
pop
cmp
ds
dec
push
dec
mov
hlt
leave
les
inc
scas
mov
gs
mov
cmp
mov
mov
int
imul
das
or
push
rcrl
and
pusha
mov
push
sbb
les
xor
xchg
jg
addb
sbb
js
sub
push
ljmp
xlat
shlb
pop
fidivs
or
jecxz
stos
pop
add
aas
mov
call
sub
fnstcw
div
lock
int
mov
xchg
pop
lods
ja
ljmp
and
mov
loop
test
pop
sahf
mov
jbe
mov
jns
fisttpl
jp
or
testl
lea
fisttpl
in
ret
or
dec
sbb
and
repz
and
xor
movsb
bound
xlat
sub
xchg
mov
sbb
cmpsl
xchg
fwait
or
inc
enter
xchg
inc
or
push
arpl
shlb
xorb
inc
xchg
or
movsl
imul
inc
mov
not
lds
movsl
ljmp
ret
xlat
ror
out
pop
outsb
push
or
xchg
adc
cmpsb
cs
dec
scas
ret
outsl
fisubrs
sbb
push
adc
or
xlat
push
addb
movl
out
xchg
pusha
loop
jo
mov
dec
out
xlat
inc
jl
xchg
mov
loopne
test
push
lock
jg
popf
cmp
xor
jmp
je
shufps
cltd
incb
dec
rcl
lods
jmp
aad
loope
pushf
add
pop
sahf
mov
mul
gs
cmp
scas
add
mov
mov
jo
cmp
pop
sbb
std
adc
push
lock
bound
adc
push
push
mov
dec
mov
xchg
movsl
mov
mov
int
rorl
aas
pop
push
sarl
mov
cmpsb
adc
imul
nop
ret
sbb
shrl
mov
in
addr16
out
mulb
add
cmp
jge
push
mov
adc
in
mov
or
push
push
sbb
jecxz
pop
or
scas
and
sub
fwait
mov
push
rcrb
js
int
inc
mov
xor
jle
xchg
and
fldt
lret
sub
std
cli
xchg
xor
cli
cmp
inc
loope
insl
dec
imul
cld
or
rolb
mov
imul
lret
adc
sbb
and
insb
and
jo
aad
xchg
popf
mov
lahf
sbb
hlt
add
pop
adc
xchg
pop
dec
jnp
insb
out
lea
mov
nop
stc
mov
push
xor
push
jnp
mov
aas
dec
mov
movsl
out
inc
mov
arpl
xchg
ret
test
cld
xchg
test
or
xor
mov
fisttps
dec
xchg
add
inc
mov
sbb
nop
mov
fimuls
lods
cmpsb
das
outsl
add
fnstenv
ret
xor
xor
sub
push
das
jp
fisttps
xchg
sub
fbld
cltd
sbb
mov
ret
mov
adc
cmp
test
xchg
dec
fistpll
jnp
sub
movsl
adc
test
mov
std
int3
pop
les
lods
mov
jae
mov
fisttpl
sub
xchg
js
xor
nop
jnp
mov
test
jne
ds
xor
nop
data16
inc
sbb
ja
xchg
sbb
jg
fcomps
aam
mov
rclb
fld
int3
lret
divl
loop
jle
in
jbe
or
das
fbstp
add
lret
mov
mov
mov
in
adc
jge
mov
jb
jns
repnz
jecxz
dec
cvtps2pd
inc
mov
jbe
into
inc
fidivl
lods
mov
mov
and
decl
imul
addr16
jl
xor
int
lahf
inc
shlb
and
mov
outsb
aam
fdivs
lret
jno
ror
jo
mov
lock
dec
xor
mov
aad
clc
std
dec
push
test
leave
sub
insl
popf
mov
adc
or
or
xchg
mov
push
cltd
js
xor
outsb
sub
mov
inc
add
mov
xor
jno
ret
inc
int
idivb
mov
sbb
movsb
sbb
mul
xchg
adc
mov
inc
push
sub
sub
out
mov
push
mov
hlt
cmp
int
cli
jle
mov
sbb
sub
push
lret
xlat
dec
jp
mov
lret
fxch
inc
vandps
movsb
int3
lock
pop
dec
pusha
js
mov
fcoml
mov
ficomps
popa
sub
pop
adc
pop
lds
dec
push
add
mov
out
add
inc
push
in
divl
movsl
fs
mov
add
das
pop
cmpsl
mov
pushf
push
lahf
arpl
loopne
xchg
cli
add
xchg
ret
daa
andb
iret
fldt
dec
adc
adcl
in
cmp
push
stc
test
push
add
push
hlt
stos
fwait
pop
or
push
test
lds
mov
dec
jecxz
lahf
shrl
jnp
ret
ret
mov
push
fwait
mov
add
mov
ret
nop
hlt
jb
jo
push
cmp
inc
sbb
lock
mov
cmp
addr16
mov
mov
outsl
pop
out
xor
adc
fmull
ljmp
or
xor
push
xchg
xchg
jmp
add
sub
and
xorb
stos
and
dec
aam
shrb
adc
insl
lea
jecxz
pop
mov
test
xchg
adcl
lcall
xchg
subb
xor
sarb
dec
pop
mov
pop
adc
add
push
cmp
push
aad
mov
stos
fiaddl
movsb
cli
pop
push
outsb
shll
pop
test
dec
jge
or
push
jnp
mov
cs
adc
scas
push
shlb
mov
push
push
sbb
add
or
gs
mov
mov
ret
mov
dec
push
sub
mov
push
out
sub
xchg
add
adc
push
dec
scas
mov
rcrl
inc
jge
pop
loope
repz
or
pop
jb
push
jo
dec
lods
ret
pop
cmp
dec
movsl
or
push
bound
xchg
into
sub
inc
mov
xchg
inc
push
sub
or
cmp
ja
js
dec
pop
and
sbb
xchg
lods
xor
movsl
pushl
mov
push
shr
jae
pop
aas
pop
jbe
dec
out
or
mov
xor
sub
sbb
inc
adc
lods
push
cmp
adc
orl
mov
mov
push
mov
aaa
adc
inc
inc
leave
push
add
inc
sub
lea
repz
xchg
or
outsl
push
loop
jno
test
mov
jns
fmuls
pop
mov
subb
repz
fucomp
push
jne
mov
das
stc
pop
lret
jns
sub
jmp
xor
mov
sarl
lret
scas
dec
ds
lock
xor
mov
pop
scas
js
stos
cmp
mov
mov
cli
repz
shl
popa
scas
sbb
icebp
xlat
jl
shll
mov
cmp
mov
cmc
jmp
pop
or
or
and
inc
and
dec
testl
call
inc
sbb
fwait
add
xor
inc
or
in
cwtl
mov
fldl
sub
sub
adc
mov
cli
xchg
push
push
mov
inc
jo
jns
hlt
lods
rorb
daa
scas
cmp
int
add
je
sbb
xchg
cs
and
jmp
or
sbb
and
sahf
mov
cs
pop
bound
cmpl
fcomi
jge
repnz
jbe
xchg
roll
dec
nop
inc
add
arpl
pop
lds
mov
mov
pop
xor
popl
xchg
sti
pop
sarl
xchg
add
lahf
sbb
ret
imul
cli
inc
rcrb
enter
xlat
or
push
push
jl
dec
mov
cmpsb
ror
sbb
int
outsb
push
xchg
add
aas
outsl
fsubs
pop
ret
out
add
ret
cmc
fwait
pop
push
mov
adc
lods
insb
mov
xchg
jno
sbb
pop
push
mov
test
jmp
jl
xchg
push
repnz
arpl
cmp
xor
fcoms
ficomps
dec
and
jecxz
xchg
repnz
pushf
add
and
jle
rol
mov
int
aas
jecxz
xor
or
xchg
pop
shll
jl
xor
mov
call
push
push
fnstsw
sbb
sub
mov
fcoms
sbb
mov
faddl
sub
mov
mov
cmp
jbe
xor
pop
hlt
mov
xchg
mov
mov
sub
shl
adc
mov
in
jns
pop
push
mov
dec
pop
ret
addr16
icebp
sub
or
mov
add
imul
xacquire
lcall
sbb
pop
add
xlat
ss
loop
push
mov
pop
dec
xlat
stc
push
arpl
jl
arpl
cmp
or
fcmovbe
stc
add
inc
lods
sbb
push
xor
dec
inc
stos
stc
addl
popf
cmpsb
pushf
dec
scas
repnz
pop
cmp
into
cli
or
or
out
movsl
rcr
mov
sahf
fstps
pop
test
sbb
bound
cmp
popa
pop
jge
popf
scas
lock
xchg
xchg
stos
push
lock
pop
repz
inc
pop
in
adc
int
negb
fimull
push
sahf
inc
push
mov
in
cs
sahf
sti
add
and
ret
sub
lret
fisubs
ja
leave
or
sub
sahf
pop
nop
insl
test
inc
iret
xor
mov
dec
pop
xchg
aam
les
cwtl
sbb
push
test
sbb
sub
call
jo
into
out
mov
inc
outsb
hlt
stos
xlat
pop
push
push
loope
adc
bound
sbb
imul
lcall
cmp
push
pop
sarb
mov
adc
mov
mov
or
pop
add
and
dec
fs
and
xor
popa
dec
into
jmp
loop
lea
clc
fwait
mov
sbb
sti
jno
dec
push
shl
lods
pusha
das
int
insb
dec
cmp
add
mov
or
sbb
popf
add
in
int
std
pusha
push
sti
sub
mov
pop
icebp
mov
sub
xchg
mov
xchg
add
adc
cmp
imul
and
sbbb
fstps
inc
pop
stos
dec
mov
mov
repz
lret
lahf
iret
push
jns
xchg
mov
jmp
in
aas
rol
pop
sahf
mov
xlat
clc
imul
mov
es
mov
rorl
int3
shll
or
or
fs
push
pushf
and
imulb
cmp
lret
adc
and
xor
std
push
adc
adc
repnz
push
scas
adc
xor
push
inc
xor
and
dec
ret
shlb
xchg
xor
adc
pop
gs
daa
data16
gs
sarl
xor
movsl
jno
mov
push
cmp
mov
aaa
push
sbb
mov
insb
or
in
ljmp
dec
inc
lret
mov
shr
xchg
sub
xor
js
inc
mov
xor
sbb
cmpsl
jl
dec
into
mov
aaa
jge
in
out
fstpt
mov
les
test
pop
lcall
adc
dec
shrb
xor
mov
out
jnp
add
pop
mov
or
pushf
incb
adc
and
mov
dec
adc
std
lret
xchg
out
ret
sub
mov
ficoms
mov
subl
mov
and
pop
ret
sub
mov
je
add
inc
mov
jnp
popa
cmpsb
or
dec
mov
push
icebp
inc
sbb
pop
das
cwtl
pusha
pop
dec
jp
cld
push
fcoms
cli
or
xor
jnp
pushf
loopne
pop
push
or
or
ljmp
jg
loopne
or
xchg
daa
mov
xchg
or
xchg
or
insb
adc
or
stos
pusha
jmp
jbe
rolb
mov
mov
add
and
bound
fdivs
adc
lea
push
jb
cmp
and
mov
mov
sbb
mov
adc
xchg
movsb
std
lcall
sbb
arpl
cld
xor
adc
xchg
push
dec
sub
stc
and
inc
nop
imul
mov
sbb
sub
fwait
dec
inc
push
test
rcll
aaa
pop
dec
imul
mov
sub
insb
and
cmp
in
leave
pop
scas
mov
lock
xlat
xor
cli
xchg
sbb
dec
adc
xchg
push
or
ja
xor
dec
xor
mov
scas
inc
cmp
bound
insb
jecxz
insl
sbb
inc
into
loope
pusha
xlat
divb
mov
in
mov
push
bound
sarl
jecxz
enter
mov
or
int
xor
push
push
add
cs
scas
mov
dec
lret
movsb
jl
addl
les
insl
mov
mov
stc
pop
test
les
dec
cld
push
push
xchg
dec
fs
mov
add
mov
lock
jne
dec
ljmp
cld
push
ljmp
cli
orl
cmp
pop
jnp
mov
ret
and
jle
jmp
or
sub
xchg
or
mov
and
lds
and
mov
out
popa
jl
jns
sub
jmp
fwait
pop
adc
jp
in
push
jmp
jmp
inc
jge
popa
adc
mov
add
sbb
add
sub
orb
repnz
mov
test
pusha
scas
pop
mov
or
cmpsl
rclb
push
dec
lock
cli
fistpll
lea
fildl
pop
enter
das
sarb
adc
push
lock
push
lds
inc
sub
movsb
dec
xor
cmpb
sbb
jae
movsb
dec
fisttpll
jl
cmp
pop
mov
hlt
test
out
fsubs
outsl
hlt
sub
mov
out
cmpsb
faddl
cld
mov
jp
sbb
sub
ss
rol
push
mov
sub
out
mov
lods
xchg
push
cmc
ja
rolb
loop
stos
sahf
cld
inc
inc
push
pusha
leave
mov
cmp
scas
stc
mov
push
test
mov
push
dec
or
fsubr
sahf
aad
xchg
mov
mov
aas
or
fldcw
jno
sub
aam
jmp
xchg
dec
filds
inc
jmp
sub
cmp
pop
addr16
imul
into
ss
sub
and
cld
jo
sti
pop
adc
xlat
xor
scas
sarb
rcrb
hlt
jo
mov
ljmp
cltd
or
add
adc
loop
mov
push
es
iret
imul
ficompl
addb
clc
shll
inc
and
push
xchg
mov
cwtl
aad
orb
adc
fnstcw
jecxz
cmpb
inc
ss
jb
push
jge
pusha
insl
cmc
fistpl
sub
shlb
stos
push
icebp
rcrl
or
jmp
dec
push
fdivrl
int
stos
cltd
push
inc
jle
xchg
bndstx
pop
popf
int3
stc
rolb
adc
pop
mov
and
mov
out
xchg
dec
in
push
pop
rclb
push
out
out
int
sub
mov
xchg
sbb
rcr
jno
xlat
outsl
mov
fnstcw
bound
lcall
add
test
xchg
sub
movsb
add
sub
push
test
jne
pop
aam
cmp
ja
pop
scas
xchg
xor
mov
pusha
rcrl
jecxz
clc
cmc
lea
push
adc
rcr
leave
aam
push
mov
inc
inc
pop
xorb
and
test
roll
les
test
mov
cwtl
dec
outsb
hlt
pop
dec
mov
xor
test
push
adcl
xchg
or
xchg
cmc
sahf
lcall
jnp
outsb
outsl
cmp
mov
push
push
push
jbe
push
lea
cmp
pop
push
adcb
xchg
push
pop
mov
out
push
fcmovnb
push
incl
mov
sti
addb
inc
dec
or
aad
cmpsb
lahf
xchg
pop
mov
sbb
cmp
nop
cld
add
arpl
jl
dec
ljmp
xor
out
out
xchg
adc
rorl
pop
push
or
icebp
shll
lock
adc
ret
add
movsl
lea
sub
hlt
xchg
mov
scas
push
sub
repnz
jbe
fs
sbb
repz
jns
adc
fs
xchg
and
and
arpl
ret
xor
inc
jbe
xchg
in
or
jl
mov
adc
or
mov
fwait
fwait
push
fwait
stos
adc
cmp
inc
sub
jmp
and
dec
and
nop
enter
inc
inc
push
add
adc
push
and
jno
mov
jbe
faddl
cmp
js
cmp
sbb
mov
xchg
pop
fistps
mov
mov
lcall
or
jge
gs
testl
idivb
jecxz
in
xchg
mov
add
and
jnp
adc
mov
shrb
dec
sarb
pop
adc
add
in
jp
jno
xchg
dec
arpl
xor
pop
pop
repz
scas
repz
lahf
xlat
pop
adc
pop
xor
cmp
or
repnz
call
mov
sub
mov
dec
xor
cs
or
adc
lock
iret
add
les
pusha
push
int3
imul
call
scas
pop
mov
jbe
sub
ficomps
movl
xchg
push
pop
xchg
adcl
jno
inc
xor
call
sub
jb
fwait
xchg
cmp
loopne
xchg
pop
and
xchg
inc
pop
lret
movsb
push
rcrb
ss
jl
idivl
adc
xchg
aaa
push
push
stos
sub
outsl
jns
jp
mov
push
jo
shrl
dec
enter
sub
loop
lods
sbb
lods
mov
cltd
leave
dec
das
flds
int
lock
jno
ficoms
int
loope
popl
inc
dec
sub
les
inc
popa
inc
inc
ss
imul
mov
xor
mov
ljmp
mov
and
jno
add
push
mov
xchg
xorb
jne
xor
stos
push
xor
lcall
jmp
dec
lahf
cmpl
stos
imul
and
mov
stos
aad
test
cmc
mov
gs
pop
lds
mov
sbb
sbb
push
add
mov
sub
cmc
lods
orb
xchg
cmpl
inc
push
icebp
test
jl
lret
daa
mov
jl
ljmp
dec
pusha
popf
push
and
fists
mov
fcoms
dec
fs
xlat
and
mov
mov
loop
sub
stc
cltd
icebp
cld
adc
xchg
mov
out
jae
inc
repnz
gs
push
jg
push
push
inc
pop
unpckhps
or
cld
and
aam
icebp
int3
dec
scas
pop
mov
aas
pop
cld
fdivrs
imul
hlt
pop
add
xor
mov
mov
fadd
cmpsb
divl
sub
push
pop
inc
shll
push
mov
shld
popa
es
push
int
cmp
dec
mov
ljmp
dec
scas
aad
or
fs
mov
pop
repz
mov
pop
data16
sbb
pop
xor
fnsave
mov
in
stos
jle
shl
rorl
dec
outsw
mov
mov
addb
add
xchg
ja
mov
call
lods
mov
push
rol
jno
and
lea
xchg
push
test
in
lods
scas
lock
push
xlat
lods
testl
fsubrs
das
in
xchg
das
xchg
adc
fwait
in
loop
sub
arpl
pushf
std
cmc
sbbl
lret
in
aam
inc
lods
inc
dec
jbe
lret
jb
push
cld
cli
push
and
dec
xchg
shlb
cmpsl
inc
loope
sahf
push
test
ljmp
test
nop
mov
sarb
jl
push
ljmp
sub
repnz
xchg
scas
mov
fwait
icebp
cmpsb
or
fistpl
and
lret
test
ds
or
loop
shr
push
adc
and
fstpl
lods
mov
int
outsl
andl
fadds
mov
dec
outsb
leave
mov
cmpsb
and
fs
fidivrs
sbb
jbe
mov
mov
in
adc
cmpsl
fisttps
lret
lret
sbb
cmpb
stc
or
test
xlat
int
lret
test
cwtl
xor
jbe
adc
gs
daa
ret
or
les
cs
lcall
and
popf
add
ret
mov
cli
jbe
push
sbb
xor
or
xchg
cmp
mov
mov
jo
es
imul
out
and
sub
aad
pop
push
mov
test
jo
dec
aaa
and
in
dec
inc
or
es
jp
mov
xchg
push
cld
in
test
cmc
mov
pop
sub
lahf
jne
insb
xor
dec
outsl
iret
fwait
call
adc
push
or
xor
and
xor
cmc
pop
inc
inc
mov
inc
outsl
mov
dec
mov
push
orl
fwait
enter
pop
push
daa
pushl
daa
push
in
into
add
rcrb
lret
ret
push
and
popf
pop
and
arpl
arpl
inc
or
add
pop
add
dec
pop
cmp
pop
hlt
cmp
sub
mulb
cmp
dec
jg
aad
sti
lea
enter
xchg
mov
int
ret
roll
sbb
hlt
cmp
cmpsl
sub
inc
enter
out
imul
cs
js
fcoml
repnz
mov
adc
sbb
ret
inc
repnz
enter
js
repz
pop
loope
mov
mov
adc
adc
jae
pop
inc
jnp
loopne
out
inc
in
push
and
lock
xor
or
jle
movsb
dec
cmp
mov
mov
nop
mov
into
add
lods
int3
test
dec
inc
xorl
bound
jg
jb
int3
inc
mov
shl
das
pusha
outsb
lret
cmpsb
adc
ret
sbb
in
movsb
dec
inc
fadds
rcrb
leave
or
fwait
insb
insb
std
imul
iret
fwait
xor
jnp
inc
or
movsl
lods
popa
adc
lock
rcrb
inc
lahf
dec
xlat
rolb
out
push
pop
adc
xor
pop
xor
loop
mov
mov
mov
mov
mov
scas
sbb
cmpsb
lret
sar
aad
fwait
in
mov
je
fildl
subb
out
adc
fucomi
dec
test
std
fiadds
dec
sti
push
in
fldenv
loope
sarb
rorb
pop
dec
addb
into
outsl
inc
sbb
jg
icebp
cmp
inc
fwait
inc
in
clc
mulb
ljmp
adc
sub
sti
loop
pushf
cltd
test
mov
iret
sbb
add
mov
jnp
xchg
xchg
adc
push
and
fbstp
add
mov
cmp
int3
add
jns
and
or
push
gs
aad
xchg
push
add
or
notl
pop
int
cld
insb
pop
jne
push
in
lret
in
js
and
ljmp
nop
push
xchg
js
scas
mov
pop
sbb
aad
data16
std
es
cmc
push
push
test
xor
mov
rorb
xor
imul
clc
jno
lea
dec
jg
cltd
das
lret
inc
popa
xlat
xor
mov
pop
insl
out
jle
movd
adc
xor
lock
lahf
negb
and
ljmp
xchg
in
xchg
inc
in
mov
push
mov
daa
dec
popa
push
add
outsl
jns
sbb
push
test
mov
movsl
xor
mov
mov
cmp
inc
pop
jae
cmp
dec
test
std
mov
cltd
cmc
dec
popa
xchg
sbb
xchg
dec
fdivs
jno
inc
add
lock
xlat
jno
lods
mov
mov
test
scas
xchg
icebp
cwtl
xor
dec
xchg
cmp
hlt
loope
in
cmp
sub
scas
scas
loop
push
fcoml
outsl
and
test
cmp
in
or
fwait
cwtl
push
repnz
or
mov
gs
fldenv
add
ja
int
inc
mov
push
ss
imul
idiv
mov
xlat
push
pusha
jle
push
test
js
inc
sub
arpl
xchg
lahf
cmp
jp
inc
cmp
aas
add
fwait
test
aam
lret
add
hlt
fisttpll
cmp
xor
cmp
dec
stos
and
mov
mov
es
add
and
in
arpl
mov
sbb
popa
push
sti
aaa
fwait
mov
mov
pop
outsl
mov
ja
sbb
jae
mov
std
addb
outsb
cmc
or
inc
shll
pop
aad
pop
dec
cmp
repnz
ret
jle
xchg
mov
mov
add
clc
lds
shrl
xchg
lods
sub
mov
pop
sbb
imul
pop
and
mov
cltd
push
jns
sub
cmpsl
mov
pop
sarb
ret
inc
es
div
mov
or
sbb
fsubs
adc
scas
jnp
cwtl
mov
data16
mov
rcll
mov
sbb
mov
filds
push
jge
ret
push
sbb
bswap
and
test
mov
arpl
add
es
outsl
cmpsl
push
jno
cltd
insb
into
or
shlb
inc
jnp
cs
ss
std
xchg
cltd
scas
inc
jnp
cmpsb
xchg
hlt
push
ljmp
inc
or
fistl
or
pop
add
dec
daa
lods
loope
jo
decl
xchg
push
push
xchg
cmc
mov
adc
mov
jp
lods
cmp
push
jno
mov
inc
cmpsl
sub
popf
mov
enter
lea
xchg
sbb
pop
xchg
fistpll
cli
lods
fisubs
mov
add
dec
cltd
xor
and
shl
dec
pop
jecxz
pop
cmc
stos
sbb
jo
jnp
fidivs
xor
test
rcll
popf
mov
xor
mov
sbbl
fnstcw
cmp
ss
mov
cld
sub
mov
test
push
cltd
fisttpl
scas
pop
clc
loopne
stos
mov
bound
jb
dec
icebp
test
or
push
mov
mov
les
lock
sub
mov
mov
sub
sub
jne
pushf
mov
leave
test
add
call
xor
xchg
cld
subl
aam
fbstp
out
dec
adc
iret
and
es
sub
add
leave
fwait
leave
sub
jae
adcl
imul
mov
dec
aaa
push
mov
and
gs
add
xchg
pop
lods
ret
popa
ret
jae
test
movb
xchg
pop
lret
push
out
push
mov
popa
shr
les
fsub
xor
jle
xor
pop
rcrl
jmp
mov
sti
mov
mov
out
dec
lret
repnz
bound
loop
rorb
lods
jo
sbb
mov
or
loop
jge
adc
es
mov
mov
and
ret
mov
inc
xor
push
movswl
popf
in
or
fs
add
out
leave
daa
js
xchg
test
mov
cmp
mov
ljmp
insl
or
lods
cmp
aaa
lock
ja
jle
cmp
icebp
scas
dec
pop
andl
or
aam
mov
imul
fcomip
jae
fchs
dec
pop
and
gs
mov
stos
mov
mov
in
dec
dec
scas
jnp
addr16
les
cmp
fcoms
pop
xor
mov
jge
mov
hlt
xchg
add
pop
mov
fidivrs
push
add
push
xchg
push
out
cmp
mov
fiaddl
xor
dec
mov
mov
ret
mov
add
andl
jnp
mov
insb
sub
and
mov
sub
test
icebp
insl
pop
sub
inc
add
jns
cs
dec
push
mov
sub
ljmp
cmpsb
lcall
inc
outsb
add
hlt
xchg
mov
mov
fstpt
fisubrl
dec
inc
rcll
int
gs
xorb
stc
adc
mov
dec
sahf
repnz
shll
and
loop
mov
pop
cmp
dec
fstps
push
mov
cld
nop
xchg
mov
cmp
dec
out
jmp
or
divb
in
pop
icebp
fnstsw
sbb
test
out
push
xchg
xlat
repnz
and
and
rclb
or
push
pop
mov
orb
cmpsl
andl
aas
push
mov
scas
movsb
xchg
and
push
mov
fisubs
es
in
or
xor
idivl
pop
in
push
mov
jb
jmp
ljmp
addr16
cmp
je
jnp
xchg
cs
andl
sub
pop
sub
data16
inc
xlat
sbb
sbb
lea
in
add
jno
adc
pushf
push
popa
ss
jmp
mov
and
orl
and
lods
nop
ret
add
sbb
push
mov
xchg
aaa
mov
cmp
push
mov
shl
mov
fdivrs
sbb
inc
imul
pop
es
mov
dec
adc
add
sub
fdivl
and
add
and
pop
hlt
push
dec
and
movb
add
mov
test
pop
adc
fnstcw
and
je
or
push
xchg
das
imull
push
out
aad
rcll
push
lock
xor
xor
dec
ret
pushfw
je
sub
clc
lret
push
or
ret
bound
pop
jae
mov
mov
call
jle
mov
and
cmp
pop
pop
pop
test
or
ret
pop
movsl
fistps
mov
xor
jmp
dec
xchg
fcomip
faddl
rcrb
lcall
or
es
xor
insb
add
mov
xorb
not
imul
sub
xchg
xchg
insl
pop
xor
mov
gs
adc
push
jmp
sbb
sub
mov
push
and
lock
mov
sub
add
sti
push
dec
jb
pop
add
idivb
xorl
sub
in
pop
lcall
clc
int
cmp
popf
cmp
jb
jnp
sti
jnp
sbb
pusha
rorl
push
data16
push
mov
cmp
insl
push
adc
or
add
mov
push
xor
jne
scas
or
mov
repz
scas
xor
lods
inc
roll
jne
ds
and
jp
pop
or
sti
dec
mov
xor
cld
lahf
es
sub
frndint
dec
inc
movsl
imul
clc
cmp
pop
xor
xor
jbe
sbb
cltd
jne
stc
pop
inc
pop
pop
mov
sti
sub
adc
dec
mov
andl
call
arpl
sub
pop
jae
mov
add
stos
jnp
out
shr
std
mov
lea
dec
and
insl
sahf
push
in
sahf
cmpsb
pop
dec
jnp
ss
cmpsb
sub
push
push
xorb
stos
fsubrl
stos
int
xchg
push
rcrl
cmp
add
into
addr16
loop
mov
mov
inc
mov
sar
sub
xorl
cmp
mov
test
das
cwtl
or
xor
or
ljmp
mov
jbe
adc
jle
xchg
cli
pop
daa
xchg
inc
push
jae
dec
insb
dec
dec
aad
add
fsubrl
lcall
shlb
enter
sub
iret
popw
sbb
lds
shrb
repnz
add
aaa
inc
mov
mov
sub
push
clc
je
aam
cld
inc
push
xor
xchg
cmp
ds
aaa
sti
inc
pop
xchg
loope
mov
hlt
inc
inc
mov
cmpsb
push
repz
mov
leave
aaa
or
mov
adc
fcomps
jae
ret
rcrl
push
dec
pop
ljmp
pop
and
jne
and
or
repnz
cmp
dec
adcl
aad
dec
ret
push
fwait
lods
sbb
incb
cs
outsl
cmp
clc
jne
cld
incl
jo
add
jecxz
ror
jecxz
insb
inc
cmpsl
add
insb
mov
mov
fldt
pushf
out
mov
sub
mov
fildll
inc
fidivrs
sbb
xchg
sbb
popf
xor
xor
bound
inc
fcompl
jmp
xchg
outsl
roll
push
hlt
jnp
fisttpl
sub
fdivrp
sbb
xlat
lret
jmp
popa
bnd
or
mov
fisubrs
ret
aam
dec
test
adcl
and
xchg
sub
mov
mov
jne
cltd
fidivrl
mov
push
push
xchg
sub
insl
xchg
popa
jmp
push
xor
rcrl
addr16
fiaddl
and
bound
sub
push
sti
jne
aas
adc
adc
sub
xor
cwtl
inc
cld
add
add
or
xor
cmpsl
dec
into
into
repnz
push
jbe
push
iret
mov
mov
and
fwait
test
mov
pop
mov
movsb
add
sbb
scas
insl
adc
and
ror
cmpsl
dec
or
xchg
lods
pop
loop
int
in
push
nop
scas
inc
mov
adc
pop
sub
inc
push
or
loopne
test
or
dec
int
bound
sbb
push
inc
xchg
pusha
rclb
push
insb
enter
test
mov
popf
cmpsl
outsl
inc
movsl
mov
pop
and
imul
orb
cwtl
decb
push
xchg
cli
daa
fistpll
xor
ds
stos
jbe
jle
mov
add
gs
mov
sub
mov
imul
and
jmp
jge
adc
aad
dec
inc
test
andb
adc
scas
xchg
dec
mul
leave
xlat
out
adc
jnp
lahf
mov
pop
or
xchg
inc
and
enter
jge
pop
js
test
mov
xlat
andl
cmp
and
cmpsb
xchg
call
push
jl
fmul
clc
push
mov
adc
add
jg
pop
inc
mov
push
fmull
push
std
icebp
scas
mov
fsts
lock
sbb
cmc
cmp
aas
push
adc
sti
lea
fisubl
scas
out
mov
jp
repz
arpl
push
mov
rcll
inc
sbb
pop
jle
pop
test
fdiv
lea
aam
cmpsl
ret
or
fsubs
stos
inc
cmp
or
push
aaa
subl
lods
fmuls
aad
popa
fs
xor
xchg
shr
stos
mov
daa
adc
call
leave
lret
gs
push
dec
jne
inc
leave
or
inc
jae
xor
cli
mov
ffreep
inc
fwait
xchg
arpl
add
int
sbb
sub
mov
mov
dec
add
and
aaa
jo
test
insb
icebp
sbb
in
leave
pop
pushf
fistl
pop
imul
xchg
fsubrl
push
mov
xor
cmp
xor
fstpt
adc
and
mov
sbb
adc
daa
popf
ljmp
push
xor
add
sahf
pop
shlb
pop
mov
or
adc
loopne
dec
sub
pop
pop
push
ss
mov
das
into
lods
mov
and
xor
push
jl
jae
lds
test
and
ret
fs
sbb
lcall
jmp
jnp
dec
pusha
and
cmp
dec
pop
mov
fbstp
cltd
jb
mov
jge
inc
mov
sti
in
imul
fmuls
fnsave
mov
jmp
cli
add
sar
pop
lds
ret
fs
rcrb
mulb
clc
xchg
sbb
mov
add
ret
or
mov
ret
push
loope
and
test
scas
dec
and
fcomps
pop
fistps
xor
sti
imul
out
pop
int3
mov
pop
stc
mov
ljmp
jg
ret
mov
cmp
mov
pop
xor
xor
sbb
mov
push
sbb
sub
stc
pop
insl
daa
inc
inc
cmc
shrb
imul
mov
push
sub
out
out
mov
jle
mov
add
out
insb
xor
add
xor
inc
jns
adc
mov
pop
cs
addr16
push
pop
mov
stos
adc
push
push
mov
xchg
pop
cwtl
aam
mov
sti
pushf
and
jl
push
lock
mov
cltd
push
xchg
in
nop
popf
rcll
sub
sar
icebp
shl
or
popf
aad
xchg
insb
bound
xchg
out
das
lods
cmp
subl
or
and
sahf
pop
test
dec
stos
dec
inc
inc
cmpsb
cmc
mov
test
out
adc
shll
fiaddl
mov
jns
pushf
cmpsb
mov
dec
adc
mov
movsb
or
xchg
lods
push
ret
sub
loop
cmp
mov
mov
pop
cmp
mov
shrl
or
mov
xchg
sti
out
xlat
pusha
test
mov
addr16
or
mov
cmp
lret
mov
dec
adc
lods
insl
cmp
test
cmp
push
push
loope
bound
xchg
or
lcall
enter
sbb
ret
jno
stos
cmp
add
test
je
out
mov
push
mov
xchg
or
scas
xchg
mov
sarb
inc
out
jle
sbb
fstpt
cmp
mov
jmp
and
sbb
jg
movb
push
inc
lock
jge
dec
ficoml
push
adc
pop
xor
pop
cmc
and
sbbb
push
inc
lret
imul
mov
test
pop
pop
xchg
xor
scas
arpl
mov
cltd
mov
sbb
xchg
imul
cmpsb
leave
stc
push
cltd
dec
jnp
movsb
es
or
mov
mov
pop
fdivp
or
test
psrld
adc
cmp
cs
mov
xchg
or
orps
dec
pop
incb
jae
jecxz
lea
addr16
dec
cmpsb
hlt
rcll
jno,pt
ficomps
mov
cld
push
orl
cltd
pop
hlt
pop
cmpsl
mov
xor
push
outsl
insb
cmp
dec
push
int
out
aad
sahf
ljmp
loop
lret
nop
lret
out
add
mov
lods
or
adc
cmp
dec
jo
sub
cmp
jo
cmp
or
mov
mov
cli
sbb
call
cwtl
sti
dec
inc
jmp
stos
pop
test
pop
push
and
hlt
mov
movsl
push
cwtl
jp
push
xor
stc
and
sbb
leave
ret
cmp
xchg
rorl
cmp
inc
mov
jbe
pop
xor
cltd
lret
fisttps
mov
or
dec
pop
cli
inc
mov
lods
xchg
inc
adc
adc
and
pop
inc
push
cmc
dec
outsb
xor
jg
or
push
aaa
jge
mov
dec
sub
aad
fildll
or
add
ficompl
insl
sub
mov
lods
pop
loop
xor
cmp
or
ret
and
xorl
dec
sbb
or
out
outsl
jmp
push
incb
data16
shll
sub
jns
leave
jmp
out
lds
inc
and
loop
lahf
hlt
flds
gs
cld
stc
dec
pop
xchg
adc
xor
push
push
test
and
mov
in
mov
fidivl
mov
mov
and
lods
and
aad
sbb
xchg
push
data16
sti
and
js
out
sahf
cmp
imul
pushf
sub
jecxz
insb
pushf
adc
or
insb
cs
xchg
repz
push
loop
mov
xchg
cmovae
pop
lret
fidivs
mov
orb
pop
mov
ss
pop
pop
push
loopne
pop
adc
in
pop
aaa
push
sbb
xor
jmp
jp
pop
es
push
clc
loopne
inc
xchg
aad
sbb
lcall
out
scas
movsl
inc
icebp
xchg
pop
sbb
fisubs
decb
test
addl
loopne
ljmp
outsb
hlt
inc
int3
bound
xor
pop
scas
enter
fdivrs
jo
loop
arpl
andl
cwtl
ret
dec
or
idivb
cmp
and
cmp
sub
ret
lcall
mov
sub
or
ffree
lods
push
nop
and
cmp
adc
inc
push
in
mov
jl
inc
push
push
in
or
dec
testl
out
out
jl
jl
add
and
clc
xchg
mov
xor
dec
int
mov
imul
lret
out
dec
pop
inc
movsb
gs
xor
adc
push
mov
dec
jno
inc
pushf
repnz
mov
adc
lahf
cmp
inc
adc
rol
sub
jnp
push
stc
inc
adc
dec
xchg
insl
jmp
int
jns
aas
imul
adc
enter
in
fisttps
and
push
sub
scas
jae
in
pop
imul
cmpsl
test
push
push
je
dec
add
cmp
xor
adc
add
iret
sbb
pop
loop
dec
mov
jmp
or
and
stos
mov
fimuls
dec
mov
and
popf
and
cmp
sahf
sub
scas
cmp
push
sub
std
loope
dec
jge
mov
rorb
mov
popa
mov
xchg
mov
es
push
dec
aam
dec
pop
jg
ds
fnstenv
aaa
push
adc
mov
lea
dec
push
mov
push
push
movsl
aad
lods
push
push
lds
out
pop
sahf
add
add
sub
push
repnz
xor
xchg
and
sbb
mov
xor
xchg
jge
cmpsb
xchg
xchg
dec
call
int
sbb
sub
test
mov
repz
dec
stos
push
bound
or
sti
jl
and
xor
sbb
sti
test
or
movsl
dec
test
movsb
mov
int
into
in
iret
pop
imul
inc
inc
pop
test
mov
sub
out
sbb
mov
sub
aad
sub
jp
mov
fldt
cld
dec
ret
xor
cmpsb
mov
std
mov
lock
lods
fs
mov
sub
popf
dec
leave
cmp
sbb
dec
push
int
dec
rorl
int3
sub
int
and
dec
les
adc
and
and
pop
jecxz
test
pop
fsub
pop
std
pop
mov
shll
mov
cld
inc
sub
sub
pop
or
call
jle
dec
inc
push
dec
lea
sub
pushf
mov
mov
movsl
xchg
leave
sub
push
es
popf
ret
repnz
pop
push
mov
pop
sarb
cli
jb
bnd
jge
sti
test
sub
int3
add
lods
cltd
scas
dec
shrl
popl
fists
lahf
cmp
xchg
jb
jno
orb
xor
and
xchg
mov
loopne
ljmp
mov
jge
push
out
sahf
imul
pop
stos
in
pop
lds
repz
nop
jnp
mov
push
popf
add
and
cmp
add
push
xchg
or
mov
test
and
xor
xchg
xorl
shrb
sbb
jecxz
jnp
mov
shr
adc
pop
mov
sub
cmpsl
sti
mov
mov
push
daa
mov
mov
mov
add
xchg
je
test
pop
xor
adc
ds
sbb
xchg
mov
movsb
jae
jmp
fs
mov
xor
xlat
push
adc
imul
jbe
cmp
adc
adc
cmp
bound
push
lods
pop
lods
push
mov
addl
ds
cld
das
mov
mov
xchg
xchg
and
inc
lods
sub
ja
pop
clc
sbb
sbb
xchg
mov
out
push
cmp
rol
cmp
dec
push
mov
jmp
cmp
sbb
movsb
dec
pop
out
sahf
mov
daa
or
repz
xchg
hlt
adc
fsubrs
jb
xchg
lds
adc
shr
and
mov
lahf
cmp
xor
push
or
rcr
adc
pop
push
cmpb
dec
push
call
xor
pop
pop
inc
and
xchg
jo
movsl
notb
ficomps
or
xor
pop
inc
pop
sbb
jns
inc
shrl
movsb
xchg
inc
add
and
sub
or
inc
push
dec
push
notl
movsb
dec
cld
mov
jbe
sub
sti
push
shll
out
cmpl
pop
xorb
test
jnp
xor
std
adc
cmp
mov
in
and
add
rol
sbb
mov
sub
sub
xchg
inc
and
pop
sub
das
ficompl
xor
icebp
lahf
loopne
mov
or
in
fadds
inc
outsl
jg
mov
aam
mov
imul
adc
into
test
cmp
dec
and
sbb
sbbb
sub
cmp
sub
bound
cs
adc
dec
cmp
scas
outsb
je
or
add
dec
inc
adc
outsl
mov
rcr
cli
xor
loopne
popf
xchg
sbb
pop
sub
stos
or
movsl
std
jae
cltd
subl
adc
mov
movsl
loop
add
es
mov
lods
push
adc
shll
cmpsb
mov
cmp
xchg
dec
lods
in
lds
or
pop
pop
xchg
shlb
shl
jne
jns
jecxz
inc
jecxz
jl
push
fnstcw
sarl
pop
imul
stos
enter
scas
bound
cmp
and
divb
movsb
mov
and
mov
shll
xchg
jo
mov
jae
pop
cmp
cld
mov
ret
into
sahf
inc
loop
call
mov
xchg
int
ja
nop
and
mov
lock
dec
iret
dec
or
out
xchg
push
xchg
scas
jne
dec
test
pop
or
push
adc
int3
sahf
sti
xchg
shrb
sub
repnz
enter
xchg
or
repnz
daa
pop
adc
lcall
add
sub
ja
mov
jbe
fdivl
dec
xchg
lods
daa
adc
aaa
mov
jp
dec
outsb
or
in
sub
jno
es
jnp
data16
insb
cmpsl
jae
dec
mov
sarb
mov
loop
stc
fildl
mov
arpl
add
and
jp
ss
cmp
mov
xchg
add
cmp
push
cmp
fstps
xchg
mov
into
inc
push
data16
pop
push
ljmp
mov
cmpl
testb
lcall
das
xlat
inc
push
xor
push
gs
sub
cwtl
push
in
or
pushf
stos
cmpsb
mov
jg
rorb
ljmp
sbb
cmp
xor
cmp
jecxz
icebp
jp
popa
fcmovb
call
stc
push
outsb
or
in
stos
cmp
shlb
ja
inc
lret
ficoms
ret
mov
std
dec
cwtl
cltd
mov
ret
aaa
test
push
adc
push
cld
pop
jecxz
jmp
xlat
cmp
mov
dec
pushl
test
sub
xor
cmpsl
jle
jmp
and
iret
mov
pop
adc
pushf
sub
sbb
sub
xlat
test
add
xor
cltd
leave
inc
sbb
imulb
jo
fwait
jge
stos
dec
into
popa
pop
jne
shr
or
movsb
adc
lcall
pop
sbb
in
testb
sub
lcall
push
inc
xchg
repz
pusha
cli
shrl
lods
dec
fnsave
jecxz
add
je
lods
mov
leave
sbb
js
aam
mov
xchg
aaa
subl
xchg
xchg
fidivl
inc
pusha
insb
bound
iret
loop
xchg
sbb
mov
int3
inc
mov
lahf
or
push
nop
jl
test
aam
cmpsb
out
cmp
push
sbb
das
test
lahf
ja
xchg
mov
sbb
popa
pop
pop
popf
adc
imul
js
push
push
jns
cmp
push
jg
adc
sub
lods
mov
adc
jno
xchg
jl
mov
gs
jnp
push
iret
bound
xchg
dec
sub
push
cmpl
mov
xchg
mov
scas
loop
dec
in
inc
icebp
or
mov
enter
cwtl
out
pop
movups
pop
mov
add
pushf
dec
fwait
cld
sub
cli
bound
jecxz
dec
imul
xor
sub
aaa
aas
outsl
mov
pop
mov
outsl
mov
xor
sbb
pop
ret
xchg
icebp
add
mov
clc
cli
xor
xchg
xorl
pop
ret
jle
sub
inc
pop
adc
ds
hlt
pusha
jmp
fwait
shrl
lret
xchg
cmp
push
mov
jbe
mov
jle
xchg
rcr
jge
stc
stos
inc
sub
mov
sub
in
aam
dec
fisttpl
mov
mov
mov
mov
jle
push
imul
cld
jge
out
mov
and
xor
rol
or
dec
ja
lock
gs
aas
inc
push
test
xor
adc
repz
lds
in
ret
testl
xchg
xor
dec
adc
into
inc
movsb
adc
ss
pop
cltd
bound
sbb
stos
ficompl
dec
mov
and
out
in
sti
cmpsb
push
push
insb
sahf
subl
dec
xor
lcall
les
pop
cli
shlb
test
jnp
call
pop
pop
xlat
cmp
adc
jnp
test
inc
mov
fnstenv
fistpll
mov
aad
stc
dec
mov
rol
jg
and
dec
loope
cltd
dec
enter
mov
sbb
lcall
sub
mov
mov
cltd
outsl
and
ret
pop
push
repnz
out
mov
adc
or
sbb
loop
mov
cmp
enter
mov
jge
cmp
daa
cwtl
shrb
insl
sub
shll
lods
aam
add
imul
mov
aas
sub
jne
dec
jb
stc
jb
je
inc
push
cmp
sbb
lock
pop
loopne
or
pop
cmp
pop
cli
cli
mov
in
movsb
leave
arpl
imul
shr
test
data16
jp
xchg
cli
push
mov
das
aam
loope
out
jb
jle
pop
jp
js
rcr
inc
jnp
jbe
outsb
cmp
js
mov
out
test
in
rep
and
or
mov
mov
lcall
mov
pop
mov
pushf
ret
ljmp
lock
fbstp
out
jl
test
or
pop
pop
pop
mov
ret
fildll
je
dec
sub
mov
mov
mov
out
fisubl
out
fdivp
jo
mov
lods
mov
jae
mov
popa
cli
push
xchg
fsubl
xor
jns
adc
int
xchg
stc
seto
out
loope
lods
aaa
mov
setns
arpl
add
xor
out
je
iret
aam
jge
aas
subl
out
mov
and
lret
add
mov
push
mov
jge
inc
test
nop
mov
loop
cmp
mov
es
push
stos
movsl
push
mov
or
cltd
jns
mov
loope
inc
inc
xchg
jo
mov
pop
aaa
mov
mov
cmp
adc
xor
sbb
mov
es
aad
imul
fidivrs
repz
sar
stc
lret
out
sub
or
sbb
into
std
in
dec
or
js
sub
mov
cld
dec
pop
pop
int
adc
leave
mov
stos
cmp
lret
adc
inc
and
outsb
and
clc
xorb
ja
cmp
mov
mov
xor
push
inc
inc
ret
xchg
ret
adc
fcmovnu
call
mov
mov
pop
jg
or
push
ret
xor
push
jbe
mov
cmp
nop
and
pushf
push
scas
loopne
xor
cmc
ret
sub
xchg
mov
imul
cltd
adc
or
fisttpll
pop
test
cli
ljmp
aad
stos
cmp
mov
ficomps
fsub
or
xchg
js
scas
ret
jl
xor
sti
into
insl
jecxz
outsb
cltd
inc
add
bswap
test
sbb
cmp
xor
sub
mov
loope
push
loopne
lret
jb
pop
mov
stc
lea
xor
fdivrl
fmul
xchg
mov
test
into
repz
sbb
adc
push
sbb
sti
mov
pop
push
out
ror
cs
mov
mov
sub
ljmp
jle
pop
outsb
xchg
push
gs
add
dec
and
dec
pop
lret
aad
cwtl
into
ret
pop
push
mov
xlat
das
jg
ret
jl
dec
xor
xor
aas
cwtl
imull
or
hlt
add
pop
lret
subl
pop
mov
cmpsl
mov
cwtl
das
dec
add
stos
jb
rclb
mov
inc
push
lret
stos
data16
xor
aas
inc
testl
aas
insl
cmpsb
mov
sbb
xchg
das
adc
sbb
cmp
ss
xchg
jmp
fnstenv
cmp
cmp
sub
sbb
rorl
mov
pop
stc
mov
fwait
je
lahf
pop
pop
sahf
xor
adc
sbb
adcl
or
stc
out
test
fs
sub
pop
lcall
push
xor
push
push
fists
lock
mov
insb
mov
lods
outsb
or
dec
add
cmp
push
mov
ret
fdivl
fstl
inc
sbbb
dec
adc
sbb
mov
or
push
mov
sub
cwtl
or
fcompl
lods
cli
in
mov
clc
popa
dec
xchg
xor
pop
cmp
in
mov
out
adc
dec
mov
mov
xorb
es
cld
fnstenv
sub
iret
jle
push
xchg
fs
cmp
in
gs
mov
cmp
add
in
pushf
inc
xchg
mov
add
or
fdiv
jb
xchg
sbb
sbb
call
xchg
mov
je
movsl
cmp
fwait
add
ret
and
outsl
sbb
mov
jno
dec
push
jbe
xor
inc
std
or
ret
xchg
mov
or
data16
sbb
xlat
sbb
adc
pop
pop
cmpsl
or
outsb
pop
lretw
jnp
and
scas
popf
out
rcll
insb
pop
loop
ja
jnp
push
icebp
icebp
or
cmp
lcall
mull
cmpsl
or
cmp
lea
mov
mov
pop
sbb
das
xchg
cwtl
adc
movsb
lock
inc
aas
add
rcl
add
pop
outsl
out
mov
enter
aaa
lahf
pusha
cmp
push
sub
outsl
xor
pop
jl
fwait
mov
xor
xor
repnz
movsl
and
dec
dec
push
and
fwait
xchg
sbb
mov
dec
xor
push
fsubs
test
cmpsb
push
fwait
test
das
mov
or
fmulp
jmp
loope
je
push
jmp
add
or
adc
sub
out
cltd
dec
xchg
mov
and
aas
jp
lret
in
fwait
movsl
and
or
mov
and
icebp
fmull
inc
jnp
insb
iret
sbb
pop
clc
aaa
xor
mov
xchg
lret
cmpsb
lods
mov
dec
and
push
push
sub
andl
pop
lcall
jp
addr16
shll
pusha
into
shrb
out
jl
call
inc
pop
xor
xchg
out
sbb
sbb
loop
pop
adc
aam
std
mov
rclb
mov
fwait
rol
sarb
out
xchg
lea
push
cs
mov
fisubrs
loop
cmp
and
test
lret
arpl
lret
out
in
pop
adc
sbb
mov
mov
and
scas
test
stos
mov
xor
pusha
fsubr
testl
inc
pop
pop
icebp
jns
pop
add
add
imulb
or
movsl
mov
repnz
jge
imul
hlt
or
dec
xchg
outsl
fs
dec
jecxz
ret
jne
in
xchg
add
mov
mov
pop
nop
pop
cmc
add
fisubl
cmpsb
sub
dec
insl
dec
push
div
addl
xchg
push
in
scas
into
int3
lea
out
ljmp
arpl
fadds
rcrb
mov
push
lahf
call
lock
int3
mov
cmp
pop
mov
in
sbb
push
adc
pop
loop
inc
jl
cmp
fs
into
lock
mull
dec
pop
mov
pop
adcl
incl
test
mov
xor
jecxz
push
pop
add
icebp
or
jmp
pop
inc
mov
push
pop
scas
out
shll
repnz
mov
pop
jns
in
sets
inc
shrb
ds
xor
jno
lods
pop
push
lret
xchg
in
leave
call
cmp
ret
test
ds
jb
gs
loop
add
daa
je
cmp
pop
ror
ffreep
sbb
dec
dec
stos
lret
add
das
cmp
mov
jp
mov
insl
ljmp
stos
sbb
lds
cmp
or
int
jecxz
sub
mov
jmp
xlat
and
jae
jecxz
dec
add
test
mov
mov
call
or
pop
shll
cmp
inc
mov
add
mov
and
and
xchg
jmp
imul
cmp
je
xchg
cli
xchg
fistpl
imul
mov
inc
lret
divb
repnz
test
sbb
dec
js
insl
cmpsl
fsub
cmpsl
mov
add
xlat
icebp
cmpsl
jo
mov
mov
sub
enter
sub
sbb
sbbb
test
rorb
mov
cmp
mov
cli
std
fimull
sbb
inc
inc
push
xorb
or
mov
sbb
iret
jge
mov
push
add
mov
ret
mov
or
pop
sub
sti
test
outsb
das
pop
out
int3
cmp
xor
mov
popf
xchg
aad
push
adc
int
pop
ret
fsub
outsl
or
leave
mov
addl
stc
sbb
inc
out
repz
in
inc
add
mov
push
lret
cmp
mov
cmp
ficoms
dec
insl
mov
icebp
fisubrs
jnp
icebp
inc
sub
fwait
sub
or
outsl
xchg
and
shr
add
xacquire
fdivrl
icebp
arpl
push
sahf
es
mov
xor
dec
inc
insb
call
adc
pop
sub
cmc
or
cmpsl
add
fadds
aam
frstor
cli
mov
add
sub
out
mov
pusha
sarl
out
fwait
cmp
les
adc
clc
adc
js
cmpl
faddl
xchg
fisubrl
mov
inc
xor
popa
cmc
jns
push
icebp
ret
loopne
or
or
int
icebp
mov
xchg
inc
fmuls
and
int
pushf
in
shrl
push
mov
int3
pushf
mov
jge
into
inc
add
and
mov
adc
es
cld
add
hlt
inc
jmp
xchg
sub
inc
addl
and
jmp
ret
push
repnz
testb
hlt
push
pop
sub
stc
ret
pushf
fwait
mov
into
in
stc
pop
frstor
mov
lahf
out
jo
scas
popf
push
push
sbb
das
scas
inc
fstps
lahf
addr16
add
pop
pop
mov
xor
push
sbbb
fisubl
xchg
sub
push
or
adc
xchg
xor
mov
jns
and
into
test
and
mov
into
push
jne
add
iret
nop
dec
call
xchg
jb
test
hlt
rorb
por
out
and
imul
jno
inc
aas
dec
cld
bound
inc
pusha
cmp
xchg
fs
sbb
ficompl
sti
leave
sahf
mov
fisubs
cmpl
mov
xchg
push
and
push
movsb
mov
ret
cli
aam
push
sub
in
mov
lock
cmpxchg8b
cmpsb
mov
push
cltd
dec
lods
and
pop
es
ficoml
int3
pop
mov
out
cs
sbb
push
xchg
jl
stos
xchg
cs
rorb
pop
push
sub
lds
insl
add
dec
ucomiss
pop
mov
cmp
add
cwtl
xchg
jp
fcomp
sbb
jmp
inc
mov
jnp
mov
push
pop
cmp
mov
inc
mov
loopne
dec
lahf
dec
stos
das
sub
arpl
stc
int3
jmp
icebp
pop
int
popl
jp
pop
xchg
jb
mov
mov
push
out
idivb
and
fisubrs
cmc
mov
ds
bound
adc
mov
xor
mov
push
sbb
insl
sbb
and
rorl
dec
push
jp
or
and
repz
inc
pop
push
loope
fidivl
fs
cmp
inc
sbb
insb
movsl
mov
stos
mov
insl
or
sub
sub
loope
cld
loopne
mov
jle
sbb
cmp
jae
sahf
lahf
insl
add
aam
adc
inc
push
in
push
roll
subl
aaa
push
xor
sbb
xchg
les
push
incl
mov
clc
dec
push
call
jo
int3
ret
cli
and
lds
mov
and
xor
mov
aaa
addr16
mov
pop
pop
insl
mov
call
mov
and
in
orb
shll
fildll
mov
jbe
pop
cvtdq2ps
mov
lahf
pop
out
jp
mov
inc
add
jmp
je
or
cmp
cld
pop
cld
adc
ret
cltd
insl
cmpsb
shl
imul
int
mov
ds
inc
dec
mov
int
mov
bound
fucomp
leave
stc
adc
sbb
jb
push
data16
into
jnp
scas
stos
xchg
and
add
js
xchg
jo
cmpb
pusha
stos
aas
add
daa
test
shrl
xor
pop
shlb
lahf
aas
daa
pop
inc
and
add
mov
jecxz
mov
sub
test
mov
xchg
out
xchg
mov
dec
leave
repnz
push
mov
mov
in
fsqrt
dec
lock
data16
fldt
dec
jg
xor
adc
mov
inc
push
push
aam
mov
mov
inc
pop
movb
dec
mov
cmp
or
xchg
mov
pop
xchg
jl
xchg
push
iret
das
xor
inc
shrl
lcall
roll
data16
iret
lret
adc
xor
mov
repz
not
repnz
pop
lcall
cmp
jmp
int3
sbb
std
into
inc
nop
es
mov
inc
pop
movsl
or
arpl
xchg
and
push
cmpsl
dec
int
pop
cmpsl
in
fwait
mov
pop
shll
out
mov
test
xor
stc
or
mov
jo
repnz
data16
sub
mov
xor
dec
into
loop
dec
lcall
cmp
jno
adc
orl
mov
inc
stos
insb
dec
or
sarl
mov
push
pop
mov
and
pop
ss
insb
mov
movsl
test
bound
mov
mov
add
jns
mov
es
cmp
jae
and
insb
dec
pop
mov
and
jmp
mov
push
or
sub
stos
test
lods
xor
xchg
sbb
and
int
aam
push
mov
sub
add
int
dec
lods
mov
lods
fcmovnu
arpl
lods
pop
dec
mov
enter
lock
aas
call
fisttpll
out
mov
xchg
xchg
les
test
imul
adc
jmp
icebp
push
push
movsl
es
jg
xchg
push
adc
hlt
mov
dec
mov
and
sub
pop
sti
ret
xchg
test
jne
or
inc
lea
dec
mov
mov
jnp
xor
enter
inc
rcr
out
incl
mov
test
mov
and
ja
sub
or
mov
jnp
push
div
push
cs
andl
mov
lret
imul
pusha
ljmp
mov
cmp
sar
cmpsb
jle
and
shlb
mov
xchg
fsubrl
std
sub
dec
fidivl
and
mov
repz
cld
bound
dec
in
jb
jno
sahf
jp
icebp
dec
divb
mov
in
sti
aam
pop
imul
imul
inc
enter
sarb
cmp
rorb
cmp
div
add
in
sbb
rcrl
jmp
cmc
mov
sbb
mov
leave
pop
mov
shrl
fpatan
aas
sbb
mov
or
clc
add
push
cmp
insb
and
or
mov
shl
cmc
je
jecxz
loop
jp
cmp
sbb
ret
in
pop
call
mov
in
fidivl
push
and
lock
std
adc
daa
divl
ficoms
xlat
mov
dec
lret
hlt
mov
mov
xchg
in
loop
xchg
inc
and
add
test
cmp
cmp
inc
out
enter
xor
add
jbe
mov
ret
ret
mov
xor
fs
push
sub
mov
mov
aad
sub
enter
nop
cmpl
jl
subb
das
faddl
sub
lds
dec
cmc
test
push
ds
shll
fidivl
rorb
inc
push
mov
sbb
pusha
and
ja
mov
add
pop
sti
sar
inc
fistpll
ljmp
fstpl
cmp
push
mov
xor
push
xor
sub
addr16
cmp
jmp
sub
sbb
pop
cmp
repz
nop
push
sahf
xchg
dec
test
sbb
push
shl
pushf
int3
inc
jmp
xor
sahf
outsb
sbb
loope
lret
push
cmpsl
pop
enter
int
inc
idivb
jbe
std
inc
ljmp
sahf
sarb
xor
add
stos
enter
mov
mov
xchg
push
test
mov
xor
movsl
sti
lahf
imul
push
pusha
test
clc
popf
mov
xchg
popf
inc
xchg
mov
mov
jle
push
hlt
or
mov
jp
jle
nop
push
scas
aas
cltd
fsub
in
adc
mov
mov
jle
mov
aad
pop
xchg
sbb
sub
fsts
jmp
repnz
mov
pop
sub
push
adc
xchg
ret
lret
lds
adc
cmp
lods
addr16
lods
out
loopne
repz
push
sub
clc
push
lret
jg
arpl
out
hlt
gs
enter
or
mov
out
mov
decl
xchg
adc
pop
dec
data16
js
jmp
push
mov
pusha
xor
mull
push
mov
add
std
flds
into
in
xchg
xchg
daa
lcall
pop
cmp
das
mov
xchg
xchg
dec
cli
dec
jbe
and
mov
inc
xor
jg
fidivl
sub
stos
jge
pop
add
sub
or
insb
test
stc
outsl
repnz
mov
into
loope
gs
xor
cmp
dec
in
shl
sub
inc
out
xor
cmp
add
stos
mov
jecxz
aas
shll
sbb
add
fxch
nop
sub
lock
mov
jo
jle
int
in
ds
jno
dec
adcl
mov
fmull
hlt
call
add
pop
jp
imul
or
popf
das
outsb
jbe,pn
xor
int
outsl
scas
jb
insl
mov
int
jmp
and
and
mov
or
sbb
cmp
ds
cmp
push
stc
mov
xor
ss
mov
sahf
in
add
jmp
lahf
sub
rep
std
push
mov
xchg
cmp
je
sub
in
add
lea
push
sub
scas
into
inc
lahf
rcll
lahf
mov
xchg
xchg
cmpl
ficomps
and
loop
jecxz
std
andb
sub
xor
gs
cmpsl
ss
mov
mov
mov
mov
mov
out
in
dec
mov
fistps
jae
sahf
das
push
inc
push
sub
pop
div
cmpsl
nop
cmc
inc
aaa
or
dec
shrl
js
leave
aas
dec
es
mov
mov
filds
repnz
cmpb
aas
clc
jno
int
insl
icebp
cmpsb
inc
aas
sahf
sub
loop
cmp
xchg
dec
out
loopne
loope
or
scas
insl
aaa
ret
xchg
jne
mov
push
xchg
dec
fmul
shlb
js
stos
sbb
insl
mov
cmp
lock
adc
adc
rcrb
cmpsl
fdiv
xchg
and
repz
sarl
movsb
enter
adc
mov
fldt
jno
jp
or
mov
leave
and
cmp
mov
cli
out
or
sahf
mov
scas
xlat
xchg
xchg
les
and
mov
stc
pusha
push
push
lea
sbbb
and
je
mov
add
pop
or
xchg
push
in
mov
fsubl
loope
jae
icebp
sub
cld
addb
mov
pop
or
cmpsl
test
arpl
insb
adc
push
mov
out
cmc
popf
xchg
testl
add
ja
and
xchg
sub
push
out
fs
jg
or
mov
jae
jmp
xlat
and
mov
cmp
outsl
mov
mov
xchg
push
lods
lcall
rorl
nop
in
bnd
imul
es
xor
arpl
sbb
lret
cmp
pop
lods
shr
xor
cmpsb
icebp
fiaddl
push
xchg
in
mov
ljmp
inc
and
mov
push
call
mov
pushf
mov
add
lock
test
mov
mov
dec
sbb
cmp
insl
or
adc
mov
dec
adc
addr16
mov
cmp
dec
push
and
mov
inc
mov
adcl
or
dec
mov
mov
jnp
in
mov
xchg
xchg
int3
pop
mov
ja
add
lock
cmp
aas
rorl
insb
mov
rol
xchg
mov
sahf
cld
clc
dec
lahf
mov
ror
mov
test
lcall
enter
sub
fstpl
add
xchg
ja
leave
mov
lret
push
popf
nop
in
call
in
xor
pushf
and
std
jne
xchg
sub
mov
sbb
xor
arpl
fcoml
adc
imul
stos
jno,pn
pusha
mov
cmp
push
lods
lahf
decl
popf
pop
cmpsl
test
sahf
shll
enter
fisubrs
leave
ret
add
lcall
aaa
stos
adc
xor
shlb
xchg
lahf
icebp
pop
mov
cmp
pop
mov
testb
mov
test
jne
sbb
pop
sub
cwtl
fstl
aam
loope
out
mull
in
outsb
adc
pop
fistps
xor
inc
push
ret
lret
push
fstp
pop
outsb
nop
fwait
inc
pop
mov
push
add
lods
pop
and
push
sub
mov
rcrl
dec
mov
sub
add
cbtw
push
inc
scas
or
dec
pusha
lds
ret
and
out
jecxz
mov
sbb
push
inc
push
mov
mov
scas
mov
popf
es
mov
fldcw
scas
pusha
add
mov
xchg
or
cmp
outsl
stos
inc
and
xchg
xor
aam
shrl
jmp
xor
jo
loop
in
stos
mov
iret
rorb
imul
push
pushf
faddl
arpl
lret
cmp
xchg
out
sbb
das
jns
adc
imul
add
in
vandps
pop
mov
cs
fwait
shll
jecxz
xchg
outsl
stc
jecxz
outsb
fisubrl
or
outsl
fistl
mov
loope
icebp
sarl
scas
in
out
pop
and
out
insb
dec
push
jle
add
and
xchg
rorb
push
sbb
lahf
inc
mov
nop
push
cltd
dec
repz
mov
add
sbb
ljmp
arpl
hlt
loope
test
cli
insb
data16
push
clc
stos
mov
mov
arpl
push
xchg
or
mov
cmp
aad
xchg
nop
dec
sub
dec
pop
dec
fcomps
inc
push
cmp
mov
cs
fnsave
push
jge
xor
sbb
sub
rolb
push
or
adc
mov
hlt
pop
cmp
jl
pop
lret
ret
xchg
ret
addb
xorb
push
ret
adc
xchg
fsubrl
mov
mov
cmc
jns
out
xor
jmp
data16
pop
dec
test
fwait
mov
mov
rcrl
aam
sub
jg
lret
ja
or
dec
cmp
stc
inc
add
int
mov
jns
lock
shll
aaa
hlt
cmpl
test
jle
mov
rclb
test
shl
xchg
test
or
jnp
cmpsl
xchg
enter
add
or
enter
pop
add
pushl
andl
xchg
insb
dec
ja
jne
xor
or
loop
mov
jl
das
js
cmp
test
fsubrs
jge
mov
push
test
sti
mov
inc
pop
loope
cmpsb
add
cmc
cmp
inc
jp
lret
push
push
lods
mov
movsb
mov
xlat
push
pusha
push
fdivrs
lods
add
es
orb
sti
gs
aam
lahf
xor
mov
pop
aaa
and
sbb
push
das
cmp
cltd
add
stos
orl
push
xchg
or
and
mov
mov
xchg
lahf
jg
in
mov
xchg
inc
lds
xor
jnp
pop
dec
mov
lds
cmp
mov
jns
gs
jp
fwait
and
mov
cli
xchg
lcall
or
hlt
inc
mov
push
jb
mov
stc
fistps
add
xchg
aad
cmp
adc
mov
jnp
jnp
jmp
push
xchg
icebp
xchg
stc
ja
cmp
jmp
sub
loopne
xor
adc
add
sbb
fwait
int
xchg
jbe
stc
pop
jecxz
arpl
mov
and
rcl
dec
or
ds
aam
cli
cmp
shlb
xor
cltd
mov
push
call
ljmp
dec
xchg
and
lods
mov
xchg
and
fsts
cmp
cld
sbb
push
andl
mov
add
xor
mov
dec
inc
les
lock
push
lahf
xlat
pop
cmp
mov
arpl
repz
data16
mov
sbb
dec
out
in
cltd
mov
cmp
inc
arpl
scas
xor
cmpsl
push
xlat
inc
test
adc
sti
jne
test
push
dec
and
es
notb
mov
push
int3
in
sbb
pop
sbb
dec
cmc
adc
sbbl
icebp
out
cmp
daa
mov
cmp
shll
mov
mov
mov
arpl
xor
inc
loop
xor
sbb
pop
icebp
sbb
mov
push
shrd
sub
inc
stos
fistpll
inc
test
pusha
pop
rorb
mov
pop
jmp
push
mov
xchg
dec
rcrb
insl
inc
sbb
pop
dec
fnsave
inc
cmp
cmp
pushl
pop
scas
and
mov
sub
pop
repz
mov
xor
push
fistl
push
pop
xor
mov
fdivl
inc
mov
jnp
lret
ja
jae
into
les
inc
xchg
sbb
loope
dec
jne
jp
push
dec
ja
mov
inc
stos
add
loope
inc
test
jl
sahf
mov
jmp
out
inc
push
nop
fsts
mov
in
cmp
jmp
adc
cld
jo
jle
xchg
mov
jo
shlb
sbb
pusha
push
pop
lret
pop
mov
aam
aad
aaa
sub
mov
stc
jbe
imul
out
scas
push
push
push
push
push
mov
ficoml
data16
pop
mov
jno
dec
or
mov
js
or
mov
repz
dec
mov
cmp
lret
inc
adc
xchg
mov
mov
pop
in
sbb
bound
stos
mov
outsb
cmpsb
loopne
in
rep
std
adc
xor
xor
mov
lds
mov
pusha
mov
fs
loopne
or
add
fdivrs
adc
pop
cmp
dec
cmc
push
dec
xchg
push
icebp
adc
mov
pushf
pop
pop
mov
jb
adc
push
mov
gs
add
add
xor
sbb
xor
sbb
xchg
popf
fisttpl
add
xor
push
sub
xchg
ds
enter
mov
negb
jo
cld
adc
push
jmp
push
inc
bound
fisubrl
adcb
insb
and
sub
pop
nop
lea
mov
jnp
mov
xor
fldl
gs
xor
gs
cmp
add
out
addr16
pop
or
out
lret
idivl
jb
daa
xor
addr16
cmp
rdmsr
dec
jle
and
jecxz
xor
push
add
push
mov
pusha
nop
movb
lds
or
push
loopne
push
int3
push
aas
outsl
jge
adc
dec
xchg
cli
push
mov
rcll
in
ss
and
lahf
sub
xor
inc
add
loop
push
add
jg
jbe
rcll
popa
cmp
mov
and
mov
adc
or
push
idivl
scas
push
lahf
add
sbb
add
xchg
and
lock
dec
idivl
push
inc
leave
mov
and
jle
jl
cld
mov
scas
mov
mov
outsb
push
xchg
out
dec
out
sub
and
cmpsl
bndstx
leave
out
inc
stos
pop
hlt
or
inc
aam
add
sbb
unpcklps
in
rcll
jns
xchg
add
jge
popa
loop
pop
addr16
cmc
and
shlb
das
push
cmpsb
inc
sub
add
ret
popa
mov
mov
jae
loop
andl
dec
mov
inc
cmp
hlt
jbe
jl
jo
and
sbb
out
xchg
push
pop
xorb
pop
sub
hlt
stos
je
inc
pop
mov
add
mov
fs
mov
out
shll
pop
mov
xor
or
push
jle
repz
push
out
pushl
cwtl
mov
ljmp
mov
outsb
sbb
jbe
movsb
pop
sahf
cmpsb
fstps
enter
sub
dec
addr16
into
rcll
lcall
sbb
and
pop
loop
pop
fdivrs
mov
jb
cmc
mov
insb
adc
adc
or
mov
xor
ficompl
shl
mov
pop
xor
sti
std
push
inc
dec
mov
mov
jbe
cmpsl
pop
xchg
push
mov
rorb
ljmp
cmp
sub
push
aaa
jbe
add
lcall
push
mov
mov
inc
lahf
xor
inc
cmpb
lret
lret
hlt
cmp
and
dec
popf
xchg
aaa
rcll
cmp
push
scas
add
xor
cmc
cmp
cwtl
mov
in
push
cmp
inc
sti
data16
adc
loope
xor
and
arpl
mov
cmp
leave
or
stos
incl
sub
mov
aad
pop
cs
sbb
jmp
push
out
dec
or
stos
mov
cmp
jae
inc
cmp
jae
mov
imul
add
pop
mov
xchg
dec
adc
mov
pop
add
sti
mov
add
cmp
aam
sbb
jne
cmp
xchg
fistpll
inc
adc
jl
and
ret
ror
push
into
dec
or
xchg
mov
loope
mov
jg
adc
mov
mov
mov
cmp
dec
insl
fs
movsl
push
dec
aaa
addl
cmpl
mov
movsl
cmpsl
in
ja
loope
das
mov
fdiv
cltd
lea
and
jmp
mov
inc
xlat
decb
add
pop
add
or
pop
push
cmp
leave
movsb
mov
daa
orl
jmp
rcl
clc
jp
push
sbb
into
add
cmpsl
fiadds
cmp
popf
inc
xor
jo
pop
test
and
jo
mov
xor
das
mov
ds
fistps
pop
and
xchg
ds
stos
fcoms
aam
leave
iret
or
fsubrl
mov
pop
inc
pop
push
fs
sahf
repnz
insl
movl
dec
add
lods
imul
das
nop
iret
xchg
hlt
out
in
pop
addl
xchg
sub
aam
idivl
movsb
gs
mov
jne
push
sbb
ss
adc
int
adc
jge
lods
fs
shl
mov
xchg
cs
push
test
inc
out
inc
ret
ljmp
jmp
jo
mov
sahf
aas
shl
mov
insl
and
cs
data16
dec
loope
jns
flds
mov
mov
inc
or
jnp
xchg
adc
and
sti
int
in
xchg
lock
sub
push
aad
xorl
hlt
xchg
addr16
out
xor
or
mov
sub
mov
push
sub
dec
dec
xor
jns
in
in
iret
jne
cmp
sub
push
imul
jmp
loop
les
mov
ret
ja
dec
xchg
push
lahf
or
js
jo
jp
cmp
push
jb
adc
or
scas
sbb
pushf
dec
or
mov
sbb
out
push
and
in
test
movsb
push
outsl
jne
mov
sub
sub
sarl
pop
fwait
in
xchg
testl
std
pushf
or
lods
repz
add
push
clc
mov
leave
push
lret
jmp
push
add
push
fwait
rcl
cmp
and
ret
xor
xchg
lods
jns
sahf
xor
jg
dec
xchg
or
rcrl
cmp
jmp
je
cli
loop
mov
mov
cmp
cwtl
cmp
je
and
jb
adc
and
shl
rolb
pop
and
loopne
cmp
pop
sbb
lds
xchg
lcall
fcmovnb
in
xchg
inc
xor
push
or
lods
inc
pop
inc
cmpsl
xlat
xor
je
xlat
pop
push
xchg
ss
mov
mov
mov
inc
add
jae
dec
adc
sub
xchg
xor
inc
test
orb
push
mov
arpl
pop
cli
stc
push
jns
and
mov
sbb
sbb
push
es
mov
dec
or
mov
mov
cmpsb
add
stos
imul
dec
repz
fcomps
dec
dec
subb
mov
sbb
or
xlat
sti
xor
ljmp
push
loop
outsb
je
js
adc
add
push
ja
in
sarb
or
test
aam
and
and
shl
sub
cmp
lcall
aad
movsb
add
push
xor
repz
out
bnd
lea
lods
addr16
inc
roll
mov
lahf
push
call
push
mov
les
test
fmulp
insl
pop
and
push
and
jae
fiadds
ds
fwait
adc
xlat
daa
mov
outsb
mov
mov
push
les
inc
hlt
dec
or
sbb
cmp
stos
and
addr16
arpl
jne
lock
jg
pusha
xchg
lcall
adc
and
sti
popf
lea
scas
test
imul
iret
fdivl
outsb
scas
push
mov
jb
clc
ret
adc
or
js
fdivr
fistpl
sub
ljmp
or
mov
pop
dec
mov
in
sub
jp
xor
gs
aaa
add
iret
test
xchg
ret
dec
jle
loop
js
mov
or
pop
add
jp
pop
xchg
adc
xchg
rclb
test
xchg
daa
cltd
les
ss
lret
jecxz
loope
stos
lods
jns
gs
push
mov
out
add
mov
roll
push
pop
dec
lea
mov
xchg
fcmove
jl
push
push
adc
pop
cli
adc
cmp
push
jo,pn
fwait
or
sahf
add
jmp
jb
push
in
cmp
adc
inc
adc
jle
stc
lret
push
mov
cmp
adc
push
shr
xor
mov
pop
popf
sub
test
lds
mov
lret
xchg
ljmp
cmc
inc
xchg
dec
pop
scas
sbb
data16
test
xchg
insl
sbb
shrb
stc
arpl
mov
stos
jnp
add
sbb
fmuls
ror
pop
add
inc
scas
sysexit
xlat
jnp
push
inc
rolb
mov
xor
fstpl
iret
cmp
sub
mov
fistl
out
dec
cmp
xor
add
jbe
push
je
es
sbb
jns
cmp
gs
fbld
inc
dec
lahf
and
enter
sub
xchg
inc
adc
pop
lldt
or
mov
lea
xor
repnz
inc
jb
in
mov
pop
movsb
rcrb
pop
push
mov
movsb
or
daa
and
movl
jge
je
in
ret
dec
sub
cmp
ss
add
push
push
addl
xor
mov
adc
mov
sub
test
repz
jns
cmp
fisttps
sub
pop
hlt
pop
or
dec
sbb
push
lock
cmp
mov
in
pop
in
sti
pop
cli
shll
mov
pushf
stos
mov
inc
jbe
mov
sub
inc
dec
mov
mov
mov
and
mov
loop
xor
mov
cmp
subb
out
adc
pop
nop
aad
cmp
sub
ret
iret
fisttps
aaa
cmp
fsubs
inc
rcrb
inc
inc
cmc
inc
sub
pop
cld
push
pop
in
fs
cmp
test
mov
lds
je
lods
jbe
mov
pop
loope
push
cs
lea
inc
mov
notl
in
push
cmp
push
push
lcall
in
push
xor
mov
sub
cmp
cmpsb
xchg
mov
xchg
outsb
aad
jo
cmp
hlt
inc
and
xor
pop
or
and
pop
cmpsl
sbb
pop
enter
lea
inc
jnp
jbe
pusha
mov
pop
pop
add
in
ds
movsl
sbb
adc
jb
add
xchg
xor
adc
cmp
mov
fstps
dec
mov
test
out
jg
adc
mov
cmp
push
dec
in
arpl
xchg
fsubrp
in
xchg
int3
xor
jmp
insl
test
jge
and
mov
outsl
movsl
mov
pop
xor
xor
sub
jl
inc
or
stos
test
adc
test
je
stc
cmpsb
jns
jp
mov
inc
ds
shl
int3
adc
and
je
sbb
out
or
fdivs
dec
push
and
test
push
xor
ret
gs
ja
mull
leave
inc
in
fsubrs
mov
sahf
sbb
loope
xchg
inc
push
and
push
pop
dec
cmpsl
pop
cmc
je
xor
lret
pushf
xor
fcoms
sbb
sbb
mov
push
fsubs
inc
add
or
cmp
mov
int3
xchg
pmaddwd
inc
xor
sbb
cli
lcall
jp,pn
xchg
lret
jnp
cmc
dec
je
popa
xor
dec
enter
out
push
jo
xchg
push
sahf
inc
inc
jle
loope
mov
outsb
pop
mov
shlb
in
lds
jmp
es
pop
dec
out
scas
stc
xor
mov
or
shrb
icebp
or
inc
nop
sub
sbb
fiaddl
adc
lods
push
dec
ret
stc
dec
in
out
dec
bound
add
mov
sahf
cmp
push
pop
jbe
inc
ljmp
aam
mov
test
lock
pop
mov
jmp
xor
out
cli
scas
push
mov
pusha
call
hlt
dec
inc
sbb
cmp
add
mov
aam
and
pusha
idivl
sub
and
jg
insl
ja
sub
rorl
xchg
imul
gs
das
push
jnp
mov
in
insb
dec
push
and
hlt
in
enter
test
sbb
addr16
lods
push
sbb
cmp
out
push
orb
movsb
xchg
cmpsb
mov
and
add
aas
mov
pop
pop
jl
fs
pop
or
fimull
mov
shll
lret
movsb
mov
pop
push
pop
and
jmp
rcll
loope,pt
inc
stos
xchg
pop
xchg
insl
icebp
xchg
push
stos
arpl
idivb
fisttpl
dec
push
dec
les
idivl
cmp
cmp
jo
hlt
sahf
addr16
cmp
mov
cmpsl
sub
jl
inc
mov
icebp
fstp
adc
jge
int3
and
add
pop
insb
idivl
or
loop
in
push
test
mov
cmp
sbb
mov
sub
mul
push
int
imul
sub
mov
jnp
inc
stc
sbb
pushf
xchg
aad
sbb
psubw
push
inc
lea
sbb
pop
or
divl
loope
inc
mov
push
push
clc
in
lret
jmp
push
mov
and
enter
sarl
sahf
pop
stos
nop
outsl
and
inc
push
imulb
dec
inc
mov
fisubl
mov
jp
ds
js
repnz
jae
push
push
loopne
push
fildl
mov
int
loope
pop
jecxz
iret
int
pusha
leave
mov
cmp
mov
pop
imul
mov
sub
decb
jle
jge
xor
ds
cltd
xchg
imull
icebp
push
jmp
xlat
test
lock
or
cmp
sub
xchg
xchg
mov
jbe
mov
je
push
or
mov
push
les
jl
iret
loopne
jp
add
push
cwtl
out
pop
and
addb
push
shr
lcall
mov
sbb
push
in
sti
sub
ljmp
incb
das
add
mov
mov
mov
xor
mov
mov
in
iret
pusha
fadds
dec
mov
sbb
or
lret
sub
daa
or
leave
xchg
frstor
test
fldl
push
lcall
adc
leave
mov
idivl
psllw
jo
inc
mov
mov
jno
lret
mov
cs
dec
push
jl
pop
out
lahf
shll
jae
fmull
aas
scas
mov
pop
push
cwtl
adc
subl
les
nop
add
aam
jecxz
adc
iret
mov
test
adc
xchg
or
in
enter
and
in
arpl
xchg
and
adc
xor
pop
xor
clc
pmaxsw
ss
out
fwait
jns
jne
push
loopne
and
inc
sub
mov
and
pop
outsb
test
pop
ja
in
pop
mov
mov
sub
mov
cmpsl
incl
loope
add
cmpsl
mov
out
mov
popa
mov
adc
lret
js
mov
sub
cltd
insb
lcall
pop
xor
cmp
inc
mov
mov
stos
inc
jbe
xchg
cmp
mov
enter
cmc
ljmp
out
jbe
pop
jae
lds
int
inc
in
xchg
hlt
data16
xchg
pop
lret
cmp
inc
mov
jge
std
hlt
hlt
mov
push
adc
add
mov
adc
lods
sub
cmp
outsb
dec
lods
mov
hlt
int
cltd
cmp
push
out
sbb
add
mov
dec
and
jns
icebp
xabort
push
push
cmp
test
xchg
sbb
xor
loop
lock
dec
xlat
add
mov
fwait
shll
out
stc
xchg
cmpsl
xor
add
nop
ja
ss
jno
fcmovnbe
out
addr16
inc
pop
jne
pop
and
gs
jbe
enter
popa
popf
das
sbb
cmp
ss
sub
xchg
mov
rcr
loopne
add
mov
fbld
ss
ret
cltd
pop
aaa
pop
test
shll
sbb
pop
lea
stos
rcrb
xor
mov
es
or
aaa
mov
les
aas
in
faddp
int3
pop
sbb
scas
sti
adc
mov
push
jmp
jb
mov
in
ret
fwait
sahf
add
mov
cmp
and
rcrb
mov
mov
subb
jg
std
pop
pop
xchg
cmpsb
jp
loope
jmp
mov
sub
test
adcb
icebp
cld
rol
mov
xchg
xchg
cmp
mov
movsl
dec
test
mov
mov
mov
dec
daa
fcmovb
idiv
das
sub
rclb
inc
mov
mov
in
jmp
add
cmp
pop
loope
mov
or
pop
dec
jns
push
pop
lods
dec
jo
dec
push
xchg
mov
or
mov
inc
inc
mov
cmp
faddl
clc
popa
sar
jo
pop
lret
sub
or
sbb
enter
inc
out
or
sub
cwtl
rol
ja
add
mov
push
ss
inc
adc
call
aad
push
adc
cmpsb
push
mov
pop
stos
dec
aad
das
cmp
data16
imul
cmp
pop
or
enter
mov
lea
data16
lods
sub
cmp
add
sub
ret
scas
shlb
test
push
das
jmp
jo
js
out
mov
pop
negl
and
mov
fsts
fwait
lock
push
fxch
sbb
sbb
or
push
scas
mov
push
jo
add
fstpl
sahf
mov
dec
sbb
pop
and
push
mov
adc
mov
xchg
mov
xchg
dec
jbe
inc
adc
pushf
sub
popa
add
pushf
sbb
push
jo
mov
push
and
push
call
dec
ret
sub
ficoml
cmc
loop
ja
cmp
cwtl
fsub
mov
mov
jb
sub
lahf
mov
xchg
bound
popa
dec
out
push
pusha
adc
inc
xchg
test
or
mov
std
cmp
or
mov
xchg
jl
test
aad
cmp
push
subb
sub
xor
dec
dec
or
test
and
push
inc
popf
repz
cmpsl
fidivrs
in
jb
pushf
mov
and
push
loopne
in
sbb
add
mov
fdivl
mov
jno
mov
fidivl
or
cmpsl
dec
push
cs
aad
or
xchg
jae
add
adc
and
mov
pop
dec
dec
push
out
out
fstl
shll
inc
inc
imul
adc
inc
fwait
call
cmpb
mov
loop
jecxz
lcall
scas
les
xchg
or
sti
ss
dec
push
daa
scas
adc
mov
dec
mov
cld
push
out
cmpsl
cli
ret
jmp
into
out
popa
subb
leave
xor
and
add
sbb
push
adc
lahf
jge
push
fidivrs
mov
jae
bound
fnstcw
das
fwait
cmp
ret
outsl
cltd
test
sub
ja
js
lea
nop
and
xchg
mov
sbb
cmpsl
cmp
and
cmpsl
arpl
fwait
xor
or
scas
mov
or
test
lods
mov
xchg
addr16
xchg
push
ss
outsb
in
shr
cmp
jo
add
stc
xor
adcl
shlb
aam
test
rcrb
push
es
push
jbe
cmpb
int3
mov
out
mul
adc
mov
inc
inc
testl
add
adc
dec
fstps
mov
jnp
cmp
mov
popa
inc
loopne
out
loop
add
lods
sbb
xor
mov
es
inc
movsb
dec
and
adc
xor
add
or
xlat
inc
push
je
hlt
xchg
cmp
or
push
mov
push
fnsave
lcall
and
addr16
push
jo
test
loop
jge
or
incl
adc
push
cli
pushf
push
or
outsb
xor
or
outsb
cli
mov
out
mov
adc
ret
in
xchg
sbb
outsb
ret
cltd
rolb
lahf
xchg
stc
xor
mov
out
sub
stc
ds
cwtl
lods
imul
into
jnp
xchg
sub
or
pop
inc
xor
call
int3
inc
dec
ret
clc
xor
adc
ljmp
cmp
pop
mov
and
pop
lret
fcompl
mov
insl
jle
pop
sbb
rclb
scas
mov
movsb
mov
stos
pop
jo
sbb
hlt
cmp
scas
dec
push
lret
sti
decb
es
jmp
andl
das
hlt
add
dec
into
xor
data16
imul
xchg
lcall
lea
ret
outsb
pop
scas
rolb
ja
es
push
arpl
pop
fxch
das
mov
mov
xlat
mov
fnstcw
rolb
mov
lret
fstps
and
inc
inc
pop
push
fistpll
mov
jp
in
jecxz
ret
sub
jl
cmp
and
inc
push
xchg
inc
repnz
sbb
out
lods
inc
scas
call
stos
nop
xor
lock
sub
rcrl
sbb
push
gs
add
and
and
and
cld
fdivl
mov
andl
push
lods
sub
mov
cmc
in
jno
or
cmp
rcrb
jmp
scas
enter
call
adc
aam
jge
pop
leave
pusha
jp
inc
add
dec
mov
cmc
inc
add
xchg
dec
repz
lahf
scas
dec
or
or
aaa
sub
sbb
aad
cs
nop
jp
inc
sub
imul
add
cmp
daa
mov
insb
cmp
sahf
daa
shll
fucom
dec
test
inc
mov
push
inc
aaa
loopne
mov
mov
orb
dec
mov
fisubrl
iret
ss
cmp
sbb
mov
or
movsb
fwait
and
xchg
push
or
loop
rcll
sbb
cld
fs
out
jg
mov
sbb
orl
aaa
in
push
add
and
inc
pop
adc
int
stos
lret
mov
lahf
adc
in
fcoms
and
imul
mov
push
lahf
mov
cmp
stos
loopne
lret
inc
out
cmc
in
icebp
addr16
lahf
pop
les
sub
ss
insb
or
jmp
mov
push
divb
jle
adc
xor
adc
fdivp
sbb
jno
loope
xorb
fwait
push
sub
inc
xlat
cwtl
jge
dec
adc
test
pop
and
adc
mov
shl
fstps
outsb
lahf
fcos
out
dec
adc
fistpl
addr16
jg
push
mov
shll
mov
outsl
inc
lcall
loop
push
xchg
stos
ja
inc
mov
xchg
call
mov
movsb
rorl
sbb
cmc
int
das
jns
jle
xorb
mov
out
je
lret
lret
cmpsl
popa
orl
cmpsl
jnp
push
cmpsl
fidivl
jnp
out
pop
frstor
mov
aam
cmpsl
std
adcb
jnp
adc
outsb
mov
mov
in
cmp
dec
arpl
test
je
je
cs
les
loope
decb
loope
pop
sub
inc
jae
in
cmpsl
inc
inc
sub
popf
jg
inc
pop
mov
pop
jmp
mov
push
sub
and
mov
stos
fbld
data16
loop
repnz
aam
cwtl
and
jns
push
sti
xchg
push
sbb
inc
xchg
xchg
pop
xchg
push
out
push
out
dec
aaa
or
cmp
mov
sahf
jp
adc
cmpb
adc
sbb
popf
fwait
mov
cmp
popf
lret
cmpsb
or
mov
or
cmp
jmp
dec
in
jae
xor
mov
mov
lds
popf
addr16
call
xchg
aaa
in
bound
push
mov
popa
fsubrs
jge
inc
enter
sbb
push
fldl
aas
loop
dec
inc
inc
jne
lret
loop
sbb
fs
aad
cmp
pop
lea
mov
push
mov
je
mov
loope
scas
out
jne
jge
jge
push
sub
pop
pop
cmc
aaa
popa
sbb
pop
test
in
outsb
mov
inc
fstpl
dec
mov
out
outsl
repz
pop
push
push
stos
fdivp
cwtl
xor
adc
ljmp
pop
push
push
addb
hlt
sub
dec
fnstsw
out
test
cltd
movsl
xor
lahf
shll
stos
lock
cmc
shll
mov
push
fsts
mov
arpl
pop
aam
adc
mov
fnsave
and
sti
sarb
fs
mov
daa
xor
cmc
bound
cmp
cmp
xor
cmp
lds
mov
or
adc
test
aad
test
ds
mov
shr
jle
jne
xchg
mov
push
and
xchg
cmp
in
inc
orb
lahf
mov
sbb
mov
push
fcmovu
in
les
out
bound
add
aas
xorl
pop
mov
push
jecxz
mov
loop
lock
cmp
sbb
xor
pop
jge
xchg
inc
push
push
dec
dec
xor
lahf
aam
pop
push
fdivl
add
outsl
push
jae
mov
loopne
mov
lods
mov
xchg
das
add
lcall
les
xlat
negb
xor
add
lods
mov
inc
imull
pop
cwtl
xor
ror
insl
ss
xor
push
sub
mov
cmpsl
xor
mov
cwtl
movsb
or
lcall
inc
cltd
popa
scas
rcl
push
lds
pop
cmpsl
dec
rol
lea
pop
fnstenv
clc
arpl
xor
leave
mov
sti
push
loop
or
popf
stos
in
xchg
push
xchg
mov
xor
cmc
jo
xor
sbb
sbb
test
pop
lcall
push
dec
ret
mov
std
mov
insb
in
sub
jo
loopne
sub
mov
lret
push
mov
or
push
xchg
xchg
cmpsl
outsb
fiadds
dec
pushf
std
jmp
push
stos
push
jns
cmpsb
mov
dec
and
cli
mov
repnz
mov
sahf
out
inc
mov
sbb
xchg
jle
shrb
aaa
neg
sbb
dec
stc
and
push
pop
mov
mov
sbb
inc
pop
inc
sarl
movl
leave
notl
xchg
and
ret
or
js
repz
pop
sbb
cmp
stc
cmp
xchg
mov
loop
add
in
push
pop
pop
mov
jmp
cmp
xorb
call
and
mov
mov
add
stc
dec
jo
sahf
jp
fs
pop
xor
add
pop
sbb
jl
outsl
test
leave
cmp
shld
clc
mov
jecxz
lret
mov
adc
fisubrl
jbe
loopne
pop
daa
sbb
pop
loope
push
in
lods
inc
push
int3
mov
or
mov
cmp
push
fmul
into
movsb
ret
dec
pop
popa
std
jmp
inc
cmp
jno
add
sbb
cmpsl
and
jmp
jo
mov
ret
inc
xor
mov
mov
pop
das
and
clc
mov
or
cmpsl
pop
xchg
push
ljmp
cld
movsl
int
xor
fdivl
mov
xor
not
aam
clc
shll
stos
jge
mov
out
inc
or
fwait
push
in
imul
out
push
sbb
ret
cmp
fsubs
push
push
ds
je
xor
jno
inc
cmp
sbb
xor
push
jb
mov
push
mov
jnp
hlt
push
pop
adc
sub
and
sbb
gs
jbe
pop
mov
xchg
xor
ret
out
dec
cmp
pop
jne
inc
je
hlt
fmull
out
mov
add
fsubl
inc
dec
in
ficomps
mov
lret
mov
xlat
xchg
das
test
incb
xor
xchg
lods
cld
cmp
push
mov
nop
jae
mov
sarl
test
scas
sbb
add
cli
lahf
arpl
xor
sub
arpl
loopne
in
sub
ja
cmp
xchg
stos
mov
xchg
imul
popf
mov
pcmpgtd
xchg
lods
ss
jae
xor
and
adc
adc
out
dec
mov
push
dec
push
mov
push
fdivrs
mov
lahf
or
popf
adc
gs
mov
sti
sbb
jnp
and
pop
rcr
cmp
xchg
jns
dec
or
repnz
push
mov
jl
lcall
and
add
add
ret
lds
push
in
stc
nop
push
cmp
jns
mov
sbb
in
int
or
sbb
xchg
pushf
ret
mov
or
mov
pushf
scas
push
xchg
push
loop
push
sub
jne
adc
pop
cli
mov
movsl
mov
pop
add
xor
mov
das
dec
push
fisttpl
mov
jbe
push
mov
mov
cmp
push
cld
sbb
dec
hlt
popf
adc
ret
add
inc
push
mov
dec
bound
insb
mov
lea
enter
and
mov
xchg
fstps
mov
iret
pop
movsb
dec
add
loopne
es
lret
and
stos
fisubrs
adc
cmp
imul
adc
jb
fbld
lods
mov
subl
idivl
adc
popa
rcll
and
int
test
out
push
jmp
xchg
sbb
andl
int3
xlat
mov
mov
rolb
adc
out
jp
int3
call
in
and
jae
jle
push
mov
add
xlat
lock
hlt
mov
in
shrb
adc
loope
xchg
lcall
sbb
sbb
add
dec
push
stc
xor
pushf
pop
out
mov
imul
repz
fsubrp
ja
jle
out
scas
testl
imul
fwait
mov
sbb
xor
xor
jb
fsubrl
sbb
jmp
sub
ljmp
fisttpl
popf
inc
mov
push
jle
mov
pop
out
xchg
or
test
test
arpl
pop
data16
sbb
fildll
cmp
adc
adc
xorl
ficoms
xor
out
fistpl
sub
ds
push
out
inc
stos
cs
add
movsb
adc
mov
adc
mov
dec
mov
pop
fsubrs
jl
ja
adc
push
int
xchg
mov
inc
iret
pop
push
in
je
sub
bound
daa
mov
mov
call
mov
sub
or
adc
int3
nop
mov
mov
jbe
sub
scas
jecxz
push
push
inc
jo
mov
aaa
xor
jnp
and
mov
lret
and
sahf
mov
fwait
je
lret
movsb
mov
adc
data16
test
inc
jmp
sub
ficompl
push
fs
adc
ret
jno
xchg
mov
xor
push
add
dec
addr16
loope
shr
pop
out
cmpb
lea
hlt
enter
stos
aas
add
popf
and
mov
add
pop
outsb
js
mov
mov
cmc
or
popf
pop
cmp
or
push
push
pop
mov
clc
or
xor
imul
xchg
shrb
cltd
das
flds
ds
dec
loop
test
push
outsl
mov
push
loopne
jmp
daa
cmp
pop
fmul
pop
in
outsl
pop
cmp
cmp
cmpsl
mov
push
orl
fcoms
lcall
push
sbb
add
and
shll
fildll
fildll
sub
xchg
mov
jo
sbb
jle
lods
push
and
stos
ss
mov
repnz
pusha
lds
and
testb
pop
jb
jl
mov
arpl
mov
pop
mov
fdiv
xchg
je
sbb
int
jge
stos
push
clc
xor
sti
add
jecxz
mov
push
cmp
enter
in
dec
jle
inc
fidivrs
mov
and
das
stos
movsl
adc
cmp
adc
push
in
ror
push
inc
sbb
xor
cld
inc
add
push
aam
or
mov
cmp
push
jae
shll
mov
fs
ja
add
scas
repnz
xchg
lea
jp
jecxz
ret
imul
cmp
test
cmp
cmp
adc
fs
or
xchg
ljmp
dec
mov
repz
aaa
lahf
or
push
adc
loopne
fwait
xor
hlt
outsb
pop
stc
mov
mov
pop
mov
mov
fsubp
cltd
and
xor
in
call
in
jmp
mov
mov
or
mov
pop
push
cwtl
push
sbb
dec
cmp
mov
xchg
sarl
xor
dec
test
sbb
jae
test
sbb
push
rcrl
or
ss
int3
aam
cld
xchg
dec
mov
and
testb
lcall
insb
inc
inc
jbe
mov
xchg
movsl
inc
cli
stc
inc
add
je
pusha
pop
pop
shl
jmp
jecxz
xor
lods
fmull
pusha
xor
sbbl
pushf
sbb
xlat
out
cmp
cs
xchg
insb
addl
into
das
jno
sub
add
dec
or
out
or
lds
das
shrl
push
ds
or
xor
jns
std
or
and
pop
jl
aaa
popa
add
lcall
test
jne
aaa
leave
lods
lea
push
leave
pop
jo
xchg
inc
cmpsl
add
loop
dec
inc
or
pop
lret
js
mov
mov
xor
pop
ja
stc
inc
test
pop
xchg
or
shl
loop
add
mov
lods
pop
and
dec
ljmp
pop
mov
or
divb
pop
inc
imul
fwait
add
jae
push
dec
insl
cld
jne
mov
pusha
cli
in
cli
xor
or
sarb
js
mov
aaa
aas
cwtl
push
cmp
cmpsl
pop
out
pop
and
or
fcompl
rclb
inc
dec
or
sbb
xor
test
xor
push
sbb
and
mov
inc
ljmp
mov
pop
sbb
shlb
mov
les
aas
cmpsb
test
sbb
mov
sub
clc
inc
xor
fidivs
into
sub
xchg
repnz
push
ret
push
xchg
push
sahf
loop
push
sub
lods
jns
xchg
lea
and
inc
jecxz
pusha
push
cmp
dec
les
aad
fildl
cs
push
imul
pushf
aam
sti
mov
shrb
movsb
pusha
jb
jmp
pushf
push
das
sbb
data16
jnp
gs
push
inc
add
mov
clc
lea
pushf
xchg
sub
inc
in
stos
aad
into
out
popf
dec
mov
ja
rcl
out
mov
scas
shrb
push
ljmp
loopne
push
ficomps
mov
imull
stos
aam
cmpl
pop
xchg
fstps
sar
sti
add
gs
leave
dec
or
adc
or
pushf
orl
stos
mov
push
jns
adc
dec
lds
add
mov
sub
fstpt
fmuls
pop
movsl
or
pop
stc
jbe
ret
fisubrs
xchg
aad
mov
stos
int
xor
xchg
mov
ret
push
sub
out
or
jmp
addr16
fistps
pop
sbb
lea
mov
fadd
sub
xlat
lock
jp
dec
sub
adc
sti
insb
adc
enter
lock
dec
jo
inc
stc
xchg
int3
mull
nop
mov
adc
je
mov
jb
dec
mov
xchg
jle
mov
jge
ljmp
stc
outsl
int3
shrb
sbb
cmp
ds
jo
adc
call
movsl
mov
sbb
xchg
adc
ffreep
mov
fwait
ret
xchg
lahf
mov
xchg
scas
fs
addr16
in
xor
fs
sarb
in
dec
mov
iret
mov
pop
and
push
push
popa
stc
mov
lods
xor
mov
fistps
insb
jb
inc
sbb
add
mov
insb
mov
push
mov
fdivrs
add
in
mov
sbb
inc
arpl
dec
push
les
std
dec
and
pop
adc
in
fnstsw
pop
dec
out
or
inc
clc
pop
pop
rcl
inc
dec
nop
enter
sbb
loopne
fsubs
mov
leave
pop
les
jno
addr16
bswap
dec
cmp
pop
push
fldln2
mov
rorb
movsl
push
imul
popa
out
in
popa
cmc
pop
and
aaa
dec
push
mov
and
mov
stos
cmpsb
dec
mov
mov
dec
pop
rolb
je
lea
lods
lahf
sbb
jns
xor
lret
lret
xchg
add
mov
clc
jno
jno
rorb
xor
push
lahf
aas
jae
or
mov
inc
or
in
add
sub
and
popf
dec
cltd
loop
or
mov
sub
icebp
inc
jb
fiadds
jp
and
or
sbb
or
push
cmp
jnp
sahf
ret
or
in
xor
es
outsb
mov
mov
cmc
mov
sti
cmp
mov
and
cmpsb
je
add
add
pop
iret
mov
aam
ja
shll
mov
push
icebp
jne
ds
push
in
lods
int
xchg
and
pushw
mov
sub
sub
mov
push
mov
outsb
popf
dec
ffreep
in
arpl
lods
mov
and
gs
pop
dec
stos
ja
push
and
pop
ds
nop
scas
in
in
xchg
test
sbb
mov
mov
es
cmpsb
dec
mov
xchg
mov
aad
movsl
testb
cmc
leave
adc
pop
pop
sti
jne
inc
into
in
cmp
mov
daa
scas
lock
lret
xor
pusha
imul
popa
js
fildl
pop
roll
jb
push
lds
dec
add
adc
lret
or
mov
mov
push
xor
add
xchg
fmull
sub
sub
cltd
dec
inc
cli
pop
pushw
xchg
dec
jl
jns
test
test
jnp
lret
jne
movsl
fucomip
pop
movsl
xor
ret
pop
loop
cmpsb
adc
loope
mov
and
aam
cmpsb
push
xor
jmp
negl
test
mov
fcomps
cmp
xor
mov
lea
int
push
jo
add
jecxz
mov
dec
xchg
and
fdivrl
xor
cmp
sub
jl
pop
add
xchg
jae
or
dec
stos
fsts
lcall
mov
xorb
sbb
xchg
mov
and
xchg
jge
mov
pop
fldl
test
fimuls
mov
cs
and
cmpsb
stos
or
and
inc
stos
fcmovb
jne
xor
dec
push
pop
xor
adc
pop
xchg
pop
aas
movsl
and
mov
and
jae
icebp
jns
dec
rclb
rolb
add
sti
ret
out
push
int
lods
or
in
jl
popa
push
lods
mov
sub
jns
lea
int3
mov
mov
add
xor
pop
ds
dec
or
push
add
sbb
push
mov
xchg
sub
ret
push
outsb
scas
jg
lahf
into
aas
cmpb
mov
adc
repz
out
xor
bound
notl
add
xchg
and
jns
dec
fisubrl
data16
cmovne
fistps
xchg
jp
mov
loop
xchg
imul
pop
popa
imul
and
repz
jno
push
das
mov
outsl
xchg
out
xchg
cmc
adc
lods
cs
push
xchg
call
cwtl
pop
mov
filds
pop
inc
data16
lods
jne
aam
cmp
pop
adc
fimull
repnz
shl
andl
lret
in
mov
pop
aam
int
popa
mov
xor
adc
pop
fidivs
mov
dec
out
cli
lock
mov
pop
inc
xor
outsb
mov
push
out
adc
pop
daa
push
add
mov
ret
push
stos
jge
mov
dec
cmp
sub
pop
dec
test
pop
inc
fwait
jae
pop
xchg
push
sbb
enter
mov
icebp
fwait
mov
sub
mov
push
test
shlb
sub
xor
dec
aad
dec
mov
or
scas
mov
mov
insl
xor
sbb
imul
and
add
inc
es
inc
std
dec
fnstenv
cmpsb
sub
mov
mov
pop
sub
inc
jge
mov
out
xor
inc
inc
scas
inc
mov
jp
sub
sbb
jmp
jmp
sub
leave
movsb
jnp
push
shll
xchg
fdivrs
jp
enter
mov
enter
aaa
cmp
inc
aad
lea
in
es
inc
arpl
subl
pop
jno
xchg
rorb
cli
pop
mov
add
sbb
sub
inc
add
imul
es
cmpsl
xchg
cmpsb
fistpl
imul
sub
jg
xor
int
je
data16
sub
dec
flds
mov
mov
enter
mov
fcoml
cmc
xchg
pop
xor
mov
mov
xor
test
sbb
sti
aas
inc
fs
pop
lds
mov
imul
adc
lret
lcall
ror
xchg
mov
aam
mov
bound
add
and
sub
cmp
cmp
xchg
adc
or
subl
imul
sub
int3
mov
pushf
divb
outsb
mov
sahf
xchg
cmp
jo
adc
ror
push
adc
in
fwait
shrl
insb
subl
cmp
pushl
pop
pop
sub
add
aam
ja
mov
movsb
or
lret
js
or
insb
mov
outsl
inc
lahf
push
mov
aaa
cmp
sbb
int
adc
xchg
mov
mov
mov
rolb
add
inc
mov
mov
jb
enter
int3
stos
add
jge
and
mov
imul
xchg
ret
cli
insb
xchg
cmp
clc
xchg
sbb
inc
rclb
or
cmp
loope
aad
pop
xchg
sbb
jge
mov
sub
inc
mov
pop
dec
push
jb
jae
push
cmpsb
jo
push
push
test
adc
and
mov
daa
ljmp
inc
in
inc
mov
add
and
pop
xchg
scas
out
dec
jb
cmc
cwtl
sbb
dec
jg
pop
mov
scas
repnz
jno
test
into
sahf
sbb
mov
push
and
mov
aad
or
sahf
sub
lahf
jg
pop
and
scas
sub
sbb
mov
jne
sub
mov
out
insl
and
or
mov
mov
jns
inc
and
out
test
sbb
jmp
rolb
inc
inc
and
xchg
movsb
testb
stc
insl
imul
add
stc
lret
jmp
bound
mov
add
cmp
sbb
lods
xchg
jmp
pop
pop
popf
sar
lods
out
aaa
push
stos
mov
cmp
sub
cs
movsl
jnp
inc
fldl
xchg
lret
mov
int3
inc
push
ljmp
cmp
sbb
leave
mov
mov
sub
adcl
int
add
stc
sub
dec
pusha
repnz
add
jmp
jns
jl
fistpl
pop
mov
ljmp
and
orb
cmp
jl
ss
and
outsb
cmp
jae
aam
mov
mov
add
mov
es
mov
push
dec
in
pop
loope
aam
je
xchg
jmp
fidivs
movsl
std
mov
xchg
push
xchg
out
inc
out
sub
jmp
sbb
imul
lock
fdivr
push
and
dec
dec
or
mov
pop
movsb
ss
cmpsb
and
packssdw
add
mov
lret
inc
pop
clc
add
cmpsl
inc
jecxz
sub
out
aaa
mov
add
sub
scas
fildll
inc
mov
lods
mov
ds
cmp
xchg
jnp
add
loopne
shlb
repnz
or
in
sub
fists
inc
cmpb
roll
loope
test
push
insl
pushf
cmpsl
pop
mov
insl
gs
cli
pop
or
repnz
mov
mov
dec
stos
test
adc
pusha
mov
je
push
mov
test
xor
outsl
push
movsb
arpl
fistl
sbb
pop
lret
lods
jae
movsb
mov
stc
add
push
test
ss
dec
or
push
leave
test
scas
in
push
lea
ret
je
cmp
xchg
add
and
xor
ror
aad
inc
in
in
mov
xor
scas
add
ja
repz
mov
add
or
loopne
dec
sbb
pop
pop
je
les
in
add
mov
into
sti
pop
mov
nop
insb
sbb
jecxz
hlt
data16
push
fsubl
push
ret
inc
nop
and
push
push
in
jns
fisubs
cmp
xchg
and
jo
mov
adc
mov
push
test
mov
fs
mov
jg
xor
pushf
ret
imull
inc
push
mov
int3
inc
jne
lock
aas
mov
out
sbb
adc
int3
into
dec
or
adc
int
or
sbb
mov
imul
xchg
sbb
rorb
jecxz
mov
ss
shr
lea
dec
xor
addr16
jno
dec
xlat
movl
cltd
sahf
mov
stc
testb
outsl
out
xchg
mov
jl
aaa
dec
outsl
or
mov
das
mov
rcll
mov
xor
ficoms
je
sbbb
sbb
jne
jnp
or
neg
movsb
dec
lods
loop
xor
rorl
lock
rorb
arpl
and
jge
jno
fmull
std
xchg
jg
clc
aad
jle
sbb
test
sub
stos
sbb
add
in
or
push
inc
mov
fcmovnu
into
test
hlt
fdivp
scas
dec
dec
fsubs
sub
mov
out
jnp
repz
jo
mov
and
fcoml
inc
lds
rep
push
push
and
daa
push
pslld
flds
clc
mov
sub
incb
ret
das
aas
cmp
pop
jnp
aas
out
inc
and
mov
and
dec
xchg
shlb
sub
mov
loope
xchg
push
data16
jbe,pn
jae
lcall
dec
imull
jle
cltd
pop
push
adc
cs
lcall
jg
insl
in
test
mov
imul
xor
pop
rclb
jno
cmp
leave
lret
ljmp
pop
push
add
sub
ja
cwtl
jle
jmp
in
sub
inc
adc
test
and
nop
mov
int
mov
xchg
cvtps2pd
lds
cmp
jo
pusha
jmp
lods
mov
mov
xor
and
pop
repz
xchg
cmc
ror
pop
push
mov
stc
mov
sbb
or
fdivs
mov
ffreep
or
sbb
pop
mov
mov
movsl
dec
in
nop
aad
ljmp
pop
jno
cmp
jo
xchg
imul
scas
jns
jmp
jne
or
ret
sub
into
jg
push
push
flds
mov
mov
lock
sbb
fcmovu
ffreep
mov
adc
mov
xor
xlat
or
lret
pushf
pop
bnd
aad
stc
push
push
cltd
lahf
or
test
out
lcall
lret
ret
stos
and
add
int3
popa
popa
jg
out
or
aad
mov
jmp
mov
inc
sub
lahf
push
push
jo
cmc
sarb
xor
push
dec
and
mov
outsl
aas
dec
daa
and
lret
aam
ljmp
aad
out
cmp
or
push
and
repz
test
push
xor
fstpt
mov
popa
repz
out
les
jnp
out
mov
add
mov
outsb
test
adc
and
bound
scas
iret
jnp
int
js
loopne
push
mov
adc
and
in
loopne
ss
lret
aaa
xchg
jecxz
and
add
data16
adc
add
mull
test
jb
test
std
into
xor
stc
cmp
addb
rcrl
loope
cli
push
cmp
mov
jp
nop
ret
add
cmp
pop
insl
pop
shll
imul
sar
mov
fdivl
sbb
cmp
push
lret
mov
clc
sar
out
hlt
ficompl
jg
inc
or
popf
push
jnp
jecxz
xor
xor
dec
mov
dec
dec
or
pop
popa
scas
or
dec
mov
test
cmp
xor
jb
mov
mov
cmpsb
mov
push
imul
inc
test
cli
jb
and
lea
fwait
mov
iret
les
sbb
add
mov
add
int3
aaa
adc
sub
arpl
popa
xor
fdivrl
xchg
stos
cmc
pushf
sar
lret
cmp
pop
mov
sarl
push
mov
test
mov
test
xchg
xor
data16
adc
incl
lcall
mov
mov
mov
int3
inc
and
push
dec
pop
jp
fmuls
xor
sbbb
and
xorl
adc
add
jg
xchg
cmpsl
stc
xlat
inc
mov
in
adc
push
push
mov
imul
mov
arpl
loop
imul
jb
jbe
and
jne
mov
mov
into
ficomps
inc
shrl
inc
inc
in
jmp
xchg
mov
mov
mov
addr16
inc
scas
enter
push
roll
push
jnp
dec
jecxz
into
push
cld
iret
push
push
pop
dec
comiss
dec
je
mov
sbb
test
je
nop
jmp
push
mov
cmpsl
dec
mov
mov
js
movsb
mov
popf
xor
mov
mov
sbb
mov
adc
push
pop
and
jns
pop
xor
repnz
fists
add
lods
int3
or
jl
setbe
call
pop
inc
imul
mov
sbb
xchg
xor
inc
sti
lock
dec
ss
cmc
or
cmc
sbbl
clc
insb
roll
mov
int3
push
push
cmpsl
movsl
subb
das
jle
testb
adc
inc
arpl
es
mov
mov
in
je
aad
cwtl
fsubrl
xchg
inc
insb
jl
mov
popf
push
dec
outsb
add
outsl
pop
mov
xchg
call
clc
std
movsl
ja
dec
cmpsb
ret
add
test
lahf
call
imul
lret
dec
jae
gs
inc
mov
xchg
data16
sbb
inc
and
imul
sbb
je
gs
pop
enter
adc
pop
push
xor
icebp
sub
cmc
jp
lahf
sahf
adc
mov
pop
adc
pushf
jecxz
into
xchg
shl
mov
sbbb
xlat
mov
and
stc
cltd
lea
inc
mov
sbb
push
mov
inc
dec
ret
adc
pusha
ja
lock
dec
addr16
add
call
dec
xor
mov
add
mov
mov
inc
jg
vpshufhw
dec
or
je
loopne
mov
sbb
ret
mov
xor
and
xchg
jg
cltd
xchg
ss
fwait
aam
add
std
mov
pop
fnstcw
arpl
sub
sub
fcomps
cwtl
test
sub
and
mov
fldt
testb
inc
inc
sarb
jp
mov
enter
in
outsb
pushf
icebp
sub
in
data16
xor
test
scas
test
fwait
xor
sarb
xchg
scas
xor
cmpsb
daa
in
sub
cmp
xchg
pop
jb
mov
in
push
mov
daa
push
mov
adc
in
and
fisttpll
imul
and
int
xchg
mov
movsl
push
xchg
mov
jb
xor
push
dec
aad
mov
rcll
ret
cmp
into
pop
xor
testl
dec
pop
pop
sti
mov
xchg
fsubl
pop
inc
rolb
dec
inc
bound
mov
jp
jg
mov
cmp
push
mov
push
ret
in
push
inc
stos
arpl
sti
mov
add
stc
pusha
out
inc
int3
push
das
insl
sub
inc
or
xchg
mov
pusha
shl
les
mov
mov
clc
je
and
clc
jnp
add
jne
pop
shl
xchg
jbe
stc
or
lock
sub
jmp
sub
dec
mul
cmpsb
cmp
adc
test
pop
or
add
or
adc
sahf
or
cmc
pop
insl
iret
xchg
ja
scas
mov
daa
rclb
arpl
lods
pop
push
cmp
stos
test
dec
sub
xchg
cwtl
or
cs
push
and
icebp
mov
mov
push
insb
lret
xchg
ds
pop
pop
int3
jns
cmp
xchg
stos
test
sub
mov
stc
mov
pop
push
add
cmp
mov
jne
daa
loope
add
mov
les
or
mov
cmc
dec
mov
imul
sbb
andl
pop
adc
push
sbb
dec
bound
sub
dec
sbb
lods
scas
out
mov
cs
mov
add
jecxz
xchg
lcall
cmp
icebp
popa
and
hlt
fwait
jmp
jl
je
add
xchg
pop
add
dec
pop
mov
mov
sub
xor
jge
sub
push
mov
dec
or
fstl
sbb
ds
fldcw
loope
adc
outsl
les
ss
insl
and
mov
add
ljmp
out
mov
loope
adc
xorl
mov
ret
cmp
outsl
cmp
jl
daa
cltd
and
xor
icebp
incl
pop
mov
mov
jp
push
mov
shlb
icebp
icebp
in
mov
loopne
scas
test
mov
xor
adc
fimull
add
je
negb
clc
jecxz
stos
mov
out
sahf
dec
sub
adc
add
jmp
mov
push
add
mov
mov
dec
ret
shld
or
sub
pop
xor
mov
mov
xor
and
cmp
sub
fldenv
inc
cmp
and
divb
std
dec
xchg
sarl
inc
in
in
repnz
and
out
jbe
aam
and
das
call
adc
ret
inc
and
sub
js
cld
cli
adcb
mov
testb
lahf
insl
adcl
out
ficompl
rcl
mov
jmp
push
fmulp
cwtl
add
ret
mov
xchg
out
mov
popf
dec
inc
ret
fstl
fdivrl
cmc
out
aam
and
gs
xor
fs
push
dec
icebp
push
xchg
orb
mov
out
into
nop
mov
mov
lea
sub
mov
and
jnp
pop
or
out
mov
mov
lods
and
imul
bound
mov
sub
clc
fbstp
sub
loopne
cmp
lret
ss
adc
jno
frstor
int3
push
ret
push
jp
mov
or
lods
dec
xor
test
adc
pushl
outsl
into
into
mov
push
mov
or
lea
frstor
aad
ret
push
cmp
cltd
cmp
mov
repnz
pop
popa
add
mov
stos
mov
in
and
test
imul
pop
jmp
pop
add
ljmp
test
push
pop
out
xor
jnp
ljmp
cld
xchg
jb
dec
cmpb
inc
addr16
mov
xchg
mov
or
jge
pop
les
imul
dec
add
divl
sub
loope
pop
push
sarb
mov
and
imul
outsl
add
mov
lret
pop
push
xchg
adc
xor
xchg
pop
and
sub
xchg
in
jle
stc
push
jp
ret
sbbl
xchg
test
pusha
jne
push
cmp
jmp
lret
mov
jns
add
xchg
inc
mov
in
mov
xchg
cmpsl
xchg
push
lea
add
loop
test
fxch
mov
call
mov
std
mov
fsubrp
cltd
mov
jle
push
insb
pop
jnp
jecxz
daa
inc
mov
mov
sbb
aad
pop
cmp
insl
sub
ljmp
xor
mov
cmp
push
arpl
sbb
orl
pusha
mov
inc
fimuls
out
insb
aam
dec
movsb
cs
push
mov
fadds
outsl
jecxz
push
call
push
xchg
fistl
in
cltd
leave
test
mov
loope
adc
bound
push
aad
pop
call
fistpl
sbb
stos
out
inc
inc
adc
jns
jmp
cmp
pushf
ljmp
in
xor
jecxz
daa
dec
jl
and
add
decl
xor
sub
mov
inc
rol
punpcklbw
cmc
clc
or
fs
arpl
int
mov
push
pusha
cmp
loopne
and
jne
xor
daa
pop
mov
mov
jbe
cwtl
push
cmpsl
sarb
cltd
inc
loopne
mov
push
pop
cltd
mov
arpl
sub
cmp
and
jnp
loope
aaa
push
push
shr
pop
arpl
repnz
mov
sub
add
pop
inc
pop
pop
ljmp
iret
jecxz
pusha
in
dec
add
in
ljmp
xchg
xor
xchg
cmp
sub
inc
xchg
mov
xchg
daa
icebp
lods
push
and
xchg
je
loop
pop
mov
inc
in
dec
int3
fbld
pop
outsb
lds
or
sub
push
sub
hlt
sahf
inc
sbb
xchg
push
shlb
aam
lods
inc
mov
repz
loopne
idivl
int
stos
push
pop
push
xchg
add
push
cmpb
adc
add
cmc
push
push
ffreep
add
mov
adc
stos
mov
mov
and
ljmp
imul
dec
fs
aas
scas
dec
dec
lret
out
mov
inc
out
faddl
cmp
fstps
outsb
int
dec
xchg
adc
xchg
xchg
lods
inc
out
sbb
aad
fnstenv
mov
and
addl
dec
add
xlat
mov
loopne
jg
dec
in
loope
call
call
xchg
into
popf
into
jl
mov
dec
pop
add
push
inc
aas
jecxz
stos
push
xor
sub
fcmovb
xor
inc
dec
popl
nop
fwait
sub
sti
cmp
inc
mov
sarl
shrb
test
lahf
lret
scas
sub
inc
mov
arpl
mov
fidivrs
ror
icebp
imull
in
mov
add
daa
xchg
push
cmp
sahf
mov
iret
loope
mov
xor
inc
aam
ret
push
or
lret
pop
pop
inc
adc
add
xchg
mov
sbb
sub
in
test
data16
sti
fidivrs
fs
dec
iret
and
movsl
movq
int
pop
jnp
inc
ss
fdivrs
stos
cmp
jmp
xor
enter
repnz
adc
xchg
pop
fmull
or
cltd
fnstsw
mov
and
test
add
xor
xor
addr16
lods
jns
orl
imul
xchg
adc
add
fs
fincstp
adc
mov
jnp
push
cmpb
push
outsl
push
shlb
cmp
xor
sub
mov
cld
xor
dec
inc
and
mov
fidivrs
mov
dec
arpl
jb
and
inc
add
mov
push
or
pusha
sti
icebp
adc
xor
fildl
popf
jns
mov
xchg
ret
fidivrl
in
jl
ss
mov
call
xchg
and
jge
lahf
xor
fisubl
int3
shrl
arpl
clc
dec
xchg
mov
and
xchg
xor
cmp
cld
and
add
iret
enter
dec
sahf
mov
mov
in
mov
push
sub
xchg
jl
and
cmp
pop
aad
jne
adc
push
clc
mov
stos
mov
mov
gs
out
pushl
xlat
dec
dec
call
mov
mov
lret
inc
inc
and
or
stos
es
inc
jne
push
sbb
pop
mov
xor
fs
arpl
popf
mov
dec
add
fsubr
jp
sti
jmp
xchg
adc
inc
mov
jbe
cmp
movsb
adc
insl
lock
leave
mov
jmp
arpl
out
rclb
cltd
mov
or
push
inc
fldl2e
jge
add
push
jo
dec
and
sti
pop
mov
lret
pop
xchg
stos
cmp
push
adc
pop
fists
and
popa
push
mov
cwtl
pop
push
mov
and
repnz
dec
xchg
aad
cwtl
aas
pusha
adc
ficomps
pop
and
mov
add
sbb
pop
repnz
sti
ja
sarb
push
ds
in
nop
outsb
jno
int
arpl
jb
sub
mov
negb
mov
xor
jp
pop
call
adcl
movsb
mov
es
lods
mov
adc
xchg
leave
mov
cmp
dec
insb
aaa
cmpsb
dec
int
insb
enter
mov
cli
jg
roll
jno
imul
lret
sbb
ljmp
mov
cmc
inc
add
pusha
sbb
pop
stos
xchg
into
pop
or
jge
mov
and
or
mov
sub
dec
adc
mov
idivb
clc
arpl
rolb
div
inc
xchg
push
stc
pop
sbb
mov
pusha
jbe
sbb
cld
les
sahf
jbe
mov
mov
xchg
jo
outsb
das
cli
sahf
out
hlt
push
and
push
push
icebp
imul
pop
xabort
mov
sbb
sub
push
push
repnz
xchg
push
aad
jnp
fnstsw
push
icebp
pop
mov
aad
lods
adc
pop
inc
rcrb
mov
sbb
fcoms
mov
fcmovnbe
repnz
mov
push
loop
jge
ljmp
cld
jmp
jns
cmp
ds
cmp
push
sbb
add
lret
or
push
call
jne
mov
in
sub
adc
nop
and
sti
adc
jle
cmc
push
lcall
inc
in
rcr
mov
xor
mov
repz
icebp
lods
outsb
outsb
and
xchg
xchg
out
or
inc
fnstsw
xchg
pop
push
pop
rol
out
mov
in
sub
popf
shl
and
ret
or
popf
jo
mov
insb
in
cmp
mov
outsl
ja
pop
lods
push
xchg
sub
sahf
add
es
ljmp
and
sbb
lcall
out
dec
hlt
test
mov
push
inc
and
stos
sbb
pop
int3
cmc
movsb
ret
sub
dec
adc
into
popf
jp
push
inc
lea
add
xlat
dec
outsb
in
bound
sbb
out
push
out
cmp
sbbb
enter
pop
retw
jecxz
mov
xchg
xchg
stc
mov
repz
xchg
cmp
mov
inc
rcll
adc
jb
xchg
or
jmp
adc
lds
pop
inc
dec
mov
sub
sarl
mov
pusha
jo
rcl
inc
sub
xor
idivb
lods
stos
rcrb
testl
adc
testl
mov
js
push
out
jp
sub
push
aaa
mov
hlt
sub
pop
inc
clc
add
xchg
adc
adc
or
cmpl
leave
pop
cmp
lcall
fsubrs
add
into
pop
lods
cmp
inc
cs
pop
fsubp
inc
push
inc
sbbl
jecxz
cmpsl
sbb
cmp
aam
pop
rcrb
pop
imul
xchg
inc
aad
mov
adc
cs
arpl
mov
mov
cmp
fs
fnsetpm(287
enter
ret
lds
out
sub
clc
mov
adc
jnp
mov
ljmp
mov
in
sarl
dec
mov
orl
inc
aas
mov
inc
movsl
rcrb
in
add
adc
xchg
test
imul
cltd
dec
xlat
in
das
cli
dec
add
test
sti
das
int3
push
xor
in
adc
cmp
adc
leave
or
and
mov
and
jmp
xchg
inc
in
sub
sub
jmp
aam
adc
popf
dec
jmp
aam
jo
xor
push
lcall
adc
mov
daa
pop
or
lret
stos
bound
cltd
push
cmpsb
inc
incl
adc
xchg
testb
xlat
or
pop
xchg
xchg
jo
mov
fimull
aas
ljmp
fadds
ss
data16
inc
sbb
cmp
jbe
stos
data16
stos
add
imul
push
cmp
cmp
mov
lcall
jne
ss
test
setae
lods
pop
jb
xchg
movsb
pusha
or
pop
xor
adc
stos
fs
inc
mov
adc
cmp
fmuls
or
mov
or
lods
dec
or
inc
and
orl
lahf
lahf
test
psrlw
int
xor
dec
and
divb
pop
shr
push
fmull
test
mull
xlat
mov
imul
aam
enter
sahf
pop
push
aaa
push
push
push
loopne
sub
adc
xchg
sbb
jmp
movsl
es
hlt
outsb
jg
mov
call
roll
dec
inc
cmp
inc
rclb
shld
stos
decl
rorb
mov
mov
cmc
pop
shrb
mov
cli
xor
fidivrs
shll
adc
mov
cmp
insb
add
test
rcr
daa
pop
xor
push
mov
test
jl
test
lds
jp
adc
lock
push
jl
ret
adc
mov
cli
mov
jo
testb
jl
jne
xchg
out
add
lods
xchg
mov
jbe
leave
xlat
rclb
insl
cmpsb
ret
xchg
inc
scas
bound
fisttpl
adc
mov
jbe
and
mov
das
int3
adc
insb
jmp
adc
sub
push
sub
pop
cmpsl
xchg
hlt
sbb
call
out
imul
and
xchg
jg
add
mov
xchg
push
cld
pop
popf
lods
and
ret
and
and
popa
xchg
in
clc
xor
push
repz
xorb
mov
or
cli
subb
cmpsb
cmpsl
lds
or
mov
push
iret
cmpsl
rcll
mov
int
push
or
imul
xchg
lret
mov
mov
mov
fmull
push
ret
push
movb
mov
pop
pop
call
adc
out
mov
dec
pop
pop
ficomps
push
jg
and
call
movsb
sub
adc
es
jle
popa
xor
icebp
in
mov
ret
pop
aam
enter
pop
inc
mov
imul
addl
lea
mov
dec
lea
or
int
xchg
pop
adc
xchg
mov
sti
push
cmpxchg
cmp
fucomp
jge
imul
add
stos
cmp
dec
inc
cwtl
nop
loopne
mov
je
inc
repz
shrb
idivb
pop
add
arpl
ss
imul
shll
scas
or
jb
lods
addb
out
in
sbb
repnz
bound
push
sbb
sbb
fldenv
stos
inc
cltd
ret
mov
jne
jecxz
insb
ret
inc
es
add
loopne
or
enter
mov
add
jp
cmp
mov
jge
aaa
add
jno
outsb
adc
bound
mov
mov
jmp
mov
jb
out
sbb
sti
push
pop
fstpt
and
mulb
or
or
xor
pop
in
and
jp
scas
icebp
push
in
or
push
hlt
fdivrl
clc
es
mov
push
outsb
sub
adc
push
mov
pop
in
daa
loop
dec
or
cmp
cltd
lret
jmp
outsb
xor
popf
xlat
push
insb
sbb
clc
xchg
jae
andl
scas
dec
cmp
jae
adc
xor
in
push
negb
movsbl
out
fldcw
push
jbe
dec
sbb
dec
xor
sub
mov
and
shll
cmp
push
call
inc
mov
into
inc
es
iret
stos
subw
push
dec
les
and
dec
sbb
and
xchg
lcall
decb
insl
cltd
xchg
out
push
psrld
outsl
cltd
dec
inc
mov
mov
sysenter
aam
and
mov
cmp
idivl
jge
inc
and
stc
add
in
popf
ret
pop
pop
mov
bnd
and
sub
andb
stos
shlb
pop
cmc
cmpsl
adc
cmp
imulb
and
mov
fcomi
out
gs
sahf
cwtl
xchg
ret
nop
push
loop
pop
mov
adc
sub
jno
adc
cs
inc
in
ror
xlat
fidivrs
mov
pop
shl
ja
cmpb
push
lcall
js
cmp
es
sbb
nop
fs
and
adc
cmpsl
adc
pop
iret
mov
notb
popa
inc
lock
jnp
fsub
xchg
or
push
js
icebp
in
or
ljmp
rcr
cwtl
jo
lret
mov
mov
fimuls
dec
pop
xor
shll
pop
pop
btc
adc
into
mov
jo
movsl
loop
sbb
es
js
push
fildll
cwtl
mov
in
cld
push
call
popa
sub
enter
test
jb
imul
adc
mov
scas
hlt
cld
ja
or
inc
or
cmpsl
adc
bnd
inc
cld
test
rcl
orl
cmp
sbb
aaa
popf
js
mov
mov
xchg
movsb
sbb
pop
push
mov
movsb
in
sub
adc
dec
mov
popa
pop
mov
adc
mov
pop
js
daa
and
loopne
mov
popf
mov
test
sub
arpl
hlt
adc
sub
pop
testl
inc
pop
imul
pop
lahf
and
sub
push
fucomi
push
push
xlat
mov
movsl
les
cmp
push
pop
mov
sbb
push
mov
push
stos
jno
jb
test
add
in
inc
adc
aam
iret
sub
addr16
bound
pusha
adc
lret
xor
xchg
iret
ret
xlat
or
push
test
jns
push
add
je
mov
jbe
jmp
rclb
mov
xchg
xor
mov
push
mov
pop
jne
scas
and
cli
xchg
in
mov
loopne
es
cmp
push
fnsave
sbb
jne
ret
push
or
enter
mov
jle
adc
sbb
popa
vpsubd
fstpt
adc
jp
mov
mov
mov
fwait
pop
ja
pusha
aas
cld
push
jecxz
iret
int
je
mov
enter
adcb
rolb
and
int3
adc
scas
dec
mulb
lret
mov
mov
int
stc
test
lock
xor
mull
iret
and
xchg
hlt
inc
fwait
pop
jae
jbe
popa
push
adc
jl
push
repz
sub
pushf
test
mov
cmp
outsb
mov
test
add
xchg
sbb
arpl
xchg
sbb
push
orl
mov
call
dec
fwait
stos
jb
add
jae
cs
or
int
dec
fsubs
dec
out
cmp
pusha
sub
jmp
sbb
mov
and
call
ss
icebp
dec
testl
push
sbb
sti
pop
int3
stos
adc
mov
in
ljmp
dec
lock
mov
pop
or
cmp
repz
call
push
pop
stos
icebp
fwait
jl
pop
cmp
push
cmp
leave
pop
stos
add
cwtl
imul
push
fstpt
mov
decb
gs
fsubp
pop
sarl
andb
cli
das
fdivrs
ficompl
les
ljmp
mov
fsts
fidivl
pop
mov
sub
inc
mov
xlat
inc
pop
mov
xchg
jnp
jl
arpl
popf
inc
adc
jae
hlt
push
and
dec
push
adc
pop
scas
imul
or
jle
imul
out
jl
add
mov
stos
sub
push
or
mov
mov
adc
addb
or
addr16
addr16
lret
leave
sbb
je
add
repnz
mov
pop
pop
pop
data16
dec
jo
dec
add
stc
fxch
iret
and
pop
ljmp
subl
call
and
ret
std
int
inc
ja
jnp
mov
mov
mov
jb
shll
mov
imul
jmp
mov
mov
fldenv
dec
outsb
cmp
imul
fs
jns
movsb
popa
dec
out
mov
xchg
cld
ret
sbb
sub
fdivr
xchg
decl
sub
and
lea
lret
or
xor
push
or
repz
inc
outsb
jl
or
shrb
repz
orb
adc
leave
int3
mov
ljmp
shlb
cmpsl
pop
sti
and
pop
rcll
insb
and
aas
fs
cmp
or
das
sbb
inc
aam
fcmovnb
test
mov
mov
inc
mov
out
cmp
xchg
das
jbe
adc
lds
dec
cmpl
push
push
scas
movsl
stos
fidivrl
ja
jl
clc
mov
iret
sbb
jmp
jl
addr16
xchg
aad
arpl
in
std
xchg
inc
pop
push
push
shlb
xor
mov
and
sbb
or
filds
mov
pop
jne
or
cmp
ret
in
rorb
movsb
mov
mov
bound
decb
mov
rcr
clc
les
xchg
mov
mov
mov
lea
inc
and
ficomps
pop
mov
add
test
mov
and
loope
clc
jmp
shlb
outsb
xchg
jg
stos
xchg
mulb
fisubl
and
xchg
add
xchg
mov
cld
loop
push
sub
jne
cmp
popa
push
dec
movsb
outsb
in
sub
add
mov
pop
lret
out
jno
cli
mov
lcall
ret
push
xchg
lds
mov
and
sub
dec
jae
insb
push
jnp
lods
pop
xor
add
push
out
fmuls
push
mov
in
add
xchg
or
lret
repz
in
pop
inc
dec
iret
cmp
movsl
inc
ror
jne
add
lock
sub
add
push
xchg
outsb
pop
xlat
sub
jg
fcmovnbe
pop
and
ficompl
negl
ret
jp
subb
mov
mov
jle
ja
in
jae
lahf
xchg
push
testl
and
test
jle
sub
lods
pop
xchg
imul
aam
inc
es
ret
xor
cld
movsb
jmpw
dec
loopne
pop
add
cmp
imul
gs
sub
cld
adc
inc
lds
mov
mov
pop
xor
ficompl
ja
gs
add
sub
pop
jl
pop
iret
andl
xor
pop
sti
hlt
xor
push
mov
cmc
and
mov
das
mov
dec
inc
insl
aaa
out
into
call
cltd
jne
push
push
lahf
mov
jle
scas
insb
mov
rcrb
dec
mov
xchg
xchg
push
cmpb
out
arpl
jns
xchg
repz
es
push
imul
dec
mov
jp
xchg
mov
in
je
pop
or
stos
outsl
mov
dec
mov
lea
add
icebp
mov
test
lret
roll
insl
andl
loop
add
dec
mov
pop
arpl
mov
repz
jmp
sbb
andb
cmpsb
out
bswap
orl
out
sbb
sub
lods
and
xor
push
mov
repnz
mov
movsl
jbe
and
lcall
ss
pop
shlb
sub
fimuls
test
add
inc
adcb
seta
jecxz
scas
pop
mov
push
mov
adc
mov
test
sbb
das
cmpsb
and
movsb
in
jmp
jge
jp
in
jle
pop
push
or
add
rorl
imulb
lahf
pop
je
mov
xor
or
sbb
rol
sbb
outsb
or
pop
es
dec
lcall
pop
test
jle
ds
xchg
fstl
and
xchg
roll
jb
insl
mov
arpl
repz
mov
jo
loope
pop
fs
mov
sbb
rcrb
push
mov
pop
sub
ret
sbb
rclb
rcl
lret
jb
or
mov
jmp
cmp
sub
add
push
cwtl
in
shll
add
lods
push
cld
popa
push
push
jl
xchg
dec
dec
js,pt
jb
pop
dec
out
test
adc
movsb
or
inc
inc
stc
xchg
push
or
stc
shlb
mov
mov
push
cltd
mov
xor
sbb
or
out
int
ret
xor
cmp
cld
cwtl
mov
xchg
sub
andb
jge
xchg
pop
dec
daa
scas
lcall
xor
iret
test
jle
xlat
cltd
cmp
xchg
mov
aaa
sub
cs
cmp
loopne
pop
xor
push
scas
scas
add
mov
add
out
cmp
je
lods
inc
mov
cmp
add
test
xchg
mov
pop
mov
xorl
cmp
out
mov
out
lret
mov
push
dec
call
aad
sbb
and
cmc
js
enter
push
and
jo
aaa
inc
mov
mov
xchg
pop
stc
popf
push
jno
imul
and
test
add
roll
out
call
cmc
pop
leave
shlb
lcall
fnstsw
jae
adc
push
and
repnz
hlt
in
mov
clc
roll
addr16
cmc
cs
jmp
xchg
xor
pop
lods
bound
enter
clc
pop
sub
jne
or
test
and
std
lret
es
pop
in
and
scas
jae
or
xchg
jne
out
push
mov
jns
sahf
lods
pop
into
mov
sub
mov
jg
cmp
imul
cwtl
nop
lods
repz
fs
outsb
lock
les
xchg
inc
xchg
dec
leave
out
enter
clc
mov
add
clc
xor
push
jl
jo
xchg
imul
je
insl
addl
push
push
lahf
or
push
mov
cs
sahf
in
je
sub
aam
mov
adc
test
jl
mov
int
out
xchg
fsubrl
test
ljmp
add
sub
lret
mov
push
stos
leave
add
push
jno
pushl
cwtl
adcb
sarl
inc
push
ljmp
testb
aam
xlat
dec
inc
adc
rorb
pop
enter
jecxz
mov
adc
or
xchg
inc
mov
out
pop
push
sub
arpl
and
negb
add
sub
imul
push
sbb
repnz
inc
int3
std
adc
adc
addl
adc
out
cmpl
dec
sub
and
imul
jl
jns
dec
insb
stos
xor
dec
ret
sbb
leave
repnz
jb,pt
fists
inc
push
mov
push
fs
mov
sub
testl
in
xchg
sub
push
arpl
lock
and
bound
js
push
int
arpl
fiaddl
ss
dec
call
push
inc
pop
inc
inc
outsb
cld
xchg
mov
mov
mov
pop
pop
aad
push
divb
aas
test
cmp
iret
add
push
pushf
push
and
mov
int
cmpsl
or
mov
dec
test
dec
xor
je
lods
loop
les
cmovbe
inc
adc
xor
fwait
lods
or
xor
cli
xchg
and
mov
ret
sbb
lahf
xlat
iret
jg
sahf
cmp
decl
mov
mov
andb
mov
inc
das
repnz
inc
cmpsl
mov
pop
xchg
xor
jecxz
cmpsb
dec
sahf
cld
add
ss
cmp
push
shl
pop
loop
and
repz
sarl
mov
shlb
mov
dec
inc
imul
sbb
adc
xchg
xor
mov
insb
jge
inc
add
pushf
cmp
jae
enter
cmpb
jle
xchg
insb
adc
xlat
gs
ret
mov
or
mov
add
flds
sar
push
xchg
fwait
lcall
ja
scas
sahf
clc
mov
ljmp
fldenv
jl
data16
mov
mov
lods
cmc
xchg
fdiv
ret
stc
out
push
push
pop
jae
mov
sbb
sub
add
aad
mov
ror
jb
inc
dec
mov
and
aad
dec
adcl
jecxz
jecxz
xor
call
sbb
pop
dec
jg
pop
addr16
inc
mov
or
xchg
shlb
gs
push
mov
lods
and
inc
icebp
repnz
iret
pop
inc
es
mov
jnp
sub
or
push
sbb
popa
pop
dec
repnz
fldl
jnp
mov
dec
xlat
ret
call
fisubrl
xchg
dec
or
push
sbb
data16
sti
repz
cld
mov
fdivrl
push
dec
inc
in
mov
rcrb
rcrl
call
lahf
stos
xlat
xor
call
rolb
push
inc
cmp
xchg
pop
mov
xor
addl
adc
dec
enter
dec
addr16
inc
pushf
imul
and
xor
sub
add
xchg
fneni(8087
int3
psubusb
dec
inc
scas
push
cmp
cli
popf
jge
xchg
fstpl
fldenv
sub
mov
and
insb
mov
in
inc
data16
mov
in
push
lret
mov
cmp
or
stos
test
xor
aaa
dec
pusha
inc
jno
ja
sbb
add
popa
cld
push
lds
fwait
push
inc
aaa
and
shrl
leave
xchg
aaa
cmp
aaa
in
je
lahf
jne
pop
jl
inc
dec
pushf
into
cmpsb
inc
pop
pusha
sbb
jle
enter
mov
mov
push
je
idivb
sbb
mov
dec
lds
add
push
jno
pop
or
jo
add
inc
loope
jl
xchg
cmp
inc
popa
and
xor
pop
clc
stos
or
push
sub
stc
insb
aad
mov
bound
mov
dec
fwait
lret
rcl
in
add
std
scas
shll
mov
jecxz
in
inc
sub
mov
insl
jne
icebp
push
and
mov
mov
inc
sub
xchg
dec
cmp
movsb
jb
or
pop
fmuls
js
das
jb
repnz
or
adc
push
cld
sub
fiaddl
iret
les
push
stos
jge
out
jo
sub
sub
push
sub
jecxz
sahf
adc
push
push
lds
adcb
sbbl
add
aaa
mov
xchg
mov
lods
lock
add
ja
sub
std
mov
jg
cmp
push
std
push
mov
hlt
or
push
repz
je
int
scas
jge
mov
out
es
xor
push
sahf
leave
cmp
sub
mov
shll
push
lods
dec
pop
in
mov
xor
sub
xchg
dec
jae
lret
cmp
filds
sub
pop
add
jbe
cmc
arpl
lock
pop
popa
add
decl
adc
cmp
inc
pop
loope
xlat
mov
lret
sub
jne
xlat
jns
lret
pusha
inc
inc
shlb
lock
fstpl
xlat
mov
mov
mov
or
ret
mov
mov
out
push
aas
test
mov
xor
push
loope
adc
iret
sub
xor
in
loop
adc
sub
push
dec
add
xchg
loop
jno
fistps
jp
ljmp
pop
sbb
push
out
push
and
jno
inc
insl
test
and
xlat
cmp
rcr
mov
call
xchg
mov
or
rcrb
enter
in
and
mov
jle
aas
inc
pushw
inc
insb
call
and
adc
pop
xor
sbb
mov
push
cmp
lahf
icebp
cwtl
int
add
iret
and
sbb
dec
movsl
jecxz
mov
inc
and
in
jp
lcall
dec
pop
jns
fistl
jo
andl
outsl
dec
jnp
loopew
mov
jb
push
pop
js
notb
stc
jae
sbb
sbb
in
cmp
xlat
and
mov
scas
push
jle
cwtl
push
xor
aam
sbb
int3
mov
push
out
cmpsb
mov
hlt
cld
xchg
jg
in
test
sub
cmpsl
insb
push
out
gs
dec
inc
into
cmpsb
pop
xor
pop
xchg
or
mov
dec
ljmp
adc
or
scas
repz
bound
adc
jae
test
or
fisttps
outsb
sarl
sarb
fs
cltd
js
jl
mov
dec
pop
nop
push
mov
inc
push
pop
and
outsl
filds
rcll
xchg
mov
enter
movsb
outsl
mov
sbbw
movsb
push
out
cmp
sbb
pop
repz
leave
or
jo
ror
outsb
push
mov
out
jns
xchg
pop
or
add
in
cltd
dec
cmp
add
scas
sbb
sub
imul
loop
mov
cmp
xchg
xchg
dec
cmp
mov
in
and
adc
gs
dec
imul
loope
daa
sbb
sub
jg
add
fwait
ret
xor
jp
mov
enter
cmpsb
fnsave
push
or
popf
xor
shl
ja
or
mov
in
adc
fistl
mov
xchg
push
les
add
push
inc
divb
lds
ret
pop
xchg
and
ret
out
sbb
sub
jg
mov
cmp
push
test
popa
rcll
bound
inc
dec
pushf
xor
mov
rcrb
arpl
fildll
jp
adc
js
repz
mov
das
stc
xchg
andb
pusha
xor
stos
push
cwtl
movsl
and
js
lret
cmp
bnd
stc
push
clc
and
test
xchg
jb
mov
and
inc
mov
jge
cli
xchg
outsb
mov
xor
cli
cmp
pop
imul
xlat
bound
or
dec
cmp
inc
aam
outsl
inc
fwait
adc
jecxz
sahf
dec
lods
cltd
pop
sub
loope
jne
daa
adc
fldenv
xchg
pop
insl
int3
out
xor
in
das
sbbl
inc
mull
or
aas
push
and
adcl
pop
pop
jbe
in
pushw
lahf
push
jl
lds
gs
icebp
cmc
adc
shr
fimull
cmp
imul
add
jb
loop
jg
adc
sbb
cmpsl
cmova
mov
xor
lret
or
cli
inc
lods
jmp
mov
hlt
cltd
inc
jns
add
repnz
daa
mov
int3
mov
xor
out
mov
jecxz
sbb
in
xor
lods
stos
mov
fsubrp
or
dec
mov
sub
fists
out
sarl
pop
fsubs
int
jmp
nop
lcall
repz
out
pop
xchg
push
mov
ss
mov
sbb
test
or
loop
int
aaa
mov
pusha
fstl
repnz
jbe
aaa
adc
pop
lret
cwtl
xchg
xor
mov
xor
mov
mov
sbb
sub
xchg
out
push
sbb
es
cwtl
enter
ja
mov
hlt
repz
xor
push
jp
xchg
push
jg
fs
xchg
bound
cmpsl
xchg
repnz
sub
aad
lods
scas
mov
int3
inc
cmc
cmovb
pop
push
cltd
or
add
mov
xchg
call
jb
inc
sub
sub
pop
test
or
jp
dec
pop
jl
add
fs
jbe
js
cmpsl
test
pop
fs
lods
outsl
movsl
mov
inc
arpl
lcall
cmpsl
scas
fimull
push
cli
js
fldcw
scas
loopne
pop
pushf
mov
insl
xchg
sub
gs
cmp
push
jae
test
push
rcr
js
mov
enter
popa
loopne
sub
aas
fsts
dec
repnz
mov
xor
fwait
push
mov
xor
inc
icebp
cmp
inc
lds
mov
add
pop
fistps
xchg
test
out
mov
push
cmpb
mov
inc
xor
ret
jbe
lret
dec
mov
stos
pushf
push
movsl
add
jp
cwtl
daa
inc
fstpl
fcompl
dec
dec
inc
int3
dec
sub
or
pop
pop
stos
xchg
out
mov
dec
pop
nop
push
sti
mov
pop
call
xchg
out
movl
sub
test
sub
pop
cwtl
lods
lock
dec
cmp
lcall
add
test
jbe
outsb
jnp
push
aam
int3
ds
and
scas
out
shll
loope
or
fwait
jmp
dec
dec
lcall
xchg
xlat
rclb
es
decb
and
xchg
sbbl
add
xchg
scas
inc
push
ret
mov
jo
test
rcll
sti
lods
xor
pop
push
cli
cmp
stos
test
sti
push
movsb
ficompl
shll
pop
jecxz
test
dec
ret
adc
cmpsl
fcmovnb
enter
dec
jo
cmpsb
push
fs
add
ret
je
or
stc
out
nopl
aad
cmpsl
jae
jecxz
jo
inc
jp
xchg
mov
sub
pop
add
jne
push
dec
loop
ficomps
fiaddl
gs
scas
test
gs
ficompl
mov
mov
fstpl
test
mov
rcrb
movsb
sahf
xchg
xor
hlt
rcrl
iret
daa
scas
lea
sub
inc
fldt
imul
pop
jne
add
dec
xor
in
lcall
enter
cltd
mov
or
es
pop
inc
aas
popf
xor
sti
add
imul
sbb
iret
andb
jp
mov
movsb
subl
clc
jecxz
jl
and
mov
push
cmp
push
pop
or
add
fwait
dec
icebp
pop
dec
jo
xor
jge
rol
movl
imul
jg
sub
int3
sahf
loopne
fisubl
add
dec
lock
lds
inc
mov
or
pusha
push
cmp
lcall
mov
xor
aam
cmp
fstl
idivl
gs
out
xchg
in
rclb
data16
mov
xor
push
dec
daa
test
inc
xor
out
sbb
lret
xor
mov
mov
in
insl
aam
mov
mov
test
mov
pushf
pushf
fdiv
sub
xor
and
sbb
sub
aad
adc
mov
or
fwait
fstpt
and
out
xchg
and
nop
push
fdivrs
fcom
mov
fsub
loope
fimuls
mov
jno
add
cmp
xor
jb
add
pop
jmp
test
out
cmpsb
inc
mov
mov
sbbl
mov
loope
xchg
xchg
sar
xor
out
cmp
in
rep
pop
lret
jae
inc
loopne
fsubl
aad
cmp
out
mov
mov
movsb
inc
clc
cmp
sub
pop
scas
arpl
scas
dec
in
xor
out
stos
sbb
loope
sbb
stos
movsl
add
lret
and
mov
dec
ds
dec
sahf
xchg
pop
mov
pop
sti
daa
clc
ret
mov
addr16
pop
sub
adc
jo
mov
xchg
stos
cld
repz
pop
std
mov
pop
popa
jno
cwtl
mov
gs
dec
mov
xchg
loop
add
test
jbe
in
jbe
movsb
popl
add
and
icebp
jecxz
loop
adc
rcrl
aaa
sub
addr16
outsb
ljmp
xchg
loopne
mov
lret
cmpsl
fwait
xchg
jle
rolb
adc
clc
xlat
or
js
pop
sub
jae
xlat
and
pop
out
pop
fidivs
xchg
inc
sub
out
jae
inc
rclb
cmp
loope
sbb
shr
sbb
shrb
fwait
push
in
jp
shl
xchg
shlb
dec
popa
push
dec
xchg
jle
enter
fnstcw
xchg
or
fisubl
fcomp
xchg
orb
mov
movsb
fs
mov
nop
sub
int
mov
push
push
sbb
inc
popa
jnp
std
movsb
testl
add
ljmp
pop
jns
mov
nop
lret
xchg
lea
popf
inc
jmp
jecxz
mov
addb
ret
dec
lock
test
cmp
das
inc
sahf
and
lods
pop
xchg
jle
xchg
jb
push
xor
insb
xor
out
cs
arpl
stos
out
sbb
mov
lahf
xchg
in
and
lea
nop
dec
js
mov
aad
mov
pop
js
and
xchg
sbb
mov
orl
pop
adc
push
jo
cmpsb
loop
fdiv
xchg
or
jp
cmc
xchg
ffreep
push
xchg
aad
daa
xor
jnp
pop
pusha
mov
jb
xchg
jl
fwait
aaa
test
test
jnp
call
push
push
sub
xchg
sbb
dec
and
enter
jb
add
sbb
dec
out
lods
fsubrs
stc
xor
mov
jo
loope
inc
daa
test
lods
sbb
shl
aam
sub
clc
dec
xchg
popa
xlat
mov
cli
pop
or
out
imul
pop
ds
lds
lret
cmp
outsb
bound
imul
fwait
push
jb
call
mov
cli
ja
insl
dec
and
cmp
mov
dec
testl
dec
cmp
sub
inc
push
jae
push
jg
xchg
shr
or
xchg
stos
leave
pop
mov
sub
stos
andb
cmpsl
jne
orl
sub
xor
jecxz
pop
in
lds
mov
in
loopne
jecxz
sbb
or
and
lcall
cmp
data16
jae
xchg
inc
push
dec
sbb
mov
das
pop
stc
push
cmc
addr16
dec
cmp
arpl
cmp
enter
fs
mov
xchg
sbb
jns
aaa
pop
imul
sti
in
ja
test
sbb
xchg
push
and
dec
dec
push
pop
xor
mov
xor
adc
clc
fildl
cwtl
lods
into
or
sahf
sbb
sbb
xor
jp
test
les
cs
cmp
iret
test
mov
out
mov
mov
lds
sbb
aam
repnz
cmp
rcrb
add
lods
ljmp
sbb
fcomp
enter
insl
mov
push
sbb
inc
inc
aas
arpl
inc
mov
mov
sbb
dec
xchg
mov
sbb
call
pop
ss
rcll
cmp
push
addr16
push
iret
lcall
shlb
dec
in
mov
int
aad
nop
push
dec
bnd
pop
xchg
lahf
dec
xor
addr16
clc
adc
js
cld
push
or
fwait
adc
cmpsl
insb
dec
stos
movsl
jae
out
dec
in
xor
sub
dec
lods
adc
pop
lods
cmp
cmp
sbb
and
fsts
sub
into
push
pop
je
test
xor
mov
aad
jae
mov
test
cmpl
out
fwait
stc
in
jno
es
push
cmp
jbe
cmp
cmpsl
xor
push
sbb
lods
cmp
loop
shl
inc
cmpsl
dec
les
in
jmp
and
jl
fisttpll
rcr
fs
incl
in
inc
sbb
xchg
stos
xor
mov
or
iret
xchg
je
mov
fwait
cs
inc
cvtps2pi
jge
rcrl
test
lret
mov
inc
fsubrl
mov
mov
mov
mov
lret
test
cmp
notb
add
imul
aad
cmp
out
cmp
mov
je
jmp
sbb
cwtl
push
dec
push
inc
adc
ja
movsb
orb
xchg
adc
pop
pop
pop
xchg
sar
xchg
xchg
xchg
jmp
pop
adc
sub
aad
je
stos
jl
and
cmp
es
cltd
fs
outsb
mov
and
aaa
jle
cmp
aaa
mov
notl
mov
roll
aaa
or
ret
cmpsl
clc
xor
sar
push
call
push
push
out
jo
mov
mov
dec
adc
stos
cli
fwait
in
iret
andb
jbe
cmp
push
mov
ds
mov
add
jb
dec
jecxz
xchg
pop
and
sbb
movsl
decl
hlt
push
std
sub
aad
nop
adcl
sbb
out
dec
xor
mov
inc
andb
cld
daa
adc
xorl
mov
sub
sar
cmc
add
push
sbb
daa
or
sub
jb
aad
mov
iret
je
push
lods
inc
push
xchg
outsb
or
mov
lods
cmp
sub
ja
testl
jbe
and
mov
orl
push
jmp
movb
sbb
mov
push
je
nop
gs
adcl
inc
test
imul
dec
add
push
push
gs
push
lahf
pop
jecxz
mov
pop
out
xchg
inc
loopne
cmp
aad
dec
sti
xchg
and
mov
jo
addb
push
cltd
cmc
mov
out
int3
jl
xor
inc
jo
add
cmp
call
adc
int
inc
or
cmp
xchg
adc
add
fdivrl
adc
sbb
movsl
cs
sub
push
into
fisubrs
inc
gs
xchg
into
xchg
in
dec
inc
push
int3
das
pop
jnp
clc
or
shll
add
call
or
ficoms
adc
out
sbb
int3
loopne
and
loop
lahf
call
call
les
dec
pusha
aaa
mov
daa
xor
or
data16
mov
movb
pusha
out
repnz
or
mov
pop
daa
dec
stc
adc
mov
push
lods
pop
outsl
jecxz
ds
in
push
pop
push
mov
nop
bound
rol
mov
cli
xchg
jno
dec
lods
decl
jle
movsb
jp
fs
sub
je
loopne
lods
pop
iret
cmp
dec
xor
inc
es
and
test
iret
dec
fnstenv
and
addr16
fwait
addr16
std
cmp
sub
cmp
es
xor
rcrl
or
imul
lret
stos
add
dec
repnz
dec
test
and
sub
mov
xchg
jne
aas
lock
pop
jle
lods
mov
in
adc
int3
push
cmpsl
mov
xor
mov
std
sahf
pop
push
stc
subb
cmp
daa
sub
sbb
cltd
adc
lea
popf
pushf
cld
dec
imul
mov
imul
out
mov
push
loopne
sub
into
xchg
sarl
sbb
jg
popa
std
mov
pop
xor
pop
test
xchg
lahf
jmp
pop
mov
xchg
xor
test
sub
test
hlt
aam
cmp
xor
mov
pushf
dec
fisubl
inc
nop
fadd
out
roll
cmp
mov
pop
jg
adc
cltd
sub
xor
fwait
xor
or
pushf
pop
mov
pop
popf
xchg
pop
mov
cmpsb
leave
pop
in
mov
in
or
cmp
lahf
ss
sbb
fnsave
loopne
int
lcall
loop
dec
das
mov
cmp
pop
sub
js
mov
mov
dec
test
xchg
ss
int
and
dec
insb
dec
push
shll
jmp
xchg
xchg
idivl
cs
jmp
xchg
xchg
insl
lret
imul
push
fisttps
add
jne
mov
lret
pusha
mov
popf
stos
mov
mov
out
push
in
push
daa
shrb
xchg
loop
pushf
out
popa
sub
cmp
xchg
inc
cli
nop
dec
push
jge
cmpsb
and
out
or
dec
xor
enter
jne
pop
xor
adc
cmpsl
push
adc
jmp
ljmp
inc
scas
dec
negl
jb
xchg
icebp
lret
cli
push
xor
pushf
cwtl
lds
ret
rcrl
or
cmp
movsb
fcomip
lcall
push
outsb
push
xor
jns
xchg
sbb
dec
and
std
ret
into
ds
int3
push
mov
sbb
or
xlat
fwait
push
fildll
leave
insl
xchg
jmp
push
sbb
push
add
mov
leave
or
cs
bound
ss
pusha
mov
cmp
hlt
push
jo
mov
aaa
fs
mov
adc
aam
stos
push
push
jb
cmp
sub
pop
jmp
push
sub
sub
pop
cmpsl
cld
inc
ja
adc
pop
pop
mov
stos
cs
stos
jl
shl
add
adc
lods
xchg
mov
pusha
pop
test
and
and
xlat
add
cmp
cmpsb
ljmp
in
jecxz
or
jecxz
xor
mov
movsl
notb
andl
xor
out
pop
pop
imul
call
sahf
popa
inc
sbb
pop
add
frndint
cmp
mov
cmp
sahf
stos
sbb
fnstsw
fcoms
lea
xchg
xchg
mov
mov
and
and
push
adc
or
dec
mov
adc
gs
sub
enter
jecxz
mov
aam
mov
or
adc
out
xchg
out
xchg
and
adc
insb
push
xor
add
nop
cmp
and
out
in
sti
aas
jno
iret
dec
xchg
in
stc
add
mov
fs
add
insb
push
cmp
je
rorb
pop
rol
or
outsl
mov
mov
xor
cmp
mov
stos
les
or
mov
xor
add
jmp
cmp
or
dec
iret
adc
sbb
inc
out
cmc
divb
rcrl
insb
inc
sahf
out
push
mov
outsl
ret
in
dec
in
btr
sub
iret
in
cmpsl
cld
lret
cmp
xor
adc
loop
in
jmp
dec
pop
push
dec
adc
pop
in
cmp
xchg
movl
push
dec
rclb
jae
lret
mov
inc
xchg
roll
xor
pop
popa
fisttpll
pop
icebp
lods
jno
push
stos
das
sub
adcl
daa
or
and
in
out
loopne
jns
mov
adc
jo
out
xor
cwtl
test
popf
push
mov
add
mov
imul
je
cmp
nop
mov
ds
in
mov
mov
sub
xchg
jb
mov
outsl
ficomps
insb
std
cltd
and
adcl
ljmp
gs
sub
mov
pop
push
add
je
sub
and
ja
add
pop
cmc
sub
inc
jb
repnz
mov
imul
inc
and
push
xchg
pop
mov
xchg
adc
push
mov
push
or
gs
mov
fs
popa
and
lods
or
dec
mov
cmp
inc
mov
dec
movsb
and
mov
fidivrl
out
xor
add
and
roll
mov
xchg
jno
int3
xlat
adc
int3
rcl
cli
mov
mov
sarb
arpl
dec
bound
dec
cmp
ret
push
jecxz
es
pop
xor
mov
hlt
iret
and
mov
push
xor
lret
std
aam
dec
data16
rcl
es
or
cmpsl
faddl
push
jns
mov
imul
fcmovne
and
xchg
pushf
repz
jp
pop
jb
push
mov
or
repz
lret
dec
add
insb
in
stos
cli
out
xor
movsb
mov
ss
jg
dec
enter
mov
and
and
and
imul
mov
inc
xchg
pusha
aaa
adcl
fwait
jb
cmp
or
or
xchg
jmp
imul
stos
btcl
mov
es
sub
out
jecxz
mov
adc
stc
jb
jbe
xor
add
adc
and
adc
jmp
pop
mov
push
cmp
rorl
pop
sub
xchg
testl
incb
mov
sbb
insl
daa
loopne
inc
dec
punpcklbw
ror
test
sub
jo
push
and
pop
pushf
xchg
fdiv
lds
xchg
and
inc
and
mov
push
clc
xchg
loope
loop
mov
repz
sbb
ja
jge
sbb
add
lret
mov
pop
or
cwtl
gs
int
xor
outsl
cmpsb
outsl
mov
lcall
test
rolb
bound
cmp
call
scas
jne
mov
outsl
mov
add
and
jnp
cmpsl
mov
es
sbb
cld
add
or
push
cmpsb
test
enter
jb
dec
push
push
xor
shrl
out
mov
sahf
or
std
nop
add
xchg
cmp
fnstsw
call
pop
dec
sub
xchg
pop
mov
adc
mov
xchg
push
cltd
test
fcompl
inc
push
clc
repz
and
movsb
jno
pusha
push
and
inc
mov
call
push
lock
jl
xor
push
or
enter
sub
jno,pt
mov
dec
mov
cmp
push
inc
aam
pop
fildl
out
je
mov
ja
inc
sbb
xor
orl
imul
push
mov
ret
cmp
pop
adc
addr16
add
push
xchg
inc
hlt
rorb
icebp
fists
mov
sbb
in
outsb
and
stc
xchg
sti
int3
loope
bound
rcll
push
or
rcll
aaa
aas
mov
lods
ret
leave
cmp
cmp
scas
adcb
add
roll
sbb
lods
nop
arpl
jmp
cs
sub
jae
inc
dec
scas
rcrb
jno
and
rol
gs
hlt
sbbb
fildl
dec
inc
xor
add
repnz
push
jmp
push
mov
out
xchg
clc
push
lds
dec
pop
cli
or
push
daa
push
inc
add
shll
gs
jp
sbbl
or
movsl
int3
fisttpl
testl
test
subb
inc
cmp
inc
adc
les
lods
aaa
lods
repnz
mov
mov
in
cmp
mov
jg
dec
loopne
adc
lea
ljmp
xchg
mov
push
testb
scas
lcall
sbb
lods
cmovb
and
andl
add
out
aam
mov
adc
or
dec
xor
or
jge
ja
mov
sbb
push
inc
and
lret
in
or
xchg
test
or
mov
mov
sti
fcoms
or
in
or
push
js
cmp
aaa
adc
hlt
movsb
icebp
sub
iret
roll
inc
push
ret
adc
aas
iret
pop
stos
lahf
xor
in
cwtl
fimuls
jge
in
sub
pop
sarl
sarb
sub
loop,pn
insb
stos
xor
scas
mov
inc
fcomp
push
aad
xchg
fistps
pop
jl
out
mov
js
xor
fsubrp
mov
pop
jns
popf
and
out
stc
cmp
dec
jl
add
andl
test
mov
xor
add
pushf
aam
inc
insl
and
push
pop
out
aad
mov
and
mov
inc
dec
outsb
popa
mov
inc
out
jp
nop
jmp
dec
loopne
mov
es
push
lahf
jno
jne
pusha
test
adc
in
xlat
jne
iret
or
fcmove
addr16
outsl
mov
into
lcall
test
mov
pushf
adc
mov
mov
jo
jp
push
into
jg
mov
xchg
sub
scas
fistps
inc
sahf
add
xchg
movsb
insb
out
jle
clc
sub
es
lods
mov
mov
arpl
xor
cmp
mov
fildl
sahf
sub
das
mov
jg
in
sti
cmp
push
fcoml
js
pop
rorl
cmpsl
jbe
popa
lcall
leave
imul
icebp
mov
push
xlat
div
mov
fwait
inc
or
aas
jmp
mov
rorl
add
xor
xchg
xchg
push
add
stos
xor
cmpsb
mov
mov
ss
cltd
xor
adc
int3
orb
xor
mov
sub
xchg
loope
call
xor
dec
or
jl
fdivrs
into
sub
jo
mov
sbb
out
mov
push
loopne
xlat
mov
inc
imul
imul
mov
ljmp
and
or
iret
stc
inc
adc
ficoml
xchg
cmpsb
add
lret
xor
scas
aad
pushf
mov
daa
xor
ss
mov
pop
mov
sbb
mov
xor
stos
mov
sahf
loop
daa
adc
xchg
aam
arpl
or
xor
not
and
sti
mov
cmp
lods
push
push
jbe
inc
sub
push
jl
data16
adc
dec
mov
in
pop
and
lods
out
cmp
and
fistpl
xchg
pop
mov
test
pop
aad
push
and
add
mov
insb
out
ljmp
fdivr
mov
pop
xchg
mov
fistpll
xchg
cmp
dec
push
ljmp
das
into
je
mov
std
test
gs
mov
ljmp
in
cmp
xor
pop
push
lods
int
gs
in
fnstenv
out
push
dec
scas
pop
scas
lcall
mov
mov
cld
leave
dec
jecxz
sub
cltd
jne
xchg
sub
cmpsb
dec
lock
push
outsl
mov
movsb
or
aad
shll
cwtl
push
movsl
sti
les
or
and
mov
add
ljmp
ficomps
jno
pop
test
jnp
jp
aad
adc
and
out
cli
icebp
lahf
jle
cmpsl
add
loopne
sbb
cmp
addr16
push
or
ret
mov
arpl
jge
lret
ja
fucomip
sbb
jb
movsl
movb
and
std
mov
cwtl
mov
ficompl
or
mov
fstps
negl
sub
aas
sbb
xor
ret
mov
mov
lock
xchg
inc
inc
jbe
cmc
mov
jo
sar
sbb
lods
shr
pop
scas
add
sbb
sub
sti
icebp
stc
hlt
sub
pop
xchg
cmp
add
negb
jns
cwtl
mov
dec
outsl
add
mov
or
leave
inc
movsb
sub
or
int
inc
mov
aad
pop
int3
xchg
aaa
jb
lahf
dec
and
and
sti
lock
pop
in
dec
clc
clc
sub
cltd
insb
sbb
xor
dec
sub
ds
dec
dec
xchg
inc
pop
testb
lcall
lods
lahf
scas
stc
lcall
ret
jns
into
int
loopne
cmc
out
sbb
ror
in
in
mov
jmp
xorl
stos
stos
mov
std
jmp
and
js
cmp
iret
xchg
add
shlb
cmpsb
jp
iret
push
mov
dec
out
jb
sbb
pusha
and
dec
xchg
aaa
fwait
stos
cwtl
ds
fwait
xchg
std
lods
push
sub
enter
jbe
sub
jl
lret
outsb
dec
jb
insb
out
dec
inc
sbb
add
pop
and
add
stos
add
cltd
and
xor
jae
fs
cmp
add
repnz
cld
dec
xchg
loope
loope
jge
jne
loop
int
sbb
idivb
lds
and
sub
pop
bnd
mov
mov
cs
out
cmp
mov
lahf
dec
adc
jge
push
inc
push
adc
inc
rclb
add
or
add
ds
adc
orl
fstps
fisubrs
imul
and
out
int
jecxz
and
imul
xchg
imul
lcall
and
sbb
add
pushf
push
fdivs
testl
sbb
xor
jg
mov
je
mov
in
je
lcall
cld
dec
jnp
push
push
jl
and
insb
mov
ljmp
jmp
popa
sub
cmp
mov
stos
mov
inc
scas
cmc
orb
jecxz
cmpsb
mov
addr16
sub
and
jne
aaa
repz
sub
or
ret
pop
inc
mov
add
scas
inc
lods
push
push
insl
ljmp
mov
add
ret
inc
jae
add
test
je
js
pause
popf
push
mov
pop
nop
mov
add
mov
aaa
aaa
cli
stc
cmpsb
cmp
nop
push
cs
or
lock
ljmp
jecxz
and
les
jne
jae
loopne
shr
out
sub
add
jecxz
sbb
pop
rcrl
sub
add
arpl
bound
aad
dec
xor
negb
mov
cmp
jle
jbe
cmp
aaa
mov
push
mov
xor
pop
int
scas
iret
jl
xor
nop
lods
jl
inc
push
or
imul
or
mov
adc
std
jae
jns
xchg
inc
nop
and
pop
or
lock
xor
cs
adc
mov
popa
push
aaa
repnz
sbb
lret
sub
loopne
fiadds
sbb
fldt
cmpsl
add
jno
mov
pushf
xor
negl
ljmp
push
pop
pop
aas
and
jmp
xchg
jns
adc
dec
jp
dec
mov
xlat
xchg
adc
or
in
adc
dec
sub
enter
or
pop
sbb
and
and
mov
fists
sbb
inc
ss
xchg
push
adc
inc
sbb
xor
pusha
aas
fists
jp
loope
pop
cmc
test
or
mov
add
ret
or
loopne
mov
cmpsb
and
pop
in
sbb
add
fisubrs
fnclex
pop
pop
mov
shlb
adc
push
incl
pop
push
clc
lods
bound
lcall
outsl
mov
popf
push
ficoml
loop
das
mov
in
aaa
push
mov
mov
clc
daa
out
popa
rorb
ficoml
icebp
sti
scas
and
das
mov
mov
loopne
ret
xor
cmp
mov
es
add
and
test
push
push
add
inc
jecxz
je
sbb
push
nop
ja
outsb
iret
push
ja
xchg
jp
int3
and
es
add
cld
aas
insl
bound
and
test
mov
imul
in
sbb
filds
daa
gs
or
mov
mov
js
pushf
cmp
outsl
data16
test
repnz
push
icebp
mov
push
adc
and
stos
push
jo
iret
pop
cs
in
bound
sub
dec
or
fwait
test
addr16
icebp
insb
int3
push
add
enter
inc
sbb
addr16
leave
xchg
js
ja
leave
add
int
jecxz
push
out
push
jne
xor
cmpsb
iret
data16
and
pop
mov
mov
jmp
iret
sub
stos
scas
push
cmp
xchg
in
les
repz
repnz
rolb
bound
adc
out
js
hlt
push
mov
test
and
lock
lock
dec
inc
mov
cltd
sbb
push
sub
adc
adc
into
push
jmp
inc
mov
ss
jmp
inc
add
hlt
movsb
cmp
and
lcall
popa
jl
jmp
jo
mov
cli
dec
cmc
jmp
out
pop
loopne
mov
aad
mov
ja
addr16
cmpsl
sti
or
pop
sti
mov
decl
cmc
mov
stc
adc
lods
xchg
lret
pop
mov
pusha
sbb
or
bound
dec
daa
inc
lds
addb
movl
bound
out
mov
cmp
add
ror
mov
dec
adc
into
lds
lods
mov
repz
xchg
mov
ljmp
push
adc
mov
inc
mov
dec
xor
sbb
or
xchg
mov
imul
or
xor
icebp
add
mov
jo
fcompl
xlat
fcoml
loope
psrlq
inc
lea
adc
nop
adc
outsb
sti
ret
imul
inc
popa
mov
push
hlt
pop
loop
outsl
nop
mov
ljmp
jb
mov
sub
mov
cwtl
inc
imul
xchg
jle
or
rcl
xlat
into
sbb
daa
or
jbe
jno
sub
es
xor
aaa
mov
jecxz
or
fadd
jae
mov
in
outsl
jb
stos
out
jae
mov
pop
xchg
pop
ss
mov
notb
push
push
or
pusha
pop
rcrl
fwait
pop
inc
mov
or
cmp
or
sbb
adc
dec
mov
xor
inc
push
rclb
xchg
les
cmp
lahf
out
xor
leave
lahf
dec
je
orl
loopne
pop
fbstp
mov
call
insl
add
pop
cmp
mov
push
and
add
loop
popa
pop
std
sbb
andb
jo
sahf
dec
repnz
out
inc
cltd
cmp
in
out
pop
jb
in
outsb
mov
xlat
pushf
fldt
in
aaa
xchg
add
sbb
mov
dec
adc
inc
xchg
sbb
dec
inc
or
stc
inc
lds
shrl
mov
lock
dec
add
sbb
divl
dec
mov
sub
enter
aam
add
out
pop
mov
push
xor
mov
mov
popa
push
push
add
fistpl
xchg
inc
lock
xchg
push
sti
test
sahf
dec
mov
mov
or
int3
add
mov
mov
insb
push
les
in
mov
rcrb
and
leave
adc
insb
push
sbb
mov
sbb
xchg
and
fcompl
cmp
mov
inc
pop
arpl
sbb
mull
pop
and
test
subl
jle
call
mov
cmpsb
sbb
bound
adc
gs
or
mov
jmp
insb
out
sub
pop
cmp
dec
sub
subl
fstl
pop
sahf
dec
fistpll
in
mov
mov
cli
pop
add
mov
js
xor
cmp
inc
xor
outsl
dec
mov
add
addr16
sbb
pop
cltd
xchg
psadbw
sti
add
push
sub
lea
jbe
pusha
sbb
fiaddl
std
pop
mov
shll
and
dec
inc
mov
sbb
repz
pop
ds
flds
insb
push
rep
dec
or
dec
dec
lcall
stos
mov
repz
in
sbb
fistl
or
pop
and
pop
inc
bound
push
stc
test
xchg
xchg
sub
fsub
hlt
or
inc
inc
cld
fdiv
cli
jb
and
or
aaa
movsb
ficoms
dec
sub
aad
lds
jns
inc
lock
sub
inc
xchg
dec
in
out
add
enter
cmp
and
lods
jl
sbb
ds
adc
dec
orl
repnz
add
aas
adc
jno
divl
dec
mov
sarl
sub
arpl
pop
xor
cwtl
ljmp
push
fsubrl
outsl
jg
push
pop
rclb
mov
subl
pop
test
dec
mov
mov
sub
scas
inc
pop
fildll
and
push
push
iret
cmp
cld
ja
daa
push
imul
scas
lock
dec
pop
add
pop
push
xchg
and
sub
jnp
jmp
les
cli
jecxz
lds
aam
add
xchg
push
xchg
scas
inc
cs
icebp
sbb
add
sbb
pop
inc
bound
mov
jp
popl
imul
and
push
or
add
fistpll
push
jb
xchg
jno
mov
xchg
call
not
adc
mov
std
scas
jl
sub
adc
fwait
jnp
addr16
mov
and
dec
aam
push
and
xlat
pushw
test
cmp
push
movsl
es
dec
jge
iret
ret
fdivrl
mov
and
xchg
adc
hlt
add
xchg
arpl
xchg
mov
xor
cmp
jno
or
xchg
pop
pop
out
push
jp
mov
fisubl
push
cmpsb
xchg
inc
popf
out
pushf
addb
xchg
lret
jo
stc
in
or
cmp
cmc
int3
aam
ret
data16
push
adc
mov
adc
cmp
pop
out
jne
sbb
dec
sahf
loope
cmp
jmp
into
sbb
fsubl
cmpb
jecxz
sarl
jmp
push
addr16
push
shufps
lret
mov
inc
fsubl
aam
pop
lret
stos
push
cmp
ds
ror
push
mov
insl
xchg
mov
cs
jmp
clc
mov
mov
xor
inc
js
sub
push
aam
sbb
pop
mov
adc
sbb
and
cmpsl
loope
lods
sar
leave
or
test
sahf
test
sbb
jnp
fimull
cli
cmp
mov
add
in
mov
mov
pop
aaa
stc
inc
mov
and
jg
xor
aam
scas
lret
lds
mov
sub
loop
jp
lock
sbb
or
scas
ret
pop
mov
fs
and
sbb
in
add
mov
sub
sbb
mov
lds
fs
inc
cwtl
jge
adc
xor
fs
push
cmpsb
mov
cmp
add
ljmp
bound
sub
ja
jae
jmp
xor
iret
imul
add
imul
sti
incl
adc
mov
nop
push
mov
xor
pop
add
stos
and
mov
inc
out
js
push
dec
loope
cmp
or
subb
inc
rcr
pcmpeqw
loope
mov
movsl
scas
mov
jg
sahf
inc
stc
pushw
jmp
lods
cmpsl
sub
mov
ret
loopne
cmc
shll
outsb
pop
mov
aas
scas
cli
dec
in
addr16
add
add
aam
xor
addb
stos
outsl
xlat
dec
fidivs
ret
cmp
jecxz
imul
mov
lret
xlat
xchg
xchg
loop
mov
push
push
push
and
in
xor
adc
jno
jge
mov
pop
adcl
dec
add
pop
notl
pusha
clc
sub
cmp
das
and
sub
popf
or
pushf
cmp
push
dec
jns
cmpb
push
mov
xchg
loopne
fs
cltd
xchg
dec
imulb
adc
js
mov
mov
das
sbb
shll
inc
cmp
addr16
hlt
sub
and
jb
popf
incb
int3
cli
jb
xchg
aaa
enter
or
orb
adc
mov
lea
jmp
fwait
cmp
in
fidivs
mov
lgdtl
xor
mov
fmull
jmp
enter
outsl
repz
dec
fisttpll
pop
jno
cltd
outsl
sbb
push
aad
cltd
ret
pop
inc
sbb
xchg
gs
dec
out
and
test
xchg
movl
jno
cmp
lea
inc
push
movsb
ja
sbb
push
addl
scas
in
pop
cwtl
insl
insb
ret
out
push
dec
xorb
push
into
loopne
adc
push
and
mov
sbbb
dec
push
xchg
iret
push
imul
aas
movsb
outsl
fldt
mov
mov
int
jne
fldln2
xor
and
into
push
adc
mov
std
outsb
mov
pop
mov
sub
sti
and
xor
ds
adc
mov
dec
out
shrb
rorl
mov
add
shrb
mov
add
sub
push
mov
mov
shll
ret
and
imul
jno
out
jg
int3
lods
add
popf
mov
lahf
sti
inc
cld
pop
pop
enter
xchg
jge,pn
pop
fsin
push
mov
adc
and
xchg
loope
loop
les
pop
iret
jmp
mov
or
iret
push
mov
loope
pop
or
call
fsubrs
pop
pop
test
jg
jge
test
outsb
insl
xchg
shr
das
test
or
push
mov
js
push
xor
in
movsl
jp
stos
and
push
jnp
rcr
jne
dec
int
ret
push
pop
sbbb
jecxz
xchg
je
je
popf
cmp
es
mov
outsb
cmpsl
xchg
sub
inc
jmp
out
lock
xorb
push
das
insl
cmpsb
jl
sbb
ret
dec
xchg
int
jg
ret
or
out
sub
inc
enter
push
in
cmpsl
lret
sub
ljmp
icebp
add
mov
insl
imul
add
enter
xchg
sub
adc
inc
shl
jnp
mov
ja
and
dec
and
dec
pop
flds
sub
xchg
cwtl
ss
shll
mov
mov
fdivrs
sub
repz
inc
push
and
mov
scas
sub
aaa
add
test
dec
push
repz
mov
test
xchg
fiaddl
sub
ja
jmp
xchg
repnz
outsl
cmp
xchg
arpl
add
fildl
xchg
mov
mov
push
flds
xchg
rorb
inc
mov
and
ret
jge
and
sbb
daa
cmc
stos
fcompl
xchg
cwtl
shl
mov
mov
push
cmpsl
stos
xchg
sahf
xlat
pusha
mov
sahf
stos
pop
icebp
sub
das
and
lds
xchg
inc
loopne
sbb
push
xchg
shlb
push
sbb
ja
jns
aas
lock
test
mov
xor
loopne
in
cmp
adc
adc
repz
xlat
sub
xor
into
mov
shl
rcr
sub
flds
add
pop
hlt
pop
int
mov
sbb
imul
ret
xchg
js
pop
lods
add
inc
xor
test
sbb
mov
xchg
outsb
and
mov
sbb
into
jae
pop
je
push
out
cmp
sahf
jns
sahf
shlb
fidivrs
cmc
and
mov
adc
cmp
jecxz
sbb
jecxz
and
jb
jmp
lods
xor
and
dec
aas
mov
divl
pop
in
cmp
arpl
mov
sub
push
repnz
sbb
xlat
pop
out
mov
jbe
sti
dec
pop
add
sbb
cltd
dec
jge
inc
cmpsl
leave
outsb
rcrb
add
mov
ret
push
jge
inc
in
mov
enter
dec
jno
enter
sub
aas
sub
fs
or
popl
sbb
je
or
pop
jle
xchg
fucom
and
cmc
xchg
xchg
js
loop
adc
and
lahf
clc
pop
xchg
orb
scas
pop
cli
js
rol
xchg
xor
xchg
sbb
jl
test
adc
jg
cmc
mov
xor
ds
push
sbb
jmp
mov
test
cmp
jno
test
cmp
les
sti
inc
or
mov
mov
or
push
in
lea
mov
push
out
jo
xchg
or
push
sub
sahf
xchg
sbbb
loopne
dec
adc
sbb
push
sub
arpl
and
xchg
lcall
jb
cwtl
adc
popa
lahf
sub
jbe
xor
in
mov
cltd
inc
mov
jne
cld
ret
mov
std
dec
arpl
leave
ss
insl
scas
mov
and
mov
call
jb
div
adc
fmulp
mov
dec
pop
pop
mov
es
jle
jbe
mov
aam
sbb
inc
loope
pop
data16
nop
push
mov
push
ret
mov
sbb
xchg
icebp
or
mov
lods
adc
mov
fxch
cltd
dec
aam
jp
adc
movsb
push
es
scas
jnp
adc
repz
or
mov
push
lock
jp
scas
test
mov
decl
in
pop
cmpsb
leave
sub
cld
ret
outsb
adc
push
lods
push
sub
push
in
lahf
xor
aam
stc
cli
lcall
cmp
frstor
popf
sbb
cmp
aam
shll
sti
push
pop
inc
ds
lret
mov
stc
mov
push
mov
adc
int
adcb
popf
cmpsb
mov
jns
test
cmp
dec
xlat
adc
push
xchg
rclb
call
lods
fsubr
test
pop
arpl
out
cmp
lods
or
dec
jecxz
mov
dec
loope
jo
jle
sub
flds
lods
in
push
pop
cwtl
cld
jb
mov
jecxz
stos
int
add
ror
pop
insl
jae
jg
fisttpl
jo
das
jl
aad
mov
in
xorb
push
ret
mov
stos
loop
lds
push
in
mov
cmp
or
repnz
pop
ret
fisttpll
arpl
not
fcmovbe
scas
sbb
arpl
jns
xchg
sub
pusha
jbe
pop
xor
test
outsl
or
add
xor
fsubr
hlt
hlt
dec
sbb
add
add
jns
out
cs
loop
xchg
jne
cmp
dec
fbstp
lcall
aad
xor
dec
and
and
mov
mov
and
cmp
outsb
pop
test
imul
push
insb
add
call
push
dec
dec
jmp
adc
decl
scas
dec
jb
xor
fnstcw
xchg
sub
fwait
cmp
dec
jae
out
mov
push
sti
xor
shl
daa
enter
push
mov
pop
loopne
pop
mov
iret
xchg
cld
push
mov
js
fs
and
hlt
inc
dec
stos
and
aas
sarl
dec
rcrb
mov
jmp
jl
sbb
cwtl
ret
sbb
mov
mov
mov
jb
xor
js
and
in
or
dec
adc
inc
cmp
mov
ss
out
push
int3
sbb
ljmp
and
dec
pop
and
push
mov
jae
jmp
outsb
ficomps
jecxz
and
mov
sub
ljmp
shl
pop
push
push
mov
pop
dec
sti
imul
push
jmp
outsb
popa
int
push
pop
insb
dec
or
xchg
cs
leave
push
add
pop
nop
cltd
xchg
pop
sti
cmp
je
int
out
faddl
xor
jge
cmpsb
loope
rcrb
stc
mov
lock
les
adc
ss
add
cld
push
or
mov
cmp
mov
or
xor
mov
or
arpl
fidivrs
test
sub
jbe
jp
xchg
xchg
cmp
ret
dec
mov
rcrb
sub
mov
pop
icebp
rorl
push
sbb
dec
cmp
sub
std
dec
sbb
cs
push
mov
cld
orl
inc
xor
mov
stos
scas
insb
pop
mov
into
nop
out
cli
lcall
cmp
fs
aaa
jo
dec
imul
icebp
add
xchg
inc
ds
std
mov
fxch
mov
xchg
push
test
out
mov
loope
sbb
in
mov
rcrl
gs
pop
lret
stos
loope
cmp
xlat
and
cld
and
push
adc
mov
or
jp
call
subb
pushf
push
rorb
outsb
data16
push
outsl
es
xchg
dec
adc
pop
cltd
mov
imul
test
xlat
nopl
je
imul
aas
push
add
and
aas
mov
mov
cld
and
pushf
inc
mov
add
sub
cmpsl
bound
jge
pusha
test
test
callw
adc
push
cmp
iret
mov
repnz
cmpsb
outsl
cmp
dec
sbbb
xchg
popa
xchg
sub
lock
aam
fs
psubsb
cmp
insl
fildll
xor
xchg
mov
scas
mov
lods
je
and
jecxz
rcll
cmp
repz
lods
arpl
pop
lock
sarb
aad
add
stos
daa
adc
xor
adc
sarl
popa
cli
mov
mov
out
imul
pop
pop
insb
push
sahf
sub
aam
stos
push
lds
lret
mov
or
mov
mov
repnz
testl
mov
fwait
inc
sub
jecxz
push
push
push
add
cli
fistps
lret
mov
mov
cmp
add
dec
add
cli
push
les
mov
pop
and
dec
cs
push
les
cmpsl
sarl
and
stc
clc
cmp
jmp
lods
pusha
jo
das
sbbb
mov
dec
mov
loope
inc
xchg
and
add
imul
mov
mov
sub
mov
popf
outsb
adc
add
mov
or
sarl
scas
popa
das
test
xchg
dec
aam
mov
test
int3
ss
cld
mov
xor
add
xor
sbb
cmp
sbb
pop
testb
adc
mov
sti
scas
ds
ljmp
loop
adc
in
popf
cmp
pop
hlt
push
adc
fistps
jb
icebp
inc
sbb
xor
pushf
out
mov
mov
xchg
dec
dec
jo
sbb
xor
xchg
insl
and
add
mov
pop
mov
mov
jp
sbb
dec
xor
cmp
leavew
cld
or
icebp
xchg
lods
inc
cmp
and
sbb
jmp
les
sbb
pop
jecxz
fistps
mov
hlt
or
repz
outsl
mov
adc
sbb
inc
sbb
out
fsts
lods
call
inc
pop
in
dec
inc
cld
incl
lret
clc
xchg
push
jp
pop
dec
mov
mov
sbb
addb
jo
or
cmpsb
adc
lds
arpl
jns
adc
cli
call
adc
push
lret
adc
pop
push
push
imulb
adc
cmpsb
push
dec
pop
jp
push
xor
jl
push
jecxz
popa
cmpsl
jne
pop
mov
pushf
std
stos
orb
das
jne
or
push
repnz
stos
cmp
xchg
neg
add
pop
mov
xor
add
movsb
lds
popa
inc
push
cmpsl
jecxz
nop
out
hlt
xor
adc
shll
rcll
sbb
pop
sbb
cld
pop
scas
xlat
lcall
shll
repnz
outsb
lods
mov
fcomps
loopne
add
add
in
cli
mov
pop
sarb
add
lahf
xchg
xchg
mov
xor
xor
jg
xor
xor
aas
movsl
cmp
xor
stc
into
cmpsl
adc
lret
pop
aad
flds
pop
leave
aam
lods
mov
test
cmc
sub
frstor
cmp
push
mov
stc
mov
pop
sbb
dec
shl
ja
dec
mov
or
pop
lret
nop
outsl
cltd
movsl
and
cmp
xlat
jmp
fistl
in
dec
mov
pop
sub
cwtl
sub
cmpsl
jo
lea
mov
and
or
in
mov
sbb
daa
xchg
stos
loop
loopne
pop
pop
gs
xor
inc
or
rorl
add
dec
push
in
lods
clc
push
aad
test
inc
addb
dec
movsl
repz
imul
sub
push
xlat
mov
mov
fwait
into
cmpsb
or
sti
mov
xchg
dec
xlat
or
js
adc
add
orl
sbb
mov
std
je
ds
mov
pop
sub
cmc
cmc
pop
or
je
ret
jp
cwtl
mov
sbb
push
jg
add
into
adc
push
sbb
mov
push
dec
mov
sbb
sub
popf
cmp
rorl
fld
fwait
jns
cli
addr16
mov
inc
add
ss
pop
sub
mov
and
flds
pop
sub
mov
popa
add
idiv
push
pop
cwtl
hlt
jge
mov
sbb
imul
jl
pop
int3
and
arpl
fidivrl
cmp
aad
cmpsb
xlat
loopw
mov
test
adc
add
not
sbb
icebp
sbb
push
std
movsl
pop
push
push
jae
loop
fldcw
cmp
push
insl
scas
inc
aam
stos
sbb
lret
stos
mov
lock
inc
nop
xchg
das
in
fcmove
push
adc
movl
sbb
repz
fdivs
add
in
enter
clc
out
cli
push
mov
jns
xchg
aam
sub
lods
xor
sahf
push
jae
test
ja
mov
negl
inc
dec
dec
popa
mov
dec
out
out
adc
mov
mov
mov
cmp
inc
lret
into
xchg
inc
mov
enter
in
mov
cltd
inc
shrb
insb
jo
xchg
xor
popa
xchg
lods
or
xorl
fdivrl
test
mov
addr16
scas
or
fdivl
ret
insb
repnz
ss
cmc
xchg
mov
add
push
ljmp
orb
leave
ret
out
xchg
xchg
imul
cmpsl
pop
jg
nop
mov
push
dec
xlat
mov
in
mov
mov
jl
imul
xlat
add
jg,pt
mov
sbb
pop
mov
sbb
xchg
lahf
pusha
dec
movsl
dec
adcb
sbb
lret
cmpsb
jo
jl
mov
pop
scas
mov
sbb
push
sub
mov
cmp
cwtl
inc
sarl
adc
push
inc
push
adc
jbe
jno
push
scas
out
lret
rclb
mov
sub
mov
cltd
dec
stc
mov
out
ret
sbb
hlt
lods
mov
outsb
cmp
add
jl
adc
jmp
iret
fbstp
stos
pop
xchg
lods
imul
lret
imul
xchg
mov
in
push
mov
enter
add
pop
sbb
out
es
pop
popa
fs
and
sbbl
shrb
ds
in
pop
pop
in
and
out
fcmovnb
push
cmp
or
xor
cmpsl
or
mov
filds
dec
stc
lock
mov
test
xor
cmpsl
mov
loop
rorl
add
test
mov
or
mov
cld
sti
jb
xchg
push
frstor
and
sbb
stc
lods
shll
bound
out
test
xor
fwait
and
insl
ret
loopne
jae
sbb
cli
addr16
lock
mov
add
inc
mov
push
sbb
inc
pop
mov
add
icebp
xchg
subb
xchg
mov
faddp
mov
ret
jle
pminsw
mov
pop
pop
in
gs
ret
mov
iret
int3
scas
pop
pop
imul
or
and
fwait
dec
roll
stos
lcall
mov
divb
pop
dec
mov
rorb
mov
fidivl
fstps
mov
cli
mov
mov
adc
mov
nop
and
jge
into
imul
clc
sub
cld
xor
in
jecxz
sbb
and
fisubl
idivb
mov
stc
idivl
sahf
cs
jecxz
cmp
call
xchg
pop
mov
testl
fstpt
dec
and
pop
mov
leave
lock
mov
mov
push
xchg
xchg
ret
cld
sbb
movsb
fildll
adc
fldlg2
ret
mov
jo
jl
mov
mov
mov
test
insb
or
insl
lods
in
and
jle
mov
xor
xchg
xor
jp
je
lods
out
movsb
rcl
lahf
in
repz
inc
cmp
icebp
push
stos
lret
gs
dec
inc
pop
xchg
shlb
mov
aam
daa
push
inc
shll
fidivrs
xor
loop
mov
mov
popf
andl
mov
lds
jg
fistps
push
in
mov
imul
xorb
pop
jp
sub
cmp
jge
adc
mov
push
das
mov
jns
in
cltd
repz
sub
decl
xchg
xchg
cmp
cmp
cmc
fidivl
cvtpi2ps
fldt
lds
lea
test
xchg
jle
mov
add
pop
outsl
sub
jo
data16
je
in
mov
std
xor
loop
or
mov
rcl
push
hlt
out
movsb
xchg
aaa
fidivl
xchg
ss
mov
outsl
sbbl
cmp
insl
mov
mov
call
ljmp
or
mov
lahf
icebp
add
inc
jns
jae
stos
mov
mov
mov
pop
pop
mov
jecxz
or
lahf
loopne
push
mov
adc
jcxz
and
mov
iret
xlat
outsl
stos
mov
pop
jle
jnp
jo
out
jecxz
add
fcomps
mov
xor
cmpsb
sbb
add
inc
je
icebp
pop
into
movsl
cld
cmp
lea
stc
mov
outsb
xor
das
aaa
jno
inc
xchg
shl
pop
mov
jnp
ja
xchg
adc
jb
addl
popa
mov
xor
pusha
jmp
dec
adc
pop
jo
repz
push
dec
mov
push
test
adc
adc
mov
xor
xchg
in
ja
outsb
cmp
adc
mov
stc
pop
clc
pop
scas
sbb
xor
fwait
xchg
xchg
cli
sbb
fistpl
push
dec
xchg
hlt
pop
sti
repnz
add
push
in
push
and
bnd
mov
add
sbb
or
dec
sbb
int3
and
ds
je
push
cwtl
sbb
gs
mov
scas
js
mov
in
mov
das
mov
mov
ds
aad
fdivs
lock
sbb
fists
psrld
push
pop
or
mov
hlt
adc
insb
int3
mov
fiaddl
cwtl
and
aaa
xor
insl
sbb
fisttpll
jge
pop
scas
pop
leave
xchg
filds
insb
xor
inc
sub
sub
movsl
sbb
push
scas
pop
fidivrl
pop
fwait
orb
adc
out
fiadds
in
mov
enter
mov
scas
shll
repnz
cmp
xchg
dec
loope
lret
jecxz
sbb
sub
fstpl
and
mov
lret
lods
test
mov
pop
mov
jl
rcl
pusha
cmovp
jbe
pop
stos
mov
lods
stc
cmp
sahf
popa
xor
fistl
movsb
xor
jnp
in
in
daa
orb
adc
in
mulb
add
and
mov
xchg
gs
stos
aaa
lret
outsl
xchg
push
dec
scas
imul
sti
je
sbb
lds
push
sahf
xorl
in
in
dec
in
hlt
xchg
jecxz
push
push
sarb
sub
stos
aad
dec
ret
pop
cmc
shrb
sbb
adc
fstps
mov
addr16
jg
mov
into
mov
jecxz
aam
pop
and
xor
faddl
in
aaa
imul
leave
or
lret
hlt
push
icebp
push
mov
fstpt
daa
cmpl
push
loope
stos
movsb
jbe
lea
and
sahf
inc
pushf
mov
pop
cmpb
aam
sahf
xchg
inc
dec
push
lods
add
sbb
xchg
cmc
xchg
xchg
adc
xchg
push
jne
test
clc
bound
cmpsl
adc
int3
test
mov
sbb
cmpl
sbb
add
divl
push
xchg
stos
mov
ss
loope
adc
push
add
jnp
andb
jecxz
mov
add
mov
and
add
fcmovnb
push
mov
add
jle
out
aam
cmp
push
inc
jle
lds
lea
ret
pop
stos
adcb
mov
lds
pop
outsb
jmp
jns
sbb
sti
loopne
ret
mov
dec
fnstcw
js
push
xorl
sbb
daa
pop
jmp
dec
popa
mov
pop
jmp
pushf
loop
call
or
arpl
ret
sub
adc
les
sub
xchg
ljmp
in
dec
pop
daa
inc
mov
pop
mov
mov
push
inc
push
cwtl
pop
loop
in
sbb
test
push
jae
gs
and
addr16
jb
xchg
push
dec
and
adc
movsl
js
dec
movsl
hlt
inc
cmc
es
pop
push
jb
mov
or
out
mov
and
and
mov
jnp
and
cmp
rclb
mov
dec
xchg
jne
cmpsl
inc
cmp
test
pop
cmc
mov
test
add
mov
test
cwtl
shrb
adc
xchg
adc
in
jge
cli
int3
mov
inc
daa
mov
pop
mov
test
mov
pop
xor
mov
test
jno
inc
mov
xor
es
int3
mov
fcomp
imul
mov
popa
cmpsl
aaa
in
mov
sarb
adc
insb
jne
js
in
adc
cs
push
push
cmpsl
xchg
or
cli
dec
pushl
lock
dec
mov
call
mov
push
sbb
sbb
and
mov
pop
dec
in
iret
hlt
pop
cwtl
dec
xor
mov
jge
adc
test
in
into
js
mov
sub
in
jecxz
inc
push
es
mov
xchg
xor
out
xchg
outsb
dec
cmp
adc
and
loop
or
or
cld
hlt
xchg
and
lock
inc
mov
dec
scas
addb
sub
jecxz
pusha
xor
jne
cmpsl
inc
mov
mov
mov
rep
pop
dec
cmp
xor
shlb
add
repz
push
test
jle
xchg
fstps
std
bound
sub
imul
insb
xor
int
mov
daa
dec
pushf
movsb
sbb
lea
jl
je
loope
mov
mov
or
hlt
sbb
mov
adc
push
pop
lods
dec
hlt
and
fdiv
inc
push
cmp
arpl
push
jo
adc
ja
les
out
mov
dec
push
or
mov
das
aam
xor
shlb
fidivl
mov
mov
cmp
test
out
inc
sahf
or
push
insb
jo
push
js
sbb
mov
insb
jp
cmp
sub
and
test
xor
cmpsl
add
scas
ret
sub
and
pop
jmp
push
dec
scas
cltd
pop
ficoml
xor
jne
sub
cwtl
mov
push
mov
push
add
sbb
mov
inc
sbb
and
jne
cmp
sbb
mov
sbb
mov
mov
shll
mov
jns
sub
data16
add
pop
inc
loope
add
ds
jg
sub
or
xchg
cwtl
dec
or
dec
cmpsl
mov
jl
outsl
xor
in
sar
icebp
dec
daa
sbb
fcomps
in
mov
dec
add
pop
or
jle
cs
outsb
jb
rorl
inc
scas
call
jbe
push
jns
mov
add
sbb
je
jb
fimuls
cmp
add
inc
sub
jp
outsb
js
add
movsl
and
mov
ret
dec
das
xor
ds
push
cmp
adc
mov
orb
movsl
test
pop
stos
cmpsb
add
sti
lret
xor
jnp
mull
push
jp
loopne
ja
pop
pop
push
loope
jmp
out
xlat
mov
adc
sbb
pop
into
mov
inc
jp
dec
das
pop
inc
aaa
xchg
mov
sbb
notb
lcall
popa
mov
lock
scas
sub
enter
inc
sub
and
or
lods
xchg
add
sbb
mov
mov
movups
ret
je
out
aad
stos
dec
cmc
jns
jmp
aam
cld
mov
dec
inc
sbb
rcl
or
pop
mov
push
push
adc
sub
mov
lcall
inc
jmp
mov
xchg
out
add
out
mov
sbb
xchg
mov
mov
cmp
add
mov
adc
data16
mov
mov
mov
subb
and
inc
adc
cld
aad
stos
cmpsl
dec
add
and
cs
rol
jecxz
sarb
jg
rolb
aad
mov
xchg
xchg
insb
add
movl
mov
jae
sub
test
mov
movsb
mov
pop
cli
icebp
dec
mov
or
jne
sbb
cmc
scas
fmul
mov
adc
fwait
inc
call
nop
add
ret
xor
repnz
insb
pop
mov
mov
ds
inc
into
mov
mov
shr
stc
outsl
mov
lret
mov
jb
cmp
daa
insb
mov
mov
pop
xor
add
and
movsb
repnz
pop
out
ret
push
mov
xchg
xchg
push
cmp
pop
xchg
sub
ja
dec
xchg
fwait
xor
test
push
mov
pop
xchg
out
inc
or
mov
push
cmp
sub
or
dec
mov
scas
dec
mov
sub
repz
jo
and
xlat
and
mov
dec
or
out
or
imul
cwtl
sti
out
pop
xchg
push
in
lock
lret
cli
mov
outsl
and
cmpsb
int3
mov
inc
push
sub
xchg
dec
std
ds
xchg
add
movsl
out
push
stos
mov
jl
shr
into
inc
or
or
sbb
pop
cld
sub
adc
ds
clc
loope
xchg
les
aad
mov
mov
inc
cld
cmp
inc
adc
jmp
cmp
in
jle
clc
js
cmp
jbe
jle
testb
ss
jnp
enter
ljmp
push
or
xor
mov
mulb
testl
and
mov
pop
pop
sbb
mov
pop
xor
xchg
fwait
iret
ss
inc
or
pop
or
test
dec
adc
flds
sbb
mov
popa
lret
sbb
mov
leave
andb
mov
mov
je
sub
inc
int3
push
jg
pusha
shl
sub
dec
inc
mov
and
sub
xchg
lods
int
popf
popf
ret
lret
int3
inc
xor
out
mov
push
push
pusha
add
stos
sahf
jne
out
iret
mov
dec
inc
rcl
enter
sbb
jg
arpl
cmpl
push
js
mov
pop
cld
xchg
out
test
fcmove
push
push
cwtl
fnstenv
outsb
mov
icebp
es
push
lret
cmp
daa
mov
ja
repnz
or
je
lret
pop
mov
imul
mov
mov
xchg
mov
sub
fidivrs
dec
out
notb
inc
cmpsl
test
and
stos
and
jl
pop
jb
and
inc
es
adc
add
cmp
push
cs
dec
bound
inc
test
jb
into
les
adc
push
xor
lret
scas
ret
popa
pop
shufps
gs
cmp
jecxz
xor
jmp
mov
jb
jge
or
cmp
cmpsl
insl
in
add
sbb
mov
push
cmp
repz
jo
mov
hlt
loope
xchg
push
cmp
xor
push
in
imul
aaa
jp
lods
dec
mov
cmp
inc
mov
sub
mov
out
pop
movsb
push
push
in
mov
sbb
xor
mov
mov
push
loopne
into
out
or
rorl
xorps
scas
mov
xorb
in
mov
dec
into
lock
scas
js
stos
negl
in
enter
and
push
stc
out
lcall
sbb
cmp
lret
and
mov
adcb
cmp
loop
dec
das
xor
adc
mov
out
daa
fdivrl
lods
adc
pop
leave
je
push
hlt
dec
xlat
insl
xchg
mov
jns
xchg
dec
dec
sub
ret
pusha
push
add
xchg
mov
pop
hlt
test
and
jo
iret
cmp
and
add
push
add
sub
sub
cmp
jp
insb
mov
dec
push
mov
or
call
sbb
xor
jae
in
je
mov
insb
cmp
addr16
xor
mov
inc
pop
fwait
adcb
sbb
or
dec
sbb
adc
add
int
sbbl
imul
outsb
in
mov
jne
jb
fiaddl
cmp
cmp
mov
cmpl
ss
clc
mov
mov
pop
xlat
push
das
cld
mov
pop
and
xchg
mov
mov
mov
add
ljmp
stc
xchg
cmpsb
rorb
or
shll
pop
cld
fucomip
mov
insb
enter
invd
movsb
xchg
dec
sahf
in
push
inc
std
je
fnstcw
out
loopne
inc
push
daa
es
or
mov
inc
leave
cmp
sub
gs
jnp
push
pop
bound
mov
and
es
and
xor
fstpl
mov
or
fdivs
iret
lds
int3
fmull
pop
rorb
mov
aad
fadds
mov
add
sbbl
and
pop
cmc
push
mov
or
and
add
fldt
test
out
jno
inc
gs
cmp
rclb
outsl
imul
add
push
adc
lcall
push
fistpll
and
fstpl
dec
divb
std
sub
adc
push
ret
fidivs
cmp
mov
data16
xchg
repz
lods
stc
rcrl
xor
test
sti
add
sbb
cmp
add
addb
insb
push
sub
pop
cmp
ljmp
pop
xchg
aad
mov
dec
xchg
fmul
sub
fsts
push
lret
insl
roll
arpl
or
fldcw
cltd
lea
push
mov
insl
into
pop
inc
sub
clc
dec
jbe
imul
and
pop
jg
push
mov
or
call
aam
daa
xor
adc
les
jecxz
ss
fcmovb
mov
xchg
rol
cli
fwait
jne
pop
movsb
mov
shll
jnp
mov
add
jmp
shrl
cmp
addr16
xor
pusha
jns
xor
jbe
popa
andl
adc
lret
rorl
sbb
adc
jg
cltd
adc
add
or
fldl
and
in
mov
cli
lds
adc
xchg
rcrl
stos
xor
sbb
mov
loop
dec
jp
sbb
mov
push
inc
push
xchg
pusha
and
jge
push
sbb
mov
add
fstp
mov
stc
cwtl
mov
dec
fwait
insl
sbb
inc
aam
xor
addb
jne
mov
les
jl
adc
or
imul
icebp
mov
out
cld
inc
dec
addr16
push
cwtl
mov
mov
mov
test
test
in
sbb
out
out
xor
and
imul
lds
xchg
mov
lea
add
out
mov
jno
lds
in
loope
mov
das
xchg
xor
popa
add
inc
loope
add
xchg
mov
popf
hlt
cmp
les
or
int3
jmp
xchg
jb
dec
sub
sub
xor
mov
pop
mov
mov
ret
jg
dec
enter
cmc
nop
je
data16
lcall
jne
push
jp
or
rorb
pop
loop
movsb
pop
pop
adc
jb
jo
cld
rol
loop
insl
xchg
mov
stc
test
push
pop
mov
popa
cli
negl
xor
inc
daa
sbb
popf
or
ds
sub
mov
push
lods
out
aam
xchg
test
imul
jge
test
jne
jmp
cwtl
xlat
mov
shlb
repnz
subl
movsl
sub
mov
ss
push
test
sar
cmpb
and
cmp
xchg
inc
pop
or
and
sar
add
push
cltd
movsl
add
dec
sarl
pop
pusha
andl
repnz
jmp
es
mov
dec
add
les
loope
xchg
iret
enter
cmp
xchg
test
pop
sub
add
mov
and
lret
dec
lret
dec
jno
jns
jb
mov
ds
aas
pop
cmp
or
aaa
outsb
es
cwtl
sub
lods
shlb
aaa
add
pushf
dec
jmp
imul
push
sbb
imul
divl
lods
jmp
xor
fdivrs
xor
xor
jg
imul
mov
sub
or
xlat
in
repnz
jb
repnz
mov
sub
mov
into
lock
iret
pop
dec
rcll
jns
jp
mov
and
in
xor
dec
out
dec
or
push
jmp
outsb
xchg
mov
jns
movsb
jbe
nop
fsts
dec
inc
xor
dec
in
sub
loopne
xorb
push
mov
jp
push
divb
imul
or
add
test
into
xor
inc
sub
push
dec
push
sar
adc
push
or
jne
mov
and
movsl
aad
add
mov
jb
dec
popf
loop
dec
push
mov
andl
cwtl
fs
ret
test
lock
mov
mov
jb
mov
mov
pop
mov
lods
ret
jecxz
and
rorl
out
out
fmull
in
loopne
ja
mov
cwtl
xor
fnstcw
jbe
shrb
cs
cli
xchg
stos
call
jae
push
dec
cmp
rolb
enter
inc
mov
mov
fisubrl
lahf
inc
sbb
in
movsl
mov
scas
aad
into
fdiv
and
mov
inc
or
idiv
rcrl
mov
ret
scas
fdivl
push
in
je
cmp
mov
sahf
sahf
data16
jnp
lods
out
ds
xor
aas
call
inc
sub
fcmovnb
aad
sbb
and
out
mov
addr16
imul
mov
clc
gs
jnp
mov
cmp
mov
insl
xchg
fcomip
je
lret
add
mov
cmp
incb
data16
mov
test
mov
push
xchg
into
adc
sti
xchg
jne
xchg
cmp
pop
push
sahf
repz
push
push
inc
addr16
mov
loope
es
or
bound
push
iret
fisttpl
out
pop
fs
sbb
sub
mov
dec
imul
mov
gs
and
push
fmulp
cmp
mov
lret
icebp
ror
push
ljmp
inc
cmp
dec
jno
pop
pop
daa
pop
inc
test
xor
or
jl
and
clc
pusha
pop
xor
call
adc
jmp
push
es
mov
insb
xchg
push
and
fldl
test
push
lods
mov
cmpsb
sub
mov
icebp
add
jl
outsb
bswap
add
and
movsl
pop
xor
jae
stc
lods
jge
in
sbb
mov
xchg
jae
addr16
dec
and
subl
loop
push
cmpsb
mov
out
or
xlat
sub
js
xchg
daa
cmp
inc
fwait
addl
lahf
pusha
rcrl
popa
jnp
push
push
hlt
hlt
pop
or
das
sahf
xlat
psubusb
pop
jns
sub
sbb
int3
mov
aam
adc
xchg
les
and
or
mov
sbb
jo
pop
aam
ret
pop
lock
xchg
xor
jle
lock
push
mov
out
inc
push
inc
add
adc
mov
ror
mov
cmp
xchg
jmp
aaa
cmpsl
pop
cmp
aam
jne
inc
inc
rcl
adc
pop
jae
or
mov
sub
cmp
enter
pop
pusha
xlat
test
popf
ss
das
aam
in
xlat
loope
fcomip
loop
sarl
or
daa
mov
addr16
out
fidivl
fisubrl
cmp
cmpsb
sbb
pop
mov
in
sbb
dec
test
bound
cmpsl
pcmpgtw
mov
fcomps
shrb
inc
xchg
mov
jne
push
jmp
cs
in
mov
fnstcw
pop
jg
xchg
insb
xchg
or
lahf
xlat
out
cmpsb
movsb
cmp
xchg
out
in
insl
daa
push
aaa
inc
mov
push
dec
mov
pop
leave
mov
jecxz
sub
push
les
xchg
imul
subb
roll
push
cmp
push
inc
out
mov
inc
and
pusha
lods
fwait
out
hlt
pop
int
cmp
imul
push
lds
or
xlat
cmp
xchg
mov
jge
push
aam
pop
and
push
div
arpl
pop
sbb
xor
mov
popf
aam
test
xchg
xchg
push
cmp
pop
dec
sub
cmp
cs
pop
hlt
push
outsl
dec
les
jne
inc
subb
add
insb
mov
lcall
cmp
lods
retw
dec
jg
jo
int
xchg
mov
push
pushf
jmp
scas
fstps
push
pop
sub
ret
dec
push
inc
in
iret
mov
jb
and
push
icebp
js
movsb
iret
lds
adc
rolb
fbld
xor
loope
or
clc
push
push
jl
mov
xor
push
lret
cs
pusha
subb
cmpb
fnstcw
mov
push
jnp
and
cs
shll
mov
inc
add
xchg
pop
sub
dec
imul
lret
dec
addr16
xor
mov
jb
ss
fsubrl
loopne
stos
push
dec
mov
push
fsubrs
outsb
xor
or
add
cs
pushf
movsl
jge
sub
hlt
xor
out
leave
bound
into
mov
cwtl
fnstenv
fisubrl
notb
lods
push
call
int
repnz
fidivs
or
inc
push
daa
push
mov
js
mov
and
pop
xchg
test
adc
sbb
mov
xor
mov
jmp
fst
push
push
out
or
and
adc
push
push
xor
lods
inc
mov
ror
pop
addr16
xchg
or
test
cmp
out
lcall
imul
lock
adc
jecxz
neg
idivl
fs
mov
cld
pop
pop
or
cmpsb
enter
roll
jmp
dec
push
das
push
push
xchg
int3
xchg
xor
int
daa
fidivrl
loopne
repnz
push
ss
sbb
inc
inc
mov
push
jecxz
bound
icebp
dec
push
xor
je
mov
pop
push
out
adc
es
push
std
xchg
jmp
out
xchg
inc
testl
fdivl
push
pusha
sbb
cmc
add
xchg
pusha
add
imul
scas
movsb
lahf
call
pcmpgtd
push
fs
lret
push
inc
mov
je
and
mov
or
nop
fsubp
mull
mov
stos
out
or
xchg
mov
jae
outsl
mov
and
pop
push
mov
ds
lahf
pop
dec
fdivr
push
pop
sub
in
mov
test
inc
dec
aas
inc
ret
jo
into
and
negl
stc
xor
pop
xchg
sbb
enter
cmc
test
shll
icebp
dec
mov
fstpt
push
add
pop
cmc
xchg
push
lds
and
fwait
mov
adc
dec
ja
mov
mov
cltd
popa
inc
adc
and
add
sbb
lcall
push
and
pop
xor
rolb
jne
cmpl
sysret
mov
push
insb
jge
xor
bound
outsb
cli
aas
fwait
in
jne
jne
pop
idivl
xchg
mov
dec
test
jae
pop
out
outsb
pop
idiv
sbb
pusha
or
les
mov
push
add
out
mov
mov
in
es
mov
scas
cltd
xor
icebp
mov
pop
inc
das
aam
aam
xor
mov
lods
data16
std
repz
cli
test
ror
imulb
cmpsb
lods
adc
jnp
sbb
lcall
jge
dec
mov
std
loopne
adc
jecxz
out
cs
jae
jmp
cli
xchg
fmul
ds
stos
cmpsb
jae
in
push
ljmp
les
push
xchg
sbb
xchg
xchg
js
or
cmp
lds
fsub
or
or
push
loope
push
sub
or
int
cmpsb
pop
add
push
and
cmp
or
pushf
scas
sbb
push
lds
cmp
xor
pop
cld
xor
test
jecxz
jp
sub
dec
mov
xchg
mov
lds
xlat
stos
inc
add
inc
xor
jne
fildll
lods
cmp
ret
clc
in
lea
cmpsb
frstor
or
ja
aam
enter
scas
push
jo
cli
and
test
xor
mov
lcall
clc
loop
pop
stc
inc
rclb
mov
mov
pop
push
stos
mov
lock
std
add
adc
pusha
mov
add
xor
ljmp
push
jae
aam
and
leave
mov
mov
div
xchg
daa
adc
clc
outsl
add
cmp
inc
mov
test
clc
aam
loope
or
fmul
pusha
das
or
xchg
xchg
xor
push
mov
imul
into
dec
ljmp
dec
sbb
fisubrs
push
cld
dec
leave
loopne
cwtl
lcall
ss
mov
adc
mov
push
mov
or
sti
adc
jge
aas
inc
push
add
mov
mov
pop
fwait
lahf
lahf
xchg
push
xlat
gs
pop
popf
inc
ljmp
inc
adc
test
xchg
rolb
sbb
add
adc
xor
addr16
mov
movsb
mov
sub
sub
and
arpl
bound
movsb
loopne
adc
jbe
pop
cmp
push
jae
js
loop
ja
mov
test
sahf
pop
pop
pop
lods
mov
out
lods
mov
stos
movsb
ljmp
leave
sub
xchg
jae
test
lods
outsl
jle
subl
sbb
dec
sbb
xchg
sahf
lods
cmp
lds
xchg
sub
adcb
mov
cli
lods
jg
out
xor
pop
fidivrl
scas
inc
mov
lret
fwait
lret
xor
add
scas
jo
in
sub
and
inc
adc
xchg
and
mov
cmpsl
jl
xorb
cmc
push
adc
and
rcrl
push
push
std
dec
mov
out
lret
insb
movsl
test
and
in
mov
shl
lahf
ret
and
ss
mov
sbb
jge
pop
clc
aaa
fistpll
mov
xchg
cld
jp
pop
shll
arpl
addr16
jb
xchg
xchg
aaa
in
je
pop
xchg
sti
and
or
xor
lret
add
or
jae
cli
mov
jecxz
cli
aas
push
and
sahf
mov
and
push
rolb
in
and
sbb
pop
adc
stos
cld
test
mov
popa
mov
add
xor
out
loope
or
xchg
lods
dec
bound
push
fists
dec
mov
inc
out
arpl
stos
mov
cmp
xchg
pop
cli
sub
mov
outsl
sub
add
cmp
fisubl
inc
or
popa
push
testb
pop
add
sbb
lret
mov
jp
sub
imul
push
push
xchg
icebp
or
pop
test
jae
adc
jle
fdivrs
aas
mov
pop
sbb
sub
imul
jbe
xchg
negl
mov
cmp
sub
xchg
mov
mov
mov
call
push
push
lcall
and
sbb
xchg
cld
aam
icebp
sub
xor
push
cwtl
lods
fmull
xor
sub
mov
add
clc
fildl
and
fdivrl
cmp
inc
out
or
ja
sbb
fdivrs
xchg
mov
lds
leave
push
sarb
sub
pop
dec
stos
repz
mov
test
pop
rcrb
stc
mov
cltd
or
lcall
or
dec
cmpsb
ret
push
stos
outsb
lret
dec
push
push
imul
orb
jge
jg
mov
div
push
cmpsb
jb
mov
push
push
inc
mov
insl
and
call
jo
xlat
lahf
jmp
loope
out
mov
push
aaa
iret
mov
sahf
mov
and
fldt
jb
mov
mov
shlb
loope
loop
in
mov
scas
jne
inc
mov
ja
xchg
xchg
testl
bound
ror
outsl
insb
bound
arpl
jg
inc
mov
fld
fisubrs
fcmovnbe
xor
inc
cld
adcb
inc
lret
push
out
leave
jnp
test
jae
xchg
xor
int
xchg
popa
cmovs
outsl
mov
and
daa
jbe
dec
inc
sbb
nop
push
movsl
aaa
call
sub
insl
inc
js
leave
out
dec
jae
out
pop
loopnew,pt
mov
mov
add
ds
lock
fwait
testb
sbb
xchg
mov
jmp
fnstsw
fcmovnu
cltd
pop
dec
decb
into
outsl
lcall
in
xchg
lock
fcoms
sbb
mov
mov
sbb
lret
sbb
push
loopne
mov
out
push
fildll
pop
cli
mov
int
pusha
dec
in
cwtl
xlat
sbb
jge
nop
mov
inc
into
outsb
into
sub
jecxz
stos
and
cmpsb
sbb
mov
rcrl
repz
inc
addb
dec
loop
xchg
dec
xchg
repz
inc
rcr
pop
add
sbbb
loop
in
lods
dec
inc
ja
add
mov
add
lret
pusha
push
fs
or
inc
cli
in
movsb
or
cmc
aam
and
loopne
in
pop
mov
mov
mov
fisttpl
push
dec
lods
out
popf
cwtl
mov
setb
sub
movsb
dec
mov
pushf
or
push
mov
xor
xchg
in
dec
dec
call
jl
pop
loope
ja
lods
pop
pop
pop
xor
or
les
mov
fsubrl
mov
sar
or
xchg
mov
adc
ds
lcall
mov
fisubs
mov
xchg
rorb
xchg
xchg
mov
jg
xor
aaa
out
outsl
ljmp
movsb
jl
jecxz
xchg
loopne
push
or
mov
sbbl
adcl
add
lock
pop
mov
daa
dec
ljmp
into
shlb
mov
dec
adc
adc
shrb
cltd
stos
loope
rcrl
ret
cmp
lods
popa
and
xchg
mov
push
cmp
jecxz
xor
or
sbb
loop
pop
fidivrl
popf
and
mull
test
sbb
mov
mov
and
movsl
dec
inc
pop
lea
je
mov
mov
jecxz
add
int3
cmp
daa
mov
push
pop
fwait
add
das
push
pop
mov
fiadds
jb
xchg
ds
test
bound
int
add
insb
shll
ret
and
das
aaa
xor
stos
jmp
and
arpl
in
lahf
sti
push
ss
scas
dec
mov
popa
sbb
xor
mov
inc
ss
cmpsl
sti
push
xchg
xchg
ljmp
jnp
or
clc
rolb
inc
and
mov
mov
or
sbb
aas
dec
mov
sbb
or
mull
xchg
inc
adc
outsb
or
pushf
push
xchg
or
gs
cmp
or
xchg
daa
ljmp
enter
mov
inc
test
lea
cli
add
movsb
mov
sub
xchg
rorl
push
fldt
and
subb
push
popf
mov
dec
mov
cwtl
mov
inc
fsubl
aas
idivl
scas
int3
divb
dec
cld
daa
popf
pop
push
xchg
push
xor
jne
ror
xor
lahf
mov
popf
pop
ds
popa
fcomp
leave
sbb
push
jl
dec
popl
mov
in
adcb
jnp
out
scas
out
mov
pop
fldl
aad
sub
icebp
inc
fwait
sub
pop
or
push
mov
call
aas
push
stos
pop
dec
mov
test
adc
mov
out
outsl
cmovo
sub
sahf
int3
cmp
xchg
lahf
dec
fistpl
add
and
mov
xchg
stos
fstpt
mov
icebp
sbb
adc
mov
dec
ret
pop
mov
cwtl
scas
call
into
xor
and
or
insl
aad
or
add
insb
loop
pop
imul
push
lahf
in
xchg
sbb
aas
mov
rcr
push
ljmp
xchg
push
add
dec
mov
popa
xor
jb
xchg
cmp
mov
push
iret
lret
cmp
push
mov
mov
mov
out
dec
std
movsl
fmulp
cmp
pop
adc
xor
test
mov
xchg
jle
pop
sbb
stos
pop
mov
imul
mov
insl
xor
es
mov
xor
adc
xor
pop
inc
andb
cs
aad
popa
femms
sub
xchg
jne
mov
mov
xor
int3
xchg
xor
mov
sbb
daa
cwtl
push
lret
or
fistpll
or
outsl
jmp
mov
scas
aas
insb
bound
lret
jne
fistpl
sbb
clc
cmc
aaa
int
fidivl
push
shl
xchg
subb
mov
aaa
popa
xchg
jl
scas
xchg
push
cld
int3
xchg
add
stos
inc
xchg
ljmp
cs
movsl
add
adc
shrl
jbe
popa
lods
cmpsb
pop
jae
pop
mov
add
push
and
enter
pop
mov
mov
aas
jns
xor
fcmovne
jae
lahf
dec
lods
push
loop
add
add
jbe
pushf
pop
in
stc
xchg
sbb
adc
and
or
jbe
mov
inc
cwtl
dec
jmp
push
fistpl
cmp
outsb
jae
mov
enter
add
hlt
outsl
fbstp
xor
push
xor
in
adc
fs
sbb
add
cli
mov
imul
hlt
cmp
clc
dec
lods
dec
call
mov
push
and
jo
sub
clc
push
cmc
aaa
sbb
sahf
xor
or
inc
pop
testl
pop
je
adc
xor
push
dec
ljmp
sub
jns
cld
sbb
addl
fldt
xor
movsl
aam
mov
add
addl
ret
js
mov
add
cmp
push
adcb
popf
jae
push
mov
jge
cmpsl
daa
mov
movlps
sbb
sbb
pop
cmp
xchg
imul
repnz
popf
adc
negl
gs
cwtl
cmpsb
lds
dec
test
mov
sub
popa
addr16
ficomps
push
sahf
xor
adcl
or
fcoml
leave
fisubrl
cmp
mov
inc
mov
inc
je
jo
repnz
stos
loope
jmp
fldt
cwtl
push
mov
inc
pop
mov
testl
addl
call
std
mov
in
das
imul
inc
add
shll
cwtl
inc
mov
imul
mov
mov
inc
pop
push
bound
push
fmuls
cmc
jb
insb
xor
or
lods
mov
lret
push
rol
les
mov
jle,pt
addr16
fsubs
scas
popf
dec
int
pop
js
sub
clc
je
xor
or
xchg
cmpsb
repz
aad
push
int
scas
in
pshufw
popf
cld
or
sub
fidivl
push
in
cmp
lret
pop
push
cli
cs
push
icebp
sbb
cmp
xor
pop
mov
mov
adc
dec
and
repz
std
xchg
sbb
adc
mov
push
xchg
push
loopne
mov
shl
or
sbb
inc
and
push
addl
mov
lret
or
dec
sbb
jmp
subl
or
or
lahf
ds
ret
push
stos
iret
add
or
test
pand
mov
addl
xor
jecxz
inc
cmp
push
xchg
push
sub
push
cmp
add
lcall
inc
push
jp
push
pushf
out
add
fs
pop
sbb
push
xchg
ss
cmp
idivb
pop
loopne
jne
imul
adc
xchg
mov
cmp
jecxz
sbb
cmc
out
subb
adc
lds
adc
pop
cwtl
mov
cmp
movsl
cmp
jnp
das
pop
cmp
or
add
add
xor
sahf
fwait
test
jo
inc
xor
sbb
sub
xchg
mov
out
clc
jmp
mov
sahf
xorl
jle
and
cld
data16
roll
mov
addr16
nop
push
jnp
jg
scas
jo
outsl
mov
xchg
je
outsl
sub
pop
fisubrl
jbe
bnd
int3
icebp
ss
cmc
cmpsl
subl
push
mov
pusha
in
dec
and
ss
pop
mov
jle
ljmp
cli
call
mov
mov
dec
jb
enter
leave
jge
pop
popa
mov
sub
and
decl
cltd
mov
testb
inc
inc
into
and
cmpsl
mov
dec
sti
push
fsts
jbe
das
cld
push
mov
les
pop
ret
or
add
add
clc
inc
mov
in
stc
fidivrl
mov
xchg
and
stos
lods
push
pop
in
cmpsb
cmpb
xchg
in
jae
aam
push
mov
lcall
lret
test
mov
ss
fwait
test
dec
cltd
cs
inc
push
jne
js
inc
xchg
jl
sbb
lret
pop
mov
mov
out
fbld
inc
sub
or
xor
sbb
pop
stos
movsb
cmp
mov
sbb
mov
daa
jmp
jnp
fbld
popa
leave
das
lods
mov
sbb
or
or
bnd
pop
lsl
adc
fidivs
push
pop
cmp
cmp
scas
xor
xchg
mov
sbb
dec
xor
aas
repz
pop
jae
xor
pop
adc
aaa
fimuls
ss
pushf
lahf
xor
gs
pop
fisubrl
or
roll
lret
mov
xchg
imul
daa
inc
cltd
insb
adc
xchg
push
dec
or
fadds
fistpl
sbb
and
pop
repz
dec
test
sbb
and
aad
ffreep
sub
aad
enter
movsb
ljmp
andl
jmp
rcr
xchg
mov
xchg
adc
lcall
and
dec
mov
notl
repnz
push
ljmpw
call
ja
lock
lock
mov
enter
fmuls
cwtl
outsb
push
imul
mov
xchg
mov
mov
mov
cmp
sub
push
addr16
movsb
sbb
and
cmp
and
popa
out
idivb
ljmp
mov
int
and
jnp
or
lahf
push
movsb
jl
testb
sub
pop
inc
push
cli
inc
dec
lea
repz
call
inc
adc
add
xchg
insb
cwtl
pop
inc
inc
sbb
adc
lock
lret
xchg
xor
mov
out
mov
cld
fidivs
into
insl
mov
sbb
pop
cmp
cltd
push
popf
xor
pop
xchg
je
nop
pusha
xchg
gs
pop
ss
push
lret
pop
dec
mov
mov
xchg
xchg
adc
insb
in
lods
movsl
sbb
fldcw
mov
cli
pop
into
call
daa
addb
lea
repnz
add
jbe
and
or
mov
mov
xchg
jbe
push
mov
mov
mov
punpckhbw
mov
call
dec
addb
mov
inc
push
imulb
ljmp
cmc
insb
mov
outsb
mov
arpl
lods
and
xor
pop
jno
clc
pop
movsl
push
loopne
popf
stc
insb
adc
aaa
mov
sub
pusha
repz
popa
faddl
mov
mov
dec
outsl
inc
outsb
subl
pop
or
fwait
hlt
ret
sbb
pop
cmp
and
xchg
lret
arpl
outsb
lea
jae
lret
cmc
je
scas
ficoms
les
data16
or
xor
idivb
and
je
in
push
push
dec
out
mov
out
inc
jge
das
inc
mov
mov
mov
in
mov
xchg
lock
pop
jbe
xchg
rcll
shll
jne
lahf
pusha
cmp
mov
add
subl
lret
push
xor
jge
mov
pop
mov
aam
out
sti
int
scas
cmp
loop
sub
mov
sbb
push
xor
cmc
repnz
pop
dec
mov
clc
subb
adc
jecxz
mov
inc
jl
push
clc
fs
movsl
jbe
add
xor
addr16
inc
leave
addr16
dec
pop
xchg
rcl
ret
push
dec
cmpl
sub
inc
or
sbb
mov
cmp
add
imul
dec
mov
adc
add
bound
jbe
andb
pop
rcrl
sbb
mov
mov
xor
dec
scas
test
xchg
lds
ljmp
push
xchg
push
ficompl
cmp
stc
push
pop
arpl
mov
rorb
lods
in
stos
push
movsb
xor
popa
mov
stos
xchg
mov
movhps
mov
fisttpl
outsl
lret
xchg
sahf
mov
es
mov
repz
dec
bound
jle
dec
mov
popf
in
lcall
clc
cmpsl
fs
dec
or
cld
push
xchg
addr16
xchg
jle
lds
adc
data16
icebp
ja
push
lahf
insl
rolb
cmp
and
xchg
adc
cmpb
data16
pop
ljmp
adc
scas
or
fcomip
and
in
ja
sti
sub
push
fs
or
jne
jne
movl
mov
lods
movsb
pushf
pop
into
push
std
mov
out
data16
pushf
dec
xchg
mov
pusha
arpl
xchg
jle
fbstp
pop
mov
ret
addr16
in
push
adc
pop
jg
sbb
push
sub
lds
jne
fistpl
add
mov
imul
sbbl
xor
out
dec
movsl
leave
jge
test
scas
aam
loope
pushf
repz
add
pop
in
jle
mov
mov
in
adc
leave
scas
push
rorl
jmp
xor
stos
out
mov
jmp
sub
out
push
faddl
std
dec
cmc
and
data16
jb
add
sbb
shll
mov
dec
jg
xchg
fs
mov
iret
cmp
inc
cmpsl
push
clc
hlt
lods
test
aaa
addl
mov
adc
sbb
sahf
int
cmp
mov
cmp
outsl
jnp
jno
cld
mov
int
enter
in
xor
repnz
cltd
mov
add
jge
fcmovu
call
xchg
fidivl
pop
jne
jb
sbb
aad
inc
mov
movsl
mov
jmp
repz
pop
sahf
xchg
test
sti
test
je
cmpsb
lret
xchg
and
scas
lds
add
and
fdiv
adc
popf
ret
mov
into
jae
push
repnz
mov
popf
call
repz
sbbb
pusha
in
sub
call
and
inc
xchg
roll
inc
jb
lret
ljmp
movl
test
pop
pop
adc
mulb
adc
lods
ret
xchg
cmpl
inc
push
inc
fadd
dec
inc
lds
pop
mov
into
gs
sarb
pop
xchg
mov
ljmp
sub
enter
jg
and
pushf
push
lret
addr16
outsb
push
ret
xchg
mov
dec
xorl
leave
mov
bound
sub
adc
pop
pop
dec
movsl
fmulp
jno
out
mov
les
mov
imul
lret
or
addr16
outsb
lea
lret
int
shll
inc
dec
and
and
cmc
push
cltd
cmp
out
mov
jp
mov
xor
scas
pop
cmpsb
push
mov
out
rcrb
jne
push
add
sub
subb
test
loope
loop
mov
in
dec
cmpsl
pop
jl
adc
int3
push
loop
or
nop
jle
xorb
adc
inc
lds
pop
xchg
test
outsb
push
mov
ret
pop
mov
fs
xor
sbb
arpl
movsb
inc
cmpsb
sahf
xchg
lcall
cld
dec
push
push
inc
xlat
stos
push
pop
iret
je
push
dec
xorl
or
mov
pop
push
cmp
aaa
cmp
or
testl
sahf
add
dec
stos
dec
inc
push
mov
cmp
lcall
inc
adc
add
mov
pushl
cli
sbb
sbb
dec
mov
mov
add
out
out
jl
push
sbb
js
ss
out
fcoml
fstl
sbb
shll
sbb
cmp
and
cli
or
or
cmp
cmpsl
imul
insb
jecxz
jnp
shrl
sbb
jnp
xchg
xchg
dec
adc
adc
xchg
pop
jne
dec
iret
lock
orb
mov
xchg
test
lahf
loop
loopne
js
int
int3
mov
cs
or
ror
mov
jnp
pop
jns
push
sub
sub
inc
dec
sbb
sbbl
outsl
call
rolb
sbb
add
push
int
push
mov
out
and
or
xchg
mov
loope
aam
dec
lods
lret
pop
lds
cmp
inc
mov
add
loop
insb
ds
mov
fs
push
pop
xchg
sbb
fsubrl
pushf
fsts
enter
out
loope
add
jne
mov
pop
mov
sbb
rorb
imul
xor
inc
inc
mov
cmp
mov
inc
popf
stos
fcompl
inc
out
cmp
aaa
ret
iret
mov
cli
xchg
xchg
cmc
adc
pop
and
pop
incb
shr
xlat
clc
mov
lret
add
dec
jle
xor
scas
jne
std
mov
push
lods
dec
dec
inc
xorl
mov
rcll
clc
cli
ljmp
push
test
or
jle
pop
xchg
cmpsl
ljmp
push
jle
jno
xchg
xor
cmp
mov
loope
insl
lret
or
xor
testl
cmp
mov
add
adc
cmpsl
and
push
jo
cmpsb
cs
xlat
dec
cmp
in
fbstp
cli
rcrb
jg
dec
ljmp
sbb
mov
setno
mov
iret
aam
aaa
insb
insl
decl
jb
mov
pop
shll
xchg
iret
sub
icebp
xchg
mov
lahf
cwtl
push
inc
addr16
jecxz
mov
cwtl
push
movsl
mov
lock
or
inc
sub
incb
inc
adc
sbb
mov
lea
pop
sahf
js
fisttps
das
cmp
xlat
loopne
xor
jae
aam
jno
sub
cmpsl
mov
xchg
add
pop
or
push
lods
cltd
mov
scas
sub
inc
cmp
cmp
sahf
jg
ds
insb
xchg
push
repnz
out
aam
mov
insb
mov
push
push
adc
mov
movsl
mov
cmp
outsl
rorb
cli
dec
or
clc
mov
xor
add
outsb
fnstenv
or
jle
mov
mov
adc
ljmp
and
xor
push
jl
inc
sub
cmp
push
mov
dec
mov
xchg
das
cltd
cmpsl
mov
dec
push
in
add
test
int3
sbb
mov
xor
xchg
xor
lahf
adc
shl
cmpsl
cmpsl
fiaddl
sahf
xor
add
mov
enter
pop
mov
mov
adc
sahf
jmp
cld
dec
sahf
mov
mov
jecxz
cmpsl
sub
add
aaa
push
jmp
subb
leave
inc
add
roll
ficoml
int3
mov
test
lahf
cmp
dec
sub
loopne
xchg
sbb
xlat
push
aas
fadds
mov
jne
push
fwait
repz
cmc
mov
cs
loop
ja
mov
cmc
imulb
adc
or
jne
pop
mov
pop
sar
push
sbb
nop
in
lret
fldenv
rorb
cmp
out
les
fstpt
sbbl
dec
je
in
cltd
jnp
maskmovq
idivl
and
int3
sti
enter
mov
aam
or
xchg
jle
repz
iret
or
test
jecxz
fiaddl
loop
stc
add
pop
shr
mov
mov
test
out
cmp
jne
notb
add
mov
and
insb
icebp
repz
jecxz
mov
xchg
mov
insb
add
jmp
iret
rcll
mov
xor
ds
cmp
sub
faddl
je
xchg
inc
lds
push
ljmp
xchg
cld
sarl
jmp
push
sub
xor
pop
pop
push
push
mov
fisttpll
pop
push
cmp
lods
cmp
daa
pop
xchg
fs
mov
xorb
in
xor
setg
dec
sub
aam
mov
jge
pusha
sub
in
add
aaa
inc
fwait
mov
mov
out
xchg
jno
cli
jno
outsl
fdivs
xchg
rcrb
mov
push
or
fimuls
out
cmpsb
stc
stos
subl
adc
insl
leave
adc
cmp
fnstenv
test
sub
pop
lahf
push
mov
xor
sbbb
mov
ret
mov
jge
test
pop
pop
and
frstor
imull
sub
cli
pusha
mov
inc
pop
movsl
jp
in
subl
jecxz
fbstp
inc
jmp
rcrl
std
pop
pop
rclb
cmp
cmp
filds
imull
cmp
idivb
testl
push
cmpsb
fidivl
mov
mov
and
imul
in
movsb
push
fnstsw
das
xchg
xor
icebp
popa
adc
mov
dec
aaa
rcrl
and
mov
jp
cwtl
testl
mov
daa
cmc
ds
lea
inc
sbb
clc
sub
xor
add
shlb
add
cmc
les
aaa
dec
jl
int
scas
pop
loope
rcr
mov
sahf
enter
in
inc
lods
xorb
scas
in
out
clc
popf
push
es
lcall
cmp
sub
jo
mov
fnstsw
and
pop
sbb
jg
cmpsb
push
ds
divb
mov
pop
pop
lret
mov
sub
adc
pop
inc
loopne
inc
pop
sahf
rcl
aad
mov
jmp
jge
loop
shlb
cmpsb
mov
std
dec
les
mov
mov
jmp
popf
lods
aam
js
icebp
aad
cld
mov
imul
test
dec
mov
popf
sub
call
popf
notb
insb
test
cmpsl
aaa
dec
mov
int3
add
popa
in
inc
push
xchg
cmp
inc
daa
mov
pmulhuw
out
mov
aad
inc
cmpsb
addr16
nop
mov
fstps
adc
jne,pn
jnp
ja
add
stos
les
inc
mov
push
sti
or
mov
mov
push
adc
or
sub
xor
inc
nop
or
mov
movsl
loop
nop
pop
aam
adc
sub
das
in
in
outsl
out
mov
je
sti
into
and
jle
or
inc
pop
and
lods
popa
rol
das
ss
sti
hlt
push
xchg
rcl
cmp
les
arpl
pop
rol
test
sub
aad
and
sbb
xchg
cmp
push
jo
mov
inc
in
shlb
insb
lock
xor
xor
jge
ds
jmp
sub
stc
cmp
xor
fcomps
cmp
push
mov
daa
das
xor
jecxz
sbb
lods
popf
cli
and
inc
jnp
arpl
push
add
aam
mov
mov
mov
aam
rorl
xor
pop
xchg
lds
test
xchg
xlat
fcmovnb
aad
enter
sub
arpl
sub
pop
cld
gs
or
jbe
pop
rclb
cmp
cmpsb
cmp
enter
pop
jge
or
xchg
inc
inc
out
jle
lcall
inc
arpl
enter
fdiv
inc
jbe
rorb
dec
dec
loope
std
sti
mov
and
cmpsl
jno
fs
pop
pop
push
shrl
aaa
dec
lods
das
push
xchg
pop
adc
pushf
or
outsl
add
test
dec
mul
je
inc
mov
fsubrs
add
xchg
aas
ja
mov
gs
fs
pop
es
cli
das
sti
and
jne
jb
les
push
fnstcw
and
mov
jb
jns
test
cmpsb
fists
and
jb
mov
fistps
mov
mov
fisubs
mov
loop
mov
xchg
test
loopne
cmp
mov
mov
pop
js
mov
jmp
pop
fadd
cmc
hlt
mov
fcmovu
out
mov
out
loope
xor
mov
or
movsb
loopne
loop
out
stc
ljmp
add
aam
push
dec
mov
ss
adc
fwait
je
mov
sbb
int
mov
cmp
xchg
cli
push
pop
mov
insb
cmp
pushf
mov
xchg
adc
lret
push
setl
push
fldt
iret
loope
push
aas
notb
fs
cmp
dec
inc
call
movsl
cli
loopne
mov
arpl
jnp
hlt
push
xchg
int
rclb
mov
stc
dec
xchg
xlat
imul
out
roll
sub
add
leave
xor
addr16
xchg
or
test
cwtl
sbb
pop
mov
and
fs
jmp
or
mov
mov
decl
add
lcall
add
inc
repnz
lahf
lcall
call
pop
hlt
into
pusha
nop
pop
lret
pusha
sub
icebp
repnz
mov
stc
clc
arpl
add
push
dec
add
lahf
negl
add
gs
push
cli
aas
movsb
add
or
in
lret
cmpsb
cs
push
adc
inc
dec
outsl
cmp
mov
movsl
push
add
mov
test
stos
lret
mov
mov
dec
fmuls
jge
xchg
loop
fsts
popa
push
stos
loopne
les
inc
data16
cld
and
jns
ficomps
icebp
xlat
into
mov
sub
or
push
movsb
pop
cmp
cmpl
les
dec
sbb
bound
popf
sub
dec
sbb
or
jg
outsl
jp
adc
push
nop
bound
ja
cmp
pop
push
mov
negb
and
gs
push
test
in
ret
mov
cmp
test
jge
push
iret
jae
cmc
inc
jge
and
pop
leave
shll
push
dec
movsw
mov
add
std
mov
cs
jne
and
inc
dec
test
cltd
mov
movsb
shll
jle
inc
jno
and
insl
adc
dec
push
lahf
mov
lahf
mov
xor
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
es
xor
popa
aas
loopne
fwait
leave
cmp
mov
test
call
and
sub
push
xor
add
sahf
mov
cld
in
aaa
pop
mov
subl
and
push
mov
lock
sub
add
jae
pop
adc
pop
or
pop
outsl
sbb
ja
dec
arpl
cmp
sbb
jmp
jecxz
fistl
mov
mov
sbb
hlt
idivb
cmp
scas
pop
loope
cmpsb
inc
and
pop
adc
fucomi
movl
adc
mov
cmpsl
and
clc
in
cmp
sti
jge
adc
lcall
fdivrs
adc
shrl
cmp
popf
arpl
cli
xor
xchg
scas
xchg
loope
dec
call
das
insb
cmpsb
mov
push
sbb
xchg
xchg
lret
aas
pop
or
pop
shrb
mov
dec
clc
arpl
xorl
out
pop
jno
sub
sub
les
hlt
sbb
repnz
ja
push
pop
cmp
mov
cli
sti
or
or
out
mov
jb
mov
out
mov
jno
cmp
push
ret
add
mov
inc
imul
icebp
add
sub
sbb
or
mov
xor
ds
popf
cmp
clc
addl
pop
in
pop
mov
mov
movsb
xor
into
mov
add
xor
adc
repnz
js
pop
stc
das
loopne
sbb
inc
fsubrl
or
push
pop
add
out
aad
ret
jbe
lret
inc
sti
fs
in
int
adc
push
pushf
inc
imul
lahf
push
mov
add
sbb
fucomp
inc
push
in
jecxz
and
xchg
jbe
or
or
add
dec
inc
inc
mov
in
bound
inc
inc
sbb
fstl
dec
mov
out
fstpl
mov
pop
or
cmp
or
xor
outsb
cmp
mov
push
mov
or
sbbb
inc
outsl
jg
pop
sar
inc
in
pop
sahf
xchg
cltd
cmp
mov
sbb
lods
pop
aas
stos
cmp
fisttps
fldpi
lea
xchg
mov
or
aaa
dec
out
pushl
sbb
cmp
aad
and
lods
sarb
adc
add
out
lods
cld
mov
fstl
js
jnp
scas
dec
cltd
jo
dec
loop
loop
cmp
imul
clc
jnp
adc
imul
mov
push
int
mov
sbb
pushf
ljmp
outsl
popa
pop
mov
or
andb
into
fstpt
xchg
pop
mov
icebp
add
out
push
loop
jno
mov
mov
mov
fwait
lret
popf
scas
fnstenv
jae
fnstsw
pop
test
or
mov
push
adc
mov
cmpsb
mov
popa
lret
gs
mov
aas
xchg
mov
aas
cld
icebp
dec
sahf
push
movsl
outsb
adc
add
in
clc
mov
fcoms
leave
repnz
add
aas
in
rclb
mov
loope
ja
in
pop
sub
stos
add
in
and
mov
rolb
insl
inc
adc
mov
enter
jmp
rcl
jne
loope
cmp
xor
mov
adc
push
aad
lods
pop
sbb
push
xor
xor
or
je
insl
in
pop
frstor
add
or
test
mov
jns
jnp
mov
cmc
stos
mov
mov
leave
mov
imul
adc
data16
jmp
mov
push
repnz
push
inc
push
or
push
nop
outsl
jbe
ja
push
call
dec
lods
ljmp
aaa
ds
and
push
je
pop
fdivrl
movsb
mov
ret
mov
das
sbb
in
mov
dec
mov
in
dec
add
push
and
imul
cmpsl
push
xchg
sub
cli
inc
mov
ret
pop
and
jbe
addr16
cmp
addl
push
inc
push
aad
pop
lods
and
jnp
repz
jle
stc
ret
mov
add
aaa
mov
jl
pop
pop
and
into
loop
add
push
jp
lret
pop
stos
shr
ret
sub
xor
push
lret
fistps
sahf
mov
nop
pop
js
xchg
add
sub
adc
sub
mov
sarl
add
loope
pushf
out
rclb
in
incb
mov
jg
iret
sub
jmp
lret
stc
or
int3
inc
cmp
dec
adc
cmpb
mov
lret
lods
sub
mov
adc
sbb
xchg
imul
jnp
repz
adc
pop
repnz
mov
lret
popa
mov
in
jno
out
aaa
fisubl
cmp
testl
pop
lahf
test
ret
sar
cmp
mov
mov
enter
lahf
clc
lods
es
sti
jns
out
cld
pop
outsb
popf
out
and
ss
cmp
or
mov
dec
mov
sti
sub
or
pop
cmp
adc
xchg
mov
sti
or
cli
push
iret
and
xor
fwait
sbb
lock
or
fsts
daa
cwtl
inc
out
mov
add
orl
lret
jge
xchg
fs
leave
stos
sti
mov
cmpsb
in
pop
out
push
push
mov
or
xchg
test
and
std
leave
cmp
fst
sub
ljmp
fdivs
das
fidivl
and
les
sub
js
sahf
sbb
imul
sbb
dec
fdivl
add
fsubr
pop
in
enter
shr
inc
dec
or
xor
ds
adc
lahf
mov
xor
add
addr16
fs
test
ja
jns
mov
sub
mov
out
cmp
in
mov
in
push
pop
lods
iret
popa
and
pop
decb
fs
or
movsb
movsl
jnp
dec
add
data16
insl
stos
loope
out
jae
add
inc
mov
inc
xchg
sahf
outsl
push
gs
pop
dec
jno
lds
mov
adc
leave
adc
lret
stc
xor
or
jb
add
mov
fadd
adc
push
cmpsl
sub
stc
cli
inc
fnstsw
mov
and
push
xchg
sbb
inc
mov
xchg
pop
cli
loope
popf
ret
addr16
clc
movsb
sub
inc
cmp
shl
fmuls
leave
mov
loope
aad
push
ja
mov
jl
dec
je
inc
sbb
sbb
movsl
outsb
push
out
call
ss
and
inc
inc
push
fistl
jae
insb
jae
loop
cmpsl
jmp
sbb
cmp
dec
je
test
adc
jns
lret
std
pushf
xchg
stc
into
rcrb
cmp
xor
add
sti
popf
sub
push
cmp
mov
inc
in
adc
movsb
ret
sbb
insb
ret
andl
pushf
xchg
out
sbb
div
dec
jp
add
idivb
xchg
ss
test
cmp
js
sub
add
push
cmpsb
repnz
adc
ja
cs
fstl
inc
nop
ret
cltd
xor
movsl
add
enter
sbb
or
cltd
fbstp
outsl
push
sbb
sbb
gs
test
push
cmpl
les
xchg
sub
xor
mov
in
shr
sub
cmp
test
mov
test
clc
fxch
js
adc
ret
lds
sbb
pop
adc
mulb
add
and
sbb
les
fcoml
nop
scas
sub
notb
push
mov
repnz
mov
xor
mov
adc
sbb
push
sarb
pop
pop
push
sbb
movsb
movsl
in
dec
jbe
ret
push
leave
int3
insl
sbbb
mov
inc
enter
xchg
popf
das
fst
sub
inc
inc
inc
fisttpll
sub
jns
es
push
into
icebp
lods
jbe
xchg
iret
outsb
sbb
pop
jns
jno
repz
jnp
test
js
adc
jns
jne
pop
cmp
lea
mov
push
add
xor
ljmp
sub
roll
out
pop
lods
mov
pushf
sbb
xchg
xchg
loopne
sbb
xchg
out
jae
add
fcmovne
mov
mov
adc
mov
negb
in
push
xchg
gs
sub
jne
cwtl
jmp
jnp
add
mov
mov
cmp
cmp
push
push
iret
adc
mov
mov
push
popl
sub
sti
repz
xor
stos
inc
sti
mov
inc
movsl
adc
or
scas
icebp
mov
add
test
sbb
ljmp
xchg
sbb
jae
xor
xor
stc
addr16
xchg
ret
push
add
push
int3
jbe
push
fwait
cmp
mov
sub
adc
adcl
ja
mov
push
inc
adc
pusha
cmp
out
jbe
test
pop
xchg
add
or
leave
ds
or
mov
out
std
mov
pushf
pop
test
fwait
out
mov
lret
cmp
icebp
pop
mov
leave
pop
push
xchg
ret
xchg
push
or
ret
jmp
push
repnz
clc
mov
movl
fidivs
outsb
cltd
bound
adc
nop
mov
sbb
ret
sbbl
imul
lret
add
pop
add
mov
mov
icebp
jle
orb
cwtl
mov
lcall
xchg
sbb
mov
pop
gs
or
ss
je
andl
test
sub
gs
scas
sbb
xchg
inc
and
loope
push
repnz
dec
mov
xchg
and
pop
leave
ret
into
fsubrl
dec
shrl
insb
jecxz
mov
pop
arpl
or
out
int
sub
int
push
pop
jmp
prefetch
or
mov
xor
js
lods
lahf
jnp
loop
cmc
fistpl
mov
jno
lcall
mov
mov
int3
data16
mov
loopne
add
loopne
fcoml
mov
jmp
or
push
scas
push
iret
mov
stc
sbb
mov
jne
sub
out
arpl
sbb
inc
jecxz
filds
movsb
leave
jecxz
mov
jecxz
push
mov
ss
sub
adc
pop
push
pop
call
jo
dec
pusha
mov
cmpsl
inc
lds
mov
lcall
jmp
sbb
mov
dec
loope
push
xchg
and
pop
fldt
divl
scas
repnz
loop
cwtl
add
inc
xor
in
popa
mov
divl
sbb
fcomip
xchg
adc
lea
jl
aaa
clc
repnz
jns
mov
push
out
xor
mov
cmpl
add
bnd
hlt
js
jno
repnz
add
push
inc
int
adc
cwtl
pusha
test
xchg
and
mov
and
bound
xor
lods
jmp
push
sbb
jl
or
pushf
mov
imul
and
inc
xlat
scas
push
add
enter
cmp
lahf
sbb
mov
in
inc
xchg
test
movaps
in
iret
and
les
sbb
das
outsl
adc
je
sbb
push
xor
cs
cmpsl
push
jb
mov
shrl
fstpl
pop
jg
frstor
ucomiss
mov
fimull
int
lret
xchg
sub
mov
cmp
lods
and
mov
mov
scas
jo
lcall
dec
pushf
jg
movb
lcall
xor
sti
outsl
pop
dec
xor
loope
push
inc
or
pusha
jg
or
fisubl
mull
sti
mov
js
dec
sbb
or
cmp
sahf
out
pop
out
xor
jg
ss
inc
rorb
lds
mov
pop
daa
stc
inc
sbb
push
sub
fstps
adc
pop
sahf
sbb
cld
cmp
fcoml
repnz
adc
js
addb
and
int
outsl
mov
cmp
dec
or
lods
sar
mov
add
aas
js
nop
xchg
and
jle
lods
xchg
push
add
test
adc
fdivl
test
test
mov
std
push
lods
fcmovu
pushf
gs
daa
and
sub
or
les
in
cmpl
ljmp
push
sub
pop
pop
cmp
rcrb
orl
pop
shll
sahf
sbb
dec
rcll
leave
lea
gs
sbb
pop
mov
out
mov
pop
test
repz
shl
pop
inc
rolb
das
bound
cmpsb
mov
jne
sbb
pop
nop
xchg
out
add
mov
xchg
and
inc
cmp
arpl
lahf
jns
repnz
xchg
add
dec
ficomps
and
arpl
mov
cmp
ljmp
cmp
add
mov
jge
jbe
jns
stos
faddl
cmp
ret
jg
imul
sbb
in
mov
std
xor
push
int3
sub
cmp
jb
out
pop
sbb
sbb
std
fimuls
sbb
adc
or
inc
push
push
sub
jno
or
jl
push
sahf
lods
repz
dec
jne
push
mov
movsl
sub
insb
xchg
iret
and
jecxz
sbb
sub
stc
out
ss
enter
fistpl
and
add
lods
push
cmc
jno
adc
jae
jp
shrl
jl
nop
lea
imul
cld
aas
adc
and
mov
jo
popf
xchg
sbb
cmpsl
cmpsl
mov
push
adc
dec
call
xor
mov
pop
adc
hlt
sbb
imul
out
movsb
pop
dec
test
std
cmp
sbb
dec
std
cwtl
movsb
loope
adc
ljmp
sbb
ds
adc
jecxz
mov
lahf
dec
add
shl
enter
outsl
out
test
movsb
mov
fucomip
in
adc
std
popa
iret
cmp
lcall
pop
mov
jl
lock
sbb
sahf
call
xchg
mov
mov
in
leave
loope
in
add
imul
or
lret
push
int3
mov
std
scas
aas
adcb
adc
aam
lret
test
dec
dec
mov
neg
inc
dec
in
outsb
les
in
or
jno
insb
sub
xchg
loopne
test
jnp
test
jb
testl
dec
jl
jne
xor
jns
mov
call
dec
jbe
pop
int
jg
lahf
retw
mov
xlat
loop
pop
scas
mov
xchg
in
cmp
xor
xor
fcmovnb
dec
not
xchg
pop
les
js
mov
fidivl
pop
push
push
inc
cmp
cmc
addl
push
mov
loopne
and
inc
push
sti
aam
jg
jle
clc
in
mov
imulb
mov
jnp
push
in
loope
test
inc
inc
int
cmp
subb
mov
adc
movsl
lret
add
aas
fwait
inc
push
js
rcrb
mov
fcompl
test
add
jnp
sub
push
cmp
hlt
cmp
cmp
inc
popf
push
sub
in
mov
dec
mov
stos
push
bound
push
or
in
and
mov
in
loope
sar
sbb
pop
adc
iret
mov
rcrl
xor
rcl
cmp
into
loopne
in
adc
sub
fdiv
cmp
fsubl
stos
pop
rorb
dec
or
dec
stc
inc
orb
fidivrs
insb
mov
out
inc
testl
sti
lods
shll
nop
in
scas
and
and
into
add
or
in
inc
inc
xorl
mov
lcall
sub
mov
mov
adc
popf
arpl
mov
arpl
jp
cmp
and
outsb
loop
and
mov
xchg
push
xchg
dec
pop
cmc
repz
loope
pusha
test
pusha
push
inc
ja
mov
lret
sbb
fmul
push
mov
fidivrs
or
js
lock
out
nop
mov
hlt
jb
and
dec
mov
sbb
inc
bound
mov
push
pop
pusha
test
cmp
out
pop
sbb
and
push
and
or
cmp
lret
sub
mov
sbb
cmp
dec
mov
cltd
int
sub
dec
sub
jmp
shlb
cmc
dec
sub
mov
and
test
out
leave
push
out
mov
jno
aaa
sbb
pusha
inc
cs
stos
int
icebp
stos
lods
out
scas
es
mov
xchg
xchg
mov
stc
xchg
sahf
sbb
add
push
cs
mov
xchg
push
pop
test
xchg
test
add
cli
cli
aam
and
inc
xchg
arpl
mov
shll
mov
ljmp
mov
jge
fsubl
fbld
push
mov
jge
add
inc
lock
dec
mov
cwtl
aas
sub
cmpsl
rcll
cmc
ljmp
xchg
or
inc
pusha
adc
or
and
sahf
or
adcb
stos
int
cmp
mov
mov
std
jne
jno
inc
jp
xchg
xchg
xchg
fmul
xor
inc
push
imul
mov
out
call
xor
dec
cmp
or
inc
cmpb
mov
mov
fisubrl
inc
into
and
push
sbb
aad
cmpsb
pop
inc
xor
jbe
ret
daa
cmp
mov
loop
xorl
mov
js
jmp
add
shll
mov
fnsetpm(287
add
gs
stc
and
dec
movsb
push
repnz
push
pop
lds
das
out
scas
clc
scas
sub
mov
adc
mov
jmp
jne
mov
mov
xchg
std
repnz
mov
pop
xor
int
sub
sub
mov
loopne
insb
shll
daa
jmp
push
mov
pop
push
add
dec
mov
idivl
fdivp
in
ss
add
call
mov
rcrl
inc
xchg
pop
jmp
inc
loope
cmpb
or
jecxz
dec
mov
jecxz
jo
cld
dec
mov
int3
sbb
mov
mov
push
test
dec
pop
xor
in
lock
lret
pusha
fsubr
sbb
mov
add
loope
push
mov
into
shl
in
shrl
mov
add
pop
lds
scas
into
loopne
imul
jns
mov
pop
and
push
xor
cmp
push
pop
aaa
fisubl
mov
gs
cmp
jl
xor
lcall
mov
nop
lds
iret
in
jo
sub
fcmovb
sub
imul
jp
lret
and
int
imul
pop
dec
xchg
out
jle
dec
xchg
mov
adc
sbb
pop
stos
inc
rorl
mov
pop
xchg
mov
xchg
movsb
imul
xchg
inc
notl
push
pop
cs
cmp
insb
std
mov
imul
mov
test
orl
mov
addb
aas
outsb
sbb
or
fldl
std
pop
rcrl
insl
xor
popl
xchg
in
stos
push
jecxz
cld
pop
nop
das
mov
or
xchg
mov
icebp
pop
aam
or
xor
fistpll
and
bound
pop
mov
mov
jno
fs
dec
dec
xor
xchg
filds
mov
test
les
stos
sub
call
sbb
xor
inc
pop
and
xor
add
cld
jbe
mov
xlat
insb
jecxz
cmpb
push
and
or
dec
cwtl
cmp
xchg
ret
and
or
inc
and
xor
sub
push
sub
iret
ret
adc
and
xchg
jp
mov
dec
test
mov
pusha
cwtl
int3
int3
xor
leave
push
jl
dec
clc
xchg
add
in
lock
hlt
sub
adc
gs
cltd
push
lcall
dec
mov
bound
and
xchg
fdivrp
jmp
xor
add
push
inc
inc
sbb
lret
in
ljmp
int3
nop
cmpsl
sub
pop
cmpsl
xor
fs
lods
or
jge
or
mov
les
pusha
jbe
pop
adc
xlat
fst
dec
shll
xchg
lret
cli
jl
inc
jge
mov
out
adc
mov
inc
aaa
jo
stos
push
push
loope
test
icebp
sbb
dec
mov
test
iret
jge
mov
push
js
inc
sti
pop
outsb
movl
lret
rcrl
adc
mov
hlt
push
add
push
mov
movsl
and
or
movsl
mov
mov
test
fsubl
jp
adc
sbb
jge
test
xchg
outsb
jae
inc
jmp
sub
js
mov
call
stos
sbb
imul
aas
mov
jg
rclb
add
push
lock
ds
je
loope
pop
mov
mov
fcoml
jb
movsl
sbb
ret
jnp
push
and
in
mov
out
cmp
into
mov
lcall
or
loopne
pop
pop
pusha
dec
cmpl
cltd
mov
stc
neg
shlb
mov
dec
negb
lcall
aam
jae
js
ljmp
and
popa
data16
popf
lods
dec
push
fsts
ja
xor
jmp
scas
popf
scas
iret
call
push
sti
pop
jge
mov
int
mov
out
xchg
push
inc
loope
push
cmp
and
cmp
pop
and
es
loope
jl
fucomip
popa
call
popa
je
ret
cmpsb
and
test
mov
mov
xchg
test
sbb
mov
pop
jle
stos
sub
ret
and
jl
adc
pop
ret
mov
enter
xchg
pop
push
gs
inc
test
jge
sbb
cmc
or
push
pop
je
enter
repnz
les
stos
sub
movsb
mov
flds
lods
imul
test
out
inc
jns
inc
test
inc
sbb
dec
dec
jge
fidivrl
sub
or
gs
mov
ds
push
lds
jl
mov
adc
cs
and
or
loopne
xor
dec
out
pop
jg
or
inc
xchg
sub
scas
nop
leave
add
lret
filds
test
ret
pushf
insb
stc
sbb
adc
negl
jmp
cmpb
or
xchg
icebp
mov
push
xor
xchg
push
mov
sub
outsb
dec
mov
sub
insl
mov
cmp
mov
push
jl
and
dec
cs
xchg
cmp
xor
add
std
int3
std
cmpsl
les
and
rol
fs
imul
sahf
ret
call
xchg
and
jno
insl
sarb
jns
das
stos
js
jnp
mov
je
cli
mov
mov
dec
and
mov
fldl
dec
lds
xor
push
daa
dec
mov
sbb
cs
jmp
lods
ss
je
out
int3
arpl
hlt
insb
xlat
mov
mov
xchg
mov
cmp
iret
nop
inc
inc
adc
mov
ret
stos
in
jno
pop
lods
pop
add
pop
rclb
into
movsb
aad
jmp
ljmp
sub
popa
pop
xor
pop
inc
icebp
inc
sarl
in
xchg
movsb
inc
sarb
cltd
repnz
testb
mov
cmp
inc
pushf
xor
push
insb
jecxz,pn
jp
enter
setb
inc
adc
mov
subb
cltd
dec
ljmp
addr16
add
pop
icebp
and
lods
ljmp
test
inc
nop
xchg
xchg
shrl
out
ja
movnti
xor
sbb
arpl
enter
mov
cmpsl
xchg
xor
mov
nop
dec
add
add
call
movsl
jecxz,pt
dec
mov
and
mulb
lods
fwait
cmovne
movsl
and
xchg
repz
scas
pmuludq
cltd
push
popf
dec
test
scas
out
bound
jmp
jo
mov
fnstenv
cli
lock
lds
sti
shll
les
in
cmpsb
lcall
cmpb
cmpsb
enter
xor
stos
push
or
lahf
and
sub
lods
mov
add
or
insb
mov
ss
sub
fucomi
stc
cltd
jmp
jle
sarb
push
and
lret
les
int
mov
mov
push
xor
mov
pop
nop
xchg
jne
imul
rdmsr
lods
imul
push
cmpsb
iret
add
out
sarb
jnp
jne
pop
test
arpl
movsl
clc
enter
imul
mov
popf
xchg
ret
add
div
loopne
shlb
pusha
add
mov
nop
xchg
das
adc
mov
mov
jns
push
pop
inc
push
jo
adcl
outsl
sub
jae
popa
ss
fcoms
lods
test
xor
insb
enter
mov
or
out
mov
adc
das
add
out
dec
mov
cs
mov
mov
rorl
xchg
pop
jg
cmp
xor
repz
pop
movsl
jg
inc
mov
fdivrl
mov
das
push
sbb
inc
cmp
test
mov
in
outsl
push
insl
inc
cmp
in
mov
lret
xchg
push
leave
xor
std
adc
fs
repz
loopne
lock
mov
out
sbb
add
aas
push
xchg
xchg
push
push
dec
sbb
fsubs
insl
das
jg
gs
push
inc
test
repz
fstps
and
pop
cmp
mov
sbb
sar
sub
add
cs
js
inc
xor
pop
mov
push
inc
xchg
sub
pop
add
mov
popa
mov
jle
popf
push
sub
add
push
mov
xlat
rolb
shrl
repz
out
das
sub
mov
sub
gs
int3
imul
jl
lret
mov
cmp
adc
adc
xor
and
cli
and
jmp
lret
fmuls
mov
xor
nop
push
dec
dec
add
dec
lea
loop
test
imul
xchg
fwait
repnz
pop
jno
pusha
leave
test
push
mov
pop
je,pt
sbb
rcrb
mov
sahf
leave
jecxz
add
inc
sbb
mov
into
jmp
lret
aad
jnp
pop
sahf
lret
xor
aad
fwait
mov
in
leave
scas
xchg
jp
mov
idivb
pusha
aaa
fstl
jb
add
pusha
jae
jmp
fwait
xchg
incl
je
push
outsb
jns
repz
jbe
lcall
mov
lret
in
sbb
or
cmp
stos
clc
jle
adc
cmp
push
rorb
mov
insb
xchg
mov
cmp
push
jne
adc
push
xor
into
ror
xor
imul
mov
sbb
inc
shlb
push
pop
int3
lcall
cli
xor
jmp
and
jge
fstpl
leave
xchg
adc
mov
pop
les
adc
xchg
push
cli
dec
loope
mov
pop
push
pop
mov
dec
mov
je
or
lahf
and
adc
cmp
or
testl
fs
pop
inc
cmp
jb
or
xchg
shll
mov
or
jle
test
movsb
test
mov
adc
add
in
jge
mov
sahf
jmp
pop
inc
shll
push
and
jbe
lahf
xchg
sub
xlat
dec
xchg
pushf
pop
lds
adcb
xor
and
stos
cmc
mov
lret
xchg
ds
les
or
ret
lahf
shrb
stos
mov
sbbb
jne
mov
sahf
mov
leave
jnp
jbe
dec
mov
pop
inc
push
jge
orb
daa
flds
push
xor
pop
fs
cmp
insl
xlat
xchg
fdivl
in
sub
les
mov
jno,pt
add
enter
jecxz
lcall
mov
pop
repnz
aam
in
inc
je
cmp
mulb
and
mov
jb
imul
pop
push
in
je
mov
pop
leave
cltd
clc
icebp
mov
lods
adc
mov
aaa
pop
pusha
jmp
out
rorl
leave
ret
mov
sbb
adc
icebp
clc
sarl
lret
ja
cmp
loop
and
dec
xchg
pop
adc
inc
sub
push
dec
into
push
jmp
orps
fs
xor
adc
sbb
loopne
and
inc
inc
inc
or
rcll
in
lcall
call
adc
pop
pop
mov
stos
inc
inc
movsl
inc
fisttpll
scas
push
jno
clc
xor
jl
in
sub
pop
xor
sbb
mov
fwait
jno
and
dec
pop
in
adc
sbb
and
int3
ljmp
cmc
js
jl
mov
push
jne
divl
arpl
fcomip
pop
jno
and
cmp
mov
mov
sahf
in
mov
mov
dec
jns
cli
xor
daa
lods
rolb
jp
mov
add
sub
sub
inc
andb
fsubs
jo
outsb
ret
mov
jle
stos
lods
loop,pt
fmulp
cmpsb
mov
jp
lds
cmpb
dec
aaa
xor
cmc
jb
sbb
xchg
or
sub
enter
stc
mov
cmp
adc
push
imul
sti
pop
adc
cmpsb
push
mov
sbb
inc
cmp
push
cs
rcrb
mov
xchg
add
inc
inc
fcomps
inc
fiaddl
loopne
movsl
lahf
ret
dec
mov
inc
inc
in
mov
inc
cwtl
arpl
cltd
push
pop
iret
daa
outsl
stos
rcrl
cmp
sbb
xor
ss
int
sub
sub
pop
pushf
mov
hlt
aaa
mov
push
mov
cmp
icebp
push
lea
jne
inc
daa
hlt
stc
sub
xlat
scas
nop
cmp
cld
movsl
scas
push
fs
inc
das
popf
daa
push
and
and
mov
popf
mov
xor
mov
popf
les
cli
dec
jb
stos
or
pop
mov
into
mov
shl
clc
push
cmpsb
inc
dec
sbb
orb
inc
pop
mov
sub
insb
xchg
xor
mov
fisubs
pop
fistps
sahf
sub
sub
inc
cmp
and
push
jno
mov
dec
jecxz
leave
inc
addr16
mov
orb
loope
inc
andb
inc
shrb
mov
or
cmp
cmpl
mov
in
xchg
cmpl
test
repz
push
or
out
addl
cmp
and
test
sub
mov
mov
mov
imul
ljmp
mov
jle
testb
cmpsl
mov
call
pop
leave
sbb
xor
pusha
lods
cmp
pcmpgtw
ror
xchg
push
sahf
push
cmp
hlt
hlt
incb
add
inc
or
stos
and
shll
out
les
inc
fsubrs
push
inc
test
out
or
pop
stos
adc
jl
lods
dec
and
js
xchg
jne
aad
xor
adc
or
jae
jle
sub
lea
fstl
sub
iret
cmp
repnz
ja
add
adc
pop
out
stc
push
arpl
sbb
xchg
enter
insb
pop
arpl
rol
pop
xor
jno
sahf
fs
mov
jnp
in
mov
out
scas
stc
daa
popa
aas
addb
push
fcompl
jns
call
jmp
mov
push
aaa
out
pop
ljmp
xchg
loopne
pop
pop
sbbb
scas
mov
notb
test
fists
xchg
jb
push
push
sbb
xchg
repnz
out
jbe
xchg
inc
add
sub
mov
repnz
adc
adc
mov
orps
push
fucomi
pop
je
cmc
test
or
ret
cli
test
aam
add
pop
in
ret
or
sbb
inc
adc
outsb
inc
iret
loop
leave
fisubs
push
add
adcl
xchg
test
xchg
push
lock
das
push
inc
out
adc
dec
sub
mov
cld
lahf
mov
add
inc
jp
inc
cmp
xchg
cmp
ret
or
push
inc
xchg
mov
das
fsincos
jne
jle
in
out
imul
mov
adc
addr16
xchg
clc
stos
test
andb
insb
pop
pop
pop
add
out
push
pop
xchg
dec
xor
lods
popf
or
xor
push
push
and
push
push
in
loop
stos
inc
xor
pop
adc
les
xor
cmp
mov
out
push
shrl
test
push
adcl
xor
add
pop
int
jae
fistps
mov
sbb
ficoms
pop
and
aas
out
inc
insl
pop
xchg
and
push
cmpsb
scas
xchg
pop
cmp
mov
adc
pop
cld
addr16
cmpsb
pushl
icebp
cmpl
add
aaa
jne
pusha
scas
ret
fcompp
setne
push
xchg
ficoms
mov
lahf
fcompl
mov
sbbb
mov
or
lea
push
mov
icebp
scas
scas
dec
mov
aam
mov
mov
mov
lret
xor
pop
es
adc
shlb
sub
inc
das
addr16
cmp
pushf
test
repnz
inc
adc
inc
cmp
rcr
dec
loopne
xor
pop
push
enter
nop
push
adc
test
pusha
call
movsb
scas
das
lds
les
mov
and
xlat
push
xchg
push
iret
enter
and
jl
insb
jbe
cltd
pop
and
imul
sahf
loopne
mov
mov
cltd
pop
fldenv
mov
pop
and
sbb
pop
add
aas
add
ljmp
fnsave
movb
add
add
add
push
pusha
add
scas
dec
dec
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
cld
test
add
mov
