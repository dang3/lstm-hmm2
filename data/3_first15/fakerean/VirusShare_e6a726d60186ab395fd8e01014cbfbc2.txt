jno
add
divb
rorb
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
mov
jmp
cmpl
jne
cmpl
jge
cmpl
jne
cmp
je
cmp
je
ret
push
lea
call
movl
pop
jmp
push
mov
push
push
incl
mov
mov
cmp
push
mov
je
mov
mov
mov
pushl
mov
pushl
mov
call
pop
leave
ret
push
mov
sub
push
push
push
mov
xor
cmp
je
mov
neg
sbb
pop
and
pop
add
pop
leave
ret
lea
push
push
lea
call
test
pop
pop
jne
lea
push
mov
call
push
push
call
test
js
lea
call
mov
test
mov
je
call
test
je
mov
test
je
mov
push
push
lea
push
push
call
mov
mov
push
push
push
push
call
lea
call
pushl
call
pop
pushl
movl
call
pop
pushl
call
pop
jmp
mov
pushl
mov
pushl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
cmp
ja
add
cmp
jb
mov
sub
jne
mov
test
mov
mov
je
mov
push
mov
call
addl
pop
mov
pop
ret
mov
mov
push
push
call
test
jne
pop
xor
pop
ret
push
mov
and
sub
push
push
mov
mov
cmp
lea
push
mov
jb
mov
test
je
push
lea
push
lea
push
push
push
movl
call
add
test
je
mov
cmp
jb
mov
mov
push
add
push
push
push
push
lea
push
mov
call
test
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
push
push
push
push
lea
movl
call
add
test
js
mov
mov
lea
push
push
push
push
call
add
cmp
ja
xor
mov
lea
push
push
push
push
call
mov
mov
mov
mov
add
sub
push
push
mov
push
mov
push
lea
push
push
call
test
js
mov
movl
movl
mov
test
je
mov
push
mov
call
lea
call
mov
test
je
mov
mov
push
call
mov
pop
pop
pop
mov
pop
ret
push
push
call
add
jmp
mov
mov
jmp
push
mov
and
push
push
push
mov
push
mov
push
pushl
pushl
push
call
test
mov
jne
test
js
mov
mov
call
call
mov
mov
call
push
mov
call
mov
orl
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
mov
xor
cmp
je
add
add
cmpl
jne
test
mov
mov
je
lea
push
call
mov
add
test
mov
je
test
push
push
jbe
xor
mov
mov
mov
push
call
mov
add
test
je
push
push
push
call
mov
mov
mov
add
add
cmp
jae
mov
jmp
xor
pop
pop
pop
pop
add
ret
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
jmp
mov
test
je
lea
jmp
mov
test
je
lea
jmp
mov
test
jne
mov
movl
movl
mov
jmp
mov
test
je
lea
jmp
push
mov
sub
mov
xor
mov
movzbl
push
xor
xor
push
inc
cmp
mov
mov
mov
mov
je
jg
cmp
jle
cmp
jg
cmp
jge
cmp
je
cmp
je
add
cmp
ja
mov
push
call
push
mov
call
mov
andl
xor
mov
pop
xor
pop
call
leave
ret
sub
je
dec
je
dec
jne
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
mov
push
call
push
jmp
cmp
jge
cmp
jg
je
cmp
je
jle
cmp
jg
push
pop
mov
jmp
push
call
add
mov
jmp
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
cmp
jle
sub
cmp
jbe
mov
jmp
je
sub
je
dec
dec
je
sub
je
dec
jne
push
call
jmp
movzbl
jmp
mov
push
call
push
mov
call
addl
add
mov
mov
cmp
je
cmp
jne
mov
jmp
cmp
je
jmp
xor
push
call
pop
jmp
cmp
je
cmp
jne
push
push
pop
jmp
lea
sbb
and
adc
cmp
insb
and
adc
cmp
hlt
fs
adc
add
add
push
push
push
push
push
push
push
push
push
push
push
add
add
add
add
and
push
mov
push
call
test
je
mov
push
lea
call
mov
neg
sbb
and
je
lea
mov
call
test
jbe
xor
mov
call
pop
ret
xor
jmp
cmpl
je
xor
inc
ret
push
testb
jne
call
pop
ret
mov
mov
mov
mov
mov
mov
shr
and
dec
je
xor
dec
je
dec
je
shr
and
cmp
sete
pop
ret
inc
pop
ret
push
mov
push
testb
push
push
push
mov
jne
mov
call
xor
cmpb
pop
setne
pop
pop
mov
leave
ret
mov
test
je
mov
add
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
cld
mov
add
jl
insb
test
je
mov
lea
push
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
mov
push
push
push
lea
push
push
call
test
js
mov
mov
push
push
mov
call
mov
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
pop
pop
pop
xor
call
add
ret
test
jne
inc
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
test
push
mov
mov
je
push
call
mov
add
mov
mov
test
js
mov
cmp
je
cmpl
je
mov
cmp
jne
cmpl
jne
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
test
mov
je
test
je
push
call
add
xor
pop
pop
pop
add
ret
lea
call
test
je
mov
add
addl
mov
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
cmpl
push
push
push
movl
je
mov
mov
lea
push
lea
push
call
mov
test
js
mov
cmp
ja
test
je
mov
mov
mov
mov
lea
push
mov
push
push
push
push
push
movl
call
test
js
mov
mov
test
je
mov
add
add
sub
sub
add
adcl
test
jne
and
adc
inc
and
cmp
mov
jae
sub
push
mov
call
cmpl
jne
mov
pop
pop
pop
mov
pop
ret
mov
mov
jmp
pop
pop
xor
pop
mov
pop
ret
mov
test
jne
or
ret
test
push
mov
jbe
lea
push
mov
movzwl
movzwl
cmp
jae
movzwl
movzwl
sub
cmp
jb
add
dec
jne
pop
mov
cmpl
jge
push
call
pop
pop
ret
xor
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
xor
cmp
push
je
lea
mov
mov
add
call
cmp
mov
jne
xor
mov
call
mov
mov
cmpl
jge
mov
push
push
push
call
add
mov
call
mov
mov
sub
cmpl
jge
push
call
mov
add
mov
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
push
push
mov
cmp
push
mov
jge
mov
sub
mov
jns
lea
test
jl
lea
lea
cmp
jge
mov
testl
jne
cmpw
jne
sub
sub
test
jge
cmp
jge
mov
lea
push
push
mov
call
test
jl
cmpl
mov
jg
mov
sub
jns
test
je
cmpw
je
pop
pop
pop
xor
pop
add
ret
lea
lea
lea
mov
cmpl
jge
mov
testl
jne
movzwl
test
je
mov
movw
sub
sub
sub
test
mov
jge
mov
jmp
xor
lea
lea
test
jle
cmpw
je
mov
movw
movzwl
mov
mov
push
mov
push
call
mov
add
add
add
cmp
jl
mov
jmp
lea
lea
lea
mov
testl
jne
sub
sub
test
jl
jmp
mov
push
call
add
test
je
jmp
mov
cmpw
je
jmp
lea
push
push
call
test
mov
js
push
call
mov
mov
jmp
add
call
mov
mov
jmp
add
push
mov
call
mov
mov
jmp
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
test
je
push
push
call
add
mov
mov
test
je
mov
testl
je
lea
call
push
push
lea
call
test
je
mov
movl
mov
mov
mov
lea
push
mov
push
mov
push
push
push
push
push
call
test
js
cmpl
je
lea
call
mov
pop
pop
pop
pop
pop
ret
push
push
push
mov
lea
mov
push
call
xor
cmp
jne
mov
push
push
pushl
mov
push
call
cmp
je
pushl
mov
pushl
call
mov
call
pop
pop
pop
ret
cmp
jne
pushl
mov
push
mov
call
test
jne
pushl
mov
call
test
je
mov
test
lea
je
lea
andl
jmp
mov
push
mov
call
jmp
mov
mov
push
call
cs
add
adc
insb
cmp
mov
mov
push
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
mov
imul
mov
mov
imul
mov
mov
and
or
jne
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
ret
jmp
mov
push
call
xchg
mov
ja
ret
mov
mov
test
jbe
dec
mov
mov
test
je
mov
decl
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
jne
mov
mov
cmp
jne
call
test
jne
test
jne
pop
pop
ret
mov
mov
mov
call
test
jne
mov
mov
cmp
sbb
pop
pop
ret
mov
mov
mov
call
test
js
mov
add
xor
and
xor
pop
pop
ret
call
jmp
xor
mov
xor
and
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
jbe
mov
cmp
je
mov
cmpl
jae
xor
ret
testb
je
xor
ret
mov
mov
incl
test
je
mov
incl
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
cmpl
je
push
push
xor
push
jmp
lea
test
movl
jne
mov
lea
push
push
push
call
add
test
js
mov
test
je
mov
mov
mov
mov
add
push
add
push
xor
push
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
lea
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
addl
mov
add
je
xor
test
js
mov
mov
mov
mov
sub
je
sub
je
jmp
test
jne
xor
pop
pop
pop
pop
pop
ret
int3
int3
sub
mov
push
push
push
xor
mov
push
lea
mov
call
lea
call
mov
lea
mov
mov
xor
cmp
je
mov
lea
push
push
mov
mov
call
mov
add
test
js
cmp
jne
mov
mov
mov
mov
cmp
jge
sbb
add
add
js
lea
lea
call
test
je
lea
call
test
je
test
js
mov
mov
lea
push
mov
call
lea
push
call
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
movl
lea
call
test
jne
lea
call
test
jne
mov
mov
mov
mov
cmp
jne
mov
cmp
jg
lea
call
mov
lea
push
lea
mov
mov
movl
call
push
lea
lea
call
mov
add
test
js
mov
test
jne
mov
test
jne
xor
jmp
mov
mov
push
lea
call
push
lea
call
cmpl
jne
add
jmp
movl
jmp
sub
cmp
ja
movzbl
jmp
mov
jmp
lea
call
mov
mov
lea
push
lea
mov
movl
call
push
lea
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jns
jmp
mov
jmp
nop
fcompl
adc
pop
adc
cmpsb
inc
add
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
add
pop
inc
adc
jb
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
lea
push
push
movl
movl
call
add
test
js
mov
mov
cmp
je
mov
xor
mov
pop
pop
pop
add
ret
push
mov
call
add
test
je
movl
movl
mov
test
mov
je
mov
push
mov
call
test
js
mov
cmp
jne
lea
mov
mov
lea
push
push
mov
movl
call
add
test
js
mov
mov
lea
push
add
movl
mov
call
test
je
xor
test
js
mov
cmpl
je
mov
pop
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
mov
push
mov
cmpl
je
mov
cmp
je
cmp
je
mov
lea
push
push
mov
mov
call
add
test
js
mov
mov
cmp
je
cmp
je
mov
mov
xor
pop
pop
pop
add
ret
mov
push
call
add
cmp
je
movl
cmp
mov
je
push
call
add
cmp
je
movl
movl
mov
cmp
mov
je
add
call
cmp
je
mov
mov
mov
cmp
mov
jne
mov
xor
test
js
mov
mov
mov
mov
sub
je
sub
jne
movl
mov
lea
push
push
push
mov
call
add
test
js
mov
add
call
cmp
je
mov
mov
cmp
mov
mov
jne
mov
mov
xor
test
jns
jmp
cmp
je
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
xor
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
sub
sar
push
mov
mov
mov
movl
movl
call
xor
add
cmp
je
mov
mov
lea
mov
lea
movl
push
push
movl
mov
mov
call
xor
cmp
mov
je
add
mov
test
mov
mov
jne
test
je
mov
test
jne
test
jne
test
je
mov
mov
cmpl
je
mov
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
mov
cmp
je
mov
lea
mov
mov
push
push
push
mov
call
add
test
js
mov
jmp
mov
cmp
je
mov
mov
mov
push
push
push
call
mov
add
test
mov
jne
pop
mov
pop
pop
pop
add
ret
lea
push
push
inc
adc
push
inc
adc
push
inc
adc
ja
adc
pop
adc
add
add
add
add
add
add
in
and
sub
mov
xor
mov
push
mov
push
mov
push
mov
push
pushl
push
push
call
test
mov
jne
mov
test
js
mov
mov
call
mov
call
mov
mov
call
push
mov
call
cmpl
mov
je
mov
lea
mov
mov
lea
push
pushl
xor
push
mov
mov
mov
movl
movl
mov
call
cmpl
jne
testb
jne
testb
jne
mov
mov
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
push
movl
call
movzbl
push
push
mov
call
add
mov
jmp
push
mov
mov
test
je
mov
push
push
pushl
push
call
sub
je
dec
je
dec
je
pop
ret
orl
mov
mov
pop
ret
push
mov
push
mov
andl
test
je
mov
lea
push
push
push
call
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
push
push
push
call
add
mov
push
push
call
push
call
mov
add
cmp
je
push
push
call
add
pop
mov
pop
and
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
push
call
mov
push
call
add
cmp
jne
mov
push
call
add
xor
pop
pop
pop
pop
ret
cmp
je
cmp
je
mov
movl
mov
push
mov
mov
call
add
test
je
mov
mov
push
call
movl
movl
lea
add
mov
push
mov
movl
movl
movl
call
test
mov
je
mov
mov
push
call
mov
mov
push
call
mov
add
push
mov
call
mov
push
call
add
lea
call
mov
push
call
add
xor
pop
pop
pop
pop
ret
mov
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
lea
mov
push
push
call
cmpl
je
mov
mov
push
mov
call
add
cmpb
jne
mov
push
call
add
cmpl
je
test
jne
cmpb
je
movl
mov
pop
pop
pop
ret
mov
push
push
call
test
js
test
je
jmp
pop
pop
xor
pop
ret
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
pushf
xchg
inc
add
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
jne
mov
movl
movl
mov
jmp
sub
mov
xor
mov
push
mov
mov
test
push
mov
jne
add
orl
push
mov
push
xor
cmp
lea
mov
mov
mov
movl
movl
mov
mov
je
push
push
push
call
add
test
jne
cmp
mov
je
testb
je
mov
push
push
lea
call
test
je
movl
lea
mov
call
test
je
lea
call
mov
mov
mov
mov
push
call
push
lea
movl
call
xor
cmp
je
movb
mov
mov
push
push
mov
push
lea
push
push
push
push
push
xor
lea
call
cmp
pop
mov
pop
jne
mov
test
jne
test
jne
mov
mov
pop
pop
xor
call
add
ret
movb
jmp
push
mov
mov
push
call
test
je
mov
andl
mov
lea
mov
test
jne
mov
mov
xor
pop
ret
mov
jmp
push
push
push
pushl
lea
pushl
call
test
jne
or
pop
pop
pop
ret
mov
xor
cmp
je
mov
mov
mov
pushl
mov
mov
call
test
jne
inc
lea
cmpl
jne
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
test
je
mov
and
test
jne
test
jbe
xor
lea
mov
test
mov
je
cmp
je
add
add
cmp
jb
test
je
mov
test
jne
xor
pop
pop
pop
pop
ret
movzwl
test
jbe
xor
lea
lea
cmp
je
add
cmp
jae
jmp
lea
pop
pop
pop
pop
ret
mov
jmp
xor
jmp
test
jl
lea
pop
pop
pop
pop
ret
test
jbe
movl
lea
cmpl
je
mov
push
mov
call
test
jne
mov
add
add
cmp
mov
jb
pop
pop
pop
xor
pop
ret
push
mov
push
push
mov
push
pushl
mov
push
push
mov
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
andl
mov
mov
mov
movl
mov
movl
push
mov
call
pop
pop
leave
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
mov
mov
mov
cmpl
mov
je
mov
mov
xor
mov
mov
mov
lea
push
push
mov
push
lea
call
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
cmp
mov
mov
lea
jne
mov
imul
add
sar
mov
shr
add
mov
imul
mov
sub
add
cmp
mov
jne
mov
mov
imul
add
sar
mov
shr
add
imul
sub
test
mov
jne
xor
cltd
idiv
imul
test
mov
jne
xor
cltd
idiv
pop
pop
imul
mov
mov
mov
pop
ret
push
call
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
int3
int3
push
mov
and
mov
sub
cmpl
push
mov
push
push
jge
mov
xor
cmp
lea
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
mov
jne
mov
push
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
cmp
jne
xor
mov
mov
call
cmp
jne
mov
lea
push
mov
call
mov
push
mov
push
push
push
call
add
test
js
mov
mov
push
mov
call
mov
add
lea
call
lea
call
mov
mov
mov
mov
cmp
je
mov
cmp
je
cmp
je
mov
mov
cmpb
jne
xor
lea
push
call
test
je
movl
push
mov
mov
call
mov
cmpl
jge
cmpl
jne
mov
push
push
push
call
mov
test
jne
mov
mov
push
lea
movl
call
push
push
lea
push
push
call
add
test
mov
js
mov
test
jne
mov
lea
mov
call
mov
mov
mov
lea
push
push
call
test
mov
js
lea
push
mov
call
add
push
mov
call
mov
mov
mov
push
push
push
push
push
push
push
call
add
test
mov
js
mov
mov
mov
mov
mov
push
call
lea
call
xor
pop
pop
pop
mov
pop
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
test
je
test
je
mov
push
push
lea
push
push
mov
mov
xor
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
mov
movl
movl
mov
call
mov
cmp
jne
cmp
jne
mov
mov
mov
push
call
mov
test
jne
test
jne
xor
pop
pop
mov
pop
pop
xor
call
add
ret
push
mov
sub
mov
xor
mov
mov
andl
push
push
lea
lea
push
lea
mov
movl
call
call
push
push
push
call
mov
test
pop
pop
je
testl
jne
mov
xor
xor
call
leave
ret
push
call
pop
jmp
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
cmpl
test
testb
inc
add
or
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
test
je
mov
mov
push
call
mov
pop
xor
pop
ret
decl
cmpl
jne
lea
movl
call
lea
call
lea
call
mov
call
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
lea
push
lea
push
push
mov
xor
lea
push
push
push
xor
mov
mov
mov
mov
mov
movl
mov
mov
push
mov
add
fidivs
cmp
je
mov
cmpl
je
lea
push
mov
call
mov
test
js
cmp
mov
mov
mov
mov
mov
mov
mov
je
mov
lea
push
push
push
mov
call
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
mov
cmp
jne
cmpl
je
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
call
jmp
mov
add
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
cmpl
lea
push
movl
je
mov
test
mov
mov
je
lea
push
call
add
test
je
lea
call
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
lea
call
pop
pop
mov
pop
pop
jmp
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
test
push
je
push
call
add
test
je
xor
mov
mov
mov
mov
mov
movb
movb
movb
movl
movl
movl
movl
push
movl
mov
mov
push
push
call
mov
test
js
push
mov
lea
test
je
lea
mov
mov
push
push
push
mov
call
test
je
lea
mov
mov
push
push
push
mov
call
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
jne
mov
push
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
xor
pop
pop
leave
ret
mov
call
cmp
je
mov
call
jmp
testb
je
mov
mov
mov
cmp
je
mov
call
cmp
je
push
mov
lea
call
lea
call
cmp
je
mov
lea
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
push
cmpl
push
push
push
push
je
mov
cmpl
jle
cmpl
jle
mov
mov
mov
add
cmp
jge
mov
mov
mov
add
cmp
jge
mov
add
cmp
jge
mov
add
cmp
jge
mov
cmp
jl
mov
cmp
jl
mov
add
cmp
jg
mov
add
cmp
jg
mov
xor
push
mov
call
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
mov
push
mov
call
pop
movl
movl
movl
movl
mov
pop
pop
pop
pop
ret
int3
int3
int3
sub
push
push
mov
push
push
call
add
test
je
mov
test
mov
movl
mov
je
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
push
call
mov
mov
mov
add
mov
call
mov
addl
mov
sub
mov
sub
mov
add
add
add
cmp
jg
mov
mov
add
cmp
jg
mov
mov
mov
neg
neg
test
je
xor
add
test
je
xor
flds
add
mov
add
mov
sub
fstpl
mov
flds
mov
add
fstpl
push
mov
call
fildl
fildl
mov
add
fchs
fxch
fchs
fstpl
fstpl
push
call
mov
add
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
push
xor
mov
mov
mov
mov
push
mov
push
lea
mov
mov
mov
call
push
lea
call
mov
mov
sub
mov
sar
push
lea
push
mov
lea
push
mov
lea
push
lea
mov
call
mov
mov
add
test
jne
test
jne
test
js
add
mov
jne
mov
cmp
je
add
cmp
jb
jmp
push
call
add
test
je
movl
movl
mov
mov
test
mov
jne
test
je
mov
push
push
push
call
add
test
js
mov
mov
mov
lea
movl
call
lea
call
mov
test
jne
xor
pop
pop
pop
pop
add
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jl
mov
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
add
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
cld
mov
sbb
push
and
push
mov
mov
mov
xor
lea
mov
movl
movl
mov
mov
push
push
mov
call
mov
cmp
lea
mov
jb
mov
push
mov
add
sub
cmp
mov
mov
pop
jb
lea
mov
push
lea
mov
mov
call
mov
test
jne
test
jne
pop
xor
pop
mov
jmp
inc
add
add
add
xabort
call
add
test
jne
push
call
mov
add
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
mov
mov
cmp
movb
je
cmp
je
mov
mov
mov
push
push
push
movb
mov
mov
call
pop
pop
ret
push
mov
push
mov
cmpl
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
jmp
mov
mov
mov
add
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
mov
and
neg
sbb
inc
ret
push
mov
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
mov
jne
andl
pushl
mov
pushl
call
mov
pop
pop
ret
or
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
lea
add
xor
mov
mov
lea
lea
mov
mov
mov
mov
push
lea
push
movl
mov
call
mov
test
jne
test
jne
xor
add
ret
push
mov
cmpl
ja
push
mov
add
push
mov
call
cmpl
jne
pop
xor
pop
ret
push
mov
mov
lea
push
push
call
test
js
cmpl
jne
push
mov
call
jmp
pop
jmp
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
mov
add
test
je
addl
cmpl
je
pop
pop
ret
mov
movl
call
push
call
add
pop
pop
ret
push
mov
push
mov
mov
mov
push
call
test
je
push
mov
xor
cmp
setne
cmpl
lea
mov
jne
cmpb
jne
mov
mov
mov
mov
call
test
je
mov
push
pushl
pushl
pushl
push
call
pop
pop
pop
ret
orl
jmp
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
xor
cmp
mov
mov
mov
je
mov
movzbl
and
mov
mov
test
jbe
mov
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
mov
xor
add
cmp
jne
addl
subl
mov
jne
mov
mov
mov
andb
cmpl
mov
jne
and
mov
mov
add
cmp
jne
mov
mov
pop
pop
mov
pop
add
ret
cmpl
jne
cmpl
mov
jne
movb
add
cmp
jne
cmpb
jne
add
jmp
cmp
je
mov
call
add
jmp
orl
cmpb
je
mov
call
add
jmp
or
jmp
mov
or
mov
mov
pop
pop
pop
add
ret
mov
call
jmp
mov
test
jbe
mov
lea
mov
add
cmp
je
cmpb
jne
addl
cmp
je
mov
add
subl
jne
mov
mov
andb
jmp
or
mov
jmp
push
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
sub
add
add
push
lea
lea
cmp
je
push
mov
mov
add
lea
nop
test
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
je
mov
mov
push
call
lea
push
push
movl
movl
movl
call
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
mov
add
add
add
cmp
jne
mov
pop
mov
addl
mov
pop
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
inc
add
mov
call
mov
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
call
mov
mov
lea
lea
push
rep
call
mov
fldz
mov
add
fstl
lea
fstpl
push
push
lea
push
push
mov
call
inc
add
add
push
push
call
mov
mov
mov
add
call
cmpl
mov
mov
jne
fldz
mov
fldl
fcom
fnstsw
fstp
test
jne
fldl
mov
fcom
fnstsw
fstp
test
fldl
jne
fld
fadd
fcompl
fnstsw
test
jp
test
fstp
fstp
mov
faddl
fildl
jl
fmulp
sub
fstpl
call
fnstcw
add
movzwl
or
mov
fldcw
fistpll
mov
cmp
fldcw
jae
push
push
call
pop
pop
pop
mov
pop
ret
fldl
fldl
fxch
test
mov
fildl
jl
fld
push
fmulp
lea
fxch
lea
mov
fstpl
fld
fmulp
fxch
fstpl
fld
fmull
fstpl
fmulp
fstpl
call
test
je
fldl
pop
fstps
pop
fldl
pop
fstps
fldl
fstps
fldl
fstps
mov
pop
ret
fldl
fldl
fldl
fxch
jmp
mov
andl
mov
push
pushl
mov
call
pop
mov
mov
xor
pop
ret
push
mov
push
push
xor
cmp
je
xor
pop
leave
ret
cmpl
mov
push
mov
jne
cmp
jne
lea
orb
testb
jne
mov
push
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
push
mov
mov
call
push
pushl
mov
call
test
js
mov
cmp
je
xor
inc
pop
pop
jmp
cmpl
jne
jmp
xor
jmp
push
mov
sub
push
mov
push
push
xor
mov
call
mov
push
lea
call
and
lea
push
lea
mov
movl
mov
call
xor
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
xor
call
push
lea
scas
scas
inc
add
lea
xor
call
and
and
lea
mov
push
mov
lea
movl
movl
popl
in
adc
test
jne
pushl
lea
call
andl
andl
lea
push
mov
lea
movl
movl
mov
in
adc
add
jne
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
call
xor
pop
pop
pop
leave
ret
mov
mov
mov
cmp
sbb
neg
ret
int3
int3
int3
push
mov
and
sub
push
push
push
mov
push
lea
xor
mov
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
mov
cmp
je
call
mov
mov
cmp
je
call
mov
mov
cmp
je
call
mov
push
call
push
call
add
push
call
pop
pop
pop
pop
mov
pop
ret
push
mov
and
push
decl
cmpl
push
je
pop
mov
pop
ret
mov
test
je
push
mov
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
test
push
je
inc
add
mov
outsb
sbb
int
pop
or
lea
mov
call
mov
lea
push
mov
add
call
mov
test
jne
push
push
call
add
test
je
mov
movl
lea
xor
movl
call
mov
test
mov
je
mov
mov
push
call
cmpl
je
mov
mov
mov
mov
call
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
mov
mov
add
test
mov
jne
push
push
call
test
je
test
je
mov
mov
push
call
mov
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
push
push
call
mov
test
je
addl
mov
test
mov
jne
mov
mov
mov
test
jne
mov
add
add
xor
lea
and
xor
call
xor
pop
pop
pop
pop
ret
mov
jmp
lea
movl
mov
mov
push
push
call
testb
jne
mov
mov
mov
push
mov
call
jmp
mov
push
mov
call
jmp
mov
push
mov
call
jmp
call
jmp
mov
mov
xor
push
mov
call
jmp
push
mov
mov
test
je
cmpl
je
push
mov
test
je
mov
push
mov
push
mov
call
test
js
mov
test
je
movzwl
mov
push
pushl
mov
call
mov
cmpl
jne
mov
mov
call
test
jne
mov
mov
call
andl
push
mov
lea
call
mov
mov
test
je
movzwl
mov
push
pushl
call
mov
mov
call
lea
call
jmp
xor
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
xor
lea
push
mov
mov
mov
push
push
call
cmp
jne
push
mov
call
lea
mov
mov
call
mov
lea
call
lea
mov
call
mov
lea
call
push
call
pop
pop
xor
pop
pop
ret
mov
test
push
push
mov
je
push
push
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
push
call
pop
test
je
call
test
mov
je
mov
push
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
xor
cmp
mov
je
mov
mov
push
call
mov
mov
lea
mov
mov
lea
lea
push
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
mov
add
call
inc
add
cmp
je
mov
mov
mov
lea
push
mov
call
mov
cmp
mov
je
push
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
push
lea
push
push
push
movl
movl
mov
call
mov
add
test
jne
test
jne
lea
call
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
add
push
push
call
mov
add
push
mov
add
add
cmpsl
jbe
mov
popf
addr16
mov
add
shrb
push
mov
add
add
mov
mov
rcl
add
mov
movl
add
add
add
pop
movl
popl
jge
add
pop
aam
mov
mov
outsl
call
popf
loop
add
mov
ljmp
jecxz
aam
add
call
add
rolb
roll
add
enter
mov
xchg
mov
mov
xchg
mov
lds
xchg
in
add
scas
mov
pusha
pop
add
jb
leave
mov
jmp
mov
add
aad
fistpll
sahf
popf
mov
mov
add
push
push
push
push
push
lea
push
push
lea
push
push
push
call
add
jno
mov
xchg
scas
add
add
mov
int3
mov
pop
jp
add
mov
add
add
add
lea
in
xchg
add
add
add
add
popa
add
les
roll
loop
add
addb
push
add
jne
aad
addr16
mov
jp
jp
rorb
pop
movl
push
push
push
push
push
push
push
call
loope
je
cltd
in
pusha
add
test
ret
jp
fcmovnb
flds
scas
jne
lret
ja
lcall
stc
pop
ror
add
add
add
imul
fxch
add
xchg
lret
add
aam
add
mov
mov
jns
fdivrs
add
add
add
aam
lcall
sbb
popl
push
push
push
call
jbe
add
add
fwait
lret
int
repnz
sahf
and
add
add
in
jns
add
rolb
add
ret
cwtl
add
push
out
add
jle
into
add
add
sahf
rolb
cltd
add
add
pushf
add
xchg
test
addb
add
add
pop
add
cmpsb
in
xchg
add
add
fisttpl
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
push
call
iret
add
add
add
add
ljmp
mov
push
mov
push
scas
mov
movsb
lods
cmpsl
add
add
out
in
sahf
add
add
cmpsl
adcb
add
mov
add
add
insb
jmp
or
int3
jbe
mov
pop
add
add
sbbb
add
add
pop
push
push
push
call
add
add
lret
add
sti
pop
add
xchg
mulb
fcmovnu
leave
add
in
add
add
add
out
add
in
add
add
push
out
add
subb
aad
mov
add
sahf
pushf
jle
mov
add
mov
add
push
mov
add
testl
or
push
push
push
push
push
push
call
shrb
pop
in
lds
popa
xchg
frstor
sti
push
cmpsb
add
nop
mov
add
add
add
cmp
scas
mov
jae
mov
loopne
bound
xchg
push
ret
insb
jge
fidivs
add
add
add
add
lret
test
jne
add
ret
test
xchg
push
push
add
add
add
movl
sbb
call
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
scas
add
mov
loop
jmp
add
mov
add
jp
add
add
loop
add
mov
cli
mov
add
add
arpl
add
add
movsl
lds
std
clc
rolb
push
add
add
pop
data16
arpl
add
add
add
mov
nop
add
pop
call
push
push
lea
push
push
push
lea
push
push
lea
push
call
hlt
add
lret
add
mov
insb
add
add
xchg
add
sbb
addr16
add
mov
rolb
add
add
out
bnd
into
fisttps
pop
push
mov
add
stos
add
add
clc
add
jmp
push
mov
int3
mov
scas
add
push
mov
xchg
fwait
add
pop
call
push
lea
push
push
push
push
push
push
call
into
aam
jae
xchg
adcb
iret
mov
lcall
add
notl
add
mov
add
cmpsb
mov
xchg
add
jge
testb
faddl
hlt
mov
add
arpl
cmpl
fisubs
xchg
jae
add
jecxz
data16
add
stc
movsl
out
add
pop
jmp
push
push
push
push
push
lea
push
push
call
add
add
lods
ljmp
pusha
add
add
movsl
mov
cwtl
jle
add
add
mov
mov
add
add
add
add
in
add
add
in
add
add
add
add
jecxz
add
add
add
push
mov
addr16
add
pop
ret
mov
mov
push
push
lea
push
call
add
popf
add
data16
popf
ror
flds
add
add
addl
mov
add
add
add
mov
out
add
iret
mov
rolb
mov
pop
mov
ja
push
push
xchg
enter
add
imul
mov
jae
mov
ljmp
loopne
add
jnp
add
pop
add
add
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
add
mov
add
jge
mov
push
add
add
sahf
rcll
add
add
lock
rcrl
icebp
fdivrs
out
pop
add
std
xlat
mov
xchg
mov
add
mov
roll
mov
add
mov
add
pop
xchg
mov
mov
mov
jo
scas
and
xchg
data16
cmpsb
faddl
add
mov
lea
pop
add
mov
push
push
push
push
push
push
lea
push
push
lea
push
push
call
mov
add
add
sub
rolb
lahf
jo
filds
add
add
add
cmpsl
mov
repnz
mov
jp
fbstp
add
iret
jo
xchg
aam
add
in
arpl
mov
movsl
fdivrs
pusha
add
ror
scas
add
add
shlb
int3
lea
pop
xor
push
lea
push
lea
push
push
call
mov
push
xchg
lahf
pop
scas
add
test
cmpsl
add
jae
mov
mov
mov
xchg
addr16
push
stos
add
addb
jb
mov
push
mov
mov
pop
add
add
push
incb
mov
test
insb
jne
add
je
jb
add
mov
add
add
mov
lea
pop
add
push
push
push
push
push
push
call
add
stos
add
fadd
sahf
add
add
add
je
push
add
imul
imul
mov
mov
mov
cmpsl
add
cwtl
lcall
add
mov
push
add
leave
add
add
xchg
add
add
mov
andb
lea
pop
add
push
push
push
call
cli
add
sbb
negb
add
add
in
jl
xchg
arpl
xchg
add
int3
add
push
add
pop
scas
add
add
add
ret
push
add
add
add
stos
add
jo
jbe
mov
ja
lcall
add
add
pop
call
push
push
push
push
push
push
push
call
mov
cmp
leave
add
xchg
loopne
add
add
cmc
lds
pusha
nop
jne
jecxz
add
add
enter
rcl
jp
add
aam
fbld
out
lcall
loope
push
mov
call
adcb
add
xlat
xchg
add
mov
mov
mov
rclb
pop
sti
mov
add
jns
add
test
jns
mov
mov
fmull
pop
sbb
movsb
shll
call
push
push
push
add
add
add
jmp
add
mov
push
lods
fiaddl
leave
add
jle
hlt
cmpl
add
add
add
fiaddl
test
add
add
add
add
pop
add
add
in
lcall
lea
pop
xor
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
xchg
int
stos
icebp
add
jnp
add
add
out
jmp
stos
in
mov
jge
mov
add
mov
add
add
popa
mov
add
mov
test
iret
add
add
les
out
xchg
aam
cmc
add
jno
add
add
mov
lea
pop
add
push
push
add
push
and
add
dec
sub
add
lea
pop
shl
pop
push
push
push
call
bound
jbe
out
add
push
test
out
push
imul
add
cmc
add
je
fcmovnb
add
filds
arpl
lahf
roll
hlt
mov
mov
add
add
jae
popl
lods
add
add
in
add
jno
jl
add
stos
insb
jns
mov
add
xchg
outsl
add
cli
std
out
add
test
pop
pushl
push
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
add
add
in
mov
add
add
add
mov
add
pushf
add
int
push
xchg
scas
mov
out
leave
fstpt
add
std
add
add
add
jne
test
call
test
add
xchg
add
gs
mov
lea
pop
call
mov
movl
push
push
lea
push
call
fs
cwtl
fnstcw
add
scas
add
add
pusha
add
mov
fldt
push
cwtl
clc
cmpsl
mov
enter
add
rcrl
mov
mov
enter
scas
jno
rolb
add
pop
add
xchg
stos
mov
jb
arpl
lods
add
xchg
add
xchg
push
test
add
out
add
add
stc
mov
add
add
loope
int3
mov
add
add
or
lea
push
pushl
push
push
push
lea
push
push
push
push
call
jecxz
jle
test
add
jp
add
insb
add
pop
xchg
add
push
add
nop
add
mov
pushf
add
add
in
lret
faddl
stc
into
add
xchg
pop
imul
mov
add
add
mov
push
add
add
add
add
add
not
add
add
jmp
cltd
imul
ljmp
pushl
push
push
push
lea
push
push
call
add
test
cmpsb
add
scas
add
enter
out
lods
cltd
in
ljmp
jle
add
add
add
lahf
add
add
jnp
add
add
add
repnz
lahf
add
int
jp
jb
add
add
fstpl
test
into
lcall
jnp
nop
push
lahf
loop
add
ljmp
lods
ja
mov
mov
lea
pop
call
push
push
push
push
push
push
lea
push
push
push
call
add
scas
add
add
push
test
mov
movsb
jmp
ja
fiadds
add
call
stos
mov
add
mov
cwtl
add
push
xchg
mov
add
mov
ror
add
ficompl
mov
add
int
stos
int3
jne
mov
add
lahf
add
jp
mov
lea
pop
pushl
push
lea
push
push
push
push
call
mov
sahf
or
pushf
xchg
mov
stos
add
lods
add
add
push
clc
add
js
add
push
add
fcmove
nop
mov
aad
cltd
out
stos
mov
movsb
sti
add
mov
nop
add
mov
add
ficomps
add
leave
add
stos
mov
jno
call
add
pop
pushl
push
lea
push
push
push
push
push
call
add
sahf
in
jp
push
cli
pop
insb
and
add
add
movsl
jb
add
fcmovb
xchg
jns
pop
cltd
add
add
add
mov
mov
imul
add
add
rcll
push
movsb
push
mov
pop
rolb
stc
rcrl
int3
push
mov
stc
jmp
add
jnp
aad
add
hlt
lea
pop
call
push
push
shl
add
inc
add
push
xor
add
lea
xor
xor
sub
lea
sub
pop
shl
pop
push
push
push
lea
push
lea
push
lea
push
call
cwtl
add
mov
leave
add
mov
cld
jp
sarb
add
add
pop
xchg
mov
xlat
mov
add
movsb
fsubr
push
cmp
add
loop
addl
add
iret
add
cwtl
pop
add
andl
add
lcall
andb
xlat
mov
lea
pop
pushl
push
lea
push
lea
push
call
add
add
lcall
cwtl
test
push
mov
icebp
add
xchg
add
loopne
add
jnp
call
fbld
add
add
mov
add
popa
pop
add
add
add
add
add
cmc
add
aad
add
in
cmc
pop
jo
add
ljmp
jecxz
xlat
push
add
add
pop
jns
clc
add
push
mov
lea
pop
call
push
push
push
add
add
push
and
add
ror
add
sub
shl
inc
pop
rol
inc
sub
add
pop
push
lea
push
push
push
push
push
push
push
push
push
call
mov
not
xlat
stc
xchg
movsb
fiadds
mov
fwait
add
add
in
clc
mov
movb
mov
cmpsb
add
leave
mov
jo
int3
mov
int3
repnz
cli
int3
add
add
add
add
mov
add
add
addl
push
add
mov
add
add
fldenv
add
jp
int3
lea
pop
push
push
lea
push
push
call
mov
add
add
add
mov
add
sti
pop
leave
xlat
roll
mov
xchg
xchg
xlat
lods
gs
push
push
add
fisttps
add
test
rcll
fisttpll
jns
fsqrt
clc
add
xchg
add
addr16
rcrb
fcoml
add
add
add
add
add
xchg
stc
add
pop
enter
pusha
or
push
call
push
push
push
lea
push
push
call
lea
add
enter
mov
add
add
js
add
aad
add
outsl
sarl
lret
pop
add
fadds
fdivs
rorb
add
push
add
lcall
flds
pop
mov
scas
add
pop
add
mov
fadds
add
je
add
stos
add
push
mov
rolb
pop
mov
mov
add
out
fdivl
adc
mov
push
push
push
push
call
add
lcall
loope
add
mov
rolb
incb
jle
add
mov
test
repnz
jge
jb
popl
lea
mov
add
mov
mov
mov
pop
insb
jmp
add
push
add
in
mov
mov
add
addl
push
add
jl
cwtl
mov
lea
pop
push
mov
push
lea
push
push
call
add
aad
add
add
xchg
xchg
sahf
jno
hlt
mov
add
cli
icebp
in
shlb
add
fistl
add
add
add
mov
jl
add
lret
mov
add
mov
push
subb
cmc
gs
pop
xchg
mov
add
lods
test
xchg
lret
mov
imul
push
xchg
add
pop
add
add
add
push
push
push
call
pop
outsl
add
mov
add
jmp
add
mov
jns
in
loop
add
ljmp
add
fmul
mov
add
mov
movsl
add
movl
add
add
pop
lret
call
mov
push
add
in
addl
add
fldl
int
add
pusha
or
mov
xor
push
push
push
push
call
push
popl
out
push
jns
cli
add
fldl
add
add
enter
lods
add
mov
add
lods
leave
pop
cmp
fwait
mov
pop
add
pop
repnz
add
push
gs
scas
add
incb
icebp
push
ror
xchg
add
mov
lods
mov
data16
add
push
xchg
jmp
add
add
add
repnz
in
add
cld
scas
mov
lea
pop
add
push
push
push
lea
push
lea
push
push
push
push
push
push
push
call
hlt
cwtl
push
pushf
scas
mov
lcall
jmp
je
add
pusha
fadds
xchg
add
add
mov
add
pop
add
loope
mov
test
pop
add
imul
jp
mov
add
mov
add
popa
mov
mov
push
mov
lea
pop
mov
push
push
push
push
push
call
ja
fildl
enter
add
add
pop
add
je
add
mov
add
mov
fiadds
add
test
jbe
push
add
add
add
sahf
add
pusha
add
cmc
add
jno
jno
jne
add
ret
add
add
add
mov
mov
jno
call
mov
into
add
in
movsb
add
add
add
lea
pop
xor
push
lea
push
push
push
push
push
call
add
add
in
shr
into
fiaddl
in
pop
add
add
pushf
mov
sti
in
int3
into
xchg
add
add
movb
mov
call
pop
add
xorb
add
add
in
add
lret
add
add
mov
iret
call
sahf
add
add
mov
xchg
mov
shrl
nop
add
pop
add
push
push
push
lea
push
lea
push
lea
push
push
call
call
jo
mov
xchg
add
add
ljmp
add
add
shll
lock
add
add
add
add
js
mov
dec
arpl
cld
out
loop
fsubp
imul
add
add
divl
bound
add
pop
mov
push
push
push
lea
push
push
push
push
push
lea
push
push
push
call
add
enter
add
add
popl
loop
sahf
add
in
add
arpl
mov
push
add
xchg
add
add
add
add
hlt
pop
add
movsl
cmpsb
add
pop
shll
mov
add
stos
out
mov
push
lret
ljmp
jmp
lock
xchg
add
mov
sub
or
push
push
push
call
jge
add
jb
int
add
fldlg2
mov
mov
sahf
add
jecxz
in
mov
pop
sbbb
add
mov
push
add
add
imul
imul
add
jecxz
add
in
add
in
mov
shlb
loop
mov
push
mov
add
in
add
add
mov
mov
lea
pop
add
push
push
call
add
push
pop
lahf
lcall
jne
add
add
xchg
add
add
mov
add
mov
add
fldenv
stos
mov
movsb
icebp
add
jecxz
cmc
add
movsl
mov
add
mov
push
xchg
outsl
frstor
add
mov
add
imul
out
in
mov
pop
push
mov
push
push
push
push
push
push
call
push
xchg
jb
add
cltd
idivb
add
xchg
xchg
add
addl
clc
lods
std
mov
add
fwait
sti
jnp
fwait
addb
pop
add
add
aam
add
std
pushf
jecxz
imul
add
lret
add
add
add
popa
jecxz
add
add
cmpsl
aad
mov
fldl
xchg
add
mov
push
cld
lea
pop
xor
push
lea
push
push
push
push
push
push
push
call
fs
add
add
outsl
add
add
aad
mov
add
add
lds
add
testb
add
add
movsl
mov
push
mov
mov
add
add
add
fdivs
add
cld
add
add
add
add
xchg
mov
lea
pop
add
push
lea
push
push
lea
push
push
push
call
add
iret
mov
add
xorb
aad
add
test
mov
xchg
add
add
std
lods
lcall
fiadds
js
lods
stos
add
pop
mov
jns
stos
cmc
mov
ljmp
mov
add
xchg
add
xchg
xchg
add
lds
sti
mov
lea
pop
sub
pop
rep
push
push
push
push
push
call
js
mov
add
jecxz
sahf
add
add
arpl
addb
leave
add
add
cltd
rcr
add
out
add
add
insb
add
test
add
pop
xchg
xchg
popf
lahf
add
add
add
add
bound
out
xchg
add
hlt
lea
pop
pop
mov
add
push
push
call
push
lcall
stos
mov
push
fiaddl
adcb
imul
add
pop
add
imul
popa
loop
rolb
add
jecxz
add
add
add
les
xchg
mov
mov
jns
ljmp
add
cli
add
push
stc
xchg
add
add
mov
popa
or
ret
add
add
add
mov
xor
push
push
push
lea
push
push
push
push
call
leave
add
push
jmp
mov
addl
mov
imul
add
add
add
test
mov
icebp
pop
push
out
add
aad
add
mov
xchg
xchg
add
shll
sar
pushf
add
add
mov
hlt
add
cmc
push
mov
les
push
cmp
repnz
shll
push
push
push
push
push
lea
push
push
call
out
add
add
ret
bound
add
popl
jle
fldcw
add
add
add
add
fnstenv
test
je
add
insb
jle
add
xchg
jge
mov
lahf
jbe
add
mov
jp
add
lods
aam
mov
lea
pop
mov
xor
push
push
push
push
lea
push
push
push
push
call
rcrb
add
sahf
jle
lret
orb
add
test
push
jns
jb
add
pushf
add
lahf
imul
fmuls
add
cltd
mov
movsl
faddl
push
xlat
call
add
add
pop
add
popf
add
pop
scas
cltd
jae
mov
push
xchg
add
add
pop
add
push
push
call
test
loope
add
mov
push
add
mov
jns
pop
movl
add
mov
add
jb
push
faddl
bound
mov
roll
bound
mov
cltd
add
iret
add
xchg
aam
popf
je
add
loopne
add
add
xbegin
fidivs
arpl
add
push
add
add
mov
cmpsl
loope
add
pop
add
mov
push
push
xor
xor
push
sub
add
sub
shr
sub
sub
rol
ror
pop
sub
shl
sub
not
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
call
movsl
rorb
rcrl
add
lret
andl
fwait
add
add
aad
add
cmpsl
loopne
cld
mov
cmpb
mov
test
add
add
add
push
les
add
in
add
add
icebp
test
arpl
fsubrp
add
out
int3
lea
pop
pushl
call
push
lea
push
lea
push
push
push
push
push
push
lea
push
push
call
loope
pushf
call
add
xchg
add
test
bound
mov
addl
popl
mov
nop
shrl
repnz
jecxz
xchg
mov
rolb
add
ljmp
add
into
add
add
fs
add
mov
bound
pop
fwait
popa
mov
mov
push
bound
pop
push
push
push
xor
add
push
and
add
not
sub
ror
sub
add
pop
not
pop
push
lea
push
push
call
jno
add
push
cltd
add
hlt
pop
xchg
mov
aad
idivl
pop
jge
test
add
data16
les
fcomip
add
mov
add
add
std
add
push
addb
mov
push
add
popa
mov
lret
fwait
add
jo
add
cmpsl
add
in
out
roll
ja
hlt
jnp
stos
lret
lock
scas
mov
add
test
push
mov
lea
pop
push
push
lea
push
call
cmc
mov
mov
mov
add
je
add
add
mov
add
add
stos
movsl
leave
popf
in
fcoms
arpl
arpl
mov
lock
mov
mov
cli
mov
add
mov
out
mov
push
add
push
add
add
aam
add
add
add
jmp
sahf
add
add
pop
push
push
push
push
push
push
push
call
pop
cmpsb
out
add
add
add
aam
add
in
add
add
add
mov
fwait
add
mov
data16
cld
add
jb
cltd
add
bound
test
mov
add
cmpsb
push
in
int3
mov
cld
jecxz
nop
add
mov
lea
pop
call
push
add
pop
mov
push
push
push
sub
sub
pop
mov
push
sub
xor
xor
pop
add
push
shr
pop
add
push
shl
pop
add
mov
xor
push
push
push
push
push
push
push
push
call
aam
jb
jno
fs
xchg
mov
mov
mov
xchg
add
aad
xchg
mov
lds
sbbl
lret
rclb
jae
add
push
add
pop
jp
jns
add
scas
mov
xchg
push
mov
test
xchg
loopne
add
lods
pop
lods
sar
int
add
add
add
add
andb
jno
mov
lea
pop
add
push
push
not
not
pop
mov
xor
push
push
lea
push
call
jbe
add
add
add
movsb
fcmovne
add
add
jb
hlt
sti
pop
add
add
add
add
bound
fsubl
add
jnp
scas
lret
push
add
mov
xchg
jns
jecxz
call
cmpsl
addl
gs
add
add
pop
jae
mov
push
out
add
pop
arpl
pop
add
pop
mov
push
push
push
push
call
add
js
push
mov
stos
add
add
push
cwtl
add
mov
add
mov
push
add
add
add
jns
leave
mov
push
add
lret
lock
add
addb
mov
data16
add
into
add
add
in
add
add
add
stc
add
add
pop
add
lea
pop
xor
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
mov
nop
add
push
add
mov
iret
add
rcrb
add
testl
jnp
add
cli
add
pop
fcmove
add
lahf
add
scas
addr16
add
ret
addl
xchg
add
addb
loop
jmp
add
bound
add
lock
lea
pop
add
push
lea
push
push
push
push
call
add
mov
subl
add
rcrb
in
call
add
cltd
lahf
scas
add
push
pushf
xchg
imul
add
mov
add
add
mov
add
xlat
ljmp
jp
cmpl
icebp
lock
add
xchg
add
cmpsb
loopne
add
add
xchg
mov
add
add
pop
rep
push
push
push
lea
push
lea
push
call
aam
add
add
fs
mov
jge
push
pop
test
fdivl
jbe
mov
add
roll
in
lock
mov
add
les
iret
imul
add
push
add
add
add
add
mov
mov
movsb
icebp
jmp
add
mov
add
faddl
add
popa
mov
in
loop
mov
pop
lahf
mov
arpl
mov
xor
push
lea
push
push
lea
push
push
push
push
push
push
lea
push
call
imul
add
stc
mov
pop
pop
xchg
jno
add
fs
mov
add
add
jp
add
xchg
add
add
xchg
add
fiadds
add
jmp
jae
scas
jbe
add
stc
add
add
lds
add
mov
imul
js
add
mov
lea
pop
or
je
mov
push
push
push
push
push
push
push
lea
push
push
call
add
add
mov
add
leave
iret
xchg
add
mov
xchg
add
ficompl
stc
push
cli
add
movsl
ljmp
add
mov
mov
pop
jmp
mov
pop
push
lret
stos
add
mov
xchg
mov
bound
pop
push
add
cli
add
add
in
stos
je
stc
push
jo
add
push
mov
lea
pop
xor
push
push
push
lea
push
push
lea
push
push
push
push
call
add
cmpsl
add
fs
add
jge
add
jmp
pop
add
leave
push
add
add
add
add
xchg
cmpsl
xchg
mov
jne
add
out
mov
xchg
jae
test
lods
add
add
push
mov
add
iret
xlat
add
xchg
fcompl
add
into
push
add
sahf
add
mov
stc
cltd
icebp
add
les
addb
add
add
mov
lea
pop
add
push
lea
push
call
stc
mov
add
add
enter
jp
jbe
filds
add
push
add
imul
push
fisubrl
jno
out
fcmovnu
add
push
xchg
int
out
scas
xorl
mov
add
add
push
mov
add
faddl
mov
add
add
jmp
add
gs
loope
add
add
mov
lea
pop
mov
push
push
push
push
lea
push
push
push
push
push
push
call
xchg
lahf
loope
mov
cmp
add
pushf
mov
test
icebp
cmpsb
in
addr16
add
add
xchg
add
insb
jp
add
pop
add
int
add
out
add
add
mov
in
test
test
push
add
add
mov
addb
scas
push
mov
lea
pop
xor
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
mov
insb
add
repnz
outsl
mov
add
jo
jns
add
out
add
add
add
push
add
je
mov
add
lock
fcoml
jno
add
add
xchg
add
lods
je
jmp
add
iret
add
test
movl
push
mov
aad
jmp
jno
in
mov
cmc
add
xlat
lahf
popf
mov
lea
pop
add
push
inc
sub
inc
dec
pop
add
push
dec
inc
rol
pop
add
push
push
push
call
jne
test
add
push
mov
add
mov
add
push
add
push
icebp
stos
aad
mov
loop
andl
xchg
add
test
add
add
add
enter
popa
add
ret
jge
add
pusha
add
mov
rcr
mov
push
add
in
add
add
add
int3
add
mov
lea
pop
mov
xor
push
lea
push
call
icebp
add
add
hlt
add
push
add
add
insb
xchg
xchg
add
rcrl
mov
mov
roll
push
cmpb
jbe
test
mov
add
fwait
add
faddl
add
je
mov
add
pusha
mov
add
rolb
xchg
insb
test
cmpb
sarb
loop
mov
test
fwait
shl
rorb
add
pop
rep
push
push
push
push
push
push
push
push
push
call
add
fldl
add
sahf
in
add
jae
mov
add
scas
call
mov
insb
aam
movsb
rolb
jae
xchg
add
movsl
lods
add
add
leave
add
add
test
popl
js
add
lea
add
add
lods
xchg
pop
add
mov
xlat
xchg
push
addb
add
jle
lret
xchg
mov
lea
pop
mov
push
push
push
push
push
push
call
mov
jl
mov
enter
add
jb
xchg
pop
leave
lock
add
xchg
mov
add
add
mov
add
jnp
add
sti
push
loop
cmc
xchg
add
fldl
jns
cltd
add
add
mov
stos
push
add
xchg
add
add
add
pop
mov
add
add
add
int
add
add
jb
add
pop
xor
push
lea
push
lea
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
jno
add
add
pop
loope
add
pop
push
scas
xchg
add
in
add
add
imul
lret
pop
add
add
icebp
mov
mov
add
mov
out
mov
add
fwait
add
push
xchg
push
add
fildl
mov
test
add
add
data16
add
add
add
lea
pop
add
or
je
push
rol
pop
mov
add
push
add
lea
pop
add
rep
pop
push
push
add
add
inc
push
xor
add
add
sub
inc
sub
ror
sub
pop
sub
shr
sub
pop
push
push
push
call
add
nop
lret
add
stc
imul
add
add
add
add
add
add
in
ja
in
jge
test
iret
hlt
mov
pop
add
mov
add
add
std
jge
cmc
add
add
movsb
add
add
add
fiadds
test
js
add
add
add
lret
add
mov
add
cli
add
add
add
pusha
fsubp
js
leave
add
popa
or
pop
push
push
push
push
push
push
push
call
add
mov
addl
pop
les
loopne
je
add
icebp
add
in
add
push
add
movsb
hlt
mulb
fldt
add
lcall
add
xchg
test
mov
mov
popf
adc
test
add
jne
jnp
add
xchg
add
scas
mov
addr16
lea
lds
stos
add
add
mov
loop
int3
lea
pop
mov
mov
push
sub
lea
add
pop
mov
jmp
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
add
add
add
bound
xchg
movsb
add
lahf
add
test
add
add
outsl
add
sahf
add
imul
std
imul
add
mov
add
add
sti
mov
add
add
jno
add
in
frstpm(287
add
popl
in
add
lods
add
mov
lea
pop
push
push
add
ror
shr
sub
pop
mov
add
push
push
lea
shr
pop
push
push
shr
pop
push
push
mov
push
sub
pop
pop
push
lea
xor
pop
pop
pop
pop
push
pop
leave
push
shl
inc
pop
ret
push
mov
push
push
push
push
push
push
lea
push
push
call
rol
scas
lock
in
enter
add
lods
add
lock
ret
lahf
in
add
mov
mov
addl
add
imul
scas
in
add
nop
add
cmpsl
add
add
xchg
add
jecxz
pop
add
add
add
add
pop
add
push
push
push
xor
dec
pop
push
push
push
push
push
call
loop
arpl
add
call
lods
add
add
popa
in
data16
add
mov
add
pop
xchg
nop
xchg
add
lahf
add
cld
sti
add
add
xchg
push
gs
bound
call
add
in
add
testb
xchg
bound
fs
lahf
out
pop
pushf
add
add
add
add
cmc
add
mov
lea
pop
push
movl
push
lea
push
lea
push
call
add
int
add
js
push
push
gs
pop
add
add
add
mov
roll
arpl
add
jnp
push
mov
addr16
mov
add
cltd
add
add
add
add
add
movb
loope
push
add
cmp
push
popf
add
enter
test
arpl
addl
push
lea
push
push
push
push
push
lea
push
call
add
add
add
add
add
push
add
cli
add
add
add
hlt
mov
add
out
out
add
mov
roll
stos
jecxz
mov
leave
add
subb
pop
lds
add
mov
add
xchg
add
add
add
add
in
add
movl
add
add
movsb
add
add
mov
imul
mov
fmull
rorb
xchg
add
add
push
push
call
add
xchg
pop
jae
cwtl
ljmp
add
add
ret
testl
xchg
add
mov
int3
data16
add
push
add
mov
mov
rorb
stos
add
test
stos
lret
add
pop
fisubl
add
add
addb
cltd
jp
add
add
add
bound
mov
popf
push
stos
add
lret
ret
sahf
add
pop
mov
pop
push
push
push
lea
push
call
add
add
movsl
jb
rolb
movsl
testl
add
jge
popf
add
mov
add
add
add
sti
add
rolb
jb
mov
outsl
xorb
ljmp
add
add
jns
add
mov
test
add
add
cltd
out
movsl
lret
ret
add
fwait
int
clc
jmp
add
loopne
fdivrl
lea
pop
pop
push
xor
inc
add
pop
pop
push
sub
shl
pop
pop
push
push
push
push
push
push
push
push
push
lea
push
call
ja
mov
fwait
add
add
out
rolb
add
mov
add
pop
add
out
stc
cmc
mov
fadds
add
into
jp
js
add
ja
lods
addr16
add
pop
fwait
pop
add
jns
clc
testl
mov
jmp
imul
mov
mov
lea
pop
leave
push
lea
push
push
push
lea
push
push
push
lea
push
call
jne
rolb
add
loope
pop
add
add
add
not
add
cmpsl
add
add
mov
mov
push
lret
popf
scas
mov
push
add
movl
add
jae
testl
cmpsb
cld
movsb
add
add
loop
icebp
add
jae
insb
add
mov
fadds
rolb
mov
sahf
add
add
sti
mov
js
int3
lea
pop
ret
push
add
add
pop
push
push
shl
add
pop
mov
add
push
push
sub
dec
shl
add
pop
push
push
push
push
rol
dec
pop
testl
push
rol
lea
rol
pop
addl
push
pop
push
push
shl
pop
call
push
sub
ror
ror
pop
mov
pushl
push
lea
push
call
out
fs
pop
add
mov
call
mov
add
xchg
add
mov
mov
add
lcall
mov
add
enter
xchg
roll
aam
add
mov
pop
add
xchg
add
add
imul
mov
add
xchg
add
popf
add
call
in
idivb
mov
int3
add
mov
lea
pop
push
push
sub
pop
push
push
push
push
lea
push
push
push
push
lea
push
call
add
add
lcall
mov
xchg
add
pop
testl
add
mov
xchg
push
shl
push
add
add
add
add
add
push
pop
mov
add
mov
sahf
sti
loopne
push
add
mov
add
cmc
lahf
jo
fxch
lahf
cmc
add
lea
pop
call
push
push
lea
push
push
push
push
call
pop
icebp
jmp
jne
push
roll
test
testl
add
xchg
int3
xlat
add
addl
std
pop
insb
add
add
mov
in
jmp
mov
xchg
add
add
stos
mov
add
jp
mov
fdivrs
outsl
pop
add
subb
xchg
out
lcall
jecxz
int3
lea
pop
cmpl
jne
pop
push
push
push
push
call
fiaddl
in
scas
popa
lock
mov
fwait
add
mov
mov
xchg
add
enter
add
add
add
add
add
push
insb
test
add
add
jmp
mov
iret
push
add
mov
add
lock
add
mov
out
add
add
mov
test
add
mov
subl
add
cld
lea
pop
pop
push
push
push
push
push
push
call
out
subb
add
outsl
ret
mov
movsb
stos
mov
nop
mov
rcr
push
add
mov
jmp
add
push
add
add
rcl
out
roll
mov
mov
pop
push
add
cmc
test
clc
jmp
mov
add
add
add
orl
jb
rclb
push
mov
jge
add
pop
pop
pop
leave
push
lea
push
push
push
call
test
jns
loop
add
pusha
pop
add
lcall
add
add
push
add
add
add
leave
cmc
loopne
mov
insb
add
mov
add
xchg
out
add
cli
add
testb
add
loop
fcomps
add
add
shl
lock
jns
jo
addr16
imul
mov
aad
scas
add
mov
lea
pop
ret
push
xor
dec
pop
push
push
push
call
add
mov
sti
notl
add
mov
pop
lahf
jbe
xchg
popf
add
jecxz
call
add
push
faddl
ret
add
add
jnp
int3
push
sti
outsl
add
add
add
lods
fistps
scas
mov
cli
mov
jno
out
fwait
mov
pop
add
aam
xchg
fldcw
pushf
add
add
outsl
mov
addl
arpl
fmull
in
push
push
push
push
push
push
push
lea
push
push
call
xchg
pop
cmpsl
push
mov
add
nop
jns
mov
add
add
add
add
push
scas
add
lock
pop
int3
mov
loopne
add
mov
add
shr
push
mov
push
mov
add
jne
add
mov
jge
into
mov
mov
lea
pop
add
push
push
push
shl
sub
pop
push
push
sub
xor
pop
push
push
add
pop
movl
push
rol
lea
inc
pop
push
call
push
sub
pop
push
call
subl
push
push
push
push
push
push
lea
push
push
push
call
add
add
insb
add
pop
add
add
add
fbstp
cltd
xchg
pusha
add
addb
add
pusha
add
int
add
push
lea
add
enter
add
push
lock
aad
add
test
add
loope
push
xchg
mov
je
add
pop
mov
jmp
cmpsb
pop
jle
mov
lcall
popa
and
cmpl
jne
pop
pop
push
add
rol
lea
pop
pop
pop
push
push
push
push
push
call
bound
hlt
mov
pusha
xchg
pop
jle
test
add
movb
movl
loop
push
ret
add
imul
add
add
add
add
stos
pushf
add
mov
mov
add
add
mov
jp
add
pusha
cmc
pop
add
add
mov
push
lock
add
add
add
add
pop
leave
ret
push
push
push
push
call
aam
mov
jne
add
add
gs
push
add
add
into
add
lds
pop
push
add
mov
into
lret
jecxz
cli
xchg
mov
outsl
push
ljmp
add
pop
add
lds
mov
cmpsl
mov
fiaddl
add
ljmp
sahf
nop
xchg
jne
add
pop
mov
push
push
push
push
push
push
push
push
push
push
call
cld
xchg
add
lods
add
add
mov
add
add
add
add
insb
add
lahf
jl
add
add
add
add
fildl
loop
add
add
add
jb
sarl
add
xchg
mulb
sahf
lds
add
add
add
std
movsb
add
roll
outsl
jbe
mov
jl
xchg
stos
add
xchg
rcrb
mov
mov
lea
pop
add
push
shr
pop
push
push
push
push
lea
pop
push
push
shl
inc
sub
pop
mov
push
add
shr
add
pop
lea
push
push
lea
push
push
lea
push
lea
push
push
call
add
add
add
mov
add
insb
add
mov
mov
stos
xorl
add
pop
mov
mov
push
add
jp
add
add
arpl
add
add
add
loopne
pop
add
lret
xchg
je
imul
into
cmpsl
push
add
add
aad
add
aam
add
lods
mov
popf
rcrl
add
pop
sub
mov
shr
push
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
cli
mov
jbe
add
movsb
add
mov
add
mov
add
add
out
fiadds
jge
mov
pop
mov
addr16
add
add
lret
mov
add
iret
cmpl
jmp
int
add
mov
clc
add
add
mov
sbbb
jl
jle
lret
mov
pop
add
push
ror
pop
mov
push
shr
pop
mov
add
add
push
push
push
call
movsl
pop
add
lret
mov
lods
xchg
mov
lahf
add
add
fidivrs
lcall
pop
add
add
xchg
pop
add
fisubrs
xchg
mov
add
movl
in
ror
add
add
add
out
mov
cli
add
addr16
add
lret
addr16
add
jnp
add
ja
mov
add
push
mov
sbbb
jmp
or
mov
push
sub
lea
shr
pop
mov
push
push
call
add
add
jp
lock
iret
mov
movsb
pop
mov
cld
les
mov
in
fiaddl
add
mov
mov
add
les
add
jo
add
fisttpll
cltd
scas
mov
data16
add
add
out
add
pushf
stos
data16
add
push
add
shrl
sti
mov
add
add
add
mov
add
mov
lea
pop
cmp
jne
cmp
jne
push
shr
sub
pop
mov
movl
jmp
push
shr
add
lea
pop
mov
push
add
pop
mov
sub
jne
mov
push
lea
push
call
push
jmp
pusha
cwtl
add
cmc
lods
add
add
pop
push
push
lock
add
add
push
enter
add
add
imul
add
popl
add
lods
outsl
add
push
pusha
sbbb
add
add
xlat
mov
add
mov
lcall
add
bound
arpl
mov
lea
pop
movl
push
rol
rol
lea
shr
pop
jmp
mov
push
push
push
push
lea
push
push
push
push
lea
push
call
push
loope
insb
xchg
clc
jp
jno
adc
add
stos
stos
in
loop
jge
add
add
xchg
add
add
lods
add
test
loope
popf
cmc
imulb
add
popa
incb
fcoms
add
scas
mov
xchg
pop
test
jle
in
cwtl
add
jmp
fmull
nop
mov
add
push
add
inc
ror
pop
cmp
jne
push
sub
lea
pop
mov
push
push
push
push
push
call
add
jbe
faddl
mov
jl
jbe
add
add
hlt
lret
add
xchg
int
in
push
insb
xchg
cltd
add
mov
jo
je
int3
add
push
addl
out
add
add
jge
movsb
sti
shll
addr16
add
add
mov
out
lods
ljmp
jb
call
addb
pushf
addr16
add
aam
hlt
mov
lea
pop
movl
push
push
push
lea
push
push
lea
push
push
call
add
add
mov
hlt
test
add
add
scas
xchg
into
les
add
add
aam
add
add
add
add
pop
add
add
sahf
pop
add
xchg
cltd
stos
cli
sti
pop
jns
incb
add
sahf
mov
add
jnp
add
add
mov
jecxz
add
add
add
add
add
add
fcoms
add
push
orl
add
push
push
call
add
mov
adc
mov
mov
out
add
add
add
lds
add
imul
add
lea
add
iret
add
mull
enter
bound
cmpsb
mov
loop
lcall
add
add
add
jb
add
cld
add
jb
movsb
rolb
loopne
lock
pop
mov
push
sub
shr
rol
pop
cmpw
jne
push
push
push
push
lea
push
push
push
call
loope
loope
stos
add
leave
sahf
sahf
jp
add
std
out
out
stos
ret
pop
xchg
lcall
add
pop
popl
popa
out
movl
jnp
shl
mov
mov
add
mov
ja
pop
add
add
xchg
add
aad
pop
add
ljmp
into
push
mov
add
add
int3
push
xchg
add
xchg
shr
push
in
add
pop
mov
push
push
push
lea
push
push
push
push
call
jno
add
pop
mov
mov
shr
shlb
int3
scas
add
add
mov
xchg
add
outsl
add
test
jp
int3
pop
popa
sti
fisubs
test
bound
mov
xchg
test
mov
imul
add
add
add
jns
mov
mov
into
xlat
add
pop
add
lea
pop
movl
jmp
push
dec
sub
pop
pushl
push
shl
rol
lea
pop
pop
push
push
push
push
push
push
push
lea
push
push
push
call
add
loope
pop
add
jns
sahf
test
mov
movsl
stc
test
add
add
filds
mov
cmp
mov
fldenv
add
add
add
pop
add
add
shl
cli
lret
jo
clc
add
mov
mov
add
add
bound
fcmovne
test
add
leave
movl
mov
lea
pop
mov
mov
push
push
push
lea
push
push
push
call
add
in
movsb
loope
fadds
pop
bound
add
icebp
add
jns
movsb
mov
xchg
cltd
xchg
add
add
popa
testb
jne
add
loop
lcall
fisubrl
add
mov
stos
movl
add
add
add
repnz
add
mov
imul
xchg
mov
lea
pop
mov
push
push
shl
shr
push
xor
add
shl
sub
rol
pop
ror
add
pop
push
push
push
push
push
push
call
add
add
cmpsb
add
add
scas
filds
add
mov
stos
shlb
add
aad
add
add
add
mov
testb
push
mov
addl
add
mov
in
fs
add
add
popa
pop
in
out
add
mov
add
mov
lea
pop
call
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
add
xorb
lods
mov
add
idivb
jae
push
add
loop
add
add
add
jmp
add
std
add
jmp
add
repnz
fwait
push
loopne
add
add
add
jo
mov
add
jo
mov
fmull
js
int3
fldz
ret
fisttpl
add
push
push
shl
add
push
xor
add
dec
lea
lea
sub
sub
ror
ror
pop
sub
pop
push
push
push
push
push
push
lea
push
call
lds
pop
pushf
add
mov
mov
add
gs
mov
mov
push
add
add
filds
out
add
jns
pop
add
add
add
add
popf
lret
add
jb
into
push
add
mov
imul
test
jmp
add
mov
outsl
add
loope
add
flds
add
xchg
push
filds
add
xchg
add
pop
push
push
push
push
call
mov
add
add
add
mov
add
add
add
icebp
add
add
add
mov
mov
add
mov
add
outsl
add
add
test
add
add
rcr
add
add
mov
add
mov
add
pop
add
pop
add
jecxz
je
mov
lea
pop
call
cmpl
je
push
push
add
rol
shl
rol
push
or
not
add
ror
not
sub
shl
pop
rol
sub
sub
pop
push
push
push
push
push
push
lea
push
push
call
outsl
pop
mov
add
in
add
xchg
add
add
sub
add
xchg
add
lods
add
add
add
add
mov
pop
mov
add
mov
push
pop
out
lea
loope
add
mov
mov
enter
add
lret
pop
add
std
add
mov
out
shll
int
insb
loop
in
into
mov
add
mov
clc
add
add
and
push
lea
push
lea
push
push
lea
push
push
push
call
add
mov
jb
cmpsb
add
iret
jp
fadds
out
rclb
lds
jb
aad
add
cltd
in
add
add
xorl
mov
add
add
out
call
arpl
add
scas
popa
add
addr16
mov
lock
add
lods
pop
mov
fdivl
xchg
add
add
mov
std
jno
imul
mov
lea
pop
call
push
push
push
lea
push
push
push
push
push
call
in
call
add
mov
add
nop
ljmp
mov
add
mov
ljmp
add
jns
jno
add
ret
cwtl
add
add
ja
push
imul
add
mov
add
mov
rol
mov
add
out
mov
add
add
lock
add
add
pop
cmpl
je
push
push
shr
ror
push
or
not
add
add
xor
sub
ror
shl
shr
pop
rol
ror
pop
push
sub
pop
push
call
cmpl
je
push
push
shr
ror
push
sub
add
add
lea
sub
not
pop
shl
not
pop
push
dec
lea
add
dec
pop
push
call
push
rol
sub
pop
cmpl
je
push
push
add
push
or
not
add
inc
shr
sub
dec
pop
rol
sub
inc
pop
push
shl
dec
pop
push
push
shl
shr
pop
call
cmpl
je
push
push
add
push
xor
add
not
sub
add
pop
rol
sub
lea
pop
push
push
push
push
push
push
push
lea
push
push
push
call
fists
add
mov
enter
pop
je
cmc
add
mov
mov
mov
out
out
add
scas
gs
in
add
add
int
add
std
cmpsb
jp
call
add
add
in
add
push
not
mov
mov
add
test
hlt
jns
ret
xchg
mov
lea
pop
push
push
add
shr
not
pop
call
push
lea
push
push
push
call
js
xchg
cmpsl
std
add
add
add
test
xlat
mov
add
movsl
add
in
add
add
stc
mov
mov
std
add
lret
fildll
add
add
rolb
in
gs
push
jmp
add
add
loope
pop
push
testl
or
int3
je
push
push
dec
sub
not
ror
push
sub
add
sub
sub
not
not
pop
shl
inc
xor
pop
push
add
shl
pop
push
push
push
push
push
call
pop
add
mov
jbe
add
movsb
add
mov
leave
jae
add
addb
cmc
loop
add
mov
add
loop
xchg
add
pop
icebp
push
nop
add
jno
outsl
add
in
push
xchg
xchg
in
jnp
add
imul
add
jge
add
test
add
mov
in
add
addb
leave
rorl
pop
call
push
lea
push
lea
push
push
push
push
push
push
push
call
bound
add
push
add
push
scas
mov
in
out
mov
jae
push
push
add
enter
out
mov
sub
pop
add
add
jne
movsb
add
pop
add
rcll
add
add
add
add
xchg
add
sar
loopne
add
xchg
subl
lods
add
add
testl
jb
add
addr16
mov
lea
pop
cmpl
je
push
push
not
push
or
inc
add
inc
sub
add
add
pop
rol
pop
push
push
not
not
add
pop
call
push
sub
add
pop
cmpl
je
push
push
ror
xor
push
or
inc
add
sub
sub
rol
rol
shr
pop
sub
pop
push
sub
pop
push
call
push
sub
pop
cmpl
je
push
push
rol
shr
push
or
inc
add
sub
add
sub
inc
shl
sub
sub
pop
pop
push
push
call
push
add
arpl
les
lods
add
add
xchg
je
out
add
out
add
add
add
add
cwtl
enter
out
pushf
add
addl
loopne
add
add
add
out
pop
add
mov
out
add
add
lea
pop
push
call
cmpl
je
push
push
add
add
sub
push
push
pop
add
lea
sub
ror
add
inc
pop
add
pop
push
push
push
push
call
add
add
mov
jmp
add
xchg
lods
add
add
mov
jge
lret
add
add
repnz
pushf
jno
leave
add
add
xchg
add
add
add
add
repnz
out
test
add
pop
add
xchg
mov
push
rcrl
lea
in
int3
lea
pop
push
call
push
pop
cmpl
je
push
push
lea
rol
push
push
pop
add
not
rol
not
sub
inc
rol
pop
shr
pop
push
lea
push
call
fwait
lret
fld
push
fdivp
add
add
mov
xchg
add
in
insb
lret
add
add
jno
add
pusha
subl
add
lahf
add
add
pop
mov
pushf
add
jbe
outsl
call
lock
mov
test
mov
add
out
stos
shrl
lea
pop
push
call
cmpl
jne
push
lea
ror
pop
mov
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
add
popa
add
add
leave
xchg
add
bound
enter
imul
jns
add
add
add
add
shrl
insb
mov
push
add
add
push
stos
xchg
mov
add
jb
add
jecxz
mov
add
xchg
add
out
out
add
mov
neg
push
add
clc
bound
add
popf
rolb
clc
sti
mov
lea
pop
movl
jmp
xor
push
add
sub
inc
pop
pop
pop
pop
push
push
lea
push
push
push
push
push
push
push
push
call
int
mov
std
add
mov
jecxz
fwait
add
push
pop
les
fldl
js
mov
pusha
sti
add
add
jmp
add
pop
add
add
mov
insb
xchg
mov
cmpsl
jge
fnstsw
cltd
cli
imul
push
ljmp
enter
stos
add
jae
mov
push
lods
ja
add
add
jnp
mov
loopne
fmull
leave
push
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
add
jno
int
rcl
mov
mov
add
jns
je
mov
add
call
add
add
add
xchg
pop
add
loopne
add
xchg
mov
iret
xchg
mov
add
xchg
add
jbe
flds
add
push
push
add
add
mov
testl
push
lea
push
lea
push
push
push
push
call
add
popl
outsl
jge
icebp
imul
std
pop
mov
rcr
jp
int3
test
out
lea
lahf
mov
mov
mov
add
add
add
add
add
mov
add
lahf
add
jns
scas
fwait
cmc
add
add
out
add
imul
mov
jecxz
cwtl
jae
flds
fmull
push
add
dec
dec
rol
pop
mov
push
ror
inc
not
pop
add
push
rol
pop
cmpl
jne
push
push
shl
lea
push
or
not
add
xor
sub
sub
dec
add
pop
xor
pop
push
inc
inc
pop
pushl
push
lea
push
push
push
push
lea
push
push
call
mov
jnp
add
add
je
add
xchg
popa
add
loopne
in
add
jl
mov
add
lea
lahf
add
lret
nop
mov
add
mov
add
mov
add
jno
roll
push
insb
add
add
add
mov
add
fiaddl
pop
add
pop
out
sahf
mov
pusha
add
popf
add
jmp
aad
add
fiadds
lret
push
mov
add
add
lea
pop
call
push
call
push
inc
dec
sub
not
pop
jmp
push
push
lea
push
push
lea
push
push
call
in
jns
sahf
add
add
rolb
cmpsl
cltd
lret
add
rcl
add
cli
pop
fiadds
add
movsb
push
mov
xchg
add
push
push
mov
add
add
add
add
add
mov
add
add
add
iret
add
add
les
jge
add
test
add
add
test
add
leave
push
sub
pop
add
push
not
pop
pop
push
push
push
lea
push
call
cmc
test
add
fwait
imul
add
add
fldenv
xchg
lods
add
mov
add
jbe
add
add
add
popf
push
fcompl
flds
neg
insb
add
mov
popf
ficompl
xchg
add
je
movb
mov
outsl
add
rolb
mov
lea
pop
pop
push
shl
add
shr
pop
pop
pop
push
shr
pop
leave
push
inc
dec
pop
add
ret
push
push
push
push
lea
push
lea
push
push
push
push
push
call
lcall
mov
cmp
fs
xchg
movsb
jge
add
into
add
popf
popf
add
add
add
xchg
jo
add
sti
pop
add
add
ja
int3
add
xchg
out
add
add
addr16
add
add
roll
add
pop
jmp
cmpl
jne
push
push
dec
inc
lea
add
push
or
inc
add
lea
add
xor
sub
pop
shr
shr
pop
push
push
push
push
push
lea
push
call
sti
add
add
add
jmp
add
mov
pushf
xchg
ficoml
mov
add
add
add
sahf
movsl
insb
add
add
lret
add
aad
subb
add
lcall
loopne
rol
mov
add
repnz
not
mov
add
add
cld
lea
pop
pushl
call
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
lahf
add
xchg
rcr
mov
int3
fcmovnbe
loop
addb
jmp
std
repnz
add
add
test
call
lret
add
pop
roll
std
stos
push
cwtl
push
add
add
add
ja
push
add
fnstenv
add
add
mov
std
add
add
add
roll
push
jmp
lea
pop
push
push
push
call
add
test
pop
mov
jo
imul
add
add
mov
add
add
add
std
add
fsubr
test
add
add
add
jecxz
add
in
add
jmp
iret
jbe
lahf
insb
add
add
add
xchg
lock
add
mov
add
sbb
fsub
jmp
or
rclb
jmp
push
rol
shl
shr
pop
cmpl
jne
push
push
push
lea
push
push
call
fiaddl
test
add
add
add
add
add
lods
mov
add
shl
filds
xchg
xorl
xlat
int3
add
add
repnz
fwait
add
add
mov
jmp
add
mov
jmp
mov
add
popf
iret
mov
mov
add
xchg
add
add
mov
addr16
mov
mov
push
shr
not
pop
push
push
push
ror
push
or
not
add
ror
rol
sub
ror
sub
pop
pop
push
ror
add
ror
ror
pop
pushl
push
not
lea
pop
call
call
push
push
sub
push
or
not
add
shl
not
inc
sub
sub
dec
pop
sub
inc
pop
push
shr
pop
pushl
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
cmpl
movsl
add
cmpsb
pop
add
out
or
add
gs
add
lret
std
aam
imul
divb
mov
add
add
jae
add
add
pop
add
mov
movsb
mov
add
add
je
jl
faddl
add
out
mov
lea
pop
call
push
lea
push
push
lea
push
lea
push
push
call
lea
sarl
add
pushf
add
add
bound
in
scas
add
add
xchg
loopne
add
add
add
sti
mov
pop
std
xorb
pop
fistps
ja
mov
jge
add
add
add
cwtl
add
pop
mov
int3
xchg
add
js
jno
aam
test
add
add
mov
testb
icebp
add
sbb
shrb
jns
rclb
rcll
add
shrb
add
leave
pop
lea
shl
sub
add
pop
rol
xor
inc
pop
push
sub
pop
pushl
push
sub
pop
call
call
push
push
sub
push
xor
add
add
rol
inc
sub
rol
sub
sub
pop
dec
shr
pop
push
push
push
push
pop
add
lea
add
sub
not
inc
ror
add
pop
add
xor
pop
push
xor
sub
add
dec
pop
call
pop
push
push
push
push
push
push
push
push
push
call
pushf
fiadds
arpl
filds
insb
rolb
xchg
lods
cltd
xchg
jmp
jl
jecxz
add
add
int3
lret
cwtl
add
stc
add
hlt
mov
gs
add
add
ja
fsubrl
xchg
add
xchg
add
xchg
mov
mov
lods
lea
mov
add
std
lods
mov
lea
pop
dec
jne
push
push
push
push
call
test
add
mov
jl
add
test
jle
xlat
add
mov
rolb
mov
rcrl
mov
add
add
fucomi
mov
repnz
outsl
mov
subl
add
mov
add
mov
fildl
add
add
xchg
test
add
incb
mov
pop
add
fmull
push
or
add
cmp
add
call
push
push
ror
push
or
inc
add
inc
not
sub
add
ror
shl
pop
shl
sub
shr
pop
push
sub
pop
pushl
call
push
inc
xor
add
pop
push
push
shl
pop
call
push
sub
pop
mov
push
sub
shr
add
pop
lea
push
push
sub
add
shr
push
or
not
add
rol
sub
lea
pop
pop
push
shr
rol
not
dec
pop
pushl
call
push
push
push
push
call
faddl
data16
lcall
add
ljmp
add
aam
rolb
jp
pop
mov
mov
add
aad
ja
insb
insb
addr16
lods
loop
sti
cmpsb
stc
jp
add
cltd
add
fadds
add
add
jmp
add
add
push
add
mov
add
mov
jmp
push
add
add
pushf
aam
push
pop
add
fs
les
jns
add
mov
adc
push
lea
push
lea
push
lea
push
push
call
test
ret
stc
push
mov
pop
add
in
stc
add
add
add
loopne
add
add
mov
add
jp
mov
add
add
add
add
out
add
fiaddl
in
mov
add
add
add
mov
push
movb
mov
sti
lds
mov
jbe
pop
pop
push
add
add
pop
call
push
push
add
push
xor
add
xor
shr
sub
pop
not
pop
push
push
push
push
push
push
push
push
call
pushf
mov
add
add
icebp
add
add
lea
ljmp
add
mov
add
mov
pop
add
fiaddl
popf
mov
pushf
pop
add
add
xchg
ljmp
not
jo
sti
icebp
add
xchg
frstor
add
lret
rol
enter
fidivrl
bound
push
add
mov
and
jne
push
rol
pop
call
push
push
push
lea
push
call
add
add
mov
add
cwtl
loopne
add
enter
add
add
mov
add
xchg
add
test
mov
add
add
xchg
ret
add
gs
xchg
add
jle
add
add
in
clc
stc
add
int3
mov
lea
pop
call
mov
lea
push
push
ror
push
or
not
add
shr
xor
sub
add
lea
pop
add
pop
push
push
push
push
push
push
call
pop
xlat
data16
add
imul
ret
add
mov
cld
jmp
add
pop
push
add
clc
scas
call
scas
lret
iret
js
mov
loopne
add
add
flds
in
push
ret
pop
mov
add
mov
add
mov
mov
int3
popf
icebp
cld
mov
lea
pop
pushl
push
push
push
push
push
push
push
push
lea
push
call
add
add
xchg
push
mov
add
aam
lcall
add
jle
fnsave
mov
add
jns
stos
xchg
add
enter
clc
add
pop
arpl
add
fsubl
push
out
in
out
pop
popf
add
add
add
add
xchg
add
fcmovnu
mov
lret
xlat
pop
stos
add
add
scas
add
pop
call
lea
push
sub
add
lea
pop
push
push
add
pop
push
push
not
add
dec
add
pop
push
push
push
lea
push
lea
push
call
push
add
xorl
add
add
pushf
gs
js
movsb
mov
shll
push
fstps
xchg
pop
test
add
add
cli
loope
add
add
add
mov
fildl
repnz
add
add
add
pop
stos
bound
in
repnz
nop
add
loop
push
subb
mov
int3
add
pop
pushl
push
push
sub
sub
sub
push
or
inc
add
not
sub
pop
rol
rol
add
pop
push
push
push
push
push
push
push
call
test
imul
add
hlt
fsubrp
stos
add
ffree
jnp
std
imul
popf
add
add
stc
mov
add
add
jl
jo
imul
fdivrl
scas
add
mov
mov
add
add
push
mov
nop
cltd
test
aad
add
mov
add
mov
pop
int3
into
int3
ja
lcall
sbb
push
push
push
call
mov
add
jbe
xchg
mov
addb
jo
add
testl
push
nop
faddl
js
add
add
pop
add
add
roll
mov
xchg
add
aad
jne
pop
add
mov
add
xchg
jge
ja
data16
fiaddl
add
add
adc
int
add
lock
div
add
or
shrb
sub
adc
jmp
rclb
push
pop
add
add
sub
sub
pop
rol
pop
push
inc
pop
pushl
push
shr
dec
pop
call
push
push
push
push
push
push
push
push
push
push
call
pop
add
push
mov
pusha
lods
movsb
mov
push
int3
pusha
add
mov
add
add
add
lods
add
mov
xchg
pop
add
fiadds
add
add
add
jbe
add
add
add
push
testl
add
add
idiv
rorl
mov
mov
sub
arpl
add
pop
call
push
push
shl
shr
push
or
not
add
not
add
shr
sub
dec
pop
sub
pop
push
push
push
push
push
push
lea
push
call
push
cltd
add
outsl
data16
iret
add
fcoms
add
xchg
add
mov
stc
mov
mov
mov
stos
add
cmpsb
push
xchg
add
add
add
lcall
jle
add
add
gs
add
add
cmpb
add
cwtl
mov
in
add
mov
lea
pop
pushl
push
rol
inc
pop
call
push
add
shl
sub
pop
call
jmp
pushl
push
lea
push
push
call
xchg
add
jb
xchg
add
loope
add
add
add
lock
mov
mov
add
repnz
mov
testb
cmpsl
fbld
mov
popa
int3
test
loopne
add
testb
test
fildl
add
pop
pop
jb
fadds
pop
fcomps
add
add
notb
lea
mov
add
add
data16
mov
lea
pop
mov
jmp
push
push
dec
sub
inc
push
and
add
xor
shl
sub
inc
sub
inc
sub
pop
shr
inc
add
dec
pop
push
shr
pop
pushl
push
lea
pop
call
push
lea
push
call
jns
add
arpl
fadds
xchg
push
add
ljmp
add
add
xlat
push
add
add
xchg
stos
mov
mov
roll
popf
push
push
orb
push
add
add
add
add
imul
movsl
add
add
lods
jne
gs
add
mov
lea
pop
push
call
push
push
not
shl
push
and
add
dec
sub
shr
shr
lea
inc
pop
add
add
pop
push
push
push
push
push
push
push
lea
push
push
call
mov
cmpsl
stc
mov
cld
add
leave
add
bound
scas
loopne
add
add
mov
cmc
scas
cli
jne
cltd
out
mov
aam
pusha
testl
push
jge
mov
add
cld
add
test
add
add
mov
add
add
fwait
pop
in
jge
mov
loopne
mov
out
add
sti
jnp
xchg
movsb
test
les
jne
call
push
rol
inc
dec
pop
push
call
leave
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
mov
lahf
add
out
add
test
pop
pop
outsl
mov
lods
test
in
mov
lods
loope
pushf
out
add
jmp
add
fsubs
lds
add
push
fiadds
call
jmp
add
stos
add
jl
add
test
test
mov
jge
add
lea
pop
add
pop
push
pop
pop
push
push
push
call
xchg
loop
cwtl
add
add
fldl
add
add
loopne
add
push
mov
xchg
loope
push
mov
add
mov
push
sti
add
add
rolb
mov
mov
arpl
popa
add
lea
add
popf
lea
jb
add
movsl
add
fucomp
jb
add
mov
add
add
add
std
add
or
pop
push
lea
pop
pop
leave
add
push
push
push
push
call
add
xlat
test
in
add
add
add
sahf
add
jb
add
mov
add
xchg
mov
add
add
negb
call
loopne
fmulp
movsl
mov
mov
fadds
add
add
add
add
add
cmc
into
clc
clc
mov
repnz
xlat
mov
test
fldl
jle
push
add
add
aad
rolb
popa
movsb
add
mov
lahf
add
adc
leave
push
push
push
lea
push
call
mov
testl
rcr
nop
push
out
lods
pusha
add
cmc
xchg
mov
add
outsl
roll
add
add
fwait
jns
add
movsl
add
xchg
add
int
test
add
stos
push
add
push
int3
ja
add
fadd
add
mov
lahf
mov
in
xchg
pusha
add
or
add
int3
add
stc
add
lea
pop
ret
push
shl
sub
shl
sub
pop
push
mov
cmpl
jne
push
sub
not
pop
mov
push
inc
pop
jmp
push
push
push
push
call
in
cmpsl
jno
pop
std
add
add
lock
lods
add
out
add
add
mov
add
mov
add
fcmovnu
enter
lds
je
add
scas
pop
mov
test
push
icebp
fildl
jp
mov
mov
add
add
add
loop
negb
mov
add
out
add
pop
mov
and
xor
push
lea
push
push
lea
push
push
push
push
push
call
insb
add
jne
add
lret
mov
jo
addl
mov
add
idivb
test
icebp
mov
sarb
lahf
add
imul
add
popf
popf
push
jle
pushf
jno
mov
jmp
xchg
mov
mov
add
jo
mov
add
sub
add
mov
mov
popa
and
push
add
pop
add
xor
push
dec
rol
pop
dec
sub
push
add
not
pop
jmp
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
mov
movl
add
add
add
add
out
nop
add
add
imul
pop
add
test
lahf
xlat
push
out
test
fildl
in
add
add
jecxz
add
std
add
add
jge
mov
mov
sti
mov
mov
out
mov
sub
add
add
push
push
lea
push
lea
push
push
lea
push
call
pushf
add
scas
push
add
int
add
test
test
add
scas
add
mov
jnp
and
bound
add
add
add
add
add
mov
jmp
rolb
icebp
add
hlt
add
sbbl
add
add
stos
mov
pop
add
filds
call
je
int3
add
mov
mov
mov
lea
pop
pushl
push
push
push
push
push
push
push
push
push
lea
push
call
add
bound
add
add
mov
iret
cmc
mov
add
jge
xchg
imull
scas
add
not
add
add
add
lods
add
add
negb
add
add
popa
mov
add
push
mov
imul
mov
xlat
add
ljmp
add
ljmp
mov
add
sub
sub
cmp
jne
push
pop
mov
lea
push
push
push
push
push
push
push
lea
push
call
add
jo
xchg
test
push
test
fsubs
add
popf
push
add
add
add
icebp
pusha
push
jbe
jb
lcall
push
bound
add
add
insb
push
outsl
scas
bound
add
mov
add
iret
jno
add
add
addl
add
mov
add
add
add
add
add
add
add
fmull
pop
sub
push
push
push
push
push
lea
push
push
push
call
xchg
pusha
lods
mov
add
mov
jge
add
jbe
icebp
mov
mov
pop
pop
add
js
push
mov
test
scas
in
add
out
jge
fiadds
add
enter
add
add
add
add
add
mov
add
roll
mov
les
push
add
mov
lea
pop
mov
shr
add
push
dec
pop
sub
pushl
pop
push
lea
push
push
call
xchg
add
icebp
add
add
add
add
leave
pop
pop
pop
add
aad
add
int3
lahf
mov
mov
add
add
xchg
insb
add
add
cmpsl
leave
jno
add
add
addr16
imul
add
loop
add
add
add
add
data16
add
call
add
pop
add
mov
mov
int3
lea
pop
shr
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
movsl
mov
imul
add
shlb
push
arpl
add
add
add
add
add
mov
scas
add
add
add
std
clc
popf
shlb
add
add
add
mov
mov
add
add
add
lods
add
mov
jb
add
push
mov
add
addr16
add
int3
xorl
mov
stc
std
jbe
add
mov
lea
pop
and
push
add
xor
pop
sub
cmp
jne
leave
push
lea
push
push
push
push
call
loopne
push
add
mov
pop
add
cld
out
add
add
int3
fwait
mov
popf
xchg
lods
add
mov
add
push
mov
push
addl
fsubs
test
rcrb
add
add
mov
jp
push
mov
add
add
add
add
add
jmp
fmulp
mov
add
lea
xlat
add
pop
ret
push
push
lea
push
call
mov
roll
add
mov
push
add
add
add
add
fcoms
scas
add
data16
xorl
add
jmp
add
pop
mov
faddl
nop
into
add
movl
movsb
add
fldl
mov
add
lods
add
scas
xchg
add
aam
add
leave
stos
lods
mov
lea
pop
push
push
lea
push
push
push
lea
push
push
call
mov
add
pop
push
add
mov
insb
movsb
jle
add
add
add
shl
pop
jp
mov
orb
sti
lds
add
pop
in
pop
pop
add
add
notl
cmpsl
add
add
int3
test
cmc
add
ret
jecxz
push
push
add
int
nop
add
add
fld
add
add
xchg
incb
xchg
jno
fsubp
mov
lea
pop
mov
push
push
push
push
push
push
call
pop
shlb
mov
add
les
je
add
add
cmpsb
add
lcall
fwait
push
push
add
shlb
pop
add
add
idiv
mov
add
cmpsl
fmul
add
jmp
shrl
add
icebp
push
jbe
push
add
add
je
hlt
clc
mov
stos
xchg
test
mov
out
cwtl
add
add
std
add
add
add
add
mov
lea
pop
add
push
dec
lea
sub
pop
push
push
push
push
lea
push
push
push
call
push
cld
pusha
lds
add
mov
add
test
push
test
add
in
jns
hlt
imul
add
lods
add
push
add
add
fcomps
jns
test
add
int3
imul
add
add
add
arpl
lds
jns
add
add
cld
add
orb
push
push
push
lea
push
push
lea
push
lea
push
push
call
mov
xorb
add
clc
loopne
push
add
int
add
add
loopne
xchg
lret
lret
addl
add
icebp
jne
ffreep
mov
fbstp
loop
add
add
loopne
push
xor
mov
jno
pop
arpl
stc
mov
mov
xchg
xchg
fiaddl
mov
xchg
leave
stos
add
subb
add
add
mov
lea
pop
push
push
mov
push
not
shl
add
not
pop
lea
sub
mov
push
push
push
call
push
add
push
add
scas
ret
add
add
pop
jnp
mov
outsl
add
fs
flds
pushf
std
lret
add
pop
add
add
jmp
jge
jne
add
cmpsb
add
sti
xchg
mov
jge
add
add
jle
add
test
mov
out
imul
mov
add
xchg
pushf
mov
lea
pop
shr
push
push
push
call
std
add
push
mov
add
lock
xchg
add
movb
add
add
jmp
mul
add
jmp
add
add
sahf
jne
out
xchg
test
lahf
add
push
mov
add
testl
add
imul
push
add
cli
cmc
pusha
add
addb
fadds
pop
cmc
add
out
add
add
mov
stos
pusha
add
jo
mov
lea
pop
add
mov
add
push
lea
push
push
lea
push
push
lea
push
call
add
hlt
lds
add
int3
jno
add
lock
push
add
movl
add
movsl
add
jl
loope
imul
xchg
stc
pop
mov
decb
jle
add
ljmp
mov
add
add
xlat
iret
fadds
add
add
add
add
mov
add
scas
add
jns
add
fmull
jnp
push
dec
shl
pop
add
xor
mov
push
dec
sub
pop
and
call
push
push
push
push
push
lea
push
push
call
mov
fbstp
add
jo
add
cmpsl
add
add
add
roll
add
add
in
add
imul
add
add
in
div
std
mov
add
pop
popf
loop
xchg
add
out
add
add
testb
add
test
mov
add
jo
add
pop
mov
lea
pop
add
cmp
je
add
push
ror
not
ror
pop
cmpl
jne
xor
push
push
lea
push
push
push
push
push
call
mov
incb
add
jb
imul
add
enter
mov
add
loope
add
icebp
popf
ljmp
mov
ror
mov
jbe
fldl
rolb
insb
cld
pop
add
add
xchg
movsb
mov
add
add
add
mov
lcall
add
add
mov
lea
pop
pop
pop
pop
push
add
dec
pop
pop
pop
leave
push
shr
sub
lea
pop
ret
mov
add
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
pop
popa
imul
in
add
mov
add
jnp
pushf
cli
add
lods
add
add
push
add
js
cli
add
add
cmc
out
add
stos
sahf
jge
add
add
push
jl
add
add
std
add
add
scas
cmpsl
fidivrs
add
add
add
fwait
test
add
add
data16
outsl
imull
add
testl
rorb
pop
push
push
pop
push
add
add
pop
pop
push
push
lea
push
push
call
jge
add
add
out
movsb
popf
hlt
icebp
push
jp
mov
test
lea
pushf
sub
mov
add
jge
add
mov
fbld
sahf
stc
add
sahf
fiadds
lds
jecxz
fadds
add
stc
stc
add
clc
stos
add
je
add
fwait
cld
add
mov
add
add
movsb
add
addb
test
mov
out
imul
pop
mov
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
js
mov
add
add
mov
jge
pop
add
mov
mov
cwtl
popl
add
stos
jmp
mov
iret
stos
add
add
gs
jge
jecxz
loop
add
sahf
mov
mov
arpl
add
add
pop
push
add
aad
add
xchg
mov
lea
pop
push
push
push
call
in
pop
in
add
lods
add
sti
add
roll
add
in
add
shl
into
add
pop
mov
bound
scas
rcr
loopne
add
subb
xchg
push
cld
shrl
jo
repnz
pop
iret
mov
add
out
add
sarl
or
jo
jmp
rcrb
lret
ret
rcr
pop
pop
pop
push
dec
inc
pop
pop
leave
push
push
lea
push
push
push
push
push
lea
push
push
call
add
shlb
add
fwait
insb
mov
sbbl
rcrb
add
lods
mov
jnp
add
xchg
ffree
mov
in
add
mov
add
stos
faddl
pop
xchg
add
push
push
in
add
in
xchg
mov
add
arpl
add
xchg
add
add
add
add
cld
lea
pop
ret
push
push
lea
push
push
lea
push
push
push
push
call
push
imul
add
add
add
push
call
sti
iret
add
ja
in
jge
add
mov
pusha
add
je
imul
xchg
fldl
pop
movsb
nop
jmp
test
mov
cmpsb
add
aad
add
mov
add
add
jne
add
jne
mov
add
hlt
loope
jbe
jno
mov
aad
mov
add
jbe
mov
aam
bound
mov
push
lea
add
add
pop
add
push
push
push
push
push
push
push
call
pop
jbe
popf
push
add
clc
gs
fwait
jmp
add
add
add
add
pop
in
adcb
stos
jmp
in
add
add
int
add
add
imul
cwtl
add
mov
add
pop
push
push
ror
shl
pop
push
push
mov
push
push
call
add
cwtl
add
add
call
les
add
fcoml
add
movl
add
mov
mov
add
cld
fstpt
jmp
shl
int
roll
xchg
push
jecxz
xchg
in
std
mov
push
popl
testl
xchg
push
fucomp
cwtl
fdivr
mov
mov
add
add
add
add
mov
lea
pop
push
push
shl
pop
pop
push
push
push
lea
push
push
push
lea
push
lea
push
call
cmpsl
add
add
add
int
add
mov
test
mov
add
add
add
mov
add
xacquire
popl
cmpsl
cltd
pusha
pop
cwtl
nop
jae
cli
add
iret
jnp
loop
filds
mov
shll
add
cld
jl
add
add
jno
add
pop
xchg
add
fadds
lret
add
mov
lea
pop
lea
push
sub
shl
rol
sub
pop
sub
mov
shr
push
push
push
push
push
push
push
lea
push
call
into
pop
add
movl
fcmovnb
add
add
pop
add
test
mov
add
add
lock
test
mov
push
je
imull
je
loope
add
add
jo
add
add
add
addr16
cmc
je
add
lods
les
aad
repnz
test
pop
test
add
push
mov
popl
mov
mov
lea
pop
add
mov
add
push
push
call
push
lahf
jmp
mov
lahf
add
fwait
jecxz
mov
add
add
leave
mov
add
add
ret
jmp
add
stos
data16
sti
mov
mov
add
pop
mov
hlt
mov
pop
loope
les
stc
add
jl
push
lds
add
xlat
add
fldl
add
enter
add
mov
add
mov
stos
out
arpl
pop
pushl
popl
push
xor
shl
sub
pop
mov
add
push
push
lea
push
push
push
push
push
call
add
add
add
scas
add
add
imul
add
jb
test
roll
scas
add
push
fld1
add
push
outsl
add
out
add
std
test
add
bound
add
push
add
in
scas
mov
add
add
add
mov
add
add
js
mov
lea
pop
xor
lea
push
ror
sub
pop
mov
add
push
push
push
push
push
push
call
shlb
std
out
cli
push
cmpsb
test
loopne
jl
test
lods
xlat
add
andb
add
push
add
lds
push
xchg
jle
mov
add
mov
push
push
add
add
mov
mov
add
add
add
imulb
add
roll
test
add
imul
add
mov
fxtract
mov
int3
add
hlt
mov
lea
pop
xor
push
push
push
call
cmpsl
out
in
cmpsb
addr16
mov
cld
mov
filds
add
add
js
rcl
data16
add
ja
roll
add
push
jp
in
fcmovnbe
add
pop
add
mov
shll
add
mov
add
pop
xchg
lds
out
out
filds
jcxz
add
movsb
xchg
popf
sahf
add
add
loopne
fcmovnb
popf
add
insb
ret
mov
lea
pop
call
push
lea
push
lea
push
push
push
push
push
push
lea
push
push
call
jl
imul
add
add
jl
test
mov
mov
cmpb
add
mov
add
nop
fists
outsl
add
add
nop
pusha
mov
jl
mov
mov
imul
add
add
loopne
lcall
test
add
push
in
add
add
jns
orb
add
push
add
ror
not
pop
nop
push
pop
nop
push
sub
not
inc
pop
cmp
je
nop
push
lea
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
add
int3
pop
xchg
test
add
add
fbld
cmc
jmp
repnz
in
mov
mov
add
mov
xchg
add
jo
add
jecxz
mov
mov
jl
clc
je
push
fldt
fcmovnb
push
add
add
fwait
mov
pop
jle
std
test
add
call
mov
lea
pop
nop
inc
push
push
push
push
lea
push
push
push
push
call
lcall
popl
pop
stc
std
add
add
add
add
add
xchg
rorb
add
mov
add
jmp
add
ja
bound
test
cmc
leave
add
call
mov
add
fadds
jl
add
push
add
loope
test
add
add
pop
nop
nop
cmp
jb
push
push
lea
push
push
push
push
push
push
push
call
popa
add
push
leave
jne
loope
fdivp
scas
add
add
out
push
test
add
add
test
mov
addb
add
int
mov
jp
lret
push
add
add
jmp
mov
mov
lret
add
pop
add
add
add
out
add
into
push
data16
jecxz
pusha
add
subl
addl
mov
data16
xor
push
push
lea
push
push
push
push
push
call
xacquire
lock
add
add
in
lods
xchg
add
add
jp
stos
add
out
roll
hlt
pop
add
add
jge
pop
add
aam
add
add
jle
add
add
in
out
add
cmpsb
mov
add
lret
scas
cltd
jno
add
pop
add
xchg
cld
push
ja
mov
xor
scas
add
push
add
cmpsl
imul
test
les
outsb
add
add
push
lea
push
push
call
fidivs
andl
imul
mov
arpl
add
imul
add
add
jnp
add
lods
add
jp
movsl
add
mov
test
mov
jne
mov
add
sahf
hlt
add
add
mov
add
test
add
jge
scas
mov
adc
mov
add
movzwl
push
lea
push
push
push
lea
push
lea
push
call
mov
jno
push
stos
jnp
fiaddl
add
addr16
popa
cli
mov
testl
add
cmc
xchg
add
addr16
imul
lds
lret
mov
sarb
mov
rolb
pop
cmpsl
jae
clc
mov
ret
addl
mov
test
add
pop
data16
rorl
fiaddl
jmp
lods
shll
push
mov
testb
mov
fmull
inc
sbb
xor
pop
add
mov
xor
push
dec
pop
xor
push
not
inc
pop
shl
xor
shl
push
dec
add
sub
pop
xor
shl
push
xor
add
pop
xor
mov
add
push
add
pop
pop
push
add
inc
lea
add
pop
pop
push
push
lea
push
call
xchg
mov
add
div
in
mov
add
test
add
xchg
add
mov
add
mov
in
mov
mov
data16
mov
stos
mov
mov
mov
add
add
pop
add
scas
push
mov
in
jmp
jecxz
add
out
mov
rorl
pop
pop
pop
push
push
push
push
push
call
mov
add
in
iret
addl
shlb
mov
lods
add
imul
add
add
popa
pop
mov
test
imul
pop
mov
pop
jmp
add
addl
mov
pusha
pushf
rorl
addr16
xlat
loope
push
add
push
imul
pop
leave
ret
push
push
push
lea
push
push
push
push
push
push
push
call
pop
arpl
push
mov
mov
add
repnz
stos
arpl
ljmp
pusha
xchg
scas
add
mov
add
mov
add
add
aam
mov
int
add
add
scas
out
add
pop
movsb
std
add
mov
add
in
add
push
add
add
pop
push
push
xor
inc
not
rol
pop
mov
push
pop
push
push
push
push
lea
push
push
push
push
call
stc
add
add
add
imul
loop
out
push
call
jb
add
mov
add
loope
jp
mov
nop
aad
fsub
add
ja
add
lahf
add
add
scas
xchg
add
jns
fisttpl
std
pop
jbe
xchg
mov
movsb
out
push
cmc
add
lret
add
popf
loopne
int
out
push
in
add
ret
stc
std
rcl
pop
roll
mov
lea
pop
push
push
push
push
lea
push
call
add
add
fldl
mov
pop
pop
aam
nop
cmc
mov
add
add
add
cmc
leave
add
outsl
jp
stos
push
add
add
js
add
add
pop
push
add
add
add
jae
ja
mov
add
add
stos
fists
fs
addl
add
mov
xlat
add
lahf
xchg
mov
lea
pop
mov
push
lea
push
push
push
push
push
call
add
add
push
lret
mov
add
add
cmpsb
add
add
std
add
in
add
add
faddp
add
xchg
push
add
push
add
aad
in
addb
cld
xchg
mov
mov
add
mov
xchg
jne
add
add
aam
add
pushf
add
lea
pop
mov
push
ror
ror
pop
mov
test
je
push
dec
rol
pop
mov
push
inc
pop
test
je
mov
push
ror
inc
ror
pop
mov
push
push
push
lea
push
lea
push
push
lea
push
push
push
lea
push
call
rolb
mov
clc
add
scas
pop
add
add
mov
add
add
add
add
mov
out
xor
add
pop
add
mov
stos
icebp
add
cmpsb
test
scas
stos
lret
add
add
stos
xlat
add
movl
cli
int
jge
mov
push
add
jne
repnz
mov
add
add
add
data16
pop
inc
cmp
je
push
lea
push
push
push
call
xchg
loope
jmp
mov
add
add
push
nop
push
clc
les
add
js
mov
mov
add
add
incb
add
add
add
lret
mov
lods
add
add
mov
fsubrs
test
add
cmpsb
loopne
icebp
sarb
je
add
and
add
mov
lea
pop
test
je
push
sub
pop
mov
push
lea
push
push
call
ljmp
fstps
int
mov
in
add
mov
fldl
fiadds
add
push
xchg
add
add
add
mov
add
add
pop
mov
add
int3
push
testb
hlt
mov
add
xlat
xlat
jne
push
mov
jns
ljmp
add
add
add
pop
inc
push
push
lea
push
push
push
push
push
push
push
call
ja
mov
stc
cwtl
add
imul
pop
add
add
lret
add
push
mov
xchg
scas
sti
repnz
add
jl
je
mov
jecxz
push
add
add
jae
lods
add
add
pop
hlt
xchg
jle
pop
pusha
add
push
popf
mov
add
add
add
leave
xchg
mov
out
push
add
jnp
add
mov
add
leave
mov
lea
pop
cmp
je
push
push
lea
push
push
push
push
push
call
fildll
jecxz
jns
add
mov
addl
push
cltd
cmc
add
mov
test
loope
pop
arpl
add
mov
mov
push
add
jne
add
out
add
add
add
stos
outsl
mov
shl
add
pop
add
add
mov
mov
mov
aam
bound
test
jne
push
sub
pop
xor
push
push
push
call
add
add
add
lahf
add
roll
testb
add
pop
mov
xchg
mov
add
add
std
loope
lcall
lret
enter
repnz
add
mov
mulb
xchg
rolb
add
loope
pop
sti
add
pop
jecxz
pop
push
clc
popa
into
nop
pop
jge
add
or
pop
push
xor
pop
pop
push
add
shl
pop
pop
pop
push
inc
pop
leave
push
push
push
call
mov
cmpsb
imul
fwait
mov
add
js
add
add
stc
clc
add
jp
popf
add
sahf
test
add
test
add
push
in
add
add
mov
add
cmpsl
push
cmpsl
in
lret
push
add
movsb
add
mov
mov
xchg
popf
mov
xchg
add
test
aam
bound
ret
push
add
inc
dec
pop
mov
push
push
lea
push
push
push
push
push
push
push
push
call
cmpsb
add
mov
imul
int
pusha
je
and
mov
push
std
add
add
mov
ja
mov
add
add
lcall
add
mov
repnz
add
ja
jo
int
add
call
mov
add
jnp
mov
xchg
mov
cld
add
repnz
add
pop
sti
addb
add
sub
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
mov
mulb
pop
rolb
add
out
mov
xlat
xchg
add
add
mov
out
test
lcall
bound
jmp
add
add
xchg
add
add
add
sahf
push
je
add
add
add
loopne
add
add
xchg
xchg
add
ret
stc
jp
add
add
mov
mov
hlt
lea
pop
cmp
jne
lea
push
add
add
ror
shr
pop
mov
push
sub
shl
ror
pop
test
je
mov
push
add
pop
add
push
push
push
lea
push
push
call
test
add
jno
add
roll
test
lods
cltd
cld
gs
add
leave
add
add
add
shll
mov
add
scas
mov
out
add
add
std
add
add
leave
add
mov
jmp
jb
add
cmpsl
add
jecxz
add
pop
push
pop
push
push
push
nop
add
pop
call
fiadds
add
add
add
add
mov
pop
mov
mov
data16
cmp
jne
mov
push
push
lea
push
lea
push
push
push
push
call
add
jge
pop
stos
cmpsl
add
roll
lds
pop
fsubr
out
add
testb
std
mov
add
in
iret
xchg
add
add
add
call
sti
out
add
add
mov
je
jp
mov
stc
into
mov
mov
mov
jne
fwait
hlt
pop
pop
add
add
mov
push
jmp
mov
mov
lea
pop
test
je
mov
push
push
push
push
push
push
push
call
xchg
pop
add
add
js
fadds
testl
add
pop
mov
jo
jne
add
add
add
add
add
add
add
add
jle
lods
add
add
rclb
sti
add
jp
mov
add
hlt
cld
add
jmp
stc
push
add
mov
add
fistpl
rolb
out
mov
lea
pop
add
cmp
je
push
push
push
push
lea
push
push
call
push
add
add
add
jge
add
pop
add
movl
lea
in
add
mov
roll
cmp
push
pop
ja
pusha
ja
mov
iret
add
add
add
aad
push
in
imul
add
xchg
mov
faddl
cli
in
add
out
iret
add
add
add
add
add
push
rcrb
arpl
pop
jmp
xor
push
push
push
push
push
push
call
add
addb
add
lock
add
out
rolb
fcoml
add
js
cmpl
add
push
aam
mov
movsl
push
add
mov
icebp
cld
pushf
add
jbe
movsb
add
add
mov
call
test
filds
les
add
shl
arpl
sahf
add
jbe
add
pop
add
pop
pop
push
shr
pop
pop
push
push
lea
push
lea
push
lea
push
push
lea
push
call
mov
clc
mov
add
lret
mov
fists
std
add
rcl
mov
jns
imul
out
add
add
stc
jb
jbe
jo
mov
pop
add
addb
add
add
test
add
add
pop
push
add
bound
test
jo
push
push
mov
add
cmpsl
add
pop
pop
pop
push
add
add
pop
leave
push
xor
pop
ret
lea
push
sub
add
pop
pop
push
ror
pop
pop
pop
push
push
push
lea
push
call
pop
add
mov
add
jecxz
stos
fsubl
mov
add
add
xchg
fiadds
mov
jmp
add
push
scas
hlt
add
addr16
xchg
add
mov
roll
icebp
data16
fdiv
add
add
mov
lea
pop
pop
leave
ret
push
shr
dec
pop
mov
push
push
lea
push
lea
push
push
call
les
test
aad
sti
add
test
mov
rolb
add
aad
add
add
arpl
enter
add
movsb
faddl
lods
in
mov
pop
add
add
add
xchg
cmc
add
int
pop
mov
add
leave
add
mov
mov
roll
jb
add
add
mov
aam
lods
add
scas
int3
add
add
mov
lea
pop
pop
push
lea
push
push
lea
push
call
jmp
mov
mov
idivl
push
std
add
add
add
add
cwtl
gs
cmpb
add
add
add
add
movsl
add
test
add
nop
cld
push
lret
add
pop
add
mov
lock
add
xchg
add
add
out
mov
lea
pop
pop
pop
push
lea
push
push
push
push
lea
push
push
call
add
add
push
mov
add
jns
add
negl
mov
pop
fwait
js
add
loopne
push
addr16
add
add
add
enter
lret
divl
jno
fildl
add
pop
add
add
stc
out
popa
addb
jae
imul
add
add
add
lods
movsb
jp
mov
add
mov
pop
add
mov
lea
pop
pop
push
lea
push
push
push
push
call
add
add
mov
in
add
xchg
fadds
add
add
pop
add
add
in
add
cli
aad
jb
enter
add
mov
hlt
add
leave
add
imul
insb
add
add
add
mov
add
arpl
add
mov
push
test
add
fcomp
add
ret
lea
pop
leave
ret
rol
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
stc
rcl
outsl
add
lcall
push
out
add
add
pusha
out
sti
add
add
add
incb
mov
mov
add
add
add
add
sti
rolb
cwtl
xchg
add
add
add
push
add
stc
into
add
add
add
jmp
add
pop
add
xchg
popa
add
movsb
add
mov
push
add
lock
mov
lea
pop
rol
xor
push
add
shl
rol
pop
inc
push
lea
push
push
push
push
lea
push
call
iret
movsb
aam
xchg
xchg
add
fiaddl
mov
add
add
mov
arpl
test
xchg
in
mov
add
mov
in
clc
push
push
add
cld
mov
cli
add
add
shlb
cli
add
fdivrp
pop
pop
add
ja
add
bound
pop
cmpb
jne
ret
mov
shll
sti
movsb
shll
sti
movsb
shll
sti
movsb
adc
sti
movsb
xchg
mov
sti
shl
mov
sti
int3
pop
mov
sti
movsb
shlb
sti
fcomps
xchg
dec
fdivl
xor
call
fnstsw
push
mov
sub
inc
mov
ljmp
jae
outsb
mov
out
cmp
push
inc
rcrb
and
mov
adcl
xor
push
add
jge
jge
xchg
les
aam
jmp
push
xor
outsl
test
sub
stos
jp
int3
iret
xorb
or
and
sbb
dec
arpl
fs
cli
adc
dec
inc
and
imul
repnz
es
bound
sbb
xchg
and
pop
and
add
sub
dec
je
test
sbb
lahf
xlat
rcrb
std
push
cld
test
shrb
dec
cltd
push
ds
jp
int3
stc
cmp
loope
hlt
int3
pop
mov
xor
mov
jb
sub
in
icebp
pop
in
outsb
pop
mov
mov
and
test
ljmp
sbb
cltd
mov
fwait
or
cmp
mov
mov
cwtl
enter
push
repz
imul
aam
xor
cltd
std
xor
or
aaa
in
pusha
push
fistl
stos
or
lods
fs
xor
pop
dec
popf
rcll
bnd
or
dec
icebp
lds
hlt
loope
ds
xor
inc
ret
push
mov
mov
out
xor
push
and
in
notl
xchg
mov
or
roll
popa
jo
mov
pop
mov
pop
jp
int3
aad
sbb
outsl
rcrl
imul
outsl
mov
cmp
sub
add
fucomp
mov
cmpb
mov
popf
icebp
inc
mov
andl
outsl
dec
jge
in
shrl
add
add
sub
fadd
inc
jle
jmp
insb
enter
divps
lods
ljmp
adc
dec
xchg
inc
xchg
cmp
cmp
cltd
or
xor
xor
mov
loope
pop
sbb
pop
cmpb
mov
callw
inc
das
mov
push
sub
fistpl
and
xor
test
adc
js
fcom
enter
mov
sub
or
cltd
mov
mov
jle
xchg
push
mov
ds
add
xchg
fs
inc
mov
jg
fadds
test
add
scas
pop
int3
inc
hlt
iret
call
sarl
inc
dec
pop
inc
int3
sti
data16
loopne
sub
leave
rol
jno
mov
adc
sahf
add
jae
add
jae
jbe
testl
imul
mov
dec
call
add
movsb
jnp
push
pop
adc
xlat
cmpsb
jle
push
scas
stc
add
inc
popf
dec
hlt
jmp
xchg
sbb
inc
aad
lret
or
aad
into
dec
fistpll
and
xchg
fildl
mov
jae
xor
cld
mov
aas
in
push
xchg
and
addl
mull
in
scas
out
pop
scas
addl
jl
js
lret
mov
and
daa
fwait
leave
add
pop
notl
divb
sub
cld
mov
add
idivb
adc
xor
sbb
std
add
cld
jbe
stos
add
roll
gs
jae
stos
and
lock
js
sbb
jle
xlat
dec
fisubrs
scas
rcrb
repnz
loope
bound
sub
or
int3
jnp
lea
sub
sbb
sbb
aam
cltd
clc
inc
popl
ret
push
adc
test
mov
pop
ljmp
jge
mov
ret
dec
adc
out
lods
loopne
std
imul
sbb
stos
out
jno
sbb
jp
push
mov
icebp
int
pop
add
mov
imul
je
pop
lret
push
into
pop
lret
dec
lock
mov
inc
clc
lods
outsl
pop
or
shrl
fsubrs
rcrb
xchg
push
adc
mov
insl
sbb
cmp
mov
mov
jbe
sbb
bound
out
dec
sahf
rol
movsl
frstor
ds
xor
fmul
aad
push
mov
push
inc
adc
loopne
and
add
sbb
outsb
push
repnz
in
jp
jle
mov
sahf
jo
arpl
ror
lret
cltd
in
lods
inc
push
push
mov
fnsave
repnz
push
das
and
das
cmpsl
inc
rcr
ret
insl
loopne
or
push
push
pop
mov
xchg
push
adc
insl
aas
lea
shll
adc
fldl
je
inc
xor
fadds
fdivp
adc
cmp
mov
aas
push
bndldx
out
adc
jg
sti
cmp
notb
dec
mov
xchg
pop
popa
mov
aad
pop
mov
mov
fdivrl
jno
rorl
or
ficompl
mov
lds
mov
lahf
lahf
std
ret
push
cmpsb
pop
movsb
ss
les
adc
pop
test
pop
jge
push
in
inc
aaa
call
inc
jmp
xchg
cmc
pop
ljmp
loope
in
pop
jl
pop
pop
xor
popf
push
outsl
sahf
add
outsb
xchg
mov
cmp
push
sub
stos
sysexit
test
mov
cmpsl
test
add
cmc
xchg
repnz
inc
xchg
inc
add
push
aaa
dec
stc
or
dec
lahf
rcll
sbb
lock
inc
stc
popa
fisttps
adc
xchg
sbb
sbb
inc
pop
sbb
jge
in
add
sub
repz
hlt
insb
lds
add
xor
xlat
cmp
enter
pushf
push
mov
cwtl
dec
cmp
addb
mov
sbb
aad
jl
das
repnz
arpl
push
cmpb
xor
and
mov
bound
add
stos
add
adc
sahf
push
mov
cwtl
mov
cmp
and
clc
fdivr
cmpsb
push
mov
mov
out
subl
aas
pop
inc
int
movsb
into
adc
stc
jle
jge
mov
push
cmp
cmpsb
bound
mov
cmc
je
pop
push
push
in
push
xchg
test
gs
pop
std
jnp
lret
dec
xor
jecxz
adc
dec
dec
jns
and
ds
das
push
mov
into
push
cmp
jle
pop
stos
cmp
fimuls
mov
aas
or
movsl
ret
and
ljmp
dec
sub
test
in
adc
gs
icebp
shlb
mov
adc
in
xchg
inc
icebp
and
pop
jns
or
pop
imul
xchg
aam
rolb
clc
cli
outsl
xlat
push
shrl
into
jle
xor
dec
movsl
arpl
xchg
cmpsl
lea
add
xor
adc
cmp
inc
aam
inc
jmp
pop
sahf
cwtl
mov
pop
les
cmpsl
xor
outsb
scas
jecxz
xchg
das
popf
xchg
pop
xchg
notb
pop
or
aad
bound
loope
add
mov
mov
and
xchg
sbb
sub
add
push
sbb
sub
jecxz
pop
outsl
ljmp
and
cli
xchg
inc
mov
cmpsl
jg
testl
mov
mov
jno
outsl
bound
bound
ss
ret
test
fwait
aad
and
jae
jb
setae
cltd
push
or
rcll
insb
arpl
data16
sbb
cmp
lea
aad
int3
mov
mov
cmovae
push
inc
inc
in
fnstenv
and
pushf
add
mov
push
mov
dec
subl
sbb
loopne
js
mov
mov
mov
sbb
paddsb
jp
adc
cld
bswap
and
inc
jp
add
cmp
dec
rcll
push
mov
add
jmp
xchg
xchg
pop
mov
sbb
cmp
addb
pop
lcall
hlt
fs
xor
mov
push
jp
cld
or
pop
imul
add
leave
aas
icebp
cli
out
stc
js
das
iret
loope
fs
push
xor
push
jbe
add
xchg
test
es
int
mov
leave
cmp
hlt
dec
aas
in
mov
in
and
pop
leave
push
mov
pop
mov
dec
mov
cmpb
out
in
add
ficoms
cwtl
dec
lods
or
lods
cs
and
pop
push
jb
int
sbb
inc
andl
outsb
cwtl
sub
xchg
or
jo
mov
push
xchg
xor
add
int
enter
call
loop
adc
shlb
xchg
clc
adc
fwait
imul
iret
mull
dec
shl
jecxz
subl
pop
ljmp
xor
lret
lods
out
mov
pop
mul
scas
out
out
popf
adc
movsb
push
and
repz
stos
cs
stos
lret
outsb
cmp
xor
fdivrs
cmp
jno
mov
lods
mov
sub
in
loopne
test
pusha
movsl
mov
insl
negl
mov
lahf
outsb
cli
dec
outsl
xchg
adc
lods
adc
testl
stos
xchg
out
int
in
popa
xchg
loopne
sub
push
xchg
xchg
mov
mov
add
mov
cli
inc
dec
repnz
fwait
mov
pushf
jb
jo
pop
insl
xor
mov
repz
pop
dec
stos
inc
popl
loopne
test
xor
std
mov
push
ljmp
cvtdq2ps
sbb
hlt
leave
jbe
addb
sbb
aas
sbb
test
jbe
out
das
repz
incl
sbb
popf
adc
inc
movsb
das
sub
or
jg
jmp
cmpb
mov
ud0
jne
hlt
addr16
xlat
loop
push
dec
jae
gs
mov
in
pop
push
rorl
ret
fldcw
cmp
pop
pop
test
out
dec
insl
xlat
pop
fisubl
mov
mov
xlat
in
iret
ljmp
mov
xchg
sbb
mov
jp
xor
cmp
push
inc
arpl
jae
rcll
testl
cli
imul
mov
mov
lahf
xchg
leave
pop
xor
add
iret
cmp
or
decl
push
sbb
cld
jl
add
fsubrl
sub
mov
xchg
push
mov
rcrb
ficompl
into
jns
jb
push
mov
loop
out
shrl
add
dec
pop
push
cmp
aam
rol
mov
cmp
jo
cmpsb
das
lea
js
arpl
out
push
and
scas
lea
nop
stc
dec
jnp
sbb
jge
xor
gs
mov
out
inc
adc
inc
pop
jno
cmp
mov
fidivs
out
pop
sti
fwait
js
pop
stos
arpl
push
xchg
or
mov
cmp
mov
xlat
mov
push
fsts
cmpsl
aaa
fsubs
mov
sbb
xor
lea
out
jne
ficoms
gs
push
bound
xchg
fs
mov
imul
sub
aaa
pop
push
adc
lods
dec
sti
sub
mov
inc
cmp
data16
loopne
jp
sahf
mov
push
out
mov
js
jbe
pusha
dec
inc
add
fnsave
and
mov
std
jp
cli
pushf
mov
inc
push
sahf
gs
mov
movsb
shufps
pop
lret
xlat
or
subb
shrl
lret
fs
mov
js
mov
xorl
xor
inc
sti
call
sar
nop
rol
or
jns
jmp
lahf
stos
dec
and
xchg
iret
jl
out
test
xchg
shlb
fsts
arpl
sub
jge
xor
push
and
idivl
push
shrl
rcl
inc
sarb
mov
out
push
push
push
ljmp
cld
pop
jnp
jne
mov
jle
in
pinsrw
jp
sbb
adc
xchg
fdivrl
pop
pop
sbb
js
sbb
jno
pushw
adcb
cmc
loope
int
xchg
pop
ljmpw
mov
cmp
bound
clc
scas
jle
inc
jle
mov
cmpsb
iret
ret
push
out
xchg
add
or
test
stos
dec
data16
cmp
mov
jl
icebp
push
fwait
jg
mov
test
mov
fcomps
push
or
sub
sbb
fdivr
sub
mov
enter
mov
inc
pop
jg
sub
inc
xchg
xchg
mov
mov
sbb
jno
outsl
stos
in
push
pop
jnp
fildll
cmpl
push
mov
push
clc
andl
mov
mov
adc
out
popf
rol
push
daa
lahf
loop
xchg
lahf
iret
notb
jns
xchg
jle
je
jmp
inc
fldl
add
xor
and
int3
out
mov
push
int
std
jl
adc
ljmp
xchg
clc
mov
mov
scas
sub
sbb
lahf
out
mull
inc
pop
sbb
fisubrl
xor
mov
nop
jb
or
push
jg
ret
sbb
ret
pop
stc
dec
movsl
push
pop
adc
sub
test
add
add
xchg
fildll
push
jae
or
cmp
icebp
jno
push
arpl
fildll
cltd
add
mov
or
mov
adc
cmp
pop
jne
adc
inc
leave
pop
test
aas
pusha
mov
mov
sub
add
push
shrb
or
stos
add
push
sub
dec
in
aas
loop
or
mov
mov
out
aaa
and
mov
sar
dec
ret
call
std
lret
jns
inc
jne
inc
cmp
jb
lahf
es
mov
and
lock
dec
test
xor
lahf
dec
test
sub
repz
leave
or
jno
pop
xlat
mov
push
std
lods
push
sbb
xchg
call
adc
cltd
push
mov
xchg
ljmp
loopne
ss
push
mov
jmp
mov
adc
cmc
fs
or
mov
cltd
add
push
sbb
xor
inc
push
scas
fs
pop
cli
test
push
dec
out
in
call
cmp
out
ljmp
and
cmp
shl
dec
ljmp
xor
icebp
lods
or
subb
lods
jp
lock
sub
les
dec
sub
pop
dec
popf
xor
push
bnd
or
lods
dec
xchg
gs
data16
mov
dec
fcmovnb
jnp
cmpsl
in
imul
lcall
stos
jae
fadd
jg
dec
outsb
iret
mov
sbb
mov
popa
movsb
outsl
icebp
mov
aam
movsb
mov
mov
movsb
es
add
xlat
nop
push
sub
cmp
cmpsb
sahf
add
mov
enter
jne
dec
int
cltd
cmp
rorb
out
mov
scas
cmpl
insb
cmp
pop
pop
add
outsb
ret
in
out
adc
int
movsl
dec
insb
iret
inc
inc
test
sbb
and
cs
repnz
sub
inc
pop
mov
jo
jp
es
cltd
mov
push
dec
clc
decb
jne
push
dec
add
dec
iret
mov
or
mov
loopne
lock
lahf
faddp
gs
xchg
push
stc
insl
sub
jmp
movsl
out
jb
out
cld
repz
cmp
jbe
pop
ja
mov
jp
xchg
sbb
mov
cmpb
or
inc
pop
roll
cmp
das
jbe
add
out
sub
sub
int3
xchg
and
xor
shl
mov
imul
cmp
das
sahf
shll
jmp
sub
outsb
or
aad
push
dec
or
popa
adc
jge
xor
add
outsl
ds
sub
push
fs
push
cmp
xor
mov
es
sub
leave
aas
adc
dec
out
or
subl
mov
pop
sub
mov
jae
inc
sbb
movsb
mov
imul
pop
lcall
mov
lods
lcall
sti
add
ss
mov
or
sub
outsb
xor
aad
int3
xlat
test
fidivrs
mov
test
notl
cmpsl
xchg
inc
shlb
movsb
jb
push
cld
inc
lahf
dec
cmpl
loope
mov
xchg
dec
es
xchg
push
jne
dec
mov
push
inc
fisubs
fistpl
push
xchg
xor
mov
out
and
sarl
ja
imul
mov
mov
pop
lds
dec
push
scas
pusha
pusha
jnp
imul
dec
xor
and
sbb
arpl
push
and
sbb
bswap
shlb
xor
sbb
inc
mov
sti
daa
jmp
shll
scas
loope
dec
xchg
je
mov
shll
je
sbb
inc
push
push
jnp
stos
push
cmp
sti
jle
sub
add
das
sub
in
mov
scas
in
jb
stos
xorb
fldenv
or
les
test
jo
leave
insb
nop
adc
mov
add
xchg
nop
fcmovnu
inc
fs
ret
in
test
out
mov
out
les
xchg
mov
out
sar
das
scas
clc
ljmp
jns
out
push
cltd
sbb
push
sbb
nop
cli
sbb
daa
insb
call
or
inc
lea
adc
outsl
loop
stos
fnsave
sbb
pop
push
ret
dec
jae
jne
in
fsubl
inc
sub
or
mov
popa
cmc
mov
rcll
cs
sub
imul
in
xchg
inc
or
xor
xchg
cmp
dec
popa
sti
xchg
jle
test
adc
rorl
adc
into
cmp
and
push
xor
jb
mov
or
iret
cmp
mov
cmp
pop
jg
pop
fcmovu
dec
in
out
repz
or
lods
push
sub
dec
popf
popa
and
insb
fldcw
or
orb
lahf
lcall
push
xchg
stos
hlt
or
pop
fadd
lret
cld
fisubs
shl
ja
sarb
lahf
mov
aad
sbb
nop
aad
test
out
std
je
fiadds
add
aaa
addr16
jmp
jl
inc
test
aas
mov
adc
adc
imul
cmpl
push
repz
mov
divl
fs
add
push
lds
push
push
decl
add
insl
mov
sbb
cmpsl
cmc
pop
cmc
jns
orl
adc
jp
pop
xchg
jnp
cmp
scas
pusha
fstpl
sbb
enter
addl
movl
imul
or
jecxz
test
fistps
cmpsl
stos
xchg
frstor
add
mov
int3
push
repz
lahf
and
test
and
ror
xchg
jae
test
xor
rcrb
inc
icebp
inc
popf
mov
test
fistps
mov
xchg
mov
rcll
mov
out
lock
adc
ss
push
jmp
addb
adc
popa
imul
push
push
adc
and
jecxz
cmpsb
incl
push
in
cmpsl
add
or
repz
gs
jmp
enter
or
rcrl
insl
dec
jbe,pt
and
or
mov
inc
jmp
mov
loope
lahf
mov
cmp
lret
mov
enter
fwait
lods
and
andl
sub
mov
pop
sbb
repz
push
pop
shr
xor
cwtl
aaa
xchg
int3
aad
popf
cmp
test
pop
cltd
cmp
in
out
inc
jb
mov
add
into
cmpsb
fwait
xlat
xor
and
push
popl
rolb
dec
add
shr
dec
enter
mov
dec
jns
imul
popa
fwait
aad
cs
mov
add
out
stc
cld
pop
dec
test
and
jmp
idivl
lods
pop
adc
pop
fadds
in
jl,pt
sbb
jle
fmull
mov
ss
xchg
jl
mov
or
xchg
mov
cmp
loope
mov
mov
dec
jge
rorb
cmp
daa
mov
or
cmp
daa
adc
mov
add
addb
js
es
add
xchg
mov
jp
rcr
fdivrs
pop
in
clc
fcompl
dec
jge
pop
push
jne
in
lcall
xor
test
pushf
xorb
inc
mov
pop
icebp
adc
imul
mov
outsl
and
inc
repnz
out
fisubrl
fbld
dec
fsubrl
mov
scas
leave
cmp
cmp
lret
mov
xchg
cmpb
aas
sbb
xchg
leave
sbb
lret
cmp
stc
or
adc
mov
out
pop
adc
sbb
movb
push
mov
or
xchg
das
jne
addr16
xchg
mov
enter
icebp
sbb
imul
dec
mov
jne
xchg
adc
push
or
paddd
pop
in
dec
sarl
jbe
and
rcl
mov
inc
fwait
out
or
sahf
outsb
push
je
movsl
repnz
jae
enter
or
movsl
int
add
js
repz
psubsw
xchg
xchg
daa
push
iret
xor
sub
xchg
les
push
jg
push
jno
sub
dec
cld
cld
adc
sbb
xchg
cmpb
jp
stos
and
into
xlat
or
sbb
push
xlat
insl
dec
sti
inc
xor
outsl
inc
fnstcw
or
xor
insb
mov
sbb
je
add
call
cltd
sbb
inc
cmp
into
ljmp
dec
fnsave
aaa
lahf
pop
mov
rcll
test
movsb
inc
jo
xchg
mov
popf
pop
jp,pt
scas
lcall
sbb
ljmp
or
add
pop
roll
jge
stos
js
in
into
lret
and
jg
sbb
push
xchg
dec
xchg
insb
test
outsl
ja
pusha
sub
xchg
xor
aas
ret
pop
movsl
out
mov
repz
clc
out
add
scas
shr
cmp
imul
jg
xor
push
rcrb
xchg
pop
insl
popf
cmp
add
scas
in
push
jns
sub
ret
dec
les
iret
iret
les
imul
dec
inc
shlb
sub
shll
pop
popa
sub
dec
push
mov
or
jge
dec
xchg
loope
arpl
daa
outsl
je
out
loope
xor
cld
and
mov
pop
repnz
pop
lds
leave
jl
fistps
push
in
aas
in
pop
fsts
enter
out
daa
cwtl
fs
pop
sub
aad
enter
xor
dec
in
lods
in
add
mov
xchg
test
mov
push
fimuls
push
mov
mov
sub
ja
fstpl
mov
add
pop
pop
inc
pushl
ret
pop
movsl
pop
out
sbb
nop
insb
bound
out
shlb
push
sbb
data16
xchg
mov
out
or
in
leave
in
lret
cmp
adc
jno
loop
dec
imull
xchg
add
sti
cmp
adc
int3
jg
rorl
ffree
add
mov
cmp
insl
dec
mov
or
adc
lds
int3
mov
popf
call
jecxz
jbe
mov
in
or
adc
cmc
jo
cld
mov
cmp
sub
icebp
xchg
mov
fucomp
mov
or
or
scas
push
lcall
sarl
cltd
stc
jp
xor
and
mov
mov
test
mov
cmp
aas
cmp
fsubs
pop
int3
xchg
cmpb
add
fisttpll
sti
stos
test
sub
inc
push
add
cltd
pop
xchg
ljmp
pop
lds
ss
mov
imul
add
adc
and
mov
clc
cmp
dec
cmp
mov
mov
fmulp
lret
jle
lock
iret
scas
lock
insl
or
out
push
fcoml
dec
cmc
clc
sub
sub
push
cmpsl
mov
sti
cli
aaa
dec
hlt
stos
in
popa
sub
lods
xchg
rclb
mov
xor
xchg
nop
adc
xchg
out
stos
loop
push
ljmp
das
pop
psubd
adc
xlat
jle
les
add
push
dec
sahf
rcrl
out
fwait
mov
in
fisttpl
filds
js
mov
adc
test
jne
andl
cmp
lock
divb
arpl
outsb
mov
sbb
push
outsb
shr
cmp
aaa
stos
xor
and
add
cmpb
sbb
mov
or
xlat
inc
xor
out
fistpll
sub
and
call
jbe
ss
jo
jecxz
and
cltd
adc
lods
mov
cmpsb
sahf
pop
add
addr16
test
das
lret
pop
xor
mov
repz
fwait
sub
mov
xor
test
iret
mov
call
or
aaa
jb
mov
inc
fidivrl
mov
jp
imul
rorb
lds
mov
xor
popa
lret
mov
js
mov
mov
push
adc
push
fisubs
in
mov
push
inc
bnd
sub
mov
mov
inc
and
or
or
into
or
jne
sti
call
mov
jge
rcrl
mov
repnz
lret
xor
mov
shll
movsb
mov
loopne
xchg
popa
cs
push
xor
lcall
cli
adc
mov
cmp
mov
insl
mov
adc
jp
cmpsb
int
push
sub
dec
test
aam
inc
pushf
aaa
arpl
xchg
inc
outsl
xchg
jbe
adcl
xchg
cmp
in
out
push
dec
cli
sub
and
movsb
pop
jb
cmp
inc
mov
gs
arpl
data16
and
pop
jmp
mov
imul
das
out
add
add
stc
dec
jl
sub
in
pusha
and
pop
les
int
in
mov
pushf
test
out
cltd
and
jg
and
mov
lcall
mov
imul
adc
in
pop
shl
push
mov
aas
ret
out
sahf
pop
loop
addr16
sub
add
test
gs
inc
dec
or
and
add
pop
cli
js
inc
int
cmpsl
push
in
xchg
fimull
fsubrl
aaa
mov
pop
mov
cmpl
rep
in
fcoms
shrb
add
fwait
or
dec
outsb
sbb
dec
sarb
movsb
jecxz
sbb
inc
mov
imul
xlat
sub
test
jns
push
in
cmp
lcall
cmp
and
inc
ds
addl
push
or
adcl
add
enter
pop
jmp
xor
adc
insl
pop
fcoms
sbb
ja
sub
int
jp
mov
pop
mov
inc
sub
or
pop
loope
adc
jl
adc
sub
pop
inc
test
outsb
sbb
ss
pop
xlat
out
arpl
cwtl
imul
or
enter
test
mov
aad
push
insl
int3
or
xchg
in
stos
outsb
repnz
sub
mov
sub
sbb
leave
lods
push
call
in
sbbl
pop
sbb
push
dec
and
incb
aam
popf
test
retw
mov
pop
pop
and
leave
cwtl
leave
lea
or
in
sbbl
and
sbb
out
repz
outsb
mov
sub
inc
dec
push
sarl
xchg
out
je
out
testb
mov
mov
inc
neg
cmp
aad
cmp
xor
dec
xchg
test
add
stos
addr16
je
sub
fcmovbe
dec
dec
cli
fldl
loope
pop
syscall
arpl
out
fcmovu
xchg
or
push
cs
push
fnsave
mov
push
cs
inc
push
mov
leave
adc
in
clc
pusha
pop
outsb
mov
cwtl
fistpll
cmp
and
daa
jp
sbbb
sbb
pop
sbb
aas
jge
jle
aad
add
mov
cmp
cmpsl
xchg
mov
dec
mov
mov
ret
stos
xchg
lret
or
cmp
insl
add
push
rorb
out
and
push
dec
int
lds
scas
mov
jnp
sbb
stos
xchg
jmp
mov
repnz
outsb
jecxz
xchg
fldpi
fisubrs
adc
sub
xchg
fndisi(8087
add
push
outsl
aaa
xchg
aam
sbb
xchg
clc
dec
push
sub
sbb
pop
repnz
ret
mov
lret
add
scas
outsl
pop
sub
cld
jecxz
mov
imul
cmc
fcmove
or
icebp
inc
push
xchg
xor
frstor
mov
or
in
xchg
mov
jo
gs
pop
fisttpll
xchg
adc
out
int3
jp
rorl
in
or
loope
notl
iret
aad
jg
int3
sub
clc
xor
into
inc
call
sti
mov
jbe
cmp
cli
dec
sbb
enter
or
jecxz
popa
shll
jmp
cmc
xchg
push
fstpt
lahf
pop
add
cwtl
sub
push
sbb
jg
mov
leave
adc
mov
stos
lret
adc
hlt
sbbb
push
xor
adc
ja
jmp
repnz
push
or
mov
out
inc
jae
dec
xchg
mov
xchg
fbstp
mov
test
xor
inc
mov
dec
leave
pushf
stos
dec
xchg
outsb
test
xchg
mov
jnp
sub
dec
insb
into
test
adc
aaa
xor
pop
mov
xchg
dec
add
jecxz
inc
jo
adc
lods
clc
sahf
ja
sub
test
arpl
and
insl
imul
cmpsl
add
cmp
fs
mov
je
add
scas
mov
jno
sub
xchg
mov
jno
or
int
inc
rcrl
sbb
mov
xchg
xchg
and
jne
and
cmp
movsb
cmp
lcall
iret
jl
iret
or
adc
push
hlt
in
cmp
flds
rclw
push
jnp
shll
cwtl
lds
fdivp
jno
xchg
enter
inc
mov
jne
je
jecxz
js
jle,pn
add
xor
mov
or
fnstcw
or
imul
outsl
xchg
or
mov
sub
pop
test
push
adc
imul
mov
or
data16
daa
sbb
adc
cmp
sahf
ror
push
push
mov
ja
sbb
stos
ret
inc
les
push
inc
xchg
add
js
sub
add
or
aaa
shrb
test
dec
mov
pop
rolb
pop
dec
fstl
aas
fs
rorb
sub
scas
cs
cmc
imul
mov
lahf
cvtdq2ps
pop
pop
cwtl
push
adc
sub
mov
pop
jns
aaa
push
jne
fnstsw
pop
inc
mov
add
push
add
rolb
bound
adc
icebp
sub
mov
cli
in
fs
xlat
addps
sub
nop
or
and
not
ljmp
xor
inc
ret
dec
xchg
les
mov
ss
mov
nop
xchg
shl
es
pop
jmp
hlt
inc
sub
dec
push
dec
add
les
and
mov
outsb
and
ficoms
pop
mov
xchg
test
xor
add
ror
and
cli
movb
dec
enter
test
sarl
imul
out
add
dec
scas
enter
mov
iret
inc
popa
add
jmp
sub
mov
pop
les
sub
into
push
cmp
rclb
sub
cld
sub
inc
mov
scas
lds
or
out
and
inc
pop
xor
xor
inc
jp
in
dec
loopne
cld
dec
jns
fisttpll
dec
in
test
pop
mov
ret
fs
sbb
add
or
mov
push
mov
cmp
mov
adc
pop
test
push
out
mov
aas
int3
iret
out
mov
test
xchg
inc
iret
subb
ret
bound
add
stos
mov
lret
repnz
mov
push
or
cwtl
xchg
fistpl
push
add
jmp
xchg
mov
test
outsb
jp
test
cmp
sub
push
xchg
and
test
icebp
push
mov
inc
mov
mov
rclb
aad
push
xor
pop
or
xchg
cld
push
addr16
or
pop
std
jp
mov
sbb
adc
inc
inc
pushf
out
push
out
and
inc
mov
inc
out
out
sub
mov
leave
adc
fs
add
sbb
sbb
mov
pop
cmp
adc
push
scas
sbb
xchg
mov
clc
imul
cmc
inc
add
mov
iret
cmp
idivl
adc
fmuls
jge
lods
xor
pop
dec
xchg
out
repz
psllw
mov
mov
addr16
scas
dec
int3
iret
popa
loope
loop
or
xchg
mov
mov
into
ret
or
fwait
xor
dec
push
pusha
cltd
sbb
or
sub
xlat
push
cmp
adc
sub
jge
sub
shl
mull
data16
cwtl
push
divb
push
pop
mov
ss
xchg
xchg
arpl
gs
loop
jp
push
xor
push
pop
inc
mov
sahf
mov
shll
push
inc
pop
push
testb
cltd
or
mov
movsb
xchg
add
mov
push
mov
inc
sub
mov
jnp
dec
out
bound
xor
or
push
test
addr16
dec
cmp
cs
cmpsb
xchg
loopne
aad
and
sub
cmp
test
dec
jg
dec
lea
mov
cmp
popf
mov
jge
clc
fistpll
or
or
fcoms
sub
adc
mov
scas
push
inc
inc
jo
aas
mull
cs
xlat
std
xchg
test
pop
jmp
adcb
and
jbe
add
inc
test
jno
inc
xor
enter
push
aad
and
jl
pop
xor
push
inc
jp
lods
scas
ja
test
jle
mov
mov
xchg
sbb
mov
sub
and
arpl
call
cmp
jmp
push
jp
inc
dec
and
sub
cvtdq2ps
sarl
mov
inc
daa
test
sbb
cs
mov
imul
lret
iret
addr16
scas
imul
xchg
pop
mov
hlt
lcall
push
mov
fprem1
aad
scas
cli
cli
imul
or
call
add
push
mov
and
xor
enter
inc
and
xchg
mov
sbb
jnp
lar
sbb
fdivrs
push
test
sbb
nop
add
add
dec
nop
mov
push
xor
and
testb
into
popf
popf
sub
sub
or
insl
jbe
les
ljmp
dec
bound
es
sbb
js
repnz
jmp
mov
pop
or
add
mov
jp
xchg
stos
arpl
push
test
pop
dec
outsl
mov
hlt
inc
flds
dec
adc
jp
mov
dec
xchg
jmp
jb
xchg
mov
xchg
test
cs
push
lock
push
or
xchg
insl
mov
enter
sub
push
push
fildll
sbb
fisubs
jp
lahf
lcall
not
and
icebp
leave
fisubrs
jecxz
mov
mov
pop
mov
loopne
out
into
mov
popf
es
pop
shll
cmp
repnz
pop
out
sbb
xchg
push
fcompl
rcr
mov
sbb
xchg
xchg
stos
and
jns
imul
sbb
xor
jno
sahf
shrb
pusha
popa
sub
sbb
loope
pop
and
add
and
xor
or
jae
scas
jl
sub
add
and
aam
sbb
and
out
imul
xor
pop
aad
mov
outsl
dec
xor
push
dec
xor
cltd
int
mov
fidivrs
jbe
or
add
out
call
mov
jbe
imull
dec
or
scas
mov
jne
es
and
mov
test
popf
dec
lret
xchg
push
inc
gs
push
loope
jne
lods
add
aas
shlb
or
int
or
into
mov
mov
add
cmp
or
or
or
call
and
popa
popa
add
cld
mov
pushf
mov
mov
pop
pop
fdivrs
cmp
lahf
stos
out
push
hlt
jae
dec
daa
mov
stos
stc
enter
lahf
lds
sarl
sbb
dec
xor
ror
testl
cmpsb
mov
inc
jmp
mov
sub
sub
sbb
mov
sbb
les
lock
dec
pushf
push
repz
mov
fwait
lret
jle
je
mov
shrl
dec
popf
mov
lods
jno
push
jg
push
adc
int
or
xor
sub
push
jb
push
sahf
ret
arpl
lods
je
sbb
dec
mov
insl
data16
mov
add
sbb
in
xchg
jl
arpl
sub
xlat
iret
pop
inc
push
fstl
adc
cmp
loop
or
popf
jne
out
xchg
insl
mov
out
mov
ret
adc
dec
xlat
adc
push
cmp
sub
idiv
and
adc
push
rcrl
aas
cld
shrl
xchg
popa
xchg
cmp
inc
ffree
xor
or
fstpl
jae
insb
or
pop
cmp
pusha
mov
lea
mov
aas
xchg
sub
pop
sbb
stc
mov
pushw
out
mov
mov
fs
xchg
sbb
push
push
jbe
pop
lds
pop
cmp
fimull
popa
aam
jb
cld
mov
gs
shrb
mov
mov
rcrl
jne
pop
arpl
sahf
nop
cmp
mov
lea
jae
mov
call
add
popf
mov
loop,pt
mov
sahf
dec
hlt
lea
jo
push
push
stc
mov
stos
outsl
mov
fwait
lret
lods
mov
push
pop
xchg
adc
xlat
adc
incl
in
roll
les
inc
sub
sbb
cmp
sti
cs
div
cmp
rcrl
aad
cmp
xchg
int3
sbb
mov
dec
insb
loopne
jo
shll
pop
mov
out
shl
sbb
jb
mov
ret
fildll
aad
in
xor
nop
repz
dec
mov
je
add
pop
xchg
cmp
scas
arpl
repz
inc
enter
sub
mov
xor
outsl
ja
dec
sub
push
cli
rolb
push
mov
divl
dec
cmpsl
fs
pop
xchg
inc
pop
pop
pusha
xlat
test
stc
mov
lahf
dec
push
dec
push
mov
gs
clc
fs
jg
imul
das
insb
sbb
mov
mov
js
sbb
pusha
std
popa
and
mov
xchg
sar
int
movsb
das
mov
es
repz
push
add
and
and
ror
pop
mov
adc
xor
fcomp
inc
cli
std
add
call
adc
daa
jnp
add
cld
cltd
mov
xacquire
dec
mov
and
jl
inc
aas
jecxz
movsb
jg
idivb
mov
and
movsl
cmp
es
mov
cs
mov
ljmp
pop
cltd
xchg
in
cld
mov
stos
fbld
push
push
fnstsw
jge
xchg
mov
sbb
lcall
add
fisubl
sbbl
out
addb
iret
mov
mov
inc
pushf
inc
jl
or
ds
sub
rcrb
cld
mov
insl
lahf
mov
pop
jnp
inc
loopne
scas
mov
pop
dec
jne
or
and
lods
int3
xchg
cli
push
push
aas
aam
aad
xchg
loop
sbb
mov
call
xor
fmull
push
repz
jp
pop
repz
cmpsl
je
xchg
insl
sarl
lcall
push
and
test
addr16
dec
fwait
inc
lcall
push
sbb
ss
into
mov
xchg
loopne
pop
roll
xchg
outsb
sbb
or
movsl
cmp
fistpl
call
ja
inc
sbb
dec
clc
dec
push
sbb
loope
rcrl
xchg
idivl
mov
ret
mov
pop
jl
cmpsl
inc
pop
lods
stos
adc
sub
pop
out
in
push
mov
add
outsb
cs
pop
fadds
push
jge
call
cs
leave
push
inc
test
cmp
aad
inc
add
mov
mov
mov
ret
push
inc
outsb
sbb
mull
test
into
xor
out
out
jecxz
int
pop
cli
jne
xor
mov
int3
repnz
push
es
pop
add
mov
aas
or
mov
pop
out
push
inc
xchg
addr16
or
adc
mov
mov
inc
fimuls
addl
scas
xchg
mov
shr
push
pop
jge
mov
fwait
jnp
or
push
insb
shll
aad
mov
dec
push
or
stos
xchg
shlb
and
jle
repz
and
les
fcomps
fwait
movsb
loopne
shrb
adc
push
mov
sbb
out
push
adc
aam
push
fists
loopne
jge
aad
inc
xchg
add
nop
aas
push
mov
fisubrl
popa
popa
mov
and
or
xor
addr16
lods
dec
fmul
iret
sbb
aaa
xor
dec
push
or
mov
sbb
pop
ret
adc
test
push
inc
dec
inc
sbb
jo
add
lahf
mov
pop
add
iret
push
mov
pop
mov
ljmp
aaa
loop
inc
icebp
mov
add
mov
popa
xchg
insb
sub
inc
adc
adc
lahf
loope
jp
and
sbb
jne
mov
pusha
sub
ror
mov
adc
std
sbbl
inc
popf
js
dec
repnz
dec
scas
addr16
or
lea
cltd
into
mov
cwtl
mov
enter
mov
cmp
or
xchg
sarb
jl
testb
inc
jg
cmp
dec
jecxz
xor
sub
xchg
inc
mov
push
jge
ss
insl
fisubl
jle
xchg
inc
mov
lret
cltd
mov
xor
clc
adc
fadds
in
or
dec
push
stos
sbb
cmp
cli
push
sub
std
adc
outsb
ret
jnp
addl
shll
ja
push
add
loopne
das
cltd
mov
arpl
xchg
addb
iret
and
pop
dec
shrl
sbb
jl
inc
cltd
outsb
mov
lcall
pop
mov
fs
arpl
cmpsl
push
sub
stos
jb
mov
test
int3
mov
xlat
cmp
pop
imul
imul
push
jl
cltd
lahf
test
and
fidivrl
inc
push
and
call
stos
out
ljmp
std
and
mov
scas
inc
popa
mov
mov
dec
arpl
out
in
xor
xor
xor
pop
aam
les
ds
adc
int3
xchg
stos
rorl
dec
xchg
aaa
mov
mov
popa
hlt
repnz
out
sti
cmp
cwtl
decl
mov
push
mov
test
mov
int3
mov
loop
hlt
pop
sub
sbb
push
dec
mov
out
inc
pushl
and
pop
xlat
cmpsl
ss
xchg
ds
stos
xor
push
push
imul
mov
outsl
push
sub
jno
cmp
inc
scas
adc
jp
add
mov
lods
cs
pop
decb
xchg
lret
xchg
adc
sti
pusha
aas
sbb
dec
xchg
dec
sbb
and
cmc
or
push
ret
inc
push
mov
xchg
loope
cmpb
nop
aad
std
loope
xor
cld
sub
in
imul
add
sbb
aad
nop
mov
cli
addl
sub
lahf
out
jne
cli
jle
or
andb
sub
xchg
pop
push
inc
fucomi
aas
inc
sahf
incl
and
jae
jne
add
into
xor
stos
pop
cmp
dec
fstl
movsb
call
rcl
ljmp
jle
xchg
lret
mov
jmp
dec
lods
xchg
int3
outsb
sub
push
push
xchg
xchg
scas
xor
or
inc
in
xor
sbb
daa
in
rclb
std
not
xchg
jo
push
mov
fwait
std
jmp
pop
sbb
cmp
fimuls
pop
push
stc
jo
mov
mov
sbb
enter
mov
or
ficoml
repnz
cmp
into
mov
addr16
push
cmp
mov
outsl
stos
cs
mov
frstor
pop
movsb
push
cmpsl
inc
or
enter
adc
ror
add
add
arpl
pushf
cwtl
jae
into
imul
shrb
mov
out
inc
mov
adc
js
or
movsb
xor
enter
sahf
or
push
jmp
push
and
int3
xchg
inc
imul
in
xor
hlt
dec
shlb
vpacksswb
mov
jge
pop
push
pushf
pop
std
scas
outsb
ja
rorl
mov
insb
push
cmpsl
xchg
cmpb
aad
outsb
push
push
jge
xor
cmp
popa
jl
ret
inc
pop
add
sahf
pop
lods
adc
sub
or
or
mov
jo
aaa
pop
loopne
mov
push
push
xchg
icebp
movsb
adc
dec
aas
sarl
jle
ret
imul
pop
jmp
std
imul
and
pop
cmp
adc
jbe
xor
add
or
fscale
movl
xchg
int3
mov
jmp
lcall
data16
and
ds
dec
xor
xchg
adc
daa
jmp
lret
mov
mov
mov
movsb
xor
pusha
push
fsubrs
addr16
lahf
pop
xchg
or
push
dec
jg
mov
pusha
sbb
push
fldl
scas
push
fsubl
adc
loopne
test
pop
dec
add
and
inc
inc
mov
fstpl
xchg
sub
add
ja
mov
into
gs
dec
jmp
shl
popf
lret
xchg
hlt
pop
bound
mov
adc
bound
add
jl
in
xor
into
xlat
xor
sub
leave
inc
pop
sub
pop
xor
mov
sbb
js
xchg
xchg
dec
into
push
cmpsb
jne
mov
ficompl
enter
dec
pop
jno
pop
pop
mov
mov
push
hlt
and
repz
call
lods
in
aaa
call
cmpsb
into
push
aas
jnp
mov
ljmp
mov
adc
shlb
sub
les
jae
inc
xchg
dec
dec
push
ja
sbb
cmp
leave
cmp
push
push
int
rclb
lods
cli
aad
out
cmp
lods
in
sub
push
xlat
mov
fcoms
adc
inc
and
ja
inc
inc
xchg
mov
divl
dec
mov
stos
stos
xchg
and
sbb
cmpl
mov
xchg
pop
add
xchg
mov
je
decb
sub
mov
dec
sbb
movsb
pushf
rorl
jb
jb
dec
cmp
in
jae
lcall
int3
divb
and
and
mov
test
xor
sbb
inc
subl
cmp
xchg
sbb
inc
inc
jp
lret
add
push
xchg
gs
xchg
insb
xchg
mov
daa
cld
repz
cld
lret
fwait
xor
adc
jno
or
cmpsl
pop
or
mov
pop
les
icebp
sub
mov
jl
jmp
lods
ja
hlt
fmuls
xor
dec
dec
daa
cmc
inc
mov
jae
lret
daa
inc
add
push
xor
xchg
mov
lds
inc
in
jo
cmp
cmp
mov
jmp
rcrb
cmovno
stc
in
xchg
jno
push
jge
mov
loope
xchg
fstpt
jb
fistpl
dec
je
pop
mov
stc
cmpb
or
lret
test
xor
push
cmp
dec
pop
insb
outsl
adc
jb
fcoml
jne
stos
push
jns
test
cmc
rcrb
fldenv
aam
jecxz
jecxz
lds
add
fstps
popf
inc
sub
inc
jg
je
mov
outsl
push
or
inc
inc
frstor
or
inc
insb
or
push
jae
mov
jge
jae
and
andb
call
push
das
cmp
sbb
mov
popa
mov
sbb
xchg
push
dec
or
inc
into
jno
pop
jnp
dec
adc
jmp
cmp
mov
mov
setae
stos
mov
mov
adc
sbb
and
pusha
popf
ss
xchg
in
push
ret
test
cli
xlat
mov
jb
mov
add
shlb
mov
loop
xchg
stc
jle
mov
in
mov
sbb
and
bnd
sbb
pop
mov
rolb
aam
or
push
jnp
mov
hlt
and
ss
cmp
jb
mov
mov
cs
mov
mov
dec
lock
mov
fistps
jo
pusha
or
push
xor
xchg
jle
pop
popf
xchg
mov
dec
inc
add
xchg
xchg
movsl
scas
ljmp
andb
clc
sbb
or
adc
or
add
aad
stc
mov
nop
lea
lods
aas
nop
or
leave
movsb
cli
jp
push
lea
fsubl
test
aad
xor
cmp
dec
push
jp
sbb
pop
mov
lret
or
enter
mov
jbe
adc
push
orb
sbb
mov
add
mov
mov
sub
and
sub
and
cmp
sbb
scas
pop
divb
fnsave
cmc
adc
stos
lds
movsb
int
sub
mov
pop
sbb
js
loopne
and
jle
jmp
pusha
lods
mov
inc
cmp
dec
sbb
jb
mov
cwtl
mov
sahf
xor
call
neg
out
cmpsl
xchg
out
jg
mov
dec
nop
dec
sti
out
adc
xor
fbstp
and
push
xchg
xor
pushf
sbb
jno
rcrl
out
cmp
fcoms
dec
xchg
ret
ljmp
sbbb
test
js
xor
xchg
cli
dec
xchg
daa
mov
add
mov
push
or
jl
fidivrs
pop
repnz
push
fidivs
test
xchg
lock
push
cmp
daa
pop
xchg
sarb
inc
mov
into
js
out
mov
pop
fildll
pop
aad
xchg
lahf
out
mov
or
mov
push
mov
push
jne
out
outsl
mov
xchg
int
cmp
mov
negl
outsb
clc
pop
xchg
add
xlat
faddp
pop
imul
cwtl
pushf
sbb
mov
xor
sub
mov
pop
fidivrs
jne
xchg
ret
int3
enter
jns
adc
push
pop
into
and
adc
aaa
adc
sub
inc
sbb
fxch
pop
xchg
mov
mulb
mov
je
ret
sbb
in
imul
pop
inc
pop
lcall
cmpsl
pop
outsl
push
test
add
cmp
fmull
outsl
ljmp
pop
gs
sub
sbb
adc
movsb
mov
je
or
subl
lods
pusha
mov
ss
pop
movsl
xchg
addr16
movsb
mov
hlt
push
push
ret
into
ljmp
fisubl
xor
xor
pusha
jle
mov
lods
pop
out
mov
mov
mov
inc
enter
fldenv
add
lock
fnstsw
icebp
xchg
mov
xchg
cmpsb
in
nop
fstpl
fisttps
scas
and
jp
sbb
jbe
push
aam
push
xchg
je
movsb
and
push
andb
push
jno
icebp
xchg
inc
sbb
add
shlb
roll
jns
xor
les
sti
push
xor
lds
out
rcll
loope
mov
push
hlt
dec
lahf
cmp
lahf
test
xchg
mov
or
xor
sbb
int
lret
test
out
pusha
jbe
push
jae
test
add
adc
lods
xchg
shl
jecxz
outsl
dec
fs
test
pop
or
sbb
push
cli
cmp
mov
mov
jno
dec
incb
cmpsb
movsb
sbb
xchg
sub
out
rcrl
sub
cmc
std
or
add
inc
xor
enter
adc
jbe
xchg
testl
aas
repz
dec
push
fs
push
inc
rolb
cmpb
mov
andl
add
mov
lock
pop
lahf
loopne
aas
cmp
pop
xor
jg
popa
gs
cmpsl
jp
mov
xchg
les
and
fs
lahf
cmpsl
cmp
pop
sbb
in
or
loope
mov
jno
addl
jmp
sarl
dec
push
push
and
mov
mov
cmc
insb
xchg
and
jb
stc
test
sarb
adc
mul
mov
or
mov
mov
inc
popf
imul
lahf
jno
rorl
or
xor
test
lahf
or
repnz
sbb
mov
fisttpll
push
dec
aaa
lahf
out
pop
sbb
cmp
inc
sbb
cwtl
adc
cmp
inc
add
out
test
mov
ds
or
inc
icebp
inc
mov
rol
inc
popl
adc
inc
sub
in
xor
adc
adc
push
fs
leave
popf
mov
fistpll
ret
enter
sub
cli
repz
cli
push
in
pop
icebp
mov
xchg
cltd
orb
aam
and
mov
push
jbe
or
orl
and
fsubr
loop
dec
and
imul
popa
xchg
enter
lcall
test
cmp
jno
decb
pop
das
jle
in
mov
xchg
stos
push
mov
push
sub
dec
loop
pop
jp
lea
pop
mov
mov
sarb
jmp
es
shr
cwtl
add
cmpsb
xchg
sub
mov
aas
in
push
icebp
inc
add
or
jmp
and
jmp
ds
out
insl
pop
movsb
sbb
mov
add
xor
xchg
loope
aam
mov
loope
adc
nop
mov
iret
sub
mov
in
loop
movsl
lods
out
push
cltd
adc
cli
cmp
xlat
jge
fistps
mov
ret
cli
mov
int
pop
xchg
lret
add
inc
push
lret
push
out
imul
and
cwtl
test
mov
lods
pushf
inc
mov
out
into
xchg
jbe
pop
insb
repnz
jbe
inc
push
and
repnz
shll
jl
sti
loope
in
jp
xor
and
test
jb
stos
int
mov
jp
lcall
sahf
ljmp
sbb
lahf
or
add
push
aad
fmull
fwait
mov
insl
aaa
pop
lods
pusha
inc
or
push
jb
mov
add
dec
data16
pop
push
or
sbb
in
sub
or
adc
mov
cmp
mov
mov
jge
pop
orl
leave
add
and
movsb
fsubs
xor
add
int3
inc
js
cs
xchg
mov
sub
jbe
rcrb
lcall
pop
outsb
xor
and
xor
add
adc
and
jecxz
cltd
lea
inc
and
inc
inc
out
mov
and
nop
xor
cmp
sbb
loope
stc
ret
jnp
arpl
inc
and
mov
enter
pop
inc
out
add
loopne
cli
add
int3
dec
pop
xchg
sbb
cs
pushf
push
cld
jmp
test
das
jb
iret
mov
lret
popf
cli
mov
jo
add
sub
mov
adc
orl
jo
adc
insl
inc
mov
movsb
push
dec
push
xchg
stc
ficomps
and
inc
hlt
mov
mov
push
fbstp
xor
insb
mov
and
pop
push
push
xor
xlat
mov
xor
fstpl
sti
fisttpll
pop
mov
hlt
test
sub
repz
mov
out
aam
imul
push
pcmpgtd
xchg
xor
add
ljmp
or
sub
test
mov
ja
and
mov
aas
mov
inc
mov
xchg
push
ljmp
cltd
adc
inc
aam
ret
or
or
cmp
sbb
push
pop
movsb
push
insl
mov
pop
insb
call
xor
repnz
mov
xor
push
pop
subb
push
repz
jo
mov
sbb
or
lret
mov
stc
pop
cs
sub
test
or
jb
cmp
ds
sbb
mov
mov
push
mov
mov
xchg
or
outsb
pusha
pop
out
jb
sub
mov
das
ret
sbbb
xchg
push
push
roll
add
push
das
leave
xchg
inc
test
leave
cltd
popa
mov
sbb
imul
xor
subb
mov
stos
repz
addr16
xchg
cltd
sub
sbbl
push
imul
lret
inc
xchg
cmpsl
imul
rolb
add
inc
or
pop
jb
jne
or
jmp
ret
addr16
pop
xchg
stc
icebp
mov
cmp
add
imul
lret
pop
outsl
xchg
cli
push
ds
jnp
jecxz
push
icebp
out
cmp
adc
push
mov
lods
push
cli
cmp
add
xchg
int
push
adc
push
out
lret
clc
ds
xchg
mov
and
mov
popf
jae
rcl
orb
pop
inc
jecxz
xchg
clc
dec
jmp
xchg
xor
repnz
inc
xchg
out
ljmp
negb
cmpsl
xlat
fwait
ret
outsb
or
cmp
sub
stos
out
test
add
popf
sti
mov
mov
pop
jbe
push
xchg
in
into
sar
ficomps
jl
pop
lea
test
sarb
push
sbb
lret
pop
ss
xchg
je
mov
jecxz
sub
aas
add
xchg
cmp
mov
jns
adc
sarl
into
imul
sbb
sub
out
adcl
in
and
aas
fimuls
dec
bound
sub
paddb
gs
inc
add
cwtl
jecxz
dec
test
dec
xchg
sarb
aad
jnp
out
xor
mov
inc
pop
mov
ret
mov
lea
or
sub
test
aad
shrl
mov
call
bnd
cs
outsl
scas
sub
pop
xchg
hlt
cltd
jne
aam
mov
push
out
mov
outsl
xchg
ja
inc
imul
ja
fnsave
lea
jb
and
dec
pop
push
ret
fadd
jo
xchg
mov
xor
sbb
les
xchg
pop
sub
jb
xchg
aas
imul
mov
cmp
xchg
add
push
mov
pop
test
loopne
jle
mov
xchg
out
sbbb
jnp
sub
adc
mov
or
das
js
adc
and
and
fsubl
inc
pop
sbb
xchg
pushf
push
stc
push
adc
adc
adc
mov
cmp
jns,pt
sbb
fwait
push
jb
enter
mov
inc
add
xor
inc
inc
xor
out
imul
pop
cli
or
aam
mov
inc
out
jg
mov
mov
lds
inc
int3
leave
jae
arpl
cmp
fsubp
push
pusha
je
and
adc
cli
pop
mov
push
int3
lret
and
pop
xchg
clc
inc
jne
mov
or
or
jmp
xchg
idivl
js
push
jle
ficoms
mov
adcb
fimull
lret
pusha
in
fmuls
idivb
xor
cld
call
lret
push
rorl
data16
sbb
mov
or
decl
xchg
ret
out
lret
lods
test
pop
repz
push
int
shl
stos
add
xor
fwait
cmp
movsl
mov
adc
jae
cmp
push
jmp
aad
jg
mov
repz
jae
cmp
pop
iret
sarl
outsb
or
dec
pop
insl
mov
mov
lcall
xor
jge
xchg
rcr
mov
mov
pop
imul
inc
fwait
repnz
lahf
aaa
ja
mov
shrb
stos
xor
jnp
dec
cmp
mov
xchg
pop
addr16
pop
inc
sub
or
xor
stos
out
sub
mov
mov
dec
mov
cld
cli
mov
out
xor
cli
sbb
call
mov
pop
lcall
cli
cli
cmp
and
push
data16
adc
xchg
js
xchg
sub
cmp
daa
push
xor
ja
cmp
or
daa
mov
inc
repnz
mov
lods
cmp
sbb
lea
add
jge
iret
test
aas
aaa
lret
and
out
call
es
cltd
pop
jmp
mov
sub
mov
sub
ss
adc
clc
xrelease
imul
pop
stos
inc
pusha
push
cwtl
adc
ds
xchg
jmp
push
ss
stos
popf
or
jnp
dec
lret
lret
inc
and
cld
leave
sbb
jl
iret
test
pop
or
inc
or
das
mov
and
scas
lods
cld
outsb
pop
notb
mulb
or
testb
mov
inc
or
cli
sub
fsubrp
sbb
test
sbb
mov
xlat
test
mov
pushf
push
orl
mov
jge
mov
adc
cwtl
pusha
add
sub
shr
out
int
pusha
xor
or
push
or
jmp
cmpsb
nop
sbb
loopne
in
pop
jl
movsl
pshufw
jns
dec
cs
sub
mov
mov
xor
add
push
dec
cmp
jae
in
aaa
dec
popa
std
pop
jmp
mov
pop
arpl
mov
sbb
out
push
or
sarb
jp
test
sbb
mov
mov
test
jnp
adc
mov
and
loop
jae
cwtl
add
cltd
scas
adc
faddl
push
jb
pop
xor
pop
dec
pop
lods
cmp
xor
dec
insb
mov
icebp
add
sbb
or
sarl
ljmp
loopne
or
push
cmpsl
js
outsb
sbb
push
fisubrl
jnp
test
enter
pop
sbb
popa
in
in
js
and
and
aad
xchg
push
push
jo
add
insl
fs
mov
dec
adc
pop
jp
xchg
rcrb
cmp
adc
push
jns
scas
adc
add
out
adc
push
jno
imul
jns
push
sbb
leave
les
or
or
dec
ja
xchg
and
sti
push
mov
push
xorl
mov
inc
fldenv
daa
ret
in
outsb
andl
xchg
sub
xchg
scas
ret
leave
push
lods
jbe
push
ja
js
ret
int
adc
repz
xor
and
ret
push
pop
ret
into
inc
aam
mull
testb
test
aaa
fbld
sbb
in
in
push
mov
or
mov
pop
orb
into
push
mov
fidivl
mov
xchg
adc
cmp
pop
add
imul
sahf
pushf
iret
leave
sbb
cwtl
or
inc
push
pop
nop
jmp
test
fstps
cmp
cmpsl
sarb
lret
mov
test
add
adc
xor
iret
lock
dec
leave
mov
inc
or
sub
mov
lret
cmpsl
jge
adc
adc
into
popa
adc
xor
pop
lret
xorl
cmpl
nop
pop
cmp
jne
ljmp
cmp
cwtl
lret
jmp
sub
and
mov
dec
mov
imulb
addb
jg
jne
sub
bound
sbb
inc
hlt
cmc
cmp
xor
xor
jo
cmpsl
out
add
pop
cmp
mov
mov
jle
add
ds
dec
adc
shll
sahf
or
repz
inc
ds
test
fnsave
lahf
mov
call
call
and
clc
mov
push
sbb
add
ja
fstps
in
add
mov
mov
ret
stos
out
fst
js
in
mov
push
or
cmp
jbe
cmp
subb
jle
push
loope
sti
daa
add
jecxz
xchg
sar
push
cmp
sbb
shr
pop
in
bound
sbbl
inc
movsb
push
xor
cmp
mov
daa
cld
sub
in
vunpckhps
xor
data16
sbbb
and
add
enter
cmc
test
fs
test
sub
pop
add
out
add
lods
sbb
jge
sahf
add
bswap
test
insb
push
mov
into
cmpl
xchg
shlb
or
vpshufd
popa
xchg
and
dec
and
xor
push
add
mov
inc
repnz
movsb
fs
arpl
cwtl
dec
rolb
out
insb
lds
push
pop
lret
lret
imul
sbb
jne
mov
mov
cmc
mov
iret
sahf
sub
icebp
xor
xchg
decb
or
test
add
in
jo
push
pusha
and
dec
outsl
stos
stc
dec
mov
sub
cltd
adc
and
pop
xor
loop
mov
push
sbbl
repnz
pop
int3
cmp
mov
int3
add
sbb
ret
adc
test
out
mov
sub
test
push
pop
xlat
sbb
add
cwtl
les
into
adc
lods
sub
cmp
push
adc
xor
or
fcomps
sar
mov
jb
jg
push
or
inc
rclb
pop
xadd
imul
test
lods
cmp
xor
bswap
iret
fisubs
adc
std
fcmovnb
mov
test
scas
leave
inc
cmp
mov
aas
pop
xor
clc
adc
mov
fwait
push
notl
sbbb
adc
es
stc
rcr
sub
in
mov
jns
daa
idiv
xchg
lods
sbb
xchg
sub
xor
push
int3
pop
add
mov
jmp
scas
enter
or
mov
test
jmp
xor
into
mov
mov
mov
mov
mov
call
out
dec
inc
push
aas
fs
and
push
pop
lret
jno
cmp
mov
insb
dec
cmpsb
in
out
mov
out
inc
call
push
xchg
sarb
cmp
movsb
jne
aaa
dec
mov
call
adc
cmp
rolw
cmp
mov
icebp
adc
repnz
add
in
imul
popf
jmp
xchg
out
jge
mov
or
cmc
mov
rolb
mov
push
inc
call
outsl
xor
rsqrtps
ret
xchg
imul
fsubrs
jle
mov
jne
outsl
stos
xor
shrb
sub
jne
lea
aam
aad
pop
dec
cmc
adc
fs
rcrl
test
mov
std
ret
scas
ss
inc
push
mov
leave
test
jg
imul
call
rolb
or
daa
sbb
into
pop
sbb
mov
add
sbb
popf
sbb
lret
cwtl
pop
mov
fiaddl
test
hlt
sahf
outsb
mov
jne
jb
mov
cmp
jae
xchg
loop
pop
and
jg
sahf
push
pop
sub
inc
lcall
int3
lds
xor
cmp
loop
mov
xor
bound
ret
imul
or
fwait
cmp
popf
cltd
loope
xor
in
mov
mov
enter
test
addl
jmp
push
adc
jb
shrb
xchg
lahf
repnz
or
fisttps
leave
push
xchg
rcrl
sub
cld
mov
pop
outsb
jne
repz
sbb
push
cltd
push
sub
stos
mov
xchg
xor
mov
dec
je
lock
xchg
jo
dec
sahf
cmpsb
ret
dec
adc
dec
sub
shrl
cmp
lds
push
iret
loop
ret
sub
andb
mov
std
xchg
out
leave
jo
cmp
mov
jae
pop
cmp
dec
inc
dec
aam
cmpsb
lret
mov
jb
shrl
cmp
pop
jmp
xor
push
ss
push
es
dec
inc
pop
mov
or
pop
cmp
xchg
inc
in
mov
dec
std
dec
cmp
lret
xor
push
test
lret
subb
lret
cmp
imul
scas
dec
jge
fisubrs
icebp
imul
cwtl
cld
mov
les
dec
cwtl
cmp
adcl
enter
adc
pop
mov
push
xchg
pop
mov
shrb
outsb
clc
xchg
ss
mov
mov
pop
nop
xchg
mov
shr
xor
jg
adc
pop
ds
xor
js
fldcw
mov
shlb
sub
dec
popf
jmp
mov
xor
insb
xor
and
mov
mov
jo
xchg
bound
lods
scas
sub
fistpl
xchg
fstl
roll
stos
mov
push
dec
mov
shrb
loop
fsubrs
testb
test
jo
lea
sbb
dec
adcb
loop
sub
shr
or
push
in
or
push
or
into
in
out
cmp
out
sub
mov
xchg
lods
out
pop
aas
pop
daa
test
mov
xchg
movsb
mov
mov
mov
dec
dec
xchg
and
mov
inc
push
in
and
or
scas
mov
imul
push
mov
push
pop
mov
xchg
push
lahf
iret
mov
icebp
lea
iret
jae
adc
xchg
pop
cli
popl
rorl
movsl
mov
pop
pop
mov
pop
xor
out
fmuls
popa
push
clc
push
jnp
cltd
sbb
mov
inc
lods
add
out
movsl
mov
pop
mov
cmc
cmp
inc
addr16
das
mov
stc
dec
push
jl
and
pop
push
arpl
stos
cmp
lahf
sti
cmp
outsl
dec
mov
dec
stc
lret
sub
push
jno
pop
mov
orb
cmp
mov
pop
adc
push
sub
adc
sub
fs
sub
sarb
jle
add
cltd
pushf
pop
xor
ss
xor
mov
rorl
les
out
lahf
arpl
test
fmull
dec
cmpsl
jnp
test
mov
mov
xchg
jmp
push
les
addl
xor
xor
enter
xchg
lods
stc
or
popf
js
cmp
stc
mov
xchg
into
cmp
addr16
adc
sbb
inc
cmp
adc
push
scas
jae
div
push
push
sub
inc
scas
cmp
icebp
divb
cmpsl
stos
scas
loop
pop
lods
outsb
stos
xchg
mov
add
and
xor
xor
dec
xor
mov
daa
leave
add
cmp
dec
push
xchg
jnp
je
cmpsl
nop
mull
aad
mov
lcall
into
xor
dec
call
xor
fmulp
fadds
jecxz
lock
cmp
sub
inc
inc
inc
hlt
lcall
lcall
bound
dec
push
movsl
jno
mov
aam
repnz
jns
pop
test
mov
xlat
int
pop
cmp
push
sub
outsb
sbb
in
data16
movsb
loope
aam
into
ficompl
incb
mov
roll
lds
stos
movsb
icebp
ja
lock
cmp
xchg
int
jl
stos
inc
cmc
add
sub
add
sbb
cmp
push
xchg
out
lret
ret
xor
xor
insl
jge
hlt
mov
lock
mov
jmp
int3
pop
out
movsb
pop
sahf
aam
xchg
stos
popf
and
mov
mov
xchg
dec
repnz
xor
mov
je
sahf
stos
pusha
roll
cmc
and
or
push
shl
les
and
xchg
adc
and
or
push
popf
jne
pop
enter
stos
inc
mov
movsb
sti
push
in
mov
addr16
movsl
xchg
mov
lea
mov
hlt
sbb
mov
cmp
push
push
movsb
add
mov
ds
dec
stos
out
daa
or
add
mov
not
fnstenv
sbb
bound
push
pop
ljmp
pop
mov
push
andb
fidivl
pop
mov
sbb
xchg
add
pop
nop
fisubrs
cmc
sbb
pushf
icebp
mov
call
lea
pop
in
sbb
movsb
xor
or
lods
push
xlat
rorl
and
cmp
pop
push
test
pop
test
mov
adc
and
scas
inc
movsb
mov
dec
arpl
jl
mov
shrl
icebp
cld
imul
aad
out
stos
jb
add
inc
xchg
out
imul
push
mov
xchg
dec
test
add
leave
xchg
movsl
sbb
add
je
mov
inc
xchg
mov
xor
adc
lcall
cmpsb
roll
inc
pop
aam
cld
in
xlat
popa
addr16
and
sbb
push
mov
xor
ljmp
loope
stc
push
mov
leave
clc
cmp
lea
data16
pop
popl
or
sbb
leave
or
pop
fimull
aaa
ja
xchg
lahf
and
sub
push
xchg
fldcw
push
in
mov
jnp
mov
jle
sti
lods
cli
in
mov
ror
imul
sub
dec
xor
mov
push
aad
scas
jnp
nop
or
and
pop
sti
mov
sub
outsl
inc
pop
fsub
cltd
scas
pop
shr
je
outsl
xchg
sub
xchg
jne
popf
mov
icebp
dec
adcl
icebp
fisubrl
cli
cmp
sbb
sub
imul
fs
lahf
imul
sbb
int3
repnz
daa
imul
scas
imul
scas
in
pop
roll
pop
mov
add
insl
pushf
dec
add
mov
aaa
xchg
adc
push
mov
fistl
sub
sbb
shlb
pusha
or
add
insl
in
pop
lahf
jmp
hlt
data16
lea
dec
aaa
notl
pop
rcrb
rclb
ds
mov
je
jle
push
pushf
arpl
pop
ja
jmp
jne
fisubrl
dec
lret
loopne
daa
fsubp
cli
sbb
fidivs
xchg
xchg
push
int3
push
sbb
sarb
cmp
je,pt
push
jmp
lret
popl
jp
bound
cmp
imul
mov
push
int3
mov
mov
idivl
inc
enter
fistpl
jnp
mov
fwait
add
mov
push
add
push
movsb
dec
mov
or
mov
xor
xor
inc
outsl
enter
les
mov
cli
mov
in
push
hlt
and
js
fwait
aaa
mov
push
mov
mov
pop
int
call
inc
mov
jne
popf
sbb
loop
cld
inc
rorl
jae
jl
push
adc
mov
or
scas
popa
add
cltd
inc
pop
movsb
out
fisttpll
and
inc
pop
loope
adc
mov
test
xor
adc
clc
fistpll
jb
sbb
inc
std
aaa
or
divl
scas
mov
mov
pop
cmpsb
pop
cmp
add
and
pop
es
mov
sub
and
cmp
cld
jb
mov
mov
mov
jns
add
cmp
dec
adc
in
push
adc
adc
mov
jg
jno
push
cmp
into
inc
dec
gs
adc
jns
stos
mov
mov
subb
adc
popa
loopne
xor
and
cmp
in
jecxz
sub
iret
or
fldcw
mov
leave
jae
mov
mov
sub
lods
sahf
mov
xchg
xor
add
imul
push
fdivrl
push
adc
mov
aam
sti
ja
add
bnd
lahf
cmc
xchg
test
dec
out
sbb
cmp
jmp
addb
xor
outsb
jb
dec
fs
int
dec
sbb
testl
shlb
jns
jmp
and
mov
cmpsb
std
sbb
cmp
mov
mov
sbb
add
movsb
sub
dec
and
fisubl
inc
stos
out
jecxz
and
mov
or
or
addb
and
add
mov
stos
es
push
loope
dec
aaa
loop
inc
xor
scas
aaa
into
movsl
sub
ret
mov
loop
ret
popf
xor
xor
sbb
leave
adc
out
loop
sbb
mov
mov
arpl
mov
aaa
dec
push
mov
cld
andb
mov
jbe
call
nop
daa
aaa
in
fwait
and
or
or
int3
mov
push
push
js
js
into
adc
inc
cmpsb
hlt
fiaddl
movsb
inc
loop
rclb
mov
cli
mov
jp
sbb
hlt
pop
cmp
mov
dec
ljmp
cltd
rcrb
pop
mov
test
pop
cmp
inc
fwait
mov
cmp
pusha
ror
xor
subb
xchg
icebp
mov
cs
sbbl
jp
xchg
addb
mov
adc
mov
jnp
sub
addb
cs
xchg
test
push
shl
cmp
mov
or
arpl
daa
lret
jnp
out
in
lock
adc
and
daa
or
sub
sbb
inc
xchg
ret
sbb
ss
push
pop
fadd
push
scas
ds
xchg
pop
sbb
adc
inc
xchg
xchg
cltd
addl
imulb
dec
or
sub
pushw
in
pmullw
mov
add
insb
aam
rcll
outsb
cltd
mov
mov
sub
push
pop
cmp
lcall
test
mov
adc
pop
jbe
cmp
scas
addr16
rolb
or
jo
shlb
test
fwait
imul
pop
es
sbb
inc
and
dec
push
roll
outsb
cmpsl
push
int3
into
adc
and
sub
and
scas
insl
mov
test
repz
bound
sub
out
push
dec
dec
cwtl
mov
jmp
mov
push
gs
jno
mov
jbe
jecxz
sti
jb
je
add
jnp
ss
adc
sub
test
push
jg
into
sub
inc
jb
mov
add
mov
dec
and
or
pushf
test
xchg
cmp
pusha
add
test
fs
pushf
jmp
inc
lds
mov
pop
jecxz
leave
inc
and
jae
xor
dec
aam
push
insb
sbb
ret
mov
fistps
stc
pusha
or
xchg
add
repz
jl
sub
xchg
sub
mov
cmp
leave
fcmovbe
fwait
mov
ret
xor
mov
call
std
lods
scas
sub
aam
xchg
in
cmc
outsl
dec
cmp
cmc
bound
stc
dec
adc
leave
inc
cmp
pusha
stos
mov
push
adc
imul
cmpb
jp
aam
shrl
sti
int3
int3
movsb
add
dec
pop
aad
mov
mov
jg
jg
dec
push
mov
mov
pop
and
mov
loope
xor
xchg
xchg
call
xor
es
das
cs
mov
cmp
inc
dec
in
imul
cmp
xchg
pushf
dec
mov
iret
in
fwait
push
push
pushf
jp
in
out
jne
sbb
repz
cld
sbb
adc
push
fs
clc
and
xchg
jns
test
leave
and
les
mov
add
es
outsl
int
test
fcmovnu
dec
inc
add
clc
fadds
into
repnz
mov
les
das
jge
push
hlt
neg
out
mov
and
test
and
mov
sahf
shrl
add
cmpsl
and
jns
aam
lea
ja
into
sbb
xchg
xchg
or
pop
js
sub
or
gs
and
push
repz
lods
cmpsb
dec
xor
dec
jecxz
cli
dec
dec
push
inc
ljmp
xor
jns
adc
dec
adc
mov
or
cltd
leave
push
call
inc
push
cwtl
jge
jbe
xor
scas
xchg
idivl
jae
mov
fldenv
and
movsb
sbb
mov
mov
dec
xchg
pop
pop
adc
fisubl
pop
mov
adc
mov
enter
xor
or
add
pushf
aad
and
pop
gs
es
mov
adc
into
xor
mov
inc
adc
lods
in
add
iret
mov
or
push
lea
sbb
ss
jmp
sti
pop
or
sub
movsl
mov
push
fisubrl
mov
fdivrs
pop
jle
mov
ds
ja
jnp
les
jle
mov
insb
cltd
lret
jno
inc
cmp
in
arpl
fimull
mov
xorb
adc
xchg
insb
pop
push
decl
and
popa
jle
xchg
ds
mov
ret
lret
jb,pt
or
or
imul
fs
sti
rol
mov
addr16
movsw
sbb
mov
lea
and
fldt
adc
cs
inc
out
movl
sub
jnp
bound
addr16
lret
out
cs
fidivrs
nop
int3
filds
and
mov
insl
in
push
popf
jb
mov
dec
add
jae
cmp
push
xor
jge
push
and
xchg
mov
mov
push
cld
and
fs
xchg
jl
lret
push
mov
fistpll
fdivrs
popa
jl
mov
out
and
sbb
cmpsl
cmp
aas
jge
add
xchg
jg
xor
pop
ss
mov
lods
out
pop
movsl
addr16
xchg
popf
xchg
icebp
test
or
mov
mov
jb
sarl
fsubrl
pop
add
mov
push
push
bound
mov
xchg
mov
insb
ret
orb
lret
lds
popf
xchg
mov
or
sub
xor
imul
std
hlt
dec
mov
fldl
inc
imul
jae
mov
push
shrl
pop
popf
sub
sahf
aaa
xchg
loop
or
es
and
les
fcoms
rcr
push
into
jmp
rcr
adc
adc
push
dec
sbb
fcomps
xchg
pop
pop
lret
xor
out
jae
adc
clc
aam
shl
xchg
pcmpgtw
aaa
mov
sub
sbb
add
push
push
cmpsl
cmp
push
test
ficoms
jmp
mov
popw
mov
pop
add
push
repz
push
and
imul
sbb
scas
cmp
adc
mov
or
xor
jbe
jae
add
mov
movsl
mov
jge
adc
dec
repz
pop
rcr
jno
xorb
jge
roll
push
xchg
push
mov
xchg
push
ret
les
rcll
xchg
clc
mov
push
xor
or
dec
stos
adc
mov
cmpsl
inc
and
mov
jp
fwait
inc
loop
xchg
mov
add
loopne
lds
sbb
mov
pushf
sbbb
dec
inc
sbb
or
dec
and
sbb
ss
int
decl
dec
es
dec
or
inc
xchg
mov
xchg
sti
ljmp
mov
scas
fcmovb
ret
jge
mov
fbld
jae
and
clc
mov
add
sbb
adc
notb
adc
mov
into
mov
dec
loopne
int3
ds
in
sbb
jle
nop
loop
fstps
jmp
inc
push
push
add
adc
push
pop
push
lds
aad
or
or
sub
or
jno
xor
test
jnp
push
mov
ds
push
das
xchg
daa
fs
dec
nop
mov
leave
nop
jg
sub
mov
ss
and
sub
jo
and
fwait
into
pop
xor
xor
or
pusha
fs
stc
cmp
pextrw
and
test
mov
cmc
ror
add
adc
inc
and
xchg
test
lds
add
andl
lret
inc
cmp
cmc
clc
mov
je
sbb
imul
shlb
inc
mov
inc
sub
xchg
leave
inc
daa
pop
out
adc
bound
insl
movsl
sahf
out
addr16
jne
mov
loope
push
les
jmp
mov
fimuls
pushf
clc
test
cltd
cmp
add
pop
insb
test
icebp
cmpsl
cmpsl
rcrl
mov
ret
fiaddl
and
mov
push
fidivrs
mov
pop
pushl
imul
ljmp
xchg
sarl
xor
call
iret
mov
mov
push
mov
xchg
es
out
insb
movsl
addr16
push
pop
loope
ret
sbb
aad
jl
push
dec
cmp
test
lret
test
and
push
mov
xchg
sbb
das
sub
in
outsb
sbb
inc
test
cld
or
pop
fidivrs
lods
jb
xor
fdivrs
push
fstp
lds
test
dec
mov
push
and
add
pop
cli
push
adc
jg
les
lret
pusha
mov
jns
aam
in
dec
add
jno
int
and
repz
add
test
dec
popf
push
fadds
repnz
jmp
mov
push
xchg
leavew
stc
dec
add
push
cwtl
inc
push
jp
into
jb
dec
lock
inc
push
fbstp
dec
outsl
mov
je
push
aam
fdivl
rcll
shlb
push
and
mov
add
mov
test
jmp
scas
cltd
std
inc
test
aad
jno
insl
fistpll
in
pop
stc
hlt
adc
test
cmp
fnstenv
rcr
pop
lcall
es
jmp
push
push
sub
clc
bound
loope
pusha
adc
out
push
jp
or
mov
push
add
scas
xor
bnd
sbb
leave
mov
mov
push
call
fdivrs
imull
sti
xchg
or
add
jle
xchg
jle
insl
push
roll
shr
loop
mov
pop
sbb
lock
cmpl
mov
xor
cmp
sbb
in
pop
adcl
or
cmc
out
dec
hlt
rcl
adc
movsl
lahf
stc
push
push
mov
ret
cmp
jno
addb
adc
out
ljmp
and
dec
dec
loop
mov
pop
shlb
cmpsl
push
rclb
inc
adc
sti
js
outsl
xor
mov
fiaddl
dec
outsl
sub
mov
mov
cwtl
jecxz
adc
imul
int
xor
fnstenv
enter
mov
movsb
mov
jp
pushf
enter
lds
adc
fmul
loop
icebp
xchg
jno
mov
movsb
and
inc
sbb
fmull
add
add
jae
ljmp
lods
andb
push
cli
lock
jmp
ds
push
imul
pop
xlat
movsl
xchg
dec
mov
jp
mov
cli
rep
scas
sarb
adc
rcl
xchg
mov
aas
aam
lods
ja
mov
notl
mov
fsubl
sub
xchg
inc
and
imul
xor
mov
mov
xchg
sar
or
cmpsl
jg
push
int
ljmp
mov
jle
push
fst
jle
push
inc
jae
mov
in
or
cmp
cld
mov
lods
frstor
push
inc
jae
cmpsb
shr
add
mov
or
bound
add
ficoms
and
imul
pop
aam
xor
int
xchg
rolb
dec
addr16
fwait
test
xor
jo
mov
fcomip
adc
add
sti
aam
push
cli
repnz
lods
cwtl
adc
enter
cld
pop
inc
xchg
sbb
fsts
pop
iret
push
inc
mov
insl
jle
bound
push
push
add
enter
add
test
pop
or
and
test
add
rcr
rcl
jge
leave
or
pop
pop
mov
cmp
jecxz
cmp
leave
cs
xchg
movsb
orl
mov
popa
es
cmp
test
adc
mov
jns
and
pop
add
inc
mov
jae
or
cmp
xor
adc
xorl
cmp
xor
les
or
aam
inc
je
jns
mov
push
ficomps
xor
filds
dec
push
add
and
outsl
or
push
xchg
outsl
adc
repnz
jns
jnp,pn
xor
xor
pop
inc
push
pop
push
and
ret
enter
pusha
sbb
jg
jo
jmp
cmpsl
in
adc
mov
sub
aad
xchg
clc
fldcw
jae
dec
inc
add
jg
pop
enter
ljmp
lock
xor
icebp
pop
mov
xlat
std
inc
leave
sub
aas
xchg
ds
divps
lahf
popa
enter
push
mov
clc
mov
fld
sub
sbb
xor
jae
gs
xor
cmp
dec
xor
sarl
and
lret
sub
push
and
jno
insb
rcll
xor
jo
add
cs
xchg
xor
insl
dec
inc
mov
mov
mov
add
sub
out
cmp
lret
addr16
cmp
mov
adc
jae
fs
fdivrs
or
mov
jno
push
gs
out
xchg
int
int
hlt
lcall
in
out
adc
or
push
sbb
les
inc
xor
dec
cwtl
push
sbb
jp
add
push
xlat
xchg
cmpsl
icebp
repnz
and
lret
add
daa
pop
pop
fisubl
insb
push
xor
xchg
inc
dec
int3
xchg
cmp
sub
aad
fsts
dec
xchg
negb
sbb
fsubrl
xor
push
mov
pop
call
push
cmpb
push
fdivrl
mov
mov
lret
sbb
ss
add
shl
jno
cltd
push
shll
jb
dec
imul
cld
in
lahf
int3
lret
mov
cmp
addr16
sub
std
lcall
and
inc
mov
xchg
inc
cmp
dec
or
ret
mov
pop
sub
pop
or
xor
sti
cmpsl
addb
ss
jmp
push
scas
lret
fsubs
stos
scas
enter
sub
outsb
or
incb
leave
std
movsb
xchg
pushf
into
ffreep
mov
cmp
mov
aaa
jg
push
insb
jmp
xor
adc
mov
add
cmc
lock
aad
repz
mov
fildll
mov
inc
push
aad
adc
jno
iret
push
jmp
and
insb
jae
and
in
stc
jmp
imulb
inc
imul
faddl
adc
clc
out
and
aas
sub
cmp
xor
cmpsb
pusha
lods
in
push
mov
xor
jl
dec
lret
lds
fstl
bsf
pusha
jle
add
sub
aas
sub
ficoml
fwait
out
dec
arpl
and
xchg
loope
mov
xlat
mov
add
mov
aas
int3
cmp
and
fnclex
fnstcw
or
push
push
imul
ror
ljmp
sti
xchg
cmp
test
das
sbb
mov
pop
dec
dec
xchg
push
inc
imul
pusha
mov
adc
mov
xchg
jp
push
pop
repz
push
call
movsb
inc
ss
insb
daa
lock
pop
pop
push
mov
setp
je
arpl
dec
dec
sbb
fdivr
mov
push
add
insl
xchg
lret
mov
adc
push
dec
or
sarb
fstl
sbb
inc
or
xchg
pop
dec
mov
lret
jnp
stos
cli
mov
call
mov
inc
pop
adc
add
inc
in
mov
je
adc
jp
repnz
stos
clc
push
popf
iret
cwtl
jecxz
xor
popf
out
and
mov
push
mov
dec
mov
pop
cmp
int
pop
jge
cli
mov
mov
scas
mov
sub
ret
fwait
pushf
sbb
lods
mov
in
pop
mov
movsl
imul
jmp
sahf
push
cli
inc
mov
nop
nop
cltd
ret
add
cmp
sub
neg
adc
shl
call
lods
add
outsb
or
addr16
div
xchg
adc
mov
sub
popa
sahf
mov
xchg
inc
xchg
stos
push
stos
push
outsb
jp
sahf
addr16
rcrl
or
imul
test
jmp
jae
bound
out
stos
cmc
mov
out
rol
rorb
inc
ret
jo
xor
in
test
addr16
das
xlat
and
in
lcall
jp
sub
out
xlat
lea
push
xchg
dec
pop
xchg
push
xlat
xchg
into
cmc
scas
add
or
xchg
dec
xor
lock
mov
fcomip
inc
in
or
ret
enter
sbb
lods
pop
enter
jge
pushf
cmp
add
fcmovnu
push
mov
shl
mov
dec
movsb
ja
inc
cmpsl
fbstp
repz
sbb
cmp
nop
jmp
test
jg
pop
xor
mov
je
xlat
mov
adc
cltd
mov
push
cmp
dec
and
xchg
imul
dec
mov
lcall
lahf
mov
stc
xchg
ret
dec
mov
ds
push
insb
sbb
ret
fstpt
jnp
sub
xchg
lea
loopne
lods
fsubp
loopne
scas
push
stos
mov
insl
lahf
ret
sub
dec
loopne
pop
cmp
scas
lds
cld
pop
loopne
inc
dec
mov
inc
bound
cmp
leave
sti
int3
pop
mov
repz
fcoms
pop
cmp
pop
out
jle
rcrl
mov
sub
ljmp
add
hlt
jbe
nop
inc
inc
pop
cmp
fildl
adc
cmovge
mov
sbb
sub
push
insl
testb
sbb
cmpsl
in
cltd
fists
mov
shll
jg
pop
or
adc
sahf
sahf
dec
fldt
push
xor
fwait
cmp
add
cmp
pop
pusha
sahf
mov
mov
out
mov
adc
jmp
mov
fsubrp
mov
test
adc
ret
idivb
out
push
mov
test
fisubs
sub
enter
mov
dec
outsb
inc
jnp
adc
mov
aad
clc
lret
adcb
dec
fidivrs
outsb
fidivrl
adc
lret
mov
cmpsl
popl
aaa
out
outsl
cmp
clc
in
sbb
addr16
cli
nop
call
push
sbb
add
rcr
icebp
leave
frstor
rcr
movsb
mov
cmp
and
push
adc
xchg
jns
adc
pop
sbb
adc
push
loopne
stos
sub
lret
xchg
push
test
inc
dec
inc
dec
aad
add
jl
pop
dec
out
dec
xchg
cli
push
pop
repnz
pop
and
jo
sarl
insb
push
mov
push
cltd
ja
or
xchg
jge
pop
inc
jecxz
pop
rorl
xchg
cmp
lds
fcmovnu
decl
dec
pop
idivl
mov
xor
inc
xchg
cmp
icebp
sahf
mov
shll
and
nop
dec
arpl
xlat
mov
mov
jmp
popa
inc
pop
push
fsts
iret
pop
movsl
mov
add
imul
add
add
lret
sub
std
sahf
push
cmp
jl
or
push
inc
lcall
add
js
cwtl
aad
and
out
insl
cmpsb
loopne
cld
inc
sarl
inc
xchg
pop
pop
les
jmp
lret
test
push
in
mov
lret
out
ret
xchg
movsl
rcrl
out
xor
lret
es
jmp
pop
or
jns
push
inc
cmp
insl
push
jno
in
lahf
sub
jno
insl
jl
adc
dec
inc
int
out
adc
add
and
data16
icebp
das
loope
xchg
sub
sarb
cltd
push
push
in
xor
sarl
inc
mov
lods
lahf
push
jbe
cwtl
aad
in
adc
or
stc
dec
int
inc
iret
nop
cmpb
loopne
mov
pusha
mov
push
add
je
xchg
push
mov
sbb
fsubl
lret
jmp
sub
xor
cmp
jb
into
push
adc
inc
dec
mov
sbbb
fimuls
mov
mov
or
cmp
lcall
mov
loope
mov
cvtps2pd
sbb
pop
orl
mov
movsb
inc
inc
arpl
xor
aas
jecxz
push
out
push
fistpl
push
mov
ret
repz
inc
pop
rorl
mov
and
stc
enter
dec
push
inc
or
leave
mov
jl
sub
mov
xchg
and
addr16
popf
sub
pop
xor
mov
xlat
jle
inc
sbb
jmp
cmp
es
and
test
fidivrl
ja
mov
mov
and
jle
xchg
or
mov
pushl
xchg
test
dec
ja
jmp
jne
push
dec
adc
add
xor
mov
pop
cmp
jbe
js
bound
stc
lods
call
mov
int3
das
fwait
mov
ret
sar
and
dec
xchg
gs
sbb
add
ret
daa
loopne
stc
or
add
es
add
sbb
in
mov
mov
aas
sbb
clc
xchg
xchg
and
inc
call
mov
and
xchg
xor
sbb
clc
ss
pop
pop
loope
enter
in
out
xchg
jg
repnz
push
dec
push
cli
insl
insl
mov
enter
add
repz
mov
cmpsb
mov
jmp
test
push
jns
dec
inc
addr16
addb
sahf
inc
mov
fldenv
or
dec
jb
xor
into
cmc
sbb
mov
adc
rcll
sub
mov
ljmp
into
popf
jecxz
mov
aad
push
rclb
shl
add
or
xabort
push
jns
sub
mov
mov
dec
sub
cmp
scas
xchg
loope
xor
or
notl
sub
jp
mov
jl
je
mov
scas
lea
outsb
popw
andnps
outsb
jl
f2xm1
stos
lea
vmovaps
or
flds
dec
addb
andb
mov
fstps
fstl
insb
lock
mov
mov
mov
lea
lods
movsl
js
int3
loopne
bound
aaa
call
stos
aas
pop
xchg
sub
pop
xchg
push
outsb
pop
dec
jne
pop
adc
and
cmp
pushf
cmc
mov
js
mov
mov
ret
sbb
int
cmpsl
std
pop
jl
jmp
mov
test
hlt
mov
or
adc
xor
pusha
or
in
xor
fisubs
lcall
mov
mov
mov
js
loop
lods
jb
cmp
cld
cwtl
icebp
mov
pushf
and
addr16
bound
ljmp
dec
nop
mov
and
xchg
out
test
out
je
call
ja
cli
sub
lret
push
xor
jb
dec
jnp
jmp
lock
nop
cmpsb
and
sub
loope
push
jo
cld
lcall
or
repz
push
sub
daa
ss
or
ret
int3
pop
mov
jl
or
popa
mov
clc
mov
sbb
or
xchg
aad
fsubrs
roll
aaa
mov
pop
mov
or
ljmp
push
mov
mov
mov
adc
add
or
xor
clc
in
lret
outsb
out
sbb
arpl
pop
dec
rorl
cmp
aas
cmpsl
loop
lods
test
adc
inc
lret
and
test
out
sbb
xor
pop
and
lods
xchg
es
mov
jns
frstor
push
jmp
xor
mov
in
es
mov
mov
xor
arpl
pop
lret
jns
dec
mov
shll
jne
aad
push
jle
mov
mov
cmc
add
pushf
test
call
mov
scas
fists
jae
push
outsl
rcrb
lahf
sbbl
mov
mov
inc
cli
dec
adc
jo
inc
jne
cli
jne
push
jno
dec
movsb
cmp
jecxz
jmp
pop
div
mov
aaa
xlat
cmc
std
lret
push
push
dec
mov
les
jns
inc
mov
and
movsb
dec
call
outsb
enter
push
mov
mov
or
std
xchg
adc
shl
mov
arpl
or
int3
and
insb
pop
and
rorb
add
dec
sbb
lcall
ret
and
xor
push
imul
xchg
ss
jns
test
adc
jo
popf
mov
sub
enter
dec
and
test
mov
ret
imul
mov
add
sub
push
test
adcl
sub
lds
pushf
mov
adc
push
outsb
pop
push
mov
sbb
iret
aam
and
fbstp
push
jle
pop
push
fs
arpl
aad
movsb
mov
or
dec
inc
sub
mov
movq
xor
ret
test
pop
xchg
xor
xor
pop
mov
gs
aas
outsb
and
and
cmp
addr16
sub
nop
pop
arpl
sbb
aam
mov
cmp
loope
popa
stc
sbbl
jge
pushf
dec
or
mov
inc
cmp
or
cmp
ret
lods
lret
outsb
xor
popf
mulb
movsl
jp
nop
test
mov
add
addr16
xorb
testl
arpl
and
xchg
stc
and
xor
shlb
popf
inc
cmp
imull
and
shl
das
ss
pop
pop
pushf
cltd
adc
lea
mov
sbb
out
pushf
out
xchg
xlat
and
ds
jg
sbb
xor
push
jbe
xchg
das
shll
clc
cmc
push
sarb
jle
daa
lods
mov
loop
rorl
xchg
fdiv
lahf
out
mov
cmp
stc
aaa
mov
inc
shll
lret
aam
mov
ljmp
push
add
adc
cli
cmp
add
jecxz
xchg
lock
pop
mov
jp
xchg
gs
scas
out
inc
sbb
clc
or
mov
out
inc
scas
mov
push
dec
mov
cmp
mov
xlat
rorl
jecxz
xchg
xor
xor
stc
loop
loopne
or
repnz
xchg
adc
lds
sti
mov
jmp
cltd
jle
adcb
xlat
ds
fnsave
mov
test
or
outsl
pop
ljmp
xlat
mov
mov
xchg
je
in
sub
push
push
mov
and
xchg
scas
mov
shlb
dec
incb
aaa
or
rolb
es
jmp
scas
insl
pop
sbb
hlt
adc
cli
pop
mov
mov
clc
cmp
inc
fisttpll
ljmp
in
aaa
jno
xorb
shrl
in
inc
jle
rcrb
out
fsubrl
inc
xlat
pop
xchg
mov
movsb
xor
sbb
out
push
and
int
popf
std
js
test
adc
ret
lret
mov
xor
xchg
cmp
jae
and
lds
jns
ja
push
rolb
andl
lahf
in
mov
sub
pop
cmp
das
xchg
mov
and
stos
insb
sarl
mov
push
out
mov
push
aad
nop
mov
popa
push
dec
sbb
or
or
xor
pop
movsb
out
fmuls
jne
lret
push
jbe
pop
test
adc
nop
je,pn
dec
test
add
xchg
sub
add
outsb
sbb
ljmp
lods
jecxz
outsl
fs
dec
lods
xchg
loopne
mov
jg
test
sarb
or
scas
jae
jns
popa
int
shll
and
xor
stos
or
mov
dec
int3
xcrypt-ctr
cmpsl
lahf
jp
jp
mov
mov
imul
and
les
add
push
xchg
cs
sbb
xor
mov
dec
sbb
imul
loop
ja
sub
das
push
in
mov
in
scas
sbb
arpl
mov
xchg
sti
jnp
stc
and
fidivrs
cli
pop
imull
in
mov
adc
cmp
cmp
andb
jp
fidivs
inc
std
mov
dec
dec
leave
rclb
lret
push
jb
cmc
xor
add
jnp
dec
jne
mov
cltd
scas
sub
jg
icebp
ja
sbb
inc
sub
lret
stos
push
shl
cmp
push
cmc
push
orb
cmp
aam
and
orl
fisubrl
fadds
rol
inc
ja
xchg
mov
ljmp
nop
popf
lods
rolb
xchg
daa
test
dec
lea
hlt
xor
outsl
shlb
jbe
cmpsb
in
fld
mov
mov
lret
ret
jae
xchg
dec
or
sub
add
jecxz
cli
cmp
lret
xchg
mov
inc
jb
adc
filds
push
inc
mov
inc
fwait
push
jbe
sti
nop
in
inc
pop
pop
mov
and
fs
and
insl
sbb
cli
dec
mov
fisttpll
push
mov
lcall
test
cli
jmp
sahf
daa
pop
jae
xchg
dec
pop
fldenv
lea
imul
xchg
jle
fistps
cmp
pusha
fsubp
mov
pusha
add
or
sub
xchg
insl
movsl
aam
xlat
sub
into
jbe
jle
dec
test
fisubs
mov
cmp
mov
outsl
jbe
inc
cwtl
ja
out
push
dec
test
cs
mov
aaa
jnp
out
cwtl
jg
jns
leave
frstor
loope
shl
xchg
shrl
fs
mov
inc
mov
arpl
je
mov
subl
aam
sysenter
lret
xor
lcall
inc
js
xlat
jle
outsl
xor
lcall
mov
sub
and
inc
push
je
sbb
sub
mov
lods
sarl
and
jg
mov
dec
lahf
insb
rclb
jge
sbb
insl
push
fistl
lret
mov
mov
sbb
push
push
popa
xor
xor
ja
mov
in
push
pop
xor
shll
jl
xchg
and
jmp
mov
add
repnz
pop
mov
lret
xor
les
mov
jbe
mov
hlt
or
or
lret
mov
add
rcr
dec
popa
shl
les
xor
mov
mov
leave
push
imulb
xor
fsubrl
xor
cmpl
les
mov
nop
xor
aas
push
cmpsl
xor
pop
mov
push
push
cmpb
adc
repz
cmp
in
loop
into
cmp
leave
xorb
mov
shlb
pushf
mov
push
je
stos
cmpsl
adc
push
cmp
add
sbb
lret
lret
jle
notb
mov
mov
sti
fimuls
xor
inc
inc
jns
cs
test
push
ret
aas
xchg
jo
pop
loop
fstl
inc
sbb
imul
sahf
mov
gs
pop
jle
ds
mov
fmuls
movsl
mov
rcrb
push
pusha
pop
das
sbb
mov
sbb
bound
and
sbb
cs
jbe
jp
and
out
mov
adc
inc
imul
into
push
xchg
mov
fstps
pop
adc
dec
sub
mov
push
cmp
push
iret
cmpsl
in
dec
lahf
pop
or
dec
pop
jno
test
loopne
shll
fbstp
or
sbb
pop
push
or
rcrb
icebp
sub
outsb
xchg
push
jo
sbbl
sub
push
jg
xor
xor
mov
xlat
sub
loop
ret
gs
hlt
add
movsl
lcall
divb
fadds
jecxz
enter
or
int3
inc
ljmp
shl
sbb
mov
imul
fldenv
mov
fucomip
shll
pop
ljmp
adc
mov
jb
mov
addl
push
lds
pushf
fdiv
out
fidivl
hlt
inc
mov
add
je
sti
xchg
add
xlat
sub
push
scas
xorl
add
jg
lods
outsl
mov
cld
and
and
mov
mov
lcall
in
imul
out
fs
mov
sub
push
insb
test
fldcw
push
cmc
mov
add
int3
jle
add
pop
sbb
sti
sub
movl
aad
xchg
out
mov
lock
sbb
fld
imul
pop
mov
jl
and
inc
mov
js
sub
es
mov
xor
xchg
lods
mov
xchg
js
sbb
out
call
sub
stos
lahf
xchg
sub
pop
movsl
inc
fdivrl
and
mov
pop
repnz
adc
or
pop
mov
sub
sub
mov
mov
push
xchg
enter
movsl
sahf
mov
dec
pop
dec
adcl
aam
aas
psrld
popf
mov
adc
imull
int3
ret
inc
add
dec
neg
and
ljmp
inc
sbb
ret
jne
shr
sbb
mov
daa
mov
dec
daa
mov
cpuid
out
push
pop
sub
test
into
cmp
xlat
cli
out
nop
sahf
inc
mov
jae
and
call
jecxz
filds
dec
in
xchg
aam
cmpsb
xchg
jnp
lret
lea
xchg
dec
adc
and
xor
push
dec
jns
push
and
and
adc
jno
mov
les
test
das
xor
call
mov
js
sub
fsts
scas
xlat
pop
xor
pop
xor
ja
mov
fwait
xor
adc
fisubl
adc
mov
in
out
mov
lods
mov
adc
jge
pop
adc
and
mov
sub
inc
scas
imul
inc
mov
mov
xor
subl
add
out
xchg
fnstenv
push
js
ljmp
das
jnp
insb
dec
dec
lds
and
and
xchg
jae
pop
fists
into
sub
sbb
jae
push
cld
or
mov
push
xor
lcall
enter
hlt
inc
mov
mov
jnp
dec
jecxz
pusha
lahf
pop
sar
lahf
cmc
popf
lods
bound
lea
fbstp
lds
imul
lret
or
or
push
ja
adc
add
jnp
into
aad
clc
and
rorl
adc
push
fistpll
and
pop
fstl
fcomps
inc
ret
cmpsb
fdivp
insl
clc
cmp
sbbl
or
sub
cld
cmp
daa
clc
mov
dec
jecxz
cmpsb
rclb
sbb
pushf
aam
and
or
out
push
mov
fucomp
fs
cmc
mov
subl
sbb
cmp
fdivrp
jecxz
or
inc
pop
cwtl
cld
cltd
cmc
aaa
inc
paddd
sub
pop
or
nop
jae
movsb
in
mov
jmp
in
push
lcall
add
sub
add
sub
pop
out
pusha
movsb
in
or
jbe
cmpsl
call
pop
dec
lret
adcb
mov
data16
fcomps
aas
sub
pop
arpl
push
out
adc
xchg
and
je
fsubl
data16
sbb
push
scas
sahf
out
aas
gs
pop
dec
frstor
mov
ja
das
pop
jp
pop
std
pop
xor
xor
or
rorb
push
test
mov
xor
pop
sub
cmpsb
jg
add
mov
xchg
push
aad
test
inc
fnstcw
dec
aam
xchg
enter
push
sbb
aaa
fs
xchg
sbb
in
mov
mov
bound
pop
jp
add
ljmp
mov
arpl
es
xchg
adc
aas
fiaddl
inc
aaa
push
jmp
sbb
std
mov
lret
aad
daa
push
jo
leave
call
in
push
jg
push
mov
les
sub
mov
add
movsl
xchg
roll
jecxz
insl
jnp
mov
test
xchg
sbb
adc
or
pop
inc
mov
xor
into
sbb
mov
xor
push
xchg
stc
push
and
sbb
ret
xor
xor
xchg
stc
xchg
shlb
inc
out
adc
in
sarb
fs
inc
xchg
mov
push
mov
jae
mov
pop
out
mov
rcrl
dec
movsb
xchg
bound
test
sub
jns
mov
mov
adc
cli
jo
ds
or
cmc
lahf
ja
ljmp
pop
das
cli
lahf
jno
sbb
movsl
sbb
dec
mov
ss
xorl
fistl
push
js
sbb
or
mov
pop
jmp
add
pop
and
dec
ljmp
testl
fnstsw
loope
aam
sub
add
xchg
mov
push
sbb
movsb
and
shrl
xorb
subb
mov
xor
inc
pop
push
dec
add
or
xchg
loope
xor
rorb
push
jae
xchg
pusha
lods
insb
inc
shl
adc
jno
movsb
mov
stos
and
stos
mov
adc
push
add
mov
sub
mov
fnstsw
inc
xor
lcall
pop
cli
add
pop
inc
test
xchg
fsub
js
jo
icebp
pushf
dec
mov
clc
test
jnp
jge
adc
pop
dec
loope
mov
es
mov
shr
lods
mov
dec
mov
mov
out
inc
inc
sub
mov
push
nop
pushf
std
lea
fisubrl
into
in
test
add
mov
or
test
fcomi
fs
addl
push
inc
mov
cmp
sahf
mov
mov
add
fdivrl
xor
inc
daa
lea
or
loopne
pop
inc
aaa
push
push
mov
jmp
sbb
sbb
popa
dec
lock
cmp
dec
sub
push
cltd
mov
jp
insl
std
mov
xchg
rcrb
imul
ljmp
les
push
insl
mov
jl
out
adc
push
insl
mov
add
fstpt
jns
aas
loop
mov
inc
test
dec
sub
mov
sub
xchg
rcr
add
movsb
insb
sbb
push
cmp
xor
sahf
xchg
add
sbb
gs
adc
and
inc
lsl
mov
pop
and
mov
add
stc
test
jl
xchg
cmc
std
mov
outsb
insb
mov
mov
pop
add
test
push
lret
out
jb
jno
cmp
mov
or
lahf
dec
push
leave
outsb
lods
fldcw
outsl
or
mov
pop
fsubl
fdivrs
test
lock
sarb
cwtd
mov
pusha
push
jmp
adc
test
mov
lods
loop
lods
xchg
mov
mov
sbb
fwait
xor
add
jae
das
nop
inc
outsb
dec
pop
adc
sbb
and
jmp
aad
sti
popa
dec
dec
cmp
enter
bound
adc
in
popa
sbb
or
and
movsl
cli
adc
pop
jl
sub
pop
mov
stos
cmpsl
jle
dec
lcallw
mov
mov
in
add
or
loopne
sbb
xchg
ret
mov
stc
push
push
xchg
and
jl
shlb
inc
aam
pop
mov
dec
popf
jge
xor
push
addl
and
test
and
bound
lcall
pop
mov
repnz
pop
lcall
add
mov
add
dec
imul
sbb
ja
mov
hlt
out
xchg
push
ret
cli
int3
jns
test
push
nop
fnsave
outsl
mov
dec
std
ret
adc
inc
mov
xchg
push
mov
mov
xchg
jb
in
pop
or
push
jecxz
inc
push
mov
outsl
xor
xor
aam
xchg
imul
mov
pop
fsubs
inc
pushf
xchg
mov
mov
pop
inc
sbb
dec
and
mov
push
inc
inc
arpl
mov
jle
repnz
or
mov
in
dec
lods
or
and
movsl
or
in
inc
adc
outsb
pop
aas
mov
and
jne
fildll
mov
add
push
cmp
loope
or
insb
xor
push
cmc
add
je
ror
ror
xor
pop
pop
mov
pop
jecxz
and
push
lcall
stos
xor
lret
mov
call
xchg
push
xchg
rorb
es
xor
push
xchg
mov
xor
jno
mov
jmp
dec
fisttpl
movaps
fcoml
sbb
jmp
data16
sub
xor
cmp
je
mov
push
xor
and
repnz
in
movsb
dec
push
pop
fwait
mov
xchg
cmp
xchg
out
ficoms
jae
lret
fisubs
aaa
out
jno
es
call
shrl
dec
dec
jecxz
and
lahf
cmp
and
out
dec
ljmp
or
test
gs
or
dec
mov
mov
xchg
aaa
jne
push
mov
jb
jnp
icebp
add
ret
jns
mov
pop
and
lds
in
rorb
push
repnz
mov
mov
sub
bound
xlat
sti
ljmp
or
xchg
cltd
pop
mov
lods
sbb
rolb
loopne
adc
add
loop
pop
fisubrl
in
push
pop
adc
push
sbb
xor
nop
iret
fdivl
call
pusha
sbb
push
mov
fs
or
int3
movsl
inc
ja
call
and
add
daa
inc
sub
cmp
or
or
push
popa
inc
sbb
clc
jnp
sbb
cmp
std
pusha
fadd
cwtl
xchg
pop
into
mov
pop
out
daa
dec
int
jmp
aam
cld
rcl
push
insl
addl
data16
cwtl
add
lret
adc
dec
xor
lret
repnz
int
sub
js
cmp
call
enter
insb
fsubrs
iret
testl
push
inc
xchg
decl
lds
outsl
dec
mov
jle
insb
cld
in
notb
lds
jge
dec
mov
bound
hlt
cmp
add
roll
cmp
pop
jbe
lds
cmp
repnz
xchg
rcll
cmp
pop
sbb
pop
push
and
pop
test
adc
loopne
dec
push
adc
pop
js
sti
lahf
fwait
es
rcl
pop
stos
adcb
mov
mov
iret
or
testl
decb
js
pop
pop
movsb
pop
lcall
cli
adc
sbb
outsb
iret
add
pop
add
adc
sbb
unpcklps
test
daa
jbe
mov
mov
jmp
call
mov
pop
push
rol
sub
daa
push
mov
cmp
pop
js
push
loop
and
lahf
shl
cmp
cmp
rorb
inc
insb
out
dec
mov
cmp
out
pop
push
lock
sub
add
insl
daa
and
sub
pushf
fists
ljmp
fnstcw
fldt
sbb
stc
add
movsb
mov
xchg
or
cmpsl
add
fisttps
lds
push
pop
mov
or
and
int
pop
or
out
xor
lahf
movsb
inc
ja
icebp
sahf
push
jo
mov
dec
daa
bound
add
dec
jae
aaa
push
push
xlat
out
or
js
cmpsl
sbb
test
dec
fwait
push
insl
jne
inc
and
and
sbb
shrl
icebp
enter
icebp
cltd
or
inc
mov
xor
lds
aas
adcb
stc
and
in
hlt
xor
xorb
gs
out
jmp
push
int3
pop
push
pushf
xchg
jecxz
outsb
test
mov
inc
mov
cld
mov
scas
push
push
and
inc
push
insl
mov
jnp
repz
push
pop
mov
lcall
in
js
inc
inc
and
shlb
cwtl
jno
lret
es
scas
stc
bnd
call
pop
jo
push
mov
mov
daa
cmp
lock
pop
inc
mov
push
cmp
mov
push
pop
por
and
and
das
in
ret
repz
sarb
int
mov
repnz
ret
mov
movsl
inc
inc
push
aad
pop
cli
ja
add
mov
and
push
aad
lcall
pop
shll
adc
repz
and
mov
mov
mov
add
addb
clc
outsb
std
les
ja
in
jp
loopne
inc
sbb
and
mov
stc
mov
in
xor
mov
pusha
in
negb
inc
mov
das
cmp
cmp
push
xchg
cmp
mov
inc
test
or
and
cwtl
cmp
sbb
jle
mov
dec
popa
arpl
fs
pop
mov
and
push
cmpsb
push
repnz
clc
lcall
clc
js
mov
inc
xchg
popf
cmp
faddl
mov
ss
popa
push
adc
shlb
inc
add
fbld
rcrb
ljmp
push
xchg
cmc
jo
push
xor
jne
jns
xchg
fucomi
pop
test
les
test
jp
push
cmp
and
fwait
gs
out
divb
inc
nop
inc
mov
shl
mov
insl
imul
imul
negl
fwait
sub
sbb
jle
xor
jnp
push
mov
in
aas
ret
in
fistps
push
xchg
xor
dec
sahf
cmp
scas
mov
loop
addb
test
mov
movsb
mov
sbb
test
mov
xchg
and
mul
mov
out
test
pop
pop
out
adc
test
les
das
mov
loope,pn
jne
sub
jne
adc
mov
push
inc
lret
fwait
das
inc
push
ss
decb
cmp
sbb
imul
popf
aad
int3
jbe
pop
imul
inc
pop
push
xchg
cmpl
clc
cmp
stos
lret
jecxz
push
and
jbe
mov
outsb
popa
leave
out
lret
jo
jb
in
push
sub
lahf
and
pop
dec
add
jge
out
insb
adc
ljmp
adc
or
test
cmp
fcompl
add
xchg
cmp
es
mov
sub
pop
or
dec
repnz
xchg
dec
and
push
mov
fstps
dec
mov
pop
test
xchg
ret
xchg
xchg
jae
or
or
inc
call
xor
rorl
hlt
push
adc
sbb
add
lcall
cli
mov
ret
jp
int3
mov
cltd
loopne
pushf
and
enter
pcmpgtw
inc
rclb
rcll
sbb
loopne
mov
mov
cmp
push
fisttpll
or
out
adc
lea
pop
or
out
mov
sub
outsl
xchg
mov
inc
sti
lahf
mov
add
xchg
mov
cld
popf
scas
in
jo
outsl
xchg
mov
jo,pt
hlt
push
es
and
aas
les
xchg
sbb
neg
mov
pop
cli
and
dec
fnsave
movsl
inc
cmp
or
rcll
bound
sub
addl
daa
repz
cs
out
adc
jno
xlat
xor
loopne
ror
jecxz
stos
fs
and
mul
js
xchg
cltd
mov
and
mov
jo
imulb
lcall
xchg
bound
jbe
adc
or
mov
loope
stos
cmpsl
rorl
pop
imul
xchg
mov
stos
ficomps
sub
ja
lock
test
inc
imul
or
test
imul
jo
out
stos
sub
popf
inc
call
ds
cs
sbb
mov
fs
xlat
adc
add
dec
mov
out
and
jl
leave
lahf
or
push
mov
les
jns
jbe
sub
inc
sbb
mov
xchg
xor
aaa
cmp
xchg
bound
sbb
loop
push
add
cld
add
aaa
inc
aam
js
mov
in
nop
sub
adc
push
mov
das
fiadds
test
lret
adc
or
and
popa
shrl
inc
cltd
data16
push
test
dec
pop
dec
shll
and
das
in
jg
std
sbb
pushf
lret
decl
xchg
push
or
push
imul
ja
hlt
sbb
sbbl
test
loope
push
mov
lcall
dec
xchg
xchg
mov
clc
mov
add
mov
int3
sub
addl
lds
sahf
push
outsb
pop
imul
adc
cld
mov
mov
ficompl
xchg
shl
test
jecxz
jle
jge
cltd
mull
imul
adcl
cli
pop
jl
aam
outsb
pusha
inc
in
popa
dec
mov
cmpsb
cli
mov
movsb
pop
dec
sbb
or
js
stos
adc
and
cmp
outsb
lock
sbb
jnp
push
cmp
mov
or
aaa
icebp
cld
add
ret
dec
in
aad
or
mov
pop
inc
sub
and
or
lock
or
repnz
mov
xchg
into
sbb
pop
sub
mov
adc
sbb
jo
mov
add
cmp
daa
mov
loop
pop
pop
mov
mov
jecxz
xchg
mov
xor
jne
rol
cmp
xchg
jo
push
xchg
mov
xchg
or
pop
jg
fadd
jae
jmp
push
mov
cli
fwait
rol
inc
or
out
push
sbb
out
or
lret
lret
cmp
cmp
cwtl
iret
shrb
cmpsb
mov
xchg
daa
push
mov
in
aas
sbb
inc
mov
cmpsb
sub
gs
iret
mov
mov
popa
lcall
je
lcall
or
dec
jbe
mov
xchg
and
xchg
nop
adc
jmp
mov
sbb
int3
rolb
mov
repz
mov
stos
std
mov
cmp
xchg
ljmp
ljmp
ds
out
or
pushf
sub
fisubrl
sbb
push
push
cmp
pop
popa
jns
ficomps
adc
test
in
adc
mov
mov
inc
mov
fistl
jo
jmp
push
sahf
pop
imul
mov
mov
mov
call
pusha
mov
aas
icebp
xor
lret
mov
cs
idivb
mov
imul
mov
mov
dec
cmp
mov
pop
add
cmpsl
jbe
xchg
or
mov
adc
mov
enter
inc
mov
lock
outsl
es
daa
das
lcall
xor
jle
into
popa
loopne
xor
and
add
movsl
jo
les
xlat
jmp
aaa
movsb
jle
outsb
lock
fldl
clc
loope
xor
iret
rcll
mov
out
daa
and
fisttpl
push
adc
test
mov
aad
cltd
rorl
nop
bound
mov
test
jl
mov
add
dec
loope
mov
mov
daa
mov
pop
inc
xor
cmp
sub
outsb
lea
jg
ret
xor
loopne
adc
dec
addr16
inc
es
adc
mov
or
adc
dec
mov
cmpl
aas
cmp
adc
jg
add
ror
aad
jae
or
push
pop
imul
mov
mov
or
push
aam
adc
rorb
xor
adc
push
push
shll
mov
inc
sbb
div
mov
dec
mov
ds
xchg
jg
out
rol
in
aas
adc
sub
mov
mov
sbb
inc
inc
jns
lds
mov
jg
mov
mov
sub
repz
cmp
das
or
mov
leave
mov
inc
xlat
lret
imull
orl
sbb
xor
pop
hlt
jne
iret
or
dec
aam
popf
test
and
inc
push
outsl
flds
loope
aaa
fucomp
jp
add
jmp
pop
mov
mov
call
fstl
repnz
or
mov
mov
push
jno
iret
mov
mov
cmp
mov
pop
outsl
fwait
aad
xchg
sti
mov
iret
pop
aad
cld
adc
pop
fldenv
aad
push
dec
stos
sub
mov
mov
xchg
stc
andl
ss
jno
sarl
cltd
or
mov
ljmp
adc
push
ljmp
sahf
out
insb
dec
fcmovu
adc
pop
add
outsl
sbb
movsb
dec
jo
add
mov
push
jne
pop
fs
inc
jg
aaa
cltd
fdivrp
sub
cmp
and
sbb
sub
dec
idiv
pop
fsubrs
es
sub
cmpsl
loopne
sbb
inc
lods
xchg
mov
sbb
push
adc
std
push
das
adc
pusha
jno
mov
sahf
hlt
cmp
test
pop
inc
dec
push
lds
int
stos
imul
test
mov
int
mov
xchg
pop
dec
mov
pop
fadds
repnz
sbb
dec
mov
fdiv
inc
push
jp
mov
push
mov
ds
call
pusha
sub
test
pop
push
mov
idivb
dec
loopne
clc
adc
mov
test
int3
jle
sbb
test
cli
push
and
fsubrl
xchg
icebp
stos
addr16
outsl
mov
pop
in
cs
js
out
push
pop
aam
popf
xor
xor
jb
int
mov
out
inc
test
stc
cmpb
mov
xchg
lret
mov
cmpsb
xlat
inc
fimull
cmp
and
imul
subl
or
or
cld
sti
cwtl
outsb
jecxz
cli
int
xchg
mov
andl
inc
dec
cwtl
or
xor
inc
inc
and
fstsw
and
and
nop
add
cmp
adc
cli
or
sbb
lcall
mov
cld
pop
and
in
ret
rol
out
add
xchg
adc
fldt
bound
pop
mov
xchg
push
adc
xor
xchg
mov
pushf
xor
or
neg
lret
mov
and
dec
dec
xchg
arpl
xchg
bound
jb
ficomps
and
and
xchg
sti
test
in
inc
push
jns
push
xlat
jecxz
jp
loope
jmp
popf
xor
adc
adc
ja
cld
leave
or
lret
pop
cmp
push
sahf
inc
je
pop
ja
push
mov
stos
inc
push
mov
into
sbb
push
sarb
in
inc
scas
inc
inc
fcomps
cli
loop
push
or
les
pushf
mov
aad
and
dec
cmpsb
inc
adc
les
int3
sbb
mov
push
sub
in
sub
rcrl
xchg
push
add
push
pusha
addr16
cmp
dec
rcrb
les
cmp
pop
arpl
ret
mov
shr
add
movsl
inc
xchg
pop
test
push
add
andl
inc
jle
jo
adc
icebp
mov
aad
int3
repz
nop
movl
pop
pop
ret
insb
mull
cli
shrb
dec
push
push
xchg
pusha
xchg
mov
test
sub
or
cld
xchg
stc
aam
xchg
les
pop
push
xchg
dec
push
in
rdpmc
imul
xor
into
xchg
pop
mov
int
in
or
or
out
push
pop
or
pop
inc
pop
dec
mov
push
add
movsb
aaa
jnp
mov
jl
loope
enter
jmp
in
mov
enter
scas
xchg
inc
cs
cltd
xchg
shll
push
jp
jl
icebp
add
pop
inc
or
jp
cmpsb
sahf
out
cli
divl
add
add
xchg
xchg
mov
push
fwait
pushf
je
mov
je
enter
mov
adcl
or
outsb
cmp
std
lcall
ss
push
jno
pop
mov
rorb
call
notl
xchg
addb
stc
add
call
rcl
push
xchg
mov
aad
test
dec
aad
iret
jg
pop
pushf
test
les
pop
cmp
jmp
pop
cmp
aad
jnp
mov
scas
data16
hlt
enter
fwait
je
test
push
mov
jp
xchg
inc
fwait
sub
mov
and
test
hlt
sub
pop
xor
aas
pusha
ret
jmp
ret
push
sub
pop
mov
sbb
call
shlb
stc
test
sub
in
cmc
mov
icebp
es
xlat
orl
mov
jbe
loop
mov
add
lret
add
sbb
out
xor
xchg
jnp
xlat
adc
lods
jle
fwait
inc
test
jecxz
jno
hlt
mov
daa
dec
add
xchg
add
js
jmp
mov
mov
push
xchg
adc
sub
dec
adc
sub
dec
daa
sub
or
add
dec
in
sub
xchg
lock
les
mov
adc
push
or
iret
out
jne
jmp
mov
sbb
mov
pushf
hlt
insb
test
xor
stos
add
jecxz
jns
jl
sbb
cmc
mov
add
push
or
dec
add
popa
or
pop
sbb
je
mov
push
push
mov
pop
push
addr16
fisttpl
or
mov
xchg
popa
ja
mov
add
ret
push
popa
push
and
dec
test
xchg
ret
mov
ficompl
js
sub
cmp
pop
push
xor
inc
arpl
jne
pop
xor
pop
jl
je,pt
inc
cli
ret
push
jnp
mov
lret
test
xchg
loope
ds
xor
in
ret
mov
jp
shrl
ds
inc
adc
cmp
fldt
mov
movsb
adc
outsb
jle
sub
add
cmpsb
pop
test
imul
cmp
mov
push
or
xchg
xor
sbb
adc
fnsave
test
ds
pusha
pop
int3
xchg
and
push
jns
sbb
xchg
mov
and
movsl
arpl
outsb
push
shlb
dec
dec
pop
and
test
movsb
jecxz
mov
arpl
dec
pop
xchg
data16
movsl
or
cmp
call
cmp
das
mov
movsl
mov
push
ss
dec
xor
inc
mov
sbb
arpl
cmpsl
mov
scas
mov
jnp
cmp
popa
imul
mov
fmull
cmp
mov
mov
cmc
adc
add
pop
scas
jge
incl
inc
dec
test
out
repnz
push
orl
call
inc
mov
inc
mov
jl
gs
jae
in
pushf
inc
and
cmpsl
cwtl
test
add
mov
icebp
add
loop
cld
inc
dec
test
dec
and
sbb
push
mov
addr16
nop
fistps
xlat
push
adc
push
stos
mov
and
sbb
es
loopne
cmpsb
icebp
dec
fdiv
call
sbb
mov
adc
sub
outsl
sbb
cmc
fidivl
decl
push
leave
jmp
std
hlt
in
sbb
jbe
pusha
ror
fisttpl
arpl
das
add
aad
pop
lock
stos
dec
addr16
sub
jp
inc
inc
movsl
push
jne
popa
lret
daa
lea
xchg
add
rcrl
jmp
and
xor
jge
nop
fcomp
hlt
loop
adc
into
out
mov
push
call
jbe
cmpsb
or
and
insl
xor
scas
out
dec
mov
inc
mov
push
mov
jg
xor
mov
xchg
mov
nop
sarl
and
xchg
les
aas
ret
scas
add
insl
and
jbe
lret
ret
in
add
xor
fsubr
cmpsl
fcmovnb
stos
aad
add
inc
jmp
imul
pop
or
fisubs
dec
cmpsb
mov
loopne
repz
mov
insl
push
dec
cmp
inc
loope
aad
movsb
fcmovnb
enter
jmp
xchg
dec
pop
iret
lahf
test
dec
pop
mov
rcrl
jnp
out
cld
fwait
mov
rcrb
mov
pop
pop
aam
inc
push
xor
xchg
push
fsts
daa
xor
inc
rcrl
or
jmp
xchg
out
leave
mov
dec
push
lods
push
cmc
aaa
loop
enter
and
mov
cmpsb
aam
jb
imulb
inc
ret
es
scas
mov
and
adc
inc
shlb
or
dec
mov
push
xchg
cmc
adc
fstl
inc
das
js
test
pusha
mov
in
mov
rcl
fcomps
sar
aas
out
shll
fnstsw
not
arpl
xchg
jmp
insb
or
cld
loop
jo
out
xchg
cmp
cmp
mov
push
xor
add
mov
js
xor
dec
aad
scas
pop
flds
inc
mov
data16
mov
and
fsubl
xchg
xor
pop
mov
jnp
lahf
outsl
in
loopne
repnz
jbe
stos
sub
sub
xchg
rcr
and
xor
out
outsb
test
outsb
jle
sbb
sub
sbb
inc
cmp
in
repnz
mov
push
test
stc
loopne
mov
xor
scas
push
mov
test
mov
mov
or
pop
fwait
lea
xchg
lret
sub
jle
leave
inc
fsub
nop
ja
adc
mov
pushw
mov
adc
sbb
int3
cwtl
in
sub
fstpt
insb
mov
add
adc
pop
sub
mov
cwtl
push
pop
mov
sbb
xchg
adc
mov
xchg
cmpsb
xor
sbb
pop
mov
lods
aaa
dec
sub
mov
and
fstl
lods
adc
inc
push
xchg
add
jecxz
lods
pop
mov
dec
or
out
xlat
jp
fucomp
fsubs
mov
mov
cmp
incl
loopne
cmpb
or
push
leave
std
xor
push
dec
lret
and
xchg
pusha
lods
test
dec
mov
divb
dec
add
and
or
mov
adc
stos
xchg
stc
and
jnp
test
mov
dec
mov
fimuls
mov
cld
push
test
pop
ja
divb
xor
clc
in
jbe
jno
lret
pop
jmp
incl
or
push
daa
loopne
into
aam
push
jle
cmpsl
je
mov
pushl
or
leave
mov
aas
in
cmpsb
fcmove
xchg
int
sbb
jb
and
into
xchg
inc
and
test
js
clc
mov
inc
dec
xchg
lahf
push
inc
cmpsb
lcall
adc
cmp
dec
inc
and
roll
pop
shr
push
adc
jecxz
lcall
lcall
scas
xchg
fs
mov
into
mov
insb
sub
inc
mov
adc
sahf
inc
mov
je
daa
inc
inc
inc
stos
jg
sub
movsl
gs
or
mov
push
subb
shlb
inc
out
push
addr16
ss
xchg
mov
addb
call
es
push
mov
ss
data16
std
or
xor
repz
sub
mov
and
jbe
and
addb
jmp
and
fcompl
outsb
or
add
push
mov
in
inc
or
mov
out
fildl
es
dec
cld
sbb
ljmp
cli
dec
and
mov
jns
sbb
inc
es
insl
mov
insl
icebp
outsb
xchg
pop
idivb
outsb
stos
iret
mov
sub
xchg
sbb
push
jge
outsl
stc
test
into
or
std
fcmovnu
and
loop
xchg
push
mov
mov
repz
fadds
xchg
push
or
mov
popf
mov
mov
pop
inc
insb
mov
icebp
dec
xchg
xchg
inc
roll
lcall
push
test
sub
inc
pushf
push
adc
adc
jge
fadd
cwtl
gs
push
in
loope
xor
lods
adc
pop
jnp
les
push
adc
cmpsb
lods
mov
sahf
mov
std
cmpsl
sar
cmp
leave
push
pop
xchg
push
imul
pop
lret
xchg
sbb
daa
push
inc
pop
andl
loop
mov
jb
aas
mov
add
cmpsb
inc
in
mov
xchg
mov
push
test
dec
fwait
adc
xchg
std
test
out
and
or
cmpl
jge
shrl
mov
inc
cmp
push
cwtl
popl
rol
mov
lods
movsb
push
inc
and
push
testb
dec
sub
lods
adc
mov
mov
lock
push
xor
jp
mov
jae
std
rorb
mov
lahf
and
xchg
add
das
movl
scas
dec
jb
mov
jbe
xchg
xchg
mov
in
cs
jmp
stc
fmul
scas
xchg
and
cwtl
xchg
or
jp
mov
jne
cmp
jns
mov
jo
push
test
js
inc
fnstenv
and
lea
out
sbb
loop
push
test
adc
dec
insb
cwtl
pop
sub
add
cmpsb
pop
mov
outsl
loopne
movsl
xorb
cmp
push
imul
xor
aaa
jle
dec
sub
add
cmpsb
sub
inc
aad
xor
shll
xor
xchg
scas
mov
sub
or
mov
mov
inc
outsb
or
mov
jo
test
and
push
dec
and
clc
push
cmp
jns
add
pop
mov
xchg
xchg
mov
in
pop
push
dec
rorl
ja
mov
xor
xchg
repnz
jo
cmc
adc
loope
push
aaa
fstl
scas
fidivrs
fildl
scas
movsl
int3
pop
push
test
cmpsl
leave
outsb
test
add
mov
push
pusha
jl
popa
insb
push
push
push
rorb
mov
call
mov
mov
push
add
or
js
in
int3
add
daa
mov
add
sbb
clc
insb
fwait
or
test
sub
imul
xlat
fstps
aas
inc
or
cwtl
pop
pusha
pop
mov
ret
aas
imul
mov
movsl
push
int3
or
lret
movsb
stos
inc
leave
inc
icebp
lock
fadd
or
mov
xchg
sbb
jbe
scas
mov
pushf
mov
jl
xlat
imul
or
cwtl
fistl
pop
adc
outsl
push
notb
aad
add
ljmp
jb
jle
mov
push
cmp
rorb
cmp
vcvtdq2pd
popf
sub
lcall
int
push
out
sub
pop
add
or
shlb
loope
movsl
ficoml
jb
dec
into
bound
sub
cmp
push
int3
arpl
jnp
dec
test
adc
out
daa
hlt
outsl
or
aam
insl
add
ret
adc
int3
push
jno
dec
xlat
pusha
dec
lods
pop
sti
mov
push
xchg
pushf
das
iret
insl
cmp
in
or
ficoml
flds
enter
outsb
outsb
pop
pop
xor
je
rorl
mov
aaa
add
dec
imul
daa
add
xor
xchg
ja
adc
dec
xor
adc
fnstcw
test
mov
lcall
lods
xor
shr
cwtl
inc
add
into
aaa
repz
cwtl
inc
loop
sbb
int
lahf
pop
enter
pop
test
jle
lds
fcompl
out
pushl
pop
cwtl
ror
mov
push
mov
int3
pushf
xchg
mov
movsl
cli
jne
call
push
and
or
lea
pop
mov
and
in
xchg
fwait
outsb
xor
lahf
xchg
mov
xor
xchg
dec
cmp
cmp
xor
negl
pop
push
imull
mov
inc
mov
lods
cmp
dec
subw
and
je
mov
cmp
mov
shl
nop
sbb
sti
out
lcall
cltd
lea
xlat
add
inc
ret
es
inc
or
mov
sub
std
stos
inc
call
test
push
out
mov
jae
mov
scas
movsb
lret
push
jg
into
insl
in
push
shlb
sub
jns
ja
xor
sbb
mov
push
cs
xor
push
mov
cmp
xlat
mov
sti
ret
mov
mov
repz
in
push
ljmp
jge
lods
es
xor
pop
daa
add
xchg
mov
enter
sahf
cmp
dec
mov
push
psubusb
js
pop
fidivrs
es
mov
movsl
shlb
adc
dec
inc
jbe
aaa
push
scas
adc
push
cmp
xchg
mov
or
adc
popa
sti
je
sbb
jb
loope
mov
fwait
sbb
cmp
cmp
sbb
shlb
je
xor
orps
pop
push
or
leave
pop
push
xchg
leave
flds
inc
jl
cmp
ja
scas
aad
push
push
test
mov
orb
inc
cmpb
mov
in
scas
and
or
jl
xor
cs
fisttpl
add
adc
lods
jbe
cs
hlt
sbb
mov
jl
pop
or
popf
stos
in
sbb
xchg
std
xchg
and
pushf
pop
fs
xlat
adc
out
xchg
test
je
cmc
push
andl
lds
ljmp
popf
mov
jnp
xor
pushf
popf
into
add
and
mov
adc
arpl
push
into
push
sub
mov
mov
movsb
in
sub
sbb
sbb
or
lock
lcall
pop
mov
addl
roll
jno
add
out
in
xor
xchg
nop
jb
stos
and
mov
in
popf
adc
andb
mov
sbb
popa
dec
xor
dec
xlat
arpl
addr16
pop
nop
daa
mov
repnz
sbb
shll
sub
out
sub
xor
ss
cld
xor
insb
ret
inc
mov
push
dec
repz
adc
inc
movsl
jb
cltd
arpl
xchg
test
and
mov
sub
fisubrl
test
jmp
repz
inc
sub
xchg
rcll
inc
jnp
in
popf
or
mov
sbb
and
jecxz
imul
sub
out
jecxz
fwait
jecxz
xor
jle
divb
jmp
cwtl
fidivrl
sbb
jnp
das
or
stos
sub
pop
mov
and
in
orb
ds
push
add
jb
or
in
pop
fisubrs
adcb
push
sub
xchg
fimuls
mov
cmp
lods
fisttpl
cmp
jns
jge
lods
mov
shll
inc
xchg
pop
or
pop
fistpll
fsts
sarl
outsl
mov
cli
xlat
cwtl
add
cmp
mov
cld
int3
movsl
mov
or
repnz
mov
xchg
xchg
add
mov
add
or
ljmp
add
push
sbb
or
repz
stc
push
ss
daa
in
jbe
aas
push
ret
in
ret
test
mov
lret
inc
cmp
mov
ret
js
call
pop
lea
mov
icebp
mov
jnp
addr16
outsl
push
stos
nop
xor
cld
aad
xchg
ret
add
mov
lods
pop
fsubl
pop
add
leave
xchg
pop
sub
es
aas
lret
sti
icebp
add
leave
adc
mov
xor
out
ja
ja,pt
clc
pop
test
popa
xor
in
or
in
sub
cmpsl
dec
push
jb
sbb
mov
inc
into
enter
sahf
loope
mov
mov
insl
or
xchg
or
dec
mov
decb
jle
cs
mov
sti
jge
test
lret
hlt
xor
cmp
lret
or
and
xchg
pop
or
dec
push
add
sbb
int3
sbb
imul
cmp
icebp
incb
or
data16
imul
and
sub
pop
dec
cltd
xor
inc
xlat
std
jno
sub
loope
aaa
clc
jg
add
jecxz
pop
scas
sub
stos
mov
adc
cs
jmp
sub
pusha
jle
xchg
and
addr16
fdivl
jp
jl
loop
scas
aas
stos
insb
sbb
aad
xchg
sub
daa
push
pop
cmc
fsubl
cmp
lds
jns
cmp
push
fimuls
mov
push
aad
aaa
fwait
cmp
rcl
mov
shr
mov
hlt
in
mov
sbb
push
xchg
xor
int3
inc
clc
sub
jbe
inc
sbb
shld
mov
or
shrd
mov
orb
inc
cmp
jnp
rcll
push
adc
pop
push
push
jp
xchg
cmc
dec
jae
and
xchg
orl
call
cmp
mov
js
test
clc
outsl
xchg
lahf
test
pushf
in
xchg
cli
test
pusha
es
rclb
pop
stos
or
or
xchg
xchg
decl
lahf
leave
add
jecxz
mov
pushf
and
inc
sub
ret
sahf
sarb
pop
std
adc
dec
dec
or
pop
clc
pop
adc
inc
jl
sub
mov
es
negb
xchg
cmpsb
pop
mov
lds
lahf
dec
dec
addr16
cmpsl
xlat
aad
push
hlt
add
mov
sbb
mov
icebp
jne
test
adc
andb
jg
repnz
push
out
in
xor
stc
je
imull
push
push
pushf
xchg
test
mov
inc
xor
sahf
loopew
and
or
xchg
pop
xor
mov
sbb
addb
xor
pop
xor
adc
ja
in
sub
mov
mov
enter
mov
xchg
arpl
xor
sarb
xchg
aaa
sub
jge
sub
jg
cltd
xchg
push
jge
mov
sub
xor
sbb
ljmp
nop
or
arpl
out
or
sbbl
jo
or
sub
outsl
mov
sti
iret
cmp
xor
xchg
lcall
les
or
pusha
or
pop
insb
cs
mov
dec
and
xor
loope
rorb
es
push
adc
mov
xchg
xchg
ja
pushw
bound
adc
mov
jp
jl
into
rcrb
into
aas
cwtl
or
mov
mov
outsl
sbbl
popa
or
sub
adc
add
insb
addb
pop
inc
lock
pop
call
lods
sub
outsb
mov
or
pop
push
test
adc
scas
pusha
mov
in
lcall
movsb
loop
push
jno
cmpsb
int
into
inc
cs
jecxz
xor
repz
ljmp
repz
add
andl
lret
jbe
test
mov
out
adc
fwait
sbbl
fistps
mov
mov
test
adc
jl
sbb
add
out
inc
ds
mov
repz
jecxz
xchg
dec
pushfw
mov
stos
dec
jo
dec
pusha
adc
sub
xor
jo
pop
fnstenv
jge
lock
mov
sub
ljmp
test
or
jo
sbb
push
outsl
jl
push
lods
test
dec
push
mov
idiv
pusha
repnz
into
loop
inc
pop
iret
sbb
xor
call
test
mov
popa
sbb
push
dec
cld
daa
pop
inc
dec
es
ja
push
sub
cmc
sbb
or
and
test
jbe
aad
repnz
mov
aam
sti
lock
fmull
xchg
aas
and
aam
or
popf
lds
sub
movsb
mov
popf
out
lret
cmp
in
cld
aas
sub
push
jp
jecxz
mov
push
xchg
pop
jno
cmp
xchg
pushf
mov
lods
leave
dec
pmulhuw
xor
pushf
cmp
add
scas
cmp
jle
and
inc
mov
jae
sbb
pushl
xchg
js
sub
jne
and
dec
mov
xor
add
fidivrs
sbb
repnz
movb
std
mov
and
int
testl
jb
aas
sbb
jns
push
dec
xor
mov
mov
inc
test
mov
gs
push
mov
pop
js
lea
add
fisttpll
mov
popa
ja
jl
das
hlt
call
out
jbe
divl
inc
mov
test
inc
xor
xchg
pop
fldl
jp
fadds
add
repnz
inc
imul
sbb
mov
out
pop
arpl
gs
ret
in
sub
fs
icebp
fisubs
clc
mov
cmpsl
mov
fldt
mov
push
lcall
or
xchg
and
fs
repz
inc
push
push
mov
xchg
xchg
xor
cmp
jp
shlb
mov
sarl
rcll
inc
jmp
aad
sub
push
and
or
push
push
and
pop
mov
lret
sahf
adc
and
ret
imul
mov
popf
xchg
fdivp
out
xchg
pop
inc
xchg
add
dec
loop
aas
xor
push
imulb
dec
call
fsubrs
jbe
sbb
xchg
cltd
dec
push
clc
stc
mov
dec
clc
sbb
push
xchg
loop
scas
aam
and
dec
loope
jge
insb
push
stc
aas
rorb
pop
pusha
pop
fdiv
sbb
xlat
popa
or
pop
jmp
and
lods
je
out
or
loop
lret
es
xor
fstpl
cmc
inc
cltd
out
cli
and
fcoms
jmp
push
mov
xor
lods
std
cmp
iret
std
repnz
rclb
inc
pop
xchg
mov
ror
aaa
jnp
xor
jno
ljmp
adc
movsb
std
or
jmp
add
aas
dec
push
outsb
cmp
or
lods
push
inc
sbb
cld
mov
inc
mov
mov
xchg
adc
pusha
cmpsl
dec
push
adc
pop
ds
pop
aam
popf
mov
cs
test
mov
mov
push
jmp
in
dec
das
dec
pushf
and
movsbl
and
push
add
sbb
outsb
fwait
cld
and
fdiv
adc
sbb
mov
cmpsb
imull
leave
push
xor
ljmp
aas
jo
subl
sti
mov
or
popa
iret
js
outsl
shr
orb
dec
and
out
sti
jae
and
or
mov
push
cld
or
shr
push
in
aaa
std
pusha
inc
cmp
das
imul
test
mov
in
jmp
test
sbb
add
dec
push
fldl2t
testl
scas
sbbl
lahf
ds
mov
sub
in
insl
aaa
dec
out
push
push
popa
hlt
adc
or
xchg
sbb
in
loopne
and
cwtl
stos
hlt
jo
xor
lahf
add
push
aas
int3
imul
push
in
lcall
movsb
test
js
inc
shlb
add
sbb
or
or
repz
jbe
xchg
das
cmp
xchg
sbb
cltd
mov
mov
or
pushf
lds
es
out
stos
lret
and
pushf
movsb
lret
outsl
les
jbe
sub
hlt
scas
sub
push
inc
jmp
stos
ficoms
push
clc
popa
pop
pop
push
jg
xchg
fnsave
inc
imul
aam
and
jle
push
push
aaa
notb
subl
cmpsb
xchg
xchg
sub
mov
pop
aad
xlat
dec
scas
push
cmp
mov
movsl
notl
mov
idivl
push
mov
out
cs
data16
stos
mov
pop
lret
cwtl
and
mov
sbb
mov
out
shrb
mov
or
mov
push
xor
sub
or
push
popl
sbb
idivb
std
mov
repz
xor
xchg
mov
xor
mov
push
and
shl
jmp
mov
cmp
nop
dec
out
cld
add
in
lea
mov
or
popl
in
push
dec
mov
xchg
jecxz
fwait
sbb
inc
popa
pop
inc
mov
ror
je
loop
add
mov
mov
push
addr16
sub
pop
mov
mov
es
aad
ds
test
and
mov
xor
test
test
fcomip
ret
jne
test
test
sbb
pop
pop
push
cmp
mov
sub
ja
xchg
fimull
fstpl
adc
xor
jo
arpl
xchg
daa
and
sahf
or
fs
ret
int3
fwait
sbb
sbb
add
loope
daa
cmp
leave
jl
jmp
loope
pop
xor
add
dec
out
or
test
inc
mov
cltd
adc
xchg
std
rclb
ja
xor
jle
jg
mov
insb
fcmove
sbb
lds
cmp
cmp
out
aas
aas
loope
pop
sub
dec
push
in
add
out
mov
repnz
xchg
fldt
add
int
cmp
mov
les
lahf
loop
sarb
push
dec
dec
fldl
insl
incl
cmp
test
xchg
cwtl
adc
or
insb
dec
pop
sbb
out
scas
add
mov
jg
cmp
les
std
enter
cs
add
lcall
rcll
mov
fwait
pop
fbld
add
sbb
in
mov
lcall
fidivs
mov
imul
xor
cs
int
lahf
cld
repz
inc
out
xchg
push
cmp
mov
cs
scas
dec
outsb
inc
cmp
mov
pop
jno
movsb
jle
decb
xchg
rolb
add
or
leave
xor
in
loopne
arpl
xchg
or
mov
mov
lret
push
jg
cmpsb
inc
shrl
mov
lret
sbb
pop
cltd
inc
cmc
adc
mov
lods
in
es
dec
jp
ss
cli
dec
xchg
mov
sbb
mov
ss
addb
jbe
movsb
jb
push
add
xchg
in
mov
rol
ds
loopne
jmp
sahf
sbb
inc
jb
jmp
ror
mov
xchg
lods
mov
sub
xor
out
mov
sti
xchg
fistpl
lock
jne
lcall
mov
js
push
cwtl
rolb
daa
add
mov
xor
xchg
hlt
movsb
cmc
push
jmp
roll
and
outsl
push
xchg
add
add
fnstenv
ror
cmp
xchg
lea
out
jg
xor
je
call
mov
arpl
xor
lret
mov
ljmp
xchg
and
sub
rolb
push
dec
and
dec
pop
inc
jne
or
or
ret
mov
aas
dec
mov
and
gs
mov
adc
and
jne
dec
mov
call
inc
daa
int
movsb
das
cmp
jns
pop
push
aas
or
fidivl
mov
sbb
aas
jne
in
aam
sarb
cmp
ss
sbbb
sub
sarl
push
pushl
and
les
cld
fdiv
and
in
push
jp
ds
pop
jae
pushf
jbe
mov
cmp
mov
fmuls
xchg
incl
mov
das
xor
pop
scas
loope
xor
inc
fidivl
je
ret
out
movd
fnstcw
inc
adc
jnp
mov
into
xchg
push
mov
int
adc
jecxz
adcl
aas
cmp
cmp
xor
cli
lods
in
lret
jns
lds
inc
ljmp
jle
push
push
sub
leave
xchg
lods
mov
dec
jne
inc
sarl
addr16
pop
mov
outsb
je
popl
pushf
in
mov
scas
or
imul
or
cmpl
loope
jmp
mov
dec
int
lock
sub
movsl
aas
stc
push
test
or
fwait
aad
es
jbe
call
jbe
xchg
xchg
cmpsb
or
fwait
neg
sahf
xor
pop
nop
xchg
dec
lret
repnz
jecxz
mov
sarl
mov
and
popf
div
outsl
dec
or
sbb
or
test
adcl
into
or
sub
lcall
enter
sbb
dec
jmp
mull
pop
mov
adcl
jmp
arpl
cli
fmuls
dec
imul
mulb
mov
aas
mov
cld
imul
push
aaa
pop
das
pushf
arpl
dec
push
mov
or
adc
mov
ja
enter
pop
fisttpll
popf
jnp
push
out
mov
mov
aaa
data16
mov
hlt
push
push
sahf
pop
sub
pop
jne
mov
inc
push
lock
inc
jge
popf
fldl
fildl
mov
add
jp
lcall
push
pop
adc
enter
push
cmpsl
and
cmp
pop
loop
imul
mov
mov
clc
inc
or
inc
and
add
mov
cmpsb
xor
sub
std
sub
cmp
int
dec
std
mov
sti
fimuls
sbbb
pusha
lret
clc
pop
push
pop
add
xor
shll
dec
loop
daa
mov
adc
mov
fimuls
adc
leave
jbe
dec
imul
enter
jb
stos
cmp
aaa
xchg
mov
jno
sub
cs
cs
js
cmp
psubq
and
test
fnstsw
hlt
mov
jb
mov
aam
lds
pop
ja
pop
push
fnstcw
jns
lcall
outsb
dec
movsl
add
inc
lahf
or
icebp
hlt
lret
loopne
addr16
enter
loopne
mov
movsb
mov
or
jb
pop
leave
js
adc
pop
or
jbe
movsl
adc
das
jmp
sub
jb
adc
addr16
in
and
addl
sbb
inc
push
add
out
enter
jl
pusha
jbe
arpl
out
and
mov
loop
xlat
xorl
mov
xchg
fcmovbe
sbb
lds
xchg
or
cmc
xchg
mov
cwtl
mov
rcll
jmp
test
cld
es
mov
out
sub
inc
jp
rolb
pusha
out
pop
lcall
rclb
mov
push
shl
adc
inc
jb
lret
mov
in
popl
fs
push
and
or
inc
fnstcw
sbbl
leave
jge
in
sub
jb
fmull
mov
pop
ficomps
cmp
sub
mov
vandnps
daa
stos
cwtl
dec
xchg
pop
xor
enter
sbbl
push
jb
sbb
sahf
adc
sbb
cmc
add
gs
xor
sbb
in
repz
cmpsb
lcall
pop
mov
pop
hlt
cmpsb
sub
int
push
xor
mov
mov
out
and
rolb
jg
add
jl
push
mov
xchg
pop
mov
aaa
fldenv
imul
clc
js
cmp
xchg
add
or
aad
and
push
sahf
fbstp
push
retw
int3
pop
jmp
inc
and
pop
cld
ret
icebp
mov
out
mov
cld
ss
dec
pop
sub
inc
sti
sbb
in
jp
outsl
jle
mov
jl
mov
orl
xchg
mov
xchg
lret
je
fucomi
push
imull
cmpsb
fs
int
rcl
and
inc
xchg
adc
mov
imul
cmp
insb
push
mov
jp
andl
xchg
xchg
jae
sub
es
mov
adc
enter
adc
cmc
xor
loopne
sarl
lock
xorb
fstp
test
xchg
outsb
xor
mov
mov
jbe
dec
inc
xchg
dec
xchg
xlat
hlt
bound
ljmp
popf
mov
icebp
xchg
cmp
daa
jnp
push
je
dec
xchg
outsb
dec
aaa
push
mov
outsl
mov
add
xor
push
jbe
jg
dec
cmp
dec
sbb
sbb
cs
adc
pusha
cwtl
movsl
or
xor
jg
pop
mov
push
addr16
imul
sub
dec
arpl
dec
lods
outsb
cmpsb
test
das
enter
jmp
jle
mov
inc
ret
outsl
imul
shrl
inc
or
xchg
stos
ret
inc
leave
inc
mov
int
sbb
dec
in
jno
mov
cmp
je
sub
fstps
inc
sbb
pop
test
test
lahf
int3
les
lret
dec
lea
sbb
cmpsl
ds
adcb
fsubrs
mov
dec
sbb
jle
and
pushf
cmovge
jle
scas
pop
int3
test
jne
inc
inc
mov
pushf
mov
cmp
or
pop
add
push
mov
sbb
pushf
jb
push
cmp
loop
pop
cmc
movsb
pop
in
mulb
xor
lahf
xchg
mov
test
xchg
add
in
push
jae
mov
imul
dec
lcall
adc
dec
mov
mov
mov
enter
push
pop
dec
cltd
in
cmpsb
mov
jle
mov
inc
jbe
push
enter
imul
rclb
inc
or
mov
loope
dec
mov
sbb
cmp
loope
leave
popf
jnp
xchg
or
xor
push
lock
aam
dec
push
icebp
shrb
add
mov
mov
cmp
mov
dec
ds
in
mov
scas
jb
jb
mov
ds
mov
je
pushf
push
cmp
jmp
pop
adc
pop
rclb
mov
in
insl
clc
pushf
cmp
adc
fs
and
xor
rcrb
inc
and
iret
xchg
leave
loopne
jecxz
pop
xchg
xor
cld
imul
loope
stc
push
jl
pop
and
or
out
cmp
ret
mov
cld
inc
icebp
into
xchg
and
mov
inc
inc
mov
xor
and
jecxz
mov
mov
into
xor
mov
mov
push
jnp
addr16
mov
out
jl
xchg
clc
out
shll
loop
shll
sub
scas
ljmp
shlb
hlt
jp
out
lret
jnp
sub
push
iret
sti
ss
test
and
cli
mov
fdiv
xlat
and
ljmp
or
out
aaa
xchg
add
imul
push
push
or
jnp
mov
cmp
dec
and
jbe
lret
inc
xor
push
test
das
push
jecxz
push
js
test
sub
xchg
push
jb
jg
push
ljmp
dec
fdivrp
xchg
sub
insb
xor
and
fnstenv
fstps
stc
adc
jne
mov
sbb
pop
pop
ja
push
enter
out
bound
stc
shlb
mov
xchg
cmpsb
dec
cltd
or
mov
aam
sahf
sti
xor
enter
test
adc
fsubrl
mov
add
cmp
or
dec
fmul
test
lret
js
and
mov
push
mov
scas
cld
imul
push
dec
addb
aam
pop
shrl
mov
in
and
aad
js
int
inc
addr16
out
jmp
jg
add
andl
fwait
push
xor
leave
mov
cmc
fadds
hlt
push
jle
pop
scas
nop
mov
mov
subl
xor
or
sbb
cmp
add
jp
pop
push
test
out
xor
xchg
cwtl
js
pop
jno
stos
sbb
cmp
xchg
mov
test
shrb
mov
ljmp
adc
mov
jo
repnz
mov
jae
pop
jbe
iret
mov
in
xor
call
inc
xchg
sti
fisubs
inc
push
clc
scas
les
mov
sbb
xchg
es
mov
push
jb
mov
cld
mov
icebp
enter
filds
add
add
in
mov
mov
mov
cmp
inc
leave
and
pop
jne
lcall
enter
push
and
jmp
add
add
and
xchg
test
fadd
push
cmc
jmp
clc
lcall
js
int3
dec
roll
mov
ja
repz
xor
dec
mov
push
mov
movsl
aaa
adc
jmp
jmp
cmp
fisubs
inc
ficoms
sbbl
arpl
mov
repz
push
sub
fisttpll
sub
outsl
jnp
cmp
out
rolb
pushl
mov
cmp
aam
lret
xchg
jp
mov
add
jo
and
lds
mov
push
outsb
dec
inc
xchg
sbb
or
xchg
js
or
jecxz
fistl
inc
mov
test
xsetbv
jb
daa
xor
inc
inc
je
push
leave
inc
sub
out
mov
ss
gs
mov
jnp
xchg
fsts
test
mov
ja
inc
mov
mov
jbe
mov
adc
jp
xor
xor
jp
stc
aad
insl
inc
sub
cmp
pop
mov
push
lock
mov
jo
lds
ret
aam
movb
fwait
aam
pop
std
shlb
xchg
ds
sub
pop
popa
cmpsb
popa
pop
mov
loope
and
in
sti
mov
xchg
test
jecxz
mov
aam
outsb
and
cmp
aas
and
add
mov
in
push
bound
mov
fucomip
cmp
insl
xor
in
jns
xchg
iret
out
dec
in
cs
out
xchg
cmp
cmp
xchg
xchg
fsubrs
xchg
movsl
insl
test
sbb
cltd
insl
mov
repz
js
ja
and
xor
sub
fcomip
push
sbb
out
xchg
out
popa
push
adc
ds
cmp
jb
and
push
bnd
push
dec
out
or
add
jnp
popf
stc
xor
adc
fstpl
mov
mov
jecxz
dec
lret
jb
or
or
cmpsl
xchg
cs
or
mov
lret
popf
pop
push
and
dec
cmc
push
in
inc
push
pop
stos
jae
xchg
xchg
xchg
jg
sbb
mov
mov
dec
popf
shlb
ja
push
in
jp
xor
push
imul
or
sarb
jl
pushf
jl
mov
sbb
add
or
inc
inc
in
jbe
in
cmp
sub
sub
pop
dec
insl
mov
mov
mov
push
jmp
inc
in
loopne
adc
outsb
mov
fldcw
hlt
mov
cmpsl
bt
lcall
or
test
mov
sar
mov
out
das
fistl
loop
ss
addr16
stos
mov
xor
and
jge
mov
jno
mov
dec
scas
push
cmpsb
shr
sub
les
scas
push
sub
nop
mov
jnp
data16
xchg
mov
lahf
jp
mov
ss
push
or
dec
jo
daa
clc
cmpsl
or
add
jne
push
adc
stmxcsr
stos
test
and
mov
mov
sbb
lret
out
add
in
sbb
pusha
stos
jp
stos
inc
sti
data16
inc
out
stos
insl
popf
movsl
fnstcw
cmp
xchg
mov
inc
or
jo
das
aas
cwtl
rcrl
push
lret
push
out
push
inc
outsl
not
adcl
push
push
movsb
push
insl
ja
and
out
sbb
pop
es
test
adc
notl
aaa
add
js
add
icebp
test
cs
test
leave
sbb
loopne
dec
icebp
or
dec
jle
aas
in
ja
fs
or
lea
mov
movb
push
mov
adc
fstl
sub
dec
sbb
pop
sti
fs
pop
add
sbb
sbb
shll
in
push
xor
lock
xor
add
sar
jl
arpl
popa
out
cmp
aad
jne
mov
lahf
jl
cltd
lret
stc
mov
sbb
or
cmpsb
or
or
test
xor
adc
mov
jne
xor
imul
mov
jmp
mov
arpl
push
test
mov
jg
pop
sub
push
and
lcall
addr16
pop
dec
pop
sub
out
jmp
out
shll
cli
adc
adc
inc
data16
fildll
and
push
mov
adc
fsubrs
add
cmc
fisubl
scas
sarl
mov
fwait
pusha
test
add
aas
ret
enter
repnz
jns
or
inc
sbb
add
mov
inc
or
xor
loope
mov
lret
mov
jl
nop
mov
pop
addr16
dec
cmp
and
xorb
jbe
test
mov
fsubp
jmp
cmp
aad
cmp
mov
pop
scas
mov
mov
sarl
dec
cmp
or
xlat
sub
loope
xor
xlat
jnp
adcl
mov
repz
mov
fisubrs
adc
inc
or
stc
xor
pop
orl
test
test
ljmp
jg
insl
cmp
loopne
mov
mov
mov
mov
and
aad
sub
sbb
dec
xchg
outsb
repz
sbb
xchg
hlt
scas
nop
dec
xlat
ret
cmp
mov
pop
dec
imul
inc
scas
or
push
add
inc
outsl
add
insl
ja
cmpsl
clc
ds
int3
inc
lcall
cmpsl
enter
pop
xor
jg
pop
sub
test
out
adc
cli
int3
inc
cmp
out
pop
sahf
push
ret
shll
sbb
push
lea
jno
mov
nop
nopl
repz
xor
int3
inc
and
repz
into
adc
lds
and
inc
or
out
jg
and
sub
lock
hlt
and
push
dec
stc
ficoms
sbb
je
fcomps
hlt
push
int
lcall
fstpl
mov
pop
arpl
clc
push
jb
jbe
inc
arpl
push
ret
mov
scas
jae
lahf
ret
and
adc
stos
jnp
inc
push
int
mov
les
lcall
sub
out
dec
shrl
pop
adc
btc
arpl
cmp
je
testl
jecxz
adc
pop
leave
stos
std
sub
sbb
pop
jo
push
mov
cmp
jmp
or
test
ret
out
xchg
pop
test
adc
add
dec
sbb
and
cs
cmc
into
nop
cwtl
sub
cmp
push
push
clc
icebp
cli
jecxz
cmpsl
cmp
clc
sahf
outsb
int3
mov
clc
fisubl
test
lahf
movsb
add
add
cmpsb
jnp
arpl
mov
adc
out
cmpl
lea
adc
fstps
call
clc
pop
out
dec
in
hlt
lret
shrl
insb
or
jnp
rol
mov
ds
adc
dec
stc
leave
jnp
stc
into
cmp
pop
lret
test
insb
xchg
mov
adc
je
lods
xlat
cmp
ss
or
in
xchg
lea
int
les
sub
test
sbb
jbe
mov
rcll
jbe
push
cltd
add
int3
cmp
inc
xchg
mov
jecxz
mov
test
adc
xchg
sbb
hlt
mov
ret
shlb
ret
pushf
add
xor
and
loopne
test
loopne
cmpsb
push
and
xchg
sbb
pop
test
jno
stos
data16
popf
xchg
imul
jecxz
mov
cld
and
lods
cmpsl
dec
adc
cltd
sahf
aad
dec
sub
mov
pop
pushf
mov
add
inc
jbe
dec
lods
mov
mov
pop
fs
xlat
xchg
addr16
cwtl
hlt
inc
adc
mov
adcl
jp
push
and
imul
mov
sub
jmp
add
hlt
faddp
int
je
push
ret
fs
mov
sbb
fldenv
fmulp
xchg
rolb
push
push
mov
lock
movsl
orb
jecxz
std
lret
mov
mov
gs
mov
lea
sti
faddl
dec
lea
ljmp
push
ficoml
mov
mov
sbb
inc
dec
sub
pop
movsl
into
push
ja
mov
push
decb
jae
fisubl
lods
fidivs
xor
jae
enter
or
fwait
mov
test
push
test
add
push
addb
loop
ret
cmpsl
shl
mov
iret
lock
ljmp
lods
icebp
enter
jno
push
mov
test
js
inc
imul
call
cmp
sub
cmp
test
std
mov
cmp
fldl
dec
dec
ret
xor
in
ss
lods
pusha
dec
cmp
lods
sbb
and
lock
cmp
mov
pusha
daa
stc
push
jle
or
ljmp
aad
xor
or
pop
inc
sub
js
jb
or
aaa
fwait
cltd
nop
out
mov
lock
jns
fsubrl
pop
dec
cmc
pop
pusha
scas
sbb
adc
mov
push
mov
ss
paddd
cmp
sub
les
sets
fucomp
ds
mov
add
fisttpll
aad
xchg
mov
jb
sahf
push
dec
or
or
xchg
dec
cld
sub
loop
jb
xchg
xchg
out
inc
cld
pop
jno
jbe
pop
xchg
cmp
xor
xor
lcall
pop
push
dec
xor
xor
dec
repnz
gs
aaa
inc
stos
imul
int3
clc
out
mulb
bound
mov
daa
sub
lods
cmp
mov
sbb
or
mov
ss
sub
or
ss
call
cmc
sbb
add
adc
test
into
and
imul
mov
xchg
push
and
add
sub
inc
das
mov
adc
dec
add
movsl
leave
lods
or
and
int
ss
jmp
roll
sti
scas
ja,pn
test
dec
je
xlat
or
adc
sbbb
es
nop
pop
jb
sarb
cli
mul
pop
jmp
push
sbb
fstpt
pop
dec
pop
lahf
push
aam
sub
iret
sub
leave
mov
nop
jecxz
pop
movsl
xchg
lds
mov
adc
in
xchg
lods
mov
fwait
xchg
fwait
ljmp
sbb
loop
andl
lods
sbb
and
pop
incl
out
movsb
repz
or
ficompl
sbb
sbb
xchg
adc
fiaddl
int
mov
and
push
dec
xor
mov
jl
loop
leave
repz
ja
mov
xchg
lret
mov
cmp
scas
cmp
cli
mov
das
or
lods
sarb
jg
rcll
or
insl
cltd
test
jae
pop
push
scas
xchg
mov
imul
test
sarl
scas
xor
fdivp
enter
mov
lds
insb
out
jmp
mov
or
lret
adc
push
in
mov
and
sbb
arpl
je
add
mov
aam
sub
mov
lcall
iret
adc
loope
popf
dec
jnp
xchg
lret
mov
jb
scas
ret
or
sahf
out
loopne
and
mov
pop
popf
xor
movsb
push
push
sub
mov
test
push
mov
orb
repz
xchg
cltd
xor
and
lahf
cmp
nop
pop
adc
pushf
test
movsl
and
cmp
loop
mov
or
xchg
lods
in
leave
or
push
mov
lahf
loope
push
xor
decl
xlat
or
dec
jns
push
gs
into
test
sbb
jnp
pop
jno
cmp
cmpsb
fwait
cmp
les
sbb
adc
fldt
je
dec
push
cwtl
adc
ret
xchg
aas
add
fsubp
lds
xchg
mov
dec
out
test
jne
and
aam
jo
loope
xor
aas
clc
movsb
icebp
in
pushf
mov
fists
pop
popa
fwait
hlt
sub
rorl
xchg
imul
mov
sub
outsl
and
sbb
ret
js
mov
sbb
and
iret
sub
cs
adc
pop
adc
nop
push
inc
cmp
add
jge
nop
sahf
mov
das
sbb
ficoms
sbbb
cmp
mov
pop
nop
into
mov
sub
pop
fs
pushf
enter
push
enter
sub
jecxz
mov
repz
dec
movl
insl
stos
ljmp
jmp
jge,pn
in
jge
add
push
sub
icebp
cmpsl
loope
movsl
jno
sub
test
into
rcl
loopne
scas
xchg
adc
test
and
jg
inc
aaa
add
lret
rcrb
mov
push
imul
xor
daa
sahf
inc
xor
pop
sub
and
jb
daa
or
insb
dec
mov
call
icebp
inc
lret
lds
les
cmpsl
popa
mov
or
ficoms
mov
pop
xchg
fdivrp
inc
mov
xor
xchg
mov
ret
fildl
cltd
repz
mov
pop
cmpsl
push
subb
popf
push
mov
fsub
cs
std
push
and
cmpb
push
mov
imul
iret
jne
sahf
data16
mov
pop
sub
mov
xor
ret
pop
xor
iret
xor
xlat
jp
rcr
mov
into
out
outsb
jmp
je
pop
cmp
or
fs
or
imul
fists
jns
mov
push
daa
cmp
jle
movsb
jmp
rcll
xchg
adc
sar
cmp
mov
jb
cli
push
sbb
push
es
xor
lds
rclb
pop
mov
pop
inc
cmpsb
shlb
mov
jo
dec
mov
sbb
and
test
popa
lahf
int3
clc
mov
push
or
pop
imul
mov
xlat
adc
frstor
dec
int3
dec
cmpsl
les
xor
bound
nop
sbb
das
mov
lahf
push
movl
cmp
iret
push
adc
cmp
xchg
cmp
cwtl
sbb
or
mov
mov
ja
call
lret
lock
inc
popf
cwtl
pop
mov
xchg
ficoml
push
pop
push
mov
fdivrl
sub
in
sbb
xchg
imulb
xchg
sub
ds
xor
adc
daa
loopne
aas
int3
unpcklps
push
fwait
in
pop
xor
unpckhps
pop
ffree
ret
sbb
push
out
stc
cmpsl
lahf
cmp
inc
imul
pop
mov
leave
mov
mov
xor
jle
mov
cmp
jg
push
jb
mov
or
xchg
out
jle
cmp
out
mov
pop
xor
mov
push
or
lcall
jle
adc
cltd
push
std
loopne
xchg
push
push
jle
dec
repnz
sbb
xchg
popf
add
pop
jmp
xor
icebp
jbe
adc
andb
loopne
jg
shlb
jo
dec
test
int3
push
int3
pop
adc
push
out
mov
inc
push
es
push
inc
fadds
repnz
rorb
and
push
sbb
dec
test
mov
roll
insb
mov
mov
arpl
jo
jnp
int3
mov
cmovle
outsl
les
jbe
popa
shrl
or
fwait
popa
cmpsb
pop
sti
gs
ficomps
js
test
int
inc
sahf
or
add
dec
fwait
sbb
out
pop
cmpsb
xor
push
mov
and
sbb
mov
dec
pushf
mov
repnz
dec
adc
sbb
das
push
cwtl
push
xlat
xor
and
cmc
mov
dec
or
mov
imul
fists
clc
lret
adc
mov
ret
mov
lds
loop
lret
xchg
cmp
ffreep
push
pop
in
scas
iret
mov
addr16
fadds
icebp
adc
stos
in
js
sub
pop
cmpsb
and
jecxz
maxps
mov
outsb
fsubrs
int3
mov
sub
sqrtps
dec
pop
into
adc
add
js
push
cmp
das
add
pop
fcom
sbb
mul
dec
leave
pusha
cmp
nop
sbb
fmuls
or
fwait
stos
loope
fsubp
inc
lock
inc
ja
pop
dec
jbe
add
jge
xchg
lret
xchg
rcll
or
div
jecxz
mov
sbb
jl
fwait
lahf
cld
cmpsl
mov
outsb
aaa
jne
nop
out
inc
or
gs
push
and
pushf
sub
aaa
jne
jbe
popf
gs
andl
jecxz
mov
mov
lret
inc
pushf
cld
daa
rcl
xchg
inc
jb
cs
test
pop
neg
jno
repnz
mov
dec
cmp
iret
nop
pop
clc
leave
push
or
add
loopne
ljmp
out
movsl
pusha
mull
jg
mov
sub
push
fisttps
lds
ret
stos
dec
xor
push
test
inc
popa
mov
adc
subl
jl
push
cltd
and
cli
call
adc
mov
mov
repnz
test
insb
ja
xchg
dec
inc
int
cmpl
ret
outsb
std
cli
add
lods
xor
adc
mov
push
sub
xor
pop
push
mov
ljmp
xchg
push
sbb
add
xchg
scas
and
out
mov
out
add
mov
aad
lcall
mov
and
addr16
inc
pop
icebp
enter
or
adc
adc
or
mov
dec
add
ret
popf
mov
jg
imul
sub
mov
repz
nop
outsl
sbb
gs
xchg
jno
jae
es
sbb
cs
lods
xchg
add
sbb
dec
pop
int
jle
mov
ljmp
mov
imulb
mov
int
lds
mov
cmpsl
add
xor
mov
adc
fs
enter
popf
mov
rorb
shrb
xor
icebp
sbb
popf
sub
adc
data16
or
inc
push
into
mov
inc
xchg
int3
icebp
imul
cmpsb
fistps
dec
mov
out
mov
gs
xor
xor
or
mov
push
dec
xor
enter
idivb
mov
xor
xchg
push
sbb
test
sub
rcr
fdivl
addb
dec
sbb
in
outsb
sbb
jecxz
lods
out
cmp
mov
jmp
cmp
adc
roll
jle
test
sbb
cld
push
iret
leave
sub
cmp
stc
or
pop
test
xchg
sahf
mov
push
and
fldenv
xchg
test
out
fstpt
add
std
hlt
xor
and
je
cmc
mov
push
add
shll
rcrb
sar
test
lcall
sub
nop
shl
dec
ds
push
sbb
popf
mov
mov
out
mov
dec
inc
pushf
inc
mov
testl
fwait
inc
fidivs
dec
mov
sub
jmp
aad
push
fistpl
in
xorb
orb
add
repz
out
insb
push
fwait
inc
les
popf
push
int
sbb
lock
cli
sbb
ja
adc
add
dec
xchg
in
cltd
out
lahf
mov
pop
lods
adc
hlt
mov
inc
int3
xchg
pop
cmp
fistps
mov
pop
push
pcmpeqd
pop
inc
fmuls
lods
daa
mov
sub
mov
xchg
and
addb
test
or
incb
mov
jl
dec
ljmp
out
subb
push
sbb
roll
jle
jge
push
int3
xchg
fmull
add
lods
lods
or
shlb
std
adc
mov
inc
xor
sub
decl
ss
xchg
pop
fcoms
test
cmpsb
shlb
mov
repz
test
fisubrl
sub
out
inc
mov
ds
adc
lock
sbb
je
cmc
inc
dec
shrb
in
aam
inc
xchg
decl
loop
sti
cmc
pop
dec
fcmovnu
dec
testb
or
out
and
adc
out
lcall
ja
mov
push
pop
lahf
pusha
mov
jns
daa
and
fistps
xchg
mul
cmp
mov
out
mov
inc
std
mov
popf
inc
push
in
inc
movsl
jl
cmc
dec
loop
test
cmp
sbb
out
movsl
cmc
inc
push
mov
sbb
scas
jg
dec
sti
mov
das
cld
fcomi
sub
and
ja
cs
pop
ret
out
dec
dec
adc
lock
out
inc
lods
xchg
and
sub
dec
test
xor
jb
int
pop
ja
jns
and
iret
mov
dec
xchg
mov
inc
pop
jg
push
mov
add
sbb
js
jge
adc
outsl
jnp
testl
rorl
fsubrp
xchg
leave
aas
jb
daa
xchg
ret
insl
rclb
mov
scas
mov
and
jnp
sbb
rcll
push
cmp
dec
ljmp
adc
lods
outsb
push
je
repz
xchg
xchg
pushf
inc
loopne
jg
ja
and
or
dec
xchg
mov
mov
hlt
insl
in
das
loope
ds
mov
cs
imul
sbb
push
xchg
jl
mov
pop
push
lahf
loopne
int
xchg
xchg
into
inc
inc
pop
leave
stos
push
dec
cmp
fld
fs
sbb
sar
fnstcw
cmp
jp
mov
mov
push
pushf
cli
cltd
inc
je
lahf
xchg
outsl
mov
js
andb
pop
cmp
in
fs
pop
and
pop
nop
or
mov
pop
xchg
add
stos
xchg
mov
dec
xchg
das
mov
es
in
pop
sub
fwait
je
fildl
mov
push
pop
dec
jno
mov
sti
dec
and
mov
sub
cltd
xchg
into
jl
push
inc
aad
bound
cmp
stos
sub
pop
xor
mov
sub
jmp
inc
push
test
dec
jmp
inc
mov
lahf
and
leave
daa
in
lock
sarb
mov
and
mov
lcall
addb
outsb
scas
adc
mov
stos
imul
fistl
lcall
mov
dec
jle
aam
fimuls
or
adc
jl
movsb
mov
add
test
inc
pop
and
add
push
sub
jge
cmp
lret
pop
mov
lcall
or
mov
mov
ret
test
push
xor
movsb
xor
ss
decl
in
sarb
mov
pop
lods
mov
cli
add
aaa
incb
sub
divb
mov
jb
cmp
xchg
mov
and
mov
xchg
hlt
jle
bound
cmpsb
mov
mov
xorb
rcrl
xor
nop
push
mov
jns
stos
testl
adc
mov
scas
call
daa
xchg
push
call
aaa
out
jmp
mov
sarl
mov
xchg
scas
call
pop
add
jo
sbb
push
lea
cld
mov
or
fimull
hlt
sbb
sbb
pushf
stos
sbbb
inc
std
mov
mov
stc
out
dec
push
xchg
rol
rclb
mov
jo
cmp
jle
sbb
ljmp
xchg
insb
push
mov
jnp
xor
dec
nop
jmp
push
ss
icebp
cmp
imul
js
movl
mov
loop
push
inc
mov
mov
jecxz
xchg
push
test
leave
push
test
in
mov
mov
push
out
clc
sbb
xor
repnz
pushf
sti
inc
pop
add
cmp
or
push
gs
adc
cmpsl
sbb
je
insl
fiadds
mov
push
pop
repz
leave
in
test
daa
and
decb
mov
cmp
shl
jne
and
push
and
mov
test
pop
cmpsl
adc
inc
push
in
sbb
enter
push
xchg
inc
addr16
les
fmul
fwait
xlat
out
push
gs
inc
cmpsl
rcll
cld
cltd
or
xchg
test
stos
in
clc
lcall
jnp
sub
cs
or
aaa
pop
test
sub
mov
lods
dec
mov
hlt
scas
sbbb
adc
mov
aam
xor
inc
push
outsl
dec
lret
fcompl
mov
xchg
sti
xor
fistps
ja
ljmp
ss
sub
or
xchg
sbb
push
arpl
sbb
into
shlb
sbb
repz
cmp
sbbb
jb
xor
pop
pop
xor
adc
mov
xchg
fdivp
and
pop
lret
imul
nop
scas
clc
in
aad
push
hlt
clc
cmp
pop
mov
mov
in
sti
mov
mov
xor
mov
push
add
jne
into
in
lahf
xchg
mov
inc
mov
sub
scas
in
iret
xor
xchg
in
cli
int3
xchg
mov
mov
and
mov
sub
scas
cs
cmp
fsubl
stos
mov
xor
push
sti
std
sub
shr
mov
xchg
int
pop
mov
or
and
push
mov
test
and
xchg
mov
and
cvttps2pi
mov
int3
xchg
or
xchg
xchg
inc
sub
sbb
push
push
orl
fldln2
add
enter
mov
cltd
jp
sub
xchg
scas
mov
dec
das
ds
repz
les
inc
xlat
orb
xor
mov
sbb
push
mov
or
cs
add
cmp
fninit
jge
xlat
into
jb
adc
push
mov
inc
jmp
ja
cltd
divl
mov
inc
enter
or
mov
mov
js
pop
loop
xchg
add
mov
push
adc
testb
shr
mov
or
jns
js
adc
mov
es
rolb
lock
popa
scas
sbb
leave
and
shrb
jne
add
insb
fcoms
outsl
xlat
cmp
sbb
cmp
and
jb
mov
fsub
ljmp
mov
fidivrl
lea
mov
pop
xor
out
loope
out
mov
pop
mov
sti
enter
push
jle
lahf
or
xlat
aad
add
jbe
flds
inc
notb
in
out
cmpl
stos
mov
fiadds
pusha
in
sbb
pop
cmp
cmpsl
test
add
ret
push
mov
jl
cmp
mov
push
daa
cmp
adc
cmpsl
daa
mov
dec
inc
orl
add
sbb
mov
inc
xchg
cmp
add
pusha
push
leave
pop
lods
jmp
and
xchg
popa
lods
push
repnz
and
xchg
cmpsl
je
mov
xor
leave
mov
mov
dec
scas
mov
or
pop
add
or
fsts
cmp
mov
add
insl
cmp
mov
cmp
cmp
xchg
push
and
xorl
test
inc
push
xchg
xor
cmp
add
pop
xor
mov
cmp
fnsave
jg
enter
cwtl
xchg
sub
arpl
sub
sbb
faddl
add
dec
mov
ds
lret
inc
mov
pop
mov
shll
pop
and
test
sub
lods
cwtl
mov
jae
xlat
inc
add
dec
dec
mov
xor
inc
repnz
push
nop
clc
sub
pop
adc
imul
inc
jg
and
imul
push
jne
mov
lcall
xor
dec
cli
les
sahf
cmpl
movsb
andb
mov
shll
rorb
inc
xor
int3
add
imul
xor
js
xchg
push
scas
fbstp
push
in
test
dec
inc
xchg
push
push
mov
mov
shll
dec
dec
cs
push
mov
mov
sbb
aaa
ficoml
sbb
and
push
sarb
pushf
mov
fsubrp
xlat
adcl
fucom
sub
aad
loopne
jecxz
enter
sub
repz
xchg
jae
inc
push
movsl
jno
insl
es
icebp
sub
shlb
xchg
xor
mov
sub
jb
sub
and
dec
jb
enter
sub
dec
outsb
movsb
in
aaa
nop
stos
cmpsb
sbb
fwait
xor
cmpsl
jne
lret
andl
out
adc
push
or
call
insl
stos
cmc
pop
andl
sub
in
adc
lods
outsl
dec
ds
mov
scas
fidivrl
pushf
addr16
mov
les
ja
pushw
mov
add
inc
mov
inc
push
rclb
xchg
shll
cmpsl
jae
lods
sub
adc
lret
stos
adc
test
out
adc
repz
inc
jg
fwait
movsb
pop
push
outsb
dec
stos
sti
cwtl
ds
push
flds
dec
nop
clc
stos
mov
int
in
cs
xlat
test
and
rorb
stc
pop
or
shl
leave
lods
and
rorb
pop
lcall
test
jecxz
adc
pop
lods
test
pop
pop
push
inc
sub
fs
xor
insl
shrb
mov
mov
cmp
cs
mov
ficoms
test
add
mov
adc
mov
xchg
pop
dec
cli
divl
sti
in
test
imul
jbe
repz
shll
xchg
ret
in
std
jnp
dec
push
mov
subl
pusha
pop
sbb
cwtl
inc
loop
pop
shll
mov
inc
out
mov
push
bound
into
sbb
jns
or
push
in
mov
xchg
mov
xor
sub
shrl
or
dec
add
push
cwtl
f2xm1
mov
mov
mov
and
cmp
imulb
test
sbb
add
out
mov
push
mov
outsb
sbb
cwtl
mov
arpl
je
cld
imul
xchg
loop
into
fwait
pop
mov
inc
sbb
addr16
stos
sahf
fistps
push
sub
jo
and
divl
and
cld
jmp
addr16
std
cmp
rcll
xlat
adc
sbb
dec
dec
jg
and
mov
nop
push
scas
and
add
es
pop
push
stc
out
gs
test
bound
fcmove
adc
sub
out
jecxz
aaa
or
enter
sub
sub
dec
jns
dec
and
cmpsb
cwtl
out
mov
shlb
popa
inc
movsl
rclb
fidivs
add
out
dec
aaa
outsb
jne
push
cwtl
xchg
and
fxtract
jb
int
xchg
aaa
lret
push
test
pop
push
inc
inc
pop
ret
mov
xchg
fstp
sbb
pop
imul
in
ss
push
ja
repz
test
sbb
aam
test
js
push
mov
data16
movb
mov
xchg
or
mov
loop
inc
sahf
hlt
ja
jle
lahf
add
int
push
xchg
push
jnp
lea
fisttpll
xchg
cwtl
enter
loopne
cmc
and
out
xor
int3
sbb
jae
ss
nop
js
js
out
mov
loopne
xchg
std
cli
lcall
mov
push
test
push
hlt
in
push
in
daa
lock
push
mov
cmp
mov
push
mov
cltd
xor
xor
xor
adc
pop
sub
inc
cmp
adcb
mov
cmp
inc
push
dec
add
xchg
ja
scas
sub
fdivl
mov
outsl
mov
loope
in
pusha
rcll
aam
mov
xchg
push
jmp
stos
pop
stc
repnz
inc
xchg
inc
pop
lods
dec
mov
in
mov
add
jne
sbb
xor
lcall
xor
push
cli
fcompl
fwait
outsb
sbb
call
movsl
into
or
addr16
pop
xchg
mov
push
cmp
js
fcmovnb
and
movsl
xchg
in
cld
ret
adc
fs
mov
or
cmpsl
dec
lret
and
pop
adc
sbb
jge
mov
inc
add
and
lods
xor
xor
push
in
mov
jmp
xor
sub
and
dec
bound
cmp
out
sbb
mov
mov
incb
xor
dec
sbb
mov
xchg
enter
xchg
push
pop
adc
cmpsl
test
mov
repnz
jl
jo
cld
sbb
call
ljmp
es
mov
sub
add
and
sbb
invd
dec
jp
idivb
adc
rcrl
arpl
ds
sahf
fstpt
popa
cli
lock
int
das
scas
orb
sbb
cmp
and
mov
cmp
inc
push
aam
ljmp
xor
or
pusha
imul
or
stc
xchg
mov
jmp
pop
jmp
xor
mov
mov
fnstcw
jb
insb
cmp
add
shrb
sahf
mov
dec
sbb
fdivrl
adc
lret
mov
pop
cs
or
inc
push
icebp
mov
lahf
add
lods
mov
xchg
and
nop
xchg
jae
cmp
sbb
lcall
out
xchg
arpl
mov
sub
int
push
fcoms
inc
cmpsb
shl
mov
ret
and
pop
mov
adc
dec
jns
xchg
pop
cmp
or
faddp
sahf
mov
mov
sar
jecxz
das
fists
push
xor
mov
les
push
popf
dec
outsb
sub
shrl
cmp
inc
out
pushf
lods
adc
int3
fwait
mov
cmpsl
cmpsb
mov
xor
cld
test
aam
bound
push
push
shr
sbb
cs
out
loopne
xor
jmp
leave
lods
jp
inc
xor
mov
fldl
sbb
xchg
hlt
adc
adc
mov
jne
loop
in
out
xor
xlat
vcvttsd2si
jno
ds
dec
int3
les
or
and
sub
xor
or
ret
mov
shlb
ret
jo
mov
aas
test
add
lahf
outsb
cs
out
pop
leave
inc
jbe
je
cmc
arpl
sbb
jb
lret
inc
in
lret
xchg
pusha
or
xlat
stos
pop
xchg
clc
xchg
xchg
sbb
fcmovb
nop
jnp
lret
in
in
iret
mov
or
mov
loope
cli
mov
mov
add
xchg
adc
out
jg
mov
cmc
lods
bound
pop
pop
mov
orl
jno
test
pop
sub
cmp
xchg
push
ljmp
jecxz
and
mov
mov
push
les
xchg
leave
dec
mov
aas
outsl
fwait
nop
and
fnsave
std
mov
insb
xchg
push
adc
sbb
gs
jo
addr16
xor
int
cmp
sahf
xchg
push
xor
out
bswap
dec
fs
or
loop
pusha
mov
pop
dec
aas
bound
test
imulb
dec
add
inc
pop
add
or
das
rclb
inc
repnz
out
dec
outsb
or
inc
mov
adc
ja
fsubs
and
mov
fwait
outsl
fildl
fs
les
add
hlt
icebp
adc
dec
pushf
mov
sbb
mov
addb
adc
jl
les
pop
adc
jae
adc
mov
mov
adc
repz
add
insl
pop
test
sub
in
andb
lahf
ljmp
mov
cmpsb
lea
imul
xor
aam
and
enter
mov
add
inc
in
adc
rorl
or
jbe
adc
or
or
inc
xchg
and
movsb
lods
fs
xchg
mov
bound
push
mov
xchg
pop
push
or
loope
cmp
into
add
inc
out
cmpsl
movsb
imull
mov
mov
insb
xchg
out
pop
or
stos
outsl
inc
cltd
shrb
mov
sub
mov
mov
mov
inc
cs
pop
add
inc
in
push
sub
mov
xchg
loope
inc
movsb
jl
in
jno
xchg
add
out
inc
push
fisttpll
dec
pop
jecxz
mov
inc
in
xor
sub
pop
inc
into
scas
ret
pop
cli
stos
and
sub
mov
adc
decb
scas
test
sbb
rcrb
or
in
ljmp
lods
fildl
sbb
push
popf
push
xchg
adc
hlt
add
pop
lret
inc
push
imul
sti
cli
xchg
ljmp
xchg
push
pop
imul
rolb
cmpsb
mov
jp
popa
dec
cmp
lods
inc
sub
and
divb
mov
fndisi(8087
push
jge
stc
adc
mov
push
mov
dec
pop
mov
mov
fsubs
cs
jb
add
add
mov
cwtl
les
cmc
je
fs
shrl
shlb
pushf
test
dec
push
and
pusha
icebp
inc
mov
leave
out
pop
mov
push
fisttpl
jl
cmpsb
hlt
push
shll
bound
dec
out
andl
cld
jbe
rolb
nop
inc
push
pop
jmp
out
gs
mov
das
pop
imul
out
inc
adc
mov
inc
fsts
jbe
xor
add
dec
pop
sbb
or
xor
enter
dec
xchg
fstl
push
mov
icebp
repz
cltd
enter
movsb
mov
xchg
mov
in
std
je
test
ds
lods
pop
cmc
out
sbb
pushf
mov
es
dec
in
push
call
push
loop
leave
dec
inc
mov
arpl
jb
or
gs
fsubr
aam
cwtl
fwait
xor
int3
or
mov
scas
rcr
dec
out
mov
cmp
mov
xchg
mov
ss
sub
shrb
jb
loope
stos
inc
pop
ljmp
mov
clc
lcall
mov
or
pusha
cwtl
add
sub
lret
or
xchg
mov
scas
adc
out
in
mov
loope
shlb
mov
xchg
cwtl
jge
roll
or
or
fwait
mov
push
out
loop
sub
repnz
int
call
clc
lahf
filds
dec
xchg
xchg
xor
xchg
rorb
popf
push
sbb
jge
sbbl
stos
and
popf
scas
dec
andl
jle
test
xchg
sub
loope
ror
movsb
rcll
imul
inc
mov
in
adc
xchg
cmovne
jne
xor
mov
ss
repnz
add
and
and
nop
xor
pop
rclb
repnz
repz
je
loop
je
adc
push
popa
push
jae
shlb
xchg
lret
fsubrl
xchg
incl
adc
clc
aaa
dec
fiadds
popa
dec
add
mov
aaa
xor
pop
dec
push
cmpsl
je
lret
dec
test
cmpsl
push
imul
push
testb
leave
mov
sbb
xor
dec
pop
mov
stos
movsb
jg
mov
or
fcmovnbe
cmp
aas
out
sbb
xor
push
popf
test
inc
ja
dec
outsb
loop
pop
clc
add
aad
fsubrl
inc
repz
dec
lret
or
mov
lds
xor
fwait
mov
mov
ret
push
jae
cmp
xor
lods
lcall
cmpsl
stos
sub
shlb
lods
xor
setg
mov
mov
jp
sub
icebp
bnd
pop
mov
ret
and
addl
ret
dec
test
sbb
mov
es
in
lsl
add
into
jmp
sahf
repnz
and
pop
in
shl
sbb
clc
cmp
lret
push
insl
scas
xor
and
fs
orl
ja
shld
ret
lods
fisubs
dec
xchg
test
push
test
lret
int
fnstsw
rolb
addr16
push
gs
cmp
adc
insb
add
mov
inc
in
decb
cwtl
pop
and
sbb
push
push
add
push
sbb
xor
xchg
mov
inc
push
pop
cmp
jno
ja
add
scas
idivl
sbb
sbb
push
mov
sbbb
push
and
mov
or
cmpsl
cmp
mov
mov
repnz
push
adc
cmpsb
dec
inc
dec
jne
adc
jle
sbb
and
repz
xchg
inc
mov
mull
jg
xchg
lret
sub
mov
lds
ja
mov
pop
daa
and
sbb
or
aad
sbb
out
xchg
jb
inc
outsl
cmp
shll
sbb
outsb
cmp
mov
les
insl
mov
jl
sub
sarl
stos
cmp
das
add
jno
cmp
rcrb
scas
jl
jo
lock
addr16
dec
in
pusha
sbbb
test
cmpsb
pushf
pop
mov
imul
lret
ret
icebp
popf
lcall
push
lods
das
cmpsl
lds
int3
mov
pop
jg
aas
inc
mov
cmpsl
imul
pop
std
imul
dec
sub
mov
and
notl
jge
mov
arpl
sub
and
or
push
pop
inc
mov
addr16
and
test
ja
lret
testb
mov
cmc
sbb
adc
in
sub
and
sarb
pop
cwtl
in
notb
js
testb
jecxz
inc
xchg
xchg
pop
push
xor
dec
cmp
xor
jecxz
int
aaa
push
and
jge
add
add
xchg
ret
xchg
cs
cmp
xor
xor
pop
or
or
arpl
dec
cvtps2pd
insb
test
cld
dec
sbb
lds
and
adc
js
das
jle
je
das
movsl
xor
cld
xchg
addr16
or
shll
push
scas
mov
cmpsb
popa
test
push
mov
int
fiaddl
lds
mov
mov
pop
sbb
lret
adc
jbe
in
leave
dec
and
push
mov
jge
pop
mov
pop
xor
or
mov
or
ror
sub
push
movsb
push
push
sub
and
pop
scas
add
mov
xor
and
xchg
ficompl
lds
jno
mov
je
jp
es
ljmp
inc
addr16
xchg
sti
pop
xchg
popf
aas
or
sbb
mov
mull
mov
or
pop
incb
push
dec
fldl
jns
xchg
cmc
aad
fs
or
ret
cltd
lock
insb
dec
sahf
inc
inc
lret
push
xlat
and
popf
loope
add
jecxz
jp
cld
pop
out
loop
pop
xchg
and
mov
xchg
push
ds
xchg
add
xor
cmp
sbb
sbb
pop
adc
inc
mov
pop
mov
fisubrs
xlat
xor
mov
ljmp
icebp
sahf
mov
in
cmp
out
sti
xchg
into
dec
imul
mov
dec
imul
cmpsl
pop
or
pop
xchg
mov
mov
test
int
enter
repz
out
xor
out
mov
decl
insb
jmp
push
dec
or
jae
and
test
sub
push
xlat
in
jae
les
dec
fldcw
outsb
lcall
lret
ficompl
add
dec
std
idivb
pop
leave
inc
sti
fwait
outsb
out
jge
je
stos
inc
lahf
pop
shrb
iret
clc
out
xlat
shrb
xchg
jp
jnp
mov
imul
push
fwait
xchg
nop
clc
adcl
sbb
lods
xchg
lahf
xchg
sub
sbb
and
add
mov
adc
xor
add
cmp
out
shll
int3
push
ret
test
mov
iret
into
mov
sub
shrb
or
jo
popf
lds
push
cmp
mov
repnz
out
and
xor
or
in
aaa
adc
push
cli
push
mov
sub
cld
inc
lock
int3
fsts
ret
mov
popf
loopne
stc
xlat
mov
loope
push
or
ja
mov
int
pop
pop
push
push
push
mov
std
push
in
int
mov
out
mov
mov
xchg
in
mov
sti
or
shrl
insl
sbb
cmp
aaa
pop
push
daa
lret
jbe
iret
add
xchg
sub
ret
testb
outsl
sahf
mov
xor
mov
pop
adc
ljmp
das
lods
pusha
sbb
xor
dec
mov
test
arpl
shlb
stos
out
cmp
fwait
sub
sbb
mov
iret
test
les
mov
fwait
jns
pop
xchg
dec
lds
jle
std
xchg
push
clc
xchg
popa
loopne
repnz
cmc
pusha
inc
mov
fs
dec
scas
rcrl
sub
nopl
loope
arpl
fst
cwtl
jle
ficompl
test
xchg
imul
mov
mov
and
test
mov
dec
ljmp
sub
roll
into
aas
cmp
xchg
sbb
imul
pop
jp
pop
incl
lcall
popf
stc
cmp
dec
jbe
or
adc
sub
mov
mov
nop
out
push
iret
out
and
jle
faddl
stos
imulb
push
loop
out
and
or
lahf
add
jnp
adc
in
inc
jmp
sub
mov
test
xchg
add
jnp
ret
jbe
stc
sbb
inc
xor
sub
flds
test
jmp
imul
pop
push
pop
mov
adc
outsl
jmp
mov
or
dec
pop
inc
movsl
rcll
mov
loopne
jmp
pop
pop
lds
dec
cli
or
adc
aas
dec
daa
push
gs
jecxz
cmp
pop
sub
and
fwait
sar
imul
repz
or
ljmp
dec
pusha
pop
xchg
fcomi
out
rcrb
out
mov
pop
pop
rclb
call
sbb
pop
jae
cmc
adcl
mov
fmul
adc
jmp
loope
mov
fsubs
xchg
out
add
into
cwtl
or
pop
push
mov
mov
xchg
gs
push
jmp
dec
fsubs
push
enter
nop
push
cmp
enter
mov
and
xlat
and
jns
mov
shlb
xor
int3
sub
cmp
push
jmp
add
jge
lcall
movsl
jle
leave
pop
adc
insb
int
sbb
add
ds
fcoml
and
add
xlat
ss
out
imul
mov
cmp
in
xchg
data16
sub
inc
jecxz
and
shrb
jmp
mov
adc
mov
stos
in
pushf
fisubrl
adcl
add
repnz
ret
push
and
vpmadcsswd
pop
das
fnstsw
bound
mov
int
jno
loope
push
aaa
cs
xor
mov
dec
mov
out
xor
push
test
sti
mov
roll
and
clc
dec
mov
mov
sub
adc
xor
adc
aas
aam
xchg
jb
fistl
test
or
lret
cld
ja
hlt
test
xchg
cltd
sbb
ss
mov
mov
push
call
mov
stos
push
jbe
xchg
pop
loopne
sub
mov
jb
jo
stos
push
stc
stos
push
mov
scas
jne
dec
rclb
and
in
push
or
mov
frstor
loope
or
shll
loop
aad
int3
popa
test
add
flds
outsb
add
mov
lahf
dec
das
mov
jmp
add
pop
adc
adc
xchg
jp
cli
fmuls
and
push
cltd
dec
ror
add
adc
push
push
ja
sar
xchg
aas
jno
testb
test
push
push
xor
jg
sar
fisubrl
mov
push
adc
lock
xchg
push
mov
popf
adc
outsl
insl
xor
stos
popf
or
mov
repz
mov
imul
adc
shll
xchg
xchg
sub
push
xlat
jne
and
in
xchg
cmp
clc
dec
mov
data16
test
ret
sub
mov
pop
xor
xor
cmp
lock
dec
dec
xchg
mov
cmp
and
pushf
sti
cmpsb
outsb
jno
in
mov
mov
xor
adc
pop
xchg
cmp
adc
dec
pop
mov
and
fisubrl
xor
outsb
pop
outsb
or
jg
cmp
mov
adc
inc
orb
push
repz
mov
pop
sarb
dec
push
insb
test
fstpt
pop
xchg
xor
pop
shrl
dec
cmp
inc
shll
idivl
ret
nop
mov
loopne
xchg
in
ror
add
test
fidivrl
jl
mov
xchg
divb
mov
jbe
lret
lret
js
push
cs
add
and
ret
popf
or
jae
add
add
aaa
jno
cmp
adc
dec
popf
in
mov
push
push
lods
inc
dec
and
cmp
xchg
lret
push
clc
xchg
in
test
hlt
in
mov
fsubl
adc
sti
ficoml
cld
fdivl
sahf
push
pusha
adc
jmp
aam
jno
xor
xlat
and
repnz
sub
inc
insl
and
inc
pop
decl
mov
lahf
test
ds
in
pusha
sub
mov
loop
push
insb
shr
mov
iret
test
jl
mov
jae
outsb
and
mov
add
cwtl
jl
enter
or
xor
cltd
sub
mov
dec
clc
faddp
cmpsl
or
add
roll
das
test
adc
push
cwtl
cmp
subl
dec
add
andl
and
pop
xchg
enter
mov
mov
mov
loope
xchg
test
mov
jbe
sbb
mov
mov
mov
pop
inc
mov
cld
push
popa
sbb
xor
cltd
filds
in
test
in
push
dec
mov
ja
pushl
sti
cmp
les
pop
fbstp
inc
pop
fldt
rcl
dec
add
dec
xchg
pop
lods
lods
fdivrs
mov
roll
out
dec
aaa
xlat
ds
ljmp
add
dec
jne
or
mov
jo
lock
cmp
lods
and
mov
pop
or
mov
sub
mov
or
push
scas
sub
popa
js
mov
mov
insb
mov
js
in
jecxz,pn
or
jmp
gs
xchg
fcomip
cmpsl
bound
mov
nop
mov
inc
adc
aas
arpl
and
pop
dec
mov
js
jns
xor
sub
repnz
push
in
or
inc
add
fcmovb
aad
dec
xchg
mov
jle
into
mov
jo
bound
je
inc
ficoml
jle
fisttpl
mov
or
mov
xor
adc
xor
or
test
fcompl
xchg
jbe
shll
xor
dec
and
scas
ret
in
mov
sti
or
mov
les
in
mov
sbb
daa
mov
mov
and
dec
movl
pop
mov
aad
cmp
xor
mov
bound
mov
xor
sbb
lcall
out
sbb
cmp
subb
or
mov
mov
sbb
xchg
lea
sub
inc
pop
cmovne
push
xor
pop
in
fisttps
jle
gs
mov
add
andl
push
cwtl
out
fmuls
or
mov
pop
dec
jmp
jae
sbb
js
cmp
inc
push
bound
repnz
out
movsb
or
enter
mov
outsb
pop
lcall
ljmp
jl
add
cmc
or
adc
and
ljmp
cmp
jl
cli
cli
out
pop
lods
mov
xchg
xchg
mov
xchg
dec
mov
jnp
pusha
jl
test
out
xlat
and
dec
cmp
shrb
inc
cmp
mov
rcr
aaa
and
cmp
out
and
cmc
sbb
loop
sub
mov
cmp
mov
lret
mov
rcrb
cwtl
pusha
lcall
xchg
imul
leave
mov
mov
aam
add
cmpsl
lret
and
pop
hlt
lock
test
or
adc
into
stc
mov
mov
icebp
add
movsl
cwtl
cmp
jno
in
jmp
ud0
xor
push
fisttps
stc
cmp
push
les
and
push
ficomps
push
test
dec
sub
test
or
cmp
pop
data16
and
push
imul
cmp
aam
les
out
cmp
cmp
frstor
cmovnp
jno
lock
lahf
xor
addr16
lcall
pushf
popa
bound
stos
xchg
push
pop
dec
mov
sbb
hlt
cs
fwait
jecxz
jb
es
into
rcrl
aas
adc
sub
flds
out
scas
loope
jo
cmp
inc
or
movsb
or
addr16
aad
pop
cltd
mov
jg
bnd
sbb
mov
es
sbb
pop
repz
inc
call
repz
mov
jne
cmp
gs
pop
inc
xchg
mov
push
mov
pop
cmp
sarl
ret
sbbl
pop
loope
pop
or
mov
out
or
cld
mov
or
ficoml
sub
jl
xchg
sbb
ret
loop
rorl
mov
jnp
ret
inc
xorb
jb
imul
adcb
sbb
and
jbe
pop
int3
arpl
hlt
clc
call
stos
xor
add
popf
sahf
lods
push
sub
int
pop
cmpsl
mov
sub
insb
imul
dec
stos
pusha
and
inc
fildll
ficoml
jae
je,pn
mov
fcmovb
leave
out
or
mov
cmp
cmp
stc
add
mov
xlat
adcl
xor
stos
push
in
daa
or
inc
mov
fmull
jecxz
iret
dec
and
pusha
mov
jnp
sbb
inc
inc
stc
shll
cwtl
js
mov
pop
mov
mov
jae
pusha
xor
add
int
push
push
xor
jmp
rorb
and
test
addl
or
jge
imul
dec
jmp
pushl
test
mov
sub
dec
inc
in
out
mov
hlt
lcall
jnp
dec
int
fsubr
cmpsl
or
cmp
into
adc
lock
outsb
sub
outsb
outsb
je
mov
dec
sbb
sub
out
insb
cmc
add
cmc
bound
ss
mov
pop
cmpsl
sti
ljmp
cltd
fstp
bound
jle
and
js
and
cwtl
ljmp
mov
jae
clc
mov
stc
inc
or
enter
push
data16
lret
inc
pushl
loope
scas
dec
mov
xchg
adc
xchg
pop
lods
cld
stos
jmp
nop
mov
add
popf
xchg
mov
lcall
push
je
jp
test
xlat
mov
mov
test
mul
lds
aad
test
dec
jno
data16
out
xchg
pop
xchg
cmp
mov
out
scas
shll
sub
xor
jge
cld
jbe
sub
pop
pop
pusha
aad
or
mov
fistpl
cmpsb
sub
pop
ss
mov
sbb
xchg
imul
add
dec
xchg
dec
xchg
and
jo
mov
imulb
lds
xlat
jo
cmpsl
testl
lahf
lods
std
sti
mov
mov
sub
cmp
xor
mov
mov
je
jmp
mov
stos
xchg
gs
movsl
dec
pushf
mov
jbe
lods
daa
cmp
push
lods
inc
sub
sub
jp
xor
push
repz
sub
mov
cli
push
cmpl
out
inc
push
mov
fcomps
popf
pop
push
sub
fabs
inc
inc
xchg
mov
inc
sbb
dec
cmpsl
fs
fistps
popf
testb
mov
push
jmp
push
jmp
mov
sahf
fwait
mov
outsl
push
filds
mov
sbb
dec
call
ljmp
inc
shll
add
mov
cmpb
stos
sbb
sbb
dec
shll
sub
das
or
add
mov
xchg
stos
pop
lods
aad
in
dec
stos
movsl
stos
enter
dec
adc
mov
dec
dec
adc
inc
mov
pop
leave
mov
adc
xchg
sbb
mov
leave
int
push
or
shll
pop
xchg
call
cmpsb
outsl
mov
add
mov
mov
add
sbb
pop
push
loope
and
and
rclb
fdivrp
cmpsl
xor
lcall
arpl
aaa
shlb
fbld
or
dec
std
aas
sahf
sub
mov
inc
or
push
push
orl
dec
dec
call
dec
pop
xchg
sub
push
lret
cmp
mov
pop
aam
push
jb
push
vsqrtps
rcll
nop
pop
aad
push
cmp
inc
sbbl
jle
add
into
mov
cmp
sub
and
jne
add
mov
and
test
cmp
and
dec
ficoml
sbb
lds
mov
bound
hlt
aad
dec
iret
aam
test
push
cmpsb
popa
scas
mov
in
sub
addb
xchg
scas
mov
xchg
xchg
out
mov
push
mov
cmp
jg
adc
mov
imul
push
push
sbb
sub
push
cli
in
into
scas
les
push
sub
out
inc
mov
pop
adc
notl
loopne
testl
ret
push
scas
or
ss
call
bound
mov
push
mov
daa
cmpsb
xor
mov
push
add
jecxz
add
mov
std
mov
sub
inc
pop
cltd
ljmp
mov
adc
xchg
sbb
repnz
inc
imul
xchg
xor
xchg
ficompl
sbb
dec
mov
jno
inc
movsl
mov
lea
rcll
iret
pusha
or
in
mov
jp
xor
push
add
or
jp
xor
mov
inc
sbb
inc
xchg
pop
inc
aas
leave
rcl
out
pop
push
pop
inc
mov
jecxz
test
mov
outsb
gs
add
and
js
nop
pop
mov
sti
jb
sahf
jns
fwait
pop
cmp
push
sarl
dec
fcoml
mov
sub
aad
jae
fwait
dec
iret
sub
dec
jle
mulps
xlat
push
mov
pushf
add
xlat
mov
fcmovnb
jae
lret
ljmp
int
sub
cmp
and
ret
in
xchg
pop
cli
out
lods
adc
push
lret
and
cmp
jns
push
mov
jl
fs
repz
xchg
cmp
out
push
sub
icebp
cmp
aas
lock
popf
mov
lcall
adc
cmc
push
and
push
sahf
inc
jno
shrb
test
sub
dec
les
sar
stos
xor
je
or
dec
rolb
or
add
lret
addr16
out
inc
jo
loopne
and
mov
jae
dec
fwait
in
cwtl
xor
lock
sahf
loope
lods
mov
add
sbb
sbb
dec
mov
out
es
js
sub
pop
test
and
test
dec
lds
aas
je
xchg
sbb
mov
sbb
push
mov
jle
mov
or
loop
clc
rcr
xchg
leave
clc
lods
ror
into
sbb
inc
or
xchg
xor
mov
xor
mov
and
lcall
pusha
popf
push
xchg
jnp
int3
popf
lahf
outsb
jecxz
int
xchg
pop
out
jl
fprem
mov
push
mov
movsw
popa
cltd
int3
insl
add
add
cmp
pand
nop
ja
sub
dec
mov
stos
cmpsl
mov
sbb
xor
mov
stc
ljmp
in
sub
or
out
mov
fcomps
mov
lret
jne
sub
int
dec
subl
dec
inc
addr16
xchg
add
ss
or
mov
out
sbb
lock
fnsave
aam
adc
adc
mov
add
xorl
int
pop
sub
repz
xor
mov
jmp
pop
sbb
inc
bnd
sbb
or
or
dec
dec
mov
and
je
sbb
and
out
dec
push
mov
arpl
adc
shl
int
iret
lahf
in
xlat
orb
imul
sbb
jp
rolb
inc
sub
sarl
fistpll
imul
push
push
jae
cmpsb
cmp
fimull
andb
inc
add
shrl
adc
hlt
push
fldenv
sbb
fidivs
movl
mov
xor
cs
ret
insb
add
sbb
dec
pop
mov
enter
push
pop
and
out
dec
cmp
mov
mov
je
aad
add
push
pop
inc
xchg
or
sub
dec
or
es
push
dec
call
out
mov
push
xchg
cmp
sbb
lcall
dec
pusha
xchg
mov
add
test
xchg
ficoml
xor
in
lds
sub
fldl2e
jmp
sub
fwait
jl
dec
stos
xor
gs
not
xchg
out
mov
xchg
dec
fiaddl
jge
unpckhps
fimull
vmulpd
mov
lcall
les
gs
sbb
jns
and
cmp
fs
xlat
out
dec
sbb
loop
push
jg
add
test
fldcw
dec
test
xchg
clc
sub
loope
aam
ret
inc
dec
fldcw
mov
out
sbb
insl
inc
jmp
fucomip
es
xchg
jecxz
dec
sti
xchg
lret
cmp
pushf
in
les
jb
dec
fnstcw
push
jnp
in
add
negb
dec
mov
js
enter
mov
lahf
xchg
xor
jmp
bound
cmp
insb
std
int
adcl
xchg
cltd
pushf
lret
add
push
rcl
popf
add
enter
sbb
out
test
out
adc
insb
add
pusha
lods
xor
cmp
test
loope
imul
pusha
andl
test
cmp
repnz
ret
pop
lds
sub
jle
jb
mov
scas
in
mov
std
aam
js
jl
mov
shll
sub
pop
and
push
std
mov
jge
mov
shlb
mov
repnz
cmovne
inc
push
push
cmp
or
cli
test
dec
cmp
in
jmp
mov
and
push
mov
ljmp
movsl
test
scas
adc
jb
movsb
jle
mov
or
or
ljmp
xchg
lea
daa
int3
add
cmp
call
fistps
es
and
hlt
pop
insb
push
sbb
pop
xchg
push
push
fisubrs
out
mov
sub
or
aad
xchg
dec
xor
dec
loopne
data16
adc
mov
xchg
push
orb
ja
idivb
jns
out
nop
inc
or
mov
dec
lcall
iret
push
dec
add
push
add
loopne
sub
not
cwtl
imul
sahf
xchg
adc
mov
movsl
in
scas
cltd
ljmp
loop
jecxz
stc
lds
repnz
push
mov
jge
sbb
pop
mov
subb
mov
xchg
fmull
in
sar
cmp
ja
pop
stos
test
popf
pop
fcoml
push
mov
xchg
xor
cwtl
adc
add
fbld
cld
pop
mov
cmp
enter
or
hlt
les
adc
push
sub
notl
jo
leave
and
jecxz
imul
insb
and
sub
fwait
sub
and
stos
pop
cmp
pusha
pop
call
div
add
sbb
mov
inc
jns
jl
xchg
testl
xchg
loopne
addr16
xchg
lds
cld
rclb
mov
add
jmp
js
cmp
sarl
add
sub
sub
push
push
scas
xchg
or
test
sub
rcl
stos
mov
cs
xchg
mov
xor
mov
mov
jne
loop
and
gs
decb
xchg
push
cmp
test
cmp
insl
and
lock
xchg
xlat
rcr
or
add
movsb
ljmp
inc
rorl
popf
int
mov
lea
sahf
jle
or
inc
sti
out
lods
stc
ficompl
cmpsl
xlat
jno
out
and
or
gs
sti
dec
fsubrs
jge
cltd
pop
mov
pop
sbb
jno
sub
adc
rol
mov
mov
repz
mov
push
sbb
xor
fbstp
mov
xchg
ret
in
xchg
fwait
and
aas
jmp
clc
leave
push
xor
mov
out
pop
out
dec
fwait
sbb
lock
mov
mov
inc
add
mov
sbb
es
ljmp
je
push
js
mov
sbb
repnz
es
push
sub
sub
aam
lret
adc
test
pop
es
and
lods
xchg
mov
xchg
cmp
mov
mov
pushf
loope
mov
aas
insl
pop
cmp
syscall
cmpsl
sahf
daa
bound
push
test
mov
roll
xchg
paddb
outsb
mov
fsubrs
packuswb
push
jge
and
repz
hlt
or
pop
mov
pop
jo
pop
jne
cli
punpcklwd
mov
sti
mov
adc
imul
out
movups
cmp
sub
aaa
pop
pop
fdivs
jmp
mov
pop
dec
sub
hlt
pushf
sub
jmp
cwtl
inc
test
sub
sub
gs
cmp
rcl
rolb
push
or
sbb
cld
lods
inc
mov
movsl
sbb
fnsave
cmp
lret
or
jo
xor
lret
mov
lds
stos
icebp
mov
mov
push
iret
and
cmp
inc
testb
gs
gs
push
repnz
push
imulb
xor
insb
sbb
mov
cmc
sub
cmpsl
call
call
test
fdivrp
outsl
xchg
mov
leave
sbb
icebp
cmp
push
mov
stos
dec
jbe
mov
enter
push
call
lret
testl
pop
roll
add
cmc
enter
mov
xchg
popf
insl
iret
cmp
movsb
imul
lahf
ret
scas
addr16
clc
push
int3
imul
gs
in
mov
mov
aaa
xchg
sub
fsts
mov
mov
ss
test
cmp
adc
cmp
cld
add
sbb
insl
iret
inc
js
sbb
mov
lods
lea
mov
adc
sub
inc
inc
cwtl
call
mov
divb
xchg
addr16
int3
mov
pop
sub
mov
test
mov
std
outsb
and
jge
mov
fldenv
test
cltd
faddp
xchg
jb
lods
sbb
insl
xor
cli
aas
lcall
jno
xchg
inc
call
sbb
in
into
sarb
pop
inc
cmp
xor
sti
out
sub
in
std
lock
les
lods
dec
push
inc
decb
ljmp
and
int
and
clc
icebp
mov
imul
fists
pushf
jbe
arpl
dec
push
cmpsl
outsb
mov
aam
jmp
int3
sub
or
lcall
fwait
test
aad
xchg
jb
mov
insl
movsl
inc
enter
into
sbb
je
es
in
xchg
dec
data16
pop
xchg
outsl
push
les
cmpsl
mov
js
lret
in
mov
inc
cs
in
mov
mov
pop
or
dec
xor
mov
pop
pushf
aad
into
adc
iret
dec
lods
xor
lods
in
push
int
lcall
pop
outsl
out
add
cmp
addps
in
sbb
sub
rorb
mov
push
fsts
mov
dec
and
cld
out
add
sar
mov
insl
cld
lcall
inc
and
es
stc
lret
sub
and
scas
dec
in
jae
aas
std
or
adc
push
and
jg
fisttpl
dec
fistpl
cld
dec
sub
xchg
inc
rcrl
outsb
cmp
shl
movsl
cmpsb
gs
sbb
mov
pop
adc
mov
pop
adc
daa
gs
cs
fldenv
inc
loopne
sub
mov
shll
lret
sahf
push
and
or
mov
mov
dec
xchg
scas
mov
popa
iret
mov
fcomps
cmp
mov
orb
fldenv
insl
push
fwait
stos
rclb
adc
sbb
cmp
pop
ljmp
mov
dec
adc
call
xchg
cmpsb
jle
inc
dec
not
mov
stc
repnz
test
cmp
push
lods
xchg
faddl
push
loope
clc
push
xchg
sub
dec
shl
aam
cmc
jno
lds
xchg
lret
lods
repz
add
int3
mov
jno
xchg
movsb
inc
movl
icebp
sbb
inc
std
call
fsub
pop
mov
dec
jle
dec
loope
jbe
clc
cmp
pop
inc
test
cs
enter
sti
push
mov
lret
movsl
and
xor
cmp
decb
addr16
push
push
std
cmc
xor
pop
aaa
cmp
xor
dec
subl
jae
add
sub
fimull
jo
mov
pop
mov
insb
and
call
mulb
gs
jecxz
je
aas
arpl
mov
iret
imul
fcomps
lret
inc
sti
and
inc
arpl
push
sbb
idiv
nop
mov
aam
outsb
and
jp
hlt
mov
icebp
popf
sbb
sarl
sbb
cmp
mov
mov
and
mov
ja
or
push
es
inc
lret
insb
jecxz
idivb
push
jb
inc
insb
enter
popf
jle
clc
inc
std
xchg
pop
sbb
lret
xchg
pop
add
btc
scas
mov
push
pop
ud0
fldcw
rclb
dec
pop
loopne
mov
or
imul
and
push
aas
jb
mov
xchg
sbb
xchg
in
and
out
sahf
inc
dec
lods
push
cmpsl
fistl
push
add
mov
mov
int3
mov
push
xor
pop
sbb
or
xor
outsb
xlat
sahf
mov
xor
cwtl
xor
shlb
scas
js
push
mov
fwait
mov
dec
imul
sbb
icebp
mov
movsl
ds
dec
dec
outsl
pop
int3
xchg
into
and
mov
in
or
rdtsc
mov
cmp
jno
adcl
jecxz
pop
out
test
mov
cld
push
enter
je
dec
iret
add
mov
pusha
adc
mov
test
ja
insl
test
jge
push
sahf
fsubl
in
shlb
mov
cltd
pop
cmp
test
in
xchg
rol
mov
cmpsl
dec
repnz
mul
outsb
cmp
sbb
xor
mov
andl
imul
ljmp
adc
jo
loopne
bound
sbb
ds
xorb
mov
or
mov
push
test
pop
jecxz
pop
mov
outsb
inc
stos
pop
mov
mov
pop
dec
cltd
out
outsb
stos
sahf
inc
das
fcoml
sub
data16
movsb
push
daa
cmpsb
fwait
ja
mov
fcomi
stos
adc
shlb
cmpsl
in
xor
stos
sbb
dec
pop
adc
mov
jbe
pop
mov
dec
push
popf
sbb
jne
fmul
cld
divps
mov
in
add
iret
aad
movsb
mov
pop
test
mov
pop
push
xchg
aad
rcll
in
mov
movsb
mov
nop
subb
and
pushf
mov
pushf
dec
fwait
xchg
mov
xchg
leave
dec
int3
cmp
pusha
cs
cs
inc
cltd
ds
shlb
or
movsl
inc
es
mov
scas
movsl
mov
and
jbe
cltd
xor
loope
icebp
test
int
sbb
lock
pusha
sub
add
test
shrl
negb
push
inc
adc
and
daa
insb
fisubl
out
dec
mov
and
cmp
mov
jne
fsubrl
test
popa
pop
pushf
jno
pop
or
ret
sub
mov
aad
mov
sbb
push
inc
adc
loop
mov
mov
mov
sbb
xlat
add
xor
fildl
jge
xor
mov
ja
js
jns
xchg
xchg
mov
jle
push
jne
shll
jno
lock
pop
xor
out
inc
cli
xor
int3
divl
sub
pop
pop
fldt
cmp
mov
jb
dec
int3
push
orb
out
out
pop
xor
lahf
or
mov
mov
sub
sbb
dec
push
xchg
lret
icebp
hlt
inc
mov
push
cmp
sbb
push
mov
popa
mov
insb
xorb
jo
adc
test
or
cmp
adc
sti
mov
pop
repz
xchg
sub
test
lret
lcall
push
mov
push
out
lcall
shlb
push
inc
cmpsb
and
add
xchg
sub
cmpsl
das
orl
fbstp
clc
lahf
cltd
es
int3
insb
jl
jne
rcrb
pop
push
lret
jmp
ret
jp
not
movl
pop
icebp
test
cli
xchg
insl
icebp
mov
mov
test
and
das
arpl
jge
push
leave
xor
test
movb
xor
mov
sarb
xor
add
fnstenv
or
mov
push
push
push
test
mov
push
loope
aad
imul
cmp
pop
adc
bswap
push
cmp
iret
push
push
mov
mov
jno
cltd
mov
sub
les
pop
xor
je
and
mov
cmpsb
ds
mov
mov
popa
xchg
in
mov
push
in
and
push
popf
push
mov
add
pop
sbb
ret
xchg
mov
inc
jge
sar
out
and
dec
shl
pop
mov
pusha
call
xchg
lods
in
or
adc
sub
inc
adc
jns
ret
pusha
nop
popa
and
pop
sub
imul
pop
je
les
push
fsts
repnz
pop
sub
sbb
jns
leave
dec
test
adc
xor
rol
xchg
mov
les
adc
inc
dec
pushf
lret
inc
pushf
adc
pop
mov
sub
lahf
fidivrl
mov
push
scas
sahf
adc
popf
icebp
inc
rorl
shll
mov
fmul
add
aad
movsl
push
pop
movsl
dec
and
lds
shlb
adc
aad
dec
xorl
adc
ja
push
or
and
das
sub
andl
xchg
hlt
cwtl
cmc
lea
cmp
or
loope
or
jae
and
fstl
push
ds
mov
clc
data16
and
pop
sub
or
add
pop
mov
and
ret
cmp
mov
jae
dec
ljmp
nop
pop
sbb
cmpsb
inc
pop
mov
xor
and
jae
pop
push
dec
xchg
fbstp
subb
ljmp
jne
call
cmp
jecxz
or
flds
mov
xchg
dec
int
fcompl
inc
lret
adc
adc
div
lds
test
xor
bound
mov
mov
shll
mov
push
jns
add
mov
loope
adc
sub
mov
fwait
ss
imul
js
cmp
xchg
imul
mov
jae
mov
dec
lds
nop
cmp
mov
enter
pushf
iret
iret
inc
daa
cmpb
mov
enter
cli
cmp
loop
and
push
in
inc
sarl
call
push
sbb
mov
pop
cltd
inc
add
mov
arpl
cmp
xlat
imul
je
jge,pt
ret
scas
call
dec
pop
push
or
dec
mov
cmp
fwait
mov
pop
xor
mov
pushf
add
cwtl
lahf
inc
and
clc
inc
in
push
in
cmp
cmp
aaa
andl
and
sub
insb
mov
jl
leave
subl
xchg
ljmp
push
dec
push
add
ds
js
lret
inc
push
sbb
scas
and
adc
mov
sbb
mov
popa
push
mov
mov
cmp
shlb
push
aaa
mov
jmp
adc
nop
or
jnp
dec
jne
mov
mov
jle
xchg
mov
dec
xor
mov
cmc
test
jne
pop
dec
or
lret
xor
jbe
inc
imul
vunpckhps
out
repnz
in
enter
scas
mov
push
xchg
repnz
cli
clc
xorb
lret
out
rcl
or
ret
jp
and
repz
or
aas
lcall
test
adc
jg
add
rcr
ret
jo
stos
dec
outsl
mov
test
or
sbb
push
maskmovq
negl
stos
jb
ret
fwait
ret
rclb
test
xchg
pop
ror
call
je
imul
movsb
mov
gs
dec
add
ja
loop
outsb
repnz
or
cmp
js
cmpsb
mov
in
mov
hlt
and
mov
bound
mov
dec
imull
fdivrs
leave
mov
fs
fs
rcr
mov
mov
mov
jnp,pn
xchg
rol
mov
push
jge
push
jmp
xorl
xlat
xor
push
mov
sbb
jb
shll
jg
and
mov
imul
dec
imul
xlat
push
dec
sub
mov
xorb
lret
cwtl
jbe
jmp
sbb
das
push
cmp
loope
adc
push
out
mov
xchg
fistpl
or
xchg
test
xor
cmp
mov
and
pop
ja
sub
test
cmp
mov
jnp
jge
pop
pushf
movsl
inc
push
or
sbb
adc
xchg
mov
xor
or
inc
mov
fidivrs
push
out
jge
pop
hlt
push
dec
in
dec
gs
adc
jl
add
cmc
xchg
pop
dec
lock
arpl
cmp
rorl
pop
sbb
fcmovnu
jno
test
adc
dec
aad
ljmp
aaa
fisttpll
lock
pusha
pop
ljmp
cmp
xor
or
pushf
and
mov
jb
sarb
pop
mov
jle
cli
xor
dec
mov
subb
inc
repz
mov
fdiv
fisubs
adc
mov
sbb
pop
push
daa
cmp
cmp
mov
mov
jmp
jmp
fbstp
jo
imul
xchg
inc
shll
popf
adc
pusha
fidivs
cwtl
push
addr16
jns
daa
jae
mov
stc
mov
xchg
cli
fdivs
jl
out
mov
push
sbb
insb
xchg
mov
mov
and
inc
xor
add
pushf
lret
shrb
frstor
xchg
inc
xor
mov
das
fwait
mov
stos
mov
int3
sti
lods
jecxz
jmp
jno
pop
lahf
hlt
bound
pop
push
sub
sti
test
push
pop
sahf
jl
aaa
mov
mov
shll
test
outsb
xlat
sbb
mov
xchg
aaa
stc
rcrb
mov
jl
push
test
xchg
fidivrs
hlt
inc
test
clc
sub
dec
loopne
test
and
xchg
inc
movb
dec
push
push
in
push
mov
xchg
addr16
and
add
ret
jns
add
subb
push
xor
inc
pop
pop
fldenv
adc
mov
push
sbb
xchg
das
cmp
mov
test
fs
rcrb
hlt
hlt
adc
cmpl
enter
jmp
inc
ficoms
add
repz
or
xchg
hlt
xchg
lods
and
xchg
jnp
sbb
cmp
hlt
int3
jp
clc
jae
lods
cmp
jns
jl
stos
xor
mov
lret
sub
test
daa
sub
js
fldt
mov
jg
push
in
ds
call
jo
fwait
into
arpl
push
adc
dec
xor
fdivrp
enter
sub
shl
adc
xrelease
jp
xchg
lea
jne
push
ja
inc
outsb
insl
jbe
arpl
sbb
addr16
mov
addr16
ds
mov
cmp
jo
dec
and
push
aam
push
std
dec
rcl
and
dec
push
mov
xchg
lock
sub
xor
sub
inc
mov
repnz
neg
cmp
add
inc
fs
filds
scas
nop
jnp
out
and
or
xor
lods
mul
fwait
es
imul
xchg
into
fisttps
xchg
adc
and
fdiv
adc
dec
cmc
sbb
outsb
push
cmp
or
jp
xor
popa
out
insl
insb
loop
jge
call
push
or
es
cmp
inc
les
imul
cmpsl
cmp
fiadds
cmp
mov
leave
lods
xor
popf
cmpsb
xchg
xchg
mov
jle
adc
mov
jnp
push
xchg
adc
add
add
je
mov
or
lock
pop
mov
cltd
pop
jo
xchg
mov
pop
add
push
shl
add
mov
cmp
pushf
mov
sbb
inc
adc
push
mov
jl
icebp
and
lret
push
sub
xchg
sbb
xor
push
cmpsb
jg
movsl
imul
pop
outsl
movsl
out
sbb
inc
leave
aas
mov
popf
mov
leave
fnstenv
loope
adc
inc
add
lock
pop
into
jae
jp
hlt
stos
ret
pop
xor
setae
push
rorl
in
lods
loop
cs
loop
push
xor
mov
in
inc
xchg
insb
fidivl
scas
sub
fistl
nop
outsl
jne
mov
out
testl
lods
push
dec
dec
dec
mov
insb
sti
outsl
jmp
or
ficomps
loope
adc
fsubrs
or
cmp
pushf
shll
rolb
mov
sub
outsb
sbb
out
xchg
aam
jl
insb
pop
mov
lahf
cmp
xor
or
xchg
adc
push
cmp
sub
add
shll
sbb
aaa
les
pusha
imull
mov
aam
mov
adc
jmp
push
scas
adc
nop
mov
xchg
xchg
dec
mov
push
adc
outsb
gs
pusha
sahf
push
cmp
fucomi
fistpl
cwtl
and
jp
out
dec
cmpsb
and
xchg
add
gs
mov
imul
push
mov
enter
push
push
or
sbbl
mov
jecxz
fs
pop
xor
lahf
sbb
adc
outsb
mov
dec
add
fiaddl
adcl
imul
sub
jns
lods
lahf
enter
jl
jl
push
decl
adc
iret
movsb
mov
push
fs
dec
xor
dec
fs
and
xor
adc
aad
xor
mov
and
ds
push
fstpl
xor
dec
jne
pop
push
mov
push
or
mov
xor
sub
test
dec
rcll
mov
cmp
push
cmpb
in
mov
lcall
dec
arpl
popa
adc
test
popf
ja
dec
insl
mov
and
cs
and
std
pop
lds
mov
sbb
inc
jl
xor
push
sbb
pop
movsl
dec
pop
mov
push
out
xchg
sar
pop
xor
icebp
inc
popf
dec
cwtl
ds
mov
in
cmp
repnz
add
pop
mov
popa
shlb
lock
jmp
ret
xchg
inc
sbb
dec
xchg
rcrl
and
cmp
push
inc
js
mov
aad
cld
clc
imul
pushf
mov
mov
lods
pop
pop
mov
test
aaa
cmp
aaa
jnp
or
mov
std
ss
mov
add
insb
fstps
mov
stc
pop
jmp
push
js
jae
fiaddl
decb
pop
mov
ret
pop
sub
sub
leave
xchg
push
pop
sbb
lahf
mov
xor
icebp
cmp
lcall
lods
mov
les
jle
adc
inc
sub
jmp
push
into
mov
inc
dec
mov
aam
mov
into
inc
mov
inc
test
inc
xchg
in
xor
stc
lahf
inc
pop
std
loop
jnp
xchg
mov
test
test
in
cmpl
inc
or
push
or
mov
add
enter
or
or
xlat
and
pop
jp
dec
pop
lahf
sub
movsl
jno
sti
jb
jnp
ficoms
rclb
jp
je
cltd
or
rcll
movsb
cmpb
push
enter
dec
sbb
xchg
into
mov
mov
loopne
lock
jns
shrb
push
xorb
fcmovnu
pop
loopne
out
pop
fldcw
xchg
cmp
clc
jp
flds
shll
pop
in
xchg
pop
push
pop
adc
and
xor
mov
jg
mov
mov
add
lds
pop
xor
pusha
filds
adc
adc
sbb
cmp
xchg
insb
mov
loopne
fsub
dec
icebp
lock
xor
pop
inc
rcrl
jae
popf
cmpsl
and
lret
clc
rcrl
clc
inc
add
std
adc
adc
and
outsb
push
xchg
hlt
in
fucom
leave
pop
push
fmull
dec
mov
mov
mov
push
pushl
push
lock
lea
inc
adc
push
adc
cmp
cld
movsb
dec
setg
icebp
sub
mov
push
orb
sub
flds
out
mov
fs
test
stos
shlb
icebp
inc
sub
xlat
iret
jo
repnz
push
mov
xor
dec
adc
dec
repnz
pop
pushf
pop
repnz
mov
pop
jbe
cmc
fcoms
inc
lock
fsubrl
cmpl
push
aas
pushf
adcb
mov
pop
bound
xor
xor
in
in
cmp
jg
fisubl
inc
repz
clc
in
out
lods
adcl
fbld
push
pushf
mov
push
aad
nop
jbe
or
loope
sbb
mov
pop
pop
dec
out
or
sub
add
sarb
cmp
dec
mov
add
rdtsc
aad
daa
shrb
cmpsl
push
lea
clc
mov
pop
push
clc
pop
cmpsl
pusha
jle
xor
not
nop
mov
stos
daa
cmp
inc
test
lds
mov
jae
mov
or
push
es
fstpl
aas
cmpsb
push
mov
or
arpl
inc
mov
xor
test
ret
jae
popf
das
sti
fst
outsl
push
jns
jae
iret
push
add
cltd
adc
out
divb
notl
dec
out
xlat
push
cmpl
iret
loop
cli
icebp
dec
aad
jecxz
or
xchg
arpl
push
roll
push
pop
loopne
into
adc
sbb
inc
mov
aaa
jb
mov
adc
pop
in
adc
sub
cs
lods
cli
and
mov
shrb
push
xor
stos
jb
fisubrl
test
dec
mov
sti
mov
repz
in
cmpsl
pop
push
test
mov
pop
scas
adc
and
lea
in
mov
fldl
jp
and
outsb
push
stos
pop
pop
adc
cli
jge
pop
mov
cmc
gs
jecxz
mov
add
dec
add
les
xor
mov
mov
fiaddl
into
or
cmp
add
xchg
mov
orb
out
mov
fs
mov
mov
or
mov
mov
sti
jo
aaa
fs
iret
and
jns
xor
out
or
xchg
pop
idivb
jle
ficoms
mul
cmc
jmp
jle
dec
test
dec
cmpxchg
mov
call
xchg
arpl
xchg
cmp
sti
fcmovb
xlat
mov
pop
ja
repz
dec
jo
sarb
fisubs
outsl
adc
jno
imul
fidivrs
arpl
loop
lods
mov
in
adc
jg
fcomi
inc
lahf
lock
xor
ds
and
std
ret
cmp
mov
imul
or
iret
jmp
jns
push
jl
roll
mov
sti
testb
mov
imul
xchg
or
stos
in
inc
rolb
movsl
pop
sub
jle
push
ret
xchg
xor
imul
mov
pop
adc
push
rcr
pop
cmp
movsl
jle
bnd
pop
test
and
sbb
fldl
test
push
jle
mov
leave
inc
popf
push
imul
out
dec
sub
mov
test
rcrb
push
adc
cld
jle
lea
cmp
imul
fidivs
je
xlat
xchg
aas
jno
mov
movsl
sub
dec
imulb
psrlw
xchg
aam
aam
add
sbb
sbb
loope
mov
movsl
mov
mov
jge
mov
mov
addr16
loope
mov
rol
pop
sub
inc
mov
test
mov
inc
or
xchg
ds
out
add
cs
dec
fcmove
or
aad
ret
cmp
lds
pop
mov
outsl
and
stos
je
xchg
push
rcl
xor
pop
mov
mov
mov
stc
es
icebp
xor
lret
popa
ret
or
jecxz
adc
mov
push
push
add
mov
ret
call
xor
jle
pop
pushf
adc
sbb
test
adc
jbe
pop
int
sbb
xchg
xor
les
adcl
bound
jecxz
sahf
and
je
mov
pop
fstpt
cld
ljmp
repnz
and
cltd
call
mov
sub
cmp
mov
jecxz
push
cltd
sub
cltd
cmpsl
and
inc
push
cltd
stc
cmp
faddl
stc
test
sbb
xchg
enter
cwtl
push
scas
insb
fcoms
sbb
lret
mov
icebp
mov
outsb
dec
adc
push
xchg
jnp
jp
dec
pop
mov
push
push
inc
lods
flds
aad
cltd
orb
fmul
mov
or
adc
arpl
rclb
mov
test
ret
out
mov
cmp
pop
lret
outsl
pop
clc
dec
inc
and
xor
mov
lret
pop
and
mov
lea
outsb
push
mov
mov
xlat
pop
inc
push
movsb
cli
hlt
test
jne
mov
test
jl
aas
loop
cmpsl
mov
aam
add
addl
sbb
adc
adc
lods
fdivrs
mov
pop
ss
gs
call
sbb
sub
mov
mov
ja
mov
in
or
lahf
clc
pop
inc
out
sbb
lcall
jg
mov
call
xchg
aaa
cltd
jae
in
subb
aas
sub
mov
push
test
jb
mov
sub
lds
addr16
out
jmp
mov
les
les
sti
sbb
inc
add
lods
cmp
jnp
daa
test
pop
in
popf
daa
mov
sbb
xor
into
cmp
fiaddl
dec
jl
xchg
loope
xchg
leave
loope
mov
cmp
in
or
lahf
cmpsb
sbb
adc
out
add
push
add
mov
out
or
stos
mov
mov
cmp
ret
add
jmp
repz
inc
in
mov
cmpsl
iret
icebp
aam
popa
fidivs
push
lahf
sbb
pop
ljmp
adc
lock
bnd
outsb
jb
stos
stc
mov
dec
shll
sub
pushf
dec
fdivrl
add
jnp
repz
cld
sbb
jne
aas
push
lahf
pop
adc
mov
test
mov
pop
inc
loopne
scas
cmp
jbe
out
les
fistps
adc
adc
imul
inc
sahf
push
push
cwtl
mov
pusha
mov
cmpsl
push
lods
jle
xor
add
sub
mov
and
inc
cwtl
stc
leave
imul
or
jp
ret
cmpsl
andb
test
pop
jecxz
inc
mov
dec
test
xchg
inc
addr16
movsl
loope
scas
push
pop
aam
loop
mulb
xor
andl
icebp
call
push
mov
rcll
fnstcw
sti
pop
mov
lret
mov
fdivrs
lods
jmp
sbb
idiv
cmp
mov
jl
imul
mov
mov
movsb
pop
inc
movsb
mov
adc
jl
lds
ja
out
sbb
repz
pop
bound
in
cmp
xor
mov
mov
jnp
daa
jp
push
clc
push
rol
jle
mov
out
in
test
sahf
lods
dec
in
hlt
lock
jmp
stc
pop
dec
pop
jae
sub
inc
ret
test
or
xchg
and
in
aaa
in
ja
xor
iret
scas
popf
inc
ret
repz
jo
gs
mov
iretw
fistpl
ja
or
popf
xor
dec
icebp
xchg
xor
and
mov
daa
mov
lock
jp
int3
inc
sbb
sub
fsts
insb
dec
or
pop
mov
pop
stos
dec
push
fdivs
lods
xor
xlat
sahf
pushf
or
mov
push
shlb
pop
out
into
cmp
aam
popf
out
push
xchg
test
sub
push
les
jg
shl
pop
mov
test
pop
mov
xor
lods
sahf
add
xchg
pextrw
lret
xor
jns
dec
rolb
out
xchg
pop
or
mov
or
sub
das
in
xchg
arpl
in
mov
mov
pop
out
mov
adc
adc
stos
jecxz
enter
push
dec
lock
xchg
push
mov
xor
xor
cmp
lahf
inc
xchg
mov
movsb
jl
cmp
jg
mov
bnd
sbb
inc
cltd
mov
pop
adc
xchg
fstpl
sbb
push
lcall
jns
mov
xchg
add
movsb
jno
cmp
xor
push
xor
sbb
sbb
movsb
pop
pop
call
lock
out
pop
push
sub
fsts
sarb
xchg
cli
push
mov
mov
jb
jp
test
loope
dec
adc
test
fwait
inc
outsb
cmp
and
shrb
mov
add
mov
adc
mov
es
daa
xchg
das
pop
rol
jns
sbb
adc
ret
jae
test
dec
or
add
fistps
pop
add
inc
sbb
test
adc
push
xor
jmp
adc
jg
inc
sbb
push
push
jmp
and
lret
mov
adc
push
jmp
stos
dec
in
push
pop
les
sbb
xor
mov
cmp
pop
fs
insb
jge
out
stc
xchg
mov
mov
mov
repnz
fiaddl
inc
mov
add
and
inc
hlt
mov
stos
lea
jecxz
and
lret
push
jl
adc
mov
xor
mulps
or
inc
mov
out
ret
push
pusha
out
jne
ret
inc
cmp
in
dec
xchg
sbb
test
in
mov
movsb
repz
or
adc
hlt
movsb
fidivrs
gs
pop
pop
jmp
inc
xchg
and
push
mov
lret
inc
cwtl
push
sbb
xchg
dec
push
add
push
sub
mov
add
shlb
inc
push
jne
das
rcll
jg
jp
fsubrl
sahf
xor
icebp
inc
mov
mov
mov
iret
fdivrp
les
stos
loopne
or
jp
test
pop
cmp
bound
imul
sbb
test
mov
stc
mov
rcll
fisttps
pop
dec
test
aad
mov
sahf
ds
loope
and
pop
inc
aas
adc
daa
cmp
push
mov
sbb
out
daa
aad
not
sbbl
push
inc
mov
adcb
xchg
pop
rcll
pushf
loopne
out
mov
mov
dec
cmpb
ret
xlat
sahf
and
cmpsl
cmc
or
cmp
sub
mov
aaa
xor
xchg
out
movsb
xor
dec
xchg
dec
test
call
xchg
sub
es
sti
gs
loopne
dec
add
mov
push
xchg
mov
push
int3
jb
lahf
inc
jbe
mov
fldcw
in
push
mov
loope
insb
jmp
fxch
push
sbb
fnstcw
mov
test
or
jl
scas
mov
sbb
mov
iret
inc
dec
test
fisttpll
testb
lea
psrld
out
mull
gs
xchg
fcomps
adc
lret
pop
popf
pusha
lea
pushf
mov
and
movsb
mov
jnp
ljmp
in
inc
hlt
fistps
lcall
xchg
push
shll
sti
mov
rolb
test
aaa
out
add
xchg
adc
pop
scas
call
or
jne
dec
test
jg
adc
pop
call
push
mov
jmp
testl
or
arpl
jo
add
into
ljmp
test
xchg
dec
push
jp
outsl
push
add
out
dec
xor
sub
and
jecxz
aas
hlt
pop
outsb
lcall
cmp
arpl
pop
inc
cli
jns
add
cmpsb
clc
test
mov
push
insl
in
push
int
xchg
sub
ljmp
lods
cltd
mov
popf
cmp
jmp
iret
pop
sbb
push
into
xchg
gs
xchg
pop
mov
push
fsts
mov
xchg
test
xchg
call
out
outsl
jge
inc
xor
jp
shlb
lock
mov
adcl
sbb
pusha
pop
imul
mov
mov
jmp
add
xlat
sahf
les
add
imul
add
cli
mov
inc
or
xorl
mov
adc
xchg
xchg
cmp
mov
xor
outsl
xchg
inc
loopne
cld
inc
mov
sbb
mov
lahf
ret
js
inc
mov
das
lds
call
xor
mov
sub
mov
dec
mov
add
fidivrl
aad
sub
jge
mov
and
data16
mov
adc
adc
dec
jb
pop
xor
mov
outsl
dec
mov
pusha
pop
gs
scas
ljmp
sub
mov
test
push
call
add
ficomps
jmp
scas
in
mov
adc
leave
cld
mov
fdivrl
inc
inc
adc
rol
imul
add
dec
xchg
sbb
in
xor
fmull
ds
xor
stc
xor
sub
shlb
xchg
push
pop
cwtl
jp
stos
jnp
sbb
clc
lahf
jg
movsb
ss
rcll
lods
lea
js,pt
mov
pop
cmp
js
fdivrs
outsl
shll
test
sub
jp
sbbb
sbb
sbb
pop
push
out
out
adc
mov
ret
sub
stos
xor
lcall
stc
mov
ss
in
lret
adcl
sbb
movsb
add
mov
mov
xor
jl
imul
lret
fs
fnstcw
xor
decb
lcall
mov
xrelease
and
shlb
xchg
loope
pop
sub
daa
scas
fisubrl
jno
test
push
bnd
cmpsl
fimull
cmp
emms
pop
mov
dec
cmp
insl
pop
rep
inc
nop
mov
add
inc
js
roll
cmp
push
add
mov
ss
cltd
push
jmp
push
mov
in
jge
add
sub
push
sbb
js
sub
xchg
push
push
mov
out
lods
repz
mov
xor
in
ljmp
and
test
cwtl
lds
lea
orb
cmc
sub
out
sub
movsl
jae
sub
insl
loopne
push
pop
loope
xlat
fimuls
pop
addr16
xchg
sahf
sbb
ljmp
add
sar
jmp
aaa
inc
sub
sub
div
fiaddl
cli
xchg
bound
js
sub
jecxz
in
or
xchg
mov
adc
xchg
lret
jp
enter
adc
dec
mov
das
inc
enter
and
xor
int3
cmp
out
frstor
and
xlat
stc
cmp
arpl
cmp
inc
sti
push
lahf
dec
jmp
sub
fsubrl
mov
es
incb
out
repz
pusha
call
lods
scas
shrl
pop
or
push
in
cli
loopne
mov
incl
test
or
xchg
xlat
push
fdivrp
fs
xlat
rcrb
sbb
mul
add
jg
je
adc
cld
jb
mov
mov
shrl
test
ss
push
test
clc
mov
int
test
movsl
in
ss
testb
add
dec
xor
xchg
jmpw
push
inc
add
shl
loop
fistps
jl
pop
adcl
adc
inc
out
jle
cmc
cltd
xchg
dec
sbb
fsubs
test
xlat
inc
bound
mov
jmp
adc
movsb
jp
in
dec
dec
sbb
das
loopne
lds
aas
lcall
das
pop
pop
jae
iret
push
aad
dec
lahf
test
enter
loope
dec
jle
into
jg
jge
and
mov
add
dec
and
dec
jno
in
mov
cmc
clc
sbb
sub
adc
xor
ss
dec
mov
cmc
push
xchg
mov
jno
adc
adc
mov
lea
cwtl
insl
iret
xor
in
scas
jl
pushl
std
std
xorl
mov
or
jp
jmp
addr16
dec
orl
mov
pop
loop
stc
cmpsb
dec
hlt
jne
or
stos
mov
mov
xchg
and
jge
pop
xchg
cmp
repz
ret
out
rcl
aad
adc
aaa
pop
jp
push
mov
and
sub
jg
or
test
nop
mov
xchg
and
pop
sbb
sbb
and
adc
cld
or
xchg
mov
ret
ljmp
mov
mov
out
test
mov
incl
fisttps
jo
cwtl
mov
xchg
cwtl
sub
xchg
jmp
in
sahf
aad
enter
push
shl
int3
mov
ljmp
shlb
xchg
mov
mov
sub
iret
cmp
and
jnp
or
rorb
push
int3
push
mov
inc
sbb
lcall
notb
jge
push
cmp
jle
xchg
inc
xchg
xor
or
dec
popf
fstpt
enter
add
mov
lds
push
inc
lods
test
lcall
and
push
push
ret
push
cmp
jl
push
je
cmp
adc
cli
mov
flds
out
inc
shlb
mov
fpatan
int
dec
adcb
jl
lret
gs
test
imul
loope
and
sbb
int3
aas
cli
data16
ret
out
xchg
mov
clc
jbe
fiadds
push
xor
lods
test
addr16
mov
inc
data16
mov
test
inc
mov
adc
push
in
sbb
lcall
xor
or
in
xchg
jb
mov
fdivp
cwtl
sbb
adc
jno
adc
jno
cmp
mov
mov
subb
testl
das
or
repnz
dec
in
lods
in
cmc
arpl
int3
push
mov
shll
loopne
dec
bound
sub
movsb
mov
loopne
sbb
imul
mov
mov
jne
sbb
jle
inc
and
sub
cmp
xchg
xchg
push
adc
and
addr16
arpl
push
ficoml
dec
adc
in
in
dec
fs
iret
sub
mov
enter
sbb
das
lea
repz
xor
cli
enter
mov
jns
add
cltd
xchg
and
dec
push
ret
bound
jae
fidivs
adc
in
push
and
flds
fsubrs
adc
and
or
adc
jae
lock
sub
dec
xchg
mov
test
sbbb
cli
pop
je
notb
sub
pop
shrl
cmc
sbb
mov
imul
in
jne
adc
ret
das
lock
push
sub
out
mov
push
shlb
push
mulb
mov
xor
fldlg2
daa
inc
loope
les
mulb
negl
loopne
and
insl
clc
xchg
aad
xorl
repnz
mov
vprotw
in
jb
negb
mov
cli
push
and
and
mov
les
lahf
outsl
inc
repz
dec
mov
jmp
xchg
pop
sbb
std
mov
pop
loope
ss
in
in
and
shr
dec
sar
imul
inc
stc
shlb
lods
subb
pop
sbb
jg
push
add
aad
cmp
lret
push
lea
icebp
inc
adc
andl
out
rolb
fcoms
cmp
shlb
inc
lret
lds
cmpsl
imul
cmpxchg
imul
adc
lret
push
jp
xor
jne
roll
data16
adc
mov
addr16
xchg
sub
lods
sbb
mov
push
mov
inc
push
sar
mov
repz
add
and
adc
mov
pop
mov
pop
aam
xchg
jae
mov
enter
mov
repz
push
add
repz
dec
pop
adc
testb
sbb
sub
shl
or
lock
fs
popf
jbe
lret
lahf
cmp
fcomi
push
mov
outsb
inc
xor
dec
mov
add
adc
adc
xor
lcall
xor
pushw
inc
scas
in
jb
jp
aaa
cld
xchg
add
pop
xor
repz
push
mov
adc
sbb
mov
inc
mov
out
sarl
fisttpll
or
pop
inc
mov
mov
jge
clc
test
addl
push
sbb
enter
sbb
lods
out
dec
loop
clc
aad
mov
xchg
stos
test
iret
push
pusha
mov
mov
das
lock
les
in
aad
hlt
and
cmp
dec
ja
clc
cmp
arpl
pop
nop
insb
push
push
arpl
nop
jb
sub
leave
aaa
xlat
fs
sti
fcoml
stos
or
loope
test
mov
sbb
testl
mov
fnstcw
push
or
jae
jp
push
cli
adc
dec
into
and
lcall
lea
cmp
shrb
pop
mov
std
xor
add
push
adc
cmpsb
movsl
jle
add
bound
mov
lock
inc
pop
int3
xor
in
push
jmp
xorb
push
shlb
push
test
cld
movsl
cmp
xchg
aas
lock
xchg
insb
es
mov
out
xor
xchg
add
pop
shrb
mov
dec
jmp
insl
clc
in
lods
loope
jae
sub
cltd
lock
and
adc
sbb
push
jns
mov
enter
lcall
leave
stos
xchg
test
mov
lcall
shrl
fsubs
cltd
daa
and
inc
aam
add
jle
insl
xchg
jns
sub
sub
mov
cmp
jmp
sti
bound
lods
push
xor
test
pop
sbb
and
popf
imul
ret
and
jmp
pop
aaa
add
add
push
xor
jle
sbb
cltd
add
pop
mov
addr16
std
and
or
pop
ljmp
xorb
cltd
cli
jno
add
aas
movsb
ss
sbb
loopne
outsl
add
insb
jb
mov
test
out
jo
jge
or
dec
sub
addb
in
or
data16
in
stos
fucomi
push
xor
les
sar
mov
jnp
xchg
add
push
test
test
movsb
mov
xlat
dec
aad
lea
cmp
into
add
or
or
nop
and
inc
dec
lock
sti
dec
mov
pop
sahf
jae
in
fistl
lock
push
fildll
cmp
pop
or
xchg
repnz
pop
mov
dec
jnp
cli
into
sbb
or
incl
pushf
shl
mov
adc
and
orl
loop
sub
fcoms
and
fimuls
dec
xchg
and
push
mov
sbb
lret
enter
mulb
mov
adc
jne
push
enter
scas
stc
jmp
sub
ja
into
pop
loope
in
fbstp
scas
push
jnp
inc
jae
xor
push
dec
jo
lds
sbb
adc
pop
lret
lahf
jmp
cmc
pop
push
inc
in
xor
xchg
jle
add
testb
enter
adc
add
jnp
dec
pop
pop
mov
jnp
adc
xor
and
and
lcall
jecxz
mov
push
movsl
mov
ljmp
aas
lock
movsl
add
aam
jns
sbb
inc
lock
aas
adc
stos
aam
pop
imul
into
pop
pop
dec
popf
jae
pop
lods
xor
mov
jo
loope
jmp
dec
inc
in
and
xlat
jo
adc
mov
das
ja
mov
mov
jns
dec
ja
outsb
or
mov
popa
adc
add
jbe
xchg
movsb
mov
mov
incb
inc
mov
jge
repz
cmc
aaa
jmp
out
cmp
mov
jnp
inc
in
adc
jnp
pop
pop
jecxz
leave
pushf
fistpll
arpl
xchg
in
pop
and
or
test
add
inc
mov
sarb
and
mov
cmp
fnstsw
mov
je
pop
xor
repnz
les
add
cmp
jge
dec
test
lods
mov
inc
in
fistps
subb
aad
xchg
xchg
dec
insb
popa
into
jg
movsb
pop
sbb
lret
xor
addps
movsl
cmp
jmp
fwait
shll
mov
out
inc
cmc
jbe
insb
pushf
or
adc
pushw
adc
test
and
pop
insl
push
aam
mov
aad
push
sbb
ret
push
push
repnz
xchg
insb
push
cmp
adc
sbb
shrb
or
ficompl
fistl
push
inc
mov
outsb
lahf
in
out
cmc
sbb
mov
ret
es
push
jmp
test
test
inc
neg
pop
jmp
sahf
leave
ss
out
aaa
hlt
sub
jb
cmp
jnp
rclb
xor
bswap
push
lock
fdivs
mov
jecxz
or
je
mov
fmull
mov
pop
ja
push
into
jmp
mov
jne
adc
pushf
xor
push
das
sub
jno
xchg
lcall
and
orl
rol
inc
inc
sbb
shll
mov
sub
repz
cmp
imul
icebp
dec
pop
pop
inc
out
ja
jl
and
cmp
imul
fbstp
xor
mov
sub
lods
int3
test
sbb
hlt
mov
push
push
inc
xor
fsubrs
test
or
inc
imul
fucomi
mov
fdiv
movsl
xchg
add
cmp
jnp
push
stos
in
or
outsl
shl
xchg
shll
cmpsb
imul
das
ss
add
ret
out
ret
push
push
xor
push
xchg
inc
push
mov
mov
pop
sbb
add
popf
cli
dec
and
repz
int
testl
in
sbb
xlat
mov
and
ss
out
xor
inc
je
mov
or
dec
imul
mov
sbb
sub
test
arpl
lods
data16
mov
or
push
lock
ds
ret
fwait
pushf
xchg
and
insl
jbe
lret
add
push
mov
fstl
arpl
jmp
fcomi
mov
lock
fisttpll
xchg
ret
in
inc
add
sbb
pop
cwtl
sbb
cs
and
and
bound
out
pushf
in
fisubrs
or
ds
mov
mov
je
ljmp
xchg
sti
sub
pop
push
pop
sub
dec
lock
push
adc
mov
movsb
rcrb
ret
imul
mov
adc
shrb
add
mov
push
and
or
lret
inc
push
cmpsl
or
insl
icebp
inc
push
inc
ror
repnz
sbb
or
lock
inc
sub
inc
test
bndstx
das
bound
mov
test
daa
ja
jge
push
cltd
xor
pop
and
add
pushf
inc
or
out
jmp
dec
dec
xor
fdivs
aaa
stos
pushf
sbb
xchg
jg
imull
mov
loop
sub
data16
or
push
outsl
xor
out
cmp
loopne
adc
push
jbe
pop
aam
jnp
xchg
mov
add
dec
inc
mov
or
cmpsb
in
movsl
cmp
add
gs
mov
movsb
jge
jne
jb
cmovge
popf
lock
addr16
mov
cmp
std
mov
xchg
adc
imul
out
ret
es
es
lret
mov
cs
shrl
mov
or
test
dec
add
push
xlat
xchg
mov
adc
mov
data16
or
daa
cmp
sbb
or
repz
hlt
das
aaa
adc
dec
push
mov
xchg
int3
cmc
xor
or
sub
lea
sub
imul
les
mov
mov
mov
sti
fstpt
test
insl
add
cmp
aas
mov
aam
jns
loope
sbb
sbb
mov
gs
and
mov
cmc
int
daa
push
inc
sub
mov
push
incb
divb
fnstenv
fistpll
lret
dec
fidivrs
das
cltd
fisttpl
sbb
xchg
in
aad
icebp
jecxz
fadd
pop
sbb
mov
movsl
loope
in
and
aam
lret
cmpsb
xlat
dec
cmp
xchg
mov
cmp
in
and
fists
lcall
pop
adc
inc
dec
mov
mov
lods
arpl
stc
flds
ja
nop
push
push
pop
mov
dec
push
out
push
pop
loopne
mov
arpl
sbb
call
mov
stos
fdivs
cmp
pushf
xchg
inc
shlb
test
xor
or
std
repz
push
sub
ss
push
add
mov
out
mov
xor
pop
jbe
inc
xchg
xor
sub
shrd
cs
push
or
imul
mov
push
mov
call
hlt
lds
and
enter
push
icebp
xchg
add
rclb
adc
or
xor
popf
divl
jbe
sbb
out
pop
imul
rclb
fnsave
pop
aaa
jno
push
jmp
js
mov
ljmp
sbbb
add
loopne
or
sahf
fs
out
push
xor
jae
fidivl
jbe
cld
call
daa
add
or
cmp
out
outsl
mov
inc
or
lods
mov
lret
and
mov
jne
in
mov
push
xchg
orl
and
push
pop
inc
jmp
stos
or
jg
or
test
sub
jmp
inc
jp
and
push
shl
mov
mov
inc
fdivs
arpl
xor
in
rcrb
push
push
xor
and
aas
scas
and
test
dec
mov
jmp
xchg
hlt
insb
adc
out
sbb
pusha
push
jle
dec
lret
loope
repnz
mov
cld
in
pushf
out
lock
adc
mov
movsb
xor
ret
xchg
mov
out
lcall
adc
aam
jb
inc
jl
xor
inc
and
dec
imul
shrb
mov
cmp
cwtl
or
jns
cmc
sub
adc
inc
cmpsb
or
jg
jbe
sbb
repz
sub
out
inc
pop
cld
gs
add
xchg
int3
lret
adc
inc
jns
or
push
jecxz
fwait
pop
push
ja
mov
lret
mov
cmp
movsl
loopne,pn
pusha
mov
push
out
xor
xor
out
push
inc
mov
pop
fnsave
rorb
mov
shlb
xchg
push
cwtl
ljmp
jge
fsubs
mov
fildll
cmp
mov
adc
shll
repnz
out
mov
mov
mov
push
cmp
mov
jmp
jb
push
test
xchg
lahf
int
in
jl
enter
xor
cmc
xor
mov
negb
sub
push
into
xchg
std
pop
out
outsl
call
xchg
aas
sbb
push
mov
pop
int3
cmc
dec
repz
pop
push
xchg
lods
xchg
ss
adc
mov
std
leave
out
jne
push
sbb
shll
scas
mov
jnp
pushf
or
lea
loope
mov
or
xor
and
sub
fdiv
imul
pop
jle
in
add
out
mov
ror
lret
xchg
shlb
pop
jno
jbe
icebp
dec
push
mov
out
dec
lods
stc
or
pop
fwait
in
inc
in
sbb
dec
jl
jnp
jne
adc
cmp
push
loopne,pt
jg
fistl
pop
xchg
inc
ja
xor
fcomip
mov
fcoml
insl
mov
lods
xchg
dec
addb
cmp
aad
iret
adc
mov
stos
push
outsl
pop
ljmp
inc
popa
mov
gs
or
vmovlps
ror
xor
adc
xchg
loope
inc
cmp
cmp
fwait
in
imul
xchg
cs
pop
or
pop
stc
call
sub
sbb
xchg
pop
ds
mov
push
aam
loopne
fdivrl
pushf
cmc
lahf
add
andb
lret
mov
mov
xchg
push
cmp
out
cmp
out
sbb
repz
and
arpl
xlat
jb
stos
aad
sarl
in
in
dec
mov
rclb
cmp
outsl
push
inc
fisttpl
sub
outsb
jecxz
enter
xchg
cmp
mov
inc
mov
push
mov
popf
inc
xor
mov
mov
rclb
jle
mov
lods
lea
mov
fs
pop
orl
adcb
mov
stos
cmp
pushf
xchg
popf
cmp
inc
rclb
mov
mov
popa
fistpl
xchg
sub
and
or
les
add
xor
mov
das
enter
xchg
insl
mov
jo
add
jne
daa
mul
loope
stos
sbb
add
inc
ja
jp
push
sub
inc
push
pusha
adc
es
call
shlb
enter
mov
stc
or
mov
call
inc
mov
das
popf
aam
popf
sub
inc
imul
lock
jmp
mov
or
imulb
dec
sub
mov
sbbb
fsubr
mov
repz
or
inc
stos
int3
shll
xchg
xchg
out
or
and
aam
cltd
jne
jp
xor
out
and
mulb
lcall
add
cmp
cmp
sub
test
nop
scas
cmp
aas
dec
cli
mov
outsb
ljmp
fwait
rcll
movsl
iret
xchg
lcall
shl
and
out
das
add
out
inc
inc
stos
rolb
mov
daa
fimull
orl
into
stc
mov
adc
lahf
cs
icebp
out
cmp
mov
idivb
sub
ja
pop
sbbb
jb
out
in
jb
adc
mov
addr16
pop
fs
or
mov
mov
sub
mov
inc
pop
aam
xlat
mov
js
pop
xchg
mov
adc
das
into
push
pusha
cs
pusha
inc
mov
sbb
int
repnz
loopne
dec
xlat
lds
fcmovnu
xchg
popa
cmpsl
pusha
or
stos
inc
pop
arpl
mov
repnz
fisubl
jnp
push
filds
ja
sbb
and
or
push
adc
push
pop
inc
mov
add
adc
push
fsub
enter
and
dec
mov
xchg
add
cmc
dec
out
repnz
fcoml
cli
mov
lock
mov
jo
sub
mov
or
jp
jb
push
push
sbb
inc
and
mov
jmp
popf
cmp
fs
mov
jl
cld
mov
icebp
push
and
and
addr16
fbstp
jmp
scas
dec
adc
insb
mov
xor
xlat
xchg
into
pop
test
sub
lahf
movsb
andl
lock
jmp
cmp
out
aad
push
outsb
aas
push
pusha
sti
and
add
cmp
idivl
mov
add
stos
daa
bound
jmp
imul
mov
cmp
in
pop
jns
call
sub
push
pop
shlb
call
mov
push
push
imul
arpl
xor
jbe
lret
dec
dec
xor
jne
into
inc
ja
bound
lret
pop
pop
xchg
fcomps
insb
xor
sti
outsb
jno
movsb
push
cli
icebp
and
or
shl
mov
pushf
adc
cs
shl
int
mov
int
mov
add
jp
or
insb
test
lea
ror
mov
sbb
leave
mov
cld
ds
aas
aam
hlt
pop
jno
test
push
mov
ret
push
jno
test
push
adc
push
imul
cld
inc
lods
xor
ds
iret
mov
sbb
imul
icebp
mov
lds
outsb
imul
out
push
pop
jl
sahf
mul
lds
pop
ss
xchg
xor
mov
and
popa
pop
ret
in
in
stos
cli
stos
cltd
cmp
cmp
rol
std
mov
push
jo
mov
mov
es
dec
lahf
jl
dec
js
inc
es
insb
dec
mov
out
or
push
xchg
pop
pusha
pop
pop
mov
and
cmp
mov
cmpsb
sbb
add
mov
push
fsubl
movsl
add
cltd
dec
inc
std
add
test
adc
sbb
inc
idivb
cmp
inc
xor
fcmovb
push
push
outsl
mov
les
jo
and
fs
addr16
idivb
clc
cmp
cmp
pop
or
sbb
fsubp
lods
fists
jb
int3
cmp
mov
dec
call
adc
mov
push
jmp
aaa
push
xchg
mov
push
movsl
xor
repz
js
add
push
push
out
test
pop
call
mov
jge
popa
std
inc
mov
dec
frstor
mov
jo
or
sbb
dec
cmc
mov
jp
adc
outsb
ja
add
jns
jae
repz
cmp
ficompl
mov
xor
xchg
lcall
pop
lcall
pop
mov
push
mov
cwtl
add
xlat
iretw
dec
fimull
dec
cmp
sbbb
outsb
sbb
cld
mov
fwait
mov
lret
mov
insl
mov
fs
aaa
xchg
test
xor
addr16
xchg
adcb
imul
mov
sbb
dec
push
enter
cmp
in
fiaddl
dec
lds
sub
int3
mov
daa
mov
mov
inc
addr16
jns
pop
xchg
xor
lcall
in
movsl
cmp
jge
aam
ja
push
fldt
sub
stos
flds
pop
jae
pop
xchg
cmp
xchg
xchg
or
sbb
push
dec
xchg
repnz
adc
jne
lret
dec
mov
xor
xor
hlt
mov
pop
mov
test
es
inc
insl
sub
adc
mov
xchg
sub
lock
mov
iret
add
push
sub
push
xor
jnp
movsl
test
jp
sub
movsb
or
rclb
and
dec
inc
cmp
pop
inc
or
icebp
frstor
pop
xchg
outsl
in
xchg
jno
xchg
jp
rcrb
sub
daa
fnsave
xacquire
ss
sub
loop
pop
pusha
push
popa
cs
add
pop
out
push
imul
sbb
fdivl
cmp
and
mov
cmpsl
inc
inc
jp
mov
sub
mov
add
insb
inc
fwait
push
cmp
loop
mov
enter
jne
and
sub
push
cltd
adc
inc
xchg
pop
sbb
into
bound
inc
pop
cmp
out
icebp
sahf
mov
cmp
pusha
adc
shrb
mov
dec
imul
and
xchg
or
add
push
push
jo
xchg
push
pcmpeqd
test
lcall
cld
mov
out
cmpsb
pop
and
aaa
addb
xchg
xor
subl
jle
jg
push
rclb
jge
ljmp
fldcw
inc
roll
add
enter
bound
imul
sbb
adc
aad
lds
push
dec
lret
inc
push
sub
scas
xchg
repnz
rcrl
sub
pushf
lcall
dec
in
inc
icebp
dec
pop
jge
add
faddl
sub
inc
rcrl
push
mov
hlt
clc
cwtl
sbb
xchg
inc
jns
in
add
popa
pop
cmc
daa
ud1
cmp
mov
fnstcw
int3
outsb
or
mov
lods
pop
and
pop
mov
sub
mov
rcll
and
cld
sbb
jns
pop
xchg
adc
rolb
int
mov
dec
mov
cmp
mov
jb
xchg
sbb
cli
repnz
sbb
lods
pop
pop
scas
sbb
call
mov
add
lock
pop
cmp
nop
lods
into
add
xchg
cltd
pop
mov
xorl
dec
in
imul
mov
jg
les
dec
adc
inc
imul
dec
cmp
xor
xor
sahf
cmpsl
jae
sarl
pop
outsb
ja
mov
mov
cld
nop
fnstsw
in
and
push
mov
mov
dec
stc
push
call
or
ds
push
mov
xor
cli
inc
push
jp
pop
xorb
add
inc
daa
fnstsw
xchg
loope
cld
or
in
test
sbb
push
movsl
cltd
jmp
cmp
xor
out
pusha
sbbl
mov
inc
mov
mov
je
pop
lds
dec
mov
adc
xor
stc
push
mov
xlat
xor
push
cli
and
jne
cli
push
daa
daa
sub
xchg
jge
cwtl
inc
mov
aaa
xchg
les
enter
fs
scas
push
repz
idivl
das
xchg
push
add
shlb
lds
lods
mov
xchg
lret
pop
cmp
gs
clc
fimuls
pop
frstor
or
ljmp
or
test
pop
movsb
pushl
mov
cwtl
fs
imul
lret
mov
adc
mov
inc
mov
fucomi
jnp
push
jecxz
je
popa
pushl
dec
cmpb
pop
inc
pop
and
xor
fs
lea
fstpt
dec
dec
lea
add
outsb
adcb
ljmp
fmul
adc
mov
xchg
pop
aaa
mov
out
mov
addb
mov
mov
pop
dec
ret
cmpsb
and
out
incl
fcomps
test
test
fidivrs
imul
and
pop
mov
push
push
gs
mov
daa
ss
lahf
dec
inc
dec
lods
jb
add
sbbl
aam
movsl
sbb
pop
sbb
out
or
dec
mov
ss
out
inc
mov
lods
pop
inc
dec
insb
fdivs
mov
scas
es
or
inc
push
xor
and
stos
out
rcrb
pop
and
lcall
ret
ret
jp
mov
imul
sahf
test
popa
xchg
inc
insl
orl
rclb
vmread
fnstenv
sbb
shrl
push
pop
lret
leave
es
jbe
out
shll
jbe
push
lahf
push
in
push
sti
mov
ret
inc
loopne
pop
out
push
icebp
cwtl
movsb
cmpsb
jle
stc
jbe
xor
mov
fsubs
jb
mov
addb
bound
mov
add
sarb
xor
fiaddl
js
xor
addr16
fiadds
mov
rcrb
jno
call
xor
jge
les
sub
pop
movsl
or
cld
cmp
lods
lds
fmuls
ja
sbb
mov
rcrb
xchg
std
pop
ss
mov
hlt
out
std
aam
das
call
jmp
dec
cmp
out
jmp
repz
in
push
pop
xor
sub
test
adc
decl
xchg
and
push
leave
lcall
imul
and
or
sub
out
test
lahf
xor
daa
push
push
mov
jb
pop
aad
pop
cltd
sub
movsl
sub
js
fcoms
ds
loop
push
pop
adc
pop
stc
lret
xlat
mov
ret
adc
call
adc
cmpsb
aam
jg
les
loope
loopne
jmp
stos
hlt
lods
insl
pop
push
loope
loope
aam
adc
clc
add
dec
cmp
pop
or
adc
in
inc
mov
sbb
jno
xchg
pop
jecxz
fcomps
mov
sbb
xchg
stos
sub
mov
out
mov
sub
in
mov
mov
xchg
pop
mov
mov
cmp
pop
orl
sarl
jne
ja
mov
cwtl
inc
sub
test
and
mov
imul
xor
subb
sub
int3
xchg
in
ret
popf
mov
dec
pop
xor
dec
pushf
test
aas
loopne
xlat
jns
add
ret
inc
and
adc
mov
sub
push
cli
pop
sbb
dec
adc
or
movsb
jg
mov
add
call
fistpl
pop
ljmp
adc
or
mov
mov
pop
frstor
mov
mov
pop
pushf
xchg
dec
iret
lods
xchg
mov
xchg
pop
push
jge
addb
cwtl
xchg
ficomps
xchg
cli
clc
pop
popf
jnp
outsb
cmp
pop
stos
jle
fcomps
push
unpckhps
or
cmpsl
add
data16
hlt
jo
loope
xchg
xlat
aad
dec
shlb
stos
sbb
movsb
adc
in
dec
imul
ss
daa
mov
inc
insl
enter
push
mov
out
pushf
repnz
lahf
pop
pop
adc
mov
test
dec
mov
lret
repz
cmp
fst
sbb
and
outsb
xor
jl
jne
add
jae
and
dec
pusha
jmp
lcall
mov
xlat
movsb
pop
inc
pop
filds
pop
jmp
sahf
cmc
dec
adc
adc
subb
push
pop
inc
cli
xor
sub
fstps
push
cld
in
add
fdivl
mov
or
imul
pushf
in
outsb
mov
push
addr16
jg
and
mov
sub
mov
push
imul
push
frstor
imul
push
inc
mov
inc
call
sbb
jo
or
push
lods
lcall
jle
mov
shr
push
ss
and
out
cmp
jp
psrlq
data16
cmp
lcall
jb,pt
or
xlat
clc
int
decb
pop
rclb
pop
leave
ret
and
std
xor
iret
faddp
bound
mov
loop
add
dec
dec
dec
dec
or
push
int
iret
mov
aam
je
push
xchg
fwait
in
mov
call
xchg
or
clc
pop
pushf
mov
xor
cmp
int3
in
cli
aam
bound
mov
push
mov
sub
and
add
cmp
and
push
push
mov
pop
mov
push
je
or
jns
cmp
cli
dec
jp
add
jg
push
and
arpl
sub
jne
adc
cmp
cmp
mov
ret
nop
lcall
jge
stc
push
and
push
xchg
pop
xchg
data16
adc
or
mov
data16
cmp
fistpll
push
dec
ss
mov
loopne
fistl
jno
dec
dec
sarl
or
stos
test
and
sub
sbb
adc
sub
cmp
dec
sub
mov
mov
cmp
rorl
pop
andb
or
fdivl
test
sahf
andl
push
dec
cli
adc
add
clc
ret
adc
outsl
ljmp
arpl
imul
sbb
out
sbb
std
jecxz
rcl
mov
lcall
test
jecxz
inc
jmp
fs
out
lcall
gs
pushf
pusha
dec
imul
das
fcmovnbe
dec
cmc
jl
repz
add
mov
pop
push
sbb
and
clc
cmc
test
fidivs
cmp
stc
loop
movsb
pop
loop
jmp
jns
sub
in
cmpsb
lods
lea
or
xchg
xor
pusha
movsl
xor
in
scas
test
cmp
or
xor
ret
pop
xchg
ret
adc
int3
cmpsb
cmp
xchg
push
xchg
stc
les
es
test
cmp
bswap
sbb
arpl
add
xchg
fiadds
neg
or
add
mov
jae
dec
mov
cmp
test
andb
push
mov
jp
pusha
dec
jl
popa
and
jp
push
jmp
and
pop
pop
adc
arpl
dec
out
sahf
sub
xor
insl
insb
in
sub
cmp
xchg
xor
jno
fwait
shl
or
test
inc
jns
xchg
aaa
sub
jle
and
mov
in
aas
inc
inc
pop
arpl
mov
dec
inc
insl
mov
enter
inc
or
mov
adc
lahf
push
dec
into
jne
out
inc
mov
mov
xor
in
jno
sub
das
test
jo
repnz
and
adc
ss
xor
mov
nop
fsub
ja
in
inc
movsl
fdivp
dec
fnsave
popa
repz
mov
jecxz
dec
mov
mov
xchg
outsb
out
adc
mov
cld
dec
and
push
xor
mov
or
add
add
mov
xchg
cli
test
inc
dec
ljmp
test
movsl
roll
or
dec
js
mov
jge
cmc
popf
sub
gs
and
mov
and
or
pop
adc
cli
or
mov
imul
inc
sub
fcmovu
pop
mov
xchg
stc
fs
pop
adc
pusha
sbb
mov
stos
dec
insb
out
xchg
into
jmp
pop
int
shrl
lcall
push
daa
sar
cmp
push
sti
cmovs
and
mov
jns
xor
push
xchg
dec
jb
ss
xor
add
xor
push
jl
jge
adc
outsb
lea
ja
out
fcoms
pop
push
ja
mov
pop
subl
sbb
jge
jp
jbe
jp
push
push
mov
mov
cmc
pop
mov
shl
mov
sbb
sahf
cmpsl
pop
cwtl
push
es
std
pop
in
mov
add
xchg
xchg
cs
mov
push
pop
and
enter
int
adc
stos
movsb
test
je
mov
cmp
setg
and
cmp
shrl
je
out
sarl
idivl
xchg
loope
jnp
xor
fcoms
sbb
enter
dec
xchg
pushf
out
mov
je
std
pop
mov
jb
clc
ret
adc
sub
pusha
xor
xlat
popa
cmp
mov
cmpsl
dec
insb
xchg
mov
and
imul
mov
test
negl
push
dec
jo
pop
jns
xchg
data16
loopne
cmp
daa
fiaddl
pop
daa
inc
div
sti
mov
lret
mov
mov
arpl
ljmp
xchg
cmpsb
inc
fs
or
pop
mov
dec
ror
repz
bound
sbb
mov
xchg
push
jle
push
push
lret
popf
sub
push
jge
lret
in
stos
fistps
dec
fiaddl
pop
ss
jne
or
adc
fldenv
xchg
jno
scas
std
dec
push
cmp
xchg
and
mov
xchg
shr
xchg
xor
mov
lea
movb
jae
dec
iret
inc
lods
or
movsl
movsb
sbb
sub
in
shll
bnd
inc
inc
xor
stc
aas
push
jnp
or
pop
pop
aam
adc
sti
and
mov
movsl
cmp
cs
jo
inc
subl
jg
enter
fcompl
and
lds
int
add
hlt
loope
int
clc
scas
xchg
inc
out
lds
mov
cmp
dec
mov
jmp
arpl
pusha
pop
int
mov
inc
xlat
aas
push
jo
dec
adc
sub
lret
inc
rorl
xchg
out
in
in
loop
mov
je
loop
popa
mov
lock
dec
inc
xchg
sub
test
add
je
pop
sbb
inc
ljmp
mov
mov
aaa
roll
aad
mov
jns
sub
xor
and
and
mov
nop
adc
xchg
sub
dec
scas
push
xor
insl
cltd
ss
dec
xchg
xor
inc
sti
clc
push
pop
sbb
arpl
mov
pop
mov
cmc
mov
repnz
fistpl
shr
lods
fadds
pop
xor
adc
cld
test
pop
ja
push
and
fiadds
adc
xchg
xchg
xorb
outsb
jge
mov
pop
dec
jecxz
movsb
xor
dec
fimull
and
mov
loopne
rorb
fnclex
adc
lss
leave
dec
push
fldcw
repnz
xor
pusha
imul
icebp
xchg
out
arpl
ss
mov
scas
stos
iret
or
sbb
xchg
cmp
sub
inc
out
push
jle
pop
iret
out
js
nop
adc
mov
cmc
lret
cwtl
scas
push
push
ret
in
and
fistps
stc
or
push
fwait
xor
ja
cmpl
aas
fildll
sti
mov
mov
pop
jbe
and
mov
clc
mov
repnz
jp
jae
cmp
ror
adc
insb
fmuls
pushf
add
xchg
push
std
cmpsl
test
dec
out
adc
jb
shll
into
out
jne
fs
sbb
fdivrs
sbb
cmp
dec
rcrb
push
xchg
test
xchg
sub
imul
mov
popf
pop
ja
shrl
aaa
aad
inc
in
push
add
jae
push
xorb
test
sub
sbb
jns
loope
in
mov
xchg
ror
addr16
out
icebp
cld
mov
inc
add
int3
inc
xchg
sbb
shl
inc
push
lea
sub
in
fcmovnbe
pop
outsl
sub
mov
int
dec
pop
in
xchg
and
cmp
cwtl
fbld
push
dec
das
in
push
scas
aas
and
adc
pop
fnsave
enter
ret
mov
mov
pop
xor
jb
or
and
imul
or
enter
adcb
lret
lcall
test
jecxz
icebp
lea
xor
fdivrl
mov
fcmove
cmpsb
jnp
ds
fnstsw
sar
in
stos
dec
xor
inc
cmp
push
cmpb
loopne
push
in
mov
jne
jecxz
lcall
jmp
or
inc
mov
or
or
push
and
cmp
dec
and
mov
out
xor
cmpsb
sbb
cmp
push
xchg
lods
testl
xchg
popa
lret
in
sub
ret
sbb
cmpl
or
sbb
inc
mov
jae
subl
mov
bound
ss
cmc
dec
mov
movsl
push
lret
mov
mov
and
dec
enter
aad
cltd
cmp
pop
sub
aas
dec
mov
mov
dec
dec
subb
pop
adc
mov
aad
inc
in
mov
rcr
sbb
or
out
sbb
push
pop
pop
adc
jg
xor
sti
jae
jp
out
dec
dec
sbbb
mov
mov
pop
mov
xchg
aam
out
pop
les
lret
ror
or
add
lret
jns
cmpsl
test
xchg
ss
repnz
jp
nop
jecxz
incb
jns
test
jbe
jo
pop
mov
xchg
push
xchg
iret
xor
or
sub
cmc
in
pop
dec
mov
inc
push
dec
pop
repnz
outsb
fwait
lahf
jne
insb
mov
mov
icebp
outsl
pop
mov
and
mov
lcall
xchg
cld
pop
adc
scas
xchg
bound
ss
pop
inc
arpl
cmp
into
loop
incb
xchg
adc
mov
mov
xor
add
std
add
mov
lea
arpl
aam
std
lea
shll
mov
stc
cmc
jbe
push
dec
sbb
cmp
push
adc
dec
pop
pop
nop
push
push
ficoml
mov
and
jmp
mov
pop
jbe
xchg
push
cmp
mov
xor
ficompl
mov
cld
sahf
jge
lret
test
xlat
inc
jge
pop
pop
xor
icebp
ret
out
xor
push
mov
insb
icebp
lods
inc
popa
dec
sbb
cmpsb
mov
testb
push
pop
mov
mov
call
sbb
aam
loope
repnz
inc
ret
iret
sub
xor
xchg
xchg
shl
les
jbe
stos
or
add
push
mov
in
mov
adc
adc
stc
gs
mov
jnp
sub
mov
inc
sbb
fcoml
ljmp
pop
xchg
fistpl
vpmadcsswd
outsl
jmp
jle
mov
lods
pop
cmc
jle
push
into
outsl
or
xchg
add
fbld
mov
inc
subb
push
bound
sub
and
pop
arpl
ret
cmpsl
pop
insb
push
cmp
scas
mov
xchg
in
xchg
sbb
icebp
leave
sbbb
push
hlt
loope
data16
inc
xchg
sbb
ja
sub
or
loopne
lcall
or
xchg
push
mov
rcrb
xor
pop
mov
pop
jbe
lds
sti
out
test
test
jbe
or
rcrb
fnstenv
cld
ja
jb
lahf
cmpsl
sahf
sti
dec
shlb
adcl
out
or
int
ja
hlt
inc
shlb
push
cmp
jp
pop
and
fimuls
loopne
cmp
jnp
inc
in
rolb
mov
and
jnp
adc
mov
sub
inc
scas
adc
add
mov
pop
add
test
sar
jbe
scas
push
and
xlat
add
scas
andb
xchg
std
sbb
imul
jb
mov
iret
lods
mov
xchg
add
outsb
pop
or
movsl
lods
mov
es
test
push
in
sbb
add
jl
and
pop
loopne
and
lea
loop
mov
xchg
jmp
ds
or
sar
cmp
adc
loop
pop
push
jle
pop
icebp
dec
adc
inc
pop
imul
xor
mov
add
repnz
add
xchg
inc
cmp
lods
rolb
fsubr
rcrb
mov
in
inc
je
bound
add
mov
mov
leave
pop
idivl
sbb
clc
lods
dec
pop
out
rcrb
push
xor
pop
insl
push
repz
xor
lods
adc
inc
xchg
sub
mov
xchg
pop
pop
cmp
dec
fisttpl
fwait
rcrl
xchg
dec
lret
mov
flds
divl
mov
inc
jge
inc
inc
push
or
sub
push
inc
out
pop
mov
adc
stos
imul
mov
iret
movsb
stos
ror
jns
lcall
testb
pushf
in
adc
dec
cmp
mov
fcmovnu
test
dec
aaa
inc
mov
dec
push
nop
and
pop
test
pop
dec
es
mulb
clc
sbb
ret
outsl
inc
pop
pusha
into
push
loopne
sbbl
mov
les
bound
jg
arpl
sub
stos
jne
loop
fcoms
aam
and
subl
mov
jbe
nop
sub
test
sub
ret
rclb
pop
pop
ds
sub
pop
fst
aam
sti
pop
call
andb
push
faddl
mov
outsl
xchg
bound
xchg
aam
sub
hlt
test
mov
mov
fwait
pop
and
mov
mov
js
mov
mov
pop
out
fucomip
mov
ret
push
pop
push
inc
imul
rclb
add
cmp
sbb
in
xchg
xor
or
jg
test
imul
dec
mov
xor
sub
js
stc
mov
xor
stos
xor
clc
js
dec
cmp
xchg
lea
jmp
in
dec
sarb
out
cmp
mov
xchg
xchg
xlat
mov
inc
jno
and
clc
fwait
popf
cmp
dec
cld
mov
aad
mov
or
add
and
ficoms
mov
lods
mov
jecxz
ja
pop
int
pop
pushf
test
fdivl
pop
out
xor
add
mov
pop
out
lret
sbb
jle
mov
xchg
jbe
lahf
out
loopne
test
push
jle
arpl
sub
and
lret
xchg
cmp
lock
xor
in
cmpl
lea
pop
xchg
xchg
xor
dec
rcll
add
fs
sub
inc
shlb
aaa
sub
outsl
lds
push
outsb
or
stos
mov
lret
out
ficoms
and
cltd
out
out
cld
mov
out
cltd
push
sub
pop
orl
ret
push
into
aaa
sbbl
push
sub
cmp
push
fldenv
xor
repz
test
mov
inc
adc
sti
or
rolb
in
lret
test
iret
mov
xchg
clc
push
xor
or
test
inc
push
inc
test
mov
mov
jae
xor
repnz
push
dec
and
rclb
pop
or
pop
jmp
jb
scas
push
addps
lret
sub
js
les
ret
dec
shll
lcall
jae
lods
mov
movsl
nop
push
pop
add
into
fcmovnbe
inc
test
repz
int3
pop
sub
loope
mov
mov
sbb
pop
dec
lret
inc
rclb
xchg
push
stc
sbb
mov
repz
inc
xor
and
fs
fnsave
jno
lcall
loope
fdivp
aas
adc
jle
mov
push
adc
sysexit
pop
dec
les
adcb
ja
fldt
gs
pop
add
movsb
jecxz
jl
inc
cld
sub
int3
leave
and
jecxz
mov
cmp
push
push
into
frstor
adc
inc
dec
mov
mov
sti
mov
in
notl
pushf
or
xchg
jae
popf
mov
jmp
aaa
fdivs
add
decl
rcl
mov
add
fstps
jb
xor
fcomip
xchg
int3
movsl
xchg
mov
mov
dec
lods
bound
inc
jno
mov
inc
movsl
rcl
push
jge
std
loop
dec
aaa
shl
in
mov
dec
xchg
js
out
fsubs
nop
cmp
xor
or
fcomps
test
inc
and
mov
lods
loope
jns
inc
sub
dec
jle
repnz
fdivr
ffree
push
add
pop
push
jmp
add
ljmp
shrl
add
mov
lret
xchg
mov
xchg
rcll
pop
mov
movsl
mov
out
xchg
push
std
cmc
sub
mov
lea
sub
xorl
mov
sub
push
jp
xor
das
mov
xchg
dec
enter
jmp
mov
jae
imul
inc
lahf
jmp
pop
int
cmpsb
inc
mov
rcrb
adc
xorl
cmp
js,pt
daa
xchg
ret
std
js
hlt
pop
lods
lock
jg
cld
int
frstor
push
add
cmc
loop
aas
pop
cmovb
cmp
push
xchg
and
mov
idiv
cli
fadds
xor
aad
mov
push
jo
xor
and
sbb
addb
sbbl
xchg
xchg
or
outsl
cmp
or
in
sub
jnp
sbb
xchg
push
add
mov
xchg
jbe
pop
data16
mov
out
mov
mov
mov
jg
test
inc
xchg
dec
testb
or
scas
in
add
insl
mov
enter
andb
mov
inc
adc
roll
xor
mov
jb
std
mov
adc
push
jbe
lea
jnp
in
inc
aad
mov
or
mov
pop
mov
push
cmp
out
push
or
loopne
dec
test
inc
dec
rol
enter
test
pop
pop
adc
lea
test
out
sbb
mov
push
mov
adc
inc
sbb
cmp
jbe
into
faddp
mov
adc
jmp
jge
xchg
in
fsub
inc
dec
cmc
push
dec
add
sub
iret
mov
bound
int3
dec
sub
ljmp
addr16
lcall
jmp
mov
out
mov
push
sbb
je
nop
sub
push
xor
int3
push
lock
and
adc
pop
sbb
imul
cmpsb
les
fnstsw
mov
mov
or
mov
pop
xor
mov
push
add
bound
sbb
xor
push
shlb
mov
push
je
or
sbb
cmpsb
shll
push
inc
xor
in
lret
jmp
cmp
inc
in
imul
mov
test
stc
aam
ret
jge
mov
test
adc
mov
dec
fildll
lahf
lahf
pop
xor
mov
pop
repz
push
sub
jb
sub
xor
mov
jle
aas
jl
mov
ss
jg
xor
mov
js
and
sub
cmp
out
or
adc
pusha
in
sti
shll
sar
lcall
mov
fstpt
sbb
mov
xor
ret
push
xor
repnz
iret
imull
cmp
pop
push
push
push
out
out
cmp
rcll
inc
popf
push
mov
movsb
arpl
test
sub
jne
fstps
xchg
test
xchg
jg
test
sub
or
mov
int
push
stos
cltd
lds
sbb
push
or
xchg
xor
out
sbb
fstl
pop
and
hlt
clc
cmc
stc
sbb
dec
pop
inc
mov
jo
push
pusha
in
popf
divl
or
dec
mov
sub
jno
and
jmp
inc
repnz
out
es
jae
or
mov
ss
dec
loope
test
loop
outsl
mov
repz
jno
ljmp
std
lcall
mov
mull
pop
stc
pmaddwd
test
xchg
lock
mov
pop
mov
imul
jmp
push
fwait
pusha
jno
test
iret
xchg
jns
xor
filds
inc
orl
or
es
pop
lock
lods
stos
pushf
push
daa
dec
pop
mov
sub
push
out
iret
cmp
xor
cli
sbbl
in
jnp
mov
jp
sarl
les
testb
aad
dec
xor
leave
dec
and
mov
and
xor
test
add
jno
jg
das
and
stos
pop
adc
fwait
jnp
xchg
data16
inc
dec
sub
pop
jge
lods
mov
cmp
and
cmp
dec
cwtl
cs
add
cmc
je
xchg
daa
jle
movsl
ror
out
adc
insl
sbb
adc
in
movaps
mov
outsb
faddp
imul
int
mov
and
mov
in
icebp
jo
cmp
pop
lret
add
push
xchg
sbb
sbb
jle
xchg
and
inc
lock
rclb
inc
mov
push
xor
int
dec
jbe
stos
xor
push
daa
mov
leave
and
pop
dec
mov
lods
mov
cld
out
sub
out
aam
push
push
rorl
out
arpl
sarl
imul
jns
dec
daa
stos
mov
imul
jle
lret
mov
inc
xor
sbbb
sahf
inc
insl
xor
lret
test
jno
rorb
sbb
inc
xor
add
xchg
pop
or
or
xor
adc
add
cmpsb
sar
fdivrs
in
sub
ret
je
jg
or
ljmp
adc
push
sti
mov
pop
in
and
rorb
bound
roll
xchg
xchg
mov
in
xor
push
ljmp
mov
scas
je
and
testb
add
test
repnz
in
jle
xlat
sbb
or
inc
or
add
call
dec
aam
jge
mov
mov
jns
xchg
add
xchg
jns
lcall
test
xorl
mov
lock
lret
mov
scas
cmp
mov
or
loop
adc
push
inc
xlat
ret
or
cltd
or
mov
aaa
push
clc
mov
xor
dec
mov
dec
hlt
ss
out
outsb
imul
scas
enter
adc
jns
dec
scas
bound
test
inc
fwait
cmpb
leave
mov
sub
aad
ss
leave
and
and
sub
loope
xchg
jb
jns
mov
nop
jg
dec
and
sbb
jbe
js
mov
push
into
out
enter
int
pop
incb
sbb
popf
out
xor
and
jo
fstps
pop
pop
loopne
jbe
outsb
mov
ror
fisubl
aas
scas
push
jle
mov
jnp
push
ficoms
cmp
mov
shl
es
or
mov
or
add
pop
aam
cmpsb
pop
adc
push
push
and
jnp
lret
pop
in
aad
aam
pop
out
clc
sbb
pop
in
lods
dec
sub
das
xchg
stos
xchg
mov
sbb
rcrb
cmp
loop
push
cmp
int
sub
lret
and
mov
adc
rol
popa
inc
inc
or
cmp
lahf
sqrtps
inc
daa
or
ds
xor
mov
jmp
mov
popa
sbb
inc
sahf
add
out
mov
pop
jo
mov
push
popa
pop
cmc
xor
imul
sub
cmp
lds
shl
mov
jp
in
and
push
test
out
in
dec
xchg
sbb
dec
out
push
je
aam
cmpsl
mov
xor
push
sbb
into
lds
mov
setnp
cmp
inc
lock
fcompl
or
push
and
loopne
mov
add
jmp
insb
dec
push
jp
adc
and
xchg
stos
jg
cmpsw
nop
mov
out
js
mov
adc
inc
inc
and
inc
stc
test
fdivrs
xchg
sbb
das
stc
pushf
jb
add
jb
sarl
add
in
outsl
inc
pusha
or
cmp
aad
in
daa
jecxz
lret
cmp
sti
push
push
popf
mov
add
arpl
add
xchg
dec
mov
pop
cmp
iret
shrb
cltd
cld
sbb
adc
cmp
lea
mov
mov
mov
lcall
loope
jge
orb
inc
add
sbb
aad
dec
and
inc
mov
ss
xor
xchg
rorl
clc
pop
test
js
pop
mov
out
dec
pop
jle
fiadds
push
jo
dec
movsl
pop
jno
call
sbb
jb
or
mov
mov
adc
fstpt
and
into
scas
cltd
mov
int
int
adc
lea
mov
data16
push
dec
fnsave
pop
sub
lods
or
add
fst
sub
mov
sahf
and
in
leave
jo
rclb
inc
push
sbb
int
inc
xlat
ljmp
push
mov
sub
inc
mov
push
les
mov
jnp
repnz
hlt
cltd
loopne
fmuls
or
in
dec
in
or
hlt
adc
sbb
xor
sub
je
dec
fldt
mov
test
or
ljmp
mov
cmc
daa
stos
sbb
mov
ja
fldl2t
in
mov
movsl
pop
aas
or
shll
es
xchg
xor
cs
xor
dec
jp
jne
out
cmp
les
lock
loopne
jle
jae
add
push
lods
jecxz
scas
fstl
js
bound
push
cmp
popa
mov
test
dec
stos
ss
outsb
arpl
pop
es
adcb
add
sbb
sbb
int
mov
lahf
setno
pop
movsl
cmpb
or
test
pop
div
fs
test
mov
push
cmc
fucomp
in
mov
jo
pop
aam
xlat
sahf
and
xor
popf
jge
pop
jge
push
jecxz
mov
outsl
mov
mov
lret
jno
ja
sahf
enter
shll
sub
or
dec
jns
pop
cmp
pop
ret
popl
xor
mov
sbb
inc
pop
xor
mov
gs
clc
and
popf
fistl
js
addr16
dec
cmp
mov
dec
lods
or
lods
movsb
push
mov
js
cmpsl
jp
push
call
or
repnz
sbb
je
es
scas
dec
cmp
pop
out
popa
adc
pop
add
mov
cltd
push
inc
lea
mov
je
fmull
mov
daa
ret
dec
repz
cmc
push
out
push
out
pop
scas
add
inc
clc
popa
inc
pop
loope
loope
pop
ficomps
lock
lea
sbb
dec
mov
add
out
inc
dec
xchg
cmc
push
push
out
mov
mov
mov
xlat
testb
push
nop
pop
ja
push
jl
sbbl
jge
dec
sub
dec
test
test
push
aam
movb
cmp
stos
jbe
out
jns
inc
inc
mov
cmpsl
mov
xchg
jnp
mov
push
sub
mov
sub
cltd
lea
lock
inc
pop
fwait
mov
mov
popa
out
jae
out
cli
fs
mov
jno
mov
fs
mov
mov
test
lret
ja
icebp
xor
sub
and
popa
fiadds
mov
mov
lret
and
sti
pop
bound
add
je
push
mov
xorb
std
lds
neg
mov
movsb
fimull
outsb
mov
push
push
insl
or
popf
repz
dec
adc
fisubrl
or
push
and
jno
mov
dec
pushf
inc
sahf
sbb
daa
push
mov
pop
in
sub
pop
adc
xchg
adc
stos
fimuls
xor
data16
and
pop
xor
into
mov
add
add
ficoms
push
fidivs
sbb
mov
mov
push
dec
cmc
or
lods
adc
xor
and
leave
mov
xchg
fwait
cmp
fwait
xchg
xor
hlt
gs
cli
out
das
or
jecxz
mov
lea
mov
sbb
add
mov
xor
add
mov
jl
pop
jmp
out
dec
jb
cmp
aam
orb
push
nop
ja
mov
jbe
lock
push
jp
decl
cli
popa
push
cmc
notl
xchg
cltd
mov
lods
push
lahf
jp
outsb
and
or
fisubs
bound
sbbl
repz
aas
push
mov
push
dec
lcall
inc
fwait
pop
or
stc
iret
or
pop
in
pushf
cmpsb
and
or
fnstenv
xchg
jne
sahf
repnz
fnstcw
sub
xor
jnp
and
mov
xor
adc
adc
shrl
sbb
xor
fs
jns
in
xchg
or
inc
inc
lock
out
clc
jo
cmp
dec
or
imul
push
or
loopne
addr16
pop
data16
stos
stos
cld
lock
mov
popf
in
mov
shlb
cwtl
daa
adc
aaa
in
in
repz
js
adc
call
or
xchg
adc
jl
adcl
lret
pop
mov
pop
cmp
popf
sbb
dec
pop
inc
mov
sbb
sysenter
or
push
or
pop
or
rorl
mov
xchg
add
out
fmuls
pushf
fstl
shrl
movsl
inc
ret
cmp
iret
add
mov
cltd
jns,pn
mov
test
test
pop
mov
outsb
xchg
aaa
pop
mov
les
out
add
cmp
lret
sahf
xor
pop
xchg
dec
out
mov
int
pop
jge
dec
jl
sub
inc
daa
cltd
cmp
mov
sub
mov
das
lret
pop
icebp
pop
leave
xchg
aaa
inc
xor
sub
inc
mov
and
or
push
int3
loope
test
push
stos
jno
lods
in
fnstenv
loopne
cli
jle
int
mov
bound
cmp
inc
sbb
stc
xor
nop
fildl
jmp
jns
xchg
lock
shll
in
out
pop
repnz
jb
jp
cmp
pop
push
push
cltd
leave
mull
or
adc
fs
xor
mov
sub
lret
leave
rclb
fsts
or
hlt
andb
in
fadds
imul
xchg
mov
jb
inc
jns
cmpsb
cltd
mov
add
lods
xchg
push
aaa
clc
ja
std
pop
ss
sbb
ret
data16
and
push
pop
or
pop
inc
mov
lahf
xchg
in
cltd
add
sub
mov
sub
pop
mov
aam
inc
inc
es
jge
movsl
imul
nop
std
mov
xor
jge
sbb
andl
or
shlb
