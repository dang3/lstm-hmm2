sbb
add
or
push
cmpsb
sub
xlat
add
xchg
pop
jl
test
insb
sbb
loop
imul
cmp
jmp
lret
push
pop
les
pop
mov
into
leave
mov
enter
xor
cwtl
mov
cmp
mov
rclb
jle
cmp
imul
test
subb
mov
xchg
outsl
inc
adc
ljmp
sbb
push
fisttpll
mov
mov
dec
faddl
daa
mov
jp
sub
cs
hlt
testl
jle
xor
push
cmp
ss
hlt
cmp
popf
bound
inc
icebp
aaa
rcrl
inc
or
lods
out
jo
leave
repnz
pop
adc
into
js
sub
mov
aaa
push
loope
int
jp
and
or
cmp
cmp
cltd
jbe
lret
repnz
es
cltd
ss
hlt
pop
adc
cwtl
bound
shrb
xlat
xor
sbb
hlt
sub
add
ds
jae
mov
stos
cmpsl
addl
sub
test
pop
xor
pop
xor
xlat
loopne
fists
hlt
rcrb
stos
adc
shll
fisttpl
aaa
ljmp
aam
cmpsb
xchg
dec
inc
das
xor
mov
loopne
insl
mov
sub
idivb
outsl
cmp
and
data16
es
mov
jle
and
pop
mov
adc
out
adc
cmp
cmp
dec
subb
pop
jno
repnz
idivl
popa
negl
xchg
cmp
mov
lock
mov
popa
or
lret
jecxz
dec
push
mov
push
lock
add
mov
pusha
test
cmpsl
and
xchg
inc
sub
arpl
call
cmp
ja
mov
push
lcall
mov
jne
loop
mov
movsl
dec
push
and
add
add
jo
iret
imul
inc
xorb
push
mov
pop
cmp
sub
dec
lret
lea
jns
xchg
mov
jo
arpl
adc
lock
test
into
mov
movsb
inc
jo
into
aam
and
sbb
loopne
or
je
in
adc
aaa
cmpsb
jnp
fsubl
mov
loopne
jae
xchg
clc
imul
adc
push
xor
xor
or
test
mov
jae
ret
xor
clc
push
pop
out
cs
and
cmc
fadds
pop
add
xor
mov
adc
and
jle
enter
popf
loop
mov
dec
push
test
test
xchg
mov
stos
xchg
pushf
jecxz
pop
mov
adc
subl
dec
xchg
pop
dec
gs
stos
jg
xchg
dec
ljmp
cmp
std
mov
add
adc
lahf
xchg
fcoms
mov
dec
fistps
push
lds
and
pop
xor
push
scas
movsl
lahf
popa
aas
xor
fcomi
fiadds
mov
jno
loop
stos
cmp
push
dec
aam
pop
faddp
cmp
rclb
into
mov
insb
inc
and
fistpll
push
jno
sarl
ficoml
cmpb
jmp
cmp
aaa
push
fistpl
lods
fs
fisttps
cmpsb
inc
ret
cmp
rorl
out
pextrw
add
aas
cs
sub
dec
loope
stos
pop
insl
popa
hlt
push
inc
mov
jge
scas
xchg
push
sbb
pop
ja
bound
lock
fwait
rcrl
lahf
out
dec
xchg
pop
mov
sub
clc
stos
movsb
sbb
out
clts
ja
daa
and
mov
les
jl
dec
sbb
pop
push
jo
ret
inc
leave
pop
lahf
push
dec
or
in
lcall
mov
xor
and
xchg
lods
pop
mov
mov
in
inc
and
sbb
cmp
adc
les
mov
sub
sbb
imul
cmc
adc
subl
inc
fdiv
and
sub
pusha
or
fisttpl
scas
sub
jo
lret
lods
ficoms
jbe
test
pop
xchg
test
sub
add
outsb
fisttpl
or
xlat
mov
lret
dec
inc
cwtl
push
fidivs
ds
subb
clc
mov
xchg
enter
sub
cmp
hlt
push
adc
mov
sbb
call
mov
push
dec
cmc
dec
sub
imul
lret
inc
xchg
add
and
mov
das
pop
fsub
ret
insb
xor
add
push
das
mov
ret
dec
mov
mov
jae
mov
lods
add
mov
iret
cmpsl
xor
dec
jb
lds
jns
mov
mov
sub
stos
iret
xor
ja
push
mov
mov
adc
cmp
mov
push
mov
mov
sti
stos
mov
inc
mov
or
adc
cmpsl
xchg
sbb
xorb
or
pop
leave
push
add
mov
mov
mov
dec
adc
cld
add
or
mov
iret
inc
mov
test
push
pop
scas
mov
jmp
pop
imul
clc
rcll
clc
cwtl
movsl
xor
push
pop
push
pop
aam
jecxz
js
inc
xchg
sbb
pop
xor
shl
mov
cmpsb
dec
test
lret
push
mov
dec
mov
ret
mov
jmp
jle
mov
arpl
fimull
lret
cwtl
pop
cmp
jne
les
cmc
scas
clc
sub
lret
popf
into
fldcw
sub
shr
jg
lcall
sbb
lea
faddl
out
clc
push
movsl
cmp
sbb
aaa
lret
dec
inc
int
xchg
aaa
ror
fsubrs
sbb
in
inc
cmp
ror
das
inc
jb
fcomp
out
adc
pushf
aad
sub
xchg
pop
jne
inc
pop
adc
aam
push
pushf
dec
pop
mov
arpl
bound
jge
daa
in
ds
fwait
push
inc
je
fwait
popf
xchg
roll
adc
and
jg
loop,pn
mov
bound
shl
adc
adc
fiadds
push
sar
pusha
mov
negb
and
xchg
pop
mov
mov
cmpsb
testl
sub
add
push
xor
add
xchg
or
pop
adc
into
mov
xabort
jmp
cmp
rcrb
rorl
iret
mov
aad
repnz
out
add
pop
stc
ret
xlat
je
test
lcall
cmp
push
in
mov
inc
pop
sub
mov
cmp
inc
jge
adc
mov
dec
jbe
jmp
shrl
add
fwait
and
fst
or
shll
js
and
popl
mov
mov
inc
mov
sti
jg
xor
loopne
pop
xlat
and
loop
jne
and
or
arpl
mov
push
daa
loopne
push
cs
cmp
and
sbb
pop
jle
addr16
xor
fs
or
push
inc
push
movsl
test
int3
lahf
mov
sub
mov
das
std
push
and
pop
push
inc
sti
ret
lock
dec
pushf
adc
hlt
test
mov
dec
daa
inc
adc
mov
push
sarb
mov
add
icebp
dec
push
cmc
jge
lret
or
ljmp
sub
cli
pop
int3
imul
sahf
iret
int
int
push
and
sub
cmp
out
fs
mov
in
mov
jge
xchg
adc
mov
push
cmp
pop
adc
mov
outsb
in
aaa
pop
cld
sbb
fsubrs
xacquire
not
mov
mov
in
xor
test
xor
mov
push
jg
clc
loopne
arpl
gs
inc
jne
and
sti
int3
or
mov
sbb
clc
inc
xor
insb
ret
push
lea
mov
adc
sbb
ret
mov
sbb
sbb
adc
cltd
jo
pop
pusha
popf
lret
enter
dec
aam
cltd
xchg
and
in
insb
pop
pop
add
jp
iret
jae
arpl
test
mov
push
push
je
std
lret
and
sbb
loopne
int3
mov
pushf
sbb
loope
push
in
jl
xchg
lahf
push
aam
shlb
ss
test
and
data16
sbb
in
add
fwait
es
xchg
cli
fwait
imul
sub
andb
and
mov
dec
sbb
jle
push
adc
sub
push
xor
lahf
sbb
mov
arpl
insl
rcrl
mov
shl
rcr
sbbl
nop
aam
mov
out
mov
test
gs
xchg
xchg
add
fistpl
stc
dec
inc
mov
cli
ds
dec
mov
icebp
test
stos
ja
lock
stos
push
jmp
sub
les
mov
inc
push
fisubs
xor
je
shrb
pop
jnp
mov
add
or
in
xchg
cmc
mov
dec
mov
push
mov
push
scas
loopne
sbb
lcall
xor
jle
loope
pusha
mov
les
jge
or
mov
mov
cmpsl
pop
out
pop
xor
in
mov
fcomi
cs
sub
add
cltd
andnps
test
les
mov
xor
mov
bound
add
in
jp
rorb
push
in
sahf
dec
cld
aad
jecxz
sbb
scas
cmpsl
es
add
gs
adc
mov
xor
inc
or
sahf
clc
sub
lea
test
pushf
dec
lds
add
mov
test
push
and
push
cwtl
into
es
mov
std
lcall
popa
mov
lods
nop
leave
outsb
outsb
push
cmp
fisubs
loope
mov
mov
inc
xor
push
jo
orl
outsb
mov
xchg
jno
push
dec
scas
sbb
push
test
fmull
push
pop
sbb
rol
xchg
insb
pushf
and
daa
mov
cmpsb
push
cmp
insl
lods
xor
dec
xor
imul
push
xchg
inc
fistps
fnsave
loopne
jne
mov
and
pop
subb
and
pusha
ficomps
rcl
fcoml
jmp
inc
xorl
into
das
add
sbb
push
push
cmpsl
add
mov
repnz
lods
pop
xchg
scas
mov
hlt
mov
aaa
adc
in
out
xchg
push
pop
loope
and
jl
or
fisubrl
adc
iret
fs
rclb
mov
dec
mov
outsb
cmp
aas
inc
pop
divb
pop
aad
mov
std
sbb
xchg
ja
pop
cmp
call
adc
cmovb
std
out
inc
das
ss
icebp
test
push
std
shlb
shl
sub
loope
sar
push
sar
test
mov
push
aam
lcall
in
addr16
in
das
mov
mov
nop
nop
dec
or
out
cli
push
aas
xchg
adc
push
mov
shll
bound
sub
mov
daa
push
in
or
xor
xchg
int
xchg
mov
lods
iret
push
dec
push
shll
push
dec
add
cli
pop
lds
jb
cltd
imul
xchg
sub
std
lret
and
sbb
jge
aad
stos
and
lcall
rol
xor
cltd
pop
mov
push
fs
movsl
testb
and
fcmovne
mov
xor
and
sbb
mov
shll
cmp
lds
cs
imul
addr16
sbb
sbb
adc
stc
and
mov
insl
jecxz
sti
loop
out
push
rcr
mov
mov
fnstcw
push
dec
inc
ret
lahf
sti
jl
lods
xchg
loope
shld
inc
jae
iret
mov
mov
mov
into
sbb
adc
repnz
ljmp
ja
xor
and
ret
fnstcw
cli
adc
mov
and
sbb
in
xlat
xor
jge
inc
in
xor
addr16
cmp
jg
mov
mov
jbe
pop
fdivrs
aas
test
je
jmp
mov
cmp
lock
scas
stc
gs
cltd
mov
scas
into
clc
adc
loop
mov
inc
arpl
je
dec
flds
or
fs
or
test
out
dec
mull
fistpl
mov
jbe
testl
aaa
hlt
or
ds
dec
pop
cmp
sub
sti
arpl
sbb
inc
int3
dec
dec
mov
dec
lock
or
mov
push
or
pop
fbstp
sub
dec
pushf
cmp
pushf
flds
xor
ret
pop
inc
cmpsl
popf
cmpsb
fistpll
and
sahf
push
fmull
imul
jl
scas
push
inc
iret
enter
comiss
movsl
mov
mov
mov
or
sub
sbb
and
dec
xchg
cwtl
push
mov
or
sbb
pop
shrl
jne
dec
add
clc
push
rclb
mov
and
sbb
leave
adc
inc
fs
inc
imul
pusha
mov
mov
cmc
fisubl
inc
cmc
mov
add
push
xor
ds
sahf
je
loop
lock
test
sub
sbb
push
pop
jo
or
xor
hlt
mov
push
xor
fistpl
or
js
ds
add
gs
add
js
pusha
and
mov
jl
dec
or
push
das
xor
fbstp
xchg
test
scas
cmp
stos
mov
dec
bound
cmp
jne
call
iret
push
push
shr
cmpl
and
add
mov
call
cmpsb
xlat
mov
sarl
loope
push
dec
xchg
iret
dec
xor
aam
fs
aam
aam
mov
add
testb
imul
iret
xor
inc
loop
push
notb
imul
mov
outsb
and
jns
lds
loopne
ja
fbstp
sub
mov
and
sub
xchg
test
cmp
insb
pop
ret
arpl
stos
test
sub
popl
mov
out
jmp
in
daa
rcll
mov
jl
bound
push
arpl
pop
sub
fstl
jbe
dec
or
mov
int
lcall
xchg
xchg
hlt
or
addr16
imul
sbb
push
push
mov
shl
or
or
and
mov
sub
sbb
or
addps
sbb
xchg
or
sbb
mov
stc
xchg
outsl
fbstp
nop
sbb
fs
das
jo
mov
testb
pop
add
repz
or
fwait
inc
dec
leave
xchg
push
jns
ret
jle
or
lods
mov
icebp
rcrl
add
jns
or
movl
xor
sbb
ljmp
and
inc
dec
sub
loop
aam
out
mov
jle
lea
pop
and
outsb
sahf
pop
add
jnp
repnz
clc
and
push
enter
cwtl
mov
dec
and
or
mov
and
nop
cli
imul
sqrtps
movb
sbb
mov
mov
movsb
pop
inc
dec
jp
lret
das
or
mov
test
adc
push
adc
mov
cwtl
mov
cmp
xor
pop
mov
push
jns
insl
inc
repnz
adc
inc
leave
add
xor
cmc
push
shrb
insb
clc
fadds
adc
fidivs
enter
mov
adc
and
add
mov
and
lock
cmpsb
or
add
mov
xor
mov
cs
testl
jbe
shlb
int3
jl
pextrw
pop
sarb
xchg
or
and
in
je
push
inc
cwtl
lea
gs
fwait
lods
push
xchg
jle
sbbb
pop
shlb
mov
push
mov
test
sbb
ficomps
lcall
mov
inc
daa
sub
mov
out
nop
and
mov
out
xor
jp
mov
jno
aaa
scas
dec
and
push
push
rorl
dec
pop
mov
inc
jae
pop
or
cmp
mov
ja
inc
add
mov
jnp
enter
sbb
and
rolb
loope
outsl
iret
mov
ljmp
mov
cmp
pop
int
test
cli
add
or
push
cmc
nop
add
or
ds
pop
out
sub
and
inc
fsubr
callw
sub
push
sub
fists
hlt
out
gs
pop
addr16
adc
mov
dec
mov
mov
fcmovnu
icebp
fists
orb
jecxz
push
push
or
mov
xchg
pop
movsl
sbbl
and
pop
dec
lods
testb
mov
addr16
data16
testb
nop
jg
outsb
xchg
lret
cltd
addr16
fwait
and
popf
test
out
subb
xchg
loope
mov
mov
jl
push
add
hlt
fdivr
add
sub
inc
loopne
lock
ret
mov
mov
stos
mov
cli
repz
ds
fmull
popf
or
cmpsb
mov
mov
repz
mov
sti
jge
jmp
iret
stc
sub
inc
ljmp
adc
xchg
addr16
and
pop
pusha
push
push
mov
dec
aam
adc
sub
mov
das
sahf
and
or
mov
outsl
pop
cmpsl
dec
pop
je
pop
sub
dec
cwtl
pusha
loopne
sarl
inc
cmp
inc
bound
xchg
movsb
xchg
scas
bound
ret
cmpl
das
out
jo
and
or
sti
pop
push
xchg
inc
aas
xchg
das
jb
fistpl
mov
pop
sub
mov
clc
das
mov
and
fisttpll
out
mov
test
leave
inc
in
mov
inc
dec
sti
xor
and
cmp
icebp
jle
xchg
ljmp
call
pop
mov
push
fsubs
inc
lret
js
pusha
cmp
lock
sbb
mov
xchg
bound
arpl
xchg
clc
and
outsb
push
mov
outsl
femms
push
xor
sub
sbb
fdivr
sub
xor
xlat
ret
pop
dec
int3
and
jl
jae
movsl
enter
int3
jns
das
stos
or
ss
push
sub
sbb
in
mov
xchg
inc
filds
addr16
jbe
stc
adc
dec
jns
cmp
mov
jae
sbbb
mov
pusha
dec
xchg
pusha
cmp
filds
jecxz
leave
and
sbb
movb
xchg
cmp
mov
loopne
or
xchg
fsubrl
sbb
and
cwtl
movsl
jne
push
jb
push
jnp
insl
pop
cli
or
ja
adc
sar
std
fsub
add
xor
dec
fs
fxch
rorl
adc
or
sub
pop
mov
movsb
loopne
loope
xchg
add
lods
fadd
aad
inc
lret
aas
mov
int
cltd
add
jle
xchg
inc
jp
and
jg
push
xchg
in
pop
mov
sahf
ret
cmp
inc
push
mov
sub
scas
mov
dec
les
lcall
or
push
mov
inc
fdiv
inc
mov
outsl
mov
add
adc
xchg
or
call
mov
mov
nop
hlt
andl
mov
into
xchg
pop
mov
rcr
jbe
push
sahf
movsl
jo
in
adc
insl
shr
rorb
ror
cli
cs
pop
aas
add
lods
mov
lods
pop
js
jge
loopne
push
daa
mov
inc
inc
cltd
fmulp
xchg
cmp
test
addr16
pop
sbb
fbld
in
sbb
add
add
mov
lea
jns
shll
stc
cmp
insl
mov
dec
insl
cmp
int3
hlt
arpl
clc
mov
lahf
adc
orl
add
outsl
cwtl
cltd
jae
and
into
sbbb
cli
das
ja
sub
outsb
sbb
mov
mov
and
leave
fmulp
push
xchg
push
push
dec
out
addr16
inc
icebp
leave
cmp
push
imul
cli
adc
mov
lret
mov
out
pusha
pop
mov
pushf
mov
loopne
jmp
shrb
xor
pushf
data16
scas
mov
push
sbb
sub
stc
repz
pushf
or
adc
adc
fwait
cmc
outsl
sbb
and
pop
and
or
insl
lods
sahf
jmp
push
pop
lods
mov
lods
push
pop
int
mov
jns
add
adc
mov
sbbb
pop
in
or
test
sub
fdivrs
popa
sahf
mov
xlat
aaa
and
data16
push
push
push
and
push
xlat
ss
xchg
and
mov
or
jle
into
cmp
ljmp
in
or
dec
adc
jmp
lods
int3
mov
bnd
in
jecxz
pop
sbbb
jl
xchg
dec
pop
mov
inc
jle
cltd
xchg
and
mov
int3
sbb
outsl
vandnpd
repnz
sub
addr16
pop
divl
adc
xchg
xor
pop
clc
or
les
testl
push
fistpll
xor
aas
in
mov
lods
push
sub
push
mov
roll
add
cmp
jo
out
daa
aad
adc
rorl
lret
js
jp
icebp
sahf
pop
std
dec
or
or
popa
ret
pop
int3
insl
cmp
test
xor
stc
jg
jbe
xor
mov
dec
in
inc
movsl
arpl
sbb
jg
mov
ss
push
mov
shll
add
mov
xchg
and
je
or
fwait
sbbl
or
out
fwait
cmp
xlat
fcompl
lcall
or
fsubrl
sarb
imul
xchg
add
sub
int
mov
cmp
rcll
test
sbb
jmp
mov
and
divl
movsb
sub
hlt
pop
aam
inc
xchg
jge
mov
and
dec
xor
mov
fdivl
mov
int3
scas
add
pop
pop
jbe
fucomi
int3
jb
xor
sbb
movl
hlt
popf
or
inc
sbb
mov
movsb
std
xor
cmp
and
aam
push
xchg
inc
jo
outsl
xor
out
or
xchg
sbb
mov
imul
cli
sub
scas
xor
scas
sub
in
dec
push
push
xor
mov
into
jae
jp
clc
mov
scas
jecxz
xchg
lea
mov
jmp
leave
push
and
and
arpl
testb
or
xlat
aad
cmc
fmull
rorl
or
enter
movsb
push
roll
loopne
xlat
pop
aas
ret
nop
dec
ja
cmpsb
outsb
xchg
or
add
pop
stos
adc
or
jle
cmpb
inc
fists
mov
mov
lcall
pop
sub
xor
push
ret
pop
or
inc
mov
stos
loopne
in
xlat
mov
jb
flds
and
int
mov
in
adc
or
jbe
lea
sub
out
xchg
cmp
aaa
mul
xchg
in
scas
nop
int3
das
cmp
jne
movsl
jl
lret
lock
xchg
add
in
das
mov
divl
inc
mov
aas
jge
cmp
aaa
sub
cli
and
sub
fdivrl
mov
or
stos
adc
out
add
fidivl
jp
lods
rcr
adc
pop
imul
iret
push
mov
sub
push
arpl
xchg
pop
fstpt
bswap
jne
mov
aad
pop
and
ljmp
mov
xchg
inc
sub
inc
xchg
dec
mov
lahf
xchg
jge
mov
cmp
inc
or
cmp
adc
jmp
testl
xchg
fists
cmp
outsb
or
inc
push
dec
add
pusha
mov
sbb
aaa
push
clc
lock
fcompl
fs
enter
mov
loopne
push
adc
cmp
andb
mov
and
icebp
sub
and
arpl
pushf
stc
pop
insl
inc
leave
icebp
insb
or
in
pop
xchg
sbb
data16
adc
jo
xchg
mov
pop
imul
push
or
fnstsw
dec
pop
mov
mov
in
sub
xchg
xor
add
adc
aaa
shlb
outsb
xchg
fsubrl
mov
nop
mov
sbb
loope
xchg
add
fisubs
inc
cld
stc
js
xor
jecxz
call
bound
jb
cmpsb
mov
cmp
pushf
push
xchg
insl
in
push
pusha
mov
xchg
int
testl
mov
test
and
dec
inc
push
mov
push
dec
xor
repnz
repnz
jo
push
push
mov
fwait
adc
frstor
leave
loop
sub
sbb
sar
sbb
aaa
push
cltd
xchg
xor
insb
mov
test
les
jp
and
cmp
xchg
test
push
lret
into
ret
lret
xchg
jbe
imul
pushf
adc
rorl
xchg
or
sub
xchg
out
sub
mov
shl
sahf
cmp
pushf
mov
xchg
push
das
jns
mov
es
aad
mov
dec
mov
imul
out
fisubrl
pop
lods
insl
or
lods
data16
sti
popa
movsb
ret
sub
or
leave
sub
cli
mov
clc
mov
out
movsb
repnz
mov
push
test
xchg
fdivrs
jmp
xchg
mov
clc
mov
cltd
mov
addl
inc
jbe
or
ficomps
sbb
cli
mov
cmpsb
add
or
xchg
dec
or
xorl
sub
mov
pop
clc
or
rcpps
and
and
repnz
mov
shl
cmp
pop
push
imul
mov
daa
sub
cmp
push
repz
mov
or
dec
mov
xor
addr16
xchg
cmp
mov
sti
mov
jmp
push
sbbb
push
and
iret
cmpsl
and
in
xor
xchg
test
and
jne
mov
shlb
push
xor
mov
jne
adc
cmp
jne
enter
mov
mov
mov
movsl
pusha
sbb
int
add
pop
cmc
fwait
mov
xchg
cli
sarl
or
and
mov
out
push
cwtl
in
fdivr
aas
sti
or
push
lods
inc
rorl
xchg
xlat
loop
cwtl
pop
notb
adc
test
push
idiv
push
andb
in
repz
cmp
test
mov
in
or
repz
mov
mov
ficoms
aam
inc
out
xchg
cmp
rcr
jmp
jae
orb
inc
shrb
mov
mov
push
lret
lock
or
xchg
ljmp
in
loopne
push
cwtl
arpl
lret
jge
repz
subb
xchg
xchg
adc
sahf
pop
sahf
enter
jge
xchg
push
and
mov
mov
adc
ljmp
ret
cs
scas
in
pop
inc
lahf
jnp
inc
push
fstps
nop
push
dec
iret
lods
div
cmpsb
cmp
mov
loopne
mov
dec
mov
sahf
fs
inc
pusha
jmp
adc
stc
mov
sbb
add
dec
int3
ret
inc
xchg
push
pusha
scas
jmp
fs
lds
es
icebp
leave
cmp
das
std
mov
fists
jl
mov
fwait
in
ja
add
xor
sahf
fbstp
ja
pop
lock
aaa
ret
sub
in
pushf
mov
pop
mov
adcb
and
test
das
mov
push
pop
pop
pushf
sbb
movsl
shlb
xchg
mov
add
orb
push
push
inc
frstor
iret
xor
xchg
lods
fisubrl
popa
int3
lods
push
mov
push
mull
cmp
mov
mov
stos
dec
dec
and
sarl
add
jno
sub
repnz
fnstsw
jbe
lods
gs
jns
push
test
pop
test
cmp
out
stos
dec
push
insb
test
xor
notl
and
sub
psadbw
mov
inc
mov
inc
xchg
int
outsb
mov
mov
repnz
pop
push
inc
adc
scas
pop
push
mov
out
sub
inc
loope
mov
lock
bound
cmp
add
cmp
mov
lods
mov
jno
cld
or
lock
and
cmp
movsl
pop
or
dec
in
mov
sub
scas
jno
mov
je
push
pop
push
push
push
push
sarb
inc
add
in
jmp
push
mov
loop
cmp
gs
adc
cwtl
cltd
out
fcoms
and
xchg
inc
xor
pop
inc
inc
or
shrl
mov
mov
mov
xchg
subb
ss
bound
sti
add
pop
lods
add
and
imul
xor
ljmp
ret
and
jbe
imulb
jmp
add
mov
lods
inc
xorb
int
xchg
cmp
sti
sbb
jbe
mov
mov
jmp
add
aas
or
popa
mov
push
xlat
rol
pop
sti
test
subl
jmp
loope
mov
xorl
xchg
mov
inc
imul
movsl
jne
xor
ds
cmp
xor
adc
mov
mov
mov
and
adc
or
clc
mov
push
je
lcall
add
iret
fucomp
ficomps
ret
lods
dec
push
pop
test
std
ss
pop
lods
out
and
cmp
pop
cmp
xchg
sbb
enter
fidivrs
popf
sub
aaa
je
int
inc
push
mov
push
push
cmp
sbb
loop
fstps
loop
out
mov
jl
ljmp
sub
dec
sbb
and
lea
xchg
in
push
ffreep
movsl
push
add
mov
addr16
jno
lret
sub
insl
out
cmp
sbb
incb
sub
mov
mov
dec
adc
int3
test
adc
push
in
cmc
jle
sahf
sbb
and
xor
int3
dec
lcall
pop
pop
iret
lock
imul
inc
jnp
fsubrs
popf
push
adc
stos
aaa
xchg
mov
stos
mov
ds
sub
mov
cmpsb
adc
or
scas
scas
orb
ret
frstor
add
scas
loop
mov
jno
fidivrl
or
sub
jns
loop
nop
gs
push
lret
repnz
call
lds
push
es
leave
ja
add
mov
fcoml
xchg
loop
dec
add
jo
ret
jg
adc
xchg
add
and
insl
jo
jne
mov
sub
or
sbb
dec
sub
push
int
test
inc
adc
movsl
dec
fcompl
test
gs
or
cmpsl
pop
pop
aaa
mov
add
dec
push
xchg
mov
pop
in
adc
and
repz
mov
push
data16
sub
jg
fiadds
imul
sub
pop
shl
mov
fnsave
xor
fmuls
xor
stc
sbb
stc
sub
lods
push
push
adc
push
mov
xor
cld
lods
jl
dec
out
mov
push
and
iret
mov
inc
test
es
xchg
jbe
sub
outsb
mov
push
xor
daa
pop
shll
adc
jns
cmc
inc
xchg
pop
test
or
lods
roll
loop
andl
movsl
fs
aas
add
pushf
fidivs
xchg
fs
cmp
cmp
lea
xor
adc
push
lret
aas
rorb
push
outsb
stos
inc
inc
fidivrs
cltd
or
test
in
and
nop
sub
jmp
loope
add
mov
jnp
push
pop
out
lods
push
lods
push
or
je
cmp
mov
cmp
orb
out
and
dec
stos
aas
std
and
dec
push
dec
lahf
jmp
sub
in
lcall
fnsave
pop
pop
dec
inc
fldl
mov
cmp
mov
lret
pop
dec
sahf
fcoms
dec
adc
repnz
out
ret
fdivrp
inc
push
xchg
dec
sti
pop
sub
andl
ds
lods
sub
cmpsb
in
loop
inc
lods
inc
xor
or
adc
ret
sub
lods
adc
cltd
sub
js
vpcomd
jne
shll
in
mov
mov
in
in
shll
jge
int
dec
sbb
xorl
outsl
xchg
push
test
mov
mov
rcr
lods
dec
lods
mov
shl
add
mov
imul
sahf
pop
lock
xlat
clc
pop
push
add
insb
daa
mov
push
cmp
scas
aas
push
dec
push
test
out
popa
push
jbe
cmp
adcl
mov
lock
rcr
mov
sub
adc
ljmp
iret
mov
jle
scas
mov
xchg
iret
jne
loop
cltd
imul
fidivs
lods
js
pop
lcall
sbb
mov
mov
inc
ja
cld
sub
or
es
push
xor
xor
and
dec
into
loope
mov
cmp
subb
subb
lret
shll
mov
and
std
cld
push
adc
ret
add
cpuid
inc
jmp
pop
xchg
jmp
stos
in
add
mov
adc
cmp
inc
cmp
ud1
dec
add
inc
jmp
mov
mov
hlt
repz
mov
pop
mov
jg
bound
call
lea
mov
sbb
enter
dec
out
gs
adc
mov
cld
dec
andl
mov
mov
cwtl
outsb
rcll
mov
and
jae
ja
pushf
xorb
xor
sbb
inc
adc
insb
cli
push
test
push
aas
pop
cmpsl
jecxz
inc
xor
popf
data16
scas
add
pop
aas
jge
cwtl
ret
cmpsb
call
cmp
xchg
mov
mov
sub
pop
adc
xor
dec
cmp
add
push
insb
ljmp
les
lret
push
xchg
jns
out
mov
mov
xor
stos
mov
xor
cmp
add
jp,pt
sub
addr16
das
jle
xchg
aas
pop
popf
data16
aaa
test
cmc
rorl
mov
loope
int3
dec
ret
adcb
das
test
cmpl
mov
test
cmp
lock
imul
push
test
gs
cmpsl
clc
in
ror
pop
repnz
and
cmpsl
mov
test
fnstcw
loope
mov
int
nop
lock
sbb
cmpsl
setg
xchg
pop
pop
xor
inc
jno
aam
cltd
xchg
cmp
mov
cwtl
movups
in
cmp
and
xchg
dec
push
cmp
add
outsb
ficoml
pop
aam
and
stc
sahf
mov
cmc
test
pop
repz
adcb
stos
push
xchg
sarb
sub
out
test
jbe
jp
adc
xchg
fadd
jecxz
sahf
push
jbe
stc
jge
xchg
or
dec
pop
outsb
int
pop
adc
cmpsb
jo
sub
add
adc
inc
repz
mov
gs
mov
out
scas
lea
nop
mov
movsl
adc
mov
and
adc
cli
lcall
jp
insb
in
pop
aam
cwtl
pusha
lcall
jmp
lret
jl
pop
adc
sti
jbe
loope
mov
push
outsb
mov
in
mov
jp
xchg
popa
jle
cli
adc
les
inc
ljmp
leave
push
data16
enter
xlat
mov
in
fistpl
repnz
int
idiv
pop
aas
xor
jnp
loope
and
test
adc
add
aad
adcb
xchg
out
xchg
cmp
push
cmp
push
jbe
sbb
dec
jp
inc
xchg
mov
mov
xchg
or
pop
sbb
jg
xor
xchg
mov
push
mov
les
addr16
cmp
stos
lea
stc
jge
xchg
rcrl
jns
test
mov
bound
xor
mov
dec
test
rcrl
pushf
iret
ror
imul
mov
scas
dec
ret
xor
sbb
iret
and
pop
pop
and
dec
imul
adc
je
in
push
inc
mov
inc
in
leave
insb
mov
pop
inc
sub
xchg
mov
and
xchg
int3
push
out
sub
xchg
sbb
mov
shl
sub
and
jno
xlat
push
out
lcall
mov
add
xchg
xchg
ss
xor
cmp
les
sub
and
xchg
scas
ja
mov
out
sub
stos
data16
mov
repnz
outsb
cmp
xlat
jmp
mov
aad
dec
mov
ds
or
mov
stos
out
xor
cld
dec
rorb
xor
adc
int3
cmpsb
xchg
pop
mov
test
xor
fwait
out
mov
out
jb
fucomi
sub
cs
dec
gs
fisubrl
testl
pop
add
sbb
movsl
shrb
and
cmp
andl
pop
gs
and
mov
lret
inc
mov
in
aaa
add
repz
jo
mov
xor
jb
aad
sub
in
push
arpl
adc
std
pop
xor
rcrb
mov
dec
js
xor
nop
clc
aaa
mov
push
test
icebp
les
inc
mov
push
pop
addb
xchg
es
dec
lcall
pop
popw
cmpsl
xor
sarb
cs
and
xor
cwtl
popl
adc
lahf
arpl
push
bound
pushf
mov
sub
ljmp
cltd
xor
lock
ret
inc
ret
cmp
jl
je
aaa
and
int3
fisttps
int3
sahf
xor
loope
push
icebp
jae
iret
or
sub
mov
add
aaa
sub
sbb
es
jle
pop
std
fdivrl
dec
out
pop
aaa
jns
xor
stc
mov
sbb
icebp
ja
sub
fadds
sbb
insl
lods
bound
aas
cltd
mov
and
popa
das
pop
fnstsw
jnp
cmp
dec
xchg
inc
jl
inc
shll
pop
addr16
pop
cli
popl
lds
jno
push
push
dec
lahf
or
rcll
fnstcw
fbstp
or
push
into
dec
lcall
push
movsb
es
push
push
jbe
adc
int3
mov
loope
cmp
or
inc
enter
imul
adc
sbb
mov
mov
popa
scas
insb
mov
outsb
and
cmp
fcompl
cmp
add
inc
sub
inc
jmp
ds
and
in
popl
push
mov
mov
push
jecxz
jae
loope
test
andl
or
xlat
mov
fcoms
aas
fwait
arpl
sub
inc
lret
adc
nop
movl
pop
jno
aas
fucomi
pushf
fisttpll
lret
pop
dec
les
sarb
jns
iret
int3
das
sub
add
iret
out
dec
mov
pop
pushf
cs
sub
popa
out
popl
stos
sub
inc
adc
jae
std
pop
pusha
sbb
inc
daa
insb
dec
in
lock
xor
and
push
jae
ret
jmp
js
sub
xchg
scas
fisubrl
adc
frstor
jns
xor
in
es
imul
sub
aad
adc
incb
scas
push
adc
rol
cwtl
xchg
push
xchg
and
pop
lea
fmul
and
inc
adc
lods
push
xor
mov
fwait
push
push
and
jns
imul
inc
gs
iret
cmp
test
imul
sahf
insb
add
pop
int
add
sbb
aas
aas
and
cwtl
add
sbb
fnstsw
pop
dec
enter
les
loop
aad
inc
sti
xchg
jne
mov
adc
pushf
ficoms
mov
inc
testb
int
mov
push
inc
lret
pop
sub
ss
push
lds
xchg
and
inc
jl
subl
aam
in
test
rcrb
sbb
cld
mov
add
outsl
push
fiadds
les
xchg
xor
loopne
negb
repz
outsb
dec
lods
pop
loope
add
sbb
jns
pop
adc
sbbl
mov
popf
movsb
icebp
mov
pop
ret
push
cltd
cmp
jo
popf
adc
xchg
cltd
and
lods
mov
hlt
xchg
xchg
in
pop
jno
aad
xchg
pop
mov
add
and
jb
adc
or
lret
aaa
mov
pop
jl
pop
imul
xchg
aam
xor
ja
jae
inc
push
and
sbb
xchg
imull
cmc
mov
xchg
rcl
xor
push
jo
mov
push
lcall
dec
mov
imul
rclb
add
or
cltd
adc
lods
test
popa
sub
dec
xor
cmp
ss
or
ret
outsb
cmp
lods
ja
in
sub
shlb
mov
sub
enter
sub
shrb
pusha
xchg
mov
arpl
push
push
jp
cmp
fstps
in
andl
incl
pop
mov
cmp
xor
add
ret
pop
push
shl
and
inc
adc
jmp
jno
fildl
fs
fwait
mov
push
push
xchg
push
xor
xchg
jmp
lret
test
je
xor
and
sub
xchg
jp
lods
iret
inc
sbbl
into
sub
inc
add
or
pop
lea
or
rcrb
mov
or
add
fsubrl
les
mov
pop
push
int3
mov
cmp
in
jnp
les
test
push
jne
scas
xor
movsb
mov
xor
rorb
pop
jae
lcall
jle
xchg
mov
xchg
lret
push
sub
xor
push
aad
scas
pop
lret
stos
inc
inc
mov
arpl
enter
lods
int
cmp
add
decb
fs
push
mov
xor
stc
addb
icebp
push
inc
jae
aad
out
pop
lock
icebp
add
or
ds
insl
dec
mov
xchg
loop
roll
cmc
scas
test
xchg
add
test
jne
xchg
ds
loopne
gs
loope
rorb
lods
cmp
and
mov
or
sub
repnz
divb
fistpl
out
dec
pop
cwtl
andb
add
pop
js
jle
lahf
inc
sub
sti
jmp
xor
lcall
mov
enter
test
pop
dec
cmc
les
inc
xor
inc
push
sub
filds
out
addps
push
clc
cmp
lahf
es
inc
mov
popa
pop
fadd
cld
adc
mov
rcll
movsb
stos
cmp
cmp
sub
jl
mov
pop
sub
cwtl
lcall
fdivrl
mov
stos
xlat
xlat
cmp
enter
stc
jecxz
sbb
fs
jbe
mov
adcb
mov
fdivrs
pop
test
jp
push
stos
hlt
xchg
arpl
test
jecxz
ja
jnp
stc
add
xor
xor
push
clc
jle
push
inc
sub
fldl
mov
es
xchg
mov
andl
aam
sar
dec
repz
mov
sub
jb
jle
cmc
adc
cmp
xor
stos
or
not
cmc
inc
nop
mov
lret
or
stc
ss
in
push
jg
or
xchg
in
jnp
insb
sbb
es
arpl
jg,pn
add
sub
mov
out
adc
mov
and
or
cmp
jl
jg
popf
shrb
push
sti
mov
xchg
push
je
arpl
shll
dec
outsl
xchg
cmpsb
push
in
test
mov
sbb
inc
loope
push
xchg
fiaddl
mov
sub
or
push
push
xchg
scas
loope
nop
mov
xor
push
xor
rcr
add
pop
jge
mov
cld
inc
int3
push
out
repz
jns
mov
arpl
pop
inc
xchg
dec
xchg
dec
xlat
jle
mov
jbe
jg
arpl
xor
negb
shl
fcompl
adcb
int
mov
sbb
pusha
dec
pop
cmpsl
enter
pop
sub
sbb
mov
je
add
addb
mov
cs
xor
js
into
ficoms
insb
inc
ret
lods
push
sbb
shlb
pusha
mov
add
fwait
repz
outsl
dec
rorl
out
push
push
mov
fmul
sti
dec
ljmp
and
sbb
nop
sti
add
and
rcrl
sbb
push
cmpsl
loop
jmp
roll
jp
mov
or
ljmp
dec
jecxz
jne
test
pushf
and
mov
insb
xrelease
test
and
mov
leave
pop
mov
sbb
or
add
or
nop
adc
cmp
or
std
fidivrl
pop
shrb
jno
jp
pop
adc
call
dec
aad
jecxz
mov
das
mov
sbb
push
ja
flds
fxch
in
or
subb
adc
cwtl
jae
or
popf
jae
inc
mov
lret
or
ljmp
xor
movsb
cmp
sub
sbb
mov
lahf
lahf
cld
jecxz
jno
mov
xchg
test
or
sbb
adc
and
xchg
sahf
stos
xchg
mov
dec
das
daa
cmpsl
xchg
lcall
mov
stos
sub
push
xchg
pop
or
cmp
fistpll
or
es
lock
inc
xchg
xor
stos
jo
ljmp
add
mov
dec
lret
jo
faddp
gs
or
sub
shrl
in
pusha
imul
lock
out
cld
fsubl
ret
cmc
sub
ja
lea
add
xor
inc
cmp
mov
jle
nop
jmp
push
or
popl
jmp
mov
in
lods
stc
movsb
sub
pop
add
dec
inc
sbb
fcompl
fxch
pop
les
mov
jg
imul
div
in
insl
lahf
cmp
push
inc
fisubl
inc
fstps
stc
in
jg
sarb
test
sbb
popl
and
outsb
cmp
stos
inc
lea
push
mov
enter
push
xchg
cmp
jg
and
in
push
andb
das
and
mov
lds
or
mov
icebp
mov
leave
add
mov
ficomps
and
pop
lret
and
movsb
pop
jmp
scas
pop
mov
and
jae
adc
pop
es
mov
sbb
mov
xchg
pop
and
fdivrl
repnz
xor
push
leave
lcall
sbb
mov
shl
jns
sub
leave
icebp
rolb
aas
cmp
xchg
lcall
push
int
cmpsl
cmpsl
jl
movsb
ss
push
leave
fsub
jae
mov
fsubrl
call
xchg
shrl
ror
out
jbe
inc
sub
dec
mov
push
xor
push
test
dec
aad
push
sbb
and
scas
jge
sub
xchg
and
dec
aaa
fadds
scas
leave
mov
and
inc
lods
pop
inc
aam
push
je
cmp
jo
cmp
out
pusha
ljmp
xor
lea
mov
fcomps
sarl
dec
push
dec
mov
adc
loope
inc
sub
and
mov
mov
arpl
cmpl
insl
inc
testb
push
lcall
xor
jnp
push
dec
sub
dec
inc
hlt
pushf
jge
push
jp
dec
movb
sti
jl
mov
aad
pop
bswap
inc
dec
mov
mov
rorl
inc
int
sub
aas
adc
jp
add
pop
imul
out
sub
sub
std
dec
fs
mov
cmp
xchg
test
and
sub
stc
test
mov
cmpsb
faddl
rcrl
rcrb
xchg
aam
mov
xor
jecxz
std
gs
add
stos
movsl
mov
push
push
and
inc
cs
inc
pop
mov
cmpsl
ret
lcall
fst
fsub
jns
push
inc
outsl
jb
sbb
hlt
mov
inc
add
jp
push
or
int3
int
sbb
leave
pop
mov
fs
adc
repnz
hlt
cmpsl
inc
pushf
jg
cmp
fildl
push
mov
inc
mov
hlt
jg
out
test
jno
icebp
or
mov
xchg
test
mov
dec
int3
cmp
cmp
push
fisttpl
mov
xchg
mov
das
push
loop
or
iret
xlat
pop
pop
pop
inc
cs
popaw
int
dec
sbb
pop
pop
push
inc
inc
mov
mov
lret
mov
mov
xchg
xchg
test
insl
outsb
out
ja
push
xchg
lcall
pop
mov
out
cmp
jmp
popa
clc
pop
jbe
pop
add
loopne
pushf
jp
je
imul
call
outsb
inc
aaa
jns
pop
sub
mov
out
xchg
scas
movsl
fimull
insb
mov
cs
adc
jns
sbb
xchg
push
mov
pop
into
inc
push
pop
dec
cmp
xor
xchg
push
or
call
popa
cmp
outsb
insl
jo
and
iret
aaa
add
jb
adcl
mov
push
roll
and
cmpsb
xor
pop
mov
inc
movsb
cwtl
aaa
xor
sbb
pop
mov
xor
stos
lahf
rcl
lods
dec
push
rcrb
ss
push
pusha
cmp
add
movsl
xchg
out
or
mov
jl
or
je
sti
ja
mov
lahf
fimull
pop
xchg
test
pop
ljmp
data16
gs
and
cmpb
or
dec
shrb
push
mov
ljmp
adc
push
das
jno
dec
scas
nop
or
cmpsb
pop
or
xchg
scas
insl
pop
dec
nop
xchg
sarb
xchg
add
inc
push
add
xor
push
popa
push
mov
out
ffreep
mov
cmp
jb
jg
sbb
mov
test
mov
push
ljmp
jnp
popf
sub
rorl
sbb
js
dec
clc
push
inc
dec
push
lods
testb
fimull
jno
mov
dec
rcrl
push
mov
scas
mov
adc
cmpsl
jbe
xchg
fisubl
mov
es
push
testl
test
mov
cmp
xchg
cmp
sub
push
pop
mov
push
add
ret
ret
cli
icebp
sar
inc
xor
inc
inc
jle
xor
mov
dec
and
or
ljmp
pop
rolb
xor
and
sub
sbb
xor
das
ret
sbb
cmpb
mov
ficoml
mov
adc
mov
idivb
loope
sub
lds
scas
shl
out
jecxz
adc
fnstcw
je
cmpsb
xor
cld
adcl
sbbb
fwait
mov
sbb
cmp
insl
cmp
pop
lock
bound
enterw
pop
popa
dec
movsl
add
xchg
aaa
imul
jge
rorb
xchg
xlat
jnp
stc
lods
sbb
pop
adc
push
ljmp
inc
stc
fcmovnb
movsl
xor
adcb
scas
mul
inc
rclb
pop
mov
ljmp
mov
cmpsl
fdivs
test
adc
mov
addb
dec
adc
push
int
dec
push
cmp
sarl
and
cmp
fcoml
xchg
into
addb
rorl
jae
daa
lea
rcpps
and
scas
sub
cmp
cli
or
out
sbb
stc
stos
stc
aas
mov
jbe
lods
fsubrs
sub
int
pop
push
into
dec
imul
jge
dec
xchg
xlat
idivb
cvtps2pd
push
out
imul
and
mov
test
lret
sbb
or
popf
lahf
add
test
xorl
repz
push
fidivl
adc
pop
mov
out
nop
xorl
add
sahf
cs
loop
and
and
nop
cld
mov
xchg
xor
mov
into
jne
adc
fstl
mov
and
mov
cmp
aas
pop
mov
xchg
cmpsl
add
test
fnstcw
mov
cltd
and
js
es
add
xor
xlat
lea
mov
das
leave
xorl
xor
fnstenv
lods
lahf
push
bound
mov
jge
jp
test
sub
int
mov
call
iret
fcmovu
mov
inc
jg
inc
adc
cmp
out
mov
jnp
xchg
sub
jmp
dec
mov
inc
bound
mov
shr
mov
ret
jecxz
pop
pop
dec
insl
mov
stos
jmp
and
adc
fs
inc
mov
inc
cs
addr16
cmp
aas
jb
sti
movsl
in
add
cltd
repz
pop
lods
or
sub
inc
in
inc
bound
sub
sbb
xlat
mov
lret
lds
stos
dec
add
ss
std
inc
xor
lea
out
and
xor
int
mov
jp
lods
dec
je
add
out
adc
inc
pop
jge
add
mov
sbb
aaa
in
imul
lock
inc
stos
imul
inc
cmp
ss
cli
rorl
xchg
inc
sub
pop
adc
jecxz
lahf
inc
lret
and
and
jb
mov
lock
inc
arpl
adc
pop
cli
ficomps
dec
insl
pop
mov
mov
push
in
jle
cli
into
jmp
and
xor
cmc
jno
icebp
je
jns
addr16
or
into
out
clc
repnz
cld
ret
std
outsb
inc
lahf
ljmp
and
jle
add
jecxz
sub
cmp
mov
push
xchg
pop
les
sbbb
add
and
or
dec
lcall
das
mov
fs
xchg
mov
dec
lret
jne
mov
mov
mov
sub
mov
mov
daa
aad
lods
dec
nop
fisttpl
clc
sbb
push
movsb
sbb
imulb
jmp
cmp
das
mov
jbe
scas
dec
xor
add
push
out
adc
test
adc
mov
ja
or
xchg
sahf
and
mov
xchg
add
out
sbb
or
inc
and
sbb
fnsave
mov
test
mov
clc
out
enter
imulb
add
pop
add
into
xor
pop
ds
stos
rclb
fstps
fs
add
pop
jmp
inc
xor
push
lss
cmp
mov
lret
js
fs
outsb
jg
push
sub
lods
subl
mov
sub
aam
stos
mov
pusha
lea
fs
imul
or
mov
xchg
and
ja,pn
call
mov
lcall
fsubrp
mov
ret
mov
outsb
jae
mov
pop
mov
xor
pop
mov
sbb
sbb
test
push
cmp
fidivs
subl
sub
outsb
fwait
cli
mov
imul
lea
shll
cmp
jp
das
dec
xchg
xor
mov
dec
and
test
sbb
jg
xchg
jns
scas
orl
mov
movsb
movsl
cli
sub
nop
add
xchg
pop
xchg
add
test
scas
cmpsb
divl
add
and
addr16
pushf
xor
mov
jb
icebp
mov
push
sub
mov
rol
lahf
mov
loopne
xchg
movsl
push
jb
std
mov
dec
iret
push
imul
push
pop
mov
mov
shl
jecxz
lret
aam
or
ret
jecxz
push
lock
adc
out
fcmovbe
fdivp
inc
push
lods
ret
mov
insl
xchg
or
popa
test
jo
lock
sub
mov
sbb
in
add
out
into
mov
cmp
mov
imul
aaa
push
cmc
or
xchg
jns
stos
add
repz
jmp
ficompl
and
xchg
popf
or
aas
out
ror
stos
dec
push
subl
and
dec
adc
insl
adc
out
xlat
cltd
fbld
into
pop
stc
and
jb
rolb
mov
movsb
repz
decl
adc
cmp
add
pop
js
sub
adc
popf
xor
aad
jmp
jo
mov
divl
adc
push
clc
mov
insl
fisubrl
dec
xorb
movsb
lds
dec
imul
push
out
orb
loope
mov
outsb
mov
inc
cmp
out
add
fs
out
movsb
adc
jne
mov
pop
les
push
mov
clc
pop
std
testb
dec
mov
add
xchg
cmp
lea
fistpl
jmp
xor
cld
jecxz
loop
push
mov
bound
js
test
xchg
and
icebp
cld
pop
sub
inc
shlb
mov
pop
mov
scas
ror
push
in
shll
jl
outsl
sbb
inc
fwait
jp
fnstenv
out
addb
ficoml
hlt
inc
dec
into
or
stos
and
lahf
daa
js
adc
xlat
sub
dec
enter
or
lret
cmp
adc
insl
and
sbb
jno
fnstsw
lcall
imul
bound
sbb
ret
add
or
and
sub
push
xchg
rcll
dec
push
xchg
cmp
orl
out
cld
adc
aam
pusha
push
aam
mov
mov
cmp
out
in
ja
push
jne
jno
stos
dec
add
push
add
jb
in
movsl
aas
push
aaa
lahf
imul
xchg
repz
xlat
lods
sbb
mov
nop
mov
fbld
insb
ffreep
stc
sub
jl
cmp
pop
adc
ja
je
je
lret
sti
or
mov
cli
and
or
pop
sbb
dec
cmp
out
scas
pop
mov
mov
lock
jae
ja
mov
push
xor
movsl
pop
das
int3
dec
sub
add
notb
pxor
cld
pushf
mov
mov
jo
xor
xchg
push
and
adc
pop
rcrl
jae
push
dec
lcall
jge
add
int
fstpl
stc
lret
pop
fwait
cltd
pop
adc
into
adc
inc
inc
je
icebp
orb
jo
xor
adc
xchg
cmp
in
pop
in
lret
outsb
dec
adc
ja
xor
les
mov
pop
out
in
lahf
aad
mov
push
jle
out
push
xchg
ljmp
sbb
sbbl
outsb
movsl
stc
xor
xor
cmp
pop
loopne
fwait
cmp
adc
push
cmp
mov
lods
cmc
aas
cmpsl
int
mov
loope
leave
cmc
jo
gs
add
stos
lcall
cmp
xlat
inc
dec
ja
ret
aas
cmp
popa
out
cmpsl
and
mov
push
jecxz
push
mov
pop
cmp
out
lods
loope
lret
sbb
ss
scas
js
ret
fcoml
ds
xchg
xchg
mov
arpl
mov
xchg
rcl
hlt
mov
sahf
and
pop
xor
js
jle
mov
or
mov
jno
lahf
stc
pop
popf
mov
xor
jae
loop
adcb
fildl
loop
xor
outsb
hlt
push
loope
push
xor
sub
out
push
jne
push
mov
cmp
mov
adc
movlps
jns
xchg
cltd
fcompl
lods
adc
adc
fmuls
xchg
fdivrl
dec
mov
and
stos
dec
lret
rolb
inc
in
cwtl
addr16
je
outsl
repz
dec
inc
jno
into
add
pushf
rcll
fcoms
imul
jle
outsl
movsl
ss
push
enter
dec
repz
lea
mov
movsl
outsl
aaa
pusha
in
mov
lret
repz
xchg
or
or
mov
imul
mov
jns,pn
dec
rol
in
scas
xchg
xor
js
repz
xor
xchg
jno
sub
dec
ret
xchg
test
js
inc
lcall
cmc
jl
std
cs
rcrl
push
adc
jl
mov
rcl
mov
lods
mov
bound
movsb
mov
insb
ficompl
nop
mov
or
push
in
and
movsb
pop
xchg
or
mov
imul
movsb
addb
pop
xor
or
repz
push
cmpl
cmpsl
lock
push
xlat
sahf
sub
aaa
std
test
mov
repnz
imul
mov
int
pusha
push
cmc
mov
xchg
fildll
inc
inc
push
test
push
aas
add
pusha
jl
adc
push
mov
inc
fisubrs
gs
cmp
mov
dec
gs
and
lahf
adc
jb
and
cs
divl
ja
pop
addr16
in
aaa
out
pop
fwait
ljmp
js
mov
cmp
les
sub
in
cmp
cmpl
cmp
pop
es
sub
dec
mov
adc
ja
adc
sbb
je
nop
adc
adc
scas
inc
xlat
notb
push
or
or
insb
add
fs
lret
or
mov
out
ss
xor
pusha
pop
mov
loop
inc
data16
cmp
pop
or
or
xchg
xor
pusha
subl
ret
adc
pop
cld
or
rorb
loope
mov
inc
flds
add
mov
leave
pop
jbe
pop
jne
in
ret
sbb
mov
roll
das
insb
xchg
pop
divb
lods
cmp
jb
push
lds
jmp
cli
rol
cld
jge
and
stos
push
scas
push
loope
sbb
sbb
mov
xchg
filds
leave
pop
in
inc
out
std
dec
aam
jne
mov
cmp
mov
lock
jne
add
ljmp
xchg
aaa
inc
int3
and
fstpl
jmp
mov
subl
cmp
and
jmp
dec
and
pushf
adc
inc
mov
mov
aas
test
inc
cmpsb
or
xor
lds
xchg
testb
and
adc
inc
push
and
out
outsl
xor
pop
lds
stos
enter
jne
mov
mov
lods
in
outsb
sbb
jb
mov
xor
pop
data16
shrb
adc
mov
push
in
pushf
cmp
dec
xor
aaa
jp
mov
push
or
or
aas
std
add
inc
loope
push
shr
push
clc
pop
fiaddl
xlat
shlb
xlat
push
int
repnz
pop
jb
repnz
mov
sub
cwtl
idivl
add
xchg
and
xor
mov
mov
mov
jp
adc
cmc
mov
mov
inc
aam
gs
cmp
je
pop
out
jbe
mov
hlt
cmp
and
xor
insl
jns
dec
aas
xchg
xchg
adc
call
ljmp
mov
fistpll
inc
pop
into
ss
rorl
pop
cmp
pop
push
in
int
repz
arpl
dec
dec
or
mov
jbe
inc
loop
fsubrs
in
scas
pop
xchg
outsb
incb
push
jae
shl
rolb
dec
mov
mov
and
fdivs
cmp
aad
xor
dec
test
dec
adc
add
call
xchg
pop
xor
fstl
ss
or
pop
cwtl
mov
je
out
jbe
lods
adc
aam
aaa
mov
jne
mov
or
repnz
cmp
xorl
cmpsb
adc
xor
bound
or
fisubl
loopne
push
imul
mov
jno
cli
add
fdivrs
pop
in
xor
xchg
sbb
add
pop
clc
ss
subl
sbb
push
push
jae
movsb
jno
hlt
cli
mov
fildll
xor
sbb
movsl
adc
jae
pop
daa
pop
movsb
pop
lea
cmp
sub
lods
test
xorl
fisttpll
mov
rolb
ljmp
mov
dec
lahf
cld
xchg
mov
pop
mov
int
test
mov
lcall
fsts
cmp
negb
mov
jle
pushf
dec
xor
std
add
ret
xor
fcompl
mov
int3
and
mov
popf
add
jbe
fnsave
xchg
inc
std
or
cmpsb
push
add
test
jmp
jnp
xor
or
testb
cmpsl
inc
sub
push
dec
sti
mov
push
push
aas
dec
jle
and
cs
sti
dec
mov
jecxz
test
and
shrb
hlt
loop
mov
mov
mov
cmp
sarl
insl
mov
test
mov
lds
insb
add
hlt
cmpsl
xchg
cli
dec
gs
xchg
sub
cli
nop
bound
pop
arpl
add
or
gs
out
stc
aam
or
cltd
mov
aaa
add
or
btc
repnz
imul
dec
and
mov
out
add
dec
lahf
cs
ss
cli
mov
jnp
mov
lock
ss
mov
sub
sbb
jne
jno
xchg
in
cmc
in
adc
push
shll
inc
cwtl
xchg
mov
es
cs
loopne
sbb
adc
jno
and
sub
int
frndint
fistpl
push
add
mov
mov
xor
andb
inc
push
negb
scas
test
fldcw
xchg
and
jp
adc
pop
and
xchg
cwtl
adc
xchg
dec
xchg
cmpsl
sbb
push
mov
lods
pop
cld
popa
in
shlb
cs
in
add
push
imul
aaa
mov
sti
cmp
rorl
adcb
fildll
lret
mov
push
dec
push
push
mov
out
dec
inc
and
cmp
jne
negl
jmp
mov
dec
in
cmp
pusha
jns
adc
cmp
jo
jle
cmpsb
sub
cmp
es
imul
les
in
xchg
sbbb
jbe
and
jecxz
xchg
stc
jnp
xor
push
add
mov
xchg
rep
shll
sub
push
push
push
mov
sahf
mov
mov
cmpl
pop
or
xchg
add
stos
inc
jb
dec
popf
sbb
add
dec
insl
mov
out
movsb
push
fwait
jns
ds
repz
in
push
hlt
out
sub
fmuls
int
push
enter
outsl
outsl
or
jge
xor
lods
cmc
dec
jmp
mov
sahf
decl
push
sub
imul
add
pushf
cmp
mov
sub
pop
ret
adc
jbe
dec
mov
dec
iret
sar
jb
sbb
arpl
js
xorl
inc
das
out
lea
ret
dec
add
repz
test
test
xor
inc
adcl
xchg
mov
push
inc
out
leave
push
and
test
aas
xor
sbb
inc
jge
popf
push
das
mov
arpl
push
or
dec
rol
fs
dec
cltd
push
jle
push
lods
repnz
xorb
add
idivl
add
mov
push
test
xlat
jge
inc
jo
push
pop
xor
aad
fwait
or
pusha
and
push
pop
push
cmpsl
loopne
bound
and
sarl
roll
incb
subb
rcl
push
pop
xlat
pop
add
xchg
dec
arpl
cmpsl
push
jp
mov
in
sbb
mov
adc
inc
fisttps
enter
shrb
push
dec
addb
or
enter
mov
popf
sub
dec
push
bound
fbstp
pusha
and
mov
or
add
push
mov
sub
mov
push
jle
ja
mov
pop
outsl
cmpsb
add
cli
add
mov
inc
adc
xchg
inc
inc
repnz
mov
pop
dec
mov
push
fisubs
ljmp
aaa
dec
orb
add
sub
ds
or
xor
es
je
sbb
aam
sbb
aam
mov
xchg
cmp
and
cs
xchg
cmp
mov
add
jp
rcrl
xor
in
pop
add
pop
push
xchg
arpl
mov
sbb
add
push
ret
or
icebp
lea
bound
or
insb
push
jge
add
hlt
das
fdivr
mov
pop
mov
mov
rclb
and
adc
scas
sbb
add
loopne
xchg
imul
cli
add
ds
inc
push
int3
mov
mov
loope
stc
out
mov
cld
es
xor
sbb
shrb
xchg
in
outsl
xor
fstps
in
jo
aas
push
aam
push
and
orl
gs
aaa
sahf
out
adc
push
xchg
jmp
xchg
fdivrp
je
mov
into
mov
setge
adc
sahf
subl
mov
sub
inc
mov
xor
jbe
rcll
mov
sub
dec
in
call
pusha
mov
inc
fistpll
inc
ljmp
jo
jbe
xchg
jg
movsl
aas
cmp
lret
mov
rcl
or
push
add
std
vmwrite
adc
lods
lret
int
test
pop
add
out
cltd
cmpsb
xchg
stc
and
sub
fmulp
fst
out
loope
out
sbb
cltd
inc
jmp
inc
and
in
cmpsl
pusha
dec
or
push
xor
ljmp
movsl
rorb
imulb
mov
lock
repnz
lahf
daa
mov
push
jg
dec
jns
jb
fwait
notl
push
jns
cld
mov
dec
mov
andl
sbb
cwtl
jge
push
cmpsl
sbb
leave
test
push
push
sub
fdiv
notl
xchg
push
fwait
pop
popa
mov
inc
pop
adc
lret
pop
mov
push
lds
xlat
xor
xor
imul
jmp
or
outsl
mov
cli
pop
aad
lods
sub
je
mov
mov
push
push
pop
lea
push
into
cwtl
inc
adc
sub
test
lds
out
push
mov
cmp
pop
xchg
orl
imul
push
scas
jbe
cmp
push
test
dec
out
orb
xchg
mov
sub
mov
out
iret
sub
loopne
mov
lahf
into
xchg
aad
cwtl
mov
cmpsb
add
repz
add
dec
push
int3
sub
lods
outsb
sahf
fdecstp
xor
cmp
pop
cmp
pop
xchg
gs
push
jbe
sbbb
outsb
xchg
data16
mov
xlat
fstl
sarb
arpl
adc
add
testb
hlt
mov
imul
jnp,pn
js
in
mov
add
dec
mov
incb
and
cmpl
mov
dec
shl
das
call
aad
xchg
pop
outsb
scas
mov
and
mov
scas
stos
cltd
mov
jno
xor
dec
lock
push
jecxz
sub
dec
dec
sti
fsubr
sbb
mov
lock
cmp
js
or
out
xor
daa
pop
lods
lea
inc
push
adc
ret
outsl
push
incb
cmpsb
stos
cmp
clc
sbb
mov
mov
xor
mov
out
or
sbb
fisubrl
shll
pminub
mov
out
jb
adc
fildl
xchg
jp
out
cwtl
sub
xchg
pop
mov
jle
pop
lret
ret
xchg
out
sub
shl
sub
inc
jle
lock
xor
xchg
out
enter
push
cmpsb
orb
sbb
jl
adc
cltd
mov
mov
rol
dec
imul
insb
sub
inc
jecxz
jae
dec
and
ret
sbb
cltd
push
xchg
add
fucomi
inc
cmp
stos
les
pop
stc
adc
mov
add
mov
lods
xchg
outsb
or
cmc
ret
test
push
cmp
sbb
loop
push
test
fstpt
xlat
or
popa
lret
fcoml
gs
xor
js
xor
cs
loope
xchg
pop
pop
xchg
push
out
test
mov
outsl
push
jmp
das
and
inc
cmc
fcmovnu
push
fs
or
sti
mov
aam
cmpsb
mov
and
pusha
das
push
and
jmp
dec
mov
pop
or
scas
cmp
mov
stc
int
push
push
movsl
push
jbe
pop
cmp
xlat
inc
xchg
repz
xor
fwait
adc
loop
jbe
cmp
push
das
or
lds
pushf
outsl
add
fdivr
dec
ljmp
sub
inc
inc
adc
lods
es
aaa
std
testl
jb
cmc
xor
arpl
jp
loope
fcomps
repz
add
aas
outsb
dec
aam
mov
add
loopw
inc
mov
xor
insb
pop
inc
sbb
adc
inc
les
pop
dec
lea
add
ret
int
push
sbb
lret
and
cmp
popf
int
pop
mov
and
test
sub
xchg
jnp
leave
fimull
loopne
add
mov
cmp
les
pop
iret
andb
mov
es
adc
jae
and
in
or
sbb
add
bound
ds
divb
fsubrl
xor
loopne
xor
pop
dec
outsb
mov
xchg
stc
jecxz
xchg
sub
das
mov
mov
mov
roll
sbb
pop
xor
loopne
push
in
jb
sbb
mov
dec
jns
addl
cld
mov
push
jo
test
stc
je
jg
dec
mov
mov
inc
and
dec
sub
fyl2x
scas
test
pusha
outsl
push
sub
jne
adc
sub
sahf
imul
loop
clc
outsb
out
sbb
fwait
cld
push
outsl
ret
push
jmp
inc
inc
inc
jo
rcl
jns
sbb
cltd
lods
xchg
push
mov
loop
stos
fadds
and
or
xchg
lods
cmc
pop
add
stc
clc
jle
test
stc
sbb
jmp
push
fiaddl
push
inc
fwait
inc
dec
test
adc
mov
xor
test
mov
mov
mov
add
stos
add
frstor
mov
out
loopne
int
lret
test
iret
sub
push
out
xchg
movsl
insl
mov
cld
mov
inc
stos
outsl
inc
xchg
call
aaa
nop
sub
mull
cmpsb
jge
adcl
sar
mov
mov
inc
add
sbb
mov
outsb
sti
rsqrtps
dec
test
xor
xchg
outsb
jne
mov
pop
out
push
fs
jb
fsubrp
xlat
adc
xor
mov
mov
inc
cmpsl
in
dec
xchg
clc
cmp
push
dec
clc
adc
in
xorb
out
je
sub
leave
les
lds
push
divb
mov
push
out
loope
cwtl
sbb
xchg
lret
notl
push
or
and
clc
push
cmp
lea
dec
and
cmp
mov
cld
mov
movsb
ja
mov
inc
imul
inc
int3
mov
lret
dec
cmp
idiv
cmpsl
lcall
popf
test
outsl
inc
subb
dec
test
or
loop
jecxz
insb
cs
mov
bound
loop
xchg
shl
xchg
movsb
shl
mov
pop
cmp
neg
mov
lea
jl
cmp
cmp
pop
mov
pop
jnp
adc
clc
or
mov
cli
out
imul
push
mov
push
ds
dec
imul
xlat
sbb
sub
test
xor
call
fstpt
test
rcrl
data16
out
adc
fisubrs
fadds
xor
mov
loope
iret
or
xchg
jae
je
fldt
js
inc
stc
je
push
hlt
mov
pop
insl
mov
adc
dec
icebp
aas
push
pop
negl
jmp
mov
mov
clc
dec
jmp
mov
adc
test
and
in
cmpb
xor
sub
fs
and
push
xchg
ret
add
dec
stos
popa
jne
adc
iret
and
mov
ljmp
adc
xor
fmull
stos
jne
inc
adc
jg
outsb
repnz
mov
xor
pop
adc
dec
imul
cmc
shlb
fsubrl
clc
cli
pushf
jle
orl
jo
mov
leave
push
loope
add
push
pop
jae
dec
scas
rol
mov
xor
nopl
shr
xor
jbe
and
cmp
call
in
pop
data16
stos
hlt
sub
int3
and
dec
cmp
sub
pop
and
mov
xorb
xchg
xor
push
sbb
cmp
xor
jnp
xor
or
fdivr
jge
jge
xchg
pop
cld
cmp
jl
mov
rcl
aas
xchg
cmp
inc
stos
popa
out
repnz
sti
sub
push
lds
fnstcw
into
in
adc
gs
int
jbe
fcomi
stos
mov
cltd
push
sbb
movsb
rol
cmpsl
add
add
sub
adc
enter
jne
xchg
mov
lods
pop
popa
std
or
jmp
inc
and
gs
mov
jnp
jp
dec
and
insb
aaa
cmpsl
or
pushf
cmc
and
mov
jb
test
jbe
xor
gs
test
push
adc
outsl
cmp
push
test
movsl
aas
clc
sahf
cmp
mov
pop
jae
jne
shld
dec
out
test
mov
dec
cmc
mov
aad
in
add
leave
or
pop
xchg
cmp
xor
shrb
mov
or
pusha
hlt
and
mov
jne
and
xor
push
out
sub
push
or
pop
std
leave
pop
mov
dec
rolb
loop
cmp
and
in
mov
popf
call
mov
pop
shrl
lcall
call
jnp
add
pop
lret
add
push
mov
clc
jne
dec
jnp
rcrb
push
ss
in
popf
in
push
or
sarl
push
cmp
mov
or
mov
xchg
std
cmp
pop
or
cmp
adc
and
les
in
imul
cld
sahf
sub
or
sub
rclb
jo
xor
aas
push
icebp
es
std
mov
fbld
cmp
out
push
dec
mov
aad
pop
fstps
or
mov
cmp
adc
sub
shlb
inc
pop
movl
call
sbb
jns
stos
lods
addr16
out
shlb
fisubrl
pop
aad
hlt
xor
and
les
push
testl
xor
dec
pop
add
aam
icebp
std
ljmp
push
cmp
xor
in
push
sub
and
pop
mov
inc
fistpll
int3
pusha
mov
sub
jnp
pop
or
pop
mov
inc
dec
xchg
inc
nop
jle
mov
and
dec
sbb
fadds
test
dec
jo
mov
dec
ret
jb
repnz
jo
sahf
lods
sbb
jne
and
sahf
movsb
cmp
pop
rcr
insl
outsb
lock
jl
fmull
lds
and
mov
sar
test
mov
jmp
mov
or
cmp
inc
rorl
ds
mov
jne
or
repnz
inc
cmpsl
jecxz
pop
dec
xchg
cs
mov
popa
stc
lret
push
popa
cld
in
popa
js
push
pop
dec
scas
dec
sub
stc
fnstenv
mov
sub
dec
enter
or
das
in
pop
push
in
and
mov
subl
popa
mov
dec
sub
std
push
pop
loopne
inc
mov
sbbl
sub
ret
cmp
cmp
or
xchg
fwait
cli
xchg
outsl
enter
xchg
xchg
rclb
or
fdivs
adc
lret
xor
lret
mov
xchg
pop
in
jg
fdivp
int3
shrl
xchg
inc
loope
notb
into
push
shlb
push
sbbb
push
mov
cmp
mov
or
dec
inc
bound
xor
cmp
cmp
add
inc
dec
test
adc
cmp
and
fnstsw
fmull
add
je
popa
xor
bound
xchg
loop,pn
aas
pusha
sarb
mov
aas
dec
mov
jns
addr16
xor
sti
cltd
in
or
mov
dec
adc
cmp
into
jmp
andb
and
inc
cmp
cmpsb
enter
cmp
cmp
jo
mov
ficomps
movsb
sti
nop
and
call
test
sub
pushf
push
xchg
aas
xchg
clc
push
outsb
dec
pop
shl
pop
mov
xchg
fisttps
xchg
mov
les
leave
fmuls
fwait
repnz
sbb
sbb
test
jns
sbb
mov
lods
ret
push
jne
push
es
test
and
clc
add
jbe
mov
in
jae
nop
adc
inc
arpl
jl
sahf
fwait
sub
dec
jno
mov
iret
xorl
jo
mov
movsb
fdivl
subb
pop
ds
mov
mov
sub
rolb
int3
pop
sub
sbb
and
repnz
mov
cwtl
aad
dec
cmp
test
xchg
inc
notl
push
leave
jno
icebp
adc
lret
and
cmp
add
adc
sub
insl
test
sbb
shr
out
rcll
lea
push
mov
xor
adc
and
lret
std
gs
sub
adc
jle
mov
stc
inc
gs
ret
andb
les
jo
push
xor
outsl
mov
jne
outsl
repnz
insb
cld
call
cmpsl
and
pop
mov
and
out
inc
jno
insb
data16
push
mov
cmp
xorb
xor
xchg
lea
arpl
pop
clc
dec
sbb
fs
rorb
add
loopne
sbb
mov
mov
in
jne
dec
sub
js
jmp
scas
les
sbb
divl
in
arpl
and
lea
adc
or
subb
daa
jmp
imul
push
mov
and
filds
jnp
lods
stos
sub
out
jns
dec
add
add
stos
mov
mov
test
movsb
mov
xchg
mov
lea
cltd
mov
stos
add
sbb
in
mov
xor
ja
fidivrs
sti
outsb
into
rolb
icebp
mov
aas
rclb
sbb
sbb
jne
push
aad
xor
jne
loope
inc
lock
jecxz
mov
xor
ds
cli
inc
lods
push
add
or
gs
jnp
loope
fmull
mov
push
jmp
add
pop
jns
ja
fstps
mov
aas
sahf
push
or
add
arpl
xchg
push
mov
aam
int3
xchg
in
call
pop
inc
in
loopne
insb
fs
cli
mov
movsb
push
scas
lcall
pop
push
cli
xchg
push
push
daa
xchg
and
push
aaa
cmp
fisttpl
cmp
repnz
inc
lcall
sbb
push
xchg
pop
sbb
or
les
into
cmp
cld
add
push
mov
nop
inc
dec
xor
aam
dec
or
fwait
scas
xor
fdivr
sti
sub
adc
subl
stos
lea
adc
fadd
mov
les
movsb
ljmp
out
adc
xor
xchg
sbb
outsl
xchg
sbb
xchg
cmp
js
addr16
xchg
data16
xchg
xchg
aas
jns
jae
sub
cs
pop
xchg
mov
fcompl
shrl
mov
mov
or
push
lret
jl
cmc
pop
push
cmp
mov
jnp
mov
loope
decb
pop
lods
iret
dec
cld
dec
fldl
mov
int3
int3
je
or
pop
dec
jmp
push
js
sbb
pop
loope
test
pop
adc
cmp
cmpsl
stos
test
cli
fdivrp
push
xchg
xchg
xor
mov
out
shr
dec
mov
push
lcall
jne
cmpsb
push
imul
sub
xchg
es
jnp
stos
xchg
fdivrl
xlat
mov
inc
mov
in
cmp
mov
cli
sub
or
xchg
fildll
les
out
js
cltd
cmp
rol
push
mov
mov
rorb
arpl
cmp
dec
test
icebp
and
and
mov
adc
xor
inc
ljmp
iret
inc
sub
std
into
xchg
mov
mov
fimull
jcxz
dec
pop
pop
fimull
loopne
xor
loope
cmpsl
cmp
imul
lret
and
sub
call
inc
mov
cmp
mov
rcrl
fs
mov
packsswb
fldl
arpl
inc
mov
adc
pop
xchg
and
lret
inc
ret
push
xorb
push
insb
cmpsl
xlat
mov
cli
testb
jmp
fdivl
lret
sub
daa
dec
mov
mov
sarb
cli
repz
cs
pop
pop
cmp
lcall
mov
lcall
fdiv
popf
pop
pop
adc
arpl
mov
jle
aam
call
cmp
push
pop
add
mov
test
out
fstpl
jmp
and
stc
or
xchg
push
mov
inc
mov
insl
div
loope
pop
sbb
ja
jge
jb
jp
repz
in
jb
rclb
sbb
adc
not
cmp
push
or
mov
dec
push
xchg
mov
mov
lds
and
sub
add
cmp
xor
jb
mov
loop
dec
leave
mov
jnp
outsl
test
sbb
mov
push
or
xchg
scas
leave
icebp
mov
insb
adc
mov
add
cli
push
sbb
add
or
dec
stos
in
and
vprotq
jo
push
mov
shlb
and
pop
es
add
int3
test
inc
cmpsb
push
sbb
leave
fdivrs
xor
int
mov
les
ror
mov
mov
mov
mull
addr16
pop
jge
lods
and
mov
xchg
pop
xchg
subl
lods
xchg
insl
in
dec
mov
and
cli
jg
and
cmpsb
jg
insb
push
cmpb
cmc
or
loop
cmp
pop
lods
roll
pop
xor
inc
fmul
icebp
push
popa
sub
inc
stos
in
cmp
sub
test
aam
xor
sbb
and
xchg
jl
xor
mov
add
mov
and
dec
pop
sti
sub
jno
jae
adc
xor
xchg
push
out
push
adcl
mov
cmp
in
cli
pop
es
jo
xchg
cwtl
cmp
inc
mov
cltd
pcmpgtw
lods
inc
sbb
and
or
push
gs
das
mov
lahf
lea
std
mov
mov
fwait
mov
outsb
aas
icebp
dec
jo
jns
ret
jo
cmp
jo
pop
in
frstor
jbe
lock
iret
test
aad
ret
xlat
dec
add
lea
xchg
mov
loopne
xchg
mov
mov
and
pusha
mov
ljmp
rorb
les
pop
popf
jge
inc
sub
and
push
dec
or
mov
sahf
enter
push
nop
in
aam
pop
sar
push
enter
lods
dec
mov
hlt
imul
lcall
dec
imul
push
fwait
inc
or
pop
push
push
mov
test
fbstp
jnp
xor
push
xor
ds
popf
in
dec
and
out
or
inc
pop
pushf
dec
stc
add
or
nop
dec
push
mov
fsubrl
or
cmp
add
sub
xchg
rcll
push
xor
dec
lock
ret
fstps
pop
xlat
fmul
aam
loope
cli
mov
mov
sahf
jbe
cmp
inc
xchg
ret
clc
jle
pop
jnp
inc
lods
addr16
mov
loope
or
ret
add
push
cmp
inc
mov
xor
lahf
jne
cmp
jmp
lcall
xchg
xor
les
fldln2
test
negb
test
in
adc
mov
test
fcmovnu
or
in
lret
add
pop
cli
add
arpl
sub
sbb
movsl
sahf
dec
xorb
outsb
hlt
clc
movntq
aas
leave
xchg
test
mov
fwait
pop
aaa
dec
jle
iret
xchg
push
ret
adc
orb
stos
jbe
in
pop
pop
lods
adc
test
sub
sbb
les
gs
adc
sbb
cli
adc
out
insb
icebp
es
out
cld
or
insb
mov
jge
cmp
or
loop
push
pop
das
push
js
dec
xchg
push
and
or
imul
stos
xchg
jp
stos
jmp
jnp
cmp
lahf
pop
test
mov
mov
data16
cmp
xchg
mov
mov
dec
pushf
addl
push
xorl
sub
lret
scas
mov
add
mov
notl
lcall
push
sar
dec
cmp
cmp
and
fimull
sahf
or
fdivs
out
lret
roll
daa
cmp
dec
pop
shll
out
das
fmull
ss
cmp
rolb
jg
pusha
outsl
jae
add
pusha
flds
adc
jnp
js
das
faddl
jecxz
fadds
cli
mov
fdivrl
cmp
pop
jl
loop
popf
mov
and
das
jno
inc
bound
xor
push
pop
xchg
scas
fs
hlt
imul
xchg
add
adc
or
test
dec
xchg
add
rcrb
mov
pop
idivb
shll
mov
in
cmpb
dec
mov
xchg
xchg
add
push
call
push
mov
lock
cmp
rolb
mov
jb
xchg
es
pop
push
repz
jp
shlb
lods
push
and
mov
add
mov
int3
aad
shl
lds
or
aas
xchg
ja,pt
and
rolb
xor
pop
inc
xchg
por
mov
test
fs
fwait
out
push
inc
mov
int
or
jns
and
xor
mov
push
fisttpll
jecxz
inc
xor
xlat
fnsave
xchg
ret
ljmp
mov
xorl
cmp
push
movsb
mov
jb
aad
pop
cmp
arpl
rcr
pop
add
adc
fdivrs
mov
insl
call
jg
push
mov
ret
lea
jns
jle
cmp
cmp
pop
dec
js
aad
inc
notb
js
jo
xor
ss
inc
fistpl
dec
mov
push
les
out
popa
push
mov
push
xor
jno
sub
rcr
cmp
dec
cltd
push
les
xor
mov
xlat
dec
inc
xchg
aas
adc
and
or
dec
mov
jg
jge
inc
inc
dec
int3
mov
add
xor
fisubrs
pop
mov
mov
cmpsl
dec
mov
cmp
cmpb
scas
fincstp
push
lods
mov
fbld
push
mov
test
in
out
and
xchg
shll
icebp
jge
inc
mov
add
push
mov
gs
int3
mov
xor
sbb
in
idivb
mov
loop
push
loop
pusha
mov
inc
fcompl
mov
inc
and
cmp
mov
ror
mov
push
movsl
andl
in
jae
push
xchg
xlat
jp
xchg
in
jo
push
clc
mov
outsb
mov
inc
lds
push
roll
mov
mov
cltd
mov
mov
scas
push
jns
mov
mov
adc
aas
in
pop
cmp
dec
fwait
lcall
lds
fiaddl
ret
out
std
sub
idivb
add
sub
movsb
xor
pop
sti
sbb
add
adc
inc
jbe
push
fsubrs
jbe
fsubl
xor
adc
mov
xor
add
fldt
xchg
pusha
dec
mov
imul
dec
add
sarb
inc
mov
and
jg
pushf
fdivr
jnp
dec
push
ljmp
pop
push
push
lahf
daa
test
das
mov
cmp
push
imul
scas
ret
push
ljmp
scas
and
lcall
icebp
cmp
jge
movsl
aam
adc
lock
rorb
out
pop
jnp
xchg
bound
pop
imul
out
dec
flds
jle
sbb
insl
add
ds
mov
xlat
jb
ja
xchg
pop
dec
mov
stc
out
dec
cli
mov
and
ret
xlat
cltd
pop
in
or
or
insb
fimull
push
sbb
ljmp
hlt
push
cmpsl
jge
jecxz
jbe
sub
flds
or
out
cmpsb
lea
outsb
push
mov
or
test
insl
frstpm(287
cltd
daa
bound
mov
clc
test
das
dec
mov
push
adc
outsl
imul
mov
mov
adc
push
rcrb
jle
push
cmp
daa
insl
jecxz
mov
std
sbb
fcoml
cmpl
aam
clc
xor
jo
shlb
dec
cmpsl
jg
call
popf
mov
jb
loopne
scas
jmp
push
fildll
in
aad
paddq
and
test
or
popf
iret
out
adc
hlt
cmpsl
dec
sub
aaa
jge
cmc
fwait
inc
adc
cli
ljmp
outsl
fnstcw
lods
mov
or
mov
cmp
mov
pop
imul
pop
push
or
jbe
mov
out
add
ds
mov
dec
or
clc
incl
jnp
add
pushf
scas
lahf
push
pop
add
mov
sub
test
mov
ret
or
lods
loopne
push
sbbl
js
fdivrs
lahf
and
clc
icebp
sbb
adc
test
faddl
decl
sbbl
mov
repnz
gs
in
fidivrs
and
mov
test
pop
cwtl
inc
and
mov
imul
fistl
cmpsl
sbb
mov
jbe
pop
data16
fisubs
push
out
inc
lcall
or
mov
mov
aad
mov
adc
pop
sbb
push
in
lcall
xor
mov
xchg
add
add
mov
inc
fwait
or
cmp
push
aad
ret
or
fwait
test
push
jo
sub
scas
cmpsl
loope
inc
push
xchg
leave
adc
inc
cmp
je
pop
clc
jae
push
or
sub
lret
cmpsb
xor
inc
push
xorb
stos
jo
push
subb
sbb
mov
mov
cmp
and
sub
mov
ja
jbe
outsl
loop
cld
sbb
imul
flds
xor
add
and
and
jb
or
pusha
lods
data16
pop
pop
out
imul
ret
jg
push
and
sti
adc
jae
sub
test
dec
cmpsb
aaa
xor
or
mov
mov
fbld
add
cmp
cmpsb
insb
sti
push
inc
movsl
push
mov
iret
mov
mov
mov
in
cmp
je
insl
or
jo
iret
ss
sub
mov
sbb
in
data16
inc
inc
inc
inc
mov
jmp
or
xchg
scas
add
rorb
or
loope
addl
mov
inc
mov
mov
in
xlat
fucomp
lret
lahf
int3
push
adc
xchg
sbb
pop
mov
cmp
cmp
leave
mov
jbe
das
aas
sar
popf
xchg
lock
divl
jge
xor
xchg
les
pop
xchg
xor
xchg
xor
xor
jno
jae
inc
mov
sub
dec
adc
sbb
and
and
lods
and
mov
lods
pop
cmp
pop
enter
stos
ja
dec
shlb
js
dec
sbb
pop
fsubrs
ljmp
sub
popa
pop
mov
fadd
in
add
mov
ss
and
adc
pop
clc
jns
xchg
lcall
scas
xchg
mov
mov
les
stc
xor
dec
push
add
add
loop
cli
push
xor
addr16
ret
cld
xor
cld
ret
cmp
adc
aad
mov
push
sarb
test
out
lods
mov
scas
fidivrs
jbe
das
add
jns
bound
shlb
lods
xlat
lahf
lret
jl
xlat
popa
push
push
int3
cld
sbb
jbe
stos
inc
xchg
stos
or
jns
mov
popf
inc
mov
push
add
lret
dec
sbb
test
movsl
and
jb
jae
lds
mov
mov
sub
or
idiv
mov
jp
jbe
test
cmp
pushf
pop
cwtl
or
inc
loop
aam
jge
cmpb
popf
jae
rcr
pushf
lahf
dec
xor
call
hlt
lds
lret
inc
jmp
add
jge
mov
shrb
stc
add
js
push
mov
out
fisttpll
out
fsts
les
fidivrl
inc
outsl
test
cmpsl
or
test
jbe
sbb
push
fidivrs
loopne
orb
inc
jecxz
pop
pop
pop
fwait
add
adc
dec
in
jecxz
pop
pop
out
shrb
mov
xorb
fwait
icebp
push
imul
mov
test
sub
cltd
mov
fs
in
add
fnsave
or
jmp
int3
push
call
dec
dec
mov
xlat
xchg
scas
gs
adc
daa
fwait
ret
xorb
imul
pop
jp
lods
cmpsl
pmulhw
push
imull
cld
clc
int3
rclb
repz
jb
xor
jo
js
push
aas
inc
ljmp
jp
and
mov
orb
cmp
frstor
jge
iret
cmp
dec
jle
and
call
popa
out
or
xor
lods
xchg
nop
sar
test
stc
icebp
xchg
push
add
cmp
push
dec
movsb
fmuls
xchg
mov
je
imul
testb
pop
loopne
mov
ficoml
pop
add
loope
repz
sahf
fsubs
cltd
insl
or
repnz
das
aas
mov
fbld
push
sub
cld
sti
loopne
fdivrp
adcb
mov
jno
or
repnz
lods
add
pop
cld
inc
or
pop
movsb
lds
clc
ljmp
mov
and
repz
mov
mov
imul
inc
rcrl
fsubl
out
insl
push
insl
call
dec
filds
jmp
add
dec
sub
adcb
clc
xor
shlb
jg
rcrb
xchg
mov
xchg
mov
insb
cmp
push
pop
pop
adc
xchg
mov
fbstp
adc
pushf
sbb
fists
imul
fwait
dec
lods
int
fidivl
mov
sbb
leave
js
inc
ret
push
test
mov
daa
push
and
test
js
shrl
loop
cmpsl
in
xchg
lcall
add
idiv
daa
cmp
push
add
xlat
pop
popa
fiaddl
adc
sub
push
add
shlb
mov
inc
out
jge
sub
cmpsl
xor
push
xchg
pop
hlt
movsb
bound
test
insb
int
push
fiadds
ljmp
js
push
push
stc
xchg
stos
sti
xor
hlt
dec
icebp
stc
aaa
and
inc
les
decb
insb
jae
inc
in
in
inc
shll
jmp
xchg
cwtl
xor
push
push
inc
das
mov
dec
jo
cmpsb
adc
andb
fs
sbb
jns
enter
cmp
jnp
push
pop
jbe
pop
xor
fsts
adc
mov
idivb
cli
inc
lahf
clc
imull
loopne
shrl
ss
sub
xchg
jae
and
mov
bound
jle
inc
jg
jae
and
lds
in
scas
enter
pushl
dec
mov
and
loop
jge
pusha
cld
mov
xlat
dec
stos
movsb
jns
mov
nop
jecxz
in
or
cmp
inc
aaa
and
faddl
fwait
jno
popf
mov
scas
out
sahf
xor
xor
inc
loope
scas
shlb
mov
dec
mov
xchg
cmc
out
shrl
add
ds
enter
scas
sub
mov
repz
pop
cmp
ljmp
out
xlat
push
repz
xchg
ljmp
and
cmp
xlat
enter
je
ss
cli
jge
jmp
push
jno
jae
int
lods
lahf
sbb
in
jo
dec
dec
orl
mov
das
dec
fisttpll
popf
adc
or
xchg
ret
out
jge
sbb
aad
push
int
gs
sti
cmp
cmp
mov
jle
dec
jne
stos
sub
hlt
and
insb
mov
outsl
cmc
cs
shll
in
dec
sbb
mov
shll
mov
push
mov
mov
push
mov
inc
mov
neg
addb
addr16
inc
mov
cmp
cmpsl
sub
fnstcw
add
imul
inc
push
in
pop
jl
add
cmpl
nop
inc
test
jp
and
mov
jne
inc
dec
and
push
dec
or
inc
cmp
push
and
pop
aad
outsl
lahf
jb
mov
es
jl
mov
mov
js
pop
call
nop
gs
xor
js
mov
push
pop
stc
rcll
jmp
divb
test
decb
adc
jge
stos
dec
push
adc
dec
cmp
iret
mov
cltd
inc
fdivs
and
loop
mov
push
adc
push
repz
xor
cltd
push
dec
cmp
mov
cmc
sub
inc
subb
mov
outsb
pop
or
test
pop
es
push
mov
popa
jnp
mov
lret
fcmovnbe
jmp
ret
test
dec
sbb
dec
test
das
mov
jae
arpl
into
pushf
inc
aam
jnp
xor
xor
std
mov
lods
mov
shr
daa
mov
lods
push
out
push
xor
adc
adc
and
or
daa
stc
ljmp
sti
pusha
pop
loop
and
adc
mov
mov
dec
mov
dec
add
add
mov
loop
fdivrs
mov
into
scas
mov
mov
pop
jns
pusha
push
rol
jmp
xchg
shll
push
frndint
cmpsb
jo
test
popf
mov
loope
insl
test
outsl
sub
add
pop
sti
mov
lods
xchg
sbb
vpunpckhdq
mov
stos
in
test
cld
mov
inc
aas
cmpsb
push
inc
inc
push
and
cltd
inc
insb
sbb
movb
add
leave
nop
jo
inc
adc
push
subl
xchg
icebp
mov
fld
add
push
rorl
sbb
sbb
inc
nop
xor
push
sub
sbb
cmp
sub
jno
rcrb
cs
xchg
add
jne
aas
sbb
sbb
jo
add
loop
test
dec
les
ret
xchg
cmc
push
out
jnp
add
push
sbb
leave
xor
xor
cmp
pop
lods
push
pop
inc
and
xchg
shll
cld
lret
loope
adc
dec
scas
fiaddl
mov
push
jno
mov
ja
or
sub
test
sbb
adcl
push
xor
jmp
lods
sbb
mov
mov
and
sbb
mov
push
xor
pop
pop
movsl
xchg
imul
push
sbb
jb
sub
push
test
pushl
push
mov
pushf
ret
mov
xor
inc
jmp
ja
ret
sub
cmp
iret
hlt
insl
cmpsb
and
insl
aaa
fwait
inc
mov
stos
gs
jmp
push
andb
or
jno
and
loop
push
pop
push
inc
pop
cld
imul
scas
add
movsl
push
sub
sahf
jg
fdivr
fs
les
adc
shll
adc
int
jno
outsb
dec
movsb
sub
mov
push
mov
je
imulb
pop
jle
or
popf
or
cmp
add
and
in
pushf
lret
shrb
xchg
adc
pop
add
mov
jno
in
mov
pusha
pop
xor
lret
inc
cmpsl
dec
jecxz
dec
lcall
mov
hlt
ret
add
test
or
sbb
ret
push
les
jns
lea
iret
sbbb
mov
arpl
cmpl
aad
mov
sbb
add
xchg
daa
mov
sub
imul
ds
mul
scas
jae
aas
sub
les
test
or
mov
bound
in
mov
jne
orl
jnp
repnz
roll
ljmp
inc
mov
loope
and
add
shll
leave
jno
pop
dec
dec
add
pushf
and
jbe
cmp
es
push
test
mov
scas
mov
and
fistl
aaa
pop
adc
fidivs
daa
aam
aad
pop
stc
push
mov
jle
stos
inc
mov
ljmp
mov
and
sub
mov
inc
clc
out
js
lods
mov
cwtl
dec
aad
cmp
xchg
add
jae
add
call
pushl
pop
xchg
fbld
adc
pop
rcl
jnp
data16
xchg
sub
mov
jmp
cli
mov
pop
cmp
or
ret
push
sub
cmpsb
xor
in
xchg
jae
and
push
jg
dec
dec
outsb
cmpsl
repz
push
int
fists
add
fsubrl
push
or
mov
jne
fisttpl
dec
cmpsl
cmp
mov
mov
aaa
dec
jg
inc
fbstp
and
test
andl
filds
aam
jp
add
mov
pop
push
rorl
xchg
test
scas
mov
xlat
popf
fnstcw
adc
mov
aas
test
daa
inc
repnz
enter
jo
cmp
and
int
das
dec
pusha
cwtl
shrl
xor
out
xor
pop
xchg
movsb
or
cwtl
adcl
jp
mov
mov
out
mov
xlat
out
mov
push
push
mov
imul
mov
dec
sbb
out
orl
sbb
or
gs
scas
stos
lods
xchg
mov
lds
adc
out
inc
stos
push
mov
push
jecxz
lea
mov
sbbl
and
cmp
jmp
mov
jno
scas
add
je
mov
xor
mov
testl
mov
mov
mov
leave
sub
std
mov
or
repnz
pop
iret
call
and
pusha
cmpsb
das
inc
push
ja
push
mov
inc
gs
xchg
cmp
pop
lahf
pusha
mov
jecxz
scas
push
sub
out
lcall
add
stos
xchg
les
dec
mov
mov
jo
in
fiadds
ret
enter
jbe
or
or
cwtl
data16
sub
pop
lret
pop
ss
cwtl
mov
cmp
adc
loope
jb
in
icebp
jl
aas
dec
push
xor
sbb
xlat
bswap
clc
mov
push
adc
jnp
jno
mov
mov
xchg
sti
pop
and
sar
and
dec
pop
fldl
push
out
out
enter
aam
pop
xor
setno
cmpsl
sub
jnp
lahf
or
scas
mov
inc
addr16
movups
cmpsl
dec
mov
mov
push
sub
cli
push
loop
aam
outsb
inc
pop
push
clc
push
out
es
add
test
negb
loopne
cmp
mov
mov
pop
xchg
int
mov
inc
aaa
jp
push
pop
insb
or
xor
jl
or
movsl
hlt
cli
lods
repnz
mov
loopne
pop
add
bound
mov
cmp
aas
adc
scas
pslld
dec
and
xor
mov
int3
mov
add
lds
cmpsl
jecxz
sub
and
mov
sbb
lcall
pop
sub
out
mov
and
das
test
mov
push
mov
push
and
inc
or
lcall
inc
jp
scas
popf
mov
scas
add
aam
scas
xorb
pop
in
dec
stos
lea
jg
std
cwtl
jnp
test
pop
adc
and
xor
mov
mov
inc
jg
sbb
pop
ljmp
loopne
int3
cmp
aam
xor
rorl
fnstsw
movb
push
and
mov
divb
mov
sbb
jae
sbb
mov
lcall
pusha
lods
inc
cmp
cmp
loope
sahf
dec
add
mov
addr16
test
sahf
inc
sti
jl
push
inc
mov
icebp
popa
into
cmp
pusha
inc
sub
push
mov
fimull
ret
frstor
ja
xchg
sbb
pop
pop
xor
loopne
out
aad
pop
cwtl
paddb
mov
sarl
and
test
iret
push
mov
dec
push
sbb
push
jbe
shlb
pop
popf
shll
leave
xor
xor
push
xchg
jl
push
mov
mov
sahf
pop
xor
loopne
aas
cmp
push
xlat
mov
pop
inc
push
xchg
xor
mov
dec
cmp
xchg
sahf
xor
scas
dec
push
ds
push
jo
pop
adc
adc
push
scas
jg
fisubrl
cmpsb
out
push
dec
aad
repz
cmp
mov
cmp
adc
cmp
int
inc
popl
cmp
inc
push
ret
in
pop
sub
imull
dec
sahf
push
fnstsw
xor
inc
push
sbb
xor
push
ds
or
xor
mov
vpunpcklbw
inc
clc
sbb
pop
jecxz
in
jnp
lea
mov
popa
cmp
fisubl
cmc
fisubs
lds
pushf
adc
int
fs
push
shlb
lods
sub
pop
cmp
rorw
push
mov
fistps
clc
mov
call
adc
sbb
mov
orl
dec
cld
mov
rclb
pop
push
push
jmp
push
in
inc
out
mov
pop
mov
mov
push
or
cmp
nop
adc
sub
loop
jbe
sub
xor
mov
cmp
cltd
loope
test
fwait
push
sub
lcall
sbb
cmp
mov
insb
or
sub
xchg
out
andb
and
scas
or
pop
inc
pop
dec
pop
ss
fwait
divb
pop
enter
xchg
iret
mov
mov
int
mov
mov
sub
push
gs
adc
cltd
jb
pusha
inc
lahf
sti
sbb
pop
arpl
inc
jb
repz
pop
jns
pop
and
cli
lock
adc
jp
dec
jecxz
xor
mov
cmp
data16
dec
fcomp
das
xchg
sub
jl
pop
jg
mov
je
adc
outsl
mov
fwait
inc
xchg
loop
fldt
in
xchg
jp
pop
and
and
rcll
cmp
inc
cmp
lret
mov
push
push
pop
push
test
and
inc
pop
jge
xchg
mov
sbb
loopne
enter
movsl
mov
xchg
sbb
shlb
fs
mov
addr16
jbe
mov
add
lret
iret
xor
add
pop
adc
sarl
test
xchg
cmpsb
push
cmpsl
and
jbe
push
shrb
add
mov
mov
cmp
lock
and
mov
fmull
sub
sbb
add
sub
clc
test
negl
xor
xchg
movsl
jbe
lea
imul
push
repz
daa
out
fmull
in
lods
sub
fdivr
mov
add
cld
mov
adc
psubsb
sbbb
mov
mov
inc
sub
ret
frstor
js
adc
shlb
rcll
jle
and
test
mov
pusha
bound
cmp
mov
add
add
cltd
sbb
xchg
fnstenv
es
and
mov
out
mov
shr
or
cmp
jns
mov
xor
mov
sub
mov
adc
adc
lock
xchg
jl
outsl
or
pop
mov
mov
pop
clc
fcomip
arpl
push
push
sbb
lahf
repnz
sub
push
sub
loope
or
adc
sbb
loop
lea
jae
lds
sbb
loope
or
arpl
imul
push
mov
sbb
dec
or
mov
rorl
push
push
inc
lcall
movsl
and
aad
push
mov
lods
addl
mov
cmp
scas
or
mov
dec
xor
rorl
or
std
pop
xlat
mov
es
jl
test
aad
and
rol
lea
xchg
lahf
pop
in
fs
rorb
psubd
arpl
jae
cmp
lcall
movsl
ss
jns
lcall
dec
cwtl
bound
pop
add
pop
cmp
push
cltd
stos
dec
lahf
lret
adc
imul
mov
cs
push
lods
and
sbb
mov
out
addl
loop
jmp
mov
std
adc
adc
sub
xchg
jle
mov
push
mov
or
xchg
jb
mov
mov
or
out
aad
dec
adc
outsl
or
cltd
popa
fidivrl
mov
pop
xchg
push
and
xchg
je
fnsave
dec
push
outsb
add
jae
lds
cli
jge
ja
jae
les
stos
out
andl
push
pop
in
sbb
int
scas
cltd
or
jmp
pop
inc
mov
sbb
movsb
xor
movsl
xor
and
movsb
sbb
rclb
jl
push
aam
insl
push
scas
xor
xor
inc
sub
push
pop
push
sub
fwait
es
out
xor
sub
movsl
jbe
mov
outsb
pop
or
lock
sub
lret
shl
iret
jnp
xchg
nop
aaa
pop
push
add
cmp
adc
pop
add
fmulp
jbe
lahf
movsl
iret
out
and
lret
pop
ljmp
aam
cmp
loope
cmpsb
jns
inc
sbb
jbe
and
jg
adc
stos
jb
mov
inc
movsb
ljmp
stc
sti
cltd
xlat
scas
jmp
cmpsl
fildl
mov
mov
mov
mov
arpl
ret
pop
in
fldcw
aaa
sub
notrack
inc
iret
repz
int
dec
repz
jno
jle
bound
sub
lahf
cmp
sti
fs
das
cwtl
pop
test
sub
clc
inc
jno
or
test
cmpsl
test
sbb
outsl
inc
mov
jecxz
loopne
lods
jnp,pt
xlat
outsb
pop
das
push
rorl
mov
movsl
andb
dec
cmp
mov
testb
xchg
or
sti
push
pushf
rorl
mov
test
jmp
pop
ja
test
nop
cmpsb
mov
and
ficoms
jbe
or
push
xchg
test
add
insl
sub
je
and
xchg
pushf
pusha
cmp
aaa
push
es
adc
xor
xchg
pop
mov
and
dec
push
aas
sbb
lret
xlat
add
mov
sti
cld
cmpsb
xchg
mov
clc
jle
lcall
fcomps
clc
loop
push
pop
jg
in
dec
aaa
jg
mov
lock
cmp
out
push
addb
and
outsl
fs
sbb
or
das
or
sbbb
or
mov
js
pop
lret
cmp
clc
mov
pop
sbb
add
pop
js
gs
pop
outsl
pop
fs
push
push
loope
push
out
push
add
mov
or
or
nop
out
faddp
sbb
rol
adc
in
cmp
rcrl
rclb
pop
lcall
aam
cwtl
cmp
sbb
sub
int
mov
aam
xchg
out
pop
mov
jp
sub
mov
fisttpl
mov
std
dec
in
lret
pop
cmp
or
cmpsl
popf
imul
out
nop
pusha
into
pop
arpl
cmp
jno
test
add
adc
sbb
sbb
push
pusha
ljmp
call
push
sbb
sbb
sbb
fxam
pop
cli
pop
hlt
sti
aad
and
push
shrl
cmpsl
mov
mov
les
sub
js
jae
dec
sbb
in
cmpsb
inc
js
xor
lret
je
mov
sub
inc
popf
jo
dec
inc
in
sbbb
xor
mov
cmp
hlt
lret
or
daa
mov
pop
inc
in
push
stos
sbb
jle
stos
icebp
push
cli
and
inc
jg
jge
add
mov
cli
sti
js
ror
imul
dec
or
push
cmpsb
inc
flds
jbe
pop
mov
sbb
mov
test
inc
push
jl
cmp
cmc
mov
and
loope
cli
std
cmpsl
ret
cmp
adc
and
lret
xor
pop
gs
xor
push
dec
jno
xor
xlat
push
jnp
or
add
pop
cmpl
mov
adc
cmp
or
push
andb
ret
xchg
cli
adc
insl
xor
mov
sbb
dec
adc
xchg
add
lret
xor
in
jb
pop
xor
or
stos
dec
leave
mov
inc
stos
pop
ds
dec
cmp
inc
or
inc
adc
outsb
popf
pop
push
icebp
int3
push
sub
lods
out
mov
icebp
xchg
cmp
jecxz
iret
jmp
lods
adc
sarl
cmp
adc
pusha
repz
rcrb
and
clc
xchg
add
sbb
cmc
aad
pusha
push
dec
fwait
movsb
push
addb
xor
cmc
xlat
cmpsb
mov
dec
xlat
jg
xchg
xchg
lods
shr
loop
outsl
outsb
xor
rcll
cmc
jp
cwtl
mov
or
ja
mov
out
loop
inc
aad
cmp
das
jae
or
dec
out
adc
lea
andl
adc
cld
mov
nop
fcomps
sbb
shl
and
dec
in
lahf
dec
xor
mov
push
js
xchg
mov
imulb
das
add
xchg
roll
in
jmp
roll
repnz
pop
jmp
jb
or
inc
setp
and
add
sub
ret
test
fs
out
addr16
imul
and
jmp
sbb
lcall
loope
insb
not
add
mov
gs
inc
dec
dec
or
and
cpuid
ss
cmp
stos
jne
xchg
mov
jg
or
mov
or
xchg
mov
pop
sbb
add
loop
test
fs
push
jecxz
stc
leave
in
addl
sub
and
push
sarl
dec
das
adc
sar
unpckhps
inc
lods
test
xchg
mov
or
mov
or
xor
pop
lcall
rorb
mov
xlat
pop
and
sub
adc
aad
xchg
in
sub
bound
push
push
sti
out
flds
mov
add
sbb
mov
test
jae
scas
arpl
int3
out
inc
jmp
jl
lret
fists
pop
xor
mov
into
xchg
lcall
jb
jle
push
rcrb
push
out
jo
jle
int
pop
dec
mov
dec
negb
jg
push
enter
insb
lods
test
addb
jp
scas
sti
jo
mov
add
jb
xchg
dec
stos
jnp
jle
mov
dec
bsr
lcall
shr
leave
rolb
scas
push
lock
mov
negl
inc
roll
cmpsl
into
imul
adc
int3
fdivs
push
or
int
mov
inc
push
sbb
push
popa
sbb
ds
adc
imul
inc
cltd
and
fistpll
mov
or
jo
jp
cmpsl
repz
mov
jo
inc
lret
bound
pop
out
hlt
aam
push
pusha
daa
out
inc
stos
xlat
dec
mov
mov
lods
pop
fsubr
fimuls
xchg
pop
aam
out
xchg
lods
roll
lret
mov
push
jns
sbb
mov
xchg
push
mov
mov
out
mov
in
jo
add
movlps
lahf
aas
popl
popa
in
loope
pop
popf
or
inc
cmp
mov
mov
das
ret
pop
in
gs
popf
inc
sbb
decl
xchg
hlt
hlt
xchg
sub
ret
notb
mov
fs
rcll
int
mov
hlt
push
in
dec
out
inc
sahf
ljmp
mov
dec
cmpsb
dec
fsubs
not
cli
sbb
test
mul
in
and
faddp
ljmp
daa
lret
dec
push
fidivl
jmp
mov
cs
ss
int3
push
nop
es
in
shrb
rclb
lock
outsb
jmp
sbb
push
shr
out
pop
xor
and
or
int3
xor
movsl
xchg
push
mov
imul
jp
or
mov
fs
iret
popf
mov
ret
add
nop
inc
leave
jg
ret
sbb
xchg
dec
and
movl
inc
push
and
sahf
jo
dec
scas
inc
mov
or
push
sbb
scas
pop
sub
outsl
aam
adcl
mov
ret
xorb
pop
ja
mov
push
and
inc
xchg
xchg
imull
xor
mov
outsb
jbe
push
aad
insb
mov
ss
push
data16
lahf
jg
imul
xor
insb
cmp
inc
bound
cli
xor
push
orl
jbe
sbb
cmp
movsb
cmp
xor
pop
xor
jg
cmp
mov
test
adc
jg
shll
in
into
shrb
pop
push
mov
mov
movsb
movsb
lret
push
push
in
pop
shrl
iret
add
cmp
daa
pop
add
mov
xor
cwtl
jl
mov
push
add
xor
mov
dec
data16
ljmp
xor
clc
and
pushf
ja
xchg
insl
add
mov
push
sahf
mov
push
xor
push
lock
mov
cmc
test
adc
ret
or
rcrl
adc
xor
adc
movsb
aam
and
and
lret
insb
add
cld
sbb
dec
imul
stos
loop
adc
sbb
mov
push
xchg
lea
add
mov
jae
into
lret
dec
dec
into
arpl
int3
dec
jbe
inc
xchg
aaa
mov
pushf
pop
mov
cwtl
mov
add
leave
cmp
in
mov
repz
xor
fnsave
repz
out
add
out
fsubrl
dec
lock
scas
std
dec
xchg
cli
cld
mov
xchg
pop
cmp
inc
int3
movsb
adc
cmpsl
xchg
mov
pop
sub
xchg
stos
xor
sbb
sbb
dec
cmc
push
dec
push
and
cmpsl
adc
mov
leave
xchg
stc
or
and
mov
rolb
ljmp
mov
mov
pop
lods
outsb
bound
cmp
hlt
pop
or
mov
xor
jge
fidivrl
cwtl
jo
push
xchg
cmp
fwait
add
mov
dec
cmp
lds
addr16
popa
jl
fstpt
aaa
shll
leave
movsl
scas
push
scas
xor
inc
adc
fsubrs
test
and
stos
xchg
xchg
push
or
in
mov
push
sub
xchg
lods
dec
xchg
sub
cmp
daa
enter
or
adc
mov
ja
cmpsb
outsl
xor
loopne
inc
cmp
pop
das
pop
int
cmc
into
ss
sti
cmpsb
out
xor
cmp
pop
gs
test
xor
cmpsl
mov
push
pushw
xor
pop
pop
pop
jmp
andl
sbb
mov
adc
pop
iret
lods
adc
outsb
in
jbe
lds
lds
movsb
xchg
push
cmp
dec
push
inc
mov
sub
je
cmp
sbb
pushf
repz
lds
mov
jp
lea
ret
insb
dec
jno
adc
lock
or
jae
or
outsb
sbb
scas
imulb
inc
sub
or
dec
loopne
sub
int
lock
lods
insb
sbb
jnp
jne
mov
pushf
jno
mov
mov
mov
jbe
jae
out
mov
push
xchg
cmp
pop
in
popf
sbb
in
in
mov
ret
mov
xchg
mov
mov
inc
sbb
xadd
mov
enter
fmuls
aad
add
les
jmp
add
xchg
lods
test
jle
push
mov
push
and
sub
dec
jno
imul
jmp
lds
push
adc
and
pop
loop
or
sbb
ret
xor
in
arpl
inc
mov
mov
clc
lret
inc
or
jle
adc
or
dec
sbb
lods
clc
movsb
mov
stos
jne
mov
cmpsl
add
test
rclb
mov
test
stc
outsl
clc
xor
in
xchg
mov
bound
ret
jne
adc
test
and
aaa
dec
sahf
sub
xor
add
mov
xor
mov
aam
inc
stos
jmp
mov
pop
test
jmp
jle
scas
shll
mov
mov
int
dec
jnp
call
popf
inc
dec
sbb
jp
outsl
xor
loope
addr16
and
cmpsb
iret
mov
popa
in
jae
int3
jle
xor
decb
fstpt
add
cmp
xlat
in
icebp
pop
adc
fnstcw
jle
dec
loope
lret
dec
sub
fs
rcrl
dec
sbb
and
jge
std
rep
scas
dec
xchg
das
xchg
sbb
mov
sahf
jne
loopne
adc
popf
sub
add
and
push
rol
xchg
dec
push
test
das
aam
xor
add
in
cmp
leave
sbb
mov
cmp
push
inc
test
les
ficomps
or
popf
lds
stc
mov
jbe
pop
adc
sub
mov
jnp
and
mov
fsubs
sarb
repz
testb
pop
mov
push
shl
sbbb
jne
jne
pop
es
jne
inc
push
dec
push
cmc
add
xchg
mov
mov
mov
nop
cltd
sub
xchg
decl
test
outsb
jno
in
mov
adc
dec
cmp
xchg
stc
aad
sbb
jno
cld
add
cmp
addl
sbb
push
xor
pop
push
jnp
imul
xor
adc
adc
sbb
inc
or
and
cmp
mov
jge
pop
pop
and
test
lcall
mov
idivb
loopne
cmpsb
lds
pop
xchg
dec
pop
sbb
sahf
mov
xor
xor
or
pop
pusha
loope
xchg
scas
and
popa
jl
cmp
adc
or
shlb
cmpsl
push
fcmovb
outsb
jno
mov
or
or
or
push
repz
push
iret
repz
jnp
xor
inc
cmc
sbbb
push
fwait
xor
pop
lock
iret
xchg
dec
mov
ss
cmp
adc
fidivrl
push
cmp
popf
icebp
fcomp
push
int3
jmp
and
jnp
addr16
jecxz
rcrl
sbb
inc
into
imul
outsl
in
adc
fs
hlt
icebp
cwtl
scas
jle
into
cmc
out
pop
mov
popf
add
ja
push
pop
out
xchg
or
stc
xchg
test
shll
inc
outsl
xchg
pop
push
hlt
rcrb
cmp
sub
cmpb
sbb
fsubl
stos
out
or
loopne
insb
ds
jmp
adc
daa
mov
ja
push
mov
mov
xchg
mov
test
dec
fs
imul
cmp
fs
sti
xor
test
pop
push
pop
pop
mov
xchg
outsb
std
popf
popf
fimuls
push
stc
xor
scas
pusha
loope
xchg
and
test
lahf
dec
xchg
fisubs
pop
popa
push
or
sbb
adc
in
imul
jb
repz
sub
adc
push
jbe,pn
mov
sub
fbld
je
adc
cmc
int
jns
rolb
adc
jb
sbb
cmpsb
je
imul
cmp
pop
lea
jae
in
xchg
fimuls
in
movsb
les
aam
cmp
outsl
or
or
add
pop
cld
pop
ss
xchg
pop
je
rcr
cmpsl
call
filds
xchg
pop
cmp
push
xchg
inc
imul
dec
icebp
push
mov
push
xorl
lock
mov
lock
mov
lcall
mov
shlb
mov
or
shlb
ret
stos
and
sahf
loop
xorb
mov
in
sbb
mov
mov
and
shlb
js
aam
fwait
and
pop
and
aad
rol
rol
adc
sbb
pop
sub
imul
or
add
dec
dec
gs
and
faddl
mov
pop
testb
sub
dec
out
and
inc
jo
push
cmpsb
aam
out
cs
jbe
je
js
xor
sub
pop
mov
and
aas
sub
gs
add
jmp
push
xchg
dec
mov
sbb
testb
pushf
sub
or
out
mov
pop
cmp
into
mov
fwait
pop
and
cmp
scas
xchg
cld
movsl
test
inc
orb
or
stc
addr16
pop
or
sub
inc
mov
mov
mov
inc
bound
call
fs
movsl
loop
jl
mov
cmpsb
jbe
gs
out
imul
es
jae
and
gs
add
dec
xor
sub
mov
push
add
xchg
mov
push
pop
sub
lds
movsb
cmp
pop
adc
cli
out
fs
push
fists
aam
pushf
mov
sti
shl
scas
cwtl
popa
dec
in
jmp
mov
movsb
inc
rol
fdivl
xor
xor
fsubrs
push
and
mov
add
push
into
and
and
xor
sbb
sub
aas
loopne
testl
jns
lret
cld
pop
fmull
ja
cmp
sti
aam
jne
or
js
add
jl
enter
mov
dec
mov
lahf
cmpsb
adc
sbb
add
mov
push
scas
jp
and
inc
cmpsl
xchg
add
mov
pop
sub
scas
into
scas
incl
fiadds
int3
fidivrl
addb
jbe
sbb
test
ret
daa
addr16
push
in
fistpl
pop
loopne
insl
fcoms
jmp
ds
adc
aam
pop
gs
in
ret
repnz
jns
jne
push
sbb
pop
aam
aas
stos
shll
mov
lock
stos
insb
fbld
fwait
int
jnp
add
repz
hlt
fs
in
mov
inc
sub
imulb
push
push
adc
add
cmpsl
mov
popf
insl
aam
aad
repnz
sbb
xor
mov
sbb
add
xor
mov
push
scas
and
mov
insl
jle
pop
pop
jb
rorb
xchg
cmpsl
movsb
lahf
out
dec
sub
inc
sbb
mov
pushl
stc
aad
push
lcall
data16
push
mov
mov
js
mov
xor
jb
push
aad
push
loop
mov
xchg
es
addr16
fldpi
mov
int3
shll
dec
mov
popf
adc
mov
dec
sahf
jne
fcom
sub
iret
xchg
sub
icebp
and
push
insb
sbb
dec
mov
fistpll
les
test
mov
add
repz
adc
sti
sbb
cli
lret
xchg
jne
pop
mov
add
inc
sbb
cmp
mov
xlat
lret
xor
adc
ljmp
jle
loope
pop
jo
pop
imulb
in
ds
xor
iret
pop
movsl
jo
jle
lods
rcll
lcall
fmuls
adc
aad
mov
nop
cmp
or
mov
sbb
lods
gs
dec
js
pop
xchg
pop
sti
xchg
push
notb
in
push
ret
pop
aas
fs
push
ja
mov
sub
jns
sub
iret
jl
xchg
dec
lods
cmp
sti
dec
inc
pop
mov
mov
sub
xchg
push
sahf
dec
outsb
ss
test
ja
adc
outsb
push
mov
aas
into
xlat
iret
pop
mov
leave
xchg
cmp
out
add
push
iret
fcompl
rcll
mov
cmp
in
int
stos
adc
jne
mov
push
mov
inc
xchg
out
inc
inc
cmp
push
push
movsb
xor
mov
jg
adc
dec
stos
lock
in
inc
jge
addr16
pop
pop
mov
movsl
push
or
add
or
push
cltd
adc
lcall
pop
scas
jb
mov
inc
rol
test
fucomip
sub
fadd
dec
call
xchg
loopne
cmpsb
jne
and
out
cltd
cmc
jbe
or
sbb
xchg
outsb
pop
daa
add
jne
push
popf
test
filds
mov
xchg
outsl
call
rdmsr
push
sbb
cmp
inc
and
lods
xor
imul
nop
add
sbb
mov
sbb
mov
push
enter
cmp
lret
hlt
inc
lahf
stc
in
fdivrl
pop
fcmove
ret
lods
pop
mov
pop
lock
and
adc
dec
lret
jns
clc
test
lock
xor
dec
adc
fiaddl
xor
jns
in
andb
jle
out
jns
dec
rcll
addr16
push
data16
std
lahf
add
jmp
add
push
mov
inc
jo
pop
sbbb
push
icebp
aas
fwait
jl
sti
mov
mov
cmp
aad
pushf
xor
push
loope
stos
adc
sub
cmpsb
inc
xchg
push
dec
repz
insl
dec
mov
fidivs
mov
addb
movsb
xor
sbb
loop
sub
add
imul
pushf
cmpsl
test
jbe
mov
pop
and
fistl
aas
xchg
xchg
jl
repz
gs
add
scas
mov
xchg
and
and
jnp
js
or
xor
fisubrs
push
sahf
jle
xor
imul
cwtl
inc
dec
adc
cmp
test
je
add
xor
das
lea
mov
adc
mov
xchg
pop
cwtl
sbb
lahf
mov
mov
roll
mulb
fucomip
cmpb
in
stc
fiadds
sub
enter
leave
imul
add
jnp
mov
sbb
inc
jns
std
sti
aaa
pusha
cmp
or
xor
insb
xor
jmp
insb
mov
mov
xor
mov
dec
out
xchg
inc
cs
in
sar
xchg
and
mov
ss
sbb
loope
and
xchg
les
mov
sbb
hlt
jbe
fcoml
dec
pop
pop
loop
cmp
adc
jnp
pop
cmp
pop
sub
push
je
mov
pop
scas
stos
ffreep
stc
dec
ljmp
test
mov
inc
cmp
jb
dec
sub
popf
repz
sub
mov
xor
mov
push
jge
adc
cmc
dec
add
stc
or
push
cmpsl
iret
cmpsl
mov
cs
jne
lret
xor
jge
mov
push
jnp
sbb
jae
cmpsb
pop
xchg
and
mov
pop
loopne
iret
ljmp
sbb
inc
push
push
sub
test
scas
mov
xlat
xchg
insl
mov
in
test
dec
in
push
pop
ljmp
loope
dec
std
inc
jge
mov
pop
lahf
imul
mov
lea
sub
movsb
xchg
je
out
repnz
pop
testb
sub
rorb
inc
movsb
fcoms
mov
mov
jge
mov
into
outsb
pop
fs
out
mov
aaa
negb
pop
sbb
jle
and
mov
cmp
pop
cs
imul
add
lcall
int
popf
mov
xchg
test
cmpsl
test
out
negl
pusha
and
jbe
push
cmp
push
bnd
cld
push
xchg
jne
out
mov
pop
popa
mov
sahf
into
and
movsb
or
js
cmp
xor
push
fchs
sbb
mov
out
std
arpl
mov
lret
mov
push
jno
mov
lret
aaa
xchg
inc
out
push
push
adc
icebp
adc
shl
xchg
jle
jl
jae
jno
dec
lret
push
cmpsb
lcall
push
and
popf
fnstcw
pop
pop
insb
stos
loop
jmp
jmp
mov
sub
mov
cmp
je
fmuls
xchg
push
mov
sbb
fwait
pop
jg
jp
mov
inc
fistpll
jb
imulb
jb
enter
mul
test
outsb
scas
into
push
cmp
xchg
je
mov
xchg
mov
cmp
jp
and
and
pop
sub
arpl
imul
mov
pop
mov
dec
cmc
xchg
add
jnp
int
add
fimuls
push
push
pop
add
loop
mov
mov
mov
add
fisttpl
cmp
push
mov
cli
testb
push
add
std
mov
imul
insb
mulb
mov
xchg
dec
insl
repnz
add
jl
arpl
outsb
loope
pcmpgtw
cwtl
stc
xchg
sbb
push
ficoms
xchg
in
pusha
pop
pop
cmp
inc
pop
aam
popa
xchg
adc
jp
in
dec
add
das
outsb
and
pop
dec
jecxz
jp
push
outsl
pop
dec
das
int
jmp
fiaddl
xchg
mov
mov
ljmp
scas
fs
mov
jp
cmp
and
andl
and
xchg
jmp
int3
stc
jns
test
jp
inc
pop
sbb
jbe
push
rcr
push
cli
icebp
fimull
mov
sbb
mov
xor
dec
jp
pop
inc
xor
out
dec
repnz
inc
out
jp
inc
xor
pop
mov
push
xorl
call
or
inc
sbb
adc
xor
pop
iret
lcall
dec
jns
inc
jge
mov
adc
jecxz
pushf
fisttpll
rclb
and
jg
xor
jno
jbe
mov
inc
adcb
es
pop
mov
push
divb
pop
inc
jo
cmp
xor
mov
add
push
fdivs
cltd
mov
or
mov
adc
bound
adc
into
and
jb
adc
add
int
movsl
xlat
scas
and
stos
pop
sub
add
cmp
out
or
aaa
pushf
ja
cmpsl
lret
pushf
inc
pcmpeqd
push
ret
push
nop
push
xchg
xor
imul
int3
xlat
push
cmp
out
out
inc
dec
sub
rcrb
push
sbb
xchg
add
mov
test
divl
or
das
push
cli
in
mov
call
fidivl
mov
xchg
rcr
jo
dec
lahf
aaa
mov
ds
cmp
bswap
jnp
out
xor
lahf
sub
lock
ret
fcomi
ds
xchg
mov
cld
pop
sbb
cwtl
enter
lcall
rcll
push
mov
fcompl
jg
mov
cmpsl
sub
out
mov
inc
mov
adc
test
pop
cs
push
popf
inc
push
fistl
mov
cs
mov
cvtpi2ps
cmp
std
jp
lcall
outsl
xorl
pop
jno
mov
pop
sub
pop
jbe
inc
or
seta
xor
cld
jbe
loope
dec
rorl
xchg
aaa
cwtl
arpl
dec
jns
loopne
mov
push
sub
and
sbb
out
and
cmc
shlb
push
jmp
jbe
adc
push
lea
jbe
and
fs
ficoms
cmp
xor
mov
nop
sarb
fs
xor
fmulp
ja
xor
xchg
loope
addl
sub
push
inc
sarb
mov
mov
mov
add
outsb
push
imul
lds
pop
fwait
push
sbb
mov
data16
mov
outsl
and
inc
mov
jle
xchg
roll
subb
enter
xor
adc
push
ficoml
and
cmp
js
xchg
daa
shl
add
jg
sarl
mov
inc
in
adc
lds
push
jle
arpl
repz
xor
xor
aam
imull
jo
mov
mov
cmp
jl
pop
xor
push
pop
push
aas
cmp
jmp
das
movb
imul
mov
cmp
aam
pusha
or
in
lret
rol
mov
js
or
negb
in
cmpsl
jno
add
mov
jns
dec
loopne
js
arpl
mov
sub
dec
mov
loopne
es
xchg
addr16
xorb
xor
cmc
adcl
rcrb
sub
fwait
outsl
imul
bound
xor
cwtl
cmp
or
xchg
add
mov
loop
aaa
pop
loop
add
mov
bound
outsl
push
pop
mov
dec
daa
mov
adc
xchg
jge
js
test
fsubs
and
xor
in
cmp
cli
fndisi(8087
adc
insb
je
scas
lods
mov
sbbb
idiv
mov
ja
aaa
bound
loop
out
sbb
mov
jb
mov
push
mov
or
lahf
shrb
pop
and
cmp
ds
and
xchg
jnp
add
sbb
pop
dec
in
test
ds
lock
pop
mov
sbb
shlb
mov
inc
pusha
pop
mov
xchg
pop
insb
push
test
sub
cwtl
jecxz
or
xchg
or
int3
mov
xchg
popf
sub
push
jle,pn
std
sub
insb
movsb
mov
cmp
stos
adc
jl
push
push
cmc
movl
and
mov
cmp
call
xlat
ret
ja
lock
int3
jo
nop
and
push
mov
in
andb
inc
cmp
sub
xchg
and
inc
mov
insl
push
ja
and
cmc
shrb
ja
outsb
je
pop
xlat
inc
pop
push
or
cmp
ror
jb
and
dec
setb
testb
cmp
xchg
dec
addr16
sub
push
sub
inc
rolb
icebp
jmp
icebp
inc
push
dec
mov
pop
push
cmpsb
jecxz
jnp
pop
mov
xlat
jbe
iret
push
xchg
jecxz
xchg
mov
or
add
or
mov
scas
in
lods
andb
movsl
in
call
shrl
cld
sbb
jae
mov
adc
out
popa
mov
daa
and
xor
stos
push
cwtl
add
mulb
jne
inc
pop
push
add
push
cli
push
dec
bound
ret
aad
shrl
bound
push
xor
andl
cmp
es
pop
inc
test
shlb
test
iret
lock
sub
insb
aad
imul
jnp
outsb
mov
jb
notl
lock
cmpsb
in
adc
xor
mov
push
or
mov
into
xchg
flds
shl
es
push
or
int3
out
and
mov
sahf
cmp
cmp
lods
ret
cmpsl
movsb
cmp
mov
sahf
xlat
sub
inc
pop
jo
clc
pop
popf
and
popf
shll
inc
sbb
aad
lds
repnz
xchg
sbb
add
jbe
fdivl
dec
loopne
jb
out
mov
mov
jl
inc
or
pop
or
je
mov
cmp
pop
fidivl
ja
ss
rolb
fnstenv
int
rcl
outsl
fcmovnu
loope
xor
int3
leave
inc
outsb
sub
push
divb
repnz
lcall
out
sub
cvtpi2ps
or
rcrb
xor
imul
inc
out
sbb
iret
inc
icebp
adcb
into
dec
pusha
fstpt
bound
sbb
xchg
pop
push
movsb
fsubrl
insb
adc
adc
int
add
push
and
or
out
and
out
jb
mov
in
in
push
push
enter
sbb
sub
movsb
sbb
call
jecxz
push
nop
adc
stc
and
pop
mov
faddp
pop
mov
xor
shll
sarb
push
int
in
dec
adc
imul
jmp
or
sbb
icebp
into
hlt
add
adc
mov
ja
add
femms
fdivr
push
cs
pop
push
loopne
add
pusha
popf
xchg
repz
xchg
sbb
push
cmp
jb
fisttpll
icebp
xchg
aam
pop
xorb
mov
mov
inc
loop
pop
xor
and
ret
push
out
insl
xlat
xor
loope
jle
call
enter
stos
fcomps
jmp
pop
call
pop
es
and
jae
enter
pop
push
or
sbb
sahf
cmp
ljmp
mov
xchg
adc
shll
push
ss
mov
sub
xor
pop
pop
jl
fstpt
lret
inc
add
sbb
or
add
adc
pop
add
sbb
stos
or
push
repz
mov
ljmp
repz
jnp
arpl
push
or
push
shr
push
loopne
mov
pop
andb
and
jle
xchg
shufps
int3
cmp
shll
dec
test
jge
test
int
rolb
xchg
aaa
rcll
cmpsb
dec
popf
imul
cs
mov
and
cmc
xor
and
jbe
sti
or
xchg
dec
aas
jl
dec
loope
or
test
shr
popa
out
mov
push
and
push
cmp
cld
test
mov
jmp
jmp
test
mov
xor
jne
add
push
inc
sbb
jl
push
push
xlat
fdivs
push
rolb
clc
dec
jbe
pop
hlt
sub
adc
xchg
pop
ss
jns
push
mov
orl
mov
jne
and
jne
jge,pn
cmp
stc
adcl
scas
adc
pop
stc
cwtl
cmpsb
loop
loop
subl
outsb
add
adc
std
psllw
jmp
ret
mov
sahf
and
push
es
fisubl
inc
dec
push
popf
adc
adc
pop
cmp
shl
ret
stc
or
and
cmp
cmpsl
jbe
enter
mov
or
pop
jle
push
cwtl
push
sub
push
cmp
jo
dec
aas
or
test
or
loopne
and
bound
jg
out
xchg
repnz
popa
lret
pop
pop
aad
xlat
les
mov
test
lds
mov
cmp
imul
dec
ljmp
dec
cmp
lahf
aaa
enter
scas
pop
jbe
cmp
icebp
rcl
push
rclb
push
pop
enter
mov
inc
inc
and
adc
or
adc
int
hlt
imulb
ja
add
cmp
fcmovnbe
sahf
and
int
and
mov
loope
dec
mov
aad
add
lock
sbb
mov
lcall
push
xchg
scas
mov
xlat
roll
cmp
nop
outsb
jp
sbb
pop
scas
repnz
stos
push
cmp
add
dec
or
xlat
or
adc
bound
repz
cmp
xchg
xchg
xchg
lock
mov
xchg
adc
movsl
push
lret
bound
in
inc
push
inc
ret
inc
ret
xor
and
mov
lret
cmp
or
mov
das
iret
mov
jbe
rcll
movsb
and
adc
pop
cmc
fs
pop
test
lock
or
enter
xor
jb
jne
call
jbe
xchg
push
cmp
sbb
jae
jmp
in
lock
int
push
inc
jp
mov
js
mov
lcall
stos
lds
mov
jmp
mov
shll
dec
lock
mov
je
cmp
inc
sbb
or
and
divb
pop
jo
jecxz
ret
jmp
out
dec
jb
pop
ret
je
repnz
sbb
jns
pop
flds
daa
mov
popa
testb
ss
icebp
push
xorb
adc
test
cld
insl
or
shll
mov
mov
pop
mov
scas
add
sti
lods
jp
jmp
adc
push
faddp
add
lods
fldcw
ss
mov
ret
cmp
sbb
mov
adcl
push
pop
scas
and
loop
mov
push
or
mov
sub
pop
mov
int
popf
push
in
push
mov
add
or
fcoms
and
ret
lcall
cmp
shr
dec
mov
shr
mov
push
jb
xchg
jo
enter
imul
fcoms
negl
inc
in
xchg
lods
jg
sbbb
test
or
xor
lea
mov
subl
insl
aaa
jae
pop
scas
dec
mov
into
nop
repnz
sti
ja
or
jmp
sbb
cmp
sarb
mov
xchg
mov
sbb
lds
xchg
mov
pop
pop
jnp
das
xor
ja
stos
fchs
push
shrb
cmpsb
cmp
bound
std
ror
mov
daa
call
fisttpll
push
lret
cmp
nop
sub
dec
cmp
xchg
pop
popf
mov
int3
scas
mov
push
jne
and
pop
fstpl
add
pop
sub
jl
fs
cmpsb
int
mov
ret
mov
pushf
call
dec
je
cmp
sbb
mov
xor
mov
popa
mov
mov
stos
pop
sub
loop
dec
lods
jle
dec
les
aaa
cld
fsubrs
int3
sbb
sub
iret
ds
inc
out
inc
je
popa
lds
testb
xchg
mov
sub
cmovbe
mov
sarl
aam
add
jle
dec
adc
cwtl
pop
jp
pop
push
aaa
fnstenv
mov
jno
adcb
decb
gs
adc
rcll
xchg
jne
lods
inc
stc
daa
rcr
xor
out
jno
mov
push
loope
aas
xchg
xchg
and
fs
cmpsl
rcr
idivb
inc
fisubrl
adc
cmp
aam
push
inc
mov
jp
sbb
pop
mov
cmp
ret
dec
cmp
loope
xchg
jmp
icebp
mov
xchg
out
dec
stc
enter
mulb
rep
repz
ljmp
push
mov
popf
cmpsl
into
mov
push
cwtl
stos
sub
sbb
aaa
fnsave
xchg
mov
roll
mov
fdivrl
or
push
fcoms
mov
movsl
addr16
jb
mov
in
pop
gs
inc
xor
xlat
mov
xchg
repz
sbb
jle
add
fsubrs
dec
gs
add
sub
rcrl
jns
shlb
popa
fcmovnbe
movsl
cmp
out
pop
mov
jbe
and
out
sub
inc
adc
sub
mov
addr16
dec
movsl
or
pusha
pusha
popf
fdivl
outsl
inc
ficompl
cs
mov
add
mov
fs
or
ja
cmp
adc
inc
mov
icebp
and
ds
cmp
and
jmp
fwait
insb
and
daa
hlt
adc
adc
adc
sbb
imul
stos
js
and
lods
push
xor
cmpsb
jbe
jne
scas
dec
sub
mov
cmpsl
pop
insb
mov
dec
and
inc
hlt
push
in
popa
sti
dec
sets
dec
fstpt
test
jne
pcmpgtb
mov
cmpsl
mov
mov
aam
xchg
add
cmp
sub
ja
push
mov
fcoml
dec
ss
cld
jnp
sub
addb
xor
cmc
mov
popf
mov
or
inc
js
insl
sub
inc
dec
in
les
subb
sbb
je
mov
inc
dec
int3
outsl
push
out
sbb
iret
jb
loope
cmpsb
sbb
sti
mov
and
loope
cmpsb
fisubrl
xchg
fiadds
cmp
xor
addr16
sti
data16
cmpsl
stos
flds
xor
cwtl
addb
mov
mov
inc
in
mov
mov
pop
out
mov
js
inc
bound
daa
push
xor
pop
jmp
dec
sub
das
test
adcb
pop
aaa
dec
cmpsl
das
scas
subb
aam
xchg
into
fs
xor
pop
call
and
adc
into
jg
mov
push
sbb
mov
out
dec
cmp
push
cli
xchg
push
out
sahf
nop
mov
inc
dec
xchg
iret
push
loope
cli
fyl2x
mov
adc
jbe
lahf
jno
dec
shl
push
insb
adc
cmp
loope
rcll
push
jne
sarb
lret
lods
pop
and
mov
pop
push
in
mov
xchg
ljmp
sub
or
mov
mov
outsb
adc
push
add
mov
cld
std
mov
mov
mov
mov
ss
imul
cltd
jne
test
repz
xchg
in
shlb
sub
addr16
sbb
fnstenv
jle
and
jmp
or
adc
mov
lret
lods
addr16
pop
pop
xchg
mov
mov
or
out
sbb
mov
xchg
sti
pop
and
arpl
jge
cli
leave
cmp
add
xchg
and
aad
movsb
jl
adc
xchg
sbb
mov
fs
inc
rol
fimull
adc
sub
and
dec
jl
jbe
fs
sub
ret
or
stos
jne
fcoml
int3
jbe
mov
pop
mov
in
cmp
out
add
testb
mov
dec
jmp
inc
popa
jo
and
fildl
inc
das
int
imul
push
dec
lret
divb
mov
jmp
xlat
ss
or
or
addr16
or
jmp
insl
and
jns
movsl
test
sbb
addr16
pop
pop
in
pop
fstpt
xlat
push
push
fnstsw
pushf
aas
std
stos
jg
out
out
jb
jecxz
js
in
xchg
inc
dec
daa
in
adc
cmp
or
mov
filds
sbb
cmp
aad
hlt
shrl
stos
add
jne
jb
dec
mov
fisttpll
push
jecxz
ljmp
pop
lcall
aaa
cwtl
sbb
inc
dec
fstl
and
cmp
xchg
aaa
pop
std
pop
pop
push
adc
jecxz
push
inc
shl
sbb
fmuls
jp,pt
xchg
pop
std
and
lahf
pop
mov
repz
jp
inc
insb
ret
mov
pop
sub
int
sti
repnz
sbb
jle
in
push
mov
dec
cmp
mov
xor
cmpsl
cmp
ficoml
sub
or
lahf
jmp
or
mov
pushf
ja
pushf
repnz
enter
xchg
xchg
inc
and
hlt
xlat
int
pop
push
push
xor
pop
clc
xchg
loopne
cmp
mov
in
pop
negl
adc
pop
in
xchg
cmpsl
in
mov
pop
pushf
aad
push
push
out
rcrl
pop
push
pop
insw
mov
rcrb
xor
sub
xchg
lcall
mov
outsl
sbb
sti
insl
mov
test
add
mov
and
inc
daa
xchg
mov
sub
and
mov
cwtl
mov
jmp
xor
and
call
orb
movsb
bound
ret
mull
push
push
adc
call
push
xchg
flds
jne
xor
clc
loope
shlb
mov
stc
imul
inc
jmp
push
mov
mov
out
sub
jbe
cwtl
imul
jno
cmpsl
dec
incl
and
cmp
mov
mov
jg
fucomip
sbb
jecxz
into
pusha
or
into
dec
movsb
push
adc
mov
popf
or
adcb
mov
sub
push
movsb
cli
pushf
xchg
cld
std
ljmp
data16
xor
sub
rcll
cmp
push
cmpsl
inc
aas
fsubs
lret
imul
mov
out
inc
insl
jmp
pop
pushf
loopne
push
push
jne
jp
stos
dec
mov
and
mov
mov
cmp
sti
jle
push
imul
aas
pop
fdivrs
mov
ret
clc
arpl
nop
movsb
mul
in
aas
pop
xlat
bswap
push
mov
pushf
inc
jmp
adcl
pushf
ffreep
loope
or
sbb
push
push
mov
lods
shr
xor
and
daa
mov
outsb
inc
cmp
dec
aam
and
mov
mov
jno
dec
pushf
inc
mov
std
in
dec
adc
or
iret
dec
icebp
mov
xor
adc
in
fisubrl
sub
xchg
lock
push
cld
add
das
push
shrb
fldl
sbb
cltd
mov
outsb
inc
out
inc
mov
add
iret
je
mov
jle
dec
dec
mov
add
lahf
cmp
cmpsl
push
or
mov
cmp
mov
out
pop
adc
add
int
fstpl
dec
into
enter
into
pop
cs
pop
mov
add
mov
lods
push
iret
pavgb
sbb
inc
xchg
setns
adc
cmpsl
add
ret
push
sti
shlb
sub
gs
outsb
lea
das
sbb
fwait
mov
repnz
xor
dec
fdivrs
idivb
mov
mov
mov
jg
sbb
mov
or
aas
mov
fisubs
daa
mov
es
in
jl
mov
push
hlt
add
fldl
inc
push
hlt
xor
inc
loopew
pop
lods
or
cmp
fs
sub
ret
adc
sub
cltd
ret
dec
stc
cmp
notb
cmp
push
jb
inc
mov
pop
inc
imulb
adc
in
ja
mov
gs
andl
sbb
mov
stc
dec
cmp
xchg
cmp
mov
rorl
fsubl
ljmp
gs
dec
mov
cmc
inc
arpl
sub
dec
add
jg
cld
and
jne
pushf
lds
pop
xorl
xchg
pop
es
sbb
push
or
or
idivl
sbb
sbbb
jmp
pop
ljmp
dec
lret
mov
sbbb
out
mov
imul
daa
subl
jl
jmp
dec
pop
inc
xchg
lods
test
fdivl
lods
pop
xor
add
mov
and
or
fwait
imul
mov
xor
jecxz
ss
adc
test
sbb
fdiv
jne
xlat
push
add
sbb
pop
or
sbb
lods
mov
inc
fnstsw
jmp
sbb
add
pushl
stos
roll
sbb
icebp
test
enter
mov
adc
mov
dec
ss
into
bound
sub
mov
sub
xor
lock
mov
loop
sbb
jge
mov
mov
mul
or
push
adc
mov
int
fisttpll
lret
int
cli
in
or
loope
dec
mov
xor
rorl
cmp
push
mov
adc
jmp
and
adc
xchg
jg
pop
frstor
fisttpll
popa
mov
lds
and
test
pop
insb
gs
stc
testb
fisttps
xor
xchg
pop
or
sub
repnz
mov
adc
push
pop
and
out
jg
les
and
mov
iret
hlt
push
roll
mov
mov
aam
cmp
or
jp
adc
jo
loopne
jge
add
sub
movsl
dec
dec
icebp
bnd
adc
push
mov
inc
aad
test
pop
es
repz
std
arpl
fiadds
jmp
sbb
insl
arpl
sub
iret
pop
int
lahf
or
arpl
sub
fistpl
xor
icebp
push
xchg
lods
repnz
je
dec
xlat
hlt
dec
outsl
mov
sbb
sub
adc
in
mov
loope
pop
stos
mov
xor
jae
xor
adc
pop
dec
mov
cmp
mov
maskmovq
testl
sarl
cli
pop
dec
out
jg
pop
and
insb
lret
test
pop
sbb
icebp
mov
loope
mov
rclb
and
xchg
ret
stc
bound
sub
loope
sahf
insl
scas
gs
jmp
aad
movsb
sub
pusha
es
pop
pop
xor
stos
push
scas
mov
mov
mov
dec
fwait
jbe
test
or
sub
fucompp
mov
fistpll
jmp
lret
lock
fmul
mov
push
pmaxub
mov
pushf
lea
inc
scas
imul
pop
in
pop
popl
ret
loop
subl
loopne
pop
insb
jmp
mov
fiaddl
aas
stos
sbb
sahf
xor
lcall
mov
xor
adc
lea
xchg
sbb
cld
insl
bound
es
sbb
movsl
jnp
lds
sbb
inc
lods
jmp
push
jbe
dec
enter
scas
or
jae
pop
rcrb
lods
adc
xchg
shl
lock
mov
jno
popf
push
pop
in
stc
pop
fsts
addr16
jae
shll
mov
cs
mov
test
sub
adc
xchg
mov
cli
imul
daa
push
std
shrb
mov
xor
pop
and
dec
or
push
or
scas
std
push
or
jbe
dec
adc
stc
andl
cmpsb
jp
or
out
mov
das
lds
insl
sbb
inc
jl
pop
mov
mov
mov
scas
enter
loop
shlb
mov
inc
sub
pop
inc
inc
inc
scas
cmp
rorl
or
ret
ret
push
aas
stc
fiaddl
xor
cmpsl
or
scas
cltd
fsubrs
jbe
xor
add
fsubrp
popa
in
add
repnz
sbb
and
fwait
inc
icebp
shrl
cmp
loope
mov
lock
fs
inc
lahf
stos
and
push
lds
inc
mov
out
popf
ret
push
rcrb
popf
insb
xchg
push
cmc
xor
cltd
int
test
add
pop
test
push
sub
xchg
ds
push
xor
ds
adc
jo
sbb
push
xor
mov
es
aad
cmp
xor
test
sbb
cltd
outsl
shrl
lea
sbb
sub
mov
mov
inc
mov
call
adc
mov
insb
mov
inc
fwait
pusha
das
push
jbe
or
xchg
in
outsb
push
aam
sub
push
jno
lahf
clc
inc
lahf
sar
les
push
fisubs
subb
jg
adc
jg
gs
inc
scas
ja
jns
bound
sbb
mov
xlat
or
ret
arpl
mov
imul
aaa
hlt
ljmp
addr16
pop
xor
push
gs
pop
ljmp
add
adc
popl
daa
cwtl
int
arpl
dec
sbb
mov
imul
jg
push
insl
push
or
push
sbb
jae
loopne
ret
and
lds
pusha
lods
ret
xor
fdivp
bound
subb
test
jnp
mull
inc
pushf
outsl
dec
mov
sbb
shll
push
push
psubsb
add
lock
lahf
shrb
jecxz
lods
ss
out
fstps
frstor
push
mov
add
push
cmp
mov
mov
push
andl
push
and
push
ljmp
inc
xchg
shll
mov
rorl
mov
add
adc
inc
adc
cmp
pop
jmp
xor
pop
nop
dec
mov
adc
mov
stos
sbb
cld
dec
dec
sbb
mov
lret
popf
and
pop
loop
cmp
pop
jle
addl
push
enter
loope
dec
or
es
addr16
subb
sub
push
adc
ds
and
test
ja
sbb
sub
es
cmpsb
mov
scas
les
stos
jecxz
cli
adc
cmp
mov
in
sbb
imul
jl
adc
mov
shl
push
bound
lods
and
jp
sbb
rep
cmc
in
pop
inc
or
je
add
scas
les
mov
or
pop
push
dec
call
or
lods
push
jge
add
or
inc
cmp
xchg
movsb
repz
push
push
ss
dec
pop
cmp
sahf
dec
fbstp
sbb
adc
lds
cld
mov
jns
cmc
xor
sbb
sbb
pop
xchg
loopne
out
lcall
lret
jge
cld
jnp
jg
test
aaa
sbb
cmc
xchg
xchg
mov
hlt
and
fstp
out
loope,pn
sub
fdivl
lret
movsl
call
dec
mulb
ja
lods
mov
jns
lcall
or
stc
sbb
fildl
imul
bound
mov
mov
push
jmp
add
stos
cs
movsl
and
jecxz
ret
mov
rcl
mov
fcoml
dec
jg
xorl
or
fcmovu
gs
gs
push
dec
pop
scas
mov
popa
jl
data16
sbb
lret
inc
mov
push
jl
jmp
jge
sbb
dec
xchg
or
add
inc
mov
jmp
aas
push
aas
sub
sub
lahf
mov
popa
es
pop
inc
mov
lahf
mov
data16
sbb
mov
sbb
inc
mov
dec
stc
sub
mov
mov
jle
fadds
loopne
push
jnp
leave
popf
lret
add
idivl
mov
or
int3
jno
mov
fwait
pusha
or
imul
hlt
jbe
int3
inc
ficomps
std
dec
sub
add
test
and
inc
insb
fdivs
sub
mov
pop
lock
pop
push
repnz
sarb
enter
mov
cld
aam
push
jbe
das
mov
mov
cmp
jle
stc
outsb
xor
test
popa
pop
out
dec
je
lcall
ja
jns
inc
mov
and
xor
or
fidivrs
inc
add
mov
jp
push
je
push
xchg
inc
or
aaa
sub
xor
stos
jge
fwait
dec
and
push
xchg
cmp
jo
or
imul
mov
stos
xchg
mov
xchg
hlt
xor
rcrb
push
movsl
xlat
xchg
fldt
notl
imul
shr
stc
dec
test
mov
dec
test
out
cmp
adc
lret
imul
push
addb
cwtl
sbbl
int
xchg
xchg
jg
lcall
inc
cld
jne
insb
lods
fmuls
fisubrs
pop
les
push
loop
movsb
xchg
insb
stos
add
push
ret
sub
aam
cmpsb
inc
mov
stos
pop
jg
mov
add
push
daa
ror
cmp
out
pop
xchg
movsb
and
lods
loop
fmuls
sub
sbb
imul
xchg
jno
mov
and
jb
dec
rclb
fsubrs
cmp
mov
dec
daa
mov
in
std
addr16
push
cs
dec
and
in
push
sbbb
movsl
dec
add
in
ror
push
lret
xchg
xor
pop
inc
or
ret
cmpsb
arpl
jb
in
jae
or
adc
das
dec
jecxz
push
ljmp
lar
rcr
mov
into
stos
fsub
and
lock
xchg
int
mov
out
push
pusha
stc
pop
fistpll
xor
lds
sbb
xchg
sahf
add
sbbb
xchg
cmp
inc
test
test
bound
inc
mov
fstpt
test
sub
fisttps
push
iret
cmp
roll
inc
sbb
arpl
push
and
pop
dec
cmp
mov
mov
inc
sbb
jo
pop
adc
xchg
mov
jmp
rcrl
out
lock
test
cmp
lock
jl
out
cmpsl
jnp
mov
mov
mov
fcomi
add
inc
lods
adc
xor
xor
mov
in
xchg
mov
mov
ja
pushf
lds
mov
dec
lret
das
shll
and
xchg
xchg
add
cmpsl
add
pop
call
pop
jns
cmc
aam
out
cmc
add
into
pushf
sbb
pop
cmovg
in
fwait
push
xchg
ss
popa
pop
push
subl
icebp
dec
lea
pop
shl
dec
mov
outsb
out
aam
push
cmp
loopne
cltd
pusha
pop
jmp
lret
ret
rorl
loop
outsl
push
nop
push
out
dec
sub
xchg
jle
sahf
insb
in
scas
xor
push
test
and
pusha
or
in
movsl
mov
inc
inc
push
push
jp
push
xchg
xchg
icebp
pop
pop
pop
aas
mov
ret
in
ss
xor
std
jbe
loop
push
or
fsts
out
std
add
mov
mov
pop
aam
xchg
shrb
cmp
sub
adc
xchg
cmp
push
imul
sarb
sarl
hlt
xchg
icebp
outsb
dec
cli
test
mov
push
add
dec
in
js
loopne
jb
mov
das
dec
fmul
sti
push
sahf
adc
int3
add
jb
in
clc
inc
pop
mov
inc
sub
loope
loop
aam
into
repnz
lods
and
jo
int
xchg
or
mov
pushf
xchg
cltd
mov
xor
xlat
stos
push
daa
dec
popa
dec
pop
out
outsb
inc
icebp
fsubrs
inc
out
sbb
xchg
cmp
cmp
cmpsb
sbb
sub
mov
imul
cmp
jne
test
jge
push
int3
sar
mov
repnz
es
outsb
jae
orl
arpl
push
jo
jl
add
push
lds
aas
jns
imul
andl
mov
push
mov
clc
fisubrl
mov
or
into
jle
fdivs
in
sub
arpl
je
mov
cmc
je
push
int3
mov
setp
pop
data16
cmp
imul
pop
test
dec
negb
xor
pop
fstps
loopne
dec
ljmp
sub
jle
aad
cmc
cld
inc
pop
pop
mov
stos
pop
sub
lcall
sub
cwtl
enter
cld
mov
dec
pop
fnstcw
lret
leave
arpl
mov
inc
add
fld
insl
pusha
pop
test
fdivrs
mov
repz
and
sbb
call
bound
lods
rorl
pop
aas
ret
orb
push
and
addr16
sub
rcrb
call
adc
inc
pop
roll
lods
popa
fstpl
cltd
andb
aad
mov
js
sub
neg
pop
into
xchg
lcall
cmp
push
daa
mov
lcall
mov
push
imul
sbb
jae
rorb
mov
leave
repz
pop
rcrl
clc
mov
dec
fcmovbe
movsb
mov
fadds
out
sub
mov
imul
xor
test
rolb
dec
jo
daa
scas
mov
cmp
mov
xchg
je
dec
xchg
push
or
arpl
gs
ret
lock
icebp
cltd
cs
adc
stos
jecxz
jge
xor
jne
repnz
and
inc
and
push
jne
and
push
mov
jmp
jecxz
cltd
testl
xor
mov
push
cmp
lcall
xchg
rorb
xchg
ljmp
shl
imul
cmp
adc
mov
pop
stos
inc
mov
xlat
in
pushf
out
pop
and
dec
jl
shl
pushf
and
test
xorl
repnz
adc
or
popa
es
xor
call
call
mov
mov
xor
mov
inc
mov
or
pop
imul
cwtl
cmp
test
test
movb
sbb
das
movsl
pop
daa
divl
adc
sbb
jp
push
jo
out
dec
sub
outsl
xchg
ret
pop
fisubl
mov
mov
shll
add
mov
divl
sub
std
icebp
cmp
out
int3
sbb
outsb
and
xorb
jg
popf
aad
mov
aaa
mov
outsl
xchg
sub
or
or
shl
xor
aam
lods
cmp
and
push
add
add
inc
xchg
aas
mull
sub
jno
out
cmpsb
add
mov
out
inc
pop
fistpl
cmp
data16
fstl
adc
shll
dec
add
add
pop
and
xchg
ss
dec
sbb
shlb
sub
pop
jmp
stos
jg
loop
sahf
scas
jle
fisubs
adc
rcll
arpl
jbe
or
cmpsl
pushf
mov
lea
mov
ret
pop
jmp
xchg
pop
int3
xchg
pusha
test
cmc
sbb
xchg
jmp
xor
cmpsl
push
nop
jp
outsb
fcomp
mov
pop
mov
add
xchg
aas
js
xor
dec
push
stos
addl
add
xchg
mov
pop
jl
cmpb
cld
sbb
sub
cmc
pop
loopne
mov
xor
add
push
lods
sub
imul
inc
xchg
shll
add
jmp
pop
insb
cmp
jnp
lds
sbb
icebp
adc
sub
shlb
mov
pop
js
fs
or
sub
imul
loope
pop
or
ret
mov
dec
pcmpgtd
pop
std
lods
inc
and
push
cmp
sbb
daa
jg
fdivs
pcmpeqd
stc
mov
jp
in
fsub
and
test
mov
test
xlat
out
fs
test
inc
loopne
sbb
jns
popf
sub
or
sbb
mov
sbb
inc
jnp
repnz
test
mov
lret
dec
dec
imul
push
jbe
pop
cltd
faddp
gs
stc
add
repnz
aam
int3
push
shr
das
xor
jmp
fnstsw
inc
mov
sarb
jnp
sbb
jo
and
mov
dec
js
outsb
int
pop
pop
mov
jb
in
push
add
mov
mov
loopne
aas
mov
or
psllw
lea
jecxz
cs
setne
pop
loopne
jg
jp
mull
das
popf
jns
iret
loop
dec
gs
data16
inc
les
cmp
popa
pop
inc
adc
stos
xor
sbb
xchg
fs
lret
mov
mov
data16
popf
shr
pushf
mov
pop
ret
and
sbb
and
dec
xor
sahf
pop
notl
xchg
outsl
xchg
sub
inc
ljmp
add
mov
mov
push
ja
and
andl
pop
jp
mov
sub
into
push
push
lret
push
loop
cltd
jns
rorl
ja
jne
cmpsl
inc
ret
roll
cmpl
ret
and
push
add
mov
push
and
jo
xchg
int3
xor
lea
into
mov
mov
jecxz
notb
add
sbb
push
mov
fs
int
jns
enter
and
cmp
mov
mov
clc
iret
shl
or
and
mov
fwait
xchg
int
or
mov
aaa
adc
cmp
fmull
xor
cwtl
in
mov
iret
loop
pop
sbb
rolb
mov
insl
lahf
sbb
jo
insl
mov
xor
loopne
orl
rcll
icebp
sub
sbb
xchg
out
push
inc
jl
out
fldenv
fcmovbe
mov
pop
mov
scas
xor
and
daa
inc
jp
mov
lahf
movsb
push
add
cld
sub
or
dec
iret
test
add
dec
dec
inc
int
icebp
lds
movsb
push
push
cmpl
hlt
sbb
bnd
data16
push
sbb
pusha
inc
sub
jno
hlt
pop
dec
mov
push
and
push
mov
mov
dec
cmpl
adc
dec
or
hlt
jo
and
xor
popa
int
mov
adc
add
aas
push
arpl
out
or
sbb
div
insl
test
pop
loope
push
cmp
mov
add
mov
adc
es
xor
push
faddl
hlt
es
jecxz
call
adc
ja
clc
jbe
aas
lock
out
lock
xchg
mov
cltd
test
xor
nop
das
stos
test
cmp
push
and
cmc
subb
out
pop
pop
enter
rolb
xchg
movsb
sbb
sub
push
hlt
jo
ret
xor
push
popa
ljmp
cwtl
or
mov
push
in
das
push
es
sbb
inc
gs
dec
pop
jge
or
imulb
sbb
mov
mov
rol
mov
mov
dec
ffreep
or
aad
adc
dec
mov
xor
jle
sbbl
add
and
add
jno
jnp
mov
mov
mov
addl
cmp
mov
mov
sti
dec
aas
testl
mov
push
je
push
arpl
cld
sahf
nop
int
pop
and
mov
inc
mov
das
mov
sbb
and
mov
push
arpl
pop
fs
dec
pop
shll
repz
std
cmpb
pop
leave
or
pop
and
mov
jns
sar
jl
push
insl
or
jp
fldenv
cld
sub
and
pop
xor
sbb
and
rorb
dec
sbb
rorl
xor
push
cmp
push
movsb
lods
adcb
jmp
scas
xor
mov
insb
xchg
cmpsb
xchg
pop
mov
push
ljmp
dec
in
and
aad
test
jge
push
sti
add
shlb
stc
stos
inc
push
nop
popf
sbb
stc
sbb
testl
mov
sarl
push
add
dec
push
inc
mov
jl
xor
mov
xchg
hlt
jns
fdivrl
arpl
cmp
fxch
xchg
pop
pop
clts
mov
ficoml
data16
adc
dec
fcmovnb
sbb
xchg
dec
xchg
sub
cwtl
mov
xor
jns
inc
push
push
loop
ja
xchg
and
mov
lret
in
loope
or
xor
fisubrs
stos
inc
cmpsb
divb
xchg
fdivr
xorb
sbb
push
lahf
popa
push
fsubrl
sbb
dec
bnd
push
cmp
adc
sub
fidivrl
shrb
ror
movsb
lds
mov
lock
add
xchg
stos
pop
xor
mov
jnp
mov
or
gs
imul
int
aaa
pop
stc
or
xchg
pop
jl
xor
stos
addl
cwtl
jl
sbb
test
cld
stos
or
inc
insl
jne
movsl
pop
fldl
inc
mov
sub
push
nop
mov
inc
mov
push
inc
rolb
data16
mov
add
inc
pop
movsl
addr16
push
fs
aam
sub
fldcw
mov
push
xor
and
jg
movsb
xchg
rcl
imulb
push
in
sub
call
jl
adc
insb
lret
jg
mov
pop
stc
subl
jmp
and
pop
inc
push
test
decl
popa
push
iret
xor
fists
xor
inc
lods
add
into
negb
pop
mov
in
movsb
insb
cmp
add
out
ss
pop
fistl
and
lods
rcrb
mov
movsb
fistpl
xchg
mov
and
cmp
enter
adc
and
push
and
mov
sub
cli
inc
jg
jae
lods
or
inc
clc
xor
jl
loopne
aas
sbb
xor
mov
cmp
testb
in
xor
mov
mov
jb
jmp
mov
setae
test
pop
mov
out
dec
sbb
pop
jmp
jg
cs
sub
push
jecxz
inc
std
jg
sbb
movsb
jg
testb
data16
fdivl
enter
adc
xor
int3
inc
test
xor
in
xor
in
inc
ja
hlt
out
xor
int
inc
cmp
dec
sbb
bswap
int
xor
out
jo
mov
mov
jne
pop
add
sbb
mov
lds
loopne
cmp
pop
out
push
sar
adc
dec
inc
sti
adc
ret
fwait
jle
int
out
dec
dec
rcll
aad
jo
imul
cmp
mov
or
pop
or
out
dec
stos
pop
and
out
flds
fcomps
sbbl
add
enter
inc
and
scas
cmp
cmp
and
pop
imul
jbe
imul
lret
and
clc
loop
sbb
ja
xchg
xchg
xchg
jns
pusha
shl
pop
std
add
inc
mov
pop
xchg
push
mov
sub
in
dec
scas
jbe
jle
cltd
sbb
dec
dec
pushf
idivl
pusha
sub
jge
outsl
rclb
adc
push
pop
hlt
test
dec
mov
loop
pop
ljmp
fistl
push
in
js
cli
jg
jg
jns
rcrl
dec
mov
jp
mov
pop
shll
lret
pop
in
leave
daa
add
xchg
mov
jecxz
jb
or
pop
daa
test
loopew
cmp
cmpsb
jecxz
out
ret
iret
fimull
repnz
je
insb
call
push
and
mov
dec
rorb
and
xor
lods
mov
fistps
movsb
mov
shlb
out
add
and
adc
sub
enter
cltd
push
inc
cmp
add
loope
cmp
icebp
sub
fdivrs
sub
sbb
xchg
jmp
jp
rclb
push
xor
xchg
gs
div
xchg
inc
movsb
or
cmpsl
cmp
cld
lods
fs
push
mov
inc
mov
int
or
mov
push
jns
and
pop
jno
jmp
mov
adc
mov
mov
mov
xlat
push
in
add
xlat
xchg
add
xor
jne
mov
decb
sub
cmovb
jl
adc
out
cmpsl
lcall
or
sub
mov
lods
mov
cmp
sub
push
mov
mov
movsl
call
loop
mov
rol
add
fmull
in
jmp
pushf
pop
mov
fistps
ja
inc
jmp
int
test
jb
xor
xor
sti
and
push
and
fdivl
xchg
push
in
mov
lock
pop
fimuls
mov
adc
push
push
add
stos
mov
and
lods
dec
and
adc
sub
xor
aaa
sbb
mov
shlb
in
cmpsl
out
dec
cmp
mov
call
xor
jno
xchg
cmc
pop
jo
lret
cmpsb
sarb
sbb
mov
clc
and
idiv
sub
mov
rorb
mov
cwtl
pusha
in
xor
shrl
testb
cld
fildll
jns
in
cmp
mov
fildll
in
jb
psrld
insb
jg
adc
and
mov
bound
insb
xor
dec
mov
jl
cmp
loopne
mov
and
mov
add
outsb
test
iret
adc
and
ret
xchg
cltd
add
jb
adc
sub
dec
mov
sub
arpl
push
fldl
and
cli
stc
loopne
and
push
xchg
jle
cld
mov
ret
or
call
and
int
test
adc
aam
mov
mov
add
les
daa
cmpsb
mov
iret
outsb
sub
mov
das
lret
jge
leave
cwtl
pop
movsb
fs
test
sub
mov
jo
pop
movsb
pop
dec
xor
ret
es
in
roll
sbb
sub
push
mov
test
pop
dec
jg
outsl
mov
test
cwtl
jbe
inc
add
xor
sbb
xchg
pop
push
mov
xchg
xchg
push
mov
fisubs
repnz
mov
add
aad
cmp
cld
pop
xchg
pop
lea
scas
imul
xorl
data16
mov
pop
lret
fisttpl
lcall
jbe
push
lea
fwait
stc
pop
sbb
sub
adc
sbb
pushl
sub
sbb
ja
mov
cmpsb
orb
or
push
out
and
xor
mov
rol
stc
loop
mov
mov
mov
aaa
repnz
cmpsl
sbb
ss
add
insl
hlt
std
and
cmpsb
add
push
out
push
mov
sub
jge
cmp
mov
aad
ljmp
aad
gs
sub
xchg
iret
cmpsb
push
mov
push
xchg
cs
mov
and
push
xor
dec
sub
sbb
mov
imul
cltd
mov
jo
insl
inc
push
imull
push
incl
movsl
icebp
leave
xchg
push
fmull
clc
testl
cli
mov
pop
rorl
mov
out
in
mov
cmp
push
sti
iret
mov
loop
pop
push
gs
pop
pusha
inc
adc
cmpsl
inc
lret
lret
adc
sbb
sti
out
xchg
pop
xchg
xor
or
aaa
dec
adc
jmp
sub
push
ss
ja
add
js
ds
mov
sbb
mov
sbb
xchg
lods
xor
jns
mov
inc
fbstp
stos
scas
fistps
cmp
jno
sbb
lretw
fidivl
ret
flds
loop
hlt
sahf
push
ljmp
cmc
repz
adc
hlt
xor
add
add
mov
mov
lcall
add
scas
stos
int
inc
out
add
inc
lds
jns
push
in
test
pop
ja
fwait
scas
outsl
jne
fadds
add
push
dec
aad
cmpsb
inc
or
mov
cli
mov
repz
loop
and
push
ret
mov
pop
inc
adc
xchg
pop
call
xor
ret
int3
lret
lods
pop
dec
or
jg
stos
jecxz
pop
or
mov
mull
add
orb
les
fwait
sub
xor
pop
inc
adc
inc
xchg
ret
xor
dec
insl
inc
dec
stc
push
push
shl
jnp
xor
mov
jg
daa
cmpsb
lahf
leave
mov
push
int
lds
fisubs
clc
xchg
cltd
clc
push
or
adc
lds
sbb
out
arpl
push
push
cmpsb
fldl
jle
and
les
jo
addr16
jbe
xor
out
xchg
call
cs
xchg
icebp
inc
mov
mov
jl
cmpsb
mov
jle
fldenv
ja
pop
rcrl
add
push
sbb
mov
rclb
enter
cmpsl
in
dec
adc
sbb
repnz
jae
inc
xor
mov
in
and
lahf
cmpsl
adc
out
into
cmpsb
sahf
arpl
gs
push
inc
jbe
add
lds
push
stos
es
filds
int
jae
in
xor
mov
mov
fiaddl
jae
adc
xor
pop
dec
ljmp
loopne
movb
ret
mov
inc
pop
mov
je
or
cmp
inc
push
gs
sub
stos
bswap
mov
jmp
aaa
adc
icebp
mov
les
les
sub
aam
shll
push
outsb
and
and
adc
rcll
xlat
and
mov
ljmp
loope
sub
inc
jo
mov
xor
xchg
pop
clc
test
inc
sti
test
push
ljmp
imul
int3
mov
sbb
pop
adc
jecxz
aam
in
stos
pop
pop
out
mov
fsts
xor
repz
jecxz
pop
cmp
jmp
mov
mov
xchg
sbb
adcb
xorl
mov
lret
test
dec
add
inc
jnp
leave
sub
ss
inc
jb
int3
imul
hlt
dec
imul
outsl
xchg
pop
lret
ljmp
or
dec
mov
xchg
jno
mov
rorb
cmpsl
in
enter
scas
xchg
aas
pop
mov
lahf
sahf
rcrl
insl
sarb
dec
xor
jne
in
repz
cmpsb
mov
add
cmp
scas
xchg
in
mov
pop
aad
test
and
push
inc
pop
sub
fwait
hlt
sub
sub
dec
xor
cwtl
adc
mov
cmp
dec
mov
orb
cli
gs
int
jb
mov
adc
aam
or
out
jecxz
cltd
aaa
mov
popa
mov
or
or
in
sti
push
fstpl
pop
movsl
cwtl
shrb
inc
mov
call
mov
insb
jno
xor
aad
lahf
cmp
cld
leave
sbb
push
or
jne
cmp
imul
scas
lea
mov
loop
xor
cmp
sub
cmp
popa
mov
sub
adc
add
xor
ficomps
dec
or
mov
mov
ljmp
fst
jb
aaa
mov
arpl
iret
cmp
js
mov
sub
and
test
mov
adc
filds
or
test
inc
xor
xor
inc
movsb
stos
dec
adc
jbe
je
outsb
mov
dec
mov
hlt
dec
inc
or
ljmp
fsubr
sub
mov
mov
xchg
imul
loope
fdivrs
rcl
ret
xlat
pop
popa
xor
xchg
ds
pop
mov
adc
outsb
push
mov
es
mov
mov
xchg
mov
les
out
mov
mov
add
fidivrs
das
movsl
jae
pushf
mov
sbb
mov
into
in
jle
pop
push
and
mov
push
and
sbb
pop
adc
insb
iret
mov
pusha
gs
jmp
xchg
popl
test
adc
cmpsl
or
and
or
cmp
daa
jle
xchg
ret
mov
cmpsb
mov
fsin
dec
insb
mov
rcl
insl
push
push
fwait
pop
cltd
je
cmp
mov
sahf
lods
pop
sub
jbe
rclb
lea
daa
loop
loop
cs
aaa
das
cmp
adc
mov
aaa
repnz
aad
mov
fnstenv
sub
lret
xchg
add
loop
pop
jne
int3
xor
loopne
ss
inc
mov
inc
insl
xchg
cmpsb
mov
dec
xchg
sub
fcompl
bound
xchg
sti
dec
shlb
loopne
add
jbe
add
aad
xchg
pop
inc
out
es
out
test
cmp
ljmp
lret
mulb
cs
xchg
push
pop
and
aaa
xchg
sbb
push
and
imul
fcoms
jnp
paddq
cmpsb
inc
cwtl
lret
lods
push
loope
sub
out
push
leave
std
ret
sub
push
push
into
ss
int
ret
or
xor
mov
mov
mov
and
xor
popa
inc
dec
adc
mov
mov
incl
sub
mov
cwtl
mov
add
xor
mov
pusha
ss
jb
sub
inc
daa
mov
mov
lods
fsub
cmp
sub
xchg
outsl
in
ds
call
aam
arpl
xor
dec
push
sbbl
je
loopne
pushf
cwtl
jnp
sub
mov
shl
pop
ljmp
jecxz
or
data16
in
lods
shrb
or
jge
fs
test
dec
enter
ss
or
xor
in
inc
fdiv
add
test
push
jp
fucomp
mov
mov
sbb
repnz
fs
jbe
lahf
subl
fs
adc
stos
aas
int
arpl
sbb
cld
add
xor
mov
push
sub
add
das
xchg
xor
or
sarb
inc
gs
test
jbe
repz
lock
add
fstl
sti
retw
les
sahf
loop
dec
inc
scas
lcall
pop
pop
cli
in
pusha
in
pop
orl
pop
jg
fadds
xchg
mov
fistl
fisubl
pop
arpl
inc
push
lret
shlb
daa
pop
mov
test
aaa
fidivs
sub
aam
ret
jno
mov
lods
mov
cmp
lahf
mov
jne
sarb
lahf
and
imull
je
pushf
repnz
sbb
out
add
ljmp
jecxz
movsl
aam
fxch
lret
and
rorb
xor
add
sti
mov
gs
jo
or
sbb
je
xor
call
sbb
stos
hlt
addr16
outsb
into
and
mov
add
insl
je
lea
in
repnz
dec
xchg
sub
enter
rcr
dec
pop
pop
bound
and
pop
out
imul
cmp
inc
push
out
pop
shll
int3
mov
push
aam
push
adc
mov
je
xor
mov
mov
je
test
lahf
mov
outsb
ja
stc
and
outsb
decl
repnz
mov
ret
xchg
lock
cmp
cs
pop
pop
jb
push
jmp
sbb
pop
lods
dec
push
test
xchg
jmp
ja
out
adc
inc
pushf
mulb
movsl
rol
jl
test
mov
mov
jo
fsub
movsb
mov
mov
bound
sbb
imul
dec
cli
mov
mov
frstor
xor
add
pop
sub
mov
cmp
fadds
dec
push
cmp
iret
mov
pop
scas
fmuls
sub
clc
fdivr
mov
mov
cld
and
shl
sub
sbb
mov
mov
dec
dec
imul
jle
xchg
jo
xchg
sub
mov
insl
loope
ret
mov
ds
sub
js
ljmp
jae
mov
dec
ffree
incb
add
push
dec
ljmp
cmp
mov
jo
xchg
cmp
test
xor
pop
xchg
leave
jnp
jae
push
test
faddl
and
push
neg
xchg
inc
mov
out
inc
scas
xchg
scas
movsb
inc
inc
test
jmp
add
mov
insl
clc
inc
xchg
xchg
mov
pop
aas
lods
mov
jae
add
mov
loope
pop
test
add
dec
jb
mov
in
or
orl
rol
out
out
pop
stos
and
test
sbb
xchg
test
or
lods
mov
decb
jmp
notb
xor
xchg
popa
push
shrl
jns
push
in
sub
int
add
inc
popa
shlb
mov
push
xchg
sarl
mov
inc
xchg
sar
pushf
std
movsb
iret
and
inc
dec
mov
sub
mov
daa
in
out
push
jmp
fisttpl
jae
xor
pushf
fwait
lds
sbb
cmp
es
add
lret
add
xor
mov
dec
sbb
xor
xor
rorl
cmpsb
lds
jns
decl
mov
xlat
and
popa
mov
add
aad
jo
imul
adc
and
xchg
xchg
dec
jp
xchg
mov
cltd
test
ficoms
cmp
repnz
hlt
inc
arpl
jnp
imul
xchg
push
in
iret
jne
xchg
imul
adc
iret
int3
popa
out
or
pop
cmc
fistpll
mov
movsl
mov
mov
mov
call
cli
repnz
test
sub
mov
push
and
dec
lret
or
stos
fsubs
daa
cmc
pop
cmp
cmp
lods
push
mov
fs
xor
sub
shl
in
xlat
sbb
flds
and
cmpsl
clc
cltd
add
loopne
mov
decb
inc
icebp
jg
movsb
mov
out
outsl
popa
pop
jg
in
push
or
mov
out
push
out
addl
outsl
pop
add
mov
adc
jbe
mov
scas
xor
mov
in
xor
jbe
daa
xchg
cmp
mov
add
in
mov
pop
inc
loop
bound
xor
pop
mov
popa
mov
cld
xor
adc
into
mov
mov
sbbl
loope
mov
dec
cwtl
add
in
pop
mov
jns
inc
repz
mov
cltd
fidivl
movsl
cmp
stos
outsl
inc
out
aas
mov
cwtl
pop
xchg
push
aad
stc
lret
push
pop
arpl
and
ds
or
imul
popa
inc
addr16
jle
lret
cmp
jmp
in
push
mov
jle
xchg
pop
pop
dec
pop
loop
outsb
mov
mov
lods
bound
ljmp
jae,pt
and
pop
push
add
cs
ja
shll
bound
lret
out
jmp
dec
mov
push
jge
mov
lods
pop
pop
adc
add
push
pop
cmpsb
repz
testl
and
pop
les
fldcw
push
aas
dec
aaa
sbb
mov
into
pop
cmc
lea
daa
push
call
push
out
fwait
daa
insl
mov
fistpl
into
scas
bound
push
daa
dec
xchg
or
sbb
pusha
add
inc
dec
add
aaa
out
xchg
call
mov
int3
std
mov
inc
xchg
sbb
push
push
mov
mov
and
pop
mov
aad
and
fstl
mov
fisubl
sbb
imulb
mov
jae
test
js
cmp
inc
or
bound
mov
jg
and
mov
mov
decb
addr16
data16
enter
fsubr
mov
or
testl
dec
mov
lret
dec
push
fldl
iret
xchg
add
mov
jno
inc
pop
inc
or
jnp
lods
call
xor
or
sub
test
test
add
fiadds
mov
cmp
aam
push
lar
push
and
inc
sahf
es
xlat
cmp
or
ljmp
stos
jmp
popf
fldz
fistpll
cmpsb
mov
sarb
pop
inc
lea
in
stos
ljmp
dec
xor
ljmp
std
cwtl
bound
inc
sub
inc
test
inc
pop
enter
in
aaa
sub
adc
addb
cmp
dec
cmp
sub
out
iret
stos
sbb
push
call
jmp
mov
sub
movb
push
lret
aam
lods
scas
lcall
cli
dec
jecxz
movsb
xor
lcall
jl
xor
adc
cwtl
sbb
scas
outsb
push
repnz
sub
mov
in
aas
sbb
jl
in
mov
cmc
add
inc
lea
test
fwait
andb
mov
in
lods
sub
cmp
push
cmp
xchg
mov
outsl
subl
adc
jmp
cli
sub
jl
dec
xchg
andl
sbb
imulb
xlat
xlat
jp
fstl
cmc
out
mov
inc
xor
jge
mov
jbe
push
dec
and
scas
pop
loopne
jae
xchg
mov
lret
movmskps
cmp
inc
in
pop
clc
xchg
movsl
jp
aaa
pop
pop
sbb
les
sub
add
or
sbb
and
xor
pushf
mov
aas
mov
jg
xor
js
sbb
pop
adc
enter
xor
sbb
aas
pushf
push
push
nop
je
loopne
push
mov
add
ret
fsts
fldpi
loop
sub
mov
cmpsl
add
pop
popf
push
jmp
jnp
and
icebp
cmp
mov
and
dec
sub
sbb
inc
js
inc
nop
inc
dec
cmpsb
mov
sbb
lods
inc
call
and
push
mov
subl
push
movsl
inc
iret
jae
scas
out
shr
mov
add
std
sarb
cs
mov
pop
add
jb
lret
jmp
sbb
int
adc
in
scas
pop
stc
xchg
adc
lret
xor
mov
or
mov
fisttps
xchg
jg
mov
mov
loope
mov
xlat
mov
fwait
dec
mov
test
xchg
jg
mov
jo
cmp
pop
rolb
test
movsl
mov
enter
jnp
lret
sti
es
in
loope
cmc
mov
je
imul
push
fs
fldcw
inc
test
inc
and
add
mov
insl
lcall
dec
in
xchg
cltd
sbb
mov
mov
mov
cmp
enter
stos
sbb
xchg
cmpsb
or
std
dec
add
std
push
pushf
mov
outsl
shrl
dec
loop
jbe
pop
out
inc
shrb
sub
jl
movsb
xchg
inc
xor
mov
push
cmp
dec
mov
cmp
movd
and
cmp
mov
les
out
inc
mov
jge
dec
pop
cmp
sub
rcll
mov
out
cmp
stos
lock
test
shrb
xor
pop
nop
add
xor
and
jb
outsl
dec
fistl
pop
add
sub
sub
sbb
mov
and
jl
cld
bound
leave
pop
leave
lods
mov
insb
sbb
xchg
or
ret
inc
mov
repz
gs
jg
mov
sub
cs
mov
inc
push
push
mov
and
ret
mov
repnz
int3
cmp
add
adc
lods
jnp
test
sbb
insl
pop
push
inc
cmp
jno
je
shrl
lcall
sub
test
clc
outsl
lods
stos
add
outsl
in
fcomi
repz
sbb
pop
jnp
sbb
lea
jbe
push
dec
jae
cmpb
push
cmc
mov
adc
jle
popa
fs
mov
dec
mov
or
sbb
push
mov
cmp
or
mov
push
loopne
in
mov
cmp
enter
pushf
sub
bound
push
xchg
movsl
in
enter
test
mov
mov
push
adc
push
scas
mov
mov
push
orl
push
xor
clc
int3
adc
xor
add
sahf
mov
push
ja
mov
das
pop
out
pop
inc
repz
mov
push
inc
movsl
inc
xlat
leave
push
cli
aas
xor
sub
and
loopne
inc
popa
and
cs
mov
mov
cmp
push
ja
inc
fnsave
inc
pop
ficompl
push
in
ds
xchg
aaa
bound
cmpsb
inc
jecxz
lcall
xor
xchg
mov
fstl
fcoml
insl
mov
aam
hlt
xor
adc
cmp
lret
or
imul
inc
clc
adc
mov
cmp
iret
into
rcl
cltd
hlt
dec
mov
sub
jns
inc
loopne
cmp
xor
movsl
or
imul
sub
sub
sbb
mov
mov
lahf
xor
in
dec
mov
in
push
rcrl
in
sbb
cmc
inc
icebp
test
loope
inc
arpl
fidivrs
shll
add
xchg
xchg
je
push
mov
jnp
es
xchg
ljmp
fdiv
inc
jmp
push
nop
js
pop
jecxz
icebp
imul
dec
cmc
push
mov
loopne
xor
stos
orb
movsb
and
adc
pop
shlb
fwait
jae
mov
or
daa
loop
mov
inc
adc
out
adc
loope
jp
outsb
sbb
jno
ret
fstps
lods
push
add
push
cmpsl
xchg
movsl
xchg
loop
adc
imul
lret
lods
xorl
mov
cmp
lods
dec
fistps
add
jecxz
sub
lahf
in
cmpsl
cmp
push
ss
fnstsw
iret
clc
xchg
repnz
cmp
shll
popl
addr16
cmc
dec
rorb
pop
mov
add
adc
outsl
inc
cmp
pop
inc
mov
popf
sub
data16
jne
es
mov
idivl
repnz
and
test
push
add
pop
inc
mov
adc
fmull
or
inc
nop
mov
mov
movsl
xor
sub
outsl
std
in
dec
sti
je
scas
sbb
mov
test
fwait
mov
dec
mov
pop
dec
mov
push
jno
in
push
sbb
xchg
fcomi
adc
xlat
mov
test
mov
jno
cmc
add
sub
jne
stos
aaa
inc
ficomps
jnp
das
jl
jge
out
mov
repz
add
and
add
adc
out
lock
pop
jbe
ja
pushf
adcl
inc
fiaddl
mov
push
cmp
sub
inc
jb
dec
ds
sub
sub
cmp
test
push
and
mov
imul
sub
xchg
std
and
cmp
sbb
pop
push
jg
repz
fwait
rol
iret
data16
dec
ret
mov
lret
aas
add
dec
push
daa
rorb
cld
or
stc
cwtl
int3
pop
stc
mov
stc
jo
sahf
add
push
add
hlt
dec
jl
or
lea
pop
and
dec
add
inc
jmp
jecxz
std
out
pop
sub
cwtl
arpl
push
sar
nop
imul
cli
stc
outsb
dec
sbb
dec
or
out
ss
dec
stc
iret
mov
jb
nop
xor
inc
add
xchg
stos
aaa
fdivr
mov
fcomps
movsl
sbb
dec
out
lea
cmp
dec
aad
sbb
or
movsb
jg
in
xchg
and
or
mov
es
pop
sbb
pusha
test
xlat
stc
pop
add
std
icebp
outsl
or
lcall
jle
sub
cmp
dec
inc
jle
pop
inc
pusha
loope
add
mov
inc
sahf
sbb
pop
xchg
stc
mov
cld
sahf
dec
ficoms
pop
mov
mov
mov
mov
jp
cmp
mov
cmp
leave
je
lahf
dec
aas
lahf
jle
or
stos
nop
push
jmp
insl
lret
mov
popf
push
cmp
bound
shlb
dec
scas
dec
sub
aad
push
mov
std
fsubs
stos
ret
or
jp
pop
fldcw
inc
and
in
sub
adc
test
and
test
cmc
adc
mov
mov
int
rorl
mov
std
mov
fldcw
mov
xchg
add
lods
pop
scas
adc
repnz
pop
dec
mov
lcall
repz
sarl
mov
cli
xchg
mov
cmp
xchg
adc
loope
xorb
inc
or
pop
adc
test
adc
mov
ljmp
dec
leave
mov
cli
outsl
ffreep
or
cmp
movsb
mov
jno
push
and
sbb
sbb
out
mov
and
pop
loop
jg
add
jg
mov
daa
loope
loopne
pop
sub
sub
inc
arpl
push
test
add
inc
stos
mov
imul
dec
jecxz
sbb
xor
or
popf
les
sub
xor
fdivrl
je
insb
cli
add
push
stc
movsl
cmp
test
aaa
mov
mov
lea
mov
sub
pop
xchg
test
daa
jg
std
fnstsw
xchg
mov
ret
jecxz
std
shr
js
xor
int3
lea
push
mov
pop
mov
test
in
mov
loop
add
loop
mov
push
mov
icebp
mov
lahf
sbb
mov
push
test
add
push
mov
addl
mov
xchg
data16
test
jp
inc
clc
insb
add
fisttpll
les
push
mov
inc
jnp
and
je
das
mov
mov
add
and
fisubrs
or
mov
push
add
fwait
inc
pop
inc
mov
inc
cwtl
jge
ss
jnp
sahf
cmp
mov
xlat
push
mov
in
aas
outsb
mov
cli
xor
sar
cltd
mov
and
cmp
fistl
out
fstpt
cmp
pop
sub
jmp
pushf
movsb
cmp
inc
mov
jge
add
cmp
vcvtpd2dq
lret
mov
out
mov
cmp
jmp
pop
jle
sub
pop
xor
subb
outsl
out
loop
out
je
sbb
ss
int3
xchg
outsl
or
xchg
loop
fldenv
add
fstps
mov
pop
cwtl
xchg
shlb
mov
pop
add
aad
cmp
fldln2
sbb
sbb
andl
hlt
stos
mov
add
push
andb
test
shlb
jnp
xchg
fisttpll
cmp
mov
mov
jmp
jnp
insb
test
mov
push
mov
loop
clc
nop
inc
imul
into
cmp
jecxz
xchg
jecxz
test
mov
xor
xchg
dec
fs
pop
and
fwait
add
jns
orl
call
xor
inc
mov
imul
push
outsb
or
int3
mov
mov
ds
xor
mov
pop
rcr
fadds
movb
enter
jl
add
faddl
cmovge
xchg
jb
add
mov
xor
call
inc
sar
aaa
data16
jp
loopne
iret
loop,pn
mov
insl
sub
out
inc
xor
mov
sbb
repz
mov
sub
push
sub
shl
test
mov
pop
cmovo
and
jno
mov
test
outsl
xor
lret
popf
mov
mov
jno
rcll
and
fldcw
sbb
cs
jnp
push
popa
cmc
adc
stc
stos
mov
cltd
and
xlat
jne
sub
adc
js
sub
fstpt
sbb
cmp
jno
pop
loopne
xor
xor
push
mov
adc
sbb
fwait
sbb
mov
xchg
popf
dec
sarb
add
mov
sub
or
ja
xor
arpl
sbb
mov
test
movsb
jns
inc
int3
sub
push
sub
clc
out
nop
outsb
and
movsl
enter
imul
into
fldl
loope
dec
ja
and
adc
out
mov
add
les
imul
mov
pop
xor
stos
mov
dec
out
xchg
cltd
mov
sub
stos
dec
jb
mov
pusha
adc
or
loopne
test
orb
jle
sub
push
cmp
call
push
xchg
pop
imul
jmp
ret
pop
out
fstpl
mov
lods
pushf
sbb
leave
cmpsl
iret
scas
xchg
dec
inc
and
iret
imul
cmp
cld
inc
mov
adcb
mov
sub
inc
mov
xchg
lret
and
test
jmp
xor
and
lret
sbbb
xchg
adc
in
xor
push
mov
dec
xlat
cmp
or
pop
popf
fchs
int
pop
or
call
outsl
jmp
sbb
xchg
test
mov
ss
xchg
jp
data16
mov
ds
or
scas
lock
fwait
pop
mov
jno
test
mov
pop
fisubrl
cmp
test
mov
pop
rolb
sub
rorl
mov
adc
add
fstpt
mov
cltd
add
push
daa
stc
xchg
bound
dec
dec
stos
push
mov
lock
pop
cmp
xlat
stos
inc
ss
fwait
clc
scas
inc
mov
rcrl
mov
lods
push
dec
sub
cmpsl
mov
mov
mov
mov
enter
insb
mov
add
neg
cmc
xor
or
int3
sar
push
cmp
xor
movsb
jp
mov
jns
popa
jb
mov
sub
xor
sbb
add
add
in
jmp
pop
enter
xlat
sub
fcmovnb
xor
fisubs
pushf
fstps
sbb
data16
sub
dec
xlat
incb
daa
or
ret
int
lea
data16
add
lahf
sahf
ja
mov
xchg
fiadds
dec
fsubp
mov
sbb
fistpl
fsubs
insl
cmp
jbe
jge
lea
div
sbb
push
add
int3
pop
or
add
rcrl
iret
lahf
mov
fimull
pop
pop
mov
shlb
jl
mov
cltd
lods
mov
jge
sub
jns
sbb
lahf
shrb
in
mov
dec
add
aas
inc
cltd
xor
das
jp
clc
aaa
mov
insl
sub
sbb
jbe
ja
loopne
decl
clc
das
xlat
push
stos
inc
inc
or
mov
adc
mov
adc
jno
jnp
das
sbb
fistl
into
jo
movsl
arpl
sbb
dec
adc
enter
fldt
inc
shll
inc
mov
lds
jbe
pop
lds
sub
sti
rolb
mov
pop
scas
std
scas
cwtl
push
pop
push
lea
pop
add
stc
inc
mov
shrl
xor
inc
sahf
xor
inc
xchg
fnstsw
fnsave
adcb
sub
dec
or
mov
fdivrs
cmp
icebp
push
fisubrl
mov
test
pop
orl
in
cmc
in
inc
push
mov
cld
mov
mov
es
xchg
inc
into
test
imul
push
cmpl
cld
imul
and
cmp
aas
imul
mov
sbb
int3
xor
clc
insl
lock
data16
loope
sub
pcmpgtw
lret
cmp
cwtl
adc
ret
movb
imul
stos
popf
and
scas
xor
adc
in
adc
test
outsl
mov
pop
popf
jo
push
ret
sub
fdivl
pusha
les
or
lods
and
cmp
cmpsl
xlat
mov
imul
lcall
shr
lea
mov
mov
and
add
xor
cltd
imul
push
push
les
repz
jnp
into
movsl
dec
and
sub
fildl
pop
fsts
xchg
or
test
in
in
cmpsl
push
xchg
xchg
out
repz
lret
jle
loope
or
mov
jle
xor
sti
lea
pusha
outsl
iret
mov
and
mov
orb
adc
lea
daa
out
inc
xor
xor
adc
cs
stc
stc
pushf
xrelease
xchg
adc
pop
into
imul
sub
cmp
pusha
and
sbb
pop
add
iret
movsb
cs
xchg
enter
inc
lea
data16
pop
jle
sub
leave
cmp
add
dec
fsub
out
mov
mov
jbe
out
sub
jne
cmp
das
pop
nop
cmp
fs
sti
xchg
or
imul
hlt
icebp
lods
ja
mov
in
push
mov
jecxz
aad
xchg
enter
fisubrl
outsb
sbb
sbb
jmp
mov
xchg
fnstcw
imul
sub
test
mov
inc
xchg
call
test
scas
sub
dec
in
xor
lahf
mov
imul
sbb
cmp
outsb
ljmp
fcomps
addr16
cmp
sub
pop
test
ljmp
ror
adc
aaa
shll
sbb
in
jno
idivl
adc
inc
addr16
dec
dec
sbbl
insl
in
into
mov
inc
test
or
in
mov
lret
popa
or
xchg
rclb
stc
xor
jp
adc
aad
mov
push
mov
ss
fwait
cmp
mov
or
dec
icebp
jl
pop
cmpxchg
fldt
pop
pop
cltd
push
inc
mov
lahf
dec
out
loope
sbb
mov
push
adc
adc
pushf
iret
jnp
jns
dec
dec
int3
jg
jb
lea
ja
mov
push
jmp
xchg
int
popa
das
test
aaa
inc
mov
sub
pop
int
jnp
jmp
mov
leave
pusha
das
leave
pop
out
mov
out
aam
out
aas
cmpsb
xor
fwait
mov
mov
sarl
mov
sub
mov
mov
cld
jle
fwait
sub
inc
jmp
stc
arpl
push
stos
or
dec
xor
arpl
cld
cmp
mov
outsb
cmp
push
bound
push
aam
pushf
ret
nopl
adc
icebp
in
mov
leave
cs
add
sub
inc
xchg
int
outsb
sub
inc
ss
push
mov
jmp
mov
jnp
mov
or
lock
cmpsl
adc
fwait
imul
or
fldl
push
call
aad
push
pop
xchg
cmp
cmc
push
pushf
jae
mov
popa
mov
sbb
cmp
jp
hlt
out
subb
inc
sub
into
lods
adc
adc
stc
adc
in
orl
imul
sysexit
adc
sub
out
mov
sarl
and
or
xchg
aad
shl
filds
cmp
adcl
jecxz
xor
bound
jbe,pt
lret
cvtdq2ps
push
stc
push
add
and
in
int
cmp
dec
cmpsb
add
lret
sbb
mov
cli
mov
imul
jmp
jne
push
dec
outsb
pop
or
sbb
inc
mov
pusha
pop
fldcw
jae
dec
vmovapd
fimuls
out
in
std
mov
add
pop
out
bound
daa
dec
fnsave
sbb
outsl
outsb
sbb
jecxz
sbb
or
loop
iret
and
pop
repz
roll
pop
xchg
enter
decl
shl
mov
mov
icebp
and
cltd
and
inc
mov
xchg
inc
and
jo
subb
cmp
sti
dec
push
sub
sub
stos
bound
or
inc
push
enter
lret
inc
mov
adc
lds
pop
or
out
ss
leave
pop
std
cmp
mov
loopne
iret
mov
imul
mov
mov
push
cmp
mov
add
xor
xor
imul
nop
dec
gs
cmpsl
aam
add
sub
flds
lahf
jne
popf
sbb
add
out
test
imul
push
adc
inc
mov
call
or
cmp
ds
mov
out
jle
nop
popf
aaa
lahf
jae
mov
inc
loope
pop
xchg
cltd
mov
jmp
xor
nop
and
inc
sbb
mov
int3
mov
add
ds
jne
orl
cmpsb
mov
lret
repz
fidivs
enter
xchg
jbe
or
imul
push
hlt
jmp
cmpsl
xor
pop
mov
repnz
pushf
lods
xorb
rol
mov
imul
dec
xchg
xchg
hlt
mov
push
fiaddl
mov
icebp
inc
adc
sbb
out
jbe
out
xchg
fstpl
jne
ret
xchg
push
aad
aad
mov
stos
leave
popa
or
cli
push
xor
xchg
jg
cmpsl
vpsubw
xor
imul
inc
sbb
gs
cmp
jbe
bound
clc
cmc
inc
push
cmpsl
outsb
loopne
dec
inc
insb
shrb
rcll
icebp
and
sbb
fistpll
xor
and
cmp
rcll
mov
push
pop
xchg
adc
lret
ficoml
adc
jp
das
push
fs
test
aad
sahf
jg
add
lock
pop
icebp
sahf
mov
in
and
or
cmp
lock
push
mov
loopne
xchg
cmpl
addb
scas
mov
insb
sti
fcoml
je
iret
jo,pn
test
mov
sub
or
adc
mov
mov
mov
aas
mov
xor
inc
mov
push
pop
mov
and
dec
add
mov
or
outsl
jnp
lret
insb
pop
push
xchg
loopne
lods
push
mov
xchg
adc
popa
inc
jbe
inc
and
ja
add
push
in
push
cmp
ret
mov
jmp
loopne
out
mov
or
push
xchg
jae
mov
mov
loop
xor
arpl
xchg
mov
fisubrl
mov
xchg
xchg
insb
mov
pushf
scas
fwait
xchg
push
out
cmp
testb
xchg
dec
inc
es
les
sub
aas
ljmp
sub
ret
mov
and
insb
test
push
pop
dec
push
mov
dec
dec
dec
push
outsl
or
sti
fldcw
xchg
movsb
insb
mov
lds
loope
jle
scas
adc
pop
test
out
sub
aaa
xchg
mov
bound
push
cld
mov
dec
sub
stos
mov
aaa
adc
les
mov
adc
push
inc
lret
jnp
mov
and
jmp
xchg
arpl
jo
lcall
cld
xor
arpl
xchg
mov
sub
fdivrs
sbb
xchg
scas
or
cmp
mov
mov
std
mov
insb
std
push
mov
xor
jle
push
pop
insl
adc
xchg
gs
xchg
pop
fidivrl
scas
xor
jb
mov
inc
out
in
lds
mov
ds
fmuls
out
push
lret
pop
cmp
orps
fidivl
xchg
inc
jle
pop
out
test
dec
mov
adc
mov
cmpsl
add
adc
fistpl
dec
add
cmpsl
repnz
les
movsl
push
shl
inc
cltd
in
inc
int
test
cmp
jmp
pop
fs
jns
adc
pop
and
aas
mov
call
jle
daa
lods
fsubr
add
add
sti
jnp
push
jg
mov
cmp
mov
sahf
mov
inc
arpl
or
sub
xchg
mov
push
dec
int
xchg
test
push
jle
std
cmpsb
mov
in
es
in
adc
xor
inc
jno
leave
loop
dec
xor
popf
sub
lods
jo
xchg
inc
imul
out
stc
jg
xchg
mov
jmp
xlat
dec
sbb
cmp
or
dec
hlt
push
roll
mov
mov
inc
mov
in
leave
mov
push
inc
shrb
xchg
mov
pusha
xchg
sbb
sub
es
ds
xchg
lret
movsb
ja
loopne
xor
or
scas
es
pop
add
mov
stos
out
idivl
xor
jle
mov
pop
mov
jle
push
jno
add
sub
sahf
test
adc
xor
add
and
sbb
popf
pop
inc
cwtl
mov
xchg
js
dec
push
rcr
jle
shlb
jp
call
xor
push
and
outsb
xchg
add
call
xchg
aaa
pop
dec
or
popf
push
or
lcall
fs
and
fwait
loope
sahf
loop
cmpsb
jo
cmp
in
std
outsl
imul
cmpsl
cmp
dec
imul
negl
dec
mov
sbb
enter
xor
ret
push
sub
dec
mov
adc
addr16
or
dec
xchg
inc
arpl
pop
lods
push
push
xchg
lahf
jnp
pop
adc
shll
lock
jg
xor
inc
sbb
loopne
push
jecxz
outsl
popa
movsb
xchg
fld
sbb
es
rcl
sub
outsb
out
mov
push
popf
adc
add
jbe
add
in
xchg
pop
scas
xor
pop
xchg
xor
push
push
cmp
jb
js
or
ss
pop
mov
adc
fisubl
dec
push
in
cmc
or
jno
add
add
add
mov
mov
adc
jae
inc
push
jmp
cmp
jbe
or
cs
sbb
ja
jo
ja
ljmp
xor
movb
sbb
stos
fdivs
pop
popa
cmp
xor
ja
mov
mov
aaa
ret
mov
jne
and
push
mov
mov
fildll
push
mov
in
test
imul
popl
repz
inc
cli
jl
sbb
scas
nop
imul
cmp
std
f2xm1
aas
jae
fistps
insb
sub
daa
lahf
fmulp
sbb
ret
mov
xor
add
push
mov
scas
icebp
gs
push
dec
fsubrs
inc
sub
mov
scas
cltd
ficoml
xor
cmc
xor
decl
popa
sbb
fidivs
in
ret
ret
std
cmpb
mov
mov
insb
xchg
cld
in
lret
in
mov
push
pop
les
enter
adc
jmp
ds
and
and
scas
js
test
movsl
xor
les
js
mov
es
xchg
lock
mov
dec
fidivrs
pop
clc
cmpsl
outsl
jmp
int
push
mov
mov
sub
pop
jb
scas
push
dec
or
jg
pushf
pop
or
imul
das
dec
jge
push
aaa
xchg
or
dec
test
stc
jnp
jg
xchg
repnz
fdivs
call
es
mov
fs
mov
add
test
stos
pop
pop
dec
push
lods
inc
idivb
mov
mov
add
aaa
jg
mov
lcall
sbb
dec
push
mov
sbb
jl
jg
cmpsl
out
inc
loopne
stos
cmp
test
mov
das
dec
jg
pop
xchg
pop
push
xlat
ja
mov
pop
insb
sbb
add
je
aas
ja
lahf
pop
dec
loope
or
jmp
add
jns
push
sti
ds
cltd
adc
sub
jge
ret
mov
shll
push
cmp
call
adc
repnz
adc
and
jecxz
sbb
loop
jbe
pop
cmp
jl
gs
pushf
imul
int3
fwait
add
dec
rolb
gs
movsb
dec
hlt
pop
jmp
dec
call
sbb
lcall
adc
jge
jp
sbb
lock
pop
push
nop
push
fldl2e
std
shll
mov
dec
sub
mov
pop
lret
in
and
sbb
sbb
call
loopne
in
dec
or
lock
lret
mov
push
mov
fdiv
test
test
push
mov
shlb
cmp
andl
leave
out
or
sbb
cs
push
mov
movsb
int
in
push
dec
clc
lods
in
adc
sti
jg
sbb
jl
jne
mov
mov
in
lahf
push
xor
loope
out
fs
movsb
je
les
jmp
lahf
add
addl
aad
adc
daa
fistl
lods
and
and
roll
add
out
adc
lret
dec
flds
pop
adc
inc
xor
int
mov
jp
inc
pop
sbb
ja
fbld
inc
cmc
addl
out
push
outsb
pop
shll
roll
pop
lock
cmp
mov
xchg
push
xor
outsb
jl
faddl
mov
repnz
push
popf
adc
dec
mov
xchg
and
cmp
sbb
inc
push
add
js
int3
adc
dec
fisttpl
cmp
adcb
sbb
testl
sub
cmp
mov
lea
imul
jle
mov
pop
jne
dec
dec
pusha
mov
rorl
test
xor
call
dec
scas
xchg
and
fidivrl
pop
xchg
repnz
inc
sbb
scas
jmp
fs
and
and
xlat
sbb
pop
xchg
mov
jb
inc
mov
inc
lcall
push
inc
mov
mov
inc
sbb
aaa
xchg
lods
mov
or
mov
jmp
call
mov
stos
inc
sbb
pop
mov
popa
push
sub
push
pushf
lret
add
push
mov
and
add
mov
jmp
andb
mov
or
mov
lea
add
adc
clc
and
dec
insb
cmp
cmp
sub
enter
adc
das
call
stos
incl
lahf
or
and
mov
xchg
daa
mov
ja
sbb
sbb
mov
clc
mov
movsb
leave
push
xor
cmp
aas
dec
stos
pop
imul
rorl
fildl
jecxz
arpl
inc
jp
mov
sti
and
outsb
add
pop
test
dec
inc
out
out
rorl
rolb
cmp
sbb
cmp
dec
cmpsl
jne
jle
movb
ja
inc
jno
mov
rorb
insl
push
fldt
lcall
inc
lret
rcr
cwtl
ds
sub
jbe
sbb
std
jge
aaa
mov
mov
mov
dec
std
mov
push
add
xchg
adc
aam
testl
push
incb
test
inc
mov
add
shll
out
lahf
fwait
dec
push
arpl
inc
mov
cmp
movw
dec
ja
cwtl
jecxz
xchg
sub
nop
cli
xor
pusha
mov
imul
sarl
ja
cmp
mov
adc
dec
mov
push
movsb
mov
dec
lea
mov
xorb
imul
rcrl
mov
ja
ljmp
jae
xor
pop
push
movsl
popf
leave
stos
jne
mov
cmpsb
jge
xor
mov
ret
jo
in
add
fildll
js
stc
pop
inc
add
inc
push
sbb
stc
mov
lods
fnstenv
jns
pusha
cmp
jns
ljmp
scas
xor
cwtl
add
mov
stos
mov
adc
mov
mov
jp
mov
bound
xchg
fcompl
add
pop
push
in
sbb
inc
addr16
pusha
cltd
jp
dec
add
xchg
add
jo
jbe
popf
ret
arpl
jb
and
shl
mov
repnz
xor
popa
cli
inc
daa
ds
cmp
shll
xor
fsubrl
int
into
or
scas
push
out
mov
push
sub
jb
xchg
jo
inc
jecxz
xchg
and
dec
or
es
mov
pop
sub
push
push
les
aam
lea
sbb
in
movsl
add
push
pop
or
and
subl
pusha
ret
out
in
pop
lahf
in
es
shlb
lret
add
pushf
fwait
inc
add
arpl
xchg
dec
dec
es
ljmp
add
int3
fcmovu
sbb
pop
dec
imul
popa
rcrl
sub
loop
mov
add
lods
shlb
mov
outsb
cmpsb
lock
cmpsl
test
sub
stc
pop
test
push
cmp
mov
xchg
daa
mov
jge
jle
add
add
jae
pop
cwtl
pop
or
add
or
aad
outsl
xor
sbb
or
movsb
dec
fistpll
cs
shll
mov
sub
jno
adc
xchg
push
inc
les
mov
lret
loop
sar
ljmp
push
add
aam
dec
xchg
fcmovb
test
cmp
xor
movzbl
mov
insl
jle
adc
repnz
negb
mov
cmc
insl
and
fisubrl
fisubs
mov
int3
popf
jl
sub
xor
xchg
call
cmp
add
into
inc
scas
lods
lods
mov
inc
insb
xor
mov
test
sub
cltd
xor
imul
jo
push
jl,pn
pusha
jp
adc
push
dec
rclb
loope
pop
imul
subl
aaa
cli
movsl
sbb
shlb
lods
cmp
ret
mov
cwtl
repnz
call
jmp
push
jg
js
shl
les
out
mov
rcl
leave
rol
mov
shr
sub
mov
fwait
sub
jg
push
mov
xchg
lret
sbb
or
pop
dec
push
outsb
and
push
push
mov
dec
stos
lods
or
ret
lods
cmp
jl
ret
ljmp
xor
mov
inc
mov
xor
adc
push
jmp
dec
mov
xor
insb
int
push
mov
movsl
jmp
push
or
int
loop
xor
jno
xchg
push
dec
add
mov
fcmovne
arpl
inc
arpl
jnp
jnp
mov
pop
jo
mov
cmp
mov
xlat
stos
add
je
les
xor
xor
dec
rorb
aaa
dec
push
dec
mov
mov
arpl
lcall
xchg
and
loop
inc
sarl
faddl
inc
pop
or
xchg
shlb
lcall
pop
inc
add
add
add
icebp
cmp
rcl
mov
mov
push
mov
push
cmpsl
xchg
fldt
sbb
push
push
inc
jno
push
sarl
cld
adc
mov
pushf
jno
aas
xchg
xor
inc
popa
jg
xchg
fs
mov
fisttpll
dec
rclb
sahf
inc
push
shr
mov
sub
and
lahf
int
movsb
sbb
repz
mov
xchg
fwait
mov
mov
mov
ficompl
dec
inc
jmp
jo
sub
push
lret
mov
and
cmpsl
jmp
push
ret
xchg
sub
ffreep
pop
and
dec
mov
adc
sub
jg
ficompl
cmpsb
in
push
ljmp
sub
outsb
xor
and
or
xor
and
and
mov
fcoml
aaa
or
shrb
aam
shrl
lods
mov
mov
gs
adc
roll
mov
enter
dec
xchg
adc
mul
sbb
subb
pop
ffreep
inc
rcll
and
inc
cmpsl
movsb
push
sbb
pop
inc
cltd
xchg
add
test
outsl
adcl
add
jbe
xor
aas
cmp
mov
dec
mov
int3
call
test
sbb
push
ja
mov
push
push
dec
cli
sbb
outsl
sub
jo
push
add
push
je
pop
movsb
sub
sti
mov
xorl
pop
cmp
aaa
es
sub
rorb
inc
fcmovu
mov
scas
sub
out
pop
jg
std
movsl
dec
outsl
xchg
in
dec
lea
mov
fiadds
jge
cli
xchg
xchg
jmp
mov
rorb
fiadds
mov
sbb
lods
mov
loop
mov
mov
test
sahf
and
cmp
mov
inc
outsb
lods
pop
pop
fimuls
mov
data16
mov
icebp
or
in
lods
ret
pop
mov
or
mov
cmpsl
popa
xor
in
jmp
cmp
adc
stos
cmp
ljmp
xlat
lock
scas
ss
push
enter
loope
popf
inc
ljmp
jle
test
loope
mov
push
add
inc
scas
inc
int3
push
in
loop
jnp
inc
mov
cwtl
and
nop
outsl
icebp
mov
cmc
int3
aad
mov
adc
popf
loopne
fidivrs
jecxz
mov
jbe
jmp
pop
fs
jne
push
fs
pop
jg
cmc
sbbl
divb
lea
insl
andl
adc
mov
pop
pusha
faddl
adc
push
loop
cmpsb
std
push
push
and
into
int3
dec
mov
jge
por
repnz
adc
xor
aad
aas
push
inc
addr16
shl
pop
cld
jge
sbb
in
sti
decl
inc
aaa
sbb
push
mov
xchg
cmpsb
cmpsb
faddl
xchg
movb
aam
xchg
mov
and
in
cmp
push
lret
jns
push
xchg
clc
pop
pop
mov
xchg
js
mov
aad
cmovle
std
jo
fwait
int
or
dec
adc
dec
popf
outsb
pop
in
cmp
adcb
ja
arpl
push
fcoms
lock
dec
jno
sbbb
inc
push
jns
mov
lods
jne
mov
xor
push
add
sbb
in
aad
ret
push
adcl
outsl
lods
fcomps
mov
push
or
mov
pop
icebp
add
push
lret
mov
flds
push
ss
xor
push
push
push
popa
adc
pop
pop
cmpsl
and
xor
js
scas
adc
adc
fsubl
adc
mov
in
push
ss
sbb
mov
xchg
subb
jecxz
jbe
leave
cmpl
pop
icebp
xor
test
outsl
push
sti
cmpsl
mov
adc
jbe
mov
pop
enter
dec
aam
inc
rolb
mov
dec
cmp
test
cmpsl
pop
xchg
add
cmp
sub
push
sbb
int
push
data16
xor
mov
cs
xor
lret
or
dec
mov
ja
push
clc
aas
jbe
sbb
mov
mov
xor
pushf
mov
jno
jnp
mov
roll
or
aad
lods
ljmp
and
testl
xchg
pop
or
push
cli
cmp
adc
xchg
lcall
inc
pop
and
push
lcall
mov
cld
inc
xor
pop
cmpb
sbb
in
loope
data16
mov
or
mov
add
stos
sbb
mov
rcl
repnz
sbb
mov
jno
sub
dec
adc
and
mov
xor
stc
inc
adc
push
sbb
cmp
xor
pop
rclb
lcall
xor
sub
ss
sub
lock
xchg
sti
mov
add
and
push
into
push
inc
xor
daa
jo
arpl
sahf
hlt
adc
pop
rolb
addr16
sub
cmp
and
push
das
mov
cli
loop
inc
imul
nop
xlat
shrl
push
ficompl
pop
in
adc
jnp
sub
pop
lds
sbb
sbb
sub
das
xor
fs
js
jle
ja
cmp
mov
adc
pop
outsb
scas
fisubl
push
xor
int3
mov
fldt
mov
shlb
rclb
loop
mov
sub
popl
add
cs
icebp
xor
mov
jecxz
push
adc
dec
fcomps
stc
das
adc
add
sub
fs
popa
xlat
repz
aad
dec
idivb
in
repnz
mov
mov
push
add
out
and
sbb
add
add
shll
dec
sub
dec
fnstcw
push
aaa
fwait
out
xchg
inc
jno
add
cmp
lods
test
jp
xor
mov
sub
arpl
inc
pop
repnz
mov
aas
cmp
xchg
adc
or
test
dec
cwtl
mov
jb
xlat
sub
in
sbb
test
sbbb
xchg
fcompl
adc
push
dec
aas
sbb
sub
and
enter
fwait
cmp
and
fdiv
outsl
jae
xor
cli
adcb
xchg
in
xchg
mov
rcrl
or
lcall
cmpsb
pop
sti
hlt
push
jo
in
push
fstpl
outsb
jmp
adc
jo
cmpsb
mov
cmc
xchg
push
or
jecxz
adc
into
add
push
imul
inc
push
adc
out
inc
add
push
aas
pop
sub
sub
sbb
pop
mov
sub
popf
cmp
scas
mov
fdivs
push
jnp
or
push
std
fcompl
add
insb
nopl
push
adc
imul
pushl
fnstenv
je
sub
mov
enter
jns
dec
mov
xchg
lahf
inc
xchg
lcall
mov
jb
fndisi(8087
mov
sbb
dec
adcl
mov
sub
jne
and
jge
jo
je
jne
popa
add
dec
pop
jl
lods
sbb
inc
std
add
xchg
xor
inc
and
out
fbstp
vmwrite
xor
pop
jle
cmp
sbb
xchg
xchg
pop
sub
sub
lock
lret
mov
mov
pusha
sbb
push
cs
xchg
mov
mov
stc
loopne
push
movsl
icebp
out
pop
inc
flds
movsl
test
and
add
icebp
sub
adc
addr16
fwait
jbe
push
test
push
in
mov
sti
mov
mov
idiv
push
mov
lods
fdivs
popf
xchg
sbb
mov
xchg
ja
push
incl
inc
jnp
jo
mov
hlt
loopne
xor
cmpsl
inc
mov
mov
aam
cmp
mov
add
cmp
pop
insb
jecxz
lea
lret
pusha
in
add
mov
les
movsl
ss
hlt
std
inc
dec
ljmp
lea
iret
xchg
movsl
xor
arpl
pop
cld
and
lcall
in
movzwl
lahf
data16
stc
jmp
xor
or
arpl
cltd
push
dec
pop
xchg
add
jb
scas
add
xor
jne
add
into
repnz
sti
mov
push
popa
andb
push
add
lods
mov
int
mov
testl
fiadds
pop
repnz
cs
xor
adc
fcompl
push
jge
mov
xlat
insb
jl
xchg
push
sbb
xor
or
shll
testb
insb
cltd
sbb
roll
pop
in
int3
or
mov
pop
stos
inc
xor
dec
js
out
jo
dec
shr
je
fwait
cmc
and
jmp
test
mov
and
loope
pop
jmp
mov
fiadds
dec
and
fnstenv
xor
mov
jge
ret
movsl
stos
test
repz
sub
das
cmp
negl
rcrl
jae
lcall
dec
rcll
push
outsb
fistps
mov
aas
sub
add
push
push
xchg
jmp
repnz
sub
inc
flds
pop
sar
and
scas
xor
call
jmp
repz
imul
lds
sub
xor
mov
stos
shlb
mov
les
and
cs
into
leave
or
int3
movsb
inc
in
push
mov
test
inc
fmul
pop
cwtl
mov
shll
push
lods
adc
mov
add
jne
fidivrs
mov
lds
push
sub
out
xor
dec
mov
mov
xchg
adc
jmp
orb
cmpxchg
js
mov
adc
loope
mov
daa
jl
dec
add
jae
mov
test
rcl
sbb
or
push
xchg
mov
lods
mov
vprotw
loop
cmp
add
out
in
lea
dec
repnz
rcrb
insb
jl
or
mov
mov
mov
aaa
lock
xchg
mov
out
mov
out
cmc
outsb
mov
jg
dec
in
push
mov
clc
adc
pop
insb
sbb
clc
inc
aad
xchg
jbe
ljmp
mov
dec
sub
push
std
stc
dec
xchg
sti
pop
cltd
cmp
pop
das
adc
dec
repnz
jecxz
test
sbb
xchg
or
sbbl
mov
cmp
add
dec
pusha
adc
and
stos
in
jnp
pop
jecxz
test
adc
or
mov
sbb
jo
sub
and
fwait
mov
lahf
in
sbb
movl
adcb
or
int3
repnz
xchg
add
icebp
mov
pop
add
clc
mov
sarb
push
ds
inc
jbe
popa
mov
jno
jns
lahf
and
or
sub
push
jmp
shrb
add
mov
sub
js
adc
mov
xor
xorb
into
shr
sub
idivl
mov
roll
fsubp
pop
pop
or
pop
mov
imul
xchg
fnstsw
xor
cmp
in
adc
repz
sti
scas
inc
scas
pop
cltd
jle
lock
pop
leave
cmp
mov
in
cmp
mov
test
lock
es
push
fildll
mov
mov
lods
push
sub
in
sti
and
cmp
mov
lods
aam
insl
sbb
xchg
pushf
mov
mov
adc
inc
lods
jo
mov
cmc
inc
xchg
decb
js
ret
xor
inc
mov
cmp
jmp
mov
push
ret
jmp
pop
pop
xchg
jmp
in
mov
sti
test
addb
mov
and
jge
adc
xchg
jmp
inc
sbb
push
loopne
add
push
and
adc
out
sub
shlb
mov
jb
in
aam
sbb
out
xchg
cltd
scas
bound
mov
icebp
nop
movsb
iret
loope
sbb
loope
scas
rclb
insl
sub
mov
sub
scas
mov
ret
gs
push
stc
imul
dec
out
ja
inc
cli
add
mov
outsl
mov
push
pop
sub
stos
mov
mov
test
cli
pop
pushl
icebp
push
mov
cmp
inc
mov
jne
mov
mov
cld
add
ret
adc
out
mov
and
adc
jb
bound
je
push
stc
shlb
mov
lret
dec
or
lcall
xchg
cmpsl
xchg
jae
jp
pusha
outsb
ret
movsb
mov
ds
mov
push
add
mov
fidivs
pop
dec
ss
mov
test
cmp
or
xchg
in
lret
push
xor
push
jge
nop
adc
data16
gs
or
aas
pop
bound
inc
leave
adc
pop
call
dec
cmp
fistl
and
imul
mov
add
stos
cld
lret
jmp
fmul
and
pop
repz
outsw
and
repnz
pop
dec
mov
sub
rorb
sbb
in
daa
fldl
mov
daa
cltd
iret
sar
fadds
xor
vmread
dec
mov
loopne
sub
ljmp
adc
push
adc
xchg
mov
mov
lds
cs
xchg
fbstp
outsb
insl
add
js
adc
mov
inc
jg
jl
pop
pop
push
out
push
push
adc
std
fsts
dec
in
aad
sub
add
fiadds
jle
mov
std
ret
fnstsw
sbb
stc
lahf
lahf
nop
dec
push
add
adc
ret
xchg
sbb
cmp
int
out
clc
orl
pushf
ret
fsubrs
leave
mov
cmp
popf
aad
data16
adc
adc
push
shll
mov
xchg
mov
cltd
adc
mov
insl
mov
jns
stos
scas
lock
push
jns
add
inc
adc
jecxz
imul
movsb
sub
add
xor
sub
test
sbb
pop
push
jbe
stc
cmp
test
cmp
sbb
mov
mov
mov
in
outsb
and
fs
jl
pmulhw
jp
rcrl
dec
inc
test
jg
push
xchg
xchg
push
scas
into
pop
inc
mov
loop
shlb
lea
arpl
xchg
lcall
cmp
test
notb
negb
pop
icebp
mov
sub
and
movsb
lods
stos
mov
shrb
mov
mov
stc
xchg
push
jl
idiv
push
inc
mov
sub
int3
push
out
repz
or
push
icebp
xchg
mov
arpl
sbb
xchg
dec
and
imul
push
inc
mov
ret
sub
popa
ret
push
push
popf
sub
in
int
inc
adcb
dec
call
pop
jb
mov
clc
or
addl
in
and
mov
xchg
loop
dec
icebp
xor
pop
mov
sbb
mov
test
xor
idiv
adc
loop
int
test
or
shrl
decb
dec
ja
aaa
cmp
icebp
scas
mov
jbe
adc
xlat
inc
push
xchg
mov
ss
sub
mov
jb
enter
not
inc
mov
je
les
mov
sarl
adc
xchg
pop
je
xchg
ret
mov
je
mov
cli
sub
and
pop
dec
adc
push
stos
push
and
or
jo
pop
cwtl
lods
jns
movntq
jecxz
mov
xchg
imul
push
pop
rorb
xor
inc
out
orb
jmp
inc
cmp
pop
ss
stc
or
sbbb
fs
js
out
lret
sbb
jp
push
das
xchg
pusha
pop
inc
push
mov
rcll
push
cmpsb
cmp
negl
stos
mov
out
push
icebp
mov
out
push
jne
pop
jp
scas
inc
cmp
adc
mov
sbb
cmp
in
popa
mov
and
jl
outsl
adcb
cmpsb
ljmp
and
ljmp
roll
mov
out
dec
shll
add
movsb
sbb
jp
pop
push
cmp
cmp
add
sti
daa
xlat
push
rcr
push
xchg
in
mov
pop
das
addl
mov
mov
xor
push
insl
stos
scas
das
and
and
into
jecxz
dec
imul
popf
jp
xchg
pop
loope
in
dec
push
test
ds
ret
jl
push
adc
clc
pop
pop
ds
test
cmp
and
push
or
ficompl
inc
mov
fdivs
decb
imul
fisttpl
repnz
pop
jp
mov
outsb
shr
jb
pop
sub
scas
int3
xor
roll
push
sbb
xchg
mov
clc
int
jae
call
xchg
add
into
movl
dec
adc
mov
sbb
sbb
scas
mov
popf
jbe
mov
jnp
test
xchg
pop
shrl
fwait
push
adc
inc
xorl
add
shll
xor
xor
aad
or
inc
xorl
test
jae
pusha
cmp
pusha
adc
xchg
pop
adc
in
sbb
mov
scas
cmp
xchg
int
loop
mov
lret
mov
cmp
outsb
mov
xor
out
insl
popf
push
outsl
xorb
jg
sbbl
mov
imul
inc
push
push
mov
jg
lock
add
push
and
test
gs
sbb
or
push
lahf
inc
imul
mov
daa
add
mov
inc
sti
in
mov
mov
dec
sbb
and
enter
adc
test
lret
mov
popf
inc
add
mov
pushf
mov
iret
std
lds
jle
jp
inc
mov
popa
out
loope
leave
inc
rorb
add
push
mov
nop
loop
xor
sbb
dec
sub
dec
pop
sbb
mov
adc
mov
sti
aad
jecxz
stc
fmul
pop
in
push
iret
add
mov
movsb
jns
mov
adc
inc
inc
mov
mov
in
add
lahf
shlb
lcall
mov
xchg
cld
push
push
dec
add
cwtl
fdivrs
sbb
mov
xchg
es
jge
cmp
and
and
jno
add
cld
mov
mov
dec
setge
popa
or
fxch
imul
cwtl
adcb
fbstp
add
cmp
int
add
js
inc
jnp
inc
jne
fisubl
arpl
aaa
insb
mov
and
mov
inc
enter
push
dec
cmp
xor
push
cmp
inc
pusha
adc
int
jl
pop
cmp
mov
xchg
pop
pop
and
stos
icebp
sub
pop
pop
dec
sarb
imul
movsl
xchg
shlb
mov
insb
test
jo
inc
mov
and
sti
sti
inc
push
dec
mov
popa
fimull
scas
inc
mov
mov
inc
cmp
add
shrl
or
xchg
mov
sbb
fisttpl
and
xlat
cmp
add
dec
cwtl
mov
fildll
cld
jmp
mov
popf
xlat
pushf
mov
xchg
aas
ror
out
iret
mov
lea
ja
cld
les
fcomps
popf
mov
imul
pop
xor
xchg
xor
ja
shll
xchg
fsts
inc
push
cs
clc
sub
gs
imulb
xchg
in
and
jno
adc
mov
mov
mov
ret
out
pop
jnp
pop
pop
cli
sbb
sub
cmpsb
mov
add
push
cwtl
lahf
mov
inc
or
mov
hlt
movsl
imul
call
hlt
lock
or
adc
or
jae
lahf
cmc
dec
mov
adc
inc
ss
mov
sub
xchg
mov
movsb
jl
mov
adc
sbb
xor
into
xor
sbb
pop
shll
pusha
cmp
insl
arpl
lret
inc
enter
inc
popa
mov
jecxz
sbb
fs
aas
jl
data16
or
dec
jl
popf
mov
shr
clc
nop
and
xchg
lock
jge
filds
add
pop
scas
add
ds
jns
imul
jns
pop
add
loopne
jno
mov
cld
sbb
mov
sub
lock
aaa
push
je
cwtl
xor
pop
lods
popf
push
pop
adc
ljmp
js
gs
dec
rcl
lock
xchg
int
scas
out
call
adc
sbbb
xchg
push
enter
addr16
aas
fwait
mov
jb
jg
or
dec
inc
mov
cwtl
jnp
and
les
popa
cmp
mov
lods
flds
pop
movsl
dec
ret
mov
cmpsl
sub
loopne
andl
jmp
push
bound
xor
call
cwtl
out
nop
imul
add
xor
test
sahf
into
inc
stos
jno
xor
dec
jecxz
out
inc
scas
test
fwait
sarl
jmp
out
push
in
daa
insb
pusha
add
arpl
add
addb
cli
xchg
push
filds
stos
sbb
sub
aam
lds
and
out
pusha
movaps
stc
fisubs
add
fsubrs
or
daa
push
pop
sahf
xor
ret
pusha
sbb
cmp
ffree
lret
insb
stos
cltd
scas
fsts
pop
loopne
or
test
xchg
push
addr16
sbb
icebp
scas
out
or
pop
clc
mov
cld
adc
jae
std
xor
stos
andl
js
push
out
gs
and
lahf
adc
je
dec
cli
int3
and
das
pop
dec
mov
outsb
cltd
fnstenv
in
inc
test
scas
add
or
mov
or
fistl
sub
push
out
ljmp
bound
ljmp
out
mov
mov
push
mov
out
incl
rol
jg
push
add
je
out
adc
fistpl
mov
jae
mov
xor
sub
adc
dec
fcomp
cmp
lds
or
sub
aas
or
pusha
insl
inc
sub
mov
xchg
push
mov
mov
sbb
fistpl
jbe
filds
out
inc
cmc
cli
stc
and
pop
push
mov
faddl
outsb
cmc
add
sbb
push
ret
outsl
or
sarl
lods
movsb
or
cmp
cmpsl
outsb
and
icebp
icebp
mov
jl
fdivrp
dec
mov
or
push
mov
stos
dec
xchg
pop
pop
dec
and
or
mov
por
mov
lock
sub
sbb
les
in
pop
xor
call
mov
push
jp
outsb
loope
mov
add
insl
lods
cld
jle
filds
clc
repnz
pushf
shl
push
notb
fists
jmp
mov
adc
or
push
xor
loopne
addl
test
mov
add
mov
xchg
xor
mov
mov
xor
sub
mov
mov
adc
push
cltd
bound
jle
test
xchg
inc
jl
ret
sbb
add
inc
push
cs
ja
aam
mov
dec
xchg
lahf
enter
mov
pushf
ljmp
test
and
xchg
dec
dec
enter
pop
cmc
and
ds
ret
fldenv
jp
adc
test
test
push
lds
int
xchg
psrlw
push
or
lods
mov
cmp
ljmp
out
mov
js
dec
lds
pop
outsb
mov
sub
push
mov
jmp
pusha
movsb
mov
stos
mov
cwtl
leave
jbe
fidivrs
and
mov
decb
inc
mov
inc
push
scas
jno
inc
ja
rcrb
jmp
xor
repz
push
sahf
stos
xchg
or
popa
inc
lret
test
imul
push
pop
es
xchg
sti
orl
decl
mov
or
cmc
xchg
push
stos
and
out
das
in
adc
out
addr16
outsl
push
imul
mov
test
mov
mov
lods
dec
lret
or
dec
mov
lods
sub
stos
fstpt
xchg
pop
mov
inc
cmpsb
jo
jno
jl
fidivs
inc
out
outsb
xchg
mov
stc
in
hlt
adc
mov
pop
mov
mov
jmp
loopne
jp
sbb
sbb
and
sti
mov
or
sub
or
dec
icebp
pushf
or
mov
mov
lds
dec
push
cmpsl
rcr
push
stos
dec
jmp
loop
int3
jne
jg
stos
fiadds
stos
xor
enter
arpl
dec
scas
xchg
jne
imul
add
mov
mov
pop
sbbl
jmp
mov
shlb
mov
sub
push
xchg
sbb
sbb
push
inc
int3
stos
push
inc
sub
iret
aam
push
pop
xchg
pop
pop
xorb
mov
pop
jle
xor
push
mov
mov
int3
pushf
jmp
mov
jns
xor
jnp
sahf
pop
inc
pusha
add
call
push
test
cs
xchg
leave
stos
push
xchg
or
xorb
mov
sbb
add
sbb
mov
jmp
and
mov
outsl
lock
cmp
cmp
ljmp
cltd
cmp
push
inc
push
fistpll
ret
sbb
aas
cmpsb
xchg
jne
bound
scas
xchg
inc
mov
lods
dec
mov
add
sub
mov
dec
push
sub
out
xlat
lea
inc
rcll
aad
mov
lcall
mov
cmp
in
mov
lcall
dec
adc
pop
lcall
xchg
xchg
lret
adc
push
sub
lods
movsl
jno
insl
push
adc
aaa
add
lock
and
mov
sub
and
sarl
mov
pushf
test
dec
aaa
add
fwait
adc
cmp
fistl
mov
mov
dec
mov
out
scas
or
cmp
push
xor
rclb
rorl
pop
imul
ljmp
ss
inc
push
hlt
enter
mov
out
inc
clc
faddp
dec
jle
aam
pop
ja
mov
mov
add
fwait
mov
ficompl
ja
xchg
loopne
sub
push
mov
inc
in
rol
mov
dec
pop
std
push
sbb
sahf
les
and
jle
jge
clc
push
insb
xchg
cltd
fldl
jmp
movsl
adc
mov
push
xchg
and
loope
fisubl
add
mov
sub
call
xchg
sbb
mov
idivl
rcll
add
pop
and
mov
cmpsb
loope
mov
ljmp
fsts
adc
xorb
cmp
sbb
push
xchg
sub
push
idivl
jb
ss
or
xor
daa
popf
add
and
mov
ret
mov
hlt
mov
shll
jmp
xchg
fwait
jge
cmpsb
xor
jp
outsl
insl
jns
sti
popf
mov
pop
pop
lahf
pop
push
sub
pop
jge
repnz
ss
sbb
push
inc
repnz
pop
fwait
or
xadd
in
xchg
push
fcoms
pop
mov
fs
cmpsb
popa
loop
sub
lahf
stos
jbe
or
sub
cmp
jnp
pop
pop
or
sbb
pop
sbb
adc
test
jb
iret
sub
jge
arpl
out
int3
std
test
xor
cwtl
jb
int3
mov
push
andl
add
mov
ljmp
mov
pushf
sbb
lahf
sub
mov
or
sub
insb
testl
mov
stos
push
mov
adc
push
inc
lods
adc
fadds
jnp
and
lock
loop
scas
ud2
stos
sub
sub
cmp
cmp
or
adc
cmp
sbb
sub
mov
push
leave
cmpsb
sub
or
ret
popa
adc
imul
jp
mov
sub
mov
imul
or
push
and
mov
cmc
inc
sbb
mov
jge
jecxz
push
or
inc
dec
stos
mov
adc
aas
popf
stos
add
and
xchg
clc
in
ja
push
cmpsl
cmp
inc
push
or
dec
push
stc
dec
inc
mov
sahf
push
mov
xor
mov
xchg
push
gs
adcl
outsl
mov
popf
aaa
mov
lea
mov
mov
sbbl
mov
popf
loope
jmp
popa
xor
in
pop
cmp
testb
dec
push
jp
cmc
pop
in
mov
sub
dec
enter
dec
mov
sub
std
sub
pop
test
xchg
jae
es
jge
imul
outsb
addb
sub
mov
ret
inc
divl
loopne
test
sti
sti
xchg
cmpl
xlat
out
arpl
loopne
test
arpl
pop
xchg
and
shlb
insb
push
je
dec
cmpsl
xor
nop
test
cmp
pop
rolb
or
not
xor
fcoml
hlt
aaa
mov
xor
cmp
mov
add
scas
cld
insb
add
lcall
xor
sbb
pusha
loop
mov
add
lret
stos
add
mov
push
mov
outsl
push
mov
pop
lret
dec
push
cmp
adcl
mov
or
pop
inc
pushf
xchg
jl
cmp
or
ss
std
aas
and
adc
push
sbb
mov
jne
outsb
inc
mov
std
andl
in
insl
subb
call
imul
sub
inc
lcall
or
pop
push
cltd
jl
or
xlat
and
insb
mov
shll
jbe
cmp
or
paddw
push
jp
xchg
and
push
mov
incl
pop
push
fistpll
add
pushf
dec
sbb
dec
and
ret
sti
sub
ljmp
orb
push
add
xor
out
mov
xchg
sbb
dec
sbb
inc
fists
sahf
flds
sbb
sahf
add
cmp
jo
sti
cwtl
xchg
mov
add
shll
outsb
or
adc
xor
int3
push
add
mov
and
jnp
popf
pop
jo
insl
push
mov
fwait
cmpb
mov
mov
mov
inc
cltd
and
lods
call
inc
inc
xchg
enter
mov
jo
sub
or
in
loopew
ss
mov
push
fistps
daa
xchg
lcall
or
loopw
lea
idiv
and
imul
xor
cmp
ret
fwait
add
in
mov
ror
push
or
popa
std
jmp
mov
push
adc
mov
lods
add
shll
sub
repnz
cli
mov
subl
mov
sbb
orl
and
cmp
fistpll
mov
adc
dec
mov
sarb
nop
mov
ret
js
or
test
aas
insb
mov
dec
and
fidivl
inc
cs
je
lret
cmpsl
jp
mov
out
sub
cmp
or
xlat
fcoms
mov
mov
mov
xor
push
jecxz
stos
mov
dec
scas
xchg
iret
adc
mov
shlb
subb
jno
outsb
lahf
ss
je
jo
repz
jecxz
push
lcall
hlt
mov
fwait
sub
xchg
cmp
xchg
pop
aad
rorb
addb
int3
add
xor
jbe
aas
mov
mov
insb
popa
movswl
sahf
pop
jl
dec
jp
sbb
sub
pop
jb
push
aaa
lea
sbb
cli
imul
rcl
icebp
call
xor
movsl
jne
push
popa
push
les
mov
mov
jns
jp
je
push
out
hlt
pop
sub
push
lock
mov
fs
and
cmp
push
lret
stc
enter
cmc
inc
mov
jns
shlb
ss
pop
xchg
mov
xchg
mov
pop
xchg
add
inc
jnp
ss
pop
push
sbb
push
inc
and
int
push
loope
addr16
insb
call
xchg
mov
xor
pop
sbb
les
insl
in
jbe
mov
fcoml
nop
stos
xchg
cwtl
inc
aas
cmp
addr16
pop
mov
ret
pop
dec
je
add
cmp
mov
pushf
or
add
push
jns
aaa
mov
repnz
xor
insb
movsl
mov
xchg
fimull
int3
pop
or
loop
addr16
test
xchg
ret
mov
sbb
loopne
adc
push
fstp
xor
add
mov
jecxz
or
fsubrs
in
in
sub
add
xor
sbb
pop
sub
mov
sbb
mov
into
dec
sbb
test
arpl
out
lods
mov
rcll
jno
inc
stos
mov
xchg
sbb
push
ret
sub
sbb
mov
jp
push
pop
lahf
adc
insb
lahf
inc
int
pop
hlt
push
sub
imul
mov
sbb
test
arpl
sbbl
push
sar
mov
mov
or
jp
dec
movsb
push
xchg
loop
jmp
iret
aas
mov
int3
popf
push
mov
mov
jae
add
mov
dec
stc
jne
pop
xchg
fs
cmpsb
jg
push
push
push
xchg
and
arpl
adc
scas
and
sub
pop
cwtl
or
inc
push
pop
ret
mov
mov
adc
ljmp
xor
in
stos
inc
push
scas
pop
dec
pop
enter
mov
div
bound
jmp
or
mov
jmp
inc
pop
xor
push
cmp
cmp
mov
jl
cmp
je
jg
sti
xor
dec
loope
cmp
test
mov
dec
or
dec
scas
mov
cs
or
cmp
xor
in
cmp
scas
cmp
sbb
add
add
sbb
int3
mov
and
mov
lea
insl
pop
and
shll
xlat
cltd
dec
mov
dec
cmp
fcomp
lea
and
imul
dec
clc
test
add
out
xchg
enter
js
sbb
insb
inc
pop
dec
popf
dec
push
rclb
xchg
dec
or
leave
add
mov
push
test
daa
inc
andb
mov
sub
sub
daa
jg
adcl
cwtl
mov
mov
es
loopne
mov
std
inc
jbe
ret
rcr
lcall
cmp
or
mov
cmp
add
lret
xchg
push
call
mov
inc
insb
aam
jp
push
loope
ds
cmp
into
adc
cltd
aas
nop
in
movsb
xchg
cli
repnz
and
pop
mov
bound
adc
mov
enter
xor
rcll
shll
test
std
aam
mov
addr16
jecxz
or
out
xor
popf
fwait
lods
jne
dec
xor
xor
es
push
in
or
ret
pusha
dec
push
and
loop
fxam
push
repz
sbb
sub
loop
in
mov
pop
ljmp
xchg
jno
dec
mov
andb
addr16
push
pop
mov
mov
popa
aad
xchg
dec
sahf
sub
jecxz
fwait
test
pop
in
dec
xor
das
cld
inc
or
xchg
adc
adc
add
call
push
jns
lds
mov
jae
inc
push
mov
shrl
adc
dec
call
lcall
into
and
addr16
adc
popa
orl
pop
ret
xchg
pop
in
xchg
int
sbb
shl
push
jg
fcoms
fdivl
or
in
sbb
mov
test
mov
xchg
js
loopne
mov
hlt
mov
and
int3
bound
add
cwtl
mov
andb
subb
out
pop
sub
pop
test
and
loope
pop
arpl
mov
mov
xchg
movsb
js
fdiv
sub
ljmp
jg
or
fs
arpl
arpl
dec
hlt
add
push
add
push
sbb
arpl
mov
sti
adc
mov
mov
orl
mov
xor
mov
es
push
xor
cmp
popa
pusha
loope
add
adc
or
inc
pushf
sahf
xlat
hlt
cmp
sbb
ret
jp
addb
sbb
push
pusha
test
out
test
addr16
xlat
push
and
jns
and
pop
or
mov
add
test
cmpsb
repz
sbb
std
clc
cmp
lahf
jmp
sbb
dec
inc
mov
sahf
add
dec
insl
sub
sbb
inc
mov
xchg
clc
or
or
sbb
test
std
xor
push
xchg
mov
mov
testb
in
pop
lock
cld
dec
andb
mov
scas
push
push
adc
cli
out
test
test
out
loopne
repz
in
or
cmp
xor
jg
xchg
std
sub
int3
xor
rclb
sbb
icebp
ljmp
mov
repz
test
push
mov
push
jle
ret
bnd
pop
sahf
testb
sahf
pop
push
dec
movsb
adc
add
pop
lds
sbb
cs
jae
xchg
movsb
pusha
or
mov
aam
insl
leave
inc
cmpsl
sub
and
mov
push
cmp
xor
nop
inc
push
add
cmpsl
cvtpi2ps
fdivrs
cmpsb
inc
andl
je
xchg
mov
and
lock
decl
sub
repz
mov
enter
mov
add
sbb
add
mov
insb
rcr
push
add
fwait
rcll
lods
pop
call
aaa
js
push
clc
mul
mov
sub
mov
xor
jbe
mov
loop
adc
sub
push
popf
outsl
xor
data16
push
sbb
dec
divb
fucomip
pusha
insl
nop
mov
std
jl
sahf
dec
mov
test
jbe
and
xor
mov
mov
jg
js
xchg
adc
out
sbb
mov
mov
sbb
jp
sub
scas
loopne
mov
push
add
xchg
jo
movsb
sbb
lahf
int3
mov
pop
sbb
lods
cltd
adcl
push
shl
fwait
arpl
dec
sub
sub
sbb
adc
sub
jne
ret
mov
cwtl
xor
adc
sbb
dec
cmp
fninit
pop
mov
sub
inc
ljmp
fmull
cs
subb
xchg
fsubl
push
pop
pop
outsl
sbb
mov
shrb
hlt
cmp
out
cmp
int
scas
stos
cmpsl
shlb
lahf
pushf
lcall
or
push
xchg
mov
cli
xchg
sbb
inc
hlt
into
fisubrs
lcall
jge
jbe
inc
es
addr16
scas
out
outsl
lea
push
stos
mov
daa
xor
dec
inc
push
pop
in
pusha
mov
sbb
jp
add
mov
inc
jle
jmp
or
gs
and
mov
fsubr
push
movsb
push
fsubr
popa
stos
or
inc
lea
shl
rol
es
cmc
push
mov
jb
dec
cmc
push
dec
mov
insl
popa
xor
scas
inc
xlat
fwait
lock
lahf
clc
xor
ret
loopne
xorb
repnz
and
or
jnp
jge
movsl
aas
adc
adc
dec
dec
stc
cmpsl
xor
adc
es
insb
add
add
xchg
fs
out
and
lock
jnp
jnp
push
sbb
cmp
jne
mov
lret
pop
or
stc
mov
xchg
xchg
stos
aad
mov
and
inc
sub
pop
jle
sbb
and
test
push
nop
mov
shrl
xor
imulb
jnp
jne
loop
outsb
lahf
outsl
sub
lret
mov
pop
ss
mov
xor
mov
sti
rorb
orb
xor
sahf
loope
xor
push
xchg
and
cltd
mov
cmp
into
ja
sub
bound
daa
mov
icebp
out
push
mov
cmp
enter
inc
mov
scas
push
scas
mov
cmp
shl
push
mov
pop
push
adc
xchg
lock
mov
mov
and
test
lret
adc
sahf
xor
jb
add
mov
lret
jae
pop
scas
push
jmp
inc
lcall
mov
sbbb
mov
sub
push
xchg
ret
bound
adc
sbb
mov
jge
int3
jo
fidivs
inc
flds
test
add
repnz
into
adc
or
je
fidivrs
sub
jne
mov
push
ret
in
push
sbb
out
pop
lock
jns
bound
lcall
fildll
xor
pop
shlb
pusha
xchg
adc
push
xchg
and
push
mov
push
fistpl
mov
test
cmp
pop
jge,pt
repz
data16
mov
dec
dec
stos
dec
je
push
mov
dec
xchg
cmp
shlb
xchg
and
sub
imul
xor
pop
sbb
pop
pop
sbb
mov
shr
jns
adc
popf
orb
repnz
xor
lock
jb
lcall
into
or
inc
jecxz
xchg
ficoms
jns
xor
mov
jmp
in
jne
and
lea
cld
cmp
sbb
popf
pop
xchg
cld
movsl
sbb
mov
and
inc
subb
adc
add
jmp
xorb
cli
mov
xlat
out
loopne
insb
add
mov
fwait
outsb
fs
lret
fwait
aas
inc
outsb
dec
rclb
inc
xchg
mov
testl
out
sub
mov
pop
pop
jne
push
rorl
ljmp
stos
add
jecxz
into
sbb
jae
dec
mov
hlt
adc
stos
push
iret
js
push
pop
mov
sub
pop
je
lock
sbb
hlt
jl
push
mov
fsts
xchg
xlat
std
jns
mul
or
dec
push
or
lret
ss
notb
mov
pop
mov
jae
jl
push
nop
pop
sbb
outsb
mov
lea
mov
ja
sti
lahf
out
fs
sbb
cmpb
pop
bound
ljmp
xchg
cmp
pushf
xchg
leave
mov
mov
and
out
aam
mov
outsl
loope
pusha
push
xchg
pop
jp
bound
aaa
pop
pushf
xlat
popa
push
fdivrs
dec
fimull
rep
sub
fs
push
addr16
ret
or
dec
insl
leave
ret
mov
incb
push
testb
pop
sbb
scas
fsub
pop
cmp
adc
xor
push
dec
mov
call
mov
mov
push
mov
movsb
jno
dec
mov
inc
stos
sub
ljmp
stc
mov
mov
jb
push
push
cmpsl
dec
xor
stc
jg
jns
push
adc
pop
ficompl
xchg
pop
int3
or
lret
les
loop
arpl
fadds
push
lahf
stc
sub
mov
in
push
fimull
add
nop
les
iret
and
jge
stos
scas
cmpsl
add
fwait
pop
stos
mov
push
jecxz
push
std
cmp
cwtl
push
std
loope
cltd
imul
sub
xchg
aas
inc
xchg
mov
pop
insb
lods
push
loop
rcr
sub
mov
adc
filds
ret
aaa
adc
jae
inc
ljmp
lods
push
rcrb
xor
push
jno
push
cwtl
add
push
in
mov
inc
scas
cmp
loope
xor
in
mov
sarb
ja
sbbl
leave
and
fsubrl
sub
push
add
clc
pop
sbb
push
sub
push
scas
es
aam
pop
test
xlat
popf
les
jge
imul
enter
test
xor
daa
lret
or
sub
add
loope
or
adcl
adc
lcall
clc
call
shll
fists
or
pop
mov
divb
test
or
cs
popa
pop
pop
jne
int
in
push
repz
sub
and
fistl
mov
insl
cmpsl
mov
mov
ficoml
cld
pop
push
jbe
imul
je
cmp
mov
push
fucomi
mov
das
xor
test
add
aaa
xor
dec
cld
aad
and
xchg
adc
cmpl
es
inc
adc
xor
xchg
lods
cld
or
xchg
lret
push
mov
dec
sub
jae
frstor
test
cld
mov
testb
push
xor
mov
inc
push
and
jle
pop
call
inc
sbb
or
decb
fimuls
mov
pop
int3
mov
adc
jmp
or
lods
xchg
mov
dec
mov
ficoml
xor
lcall
imul
sbb
add
leave
push
push
fwait
lret
and
jns
mov
sar
cld
enter
jns
aam
scas
sub
jmp
mov
pop
subl
xchg
inc
dec
mov
fcmovb
and
sub
xchg
stc
xchg
sbbl
adc
adc
lahf
movsl
mov
jg
xor
dec
or
test
mov
in
jecxz
sbb
pop
xor
dec
scas
pop
pop
cmp
add
push
push
jns
movsb
dec
daa
int3
out
push
ret
sub
adc
cmp
das
addr16
je
dec
mov
sub
ss
sub
jmp
fisubs
push
rorb
scas
shrl
clc
pop
jb
popf
xchg
js
mov
jmp
dec
mov
mov
insl
inc
xchg
jbe
mov
in
add
push
icebp
push
pop
jns
hlt
xchg
add
loop
outsb
lahf
test
push
fcmovnu
or
cmp
std
bound
mov
fcompl
push
mov
push
idivb
mov
cwtl
rolb
mov
outsl
mull
test
inc
movhps
push
adc
pop
data16
pushf
inc
rol
sbb
insb
jl
arpl
jmp
sarb
aaa
in
xor
into
clc
call
lret
daa
cmp
lahf
push
push
ret
insl
test
fwait
stos
sub
jnp
stos
scas
dec
cmp
push
js
pop
push
or
sahf
push
repnz
xor
mov
pop
dec
xchg
xor
xor
sti
fwait
icebp
in
dec
mov
ret
clc
pandn
enter
pop
stos
and
mov
inc
cmpsl
in
cmp
ds
push
ss
mov
pop
pop
fcmovnbe
mov
cmp
aam
sub
push
xchg
jge
push
aas
adc
fidivs
bound
into
frstor
jle
pop
sub
data16
mov
or
mov
roll
mov
rclb
add
dec
xchg
push
sub
cmp
out
jne
and
xchg
fiadds
pop
frstor
mov
inc
xchg
outsb
xchg
pusha
mov
adc
mov
shlb
xchg
push
xor
in
sub
and
int
pop
adc
adc
shlb
xor
sub
xor
fcomip
mov
movsl
fisttpl
cmp
adc
sbb
sarb
jp
fwait
inc
lods
cmpsb
mov
imul
adc
inc
lcall
aad
fs
stos
das
dec
nop
aam
pop
imul
or
lahf
test
leave
jbe
ds
mov
jmp
les
cmp
in
mov
dec
push
jmp
das
jb
outsl
ljmp
jecxz
xchg
adc
push
xchg
je
adc
xchg
shll
fstps
jg
or
lret
push
clc
out
fisttpll
and
cld
fisubs
lods
ret
loope
cmpsl
push
pop
aaa
add
gs
fcmovnb
fadds
pop
mov
es
jl
pop
xor
inc
ret
mov
dec
jge
pop
inc
or
adc
pop
sbb
mov
cmp
push
es
imul
jne
in
test
lea
arpl
lods
test
and
cwtl
in
inc
mov
cmp
pop
add
mov
add
inc
xchg
sbb
xchg
stos
mov
pop
adc
lcall
int
pushf
gs
sub
push
or
cld
xchg
xchg
xor
jg
jl
cli
scas
push
xchg
ss
mov
push
out
in
mov
lods
stos
mov
or
ret
xchg
fwait
push
ljmp
movsb
xor
sub
loopne
push
jo
or
out
pop
int3
aam
imul
mov
mov
pop
mov
mov
fmulp
inc
lret
push
test
push
pusha
outsl
iret
dec
pushf
cmpsb
std
adc
and
mov
rolb
in
jno
dec
or
jge
adc
stc
cmp
or
cmp
or
stos
xor
test
xchg
fnsave
in
lods
movsl
dec
jge
add
jns
jb
pop
int
or
mov
jbe
adc
xchg
pop
add
sbb
lock
lds
pop
pop
ss
enter
inc
xchg
into
cltd
notl
movsl
lret
inc
stos
in
dec
pop
mov
lret
bnd
push
insb
popa
sub
push
xchg
xchg
sub
not
sbb
xchg
out
xchg
cmc
icebp
ret
or
into
insb
push
xchg
inc
cmp
out
mov
gs
stc
fwait
xor
aam
cmpsl
notl
fimull
xchg
add
push
xchg
mov
sbb
dec
sub
aam
addr16
lods
leave
arpl
outsl
stos
mov
pop
aaa
mov
es
and
xchg
fistl
and
fcmovbe
inc
sbb
xchg
adc
aaa
movsb
xchg
sbbb
xor
xchg
sbb
mov
add
pop
in
ja
cli
ljmp
adc
mov
out
gs
jns
and
push
gs
push
cmp
ret
outsb
icebp
xchg
cmp
push
and
stos
push
and
jne
cmp
push
cmc
mov
inc
add
mov
adc
bnd
mov
dec
clc
out
sub
ficoml
stos
cli
cmpl
inc
mov
dec
addr16
jne
xchg
shlb
adc
mov
jmp
es
loop
paddd
idivl
ret
xor
sbb
dec
sbb
or
sub
cltd
push
mov
les
mov
jl
mov
sbb
jne
inc
add
cld
lea
jp
cmp
out
jae
mov
scas
in
jecxz
mov
sub
sub
pop
sub
lahf
loope
imul
mov
ja
mov
imul
ret
inc
insb
int3
ds
jecxz
dec
loopne
fcmovnbe
inc
push
dec
sbb
divb
cs
fimuls
push
sub
cmpsl
jo
push
hlt
mov
and
and
out
lret
xchg
in
push
loope
aaa
xor
js
add
xor
jecxz
dec
or
mov
test
orl
mov
fsincos
shrb
notb
add
mov
or
in
inc
push
mov
outsb
inc
push
aam
dec
add
sbb
lea
lret
ljmp
inc
lret
inc
jmp
mov
lock
out
pop
fwait
push
decb
mov
imul
rol
scas
movsb
dec
int
cltd
sbb
insl
and
sbb
mov
dec
dec
mov
mov
mov
fmul
call
jbe
scas
imul
sub
sti
and
cli
rolb
aaa
jne
sti
incb
addr16
xchg
xor
or
out
icebp
in
inc
outsl
ret
fidivs
jp
cmp
mov
xchg
sub
faddl
fdivr
fnstsw
call
pop
out
push
pop
cmp
mov
dec
add
and
je
es
fisttps
inc
dec
cmp
mov
filds
push
sbb
and
std
mov
pop
jmp
xchg
lods
lock
cmp
mov
ror
out
inc
mov
outsb
fistps
dec
ret
es
lds
arpl
mov
pop
leave
xchg
in
jle
loop
jno
fadds
pop
lret
mov
sbb
jle
outsl
add
iret
sbb
int
and
mov
mov
sbb
mov
push
test
add
or
jae
sub
fnstsw
repnz
outsb
pop
xor
mov
and
cmpsb
mov
fiadds
pop
jp
push
js
into
repnz
jb
sarb
xor
pop
es
xchg
cltd
inc
jmp
push
sub
xorl
aam
shrl
pop
pop
hlt
rcrl
add
mov
xlat
sbb
inc
ja
cmp
es
out
jge
popa
pop
fstl
dec
sahf
mov
sub
push
inc
mov
push
adc
fimuls
jmp
mov
adc
adc
xor
and
mov
loop
pop
pop
ret
mov
push
ficoms
pop
push
loopne
daa
sbb
xchg
push
imul
daa
xor
add
dec
jp
xchg
movsb
sbb
sbb
jecxz
push
xor
xchg
sbb
das
mov
mov
pop
xchg
add
movsb
xor
daa
jae
fsts
mov
jns
mov
dec
xchg
push
xor
fldcw
dec
jl
sarb
imul
aaa
fs
jg
jl
inc
mov
pop
push
das
cmp
mov
aad
xchg
and
loop
insl
fstps
psllq
mov
pop
pop
inc
add
sar
lret
ljmp
or
xor
cmp
js
cltd
xor
idivb
mov
ja
xor
popf
pop
cltd
push
inc
movsb
leave
cmp
mov
xor
jne
dec
mov
stos
add
xchg
in
or
out
pushf
jne
adc
test
cltd
ficompl
aas
dec
stc
loopne
pop
ret
subl
xchg
sbbb
rcl
sub
or
insl
push
out
sarl
mov
in
jge
inc
dec
dec
push
add
jae
add
xor
or
mov
ja
sti
xchg
into
addr16
add
js
jg
stos
adc
adc
test
xor
std
inc
inc
jbe
ror
cltd
inc
andb
sbb
loope
xlat
xchg
sbb
hlt
mov
and
inc
dec
xor
hlt
xor
lods
push
sub
es
push
outsl
mov
test
cmp
ljmp
push
fisubrl
and
mov
into
push
pusha
cmp
es
nop
inc
mov
add
mov
xor
mov
outsb
adc
aaa
test
mov
xor
into
popl
cltd
adc
sbb
scas
add
jp
mov
or
push
mov
mov
add
ljmp
mov
sbb
into
mov
hlt
jae
leave
gs
js
enter
shll
stos
sub
jb
mov
cmp
jne
inc
add
adc
not
test
mov
pop
lahf
icebp
adc
in
je
es
popa
stc
addr16
jnp
clc
repz
das
dec
adc
push
push
mov
call
test
mov
neg
insb
mov
push
xor
pop
sbb
or
int
in
jle
out
mov
jmp
inc
imul
push
cmp
or
imul
xchg
les
je
ljmp
add
inc
push
hlt
and
xchg
push
jb
lret
or
nop
push
outsl
fmuls
add
xchg
push
lock
cmc
and
or
aas
pop
mov
popa
movsb
jecxz
testb
outsl
sbb
outsb
push
arpl
fdivrp
lret
cmp
sbb
enter
icebp
loopne
je
les
sbb
adc
ja
imul
and
xlat
mov
int3
js
cmp
test
sahf
xchg
pop
or
push
xor
push
in
mov
mov
sub
bound
xchg
sarl
pop
fstpt
dec
jne
test
xchg
scas
cwtl
loop
cmpsb
xchg
loope
and
cmp
adc
mov
adc
xchg
adcl
cli
pop
dec
mov
jnp
xor
xor
sti
and
xchg
movsl
repz
pop
iret
stos
in
mov
lds
call
jp
stc
stos
mov
shlb
mulps
dec
xchg
dec
xor
lods
inc
outsb
loopne
mov
jbe
mov
insl
push
xchg
ror
adcl
jp
pop
in
adc
call
clc
or
fmul
jl
cmp
sbbl
fsubrl
enter
mov
pop
or
jmp
sub
push
out
mov
xor
test
lahf
push
stos
dec
outsl
jbe
lods
mov
add
dec
enter
and
pushf
out
clc
jns
scas
jp
scas
push
test
je
imul
flds
nop
out
test
push
pushf
outsl
mov
jge
fbstp
adc
jb
cli
fcomps
xor
jae
jg
iret
inc
insl
mov
std
push
jmp
cld
sub
imul
jmp
cmc
in
js
cmc
and
mov
push
clc
int3
call
fwait
dec
adc
sbb
lahf
sti
mov
iret
push
xchg
push
xorb
lret
lock
sub
pop
xor
sub
popf
cmp
add
mov
xchg
sahf
insb
add
outsb
jae
dec
cli
push
or
aaa
out
aad
xor
inc
xor
lret
push
lret
and
cmc
xchg
dec
lahf
lahf
iret
addb
das
mov
sbb
out
mov
faddl
cmpsb
movsb
dec
jne
mov
pop
sub
lea
sbb
popf
scas
pop
jno
ret
mov
iret
out
push
sub
pop
and
fisubl
in
pop
mov
imul
sub
addr16
pop
test
pushf
popf
mov
fstps
mov
imul
xor
nop
test
fsubrl
cmp
cs
lcall
fldt
add
push
mov
push
inc
int3
rcll
push
sub
push
add
mov
and
pushf
push
rdmsr
dec
mov
xchg
xchg
inc
inc
test
ret
xchg
dec
sti
enter
fwait
and
into
sub
lcall
mov
mov
push
jl
xchg
dec
stc
ljmp
xchg
test
sbb
les
ss
leave
xor
push
push
ret
mov
pop
add
out
clc
mov
jmp
sbb
andl
cmc
pop
mov
imul
add
and
sarb
pop
leave
outsl
sub
cltd
inc
sub
xchg
rclb
sub
xchg
push
dec
push
pop
cltd
shlb
inc
mov
call
lock
xor
pop
lods
mov
shll
dec
scas
add
pop
cltd
push
jge
mov
mov
jb
ret
gs
inc
loop
ljmp
andl
andl
out
and
cli
das
lods
aaa
je
xor
in
cld
ficoms
adc
inc
jo
lods
xor
ret
fistpll
lret
sub
fwait
jecxz
push
dec
xor
dec
pop
adc
cltd
in
orb
xchg
adc
pop
mov
mov
ret
jle
in
xchg
ljmp
mov
xor
push
lds
inc
adc
mov
lcall
xchg
and
iret
pop
dec
test
es
fistpll
pop
aas
and
adc
loope
push
loopne
xchg
lret
pop
insl
xor
push
push
sbb
popf
mov
fsubs
dec
push
outsb
mov
hlt
imull
sub
int
xor
fldenv
and
insb
adc
ret
mov
inc
cld
push
rcrl
or
add
mov
mov
cwtl
fstpt
std
movsl
mov
xchg
sbb
jg
ret
clts
fwait
mull
gs
clc
ret
gs
cmp
in
ds
mov
mov
aaa
aas
push
leave
mov
pop
dec
dec
sarb
sub
and
mov
sub
mov
mov
lea
mov
lods
rep
xchg
aaa
jecxz
pusha
inc
ficoml
and
jg
jmp
mov
push
and
xchg
jne
push
push
jnp
cmc
stc
add
icebp
mov
xchg
lods
int3
dec
cld
aaa
xchg
fimuls
mov
lret
jle
cmpsl
lods
and
mov
movl
push
adc
xchg
outsl
divb
js
out
ret
push
cmp
jp
dec
je
mov
ds
into
jge
adc
sub
and
cmp
or
jno
xchg
stc
pop
gs
fwait
add
fdivs
jmp
fimuls
loope
mov
test
call
push
inc
dec
xor
add
adcl
jge
cmc
mov
movsl
or
lret
adc
sub
jmp
jb
dec
mov
jne
push
pop
sub
movsl
fs
adc
or
lea
and
cs
xchg
fidivrl
rol
mov
popa
ss
ss
sub
xchg
mov
jl
mov
sbb
add
mov
sub
rcll
loopne
cmpl
push
cmp
pop
scas
lret
push
mov
mov
lock
inc
aaa
adc
fwait
ret
out
mov
loope
sbb
pushl
adc
cmpsl
lods
push
rcrb
aaa
out
int3
rcrb
popl
jp
mov
cmp
ljmp
arpl
mov
out
repnz
divl
adc
decb
insl
xor
test
js
mov
bound
int
add
clc
add
stos
sub
inc
fdivs
cmpsl
ljmp
jecxz
sti
call
xor
clc
inc
xchg
pushf
sub
rcll
xchg
sub
das
pop
loope
xchg
mov
sub
dec
jo
push
push
movsl
jnp
xchg
inc
cld
adc
jo
call
leave
jns
jl
mov
xchg
rclb
imul
fstl
jne
rcll
or
push
cld
jno
push
sbb
aam
dec
sar
pop
fsubs
xchg
push
lods
mov
cmp
arpl
es
or
cmp
rcl
into
sbb
mov
push
jge
mov
mov
jp
mov
std
inc
cltd
lock
fimuls
dec
negl
inc
mov
adc
imul
sbb
jl
jge
xor
sahf
sti
roll
out
jo
lret
jne
jo
pop
add
jno
push
rol
sbb
out
rorb
add
cli
cltd
lds
pop
addr16
in
int
push
pop
and
or
xor
mov
mov
scas
mov
int
sub
dec
mov
scas
xchg
sub
mov
dec
imul
cmp
mov
xchg
push
add
cmpsl
mov
xchg
mov
fiadds
mov
add
push
shrb
cmp
or
xchg
cltd
inc
fdivrl
adc
or
out
testb
xchg
cmp
setb
mov
push
repz
add
stc
leave
push
test
xchg
int3
xchg
push
sahf
test
addr16
add
push
out
xchg
or
movsb
fmul
sbb
xor
fadd
xor
sbb
push
jecxz
cmp
jge
out
dec
jecxz
loope
mov
sub
adc
inc
fcmovnbe
jle
dec
pusha
sbb
test
popf
pusha
subl
fs
push
nop
in
pop
sub
test
stos
mov
repz
loopne
fnstenv
jo
iret
insl
in
inc
cltd
jp
push
roll
jne
mov
mov
pop
adc
mov
jbe
mov
enter
ljmp
int
roll
imul
push
fstps
inc
pushf
push
pop
out
hlt
mov
fildl
fstps
les
movsl
push
ss
and
out
lock
and
lret
shll
push
pop
ficomps
lret
jg
cmp
dec
iret
adcl
dec
xchg
sbb
jmp
sarb
and
out
js
dec
dec
es
and
jno
or
pushf
clc
mov
loop
mov
dec
mov
jl
movsl
movb
add
xchg
push
das
in
jnp
inc
inc
mov
filds
xor
dec
stos
aas
fcompl
lcall
addr16
mov
scas
int
popa
out
cmpsl
push
add
sub
add
negl
fbstp
cld
iret
imul
popf
insb
xlat
sub
iret
cli
jbe
cmpsb
and
push
aaa
outsb
push
aad
and
in
into
data16
add
add
inc
sbb
test
fistpll
scas
adc
jmp
or
out
ja
mov
xor
pop
aas
ror
popa
xor
push
sbb
rclb
pop
scas
or
fadds
and
std
popa
xchg
in
aaa
mov
outsl
repz
adc
outsl
xor
roll
pop
jbe
lret
call
mov
incb
xlat
xchg
mov
mov
lock
push
ret
fs
stos
shll
inc
xchg
imul
in
out
cmp
push
push
scas
inc
xor
inc
mov
xor
dec
rcrb
ljmp
aad
xor
jmp
stc
push
inc
lods
int3
gs
lods
or
xlat
call
icebp
push
arpl
cmc
in
lds
pusha
sub
sub
shl
icebp
inc
clc
and
dec
cltd
and
jmp
inc
jb
leave
lods
mov
test
add
dec
pop
xchg
mov
test
or
enter
jae
fwait
lret
or
or
xchg
adc
stc
add
pop
sub
sbb
rcrl
daa
jnp
pop
lods
sbb
mov
lds
pop
mov
outsb
adc
movsl
jmp
jae
adc
xchg
cmp
lcall
pop
dec
aad
dec
add
test
cltd
or
dec
pop
xor
pop
fwait
lret
call
jmp
jg
inc
pop
cli
std
sbb
adc
lock
or
xchg
mov
sbb
push
or
das
sbb
repz
xchg
fidivs
shll
in
xchg
or
inc
pusha
int
test
jmp
xor
xchg
sbb
add
popf
inc
adc
dec
xchg
push
pop
dec
loop
rcl
cmp
dec
inc
cmp
movsl
xchg
pop
jle
test
scas
pop
push
loopne
or
lock
xchg
mov
add
scas
and
fucomp
outsl
push
imul
inc
pop
push
sub
es
jge
dec
into
mov
add
arpl
movsb
cli
and
xchg
xor
or
or
jl
dec
mov
enter
or
cmc
and
cmp
mov
out
push
inc
or
rorb
jge
clc
repnz
adc
and
in
dec
push
dec
xor
xor
popa
jno
negl
or
mov
mov
int
xor
lods
mov
les
mov
rolb
push
jle
pop
cmp
xchg
loopne
mov
daa
add
pop
in
outsb
adc
into
sub
call
fnsave
inc
in
or
cmp
adc
jmp
xor
outsl
test
addr16
xor
outsl
fadds
or
test
mov
xchg
pop
stc
ret
inc
cmp
lods
mov
cmp
jns
sub
repz
push
push
loope
dec
mov
sub
fiadds
mov
ret
push
loopne
movsl
mov
lret
inc
mov
xor
das
sub
mov
cld
cltd
int3
pop
add
rep
xlat
stos
inc
mov
popf
popa
adc
push
ljmp
jns
pop
jp
jb
dec
lock
aad
jo
fsubl
sbb
lret
mov
orl
mov
js
ja
sub
or
jnp
xchg
iret
push
aad
stos
mov
xor
sbb
xchg
dec
adcl
mov
lahf
adc
in
cmp
popa
and
les
xchg
sbb
hlt
fsubp
es
dec
mov
add
pop
sub
mov
pop
mov
loop
iret
jnp
push
mov
jb
xchg
mov
mov
pop
jge
les
fsubl
dec
ret
lahf
push
sbb
dec
and
mov
mov
inc
mov
fs
fldenv
mov
es
test
mov
xchg
inc
ret
xchg
cmp
lds
mov
jbe
mov
mulb
jle
xchg
iret
loope
add
lret
add
and
std
movsb
xor
sbb
in
jne
jecxz
or
mov
mov
lret
push
xchg
cmp
inc
cmp
fs
mov
mov
push
jecxz
rorb
test
mov
mov
nop
repz
test
out
shll
mov
pop
dec
stos
sti
popl
dec
push
mov
sbb
cltd
and
out
cmp
xchg
idivl
xchg
pushf
or
into
and
add
lret
sub
inc
das
pop
dec
push
rcr
lock
inc
js
inc
das
adcb
inc
mov
push
shll
pop
inc
push
cli
bnd
or
pop
mulb
fmuls
iret
test
and
sub
aad
or
hlt
xchg
gs
sti
popa
jne
js
jae
sbb
call
lock
xor
push
ret
loop
adcb
or
add
jg
popf
popf
adc
test
mov
adc
dec
jl
jmp
pop
sar
xchg
pslld
addb
orb
shl
dec
sub
bound
push
outsl
fnstsw
cmpsl
fwait
pushl
sbb
out
pop
dec
mov
dec
push
arpl
test
cmp
cmpsl
mov
and
adc
iret
mov
pop
subl
aas
mov
outsb
nop
dec
lock
mov
xchg
jbe
inc
dec
mov
in
mov
sbb
dec
sarl
and
std
xor
sub
or
inc
adc
js
xlat
cmp
call
fiadds
outsl
je
cwtl
cld
ja
adc
inc
incl
clc
mov
mov
push
sub
jo
pop
push
pop
mov
inc
inc
in
jne
sti
dec
ffreep
shlb
fwait
int
xchg
test
dec
sbb
mov
pop
pop
loope
rclb
lea
mov
mov
in
push
cld
inc
jmp
lea
fisubrs
scas
dec
mov
jp
lock
test
jne
jns
push
out
pop
imul
mov
and
mov
je
jo
sub
xchg
popl
jecxz
push
mov
and
inc
neg
adcl
outsl
pop
sub
adc
gs
popa
cmc
xchg
in
mov
xor
popf
cmp
push
and
pop
cltd
and
inc
sahf
scas
in
pop
lods
movsl
shrb
jnp
push
pop
sbb
sbb
sub
jmp
lcall
push
xchg
pop
sbb
imul
outsb
lods
mov
int3
out
out
pop
mov
jl
daa
adc
stos
add
leave
scas
pop
lcall
movb
jg
add
add
out
jne
push
les
mov
jl
sbb
push
jge
out
scas
xchg
mov
lahf
mov
ljmp
addr16
push
neg
pop
jp
pushf
inc
and
or
push
std
sub
cmpsl
in
pop
mov
stos
cmp
cmp
inc
inc
in
test
jb
lock
sbb
scas
push
xchg
mov
ret
jbe
out
decb
cmc
in
adcb
mov
pop
jne,pt
xchg
sahf
lcall
sbb
sets
pusha
movl
adc
pushf
inc
sbb
test
fucomi
sbb
scas
testb
sbb
xor
sbb
aas
mov
add
movsb
ss
push
push
adc
dec
jbe
sbbb
data16
lea
mov
jae
or
call
mov
inc
outsb
mov
das
andl
outsl
jnp
inc
cmpb
mov
or
push
adc
lods
ret
push
int
or
leave
into
dec
lods
bnd
and
call
adc
fisubs
mov
and
jb
js
out
xorl
testb
pop
xchg
movsb
ljmp
xor
sbb
or
jnp
sub
pushf
cmpsl
lahf
rcr
sarl
repz
xchg
mov
out
out
scas
dec
mov
dec
mov
dec
lds
int3
mov
out
aad
clc
xor
mov
jecxz
mov
mov
push
mov
insl
adc
jne
pop
insb
lret
in
rolb
mov
or
mov
sbb
xchg
std
inc
mov
and
ficompl
addl
mov
jne
push
test
lods
mov
sbb
mov
cmp
hlt
mov
call
jb
shrb
inc
and
imul
rdmsr
aam
dec
lock
inc
addl
sub
mov
cmp
pop
mov
lcall
adc
adc
sarb
sub
icebp
addr16
out
rcrl
xchg
mov
cld
adc
push
mov
in
pop
cli
int3
or
cmp
les
loop
in
int3
mov
in
sbb
dec
inc
stos
push
cmc
or
fxch
cmp
inc
sbb
jmp
jl
pop
sub
add
adc
data16
or
mov
loope
inc
in
sub
or
sbb
push
stos
pop
in
jmp
andl
sbb
sbb
cmp
cmpsl
lcall
jmp
mov
sub
out
out
ljmp
sub
test
lods
pusha
mov
adc
sbb
stos
dec
outsl
adc
xchg
sbb
dec
adc
xchg
dec
sub
pop
cli
int3
add
mov
movsb
std
enter
std
test
push
test
je
xor
aad
mov
sub
ja
repz
mov
adc
xor
jbe
pop
sbb
loop
in
sub
loope
mov
xchg
sti
xchg
in
xor
mov
add
mov
clc
std
aas
popa
test
cmp
mov
int
cmp
adc
add
cwtl
xor
xchg
mov
sbb
push
mov
movsw
in
dec
fninit
outsl
cmp
push
sbb
stc
fcomi
push
sub
rcr
imul
cmp
roll
mov
aaa
jnp
dec
xor
lcall
mov
movsb
jno
jge
pop
xchg
in
pushl
jmp
aaa
push
std
dec
stc
das
fldl
stc
pop
inc
pop
imul
or
lods
push
lock
leave
push
dec
es
sbb
ljmp
sub
nop
push
dec
jp
xor
loopne
push
fwait
pop
xchg
cmpsb
paddsb
js
scas
push
xor
mov
out
lret
in
sub
jmp
sbbl
and
mov
fs
mov
xor
adc
fisttpl
mov
std
add
sahf
dec
xchg
test
pop
fwait
pop
adc
imul
cmp
push
test
dec
sbb
mov
mov
nop
icebp
stos
das
or
les
push
mov
sub
pushf
jno
jp
stos
adc
mov
xchg
ror
xchg
dec
pop
loope
pop
movsl
push
in
ret
lahf
and
jecxz
inc
mov
inc
jnp
in
jne
mov
sarb
je
sub
stos
and
mov
add
jae
or
dec
scas
or
pop
push
lret
pop
xor
ret
int
pop
cmp
fdivrl
pushf
es
iret
outsl
in
dec
lea
add
sub
f2xm1
inc
or
insl
inc
cmp
adc
icebp
jmp
or
add
mov
push
mov
ret
adc
aad
out
cmp
add
pop
out
leave
test
pop
sub
out
sbb
xchg
test
int
jecxz
mov
std
orl
pop
push
or
push
nop
out
into
nop
das
fistpl
mov
dec
gs
mov
mov
shll
add
xchg
push
or
enter
inc
fadd
and
mov
adc
jg
out
popa
push
js
subl
lods
stos
scas
jp
int3
sbb
addr16
xor
sti
xchg
repnz
push
cli
jns
inc
jnp
int3
mov
icebp
repz
js
lret
adc
xor
pop
iret
jne
call
jg
and
lahf
mov
push
mov
fwait
fs
xlat
mov
movsb
imul
repnz
mov
pop
clc
addb
in
mov
mov
mov
push
push
push
out
iret
sub
rcll
xchg
mov
jg
dec
mov
arpl
cvtdq2ps
and
push
mov
sub
rcll
enter
out
and
mov
mov
xor
inc
in
pop
je
xchg
rol
mov
das
shll
or
mov
mov
jbe
es
aaa
mov
sub
sar
sub
add
xchg
test
and
shr
test
mov
sub
push
pop
jecxz
int3
ror
pop
int
imul
movsb
jb
xor
cld
fnstcw
dec
jnp
ret
in
push
cmp
sbb
add
pushf
cmp
jae
or
cld
rclb
enter
mov
cmpsl
movsl
mov
xor
shld
and
xor
push
rcrb
lcall
mov
push
mov
cltd
xchg
iret
inc
pop
xchg
mov
dec
xor
add
jb
mov
lahf
xchg
inc
inc
mov
fisubrl
adc
push
lods
das
push
push
push
mov
push
lcall
mov
int
pop
and
lcall
mov
xchg
jno
movb
inc
sub
call
or
inc
loope
shlb
testb
fucom
cmp
push
movsb
insl
pop
push
pop
outsb
in
into
jns
jno
imulb
cmp
movsl
mov
in
xor
mov
sarb
ret
mov
mov
cmc
jmp
dec
sarb
inc
sbb
and
inc
pop
xor
xchg
adc
mov
fstpt
jp
dec
mov
clc
xchg
imul
loope
jae
in
lcall
xchg
mov
mov
fnsave
lds
test
xor
leave
mov
shl
test
icebp
call
mov
jge
test
daa
fimull
xor
jmp
test
push
sahf
dec
data16
push
mov
lds
add
or
mov
pop
inc
ljmp
mov
mov
stos
add
jge
push
and
out
and
daa
dec
add
or
sbb
insb
xchg
xchg
pop
jmp
and
ja
cmp
dec
cmc
dec
daa
mov
roll
out
int3
call
mov
fldl2t
sti
pop
sahf
sbb
xchg
jecxz
or
cmp
adc
cmpsl
addl
outsl
or
into
lret
popf
shr
aad
repz
jge
pop
jnp
xchg
hlt
pop
mov
dec
adc
loope
rolb
bound
mov
dec
or
pusha
mov
inc
je
loopne
mov
and
sub
mov
test
sbb
cmp
lds
cmp
mov
jl
stos
lahf
data16
shlb
push
cmovns
cmc
pop
aas
adc
mov
pop
or
js
adc
lahf
pushf
int3
negl
sbb
pop
pop
notl
cli
mov
or
cmp
push
add
xor
les
pop
or
adc
lahf
or
jg
lret
das
je
bnd
and
pop
dec
mov
xor
daa
push
negl
cwtl
fnstcw
mov
lea
out
push
jle
jge
inc
lea
xchg
std
mov
mov
inc
jle
xor
or
and
clc
fists
xor
aam
imulb
dec
cltd
sbb
cmpsl
int3
test
dec
test
mov
mov
xlat
arpl
jne
push
push
ss
enter
add
xor
shrl
push
xchg
inc
lods
mov
es
or
jmp
lret
push
mov
aam
cmp
mov
mov
sbb
int
dec
sub
sub
sub
mov
adc
dec
movsl
push
xor
call
add
and
push
push
lods
stc
mov
es
xor
jb
pop
mov
nop
ja
test
pop
jl
pop
cmp
loopne
and
mov
add
jae
dec
lcall
and
pushf
mov
popf
les
xchg
rep
adc
jp
mov
adc
repz
add
out
test
mov
dec
pop
jg
push
ja
xlat
daa
add
jl
adc
std
mov
xchg
sarb
outsb
fidivrs
test
cwtl
xchg
orb
fisttpll
or
testw
inc
ljmp
ljmp
dec
nop
sub
cmpl
call
popf
xor
fdivs
mov
xlat
xchg
enter
cmp
pop
xor
mov
push
cli
stos
pop
mov
imul
xor
fildll
cmp
sbb
hlt
shrl
sub
mov
or
add
mov
mov
les
ja
add
mov
mov
loop
out
sub
mov
adc
push
mov
sub
push
sbb
cltd
mov
outsl
mov
lds
mov
lods
mov
ja
sub
addr16
in
or
xor
add
cmpsl
call
cli
push
fstl
lcall
jae
or
and
jge
ljmp
sbb
sub
shlb
sbb
pop
adc
test
fwait
out
pop
negb
pop
js
jns
mov
xor
icebp
add
testl
das
rcl
lods
jb
add
repnz
push
test
gs
dec
cmp
xor
repz
mov
push
mov
dec
jmp
jl
or
test
stos
jbe
push
fwait
mov
dec
testb
ds
dec
imul
jne
xor
inc
into
inc
nop
in
out
pop
lea
je
clc
add
push
rcrb
cmp
ja
inc
pop
add
addr16
fs
push
lock
js
cli
inc
push
add
fisubrs
pusha
mov
sbbb
push
dec
push
dec
decl
jo
pop
out
mov
stc
mov
dec
frstor
popf
sar
std
mov
jno
cmp
cmp
mov
jno
ret
lcall
or
loopne
roll
mov
pop
imul
push
mov
loop
shll
adc
sbb
gs
push
and
xor
pop
aam
jo
lds
jg
mov
mov
sbb
mov
jge
xchg
push
nop
jb
sbb
push
ljmp
sub
sub
cmp
pop
sub
stc
cmpsl
mov
fwait
xchg
lea
fsubrs
push
push
test
mov
push
lods
cmp
faddl
divl
pop
xor
mov
mov
addr16
lock
dec
push
or
andb
dec
imul
shlb
jnp
sub
pop
mov
ja
jl
xchg
inc
loop
jge
mov
bound
shlb
lcall
test
sub
mov
mov
in
add
fs
aas
xlat
ljmp
mov
js
loop
xchg
in
xchg
mov
inc
mov
shl
mov
sbb
fistpl
cmp
xor
jnp
pop
or
mov
inc
cmp
mov
push
adc
data16
out
mov
dec
push
ljmp
inc
inc
popa
add
jo
scas
clc
outsl
xchg
divl
lock
icebp
loope
cmp
pushfw
jne
mov
inc
push
dec
xchg
mov
xor
mulb
lcall
add
xchg
pop
lcall
mov
and
dec
or
lock
cs
pop
pop
rclb
mov
add
cmp
mov
jecxz
cmpsl
xor
dec
ror
popf
mov
sub
mov
shl
xor
adc
addl
or
lods
dec
std
out
addb
movsl
xchg
in
out
mov
cmp
loope
jl
inc
jp
fwait
std
mov
pop
outsb
repz
out
add
insl
xchg
cmp
cltd
pop
dec
sahf
jp
pop
daa
and
lahf
inc
faddp
cld
movsl
adc
mov
fs
mov
cmc
sub
idivl
cmp
loop
pop
sub
adc
sub
adcb
push
pop
pop
add
sbb
bound
sbbl
cmp
data16
frstor
ljmp
inc
pop
xchg
std
jg
lods
int
nop
in
pop
inc
nop
cmpsl
andl
mov
sub
outsl
and
out
aad
repnz
sbb
dec
push
mov
pusha
push
je
mov
imul
or
test
xchg
orl
bnd
pop
mov
js
adc
test
xor
inc
adc
mov
cmp
test
in
cmp
sbb
jns,pt
mov
bound
lods
jae
xchg
pop
cmp
test
jecxz
sti
add
nop
or
cmp
jo
fistpl
ret
daa
sub
jp
cmc
push
leave
add
mov
imul
mov
cmp
sbb
jge
mov
flds
cmpsb
fdivs
aas
popf
adc
lods
jmp
add
jl
or
push
or
push
jmp
mov
orl
push
mov
into
insb
push
out
ja
out
icebp
test
cli
scas
jnp
js
push
mov
aaa
ljmp
push
div
insl
das
mov
cmp
push
sub
and
out
inc
int
ja
push
lods
cmp
outsb
jecxz
outsb
or
loopne
je
dec
pop
add
lcall
jnp
insl
mov
and
dec
push
mov
mov
outsl
leave
xchg
enter
scas
jne
mov
and
roll
or
mov
sub
lret
sti
pop
stos
sbb
pop
dec
mov
mov
xchg
jg
xor
pop
in
mov
and
jae
and
mov
push
dec
jmp
mov
xchg
addb
push
shrl
and
mov
sti
adc
mov
cli
jmp
aaa
ud0
add
enter
adc
imul
xor
xor
mov
or
pop
insl
ss
cmp
pop
sti
fs
aad
sbb
popw
aam
ljmp
xchg
scas
data16
pop
les
push
pop
scas
jge
dec
pop
adc
clc
data16
cmc
push
jo
insb
testl
inc
or
negl
and
mov
iret
sub
cmc
add
test
mov
outsl
or
out
push
ljmp
fwait
push
test
lret
mov
sbb
ds
dec
movsl
fnstcw
xchg
out
mov
daa
mov
ljmp
xor
es
ss
xor
adc
cltd
mov
pushf
push
gs
sub
jle
jmp
pop
jg
lods
mov
jo
leave
lret
cmc
ret
mov
adc
ds
nop
jo
adc
in
out
int
adc
xlat
push
das
pop
test
xor
es
mov
add
mov
rorb
sub
push
pop
or
fistpl
mov
and
mov
loopne
cmpsl
inc
pop
mov
pop
xchg
cmp
adc
sub
xorl
pop
pop
adc
dec
nop
clc
rcll
shrl
mov
ficompl
adc
into
lret
test
dec
xchg
jb
sbb
push
shl
push
bound
fsub
mov
dec
imul
and
or
adc
sub
mov
imul
and
mov
loopne
xchg
test
cld
dec
xchg
iret
fwait
push
cli
xchg
icebp
es
mov
cs
int3
adc
mov
leave
and
iret
dec
dec
jb
mov
pop
jnp
sbb
decl
mov
push
nop
jp
shll
mov
mov
xchg
push
nop
mov
mov
popf
fisubrl
popa
mulb
or
nop
mov
orb
repz
jmp
dec
out
daa
sarl
lret
mov
bswap
bound
jp
cmp
cmpsl
in
push
popf
lods
mov
xor
xchg
sbb
dec
push
filds
push
or
mov
mov
inc
push
push
into
mov
xchg
push
aaa
and
cmp
sub
maskmovq
divl
or
pop
xchg
add
adc
push
aam
jecxz
fwait
and
jge
cmpsb
leave
insl
popf
cld
test
mul
or
and
loope
movsl
xor
movsl
adc
mov
jne
sbb
lea
inc
adc
xchg
scas
sbb
mov
jb
sub
or
pop
clc
pop
pop
movsb
sub
jmp
and
sbb
inc
addr16
dec
and
jo
jb
rcrb
jg
in
and
sbb
outsb
cmpsl
dec
cmc
sbb
mov
sbb
lds
xor
sti
cmp
pop
sahf
sub
cmp
or
sarl
shlb
and
movl
jnp
les
loopne
stc
subl
mov
daa
lcall
outsb
xor
lock
aam
dec
mov
mov
xlat
adc
enter
insb
jnp
pop
sti
push
mov
movsl
jmp
ds
mov
mulb
or
loop
cli
call
mov
bnd
das
in
or
inc
xchg
mov
sbb
sub
mov
cmp
sub
inc
cwtl
lods
or
enter
sbb
xchg
test
jmp
into
or
icebp
jns
scas
xor
loopne
dec
and
xlat
repnz
dec
mov
and
sbb
decb
aaa
inc
inc
cmc
je
hlt
inc
je
push
fmul
mov
mov
add
bound
mov
mov
sbb
xchg
icebp
repz
test
mov
shrb
int
sub
in
insl
inc
and
les
hlt
mov
dec
push
and
adc
gs
cmp
dec
dec
mov
movsb
push
movsb
data16
popa
sbb
daa
push
mov
stc
popf
mov
js
jnp
test
and
jle
movsb
loop
push
add
dec
push
ja
divps
hlt
lods
jne
mov
cmp
xchg
mov
cmpsb
enter
in
mov
test
pop
sbb
arpl
push
fs
ja
jno
out
int3
neg
mov
or
std
jmp
imul
movsl
popf
add
mov
lods
pop
inc
push
int
inc
mov
stos
cmp
xor
fwait
nop
je
xchg
push
aaa
das
pop
xor
mov
sbb
fwait
and
cld
sahf
lods
mov
xor
daa
mov
xchg
fwait
cli
addr16
sar
and
sbb
in
ror
rcrb
or
mov
or
push
pop
ret
pop
xor
adc
and
addl
or
movsl
or
daa
sbb
dec
mov
jge
sti
sbb
adc
adc
arpl
lret
push
dec
or
jmp
push
test
call
pop
xor
movsl
movsb
inc
xor
rolb
testl
pop
test
cwtl
popf
ror
aad
mov
lret
and
js
dec
lcall
es
inc
jne
in
mov
lods
scas
test
das
jle
sti
mov
in
push
xchg
jp
mov
mov
jnp
popf
aam
or
and
sub
sub
xchg
je
test
xchg
cmp
movsl
xchg
in
push
xor
sbb
inc
es
stos
or
sahf
je
adc
aam
mov
cmc
movswl
fstpt
inc
sub
in
aad
repz
pop
or
mov
xorl
cltd
xchg
push
movsl
sbb
loop
ret
push
add
fistpl
push
add
test
push
sub
dec
inc
adc
loop
xchg
cld
mov
adc
inc
dec
je
jnp
sahf
jl
mov
arpl
add
sbb
push
xlat
mov
pop
and
mov
mov
mov
lea
xchg
jo
cs
mov
pop
lcall
adc
jb
test
jg
xor
in
xchg
sub
add
insl
pop
fmuls
lcall
int
fiaddl
xchg
xchg
int3
cwtl
dec
cmp
mov
lods
das
mov
mov
push
xor
adc
in
dec
xor
sub
fisubs
or
in
xchg
pop
jbe
mov
loopne
mov
pop
dec
sbb
imul
sbb
test
cmp
lahf
pusha
mov
aam
fwait
repz
xchg
mov
and
cmpsb
inc
jne
out
or
and
aad
fildll
xlat
jbe
js
aaa
or
cli
stc
shrb
xchg
and
and
out
sti
mov
push
and
or
aaa
stc
je
shll
scas
mov
aas
mov
push
push
das
adcb
or
fistl
mov
add
into
dec
lds
adc
sahf
mov
int
or
in
int3
insl
scas
shlb
je
lods
sbb
leave
sti
mov
mov
call
jne
mov
push
cmp
mov
sbb
inc
cmp
int3
xor
cmp
mov
mov
inc
bound
outsl
cmp
mov
fwait
add
xchg
jmp
aas
jb
popf
push
roll
std
ds
adc
test
push
push
repnz
xchg
loope
femms
adcb
scas
xlat
adc
je
inc
xchg
sub
and
xor
fimuls
pop
sbb
mov
fbld
xlat
shrl
sub
mov
adcl
leave
mov
stos
pop
lds
aam
inc
add
out
xchg
or
std
mov
sub
and
add
mov
pop
das
stc
pop
cmp
fisubrl
daa
shlb
cld
mov
clc
or
repnz
pop
div
mov
pop
sbb
out
mov
das
adc
mov
and
in
pop
imul
push
leave
inc
movsl
ret
mov
xchg
pop
in
sub
lret
mov
sbb
fistl
out
dec
dec
in
mov
shr
insl
aam
inc
mov
and
dec
or
add
cs
in
mov
aad
sbb
lods
rorb
mov
lods
push
sub
xchg
mov
pop
es
mov
dec
nop
push
inc
add
lret
pushf
pop
dec
push
jae
in
jg
sub
loope
into
sub
in
test
push
inc
sub
dec
arpl
das
out
add
sub
lret
xor
dec
ljmp
roll
out
les
decb
ror
in
jae
in
in
outsl
add
push
lods
mov
in
xchg
int
cmpsb
mov
inc
mov
and
jg
js
ja
mov
data16
inc
int3
inc
loop
test
icebp
xchg
clc
dec
mov
adc
arpl
cmpsl
pop
imul
or
mulb
push
cmpb
mov
cmp
inc
inc
cmp
shlb
fcomps
pop
mov
mov
sub
xchg
data16
rcl
mov
push
jecxz
cltd
inc
inc
mov
sbbl
dec
lods
xchg
jl
out
sbb
imul
cmpl
int3
or
push
add
inc
xchg
jle
xchg
or
sub
imul
add
adc
imul
adc
call
mov
shlb
push
inc
sub
ffree
arpl
lock
xchg
jp
pushf
xor
push
cli
mov
outsb
xor
dec
cmpl
lcall
xchg
subb
mov
dec
or
cmp
sub
xchg
pop
adc
and
gs
xor
adc
mov
inc
xor
sub
xor
sub
mov
mov
inc
inc
jg
adc
fcmovb
out
scas
adc
push
mov
adc
jae
stos
cmp
sub
push
bound
shll
lods
andb
out
rcrb
int3
fucomp
mov
inc
es
lods
mov
outsb
pop
cmp
das
adc
jle
push
or
in
mov
inc
pop
inc
mov
dec
dec
outsl
lahf
cmc
mov
cmp
push
int3
lcall
leave
fisubrl
out
mov
mov
xchg
bswap
scas
inc
nop
repz
adc
inc
inc
cmpsl
mov
add
loope
push
add
in
cmp
arpl
pop
popa
ror
js
xor
mov
sbb
xchg
mov
scas
xor
and
inc
xchg
aam
sbb
dec
jmp
and
xchg
shlb
mov
stos
loope
lcall
ds
or
sbb
jae
lock
movsl
mov
sub
mov
and
adc
pop
movsl
movsb
sbb
icebp
jnp
push
movb
sub
arpl
dec
insl
mov
scas
xchg
out
out
icebp
outsl
or
push
in
push
out
ret
lret
xchg
jae
nop
cwtl
cli
dec
call
or
cld
sbb
roll
mov
xchg
adc
add
jecxz
ficoms
movsl
popf
ret
and
push
xor
stc
jge
inc
push
jge
sbb
mov
arpl
daa
sub
jbe
push
data16
mov
and
cltd
xor
lret
test
pop
inc
imul
icebp
pop
lahf
inc
push
mov
push
test
jl
dec
popa
in
cmp
pop
xchg
inc
in
mov
mov
xchg
pop
cmp
mov
sub
insb
or
jbe
inc
cmpsl
sub
scas
aas
xchg
push
enter
dec
jl
call
orl
cmp
xchg
cltd
inc
mov
xchg
xchg
sbb
xchg
ret
loop
cmp
iret
mov
rclb
dec
add
movsb
and
popf
addl
popf
push
icebp
push
aaa
out
jle
xchg
je
and
jno
cmp
daa
inc
xor
xchg
lds
jp
pop
xor
push
jae
stos
pop
pushf
popf
lret
out
dec
int3
std
add
fld
test
aas
loop
pop
push
out
xchg
pop
ljmp
data16
outsl
lock
xchg
sub
test
orb
xchg
pusha
pop
rolb
xor
push
sbb
adc
pop
inc
lock
sub
pop
sarl
mov
push
test
push
pop
or
pushf
addr16
out
pop
mov
push
ljmp
ret
adc
out
rcrl
jo
push
inc
dec
movsb
pop
inc
fsubs
mov
pushf
adc
out
imulb
push
leave
jp
push
mov
and
xchg
inc
out
pop
and
jbe
inc
fwait
jg
mull
jb
jge
lahf
sti
cld
inc
xor
pop
popf
lret
sub
pop
int
aad
decl
push
jg
xchg
mov
jecxz
cmpsl
daa
jl
inc
mov
jle
lea
icebp
pop
xchg
addr16
or
xchg
ljmp
sub
aam
sbb
xchg
cmpsl
mov
dec
call
sahf
loop
push
jmp
cmp
cltd
cmp
pop
imul
and
adc
iret
add
or
ret
pusha
or
pop
xlat
mov
roll
mov
sbb
cmp
adc
out
aam
pop
out
movsb
lahf
cltd
shr
jbe
ror
add
cmp
mov
imul
cmp
sub
add
jbe
xchg
push
adc
enter
push
mov
int3
lret
mov
cmpsl
cli
xlat
push
ljmp
xchg
push
cmp
xchg
push
out
mov
push
lcall
icebp
ljmp
aaa
jnp
mov
xchg
bound
xchg
add
cwtl
cmpsb
fcoms
in
pop
aas
xchg
test
mov
stos
mov
push
jge
lea
dec
sbb
cmpsb
lds
ret
dec
sub
xor
popf
xlat
pop
and
mov
into
fwait
xor
cmp
sbb
sub
add
rcll
orl
cmp
icebp
rol
je
pop
mov
mov
movsb
dec
dec
pop
push
cmp
xchg
scas
sub
shll
inc
lea
movl
test
xor
adc
fsubrl
adc
add
fnstenv
push
xchg
dec
adc
testb
xor
fwait
add
push
pop
push
mov
out
scas
mov
jmp
repnz
xchg
mov
jle
aaa
stc
in
aad
mov
xchg
fcoml
fcoms
movsb
ret
jg
adc
lock
fmull
mov
or
stos
push
repz
inc
xchg
pop
gs
mov
les
movsb
adc
das
pusha
sub
inc
leave
das
std
dec
fs
andb
test
push
bound
nop
xor
popa
pop
pop
imul
jmp
movsl
repz
mov
xchg
pop
imul
out
adc
leave
sbb
leave
sbb
ja
xor
jg
push
outsb
fdivl
je
aas
push
sbb
xlat
push
mov
mov
mov
les
mov
rclb
xor
jne
fwait
aad
in
and
daa
push
inc
ja,pt
mov
daa
add
mov
or
insl
aam
imul
test
gs
adc
jae,pn
jb
lds
lds
lret
je
test
xor
mov
ficoml
add
push
xor
int
mov
pop
mov
cli
orb
mov
and
popa
pop
lods
loop
inc
mov
pop
divl
lods
scas
lret
xor
out
mov
in
divl
dec
cmp
push
aad
shlb
insb
mov
push
lcall
cmc
cmp
call
cld
fbld
cli
outsl
adc
cli
gs
addr16
sbb
rorb
pushf
mov
jmp
andb
fsubrs
xchg
push
xchg
shlb
push
repz
test
fcmovnbe
std
ret
pop
daa
call
orb
pop
adc
push
jge
push
leave
jmp
in
je
add
sub
mov
hlt
mov
pop
pop
pop
add
mov
push
lcall
in
jbe
jle
imul
mov
mov
pop
pop
cmc
add
dec
inc
dec
xchg
or
je
xor
and
lods
insl
clc
shll
adc
jnp
stc
pop
inc
int3
ret
sub
cmp
pusha
sbb
fnstcw
insl
ret
bound
or
xlat
sahf
and
xor
pop
lock
cmc
outsb
inc
ficoms
call
pusha
scas
lret
pop
je
xorl
les
in
adc
xchg
xor
clc
loopne
sbb
xchg
add
cmpsl
add
push
push
in
lret
push
xchg
fwait
adc
cs
out
les
mov
popa
jnp
add
jg
and
insb
idivb
cmpsl
or
inc
test
jmp
fsubl
sti
fldenv
repz
dec
push
repz
inc
aad
xchg
int
push
jno
aas
and
out
dec
pop
inc
mov
pop
push
jmp
arpl
mov
mov
lds
jp
mov
fldcw
dec
inc
popf
push
out
int3
mov
add
mov
shrl
imul
jnp
lret
jbe
mov
rorb
mov
mov
cs
test
sti
pop
cmp
ds
xchg
repz
mov
sbb
and
xchg
movsl
loop
outsb
popa
push
in
inc
ja
ret
int3
aas
pop
cmp
loopne
enter
dec
xchg
pop
add
imul
inc
call
mov
ds
aad
jno
fs
push
jb
pop
jecxz
jno
or
pop
scas
or
imulb
adc
sub
inc
sbb
in
mov
in
fucomp
add
shlb
jp
fbld
inc
sbb
pushf
mov
or
add
pop
lcall
pop
subb
lock
mov
xchg
shl
sahf
adc
aaa
ljmp
push
inc
sahf
pop
jecxz
addr16
add
cmpsl
insb
cs
push
inc
mov
fwait
test
test
sub
mov
outsb
mov
mov
pop
or
jg
sbb
inc
icebp
push
push
sub
push
jnp
outsb
aaa
cltd
cmpsb
cmpsb
jne
mov
lret
fisubrs
or
leave
xchg
arpl
addr16
stc
imul
adc
addb
jmp
or
jg
rorb
sub
fldl
adc
mov
addr16
clc
ja
inc
andl
stc
mov
inc
jg
sti
dec
fs
xor
and
pop
imul
cmp
insb
cltd
ja
mov
cmp
iret
fwait
cmp
nop
pop
mov
mov
inc
gs
sar
push
repz
add
mov
mov
xlat
xchg
push
cmp
mov
cmp
sub
stos
in
scas
sub
loope
pop
js
cmp
mov
mov
nop
cmp
scas
rol
lds
dec
mov
sbb
test
xlat
rolb
jmp
pusha
cli
dec
repnz
xor
jl
or
outsl
or
or
lds
call
jp
icebp
and
lcall
sahf
and
or
movsb
movsb
rcll
lods
ja
shrl
scas
lcall
push
imul
jnp
or
outsl
rcrl
mov
mov
pop
sbb
sti
loop
fstpl
in
pop
fldl
xlat
pushf
test
repz
dec
push
add
arpl
sub
or
lods
das
or
push
insb
jno
or
jbe
cmp
mov
xchg
jne
nopl
add
and
adc
roll
je
pop
cmp
sarb
mov
mov
push
push
in
jno
cmpb
movsb
out
and
jp
int
xchg
dec
das
enter
into
int
dec
ret
jnp
repnz
mov
jnp
mov
loope
push
mov
and
lret
dec
notb
fcomp
xor
cmp
push
lods
shl
cs
std
add
xor
mov
and
sbb
leave
imul
jns
fsubs
mov
jg
adc
xor
xor
mov
fadds
jmp
jne
xchg
out
lahf
incl
sbb
mov
xor
or
jbe
in
subl
rcrl
repz
sti
into
pop
dec
push
push
or
dec
das
ss
mov
jg
inc
pop
test
subl
dec
pop
lahf
insb
jo
insb
arpl
adc
push
fdivrl
cmp
xchg
psrlw
jno
incl
and
pop
stc
cmpsb
mov
fsubrl
in
stos
fmuls
mov
testl
or
es
push
push
sbb
decl
icebp
cmp
in
fstpt
out
mov
sbb
cli
enter
jb
insb
adc
jb
inc
in
nop
inc
or
fnstsw
dec
jp
in
push
jg
inc
mov
mov
jnp
mov
repz
sbb
js
mov
out
and
adc
and
hlt
push
mov
adc
sbb
pusha
scas
sub
cmpsl
rolb
ret
aas
jge
add
xchg
and
pusha
daa
add
imul
inc
dec
xor
int
mov
push
enter
cmp
sbb
data16
hlt
test
adc
cli
lods
xchg
lret
or
int3
stos
arpl
and
mov
pop
adc
ljmp
arpl
loope
addr16
jp
fidivs
and
pop
fsubs
inc
in
sbb
icebp
or
lods
mov
mov
sti
sub
jg
pop
fisttpll
jecxz
subl
lahf
cmpsb
aam
int
cwtl
fsub
push
jnp
loop
adc
cld
bound
aas
jg
inc
shlb
jns
mov
add
sub
mov
add
sub
int3
xchg
sub
pushf
mov
imul
mov
pop
in
loop
test
ret
dec
or
sub
outsb
dec
inc
xchg
inc
mov
jb
lods
stos
sbb
aaa
scas
inc
dec
mov
inc
leave
xchg
mov
mov
popa
jg
leave
pop
jne
into
xor
pop
push
shrb
out
cwtl
sbb
mov
lods
sub
or
xchg
dec
and
mov
leave
subl
sub
movsb
xlat
mov
pop
bound
mov
pushf
lret
xchg
lods
js
jnp
loop
addb
push
in
push
sbb
jmp
ds
and
repnz
pop
mov
icebp
lods
xchg
xlat
arpl
movsl
shll
pop
xor
gs
or
and
jecxz
lret
xor
xor
nop
cli
cmp
mov
xlat
insb
adc
cmpb
inc
inc
rorb
sbb
shlb
pop
scas
mov
xor
aad
lds
and
testb
mov
lahf
push
fimull
sarl
mov
lcall
xchg
pop
inc
and
xchg
fnstenv
xchg
rcll
adc
and
sub
fcmovnu
das
out
jne
dec
add
mov
leave
cld
cld
sub
insl
mov
inc
stc
add
cmp
sti
nop
inc
cmp
pop
loopne
add
pop
jns
and
test
std
int
inc
pushf
jne
pop
scas
cld
jle
sbb
test
jbe
les
rcrl
cwtl
lods
cmp
mov
int
cltd
or
push
dec
loopew
jl,pn
and
add
addb
ljmp
lret
jnp
idivl
mov
stos
mov
or
inc
jnp
imul
mov
cmp
xchg
or
add
mov
cmp
incb
call
movsb
movsb
lcall
clc
fs
cli
popf
pusha
sub
hlt
in
mov
test
movsb
ror
and
pusha
mov
pop
cmc
add
cmpsl
sub
xor
rol
iret
das
xor
ret
lret
xchg
mov
lcall
mov
rorx
loope
push
adc
stos
cld
sub
in
in
or
xchg
mov
add
test
cmpsl
sbb
jp
in
test
mov
test
icebp
mov
pusha
lea
cmpl
bound
mov
dec
stc
repz
mov
aaa
lea
mov
out
shl
xchg
test
inc
rclb
xchg
jle
outsb
xchg
xor
cmp
mov
sub
loop
or
and
adc
mov
push
mov
xchg
sbb
mov
add
add
aaa
icebp
filds
sti
stos
orb
scas
sbb
cmp
test
int
aaa
sub
orl
insb
jmp
call
insl
jnp
lods
sbb
repnz
mov
mov
xor
add
sub
mov
insb
sub
ficomps
fsub
jl
dec
mov
vpaddsw
dec
mov
mov
mov
push
lea
dec
lret
addl
lods
or
jns
out
cwtl
movb
xchg
jmp
ljmp
sahf
jmp
js
pushf
cmc
adc
shlb
bound
loop
dec
xchg
cmp
and
and
insb
cmc
cli
ret
das
xor
xchg
loopne
xchg
sub
pop
lds
out
dec
test
scas
pusha
aam
in
int
test
mov
pop
es
inc
pop
les
ret
pop
enter
adc
lret
fimuls
jo
ja
inc
popl
enter
fldenv
imul
in
cs
fstpl
dec
and
adc
push
fbstp
adc
pusha
pusha
cmp
xchg
int
cmp
ja
movsb
int
xor
nop
mov
je
or
push
pop
jnp
add
lea
fiadds
inc
push
sub
cmc
mov
xchg
pop
dec
push
idivl
cmpsl
jnp
jno
idivb
mov
add
xor
es
test
sbb
or
iret
enter
subb
paddb
add
icebp
loope
sbb
push
dec
mov
sub
jne
or
push
xor
push
daa
lcall
mov
jecxz
sbb
xor
lock
jns
mov
push
inc
adc
scas
in
sbb
lea
sub
dec
sbb
mov
daa
pop
push
in
sub
inc
mov
aaa
ljmp
lods
popf
ja
imul
and
test
xchg
in
pop
aaa
test
adc
jno
int3
xchg
xor
xchg
cmp
imulb
pop
nop
sbbb
frstor
std
mov
fldenv
add
mov
aas
push
dec
xchg
fisttps
lahf
fldcw
lea
bsr
cmpsb
and
arpl
outsl
sbb
jle
push
cmpsb
cmp
adc
jnp
mov
orb
mull
xor
xor
fisttps
jo
pushl
pop
sbb
mov
sub
pop
and
fwait
inc
movsl
hlt
push
lea
mov
into
stos
lea
jb
aas
mov
sarb
je
pop
pop
mov
and
mov
push
xchg
imul
loop
add
fsubl
mov
xor
cmp
shll
mov
mov
cmpsl
out
sbb
pop
stc
pop
pop
mov
sbb
xchg
decb
pushf
dec
ljmp
out
dec
push
mov
dec
call
or
adc
or
push
pop
push
pop
shld
push
in
andb
and
jo
dec
jne
push
mov
addr16
push
mov
outsl
fmuls
bound
dec
icebp
bound
cmp
push
popa
cmp
adc
mov
pop
cld
xchg
call
push
mov
popl
sub
cmp
push
xor
cmp
stos
mov
cs
pop
shr
fsubs
dec
sbb
adc
mov
xlat
add
inc
pop
loope
and
xchg
fidivrs
pop
xor
leave
dec
in
ss
bound
push
sbb
xchg
mov
fisubrs
lods
mov
jle
xchg
add
mov
mov
dec
cs
in
js
mov
icebp
mov
cmp
xchg
xchg
int3
cmp
cmp
hlt
adc
mov
dec
pop
enter
subb
cmp
jle
sub
inc
into
test
jmp
push
decb
cmp
mov
ret
xor
popf
xor
adc
xchg
cli
xor
insb
stos
shll
xor
mov
sub
xor
inc
pop
xchg
push
pusha
lea
scas
pop
or
fs
jl
sbb
mov
aaa
and
cli
pop
aaa
and
pop
call
add
ja
adc
sahf
xchg
jmp
outsl
fcompl
test
lahf
xchg
adc
out
pop
outsl
out
ljmp
outsl
adc
push
movsl
sub
aam
xchg
sahf
es
pop
mov
in
push
push
add
jmp
pop
in
mov
cmp
daa
aas
cli
cmp
loopne
imul
pushl
test
push
jge
lret
outsb
out
paddq
ret
mov
push
fimull
aam
stc
cmp
fwait
push
in
mul
je
mov
mov
cmpsb
and
mov
aas
movsb
pop
xor
punpckhdq
cmpsl
xor
int
push
mov
movsb
sub
fbstp
mov
pop
jae
adc
fstpl
mov
sub
orb
test
scas
dec
dec
xchg
aad
aaa
enter
bound
in
clc
pop
sbb
dec
sub
cwtl
out
scas
mov
les
fdivl
mov
fs
mov
roll
inc
push
fabs
lea
aaa
loope
sub
push
sbb
jg
jmp
xor
lret
and
cwtl
xor
sarb
fmul
xchg
popa
test
sbb
pop
and
xlat
sub
aaa
fsubl
sub
mov
fs
dec
frstor
mov
jle
lods
pop
shl
test
jecxz
les
fcmovnb
mov
fsubrs
repz
ficomps
popf
aad
dec
mov
imul
lahf
stos
sbb
test
enter
mov
adc
loope
fldenv
pop
das
sti
adc
sahf
sti
dec
jge
jg
push
dec
cmp
aas
stc
jle
adc
mov
xchg
mov
jp
cmc
mov
scas
mov
cmp
stc
nop
cmp
shrl
mov
mov
mov
stos
stc
sbb
mov
mov
push
les
fimuls
popa
outsb
ret
out
testb
shr
repnz
aad
out
mov
pop
in
fsubr
rolb
pusha
mov
xchg
mov
test
pop
mov
call
sub
adc
pop
cmp
nop
iret
pop
inc
pop
dec
rcrb
rcll
pop
loope
push
dec
leave
outsb
add
cltd
sub
lods
mov
or
mov
test
test
outsb
insl
in
aam
and
inc
cld
sub
rol
repz
mov
out
pop
cmp
sti
and
mov
push
pop
adc
lret
inc
daa
pop
and
jnp
lahf
mov
cmp
mov
js
push
sub
lock
xchg
sub
xchg
mov
pop
sti
sbb
fistl
and
ds
sti
mov
sbb
add
movsb
mov
iret
push
add
mov
loopne
cmp
inc
outsb
les
jmp
scas
inc
dec
mov
xchg
imul
and
inc
or
call
dec
or
xor
pop
neg
cmp
pop
ret
out
inc
pop
adc
popa
mov
sbb
mov
mov
repz
lods
xchg
sub
cmp
xor
cmp
mov
mov
mov
ja
test
lret
xorl
pop
dec
pop
nop
dec
lea
roll
jle
push
stos
push
push
ret
cli
popf
add
dec
mov
fldenv
enter
xlat
dec
pop
xchg
nop
popf
sbb
pop
mov
sbb
test
mov
aaa
mov
js
xor
sbb
lahf
push
in
mov
add
push
mov
aam
sub
and
loop
cli
xchg
mov
das
ret
loopne
and
dec
push
cwtl
popf
cmc
das
jmp
and
mov
push
cli
pop
test
dec
ja
insb
lahf
jne
push
or
ret
fcmovb
dec
in
dec
sahf
or
icebp
jo
int
gs
mov
sbb
sahf
fstl
xchg
xchg
jge
add
xchg
test
fcmovnbe
ret
out
out
or
dec
sbb
sbb
fs
rcrb
dec
cltd
stos
xor
inc
cmp
cmp
ficoms
add
pop
insl
jae
sub
lahf
cwtl
jge
clc
out
inc
int
mov
xchg
push
xor
enter
test
cmp
inc
push
or
stc
fdivrs
mov
popa
fwait
pop
adc
ljmp
or
jns
insl
scas
jns
inc
push
nop
test
stos
das
cltd
fcmovnu
fcoms
lods
pop
movsb
shr
clc
dec
iret
arpl
add
inc
sbb
push
pop
clc
in
xor
mov
dec
scas
xchg
loope
out
push
dec
sbb
arpl
jb
lods
mov
mov
or
xchg
pop
mov
pop
fucom
mov
xor
test
lretw
inc
enter
sbb
bound
pushf
insb
push
stc
xchg
mov
push
pop
cmpsl
iret
cwtl
sub
in
fwait
rclb
sbb
dec
or
gs
test
out
push
push
mov
enter
and
out
or
lods
jge
mov
xor
in
sub
fldl2e
push
push
adc
cld
mov
dec
cmpsb
call
push
daa
loope
test
jg
mov
xchg
push
std
pop
das
in
stos
add
aad
pop
sbb
das
xor
sbbl
pop
scas
testb
arpl
xor
cmc
mov
out
ret
or
fisubrl
cmp
xchg
adc
lods
loope
jo
iret
push
lock
hlt
imul
mov
repnz
adc
frstor
in
dec
xchg
sahf
test
sub
ss
mov
mov
jl
loope
fidivl
int
cmp
sbb
mov
or
pop
xorb
add
and
mov
mov
ret
and
mov
jnp
cli
adc
sahf
dec
mov
xlat
dec
mov
dec
add
cmc
hlt
pop
xor
push
inc
in
push
fmulp
in
and
addr16
cli
ljmp
ss
in
ljmp
jg
mov
jno
sarl
das
pop
mov
mov
or
mov
and
sbb
or
xchg
jmp
leave
adc
cltd
cmc
dec
std
adc
into
fs
in
out
sbb
sti
outsl
aad
insl
daa
mov
and
das
out
xchg
xchg
cmp
int3
pop
cmc
lea
aam
dec
push
inc
aas
jle
push
mov
test
imul
daa
sbb
outsl
ja
mov
insl
fstps
int3
pop
xchg
and
pop
push
or
mov
cmp
call
mov
popa
popa
mov
lcall
lret
lea
in
in
rclb
shll
jae
xor
stos
out
add
lods
popa
xchg
shrb
div
cmp
add
xorl
mov
jae
bnd
or
lds
pusha
push
sbbl
cmpsb
adc
push
jns
in
out
sbb
fdivl
cltd
pop
dec
push
add
lahf
das
mov
mov
ret
cmp
mov
push
dec
mov
push
lcall
ja
ret
cli
xor
sub
test
pop
nop
sbbb
sahf
inc
test
test
push
sbb
xor
and
mov
js
push
mov
insb
mov
lock
sbb
cltd
nop
fstpt
frstor
sub
loope
mov
leave
test
inc
test
movsb
movsb
xchg
jae
lahf
lods
aas
sbb
cmp
jecxz
pop
aaa
xor
fldcw
mov
xor
push
push
mov
and
dec
decb
outsl
xor
mov
fdivrs
mov
gs
ljmp
pop
xchg
adc
inc
or
stc
push
mov
lret
js
mov
movsb
pusha
xchg
and
mov
sub
in
pop
adc
js
iret
or
sbb
push
jo
dec
mov
test
jns
push
lea
jge
dec
loope
mov
xchg
ljmp
js
movb
hlt
es
movsl
jge
jmp
stos
jge
inc
nop
stc
xlat
loope
adc
aas
add
mov
inc
outsl
andl
lods
cld
dec
data16
xor
loope
hlt
adc
leave
mov
es
or
loopne
andl
in
adc
push
test
ljmp
xchg
in
ret
add
push
xchg
xchg
lret
xor
inc
add
pop
xchg
fwait
push
ss
pusha
loopne
pop
sarl
pop
sti
scas
mov
dec
adc
add
jb
out
dec
stc
ficomps
pop
pop
insl
mov
dec
ljmp
and
mov
cmpsl
std
lds
xor
mov
push
adc
aam
fstpt
dec
movsb
sbb
js
jp
jge
inc
pop
lahf
inc
pop
and
or
sub
decl
mov
ret
xchg
mov
mov
insl
outsb
pushf
pop
jns
adc
inc
lock
adc
outsl
mov
aad
and
jns
mov
sub
repz
test
mov
ds
mov
fsubp
addr16
pushf
push
sub
mov
adc
sub
enter
lds
into
in
xchg
add
jae
cmpsl
jmp
outsb
imul
cmc
adc
sbb
pop
ja
jecxz
adc
mov
test
cmp
jmp
ds
imul
outsb
les
subl
lret
mov
fldcw
test
push
mov
add
mov
sub
dec
mov
test
jnp
lcall
popa
push
fnsave
and
sub
push
cmp
cmpb
repnz
cs
push
push
aas
lret
sbb
xor
mov
andl
push
ret
xchg
push
out
stos
rolb
insb
or
daa
or
jecxz
nop
and
fldt
sub
imulb
mov
jmp
jo
mov
call
xor
inc
mov
sbb
outsb
mov
cld
inc
mov
xchg
pop
cmpsb
sti
gs
or
inc
jmp
scas
lods
mov
jnp
xchg
cmpsl
lds
jne
addr16
cmpsl
xorb
pavgw
notl
xchg
xchg
cwtl
jns
mov
cmp
stos
adcb
xor
jo
sub
icebp
lock
loopne
jmp
inc
lcall
add
jno
jne
xor
out
mov
pop
cmp
jg
sbb
int
mov
sbb
mov
ficomps
cmc
push
or
enter
push
add
insl
ss
rdmsr
rcrb
imul
in
pop
ret
decb
push
push
in
lods
sub
xlat
dec
inc
and
fiadds
cli
arpl
fdivrp
insl
inc
sbb
push
or
push
cmpsb
xlat
and
dec
jg
int
adc
and
pop
pop
jb
inc
pop
push
rorl
shl
mov
adc
into
and
stc
sahf
lcall
dec
scas
in
xchg
xchg
faddp
stos
test
xor
mov
pop
xchg
in
add
adc
mov
icebp
std
cltd
push
mov
stos
mov
dec
jp
adc
pop
mov
inc
dec
xchg
cmpsb
mov
loopne
mov
test
or
add
repz
mov
push
pop
scas
inc
jns
das
adcl
pop
cli
popf
push
icebp
adc
push
sbb
es
rcll
imul
mov
das
pop
andl
mov
pop
pop
call
mov
shll
push
fwait
scas
or
je
and
pop
xchg
xor
adc
add
mov
sbb
jno
gs
sbb
add
das
sub
mov
push
and
dec
rcrb
push
mov
fwait
dec
or
add
out
xor
xchg
cmc
jne
pop
mov
jmp
pop
push
mov
mov
mov
scas
xor
mov
stos
subb
lcall
insl
test
mov
jg
imul
sbbl
std
add
scas
fwait
rolb
mov
pop
cli
jbe
bound
gs
and
ljmp
inc
jnp
mov
sbb
inc
jp
imul
lods
dec
xchg
cwtl
pop
vpsrlw
push
shlb
xchg
dec
add
jge
jecxz
clc
idivb
push
xchg
jecxz
fld
inc
cmp
int
sti
xchg
imul
and
and
xor
movsl
inc
add
mov
add
mov
es
das
pop
xchg
or
stc
ss
shll
rcll
xor
inc
mov
xchg
test
pop
pop
jns
push
inc
movsl
ret
pop
jmp
sti
cmp
push
cli
sbb
aaa
shr
lret
stc
sbb
jge
push
lea
imulb
sarb
jno
mov
mov
icebp
push
xor
icebp
loopne
shrb
ljmp
jo
mov
lret
aad
shlb
arpl
dec
cld
lds
bound
int
cmpsb
adc
xchg
pop
adc
scas
mov
push
add
stos
imul
idivb
pop
cmp
movsb
ss
lret
adc
add
inc
cmpsl
negb
outsb
jl
fidivl
lret
xor
push
cltd
aam
pop
movsl
ret
jmp
sar
jecxz
mov
and
mov
call
iret
dec
pop
push
pop
and
sbb
add
lds
in
mov
adc
push
lds
pop
and
xor
les
pop
inc
and
lret
mov
fiaddl
mov
stos
mov
sub
pop
xor
jp
testb
aad
aam
js
xor
in
add
xchg
divb
bound
rol
mov
inc
stos
or
push
call
mov
aam
cwtl
jg
lock
inc
jmp
fwait
xchg
loopne
push
dec
lret
scas
sub
jmp
inc
je
xchg
cmpsl
adc
nop
cmpsb
pop
cmp
test
pusha
dec
mov
iret
sbb
mov
pusha
ss
sahf
pusha
scas
inc
mov
pop
daa
cmp
out
sbb
decb
les
repz
cmp
sub
jmp
jmp
mov
pop
test
xchg
pop
jno
out
push
aad
aaa
jmp
xchg
mov
push
dec
jg
sbb
jmp
jbe
sti
pop
xchg
popf
lret
test
in
daa
cltd
pop
arpl
popa
mov
sbb
push
jno
imul
mov
mov
mov
add
data16
jno
add
mov
jmp
std
es
xchg
ret
mov
inc
sbb
fimuls
scas
adc
inc
out
add
or
ffree
jnp
xchg
pop
imul
in
stc
imul
jg
fcompl
push
mov
pop
and
push
shrl
fists
pusha
push
lds
push
xchg
ja
adc
xor
nop
test
mov
lods
movsl
aam
add
dec
ss
addr16
jns
movsb
cmp
pushf
mov
cmp
ja
inc
and
mov
dec
jbe
mov
inc
into
test
mov
xchg
rolb
pusha
gs
xchg
subl
fstp
fwait
pop
or
pop
xchg
adc
dec
ss
adc
add
adc
mov
cmp
fwait
scas
inc
js
xchg
cmp
push
movsl
loop
stos
dec
mov
testb
inc
out
xchg
lea
sub
xor
dec
xlat
fsts
jb
jmp
mov
inc
sub
shrb
int
pop
mov
push
incb
ret
mov
mov
fxch
popa
dec
je
push
inc
pusha
dec
les
xchg
jo
int
popf
enter
icebp
adc
dec
dec
cmp
pushf
std
sbb
fnstenv
dec
mov
fiaddl
dec
mov
or
andb
in
pop
sub
dec
and
mov
push
fsin
xchg
orl
icebp
sub
and
sub
jnp
cmpsl
or
dec
or
es
cmp
sub
cwtl
sub
push
sbb
push
xchg
pop
lea
jae
and
sub
fs
mov
dec
divb
mov
rclb
inc
cmpsl
sbb
outsb
push
xchg
lahf
ljmp
dec
mov
add
std
ds
mov
jle
mov
std
lahf
into
cmp
ret
in
pop
aad
repnz
loope
add
inc
pushf
jge
sti
je
xorl
jp
out
loopne
in
xchg
dec
daa
out
cmp
and
pop
into
jns
xlat
jecxz
push
inc
es
lret
sub
dec
inc
test
in
pop
in
pop
sub
jno
mov
cmp
add
cltd
repnz
test
pop
xchg
push
in
push
inc
dec
jns
notl
fldcw
dec
sub
xchg
dec
pop
cmpsl
scas
xor
cmc
enter
adc
mov
out
dec
rorl
xchg
fsubl
in
ret
ja
xor
cs
pop
pop
mov
in
add
add
jge
ret
sti
fnstcw
stos
push
mov
movsb
dec
jae
sti
mov
ja
addr16
sub
mov
adc
movsl
mov
pushf
pop
mov
add
jp
jae
lods
lret
add
pop
pop
or
test
adc
pop
gs
cmp
int
out
shl
iret
cmp
mov
cmp
fwait
mov
sub
mov
ret
mov
stc
push
ds
outsl
mov
sbb
aad
xlat
jge
cmpsb
or
outsb
cmp
rcrl
cmp
xor
sahf
gs
sub
loop
add
cmc
sti
adc
or
cld
dec
xor
xchg
movsl
repz
bound
in
mov
bound
mov
cmpsb
sub
or
arpl
cwtl
rcr
inc
sub
mov
and
jl
mov
test
stc
push
inc
adc
push
aad
std
or
insb
jns
rcrb
jae
push
sub
std
jmp
in
ja
ss
sub
movsl
test
cs
add
flds
mov
mov
into
mov
cmp
loopne
xlat
out
jne
out
or
fiaddl
mov
inc
push
jp
add
cmp
loop
or
jns
mov
jb
iretw
loop
std
pop
pop
lds
lcall
inc
pop
push
mov
cwtl
pushf
ja
inc
adc
jmp
es
cld
or
sub
into
mov
mov
xchg
pop
pop
mov
inc
sbb
stc
lret
sbb
dec
inc
sbb
loop
aas
pop
dec
loop
pop
pusha
pop
mov
lret
aad
ljmp
sub
rol
fmull
mov
xchg
inc
mov
xchg
rorl
in
sbb
lods
sarl
fadds
mov
cltd
cs
lea
adc
dec
or
jne
and
mov
pop
or
jb
push
in
mov
outsb
mov
mov
inc
imul
cld
pop
call
dec
pop
shlb
scas
dec
pop
push
cltd
mov
push
xchg
xor
out
cli
outsl
andl
push
cmc
push
dec
sar
push
mov
cmp
test
jnp
inc
add
aad
aas
arpl
sahf
in
scas
dec
jo
cmp
push
in
push
cltd
cltd
mov
out
inc
lods
mov
outsl
sbb
inc
push
jb
sbb
push
out
repnz
push
xor
in
push
frstor
shrb
jecxz
push
add
mov
movsl
push
mov
aaa
aad
mov
sub
aas
jmp
inc
andb
add
arpl
out
sbb
hlt
xor
mov
sub
jbe
push
lods
cmp
ja
outsl
cld
ja
call
cs
fdivrl
or
mov
stc
movsb
add
inc
inc
fiadds
push
push
movsb
out
jle
aas
add
ljmp
xor
jmp
xor
push
into
xorb
jecxz
cwtl
aam
lds
mov
and
call
pop
pop
and
xchg
iret
pop
dec
movsb
inc
and
xorl
jne
and
xor
and
xchg
filds
movsb
adc
sbb
imul
adc
sti
sub
mov
jnp
pop
sbb
xor
push
push
sub
ret
sbb
loop
mov
jns
jnp
cmp
push
mov
jno
xor
cmp
xlat
es
nop
repz
push
mov
mov
repnz
sbb
pop
mov
scas
cmp
pop
les
mov
and
lret
and
mov
push
cmp
sahf
fsts
cmc
add
mov
out
dec
cmc
outsl
jnp
adc
enter
pop
inc
iret
dec
int3
lods
ss
mov
movsl
cli
or
lret
dec
es
push
mov
mov
stos
and
adc
in
pop
fstpt
xor
mov
mov
sbb
or
jae
pop
jle
sarl
movl
gs
and
mov
sub
fcoms
aad
ljmp
mov
shrb
pop
sub
jne
dec
mov
sbb
dec
dec
daa
stos
ds
sub
mov
and
pop
sub
loope
addr16
mov
mov
test
outsb
gs
jno
or
sbb
ss
fs
add
xor
mov
aad
push
xor
jge
push
jne
sub
aas
lcall
popa
out
popa
mov
imul
pop
xchg
push
mov
ljmp
aaa
inc
ja
xorl
int
pop
mov
js
or
mov
aaa
or
shrb
push
jne
push
adc
cmp
aaa
mov
push
mov
and
roll
icebp
cs
pop
js
push
mov
fwait
stc
dec
adc
mov
sbb
inc
sub
stc
or
xchg
aam
imul
les
adc
lods
ds
pusha
or
das
nop
pushf
cmp
test
das
fldt
jmp
add
mov
imul
andl
mov
and
adc
test
in
out
cmc
in
lods
test
addr16
lods
call
fistps
stc
imul
cld
outsl
mov
mov
pushf
add
lock
push
sbb
jp
das
mov
inc
sti
icebp
ja
dec
cmc
dec
pop
cwtl
pop
in
xor
jl
flds
lea
inc
test
daa
or
insb
jo
cmp
dec
lds
mov
mov
push
add
mov
push
mov
mov
ds
mov
sbbl
push
bound
gs
mov
test
cld
arpl
fwait
pop
sub
pop
imul
fstpt
pop
cli
je
sub
mov
addl
js
sarl
push
stc
sbb
cmp
cltd
sub
jns
xor
sahf
xchg
pop
out
mov
xchg
sti
xchg
adc
dec
cmp
xchg
outsb
mov
idivb
jmp
lret
int
push
pop
mov
dec
mov
pop
mov
mov
and
sarb
lahf
scas
fldt
cmp
sahf
or
rcrb
inc
out
insb
aam
or
out
shrl
dec
fucomp
jg
mov
adc
sbb
add
pop
das
js
mov
pop
sub
call
movsl
mov
sti
dec
mov
sbbl
add
sbb
xor
mov
into
add
mov
rcrl
ss
hlt
jb
scas
ljmp
out
aam
mov
mov
xor
pushf
and
rol
popf
cmp
daa
movsb
inc
stos
pop
popf
jecxz
jl
movsb
xor
test
push
lods
aaa
xor
repnz
jmp
mov
outsl
cmp
fisubrl
ljmp
xchg
pop
das
sbb
sbb
mov
sbb
push
dec
mov
cmpsb
data16
cmp
and
or
mov
test
mov
xchg
inc
jle
xchg
fdivs
or
and
lock
xchg
push
enter
xchg
int
int
mov
orb
and
jp
fdivrp
aaa
push
fists
dec
ds
outsb
mov
mov
push
jle
pop
testl
xor
xchg
xchg
inc
or
jnp
test
push
pop
imul
in
aas
in
stos
jmp
push
outsl
pop
ret
sub
jecxz
sbb
fidivrs
push
cmpsb
je
jbe
adc
sar
mov
dec
fistps
pop
data16
jle
push
movsl
add
add
inc
cli
mov
jb
out
in
or
and
mov
jae
ffree
dec
add
xchg
cmc
inc
cwtl
fldt
adc
push
xchg
push
arpl
aaa
std
bound
pop
xor
cwtl
pop
xchg
lcall
jl
repz
cltd
std
or
enter
xchg
pop
pop
and
inc
arpl
cld
push
cmp
or
push
bound
js
testl
jmp
pop
pop
add
mov
mov
push
inc
jmp
out
or
into
andb
push
jae
popf
xor
add
mov
hlt
mov
adc
and
pushf
in
cmp
in
arpl
hlt
movsl
mov
dec
lret
xor
stos
push
sub
pop
pop
mov
push
fdivrl
popf
fisubs
jbe
xchg
je
mov
mov
or
mov
pop
movsl
ret
sub
cld
ja
add
sbb
mov
pop
push
stc
sahf
xchg
rcll
push
inc
lea
pushf
rorb
xchg
push
bound
jne
jp
jle
aad
adc
pop
sub
cmpsl
sub
cmp
sbb
aad
dec
fincstp
push
xor
dec
fidivs
inc
pop
jg
mov
vsqrtps
pop
mov
dec
or
and
ret
lahf
xchg
xlat
dec
jb
pop
mov
sub
inc
add
sbb
in
scas
clc
stc
xor
push
mov
push
dec
sbb
jmp
xor
lcall
lahf
fstps
or
pop
inc
call
lcall
sbb
jae
push
cmp
in
xor
test
pushf
cli
rorb
sub
xchg
cltd
fsts
ljmp
sbb
cmpsl
sub
sub
cmp
outsb
fadds
outsl
mov
add
mov
xlat
sahf
out
cmp
xchg
mov
push
mov
mov
mov
ja
mov
push
roll
jns
fwait
cmp
scas
sub
outsb
js
jp,pn
sbb
sbb
mov
roll
loopne
pop
andl
inc
adc
cmpsb
insl
test
add
data16
xlat
jns
lods
mov
rcrb
jns
jae
sub
test
add
cmp
pop
pushf
pop
dec
mov
jl
mov
sub
jnp
adc
outsl
lahf
push
test
fwait
inc
int3
repz
cmp
pop
hlt
lods
gs
ja
xchg
sti
insl
es
and
sub
jbe
cwtl
and
sub
js
sub
ficompl
inc
mov
or
jle
test
hlt
leave
cmp
cli
xor
sub
in
sub
inc
xor
pop
inc
shld
push
jle
sub
ds
sub
bound
xor
aam
sub
pop
adc
push
mov
or
inc
repz
movsl
push
sub
lret
jno
mov
mov
pandn
inc
les
into
jl
inc
lea
inc
xor
jl
xchg
mov
sub
test
jnp
jno
stos
inc
mov
add
ds
xor
mov
fimuls
inc
adc
in
pop
mov
int
clc
scas
cltd
imul
test
hlt
mov
mov
aaa
out
mov
fdivrl
enter
icebp
dec
test
push
scas
aaa
aam
and
es
jo
sub
in
fbld
outsb
adc
and
pushf
mov
cmp
push
jbe
pop
lcall
lahf
and
mov
jecxz
xchg
lods
sarb
pop
mov
test
or
fisubrl
lea
pop
test
dec
hlt
in
cmpsl
jecxz
jp
test
outsl
xchg
hlt
xor
jmp
pop
push
divl
or
mov
jle
pusha
dec
adc
imul
icebp
cmp
xchg
fnstcw
lcall
daa
stos
fldenv
les
cmp
jl
in
add
xor
into
out
ljmp
pop
ret
mov
lods
adc
daa
out
or
xor
jge
fnstsw
cli
mov
push
mov
mov
js
mov
out
adc
fadd
enter
jecxz
ds
inc
fnstcw
punpckhdq
mov
sbb
in
mov
xchg
fistps
mov
out
inc
out
adc
loopne
adc
jo
push
xchg
addr16
daa
jmp
jp
jmp
or
push
dec
in
dec
push
movsl
clc
cmpsl
jg
push
outsb
in
add
aas
jb
cwtl
push
sub
add
int3
pop
cmp
insl
mov
out
mov
aas
mov
add
push
ljmp
jg
movl
imul
icebp
adcb
mov
mov
dec
lahf
inc
incl
sbb
mov
pop
in
cmpsl
icebp
iret
add
ror
frstor
jbe
pop
pushf
mov
pop
mov
pop
xor
test
xchg
loope
jb
shr
outsb
cs
mov
push
or
out
daa
pushaw
lahf
out
in
sub
lds
mov
pop
idivl
mov
cs
out
xchg
shl
mov
jo
nop
mov
and
xchg
and
lock
cmp
scas
in
daa
int3
cs
cmp
cmp
in
mov
mov
clc
sbb
jecxz
and
popf
push
inc
xor
pop
jnp
fs
lret
loopne
fbstp
xchg
inc
in
or
roll
xchg
inc
add
insb
push
lds
stos
mov
pop
out
inc
enter
call
mov
scas
inc
jle
adc
rcl
xor
mov
mov
pop
cltd
xchg
push
push
jmp
or
and
push
mov
or
pop
xchg
dec
sahf
mov
sti
pop
xor
pop
pusha
xlat
mov
mov
sti
xchg
and
and
sbb
mov
push
fiaddl
outsl
add
repz
scas
sub
lods
ret
inc
das
xorb
cwtl
inc
dec
jecxz
loope
shrb
std
mov
sub
xor
pop
pop
aam
mov
push
pop
and
add
mov
gs
and
jg
xchg
sbb
pop
xor
jbe
or
xchg
mov
xor
int3
jno
int3
jecxz
test
sub
dec
adc
or
outsl
inc
sub
add
lahf
jge
sub
push
in
push
aas
adc
pop
jae
push
inc
call
push
cs
leave
mov
cmpsb
and
sub
push
arpl
sub
mov
jle
pushf
out
add
aad
push
xor
inc
add
xor
xchg
in
rcll
and
push
jg
and
xchg
mov
iret
in
mov
test
ret
idivb
aam
xor
clc
sbb
mov
insl
jb
test
mov
mov
sbb
and
rcl
sahf
lods
add
jg
das
lcall
cmpsl
fs
xor
lcall
adc
movsb
dec
adc
outsl
lea
or
dec
imul
das
inc
scas
fisttps
cwtl
pop
cltd
push
stos
add
sbb
or
xlat
xor
aam
cmpsb
xchg
jecxz
adc
mov
fistps
mov
bound
sbb
addb
js
push
xchg
insl
mov
aas
sbb
loopne
adc
dec
les
inc
pop
pop
fs
jno
int3
gs
jnp
mov
xor
cli
cmp
mov
es
je
lret
sbb
shl
xor
pop
mov
repz
in
ljmp
or
out
dec
xor
stos
repz
mov
lock
fsubs
shll
outsb
fcoml
xor
lcall
rcrl
mov
sbb
add
adc
loope
lcall
fwait
jmp
mov
add
icebp
loopne
setnp
xchg
inc
adc
sub
xor
and
xchg
xchg
sub
in
test
xchg
xchg
push
push
xchg
adc
das
negb
insb
lea
dec
mov
jecxz
push
loopne
push
xchg
sub
scas
pop
sbb
pushf
jmp
inc
add
pop
shll
mov
test
fistpl
inc
in
sarb
movsb
cmp
mov
fs
sbb
sbb
push
xchg
cli
mov
adc
jo
xor
test
scas
sti
fisubs
add
lret
aam
mov
loopne
orl
push
js
imul
inc
inc
add
jnp
imul
in
clc
in
mov
insl
inc
inc
mov
out
shrl
bnd
mov
add
inc
pop
insb
dec
adcb
pop
pop
outsl
inc
aam
adc
movsb
pop
hlt
xchg
cmc
pushl
cmp
sbb
out
push
jne
repnz
mov
lods
jae
in
jno
addr16
sbb
pop
dec
out
cmc
xchg
push
xchg
sbb
cmpb
and
adc
sub
push
jb
addr16
xor
sbb
mov
pop
cmp
mov
rorl
insb
xchg
push
sub
cmpsl
pop
stos
xchg
test
mov
jo
mov
cmp
or
call
mov
xchg
popf
dec
push
push
in
adc
and
xor
shrb
sub
negb
jnp
jl
inc
pusha
mov
mov
xor
inc
inc
movsb
clc
out
leave
or
scas
hlt
lret
mulb
push
dec
xor
daa
adc
mov
ljmp
cmpl
in
push
lea
jecxz
lods
test
cmp
sbb
hlt
pop
jmp
mov
movsl
cld
mov
adc
addr16
and
leave
mov
jle
sarb
outsb
outsb
fbld
aad
xchg
rorb
push
inc
cmp
divb
lock
inc
cmp
cld
insb
loope
jle
ljmp
cmp
es
cmp
push
lods
out
stos
nop
lock
mov
xor
test
test
push
and
jge
mov
and
scas
cli
adc
dec
aas
lock
sub
adc
lods
in
sahf
loop
jno
sub
popf
aas
std
in
out
fcom
lods
jne
xor
loope
fwait
test
mov
push
arpl
mov
jmp
fldt
xor
dec
dec
jne
mov
xor
jb
push
in
cmp
push
sbbl
ficompl
mov
sub
ret
fstpt
xor
push
xor
testl
cmc
loope
cmp
jns
push
dec
sub
mov
data16
and
dec
add
arpl
adc
mov
in
stc
icebp
mov
dec
subl
add
sbb
inc
sbb
imul
in
mov
jo
mov
xor
es
mov
mov
jno
jmp
js
pop
adc
scas
test
in
pop
pop
movsb
shll
or
jl
xchg
jmp
insl
or
sti
call
xor
outsl
add
out
mov
push
ficompl
stc
std
into
or
ljmp
and
add
ret
jge
pop
pop
pop
out
xorl
aam
sub
or
push
cmpl
pop
inc
mov
cwtl
insl
inc
or
adcl
mov
mov
jmp
lar
fwait
jle
ret
xlat
clc
mov
and
iret
jmp
enter
dec
sub
inc
stc
mov
sbb
aad
or
push
test
outsb
inc
and
ja
shrl
lea
mov
mov
dec
stos
or
lods
mov
test
sbb
cltd
jl
sahf
je
jae
jne
pop
scas
mov
jne
xor
dec
sub
dec
and
mov
mov
aad
add
cmp
sar
das
pop
in
int3
lcall
ljmp
je
xor
xchg
lds
repnz
mov
or
mov
les
dec
js
adc
icebp
fidivrl
out
jo
stos
xchg
ret
mov
addr16
mov
repnz
hlt
jecxz
arpl
mov
mov
sbb
in
pop
cltd
neg
pushf
orb
xlat
repz
mov
push
test
push
xor
jnp
shll
sarb
hlt
xchg
scas
jb
sbb
pop
test
dec
les
sti
jnp
jecxz
and
subb
fwait
or
scas
inc
mov
push
out
cmp
popf
mov
adc
xchg
je
subl
dec
popa
ds
sbb
lods
mov
fwait
test
daa
les
cmp
dec
sub
repnz
js
mov
loopne
sub
bound
fimuls
ss
aas
movsl
and
push
aas
testb
cmpsl
pop
hlt
mov
push
cmp
pop
out
push
push
push
jae
adc
addr16
sti
lea
push
fwait
leave
mov
in
jmp
sub
adc
dec
in
mov
mov
les
push
shll
dec
inc
in
push
arpl
icebp
push
jle
mov
push
xchg
gs
mov
aam
imul
inc
dec
pop
jle
add
adc
enter
outsb
test
bound
adc
lods
add
xchg
or
movsb
adc
in
fadds
lcall
pop
pop
dec
loop
ljmp
xor
xchg
mov
xchg
and
adc
dec
cs
xchg
fcomip
sbb
sti
push
mov
pop
xor
cltd
gs
mov
jnp
out
jmp
shrl
scas
and
sbb
lods
ds
fbstp
ficoms
xor
cmp
lods
icebp
jl
mov
movsb
insb
stos
xchg
add
pusha
mov
pop
sub
push
hlt
jne
stos
sarb
or
pop
decb
push
cmc
pop
pusha
data16
mov
jb
fdivrl
std
enter
inc
cmc
mov
jbe
jbe
enter
loop
arpl
addb
fs
mov
push
cli
fdivs
incb
push
in
cs
popfw
pop
call
inc
inc
add
jl
mov
pop
loop
dec
cmp
int3
adc
fwait
loop
movsb
xorl
jns
xchg
int3
cmp
xchg
mov
popa
movsb
insl
mov
mov
sti
andb
in
in
pop
pop
adc
dec
out
jnp
cmpsb
stc
popa
int
cld
inc
cmp
outsl
xlat
fiadds
mov
push
lcall
or
mov
cs
rclb
pop
mov
arpl
push
adc
push
movsl
jg
cld
or
jle
pop
push
cltd
dec
jne
gs
inc
jo
popf
mov
sub
cmove
cmp
out
loope
insb
rcrb
mov
sti
test
movsl
hlt
in
inc
mov
or
and
in
pop
sbbl
cmpsb
sub
pusha
leave
sub
stos
out
cld
popf
int3
pushf
pop
push
push
lock
repz
hlt
adcl
mov
pcmpgtd
outsb
aaa
sub
add
jp
jp
add
mov
sub
add
jge
insb
shl
ss
mov
mov
hlt
icebp
imul
and
mov
mov
mov
out
adc
lods
and
fstpt
pop
jo
subl
or
loop
ret
jle
popa
and
or
mov
loop
mov
popa
mov
mov
xchg
bound
xchg
or
and
hlt
mov
enter
ret
pop
sub
loopne
mov
sbb
or
pop
and
lahf
in
xchg
lahf
imul
rolb
jp
cld
pop
test
xchg
inc
fsubrs
rorb
pop
cmp
cmp
mov
dec
mov
cmp
iret
pop
xor
sub
es
push
mov
jle
adc
jmp
inc
loop
add
inc
daa
iret
out
test
iret
scas
xor
inc
sti
lods
lock
dec
roll
aas
jp
in
pop
test
fsubrl
mov
mov
orl
inc
jne
repnz
cmpsl
sbb
pop
jb
and
pusha
mov
add
add
stos
mov
dec
sti
mov
adc
or
test
and
loopne
xchg
out
pop
aas
insb
sahf
pop
sub
and
iret
push
xchg
xchg
addr16
ret
js
rolb
int
clc
mov
pop
pop
das
loop
xor
add
inc
push
mov
cmp
lock
xchg
jecxz
jnp
fwait
push
push
incb
lcall
jne
sahf
shlb
fucomi
push
xchg
clc
loope
sub
mov
arpl
clc
pop
sar
sbb
call
stc
push
repnz
pop
sbb
xchg
inc
movsb
std
xor
in
and
push
test
ja
repz
inc
push
dec
add
sub
shrb
in
mov
and
je
ss
movsb
divps
adc
xchg
push
in
dec
mov
and
jnp
push
pop
insb
lods
out
push
arpl
xchg
jns
cli
push
aad
cwtl
lds
cmp
push
shrl
rol
push
mov
lahf
dec
out
dec
and
scas
xor
cmpsb
and
dec
push
sti
inc
dec
ret
lock
testb
lahf
fwait
push
push
cmpsb
or
fisubrs
pop
xchg
es
push
mov
das
jle
movsb
push
mov
xchg
popa
out
jb,pn
sbb
std
cmp
imul
cmp
nop
jne
jmp
xor
je,pn
sub
fnstsw
int3
lret
test
inc
loop
mov
jbe
inc
push
outsb
daa
scas
icebp
inc
fxtract
nop
mov
xchg
mov
dec
or
and
mov
sti
push
outsl
or
ret
or
mov
loope
pop
insb
push
inc
ret
jbe
mov
aas
mov
pop
nop
stos
dec
xchg
fistpll
push
lea
decl
insl
mov
mov
out
mov
stos
out
loop
push
dec
stos
inc
inc
cli
les
sbb
mov
scas
or
test
mov
std
fists
nop
sub
cwtl
fildl
and
pop
adc
leave
fnstsw
xlat
in
sbb
fdivs
inc
and
lret
test
pop
mov
aas
jg
out
lret
lods
jb
pop
dec
sbb
add
pop
mov
jecxz
and
inc
jo
lods
dec
add
pop
pop
lock
jns
adcl
mov
lret
outsl
add
in
test
fcmove
iret
je
outsb
mov
cli
inc
jnp
lret
push
lds
hlt
jg
inc
mov
pop
ss
in
add
or
sbb
sahf
jp
je
cmp
loopne
sub
addr16
xor
push
js
enter
out
shll
xchg
and
lcall
lcall
mov
ljmp
pop
sub
cmp
in
das
repz
int
xchg
int
sub
daa
clc
mov
pusha
jge
loop
push
adc
mov
xchg
aaa
xchg
dec
jl
and
mov
mov
inc
popa
loopne
mov
add
inc
cmp
leave
push
mov
cltd
bound
stc
mov
into
iret
repz
test
out
insl
in
mov
sti
adc
xchg
arpl
stos
mov
push
das
int
mov
out
jne
lods
stc
pop
roll
push
and
dec
jle
sbb
repz
into
lahf
sbb
mov
popf
push
fwait
enter
lret
aad
cmpl
jge
daa
push
nop
add
shlb
mov
aam
cmc
mov
xchg
loop
inc
aaa
fldcw
sub
mov
int
ret
push
or
xchg
sbb
adc
or
cmp
testl
or
movsl
or
mov
jnp
fbstp
or
xor
and
es
shrl
movsl
sbb
insl
sub
loop
push
std
outsl
inc
clc
sub
mov
out
ja
mov
xor
in
in
mov
jno
mov
xchg
dec
lret
jl
xchg
icebp
push
xchg
mov
ss
js
call
scas
fdivrs
adc
xchg
xor
popf
inc
dec
add
das
das
stos
push
cmp
fdivrs
mov
pop
cmpsb
jp
cmp
stos
inc
push
cs
loop
push
ja
outsl
scas
rorb
imul
jp
xchg
test
clc
jo
sbb
test
rclb
dec
fs
sbb
je
out
adc
stos
and
mov
cmpsl
sbb
cmp
aaa
adc
push
lock
sbb
add
repz
enter
inc
push
jae
sahf
cltd
jbe
xchg
call
jmp
mov
inc
cmp
mov
test
enter
adc
pushf
outsl
sarb
cmp
add
scas
mov
fimuls
xchg
fistpl
jle
punpckhbw
mov
and
pop
sbb
andb
add
cmp
enter
aas
ds
sub
clc
lahf
outsb
inc
insb
pop
push
insb
ds
add
addr16
push
push
out
imul
outsl
aam
jns
xchg
push
jle
mov
nop
pop
pop
test
adc
xor
adc
aaa
arpl
icebp
xor
pop
add
push
mov
es
push
lahf
imul
pop
push
lock
loop
test
xor
and
pop
outsl
xor
out
mov
sub
in
cmpsb
rep
sub
in
xor
push
pop
aad
xchg
sbb
fadds
lock
jnp
inc
sub
imull
dec
xchg
mov
iret
pop
push
mov
out
addr16
add
and
jnp
or
pop
out
push
adc
xor
mov
push
sbb
mov
jnp
imul
out
loop
in
and
pushf
leave
push
add
or
inc
adc
out
scas
pusha
fildll
or
sub
mov
mov
bound
in
clc
std
lahf
mov
fcompl
ret
xchg
fnstenv
jo
fwait
cmp
mov
out
or
mov
cmp
imulb
xchg
clc
lcall
cli
nop
fnstcw
loopne
mov
push
inc
xor
mov
icebp
ds
jb
jne
mov
or
cmp
out
incl
mov
or
inc
xor
fmul
loopne
sbb
fisubs
add
push
or
andb
push
mov
daa
cmc
insl
mov
push
inc
sbb
divl
or
mov
test
leave
pop
js
js
jmp
push
shlb
stc
or
jne
cmovs
mov
mov
cld
loopne
cmp
jge
incl
divl
dec
pusha
push
dec
jecxz
xorb
cwtl
or
movsb
xor
outsl
xor
int3
mov
cmp
jae
add
into
out
push
in
pop
push
pop
mov
mov
cmpsb
aas
insb
cmp
add
mov
fwait
loopne
mov
xchg
and
loopne
mov
push
aas
pop
push
sarb
mov
fs
fwait
sub
nop
add
pop
cli
lea
jp
lods
jge
outsl
mov
add
lahf
in
cmp
sub
into
pop
xchg
add
push
clc
das
lods
es
push
enter
push
int3
push
testb
add
cmpsb
xchg
clc
test
add
cmp
lods
mov
pop
or
mov
roll
ljmp
jno
mov
call
xchg
das
pushf
sub
aad
test
jle
cld
js
icebp
cmc
call
sbb
lds
icebp
mov
rorb
imul
int
cli
mul
test
stos
int3
xchg
les
loope
xchg
shl
dec
cmp
imul
mov
add
mov
push
lret
mov
inc
ret
lds
dec
jl
cli
cmp
pop
arpl
and
jp
mov
jecxz
cmp
sub
fwait
jge,pn
mov
pushl
push
xor
jp
mov
arpl
aad
pop
imulb
dec
fdivrp
jno
cmp
lahf
dec
xchg
push
insl
leave
sub
push
sarb
mov
mov
push
aas
dec
pop
fbld
stos
lret
pushf
aam
inc
sbb
ret
add
adc
inc
inc
cltd
ja
push
xor
rcrb
sub
stc
stos
cmp
adc
mov
iret
mov
xor
mov
push
arpl
or
aas
sub
imul
cmpsl
lret
mov
sub
popf
sbb
push
xchg
repz
jge
cmpsb
push
jp
fisttpll
xor
mov
xor
add
adc
sbb
enter
mov
and
call
pop
lock
sub
in
push
adc
or
push
stos
aas
jge
mov
mov
repnz
mov
mov
cmp
jmp
loope
add
and
push
mov
sbb
pop
jno
mov
sub
fwait
mov
pop
das
inc
popa
inc
xlat
add
add
dec
push
mov
sub
iret
lret
mov
gs
jns
addr16
cmp
cmc
mov
movsl
sub
jecxz
les
aad
push
push
sti
pop
sbb
jb
mov
insl
int
dec
inc
lret
or
test
mov
enter
cmp
sbb
repnz
push
sbb
mov
pop
jbe
mov
add
mov
push
cmpsb
lds
sub
hlt
add
xchg
clc
cmpsb
daa
and
xor
cld
push
cltd
and
dec
ret
popf
mov
jae
mov
and
xchg
cmp
pmaxub
jae
or
jo
mov
cltd
inc
addr16
mov
test
data16
addr16
cmp
pusha
dec
rorb
in
mov
daa
dec
push
xorl
jae
or
out
inc
inc
jae
addr16
inc
in
mov
xchg
aaa
xor
call
mov
lods
imul
in
popf
fistl
pop
addr16
jmp
sbb
pop
test
jo
jge
insl
jle
scas
addr16
jmp
mov
pop
insl
daa
fdivrs
ja
aam
gs
ja
and
in
ss
dec
cld
aas
ds
pop
cmpsl
push
lea
fdiv
cmpl
mov
ja
ja
jl
pop
mov
jmp
inc
std
inc
daa
mov
scas
jnp
sbb
cmpsl
adc
repnz
push
push
test
jge
mov
sub
sbb
dec
das
test
loopne
adc
adc
push
leave
mov
jbe
das
lea
mov
add
aaa
add
push
xor
xchg
add
push
movsl
pop
adc
lock
mov
mov
sbb
shlb
ret
mov
sbb
cmpsb
popf
cmc
sbb
push
mov
clc
outsb
aas
jns
jns
call
fabs
mov
cmpsb
cmpsl
pop
inc
mov
test
or
fcmovb
call
imul
dec
or
and
inc
lret
addr16
xchg
add
fmul
add
in
test
pop
mov
leave
and
sub
dec
je
inc
or
iret
mov
pop
addr16
in
subl
inc
ss
iret
mov
jns
jle
stos
out
fcoms
lods
inc
dec
cmpsl
out
mov
mov
inc
mov
fnstenv
xchg
in
out
scas
or
mov
and
fcoml
push
push
and
dec
xchg
or
inc
jno
mov
cwtl
mov
daa
jmp
add
test
dec
out
push
cltd
stos
and
push
loop
xchg
in
add
jne
scas
jge
jne
xor
hlt
dec
mov
xchg
fwait
mov
mov
push
jle
cmp
fld
js
mov
sar
xchg
mov
std
cmpsb
add
dec
mov
outsl
add
movsl
notb
push
jge
mov
jae
xor
jo
and
pop
test
lea
jo
cmpsl
adc
pop
inc
or
fisubrl
mov
inc
das
sbbb
es
mov
jne
xchg
xor
xchg
cmp
sahf
sub
ljmp
cld
mov
push
cmp
insb
add
inc
sahf
mov
ss
sbb
subl
sbb
xor
sub
add
jmp
rorb
pop
movsl
pop
popf
movsl
inc
sub
mov
out
test
or
arpl
movsb
jo
jb
in
popf
fdivr
loope
xor
hlt
ds
dec
bound
aam
xor
mov
loop
push
pop
mov
mov
daa
testb
jp
jo
sbb
xor
scas
cltd
sbb
movsl
jbe
dec
outsb
movsb
sub
loop
cmpsl
gs
or
pop
je
and
leave
call
pusha
out
adc
mov
in
test
cmpsb
pop
pushf
cmpsl
mov
aaa
dec
xor
popf
fsubrl
sbb
gs
in
gs
outsl
in
jle
jo
gs
jecxz
xor
push
aaa
jp
insb
mov
movsb
push
pop
mov
dec
xchg
cmpsb
ljmp
or
jb
and
or
sahf
dec
ss
shl
mov
dec
cmp
lahf
fcmovb
test
out
dec
repz
test
ljmp
fnstsw
or
icebp
and
in
pop
mov
fmull
fs
mov
add
xorl
ret
sahf
sub
fimuls
dec
jecxz
sub
inc
ja
pop
jns
out
push
aad
xlat
jge
bound
pop
lahf
roll
mov
int
repnz
ds
stos
cmpb
icebp
ds
adc
mov
rcrl
enter
dec
adc
xor
sti
outsl
fldt
xchg
scas
cmc
jns
inc
dec
cmpsl
push
inc
mov
insl
lods
test
sbb
pop
dec
mov
pusha
add
xor
call
sub
inc
xchg
mov
ljmp
sbb
mov
xor
orb
jmp
lods
adc
mov
repnz
ja
add
jo
clc
jns
in
or
jnp
push
ss
xlat
fcompl
sarb
add
fcomp
sbb
or
aad
xchg
imul
add
test
sti
cmp
aad
cmc
push
inc
out
pop
mov
dec
pop
mov
push
sbb
stos
test
push
pop
fsubrl
push
fstl
in
jg
popf
ss
pandn
sub
sub
push
fwait
pop
jno
and
push
lods
cmpl
das
fbld
jg
pop
popa
rclb
adc
adcb
dec
decb
and
rcrl
cmpsb
cli
xor
fdiv
bound
cmp
pop
ds
dec
adc
outsl
pop
shll
cmp
sub
sub
mov
sbb
rcrb
sti
dec
jmp
mov
mov
jb
push
push
or
mov
push
add
xor
leave
fimull
xlat
inc
scas
dec
push
mov
pop
pop
int3
sub
ss
enter
cltd
push
mov
stos
adc
lahf
add
inc
push
sub
lret
imul
js
push
push
fxch
dec
sub
test
lock
cmp
cmpl
faddl
fimuls
je
inc
rclb
xor
pop
lahf
movsl
pop
lahf
stos
lea
jge
ret
sub
mov
jg
lea
pop
jle
inc
fnsave
in
das
call
adc
fimull
xchg
add
inc
jge
imul
sbb
mov
aam
jmp
xlat
loop
inc
mov
sub
outsb
pop
in
add
cli
sbb
xchg
pop
lret
jns
lret
xchg
adc
inc
pop
outsl
loopne
sbb
add
or
adc
fisubs
into
aad
loopne
movsb
ds
sbb
nop
or
les
mov
xor
lahf
inc
in
xor
mov
xchg
jmp
mov
jmp
sarl
xchg
andl
dec
dec
sbbb
mov
mov
popf
stos
call
mov
mov
push
or
push
sahf
sub
mov
sbb
inc
movsl
andl
sub
push
out
mov
popa
out
dec
add
sbb
mov
dec
sbb
or
add
fistl
or
dec
js
nop
ret
cmp
movsb
int3
jnp
jmp
jle
or
loope
movsb
pop
shll
mov
mov
scas
and
lcall
or
or
xchg
xchg
loopne
or
mov
mov
xlat
pop
xlat
cmp
les
cmp
cli
push
dec
pop
mov
sub
push
dec
ss
testl
fadds
cmpsl
in
div
fldz
fcmovne
add
js
cmc
pushl
je
aad
sub
ret
pop
push
and
inc
pop
xor
stc
or
repz
test
mov
addr16
jnp
pop
push
adc
add
push
inc
or
pop
pop
add
pop
call
std
lock
fsubrl
movsb
jg
out
sub
add
divb
lret
iret
stos
mov
inc
push
lea
jl
xchg
imul
pop
rclb
notl
sub
xchg
mov
in
mov
or
js
jge
mov
js
cmp
or
xor
inc
sub
lods
or
imul
inc
outsb
popa
jecxz
rcrb
lods
push
call
xchg
push
pop
mov
mov
push
or
mov
les
aaa
stos
jns
mov
add
imul
lahf
sbb
out
loopne
test
inc
inc
push
fcomi
mov
test
jne
movb
pop
cli
ret
dec
shrb
ret
pop
enter
add
outsl
push
jnp
sti
lds
inc
cs
rol
cmp
cmp
sysenter
jecxz
dec
pop
push
int3
jbe
loopne
jmp
fnsave
movsb
jmp
jns
jl
or
fisubrl
jns
sbb
insl
jnp
inc
mov
aad
mov
mov
data16
dec
adc
mov
jae
mov
jg
dec
inc
ret
jnp
inc
mov
aaa
sbb
cmp
adc
jo
setl
jle
adc
push
scas
add
dec
jns,pt
stos
jbe
outsl
fildll
testb
loop
je
xchg
or
das
jp
xchg
data16
lds
dec
std
mov
imul
push
and
gs
in
inc
sub
add
iret
orb
inc
std
cmc
shr
outsb
test
lock
jmp
lods
jbe
and
xor
xor
inc
jge
mov
addl
xor
inc
jno
jo
pop
out
lock
scas
aas
outsb
in
jecxz
mov
inc
or
sti
cltd
xchg
jbe
sarb
jnp
std
mov
popa
mov
lcall
sbb
dec
sbb
std
outsb
and
adc
or
inc
outsl
or
jno
shll
cld
hlt
out
scas
or
sbb
pop
out
fimuls
cmp
add
xor
push
mov
fstpl
lea
repz
lock
mov
mov
adc
or
push
push
jae
xor
fwait
enter
push
lahf
inc
push
popa
cmp
jo
mov
les
in
mov
inc
aas
jle
sar
cld
in
or
push
lret
inc
call
xchg
and
das
aad
mov
fwait
and
icebp
inc
test
aaa
dec
mov
mov
insl
add
loop
nop
pushf
mov
jl
pop
lock
aam
add
push
stc
orb
pop
sarb
jge
push
xchg
sbb
negl
sub
mov
sbb
imul
sahf
mov
jecxz
test
pop
push
sub
pushf
pop
jmp
mov
push
push
mov
dec
push
into
push
push
aaa
sti
jne
rcrb
jl
jae
and
dec
xchg
mov
inc
sub
jae
in
lods
xchg
push
outsb
or
test
cld
sarb
jae
adc
sub
lea
add
mov
das
mov
test
ss
sub
dec
test
push
sub
xchg
addr16
xchg
imul
or
sub
sub
rcrb
mov
pop
in
enter
lea
jnp
cwtl
and
fwait
jnp
or
dec
into
sub
fcmovbe
jecxz
inc
dec
xor
mov
es
fstps
das
cmc
mov
push
xlat
adc
jl
dec
dec
mov
jp
js
pop
movsb
mov
xchg
jmp
nop
push
in
jns
dec
cwtl
and
pop
add
pop
lods
pop
daa
test
icebp
xor
loop
pop
inc
bound
out
imul
testl
xor
imul
leave
inc
push
jmp
mov
pop
xchg
push
add
jp
movsb
xchg
jo
popf
inc
inc
or
xchg
into
dec
push
hlt
push
push
push
les
xchg
mov
xchg
pop
popaw
or
jl
jno
add
mov
jp
sub
sti
xor
push
les
jb
repnz
int
test
dec
dec
dec
push
divb
push
scas
sbb
add
sbb
pop
dec
lret
pop
scas
popf
test
push
mov
int3
dec
pushl
lcall
test
pop
out
dec
add
ja
adc
dec
jge
imul
loopne
push
cmp
js
xchg
inc
cltd
push
cmp
inc
mov
push
push
inc
mov
imul
movsl
idivb
popa
sti
aad
adc
sub
adc
xchg
or
cmp
es
xchg
cs
in
pushf
dec
push
lods
jbe
dec
mov
test
cli
xor
xor
pop
mov
sbb
or
dec
add
mov
lods
xchg
or
or
cs
pop
stos
je
lods
pop
loop
jae
add
push
sub
mov
cltd
fiaddl
mov
dec
movsb
shlb
inc
xchg
push
cli
mov
jle
xchg
fistpll
mov
in
pop
sbb
fcoml
push
notb
clc
inc
fsubrl
fsubs
mov
dec
xor
lods
jnp
orl
in
xchg
loope
mov
dec
push
nop
in
lock
inc
xor
add
push
loop
lret
sti
xor
lods
sub
negb
call
xchg
rcr
in
push
repz
xor
and
mov
movsl
sub
ljmp
and
cmp
mov
xchg
and
rorl
cmp
mov
mov
lock
cmp
popa
mov
jg
ret
sub
gs
and
subb
jl
mov
add
mov
popa
and
cmpsb
and
iret
add
aad
ss
leave
mov
sbb
pop
xor
lods
inc
mov
insl
jmp
cld
ficomps
sti
test
jmp
divps
adc
nop
or
sub
aaa
push
out
shrb
scas
je
mov
cmp
or
pushf
jge
mov
push
pusha
sub
movsb
cmp
pusha
lahf
and
aad
xlat
test
repz
hlt
pusha
xchg
bound
mov
mov
hlt
pushl
fnstenv
ret
inc
jnp
jge
inc
rclb
lods
sti
push
out
jns
mov
enter
aad
dec
shll
pop
cmpsb
push
imul
push
cmp
outsb
sub
out
adc
add
ret
xchg
in
jle
add
mov
repz
adc
push
add
inc
xlat
cltd
xor
mov
aam
fcompl
fwait
je
fldenv
push
mov
push
fstl
fs
sbb
mov
add
add
jnp
pop
scas
lock
mov
push
mov
cmc
dec
in
ss
adc
jbe
std
and
jae
mov
cld
inc
imul
mov
push
popa
test
mov
xchg
inc
repnz
std
jne
dec
es
cltd
arpl
xchg
push
out
nop
std
jnp
stos
outsb
sbb
pop
incl
ja
popf
pop
cmc
mov
pop
cmpsl
hlt
mov
mov
aam
test
es
inc
mov
xor
mov
filds
mov
sbb
shll
jnp
ja
pop
test
push
leave
into
pop
xor
or
and
push
test
xor
xor
push
inc
xrelease
in
fdivl
sbb
int
fmul
jge
test
sbb
loopne
inc
cld
popa
mov
orb
ret
test
xor
cmpsl
adc
insb
ljmp
popa
in
pop
cmp
jb
aas
test
lods
jno
xchg
mov
cli
shll
out
loope
and
mov
leave
je
sbb
adc
sbb
lods
aam
jno
test
nop
in
add
inc
push
shr
test
aas
mov
out
add
xchg
popf
test
xor
leave
fcoms
and
inc
and
test
leave
mov
mov
sub
stos
mov
call
aaa
rol
mov
inc
ja
sub
sbb
data16
sbb
jecxz
adcb
lea
inc
xor
inc
jb
jno
cs
pop
outsb
ds
loopne
aam
jl
addr16
nop
rcrb
pop
lock
xchg
data16
fwait
pop
out
mov
pop
movsb
sbb
dec
sub
pushf
lock
sub
jl
or
mov
cmp
shll
stos
sbb
pop
and
xchg
pop
repnz
pop
xchg
and
add
xchg
dec
nop
cli
fs
repz
pusha
pop
fisubl
arpl
sbb
out
shlb
roll
pusha
xchg
and
mov
jge
mov
cmp
cmpsl
jo
push
testl
int3
js
into
fistpll
push
pop
inc
mov
ljmp
add
ret
nop
int3
fadds
inc
fs
cmp
add
mov
pop
iret
sbb
icebp
out
aaa
roll
or
push
sahf
pushf
xor
mov
std
cmp
cmpb
rcl
mov
cmp
or
mov
lods
xchg
mov
xchg
lods
dec
stos
les
inc
out
inc
or
xchg
gs
xchg
rclb
inc
inc
stos
shlb
xchg
push
or
adc
add
fstl
int
fdivr
es
cmp
pop
cli
and
jg
mov
xor
fdivs
js
ret
ret
fxch
inc
push
sbb
cmpsl
pop
sub
faddl
sub
mov
xor
adc
andl
ror
in
push
jle
xchg
stos
jae
in
je
inc
loop
xchg
cld
je
testl
je
fsub
out
rolb
inc
mov
mov
xchg
out
and
lret
dec
jne
dec
mov
and
mov
pusha
ret
addr16
xlat
mov
lea
mov
imul
xor
out
mov
sub
xor
aas
xor
sub
and
dec
mov
mov
or
and
mov
std
cmc
fdivs
popf
pop
int
inc
sbb
mov
loop
outsl
call
in
add
push
adc
lahf
test
add
xchg
pop
sti
jle
ljmp
insb
dec
dec
xchg
jb
cwtl
mov
dec
aam
pop
arpl
xchg
add
mov
dec
ss
mov
into
lret
out
stos
insl
mov
xchg
add
rorb
push
sub
lods
inc
push
aaa
js
sbb
loop
adc
outsl
and
dec
outsl
js
mov
cwtl
dec
pop
jmp
int
jle
mov
adc
sbb
icebp
sub
xchg
dec
in
repnz
repnz
fidivl
push
xchg
inc
xor
clc
shll
shrb
jecxz
pop
mov
push
fs
sub
movsb
lds
mov
push
js
dec
rclb
sbb
push
cmp
xchg
lcall
lds
xor
mov
loop
cld
adc
add
repnz
mov
popa
push
xchg
incl
mov
jle
aad
cmp
insb
bound
add
or
cmp
mov
in
subl
dec
fdiv
jmp
push
sbb
pop
sbbl
ror
js
adcl
loope
stos
sub
push
ljmp
outsl
leave
xor
sahf
or
dec
xor
int
pushf
pop
aam
test
jb
andl
pop
lods
xor
dec
dec
add
jl
aas
outsl
pop
movsl
sub
dec
jno
enter
jmp
arpl
or
shrb
xor
adc
sub
dec
scas
jns
xor
mul
aam
rorb
insl
sbb
lea
das
je
pop
add
fsubl
test
pop
orb
add
loope
imul
jnp
shll
cmp
dec
jb
in
shr
lds
jo
xor
sahf
or
lea
mov
mov
mov
inc
loop
pusha
out
jmp
cmp
xchg
cmp
popa
jmp
xor
stc
bswap
movl
popa
push
cmp
icebp
cltd
sub
loope
inc
xchg
inc
push
xor
pop
gs
inc
idiv
jmp
or
sub
jp
push
mov
jae
in
cmp
cmp
adc
mov
ret
outsl
mov
incb
jecxz
jbe
jl
pop
loopne
xor
push
and
std
in
dec
lcall
inc
xchg
mov
jne
les
frstpm(287
in
dec
subl
mov
cli
icebp
test
movsb
pop
lea
cld
idivl
insb
xor
mov
jl
and
lock
push
pop
push
mov
jbe
mov
mov
dec
int3
cli
lret
mov
xchg
cld
add
xor
mov
leave
jg
in
add
sub
xor
scas
sbb
fisubs
jbe
int
aad
and
add
or
xor
and
mov
data16
imul
cli
or
stos
lock
add
and
aas
daa
mov
ja
xor
out
cmp
imul
or
popf
das
cltd
divb
adc
das
adc
in
and
scas
int
mov
xchg
push
std
fiaddl
sbb
popa
push
outsb
sbb
mov
mov
xlat
push
ja
xor
sub
adc
fdivs
int
rcrb
insb
repnz
sar
int
adc
lods
fildll
rep
divl
jge
xchg
add
movsb
mov
rcrb
xor
idivb
dec
out
fucomi
jl
cld
hlt
jne
mov
lds
rorb
iret
cmpsl
dec
push
mov
add
push
adc
negb
sub
mov
lret
mov
jbe
push
sub
add
mov
mov
lret
fsubl
jecxz
mov
xor
mov
lea
sub
push
dec
sub
or
mov
inc
inc
add
sbb
mov
xchg
adc
test
jl
aad
movsl
negb
rclb
roll
push
ja
int3
inc
adc
fsubp
mov
jmp
mov
mov
insl
ja
bound
jg
out
int
sub
std
and
xchg
mov
sub
in
xchg
aad
sti
jb
daa
rcrl
fwait
js
or
pop
mov
int
cli
sbb
push
dec
fsubr
push
xchg
adcl
call
popl
pop
loope
push
and
dec
inc
das
dec
xchg
and
push
dec
ja
xchg
cld
mov
into
fstps
testl
xchg
xchg
mov
sbb
cmpsl
fmulp
stos
shlb
je
in
cltd
loopne
jp
test
mov
dec
loopne
repz
xchg
call
hlt
adc
jle
sti
es
push
data16
sub
je
inc
es
pop
test
loop
jae
adc
pop
test
push
sub
lahf
cld
rcrl
insb
pop
out
fdivrs
pop
lea
cli
fbstp
sbb
push
sbb
fsubrp
daa
out
scas
push
adc
lds
adc
push
cmp
jmp
push
out
add
push
mov
pop
dec
add
pop
adc
add
sub
outsb
mov
lret
dec
call
xchg
inc
aam
dec
mov
cld
sub
cmp
xor
mov
int
and
aas
inc
shl
cmp
stc
dec
adc
push
or
fmul
mov
adc
mov
outsl
fistpll
mov
test
push
sub
pop
cmc
push
aam
enter
adc
mov
repz
xlat
sbb
inc
push
mov
adc
std
leave
mov
cmp
inc
cmc
in
outsb
imul
cmp
test
cmc
push
dec
ret
test
inc
add
arpl
pop
jl
xchg
in
push
hlt
jp
xchg
sub
stos
jg
pushf
fs
and
enter
ficompl
push
cwtl
xlat
xchg
rolb
das
cwtl
inc
and
xchg
js
dec
mov
or
cwtl
loop
ljmp
mov
enter
add
adc
mov
data16
stc
das
adc
xchg
dec
fsubrs
into
mov
jp
out
notb
out
or
pop
ret
orl
adc
jmp
and
mov
jecxz
or
imul
sbb
mov
lcall
push
mov
shl
mov
pop
xchg
jg
test
xor
adc
xchg
mov
inc
repz
add
out
fnstcw
push
insb
add
push
jbe
test
aad
add
xchg
xchg
push
xor
fwait
ss
push
in
adc
mov
pop
sar
aas
lock
jnp
dec
inc
jle
test
push
mov
inc
jge,pt
sbb
mov
in
dec
mov
sbb
mov
cmc
push
daa
mov
xor
out
cs
pusha
popa
enter
inc
movsb
pusha
lods
push
push
push
ficoml
mov
fwait
imul
insb
in
xchg
jae
xchg
cmp
or
adc
mov
ja
mov
in
push
mov
scas
inc
sahf
adc
sbb
and
insl
out
lahf
or
or
mov
mov
inc
dec
imul
repz
push
mov
xor
mov
imul
mov
mov
divl
sahf
xchg
and
nop
dec
shll
push
sub
jne
mov
xor
sbbl
push
cmpsb
xlat
into
fucom
mov
xchg
push
dec
jmp
jbe
call
pop
add
cwtl
dec
xor
jbe
movsb
jo
mov
cmp
subl
adc
in
imul
incl
pop
lret
sarl
mov
push
xchg
mov
dec
sub
out
push
xchg
pop
cmc
and
dec
xlat
popf
notb
mov
mov
shlb
and
mov
jns
shll
shlb
shlb
jno
or
das
push
or
mov
lahf
jl
jnp
mov
or
and
adc
jno
out
jb
mov
cs
daa
ret
pop
or
xor
sub
fsubrs
repz
loopne
mov
sub
add
mov
add
push
push
mov
push
cmc
mov
pop
cmp
aam
inc
gs
aaa
pop
lahf
push
push
dec
add
jae
mov
lods
push
cmp
sbb
sbb
fdiv
push
sbb
push
push
or
jne
fdivrs
fs
cli
add
xchg
jp
cmc
adc
dec
leave
dec
shrb
inc
loop
fldl
mov
leave
sub
test
fs
pop
shl
jle
dec
and
dec
fwait
and
adc
cmp
shrb
push
push
push
pop
movsl
push
rcrl
or
jg
mov
sub
icebp
js
imul
loopne
xor
pop
fmuls
push
lods
clc
fdiv
lods
mov
mov
daa
inc
cmp
xor
mov
dec
or
dec
mov
add
push
loop
pop
sbb
sbb
lea
enter
cs
mov
and
push
mov
mov
fcoml
xchg
out
hlt
lock
sbb
xchg
test
arpl
movsb
mov
es
out
call
popa
out
and
icebp
or
test
xor
stos
inc
jo
push
icebp
test
mov
cmp
jnp
cmp
rorb
and
call
xor
dec
pop
cs
inc
repz
mov
ror
ret
mov
xchg
js
cmpsl
lods
iret
mov
cmp
rcr
jmp
stc
cltd
shrb
fstpt
rcl
xlat
cmp
mov
pop
les
push
adc
in
push
jmp
dec
sub
mov
out
je
ret
push
fldenv
dec
lea
out
cmp
push
repz
ja
ret
js
nop
outsl
call
stos
adc
jg
mov
negb
iret
shll
into
fs
dec
jecxz
pop
scas
and
jns
aas
imul
sub
xchg
adc
mov
push
sub
mov
push
cmc
pop
data16
adc
jg
test
dec
push
in
sub
lock
xchg
sub
adc
xchg
push
sbb
aaa
ja
push
mov
aad
dec
xor
xchg
aas
insl
adc
ss
js
push
leave
add
add
cmc
repz
arpl
orl
mov
inc
mov
addr16
dec
dec
cmpsl
dec
outsb
scas
popf
mov
dec
jg
out
xchg
cmp
pushf
das
jmp
push
adc
loop
or
pop
jl
pop
ja
xor
inc
test
mov
test
adc
push
sahf
and
insb
cmp
sub
test
hlt
mov
sbb
mov
xchg
inc
aam
out
sbb
pop
dec
inc
iret
test
cmp
xchg
scas
arpl
push
jns
inc
dec
push
jl
out
sub
adcl
ja
popf
mov
insb
or
push
shrb
xor
fwait
sbb
xor
mov
inc
and
cmp
dec
in
adc
out
and
loopne
xor
gs
sbb
enter
jp
repz
sti
movsb
loopne
pop
mov
sbb
inc
and
int3
pop
in
ud1
stos
lock
sbbl
cmp
add
aam
sbb
cmp
lret
pop
cmp
and
jbe
or
push
imul
mov
sub
mov
push
testl
xchg
lea
out
dec
mov
push
sbb
andb
andl
dec
aas
push
xchg
data16
jbe
hlt
mov
adc
jge
out
mov
push
repz
nop
pushf
sarl
and
sbb
mov
pop
cmp
push
xchg
cs
add
stos
mov
xchg
add
sub
lret
js
push
sbb
xchg
cmp
cmpsb
mov
gs
push
mov
gs
jo
mov
dec
lea
daa
mull
rcrb
popf
lock
pop
testl
sbb
cmp
lods
loop
cli
stos
pop
aaa
add
xchg
sub
sub
mov
add
fcmove
sub
cmovo
in
js
pop
push
or
popl
sbb
mov
int3
roll
int3
cli
inc
adc
inc
aas
mov
inc
sbb
sub
fistpl
dec
cld
int3
rorb
jg
leave
mov
jne
pop
add
jle
xchg
clc
or
int
aaa
lods
pop
or
cmpsb
xchg
sub
push
setae
and
adc
pop
or
or
adc
xchg
loop
ss
andb
loop
xor
xchg
push
sete
movsl
sbb
cmp
lock
mov
mov
pop
xchg
dec
push
divb
sbb
cmp
xor
cmp
xchg
mov
cmpsl
lds
sbb
jmp
aad
push
push
push
sub
ja
orb
xor
adc
ja
rcl
cmp
shll
movsl
dec
jmp
add
in
lods
decb
stc
aaa
push
inc
xlat
mov
and
hlt
push
mov
mulb
inc
lret
or
repz
aas
fdivrl
js
xor
add
int3
xchg
add
xchg
mov
mov
lret
mov
test
jns
popa
inc
mov
in
and
test
out
mov
inc
imul
sbbb
dec
out
subb
push
int
test
insl
in
test
xor
xchg
mov
xchg
dec
mov
jb
leave
into
add
in
push
adc
jns
jecxz
mov
and
pop
jno
mov
inc
mov
mov
mov
mov
cmp
inc
and
sbb
stos
lahf
int
scas
arpl
aas
sub
push
sub
push
cmp
mov
out
push
fsts
jp
jno
fdivr
adcl
push
add
xor
lods
pop
arpl
lret
sti
mov
fidivrs
add
mov
insb
mov
ret
sarl
les
xor
xor
pop
or
dec
pusha
inc
int
mov
stos
push
gs
fwait
pop
lods
add
iret
mov
stos
ret
jo
xchg
xor
mov
js
scas
push
clc
fisubs
mov
fsubrp
ljmp
out
ret
lods
cld
pinsrw
icebp
sbb
popa
jge
jb
fnstenv
ss
mov
call
out
stos
add
or
in
jns
sahf
mov
ret
lcall
aam
and
pusha
mov
lods
pushf
addr16
dec
pop
or
leave
or
neg
sub
cmp
cmpsb
mov
addb
dec
cmpsl
popf
mov
out
inc
hlt
mov
aas
in
push
pop
add
out
fwait
adc
mov
push
scas
pop
dec
lret
jg
orl
mov
mov
add
leave
scas
sti
pop
xchg
cmp
dec
cmp
xor
fwait
sub
jg
or
movsl
nop
in
lods
mov
pop
sub
jecxz
push
push
mov
pop
push
idiv
jmp
cmpsb
cmpsl
cmpsb
push
cmp
sbb
into
stc
nop
cs
sub
pusha
in
out
stos
cmp
push
jg
mov
outsl
idiv
testl
sub
jb
mov
je
and
leave
popf
aas
inc
push
and
xchg
jnp
out
xlat
fs
int
dec
or
push
out
cmp
daa
inc
popa
jmp
cwtl
add
xchg
mov
mov
js
add
popf
mov
icebp
outsb
add
rep
mov
pop
mov
cmc
test
addr16
arpl
mov
lret
cmp
lods
and
lock
outsl
aad
je
loopne
into
test
mov
push
and
inc
jg
popf
in
sbb
xor
pop
in
lcall
or
shll
pop
ds
stos
iret
in
inc
into
pop
repz
fisttpl
inc
mov
test
ss
mov
sbb
psllq
jle
sbb
mov
push
dec
xor
dec
fists
into
adc
dec
outsl
mov
add
xor
adc
cmp
adc
insl
stos
sbb
sbb
and
cmp
imul
xchg
mov
mov
inc
mov
jns
cmp
cmp
stc
stos
das
inc
jmp
jmp
push
fucomip
dec
aaa
repz
or
into
cmp
es
repz
xchg
jne
loop
lret
insl
rclb
push
mov
jp
in
clc
push
jmp
mov
mov
dec
sbb
mov
lret
lret
or
leave
lahf
push
js
test
adc
and
ds
cmp
mov
repnz
pop
movsb
dec
loop
mov
ffree
or
in
fwait
mov
pop
sarb
cmp
dec
mov
ret
mov
cmp
push
push
mov
hlt
imul
dec
mov
sbb
les
call
jg
sbb
dec
xchg
cli
jae
popf
adc
mov
inc
adc
rorl
data16
sub
xor
dec
lret
mov
xchg
cmp
sub
cwtl
inc
push
cmp
outsl
jge
ret
push
mov
jb
adc
pop
std
xor
in
xchg
test
test
loopne
xor
lds
push
sahf
leave
testl
loopne
lcall
clc
sub
inc
dec
jno
fnstsw
inc
add
xlat
dec
inc
or
lods
jnp
imulb
jmp
int
outsl
insb
dec
mov
addb
das
mov
cli
jle
and
jmp
lahf
out
inc
mov
mov
dec
mov
xlat
jecxz
dec
jno
xorb
pop
mov
or
ror
cmp
cmp
cld
mov
lock
mov
sub
xor
sub
add
les
popa
jge
rcll
fs
add
es
arpl
fsubp
add
push
dec
cs
pop
test
push
mov
and
mov
xchg
pop
mov
fimull
cld
xlat
roll
add
adcb
mov
xor
xor
arpl
loope
jne
das
xchg
lods
lock
pop
ret
xchg
addr16
jns
aam
inc
or
mov
dec
or
lds
icebp
ret
pop
or
dec
inc
sbb
icebp
addr16
push
pop
pop
mov
std
mov
cltd
inc
jae
mov
inc
loope
loop
adc
push
jnp
stos
mov
fs
push
jp
shrl
int3
aad
ficoml
ficompl
mov
jecxz
xor
aad
ljmp
pop
lahf
xor
mov
not
sbb
mov
push
cmp
pop
decl
iret
lods
call
popf
cmp
dec
cwtl
call
sbb
lret
arpl
ss
or
enter
insl
xchg
pop
add
aas
xchg
or
jl
xor
leave
popa
mov
fisttpl
ja
mov
pop
fidivs
bound
mov
xchg
inc
xor
aam
cmp
ret
js
jecxz
sbb
movsb
xchg
loope
out
push
xor
mov
outsb
mov
cmp
inc
aaa
shlb
into
pop
xchg
inc
mov
cmp
lock
pusha
das
mov
ud2
and
mov
fwait
mov
mov
mov
pop
cmc
cltd
sub
mov
lcall
out
mov
lods
push
fucomi
or
mov
inc
in
les
out
sbb
jl
add
mov
pop
cs
and
ljmp
xor
test
sbb
push
loopne
jge
push
mov
adc
sti
imul
inc
nop
cltd
mov
lea
aad
outsb
adc
mov
add
xchg
xchg
add
jns
outsl
jmp
dec
add
jl
add
add
fwait
les
xor
mov
or
mov
popf
xchg
cmp
fbstp
mov
stos
scas
in
out
dec
mov
adc
mov
add
out
aas
inc
cmp
mov
sub
sub
hlt
or
dec
add
xor
int
mov
inc
js
push
xor
pop
inc
sbb
das
daa
dec
or
inc
fwait
movsl
int
pop
mov
orl
leave
add
jne
mov
xchg
inc
mov
daa
scas
lods
lock
push
rcrl
and
xchg
fcoml
movb
fucomip
cmp
jno
lods
xchg
jne
decl
cmpb
and
fisttpl
out
cltd
lea
cmp
in
rclb
and
add
int3
mov
inc
dec
mov
add
popa
ljmp
mov
test
ss
rorb
es
dec
adc
movsl
dec
xor
cmp
or
mov
fdivl
out
mov
aaa
fisttpll
es
xchg
jmp
sbb
adc
jns
mov
int
sub
test
filds
lods
push
aaa
or
push
sti
xlat
scas
cmp
cmp
sub
xchg
leave
lea
and
fs
test
fdivl
sbb
push
or
cwtl
lret
mov
xor
in
jne
popa
add
fisubrs
sbbb
mov
lret
cmpsb
push
aaa
scas
cmp
addr16
shlb
insb
mov
mov
pop
cmpsl
gs
std
push
jge
mov
stos
test
push
lret
ret
or
out
jmp
jb
imul
push
push
ss
data16
fcoms
dec
cld
xchg
inc
pop
ja
inc
das
daa
loop
fisttps
cmp
jo
pop
es
mov
dec
jl
out
int
cwtl
notl
sti
es
fwait
sbb
loope
mov
dec
sarb
inc
popa
stc
int3
dec
icebp
stos
rcll
or
sarl
insb
or
mov
xchg
out
into
jp
or
jno
or
loopne
das
les
test
daa
xchg
pop
inc
cld
cli
push
push
jle
orl
add
sbb
loopne
fcmovbe
and
bound
dec
dec
in
inc
repnz
cmp
cmp
mov
insb
or
lock
cmpsb
aam
clc
icebp
xchg
or
test
xor
int
loopne
cltd
fcomp
sahf
stc
addr16
shrb
mov
js
sub
and
pop
cmp
adc
in
xchg
dec
jns
pop
jmpw
dec
sarb
xchg
outsb
push
adc
movsb
fimull
xor
sti
ret
add
fwait
add
xchg
sub
push
out
std
dec
iret
call
lcall
push
mov
pop
lret
jmp
leave
stos
aas
jmp
cmpsb
mov
xor
out
nop
rolb
and
inc
test
adc
jl
mov
sarl
mov
das
cmpsl
das
xor
lods
std
mov
or
ficoml
sahf
push
inc
inc
mov
mov
lret
xor
xor
les
xor
xor
test
xchg
adc
repz
adc
mov
and
loopne
das
jbe
fiadds
aas
cmpsb
call
pusha
test
leave
test
push
add
ret
and
mov
lods
test
stos
jae
dec
jbe
out
adc
xchg
mov
lods
in
test
in
xchg
adc
or
xor
or
mov
jecxz
ljmp
sub
cmp
incl
jmp
vmovntps
and
cmpsb
jne
push
xchg
js
fisttpl
mov
jne
pop
xchg
and
push
xchg
mov
push
jmp
push
mov
cli
movsb
fdiv
mov
cwtl
sbbb
fcmovne
push
xlat
fisttps
in
call
cli
or
pop
lret
ret
loope
xchg
mov
push
repz
push
push
inc
xchg
mov
mov
pop
mov
das
mov
psubb
add
adc
xor
and
int3
aaa
dec
pop
push
nop
decl
cmp
ljmp
mov
setae
inc
and
in
cmc
mov
mov
jmp
xchg
imul
sub
loopne
and
xor
or
fcmovbe
xchg
sbb
sti
dec
or
nop
xor
je
icebp
mov
jmp
sub
xchg
or
loope
push
andb
shll
mov
sti
or
push
add
xor
or
xchg
dec
int3
aaa
jo
cmp
xchg
fistps
add
push
stc
lods
lret
outsb
and
loope
les
inc
mov
fsubrs
clc
stos
add
int3
mov
mov
stc
arpl
cmpsl
mov
lock
ds
push
fdivr
pop
cmpsb
pusha
sub
repnz
fcompl
xchg
rolb
inc
xor
add
imul
push
sbb
mov
iret
xor
push
ds
xor
and
lock
mov
push
and
cmp
push
std
cmpsl
or
pop
cmp
push
pop
nop
pushf
jno
add
roll
rorl
leave
mov
jae
fstpt
and
ss
arpl
cmc
push
mov
push
adc
sbb
ja
cmpsb
xor
addr16
mov
jo
movsb
jb
adc
rcr
pop
rcrl
mov
mov
sbb
sub
andb
and
sub
jno
xchg
jmp
div
mov
mov
pop
les
cmp
inc
dec
bound
adc
ljmp
subl
jp
pop
sub
xlat
adcl
or
sbb
add
cmp
dec
imul
out
push
ss
dec
sbb
add
or
push
js
cmp
outsl
adc
stos
xchg
cli
mov
dec
jne
stos
sbb
mov
insl
or
enter
pop
xchg
push
out
adcb
lds
jg
or
pusha
inc
push
and
pop
push
pop
subl
std
sbb
shlb
push
fcomps
push
or
inc
stc
jmp
outsb
mov
adc
cmp
icebp
xor
loop
outsl
xchg
aaa
mov
ljmp
divb
movsb
movsb
lods
jecxz
in
insb
in
adc
fisubl
test
out
pop
xor
lcall
mov
jle
and
in
cwtl
inc
rcrl
xchg
loop
push
lret
push
aam
imul
push
xor
fcompl
push
inc
ja
notb
or
adc
push
pop
cmc
mov
push
jo
pusha
ss
jo,pt
mov
push
loopne
jg
inc
jae
xchg
mov
loope
jo
sbb
cs
cli
sahf
out
test
mov
cwtl
mov
outsb
js
loopne
push
loopne
mov
xor
vmovlpd
ja
es
jbe
xor
fcompl
jb
mov
mov
add
nop
adc
mov
jae
mov
lods
cmpsl
cmc
mov
inc
cld
rclb
js
add
sub
sub
in
jmp
scas
leave
mov
dec
sub
add
arpl
pop
adc
test
call
or
imul
push
sbb
cmp
lds
cli
adc
cltd
imul
add
inc
rorl
mov
hlt
mov
cltd
lahf
je
push
cmp
or
mov
pop
sbb
mov
cmp
pop
xor
inc
sbb
ja
stos
add
push
inc
inc
push
cs
add
mov
mov
jecxz
idivl
idiv
xor
fwait
insl
xchg
mov
sti
jne
mov
jb
cltd
cmp
or
mov
inc
xchg
js
cmpsb
dec
out
int
sbb
sbb
hlt
test
fwait
out
fst
sbbl
xchg
addr16
fs
pop
vpmaxub
jg
push
inc
mov
int
adc
xchg
sarl
cmp
adc
inc
mov
xor
cmc
test
std
test
or
xchg
cmp
imul
xor
add
or
es
out
int
push
add
ljmp
xchg
mov
pusha
or
repnz
sbb
movsl
inc
in
or
add
mov
xchg
xlat
sti
sbb
outsl
scas
call
into
and
mov
cmp
mov
jg
adc
arpl
inc
jg
int
test
push
popf
push
jl
mov
dec
jge
int3
sbb
mov
fcos
inc
xchg
pop
lret
mov
pop
mov
cmc
addr16
sbb
and
push
pop
add
mov
repnz
int3
lret
jnp
lea
adc
sbb
fidivl
lcall
pop
add
mov
nop
inc
outsl
stos
inc
jle
fisubl
insw
hlt
push
and
in
mov
shrl
pop
aam
pop
pop
imul
sub
xor
aaa
es
shll
out
sbb
lods
sub
fcmovnbe
and
ljmp
repnz
pop
xchg
outsl
xchg
clc
icebp
adc
int3
fimuls
mov
sub
cmp
mov
mov
jbe
mov
cltd
aad
popa
or
insb
jp
lcall
push
mov
test
sub
add
stos
daa
xchg
sbb
fdivrs
mov
out
xor
test
fadds
push
daa
shll
aam
sub
or
cmp
xchg
popa
sbb
jo
push
mov
cmp
push
call
rclb
push
popf
lods
adcb
xchg
orl
dec
pop
jb
test
push
clc
je
mov
dec
scas
push
mov
je
mov
test
mov
and
les
or
xchg
lret
inc
adc
in
push
mov
add
jnp
or
sbb
cmc
or
fstps
push
adc
inc
lahf
cs
push
fimuls
dec
and
mov
cmpsl
jle
cmp
dec
mov
sahf
add
repnz
mov
jl
jnp
jge
push
mov
lret
dec
and
sub
push
cld
jne
dec
shll
dec
rcl
add
repz
fsubl
daa
mov
insl
push
xchg
push
leave
add
xchg
call
or
dec
mov
add
repnz
push
outsb
adc
test
xchg
fcomps
test
pop
lods
cltd
sub
fwait
push
push
pop
fisubs
test
jle
mov
mov
divl
pop
mov
push
jb
cld
jmp
fistpll
add
iret
lea
adc
dec
lea
into
pop
mov
in
rol
in
pop
movsl
in
negl
add
sub
xlat
dec
stc
push
sbb
fcoml
mov
mov
push
jmp
xlat
shl
jmp
je
in
in
nop
jne
test
dec
iret
sub
arpl
inc
fildll
cmpsw
pop
divb
mov
xchg
fst
ret
mov
rclb
xchg
sub
mov
mov
adc
pop
mov
mov
pop
sbb
mov
fdivp
push
dec
cmp
push
fwait
dec
or
xchg
mov
jb
pop
inc
adc
rcr
int
add
sub
scas
adc
jbe
js
pop
xchg
add
aaa
mov
pushf
stos
mov
jno
mov
add
cmp
sub
call
mov
or
push
leave
pop
inc
sbb
cmp
jmp
jecxz
fnsave
cmp
mov
nop
xchg
jo
jle
add
mov
cmp
mov
mov
adc
add
xor
pop
ljmp
jb
std
pushf
sub
mov
cmp
fldenv
test
fwait
inc
push
lahf
dec
pop
mov
inc
jle
popf
or
ficomps
cmc
dec
mov
push
sbb
lock
pop
sub
lods
andb
filds
push
ljmp
adc
sub
sub
pusha
cmp
ljmp
cmpsb
out
mov
mov
push
fs
sarb
mov
xchg
out
fwait
sti
cmp
bound
arpl
mov
std
iret
xor
repnz
iret
in
fisubrl
pop
adc
adc
je
daa
popf
add
cmp
les
cmp
test
jecxz
sti
mov
stc
xchg
ljmp
popf
test
pop
jo
jmp
dec
xlat
aad
rcrl
outsl
aas
imul
adc
mov
lahf
mov
shll
mov
fs
xchg
xchg
inc
xor
inc
pop
xchg
mov
repz
jo
test
sub
int3
test
outsl
mov
and
movsl
mov
test
out
out
insl
push
or
ret
sub
icebp
std
out
pop
pop
pop
frstor
mov
mov
sub
stc
xchg
pushl
repz
sbb
push
add
jb
cs
les
test
sub
ljmp
ret
adc
sbb
pop
lods
dec
dec
movsl
repnz
or
test
jno,pn
stc
out
out
movsl
hlt
lods
push
bound
repnz
push
roll
lret
inc
lcall
mov
jecxz
adc
into
push
and
sbb
pop
xchg
sub
ljmp
xchg
jg
push
fcomps
roll
pop
sub
ret
adc
das
mov
int3
jecxz
rclb
inc
sbb
call
mov
add
xor
sahf
cmp
jb
push
inc
test
cwtl
xor
pop
and
push
lods
es
push
jno
and
in
add
ja
adc
adc
jno
test
mov
cmp
mov
cmp
das
mov
cmp
sub
mov
scas
call
repnz
jo
lock
imull
incb
cmp
cmpsb
lods
push
jbe
sub
sub
call
sbb
mov
imul
popf
or
push
xchg
fwait
in
pop
dec
mov
xor
adc
mov
dec
test
addr16
adc
xchg
andb
int
sbb
mov
test
mov
in
xlat
jp
cwtl
stos
jno
shl
addb
xor
div
fcmovbe
ss
leave
testl
sbb
rcrl
xchg
mov
xchg
adc
pop
shrl
pop
mov
mov
xor
push
cltd
imul
add
inc
cmpsb
scas
pop
xor
shlb
outsl
int3
shlb
rcrl
xor
cltd
int3
mov
mov
or
xlat
lahf
jno
sub
rolb
and
lods
inc
adc
imul
sub
mov
xchg
inc
ficoml
mov
gs
inc
mov
xchg
cmc
xor
or
hlt
imul
xor
out
shll
and
pop
adc
jb
mov
dec
lahf
icebp
xchg
add
push
dec
push
imul
jae
xor
adc
push
push
cmp
push
arpl
xchg
test
faddl
cmpsb
push
fnsave
sub
inc
pop
icebp
xlat
push
mov
sub
stos
jl
sub
pop
add
inc
push
in
cmc
repz
add
inc
push
aaa
es
mov
mov
mov
divl
push
in
mov
outsb
dec
movsl
in
test
lds
les
cmp
xor
pop
jns
popa
push
push
fstpt
cmc
jo
sti
jnp
fisttps
aaa
jne
xchg
jmp
movsb
sbb
js
or
stos
sti
cmp
adc
jge
divl
mov
ss
in
inc
push
imul
sbb
scas
lcall
push
jmp
push
aad
push
dec
inc
out
inc
ficoml
or
data16
out
xchg
mov
mov
xor
or
cmp
je
jle
stc
pop
fucom
pop
sbbb
repz
mov
ret
js
insl
ret
xor
lahf
bound
pop
ret
mov
pop
adc
dec
inc
adc
push
xor
cld
jle
test
mov
xchg
testl
mov
test
pop
mov
enter
mov
daa
dec
mov
dec
pop
sub
add
mov
lret
mov
push
adc
xorl
sub
mov
imul
idivb
ret
and
mov
push
mov
mov
cli
cmc
adc
out
and
shl
jbe
ja
jmp
jb
jge
jo
mov
in
push
cmp
inc
mov
inc
test
arpl
sti
sub
aaa
lcall
mov
xchg
push
pop
pop
xchg
mov
adc
inc
loopne
xor
jmp
je
std
gs
and
jne
adcb
orb
insb
je
rcrb
fistl
and
jg
stos
push
pop
sahf
adc
dec
inc
insb
inc
mov
insb
sbb
mov
inc
mov
mov
mov
stc
mov
arpl
xchg
popa
ja
mov
das
movsl
mov
sub
sbb
ljmp
lret
jns
pop
addr16
xor
inc
out
cwtl
adc
in
fcmovnu
sub
stos
dec
popf
sti
dec
or
addl
insl
pop
mov
jbe
xor
mov
int
add
dec
daa
aas
in
push
push
add
cmc
hlt
test
xor
divl
cmp
and
jle
adc
sbb
mov
pop
push
inc
ja
je
outsl
and
push
adc
jp
dec
mov
xchg
mov
or
repz
hlt
dec
leave
cmp
xchg
movsb
inc
dec
and
int3
cmpsb
inc
or
out
out
leave
pop
jns
mov
push
test
lcall
vunpckhps
rcl
fcmovnu
inc
jle
ja
xchg
cltd
ljmp
sub
add
imul
pop
xchg
les
sub
mov
sbb
push
cmpw
push
or
fldt
inc
pop
sbb
scas
mov
push
fdivr
lret
shr
lea
mov
xchg
cmp
inc
sub
in
ret
cmp
inc
jbe
jnp
repnz
jno
test
mov
loopne
outsl
add
xor
push
mov
pushf
lods
movsb
iret
into
jae
xor
testl
stc
jle
out
cmp
ret
pushf
push
adc
cltd
mov
imul
inc
pop
js
ss
cld
lea
jp
mov
inc
sbb
adcl
bound
pop
testl
inc
icebp
adc
loope
mov
out
lret
pusha
stos
pushf
mov
or
out
sbb
push
adc
shll
cmp
test
cmp
jbe
test
adcl
mov
or
stc
mov
imul
imul
inc
sub
lcall
push
jge
pop
fistps
and
aas
xchg
xchg
adc
xchg
xlat
repnz
pop
aaa
mov
popf
rol
xor
mov
test
bound
xor
xchg
push
das
pusha
xchg
outsb
jno
bound
fidivrs
add
btr
push
sub
and
in
inc
sbb
jb
sub
mov
or
popa
sub
lock
and
adc
into
stc
cld
jne
iret
mov
inc
mov
subl
mov
daa
fld
push
push
dec
mov
aas
adc
xchg
dec
mov
jmp
gs
mov
int
fcmovnu
cmp
dec
andps
xor
in
out
test
cwtl
push
jo
push
outsl
add
push
ljmp
mov
inc
and
sar
xchg
adc
lret
add
jae
xor
sub
mov
inc
fists
addr16
push
popa
sbb
fidivrs
adc
dec
push
sbb
fnstenv
mov
jae
lock
call
push
inc
mov
mov
scas
xchg
in
push
lods
mov
hlt
stc
outsb
call
or
jecxz
int3
adc
daa
xlat
jl
pop
xchg
dec
mov
fwait
push
int
or
call
ljmp
repnz
std
mov
imul
out
cmp
bound
jmp
xchg
outsl
sub
mov
ds
aad
pop
aaa
aam
lret
inc
sub
imul
and
adc
jns
scas
stc
dec
or
fs
out
cmp
stc
mov
push
je
test
push
out
cld
hlt
cmp
pop
call
mulb
mov
stos
cld
mov
ret
add
or
xor
ja
loopne
jb
jecxz
or
imul
pop
push
or
jae
je
jb
inc
std
int3
and
mov
pop
push
xchg
insb
dec
sbb
push
popf
mov
popa
cmp
repz
lret
lea
adc
inc
popf
dec
std
jl
gs
std
out
fsts
pushf
push
sbb
lds
fidivrs
xor
jmp
inc
mov
jg
call
add
ret
pop
mov
dec
cmp
ret
bound
add
mov
push
lcall
sbb
loope
addr16
lods
xchg
push
push
lea
test
test
pop
sub
adc
adc
mov
jmp
icebp
fdivrs
add
scas
andb
int3
or
xor
sub
gs
mov
fists
push
mov
mull
enter
add
add
ss
loope
dec
aas
outsl
je
movl
enter
cmp
ja
pusha
dec
movsb
fwait
rorb
out
ret
inc
test
int
and
ljmp
cmp
cmp
jp
call
add
std
movsb
inc
pop
dec
cli
sbbl
test
add
mov
pushf
cmpsl
xor
es
decl
jb
inc
insl
cs
icebp
cmpsb
shl
loope
push
divb
es
jno
mov
pop
push
rclb
aam
xchg
pop
inc
ficoml
in
pop
jo
rcl
and
mov
push
mov
mov
inc
push
adc
xchg
inc
cmpsl
pushf
add
out
lock
loopne
mov
cmp
mov
jne
add
mov
stc
cmp
xorb
lret
ja
pop
nop
xchg
cmpsl
pop
mov
add
xchg
imul
jmp
movsb
xchg
inc
push
popa
sti
sahf
cmp
jecxz
sbb
arpl
loope
mov
mov
loop
cwtl
enter
dec
dec
or
lret
pop
jo
jle
inc
push
mov
int
xor
jcxz
test
cmp
mov
mov
ja
dec
dec
dec
cmp
pop
xor
ret
adc
hlt
mov
pushf
repz
imul
lods
mov
xor
rol
cmp
mov
shlb
mov
loope
test
popf
jmp
stc
sub
dec
jae
add
rcrl
lret
stc
rorl
sub
imul
jb
sub
repnz
rorb
lret
notb
cmp
pushf
push
movsb
pop
cmp
pusha
push
sarb
and
inc
sub
mov
test
fistpl
mov
stos
or
push
aad
sbbb
xchg
and
ljmp
lock
js
gs
push
add
mov
adc
inc
cmpsb
mov
sub
sarl
insb
xchg
iret
mov
sub
sbb
jae
jecxz
fbld
xlat
daa
pop
sarl
and
or
sub
inc
aad
lock
adc
movsb
test
or
mov
popf
add
lcall
dec
fistpll
add
fstl
sahf
sahf
xor
adc
popf
and
or
cmp
imul
push
xor
inc
icebp
mov
jns
and
sti
and
fcmovnb
sahf
add
mov
xor
push
push
and
fmulp
mov
iret
shll
mov
cmp
jnp
fwait
jno
mov
mov
push
mov
cmp
cwtl
hlt
or
dec
pop
jle
mov
add
stc
cmp
mov
enter
call
xor
inc
in
lea
push
in
loope
inc
daa
cltd
decl
xor
mov
out
push
mov
into
cmp
and
jo
jo
mov
adc
pop
test
mov
popf
stos
fcomps
inc
cld
sbb
in
test
mov
add
jb
addl
dec
xchg
sub
xor
int
adc
dec
add
aaa
je
test
in
add
xchg
pop
sub
sbb
mov
stc
aad
cmp
sub
scas
jmp
pop
sub
xor
clc
push
or
jne
out
jno
sti
test
and
ja
ds
mov
aad
sbb
lds
mov
jecxz
cwtl
leave
mov
or
lret
mov
jmp
or
jp
addl
je
mov
fwait
scas
movb
push
movsb
mov
xchg
icebp
sti
movsb
sbb
into
ds
shlb
mov
inc
in
inc
dec
aam
cmp
dec
sbb
sub
inc
testl
push
nop
iret
dec
insb
or
mov
pop
in
cmp
cmp
inc
decb
and
scas
mov
inc
subps
in
jp
xor
dec
addr16
push
sbb
sbb
cmpsl
mov
cs
fidivl
negb
outsb
ss
inc
mov
xlat
mov
cmp
mov
dec
mov
xorl
mov
cmp
jbe
push
pop
cmc
push
decb
push
jge
lock
rcrl
mov
mov
push
and
dec
stos
out
pop
ljmp
sbb
push
xchg
ret
adc
dec
leave
out
pop
inc
push
sbb
sbb
fs
mov
shrb
scas
fwait
xadd
xchg
inc
mov
iret
pop
mov
in
pcmpeqd
std
fistpll
gs
outsl
lret
stos
xchg
in
data16
pushf
xchg
sbb
das
pop
inc
je
sub
or
jg
stos
mov
cmp
mov
scas
dec
mov
nop
or
andps
ret
dec
or
repnz
movsl
int
xor
mov
sub
stos
or
adc
push
jae
or
fstpt
dec
push
in
push
filds
scas
xlat
jne
gs
pop
cmpb
push
add
neg
out
js
jne
mov
test
sub
stos
jno
aas
lock
gs
jle
adc
sbb
mov
cmp
inc
sahf
in
dec
sbb
lcall
test
and
shl
loop
cmp
test
cmp
mov
insb
jno
push
jge
inc
les
inc
add
bswap
cmp
dec
fbld
sar
cmp
pop
xorl
daa
or
pusha
jae
dec
mov
mov
or
subl
sbb
sti
mov
loopne
mov
and
inc
jp
sbb
pop
xchg
lcall
loope
add
mov
lods
popa
iret
fsts
push
jnp
sarb
jne
pop
jg
sahf
cmp
jae
dec
add
add
mov
aaa
xchg
les
lock
or
jmp
inc
outsl
arpl
pop
mov
pop
das
mov
fldl
and
and
jmp
mov
xor
push
rol
std
cmpsb
lret
push
cmp
xchg
pop
xchg
mov
push
xchg
lret
ljmp
outsl
mov
dec
xor
insl
push
inc
pop
jns
bound
shl
xor
test
inc
je
or
mov
mov
xor
add
fs
mov
pusha
or
in
stos
das
lods
icebp
lret
lret
jmp
cld
and
imul
mov
pop
push
add
inc
gs
mov
push
sub
in
pop
mov
test
ja
cmp
mov
and
jno
and
call
mov
movsl
xchg
mov
dec
call
lods
clc
adc
mov
cmp
jmp
dec
dec
imul
pop
sbb
mov
aad
cmp
or
xor
push
in
ja
dec
clc
rorl
xchg
popa
pop
jae
cs
pop
pop
pop
cmp
movl
mov
add
cmp
push
cs
xor
cmp
sbb
push
add
testl
cmp
sahf
sbb
xchg
pop
test
cmpsb
and
into
shrb
mov
jb
xor
jg
punpcklbw
jg
cld
inc
addr16
dec
in
mov
dec
sub
cs
scas
cmp
mov
adc
mov
dec
cwtl
mov
fsubl
out
cmpl
xorl
fsubr
dec
mul
popf
sbb
jo
push
insb
stos
dec
fcomps
int
jns
data16
dec
test
sahf
rcll
sbb
call
or
popa
into
lcall
add
jne
xor
jnp
or
cli
or
in
xor
jbe
test
sbb
cmp
fcomip
test
daa
ja
jge
and
adc
xchg
mov
cmp
dec
mov
mov
jl
mov
sti
or
sub
lcall
int
jg
cmc
xchg
ljmp
mov
mov
mov
dec
js
int
lahf
test
mov
jmp
loopne
and
cmp
push
push
push
sahf
jb
lods
bnd
or
lods
popa
adc
and
lret
push
adcb
ds
cmp
xor
les
xor
sbb
push
jb
repnz
dec
push
mov
je
test
sbb
cltd
stc
aaa
add
test
out
cmp
lret
and
and
rorb
and
lret
aad
lret
int3
icebp
jecxz
xchg
pop
hlt
cmp
mov
lock
pop
pop
popa
repnz
mov
pop
jl
cmpsl
jbe
jp
in
push
cmp
xchg
in
je
cs
dec
push
and
hlt
mov
sbb
in
into
dec
dec
sbb
sbb
cltd
arpl
pop
cwtl
stc
out
dec
les
dec
outsb
cwtl
cli
adc
leave
aas
loopne
pop
arpl
dec
pop
stc
outsl
imul
popf
pop
and
jo
shlb
in
mov
add
leave
ds
cmp
lea
cltd
push
repz
insl
daa
push
out
xchg
jbe
mov
mov
sbb
ds
scas
not
xchg
xor
xchg
push
cmpsl
xchg
xor
cli
inc
cmp
dec
jp
sahf
xor
mov
jl
insb
test
ja
mov
mov
data16
pop
inc
cld
push
pop
lds
fwait
sbb
scas
jge
fimuls
iret
jbe
inc
inc
mov
test
sbb
in
popf
mov
ja
cmc
xlat
sbb
inc
fs
outsb
pop
xchg
rolb
data16
jo
shrl
pop
enter
inc
stc
or
xorl
inc
sub
pop
test
shll
in
fldt
cmpsl
ficoml
cmp
or
dec
add
cmp
pop
sub
sub
pop
xor
adc
test
jle
scas
and
xchg
jcxz
out
sbbl
jo
dec
nop
movl
std
cmpsb
mov
adc
test
xchg
cmpsb
ss
ss
jnp
sbb
pop
mov
mov
gs
adc
cltd
cmp
leave
mov
mov
and
xor
call
cld
xor
mov
loopne
and
sbb
loope
push
lret
mov
in
adc
cmpsb
in
sti
sub
int
dec
cmp
jmp
jge
aad
daa
in
mov
arpl
clc
lods
insl
mov
add
or
add
xchg
push
jnp
push
push
cltd
icebp
sahf
popf
pop
inc
fcomip
xor
loop
lds
pop
pushf
pop
adc
test
stos
data16
jnp
sbb
das
in
xchg
inc
div
dec
std
pop
push
jns
mul
and
mov
push
mov
movsb
addl
ficomps
push
inc
hlt
inc
ljmp
jae
push
lds
mov
pop
or
loop
adc
xchg
fs
jl
inc
mov
push
ror
es
mov
jns
aas
sbbl
xchg
push
int3
rolb
cmp
xchg
pop
mov
adc
ficomps
push
mov
xor
sub
mov
lcall
sbb
enter
mov
inc
and
cmp
enter
adcb
cwtl
in
push
loop
shrb
outsl
out
daa
sub
mov
sub
lock
xor
mov
push
mov
les
sbb
add
loope
adc
loop
push
lret
sbb
adc
push
push
sbb
insb
mov
imul
adc
arpl
pop
push
outsb
and
mov
rorb
arpl
shlb
leave
or
repz
adc
lret
popf
xchg
mov
mov
sub
andb
popf
jnp
xchg
scas
div
dec
rcl
scas
cmp
adc
sti
add
shll
fwait
sbb
lods
mov
jp
push
pop
aam
push
iret
std
cmpsb
nop
aaa
inc
pop
sub
dec
es
sbb
inc
cmp
or
shlb
jb
jbe
and
sbb
test
stos
flds
out
jbe
and
shr
insb
scas
pop
mov
loopne
fcompl
cld
adc
js
inc
mov
adc
dec
xlat
push
lock
in
scas
mov
pop
or
out
mov
cmc
add
mov
pop
sub
in
cs
sub
mov
and
sti
push
addr16
arpl
shlb
mov
icebp
insb
pushw
push
push
ja
loopne
rol
test
in
xchg
mov
repz
xchg
push
xor
sbb
inc
xor
fistpl
and
pop
dec
aad
push
divb
pop
or
das
pop
xor
add
cmpl
pop
add
int3
mov
mov
pop
cld
lods
jb
and
jge
cli
cmp
and
lock
push
mov
xchg
insl
sti
scas
sub
push
cmp
xor
jp
lret
lret
mov
fcomps
ret
and
lcall
push
push
push
arpl
shll
scas
movsl
inc
scas
in
clc
mov
lock
out
aaa
aad
push
movsb
fdivrp
aas
jne
loop
add
mov
das
arpl
icebp
or
mov
cmc
xchg
xchg
cmp
enter
cwtl
and
dec
jecxz
mov
push
mov
popl
cld
loopne
sahf
nop
leave
iret
rorl
out
dec
es
dec
ret
push
xor
pop
lahf
inc
and
pop
pop
insl
jb
jno
inc
inc
jg
xchg
sti
inc
mov
data16
dec
out
dec
int
and
subw
push
aad
imul
mov
push
das
sbb
push
inc
pushf
mov
aaa
popa
orl
insl
rcll
loope
cmp
data16
xor
cmp
xchg
mov
dec
inc
pop
adc
mov
sub
mov
cs
and
outsl
cmp
or
scas
mov
inc
sbb
mov
out
cwtl
cmpsl
fs
cli
ret
out
pushl
ret
push
mov
loop
jecxz
orb
roll
les
data16
cmpsb
arpl
inc
lret
push
xor
mov
repnz
push
sbb
lods
in
xlat
dec
mov
xor
sbb
jb
push
mov
push
imul
in
and
mov
pop
adc
xor
int
out
cmp
imul
lret
push
loopne
xrstors
sub
pop
scas
ljmp
mov
mov
mov
mov
fimull
inc
add
lahf
xchg
pusha
clc
push
sbb
clc
add
sbb
or
pop
outsl
mov
int3
pop
mov
and
imul
mov
sub
lods
loopne
daa
out
cwtl
mov
pop
mov
inc
add
mov
hlt
gs
out
mov
add
push
dec
xor
adc
mov
data16
lods
dec
mov
in
jp
mov
stos
mov
jno
jb
sbb
fists
and
xchg
sub
data16
rol
lahf
pop
and
imul
iret
push
aam
jmp
and
lea
outsb
pop
movsb
dec
in
gs
sarb
add
mov
jbe
ljmp
xor
jl
dec
lret
inc
pop
loopne
add
decb
mov
clc
pop
jecxz
es
hlt
cmp
ljmp
mov
xor
cs
mov
and
adc
lret
mov
mull
and
cmp
xchg
xor
sbb
or
les
sahf
or
cli
cld
jae
or
leave
in
gs
push
test
mov
into
cmpsl
inc
sub
inc
xor
popf
add
mov
cmp
adc
aad
in
ret
test
mov
std
dec
sub
inc
dec
or
mov
dec
out
mov
xlat
cwtl
fnstenv
test
xchg
cmp
sbbl
mov
aad
sub
ja
leave
add
or
rolb
je
push
jae
pop
mov
mov
fnstenv
adc
xchg
fistl
gs
or
cmp
pop
in
dec
add
dec
mov
rcll
lret
dec
movsl
out
popf
ljmp
mov
cmp
cli
push
adc
dec
cwtl
lds
pushf
movsb
mov
in
pop
out
adc
gs
cmpsl
xchg
and
inc
dec
mov
adc
inc
add
mov
daa
dec
pop
test
test
adc
cmp
sub
dec
fsubp
icebp
mov
ret
repnz
cmp
adc
inc
mov
ret
adc
and
sbb
push
fcomp
iret
sub
divl
outsl
dec
pushf
sub
mov
lock
push
push
xchg
pusha
adc
out
push
lods
aam
std
sbb
loope
das
jl,pt
fisubl
sti
out
ficomps
outsl
pop
cmp
add
or
je
sbb
jnp
lods
idivb
add
aaa
sahf
fcompl
push
rcrl
fldt
in
pop
inc
ljmp
test
fs
push
imul
xchg
ljmp
xchg
inc
decl
arpl
mov
xor
push
mov
push
enter
mov
leave
mov
adc
lahf
lahf
cmp
mov
dec
mov
pop
xchg
sub
test
inc
sub
imul
jbe
or
scas
pop
pop
xor
sub
js
in
mov
xchg
movsb
mov
add
xchg
inc
fimull
in
dec
or
add
scas
scas
mull
xchg
outsb
scas
pop
fcomps
into
int3
cmp
adc
push
leave
cmp
enter
dec
je
leave
movsb
andl
inc
das
lea
clc
sub
in
jnp
movsb
loope
imul
stc
fldt
jmp
dec
add
rorb
mov
push
iret
loopne
into
in
add
push
loopne
add
mov
jge
mov
movsb
sbb
les
pop
out
notb
imul
and
nop
xchg
jns
xor
sub
in
pop
mov
dec
sbb
push
push
pop
adcb
and
pusha
pop
jg
push
pop
xlat
jecxz
aaa
sarl
rcll
xchg
or
popa
push
jo
cli
movsl
lea
mov
jle
xchg
cmc
push
pop
mov
lcall
bound
cmp
sub
ffree
clc
adc
cmc
cmc
test
xchg
int3
stos
in
and
popa
lret
and
xchg
sti
xchg
std
jns
mov
add
out
popf
scas
data16
xchg
cwtl
stc
outsb
sub
mov
pop
xchg
cmpsl
cmpb
mov
das
lds
dec
dec
loop
jmp
adc
push
lcall
fidivs
in
jg
or
pop
sbb
shl
xchg
xor
test
adc
mov
mov
xchg
jne
dec
push
dec
jecxz
inc
mov
adc
mov
mov
rcl
lods
jecxz
popa
repz
lcall
jnp
clc
movsl
jl
pop
mov
jns
daa
mov
lods
bound
call
loope
rorl
fwait
xlat
pop
sti
sbb
js
out
cmp
sub
pop
scas
sub
xchg
xchg
dec
cmpsl
cld
cwtl
sbb
mov
inc
cmp
xchg
push
dec
in
adc
fcoml
mov
imul
int
mov
mov
int3
aaa
aad
fcmovnbe
pop
out
cmc
out
or
mov
fnstcw
dec
or
adc
push
testl
sti
popf
adc
out
shll
outsl
dec
fisubl
dec
or
ret
push
fcoml
xchg
pop
pop
jmp
adc
pop
cmp
dec
pop
int3
adc
loope
rol
and
cs
push
movsl
xchg
cmp
sbb
cltd
inc
mov
dec
in
ds
jp
aaa
or
sarb
sub
es
loope
je
ss
mov
jbe
ds
push
sar
pop
mov
outsb
shlb
xchg
mov
dec
jle
mov
dec
cmp
out
clc
xchg
lahf
call
sbb
negl
pop
xchg
mov
ret
dec
pop
shl
movsb
xor
dec
mov
repz
cmp
xchg
out
mov
mov
sbb
mov
cmpsl
cld
lret
xorl
dec
mov
cld
std
fbld
outsl
lock
lds
jno
lahf
jg
repz
fdivrl
orb
add
xchg
stos
out
mov
push
out
adc
sub
les
inc
pusha
add
cmpl
jmp
repnz
or
adc
fchs
clc
nop
mov
imul
mov
arpl
lock
mov
cmp
push
mov
mov
jecxz
cmp
xchg
adc
cmp
and
pop
push
outsl
jb
insl
jbe
mov
lods
jnp
scas
out
jg
sub
dec
gs
loope
int
dec
test
out
fistps
cwtl
sub
xchg
inc
cmp
mov
fs
jne
and
cmp
fwait
sub
jb
insb
icebp
inc
jae
lcall
gs
push
enter
adc
push
loopne
xchg
outsl
push
add
pop
xor
xor
mov
call
gs
fxam
push
cltd
xor
iret
sar
jmp
cltd
cmpsl
or
adc
sub
rcrl
mov
bound
popa
push
dec
stos
mov
das
out
mov
ret
scas
out
lods
dec
xchg
sahf
push
es
fiadds
sbb
jns
ds
adc
and
jp
xorl
xor
rcrl
push
sub
inc
push
add
jbe
and
js
fwait
jge
dec
mov
jp
push
les
daa
push
cmp
mov
arpl
xor
dec
lds
mov
jo
test
jbe
push
xchg
or
int
imul
lods
lods
in
enter
mov
fwait
imul
lret
pop
inc
jp
pushf
add
jne
xor
aad
jmp
xlat
sub
and
in
pop
lods
or
pop
xchg
adc
pop
jle
sti
mov
pop
inc
aam
ret
jae
imul
movsb
jl
iret
int3
push
addr16
inc
test
jns
add
cmpsb
out
addr16
subb
and
insb
adcb
imul
rsm
es
push
jecxz
outsb
jo
shl
adc
divb
mov
inc
inc
test
cmp
pop
fistps
pop
and
cmpsb
jmp
cmp
imul
inc
push
add
push
cmp
cltd
cmp
xor
or
fmuls
and
sbb
and
mov
jmp
mov
addr16
adc
fcmovne
push
ss
push
cmp
inc
xchg
cmpsl
lods
and
test
enter
push
loopne
mov
mov
sti
xor
shll
and
push
shlb
jge
repz
ja
ja
out
sbb
xchg
lahf
cmpsl
lret
cmp
jg
jge
push
cmp
dec
sbb
testl
mov
and
stos
int
jge
xchg
subb
lods
or
in
push
inc
jg
jnp
insb
sub
mov
cmp
cmpsb
pop
inc
out
shrb
mov
push
and
and
fs
dec
cld
adc
dec
mov
daa
pop
xchg
fmul
adc
mov
pop
jnp
push
shll
insb
mov
ss
mov
push
xor
sbb
mov
add
pop
int3
gs
mov
adc
or
aam
pop
jle
je
lahf
out
and
ss
adc
sbb
and
aad
sbb
jg
popf
mov
sub
fwait
lret
dec
or
cmp
xorl
pop
inc
rcl
lods
jecxz
mov
inc
lock
inc
movsl
lods
add
rclb
rcll
cwtl
sbb
and
mov
fsts
xchg
addl
pop
jno
inc
dec
push
mulb
xchg
mov
scas
repz
loop
mov
movsb
bound
je
or
out
push
sub
or
incb
movsl
mov
aad
in
add
or
jns
out
in
insb
pop
roll
cwtl
lods
ja
std
pop
out
mov
xor
mov
mov
pop
jge
add
repz
push
mov
or
mov
add
pop
xor
stos
or
adc
repz
daa
or
dec
cmp
in
cs
lods
push
scas
mov
mov
insl
mov
dec
add
dec
in
mov
or
adc
lock
sbb
cld
sahf
test
sub
mov
iret
call
out
orl
xor
ret
lahf
movl
cmpsb
imul
lods
pop
xchg
repz
shrl
inc
mov
rclb
lods
scas
add
fidivrs
push
pusha
popa
mov
rolb
adc
jae
ret
fdivl
shrb
movsb
outsl
cmpsl
or
out
jae
mov
movsb
lods
sbb
mov
les
dec
mov
mov
mov
iret
sub
mov
pop
fsts
call
gs
xor
pop
mov
adc
jb
pop
ret
cwtl
push
mov
mov
add
dec
jp
lret
lahf
mov
ja
sub
das
and
xor
aas
outsl
or
push
xor
cmp
sti
std
mov
fwait
cmp
mov
mov
rorb
mov
sub
pop
jno
pushl
pop
loopne
add
enter
aam
fcmovnbe
push
mov
mov
cs
xadd
test
ret
scas
inc
sti
iret
fcmovu
or
sub
dec
pop
fdivrl
insl
push
adc
mov
sbb
sub
xchg
lea
test
jns
pop
ret
in
dec
mov
and
movl
lret
mov
jo
cmpsl
nop
jge
cs
mov
pushf
stos
or
add
clc
shl
jo
dec
popl
pushf
sbb
dec
mov
icebp
loope
enter
mov
xchg
out
mov
arpl
ss
push
or
sbb
pop
cltd
scas
repnz
mov
sbb
mov
cmpsb
xchg
out
aad
pop
int
sbb
bnd
push
xchg
jns
xchg
test
dec
insb
cwtl
rclb
stos
movsb
fldt
inc
mov
test
mov
sub
test
imul
jle
sub
out
and
aam
mov
mov
inc
fs
out
stc
cmp
imul
push
sbb
sarb
sbb
and
daa
insb
dec
sbb
loop
testb
rclb
cs
aad
adc
std
xor
leave
mov
mov
or
hlt
fdivrl
pop
push
fwait
shll
outsl
call
dec
mov
jno
mov
cmp
scas
out
int3
xchg
pusha
cmp
leave
nop
adc
push
mov
pop
les
xor
xor
xor
sub
mov
into
enter
enter
mov
xchg
cs
pop
mov
mov
push
sti
lds
xor
sbb
popf
in
xchg
push
pop
call
cwtl
mov
mov
pop
jge
sub
and
and
pop
out
rclb
lds
test
sbb
out
sbb
pushf
inc
adc
push
xchg
add
mov
pop
pop
cld
repnz
test
aad
and
cmc
out
inc
mov
movsb
sub
add
push
or
sbb
xchg
jmp
pop
ret
cmp
cmp
fdivs
shl
inc
lods
cs
imulb
or
adc
in
jo
xlat
fldl
jge
push
stos
in
xor
lock
xor
pop
cwtl
pop
xchg
dec
pop
or
int3
push
cwtl
jle
cmp
jmp
movb
pusha
mov
subl
fidivs
inc
cs
nop
push
scas
and
fistpl
cs
mov
add
shll
enter
int
inc
movsl
jge
mov
jne
inc
adc
inc
insb
jg
push
push
dec
movsb
data16
mov
leave
dec
push
fs
jecxz
mov
clc
popf
aas
cmp
mov
test
cli
adc
outsb
mov
sub
enter
scas
sub
xor
push
iret
sub
nop
aam
jle
mov
lods
fsub
repnz
cmpb
dec
pop
push
test
xchg
repnz
mov
mov
insb
repnz
scas
je
cmp
xchg
pop
push
xchg
mov
negb
popa
xchg
seto
aam
mov
and
jne
rcl
sub
sub
cmp
aaa
pop
inc
in
cltd
jo
ficoms
xor
pushf
mov
in
divl
call
cld
mov
cmp
lcall
cltd
cltd
in
add
dec
jmp
arpl
into
aam
cmc
fs
xchg
dec
push
pop
inc
inc
inc
dec
adc
jno
enter
ja
nop
jmp
orb
pop
aas
xchg
add
mov
sahf
sbb
xchg
jb
lret
jg
imul
xor
sar
ja
cmp
xchg
mov
xor
iret
sub
or
cmc
lds
lods
mov
adc
dec
mov
in
xchg
lods
sbb
mov
cwtl
cmp
cmp
pushl
push
daa
fs
xor
sub
lods
mov
ja
test
mov
push
adc
xchg
inc
flds
rorl
call
inc
testb
pop
aam
push
cmp
push
sub
mov
pop
sbb
cmp
or
push
cmp
cld
scas
push
outsl
jp
ljmp
test
in
pop
push
inc
add
dec
test
std
xchg
mov
pminub
stos
fldenv
cli
xcrypt-cbc
cmpsl
push
pushf
clc
push
in
xchg
inc
push
es
lds
cmp
xchg
inc
and
fcmove
pusha
mov
pop
xor
push
mov
mov
push
sbb
iret
in
jo
cld
xchg
and
outsb
xor
mov
sub
cmp
stos
nop
pop
lahf
lcall
lods
cmp
fildll
cltd
push
sahf
ficompl
pop
das
sbb
push
call
inc
and
int3
push
call
push
mov
ret
ret
fisttpll
mov
imul
pop
ljmp
xchg
xchg
in
mov
jae
repnz
push
inc
iret
shlb
std
inc
mov
cltd
cltd
sbb
adc
jl
mov
scas
and
and
sbb
or
push
xchg
push
ficoms
push
cmp
cmp
add
push
inc
icebp
inc
mov
xchg
jle
sti
mov
mov
mov
add
stos
xchg
sarl
and
cmp
jbe
stc
decb
pop
nop
jo
mov
or
out
in
mov
cmp
jns
xchg
cmpsl
add
push
mov
mov
mov
aas
push
jnp
pop
mov
xchg
popa
test
into
jecxz
cs
dec
xor
dec
xchg
mov
cmp
scas
inc
inc
xchg
fdivrs
rol
mov
sar
daa
xor
sbb
cli
shlb
imul
jb
sahf
or
jb
xorl
mov
jbe
sub
xchg
hlt
adc
mov
mov
add
daa
xor
fcmovnb
lea
or
add
push
xor
mov
int
inc
cli
push
xor
cmc
loopne
push
popl
repnz
push
subl
das
pop
jg
xlat
jno
push
jmp
loopne
out
pop
stc
sbb
js
mov
sahf
dec
aam
pop
leave
jae
push
pushf
addr16
xor
call
mov
sub
aaa
flds
jno
pop
test
push
fsts
or
sbb
dec
outsl
sbb
js
mov
fmul
push
add
out
or
pop
sbb
mov
adc
incb
shr
lret
xor
push
call
push
or
mov
push
sub
mov
rcr
fwait
pop
mov
idivl
mov
pop
sbb
fs
movsl
mov
push
lods
add
or
popa
fcmovu
repnz
lods
mov
inc
into
mov
push
enter
xchg
jae
dec
dec
adc
mov
sahf
jnp
scas
jmp
or
or
or
insl
je
dec
cmp
lds
add
movsl
push
xchg
mov
sub
insb
sub
inc
les
pushf
dec
mov
cld
cs
popf
pop
cmpsl
xor
and
sti
or
pop
iret
or
cmp
cmp
sbb
jae
repnz
movsl
jbe
iret
xchg
movb
rclb
scas
inc
inc
mov
mov
cmp
movsl
and
stos
imul
jmp
xor
and
iret
add
lahf
stc
add
lea
fisubrl
sub
mov
xor
int
shl
cmp
sub
mov
xor
fadd
mov
xchg
xor
cmp
int3
aas
and
lahf
leave
inc
lret
jmp
xor
inc
std
in
ljmp
out
arpl
incb
out
inc
pop
mov
or
mov
stc
sbb
pusha
les
adcl
shll
ror
mov
mov
pop
into
add
mov
add
call
lea
adc
lahf
mov
pop
add
fisubl
cmp
cmp
push
out
loop
stc
dec
test
pop
add
pop
jl
ds
add
dec
jbe
jns
pop
add
movsl
xor
lods
and
cmp
decb
loope
push
cmp
lds
mov
lods
cmp
push
cmp
stos
push
mov
stos
inc
movsl
or
ja
inc
jp
mov
into
iret
outsl
jnp
xchg
scas
fwait
sbb
dec
iret
popf
pop
or
movl
in
addl
cmpsb
out
fdiv
repnz
push
pop
sbb
hlt
inc
cmp
imul
mov
mov
adc
mov
addr16
ret
cmpsl
outsl
mov
or
mov
sub
inc
cmc
popf
xor
add
lds
fstps
mov
pusha
xor
pop
jno
push
rcll
scas
sub
pop
jno
jle
decl
scas
loopne
add
and
xchg
mov
xchg
gs
fisubs
push
or
and
jae
push
fstpl
icebp
stos
ret
dec
cwtl
sbb
movsl
jl
jns
or
imul
pop
mov
pop
dec
and
enter
int3
adc
cli
aaa
adc
arpl
add
aam
push
pushl
insl
lea
jae
jmp
aas
xor
push
xchg
push
lret
adc
mov
leave
rcll
jecxz
or
fists
lahf
dec
lahf
push
xor
in
adc
lahf
repz
das
enter
adc
jl
sbb
dec
mov
sub
fisubrs
cmp
int
ss
scas
lock
test
lods
sbb
xchg
mov
jne
mov
pop
push
xchg
clc
inc
pop
inc
mov
aaa
in
pop
lret
push
sbb
sub
sbb
dec
subb
lahf
adc
outsb
and
cmc
push
jns
or
mov
iret
mov
js
in
pusha
out
lea
mov
lock
inc
pop
mov
pop
sub
pop
lds
add
jle
adc
loopne
clc
adc
xor
out
pop
orb
les
sub
daa
mov
add
pushf
insb
xchg
movsb
ret
mov
inc
jo
test
js
ljmp
scas
dec
adc
sbb
or
jp
jl
mov
arpl
dec
mov
jo
fbstp
pop
xchg
add
and
sub
pop
sbb
out
xchg
out
sbb
arpl
loop
ljmp
loope
push
sti
adc
cmp
jge
std
in
jge
in
xchg
cmpsb
rcll
pop
divb
into
sbb
cmp
sahf
shlb
mov
imulb
mov
shll
pop
fdivr
pop
movnti
cmpb
or
xchg
mov
sbb
mov
into
jbe
sbb
jecxz
ds
cld
adc
addl
cli
mov
shrb
mov
pop
imul
mov
dec
add
ja
or
pop
push
mov
xor
or
add
ds
xlat
cmc
xor
mov
push
rcrl
xchg
xor
outsb
stc
rorb
mov
call
imul
lods
pop
rorb
ljmp
fsubl
std
sub
icebp
clc
mov
out
sbb
mov
inc
and
inc
int
or
adc
popf
mov
or
cmp
mov
fdivs
jb
jmp
int
add
fistps
cld
popf
xchg
std
movsb
test
cmp
or
pushf
cwtl
pop
ss
lcall
mov
out
mov
cltd
jne
jno
mov
mov
sbb
or
or
or
adc
lock
inc
ret
filds
lea
cmp
pop
stc
cwtl
ja,pt
mov
rcrb
push
aas
cmpsb
out
fwait
loopne
gs
cmp
ja
mov
cmpb
lods
hlt
sbb
xor
fiaddl
xchg
mov
sarb
mov
cld
leave
pop
xor
sti
inc
into
adc
stos
aas
test
pop
push
shrl
pop
stos
fcmovnb
leave
mov
cmp
fmull
cmp
adc
sahf
sar
dec
jbe
adc
lahf
mov
push
shlb
fs
jnp
rcrb
dec
popf
mov
std
lea
mov
out
pop
mov
movsl
loop
sub
add
push
out
inc
cmc
pop
and
and
in
scas
jb
in
dec
mov
insl
pop
push
hlt
pop
popa
inc
sub
adc
ja
sub
xchg
bound
push
jecxz
outsb
movsl
icebp
inc
adc
movsb
push
dec
xchg
mov
loope
into
add
jg
lret
or
data16
cmpsl
les
jns
inc
mov
mov
mov
cld
das
pop
push
mov
jg
cmc
mov
in
call
xor
mov
mov
dec
cltd
ja
ficoml
pop
std
mov
cmp
hlt
xchg
je
pop
mov
push
mov
pop
xchg
pop
xchg
popf
das
pushf
pop
mov
adc
push
pop
sar
and
cmp
mov
jb
pop
inc
xchg
int3
or
add
pusha
fimull
adc
xchg
jbe
and
cwtl
mov
mov
mov
add
scas
push
test
jle
xor
lods
push
movsb
mov
jg
sbb
mov
insl
mov
add
pop
fwait
xchg
sbb
fstl
cld
inc
jb
adc
ret
push
pop
pop
sbb
pusha
lcall
mov
fidivrl
inc
sarb
pop
mov
and
enter
ljmp
mov
sbb
outsb
imul
insb
pop
inc
dec
mov
mov
sbb
lahf
addr16
push
push
push
aam
fstpt
ret
jo
mov
jg
add
imul
adc
xor
xchg
and
movq
aaa
or
adc
in
dec
push
ljmp
cltd
adc
test
mov
push
jb
out
dec
idivb
jo
add
call
or
outsl
enter
scas
scas
mov
insl
faddl
scas
bound
sub
add
sbb
mov
mov
pop
stos
mov
lock
stc
sub
subb
or
mov
adc
in
cmp
es
push
pop
ljmp
pop
ret
nop
dec
or
inc
icebp
imul
and
inc
pop
xchg
or
and
inc
sbb
jge
int3
out
idivb
jg
adc
sub
test
hlt
lods
mov
mov
lock
xor
and
pop
adc
ror
mov
jl
aam
pop
shl
adc
pushf
pusha
ret
cli
and
sub
test
jmp
jns
shl
lcall
mov
nop
movsl
cwtl
icebp
pop
cmova
mov
cltd
test
mov
sbb
insl
clc
jbe
xor
pop
js
repz
dec
pop
popa
mov
jne
das
lods
ds
cwtl
jl
xchg
xchg
dec
xor
fisubs
adc
mov
mov
mov
push
loope
js
hlt
xchg
cld
xchg
pop
das
stos
xchg
cmp
inc
cmp
mov
sarb
push
loope
cmpsb
or
mov
out
and
mov
xor
sub
and
mov
mov
icebp
cs
add
sub
dec
cltd
or
scas
inc
leave
cli
fdiv
out
lcall
rorb
out
jg
dec
les
scas
cs
jge
stos
pop
pop
jnp
aad
adc
or
dec
jnp
mov
pop
mov
outsl
inc
adc
fistpll
cmp
xor
out
cltd
jecxz
mov
cmp
push
and
je
dec
adc
adc
movsl
roll
test
xchg
sub
inc
incb
cmc
lods
dec
and
test
dec
jp
and
lock
adc
adc
out
or
negb
fs
jge
fstl
inc
push
inc
mov
mov
pop
push
cli
jg
cli
dec
add
xlat
and
iret
dec
scas
mov
cwtl
push
or
stos
jle
sub
mov
add
es
addb
pop
shrb
and
lcall
or
sbb
cmpsb
inc
mov
cmpsl
mov
bound
xchg
ret
adc
xchg
cmc
sbb
xchg
and
adc
outsl
mov
sbb
dec
outsb
cwtl
xor
call
or
cmp
fldenv
jmp
lock
insb
mov
and
sub
in
mov
test
jns
icebp
cmp
sbb
pushf
sub
and
les
cmp
mov
adc
xchg
pusha
or
sub
jno
push
int
lea
dec
dec
icebp
inc
outsl
add
sbb
dec
aas
popa
pop
xchg
ljmp
nop
lret
mul
add
aaa
call
dec
ljmp
ss
jle
jae
gs
jp
inc
mov
xchg
add
xchg
gs
push
lret
cwtl
or
xchg
add
les
add
cmpsb
pop
js
jnp
pop
jae
pcmpgtd
lcall
and
fiadds
sbb
inc
aam
test
inc
imul
cmpsb
pop
insb
adc
add
das
mov
lret
cmp
popf
je
inc
shll
dec
lds
xchg
stos
sti
cltd
in
push
xchg
out
clc
xchg
loopne
aam
jge
imul
mov
sti
sar
push
in
testl
ret
call
es
leave
mov
xorl
aad
arpl
pop
lock
xchg
stos
dec
mov
xor
add
xor
add
and
fwait
mov
cmpsl
outsl
xor
ds
jp
mov
adc
sbb
inc
ss
xor
push
xorb
sarl
and
test
addl
fisubl
mov
fs
jo
in
fsubrl
pushf
adc
out
mov
jne
jno
ss
gs
sbb
clc
incl
lcall
and
inc
cmp
xor
inc
add
xor
cmpsl
scas
loop
pop
and
pop
push
xchg
ret
scas
push
into
ds
jl
xchg
sub
mov
imul
push
mov
aad
into
ffree
cltd
inc
push
pusha
inc
mov
je
aaa
push
xlat
popf
xor
cltd
xchg
lret
decl
pop
cmpsl
test
pop
bound
cmp
mov
rcl
xchg
push
push
mov
add
xor
in
dec
orb
jae
popf
push
dec
lret
adc
loopne
lods
mov
mov
mov
push
daa
mov
movsl
rcrb
pop
sbb
insl
pop
sbbl
push
imul
adc
add
sahf
fbstp
jno
shlb
rclb
lods
mov
leave
fisubrl
sti
xchg
dec
add
in
pushf
lds
in
insb
hlt
xchg
cmovno
pop
push
add
pop
sbbl
xchg
jmp
mov
imul
test
arpl
mov
pushl
in
test
mov
dec
xchg
arpl
iret
mov
aam
ja
xchg
mov
movsb
lret
test
push
pop
das
mov
jb
mov
shl
jae
outsb
mov
popa
es
out
or
leave
mov
aas
orl
pop
xor
cwtl
xor
cmp
and
and
mov
out
push
in
roll
test
das
and
jne
ljmp
faddl
rclb
mov
std
push
cs
notl
outsl
or
xchg
call
jae
sti
test
push
push
lcall
inc
pop
cli
cmpsl
ljmp
mov
pop
inc
fsubr
loop
mov
push
push
or
inc
push
pop
cmp
cmp
add
jg
xchg
jp
inc
jecxz
std
stc
sar
sbb
push
jo
icebp
jo
or
xchg
xchg
popa
aam
sub
pop
movsl
loopne
cmp
divb
ja
xchg
mov
imul
ret
jp
sbb
cli
ds
pop
sbb
test
sub
push
lods
push
ror
xchg
and
fsubrs
ret
das
mov
mov
cmpsl
jle,pt
clc
ds
insl
pop
fists
mov
xlat
loop
cmp
dec
pusha
or
sub
mov
push
adc
clc
pop
jnp
dec
jno
mov
xor
adc
iret
lods
std
mov
add
sub
in
fcom
adc
mov
je
pop
mov
xchg
hlt
or
push
xor
jo
sbb
cwtl
in
out
lds
add
jge
fisubrl
push
pop
adc
add
and
pop
dec
int3
sub
xchg
add
out
or
fwait
ret
pop
pusha
mov
outsb
add
aad
push
mov
lods
dec
icebp
fstpl
data16
popa
movsl
inc
clc
xchg
adc
fs
cmp
cmpsb
lcall
xor
cmp
scas
mov
jp
adc
mov
xchg
insb
adc
inc
add
addl
lret
incb
repnz
dec
mov
lret
add
scas
out
mov
mov
xchg
xor
in
mov
lea
shll
cmp
xor
out
and
pop
sub
pop
pop
sbb
insb
sub
push
mov
inc
rcrb
mov
stos
sub
cmpsl
push
call
push
into
lods
scas
addl
aaa
adc
inc
popa
pop
jno
lods
add
jbe
hlt
xchg
call
out
mov
xchg
mov
sbbb
in
lea
call
add
int
fbstp
testb
adc
int3
scas
mov
cmpsb
or
dec
sbb
push
add
inc
mov
mov
mov
dec
or
movsb
ret
jno
mov
xor
mov
jnp
ds
mov
inc
mov
cmp
xchg
rcrl
jmp
push
adc
cmp
fiaddl
mov
lahf
dec
add
sbb
aad
pop
hlt
outsb
stos
pop
push
sbb
fdivl
push
imul
xor
pop
adc
out
mov
mov
inc
or
js
cmp
xchg
mov
inc
jg
flds
push
rolb
or
pop
cmp
scas
sub
stc
lods
pop
fsubrs
adc
shlb
lcall
add
push
push
in
xchg
stc
std
cmp
mov
xchg
cmpsb
bound
orl
dec
bound
rolb
add
les
mov
add
mov
pushf
insl
push
jne
lea
inc
xchg
fs
pop
aad
push
adc
js
xchg
xchg
sbb
loope
and
test
inc
adc
lds
fidivs
in
insb
and
shrl
mov
cmp
push
fwait
out
loopne
clc
cs
in
push
dec
mov
adc
mov
nop
data16
add
jmp
mov
adc
mov
aad
adc
jbe
cs
cltd
pop
sub
cmpsl
sbb
push
stos
push
mov
ret
std
xor
mov
dec
ret
movsl
stc
cmp
xor
repnz
testl
scas
scas
stc
xchg
xchg
mov
in
jl
pop
in
aas
mov
xor
nop
and
cmc
cmpsl
js
loopne
push
test
nop
lea
xchg
xorl
pop
pusha
and
movsl
js
cmp
sbb
test
cwtl
and
xor
mov
cmp
popf
clc
sbb
fwait
jo,pt
daa
pushf
fwait
adc
das
in
xor
in
adc
mov
lods
adc
dec
add
sub
add
mov
cmp
scas
aas
loopne
leave
mov
inc
lods
cli
add
bound
out
aaa
cmp
xchg
sbb
ja
out
sub
fidivrl
sub
xchg
cmpsl
jb
add
popa
lods
out
dec
or
sbb
pop
hlt
fdiv
jl
jno
data16
out
adc
or
mov
out
cmp
popa
and
dec
pop
sbb
jmp
or
nop
jp
dec
arpl
jle
iret
jae
inc
and
jle
nop
dec
adc
mov
and
jl
and
out
pop
sub
sbb
and
fimull
inc
lahf
int
dec
repz
iret
daa
and
mov
push
sub
cmpsb
ffreep
xor
or
mov
cmpsb
insb
roll
jnp
xchg
inc
loope
add
ljmp
jbe
mov
sarb
jno
push
rcrl
jge
rclb
inc
test
and
mov
popa
dec
add
ljmp
int3
cmc
jp
mov
dec
and
mov
push
imul
cmpl
mov
mov
adc
flds
push
lret
pop
xchg
xor
fs
insl
sbb
or
ja
push
inc
aad
pop
lcall
jo
je
imul
ror
iret
sub
rol
lea
imul
pusha
push
push
cmp
or
imul
orb
daa
dec
mov
sub
mov
push
out
or
shrb
fidivs
loopne
lcall
stc
rcrb
aad
ds
leave
adc
daa
push
sbb
mov
cli
arpl
mov
scas
jmp
adc
pop
jmp
sarb
push
addr16
mov
pop
xor
jmp
lods
and
mov
pop
cmc
inc
mov
jns
cwtl
in
cs
stos
pop
fldt
sub
xor
out
scas
in
ljmp
pop
nop
fs
jb
std
mov
in
pop
jo
repz
in
push
mov
mov
call
jp
std
test
stos
outsb
data16
xor
iret
lds
xor
ret
inc
add
stc
lcall
mov
sbb
push
gs
cmp
xchg
jne
fisttpll
stos
pusha
popf
out
push
inc
insb
pop
and
inc
cld
mov
adc
pop
imul
or
pushf
jne
test
mov
jnp
mov
cmpsl
addr16
adc
scas
ret
fwait
pop
lods
addb
test
cmp
xor
out
xchg
mov
mov
dec
ficompl
out
push
iret
pusha
jnp
enter
xchg
std
outsl
xchg
call
adc
cltd
xlat
add
xor
mov
jnp
adc
dec
movsb
xchg
fucomi
push
mov
mov
sub
aaa
xor
lahf
icebp
fisubs
push
lret
jo
jle
push
jg
jge
add
mov
fwait
pop
ljmp
icebp
std
call
sub
pop
sub
mov
ljmp
stos
fcmovnu
fimull
push
imull
sbb
mov
ljmp
ffree
jo
and
mov
or
add
xlat
push
push
sbb
inc
pop
add
ds
xchg
add
pop
sub
jp
inc
call
jmp
mull
stos
inc
fs
daa
js
lcall
xor
jbe
int
add
sarl
mov
mov
push
ja
addr16
sbb
sahf
je
lea
outsl
inc
test
sbb
in
inc
push
lods
push
popa
add
pop
shlb
jnp
xor
les
push
outsb
mov
test
dec
xchg
repz
fidivl
aad
test
or
push
jge
cmpsl
fdivrl
pause
jae
jmp
movsl
out
ret
cmp
fdivl
outsb
out
pop
or
lcall
xor
push
and
xchg
pushw
sahf
mov
adc
sti
mov
and
and
mov
movsl
adc
dec
cltd
cwtl
mov
mov
pushf
mov
dec
and
dec
imul
ds
repz
leave
cs
sbb
push
jbe
xchg
rol
and
push
outsl
mov
pusha
mov
pusha
dec
xor
scas
push
mov
pop
mov
jnp
mov
sub
imul
sub
das
xchg
inc
xor
jg
aaa
dec
out
adcb
jl
adc
shl
lods
shll
dec
mov
adc
inc
ficoms
mov
les
popa
mov
sbb
jecxz
leave
and
mov
fisubrl
push
sub
int
je
jl
adc
add
andl
push
call
and
jns
and
lds
fmuls
fisttpl
int3
or
jmp
enter
push
xchg
cltd
lock
cwtl
xor
push
popf
and
pop
subb
jnp
cmpsb
lcall
repnz
jg
inc
mov
xchg
fimull
sub
add
cmc
sub
repnz
into
loope
cs
lock
icebp
inc
or
test
jp
jbe
mov
iret
cmp
xor
xlat
out
push
dec
sarb
outsb
mov
jl
ret
outsl
mov
pop
cmp
xor
mov
mov
dec
inc
mov
out
mov
ja
xor
mov
inc
fdivrs
dec
sub
jns
int3
test
push
push
pop
dec
lock
push
lds
push
lahf
leave
or
xchg
jle
xor
sbb
pop
mov
fimull
add
and
sub
shl
mov
dec
xchg
xchg
ficoml
roll
out
cs
arpl
add
jae
mov
sbb
inc
push
fcomps
adcb
jp
idivb
mov
enter
pop
mov
popf
mov
aam
fsubrp
mov
imul
insb
xchg
and
sbb
mov
xor
xor
dec
stos
fisubrs
aam
adc
pop
stos
cltd
push
mov
mov
jp
mov
loop
fwait
test
xchg
dec
xor
inc
cmp
mov
push
fsub
enter
repz
push
cmp
inc
es
xchg
and
mov
out
dec
lahf
cltd
lods
add
in
jo
add
ret
insl
gs
and
aad
cld
mov
push
mov
in
pop
xor
insl
push
lods
mov
or
in
add
cmpsl
shrb
sub
adc
xor
and
xchg
test
mov
jns
push
cmp
or
fistl
shll
aas
cmp
arpl
lods
pop
xchg
insl
mov
imul
mov
inc
and
in
popa
jo
movsb
add
enter
push
lds
add
inc
int
pop
sbb
sbb
pop
inc
jmp
dec
fidivrs
lcall
xor
in
mov
inc
lcall
mov
in
je
gs
sbb
or
fdivs
pushw
scas
outsl
or
pop
sbb
and
mov
inc
cmp
stos
stos
testl
stos
inc
decb
mov
faddp
outsl
fs
mov
pushf
sti
movsl
ljmp
push
ret
fnstsw
shrb
cmpsl
call
popf
inc
pop
enter
jns
arpl
adc
mov
inc
dec
mov
scas
fnstenv
xor
xchg
fisubl
jle
and
fisubrs
and
pop
adc
or
lahf
aaa
mov
int3
mov
fptan
jecxz
mov
sub
xchg
mov
add
sub
incb
adc
mov
pop
mov
cmp
jne
out
cmp
in
ds
iret
sbb
repz
loope
sbb
mov
add
pop
mov
test
xor
es
cmp
push
pop
imul
enter
call
rolb
or
sbb
xor
sbb
call
add
xor
ficomps
adc
mov
loop
cld
sbb
shl
clc
int
inc
pop
inc
or
call
in
pcmpeqd
das
push
sub
scas
lret
fildll
xor
nop
testl
mov
shl
inc
call
xor
mov
nop
push
out
mov
cmp
movsl
mov
clc
xchg
add
and
std
scas
adcl
lods
dec
mov
inc
pushf
inc
movsl
pusha
mov
inc
stos
sahf
fdivl
subb
mov
mov
insb
aas
sub
repz
aad
lea
cmp
dec
into
hlt
jo
dec
in
cmp
xor
inc
stc
lds
jge
cwtl
push
and
or
std
mov
and
jecxz
sub
and
and
xchg
int3
push
jo
addr16
repz
lds
in
cmp
adc
mov
out
aaa
cmp
testb
lret
jae
jns
jns
dec
jecxz
int3
lret
int3
sbb
mov
or
fldl
and
loope
xor
faddl
sub
mov
cmp
outsl
inc
cltd
xchg
clc
jge
push
mov
rclb
and
sbb
inc
dec
adc
cmp
enter
mov
xor
sbb
fmull
lods
je
lret
jb
divb
mov
loopne
fs
add
test
ljmp
inc
inc
fimull
out
cmp
sub
gs
jecxz
mov
dec
cli
jecxz
adc
mov
mov
xor
fnstenv
push
pop
sbb
ret
mov
xor
mov
loopne
and
push
in
out
mov
incb
mov
sbb
inc
cwtl
shl
loop
jno
push
icebp
sub
dec
push
adc
not
in
mov
xchg
adc
push
rcl
scas
dec
mov
mov
and
xchg
aam
das
sahf
fsub
daa
mov
stc
lcall
or
jno
push
into
js
in
push
out
jbe
in
das
jae
mov
inc
ss
push
pop
jno
sub
and
pop
pusha
jmp
leave
mov
mov
dec
hlt
fcmovb
mov
sbb
push
setl
jae
xor
lods
pop
jl
addr16
sarl
leave
mov
xlat
cmp
icebp
push
sarl
add
mov
sbb
mov
dec
cld
xor
rclb
ja
sub
dec
xchg
mov
fldl2e
pusha
outsl
mov
call
les
fdiv
xchg
popa
sub
xor
popf
sbb
or
into
adc
fsts
fsts
pushf
and
sahf
pop
mov
fnsave
not
dec
mov
mov
or
test
testl
cmp
sbb
mov
sarl
sarl
ficoms
cld
ljmp
xchg
imul
sbb
sub
pop
bound
fdivrs
xchg
xor
mov
push
ret
dec
clc
scas
xchg
cmp
xchg
flds
pop
fbld
rcrb
jno
cwtl
daa
je
mov
arpl
aaa
inc
outsl
jb
js
and
push
rorl
sub
fbstp
mulb
push
imul
scas
lcall
fldcw
mov
ret
decl
pop
movsb
stos
add
jg
lods
cmp
sub
js
iret
test
call
in
push
xor
dec
hlt
in
in
popa
dec
outsb
and
cmp
mov
jp
pusha
in
out
mov
mov
lock
fwait
dec
sbb
pop
add
dec
mov
or
std
aam
outsl
push
out
clc
sub
xchg
cld
jnp
stc
mov
sbb
pop
les
repz
mov
push
inc
dec
ret
daa
xor
xor
mov
dec
shll
jge
insl
sarb
addr16
mov
ret
stos
xor
arpl
test
call
lea
xchg
scas
and
arpl
push
and
sub
sub
out
leave
cmp
int
into
fdiv
fldpi
into
js
or
sbb
ret
cmp
fs
cltd
mov
sub
jns
pop
iret
lret
adc
xchg
out
sub
movsl
mov
fisttps
pop
jl
push
mov
cmp
push
icebp
cmp
std
sbb
add
jmp
mov
jae
push
sbb
dec
sar
jmp
sub
add
pop
call
pop
xchg
or
xor
and
je
stc
repz
call
dec
aad
cmp
sub
leave
inc
insb
dec
sub
lret
push
sub
mov
ja
jnp
leave
push
lea
xchg
dec
mov
jge
mov
mov
sarb
add
cmp
mov
cmc
cmp
mov
jg
pop
cmc
frstor
jns,pt
dec
rcrb
inc
pop
fstps
mov
mov
sub
je
inc
loop
pop
inc
insb
sbb
add
push
out
sub
sub
cli
out
int
adc
jne
stc
xlat
jbe
xchg
sbb
adc
push
clc
stos
and
test
push
jae
mov
dec
and
pushw
xor
ret
cwtl
sti
cmp
das
mov
lret
filds
cmp
sbbb
mov
iret
mov
nop
outsb
hlt
jle
out
jo
jl
inc
adc
lds
daa
neg
lea
stos
pusha
mov
cmc
dec
das
scas
loop
push
dec
adc
movsl
mov
sbb
and
enter
cld
push
mov
je
je
xchg
jle
adc
sub
and
test
das
repz
fidivrs
rcrl
jmp
add
iret
out
ljmp
sub
leave
iret
add
dec
pop
jns
adc
into
jbe
mov
subb
push
fnstcw
mov
xchg
push
mov
insl
push
adc
add
outsl
fs
dec
jp
dec
pop
test
mov
bound
xor
mov
jns
inc
subb
je
popf
mov
testb
imul
sbb
mov
mov
mov
xlat
mov
fidivrs
mov
sbb
ds
dec
sub
push
in
cmc
inc
imul
divb
dec
mov
mov
and
xchg
aas
nop
mov
dec
mov
adc
outsl
and
xchg
add
xchg
sub
xor
xlat
aam
jle
add
inc
pop
ds
xor
rcll
add
xor
mov
js
adc
pushf
dec
fwait
test
jnp
out
dec
inc
sar
pop
xor
or
add
mov
mov
aad
or
das
mov
sbb
dec
fildl
or
into
lret
mov
stos
xor
sti
xor
mov
dec
inc
push
lret
mov
cmpsl
shl
adc
shl
mov
jo
xor
pop
cld
pop
add
add
add
adcl
cmp
fwait
cmp
gs
in
pop
fimull
lret
sub
dec
inc
cmp
shrb
mov
icebp
movsl
cmpsb
push
jmp
jb
int
leave
mov
dec
add
and
inc
out
leave
stos
loope
jo
aas
xor
jbe
fnstenv
pop
das
inc
xor
inc
adc
mov
jmp
pop
xor
cmp
outsl
adc
mov
push
pop
in
sbb
dec
mov
push
push
es
fmuls
mov
pop
add
sbb
adc
mov
add
push
xor
outsl
sub
clc
dec
fiaddl
mov
sub
movsl
add
ds
mov
cld
ds
lahf
sbb
sub
inc
in
pop
or
sub
lahf
notb
popf
mov
fwait
xchg
cli
cmp
mov
into
fisubrl
cmp
ja
sbb
data16
sbb
mov
int
in
roll
outsl
pop
jg
js
adc
mov
mulb
xor
pop
or
je
fstps
cmp
stc
or
jbe
test
lret
stc
push
out
loope
inc
imul
cmp
mulb
and
lahf
mov
mov
push
cmc
and
sbb
mov
xor
inc
sub
jmp
sbb
pop
movsl
push
pusha
xchg
mov
adc
rorb
mov
add
inc
fnstcw
lds
test
cld
push
lsl
adc
mov
enter
sbb
roll
mov
insl
lcall
xor
inc
xor
je
lock
and
lret
hlt
push
inc
lock
pop
loope
gs
mov
js
add
inc
mov
pop
adc
mov
gs
aad
add
flds
dec
push
jns
xor
mov
push
mov
imul
mov
lods
inc
je
je
jecxz
push
mov
sub
xor
fldl
and
fdivrs
sbbb
sub
and
leave
std
ret
ret
sbb
jo
icebp
xor
dec
shll
aad
push
pop
fists
add
and
shlb
or
and
jge
cmpsl
pop
pop
mov
and
xchg
lods
loop
cmp
cs
in
jno
cmc
jl
add
cmc
mov
adc
jecxz
inc
and
mov
leave
fcomip
or
orb
sub
adc
xchg
addb
mov
xor
xchg
mov
add
in
sbb
int3
test
sarl
stos
jbe
fs
pop
sub
sbbb
subl
les
aam
fsubp
shrb
gs
mov
int3
jl
test
or
jbe
lds
inc
mov
xchg
ficomps
pushf
orl
mov
std
stc
mov
cmp
fisttpll
xchg
pop
clc
push
adc
sub
test
test
and
pop
mov
pop
adc
daa
dec
jmp
test
in
lea
push
sub
dec
mov
outsl
test
push
imul
imulb
mov
aad
lcall
int3
js
out
add
cltd
out
adc
sub
pop
loop
inc
test
lods
fnstcw
outsl
popf
cltd
std
stos
lret
daa
clc
or
xchg
jecxz
mov
clc
pop
push
push
xor
lds
pusha
arpl
out
and
xchg
mul
cmp
shlb
inc
cmpsb
or
mov
sbb
xor
mov
cmc
icebp
shll
jmp
lods
rcr
mov
aad
dec
mov
lret
sub
fildl
and
and
mov
inc
testb
lret
cwtl
mov
pop
je
bound
lretw
movsb
rcll
push
add
repnz
pop
push
or
jp
xchg
inc
add
inc
aam
dec
std
icebp
cmp
iret
stos
sub
sbb
inc
popf
sub
jb
jo
dec
inc
hlt
fwait
sbb
cmc
xchg
dec
pop
inc
mov
je
test
xchg
fisttps
jge
rorl
add
lods
xorl
jne
mov
cmpsl
sarb
inc
dec
mov
cmc
sbb
fs
push
outsb
adc
jbe
and
fiadds
ds
mov
mov
fwait
test
and
out
mov
mov
mov
xor
cmc
pop
xchg
cs
mov
dec
mov
pop
leave
sbb
fbld
xchg
lea
fidivrl
outsl
daa
add
out
cmp
dec
daa
or
negl
xchg
mov
shll
sub
clc
sahf
inc
je
movsl
loope
inc
movsl
cwtd
jg
sbb
mov
mov
jl
orb
push
mov
fucom
mov
imul
cmp
jp
xor
icebp
push
jle
xchg
negl
push
mov
jg
adc
xor
arpl
sahf
movzwl
int3
pop
mov
xor
dec
icebp
dec
sbb
jno
add
mov
jns
into
xchg
cmpsb
jnp
fdivr
bnd
loope
sti
idivl
xchg
mov
scas
pop
sahf
shlb
push
mov
xchg
in
push
pop
jecxz
pop
xor
xchg
fldl2t
hlt
adc
jae
and
or
inc
fsubs
popf
popf
mov
fmuls
inc
shlb
std
ja
int
arpl
cmpsb
outsb
les
adc
xchg
icebp
push
or
jp
mov
xchg
test
add
xchg
adcb
or
or
fnsave
fs
scas
arpl
push
lcall
fwait
or
mov
jmp
adc
pop
add
mov
lcall
and
pop
cli
out
mov
ret
movsb
fwait
add
out
ficomps
cmp
push
mov
push
call
repnz
xchg
lock
out
cmp
into
xor
pop
rorl
xchg
mov
sbb
aaa
lods
and
stc
pop
out
sub
mov
cs
xor
xlat
fistpl
jnp
outsl
pop
cmpsl
rcrb
mov
rclb
mov
shlb
into
push
stc
dec
pop
out
bound
inc
in
pop
sarb
dec
xchg
cmp
xchg
mov
shl
sub
rclb
pop
mov
cwtl
js
jmp
cmpsb
jp
fxch
push
adc
int
out
sub
xchg
sub
sbb
outsl
mov
jb
mov
add
cld
sub
scas
sarb
popa
fsubrl
daa
xor
sbb
mov
ljmp
mov
jns
add
or
fstl
lods
je
lock
lahf
lea
mov
dec
movsb
mov
cwtl
std
out
pop
call
xchg
fsubs
int3
xchg
popa
push
in
mov
push
out
fcmovbe
call
rol
push
cmp
dec
lcall
xchg
sbb
or
jle
dec
mov
add
mov
fstps
fadd
push
mov
cmp
xchg
insl
arpl
jno
mov
das
out
std
lock
lea
sub
mov
js
pushf
add
and
lds
pop
dec
fisubrs
nop
push
cmp
rorl
aam
fs
icebp
sbb
xor
sub
jge
lahf
jle
jae
cwtl
push
mov
lock
roll
shlb
out
movsl
mov
das
lcall
fisttps
xchg
sbb
shlb
adc
fidivl
mov
pop
push
sub
stos
mov
repnz
in
cltd
jns
xchg
movhps
adc
int3
mov
sub
jnp
xor
cmp
pop
pop
rcr
push
xor
addr16
mov
ljmp
ret
and
loope
popa
sub
mov
loop
test
push
imul
or
dec
aam
pop
xchg
das
bound
xchg
inc
inc
pop
popf
push
repz
xchg
and
mov
and
or
stos
aam
fildl
mov
mov
jb
pusha
adc
pop
jno
out
je
fisubl
ret
pop
add
sbb
loop
into
cvtdq2ps
lret
fildll
adc
ss
adc
dec
jne
iret
ret
xor
dec
cmp
dec
movsb
hlt
lret
xor
stos
jle
xchg
popa
push
jb
pop
call
je
dec
inc
and
mov
std
push
int3
mov
repnz
outsl
or
adc
ficompl
repz
cld
cwtl
ljmp
mov
cwtl
jne,pn
or
push
stos
notl
push
mov
fs
fdivs
dec
lds
inc
stos
sub
scas
pop
sahf
push
mov
rcrb
or
into
dec
in
xor
push
mov
mov
mov
movsb
daa
cmp
pop
fmulp
stos
lock
add
int
test
push
je
jmp
sub
decb
pop
rorb
dec
pop
jns
inc
dec
push
fistl
mov
jge
or
lock
lahf
bound
sti
in
les
sbbb
rorl
mov
xor
pusha
mov
ljmp
mov
sti
lcall
das
add
insl
inc
or
test
xchg
stos
jmp
in
mov
lret
and
lret
pop
push
jp
ds
fldl
jle
and
clc
pusha
out
ret
push
inc
daa
xor
push
imul
pop
or
sub
xlat
sbb
mov
lcall
mov
mov
repz
nop
jbe
lcall
negl
mov
xchg
xchg
pop
cmpsb
jp
xlat
lea
sti
es
jno
cwtl
ficomps
mov
lret
sub
xchg
leave
fcomps
pop
pop
inc
push
and
das
cs
dec
mov
mov
movsb
sub
addr16
add
mov
jns
cwtl
call
adc
mov
xchg
out
mov
xor
and
and
xor
ds
adc
sbb
bound
vmread
ss
cmp
test
fwait
mov
sub
dec
ljmp
enter
data16
xchg
pop
pop
and
bound
add
lods
push
or
jmp
test
xlat
sbb
sbb
mov
mov
ljmp
fcoml
pop
or
in
push
jmp
jg
rclb
nop
je
loopne
outsb
pop
addr16
sub
lret
jmp
jb
ja
sub
mov
dec
push
push
shrl
and
xlat
je
negb
add
push
jle
stos
negl
mov
xchg
bound
mov
pop
xchg
sbb
fmull
outsb
mov
pop
clc
pop
xchg
imul
inc
dec
xchg
out
cmp
adc
push
adc
mov
pop
loopne
mov
fisubrl
xchg
ret
mov
scas
test
cmpsb
mull
inc
js
shrb
mov
inc
enter
sbb
cli
pop
test
insb
sbb
daa
stc
push
sbb
cmp
add
cli
add
loopne
ds
es
sbb
ss
int3
mov
xor
loope
mov
jl
push
cmp
das
xchg
gs
add
jl
adc
jg
fmul
pop
test
fstpt
cmc
mov
sbb
jae
sahf
push
and
mov
in
pusha
jb
jl
cmp
add
add
ret
inc
jmp
sub
push
dec
rcll
cs
mov
xchg
pop
inc
hlt
out
mov
in
push
or
and
jge
add
and
iret
lods
mov
pop
mov
cli
sbb
ficoms
push
xchg
shr
inc
enter
es
jg
dec
mov
mov
ljmp
test
jb
inc
clc
enter
scas
dec
fs
test
cmp
jge
mov
xchg
mov
cmp
cltd
je
outsb
gs
out
je
and
and
dec
and
popf
jnp
test
sbb
adc
enter
fdivs
mov
cmp
imul
sbb
xchg
cmp
data16
fucomi
jecxz
xlat
outsl
mov
sub
add
push
andb
jo
mov
jbe
test
movsb
scas
movsl
xor
fs
pop
adc
push
jecxz
aas
jge
insl
and
push
clc
shlb
pop
ja
push
sub
adc
imul
negb
shll
and
je
movsb
xchg
ret
mov
mov
arpl
inc
dec
jae
fdivr
or
push
adc
ss
iret
xor
popf
pop
ds
mov
cld
stc
lds
pop
jne
rorl
and
adc
sub
jo
push
arpl
inc
jbe
adc
inc
xor
inc
cs
push
push
stc
clc
lahf
nop
or
je
jae
xor
mov
lea
or
ljmp
inc
jno
dec
push
fisttpll
fnstenv
xchg
mov
push
jnp
pop
out
leave
orb
outsb
les
lods
xor
fsts
add
jecxz
sbb
and
ja
sub
inc
xchg
lods
out
pop
sarb
inc
dec
repnz
iret
loopne
or
fs
lock
mov
in
inc
push
aam
jmp
js
lds
clc
xorb
cli
mov
mov
push
dec
cs
sbb
and
imul
xor
inc
sarl
inc
xlat
jnp
pop
jnp
ret
jle
stos
mov
addr16
mov
sti
jmp
mov
mov
inc
pop
add
jnp
push
sahf
mov
adc
lock
push
pop
cld
cmpsb
sub
cmp
ds
adc
out
sub
data16
cmpsl
xlat
mov
sub
pop
pop
mov
stos
xchg
sbb
pusha
rcrl
push
cld
pop
pop
scas
loope
or
sar
fisttps
add
dec
mov
insb
sbb
pop
pusha
xchg
push
jbe
gs
add
cmp
sahf
dec
mov
lret
xchg
ljmp
repnz
gs
inc
jle
mov
cmp
mov
ret
xchg
cmp
pop
andl
fcoms
and
push
jg
xor
adc
lock
mov
cmpsb
aas
and
mov
adc
icebp
pop
inc
and
jnp
push
jmp
test
andl
bound
daa
or
adc
shrl
cmp
or
pop
sahf
mov
hlt
pop
orl
cwtl
sti
cmp
cmp
jp
dec
cmp
mov
cmpsl
movsb
jb
popf
test
cmp
insb
or
mov
mov
movsl
mov
mov
and
inc
js
sbb
test
out
mov
adc
dec
jae
sbb
xorl
and
ret
ffreep
and
scas
pusha
xchg
xchg
pop
pop
aam
mov
mov
mov
int3
sbb
in
pop
cmp
xchg
and
movsl
inc
push
in
gs
pop
inc
adc
sbb
repnz
in
dec
or
decl
test
dec
fwait
lods
pop
aad
adc
sbb
xor
inc
push
push
lods
adc
or
inc
popf
ljmp
sub
cli
xchg
arpl
mov
in
sbb
sbb
loop
daa
data16
cltd
xor
pop
xorb
lret
mov
and
test
xor
pop
mov
or
add
addr16
pop
out
and
add
aas
inc
aaa
or
mov
idiv
cmp
or
push
int
jne
pop
jno
adc
rol
scas
mov
fwait
test
push
lahf
pop
rcll
jle
cmp
arpl
in
jg
mov
fiadds
inc
cmp
adc
lds
aad
lret
popf
or
pop
lcall
nop
aas
sbb
sahf
mov
cld
push
push
fists
scas
es
into
mov
mov
cmpsb
pop
xchg
cmp
or
dec
mov
xchg
sbb
add
pop
mov
cli
or
or
xchg
xor
or
or
jge
dec
nop
fsubrl
cmp
lret
arpl
sbb
nop
insl
sub
cmp
jnp
jns
pop
ret
enter
out
outsb
or
mov
cld
cld
ret
inc
sub
daa
bound
pop
mov
and
jno
mov
testl
adc
xor
iret
mov
popf
add
push
icebp
ljmp
xor
dec
mull
mov
lods
push
loopne
je
pop
mov
mov
movsl
pop
mov
popf
lahf
ss
jbe
push
and
neg
neg
mov
fwait
mov
test
dec
pop
mov
les
std
je
stc
out
jns
xor
mov
xchg
add
out
rcl
pop
inc
add
cmpsb
les
lods
inc
mov
mov
divl
pop
add
sbb
xlat
cltd
rcrl
inc
mov
xchg
push
sbb
sbb
sbb
fwait
pop
daa
shl
leave
jle
ja
mov
mov
aaa
sub
xchg
fcompl
jmp
gs
scas
push
iret
movsl
outsb
push
mov
dec
mov
mulb
pop
cmpsl
or
cs
sub
lea
out
adc
pop
inc
xchg
in
adc
add
xor
inc
sbb
enter
sub
cmp
mov
pushf
pop
pop
je
nop
popa
sub
movsl
mov
ret
inc
dec
and
aad
xlat
jp
test
adc
or
subb
rcr
add
xchg
mov
testb
mov
les
xor
xor
jle
sub
imul
push
jmp
das
ljmp
out
mov
xlat
sub
mov
cmp
xor
scas
arpl
adc
cmpsl
ja
jbe
das
mov
fsubrs
mov
inc
fisubrl
lcall
lcall
mov
fsubl
fmul
or
xchg
popa
stc
cmpsb
xchg
insb
mov
stos
outsl
lret
and
dec
pop
xchg
xchg
hlt
in
call
aaa
out
pop
sahf
imul
faddp
cmp
pop
out
jecxz
test
and
fwait
roll
dec
out
ss
stos
pushf
xchg
push
stos
mov
jp
mulb
lods
dec
add
mov
mov
add
xor
das
imul
fdivr
aas
das
mov
pushf
cmpsl
jo
cwtl
and
or
and
adc
sahf
insl
mov
fs
ds
test
cmp
xchg
add
jge
in
pop
sub
arpl
les
dec
or
and
scas
mov
aad
mov
mov
das
inc
mov
pop
ret
jle
jb
loopne
xchg
mov
mov
mov
push
mov
add
jns
into
lahf
pop
cmp
imul
pop
das
xorl
push
enter
sbb
dec
push
inc
lcall
xchg
inc
jno
mov
jns
inc
std
sti
push
rcll
and
insl
lret
inc
fdivs
out
movsb
xchg
mov
add
xor
test
pop
ja
imul
mov
cwtl
cmpsb
mov
sbb
aas
outsl
scas
in
cmp
xor
loope
push
inc
xor
pop
popa
jbe
sub
xchg
xlat
pushf
subl
fsts
fwait
mov
aas
not
mov
mov
mov
inc
loop
jb
xchg
outsl
inc
lcall
orb
mov
cmp
jnp
mov
push
or
pop
jl
sub
push
lea
repnz
add
jp
sbb
pop
push
shl
and
jo
fidivrl
dec
loopne
jle
aam
jae
jno
pusha
mov
lcall
jne
sbb
out
out
sub
jo
pop
aad
repz
rolb
sbb
add
add
adc
jl
out
popa
mov
mov
cmp
scas
xchg
xchg
popa
ljmp
mov
dec
mov
mov
or
dec
test
movsl
addr16
mov
push
mov
ficomps
dec
loopne
adc
adc
pop
jl
decb
push
and
mov
cmp
dec
xchg
loopne
and
xchg
mov
bound
jno
jl
mov
adc
xchg
pop
mov
movsb
lods
data16
mov
hlt
ljmp
dec
fbld
not
pop
mov
jecxz
outsb
ss
push
loope
jle
add
test
out
pop
inc
push
shlb
pop
enter
push
gs
pop
jp
mov
inc
mov
nop
out
test
or
pop
cmp
ljmp
aaa
pop
add
mov
stos
add
adc
lcall
popa
mov
aad
jns
rcrl
aad
cmc
imul
mov
add
dec
icebp
jle
push
loopne
push
icebp
fisttpl
or
mov
dec
inc
mov
inc
ss
stos
cmp
es
test
pop
inc
lcall
mov
inc
in
jg
loop
push
mov
loop
outsl
inc
adc
lods
psubsb
popf
pop
fwait
ja
imul
in
les
shl
mov
xor
mov
push
ds
and
imul
lcall
xor
test
ds
adc
iret
cltd
sbb
test
cmp
mov
sbb
in
std
repz
call
enter
cmpsb
movsb
and
leave
mov
call
pop
xlat
jl
xchg
xor
je
movsb
clc
push
inc
inc
xchg
jnp
pop
fsts
rclb
dec
jmp
pusha
mov
or
loope
xor
push
sbb
sbb
pop
or
xlat
aad
sti
stc
and
add
daa
jecxz
icebp
xor
jge
test
mov
pop
movsb
sti
jecxz
mov
mov
cmp
movsl
push
out
call
pop
adc
mov
jg
cmp
jno
sbb
add
xor
arpl
inc
imul
fidivrs
fistl
ljmp
cmc
mov
movsb
mov
pop
sub
push
push
ret
pop
push
or
shlb
cmp
lds
sub
clc
loopne
subl
mov
lahf
mov
jnp
push
sub
inc
mov
sbb
pop
lcall
mov
push
fstl
mov
and
insb
test
mov
jnp
popa
mov
sbb
cli
mov
adc
shr
test
dec
mov
mov
mov
cmp
mov
aam
sub
outsl
mov
fdivrs
hlt
ja
add
jo
in
out
out
in
mov
inc
aaa
xor
add
or
loopne
pop
fdivrs
mov
sub
xor
sahf
mov
or
aaa
mov
cltd
rcl
ret
add
ret
mov
in
mov
mov
iret
xchg
out
push
enter
das
mov
push
adcl
and
cmpsb
fadd
and
aaa
in
es
cld
js
jecxz
pop
rcrb
loope
arpl
dec
in
cmp
sahf
std
in
repnz
mov
add
lods
pop
sub
popf
push
cmp
jl
aam
and
or
pop
sub
or
int
push
repnz
pop
bnd
stos
push
fistps
mov
loopne
xor
out
out
adc
loope
ret
push
adc
inc
dec
fsub
ljmp
fcoms
xor
mov
xor
cmc
in
nop
jnp
sbb
mov
jmp
jl
psrad
jns
pusha
cmp
pop
jne
sbbl
or
dec
xchg
data16
shrl
sub
fmull
arpl
pop
fcom
xchg
pop
rorb
cmpsb
lret
push
mov
ds
dec
repz
call
leave
and
mov
imul
test
push
in
ficoml
push
xchg
push
jecxz
and
push
sbb
roll
or
subb
xor
addr16
or
push
sbb
popa
cmp
xchg
int
lds
xchg
jle
cld
sbb
int
rol
mov
repz
test
rcll
subb
or
inc
lea
xor
mov
push
ret
jmp
popf
pop
test
ret
pop
in
gs
cs
and
xchg
jbe
add
js
sub
sbb
fsubrp
cmp
shll
aas
xchg
jnp
cmp
jno
and
inc
dec
aas
xor
shlb
inc
jecxz
cmp
cmc
push
cmp
dec
data16
rcl
sub
outsb
adc
lcall
dec
jbe
xchg
sub
aad
xchg
adc
pop
dec
or
inc
notl
ljmp
jle
mov
jne
pop
stc
stos
sbb
pop
imul
and
ret
movsb
idivb
xchg
les
test
shlb
mov
fcmovnb
jns
mov
mov
pop
sub
xor
nop
sahf
outsl
and
ret
fst
inc
jecxz
or
or
fs
lcall
sub
add
enter
pmaxub
jl
lcall
push
inc
out
cmpsl
or
sub
adc
ja
inc
ret
mov
nop
arpl
lock
sti
sub
or
aas
repnz
xorl
popf
insl
or
cld
mov
cmp
subps
and
es
dec
lcall
rcrb
mov
mov
aas
xchg
mov
cs
xchg
dec
sub
dec
mov
pop
push
and
inc
mov
pusha
xorl
popf
pop
out
loop
inc
push
nop
fstpl
or
dec
mov
cltd
pop
sbb
add
and
subl
sbb
daa
xchg
lods
adc
stos
inc
xchg
pop
xchg
aas
lock
pop
or
push
mov
pop
negl
imul
and
je
inc
dec
pusha
lea
dec
repnz
dec
gs
test
jno
or
and
shll
jle
xlat
mov
into
hlt
adc
push
jge
test
lcall
and
popf
xchg
lds
push
push
andb
xor
out
push
push
and
or
mov
in
out
and
add
inc
in
push
popa
dec
sub
mov
stos
mov
cmc
sub
bound
adc
sti
dec
jmp
pop
cs
add
xor
dec
test
dec
icebp
pop
test
aad
push
das
push
adc
lods
cvtps2pi
sti
and
ret
jno
inc
incl
jp
mov
add
insb
ja
lea
popf
aad
pop
mulb
cmp
add
out
adc
subl
negl
fistps
jle
xchg
push
in
pop
mov
cmp
pusha
mov
icebp
sbb
pop
cwtl
mov
dec
ds
dec
sar
adc
mov
sub
out
mov
repz
ja
pop
jle
mov
mov
pop
jmp
inc
push
out
ja
ret
dec
sbb
jecxz
jge
lahf
cmpsb
cmpsb
mov
adc
mov
inc
out
int3
ss
loopne
push
mov
ficoml
out
test
cmp
mov
or
enter
insl
mov
rep
int
mov
filds
ljmp
mov
lods
jb
xchg
mov
test
fnstcw
jp
adc
sbb
push
jno
xchg
pop
sbb
ds
push
inc
push
bound
popf
lahf
popf
sti
aam
std
ss
lods
jp
push
stos
jns
push
mov
insl
dec
repz
mov
sbb
mov
xchg
arpl
jl
mov
dec
shrl
and
daa
mov
sbb
jecxz
xchg
jg
imul
cmp
gs
addr16
stc
jno
scas
xchg
test
xchg
xchg
daa
inc
push
fiadds
movsb
or
ja
addl
pop
in
xchg
fwait
repnz
dec
mov
cmp
inc
jns
sahf
data16
sahf
fsts
and
fildll
incl
jnp
pop
cmp
movsl
outsl
out
xor
aam
push
je
ror
inc
inc
test
jo
dec
rorb
sub
jae
out
sti
jecxz
lds
fildl
sub
mov
mov
out
lds
pop
inc
aas
and
gs
divb
mov
aam
and
push
jp
in
push
and
clc
popa
adc
lock
and
scas
fwait
stos
filds
jnp
adc
out
mov
mov
or
jmp
cmp
xor
lahf
jge
push
jb
mov
fcmovne
mov
add
loop
push
enter
mov
idivl
jl
jg
pop
nop
out
sahf
sbb
ret
orb
mov
pop
in
into
stos
test
adcb
mov
aaa
adc
mulb
int3
mov
mov
in
and
sub
mov
negl
dec
hlt
dec
fs
hlt
rcr
inc
push
add
add
pop
cmp
mov
mov
pop
in
inc
cmp
popf
insb
insb
pop
sbb
mov
aam
popa
ret
in
add
push
fdivrl
aam
xchg
sbb
xor
dec
sub
das
aam
mov
pop
push
or
lret
jle
or
out
jmp
aam
test
jbe
daa
bound
sbb
and
pusha
rcll
mov
fsubrl
in
push
outsb
shrb
sbb
test
push
ffree
xchg
add
sub
mov
mov
pop
mov
inc
std
mov
push
shll
lds
jg
movsl
adc
arpl
shlb
push
xor
sbb
das
cmpsl
clc
xor
xor
mov
ret
adc
pop
enter
je
push
sub
adc
adc
sar
push
adc
in
cmp
xchg
les
scas
mov
mov
sbb
xlat
pop
adc
xchg
mov
sbb
pop
and
push
out
push
add
or
lcall
test
fdivs
or
pop
pop
adc
mov
cmp
mov
add
lods
xchg
jb
inc
out
xchg
mov
test
testb
pop
push
and
mov
dec
popf
adc
insb
ret
mov
dec
outsl
push
mov
sub
imul
mov
xlat
jp
and
mov
test
scas
pop
sub
subb
mov
scas
mov
sub
lods
test
mov
xor
stc
push
inc
enter
test
xor
fidivrs
stos
stc
mov
test
mov
mov
dec
xchg
pop
push
jle
arpl
fiadds
sti
and
add
jl
cltd
add
adc
push
fcomps
scas
xor
add
jl
imulb
sub
cmp
cmp
inc
mov
xchg
testl
lea
lcall
sbb
cmp
xlat
pop
es
sub
push
mov
dec
push
push
cmc
jmp
adc
icebp
mov
and
cmp
cli
sarb
iret
hlt
loop
push
sub
negb
rolb
js
imul
push
mov
loop
xchg
lods
dec
dec
inc
sub
sbb
shll
pop
loope
sub
int3
ss
jns
mov
xor
std
fidivrs
sbb
dec
js
inc
xor
mov
jno
mov
cmp
int
in
fwait
xlat
hlt
pop
push
loop
push
stos
xchg
div
dec
cmc
and
or
cmpsl
or
push
and
cmp
insl
sbb
cmc
inc
cmpsb
repz
ret
in
dec
xor
iret
xor
jb
in
xchg
dec
je
jl
cmp
jne
inc
add
or
cmp
mov
mov
add
dec
sub
mov
cmp
repz
mov
pusha
pop
fchs
lock
loope
test
enter
adc
and
mov
enter
cmp
inc
shlb
fnstsw
rol
adc
movsb
addl
fs
and
push
dec
add
xlat
mov
push
mov
pop
test
insb
push
sbb
xchg
cltd
dec
inc
fadd
and
rclb
sbb
xor
xor
xor
fwait
mov
int3
dec
pop
clc
inc
pop
and
cli
inc
js
cmp
repnz
aas
sarb
cmpsb
mov
adc
mov
lods
rolb
add
enter
push
adc
xor
lret
push
shlb
ret
stos
mov
insl
adc
xchg
pop
hlt
and
inc
mov
jnp
iret
inc
push
jl
sub
test
movnti
scas
es
stc
inc
stos
sbb
xchg
xor
xchg
mov
xchg
int
add
lock
daa
mov
div
adc
daa
or
inc
xor
mov
jo
mov
push
pop
cmpl
push
leave
push
push
mov
mov
dec
or
pop
popa
push
sbb
add
movsb
lods
lret
push
jg
aaa
push
xchg
loop
jb
ffreep
inc
insb
lods
sbb
lods
fsub
jecxz
das
jle
xor
pop
lahf
fsub
das
mov
in
xchg
and
jecxz
aam
lret
iret
jl,pt
and
ljmp
pop
jns
mov
xchg
testb
leave
push
pushl
xchg
scas
push
pop
or
cmpsb
and
rcll
stc
sti
fidivrl
and
rcrl
dec
and
jge
fidivrs
sbb
pop
push
mov
cwtl
out
jne
insb
inc
add
aam
loop
in
cmp
imul
and
mov
sbb
out
ret
nop
lock
loop
cmp
jmp
test
fbld
push
inc
inc
inc
push
push
insb
hlt
rorb
fwait
or
add
sbb
insl
sub
lahf
cmp
shlb
lea
add
movsl
test
adc
jb
inc
and
insb
shrb
lret
fcoms
test
mov
out
shl
jae
xor
xchg
clc
rcrl
inc
jae
mov
sahf
xchg
add
sub
lahf
int3
es
mov
outsb
mov
mov
lcall
mov
dec
cld
jle
dec
lea
mov
icebp
cmp
cmc
fsubl
mov
sub
mov
stos
and
test
bound
pushf
push
jne
xor
aam
push
test
sub
out
xor
arpl
xor
or
ja
fisubrs
xchg
in
adc
ret
xlat
pushf
jbe
scas
int3
shrb
jae
jmp
leave
jo
push
mov
clc
pop
shlb
jae
dec
enter
ret
aad
ljmp
cmpsl
pop
cmp
mov
xchg
xchg
mov
jge
jo
loopne
je
lret
dec
xchg
pushf
add
add
or
jne
faddl
je
cmp
add
mov
shrl
test
xor
add
movsl
divl
insb
jnp
mov
les
push
int
xlat
sbb
sbb
shrl
lret
push
sub
in
cmp
xchg
jns
xchg
push
push
and
gs
inc
aam
test
cmp
scas
or
or
loop
lods
inc
add
subb
push
add
sbb
test
push
add
out
xor
int3
mov
cmp
sbb
xor
cmpsl
pushf
fwait
daa
sub
xchg
mov
fidivrl
pop
push
cmp
xchg
icebp
jle
mov
pusha
dec
jecxz
imul
jle
arpl
add
lret
xor
daa
or
sbb
push
movsl
in
push
xchg
inc
pop
testb
fnsave
cmp
push
inc
in
inc
fdiv
push
test
dec
shl
jbe
notl
lcall
or
shrl
inc
aas
mov
cltd
xor
lcall
popf
lods
cs
mov
xchg
cli
jle
jg
xchg
mov
out
or
dec
movl
hlt
push
sub
push
and
jne
add
shl
daa
insb
imul
fmul
repnz
mov
and
inc
xchg
ret
xor
ror
pop
cmp
mov
jb
sub
push
and
decb
mov
out
dec
shrb
add
lock
and
ljmp
bound
sbb
push
ficoms
inc
insl
mov
adc
add
cmpsl
scas
loop
testb
mov
mov
sub
and
pop
repz
sbb
icebp
pushf
jno
and
inc
loop
mov
sti
aaa
or
xchg
adc
stos
push
adc
fmuls
mov
mov
fsubl
ret
pop
sub
jns
cmp
dec
pop
push
xchg
test
cld
xchg
lret
sbb
hlt
inc
cmc
lock
mov
mov
jl
shr
mov
jle
mov
loope
test
iret
nop
addr16
push
sbbb
xchg
outsl
call
neg
fadds
icebp
pop
loopne
mov
sbb
sbb
mov
mov
and
sahf
xor
push
cmpsb
inc
popf
xchg
mov
jnp
sub
ret
inc
test
jg
mov
ss
jno
xchg
dec
push
les
sarl
imull
mov
stos
nop
mov
cmp
loopne
jno
fistpl
xor
push
mov
sub
sub
sbb
jbe
in
pop
lahf
xlat
call
lea
ret
std
xor
dec
fbld
arpl
pop
mov
mov
fldenv
add
aam
mov
rcrb
xlat
xor
les
ljmp
test
push
pop
fiadds
pop
or
xor
jae
add
inc
jmp
jae
or
push
nop
dec
in
or
mov
add
cmp
imul
inc
int3
mov
inc
mov
dec
daa
or
xorb
outsb
nop
neg
hlt
es
faddl
cmp
fucomip
push
mov
fcomps
jge
int3
inc
arpl
adc
stos
out
arpl
call
aad
inc
jb
stos
aam
rcl
js
shr
jl
mov
sbb
pop
jb
mull
outsb
sbb
cmp
imul
xor
cwtl
inc
mov
xor
scas
mov
push
cli
in
xchg
jns
and
sub
inc
xor
inc
mov
fwait
and
sub
mov
lret
fdivs
jle
jne
rcl
push
jb
jne
jnp,pn
aad
jp
loopne
lods
out
shl
mov
sbb
into
or
adc
sbb
jmp
adc
hlt
xchg
or
daa
xchg
clc
rclb
jge
adc
mov
xchg
imul
or
in
xchg
scas
mov
dec
push
cmp
clc
jmp
mov
pop
sbb
pop
scas
loope
rol
sub
outsb
je
cmp
mov
push
movsl
in
out
cltd
inc
pop
addl
sbb
clc
sub
and
mov
push
dec
xchg
mov
std
ljmp
in
fsub
fistl
inc
icebp
sub
inc
seta
xor
loop
xchg
arpl
imul
lods
or
fimull
adc
push
sbb
cld
cmp
idivl
aam
inc
xchg
dec
inc
cld
aad
cmpsl
sbb
cltd
mov
je
in
stos
adc
cmpsb
sub
pop
int
pop
repz
ss
mov
imul
cmp
addb
out
jne
out
inc
fldcw
push
xor
int
pop
rolb
insb
mov
xor
dec
sub
push
dec
sbb
cli
loope
loop
leave
popa
jae
add
nop
inc
xchg
mov
test
std
gs
ficoms
fisubl
or
aad
and
iret
sahf
mov
stc
ds
jno
add
inc
mov
inc
add
sbb
push
and
out
add
or
lock
das
mov
adc
mov
cli
push
divl
aas
xor
pop
add
jp
add
push
sub
popa
or
rol
pop
daa
mul
leave
shll
cs
xlat
cmpsl
cmp
or
and
and
jmp
inc
loopne,pn
rcll
mov
jne
sbbl
adc
or
cmp
xchg
or
xchg
dec
push
adc
lret
xor
sub
or
mov
pop
cld
imul
es
call
test
inc
sarl
adc
fiadds
ret
sbb
xchg
lea
ret
jne
lret
and
fisubl
sub
movsl
mov
pushf
sbb
cmp
dec
or
xchg
pusha
sub
out
adc
and
pop
jne
ret
xchg
mov
xor
adc
lods
stc
gs
sbb
inc
push
pop
adc
mov
jle
stos
dec
and
mov
addr16
cwtl
fcomps
jo
jno
mov
imul
stos
push
pop
outsl
addr16
jno
in
adc
dec
punpckhwd
inc
mov
pusha
mov
ds
mov
pop
push
stc
dec
gs
lcall
inc
mov
inc
hlt
nop
fbld
inc
out
jle
cltd
ds
repnz
lahf
mov
imul
adc
aam
cmp
fidivl
lds
mov
mov
test
jl
aaa
push
fidivl
call
mov
cwtl
sub
movsl
push
out
outsl
xchg
popa
pusha
sbb
pusha
xchg
mov
iret
lret
mov
call
insl
xor
aam
xchg
pop
jg
sbb
in
and
sub
imul
mov
cmp
inc
dec
test
fstpl
mov
pop
sbb
push
fdivs
adc
out
and
fcom
dec
out
cmp
or
push
sub
int3
fidivl
and
xorb
sub
in
push
pusha
mov
pop
pop
add
mov
loop
bound
mov
xor
test
pop
shlb
xchg
das
cwtl
test
sub
add
lods
test
xor
std
jb
mov
jno
and
or
mov
ret
mov
rclb
or
out
sub
cmpb
daa
push
jp
mov
stos
dec
sbb
pop
push
pop
popa
insb
leave
cmp
loop
sbb
adc
cmpsb
xchg
mov
sub
sahf
movsl
sahf
je
lods
jp
sub
pop
in
and
jns
add
sbb
cltd
shrl
mov
out
mov
pop
sbb
xchg
sub
mov
pop
mov
jp
cltd
mov
lahf
mov
in
pop
and
outsb
mov
cmpsb
dec
add
or
sbb
dec
push
pusha
pop
mov
lods
sbb
or
stc
cmpb
popf
int3
dec
xchg
fnstsw
fs
repnz
sbb
mov
xchg
mov
add
xor
repz
push
clc
or
movsb
and
sub
and
cli
and
sub
ds
xor
mov
test
aam
movsl
pop
xchg
pop
lea
push
mov
and
ret
cmpsb
popf
iret
lcall
or
filds
repz
adc
jge
ftst
mov
into
mov
ss
inc
fistps
lods
outsl
pop
xor
shl
push
sub
rep
sub
jbe
mov
push
pop
or
scas
emms
fs
jb
arpl
lea
and
jmp
fildll
cwtl
push
pop
dec
lret
aad
push
dec
cld
or
mov
sbb
lds
in
push
xorl
pop
mov
fcmovbe
orb
pop
jbe
push
in
cmp
dec
lahf
aaa
or
jns
arpl
repz
idivb
aad
and
enter
inc
add
or
or
dec
or
fcoms
data16
pop
cmp
shlb
test
imul
or
subl
jg
aam
divl
push
fldl
sbb
mov
dec
imul
push
rcpps
add
je
xor
jo
fbld
mov
aad
xor
out
scas
mov
dec
xchg
push
and
mov
test
ja
xor
xchg
jnp
rclb
push
push
and
sbb
cld
pop
out
lret
movsb
rolb
enter
or
pop
icebp
and
lds
loop
int
xchg
stos
mov
adc
mov
push
jns
cs
add
jno
outsl
ss
data16
jmp
adc
jae
into
loope
or
sbb
insl
shrl
fisttpl
lcall
or
xchg
jns
or
dec
jnp
movsl
inc
sub
adc
jb
jl
inc
repz
test
mov
or
daa
es
push
pushf
lods
inc
jmp
xchg
les
aam
fcoml
xor
and
mov
stc
mov
rclb
pop
dec
add
xor
fsubrl
inc
mov
fwait
jle
notl
test
push
inc
in
xor
xchg
jb
loopne
add
jp
roll
jo
movzbl
mov
mov
mov
adc
mov
mov
in
loope
cmpsb
stc
cwtl
xor
jns
inc
or
cmp
ret
mov
push
sarb
jno
cmp
jl
lahf
fwait
xchg
cmc
mov
aaa
sub
adc
lods
ret
pop
nop
aas
xor
and
sbb
test
movaps
rorb
lds
scas
and
call
fadds
xchg
sbb
popa
pop
inc
insb
push
inc
repz
iret
into
sub
cli
clc
int
add
mov
push
std
lahf
push
gs
loop
int
les
dec
cmpsb
push
jbe
test
cmpsl
std
cmovs
mov
add
jg
or
lahf
mov
pop
scas
lcall
mov
sbb
daa
cmp
pop
cmc
popf
mov
movsl
mov
inc
pop
in
xchg
lahf
pushf
or
pop
lea
mov
shll
aaa
add
push
adc
gs
adc
cmp
cmp
pop
shrb
xor
in
imul
repz
orb
fsub
dec
repnz
mov
mov
mov
pushl
enter
je
add
xchg
lock
in
adc
sbb
push
int
jne
xor
imull
mov
repz
shl
pop
iret
int
mov
mov
or
adc
gs
jnp
mov
xor
push
es
ret
fucom
icebp
or
xchg
hlt
add
jo
push
sbb
in
scas
das
movb
mov
aas
inc
lods
dec
pop
xlat
push
jns
fdivl
mov
incl
xorl
dec
mulb
bsr
iret
fbstp
enter
stos
pop
adc
shrl
bound
dec
adc
jnp
cld
jb
push
jbe
inc
fsubp
push
es
fidivrl
mov
jp
gs
adc
adc
lea
sbb
push
rcrb
adc
cli
neg
pop
mov
jnp
cs
lods
pop
and
mov
test
mov
jge
adc
pop
pop
sbb
xchg
and
sbb
int3
cmp
hlt
jmp
fmuls
aas
adc
stc
ja
jae
xor
lret
and
ss
pop
sbb
jge
cs
pop
mov
pop
lock
in
sahf
icebp
adc
imul
inc
adc
ss
jge
int
aam
jmp
fisttpl
xchg
inc
xchg
mov
ficomps
adc
inc
push
and
mov
scas
loope
stos
clc
sbb
cmpsl
jae
lret
xchg
mov
test
jmp
fistps
bound
cmc
lock
pop
dec
cmpsl
daa
cmp
mov
sub
arpl
je
push
in
xchg
fcmovb
aam
inc
xor
notb
lods
mov
cs
or
mov
insb
jo
pop
and
add
pop
call
jno
mov
addl
subb
inc
or
in
jns
out
jle
xlat
imul
aaa
cltd
push
mov
test
sbb
and
stos
xchg
inc
add
int3
jo
and
rcl
ja
pop
jmp
inc
sbbb
sbb
arpl
mov
xchg
xchg
cmc
ret
shlb
inc
push
popa
icebp
and
jbe
mov
sbb
push
xchg
je
pop
mov
mov
and
arpl
push
mov
pop
sbbb
mov
popa
call
push
cmpsl
adc
sbb
fsts
je
repnz
aas
sub
jb
pop
add
insb
pop
add
cmpsb
imul
jno
mov
xchg
mov
jnp
adc
dec
xor
or
pushf
mov
add
push
mov
je
push
ja
adc
shll
movsl
enter
or
scas
adc
imul
nop
lods
sbb
cmpl
dec
mov
insl
rcrl
aaa
int
push
xchg
jbe
ret
test
pop
xchg
int3
subb
lret
pop
gs
fsubl
shrl
sbbl
adc
inc
pop
pushf
xor
std
das
das
mov
mov
lcall
ret
mov
andb
call
shlb
shll
ja
cltd
ret
loopne
or
mov
sti
jl
mov
or
movsb
push
adc
mov
mov
stc
fbstp
add
inc
push
imul
pop
ret
rcr
push
push
jl
shll
in
xchg
in
imul
dec
push
out
sahf
jecxz
pop
push
inc
add
or
incl
das
hlt
or
dec
jnp
pop
cmpsl
pop
pop
aaa
pop
or
push
loop
loopne
es
int
jne
scas
inc
mov
into
sub
xor
jge
mov
lret
sar
lahf
ror
psubb
adcb
out
fidivrl
dec
lods
and
adc
es
add
hlt
push
add
stos
and
fucom
andb
in
jnp
shr
fiaddl
jno
outsb
or
mulb
insb
or
in
fcmove
mov
mov
syscall
xor
jne
jb
stos
pop
sbb
jne
sub
int3
sub
dec
das
add
pop
xchg
mov
in
sub
push
inc
hlt
sub
adc
pop
mov
inc
push
addl
rcr
fwait
inc
cmp
pop
cmp
sti
push
jns
popf
es
in
lcall
inc
mov
pop
jle
cmp
sti
jge
push
mov
hlt
and
leave
push
stos
adc
cmp
jb
in
aaa
les
inc
pop
add
push
sub
inc
sbb
mov
sbbb
add
jo
dec
push
xchg
das
xchg
add
and
repnz
xchg
mov
cltd
fldenv
les
cltd
pop
clc
jle
inc
inc
mov
cmp
iret
jmp
lods
fwait
xchg
idiv
dec
int3
aam
shlb
cs
jnp
xor
mov
nop
inc
sbb
aam
aas
jno
mov
mov
adc
aad
leave
mov
mov
xchg
in
mov
jno
cmp
pop
pusha
in
pop
jae
and
je
mov
jns
xor
push
outsb
xchg
call
je
shl
xchg
aaa
push
push
mov
movsb
jae
mov
lods
insl
sbb
cmp
lods
jne,pt
rorb
in
adc
jge
xor
loop
rolb
dec
clc
cltd
jg
mov
scas
xor
aaa
push
sub
pop
xlat
cli
outsl
or
xchg
arpl
rdpmc
rcrb
cmp
and
xor
mov
mov
adc
ret
or
mov
js
ja
adc
mov
push
lods
mov
mov
inc
cmp
jl
jp
pop
les
add
and
lret
cmc
rcll
xchg
inc
xchg
xchg
push
loopne
inc
dec
daa
shl
push
sub
mov
mov
adc
int3
fisttpl
xor
sub
popf
push
adc
js
jge
pop
jae
xchg
or
insl
mov
inc
push
or
jbe
mov
pop
test
jge
insb
mov
stos
aad
adc
js
sbb
cwtl
mov
cwtl
lock
idivb
aaa
mov
mov
xchg
mov
lret
adc
ss
lods
xlat
sbb
ror
xchg
idivl
inc
lea
in
cmp
cmp
ljmp
fsubr
jecxz
push
or
dec
out
adc
mov
add
test
data16
pop
mov
hlt
lock
es
pop
test
jo
mov
jl
inc
add
int3
sbb
push
pop
xchg
fsubl
sbb
cs
pop
pop
pop
ret
in
mov
addb
xor
outsl
pop
movsb
and
and
jle
jl
call
in
andl
jg
mov
add
push
movsb
xchg
test
pushf
int
sbb
inc
mov
dec
aaa
outsb
xchg
push
cmc
or
jle
mov
lods
xor
pop
iret
mull
lcall
cmp
jnp
xchg
in
jg
mov
cmp
push
pop
add
add
shlb
dec
mov
and
mov
mov
xor
stos
cmpsl
push
andb
rcrb
push
jnp
div
cmp
mov
and
push
jnp
loope
fcmovbe
hlt
mov
jnp
adc
add
xlat
rcrb
das
test
shrl
lahf
sar
fs
aad
mov
pop
and
outsl
jo
dec
xchg
adc
jmp
fbld
mov
push
adc
pop
sarl
xlat
mov
shl
xor
shll
iret
inc
sti
fimull
pop
xor
jb
ja
mov
push
into
or
lcall
push
pop
mov
lret
stc
sub
loope
push
jg
ja
pop
sahf
mov
and
cmc
negb
cltd
cmc
and
xor
push
mov
push
sub
add
xchg
test
fldcw
js
add
cli
push
repz
or
inc
arpl
ret
dec
and
adc
xor
push
fnstcw
jecxz
pop
insl
xor
xchg
insl
adc
nop
push
jmp
mov
dec
aaa
inc
filds
in
mov
out
pop
into
inc
push
pushf
call
add
sbb
sub
test
out
and
pop
add
push
fidivrs
inc
lret
inc
mov
cmp
sbb
jb
test
sub
inc
jmp
lret
addr16
xchg
inc
xchg
sbb
jo
pop
cmp
cld
sub
jecxz
lds
sbb
dec
cli
jle
xor
xchg
jne
pushf
aaa
loopne
hlt
sub
cmpsb
fdivp
mov
mov
outsb
push
sti
pop
lahf
inc
sti
inc
mov
fucomi
mov
in
insl
mov
xchg
addb
inc
and
sahf
aas
cltd
std
testl
pop
js
inc
push
mov
sbb
cmpsl
xchg
loopne
scas
adc
pushf
iret
mov
pop
mov
and
sub
arpl
testl
cmp
mov
jl
ds
lret
pop
test
arpl
sbb
std
dec
shlb
mov
aaa
xchg
popf
cmp
scas
in
insl
pop
lcall
inc
add
and
mov
or
cwtl
push
jmp
cmpsl
jno
cmc
out
pushf
adcl
int3
lods
mov
inc
mov
pushf
mov
ds
lods
pop
in
mov
adc
cmp
hlt
div
sbb
push
mov
jae
mov
cmp
fisttpll
sbb
push
jge
div
jae
outsb
jp
dec
fs
repnz
lock
mov
hlt
jns
push
lods
dec
cltd
mov
lods
jno
int3
mov
push
cmp
rorb
mov
inc
mov
mulb
jecxz
cmp
clc
pop
jno
or
dec
jb
or
stc
cltd
mov
mov
sbb
gs
addr16
out
and
lret
popa
push
inc
pop
and
and
push
adc
sub
cmpsl
clc
and
dec
inc
or
adc
movsb
pop
std
mov
fdivrs
jmp
jo
fbstp
xchg
shrb
push
pop
sub
mov
mov
out
adcl
adc
lods
out
negb
sbb
in
stc
rcrl
test
mov
cltd
in
lcall
fstl
cmp
cmpsb
adcb
das
repz
inc
dec
ficoml
pminsw
mov
inc
cmc
mov
jmp
inc
lret
jns
lahf
in
stos
arpl
jno
jne
insl
bound
movsb
add
clc
fnstsw
sub
hlt
call
loopne
aas
lock
into
and
mov
push
jae
mov
sub
or
test
mov
pop
push
test
sub
fmulp
xchg
mov
mov
and
sarl
fadds
arpl
xchg
dec
addr16
movsb
mov
stc
add
out
ret
dec
mov
fiaddl
sub
mov
lods
jle
mov
push
test
dec
call
ja
fisubl
and
in
mov
test
loopne
mov
inc
je
mov
add
push
lock
or
test
jae
push
dec
mov
daa
sysenter
aas
mov
popa
mov
lods
jne
lods
lds
mov
jb
dec
pop
test
dec
lret
mov
or
mov
sub
rcll
adc
je
inc
lods
inc
scas
mov
mov
pop
push
aas
ret
jg
mov
into
adc
sub
lock
jae
clc
mov
mov
or
adc
xchg
xlat
xchg
les
mov
mov
xlat
mov
mov
addb
inc
movsb
and
not
pop
pop
push
test
pop
icebp
aam
and
mov
cmc
push
ret
hlt
push
inc
mov
popf
or
out
test
iret
les
std
pop
test
jmp
bound
xchg
rep
stc
loop
or
xchg
jg
sbb
movl
adc
sbb
cmp
jl
pop
xchg
push
sti
idivb
pop
inc
jle
dec
mov
ljmp
test
pop
sub
lock
stos
xchg
cmp
jp
add
lea
jb
xchg
popa
mov
inc
fcompl
sub
into
pop
mov
cld
push
int
mulb
int
add
xchg
dec
dec
adc
mov
shr
xor
add
orb
xor
xchg
scas
and
jne
sti
xchg
call
dec
mov
stc
push
or
sbb
ja
icebp
es
cmpsl
ja
cmp
fiadds
scas
mov
icebp
daa
mov
pop
jecxz
xor
or
xor
sub
ffree
push
dec
jb
sub
adc
out
xchg
mov
inc
add
out
movsl
and
mov
xchg
inc
iret
fsubs
in
inc
clc
addb
ds
push
iret
nop
push
xchg
add
fdivrl
cmp
cli
sbb
nop
ds
mov
mov
cmpl
xchg
jmp
lret
lret
lds
jbe
enter
roll
lahf
sub
pop
push
pushf
fs
fsubrs
jns
lea
fs
pop
inc
addr16
stc
mov
cmp
lret
enter
sahf
cmp
lds
out
sti
jbe
mov
jns
inc
push
lds
add
lcall
xor
cmc
rcll
mov
sbb
gs
mov
ds
jbe
in
mov
pop
dec
movsb
out
popf
into
inc
repz
gs
or
movsl
dec
lods
ljmp
pushf
ret
jmp
adc
push
cmpsb
int
xchg
lret
xchg
movb
mov
div
jae
ret
mov
mov
xor
lret
cmp
out
cmp
or
cmp
retw
push
in
test
xchg
xchg
loope
pop
popf
jl
je
xchg
pusha
and
xor
or
and
fbld
xor
ss
imul
cltd
and
xchg
mov
pop
or
pop
fiaddl
push
test
les
sub
sahf
fadd
stc
or
shl
int
jno,pn
int
iret
mov
fsts
in
pusha
inc
mov
and
cld
cli
in
xchg
repz
xor
xor
add
sub
fs
mov
push
int3
ret
ret
inc
add
cli
stos
int
cwtl
sbb
jae
in
push
rcrl
imul
gs
fstps
lds
push
jp
loop
imul
test
sub
adc
add
int
mov
add
pop
pop
xchg
fs
testb
stos
inc
outsl
push
imul
mov
aad
int3
jo
pop
rclb
dec
imul
pand
pop
cmc
fldt
mov
xor
push
lahf
xchg
fs
dec
jecxz
cld
cwtl
pop
inc
rcl
mov
xchg
or
call
out
mov
adc
hlt
mov
pop
inc
mov
push
punpckhdq
add
or
push
push
push
or
jl
loopne
sub
and
popf
adc
sbb
pop
ret
imul
mov
or
push
push
and
addr16
enter
xlat
mov
lds
mov
pop
pop
mov
cmp
ret
xor
aas
pop
imul
or
xor
ds
sub
pop
adc
shl
and
jl
sbbl
outsb
add
pop
mov
inc
mov
lahf
jecxz
add
cmpsl
fld
cmp
ljmp
xchg
mov
int3
jo
jmp
adc
imul
repz
lcall
sub
je
cmp
ss
sub
or
jne
addl
inc
dec
adc
cmp
aaa
cs
fistl
in
xlat
xor
jns
mov
pop
push
push
push
call
lcall
clc
mov
stc
cmp
imul
mov
sbb
push
pusha
fs
ret
cmpsb
sbb
sbb
cli
dec
mov
adc
dec
pushf
hlt
mov
divl
or
movl
fldcw
cmp
dec
mov
pop
jbe
xchg
adc
push
repnz
jno
push
loopne
pop
fcmovb
push
dec
pushf
mov
xchg
mov
mov
xchg
inc
out
js
icebp
or
push
cmpsb
loopne
jecxz
mov
roll
dec
inc
xor
lods
int3
loopne
jno
cwtl
inc
push
and
aam
mov
fsubs
mov
pusha
xchg
das
jne
fucomp
and
sbb
xor
nop
xchg
xchg
or
pusha
pop
fsubrs
push
pop
fdivl
push
mov
inc
add
jne
loopne
loopne
dec
mov
mov
aas
fsubr
sub
fsts
jne
add
iret
pushf
data16
int
in
mov
imul
pushf
pop
rorb
mov
cmp
imul
cmc
mov
mov
jno
scas
xchg
and
and
mov
cmp
pop
pop
xchg
pop
add
lret
jne
in
movsl
ljmp
orl
jae,pt
push
fbld
push
arpl
and
dec
pop
pop
mov
xorl
mov
data16
inc
movsl
sub
and
mov
add
xor
xchg
sub
movsb
out
push
daa
mov
test
or
cmp
iret
mov
neg
push
mov
or
push
dec
inc
and
lret
cs
xchg
sbb
rorb
cs
push
push
sub
rolb
xchg
xchg
mov
add
jecxz
sub
divl
out
xor
inc
hlt
jno
inc
dec
movsb
jnp
or
imul
lahf
test
sti
xor
aam
gs
add
andl
push
dec
cmp
dec
cs
mov
mov
dec
cmp
push
test
xor
sbb
dec
xor
fcomps
xchg
mov
mov
pushf
std
xchg
push
jae
cli
jnp
cmpb
xchg
sub
pop
mov
sbb
pop
add
pop
sahf
fdivrl
aam
rorl
push
or
in
iret
repz
jb
jno
add
mov
fsubl
mov
movsl
jecxz
ss
jp
pushf
fnstsw
popf
adc
inc
lret
in
push
popf
movsb
test
or
sub
es
add
ljmp
sbb
jo
fld
xor
cs
pop
xchg
je
cmp
loop
rcrb
fsubl
aaa
push
mov
cmp
sub
scas
mov
mov
popa
loop
sbb
push
fnstcw
test
fwait
mov
mov
rol
clc
imul
inc
addl
pop
pop
cmp
xchg
gs
adc
mov
lods
outsl
xchg
icebp
or
lds
fsubrp
xor
out
dec
scas
sahf
popf
mov
in
add
clc
daa
bound
out
cmp
cmpsl
xchg
cmp
fwait
cmp
mov
add
pop
pop
xor
inc
push
dec
fucomi
push
mov
enter
add
rclb
inc
mov
push
adc
shlb
push
ss
aad
add
mov
mov
fsubrs
cmp
scas
cmpsl
xor
fistps
outsb
rorl
ss
cli
fildl
frstor
shl
shll
into
push
aas
iret
sub
das
jg
loopne
inc
sub
add
pop
and
imul
mov
mov
pop
arpl
div
and
push
out
dec
loop
sub
mov
push
dec
mov
mov
inc
xor
xchg
mov
mov
bound
or
outsl
jecxz
popa
stc
xchg
movsb
push
jns
xor
pop
inc
inc
jmp
mov
push
syscall
jmp
xor
bound
push
loopne
xchg
fs
iret
lds
jnp
jno
mov
leave
or
pop
rol
jmp
pop
mov
pop
sbb
movsb
sub
pop
sub
mov
enter
sub
scas
dec
inc
mov
stos
ljmp
sbb
jo
fmul
mov
or
imul
mov
mov
mov
inc
sahf
fsubs
push
lds
int
es
test
mov
push
push
cmpsb
imul
popa
push
out
mov
cmp
ds
xor
sub
pop
jne
and
sahf
aam
add
ds
push
outsb
lret
inc
mov
add
sub
push
out
in
xchg
aas
sti
xorl
sub
sbb
ftst
xor
cmpsb
mov
test
cltd
xor
testl
pop
jp
mov
ret
fstpl
sbb
add
xchg
jne
mov
add
lods
or
fst
jno
pop
cltd
and
mov
in
shrb
sub
ja
lret
lret
mov
sti
xor
ljmp
xor
push
out
mov
fidivs
dec
fistpll
jae
mov
cwtl
cmp
xchg
lret
nop
shlb
inc
scas
rcr
xchg
adc
jbe
mov
popf
push
sbb
pop
outsb
xor
ljmp
and
lods
mov
mov
orl
push
nop
mov
lock
fisubrl
fists
xor
inc
dec
cmp
xlat
mov
test
mov
or
push
lock
jl
aaa
push
int
scas
lret
int
rclb
add
cmp
or
into
dec
shl
cmp
xchg
xchg
inc
lcall
ja
push
clc
mov
call
lret
mov
push
into
jp
jg
dec
lock
lret
cs
stc
sub
pop
pop
sti
sbb
pop
jmp
shlb
les
cs
or
mov
ljmp
sbb
mov
leave
fsubrl
in
arpl
mov
call
adc
mov
xor
lret
and
outsb
xchg
std
test
imul
bound
sbb
push
sbb
mov
loope
dec
cmc
dec
out
jecxz
sub
xor
insl
loopne
xlat
rorb
cmp
pop
test
pop
mov
test
popf
sbb
xchg
repz
sbb
fs
sub
cmp
aad
xor
cmp
pushf
jnp
xor
mov
add
aaa
aad
add
dec
rcrl
xor
sbb
mov
inc
mov
stos
dec
fcmovnb
add
icebp
mov
mov
jae
jmp
and
sub
rcrl
sub
mov
out
fs
push
cltd
add
push
jo
jno
popa
or
data16
cmp
sahf
aas
movb
int
push
leave
mov
sbb
lret
ljmp
and
addb
cli
cmpb
mov
gs
xlat
cmp
mov
add
ds
xchg
adc
loop
scas
lret
cmp
add
pop
gs
sub
jg
lcall
jbe
mov
ret
ret
mov
add
sbb
fs
push
adc
outsl
sub
mov
push
mov
xor
test
nop
jb
data16
iret
push
mov
dec
js
xlat
mov
adc
out
lret
xchg
or
pop
xchg
xchg
shrb
xchg
int3
mov
gs
dec
ja
hlt
dec
cmpsb
in
lock
fcoml
cmp
and
idivb
mov
mov
shrl
sub
sbb
xlat
insb
sbb
jne
or
in
push
mov
cli
imul
cmpsl
cld
shr
mov
and
popf
mov
pop
in
mov
pop
outsb
enter
jae
lods
xchg
test
or
enter
jb
mov
cmp
div
cmc
je
xor
dec
mov
and
mov
push
xchg
xor
aam
mov
push
test
or
add
mov
aam
lahf
push
popa
fs
lods
mov
orl
clc
xchg
iret
and
in
and
jns
mov
cmc
dec
mov
cwtl
repnz
ljmp
push
in
push
sbb
cmp
cli
push
xchg
out
notl
dec
jno
movsl
sbb
push
jmp
movsb
scas
adc
or
cmp
mov
add
clc
sarl
cmpsl
push
cmpsb
xchg
xor
push
and
push
push
push
mov
inc
aad
pop
mov
push
aad
repz
sahf
push
int3
lods
adc
jg
sbb
cltd
inc
jae
dec
jle
mov
shr
lret
insl
adc
in
jns
jns
push
std
xchg
mov
push
pop
cwtl
cmp
outsb
out
jbe
and
push
mov
adc
adc
lcall
pop
pop
adc
or
lods
pextrw
jae
in
cmp
inc
xchg
stos
lods
sarb
inc
pop
and
sbb
orl
sub
push
add
jg
sbb
aaa
pop
sbbl
inc
nop
adc
mov
lahf
shlb
jl
inc
fcom
roll
cmc
out
aam
jmp
pop
ficoms
or
xchg
add
inc
lock
notl
mov
dec
gs
cmp
mov
lods
imul
pop
sbb
sub
les
mov
mov
mov
jbe
sbb
in
je
into
arpl
pop
mov
pop
loop
test
test
xor
dec
xchg
mov
in
aad
mov
dec
lea
scas
jo
nop
imul
pop
sub
jl
pop
xor
mov
dec
dec
imul
adc
sub
stos
addr16
mov
int
push
fstl
mov
ficomps
cmp
test
mov
cwtl
outsb
mov
lods
dec
dec
xchg
fwait
sbb
movsl
ret
enter
movsb
mov
mov
xor
xor
lahf
add
mov
out
cmp
mov
or
jecxz
push
or
or
jno
pop
mov
push
xchg
call
mov
lock
dec
pop
enter
bound
out
xchg
out
int
mov
cmc
rorl
xchg
movsb
mov
sbb
sti
push
test
cwtl
fstps
scas
stos
push
outsb
push
out
inc
nop
xor
adc
dec
push
repz
adc
pop
sbbb
icebp
sahf
adc
shr
and
pop
mov
ja
xor
cmp
sbb
mov
repz
pop
jmp
pop
and
fists
icebp
mov
lahf
inc
add
pop
mov
in
pop
add
into
cmc
lods
add
add
xchg
mov
mov
dec
cmc
mov
arpl
loopne
pop
mov
xor
movsb
xlat
mov
subl
int3
jp
mov
popf
add
mov
inc
mov
mov
mov
add
pop
sti
xor
movsl
test
mov
shl
cwtl
pop
fimull
pop
inc
insb
cmc
clc
cwtl
sub
or
int
jno
pop
imul
and
dec
lock
mov
aad
push
ret
ja
int3
sahf
cmp
jnp
jne
test
mov
cmp
mov
pushf
mov
decb
js
jle
inc
adc
rcll
jl
mov
jge
popa
ss
adc
or
leave
in
mov
mov
push
push
mov
mov
movsb
xlat
enter
jp
xor
lock
mov
cld
mov
scas
fwait
mov
jns
xor
nop
aam
push
and
les
or
imul
pop
jp
pop
sbb
data16
rolb
push
fisttpl
stc
adc
mov
leave
mov
push
rorl
int
out
sbb
xor
call
mov
fcompp
mov
push
mov
cmp
dec
sub
popl
cmp
pop
orl
inc
mov
inc
cli
pushf
push
gs
jno
sbb
jl
sub
mov
imul
inc
scas
and
fldl
lods
dec
js
addr16
icebp
jle
inc
mov
xor
leave
inc
pop
je
cmp
in
mov
jp
cmp
dec
out
cli
cmc
outsb
into
out
lods
loope
jno
and
or
fwait
stos
int3
cld
dec
out
stos
scas
sub
addb
add
jg
outsl
out
adc
xchg
add
stos
pop
sbb
adc
ds
fs
push
aam
outsb
xor
aas
jge
xor
add
sbb
shrl
pop
stc
out
test
ss
lret
pop
inc
addr16
outsl
add
mov
fmuls
out
adc
stos
sbb
xor
sbb
enter
sbb
and
addl
cmp
and
rorb
mov
jne
adc
daa
pop
mov
into
cmpsl
dec
mov
mov
fsts
sbb
push
loop
js
or
lods
std
sub
bound
dec
ffree
and
fnstsw
into
jl
es
cmp
out
mov
mov
or
inc
lcall
or
fmull
clc
les
mov
mov
mov
bound
cmp
jb
adc
ret
test
push
cmp
inc
add
sub
int
outsb
stos
inc
mov
fisubrs
sbb
daa
pop
mov
sbb
inc
xchg
sub
ss
adc
es
scas
push
test
data16
jge
jb
and
push
xor
mov
stos
loop
push
mov
mov
cwtl
xchg
dec
rolb
mov
xchg
dec
dec
push
lods
not
add
add
xor
or
push
cmp
xor
inc
jl
das
mov
shlb
in
ror
mov
mov
adc
lret
andl
sbb
jb
fwait
aas
adc
shl
mov
std
or
mov
test
pop
ret
dec
cmp
jo
mov
loop
sub
aad
xrelease
pop
out
lods
or
imul
mov
mov
mov
cwtl
and
adc
in
orps
in
push
inc
movsb
popa
xchg
cmpsl
out
push
jle
add
outsb
shlb
xchg
lods
cmovo
xchg
xchg
pop
jne
xchg
lods
adc
sub
push
ljmp
cli
aaa
call
cwtl
sub
jg
imull
inc
and
lock
mov
lea
add
dec
fwait
push
pop
jns
sub
call
jge
fwait
ljmp
xchg
insl
mov
pop
mov
fucom
inc
cmp
nop
cli
pop
movsl
push
lock
cmp
mov
fadds
test
outsb
arpl
fiaddl
sub
addb
pushf
xchg
or
pop
mov
xor
push
cwtl
fiaddl
sub
mov
inc
in
loopne
cmpb
add
rcll
push
push
jmp
roll
dec
add
imul
lods
lods
loopne
cli
mov
stos
bound
mov
lret
xchg
inc
xor
rcrb
push
popa
lret
insb
div
xchg
dec
adc
mov
xor
imul
xlat
adc
popf
stos
push
lret
aas
fldl
or
push
pop
fisubs
fildll
cmp
in
aam
outsb
in
mov
sbbl
push
insb
loop
ss
cmp
cmp
inc
pop
pushf
cmp
imul
add
shrl
rcrl
je
sub
gs
mov
pop
push
inc
mov
sub
pop
mov
stos
mov
test
xor
out
mov
jp
push
in
cmp
jbe
out
test
mov
arpl
lcall
mov
add
lods
sarb
cmc
xchg
aas
lret
adc
dec
in
push
stc
testb
jns,pt
lcall
push
fwait
icebp
pop
imul
insl
pop
js
test
data16
pop
movsb
mov
inc
je
inc
aam
and
mov
mov
insb
bound
xor
roll
push
mov
scas
or
fiadds
push
lock
aad
in
decb
mov
add
and
or
imul
inc
pop
faddl
shlb
mov
repnz
pop
ret
sub
popa
push
push
xchg
adc
jnp
inc
lods
or
cmpsb
mov
insb
out
out
dec
into
pushf
mov
scas
fs
mov
inc
movsb
insb
sub
inc
pop
push
fs
add
rcl
push
add
insb
xchg
sub
adc
xadd
mov
mov
pop
call
xchg
imul
jle
loope
pop
xor
rorl
int3
mov
aad
test
loop
mov
xchg
jg
lahf
add
iret
mov
enter
pop
aam
dec
pop
push
pop
push
cmp
mov
pop
sbb
test
cmpl
popa
cmc
xor
sub
push
incb
addr16
ffreep
stos
inc
rcl
pop
dec
xorb
xchg
cmc
movsb
add
out
jno
lock
jno
mov
mov
call
push
aad
xchg
push
sahf
outsl
ret
dec
push
in
push
inc
repnz
daa
push
insl
cmpsl
xor
xor
insb
jb
outsb
inc
sub
enter
mov
insb
leave
lret
mov
and
fdiv
pop
jge
test
cmpsb
out
xor
mov
add
push
mov
push
repnz
mov
leave
push
lea
loope
cwtl
push
sarl
xor
and
hlt
in
adc
or
or
lahf
lcall
repnz
dec
cld
pop
xlat
push
ror
and
aad
and
add
add
xor
xchg
andb
leave
test
lock
faddp
out
pop
pop
daa
sbbb
pop
cwtl
shll
icebp
pop
outsl
pop
in
hlt
cmpsl
xor
cmp
cmp
sbb
daa
lahf
adc
mov
cmp
loopne
jmp
loope
rclb
pop
inc
mov
jp
push
call
inc
ja
cmp
push
clc
push
xor
into
or
sub
jns
mov
push
xchg
mov
mov
jl
mov
js
jle
outsb
cld
mov
sbb
test
mov
jg
sub
or
inc
insl
cld
adc
in
sub
adc
sbb
mov
ret
mov
hlt
pop
int3
loope
out
jg
mov
insb
cmp
cmpsl
pop
sub
sub
inc
incl
in
xchg
jne
inc
or
call
or
int
les
loope
fstl
inc
dec
out
xchg
sbb
push
pop
xor
jmp
add
test
je
out
scas
jns
cmp
jge
sti
pop
jno
in
in
lcall
out
mov
xchg
stos
add
dec
lret
sbb
sub
mov
les
add
push
mov
xchg
mov
inc
mov
lret
sub
xor
in
mov
pushf
sub
test
icebp
jb
pop
ja
lcall
daa
call
and
repnz
mov
cmp
xlat
cmp
cli
std
pop
scas
ds
aaa
orl
push
push
cmp
pop
jno
push
inc
xchg
std
cmp
dec
lods
std
hlt
dec
or
rcll
add
fsubrp
mov
pop
insl
or
pop
lods
jg
cmpsb
dec
jmp
xchg
int
pusha
pop
adc
dec
pop
popf
jo
cwtl
ja
jmp
xor
push
lret
jne
testl
sahf
mov
push
dec
inc
inc
and
dec
and
popf
pusha
outsl
adc
push
adc
pop
jl
rcr
sub
inc
call
pop
test
push
es
and
xchg
aad
lretw
arpl
in
xlat
hlt
cmp
jmp
and
stc
test
scas
inc
dec
inc
and
mov
stos
test
cmp
xor
pop
popf
test
cwtl
cmp
insb
xchg
dec
movsl
stos
jne
mov
dec
clts
mov
jno
fldcw
push
pop
sbb
cmpsb
mov
cltd
das
xchg
dec
js
mov
les
mov
mull
pop
push
mov
jnp
adc
mov
mov
mov
push
xor
lcall
neg
jl
pop
inc
cmp
enter
jbe
adc
movb
fisubrl
lcall
sbb
cltd
pop
outsl
les
test
push
push
popa
pop
aaa
movsb
and
int
jecxz
inc
loopne
add
jo
pop
addl
pop
or
mov
xchg
sub
pop
call
sbb
cmp
addr16
cmpl
jecxz
roll
jno
xchg
testl
xor
inc
out
pop
inc
dec
mov
cmp
lret
pop
stos
les
popa
mov
fnstsw
mov
mov
add
out
xchg
test
jne
push
dec
cs
push
adc
adc
cmpsl
push
clc
push
inc
cmp
rclb
jnp
and
inc
pop
xchg
orb
in
xor
push
xor
xor
cs
push
adc
fdivrl
sub
mov
iret
outsb
xor
es
jge
jl
xchg
add
push
ljmp
adc
mov
mov
lods
xchg
outsl
or
enter
xor
dec
stos
xor
sub
test
dec
lret
xchg
cli
shl
jne
imul
idivl
and
pop
pushf
fwait
lods
jg
sbb
int3
data16
fidivrl
cli
aaa
pop
andb
sahf
pop
push
loop
ror
dec
add
mov
fcmovnbe
mov
cmc
lcall
cltd
in
sub
push
sbb
insb
fdivrs
dec
cwtl
inc
inc
dec
push
dec
push
push
cmp
fbld
jns
bound
frstor
in
lahf
out
ljmp
fwait
and
inc
dec
dec
or
adc
mov
ja
ret
push
fisttpll
jo
in
jbe
mov
mov
xchg
ret
call
scas
xchg
dec
movsl
pushl
sbb
add
pop
xchg
cmp
popl
icebp
cmpsb
dec
jbe
aaa
sub
inc
cmp
ret
mov
lret
lahf
call
mov
lock
repz
ja
push
das
idiv
or
inc
jmp
pushf
leave
push
jnp
jg
push
inc
mov
out
cwtl
rcr
packssdw
loope
fsts
mov
push
loope
jbe
jae
loop
xchg
inc
arpl
mov
int3
cwtl
rcl
icebp
pusha
xchg
pop
into
scas
mov
lret
or
jl
push
xor
int
jg
inc
pop
xchg
in
test
xor
idivl
jl
inc
xor
push
fldl
and
mov
hlt
test
push
or
mov
jmp
sarb
push
cltd
inc
pop
loop
jno
pop
ljmp
cmpsl
pop
arpl
cmp
inc
aas
movsl
or
pop
jle
rol
ja
push
fsubrs
or
lcall
lret
push
pop
gs
sbb
popf
aad
inc
cmpsb
gs
push
test
xor
adc
inc
mov
push
inc
and
xor
repnz
and
sub
ljmp
xor
xor
ss
adc
or
cmp
sti
push
xchg
xlat
add
out
movsl
rcrb
aam
call
dec
loop
xor
lods
popf
dec
sub
xor
and
jnp
int3
pop
ds
cmp
dec
cwtl
or
test
idivb
in
xor
pop
lcall
push
mov
inc
repz
sub
mov
in
ds
adc
leave
cmp
add
add
subb
pusha
mov
sub
sub
setl
js
fdivrp
mulb
lret
push
stc
mov
mov
sbb
ljmp
inc
push
inc
stos
subb
pop
or
and
adc
pop
mov
inc
pop
js
out
aas
mov
sbb
inc
mov
mov
push
leave
pop
mov
lea
ret
stos
pop
insl
cmp
sti
dec
mov
fisubrl
ljmp
mov
in
xchg
in
sti
nop
fwait
jl
or
or
xor
out
lret
lcall
jmp
jns
dec
push
loope
popf
dec
loope
and
sbb
pushl
cs
inc
pop
sub
hlt
jnp
pop
dec
stc
cwtl
push
shlb
mov
pop
lret
and
js
icebp
repz
push
inc
in
aaa
pop
mov
xchg
ds
rcrl
mov
les
notl
std
mov
push
cmp
push
or
sarl
lods
xchg
outsl
mov
pushf
jle
mov
sbb
outsb
cmp
sarb
cmpb
add
jns
popf
or
hlt
loopne
test
mov
xor
add
lcall
je
mov
push
movsl
inc
out
xor
lock
rcll
mov
repnz
sbb
ljmp
mov
cmp
stos
dec
or
icebp
leave
cmc
je
mov
lcall
fisubrl
test
je
in
mov
or
and
pop
cs
push
sarl
xor
pop
jl
lods
mov
sub
lcall
pop
ja
imul
xor
imul
xchg
pop
dec
addr16
in
add
sub
mov
aaa
inc
xor
stc
mov
mov
push
adc
lods
adc
mov
or
inc
lahf
xrelease
lret
mov
cld
aas
das
pop
fxch
mov
inc
xchg
int3
or
pop
add
in
xchg
testl
scas
inc
inc
mov
js
mov
divl
fcoml
pop
repz
scas
fnstsw
fidivl
push
xor
push
cmp
iret
out
mov
ret
std
cmp
inc
fstpt
add
dec
popf
fsubrl
or
mov
ret
out
or
lods
fucomp
pop
cmc
xor
adc
adc
loopne
bound
lret
mov
lcall
jbe
scas
pop
jbe
cld
fisubrs
sbb
or
push
fs
cltd
push
aam
mov
mov
mov
aad
sarb
repnz
pushf
testb
iret
push
andb
je
add
xor
outsl
repnz
add
enter
jbe
fisubrl
bound
mov
loop
fdivrs
cli
sbb
or
ja
loopne
lods
out
fisttpll
sbb
popf
add
imul
or
cmp
fdivrs
mov
mov
cs
notl
mov
or
pop
adc
mov
ljmp
mov
lock
mov
lea
dec
bound
mov
testb
jle
or
lods
and
xor
jge
rorl
inc
xchg
ret
cmc
push
ja
ficompl
push
std
mov
pop
aad
arpl
mov
and
imul
push
lock
jbe
ja
mov
and
lret
xchg
push
push
cmp
add
mov
int3
and
fnstsw
out
or
add
notl
fdivrp
inc
in
mov
inc
dec
adc
inc
xlat
pop
ret
inc
adc
in
int
or
mov
jno
adc
pop
lcall
sub
jae
cli
xchg
mov
push
xor
mov
mov
mov
mov
cmp
push
cltd
mov
xor
sbb
cmc
ja
mov
fcomps
push
pop
pop
jg
shl
lds
lcall
popf
pusha
fists
movsb
xor
fidivrs
sbb
sbb
in
imul
and
int
ret
loopne
inc
out
pop
xor
adc
jge
sub
cmp
mov
mov
ljmp
outsb
jmp
in
pop
testb
cli
aaa
jb
lret
shl
inc
rorb
andl
pop
bound
sbb
adc
les
adc
cwtl
inc
mov
cmc
dec
xor
jge
mov
dec
mov
gs
rolb
push
rorl
lock
xor
out
xor
cltd
lds
stos
out
popf
mov
and
adc
sub
adc
divb
in
sbb
pop
and
inc
inc
aaa
cmp
aas
aad
in
mov
sbb
mov
mov
adc
inc
xchg
adc
sub
or
fadds
es
icebp
or
pop
dec
lret
push
sub
inc
inc
xchg
mov
lea
push
mov
mov
insb
or
jecxz
cld
sarl
popf
sbb
nop
incl
fwait
mov
std
push
ret
mov
addb
dec
mov
pop
test
jecxz
repnz
mov
inc
xlat
rolb
aas
in
icebp
xchg
inc
xchg
pop
mov
in
or
mov
fidivrs
sbb
cld
shll
mov
mov
test
push
mov
push
inc
sub
pop
fmull
andb
jb
pop
jl
mov
xor
shrl
xor
sbb
push
les
scas
cmpb
inc
cmpsl
cmp
cwtl
xchg
add
inc
mov
mov
aaa
mov
insb
dec
cmp
sbb
lahf
xchg
je
stc
push
sbb
fmull
loopne
and
pop
adc
inc
push
loope
xor
add
xor
pop
push
ja
sbb
xor
stos
icebp
cmp
jecxz
push
adc
xchg
repnz
mov
shll
fiadds
xor
jmp
insb
sub
mov
scas
and
js
inc
and
pop
jp
dec
pop
xor
xchg
je
int3
aad
sbb
mov
mov
inc
mov
mov
sub
mov
subb
sbb
dec
sub
imul
mov
push
lcall
rcl
push
xchg
lahf
and
sbb
dec
cmc
push
xor
mov
jo
or
test
pop
xor
or
repnz
gs
push
adc
ret
out
je
roll
fistl
cli
imul
add
cmp
mov
dec
arpl
lcall
sbb
jmp
xchg
test
in
inc
sbb
sub
lock
ljmp
sub
out
mov
out
rcrl
leave
outsl
and
push
pop
pop
push
mov
mov
movsb
sti
mov
xchg
movsl
jns
dec
mov
out
pop
mov
gs
aaa
and
jae
dec
cmp
pop
cmpsl
pop
mov
jb
xor
and
add
bndcl
lods
arpl
imul
shrl
pop
inc
aam
jne
mov
test
push
enter
cld
xchg
outsl
andl
and
push
mov
stos
pop
cli
jge
ss
jle
adc
popa
sbb
mov
lds
mov
cmp
xor
cs
scas
cmp
dec
and
dec
cmpb
lods
pop
and
in
movsb
mov
jmp
jnp
scas
scas
jae
stc
es
dec
push
xchg
in
lret
xchg
cltd
mov
xor
xor
adc
push
sbb
inc
mov
fisubs
mov
addl
outsb
mov
aas
mov
pop
lret
movb
cmp
mull
mov
inc
adc
pop
test
or
sbb
in
bound
js
mov
fcomps
pushf
les
insl
and
jbe
addl
push
jne
jg
mov
ret
ret
and
icebp
mov
sar
adc
push
sub
mov
lods
test
cmp
adc
cltd
fstps
sbb
movsb
xchg
xor
in
popa
test
stos
aam
cmp
xchg
adc
lahf
jae
test
ret
mov
fmull
leave
add
cmova
test
hlt
leave
nop
mov
fldenv
popf
sub
test
jns
mov
call
and
shlb
mov
repz
sti
lcall
mov
or
sub
push
enter
pop
mov
mov
mov
inc
dec
cmc
add
aas
pop
dec
jge
ja
sbb
sub
leave
pop
jnp
shrl
js
cld
mov
scas
sbb
ret
adc
pop
sbb
cmpsb
and
sub
sub
sub
ss
in
pop
nop
jl
addb
jge
jo
pop
xor
cltd
pop
ret
sub
sbb
mov
jle
inc
fcompp
adc
cld
adc
add
mov
and
rcll
rclb
sub
xor
dec
sbb
xchg
pop
out
shlb
push
sbb
pop
xlat
sub
arpl
inc
sub
mov
mov
inc
or
fldenv
imul
xor
add
fs
dec
mov
faddl
pop
movsl
sub
xlat
xchg
cmp
js
mov
out
xchg
mov
in
cmp
inc
sub
mov
push
inc
sub
test
xchg
mov
es
mov
jge
cs
roll
stos
ljmp
inc
add
add
xor
and
sarb
mov
adc
decl
out
and
jae
ret
mov
adc
ficoms
sti
loopne
sti
ds
imul
arpl
outsb
lret
fmuls
adc
adc
or
push
inc
outsl
inc
cmp
cmp
sti
lods
mov
inc
loope
inc
fnsave
mov
aam
and
jle
outsb
stos
inc
or
sahf
pop
or
add
outsl
jg
fidivl
in
dec
inc
ljmp
jne
jne
xorl
mov
xchg
push
sub
repnz
jne
inc
mov
sbb
testl
or
nop
mov
push
aam
adc
add
ss
sbb
aam
pop
add
bound
orl
jae
xchg
es
sahf
pop
mov
outsl
mov
test
in
and
mov
sbb
cltd
and
sbb
out
leave
fcompl
or
inc
and
lahf
stc
jnp
pop
negl
test
shlb
jle
gs
scas
inc
iret
jmp
sarl
stos
and
dec
jl
push
fldcw
push
in
ja
mov
sbb
leavew
dec
out
fs
mov
lock
or
in
cmp
mov
movsb
add
mul
and
cmp
adc
cmc
sub
data16
leave
inc
out
call
repz
inc
dec
mov
jns
mov
sub
shlb
xchg
nop
test
push
repnz
bsf
testl
inc
mov
dec
testl
mov
aas
shll
xchg
cmpsb
pop
popf
pusha
and
add
bound
push
loopne
dec
push
sti
gs
lcall
adc
or
lret
adc
sbb
adc
scas
ljmp
mov
outsb
fistps
fwait
js
fldenv
adc
sub
ss
aaa
pop
inc
int3
loopew
jns
iret
push
xchg
xchg
stos
dec
xchg
in
and
cmpsb
fucomp
subl
xchg
dec
adc
jg
push
add
lret
mov
ja
test
mov
call
cmp
dec
xchg
hlt
add
testb
cmp
and
loope
in
inc
sbb
sbb
mov
int3
ja
cmp
mov
adc
enter
dec
sbb
add
notb
aad
push
sub
and
scas
add
adc
push
adc
adc
jg
and
jnp
push
push
out
es
std
mov
or
fistpll
ret
push
inc
jp
aam
das
movsb
fs
rol
inc
mov
mov
ljmp
push
mov
sarb
and
js
fadd
xchg
je
data16
or
nop
add
andb
out
mov
push
sub
xor
push
aam
es
push
adc
fcmovnu
or
add
sub
inc
dec
in
fildl
dec
outsb
fildl
loopne
mov
cmp
push
cs
add
ret
repnz
xor
push
and
shll
jp
lcall
push
jge
in
jnp
push
jo
rcl
fbstp
out
or
mov
dec
xor
call
sbb
xchg
jbe
sub
cmp
add
push
cmp
or
in
fldcw
mov
int3
sub
dec
push
rcr
inc
lods
pop
add
dec
adc
mov
sbb
mov
push
cmovl
pop
inc
add
mov
movhps
fiaddl
out
call
loope
mov
call
rolb
pop
and
mov
cli
sbb
test
mov
sub
lcall
cli
movsb
mov
add
xchg
sti
xor
and
push
mov
pushf
or
stos
les
orb
adc
das
out
mov
mov
xor
and
fsts
into
sub
xor
divl
and
leave
jbe
jnp
mov
insb
rorb
in
jae
jns
add
cmp
daa
scas
ljmp
cmp
adc
sahf
lret
mov
idivb
mov
out
mov
imul
in
dec
push
cli
sbb
into
cmp
gs
test
std
shl
cmp
cmp
mov
mov
outsb
andb
and
mov
sbb
ljmp
mov
mov
mov
mov
xchg
xchg
ja
seta
adc
stc
iret
sub
daa
out
or
ret
cmc
bound
inc
pop
out
sub
and
and
jae
dec
mov
dec
ljmp
xor
mov
add
jae
insl
jo
outsl
jns
ljmp
xlat
mov
xchg
cmc
jge
xchg
pushf
mov
enter
xor
aas
jne
leave
xchg
inc
leave
sub
enter
sub
jge
dec
js
mov
mov
xor
adc
and
jg
adc
cmp
cmpsb
pushf
jp
sub
jbe
scas
push
mov
pop
gs
out
adc
inc
jecxz
add
popf
clc
lea
mov
pop
das
out
mov
fnstsw
jae
fcmovnb
ret
xor
faddl
mov
test
mov
add
mov
ret
lods
icebp
jecxz
pop
setg
mov
sbb
adc
xchg
stos
stos
xor
cmp
cpuid
ret
xor
mov
scas
int3
clc
xor
cmp
sbb
mov
es
jg
sbb
idivb
sbb
push
mov
adc
pop
popa
mov
add
mov
das
xchg
add
fldl2e
add
fldenv
jg
push
inc
sbb
sub
xchg
rorb
dec
sub
scas
xor
xchg
rcrl
loopne
xchg
cmp
xchg
scas
aas
enter
out
les
data16
pop
pop
sbb
dec
fnstsw
xchg
xor
sub
loope
repz
mov
jbe
push
call
fadd
lods
cmp
dec
push
outsb
daa
xchg
into
xor
in
mov
fucomip
sub
cmp
lcall
mov
out
in
outsb
imul
scas
inc
sbb
push
mov
lock
fs
insb
cld
sti
jnp
push
cmc
cmp
mov
or
mov
ds
das
testb
int
aas
hlt
mov
lcall
inc
mov
pop
and
sbb
gs
and
mov
cmp
mov
xchg
lret
data16
and
dec
and
push
jp
cmp
jp
mov
mov
outsb
lods
call
loope
insl
test
mov
mov
fdivp
and
adc
ret
and
mov
mul
jle
push
pusha
mov
inc
sbb
cmpsl
lea
pushf
pop
xchg
pop
xor
out
and
adc
dec
into
fwait
insb
outsl
inc
sub
jmp
cld
or
stos
jmp
lea
or
jecxz
push
test
push
inc
mov
test
lods
push
sub
xchg
lods
test
les
jmp
lret
les
mov
sbb
add
mov
jg
inc
js
cmp
push
inc
fcomps
out
orl
cmp
stos
sub
lock
xor
or
pop
add
pop
rcrb
or
les
cltd
and
xchg
lahf
push
push
fs
insb
push
mov
cltd
sbb
sub
aam
cli
outsl
cmpsl
jno
xchg
lret
inc
ss
add
rcrb
mov
addr16
xlat
stc
jne
mov
inc
mov
inc
push
sub
xlat
and
loopne
stos
scas
outsb
xor
cmp
inc
xor
fwait
movsb
pop
cmpsb
inc
adc
pop
mov
fldt
jl
lock
mov
cltd
in
xorb
and
jne
dec
repnz
push
or
xchg
jo
out
outsl
out
mov
out
fiadds
mov
dec
mov
mov
sub
loopne
adc
popf
pop
adc
add
inc
fildll
mov
nop
cmp
mov
rorb
sbb
xor
mov
out
add
mov
mov
jmp
bound
xchg
jl
inc
dec
or
popa
ja
pop
jnp
ret
aam
repz
sub
cmp
dec
popa
mov
mov
add
out
xchg
adc
repz
push
push
repnz
ficomps
jb
jo
or
and
jbe
pop
mov
xor
mov
cwtl
push
lret
pop
pusha
push
loopne
add
pop
nop
lar
ret
add
push
add
jns
idiv
jb
mov
mov
jbe
cmp
cld
or
adc
adc
dec
push
rolb
pop
xor
shll
test
lods
je
push
pusha
mov
adc
sbb
je
push
pop
cmp
and
enter
aam
popf
mov
mov
ret
insl
fdivs
pop
divl
test
enter
push
fcmovnbe
add
gs
pusha
aam
test
and
mov
and
adc
repnz
mov
insl
xchg
push
in
jns
insl
in
ljmp
xchg
push
js
das
das
cwtl
push
in
inc
js
mov
pop
or
xchg
push
add
insl
imul
xor
cmp
push
xchg
sbb
push
addr16
es
jge
jl
pop
or
fldt
loope
push
inc
xor
lcall
mov
orl
push
int
mov
or
jge
mov
adc
sahf
icebp
inc
loop
fisttps
gs
xchg
ret
cmp
xor
cld
mov
inc
js
jae
dec
xchg
les
stc
gs
out
xchg
popfw
jg
mov
xor
das
jne
das
call
test
push
daa
inc
hlt
inc
mov
xchg
insb
xor
lahf
fucom
mov
mov
hlt
pop
insb
fdivl
xor
dec
dec
out
in
or
push
jb
lahf
rcr
add
sub
mov
mov
mov
lods
fnsave
push
cmpl
push
xor
fwait
hlt
push
jb
xor
ret
negb
je
shll
in
pop
mov
xchg
cmpsl
pushf
into
stos
push
es
mov
inc
sbb
stc
int
test
test
cmpsb
lods
adc
fs
mov
out
das
inc
pop
mov
xlat
rorl
cmp
sub
xchg
jb
adc
pop
inc
les
loope
sbb
in
ret
test
push
jecxz
in
and
sub
xor
sbb
stos
lcall
test
inc
xchg
test
dec
cmp
xchg
popf
popa
inc
xor
sub
pop
pop
mov
mov
add
mov
in
dec
jbe
xchg
sub
lods
and
in
fwait
aad
pop
pop
outsl
lret
mov
dec
mov
stos
popf
rcll
outsl
fwait
jecxz
int3
dec
jl
ficoms
loopne
popf
movsb
testl
fsubs
in
mov
push
ss
and
lahf
pop
dec
sub
jbe
stos
jl
daa
sub
sbb
test
popa
jl
mov
pop
in
mov
mov
jge
cmp
mov
and
jge
popa
jecxz
jno
mov
fwait
lea
std
inc
jg
divl
jmp
ret
repz
add
lock
ficomps
pop
adc
jbe
fildl
mov
js
xchg
inc
std
inc
push
arpl
or
jg
ljmp
addr16
fwait
inc
icebp
jbe
sbb
int3
pop
mov
mov
and
dec
push
cmp
addr16
cld
inc
dec
sbb
pop
inc
mull
dec
ja
sub
aaa
inc
pusha
test
sbb
xchg
leave
test
jb
sbb
mov
test
popa
pop
in
sbb
cmp
fdivrs
jle
in
ljmp
je
cmp
sbb
inc
fcomps
mov
fldt
popa
pop
jp
push
and
dec
push
xchg
or
mov
push
fcmove
orb
xchg
rcll
cs
inc
or
fs
jp
ret
jg
jecxz
ljmp
ljmp
repnz
pop
js
xchg
insl
sub
lods
sbb
jecxz
outsl
fcompl
aad
scas
stc
sti
std
jmp
ds
fs
stc
rcrb
sbb
cmc
mov
stc
push
push
daa
les
daa
pop
ss
pop
mov
fstps
xchg
andl
xchg
sbb
cltd
sub
add
xchg
mov
jne
push
negl
ret
repnz
ret
repnz
mov
xchg
inc
mov
int3
stc
insl
iret
in
sub
dec
xchg
inc
fndisi(8087
loopne
ret
lcall
into
adc
std
loopne
or
mov
sarl
adc
jns
jge
stos
ss
fcompp
cld
and
lret
fs
test
push
jmp
adcb
ljmp
test
xchg
jnp
call
es
nop
and
mov
out
arpl
inc
sbb
xchg
inc
fimull
mov
pop
cmp
sbb
mov
ja
cwtl
fdivl
cltd
or
xchg
fwait
sub
adc
out
fs
cmp
mov
mov
push
test
sbb
mov
inc
push
dec
pop
xor
bound
inc
jge
xchg
and
push
push
test
jne
and
sub
hlt
leave
mov
push
jmp
cmp
leave
pop
and
sub
hlt
push
leave
aaa
lds
xchg
fldcw
ret
mov
or
pop
data16
mov
mov
or
mov
cmpsb
shll
mov
in
mov
cltd
in
ja
mov
pop
bound
pop
mov
mov
pop
adc
outsb
push
insb
push
les
movsl
js
pop
xor
and
roll
and
inc
ss
dec
enter
mov
push
fwait
cld
inc
pop
aad
scas
and
sub
add
or
shll
push
push
adcb
or
push
mov
xlat
faddp
repz
scas
ja
push
out
test
inc
sbb
adc
sbb
jl
jecxz
shr
mov
dec
mov
fnsave
and
cs
mov
xchg
sub
dec
cli
dec
stos
scas
xchg
shll
cs
add
mov
test
mov
cmpsb
out
je
adc
imul
sub
jmp
xor
filds
fldcw
and
mov
arpl
ds
js
dec
repz
mov
inc
js
pusha
add
out
lods
jl
and
mov
mov
adc
loope
xor
inc
ret
adc
jmp
push
shll
mov
out
and
leave
push
mov
fs
mov
cmp
push
daa
clc
scas
ljmp
addr16
in
fnstsw
sbb
daa
pop
ret
ljmp
ficompl
add
and
mov
xchg
out
ds
lahf
sbb
sub
pop
imul
wrmsr
pusha
insl
nop
jle
int3
jne
movsl
pushf
clc
adc
out
mov
cmpsb
std
aas
ret
push
es
adc
cmp
stos
push
cmpsl
andnps
aas
push
test
add
mov
out
xor
pop
aaa
mov
add
adcl
shlb
aam
sbb
sub
dec
lock
ja
add
punpckldq
xchg
xchg
cmp
sub
sub
lods
jmp
or
sub
jns
add
cmp
arpl
addb
pop
shrl
aas
sarl
lods
push
out
mov
or
fwait
inc
adc
jo
fidivl
cmp
inc
loopne
cli
mov
sbb
add
jbe
mov
fstpl
mov
dec
jae
out
xor
cmp
cmpb
cwtl
or
mov
sar
cmpsl
sub
push
push
jl
pop
cltd
xchg
addl
pop
popa
out
repz
jmp
stc
ficoms
adc
xchg
arpl
mov
arpl
out
mov
faddl
inc
fstl
jb
jecxz
insl
push
icebp
xchg
lods
out
and
or
xchg
clc
movsl
inc
xchg
enter
fcoml
pop
and
dec
pop
xchg
mov
and
call
and
lret
and
andb
jnp
lods
test
add
sbb
out
jo
mov
sub
fmuls
jbe
dec
loop
test
cltd
cwtl
lret
shrb
pop
stos
inc
out
push
and
mov
mov
jb
hlt
fwait
xor
fisubl
mov
add
inc
pop
push
mov
sbb
stc
sbb
fildll
ud2
or
divb
filds
push
gs
push
rorl
cmp
cltd
push
rorb
pop
pop
aas
add
cmp
cwtl
lret
addb
test
lret
lret
sub
jmp
adc
dec
fs
adc
cmpl
into
loope
scas
fadd
aam
xor
popf
push
cmp
push
jle
mov
das
and
call
mov
lcall
or
stc
je
fwait
cmpl
push
push
out
sub
mov
inc
movsb
into
repnz
lcall
mov
fimuls
pop
xor
cltd
cmp
add
mov
ret
std
xlat
or
mov
inc
mov
cs
cmp
sub
movsl
aaa
mov
cltd
int
repz
push
rep
das
and
pop
scas
std
dec
int
fdivr
adc
jb
mov
jmp
and
stos
fdivrs
cwtl
lea
test
inc
jl
sbb
lods
sbbb
mov
mov
outsb
push
or
cli
xor
dec
jg
pop
scas
in
ret
inc
jne
fadd
sub
or
xor
enter
sub
psllq
mov
dec
pop
les
cmp
adc
ficomps
aaa
clc
adc
outsl
mov
or
cmp
and
push
mov
inc
mov
cmp
xor
sbbb
inc
les
aaa
int3
arpl
jno
adc
out
pushw
jo
jb
cmpsb
fmull
cmc
add
lea
out
sub
mov
lret
add
fnsave
cwtl
mov
int3
outsl
movb
add
sub
sub
cmp
jbe
insl
lret
int
in
addr16
gs
lahf
mov
pop
iret
xchg
pop
add
xor
push
jae
mov
fxch
and
jne
cmp
jae
jne
int
or
mov
pop
iret
mov
sahf
shrl
faddl
fnstcw
mov
push
or
mov
push
mov
shll
fildl
or
pusha
into
sub
mov
add
scas
pop
mulb
lcall
in
cmp
cmp
inc
jecxz
mov
mov
arpl
mov
lcall
mov
pushf
dec
sahf
not
testl
in
sbb
fimull
movsb
pop
gs
xor
fildl
aaa
jle
add
popa
sbb
test
jbe
lds
ds
mov
mov
shlb
sub
outsl
lcall
inc
push
ret
lea
ljmp
imul
mov
ds
jmp
inc
mov
rcll
negb
out
adc
aad
jo
xor
pushf
add
xor
xchg
mov
and
jg
mov
in
jecxz
js
push
jae
shlb
jl
lret
std
fidivs
push
out
push
pop
out
mov
or
dec
mov
pop
rolb
mov
dec
pop
mov
jne
mov
cli
shrl
pop
push
mov
xor
ss
call
sbb
push
dec
pop
sbb
pop
xchg
add
call
sbbl
xchg
fcmovb
fbstp
aam
jecxz,pt
xchg
push
adcl
hlt
mov
leave
or
xchg
xor
mov
xchg
cmp
sti
sub
and
cmpsb
pop
adc
lods
inc
mov
pop
jns
cmovnp
inc
lock
pop
cmp
test
cmc
mov
mov
add
xor
clc
xchg
pop
fistpll
ret
movsl
movsb
movsb
xor
inc
fidivl
mov
or
add
push
hlt
cmp
inc
loope
test
sahf
mov
pop
subl
cmp
dec
in
push
and
movsb
sbb
dec
adc
pop
imull
aam
sahf
cmpsl
push
ljmp
and
add
stc
je
ja
or
inc
addr16
addr16
mov
in
nop
inc
xchg
and
iret
loop
add
jl
icebp
push
lods
cmp
daa
push
cmp
nop
pushf
jbe
and
or
jo
mov
dec
je
addr16
cwtl
and
sub
out
out
push
jne
mov
cmp
jmp
inc
es
lahf
sti
push
jnp
inc
fidivrs
inc
or
fsts
js
sti
sub
in
mov
or
out
push
xor
sub
sub
sbb
jmp
mov
pop
add
sbb
dec
add
test
xchg
filds
fdivp
popf
pop
ds
or
fildll
jg
cmp
jno
lock
and
std
scas
outsl
add
inc
inc
mov
lret
xlat
adc
cmp
outsb
or
jmp
aas
loope
xchg
mov
xchg
jno
in
cmp
sub
ja
dec
scas
loop
es
imul
ficomps
out
jne
push
cmp
mov
push
pop
sti
jns
mov
and
push
mov
std
xchg
subb
mov
add
outsb
cwtl
mov
adc
xchg
or
sub
popa
ret
sub
dec
test
movsb
stos
cmpsl
mov
fidivrs
pop
fcmovnb
ljmp
dec
ja
cmp
subl
adc
mov
pop
and
loop
adc
xchg
repz
sub
cmp
adc
cmpsl
sub
xor
and
mov
xchg
sbb
jp
popf
outsb
sub
sub
in
xchg
adc
or
cmp
std
iret
xchg
bound
adc
scas
jo
aaa
push
pop
in
sti
addb
daa
jbe
and
jae
xchg
rolb
inc
jge
jae
scas
lods
dec
pop
xchg
fwait
pop
icebp
jb
sbb
outsl
mov
and
ja
mov
jmp
lock
push
cmp
push
lods
ja
dec
inc
cmp
push
addr16
aas
out
pop
fwait
jo
shl
jne
imul
push
jmp
je
mov
pop
loop
or
push
or
jne
ljmp
add
stos
mov
in
push
lds
outsl
inc
push
out
push
mov
or
sub
add
adc
jp
sub
into
jo
sub
cmp
aas
out
dec
ds
sub
add
mov
lldt
cmpsl
cli
mov
or
xor
jecxz
adc
or
rcll
jo
jecxz
imul
loop
loopne
pop
or
fnsave
ret
insb
cmc
and
out
fbld
push
outsl
add
xchg
les
jno
dec
adc
repz
mov
push
cmpsb
leave
jmp
pop
add
inc
mov
stos
rcrb
sbb
aas
sbb
pop
inc
in
push
cltd
inc
cmp
cld
jno
sub
pushf
adc
movsb
dec
mov
xchg
sbb
scas
filds
jecxz
dec
cmc
repz
pop
int3
mov
sub
xlat
jbe
lock
lcall
jo
loopne
outsb
mov
scas
dec
xor
inc
xlat
dec
and
jl
cmp
ljmp
sub
inc
xorb
mov
push
outsl
aad
push
ds
aam
cmp
pop
xchg
out
cwtl
jge
sub
fdivrl
inc
mov
je
mov
dec
mov
scas
arpl
mov
in
int3
popa
loop
jmp
stos
pop
adc
push
out
int3
jnp
cmpsb
jae
xchg
es
lret
aad
test
dec
pushf
xchg
int
shrb
jmp
adc
ja
xor
je
gs
adc
out
xchg
fsubs
sbb
in
cmp
cwtl
iret
push
bound
mov
push
or
xchg
add
jne
jb
jecxz
sbb
std
nop
or
lods
dec
cmp
in
and
sub
jecxz
sahf
pop
js
and
xchg
addr16
into
sahf
test
mov
sub
pop
push
lahf
das
loopne
test
cmp
das
lods
sbb
dec
rorl
imul
pop
je
mov
int3
push
sbb
subl
add
add
sub
mov
jl
or
cld
mov
inc
mov
sub
leave
add
add
inc
js
jmp
adc
adc
mov
int
mov
push
inc
enter
shll
mov
rcll
mov
lcall
xchg
add
adc
add
xor
and
or
popa
mov
xchg
cmpsl
pop
scas
addr16
fnsave
movsb
sub
push
jp
cmp
push
lahf
out
xchg
repz
pop
sbb
jbe
out
int
repnz
cmp
outsl
add
mov
testl
and
mov
dec
movsl
aas
xchg
das
fsubrs
xchg
add
inc
and
dec
dec
or
shll
jbe
jle
call
repz
pop
adc
inc
dec
xor
cwtl
xor
int3
adc
jmp
adc
clc
je
xchg
pop
pop
insb
jp
mov
push
sbbl
jns
pusha
pusha
shl
lods
mov
jbe
test
mov
or
sahf
bswap
sahf
inc
lods
out
sub
outsl
aad
ds
xchg
out
sbb
scas
jmp
cmp
scas
pop
fnstsw
jle
out
les
push
xchg
movsl
add
outsl
and
jae
ljmp
imul
adc
mov
imul
mov
xor
addl
pop
ret
imul
pop
scas
push
mov
mov
jge
fstpt
and
mov
aas
ds
cmpb
lcall
and
cmp
loopne
rorl
dec
lcall
jecxz
loop
add
inc
dec
sbb
pop
cmc
mov
adc
subl
mov
mov
cld
leave
cli
sbb
sbb
mov
daa
imul
hlt
xor
pop
movsb
subl
sub
xor
dec
push
jmp
aaa
nop
adc
push
inc
pop
push
es
and
lods
fisttpll
xlat
fwait
ja
ffreep
mov
mov
inc
push
mov
and
fbstp
bound
in
mov
das
in
lock
out
push
adc
fs
lods
insb
int
fs
cltd
jae
inc
pop
pushf
push
push
mov
inc
sbb
pop
ret
js
fwait
jbe
adc
stos
fidivrs
cli
mov
mov
lds
xchg
xor
and
jb
stos
mov
imull
mov
int
lods
xchg
in
imul
sbb
int3
cmp
jns
dec
insb
inc
ret
ljmp
mov
push
clc
std
inc
xchg
and
mov
pop
jg
aaa
mov
mov
xchg
mov
lods
std
adc
sbb
jge
loope
mov
mov
xor
scas
cmp
insb
mov
in
repz
leave
and
add
sbb
leave
rclb
mov
aad
mov
sbb
xor
mov
in
test
test
test
push
movsl
sti
ljmp
push
mov
cmpsb
push
push
adc
sub
push
test
mov
adc
push
and
sub
movsb
mov
jae
adc
retw
push
inc
xchg
sbb
jg
push
ret
jmp
and
mov
adc
and
adc
mov
xchg
lds
insb
in
fldenv
leave
push
or
dec
jmp
sub
cli
add
dec
lds
jmp
jge
sbb
rolb
orl
xlat
pop
cmp
adc
aaa
cmpsl
push
scas
das
xor
aad
icebp
jbe
rcrl
and
lds
loope
sbb
xlat
inc
sub
push
pop
mov
fcoml
mov
dec
jle
xor
dec
cmp
jno
insl
pusha
gs
cmp
add
test
jle
add
out
int3
adc
cmp
shrb
sbb
pop
dec
insl
cli
aam
dec
sub
xor
inc
cmp
inc
xorl
and
mov
call
xchg
insb
jmp
sbb
divl
ret
push
push
push
mov
mov
cs
hlt
sbb
popa
pop
pop
sahf
mov
mov
inc
cmp
pusha
jge
xchg
or
mov
sarb
jns
aad
push
cmc
push
gs
mov
sbb
push
dec
popa
out
sti
mov
dec
pop
mov
jge
stc
push
ja
lea
jne
loopne
bound
cs
pop
mov
xchg
mov
cltd
inc
ss
mov
bound
mov
iret
jmp
in
mov
mov
inc
pop
and
iret
dec
cld
inc
ret
lods
cmp
cwtl
xlat
xlat
dec
outsl
inc
scas
adc
test
fsubrl
jle
movsb
pop
mov
into
test
fwait
dec
loope
sub
enter
adc
mov
pop
cld
push
or
mov
add
or
mov
je
icebp
out
or
enter
jne
test
xor
inc
cmp
cwtl
jle
jae
sbb
out
push
lret
cmp
cmp
and
cltd
jns
pop
fldcw
mov
je
push
ss
imul
lret
test
pop
cwtl
push
shrl
lods
nop
lock
scas
sub
popa
jl
jo
out
not
lds
in
and
xor
dec
je
into
cmpsb
iret
js
clc
mov
movsb
or
std
push
xchg
sbb
sub
out
push
sub
cmc
and
xor
movntq
cmp
xor
rclb
mov
mov
mov
in
jl
loop
shl
mov
sti
movsl
out
into
std
lods
mov
mov
pushf
jge
jmp
sub
test
ja
fdivrs
mov
sbb
jp
lret
adc
push
or
int
jp
nop
stos
dec
fidivl
shr
shlb
cmc
sub
xor
test
push
xchg
in
or
aas
insb
not
add
push
in
jae
cmpsl
sahf
inc
xchg
mov
jo
cmp
xchg
dec
pop
push
push
sbb
push
in
xchg
out
pop
adc
cmpsl
mov
rolb
lods
mov
xchg
add
jg
and
jmp
ljmp
push
xlat
mov
jecxz
loop
xor
push
push
xor
mov
mov
dec
mov
xchg
shlb
ret
push
fsubrs
lock
gs
sti
std
xchg
inc
jnp
pushl
push
loopne
aaa
mov
fs
and
cs
call
xchg
lea
pop
add
lods
stos
movsb
and
pop
cld
push
cmp
sarb
or
mov
sub
outsb
nop
mov
out
movsb
sbb
popl
loope
dec
sahf
addr16
sbb
jae
pop
cmp
data16
mov
stos
pop
sbb
sbb
push
cmp
xchg
inc
jp
notb
outsb
xor
stos
je
loope
mov
mov
or
sbb
movsl
inc
or
sub
test
sti
mov
cld
dec
xor
aad
repz
ss
jl
cmpsb
lods
adc
imul
ss
and
mov
in
jecxz
or
ret
push
inc
push
ljmp
or
lock
sahf
out
jo
in
cmp
or
xor
lock
jp
mov
xor
outsb
push
popf
test
mov
mov
sbb
jbe
add
addr16
push
xlat
xor
loop
in
push
jae
int
sahf
inc
mov
sbb
scas
adc
and
xchg
xchg
xor
cmp
adc
adc
push
pop
xchg
shlb
jns
mov
testb
lea
leave
sbb
and
outsb
push
cld
stos
sbb
orl
push
xchg
addb
pop
inc
push
jmp
test
dec
lds
roll
inc
lahf
jge
or
or
popf
mov
shlb
das
mov
mov
push
in
mov
imul
fsubs
xlat
xlat
adc
shlb
pop
in
pop
mov
movb
sahf
xchg
push
push
xchg
lds
in
and
into
lea
sbb
lods
xor
cmc
xor
dec
pop
jmp
sbb
push
mov
fdivrl
push
inc
pop
adc
cmp
sbbl
pushf
repnz
cmp
sahf
and
sbb
jmp
rol
out
push
movsb
cli
pop
rclb
jo
pop
xchg
inc
aad
xorl
shl
out
mov
mov
dec
in
lahf
fcmove
jmp
mov
xchg
xor
rcll
push
pop
dec
mov
mov
pop
fsubs
sbb
mov
in
fs
sbb
jnp
push
jmp
xchg
sub
cmp
sub
shrb
or
xchg
test
xchg
xchg
scas
retw
dec
addr16
pop
fsubrs
aam
dec
push
stc
mov
mov
das
std
inc
or
loop
hlt
pop
popf
lock
in
stos
je
or
lock
mov
aam
aam
arpl
xchg
insl
sbb
mov
sbb
cltd
rcrl
xchg
mov
cmp
icebp
invd
sub
movsl
stc
xchg
call
int
jmp
fstl
sbb
loop
pop
fnstcw
mov
sub
pop
sbb
imul
call
cmpl
ja
test
push
in
inc
mov
cmp
imul
ret
jo
pop
pop
enter
repz
and
lret
addr16
shlb
clc
lret
inc
js
add
push
mov
jmp
dec
and
dec
xchg
fwait
or
movsl
add
sub
sbb
out
mov
int
mov
lret
pop
data16
out
sub
push
icebp
push
loopne
adc
pop
pop
popa
ror
xor
adc
daa
xchg
jl
xchg
loopne
dec
out
mov
dec
mov
cmpsb
pop
enter
pop
push
out
adc
or
in
sbb
loopne
cmc
sub
dec
sbb
or
sbb
cmp
sbb
adc
xchg
cmp
sub
inc
push
cmp
fcmovbe
test
sbb
imul
stos
into
pushf
fwait
out
inc
stos
mov
movsl
imull
lock
push
or
adc
xor
fisubl
fcomps
out
adc
dec
jle
lahf
shrb
pop
push
scas
mov
out
imul
mov
mov
enter
sti
sti
dec
dec
fbstp
mov
hlt
mov
lds
fiadds
jns
in
popf
std
lret
leave
inc
mov
cmp
movsl
xchg
jg
dec
out
push
push
hlt
cwtl
jnp
sti
out
inc
aaa
xchg
push
adc
imul
addr16
xor
mov
ffree
push
push
shl
push
pop
int3
scas
popf
cli
cli
mov
out
cmpl
adcl
je
mov
daa
stos
cwtl
lahf
xchg
clc
pop
cs
cmp
xor
xor
xor
test
cmpsl
mov
and
fcompl
inc
scas
inc
sti
inc
pcmpeqd
add
shrb
nop
pop
push
leave
rolb
mov
dec
push
hlt
das
jmp
mov
ljmp
mov
xchg
lahf
push
mov
push
pusha
out
fistpl
cli
mov
or
out
jle
es
ret
ja
jae
in
sub
mov
mov
sbb
int
push
pop
adc
mov
rcrl
test
or
jne
icebp
mov
lret
loopne
imul
stc
mov
aam
repz
cmpsb
dec
add
lods
stos
in
push
addr16
shrb
push
adc
xchg
jmp
sbb
and
mov
add
push
fists
ss
leave
push
mov
sbb
popa
fcomps
or
scas
and
cmp
cmp
xchg
fwait
cld
pop
and
int3
scas
mov
cmc
or
mov
sbb
pop
jbe
fists
aaa
dec
es
nop
mov
sub
and
popa
repz
push
or
mov
scas
sub
subb
jle
mov
insl
push
scas
sbb
adc
fs
cmp
or
test
inc
pop
sbb
jb
push
rolb
mov
add
into
push
hlt
inc
leave
cmp
lods
mov
rclb
jo
jae
and
pop
mov
data16
arpl
add
aaa
test
loope
inc
je
push
rol
xchg
data16
test
cmpsb
sub
fucom
fucomi
pop
pop
xchg
cmp
das
sbb
das
xlat
daa
fcompl
push
fs
pushf
mov
iret
cmp
sahf
int
mov
movsl
out
or
sbb
xchg
mov
add
ss
dec
or
lahf
cmpl
jg
sub
xor
jg
pop
xchg
out
jl
aaa
data16
repz
cli
gs
scas
mov
cwtl
fwait
jae
pop
fstl
sbb
in
fnstsw
mov
pop
insl
dec
mov
adc
jl
nop
ljmp
cli
sub
cmp
sarl
loop
sbb
dec
test
push
leave
pop
das
pop
xchg
push
fs
ss
mov
add
lods
pop
fwait
icebp
pop
inc
sub
lods
xchg
and
out
cmp
or
leave
mov
jecxz
pop
insb
jg
dec
push
clc
xchg
xchg
push
repnz
add
mov
sub
into
out
cmp
push
or
lcall
rcll
inc
mov
mov
xor
xchg
int3
dec
dec
leave
mov
mov
decb
and
loop
xchg
call
daa
mov
mov
push
ror
outsb
nop
xor
lods
pop
jp
and
push
mov
je
push
push
testb
mov
adc
rcrl
fsubrs
test
and
jnp
fs
sbb
or
xor
mov
xchg
push
bound
jg
ret
dec
mov
sbb
inc
mov
xor
test
repnz
mov
inc
ljmp
lods
mov
or
mov
movb
inc
cmp
imulb
mov
push
mov
rorl
pop
or
pop
sbb
fdivl
ficomps
mov
insl
xor
xor
cmpsl
enter
jae
in
mov
cs
jno,pn
in
iret
ficoml
icebp
jb
xchg
movsl
pop
test
rolb
addr16
sbb
xchg
int3
rcrl
mov
stos
in
mov
push
aam
das
sub
loop
enter
call
out
fnstenv
mov
outsl
mov
inc
xchg
int
orb
dec
jae
sahf
jmp
pop
lock
mov
push
lds
lock
ret
mov
dec
xor
bound
inc
test
mov
int
sub
adc
cmp
mov
pop
cmp
xor
in
mov
sub
ret
pop
sarb
jo
call
sbb
stos
push
jecxz
jns
push
xchg
fs
mov
xor
xlat
sub
add
loop
ret
lahf
jl
mov
fcom
mov
int3
stos
inc
in
adc
lret
push
mov
in
lea
cmpsb
data16
sbb
jl
pop
mov
leave
sub
js
pop
pop
pusha
jmp
sbb
add
xor
adc
fs
sub
cmp
pop
adc
mov
aaa
push
jne
push
xchg
jmp
aad
jno
ss
inc
inc
jne
jmp
in
xchg
sbb
inc
je
jl
or
enter
push
sub
sub
mov
push
out
test
out
push
dec
jle
mov
xchg
lret
fcmovnbe
jg
inc
push
iret
shlb
rcrb
sbb
rcrl
icebp
in
push
fwait
jg
lea
movsl
mov
sahf
shrl
jmp
call
stos
pop
cmp
adc
outsb
sahf
and
xchg
bound
adc
pushf
pop
mov
in
cmp
push
push
or
cmp
mov
xchg
mov
arpl
pop
loope
in
pop
cltd
lret
xorb
dec
sub
push
mov
mov
js
cmp
mov
cmpsl
clc
or
andb
mov
adc
jecxz
les
sub
repnz
movl
inc
sbb
out
add
pop
or
int3
pusha
sub
mov
imul
xchg
and
or
sub
and
movsl
sbb
lret
nop
cwtl
or
pop
xor
je
divb
or
ror
and
in
mov
popf
jmp
mov
jb
push
mov
and
enter
daa
pop
testl
pop
out
mov
out
ds
pop
arpl
pop
out
sbb
fwait
out
lods
dec
mov
jnp
xchg
xor
inc
pop
pop
mov
adc
mov
lret
dec
fdivrl
jno
xchg
sbb
mov
fiadds
dec
fs
gs
test
outsb
adc
ja
insb
inc
popa
aad
inc
fsubs
cli
adc
mov
js
sbb
jns
out
push
rol
rcll
lea
cwtl
mov
sub
fidivl
scas
je
mov
push
push
xchg
inc
mov
les
lds
and
cmc
mov
mov
mov
cmpsl
jne
loopne
jo
xlat
mov
pop
iret
repz
je
cli
shl
in
mov
je
sbb
mov
adc
xor
mov
dec
iret
mov
mov
dec
xchg
mov
xchg
inc
ret
jns
jl
rcrb
xchg
or
fsubl
dec
sub
ret
pop
jbe
xlat
mov
fadd
cmc
fstpl
and
data16
and
cltd
mov
icebp
jle
or
xchg
pushf
push
xor
sbb
sbb
out
adc
mov
fistpll
fwait
test
call
cmp
mov
xchg
sti
jecxz
outsl
lds
stc
arpl
div
mov
cmc
mov
or
xchg
cmp
sbb
xor
mov
cs
pop
dec
sbb
ja
inc
or
or
in
nop
mov
sbb
test
sub
xchg
xchg
popf
cmpsl
pusha
xchg
fisttpll
mov
xor
cmc
jle
mov
jmp
enter
fiaddl
adc
out
leave
pop
add
insb
push
adc
mov
hlt
mov
mov
scas
mov
enter
mov
push
aaa
movsl
or
outsb
incl
shlb
out
rdmsr
insb
cltd
xlat
loopne
pop
mov
enter
int
mov
scas
in
or
xchg
movsb
mov
add
js
mov
in
imul
fstpl
fst
sbb
pusha
test
mov
add
xchg
inc
cltd
jp
lahf
ficoms
sub
mov
cmp
enter
inc
pop
rcrl
and
adc
nop
insl
es
mov
mov
std
mov
fcomps
mov
xchg
or
and
insb
jb
inc
ds
mov
push
and
stos
push
or
sub
cmc
test
xchg
lock
xchg
push
sbb
cmpsb
incb
test
loope
loope
cmp
cmp
or
jp
stos
inc
mov
mov
or
sbb
outsl
lds
xor
jecxz
xchg
sbbl
ficoms
mov
stc
loop
fsubr
pop
and
movsl
mov
pop
clc
aam
inc
sub
add
movsb
pop
mov
imul
out
push
jp
mov
pop
mov
cmc
push
xchg
mov
cli
adc
dec
xor
loop
dec
mov
sbb
imul
fsubrl
cmp
rclb
cs
fs
pop
pop
cmc
jnp
push
in
inc
or
mov
enter
inc
mov
mov
outsl
lock
sti
sbb
mov
leave
lods
out
mov
fcoms
sbb
addr16
insl
dec
test
loope
pop
cmc
mov
push
fsubr
adc
cltd
xchg
popa
repz
xchg
xchg
inc
and
mov
or
or
sbb
jp
cmp
subl
sahf
les
push
outsl
pop
pop
push
arpl
mov
and
es
sbb
mov
push
or
adc
cmc
in
outsb
mov
repz
mov
add
cmovg
jg
ljmp
dec
xor
cmpsl
mov
push
mov
ss
gs
fldl
aad
pop
and
xchg
jnp
jge
xor
and
mov
push
push
stos
xchg
int3
or
or
movsl
adc
cwtl
enter
or
icebp
out
std
out
int
jge
in
inc
stos
cmp
pshufw
testb
js
mov
mov
cmp
inc
pop
in
mov
in
mov
push
fbld
out
aam
flds
adc
cs
inc
out
mov
fsts
xorl
sub
cmp
lret
lds
adc
cli
in
cli
xchg
sbb
iret
mov
data16
sbb
push
jo
jnp
inc
in
stos
iret
jmp
jae
inc
je
insb
rcll
std
dec
mov
stos
mov
inc
or
das
cmp
xchg
scas
ss
lea
jmp
mov
xchg
push
mov
mov
in
mov
pop
pop
stos
cltd
mov
dec
cli
push
enter
or
cmp
in
xchg
lret
mov
xchg
inc
dec
subb
add
iret
jmp
and
jo
add
sub
fnstcw
repz
scas
push
dec
rorl
add
mov
inc
cmp
cmp
int
call
inc
outsb
shll
cli
dec
lahf
add
mov
int
popf
cmp
adc
sbb
ds
xor
lret
xor
jbe
in
pop
sub
push
je
dec
cmpsl
sbb
adc
push
subl
lds
pop
add
popf
jecxz
loop
imul
mov
mov
and
add
cmp
xor
add
xchg
outsb
sbb
adc
inc
shl
movsl
push
outsb
movsl
aam
scas
icebp
or
std
scas
or
jo
lahf
jb
push
mov
incl
mov
ret
cmp
push
in
daa
xchg
lea
mov
loop
and
cmp
pop
fistl
mov
aas
or
xchg
jge
out
shlb
mov
je
lods
cmp
xor
fdivp
mov
fidivrl
ret
ss
xchg
mov
mov
cltd
cmp
sarl
addr16
enter
sahf
cmp
fs
inc
ret
xchg
dec
jns
sub
outsb
add
mov
mov
and
adc
inc
dec
pop
mov
pop
jecxz
addr16
push
or
push
mov
mov
or
sub
push
cmpsb
fbstp
outsb
clc
jnp
out
and
jae
or
aas
sahf
push
jmp
ljmp
fcompl
pop
mov
jecxz
sbb
clc
add
scas
por
fisubrs
or
insl
sub
lcall
inc
sbb
out
sarl
inc
push
int
push
call
lret
enter
stos
mov
push
das
aaa
fcompl
lret
adc
xchg
inc
inc
jo
fidivrs
add
jge
sub
sbb
xor
les
repnz
nop
cmp
sbb
jnp
data16
pop
jle
inc
sub
andb
addb
sbb
icebp
mov
fchs
and
mov
sbb
sub
push
and
rolb
and
xchg
jb
iret
dec
fdivl
cmp
popf
jo
push
dec
jae
mov
test
icebp
fsubs
push
ret
je
aas
loopne
lock
mov
sbb
cmp
je
jnp
out
add
xchg
dec
lds
imul
cld
mov
xchg
sti
jne
cmp
fwait
sbb
aas
roll
les
inc
dec
movsl
inc
fsts
pushf
pop
adc
inc
adc
call
dec
sahf
add
sub
jae
ljmp
push
and
test
cmp
mov
jl
and
xor
je
mov
xor
mov
lods
inc
pop
dec
mov
fwait
aam
xchg
movsb
xchg
gs
jno
push
mov
bound
mov
push
call
sbb
xchg
scas
add
xchg
ret
mov
push
add
cmp
cmp
inc
inc
loop
ja
ljmp
into
rorl
inc
and
bound
data16
mov
mov
pop
sub
xorb
out
call
mov
test
in
ja
call
mov
pop
cmc
fcomps
sbb
push
xchg
lds
shlb
adc
std
mov
lock
or
jae
or
mov
xchg
shll
sub
dec
adc
inc
cmp
ljmp
pop
fstpt
xchg
lahf
cmpsl
aaa
push
sub
mov
mov
int
ss
fnstsw
inc
dec
add
jl
lock
add
pop
push
xor
fs
jmp
aaa
pushf
lds
sbb
ja
lea
xor
push
dec
imul
jle
into
sub
iret
cwtl
icebp
xchg
jb
push
pop
xlat
xor
sub
loopnew
xchg
std
pop
pop
add
aas
cmp
push
leave
cmc
add
dec
sub
push
cltd
fnsave
push
dec
repz
inc
and
xchg
nop
lds
and
pop
jae
mov
adc
fistpll
sbb
idivb
jns
movsl
ss
lods
in
jmp
arpl
or
sarl
jmp
push
pushf
and
or
mov
push
aad
clc
ja
cmp
jnp
adc
daa
in
sub
cwtl
jge
adc
daa
jne
mov
inc
pop
pop
jg
inc
jnp
stc
lea
mov
cltd
jb
daa
adc
dec
loopne
mov
cmc
dec
mov
into
push
iret
imul
jo
mov
pop
js
into
jmp
out
dec
sti
jno
daa
jp
inc
add
cmp
add
sbb
enter
cld
jae
fisttps
adc
adc
or
imul
mov
xchg
sbb
stos
cs
das
mov
sub
add
xor
je
inc
push
imul
or
jge
xlat
ljmp
out
shr
movswl
push
and
xchg
andb
mov
mov
rorl
int3
xchg
scas
daa
pop
std
ljmp
jl
scas
jb
jns
jecxz
mov
inc
ror
xchg
pop
jae
pop
es
cmp
aas
dec
or
or
or
cmp
xchg
fldcw
stos
popf
push
arpl
lds
cmp
and
adc
es
cld
xsha1
cmpsb
jae
jmp
sub
mov
pop
xor
insl
push
fisttpl
pop
divl
int
outsb
popa
cli
sub
fldenv
mov
sub
out
xchg
adc
and
das
mov
nop
nop
fcoms
dec
sub
int
dec
stc
sub
or
mov
fwait
mov
adc
shll
and
scas
push
or
inc
scas
lods
or
xchg
mov
lock
scas
decl
fucompp
sbb
rolb
gs
jb
cmp
mov
test
mov
out
jp
inc
and
xor
loope
xor
in
sbb
xlat
scas
iret
out
mov
subb
xor
xor
and
fildl
jnp
cmp
push
subl
fcmove
mov
dec
lods
pop
sbb
ljmp
add
aam
cmp
pop
add
mov
mov
cld
sbb
sbb
mov
test
ljmp
fdivrs
aam
pop
xchg
and
gs
sub
sub
enter
cld
aam
popa
cld
imul
mov
sbb
xchg
jl
push
sub
cmp
filds
and
inc
jne
sub
xor
dec
xor
pop
int
ficompl
xchg
les
or
nop
arpl
jbe
aaa
jmp
inc
lods
inc
pop
fdivrl
or
or
pop
mov
mov
fs
xchg
cmp
or
pop
push
cmp
cmp
jle
xor
mov
lahf
icebp
arpl
cwtl
push
sbb
mov
adc
inc
scas
sbb
loop
jae
xor
cltd
movl
adc
lds
leave
shll
add
into
into
inc
popa
pop
push
test
in
inc
in
push
pop
and
pop
repz
sbbb
out
jge
ss
cld
ss
adc
fidivl
push
dec
xchg
lret
fmuls
mov
sbb
push
xchg
dec
inc
push
xor
mov
aam
sbb
adc
fs
repz
adc
adc
xor
push
iret
aaa
xchg
push
mov
in
int3
mov
jp
std
daa
push
mov
pop
scas
adc
cs
push
je
imul
and
sarb
lcall
and
int3
aaa
lea
cmp
or
sahf
nop
pushf
in
out
fmul
mov
sub
and
dec
repnz
push
stos
das
lret
or
mov
xor
or
test
wbinvd
shlb
cld
aaa
es
pusha
testl
add
and
jno
scas
cmpsl
fcomi
xor
and
sub
roll
pop
rcrb
jbe
test
cmp
rcll
repz
push
aaa
cmp
inc
mov
in
add
call
imul
mov
mov
inc
daa
pop
arpl
fidivrl
dec
shld
jb
xor
mov
mov
negb
adcb
popf
sti
mov
inc
push
adc
mov
enter
xchg
scas
shl
push
or
cs
stos
mov
lahf
mov
out
add
push
aad
pop
adc
xlat
lea
sbb
add
dec
mov
xor
mov
xor
pop
mov
mov
ja
dec
push
or
add
xor
push
addr16
nop
rorl
mov
xlat
mov
movl
push
dec
xor
or
fstl
imul
roll
sub
pop
xor
subb
mov
fisubl
push
add
cmp
nop
cli
jbe
mov
fisubrl
scas
jne
push
and
sbb
das
mov
pop
repnz
jp
mov
adc
add
pop
sub
enter
iret
or
dec
cmp
inc
sahf
adc
ss
mov
mov
jp
inc
pop
enter
jmp
cwtl
inc
add
movsb
jb
jb
xor
fiadds
scas
dec
js
push
cmp
jae
cmpsl
pushf
mov
sub
jae
mov
call
in
ss
lea
or
xor
shrl
xor
hlt
sub
sti
pushf
cmp
cmp
sbb
pushl
int3
loopne
add
pushaw
jo
es
cmc
xchg
push
inc
in
mov
jl
pop
sub
jge
leave
adc
mov
lods
dec
jmp
sub
lea
mov
mov
int
repz
sub
outsb
xor
leave
adcl
arpl
lods
and
add
or
in
cmp
imul
inc
cmc
push
sub
jno
xchg
dec
dec
mov
xor
roll
sbb
aad
stos
stos
test
addr16
add
sbb
or
int
xor
jns
stc
jno
mov
test
xlat
faddl
dec
jne
or
lods
xor
jge
mov
repnz
je
dec
hlt
stos
sbbl
cmp
nop
scas
dec
das
dec
jg
stos
xchg
lock
dec
xor
jl
mov
push
pop
push
sub
dec
sbb
mov
aaa
add
dec
fimuls
cs
pop
push
pop
in
push
inc
sbbb
icebp
and
adc
pop
sub
jns
rorb
or
mov
aad
js
add
incl
xchg
negb
add
addr16
shrl
mov
push
clc
cmpb
das
bound
imul
sub
inc
adc
movsl
mov
mov
sub
rcrl
xchg
inc
je
jl
xchg
jecxz
andb
mov
mov
jne
out
or
cmpsb
ds
cwtl
push
imull
mov
into
iret
push
test
lahf
xor
es
push
mov
push
mov
mov
pop
adc
adc
insl
je
inc
sbb
push
inc
jnp
sub
inc
pop
clc
out
xchg
clc
sbb
neg
sub
jne
push
mov
cwtl
xor
outsl
cmp
imul
lret
add
mov
in
das
cmp
push
loop
enter
pop
pop
cmp
imul
les
ret
imul
mov
cmp
xchg
loopne
in
dec
dec
rolb
or
scas
mov
jae
inc
cmp
cmc
lahf
rorb
mov
repnz
inc
xor
je
ljmp
out
xor
sub
cld
aad
and
and
fidivl
cmpsb
clc
xchg
jge
sbb
sub
xlat
xchg
fadd
add
cmp
or
mov
lock
lea
test
aaa
xlat
cltd
pop
or
xor
xchg
sbb
adc
push
jle,pn
imul
nop
mov
mov
and
push
imul
in
repz
inc
mov
jo
fwait
enter
cmpsl
sbb
ja
fsts
fwait
rolb
icebp
mov
mov
cmp
sub
nop
das
aam
inc
pop
cld
push
or
mov
jno
roll
jmp
sbb
test
ss
int3
in
cltd
push
xchg
dec
sbb
xchg
jle
xchg
ljmp
movsb
pop
ds
and
sub
mov
mov
xchg
jo
jb
sub
loop
adc
ret
leave
addr16
rcrb
aam
add
push
fbld
pop
cmp
outsb
cmp
mov
add
insl
test
data16
jp
enter
fucomip
rcll
or
neg
push
shrb
subl
inc
leave
or
or
pop
repnz
xchg
mov
shlb
fmull
shrl
fistl
cmpsb
sbb
pop
push
pop
add
fdivrs
insb
gs
hlt
jno
sbb
cli
outsb
sub
imul
mov
mov
mov
pop
or
and
jns
daa
sub
and
iret
dec
leave
sahf
or
sub
leave
bound
dec
xchg
pop
cmp
jb
into
in
mov
xlat
cmp
and
mov
rorb
aas
je
ds
or
loop
lds
lahf
test
sbb
scas
inc
add
xorl
xchg
stos
jge
cmpsb
rorb
shrl
out
pusha
dec
mov
jne
cli
mov
or
jns
cmp
sbb
mov
add
sbb
push
and
nop
cwtl
and
loope
popf
sub
pop
pushf
xchg
aas
mov
lds
jmp
mov
sti
pop
jge
push
test
pushf
mov
mov
insl
sub
rcrb
adc
dec
pushf
loopne
ret
sub
inc
bound
hlt
lret
xor
rcl
movsl
pop
ror
mov
add
imulb
xor
jle
inc
scas
mov
sub
or
mov
push
jae
stos
mov
sub
ficomps
fsubs
cmc
xchg
pop
rcr
out
into
imul
leave
mov
or
push
fwait
xchg
pop
fdivrs
mull
jge
std
lods
mov
xchg
sub
pusha
dec
xor
xchg
mov
in
lret
sub
push
pop
jo
iret
jmp
push
lret
loope
mov
ret
cmp
in
push
leave
sub
test
inc
mov
repnz
out
push
dec
roll
jecxz
lret
mov
push
ljmp
mov
jb
shl
sbb
mov
leave
cli
mov
mov
inc
ss
cmp
and
pushf
jbe
mov
lea
mov
mov
loop
xor
inc
outsb
mov
xor
les
test
stc
stos
mov
or
ja
add
pop
bound
add
or
std
fcom
mov
mov
sti
and
add
mov
sbb
xchg
les
sub
inc
add
addr16
popa
xor
sub
inc
iret
lret
or
std
mov
test
out
subl
mov
xor
jg
out
cmp
mov
push
lahf
dec
fwait
inc
xor
leave
xchg
leave
les
sub
mov
mov
in
or
push
mov
mov
test
add
push
mov
inc
pushf
pop
sub
rcl
inc
sbb
xchg
xchg
jl
rorb
pop
push
fcoms
sbb
cmp
movsl
sahf
push
inc
shl
push
jmp
fisttpl
aad
push
imulb
push
loop
mov
dec
jo
and
ss
mul
outsb
cmpsl
sbb
dec
adc
and
pushf
sub
call
ret
ret
sub
iret
and
test
jne
jg
add
scas
or
out
icebp
js
xchg
bound
jo
jp
mov
imul
mov
or
mov
push
outsb
adc
inc
xchg
cmp
outsb
das
jg
ja
add
mov
cld
ffreep
adc
inc
lret
addr16
js
test
push
pushl
leave
mov
xlat
out
pop
divl
pop
inc
push
fidivrl
xchg
insb
mov
clc
and
fidivl
xor
mov
cli
imul
lds
addb
iret
xchg
mov
dec
mov
inc
jmp
cmp
jne
dec
jl
fsubrl
mov
outsl
xchg
clc
stos
push
negb
into
xor
push
push
mov
popf
xlat
in
and
cmpsl
sbb
popl
cs
icebp
cmc
cmp
imul
or
lds
ja
mov
pop
iret
jg
add
jl
vpcmpeqw
mov
ljmp
sub
pop
pop
jne
push
and
sub
gs
push
jmp
outsb
mov
sarl
adc
push
xchg
cmp
js
xchg
lahf
cwtl
rclb
xor
and
outsb
pop
daa
aas
jne
add
movsb
sub
xchg
xchg
icebp
mov
push
data16
jle
xchg
out
cmp
add
cltd
cmpsb
mov
mull
inc
rcr
movsl
gs
and
xchg
enter
fucomip
sub
sub
mov
jle
iret
cld
popf
cmc
jno
sub
or
xchg
push
or
pop
stos
std
and
jmp
fidivrl
jg
int3
sbb
add
dec
dec
and
ss
xchg
adc
or
cmc
pushf
les
xchg
gs
dec
je
cmp
fisttps
sbb
ljmp
add
push
sbb
call
push
arpl
ret
and
nop
mov
push
scas
shl
jo
jns
xchg
xor
and
cmp
sbb
shll
pop
dec
test
negb
call
rol
add
jecxz
mov
jnp
cmp
imul
adc
xlat
xchg
and
popf
jecxz
call
dec
push
icebp
out
ja
dec
xchg
gs
pmaxub
sub
push
jp
aaa
mov
scas
inc
adc
push
sbb
aam
pusha
jno
xor
jae
xchg
mov
dec
dec
rcrl
sub
pop
xchg
in
push
rol
outsl
pop
xchg
insl
sub
pushf
dec
inc
cmc
mov
sub
jnp
jmp
or
divb
aaa
push
popf
repz
dec
in
dec
dec
stos
adc
push
mov
jne
xchg
out
scas
jns
mov
gs
js
in
push
sbb
movsb
adc
lods
mov
xor
lret
lcall
idivb
in
ret
xchg
push
lret
pop
movsl
mov
adc
stos
cmp
adc
pop
push
aas
jnp
jge
xor
lea
cmp
fs
sti
cmp
fmull
dec
leave
icebp
leave
aad
rolb
push
jp
dec
fdivs
es
lret
shl
sub
pop
push
stc
or
dec
pusha
test
and
je
out
sbb
push
sub
movsl
add
pusha
mov
addr16
dec
sub
icebp
out
push
push
nop
dec
xlat
stos
data16
pop
inc
push
cli
mov
xor
adc
mov
mov
or
push
sbb
push
out
sub
aad
lret
sub
mov
sbb
jne
lods
test
movsb
dec
shrb
jo
jl
or
ret
inc
xchg
subb
insb
and
sub
ficomps
sub
mov
and
fistpl
mov
sbb
dec
xchg
test
fildl
mov
and
xor
xchg
insb
or
push
ljmp
hlt
push
mov
sbb
sub
cmpsl
xor
aas
lods
jns
lahf
cltd
cmp
es
xchg
cmp
or
dec
mov
lds
sbb
stos
mov
mov
loopne
int
push
cltd
dec
js
push
andl
test
push
shrb
jo
push
clc
or
mov
frstor
mov
mov
push
mov
leave
add
cwtl
loopne
enter
adc
or
popa
pop
push
adc
cmp
les
fmuls
lods
in
cmp
call
sbb
popf
xchg
js
in
push
lahf
adc
or
jo
mov
jmp
test
inc
pop
pop
xchg
es
movsb
faddl
and
int
mov
addb
adc
or
cmpsb
lds
movsb
imull
push
xchg
loopne
mov
cmc
fcoms
cmpsb
or
dec
out
insl
mov
pusha
iret
roll
out
into
push
xor
stos
lock
pop
enter
jge
adc
xor
dec
sarb
or
and
mov
scas
cld
fnstcw
lret
or
xor
leave
lds
jns
dec
push
out
test
sub
scas
int
mov
cmp
mov
add
out
into
cmp
push
pop
es
xchg
sbb
loopne
push
das
iret
and
pop
sub
enter
pushf
jle
test
mov
add
cmpsb
inc
xor
pop
stc
add
inc
inc
in
push
insl
adc
fsts
out
pop
mov
mov
pop
mov
pop
scas
pop
jmp
mov
add
js
mull
pop
mov
xchg
sub
push
mov
cltd
jb
aam
in
or
adc
fmuls
aaa
repz
adc
add
imul
mov
mov
push
dec
lock
xchg
orl
and
nop
popa
pop
or
dec
lret
mov
pop
jo
jns
insb
mov
push
dec
sbb
andps
insl
rorl
loop
sahf
or
inc
test
addr16
arpl
icebp
xor
inc
push
sub
les
sbb
and
mov
test
hlt
xor
pushf
jp
es
dec
ficoms
jg
std
dec
rcl
lea
xor
ret
sbb
or
ret
fsub
outsb
xchg
jmp
ret
clc
fwait
push
loop
mov
mov
movsb
out
adc
add
data16
divl
std
mov
jmp
cmp
aam
push
dec
adc
cld
int3
dec
imul
pop
lret
xchg
mov
and
aam
xor
push
movsl
dec
adc
ds
adc
xchg
cmpsl
fsubr
fwait
pop
mov
push
xor
or
or
xlat
pop
rcl
xor
jo
sbb
daa
mov
dec
mov
fidivrs
mov
movsb
call
ret
adc
cmpsl
pop
jecxz
dec
mov
aad
js
push
cmp
xor
adc
insl
push
push
jne
mov
xlat
mov
in
sbb
and
hlt
inc
sti
inc
cmp
push
es
imul
push
jp
xchg
pop
leave
push
lcall
sub
pop
fildl
test
mov
push
jae
sbb
clc
xchg
loope
mov
add
clc
in
popf
xor
xor
xor
xor
jle
pop
jnp
fidivrl
sub
dec
xchg
jecxz
hlt
stos
sbb
shrb
mov
sbb
push
and
or
mov
mov
xchg
popf
out
ds
add
pop
jge
adc
push
push
out
ja
jl
add
mov
lret
cmp
sub
ret
js,pn
xchg
hlt
adc
inc
or
in
lods
sub
fwait
sti
hlt
enter
mov
fwait
cmpsl
pop
lds
pop
fldcw
loop
in
out
mull
xchg
stc
dec
push
mov
rclb
or
push
test
stos
xor
insb
mov
cmpsb
in
push
mov
pop
cmp
stos
iret
add
xor
out
stc
sbb
test
dec
adc
add
pop
lds
test
or
mov
mov
scas
dec
jno
loopne
addr16
shrl
cmp
mov
sub
cmp
xchg
cld
xchg
mov
das
and
aaa
jae
sbb
das
insl
mov
pop
addb
mov
xchg
pop
inc
ljmp
in
ret
fcmovnb
int
int
out
in
mov
adc
pop
gs
add
xor
jge
xor
mov
pop
movsl
int3
mov
dec
mov
std
lods
pop
test
in
xor
mov
adc
lds
ss
or
mov
mov
stos
lcall
decb
add
mov
popa
in
pop
mov
fdivl
call
pop
in
mov
in
xor
mov
iret
inc
hlt
loop
ja
cmpsl
shrl
mov
xor
or
add
push
mov
jle
mov
sub
das
xchg
aaa
enter
xlat
xor
icebp
stos
enter
xor
fildl
ud0
push
jge
in
and
add
pusha
cmp
jns
idivl
icebp
jae
movsb
and
jl
cltd
movsb
iret
rcrl
mov
mov
popa
xchg
jmp
mov
mov
aas
es
mov
cmp
sub
and
sbb
push
push
sbb
iret
movsb
dec
mov
sbb
rcr
add
sub
fcomps
sub
test
in
adcl
or
popf
mov
push
mov
inc
lahf
jp
and
jae
in
add
pop
jl
xchg
xchg
dec
jo
out
adc
mov
and
mov
lods
scas
int3
inc
mov
mov
jle
pop
lret
mov
or
jmp
lret
add
test
add
icebp
icebp
addr16
or
outsb
mov
pop
or
lock
or
inc
add
cs
xchg
mov
xchg
hlt
fstl
pop
mov
inc
dec
jne
std
imul
or
cmp
push
xchg
and
dec
jbe
push
adc
insb
lcall
imul
out
mov
dec
xor
mov
movsl
adc
nop
in
mov
sub
fildll
mov
ss
movl
mov
push
or
sub
bound
ds
fcoml
cltd
fnstenv
sti
add
repz
push
xor
loope
daa
imul
mov
xchg
cmc
int3
jg
or
aas
xchg
and
stos
lcall
or
mov
xor
inc
das
es
fistpl
pop
adc
out
add
cmp
mov
sbb
dec
test
inc
push
adc
mov
push
fwait
gs
mov
les
pop
popf
mov
sahf
and
bnd
or
mov
jno
jbe
call
iret
or
push
ret
enter
cmpsb
pop
in
mov
rcl
mov
leave
repnz
nop
or
xchg
cmpb
add
insb
nop
xchg
insl
dec
push
fmul
cmp
movsl
xchg
cmpsl
sbb
and
dec
insb
aam
loope
mov
cmp
mov
pop
sar
cmp
inc
pop
add
xor
adc
cs
add
jl
mov
xor
mov
cmp
mov
mov
sub
jecxz
mov
xchg
pop
clc
pop
xchg
push
mov
sti
fbstp
loopnew
dec
jb
stos
jnp
xor
test
or
xchg
dec
xchg
mov
adc
hlt
out
inc
push
shl
mov
in
das
lods
pop
jg
mov
push
push
div
pushf
xor
lcall
jg
pop
ss
rcrl
dec
cwtl
nop
out
dec
xor
add
mov
outsb
jp
jae
andl
fstp
jmp
ja
sub
fisubl
lret
ret
and
je
mov
ficoms
mov
inc
pusha
fisubl
pop
mov
jmp
enter
shlb
push
mov
leave
jg
pop
lea
subb
pop
test
jno
sahf
adc
orl
test
in
push
and
sahf
jb
data16
mov
xchg
push
enter
lods
fsqrt
mov
cmpsb
mov
in
les
mov
inc
mov
mov
cli
jbe
rcrb
or
cmc
cmp
testb
cmp
sub
inc
fs
imul
aaa
js
shrl
shll
pop
inc
add
push
mov
shl
adc
out
in
dec
lret
dec
mulb
jnp
call
sbb
or
lea
rcrb
mov
inc
add
pop
mov
push
ds
adc
in
push
gs
std
inc
rolb
push
pop
mov
lret
bound
xchg
xchg
sub
lods
fdiv
lds
mov
jge
add
testb
add
lds
xchg
mov
cwtl
xchg
push
push
inc
cmpsl
sbb
inc
jl
jge
push
push
add
movsb
push
and
push
out
js
jo
cmp
and
rorl
js
ds
xchg
cmp
js
push
adc
add
mov
mov
mov
push
xor
divl
push
arpl
jecxz
mov
xchg
in
jns
lret
sbbb
sbb
xchg
mov
dec
bound
stc
push
outsl
outsb
stos
mov
and
cld
loope
cmp
dec
in
mov
lcall
sbb
push
xchg
add
out
xor
pushf
cmp
lea
mov
stc
or
dec
stos
xchg
lret
inc
mov
jg
sub
xor
shlb
pusha
add
imul
loop
iret
mov
outsl
test
lret
lret
and
scas
in
int3
mov
test
insb
mov
fcoms
and
and
dec
inc
dec
cmpsb
popf
adcb
insb
int3
cmp
xor
scas
bound
pop
js
in
std
leave
call
add
ds
or
int
js
lock
ret
push
push
mov
std
push
sbb
mov
adc
adc
mov
push
push
in
xor
shrl
addr16
sbb
adc
pop
pop
mov
mov
mov
xor
add
in
cwtl
jle
or
insb
or
adc
outsl
and
test
iret
out
pop
pop
inc
dec
cmc
mov
and
and
xchg
mov
or
js
cltd
or
inc
inc
xor
mov
imul
add
movsl
cmp
cmp
jmp
fprem1
cld
mov
pop
mov
adc
cs
dec
jmp
out
push
popa
les
pushf
push
mov
xchg
ret
sub
loop
mov
xor
movb
rcrb
lcall
cld
xchg
mov
xchg
mov
sub
jo
or
dec
enter
stos
xchg
cmpsl
xchg
arpl
imul
or
pusha
and
jle
fistl
mov
rcr
inc
sub
xor
cs
and
pop
and
xchg
mov
add
in
ret
and
jp
popf
xchg
sbb
mov
jb
xor
mov
mov
fwait
scas
xor
clc
cwtl
jnp,pn
sbb
aam
mov
pop
scas
das
pop
inc
push
icebp
jnp
lret
push
sar
test
push
fistl
jno
sbbl
sbb
scas
dec
mov
mov
hlt
aaa
aaa
cmp
mov
sahf
leave
ret
push
ljmp
jnp
push
aaa
add
xorb
inc
rcll
into
mov
xlat
pop
loope
pop
xorl
push
add
jecxz
jne
jbe
inc
adc
xchg
adc
cltd
rclb
mov
int3
xchg
jg
cmp
jns
push
sub
sub
cmp
mov
test
cmp
pop
sahf
sub
jecxz
xor
dec
addr16
fsubl
lret
arpl
pop
mov
lds
jmp
arpl
lcall
cmpsb
loop
hlt
andl
dec
add
test
push
rol
inc
cltd
fsubs
push
sbb
leave
fisttpll
jno
cmp
xchg
jge
add
push
adc
jne
xor
gs
cmc
mov
popf
outsl
vpshaw
lcall
icebp
out
cmpsl
inc
repnz
or
sti
sbb
add
jbe
movsl
fiadds
movsb
lock
imul
das
or
or
sbb
lock
clc
out
cmp
or
xchg
hlt
out
mov
shl
push
mov
inc
data16
mov
mov
sar
mov
dec
inc
mov
shl
lods
std
fcomps
push
pushf
adc
inc
gs
xchg
cmc
dec
jg
push
add
mov
add
jmp
jecxz
pop
aad
lock
push
lcall
inc
add
cli
push
fadds
sbb
push
xchg
stc
insl
pop
sub
adc
test
dec
dec
cltd
mov
or
mov
xchg
mov
sub
xchg
addb
lods
rorl
addr16
aas
ffreep
sbb
push
dec
sub
or
xchg
cmpsl
jnp
mov
push
mov
jg
inc
dec
pusha
pop
daa
xabort
mov
mov
stos
lret
push
pop
pop
sti
xor
cmc
push
movsl
pop
shlb
and
push
xchg
fs
pop
dec
cmp
cwtl
pop
fwait
aaa
sahf
fwait
popa
push
adc
mov
pop
addl
sbb
xor
rcll
push
nop
aaa
cltd
or
cwtl
outsb
fcoms
sahf
mov
sbb
lcall
mov
in
mov
and
xchg
test
xor
and
mov
cmpsl
jle
dec
mov
mov
push
and
fisttpl
das
mov
inc
mov
lods
sbb
je
lods
jo
aas
fnsave
dec
into
adc
imul
xor
arpl
nop
mov
push
or
mov
xor
icebp
and
jb
stos
xor
xchg
cmpsb
jnp
adc
stos
push
or
cmp
addr16
mov
testb
das
xchg
out
adc
pop
pusha
mov
xlat
or
lods
lods
dec
nop
cmp
icebp
xor
popa
leave
inc
jno
push
mov
jb
movsl
push
sbb
es
int3
imul
fwait
jb
jge
mov
lcall
and
mov
jne
mov
mov
aad
and
scas
int3
or
add
repnz
mov
iret
push
repz
xor
lods
lods
in
mov
fists
int3
add
mov
dec
cmpsl
xor
cmp
jno
popf
iret
dec
scas
ljmp
mov
ja
or
mov
cmp
inc
xor
sti
push
inc
das
into
test
xchg
push
push
cmp
push
pop
cmp
fwait
push
ret
inc
mul
push
sbb
shll
fists
inc
out
andb
loope
inc
xor
stos
mov
pop
psubw
push
fcoms
xor
inc
and
lret
mov
icebp
ds
enter
mov
pop
mov
stos
inc
fs
out
shlb
fidivrl
popa
cmp
cmp
filds
pop
inc
push
dec
or
dec
cmp
out
in
xchg
gs
and
dec
sbb
or
push
sub
xchg
fistl
and
lcall
testl
lods
popf
cmp
jl
aas
out
sti
adc
sbb
and
decl
add
pop
lcall
sahf
sub
sar
cmp
sub
pusha
stos
shll
mov
fistpl
xor
je
imul
cmp
js
xchg
lcall
mov
lcall
jge
push
int3
mov
int3
mov
lea
or
mov
mov
mov
adc
popa
imul
and
sub
nop
cli
call
pop
or
mov
jp
xchg
std
xchg
ret
cmp
arpl
add
cmp
and
sbb
mov
inc
mov
adc
mov
inc
jae
cmpsb
xor
and
movsl
mov
ljmp
dec
insb
or
in
stos
jmp
inc
cs
dec
or
cmp
mov
inc
mov
adcb
and
sub
mov
sub
sahf
jle
jg
andb
sbb
push
mov
out
push
and
add
nop
stos
cmp
ljmp
sbb
pop
dec
mov
mov
imul
xchg
pop
and
mov
cmpsl
xlat
test
and
jl
add
rcrb
push
fmulp
jge
stos
sbbl
sbb
push
or
add
add
lods
je
jmp
sbb
push
pop
pop
test
rorb
ss
mov
aas
jl
out
sbb
cld
sbb
bound
insl
inc
rclb
xchg
gs
or
lret
stc
subl
lea
mov
jp
add
push
push
adc
push
xorl
arpl
mov
in
or
loopne
push
jo
in
add
addl
push
add
mov
lds
xchg
insl
cmp
push
pop
adc
xor
adcb
cs
xchg
shrl
pop
mov
call
stos
gs
mov
cmpl
popf
aad
arpl
push
add
inc
outsl
pop
lods
dec
out
es
sbb
or
stos
je
cwtl
jbe
pop
jl
repz
sti
fmul
mov
loop
xor
data16
mov
cmp
add
adc
inc
aas
dec
or
stos
les
push
es
sub
push
lock
mov
mov
sbb
inc
inc
or
repnz
sbb
enter
in
scas
insb
rol
cs
fnstcw
addr16
jg
push
lcall
mov
adc
xchg
mov
out
add
adc
out
dec
jb
sarl
addr16
repz
nop
and
mov
mov
xchg
fbstp
dec
push
call
dec
lahf
call
sbb
or
popf
jmp
dec
or
xchg
inc
mov
mov
push
mov
xlat
push
popa
inc
push
and
cs
bound
lods
imul
inc
addr16
mull
push
js
inc
test
sbb
imul
lahf
dec
mov
lods
sbb
ja
js
sub
inc
xor
mov
pop
adc
adcl
cmpxchg
cmc
inc
pop
jo
sti
sahf
iret
mov
sbb
imul
cli
ljmp
dec
xor
push
rcrl
cmp
shll
xor
push
data16
lods
mov
lcall
xor
pushf
lcall
push
ret
add
rcrl
sub
inc
test
and
fidivrl
push
push
mov
in
cmpsb
loop
or
sub
add
xchg
or
stos
cwtl
inc
adc
pushf
or
shrb
xchg
shl
lods
dec
push
add
jle
cmp
push
inc
ficoml
adc
push
mov
dec
mov
sub
pop
cmp
mov
sub
sbb
data16
cmp
jle
jmp
mov
jnp
popl
sti
add
and
pop
dec
data16
xor
mov
jae
in
mov
xchg
stc
std
in
sbb
pop
call
push
push
xor
movsl
sub
loop
add
clc
cwtl
mov
mov
sub
aad
inc
sub
xchg
lds
xchg
cld
sbb
inc
and
lahf
imul
bound
cmp
ljmp
push
cmp
push
inc
sub
mov
xchg
cmp
fs
sahf
jp
mov
xchg
or
stos
dec
daa
repnz
outsb
in
or
push
sub
mov
outsb
bound
pop
add
inc
xchg
xchg
sub
sbb
add
pop
in
mov
sar
mov
incb
push
adc
mov
mov
mov
inc
sbb
mov
inc
cs
pop
adc
jle
jle
in
xor
cltd
add
psubusb
mov
push
enter
dec
mov
adc
mov
sub
mov
std
mov
jmp
rolb
dec
das
or
xchg
and
rorl
sub
lret
and
mov
jge
ds
mov
ljmp
hlt
rol
mov
pop
out
mov
cltd
stos
push
mov
cld
adc
push
cltd
mov
xor
stos
sbb
test
push
add
sub
mov
dec
add
int
jns
mov
mov
aas
nop
cmp
pop
and
jg
adc
and
fildll
out
jne
xchg
pop
les
lret
lret
mov
jmp
mov
pop
dec
sbb
imul
bound
sbb
sbb
outsb
int3
repnz
mov
arpl
mov
push
adc
mov
inc
int3
sbb
inc
leave
jp
mov
pop
jle
adc
xchg
aas
sub
out
arpl
jecxz
xor
xor
xchg
mov
sub
or
pusha
addr16
data16
mov
movsb
add
xor
pushf
cwtl
mov
push
insb
addr16
mov
push
xchg
nop
mov
inc
inc
jo
adc
mov
push
mov
aaa
push
pop
mov
clc
aam
stos
popf
adc
mov
repz
lret
mov
add
cmpsl
cmp
xor
mov
outsb
and
mov
sub
dec
push
or
cmp
test
movsl
mov
dec
and
sub
and
fldl
stos
call
jno
sub
outsl
mov
sbb
or
jbe
cmp
add
sarb
out
mov
and
scas
push
out
popa
scas
mov
and
mov
xchg
xchg
mov
inc
or
mov
bound
test
lcall
add
or
testl
stos
mov
mov
pop
mov
stc
jne
push
scas
cwtl
cmpsl
sbb
and
cmpsw
or
adc
push
push
push
push
add
je
adc
and
ret
cmpsb
sub
push
or
int
xor
xchg
decb
in
cmc
inc
push
int
data16
xchg
arpl
aas
dec
xchg
sahf
je
inc
pop
add
idivb
movlps
sahf
dec
dec
pusha
nop
pop
fcmovne
stc
lahf
xchg
lds
arpl
or
and
cli
outsb
pop
aam
jo
sbb
into
leave
sti
hlt
adc
pop
lods
sahf
pop
sub
stos
stc
xchg
ljmp
icebp
jns
mov
pop
or
sub
scas
ljmp
adc
jle
test
daa
test
jns
lea
fldt
lods
jle
cmpsb
add
sub
rcl
xlat
shrl
push
push
inc
in
sbb
mov
call
imul
xchg
out
outsl
daa
arpl
or
jae
js
sar
ret
pop
cltd
mov
sahf
and
aas
jl
rol
mov
xor
mov
sub
bsr
pop
fidivrs
fidivs
inc
push
dec
imul
outsb
mov
mov
bound
insl
mov
mov
out
jns
into
jne
pop
jmp
stos
fld
adcl
xor
add
xor
push
cmp
sti
pop
mov
dec
test
mov
rorl
cmp
jmp
dec
imul
jnp
xor
fisttps
std
mov
mov
mov
adc
push
mov
xchg
pop
cs
mov
dec
inc
cli
mov
cwtl
mov
xor
sub
jns
loope
rcll
pop
mov
aam
adc
cltd
arpl
cmp
pushl
jb
rcll
iret
and
mov
cmp
jno
mov
xor
call
push
jae
aam
test
leave
cmp
xor
xchg
cmp
outsl
out
inc
ret
add
and
and
pop
into
insl
sub
sub
fs
in
fsubl
sub
mov
xchg
icebp
lret
xchg
mov
loope
cmp
lcall
enter
lret
imul
mov
rclb
repnz
add
in
xor
inc
mov
jno
hlt
cwtl
subl
mov
xchg
inc
nop
out
adc
mov
cmc
jp
int
lahf
mov
push
lahf
lods
dec
enter
mov
out
sub
mov
shr
ret
dec
test
mov
leave
or
scas
inc
mov
add
sbb
sub
stos
mov
icebp
mov
aas
sub
jmp
nop
jb
cli
jmp
xorb
faddl
push
or
push
lcallw
sti
mov
arpl
sbb
loop
cli
mov
imul
add
fsubrp
dec
das
inc
push
stos
sbb
mov
and
mov
popa
sub
stos
test
jno
es
pop
mov
sbb
bound
mov
sub
xchg
mov
xchg
fs
into
lahf
jns
mov
mov
xchg
js
daa
iret
and
hlt
adc
adcb
incb
push
lcall
cmc
arpl
jne
cmp
cmp
xchg
and
mov
mov
pop
lea
cmp
mov
loop
lock
imul
and
ficoml
icebp
lods
lock
rorl
jno
xchg
pop
jo
fdivl
loop
std
ret
loopne
sub
dec
lods
mov
fs
xchg
fsub
mov
or
cs
adc
mov
jecxz
inc
push
add
xor
cmp
add
sub
sub
leave
les
add
cmpsb
sbb
shlb
test
xlat
sahf
sbb
adc
mov
mov
adc
jle
xlat
cmp
fisttpll
jle
lret
jge
xor
pop
arpl
lock
test
stos
aas
sub
mov
pop
mov
xchg
sbb
test
mov
push
popl
lret
cmp
je
push
or
mov
mov
orb
fcmovu
lea
add
inc
sub
cwtl
dec
lea
stc
idivl
lods
dec
xor
xchg
leave
xchg
sub
fsubs
adc
add
cltd
es
pop
sub
cmpsb
mov
xor
shr
iret
je
xchg
mov
aad
stc
lcall
fcoml
cwtl
scas
test
adc
jg
fs
jg
movsb
rclb
and
cmpb
cltd
push
arpl
mov
cwtl
xor
lods
dec
repz
push
bts
inc
dec
loop
mov
mov
rolb
ds
mov
mov
popf
ret
loop
add
mov
outsl
mov
ljmp
xchg
jge
pop
mov
push
sbb
push
mov
fbld
sarl
mov
and
pop
lahf
in
negb
nop
or
add
popa
pusha
enter
cmp
mov
mov
inc
mov
cmpsb
stc
push
fs
and
out
xor
sarb
add
mov
dec
bound
int
mov
insb
in
std
dec
mov
hlt
mov
cmp
add
movsb
sahf
jae
fsubp
dec
mov
cld
iret
ds
cmpsl
imul
arpl
aam
push
dec
cmpsl
sahf
fsubr
je
pop
ljmp
ds
jmp
xchg
aas
out
setae
lods
push
ja
aas
jno
ret
test
cmp
dec
xor
testb
xor
mov
fisttps
adc
jno
cld
mov
scas
cmp
cwtl
sub
in
insb
pop
hlt
or
mov
xchg
dec
aaa
pop
das
xor
push
sbb
call
sbb
and
test
jns
mov
mov
test
dec
fstpl
mov
sarb
inc
pop
data16
xor
fisttpl
gs
cmp
lock
insl
imul
nop
push
xor
sub
xchg
mov
mov
call
mov
adcl
leave
inc
pusha
push
sub
jnp
clc
ds
push
dec
xchg
aam
xlat
adc
fimull
pop
adc
mull
ja
ss
test
sub
imul
dec
mov
nop
push
xchg
inc
aam
mov
addr16
outsb
iret
add
jg
das
sbb
jne
cmp
gs
sbb
lock
arpl
jp
push
cmpsb
xchg
pop
cmp
test
lcall
or
ljmp
mov
aaa
out
inc
inc
fnop
add
mov
cmc
int
push
addr16
movsl
ret
popl
aas
push
setne
add
es
add
test
mov
arpl
add
lock
sbb
call
aad
not
dec
test
or
fisubrl
push
movsl
rcll
ret
add
xchg
popa
sub
lahf
stos
xor
pusha
bound
ss
in
int
mov
mov
ss
cmp
out
and
xorl
out
dec
orb
icebp
lret
mov
mov
fstpt
hlt
enter
std
push
jmp
int3
sub
dec
dec
mov
cmp
xchg
cs
cmp
pop
fs
lods
cmpsl
rclb
fs
inc
jb
inc
shll
push
adc
or
in
sti
std
xor
pushf
ret
sbb
lcall
xor
movswl
daa
aaa
aad
adc
xchg
jge
inc
dec
add
push
int
std
xchg
out
clc
repz
dec
rcl
sub
sarw
mov
dec
fsub
mov
dec
movsb
sub
jp
testb
bndstx
clc
in
or
dec
sahf
jae
scas
addb
jno
cwtl
loop
lahf
dec
add
ljmp
jae
xchg
cs
jbe
xchg
je
arpl
push
push
lods
test
jl
cld
call
arpl
dec
and
mov
inc
jbe
pop
mov
movsb
pop
push
pop
js
test
mov
sarl
aam
adc
pusha
call
pop
dec
pop
pop
hlt
pop
and
arpl
and
jg
pop
mov
mov
pusha
es
std
mov
fiadds
sub
bound
bound
pop
inc
mov
arpl
daa
mov
cmpsl
test
shl
cmp
je
aam
roll
icebp
lea
cmpsl
adc
inc
jmp
mov
sbb
dec
pushf
adc
aas
cmp
int3
jle
mov
push
or
jnp
insl
gs
insb
lods
sub
jg
hlt
roll
imul
lea
xchg
mov
imul
and
in
xorb
mov
int3
mov
pop
clc
mov
mov
and
call
push
insl
daa
fs
sub
push
sbb
jbe
xor
roll
push
rorb
xchg
enter
dec
jl
dec
lahf
jb
js
sbb
xchg
lds
rorl
ss
fldcw
and
hlt
push
arpl
push
push
xchg
jb
jnp
inc
sbbb
push
push
inc
imul
jecxz
cmp
xor
push
icebp
jns
pop
icebp
roll
inc
mov
push
pop
add
lret
test
push
out
push
fistl
push
not
mov
sub
jno
xor
adc
pop
mov
dec
jmp
aas
jge
cmc
sub
xchg
sub
test
fdivl
outsb
mov
in
sbb
sbb
cs
mov
push
sub
inc
push
jae
and
jge
ja
fadd
ljmp
mov
daa
sti
mov
les
and
jb
in
xor
xchg
jnp
hlt
shl
and
int
xlat
sbb
mov
in
lahf
aad
sarl
sbb
pusha
bound
mov
cmp
inc
sbb
sbb
jp
insl
xor
mov
pushf
add
pop
sbbl
movlps
sub
xor
jge
xlat
hlt
ds
hlt
push
les
pop
repnz
mov
inc
roll
scas
leave
cmp
lret
dec
cltd
rcl
stos
ljmp
ret
pop
repnz
jo
sbb
xor
add
dec
pop
pop
in
inc
dec
and
popf
push
addr16
sbb
sub
bound
ja
jge
call
cmp
ja
sbb
dec
lret
shrl
push
aam
adc
js
mov
iret
xor
fisubrs
mov
add
mov
sbb
mov
movsb
icebp
mov
lock
mov
cmp
inc
mov
jae
jmp
lods
shll
bound
mov
scas
cmc
inc
dec
insl
mov
inc
addl
in
int3
or
adcb
ljmp
cmp
enter
insl
jo
stos
mov
push
push
dec
adcl
jp
adc
mov
sbb
sahf
dec
lahf
mov
mov
mov
ja
bound
imul
dec
nop
jbe
mov
or
or
mov
mov
cmp
dec
xchg
cwtl
mov
mov
add
rorb
stc
enter
stc
adc
push
adc
xor
inc
and
sbb
adc
mov
daa
inc
aaa
clc
andl
pusha
and
imul
sbb
and
lds
pop
inc
cli
cltd
inc
cmp
xchg
iret
lods
push
pusha
lahf
bound
fadds
cmpsb
sarl
jmp
mov
xor
lods
add
mov
cmp
hlt
inc
mov
or
cmp
adc
xchg
mov
ja
sub
fwait
stc
push
sar
movsb
sbb
dec
mov
fistpll
addl
roll
or
jo
inc
push
or
adc
mov
or
dec
movsb
mov
add
xchg
cmp
fnsave
mov
add
push
mov
sbb
mov
sub
daa
iret
xchg
or
mov
mov
dec
addl
and
aas
out
sbb
test
nop
fsubs
add
and
mov
cmc
jg
push
inc
aas
mov
pushf
in
push
pop
in
mov
sbb
mov
int
lret
imul
inc
xor
xchg
arpl
andb
scas
pop
jae
in
inc
mov
out
mov
jl
mov
dec
lods
dec
fstpl
icebp
inc
mov
cmpsb
bound
leave
hlt
or
inc
pop
push
push
mov
pusha
shll
movsb
dec
lods
mov
adc
scas
xchg
jbe
xchg
xor
push
ljmp
lods
mov
add
push
ds
xlat
xor
pop
repnz
push
sub
cmpsl
out
pop
es
fwait
cwtl
cmpsl
mov
das
dec
lret
adc
shrb
push
push
push
fmull
push
ds
mov
data16
mov
xchg
ja
ljmp
sub
cmp
inc
mov
fsts
cmpsb
ret
stc
pop
cwtl
xchg
mov
mov
std
je
and
daa
popl
mov
mov
fimull
mov
in
aad
insb
sbb
fiaddl
pop
fcmovne
dec
and
insl
mov
arpl
sub
mov
mov
popf
or
mov
aad
dec
lods
iret
scas
rorl
arpl
push
and
imul
popf
ficomps
movsl
xchg
sub
cmp
popf
lds
pop
ja
pop
lret
sbb
rorb
int
add
push
add
jne
dec
inc
lods
mov
inc
jnp
sbb
arpl
and
jno
sub
pop
add
jmp
dec
sbb
xor
add
pop
adc
adc
cld
or
xor
pop
enter
xor
cmp
cmp
mov
sbb
fistpl
iret
popf
xchg
imul
jne
mov
rcrl
or
ret
inc
sbb
dec
addr16
js
mov
aas
jns
sub
enter
jl
cmp
and
lds
mov
mov
rcr
add
add
and
cmp
jge
pop
jecxz
inc
add
addr16
stos
int
cwtl
push
pop
lret
insl
test
and
das
mov
lea
stos
xchg
cmp
xchg
jo
sub
ret
inc
and
mov
les
inc
scas
xchg
jecxz
xchg
cli
push
cwtl
test
stc
pop
lahf
cmp
loopne
push
mov
cwtl
shll
popf
sti
mov
movups
lcall
xchg
cmp
xor
clc
mov
pop
fdivl
lods
xlat
lahf
arpl
out
cli
jbe
adc
scas
mov
mov
es
push
jb
sti
adc
jb
arpl
addr16
test
mov
lret
out
xchg
mov
imul
loop
insb
fcoml
jle
jns
xchg
shrb
sti
or
pop
inc
jb
xor
inc
out
test
sub
adc
add
mov
cmp
inc
imul
push
add
ljmp
icebp
pmullw
lahf
test
ds
xor
mov
ss
push
inc
dec
std
sbb
fists
aaa
cmp
mov
ss
push
fstpl
sub
into
fs
xlat
test
adc
into
pop
and
sub
shrb
fnstenv
xchg
pop
imul
inc
or
inc
xor
and
movsl
add
push
dec
stc
mov
and
hlt
mov
cmc
pusha
dec
inc
mov
mov
into
inc
out
jecxz
cmp
pop
cmp
loopne
les
add
mov
hlt
jbe
iret
imul
pop
jo
or
cmovo
mov
cmp
dec
mov
xchg
insb
out
dec
lsl
push
jnp
pop
jne
sbb
jl
fildll
scas
sbb
mov
xchg
or
orb
xchg
fstpl
adc
je
mov
jle
mov
or
pop
in
int
xor
sub
movsb
adc
pop
gs
dec
mov
sub
jl
inc
mov
xor
mov
not
stos
or
rcrl
subl
xor
adc
aad
xlat
xor
inc
dec
adc
cmp
cmp
mov
es
cs
aad
cli
inc
mov
mov
sub
outsb
add
sbb
or
jl
stos
push
xlat
sub
jb
dec
dec
pop
push
jns
or
lods
call
mov
adc
xchg
sub
or
sub
xchg
leave
out
xchg
icebp
xchg
dec
in
mov
pushf
mov
aaa
insl
xor
enter
jmp
push
xlat
mov
outsl
push
mov
out
push
imul
mov
push
out
dec
loope
inc
jbe
rorl
pop
adc
cmp
fmuls
outsl
adc
or
cmpsb
sub
jne
mov
or
dec
sbb
sub
mov
and
lcall
mov
or
inc
pop
fldenv
sahf
jp
leave
mov
mov
push
out
sbb
jns
or
cmp
add
sub
adc
andl
fs
inc
fwait
pop
pusha
ljmp
scas
fisubrl
fisttpl
xchg
mov
insl
popf
into
xchg
cwtl
sarl
mov
movsb
mov
aas
lock
or
mov
sbb
adc
inc
sbb
fdivs
out
fdivrs
lret
leave
jb
in
cmpl
clc
mov
fldlg2
sub
cmp
mov
scas
mov
insb
mov
mov
jne
or
xchg
inc
push
loop
imul
jne
cmp
jnp
pop
xor
pop
ds
ret
je
iret
push
jg
mov
test
insl
loope
fimull
in
out
dec
les
push
cmp
inc
stc
pusha
incl
lea
stc
xor
adc
pop
out
cmp
add
adc
push
ret
ds
jns
test
pop
scas
out
js
jmp
aam
mov
negl
shl
cmp
add
xor
sub
jo
insb
ret
scas
mov
int3
loop
mov
roll
loop
lods
or
jno
inc
rcrb
das
lods
inc
je
jle
lahf
fimuls
shrl
addr16
mov
int3
mov
adc
jl
icebp
fistpll
lds
xchg
outsb
sahf
xor
adc
call
push
in
bound
sub
xchg
sar
iret
loope
roll
es
dec
mov
scas
cmpsl
pop
popa
sub
mov
inc
lret
sub
ret
mov
lahf
ss
aam
mov
sub
jecxz
xchg
cltd
lds
pop
dec
or
sarl
push
mov
hlt
dec
stos
push
inc
pop
mov
ret
fcmove
aam
add
push
rol
jne
inc
mov
or
mov
sbb
mov
mov
inc
stos
mov
mov
imul
mov
and
adc
jb
ret
inc
popf
lods
loope
pop
fcmovne
test
cltd
iret
iret
int
jl
add
mov
and
mov
or
fisttpll
pop
shrb
jnp
push
jno
je
negb
loop
push
cmp
pop
loope
xchg
inc
jae
and
cmp
es
or
mov
fs
jno
aaa
popf
sarb
sbb
fwait
adc
std
inc
mov
das
dec
mov
xchg
cmp
adc
inc
gs
jno
test
hlt
mov
lods
outsb
jb
test
adc
pop
dec
lcall
jl
fwait
pusha
fwait
jg
stc
sub
cld
test
in
sbb
rolb
adc
repz
or
pop
xlat
in
fmulp
and
aas
jae
pop
fcoms
sbb
scas
icebp
and
jno
adc
pop
add
roll
add
or
lock
mov
xchg
pushf
sbb
mov
ror
test
outsb
lods
mov
pop
jecxz
push
addr16
xchg
dec
mov
dec
lock
ret
cmp
sub
clc
clc
fsubl
pop
aaa
add
dec
shlb
pop
lahf
sub
cmc
sub
xor
inc
shlb
mov
inc
stos
mov
adc
jecxz
mov
jne
scas
out
das
adc
arpl
shrl
outsl
pop
pop
cmp
enter
into
shlb
push
fidivs
xlat
inc
pop
imul
mov
dec
dec
mov
cmp
es
mov
add
aaa
cmp
push
call
or
or
aam
dec
inc
inc
rclb
cmpsl
lret
mov
lcall
mov
in
pop
xlat
xor
andl
xchg
mov
out
mov
nop
pop
shll
inc
and
je
imul
pop
mov
jmp
out
xchg
int
xor
lock
fsubrl
sub
nop
push
mov
xchg
cmpsl
push
xlat
int
aas
andl
dec
clc
bound
inc
jl
add
out
xchg
cmpb
ja
jmp
cmp
int
sbb
je
fs
cmp
jle
stc
rorl
iret
rclb
pop
in
bound
loopne
out
mov
fs
int
cli
mov
pop
iret
sti
sbb
ret
add
push
lods
bound
gs
add
xchg
jne
pop
cmp
stos
sub
movsl
xchg
xchg
cmp
adc
sbb
fwait
out
sbb
das
jl
or
and
mov
xor
xchg
and
dec
std
add
inc
dec
stos
lcall
bound
in
mov
xor
or
inc
fildl
dec
ja
cs
cmp
std
das
in
pop
dec
mov
xchg
lods
mov
arpl
push
les
arpl
jl
shrl
imul
mov
dec
xchg
and
scas
pop
icebp
call
mov
mov
jmp
movb
movsb
ljmp
xorb
dec
nop
xchg
shrl
pop
sub
sbb
or
popa
add
decw
inc
add
in
into
pushf
seto
ljmp
jno
pop
fcmovnb
mov
movsl
inc
call
jmp
jb
into
push
xchg
stc
xlat
sub
repnz
fldcw
cmp
xchg
mov
ljmp
fdivrl
nop
cmc
roll
sbb
pop
xchg
xchg
dec
inc
sbb
dec
mov
loopne
mov
mov
cmp
cmpb
gs
iret
jb
negb
sbb
je
leave
pop
scas
shrl
jp
inc
sub
push
cltd
in
filds
adc
fcmovb
sbb
push
add
outsb
push
jbe
mov
insb
call
inc
repz
adc
in
lea
test
cmp
les
mov
mov
fsub
sti
mov
rclb
mov
jl
adc
cltd
sbb
sbb
sbb
sub
lods
inc
dec
cmp
mov
ss
jae
sbb
mov
jnp
jmp
jl
sti
jg
dec
adc
mov
call
inc
rorl
sub
sbbl
mov
jg
pop
stc
and
mov
ret
pop
pop
or
jle
dec
pop
test
sub
mov
or
cltd
jge
sbb
cmp
jl
mov
add
add
movsl
lcall
jae
icebp
dec
mov
mov
push
fisttpl
cmp
mov
fisubrl
adc
add
pop
cmp
inc
js
xlat
out
jne
pop
and
ss
mov
aas
ljmp
and
xchg
stc
push
jge
fcmovne
popf
jne
mov
jae
and
mov
insb
inc
adc
adc
inc
xor
addr16
aas
scas
enter
or
add
es
aas
jno
sub
cmp
fs
inc
sbb
cmp
aaa
sti
and
fxch
das
clc
mov
cmc
pop
repz
lock
and
std
and
scas
xchg
sarb
or
add
xor
lret
adc
f2xm1
cltd
xchg
cmpsb
cli
hlt
cmp
mov
push
pop
lret
dec
xchg
loopne
jge
pop
or
adc
pop
jns
jne
xor
and
push
dec
xchg
jo
sbb
das
jbe
sub
test
cmpsl
add
add
imul
mov
xlat
in
outsl
xchg
jne
xor
subb
xchg
adc
stos
adc
aad
mov
adc
mov
dec
loopne
imul
sub
xor
mov
cwtl
lds
push
jae
cmp
or
in
test
mov
arpl
imul
iret
pop
and
xchg
sahf
cwtl
cmp
daa
jecxz
mov
sti
mov
popa
jbe
jnp
hlt
rorb
xor
cmc
ja
adc
cmpsb
mov
iret
into
xor
mov
aad
sahf
mov
sti
push
call
sbb
in
in
mov
shll
iret
repz
or
clc
adc
pop
push
int
popw
mov
jmp
aam
add
sbbb
jae
cltd
push
cmp
cltd
lret
loope
and
cs
adcb
movsl
xchg
or
daa
sbb
dec
sbb
lods
test
addr16
cwtl
movsb
cmp
subb
out
movsb
cmovge
inc
mov
xchg
sti
jl
lods
mov
sub
or
jl
neg
je
sub
pop
pop
sti
shrb
daa
ret
sbb
or
int
loop
nop
addb
je
mov
adc
push
loop
pop
mov
cmpsb
roll
mov
aam
sbb
int3
pop
fcomps
dec
xchg
mov
pusha
icebp
sub
icebp
out
fadds
movsb
fiaddl
clc
sub
pop
jl
out
ja
inc
jno
xor
outsl
scas
andl
aas
sarl
push
lret
scas
xor
cli
insl
popa
mov
and
mov
lods
sub
sbbl
dec
cwtl
or
pop
xor
adc
jmp
std
imul
push
add
das
fwait
test
mov
in
mov
inc
fadd
or
jmp
int
dec
imul
add
fsubrl
sub
mov
dec
or
les
pushf
dec
in
mov
shrl
pop
cmpsb
jecxz
xchg
dec
into
cli
nop
ja
jns
ret
inc
mov
dec
inc
pop
cmp
lcall
in
jl
sub
dec
pop
xchg
rorl
mov
cmpl
mov
inc
imul
xlat
dec
mov
fisttpl
add
test
test
or
mov
pop
or
xchg
pusha
enter
lea
adc
jae
inc
and
lods
cltd
clc
dec
xor
inc
out
push
jbe
jp
loope
stc
adc
jae
inc
push
out
xchg
clc
cmpsl
pop
fmull
les
pop
das
or
fsts
insl
loopne
sub
pop
cld
vpunpcklwd
and
shlb
sub
sbb
jns
mov
mov
dec
pop
push
orb
cwtl
in
jmp
cmp
mov
mov
sub
add
and
xchg
inc
pop
inc
jae
push
sbb
loop
int3
sbb
bound
mov
imul
jns
mov
adc
nop
in
mov
test
pop
jge
pop
rcrl
loopne
xchg
xchg
adc
loope
jno
xchg
sahf
bound
jle
adc
out
jne
stc
or
ja
fcoml
std
inc
push
rorl
sarl
xchg
fimuls
enter
sub
test
inc
mov
lods
or
imul
rcrb
fcomp
adc
mov
aas
pop
fdivs
adc
push
dec
and
testl
xacquire
dec
popf
ss
xorb
icebp
clc
sub
popa
hlt
pop
mov
fwait
and
mov
mov
adc
addr16
movsl
addr16
int
aas
fnstcw
sar
enter
jge
int
mov
rcrb
pop
or
mov
dec
adc
inc
insb
pop
fidivrs
sub
cmp
lret
stos
mov
lcall
mov
cmp
pop
sti
fs
divl
test
fs
jge
or
pop
enter
faddp
jp
fs
je
lcall
lods
jb
dec
mov
jle
loope
clc
imul
pop
jle
rol
jne
add
lea
xchg
xor
pop
pop
jo
divb
inc
int3
dec
outsl
mov
ja
es
andb
jb
test
pushf
mov
js
pop
popf
jns
mov
pop
mov
xchg
xchg
repnz
xchg
dec
jg
lea
jecxz
sub
jp
rcr
adcb
bound
mov
in
inc
mov
lcall
cwtl
in
add
mov
adc
sbb
fisttpl
pop
and
lods
lret
pop
push
add
jne
dec
not
cmp
mov
mov
cmpsl
or
test
popf
xchg
mov
xor
push
cltd
push
data16
pop
pop
and
flds
imul
mov
stc
sub
gs
dec
inc
lock
push
ds
dec
int
repz
jge
dec
and
mov
xor
inc
test
cmpsl
inc
sub
in
mov
jecxz
cmp
test
je
loop
cmc
jge
inc
call
lcall
fs
sub
cmc
movl
inc
pop
scas
leave
es
movsl
jae
les
mov
mov
cmc
or
mov
cmpsl
xlat
roll
pop
repz
test
sbb
xchg
or
sub
mov
dec
ljmp
or
dec
and
jns
daa
adc
test
leave
jae
loopne
stos
inc
xlat
fisttps
hlt
dec
mov
pop
inc
outsb
sbb
cwtl
or
inc
mov
rclb
lea
or
pusha
cld
push
js
add
stos
jg
dec
xchg
push
add
loopne
ljmp
outsb
dec
push
jmp
mov
scas
xor
mov
or
mov
mov
xchg
in
xchg
sarb
push
out
xchg
mov
dec
outsl
lret
jg
adc
mov
lds
pop
and
ss
jl
lcall
sbb
es
sbb
ret
or
jns
jo
sub
and
inc
stos
into
pop
shlb
in
out
sub
push
fs
mov
mov
sub
je
cmp
imul
push
xchg
data16
and
nop
scas
pop
inc
sbb
bnd
mov
movsl
repnz
push
mov
adc
or
sbb
inc
adc
mov
jl
inc
push
mov
dec
outsl
scas
xchg
loop
aam
insb
sbb
jmp
gs
fwait
jmp
mov
daa
iret
lret
and
mov
dec
pop
dec
das
xchg
insb
in
rolb
xchg
xor
out
or
xor
arpl
push
out
mov
and
dec
cmp
cmpsb
sub
mov
in
mov
xchg
mov
enter
mov
fisttps
lret
inc
lcall
push
out
sbb
das
insb
icebp
jbe
cmp
pushf
mov
stos
adc
pop
inc
cwtl
push
aad
sbb
cmp
jmp
shlb
inc
aad
mov
jns
mov
fbstp
xchg
stos
shrb
mov
out
ljmp
mov
jp
xor
mov
cmp
add
jnp
mov
adc
call
shl
or
mov
adc
leave
decb
sbb
pop
jg
mov
pop
inc
scas
mov
aad
lods
mov
xchg
push
xchg
aad
icebp
xchg
lcall
insl
ljmp
imul
xor
stos
cmp
mov
mov
mov
iret
xorb
jns
push
cmp
adc
jae
pop
fldcw
outsb
xor
clc
adc
dec
mov
adc
push
mov
jle
cmp
call
outsb
movsl
gs
pop
outsw
push
xor
xlat
sbb
shlb
inc
sub
xchg
add
loop
xchg
mov
daa
scas
pop
int3
mov
pop
sub
mov
fisubrl
xor
jne
clc
sub
pop
jmp
ds
dec
aad
stos
pop
xchg
les
in
rcl
sar
adc
mov
rcrb
in
push
dec
stos
add
loope
movsb
imul
adc
std
fsubp
xchg
iret
push
sarb
add
dec
push
data16
and
iret
push
mov
cs
std
and
push
or
or
mov
outsb
and
pop
ljmp
add
gs
imul
mov
push
outsl
ja
mov
scas
out
popa
dec
std
ja
or
and
ror
popa
pop
scas
fwait
in
adc
or
fcomps
jge
inc
mov
or
inc
cmc
mov
scas
push
cmp
inc
xor
cmpsl
dec
xchg
mov
sbb
scas
pushf
outsl
mov
mov
lods
cld
jb
push
push
cmp
in
sub
and
or
mov
aaa
xchg
lahf
nop
je,pn
out
rclb
xchg
loopne
jne
push
xchg
fbstp
popf
aas
add
xlat
arpl
jle
pmaddwd
mov
and
push
inc
iret
nop
sarb
jb
sbb
mov
mov
movb
fcoms
daa
sbb
jbe
sbbl
das
lock
cmp
pop
imul
dec
jo
push
add
xchg
loopne
jo
leave
or
add
scas
and
mov
jmp
sub
outsl
cmp
std
or
cld
push
ficoms
data16
or
jo
cmp
mov
imul
in
les
and
pop
stos
ja
inc
insl
mov
inc
lahf
xor
mov
and
sub
jge
rol
addr16
xor
shll
mov
iret
cmpl
and
mov
and
or
sub
shlb
insl
lea
adc
in
dec
popf
test
in
nop
lods
pop
and
cmpb
cmpsb
shll
pop
mov
hlt
sub
pop
in
js
adc
shl
jmp
mov
and
fsubs
jmp
mov
xchg
add
popf
cmp
or
daa
inc
push
mov
scas
sti
sbb
adcl
fwait
xchg
and
sub
enter
in
mov
mov
loop
cmp
scas
sbb
push
pop
push
and
es
mov
sub
jo
add
pop
mov
jl
push
imul
sbb
iret
jmp
outsl
iret
popl
fistl
xchg
or
ss
in
pusha
mov
mov
inc
stos
out
adc
xor
xchg
pop
inc
imul
lcall
ja
pop
fdivl
out
sub
jl
cmpb
mov
call
clc
lds
push
inc
lahf
pusha
movsb
push
mov
sbb
pop
jb
outsb
mov
pop
lock
mov
stos
mov
rorb
hlt
push
lret
add
pop
gs
pop
mov
dec
dec
in
and
adc
jne
dec
push
inc
fyl2x
jge
jle
ja
arpl
cmp
pop
push
in
add
cmp
movsl
imul
inc
xchg
sub
enter
sub
mov
push
mov
or
cmp
mov
jle
sub
xchg
test
insl
loopne
mov
in
mov
mov
xchg
pop
hlt
xor
jg
cwtl
sub
int
jo
decb
xchg
aas
fbstp
lods
fs
mov
shrb
adc
xchg
or
sahf
push
js
jmp
xchg
dec
dec
push
test
cmpsb
sar
inc
jns
loope
das
stc
lahf
jae
incl
xchg
pop
push
arpl
xlat
cmp
adc
pop
add
fs
jmp
jne
inc
andl
insb
int3
cwtl
fsubl
sbb
insl
mov
movsb
or
jnp
xchg
cmp
addb
in
jns
aam
xrelease
adc
imul
enter
jp
inc
lods
inc
adc
xchg
mov
test
lods
adc
push
inc
jo
xchg
data16
cmp
icebp
iret
mov
jmp
mov
sbbl
out
cmp
sbb
hlt
test
sbb
xchg
shr
iret
insl
ret
movsb
mov
add
mov
push
xor
dec
mov
nop
imul
jp
adc
lret
cmpsl
mov
ljmp
call
dec
fnstenv
out
call
aaa
aaa
ja
pop
iret
arpl
dec
out
movsb
mov
dec
jecxz
jo
jl
xchg
push
ss
sbb
pop
lods
fdiv
jp
jl
xor
testb
inc
int3
push
ficoml
popf
jmp
sub
xorb
xchg
and
inc
or
dec
mov
push
popf
jl
scas
inc
adc
and
movsl
cli
jle
out
push
push
std
xor
mov
int3
dec
ss
out
test
hlt
mov
xor
jle
mov
jb
push
or
sahf
xchg
imul
cmpsb
inc
test
pop
cltd
rcr
or
cmp
adc
sub
sahf
sub
adc
push
lret
cmp
cmpb
lahf
dec
paddsw
lds
fxch
icebp
pop
adcb
aam
stos
lea
push
xchg
pop
mov
ljmp
shr
jmp
mov
out
inc
out
mov
addl
mov
out
xor
or
mov
lahf
sbb
lret
sub
dec
sub
fmul
mov
popa
inc
call
stos
mov
push
iret
outsb
pop
push
mov
test
push
mov
inc
test
lcall
mov
xchg
sub
aas
push
hlt
outsb
mov
push
xor
daa
jbe
cmpsl
les
outsl
mov
popaw
pop
lock
and
xchg
ds
sahf
jp
cmp
mov
xchg
jg
jns
mov
mov
shrl
xor
cltd
push
fldl
sbb
dec
xchg
jecxz
fdiv
push
sbb
or
mov
push
enter
mov
outsl
mov
jno
push
cs
mov
push
jle
rcr
cmp
sub
ljmp
jecxz
push
mov
xlat
ja
fyl2x
sbb
xor
and
subb
inc
xchg
cmp
adcl
mov
popf
sub
push
cmp
into
jge
xchg
cs
nop
pop
pop
sub
inc
divl
out
shll
push
hlt
out
iret
mov
xchg
pop
iret
or
jnp
lret
imulb
add
inc
lcall
or
add
shll
jle
arpl
test
cwtl
cmp
inc
popa
dec
dec
sbb
cmp
xchg
pop
sub
shll
ljmp
add
iret
xchg
test
cmp
call
mov
in
jmp
aaa
pop
dec
xor
jecxz
and
enter
fimuls
inc
push
push
mov
lret
aaa
xor
cmp
pop
fwait
rolb
xchg
xchg
cmp
sub
xor
xchg
or
sarb
test
cmc
lods
xchg
xor
fildl
pop
movsbl
imul
test
dec
sbb
mov
and
outsl
sbb
mov
adc
add
or
jnp
push
popf
aam
mov
xor
adc
adc
jne
push
jne
mov
fs
push
add
sbb
cld
xchg
pop
pop
lret
sbb
add
in
shrb
enter
jne
or
jbe
fdivrp
sub
jmp
add
pop
mov
push
ret
icebp
sarb
ljmp
sti
mov
mov
imul
and
cmp
idivb
pushf
push
cwtl
arpl
push
jge
mov
sub
popa
or
mov
dec
adcl
mov
push
push
fnstenv
sbb
dec
mov
sahf
out
dec
jbe
push
mov
mov
in
cmp
ds
out
roll
push
pop
jecxz
sbb
js
pop
mov
cmp
or
lret
cmpsb
inc
mov
rolb
xorl
lret
roll
out
push
fistl
push
mov
outsb
jmp
test
lock
test
inc
sarl
hlt
in
int
fmuls
frstor
dec
mov
sub
sahf
inc
js
add
push
jl
out
cmp
call
jae
xor
mov
pop
adc
mov
in
xchg
mov
iret
push
scas
lret
dec
popa
sbb
xor
pop
js
inc
mov
and
dec
xchg
cli
popf
lock
jmp
test
jecxz
data16
adc
inc
inc
test
cmp
mov
rcr
pop
rclb
sub
outsl
movsl
xor
jg
cli
add
and
xor
adc
fcoms
sbb
dec
adc
pop
lret
or
fistps
push
push
fidivrl
lods
jecxz
mov
cmp
and
clc
insl
xor
inc
pop
jno
pop
inc
mov
aad
cmp
pop
xchg
lahf
ret
pop
or
pop
ja
ds
andl
es
mov
mov
and
cli
aaa
sbb
in
lods
outsl
fiaddl
xor
inc
les
movsb
insb
test
sbb
sarb
inc
dec
repz
orl
mov
fidivl
cwtl
fwait
sub
ret
div
mov
cmp
cmp
pop
sbb
cs
inc
xchg
jmp
loop
or
fcmovb
sbb
and
in
sub
sti
arpl
pop
add
and
sbb
movl
int3
mov
jmp
mov
inc
test
mull
and
adc
push
add
fwait
aad
dec
xor
and
mov
sbb
xchg
mov
add
scas
mov
push
sti
and
inc
add
inc
mov
or
rorb
jg
je
sahf
cmpsb
xor
das
lcall
xchg
ss
and
pop
loope
mov
daa
inc
add
fstpl
add
and
add
mov
imul
sbbl
add
lea
push
out
cwtl
stos
fmul
xor
add
xchg
stos
add
movb
xchg
addr16
pusha
clc
push
mov
mov
notl
fs
sbb
lods
mov
cmpsl
push
and
inc
lock
pop
xor
adc
push
sbb
pop
mov
es
in
dec
dec
or
mov
mov
fisttpl
in
decl
outsb
mov
stc
add
ss
cli
outsb
xchg
pop
negb
dec
iret
cmp
arpl
popf
mov
in
adc
add
insl
push
insl
hlt
mov
push
jge
xor
mov
in
jl
sahf
dec
lds
js
call
in
js
ljmp
xchg
leave
pop
out
add
xor
push
mov
and
aaa
mov
fmuls
jmp
out
xchg
mov
aam
aaa
adc
adc
hlt
dec
loop
cmp
sub
fcmovne
xchg
inc
mov
dec
cwtl
mov
mov
adc
js
lods
dec
sahf
std
dec
add
or
out
push
pop
cmc
jecxz
clc
xchg
adc
ja
cmp
dec
mov
inc
mov
loope
mov
enter
mov
xor
pop
lret
sbb
scas
mov
and
mov
sahf
xor
sbb
in
lods
ljmp
adc
or
xchg
jb
or
call
mov
out
insl
xchg
mov
movsb
dec
fsts
pop
scas
stos
mov
xor
sub
or
mov
out
cld
inc
dec
push
dec
mov
add
inc
std
xor
je
adc
test
ret
push
cltd
dec
adc
xor
sbb
sub
imull
lods
fbstp
stc
adc
inc
mov
push
xchg
dec
outsb
inc
pop
pop
mov
jecxz
cs
shll
pop
cmp
into
std
sbb
popf
jnp
shll
sub
loope
daa
pop
insb
adc
mov
loope
sbbb
aam
xchg
iret
jae
inc
jnp
test
insb
mov
daa
xchg
scas
mov
int3
subl
movsl
jnp
sub
rcrl
jle
xor
push
sbb
out
fs
mov
mov
dec
outsb
pusha
jge
ja
or
ja
mov
push
imul
mov
mov
xchg
cmp
stc
or
loop
jbe
nop
pop
xor
mov
lods
or
mov
or
lcall
out
xchg
push
shlb
adc
push
xchg
outsb
sti
stos
mov
add
fstpt
rol
cli
push
sub
dec
xor
or
clc
adc
inc
sar
arpl
into
inc
inc
bound
cmp
test
repnz
xchg
pop
xor
lods
jle
inc
and
sar
loopne
unpcklps
xchg
push
call
fnstenv
xor
xchg
fs
enter
mov
ds
push
mulb
add
or
lea
repz
or
arpl
mov
sti
sbb
ja
cmpsl
mov
jle
jae
ds
sbb
jne
sub
loop
pushf
or
mov
in
jns
pop
mov
sub
cli
lcall
movsb
nop
mov
jle
mov
pop
imul
lret
pop
je
mov
loopne
xchg
push
testb
adc
or
int3
xlat
mov
je
cmp
xchg
push
rcl
lahf
ja
out
ds
push
in
test
pop
leave
rcl
ja
sub
scas
imul
xorl
jae
and
imul
push
in
lea
lret
addr16
les
jno
in
mov
dec
add
sub
sbb
jle
xchg
hlt
inc
fisttpl
aad
mov
or
pop
inc
xor
popf
aas
pop
les
jle
sbb
pushl
jmp
jb
lock
pop
rolb
push
mov
repz
out
cmp
ds
or
jl
inc
sti
mov
out
jmp
gs
mov
add
mov
scas
adc
cmpsl
pxor
iret
inc
sub
push
push
aad
test
or
xchg
movsb
xchg
int3
pop
scas
add
xor
ret
cmp
ror
inc
mulb
call
sub
ret
pop
shll
mov
ret
mov
xchg
insb
loopne
jecxz
sub
jl
out
dec
xchg
mov
sbb
sbb
lcall
pusha
or
in
adc
jle
xchg
add
test
mov
daa
fsts
testb
jae
or
sub
cmp
sti
and
push
stos
leave
jae
fstps
inc
push
mov
dec
jnp
inc
insl
push
jp
add
mov
popa
adc
sub
add
test
pop
pop
sbb
cmpsl
sbb
sbbl
cmp
les
mov
in
mov
divb
mov
mov
xor
or
xlat
add
movsb
xchg
repz
push
inc
or
cmpsl
out
cwtl
repz
mov
add
and
ss
test
push
enter
and
push
dec
mov
aad
orb
pop
mov
in
mov
add
cmp
pop
ret
dec
xchg
dec
mov
call
cwtl
notb
and
repz
cmp
lcall
hlt
lock
push
adc
fsub
adc
or
lahf
sbb
and
ss
sub
enter
out
pop
loope
push
dec
jne
add
sbb
jmp
and
popa
mov
fldcw
aas
in
lock
or
fwait
ret
pop
sarl
pop
arpl
mov
mov
mov
xor
xchg
dec
movsb
imul
lret
mov
push
inc
jmp
in
mov
hlt
cli
test
jge
scas
shrl
push
int3
fiaddl
lahf
call
hlt
aad
push
ja
enter
imul
xor
xchg
dec
xchg
push
stc
lods
push
es
std
cmpsl
icebp
out
loope
jno
inc
lea
dec
subl
jb
arpl
xchg
push
adc
jmp
xchg
mov
popa
cli
inc
fcoms
sub
ret
jne
in
or
pop
cmp
xor
push
lods
popf
cmp
scas
and
scas
pop
sub
out
in
xchg
mov
out
movsl
add
lods
mov
mov
inc
push
scas
int
add
xor
jnp
xor
xchg
jo
cmp
sub
add
sub
sub
and
lret
shrl
std
into
jne
int3
test
sub
lcall
sahf
jmp
inc
pop
cmp
cvttps2pi
into
inc
in
ffreep
adc
mov
pop
and
negb
inc
sub
pushf
and
push
cmp
ja
mov
mov
hlt
jb
dec
jge
sbb
jl
loopne
int
or
inc
mov
and
lods
mov
sub
jne
sbb
add
scas
or
cmp
pop
fsubl
xchg
xchg
neg
cs
lcall
cmp
push
cltd
lods
xor
outsb
pop
cmp
ret
nop
paddsw
pop
fs
xchg
or
jmp
mov
mov
repnz
jbe,pt
jb
lahf
push
stos
pop
loop
and
sbb
std
sarl
sbb
ss
jne
mov
imul
mov
cwtl
inc
and
pop
pop
mov
push
insb
sub
in
add
nop
xchg
add
jecxz
sub
xchg
and
into
jns
xor
xchg
mov
lret
jo
or
jb
mov
xorb
ja
orb
xchg
ljmp
push
cmp
and
adc
mov
xorb
sarb
sti
dec
outsb
sub
push
bound
aas
inc
mov
xchg
pop
in
out
call
or
mov
jmp
jbe
fld
or
gs
add
xchg
clc
mov
jne
xchg
ds
inc
adc
test
mov
sbb
mov
lret
das
mov
shrl
dec
or
lods
dec
mov
jmp
dec
mov
pop
adc
loop
push
pop
ja
xchg
aaa
loop
pop
repz
cwtl
adcb
jge
add
mov
mov
sbb
jmp
mov
mov
sarb
aas
ja
out
adc
mov
push
lcall
cmp
xor
ret
sbb
mov
and
int3
sbb
cli
pop
mov
and
rol
xchg
fwait
xor
xlat
icebp
and
sub
mov
mov
rcl
loope
mov
in
scas
rorl
xchg
mov
push
ds
jmp
mov
clc
jae
cmc
inc
jl
out
call
xor
jecxz
sbb
ljmp
decb
ror
sub
rolb
dec
int
sub
jnp
stos
icebp
pop
test
in
subl
dec
das
call
lret
adc
sahf
cmp
sub
inc
jo
cmp
jl
dec
adc
jmp
add
push
es
sub
into
lea
subl
hlt
ret
iret
in
jmp
nop
negb
xor
in
mov
sarb
jns
adc
sub
jo
ds
repnz
repnz
add
mov
push
inc
in
dec
xchg
rorb
pop
cmpsb
loop
xchg
adc
or
cmp
xchg
mov
mov
add
sub
mov
pop
mov
mov
mov
sbbl
loope
sar
pop
rorl
xchg
test
dec
xor
mov
mov
out
cmpsb
jge
mov
push
sub
rolb
fmul
add
push
push
fisttps
mov
arpl
cmpl
pop
jne
enter
dec
cmp
add
bound
js
mov
repnz
inc
xchg
leave
add
fiaddl
adc
push
cmpsl
cmp
adc
add
enter
ret
cwtl
adcb
mov
mov
inc
insl
aas
test
mov
mov
xchg
dec
cmp
push
cs
push
mov
shrl
dec
cwtl
push
sbb
xchg
lock
mov
test
shl
and
jle
adc
dec
jge
repz
pop
mov
mov
fiadds
std
loopne
xor
xchg
sbb
jns
mov
pop
je
push
xchg
add
xchg
lret
jmp
jecxz
stos
sub
push
out
adc
adc
neg
mov
bound
inc
adc
aam
push
add
lds
sub
or
ja
mov
push
jecxz
or
ror
dec
sub
stos
push
insb
or
pop
aad
pop
sbb
lea
lahf
shlb
dec
test
sub
outsb
push
cmc
xchg
bound
dec
jnp
mov
jg
push
and
test
xchg
ss
xor
push
xchg
push
jge
leave
dec
or
cmp
in
ret
iret
shr
fsubrp
je
cmp
ljmp
sbb
out
call
pop
mov
pop
xchg
test
shl
inc
inc
std
stc
sti
arpl
test
pop
add
pushf
loop
mov
cmpsl
cmp
test
push
push
push
lods
js
or
dec
sub
cld
xchg
or
mov
test
or
lods
outsl
jns
sahf
mov
mov
insl
dec
adc
ret
push
xchg
sbbl
test
sbb
arpl
popf
outsb
xor
fisubrs
gs
xlat
iret
lods
jg
aam
xchg
lods
lods
aaa
mov
mov
sub
ss
ljmp
add
jo
repnz
and
je
dec
les
inc
test
ss
jp
nop
mov
out
or
xor
out
popf
cmpsb
testl
xor
stos
in
stc
mov
jb
repz
push
es
and
pushf
mov
lcall
lods
or
cmp
cmp
cmp
das
outsl
mov
sub
mov
js
data16
xchg
sbb
repz
adc
inc
inc
cmp
int3
and
inc
adc
add
mov
das
mov
imul
sbb
pop
inc
dec
pop
and
test
mov
aad
mov
outsl
cld
inc
fildll
push
lock
add
aad
bound
sub
stos
or
cmpsl
leave
inc
xor
jns
jno
cmp
rclb
loopne
sub
sub
hlt
pushf
loopne
pop
test
sub
shll
std
push
mov
cmp
xor
mov
mov
les
add
add
stc
mov
mov
sbb
out
aad
stos
popf
pop
gs
out
adc
or
into
dec
lret
lcall
xchg
sahf
neg
leave
dec
in
gs
pusha
cwtl
sbb
jns
push
jno
pop
hlt
popf
adc
inc
or
jo
pop
cltd
push
sbb
mov
shlb
jecxz
mov
push
roll
movsl
lret
cmp
negl
and
sbb
loopne
mov
adc
iret
es
popa
jge
sub
adc
scas
stos
movsb
mov
fdivr
or
fs
dec
cmpsb
inc
adc
xchg
outsl
daa
sbb
outsb
jmp
xchg
lahf
dec
adc
inc
iret
aad
xor
out
mov
test
push
sarb
dec
outsl
shr
lods
jg
arpl
jbe
dec
jl
sub
mov
aas
cmp
pop
fbstp
mov
pusha
cmpsl
and
dec
push
xchg
dec
ja
test
cwtl
mov
aas
jl
mov
pop
inc
pop
push
mov
les
sarb
xor
pop
adc
jnp
push
mov
dec
loope
pop
mov
sti
shlb
mov
outsb
sub
mov
jg
mull
jnp
mov
addr16
xor
mov
inc
mov
push
xchg
add
int
fiadds
jne
adc
or
lcall
mov
xlat
addr16
sub
insl
mov
jge
or
sahf
sbb
hlt
fsubl
jbe
pop
xchg
inc
lock
bound
xchg
mov
push
adc
orl
clc
push
mov
jl
cmpsl
adc
cmp
lcall
movhps
sbb
mov
gs
jo
movsl
push
pop
enter
test
mov
adc
movsb
mov
sbb
push
or
movsl
fstpt
sub
ret
push
movsb
inc
jb
jae
fidivl
push
getsec
cmp
pop
call
and
adc
dec
xor
stc
jl
test
outsl
ret
addr16
scas
pop
pop
add
cmpsb
add
js
adc
push
mov
add
pop
cmp
xabort
mov
cltd
int3
xchg
or
subl
jns
inc
insb
jle
enter
jle
jge
mov
in
out
xchg
dec
cwtl
sbb
jns
mov
psubusb
cmc
dec
pop
and
and
pushf
jl
jne
cmp
movsl
cmp
push
cmp
adc
mov
addr16
mov
add
push
sbb
insb
out
xor
sbb
xor
pop
addr16
sti
mov
or
xor
sub
call
dec
xor
pusha
rcrb
test
mov
cmp
inc
jl
lods
cs
add
push
mov
fnop
mov
imul
ret
adc
dec
out
push
cmpl
adc
dec
inc
mov
out
pusha
or
mov
pop
xor
add
pop
jl
test
sub
jnp
adc
inc
mov
lret
push
mov
jmp
inc
xchg
cmp
bound
jecxz
pop
inc
or
lahf
sbb
test
cmp
outsl
nop
cmc
pushf
orl
xchg
push
ds
mov
call
pusha
adc
jle
sbb
pop
fs
emms
jnp,pt
movb
loope
push
pop
push
adc
int
lods
dec
outsl
int
jb
or
out
inc
leave
cmp
push
lea
sbb
push
xor
cli
sbb
xchg
or
int3
xor
addr16
and
aaa
cmpl
int
adc
xor
ds
lea
inc
push
fisttpl
mov
cmp
mov
mov
adc
aas
mov
insl
scas
sti
movsl
mov
inc
jb
push
movsl
jno
jmp
cmp
rcrb
push
movsl
mov
data16
xor
data16
xor
cli
sub
mov
xchg
mov
sti
mov
or
or
xor
lahf
mov
cmp
nop
pop
xchg
mov
jmp
mov
notb
stos
adc
jae
inc
gs
cwtl
xchg
add
nop
into
adc
loope
xor
xchg
lock
jle
sub
add
orb
test
mov
rclb
cld
sbb
movsb
push
or
cmp
sbb
mov
popf
jmp
add
sub
xchg
adc
push
add
cmpl
les
inc
lods
adc
add
lcall
cld
aam
sub
pop
out
jbe
jo
fs
lret
std
jmp
and
inc
push
adc
loopne
imul
pusha
dec
ret
lods
mov
mov
call
rclb
cmp
adc
into
lret
imul
cld
out
dec
imul
and
shrb
cwtl
repz
aas
imull
lock
jg
popf
mov
jne
xor
xor
movsb
ret
dec
mov
jne
jo
add
sbb
inc
into
ret
fildl
cltd
xor
and
loopne
mov
sub
in
js
sbb
cmp
loope
pop
pushl
push
push
sub
loop
pop
xchg
jg
xor
push
arpl
jmp
mov
and
jbe
sub
pop
jl
ret
xchg
xchg
and
xchg
mov
test
push
idivb
mov
cmp
outsb
aas
sub
std
and
orb
jo
aam
fwait
in
adc
gs
ja
sub
mov
add
ret
inc
bound
and
hlt
call
test
das
cmp
jp
push
sbb
cmp
push
add
sub
jg
pop
lcall
incb
movsb
loope
shrl
jge
iret
clc
mov
bound
arpl
leave
push
sbb
and
mov
das
dec
sbb
lahf
rcl
push
shlb
jnp
shl
fdivrl
bound
or
aam
xlat
add
pusha
daa
sti
sub
sub
xor
push
xorb
bnd
in
mov
lahf
mov
add
pop
ret
or
mov
loop
idivb
sub
lcall
rclb
ret
mov
gs
add
xchg
mov
daa
popf
sub
pop
repnz
sahf
sti
testb
xchg
push
cltd
pop
sahf
les
mov
frstor
inc
rorl
fsts
jecxz
shrb
adc
arpl
or
pop
jp
lods
mov
fnstenv
hlt
mov
pop
jns
jecxz
popa
clc
mulb
jb
xchg
jo
test
stos
mov
dec
insb
out
lods
mov
mov
rorl
outsb
daa
scas
push
pushf
add
mov
ficoml
cmpsl
adc
popf
adc
gs
addr16
inc
loop
lods
mov
or
sbb
jo
mov
sub
andl
cld
enter
sub
decl
inc
cmp
pop
in
sub
xor
lcall
fwait
push
in
out
mov
in
hlt
adc
mov
shl
iret
adc
lahf
aam
data16
or
xor
call
lcall
daa
mov
aad
mov
sbb
push
andl
movsb
test
test
xchg
dec
cmpl
adc
fmull
cmp
test
sbb
mov
scas
mov
fcoml
dec
jle
dec
loope
mov
xchg
inc
push
subb
inc
je
xlat
jne
mov
mov
test
jb
ja
jg
std
test
sub
sub
adc
mov
pop
hlt
pop
stos
sbb
fnsave
mov
or
mov
inc
call
les
pop
in
sub
and
test
xchg
pop
stos
xor
dec
sub
mov
lods
jno
add
test
fadd
jg
fcompl
fldenv
push
or
push
push
repnz
cld
mov
lret
and
pop
je
dec
adc
pusha
and
repnz
push
daa
mov
js
in
and
jbe
addb
ret
sub
sti
or
fsubrs
stos
addl
ljmp
jo
dec
repnz
jno
pop
pop
sbb
fcomip
adc
pop
loopne
and
jbe
inc
sbb
daa
dec
xchg
jns
jl
mov
sub
test
mov
aad
scas
es
inc
sub
xchg
orl
push
mov
cmpsl
xchg
jg
mov
dec
lods
dec
mov
fimull
mov
in
jnp
mov
aam
aad
inc
fsubl
test
jmp
sti
loope
imul
xchg
popa
cmpsl
pop
push
jmp
xlat
popa
insb
mov
popf
push
push
lcall
js
mov
inc
sub
xor
pop
stos
cmp
in
mov
adc
jne
and
je
xchg
pop
fcoms
inc
mov
out
jge
std
shll
pop
neg
push
repnz
mov
inc
pop
push
loop
and
mov
push
inc
orl
lock
add
lods
add
cltd
scas
pop
in
imul
dec
ret
add
aas
cmpl
stos
ja
inc
stc
dec
dec
cmp
aaa
cmpsl
jle
lods
test
mov
push
test
mov
mov
bound
test
incl
pop
out
pop
and
xor
jecxz
adc
mov
or
pop
adcb
dec
inc
adc
sub
mov
sub
daa
mov
adc
pusha
loopne
mov
xor
lea
sahf
adc
ss
add
outsb
out
fldenv
pushf
jle
cli
pop
dec
push
and
jns
out
imul
sbb
or
cltd
iret
js
inc
xchg
int3
out
dec
test
dec
inc
cmp
fimull
dec
adc
sbb
shll
fdivl
stc
cs
adc
addr16
repz
mov
dec
repnz
jmp
push
inc
xchg
lods
cld
imul
insl
xchg
jecxz
popa
inc
sbb
xor
outsb
pop
dec
push
int3
fnsave
daa
cltd
ds
imul
testb
addr16
clc
dec
in
cmp
or
sub
xorl
orb
or
mov
out
jl
dec
out
push
cmp
mov
fildll
mov
cmc
leave
lret
incl
mull
call
pop
sbb
inc
dec
repz
repnz
out
mov
cli
mov
scas
addb
das
pop
adc
addr16
aam
xchg
into
jmp
dec
ret
mov
cld
xchg
xor
xor
or
inc
mov
xor
scas
fnstenv
test
xchg
lods
inc
or
out
add
lds
addr16
int3
vphaddbw
addb
int
clc
or
dec
lea
addb
movntq
jne
inc
xor
leave
inc
jnp
nopl
imul
cmpsb
ret
or
stos
mov
push
jbe
mov
addr16
push
cmpsl
jg
gs
xchg
in
xchg
hlt
mull
out
icebp
pop
and
sub
jmp
inc
cmp
jb
cmp
pushf
xchg
aad
scas
jecxz
dec
push
lods
cmp
dec
mov
push
pop
addl
xlat
xlat
sbbl
sub
push
jbe
xchg
xlat
stos
cmp
inc
icebp
inc
movsl
xchg
sbb
dec
outsl
mov
lahf
dec
or
ret
pop
mov
xchg
les
sbb
scas
and
pop
int
and
outsl
mov
les
add
stos
ss
fs
es
dec
imul
push
inc
dec
enter
out
ljmp
mov
shl
mov
icebp
xor
mov
cmpsb
das
jl
iret
fstps
or
mov
sub
lret
sbb
xchg
shl
cmc
dec
mov
add
scas
ds
scas
nop
dec
add
jae
stc
repnz
mov
xor
cmpsb
enter
pop
lds
scas
sub
jle
xchg
testl
mov
adc
loop
shrl
loopne
mov
dec
xlat
jmp
rclb
cltd
xchg
mov
cmp
clc
stos
push
dec
cmp
rcrl
in
and
push
and
xor
out
mov
js
xorl
hlt
in
repnz
dec
inc
mov
call
jp
add
mov
push
std
sahf
cmpsb
mov
jmp
int
or
mov
sbb
add
pop
movsb
mov
adc
addr16
pop
les
cmp
inc
aam
andl
je
hlt
std
enter
andps
cmpsl
inc
jbe
push
push
lss
mov
sub
scas
and
out
into
fsts
popa
pop
jbe
push
and
or
ffree
mov
jg
and
mov
xchg
fs
aaa
sub
sbb
mov
mov
mov
push
push
and
testl
mov
xor
add
jle
adc
xchg
xchg
fstpt
leave
arpl
lret
xor
jg
adc
dec
jbe
es
rorb
mov
movl
shrl
aam
fwait
hlt
cmp
or
mov
popa
addr16
cmpsb
icebp
mov
mov
imul
xchg
loopne
or
dec
loope
scas
dec
shlb
bswap
or
jge
push
push
cmpsb
stos
movsl
lods
shl
or
inc
test
scas
adc
out
cmc
inc
test
test
sub
popa
fwait
jns
sub
cs
pop
pop
faddl
in
loop
andl
cmp
pop
pop
pusha
fs
sbb
adc
sti
aas
dec
mov
pop
mov
test
popf
adc
push
in
inc
fistl
or
cmp
and
stos
dec
pop
je
movsb
out
shrb
push
ds
icebp
xchg
popa
jmp
jp
insb
pop
xchg
sub
setne
popf
xchg
scas
mov
imul
sbb
dec
dec
push
add
movhps
scas
jmp
mov
xchg
clc
pop
test
push
dec
cmc
jp
movl
call
adc
jb
outsb
mov
adc
sub
and
xor
rcll
stc
xchg
adc
jno
gs
test
mov
int
cli
adc
push
mov
or
ljmp
imul
data16
stos
andl
push
mov
xchg
leave
xchg
decl
push
inc
cs
adc
push
inc
fwait
or
adc
push
mov
data16
sub
fs
das
aad
int3
hlt
push
jns
mov
lcall
out
add
mov
add
jbe
out
xchg
push
jo
jl
enter
bound
shrl
rcrb
ja
and
push
iret
or
sbbb
mov
and
das
mov
in
loopne
arpl
arpl
inc
xor
nop
mov
inc
in
jmp
lods
pop
pop
arpl
or
lds
mov
sbb
mov
cmpsb
bound
cmpsb
lods
sahf
in
xor
jle
or
cmp
adc
cmp
cmpl
push
sub
xor
lds
test
pop
or
outsb
mov
arpl
mov
push
fwait
inc
mov
stc
fst
hlt
push
push
insb
cmp
xchg
xor
ret
aas
lret
and
sub
mov
ja
js
jno
insl
gs
push
and
push
jge
add
aas
nop
push
in
mov
sub
pop
addr16
movsb
or
mov
sahf
mov
cmp
sahf
stos
iret
and
arpl
int
xor
xchg
lods
xchg
cwtl
jl
rolb
adc
aas
dec
add
mov
enter
imul
imul
rcrl
and
mov
mov
mov
jl
mov
fidivs
push
in
xchg
data16
sbb
jp
or
xchg
stc
shrb
aaa
or
in
cmp
pop
fdivrs
pop
mov
xor
aam
leave
pop
in
cmp
inc
jns
js
xchg
clc
mov
sub
rcl
push
test
xchg
fwait
cmpsl
mov
sub
pop
leave
or
pop
out
and
daa
pop
mov
xchg
add
adc
and
pop
add
ret
cli
movsl
inc
jecxz
mov
pop
js
cwtl
add
pop
and
cmpsb
out
ss
popa
pusha
nop
jg
cmp
in
nop
je
pop
ja
mov
mov
outsb
pop
ret
push
imul
fnstsw
pop
mov
mov
test
jg
andb
xchg
xchg
sub
add
gs
or
xor
push
filds
xor
into
pop
mov
js
sti
fs
movsb
push
inc
dec
icebp
dec
in
push
addr16
dec
push
lea
movsl
in
add
jns
push
andl
cmpsl
das
jge
in
adc
push
lcall
cmp
fidivrl
mov
xorb
pop
mov
xorb
jge
arpl
fucomip
pop
xlat
in
pop
mov
pop
fcomp
or
out
out
ret
and
fsubs
mov
mov
dec
mov
fs
daa
jge
lahf
imul
inc
ret
mul
int
iret
mov
inc
sub
push
jecxz
adc
movsl
cmp
mov
push
lods
mov
or
movsl
or
fadds
cmc
nop
clc
mov
pop
rep
mov
pop
pop
dec
cwtl
add
aad
dec
cld
cwtl
out
out
mov
lea
mov
cmpsl
repz
mov
in
repnz
cmp
push
roll
fwait
xchg
inc
fs
cmp
lods
dec
rcll
jo
jno
inc
test
add
mov
test
xor
pop
es
dec
adcb
lret
mov
sub
outsl
pop
lods
pushf
xchg
sbb
mov
xchg
or
add
jmp
pop
push
jle
lea
pop
pop
cmp
call
pop
mov
mov
dec
xor
inc
adc
cli
lods
in
cltd
inc
ljmp
repnz
into
xor
dec
loope
dec
adc
ret
dec
cmp
cmp
in
cmp
sbbb
xlat
or
add
sub
test
cli
push
adc
sbb
iret
fistpll
jno
sbb
subb
add
into
hlt
mov
stos
aam
cmp
xchg
scas
xchg
jg
pop
mov
data16
adc
xchg
and
bound
sub
in
pop
div
pushl
cmp
sub
xchg
jp
cmp
outsl
lods
mov
fsts
sub
push
inc
inc
lds
cmp
inc
lods
rcrb
shl
and
sbb
pop
xchg
aaa
icebp
outsb
cld
out
sub
cmc
call
iret
gs
xchg
mov
aaa
pop
xchg
es
stos
xchg
gs
popf
mov
sbb
sub
jmp
pop
fldln2
mov
sbb
leave
cmp
sbb
stos
and
lock
sarb
pop
daa
jne
psubusb
or
mov
sahf
fisubrs
mov
and
lcall
xor
sub
roll
push
aad
fcoml
mov
mov
mov
and
sbb
jl
out
call
add
loope
loop
xchg
lret
daa
mov
xor
xchg
dec
enter
mov
js
dec
xlat
xchg
ficompl
mov
nop
sub
jnp
int
add
and
mov
outsl
loop
ds
add
dec
sub
loop
pusha
cmp
scas
cmp
xchg
xchg
fcmovb
mov
and
xor
ds
shrb
test
push
sub
cmp
pop
mov
les
or
cmp
push
mov
call
mov
inc
cli
int
pop
stc
jecxz
mov
xor
pop
loopne
add
std
adc
cmp
es
in
add
pop
je
push
jno
loope
pop
add
dec
loopne
stos
adc
lock
stos
mov
frstpm(287
cld
imul
addr16
pop
emms
cmp
pop
sbb
xorl
pop
xchg
xor
outsl
cmp
fcmovnu
lock
call
push
mov
mov
in
in
inc
inc
mov
mov
push
inc
arpl
arpl
mov
jle
out
subb
adc
fs
hlt
les
and
pop
cmc
pop
scas
pop
mov
push
clc
push
ds
add
loope
repz
out
shll
sub
cli
push
xchg
mov
jp
rorl
sahf
push
and
sub
push
das
pop
fisubs
adc
sti
xchg
jg
and
adc
fstpl
and
xor
cli
negl
or
mov
rorb
xchg
out
push
mov
pop
mov
push
xchg
sub
into
jl
xchg
shlb
sbb
and
cmpsb
test
addl
out
in
imul
jne
sti
sbb
xor
jle
insl
xchg
rorb
push
sbb
in
rcrb
pop
sbb
outsl
pop
enter
push
fnsave
out
lea
push
cmp
testl
dec
data16
jae
sbb
mov
add
rcrl
test
pop
mov
cmc
dec
sbb
js
loop
mov
add
xorb
add
test
push
sti
xchg
stos
jecxz
push
data16
dec
jno
dec
in
popf
dec
shll
adc
sahf
fbstp
mov
jmp
rcrl
jno
push
mov
push
imul
aam
sub
iret
fldt
out
or
cmp
mov
jmp
inc
les
jae
adc
jl
rorb
and
sub
dec
xchg
popa
sub
pop
adc
xor
cmp
int
std
sbb
out
jmp
mov
jo
lret
jae
cmp
pop
adc
inc
je
mov
push
cltd
out
mov
and
mov
test
int
push
pop
pop
push
pop
int3
xlat
das
cmp
xor
adc
in
push
int
fcompl
in
popa
mov
loope
pop
pop
popa
ret
push
add
sub
xchg
lret
js
les
scas
call
fmull
xor
jno
xchg
data16
fidivrs
repz
or
call
dec
lock
push
pop
mov
sbb
out
cmc
xor
hlt
sbb
std
sbb
fldt
inc
enter
js
das
repnz
in
dec
or
shrb
repz
scas
repz
lock
fsubr
pop
xchg
pop
jge
mov
push
sub
sub
cmp
call
iret
lahf
es
mov
outsb
fildll
shrl
test
popa
outsl
ret
arpl
push
push
jg
pop
call
dec
test
xchg
mov
test
sar
inc
mov
lahf
bound
outsb
popf
sub
dec
ss
nop
popl
pop
aam
mov
sub
push
popa
lods
push
dec
int
mov
test
or
ret
push
call
sub
push
jo
ss
xchg
sahf
lret
push
ret
inc
xchg
sti
lret
cmp
push
mov
es
scas
testb
dec
mov
inc
jle
repz
jmp
xchg
xlat
ret
or
js
sbb
lret
dec
pop
icebp
in
sub
in
test
ret
adc
gs
movsl
jmp
sahf
in
inc
push
jg
xchg
out
ljmp
int3
jae
fdivrs
sub
mov
aas
sbb
add
mov
adc
cmpsb
xorl
push
jecxz
addr16
jbe
xchg
insb
sahf
add
popf
sub
mov
out
orb
fstps
hlt
hlt
cmpl
sti
xor
cld
rcl
mov
bound
inc
push
push
arpl
pop
pop
lock
and
jne
addr16
hlt
xor
inc
xchg
cmp
mov
shlb
lods
mov
hlt
mov
sub
sub
fnstcw
dec
inc
pushf
mov
stos
stos
repz
pop
and
arpl
aaa
xchg
push
mov
lret
jae
lds
and
xchg
testl
xchg
mov
inc
inc
sbb
scas
and
scas
test
cmc
push
scas
sbbl
mov
inc
fistps
adc
scas
test
lret
scas
test
push
sahf
sub
pop
and
das
gs
and
or
mov
dec
dec
test
xchg
insl
cmpsb
push
mov
jg
dec
fst
notb
int3
xlat
nop
leave
pop
xor
jl
out
pusha
rcl
movb
or
mov
inc
inc
loop
jo
dec
jp
cmp
push
mov
inc
or
cld
adc
movsl
sub
dec
das
and
cmp
lock
les
scas
inc
dec
dec
in
jbe
xchg
leave
xor
outsl
call
xchg
jno
vmread
cmpsl
jmp
add
mov
or
insb
xchg
mov
clc
pushf
arpl
in
sbb
jmp
sub
sbb
rclb
dec
or
call
arpl
sti
mov
add
adc
mov
test
jp
add
mov
mov
insb
jecxz
cli
jge
fimuls
pop
test
jp
mov
loope
xor
adc
call
hlt
and
jb
xchg
clc
xor
sti
gs
es
in
cltd
push
test
std
sahf
push
sbb
jns
mov
repnz
in
add
ss
jge
or
or
jmp
cwtl
popa
cmp
pushf
pop
fcmovbe
push
push
dec
adc
in
push
shlb
aas
sahf
shll
mov
insb
jle
insb
mov
movsb
out
repz
xchg
push
scas
ret
aas
sti
rorb
ret
mov
push
mov
mov
xchg
push
jnp
dec
mov
add
mov
std
jno
cltd
aas
push
push
pop
fidivrl
jge
repnz
aaa
lcall
mov
rcrl
call
mov
enter
leave
nop
in
nop
filds
ret
mov
movsl
and
inc
mov
jo
push
adc
into
rorb
mov
or
cmc
test
and
mov
and
inc
faddl
stos
int3
loopne
out
jge
pop
cli
scas
adc
negl
xchg
sub
push
inc
cmp
dec
sbb
cmc
mov
test
in
adc
test
subb
lods
aad
les
shr
pop
roll
loope
movsl
adc
mov
jo
testl
and
shr
fs
into
mov
mov
frstor
xchg
call
cmpsb
arpl
outsl
into
sub
pop
sbb
dec
fstpl
int3
ss
mov
inc
shr
xchg
enter
stos
mov
leave
pop
pop
shlb
in
test
pop
imul
dec
mov
cltd
jnp
stos
test
pop
and
mov
clc
clc
push
xor
sahf
xchg
test
sub
pop
loope
pop
dec
dec
or
mov
add
je
push
pushf
int
test
mov
or
fs
cmp
lea
shrb
jo
add
mov
idivb
dec
bswap
pop
pop
popa
xchg
mov
pusha
fstpt
push
pop
xor
sub
std
xor
add
cmp
es
cmc
mov
mov
and
and
jno
mov
insl
jns
loope
imul
out
inc
push
les
cmp
jne
mov
adc
insl
push
loope
leave
decb
jno
lods
lods
dec
pop
jecxz
mov
adc
gs
aaa
jnp
jge
out
scas
jae
aad
int
cmpsb
push
cmp
lock
xor
mov
mov
lock
fldt
or
adc
sbb
out
xchg
loopne
push
lahf
lds
xchg
testl
js
ret
loopne
imul
cmp
inc
outsl
push
mov
loope
icebp
inc
pop
js
xchg
gs
jae
rcrb
aad
in
dec
or
fsubr
mov
jge
cld
cli
jno
gs
lret
sbb
pushf
mov
cmpsb
sbb
inc
test
mov
enter
inc
out
fwait
int
jne
xchg
scas
jmp
addb
adc
pop
sbb
mov
xchg
and
insl
aam
mov
mov
sbb
les
jmp
xor
in
cmpsb
add
jle
cmpsb
add
fsubrl
adc
out
ljmp
cmc
adc
aad
hlt
in
jo
outsl
add
xchg
ljmp
dec
mov
cmp
adcb
lea
hlt
inc
adc
imul
loop
nop
pop
xchg
mov
inc
popa
stos
scas
pop
cmp
mov
adc
or
cmp
in
inc
push
sbb
pop
inc
addl
sub
cmp
ret
lahf
mov
mov
and
and
mov
fnstsw
and
dec
cmp
jne
aam
dec
push
lock
mov
out
mov
xchg
fisubrs
xor
sub
dec
xchg
add
push
push
and
pushf
sbbl
and
cmp
es
add
jg
fnstsw
lods
mov
aad
push
push
popa
shrb
sbb
test
lods
sbb
iret
mov
nop
sahf
dec
inc
mov
ficompl
sti
xchg
jns
mov
mov
cwtl
inc
mov
or
mov
sahf
adc
loope
jge
add
fcmovnb
rclb
pop
jae
sbb
jl
or
ret
lods
daa
mov
divb
adcb
in
loopne
cltd
inc
or
repz
mov
out
xor
mov
mov
enter
sub
call
push
outsl
loopne
hlt
add
add
or
in
cmp
xchg
cmpsb
fcmovne
xchg
add
idivb
fbstp
adc
clc
test
out
orl
lods
movsb
out
repz
int3
adc
jmp
lock
and
dec
loopne
pop
xchg
lret
aad
out
or
faddl
test
movsl
mov
jmp
iret
scas
out
out
push
mov
cmp
test
lcall
mov
scas
aam
jno
push
fs
sub
push
mov
inc
dec
jo
push
inc
jp
dec
cmp
inc
sub
push
fists
mov
cld
push
stos
mov
push
orb
mov
aaa
dec
dec
xchg
push
jae
push
es
mov
mov
leave
mov
call
enter
and
aad
or
in
icebp
outsl
movsl
mov
sbb
int3
xchg
insb
movsb
push
push
scas
pop
xchg
cmp
scas
mov
insl
jg
scas
xchg
inc
sahf
cmc
xor
fiaddl
and
aas
sub
inc
or
iret
cs
sub
push
mov
adc
imul
xchg
test
out
push
add
lods
jne
lock
jecxz
inc
push
jae
pop
mov
js
into
sbb
dec
sub
aas
out
outsb
and
insb
fidivrl
loope
dec
sbb
xor
pop
jle
mov
mov
scas
mov
movsl
movsb
mov
mov
mov
bound
pop
dec
adc
repz
jae
dec
fwait
scas
mov
outsl
incb
xchg
push
pushf
out
sub
arpl
sbb
jns
push
jmp
sub
lret
andb
mov
mov
lods
outsl
sub
fs
sbb
dec
inc
xchg
pop
inc
jb
pop
lcall
into
or
xor
push
jl
mov
pushf
outsl
loop
sub
jb
mov
mov
xchg
lret
and
icebp
sub
scas
or
mov
movsb
inc
jbe
cmp
fstpt
mov
aad
popa
sub
dec
fdivrl
inc
pop
cltd
dec
xor
loop
or
jmp
cltd
roll
sbb
and
push
shlb
fldcw
repz
in
jmp
fisubrl
cltd
mov
int3
jl
fsubr
stc
cmp
jo
out
pushf
jp
push
dec
fnstsw
out
sahf
repnz
test
maxps
pop
mov
and
inc
out
or
jcxz
push
gs
pop
leave
fs
lahf
loopne
aam
mov
cmpsb
push
jne
xchg
inc
pop
pop
pop
test
mov
push
sub
mov
xchg
lret
jecxz
cmp
jmp
dec
jae
mov
imul
xchg
lcallw
iret
ret
sbb
jno
inc
push
in
sbb
int
outsl
add
or
xor
into
xor
push
adc
pop
les
in
jae
in
sti
push
xchg
and
xchg
in
lcall
or
push
je
je
adc
jp
cmp
pop
and
lcall
enter
inc
xchg
adc
sub
pushf
pusha
mov
frstor
loop
lea
lds
fnstcw
and
test
call
push
push
jb
popf
cmp
xchg
dec
clc
push
data16
cmp
ret
lods
cs
and
xor
popa
mov
mov
cld
out
and
int3
inc
mov
rol
xchg
mov
out
xchg
outsl
mov
test
pop
sub
cmp
cmc
imul
ljmp
lahf
lods
insb
push
inc
hlt
jbe
iret
into
adc
jmp
dec
mov
push
xchg
lds
lret
pop
push
adc
push
popf
push
in
cmpsl
outsl
add
loopne
mov
loopne
movsb
mov
cmp
push
imul
test
and
sbb
mov
stos
jp
aam
pop
icebp
leave
jl
xchg
pop
loopne
loope
dec
fidivs
repz
js
lahf
cmp
mov
lock
mov
out
sbb
scas
fwait
add
mov
mov
mov
sub
inc
dec
aad
dec
jp
lea
popa
jle
mov
pop
scas
shl
mov
loop
and
inc
sub
dec
mov
imul
pop
inc
enter
ds
xchg
add
insb
xchg
mov
cmpsl
inc
sti
jp
call
cld
xor
test
cltd
mov
push
lret
loopne
mov
cld
sbb
daa
cwtl
xorb
decb
xchg
mov
mov
fstpl
push
testl
jo
add
imul
sahf
popf
nop
dec
rcrl
add
and
inc
adc
xchg
nop
sub
xchg
std
add
push
fildl
inc
pop
fistps
ja
test
xor
cmp
pop
sub
cmpsb
mov
and
rcr
sbb
xor
sub
cld
scas
clc
inc
into
rcr
repnz
jb
subb
xchg
shr
aam
mov
insl
cmp
idivb
mov
cmp
mov
cld
xchg
dec
xor
push
jnp
mov
push
popa
mov
cmp
out
mov
adc
imulb
test
inc
pop
cmp
fs
lret
jecxz
mov
cmp
xchg
push
adc
lahf
xchg
loope
adc
stc
inc
mov
xchg
cmp
adc
cmp
or
pusha
xchg
scas
fcmovnbe
inc
ds
mov
sbb
popa
dec
and
inc
inc
test
in
sub
cmc
arpl
mov
mov
mov
add
sbb
fmulp
fcomp
popf
push
or
mov
jns
clc
out
push
aam
dec
and
ret
adc
loopne
pushf
addb
test
xchg
test
scas
jmp
test
xlat
repnz
cmpsb
pop
fisubrl
ret
mov
mov
inc
out
cmc
and
stos
and
js
shll
cmp
inc
or
orb
mov
push
sbb
imul
add
inc
sbb
arpl
jmp
adc
push
jno
or
lds
aam
int3
call
jecxz
rolb
mov
xor
in
out
xor
mov
out
jnp
mov
ret
stc
stc
addl
add
stos
sahf
data16
push
fucom
adc
push
sbb
int3
in
popl
das
xor
loopne
mov
xor
cmc
or
out
fimull
or
mov
outsb
lods
repnz
add
iret
dec
cmp
cmp
out
loopne
shlb
cmpsb
sub
imul
adcb
jbe
pop
adc
mov
repz
dec
jb
sbb
mov
mov
incl
lods
leave
pop
jge
ja
shlb
sbb
mov
jg
jo
mov
out
hlt
sbb
sti
outsb
stos
cmp
nop
cmc
pop
cmp
pop
test
jb
jno
sub
xor
je
mov
cmp
pop
mov
cmp
mov
fdivs
or
sbb
push
push
xchg
push
fnsave
ja
lock
fidivs
pop
add
and
push
jp
fcmovne
pop
daa
into
jne
mov
gs
xor
push
js
xchg
push
cmp
fisubl
in
cmpl
out
fnsave
mov
jg
jecxz
ficoms
enter
mov
adc
mov
dec
add
pop
je
push
dec
cmpl
inc
sti
lods
xlat
lock
mov
xlat
jg
push
add
push
imul
inc
xchg
and
in
mov
inc
add
cmpsl
cli
mov
dec
adc
and
and
ficompl
xor
pop
pop
jns
jnp
ja
bound
pop
repz
lods
mov
mov
imul
leave
sbb
add
lcall
int
or
stc
mov
cmpsl
hlt
and
adcb
mov
dec
lock
mov
push
aad
lcall
or
pop
xchg
sub
xchg
dec
fdivrs
outsb
cmp
inc
out
outsb
sbbb
lea
aam
jp
mov
lock
lods
xchg
lods
repz
jbe
lret
fcomp
mov
push
or
not
hlt
and
lret
dec
aam
push
js
stos
leave
rolb
pop
pop
lods
inc
out
es
and
enter
dec
out
jb
jp
ret
cmp
enter
rolb
mov
out
cmpsb
mov
push
cmc
aas
outsb
adc
cmc
push
nop
call
gs
jl
mov
out
jp
aad
mov
mov
pusha
clc
shlb
out
mov
decl
pop
les
testb
pop
in
xlat
xor
pop
lds
fnstenv
or
xchg
mov
imul
sbb
out
inc
dec
mov
scas
cmc
fcmovb
mov
es
dec
jne
aad
or
push
mov
and
jns
hlt
push
cmp
jnp
test
mov
popa
jns
out
or
subb
gs
outsl
xor
stos
dec
into
leave
orb
and
frstor
pushf
fldcw
js
lods
les
stc
fimull
in
mov
jmp
lcall
je
xchg
das
inc
dec
inc
int3
dec
and
xor
in
pop
wrmsr
call
cmc
sahf
loop
andb
out
das
iret
scas
mov
xchg
das
sbb
or
daa
loope
push
jmp
ljmp
pop
repnz
mov
cmc
lock
push
cmpsb
call
sub
jecxz
push
push
sub
out
cmpsb
xlat
test
lock
pop
rorb
mov
push
mov
mov
test
sub
cli
jne
stos
sahf
cld
cli
jo
pop
int3
add
je
jbe
push
movsl
call
add
fwait
lods
add
add
or
sub
imul
mov
jmp
or
jl
rcrb
dec
leave
out
xchg
test
outsb
dec
pushf
push
or
fnstenv
mov
sbb
stos
xchg
mov
jo
out
loop
and
fimuls
ret
andb
push
lock
movsb
ret
dec
insl
mov
imul
or
inc
es
xlat
scas
je
in
mov
out
pop
popf
mov
and
ret
dec
ds
sbb
cmp
push
xchg
jbe
hlt
or
inc
adc
jmp
repz
add
stos
pop
popa
in
cmp
aaa
cmp
jg
cmp
lds
sub
movsl
fcom
pop
test
cmc
rcll
and
pop
bnd
test
je
cmp
mov
dec
mov
cmpsl
pop
andl
cmc
mov
push
lods
fbstp
pop
and
sub
dec
inc
jle
mov
pop
mov
in
es
or
imul
enter
in
leave
mull
shll
dec
rol
sub
jl
ficoms
inc
shll
dec
icebp
mov
mov
pop
jle
sub
aam
pushl
adc
sub
pop
aad
push
push
push
jge
ss
mov
cmp
pop
mov
jb
add
iret
pop
mov
outsb
fs
es
stos
adc
lea
mov
push
xlat
lcall
out
fistpll
or
jae
lock
addr16
arpl
pop
outsb
sub
cmpsl
ds
push
sub
std
inc
xchg
test
pop
xor
subl
arpl
dec
out
in
add
pop
add
out
ficoml
jbe
sbbl
rol
jg
jmp
jp
push
cmp
mov
ret
bts
loope
jnp
cmp
or
jnp
dec
aaa
icebp
in
fcomi
cmp
movsl
mov
adc
lahf
sub
sbb
loopne
mov
mov
mov
lods
pop
pop
mov
push
movsb
pop
test
les
adcl
add
mov
pop
or
mov
stc
pop
add
in
testb
sarb
ds
je
mov
test
repnz
jne
jp
jp
jl
pop
loop
sbb
cltd
bound
adc
outsl
daa
inc
mov
push
jae
xor
test
ret
icebp
sti
lcall
dec
adc
sbb
xchg
sub
xchg
cld
icebp
cmp
and
xchg
pop
subl
jne
mov
and
xor
call
movsl
das
sub
into
scas
pop
push
rcrb
fimuls
out
std
or
pop
fcoms
adc
inc
jo
xlat
bound
sub
xor
adc
dec
inc
lcall
inc
adc
lret
mov
xor
arpl
push
outsb
std
mov
rclb
adc
sbb
out
xor
sbb
lods
push
pop
cmp
sub
or
sub
cld
mov
das
mov
ret
mov
inc
jecxz
lods
xor
push
sar
xor
popf
popf
adc
xchg
dec
jbe
adc
mov
adc
inc
int
cmp
mov
dec
jbe
sti
xchg
fildl
mov
ficomps
std
jg
push
cmp
add
popf
pop
in
stc
enter
cwtl
arpl
notb
mov
int3
outsb
fwait
daa
or
fistpll
subb
in
mov
xchg
stos
ds
sbbl
out
sahf
sub
cmp
jmp
ljmp
jb
sub
sub
jnp
mov
push
inc
pop
add
test
stos
push
mov
rcr
mov
inc
mov
jmp
loop
lcall
mov
inc
dec
popa
mov
and
add
js
divl
shr
hlt
dec
cmc
adc
popa
jne
mov
sbb
mov
sub
jecxz
clc
fisttpl
cwtl
sub
sub
pusha
nop
stc
clc
std
add
stc
sbb
cmp
sbb
ficoms
cwtl
pop
mov
popf
mov
movsb
lea
in
mulb
sub
or
push
add
fisubrs
mov
loope
pop
sub
sarl
and
jl
ret
arpl
add
popa
out
push
push
mov
in
in
sti
test
mov
pop
les
cmpb
jge
sub
cmp
fisubrs
stos
xor
and
mov
or
pop
jle
xor
cli
pop
mov
cmp
sbb
add
cltd
int
nop
pop
addb
add
clc
lret
stc
idiv
pop
ljmp
sbb
pusha
lret
outsb
pushf
aad
sti
jge
cmp
rolb
jle
jno
insl
insb
mov
add
hlt
push
inc
push
mov
jno
add
cmp
es
aaa
cs
test
and
pusha
and
pop
push
and
push
stos
mov
push
lret
nop
andb
sub
lods
mov
ja
daa
hlt
xchg
aas
shll
adc
pushf
data16
addr16
push
clc
fnstcw
ret
ficomps
pop
lret
cmp
lret
jecxz
mov
dec
js
pop
jg
addr16
shll
cmpsb
jno
jb
sti
mov
jmp
add
pop
xor
mov
pusha
ljmp
jp
aas
mov
cmpsl
scas
ss
and
pushf
dec
push
cmp
mov
push
call
repnz
push
sub
shr
pop
mov
divb
mov
cmp
mov
mov
testb
enter
xlat
scas
mov
pop
imul
outsb
dec
out
mov
cmpsb
subl
in
notl
lcall
push
int
in
inc
das
add
in
cmp
pop
jl
shll
cmpsb
stc
dec
xchg
fwait
pop
flds
mov
or
ret
adc
test
cmp
push
cli
andl
mov
mov
pop
mov
stc
mov
nop
repnz
ss
mulb
jb
dec
push
cmp
lcall
add
cmp
pusha
in
loop
and
rclb
outsl
cmp
push
inc
sarb
sub
movsb
lret
mov
test
sub
clc
sub
clc
pop
add
ss
inc
hlt
movsl
jo
or
sub
pusha
gs
and
imul
lods
mov
and
pop
adc
or
cmp
scas
inc
xchg
mov
xchg
cs
push
sub
sub
xor
sbb
and
push
mov
cmp
sub
sub
std
sbb
pop
pop
lret
int3
adc
cld
add
cmp
nop
pop
fstpt
add
stos
xchg
or
adc
mov
sbb
mov
xchg
or
fdiv
decl
pushf
dec
test
jmp
mov
add
loop
push
dec
daa
xchg
sbb
fcmovu
mov
lds
lret
leave
fisttpll
fsubl
and
dec
and
clc
jo
adc
push
and
add
push
shll
xchg
jae
xchg
add
dec
sub
mov
sahf
outsb
pop
sub
mov
mov
xchg
aad
dec
cmpsb
imul
inc
jle
icebp
add
jae
dec
lret
ds
inc
xor
dec
scas
jg
loopne
and
aas
sbb
sub
cmp
imul
jmp
sbb
out
cmpsl
sbb
sbb
lahf
mov
pop
test
test
shll
mov
pushf
lcall
daa
repnz
stc
add
mov
shlb
jecxz
lods
jmp
aad
divl
imul
add
jmp
pop
incl
xchg
dec
xchg
mov
fcoms
nop
das
int
fld
inc
icebp
pop
push
enter
insb
arpl
fisttps
cmp
and
xchg
inc
rorb
jb
call
in
adc
pop
out
mov
ja
outsl
data16
in
mov
popa
aas
push
jne
push
or
les
ss
xor
xchg
sbb
aam
xchg
fistpl
jecxz
imul
mov
shr
popf
jne
mov
and
imulb
xchg
add
and
stos
fildll
aaa
ljmp
mov
cmp
std
adc
orb
mov
ret
jne
push
add
push
fnsave
push
mov
mov
add
mov
outsl
mov
sahf
in
or
loop
cmpsb
sbb
jmp
mov
xor
cs
push
pop
enter
dec
std
es
cmpsl
xchg
lea
mov
jae
addr16
idivl
xchg
dec
dec
xlat
jne
jnp
mov
sahf
inc
or
mov
cld
push
sub
jmp
lcall
enter
das
adc
xchg
xor
aaa
cmp
jle
insl
or
jne
loop
dec
leave
stos
decb
fidivrs
pusha
mov
xchg
adc
inc
fcoml
data16
out
daa
jge
aaa
xchg
imul
xchg
addl
push
or
adc
or
fyl2x
mov
in
aam
div
stos
inc
sbb
pop
js
or
dec
outsl
cltd
clc
jb
mov
movsb
jg
adc
mov
aam
push
or
lcall
adc
in
lock
dec
push
xor
fdivl
pop
jp
andps
pusha
xchg
ss
cltd
sahf
jnp
mov
jbe
inc
adc
call
xchg
insl
cli
jae
jb
cmc
call
ds
add
gs
cmp
and
and
nop
fnstcw
fcoml
mov
loopne
push
ljmp
hlt
pop
push
cmp
mov
inc
das
es
jecxz
inc
ljmp
cmp
adc
cmp
clc
cmpsl
and
fadds
addl
test
xor
ss
fimull
fdivrl
rcrl
js
scas
jmp
mov
stos
jne
stc
mov
mov
orb
scas
ja
cmp
add
out
cld
pop
out
into
pop
cld
jl
loopne
add
jmp
cld
mov
pop
xchg
adc
push
jmp
add
incb
xor
cmp
nop
dec
roll
popa
pop
cmc
sahf
mov
push
cld
cs
add
push
xchg
sub
pushf
dec
mov
sbb
cmp
aad
fists
cmp
push
and
jl
ss
dec
insl
inc
data16
or
popf
insl
xchg
lock
in
dec
add
cmpsb
lock
lret
dec
aam
adc
push
ja
adc
mov
lahf
sub
add
hlt
pop
and
not
fdiv
sbb
and
cmp
pop
mov
dec
and
mov
loop
push
aad
daa
inc
push
mov
mov
into
mov
sub
dec
imulb
xorl
sub
sahf
mov
fwait
les
inc
or
push
xor
rol
add
xchg
movsl
cmp
xor
repz
scas
imul
and
mov
cmp
jnp
out
inc
mov
mov
mov
cmp
les
arpl
mov
xor
cmp
mov
in
out
adc
out
nop
inc
sbb
cmp
mov
shrl
mov
mov
aam
das
jo
add
mov
arpl
enter
fs
xchg
enter
hlt
push
mov
jecxz
aas
push
or
mov
imul
imul
mov
addl
mov
imul
lods
movsl
insb
push
jbe
push
je
sti
data16
leave
xor
inc
adc
pop
out
mov
cmc
inc
ret
xchg
cmp
mov
mov
or
testb
pop
push
arpl
cmp
cmp
push
call
dec
rclb
push
sahf
jb
lcall
pop
push
or
out
jb
aad
cli
and
sbb
mov
leave
push
shll
xchg
pop
mov
dec
sbb
adc
test
out
jecxz
ja
add
and
mov
jb
popf
mov
leave
sub
pushl
jecxz
xor
push
mov
sbb
xor
cmp
ds
mov
sbb
nop
mov
inc
jo
ja
cs
dec
jnp
and
stc
mov
pusha
pusha
pusha
jno
jbe
push
dec
test
aaa
cmpsl
jp
xchg
fstpl
mov
adc
out
cmc
mov
push
mov
xchg
adc
jne
sub
pop
cld
outsb
or
and
and
dec
sahf
mov
and
mov
mov
ffree
mov
mov
xchg
test
pop
push
xchg
cmc
mov
push
xor
cli
inc
out
in
xor
add
cmp
aas
mov
xorb
pop
decb
popa
jns
stos
push
or
je
in
cltd
jb
inc
dec
fwait
es
xchg
lods
fldcw
push
out
xor
xchg
cs
mov
inc
dec
mov
or
faddl
and
jbe
or
fsubl
stos
sahf
jg
jmp
rolb
and
ja
in
mov
mov
sub
mov
ja
lds
mov
imul
jno
lcall
rolb
outsl
lods
and
sti
push
pop
xorl
mov
out
int3
inc
in
or
sub
mov
ficoms
in
sahf
adcb
cmc
dec
push
xlat
sub
popf
cs
jle
sahf
adc
lret
mov
add
cld
jns
je
ljmp
pop
sbb
lds
clc
xchg
pop
xchg
movb
push
jns
test
adc
add
push
lret
test
cmp
stc
ds
data16
sarl
aas
xor
add
pop
mov
aam
scas
pusha
cmp
mov
mov
ret
js
jns
jbe
loopne
lock
inc
popf
mov
mov
das
sbb
rorl
and
ja
xor
lret
mov
add
add
mov
movsl
add
xorl
adc
fildll
sub
leave
jno
fists
aam
imul
ror
mov
int
inc
lret
jle
cld
out
enter
cmpsb
data16
idivb
adc
imul
jmp
sbb
loop
push
cmpsl
push
pop
jae
mov
sub
inc
ret
mov
push
test
addr16
jg
stc
push
in
pop
jl
xor
jmp
test
lea
mov
loopne
mov
and
xor
imull
jg
frstor
fsub
xor
gs
das
das
inc
dec
je
pushf
sub
mov
add
and
jae
pop
ljmp
icebp
inc
push
addl
xchg
jae
data16
and
mov
hlt
pop
popw
imul
dec
mov
sbb
stc
outsb
pushf
jo
pushf
push
ljmp
and
ret
adc
not
rclb
xchg
jno
add
clc
sahf
dec
test
adc
push
sub
or
pushf
cwtl
mov
cmc
xorl
and
lods
movsb
movl
insb
mov
jp,pt
jp
call
xor
mov
jns
cmpsb
cmp
imul
push
adcb
jle
inc
sti
imul
iret
out
test
mov
std
fdiv
test
and
and
mov
idivl
adc
les
lods
fldl
lods
ljmp
iret
mov
iret
xor
loop
fldenv
xorb
insb
jmp
jg
lea
xchg
mov
in
neg
divl
lahf
push
iret
in
xor
fdivrp
into
lods
mov
xchg
roll
cli
cmp
push
xor
test
mov
cmp
jo
xchg
inc
aaa
into
inc
xchg
xor
pop
push
pop
ret
js
sbb
idiv
movsl
imul
ljmp
stos
test
xor
xlat
pop
inc
jno
xchg
es
xchg
mov
push
xchg
inc
jl
xor
fisttps
pop
iret
cmpl
cs
xchg
pcmpeqd
rcr
push
push
test
sbb
sub
fdivp
jne
jb
les
dec
in
insb
or
mov
mov
pushl
jne
int
roll
sti
subb
fists
pop
jmp
fsubl
addr16
shlb
test
pop
or
mov
ss
push
iret
inc
xchg
pop
mov
sub
aam
push
sbb
xchg
dec
aad
cltd
hlt
notl
sub
jns
add
sub
in
fdiv
test
jge
shll
xor
add
pop
push
idivl
inc
mov
jle
jmp
sbb
inc
xchg
xor
inc
xor
mov
testl
inc
unpckhps
mov
add
xchg
jnp
xchg
daa
push
jb
cmpl
fstpt
lret
ret
jecxz
dec
mov
mov
mov
test
data16
popa
fisubrl
arpl
mov
sar
loopne
jb
mov
scas
push
or
sub
add
ror
testl
shlb
mov
lods
fistpll
dec
ds
ljmp
push
aaa
sub
xor
stos
out
and
adc
push
inc
push
nop
lods
mov
add
hlt
inc
lcall
int
jmp
dec
or
loop
mov
pop
sub
add
add
not
popl
xor
xor
sbb
hlt
cmp
jl
push
mov
adc
daa
push
add
sbb
pop
call
lcall
bound
stos
lret
scas
sbb
lret
mov
dec
and
sub
or
mov
cmc
pop
repz
jne
pop
jge
call
shll
push
cmpsb
xor
xor
mov
hlt
mov
fs
cmp
inc
sbb
inc
dec
lcall
lods
pop
push
int3
dec
lret
push
mov
js
out
push
fcomps
divl
imul
divl
pop
push
rclb
popa
jl
push
je
xchg
ljmp
add
bound
and
enter
stos
lds
mov
xchg
xor
ret
das
int
movsb
dec
pop
test
xor
xchg
fstps
aaa
jle
ljmp
repz
add
mov
mov
dec
pop
cltd
int
xchg
dec
add
iret
pop
rol
jne
cmp
and
lds
outsb
xor
pop
in
scas
js
cmp
sbb
ja
nop
cwtl
std
mov
rolb
sbb
movsl
sahf
mov
fwait
lds
or
jb
or
jle
push
dec
cmpsb
mov
mov
add
decb
mov
cmp
data16
insb
js
inc
push
mov
sub
pop
inc
cmc
xor
jne
bswap
add
dec
roll
cli
or
xchg
mov
push
lahf
and
or
ret
scas
add
mov
sbb
add
jle
xor
aas
mov
test
mov
add
aaa
rclb
mov
ficoml
sub
push
enter
mov
jne
and
movsl
add
and
adc
je,pt
sahf
out
arpl
nop
mov
cmp
cmp
mov
aam
fmul
addr16
and
mov
and
in
jno
js
or
sub
scas
dec
mov
push
sub
aaa
xchg
jecxz
sbb
mov
std
shlb
lods
aad
pop
cmpb
and
mov
lods
mov
mov
inc
lret
xchg
or
mov
lgs
out
aad
mov
and
sub
pop
int3
mov
inc
aaa
hlt
xor
pop
sbb
and
lods
leave
jecxz
sbb
popl
cmp
mov
adc
and
aaa
dec
inc
sub
js
jle
dec
dec
je
xor
cmp
lret
mov
ljmp
xor
xchg
shr
test
pop
mov
push
test
xor
dec
pop
imul
mov
mov
and
fadds
pusha
insb
adc
dec
pop
mov
imul
stos
dec
ret
pop
cwtl
push
add
mov
rolb
xor
pushf
std
loope
push
in
jle
mov
loopne
jns
push
inc
mov
popf
inc
loopne
cli
pop
sub
call
lock
dec
mov
ja
nop
mov
xor
mov
testl
mov
mov
rol
xchg
gs
inc
add
cmpsb
mov
xor
ja
lcall
and
cld
xchg
sub
push
je
leave
mov
dec
lods
xor
add
shll
mov
cmp
or
dec
dec
outsb
sub
jns
loopne
pop
or
sti
or
jp
rcrb
and
cltd
enter
int3
mov
rcrl
push
xchg
mov
xor
aam
cmp
ret
jge
ja
add
inc
lea
xor
sahf
mov
insb
pop
inc
inc
jg
xlat
and
pop
push
gs
xor
sbb
repz
das
pop
fiaddl
sub
movsl
aam
jbe
mov
mov
sbb
popa
loope
add
push
cmpsl
push
mov
sub
push
sbbb
js
test
cmc
mov
pop
mov
movsb
adc
mov
dec
inc
mov
imul
mov
test
mov
pop
dec
cltd
dec
stc
xchg
mov
mov
fldt
fisubrl
bound
mov
out
sbb
jne
les
cltd
aad
movsl
mov
vunpckhps
popa
je
mov
dec
test
mov
add
decb
stos
xchg
imul
out
mov
mov
lcall
es
push
push
cmp
jg
or
push
mov
gs
push
sub
xor
xchg
push
jge
cmp
push
mov
lret
adc
aaa
cmp
lahf
mov
cltd
cld
push
je
adc
ja
xchg
js
push
lods
pop
push
mov
jns
push
xor
ret
les
jp
xor
or
xchg
jecxz
mov
mov
mov
hlt
adc
inc
add
mov
mov
pop
jp
in
in
hlt
fstp
mov
cmp
xlat
jecxz
push
lret
adc
mov
fwait
insl
jne
imul
cmp
and
rcr
sti
cmp
and
insb
roll
mov
sub
aaa
stc
and
faddl
mull
sub
jns
je
or
push
outsb
cmp
out
es
and
pusha
or
sub
fcmovnu
jb
add
xor
push
pop
rcrl
stc
scas
cltd
lahf
jae
loopne
insl
cltd
xor
jge
pop
add
dec
or
push
xor
sbb
int3
loope
cli
cs
cs
and
sbb
pop
push
data16
pop
adc
pop
xchg
iret
nop
push
cmpsb
dec
sbb
dec
pop
and
out
push
adc
js
adcb
out
push
adc
movsb
loopne
pop
dec
inc
jnp
stc
dec
dec
or
mov
inc
jo
adc
outsb
lea
adc
fs
push
inc
outsl
clc
sub
dec
sarl
mov
fdivp
xchg
xchg
paddsb
testl
in
sub
dec
into
test
xchg
call
cmp
fstps
push
mov
push
scas
cmp
jmp
push
xchg
aas
xor
imul
cmp
sti
shlb
add
mov
lahf
jle
std
xor
ficompl
cltd
push
mov
push
cld
mov
jp
xlat
loop
gs
xchg
jno
push
mov
jmp
xor
cld
xor
jecxz
mov
fst
add
testb
cld
cld
lea
in
pop
cmpsl
shrl
fsubl
icebp
add
test
adc
sub
jne
hlt
aaa
jle
mov
ds
push
mov
shrb
xchg
aad
bound
lock
clc
xorl
or
inc
nop
fildl
inc
loop
imul
pushf
clc
mov
dec
subb
or
clc
dec
fistps
outsl
mov
push
movsb
jecxz
adcl
xchg
add
cs
inc
fsubl
cmp
sar
xchg
adc
hlt
jp
inc
cmc
repnz
pop
push
repz
sbb
jns
subl
fcoml
testb
or
clc
mov
jmp
push
or
nop
addb
cmp
lock
psubsw
std
ljmp
vcvtsi2sdl
xor
push
call
in
fstpl
pop
fcmovnbe
clc
sub
cmpsb
pop
cmp
mov
js
inc
sti
popa
mov
push
sbb
sub
sub
sbb
lahf
dec
push
and
jmp
hlt
subb
bound
or
pop
idivb
mov
leave
js
push
sbb
lock
push
push
sti
addr16
push
xchg
aam
push
mov
push
andl
in
test
nop
and
scas
push
test
lods
rorl
adc
dec
fbld
xchg
inc
sub
popa
in
sbbb
pushf
xor
xlat
jmp
inc
cld
mov
fcmovne
sti
rorb
aaa
dec
add
cmpsl
push
frstor
mov
or
jnp
or
shrl
inc
sbb
cmp
inc
stc
inc
lahf
mov
clc
shll
lea
mov
icebp
lds
iret
fdiv
int
imul
pop
xor
mov
dec
in
dec
cmp
sub
sub
pop
hlt
mov
je
and
test
dec
mov
mov
mov
push
fnstcw
ljmp
jb
pop
call
in
or
movsb
test
bound
jmp
jp
pop
adc
fisubrl
out
test
xor
xor
mov
adc
jp
push
lahf
shlb
lods
mov
pushf
subb
ss
fcmovu
faddl
sahf
pop
pop
out
loop
ds
add
fildl
xor
int3
sbb
fldcw
std
lods
pushf
enter
and
jge
cmp
lds
push
sub
clc
xor
jmp
rolb
dec
cmp
mov
push
or
pusha
sti
xchg
into
mov
xchg
and
lahf
icebp
cmpb
fdivrs
add
imul
adc
jg
mov
hlt
test
xor
jne
stc
scas
push
rcrb
insb
popa
test
mov
test
xor
stos
mov
out
inc
jno
mov
pop
push
mov
lret
and
repz
aad
mov
sti
out
mov
lock
xchg
fstl
push
mov
pop
adc
das
adc
pop
inc
pop
sarb
sahf
into
xchg
mov
fwait
push
cmpsb
mov
dec
mull
mov
mov
mov
xchg
cmpsl
adc
rolb
divb
loope
loopne
push
cwtl
gs
xor
aad
pop
mov
lcall
adc
or
adc
pop
mov
or
test
or
cli
cmp
and
jcxz
push
imul
jmp
add
repnz
mov
sub
scas
push
or
scas
repnz
ret
out
sub
call
jl
inc
lcall
mov
divps
mov
push
mov
lds
imul
sub
and
sbb
enter
shlb
scas
cmc
push
push
outsb
hlt
shll
mov
push
jae
loop
xchg
clc
xor
inc
pop
dec
jecxz
fstps
pop
inc
andl
enter
cmp
add
in
lods
cmpsl
sub
xlat
ja
and
lods
in
insb
in
shl
xchg
dec
faddl
imull
mov
pop
xchg
push
sub
inc
in
mov
mov
lods
mov
lret
cmc
cmpb
mov
fnsave
jnp
sub
fmul
mov
adc
inc
mov
push
sub
xor
mov
push
scas
out
sbb
pusha
push
jb
sub
adc
push
out
jp
dec
push
sub
push
loop
nop
out
mov
in
repz
xchg
cmc
cwtl
dec
lret
cmp
out
add
cmp
and
cld
inc
repnz
and
pop
aas
sbb
je
sarl
and
out
jb
and
ret
sub
jle
sub
mov
aas
sbb
roll
dec
mov
negl
xor
jp
or
pop
cmp
add
cld
movsl
iret
popa
std
and
jno
inc
dec
addr16
mov
jo
cmp
add
push
add
mov
inc
sbb
dec
xor
inc
cmpb
xor
mov
jo
test
aad
lcall
push
lea
jmp
sub
mov
push
dec
stos
in
mov
ret
out
xchg
xchg
shlb
pusha
pop
sti
xor
dec
pop
cmp
mov
mov
fdiv
and
jecxz
test
cmc
shr
cmp
xchg
cs
jno
ret
divl
ret
out
xchg
ss
int
xchg
xlat
xor
pop
mov
jmp
frstor
pop
inc
xchg
push
pusha
sub
xchg
xor
push
incl
int
fldenv
inc
xor
fwait
fs
aad
sbb
sar
scas
sarb
and
mov
mov
and
sti
stos
inc
popf
fstpl
pop
call
add
fisttps
ss
xchg
into
popa
es
inc
imul
leave
pand
sub
adc
ljmp
hlt
pop
test
add
lahf
in
xchg
pop
jmp
mov
jbe
pop
jbe
out
js
xchg
adc
fildl
jp
pop
mov
xlat
mov
xchg
mov
jae
test
andl
mov
mov
mov
pusha
cmc
mov
add
push
xchg
xor
mov
dec
jp
ret
ret
add
outsl
je
inc
mov
arpl
out
and
shrb
jae
xlat
add
sbb
dec
pop
sbb
lds
in
cmp
sub
subl
jb
xchg
mov
xchg
sahf
fsubrs
pop
ja
xor
inc
or
push
js
out
imul
gs
lahf
bound
outsb
outsl
jmp
es
cmp
xor
xlat
mov
jo
push
or
fs
loop
pop
leave
fistpll
pushl
cmc
inc
sbb
and
mov
pop
hlt
outsl
lret
mulb
aaa
imul
aas
imul
sbb
lahf
leave
fsubs
clc
sub
mov
jbe
adc
jb
pop
mov
xchg
adc
decl
adc
lods
cld
enter
cmp
shrb
clc
loope
sbbb
mov
jge
push
xlat
stos
scas
push
add
sub
adc
mov
pop
xchg
push
cs
push
mov
repnz
push
push
push
mov
sbb
cmpsl
nop
pop
nop
int
shlb
loop
addr16
mov
dec
test
jl
jmp
repnz
dec
sahf
jg
icebp
pop
sub
xchg
jae
jne
or
or
jecxz
and
push
xor
sub
or
lcall
out
pop
and
xor
in
sbb
xchg
popa
jnp
push
xor
jmp
or
scas
fists
imul
stos
mov
or
inc
and
lret
js
std
xor
sub
in
xor
int
les
mov
mov
hlt
jp
lock
push
loope
push
xchg
mov
outsl
in
fldl
push
xchg
scas
in
pop
mov
jp
mov
cwtl
cli
int
out
daa
es
adc
mov
xor
outsb
stos
adc
sbb
repz
out
pop
fldt
cmpsb
fst
rol
push
pop
outsl
sahf
xchg
cmp
mov
out
sahf
icebp
gs
in
pop
fsub
movsb
lock
insb
inc
pop
cmp
mov
les
inc
jle
sbb
mov
push
sub
dec
sbb
adc
mov
mov
scas
lods
xor
lods
test
scas
lds
es
add
push
cmc
jbe
out
jno
sahf
out
in
jp
cwtl
or
jge
add
das
lahf
sbb
cmpsb
pop
mov
mov
mov
sbb
and
sub
and
sub
out
sub
nop
dec
adc
dec
or
movsb
pop
dec
test
cmp
das
pushf
cwtl
sbb
adc
mov
divb
sbb
ret
call
into
pop
adc
repnz
mov
subb
popa
lahf
or
adc
int3
cld
pop
std
test
stos
jmp
jns
gs
fidivrl
out
stos
push
lcall
mov
sti
daa
jbe
inc
pushl
jb
inc
cmpsl
sub
sahf
jae
xor
shll
xor
popf
pop
lds
inc
adc
cltd
sbb
pop
outsl
jne
movsl
mov
js
into
inc
inc
xchg
in
enter
or
cmp
sar
fdivs
mov
dec
test
pop
or
imul
enter
or
icebp
loope
lcall
or
jecxz
mov
shr
lret
xor
xchg
pushf
inc
stc
dec
mov
or
pop
gs
add
pusha
int
jbe
fisubrl
push
into
sti
xor
insl
cmpsl
xor
lcall
std
int
aam
rcll
ja
pop
ja
xor
push
and
add
cmp
aam
dec
movl
je
call
loop
adc
mov
push
mov
movsl
inc
push
mov
in
mov
in
pop
cmp
xor
add
inc
je
stos
mov
pop
cmpsl
mov
lods
es
imull
ja
push
jne
sub
push
std
rorl
inc
jle
pop
cmp
mov
mov
or
aaa
fidivrs
inc
std
shll
cmc
jbe
je
inc
push
int3
sub
in
lea
inc
shl
cmp
jb
shrb
add
lar
in
loop
or
dec
iret
jae
sbbl
mov
xchg
inc
sbb
loopne
xor
cli
sub
cmp
gs
lahf
pushf
addb
loopne
std
pop
pop
cld
pop
outsb
pop
push
pop
fucomip
push
dec
xchg
push
lods
xchg
imull
into
testb
adcl
repz
push
rol
push
clc
repz
call
and
mov
or
jge
or
add
pop
xchg
jg
pop
jnp
stos
loop
add
stos
icebp
and
push
and
jecxz
out
and
mov
les
jae
vorpd
addr16
mov
xor
and
out
out
out
imul
imul
xchg
xor
scas
divl
out
xchg
inc
ret
aam
mov
out
or
mov
rcrb
add
jno
repnz
stc
js
psubw
jns
cli
jl
mov
stos
cmpb
xlat
loopne
lcall
iret
bound
xor
inc
stos
pop
je
xor
into
addb
push
mul
pop
dec
jbe
cwtl
sbb
inc
mov
push
ds
sahf
and
in
fmull
or
sub
jle
adc
movsl
cmp
mov
push
and
pushf
mov
and
xlat
add
add
jo
mov
sbb
sbb
icebp
mov
mov
aam
dec
insb
dec
clc
lret
clc
cmpsl
sub
add
stos
pop
sbb
shll
mov
data16
gs
mov
pop
sub
sub
xchg
test
or
insb
mov
mov
mov
mov
or
fmul
inc
adc
mov
inc
test
mov
fistpl
stc
lcall
roll
add
mov
cwtl
dec
repz
sbb
imul
lods
aas
pop
jg
jno
popf
pop
and
mov
inc
sbb
cmp
addr16
xor
out
dec
test
cmp
scas
not
mov
imul
fwait
inc
xchg
fwait
cs
sub
lret
jmp
mov
push
xchg
lods
sub
mov
mov
sub
add
jmp
xchg
fadds
out
inc
aaa
inc
mov
ljmp
add
mov
xchg
push
lea
es
xor
inc
enter
stc
and
jb
rorl
pop
cmc
mov
inc
ljmp
or
push
cmpb
lret
scas
stc
xchg
push
popl
mov
and
add
aaa
dec
es
dec
mov
add
addr16
dec
mov
lahf
stos
gs
aad
outsb
dec
out
in
xor
xchg
jle
adc
into
sub
loope
mov
in
cmpsb
adc
mov
int
rorl
push
mov
sete
cmp
mov
sti
dec
aad
xchg
push
cmp
cmp
ds
fbstp
rolb
sub
mov
mov
pop
xchg
jp
jno
data16
iret
pop
lret
iret
push
xchg
inc
cmp
dec
fs
cld
rorl
lods
test
cmp
push
cmc
imul
clc
gs
jg
add
adc
stos
movsl
ljmp
sbb
stc
rclb
or
out
repnz
hlt
cmp
push
outsl
fldl
negl
cmp
scas
sub
mov
arpl
cmp
sub
dec
inc
inc
cmp
bound
or
jns
push
push
cmp
pop
jne
xor
cltd
push
lcall
xchg
cmp
dec
or
mov
in
fbld
test
push
xchg
mov
xor
add
or
ljmp
push
dec
jle
sahf
sbb
int3
mov
stos
jnp
rcrl
mov
sbb
and
mov
xor
out
pushf
jnp
lret
jnp
xchg
jns
pop
sub
test
lret
fmull
mov
pop
imul
pop
sarl
push
and
or
in
ss
xchg
xchg
jns
and
and
jns
inc
and
inc
sbb
sub
sar
sbb
xsaves
cwtl
push
roll
in
jae
xchg
cs
outsl
cmc
test
pop
xlat
inc
push
cld
and
jle
fldt
scas
nop
cs
cmp
shrb
xchg
dec
repnz
sbb
cmpsl
negb
insb
or
enter
mov
fbstp
mov
out
gs
sub
aas
mov
jle
xchg
lock
push
mov
push
mov
push
cmp
mov
inc
ja
jg
inc
cmp
and
inc
jno
out
mov
lcall
bound
xchg
ss
dec
inc
hlt
stc
mov
in
mov
and
insb
lcall
movsl
pop
or
jg
jo
jne
inc
movsb
and
test
pop
shll
push
xchg
loop
adc
xchg
mov
add
and
cltd
in
divl
in
mov
or
lret
test
pop
cmp
test
icebp
sub
orl
sub
leave
mov
inc
rorb
xor
mov
xchg
mov
xchg
loope
xchg
jl
clc
iret
icebp
mov
jecxz
cmp
fldenv
push
push
sub
xor
pop
sbb
mov
add
push
xchg
add
sbb
aam
movsl
inc
mov
arpl
stos
pop
jnp
fsubl
clc
shlb
jae
movsb
push
adc
and
enter
mov
cltd
mov
mov
mov
pusha
lods
ret
dec
hlt
xor
jecxz
cmpsb
int3
cmpsl
imul
stc
jb
in
jb
rolb
outsl
hlt
push
fdivl
push
outsl
or
jle
in
pop
pop
pop
test
inc
in
pushf
or
xchg
into
addr16
inc
mov
sbb
es
lds
sbb
das
out
jg
je
xor
out
sbb
add
sahf
jae
inc
sahf
xor
pushf
mov
jp
jno
or
mov
sub
and
sbb
aaa
mov
sbb
sbb
vmread
and
imull
out
mov
shrl
and
xchg
inc
les
outsb
xor
jge
xchg
repz
sbb
call
or
sub
and
cmp
lods
pop
lock
repz
in
mov
cmp
aas
mov
imul
es
add
fldt
dec
stc
pushf
cwtl
ret
jecxz
bnd
and
stc
stos
into
cld
inc
push
fcmovnbe
jno
cmovle
mov
dec
or
inc
cmpsl
jg
sahf
cmp
popf
add
push
jno
movsl
mov
les
jmp
les
fldcw
int
jmp
dec
sarb
ja
jnp
es
hlt
add
bound
mov
mov
mov
mov
les
mov
or
fcmovb
dec
jb
xlat
imul
enter
ds
pop
pop
enter
in
jno
fdivr
imul
shll
add
adc
sbb
push
data16
xchg
mov
pop
xor
xor
aaa
pop
lcall
scas
push
push
mov
mov
push
call
push
out
js
js
mov
int3
pop
movsb
xchg
xrstors
ret
cmp
notb
cwtl
pop
hlt
mov
jl
dec
sbb
orb
sub
xor
push
and
sbb
shr
xor
mov
and
cmp
fiadds
insb
iret
and
cmp
cmp
mov
ss
jns
add
mov
pop
insb
loopne
add
addr16
and
push
fisubrs
daa
inc
int
sub
fsts
arpl
dec
dec
and
sub
pop
cmpsb
cmpsl
pop
cmpsl
pop
in
mov
sti
dec
in
xor
sbb
and
lahf
mov
or
inc
adc
gs
ja
mov
test
outsl
pop
rorb
pop
push
repz
mov
mov
mov
mov
std
hlt
cs
or
cmp
std
jo
xchg
std
out
mov
mov
imul
iret
sub
push
dec
sub
sahf
jo
mov
lcall
idivb
test
call
xchg
dec
out
nop
scas
mov
lock
adc
add
xlat
fstpl
xchg
leave
repnz
dec
mov
sub
jb
sub
fwait
in
mov
mov
sbb
out
fisubl
repnz
xchg
mov
out
lret
aas
loop
sub
and
pushf
pushf
stos
scas
xchg
push
pop
out
mov
dec
xchg
push
out
jmp
or
bound
lock
js
sahf
lods
movsb
and
lods
mov
jno
fnstsw
xor
pop
dec
jg
fst
push
das
ret
fstpl
lret
inc
and
xchg
sub
inc
cmp
imul
jns
lock
mov
out
or
cmc
mov
test
sti
mov
lcall
out
mov
fcoms
lock
in
push
jo
in
push
or
sarb
out
hlt
cmp
fnstsw
and
and
mov
arpl
cwtl
mov
mov
arpl
iret
mov
imul
outsb
in
leave
int
aad
sub
mov
ljmp
or
cmp
and
lahf
add
sbbl
xor
xchg
sbb
mov
fs
sub
xchg
mov
mov
lods
lcall
jnp
icebp
push
lea
mov
xchg
sbb
xchg
push
loopne
mov
sbb
int
mov
xor
call
pcmpeqw
inc
hlt
js
inc
dec
mov
pushf
mov
aam
lret
add
push
and
xor
out
xor
cmc
lock
sbb
push
es
loopne
in
shl
pop
je
push
test
movsb
adc
xor
or
fwait
inc
arpl
xor
xchg
push
push
inc
xchg
inc
outsl
std
add
addr16
pop
insl
mov
cvtpi2ps
mov
or
ja
push
test
daa
cmp
push
test
arpl
ret
into
sbb
fstl
pushf
adc
fldt
cmc
adc
add
adc
mov
testb
lods
or
test
sbb
inc
add
push
add
add
jmp
lea
int3
and
sti
sbb
leave
dec
xchg
pop
adc
lret
dec
call
xor
push
push
js
push
sbb
xor
xor
nop
mov
in
jne
jne
xchg
jb
popf
in
sti
pop
sahf
mov
pop
inc
movsb
data16
popa
cmp
bound
fdivs
add
mov
jb
in
adc
arpl
add
test
and
xchg
adc
jno
and
popa
jmp
mov
mov
and
mov
or
fcmovb
jns
and
pop
inc
mov
adc
in
jp
jmp
repnz
and
xor
add
test
xchg
cmp
fisttpl
sub
mov
sbb
std
jb
sub
or
aam
int3
adc
jmp
xor
stos
mov
mov
or
push
pop
cli
push
cmc
and
lcall
add
cmp
push
ret
jecxz
test
cmpsb
adc
and
ffreep
xlat
dec
pop
movsl
cmp
iret
sbb
adc
lods
push
adc
xchg
aad
mov
lds
loopne
jmp
pop
jns
push
aas
xor
or
mov
pop
cli
jmp
inc
adc
mov
arpl
int3
fistpll
or
jne
lds
mov
insb
adc
rorb
subb
ds
loopne
and
lds
scas
ret
sbbb
inc
stc
popf
sbb
sbb
mov
rcrl
sbb
dec
push
mov
frstor
or
pop
test
adcb
mov
js
mov
inc
adc
and
sbb
in
leave
pop
adc
mov
push
rcrb
push
mov
ja
dec
mov
mov
xor
sti
insl
inc
paddw
shrl
repnz
mov
cmp
mov
pop
push
push
push
adc
pusha
arpl
mov
sbb
jo
mov
push
add
add
jno
mov
push
xor
mov
dec
fnstcw
mov
rcll
rcrb
ljmp
rcrl
xchg
outsl
mov
or
fisttpl
jno
dec
outsl
mov
xor
hlt
inc
insb
push
insl
dec
dec
fnstenv
fimull
add
xor
xor
push
cli
out
push
stc
jge
sub
outsl
sahf
lods
pop
hlt
push
push
es
jns
mov
cwtl
xor
dec
insl
enter
fdivs
dec
iret
test
mov
cmp
int
sbb
imulb
into
test
xchg
lret
test
fnstcw
filds
jmp
cmpsl
mov
pop
out
xor
int
mov
shll
add
lret
sub
mov
push
xchg
mov
mov
adc
push
idiv
fwait
pop
in
dec
shrl
xor
divl
xchg
cmp
push
mov
mov
mov
and
insl
pop
pop
dec
pop
and
mov
adc
mov
filds
dec
cwtl
insl
test
iret
xor
insb
out
or
mov
paddusb
xor
rorb
imul
pop
dec
xchg
jae
push
sub
pop
sahf
sbb
into
inc
fisttpll
pop
pop
enter
roll
push
fcompl
mov
test
pop
imul
lahf
mov
push
inc
push
fcomp
sub
pop
testb
daa
jmp
lods
sbb
or
inc
movsl
test
xchg
inc
and
int3
repnz
and
fwait
xor
int
add
add
mov
inc
mov
test
test
lds
nop
lds
and
xor
xor
aam
push
shrl
xchg
lcall
pushf
add
ror
rcrl
adc
pushf
mov
pop
into
mov
adc
jle
xchg
cmc
int
inc
lods
adc
cmp
jns
pop
fwait
arpl
repnz
jbe
xlat
sahf
nop
sbb
lds
inc
mov
ljmp
es
dec
pop
jnp
adc
or
test
loop
movsb
sub
in
inc
repnz
in
push
xchg
lret
inc
dec
hlt
daa
dec
xchg
sub
addr16
incl
and
test
in
dec
test
mov
adc
shll
mov
jg
rclb
push
mov
add
mov
mov
sub
jmp
sub
cmp
test
movsb
add
loopne
pusha
adc
cs
aam
push
xor
mov
leave
push
and
push
icebp
or
popf
or
jae
pop
movsl
cmpsl
cli
bound
jl
imul
sbb
sbb
lcall
jbe
mov
xchg
lcall
out
in
mov
pop
mov
mov
add
fs
ret
pusha
aad
xchg
mov
jb
or
xlat
js
je
stos
pop
and
jae
fldt
add
mov
in
aas
mov
outsb
addr16
xchg
sbbl
xor
xor
mov
sbb
mov
cmpb
rcll
mov
add
cmp
xchg
and
sub
or
aam
fistps
mov
int3
adc
pop
sbbl
subl
mov
hlt
inc
in
push
sub
mov
adc
mov
dec
test
sub
rep
outsb
repz
jae
pop
inc
add
es
and
mov
push
mov
jb
notb
out
out
je
dec
xchg
insl
jo
mov
cmp
add
jmp
jnp
sub
icebp
insl
jge
repnz
jnp
xor
xchg
out
dec
cmp
mov
mov
sbb
and
mov
fwait
dec
rolb
mov
sub
dec
out
push
xor
in
jb
cmp
rolb
ret
lock
or
pop
out
inc
fdivp
jp
lods
sbb
sub
in
das
add
xor
outsb
jg
repnz
icebp
insl
icebp
cmpsl
push
xor
scas
xchg
mov
sub
xor
or
sbb
cs
scas
adc
popf
scas
add
inc
popa
cwtl
jns
xlat
xchg
sbb
outsb
lcall
adc
adc
or
sub
cmp
inc
fisttpll
repz
xchg
xor
mov
out
cltd
inc
or
inc
outsl
negl
push
inc
push
pop
cld
or
rclb
ds
sub
cmp
inc
pop
push
mov
inc
nop
and
mov
movsb
imul
aas
mov
lcall
in
out
nop
jns
outsb
leave
cmp
cs
cmp
test
sbb
js
sub
mov
jns
inc
sbb
cmpsl
sbb
mov
inc
and
fdivrs
xchg
jp
andb
mov
aad
das
add
popa
jmp
xchg
insb
test
shll
xchg
imul
in
fstps
das
dec
mov
cmp
pop
in
sub
or
or
rorl
sarb
imul
mov
xchg
adc
mov
cld
mov
jnp
inc
je
push
xlat
and
js
sub
jecxz
scas
dec
mov
cmc
mov
mov
outsb
mov
xchg
cmc
mov
cmp
popl
sbb
add
adc
dec
mov
jmp
sahf
pop
scas
add
pop
xor
je
adc
in
aaa
out
in
mov
sbb
out
js
adc
hlt
and
stos
jmp
sti
test
add
insl
xchg
cmp
dec
decb
mov
or
es
je
jo
in
jge
sahf
ds
adc
cmp
scas
pop
jae
cmp
out
cmp
jp
cld
loopne
daa
sbb
fisubrs
sub
or
inc
add
jbe
cmp
jne
lds
jl
xchg
inc
add
mov
rcr
out
pushl
stos
pop
in
ss
mull
pusha
ror
lcall
adc
incl
mov
mov
push
loop
scas
mov
adcl
loop
or
and
rorl
push
stos
pop
add
pop
scas
mov
jl
lock
lea
test
inc
jle
mov
pop
imul
dec
cmp
cmp
xlat
cmp
or
adc
pop
scas
sub
mov
aaa
mov
mov
mov
sbb
mov
push
sub
sub
imul
mov
inc
imul
mov
movaps
loopne
or
mov
gs
dec
adc
shrb
xor
dec
mov
jp
mov
lcall
into
movsl
ss
mov
push
dec
sahf
adc
xchg
cltd
adc
dec
sahf
sti
sbb
add
pushf
and
cltd
fstl
sysexit
pop
arpl
pop
into
pop
arpl
cmp
or
mov
lods
jae
out
shll
movsl
arpl
dec
outsb
iret
sarl
leave
add
mov
repz
shlb
out
mov
cmp
cli
pop
fisttpl
push
arpl
xchg
insl
loope
xor
movsb
fldt
xchg
and
cld
and
in
popf
leave
out
loop
mov
or
or
int
aaa
mov
xor
dec
aad
lahf
push
cmp
icebp
xor
inc
fdivs
mov
add
xchg
pushf
repnz
cli
dec
push
pop
dec
jg
gs
dec
out
aam
or
lock
sbb
push
jle
test
mov
dec
add
add
in
aad
sub
out
xchg
sarb
and
test
ret
xchg
cmp
mov
mov
pop
sub
mov
pop
inc
les
pop
mov
dec
xor
roll
movsl
pop
pop
sbb
fnstcw
adc
repz
mov
mov
jg
aaa
xchg
out
insb
dec
and
push
and
into
out
push
clc
pop
or
rcr
in
in
movsl
jecxz
les
and
fcmovnb
push
cmp
test
jbe
cmpsb
mov
enter
scas
mov
or
shlb
push
inc
cmp
xor
addr16
fs
sub
sti
mov
xchg
shrl
jns
cli
popf
xchg
adc
popa
sar
ss
cmp
dec
in
iret
pop
pop
xchg
xor
mov
movsl
push
push
pop
movsl
dec
shr
out
sub
mov
cs
mov
and
dec
adcl
and
arpl
mov
out
mov
dec
xchg
fdivrl
and
mov
xor
mov
repnz
or
inc
insl
xchg
aad
lret
or
stos
out
fcmove
rcr
leave
jle
jns
mov
push
xor
aam
push
jae
cli
cmpsl
rcll
mov
test
cmp
push
popf
loop
cld
mov
leave
mov
and
shrb
lods
and
lcall
adc
sbb
or
rorb
mov
cmp
les
sbb
push
push
jnp
scas
xlat
rorl
ds
rorb
mov
ret
xchg
cmpsb
mov
daa
mov
cmp
cmp
xchg
sbb
pop
lcall
mov
int3
xor
push
aas
mov
sbb
sbb
xabort
push
sbb
add
mov
mov
pop
push
shl
push
adc
das
and
ja
dec
ja
mov
push
pusha
into
cmp
push
sub
mov
clc
push
cmp
lods
out
xchg
shrb
pop
addl
lods
adc
popf
xor
pop
popf
push
mov
andl
incb
or
andl
dec
adc
sbb
xor
adc
adc
adc
mov
cld
jmp
in
aaa
outsb
add
xor
inc
mov
sbb
repz
or
into
clc
xchg
adc
or
mov
lahf
movsl
in
nop
pop
jae
cmp
xchg
imul
pop
int3
ja
cwtl
scas
inc
movb
fs
cmp
dec
push
lds
outsl
and
jb
stos
scas
pop
mov
insl
cld
xchg
mov
mov
sbb
xor
or
popf
out
fisttps
xor
js
push
mov
je
data16
xchg
or
scas
pushw
sub
inc
cmp
mov
or
popf
movsl
jnp
xlat
out
sbb
insb
mov
stos
and
aas
mov
cld
xor
mov
push
aad
imul
push
mov
pop
or
pop
cwtl
aas
hlt
insl
sub
int
cwtl
dec
pop
addl
sub
mov
push
jae
dec
cltd
adc
out
cs
xchg
mov
shll
add
out
jbe
inc
mov
addl
imul
xor
insl
add
shll
or
mov
xor
xor
mov
mov
lret
cmp
nop
add
call
sbb
notb
push
mov
out
sbb
lock
or
rcl
xchg
jb
cmp
cs
xchg
dec
xchg
shl
push
fs
xchg
outsb
add
imul
sub
dec
push
xor
adc
add
xchg
push
or
es
mov
dec
fcmovnb
sti
fistps
das
shrb
movsl
cmp
ret
test
mov
xchg
jns
inc
push
ljmp
icebp
xor
enter
jnp
jp
rorl
lret
sti
or
aad
test
mov
lods
aas
jl
js
add
inc
mov
add
sub
test
lods
jb
push
mov
cltd
mov
inc
shll
inc
inc
addr16
orl
shll
pop
xchg
insl
emms
push
fistl
dec
call
mov
or
aas
idivb
mov
push
enter
je
push
pop
sbb
xor
rolb
sarb
iret
daa
notb
jge
dec
rorl
and
cmp
das
scas
or
les
das
rep
jo
or
push
jns
adc
into
out
fdivrs
sbbl
jnp
push
cmp
xchg
jne
pop
filds
sbb
insb
xor
leave
mov
and
mov
inc
dec
cmpsb
popf
adc
inc
add
mov
adc
dec
outsb
test
xchg
divl
scas
adc
aas
rcr
xchg
mov
stos
jns
lcall
sub
ja
or
int
dec
sahf
imul
dec
xchg
inc
fmuls
fldenv
mov
int3
test
or
sub
fmulp
lcall
aaa
pcmpgtb
mov
cmc
sub
mov
rorl
scas
pop
jle
mov
shlb
test
mov
aam
aaa
outsb
mov
dec
add
xchg
les
aam
dec
adc
scas
rolb
mov
loopne
shlb
jnp
jge
cmpsb
aas
inc
les
xor
fsubrl
repnz
dec
out
cmpsb
sti
mov
push
push
dec
xor
and
into
es
xor
inc
ss
ja
stos
mov
dec
dec
mov
inc
adc
mov
inc
out
movntps
xor
sub
mov
outsb
repnz
ljmp
sub
push
int
mov
xor
lret
adc
cwtd
adc
xor
sahf
inc
mov
pop
jl
aaa
xchg
movsl
or
push
mov
cmp
repz
adc
xchg
fists
or
lret
pop
push
sahf
mov
int
dec
faddl
fistps
dec
cs
in
shrb
lods
cltd
jle
cli
aaa
into
xor
leave
in
sar
mov
or
jno
popa
inc
fldenv
lret
shl
and
test
xor
and
xor
mov
jae
mov
sub
dec
inc
push
mov
fnstcw
jmp
sbb
imul
xchg
std
fisttpl
cmp
adc
pop
pop
or
adc
ret
push
jbe
mov
push
lcall
mov
popf
aas
dec
sti
call
das
fbstp
jnp
arpl
ret
lods
roll
inc
addl
mov
pop
pop
mov
ret
lods
insb
xor
mov
leave
and
and
xor
jno
popa
dec
and
lret
call
rcl
stos
and
loope
mov
cmp
pop
pop
sub
dec
addl
fwait
pop
adc
arpl
cmpsb
adc
xchg
xchg
xor
cmp
mov
push
or
hlt
shlb
aas
mov
adc
mov
adc
xchg
xor
out
push
jmp
lods
mov
xchg
je
dec
dec
push
pop
jle
mov
jecxz
test
lret
mov
fld
mov
and
iret
push
dec
xor
cmpsl
cmp
jo
mov
fldl
inc
test
rcrl
xchg
cmp
notl
sahf
lods
lcall
mov
inc
pop
mov
add
pop
xor
pusha
xchg
or
gs
push
fs
ja
push
fisttpl
aaa
xor
sti
popf
xorl
into
scas
push
add
push
std
stos
mov
into
jns
push
pop
pop
lds
mov
mov
addl
mov
cmp
icebp
mov
iret
add
ret
inc
aaa
repz
mov
test
dec
das
mov
mov
add
or
mov
mov
cmp
xchg
or
push
fwait
out
inc
sbb
mov
add
and
pop
movsb
bound
repz
cmp
adc
push
mov
repnz
xchg
xor
movb
pop
sti
push
cmp
push
into
shlb
cmp
mov
pop
sub
jnp
cltd
or
jb
mov
lock
insb
loopne
mov
mov
dec
in
xchg
push
leave
arpl
inc
add
icebp
vpsubq
lea
push
xor
pop
dec
popf
dec
push
sub
pop
call
mov
pop
ljmp
and
mov
push
push
adc
ds
inc
arpl
cmpsb
jb
pop
and
mov
sub
rcl
loope
idivb
nopl
imul
jge
repnz
lea
sub
les
sbb
pop
cmc
cmp
sahf
test
and
roll
dec
push
dec
dec
mov
das
loope
dec
iret
jne
rolb
mov
popf
mov
ljmp
repnz
push
add
lret
mov
in
int
test
mov
les
ljmp
ss
jecxz
pusha
fisubrl
lahf
jge
ja
cmp
cmp
lcall
pop
push
xchg
into
stc
pop
enter
ror
stos
cltd
stos
fisubrl
dec
or
mov
or
fwait
movsbl
push
jno
cmpsb
and
cmpsl
mov
sbb
sub
loop
aas
push
nop
outsl
in
cmc
out
sub
xchg
push
ret
mov
jno
xchg
jo
jb
pop
dec
push
ja
movsl
cli
lods
mov
xchg
test
ret
test
mov
pushf
scas
mov
neg
sbb
adc
adc
repnz
pop
ret
popf
xchg
test
ds
and
fwait
das
lods
leave
jno
pop
stos
jne
xchg
or
enter
push
pop
pop
fiaddl
cmp
fdiv
cmp
jae
test
testl
or
cmpsb
lahf
lods
fsubs
insb
jecxz
ret
out
popw
outsb
mov
xorl
leave
sti
mov
pop
xor
mov
or
rcrl
jb
and
xchg
xor
jmp
ret
not
jbe
test
cmp
xchg
imul
pop
cli
sbb
ret
jne
stc
mov
mov
fiadds
hlt
jmp
jne
ret
lds
repz
jmp
lds
stos
arpl
adc
mov
pusha
js
xor
mov
xchg
and
repnz
add
sbb
push
mov
fcoml
je
cmpsb
hlt
sarb
test
mov
hlt
shrd
scas
adc
mov
rcll
xor
bound
enter
inc
push
lea
push
out
mov
ljmp
sbb
push
daa
add
inc
std
paddw
pop
and
rol
sti
pop
adc
push
pop
pop
inc
je
jg
enter
jp
cmp
or
les
dec
int3
arpl
adc
out
cli
and
pop
jmp
jle
mov
jle
add
cmc
push
push
jo
and
cld
xor
in
sub
mov
sbb
xor
xchg
add
js
cmp
daa
push
cmp
in
cmp
and
int3
hlt
test
add
sahf
jl
push
subl
scas
imul
and
mov
pop
jle
lcall
fucom
movd
cmpsl
out
stos
call
jno
mov
xchg
jg
mov
xchg
rcll
adc
mov
mov
out
cmpsb
jecxz
push
jo
mov
push
dec
lock
cli
xor
push
stc
dec
shlw
ret
js
or
repz
fdivr
jle
add
js
pop
sbb
cltd
repz
add
stos
hlt
adc
loop
pusha
mov
scas
jge
lods
es
inc
push
push
jle
pop
lods
xchg
stc
mov
icebp
testb
sub
or
and
lea
outsl
cltd
add
adc
pop
cmc
fisubrs
xchg
jns
dec
cmp
lret
adc
or
jns
outsl
xor
jno
repnz
lock
xor
cld
lahf
and
push
or
and
shll
jle
add
popa
jb
sbb
aam
lret
push
mov
mov
iret
jae
jecxz
maxps
ja
es
jae
in
mov
xor
lret
test
stos
cmp
mov
into
inc
sub
xor
and
shl
stos
cmc
jle
adc
cs
or
in
jo
push
xchg
ret
adc
cmp
pop
dec
jne
fldenv
pop
cmpl
jle
fs
pop
jnp
sbb
adc
sbb
fcoml
clc
mov
es
cmpsb
adc
out
jmp
sahf
popf
dec
pushl
ror
or
and
and
stos
pop
xchg
jl
cmp
sub
inc
imul
push
test
lahf
xchg
push
add
nop
and
inc
out
xor
cmp
jns
inc
jp
addl
cli
jl
lock
sti
aas
mov
adc
mov
fmul
int
adcl
inc
into
gs
ds
cmp
sahf
lods
sub
insb
push
sbb
push
dec
mov
mov
pushf
jge
jns
push
adc
dec
in
aas
jp
mov
cmp
jp
cltd
sahf
loopne
fmull
xchg
mov
and
mov
mov
adc
dec
icebp
mov
cltd
cmp
int
popa
mov
push
jle
aam
xchg
sbb
test
pop
inc
pop
ret
pop
aad
popa
int3
jb
jb
push
movsl
ss
js
inc
add
push
daa
xor
adc
fadd
sub
in
sti
nop
aam
pop
repz
int
loope
pop
or
cmp
lds
jge
add
mov
fdivs
xor
lret
lahf
cltd
mov
mov
jno
pop
pop
ss
sub
push
xlat
mov
popa
adc
jecxz
xchg
fwait
mov
fidivl
xor
test
sbb
sti
push
hlt
xchg
mov
pop
sbb
sti
dec
jb
ljmp
in
or
ret
test
pop
pop
fisubrs
pop
in
push
pop
xchg
hlt
pop
or
jge
jae
xchg
dec
sbb
mov
xchg
inc
sahf
out
insb
dec
dec
divl
push
loope
add
out
mov
push
push
cmc
mov
jbe
add
and
lcall
sti
aad
flds
test
pop
divb
subb
mov
dec
scas
enter
pop
negl
sub
sub
stos
out
push
mov
or
mov
jbe
fs
ror
mov
imul
std
pushf
ret
xchg
xchg
dec
push
push
aaa
pop
cmp
leave
int
add
mov
subl
cmpsb
aas
adc
cmpsl
lahf
and
incl
decb
fs
pusha
cltd
sti
loope
sbb
std
loopne
rorb
inc
stos
mov
mov
push
das
push
loope
repz
xor
out
addr16
iret
ljmp
ret
mov
sbb
sub
or
les
ljmp
xchg
into
arpl
push
pop
push
cltd
lods
push
push
mov
mov
jmp
xor
fadd
and
cwtl
adc
repnz
mov
mov
psubsb
push
bound
inc
xchg
lds
dec
into
ss
aad
rclb
stc
mov
out
xor
adc
dec
shl
int3
dec
add
sarl
push
mov
push
ds
mov
jb
adc
pop
arpl
rolb
jne
mov
or
cmpsl
inc
cld
push
fildll
inc
xchg
scas
dec
cmp
mov
test
inc
add
sub
fmulp
inc
jbe
ss
imul
lea
outsb
clc
jp
sub
lcall
jo
cmp
mov
dec
or
arpl
hlt
sub
ret
out
outsb
or
mov
push
adc
shll
fimull
dec
pop
inc
rolb
mov
adc
mov
inc
test
sub
xchg
xchg
push
in
fwait
test
sbb
jl
out
push
push
mull
cltd
inc
bnd
cli
pop
sub
pushf
and
mov
rcrb
dec
add
xchg
adc
push
fldcw
pop
les
js
jle
movsb
push
aad
sub
loope
clc
ss
ljmp
cmpsl
jae
arpl
pop
hlt
std
push
or
pusha
cmpsl
inc
leave
and
leave
fwait
add
mov
xor
cltd
push
ret
bound
mov
adc
test
ret
pop
rcll
pop
xor
bnd
iret
mov
lea
xor
dec
pop
rcrb
insl
jg
into
fsubp
lahf
cltd
bound
enter
fistps
add
push
jo
dec
cmp
fwait
out
jmp
outsb
inc
push
xchg
jo
pop
jnp
movsb
pop
xchg
xor
jmp
cld
inc
mov
push
lock
jg
push
and
rcrl
js
sbb
mov
stc
fnstenv
std
sub
jge
stos
xchg
lods
mov
mov
rol
in
inc
das
gs
arpl
orl
sub
inc
pop
inc
adc
jne
in
sub
dec
enter
mov
lcall
push
testl
mov
lret
lock
mov
test
sbb
stos
es
or
repz
inc
xchg
in
or
shll
mov
call
jo
stos
and
lods
add
inc
test
mov
adc
or
test
rcrl
inc
shrb
mov
repz
cmp
or
cmpsb
push
dec
push
xor
jne
mov
dec
movsb
fucom
push
mov
mov
scas
mov
and
push
sub
shrl
sub
ror
int
sbb
fisubrs
xchg
icebp
rcr
inc
movsb
push
movsl
push
enter
dec
shrl
sti
out
sbb
jne
mov
scas
pop
sbb
jmp
mov
cmp
fmull
sub
xchg
insl
sti
xchg
and
pop
sub
outsb
dec
ljmp
add
push
push
fsubs
pop
pushf
test
mov
shll
je
or
xchg
xchg
sub
cmp
dec
jb
sub
fisttpll
pop
sbbl
fstpl
ret
cld
cs
and
push
addr16
mov
xor
add
xor
xor
popa
push
xchg
test
call
mov
cmp
cmp
shlb
pop
inc
xchg
std
mov
pop
cmpsb
int
shrl
sti
insb
scas
ljmp
mov
ret
dec
rol
jno
test
inc
xor
jge
add
push
xchg
sbb
jecxz
in
aas
dec
adc
push
mov
testb
inc
push
or
repz
mov
in
push
xchg
ds
adc
nop
lcall
sbbl
cltd
mov
cltd
inc
mov
or
mov
insb
inc
fmuls
or
out
lods
mov
mov
push
in
lea
leave
xchg
iret
insl
out
sahf
adc
or
cli
into
faddl
adc
jle
inc
repz
sbb
fwait
js
mov
enter
ja
and
adc
xor
pop
jo
cli
add
test
sub
shll
push
mov
xchg
out
mov
dec
in
xorl
or
js
or
cmc
stos
test
test
adc
filds
pop
mov
sbb
sub
adc
dec
daa
dec
mov
stc
lock
and
repnz
stc
movsl
and
push
xchg
sbb
dec
outsl
out
inc
pusha
hlt
popf
data16
adc
cmp
inc
add
adc
daa
loopne
in
dec
es
add
fnstcw
pop
rol
out
jecxz
jge
push
or
into
cmpsl
pop
mov
int3
adc
out
ficomps
or
xchg
dec
ds
ficoms
cltd
gs
sub
push
adc
test
stc
xor
push
add
loop
jo
xchg
jle
and
mov
clc
adc
push
jp
dec
pop
lea
mov
test
aas
sbb
bound
pusha
cmp
pop
inc
call
inc
cmpb
jecxz
vpshuflw
leave
sbb
xorw
adc
xor
dec
test
dec
inc
mov
int
cvtps2pi
push
mov
call
mov
aad
mov
fstps
das
aad
outsb
adc
movsl
fsubl
stos
or
int3
xchg
lods
xchg
xor
lods
inc
sbb
xchg
sar
leave
cs
xchg
add
stos
rcrb
inc
insl
dec
dec
push
fisttpll
jge
sub
loopne
les
inc
xchg
in
xchg
shrb
pop
and
mov
bnd
push
cmp
leave
push
mov
xchg
mov
inc
addb
lods
lret
sbb
pop
mov
lret
sbb
push
ja
jg
mov
popf
add
sbb
push
and
adc
add
imull
ficoml
mov
xor
mov
in
loop
jae
sbb
nop
je
add
inc
daa
rcll
xorb
movsb
pusha
add
cli
leave
scas
cmp
xor
adc
sub
jo
imul
aad
fwait
jp
sub
js
pushf
fnstsw
xor
das
mov
in
cmp
jno
int
push
cmc
arpl
adc
pop
add
push
fwait
mov
pop
lock
dec
inc
stos
mov
rol
cmp
andb
repnz
shrb
cltd
movsb
insl
dec
out
xchg
xor
and
addr16
test
push
dec
sahf
nop
or
or
bound
aam
add
inc
dec
jle
inc
loop
lcall
mov
scas
pop
cmp
fisttpll
dec
xlat
mov
pusha
mov
leavew
enter
daa
add
mov
pop
mov
repz
fdivrl
push
push
mov
sbb
dec
cmp
jl
mov
or
das
in
subl
pop
and
mov
mov
push
pop
add
fstl
sub
inc
shlb
scas
pop
pushf
mov
mov
mov
push
jae
js
cmpsl
loopne
aad
popf
lods
loop
lods
sub
xchg
iret
adc
aam
pop
fcompl
fmuls
cmc
push
pusha
or
shll
pop
sbb
lret
adc
push
pop
mov
aam
out
sub
cmc
addb
sub
mov
fmuls
aam
mov
inc
jl
xchg
bound
lds
pop
in
stos
ljmp
cs
das
xlat
arpl
cmp
dec
loopne
mov
sbb
sbb
cwtl
lret
lods
xchg
mov
lcall
arpl
hlt
sbb
scas
xchg
push
or
fldcw
repnz
cmc
xor
out
mov
inc
mov
or
mov
cld
mov
add
scas
insb
xor
push
jmp
and
nop
dec
sub
jg
mov
xor
lret
adc
mov
mov
cmpsb
xlat
lock
lret
mov
pop
and
pop
push
mov
jmp
xchg
test
in
cwtl
push
jg
mov
adc
inc
jp
cmp
mov
xchg
add
mov
jg
mov
adc
rolb
rol
rcll
iret
cmp
lea
jp
jg
pop
iret
xchg
int
xchg
mov
iret
inc
mov
enter
in
pop
pop
pop
cmp
lock
das
icebp
ret
jns
sarb
mov
jb
jmp
cmc
or
fnstsw
push
xchg
inc
shr
xchg
call
cmp
scas
mov
mov
sbb
dec
jae
int
xchg
dec
aad
adc
popa
in
and
jnp
stc
and
hlt
xor
cmpsb
or
fidivrl
frstor
test
icebp
add
inc
nop
sub
dec
xchg
movsb
leave
pop
push
and
pop
fisubrs
mov
lcall
inc
xor
and
dec
mov
pop
mov
or
stc
out
jmp
fwait
pop
fdivl
dec
dec
hlt
emms
icebp
imul
push
xor
rorl
add
in
mov
shl
clc
cld
movsb
int3
ret
and
je
ror
pop
insb
imul
sub
push
sub
ds
push
cmp
rcr
in
xchg
dec
movsb
repz
cs
push
insl
shlb
popf
repz
lock
push
add
sbb
bound
dec
xor
mov
sub
cmp
idivl
popf
out
fucomp
xor
adc
add
in
pop
stos
cltd
sbb
xor
mov
sbb
sbb
lods
movsb
call
mov
jae
fisttpl
xor
xchg
xchg
hlt
jo
mov
in
adc
push
ljmp
push
and
aad
or
aam
xor
pop
add
pop
xor
mov
insb
in
mov
inc
shll
loope
add
or
and
mov
jl,pn
fs
adc
divl
dec
adc
xchg
test
rcr
imul
add
es
sub
data16
adc
and
jns
addb
mov
aaa
repnz
jge
ljmp
scas
add
sub
test
sbb
cmp
dec
add
adc
shlb
add
add
test
test
gs
in
jnp
stos
mov
jle
movlps
mov
inc
xor
push
inc
mov
xchg
push
in
int3
cmpsl
fidivs
popf
sahf
sbb
jnp
je
sub
xor
sbbl
sbb
addb
fwait
pushf
cwtl
or
or
adc
scas
cltd
out
adc
in
jmp
push
cs
adc
lret
sbb
add
or
call
lea
inc
scas
dec
or
in
jecxz
and
arpl
xor
shll
lret
cltd
sub
sub
jbe
dec
lret
ds
int
mov
add
cmp
outsb
es
inc
xchg
jge
mov
inc
mov
dec
fwait
sbb
push
adc
lock
lods
mov
shll
gs
dec
sbb
mov
sbb
add
lahf
add
fcoml
lds
test
es
andb
or
push
loopne
test
into
and
inc
sahf
and
out
add
test
into
adc
dec
pusha
mov
aad
das
out
pop
xor
pop
leave
xchg
shrb
cld
clc
movsl
iret
outsb
xchg
sub
repz
mov
push
test
lds
inc
mov
adc
ja
jge
aas
mov
imul
in
in
in
pop
jbe
push
stos
xchg
pop
cmpsb
cwtl
lea
sbb
sahf
mov
push
cmp
mov
and
or
jno
movsb
shlb
sbb
cmp
jne
int3
inc
adc
adc
std
cli
stc
mov
xor
pop
aas
div
pop
aam
pop
push
mov
xor
lds
sbb
pop
bound
mov
popl
adc
es
shrl
mov
in
fidivs
jnp
jmp
jae
in
or
and
jge
mov
pop
cld
mov
cmp
push
iret
push
jne
adc
adc
rclb
mov
testl
pop
jle
pop
push
mov
cmp
pop
sahf
test
outsl
dec
ja
push
sbb
int
in
sbb
sbb
pop
lcall
add
push
pop
mov
stos
scas
push
dec
ret
cltd
and
cmp
les
aam
fdivl
movsb
inc
pop
jmp
ja
out
mov
cmp
jmp
push
adc
call
push
fimuls
insl
ss
xchg
inc
jnp
test
inc
aas
add
jmp
lds
xchg
fistpll
xchg
and
cmpsl
test
fsubrp
dec
aad
and
nop
or
outsb
testb
adc
dec
fsts
inc
sub
mov
incb
jp
mov
fdivs
push
hlt
inc
dec
jg
push
pop
or
jne
cmp
mov
adc
mov
mov
test
ret
cmp
mov
loop
popa
push
shll
popf
and
lock
loopne
mov
dec
icebp
test
inc
add
cmpsl
daa
dec
outsb
ljmp
jbe
mov
inc
std
scas
xchg
add
addr16
cmpsb
xchg
test
shrb
xor
aam
and
mov
jle
mov
aad
mov
lods
pop
rcrl
call
aam
ds
inc
repnz
mov
mov
rcll
cmp
idiv
add
dec
cmp
ret
jle
frstor
in
pop
aad
push
mov
sti
cmp
pusha
orl
mov
enter
repnz
fwait
mov
or
dec
add
daa
in
divl
popf
jbe
sub
pop
pop
fsubl
xlat
mov
and
mov
or
jbe
add
out
mov
jle
xor
and
dec
loopne
push
mov
inc
inc
stos
iret
adc
mov
divb
or
cmpsb
inc
or
dec
mov
pushf
pop
jnp
push
mov
mov
arpl
adc
and
mov
pop
inc
dec
mov
dec
and
xlat
cmpsb
lods
sub
outsb
stos
xor
lock
pop
mov
adc
and
dec
sbb
mov
mov
xchg
test
inc
pushf
insl
mov
movsl
mov
or
shlb
mov
pop
dec
push
mov
out
mov
push
aam
cmpsl
cld
xor
push
fnstcw
addb
xchg
push
add
mov
push
ret
fnstenv
in
lahf
mov
mov
mov
push
lock
test
and
imul
stos
dec
in
xchg
sub
fadds
inc
sub
mov
mov
daa
insb
insl
xchg
cs
imul
jge
cmp
fdivl
pop
xchg
popa
outsl
and
pop
add
sbb
mov
lret
in
and
xor
add
sti
sub
outsl
cmp
sbb
push
or
gs
sub
and
mov
mov
mov
inc
test
adc
loope
sub
xchg
aas
add
xchg
js
dec
push
cmp
xchg
mov
fwait
xor
fsubrs
cltd
in
daa
jnp
adc
fcomp
mov
mov
movsb
enter
fs
imul
add
daa
daa
push
add
movsl
dec
mov
add
push
xor
pop
rorl
pop
roll
or
loope
push
dec
ficoms
inc
std
dec
pop
push
adc
les
xchg
out
xor
and
in
movsb
or
out
xchg
popa
xchg
insl
cld
mov
fidivrs
inc
les
insb
inc
rclb
jle
xchg
outsb
nop
pop
and
call
sub
popf
icebp
mov
sbb
ret
xor
fldcw
dec
inc
lock
mov
dec
daa
addl
std
test
add
sub
adcl
orb
test
inc
shl
add
popf
mov
mov
divl
jl
subb
cltd
and
insl
xchg
ljmp
iret
jmp
fisttps
loopne
aam
xchg
icebp
add
xor
sbb
jp
inc
sbb
pop
dec
lods
cmpsb
aam
adc
cmpsl
jl
pusha
inc
das
in
sub
dec
scas
pushf
sbbb
pop
roll
pop
shlb
cld
jae
fcoms
mov
sub
mov
lret
jno
or
mov
aad
jecxz
xlat
adc
insl
outsl
aad
push
mov
xorb
fcoms
sbb
movsl
mov
cmp
cwtl
cmp
in
aad
movsb
jno
ja
adc
xlat
sarb
mov
movsb
jl
pop
xchg
outsb
mov
int3
cmp
xor
repz
das
pop
fwait
push
mov
inc
enter
push
aam
xchg
aas
mov
in
stos
lods
jns
fsts
rcrb
sub
jg
repz
mov
fxch
loop
lret
rcrl
push
out
fisubl
mov
insb
fnstenv
cs
notl
pop
xchg
xlat
sbb
mov
sbb
xchg
push
das
test
mov
pop
das
add
inc
mov
pop
das
mov
adc
out
xor
and
repnz
jmp
lods
fiadds
mov
sbb
mov
xor
xor
daa
inc
jno
dec
mov
jle
lds
aas
fdivs
mov
mov
sbb
or
mov
dec
jo
test
loopne
dec
xchg
lock
fs
aam
pop
cltd
fisubrs
test
hlt
push
adc
stos
mov
add
ss
or
stos
cmpsl
adc
jle
sbb
adcl
aad
cmp
add
out
icebp
out
mov
mov
inc
rcrb
adcl
sub
push
or
lahf
pusha
sub
or
cwtl
ds
pop
ljmp
or
dec
mov
int
push
fwait
inc
push
mov
loope
lods
cmp
daa
sarl
mov
sbb
int3
cmp
sbb
adc
sbb
insl
inc
jmp
andl
cltd
sbb
rcll
xchg
jno
shlb
mov
lock
dec
or
add
cmp
jp
sub
hlt
jae
rcll
jp
inc
pop
out
sbb
push
pusha
sub
sahf
and
jb
mov
sbb
xchg
stos
mov
push
mov
cmp
mov
xor
popf
rol
addr16
lcall
call
push
mov
add
hlt
cwtl
lret
dec
sarl
sub
stc
imulb
out
adc
int3
adc
repz
loop
sti
dec
hlt
push
es
sti
fs
stc
sub
dec
hlt
lods
mov
ja
xchg
jbe
xor
dec
pop
add
mov
pop
test
and
pop
into
movsb
js
test
pop
or
sbb
lret
adc
ret
push
mov
gs
adc
notl
or
out
loope
das
enter
iret
dec
adc
push
mov
call
test
rolb
mov
std
cmc
jb
jno
sbb
dec
ret
and
out
dec
int3
pop
nop
mov
ja
mov
add
test
cwtl
sub
xor
cli
mov
cmp
dec
mov
pop
push
out
mov
pop
sub
insb
pop
icebp
shrb
imul
inc
add
mov
stc
pushf
and
fcompl
pop
rol
dec
test
push
xor
adc
mov
pop
ja
push
pop
xlat
and
jo
add
dec
insb
icebp
mov
jmp
mov
and
stc
sbb
dec
pop
adc
clc
sub
hlt
push
push
or
mov
sub
negb
inc
xchg
add
aas
add
push
mov
or
dec
jae
repnz
js
jmp
aad
inc
sub
ljmp
sbb
hlt
stos
mov
push
popf
cli
ds
xchg
sub
dec
cs
in
cwtl
dec
nop
or
or
mov
dec
mov
xorb
push
ljmp
shrl
out
xlat
xchg
cmp
fcoml
pushl
inc
std
sub
das
test
popf
sub
icebp
addr16
xorb
es
gs
das
call
shr
push
add
push
mov
testb
add
push
pop
mov
cmc
dec
cltd
loopne
test
add
xlat
dec
pop
js
xor
into
gs
outsl
rclb
in
lret
cmc
sub
out
lret
inc
icebp
std
roll
cmpsl
and
and
ficoms
pop
cmpsl
stos
jne
rolb
je
pop
inc
loop
ret
inc
ljmp
pop
dec
lret
jns
jmp
sbb
test
mov
push
add
std
mov
add
mov
cld
aad
outsl
jo
xchg
dec
cwtl
dec
ja
loop
or
jle
mov
and
pushf
cmp
mov
pop
sbb
cmp
adc
add
mov
add
and
inc
pop
repnz
mov
dec
int
cmpl
or
add
xchg
fldcw
fstpl
les
andb
pop
popa
xchg
cmp
xchg
adc
lret
jge
mov
jae
inc
sub
fs
or
xor
das
mov
sbb
push
xchg
mov
ja
scas
adc
push
add
pop
mov
pop
mov
push
fistl
mov
mov
push
roll
je
mov
in
push
push
dec
mov
aam
adc
xor
mov
cltd
push
mov
mov
xchg
outsb
aaa
adc
arpl
call
inc
mov
fnstenv
decl
lret
jmp
sbb
cmp
pop
shlb
rcr
lahf
push
sub
mov
mov
leave
jle
popa
push
xchg
jbe
hlt
adc
out
mov
test
loop
adc
testb
mov
aas
sub
sub
or
pop
aaa
pop
adc
pushf
dec
cltd
test
insl
mov
bound
adc
mov
pop
xorl
push
adc
pop
mov
push
ficoms
sbb
pop
std
push
adc
rolb
cmpsl
jmp
and
mov
mov
mov
pop
mov
mov
and
pop
jg
mov
or
clc
xchg
inc
mov
addr16
mov
jge
mov
ret
lret
mov
add
nop
stos
enter
and
xor
or
inc
sbb
mov
daa
aas
push
insl
loopne
in
fsubrs
shrl
imul
pop
add
xor
and
xor
sar
mov
shr
data16
xor
and
jp
pop
push
scas
dec
mov
cmp
imul
inc
push
mov
out
imul
out
xor
lods
subl
imul
push
mov
and
mov
mov
jge
std
jmp
sbb
fidivrs
mov
mov
push
rcl
add
arpl
lret
mov
sub
std
xchg
sbb
sbb
stos
mov
test
repnz
int
mov
push
and
das
aam
inc
aad
add
in
mov
std
adcl
inc
or
sti
lahf
gs
mov
fcoms
xor
jo
lock
add
decb
fmull
fwait
int3
mov
aaa
lock
cmp
jne
cs
out
rorl
dec
sub
cmp
xchg
fwait
dec
das
dec
outsl
lds
aas
dec
push
jne
sbb
sub
lds
cmp
hlt
pushf
push
mov
in
cwtl
scas
fnclex
bound
insb
imul
mov
cmpsl
xchg
sbb
or
rcrl
add
loope
mov
fwait
das
xor
cs
flds
nop
imul
or
add
pop
fisttpl
sub
push
lea
lods
add
dec
xchg
xor
dec
mov
sbb
pop
lock
xchg
repnz
sahf
pop
scas
and
orb
jle
xchg
cltd
das
cmp
fcoms
pop
pop
lods
lock
dec
out
cmp
cmp
mov
mov
andb
stos
push
jb
fwait
inc
pop
and
loopne
subl
inc
mov
or
dec
das
cmp
lock
mov
pop
popa
sbb
ret
mov
and
jp
lds
mov
jne
pop
lds
sub
adc
dec
imul
sbb
sbb
in
std
fcomip
xor
pop
shll
rcll
mov
fwait
sub
test
insb
mov
xchg
jecxz
test
ret
sub
fcmovnb
pop
out
mov
jmp
jecxz
pop
add
pop
mov
cmp
mov
leave
or
mov
fstps
dec
xchg
sub
movsl
addr16
dec
fiaddl
jg
out
stc
mov
mov
stos
lea
xchg
out
xor
out
popf
push
jae
insb
popa
add
xor
adc
out
and
add
mov
orl
shr
loopne
push
cs
push
mov
and
xor
xchg
shl
jns
in
mov
jno
repz
push
repz
daa
add
faddl
and
sbb
mov
cmp
add
jo
mull
pop
sub
xchg
inc
jmp
in
shll
aas
loop
roll
int
sub
xor
push
mov
fimuls
jp
cmpsb
je
bound
fldt
lret
mov
cmp
in
scas
cmp
insl
xchg
mov
ljmp
cmp
sub
pop
lret
mov
and
fcmovbe
loop
outsb
add
ret
mov
popf
in
add
xor
fcompl
pop
xchg
add
and
sbb
movsb
mov
loope
sub
or
cmp
xor
popa
rcll
fst
outsl
adc
out
rclb
aad
mov
xchg
scas
test
xor
sahf
cmpsb
sbb
movsl
push
sbb
lods
mov
jg
push
imull
jmp
xor
or
adc
mov
fnstsw
into
xchg
leave
insb
xchg
dec
adc
sbb
add
mov
push
push
loop
iret
xchg
std
push
shll
mov
scas
ds
xor
rcr
test
aam
and
sub
loop
xor
cmpsl
and
cmp
adc
xor
cmp
test
pop
cmpsl
sbb
xchg
ficomps
adc
sahf
adc
jnp
dec
inc
dec
mov
popa
jge
scas
mov
ljmp
test
cmp
sbb
into
fldenv
jmp
insl
mov
jae
jl
xchg
jmp
xlat
dec
cmpsl
push
shr
nop
test
mov
loop
dec
in
ja
fisttps
mov
sahf
ret
int
inc
and
or
in
es
add
mov
pop
add
mov
outsb
xchg
xchg
push
inc
sti
sub
jne
cli
fwait
and
xchg
xchg
jl
out
es
aad
sbb
and
iret
adc
cmp
push
add
or
mov
jl
push
xchg
inc
lock
dec
fisubrs
cmc
ljmp
test
push
jl
sbb
lods
inc
mull
cmp
cmpsb
dec
dec
push
lds
gs
scas
push
pop
aam
mov
ljmp
sub
ret
lcall
cmpsl
cli
xchg
dec
insl
jnp
and
cwtl
xlat
dec
cmp
cmp
ss
into
sarb
scas
adc
inc
fistpll
js
add
and
jb
inc
shrl
push
clc
addr16
movsb
movsl
lock
cli
xchg
adc
adc
stos
sbb
dec
push
jne
rorb
mov
xchg
pop
sahf
int3
js
out
insb
out
cld
jns
inc
cmp
or
xchg
shlb
gs
incb
push
mov
add
push
mov
sahf
inc
and
xchg
sbbb
and
loope
sar
add
cmc
faddp
ds
cmpsl
xor
pop
mov
add
test
mov
xor
rcrb
push
mov
inc
and
jae
push
lahf
add
popa
push
mov
jecxz
js
sbb
jo
pop
out
jnp
popf
ljmp
or
rcrb
sbb
jmp
jp
out
dec
lods
frstor
imul
jbe
iret
xchg
repnz
xchg
out
rcrl
sbb
xor
xlat
enter
shll
dec
cmpsl
addr16
and
loop
pop
shlb
pop
out
arpl
mov
lea
in
test
sbbl
xchg
stos
mov
pop
xchg
adc
and
inc
cwtl
sarb
pop
dec
notl
les
popf
dec
dec
or
je
or
sbb
lds
sahf
mov
bound
mov
add
lock
inc
mov
dec
lds
mov
sbb
cmp
out
sbbb
cli
sub
mov
js
xchg
add
jecxz
inc
xchg
sbb
push
lahf
mov
rcll
sub
aaa
das
insb
mov
xor
call
das
cli
cli
xchg
add
sti
sbb
stc
ret
outsb
test
loopne
jbe
xchg
sub
shrb
jne
jbe
or
cmp
or
aad
inc
xor
clc
ret
sub
inc
cmp
inc
xchg
sbb
add
mov
cmp
lcall
sbb
sbb
or
adc
shlb
jae
sub
jg
insb
movsl
cmp
adc
cmpsb
mov
inc
push
sub
rolb
or
inc
jmp
outsl
cmp
popl
mov
jl
cmp
or
mov
xchg
mov
not
add
les
adc
push
cmp
or
inc
xchg
dec
inc
sahf
jne
rorb
add
lock
movsl
jp
sar
std
jmp
and
xchg
iret
fdivrl
mov
jecxz
add
xor
nop
inc
lds
push
cmpsb
xchg
cli
dec
push
and
faddl
sbb
stc
outsl
in
sbb
pop
testb
inc
push
pop
in
and
mov
repnz
mov
popf
sahf
stos
jg
adc
dec
test
sub
xor
aas
shlb
xchg
insl
jge
xor
cli
pop
pop
and
hlt
adc
dec
or
lea
mov
pop
adc
push
ja
fsub
loope
rclb
mov
sti
fwait
test
popf
imul
repz
ret
or
cwtl
cli
jecxz
sarl
push
mov
sub
add
add
in
sahf
clc
jg
cwtl
adc
faddp
icebp
push
adcl
xchg
bound
dec
mov
jge
lcall
xchg
loope
mov
mov
out
mov
cmpsb
addr16
sbb
cli
pop
push
pop
cmc
mov
xchg
shll
push
cwtl
ja
pushf
imulb
lahf
and
mov
dec
xlat
xlat
shl
xchg
dec
stos
dec
mov
cmp
pop
int
not
outsb
cld
mov
pop
repnz
sarl
sbb
test
jae
daa
add
outsb
xchg
sbb
aas
mov
hlt
nop
mov
nop
enter
clc
inc
sti
jle
xor
mov
adc
mov
add
xor
sarl
es
imul
test
movsb
push
cld
popf
leave
adc
xchg
mov
inc
bound
int
leave
inc
sti
cmp
shlb
ds
mov
cli
stc
fsubrl
mov
cmp
loopne
dec
bound
ret
lods
add
fstl
scas
cmp
sub
mov
mov
push
mov
pop
xor
into
and
lret
xorl
divb
fwait
dec
inc
dec
rcrb
clc
dec
addr16
cmp
movsb
mov
fldl
shl
dec
shlb
mov
fadds
shll
push
sbb
mov
imul
or
add
cli
ja
push
popa
add
cmp
and
pusha
std
icebp
dec
cwtl
xor
mov
xchg
adc
xor
scas
pop
push
push
mov
push
or
mov
adc
mov
into
out
adc
addb
add
int
cltd
mov
stos
lcall
loope
xor
insl
push
std
add
ficoml
jb
mov
sahf
push
push
pop
inc
dec
stc
jmp
shlb
jecxz
mov
fwait
cmc
repz
push
hlt
insl
inc
jbe
ret
loop
push
leave
fwait
xor
dec
pop
sbb
out
mov
loop
mov
lahf
ja
push
sub
sub
icebp
sbb
cmc
jp
je
sti
dec
dec
les
xor
scas
dec
lea
adc
sub
in
test
sbb
movsb
sub
mov
push
jno
lahf
daa
sbb
push
add
imul
xlat
pop
stos
adc
dec
pop
ficomps
imulb
test
push
test
jmp
into
out
test
mov
xor
test
push
cwtl
cmp
pop
outsl
mov
out
mov
mov
imul
or
mov
mov
pop
movsb
test
adc
pop
packuswb
inc
mov
outsl
sbbb
mov
jns
fnstsw
push
pop
mov
leave
rcrl
dec
lahf
aas
bound
pop
mov
test
push
mov
in
fs
jp
xor
inc
inc
sub
cmp
push
pop
into
roll
or
adc
inc
nop
mov
aad
ja
ds
add
lock
or
sub
pop
mov
subb
pop
mov
ljmp
lods
sub
jae
pop
push
jecxz
into
outsl
dec
inc
cmp
dec
jp
xchg
pop
mov
cmp
fnstcw
xchg
xchg
lods
adc
decl
aad
test
jp
xchg
js
popa
cwtl
mov
cmp
mov
outsb
xchg
xor
jp
icebp
and
xor
out
popf
mov
scas
inc
fcomps
inc
inc
clc
or
cld
mov
push
mov
jno
lods
sti
xchg
sbb
pop
ret
loopne
mov
dec
sub
push
repnz
imul
adc
lods
dec
xlat
ss
lret
fmuls
imul
cmc
fisttps
mov
pop
imul
lcall
iret
mov
sti
jb
mov
andl
xor
jle
cmp
cmp
or
xor
push
lock
in
adc
es
xchg
pop
addr16
daa
adc
pop
pop
sbb
jl
xor
in
mov
test
in
mov
out
cwtl
loopne
jb
int3
push
ficoml
inc
push
jb
xchg
pop
fldl
loopne
lds
aam
cs
aad
bound
lds
mov
das
dec
jo
push
push
adc
int
addl
lea
movsb
push
mov
aas
xchg
or
roll
pop
mov
scas
mov
xchg
pop
fs
mov
jbe
sar
mov
xor
data16
mov
mov
enter
out
adc
dec
jae
lods
jl
ret
jl
aam
jp
cli
xchg
in
lods
cld
sbb
inc
fcom
clc
leave
popa
jp
stc
into
negb
pop
add
push
mov
push
and
xchg
mov
xchg
mov
lds
mov
sbb
fldl
sbb
ficomps
mov
lock
pop
mov
jb
add
inc
frstor
jbe
pushl
addb
cmpsb
stc
scas
xor
add
add
nop
mov
or
sub
popa
movsb
push
sbbb
or
decl
cmpsb
xor
mov
jb
jns
sbb
jne
mov
adc
add
adc
fcmovnb
sub
xchg
fcomip
in
add
add
and
addr16
lahf
dec
mov
dec
loop
jge
inc
dec
xlat
jae
inc
inc
das
repnz
add
dec
mov
cmp
mov
fdivl
jb
lea
and
push
mov
mov
pop
dec
sub
addr16
sbb
mov
fmull
add
pop
popa
data16
cli
jo
xchg
gs
jmp
xchg
xchg
shrb
or
push
jns
je
add
subb
inc
subl
dec
lret
adc
cs
jmp
lock
gs
mov
inc
xor
in
adc
sbbl
ficoms
jp
cmc
stos
adc
shl
nop
mov
mov
adcl
jb
jle
shlb
mov
jns
add
std
pop
movsl
fmull
scas
push
int
in
push
faddp
jmp
mov
aas
pop
and
xchg
jl
lret
xchg
ja
hlt
icebp
lret
daa
or
pop
push
pop
repz
mov
lods
mov
jae
hlt
movsl
or
mov
jno
repz
mov
fdivs
pop
dec
lcall
push
outsb
xor
jl
jp
in
jbe
jae
inc
out
inc
mov
clc
push
mov
inc
mov
mov
dec
sarb
jmp
inc
xchg
push
adc
mov
pop
call
jns
pop
adc
xor
das
aad
addr16
mov
xor
pop
push
jb
sub
xor
or
mov
cmp
inc
ret
stos
in
xchg
repz
sub
pop
jl
test
loope
js
jmp
cmp
test
lods
mov
xchg
test
push
mov
mov
test
or
cmp
mov
push
adc
mov
fsubs
push
and
fs
lods
jae
sub
or
rcll
popa
pushf
out
add
fxch
adc
jg
rcrb
es
or
or
pop
out
fiadds
addb
movsb
ret
jl
in
icebp
jle
out
cmpb
fisttpll
mov
repz
fcmovu
inc
addr16
fistl
add
ret
dec
scas
jne
shlb
or
call
js
ds
add
dec
pop
fcmovu
and
or
addr16
popa
icebp
mov
ret
out
mov
enter
mov
insl
cli
dec
ljmp
xlat
pop
das
test
lahf
fdivl
hlt
mov
add
outsb
fwait
jo
dec
mov
imul
das
outsl
hlt
push
pop
xchg
push
stos
arpl
daa
vmread
mov
into
inc
out
push
mov
insb
xor
insl
lea
inc
hlt
rcr
test
in
mov
aam
aam
pushf
mov
push
pop
inc
xor
gs
mov
jp
popa
cld
or
push
insb
and
inc
cmp
xor
stos
and
mov
pop
cmp
scas
inc
loopne
and
movsb
pop
nop
sub
ds
and
pop
out
dec
sub
cmp
jb
shll
loopne
enter
jmp
dec
push
mov
inc
or
in
xchg
lods
dec
push
push
aad
xchg
loop
mov
push
jl
jnp
outsl
mov
fs
test
and
sbb
idivb
mov
cmp
ss
sbbl
mov
or
or
std
push
mov
mov
add
or
xchg
cwtl
out
faddl
mov
out
xchg
fwait
dec
push
out
cld
jmp
loopne
fcomps
imul
jmp
stc
insb
iret
pushf
cmp
dec
mov
add
in
shl
notb
mov
mov
xor
fisttpll
pop
rolb
test
out
cld
add
sub
or
loope
push
cmp
hlt
dec
rorb
xor
push
inc
shrb
inc
pop
jno
dec
cld
sub
ja
inc
mov
lahf
push
ss
aad
aam
aaa
out
or
leave
xor
daa
or
daa
jmp
ds
out
lock
das
cmp
sahf
loope
loopne
cld
mov
iret
cltd
ljmp
push
cs
dec
arpl
out
xor
xchg
cmpsb
aam
in
lret
mov
std
sbb
adc
aas
icebp
dec
dec
inc
daa
inc
cmp
sub
fs
scas
cmp
push
sbb
jmp
xor
add
xchg
lock
jge
mov
test
cmpsb
add
mov
dec
push
push
data16
test
mov
push
mov
sub
xchg
adc
rcll
aaa
das
fucom
mov
in
push
jmp
psadbw
pop
dec
out
mov
mov
in
insl
fwait
adc
into
jmp
dec
jo
xor
dec
mov
xchg
lock
bound
mov
sbb
xor
cmc
fldl
add
add
daa
jp
fisubrs
sbb
cmp
cmp
icebp
pop
aaa
pop
push
sbb
mov
dec
and
jns
shrl
xchg
fisttpl
test
call
push
fildl
xchg
bound
into
mov
sbb
cmp
das
sub
pop
aas
xchg
push
jae
aad
or
lcall
sbb
dec
xchg
adc
dec
and
fsubl
cli
cld
outsl
daa
je
mov
mov
dec
negb
xchg
ret
test
xchg
cwtl
sbb
xor
or
shr
pop
lcall
and
fcomp
xor
inc
leave
add
push
cmpsb
outsl
adc
pop
jb
xlat
add
mov
loop
sbb
imul
out
jl
cld
lret
push
aaa
fldl
paddsw
inc
jb
jns
je
pop
cwtl
es
out
sub
pop
add
pop
or
cmc
and
fistps
mov
cmp
imulb
and
subl
xchg
iret
icebp
cmpsb
test
jnp
lods
adc
cmpb
mov
test
insl
add
xlat
cmc
test
sarb
push
jbe
pop
adc
jne
inc
test
stc
int3
xchg
outsb
cmpsl
bound
ret
xchg
ffree
pop
sub
pop
outsl
mov
mov
add
ljmp
incb
xchg
cwtl
std
xor
gs
xlat
add
mov
lahf
cmc
shrb
ss
xor
or
and
rclb
lret
aaa
dec
sahf
sbb
and
and
mov
sbb
cmpsl
repz
xor
push
decl
or
push
mov
xorl
outsl
and
sub
cli
cmpsb
jae
xchg
jns
inc
cwtl
sub
xchg
push
pop
sbb
sub
dec
sub
lock
rorb
xor
fidivs
stos
mov
push
punpckhdq
cs
push
mov
rcr
xchg
loopne
add
lahf
lods
push
or
ret
dec
jecxz
repnz
repnz
fwait
mov
lahf
ret
push
xor
sbb
jo
loopne
xor
mov
cmp
nop
sub
dec
mov
push
xchg
jge
sbb
sbb
ja
insl
sub
dec
lds
mov
cmc
lret
adc
push
mov
int3
gs
pop
jbe
sbb
shll
push
push
outsl
mov
inc
push
jnp
jle
and
mov
test
mov
std
push
cmpsb
js
pop
xor
aas
movsl
fwait
std
pop
or
jl
dec
lock
cmc
sub
pop
out
aaa
adc
ss
stos
int3
scas
jg
daa
jecxz
push
and
xchg
in
push
dec
fnsetpm(287
adc
cwtl
xchg
sarl
mov
cmpsb
shlb
cld
loopne
jnp
insl
lods
mov
sub
jg
lahf
pop
sbb
mov
xor
stos
sub
addr16
sbb
iret
mov
xchg
pop
or
sbb
mov
sbb
push
out
xor
push
cld
pop
cli
sbb
gs
push
roll
or
cli
add
inc
dec
sahf
inc
xor
pop
pop
sbb
aas
cmp
push
xlat
shlb
xchg
add
cmpsl
les
mov
icebp
mov
negl
cmp
pop
add
les
and
xchg
dec
add
pusha
loopne
adc
shrl
xchg
mov
cmp
sbb
mov
or
popa
xor
scas
add
repnz
push
stos
jns
cmp
dec
rcrb
scas
cli
ja
push
sbb
ret
testb
daa
jnp
js
or
lahf
mov
jns
and
inc
aad
cmp
lock
mov
cmp
outsw
dec
fnstsw
mov
pop
jle
push
inc
xlat
movsl
push
insb
out
inc
adc
xor
sbb
nop
add
aaa
addb
loope
sarb
mov
add
xor
or
out
jmp
cli
hlt
jns
call
imul
test
aad
xchg
daa
jno
or
idivl
test
adc
push
cmpsl
mov
xor
sti
adc
popa
loop
mov
mov
push
mov
inc
rcrb
insb
int3
push
mull
lock
pop
sarl
adc
mov
push
mov
adc
imul
lock
shll
scas
das
repz
sbb
or
ljmp
call
mov
fnstenv
push
stos
push
pusha
pusha
sbb
xchg
out
insl
movsb
orl
pop
dec
dec
fmul
scas
ja
jns
mov
mov
fisttps
bound
pop
stc
sub
mov
jmp
les
inc
pop
clc
int
xchg
fnstcw
mov
mov
pop
push
push
inc
mov
cmpsb
iret
sub
enter
je
cmp
lds
aas
hlt
aam
das
js
push
or
sbb
push
pushf
or
mov
cmp
push
and
cmp
adc
or
cmpsl
mov
loope
pop
pop
cmp
out
xor
push
outsb
inc
pop
jno
fiadds
and
stos
aas
lret
fsubl
cmc
mov
fidivs
mov
lock
ficomps
cmpsb
es
and
or
mov
ja
popf
aaa
and
fcoml
add
or
ss
ffreep
loopne
pop
sahf
jecxz
int
jge
push
imul
out
outsl
cwtl
nop
loope
repz
call
jne
inc
push
sbb
mov
test
sbb
or
ja
pop
and
pop
xchg
mov
outsl
xchg
fwait
mov
fistps
out
lods
pop
mov
fiaddl
addl
sub
fisttpll
adc
es
cmpsl
hlt
jne
out
in
or
add
les
test
xchg
jae
ss
lock
lcall
xchg
insb
cmp
pop
push
jp
leave
shrb
dec
mov
or
pop
jle
xchg
xchg
gs
mov
lods
push
stos
fnsave
das
fiadds
scas
jmp
xor
push
mov
pop
inc
imul
dec
into
packuswb
or
sub
out
popa
pusha
das
pop
addl
jl
inc
push
leave
stc
inc
cltd
mov
push
int3
in
pop
insb
insl
lahf
push
inc
imul
xor
orb
pop
aam
mov
dec
xchg
repz
jle
push
mov
xor
xor
cwtl
pushf
or
faddp
or
lock
xchg
je
pop
out
ss
das
hlt
and
dec
mov
pop
dec
mov
jno
xchg
fbld
stos
ljmp
adc
ret
mov
pop
jle
ud0
dec
hlt
aaa
dec
xchg
insb
fnstenv
inc
xor
fstl
mov
sub
mov
jmp
aam
insl
mulb
aad
dec
xorl
sbb
adc
bound
ja
out
xchg
shll
stos
or
xor
pushf
mov
pop
and
ljmp
push
das
xor
xchg
adc
xchg
push
rorl
insl
mov
xchg
cmp
push
in
outsb
insb
dec
add
mov
frstor
mov
mov
lods
and
cmp
test
lret
insl
jmp
andl
mov
sti
mov
push
rcr
mov
mov
xor
flds
jne
and
xor
mov
inc
shll
pop
in
add
cmp
cmp
mov
and
mov
sbb
inc
stos
pop
add
mov
nop
jae
push
or
out
pop
imul
sub
addr16
test
sbb
arpl
ss
mov
das
jp
shr
out
xchg
inc
sahf
lds
aam
push
daa
pushf
lods
jae
add
jno
mov
mov
pop
adc
push
into
cmp
or
add
mov
add
stos
xchg
sub
push
int
inc
rcll
dec
das
test
jo
pop
mov
shll
nop
mov
xor
fdivl
sarl
mov
dec
cltd
nop
inc
adc
mov
testl
and
push
xor
js
outsb
xchg
mov
add
stos
nop
repz
in
pop
es
in
je
ja
push
or
lret
or
push
add
lea
cmp
dec
pop
inc
adc
fwait
mov
ja
fbstp
jns
lods
mov
daa
aad
push
and
clc
jmp
mov
or
stc
fcompl
adc
stos
sub
dec
movb
mov
mov
ss
imul
jg
xchg
test
shr
in
push
xor
sbb
xor
dec
loopne
repz
inc
and
dec
pop
add
jnp
mov
xchg
push
mov
daa
push
stos
ffreep
push
dec
test
loope
and
dec
or
dec
les
ss
xchg
mov
stos
jp
mov
out
push
imul
ret
lret
in
add
pop
pop
add
adc
xchg
push
ss
pop
fstpt
inc
repnz
add
sub
je
ret
arpl
push
imul
inc
push
xor
cmp
lock
psraw
daa
les
in
into
xor
or
aad
imul
mov
mov
dec
fadds
mov
xor
es
mov
shll
pop
adc
decl
cmpb
adc
js
sub
aad
sbb
pop
dec
iret
sti
shrl
pop
mov
mov
stos
or
adc
addl
or
pop
sbb
add
jno
call
repz
jle
push
cmpsb
in
insl
mov
daa
ffree
enter
cmpsl
dec
sub
fs
mov
ret
or
mov
ret
jg
xchg
add
adc
in
xor
inc
cmp
add
mov
cmpsl
jb
bound
fs
cmp
pop
sub
out
pushf
stc
xchg
push
sub
sahf
mov
adc
add
test
pop
xorl
xchg
add
fmulp
dec
pusha
test
leave
lock
lcall
inc
jno
imul
mov
hlt
sbb
mov
adc
push
imul
jnp
mov
mov
pop
cwtl
sarl
nop
fisttpl
mov
xor
dec
jmp
xchg
jb
pop
mov
or
pop
mov
pop
cld
and
fldl
ror
test
faddl
lahf
add
jl
cmpsb
pop
test
les
cli
imull
fldcw
inc
push
cmc
dec
xlat
push
inc
mov
cmp
pop
and
cld
dec
or
aam
sub
lretw
xchg
lds
stos
addr16
sbb
cld
push
jmp
mov
in
lcall
popa
mov
xchg
sbbb
jbe
jae
fstl
xlat
push
loopew,pt
dec
dec
xchg
sahf
les
nop
sub
shrl
cltd
movsl
movsl
cmp
js
pop
gs
sub
xor
xchg
sarl
cmp
pushf
cmp
or
and
scas
mov
push
xchg
jmp
lahf
mov
inc
jns
dec
mov
mov
or
xchg
cmp
andl
xchg
rcrb
or
or
pop
cmpsl
mov
andl
jo
cmp
push
loop
xchg
lahf
hlt
mov
cmpb
hlt
cmc
mov
faddl
inc
mov
mov
mov
or
push
mov
sub
mov
cmp
and
cmpsl
rcpps
addl
inc
xchg
mov
lcall
mov
xchg
cmp
or
add
stc
jno
xchg
lods
push
xor
iret
xor
mov
lods
push
mov
fistpl
repz
ss
adc
repnz
adc
cmp
lret
nop
insl
repnz
das
jmp
dec
xchg
mov
stc
cmp
add
mov
js
dec
icebp
xchg
loopne
mov
jae
cmpl
dec
or
lds
jae
aam
mov
loop
cmp
add
enter
jmp
dec
lar
jle
fnsave
rcll
adc
iret
movsb
add
jg
inc
mov
sahf
shlb
jne
jge
and
nop
daa
mov
adc
mov
aad
cmp
gs
test
lret
sub
inc
xor
out
xor
add
push
xchg
lret
pop
inc
scas
jno
inc
lds
pushf
addr16
or
fisttpl
addl
pusha
jb
push
loop
js
mov
sub
xchg
hlt
pop
sahf
jbe
jecxz
popl
add
mov
rcll
cmp
jb
sbb
mov
sbb
bound
cmp
xor
cmpsl
sub
ret
aaa
mov
or
lret
xchg
lds
leave
pop
push
jp
pop
cs
idivl
push
inc
leave
sbb
xchg
test
adc
stc
jns
mov
and
addr16
imul
mov
out
in
sub
mov
aam
outsl
mov
adc
inc
movsbl
pop
repz
jno
inc
dec
xor
adc
addb
rorl
push
std
dec
mov
mov
pop
enter
dec
xchg
or
adc
insl
jmp
fbld
or
insb
shlb
lahf
setno
xchg
push
fidivl
or
or
popf
mov
fimuls
div
insl
sbb
push
pop
clc
push
sub
push
add
pop
mov
xchg
sbb
iretw
arpl
adc
fs
aad
and
add
add
pushf
mov
inc
sti
repnz
enter
dec
imul
lds
fwait
and
xchg
icebp
into
dec
push
cli
nop
jo
jns
mov
sbb
loopne
push
and
mov
movsb
inc
push
xchg
fstps
bound
gs
mov
ja
jo
mulb
lahf
loope
out
repnz
xor
xchg
nop
jne
mov
or
xlat
mov
cmp
mov
insb
mov
mov
fcomps
cs
std
and
inc
jmp
or
bound
push
imul
xor
ljmp
adc
sub
mov
sub
loopne
jns
lds
lea
sbb
xchg
loopne
mov
adc
or
leave
jl
gs
jo
lret
dec
das
testl
jbe
cwtl
jae
arpl
jl
dec
xchg
movsl
pop
adc
ficompl
daa
in
andb
mov
xchg
sbb
lcall
pop
enter
imul
jge
imulb
xlat
repz
adc
sub
xchg
inc
aas
mov
mov
jle
dec
sarb
adc
dec
ret
movsb
jp
ljmp
inc
dec
adc
lods
out
xchg
lret
pop
mov
sub
mov
sub
dec
mov
adc
mov
jmp
sub
push
add
dec
mov
enter
mov
movsb
aad
sub
cwtl
mov
int
inc
sub
and
aam
mov
inc
jge
idiv
push
xor
sbb
jbe
pop
cmc
push
outsb
std
pop
int
mov
sbb
addr16
mov
inc
std
dec
add
or
push
jne
aaa
jo
xchg
repnz
fs
pop
hlt
jecxz
adc
mov
cmpsb
inc
icebp
fdivs
das
jne
rolb
jge
leave
ds
addr16
sbb
into
push
or
push
dec
ds
sub
mov
inc
aaa
jnp
call
icebp
mov
aad
dec
in
es
gs
dec
fs
dec
push
popl
std
shlb
add
bound
outsb
ja
daa
loop
inc
pop
jl
mov
stc
popf
xor
mov
cs
mov
pop
and
aad
cmp
xchg
and
xor
outsb
out
push
or
push
dec
cld
aas
mov
cmpsb
cmp
cwtl
idiv
movsl
push
nop
inc
push
xchg
int
sahf
mov
sbb
lods
jae
jg
mov
dec
xor
lock
mov
xor
scas
xchg
and
out
cwtl
dec
movb
xor
sbb
insb
rorl
nop
pop
scas
cmpsl
mov
pop
lret
inc
xchg
test
mov
pushl
and
lahf
icebp
or
mov
arpl
or
dec
outsl
insl
pop
mov
mov
inc
mov
in
dec
xor
andb
out
xchg
push
mov
and
or
js
mov
sub
lret
mov
xchg
cs
scas
sub
fldcw
inc
das
hlt
jecxz
dec
jo
jmp
and
mov
jbe
mov
shrb
iret
push
daa
mov
mov
clc
mov
sub
xor
push
popa
loop
mov
add
add
shrl
sarb
js
sbb
syscall
les
and
jmp
adc
scas
push
sbb
test
jne
ror
xchg
push
mov
mov
xchg
mov
pop
stos
dec
xchg
push
pop
bound
rcll
nop
popf
jl
pop
out
mov
jmp
push
xor
pop
lock
call
es
push
fsubs
push
shrb
xor
rorl
inc
jns
cmp
or
mov
cmp
mov
mov
out
inc
mov
aad
xor
or
and
mov
mov
out
je
pusha
push
lahf
adc
jecxz
jne
jns
repz
inc
pusha
mov
fcompl
test
push
int
int3
lods
bound
fcompl
sti
cld
lret
cmc
dec
mov
jmp
mov
andl
insl
xor
in
push
mov
idivl
xchg
xchg
rcll
xor
out
jmp
dec
cmp
ds
cmc
and
movsb
fdivl
int3
mov
add
adc
mov
xor
adc
cmp
js
pop
xchg
rcrb
int
xchg
out
inc
cmpl
stc
int
push
or
jg
test
inc
add
jge
adc
jo
lret
jecxz
add
xor
and
push
jb
mov
rcr
push
or
in
inc
sub
stos
sbb
push
in
pop
xchg
pop
mov
mov
mov
add
inc
shll
mov
dec
cltd
out
mov
xadd
xchg
mov
test
rcl
sbb
movsl
fiaddl
in
insb
xchg
push
fcmovnb
sub
lock
sub
mov
adcl
fs
adc
mov
imulb
push
push
test
sbb
cwtl
mov
cmp
pop
jne
rcrl
push
mov
push
add
and
les
mov
mov
xchg
xchg
mov
arpl
fists
or
cmp
add
test
hlt
pop
inc
out
ss
jo
test
ret
repz
stos
out
mov
leave
fbstp
mov
xrelease
jmp
ficoms
and
nop
repnz
fsin
aas
hlt
lahf
inc
and
jmp
jg
imul
loop
int3
push
mov
lock
pop
sbb
les
jo
fimuls
frstor
pop
lods
out
dec
mov
cmpsl
into
cmpsb
mov
dec
imul
push
push
push
rcrl
xchg
rcrl
aaa
iret
imul
cs
lret
negb
mov
test
subb
xlat
xchg
mov
filds
cmovns
cwtl
push
jne
or
sti
or
data16
testb
adc
fisubrl
jns
popa
lods
std
out
xchg
lret
and
sub
mov
cmc
lock
cmp
sbb
pop
adc
pop
or
xor
in
mov
fxch
add
sub
lock
dec
mov
xor
pop
mov
fimuls
ret
imulb
dec
test
mov
mov
or
inc
adc
inc
rorb
sub
popl
xchg
jl
xor
dec
sbb
jns
in
mov
hlt
imul
mov
fdivl
or
mov
lret
jne
xchg
mov
sub
adc
cmpsb
and
sbb
movsb
pop
push
and
lcall
clc
cmp
andb
scas
inc
mov
pop
cmc
pop
fs
orb
push
pushf
push
leave
xor
add
cmp
inc
repz
enter
popa
xlat
in
xchg
fwait
cmc
movl
cmp
add
fbld
out
inc
pop
int
aad
das
sbb
iret
jl
sbb
hlt
inc
and
mov
mov
notl
lcall
dec
dec
addl
adc
ss
roll
mov
inc
in
test
adc
clc
or
fmull
pop
push
nop
lahf
test
add
jmp
shll
sahf
mov
push
jle
pop
jl
adc
pop
ds
fmull
mov
aad
and
adc
mov
dec
neg
shlb
push
test
jns
jno
movsb
ljmp
xor
xor
scas
movsb
clc
stos
test
loope
mov
out
xor
push
dec
add
dec
mov
fisttps
pop
iret
shrb
and
xchg
scas
in
mov
aad
sub
and
cmpl
mov
mov
ret
mov
pop
mov
mov
jb
sahf
pop
std
pop
push
out
lcall
adc
add
out
insl
sub
dec
jl
mov
mov
cmp
hlt
out
mov
and
lahf
cmpsb
popa
adc
and
push
and
pop
in
cmp
gs
inc
push
xchg
out
sbb
fdivrs
mov
pop
lret
mov
fsubrs
bound
cmp
ljmp
cld
mov
lods
mov
in
xor
add
insb
nop
or
insb
leave
push
mov
xchg
stos
jno
inc
inc
imul
loop
push
inc
shl
out
inc
sbb
aas
aas
xlat
dec
vpmacssww
lret
inc
adc
dec
jl
shrl
mov
fs
je
pop
popa
ret
jge
mov
push
push
or
inc
testl
sti
fdivp
divl
sub
cmp
out
movsb
and
cmpsl
mov
lret
mov
pop
iret
insb
or
repz
repz
aaa
sub
jb
leave
test
popa
push
jge
insb
mov
scas
pusha
les
lahf
jns
dec
jne
lds
popf
push
ret
jg
xor
data16
shrl
mov
mov
pop
adc
rorl
repz
xchg
cwtl
fucom
les
cmp
shl
sbb
fsubrs
subl
pop
sbb
dec
test
or
pop
cmpsl
jb
jno
dec
push
xchg
hlt
or
test
loopne
in
lcall
nop
es
mov
push
scas
ja
insb
or
stos
gs
popl
xorl
int3
cltd
andl
xorl
inc
adc
aas
test
mov
push
das
ds
in
inc
sti
pop
lahf
jne
enter
cli
scas
jge
rorl
mov
jmp
in
adc
ds
push
cmpsl
jns
dec
sbb
dec
das
fsubl
jp
sbb
mov
xchg
test
out
mov
repz
es
lods
inc
sub
xchg
jp
mov
icebp
cmc
hlt
mov
mov
insb
mov
inc
in
adcb
xchg
rcll
mov
adc
in
sbb
icebp
sbb
sbb
inc
arpl
fs
jmp
ret
pop
repnz
sub
mov
mov
adcb
test
pop
lods
negb
push
push
scas
or
icebp
ret
popa
lcall
adc
pop
das
loope
jnp
xchg
sbb
clc
sub
jl
mov
int3
enter
test
xchg
mov
lods
adc
dec
cmpl
cmp
xor
out
mov
addb
inc
test
pop
test
sub
pusha
adc
xchg
and
cmpl
push
in
inc
std
subl
aas
or
fildl
xchg
arpl
int3
imul
fists
cmp
xor
xchg
jns
insl
jg
cwtl
jno
pop
inc
jno
push
and
mov
movsb
repz
push
pop
dec
mov
jge
sets
adc
mov
mov
push
dec
sbb
mov
fimuls
inc
sti
dec
gs
mov
shll
jne
into
or
adc
hlt
daa
jp
lcall
add
lahf
pop
mov
out
es
loopne
sbb
test
addr16
cmc
movsb
mov
movsb
in
sbb
fwait
inc
fbstp
dec
lahf
or
xor
repnz
pop
out
test
mov
pop
sahf
filds
shl
adc
adc
jle
in
xorb
fdivrs
jge
pushf
mov
cs
xor
jl
cmc
fs
jns
cmp
xor
lods
stos
or
add
cmp
push
add
mull
cli
in
imul
gs
movsl
insl
stc
xor
lcall
xor
ret
aas
jl
popf
sbb
and
test
mov
fstl
out
cwtl
fcomps
dec
lahf
insb
into
pop
cmpsl
icebp
int3
mov
lret
cli
insl
and
mov
lret
outsb
nop
sub
ret
icebp
mov
push
fwait
ds
mov
cmp
dec
ret
add
sub
pop
push
fstpl
ret
stos
outsl
gs
nop
pusha
dec
inc
xchg
xchg
fnsave
inc
inc
imul
mov
aaa
in
and
std
adc
push
ljmp
ss
iret
sbb
pop
push
mov
cmpsl
dec
jecxz
pop
test
movsl
cmp
insl
fdivs
adc
out
or
mov
xor
sti
dec
pop
out
lock
out
imul
mov
les
push
not
fcoml
outsb
mov
pop
sbb
lods
loopne
cmc
pop
rcl
or
push
sahf
xchg
adc
mov
pminub
aaa
cwtl
adc
orb
bound
arpl
xchg
aam
dec
jb
push
jne
mov
sbb
fst
adc
out
imul
sub
sbb
ret
in
cmp
dec
adc
or
mul
add
into
ja
xchg
xchg
fs
sbb
push
jmp
mov
in
lds
sbb
in
push
fldcw
mov
out
add
push
pop
addl
push
sub
xchg
cli
jns
int3
xchg
sub
movsl
mov
add
and
dec
ja
xor
dec
sub
inc
xor
clc
mov
ficoms
out
fldlg2
movsl
idivl
or
jno
and
and
mov
outsb
jle
iret
or
gs
addb
jmp
pusha
addr16
xor
mov
xlat
enter
cmp
enter
pop
push
lcall
test
push
sar
jb
push
lods
lds
sub
add
rcr
imul
arpl
outsb
ret
in
aas
dec
movsb
cltd
repnz
cmpsb
jae
cmc
loop
ret
sti
mov
dec
aas
call
mov
inc
popa
imul
int3
dec
adc
and
pop
test
jne
repnz
pop
outsb
lcall
cmp
cmpsl
mov
adc
sarl
cli
fdivrl
push
out
inc
or
mov
cmp
fildl
xor
pop
inc
loop
cld
scas
insb
inc
into
pop
incb
ret
dec
mov
shlb
ljmp
push
aad
cmpsb
push
inc
mov
add
les
jae
mov
sar
dec
inc
insl
inc
fdivrp
jno
sub
sahf
addb
or
dec
popf
testl
imul
cli
sti
jge
aam
lock
daa
loop
popf
movsl
cmpsb
jb
iret
sub
sbb
andb
rol
mov
lock
aam
bound
dec
inc
incl
mov
jo
jbe
push
fistps
jmp
jb
sahf
mov
out
pushf
mov
cwtl
nop
adc
sub
iret
sbb
stos
xor
sub
insl
mov
ds
xor
xor
ret
lds
add
jns
mov
les
ret
bound
movl
dec
xchg
adc
pop
jmp
xchg
jns
push
out
aam
outsl
cmp
and
iret
ret
pop
lret
repz
sbb
add
cli
mov
iret
movsl
subb
in
psraw
out
mov
stc
fs
outsl
sub
sbb
or
shlb
mov
fildl
pop
movsl
int
cs
push
mov
int
sub
cmp
hlt
mov
bound
repnz
fsubr
inc
mov
cwtl
sbb
cmp
lcall
xchg
enter
rorl
inc
fdivrs
pop
xor
sbb
pop
cmp
arpl
filds
mov
mov
ret
mov
addb
xchg
loop
jne
repnz
pop
out
imul
mov
add
push
xor
pop
mov
aaa
pusha
pusha
mov
cmp
push
sbb
adc
inc
pop
xor
sbb
addr16
aas
xchg
sbb
pop
incb
xchg
insl
or
push
loop
sbb
xor
xchg
xorl
int
loopne
ss
and
lret
aas
xchg
sti
xchg
sub
ror
push
push
pop
jp
bound
xchg
mov
fwait
lds
test
shlb
inc
addl
sahf
xchg
push
jns
jecxz
movsl
push
jae
ja
jbe
xorl
mov
inc
cmpsb
push
or
cmp
popa
cli
inc
test
fcmovbe
js
lods
out
sbb
clc
pop
lret
or
xor
push
push
data16
dec
call
stc
rorb
cmpsb
clc
ljmp
rolb
jnp
mov
aad
inc
mov
aas
cmpsb
push
jmp
fcomps
mov
adc
orb
jge
or
cld
xor
cmpsl
out
rclb
or
xchg
rcrl
jne
mov
out
jl
jp
popa
jno
std
fdivr
jle
sub
pop
jmp
push
sub
lds
mov
fidivrs
xchg
loope
out
lahf
jp
sbb
and
test
test
inc
jg
adc
inc
and
mov
aad
add
xchg
clc
pop
test
pop
cwtl
xor
add
mov
movsb
sbb
adc
into
dec
mov
mov
and
dec
dec
icebp
fwait
jg
mov
push
add
in
xchg
out
out
or
jmp
jo
rclb
mov
pop
movsl
pop
inc
cmp
sbb
call
xor
xchg
xchg
jnp
sbb
and
jecxz
add
jecxz
or
dec
mov
jmp
ret
xor
loop
aam
xchg
push
arpl
shl
sbb
mov
stos
or
movups
sahf
xchg
adc
mov
push
dec
fwait
cmpsb
or
sbb
loope
clc
mov
repnz
adc
faddl
or
push
xchg
popa
into
jle
pop
lret
mov
add
fmuls
add
dec
in
xor
dec
add
cmpsb
pop
stos
cmc
pop
aam
jno
rolb
push
sub
mov
andl
popf
loope
mov
bound
ss
xchg
icebp
je
mov
push
dec
sahf
cmp
adc
cmp
dec
jl
mov
inc
jb
das
cs
iret
int
inc
int
add
pop
xchg
and
mov
mov
xchg
sub
mov
cmc
fwait
and
mov
inc
cs
inc
mov
sub
mov
xlat
int3
sub
jp
cmpb
lods
and
mov
cli
hlt
pop
mov
sbb
xchg
fistl
in
push
cwtl
lods
lret
les
cmp
mov
dec
adc
lret
or
pop
sbb
sub
bound
sub
jmp
fnsave
rorl
jle
call
sbb
or
rcll
jbe
push
lea
jno
mov
ret
jp
or
sub
adc
cmp
jo
mov
fsubl
dec
pop
maxps
push
jno
cmp
sub
add
jmp
in
insl
into
cmpsl
adc
test
add
pop
inc
dec
mov
ss
add
test
or
aad
imul
scas
loopne
xor
test
aam
or
shlb
addr16
adcl
ds
add
imul
mov
or
call
mov
hlt
sbbl
shr
mov
mov
subl
sbb
add
and
das
or
lret
push
dec
scas
cmpsl
mov
flds
insb
xor
repz
add
rcl
xchg
frstor
stc
sub
dec
lcall
cmp
sarb
push
push
and
push
lea
dec
mov
fld
shll
in
out
rcrl
mov
inc
call
je
das
push
mov
out
out
mov
fld
in
in
xor
lret
inc
jno
js
xchg
or
icebp
fnstsw
fimuls
sti
inc
and
xchg
bound
adc
mov
cmpsb
add
aad
pop
lahf
or
cli
jae
ljmp
inc
jbe
aad
out
mov
dec
ljmp
jle
add
dec
ds
lods
xchg
sub
lcall
jl
push
cmp
jg
sub
cmp
mov
roll
cmp
lods
inc
mov
or
gs
sub
cmp
mov
addl
dec
movsb
call
sti
sub
or
mov
mov
mov
std
mov
fstpt
and
cli
push
mov
stc
sbb
cmp
jb
in
cmpsl
cli
push
mov
shrl
fcoml
inc
push
inc
call
fsts
fwait
or
sub
sbb
sbb
push
pusha
mov
push
dec
jo
fsubrl
mov
icebp
xor
les
js
xlat
xor
xor
inc
cmp
fwait
shll
add
adc
scas
adc
shlb
gs
dec
popf
adc
out
xlat
dec
outsb
and
cmp
mov
push
cs
add
movsl
fiadds
loope
ss
sbb
mov
dec
lahf
xor
imul
or
clc
cwtl
repz
gs
inc
loope
or
sarl
movsl
cmp
addb
lock
and
int
lret
cmp
leave
or
push
imul
or
xchg
inc
daa
sahf
test
sub
in
inc
dec
lods
movsb
incl
inc
jo
nop
ss
adcl
and
mov
ds
sub
pop
cmc
fcmovnbe
call
xchg
scas
in
xor
sti
fiaddl
in
mov
jbe
aas
jb
mov
std
and
xchg
into
aaa
je
or
iret
xchg
stc
add
adc
sub
inc
jg
cmp
xchg
lds
sub
out
xchg
mov
dec
inc
into
sub
stc
jmp
lock
cld
jl
cmp
adc
popa
enter
int3
lret
shlb
repz
andb
lret
enter
rolb
std
and
cmpsb
adc
shrb
cmpsb
push
and
jno
pop
repz
ljmp
mov
and
dec
or
fwait
sub
or
jnp
std
fs
movsb
xchg
stc
std
cltd
adc
mov
inc
idivl
mov
add
int3
pop
adc
adc
notl
push
es
sub
pop
jo
pop
jecxz
stos
adc
inc
add
das
push
sub
mov
pop
hlt
in
pushf
nop
mov
cltd
add
in
jno
or
sbb
jmp
inc
adc
and
jbe
push
jbe
das
adc
pop
mov
ljmp
push
mov
repz
sub
mov
repnz
leave
push
inc
mov
cmc
fmuls
cmp
cld
push
push
aad
popa
xchg
xchg
mov
js
mov
add
jmp
call
jmp
xor
inc
ljmp
cli
addb
sti
test
imul
mov
fsub
sbb
push
and
dec
cmp
cmpsl
dec
hlt
daa
cmc
data16
or
daa
xchg
xor
xor
pop
pushf
arpl
dec
sub
fistps
pop
add
mov
sub
gs
jge
insb
fwait
sahf
lea
bound
iret
push
push
imul
mov
pop
out
into
mov
and
mov
arpl
fnstsw
fstps
rorb
cmp
ds
into
cmc
pop
fistps
dec
push
push
inc
insb
out
jl
lcall
mov
pop
lods
cmp
fistpl
cmc
mov
dec
pushf
mov
pusha
test
cmp
mov
int3
adc
cltd
cmc
daa
cmp
fistl
pusha
jmp
int3
bound
push
mov
iret
pop
in
mov
xor
daa
push
ss
lret
mov
xchg
lea
xchg
in
push
sbb
mov
sub
testb
add
mov
mov
fsubrl
imulb
push
xchg
popf
iret
cmp
sub
cmp
push
fs
cli
in
scas
cmp
iret
sbb
aaa
dec
test
dec
mov
sbb
je
adcb
js
imul
mov
test
sub
pop
repnz
inc
rorl
cld
jmp
out
sub
cmp
test
mov
ljmp
jno
lret
xchg
loopne
mov
push
mov
mov
push
stos
dec
mov
ja
pop
sbb
jge
out
and
xchg
negl
cs
or
mov
shrb
ret
pop
jmp
or
imul
sti
popa
push
add
ljmp
inc
in
cmp
pop
mov
mov
fbld
clc
cmc
addb
rolb
in
in
mov
les
movhps
jb
shrb
adc
cwtl
or
lret
loope
mov
jbe
es
mov
xchg
iret
repz
xchg
rclb
or
sbb
insb
mov
add
enter
pop
and
test
in
rcrb
and
mov
sbbb
aas
addr16
clc
inc
lahf
fisubl
jmp
add
xor
sarb
loope
outsl
mov
ljmp
das
cmp
js
aaa
notb
test
shll
popa
test
sahf
dec
jge
sub
out
icebp
cmc
data16
inc
add
mov
mov
pop
sbb
nop
cmpsb
push
sbb
mov
fiadds
outsl
sbb
clc
or
sub
into
hlt
mov
xor
or
in
cmpsb
push
push
mov
cwtl
movsl
in
shlb
bound
ds
inc
cltd
aad
jl
inc
nop
add
add
mov
mov
mov
into
cmpsb
mov
mov
push
imul
rclb
mov
rcrl
dec
stos
popf
mov
lods
jno
jns
push
jmp
in
mov
inc
fcoms
lods
jg
repnz
daa
sbb
bound
mov
xor
bound
idivl
mov
or
cwtl
mov
enter
jo
mov
dec
lcall
lret
xchg
pop
daa
lds
mov
xchg
add
stos
ret
push
loopne
jnp
out
out
aaa
jecxz
mov
stos
push
repz
imulb
test
gs
inc
pop
push
or
lods
lret
fsubp
jne
mov
pop
mov
xchg
iret
inc
es
cmp
pop
cmp
sub
imul
int3
inc
call
cmp
xor
sub
pop
push
sbb
xchg
add
or
sbb
xchg
cmp
jbe
scas
push
push
jne
fisubl
pusha
push
nop
jo
fs
fcom
cmp
add
xor
les
cmp
aas
les
rcrl
inc
mov
xchg
dec
fwait
shl
test
jo
ficoms
imul
mov
jge
int
xchg
shll
cld
flds
gs
add
mov
xor
and
sti
imul
xor
pop
int
add
test
aas
mov
xor
ret
jns
inc
pusha
sub
js
xor
mov
leave
iret
push
roll
and
push
jae
pop
movsb
push
xor
xchg
jne
dec
hlt
call
andb
rcll
sbb
fcoml
mov
adc
dec
mov
repnz
in
cwtl
fiadds
jle
cmp
push
in
mov
push
jge
test
pop
push
cwtl
sbb
add
jg
and
dec
and
test
in
stc
out
cmpsb
in
mov
push
add
pop
jmp
mov
mov
enter
sahf
mov
lret
loopne
lret
mov
roll
fadds
mov
movl
out
mov
out
jno
and
repz
fisttpl
cmp
jmp
dec
fiadds
aaa
lahf
cmp
push
inc
mov
fdivrl
js
jecxz
mov
mov
cltd
sahf
test
pop
mov
stc
or
xor
xor
ljmp
je
lea
cli
jne
test
mov
inc
jbe
inc
mov
or
jnp
jno
and
popf
xchg
jle
xor
push
pushl
push
jmp
mov
inc
dec
out
sub
pop
in
inc
jnp
push
dec
xchg
sub
xchg
push
stos
mov
idivb
mov
dec
jne
lret
fs
mov
out
lds
mov
mov
xor
divl
jg
shlb
xor
mov
bound
pop
ss
aam
push
bnd
mov
push
or
push
push
xor
fists
lret
push
ret
xchg
rorl
insl
cmp
sbb
push
mov
imul
mov
aaa
pop
lcall
aas
pushf
in
adc
dec
sub
imul
cmpsb
scas
or
push
sbb
aas
iret
or
pop
imul
and
sahf
pop
add
mov
pop
adc
xchg
imul
pop
mov
popf
mov
sub
fadds
repz
jns
add
xlat
jbe
inc
call
mov
jecxz
push
cs
shl
cmp
pop
mov
je
scas
push
jb
sbb
gs
add
jg
cmp
mov
jns
dec
cmpsl
mov
jnp
out
addr16
sahf
jp
add
movsb
into
inc
inc
fisubrl
push
ret
sbb
xchg
stos
aam
cwtl
push
lret
in
hlt
add
mov
or
mov
pushf
cmp
or
xchg
cltd
cmp
lahf
ret
add
cs
cmpsl
xchg
mov
dec
rclb
xchg
inc
daa
jno
xlat
and
push
cmp
into
mov
and
dec
jae
inc
xlat
test
push
adc
jle
jno
sbb
mov
popa
dec
sbb
mov
fisttpll
dec
inc
movsb
xor
xchg
pop
lea
jmp
das
std
xlat
xchg
lcall
cmp
lea
frndint
ljmp
movsb
lcall
in
fdiv
cwtl
leave
sbbl
lahf
out
cmp
mov
imull
insl
and
xor
pop
sub
pop
std
dec
cmp
sub
repz
dec
cmc
fwait
les
mov
and
inc
out
jecxz
adc
push
stos
pop
mov
fdivrs
ljmp
sbb
or
add
bnd
ss
push
cmp
aaa
sub
jle
dec
add
sub
jp
cli
sub
jmp
insl
cmp
cmp
push
imul
lahf
lret
rcrb
rcll
pop
push
mov
pop
add
cwtl
sub
fdivrp
adc
add
fcoms
int
adcl
xchg
test
and
xor
inc
jns
jmp
js
loop
std
inc
roll
sub
pop
xchg
setno
adc
insb
ret
add
out
dec
push
out
push
test
cmpxchg
pop
sub
cwtl
ljmp
pushf
out
jne
and
and
xor
cmpsb
sbb
inc
mov
push
xchg
stos
test
xor
out
push
shrb
or
and
neg
push
xchg
pop
dec
mov
out
push
shl
mov
inc
xorb
cwtl
loopne
jg
mov
addb
lock
mov
fbld
cli
movsb
out
dec
mov
incb
ret
push
out
pop
jmp
out
add
and
in
fisttpll
mov
xor
or
loop
shll
call
sbb
or
xor
adc
cltd
bound
cltd
sub
xor
jo
scas
jg
into
test
sahf
mov
ss
out
push
imul
mov
sbb
pop
xor
stos
sarl
sub
scas
or
bound
adc
ror
push
cld
mov
scas
or
mov
ja
nop
or
mov
stc
mov
mov
dec
mov
mov
jnp
sub
dec
out
jno
pop
xchg
rcll
jg
lock
nop
fdiv
mov
sti
sub
aaa
pop
adc
inc
xor
test
sahf
pusha
gs
xor
clc
int3
jl
lahf
lods
mov
lods
divb
sbb
lea
fs
push
push
shr
push
cmc
int3
fsubp
pop
insl
inc
inc
jl
daa
or
call
loopne
jne
adc
sarl
outsl
push
mov
cmpsb
stos
add
in
aaa
lea
jne
lds
aam
add
pusha
sub
xor
cli
push
fadds
cmpsl
icebp
arpl
mov
cltd
mov
and
inc
pop
nop
rorb
mov
sub
cmp
push
or
divl
add
xlat
sbb
or
sub
popa
addr16
test
outsb
repz
dec
mov
ljmp
push
int
xlat
dec
adc
ljmp
in
out
cwtl
test
loop
sahf
nop
nop
sbb
cltd
das
and
cmp
xor
or
ss
add
fcomps
aas
jne
xchg
popa
mov
es
out
cmp
les
in
add
aas
pop
pusha
jns
pusha
pop
ds
dec
sbb
pop
loopne
stos
mov
add
rorl
sub
mov
mov
fstl
xor
hlt
in
pop
ds
addr16
mov
cs
cli
adc
mov
push
fiadds
ja
scas
out
shll
in
xorl
or
xchg
or
inc
pop
or
push
loope
rclb
mov
je
lds
mov
orl
out
dec
push
aaa
nop
xchg
outsl
mov
mov
push
stos
and
dec
dec
mov
xchg
mov
sub
xor
jg
mov
das
stos
imul
sti
out
movsl
xchg
out
pop
or
int
outsl
mov
cmp
sahf
mov
xor
clc
xchg
or
cmp
je
xchg
fisttpl
push
movsb
int
daa
mov
mov
mov
cld
sbb
xchg
jmp
jbe
sti
outsl
push
inc
or
jne
mov
int3
mov
add
jb
fiadds
add
cmc
or
pop
mov
push
push
cltd
je
pop
in
add
push
cmp
mov
movsl
leave
or
movsb
add
dec
jno
lods
inc
loop
fnclex
jne
inc
push
xchg
xchg
adc
mov
in
mov
or
das
movb
std
push
jg
hlt
xor
mov
or
dec
pusha
popa
bound
aaa
popa
dec
dec
mov
adc
lea
push
jg
sbb
mov
mov
sahf
xor
sar
jae
in
mov
push
jge
ret
ret
cmpl
inc
cmp
mov
jne
nop
push
call
in
add
enter
dec
and
mov
inc
ljmp
pop
pop
inc
xchg
lods
cmp
adc
pop
rcr
jo
js
mov
xor
xchg
inc
repnz
idivl
call
sub
sbb
add
cwtl
add
inc
fsubl
xchg
xchg
xchg
pusha
rcr
pop
sbb
adc
out
lods
lret
pop
dec
adcl
ljmp
pop
jnp
push
jecxz
sub
jmp
aas
fimuls
pop
imul
out
sub
test
add
shlb
lea
dec
xor
movsb
cld
inc
push
xor
or
push
sahf
mov
or
jge
jl
or
cmc
mov
xchg
add
test
fisttps
orb
into
jg
pop
jp
cld
int3
sub
cmc
mov
xchg
ret
mov
hlt
inc
xchg
push
add
jns
cmpsb
fldcw
jl
stos
xchg
xor
pushf
push
shlb
jnp
push
and
lods
or
mov
sbb
inc
or
cmp
outsl
cmc
mov
add
imulb
pop
xchg
cmpsl
mov
sub
sbb
aaa
das
fs
cmp
xchg
push
push
inc
push
push
inc
jecxz
cmp
aam
insl
xor
or
mov
push
adc
clc
sar
pop
out
xorb
aad
mov
pop
std
push
push
fstpl
enter
mov
in
sar
push
fabs
call
or
mov
inc
add
push
insl
and
lds
jl
jp
mov
shlb
inc
mov
cmp
daa
cmp
fdivr
repz
add
xor
out
push
adc
jge
mov
adc
cmp
push
and
inc
enter
mov
mov
mov
xchg
sarl
add
lcall
nop
ret
scas
fistps
jbe
xchg
or
cmp
sbb
and
arpl
subl
xor
cmp
or
insl
push
mov
inc
loope
mov
xor
sbb
cmp
pop
loope
gs
push
loopne
frstor
mov
cltd
mov
cmp
jmp
cmpl
xchg
sbb
push
jnp
push
mov
leave
ret
adc
sahf
lahf
sbb
cs
add
sub
inc
leave
inc
sub
and
inc
data16
rcll
mov
inc
mov
inc
inc
out
lock
jns
lahf
push
adc
push
aad
xchg
mov
jns
jle
stc
jecxz
ljmp
jge
sbb
daa
mov
jo
divl
test
inc
mov
outsl
test
scas
loopne
mov
imul
out
add
push
inc
int3
mov
and
aaa
repz
fcompl
sahf
fsub
pop
xchg
cmp
adc
mov
aam
outsb
adc
jle
sub
js
movsb
inc
mov
fst
xchg
fisubs
out
push
xchg
insl
out
out
jnp
dec
sub
es
cwtl
mov
push
sub
js
cmp
inc
xchg
in
sbb
pavgb
fnstenv
mov
std
dec
jl
mov
lds
les
mov
add
inc
icebp
adc
aad
flds
cmp
not
pushf
cmc
mov
paddsw
out
es
lret
jg
fwait
in
es
push
sub
jb
bound
stos
aad
add
movsl
clc
mov
cli
pop
jmp
out
xchg
push
sbb
jge
lods
or
ds
push
or
inc
pop
sbb
pop
orl
scas
sar
out
data16
js
in
jae
int3
mov
cmp
pop
pop
mov
shl
or
cwtl
mov
cs
test
sbb
out
mov
cmp
sarb
xchg
inc
jmp
or
cmp
inc
ret
sti
and
ja
loopne
mov
and
lahf
fldlg2
js
mov
sbb
pop
pop
sbb
add
test
out
adc
arpl
arpl
shrb
pop
lret
mov
sub
mov
or
xchg
inc
and
sarb
es
sub
cs
movsb
mov
xor
lret
dec
push
lret
sub
mov
pop
insw
outsl
dec
mov
arpl
push
sbb
into
popf
ja
mov
loope
cli
lods
push
jno
ja
inc
shld
and
sbb
and
add
ja
sub
lret
testl
outsb
push
inc
sub
mov
clc
les
push
mov
and
outsb
mov
lods
scas
sbb
jne
push
jle
dec
jg
jge
ja
cltd
push
and
fiadds
scas
xchg
push
into
pop
popa
dec
adc
test
test
xor
mov
pop
cld
pushf
xchg
inc
jnp
addb
jl
mov
inc
sarl
jns
jns
std
scas
jne
ret
pop
test
sub
pop
add
dec
sbb
ljmp
and
std
pop
jg
jle
mov
jl
sbb
dec
sub
inc
and
clc
push
es
lahf
mov
aaa
adc
mov
mov
ja
loop
adc
jmp
mov
xchg
fdivrl
in
mov
lahf
lret
push
push
fstp
pop
lods
push
sbb
jmp
cmp
mov
addb
pop
sbb
out
out
loope
inc
mov
shlb
jg
ljmp
loope
jge
xchg
inc
xchg
inc
inc
sti
mov
pop
out
int3
shlb
repz
decl
in
pop
mov
push
xchg
movlhps
sbb
xchg
jbe
addr16
sbb
shlb
pop
xchg
sbb
clc
or
mov
pop
pop
mov
cmp
sbb
cmc
aaa
cmpsl
cmpsb
inc
hlt
lcall
into
int
sbbb
loopne
jg
mov
cld
pop
sub
stos
push
mov
cmp
fisttps
cmp
lea
jbe
sub
shrb
cmc
dec
jb
test
mov
or
sub
mov
out
iret
lock
cmp
push
cs
jno
mov
daa
push
push
jns
inc
stos
sbb
andb
mov
pop
enter
adc
jp
sub
cmp
inc
inc
jmp
inc
push
les
js
push
jbe
sub
lret
jns
cmp
dec
pop
lods
loope
pop
adc
sbb
js
stos
xchg
xor
sbb
in
test
xor
inc
addr16
mov
imul
xchg
call
mov
out
add
dec
adc
mov
and
sbb
js
mov
inc
sti
ljmp
mov
decl
sbb
stos
sub
pop
std
repnz
loopnew
repnz
jne
sbb
lods
sbb
cmpsl
adc
std
cmp
sub
jecxz
clc
cli
jae
or
jo
ss
in
loopne
imul
pusha
push
in
pop
nop
sbb
lcall
jns
xor
pop
pop
mov
and
mov
test
in
mov
and
in
inc
jns
test
mov
andb
cmp
test
push
jecxz
jle
mov
and
sub
sbb
inc
mov
mov
dec
mov
xor
cmp
shrb
sub
dec
xor
fildll
cmp
mov
add
xor
icebp
mov
in
pop
in
mov
ds
arpl
inc
or
stos
test
outsl
inc
int
inc
mov
jnp
dec
xor
enter
shrb
or
imul
ds
push
test
dec
pop
outsl
jns
dec
add
in
out
xchg
pop
lcall
mov
xchg
push
fsubrs
out
stc
in
mov
lock
mov
push
dec
insl
sub
hlt
pmulhw
sub
sub
divl
or
mov
jmp
daa
fsub
jno
xchg
xor
jb
jp
cmpsb
inc
stc
fsubrl
jnp
fdivs
xor
cld
repz
jae
lahf
push
adc
sub
mov
lret
in
sub
inc
aaa
pop
sbb
in
js
mov
xor
xchg
adc
fnstcw
scas
adc
mov
dec
rorl
test
into
adc
jno
out
push
dec
adc
mov
mov
mov
sbb
xchg
sbb
jg
sbbb
ss
xrelease
jmp
cltd
mov
test
xchg
push
and
push
pop
sbb
xchg
repnz
int
insb
sbb
jge
sub
cmp
jne
mov
fisubs
sbb
fucompp
xor
pushf
jp
and
mov
adc
loopne
enter
fistpl
ja
xchg
jo
insl
xchg
popa
rcrb
mov
fwait
sub
ljmp
mov
jle
lea
dec
or
push
scas
or
or
push
push
lds
mov
lret
flds
fnstsw
push
add
mov
in
add
mov
pop
enter
adc
and
xor
and
dec
and
add
addr16
mov
call
or
adc
filds
leave
imul
sti
outsl
aas
data16
loop
mov
push
in
pop
adc
aas
dec
mov
mov
push
mov
push
shll
daa
mov
push
pop
pop
ss
movsl
add
add
mov
xor
jns
pop
xor
sub
rol
dec
or
jno
inc
test
fistps
iret
mov
jp
cs
push
jnp
or
fmull
push
gs
inc
repnz
add
ret
cwtl
std
out
and
mov
dec
adc
lcall
fs
lcall
pusha
pop
mov
dec
test
mov
push
xchg
inc
pop
push
push
std
es
adc
dec
cmc
mov
dec
arpl
sub
mov
xbegin
lods
jns
scas
push
sbb
shr
in
mov
cmp
xor
mov
jnp
jl
jne
mov
xor
xchg
sbb
jb
mov
cs
cwtl
cmp
stc
sbb
leave
push
sub
mov
mov
cmpsl
cld
cli
loop
push
repz
lods
pop
or
movsl
xor
outsl
pop
out
cltd
outsb
fwait
push
push
mov
sbb
lea
ror
push
dec
push
insl
out
sub
addr16
jle
test
mov
pop
stos
adc
mov
stos
and
outsl
or
dec
push
push
pop
cli
dec
adc
jne
push
repnz
lahf
fiadds
outsb
push
scas
call
xor
enter
push
xor
or
andl
xchg
ljmp
or
push
mov
les
add
sti
mov
das
pop
push
pop
shlb
add
in
lret
add
stos
nop
or
imul
xchg
jns
loop
es
dec
push
clc
xorb
push
repz
xchg
testb
add
mov
xchg
ficoms
icebp
adc
fs
mov
or
jl
dec
pop
sub
pop
outsl
sti
and
repz
inc
sbb
pop
mov
pop
cld
mov
mov
das
scas
jecxz
ret
call
dec
add
mov
add
shrb
cmpl
nop
xchg
js
out
stos
test
sti
fistps
cli
or
aad
xchg
jmp
faddl
fcoml
mov
imul
clc
bound
push
repnz
fwait
clc
jns
cmp
imul
lret
pop
add
xor
out
mov
or
pushf
cmp
das
out
push
lret
out
push
out
cli
in
mov
and
aad
jecxz,pt
icebp
shlb
xchg
ss
ja
cmp
push
dec
xchg
lods
sahf
or
adc
fs
adc
ret
push
push
lods
lret
xchg
adc
scas
in
mov
insl
jl
inc
lahf
ds
std
mov
aas
sbb
push
dec
or
lock
add
out
sub
pushf
push
test
sarl
or
in
lock
pop
movsl
xchg
and
imul
sbb
lcall
test
test
int3
mov
push
ret
cmp
dec
imul
lahf
mov
mov
jp
movsb
frstor
pop
mov
fsubr
sti
aaa
outsl
pop
cmp
pop
lcall
repz
fcomp
xchg
dec
stos
out
add
mov
cmp
rclb
mov
pushw
push
inc
jp
jge
cmpsb
pop
enter
fcoml
cltd
pop
clc
dec
xchg
xchg
imul
jge
jnp
sarl
out
push
add
ja
inc
xchg
dec
jno
fsubrl
out
push
inc
add
int
add
test
dec
loop
iret
mov
data16
aaa
inc
adc
aam
jle
loopne
add
cmp
or
pop
jge
cmp
or
fnstcw
push
movsl
rolb
add
movsb
stos
dec
arpl
clc
xchg
cmp
push
mov
repz
lret
outsb
push
jecxz
sbb
xor
xchg
nop
pop
shlb
and
cmp
push
jecxz
pop
ret
mov
push
xor
mov
cmp
jecxz
test
mov
dec
mov
sbb
and
ffreep
pushw
pushf
jmp
scas
pop
or
sbb
pop
and
stos
enter
mov
jl
add
mov
push
in
adc
push
xor
aas
stc
mov
imul
push
xchg
mov
sahf
mov
xchg
adc
pusha
adc
into
adc
mov
in
mov
bound
sahf
inc
ret
or
shlb
mov
jne
push
gs
pusha
idivl
ljmp
xchg
inc
mov
mov
das
sub
pop
push
shr
in
sub
pop
ljmp
out
dec
cmp
test
or
popa
mov
push
sbb
pop
aas
inc
or
adc
loop
into
sub
inc
testb
mov
icebp
or
test
mov
fmull
xor
mov
pop
inc
and
pop
xor
jmp
repnz
mov
lret
and
cli
xchg
jns
jg
int3
jmp
cmp
imul
loopne
xlat
add
mov
mov
xor
shll
sbb
dec
test
jno
insl
sub
lret
test
lods
mov
dec
aaa
outsl
pop
in
gs
dec
loop
mov
in
push
daa
sbb
nop
iret
cmp
mov
nop
mov
mov
call
pop
and
imul
dec
imul
pop
add
push
xchg
mov
or
lcall
inc
cmp
in
testl
loope
into
hlt
inc
sub
out
cmp
mov
in
shrl
ja
mull
and
xlat
lods
cmp
testb
int3
movsl
push
test
sub
test
push
repnz
data16
push
js
in
aas
dec
jne
mov
cmp
popl
mov
mov
jl
lcall
mov
lods
leave
scas
outsb
lea
push
xchg
lea
or
xor
aaa
mov
mov
in
cld
cmp
in
mov
mov
fimull
inc
jb
rep
les
mov
fdivrs
mov
pop
fists
cmc
imulb
addr16
scas
sbb
fwait
fwait
pop
rcll
cmp
aas
lret
movsb
inc
and
cmp
ficoml
and
inc
stos
out
loop
mov
cmpsb
jns
pop
jo
mov
xor
add
jl
jbe
cmpsb
xor
popf
mov
xor
ds
je
and
mov
dec
and
enter
dec
push
inc
cli
push
mov
leave
push
scas
clc
pop
xchg
mov
inc
jb
imul
out
sahf
js
mull
cmp
out
loope
dec
cwtl
in
or
mov
shlb
xor
test
scas
cld
dec
and
inc
inc
insb
je
dec
int3
je
hlt
lcall
push
pop
imulb
sarb
cmpl
ss
repz
jne
ss
loope
add
xchg
pop
and
fsts
test
pop
call
push
sub
xchg
jecxz
dec
pushf
into
ds
jmp
mov
inc
ror
pop
hlt
mov
or
insl
pop
stos
and
stos
aam
sti
pop
xor
inc
mov
aaa
xchg
sub
push
mov
push
clc
pop
shll
xor
jp
adc
mov
int
outsl
lret
cmpsb
stos
shr
lods
cmpb
pop
mov
pop
push
jnp
scas
mov
fcompl
clc
hlt
leave
sub
rorb
inc
mov
push
cwtl
and
push
ss
enter
cs
ljmp
arpl
in
insl
imul
jmp
cmp
es
xchg
mov
lret
stos
jecxz
cmp
lds
add
adc
push
lcall
inc
dec
pop
add
scas
imul
mov
mov
jae
xchg
jecxz
sbb
sbb
hlt
loope
xchg
add
les
addr16
adc
xor
test
lods
clc
arpl
rcrb
pop
in
pop
inc
jg
mov
repz
add
push
xor
cltd
sbb
cmpsl
call
sbb
lret
mov
push
or
sahf
jnp
in
sti
mov
xor
or
lock
xor
cs
adc
fsubl
mov
out
jl
push
dec
mov
stos
mov
cmp
push
mov
push
add
pop
cmp
jns
and
xchg
xchg
xchg
lret
xor
imul
mov
pop
test
inc
adc
test
rorl
push
or
pop
push
mov
arpl
ljmp
cmp
std
xor
shrl
cltd
add
std
lds
loop
cmpsb
out
shlb
dec
xchg
pop
repz
xchg
mov
outsl
dec
cmpb
dec
lret
dec
scas
stc
mov
shlb
jno
push
pop
mov
loope
scas
in
mov
out
pop
lahf
das
mov
push
xor
sub
ljmp
adc
je
jge
xchg
into
push
push
es
cli
push
negl
push
sbb
jo
std
pop
cmp
ror
movsb
ljmp
js
cs
fdivs
stos
outsl
stc
or
cmp
mov
aaa
psrlq
fwait
sub
pop
loop
popa
lds
movups
out
sbb
mov
dec
xor
movsl
cvttps2pi
cmp
mov
xchg
call
lcall
or
es
gs
lds
xchg
das
inc
jmp
fwait
lock
xlat
adc
jnp
shll
ss
dec
enter
push
iret
add
jae
mov
pop
lds
jmp
xchg
push
adc
loopne
in
jne
mov
and
and
jl
pop
cmp
and
ds
mov
push
push
xchg
daa
mov
xchg
xchg
in
jp
inc
aas
daa
inc
inc
jb
jmp
daa
push
lods
pop
cmpsb
enter
mov
pop
adc
inc
int3
dec
sbb
adc
in
and
push
addb
adc
loope
pmaxsw
jae
lods
popf
adcl
adc
ja
mov
sbb
lods
test
call
dec
aad
mov
ljmp
adcb
sbb
push
mov
pop
cmc
dec
in
xor
clc
mov
out
arpl
jge
movsb
clc
in
pushf
rcll
jl
mov
adc
cmp
aam
int
addr16
add
inc
push
cmc
iret
xchg
adc
xchg
cmpsl
sub
xor
inc
or
jnp
popf
add
pop
xchg
nop
jb
sub
sbb
inc
adc
pusha
subl
jge
pushf
mov
and
enter
dec
and
mov
cld
xchg
out
sub
mov
jge
sub
cmc
mov
fldt
add
or
xchg
out
inc
lret
add
in
xchg
outsb
scas
adc
lods
out
int
repz
inc
pop
and
cmp
inc
xchg
mov
outsl
cmp
dec
sbb
testl
pop
in
dec
popa
iret
cmp
outsl
lods
test
sbb
es
rorl
data16
cltd
cld
jb
pop
fisttps
dec
and
in
mov
sarb
push
jno
stos
addr16
int
loop
nop
aaa
cld
xchg
popa
xchg
sub
jb
mov
xor
das
jecxz
mov
aad
add
mov
jge
jmp
shll
fistpll
jg
int3
hlt
in
or
fistpl
and
sub
mov
in
rcr
xchg
jmp
xchg
mov
jbe
pop
nop
sbb
jne
ljmp
cmp
sub
xchg
sub
call
pop
push
test
add
xchg
xchg
mov
cltd
xchg
out
imulb
in
push
pop
add
sbb
or
aad
mov
outsl
mov
outsl
pop
sub
push
push
mov
cmp
loop
add
mov
ljmp
dec
mov
cmp
sti
notb
addl
ret
movaps
adc
cmp
ret
stos
cmpsb
xchg
inc
je
sbb
mov
test
loop
cli
push
xchg
inc
and
ljmp
ljmp
icebp
aad
push
pop
fidivl
out
or
mov
aad
icebp
mov
mov
or
cmp
je
aaa
push
mov
sbb
and
repnz
lret
sbb
and
lods
sub
sub
call
sub
cmc
popf
mov
les
jae
add
add
lods
push
pop
or
repnz
aam
pop
mov
cmpl
add
pop
adc
mov
add
out
arpl
cltd
mov
ror
jecxz
out
insb
adc
fs
addl
push
jns
mov
leave
repz
sub
stc
add
rcll
rcrb
adc
stos
lock
sbb
mov
mov
in
mov
mov
icebp
mov
sbb
mov
mov
sahf
cmp
in
enter
xchg
inc
lods
push
sbb
mov
les
cmp
addr16
enter
outsb
stos
xchg
xor
into
paddusb
mov
inc
and
jne
jae
push
sbb
cmpsb
sbb
xchg
jl
pop
cmp
inc
cmp
xchg
inc
mov
imul
mov
add
sbb
jmp
aam
andl
ds
jmp
inc
ss
xchg
jge
ss
lock
in
out
sarb
xchg
and
push
push
test
stos
mov
mull
sbb
jne
scas
or
lds
ds
aas
lods
aas
hlt
lock
incb
das
fwait
hlt
sti
inc
iret
mov
xor
jno
xchg
jp
add
rcrb
js
jecxz
loopne
in
clc
fnsave
rolb
outsl
dec
xor
or
add
insl
out
pop
ja
in
mov
push
cld
jae
pop
lods
je
inc
xlat
dec
fstp
and
dec
xor
sbb
loope
bound
add
lds
in
rclb
add
sbb
push
ljmp
out
pop
int3
rol
stc
dec
std
pop
or
lret
test
arpl
adc
add
aas
aaa
ljmp
cli
cmpl
push
lods
mov
out
aaa
jns
xlat
sub
jmp
ljmp
cmpsl
push
mov
xor
out
cmp
sbb
jmp
adc
scas
mov
cltd
ja
lret
jne
push
xor
in
fdivs
and
fcompl
adc
notb
pop
insb
mov
inc
jle
iret
movsb
fildll
sarl
dec
mov
lods
and
shlb
xchg
push
adc
jbe
mov
lea
add
or
pop
pusha
adc
sub
popf
popf
arpl
cmpsb
xor
cli
sub
lea
repz
xchg
cmp
sub
addb
ret
lret
insb
add
adc
jmp
pop
cs
std
pop
or
aas
jnp
cwtl
daa
mov
add
nop
push
addr16
ds
das
loopne
jp
repz
mov
sbb
inc
lret
bound
cmpsl
xor
data16
add
je
lret
stc
xchg
repnz
lods
mov
addr16
pop
arpl
call
imul
or
shll
mov
xor
push
jecxz
inc
sub
jecxz
lods
cltd
jno
push
js
iret
mov
jecxz
sbb
xchg
outsl
mov
pop
in
or
lret
sbb
clc
push
das
iret
jp
push
cmpsb
sbb
adc
in
cmp
xor
mov
mov
das
cli
mov
scas
movsl
mov
jp
mov
je
jno
ror
cs
mov
gs
aas
call
movsb
push
ss
shlb
test
les
pusha
jl
jno
insb
ss
loope
std
js
mov
cmpsl
mov
jbe
xor
push
dec
jno
mov
adc
mov
xchg
jl
lahf
mov
mov
sub
inc
fistps
mov
lods
insl
push
push
sub
test
imul
bound
xor
repnz
les
int3
push
out
mov
sub
add
inc
je
and
scas
mov
test
ja
and
in
or
popa
cltd
daa
sti
add
push
and
sbb
xchg
sbb
dec
popw
dec
or
js
mov
sbb
scas
imul
out
imul
lcall
icebp
sub
sub
adc
daa
inc
rclb
fdivl
loopne
sbb
add
test
push
out
andb
add
mov
popl
popf
movb
pop
mov
xchg
mov
and
jmp
cmp
out
cmpsl
ret
add
cmp
fldl
repz
dec
xor
pop
and
push
fdivrp
mov
pop
movsb
cld
and
push
ja
call
cmpsl
iret
xor
cmc
jmp
jp
push
jecxz
sahf
cltd
stos
outsb
pop
gs
ficoms
ret
stc
mov
add
insl
pop
rclb
outsl
sub
mov
pop
jne
cmpb
xchg
dec
enter
dec
add
bound
popf
ret
aaa
je
clc
div
inc
fisubrs
mov
adc
dec
iret
lcall
sub
mov
cmc
jns,pt
mov
pop
sahf
inc
stc
out
fucomip
enter
mov
lret
mov
cmpsb
mov
push
mov
mov
ficoml
sarb
ss
cmp
inc
xchg
repz
loope
mov
daa
jb
in
nop
pusha
js
add
stc
icebp
add
into
movsl
jecxz
pop
pop
add
ds
lods
jne
mov
add
jno
sbb
fwait
jo
and
push
mov
in
dec
fiaddl
in
push
dec
dec
int
cwtl
shrl
jbe
movb
mov
ljmp
adc
lahf
scas
mov
jns
mulb
scas
pop
push
inc
xor
mov
cmp
out
subb
push
xor
out
icebp
call
sarl
push
pop
push
xchg
mov
lea
stos
and
inc
adc
dec
mov
mov
cmp
ds
push
cmp
cwtl
pop
lods
adc
std
inc
push
into
or
sarl
lahf
jmp
dec
fwait
dec
mov
leave
sbb
sub
xchg
add
mov
jle
sub
jge
rolb
je
mov
mov
dec
mov
into
cmp
inc
test
loope
shl
push
or
add
mov
ret
pop
xor
enter
xchg
dec
push
popa
rolb
lret
mov
adc
std
inc
sbb
fstp
jge
xor
test
pop
inc
pop
test
add
enter
cmp
pop
mov
adc
fisubrl
jnp
xor
imul
mov
inc
and
js
movsl
inc
push
cwtl
test
sub
pop
int3
cmpsb
fisttps
adc
mov
adc
mov
es
push
xchg
mov
test
dec
mov
and
out
repnz
icebp
pusha
sub
jl
or
push
inc
ret
shlb
outsl
adc
sub
mov
loop
cwtl
cltd
divb
push
add
sub
and
push
inc
push
adc
jmp
fstpt
jne
adc
mov
pop
cld
addr16
sbb
push
stos
pop
std
add
shrb
scas
ret
out
mov
xor
hlt
pushf
aaa
cli
cmpsb
test
sbb
ljmp
push
pop
xor
xorb
gs
leave
popf
fs
out
pop
cs
push
out
cwtl
and
inc
addr16
jmp
dec
jmp
les
and
dec
lods
xor
pop
aam
jp
inc
sti
xchg
mov
pop
fdiv
or
add
fimuls
ljmp
mov
xchg
add
ljmp
add
fwait
cli
filds
dec
dec
test
in
sub
loopne
aad
in
lods
paddq
cmpb
sahf
hlt
dec
addr16
jl
iret
cwtl
loopne
rcr
test
sbb
xlat
mov
ja
cli
enter
lods
clc
xor
aas
xor
cmp
movsl
shrb
popa
add
xor
imul
or
pop
aaa
adc
aam
push
ja
addr16
push
inc
jns
rolb
mov
mov
or
hlt
stos
imul
mov
shlb
adc
mov
cltd
dec
scas
fstps
mov
mov
inc
sbb
jnp
pop
aas
repz
fstpt
addb
sbb
pop
and
outsl
prefetch
adc
xchg
xchg
sbb
daa
cmp
mov
lret
repz
div
or
push
xchg
outsl
push
adc
inc
push
dec
dec
pop
pop
dec
mov
js
pop
dec
xchg
shll
sahf
insb
int3
sub
subl
jae
xor
mov
or
std
mov
jge
push
mov
dec
inc
test
pop
loop
dec
push
jp
or
sbb
cs
lods
mov
lds
roll
add
cld
or
incb
cwtl
xchg
inc
lds
outsl
fists
mov
das
fisttps
fcmove
sti
mov
adc
addl
add
loopne
jg
cmpsl
xchg
mov
imul
cmpsb
outsb
movsl
popa
je
mov
or
lods
ret
cwtl
ret
xor
xchg
loopne
addr16
mov
aas
call
push
dec
push
lcall
cli
mov
enter
inc
sbb
jae
mov
and
ljmp
cmp
sahf
lock
imul
push
pop
das
das
and
bound
sahf
bound
addl
xchg
cmp
pusha
dec
dec
dec
xlat
loop
call
mov
jmp
xchg
jle
jg
xchg
inc
mov
imul
sub
pop
mov
subl
push
cmp
scas
inc
addr16
imul
dec
adc
inc
and
seta
cwtl
aad
fucom
cmp
mov
enter
dec
jns
mov
imul
out
inc
mov
cmp
aam
rcrb
adc
mov
mov
ja
shr
out
pop
xchg
loop
js
test
jne
int
cmp
mov
lcall
ss
xor
dec
and
mov
sub
adcl
ror
dec
pop
xor
xchg
fcmovb
lahf
or
lret
cmp
test
jbe
lret
ja
dec
orb
xchg
or
call
push
push
adc
jmp
fstpt
xor
cmp
sbb
test
mov
adc
sub
mov
das
and
push
xchg
aam
sub
imul
push
cld
mov
mov
mov
xor
hlt
std
ljmp
mov
jmp
lahf
pop
sub
dec
cmp
push
ret
sub
push
cwtl
shrl
jecxz
xchg
mov
pop
add
sbb
jp
ss
or
adc
push
xor
xchg
fisubs
fwait
push
scas
fnsave
cmp
xchg
mov
xlat
mov
fwait
dec
jecxz
add
push
arpl
inc
mov
cwtl
jnp
pop
dec
nop
popa
xchg
int
and
push
adc
shlb
pop
insl
out
scas
adc
mov
jo
mov
add
xchg
ficomps
leave
movsl
lcall
lcall
stc
pop
inc
pushf
pop
stos
dec
or
cmp
lret
loope
mov
loope
sarb
adc
mov
loopne
dec
jmp
jb
inc
pop
addr16
or
fsubrp
and
mov
mov
jmp
movsb
inc
push
add
inc
xor
loopne
dec
mov
aas
andl
cmp
pop
aas
adc
xchg
movsl
cmp
mov
mov
sub
sbb
mov
push
rcrb
les
xor
jl
cli
sbb
sbbl
push
icebp
mov
scas
inc
loope
sahf
xor
faddl
push
add
push
mov
mov
push
sub
mov
movsl
movb
push
jge
xchg
cltd
or
or
mov
mov
inc
std
xchg
call
pop
adc
movsb
std
into
mov
and
cwtl
cld
dec
mov
popa
pop
mov
push
fiaddl
mov
or
push
xor
push
stos
xlat
push
add
mov
pushw
push
jns
test
add
xor
mov
das
and
es
or
bound
cmp
fcomi
pop
imul
or
sub
push
int3
movsb
jl
xlat
cmp
cmp
jo
push
lret
in
pop
lock
imul
jmp
and
mov
out
es
stos
mov
jle
out
cmp
rcll
movsl
sbb
add
imull
mov
and
push
dec
adc
and
hlt
and
nop
sbb
push
mov
inc
dec
add
mov
jae
mov
cmc
mov
mov
rcrb
in
cmpsl
mov
push
xchg
sti
pop
mov
push
push
iret
sbb
je
nop
push
jecxz
sub
test
lock
mov
daa
add
icebp
sub
test
outsl
mov
lock
dec
jge
pop
cmp
jno
fstpt
out
push
jb
push
bnd
iret
inc
cli
push
jbe
add
cmpsb
sub
imul
push
ja
mov
sub
pop
or
mov
mov
adc
bswap
inc
xlat
sti
inc
aaa
imul
out
sub
sbb
cmovle
das
xchg
rorb
int3
dec
push
cltd
or
adc
add
in
jno
dec
aas
data16
js
iret
imul
sbb
adc
lret
clc
jb
test
cmpsb
cmp
cmp
imul
xchg
stc
or
cmp
and
xchg
mov
repnz
cld
in
dec
stos
cmpsb
mov
nop
mov
jo
hlt
hlt
or
cs
cmpsb
adc
testl
jno
scas
ss
in
sahf
push
mov
test
jecxz
mov
test
mov
or
jnp
mov
jge
sbb
dec
pop
adc
rclb
lret
push
mov
dec
or
cmp
sub
sti
je
popf
mov
insb
out
inc
daa
cmp
pop
pop
pop
jecxz
xchg
mov
fs
scas
sub
enter
jno
jae
pop
pop
mov
inc
dec
jno
stc
dec
imul
sub
sbb
ja
movsl
gs
daa
rcll
lahf
in
jns
mov
jmp
ja
pop
idivb
sub
sbb
cmp
or
adcb
lahf
imul
clc
add
mov
dec
sub
cmovns
lahf
mov
lds
jmp
ret
push
xchg
xor
jecxz
ds
xchg
push
test
movsl
imul
stc
insl
mov
sbb
imul
xchg
adc
add
push
test
sahf
jbe
mov
jecxz
in
xor
add
xchg
dec
repz
clc
shrb
pop
sbb
push
inc
cmp
mov
adc
fistpl
or
cld
sub
mov
mov
push
inc
or
mov
fnstsw
mov
mov
mov
xchg
sub
addr16
das
sub
in
dec
int
lea
daa
ljmp
sub
test
jo
jmp
lods
mov
sbb
pop
jp
addr16
sub
or
jecxz
jl
outsl
lcall
orb
xor
mov
in
cmp
test
or
cli
xchg
cmp
push
stos
mov
rorb
in
inc
lahf
jae
adc
jge
cmpsb
cld
pop
into
jecxz
jp
and
mov
dec
inc
shlb
mov
pop
xchg
cli
mov
or
xchg
das
sbbl
mov
push
js
inc
rcr
sbb
fisttps
popf
negb
pop
and
enter
lods
outsl
push
out
test
sbb
and
aam
mov
in
dec
xor
sbb
mov
insl
subl
mov
frstor
daa
cwtl
inc
andl
jnp
push
dec
cltd
inc
lret
icebp
xor
jmp
js
imul
fwait
jl
mov
jmp
fidivrl
push
fsubp
sub
adc
push
add
pop
xchg
rcl
in
test
addl
xchg
pushf
shrl
push
mov
jge
push
mov
push
xchg
roll
mov
or
mov
lods
jp
mov
sbb
ss
int3
adc
dec
std
mov
pop
sbb
xchg
bound
cmpsl
cmpsl
cmpl
pop
sbb
movsb
push
mov
nop
push
pop
movb
jge
jl
xor
or
push
push
mov
icebp
mov
pop
dec
xor
cmp
pushf
add
rcrb
adc
xchg
adc
sti
lahf
mov
insb
out
dec
dec
mov
pop
sub
and
mov
add
jg
sub
daa
mov
mov
cli
pop
sbb
push
test
pop
dec
sbb
push
inc
push
mov
jno
inc
outsl
xor
fcmovnbe
sbb
jbe
push
pop
adc
fcomps
sbb
sub
or
cmp
mov
sbb
jg
inc
add
pop
insb
andl
dec
pop
cmp
pop
mov
out
add
jno
es
rcr
or
push
aaa
or
and
dec
ret
stos
xchg
sqrtps
stos
mov
aaa
cmpsl
adc
jbe
aas
cmpb
cmp
pop
clc
mov
fnsave
inc
sti
xchg
fsts
pop
shr
xchg
sti
scas
adc
out
sub
cmc
sti
rorb
sub
mov
xchg
mov
sbb
in
add
mov
out
pop
aaa
jo
sub
cld
insl
add
xchg
mov
mov
inc
imul
std
mov
dec
or
mov
xor
call
sbb
xchg
adc
jl
paddq
mov
bound
or
push
call
lahf
mov
das
aas
gs
push
xor
push
pop
test
dec
enter
idiv
mov
sub
outsl
fisttps
cld
and
cmc
std
scas
sub
sub
or
xchg
xchg
popa
testl
mov
mulb
sub
pop
int
mov
xorl
jp
movsb
push
sub
mov
cli
jg
test
lret
lret
sti
xor
ret
fdivr
or
test
out
pop
adc
mov
cmp
push
dec
mov
dec
dec
dec
flds
jle
sbb
je
add
sbb
sbb
and
and
adc
inc
mov
or
sbb
or
pop
dec
inc
cmp
loop
inc
or
pop
jmp
push
or
xchg
adc
ror
inc
into
outsb
pushf
or
mov
lret
mov
sub
sbb
jnp
call
adc
bound
ret
scas
adc
divl
movsl
cld
xchg
lahf
inc
stos
cmpsl
add
push
clc
cmpsb
sbb
and
xor
adc
xchg
mov
mov
mov
movsb
xchg
sub
test
dec
adc
mov
inc
stos
loope
dec
shrl
xchg
js
testl
lods
push
mov
jp
sbb
in
jmp
dec
out
sub
data16
xor
shlb
or
icebp
ja
mov
xor
call
jne
clc
mov
xchg
lret
ljmp
inc
es
mov
inc
add
sbbb
hlt
out
xor
in
roll
jae
mov
mov
mov
dec
xor
dec
push
xor
outsb
das
lcall
xchg
adc
pop
mov
sub
mov
popf
sbb
lret
rolb
xchg
pushf
pop
mov
mov
gs
sti
ds
or
sub
imul
cmc
arpl
sub
lea
jmp
dec
inc
xorl
push
dec
rolb
cmp
mov
icebp
je
sbbl
nop
mov
push
pusha
out
push
cmpsl
xor
jl
inc
and
scas
push
scas
enter
push
or
pop
lss
mov
sbb
nop
xchg
subl
mov
dec
movsl
xor
lock
js
ds
xchg
mov
mov
fdivs
negb
xor
scas
mov
dec
and
arpl
test
xor
dec
mov
jb
addr16
ret
or
jnp
lods
aam
jl
test
dec
mov
add
ja
cmp
out
stos
inc
mov
sbb
add
or
mov
aas
sub
xchg
imul
dec
push
inc
and
xchg
mov
cltd
das
jo
push
adc
shlb
fisubl
add
ja
push
es
push
fadd
jne
xchg
iret
push
cli
cmp
pusha
outsl
jne
cmp
cwtl
jne
cmp
inc
and
mov
xchg
repnz
cltd
jle
xor
cmpsl
cltd
adc
mov
daa
rorl
add
mov
cmc
pop
push
ds
cmp
stos
pop
mov
repz
dec
and
inc
inc
sbb
xchg
pop
mov
mov
lcall
sbb
dec
xlat
loopne
adc
and
sbb
ds
mov
imul
int3
je
ljmp
sbb
inc
ja
push
push
stos
lret
cwtl
aam
out
or
bnd
sub
mov
in
adc
mov
fsubl
sub
movsl
xchg
push
cltd
jb
add
js
dec
out
movsb
aaa
xor
into
ljmp
popw
pop
and
fsubs
imul
cmc
pushf
push
in
dec
fs
mov
pop
fsts
mov
cli
cmp
mov
ss
jge
daa
add
je
jae
add
js
cmp
test
push
fcomps
enter
ss
cmp
dec
jle
xchg
push
ds
loope
call
lods
push
mov
dec
xchg
pop
pop
mov
pop
in
mov
mov
movl
nop
sahf
sahf
loopne
sti
mov
dec
shlb
lret
and
out
push
xchg
jmp
lcall
push
outsl
les
pop
clc
jb
add
jecxz
sub
in
pop
cmpsl
aaa
add
movsl
mov
or
adcb
pop
imul
fmuls
mov
jne
inc
sahf
add
incb
push
dec
dec
add
cltd
insb
ficompl
aad
sbb
push
push
and
jnp
push
sti
mov
xchg
test
repnz
movsl
xchg
and
test
xor
jle
sub
lret
leave
jnp
insb
in
shl
jae
pop
stc
js
push
lss
xchg
imul
lods
out
xor
push
pop
inc
iret
sub
sub
hlt
dec
mov
imul
jecxz
push
cld
mov
xor
and
dec
shll
arpl
insb
in
shrb
sub
xchg
sub
andl
jle
movsb
push
mov
data16
cmp
adc
roll
mov
dec
sub
and
popf
cmp
and
cld
mov
pushf
mov
push
and
pop
rcll
xchg
jb
mov
sub
pop
dec
inc
cmp
repnz
inc
sub
jecxz
jo
xchg
inc
add
adc
insb
test
push
lods
mov
jecxz
outsl
sub
inc
scas
in
loope
xor
mov
bound
rclb
lods
rcrb
cmp
addr16
lahf
shll
in
sbb
repz
push
stos
ret
enter
addb
pusha
hlt
stos
push
ficomps
sarl
aad
sub
aam
mov
loop
cltd
and
daa
jne
jns
loope
lods
cld
mov
hlt
xchg
sbb
adc
aas
inc
lea
fdivrs
dec
lock
pop
sbb
adc
adc
aas
cwtl
or
cs
imul
push
ljmp
mov
stc
enter
lock
ss
or
loopne
jo
cmpsb
add
subl
shl
mov
xor
rclb
icebp
leave
les
cmp
psadbw
xchg
dec
addr16
ret
aaa
fisubrs
stos
mov
and
psubsb
jo
cmc
or
outsb
jne
repz
loop
ret
ret
adc
cli
ja
in
xor
mov
in
add
xchg
mov
xlat
pop
lods
mov
sub
sub
nop
js
in
pop
add
dec
pusha
movsb
dec
dec
adc
pop
cwtl
mov
add
mov
roll
addr16
pop
mov
or
in
insl
inc
xchg
test
mov
leave
fisttps
scas
rorl
jno
loope
mov
lcall
repz
fldcw
popa
fdivrp
and
gs
jl
mov
push
fcoml
in
imul
or
call
xchg
aas
or
and
out
lcall
push
xor
and
outsb
aas
test
push
mov
rorb
in
mov
xchg
in
movsb
std
icebp
or
std
jae
call
fcoms
push
dec
sbb
xchg
cmp
test
adc
cmp
gs
cmpsb
test
add
movsl
fstpt
out
daa
lea
mov
insl
movsb
cmpsb
sub
or
in
sbb
cs
xor
pop
inc
cltd
pushl
jmp
into
cmpsl
adc
lock
push
aad
push
push
popf
mov
push
loop
mov
iret
addb
in
inc
out
sbb
xlat
in
sbb
loopne
fdivr
inc
hlt
sarb
jae
jns
iret
andl
pop
out
cli
imul
xchg
inc
out
andb
lret
shl
or
jp
popf
sbb
inc
test
ds
jmp
xor
mov
xchg
pop
cmpsl
inc
push
cmp
sar
int3
testl
push
cwtl
fstl
aas
fwait
cli
cwtl
mov
imul
in
int3
bound
testb
addr16
pop
xchg
push
test
push
rcrl
je
xchg
dec
and
aas
cltd
daa
test
shll
dec
push
pop
outsl
cmpb
pop
jbe
pop
aam
jne
gs
or
loope
add
fdivrp
xorl
cwtl
push
iret
inc
imul
inc
push
aaa
fdivl
jge
mov
subb
push
decb
addr16
mov
add
cmp
loope
ret
cwtl
aaa
jo
pusha
sub
rclb
xor
imul
adc
js
scas
xor
sub
cmp
xchg
test
subb
xlat
movsb
cmp
lcall
cwtl
push
rorb
lock
imul
bnd
outsb
pop
push
xor
mov
xchg
vpor
cwtl
mov
xor
jns
and
out
test
int3
cmpsb
imul
jp
xor
jge
fwait
ds
cmp
mov
sarl
push
inc
cli
inc
mov
pop
loope
cmc
rcrb
std
test
cmp
out
add
mov
addr16
jne
cli
or
mov
adc
arpl
mov
ja
push
fs
cmpsb
addr16
sbb
lret
fstl
sti
fstpl
shrb
and
out
in
adc
xlat
mov
sbb
push
fildl
pop
sbb
enter
mov
xchg
aad
test
pop
sbb
out
ss
orb
jle
mov
lahf
jp
xor
jo
addl
jno
sbbl
cmp
mov
ja
lock
mov
pushf
push
dec
leave
jne
sbb
dec
pop
out
cmp
mov
daa
mov
and
ficoml
pop
out
xor
push
lcall
jl
sbb
pop
incl
adc
cs
fnstcw
cmp
je
call
xchg
inc
popf
xor
dec
sti
jnp
adc
fnsave
repz
mov
std
and
xchg
in
divl
loope
stos
push
aaa
int
lahf
mov
mov
add
in
scas
adc
inc
lret
push
pusha
mov
insl
jne
inc
jbe
mov
dec
test
cs
and
jg
xchg
inc
mov
sub
outsl
sbb
mov
cmp
rol
sub
mov
dec
push
push
cmp
shll
nop
dec
adc
lret
out
out
pop
stc
cmc
call
mov
xchg
cmp
pop
cmp
or
test
xlat
inc
mov
add
pop
mov
cmp
bound
push
or
push
sub
or
cmpsb
addr16
rorb
repz
xchg
loopne
or
stos
addl
pop
mov
int
mov
add
fwait
jge
lret
sbb
mov
pop
rclb
cwtl
adc
daa
cld
adc
daa
sub
adc
adc
orb
es
fldl
mov
mov
orb
addr16
fsub
inc
rcl
dec
mov
bound
cmp
inc
mov
in
in
mov
jne
out
pop
mov
push
mov
fsts
mov
cs
aaa
xor
xchg
mov
loopne
rcll
int
push
xor
icebp
in
mov
pop
mulb
push
jae
inc
mov
mov
cmp
sahf
sub
out
xchg
mov
imul
inc
imull
jne
jle
mov
sub
dec
add
scas
add
mov
jo
pop
vcmpsd
adc
outsw
jecxz
cmp
outsl
mov
sub
int
push
or
nop
or
rcrl
out
mov
pop
mov
xchg
imul
sub
jb
mov
jno
or
idivb
popa
stc
inc
cmp
inc
dec
xor
test
cwtl
and
mov
mov
icebp
hlt
xor
pop
movsb
dec
imulb
orb
xchg
xchg
jb
fwait
push
xchg
iret
repnz
xor
or
inc
jmp
add
xlat
mov
scas
adc
sub
movsb
xchg
push
bound
mov
aam
stc
sti
imul
test
insl
dec
jg
or
pop
clc
lret
ret
mov
loop
shll
imul
insl
sbb
sub
jne
push
out
push
into
loopne
xchg
inc
jg
pop
and
inc
stc
out
dec
daa
and
adc
pop
jno
or
popf
clc
adc
loopne
sub
test
mov
dec
push
pop
lret
clc
lods
in
push
andl
gs
jg
jno
fcom
rcr
repz
out
scas
ja
mov
shlb
sub
adc
fsubl
jnp
sbb
ret
es
sub
dec
sti
daa
roll
in
cs
mov
push
nop
inc
mov
cmpl
rol
jnp
cmp
adc
arpl
stc
repz
add
nop
shlb
ret
jbe
orb
clc
cmp
popa
imul
loope
adcb
ja
movb
mov
pop
repz
fwait
shlb
pop
mov
pop
int3
int3
xchg
jne
jnp
rcll
mov
mov
or
dec
es
in
scas
lock
popa
push
cmpsl
bound
xchg
mov
stos
pop
sub
or
scas
mov
xor
mov
cmp
sbb
sbb
cmc
push
arpl
mov
dec
and
mov
jbe
sar
add
jb
inc
in
lds
adc
or
ja,pt
push
jbe
movb
lcall
cmp
mov
or
push
add
out
inc
xor
arpl
loope
mov
je
sub
cmp
fs
cmp
pop
sti
xchg
scas
jp
add
jne
outsb
dec
jno
scas
or
pop
or
jne
mov
call
test
xlat
push
mov
icebp
xor
iret
add
sarb
sahf
push
dec
cmp
xchg
fldl
cwtl
mov
mov
aam
lods
xor
insb
imul
ss
mov
ret
in
xchg
mov
loopne
sub
test
jl
add
scas
add
push
pop
dec
and
sbb
popa
add
mov
sub
push
cmp
adc
cwtl
and
ds
lods
stos
inc
xchg
xchg
adc
pop
ja
adc
loop
sbb
das
popf
loop
cmp
add
mov
pop
insb
rcrb
and
sub
push
adc
push
pop
popf
inc
shlb
cli
lret
ja
mov
or
jmp
aad
aad
int
mov
jb
fsubl
leave
pop
cmp
mov
and
in
sti
ror
and
adc
insb
imul
out
mov
lahf
and
call
shr
mov
mov
sbb
enter
lcall
hlt
mov
jbe
test
aaa
test
push
mov
jbe
push
addr16
ja
pop
imul
dec
sbb
jbe
inc
test
and
mov
cmp
mov
add
daa
jno
adcb
lret
mov
out
les
icebp
shlb
stc
pop
imul
movb
sbb
insl
adc
push
je
xchg
inc
jp
push
sub
jns
and
inc
push
int
rclb
adcl
aas
xchg
inc
js
mov
jp
repnz
jne
mov
mov
shlb
stos
or
rcrb
ds
cs
js
jmp
add
push
jp
cld
jmp
push
mov
push
shll
mov
push
cltd
dec
cltd
cmc
clc
out
pop
loopne
mov
pop
hlt
cs
add
outsl
jmp
mov
mov
dec
inc
nop
shll
aad
mov
mov
pop
sub
and
pop
ret
outsl
pushl
clc
mov
xchg
decl
cmc
adc
or
repz
mov
jns
ljmp
cwtl
cmp
xor
mov
int
je
fcomip
sub
decb
push
repz
mov
or
test
cmpsl
faddp
sbb
pusha
into
push
dec
ljmp
out
dec
xor
jge
jmp
sub
cmp
and
lds
inc
xor
xor
fdivrl
mov
pop
icebp
mov
mov
cmp
cmovno
js
aad
pop
gs
repz
mulb
and
dec
sbb
cmp
lret
pop
xor
cli
xor
lea
lods
movsb
pop
and
mov
out
jmp
sub
mov
rclb
popf
mov
fcmovbe
inc
movl
icebp
call
daa
enter
bound
jp
fs
xchg
jne
sub
mov
or
inc
iret
lock
test
test
add
push
les
dec
pushf
scas
loopne
add
scas
xor
ljmp
xor
sub
test
pop
js
xchg
cmp
mov
in
loop
jne
inc
rcr
sub
mov
mov
xchg
pop
add
inc
fmuls
cmp
dec
in
ss
std
jo
pop
mov
movsb
lods
push
cli
insl
out
cmp
sarl
inc
mov
out
jbe
lahf
scas
test
xchg
mov
cmp
sub
je
sbb
sub
lret
cmpsb
out
pop
fs
enter
mov
dec
daa
push
jle
loope
add
pop
mov
imul
les
push
arpl
sbb
fwait
mov
cmpsl
addr16
mov
and
xor
jl
outsl
jb
or
das
popf
dec
sub
xchg
and
push
jmp
push
ss
es
add
mov
mov
mov
fcoms
fsts
mov
push
sub
stc
xchg
adc
out
mov
outsb
nop
cmc
inc
jno
mov
pop
jle
cmp
int3
inc
icebp
inc
sbb
mov
jl
popf
xchg
icebp
push
ja
pusha
pop
mov
mov
add
and
loop
mov
addr16
pop
dec
jecxz
loop
sbb
hlt
arpl
mov
xchg
lcall
aaa
pop
or
pop
out
inc
bound
xor
mov
mov
stos
stos
jae
xchg
int3
dec
inc
jge
mov
and
jecxz
sbb
sbb
inc
in
mov
shufps
adc
jp
pop
adc
cmp
mov
adc
scas
sbb
mov
ss
jo
lahf
out
repz
ds
push
cmp
dec
ds
in
cmp
cmp
inc
xchg
sbb
jle
cmp
lods
bound
mov
inc
fidivs
stos
inc
jmp
sbb
cmc
add
loope
scas
fwait
sub
or
xchg
inc
pop
adc
push
xlat
scas
xchg
mov
outsb
pusha
fnstsw
push
pop
fidivs
jno
jl
daa
std
jge
xor
sub
add
xchg
push
insb
or
loop
rcr
repz
add
outsl
mov
mov
into
pop
inc
movsb
push
adc
cld
iret
rorl
push
dec
adcb
lret
out
rcl
fmull
fcomps
rol
popf
movsl
dec
popf
push
push
add
stos
fistl
push
movsb
mov
pushw
loop
add
scas
or
ljmp
scas
pmaxsw
mov
jnp
mov
ret
push
cmpsl
adc
fistps
cmc
mov
cmpsb
xlat
cmp
push
lds
xor
adc
xlat
xchg
ret
lods
shr
incl
xchg
pusha
pusha
mov
aas
adc
mov
test
pop
jg
scas
sbb
test
nop
pop
repnz
push
lods
push
or
cmp
cld
rorb
int3
cmpsl
iret
jne
scas
addb
cltd
ljmp
mov
ja
outsl
cwtl
in
add
test
fsts
xor
ficompl
or
cmp
mov
xchg
sub
fcmovu
pop
ds
imul
les
pop
sbb
ja
scas
or
ror
aas
xchg
mov
enter
test
mov
mov
add
call
and
lea
jbe
mov
jo
xchg
push
sub
lret
jmp
cmp
push
or
in
sbb
outsb
out
gs
scas
into
repz
stc
jg
and
popa
xchg
insb
and
aad
pop
insb
jne
dec
xchg
xchg
cs
out
leave
scas
pop
xor
into
push
cmpsl
push
mov
shr
sub
xchg
sub
insl
mov
pop
cmp
loopne
in
aas
push
xor
mov
in
insb
or
imul
fstps
jle
roll
mov
mov
lea
dec
mov
push
imul
nop
sub
shrb
cmp
out
pop
add
pop
lret
lock
ss
xchg
cmpsl
jno
pop
stc
cltd
push
dec
sub
mov
test
mov
pushf
sub
aad
add
xchg
imul
das
je
pop
mov
pusha
xchg
ljmp
dec
fcmove
and
shl
fstps
mov
jl
loop
jl
add
cmp
cld
push
stc
mov
add
cmpsl
fcmovu
inc
inc
jb
mov
fstl
jecxz
out
mov
dec
dec
mov
dec
pop
push
into
loop
ret
imul
adc
sub
cld
pop
sbbl
mov
loop
xchg
xor
ret
adc
push
jge
loop
addl
pushf
sub
test
sbb
aaa
adc
mov
je
js
push
cmp
or
sub
and
xor
fisttpl
popa
xchg
stc
out
add
or
fisubl
shlb
hlt
jnp
xchg
dec
stos
mov
scas
mov
js
shl
sbb
cli
jl
pop
add
xchg
dec
cmp
rolb
xor
or
push
stc
pop
jb
mov
cmp
dec
cmpsl
test
lods
ffreep
adc
aad
les
sbb
enter
negl
test
sub
inc
cmp
ss
testl
pop
repnz
movsb
pop
sarb
xchg
lret
push
push
test
xorl
xor
std
pop
mov
push
scas
pop
lods
inc
cmp
mov
sbb
inc
repnz
xchg
push
imul
mov
cmp
sti
insl
daa
mov
clc
push
cmp
ret
dec
mov
jecxz
mov
dec
cmpsb
aaa
mov
ret
cmp
mov
jo
mov
es
adc
ret
xchg
pushf
adc
mov
mov
fisubrl
flds
jl
gs
xlat
dec
inc
repz
clc
insl
nop
or
mov
xchg
test
into
test
pop
jg
xor
mov
test
xor
inc
pushf
notb
xchg
mov
in
xor
xor
push
mov
pop
imul
dec
mov
pushf
stos
inc
push
dec
imul
adc
lods
xchg
inc
imul
mov
push
cmpb
inc
in
in
mov
jns
out
cmpsl
test
cmc
dec
ljmp
das
fcoml
jmp
outsb
stos
xor
mov
xchg
cld
pop
ljmp
xlat
or
jns
sub
jg
cmpb
sti
add
test
loope
outsl
mov
ret
mov
jne
icebp
xor
movsl
jmp
cmp
pop
arpl
mov
rclb
leave
jg
pop
mov
mov
je
inc
ja
call
test
jecxz
xor
xchg
andl
cli
xor
ret
mov
pusha
jecxz
mov
dec
bound
xchg
movsb
mov
dec
nop
adc
filds
testb
js
and
add
mov
rorb
mov
psrad
xor
adc
push
jecxz
sahf
and
jp
dec
fadds
push
divl
sbb
scas
cmc
outsb
sbb
imul
setbe
stos
gs
repnz
pop
sbb
repz
lea
mov
ljmp
nop
xchg
sahf
push
push
fildl
add
dec
xor
cmp
imul
lret
arpl
pop
pop
repz
and
testb
xor
pop
loopne
mov
lea
dec
xor
sub
gs
mov
fisubrs
or
pop
push
nop
jl
mov
dec
ds
xchg
loop
scas
sub
loopne
xchg
jge
mov
or
push
mov
or
mov
cmp
cld
rorl
icebp
pop
cmpsb
cmp
or
lret
sbb
adc
pop
in
jno
inc
cli
xchg
jle
sub
and
dec
flds
test
push
jae
loope
pusha
jge
and
andb
push
inc
jae
add
or
sbb
testb
mov
cwtl
ds
fwait
jnp
movsb
cltd
cmpsb
xor
leave
pushf
xchg
pop
push
push
or
jl
ret
arpl
inc
loope
xchg
ret
imul
call
imul
mov
jl
or
test
stc
jae
cmp
sbb
pushf
xor
imulb
sbbb
or
dec
js
push
xchg
shlb
dec
and
outsl
inc
xor
data16
mov
mov
mov
pop
das
loope
lea
lods
mov
leave
cld
dec
fwait
xchg
pop
and
mov
inc
adc
jp
scas
lods
mov
stc
cmpsl
shrl
adc
mov
in
jmp
lret
xchg
cld
rcrb
push
out
xlat
outsb
xchg
les
xor
sbb
mov
dec
push
jge
mov
adc
mov
xchg
dec
adc
ret
loop
adc
xlat
leave
cwtl
xchg
adc
lods
or
mov
mov
dec
aaa
imul
or
mov
stos
ret
inc
xchg
mov
ljmp
int
and
or
mov
in
addr16
out
cmp
xchg
mov
xor
loope
lcall
dec
fsubs
xchg
add
push
repnz
mov
mov
divb
imul
cmpsl
sbb
ret
sbb
inc
inc
adc
jnp
mov
and
lds
test
sub
fcomip
push
rorl
lods
or
cs
pop
js
fmuls
test
lea
mov
mov
mov
mov
and
mov
movsl
jecxz
inc
mov
mov
jno
insb
fiadds
daa
jle
lds
orl
cs
enter
add
dec
sub
aad
scas
and
xchg
ds
adc
repz
sub
cmp
sub
stos
mov
lods
push
add
movsl
lds
or
xchg
js
jle
lahf
mov
jg
pusha
insb
out
push
mov
pop
cmpsb
dec
jmp
hlt
or
pop
sub
pop
jno
bound
pop
insb
mov
es
mov
repnz
gs
clc
or
gs
xlat
out
insb
sub
xchg
aas
xchg
test
je
add
test
xor
xlat
cmp
jp
cltd
insl
daa
fadds
dec
cmp
lds
stos
ret
adc
leave
insl
cmp
aad
jnp
nop
mov
enter
add
lcall
lock
xor
pop
adc
lea
in
cmp
jl
sahf
inc
or
test
dec
loope
push
shl
mov
xchg
adc
pop
push
jno
out
and
mov
pop
inc
fs
negl
push
mov
mull
add
movsb
push
ret
aad
push
jns
sbb
sub
pop
adc
mov
sub
lds
fsubs
lock
sbb
out
mov
lods
inc
fadds
jge
jbe
imul
sar
pop
loope
inc
mov
ret
sub
stos
in
or
or
or
mov
int3
mov
insl
movsb
jae
jg
pop
inc
mov
lea
arpl
mov
mov
mov
xor
jle
cmpsl
mov
andl
leave
testb
loop
push
data16
pop
mov
add
addb
data16
lds
and
lock
mov
jecxz
mov
sbb
shlb
add
xor
xor
pop
into
push
enter
jle
je,pn
inc
sarb
movsb
test
fdivrs
cs
in
andl
jl
pop
or
sbbl
dec
and
std
divb
sbb
out
cli
jmp
pop
int3
mov
cmp
addl
dec
cmp
in
aad
lods
out
scas
mov
xor
or
xor
fwait
mov
fldenv
stos
dec
testb
rorb
cmp
jle
add
scas
sub
std
push
push
inc
das
pop
dec
adc
push
je
lahf
int
sahf
or
xlat
aas
push
sub
sbb
fndisi(8087
popf
mov
sbb
cmp
adc
sbb
mov
mov
sbb
adc
or
scas
lcall
notl
push
pop
addr16
ret
pop
mov
outsl
dec
sub
orb
loop
sub
in
cwtl
and
sbb
mov
push
mov
sbb
jmp
loopne
inc
cli
mov
push
mov
push
cmp
out
fs
push
mov
enter
inc
in
mov
cmp
dec
rcr
sbb
mov
negb
rol
xor
gs
enter
es
pop
inc
push
push
mov
mov
push
jl
repz
sbb
adc
inc
pop
scas
icebp
sahf
rolb
pop
xor
insb
inc
cmp
loope
pop
sub
cmp
and
movsb
sahf
insl
aam
clc
idivb
jo
call
aas
push
lods
leave
scas
add
or
and
negb
aam
cmp
sub
mov
jne
push
into
push
xchg
bound
test
xor
lahf
out
in
mov
in
dec
mov
mov
add
or
xchg
lret
cmpsl
daa
mov
push
mov
rcll
push
dec
loope
add
dec
call
jg
fdivrl
rcrl
cmpsb
mov
bound
call
push
outsl
idiv
loopne
or
loop
push
lret
ret
adc
into
int
or
int3
js
push
cld
dec
ljmp
nop
stc
xchg
sbb
inc
push
mov
push
push
cmp
fnsetpm(287
and
cmc
inc
dec
jo
dec
imul
test
sbb
mov
jns
arpl
sbb
fsub
fscale
xor
jge
xor
inc
sbb
out
jns
nop
mov
test
cmp
pmuludq
mov
lcall
stos
jmp
mov
cmp
mov
mov
jl
cmp
ret
cmpsl
fnstenv
xor
xor
loope
cwtl
jmp
sahf
std
mov
fidivrl
jmp
nop
jno
xchg
andb
or
xor
stos
aam
mov
add
and
push
xor
or
adc
in
movsb
xchg
xorl
int3
mov
movsb
dec
mov
xchg
pop
addl
inc
insl
sahf
xor
mov
sbb
inc
or
ret
mov
mov
clc
fld
and
mov
test
sahf
mov
int
inc
jge
dec
adc
or
dec
test
pusha
not
scas
stc
and
dec
inc
inc
push
mov
inc
cmp
pop
xor
add
mov
xchg
and
inc
adc
incb
mov
ret
xchg
test
sub
mov
cmp
enter
insl
pop
mov
ret
dec
gs
and
mov
jne
jbe
pop
mov
jle
ror
push
adc
fisubrl
roll
fldcw
insb
push
xor
add
shll
mov
arpl
ljmp
arpl
jl
pop
jg,pt
les
insb
xor
jae
jmp
sub
jne
push
xchg
iret
daa
mov
ljmp
mov
inc
and
mov
pop
xchg
jnp
js
cmp
mov
mov
jmp
nop
decb
sub
jnp
mulb
leave
inc
roll
pop
inc
and
loope
ds
loopne
fbld
dec
add
push
jbe
loop
mov
adc
fildll
jo
xor
xchg
loopne
dec
adc
sbb
jo
enter
loopne
out
sub
andl
ficomps
int
mov
mov
add
mov
jmp
add
arpl
stos
xor
jl
sbb
lds
out
stos
add
jle
push
mov
inc
xor
sub
mov
inc
fnsave
pop
js
ja
lret
push
pusha
sub
je
push
mov
push
push
fdivrs
in
push
add
inc
pusha
mov
push
xor
inc
mov
lock
lahf
xlat
jecxz
cmp
jecxz
arpl
ffreep
loopne
cmp
lods
mov
jb
xor
sbb
xor
push
lds
fwait
lahf
mulb
in
sub
jp
sbb
out
xor
clc
cmp
and
xor
loopne
insb
enter
leave
add
mov
iret
mov
add
dec
or
aaa
sub
push
dec
cli
call
push
js
xchg
xor
bswap
xor
repnz
out
jno
repz
or
push
sbb
in
mov
inc
sbb
jl
mov
xchg
jg
test
pushf
call
xchg
ret
ficoml
cmp
or
jg
mov
jne
adc
cld
cmp
inc
xor
out
jbe
rorl
aad
xchg
in
rorb
jns
add
iret
sub
inc
je
into
and
xchg
jo
fcomps
jle
filds
hlt
xor
mov
push
repnz
pop
rcl
mov
pop
mov
test
xchg
enter
rcrb
not
aam
xchg
push
flds
lcall
dec
jmp
addl
js
cltd
nop
push
inc
enter
stos
inc
leave
add
mov
push
jmp
cmc
stos
rorl
mov
scas
data16
subl
call
orl
in
out
andl
sbb
pop
add
popa
in
les
sbb
lret
jo
push
cmp
jle
loope
loopne
and
mov
adc
lods
sbb
sbb
xchg
rcrb
sbb
cmp
bound
ffree
jge
test
jg
jne
pop
sbb
rclb
sbbb
jo
jg
aas
gs
or
jnp
mov
xchg
mov
cli
pushf
and
rcrl
into
mov
inc
fldt
popa
es
or
inc
push
mov
inc
mov
out
fwait
jae
pop
dec
push
push
dec
pop
mov
or
movsl
pop
rclb
mov
fimull
stc
or
sbb
aam
pusha
jne
lods
mov
mov
loop
or
xorl
push
minps
add
data16
dec
mov
mov
sub
cmp
push
sahf
dec
cmpsb
out
cmc
or
mov
insb
and
pop
and
adc
testb
jne
jb
push
dec
adc
mov
pop
push
push
sub
cmc
daa
add
xchg
test
fiadds
jo
mov
pushf
sbb
rcrl
add
loopne
shlb
xchg
sub
mov
fimuls
pushf
bound
nop
cmc
xlat
sbb
mov
cmp
rcr
sub
inc
cmp
pop
ja
mov
mov
jnp
pop
loop
cs
cmpsw
inc
cmpsl
in
cmp
sbb
xchg
pop
es
sub
inc
in
imul
dec
inc
lods
mov
in
sub
xchg
clc
repnz
pop
subl
xchg
sbbb
testl
out
push
inc
imul
jg
loop
cmp
sub
dec
lret
out
mov
ret
jno
in
rolb
jns
xchg
pop
test
mov
shrb
jmp
fldl
sbb
shlb
insb
repnz
dec
scas
loope
cmp
ret
push
dec
bnd
and
data16
mov
hlt
test
dec
inc
xchg
cmp
repz
mov
lea
popf
inc
push
rorb
add
xor
push
pusha
test
stos
pop
xlat
out
sub
rdpmc
lret
mov
mov
push
loope
mov
and
lret
and
out
inc
mov
jno
pop
sub
outsb
jle
cmp
xchg
jg
inc
in
push
inc
sub
sbb
push
shlb
sub
into
rorb
cmp
mov
or
aam
ret
addl
push
or
dec
in
jno
mov
pushf
rol
lods
bound
xor
jge
adc
pop
push
imul
cmpsl
xchg
dec
jbe
dec
inc
iret
push
or
in
int
inc
outsl
mov
jge
dec
mov
xor
xchg
ljmp
mov
push
leave
push
jo
or
xchg
xorb
mull
icebp
push
pop
or
mov
cmp
mov
xchg
xor
cmp
fs
sbbl
push
scas
das
mov
sub
insl
loopne
cmp
das
xlat
lods
into
das
lcall
add
in
mov
and
xchg
test
mov
cmc
dec
cwtl
aas
cs
imul
xchg
jl
icebp
pop
mov
scas
xor
scas
lock
loope
int3
test
cmpsb
je
ret
nop
mov
pushf
insb
stos
test
inc
ss
int3
jo
adc
hlt
jns
lcall
pusha
daa
ja
movsl
inc
scas
xchg
pop
aas
or
out
call
aaa
movsb
mov
cmp
rcl
adc
mov
push
stos
mov
jo
sbb
addb
push
push
in
mov
lds
test
mov
cmp
pop
cli
clc
xor
xchg
xchg
ds
push
std
leave
out
sbb
adc
imul
outsl
jns
clc
jge
mov
jns
lret
sahf
scas
cmp
sbb
negb
imul
mov
sub
in
and
push
scas
int3
xchg
jbe
adc
add
sti
push
push
lea
jecxz
dec
dec
mov
std
sbb
cli
mov
pop
dec
out
xchg
or
push
dec
decl
cmp
jb
xchg
out
or
test
rol
push
out
pop
popf
mov
mov
push
sarb
clc
dec
sub
mov
sub
cmp
rcl
push
add
sub
inc
fwait
jbe
test
gs
insb
or
xor
ret
push
dec
iret
enter
lret
jp
cmp
leave
dec
test
vprotq
cmp
mov
cltd
sub
sub
pop
outsb
int3
out
nop
enter
mov
mov
dec
fdivs
add
or
xchg
jecxz
or
push
roll
xchg
sbb
mov
shlb
cwtl
rorl
sbb
push
push
nop
iret
sub
xchg
je
in
sar
lods
or
in
and
repz
and
mov
push
dec
mov
jo
mov
push
dec
pop
nop
hlt
and
orl
ja
sub
popa
imul
sbb
lcall
push
and
stos
lods
orl
out
fdivl
cmp
fldenv
pusha
pop
sahf
shrb
inc
adc
xor
push
push
nop
jb
aaa
and
adc
or
popa
mov
cmp
mov
inc
dec
jne
xchg
inc
sub
leave
pop
js
sbb
imul
dec
jns
add
in
dec
mov
in
andb
sub
mov
mov
push
push
push
lea
sbb
mov
lahf
xchg
mov
push
sub
mov
shll
fisttpll
push
pop
and
xchg
pop
mov
xchg
mov
lea
rcl
fcomps
cmp
push
jle
cs
cld
mov
mov
push
test
mov
mov
sarl
xchg
push
push
or
xor
aam
sbb
jnp
arpl
addr16
jns
lods
xchg
lds
cwtl
test
push
imul
std
hlt
push
and
cmpsb
out
adc
lods
imul
loopne
fistpl
rorb
xchg
or
flds
shlb
lock
mov
cmp
sbb
movsb
dec
mov
jns
jnp
mov
mov
mov
push
shrb
cmc
sbb
mov
push
inc
inc
or
or
cmpb
outsl
cmc
jb
sub
sub
call
movsl
ret
icebp
jne
push
xor
jmp
popf
sbbl
cmpsb
and
cld
pusha
add
adc
mov
negb
shrb
into
inc
sti
jecxz
and
das
inc
dec
add
fnsave
cli
adc
and
aad
dec
xor
xlat
out
and
jecxz
push
inc
test
cmp
jl
outsl
mov
nop
push
out
aam
xchg
mov
mov
imul
jo
fwait
pop
xchg
sub
sbb
cmp
push
mov
mov
sub
mov
lret
stos
fbld
or
mov
push
jle
fnsave
jmp
sbb
loop
cli
inc
aad
cltd
dec
mov
mov
push
xchg
out
pop
push
lret
shlb
sarb
and
fmull
popf
pop
out
push
scas
pop
fsubrs
push
loopne
sub
vpaddusb
xchg
sub
jnp
ret
mov
jae
sub
loope
out
test
popa
int3
hlt
inc
add
add
xchg
aad
out
inc
mov
mov
data16
adc
dec
adc
or
sbb
sub
and
jg
rol
aad
sub
mov
jbe
inc
fnsave
and
js
xlat
mov
cmp
cmp
cli
jo
push
and
pop
fisttpll
xchg
movsl
xchg
pop
test
rorl
push
lret
sbb
and
push
lods
std
shlb
adc
and
subl
andb
sbb
jae
sbbb
and
mov
lret
int3
daa
cmp
fists
push
push
fs
jne
cmc
gs
jle
incb
dec
mov
inc
mov
dec
adc
arpl
sub
xor
pop
adc
stos
inc
leave
jbe
icebp
and
mov
test
loope
sub
xor
mov
add
dec
mov
dec
and
jns
dec
xor
lods
jmp
aam
sti
sahf
hlt
xchg
prefetch
fdivrl
sbb
sub
jb
pop
in
sbb
jge
loopne
pop
lret
insb
mov
mov
jne
outsb
out
mov
fst
lcall
jae
jg
adc
movsl
lods
in
xor
test
jmp
jb
push
mov
in
pushf
sahf
xor
aam
lret
jmp
and
movsl
fsubrs
xor
ret
mov
pop
testl
leave
sbb
pop
repz
push
icebp
pop
jnp
push
clc
xchg
es
mov
cmp
adc
adc
sahf
xor
aad
dec
mov
pop
gs
adc
shrl
ss
jg
sub
sbb
mov
clc
in
or
mov
out
leave
push
lock
js
js
out
jecxz
add
push
clc
sbbl
fisttpl
pop
lret
loop
pop
pushf
mov
pop
movsb
xlat
pusha
jle
inc
pop
push
cwtl
jns
hlt
xor
pop
jecxz
mov
imulb
ss
sbb
pop
fdivs
pop
cmp
push
imul
adc
cmpsb
jg
add
pushf
jp
inc
popf
enter
mov
xor
lea
xlat
xchg
aas
xchg
test
pop
cld
mov
ljmp
jns
es
addl
xchg
loope
pop
movsb
out
sub
jmp
jae
jnp
and
sti
xchg
mov
jmp
outsb
cmp
mov
inc
pop
dec
sbb
pusha
jae
pop
push
pop
mov
lock
jo
sti
mov
fcompl
push
xor
sti
jne
in
and
push
int
mov
mov
fistpl
test
lds
fisubl
inc
or
mov
mov
scas
inc
and
sbbb
pop
jp
and
add
mov
dec
call
cmpsb
sti
jmp
dec
mov
jp
imul
pop
sub
push
in
in
repz
push
iret
dec
loop
test
fnstcw
add
jmp
mov
dec
jmp
arpl
dec
fidivs
mov
iret
sbb
pop
dec
dec
jb
mov
outsb
add
sub
jmp
inc
in
mov
add
pop
mov
push
jns
movlps
adc
xchg
push
into
push
dec
outsb
cmpsl
mov
outsb
jb
mov
enter
lret
cmp
pop
gs
sub
loope
or
cmpsl
repz
and
mov
mov
inc
push
mov
xchg
lret
push
dec
notb
les
sbb
daa
aaa
pop
xchg
xchg
je
je
push
subl
jbe
pop
and
jmp
mov
loopne
test
out
mov
lods
insl
in
insl
xor
js
dec
mov
inc
xorl
into
pop
mov
jae
pop
inc
icebp
fs
xor
lret
lods
stos
push
xor
call
jle
add
daa
cmp
fucomp
jae
and
or
and
lcall
push
les
or
mov
push
and
xchg
outsb
ds
dec
mov
pop
dec
mov
aad
cld
cmp
ss
das
test
outsb
lcall
mov
roll
mov
or
addr16
add
mov
cmp
xor
arpl
loop
mov
push
push
shrb
xchg
xor
arpl
mov
test
dec
mov
sahf
jp
add
enter
cmp
inc
dec
jns
int
ret
out
repnz
std
adc
cmc
xlat
xchg
fs
jge
add
adc
int
nop
data16
jns
aad
pop
mov
aas
shll
outsb
ret
mov
add
and
rclb
jbe
lret
gs
fiaddl
push
jno
test
pop
jo
and
and
mov
mov
orb
adc
lods
sbb
pop
and
repnz
insl
sub
dec
in
mov
cmpsb
push
in
imul
xchg
pop
fadds
dec
push
ficoms
scas
or
adc
and
add
test
in
pushf
push
dec
cli
jle
cmpsb
cli
jb
jae
addb
repnz
jl
xor
push
into
sbb
pop
push
sbb
inc
nop
mov
jl
bound
dec
fldpi
ror
mov
or
cltd
pop
xor
call
pop
pop
cmp
cwtl
xor
es
out
in
inc
sarb
mov
xchg
imul
mov
bound
lock
das
pop
call
nop
cmp
int3
push
jge
sarl
or
int
mov
mov
int3
xchg
push
sub
mov
push
add
fldenv
mov
cmp
jl
or
inc
xchg
sbb
mov
sbb
mov
repz
jno
aam
and
fisttpll
out
stos
inc
les
ficoml
mov
fs
sub
pop
test
inc
addb
lock
dec
gs
mov
xchg
out
int3
in
cltd
adc
stos
xchg
adc
xchg
lock
sti
in
sbb
sbb
jnp
test
xor
add
mov
xchg
jo
fcoms
xchg
loope
repz
aas
jmp
mov
pop
inc
adc
loopne
popa
jnp
jns
pop
cmp
jne
sub
dec
hlt
mov
out
mov
or
mov
test
jb
pushf
mov
daa
pop
xchg
push
pop
sub
push
dec
pop
xchg
negb
dec
imul
push
call
arpl
jg
cmp
mov
int3
les
icebp
jp
cmc
std
mov
lea
movsl
mov
sahf
or
imul
enter
push
aaa
cmp
fpatan
xchg
xchg
addb
mov
inc
aam
outsb
add
xchg
in
mov
test
and
pop
lahf
jne
repnz
and
push
sbbl
pop
mov
lock
icebp
daa
xchg
fdivrl
int3
stos
out
cmpsb
adc
adc
adc
cmp
jns
movl
or
xor
das
push
icebp
jbe
sbb
clc
sbb
or
mov
daa
xchg
push
sbb
dec
dec
repnz
mov
dec
rcrb
mov
dec
xchg
add
fsubl
adc
inc
arpl
jg
xor
push
cmp
lret
and
jno
aaa
jecxz
ret
jg
and
lret
es
movsl
dec
xchg
lret
cmp
jae
pop
nop
adc
loope
loope
sbb
push
xor
stc
xchg
jg
and
filds
or
inc
and
inc
movsb
stos
xor
insl
loop
push
sbb
mov
xchg
loope
stos
cs
dec
aaa
cltd
cmp
pop
and
mov
xchg
sbb
js
popa
sub
lock
movsl
lret
pop
mov
jg
mov
xchg
mov
jb
rorb
push
cli
xchg
mov
push
xor
arpl
rcrb
int
add
mov
in
or
inc
movsb
aad
aaa
stos
xchg
inc
adc
push
push
adc
mov
scas
rorl
xchg
cs
out
insl
push
das
mov
mov
and
aad
int3
jecxz
dec
push
pop
cmpsl
lods
hlt
mov
arpl
scas
xchg
dec
cmpsl
cwtl
cmp
add
add
lret
insl
clc
cmpsb
faddl
xchg
stos
int3
rcl
mov
or
pop
mov
and
fimull
sbb
cmp
jle
ja
sbb
add
push
push
mov
sahf
push
jmp
pop
rorb
push
rorb
in
sub
push
and
mov
js
out
mov
mov
sarb
es
xchg
sbb
es
mov
push
icebp
insl
dec
jl
lcall
leave
xor
hlt
cwtl
xchg
cltd
addr16
gs
xchg
ljmp
popf
jmp
repnz
outsl
fisubrl
enter
fnstcw
in
mov
call
shlb
cli
cmp
addr16
mov
jo
adc
cmc
lods
cmpsb
sbb
dec
adc
cmp
jl
xchg
xor
sub
movsl
loopne
push
and
sub
test
es
xlat
sbb
shl
adc
dec
bound
test
fldl
clc
ds
cs
imul
push
scas
imul
and
rol
mov
fcoml
pop
std
hlt
push
and
xor
push
dec
xchg
sbb
mov
sbb
notb
jnp
push
add
pop
mov
cmp
int
fcoml
mov
and
push
jg
push
loopne
ljmp
imul
xchg
push
inc
pop
jae
mov
mov
adc
mov
jle
mov
inc
mov
and
mov
js
dec
sub
jmp
test
lcall
aaa
andb
pop
mov
sub
sub
testb
xchg
push
mov
insb
dec
shl
mov
cmp
add
lods
jbe
add
dec
shlb
and
gs
and
pop
outsl
dec
inc
mov
stos
loope
sub
adc
mov
xor
mov
scas
push
add
jbe
push
mov
divl
sbb
or
mov
popa
pop
cmp
adc
fwait
insl
jne
pop
adc
gs
cmp
mov
insl
inc
shrl
bound
mov
lock
xlat
xlat
sahf
sbbl
mov
cld
inc
mov
insl
out
ret
xchg
add
and
imul
or
xchg
pop
popa
int
adc
push
out
mov
inc
iret
roll
and
ja
dec
mov
sub
lods
popa
cmp
jp
lods
adc
jmp
add
or
loope
clc
mov
dec
or
and
sysenter
mov
pop
mov
popa
lret
xchg
jge
sub
fimull
push
adc
xchg
adc
fisubrs
jnp
aad
clc
mov
or
out
or
mov
xchg
imul
sahf
rcrb
inc
add
lods
sbb
mov
mov
and
ficoml
je
add
in
mov
sbb
mov
dec
scas
mov
lahf
xchg
jl
dec
das
fcoms
mov
scas
xor
out
xchg
scas
loope
adc
sbb
jae
mov
pop
sub
in
xor
cmpsl
adc
sbb
aas
and
pop
insb
je
push
jno
inc
add
add
dec
mov
jle
int
inc
mov
adc
repnz
jg
or
aad
cmp
das
repz
testb
cwtl
in
pop
cwtl
pop
fists
or
mov
xor
jle
xchg
and
in
mov
mov
ja
popl
shrb
enter
enter
stc
fadds
and
test
iret
daa
out
lret
js
imul
fstpt
or
mov
jecxz
std
add
adc
int3
mov
xor
cmc
arpl
mov
push
xchg
aad
stos
adc
cmp
hlt
out
push
mov
push
aad
sbb
fbstp
sarl
les
add
cltd
jecxz
inc
push
sti
push
rcrb
sub
imul
jbe
and
iret
mov
pop
pop
das
in
xor
ljmp
fucomi
mov
jge
lret
mov
popf
mov
das
insb
pop
lea
adc
add
mov
call
mov
add
in
faddl
pop
clc
fisttpl
adc
pop
clc
xchg
adc
push
shr
ljmp
out
lahf
and
inc
or
jecxz
cmpsl
and
push
or
aas
sbb
into
loopne
xchg
cmp
or
lock
insl
mov
lods
gs
xchg
and
cmp
lahf
sub
sub
aam
ss
push
movsl
addl
lods
loope
jo
pop
cmp
push
movsl
test
imul
and
mov
pop
mov
sub
push
fsubr
call
push
cli
scas
imul
outsb
sbb
flds
jle
in
or
aas
sbb
xor
inc
xor
imul
or
xchg
xor
jle
xchg
addr16
es
pop
lcall
cwtl
cmpsb
pop
or
adc
fnstenv
test
push
sbb
pusha
mov
jle
inc
mov
out
out
jg
cmp
pop
jae
pop
xchg
xor
mov
sbb
pushf
mov
pop
pushf
mov
hlt
jb
sbb
ja
xchg
xchg
pop
subps
fistl
jge
pop
jbe
aaa
pop
insl
icebp
hlt
mov
xor
adc
ret
js
dec
adc
cmpsl
xchg
add
je
xchg
or
xor
stc
mov
add
cmpsb
cmpb
xor
out
mov
ffree
loopne
xor
pop
inc
xchg
push
mov
mov
iret
aaa
das
push
sub
dec
sbb
adc
pop
rol
push
enter
xchg
mov
sbb
add
jle
fs
stc
shlb
out
frstor
fidivl
insb
dec
loop
js
xlat
stc
fs
mov
or
nop
sbb
orb
or
sbb
push
mov
dec
lret
and
arpl
lods
sarl
lods
lea
or
mov
or
bound
imul
xor
fnstsw
sub
test
push
mov
mov
xorl
mov
xor
inc
or
add
test
cwtl
cmp
std
aam
pop
add
movsl
aad
shlb
jb
imull
pcmpgtw
push
push
jae
add
das
adcl
xchg
les
mov
int3
and
lret
pop
inc
pop
jae
lock
cmpsb
inc
out
push
stos
cld
inc
mov
mov
dec
sub
daa
mov
cld
enter
fnstenv
mov
repz
jae
sub
pop
mov
or
pop
cwtl
adc
jae
push
cmp
pop
xor
or
inc
sub
shrb
push
iret
gs
mov
cltd
cmp
test
sub
sub
leave
mov
es
cmp
ljmp
inc
jae
cld
ret
leave
nop
push
xchg
sub
stos
inc
and
iret
mov
jge
inc
cs
or
sbb
data16
inc
cmpsb
out
sub
repnz
inc
stos
ljmp
cmp
repnz
popf
mov
test
int3
shl
adc
cltd
xchg
cmp
pop
daa
rclb
jmp
sarl
lahf
sbb
lods
jns
mov
jno
popf
lret
sub
mov
negb
mov
xchg
inc
add
sbbb
sub
jae
pop
push
push
or
andb
je
fcmovnu
pop
inc
inc
xor
push
movb
xchg
popl
daa
test
lock
lea
push
jle
add
pop
sbb
jg
in
xchg
cli
in
or
mov
jbe
pop
xor
push
mov
pop
xchg
out
movsb
in
pop
inc
xchg
push
in
popa
int3
mov
in
xlat
adc
dec
mov
sub
sbb
pop
adc
cmpsb
jns
and
inc
jl
call
sti
aam
idivl
or
add
repnz
push
hlt
xor
inc
je
movsl
xorl
pop
and
push
shr
data16
pop
jge
or
dec
sub
cmc
jo
fistps
rcrl
sahf
or
test
mov
idivl
jbe
std
inc
jmp
mov
aam
ss
out
push
fsub
iret
enter
jl
jo
or
sub
mov
dec
push
adc
xchg
orb
scas
idiv
push
iret
dec
lcall
push
pusha
mov
es
cld
cli
sbb
ljmp
mov
xor
pop
loope,pt
ficoms
movsb
in
imul
test
dec
pop
mov
inc
adc
cli
daa
mov
shlb
rcl
sahf
xorb
test
repnz
in
rcll
and
cwtl
lods
xlat
ss
pop
jp
pop
push
add
cmp
push
cltd
in
lods
or
inc
je
nop
mov
mov
push
push
xchg
imul
fdivrs
jns
cld
lahf
sahf
push
pop
pop
leave
mov
cmp
ds
adc
rolb
ss
lods
dec
mov
pop
inc
push
stos
inc
sub
xchg
and
pop
inc
push
jae
cwtl
jne
xor
mov
fistps
inc
jle
fsubl
mov
orl
mov
sbb
pop
and
mov
popf
cltd
shlb
xor
dec
lcall
xor
jbe
xchg
inc
push
ret
out
dec
add
cld
rep
ret
movsb
rclb
sub
sub
psraw
aam
sub
icebp
aas
mov
push
jne
mov
push
mov
sbb
cmp
and
dec
scas
mov
push
aas
inc
outsl
add
adc
popa
cmp
mov
sub
push
dec
xchg
fwait
pop
jmp
add
shrl
insb
lods
mov
imul
les
sbb
push
mov
add
imul
mov
jecxz
mov
std
pop
xor
lds
mov
pop
inc
mov
arpl
fsub
push
sub
mov
icebp
dec
pop
and
repnz
sbb
jno
jo
dec
dec
cs
ds
add
mov
add
mov
inc
jbe
test
dec
decl
jnp
negb
out
stc
je
jmp
mov
push
addr16
into
push
jg
or
out
hlt
mov
lods
xchg
pop
pop
inc
jge
adc
mov
ds
pop
cmp
and
or
lcall
xor
sti
push
addr16
pushf
ret
mov
out
insb
inc
cmp
fdivs
dec
push
mov
push
jle
iret
pop
adc
mov
jmp
add
push
lret
cld
es
inc
mov
push
incl
sub
mov
xorb
mov
idivb
jo
fwait
xor
push
stc
out
sbb
xchg
push
cmp
adcl
cld
jle
sbb
movsl
jo
fdivl
add
insb
test
movsb
sbb
xor
or
mov
aas
loopne
out
out
ljmp
sbb
dec
or
mov
in
out
movsl
pop
push
scas
lret
mov
filds
jnp
out
xchg
mov
dec
jmp
leave
xchg
jge
mov
aas
sub
cld
incl
push
mov
aas
push
stc
mov
repz
xor
cmp
mov
push
lock
adc
dec
dec
movsb
and
mov
scas
lods
fisubrs
jne
outsb
clc
cwtl
add
fs
xor
imul
xor
loopne
fstl
dec
adc
add
sub
outsl
stos
in
int
std
popf
mov
fs
fimull
inc
adc
lcall
aad
test
push
xor
pushf
mov
stc
sbb
lcall
xchg
icebp
mov
mov
xchg
adc
std
dec
ret
jge
dec
ficomps
imul
leave
push
out
mov
push
push
jl
loop
sub
dec
mov
shl
mov
fisubl
jnp
xor
roll
mov
nop
fisubrs
or
push
daa
add
stos
insb
sahf
fld
pop
fcoml
push
sub
or
or
cmpsb
popf
cli
inc
imull
jge
and
lcall
movups
imul
ja
mov
mov
std
xor
test
cmp
or
cld
push
mov
jne
testb
daa
and
iret
inc
clc
jp
dec
fwait
aam
or
fs
sarb
xor
aam
lcall
mov
repz
lcall
int
das
cmp
pop
or
push
rorb
mov
loop
pop
iret
mov
jecxz
cmp
fildll
jl
mov
sti
lds
loop
xchg
add
repnz
cmp
das
adc
dec
mov
xchg
cmpsb
sub
imul
mov
jmp
adc
ljmp
xor
lock
cmpb
insb
loop
xor
xor
jle
and
mov
mov
cltd
cmp
pop
and
mov
sub
pop
in
sub
jecxz
pop
lds
jae
push
fld
pusha
sbb
sbb
ljmp
xchg
pop
mov
out
mov
insl
pop
pop
add
shll
imul
and
pop
sub
pushf
addr16
fbld
jp
js
sar
popa
cli
inc
mov
inc
jecxz
sub
xchg
inc
jae
scas
xor
fcoml
adc
add
sahf
add
in
push
jg
xchg
loopne
loop
pop
xor
out
push
scas
jns
sbb
pop
shlb
scas
mov
add
sarb
sarb
fst
std
scas
pop
test
push
dec
icebp
dec
inc
popf
add
subb
and
or
jae
xchg
and
mov
out
add
out
test
mov
orb
lcall
stos
mov
pop
shl
iret
jb
arpl
cmpsl
mov
out
mov
dec
dec
dec
dec
pop
insl
add
flds
jnp
jle
add
int3
xlat
jecxz
add
push
dec
adc
mov
stos
jb
push
mov
pop
pop
insb
xchg
leave
in
xchg
jl
sbb
adc
mov
pop
mov
jae
jl
jo
lods
test
jle
cmp
push
mov
cmp
mov
dec
xchg
push
jle
dec
cmp
mov
pop
movsb
mov
dec
mov
scas
mov
bound
jp
pop
test
stos
fistl
jp
js
xor
push
xchg
push
jne
dec
imul
mov
mov
pop
bound
mov
sub
mov
mov
mov
push
push
mov
sub
gs
xor
mov
movsb
lods
scas
xchg
dec
cmpl
sub
and
sbb
mov
in
fcompp
lock
xor
clc
push
xor
stos
out
xchg
lods
cmc
imul
xor
sti
xchg
jns
popf
xor
mov
mov
cmp
or
sti
jp
or
xor
fyl2x
inc
sub
fxch
call
jbe
in
shll
je
dec
add
lahf
lock
mov
jnp
pop
out
adc
popa
addr16
dec
in
and
dec
lods
push
ficompl
mov
mov
hlt
int
and
out
pop
adc
or
mov
fs
sub
mov
hlt
mov
clc
cmp
fs
adc
inc
repz
pop
mov
cmp
ds
ficompl
lahf
push
xor
mov
jge
and
cs
cmp
lds
js
xor
mov
dec
fbstp
adc
out
push
xchg
nop
data16
or
jl
push
inc
add
xchg
or
fcompl
pop
in
testl
mov
shlb
test
pop
flds
fildl
mov
in
sub
outsl
fdivr
xor
cmp
inc
xor
sub
ret
outsb
cmc
ret
xchg
dec
cmp
jecxz
xlat
inc
push
sbb
push
stc
lea
pop
and
inc
dec
jmp
ret
fdivr
xor
sbb
mov
mov
mul
std
pop
nop
insb
sahf
xchg
inc
lods
pop
mov
fcomi
add
cld
inc
jg
sbb
jge
shufps
clc
icebp
mov
les
ljmp
or
mov
xchg
lock
xor
push
xchg
sbb
lret
xchg
mov
int
cmp
and
or
mov
lock
inc
jo
lcall
xchg
dec
inc
test
adc
add
jg
sbb
in
push
mov
pop
dec
pop
sub
xor
cmp
fwait
in
mov
nop
ret
xchg
xchg
push
aas
stos
add
daa
fs
xorb
or
push
sub
or
cld
fwait
adc
insl
push
or
adc
push
push
popf
cmp
jb
jle
xchg
pop
sbb
add
dec
jo
mov
scas
mov
push
aam
cmp
pop
dec
sub
xlat
out
pop
inc
mov
fmuls
cmpsb
adc
push
sub
adc
dec
jbe
or
repz
dec
out
jbe
pusha
mov
lahf
cmp
jg
xor
daa
mov
mov
test
rclb
inc
loop
cmp
imul
out
pushl
sbb
adc
sub
jne
roll
lds
adc
sbbl
repz
sbb
cmp
or
cli
push
out
fiadds
test
push
or
adcl
mov
dec
icebp
or
cmpl
push
jle
mov
loop
in
xor
pop
popf
movsl
lock
idivb
push
lock
cs
and
aam
rorl
jl
insl
jno
ljmp
test
pop
rclb
inc
mov
icebp
cmp
sub
mov
lahf
movsb
xor
sbb
mov
inc
push
int
subl
push
jecxz
mov
push
jnp
sbb
or
pop
xchg
mov
rclb
jle
lcall
adc
cmpsl
inc
lods
adc
fs
lea
fstl
jmp
fisttpl
int3
jg
jp
js
data16
push
dec
in
ret
dec
xchg
jb
adc
mov
push
mov
in
sbb
into
jns
leave
jbe
xchg
stos
enter
and
sti
sub
mov
sbb
mov
or
insl
lds
les
stc
jns
cmpsl
cmc
xor
pusha
and
insl
scas
sbb
mov
cld
mov
mov
icebp
lcall
mov
es
add
xchg
xchg
jno
popf
and
mov
jmp
jb
adc
repz
jae
jb
lcall
cmp
xor
xchg
pop
mov
sub
dec
adc
mov
add
cwtl
pop
dec
dec
dec
inc
cmc
leave
sub
cmpsl
fwait
xorb
outsl
ljmp
jmp
repz
sarl
test
lret
mov
je
mov
mov
mov
pushf
das
add
fldcw
adc
shll
test
pop
ret
faddl
out
push
mov
test
dec
push
or
and
clc
or
or
arpl
xor
mov
in
mov
jb
push
leave
sbb
aad
repz
jge
es
cld
fnstenv
in
push
push
mov
xlat
fstps
sbb
ds
ficomps
mov
mov
lds
mov
dec
sbb
sbb
inc
stc
dec
jns
adc
mov
ss
push
clc
xchg
bound
xchg
andb
test
lds
cmp
sub
sub
outsl
pop
test
or
adc
int
add
xor
rcl
out
xchg
stos
fwait
in
xchg
testb
xor
add
sub
push
pop
loopne
mov
cmpsb
mov
jle
inc
push
xor
ret
add
cmp
xor
pusha
and
in
xlat
je
jmp
lret
iret
xchg
add
xchg
jecxz
pop
jecxz
sub
insl
rclb
or
xchg
out
stos
cmp
es
xchg
enter
call
fldenv
daa
cmp
jae
adc
sahf
add
pop
jp
add
xor
push
es
es
scas
outsl
movsb
xlat
into
fcoms
lock
cli
adc
les
pop
add
cmp
pop
lods
jns
scas
aas
lock
add
lret
scas
or
pop
ljmp
stos
push
xchg
inc
divl
dec
pop
adc
data16
imul
inc
mov
and
push
ficoml
out
dec
imul
leave
ljmp
sbb
test
add
fsubrl
push
mov
push
insl
dec
into
out
leave
pushf
ja
inc
jne
push
nop
mov
adc
ret
xor
data16
cmpsb
push
pop
xor
sub
xchg
cwtl
push
arpl
push
mov
scas
or
push
stos
leave
pop
xchg
aam
adcb
in
or
pushf
mov
pop
loop
xchg
imul
push
mov
movsl
push
outsb
xchg
cmp
jp
pop
dec
or
movsl
aad
stc
adcb
in
sbb
jge
cs
mov
inc
dec
pop
out
or
add
jge
shlb
or
jb
dec
pop
call
jno
push
aaa
clc
dec
dec
inc
or
repnz
popa
push
cs
ss
and
xchg
mov
fwait
test
mov
std
scas
out
xchg
jecxz
iret
mov
ljmp
ss
inc
in
mov
loop
clc
mov
loope
sti
movzbl
daa
xchg
in
inc
push
push
mov
xchg
call
and
int
in
mov
adc
sbb
divl
call
push
and
xchg
aas
push
pop
dec
loop
lods
jl
ret
sti
add
fsubl
pop
jge
imul
shl
sahf
ja
jns
lock
in
or
shlb
data16
sti
ljmp
addb
jae
push
mov
dec
inc
sbb
xlat
pop
xchg
mov
adcl
xchg
js
cmpsl
das
mov
dec
xchg
das
xor
add
ret
fcomi
out
or
leave
sbb
fmulp
xlat
aaa
sbb
mov
push
xchg
or
leave
sbb
imul
fbstp
jae
adcl
das
cmp
sbb
shlb
mov
hlt
lcall
push
fsub
fdivr
or
test
cmpsb
mov
xchg
mov
dec
jecxz
pop
xor
pop
jns
cmpl
jp
enter
cmpsb
cwtl
jb,pn
out
add
and
iret
dec
or
xchg
xchg
dec
pop
push
adc
pusha
outsb
adcb
xchg
nop
push
addr16
or
imul
mov
dec
and
cmp
mov
out
mov
add
pop
shrb
in
imul
lods
sbb
imul
bound
outsb
in
sti
cmpsl
ret
mov
sbb
and
xor
jmp
loope
repnz
or
adc
iret
lock
xorb
out
sbb
pop
imul
and
pusha
sbb
push
insl
cmc
mov
inc
cmp
call
xor
stc
cli
sub
iret
outsb
dec
xchg
mov
dec
fs
cwtl
pop
sub
sub
jae
mov
push
jle
lods
filds
jb
mov
xchg
lahf
cltd
aam
pop
sub
ss
pop
dec
mov
ds
sub
stos
gs
xor
dec
inc
xor
cli
cmp
mov
push
nop
nop
lret
mov
pop
stc
adc
ss
movsb
cmp
je
decl
loopew
pop
imul
add
jmp
mov
pop
inc
pop
imul
rep
pop
fsubp
imul
jae
add
repz
xor
je
popf
dec
push
add
es
dec
lea
mov
sti
fdivrl
lods
cwtl
push
fs
test
push
int3
pop
imul
inc
push
jp,pt
and
cltd
add
push
filds
js
mov
or
shll
adc
sahf
xchg
data16
jecxz
cmp
dec
adc
pop
adc
or
sahf
dec
pushf
es
nop
stos
mov
stc
stos
xchg
pop
inc
pop
iret
stc
push
sahf
je
lcall
subb
add
cli
inc
orl
cli
fwait
and
mov
cmc
xchg
mov
mov
bound
push
hlt
pop
jns
out
je
call
lods
movsb
loopne
xchg
aad
out
pushf
pop
ret
xor
outsb
sub
or
jge
inc
mov
jbe
sub
jecxz
jae
jg
je
xlat
outsb
in
mov
xor
into
xor
movlps
pop
and
push
xchg
sbb
dec
insb
pop
cli
les
or
shlb
sub
xor
or
push
mov
push
sub
test
jns
daa
test
mov
dec
and
xor
je
jmp
repnz
pop
stc
jecxz
into
push
xlat
cmpsl
cltd
pop
add
xor
xchg
test
cmp
and
sti
sbb
dec
mov
dec
adc
outsb
fs
dec
push
and
fisttps
pop
sar
je
pop
push
fnstsw
pop
xchg
or
mov
sub
push
pop
mov
pop
cltd
loop
adc
or
pop
pop
sarb
repnz
sub
sbb
ljmp
mov
insl
clc
stos
ficoms
pop
xchg
xor
pop
add
pop
idivb
pop
inc
lahf
mov
es
fsub
xchg
push
loopne
aaa
inc
add
sbb
arpl
jb
inc
push
xchg
movsb
ss
fs
daa
mov
out
inc
stc
jne
lcall
fyl2x
xor
test
mov
fisttpl
push
out
fwait
scas
scas
scas
addb
xchg
pmulhw
or
xchg
dec
sbb
fldcw
mov
mov
push
gs
das
bound
sub
sub
add
cmp
rorb
in
ficoml
out
and
jle
or
pop
dec
scas
dec
in
fcoms
jmp
xchg
test
pop
loop
fnstenv
repnz
jle
ss
fwait
loope
sub
movsl
test
jge
fwait
sub
outsl
fisttps
call
icebp
dec
std
out
ljmp
out
dec
jecxz
dec
xchg
xchg
xor
inc
jl
in
in
je
ficompl
mov
and
nop
jo
cmp
inc
or
and
rol
stos
sti
jnp
push
cmp
data16
mov
fildll
inc
testb
adc
es
mov
bound
es
mov
leave
xlat
jl
and
and
mov
mov
ds
stc
in
dec
push
and
mov
into
in
test
scas
push
push
mov
hlt
or
aas
inc
jmp
adc
sbb
rcll
insl
test
or
bound
pushf
mov
xor
dec
hlt
psrld
insl
mov
icebp
jb
int3
fisubrl
pusha
xchg
stc
imul
cltd
xchg
jecxz
fwait
dec
test
test
xor
into
xchg
mov
sbb
rorl
jo
cmp
iret
aas
dec
sub
xlat
adc
jle
not
add
daa
daa
xchg
rsqrtps
pop
inc
push
lcall
dec
fisubrs
sub
push
mov
hlt
lret
xchg
and
add
sub
mov
sbb
pop
push
sti
xor
lds
jnp
push
call
sbb
pop
mov
mov
lret
xchg
ljmp
mov
jne
imul
fldenv
sarl
cld
xor
aaa
sub
sbb
xchg
xchg
push
icebp
pop
mov
jecxz
inc
in
sbb
pop
xlat
aad
cmc
ds
mov
mov
pop
loopne
xchg
push
fnstcw
mov
jb
lahf
jmp
rcrl
and
jmp
cmp
fdivs
mov
out
mov
mov
xor
pop
mov
pop
pop
pushf
cld
sbb
jle
lahf
or
in
les
jmp
sti
inc
ret
and
test
push
lcall
mov
mov
fisubl
lret
inc
mov
add
lock
push
cmp
cmp
xorl
addr16
adc
sbb
jg
cmp
rcl
leave
jbe
mov
inc
jecxz
out
in
mov
sbb
jne
fdivrl
jno
jecxz
or
xchg
cwtl
pushf
jge
or
pop
xor
jg
inc
sbb
andl
adc
add
xchg
pop
xchg
popf
pop
xchg
dec
out
push
and
jbe
repz
jge
add
adc
sub
mov
inc
inc
aam
arpl
loopne
testb
and
mov
jnp
inc
sbb
insb
leave
xchg
sbb
stos
cli
mov
mov
out
cmp
rcrl
pop
pop
or
pop
mov
movl
cmp
arpl
sub
stos
divl
mov
aas
loop
and
das
fisttpl
filds
jp
lock
mov
gs
pop
das
xchg
mov
sbb
sub
test
push
push
fnstenv
xorb
aaa
ret
stc
scas
mov
jb
or
pusha
mov
add
lret
pop
aad
mov
fwait
sbb
pop
sbb
jl
nop
aad
add
neg
xlat
orl
pop
inc
mov
rcr
adc
mov
dec
lea
adc
xor
ret
scas
ss
lret
dec
shlb
xchg
xchg
loopne
lea
scas
jb
arpl
mov
xchg
lret
test
cli
aad
cli
test
imul
dec
xor
cli
fstl
cmc
mov
xor
fistps
or
lcall
xchg
sbb
mov
dec
lock
outsb
mov
dec
xchg
lock
pushf
mov
mov
rorl
shlb
cmp
cli
xchg
push
jbe
test
std
xchg
push
fiadds
es
cmp
mov
idiv
outsb
sub
inc
xchg
dec
and
aam
out
aas
dec
sbb
and
xor
cmpl
in
loop
dec
fwait
sub
push
sbb
inc
mov
cs
addr16
pop
sub
aaa
mov
leave
pusha
xor
push
lcall
aad
in
testl
and
mov
mov
cmp
jle
stos
mov
mov
mov
sbb
mov
call
push
sahf
mov
or
push
jp
loope
pop
and
and
aad
icebp
inc
movsl
and
mov
inc
mov
icebp
mov
into
lcall
mov
jb
in
sub
aaa
rorl
aaa
stos
outsl
in
dec
enter
pusha
rcrl
pop
je
cwtl
shrb
outsl
dec
lret
and
insb
decb
lahf
cli
pop
sub
and
mov
das
mov
lret
sub
into
mov
mov
cmc
mov
sti
loope
popf
or
xchg
cmp
negl
icebp
dec
mov
inc
addr16
cmp
js
inc
lret
mov
mov
sbb
and
outsl
rclb
push
pop
inc
push
dec
add
fcmovb
jmp
outsl
sbb
sbb
ja
in
aam
jmp
and
jne
xor
ret
ret
pop
nop
sbb
outsb
push
loop
addr16
dec
xchg
fwait
xorl
stos
jo
pop
adc
js
push
inc
adc
push
xchg
cmp
jne
mov
sbb
stos
or
add
mov
or
test
shufps
pop
cs
addr16
cmp
xchg
repz
call
or
mov
fbstp
sbb
leave
and
mov
popl
es
rorl
mov
sbb
call
pop
outsl
aad
add
pop
nop
arpl
outsl
push
jmp
add
jg
pop
add
mov
ds
push
repz
roll
or
jne
mov
push
cmp
jp
xchg
dec
xor
shll
adc
cld
movsl
lret
hlt
addr16
pop
mov
xchg
inc
jmp
mov
cwtl
sti
xor
and
fs
fcomps
aaa
mov
pop
cmp
je
dec
loope
xor
inc
sbb
and
and
rorl
inc
add
dec
and
jg
movsb
iret
or
cmp
adc
sbb
pop
popa
jmp
insl
dec
loop
dec
lahf
lods
adc
insl
out
pop
imul
insl
dec
and
pop
mov
mov
movb
mov
aam
lea
sub
sarb
pop
sbb
sub
sub
testl
xchg
inc
pop
ret
pop
arpl
roll
mov
push
mov
sbb
lds
mov
jns
lods
out
dec
cmc
xlat
jbe
mov
rol
mov
arpl
call
push
dec
inc
fwait
mov
add
enter
jmp
je
sub
ret
sub
jnp
test
sub
add
repz
lods
mov
mov
dec
fldl
mov
lock
call
scas
lock
xchg
fcmovnu
outsl
xor
out
pop
xor
test
xor
arpl
adcl
mov
imul
dec
sahf
push
pushf
test
fistl
psrad
mov
mov
sub
fs
fdivrl
push
pop
test
scas
js
imul
clc
and
mov
cwtl
fwait
push
shrb
cld
jecxz
ret
popf
lea
ds
and
xor
leave
gs
lock
fscale
popa
mov
adcb
dec
push
jno
fiaddl
lret
fnstenv
mov
mul
cmpsl
ret
stos
dec
mov
std
or
mov
xchg
add
pop
inc
clc
int
jge
or
inc
xchg
scas
int
enter
ja
dec
push
mov
mov
iret
and
adcb
jb
fisttpl
test
adc
lahf
adc
mov
insb
scas
mov
xor
jae
push
aam
xchg
pop
push
fbstp
add
bnd
les
lds
mov
and
sub
adc
pop
jbe
sbb
rcll
xchg
adc
mov
xchg
xor
arpl
cwtl
imul
jbe
mov
fisttpll
add
jp
mov
fdivrl
pop
ror
test
sbbl
inc
lahf
js
cmp
mov
nop
inc
int3
in
outsl
jle
mov
out
pop
enter
lock
subb
cs
in
or
pop
and
cs
jb
xor
in
mov
aad
fsub
movsl
mov
jmp
push
jae
push
leave
mov
es
rcll
subl
pop
sbb
or
out
pop
dec
jb
cs
push
or
push
dec
push
ret
push
pushf
and
fwait
jecxz
rolb
xchg
hlt
add
xchg
dec
add
sar
cmp
je
lods
loop
das
popf
loopne
popl
inc
jecxz
cmp
pop
sbb
cmpsb
movups
xor
push
cmp
movsb
jg
cs
shlb
xchg
imul
dec
fwait
ds
mov
cmpsb
jecxz
roll
mov
outsb
sarw
mov
movsb
push
inc
mov
xor
imul
stos
test
inc
adc
aas
int
rorb
dec
jbe
xchg
out
scas
push
cltd
dec
cs
cmpsb
jne
aad
sbb
inc
sti
cltd
xchg
shrl
sub
gs
hlt
pushf
cmpsl
sbb
xlat
fistps
jae
fdivrp
imul
inc
lea
mov
xor
pushf
in
addr16
pop
xor
cmc
sbb
dec
shld
xchg
adc
popa
pusha
sahf
cmp
add
jae
sti
pop
shlb
fdiv
push
cmp
or
push
jp
pop
inc
inc
mov
gs
sbb
mov
mov
ror
into
mov
cwtl
test
adc
sarl
enter
imul
push
dec
call
imul
lea
fwait
test
pop
leave
pop
sarl
shll
xor
mov
or
cmc
js
inc
pop
add
mov
fldcw
roll
and
adc
lret
add
jbe
fucom
xor
and
inc
cmp
mov
or
pop
mov
cmc
cmp
or
mov
fsub
out
movsb
xchg
cmc
pop
stos
push
pop
out
mov
xchg
xchg
lock
test
sbb
mov
add
mov
mov
mov
jbe
pop
fwait
and
push
js
insb
fisubl
imul
scas
cld
repz
aam
push
cltd
outsb
pop
cli
xor
les
adc
outsb
cmp
lret
jg
mov
mov
push
jo
test
inc
and
cmp
xchg
enter
mov
push
push
cmovne
push
sub
inc
arpl
jno
rorl
jb
adc
jns
xor
jo
daa
xchg
outsb
pop
cld
fcomps
pop
xchg
enter
fmull
ret
adc
gs
cwtl
test
mov
aad
inc
imul
test
cmpsl
add
mov
push
and
ds
fisubs
mov
leave
mov
xor
cmp
addr16
or
loope
scas
popf
sbb
or
lcall
or
and
add
leave
or
or
adcb
mov
dec
push
sub
int3
push
fwait
push
imul
jne
mov
xchg
jb
jno
and
sbb
inc
mov
popf
push
jecxz
jns
mov
cmpl
es
cmp
loope
adc
push
mov
test
pop
fwait
xchg
or
int3
or
sbb
mov
out
pop
add
jns
inc
arpl
jle
scas
insb
jnp
mov
loop
jg
and
add
lcall
push
push
mov
dec
sbb
push
aam
sub
push
scas
and
mov
mov
mov
leave
ret
call
inc
mov
lcall
aad
bswap
jp
test
cmovne
lret
loope
xchg
adc
imul
std
test
dec
push
mov
fwait
xor
xchg
cmp
mov
sub
in
jno
xor
sub
incl
mov
rcll
xor
enter
cmp
mov
std
inc
push
testl
pop
bound
dec
daa
mov
es
fiaddl
mov
fmull
inc
es
cwtl
sbb
push
iret
xchg
xchg
movsl
xlat
adc
adc
sbb
call
rorb
sbb
dec
cwtl
cmpsb
push
ljmp
fldt
fisubrs
sbb
fildll
cmp
lcall
xchg
enter
xchg
xchg
out
nop
dec
clc
divps
cmc
out
icebp
data16
fcoml
mov
sahf
inc
dec
adc
sbb
fdivr
fists
icebp
mov
out
testb
popf
ljmp
mov
inc
jne
nop
adc
jnp
push
pop
mov
mov
leave
into
mov
cmc
js
out
push
je
movsb
mov
xchg
loop
mov
cmc
and
repz
or
sbb
cld
pushw
sbb
insb
mov
xor
adc
loope
lret
jge
xchg
mov
or
jmp
cmp
shrb
mov
enter
movsl
mov
rcrb
aaa
out
xor
aaa
pusha
fmull
jge
ret
cs
sub
sbb
jecxz
mov
and
icebp
ret
sbb
push
in
mov
jno
sbb
aaa
aaa
adc
add
sahf
jbe
adc
mov
shll
cs
aam
mov
leave
push
mov
adc
mov
inc
pop
add
jmp
hlt
in
fdivrl
cwtl
mov
in
cmp
push
add
adc
mov
data16
aas
dec
pop
icebp
hlt
call
xor
push
outsb
stos
jmp
fxtract
popa
sahf
fs
xchg
data16
call
xor
fisubl
pop
or
mov
mov
xchg
je
nop
push
pushf
lods
leave
sbbl
adc
xchg
int3
push
rcl
subb
int3
movsl
cmp
xchg
loop
mov
mov
test
clc
xchg
lret
popa
adcl
imul
mov
test
xchg
sbb
sahf
mov
lret
fstpt
ficoml
testb
push
mov
insb
xor
arpl
lcall
or
push
jecxz
testb
push
or
pusha
xor
sub
cltd
xchg
mov
iret
cld
lods
mov
xor
dec
fwait
xchg
xchg
test
add
jge
push
int
push
inc
mov
sbb
jbe
test
in
jmp
icebp
xchg
xchg
pop
daa
mov
inc
cltd
push
push
nop
cmp
testb
in
sahf
mov
lock
cwtl
movsl
push
pop
cmp
jecxz
out
adcb
out
pop
lock
out
pop
cmp
out
test
lock
mov
nop
jp
ret
xchg
xchg
lret
adc
jns
mov
jp
int
xlat
ret
mov
out
pushf
dec
xor
xchg
jne
xchg
ljmp
gs
loop
xchg
mov
mov
lahf
pop
push
add
dec
bound
jle
fs
add
sbb
sbb
sub
negl
fmull
xchg
js
jle
hlt
fstl
mov
lret
repnz
push
rclb
push
loop
call
add
fimuls
sbb
xor
add
cmp
ss
push
int3
stos
mov
dec
stos
cmc
mov
cmp
push
add
push
ds
loopne
mov
gs
sub
test
add
loop
pop
inc
xchg
nopl
insl
sbb
fsubrs
stos
xchg
push
mov
cmp
add
sti
inc
add
gs
jae
and
dec
pop
ret
jae
push
in
sub
test
iret
ds
out
sbb
mov
mov
or
add
jmp
decl
repnz
cld
mov
lcall
mov
lret
xchg
or
or
jbe
jle
cmp
sbbb
pop
shll
push
mov
stc
stc
dec
add
leave
pop
mov
mov
jmp
bound
imul
movsl
or
imul
xchg
fdivrl
mov
out
dec
shlb
aad
outsl
sub
test
imull
dec
add
aad
fwait
je
xor
mov
cmp
out
dec
dec
sbb
sarb
addr16
mov
les
pop
dec
mov
rcll
jg
mov
shlb
imul
dec
cmc
jno
mov
fwait
sub
int
pop
fwait
adc
push
mov
dec
enter
dec
data16
cmp
dec
jne
mov
adc
leave
push
pop
sub
inc
xor
jno
mov
or
dec
mov
lcall
jl
inc
fdiv
out
jnp
inc
jnp
push
fstpl
cld
sbb
fldcw
inc
ss
loope
mov
in
fldl
iret
mov
scas
and
inc
lock
movsb
es
jb
mov
icebp
outsb
push
rcll
xor
ss
cmp
cmpsb
fs
shl
cmp
and
dec
mov
jge
cs
repnz
pop
and
sbb
cmp
push
mov
inc
jb
insb
orb
adc
bnd
cmpsb
or
repnz
stos
push
ljmp
movsb
jns
jo
jle
adc
cmc
or
sbb
adc
or
adcl
mov
rolb
cs
push
loop
int3
xor
out
dec
repnz
leave
dec
pushf
sub
pop
cwtl
call
lods
xchg
jae
inc
shrl
or
lret
pop
clc
mov
cmp
sbb
jle
sbb
jl
sbb
xchg
aaa
push
imul
fisttpll
mov
mov
push
movsb
scas
mov
and
inc
mov
imul
dec
inc
aad
sbb
mov
mov
and
inc
ja
pop
enter
in
xchg
shll
jnp
repnz
mov
mov
aaa
jbe
imul
test
and
aad
aam
fcomps
in
shl
in
and
xchg
mov
jnp
mov
hlt
push
xchg
lahf
or
mov
orl
clc
push
leave
adc
mov
out
pop
sub
mov
mov
in
bound
sbb
scas
dec
cwtl
add
jo
adc
test
cmp
xchg
or
dec
ret
cld
add
fdivr
cmp
and
mov
mov
in
sbbb
jnp
fstpl
mov
int
mov
incb
jnp
in
xchg
pop
mov
mov
roll
cmp
push
sbb
push
ret
notb
mov
jp
fs
clc
cmovbe
in
test
cld
leave
icebp
lcall
fs
pusha
ljmp
jb
int3
adc
push
cmc
std
or
inc
inc
aad
mov
pop
push
cmp
test
or
push
cwtl
add
pop
push
test
les
mov
jo,pn
push
icebp
addl
cltd
pop
pop
loop
jb
jae
imul
jne,pn
and
int3
sbb
cmpsb
add
add
or
push
nop
xchg
xor
popf
cmpsb
inc
mov
pop
inc
push
int
xchg
adcw
mov
mov
push
outsl
hlt
or
and
xchg
xor
adc
or
decl
aaa
jmp
outsl
daa
mov
daa
pop
mov
nop
cwtl
inc
or
mov
in
jno
sbb
mov
iret
aas
mov
and
push
sub
mov
in
ja
jg
cmp
ljmp
adc
lock
jbe
mov
in
mov
pop
mov
sbb
in
iret
fisttpl
adc
enter
or
dec
std
adc
cli
das
push
das
lret
rcl
lea
leave
adc
popa
or
adc
fdivrs
sub
inc
cmc
in
or
stos
pop
jno
lock
out
or
cs
mov
pop
sub
jl
outsb
mov
sbb
sub
dec
pusha
iret
pusha
pusha
iret
loopne
aam
inc
out
jbe
clc
jp
sbb
xchg
push
jmp
andb
adc
data16
mov
and
fwait
rcrl
sahf
xchg
sahf
mov
insb
jae
call
cli
ja
mov
xchg
sahf
stc
sub
push
xor
orl
mov
les
mov
mov
lock
push
or
jge
mov
push
out
mov
ljmp
cmp
mov
mov
das
cwtl
scas
push
imul
les
call
lahf
movsl
adc
scas
jns
mov
lea
push
adc
lret
sti
lods
mov
ljmp
pop
sub
inc
mov
mov
cmp
fmull
cmp
inc
fcoml
das
push
jb
icebp
mov
pop
sub
xchg
fnstsw
ds
push
cmp
adc
jle
rorl
mov
loopne
jp
xor
and
jne
adc
stos
cmc
mov
loopne
insb
sbb
mov
jl
adc
mov
cmp
clc
ljmp
fistps
shll
push
mov
fwait
sbbl
sub
loope
inc
test
jne
dec
cltd
fistpll
rep
and
jns
mov
xor
loope
cmpsb
and
or
sbb
mov
popa
xor
outsl
imul
xor
pop
dec
pop
fmull
leave
push
insb
in
pop
ds
jecxz
adc
call
je
xchg
push
int
push
dec
lcall
push
icebp
js
sti
mov
mov
jl
sub
fcompl
pop
sub
sub
push
cmp
sti
xchg
push
imul
pop
js
inc
sbb
fsubrs
jle
mov
daa
mov
std
push
and
repz
aaa
adc
or
adc
xor
mov
popf
sbb
dec
push
mov
into
sbb
aaa
jl
mov
or
mov
xchg
arpl
and
popf
and
popa
jbe
push
fsts
cmp
sub
outsl
mov
lods
inc
sbb
movsl
xor
arpl
sarb
sbb
and
daa
mov
dec
cmp
xchg
cld
fiadds
mov
testl
popa
push
dec
lret
xchg
inc
insl
dec
ds
andl
jo
xchg
mov
fwait
push
inc
jg
out
xchg
movl
or
sbb
jmp
aad
fnstenv
es
insb
mov
inc
in
inc
fisubrl
enter
lahf
sti
cmp
movsl
scas
fmull
push
mov
sub
pcmpeqd
in
jge
push
imul
push
popf
xor
into
shl
outsb
push
sbb
inc
jnp
outsl
aam
and
add
push
in
gs
mov
inc
mov
hlt
jmp
cmp
cwtl
xchg
leave
add
jle
cld
push
xchg
loopne
push
loopne
mov
cmp
mov
add
sub
xchg
ror
mov
jle
cmp
daa
mov
pop
loopne
loope
jb
push
sub
mov
pop
gs
dec
insb
daa
jmp
stc
mov
je
data16
lds
aas
adc
test
push
jb
punpckhbw
pop
pusha
add
and
fistpll
sub
push
sahf
jp
sbb
popf
test
and
mov
repnz
imull
jecxz
dec
aad
mov
pop
mov
bswap
pop
pop
mov
inc
sbb
pop
pop
inc
test
jl
stos
std
xor
cmpsb
xor
or
out
cmp
sbb
pop
dec
jbe
inc
jnp
decb
or
xchg
cltd
cmp
jmp
mov
inc
divl
cltd
jmp
jge
ss
sub
and
into
push
ds
inc
inc
rcrl
push
popa
add
mov
sbb
subl
repnz
cmp
arpl
sbb
ds
js
rorb
mov
in
push
and
pop
test
mov
push
xlat
sbb
adc
fs
xor
cltd
dec
inc
divb
xchg
pop
mov
fsubrp
sub
mov
cmp
mov
cmp
ret
mov
jle
sub
or
cmpsb
out
div
and
cs
loop
mov
sbb
add
mov
ret
dec
add
shll
sbb
gs
add
sbb
int3
into
push
ljmp
xchg
lods
xor
std
inc
adc
ss
push
sub
les
sub
adc
add
mulb
xchg
imul
cwtl
add
fstps
pop
shrl
fdivs
iret
into
popa
scas
mov
pop
mov
jge
loopne
pop
sub
inc
imul
and
test
add
stos
jmp
pop
in
btc
push
lcall
cltd
testl
xor
xor
and
aaa
pop
mov
or
addr16
push
pop
mov
lock
hlt
mov
sub
fwait
inc
aad
pop
enter
in
pop
sahf
rclb
sbb
mov
or
pop
sbb
out
adc
inc
mov
adc
xlat
cs
pop
jne
out
sub
xchg
cmp
jmp
scas
outsl
pop
cmc
int3
sub
mov
mov
sub
negb
mov
insl
push
jl
pop
push
imul
adc
xchg
and
hlt
popf
xlat
mov
out
inc
out
int3
pop
jnp
mov
push
jbe
push
shl
cwtl
pop
and
and
push
addr16
add
icebp
pop
push
and
mov
cmp
ds
pop
mul
test
lock
mov
cmpsl
aad
mov
cmpl
cmp
mov
jmp
sbb
fldenv
fucomp
cld
mov
test
mov
inc
gs
inc
imull
dec
out
adc
and
sub
insl
dec
das
fadd
scas
fimuls
test
jle
js
jl
test
sub
lahf
dec
cmp
sub
shlb
push
mov
mov
pop
daa
dec
add
adc
or
adc
cmp
xchg
adc
rcr
ret
rcr
adc
pop
jbe
push
in
pop
push
push
or
js
mov
mov
push
fisubrs
outsb
repz
js
popf
int3
and
mov
pop
fwait
mov
jnp
aam
or
inc
sub
mov
mov
adc
xchg
cli
and
out
repnz
insl
daa
push
mul
or
mov
sub
aam
add
repnz
addr16
jmp
cmp
int
dec
add
int
or
add
out
add
je
mov
jle
hlt
data16
das
adc
ret
mov
orl
loope
xor
pushf
xchg
adc
insl
les
xorb
push
movl
imul
or
das
mov
xchg
mov
fwait
cld
mov
clc
cmp
jne
xchg
or
adc
and
ret
lcall
xor
add
and
cmpsb
lea
nop
addr16
aam
push
dec
aaa
aad
sbb
in
jp
test
or
sbb
adc
mov
mov
mov
outsl
pop
lret
fucom
insb
jnp
push
mov
popf
sarb
sub
pushf
inc
mov
adcb
pusha
or
mov
lret
pop
jnp
stos
iret
dec
push
and
or
insb
jnp
sub
cmp
arpl
and
ss
sub
out
dec
jbe
fistps
sub
enter
clc
xchg
xor
adc
inc
sub
fisubrs
inc
dec
int
in
push
lods
mov
jmp
sub
add
sbb
pusha
adc
xchg
call
popa
mov
pop
xchg
shrb
jmp
cli
or
ja
jnp
jg
in
add
cmp
rcl
mov
sub
xor
cld
push
push
jnp
cmp
pop
add
xor
in
out
fs
mov
or
push
jne
fld
mov
fwait
jp
dec
mov
xor
adcl
sbb
mov
and
xchg
daa
cmp
outsl
mov
jmp
add
mov
repnz
pop
mov
in
inc
cmp
inc
cmp
loope
push
dec
decb
or
pop
pop
movsl
jge
test
mov
add
loop
add
imul
call
std
and
inc
jb
fs
testb
pop
sub
adc
xor
in
sub
int
mov
or
sbb
int3
sub
sti
xchg
ljmp
mov
pop
mov
mov
sbb
inc
mov
roll
mov
push
sbb
inc
jne
add
adc
loopne
xor
mov
pop
jne
add
loope
mov
xor
pusha
push
add
dec
push
std
xor
nop
shll
cmp
inc
mov
fcoml
out
movb
ds
lock
repz
cmc
jge
pusha
inc
cld
outsb
leave
leave
lods
movsb
mov
loop
fstpt
loopne
and
and
push
loop
jmp
addb
icebp
ja
xor
rolb
jb
loopne
stc
mov
sbb
ret
push
xor
xor
lock
cmpsl
daa
mov
mov
ja
xor
cs
js
scas
add
sub
inc
outsb
pop
call
enter
xlat
pop
pop
incb
push
les
xchg
leave
mov
inc
cli
orb
jns
sbbl
out
xor
mov
shrl
out
imul
in
xor
jmp
mov
int3
cmp
mov
lea
pop
sub
sub
jb
adc
cltd
sbb
in
xchg
or
xchg
push
mov
sub
and
dec
aad
lret
push
xor
ss
mov
mov
sub
int3
les
xchg
sbb
stos
movsl
repz
sahf
in
xchg
ljmp
xchg
cmc
sbb
enter
pop
addr16
mov
jb
movsl
outsl
jnp
and
je
out
movsb
or
inc
add
xchg
arpl
and
inc
jne
stos
repz
or
add
sbb
rclb
gs
ljmp
mov
xchg
ror
and
repnz
in
cwtl
ljmp
inc
xchg
ss
sbb
js
or
sub
mov
pop
out
jge
and
mov
mov
daa
popf
out
sub
cmp
sbb
pop
cmp
and
pop
fcoms
cmc
rolb
cmp
clc
sub
data16
jl
out
and
in
popf
jp
scas
push
pop
mov
js
cmp
push
jbe
std
addr16
sub
fbld
xchg
add
push
sub
cmpsb
movsb
or
into
jp
jne
cmp
stos
lods
push
insl
fsubrl
ljmp
sarl
push
out
inc
pop
mov
pop
push
lds
fbstp
add
sbb
push
push
popf
or
fs
stos
push
add
aam
lock
iret
pop
pop
loope
mov
int3
stos
lds
cld
sub
cmp
add
xor
ljmp
jp
inc
pop
push
scas
mov
and
out
or
mov
jo
push
aaa
jne
push
subl
dec
imul
push
adc
mov
imul
and
inc
es
aas
mov
cmpsb
insb
mov
mov
jmp
cli
lahf
add
and
cmp
jae
rorl
adc
or
add
inc
nop
push
mov
mov
fdivl
aad
xchg
jmp
cmp
fldln2
cmp
sub
sbb
pop
outsb
mov
dec
jns
mov
add
or
mov
sub
adc
push
cmpsl
inc
push
xchg
mov
sbb
sub
sbb
adc
pop
add
filds
scas
xlat
jb
push
pushf
int
pop
sub
dec
or
clc
mov
subl
into
xchg
fistpll
cmp
add
movsb
das
push
lret
mov
rcrb
repz
add
mov
mov
iret
push
mov
psraw
fimull
dec
dec
sbb
lds
push
push
mov
inc
jns
arpl
shlb
mov
push
lea
fiaddl
std
mov
popa
mov
test
leave
xor
sub
fwait
push
test
xor
pop
daa
jns
loop
adc
lret
xchg
sub
scas
and
in
jl
test
add
jmp
push
mov
adc
add
xchg
iret
dec
fisubrs
and
xor
mov
mov
push
pop
mov
pop
xor
sub
mov
fs
aaa
xor
push
dec
pop
daa
or
jg
repz
jno
and
mov
in
mov
movsb
arpl
popa
sub
sbb
xor
mov
paddd
pop
or
mov
mov
hlt
adc
push
xor
in
dec
arpl
in
clc
sahf
xorb
push
jb
lcall
pusha
fwait
inc
fcomps
and
xor
rcrb
fsubl
scas
pop
mov
inc
mov
mov
andb
test
mov
xor
imul
pop
xor
mov
xlat
cmp
xor
aas
cmp
xchg
lret
cmp
xchg
mov
das
jns
js
in
push
clc
dec
pop
mov
xchg
lcall
out
clc
fs
lcall
jnp
add
sbb
inc
inc
gs
subl
push
pop
push
aad
fisttpll
xchg
cmp
mov
pop
lcall
jl
fimull
sub
cmp
add
mov
xor
dec
mov
jns
mov
cli
inc
mov
dec
imul
lea
xor
push
mov
cmp
ss
lret
stos
inc
jbe
stos
in
hlt
add
sbb
test
add
cmpxchg
push
stos
rcll
loope
out
inc
loope
lea
inc
jnp
fwait
lock
imul
ss
movsl
out
push
xchg
fs
xchg
jecxz
sub
es
mov
fstps
cmp
sub
imul
xchg
aam
mov
jnp
in
xchg
xchg
call
pop
mov
daa
mov
out
jmp
mov
adc
pop
lret
xchg
loop
jb
call
test
scas
push
loope
push
jo
mov
jmp
pop
je
aad
push
popa
popf
test
lret
data16
sub
je
mov
fidivrs
scas
cmp
jp
fmulp
scas
add
and
xchg
xor
push
shll
sbb
sub
mov
insb
xor
push
cs
pop
jle
adc
push
sbb
scas
xlat
fcmove
imul
jae
and
push
sbb
es
dec
js
cmpsb
mov
gs
add
sbb
repz
rorb
mov
push
jg
push
add
jge
push
mov
aad
mov
dec
adc
out
in
out
pop
cmp
comiss
mov
dec
pusha
mov
mov
adc
mov
icebp
mov
push
jle
lods
xlat
pusha
pop
rclb
and
popa
mov
sbb
xlat
dec
ficoms
mov
adc
fadd
stos
mov
cs
stos
mov
insl
divl
pusha
pushf
sub
divl
and
xorl
adc
repnz
ljmp
mov
jbe
sbb
xchg
imul
jae
in
push
stos
jbe
push
cmp
pop
fdivrs
pop
movsb
or
mov
cmpl
imull
sti
std
push
sbb
xchg
negb
jo
adc
pop
testl
lret
shrl
aaa
inc
and
pop
add
mov
test
rcrl
adc
xchg
fs
cmpsb
call
int3
push
and
imul
mov
ss
inc
jle
xchg
sti
pop
call
jl
in
outsb
jmp
daa
pop
icebp
mov
cmpsl
sbb
and
stos
or
pusha
or
xchg
cld
test
icebp
or
push
add
mov
jg
hlt
jno
ljmp
pop
sti
fildll
push
les
pop
fists
sub
js
pop
fmuls
mov
movsl
lcall
imull
out
jo
es
mov
or
outsb
xlat
fisubs
test
enter
xor
loope
int
push
dec
jle
xor
inc
cltd
xchg
lret
sahf
loopne
and
mov
sahf
push
xor
fs
xchg
aam
out
mov
mov
sbb
loope
push
lahf
jns
pushf
cmpb
xchg
sbb
cmp
aad
popa
and
pusha
nop
lea
sbb
insl
inc
daa
pushf
lea
and
inc
and
xchg
mov
ret
pusha
push
nop
push
ja
jb
cld
test
pop
bound
xchg
push
xor
push
int
repnz
pop
and
lock
cltd
cmp
push
int
cmpsb
cmp
mov
outsl
or
jmp
mov
xchg
out
xor
mov
xor
push
mov
mov
test
pop
push
sub
rolb
add
arpl
pop
sub
ja
idivb
mov
cmpsb
lahf
push
inc
das
mov
or
outsb
gs
add
or
cmp
or
xchg
fcomp
fcomps
dec
adc
mov
int3
shll
ljmp
inc
or
gs
int3
jno
sar
sti
aam
cs
dec
or
clc
mov
jae
adcl
repnz
sbb
fdivrl
mov
xchg
sarb
xchg
pop
pop
pop
pop
outsl
push
or
lret
sbb
add
out
ret
pop
inc
sub
test
push
xchg
cmp
add
sahf
mov
dec
pop
xor
rol
cltd
popf
and
in
fildll
cmp
call
imulb
imull
dec
jns
push
seto
popf
fmuls
jbe
sbb
std
bound
push
and
mov
push
push
imul
or
xor
sub
xchg
les
jne
push
pop
pop
sub
arpl
cwtl
sbb
andb
adc
jns
out
pop
push
inc
daa
daa
inc
fidivl
mov
fs
mov
das
adc
mov
fadds
jno
popf
test
pop
lcall
mov
mov
push
xor
or
fnop
mov
mov
sub
and
repz
imul
idivl
sub
mov
lock
inc
pop
pop
xor
jbe
lds
mov
inc
adcl
jle
add
out
pop
stos
stc
fs
mov
or
sti
xchg
popf
ja
ret
xor
jp
sbb
rorb
sahf
xor
mov
add
push
mov
test
out
pop
inc
leave
out
adcb
movl
outsb
pop
xor
jg
sbb
sbb
push
fstpt
les
fcoms
mov
leave
dec
clc
scas
cltd
xchg
mov
iret
or
jbe
negb
imul
or
dec
mov
out
pushf
sbb
xor
push
jle
add
cmp
sbb
jl
push
test
stos
mov
in
adc
xchg
fdivrl
leave
mov
mov
std
fwait
pop
pop
xchg
pop
shl
cmp
mov
lods
or
cmp
lea
cmpsl
out
ds
mov
lahf
dec
add
cmp
ja
jnp
imul
or
xor
es
or
sarl
outsb
not
inc
outsl
xor
xor
outsb
rolb
pop
mov
jle
xor
aam
in
xor
mov
cli
cmp
aad
adc
dec
repz
inc
jbe
xor
fs
dec
aad
std
in
xor
xchg
or
sahf
xchg
mov
jle
iret
dec
cmpsb
mov
adc
jg
and
sub
push
mov
mov
push
movsb
setl
js
pushf
and
fsubr
jne
repz
rolb
add
fidivrs
int3
je
aam
in
into
jecxz
mov
dec
jbe
dec
std
add
shr
inc
vunpckhps
daa
pusha
xor
or
clc
outsb
lds
push
fwait
pusha
xchg
stos
or
sbb
xchg
push
dec
inc
je
pop
int3
jmp
mov
insl
movsb
inc
mov
aas
adc
pop
cltd
enter
dec
xor
subl
les
add
test
filds
gs
push
into
movsl
and
stos
pop
dec
negb
inc
mov
in
int
pusha
mov
lahf
clc
sbb
and
push
lcall
pop
or
xchg
adc
mov
xchg
add
pop
dec
ret
fcomip
xchg
adc
xor
inc
and
imul
or
aam
enter
and
xor
jne
inc
pop
push
std
jg
xchg
fmull
mov
sbb
cltd
dec
cmp
xchg
jmp
add
shrl
mov
repz
sbb
out
and
je
push
sti
pop
aaa
mov
lret
push
dec
push
stos
sbb
xchg
push
scas
push
adcb
pop
jmp
out
notb
jns
dec
xchg
nop
xor
test
outsb
imul
insl
gs
mov
loopne
pusha
cli
mov
in
push
les
jns
cmp
hlt
aam
lahf
test
std
iret
lahf
jbe
jge
cld
push
mov
jb
fiaddl
xchg
jecxz
dec
jmp
and
dec
and
and
iret
ljmp
inc
inc
mov
rcrl
into
insl
push
push
ret
in
ret
cmp
push
xchg
dec
imul
lds
rcll
scas
imul
sub
arpl
in
push
insb
or
hlt
scas
scas
cli
sub
aaa
jb
mov
pushf
into
cmc
pop
mov
ret
in
inc
lds
pop
sbb
testl
sbb
adc
push
loopne
shlb
aam
sbb
sbb
frstor
pop
add
in
adc
out
repnz
fs
pop
data16
icebp
or
and
sbbb
push
or
enter
xor
xchg
mov
dec
mov
nop
cmp
xchg
mov
rcr
int
add
inc
mov
push
stos
movsl
in
add
fmulp
push
and
and
cmp
and
loope
subl
inc
icebp
addr16
xchg
je
cmp
movsb
faddl
stos
jge
dec
push
sbb
rcrb
pop
xor
add
out
bound
js
test
xchg
imul
xor
sbb
sbb
mov
jl
loopne
mov
or
inc
filds
cmp
fisttpl
inc
mov
xchg
mov
xor
repz
xchg
test
sub
lds
sti
inc
out
jp
insb
loopne
sub
lret
or
and
adc
in
je
movhps
mov
shl
mov
pusha
fs
or
dec
loope
pop
cmp
add
insb
loope
lret
clc
stc
pop
jae
push
test
mov
cmp
lcall
jbe
mov
repz
dec
jp
out
sub
scas
mov
adc
lods
jl
inc
pop
rorb
lret
ja
cmp
fisttpll
hlt
xor
cmc
icebp
mov
stos
jg
cmp
arpl
inc
mov
or
dec
jns
jb
xchg
loop
pusha
in
mov
or
outsl
sub
adc
pop
repz
pop
leave
lcall
sbb
into
notl
pop
dec
adc
xchg
push
or
mov
aam
out
mov
mov
div
mov
or
push
add
fstpl
inc
sub
lea
fcompl
cmpsb
and
roll
mov
push
test
xchg
sbb
repnz
pop
xchg
nop
hlt
std
stc
jp
data16
fsubrp
jb
iret
iret
xchg
xchg
cmpsl
mov
movsb
pop
or
rcrl
adc
adc
test
dec
fsubrs
out
out
cld
dec
ljmp
push
mov
mov
nop
loope
jns
mov
inc
test
jge
or
icebp
rcl
adc
mov
or
addr16
in
xchg
inc
out
push
movsl
xor
pop
inc
fwait
xor
xchg
and
icebp
sahf
lret
push
inc
push
insb
loopne
loopne
int
std
mov
aaa
adc
lock
cli
dec
aam
push
idivb
xchg
push
gs
pusha
cmp
loope
cmp
push
add
pop
xor
test
sbb
mov
mov
mov
mov
dec
jne
pop
imul
sbb
and
or
ret
mov
add
les
and
pop
hlt
pop
mov
ret
das
and
das
mov
sub
fistps
outsl
cld
xor
or
and
inc
mov
call
outsb
lret
insl
out
push
nop
or
sbb
repz
sub
lret
dec
push
add
dec
inc
or
xchg
pop
es
andl
outsl
aaa
ds
sti
adc
pop
mov
sbb
pusha
cmp
xchg
cli
and
xchg
dec
shll
inc
rolb
mov
xchg
mov
insl
shr
sbb
push
loopne
shlb
push
cmc
xor
inc
sbb
push
jecxz
jno
sub
pmulhw
cltd
jo
cmp
adc
repnz
mov
cmp
cwtl
aas
sub
fcoms
mov
pop
loop
sti
jo
sub
or
mov
ja
jb
sbb
aaa
xchg
xchg
into
iret
add
ljmp
adc
xchg
mov
repz
sbb
into
push
inc
fidivl
mov
inc
cmp
leave
test
repnz
xor
xor
movsb
and
dec
push
arpl
jmp
and
pop
ja
in
inc
pop
jno
lahf
mov
xchg
dec
cs
sbb
hlt
push
call
ljmp
cmp
leave
cli
and
cmp
lahf
adc
and
mov
addr16
sbb
data16
mov
ret
shrl
lds
jp
mov
push
cld
dec
das
xchg
cmp
xchg
jl
sub
rolb
and
ss
ficompl
out
shrl
push
mov
or
aam
lds
mov
std
mov
lods
and
outsl
ds
xchg
mov
dec
or
sub
push
in
jecxz
ja
sbb
add
rcr
or
test
inc
jmp
ds
lea
and
movsb
cmp
dec
and
sahf
mov
jge
adc
inc
adc
shrb
arpl
sbb
or
movsl
cmp
sbb
jno
lahf
mov
scas
dec
fcoms
add
leave
lret
mov
dec
xchg
scas
mov
pop
lcall
and
mov
addb
fiadds
notl
mov
fwait
cmp
sub
xchg
jne
stc
mov
cmp
push
insb
cmpsl
push
clc
push
cmp
mov
sbb
stc
mov
cmp
nop
loop
pop
mov
pop
mov
push
dec
jbe
cli
mov
addl
leave
xchg
pusha
lods
cli
es
out
call
es
add
pop
adcl
pushf
mov
push
outsb
xchg
jle
xor
jae
rclb
iret
nop
stc
movsb
ds
xchg
dec
jns
or
into
lock
mov
sti
and
sbb
mov
push
add
int3
xchg
loope
cmc
lods
adc
jb
mov
cs
or
imul
pop
pop
and
popf
sbbl
ljmp
sub
popf
cld
xor
scas
daa
push
aam
rorb
lret
push
scas
pop
pop
loop
mov
out
sbb
in
pop
lock
gs
mov
mov
nop
pop
fldcw
rcll
gs
aam
aam
or
mov
dec
xchg
jg
xor
int
insb
add
jmp
lods
fiadds
mov
pop
lret
jp
ficoms
pop
jno
insl
mov
aad
loopne
je
jae
imul
mov
in
xor
sub
pop
inc
jmp
push
add
andl
sub
pop
lods
ljmp
call
bound
cltd
pop
je
jl
or
insb
aas
insl
mov
das
and
push
cmp
fs
and
fiadds
xchg
fwait
scas
stos
aad
push
out
fbstp
inc
sarl
ret
jge
mov
dec
inc
mov
and
mov
aam
lret
and
inc
cli
scas
adc
ret
inc
pop
lods
loop
sbb
adc
add
mov
daa
jle
scas
push
jbe
mov
in
xchg
or
jmp
xchg
add
ljmp
mov
mov
mov
setbe
inc
jl
outsb
fdivrl
lods
pop
loop
sbb
into
ss
lret
cmp
sbb
fucomp
repnz
mov
push
int3
dec
inc
int
test
inc
leave
mov
add
out
jnp
mov
push
mov
outsb
ret
mov
icebp
js
sbb
in
dec
ds
inc
sub
push
outsb
lds
enter
push
scas
jl
mov
ret
xor
out
add
or
inc
mov
imul
xchg
jne
cli
loop
rcrb
xor
sbb
clc
push
sahf
adc
mov
sbb
xchg
scas
sub
fcoml
sub
imul
xchg
mov
fidivrs
dec
sbb
pop
sarb
fwait
xchg
mov
xlat
or
inc
xor
pop
mov
loope
inc
popw
dec
je
dec
pop
mov
cmp
inc
dec
aaa
push
xchg
aaa
pop
mov
adc
push
pop
add
push
adc
divl
or
add
xchg
pop
jp
lods
push
xor
test
and
pusha
lcall
mov
into
mov
push
ror
insl
lret
fsubp
fs
arpl
sub
out
addr16
push
jmp
pop
test
js
and
cld
js
fnstcw
adc
or
sub
push
adc
iret
mov
adc
sbb
xor
push
outsl
mov
xor
test
push
subb
and
cmp
jp
stos
pop
incb
and
mov
pop
lds
negb
gs
pusha
scas
dec
std
and
aas
arpl
out
push
jl
movhps
in
loopne
outsb
push
in
in
out
andl
push
dec
push
mov
out
cmpsb
mov
and
inc
cld
icebp
lods
mov
sbb
mov
pop
movsl
lock
pushf
cmc
loop
sub
mov
pop
fwait
addps
xchg
in
sbb
pop
inc
jle
mov
popf
add
xor
fistpl
mov
stos
ja
jbe
fdivs
or
adc
scas
int3
repnz
sahf
mov
cmp
repnz
mov
fs
scas
or
and
repz
pop
or
imul
cmp
insl
push
xor
mov
inc
push
popf
arpl
cmpsb
call
leave
mov
fs
in
sbb
fdivrl
cmp
dec
out
lret
dec
sub
jno
out
out
jb
jecxz
xor
push
adc
push
insl
fsubp
add
pop
push
jbe
loope
lock
jge
mov
inc
mov
and
enter
mov
inc
fisubrl
xchg
fdivrs
lret
shlb
adc
ret
sub
sub
fwait
sarl
rcrb
push
lods
and
ret
inc
mov
jecxz
rclb
or
loope
fs
dec
adc
repz
or
fldt
mov
mov
add
mov
fldenv
mov
test
lock
mov
fidivrl
push
daa
test
fildl
jecxz
inc
iret
mov
sbb
adc
orb
fs
push
add
stos
mov
sub
dec
stc
push
popa
mov
inc
lret
data16
out
adc
imul
adc
mov
mov
and
mov
fwait
sbb
sub
mov
out
mov
adc
imul
rcl
cmp
and
je
mov
sub
inc
repz
adc
dec
sub
jb
clc
iret
popa
add
dec
pop
adc
fs
mov
imul
mov
add
scas
fsts
cmp
jno
mov
lock
inc
push
mov
mov
in
clc
insl
jge
out
dec
jge
popa
push
jno
or
mov
lahf
and
inc
push
cmp
pop
outsl
movsb
push
xchg
cmp
in
test
sbb
stos
push
adc
mov
dec
stos
sbb
mov
ret
or
test
data16
pop
scas
in
mov
mov
out
lahf
insb
mov
sub
jno
movsl
and
leave
push
mov
fiaddl
sub
int
aas
push
insl
test
inc
cwtl
stos
sbb
sbb
lea
pusha
mov
mov
shll
decb
stos
sub
stos
push
lods
or
shr
ret
jl
fwait
fwait
or
jae
jb
test
out
xchg
push
aam
ds
test
movsl
sbb
add
inc
jae
shl
inc
mov
sbb
xchg
inc
sahf
jo
and
lea
pop
add
fs
xchg
dec
push
pop
movsl
and
bound
faddl
jmp
add
inc
push
cld
addr16
bound
jecxz
sbb
xchg
out
or
inc
das
rol
jno
imul
fwait
xchg
sbb
or
lea
loopne
sub
mov
cmp
mov
stos
out
ljmp
insb
xchg
in
cmp
hlt
mov
aaa
jo
dec
fdivp
out
sahf
xor
push
cmp
mov
pusha
sbb
loope
xchg
sub
stos
test
imul
mov
pop
inc
sub
or
or
insl
outsl
pop
popa
das
push
outsl
or
sub
dec
xchg
ret
pop
sbb
ficoml
add
jae
mov
lods
ja
xchg
mov
out
fildll
mov
cli
std
dec
sub
push
mov
jnp
cltd
xchg
adc
xor
insl
sbb
mov
imul
push
mov
stos
adc
mov
ret
gs
cli
lahf
cmp
mov
mov
xor
xchg
mov
mov
leave
inc
cltd
jmp
aad
daa
mov
sbb
shll
popf
in
jp
jb
push
les
dec
out
sub
out
outsl
out
test
adc
or
in
xor
push
pop
sahf
les
xchg
cmp
inc
mov
cld
movsb
pop
test
jmp
and
ret
mov
or
ret
mov
nop
sub
rcll
jns
push
lret
mov
inc
or
pop
sub
mov
call
shrb
push
popa
sub
movsb
and
mov
mov
leave
addb
popa
insl
inc
dec
je
cld
inc
fstp
aas
cmp
and
inc
mov
outsb
xlat
push
fwait
ds
lcall
clc
pushf
in
mov
pop
fisttpll
fwait
mov
ljmp
call
mov
pop
test
daa
out
jmp
xchg
add
or
inc
fs
test
xor
out
mov
aad
xchg
mov
test
icebp
cmp
in
xchg
sub
sub
xor
sub
inc
test
jp
je
mov
push
inc
fisubrl
pop
push
lahf
int
cmc
adc
dec
push
lds
fisttpll
and
ret
inc
testb
test
inc
push
jl
xchg
into
lret
aad
testl
or
cli
cmp
inc
push
retw
roll
les
sbb
in
mov
xor
adc
add
rep
dec
mov
fistl
mov
rclb
stc
jp
and
mov
orb
push
xchg
pop
dec
pop
cmpb
cld
out
jnp
add
jle
add
test
leave
stos
add
iret
loopne
push
ret
or
mov
push
lahf
cmp
insb
inc
adc
aad
pop
dec
cmp
roll
cmpsb
dec
insl
jnp
mov
jl
dec
mov
fucomp
and
dec
movsb
daa
or
mov
add
popf
push
adc
vphadduwq
mov
pop
test
sub
repnz
jg
movsl
imul
lcall
lock
push
dec
push
mov
aas
addr16
jg
add
inc
in
test
cmpsl
rcll
mov
mov
sub
lods
push
or
jne
push
imul
das
cmp
jg
and
cmp
add
mov
fwait
mov
mov
or
test
inc
sub
sbb
jg
xorb
in
mov
data16
gs
or
mov
loopne
xchg
sbb
pop
sub
mov
nop
mov
stos
jle
fldt
movsl
int
mov
sbb
mov
mov
or
and
add
imul
popf
mov
lcall
add
mov
jecxz
dec
stc
mov
insl
push
and
mov
add
mov
lcall
fmull
xchg
mov
imul
and
std
sbb
dec
outsb
ret
sub
cmp
mov
cmpsb
cmp
inc
mov
imul
dec
and
das
ficompl
sets
sub
icebp
sub
out
enter
jb
iret
rclb
cmp
movsb
sub
adc
repnz
ja
adc
or
fadds
or
xchg
ds
shlb
pop
sbb
pop
mov
adc
sar
jo
insb
inc
and
lret
inc
pushf
pop
or
inc
pop
mov
sbb
int3
jg
mov
inc
loopne
xchg
mov
xor
add
mov
jp
jnp
mov
sarl
mov
cmp
outsl
movsb
xor
jae
inc
mov
repnz
clc
cmc
aaa
or
fstpt
ljmp
inc
jno
pop
and
imul
gs
adc
loope
cmp
dec
push
cmpsb
out
and
roll
xchg
js
mov
add
dec
jg
shl
mov
mov
push
and
out
xor
mov
cltd
or
rep
mov
push
mov
xchg
sbb
or
xlat
out
dec
inc
jb
lahf
repz
xor
adc
bound
mov
ds
jno
sbb
push
xor
inc
adc
mov
in
frstor
loop
and
push
rolb
push
enter
pop
popf
nop
movsl
jbe
sar
mov
int3
sub
xchg
sti
push
xchg
add
out
xchg
test
mov
cmp
mov
decb
mov
mov
jl
cmp
pop
sti
ja
out
lods
pop
mov
pop
mov
adc
in
dec
pop
sub
lahf
bound
xlat
inc
jg
push
jmp
sbb
movsl
dec
adc
mov
test
loopne
loop
mov
icebp
sbb
arpl
or
sub
call
jns
je
ret
or
shl
push
pop
mov
xchg
ds
insl
cmp
mov
in
add
lds
fsubs
sbb
push
lahf
in
dec
mov
bound
xlat
jns
jmp
mov
add
push
dec
clc
nop
dec
adc
in
sbb
jnp
mov
call
sbb
cmp
adc
pop
aad
jle
lcall
gs
rolb
cmp
mov
repz
nop
jo
xchg
mov
inc
push
scas
movzbl
mov
int
xlat
xor
mov
pop
lret
lcall
mov
cmp
mov
xchg
aam
or
frstor
inc
inc
jbe
push
loope
sub
out
loope
nop
out
das
cmp
push
jmp
test
test
fwait
in
xor
mov
imul
xor
adc
mov
add
cmp
mov
cld
popa
stos
cwtl
leave
xchg
push
mov
outsb
mov
movsb
call
push
cmp
hlt
into
jbe
scas
repz
xchg
mulb
mov
push
adc
xchg
cmp
xchg
and
lods
xor
popf
dec
mov
and
shll
fldenv
and
push
or
push
loope
adc
xor
push
pop
out
jmp
mov
scas
lock
cmp
and
ror
das
cmpsb
push
and
xor
cltd
ja
push
insl
sbb
jg
fistps
inc
js
stc
bound
das
lock
and
stos
test
and
dec
andl
pop
xor
or
insb
xchg
inc
test
inc
je
xchg
iret
mov
outsl
pop
pusha
or
lods
dec
shll
adc
arpl
js
and
int
mov
pusha
inc
repz
outsl
movups
lcall
or
out
pop
jns
push
pop
mov
call
cmc
scas
lock
push
iret
subl
addr16
and
ljmp
fs
pop
cmp
xchg
pop
lea
xchg
inc
mov
pop
std
push
pusha
jns
pop
cmc
stos
jmp
fwait
dec
jmp
lods
subb
fidivrl
or
out
mov
xchg
mov
pop
lret
mov
out
push
insl
int
in
out
imul
fidivrs
mov
stos
mov
ret
ret
mov
pop
lods
stos
daa
adc
and
stc
push
and
and
xchg
pop
ret
rolb
test
mov
fcmovbe
ljmp
shll
sbb
adcb
es
push
and
in
sti
ja
mov
jmp
jnp
ljmp
int
test
fisttpll
insb
out
push
scas
les
je
jbe
sub
xor
icebp
rorb
or
pop
movsb
or
or
cmovp
xchg
inc
mov
dec
insl
lret
and
int
jge
es
mov
pop
jno
xlat
in
xchg
sbb
in
mov
test
mov
lret
xor
int3
lock
loope
mov
subl
daa
dec
push
jnp
pop
cmp
hlt
ljmp
cmc
roll
mov
jp
or
or
pop
pop
int
stos
jp
outsl
mov
jle
pop
cli
mov
imul
es
loope
fisttpl
in
fiadds
inc
jmp
jnp
cmp
decb
and
pushf
mov
cmp
idiv
xchg
ret
xchg
enter
rclb
sub
cmpsl
data16
pop
rorb
adc
xchg
sbb
out
or
scas
xchg
push
outsb
cmpl
dec
ds
sub
inc
xchg
cltd
int
cmp
or
idivl
js
imul
addr16
cli
out
and
subl
sub
repnz
arpl
je
inc
rolb
stc
in
fadd
dec
pop
adc
fidivrl
mov
jns
into
fsubrl
adc
mov
movsl
and
aas
lea
js
xchg
testl
and
or
xchg
pop
cmpsb
dec
int
stos
push
jecxz
movsb
xor
xor
outsb
out
es
dec
xor
scas
sti
fwait
test
pop
mov
jns
movl
inc
sbb
jecxz
and
rorb
pushf
andb
lods
iret
shlb
lods
or
pop
mov
inc
movsl
into
xor
xchg
cwtl
mov
sti
push
pop
gs
push
hlt
mov
mov
add
add
add
fidivl
xchg
sahf
push
lds
out
sbbl
ror
popa
inc
push
cmpsb
mov
or
fldcw
adc
in
mov
sti
hlt
xchg
mov
sbb
aam
cs
jae
jmp
add
cmp
arpl
movsb
mov
add
ret
clc
adc
mov
aas
xchg
or
sbbb
jle
sbb
jo
mov
int
sti
xlat
outsb
dec
mov
movsb
and
jno
pushf
sbb
pusha
mov
sti
dec
push
jno
mov
push
lock
pop
mov
and
adc
mov
fmull
pop
loopne
shl
sbb
rol
cmp
nop
loop
or
and
push
in
dec
sar
inc
cwtl
prefetch
leave
ljmp
lock
adc
cmpsl
shll
sub
or
mov
jb
xor
mov
stos
or
dec
add
fwait
push
sub
leave
lea
or
mov
insb
lcall
pushf
rcll
in
stc
adc
fistl
inc
mov
dec
out
dec
adcb
popa
dec
cwtl
jbe
dec
push
lret
mov
or
sub
xchg
leave
in
lret
lcall
xchg
outsb
jo
std
xor
cld
bound
out
fistl
mov
cmpsl
jnp
and
ds
mov
xchg
lret
and
test
test
push
out
jl
jno
pop
lea
jbe
shl
les
popf
sbb
cs
mov
mov
push
sub
or
fisubl
repz
jmp
rolb
inc
xchg
jge
mov
push
dec
sub
push
ljmp
lahf
outsl
les
in
or
push
bound
std
out
add
adc
mov
add
iret
mov
loopne
stos
mov
or
ljmp
inc
mov
repnz
dec
sbb
xchg
outsb
pop
dec
jbe
inc
stc
cld
ljmp
inc
fs
mov
jle
mov
add
adc
test
and
testb
push
dec
scas
nop
xor
mov
sub
out
test
mov
fsub
ja
fnstenv
enter
mov
jmp
sbb
pop
sub
xor
test
add
dec
fwait
mov
cmp
nop
inc
push
and
pop
pop
jg
xor
lea
mov
mov
aam
xor
mov
cmp
mov
sahf
mov
testl
cmc
movsb
loop
inc
test
and
add
mov
aam
loop
inc
sub
enter
arpl
mov
scas
pop
and
pop
or
les
jge
xlat
jl
in
and
mov
pop
xchg
sbb
dec
mov
push
push
sub
push
test
xor
push
mov
callw
push
xor
mov
scas
add
inc
mov
pushf
jo
call
xchg
and
leave
and
push
jnp
push
xchg
xchg
sub
adc
sbb
xchg
cmp
cltd
pop
cmp
add
add
repz
in
jnp
test
nop
int3
sub
xchg
cmpl
mov
mov
xchg
xchg
pop
imul
dec
mov
fwait
mov
mov
push
scas
xor
adc
xchg
push
and
outsl
mov
xchg
mov
lret
outsb
int3
inc
int3
cld
inc
enter
int3
fwait
add
inc
cwtl
fcompl
push
aas
insb
adc
outsl
addr16
mov
xchg
inc
insl
mov
xchg
stc
pusha
add
popf
mov
mul
inc
int
sub
cli
imul
ja
cmp
in
jg
jg
test
mov
fwait
push
paddusw
lret
xlat
fwait
clc
dec
mov
nop
jno
addb
test
mov
outsb
dec
outsb
add
jnp
lret
ret
add
mov
fsub
jae
scas
das
inc
xadd
jae
dec
leave
iret
in
cwtl
mov
enter
xor
cmp
pop
xor
repnz
sar
mov
fisubrs
sbb
imul
dec
leave
adc
jne
jl
cmc
sbb
test
imul
mov
jno
lea
push
lock
lcall
sbb
js
das
lcall
popa
mov
stos
dec
scas
adc
xor
fdivrs
stc
push
sbb
jp
je
cmp
mov
add
aas
and
daa
mov
jle
push
xor
adc
cltd
aad
sbb
ret
je
pop
sub
and
or
lock
adc
add
mov
push
scas
mov
pushl
dec
shrb
repz
jecxz
jmp
mov
sub
addr16
mov
inc
out
pop
or
mov
pushf
fimull
rol
sbb
sbb
jo
jmp
and
inc
fimuls
in
icebp
mov
push
lahf
ss
popf
iret
int
cmp
dec
out
ljmp
js
mov
lods
js
push
jbe
mov
cmp
fwait
jne
out
sub
and
jb
and
nop
mov
inc
xor
pop
cmpsb
ret
pop
out
mov
filds
add
test
ss
cs
int3
out
test
cld
lahf
mov
dec
pop
jns
sbb
xor
jns
push
add
cli
movsb
push
xor
add
ficoml
aaa
and
jnp
mov
push
mov
test
insl
loope
and
repnz
add
aas
cmp
sti
push
push
idivb
test
pusha
popa
lock
adc
rcrl
call
rcll
pop
mov
cmp
and
mov
int
pop
add
loop
outsb
mov
imul
or
addb
je
in
aaa
shlb
clc
inc
ds
test
cmp
call
cmp
fs
enter
pop
cli
addb
test
and
mov
jo
sahf
inc
add
mov
ss
xor
rolb
pop
fiadds
jbe
lret
mov
test
gs
mov
mov
dec
pusha
lea
xor
insb
push
shll
and
lret
lahf
cld
xchg
incl
pop
xor
cwtl
push
xor
xchg
in
mov
sti
add
sbb
loop
adc
in
outsl
sbb
inc
sub
cld
xchg
cmp
push
xor
cmp
pop
repnz
sub
sbb
inc
push
jmp
pop
pop
out
jecxz
and
and
adc
adc
dec
dec
in
loope
rcrl
test
xchg
subl
test
daa
shll
xchg
inc
jp
jo
jge
lock
mov
mov
adc
xchg
testl
lret
xchg
push
jle
call
jne
xor
dec
inc
data16
mov
cld
mov
into
xchg
cli
add
sub
pop
mov
scas
mov
scas
fs
out
mov
into
jmp
int
lods
cmp
adc
jae
adc
loopne
nop
test
movsb
mov
dec
dec
jmp
outsb
ret
jmp
inc
lea
sub
stos
mov
sbb
pop
stc
outsl
sub
xor
mov
pushf
fiadds
xchg
stos
xchg
adc
pop
hlt
andb
mov
insb
or
inc
ljmp
enter
rcrb
pop
imul
aam
inc
cmpsl
out
pop
pop
outsl
mov
movsb
cmpsl
insl
add
cmp
daa
xchg
and
imul
stos
rcrb
jno
xor
sbb
sub
cmc
lods
in
sbb
les
movsl
and
xor
sbb
sti
push
ret
push
xchg
fmul
stc
push
pop
mov
std
iret
pop
loop
nop
insb
stos
cmp
lcall
push
and
int3
xchg
stc
iret
cwtl
test
ss
jle
cmc
xchg
sub
ja
lds
cmp
push
mov
jns
loopnew
shrl
inc
into
dec
add
sub
mov
or
xchg
fwait
jle,pn
repnz
pusha
sub
mov
inc
jne
not
push
pushf
sbb
push
mov
into
popa
in
inc
sbb
mov
mov
push
mov
pop
ds
out
hlt
and
out
inc
xchg
adc
mov
push
xchg
out
push
rcrl
push
imul
mov
xchg
out
stc
jl
cld
xor
shr
imul
push
inc
mov
ret
fwait
icebp
jecxz
pop
mov
out
inc
mov
fadds
std
in
call
sub
or
push
lahf
mov
rorb
mov
xchg
jnp
adc
movsb
pushf
dec
sub
rolb
mov
adc
fs
leave
test
inc
mov
inc
cwtl
aad
fdivp
stos
sti
push
push
int
inc
leave
cmp
mov
and
pop
jmp
fisttpll
lret
pop
pop
push
cmp
inc
mov
pop
idivb
jle
dec
gs
pcmpgtd
pop
cli
test
pop
lahf
fistps
stc
cmp
or
cmp
lea
mov
cmpsb
stos
js
test
bound
cmc
pop
dec
cmp
pusha
jp
jb
rol
pop
and
mov
add
xor
pop
sub
mov
fidivrl
lret
push
notb
jmp
shl
mov
sbb
sub
lret
jnp
push
cwtl
aad
out
es
sub
and
lea
fbld
lock
xlat
inc
cmp
jne
sbb
and
sub
jne
out
mov
outsb
pop
mov
cltd
push
test
sbb
and
mov
test
sahf
les
icebp
pop
xor
imul
stos
jmp
push
jg
jle
pushf
push
out
repz
out
mov
outsb
fistpl
mov
icebp
icebp
ja
dec
dec
pop
jns
and
add
ret
testb
push
push
mov
xchg
xchg
jl
pop
push
lds
out
pop
sbb
sti
adc
adc
jne
test
movsl
jmp
pusha
xchg
xor
addr16
loope
jb
fisubs
mov
fsubl
repz
fcoms
cmp
push
xchg
mov
fxch
inc
ret
scas
sarb
mov
insb
mov
pop
and
xor
mov
cmp
mov
cmc
sbb
sub
mov
jns
sub
bound
cmc
mov
mov
xchg
or
push
lods
test
popa
mov
push
outsl
aaa
loopne
rcr
adc
hlt
repz
les
outsb
and
pop
jae
stos
rcrb
aaa
ljmp
fldl2e
adc
aas
das
sahf
xor
fs
xor
pop
fidivrl
fcmovne
inc
xor
popf
or
xor
or
rcrl
idiv
lods
dec
mov
clc
test
mov
xor
sbb
jg
push
dec
fimull
shl
fidivs
sub
dec
sbb
data16
out
cli
iret
jmp
decl
testl
stos
sti
pop
cmp
lcall
insb
pop
mov
mov
mov
daa
cmc
mov
jp
dec
xor
test
mov
or
movsb
sub
leave
adc
repnz
push
mov
xchg
cli
nop
iret
jo
jle
fdivr
ret
cltd
fdivrs
rorl
cmpsb
fidivrl
jle
ret
mov
adc
fiaddl
lret
fwait
insb
inc
movsb
jns
in
in
mov
adc
lods
sub
incb
adc
sub
movhps
movsl
movsb
push
call
inc
ret
stc
and
ja
inc
stc
fdivl
pop
scas
pop
jge
sub
mov
mov
jo
mov
loope
mov
and
add
fcoms
xorps
xchg
scas
out
dec
enter
shrb
jg
stos
mov
repnz
fldlg2
ret
sub
fildl
or
jmp
pop
sub
outsl
insl
mov
sub
scas
jo
pop
jmp
arpl
fiaddl
cmpsl
daa
xchg
repz
and
es
jae
faddl
add
cmp
mov
sub
cld
sbb
push
mov
lods
mov
mov
mov
fsubrp
sub
jmp
bound
sbb
mov
xor
dec
mov
push
jp
fisttpll
pushf
nop
getsec
mov
nop
dec
push
inc
fwait
sub
jecxz
cmpsl
cmpsb
mov
push
je
lret
fdivrs
cwtl
or
jl
test
je
pushf
insl
fidivrl
lods
jno
in
nop
push
call
dec
inc
push
icebp
mov
xchg
stos
popf
jno
add
mov
lahf
les
fbstp
setnp
pop
outsl
add
or
std
dec
pusha
xlat
out
sub
icebp
test
jne
push
cltd
mov
cmpsl
out
push
xchg
jae
mov
aaa
jae
inc
loop
cld
jnp
push
jnp
fwait
sbb
and
inc
add
pusha
stos
push
and
cmp
adc
sbb
test
sahf
std
sub
xchg
bound
add
cmp
and
sti
in
insl
pop
aad
dec
and
sbb
ja
je
mov
sub
jl
out
xchg
xor
inc
fsubrs
unpckhps
fdivs
jbe
push
std
add
stc
gs
pop
jle
lret
dec
js
test
test
daa
aad
dec
pop
repz
in
fisttps
out
add
subl
repnz
push
inc
lea
filds
xor
sub
sbb
repz
inc
xor
addr16
fs
push
mov
mov
ja
xchg
jge
xor
push
orl
xchg
jo
sbb
sti
mov
dec
loop
sbb
push
es
xchg
cmp
outsb
dec
je,pn
cwtl
cltd
add
mov
insb
push
test
ljmp
out
loope
or
adc
xor
pop
mov
mov
pop
mov
in
shll
jl
cwtl
mov
sbb
sbb
add
jno
pop
add
hlt
ljmp
lods
mov
jle
pop
push
push
pop
or
mov
sti
push
pop
shrl
rcrl
xor
call
sbb
inc
xchg
dec
fwait
dec
sbb
xchg
inc
sbb
cmpsl
add
clc
push
sub
nop
inc
add
cmpsl
in
pusha
fsubrl
jnp
inc
into
std
and
std
cld
test
mov
mov
lea
call
pushf
stos
or
jp
popl
sbb
adc
cmovp
sbb
adc
mov
shl
fcmove
cltd
xorb
xor
adc
cmc
cmpsb
cs
xchg
stos
xor
ret
sbb
pusha
imul
cmp
mov
addr16
in
or
dec
stos
lahf
mov
jnp
sbb
sub
in
mov
xor
cmp
ds
sbb
out
cs
dec
push
pop
in
imul
scas
imul
mov
addr16
xorb
jle
je
mov
sub
xchg
dec
ds
push
inc
aam
mov
addr16
adc
and
negl
cmpsl
sbb
mov
lret
mov
dec
mov
cmc
insl
sti
pop
in
mov
imul
bswap
xor
js
add
repnz
gs
push
cmc
xorl
jmp
mov
rorl
push
mov
in
pop
loope
inc
lcall
add
fstl
out
dec
stos
out
or
add
or
lret
jbe
xor
out
pop
jne
cltd
dec
bound
jmp
push
xchg
scas
jae
movsl
mov
shll
push
scas
pop
test
cmp
or
lret
adc
xchg
fmuls
mov
sbb
mov
xchg
imul
add
cmp
xorb
les
cmp
sub
cwtl
js
xlat
mov
ljmp
inc
popf
mov
movsb
jp
loop
fsts
test
lcall
xchg
jne
cmpsb
or
lret
mov
sub
fsubrp
imul
and
std
clc
in
cmpsb
xchg
cmpb
xor
dec
pop
nop
mov
test
lock
gs
inc
filds
mov
sbb
cmp
ret
lock
pushf
popa
dec
rcrl
adc
cld
jge
jne
ja
stos
je
inc
dec
ljmp
clc
xorb
mov
stos
xor
loope
sbb
pop
popf
int3
push
push
pop
popa
jp
or
fisttps
cld
je
pop
pusha
imul
hlt
sub
adc
xor
sbb
push
ret
xchg
xchg
mov
outsl
shll
pop
rcrb
sub
dec
loope
in
adc
cltd
sub
sub
mov
add
out
mov
mov
rclb
aam
mov
les
inc
stos
fisttpl
inc
cltd
jg
adc
pop
dec
popa
repnz
adc
mov
mov
pop
cmp
testb
xchg
cs
iret
adc
sbb
sub
pop
leave
jmp
bound
jo
negl
jp
cld
movsb
insb
mov
in
mov
mov
sarb
pop
popl
frstor
sub
sub
xchg
inc
pop
shlb
shl
or
fists
movl
rorl
mov
sbb
xor
or
and
mov
ret
rorl
add
push
subps
mov
loopne
pop
pushf
mov
add
xor
sbb
data16
aam
mov
cmove
xchg
or
push
lock
aad
movzwl
ret
inc
or
lods
mov
aad
cmp
in
out
mov
mov
pop
sbb
mov
push
mov
push
sti
ss
sub
inc
adcl
iret
cmp
mov
lods
aas
jg
push
jae
repz
mov
sbb
adc
ret
xor
add
xor
hlt
push
or
jne
dec
mov
push
insb
jp
mov
jae
mov
test
push
dec
rcll
dec
scas
loope
fsubs
test
or
jae
out
or
xor
aam
dec
ficompl
push
mov
lods
sbb
mov
fs
adc
sbb
xlat
mov
insb
add
out
js
test
sbbb
inc
loopne
and
mov
xchg
xor
mov
xorb
push
mov
dec
repz
sbb
insl
rcrb
sbb
xlat
out
mov
push
daa
popa
pop
sub
ret
sub
loopne
bound
ret
or
push
mov
cmp
jmp
fcompl
loop
xchg
xchg
sbb
pusha
mov
lock
in
cmc
xchg
mov
insb
or
shrl
adc
bound
sbb
push
xor
sahf
mov
bound
push
inc
enterw
mov
shll
push
mov
rclb
pop
addr16
arpl
adcl
add
mov
and
insl
cmp
cmp
add
push
xchg
mov
and
jne
pusha
flds
pop
shlb
hlt
sub
adc
cmp
out
mov
push
test
in
lahf
mov
rcrl
mov
sbb
dec
and
jns
xorb
mov
mov
cltd
inc
rcrl
ret
popa
mov
ljmp
pop
enter
imul
repz
cmp
movsb
mov
xor
dec
sub
lahf
lret
test
push
inc
push
lret
xor
ss
lods
push
mov
add
aaa
xor
mov
fucomip
push
dec
leave
loope
inc
pop
and
aad
ds
mov
inc
leave
fimull
iret
fwait
test
pop
pop
jno
mov
std
sbb
push
mov
xor
fs
pop
shlb
bound
neg
test
sbb
mov
rcr
outsl
lea
pop
dec
andl
inc
rclb
fcomp
inc
push
push
and
imul
lds
jl
push
sub
add
add
sub
sbb
lret
xchg
out
mov
outsb
sub
std
xlat
mov
mov
dec
lcall
dec
xchg
loop
lret
push
out
mov
ljmp
aaa
dec
and
xor
cmp
add
cld
jno
pusha
mov
je
mov
jg
cmpl
or
das
jbe
es
mov
jbe,pt
xor
xchg
mov
shr
cmp
dec
popa
js
jp
cmp
out
lea
pop
xor
pop
negl
inc
int
loop
push
cmpsb
cmpb
stos
popa
lahf
adc
aam
cwtl
sub
out
mov
mov
test
push
pusha
rclb
out
ds
inc
xor
cmpsb
xor
push
mov
fcomps
dec
jo
push
xchg
add
in
testb
or
add
aaa
xlat
rcll
cmp
ret
stos
arpl
loop
pop
sbb
xor
mov
inc
daa
xchg
or
mov
icebp
ss
push
push
xchg
xchg
test
pop
mov
in
push
push
andb
push
mov
push
push
push
inc
cmp
lahf
xchg
push
mov
imul
mov
scas
xchg
push
and
sbb
aad
addr16
mov
test
dec
shll
stc
lods
pop
adc
or
cmpsb
lods
lret
mov
sti
xchg
mov
mov
out
or
adc
ret
mov
enter
imul
and
mov
xor
lods
jmp
das
js
lds
leave
in
mov
int3
mov
bnd
mov
pop
mov
cltd
lahf
and
daa
in
xor
leave
cmpsb
jae
imul
and
adc
iret
pop
xchg
jo
or
dec
lock
add
stc
or
fs
or
insl
jnp
jb
jae
ds
test
xlat
rcr
mov
mov
divl
fdivl
jno
jl
jbe
add
dec
mov
or
xchg
mov
cli
mov
scas
popa
or
dec
orl
sub
dec
test
jge
mov
and
mov
pop
add
mov
fcomp
sbb
fwait
jecxz
hlt
jae
mov
sub
jb
xchg
cld
push
ja
enter
leave
xchg
test
jne
decb
pop
push
add
out
ss
addb
pop
popa
inc
rol
bnd
cltd
xor
dec
adc
pop
stos
jmp
lea
stos
mov
inc
das
test
xchg
xor
xlat
xchg
mov
fnstenv
int
pop
or
nop
push
cs
sti
or
mov
fisttps
push
mov
scas
sbb
insl
in
ss
mov
pushf
jg
lcall
jp
cmp
jno
test
xlat
adc
aam
mov
movsl
add
stos
mov
lock
adc
mov
aaa
lea
repnz
fmuls
cmc
xchg
stos
movsl
sub
xor
mov
dec
xor
fmull
and
imul
outsb
int3
rol
mov
lret
lea
pushf
or
adc
movsb
and
push
pop
xchg
xor
mov
jns
mov
test
mov
rol
sbb
insb
in
and
pop
adc
add
mov
pop
jge
jp
sub
cmp
das
push
push
and
ret
out
jl
les
push
test
pop
outsl
jp
add
inc
lret
mov
jp
mov
mov
adc
lcall
int3
push
mov
sarl
cltd
cmp
and
dec
mov
push
clc
and
aad
loope
test
das
imul
loopne
xchg
inc
ret
mov
sti
or
push
inc
jo
cmc
in
data16
push
sar
adc
push
sbb
jge
jne
aad
or
cmp
pusha
ret
or
popa
dec
popa
mov
mov
test
imul
jo
and
leave
jnp
pop
mov
or
xchg
fs
or
testb
jp
fwait
mov
aas
dec
mov
mov
mov
pushf
test
loop
fs
enter
pop
mov
dec
and
mov
add
inc
lods
cmp
insb
fidivrl
mov
mov
cmp
jl
mov
push
cmc
cmp
sysenter
mov
xchg
gs
bound
xchg
jg
dec
push
mov
xor
ds
push
inc
in
scas
push
add
stos
push
jmp
and
vcvtsi2ssl
test
ret
xor
lds
out
sub
fildll
pop
and
or
cmp
pop
movsb
movsl
mov
push
out
jp
aas
jle
lods
fdivrl
out
cmp
dec
leave
adc
push
and
fs
mov
mov
pop
inc
inc
pop
stos
cmc
leave
sub
add
dec
push
in
les
int3
xor
sti
jae
cmp
sbb
mov
jge
mov
sbb
mov
jp
mov
xorl
ljmp
mov
mov
or
pushf
pop
jno
dec
popa
and
jmp
stos
mov
ds
and
cmp
je
repnz
pop
jmp
cmp
fnstsw
mov
insb
push
inc
dec
push
xor
sti
fneni(8087
test
ret
add
and
add
shrb
lods
shll
inc
dec
xor
mov
jno
pop
mov
aam
mul
outsb
clc
sbb
popf
das
cltd
mov
add
shll
push
cmp
sbb
push
sarb
ret
push
pop
imull
fimull
mov
test
lcall
lret
imul
xchg
nop
or
shrb
sbb
ja
loop
push
test
subl
mov
repz
push
shrl
in
or
pop
sbb
mov
fildl
nop
mov
and
inc
mov
stc
orl
mov
adc
ja
ret
mov
cmp
incb
mov
xchg
pop
lcall
add
jb
dec
sahf
lret
js
shll
adc
aas
push
lock
mov
aam
cmovge
popa
push
sti
mov
xchg
and
and
add
dec
pop
xchg
aaa
xor
imul
add
sarl
sbb
mov
imul
add
mov
dec
addr16
add
stos
stc
movsb
insb
mov
mov
icebp
or
sub
mov
mov
cwtl
xor
mov
inc
in
lahf
sbb
sbb
int3
push
or
jno
sbb
iret
fadd
movsl
add
mov
pop
adc
add
xchg
popf
aas
in
hlt
repnz
and
test
push
test
push
xchg
sub
ljmp
ljmp
mov
inc
pop
test
inc
mov
sub
sub
outsb
addb
pushf
mov
pop
push
cli
loope
lock
es
add
mov
pusha
add
cltd
rcrb
gs
fldenv
jmp
and
insb
sbbb
mov
mov
jle
ljmp
add
sub
pop
jmp
stos
mov
fwait
xchg
cmp
sub
jno
sub
dec
mov
paddd
fcmovu
pushf
push
js
sti
inc
xor
cmp
sub
mov
jb
add
out
gs
imul
pop
sbb
dec
rorl
xchg
jno
xlat
enter
cmpsl
sub
lds
adc
pop
arpl
mov
mov
repnz
push
cmp
in
inc
sub
mov
scas
xchg
sub
test
xor
add
ss
insb
rol
mov
push
xchg
sarl
xchg
lods
cltd
adc
mov
xchg
and
das
out
jns
xchg
pop
pop
jmp
in
ljmp
test
cmp
push
pop
mov
rclb
push
dec
cmc
or
imul
clc
and
fwait
int3
pushf
sahf
adc
aas
sbb
rep
mov
cltd
xchg
or
sbb
push
jl
divb
rcrl
stc
sbbb
aam
repnz
jnp
pop
std
mov
je
sub
out
ret
inc
cwtl
inc
pop
mov
xlat
jmp
mov
adc
mov
cmp
test
lcall
adc
je
in
cmp
aam
aad
js
iret
mov
mov
pop
imul
call
push
and
cwtl
jmp
pop
cmp
daa
xchg
out
add
push
jg
xor
xor
shlb
outsb
mov
lcall
mov
push
adc
loop
out
pop
push
jl
fildl
stc
xchg
and
adc
sarl
aaa
loop
or
stos
bound
and
fldcw
xchg
lea
push
and
pop
mov
sti
inc
add
cld
inc
subl
pop
ja
sbb
mov
and
push
jb
lahf
mov
ret
push
dec
jbe
mov
xor
dec
sti
rcl
adc
loop
sahf
push
cltd
mov
xchg
and
and
push
and
cwtl
push
cmp
arpl
push
pop
dec
jge
dec
or
rcrl
cmc
fsubrl
sub
and
mov
clc
test
imul
and
sub
ret
in
mov
mov
leave
cmp
outsl
lahf
test
pop
fstpt
sbb
push
push
fdivr
test
jmp
out
fistl
movsl
aaa
mov
inc
cmpsb
push
cmc
outsb
mov
and
lahf
lcall
test
mov
imul
in
test
lahf
sbb
sub
gs
mov
cmpsb
shrl
bound
and
cmp
mov
xor
dec
arpl
lret
sub
stos
jbe
scas
mov
mov
pop
cs
fwait
push
mov
mov
xchg
in
jl
stos
outsb
cwtl
push
cmp
inc
ljmp
jmp
dec
mov
mov
fwait
mov
rclb
fbld
gs
test
xlat
jp
test
imull
into
or
cmp
dec
sub
andl
mov
mov
and
jb
out
lcall
mov
cmc
stos
xchg
pop
popf
pushf
add
lcall
xchg
adc
xor
bnd
push
pop
xor
push
pushf
in
into
das
jno
fcmovnb
push
push
clc
enter
mov
sub
mov
xchg
xor
cmpsb
imul
push
xchg
mov
mulb
loopne
push
jg
xor
add
xchg
negb
mov
shlb
mov
arpl
and
rcr
sar
insl
dec
test
mov
int
pusha
mov
flds
inc
jbe
jbe
or
aas
or
mov
das
ret
aad
mov
cmpsl
nop
jbe
mov
fimuls
aad
jo
push
lea
inc
add
push
repnz
shll
xor
aas
xchg
ret
arpl
inc
dec
aas
lret
xchg
js
and
jge
push
cmp
cld
inc
push
cwtl
push
fdivl
mov
aam
adc
loop
xchg
lret
lods
lcall
jecxz
sahf
ljmp
xor
and
imul
pop
mov
mov
and
pop
cmp
mov
popf
aaa
icebp
add
push
fstpt
xchg
mov
movsl
stos
stos
inc
test
mov
in
inc
xor
popa
xor
adc
or
clc
in
sub
mov
mov
insl
sub
dec
ja
ror
jg
dec
add
rcr
push
dec
adc
lcall
scas
jne
mov
sbb
popf
fwait
int
inc
test
shll
mov
cmp
dec
add
dec
mov
test
sub
lea
sbb
xor
sub
lock
repnz
scas
in
aad
push
and
ja
call
dec
lock
nop
pop
adcb
dec
mov
sub
pop
sub
cmpsb
dec
sbb
and
pop
pop
ret
insb
or
test
inc
adc
or
inc
mov
pop
xchg
cmp
sub
les
aaa
mov
scas
mov
stos
popa
jne
sbb
test
jb
scas
nop
in
xchg
lds
cli
sbb
repz
sbb
sbb
push
inc
or
lahf
rclb
shlb
xor
inc
popa
dec
xor
pushf
xchg
rcrb
or
icebp
je
add
mov
pop
ss
outsb
aas
cwtl
xchg
adc
pop
hlt
mov
jmp
call
int3
fists
fcoml
mov
xchg
and
rorl
lret
cli
out
sbb
inc
mov
inc
xor
out
lods
xchg
dec
jns
mov
das
xor
mov
lret
lcall
cmp
mov
aas
sti
stos
mov
outsb
enter
pop
or
jo
insl
mov
ret
stos
xor
sbb
mov
mov
add
test
adc
sbbl
mov
cmp
lcall
sti
cmpsl
call
enter
mov
ret
mov
hlt
pop
adc
repz
push
enter
icebp
test
daa
sahf
out
lahf
clc
insl
xor
outsw
stos
shrl
mov
mov
fwait
push
adc
cli
xchg
ret
inc
lret
xchg
nop
inc
cmc
inc
pusha
or
fisubrs
shll
int3
ret
sub
sbb
xchg
push
xor
mov
inc
test
and
fs
mov
sub
pusha
sub
outsl
push
cmp
shll
push
add
fcompl
jo
das
pop
ret
fwait
or
imul
cli
push
nop
push
sbb
faddl
sub
and
leave
mov
jp
inc
sbb
clc
cmp
adc
mov
lret
push
mov
dec
push
ss
movsl
imull
fldl
xchg
push
mov
mov
cltd
adc
and
cmp
sub
js
mov
add
icebp
xchg
in
sbb
mov
mov
mov
pop
push
mov
jne
push
cld
push
rcrl
aas
mov
addr16
cmp
xchg
sahf
adc
pop
sub
mov
mov
movl
mov
xchg
notl
pop
int3
jecxz
inc
jle
cli
subb
dec
test
mov
xchg
cmpsb
sbb
inc
dec
lcall
cmp
xchg
loope
out
mov
pop
fwait
movsb
lret
pop
nop
testl
lods
add
je
or
mov
cmp
or
sarb
cmpsb
lcall
sti
push
push
cmp
jle
lret
push
push
and
inc
dec
js
jl
add
popa
sub
jg
out
mov
push
aaa
xor
mov
je
xlat
jno
sahf
pop
sbb
xchg
out
fmulp
cmp
rcrb
mov
iret
lahf
in
and
mov
or
adc
out
and
mov
inc
pop
xchg
nop
movb
pusha
rcr
lds
ss
aad
orl
fdiv
pop
es
push
adc
into
test
dec
test
fists
lods
mov
scas
fsub
aam
dec
sarl
pop
stos
dec
sub
jg
adc
jo
xchg
lret
jle
mov
les
in
push
sbb
lods
mov
mov
mov
xor
dec
imulb
add
xchg
pop
pop
mov
xlat
movsl
mov
add
xor
popa
adc
xlat
pushf
iret
or
leave
pop
aas
jo
lret
sub
mov
jge
jge
aad
dec
inc
mov
add
pop
imul
and
add
call
mov
xchg
insl
insb
xchg
pop
test
or
and
leave
sub
xor
cmpsb
ficomps
xchg
in
mov
mov
adc
sbb
add
pusha
jno
pop
adc
hlt
pop
and
or
in
xchg
movsl
fmull
add
test
inc
mov
fsts
stc
xchg
sbb
mov
fsubl
xchg
inc
mov
jecxz
fmul
lds
jg
es
cmp
movsb
outsb
push
mov
and
lea
enter
inc
test
andb
int
sbb
arpl
sbbl
or
push
loope
pop
xor
add
xchg
sbb
pop
jae
fmuls
mov
call
rorl
insl
lahf
jns
jmp
or
mov
pop
or
dec
mov
mov
inc
jge
jg
inc
inc
mov
sub
sarl
xchg
sahf
and
jmp
xchg
dec
pushf
call
in
addl
lods
icebp
mov
insb
mov
mov
mov
sbb
mov
shl
xchg
shll
out
icebp
popf
pop
inc
aam
lret
jle
cltd
xchg
or
pop
or
xchg
popf
inc
stc
rorb
in
imul
js
push
fstps
and
push
mov
mov
jne
sbb
out
add
dec
mov
sub
adc
test
mov
cld
and
sub
stos
cwtl
push
push
shrl
outsl
jnp
cmpl
ss
iret
fs
dec
notb
out
and
imul
icebp
ss
ret
dec
cmp
lock
std
dec
cmp
out
xchg
outsb
and
arpl
mov
pop
dec
mov
sbb
jno
push
enter
call
inc
push
in
mov
repnz
int
pop
stc
imul
adcl
mov
lahf
xchg
cmp
fsts
imul
xor
mov
xchg
std
out
dec
push
pop
add
cmpsb
dec
mov
fisttps
clc
movsl
fisubrs
sub
pusha
stos
pop
sub
add
adc
out
lcall
sub
cmc
imul
cmp
xor
push
out
or
sub
ret
push
adc
and
push
xor
out
mov
mov
cmc
mov
outsl
cmp
mov
mov
mov
mov
adc
jnp
jp
push
mov
jnp
xchg
repnz
sbb
rcr
les
imul
sbb
loopne
hlt
sub
dec
adc
stc
scas
mov
inc
cmp
or
rcll
adc
jmp
hlt
rol
lea
dec
push
test
das
pop
jbe
aam
cwtl
insb
iret
jo
push
mov
add
idivb
xor
dec
xor
cli
das
int3
push
inc
cmp
sbb
lea
jecxz
insl
aas
xchg
aas
ret
dec
add
test
sbb
or
in
in
mov
adc
ljmp
test
mov
xor
mov
mov
xchg
lret
pop
aad
add
scas
movsb
mov
fldt
in
cmpl
addb
pop
lods
push
cmp
icebp
je
adc
push
std
filds
xchg
jns
pop
or
dec
shll
xchg
push
cmp
ja
adc
xor
mov
imul
jb
xchg
imul
fadds
addr16
push
pop
ja
not
ja
jbe
push
mov
jae
xchg
jno
icebp
inc
mov
xchg
inc
outsl
cmp
mov
test
popf
xor
aas
loope
sbb
cs
sbb
testb
mov
in
jmp
push
xlat
cmp
mov
insb
inc
push
out
les
iret
and
add
cmp
push
jl
xor
lods
push
popf
loope
fildl
iret
fmull
inc
xchg
add
inc
xlat
aam
push
mov
cmc
pop
or
repnz
js
adc
mov
adc
mov
mov
inc
in
xor
inc
addr16
sub
out
cmp
fisubs
pop
push
aam
xchg
bound
sbb
mov
mov
jl
cli
je
inc
xor
imul
ffreep
and
lret
sbb
xchg
cmp
lahf
repnz
cmc
push
cmp
nop
dec
cmp
sub
inc
inc
jae
xor
in
fs
dec
movaps
lret
add
mov
clc
mov
mov
jne
hlt
and
push
loop
test
movsl
pop
mov
mov
imul
mov
sub
cmp
arpl
mov
mov
cwtl
cmpsl
cmpsl
stos
es
cmpsl
daa
mov
push
push
mov
push
out
pushf
push
jae
push
push
into
jge
push
fdiv
test
movsb
adc
cwtl
movsb
dec
mov
and
leave
xchg
push
pushf
adc
idivl
cmp
adc
mov
push
aad
sarb
adc
pop
in
pushf
add
add
push
cltd
test
stos
xor
push
sbb
mov
js
xor
adc
ret
rol
xchg
repz
scas
push
adc
shlb
mov
jp
jae
dec
repz
pop
mov
cmpsb
add
sub
mov
mov
cld
mov
xorb
and
xor
out
cltd
mov
ficompl
or
jecxz
cwtl
xchg
jge
mov
or
push
mov
arpl
pop
and
sbb
push
mov
not
sti
cmp
push
outsl
test
aam
add
addl
cmc
sti
pop
jb
or
je
icebp
mov
sub
xchg
aas
xlat
jo
cld
jecxz
std
les
ret
shll
or
scas
push
imul
xlat
sbb
cmp
ds
adc
ja
inc
mov
pusha
addb
inc
mov
adc
pop
sahf
ret
dec
adc
mov
shll
xor
fs
mov
lds
jne
jno
pop
leave
dec
jo
cld
xor
out
sbb
ds
int
push
nop
popa
into
push
out
rcrl
rcl
cwtl
rclb
mov
push
pop
mov
xchg
inc
cmp
arpl
ja
insb
subl
lods
ficoms
outsl
rcrb
fs
and
clc
aaa
imul
int
push
sahf
aaa
inc
push
in
lahf
cmp
es
dec
dec
imul
jecxz
inc
out
lahf
ds
dec
notb
movsb
pushf
inc
lcall
fcoms
lock
or
mov
pop
out
add
movsl
xor
or
pop
imul
jg
cmp
aad
inc
iret
mov
jp
imul
pop
cld
sti
mov
ffreep
scas
push
out
arpl
push
mov
cld
push
or
pop
scas
mov
jmp
add
and
enter
out
lods
mov
cmp
cmp
call
fcmovbe
or
jge
shl
jo
cmp
sub
xchg
adcl
sbb
mov
xchg
aam
mov
pop
push
ficoml
outsb
insl
ja
shrb
mov
add
sti
mov
dec
and
out
arpl
sub
or
push
ljmp
adc
shlb
test
das
mov
adc
leave
fists
subl
es
sub
cmp
lds
pop
adc
rcrb
adc
pushf
sub
inc
pop
pop
push
stos
xor
mov
fists
sbb
add
xchg
aaa
or
and
fsub
cmp
fucomp
adc
test
shrd
mov
mov
inc
out
lcall
mov
movsl
negl
inc
cmpl
rorb
jne
dec
cli
xor
ljmp
les
nop
subb
mov
jbe
dec
jmp
lock
sti
and
icebp
mov
sbb
jmp
push
dec
pop
imul
out
mov
sbb
daa
test
aas
stos
mov
mov
sub
mov
sub
and
cwtl
xor
mov
jnp
adc
pop
xor
inc
popa
adc
and
jne
add
mov
inc
pusha
dec
add
ret
add
fdiv
iret
int
leave
in
xlat
ret
nop
jg
pop
push
insl
pop
cmpsl
cmp
adc
js
lahf
mov
or
add
add
outsl
cmp
lret
or
add
fwait
cmpsl
ljmp
out
pop
test
lret
xchg
int3
mov
mov
mov
es
pusha
adc
push
ss
stos
add
mov
sbb
imul
mov
aaa
inc
mov
adcl
sbb
jae
stos
jg
fstpl
outsl
idivl
shll
sub
call
cmp
fsubr
push
or
rep
ficomps
popa
out
add
gs
jmp
rcl
xor
mov
cmp
nop
dec
ret
subl
mov
dec
ds
leave
aaa
icebp
mov
in
mov
out
insb
sbb
push
lahf
lods
cmpsb
fwait
mov
les
ret
mov
sbb
adc
es
or
cmp
adc
inc
movsl
fcomip
fcoml
pop
std
add
aam
xchg
int3
mov
popf
cmp
push
sub
rcll
inc
lcall
test
fiaddl
xchg
mov
gs
ficoml
sub
sbb
push
mov
test
aad
mov
xchg
shll
cltd
fisttps
inc
add
pop
fcmovnu
cld
jbe
ficoml
or
cmp
flds
dec
inc
movsl
jb
push
push
fdivrs
cmp
out
sbb
cltd
sub
adc
repnz
xor
enter
sbbl
fstl
xor
and
pop
or
in
cltd
sub
fldl
cltd
rol
jle
aam
cli
jle
jb
fcomi
jbe
lcall
ret
xchg
xchg
in
mov
adc
add
insb
mov
add
in
add
adc
sarl
jmp
xchg
push
in
mov
stc
pop
push
into
stos
xor
ljmp
xor
xchg
test
cld
add
mov
and
imul
mov
fstps
adc
jne
mov
in
jmp
sub
inc
div
mov
sbb
and
xor
dec
neg
push
ljmp
jns
cmp
jp
mov
cltd
daa
cmpsb
loope
push
xchg
push
pop
lea
or
test
clc
fists
inc
bswap
scas
add
xor
xor
movsl
pop
out
mov
sub
js
aam
push
inc
cs
xchg
lods
mov
call
push
clc
cmpsl
xor
into
add
xor
push
xor
inc
frstor
inc
lods
cmpsl
dec
and
add
lret
int3
idivb
sbb
imul
les
lret
lds
adc
imul
mov
dec
dec
pushl
std
jbe
adc
subb
add
outsb
test
sub
xchg
push
movsl
mov
aas
and
clc
in
mov
or
sub
pop
ror
gs
ljmp
pop
fidivs
ja
dec
shll
add
int
cmp
arpl
sbb
ds
ret
sti
sbb
std
pop
push
rcrb
popf
add
repz
stos
jl
inc
imul
mov
fldl
aas
jns
les
fcmove
ljmp
xlat
adc
add
sarb
in
sti
sbb
cmp
inc
mov
lret
mov
or
push
sub
or
inc
loopne
mov
sbb
rorl
sti
sbb
and
aam
rclb
mov
cwtl
stos
ds
cmp
fbstp
mov
push
sbb
xor
test
sub
push
fisttpl
jmp
mov
test
aas
adc
push
lock
mov
push
inc
cmp
mov
add
insb
xchg
call
jbe
cmc
mov
dec
inc
adc
nop
data16
lret
mov
mov
mov
adc
lahf
push
add
pop
lods
dec
rclb
push
jmp
aam
jmp
stos
jmp
add
push
jecxz
jnp
mov
test
pop
jnp
cmp
movsl
aam
push
movsb
inc
addl
ljmp
dec
data16
orl
fldcw
pusha
sbb
andb
stos
ja
push
shlb
mov
mov
dec
mov
xor
mov
sbb
repnz
or
cltd
dec
je
daa
pop
leave
cmc
cmpsl
and
aad
inc
gs
dec
jge
or
enter
movsb
jl
shll
mov
out
lods
inc
shlb
jmp
divb
test
shll
mov
mov
mov
adc
mov
pop
loopne
call
push
loope
nop
push
ja
jecxz
lret
jbe
xchg
mov
stos
insb
lret
les
hlt
out
out
xor
pop
mov
lods
cmp
sahf
or
sti
cld
pusha
cmp
or
cmp
leave
push
mov
fsubl
addr16
dec
bound
iret
sarb
cmp
dec
sub
and
into
cld
mov
jmp
push
adc
clc
and
xchg
push
or
outsb
add
adc
or
lods
in
pop
hlt
mov
mov
stos
sub
mov
or
mov
movsl
inc
rcl
xchg
fiadds
sahf
mov
push
dec
add
jle
ds
iret
push
push
std
xchg
adc
cmp
ficoml
fisttpll
lahf
and
movsl
jno
pusha
mov
push
mov
or
ficompl
jg
dec
fisubs
arpl
mov
int
sahf
jg
outsb
push
sbb
push
ds
xor
test
xor
cmpsb
aas
pop
mov
lahf
lea
mov
xor
aad
fnstenv
pop
sbb
je
pop
push
push
fs
std
ljmp
gs
sbb
cmp
aad
pop
or
mov
push
dec
testl
inc
lock
pop
xchg
inc
inc
sub
fwait
in
imul
mov
lret
cmp
idivb
sbb
cmpsl
test
and
push
popa
add
ss
cmp
xchg
imul
daa
inc
xor
cld
fucomp
jmp
shld
cmc
test
pop
mov
jbe
rcr
and
dec
jne
dec
scas
stos
cmc
cmp
xchg
dec
imul
mov
sub
jbe
pop
lock
dec
mov
hlt
jnp
and
xor
xor
stos
loopne
clc
push
imul
out
lods
fwait
nop
pop
gs
and
nop
fstp
inc
das
sbb
subl
jmp
cmp
rcrb
mov
cmp
fists
mov
ljmp
js
xchg
fdiv
repz
out
cwtl
mov
adc
add
push
xor
inc
je
push
lret
stos
jnp
and
mov
loope
cld
test
leave
push
aad
lea
mov
mov
add
ds
fstps
xchg
sbbl
and
mov
and
push
ficoms
test
mov
std
dec
xchg
pop
cmp
pop
sbb
test
add
pop
dec
int
push
push
pushf
aam
les
xchg
and
cmp
mov
jae
sub
xor
setae
hlt
in
push
mov
mov
inc
enter
in
icebp
xor
stos
push
mov
push
bound
sbb
stos
inc
cwtl
decl
cmpsb
pusha
dec
lods
cmp
imul
popaw
in
sahf
div
jns
insb
sti
push
das
imul
mov
jo
jo
push
inc
mov
shll
mov
sahf
cmpsl
outsl
jno
jnp
roll
or
adc
test
push
and
int3
out
adc
mov
jnp
inc
mov
jle
std
adc
sbbl
xchg
mov
out
sbbb
mov
mov
js
inc
adc
xor
mov
sbb
leave
pusha
int3
dec
outsb
add
ja
bnd
push
addr16
andl
cmp
iret
mov
dec
ss
dec
sbb
inc
loop
pop
lahf
sub
shl
dec
aad
es
cmp
int
and
add
sahf
push
dec
icebp
bound
sub
fprem1
loope
xchg
pop
mov
fwait
js
lcall
add
adc
lret
dec
nop
xchg
les
stos
mov
inc
popa
fcmovnu
les
movsb
sub
jl
imul
les
aad
mov
add
dec
add
jmp
out
push
or
or
sbb
test
ret
ret
daa
movsl
mov
jg
cmpsb
mov
add
insb
aad
mov
stc
test
into
repz
mov
push
cmc
xor
popf
sbb
ficoml
lea
sub
ret
and
rolb
popf
dec
adc
enter
dec
inc
sub
cmp
hlt
stc
push
aam
jnp
inc
outsb
test
add
sub
or
bound
scas
mov
xchg
mov
jg
xor
lds
inc
addr16
mov
xor
outsb
push
test
sub
mov
mov
es
loop
cmp
jae
cmpsl
imul
lret
stos
shl
ds
dec
stos
xchg
jle
cmp
push
popa
nop
push
xor
orb
xor
adc
mov
inc
ret
mov
inc
das
dec
dec
repnz
cwtl
xchg
mov
test
call
fimull
addr16
loopne
jg
stos
dec
loop
andl
mov
lret
test
out
mov
inc
dec
gs
inc
pusha
xlat
stos
insl
inc
lret
in
std
out
lret
ss
hlt
or
or
xchg
ret
push
fidivs
clc
or
pop
imul
out
sub
jmp
mov
mulb
sbb
mov
movsb
jno
pop
fdivrs
xchg
mov
fsubrs
pop
adc
mov
out
cwtl
xchg
pop
andb
pop
lret
addr16
jmp
gs
jmp
pushf
xchg
call
adc
int3
xchg
in
pop
jl
mov
dec
push
push
sbb
xchg
push
adc
xchg
call
mov
pop
pop
push
data16
js
jne
cltd
mov
adc
ljmp
dec
test
jp
in
xchg
dec
xchg
mov
je
stos
shrl
fbld
sbb
aas
sar
mov
xchg
lds
mov
inc
xor
cmp
jne
push
ret
inc
addr16
mov
or
stos
movsb
sub
cld
mov
inc
shlb
cmp
loopne
leave
and
xor
jl
lods
sbb
orl
loope
insl
stos
shlb
daa
scas
in
js
insb
sub
or
fisubrl
mov
movsb
dec
cwtl
mov
pop
cmp
ret
aaa
mov
ret
mov
push
int3
bound
push
stos
mov
add
pop
or
adc
mov
xorl
rcrb
pop
mov
jmp
das
and
lahf
push
and
or
movsl
adc
ret
pop
rcrl
ffree
andb
inc
leave
out
push
lods
or
mov
out
sub
test
cmp
cmpsb
adc
fmull
pop
popf
mov
in
iret
mov
inc
xorl
mov
push
icebp
push
pop
bound
sbb
jns
roll
jns
jl
int3
xchg
mov
jne
popa
inc
outsl
ljmp
shll
sub
repnz
out
shll
sti
pop
sbb
shrb
xchg
int
mov
cmp
inc
mov
pusha
enter
push
fbld
ret
add
sub
into
lcall
std
loop
sbb
sti
mov
insl
call
out
repnz
cmp
xor
xchg
sub
rolb
enter
mov
js
xchg
pop
sbb
and
test
xchg
xor
mov
popa
ja
xor
sub
movsb
or
jbe
rcr
scas
add
and
lods
push
es
pop
ret
mov
inc
xchg
repz
add
js
stc
jmp
push
inc
test
jno
xor
pushf
test
fistl
mov
out
push
pop
mov
clc
mov
cmp
imulb
shlb
lret
loope
lahf
loopne
inc
int
cli
scas
je
pcmpgtw
lock
push
xchg
jmp
mov
inc
xor
std
mov
pop
push
push
xchg
push
fsubrs
lods
scas
jmp
mov
adc
jecxz
inc
pop
das
mov
xor
mov
push
sub
imul
push
add
arpl
daa
insb
jo
pop
mov
or
pop
pop
and
aad
pop
insl
out
aad
fwait
inc
ljmp
stos
js
add
sar
cmpsl
loopne
andb
rep
jge
ljmp
inc
iret
je
push
inc
mov
cmp
mov
cwtl
mov
dec
mov
adc
stos
jmp
negb
aaa
xchg
mov
imul
enter
aaa
pop
mov
xchg
mov
mov
cwtl
lret
movsl
pusha
adc
leave
adc
and
pop
pop
mov
mov
xchg
pop
test
mov
mov
pop
int
int3
push
fdivrs
adc
push
rclb
arpl
maskmovq
testl
xchg
in
and
adc
shrb
outsl
fists
loop
xchg
leave
testb
daa
mov
sbb
lods
out
fcmovnbe
sbb
insl
jbe
jge
sub
jbe
push
jle
scas
les
mov
push
push
push
dec
xchg
push
mov
or
adc
ds
or
mov
bound
jle
or
mov
jae
and
fadds
inc
xchg
push
std
cmpsb
and
jo
ficomps
xor
bound
sub
fs
cmp
xor
cli
jle
iret
and
dec
mov
mov
or
and
add
cs
ds
sbb
test
fmull
je
in
lcall
sbb
adc
loopne
push
subb
mov
pop
nop
dec
outsl
je
sub
sahf
sbb
mov
test
pushfw
js
push
enter
push
add
cmpsb
imul
adc
jbe
jmp
pop
imul
or
outsl
shrb
insb
jmp
jnp
iret
sub
cmp
push
mov
mov
cmpb
jb
mov
scas
jb
in
movsb
add
push
xchg
xchg
test
push
mov
scas
fdivrl
stos
mov
jo
sbb
jmp
out
mov
sbb
and
xchg
lea
repz
imul
ret
aam
push
mov
adc
dec
mov
pop
mov
call
push
push
inc
test
out
push
addr16
sub
mov
outsl
imul
adc
clc
pop
lcall
leave
je
test
sbb
stos
icebp
xor
gs
mov
mov
lods
adc
movsl
movsb
xchg
or
addr16
lods
push
mov
test
mov
clc
loope
decb
in
and
mov
mov
icebp
or
or
cmc
call
hlt
dec
pop
addr16
inc
pop
xchg
jnp
cmc
ss
and
cmpsl
push
xor
test
aad
lcall
mov
icebp
cmp
or
std
icebp
xchg
cmp
cmc
push
movsb
jmp
mov
adcl
aaa
adcb
iret
js
xchg
into
jns
cmc
dec
call
jg
mov
jb
adcb
push
popa
mov
les
mov
and
call
jge
mov
jg
imul
xor
xor
bswap
lahf
psllq
mov
push
push
cli
insb
cmp
test
push
imul
mov
fst
dec
lahf
aam
mov
cmpsb
jnp
xor
mov
mov
shl
jecxz
lcall
adc
stc
imul
fwait
pusha
cmc
sub
xor
in
jle
test
fwait
add
jns
inc
xor
outsb
push
mov
adc
loopne
cltd
sbb
xor
push
jae
icebp
mov
pop
pushf
push
mov
daa
in
imul
or
jmp
sbb
jmp
inc
ss
or
push
sub
xor
mov
vmaxss
push
xchg
outsl
jl
cli
cmp
sub
and
popf
push
repz
dec
mov
in
and
xorl
iret
popa
mov
xchg
lahf
push
push
jb
mov
lods
pop
fsubs
inc
add
inc
ficompl
imul
jle
cmp
repz
sbb
leave
mov
add
dec
rcrl
mov
js
xor
pop
inc
pop
jmp
jmp
fisttps
cmp
test
ljmp
or
stc
in
xchg
das
jle
das
xchg
rolb
lock
iret
xlat
xchg
inc
inc
mov
hlt
mov
push
loop
push
mov
arpl
push
sbb
xor
sub
adc
cli
push
pop
jl
add
das
insl
mov
stc
stos
jns
mov
mov
aaa
in
sarl
sub
nop
add
mov
and
pusha
sbb
in
lcall
push
jbe
sub
stc
mov
sbbb
xor
fcomps
jnp
ret
mov
sarb
mov
fmull
xchg
cmp
pop
iret
repz
arpl
inc
dec
jbe
imul
sub
sub
jl
out
mov
imul
ds
push
das
jnp
sbb
mov
mov
inc
adc
inc
add
pop
xchg
test
cmp
inc
iret
ret
jae
fcomp
int3
push
sahf
ja
stos
gs
add
addr16
fiaddl
flds
push
pop
in
xchg
sbb
cwtl
daa
into
cmc
lock
pop
pushf
fildl
or
push
dec
push
pusha
fld1
fs
data16
jae
pop
and
pushf
sub
fcoms
adc
sub
aaa
ficomps
push
xor
jmp
adc
mov
sti
pop
xchg
lcall
mov
popa
jecxz
mov
and
stos
push
sarl
int
into
mov
lods
in
push
cmp
mov
insl
aaa
cmp
sbb
int
cmc
sbb
imul
adc
ret
mov
mov
xchg
sub
std
jae
jg
pop
daa
cltd
push
sbb
inc
or
lds
aad
shl
bound
aad
jmp
mov
sub
dec
jo
adc
fwait
jecxz
mov
and
aas
add
inc
cmp
jns
jns
pushf
sbb
jecxz
orl
adc
mov
pop
push
in
pop
dec
jg
push
ss
push
icebp
lods
ret
add
loope
in
popf
fistpll
out
xchg
jne
jl
out
sbbl
leave
sbb
fucompp
xchg
mov
pop
daa
mov
dec
out
test
dec
fld
cmp
lret
roll
std
rorb
testl
shll
scas
imul
data16
mov
mov
pusha
mov
add
mov
ja
mov
in
push
lret
es
mov
shlb
call
and
mov
loopne
push
mov
dec
js
xor
jmp
sar
dec
test
cli
mov
test
jb
cmpsb
or
in
sub
push
das
and
mov
mov
or
int
mov
mov
test
fisttps
pop
push
xchg
jnp
ret
imul
scas
mov
int3
nop
push
push
jl
nop
lea
arpl
in
dec
or
je,pn
lcall
loopne
xchg
push
adc
mov
sbb
xchg
xchg
test
mov
insl
popa
add
jle
dec
aas
pop
out
loopne
inc
push
dec
enter
lret
sbb
inc
in
lock
std
inc
lds
int3
xlat
add
repnz
or
int
pushf
movsb
jnp
jnp
test
push
and
mov
cmp
fimuls
mov
test
cmpsb
jle
aad
xor
xchg
stos
imulb
xor
loope
mov
repz
push
or
bound
pop
mov
test
mov
cld
clc
jbe
enter
sub
arpl
ret
fildl
ret
mov
out
cmpsl
adc
and
mov
data16
xor
dec
in
sub
push
cltd
jo
xor
push
jno
mov
pop
stos
mov
in
f2xm1
sbb
subb
mov
cmpl
pusha
xchg
jmp
int
mov
xchg
push
je
mov
sub
mov
inc
inc
cli
push
jmp
lods
jecxz
hlt
xchg
add
adc
adc
scas
push
dec
and
adcb
xlat
gs
xor
aas
int
jne
jae
inc
outsb
orl
pop
xor
jg
mov
pop
mov
ss
adcl
jb
mov
jns
mov
sti
fwait
lods
dec
xchg
jns
mov
pop
mov
fbld
jb
icebp
cmp
cmpb
jbe
leave
xor
cmpsl
sbb
jecxz
gs
pop
add
into
add
cmp
pop
andb
les
xor
lret
mov
iret
int3
test
ljmp
jo
pop
jecxz
jnp
test
jbe
xchg
out
pushf
jmp
mov
or
mov
xchg
mov
popf
push
inc
sbb
mov
xchg
mov
out
shl
pop
jb
insb
jno
in
push
scas
shlb
aaa
push
cltd
cmpb
xchg
enter
ror
js
mov
mov
bound
in
sub
les
test
dec
or
pop
sub
inc
lds
lds
cld
nop
sbb
push
loope
jae
mov
jmp
ja
popa
int3
cld
pop
out
insb
xchg
sub
shlb
in
adc
fstpt
fiadds
dec
push
sub
jg
call
and
push
cwtl
and
int
pop
sub
call
pop
pop
iret
jmp
ret
jge
adc
dec
fstps
push
insb
aad
pop
mov
mov
and
push
sub
ror
orl
imul
cli
cmc
lcall
xchg
jl
mov
mov
jno
daa
xor
mov
dec
xchg
cs
push
mov
mov
cwtl
test
push
in
inc
inc
lahf
imul
pop
imul
movsl
pop
std
xor
pop
push
mov
pop
adc
aad
lock
inc
not
enter
pop
inc
hlt
mov
pop
aad
outsl
xor
stos
mov
std
leave
adc
dec
cld
mov
pop
dec
push
std
or
mov
dec
add
inc
test
into
push
repnz
or
jnp
in
cmp
push
jo
fcoms
test
dec
mov
push
shl
incl
rorl
mov
pop
shl
pop
inc
shll
bnd
scas
fiadds
cmp
mov
jne
push
mov
stc
sbb
xor
mov
sbb
dec
push
cmpsb
xlat
cmc
les
xorl
in
addr16
jge
insb
mov
or
repz
aad
xchg
repnz
test
lret
int
pushf
sub
sub
xchg
cli
lret
int3
test
push
lea
push
mov
jge
cmp
nop
lods
pop
xchg
pop
lea
inc
add
popf
dec
adc
paddusw
popf
xor
mov
sub
addr16
sbbb
add
pop
jne
shll
cmp
aam
lret
andb
push
add
cmp
sti
push
pop
sub
shr
jmp
dec
mov
inc
mov
and
and
ljmp
push
aas
fldl
sbb
in
arpl
push
sbb
inc
mov
fnstsw
mov
das
fldenv
lcall
push
sti
cmpsb
cld
add
ja
gs
mov
fisttps
rolb
int3
cmp
pop
repnz
mov
add
push
push
xchg
cmpsb
push
and
cmp
pusha
xchg
into
movsb
mov
push
mov
fs
stc
je
sbb
insb
push
addr16
iret
fimull
jnp
mov
test
out
ja
or
hlt
sbb
rcrl
sarl
sub
mov
mov
dec
pushl
inc
insl
das
inc
aad
adc
sub
jg
and
mov
cmp
add
iret
push
repz
lods
jle
insl
or
mov
pop
push
enter
aad
les
test
push
test
mov
jmp
and
pop
mov
test
add
add
add
mov
sub
sbb
ljmp
push
or
jns
adc
xor
cmp
ss
aas
add
stos
push
and
or
xchg
scas
adc
sarb
jno
ss
or
jo
sbbb
push
adc
mov
pop
ja
xchg
rcr
shlb
push
adc
xchg
lcall
mov
or
and
xchg
or
and
mov
xor
sub
xor
push
jns
loope
pop
or
add
pushf
xlat
mov
dec
loope
insl
xlat
sbb
and
mov
popf
sbb
pop
push
or
int3
fnstsw
in
out
scas
cs
loop
repnz
fabs
xchg
stos
pop
popa
push
pushf
inc
out
jb
arpl
not
jle
stos
jl
push
lret
outsl
daa
ja
stos
idiv
sbb
adc
mov
inc
jg
lcall
push
xchg
sarl
cmp
iret
push
fst
push
cmp
jb
scas
push
xor
xadd
add
outsl
shll
pop
push
push
xor
push
or
les
rcrb
mov
adc
arpl
add
iret
mul
xchg
pushl
mov
mov
xchg
imul
std
cli
adc
or
daa
in
xchg
mov
mov
jb
ljmp
pop
and
repnz
insl
cmp
ds
lret
notb
pusha
push
pop
xor
jp
dec
scas
lods
jge
add
fwait
cmp
ljmp
push
dec
sbb
mov
imul
ret
sbb
scas
sbb
jge
mov
pop
xchg
bound
imul
push
sbb
jns
lock
addr16
insb
or
mov
add
out
imul
pop
arpl
addr16
pop
pushf
pop
sbb
imul
out
je
ret
sub
rcrb
sub
addl
out
and
dec
out
and
addr16
and
aad
lcall
push
mov
scas
xchg
xchg
popf
int3
lock
popa
add
mov
push
and
jecxz
clc
stc
mov
fisttpll
jnp
in
in
jle,pn
jne
lcall
sub
cmpsb
repnz
out
shl
mov
xchg
testl
int
adc
pop
xor
mov
or
add
cmp
into
aas
call
pop
mov
ljmp
fimull
lds
sub
push
mov
aas
or
insb
dec
inc
mov
movsl
cmp
adc
adc
mov
adc
jno
xor
test
pop
negb
pop
ds
cmp
sbb
xchg
add
addb
or
jno
push
or
out
add
hlt
dec
lds
bound
push
dec
lahf
outsl
inc
or
push
dec
orl
mov
xadd
adc
push
xor
inc
aad
out
es
sti
mov
pop
mov
inc
in
setl
mov
hlt
es
sub
int3
and
mov
sub
pop
sbb
push
xchg
dec
lock
push
lea
sub
fnstsw
jge
in
sahf
outsl
or
das
push
sub
negl
push
cmp
cmpsl
ficompl
popa
testb
jle
mov
icebp
jb
mov
dec
pushf
inc
mov
insl
lcall
adc
pushf
mov
lret
xorb
add
fdivr
ret
cmpb
jbe
cmpsl
test
lcall
or
jl
or
ds
test
lret
mov
cli
decl
cmp
ss
ljmp
push
xor
push
ss
lods
xor
js
sub
aas
add
fwait
mov
cs
cmp
sub
clc
add
outsl
stos
dec
push
arpl
xchg
inc
lds
jg
dec
pshufw
push
seta
pop
ljmp
push
hlt
pop
jo
push
pop
imul
sahf
sub
pop
xlat
int
daa
test
push
or
cmc
in
in
push
ds
cs
xchg
push
and
jmp
shll
aaa
xor
inc
mov
mov
aas
adc
aad
fistpl
and
lea
test
mov
jbe
lret
leave
adc
xchg
lock
sub
push
add
dec
cmpsl
outsl
adc
aaa
test
pop
loop
test
push
cmp
jmp
cli
jle
cs
and
out
jae
xchg
mov
into
mov
ja
aam
test
test
int
push
movsl
push
jae
cmp
test
iret
mov
add
loope
outsb
movsl
add
jp
jle
fdivr
fistl
rclb
xchg
or
rol
repz
int3
rorb
bound
jne
out
xor
dec
adc
addr16
mov
pop
je
jmp
shr
mov
push
inc
movsb
push
gs
hlt
in
add
pop
mov
push
adc
fs
rcrb
cltd
cmp
rcrb
popa
adc
adc
fcom
jne
in
ret
mov
mov
femms
in
data16
adc
xor
insb
add
inc
xchg
ja
and
add
lods
sbb
xor
aaa
inc
ss
xchg
je
stc
shlb
test
xlat
pop
pop
sub
push
shll
jno
xor
rolb
test
repnz
pop
push
adcl
aad
add
mov
cmp
in
and
lahf
in
push
pop
aas
xlat
frstor
pop
push
std
mov
jle
mov
sub
fnsave
clc
cmp
loope
push
test
xchg
jge
fnstcw
jb
int3
sub
hlt
call
fst
outsb
mov
sti
cmp
sub
cltd
roll
out
stos
xchg
call
pop
add
insb
mov
sti
cmp
lods
sahf
out
rol
arpl
dec
fwait
int3
xchg
fs
jo
mov
push
or
movsl
mov
sbb
out
imul
shrl
sti
add
pushf
out
popf
adcb
cmc
mov
out
jns
pop
je
xor
movsl
loope
loop
and
lock
jp
push
cli
adc
push
aad
cli
sbb
fs
fcomip
pop
dec
pop
mov
cmpsl
mov
mov
out
jno
and
xor
xchg
jb
mov
mov
in
test
out
iret
sbb
mov
push
pop
idivb
add
test
clc
fptan
ror
test
int
push
cli
lahf
aas
jns
sti
pop
pop
and
dec
push
dec
sbb
shrl
and
mov
mov
and
push
push
ret
dec
xchg
mov
push
jae
mov
test
cmp
gs
inc
js
push
dec
push
xor
sarl
je
xor
jbe
inc
add
mov
lret
mov
shrl
push
pop
call
adc
out
ss
ret
push
movsb
das
stc
adc
sub
ljmp
xlat
dec
mov
add
fiaddl
outsl
es
imul
in
aam
pop
aad
mov
fcmovnu
in
repnz
fsubrs
mov
stos
shr
daa
jge
test
outsb
repz
inc
xchg
fs
push
dec
insl
fistpll
clc
xor
xchg
xor
es
das
cmpsb
into
mov
sub
mov
lret
and
jecxz
xor
mov
mov
nop
mov
pop
sub
pop
orl
mov
cmpsl
dec
push
cmc
jge
xchg
dec
sbb
cwtl
es
rcl
jl
mov
leave
jle
stc
or
pop
mov
xor
lahf
pop
clc
insl
fwait
push
pushw
rorb
std
sub
sbb
cs
aad
push
mov
adc
add
mov
jle
outsl
xor
mov
mov
sbb
sub
pop
xchg
inc
xor
test
inc
or
cmp
adc
je
test
or
popf
mov
repz
xlat
orl
xor
popf
dec
mov
cld
and
adc
pop
push
ljmp
jb
xchg
push
div
mov
in
and
dec
or
leave
stos
push
outsl
movsl
fstl
and
insb
adcl
adcl
jae
loop
jb
cmp
dec
std
imul
insl
sub
bound
cwtl
shrb
lock
mov
mov
add
fnstcw
fs
inc
not
push
mov
call
out
sahf
jae
mov
mov
in
in
jns
nop
sbb
push
pop
mov
pop
leave
hlt
sub
cmpsl
testl
pop
adc
push
and
and
mov
out
je
dec
dec
jmp
je
xchg
imul
cmp
pop
pop
inc
bts
lcall
mov
mov
jmp
xchg
test
out
dec
mov
cmp
icebp
add
pop
inc
xor
clc
iret
fcoml
sub
test
jp
adc
int
xchg
test
cmc
mov
jno
xchg
fnsetpm(287
and
sub
add
jo
xchg
pop
push
push
mov
loop
inc
sub
push
les
stos
jnp
jns
and
pop
push
mov
jo
cmp
lds
mov
lret
xor
ficomps
in
test
stc
aad
xor
loopne
lods
push
adc
push
dec
add
jne
pop
xchg
cwtl
jg
out
and
adc
or
popf
icebp
mov
in
or
pop
loop
int3
lods
repz
mov
jno
adc
in
mov
xor
int
pop
push
adc
or
dec
fwait
add
xor
xor
add
stos
mov
adc
add
sub
std
daa
cltd
sbb
jne
mov
sbb
scas
mov
stos
dec
in
adc
ljmp
lea
mov
in
mov
or
sti
mov
mov
test
or
jo
or
pusha
in
xchg
pop
pop
push
mov
jae
push
or
sub
lahf
sub
mov
push
ja
mov
nop
lods
push
pop
adc
mov
xchg
leave
repz
std
jle
lods
fisttpl
aad
adc
inc
push
dec
push
jmp
test
insl
add
push
outsl
popf
pusha
xchg
jno
adc
int3
add
sbb
sbb
in
cwtl
sbb
addr16
mov
out
xchg
and
ret
xor
fdivrs
xorb
movlps
pop
xchg
mov
jno
inc
test
adc
pop
jge
daa
jnp
hlt
adc
jne
jno
fdivl
out
push
xor
sbb
dec
lea
ret
icebp
sbb
xchg
iret
jg
packsswb
popa
rorl
outsb
dec
ret
aas
ret
push
adc
addr16
aad
fldenv
popa
ficoms
ja
push
bound
sbb
mov
je
sbb
ds
jae
xchg
daa
cmp
std
jecxz
xor
fcmovbe
pop
xchg
mov
push
add
aaa
out
scas
add
push
and
push
jl
xchg
out
std
pop
push
adc
into
dec
xor
les
repnz
loope
pop
lret
adc
sub
mov
adc
inc
mov
mov
add
xchg
popf
jecxz
std
sbb
in
hlt
mov
lret
pop
sub
xor
pop
lret
adc
inc
ds
cld
mov
fnsave
pusha
stc
sti
int3
addl
call
inc
xor
dec
fwait
push
add
jns
mov
pop
dec
sub
testb
dec
lea
push
cmpsl
sbb
push
andb
lds
shrb
dec
mov
inc
sahf
data16
clc
xor
hlt
cmp
pushf
lcall
je
out
in
test
fisubrl
and
cmp
dec
adc
ds
loope
add
aad
adc
dec
inc
ror
push
mov
popa
adc
mov
mov
pop
lret
adcl
xchg
xchg
sbb
cmp
jae
popa
sbb
adc
add
or
xchg
or
test
sahf
push
mov
test
mull
aaa
movsb
adc
inc
fstpl
dec
push
push
imul
cld
add
sbb
lcall
aam
jge
insl
add
add
adc
jo
outsb
xor
mov
and
mov
hlt
sbb
lods
inc
decl
dec
cmc
mov
out
dec
in
xlat
imul
nop
inc
je
sub
xorl
pop
jmp
mov
cmp
stos
setno
sub
sbb
xor
cmpsl
add
loopne
jle
cmp
repnz
mov
mov
sub
pop
mov
ljmp
push
or
scas
int
shl
sub
jno
int
fs
mov
insl
or
cwtl
scas
sub
outsl
gs
pop
pop
add
popa
mov
push
fisubl
into
sbb
sbb
mull
pushf
cld
xchg
jne
or
inc
sbb
jp
xor
xchg
insb
sub
pop
adc
ret
loope
inc
add
mov
mov
cmp
mov
fistpll
xor
aam
das
push
das
mov
mov
jbe
xor
nop
push
cmp
lcall
dec
and
shlb
pop
mov
loope
mov
add
inc
ds
pop
sub
or
and
jecxz
add
mov
push
clc
repnz
fchs
pop
repnz
add
xchg
jb
mov
mov
push
pop
lods
xor
aam
cld
sbb
mov
xchg
and
fstpl
pop
cmc
ss
cmp
jns
push
jge
ss
pop
stc
jmp
insb
or
sbb
pop
and
out
mov
jecxz
dec
and
xor
and
sub
add
fisubrl
aam
cmp
inc
add
push
in
cli
and
push
and
mov
xor
jnp
xlat
fs
movsl
movsl
or
test
mov
loope
cmpl
and
mov
in
jg
sarb
pop
or
sub
loop
outsl
inc
adc
dec
dec
and
sub
ds
xchg
cwtl
pop
out
dec
push
push
pop
es
fmuls
ss
aaa
gs
imul
push
aas
jae
xbegin
push
lock
pushfw
cmc
mov
cli
pop
mov
xchg
outsl
dec
xchg
lahf
xor
int3
pop
mov
or
mov
mov
dec
mov
cmpsl
movl
int
cmp
das
push
testb
stc
fstl
daa
mov
test
mov
cwtl
leave
mov
or
mov
ds
pushf
adc
mov
dec
mov
jno
sub
popf
pop
call
rcll
and
and
je
sub
ret
jnp
lods
xor
rcr
dec
pop
inc
fwait
andl
inc
aam
dec
sub
cmp
in
push
xlat
cmpsb
jns
jge
lods
mov
stos
or
pop
aas
or
das
xchg
in
adc
nop
in
data16
xor
dec
les
int
mov
pop
repnz
call
cmp
ret
inc
jnp
add
inc
xorl
test
data16
xor
and
mov
push
out
push
out
pop
push
dec
cltd
scas
call
inc
imul
inc
daa
je
movsb
jecxz
add
cld
dec
in
or
in
in
popa
inc
adc
cmp
mov
sub
cmp
out
add
aam
fwait
lahf
movsb
clc
sub
aam
mov
insl
arpl
pop
outsl
stc
xchg
mov
mov
jle
mov
push
scas
pop
insl
les
jl
inc
test
incl
lock
xchg
sub
rorb
xor
popf
sti
scas
popa
iret
adc
mov
sbbb
data16
pop
inc
mov
je
jg
data16
dec
mov
sub
fs
fists
aad
jnp
cmp
xchg
mov
iret
add
aam
out
adc
es
pop
hlt
pop
pop
mov
inc
clc
pop
cmp
call
dec
adc
pop
rorb
pop
int
mov
and
int
push
outsl
stc
jg
popw
sahf
sub
jl
adc
fdivl
dec
xchg
or
add
mov
out
and
movsl
inc
or
mov
call
sarb
out
adc
sbb
shr
popf
std
out
pushf
ja
sbb
test
mov
mov
mov
cmpsl
adc
sub
mov
add
and
xorl
hlt
or
push
cmp
adc
loope
in
pop
cmc
xor
cmc
jecxz
cwtl
rcl
mov
pop
pop
dec
aas
jg
xchg
cmpsl
repnz
int
sub
nopl
and
push
aad
xchg
or
lods
push
addl
test
mov
shl
cmp
pop
and
popf
fisubl
add
negb
sub
jl
clc
xor
push
mov
bound
mov
fidivs
movsb
sbb
cmp
add
or
aas
lods
dec
cmpsb
pusha
sub
xchg
cmp
lahf
dec
scas
jg
movsb
cmp
jmp
mov
pop
test
xchg
fdivrs
dec
roll
sahf
test
shl
aad
adc
jne
push
fistpll
test
cmp
outsb
dec
nop
das
and
cli
xchg
mov
jno
jmp
fildl
cmp
jbe
sti
dec
shr
pop
push
lret
mov
out
adc
adc
std
scas
mov
push
add
hlt
int3
xchg
mov
mulb
jg
pop
xchg
adc
aam
mov
in
jne
popa
hlt
lret
push
in
imul
push
jg
dec
jo
dec
xchg
mov
sub
subl
sub
shrl
xor
jmp
ja
mul
or
inc
inc
inc
in
fisttpl
sbb
add
adc
inc
shrl
les
push
push
push
push
insl
mov
lods
push
rclb
dec
cli
xchg
jno
mov
ret
mov
add
jo
and
mov
mov
and
in
loope
mov
cmp
enter
sbb
inc
ds
cltd
xor
sbb
aam
push
test
sti
in
pop
jg
das
lcall
scas
cmp
repnz
cli
mov
push
jnp
popa
push
in
pop
inc
or
lret
cmp
hlt
xor
push
mov
in
and
and
mov
pop
out
xor
inc
scas
xchg
dec
fwait
mov
push
in
insb
mov
mov
sbb
rcl
mov
aas
bound
sbb
pusha
cmp
das
and
pop
cmp
sub
insl
inc
test
sub
xor
pop
inc
lahf
xchg
push
or
repz
adc
mov
dec
fisubrl
mov
jmp
aam
mov
movsl
fdivrp
lds
es
push
cs
arpl
stos
imul
neg
or
mov
push
xlat
adcb
push
adc
es
xor
add
inc
in
ds
adc
pop
fstps
push
fstps
adc
popl
iret
movsb
incl
xchg
test
xor
push
fwait
push
pop
scas
dec
addb
mov
adcl
and
jmp
pusha
fists
push
nop
loop
jnp
int3
lods
jl
xor
ret
adc
shrb
mov
add
or
aaa
xor
push
stos
fiaddl
shrl
push
mov
and
shll
fisttps
mov
in
sahf
mov
pop
push
aad
out
pop
mov
ds
jnp
enter
mov
and
out
std
testl
icebp
mov
mov
add
pop
repz
mov
pop
push
fwait
decb
mov
cmp
call
jns
insb
fwait
cmp
std
pusha
dec
add
xlat
hlt
ss
pop
pop
iret
lret
jbe
cwtl
jno
jns
int
add
or
popa
mov
imul
jb
sub
cmp
jnp
adc
aad
lea
mov
jb
mov
rcrb
scas
test
in
mov
pop
pop
insl
loop
into
add
mov
pop
insb
movsl
cmpsb
ss
ljmp
jae
lods
add
cmc
or
cli
mov
and
in
xchg
jbe
sbb
and
mov
mov
sub
lods
outsl
mov
and
outsl
in
loopne
into
out
cli
bound
cmp
and
clc
pop
and
call
out
mov
xor
jp
mov
xor
lret
lods
aam
and
inc
push
ja
js
ljmp
pop
jg
or
outsb
cmp
daa
pop
jge
pop
dec
in
sub
std
fists
test
and
jmp
mov
pop
daa
loop
aad
inc
es
jge
inc
pushl
lcall
sti
pushf
aam
dec
add
mov
adc
push
add
loop
pop
jb
fxtract
pop
cmp
jno
aaa
and
stos
addr16
xchg
mov
cmpl
or
rorl
mov
idivb
das
lret
pop
mov
imul
lea
inc
imul
mov
sbb
lods
sbb
daa
cmp
dec
iret
mov
stc
movsl
fimull
fs
inc
pop
jle
mov
jl
fsubs
mov
pop
adc
imul
ror
sub
call
or
mov
sysenter
adc
add
rolb
shll
push
movsb
lcall
mov
push
test
shl
cmovl
lcall
call
jp
sti
testl
jp
or
add
jecxz
sbb
xlat
pop
push
shr
int
dec
ljmp
jp
or
das
rcrl
into
cmpsb
mov
inc
into
push
lods
sub
xchg
cmpsb
fdiv
sub
mov
iret
and
cs
mov
das
push
imul
sub
jge
xchg
or
sbbb
mov
push
cmp
loopne
test
add
or
aam
test
mov
jnp
add
dec
dec
inc
hlt
push
cli
cmpb
out
mov
std
mov
inc
fiaddl
stos
sub
ss
bound
xchg
sub
adcl
repnz
xchg
cwtl
xchg
and
mov
push
jno
iret
mov
hlt
loopne
xchg
jl
stos
push
leave
loop
mov
mov
pop
lds
test
cli
repnz
fsubs
idivl
and
xor
shrl
movsb
or
push
aaa
adc
cmp
and
rcrb
lcall
jg
outsl
push
inc
loop
cli
imul
xlat
push
mov
push
jno
xchg
mov
jmp
popf
arpl
push
fldenv
cld
or
mov
pushf
mov
lret
xchg
inc
lcall
xchg
addr16
or
pop
fnstenv
fstl
sti
jnp
in
or
pop
mov
xor
pop
leave
adc
pop
adc
clc
insl
dec
pop
lahf
cmpb
add
sti
xchg
push
int
inc
xchg
mov
mov
sub
pop
jne
or
add
sub
lods
mov
push
or
dec
hlt
lods
lea
sti
push
mov
xchg
push
mov
loopne
negb
mov
cmc
stc
inc
cmp
adc
adc
xchg
mov
fst
and
test
push
dec
adc
aad
adc
repz
sub
test
jg
int3
jo
pop
cmp
int
popa
stos
daa
push
mov
shll
xchg
lret
inc
dec
shr
add
aam
or
pop
cmp
or
xchg
in
lods
vcvttss2si
in
xchg
ds
add
loop
addr16
or
adc
dec
add
xchg
xchg
pop
or
push
or
cld
rcl
cmc
jo
out
lahf
jbe
inc
jg
cmp
test
and
lods
adc
fstps
pushf
in
xchg
arpl
xchg
movsl
mov
sbb
les
cmp
enter
in
int3
pop
or
xor
cmp
iret
int3
sbb
or
outsl
adc
repnz
sub
insb
cmc
je
fsubrl
test
adc
inc
iret
lods
ds
sti
add
push
xor
cli
notl
pop
stos
xor
pop
jl
rolb
pop
das
dec
cltd
xor
sbb
iret
mov
insl
jle
mov
adc
inc
cld
das
jne
xorb
scas
test
cmp
mov
data16
inc
test
pop
push
int3
mov
test
xor
pushf
pop
ret
jge
flds
pop
xor
add
outsl
cmp
xor
cltd
enter
pop
xor
faddl
mov
mov
dec
fsubrl
jp
arpl
add
fdivrp
das
sbb
leave
ljmp
xchg
ret
pop
sbb
dec
cld
adc
mov
test
mov
push
xor
pop
cmp
push
add
mov
pop
pop
arpl
insb
mov
sub
test
dec
and
fstpt
ds
mov
mov
fmul
aaa
pop
std
adc
ljmp
out
mov
iret
push
call
sbb
xchg
sbb
push
inc
mov
and
pushf
mov
ss
xor
adc
or
lods
jle
mov
ds
push
pusha
or
mov
jge
sar
inc
xor
mov
xor
cmp
mov
push
jo
or
outsl
xchg
movl
sbb
mov
subb
push
clc
mov
or
pop
rcl
fsubrs
roll
xor
icebp
cmovp
adc
inc
pop
sarb
fwait
insb
outsl
data16
ror
dec
cmp
aas
push
in
push
scas
xor
or
orl
or
and
call
jl
lods
ret
inc
pop
adc
and
jns
sbb
jbe
xadd
addr16
cmpsb
aaa
pop
pop
mov
movsb
push
in
cmc
add
ss
in
inc
ja
cmpsl
enter
mov
adc
clc
push
enter
pop
std
aas
out
xchg
sbb
fnstenv
nop
ss
lea
pop
jns
or
push
jmp
xchg
push
cltd
cltd
mov
sbb
cwtl
fmull
pop
test
jb
dec
cli
stc
fst
test
outsb
mov
popa
fcmove
jl
loopne
jp
fucomi
outsl
jns
out
out
xchg
fstl
rcr
fsubr
int3
push
lea
and
sub
xchg
mov
jge
push
icebp
mov
in
or
lcall
fdivs
inc
shlb
test
pop
sub
pop
jmp
roll
subl
out
out
shl
data16
xor
in
push
repnz
mov
adc
xor
mov
sbb
or
pop
outsl
mov
mov
mov
lahf
mov
or
push
fcomi
je
jbe
lret
lds
jg
mov
shll
ret
mov
dec
arpl
jae
lahf
cmp
repnz
xchg
and
cltd
push
out
mov
and
pop
movsb
pushf
js
mov
popa
cmpsl
sahf
fwait
ja
mov
inc
in
jb
cmp
xchg
jb
imul
in
imul
js
dec
loopne
pushf
call
fsubrs
insb
sub
arpl
dec
xchg
jns
push
clc
mov
pop
sbb
push
cmp
jle
pop
cmp
pushf
jecxz
pop
dec
outsl
jecxz
and
aas
sbb
add
ja
xor
mov
dec
pop
cmp
pushf
sub
fimull
test
jno
lcall
xlat
stos
jne
aas
mov
fisubrl
mov
lcall
js
xor
js
hlt
out
push
xchg
jne
sbb
xchg
inc
push
jl
push
fwait
addr16
push
xor
jle
aas
sysenter
ds
push
test
xchg
or
insb
and
clc
jmp
inc
sub
cmp
pop
imul
in
or
pop
insb
hlt
sahf
mov
out
adc
out
cmp
sub
mov
or
sbbl
out
sub
call
idivb
sarl
pop
adc
cmp
sbbl
popa
inc
cmp
sbb
push
in
xor
fnstenv
aad
jge
jge
inc
xchg
ss
int
pop
dec
cmp
insb
lret
in
dec
aad
jmp
pop
adc
rorl
and
sbb
addr16
adc
jb
dec
mov
mov
stc
movsb
lahf
fsubs
lds
ret
mov
adc
sub
xlat
es
pop
xor
push
xchg
rcrl
sbb
mov
lahf
enter
lods
and
orl
test
mov
popf
test
scas
add
jmp
mov
and
mov
adc
ljmp
dec
lds
lea
xchg
adc
rcl
jne
in
addr16
stc
das
lahf
mov
dec
mov
fistps
aas
add
mov
into
das
adc
shlb
imul
add
xchg
pop
and
addl
lock
loope
repz
loopne
ret
outsl
pop
add
fnstenv
movsl
jge
pop
and
dec
mov
sub
jnp
xchg
or
cmp
mov
and
sub
popf
jno
and
cmp
lds
rcr
pop
rorb
jg
inc
cwtl
push
es
xor
inc
dec
cmpsb
jae
xor
movd
into
iret
les
push
pop
dec
cmp
sub
push
arpl
dec
add
sbb
cs
fadds
inc
push
sbb
sarl
mov
mov
jae
imul
mov
or
ret
pop
out
sub
xchg
ss
nop
xlat
and
andl
insb
mov
and
xor
or
lcall
cwtl
mov
fcompl
fwait
ss
xor
push
call
ljmp
jg
push
mov
push
fbld
inc
push
jo
jo
lret
cmp
jmp
lea
in
add
idiv
sub
fidivrl
xchg
cmp
iret
enter
jae
imul
rcrl
sbb
ja
movsl
cmp
add
das
xchg
cs
in
outsl
sub
add
mov
xor
inc
inc
sub
mov
pop
cmpl
icebp
add
dec
lea
pop
add
fdivrl
cwtl
mov
flds
inc
out
mov
addb
es
sbb
in
jne
sbb
sahf
mov
enter
mov
loopne
mov
mov
adc
push
sub
dec
out
pop
xor
ljmp
aas
dec
dec
in
mov
jmp
push
test
xchg
cmp
repz
out
insb
ljmp
sub
jo
inc
inc
mov
imul
inc
icebp
sahf
notl
adc
insl
sbb
inc
ljmp
mov
inc
cmp
lahf
xchg
aaa
jnp
lret
sbb
adc
push
lret
testl
fdiv
jno
push
rolb
push
repz
mov
mov
push
movsl
add
push
cmp
movsb
aad
fwait
subb
fwait
xchg
movb
jp
stos
mov
xor
mov
outsb
subb
mov
mov
inc
fisubrl
jp
inc
push
mov
gs
pop
sahf
or
fcmovne
xchg
ret
cltd
repz
andb
jecxz
das
sti
adc
out
mov
sub
pop
and
cmp
xor
cmp
insb
fwait
xchg
mov
leave
ljmp
sbb
sub
add
inc
in
push
int3
movsb
push
cwtl
dec
mov
lret
inc
push
aad
repz
push
rcrl
mov
clc
and
jns
and
call
jb
inc
dec
pop
sarl
xchg
fimull
sbb
mov
rcrl
out
cmp
xchg
sti
mov
nop
xchg
push
js
mov
loop
out
dec
xchg
xor
add
jmp
adc
cmp
bound
fcomps
jp
popa
jnp
jl
fstpt
sbb
je
jp
loope
ja
and
in
xor
ret
ljmp
daa
scas
inc
rcrl
loope
push
addr16
xchg
stos
les
lock
xor
cmpsl
daa
mov
add
push
daa
adc
mov
repnz
in
cmpsb
add
shll
rolb
sahf
dec
add
ret
dec
cmp
dec
cmp
adc
rcl
or
test
mov
jmp
je
pop
fildll
mov
mov
ror
rorl
loopne
jno
daa
insb
loop
mov
sbb
std
imul
or
in
lea
pop
xor
outsb
inc
mov
and
scas
inc
sub
lea
std
pcmpgtw
mov
cld
pop
xor
std
and
adc
std
or
jns
mov
paddusw
push
dec
xor
push
mov
sub
loopne
dec
idiv
iret
fcompl
cmpsb
mov
pop
loop
andb
js
pop
add
call
int3
xor
jg
lods
mov
imul
psubusw
ret
mov
sahf
push
ret
add
adc
in
inc
inc
ss
mov
xor
cli
cmc
dec
arpl
lret
lret
sti
ss
cmp
test
dec
mov
ret
sbb
das
cltd
in
sahf
pusha
mov
lock
xchg
jb
in
aad
mov
sub
jbe
mov
jmp
in
pushf
xor
insl
pop
pop
jno
into
cmp
leave
std
lret
jp
test
outsb
xchg
rclb
pop
xchg
fdivr
sub
fcmovnu
adc
je
xor
ret
adc
pop
inc
push
cmp
mov
jbe
xor
nop
imul
out
push
inc
push
in
aam
pop
jg
sbb
dec
push
imul
testb
clc
lods
cmp
imul
aas
dec
sub
push
loop
sbb
lcall
push
sub
mov
xor
push
mov
jae
lret
addr16
mov
dec
addr16
and
xor
jne
mov
lods
or
mov
xchg
fistpl
clts
xor
fmuls
pop
aaa
in
push
dec
out
xchg
out
cltd
or
int
popf
es
jbe
xchg
add
xor
fmull
icebp
add
adc
dec
dec
jnp
cmp
xchg
jae
add
lea
mov
pop
movsl
mov
lahf
not
pop
je
mov
ljmp
pusha
add
lods
ljmp
lea
xor
pop
hlt
inc
lock
jbe
dec
sbb
mov
jne
jge
je
jbe
mov
clc
leave
inc
jmp
or
das
es
adc
mov
mov
repz
out
pusha
loop
push
cmp
push
sbb
push
sbb
pop
adc
ja
mov
shll
fwait
mov
ss
jne
pop
lds
adc
sub
in
push
dec
aam
inc
xor
jge
adc
jnp
insb
arpl
adc
pop
xor
jp
out
push
jp
je
xor
sub
mov
in
repnz
es
ljmp
in
jmp
jae
pushf
or
cmc
mov
push
aad
jne
pop
das
out
ss
mov
dec
sub
repnz
mov
mov
pop
iret
clc
outsl
insb
in
cmp
dec
inc
sbb
test
sbb
ja
adc
adc
aaa
push
aas
repz
push
pop
or
jae
jl
dec
xchg
stc
or
fwait
and
mov
mov
push
cld
jp
inc
sbb
je
inc
mov
jg
addr16
mov
gs
loop
in
jecxz
mov
adc
lods
lods
popa
add
xchg
mov
mov
xchg
inc
inc
add
test
and
jbe
lret
xchg
decb
bound
test
cmp
sub
push
dec
sti
fiaddl
shll
xchg
cmpl
cltd
das
inc
popl
addl
leave
lock
sbb
and
xor
push
or
cmp
mov
xchg
adc
adc
rcll
cmp
cld
movsl
pop
pop
addl
test
test
xor
xchg
cmp
aam
lods
rorb
int
out
repz
pop
iret
fbstp
lods
jno
das
stc
loop
cmp
xor
mov
ss
push
lods
sub
mov
push
push
xor
cltd
xor
cld
mov
jp
decb
inc
mov
out
rol
pop
and
addr16
pop
ret
push
fisttps
jae
adc
cmp
popf
push
rcll
out
jge
xor
or
out
lods
sub
sub
bswap
xchg
dec
fiaddl
out
cmp
adc
jnp
add
jo
or
xor
icebp
sub
cmp
clc
sbb
stos
mov
pop
iret
mov
popf
lcall
sahf
aad
int3
insb
push
jecxz
xor
mov
imul
test
out
stc
or
imul
jmp
sahf
inc
clc
inc
push
leave
out
sub
xchg
or
mov
faddp
and
add
jp
push
ds
jae
in
mull
test
shl
ljmp
inc
insb
fildll
ja
xor
add
pop
jbe
jne
add
mov
addr16
xchg
mov
fabs
push
or
int
sub
daa
loope
cmp
cmpsl
addr16
ja
stc
scas
xchg
les
shl
in
inc
pusha
add
mov
mov
sub
cmp
jbe
add
lds
fnstsw
negb
mov
sbb
arpl
jp
adc
push
lea
icebp
mov
sahf
out
mov
fnstenv
cmpl
sub
dec
gs
ficoms
icebp
je
mov
xchg
mov
pop
xchg
stos
jb
mov
scas
repz
pop
or
shr
lds
xchg
and
mov
xchg
xor
xchg
das
out
andb
mov
xchg
adc
sub
mov
arpl
insb
and
mov
cmp
repnz
in
insb
jae
cmpsl
das
push
jg
pop
add
mov
mov
in
test
mov
sub
mov
mov
out
adc
test
ret
in
fwait
pop
xor
and
addr16
sub
into
sbb
lret
outsb
hlt
mov
push
addr16
test
add
addr16
incl
mov
lcall
das
shl
pop
clc
rcrl
cmpsl
pop
into
fsubrs
lds
sub
imul
loope
add
mov
loopne
adc
dec
mov
repnz
and
inc
ret
cmpsl
stc
enter
pop
enter
add
fdivrs
leave
fs
sti
jbe
je
pop
popf
add
inc
sbb
xchg
leave
pusha
lds
cmpsl
xor
aam
jns
sbb
cmp
call
cmp
sbb
std
ss
es
ficoml
sarl
add
inc
cmp
cwtl
popa
xor
test
push
ror
repnz
les
hlt
push
mov
xlat
imul
cld
lock
push
mov
ljmp
sub
cwtl
in
jno
aad
cltd
dec
cmpsb
xor
cmp
sub
cmp
push
or
mov
and
and
imul
arpl
rcr
inc
movsb
nop
test
rorb
cmc
pop
in
lock
pushf
subl
and
push
sub
fwait
jno
hlt
pop
fnstsw
pop
push
addl
lods
push
pop
pop
popa
imul
lret
dec
rorb
test
inc
pop
cmp
ss
frstor
sub
push
stos
fdivrp
xor
cld
clc
cmp
fildll
add
mov
cmp
adc
jle
scas
mov
adc
and
dec
mov
cwtl
pop
mov
sub
mov
mov
jnp
mov
xchg
mov
sbb
sub
mov
sbb
inc
adc
add
xchg
in
dec
pop
push
or
sbb
std
mov
faddl
cs
fs
aas
mov
les
jp
test
in
and
ljmp
and
and
push
repnz
std
out
data16
addr16
dec
fisttpl
and
test
popf
dec
mov
es
out
or
jg
add
leave
int
sub
and
std
jle
add
mov
pusha
xchg
pop
mov
sahf
and
mov
push
xchg
outsl
pop
in
cmp
sub
call
gs
dec
pop
addr16
in
movsb
in
inc
sarb
add
lea
sti
xchg
data16
enter
dec
fildl
cwtl
out
jmp
add
inc
mov
jp
xchg
xchg
idivb
mov
in
dec
sub
js
xchg
mov
mov
leave
imull
sbb
popf
pusha
in
push
pop
lods
sbb
iret
or
shlb
daa
je
push
loop
cld
dec
pop
fs
xchg
cli
pop
mov
mov
shll
jo
addl
fldt
add
push
jnp
int3
sub
movsl
insb
or
inc
pop
icebp
xor
cmp
jb
sbb
cmc
adc
jmp
shl
sbbb
pop
push
lock
leave
cld
inc
push
adc
or
xor
mov
lcall
cwtl
mov
push
es
dec
add
mov
sub
mov
arpl
in
push
fisttpl
mov
mov
inc
adc
test
mov
add
and
mov
mov
ds
xor
mov
pushf
or
sahf
add
es
add
sbb
sub
or
mov
dec
cli
scas
sub
loopne
push
push
das
lock
cli
pop
mov
jle
jae
lods
gs
push
add
jp
inc
jmp
jl
adc
mov
js
xchg
sbb
outsb
xchg
aad
stos
and
fldl
stos
xchg
inc
sbb
in
lret
or
pop
xchg
mov
mov
push
push
xor
fisubrs
jle
jp
xchg
shll
cmp
cmp
lods
aad
test
sbb
sbb
loope
mov
cmpl
sti
cmp
dec
dec
inc
repz
sbb
mov
mov
xlat
mov
push
js
loop
inc
pusha
pop
push
roll
pop
fsubp
mov
loope
ds
xorb
ret
xor
adc
mov
xchg
ret
aam
in
lds
jne
push
push
cmpsl
sbb
sub
cmp
jne
xchg
and
inc
dec
adc
imul
mov
push
jo
pop
bound
fnstenv
and
pop
and
xchg
inc
or
cmpsb
lahf
sub
mov
orl
dec
add
mov
test
jp
mov
cld
mov
je
sar
push
cmc
repz
xchg
pop
pop
xlat
cmp
popa
shl
sarb
mov
cmpsl
mov
pop
dec
cmpsl
push
into
jmp
jne
stos
cmc
cli
jg
mov
cmp
aad
sahf
sbb
adc
lods
adc
xor
aas
inc
cmp
adc
pop
stos
pop
test
cmpsb
clc
movsb
cmp
adc
mov
jns
pop
dec
xchg
int3
push
das
push
pushf
xor
fmuls
inc
dec
loope
ret
sub
mov
jbe
pop
int3
cli
pop
das
in
mov
fmull
cld
jge,pt
ret
sub
xchg
shlb
mov
xchg
jns
dec
lock
jns
mov
loopne
xor
cmc
cmp
fistpl
pop
mov
xchg
pushw
data16
mov
mov
mov
shrb
xchg
ret
mov
jns
test
ficoms
xor
sbb
inc
or
insl
mov
jmp
aas
daa
sbb
adc
lea
or
sub
das
and
loope
test
sbb
mov
cmpsl
cmc
cmp
xorl
mov
jp
xchg
inc
pusha
sbb
lcall
push
adc
sub
push
cmpsb
or
and
aam
fimull
loope
add
mov
pop
imul
addr16
out
test
bound
xor
jno
xor
ss
shlb
add
mov
fs
add
jmp
fstp
push
xlat
pop
in
fsub
mov
cmp
int
lods
outsl
add
cmpsl
adc
mov
inc
cmp
adc
xchg
push
mov
add
sub
cwtl
push
xchg
pop
or
in
adc
sbb
xchg
inc
cmp
je
xor
ficoms
repnz
cs
andl
pop
orb
add
jp
mov
cmp
xchg
fcoml
inc
leave
mov
es
or
mov
mov
test
rcrl
or
test
lods
or
xchg
dec
mov
hlt
inc
pusha
push
fisubl
mov
mov
mov
aaa
jne
jbe
popf
dec
cmp
int
xlat
fwait
cmpsl
push
or
out
aas
mov
sbb
mov
sbb
push
mov
out
cli
mov
nop
xor
jp
sahf
xor
fildll
or
mov
mov
mov
jecxz
les
jne
pop
dec
mov
push
jmp
and
les
daa
insb
movsb
rorl
mull
das
pop
dec
sbb
es
hlt
into
sub
lret
enter
enter
inc
mov
fcomps
cmp
movsl
xor
sub
pop
shlb
test
outsb
pop
dec
xchg
push
add
loope
inc
das
ret
inc
fs
int3
lock
cltd
mov
xor
rcll
xchg
sub
push
adc
gs
cltd
cmpb
inc
into
mov
mov
pcmpgtw
test
jne
adcl
push
rorl
int3
add
fnstsw
jnp
daa
aas
movsl
dec
xchg
leave
ficomps
dec
xor
das
adcb
xor
add
pushf
idiv
cmc
loope
add
add
test
ja
mov
lcall
xor
jg
jmp
sbb
cwtl
fadd
out
das
in
test
jbe
mov
mov
les
fwait
pusha
mov
int3
popf
lock
inc
ja
jl
push
insl
repnz
push
int
pusha
dec
sub
jge
ss
cmp
enter
inc
dec
push
jecxz
xchg
insb
rcrl
add
in
pop
inc
pop
movsl
popf
mov
cmc
sbb
pop
shll
mov
dec
fisubrs
in
and
jae,pt
imul
ljmp
sbb
jg
in
mov
sbb
pop
and
mov
inc
ds
cmpsb
adc
cmp
gs
xlat
adc
test
mov
test
shll
clc
ret
dec
mov
les
flds
jecxz
lret
sbb
fwait
js
arpl
and
pusha
jbe
cs
sbb
insb
imul
add
daa
lods
lahf
enter
adc
test
aam
test
test
dec
ja
push
fstl
imul
jmp
int
dec
subl
sbb
addl
ja
sbb
jnp
jmp
push
cmp
outsl
adc
pop
adc
rcr
jb
les
adc
adc
idivl
lds
in
loope
jb
sti
outsl
xchg
add
inc
sub
xchg
or
xor
pop
jns
mov
ss
repz
pop
popa
lret
add
add
xchg
inc
mov
xchg
push
stos
xchg
sub
mov
xchg
jecxz
push
out
outsl
adcb
jge
sbb
jb
sbbb
pop
imul
dec
inc
je
or
mov
dec
mov
dec
sbb
sarb
xor
jp
jge
cwtl
outsb
shlb
int3
mov
and
jnp
mov
add
push
mov
negb
shrb
or
fcmovnu
mov
in
lock
mov
ret
mov
insb
mov
stos
fcoms
cs
xchg
push
pop
jl
bound
ljmp
leave
das
rclb
add
jbe
sbb
mov
mov
push
jbe
cmpb
jg
subl
test
cmpsl
mov
push
lock
push
imulb
pushf
sbb
inc
mov
xor
mov
insl
icebp
sbb
je
jl
pop
movsb
iret
fnsave
fildl
push
jg
pop
test
push
fiadds
dec
and
lods
in
and
push
enter
loopne
jnp
call
inc
jmp
cmc
int3
imul
xchg
jne
jmp
pop
outsb
mov
movsb
jp
jecxz
ja
scas
pop
or
mov
shl
in
pop
jecxz
mov
outsl
sub
imul
and
jae
andl
lock
das
imul
xlat
sub
jecxz
mov
sub
cwtl
aas
sahf
mov
jo
hlt
push
outsb
push
jle
out
mov
arpl
pushfw
pop
outsb
jle
insb
lock
or
cmpsl
or
mov
adc
xor
faddl
out
fsubp
xor
pop
and
xchg
and
adc
add
pop
pop
cld
call
daa
jl
mov
mov
test
aaa
andl
mov
push
sarb
push
pop
push
test
push
sti
add
mov
dec
push
iret
jb
lcall
fcmovb
data16
adcb
fcomi
dec
adc
dec
in
sbb
mov
adc
jns
add
popa
inc
cmp
shlb
mov
sbb
jb
jg
imul
jecxz
rorb
jnp
or
ja
hlt
pop
addr16
or
int
adc
shrb
je,pt
daa
mull
pop
sti
push
hlt
push
push
lea
xchg
ss
int3
dec
out
aas
dec
sub
out
and
iret
out
test
loopne
inc
or
cmp
jnp
and
jg
push
xchg
int3
inc
jbe
and
mov
and
in
gs
sti
outsb
loopne
jno
jl
xchg
add
ja
cld
inc
fisttpll
sub
ss
iret
xchg
in
rol
push
cli
mov
jne
jne
xchg
data16
add
cs
and
fwait
inc
ss
dec
cld
push
int
push
jne
repnz
aaa
xchg
cmp
inc
xlat
dec
push
mov
jmp
jbe
xchg
add
arpl
fidivs
popf
jmp
in
enter
idiv
fcmove
push
dec
iret
jg
mov
xchg
sbb
popf
mov
repnz
xor
or
loope
adc
mov
in
mov
imul
subl
adc
int3
fsubrl
lcall
jle
add
jle
pop
sbb
shl
mov
mov
sub
dec
jle
xor
inc
cmp
movsb
mov
inc
test
cmp
sysexit
jl
jg
jno
sbb
cwtl
push
dec
mov
dec
xor
test
sbb
pop
jge
adc
outsl
aad
in
popa
out
jp
int3
push
mov
daa
shl
addr16
dec
insb
xchg
call
out
mov
jmp
push
mov
mov
jne
sub
sub
lret
aaa
adc
sbb
out
cmp
gs
cmp
push
mov
sahf
popa
mov
fdivs
cld
add
pop
lret
dec
shll
sub
shll
pop
hlt
adc
insb
pusha
cs
jnp
mov
dec
jo
push
mov
out
sbb
fucom
in
xchg
leave
fiaddl
into
mov
sbb
mov
push
adc
mov
adc
cwtl
cmp
dec
out
out
adc
popa
stos
ror
fidivrs
jle
mov
xor
inc
bound
addb
pop
imul
in
out
and
mov
jnp
lret
and
arpl
mov
les
in
inc
push
in
cmp
sahf
clc
rcrl
sub
inc
dec
fs
pop
push
scas
adcl
loope
xor
xor
adc
dec
rcl
dec
or
xchg
aam
fldcw
dec
jmp
roll
loopne
ret
shll
mov
fstl
xchg
push
aas
ret
popa
rorl
jbe
lret
lods
add
push
sub
xchg
pushf
inc
mov
pop
popa
xchg
xor
movsb
pop
and
inc
pop
mov
jb
pop
outsl
sub
push
xor
lret
mov
rcrb
mov
addr16
sbb
push
outsb
push
outsl
mov
enter
addl
push
lahf
or
and
test
jbe
sub
cmc
xor
js
and
inc
pop
out
rorl
ret
dec
in
jne
pushf
cmp
add
fs
mov
mov
cmp
jle
add
inc
lahf
je
stos
mov
subl
sub
pop
test
enter
pop
sub
or
insb
xor
dec
scas
mov
jno
ret
pop
lret
stos
or
fildll
jnp
mov
xchg
adc
movsb
and
xor
xchg
test
and
dec
rcrb
es
push
push
in
xlat
cmp
lret
pop
pop
mov
nop
pushf
enter
scas
addb
cwtl
adc
cli
mov
adc
sbb
xchg
lds
sti
and
or
dec
adc
cmp
call
mov
or
imul
mov
cmp
pop
shll
cmp
push
lret
pop
push
ljmp
movb
test
mov
mov
adc
pop
push
xorb
pop
out
negb
aas
cld
cmp
fwait
mov
ffree
in
or
pop
xchg
xlat
test
or
popf
int
pop
fwait
xorb
mov
xchg
cmp
inc
js
xor
xor
imul
lods
mov
mov
inc
subb
test
push
ja
aaa
call
push
mov
add
cmp
cmp
adc
out
scas
push
cmp
int3
adc
ret
xchg
inc
dec
ret
movsl
loopne
or
push
out
sarb
xchg
out
fdiv
js
andl
mov
or
ss
cmpsb
hlt
ds
push
enter
imul
push
loop
jne
xchg
nop
inc
leave
sbb
jmp
push
dec
cmp
fmulp
cmp
xchg
sub
loopne
mov
mov
adc
in
fstpt
ja
mov
cwtl
ss
call
or
mov
les
and
adc
out
aas
rcl
fs
push
or
jg
add
xchg
mov
push
xlat
and
testl
jns
ficomps
cmpsb
je
jnp
xor
pop
pop
mov
rorb
push
and
sub
xor
cwtl
mov
jo
add
pop
jb
jge
scas
mov
push
int
cmpsb
fldl
mov
addr16
cmp
cmp
int
push
pop
mov
shlb
inc
pmulhw
call
inc
sbb
popf
dec
aad
icebp
fsubs
xor
dec
pop
push
push
add
cmpsl
lock
das
mov
ret
mov
fwait
pop
and
xchg
adc
cmp
stc
fildl
mov
lret
push
mov
or
sub
stc
stos
xchg
aas
aas
arpl
mov
cmp
push
sub
cmc
je
cmp
sbb
xlat
pop
sbb
lods
into
stos
cmp
test
popf
push
inc
mov
pushl
fcmovb
ret
xchg
je
loop
jo
and
insb
push
stos
adc
rol
testl
jno
adc
jecxz
in
cmp
cmpsl
sub
popf
xchg
loope
sub
pop
addl
fwait
rcl
and
cmp
cltd
lea
pop
mov
mov
push
decb
jne
jns
cwtl
mov
jg
xchg
imul
lret
int3
pop
out
push
movsb
and
call
out
jnp
push
subl
jnp
popf
push
inc
in
sub
push
cmp
test
dec
mov
mov
sahf
dec
notb
sub
outsl
mov
cmp
jne
sub
mov
add
mov
dec
xorl
xor
popa
stos
scas
pop
clc
shl
scas
pop
dec
aas
out
loopne
sub
ret
nop
mov
dec
sub
cli
mov
inc
pop
bound
addr16
outsl
xor
jns
add
or
popa
lods
mov
jbe
xchg
arpl
bound
test
cmpsb
jns
push
mov
leave
bound
push
mov
loop
push
cltd
dec
or
repz
cmc
xchg
es
dec
in
sub
dec
lock
repnz
lods
hlt
sbb
cmp
jmp
dec
pop
jmp
xlat
ljmp
jmp
push
mov
rorl
lds
test
cmp
mov
xor
inc
xchg
xor
stos
hlt
adc
push
lret
cmpl
call
popa
sbb
push
inc
lcall
popf
adc
testb
mov
daa
cmp
into
dec
and
jecxz
fldt
fistpll
jge
adc
inc
mov
fcmovnb
rorl
adc
pusha
adc
sahf
inc
and
dec
push
mov
sbb
in
mov
cmp
mov
ds
stos
mov
xor
mov
fisubrs
sbb
enter
movl
lods
out
call
or
sbb
rol
loopne
fiaddl
bound
mov
xadd
xchg
mov
loope
test
jo
lea
outsb
cmp
sbb
hlt
xor
icebp
and
imul
push
cmp
bound
cmp
dec
mov
insl
hlt
addr16
clc
les
scas
jb
lret
aas
pop
in
shlb
fistl
inc
roll
and
sbb
fistpll
jno
cmpsb
mov
repz
and
pop
lea
xchg
adc
sbb
adc
lea
in
jl
pop
insl
popf
cmc
dec
cmpsl
loope
mov
movsl
jg
dec
push
mov
cli
les
sub
mov
rclb
and
cmpsl
and
xor
outsb
arpl
lahf
out
popaw
xchg
out
pushf
add
mov
xor
cmp
dec
dec
aad
push
pop
jecxz
aaa
repnz
movsl
mov
fsubp
shl
ds
inc
add
iret
cld
jp
or
icebp
pop
cwtl
push
es
push
mov
mov
jno
js
cmp
clc
lods
js
or
lret
popf
in
push
jmp
mov
ja
cmp
push
xchg
adc
mov
and
mov
pop
push
xchg
inc
dec
jge
scas
mov
or
fldcw
out
lds
enter
jo
xor
lret
dec
out
adc
fidivrl
mov
fnstcw
repnz
sub
fdivl
jnp
out
mov
cmp
scas
push
cmpsb
jbe
push
jbe
pop
adc
fildl
sub
divb
fldt
sti
jns
sub
add
ja
push
sub
cmp
leave
sti
mov
xchg
sbb
out
add
push
dec
xchg
mov
mov
xchg
inc
xchg
aas
or
bswap
xlat
xchg
jg
fldenv
in
sbb
inc
mov
enter
icebp
xchg
fsubrs
add
aas
repz
ljmp
inc
push
inc
dec
xor
shll
enter
mov
gs
cmp
mov
jne
jae
mov
add
sbb
jns
adc
sbb
outsl
mov
test
fstpl
in
sbb
sub
fildl
cwtl
enter
lods
stos
repnz
outsb
sbb
es
shr
push
lret
xor
gs
sub
fwait
dec
fcompl
jnp
jno
pop
sub
and
add
gs
jmp
cwtl
mov
and
xor
popf
movsl
adc
popa
inc
cmc
push
or
bound
or
in
jnp
ss
cmpsb
cmpsl
jmp
xlat
test
inc
push
js
out
cs
and
mov
dec
lods
sbb
pop
stos
das
xchg
jecxz
and
adc
mov
test
aaa
inc
sub
cltd
rclb
xor
in
xchg
sub
pop
lds
icebp
sub
or
sbb
or
cmpsl
mov
int3
rep
stc
ss
imul
clc
push
adcb
loop
lahf
lret
xchg
add
cmp
add
push
mov
pop
dec
inc
lock
insl
ficoms
loop
loop
jbe
je
push
cmp
mov
in
js
xor
push
lret
dec
iret
pop
pop
dec
loop
ja
add
cmpsb
add
insb
adc
hlt
dec
xlat
subb
mov
push
rorl
mov
add
aas
lock
xchg
mov
scas
mov
scas
sub
fsubl
loop
inc
and
ret
idivb
jge
outsb
inc
xchg
pop
ret
mov
or
push
sub
and
cmp
mov
neg
add
mov
or
sbb
les
jae
mov
xchg
sub
mov
cmpsb
lods
push
push
sbb
fsub
lock
jg
fdivrs
out
mov
mov
adc
out
push
xchg
scas
imul
ret
mov
sbb
movsb
mov
mov
push
adc
test
roll
xor
lahf
rep
pusha
les
jno
mov
inc
dec
cmpsb
scas
mov
adc
sbb
push
sbb
xchg
jmp
cmpl
xchg
nop
js
xchg
mov
or
mov
add
or
int
sub
cmp
sbb
xchg
or
lods
scas
fdivl
and
addb
add
mov
fwait
ret
and
sbb
xor
sub
mov
stc
repz
push
mov
jge
mov
push
cmp
xor
in
and
or
cs
scas
xchg
loopne
mov
fisttpl
cld
mov
lret
and
daa
iret
decb
jae
ret
insb
or
cmp
xchg
dec
testl
jle
daa
dec
jle
mov
es
js
sub
addr16
push
std
inc
fnstsw
inc
sbb
push
mov
or
addb
cmp
push
gs
and
dec
fxch
sub
push
cli
xchg
inc
adc
xor
jp
sbb
xor
or
test
fidivrs
jl
js
test
push
rclb
push
fmull
inc
std
inc
pop
jbe
mov
inc
xor
hlt
lods
jno
int
adc
lods
in
mov
ds
mov
mov
sbb
ja
subb
sub
in
loope
repz
movsb
xchg
pop
pop
or
mov
and
rcll
outsl
cmp
mov
sahf
or
leave
scas
xchg
insb
mov
push
add
mov
leave
sbb
mov
aam
addr16
and
mov
push
lods
pusha
bound
addr16
andb
test
adc
pusha
jno
add
fstl
mov
shlb
pop
daa
cs
mov
xchg
mov
andb
scas
sub
pop
data16
test
push
sahf
repnz
pop
xchg
inc
and
cmc
mov
gs
popf
xor
inc
xchg
shlb
dec
add
jno
repnz
or
adc
adc
shl
iret
test
insb
sub
test
or
pushf
mov
jp
sbb
test
cmp
mov
inc
sub
push
in
lea
sub
pop
mov
xchg
loop
sbb
jo
je
cmp
mov
pop
data16
fiaddl
cmp
lds
or
leave
popf
roll
xor
dec
jae
sub
test
out
out
add
push
mov
cmpl
inc
xchg
push
fbstp
movb
fistps
andl
xor
imul
inc
mov
repz
pushw
out
jecxz
push
les
imul
push
aam
lods
adc
mov
add
sub
adc
bnd
cmpsl
mov
mov
mov
push
fsubrl
out
cmp
and
fstl
in
add
push
in
insl
sub
add
movsl
std
scas
lea
imul
inc
fxch
aam
jbe
push
insb
jae
gs
pop
xor
or
add
or
scas
mov
sub
fidivrs
cmpsl
sbb
mov
sbb
xor
arpl
jp
and
jp
push
aam
mov
xor
js
or
or
outsb
sbb
lret
jns
jo
jmp
std
mov
xchg
ret
in
pop
jmp
imul
jmp
mov
mov
es
xchg
cmpsl
inc
mov
xorb
arpl
out
outsl
out
inc
pop
inc
xor
push
ljmp
adc
fisubl
mov
imul
mov
pop
mov
mov
jne
fisttpl
test
and
push
ds
inc
mov
fildll
push
xlat
daa
push
pop
movsb
ljmp
xor
dec
push
shll
adc
push
inc
call
push
mov
or
jno
shlb
pop
ret
xchg
pop
fwait
push
push
push
mov
push
inc
add
and
push
dec
dec
stos
dec
sti
mov
mov
mov
push
mov
mov
sub
mov
fbld
inc
pop
adc
sbb
sahf
js
jno
xchg
stos
stos
dec
rcrb
or
xchg
cmpsl
xor
rclb
push
lea
mov
and
imul
adc
shl
stos
mov
pop
adc
sub
insl
into
push
push
orb
fimull
sub
jecxz
xchg
cmpsl
test
add
pop
adc
out
push
xchg
push
and
enter
stos
mov
lds
sub
sbb
xor
fdivrl
stc
ss
loope
loopne
cwtl
xor
insb
add
mov
or
das
je
jmp
lods
mov
sti
fidivrl
push
jbe
jp
out
ja
lea
dec
dec
js
outsb
pop
jbe
xchg
pop
fmuls
adc
mov
stos
dec
add
push
mov
and
push
cli
ret
rcrb
iret
push
push
lods
pushl
outsl
pop
add
adc
enter
jbe
jge
xchg
cmp
adc
or
cwtl
out
movsb
push
sahf
xor
bound
xchg
mov
jecxz
test
push
cmc
or
cmp
in
sbb
mov
in
icebp
and
or
decb
mov
pop
inc
nop
mov
jge
test
subl
or
sbb
repz
dec
js
pop
repnz
xor
lret
sarb
data16
es
outsl
pop
sub
fcmovb
out
xchg
sbb
out
mov
and
call
popa
xchg
cmpsl
mov
test
ret
xchg
rorl
push
add
mov
daa
add
lahf
push
pop
xor
lods
push
and
sbb
dec
addr16
xchg
lret
sbb
push
pop
pop
xchg
stos
test
movntq
xor
movsl
imul
sbb
rolb
mov
leave
mov
leave
mov
sbb
addr16
minps
or
jnp
gs
jne
cmp
dec
adc
adc
inc
push
ljmp
out
nop
xchg
add
xor
adc
mov
sub
mov
add
jge
loop
xchg
add
ret
imul
jmp
call
test
pop
and
jnp
cmp
push
adc
mov
push
lret
outsb
cltd
cmpl
std
push
push
loop
and
mov
repz
scas
shlb
jmp
cli
mov
loop
movsl
aas
sbb
iret
xchg
push
ret
ljmp
negl
xor
test
std
sahf
mov
mov
mov
xchg
pop
fnsetpm(287
cwtl
iret
pop
cmc
lods
push
sbb
jp
adc
xchg
cmp
aad
or
dec
shl
jge
lret
xor
ljmp
pop
or
add
dec
fdivrl
add
cs
fstp
and
sub
sbb
jecxz
aad
lcall
push
cmpsl
or
inc
jbe
lret
push
psubusw
sbb
sub
mov
movsb
add
mov
call
fldcw
sub
fdivr
inc
aas
sub
inc
add
cwtl
inc
sub
sbbb
jmp
mov
dec
dec
pop
call
sub
scas
cmpsb
les
inc
aas
xor
shll
pop
sbb
dec
sub
rcrb
dec
shlb
dec
ljmp
inc
push
jae
and
leave
bound
cmp
mov
mov
mov
sbb
leave
rolb
dec
fnsave
xor
push
sbb
stc
repz
shl
lahf
adc
shrl
aad
cmp
sbb
adc
dec
mov
inc
adc
icebp
pop
inc
dec
mov
cmc
shll
inc
mov
dec
lods
test
cld
dec
aad
out
in
popa
mov
sbb
ljmp
in
movsb
mov
lods
rcl
outsb
sbb
inc
adc
xchg
dec
ficoms
xchg
xchg
cmp
pop
and
push
iret
sahf
test
push
cmpsb
xor
int3
ja
jge
sarl
adc
cld
aad
sub
mov
arpl
movsl
cmp
xchg
xchg
fimull
push
out
fisubrs
push
rclb
xchg
jcxz
insb
stc
lret
repz
jae
jecxz
lds
aad
jb
pop
cmpsl
mov
shrl
rcrl
ja
shrb
add
sti
rol
or
es
add
orb
pslld
cmpsb
lds
xor
mov
jo
icebp
test
lahf
cmpsl
loopne
inc
xlat
sahf
add
lret
repnz
ja
int3
repz
pop
stc
pop
repnz
and
in
mov
cltd
sub
jl
xlat
hlt
filds
and
fwait
lret
lock
rcll
pusha
pop
ficompl
jnp
lahf
pushf
sbb
mov
imul
mov
divb
push
mov
in
xor
pop
mov
adc
sub
negb
inc
aad
adc
adc
bound
lock
mov
xchg
bound
aam
mov
cmp
jecxz
in
shlb
ja
pop
push
fldln2
fldt
pop
mov
jg
xor
adc
pop
sti
xorb
and
clc
inc
das
fsubrl
repnz
lcall
aas
repz
dec
repnz
jg
inc
jp
addps
mov
fidivl
add
lods
xchg
cmp
cmp
out
inc
push
jp
mov
mov
inc
inc
gs
cs
ja
xor
jmp
rcrb
dec
push
sahf
repnz
lcall
xchg
test
dec
dec
pop
cltd
inc
fcompl
fdivrp
js
lea
ja
xchg
push
subb
aas
rolb
rcrl
call
push
xchg
test
jle
push
sbb
or
shlb
repz
cltd
cmp
adc
mov
mov
mov
cs
mov
dec
loope
cwtl
or
xor
in
or
sub
jge,pn
mov
icebp
mov
jmp
cmp
test
fldl
and
adc
aad
test
sbb
pop
loopne
mov
jb
lods
mov
movsl
or
movsb
cmp
stos
rolb
lret
mov
sub
dec
js
test
popa
iret
fwait
or
inc
les
xchg
cmp
das
dec
stos
dec
add
mov
mov
mov
sub
xchg
pushf
cwtl
scas
loopne
sub
inc
mov
cmc
dec
push
push
xor
hlt
int
and
leave
shr
aam
sub
fdecstp
daa
push
mov
addr16
push
add
fldcw
push
fistl
sahf
push
aad
int
rorl
push
scas
mov
aad
jp
bound
pop
mov
out
mov
or
cmpsb
cmpsl
scas
inc
outsl
sub
out
shlb
lret
shll
ficoms
cmp
aam
dec
testb
scas
inc
adc
add
insl
movsl
outsb
into
cwtl
or
inc
jbe,pt
dec
push
sarl
rcr
sti
inc
or
imul
push
loope
subb
mov
call
stos
dec
out
ss
jmp
or
ja
cmp
lock
cmp
or
cmp
repz
lcall
mov
stc
mov
out
enter
out
repz
or
push
pop
scas
pushl
mov
pusha
call
push
mov
cli
pop
notl
ljmp
out
xor
dec
lods
out
inc
push
xor
lock
mov
sub
sub
outsl
out
inc
scas
repz
test
cmp
mov
mov
sbb
fdivrs
sub
jle
ja
xchg
cmp
mov
mov
or
cwtl
sbb
pushf
inc
cli
jbe
xor
nop
sub
sbb
idiv
mov
cmpsb
push
mov
dec
sbb
fsubrs
jno
std
xor
out
lea
sti
insl
test
jns
push
mov
add
jg,pn
xor
mov
jl
je
call
popf
cmp
pop
es
inc
push
mov
sbb
aas
std
ret
in
pop
mov
mov
and
movsl
out
lcall
cli
cmp
and
cwtl
lcall
cltd
adc
jae
testb
scas
xchg
jns
or
js
fwait
lahf
les
mov
dec
lock
mov
out
dec
ja
jecxz
xlat
or
cmp
icebp
sbbl
mov
dec
xchg
shl
stos
ljmp
mov
jg
aad
push
add
iret
push
test
in
add
xchg
mov
repnz
inc
dec
pusha
sti
outsl
sti
aaa
xchg
push
cmc
icebp
iret
mov
mov
les
inc
fldt
subb
addb
lahf
pop
mov
xchg
loope
in
daa
push
push
cmc
inc
stos
push
sarl
mov
add
dec
add
push
addl
icebp
xchg
sub
popf
pusha
jl
into
or
add
sub
ljmp
cwtl
daa
inc
fwait
xor
ret
clc
pushf
sub
dec
rcrl
cmp
mov
pop
inc
into
cmp
sub
test
sbb
dec
xchg
sub
das
out
mov
movsb
flds
add
pop
sti
loopne
roll
popa
mov
sub
jg
xchg
lret
pusha
arpl
or
xchg
inc
adc
xchg
mov
jge
iret
or
sahf
or
mov
lds
inc
xchg
js
sub
lcall
aaa
lret
fsts
inc
xchg
and
fdivrs
and
xlat
mov
mov
int
dec
js
icebp
or
std
pop
push
sub
inc
sub
enter
pushf
iret
xor
and
movsl
clc
repnz
jecxz
sbb
dec
inc
sarl
stos
dec
iret
mov
je
pop
mov
jo
pusha
xchg
ja
and
adc
or
repz
and
jg
stos
std
pop
and
inc
push
test
inc
mov
xchg
out
imul
dec
iret
mov
cmp
sbb
es
clc
jg
fimull
pop
dec
test
outsb
icebp
ficoms
shlb
cld
lret
testb
fcoml
mov
call
push
dec
rolb
leave
push
pop
mov
stos
int
dec
mov
loope
adc
sbb
xchg
mov
push
push
sbbl
dec
dec
je
and
mov
int
movsl
cwtl
in
xchg
aam
test
xlat
call
pop
add
push
sbb
xchg
call
jg
repz
lret
sbbl
mov
pop
fimull
sbb
test
iret
mov
push
cmp
dec
inc
test
hlt
aas
mov
mov
mov
mov
ds
pop
inc
or
je
lahf
mov
shrb
outsb
dec
cwtl
enter
xor
fildll
push
jae
cmp
adc
addl
cs
mov
add
movsl
lret
add
aam
mov
imul
or
cli
jne
ror
icebp
hlt
mov
inc
adc
xchg
add
cli
out
xchg
jne
lods
jns
cmp
orl
push
ror
addr16
adc
push
push
mov
sbb
xor
mov
mov
popf
jp
pop
pop
popa
jl
pop
pushl
in
push
adc
pop
aaa
fidivrs
mov
ss
addl
fwait
imul
jmp
cmpsl
incl
in
pushf
mov
mov
lds
lock
pushf
scas
fstl
add
add
mov
nop
fs
or
xchg
enterw
or
fmulp
xchg
cmp
dec
jp
test
fisubs
shlb
mov
ret
push
jecxz
gs
addr16
cmp
fstp
lcall
mov
cs
jae
mov
bound
jg
dec
and
loopne
xor
jne
add
ret
pusha
sbb
data16
jae
push
dec
xor
fnstcw
xor
fwait
sbb
xchg
cmp
cmp
mov
fildll
push
cmp
lock
movsb
mov
mov
xchg
push
mov
push
in
fnstenv
loop
outsb
jle
xchg
cmp
into
xor
loop
push
pop
insl
sub
ror
pop
in
push
out
xchg
mov
cmc
in
sti
mov
int
clc
xchg
cld
xor
sbb
sbb
cmp
shlb
in
js
inc
cltd
mov
nop
fildll
cmp
mov
cwtl
push
jnp
mov
pop
popa
sub
push
dec
jecxz
mov
and
pop
pop
jp
popf
push
fs
sub
xor
stos
fwait
pop
mov
add
inc
xor
std
cmp
cltd
mov
sbb
shll
int
cmp
icebp
xchg
inc
data16
popa
pop
lock
pop
add
insb
mov
push
scas
adc
movsl
icebp
mov
push
test
jecxz
pop
jae
fldt
or
adc
xchg
jl
sbb
pop
or
inc
and
mov
pop
add
rcl
movsb
and
iret
jnp
cmp
mov
std
aad
push
ret
xor
cmp
lret
sbb
test
push
push
jne
data16
adcl
andl
inc
out
daa
popa
enter
lds
int
ficoml
andb
sub
sub
cmp
jle
sub
ja
fstps
into
pop
enter
jns
xchg
stos
adc
je
cmp
sbb
adcb
xchg
movsl
xchg
add
sbb
jnp
fidivrl
stos
lock
mov
cli
push
jns
pop
xchg
or
adc
cmpsb
es
xor
out
lret
shr
clc
icebp
cmp
and
push
jb
divb
pop
mov
xchg
add
into
or
xor
hlt
enter
scas
pop
xchg
pop
jle
mov
xor
loop
mov
pushf
xchg
mov
popf
adc
lods
ret
jb
and
gs
cmp
imul
cltd
lahf
jb
stc
lods
mul
je
dec
sub
sbb
cmp
lcall
mov
xor
pop
js
push
sbb
mov
dec
das
daa
aaa
cs
xor
imul
jns
fdivrl
out
gs
pushf
xor
test
pop
push
cmp
imul
outsw
pusha
mov
jae
pushf
repz
push
dec
popf
xchg
pop
in
fidivrs
loopne
jne
push
rolb
mov
push
jl
mov
push
sub
in
cmovge
mov
and
sub
sbb
mov
dec
add
ja
fisttpl
adc
les
ds
inc
push
insl
xor
dec
lret
std
cmp
fldcw
insb
inc
lods
negb
mov
mov
shl
mov
mov
popl
lds
test
fisubl
ja
enter
mov
aaa
out
rclb
mov
rol
insb
scas
repnz
pop
or
or
and
cmpsb
les
imul
push
gs
jp
and
adc
fstps
pop
movsl
mov
iret
cmc
mov
shlb
int3
inc
inc
test
punpcklwd
lods
jg
mov
push
les
add
nop
in
jg
inc
or
orb
mov
sbb
xchg
dec
and
push
push
enter
lret
mov
dec
mov
jno
and
mov
div
fadds
add
out
mov
shrl
mov
mov
cmp
ss
xchg
movsb
pop
adc
push
adc
jnp
mov
pop
dec
out
fs
fdivs
or
stos
mov
aam
ret
adc
jmp
fcoml
sub
fwait
test
xchg
outsb
imul
test
add
shrb
aaa
mov
cmp
xchg
mov
out
xchg
dec
shlb
pop
imul
cmp
ja
cmp
clc
mov
jae
jp
out
jge
test
pop
test
test
lods
incb
lods
sub
sub
inc
ljmp
jmp
xor
add
and
iret
loopne
cmp
fildl
clc
int3
jmp
lret
inc
loope
cmp
xchg
push
ficompl
out
decl
inc
cmpsl
in
lods
add
mov
out
mov
outsb
rcrb
pop
repz
cmp
fsubrl
or
iret
imul
xchg
push
fwait
inc
scas
jne
xchg
enter
xor
rorb
js
or
mov
fidivl
std
xlat
inc
inc
sahf
jae,pn
push
xchg
pop
outsl
cmp
push
or
mov
cmp
dec
and
imul
push
sub
imul
or
jl
jnp
xchg
xchg
pop
or
or
adc
scas
sub
pusha
rolb
aam
sbb
les
adc
sbb
and
sub
fisubs
daa
cli
mov
jne
push
mov
roll
out
mov
cld
xchg
jmp
and
mov
cmp
in
in
fwait
test
lahf
jae
xchg
pop
cmp
add
je
mov
ss
jg
jne
sub
in
int
inc
mov
inc
sahf
pop
rolb
mov
dec
mov
in
cmp
movsb
call
xor
inc
inc
mov
test
mov
xorl
arpl
outsb
jge
pusha
mov
repz
pop
imul
pop
xor
roll
inc
gs
sub
gs
movsb
mov
pop
jecxz
shlb
xchg
push
adc
fyl2xp1
sbb
sbb
fsubrs
mov
mov
aam
std
inc
jns
push
ja
fldl
mov
rclb
push
adc
scas
mov
push
ss
cmp
aad
jns
fistpl
adc
mov
xchg
mov
xchg
pop
xor
inc
arpl
push
das
adc
lahf
flds
sub
xchg
mov
shll
stos
add
rcrb
push
cmp
out
push
sbbb
push
pop
pop
xor
mov
lret
or
jle
mov
lea
dec
inc
out
cmpsb
fdivs
mov
add
std
pop
xlat
adc
xchg
andb
fstl
dec
inc
js
lahf
ss
leave
scas
test
repz
es
dec
stos
fbstp
sub
cltd
sub
daa
add
or
mov
cmp
in
movsl
mov
out
sbb
stos
fistpl
and
cmp
and
sub
lret
cmpl
jbe
int
cmp
rclb
push
shll
push
dec
xor
pop
roll
pop
jbe
adc
scas
xor
dec
xor
in
sub
add
lea
das
inc
mov
shll
bound
fwait
arpl
call
enter
jns
lret
sub
add
add
push
add
pop
lods
test
push
push
xor
mov
bound
add
enter
hlt
xor
jmp
fidivs
popf
sbb
mov
stos
mov
cmc
jo
dec
addl
xchg
sub
js
cs
dec
test
repnz
out
xor
mov
mov
add
mov
cs
imul
jp
pop
in
mov
mov
pop
jne
bound
popf
es
mov
or
pcmpeqb
mov
dec
shl
popf
mov
sub
lock
ret
dec
sub
mov
cli
sbb
mov
mov
xchg
xlat
push
leave
mov
push
call
or
pop
mov
or
leave
cmp
sbb
or
loopne
sub
and
test
jp
lods
out
imul
or
shlb
pop
pusha
lods
dec
pop
jae
push
enter
pushf
cmp
push
pushf
popa
inc
test
stos
jb
aam
lret
push
fidivs
inc
aad
xor
xlat
arpl
out
sti
cmc
inc
fstps
adcl
cmpsl
mov
xchg
imul
mov
sub
pop
out
push
in
pop
sub
jl
xor
adc
adc
fcompl
repz
lcall
xchg
jbe
loop
jbe
pop
in
insb
add
mov
inc
rol
lds
push
pop
subl
fldt
xor
popf
jl
jg
lret
inc
popa
mov
cs
mov
xlat
mov
mov
push
clc
or
pop
sbb
or
jb
mov
add
xor
movsl
fidivs
fdivl
clc
imul
pop
movsb
fwait
jl
mov
sub
andl
dec
mulb
sub
adc
inc
cmp
cmp
orb
xchg
rolb
sub
addb
xchg
mov
cmpsb
and
push
lahf
push
orb
push
mov
mov
inc
inc
add
sub
enter
out
imul
push
push
imul
mov
xchg
aam
mov
jl
mov
mov
out
outsl
push
xor
push
fstpl
add
addr16
sub
repnz
rcrb
es
leave
insl
push
mov
jno
mov
sbb
dec
cmp
fcmovnb
mov
sbb
push
push
and
cli
int3
adc
xor
add
xchg
cmp
sub
adc
xchg
xchg
pop
push
daa
cmp
push
push
call
vmaxsd
notb
jmp
cmovne
iret
shl
icebp
repnz
sti
xchg
shll
repnz
rcr
adc
lods
cli
cmp
inc
test
nop
insb
sub
xlat
sub
jnp
inc
pop
aaa
sahf
scas
fidivs
push
push
repnz
xorb
js
xchg
jl
lahf
jne
das
out
cmp
jo
cld
into
cmp
jge
push
add
pop
mov
movsl
jmp
xchg
movsb
sbb
mov
dec
pop
and
cltd
push
addr16
ja
ror
dec
inc
mov
cmp
inc
das
ror
ljmp
ret
shrb
mov
mov
mov
into
push
out
xchg
inc
and
sub
aam
pop
fisubrs
inc
fsubl
lret
adc
mov
dec
fsubr
push
jmp
or
aad
ret
fiadds
cmovl
mov
xlat
jbe
jg
out
gs
das
adcb
ljmp
push
jmp
out
or
add
ror
insb
daa
cmpsb
mov
jnp
xor
cmp
inc
inc
mov
xchg
xor
cmp
jecxz
aam
jno
xor
call
sbb
fs
leave
xor
lret
icebp
daa
pop
lret
fstps
push
adc
push
and
stos
loop
arpl
sub
lea
int
mov
cmp
add
or
push
pop
jg
andl
mov
and
lcall
fstl
push
mov
push
stos
in
or
mov
fildll
mov
add
bnd
push
pop
mov
les
jmp
cmpb
xor
pop
aam
dec
stos
or
jg
stc
push
inc
jae
mov
xchg
lea
arpl
int
in
in
inc
or
push
mov
stos
loopne
ret
std
pop
pop
popa
mov
imul
mov
popa
jecxz
jo
xchg
push
push
xchg
ds
ds
sbb
mov
xchg
xchg
rcrl
push
pop
add
mov
int
stos
mov
fstps
in
dec
pusha
addb
fimuls
push
std
sbb
sbb
sarb
push
dec
push
shlb
push
das
ss
in
sti
roll
inc
mov
sbb
cld
loopne
sahf
pop
lahf
mov
jmp
inc
addr16
vorps
inc
leave
stos
leave
mov
or
mov
push
int3
and
stc
and
daa
pop
and
ret
adc
int3
test
adc
fnop
or
push
xchg
sti
pop
jae
ret
jo
push
lods
xchg
mov
add
pop
test
sbb
dec
lret
or
jg
add
pusha
or
jmp
pop
mov
add
jae
adc
cmp
pop
daa
and
inc
mov
jb
cmc
pop
aaa
insb
fists
movsl
mov
mov
scas
mul
add
cs
cmp
test
xchg
push
cmp
sti
lds
push
push
push
test
push
and
and
repnz
jns
add
loop
arpl
sub
pop
pushf
xchg
jecxz
mov
fwait
cltd
out
pusha
cmpsl
notb
jmp
mov
cmc
sarl
xchg
fmull
pop
inc
imul
xchg
or
nop
push
cmp
sub
lcall
jne
xor
push
popa
scas
push
push
jge
cmp
cmp
js
or
out
and
xchg
xchg
lret
xlat
repnz
stos
mov
cmp
fsubp
jne
dec
in
inc
push
and
cltd
in
cmp
sub
iret
inc
das
ja
jecxz
sbb
push
dec
mov
xchg
mov
or
pop
insb
outsb
mov
aas
inc
dec
add
mov
movb
jl
mov
cwtl
scas
sti
xchg
xor
mov
shl
cmpsb
fsubl
cmp
out
addb
push
mov
and
call
testl
cmpsb
imul
in
andb
clc
mov
out
add
mov
imul
and
icebp
xchg
cmp
imul
fwait
and
test
icebp
mov
jmp
ror
cmp
sahf
scas
jne
aas
scas
js
xor
aam
jge
out
test
gs
mov
jb
inc
jnp
or
mov
movsb
mulb
test
cmc
inc
cs
cmpsb
cmp
sub
daa
sbb
mov
nop
add
sub
das
popa
movsb
outsl
xchg
repz
jl
in
in
and
jl
outsl
jb
push
push
jle
push
clc
jl
mov
cmp
dec
push
add
idivl
bound
fs
sub
pop
repz
jns
xchg
js
mov
sahf
iret
cs
gs
in
shrl
sbb
jns
mov
or
xor
jg
fldl2e
dec
xchg
adc
dec
dec
fdivs
jne
add
pushf
push
cmpsl
sbb
jnp
int
call
rcrl
add
jecxz
cs
mov
scas
bound
addr16
dec
jle
scas
jl
lcall
fisttpl
nop
sbb
cmc
pop
iret
loop
je
aaa
mov
push
mov
adc
lcall
push
std
jnp
push
fistpl
mov
filds
lods
hlt
cld
dec
xchg
sti
add
pop
popa
cmpsl
adc
inc
pop
add
rol
and
loop
dec
imul
jmp
dec
std
sub
xchg
rcr
adc
xchg
add
repz
adc
pop
cmpsl
nop
pop
mov
push
push
pop
adc
push
pop
mov
jae
outsb
dec
jl
gs
sub
pusha
xchg
or
cmovl
stos
fsubs
ja
fisubrl
unpcklps
pop
in
cs
add
xor
jg
enter
aaa
cmpsl
movsb
xchg
data16
sbb
fldenv
or
aaa
fmuls
cmp
adc
jg
cs
push
das
add
insb
pop
or
sahf
xchg
add
mov
icebp
mov
xlat
leave
in
test
call
out
arpl
push
adcb
add
sbb
clc
mov
xor
std
loop
mov
dec
ds
out
push
js
xchg
fidivl
dec
fistps
or
mov
or
cmpsl
bound
jmp
mov
pop
ss
hlt
sub
sub
add
out
test
bound
ds
and
mov
iret
push
jecxz
stc
testb
ret
pushf
insb
cmpb
xor
xor
cmp
jno
into
push
fistl
xchg
sub
xchg
adc
enter
mov
and
ret
fwait
popa
insb
pop
sbb
mov
aas
push
push
mov
mov
sub
mov
lret
sarl
loope
xor
or
lods
pop
inc
xchg
cmc
push
add
out
testb
bound
jns
into
inc
mov
jmp
add
icebp
enter
addr16
inc
cmpsl
mov
aad
fildl
stos
pop
ljmp
popf
and
cmp
cmpsl
ljmp
into
xchg
mov
dec
xchg
inc
jmp
xor
insl
cmp
xor
jno
adc
sti
jo
imull
shll
ret
sub
dec
adc
test
jge
xchg
stc
ffree
lcall
jns
jae
jge
mov
fcomi
sbb
jbe
xchg
inc
xchg
mov
popa
mull
int3
jne
xor
bound
movb
pushf
sbb
and
faddp
adc
out
lahf
add
add
ja
fistl
mov
gs
loopne
ss
les
jb
xor
test
arpl
mov
das
push
sbb
add
adc
iret
inc
adc
sbb
movsl
cwtl
sbb
stos
insb
xor
jecxz
mov
out
add
sbb
jmp
add
pop
and
pop
mov
adc
sbb
jo
fcomps
pop
lahf
into
add
push
stos
movsb
lods
push
inc
loop
dec
jnp
pop
std
cmp
test
inc
orb
add
adcl
add
clc
leave
int3
cmpsl
sub
popf
pop
and
jo
xor
jecxz
push
stc
inc
push
jge
pop
pusha
cmp
lock
push
rcll
bound
sti
pop
outsb
xor
jne
inc
test
xchg
and
in
fistl
outsl
mov
in
int
das
mov
pop
stc
leave
sub
aam
int3
add
jne
mov
gs
mov
fucom
adc
dec
cli
das
pushf
cmovno
ja
mov
lahf
mov
add
out
bound
adc
shr
jns
test
cmp
shll
jno
aad
push
notb
dec
mov
mov
fildll
or
cmp
jne
pop
insl
sbb
subl
mov
je
mov
xchg
fwait
jbe
or
inc
lock
bound
inc
sbb
mov
adc
cmc
jp
jg
scas
in
mov
cmp
ret
fdivl
add
out
jmp
mov
int
mov
xchg
xchg
xchg
das
xchg
and
into
fcompl
jns
dec
push
sbb
cmc
mov
inc
movsb
sbb
dec
clc
dec
dec
jno
test
imul
push
dec
es
jge
mov
out
jb
decb
js
add
sub
add
inc
lds
out
mov
push
fnstcw
gs
cli
jbe
mov
mov
and
or
mov
mov
ficompl
pop
lods
adcl
add
aaa
pop
adcb
das
orl
filds
scas
int3
enter
js
mov
adc
or
jmp
adc
stos
mov
add
sub
pusha
or
pop
sbbl
xor
jecxz
imul
sarl
stc
into
in
push
cmovg
jno
or
sbb
mov
aas
dec
shlb
mov
adc
fnsave
xor
sbb
shrl
test
into
or
push
aas
bound
gs
push
sbb
jmp
adc
mov
gs
mov
inc
cltd
sbb
shlb
mov
out
pop
push
mov
push
add
pop
and
mov
jmp
lcall
test
and
xchg
xor
stc
and
daa
fimull
and
add
jne
pushf
cmc
fidivrs
xchg
test
push
dec
rorb
and
cs
or
out
xor
lds
repz
out
sub
div
cltd
mov
fistpll
testl
mov
jno
ret
and
loope
add
push
or
xor
jnp
pushf
es
ds
adc
xchg
aad
jmp
sbb
pop
mov
sub
pop
aas
scas
aam
xchg
sbb
mov
cmp
into
or
pop
inc
sbb
movl
mov
movsb
cld
push
das
ja
arpl
mov
gs
pop
in
nop
lock
push
aaa
in
or
mov
stos
cltd
sbb
jb
lods
and
out
xchg
dec
mov
sti
xchg
rolb
mov
adc
inc
idivl
jne
jecxz
aad
and
push
imul
mov
adc
fdivs
daa
xor
mov
xor
sub
jo
icebp
xchg
xor
sbb
sbb
pusha
icebp
gs
jmp
lds
dec
pushf
pop
sbb
push
cmpsb
jecxz
arpl
push
sub
mov
cli
idivl
xor
mov
lods
out
mov
iret
dec
test
clc
sbb
ljmp
ja
lock
mov
dec
rcrl
push
pop
or
adc
imul
stos
repnz
lahf
into
into
push
fwait
xor
int3
dec
xor
cs
jb
data16
xchg
dec
sbb
dec
or
std
test
sub
aad
loope
cmp
cmpsb
cmpsb
aam
addr16
sbb
es
jb
jge
in
add
sub
pusha
rcrb
pop
cld
pop
sbb
jge
sbb
pop
cwtl
stc
ljmp
xchg
jmp
cmp
imul
cmpsb
sbb
xor
and
ficompl
sub
pop
push
sbb
aam
popf
stc
pop
cmp
out
cmp
inc
inc
in
add
dec
sbb
cmp
iret
vandnps
loope
cltd
jecxz
dec
out
cmpsl
pop
mov
in
fadd
add
mov
sub
add
mov
inc
test
xor
and
and
jne
inc
aaa
pmullw
ljmp
ds
popa
sbb
clc
inc
sub
gs
mov
imul
xor
pusha
mov
add
in
adcl
cmc
mov
loope
push
push
dec
push
fisttpll
mov
cmp
mov
push
cmp
outsl
imul
xchg
jae
daa
ljmp
in
int3
lock
test
ret
cmpsl
sub
leave
push
dec
mov
scas
xchg
aam
cs
push
jo
xchg
push
mov
mov
pop
aam
push
and
rcl
jl
xchg
mov
mov
adc
ret
lds
xor
push
sbb
fstl
push
xlat
fldl
pop
in
cs
fisttps
push
adc
xor
xchg
xor
cmc
scas
jl
push
mov
ret
xchg
xchg
stc
xchg
aaa
movsl
inc
cmp
scas
cld
sti
enter
les
sub
adc
mov
mov
push
ficomps
push
rcl
pop
pop
lret
mov
sti
xor
lds
lret
jg
outsb
pop
jae
data16
int
flds
out
pop
sti
in
jae
inc
push
fs
out
aad
sub
test
jmp
or
pusha
movsl
mov
popf
mov
imul
mov
xchg
ljmp
cmp
sbb
aam
jbe
inc
iret
and
cmovns
cs
xchg
out
jge
cli
int3
lcall
mov
mov
les
pop
and
xchg
jbe
movsl
test
mov
and
push
push
andl
lcall
iret
scas
xor
and
pop
and
imul
jmp
cmpsl
loop
rolb
mov
popf
adc
call
cmp
mov
mov
or
lret
cli
out
mull
js
ds
ret
mov
iret
mov
lods
adc
push
out
inc
or
test
mov
xchg
mov
stc
push
pop
pop
mov
mov
insb
imul
test
fndisi(8087
in
in
out
loopne
or
lock
sbb
out
inc
xor
xor
and
push
sbb
fldl
icebp
pop
es
in
ja
inc
push
std
call
aas
call
jge
imul
or
hlt
ffreep
insb
pop
mov
in
xchg
lcall
ss
in
ss
rolb
jae
mov
mov
cwtl
sti
dec
inc
shrl
test
movsl
mov
ljmp
cmpl
out
mov
fldl
repnz
cli
xchg
push
add
sbb
out
push
xchg
pushf
push
cwtl
out
xor
inc
xor
push
and
add
or
stos
push
aaa
jno
sbb
cmp
ja
leave
adc
and
js
push
push
xchg
fsubl
fstps
sub
pop
inc
jbe
shl
inc
xor
sbb
imul
jbe
cmp
inc
adc
cwtl
pop
sub
add
lahf
cld
sbb
movsb
out
loop
cmp
movsl
dec
xchg
arpl
rclb
mov
mov
and
or
icebp
shll
iret
js
repz
lret
cmp
into
mov
sbb
or
pop
jne
mov
mov
orl
cli
mov
or
inc
lret
pop
ja
cmp
loop
mov
add
cmc
mov
rcll
gs
int3
dec
gs
es
sbbb
sbb
and
mov
enter
test
lret
dec
jnp
int
xchg
inc
ja
prefetch
or
sub
jle
inc
sbb
push
adc
push
sbb
repz
add
add
inc
fwait
add
jp
movsb
push
aaa
xchg
cmp
cmp
je
inc
push
and
jo
jg
xchg
jmp
lods
xchg
pop
sbb
add
inc
repnz
int3
in
cld
ret
repz
int3
jo
aad
mov
jno
sahf
in
xchg
xchg
mov
mov
test
shlb
xor
das
xchg
pop
push
lods
mov
and
xchg
stos
sbb
dec
mov
pusha
cmp
pop
push
push
in
fstpl
stc
fsub
sarl
or
xor
addb
pop
pop
add
fs
push
daa
push
shl
mov
jae
sbbb
fisubrs
dec
sti
rorb
roll
jnp
loope
push
mov
pop
sbb
ljmp
loop
jg
jo
xchg
sub
cmp
lcall
pop
popa
repnz
mov
aam
xchg
fimuls
cmp
mov
insb
sahf
push
movsb
mov
mov
xor
mov
test
dec
mov
ret
sub
mov
pop
mov
dec
mov
gs
jne
add
iret
in
inc
jl
xchg
lods
mov
cltd
sbb
fstpl
and
xorb
mov
jae
jae
iret
cmp
lods
mov
popa
and
xchg
xchg
leave
mov
sub
clc
ret
push
in
fs
xchg
shll
jg,pn
mov
cwtl
or
fcmovnbe
mul
mov
fstpl
lahf
cwtl
idivb
subl
add
dec
sbb
mov
insl
adc
adc
pop
popf
subb
mov
or
pop
xchg
pop
mov
sub
mov
lea
pop
xlat
hlt
out
fidivrl
int
jle
ret
inc
js
cwtl
stos
jg
inc
fwait
aaa
les
jge
push
jmp
cmp
std
dec
jbe
adc
and
fimuls
cmp
mov
and
iret
xchg
and
hlt
xchg
mov
push
into
sbb
pmuludq
mov
sarl
ljmp
sub
mov
aas
movsb
and
lods
fwait
lds
test
or
xor
test
mov
insb
push
inc
ror
mov
fsubrp
lcall
data16
aaa
arpl
setnp
add
loopne
sbb
syscall
jnp
das
cli
and
hlt
lods
pushf
cmc
test
pop
jle
push
mov
xchg
and
pusha
add
jg
mov
in
outsb
mov
push
push
jne
add
mov
ja
xor
movb
shrb
lahf
lock
cli
decl
dec
or
jp
and
out
mov
fisttpl
mov
stos
mov
leave
add
cmp
sbb
outsb
bound
xor
stos
jmp
inc
mov
and
pop
xchg
mov
xchg
mov
notb
arpl
adc
leave
push
add
lcall
jecxz
popa
mov
push
jle
push
outsb
and
jecxz
jns
jno
push
mov
mov
xchg
inc
cmp
pop
insb
adc
js
cmp
mov
lods
pop
jbe
and
pop
mov
es
jp
pop
mov
scas
and
inc
or
es
adc
mov
xchg
mov
jne
mov
nop
shll
mov
outsb
inc
inc
dec
inc
xor
lret
push
les
loope
dec
add
fdivrs
loop
inc
filds
out
in
mov
es
or
ds
add
or
scas
adc
imul
aad
pop
pop
stos
inc
mov
mov
mov
cmp
aam
xor
adc
mov
push
inc
add
lods
pop
loope
ficomps
outsb
mov
or
sub
add
lret
das
pop
popa
hlt
andl
xchg
mov
or
stos
sbb
imul
flds
movsl
push
mov
sbb
xchg
es
out
pop
sti
stos
je
ds
mov
sbb
push
xchg
adc
or
sbb
sbb
mov
std
cmp
int
xchg
cwtl
shl
xor
pop
or
xor
xchg
mov
cmp
in
aaa
mov
enter
mov
mov
repz
dec
and
std
fildll
aas
out
adc
movaps
aam
cmp
pop
mov
sub
int
dec
mov
cmp
test
mov
pop
sbbl
je
insb
and
inc
mov
adc
arpl
fnstsw
push
adc
cld
push
ss
cmp
inc
xchg
or
push
clc
das
cmc
js
addps
lret
and
in
and
stc
push
push
mov
sbb
pop
bound
dec
xor
push
xor
xchg
jo
jmp
negb
mov
test
mov
add
mov
mov
mov
clc
icebp
cld
ds
aam
fbld
movsb
xorb
mov
and
sub
call
mov
js
adc
lahf
aaa
cli
mov
popa
xor
addb
loopne
out
inc
lods
cmpsl
sbb
jg
mov
xor
rorb
inc
dec
adc
mov
push
insb
pop
dec
dec
sub
push
add
or
push
out
mov
outsl
inc
shlb
in
cmp
push
xchg
sbb
mov
call
sub
mov
jmp
sbb
inc
push
inc
pop
jns
adc
inc
stc
dec
sub
jno
imul
pop
test
out
into
test
mov
aaa
test
ljmp
cmp
cs
aaa
arpl
fsubp
ljmp
xor
mov
mov
gs
push
dec
das
lret
sti
and
lahf
rorb
sbb
xchg
pop
mov
ss
ljmp
popa
ds
adc
andb
in
clc
rorb
mov
into
xchg
js
push
outsb
and
fdiv
cmp
jb
pusha
dec
push
push
add
pop
mov
lret
test
xor
std
ss
sbb
dec
clc
shrl
push
cld
mov
inc
mov
sbb
mov
or
cli
mov
mov
xorb
aam
inc
mov
pushf
in
or
cmp
out
mov
push
pop
push
push
cmpsb
xchg
cmp
sbb
push
popa
outsb
es
or
and
pop
stc
mov
dec
sbb
cmp
mov
dec
inc
adc
aad
imul
push
xchg
cmp
dec
orl
gs
scas
jno
jne
sub
add
jnp
cli
pusha
inc
push
push
stc
out
subl
mov
and
out
outsl
fisubl
lods
imul
sbb
mov
and
push
es
inc
or
jne
xlat
push
xor
test
mov
or
hlt
insb
roll
mov
stos
insl
mov
push
pop
mov
sub
add
pushf
pushf
mov
adc
push
loopne
inc
outsb
xchg
cmp
jae
push
push
out
push
mov
ss
or
cmp
push
or
mov
cld
pop
and
xchg
mov
sbb
sahf
cli
dec
inc
mov
mov
cld
add
and
dec
adc
sub
xchg
or
inc
out
arpl
mov
xor
inc
shl
clc
sub
test
icebp
xorb
fistpl
bound
clc
jno
mov
aas
cli
cmp
and
sbb
lcall
inc
cs
imul
mov
pop
dec
es
fimull
and
movsl
fwait
mov
out
sbb
fwait
leave
stc
xchg
ret
cmp
int3
lret
and
data16
mov
ss
inc
cltd
outsb
sbb
cmp
dec
cmp
loope
int
push
addr16
ret
lods
divb
icebp
sub
lea
testl
add
pop
cmp
push
lret
lock
mov
adcl
inc
dec
jno
adc
pushf
shlb
cmp
push
and
loopne
lahf
std
jne
xchg
nop
xchg
lahf
pop
fimuls
inc
sbb
and
and
inc
cwtl
lods
mov
out
imul
or
pop
out
iret
jle
and
cmp
pop
pop
and
add
and
inc
pop
mov
lahf
mov
out
js
ljmp
or
or
sbb
add
jp
jl
out
xor
jg
icebp
adcl
xorl
pop
cmpsl
cltd
rol
popl
pop
popf
scas
inc
cmpb
filds
dec
aaa
xor
inc
dec
push
loope
fdiv
xchg
scas
outsl
xor
cmp
divb
push
mov
xchg
cwtl
mov
imul
add
scas
and
jl
std
inc
pop
lds
lea
cli
leave
pop
loop
jb
stos
std
or
pusha
iret
es
iret
scas
inc
mov
adc
add
addl
daa
fs
insb
sarl
roll
xor
xor
dec
mov
xchg
insl
insb
jl
xorl
jle
int
pop
int
dec
pushf
js
std
dec
pop
cmp
fiaddl
cltd
frstor
out
je
xor
mov
add
cmp
stos
addr16
xor
cmpl
cs
add
xlat
mov
sti
int3
sbbl
mov
mov
push
sahf
mov
scas
mov
jo
cmp
int
inc
and
std
mov
popf
push
push
dec
into
sbb
sbb
mov
movsl
sbb
xor
popl
adcl
js
fdiv
insl
xor
and
cltd
jo
dec
xchg
out
cmp
inc
cmpl
pop
stos
jge
pop
pop
ss
pop
shll
mov
inc
mov
call
or
sbb
movups
jg
jo
pop
pop
test
std
cmp
jbe
fwait
cmp
cmp
mov
stc
daa
movsl
jp
push
loopne
outsl
cmp
dec
shrb
cmp
push
and
test
ret
xchg
mov
fcmovnbe
pop
jecxz
lcall
fld
gs
inc
stos
sarl
cmpsl
outsl
pop
sti
cltd
mov
hlt
sub
in
or
push
scas
int3
and
shll
sbb
pusha
xchg
out
push
das
jle
xchg
add
jg
aaa
out
cmp
jno
xor
push
clc
lahf
xchg
or
push
daa
cmp
push
pop
pop
and
lock
lea
mov
outsl
dec
xchg
sbb
mov
inc
mov
cli
lods
loop
jecxz
aaa
outsl
arpl
jns
jl
sbb
hlt
push
dec
mov
stc
xchg
in
cmp
test
or
cmp
xlat
jnp
add
pop
cmp
add
stos
pop
xchg
or
sub
adc
dec
dec
push
inc
mov
push
add
xor
sub
stos
xchg
cmp
hlt
dec
jae
sar
cs
cmp
xor
ret
push
and
lcall
jp
out
sahf
dec
call
push
in
in
cmp
dec
or
test
lds
dec
loopne
dec
inc
inc
inc
and
sbb
fildl
xchg
cmpsb
scas
sahf
mov
jb
inc
cli
add
aas
and
testl
sbb
mov
test
fsub
sbb
xchg
cmp
int3
fimuls
push
sub
in
jge
jg
xor
pop
pop
cli
mov
cwtl
subl
cmp
ss
shll
xchg
push
stos
cmp
xchg
mov
leave
inc
push
sub
mov
cli
into
hlt
push
inc
mov
mov
inc
add
pop
xlat
inc
jg
and
xchg
clc
and
push
sub
test
ret
xchg
adc
add
stos
mov
mov
out
leave
insl
mov
inc
jnp
sub
mov
cld
push
mov
fmul
testb
roll
adc
inc
xor
sub
rclb
add
push
shll
scas
js
lods
add
lods
fwait
or
outsl
clc
daa
inc
and
arpl
jg
cmpsb
mov
push
mov
xor
xchg
mov
jo
xor
sbb
test
inc
pop
pop
movsb
dec
ret
sbb
cmp
cmp
test
mov
je
mov
cld
rclb
xor
push
stos
out
in
out
xchg
inc
push
xchg
aaa
adc
pop
jo
jnp
stc
xor
jmp
into
xchg
jmp
rol
or
dec
test
ljmp
loopne
push
mov
mov
dec
popf
sbb
push
cmp
xchg
xor
cmpsb
int3
sub
pop
out
and
mov
in
orl
xchg
enter
mov
aam
jno
ljmp
sar
hlt
jmp
pop
shrb
or
jno
pushf
mov
sub
jae
imul
push
xchg
push
adc
inc
stc
shll
cli
sbb
sti
sub
mov
gs
cmp
stc
les
push
lods
into
stc
hlt
insw
mov
lret
in
divb
scas
stos
add
lds
hlt
pop
mov
cmpsl
fs
sub
pop
int3
popa
nop
sbb
cmpsb
ss
jp
mov
xchg
xchg
insl
rorl
mov
loop
nop
xor
jl
sub
mov
std
mov
test
cmp
add
cli
add
test
mov
les
pop
mov
pop
into
test
pop
stos
push
xchg
fdivl
dec
imul
jns
dec
and
inc
mov
dec
jae
daa
push
and
xchg
jecxz
das
sbb
inc
imul
xor
iret
cmp
call
rclb
sti
out
ja
jg
sbb
mov
inc
inc
xchg
adcb
inc
sub
stos
data16
popa
ss
mov
arpl
inc
pop
mov
movsl
xor
les
test
mov
sti
dec
call
inc
and
cli
mov
movsb
mov
dec
scas
xor
and
sti
cmp
dec
rcll
je
or
and
xor
es
xchg
cmp
dec
clc
arpl
imul
iret
scas
pop
movsl
lods
aam
sub
lahf
sbb
stos
pop
sub
jle
outsb
int3
xchg
test
addr16
cmpl
push
mov
pop
dec
out
add
mov
cmp
xacquire
cmp
mov
cmp
testl
xchg
nop
mov
shll
popf
enter
sub
mov
pop
lea
inc
cli
lods
daa
mov
stos
fidivs
inc
sbb
loop
data16
ficompl
insb
mov
push
cltd
movq
jge
jnp
loopne
int3
mov
mov
shlb
adc
mov
sbb
das
sbb
insb
jnp
jo
adc
ja
add
pop
cmp
gs
loopne
fisttps
cmc
inc
xor
dec
sarl
das
cmpsb
rcr
jecxz
jae
hlt
xor
mov
clc
inc
test
jbe
xchg
rcr
mov
rclb
xor
cmpsl
mov
sub
jge
mov
adc
gs
adc
inc
sbb
popf
es
xor
push
notb
mov
leave
xchg
adc
inc
xchg
dec
pop
mov
gs
int3
out
in
add
cwtl
mov
aas
fldenv
jno
lods
das
test
mov
inc
daa
push
mov
popf
xchg
inc
cltd
dec
lds
and
call
idivl
test
jno
test
jns
pop
les
int3
inc
pushf
loope
and
mov
lret
fdivrl
cli
push
scas
ret
mov
and
jo
lods
je
jb
cmp
repnz
int
push
pop
hlt
xchg
arpl
cmp
mov
inc
push
add
dec
fisttps
jnp
cmp
fcompl
arpl
jno
mov
add
cwtl
lods
fwait
jnp
in
pop
das
pop
leavew
mov
jg
cmp
testl
xor
sahf
xchg
jg
imul
mov
pop
int
ret
jmp
ficompl
adc
stos
add
lea
mov
push
and
sarb
sbb
adc
push
sub
pop
mov
rorb
sbb
les
and
aam
repz
loop
dec
or
divb
aad
jns
fistpll
ds
xchg
push
and
stos
jmp
lret
xor
xchg
mov
mov
xchg
mov
mov
nop
xlat
mov
lret
pop
mov
sub
insb
std
cmp
mov
int
xchg
es
out
mov
popf
cmp
sbb
cmp
add
in
jae
movsb
sbb
stos
mov
insl
mov
sub
add
lret
mov
fsubrs
cmp
sahf
ljmp
rorb
pusha
popa
fistl
adc
xchg
in
mov
push
loope
sbb
pusha
fcom
movsl
outsb
push
cmp
mov
lea
mov
adc
and
shrd
nop
loop
mov
cmp
ds
lea
jnp
cvttps2pi
sub
lock
lods
inc
or
sarl
push
push
jge
push
movsb
pop
dec
jecxz
rorb
out
iret
jmp
xchg
and
scas
jmp
mov
iret
es
sti
inc
jp
test
mov
xlat
aas
imul
sub
jmp
repnz
ljmp
shlb
cmp
push
push
scas
cmpsl
sbb
and
mov
mov
jmp
pop
jbe
jle
dec
push
mov
ljmp
pop
aad
cmp
in
jbe
stos
repnz
jne
dec
adc
adcl
gs
into
xor
lcall
push
adc
lods
insb
push
cli
xchg
dec
push
cltd
push
push
fsubrl
and
les
fidivrl
pop
jge
dec
stos
jp,pn
mov
push
pop
pop
rcr
fsubr
mov
xor
insb
fistpl
ficoml
and
cmpsl
imul
push
cmp
leave
stc
movsl
out
or
daa
call
ret
pop
scas
push
pop
outsl
ror
mov
sbb
data16
adc
out
xor
adc
nop
sub
cld
in
popf
lods
dec
scas
and
and
xor
push
sub
aad
push
add
int
cwtl
adc
cmpsb
jbe
fisttpll
pushf
jnp
lret
mov
or
pop
gs
xor
sahf
out
out
shlb
stos
out
or
jo
push
pop
xor
push
es
xchg
es
push
cwtl
push
lahf
test
fnstsw
and
sbb
mov
test
push
inc
das
les
push
cli
lea
push
sub
pop
add
jne
jecxz
push
sub
mov
out
pop
std
inc
cs
movsb
loope
jns
ret
mov
out
push
mov
aad
pop
pop
test
push
jl
rcll
ljmp
clc
xor
imul
add
sti
pop
push
mov
les
and
int
mov
popa
bound
ret
iret
rol
adc
int
flds
cwtl
aam
or
bound
adc
pop
rcpps
outsb
mov
in
jns
jae
xor
push
and
jge
aas
lds
out
jno
stc
lret
lcall
test
sahf
cld
int
mov
test
jns
js
dec
gs
xor
sbb
out
cs
xchg
add
js
fldl
mov
mov
mov
stos
fucomip
enter
inc
clc
rorb
cmp
push
pushf
or
dec
adc
lds
or
add
jne
inc
and
sub
mov
scas
xchg
cmovne
adc
mov
jp
mov
adc
xchg
mov
lcall
lcall
imul
arpl
mov
lea
dec
bound
push
inc
xchg
fiaddl
xor
sub
add
xor
add
ss
or
or
push
sbb
dec
nop
subl
es
fnsave
adc
mov
adc
sub
dec
xor
adc
cwtl
aam
loopne
mov
and
pop
out
push
out
je
mov
fmuls
cmp
js
push
mov
push
mov
jae
pop
ja
pushl
jecxz
lods
dec
test
jae
jae
jmp
mov
cmpsl
push
mov
call
loop
mov
inc
mov
icebp
jae
sub
test
into
pop
push
mov
ja
fld
pop
mov
loopne
xor
sub
fistpll
bound
mov
add
inc
mov
jle
loopne
push
jp
adc
xchg
cld
xchg
sbb
jg
push
stos
divb
scas
push
push
mov
loop
stc
pushf
pop
dec
movsb
out
adc
cmc
sub
add
adc
jbe
or
imul
push
mov
bound
xrelease
inc
insl
call
addr16
sub
ljmp
mov
sub
data16
sub
mov
aas
pop
xor
int3
icebp
push
sub
cmpl
loope
mov
aad
fistpll
sti
inc
adc
iret
inc
add
xchg
fsub
loopne
or
inc
sarb
nop
and
inc
testb
int3
daa
rorl
fnstcw
sub
std
adc
xor
out
scas
pop
enter
sbb
in
mov
outsl
stc
or
ret
imull
dec
popa
sub
xor
fnstenv
daa
jno
add
jg
sub
pop
lods
mov
popa
lods
or
lret
mov
fucom
scas
jo
icebp
stc
movsl
mov
pop
adc
jne
jecxz
jae
sub
popa
and
sub
add
test
lahf
movsb
xchg
sbb
pop
jne
pop
add
or
mov
sbb
xchg
test
gs
mov
pop
int3
out
jmp
adc
scas
les
sbb
mov
shl
add
dec
fbld
loopne
into
outsb
adcl
aaa
mov
loop
loope
lcall
xor
lcall
mov
pop
rorb
fcompl
sbb
mov
outsl
fs
incl
add
stos
or
mov
mov
insb
mov
das
movsb
sbb
push
push
outsl
jae
and
push
xchg
stos
pop
lret
mov
lret
mov
pop
pop
adc
ja
push
and
mov
push
inc
dec
popf
test
cmpsl
movsb
mov
stos
pop
sub
cmp
cwtl
xor
mov
in
lods
test
in
cli
ret
mov
xchg
arpl
mov
pop
leave
cmpsl
dec
xor
or
dec
clc
xchg
rcll
stos
mov
divl
int
push
or
iret
push
test
pop
into
pop
mov
sbb
push
mov
push
lock
sti
or
fxtract
cs
xor
outsb
mov
inc
pushf
and
jp
pushf
fcmovu
movsl
jnp
add
sub
cli
mov
push
jbe
lods
xor
sub
cli
push
lret
cs
arpl
fwait
subl
fldenv
fimull
mov
ljmp
ss
sbb
je
shll
call
es
xor
or
ja
and
dec
iret
jmp
or
in
jp
pop
jecxz
jbe
movsb
inc
daa
lcall
mov
loopne
fs
out
mov
arpl
sub
xchg
fstpt
and
lcall
xchg
es
lock
cmp
xchg
js
jo
pop
cli
inc
push
loopne
test
loopne
out
mov
cs
inc
cwtl
loop
cmc
aas
push
lods
cld
mov
shl
inc
pop
sub
mov
xor
pop
add
imul
xor
ja
lods
jns
cwtl
sahf
gs
or
jle
imul
mov
dec
std
in
xchg
cmp
ja
jmp
xor
pop
dec
xchg
lret
dec
cmp
js
inc
inc
xchg
mov
cmp
jno
adc
jne
or
add
mov
stc
js
sub
pop
je
sbb
jp
scas
insb
imul
scas
adc
test
clc
jg
cmc
out
data16
ror
mov
in
mov
aas
add
ljmp
push
or
fsubs
sbb
clc
daa
add
fwait
mov
dec
loopne
mov
dec
push
fisubrs
jecxz
out
pop
out
stos
leave
fsubs
jmp
mov
out
arpl
mov
push
ficoms
mov
popf
jle
scas
mov
out
imull
push
xor
mov
dec
inc
push
or
jnp
add
push
cmc
loope
ss
gs
lock
push
push
fstpt
outsb
iret
lret
add
push
ljmp
mov
xor
push
or
into
hlt
sarb
add
es
scas
mov
shlb
lods
movsl
xor
mov
xchg
lds
dec
in
cmp
xor
pop
xor
leave
jecxz
or
das
scas
cld
orb
rorl
sbb
ret
pop
mov
push
mov
add
movsb
fists
adc
mull
addr16
mov
pop
mov
jge
out
test
les
xchg
pop
cltd
inc
rorb
adc
cmp
add
xor
arpl
aam
sub
pusha
cli
repz
ffreep
cmpsb
icebp
jb
rorb
lcall
push
ds
push
jp
outsb
lret
push
adc
xor
aaa
mov
outsl
fsubr
repz
rcr
adc
out
mov
sbb
add
jns
mov
stc
clc
sub
mov
imul
mov
adc
mov
loopne
bound
adc
cmc
enter
or
pop
imul
dec
movsl
jmp
movsb
mov
push
push
das
mov
dec
pop
std
push
pop
lock
mov
mov
ss
scas
pop
sub
add
popf
fistps
sub
clc
cmp
mov
push
dec
nop
and
jmp
xchg
sbb
loope
and
sub
pop
pop
cwtl
lods
add
and
mov
lret
mov
add
in
pop
cmp
int3
sbb
outsl
rorl
or
jmp
sqrtps
push
decb
lcall
das
xlat
dec
pop
je
push
dec
in
mov
mov
sub
lods
jbe
sbb
mov
fisttpll
sbb
rep
cwtl
mov
push
push
lods
mov
xor
sub
ss
or
inc
pop
scas
imul
out
push
cmp
inc
arpl
rorb
sbb
mov
ljmp
inc
inc
jmp
push
add
jl
pop
mov
sti
hlt
ss
or
inc
addl
cwtl
xor
push
inc
aad
ds
push
fisubrs
jp
push
leave
insb
sbb
adc
int3
xchg
or
fwait
pusha
into
push
cmp
out
push
or
or
mov
lret
pop
ja
adc
ret
sbbb
scas
and
pop
nop
pusha
cltd
addr16
push
push
sarb
jb
mov
roll
jecxz
fmull
rcrb
ljmp
dec
mov
inc
push
repnz
ss
mov
push
test
aas
mov
test
xchg
fs
je
adc
jle
iret
dec
push
dec
es
jecxz
ja
mov
andl
inc
adc
xor
push
subb
daa
aad
pop
fmulp
jne
lods
cmpsb
icebp
xor
rolb
out
mov
int3
jg
push
outsl
fwait
cmpsb
sub
inc
in
lret
nop
rolb
mov
loope
fidivl
nop
les
push
mov
lret
out
mov
rol
bound
xor
nop
sub
cmp
insl
pop
sbb
xchg
pop
pop
imul
sub
sbb
xchg
sahf
xor
and
dec
fs
fs
jmp
fldt
ljmp
call
xchg
out
cs
mov
mov
addb
jo
inc
xchg
or
cmp
sbb
and
test
xor
mov
pop
xchg
xlat
xor
int3
leave
out
loopne
or
loope
jp
scas
jae
or
add
scas
mov
rorl
outsl
mov
and
inc
sbb
pop
xchg
lret
popf
insb
fisttps
cmpb
pop
les
mov
in
mov
fnstcw
cmp
mov
lret
cmc
enter
xor
lods
or
push
fists
fstpt
sub
fs
lcall
ljmp
jp
pop
adc
xchg
lret
mov
rolb
gs
lret
les
or
in
imul
mov
mov
loop
lds
loope
sub
inc
test
push
lret
and
insl
and
shll
cmpb
dec
jle
push
gs
js
jge
cmc
aam
sub
nop
or
sbb
xchg
cmp
lret
mov
cltd
sub
or
nop
repz
inc
inc
lcall
bound
rcr
nop
xor
fldenv
xor
jmp
in
bnd
movsl
push
lret
mov
add
js
mov
aaa
add
nop
cld
call
iret
in
sbb
cmp
lods
sbb
or
jle
push
test
jecxz
push
jge
in
or
ret
ds
repz
cmp
push
sarl
cmp
rol
push
mov
push
xor
mov
mov
or
jnp
int
inc
mov
pmulhw
pusha
cmp
cmpsl
bnd
cmp
sub
mov
inc
dec
xchg
loopne
xchg
sysret
lret
ss
cmpsb
cmp
loope
paddsb
push
cli
adc
inc
out
xor
fistpll
aad
push
int
out
jo
inc
jge
bound
xor
and
xchg
outsb
cmpsb
incb
xchg
je
pop
xchg
ret
in
jno
filds
xor
outsb
pusha
lret
shrb
addl
pop
xchg
jb
das
push
xor
movsl
leave
filds
push
xchg
xor
inc
cmp
pop
mul
push
sub
je
push
fwait
fs
fmulp
iret
hlt
mov
das
out
mov
arpl
scas
cmpsl
rol
xchg
inc
outsb
data16
pop
notl
adc
mov
in
dec
sbb
lock
pop
cwtl
mov
nop
sub
cwtl
clc
push
jmp
cld
push
test
push
and
adc
jne
cltd
call
int3
mov
out
js
mov
sub
jge
inc
jbe
rol
daa
mov
mov
cli
pop
rcrl
add
xchg
mov
xor
and
xchg
pop
int3
addl
fadds
jl
xchg
jmp
cli
out
sub
shr
pop
repnz
cld
and
subb
movsb
mov
orl
inc
cmp
pop
addl
aas
pop
add
xchg
sub
fwait
mov
pop
adc
and
imul
aaa
mov
jae
inc
inc
sbb
cmp
fcomi
jbe
and
fldcw
or
cmpb
pop
add
cltd
ss
dec
movsb
jp
pop
pop
stos
adc
or
cmp
insb
or
js
arpl
and
cltd
ret
ss
mov
pop
pushf
sbb
into
sub
lahf
and
loope
in
fmul
daa
push
rolb
jbe
dec
lods
popa
pop
sub
test
mov
jg
mov
in
data16
xor
adc
pop
mov
hlt
aas
or
jle
in
jmp
cmp
lods
loopne
call
adc
mov
add
inc
and
js
inc
cli
inc
mov
cmp
sub
cltd
sbb
and
loop
xchg
aaa
mov
sbb
push
lods
mov
mov
mov
sbb
mov
mov
mov
pop
outsl
xchg
stc
iret
lea
aaa
push
test
mov
repz
sbb
xor
push
lods
popf
popf
pop
pushf
inc
push
xchg
add
addr16
jmp
outsl
jl
and
cmp
imul
adc
dec
in
and
push
loopne
mov
dec
outsl
sub
andnps
mov
stos
fisubrs
xchg
cld
cmp
rorl
in
loope
pushf
xor
imulb
aas
push
loop
mov
lods
pop
aad
ret
mov
orb
call
sub
int
jbe
out
in
and
ficoml
push
mov
roll
mov
cmc
rcrl
cmp
in
push
lods
lds
and
hlt
xchg
inc
push
xor
pop
pop
pop
sbb
inc
push
iret
bound
stos
sahf
sub
movsl
in
push
out
stos
push
hlt
pop
out
cld
mov
mov
cmpsb
je
inc
xchg
orb
bound
test
mov
push
xchg
xorb
shrb
adc
popf
inc
push
leave
fst
jecxz
push
add
push
enter
daa
inc
movsl
jl
xchg
movb
sbb
scas
push
daa
xlat
cmp
and
fisttpl
pusha
and
or
inc
and
jge
xchg
sub
mov
cmp
enter
inc
jge
cmp
fnstcw
mov
dec
sti
fwait
add
dec
xor
mov
cs
sbb
dec
cmp
loop
incb
mov
rorl
or
cmp
mov
xor
add
xor
ss
xor
mulb
ss
lahf
pop
rolb
fldcw
or
sahf
out
sub
in
ja
push
cmp
push
fimull
cwtl
and
aas
test
fisubl
inc
mov
adc
xchg
sbb
loop
mov
adcb
outsb
mul
pop
adc
cmc
les
jle
cltd
out
roll
mov
push
adc
dec
and
out
cmp
scas
push
inc
das
or
jg
sub
or
push
cmp
je,pt
mov
adc
std
inc
insb
pop
data16
in
pusha
lcall
call
inc
inc
loope
hlt
notl
inc
ficoml
push
sti
mov
and
cmp
push
imul
es
into
enter
call
push
jb
nop
add
jns
subb
sub
inc
cltd
push
xchg
std
repz
shlb
enter
jne
lcall
cmp
fistps
inc
bound
js
in
add
and
mov
adc
pushf
sub
and
out
push
cmpsl
mov
inc
pop
push
adc
or
mov
pop
xlat
rol
xor
cmp
push
adc
and
fdivr
or
ret
call
xchg
pop
push
cmp
imul
fstpt
repz
jne
std
jb
insb
repnz
fcoms
pop
fisubrl
enter
scas
rol
dec
and
dec
sbb
adc
mov
cmp
sub
cmp
mov
pop
loope
xchg
pop
cmpsb
xor
lret
das
xor
mov
add
leave
and
fcmovnb
dec
add
and
jle
out
test
stos
cmpsb
cmp
xchg
mov
jg,pn
in
pop
mov
jg
mov
pop
xchg
fs
jo
pop
cmp
adc
mov
mov
mov
ds
out
shlb
adc
sahf
or
mov
adc
lods
ds
out
sub
jnp
outsb
mov
lret
jae
sbbb
xchg
jl
xor
sbb
inc
jae
push
sub
jns
andb
add
inc
les
ds
push
test
sti
scas
jnp
fisttps
aam
adc
ljmp
push
pop
aas
dec
xor
jns
mov
adc
into
insb
and
inc
jg
dec
mov
fdivrl
mov
mov
call
shlb
pusha
movsb
mov
sub
jb
outsl
jge
push
mov
fidivrs
lea
mov
outsl
jp
fs
mov
scas
jge
cwtl
nop
sti
les
mov
and
imul
das
mov
xor
xlat
pushf
xor
mov
adc
jmp
in
fcom
jae
enter
gs
lods
or
mov
les
aam
mov
mov
mov
imul
lods
cmp
cmp
adc
iret
stos
clc
lcall
jo
mov
jne
and
lahf
xchg
sub
icebp
sbb
sbb
sub
aad
jmp
add
pusha
xchg
xchg
stc
xchg
inc
jnp
jne
inc
in
mov
inc
fisubrs
js
es
inc
insb
scas
inc
mov
lods
in
mov
push
cwtl
cmp
aas
cmp
adc
cmp
stc
cmpsb
out
inc
or
aad
jno
lret
mov
add
jle
adc
jnp
jns
cltd
daa
mov
sub
push
cmc
movsl
xor
lods
pop
in
in
orl
push
add
imul
gs
cmp
cmp
std
nop
movsl
loopne
mov
mov
jle
push
jnp
daa
ljmp
scas
mov
push
push
mov
je
filds
inc
or
outsb
mov
dec
jg
inc
inc
fisubs
adc
push
imul
loope
sub
repnz
aam
sbb
jo
cli
dec
cmp
arpl
jae
cmc
pop
adc
sbb
jmp
add
leave
push
int
std
inc
mov
ja
cmp
sbb
or
push
push
jb
insl
push
jo
int
pop
push
xorb
addr16
or
insl
mov
push
stos
xor
mov
jp,pn
push
mov
inc
mov
adc
sub
pushf
fwait
mov
andb
mov
stos
adc
out
or
fsubl
cmp
ds
mov
mov
loop,pt
push
mov
lods
push
jbe
fs
mov
push
ljmp
xchg
mov
xchg
xor
sub
sbb
xchg
stos
repz
mov
sub
sub
cmpsl
mov
test
mov
lock
jo
rcrl
add
mov
lahf
pop
das
sub
fldl
daa
or
xchg
outsb
mov
das
push
cltd
add
test
mov
dec
xchg
adc
sub
ljmp
inc
outsl
popa
push
sub
scas
jns
dec
add
add
jo
inc
cmp
enter
cwtl
out
xchg
mov
test
push
test
sar
xlat
fucompp
pushf
rcrb
mov
sub
shll
mov
inc
and
fdivl
lcall
dec
push
leave
test
mov
pop
ficomps
mov
stc
jo
cmp
or
xchg
pop
jne
js
and
lds
mov
pushf
mov
cwtl
aam
movsl
fildl
cltd
adc
jae
xor
add
sahf
loopne
cmp
cmpsl
mov
outsl
inc
xchg
inc
scas
shl
in
jno,pn
adc
cmp
jge
shl
testb
xor
out
inc
mov
jb
out
repnz
fisubs
inc
shlb
adc
inc
or
and
mov
subl
dec
mov
outsb
sub
pop
movsb
push
std
inc
inc
sbb
popl
sbb
jno
ficompl
fldl
repnz
push
dec
pop
sbbb
xchg
adc
inc
xchg
in
out
aad
lock
mov
imul
or
sbb
pop
ret
sbb
rol
mov
outsl
cmp
fwait
add
adc
dec
and
pushf
imulb
adc
std
or
mov
jecxz
push
js
pop
lahf
push
imul
fnsave
mov
sub
fdivs
and
adc
cmpsb
mov
push
mov
fistpll
cltd
xchg
mov
test
add
xor
cs
lahf
cmpsb
fcomip
popl
dec
imul
sbb
mov
push
xchg
xchg
jnp
cmp
rcr
push
add
stos
std
iret
and
add
addr16
pusha
add
sahf
lock
xor
insb
sti
or
sbb
inc
mov
push
gs
lods
repz
push
rclb
movsb
mov
jmp
out
jb
loop
sub
mov
stos
mov
inc
push
pop
mov
pop
fisttpll
and
sahf
imul
add
xchg
adc
inc
xchg
push
jmp
in
inc
or
jbe
stos
shlb
adc
mov
fnsave
push
outsb
mov
sbb
aad
jbe
lcall
xchg
mov
pop
inc
add
add
inc
insl
xor
dec
testl
sub
pop
lcall
cmc
mov
cmpsl
fwait
sub
add
decb
out
xor
ljmp
push
addr16
jle
insb
neg
mov
xchg
cltd
stos
arpl
cwtl
aad
cmp
mov
sbb
mov
loopne
inc
cs
pushf
jmp
cmp
mov
sbb
inc
rorl
insl
loopne
jp
ja
jg
cli
inc
cmp
and
lcall
dec
mov
adc
mov
xchg
or
repnz
out
popf
sbb
xchg
jnp
jg
inc
daa
mov
fiaddl
das
sbb
dec
and
ja
xor
and
or
movsb
int
ss
sti
xchg
inc
push
fcoml
jb
jbe
cmp
cld
je
fsubrp
lret
test
jbe
popa
imul
call
push
pop
and
popl
fucomi
push
push
push
sub
rcrl
add
pop
lcall
push
xchg
mov
sahf
pop
es
jg
cld
xchg
add
xchg
push
pop
pop
push
cld
scas
jg
rcrb
mov
xchg
push
jecxz
mov
lds
inc
popf
xchg
mov
rclb
dec
jbe
scas
loopne
in
mov
icebp
lods
mov
ror
imul
fcomps
imul
add
insb
cmp
mov
lock
push
adc
lret
cmp
or
aas
cmp
push
loopne
pop
mov
push
dec
cmp
cld
in
lods
inc
in
arpl
pop
mov
sahf
cld
or
adc
or
loope
fisttps
nop
push
mov
in
or
jae
movb
cmc
or
xchg
xchg
call
out
inc
adc
sub
sahf
test
xor
dec
and
aas
dec
loopne
rclb
cwtl
jl
inc
pushf
in
or
shlb
out
cmpsl
popf
push
cs
mov
cmp
ret
icebp
mov
outsl
jne
adc
mov
add
jns
lahf
xchg
repz
dec
ljmp
pop
xchg
sbb
in
xchg
enter
imul
sbb
jns
popa
jge
and
pop
stos
out
imul
cmp
gs
xor
sbb
test
scas
inc
stos
clc
push
fistps
dec
int3
pop
adc
and
mov
pop
xor
or
cmp
xor
in
sub
sub
sahf
and
inc
or
xor
pop
add
push
stos
fsubs
push
stos
mov
pop
push
aad
dec
test
mov
lock
cmp
inc
xchg
jo
mov
push
call
sahf
fwait
xchg
scas
mov
xchg
scas
test
sub
push
jno
and
inc
daa
push
mov
pop
out
add
test
dec
ret
mov
lds
pop
movsb
fs
inc
inc
dec
xor
lcall
rcll
push
call
imul
mov
stos
adcb
cwtl
dec
inc
or
add
and
jp
cmp
xchg
mov
ret
push
aas
test
mov
push
and
ret
daa
or
repnz
mov
inc
int
data16
mov
scas
sbb
cmp
xchg
sbb
pop
mov
push
xchg
stos
dec
je
inc
sub
sti
insb
repnz
push
stos
loopne
in
or
or
dec
and
mov
sar
xchg
pop
clc
and
fdivl
sub
movsb
mov
out
mov
dec
in
inc
outsl
js
testl
iret
test
mov
rcrl
cld
aas
arpl
or
fdivrs
mov
jmp
lret
outsb
fistpll
std
lcall
cmpsb
fidivrs
xchg
adc
leave
pop
cmp
mov
mov
sahf
push
pop
dec
jae
mov
int
dec
pushf
push
mov
sbbb
stc
in
pop
xor
test
mov
call
xor
mov
mov
out
enter
xlat
cmc
pop
dec
mov
repz
test
mov
fcomps
mov
cmpsl
stos
stos
and
insl
divl
jp
push
push
lret
mov
mov
ss
mov
pop
in
clc
sbb
and
adc
inc
sub
xchg
xchg
mov
ss
xor
push
iret
shrb
and
lahf
or
insl
sub
push
in
cmp
mov
xor
inc
in
in
stos
mov
jl
mov
or
js
xor
sub
jae
push
xlat
out
js
les
and
lcall
repnz
jb
fwait
es
out
jge
mov
inc
cli
jae
sub
push
push
negl
int
lcall
roll
mov
mov
sbb
outsb
pop
lret
adcl
mov
inc
and
ret
pusha
jae
adc
jb
ljmp
jmp
mov
lods
shr
jg
and
sarb
push
aam
or
push
popa
mov
mov
std
sub
outsl
xchg
xor
or
enter
pop
outsl
fs
sbb
or
ret
add
jno
adc
pop
mov
or
in
test
outsl
cmp
lcall
cmp
inc
sbb
sub
loop
xor
shl
roll
cmp
sahf
in
call
jo
xchg
cld
dec
pop
push
xchg
xchg
push
jo
enter
cs
xor
xchg
adc
nop
xor
lret
dec
push
mov
inc
dec
and
jl
inc
loope
jbe
aaa
push
xchg
mov
iret
xchg
ja
cwtl
inc
mov
cwtl
imul
dec
xlat
mov
lret
icebp
mov
fistpl
xor
push
roll
dec
push
push
aad
rorb
dec
adc
sub
cmp
fists
xchg
ljmp
sbb
stos
inc
sub
scas
sbbb
lahf
loope
xchg
push
cmp
xchg
je
lods
shrb
dec
test
sub
out
mov
test
addb
ficoms
pop
jnp
sbb
pop
pop
mov
aad
jne
stc
xchg
adc
push
adc
jecxz
inc
mov
dec
fimuls
cli
int3
xor
mov
dec
loopne
in
dec
sarb
cmp
mov
out
popa
jno
dec
cs
idivl
mov
idivb
jmp
sbb
sub
nop
push
xchg
ljmp
xchg
out
add
pop
out
push
je
jne
cmp
add
rcr
mov
lods
dec
xor
jb
scas
or
cli
jmp
inc
ret
popf
arpl
mov
ss
add
stos
fiadds
pop
je
or
inc
and
dec
les
pop
int
dec
mov
mov
cmp
in
pop
adc
rorl
enter
mov
mov
xchg
jle
cmp
adc
into
fwait
cmc
push
cmc
cmp
test
rolb
daa
pop
js
out
test
sbb
jnp
incl
sub
or
aam
jecxz
jnp
inc
cwtl
lods
es
or
and
jne
push
std
mov
jmp
pushl
mov
mov
mov
ja
dec
insl
rcr
pop
popa
mov
xor
mov
xor
pop
inc
lret
rol
jle
inc
addr16
orb
mov
imulb
adc
push
xchg
outsl
fwait
push
inc
and
push
jo
lcall
sub
push
out
adc
out
jle
jne
mov
sbb
adc
mov
loope
insb
repnz
rdmsr
into
jp
lock
out
scas
adc
or
ja
in
out
fdivl
lcall
push
flds
xchg
push
lahf
mov
sbb
pop
xchg
mov
in
pop
repz
xor
mov
int3
xchg
jo
mov
fdivl
stos
and
lods
push
mov
push
gs
xchg
cmp
das
pop
in
cwtl
inc
das
mov
mov
mov
loopne
jmp
push
inc
std
add
fstpl
rep
dec
mov
pop
adc
or
push
int
stos
bound
jnp
arpl
inc
mov
insl
sahf
movsl
cltd
sbb
pavgb
or
shlb
cmp
sahf
or
pushf
mov
xchg
dec
add
mov
fcmovb
je
aas
or
adc
enter
movsl
mov
pop
mov
mov
mov
ds
xor
inc
cmp
push
push
or
mov
cld
pop
sarb
jmp
mov
arpl
aam
stos
movsb
xchg
pop
leave
push
add
test
fmull
push
mov
test
in
and
iret
adc
cmc
jb
repz
inc
mov
fnstcw
sub
pop
outsb
ret
icebp
call
shrl
mov
arpl
test
add
outsb
orl
inc
fwait
jns
in
mov
sahf
push
push
mov
lods
jl
cs
lods
inc
cmp
call
inc
push
push
mov
push
mov
mov
push
enter
ret
or
and
xor
sahf
movsl
insl
fstpt
imul
push
cmp
sub
das
daa
rorb
aas
inc
icebp
pop
mov
xlat
jg
fwait
xchg
lods
enter
pop
aad
mov
inc
insb
inc
or
push
mov
cld
mov
push
xor
lds
jns
faddl
test
sarb
mov
inc
jbe
cmp
jg
mov
push
xlat
mov
or
fisubrs
cli
incb
xor
pushf
fnstenv
mov
rorl
mov
and
ss
lahf
pop
movzwl
mov
scas
lea
sahf
lret
imul
and
sub
jp
cwtl
adc
movsb
scas
subb
movl
into
sti
xchg
ret
idivb
jge
std
sbb
fucomp
icebp
cmp
inc
loope
adc
dec
dec
sub
adc
xchg
and
mov
cmp
pop
stc
repnz
xchg
or
jle
sti
shll
pop
lds
or
xor
mov
popf
and
adc
lods
imul
mov
xchg
add
mov
mov
xchg
ljmp
adc
adc
dec
xchg
fidivrs
push
test
or
or
rcll
insb
add
ds
call
rcr
dec
repz
pop
mov
pop
inc
xor
in
mov
mov
loop
pusha
and
mov
jb
xor
push
mov
pop
mov
decl
movsl
inc
mov
mov
iret
cwtl
mov
xchg
pop
xor
out
sub
push
dec
push
hlt
jmp
mov
inc
xor
gs
add
shlb
inc
jmp
sbb
cltd
dec
pop
outsl
arpl
fistps
xchg
in
mov
insb
sub
test
push
stos
pop
jg
leave
test
fildll
cld
fidivrs
lods
sub
sti
leave
xchg
mov
jbe
push
data16
shrl
pop
xchg
in
leave
bound
pop
cs
sbb
or
bound
imul
jne
ficoms
test
idivb
sahf
mov
jl
fisttpl
inc
jecxz
jmp
rolb
inc
cmc
jns
lcall
insl
pop
jg
push
xor
mov
stos
sub
push
mov
es
fnstsw
test
adc
and
leave
ljmp
or
xchg
leave
and
push
add
aam
shll
js
jmp
push
out
and
mov
xchg
pop
sbbl
enter
mov
inc
mov
sbb
jge
roll
js
mov
out
mov
xor
fdivrp
pop
cli
xchg
inc
inc
in
inc
jp
iret
lret
bound
pop
cmp
jne
cmp
cmp
xor
shrl
and
and
jb
repnz
lds
and
inc
jnp
cs
sti
adc
fsts
or
xlat
xchg
cld
sub
xor
out
in
push
lods
cmpsb
xor
arpl
inc
mov
int3
lahf
adc
hlt
dec
ret
mov
std
cmpsl
aaa
adc
aas
icebp
sub
sti
test
and
shlb
ja
sub
sub
add
xor
dec
cmp
dec
push
ljmp
lret
and
rcr
popf
xor
xchg
outsb
sub
xchg
pop
pop
sti
xchg
sub
dec
push
pop
test
pusha
inc
jl
shll
adc
cmc
jg
jle
mov
dec
xchg
cmp
jo
dec
adc
xchg
push
arpl
insb
cltd
das
and
sbb
inc
imul
pop
pop
xchg
mov
ret
scas
insl
cltd
or
fscale
andl
movsl
pop
pop
bound
dec
adc
sub
lahf
cld
cmpsb
and
into
mov
loop
fsub
stos
lret
andl
mov
mov
sahf
inc
lock
insb
dec
jne
or
xchg
stos
mov
in
mov
push
cmp
dec
xchg
adc
jne
xchg
sbb
call
or
popf
xor
lods
gs
add
fsubl
xor
test
inc
and
rol
ljmp
js
dec
mov
out
and
mov
push
push
rcl
xor
xchg
xchg
rorb
dec
sti
mov
pop
loopne
mov
mov
sub
push
into
xchg
add
inc
sbb
pop
xor
add
cmp
mov
adc
xchg
dec
rolb
add
std
mov
sbb
rolb
movsb
enter
loop
aam
dec
inc
into
inc
test
orb
sbb
jmp
jne
and
inc
inc
xchg
ja
inc
and
fimull
push
lret
push
sarb
jg
push
ffree
jmp
sbb
sahf
or
sub
test
jmp
jo
mov
pusha
orb
mov
movsl
out
cmp
lds
sahf
mov
std
push
scas
cmp
inc
out
inc
sub
inc
loopne
or
lods
outsb
add
insl
int3
or
lahf
sbb
add
inc
in
mov
mov
xchg
or
in
pop
std
out
jp
adc
or
ds
push
adc
mov
sbb
inc
add
dec
adc
jl
pop
dec
mov
fcoms
jne
sti
and
pop
push
mov
mov
mov
cmp
jns
imul
lds
pop
fisubs
fwait
dec
push
push
push
lds
or
xor
inc
call
hlt
sub
sbb
adc
xchg
or
jbe
jg
pop
in
or
outsl
ficoml
mov
jno
jnp
sub
sbb
jle
out
cmp
mov
aaa
daa
sub
inc
or
icebp
inc
push
pop
mov
mov
lods
ret
data16
or
out
dec
add
lcall
sarl
dec
jmp
outsb
out
lock
aas
lahf
repz
jb
cld
mov
push
cmp
cmp
call
movsl
mov
rorb
insb
ret
cmpsl
xor
xchg
cmp
pop
xor
or
adc
inc
mov
xor
enter
std
dec
cs
cmp
jbe
or
jecxz
push
stos
subb
fidivrs
das
inc
pop
dec
xor
loop
sahf
cmp
leave
xor
pop
std
cmp
jnp
push
js
stos
out
and
xor
pop
jp
ljmp
dec
xor
mov
push
fisubrs
jmp
xchg
push
xchg
test
jno
out
cmp
mov
movl
push
repz
movl
outsl
push
jg
and
xchg
xlat
insb
push
aad
out
and
jo
aam
lret
int3
addr16
xchg
mov
and
jbe
icebp
push
shl
mov
shll
scas
sbb
cli
stos
rcl
fucomp
jns
rcll
cmpsb
or
lret
sahf
jns
sbb
xor
mov
mov
popa
mulb
xchg
dec
enter
and
jno
xor
jp
fldcw
mov
xlat
xchg
adc
adc
pop
je
mov
push
scas
enter
out
mov
mov
xchg
idiv
imul
push
fdivs
jg
mov
mov
out
ss
mov
xor
sub
cwtl
clts
cmp
sub
pop
sti
out
cs
xor
sti
sti
cld
xchg
aas
js
mov
out
filds
outsl
pop
mov
sbb
iret
mov
xor
mov
in
jbe
push
inc
mov
push
mov
adcb
push
inc
mov
adcl
out
imul
out
xchg
in
aas
pop
adc
or
out
aam
dec
xor
fistpl
cwtl
jb
arpl
xchg
add
pop
mov
add
fidivs
sub
mov
jbe
arpl
inc
dec
or
add
dec
in
ljmp
adc
sub
cmc
gs
leave
xchg
fucomp
insl
ss
xor
fisubrl
mov
popa
or
mov
xor
call
sub
fnstsw
mov
mov
mov
subl
fnstsw
in
add
jecxz
dec
orb
and
dec
int
cmp
aaa
inc
and
cmpsl
and
aas
xchg
cmpsl
adc
and
loope
cmp
and
std
stos
dec
xor
pusha
mull
jne
sbb
jns
aas
gs
mov
fistl
in
add
mov
jns
push
add
cmp
testb
outsb
fsubl
mov
sub
add
mov
push
imul
push
adc
movsb
mov
insb
ja
adc
mov
orl
sub
test
pop
mov
xchg
inc
and
hlt
scas
stc
pop
push
add
mov
std
mov
push
mov
push
bound
aad
cltd
hlt
and
adc
imul
lods
mov
loope
or
jg
xchg
int
out
jne
lret
fimuls
inc
mov
imul
mov
cmpsb
fdiv
rolb
lcall
ret
in
fimull
imul
daa
xchg
loop
xor
or
add
mov
cltd
aam
mov
mov
and
roll
cmp
mov
outsl
mov
int3
xchg
mov
gs
pop
mov
lcall
jmp
test
lret
jae
cmp
rcrb
addr16
sub
in
sahf
mov
aam
xor
xor
sbb
rcrl
inc
stos
push
push
testb
dec
pop
popa
lcall
pop
orl
sbb
sub
int
in
jne
pop
inc
push
jns
jecxz
jne
hlt
mov
lock
pop
xor
mov
in
inc
ret
das
cmpsl
pop
push
das
bound
lahf
out
fidivl
shrb
push
pop
in
repnz
ret
cmp
inc
enter
and
mov
mov
fstpl
mov
push
inc
fstl
aaa
jno
icebp
dec
gs
or
mov
icebp
sub
and
cld
pushf
enter
sub
jbe
andl
and
sbbb
xor
mov
arpl
imul
iret
mov
mov
sti
add
xchg
dec
xlat
xchg
cmp
in
hlt
mov
xchg
aad
sbb
xchg
in
dec
fisubs
or
cld
and
mov
mov
pop
pop
push
xor
lock
push
mov
or
dec
cwtl
pop
mov
repnz
xor
xchg
js
outsb
cmp
or
pop
js
mov
inc
aad
xchg
arpl
jmp
push
push
aad
popa
sub
sub
fs
shl
mov
xor
sbb
fcmove
or
add
stos
mov
lods
inc
loopne
fs
ja
out
movsl
cli
xor
fbld
xor
ds
sub
mov
push
cwtl
cmpsb
push
mov
mov
xor
scas
insl
mov
fiadds
add
inc
jmp
pop
xor
enter
dec
imul
mov
and
adc
testb
push
jb
inc
cmp
rclb
or
jge
dec
dec
mov
inc
cli
cmp
xchg
int3
sub
mov
filds
aad
insb
mov
jmp
ficompl
sub
popa
add
xor
into
mov
sti
loope
or
cmp
adc
cltd
adc
pop
or
outsb
enter
cmp
movsl
push
xchg
pop
loope
test
dec
pop
sbb
jl
mov
xor
cli
aad
arpl
or
pop
jmp
test
popa
push
sub
iret
cwtl
pusha
pop
jns
repnz
cmp
fcompl
fildl
aas
lods
in
aas
test
pop
or
dec
inc
and
pop
lret
cltd
lods
pop
aas
mov
jnp
scas
mov
jno
inc
fidivs
xlat
pop
out
loop
add
xchg
cmp
pop
aaa
in
stos
lret
adc
cmc
or
pop
xlat
das
dec
fwait
sbb
mov
negl
into
mov
xchg
or
mov
jl
jg
fisttps
pop
push
movsl
pop
ret
mov
fdivl
stc
testb
sbb
int
int3
mov
jmp
mov
cmpl
xor
jg
and
add
push
pop
hlt
xchg
adc
adc
std
pop
add
into
jnp
mov
mov
sub
and
pop
inc
sahf
adc
cmpsb
jp
xchg
aam
cmp
sbb
mov
ror
int
pop
addl
repnz
jo
fildl
cli
test
and
test
jnp
bound
fwait
bnd
jmp
hlt
ja
jmp
adc
jb
pop
jb
loope
jg
repz
bound
mov
pusha
cmp
xor
sbb
lds
inc
sbb
cmc
in
inc
test
add
xchg
nop
or
jno
inc
push
push
fdivr
dec
mov
dec
push
mov
pop
shrb
jg
jo
mov
test
cmp
je
dec
out
mov
or
stc
mov
sbb
mov
dec
jbe
lods
jecxz
push
inc
data16
inc
js
idivl
stos
mov
dec
inc
imul
dec
fst
push
push
fcmovnb
adc
inc
lahf
push
cli
sub
pop
das
jne
or
add
mov
test
ret
cwtl
ret
add
cmpsb
mov
lock
movsl
rcr
rolb
shlb
push
jne
stos
pop
xchg
jecxz
outsb
jl
push
pop
imul
subl
pop
mov
jbe
mov
mov
aaa
adc
sbb
test
sub
mov
sbb
and
xor
and
xchg
sahf
add
mov
pushf
loope
mov
out
js
inc
inc
and
dec
into
push
lret
jnp
jae
push
mov
push
xchg
jge
xor
xor
rcr
xor
add
mov
mov
add
sub
pop
lcall
cmp
sub
mov
adc
xorl
gs
dec
js
popa
cmc
std
pop
pushf
lahf
mov
inc
sbb
xchg
adc
sub
push
sub
sbb
xor
pop
out
inc
lahf
push
mov
mov
adc
jmp
dec
xor
xor
sub
mov
stos
gs
mov
mov
mov
xor
mov
mov
es
pop
lret
pop
stc
test
mov
inc
negb
rorl
push
inc
xor
sub
lock
jns
mov
sbb
cltd
jl
mov
push
sbb
jmp
xchg
pop
xlat
cmp
sbb
inc
insl
xor
pop
or
mov
push
mov
insb
repnz
insb
cmc
fwait
cld
mov
dec
xchg
hlt
leave
mov
xor
push
xchg
mov
imul
lds
cmc
jb
sahf
xor
out
push
inc
mov
sub
add
inc
insb
fbstp
jg
dec
decl
xchg
movsb
jo
xor
xchg
mov
mov
mov
mov
test
jne
cmpsb
push
push
pop
mov
test
and
pop
xchg
lock
or
adc
pop
imul
test
add
inc
into
mov
nop
ljmp
mov
shl
lahf
aad
pop
lods
aas
fcoms
lods
jmp
rcrb
dec
and
icebp
lea
les
lret
sbb
in
popa
ljmp
addr16
imul
sub
ss
xlat
xor
xorb
jg
sbb
imul
ljmp
push
repnz
cs
xor
mov
rcl
jmp
xchg
movsb
cmp
cmp
pop
jecxz
lods
scas
xorb
push
mov
cmpsb
pop
dec
mov
xchg
or
std
add
enter
mov
cmp
shrw
adc
daa
out
dec
push
iret
scas
xchg
jl
mov
mov
and
iret
subb
jne
push
sbb
jle
out
shrl
cwtl
or
push
xor
les
fwait
sahf
push
pop
or
cmp
dec
js
xorl
dec
mov
dec
jae
ret
add
xor
daa
icebp
xor
jns
outsb
ds
jecxz
dec
ss
ret
pop
mov
mov
or
jns
add
jecxz
sub
cld
ss
sub
push
not
xor
das
inc
test
fisubrs
cld
fisttpll
call
and
notl
or
xor
mov
xchg
sub
jmp
ret
pop
and
imul
mov
mov
mov
les
pop
xchg
fcoms
inc
mov
inc
xchg
rol
cmp
fwait
pop
rcr
or
xorl
mov
cs
adc
fsubr
push
add
cmc
sbb
or
out
mov
xor
test
adc
cmc
cld
lds
gs
aam
loopne
icebp
mov
xchg
imul
mov
dec
outsl
fidivs
inc
movsl
das
shrb
push
out
push
mov
cmpsl
neg
mov
cmc
bswap
movsb
mov
cmc
lret
cmp
es
xor
imul
cltd
in
mov
lds
testb
jmp
outsl
iret
mov
movsl
adc
mov
or
cltd
sub
in
outsl
shr
insb
push
aaa
mov
sub
mov
ja
pusha
lcall
mov
push
adc
inc
int
sub
out
dec
arpl
xchg
je
jns
push
and
and
jnp
ljmp
push
pop
test
mov
push
cmpsb
sub
mov
add
addr16
rorb
loope
pop
insb
scas
cmp
cld
fsubl
add
inc
fadds
addb
adc
outsb
data16
inc
pop
cli
inc
push
sti
mov
push
js
jp
insb
mov
jmp
xchg
mov
lahf
xor
dec
add
shlb
mov
sarl
enter
push
fbld
hlt
out
sub
pushf
scas
mov
inc
push
push
mov
add
test
mov
push
add
daa
cmp
cmpb
mov
add
leave
and
out
jbe
icebp
adc
pusha
mov
pusha
mov
sub
out
push
dec
push
push
mov
cmpsb
dec
test
dec
or
out
lods
adc
rcrb
daa
mov
jne
mov
mov
sbb
dec
add
push
ja
sbb
xor
inc
push
orb
gs
sbb
lret
stos
xor
xor
add
mov
jae
lock
pop
outsb
data16
lahf
stos
cmp
repnz
cmp
les
in
fldl2t
out
adc
pop
iret
orl
ret
nop
jle
mov
lcall
jns
fimull
push
pop
test
repnz
test
cld
mov
mov
test
stos
xor
call
testb
pop
js
lods
dec
cs
mov
dec
imulb
xchg
sub
lock
and
fisubl
mov
and
mov
or
mov
inc
in
cld
pop
and
movsl
jne
lods
sbb
test
jge
adc
in
es
in
sbb
fnsave
loop
mov
fisubs
out
xor
out
sar
mov
xchg
xor
dec
in
inc
fistpll
outsl
es
pop
xor
notb
movsb
decl
repz
lods
fwait
xchg
mov
fsubl
push
xor
push
xor
lock
xor
das
jno
clc
mov
push
xor
pop
push
pop
pop
mov
inc
std
jb
iret
pop
lods
xchg
int3
push
scas
cmpsb
in
jb
sub
pop
xor
repz
test
testl
loopne
std
scas
int3
adc
aam
and
push
in
or
out
in
mov
insb
dec
adc
xchg
mov
jge
dec
stos
lods
out
fisttps
inc
mov
push
or
cmp
aam
push
inc
pop
rolb
add
pop
shl
and
pop
outsl
repz
or
test
shll
add
popf
inc
in
test
or
jle
adc
movl
pop
dec
dec
mov
data16
into
retw
out
lods
jle
test
mov
fstl
inc
cli
bound
or
hlt
movsl
bound
inc
mov
mov
mov
fsub
lods
xchg
test
stc
cmc
push
sahf
add
scas
into
icebp
stc
jle
pop
push
xor
test
movsb
iret
lock
and
xchg
jae
xor
in
out
add
lret
mov
imul
das
inc
or
mov
and
pop
std
sbb
gs
jo
test
pop
adc
icebp
fiadds
int
nop
insl
out
cmp
test
sbb
sub
cs
sbbb
xor
test
sbb
jns
dec
or
cmp
push
out
jae
push
movl
jne
pop
gs
icebp
jecxz
iret
loop
mov
xor
cmpsb
test
ljmp
or
inc
stc
jp
fsub
dec
jns
sub
xchg
cmpsb
or
adc
aaa
ljmp
aad
adc
sbb
adc
movsb
mov
in
sbb
mov
sbb
cmp
lret
push
rorb
sbbl
cs
fsubl
push
aas
mov
jno
insb
movsb
ja
into
notb
cld
push
push
pushf
mov
ja
test
mov
push
or
mov
fcompl
pop
jecxz
out
icebp
pusha
shl
xlat
mov
or
jg
stc
icebp
sbb
lret
into
scas
cmp
add
loope
lahf
shl
clc
jne
scas
and
bnd
and
pop
mov
roll
pop
xchg
cmpl
add
push
pop
add
cmp
pop
sbb
mov
roll
out
sub
cmpsl
cli
cwtl
xor
arpl
push
adc
daa
hlt
xchg
ret
mov
ret
out
fnstcw
jno
insb
cmp
xor
inc
negb
std
sbb
fistpll
sub
push
sarl
cmp
popf
push
test
leave
pop
mov
sahf
and
icebp
imul
je
sti
push
jmp
pushl
cmp
pop
daa
pop
stos
dec
mov
push
gs
or
pop
mov
sbb
mov
sbb
bound
adc
lock
and
cmp
sahf
inc
dec
push
mov
or
outsb
mov
jnp
sub
andl
data16
cmp
dec
shll
jle
push
mov
mov
add
jno
les
mov
adc
addb
ss
mov
jae
push
mov
scas
push
adc
pushf
rcrl
test
es
add
mov
mov
inc
out
aam
push
adc
mov
ret
leave
adc
add
jmp
dec
cwtl
fnstcw
mov
gs
ror
loopne
int3
lcall
cmp
daa
xor
dec
je
movsl
cmpb
aaa
popa
jecxz
and
and
mov
nop
and
or
mov
jg
lds
cltd
cmp
andb
cmpsl
rcl
rcl
xchg
cltd
mov
sub
cmp
lock
dec
fwait
test
or
in
cmpsb
xchg
gs
xchg
xchg
mov
add
mov
sub
je
inc
inc
mov
jo
push
inc
mov
cvttps2pi
sahf
addr16
outsl
mov
in
outsb
test
dec
push
lret
ficoml
adc
jne
and
dec
ja
nopl
sarb
xor
xorl
stos
xorl
popa
and
inc
shll
inc
call
dec
mov
or
fnstsw
ljmp
mov
in
and
movsb
cwtl
out
push
sbbw
jge
or
push
sbb
pop
xchg
shrl
ljmp
lea
imul
imul
xchg
push
and
in
out
jmp
cmp
cmp
sub
js
or
mov
jmp
dec
test
xchg
inc
xor
sub
ret
fnsave
xchg
mov
shrb
ljmp
data16
pop
mov
lahf
pop
in
sub
in
xchg
cmp
pop
cmp
mov
mov
sub
mov
or
jl
fistl
mov
mov
push
fisttpll
loope
mov
push
out
inc
sub
dec
into
jne
or
add
rolb
enter
ret
jle
adc
xor
mov
int
daa
xor
repz
arpl
inc
subb
sub
cmpsl
cmp
aaa
add
clc
xchg
data16
nop
jg
rclb
push
stc
cwtl
cmp
pop
mov
mov
add
out
test
jnp
js
rcrl
jb
jmp
cmp
aam
mov
aas
shrl
push
repz
or
insl
lcall
dec
and
addr16
iret
outsl
pushf
sbb
jp
cwtl
jmp
inc
mov
stc
mov
add
std
out
mov
cmp
dec
xchg
xchg
aam
mov
mov
arpl
jmp
subb
ret
cld
mov
inc
mov
aaa
les
sbb
sbb
push
push
cmpsb
cmpb
xchg
xchg
pslld
push
push
int
aaa
add
mov
mov
insb
ret
mov
jl
lret
imul
cmp
inc
mov
jae
pushf
popa
sub
fwait
pop
sbb
push
ficoms
push
mov
pop
scas
dec
mov
insl
stos
notl
push
incb
xor
movsl
shll
loopne
inc
daa
and
mov
das
mov
sub
xor
repnz
adc
inc
lds
fnsave
or
stos
lahf
clc
adc
loop
imul
mov
pop
pop
xlat
aaa
ds
pop
sti
cmpsb
insb
aaa
movsb
add
cmp
daa
arpl
cmpsb
mov
cli
xchg
lret
aaa
repz
lods
sbb
mov
push
mov
mov
jbe
dec
dec
mov
push
mov
mov
mov
es
dec
push
jecxz
sbb
pop
push
mov
lcall
cmp
mov
cmp
fmull
cmp
call
shrl
movsb
inc
or
test
jl
add
sub
lods
push
jns
pop
mov
dec
sbb
scas
sub
mov
dec
mov
and
push
pushf
sbb
pop
outsb
mov
imul
and
clc
scas
std
cmp
push
xchg
add
inc
lock
jae
int
inc
dec
into
fbld
test
lds
push
inc
int3
cmp
push
scas
xor
mov
int
repz
xor
or
lret
mov
lods
or
cmp
fsubr
cmp
into
cltd
push
adc
pop
sub
ret
lret
vmovq
loope
mov
mov
int
std
cmp
mov
mov
xchg
imul
addr16
mov
mov
inc
sub
cmp
cltd
rcll
adc
mov
and
add
into
mov
pop
add
loope
out
cmp
in
mov
in
fwait
lret
mov
xorb
sub
movsl
mov
mov
lock
cmpsb
lret
in
pushf
xor
cmp
sub
xlat
aam
add
jmp
adc
jg
flds
lret
cmp
xor
jl
popf
mov
repz
and
add
mov
xchg
xchg
ss
je
adc
add
ret
ficompl
jo
repnz
testl
jmp
popa
aad
sub
pop
dec
mov
mov
movsl
test
xor
adc
cli
loop
scas
cld
jnp
xchg
lods
pop
add
clc
std
clc
pop
addr16
xor
popa
cmpsb
fucomp
cwtl
mov
ret
mov
mov
pop
dec
mov
test
cld
out
incb
mov
mov
xor
les
in
addr16
test
roll
leave
push
cltd
xor
js
repz
sub
jne
jo
aad
dec
xor
arpl
pop
or
jle
pop
inc
js
push
cmpxchg
mov
ss
adc
iret
ficoms
inc
fisubrl
mov
inc
xor
movsb
test
push
sub
mov
jnp
adc
aam
pop
and
iret
sub
mov
rcll
arpl
add
mov
test
mov
xchg
test
jmp
fidivrl
repz
xor
and
cmp
jg
imulb
insl
push
inc
jb
sahf
jl
jo
mov
into
jne
inc
push
bound
lds
les
into
es
add
fidivs
xchg
movsb
pop
ja
and
adc
adc
lds
je
aaa
out
in
pop
ds
push
stos
out
xor
mov
xor
shl
sub
dec
ret
pop
je
mov
jge
cmp
pop
jne
fdivs
ja
sbb
pop
dec
sub
pop
pushf
mov
or
push
xor
lret
jno
loope
add
mov
out
loop
dec
stos
cmpsb
mov
cs
push
data16
popa
xor
inc
fwait
call
daa
scas
aaa
jmp
xor
dec
add
cmc
jb
dec
icebp
jns
xor
cmp
jl
in
push
jno
xor
xlat
test
bound
insl
and
mov
imul
and
test
cmpsl
xlat
js
push
ficompl
rcrb
sbb
inc
pop
outsb
ret
xorl
mov
mov
push
mov
aaa
xlat
sahf
scas
mov
jae
push
push
mov
shll
iret
mov
pop
into
or
inc
push
aaa
dec
loop
ljmp
push
movsl
xor
add
add
mov
aas
orb
ljmp
mov
adc
sub
lcall
mov
mov
jno
xor
mov
inc
and
inc
sub
orl
sbb
mov
fs
jbe
test
push
cli
rcrl
ret
add
mov
jmp
mov
mov
jge
sti
outsl
inc
inc
jne
test
fmul
dec
mov
mov
lcall
xor
out
dec
mov
das
xchg
and
add
xchg
in
aas
test
lret
hlt
mov
out
cmp
xchg
mov
cmpsb
je
mov
popf
test
add
xor
out
jo
jecxz
vrcpss
inc
clc
mov
push
xor
ror
inc
daa
pop
push
sahf
adc
ficomps
sbb
dec
mov
push
mov
mov
push
xor
sub
mov
pop
repnz
jae
fs
push
scas
jge
popf
adc
mov
pop
icebp
sbb
sbb
or
test
mov
lods
mov
test
popa
cmp
jae
mov
repnz
popa
out
ret
lahf
xchg
scas
cmp
test
testb
mov
popf
push
in
sahf
inc
out
pop
sub
pop
mov
pop
inc
aas
xor
cli
loop
in
sti
movsl
mov
pop
sub
sahf
call
popl
shrl
jne
xor
cli
jge
les
sub
sbb
sbb
dec
into
out
hlt
mov
xchg
xchg
into
push
dec
cltd
adc
lds
jmp
mov
lcall
and
lret
mov
fisubrs
xor
adc
stos
mov
nop
repnz
popf
pop
ljmp
jne
jg
xlat
out
hlt
aas
test
out
and
test
pop
xchg
mov
xlat
mov
push
xchg
dec
xor
gs
dec
das
mov
push
jle
jnp
pop
mov
std
adc
shrl
fisttpll
add
ret
push
dec
mov
jno
push
je
push
ficoms
inc
test
adc
pop
pop
sub
xchg
and
mov
cmpsb
push
push
dec
cli
lea
lahf
add
cmpsb
shlb
ss
cmp
in
test
add
gs
repz
pop
arpl
or
dec
mov
and
repnz
cltd
test
xor
arpl
cmpsb
inc
sbb
clc
js
pop
pop
mov
jo
jbe
pop
jmp
test
adc
add
xor
pop
sbb
loop
sub
jp
nop
out
lods
fidivl
sub
xchg
mov
ret
sub
frstpm(287
inc
cmp
xchg
cmp
jb
bound
mov
jp
lret
push
cld
repnz
mov
pop
sbb
mov
mov
sub
dec
inc
ret
roll
xor
in
cmp
and
push
inc
aam
mov
sbb
imul
or
jne
lcall
xorb
loop
repz
lahf
subb
push
add
movsb
and
cli
dec
addr16
jbe
inc
cmpsl
mov
adc
int
mov
mov
or
push
fdivp
pop
adc
and
iret
mov
dec
xchg
adc
stos
scas
fmull
mov
add
data16
and
push
pop
mov
mov
push
xor
cli
pop
adc
loop
or
xchg
pop
xor
leave
or
movsb
mov
dec
sbb
mov
or
and
loope
and
shl
lods
pop
lahf
leave
or
push
jb
and
mov
push
add
outsl
shrb
fistpl
mov
outsl
out
push
xor
cltd
pop
and
mov
jmp
sub
and
push
loop
mov
mov
subb
cltd
fs
sbb
shrb
mov
aas
pop
sahf
mov
dec
jecxz
push
outsb
dec
add
test
pop
inc
mov
cmp
mov
lahf
jmp
push
mov
popa
and
lcall
enter
std
mov
scas
pop
inc
mov
dec
dec
movsb
pslld
add
push
outsb
mov
and
movsb
push
fwait
movsb
jae
jbe
mov
lds
test
mov
push
test
cwtl
pop
loope
add
pop
and
adc
mov
xchg
subl
enter
inc
int
outsl
or
in
jl
jnp
push
hlt
repnz
loope
or
adc
mov
mov
mov
insl
adc
ficoml
repnz
ss
xchg
scas
and
popf
mov
andb
inc
cwtl
js
xchg
and
movsl
push
or
cmpsb
sbb
scas
mov
xor
iret
es
or
movsl
sbb
fsubrl
sti
pop
fildl
fisubrs
or
add
pop
or
pop
lcall
fisubrl
push
fyl2xp1
push
movsb
xchg
mov
xchg
cmpsl
insb
add
ret
lcall
leave
clc
inc
popf
inc
sbb
inc
dec
sbb
aam
and
setne
cmpsl
pop
pusha
into
loopne
es
daa
cli
xor
mov
das
les
cmp
aaa
pop
in
pop
push
std
mov
xchg
aad
ds
add
je
popa
xchg
in
fiadds
push
mov
mov
popf
icebp
push
shrb
fstps
xchg
dec
ret
sub
mov
push
lock
cwtl
daa
pop
jno
pop
mov
mov
fs
rcll
inc
jnp
mov
negl
icebp
scas
int3
push
daa
xor
xchg
loopne
icebp
jecxz
hlt
rorl
mov
sbb
cmp
mov
pop
mov
mov
inc
pop
adc
mov
repz
mov
adc
aam
cmp
cmp
int
pop
loopne
or
loop
fsubs
not
xor
and
push
sbb
mov
hlt
xchg
jns
fsubs
jo
outsl
lret
es
jo
outsl
lods
popl
pusha
add
mul
mov
pop
cmpsb
icebp
push
jbe
cmpsb
repnz
xchg
pop
call
push
stos
iret
sub
imul
push
mov
rol
scas
data16
push
push
cmp
jns
icebp
cwtl
inc
push
andl
hlt
testb
dec
jo
fildl
mov
lock
cli
mov
ret
test
cmpsl
test
xor
ret
js
mov
and
cmpsl
in
and
pusha
or
jle
sti
cmp
jae
mov
xor
mov
lcall
pushf
lret
jg
mov
push
mov
add
dec
dec
mov
cmp
pop
and
negb
mov
xchg
jns,pt
fisttpll
jo
cmpsb
push
add
jl
jl
cs
dec
fldcw
xor
push
fs
pop
inc
rcll
or
push
sbb
mov
rcll
cmp
insl
push
dec
inc
shlb
jo
or
mov
xor
movsb
daa
adc
mov
add
pop
add
sub
movsb
xor
or
mov
mov
add
xchg
cmp
sub
and
hlt
sub
inc
clc
xchg
js
aaa
mov
enter
push
scas
je
sbb
ds
mov
xchg
ja
inc
cmp
iret
xchg
or
pop
popf
icebp
stc
subl
pmulhw
jb
and
fs
imul
sub
mov
pop
gs
int3
xor
stc
dec
mov
or
sbb
adc
cmpsl
jmp
cwtl
pop
pop
or
push
aas
dec
in
push
cld
xor
imul
call
int
inc
dec
jae
mov
inc
jne
cmc
or
mov
cs
rcl
in
into
sbb
cmp
pop
mov
jbe
or
repnz
aad
mov
popf
adc
pop
xchg
ret
pop
divps
daa
das
cmc
aas
and
cwtl
test
dec
push
or
push
push
cwtl
cmp
add
adc
jae
mov
push
mov
mov
lret
out
sbb
es
scas
xorb
inc
imul
aam
fbstp
inc
cmp
lea
ja
hlt
les
push
lcall
add
test
daa
xchg
inc
xchg
loopne
pmaddwd
stos
adc
or
sub
bound
test
aad
lods
xorb
lret
repnz
xorb
enter
push
inc
pop
inc
imull
adc
mov
pop
bound
cmp
scas
push
inc
inc
xchg
stos
pop
cwtl
pop
fld
shlb
or
cs
cmp
fldenv
icebp
jbe
inc
ret
cmpsb
mov
jle
mov
das
adc
out
xchg
push
dec
dec
push
push
mov
stos
cmp
push
adc
bound
pop
add
push
loop
push
mov
bound
fsub
or
fdivr
cltd
adc
lds
or
aaa
loop
cmp
shl
and
add
ss
out
popf
add
jne
enter
sub
popf
outsb
jne
test
fidivrs
nop
or
pop
push
cs
lret
aam
mov
inc
or
movsb
roll
cmp
adc
pop
lahf
repz
xchg
andl
aaa
pop
jl
mov
stc
ret
xchg
jb
mov
call
dec
push
or
mov
mov
dec
leave
test
faddl
popa
je
fs
mov
shll
cmc
cltd
mov
cmpsl
lock
jno
sbb
icebp
jle
jnp
imul
sub
xor
or
fistl
movsb
repz
sbb
aaa
mov
out
fstl
out
xchg
std
int
cmpsl
aas
ret
in
mov
inc
mov
leave
bound
sbb
lret
cmp
stos
movsb
gs
push
data16
mov
int3
dec
jbe
push
loopne
pop
movsl
out
mov
rorl
fwait
inc
sub
shlb
sbb
push
xchg
repz
inc
enter
ja
sub
xor
addr16
les
rolb
ds
mov
fdivp
aam
rorb
ljmp
int
push
dec
jle
in
pop
xchg
add
stc
sub
ret
push
repnz
mov
jnp
ret
int3
push
fwait
arpl
xchg
in
stos
addr16
loope
or
xchg
push
cltd
lcall
fistl
jge
fwait
ja
outsb
or
lret
lods
and
ret
adc
cltd
sub
lahf
mov
loope
xchg
or
pop
lea
pop
and
stos
pop
fistl
int3
cmc
lds
adc
faddp
lcall
test
fldz
int
bswap
push
or
mov
cmp
mov
repz
jp
add
dec
and
mov
repz
gs
mov
jne
xchg
lcall
cmp
push
movsl
sub
call
vpshuflw
xchg
in
jge
push
clc
bound
jno
les
cmp
mov
pop
push
sbb
mov
xchg
jnp
mov
adc
xchg
shl
jle
mov
sbb
outsl
xchg
push
pop
adc
mov
mov
xchg
test
jmp
jl
xchg
add
jns
mov
jp
dec
push
shufps
cmpsl
ss
call
js
fwait
les
and
sbb
aad
aas
push
sbb
in
test
imul
sbb
pop
xchg
inc
iret
xor
movlps
adcl
clc
fsubrl
jecxz
jb
add
or
outsl
or
fimuls
enter
mov
mov
imul
das
divl
data16
sbbb
and
cmpl
lahf
enter
sub
cmp
std
into
xchg
adc
arpl
pop
add
dec
xchg
in
and
mov
mov
imul
repz
lcall
cld
jl
jae
sub
jns
repnz
rcrl
lods
ret
sub
xchg
mov
test
mov
dec
mov
popf
and
push
xor
andl
xchg
das
xor
push
fwait
mov
cmpsb
jl
jnp
adcb
mov
adc
cs
movsb
inc
cmp
add
sti
add
dec
xor
sub
and
adc
sub
jmp
mov
mov
out
push
xlat
into
mov
sub
fld
outsl
sarb
int
mov
sbb
dec
sbb
mov
and
mov
lea
idivb
jg
cmp
adc
or
mov
loop
je
pushf
add
in
cmp
movsb
add
pop
or
rcrl
and
xor
and
sbb
lahf
fsub
jo
xchg
cmpsb
add
movsb
xchg
scas
xchg
popf
int
inc
addr16
jb
push
or
pop
stos
shrl
pusha
in
adc
mov
ljmp
adc
add
xor
shl
sub
xchg
bound
adc
xchg
loope
fsts
int3
jno
dec
xchg
pop
or
repnz
icebp
push
les
arpl
out
mov
add
cmp
leave
idiv
nop
mov
jmp
mov
data16
sub
mov
into
push
mov
je
je
xchg
ret
inc
fdivs
cmp
outsl
cmp
dec
jns
repnz
je
lods
in
ja
add
mov
filds
out
inc
or
and
jo
out
sub
icebp
in
sbb
or
adc
pop
add
fcompl
aad
or
sbbl
mov
and
add
out
stos
push
out
jl
sar
arpl
jle
fcmovnbe
mov
push
xacquire
scas
lret
jne,pn
and
push
xchg
mov
dec
lods
lcall
fcomip
cltd
in
fcmovnbe
pop
imul
sbbb
cmc
mov
ljmp
lret
sbbb
pop
adcl
push
xor
and
inc
jb
adc
mov
repnz
cmp
notl
imul
xchg
mov
push
pop
sar
inc
jne
push
js
ret
mov
mov
cwtl
in
jecxz
iret
icebp
sbb
jb
add
mov
les
jns
lret
mov
inc
in
arpl
adcl
cmp
mov
aaa
aad
xchg
gs
and
std
bound
in
inc
mov
bound
jbe
or
test
enter
cs
leave
dec
loopne
xchg
cltd
notb
dec
into
xchg
mov
push
mov
jns
jle
lods
in
ret
pop
and
sub
stos
call
cmp
fidivrl
jne
push
inc
lret
sub
out
testb
inc
cltd
rcrb
cmpsl
lret
push
pop
pop
test
pop
test
dec
mov
cs
mov
cmp
mov
stos
rcl
xor
test
pop
pop
cs
jo
cmpsl
mov
pop
js
inc
ret
sti
fdivrl
jle
aad
sbb
daa
or
dec
xchg
cmp
nop
cmovno
push
lret
xor
jne
or
adc
into
adc
adc
push
sub
fld
jmp
push
jmp
and
jmp
xor
push
popa
dec
es
in
insb
jno
mov
mov
lcall
daa
cmc
es
cmp
jmp
xlat
pusha
repnz
std
dec
xor
mov
push
fs
pop
sub
xor
or
push
cmp
and
xchg
jbe
lcall
int
jg
in
outsl
aaa
push
adc
xor
iret
imul
jg
decb
xor
cmp
cmp
mov
lea
cmpsb
pop
aaa
mov
cmp
pop
xchg
dec
pop
mov
insl
decb
lret
pop
dec
iret
cmpsl
dec
pushf
in
imul
nop
jnp
xor
aam
dec
sarb
cli
outsb
ret
jbe
outsl
or
loop
mov
or
push
xchg
pop
insl
jb
insl
jecxz
cmp
or
fisttpll
mov
sahf
cmp
pop
inc
xor
movl
nop
arpl
mov
arpl
fisubs
jb
xlat
dec
jno
add
cltd
xor
jno
xchg
imul
insl
mov
adc
ror
push
pop
jl
nop
sbb
mov
jl
jmp
push
or
pop
popa
cmp
mov
ss
mov
mov
out
cmpsl
aas
nop
pusha
cs
popf
mov
push
cmc
mov
into
scas
hlt
bound
ret
push
loop
call
mov
sub
push
push
and
lock
fildll
inc
cmpsb
ljmp
adc
and
and
mov
add
mov
cmpsb
xchg
pusha
ja
sub
shrb
jmp
pop
or
mov
jmp
inc
sbb
int
jae
int3
pop
imull
clc
bound
data16
mov
cmpsb
stc
add
lods
nop
cmp
add
and
lds
cmpsl
mov
enter
lea
into
mov
cltd
mov
orl
add
jle
xchg
inc
jns
inc
rclb
and
ficompl
stos
int3
push
clc
pop
dec
cmpsl
les
xchg
lds
mov
rcrl
jl
stc
xchg
mov
iret
mov
mov
daa
jae
xchg
cmp
inc
enter
fnop
push
orb
sub
cmpsb
mov
adc
cwtl
ljmp
xchg
jmp
fcmovu
adcl
and
mov
push
lea
push
pop
clc
mov
out
sub
notl
pop
pop
push
call
jge
shrb
cltd
cmpsl
rolb
scas
or
jb,pt
xor
lcall
mov
out
das
outsb
xchg
imul
cli
push
addb
lret
sbb
in
mov
pop
insl
divb
xor
sahf
ret
dec
mov
mov
cli
fsubrs
fldenv
cmc
movsl
adc
xchg
pop
mov
lret
xor
sbb
jno
push
insl
das
pushl
sbb
into
sahf
pop
jge
mov
cmp
negl
fdivs
jne
add
jg
mov
dec
int
cmp
aam
sub
sub
mov
push
sbb
cmp
dec
jns
jb
push
push
or
aas
mov
dec
sub
or
pop
push
push
lret
fsts
or
daa
repz
mov
daa
and
call
mov
add
add
push
in
lea
cmp
test
out
in
sbb
lcall
push
ret
sahf
xor
inc
adc
add
xchg
jb
leave
dec
sub
and
fisttpl
and
adcl
dec
jmp
stos
aam
fisubs
xchg
cmp
in
mov
jle
lret
jp
lods
dec
lea
daa
mov
imul
cli
add
cmp
or
xor
xor
mov
sti
mov
stos
xor
adc
cmpsb
loope
xor
lahf
aam
jae
mov
repz
mov
mov
shll
fwait
rorl
lcall
cmp
aam
hlt
out
dec
mov
in
mov
in
fidivs
inc
or
mov
jnp
imul
pop
pop
or
sbb
inc
jmp
and
cmp
xor
in
or
or
iret
ret
int
movsb
aas
or
data16
mov
push
or
repz
in
mov
jg
mov
or
mov
out
adc
adc
out
mov
pop
xor
mov
data16
mov
lock
fwait
icebp
xor
push
pop
cmp
xchg
or
fisttpll
mov
pop
pop
fs
out
inc
push
jle
gs
jae
adc
push
test
mov
mov
xchg
ret
add
stos
outsb
mov
inc
cmp
adc
pop
mov
fcmovnb
jmp
add
sub
cli
sbb
xchg
xchg
pushl
mov
decl
push
adc
mov
add
aaa
jg
push
inc
xchg
jmp
sub
lock
jmp
sbbl
lds
and
in
aaa
ds
cmp
dec
insl
or
out
repz
inc
aaa
rorb
pushf
jg
loop
pusha
scas
mov
repz
inc
lret
loope
sbb
xchg
outsb
pop
rcll
mov
pushf
mov
xor
push
fwait
cld
inc
dec
xchg
arpl
pop
pop
roll
or
and
into
test
sub
jg
sbb
jne
lods
push
popa
add
add
pop
add
lret
lods
popf
xor
mov
mov
cld
cmp
inc
or
pop
mov
jb
mov
test
fildl
sub
test
push
fldenv
test
cmp
pop
imul
mov
xchg
inc
xchg
lock
inc
xchg
call
inc
jp
leave
in
sahf
cmp
dec
stc
mov
leave
jae
lcall
cltd
sub
mov
clc
stos
pop
movsb
movsb
jb
insb
stos
xchg
shrb
mov
xchg
pusha
mov
jnp
dec
int3
mov
lret
sbb
or
call
pop
into
mov
stos
inc
jecxz
cmp
fdivrl
add
sbb
das
outsb
insb
fcoml
addr16
repnz
addb
outsb
stos
lods
iret
mov
or
or
pop
cmpsb
sbb
test
sub
mov
adc
mov
jae
in
xor
mov
rorl
sti
stc
sub
les
cs
push
lea
mov
jnp
mov
insb
jnp
push
dec
jmp
fs
cmc
rclb
ret
std
sub
pop
sbb
inc
or
movsl
sub
push
cmp
test
scas
mov
test
pop
dec
inc
or
testb
mov
gs
cmp
insl
cmp
add
enter
loopne
pxor
sbb
lds
mov
aas
or
jl
arpl
cwtl
test
xchg
movsb
xor
xorl
cmp
sbb
mov
mov
inc
jae
pop
fstpt
mov
in
xchg
out
pop
andb
add
mov
cs
aas
mov
inc
push
jb
mov
cld
cmp
mov
icebp
in
cmpb
mov
int
shlb
fwait
mov
xchg
call
pop
jecxz
out
aad
aam
xchg
bound
pop
lds
mov
pop
mov
sahf
cmp
jp
data16
gs
cmpsb
xor
fisubrs
push
popf
mov
sub
lret
cmpsl
sbb
jge
insl
je
sub
or
cli
cmpsl
push
xchg
adc
lahf
pop
xchg
dec
repnz
mov
cmp
sub
inc
fcmovnbe
aas
mov
arpl
xor
xor
popa
inc
sub
pop
adc
shll
xchg
jp
cmp
mov
jecxz
mov
jne
outsl
xorl
mov
add
repz
repz
cmp
mov
imul
repnz
repnz
inc
push
ss
in
stc
vpcmpeqd
cwtl
xor
cmp
sar
cmpsb
fwait
ljmp
pop
sub
and
push
pop
jae
xchg
ja
jmp
push
push
dec
mov
loop
int3
dec
or
adc
jecxz
or
ja
adc
and
test
xchg
fistpll
mov
dec
pop
mov
pop
sub
sub
cmp
ficoms
scas
pusha
push
add
fidivs
mov
adc
popa
cmp
pop
jne
rorb
je
sub
out
les
into
mov
movsb
inc
ds
xchg
test
cmc
cmp
mov
adc
arpl
lret
imul
cmp
cld
in
icebp
lods
dec
bound
popa
mov
xor
les
or
fwait
jbe
out
rcrl
fstl
mov
or
sbb
mov
std
out
lock
jo
mov
les
or
aad
xor
fiaddl
test
aad
dec
into
xlat
push
mov
sbb
sub
xchg
fs
cli
push
inc
and
and
add
ss
lcall
hlt
clc
lods
iret
and
dec
sti
in
lcall
aas
jge
dec
mov
mov
scas
jnp
fwait
mov
mov
jle
subl
sub
mov
arpl
js
aad
pop
jnp
and
pushf
mov
jb
dec
pop
sbb
or
adc
movsb
gs
and
add
jo
inc
sub
fwait
mov
add
adc
pop
out
push
lods
pop
rclb
shll
sti
test
xchg
or
adc
mov
lds
insb
push
inc
mov
mov
rcrl
adc
xchg
aas
pop
sbbl
pop
in
push
movsb
sub
add
lahf
xor
and
fistps
jl
shr
sbb
in
adc
xchg
negl
addr16
rorb
cmp
call
jg
xlat
mov
je
or
adc
cltd
mov
dec
js
add
jp
add
in
dec
xchg
jae
xlat
test
je
mov
bound
pop
sbb
insb
adc
leave
sbb
leave
and
sub
inc
out
rcll
jno
jns
ret
add
sbb
cmp
and
cmp
addr16
xchg
rcrl
dec
push
or
lcall
cwtl
push
in
pop
fiadds
xchg
xchg
add
sub
or
xor
mov
int
mov
mov
dec
mov
fildl
out
lock
xchg
sbb
cs
bswap
addr16
lahf
add
pop
push
push
adc
xor
in
shll
xchg
dec
icebp
enter
sbb
adc
stc
sbb
popf
xchg
lret
pop
pusha
dec
adc
outsb
xor
jle
add
xchg
and
push
mov
lret
push
jbe
xchg
std
lods
jbe
dec
mov
mov
testb
fcoms
pop
scas
lea
mov
mov
dec
int3
jne
sarl
repz
icebp
push
je
jno
push
ss
ror
test
sbb
push
xor
cld
push
cltd
and
or
out
je
scas
movsl
push
mov
insl
adc
dec
cmc
xlat
and
imul
xchg
mov
scas
or
icebp
jno
enter
xor
leave
jne
adc
fs
lret
push
jmp
or
or
in
iret
sahf
jl
aam
aas
out
and
inc
data16
sub
mov
pop
mov
jnp
call
pushf
jg
faddl
push
jns
lahf
fldenv
jg
mov
lds
cs
int3
test
nop
jns
pop
xor
icebp
jbe
imul
jl
stc
adc
xchg
xchg
ret
lods
mov
and
xor
cmp
mov
mov
in
adc
cmp
dec
cmp
lock
lods
and
jle
mov
cltd
push
imul
sarl
roll
mov
xlat
insb
jmp
movsb
pop
test
jp
xor
aaa
pop
out
or
adc
inc
inc
inc
mov
sahf
mov
cmc
adc
insb
push
aam
aas
pop
sub
hlt
les
sarl
daa
jbe
mov
adc
push
scas
les
cmc
mov
sub
sbb
jne
push
adc
cmpsl
mov
or
fdivrs
subb
mov
xchg
or
pop
sbb
fwait
call
pop
lahf
sub
dec
ds
insl
arpl
out
mov
cmp
adc
sbb
push
jg
cmpsl
xor
xor
push
jno
out
int3
cmpsb
pop
adc
dec
mov
xor
jl
jl
mov
addr16
pop
fbstp
xor
jp
pusha
mov
mov
mov
mov
fisubrl
out
mov
xlat
stos
popa
clc
xor
xchg
add
stos
or
lahf
int3
ret
andb
push
fs
fs
dec
movsb
arpl
push
fisttpl
sti
fidivrs
jb
loope
sub
fadd
loope
sub
cmpsl
mov
xlat
push
into
push
sti
ja
push
mov
fwait
outsl
push
jg
cli
or
movsl
bound
pop
sbb
out
and
pushf
lea
loop
xchg
adc
in
stos
das
test
adc
push
test
and
stos
mov
xchg
or
sbb
cmp
rep
jb
stc
adc
push
setns
xchg
ljmp
cmc
jecxz
mov
test
test
ss
cmp
push
adc
in
mov
add
pop
jecxz
mov
in
lds
mov
sbb
pop
lods
mov
fdiv
sahf
sub
jmp
jns
add
cmp
insl
loop
mov
xor
dec
movsl
xor
in
enter
xchg
int3
jns
mov
add
cmp
sbb
pop
int
inc
push
mov
jne
xlat
mov
decb
aas
cld
mov
adc
dec
and
lods
adc
outsl
jle
inc
jg
and
loopne
add
or
cmp
lcall
fbld
jmp
cld
je
or
cmp
push
mov
lcall
fs
pop
or
push
xor
mov
sub
scas
fisubl
paddb
mov
adc
stc
sbb
cmp
in
movsl
test
mov
xchg
adc
and
fnstenv
aam
ljmp
addb
fs
sbb
mov
imul
mov
mov
cs
xor
push
adc
inc
enter
out
es
rcr
push
aas
lods
fimuls
js
mov
sub
xor
lret
cmp
or
bound
enter
mov
out
cltd
vpsrad
in
mov
sub
mov
clc
in
daa
lret
fisttpll
lock
out
mov
in
push
mov
sbb
and
xor
adc
sbb
lods
lods
insb
les
ret
pop
shll
in
sbb
jp
push
addr16
ja
popf
adc
pop
pop
pop
je
xchg
cmp
xchg
sbb
xchg
cli
lcall
int
subl
fimull
in
cltd
jmp
sarb
inc
pop
repnz
push
out
mov
jbe
popa
lahf
insb
sub
out
rclb
sbb
pop
dec
popf
lock
push
push
popf
mov
mov
jecxz
test
push
mov
scas
pusha
cmc
bound
mov
sbb
cmp
insb
dec
jecxz
push
pop
inc
ljmp
clc
jg
fldlg2
lods
mov
dec
test
adc
push
mov
pushf
inc
mov
inc
loope
adc
js
shll
outsl
shll
mov
jo
aam
test
jecxz
test
imulb
mov
sarl
out
pop
ljmp
popf
mov
rorl
mov
adcl
and
jo
fldcw
sbbb
xor
les
sub
inc
sbb
iret
or
or
push
out
mov
push
arpl
sub
loopne
jae
flds
aam
pop
out
jmp
gs
test
sbb
jns
cmp
neg
push
aas
xlat
jle
jmp
pop
sbb
push
gs
cmp
out
mov
inc
ljmp
shrl
cmp
aas
mov
test
sbb
xor
mov
xor
mov
mov
inc
pop
in
shlb
jbe
fsub
pop
fucom
insl
ret
insb
out
ja
xchg
stc
mov
and
sti
adc
inc
out
push
inc
pop
adc
xor
shll
scas
imul
into
rcll
jb
push
ss
shlb
movsb
in
jno
cmpsb
cmc
jl
xor
out
cmp
lea
lret
ss
mov
adc
mov
pusha
in
add
sbb
mov
or
inc
int
fldenv
jecxz
ficoms
imul
jge
dec
aas
addr16
fwait
in
adc
outsb
inc
orl
push
mov
add
lahf
jl
scas
jbe
lea
popa
rclb
lcall
sub
loope
xchg
stos
fnsave
mov
cmp
pop
adc
movsl
mov
inc
dec
and
sahf
pop
pop
test
pushf
ss
popa
mov
sbb
xchg
cmp
sub
dec
out
inc
icebp
fnstenv
out
rol
or
pop
sub
cmpsb
sahf
outsb
jp
stc
ja
sbb
push
cs
int3
mov
or
xor
out
inc
push
xor
and
xor
addr16
jo
jno
xchg
sbb
push
mov
das
je
dec
dec
pop
scas
xchg
aad
sarl
lret
xchg
push
xchg
push
dec
loope
aaa
ja
mov
outsl
cmp
icebp
inc
out
xchg
imul
mul
jmp
arpl
cld
sar
xor
fldt
and
jmp
push
and
add
and
sub
pop
jae
mov
je,pn
pop
mov
mov
push
inc
xor
lret
mov
mov
loopne
aas
int3
out
inc
pop
add
sbb
xchg
ret
add
out
aaa
lea
jmp
icebp
cmpsb
push
push
fsubrs
cmc
push
sub
sahf
jl
push
sbb
decb
mov
cmp
or
faddl
push
aam
xor
dec
adc
aaa
sbb
inc
hlt
push
push
xor
inc
pop
xor
mov
sub
xor
pop
lea
mov
sub
mov
loopne
aaa
cs
add
cli
and
ret
rcrl
push
push
xor
adc
filds
xchg
xchg
sbb
lea
xor
and
xor
push
or
mov
xor
lods
pop
push
jb
pop
sbbl
sbb
add
test
into
insb
gs
loop
xorl
sub
test
mov
fimuls
pushf
into
adc
jb
aam
pop
sti
out
adc
dec
adc
enter
inc
bound
hlt
push
jle
ds
push
push
mov
mov
cmp
fnstenv
jne
push
repz
sbb
xchg
mov
add
mov
popf
jle
sbb
in
into
or
imul
loopne
xchg
arpl
inc
push
inc
xchg
cltd
inc
js
imul
mov
inc
aad
sbb
out
push
add
push
in
cwtl
xor
pop
ret
mov
pop
roll
cld
test
cmp
jbe
xchg
lret
sbb
lea
int3
mov
enter
pop
cmp
shlb
out
inc
movhps
outsl
clc
or
xor
pop
jl
jo
or
xchg
sbb
or
add
mov
fisttpl
jmp
push
add
test
cld
xor
xor
gs
push
fbld
sbb
sub
mov
cld
dec
rcll
add
fldcw
sbb
movsb
popa
fildl
rorl
push
cmp
push
rcl
xchg
outsb
imul
sbb
imul
push
sahf
lock
cmpsb
lcall
inc
push
mov
test
adc
cli
imul
faddp
mov
lea
inc
loopne
roll
inc
into
inc
addr16
or
pop
loop
lahf
jbe
dec
xchg
and
int
jo
dec
mov
fisubs
into
jne
push
sbb
rcrl
sbb
jg
mov
push
adc
fmulp
into
in
gs
adc
lods
call
int
mov
sub
outsb
dec
mov
addr16
hlt
mov
fstl
daa
ds
scas
shll
mov
call
fcoms
mov
cmc
clc
mov
rolb
mov
jo
pop
repz
and
ljmpw
aaa
mov
pusha
jnp
mov
mov
mov
test
insb
sbb
arpl
test
call
mov
jnp
pop
push
test
adc
push
pop
and
and
ret
nop
adc
xchg
jle
outsl
mov
xchg
jecxz
sbb
jne
push
loopne
mov
jg
imul
clc
adc
dec
sbb
aaa
int
inc
cmpsl
xchg
push
adc
out
mov
scas
push
push
loop
popa
inc
jg
cwtl
push
ljmp
add
xor
ss
push
inc
add
xor
out
stc
xor
dec
cli
push
xchg
jl
pop
mov
dec
shlb
mov
add
test
sub
dec
mov
cmp
shrb
aaa
and
lock
cmpsb
sub
jmp
je
movsb
cmp
test
cmp
xchg
out
repnz
and
or
sti
xlat
outsl
push
jns
jmp
mov
lods
mov
inc
jne
cld
pop
mov
sahf
jecxz
jle
jnp
lods
jl
outsl
mov
icebp
xchg
addr16
jnp
lds
xorb
xchg
fwait
lret
mov
fstps
push
lcall
je
add
decl
jno
mov
jb
push
xlat
jns
cli
and
lret
sar
pop
adc
aaa
lock
dec
cltd
nop
inc
mov
jl
shl
nop
pusha
enter
cmp
mov
add
xchg
insl
pop
fcomps
xchg
inc
jge
mov
sti
stc
jle
sub
push
int3
jae
mov
mov
lods
xchg
iret
mov
xlat
mov
movsb
dec
je
stc
inc
add
popa
and
adc
or
movsl
lock
cld
inc
and
in
add
xchg
mov
cmp
dec
cmp
sbb
mov
pop
outsl
add
cs
sbb
sti
jecxz
lock
mov
pop
pushf
sub
jns
sarb
mov
xor
loopne
mov
sub
aam
sub
mov
inc
adcb
push
pop
jns
lods
mov
out
lock
shrl
and
adc
outsb
cmp
lea
xchg
push
fadds
loope
orl
std
call
cmp
sbb
in
rcrl
outsb
aad
cmpsl
mov
cli
jmp
sub
jns
jnp
outsl
lods
addb
mov
fwait
lret
mov
out
daa
inc
push
xchg
pop
leave
inc
add
mov
pop
in
call
movsb
mov
or
movsb
and
dec
aam
push
test
in
stc
call
mov
push
cvtdq2ps
imul
lahf
jecxz
and
sbb
and
ret
int3
out
sbb
push
out
aam
adc
add
rcrb
or
fsubrs
rcll
incl
or
sub
dec
mov
mov
orb
jae
stc
arpl
and
js
or
clc
and
ja
dec
add
out
out
add
xlat
inc
in
out
imul
nop
in
sub
in
lea
jnp
stos
cmp
mov
jle
push
add
dec
dec
imul
xchg
add
xchg
rorb
loopne
dec
mov
sub
neg
das
inc
inc
xchg
cwtl
ss
and
insl
cmpsb
mov
lods
or
push
jle
pop
test
xchg
xchg
inc
xchg
mov
sbb
and
repz
fistps
jnp
dec
push
int3
dec
insl
sbb
jnp
and
mov
es
ret
les
xor
mov
int3
xchg
mov
jo
sbb
insl
adc
mov
lahf
pop
lods
push
pop
mov
pop
cmpsl
cltd
xchg
cmp
or
cltd
movsl
stos
popa
add
bound
ss
cltd
lds
enter
add
mov
in
stos
pop
or
nop
jl
sub
lret
mov
loope
xor
loop
jns
test
sub
mov
add
enter
xchg
sub
das
or
xor
mov
sub
or
sbb
out
ss
cmp
hlt
dec
pusha
stos
divl
clc
shl
xlat
movsb
inc
ret
or
dec
add
fdivs
mov
test
inc
in
jne
sub
and
in
push
fidivrl
mov
pop
xor
clc
in
lods
jno
mov
outsl
loopne
adc
cli
cmp
scas
mov
nop
mov
enter
push
mov
fwait
movsb
or
mov
cmp
or
push
jns
pop
popf
pop
imul
aas
dec
ljmp
and
push
incb
xchg
in
dec
iret
iret
shlb
lahf
and
sub
push
mov
mov
stos
xchg
shrb
jnp
push
fsubl
cmp
in
ljmp
push
sbb
test
mov
out
fwait
ficoml
push
js
pop
add
jnp
push
aas
mov
and
mov
das
lahf
fists
scas
xor
mov
adc
inc
xor
mov
js
daa
xlat
xlat
push
push
push
or
nop
sbb
scas
push
jle
jmp
les
add
cmp
insb
lea
lahf
add
sbb
mov
ret
sbb
fistl
test
sahf
leave
in
roll
dec
pop
sub
or
mov
pop
std
int3
sbb
rolb
leave
sub
imul
sub
push
negb
xor
xchg
lock
pop
pop
jmp
addps
fimull
or
ds
int3
jne
inc
jg
pop
adc
sti
scas
xchg
dec
out
mov
sarl
mov
adc
jg
rolb
xor
push
mov
ret
lcall
add
ret
in
pushf
xchg
movsl
mov
in
test
jge
or
stos
adc
dec
jo
cmp
adc
stc
inc
dec
cmp
pusha
out
push
add
es
mov
xlat
mov
ds
fsubr
daa
ret
mov
ret
repz
fisttpll
adc
pop
bound
pop
fwait
pop
in
mov
insl
jb
xrelease
loope
movsb
push
mov
or
nop
push
insb
pop
aad
insl
dec
sbb
mov
pop
xchg
ss
leave
lods
jge
std
call
cmpsl
lret
ror
psubw
sti
repz
ja
test
ffreep
cli
js
and
fdivrp
pop
pop
jne
lds
cmp
imul
nop
mov
inc
mov
sub
mov
sub
adc
push
into
push
jbe
imul
dec
sbb
cs
pop
pop
and
mov
pop
sub
fsubrl
mov
rcll
sub
push
fldcw
adc
ljmp
mov
pop
ds
out
jo
xlat
dec
push
dec
mov
sbb
lahf
lret
fnsave
add
mov
bound
xor
arpl
sub
ret
outsl
imul
mov
std
pushf
inc
div
jb
js
in
cltd
mov
mov
test
add
sub
push
push
sti
jo
or
xor
imul
loopne
sub
in
inc
pop
jne
in
pop
and
xchg
call
out
adc
inc
mov
cmc
sti
andl
adc
or
in
jle
les
daa
dec
fidivrs
cmc
mov
pop
push
xor
inc
data16
sbb
sbb
ret
lock
add
je
jecxz
add
shrl
pop
and
cmp
popa
lea
fsub
mov
push
daa
add
mov
jae
adc
mov
outsb
clc
ss
scas
jno
jl
iret
jmp
fisubrs
ja
dec
mov
sbb
xor
inc
push
ljmp
xor
lea
jae
test
adc
sub
inc
push
xor
xchg
in
lock
not
scas
cltd
pushf
int
lret
cmp
xchg
mov
es
mov
fs
inc
addb
lds
jnp
or
rclb
pop
push
jl
mov
fcmovnu
sub
dec
mov
push
insb
pop
imul
lock
cvtps2pi
push
fsubs
shlb
push
and
dec
dec
rcr
loopne
or
jecxz
mov
outsl
in
cmc
push
jp
cld
movsb
push
xor
ds
inc
add
scas
mov
push
or
les
outsb
into
push
mov
or
jl
das
out
loopne
in
adc
pop
fistps
or
ljmp
and
movsl
pop
popa
out
ret
mov
add
stos
iret
shr
or
pushf
shl
insl
repnz
inc
or
scas
mov
adc
dec
push
rcrl
stos
rorl
sbb
cmp
js
test
sbb
adcl
inc
lcall
or
push
test
loopne
lods
es
loope
int3
push
mov
sbb
outsb
call
shl
adc
add
add
mov
push
addr16
and
stc
push
dec
dec
fdivs
add
xchg
movsb
sahf
scas
cmpsl
or
push
sbb
es
bound
js
xchg
repz
aam
lahf
aaa
cli
pop
sbb
xchg
xor
xchg
ret
dec
cmp
cmc
jle
test
dec
lea
repz
adc
mov
xlat
mov
cs
insb
xchg
lret
ljmp
sbb
xchg
cmpsl
jbe
testl
mov
imul
jg
sti
test
cltd
mov
mov
xchg
notb
and
sbb
cmp
pop
filds
and
cli
cmp
mov
jecxz
lahf
cmp
dec
adc
sub
fldl
adc
sbb
mov
aam
fldt
jnp
fs
lods
jp
mov
xchg
jne
ds
sbb
xor
xchg
sti
inc
pop
das
fmulp
mov
add
push
pop
insb
aad
jg
mov
cltd
push
mov
shrl
pop
inc
inc
test
sbb
push
mov
jno
push
push
test
mov
sti
and
loope
icebp
test
test
cmp
xlat
adc
lret
jle
xchg
loopne
shrb
lahf
stos
push
cmp
push
out
cmpl
clc
xor
inc
jnp
dec
sbb
xor
insl
adc
imul
rcl
ret
dec
jl
stos
or
nop
mov
iret
ret
xor
scas
adc
pop
jp
sbb
cwtl
shr
jno
jge
sbb
xchg
adc
mov
fiadds
lods
sbb
dec
nop
das
in
clc
movsl
inc
fnstcw
inc
leave
aad
add
mov
push
cmp
mov
gs
mov
lret
lea
les
stos
dec
jmp
adc
cs
fnsave
inc
stos
mov
xor
push
sbb
pop
test
push
sub
fdivp
imul
mov
cli
repz
pop
adc
mov
mov
jae
add
sahf
lcall
out
fs
fnsave
test
fstpl
inc
data16
notl
dec
xor
loop
movsl
fimuls
inc
xor
adc
and
dec
mov
movsl
shrl
jno
inc
popf
arpl
fwait
or
inc
and
jle
clc
out
and
pop
adc
xchg
loopne
jne
pop
stc
in
call
hlt
in
push
jne
jecxz
je
fs
loop
mov
daa
xor
insb
out
or
imul
loope
fs
mov
cmc
inc
sbb
xor
lock
divb
jle
adc
jo
rorl
popa
aaa
xor
push
std
xchg
outsb
in
mov
cs
cmpsb
insl
jnp
jnp
test
dec
mov
jb
xor
mov
js
call
sub
push
das
adc
insl
and
xchg
and
fbstp
std
nop
lret
inc
inc
cmp
add
in
daa
movl
mov
nop
hlt
icebp
push
mov
cli
push
sbb
sahf
inc
loope
push
call
popf
or
iret
jmp
ret
in
push
or
js
sbb
mov
jno
loop
cmp
scas
inc
lahf
xchg
cmp
icebp
cltd
push
sub
sub
add
scas
mov
inc
push
icebp
dec
outsl
fstl
xchg
xchg
iret
int
mov
sbb
xchg
lds
stos
aas
sbb
inc
mov
testl
lods
fsubl
pop
xchg
sub
fld
or
jecxz
loop
mov
xor
sbb
inc
mov
movb
mov
cmpsl
mov
add
outsb
jmp
shr
jmp
mov
mov
pop
ja
leave
mov
in
jns
stos
scas
dec
cmp
pop
lds
in
inc
mov
out
ret
mov
inc
testb
jp
call
popa
stos
leave
cmp
je
mov
popa
fcmovb
jne
je
inc
xchg
adc
out
cmp
mov
loope
movsb
sbb
outsb
jmp
xchg
aam
mov
inc
lea
fwait
jae
lea
sti
clc
in
push
dec
or
push
out
jns
fisttpll
push
inc
popf
sbb
scas
inc
loop
daa
popf
push
popf
les
cli
inc
fbstp
popa
pop
cmpsb
dec
nop
push
leave
push
cwtl
iret
xor
pop
fwait
rcl
imul
add
push
xchg
stc
sti
jns
or
inc
push
xor
lret
ret
sbb
jne
mov
or
lret
enter
pop
jmp
int
cmp
xor
cmp
lret
mov
mov
lea
and
xchg
cmp
out
ret
mov
xor
test
cld
arpl
pop
push
jl
sbb
or
cmp
jle
mov
add
mov
stc
xor
dec
lcall
or
iret
and
fidivrs
loope
jnp
scas
addr16
fnstcw
fldcw
lods
pop
fists
sti
mov
xor
mov
cmp
fs
nop
out
lods
mov
xlat
cmp
mov
call
enter
push
sbb
insl
xor
addl
decl
cmp
dec
iret
arpl
loope
scas
in
cld
gs
or
adc
add
cld
mov
faddl
leave
iret
inc
jne
mov
loopne
lahf
movsb
and
arpl
scas
or
cwtl
test
test
dec
movb
shlb
rclb
test
lock
call
ret
jle
imul
mov
or
mov
lock
lcall
mov
fnclex
std
mov
call
xchg
pop
popf
fwait
pop
or
xchg
xlat
xlat
jae
in
imul
inc
mov
mov
or
adc
stc
push
jg
and
add
or
insb
mov
les
pop
leave
scas
fisttps
and
rolb
add
adc
loopne
sbb
xchg
std
or
cmpsb
cmp
aad
mov
scas
cmc
mov
xchg
mov
lahf
jmp
xchg
or
fcomps
aaa
add
lcall
hlt
loopne
cmpsb
ffreep
call
daa
xor
dec
popa
adc
idivb
repz
sar
ret
cmp
fucomp
mov
ss
or
pop
sub
pop
push
imul
out
outsb
sub
das
push
scas
jbe
jle
in
xchg
roll
mov
mov
and
push
std
bsf
sub
cmp
es
call
jg
sbb
mov
lds
push
and
dec
fldcw
mov
mov
rcrl
int
mov
and
or
or
adc
xorb
sub
xchg
mov
jb
sti
mov
pusha
mov
mov
lret
and
fwait
in
sub
pop
xor
lcall
add
jnp
pushf
shll
push
sahf
popf
and
jbe
mov
jge
popf
mov
mov
mov
movsl
in
aas
enter
and
push
add
call
jl
rcrb
xchg
scas
es
cs
xchg
insb
mov
sbb
sbb
push
jno
cmc
cwtl
into
lahf
popf
pop
je
sbb
pop
jbe
adc
repnz
mov
push
repnz
shlb
mov
add
test
dec
add
dec
lea
dec
xchg
shll
pop
push
or
push
or
popa
mov
aaa
test
inc
or
cmc
lods
mov
out
jns
mov
lcall
and
adc
push
mov
stc
pop
xchg
dec
mov
cmp
cmp
jg
popf
xor
jmp
mov
cmp
mov
push
push
pop
nop
sub
add
xor
call
cmp
jge
sbb
scas
fidivl
or
sbb
dec
xor
inc
mov
adc
cmpsl
push
jle
shl
dec
mov
or
pop
jmp
add
sbb
sub
fisttpll
jmp
lds
cwtl
mov
dec
aam
dec
pop
lds
jb
mov
mov
xor
sbb
jp
jns
cli
or
inc
sub
lret
push
lcall
pop
add
inc
popa
pop
jns
js
hlt
xor
add
jmp
iret
aas
mov
testl
test
imul
inc
dec
ss
hlt
cld
pop
pusha
jnp
pop
and
ds
mov
push
test
or
sarl
clc
jl
inc
adc
lret
arpl
mov
xchg
sub
lcall
xchg
outsl
imul
mov
pusha
cmpsl
test
ret
cld
add
push
mov
jb
push
jns
push
lfs
repz
lea
fisttpll
adc
push
pop
adc
mov
push
adc
les
jnp
dec
xchg
out
pushf
sub
cld
xor
mov
je
enter
mov
push
push
dec
xorb
and
aad
pop
cmpb
lock
je
adc
xor
push
out
push
mov
das
imul
xchg
mov
fisttps
pusha
test
xorl
mov
and
jno
pop
and
push
sub
ds
addl
push
lods
mov
mov
mov
xchg
pop
xchg
mov
lock
sub
mov
push
iret
jbe
out
xlat
shr
test
push
push
std
movsb
mov
out
cwtl
lret
stc
dec
add
adc
mov
iret
push
shl
call
ret
bound
mov
sarb
xchg
add
into
or
mov
rcrb
mov
xor
fidivl
aas
mov
in
nop
adc
cs
fcmovb
mov
mov
fistl
xchg
enter
inc
inc
addl
outsb
and
adcb
or
mov
fnsave
hlt
mov
xchg
dec
and
or
and
bound
jno
lahf
adc
out
mov
cs
add
push
lret
pop
arpl
sub
inc
xor
test
das
xchg
sbb
cmc
gs
or
fs
xor
cld
data16
das
and
push
sub
das
jns
data16
mov
lcall
mov
lds
jg
sub
push
loope
sbb
cwtl
cwtl
js
or
dec
and
and
sub
rcrb
sbb
adc
outsl
sbb
lcall
push
fmull
push
add
mov
call
es
xor
fbld
mov
sbb
aam
push
repz
jns
js
pop
cmpsl
nop
sbb
cmp
inc
add
xchg
scas
ret
mov
scas
sarl
arpl
adc
ret
xchg
out
int
sub
mov
mov
in
mov
into
mov
jb
xchg
sti
divb
pop
cmp
jns
sub
xchg
dec
push
jecxz
xor
xor
and
mov
enter
cmc
cmpsl
jns
out
sbb
mov
push
arpl
cmp
out
push
popa
and
mov
lahf
addr16
movsl
pusha
stc
add
fwait
jle
xchg
int3
roll
cmp
stos
leave
or
dec
dec
cwtl
lahf
imul
fidivrs
sub
bswap
mov
pop
ljmp
inc
push
or
cmp
je
imul
cs
cltd
lret
std
outsl
aam
rorb
inc
in
pop
jmp
imul
xchg
test
je
mov
push
xor
rcrl
xchg
icebp
mov
dec
adc
test
in
jo
ljmp
sub
xor
mov
addr16
lahf
cltd
mov
ljmp
out
call
adc
js
daa
push
xor
xor
mov
sbb
add
pop
dec
push
lds
sbb
fistps
dec
stos
scas
mov
in
push
es
add
add
insb
rorl
lahf
sbb
push
insl
dec
test
add
inc
stos
push
sub
adc
fildll
cmpsl
xchg
sub
ja
sub
push
adc
push
mov
mov
xchg
int
and
loope
adc
mov
mov
out
insb
xor
or
mov
jb
jo
cmp
jp
mov
dec
outsb
or
adc
lods
xor
popa
lea
jmp
loopne
or
xor
ja
test
les
push
inc
inc
add
lret
es
sub
sub
xchg
mov
sub
adc
lds
jge
adc
sub
jo
push
jmp
mov
xchg
dec
add
pop
vpsubd
push
out
scas
insl
inc
test
xorb
out
fs
test
push
cmp
nop
call
fstpt
mov
pop
rolb
xlat
mov
cli
cmpsl
push
shl
jns
add
test
sahf
scas
rcll
neg
pop
insb
mov
lret
mov
push
push
movsb
call
inc
rolb
mov
add
sbb
popa
pop
aas
outsl
jnp
into
mov
aam
mov
xor
mov
mov
iret
mov
test
out
cmc
jecxz
push
inc
sbb
cmpsl
xchg
add
lret
xor
testb
mov
adc
adc
adc
dec
clc
add
pop
and
stos
fdivs
sbb
add
xor
pop
inc
adc
fdivl
scas
out
push
jne
jge
pop
inc
ror
stos
lock
lds
dec
jmp
ja
aam
mov
dec
xor
push
inc
mov
addr16
dec
neg
add
repnz
nop
jl
inc
jg
add
ljmp
pop
pop
mov
addl
movb
sbb
add
add
enter
int3
inc
fcomi
sub
loopne
iret
dec
jo
popa
jae
push
push
shrl
mov
sbb
jb
movsl
sbb
pop
jge
cmp
testl
push
pop
ds
fcompl
jecxz
sbb
mov
pusha
xchg
loopne
stos
mov
jecxz
jg
aam
lcall
dec
rorb
and
pop
ljmp
testl
jle
jp
mov
push
fldcw
ds
lret
fs
daa
rcrl
and
loope
out
mov
mov
xchg
sbb
shrb
cmp
push
ljmp
and
jg
repnz
sbb
push
mov
int
cmc
cmp
fnsave
insl
jb
mov
nop
pop
daa
inc
xlat
mov
adc
cmp
enter
cwtl
jle
jb
pop
jle
lahf
jmp
push
loopne
push
aam
mov
adc
lds
pusha
shlb
in
xor
and
mov
hlt
ror
push
sbb
inc
cmc
adc
stos
add
call
or
xor
addb
mov
xchg
popl
ljmp
nop
inc
cmpl
test
pop
and
lcall
jne
sub
mov
pushf
out
in
mov
jb
or
adcb
fwait
and
std
cltd
leave
fchs
add
add
test
cmp
mov
aam
les
fwait
out
stc
mov
addr16
ja
addb
inc
out
xchg
aas
add
cmp
sbb
or
mov
xor
xor
pop
push
and
mov
mov
lock
andl
sbb
push
shlb
mov
or
arpl
test
es
push
adc
test
adc
aam
push
repz
mov
xlat
jbe
ja
stos
iret
icebp
lds
dec
out
cmp
lret
xchg
mov
cmc
pop
adc
je
out
sarb
lods
faddl
xchg
sbb
loope
or
subl
sbb
inc
shll
cmc
andb
mov
out
mov
jl
int3
mov
pop
sti
xor
mull
xlat
test
and
fnstsw
cwtl
or
xchg
sub
ja,pt
pop
test
adc
insl
out
pop
lret
inc
dec
jb
or
and
sub
push
fdivl
cmc
xchg
and
xchg
jecxz
sub
mov
push
insb
fcmovnu
add
fs
pop
xorb
repnz
ljmp
mov
icebp
inc
ret
xchg
fsubs
test
lahf
mov
pop
cli
adc
push
bound
int
xor
ja
and
mov
repz
jno
hlt
movsb
add
dec
int
clc
jbe
mov
loopne
outsb
add
popf
push
dec
sub
cmp
fwait
ja
shrb
sbb
pop
pop
mov
push
aaa
cmp
or
je
pop
fs
cmc
nop
cs
mov
push
mov
sbb
cmp
and
adcl
mov
mov
push
mov
js
rcrl
push
push
mov
dec
cmpsl
xor
clc
pop
lds
push
hlt
and
int
icebp
sub
mov
fstpl
negl
inc
mov
and
daa
subb
repnz
inc
adc
shlb
repnz
or
sbbb
and
inc
out
mov
ds
dec
repz
lods
ja
mov
mov
mov
jno
clc
popa
jae
pusha
and
sub
daa
loopne
imul
in
mov
inc
cmp
sbb
movsb
insl
pop
jmp
xchg
or
xchg
sub
adc
test
adc
inc
divl
jl
enter
out
fcomp
pop
jno
mov
adcb
pop
es
insl
sub
sub
mov
repnz
out
xlat
out
mov
or
xchg
repz
int3
pop
and
stc
inc
cltd
mov
aas
and
insl
testl
hlt
mov
jmp
loopne
mov
cmpsl
ljmp
clc
lret
pushf
inc
adc
in
mov
repz
sub
mov
and
jbe
mov
cs
jmp
mov
mov
push
pop
clc
xchg
rcrb
mov
rorb
jo
xchg
shl
and
dec
sarb
nop
push
push
mov
adc
mov
jecxz
add
cli
mov
lods
mov
pop
xlat
out
cmp
jae
inc
add
push
dec
clc
inc
mov
int3
sub
std
icebp
cmp
and
xor
cltd
stc
cmp
dec
gs
loopne
iret
xchg
decl
mov
and
mov
adc
sub
sub
add
mov
dec
pop
shrl
sbb
push
xchg
push
outsb
push
mov
fisubl
inc
mov
pusha
ja
stos
in
fbld
push
push
mov
add
mov
adc
or
mov
add
std
or
cmpsl
cld
push
xor
or
sbb
das
pop
mov
cmp
es
pop
mov
jne
in
idiv
mov
xchg
aad
adc
repz
pop
lea
xor
cmp
mov
lods
mov
enter
dec
movsb
push
and
dec
adc
xor
dec
out
jns
in
dec
mov
in
andb
and
jp
sub
popf
sub
sub
jae
sbb
sbb
aas
pop
call
push
mov
cmc
test
cmpsl
mov
repz
or
popa
push
dec
cmp
jmp
and
and
in
and
loope
movsb
ret
add
dec
push
cmp
mov
sarl
pop
or
xchg
out
scas
arpl
inc
in
pop
push
mov
es
push
xchg
cld
xchg
lahf
mov
xor
imul
mov
adc
xor
push
push
test
push
inc
cmp
mov
sbb
lods
xacquire
jnp
into
pop
adc
mov
repnz
sbb
outsl
push
jle
dec
adc
mov
sbb
mov
out
mov
push
mov
adcl
jp
jp
cmp
mov
icebp
xchg
inc
mov
sbb
orb
lods
mov
movsb
out
jmp
push
mov
bound
aad
mov
xor
das
inc
jo
insb
in
and
inc
pop
jg
push
jecxz
sbb
inc
mov
and
pop
sbb
jo
sti
jge
in
cmp
iret
jp
dec
and
sub
loop
inc
js
mov
jnp
das
xchg
in
int
xchg
add
ljmp
or
push
and
or
outsl
cltd
out
cmp
in
push
xor
add
bound
xor
cmp
push
stos
ljmp
mov
push
xor
sahf
pop
js
iret
xor
add
dec
dec
mov
cmp
mov
jge
decb
mov
push
insb
push
aas
and
test
imul
or
xchg
push
int3
out
in
xorl
inc
or
add
inc
lock
aam
stc
inc
inc
inc
fdivr
adc
inc
sub
gs
adc
xor
sub
jae
add
imul
cmp
dec
inc
xlat
stos
pop
ret
std
pop
lret
pop
loop
cltd
pop
repz
insb
inc
out
adc
insl
das
adc
push
rorb
adc
xchg
lret
and
dec
xor
mov
lods
adc
imul
pop
dec
dec
sbb
dec
mov
in
lea
in
call
pop
mov
fwait
cmp
pop
jg
dec
nop
inc
push
jnp
jge
jle
dec
sbb
leave
sarb
mov
int
hlt
je
outsl
pushf
cmpsb
pop
cmp
outsl
pop
repnz
cmp
int
mov
inc
jo
popf
int
lock
dec
dec
popa
push
sub
xlat
or
jecxz
sti
push
xor
or
mov
or
das
pop
out
jg
mov
push
pop
mov
cld
orps
sbb
pop
out
movsl
pop
call
std
add
mov
es
sub
and
test
pop
insl
mov
out
cmp
inc
in
xlat
xchg
mov
pop
jne
adc
jp
test
repnz
inc
lahf
push
ret
ret
daa
sbb
mov
cmpsb
out
ja
test
repnz
push
mov
ret
jns
in
cmp
insl
mov
or
sub
cmp
aam
shr
sub
dec
jecxz
imul
add
sbbb
xchg
mov
cmp
jnp
and
mov
test
into
jmp
repz
push
cmc
or
lret
inc
jnp
sbb
adc
inc
push
scas
cmc
or
movsl
icebp
out
lea
mov
testb
and
adc
xor
jl,pt
xchg
pop
inc
into
in
inc
adc
pop
and
cmp
dec
jbe
stos
add
add
das
jae
sbb
insb
iret
in
push
invd
in
or
aad
inc
push
clc
jmp
fwait
enter
mov
ficomps
ds
xchg
into
sbb
xchg
xlat
add
mov
out
aaa
je
repz
xchg
mov
addb
addr16
cltd
pop
mov
adc
int
gs
out
and
pop
mov
popl
mov
cs
dec
jg
nop
jecxz
out
add
adc
xchg
lods
je
insb
sbb
adc
push
xor
and
xor
pop
xchg
jl
jmp
insb
jp
mov
mov
inc
out
jns
inc
xor
mov
mov
pop
xchg
sbb
or
sub
inc
inc
sub
js
stos
dec
roll
leave
mov
lret
fsubp
sub
inc
push
loop
and
imul
bound
cld
popa
and
and
jns
cmp
filds
lret
adc
xchg
aam
adc
lcall
mov
lods
mov
jecxz
aad
dec
or
es
push
dec
add
jns
inc
add
out
sti
xchg
add
xor
ret
dec
push
fildl
cmp
adc
jle
dec
xorb
cmp
movb
icebp
int
inc
mov
rorl
push
jmp
or
call
add
mov
mov
idivl
mov
pusha
jmp
out
bound
xor
mov
jg
test
pushf
repz
std
gs
mov
xor
xor
enter
push
inc
fwait
pop
inc
pop
les
roll
xchg
sbb
not
imul
push
add
test
add
add
inc
inc
cmp
adc
es
push
out
fcoml
pop
mov
xor
add
add
or
lods
in
movsb
mov
scas
fsts
push
imul
subb
xchg
jecxz
xorl
sub
cmpsl
div
cwtl
push
pop
or
jbe
xor
test
scas
add
dec
pop
imul
inc
cwtl
adc
test
mov
cmp
mov
mov
fstl
mov
jbe
push
cmp
inc
cwtl
dec
pop
jmp
aam
adc
mov
adc
xor
lods
jbe
sti
and
xor
in
fsub
mov
adc
sub
jb
filds
pop
pop
or
add
mov
data16
mov
aas
jbe
daa
dec
outsl
pop
sub
sarb
stos
mov
imul
jecxz
movsl
fwait
or
aam
and
shrl
and
jecxz
push
pusha
jno
push
fisubrs
and
dec
push
cmp
xchg
fsub
cmp
cltd
sub
cwtl
dec
sahf
shll
push
mov
push
and
dec
into
push
fs
cs
out
lcall
sbb
push
xor
and
out
aam
pop
arpl
sub
cmp
clc
push
nop
xchg
addl
daa
in
enter
mov
repnz
dec
stc
add
neg
jp
sub
xchg
scas
or
mov
in
mov
lcall
lea
and
or
inc
pop
repnz
out
push
xchg
xchg
pop
cs
push
and
test
cmp
push
inc
fcoms
mov
dec
rorb
jecxz
push
lcall
data16
or
ljmp
push
xchg
pop
push
mov
lock
mov
mov
aam
std
lahf
fisubl
aad
aaa
hlt
scas
inc
loopne
push
inc
inc
mov
cmp
lock
movsl
jecxz
cmp
mov
jle
mov
xchg
daa
jmp
lock
ficoms
pop
push
and
and
inc
cli
pop
ljmp
dec
dec
cmp
jo
xor
arpl
scas
aad
inc
sbb
std
test
mov
insl
iret
fidivs
cli
xchg
and
pop
shlb
inc
rcrb
sub
bnd
or
sbb
and
add
fidivl
mov
fdivl
punpckhbw
mov
add
or
leave
pop
mov
jecxz
lret
addl
cmpsl
dec
sub
es
daa
jle
inc
shl
xor
xchg
cli
negl
aad
mul
push
loop
mov
pop
or
into
mov
cmpsb
aad
std
cli
mov
add
cmp
xchg
int3
and
jno
jle
adc
jns
pop
pop
sbb
inc
push
mov
dec
adc
movsl
jns
rorb
gs
push
and
add
repnz
inc
mov
testb
lods
pop
mov
adc
adc
push
rcrl
sti
in
mov
push
shrl
ret
insl
inc
fidivs
data16
mov
mov
sahf
jge
test
test
push
adc
jecxz
push
cltd
scas
je,pt
mov
out
mov
insl
and
and
dec
or
rclb
sub
lods
pop
add
mov
sbb
clc
out
jnp
xor
nop
bswap
int
in
pop
sbb
dec
das
inc
or
mov
or
cmp
inc
dec
pop
stos
xor
cmp
pusha
mov
cmp
sahf
pop
in
enter
xchg
mov
rorl
sbb
jmp
push
mov
xor
test
dec
xchg
xchg
call
jb
push
sbb
add
testb
mov
stc
cwtl
inc
test
and
jle
mov
cmp
mov
inc
add
pop
push
add
sub
cmp
fimuls
insl
mov
dec
mov
outsb
loopne
push
int
xor
fidivs
mov
lods
shrl
das
or
arpl
and
icebp
pushf
jb
in
mov
aam
sar
leave
idiv
icebp
cmc
idivl
or
stc
fucomp
ljmp
outsb
out
lret
and
pusha
and
jae
idivb
mov
and
pop
sbbb
lcall
daa
jle
clc
movsb
nop
xchg
mov
out
addr16
xor
cltd
jmp
and
sub
hlt
ret
cmp
jp
adc
add
fldcw
iret
ja
in
jecxz
inc
cs
mov
stos
xchg
stos
iret
pop
popf
out
stos
inc
mov
pop
xchg
dec
dec
and
push
pop
jbe
out
adcb
mov
inc
and
in
add
cmp
or
cmp
or
jg
lret
xchg
inc
xor
fisubrl
jle
cmp
pop
pop
adc
loop
int
adcb
inc
pop
es
add
les
mov
push
sbb
fsubrl
push
cs
les
cld
adc
or
rorb
lds
cltd
fcoms
clc
fidivrs
xchg
and
jne
mov
jne
or
out
ret
inc
rolb
aam
testl
and
in
mov
add
incl
fwait
sub
xlat
test
inc
notb
shr
pushf
jp
pop
call
dec
bound
xor
mov
jnp
int3
push
hlt
hlt
pop
lcall
ja
insl
xor
adc
daa
cmp
stc
ss
decb
sbb
dec
xchg
ret
jmp
cwtl
cmp
in
inc
lock
push
std
pop
or
mov
fisttps
mov
cmp
out
and
pop
sahf
lret
mov
in
sub
jb
sbb
scas
scas
ret
push
into
add
or
outsl
fcom
icebp
lods
nop
xchg
add
roll
loop
into
popf
pop
push
adc
stos
adc
in
clc
jns
in
jo
mov
xor
mov
pusha
adc
in
fwait
das
xchg
imul
pop
add
mov
dec
aad
sub
jns
and
pop
add
push
lods
pop
das
mov
iret
mov
enter
int
cmp
inc
mov
negl
inc
push
add
fcmovnu
dec
in
jno
push
test
xchg
lods
lret
jnp
leave
insb
scas
stc
nop
dec
int3
xor
fiaddl
es
or
pop
mov
dec
jp
sbb
outsl
pushf
jge
enter
xchg
xor
inc
int
xchg
dec
dec
inc
add
xlat
inc
mov
push
cmp
cmp
ja
ror
or
xchg
sarb
mov
mov
sub
out
jle
aad
repnz
jg
push
pushf
fnstsw
aaa
daa
jmp
stos
outsb
or
lahf
xchg
adcl
xor
xor
and
dec
mov
dec
fcoml
mov
jp
arpl
lret
fmul
mov
sti
inc
out
pop
call
mov
stos
test
xchg
shl
sub
push
lods
cmpsl
mov
jecxz
int
mov
out
lret
popa
mov
cli
jnp
in
jl
or
xchg
xor
pop
pop
aaa
repnz
xchg
mov
mov
out
lret
mov
pusha
xor
in
add
outsl
popf
inc
dec
dec
jg
insl
jns
and
mov
mov
loop
imul
dec
cmp
fnstsw
into
push
xchg
lret
stc
hlt
or
scas
push
repz
mov
sbb
test
aad
sbb
sub
jno
ja
mov
lea
and
jbe
das
ret
jns
aas
xchg
popf
rcll
xchg
stos
adc
jb
jge
pop
dec
movsl
nop
icebp
push
xlat
and
rcr
mov
cmp
and
pushl
inc
test
cld
cmpsb
scas
out
test
xor
xchg
out
test
addr16
push
sub
lcall
pop
stc
dec
add
push
sbb
cmpsb
fnsave
cmpsl
imul
pop
ficomps
add
imul
lods
hlt
stos
mov
adc
cltd
mov
cmp
data16
leave
ss
outsb
xchg
ljmp
test
push
cmp
mov
sbb
adc
cld
cmpsl
mov
xchg
int
inc
mov
jno
jg
push
sbb
gs
pop
ror
jl
aam
inc
iret
xchg
cli
in
lods
movsb
pop
cmc
cmp
ficoms
xor
dec
mov
cs
sbb
sbb
xchg
dec
ror
data16
jge
subb
mov
pushf
jb
gs
inc
xchg
mov
and
mov
sbb
xchg
and
and
fwait
pop
pop
in
jg
setg
jbe
mov
add
and
fadds
xor
lcall
fisttpll
jns
cmp
sub
adc
push
leave
jmp
jbe
daa
addr16
sbb
dec
ljmp
fidivl
iret
jo
xor
mov
mov
fcompl
mov
push
sbb
jp
ja
add
and
lds
rol
xchg
aas
ret
mov
sub
pushf
aas
jne
or
mov
pop
loopne
subl
sti
cmovno
andl
mov
dec
js
jb
xor
pop
addr16
outsb
pop
fidivs
push
jge
add
jo
mov
leave
pop
or
cltd
or
xchg
pop
push
push
pusha
pop
inc
push
shlb
gs
mov
into
inc
jecxz
pop
jno
pop
push
imull
adc
ljmp
mov
ficompl
fwait
fs
or
jl
mov
sbb
mov
and
pusha
fiaddl
call
cmp
mov
fwait
iret
or
pop
enter
adc
xor
adc
jmp
and
loope
inc
leave
cmp
loope
ja
frstor
repnz
pop
fdivrl
mov
nop
loopne
xchg
aad
movsb
mov
incl
mov
in
mov
dec
imul
aaa
or
mov
jmp
aad
pop
leave
dec
roll
mov
xor
loope
bound
xor
jne
dec
mov
xchg
dec
mov
clc
or
rcr
sub
int3
jle
loope
push
lret
fadds
cmp
dec
lahf
sbb
dec
ret
fldt
xchg
add
ret
arpl
mov
push
into
add
inc
insl
jo
cmp
inc
std
push
mov
lds
or
scas
add
fisubs
cltd
inc
cmp
sbb
or
cli
sbbb
std
addr16
pop
test
stc
mov
scas
test
int3
or
nop
adc
push
pop
fcom
jno
mov
add
cmpsl
sub
push
pop
push
push
mov
out
shll
test
out
mov
jmp
xchg
mulb
dec
shrb
cmpl
or
push
shl
xor
mov
inc
mov
imul
enter
test
mov
sub
jno
shlb
out
das
cld
add
mov
testb
mov
xor
lock
add
dec
mov
mov
test
inc
mov
pop
dec
pop
insl
cmc
dec
sub
shll
jmp
jmp
mov
scas
fs
cld
or
fwait
cmp
hlt
mov
in
pusha
popa
stos
adc
cwtd
movsb
orb
xchg
inc
push
int3
xchg
pop
xchg
ds
jnp
xor
xor
test
cmp
lahf
cwtl
pushf
in
push
dec
punpcklbw
pop
popa
jns
mov
push
loopne
and
aaa
cmp
mov
scas
ds
jg
or
mov
cmpsl
rolb
repnz
dec
mov
and
call
mov
orb
add
in
push
shl
push
adc
push
push
mov
movsb
inc
orb
xchg
movsl
xchg
jp
jns
aad
js
repz
jmp
cmp
xchg
scas
and
xor
xchg
xchg
sub
cmp
push
ficompl
mov
cld
loop
pop
mov
sub
mov
dec
and
mov
jge
lds
sbb
pop
mov
movsb
test
cmp
repz
mov
ficompl
inc
shrb
push
fsubs
icebp
and
cmp
outsb
xchg
adc
mov
cld
push
mov
xchg
inc
test
call
sub
xor
sahf
fimull
dec
lods
xlat
out
in
bound
cmpsb
ss
and
mov
xchg
add
sbb
push
xchg
xchg
dec
ret
leave
call
movsb
out
cld
sets
rorl
add
mov
or
push
add
sbb
push
inc
adc
lcall
rcl
xchg
mov
shl
cwtl
and
fsubs
xor
adc
inc
mov
add
leave
push
xor
mov
push
call
jg
dec
adc
xor
movsb
loopne
aad
adc
push
test
fdivrs
inc
in
scas
mov
gs
jne
and
mov
jno
clc
jnp
xor
daa
or
inc
or
movsl
sbb
inc
pop
mov
int
addr16
stos
outsl
adc
pop
mov
sub
bound
mov
or
sub
push
cmc
jb
movb
cmc
jae,pn
jmp
sarl
pop
sub
or
jp
movd
xchg
addl
xchg
rcll
shlb
repnz
xlat
clc
xor
aam
xchg
and
pop
ret
push
pop
xor
push
enter
mov
cltd
inc
icebp
ret
mov
out
push
std
js
inc
cmp
and
sub
and
call
mov
xchg
add
popa
lahf
pushf
xor
sub
push
idivb
ficomps
imul
dec
lea
lds
inc
pusha
push
iret
jb
xor
testb
push
mov
mov
out
xor
cmp
jbe
std
adc
jg
cmp
out
in
dec
push
jo
xchg
cs
into
mov
shll
les
js
out
clc
inc
inc
mov
add
dec
jbe
mov
out
and
push
sbb
push
icebp
mov
inc
ret
into
push
cmp
push
or
mov
fisttps
jle
cmpsl
xor
cwtl
cs
sub
test
ret
xchg
dec
ja
pushf
sub
outsl
sub
xchg
jge
andl
out
jae
out
and
test
aas
pop
stos
cmpsl
push
and
paddusb
or
mov
es
cmpsb
rorl
and
jmp
add
xchg
das
iret
lret
lds
xchg
mov
hlt
cli
imul
mov
sbb
clc
in
loopne
jle
arpl
les
mov
jnp
rcrb
inc
jmp
adc
insb
ret
stos
orl
scas
mov
cmp
mov
and
notl
sbbl
cwtl
adc
repnz
cs
sahf
hlt
push
fs
stos
stc
sbb
lahf
hlt
lret
arpl
cltd
xor
ds
mov
sbb
add
push
dec
aam
addr16
mov
lcall
push
adc
inc
dec
ja
mov
shlb
push
scas
pop
inc
dec
inc
fmuls
mov
jecxz
or
cmc
int
and
or
and
xor
jnp
xchg
pop
int
jl
mov
jno
filds
jg
or
addr16
cs
repz
dec
mov
mov
ret
pop
sub
stc
push
shrl
adc
inc
dec
mulb
adc
adc
push
jb
or
gs
ljmp
aad
xchg
fisubrl
xor
shrb
pushf
test
mov
out
bound
push
scas
pop
dec
orl
sbb
sbb
xlat
adc
mov
filds
loop
aam
sub
daa
push
add
mov
xor
xor
jmp
xchg
and
jnp
jnp
push
ss
pop
mov
shlb
push
ljmp
test
xor
pop
sbbb
sti
dec
sbbl
dec
in
addb
jnp
enter
addl
xor
psubusb
pop
test
push
aam
movsb
pusha
lahf
aas
lds
mov
cmp
scas
lods
dec
dec
fstl
push
mov
sbbb
mov
bound
lods
rcrb
lahf
pop
test
sub
dec
jp
mov
insl
lds
stc
fs
jmp
jecxz
out
jns
sub
in
push
into
sub
adc
mov
fstl
mov
adc
imul
testl
pop
fistl
mov
jmp
jae
mov
sub
dec
push
sbb
add
inc
pusha
pop
pop
imul
aaa
xor
mov
xchg
push
xchg
hlt
in
lock
negl
xchg
in
repnz
dec
xor
or
mov
mov
sbb
pop
lcall
je
lods
inc
mov
cmp
xchg
js
push
jb
bound
mov
xor
fistpll
aam
lods
add
push
movsb
xor
and
or
scas
sub
inc
out
adc
int3
add
xor
mov
add
mov
xor
cwtl
jmp
daa
pop
mov
push
pop
test
xchg
rclb
arpl
std
loopne
movsb
lods
mov
sbb
and
xchg
dec
aam
loope
and
in
adc
fstl
sub
lds
cwtl
push
fbld
inc
mov
fisubrs
pop
mov
jne
mov
pop
cmp
mov
pop
test
cmpsb
out
dec
je
push
inc
test
mov
push
mov
jns
insb
addr16
sti
subb
jne
dec
ljmp
push
sub
cmpsb
jg
ljmp
out
icebp
cltd
xor
mov
ficompl
les
and
enter
daa
lock
imulb
lds
loope
mov
popa
sbb
imul
pop
mov
sarb
inc
imul
lret
ret
stc
pop
push
jmp
outsb
fnsave
or
int
lea
push
aam
dec
dec
cmp
fwait
test
repz
jbe
fneni(8087
push
cld
out
jecxz
push
pusha
xor
adc
lock
push
loop
mov
push
mov
push
xchg
or
rcll
pop
jae
mulb
or
xchg
shll
and
cmpsb
in
stos
pop
data16
popf
mov
fnstsw
mov
loope
outsl
mov
mov
adc
jb
arpl
hlt
inc
imul
xchg
mov
jge
mov
mov
xchg
mov
scas
pop
repnz
loop
adc
testl
clc
sbb
mov
add
lcall
push
repz
ret
loopne
adc
adc
and
xchg
cmp
loopne
inc
push
jmp
mov
push
cmc
jno
lret
push
in
mov
int3
jl
bnd
or
mov
xlat
and
mov
ret
mov
xor
pop
stos
in
inc
xor
sub
pop
add
clc
aam
xorl
outsl
adc
xchg
push
ja
lahf
mov
out
push
jp
lret
dec
lds
sub
adc
loopne
lret
jnp
add
aad
js
lcall
and
sbb
mov
cmp
fiadds
add
and
ret
stc
adc
sti
cmp
in
sub
sbb
inc
lcall
mov
and
movsl
xor
mov
jno
mov
xchg
mov
jnp
test
and
pop
jecxz
insl
fidivrs
jae
jno
inc
add
pop
jge
pop
inc
outsb
cmc
dec
inc
enter
jecxz
push
fadds
jns
ja
incb
leave
lahf
pop
mov
sub
mov
xchg
clc
pusha
test
sub
add
int3
repnz
inc
xlat
inc
jne
inc
or
add
inc
cwtl
cmp
sub
cmp
in
cmpsb
xchg
xor
sti
pusha
dec
rcl
scas
push
insl
notb
cmc
das
cmc
mov
lods
mov
repnz
jnp
jo
leave
insb
jb
aad
push
jns
mov
fcmovnb
in
mov
lahf
adc
adc
test
and
jbe
mov
pop
and
iret
adc
and
mul
out
push
xor
cmpsl
test
and
insl
lahf
bound
push
pop
fldenv
lea
rclb
push
inc
mov
jo
in
pop
mov
sub
ds
leave
fisubrl
jle
mov
movb
or
push
imul
mov
xchg
das
mov
into
mov
mov
cs
out
int
or
fidivs
arpl
imul
lods
cmp
rolb
xchg
mov
rcll
sbb
std
and
adc
xchg
fldenv
pushf
imul
pop
pushf
mov
mov
dec
xchg
push
cli
lock
aaa
push
sbb
imul
movsl
mov
cmc
add
fs
in
sarl
xor
popa
ret
test
cmpsb
inc
xchg
mov
insl
mov
add
pusha
das
out
js
jns
jne
fsubrs
insl
icebp
out
mov
inc
mov
clc
add
dec
popa
xchg
lcall
inc
sub
cwtl
or
pusha
loop
mov
jae
push
mov
push
jae
mov
cmp
and
xchg
jl
outsl
or
or
jb
data16
or
and
mov
ja
call
xchg
rcll
xchg
dec
mov
mov
or
mov
movsb
clc
ret
ret
xchg
gs
xor
push
cmp
xor
pop
fcmovbe
cmp
mov
rcrb
scas
repz
jnp
lcall
scas
mov
scas
das
js
dec
jne
adc
jle
mov
mov
sbb
xor
xor
push
mov
cmp
and
sbb
mov
cmp
jne
pushf
je
insl
dec
pusha
adc
inc
loope
mov
mov
or
and
sbbl
popf
in
dec
ja
decb
push
jmp
sbb
pushf
push
enter
inc
xchg
xor
add
rolb
movsl
ja
pop
jae
mov
stc
adc
loop
cmpsb
inc
cmp
rorl
nop
or
jb
es
push
repnz
cmp
fldenv
push
cltd
add
neg
mov
loop
push
sub
aaa
mov
pop
pop
cmp
adc
out
call
loop
icebp
sahf
in
sarl
test
cwtl
sbb
mov
lods
jo
int3
xor
je
xchg
rolb
mov
inc
inc
fs
xchg
pop
mov
je
and
or
mov
cmp
rclb
stos
or
sbb
cmp
fildl
and
insb
xchg
out
mov
enter
xchg
dec
xlat
push
sub
jb
add
or
test
enter
xchg
cmp
mov
xchg
pop
mov
shrl
pop
loope
sub
cld
call
pop
popa
adc
jecxz
inc
nop
popf
dec
enter
adcb
xor
and
inc
inc
into
add
cwtd
dec
sbb
push
push
aas
imul
push
into
iret
jle
or
scas
add
sbb
cld
sbb
notl
mov
adc
in
popa
call
lcall
cltd
cwtl
sub
adc
adc
add
sti
test
jb
ljmp
out
pop
xchg
lock
sub
mov
cwtl
adc
mov
adc
mov
adc
sti
cltd
mov
cmc
in
jmp
push
sbb
fsubs
test
mov
hlt
dec
sub
jae
mov
lds
scas
lds
cmp
scas
es
nop
xor
xchg
mov
adc
add
enter
cmp
movsb
movsl
shll
mov
inc
sti
push
cmpsl
fdivs
aad
push
dec
enter
jo
xchg
cmp
inc
inc
inc
outsb
jecxz
orb
out
and
or
jnp
pop
jge
pop
mov
fs
jbe
adc
std
push
lds
aad
jg
cmc
in
xor
pop
xchg
loopne
jge
sahf
loop
push
cmc
lret
in
out
insb
xor
inc
fnstsw
stos
bound
enter
push
int
mov
push
fiaddl
jl
test
mov
leave
xchg
test
and
sbb
sbb
xor
mov
lods
sbb
ss
dec
std
and
cmc
fstpt
jle
mov
shrb
mov
pop
mov
xchg
out
imul
xchg
clc
inc
aam
dec
inc
fstl
sahf
ret
push
daa
and
cmp
cmp
add
cmp
das
test
mov
inc
add
ret
sub
mov
xorl
pop
mov
pop
test
enter
fdiv
mov
pop
mov
imul
add
add
mov
lret
insl
xchg
out
mov
push
xchg
cld
mov
test
shl
mov
ja
fidivrl
jo
sbb
mov
xor
sti
ror
xorl
push
push
stos
jmp
pop
hlt
call
rclb
sbb
jb
ret
xlat
mov
andb
mov
fidivrl
mov
pop
xchg
iret
cmp
mulb
sub
jno
adc
xchg
cmp
xchg
jnp
xchg
pop
mov
pop
sub
dec
imulb
push
sbb
scas
stos
lock
mov
scas
cmp
or
stos
popf
out
rcrb
daa
xor
inc
nop
sbb
pop
pop
cwtl
or
add
xor
dec
sahf
push
jg
inc
inc
jb
mov
sbb
daa
push
or
xor
push
clc
loopne
lds
add
push
scas
mov
iret
fimull
mov
mov
and
push
lahf
stos
cmpsl
mov
add
xchg
mov
cmp
ja
jle
pop
jle
lods
push
ds
repnz
popa
push
adc
js
jle
cs
or
or
adc
sub
mov
jmp
fdivrs
imul
and
ret
fistpll
lahf
sbb
iret
call
test
or
mov
aad
repz
adc
xchg
cld
insl
adc
xchg
enter
ret
ret
mov
jne
or
lret
or
mov
sub
in
xor
out
xchg
aam
cli
push
add
ja
jns
adc
es
test
pop
jbe
push
cmpsl
push
add
fists
cmp
push
cmpsl
mov
add
mov
sahf
push
push
fldl
pop
rorb
push
add
jl
sbb
adc
xor
out
xor
xor
rcll
shl
inc
rol
stos
insb
lods
pusha
jp
mov
clc
adcb
xor
cmp
sub
push
jns
popa
xchg
mov
xor
add
xchg
out
inc
mov
orl
push
in
add
inc
aaa
pop
pop
jbe
mov
fdivrp
or
es
js
inc
ret
daa
mov
insl
dec
test
adc
mov
lcall
or
adc
jl
mov
push
in
cs
xor
test
jbe
or
adcb
xor
or
dec
inc
sti
sbb
xor
cmp
lods
ds
fwait
scas
or
xor
cmc
jns
xchg
mov
sub
sub
stos
cmp
and
out
or
jo
fcmovu
xor
push
cli
fadd
sbb
aaa
hlt
xorb
shlb
loope
ja
dec
inc
sub
fldcw
xchg
ret
lcall
enter
cld
lret
dec
inc
xor
xor
call
mov
mov
in
clc
and
cmc
rcrl
bound
jne
in
movsb
xor
adc
xlat
sbb
mov
je
pop
add
mov
jl
loope
pop
or
and
out
jns
sub
ficompl
mov
les
gs
out
pop
xchg
cmc
in
add
test
mov
hlt
sbb
sbb
pop
mov
inc
popa
push
out
ret
rorb
adc
pusha
lods
arpl
jb
jne
rolb
orl
jecxz
xlat
scas
xchg
movsl
push
lret
scas
adc
sub
ljmp
mov
xchg
cmp
pop
mov
sbb
ljmp
mov
mov
xor
fstpt
push
push
add
pop
loopne
sub
ds
xchg
cld
xor
fwait
jb
and
push
sbbl
cs
in
lods
movsl
mov
sbb
test
lods
sub
dec
clc
js
lock
lret
xchg
imul
dec
sub
adc
je
mov
add
pop
cmpsl
sub
shlb
rclb
cltd
cmp
jmp
sbb
push
sub
or
xchg
shlb
mov
inc
int3
daa
insl
push
lods
cli
or
imul
xor
sub
pop
sub
mov
cmc
shll
fstl
test
xor
aad
rolb
call
dec
jg
popf
inc
jl
aad
xchg
loope
ficoml
out
add
xchg
in
lods
dec
add
dec
sub
lods
lret
cmp
cmp
imul
test
mov
arpl
ret
mov
pushf
lahf
insl
mov
lret
pop
in
mov
sub
push
mov
mov
xor
mov
and
gs
subb
arpl
mov
sbb
sub
inc
pop
mov
xor
mov
cmp
add
sub
pop
cmpsl
out
cld
mov
add
sbb
dec
stos
pushf
jnp
xchg
insb
clc
pop
sbb
sub
mov
mov
mov
movsl
mov
and
dec
ljmp
jbe
daa
lock
pop
in
outsb
mov
push
lods
pushf
repnz
add
dec
sar
loop
lds
jl
orb
jno
adc
push
mov
and
inc
pop
inc
sbb
sbb
sub
xchg
repz
push
add
lcall
cmpsb
pusha
std
rol
pusha
lods
xor
mov
or
test
stos
mov
push
pop
cltd
dec
sbb
fisubrs
je
lods
sub
mov
push
ljmp
push
add
in
inc
stc
je
daa
jl
rorb
xchg
repz
mov
ljmp
inc
cmpsb
cld
gs
imul
fldl
int
frstor
insl
lods
popf
jl
mov
add
inc
pop
aaa
xor
int
jl
mov
clc
sub
fsubrs
outsb
and
xchg
movsl
sub
pop
add
adc
add
or
push
mov
mov
mov
and
and
pop
xlat
push
stc
jmp
ljmp
ret
aas
dec
cmp
push
mov
outsl
push
arpl
mov
inc
jo
mov
int3
or
push
jae
add
popf
jle
add
sarb
jecxz
jmp
insb
imul
lret
lods
cmp
pop
cwtl
push
ret
inc
neg
arpl
xchg
jae
mov
mov
xchg
push
push
sbb
data16
xchg
mov
xor
sbb
inc
test
and
pop
jg
inc
sbb
jp
cmpsl
mov
mov
sub
pop
mov
add
incl
es
popa
xchg
pop
daa
jnp
cmpps
push
and
aam
das
insb
adc
js
mov
insb
sbb
das
adc
mov
push
push
stc
push
push
enter
outsb
mov
daa
jmp
roll
mov
in
sbb
ljmp
imul
mov
mov
and
call
pop
push
adc
pop
jmp
subl
sbb
jnp
lods
mov
out
cmp
adc
popa
xchg
inc
add
push
movsl
and
cltd
cwtl
jmp
pop
adc
cli
imul
cwtl
roll
dec
or
adc
mov
mov
push
sub
adc
mov
inc
mov
pop
sub
out
negl
sbb
mov
aaa
fcmovnbe
mov
adc
loopne
fsts
or
roll
xchg
dec
jbe
loopne
and
or
cmp
out
sub
jnp
int
jae
pop
cli
aas
mull
icebp
mov
into
adc
rcll
inc
sub
inc
out
rclb
lods
mov
jne
pushf
xorb
dec
xchg
push
and
repz
ss
jbe
mov
cmp
cwtl
or
add
clc
in
rolb
mov
or
scas
ljmp
xlat
int3
cmpsb
ds
pop
stc
cmpsl
lahf
xor
cmc
pop
lret
dec
add
das
inc
into
fs
rcl
cld
adc
popa
xchg
or
aaa
iret
daa
or
mov
leave
outsb
fcomps
es
mov
xchg
push
out
jp
cld
cmc
mov
in
aaa
gs
or
jl
mov
xchg
rclb
repz
dec
pop
lcall
pop
imul
fcoml
adc
pop
out
add
insb
jno
sub
mov
push
int3
jnp
mov
fs
cmc
in
push
dec
sbb
push
cld
cmp
imul
jb
shrb
sbb
movl
scas
xorl
mov
mov
xor
inc
out
sub
xor
adc
push
fmuls
out
insb
popf
push
mov
jae
dec
test
fistpl
add
shlb
in
jmp
das
push
pusha
jge
xchg
cwtl
loopne
pop
stos
cmp
loop
mov
inc
ret
or
add
mov
jae
xchg
pop
xchg
leave
sahf
out
cmp
and
xchg
aad
ja
int3
mov
bound
shll
or
cmp
ja
mov
scas
loop
pop
mov
cmp
decb
mov
lret
xchg
lahf
cmp
dec
mov
add
imul
cltd
sub
clc
inc
xor
adc
popa
add
pop
cmp
es
jmp
push
mov
fistps
movsl
fld
xchg
xorl
sbb
xor
pop
sub
dec
outsb
pop
mov
hlt
xchg
jno
xor
rolb
xchg
or
or
add
test
push
pop
imul
xchg
arpl
ss
js
or
lods
into
vphadddq
inc
and
xchg
push
mov
es
cmp
jl
cmc
adc
inc
sub
lret
fs
lock
push
xchg
rcrl
jnp
int3
add
push
divb
or
mov
mov
hlt
bound
ljmp
enter
jae
xor
adc
mov
adc
jecxz
clc
sbb
jb
lcall
stos
stos
dec
mov
xchg
into
jb
lods
shl
movsl
sbb
imull
cli
lds
jae
mov
roll
mov
mov
mov
and
push
push
dec
jmp
and
dec
ret
pop
shr
add
jno
jo
cmp
mov
mov
outsl
ficompl
push
mov
pop
push
mov
test
pop
mov
sti
jl
sbb
cmp
push
xor
scas
pop
notb
mov
sub
cs
add
sub
cmp
adc
shrl
icebp
pushf
cmp
cmp
loop
mov
rol
push
mov
jne
mov
ja
int3
fucomp
sti
mov
sub
add
mov
stc
ss
mov
sub
out
cmc
clc
std
mov
gs
mov
pop
pop
mov
repz
add
in
movsb
mov
mov
mov
das
jg
push
mov
enter
mov
addr16
mov
bswap
pop
stos
or
out
stos
test
hlt
pop
loope
cmp
in
dec
ret
xor
mov
xor
sub
sarl
push
xchg
adcl
gs
adc
mov
fbld
cmp
xlat
je
push
movsl
push
mov
jo
mov
mov
insb
repz
push
mov
pop
add
push
or
cmp
inc
test
cwtl
jnp
add
das
dec
out
sub
subb
mov
lea
jg
fidivrs
push
add
mov
cmpsb
icebp
jg
xorl
aas
shl
cmp
or
mov
adc
jo
xchg
fdiv
insb
imul
lods
popa
shlb
sub
jp
mov
jp
jo
test
mov
vminss
jne
scas
xor
outsl
cmp
in
addr16
out
mov
movsl
js
ja
adc
xor
sbb
jp
cwtl
iret
int
jns
insb
jo
rclb
dec
std
xchg
cmc
xor
mov
sub
sbb
mov
lds
pusha
les
les
in
mov
lret
movsb
add
repnz
jmp
dec
imull
sub
pop
jmp
aas
leave
sub
inc
mov
or
stc
iret
movsl
xchg
push
in
shrb
sbbl
inc
call
inc
ss
and
testl
cli
ret
pop
cmpsb
mov
inc
in
pop
lods
mov
or
in
scas
xor
mov
sbb
xchg
inc
jb
mov
aaa
xchg
fs
ffreep
mov
pop
in
testl
js
sti
imul
push
std
repz
xlat
jnp
adc
or
pop
mov
xor
test
out
ljmp
xchg
scas
xor
inc
stos
lods
gs
jecxz
xchg
push
and
cmp
sbb
clc
pop
iret
cmc
push
movsl
clc
shll
jecxz
xchg
sub
js
cmp
and
test
pop
inc
sub
in
dec
inc
pop
insb
pop
sahf
les
cmp
ja
lret
and
sti
inc
repz
mov
lcall
mov
and
fisubs
stc
mov
jnp
aam
inc
pop
in
xchg
loope
dec
mov
xchg
insb
roll
stos
nop
mov
loope
repz
cmpsb
adc
pop
xchg
jge
add
rcll
jmp
call
jne
jge
push
mov
and
insb
gs
push
out
dec
bound
xchg
into
xchg
xor
dec
xchg
pop
pop
int
test
push
push
mov
xchg
xor
xchg
cs
inc
cmovge
or
aas
adc
xchg
lret
xchg
outsl
mov
jno
adc
lar
mov
sub
test
dec
and
aam
or
push
clc
jecxz
sub
inc
and
aaa
int3
dec
out
xor
data16
mov
repz
sti
sti
scas
cltd
mov
cmp
push
call
fildll
xchg
negb
add
xchg
cmp
aad
roll
cwtl
add
ljmp
arpl
push
int
xor
sti
in
lods
pop
inc
or
ja
mov
dec
bound
rol
repz
addb
jg
lea
xor
add
push
es
in
cs
js
call
adc
mov
push
cmc
or
sbb
divl
xorb
jg
xchg
pop
cwtl
mov
repz
shll
addr16
bswap
pop
and
dec
dec
push
sub
mov
lds
outsl
test
sub
xchg
rclb
rorb
dec
pop
mov
insl
jae
test
shlb
mov
mov
or
sub
xchg
movsb
cmp
cmp
movb
push
sbb
call
or
out
in
repnz
sub
jle
lret
fistl
flds
int3
outsl
mov
xor
das
fwait
xor
pop
jne
jno
push
loopne
push
and
in
adcb
cmp
inc
in
in
mov
cwtl
cld
mov
or
iret
inc
mov
clc
xchg
js
and
call
push
clc
dec
jbe
outsl
fnstcw
cmp
pusha
aad
mov
stc
out
sub
js
mov
pop
adc
dec
lds
arpl
jb
push
loope
push
testb
jmp
jnp
and
xor
adc
rclb
mov
out
out
scas
std
mov
cli
stos
xchg
out
sub
int
ret
cmp
fcomi
mov
sbb
mov
dec
mov
mov
fs
pop
dec
in
xor
jecxz
push
and
movsb
sahf
push
stos
inc
fimull
repnz
repnz
lods
pop
gs
xorb
mov
inc
jns
fwait
cmpb
adc
repz
sub
fwait
cmp
sbb
sbb
jne
in
mov
jnp
and
test
lcall
scas
ss
mov
inc
inc
test
stc
arpl
stos
out
pop
adc
int3
dec
push
mov
xorb
loop
movsl
popf
jbe
cmp
dec
mov
addr16
push
mov
lods
and
xchg
out
mov
mov
nop
fucomip
dec
fisubl
fsubr
in
push
and
repz
pop
sub
add
mov
add
pop
jmp
mov
inc
loop
push
lcall
sahf
jp
adc
shr
dec
xchg
adc
mov
enter
push
fsub
pushf
jns
jnp
lret
xchg
enter
mov
in
and
push
dec
lods
hlt
jae
jle
or
add
pop
sub
push
push
mov
fstl
jne
mov
in
test
in
pushf
mov
sbb
gs
pop
decl
or
addr16
inc
dec
fucomip
call
pop
fsubrs
mov
mov
push
fldcw
mov
xchg
inc
lahf
lock
stos
sbb
cmc
add
jo
pusha
sbb
mov
xchg
adc
ljmp
mov
mov
jge
jmp
ljmp
mov
fabs
jnp
cmp
leave
scas
int
xchg
sbbb
fistl
mov
xor
shlb
scas
cmp
xchg
stos
loop
loope
insb
pop
or
clc
and
xchg
popa
mov
and
pop
jmp
or
outsl
mov
inc
and
or
imul
push
xor
inc
and
lret
xchg
cmp
adc
cld
mov
ja
xchg
mov
mov
and
jo
dec
and
in
stc
jnp
or
push
das
push
mov
cli
xchg
scas
nop
mov
adc
sub
cwtl
inc
ljmp
xor
sahf
insb
shlb
cmp
das
push
sub
mov
je
jns
inc
mov
rolb
cli
mov
and
dec
arpl
test
fistpll
lret
or
push
inc
movsb
sar
das
cmp
xor
fnstsw
push
lcall
mov
cmp
dec
ljmp
mov
out
inc
sbb
bound
mov
cwtl
cld
into
lds
jg
jp
jecxz
popf
jp
or
jge
or
dec
inc
xchg
aaa
adc
addr16
out
mov
lock
in
mov
jno
jmp
xor
and
rol
test
daa
out
jg
mov
insl
repz
gs
inc
mov
fimuls
out
xchg
sub
movsl
dec
pop
movsb
enter
lret
rcl
xchg
jns
and
into
push
movsl
roll
int3
push
inc
sbb
mov
fisttps
dec
adc
adc
out
lock
mov
cmp
loopne
jmp
popf
addr16
sub
add
das
xchg
mov
andl
pusha
mov
lods
cli
adc
popf
mov
mov
mov
int3
scas
add
incb
cmp
pop
mov
xor
fimull
add
fcomps
es
push
sub
xchg
sarb
xlat
imul
test
add
or
mov
aam
sub
pop
lods
dec
dec
fimuls
rcl
ja
jae
inc
cmp
xchg
push
push
lret
jne
adc
dec
xor
int
loopne
push
testb
call
lock
mov
cmpl
mov
xor
jge
push
je
inc
dec
adc
adc
arpl
sbb
push
cld
xor
js
push
add
xchg
aad
stc
xchg
popa
inc
inc
adc
addr16
mov
mov
push
add
loop
mov
xchg
frstor
leave
xor
pop
dec
lods
inc
xor
mov
outsl
jmp
mov
cmpsb
push
das
mov
lds
pop
loope
cmp
lods
pop
int3
sbb
xchg
inc
movsl
and
fs
jb
push
rclb
and
lcall
mov
cmp
pop
daa
ret
pop
adc
push
addr16
mov
in
mov
repz
cmpsl
std
pushf
pop
push
lock
out
orb
xchg
andb
mov
xchg
int
ja
subb
sbb
ja
xor
inc
stos
popf
mov
inc
xchg
ret
adc
mov
test
cli
cmp
lahf
xchg
ret
loop
dec
mov
icebp
mov
mov
push
popa
je
dec
lcall
sbb
adcb
sub
pop
ret
adc
popf
push
dec
mov
test
neg
pop
hlt
rcll
add
mov
insb
mov
mov
sbb
xchg
inc
or
ret
jns
je
mov
cli
inc
xchg
imul
or
ret
into
lock
lret
adc
inc
call
add
inc
pop
xchg
ljmp
dec
sub
add
insl
sbb
sub
insb
sbb
enter
sarb
addr16
xor
insb
pop
idiv
xor
imul
inc
xchg
mov
fmuls
cmc
enter
jl
fmuls
cmp
leave
mov
cwtl
jecxz
popa
xchg
pop
imul
sbbb
pop
push
sub
mov
dec
or
mov
ficompl
aaa
insl
cmp
ja
lods
mov
cmc
addr16
outsl
mov
loop
loope
loope
lahf
mov
mov
icebp
sub
jo
outsb
shld
xchg
and
sbb
pop
adc
stc
cmpsl
and
pop
cs
mov
and
insb
jns
or
add
jg
cltd
call
jnp
sbb
fwait
lahf
inc
mov
cmpl
mov
sbb
cld
xchg
mov
pushf
mov
lock
adc
aam
cli
fsubl
rcrb
xchg
sahf
xchg
fwait
lea
pop
fidivs
inc
sbb
iret
adc
or
cmpsl
arpl
xor
pop
mov
ljmp
sar
lahf
into
into
fistpl
sbb
sub
cld
gs
push
sbb
rcr
pop
inc
dec
cmp
push
outsl
dec
adc
xor
out
pop
popf
imulb
int
dec
pushf
and
test
mov
sub
int
and
test
xchg
ljmp
popa
arpl
stc
jmp
jecxz
dec
cltd
push
fs
inc
sbb
call
ret
sub
cmp
inc
mov
outsl
push
je
pop
adc
xor
test
or
out
enter
mov
out
repz
clc
push
mov
pop
mov
push
mov
leave
scas
push
push
rcrl
arpl
push
push
or
enter
dec
inc
add
and
pop
mov
or
jle
push
sub
lcall
lahf
adc
mov
inc
sbb
out
mov
mov
js
fldz
fldenv
push
popa
ja
jnp
xor
push
xor
lcall
cld
sbb
shrb
out
sub
mov
xlat
sbb
or
es
inc
or
imul
xor
std
insb
mov
or
mov
data16
add
xchg
inc
adc
sub
inc
sti
jp
mov
iret
adc
and
mov
add
cmp
xchg
movsl
stc
pop
call
out
insb
out
popf
push
test
xor
adc
jno
jecxz
inc
movsb
mov
push
movsb
lods
add
bound
push
xchg
loopne
ljmp
adc
ljmp
in
mov
shlb
and
scas
popa
sbb
add
roll
sub
shrb
inc
push
pop
mov
dec
sbb
mov
sub
jl
cld
mov
push
xor
arpl
pop
je
cmp
lahf
test
xorb
and
jnp
cli
js
or
jbe
dec
cmp
xor
and
mov
imul
add
jecxz
arpl
mov
int
sbb
cmp
jo
xchg
repz
jl
cmp
inc
adc
sbb
js
filds
fldenv
inc
repnz
jne
sbbb
mov
xlat
sbbl
dec
mov
sbb
pop
mov
notb
test
xchg
dec
add
cmp
outsb
xchg
lods
negb
mov
ljmp
or
sub
and
lea
push
jle
pop
mov
dec
std
xchg
aad
lods
sarb
fsubl
imul
fldcw
inc
pop
pop
enter
je
in
jae
push
xlat
xor
in
std
mov
add
in
cmc
jno
sarl
pop
dec
jae
arpl
dec
shll
int3
jp
call
cmpsb
mov
arpl
scas
call
gs
mov
xchg
gs
cltd
push
xlat
push
xor
mov
jge
outsb
lahf
rorb
iret
mov
lret
add
dec
fidivrl
adc
xor
incb
sbb
testl
adc
das
out
pop
aad
pop
dec
enter
stc
or
popl
xor
and
fistl
gs
insl
popa
adc
dec
or
sbb
add
fmul
jae
enter
out
mov
cbtw
mov
and
xor
ljmp
dec
jbe
ret
sbb
dec
or
test
sub
leave
xchg
pop
push
xor
loop
mov
push
rcr
push
imul
and
rcll
pop
xor
in
dec
test
sbb
or
fistps
shl
mov
push
mov
mov
js
nop
lock
inc
adc
mov
cmpsl
jnp
xor
notb
push
adc
xchg
scas
imul
das
adc
jo
lcall
ss
sbb
jle
mov
ret
push
mov
jo
cmp
sarl
mov
mov
sub
test
push
pop
gs
pop
fimuls
lret
int3
jne
or
jbe
aaa
fmuls
mov
and
vpmulhw
xor
jge
arpl
push
pop
les
mov
decl
aas
mov
sub
in
lds
push
or
inc
mov
add
bound
clc
loop
or
fidivrl
adc
jle
adc
nop
push
adc
sub
push
aaa
aaa
out
js
sbb
lahf
cwtl
imul
jecxz
push
sub
imul
lahf
cmpsb
push
mov
outsl
loop
inc
test
data16
aas
add
pushf
or
inc
aad
lods
push
push
add
dec
cmpsb
push
cmp
cmpb
mov
cli
or
cmp
icebp
mov
ret
rolb
sub
incb
cmp
xchg
out
jle
sub
test
xchg
insb
mov
ljmp
sbb
mov
and
ljmp
dec
loop
fidivrs
mov
js
jecxz
lods
xor
xchg
fldcw
add
imul
out
gs
fistl
dec
mov
gs
clc
cs
mov
jo
repnz
dec
bound
sbb
or
xlat
dec
loope
lds
pushf
mov
adc
mov
shrb
mov
jp
jg
add
fwait
or
rclb
fsubs
dec
enter
push
faddl
push
imul
add
xchg
fists
bsf
es
cmc
push
mov
push
popa
inc
gs
je
daa
xchg
es
call
and
jl
sub
jmp
mov
sub
daa
adc
sub
stos
iret
lcall
cmp
sub
sub
in
ret
stc
xor
xor
inc
jo
lret
push
mov
dec
sarl
or
mov
cmp
loop
fwait
mov
leave
out
lahf
and
and
push
dec
mov
add
mov
lea
mov
addps
xchg
lock
fsts
fcomps
push
iret
pushf
out
inc
mov
xchg
mov
xor
mov
xor
xchg
sub
js,pn
pop
sub
push
cmp
or
pop
pop
sub
shrb
iret
aaa
inc
adc
xchg
xor
adc
rcll
or
xchg
ror
mov
xchg
clc
pop
cmp
iret
test
rcrb
pop
repnz
add
les
add
adc
adc
imul
push
lds
sub
jl
testl
add
push
lds
aas
sub
inc
or
add
jns
xor
outsl
xor
jle
and
or
pop
mov
andb
mov
and
sarl
and
bound
cld
push
out
call
pop
and
loopne
jbe
ret
or
js
data16
jg
fs
ds
test
call
jae
cmp
mov
cld
cli
mov
arpl
fldt
dec
push
leave
mov
add
push
adc
cmc
in
lods
pop
shlb
loop
push
mov
xor
push
jnp
les
test
popf
mov
mov
daa
sti
add
add
or
adc
enter
pop
or
push
add
sbb
cmp
js
test
and
adc
xchg
xchg
jo
test
int
daa
cwtl
and
out
movsb
xor
xor
pop
xlat
loopne
xor
sti
push
cmp
jo
mov
clc
dec
inc
inc
sub
fs
xor
jns
push
push
cmp
cmp
inc
pop
aam
std
mov
add
fiaddl
xchg
sub
push
add
fiadds
out
repnz
pop
adc
pop
xor
xchg
mov
mov
push
dec
lret
out
imul
push
frstor
loopne
aad
rcl
ret
adc
aam
pop
in
push
in
xor
xchg
jo
insb
sub
scas
test
jl
int3
cmp
sbb
mov
add
imul
push
cmc
xchg
mulb
out
out
or
lods
pushf
fistps
ja
push
mov
lock
ljmp
or
frstor
xchg
aaa
roll
iret
mov
fsts
jo
pop
fwait
push
add
xchg
gs
push
mov
fisttps
xor
insl
outsb
gs
or
pop
jbe
cmp
pop
adc
add
push
mov
or
mov
daa
jnp
insb
sub
fildll
imul
aad
in
rcrb
das
scas
push
out
mov
or
cwtl
int
scas
cmp
and
xchg
sbb
mov
nop
lods
jle
movb
inc
stos
and
jae
pop
dec
rolb
xchg
xchg
repz
xor
lcall
fcomps
jno
mov
lret
sub
xor
push
adcl
cwtl
lock
adc
push
inc
xchg
bound
adcl
or
mov
popa
imul
inc
cmc
cmpb
dec
pmulhw
inc
ret
sub
xor
imul
adc
imul
sbb
stos
into
mov
enter
or
in
test
dec
imul
mov
fs
sbb
cltd
or
mov
movsl
push
inc
dec
imul
test
aam
jmp
jns
add
hlt
test
mov
inc
sub
test
adc
insl
mov
ja
gs
imul
or
xchg
or
out
jmp
inc
les
insl
dec
push
inc
jno
jbe
sbb
jne
in
roll
dec
push
imul
push
dec
xchg
popa
mov
mov
fimull
roll
sub
jecxz
inc
fwait
push
push
mov
push
ja
xor
arpl
fidivrl
movsl
xchg
mov
push
pop
or
or
rorb
cld
sub
or
clc
sahf
insb
pop
dec
add
pop
movsb
xor
pop
xchg
mov
mov
jnp
rorb
adc
sarb
fwait
and
mov
cmpsl
out
cmp
inc
pop
inc
jmp
cmpsb
xlat
inc
addr16
in
pop
lahf
push
cmp
mov
and
cmpsb
imul
icebp
outsl
pop
xor
in
xchg
inc
dec
bound
test
xor
cmpl
pop
lods
mov
rcr
mov
inc
fdivrs
push
popl
js
popa
mov
outsb
outsl
push
xlat
mov
push
mov
mov
roll
aad
lods
cs
cmp
lock
mov
mov
int3
jmp
push
mov
call
cmp
iret
dec
aad
xchg
sbb
mov
pop
push
pop
pop
mov
addr16
add
push
pushf
nop
pop
pop
iret
gs
xchg
clc
ret
or
cmpsl
aad
and
cmc
les
es
repz
cmp
loope
push
xchg
aaa
jl
call
pop
mov
adc
into
mov
xor
sub
inc
insl
in
mov
mov
scas
test
and
das
pop
add
insl
cmpsb
cltd
xlat
fimull
in
inc
sbb
cli
push
call
dec
inc
int3
cmp
push
mov
cld
sbb
fnstsw
push
into
divb
dec
push
out
arpl
add
outsl
or
insb
dec
mov
inc
push
xchg
add
xchg
stos
das
scas
fsubl
insb
mov
xchg
daa
cmpsb
and
xor
stc
cmpsb
scas
lret
inc
shll
sbb
pushf
dec
stos
test
mov
mov
adc
or
clc
mov
je
mov
jmp
push
jne
push
mov
movsl
jb
aaa
dec
mov
add
out
out
push
jmp
loopne
adc
in
jl
out
outsl
inc
das
int3
loop
and
in
cmp
or
nop
int
push
loopne
int3
test
mov
pop
push
int3
repz
or
dec
mov
inc
xchg
testb
shlb
shlb
shrb
xchg
and
imull
out
dec
negb
mov
mov
pop
and
repnz
pop
mov
sbb
js
pop
mov
mov
pop
jb
in
mov
fucom
add
xlat
mov
cmovge
and
aad
js
mov
inc
dec
test
lods
jb
cs
or
test
pop
xorl
es
hlt
arpl
and
inc
and
insb
dec
ja
stos
in
adc
xor
cmp
cmc
sbb
les
jg
pop
xor
xor
jl
pusha
sbbl
or
es
mov
push
ret
dec
inc
dec
jbe
jo
lret
bound
jnp
cmpsl
inc
or
jmp
mov
sbb
pusha
mov
pop
and
jae
repz
sub
fimuls
push
cli
dec
dec
repz
loopne
sahf
test
adc
cs
or
outsb
addr16
sub
xchg
test
inc
fs
mov
pop
rcll
mov
jbe
pop
push
les
xchg
ftst
dec
sbb
cmpsb
fwait
imul
push
loop
mov
ja
or
push
jnp
lds
in
fucom
test
ja
mov
dec
push
fistpl
data16
arpl
push
stos
mov
aaa
jae
jp
mov
sbb
insb
jmp
dec
jle
adc
jne
stos
push
rclb
adc
sti
add
inc
jb
push
cld
mov
adc
pop
icebp
popf
insb
push
or
sub
outsl
and
lcall
jg
xchg
out
sub
mov
fwait
mov
leave
testb
dec
push
es
jmp
cmpsb
jge
lods
jno
pop
scas
xchg
mov
adc
addr16
pop
add
pop
add
jae
lea
sub
js
popf
inc
cli
gs
mov
or
jge
xor
xchg
mov
mov
push
xchg
pop
pop
jbe
lods
js
mov
sbb
jp
std
pop
mov
repz
or
mov
dec
mov
lea
jbe
and
push
xchg
cmp
and
data16
rcl
cs
lods
ret
xchg
sub
cmpsb
bound
pop
rcrb
mov
rcrb
in
mov
mov
out
pop
scas
fbstp
popa
or
icebp
jnp
movsl
push
add
jg
cmp
xchg
mov
push
mov
cmp
xor
inc
mov
push
mov
sbb
and
mov
iret
mov
inc
lods
mov
cld
or
adc
idivb
rep
ss
inc
das
outsl
pusha
pop
xchg
push
insl
mov
xchg
sub
fwait
xchg
sbb
add
mov
mov
add
sti
dec
mov
call
add
lret
mov
jne
loope
mov
stc
aaa
xchg
sub
sub
inc
dec
push
add
mov
and
in
cli
pop
mov
inc
mov
xor
xchg
cwtl
push
sti
femms
add
mov
xchg
xlat
nopl
jmp
aad
jecxz
pop
cli
stc
dec
aam
rol
xchg
aam
mov
dec
pop
in
xor
xorb
leave
cmpsb
push
push
mov
and
std
adcb
jmp
pop
aas
xchg
rclb
push
sti
mov
in
ljmp
leave
leave
mov
outsl
dec
stos
dec
sbb
stos
fisttps
cmp
shr
inc
pop
sub
jbe
fs
in
fbld
mov
andl
jl
push
xor
ljmp
adcl
insb
jnp
rcl
add
xchg
int3
adc
lds
addr16
lret
or
icebp
das
pop
dec
jb
sbb
in
les
lret
test
movsb
shlb
js
in
cmpsb
cmp
mov
dec
sti
repz
pop
mov
hlt
lea
vandps
xor
sub
pushf
ds
in
pop
or
dec
pop
mov
data16
mov
cltd
sub
ret
adc
test
sbb
std
jo
mov
mov
add
jge
dec
pop
add
lock
push
jnp
adc
les
pop
mov
adc
jle
ljmp
loop
negl
out
pop
xchg
int3
cmpsw
loopne
sub
jle
push
or
faddl
shlb
stc
xchg
cmp
mov
push
sub
ret
jns
mov
jne
mov
mov
sub
cmpsb
xchg
sub
mov
movsb
ljmp
pop
xor
pop
or
in
lret
insl
fnsave
sub
sbb
enter
cmc
test
int3
add
mov
lds
or
movsl
fwait
outsl
sarl
clc
movsb
sbb
or
stos
mov
jmp
adc
imul
cmp
mov
cltd
out
jae,pt
jne
roll
aad
clc
add
xchg
test
out
lahf
fcoms
xlat
sti
or
repz
test
xor
cltd
aad
and
pop
push
and
mov
das
mov
xor
pop
sbb
add
das
xchg
cmp
mov
icebp
cwtl
jmp
or
adc
mov
dec
pop
daa
or
jae
cmp
jge
iret
insl
je
adc
jbe
push
lret
xchg
sbb
movsb
jecxz
aad
pop
das
or
push
push
sub
pop
jns
repnz
ret
das
lahf
sub
aad
aas
xor
jo
mov
comiss
jae
or
int3
pop
mov
jg
lcall
shll
push
and
add
push
int3
test
lret
xor
jo
jg
adc
mov
repnz
pushf
xor
cmc
dec
mov
lods
std
sbb
sbb
dec
push
lods
incb
and
mov
push
mov
sub
dec
es
and
pushf
ret
xor
inc
add
sub
push
pop
pop
mov
cmp
call
adc
inc
push
cld
add
pop
test
sub
icebp
mov
or
dec
inc
inc
xchg
xor
push
cmp
ret
stos
pop
stc
shlb
js
push
jns
test
mov
sbb
xchg
arpl
adc
out
out
inc
outsb
scas
iret
scas
fmuls
lods
cmp
loopne
loopne
jp
int
jg
jge
stc
mov
push
je
jmp
and
fstps
hlt
pop
mov
pusha
icebp
and
test
dec
ja
cmpsl
test
lods
fldt
fsubrs
ja
test
addr16
adc
ljmp
pop
mov
mov
lahf
imul
sub
cmp
icebp
push
sub
leave
movsl
add
push
lea
icebp
call
mov
and
sbb
pop
add
hlt
gs
pop
jge
jecxz
pop
mov
add
xchg
pop
sub
fsubp
insl
sarl
ss
push
pop
add
in
int3
jno
ds
push
jns
leave
ret
push
in
and
push
hlt
push
lods
lea
data16
mov
dec
lods
test
repnz
mov
xor
rcll
insl
mov
cmp
test
mov
fisttpl
and
jb
jae
xcrypt-ofb
cmpsl
push
shlb
movsl
adcl
mov
dec
outsl
nop
jmp
add
or
jae
xor
lods
pushf
sub
push
fildll
jg
fldl
decl
in
pop
ja
push
popa
sbb
xor
inc
mov
or
push
loop
sbb
test
push
sti
pop
inc
enter
lods
call
insl
pop
out
mov
ljmp
or
mull
cmp
stc
mov
xor
push
or
mov
lret
pop
sbb
and
xchg
pop
loope
dec
jge
ljmp
aas
ja
xchg
sti
xor
test
jae
orl
jle
in
xlat
cmp
in
shl
fcmovne
add
and
cmpb
sti
pop
sbb
pop
jg
fiadds
jmp
and
and
mov
dec
lcall
clc
rcrb
xor
cmpl
sbb
push
or
cs
add
add
cmp
pop
ret
hlt
nop
inc
js
sub
jle
xchg
xchg
int3
mov
jno
cmpsl
jle
mov
testb
orb
cmpsb
loop
mov
xor
inc
dec
sub
int
fidivs
and
mov
lea
or
and
xor
pop
jne
leave
fdivl
xor
cmp
sbb
pop
push
xor
cmp
aas
mov
inc
test
jmp
mov
add
and
jns
mov
lahf
incb
in
leave
imul
and
xchg
push
or
loopne
or
mov
inc
pop
les
and
lods
cmp
inc
in
push
sbb
mov
stos
ret
fs
pop
mov
jns
mov
mov
movsb
ljmp
in
jno
pop
jge
loopne
shll
test
mov
repz
movsb
scas
add
xchg
loopne
icebp
xchg
add
out
mov
ljmp
or
mov
jmp
sub
add
lahf
cltd
int
movsl
mov
push
lret
lret
pop
loopne
cwtl
add
cli
push
cmp
jbe
les
jbe
fs
jo
enter
iret
cmc
das
jge
ret
scas
repnz
stos
mov
add
mov
je
mov
inc
or
xchg
gs
cld
ror
dec
clc
push
stos
pop
jmp
xor
movsl
ds
ds
divb
jmp
inc
inc
int
mov
add
cltd
mov
fcmovne
pop
mov
lock
mov
sub
jno
push
dec
jp
int
cmp
repnz
mov
test
xchg
jge
das
jmp
scas
jecxz
fwait
adc
pop
mov
sub
loope
movsl
movsb
pop
lret
cmpsb
cmpsl
out
cld
ret
jp
lods
jns
ret
mov
xchg
je
ss
push
xchg
inc
adc
testb
pop
loope
outsl
pop
xor
add
inc
pushf
or
aaa
out
or
bound
inc
xlat
outsb
testb
mov
jbe
cs
sbb
push
rclb
popf
lock
mov
fwait
mov
mov
insb
pop
hlt
pop
mov
push
vpunpcklwd
movsb
xchg
or
out
cmpsb
push
cmp
jl
imul
sarl
loope
std
push
lods
inc
sub
mov
cmp
dec
pop
xor
hlt
test
push
pop
mov
inc
push
xor
filds
mov
adc
adc
adc
adc
lret
adc
push
xlat
in
test
in
mov
xorb
gs
mov
push
jge
mov
addb
sbbb
xor
sub
fmul
mov
ds
mov
nop
inc
cli
push
push
inc
mov
jecxz
bound
repz
loopne
test
ljmp
stc
test
negl
xlat
jo
js
adc
push
mov
mov
sub
incb
mov
repz
cmp
hlt
fs
inc
in
push
repz
rcr
mov
imul
addr16
mov
testb
enter
dec
xchg
fwait
pop
mov
add
hlt
push
inc
sbb
jns,pt
pop
or
mov
in
xchg
fidivrs
sub
xchg
bound
adc
fisttps
pop
adcb
sbb
into
xor
scas
lcall
icebp
fildl
xor
mov
rcl
and
cs
icebp
or
jmp
mov
push
sbbl
mov
repz
nop
adc
jge
sbb
mov
or
leave
or
fwait
jne
jl
pop
out
lods
or
adc
jo
mov
or
push
into
scas
mull
sbb
stc
lret
gs
mov
test
jns
mov
shlb
adc
cltd
loopne
mov
mov
push
jne
imul
add
call
fs
lods
out
test
in
push
xor
in
mov
outsb
or
cmp
jecxz
rcl
mov
pop
jae
cmpsl
inc
cmp
dec
fistps
push
pop
mov
call
cmp
aaa
addl
cltd
jae,pn
out
iret
add
dec
ret
nop
popf
jb
std
push
popa
popa
ja
jp
push
push
loop
test
sub
ret
ss
dec
adc
pop
pop
dec
jbe
dec
cmp
inc
sub
mov
adc
adc
inc
int
repnz
xchg
mov
fcomps
sbb
dec
es
sti
imul
jno
sbbl
xchg
rorb
cmpsl
loopne
call
mov
adcb
fisubs
jns
push
xor
mov
repnz
mov
sti
push
mov
xor
jbe
lds
out
inc
cmp
and
push
pusha
data16
out
int3
pushf
lcall
mov
jne
sbb
imul
repz
and
mov
cmc
inc
mov
adc
push
sub
test
pop
mov
sub
sbb
mov
or
je
mov
cwtl
push
pop
orb
mov
cli
jmp
sbb
sub
inc
jmp
lods
iret
sub
cmc
inc
dec
lock
repz
mov
mov
cld
or
icebp
and
rclb
xor
mov
movups
mov
rcrb
stos
imul
push
popl
inc
ret
in
iret
jne
sub
pop
addr16
imul
dec
nop
mov
pop
rcr
in
cmc
push
aaa
ret
mov
pop
fs
cmp
sete
or
lds
and
mov
icebp
mov
into
inc
imul
or
hlt
adc
movsb
cmp
xor
aaa
mov
aas
mov
add
cmpsl
imul
xchg
xorl
out
and
xchg
jp
sub
mov
pop
sub
mov
jg
call
xchg
lret
push
cwtl
lea
sar
es
sahf
cld
stos
stc
mov
out
sub
adc
sbb
xor
movsl
mov
fisubl
in
add
mov
enter
push
les
ja
enter
cmpsb
fs
pop
or
jno
mov
out
shll
add
pop
xorl
xor
xchg
push
add
aaa
mov
lret
das
cs
sbb
jmp
fs
daa
push
std
add
inc
sbbb
mov
xor
inc
sbb
fistl
mov
aad
leave
cs
insb
add
and
mov
aas
shrl
mov
js
nop
dec
pop
add
add
xchg
lret
lds
mov
inc
xchg
fbld
jns
repnz
stc
stc
test
stos
iret
fiadds
out
mov
shrl
popf
clc
cmp
fimull
repnz
mov
cmp
sbb
and
repz
cs
in
cli
mov
mov
jle
dec
lret
lret
inc
push
sub
out
dec
cltd
pop
mov
popa
ret
sti
pop
out
sbbw
hlt
repz
je
xlat
out
and
lock
int
or
pop
or
stos
int3
mov
xchg
mov
cmpsb
push
mov
dec
mov
pop
jne
add
sahf
movsl
lret
dec
shrb
sub
addr16
fists
scas
fldt
push
or
xlat
jg
loopne
scas
xor
mov
add
cmpsb
fisttps
adc
cli
sbb
hlt
dec
mov
in
aas
dec
push
imul
aas
popa
cmp
pop
sbb
xor
xor
enter
pop
and
cmp
insb
and
push
mov
or
scas
int
dec
mov
ror
push
scas
scas
adc
push
jo
fisttpl
test
cmp
cwtl
and
in
cmp
das
jge
inc
cltd
std
jp
inc
cmp
and
mov
adc
and
aam
cld
xchg
rorb
push
mov
into
pmaddwd
outsl
cli
enter
mov
pop
lods
sub
gs
int
and
outsb
iret
adc
mov
shrl
cmp
stc
adc
push
cli
xor
pop
jmp
xchg
mov
mov
cmp
dec
push
xorl
in
jp
inc
pusha
xchg
pop
rcl
cltd
or
jno
inc
add
loop
mov
cmpsl
add
rcll
shl
test
adc
pop
xor
pop
stos
mov
cmp
sub
pop
cmp
adc
pop
shr
adc
ja
mov
xchg
sbb
or
cmp
call
out
xchg
jle
xchg
incl
jno
push
mov
scas
pop
sbb
fmul
movsl
rol
sbb
insl
jns
je
hlt
or
aaa
sub
pop
sar
cmp
hlt
push
jp
add
ds
xchg
sbb
jmp
das
add
pop
les
push
or
mov
dec
dec
iret
add
jl
sahf
push
and
out
popf
sbb
jo
lods
repz
les
fs
push
mov
sub
lcall
frstor
nop
mulb
fidivrs
cmc
iret
mov
mov
dec
sbb
shlb
sub
push
insl
jne
sub
lret
mul
pop
inc
xchg
mov
scas
mov
push
adc
cmp
xor
mov
sub
inc
jl
push
addr16
into
jno
loop
shlb
icebp
sub
leave
aad
inc
adc
xor
adcl
ljmp
rcll
call
inc
insb
xchg
test
add
addl
add
pop
inc
xchg
fbld
cmp
xchg
imul
andl
in
cmp
dec
pop
sub
shlb
nop
dec
jmp
sub
cs
pop
xlat
sbb
push
dec
xchg
pop
xchg
mov
mov
cltd
jecxz
sbb
mov
push
xchg
mov
test
enter
sub
jne
stos
inc
repz
and
das
inc
dec
add
gs
jl
into
mov
or
loope
xor
popa
xor
mov
cmp
mov
icebp
fdivrp
pop
adc
adc
adc
mov
pop
cmpsl
adc
dec
testl
in
add
aas
out
mov
idiv
cltd
and
xchg
mov
inc
mov
and
sbb
and
push
pop
ljmp
adc
movb
jbe
dec
dec
mov
cmovb
dec
and
das
shlb
add
subl
test
jmp
pushf
mov
repnz
movsb
into
or
adc
xor
sub
mov
iret
push
mov
dec
pop
orb
in
inc
sbb
cmp
sbb
sbb
or
ficoml
jne
or
mov
das
lret
xchg
mov
or
imul
fisubs
enter
popa
movsl
lods
push
mov
jae
lods
or
test
adc
mov
dec
in
jno
and
xchg
or
idivl
sbb
and
orb
mov
cmp
icebp
sub
push
leave
mov
push
add
cmpsl
ror
sbb
enter
dec
pop
inc
sbbl
and
mov
push
or
pop
inc
mov
cmp
xchg
push
aam
mov
ja
jg
mov
imul
std
into
out
outsb
lods
in
add
roll
pop
sub
jl
adc
pop
xchg
and
enter
test
xor
jl
pop
adc
out
loopne
ret
addb
push
int
loope
rcr
add
or
xchg
push
dec
xchg
int
aad
inc
push
pop
xlat
jne
lds
lock
notl
test
fmuls
xor
sub
push
cmc
dec
repnz
into
lcall
pop
repz
adc
fnstsw
push
andl
lret
jl
dec
test
jo
add
ljmp
mov
outsl
test
mov
pop
mov
fsub
mov
adc
pop
sub
mov
fxrstor
jmp
inc
mov
dec
sbb
data16
cwtl
sti
in
jae
addb
idivl
incl
mov
push
cld
jne
ret
ljmp
push
stos
mov
pop
jmp
add
popa
testb
out
adc
xchg
or
push
dec
push
fisttps
pop
arpl
cmpsl
mov
je
outsl
fwait
cltd
fistl
mov
dec
sub
lcall
sti
and
stc
sbb
aad
xor
inc
bound
aas
push
scas
xchg
dec
or
lds
xchg
sbb
or
rolb
cltd
aam
test
push
sub
mov
lahf
sbb
mov
xchg
mov
xlat
test
popf
lods
in
adc
jg
jae
in
add
insb
jb
ds
mov
ss
inc
je
mov
ret
scas
sbbb
mov
mov
aad
repnz
scas
aam
in
mov
fs
pop
sub
xchg
leave
aaa
out
or
hlt
adc
rcrb
cmp
shlb
fwait
ret
fistpl
and
xchg
imul
out
pop
das
movsl
mov
push
imul
enter
test
add
decb
xchg
jns
jbe
pop
pop
leave
pop
rclb
fwait
sub
les
adc
pop
fstpl
xor
mov
xchg
sbb
or
fists
or
mov
and
nop
cmp
dec
jle
in
or
cmc
and
movsl
aam
sbb
mov
cmpsl
push
add
mov
cmpsl
shrb
repz
mov
mov
pop
sbb
sub
cmp
out
loope
xchg
mov
push
mov
push
or
fists
mov
mov
pop
pusha
mov
int3
mov
daa
ja
fs
clc
xchg
jge
mov
std
ret
jmp
jl
inc
das
jle
push
cmp
bound
inc
xorb
test
push
imull
mov
mov
push
ficompl
cmp
push
hlt
pop
inc
stos
test
sub
test
adc
test
cmp
inc
stos
fsubl
test
shrb
cmpsb
mov
shrl
xchg
movsb
pop
movsb
jb
xchg
or
cmpl
out
push
cs
jns
dec
clc
bound
xorl
cltd
imul
in
mov
mov
or
rcll
xor
rcr
sub
push
cmp
sbb
adc
pop
mov
jmp
sbb
mov
sbb
mov
loopne
daa
imul
sbb
xor
loope
jmp
stos
cli
mov
sub
arpl
push
ss
or
dec
js
hlt
inc
outsl
mov
pop
pop
add
scas
clc
pop
dec
sbb
fwait
stos
cld
or
xchg
lret
pushf
int3
xchg
pop
lea
xchg
data16
push
push
int3
sub
pop
push
rcll
cmpsb
lret
fiaddl
mov
adc
ljmp
jl
mov
xchg
rolb
aad
imul
int3
dec
pop
adc
repz
dec
mov
in
sahf
pop
lret
xchg
push
mov
cmp
scas
xor
xor
jnp
add
push
lds
ljmp
and
mov
mov
xchg
inc
pop
dec
imull
add
mov
popf
and
lcall
inc
negb
pop
and
mov
add
test
shrb
fldt
push
enter
ljmp
and
jns
mov
mov
shl
fnstenv
jno
sub
xchg
outsb
insb
jno
stc
pop
sbb
lea
mov
inc
cmp
mov
sahf
movsb
cmpsb
jno
cmp
cmp
jbe
idivb
cmpsl
sbb
push
xor
sbb
xchg
xchg
mov
cmpsl
lods
ds
lret
mov
jne
popa
popa
lods
in
jmp
dec
mov
mov
ds
xlat
pop
outsl
je
scas
sbb
mov
aas
jnp
decl
jnp
out
ds
fcomp
popa
aad
lods
movsb
lock
cltd
jo
cmp
inc
nop
or
xor
mov
sub
out
mov
inc
cltd
loop
inc
dec
cwtl
pop
test
xchg
sbb
out
mov
adc
addr16
mov
stos
xchg
lock
jecxz
icebp
in
out
inc
shlb
mov
clc
lods
sub
xchg
enter
lds
addr16
mov
rcrl
cmpsl
adc
mov
sbb
dec
xor
ja
dec
ss
test
cmp
adc
dec
fs
add
add
pop
add
adcl
addb
sahf
sbb
xchg
sbb
sbb
dec
inc
fdivp
cmp
shlb
pop
popf
add
lea
fisttpl
mov
roll
das
call
xor
enter
push
add
das
fldt
xchg
push
aas
cmp
mov
scas
sbb
jg
out
xor
adc
cmp
adc
mov
ds
push
popa
leave
lret
cmp
bound
mov
mov
or
pusha
sbb
xchg
out
and
dec
repz
inc
xchg
dec
xchg
outsl
and
sbb
and
in
int
and
pop
xchg
ljmp
mov
nop
jbe
fimuls
sub
stos
cli
subps
xchg
adc
and
rcrl
mov
and
and
dec
inc
jp
scas
xchg
jnp
mov
dec
outsl
dec
xor
ja
mov
jge
inc
and
inc
pushf
adc
mov
jl
jo
mov
movb
xor
shll
mov
add
test
push
mov
in
xor
push
mov
fmuls
xor
loope
pop
xor
stc
movsl
loope
or
movl
pop
xor
int3
stos
aas
push
subl
jne
outsl
aas
mov
adc
inc
popf
dec
std
jp
in
insl
inc
daa
mov
xchg
adc
movsb
xor
gs
xor
notb
nop
scas
push
push
mov
or
sar
dec
movsb
testl
mov
into
enter
dec
push
rcrl
pop
sbb
test
adc
mov
sar
cmc
in
insl
or
fisttpll
imul
adc
fs
cmp
and
ljmp
mov
cmpsb
int3
pop
xchg
repnz
inc
sub
sarb
data16
fnstcw
popa
and
fcoml
mov
js
jno
mov
outsb
int
and
pop
xchg
push
lret
int3
popa
stc
mov
jecxz
cmpsb
xor
adc
leave
mov
dec
cs
sub
adc
daa
jns
inc
cli
hlt
dec
idiv
xchg
pop
push
jg
in
mov
in
enter
scas
mov
scas
lahf
movsb
adc
fldcw
and
daa
jp
das
shrb
xchg
mov
mov
repz
mov
cs
inc
subb
sub
xor
leave
or
mov
and
mov
int3
fcmovb
sub
in
push
sub
outsb
sub
lds
jae
jne
xchg
sub
xor
cwtl
in
out
outsl
sahf
adc
iret
sahf
jb
mov
dec
test
adc
add
das
sahf
ficoms
or
add
les
jg
or
imul
pushf
idivl
sbb
aam
mov
sbb
jae
dec
ljmp
add
js
sub
xbegin
pushf
jae
pop
out
stc
xor
lods
mov
in
lahf
ret
mov
jle
sahf
mov
arpl
fcoml
mov
and
insl
sub
cmp
sub
mov
leave
int3
movb
lcall
mov
lret
imul
mov
aam
decb
neg
xor
mov
scas
shll
outsl
inc
xor
stos
rclb
adc
fidivrl
mov
mov
mov
sub
mov
or
out
dec
sub
mov
divl
ss
repnz
jae
push
sub
out
xchg
add
sbb
xchg
stc
mov
dec
adcl
inc
jns
into
lods
mov
add
push
xchg
cmp
dec
jnp
or
cltd
lods
pop
xchg
jle
cmp
or
xchg
cs
mov
in
fbstp
mov
andl
std
dec
cmpsl
js
xchg
dec
movsl
push
aam
cmp
call
xchg
cwtl
repz
or
pop
adc
inc
push
jns
int
aad
in
sbb
addr16
outsl
jmp
pop
arpl
pushf
dec
popf
sbb
add
int
in
ds
loopne
movsb
sbb
sti
add
or
hlt
out
adc
test
cmp
sub
decb
lds
fldenv
sbb
jae
jge
sbb
imul
pop
mov
cmpsl
pop
insl
pop
mov
cmp
popf
pop
popf
stos
in
pop
and
sbb
jo,pt
adc
xor
push
xabort
pop
mov
adcl
enter
adc
negl
out
xchg
pop
imul
test
cltd
insl
pop
repnz
push
mov
lods
inc
push
insl
mov
shrl
scas
mov
fcoml
stc
outsb
out
adc
dec
imul
and
mov
push
and
or
pop
inc
xchg
jecxz
dec
mov
sub
dec
sub
pop
dec
fistl
stc
es
add
daa
icebp
cwtl
and
jle
dec
mov
lods
jge
neg
inc
sub
mov
pop
push
mov
jbe
mov
cltd
push
pop
cltd
test
into
lahf
mov
add
call
test
cmpsb
push
add
orl
sti
pop
addb
push
and
test
dec
jle
sbb
lock
sub
lcall
add
sbb
lds
mov
sbb
xchg
jae
nop
rcl
push
dec
and
ret
and
ret
fldenv
std
repnz
add
pop
sahf
fistl
jg
cmp
push
adc
mov
sbb
pop
push
rcl
andw
mov
xchg
flds
loope
or
adc
mov
mov
shlb
jbe
jnp
dec
dec
sub
int3
nop
loope
rcl
popf
xchg
sbb
loopne
jae
push
imul
mov
xchg
sbb
insb
lock
dec
rol
inc
pushf
imul
sbb
in
cmp
xchg
add
sbb
xor
jns
call
cmp
sbb
aam
xchg
xor
fmul
shr
test
sbb
pop
cmp
and
pop
mov
inc
push
daa
and
scas
pop
lret
push
rol
movsl
sbb
bound
iret
scas
sub
jmp
call
mov
inc
dec
cmp
jl
mov
sub
repz
outsb
add
jae
rclb
dec
bound
jp
push
mov
in
sbb
test
pushf
and
es
pop
mov
rolb
sub
cmp
ss
and
xchg
add
xchg
xor
loopne
insb
xor
aad
rol
add
mov
loope
push
push
xchg
xorb
cmp
pop
xor
imul
cld
popf
mov
xchg
mulb
sub
test
mov
sub
pop
stc
dec
sahf
lods
and
mov
repz
out
push
ja
cli
loopne
repz
mov
push
out
repnz
push
add
mov
jns
iret
call
ret
arpl
pop
mov
js
jne
lods
popf
fyl2xp1
jle
divl
or
scas
scas
outsl
faddl
ror
cltd
outsl
push
mov
mov
outsl
adc
dec
mov
fists
daa
rorl
pushf
lahf
idivb
sahf
sbb
rcll
mov
sub
xchg
into
mov
cmpsl
lock
xchg
sbb
sub
xor
sar
xor
mov
cmpsb
sarb
pop
dec
andl
icebp
mov
gs
push
je
hlt
add
push
fimull
mov
pop
jbe
rcrb
pop
divb
xchg
or
mov
rcl
xlat
cmp
ljmp
repz
pop
es
xor
xor
xor
mov
fisubs
insb
xor
scas
push
int3
imull
pop
fistpl
sub
fadds
adcb
outsb
mov
sub
jno
sbb
fmul
pop
cwtl
repnz
mov
inc
pop
loopne
sbb
test
cmp
outsl
adc
sub
addl
jb
and
jge
outsl
dec
xor
mov
xchg
sbb
inc
jne
jne
inc
xchg
loopne
in
test
mov
aad
or
and
xchg
lods
xor
jnp
cmp
mov
sub
lea
hlt
push
mov
jns
adc
dec
scas
arpl
iret
mov
cld
orl
cmp
pop
decb
adc
in
fnstsw
xchg
cmpb
in
repz
gs
xor
out
adc
dec
movsl
xor
xlat
add
push
jae
mov
xchg
xchg
cmp
inc
mov
cmp
push
push
jg
lahf
test
pop
mov
outsb
out
in
dec
pusha
mov
xchg
add
lds
or
sbb
push
pop
jmp
imul
arpl
add
sbb
aaa
jmp
fwait
loop
cmp
inc
adc
or
xchg
mov
add
push
int3
fimuls
cmp
pop
fs
repnz
roll
sarb
jno
mov
fsubrl
xor
xor
mov
pop
test
pop
scas
stc
push
xlat
cmc
push
jecxz
fldcw
xchg
push
adcl
gs
mov
in
ja
push
dec
mov
sub
jecxz
push
rclb
dec
lahf
and
das
gs
mov
xor
imul
ljmp
sub
or
jp
call
mov
js
sbb
sub
sbb
pop
or
push
mov
movl
sub
fxtract
xlat
xchg
sahf
cmp
mov
cmp
add
lret
jl
or
dec
dec
add
out
out
aam
leave
push
inc
cmpsl
addl
push
inc
jo
add
xchg
ss
cmpl
or
dec
in
push
or
or
std
dec
or
xor
jecxz
or
in
mov
sarb
cmp
mov
rclb
xlat
mov
inc
in
mov
jle
mov
loop
loope
hlt
insb
fwait
out
xchg
mull
not
shll
stc
jecxz
sub
insb
inc
push
icebp
mov
out
or
adc
push
ljmp
test
mov
inc
js
cmpsb
dec
jb
scas
imul
push
into
dec
sarb
inc
cli
sub
int
mov
loopne
xorl
andl
lcall
push
sarb
or
add
pop
pop
pop
rcr
rorb
jecxz
mov
loopne
lret
lods
movsb
ret
cmp
cs
fbld
push
push
fimull
mov
xor
add
std
add
adc
test
mov
jo
popf
jne
test
shrl
enter
scas
xchg
daa
jecxz
sbb
sbb
lods
rep
dec
cmp
cmpsb
pop
or
xchg
sbb
mov
bound
cmp
xor
dec
xchg
inc
sub
mov
xchg
mov
rolb
jge
push
mov
adc
rcrl
sbb
jae
loope
test
fnsave
leave
xchg
stos
mov
mov
mov
and
or
sbb
pop
ja
mov
inc
mov
mov
sub
or
mov
ret
xchg
cmp
xchg
popf
mov
pop
add
sahf
stos
push
aam
loopne
dec
push
cltd
sbbb
pushf
loopne
jae
inc
mov
inc
cmp
bound
mov
adc
test
cld
push
imul
pop
xchg
outsb
ss
loop
stos
scas
call
mov
mov
invd
incb
mov
mov
xor
aad
repz
sti
adc
cwtl
lahf
fldenv
popa
sub
int
sti
out
das
fldt
sarl
cmp
cmp
cmpl
or
data16
push
push
fisttps
sub
out
pusha
adc
in
xchg
jnp
loop
cmp
aad
dec
lds
sub
push
sub
jne
nop
notl
and
sub
mov
cmp
and
sbb
pop
push
lret
xchg
xchg
push
mov
aam
cmc
cs
movsb
mulb
lret
je
push
ja
and
xor
xchg
ljmp
fs
cmpsb
pusha
orl
aas
and
inc
out
out
dec
mov
inc
ret
and
sub
add
cld
sar
imul
lret
mov
outsl
add
add
in
pop
rcl
rcr
cmp
cli
mov
push
bound
daa
xchg
fstp
mov
inc
xchg
lods
xchg
jnp
xor
lret
mov
or
cmp
xor
cmp
add
jle
sbb
cltd
mov
mov
jbe
fisttps
imul
sbb
dec
mov
lods
les
pop
andb
idivl
and
sbb
dec
imul
cmpsl
xor
cmpsl
outsl
jb
xchg
pop
bound
in
pop
insb
jb
dec
sbb
dec
clc
and
mov
mov
xor
pop
xor
ds
outsb
les
ss
movsb
clc
sub
fmul
xchg
les
xor
sub
xchg
and
lods
sub
mov
mov
xchg
ret
jecxz
or
vmread
adc
call
popf
mov
sahf
in
test
das
pop
and
cmpsb
popa
enter
dec
add
insb
xlat
repz
sbb
dec
push
jp
xchg
test
mov
loope
jmp
outsb
mov
inc
stos
jge
popa
data16
cmp
rcrb
lods
cmpsb
test
das
lret
repz
js
dec
test
mov
pop
iret
pop
push
cmpl
movsb
outsl
inc
sti
scas
and
ds
lods
jge
jno
sub
aas
mov
mov
popa
cld
stos
aam
cltd
into
xor
imulb
cmp
int
push
xchg
push
lds
sub
jbe
cmpsl
lcall
mov
xor
jmp
scas
lods
sub
and
out
sbbl
mov
adc
dec
stos
faddl
xor
add
das
addb
cmp
and
jp
pop
mov
test
adcb
fisubrl
ret
mov
adc
push
ficoml
sbb
mov
add
mov
xchg
inc
mov
mov
push
testl
pop
dec
lret
cwtl
cs
inc
movsb
jle
pop
add
jle
into
push
mov
cmpsl
jb
shlb
mov
pop
sbb
inc
and
mov
popa
or
jae
fwait
push
pushf
add
cmp
adc
xchg
aam
imul
xor
dec
sub
mov
pop
sti
jbe
cmp
dec
or
fwait
and
add
mov
add
inc
xchg
or
push
mov
daa
add
ljmp
sbb
jl
inc
adc
push
xor
cmpsb
dec
sbb
in
and
cmpsb
push
inc
cmp
leave
jge
jp
jp
dec
les
in
in
in
das
lret
das
sbb
shll
xor
fsubrs
ret
xor
int
pop
cltd
das
insl
sub
pop
adc
movsb
and
mov
or
jbe
pop
cmpsl
pop
and
pop
enter
push
cmp
jb
mov
push
insb
popa
cmp
das
sbb
imul
push
inc
nop
push
xchg
mov
xor
mov
push
pop
jge
push
mov
pop
stc
rorb
mov
dec
or
es
imul
inc
xchg
cmp
pop
jmp
dec
je
aas
and
out
test
xor
sub
adc
push
xor
test
or
dec
or
inc
ss
pop
cwtl
dec
pop
subl
dec
into
cmp
xchg
pusha
push
dec
icebp
movsl
mov
iret
cmp
sub
lret
in
xchg
push
and
repnz
add
jmp
aaa
dec
gs
mov
rorb
scas
out
jb
jmp
push
dec
sub
cmp
and
pop
inc
jg
pop
loop
leave
outsl
jno
adc
ds
aad
inc
sarb
repnz
xor
adcl
mov
mov
in
js
nop
ss
fcmovnu
mov
out
dec
xor
jg
ret
inc
aad
add
jb
rolb
cmp
aaa
push
inc
inc
adc
jo
jl
adc
adcl
lods
mov
and
mov
mov
push
incl
js
dec
rcrb
adc
mov
cmp
lret
cmp
pop
xor
jg
fistps
push
pop
fadds
mov
mov
out
xor
imul
or
push
jg
mul
popa
xchg
push
out
into
xor
xchg
pop
push
push
push
rcrl
daa
adc
loop
cmp
jp
adc
jo
arpl
and
adc
loopne
cmpsb
dec
pop
push
inc
dec
mov
daa
mov
arpl
fwait
out
jae
aaa
in
mov
loop
into
into
push
sub
xor
arpl
sub
inc
cmp
dec
es
addl
mov
adc
cmp
cmp
fcomps
loop
enter
in
push
cmp
add
iret
push
sub
jne
mov
dec
push
adc
pop
and
mov
push
add
pusha
jmp
int
fptan
mov
imul
dec
mov
push
and
loopne
mov
mov
imul
push
mov
pop
aam
jno
loop
mov
cld
and
fnstsw
je
test
inc
sub
je
dec
mov
fmull
push
mov
adc
xor
xor
adc
repz
xchg
sbb
outsl
jae
jg
dec
nop
inc
adc
shll
je
fisttps
gs
jp
mov
mov
lods
clc
pushf
lds
jge
nop
mov
ljmp
push
repz
out
hlt
mov
xchg
addr16
test
daa
mov
leave
pop
pop
sbb
in
cmc
fs
ror
cmp
into
push
cmp
mov
cbtw
pop
int
mov
or
dec
cs
mov
pop
cltd
imul
jo
inc
mov
xlat
jecxz
mov
into
cmp
xor
rcrl
xchg
stos
sbb
cmc
sub
ljmp
daa
push
inc
cmp
pop
pop
lcall
stos
xchg
fisubl
sbb
rorb
push
out
add
mov
rol
es
mov
pop
mov
std
mov
mov
fwait
xor
jg
or
inc
mov
sbb
je
jne
dec
fildl
test
gs
in
andb
arpl
popa
lds
icebp
imul
or
cmpsl
clc
adc
ja
mov
push
mov
aaa
push
cmp
inc
in
shlb
gs
inc
rcrb
ret
xchg
negl
test
adc
mov
jno
mov
decl
push
dec
inc
or
loopne
dec
leave
pop
and
jmp
sub
fwait
mov
imul
lret
pop
cli
cwtl
mov
loop
into
add
jne
js
lock
push
xchg
pusha
adc
add
cmp
push
arpl
fcmovbe
jnp
mov
imul
stc
imul
in
pushf
jmp
adc
fmuls
and
jmp
pop
rclb
mov
push
xor
iret
push
out
dec
cmp
or
or
sub
or
pop
jo
xorl
dec
dec
dec
aas
add
rorl
pop
jo
jns
pop
or
jns
adc
fcmovbe
into
jnp
mov
pop
and
cmpsb
dec
fistpll
mov
outsl
adc
sbb
aad
fldenv
hlt
loop
jb
pop
fs
mov
and
jmp
cmp
clc
ja
add
jmp
aam
ss
mov
icebp
xchg
sbb
hlt
adc
adc
cltd
fdivrs
in
mov
mov
mov
mov
mov
ljmp
icebp
insb
fldenv
divb
loope
adc
notl
cmc
lock
lods
imul
std
pop
pop
pop
adc
jg
prefetcht0
sti
xor
fs
popa
dec
pop
jmp
sbb
ja
or
inc
inc
fiaddl
mov
add
adc
push
mov
ficoml
pushf
out
mov
jmp
mov
enter
in
push
rcr
sub
cmp
aas
xchg
movl
xor
rcr
cmc
sub
out
aad
dec
iret
das
movsl
pop
pop
pop
ds
jo
int
std
mov
push
pop
je
or
add
mov
in
stos
inc
dec
inc
movzbl
sub
adc
mov
pushf
and
mov
sbbl
jecxz
into
pop
xor
repnz
xor
mov
push
aaa
cmpsb
fnstenv
mov
neg
xor
dec
xchg
ret
sbb
shrl
sahf
jne
scas
rcrl
mov
cmpsb
mov
mov
subb
outsb
add
movsb
cmc
stos
or
insl
jno
xchg
out
pop
clc
dec
movl
je
mov
mov
loopne
pop
into
leave
pop
repz
ret
aad
mov
push
dec
jecxz
mov
xchg
into
dec
cmp
ss
mov
xchg
rol
pusha
dec
adc
jl
adc
sub
inc
lods
xchg
ja
sbb
rcll
mov
push
sarl
lret
xchg
mov
int
out
out
daa
xor
jmp
daa
push
push
xor
cmpsb
xrelease
fwait
jns
xor
fadd
dec
push
pop
aam
mov
es
in
cld
push
pusha
sub
cmpb
fstpl
push
out
push
clc
xor
and
xchg
inc
outsl
inc
sti
adc
data16
jl
cld
xchg
test
int3
push
jge
and
fcomi
cs
mov
repz
pop
dec
or
pushf
decb
or
jecxz
mov
mov
addb
bound
pop
std
xchg
shrb
xchg
ret
sub
adc
ret
jae
cmp
push
insb
sub
incb
or
add
loopne
mov
cmp
sahf
cld
cwtl
aaa
pop
mov
mov
xchg
stos
addr16
icebp
shlb
add
jp
cwtl
inc
push
testl
cld
shl
bound
sbb
push
pop
imul
xchg
mov
sbb
in
aaa
iret
xchg
mov
lcall
cmp
arpl
pop
js
fisubs
inc
pushf
cltd
loopne
std
and
adc
mov
sub
inc
xor
faddl
adc
mov
fwait
shll
iret
xlat
jcxz
lods
in
aaa
hlt
mov
sti
fwait
mov
call
mov
imul
jo
aam
add
in
mov
aaa
les
mov
cmp
cmpsl
and
xlat
test
or
cmp
xor
shlb
js
mov
lock
push
dec
outsl
ret
fst
push
jnp
or
mov
cmp
dec
mov
xlat
fcomi
inc
popa
adc
sbb
out
pop
rclb
pop
add
lods
push
daa
xlat
sbb
mov
mov
call
cmp
shl
jo
pop
lcall
push
dec
out
inc
or
xchg
and
jge
stc
out
adc
xlat
dec
xchg
jge
nop
dec
jle
mov
lods
ret
cmp
adc
push
out
adc
inc
and
cmp
add
ja
rcrl
or
jg
push
lds
add
sub
das
outsl
out
mov
scas
dec
fildll
sti
mov
dec
sbb
in
daa
lds
loop
jno
add
aaa
sub
out
shrb
shll
pop
jl
cmp
mov
clc
lret
imul
dec
inc
dec
push
inc
repz
push
dec
xchg
add
popf
pop
dec
ror
les
int
roll
mov
in
inc
test
pop
mov
aas
lcall
cmp
imul
or
test
sub
mov
adc
fsubrs
add
adc
andb
push
mov
notl
pop
mov
rclb
pushf
sbb
and
xor
xor
cs
hlt
sbb
aaa
pop
pop
leave
arpl
aad
outsl
sbb
jnp
insb
jle
add
sbb
pop
jmp
push
test
inc
pop
push
cwtl
ret
sahf
cmp
dec
icebp
jge
fwait
mov
ja
push
xor
jmp
hlt
add
imul
sbb
adc
inc
jmp
push
pushf
nop
mov
pushf
dec
jo
jle
sbb
mov
dec
loope
je
push
jnp
stos
add
sub
scas
mov
fisubs
inc
jle
xor
es
test
pop
call
adc
cld
cmp
popf
inc
lcall
or
outsl
sub
push
jo
push
pop
test
arpl
cmp
xchg
adc
jb
adc
jo
insb
test
inc
fdivr
push
aaa
divb
in
cld
into
jno
adc
or
sbb
push
mov
jno
imul
gs
aam
rcrl
pop
dec
jnp
mov
pop
inc
xlat
cmc
outsl
in
push
fsubrs
popa
imul
dec
mov
push
rcl
movsl
push
cli
movsb
and
mov
enter
push
aas
pop
push
jp
inc
std
cmp
pop
or
fcoml
ficompl
inc
jl
mov
inc
or
push
xor
outsl
fisubrl
adc
mov
jge
cmpb
popf
iret
ja
or
and
dec
and
and
or
sbb
push
pop
jo
leave
sub
dec
icebp
mov
pop
ret
fsubs
daa
sub
lret
jp
cld
add
xchg
movb
mov
enter
xor
data16
pusha
cld
lret
mov
mov
nop
data16
shl
lcall
jns
fstl
movsb
jno
cmp
inc
push
mov
shlb
bound
arpl
test
xchg
dec
shll
inc
xchg
aam
push
add
ljmp
or
out
lahf
sub
mov
jno
adc
stc
sub
jae
roll
sub
push
fisubs
jnp
fwait
jecxz
arpl
mov
insl
cli
mov
cmp
cwtl
jmp
outsb
push
sarb
fidivs
iret
scas
mov
int
push
gs
mov
inc
data16
sbb
cmpb
sbb
mov
xchg
mov
dec
lock
jnp
subl
lods
xchg
loopne
dec
js
lods
sub
das
rol
mov
iret
jle
jl
loope
nop
test
xor
jge
popa
addb
lret
mov
add
jo
ss
loopne
mov
dec
loop
in
loop
mov
std
cmpsl
movl
sub
fwait
xchg
out
fmulp
push
mov
lods
jae
push
ret
dec
or
add
mov
mov
cld
xorb
adc
jbe
in
dec
sbb
cmp
mov
add
sbb
fwait
jecxz
mov
push
cltd
inc
fs
push
jg
fdivrl
mov
mov
in
imul
or
in
pop
inc
xor
push
pop
and
sti
mov
enter
mov
and
dec
push
in
cmpsb
fistps
jnp
mov
ds
call
mov
sarl
mov
into
inc
sbb
sub
push
pop
ljmp
inc
enter
sbb
xor
xchg
adc
test
mov
out
xor
shrb
lods
jge
sbb
repz
push
popa
inc
xchg
loop
xor
sub
out
aam
jle
and
xor
ror
adc
outsb
sub
data16
shr
inc
adc
xchg
or
mov
push
movsb
rorl
jae
dec
hlt
sbb
fsincos
sbb
dec
js
ret
mov
pop
outsl
or
sbb
out
xchg
out
test
push
scas
cmc
jo
inc
fdivp
xor
ret
or
mov
ss
mov
cltd
loope
adc
aad
sahf
jnp
test
js
mov
test
pop
arpl
push
add
sarb
shl
pop
adc
xor
add
int
in
outsb
repz
test
jns
pop
inc
and
cmpsb
sbb
xchg
pop
or
lea
call
imull
jne
jnp
push
bound
mov
ret
iret
je
or
stc
xlat
es
and
and
cmp
addb
jbe
or
push
cwtl
mov
mov
xor
xchg
add
push
movsb
mov
lcall
sbb
and
add
mov
icebp
xchg
bound
xchg
push
mov
icebp
inc
in
clc
inc
and
insb
imul
fbld
push
dec
out
dec
mov
jp
scas
orl
or
push
stos
push
shlb
cli
sub
or
push
loope
scas
lahf
pop
sbb
xchg
add
xchg
aam
and
cwtl
mov
mov
test
addr16
ljmp
faddl
popa
xor
repz
push
shll
dec
jmp
mov
insb
std
and
xor
xchg
jb
push
in
push
rolb
lds
stos
inc
add
mov
repz
cmp
shrb
pop
pop
in
cld
popa
int
adc
sarb
daa
sub
out
mov
cvtps2pi
les
adcb
scas
adc
mov
mov
push
cmc
and
push
or
mov
jb
push
iret
adc
mov
xchg
mov
jns
mov
movsl
jg
addr16
dec
dec
sub
push
add
rorl
scas
xor
lock
push
addr16
sub
cmc
xchg
pop
out
xlat
cmp
dec
loop
sbb
into
fmulp
jle
icebp
outsb
imul
pop
dec
dec
shll
jne
jecxz
push
popf
data16
jg
add
mov
and
pminub
mov
jb
cmp
dec
bnd
jae
iret
test
inc
out
nop
jge
je
push
repnz
xchg
push
fldcw
or
jmp
adc
lret
fcmovu
test
push
jno
fidivrs
int3
xchg
popf
xchg
daa
mov
fldenv
or
outsl
cmp
fbld
icebp
pop
sub
fldcw
lret
adc
push
mov
xchg
pop
sub
add
cwtl
dec
mov
push
xor
int
mov
outsb
in
mov
sti
notl
addr16
sbb
adc
fsubs
roll
sbb
sbb
in
loope
mov
pushf
dec
cmpsl
jb
aad
int
enter
adc
inc
jnp
or
ljmp
add
push
jmp
loope
stos
push
cmp
pop
jge
imul
aad
shrl
xchg
inc
sbb
imul
gs
loopne
outsb
or
mov
mov
fadd
or
jp
movsb
xor
jb
movsl
add
mov
adc
lcall
dec
dec
mov
imul
sub
jne
push
xchg
cli
add
ret
test
jmp
or
cltd
dec
ja
xorl
mov
ffree
insl
inc
pop
xchg
je
add
loope
rolb
sbb
adc
ss
pop
sub
inc
xchg
outsb
add
cmc
cmc
xor
mov
insb
rcll
inc
add
not
fiadds
sbb
or
and
pop
mov
cmp
inc
and
repnz
add
das
icebp
mov
fisubl
push
dec
imul
test
ljmp
and
inc
movsl
pop
daa
clc
daa
pop
es
push
cmc
xor
scas
jge
mov
out
mov
cmp
out
dec
mov
js
rcl
sbb
dec
out
sub
push
sarl
loop
orl
pop
daa
insl
xor
jo
sub
lods
add
push
xchg
mov
scas
mov
xchg
pop
push
icebp
pop
mov
arpl
stos
push
movsb
repnz
inc
fisttps
sbb
outsb
loop
mov
mov
sbb
jl
push
test
or
cmp
pop
movsl
push
lret
insb
push
out
rorl
dec
sub
push
inc
xor
xchg
jnp
mov
mov
xor
movsb
imul
data16
push
add
ja
sbb
inc
add
or
jns
aas
cmp
push
cs
mov
mov
inc
push
lahf
xor
sbb
popa
adc
aad
into
pop
stos
fs
jne
xchg
dec
pop
pop
bound
sbb
dec
call
adc
rorl
scas
sub
cwtl
mov
sbb
jl
xchg
repz
nop
cmp
leave
inc
out
clc
sub
cmpsl
pushl
cld
out
icebp
push
xchg
fwait
dec
cmpsl
dec
mov
fisubl
lea
shrl
iret
xchg
xor
stos
cmp
rcr
mov
stos
data16
inc
adc
pushl
pop
sub
lea
cmpsl
push
cmp
rcll
clc
or
sbbl
mov
out
push
aam
repnz
dec
dec
push
divl
or
sbb
xor
int3
jle
bound
daa
xchg
cmp
pop
sub
mov
jmp
or
ljmp
or
inc
inc
aad
mov
bound
arpl
mov
dec
test
in
adc
pushl
loopne
dec
bound
aam
aaa
xchg
mov
mov
jne
jne
into
hlt
mov
push
sahf
movsl
repz
les
dec
mov
test
jle
push
push
stc
std
ja
les
std
ret
out
movsl
xchg
sbb
fsubrl
inc
pop
xor
xchg
inc
dec
stos
movsl
lret
cmpb
imul
arpl
and
mov
int3
sbb
je
xor
inc
shll
rcll
popa
cld
xchg
xchg
stc
pop
push
fnstcw
and
inc
shlb
frstor
inc
and
popa
ss
enter
xor
aas
ss
xchg
sbb
nop
add
scas
mov
cld
ficomps
out
add
or
movsl
sbb
pop
aad
pusha
adcl
andl
pushf
jmp
outsb
lret
jbe
jne
dec
xchg
out
mov
clc
clc
shll
lods
sbb
or
xchg
adc
leave
xlat
daa
notl
add
dec
out
data16
or
adc
dec
ja
push
js
mov
out
bound
or
ljmp
pushf
sub
sti
push
dec
aad
cmpsb
gs
mov
jmp
xor
pop
addr16
dec
pop
cmp
sbb
ljmp
clc
pop
and
sub
dec
testl
insl
xchg
cmp
jbe
mov
cmp
ljmp
addr16
test
cmp
xor
xor
xor
push
les
mov
stos
flds
mov
lcall
rcr
jne
pop
dec
imul
inc
jne
pusha
sarl
jbe
inc
cmp
pop
xor
mov
test
mov
jns
mov
inc
es
xchg
sbb
iret
or
push
mov
ret
xor
cmpl
mov
lret
ljmp
and
adc
stos
adc
pop
mov
rorb
test
mov
in
inc
sbb
fsubrs
mov
pop
cmp
xchg
sbb
outsl
adc
pusha
int3
add
mov
cs
xchg
scas
pop
mov
aaa
jmp
jmp
cmp
bound
mov
int3
idivl
ret
movsb
mov
and
andb
xchg
sub
fdivl
sahf
mov
jp
mov
adc
xchg
or
or
mov
push
mov
push
push
idiv
pop
mull
mov
and
test
jle
push
dec
jne
cmpsl
ret
mov
mov
add
in
call
faddl
call
inc
ljmp
das
je
adc
lret
or
adc
xchg
or
sub
mov
mov
xor
and
adc
mov
cli
or
push
mov
insb
rorb
push
scas
mov
cmp
pop
cmpsl
xor
push
sbb
scas
push
pop
insb
and
sbb
cmp
lock
and
jmp
sbb
xchg
sbb
pop
test
inc
jno
in
jp
jno
aam
push
fs
add
aas
stos
out
movsl
je
jecxz
and
test
popf
or
outsl
enter
lcall
out
xchg
pop
add
into
cltd
push
xchg
aaa
repnz
out
pusha
cmpsl
mov
push
or
mov
sahf
mov
pop
adc
sub
inc
cmpsl
fstpt
jb
fstpl
xchg
mov
mov
inc
xchg
xor
movsl
or
jge
rol
add
dec
push
sub
cli
mov
pop
pop
cli
aaa
dec
lds
call
leave
cmp
mov
dec
stos
mov
roll
nop
and
cmove
stos
cld
js
sarb
sub
fwait
push
nop
mov
push
ret
inc
insb
sub
inc
xor
movsb
push
add
lcall
pop
test
outsb
jo
pop
das
cmpsl
mov
outsl
dec
xchg
lock
jb
dec
xor
repnz
inc
pop
scas
loope
xchg
or
mov
cli
insl
call
cmp
add
jns
rol
sub
adc
mov
mov
test
push
cmp
lcall
dec
xchg
fwait
jae
mov
int
fistl
cmp
insl
push
out
test
sarb
dec
xlat
and
add
roll
enter
inc
test
inc
nop
mov
xchg
loope
insl
inc
xchg
sbb
cli
xor
push
rorl
orb
stc
xchg
dec
mov
mov
call
cwtl
andl
adc
into
sbb
sbb
xor
jecxz
lods
cld
test
pusha
stos
cltd
inc
loop
rclb
std
push
popa
andl
insl
adcb
push
jns
ja
pop
xchg
popa
pop
xchg
xchg
inc
mov
jle
cmp
ret
lret
shlb
push
rorl
add
das
je
mov
test
mov
rol
inc
jae
lea
mov
jne
sbb
ds
push
mov
adc
ljmp
mov
and
loopne
arpl
lahf
in
mov
out
jge,pn
and
jne
adc
subps
dec
jl
xchg
cmpsb
clc
mov
lcall
repz
dec
sub
stos
xor
fdivrl
inc
sbb
sub
inc
or
icebp
je
rorb
cmp
mov
and
out
mov
lock
dec
jmp
movsl
mov
mov
rcrl
imul
dec
inc
imul
lret
push
xchg
mov
ljmp
arpl
stos
add
jl
cltd
sub
mov
xor
into
dec
mov
test
jbe
fmuls
dec
sarl
cmp
jnp
outsl
dec
fs
jnp
js
clc
sbb
dec
outsl
popa
mov
lret
fidivrl
je
loopne
cmc
jno
pop
rorl
dec
sbb
cmpsb
stos
sbb
pop
cmp
push
hlt
lcall
call
xlat
in
scas
adc
sahf
xchg
mov
pop
out
pop
and
xchg
and
xchg
jg
jo
addr16
jne
dec
ret
dec
push
pop
pop
mov
jne
loope
nop
mov
and
xchg
mov
pop
sbb
mov
fcmove
cli
test
or
loopne
leave
xchg
xchg
lahf
je
loop
cs
mov
mov
or
mov
mov
xor
sbb
das
sar
hlt
mov
cmp
mov
adc
lret
nop
push
loope
pushf
xchg
sahf
adc
lea
xchg
xor
sub
aad
rol
sub
cld
mov
into
rclb
inc
outsb
scas
pop
cmc
inc
mov
mov
inc
adc
add
stos
das
or
xor
add
inc
out
dec
pop
adc
sub
repz
dec
mov
add
xlat
jl
cmp
sub
inc
fwait
xchg
les
int
mov
pop
or
jmp
nop
dec
and
scas
out
cmpsl
aad
das
or
sub
cltd
mov
mov
mov
addr16
sub
sarl
push
lods
int
mov
add
dec
cmp
fidivrs
or
mov
scas
and
mov
pop
dec
jl
push
jecxz
push
out
add
and
sbb
mov
mov
das
jecxz
xchg
adc
cwtl
lcall
sub
cmc
std
mov
jo
js
and
dec
pop
loopne
ret
in
icebp
jns
adc
jl
xlat
jns
mov
mov
fwait
sahf
stos
add
mov
mov
mov
outsb
push
loop
aaa
repz
icebp
jecxz
mov
mov
xor
dec
cmpsb
xchg
push
andl
cmp
dec
cmc
add
mov
leave
mov
mov
inc
sub
jp
addb
pop
push
movsb
sub
adc
and
into
ljmp
sub
and
sbb
xchg
cmp
or
push
aas
adc
stos
add
inc
xlat
mov
inc
cli
mov
gs
and
int
mov
int3
cld
movsb
push
call
lahf
outsl
pushl
sbb
call
sbb
mov
fcomi
sub
stc
push
shr
call
lcall
add
rclb
in
lret
in
adc
sbb
xor
push
xchg
lods
and
call
mov
xchg
mov
std
mov
mov
loop
cmp
scas
push
cmp
idivl
les
lcall
gs
or
in
sbbb
cld
cmp
push
mov
insl
push
sub
lods
dec
popa
xor
jb
push
jmp
push
jecxz
jb
fisubs
stos
sbbl
mov
jmp
add
mov
xor
jne
sbb
aaa
dec
xor
sub
out
lods
es
xor
movsb
xchg
sub
fimuls
nop
movsb
dec
sar
dec
out
mov
mov
hlt
mov
subl
xchg
mov
pop
cmc
fwait
pushf
out
daa
pop
lods
les
mov
lods
jae
negl
jo
jmp
mov
popf
push
or
mov
mov
mov
inc
and
add
pop
pop
sub
lods
dec
jb
push
xchg
pop
inc
stc
push
mov
rcl
push
cwtl
and
std
xchg
aam
push
loope
mov
mov
cld
fldt
sbb
cltd
xlat
mov
mov
or
inc
jge
fs
xchg
mov
inc
fidivs
add
rorb
pop
aaa
fwait
cmp
stc
mov
fists
movsl
rol
xchg
xchg
cmp
dec
aas
loopne
jmp
scas
mov
or
hlt
xor
movsl
adc
dec
lret
pop
int
dec
repz
mov
mov
ret
mov
into
adc
cmp
mov
fdivl
icebp
neg
mov
sub
sbb
je
jle
ljmp
mov
test
into
push
jecxz
ljmp
jbe
add
jle
cmp
xchg
mov
push
out
inc
dec
movups
and
sti
into
push
lds
mov
or
in
dec
xlat
ficomps
aad
dec
sub
pop
xchg
jl
mov
sbb
inc
mov
mov
cwtl
mov
je
pop
js
lods
shll
lahf
dec
lret
dec
sbb
ljmp
add
lods
ret
outsb
mov
repz
sub
push
stc
dec
sbb
inc
push
inc
mov
mov
mov
and
mov
lds
mov
jns
adc
jge,pn
sbb
dec
push
aad
mov
xor
out
ds
xchg
jmp
fidivs
leave
daa
int
es
sub
xor
push
fwait
xchg
insb
repnz
jle
and
das
in
jno
mov
lret
jns
xchg
into
dec
jns
mov
jle
jae
sahf
ljmp
mov
adc
push
jmp
clc
cmp
imulb
je
mov
subb
jae
inc
out
ret
je
or
decb
testb
cld
push
sub
in
aam
out
mov
mov
shrl
ror
dec
test
lods
lods
and
jge
stos
pop
pop
stos
dec
mov
xchg
inc
jo
mov
or
cvtps2pd
cmp
daa
out
sbb
ja
push
mov
mov
pop
xor
dec
sahf
adc
mov
mov
jmp
push
inc
add
loop
cmpsb
push
lea
jge
or
repz
push
mov
adc
pop
sbb
clflush
dec
sahf
movsb
dec
xor
divb
cs
pop
mov
stos
shlb
cmpsl
mov
aaa
sbb
nop
mov
mov
mov
test
ja
dec
push
sarl
std
add
hlt
push
xor
jnp
dec
cmp
outsb
in
repnz
cmp
cwtl
lcall
icebp
or
and
rolb
mov
push
into
lcall
out
mov
or
jne
inc
mov
out
sarb
mov
sbb
iret
push
fs
pop
movsl
sub
adc
mov
imul
clc
int
out
les
repz
pop
mov
sbb
pop
xchg
jmp
dec
push
mov
mov
aad
adc
out
mov
inc
pop
sbb
sahf
adc
jbe
jmp
jo
fsubrp
inc
shlb
aam
popf
fstl
pop
je
call
out
out
imul
lods
sbb
mov
jbe
push
jne
xor
pusha
jmp
or
mov
add
sub
imul
or
ret
mov
adc
negb
in
addr16
test
xor
xchg
popa
or
sahf
and
pop
sbb
xchg
jmp
inc
add
ret
xchg
bnd
popa
mov
roll
ret
test
lods
push
ljmp
push
fcmovnbe
pop
inc
sbb
nop
popa
in
es
sti
sbb
jno
fsubl
loope
dec
and
inc
jbe
dec
ret
nop
push
ret
adc
xor
sahf
push
ss
leave
insl
and
clc
sahf
or
ds
insb
sub
cli
repnz
into
jo
push
subl
addr16
and
sbb
xor
fstl
dec
inc
shlb
pop
shr
cld
jnp
and
loope
push
rorl
or
jb
test
std
rol
aam
jg
mov
and
sub
in
sbb
iret
popf
or
cmc
out
test
sbb
jl
jnp
jbe
cwtl
sub
out
iret
xchg
out
or
jb
jecxz
jp
rorb
fsubp
hlt
add
movsl
subl
cmp
scas
in
mov
fdivrl
mov
mov
xor
sub
lods
cmp
stos
or
fisttpl
dec
clc
dec
push
lahf
cmp
sbb
cmp
iret
mov
cmp
adc
adc
ljmp
loopne
jmp
and
inc
inc
xchg
mov
in
mov
addr16
cmpsb
xor
mov
mov
xor
je
std
sbb
data16
inc
xor
mov
xor
xchg
jmp
iret
js
loop
cmp
and
sahf
adc
cmp
idivl
test
out
psubd
xlat
mov
jbe
dec
lods
or
cltd
xlat
jo
adc
add
cmc
cli
xchg
push
jle
into
cmp
les
add
push
mov
pushf
filds
es
inc
cld
sub
xor
mov
rolb
filds
fstps
dec
xor
pop
cmpsb
aaa
xchg
sbb
ss
les
mov
ljmp
mov
icebp
sbb
add
repz
repz
jo
inc
jecxz
add
loop
adc
xchg
nop
test
adc
cmp
in
inc
roll
jbe
jmp
comiss
sahf
into
pop
adcb
xor
add
pop
insb
movsl
mov
push
sbbb
stc
icebp
mov
adc
andb
iret
pop
out
pushf
xchg
cmp
sbb
movsb
fldt
push
ja
pop
dec
add
ret
or
inc
lods
repz
call
cwtl
mov
out
fbstp
mov
xchg
jbe
xchg
arpl
adc
fidivrs
shlb
xor
scas
mov
mov
cli
adc
xor
adc
push
popa
mov
mov
or
mov
test
lret
sbb
jne
mov
je
ja
sbb
jmp
loop
mov
rcrb
push
mov
fbld
and
cltd
mov
push
test
lods
add
inc
shll
insb
imul
adc
push
xlat
jle
adc
sbb
xchg
mov
in
push
pop
cmp
inc
sahf
nop
pop
clc
adc
cltd
cmp
sub
jecxz
mov
fs
fsts
push
cmc
test
mov
call
pop
cld
add
scas
push
dec
aaa
mov
std
scas
out
aam
xchg
xchg
inc
dec
fucomp
push
jne
or
repnz
mov
bound
add
cltd
loop
repnz
jge
cld
jp
lahf
jge
test
std
lahf
push
push
out
or
mov
xor
std
or
or
test
or
outsb
inc
dec
sti
sahf
stc
add
inc
sbb
shll
mov
outsb
jecxz
test
sbb
or
ret
jbe
insb
ja
mov
jp
mov
adc
adc
iret
jo
mov
lret
sarl
mov
into
icebp
xchg
add
mov
mov
ret
imul
ficomps
add
cmp
shrl
pop
xchg
cmpsl
mov
pushf
icebp
ljmp
loopne
sub
ljmp
in
inc
sbb
xchg
shrl
loope
daa
mov
loopne
insl
adc
mov
jne
xchg
fnsave
cli
test
shll
xchg
cmp
cmpsl
aam
xor
and
or
adc
xor
xor
stc
inc
push
mov
out
jmp
test
dec
jp
sub
and
pusha
lock
fadds
dec
imul
push
mov
cmc
or
and
aad
jbe
shlb
mov
push
test
mov
pop
movsl
hlt
aaa
stos
imulb
adc
xchg
cmpsb
push
jmp
cmc
push
mov
mov
pusha
insb
hlt
jp
ret
insb
call
dec
sbb
pop
in
pop
cld
dec
sub
xrelease
add
mov
add
mov
push
inc
scas
popa
cmpsl
mov
jb
scas
pusha
lahf
std
add
les
ja
leave
pop
out
in
hlt
lcall
ret
lahf
test
mov
xchg
push
add
in
leave
std
lret
push
lods
mov
repnz
sub
arpl
js,pt
stc
movsb
movsl
in
das
adc
ds
sbb
outsl
outsl
sahf
mov
and
stos
push
aaa
out
cmp
or
in
scas
daa
dec
popa
jb
mov
gs
fwait
mov
sbb
xor
mov
mov
mov
movb
shrl
aas
mov
iret
dec
jns
dec
test
ja
out
in
std
push
xor
nop
ja
in
inc
nop
dec
inc
movsb
pop
pop
add
js
test
xchg
in
push
lods
xchg
adc
in
popf
icebp
jae
dec
daa
jae
pop
xor
mov
in
sti
ja
popf
mov
sti
pusha
je
jl
push
xor
push
sub
out
dec
sub
add
push
int3
out
mov
out
push
lcall
mov
inc
push
fwait
sub
jns
mov
xchg
dec
aas
push
rcrl
dec
sbb
mov
ds
scas
outsb
adc
enter
daa
cmp
stos
test
nop
adc
cmpsl
add
ret
sbb
out
add
pop
cwtl
in
mov
xor
pop
pop
jle
push
ret
sbb
outsb
and
sub
clc
cmp
add
and
add
sarb
sub
or
jl
pop
sti
jns
mov
insl
out
add
and
jecxz
hlt
iret
das
cmp
iret
int3
inc
idivb
aad
cwtl
jl
sbb
lock
cmp
aas
nop
mov
sahf
dec
pop
shll
cwtl
jle
xchg
addr16
ret
push
fstpt
and
lock
pop
mov
movsl
mov
adc
iret
clc
mov
outsl
mul
imul
inc
inc
lret
sarl
add
xchg
cmp
shrb
sub
mul
or
sti
pop
ds
jns
push
ljmp
push
cmp
fistpll
or
xchg
pop
or
jecxz
stos
popa
mov
xor
rcrb
push
es
sbb
lds
mov
mov
fisttpl
rcll
fnstcw
jmp
add
lods
xchg
shlb
mov
repnz
sub
adc
and
mov
pop
push
loope
and
cmpsl
jns
into
pop
jp
add
cmp
adc
dec
jae
jae
lahf
outsb
aas
popf
lahf
out
pop
aas
test
jb
loopne
movsb
pushf
idivl
xor
out
call
pop
jo
xchg
jae
xchg
jle
jbe
stos
push
jns
mov
fdiv
icebp
xor
popa
std
dec
stos
adc
mov
pop
jle
mov
mov
cmpsb
call
cmp
lock
in
jno
sub
fs
pop
mov
mov
lret
jo
mov
call
push
dec
jb
sub
mov
xchg
arpl
add
push
jl
bound
out
sbb
mov
pop
push
push
pushf
out
add
mov
std
mov
mov
mov
push
pop
xor
mov
lea
fiadds
loop
and
int
aaa
push
loope
out
movsb
and
ret
mov
add
dec
retw
shll
jae
rorl
gs
mov
and
ds
fdivrp
adc
and
xor
xchg
out
sahf
mov
fs
imul
cmc
les
add
jle
data16
add
cmp
cmc
adc
pop
in
sub
mov
and
pop
icebp
out
jb
push
inc
pcmpgtb
in
xchg
test
ds
andb
pop
jmp
xchg
mov
fs
insb
rclb
pop
loop
lock
sbb
ljmp
dec
fstpl
mov
xor
xchg
repnz
cmp
dec
mov
add
js
arpl
dec
jp
sub
dec
mov
cmp
xchg
adc
xchg
shlb
add
shlb
adc
adcl
lret
sbb
dec
pop
int
hlt
les
fwait
xor
push
push
inc
stos
mov
outsl
and
dec
cltd
int3
dec
test
mov
pop
rorb
xor
xchg
repnz
js
sbb
push
clc
jbe
fidivrl
xor
lods
les
add
test
int3
dec
out
ret
movsb
pop
dec
or
test
setge
leave
fsub
out
push
mov
dec
cmpl
adc
push
movb
rorb
int
jno
xor
add
fdivrl
es
iret
and
pushf
mov
dec
scas
rorb
jno
daa
and
dec
imul
popf
fcoml
sub
cmp
ljmp
stos
adc
jae
adc
adc
addr16
mov
cs
lods
or
mov
arpl
test
sbb
adc
mov
and
das
add
jle
call
push
and
and
jp
scas
jg
nop
inc
scas
repz
adc
push
mov
or
leave
and
arpl
push
add
cmp
inc
stos
into
push
jmp
or
cmp
es
pop
rolb
arpl
test
add
scas
arpl
xchg
lea
inc
lret
arpl
into
mov
stc
jecxz
add
popa
pop
inc
je
push
insl
idiv
and
fld
xchg
fnstcw
or
dec
scas
mov
cmp
sub
push
cld
xor
jns
mov
push
xchg
push
movsb
fimull
mov
rcll
out
daa
int3
enter
mov
and
mov
or
aad
and
das
pop
mov
xchg
push
fcomps
out
stos
mov
jb
repz
cli
fbld
xor
in
hlt
fnstsw
adcl
xchg
jnp
call
pusha
xchg
jnp
nop
xor
loopne
mov
mov
nop
cltd
cmp
dec
or
out
dec
sbb
out
cmc
nop
fs
add
imul
mov
popa
cmp
and
cmc
adc
rolb
dec
mov
pop
lret
push
lahf
add
push
and
or
and
test
stc
push
hlt
cmc
xchg
xchg
cs
and
push
push
mov
dec
adc
cmp
nop
lods
stos
stos
sbb
test
int
insb
inc
mov
fcmovne
mov
shl
insl
xor
hlt
cmp
shrb
or
rorl
sub
sti
jo
jo
addr16
xchg
adc
inc
jns
cmp
stos
cmp
int
or
mov
xchg
jp
mov
add
jns
push
push
imul
mov
in
pop
loopne
ljmp
test
and
icebp
mov
jo
lcall
gs
ficomps
inc
mov
bound
in
stos
jne
jl
mov
lea
in
add
aad
scas
movsb
add
xlat
lret
sub
add
dec
shr
push
lods
fadd
test
dec
divb
mov
dec
adc
out
push
movsb
pop
mov
addb
pushf
lahf
mov
pop
pop
inc
pop
outsb
mov
mov
cmpsl
fcoml
xchg
imul
sbb
sbb
mov
xchg
iret
and
pop
pop
repnz
dec
push
je
add
in
sub
jg
add
sbb
mov
imul
js
daa
aam
arpl
lahf
rorl
cltd
int3
outsb
rol
mov
jle
sub
push
in
pop
data16
cs
add
and
fs
in
xchg
outsb
mov
mov
aad
jns
xchg
dec
loop
rclb
adc
add
pop
nop
stc
fwait
clc
cmp
fsts
cmp
movsl
or
or
jne
and
xchg
mov
loop
inc
mov
ss
in
stos
outsb
daa
and
out
cmp
jb
jo
jge
jbe
push
xlat
inc
addr16
xor
adc
lock
sbb
pop
popf
push
xor
or
jp
cmp
in
lock
popa
jbe
inc
xlat
inc
cmp
enter
mov
scas
std
in
pop
push
into
fnsave
adc
jno
lret
clc
jnp
fwait
add
in
inc
mov
adc
int
sbb
imul
dec
je
sbb
sbb
lock
mov
add
sub
pop
adc
pop
pushl
mov
pop
sbb
inc
cli
sarl
mov
or
fcoml
or
sub
rorb
scas
xor
cmp
in
jg
push
pop
dec
sbb
daa
cs
mov
mov
xor
aam
xchg
jbe
pop
daa
cli
push
aas
inc
pop
sti
fstp
xor
xchg
mov
push
mov
mov
jo
test
sub
push
in
mov
push
call
mov
mov
leave
pushf
xchg
sbb
dec
xchg
mov
push
out
push
cmp
orl
cmp
or
out
lds
ja
xor
js
insb
inc
mov
mov
mov
fcomps
test
mov
push
idiv
out
push
inc
sbb
mov
push
rcrl
int
into
lret
shll
cmpsl
xor
cmpsl
out
add
loop
lods
and
xchg
jmp
fisubrl
add
cli
xor
adc
addr16
sbb
out
inc
inc
mov
fists
out
jl
lds
xchg
xchg
popf
and
sti
push
push
outsb
in
xchg
leave
mov
je
pusha
and
incl
jns
sbb
dec
push
sbbb
mov
jmp
arpl
cmp
orb
shll
nop
ja
mov
outsl
sub
cwtl
lock
call
lcall
mov
jecxz
fildll
sbb
add
test
adc
xchg
inc
hlt
or
leave
sti
cmp
pop
jp
lods
sub
das
or
sub
mov
out
adc
inc
mov
push
cli
stos
clc
das
lea
popa
push
lods
pop
inc
in
pop
lock
pop
ret
and
xor
add
bound
stos
mov
add
insb
scas
ret
aaa
lahf
lds
in
fisubrl
aaa
insl
in
negb
jno
xorb
cwtl
scas
lods
in
and
jp
rolb
mov
aam
cmpsl
and
mov
push
and
fwait
inc
lods
and
jb
xor
xor
dec
std
repnz
inc
jg
sub
inc
and
aad
dec
loop
mov
and
in
vaddss
out
sub
xor
jo
adc
sbb
mov
sub
jge
je
rol
pop
pop
aad
sub
repnz
mov
cmp
pop
dec
outsb
sarb
std
pop
and
insb
inc
mov
mov
shll
mul
clc
movsb
dec
mov
sbb
xchg
jbe
mov
push
xor
aas
xchg
insl
fbld
or
movsl
and
dec
fwait
out
mov
fcoms
lret
xchg
dec
cwtl
push
or
daa
add
cmp
push
xchg
jg
lret
lfs
or
cmp
ja
faddl
loopne
push
or
xchg
jp
jnp
mov
pop
dec
lcall
popa
xlat
fdivs
mov
jmp
cmp
in
mov
adc
loope
mov
in
lret
pop
cmp
test
pop
mov
xchg
cmc
mov
ss
adc
int3
lds
add
cli
xchg
pop
rol
pop
jns
mov
ss
adc
dec
cmp
pop
xchg
nop
jne
fs
fwait
or
and
pop
stos
fmull
inc
mov
push
cld
xor
out
in
ljmp
xor
cmp
xor
inc
ficomps
push
dec
mov
jmp
loopne,pt
push
dec
add
inc
int
push
push
jle
lcall
inc
clc
or
in
les
in
sub
scas
dec
sbbl
addr16
adc
fistl
mov
pusha
mov
sub
lret
xlat
cld
out
mov
sub
cmp
xchg
sub
into
pusha
and
test
repnz
push
sahf
or
loopne
push
in
inc
push
push
clc
fcmovnu
push
daa
xor
lock
fdiv
and
shlb
lods
sub
sti
xor
adc
fs
imul
or
pop
lods
and
and
cld
pop
or
add
hlt
dec
icebp
mov
in
lret
inc
movsb
enter
mov
adc
inc
rorl
outsb
in
sub
dec
movb
nop
sahf
sbb
or
in
aas
xchg
fstpt
lahf
fiaddl
mov
push
dec
xor
dec
test
imul
xchg
out
jecxz
cs
jb
jmp
shrl
sarl
jecxz
mov
add
ret
adcb
xorl
jmp
push
movsb
push
lahf
jmp
mov
push
pushf
jg
lods
fldenv
xor
outsl
cmp
mov
repnz
jae
xor
imul
jno
roll
adc
or
js
adc
addr16
jne
add
ret
mov
int3
test
jno
pop
scas
mov
outsb
addr16
jmp
mov
fstl
hlt
lods
dec
push
sub
data16
pop
xlat
xchg
jno
add
int3
andl
add
xchg
repz
add
fnstcw
mov
inc
inc
adc
xor
sbb
xor
jle
push
xchg
dec
xor
pop
pop
lret
ljmp
add
repz
xor
adc
out
dec
xchg
adc
daa
fildl
jmp
pop
fcompp
jns
adc
mov
adc
mov
or
test
mov
or
fmul
jae
das
pop
shrb
pushf
fists
mov
jecxz
mov
arpl
and
popa
sbb
mov
adc
std
popa
dec
leave
inc
ret
pop
cwtl
lods
in
jl
test
lahf
dec
and
mov
and
sub
push
shl
rcrl
sbb
scas
sbb
pop
jecxz
fcom
lds
sub
nop
or
sbb
test
insl
pop
data16
decb
dec
cmpsl
dec
pop
push
insb
jne
jge
or
mov
add
std
call
shlb
adc
les
push
jns
lret
jmp
fistpl
jno
cmp
and
adcl
mov
push
add
inc
or
push
mov
fdivp
or
in
adc
incl
mov
ret
inc
daa
addr16
or
push
int3
lea
mov
gs
test
popa
push
popa
loope
dec
sbb
in
xlat
jp
jb
repnz
dec
push
nop
fsubrs
or
mov
pop
push
test
xchg
add
xchg
cmp
jg
shlb
clc
test
in
jge
les
insb
hlt
lret
mov
out
fnstenv
push
popfw
cmc
pop
adc
js
lret
sub
sub
popf
mov
or
ljmp
icebp
jne
fistl
or
mov
cmpsb
push
push
sub
cmpsl
sbb
or
sub
es
jl
cltd
pop
in
in
mov
mov
lds
fs
imul
push
push
or
rolb
faddp
sbb
test
jae
dec
xchg
je
sub
cltd
rclb
mov
mov
repz
les
mov
cmp
pop
adc
loope
cmp
xchg
xchg
push
lock
and
add
jnp
or
fstpt
mov
shrb
fcomip
les
add
dec
or
adc
iret
cmp
xchg
stos
pop
cmp
dec
xchg
out
sub
inc
inc
aam
pushf
out
push
in
adc
daa
add
out
popa
shlb
mov
scas
rolb
dec
cmp
cld
mov
mov
ss
das
gs
mov
jo
gs
imul
jl
add
sbb
mov
sub
adc
out
xchg
shrl
inc
xlat
jmp
push
lods
sub
and
push
je
in
sub
push
push
pop
fwait
dec
inc
rcrb
and
xchg
and
dec
push
ds
movsb
aaa
pop
push
inc
xchg
adc
add
loope
jg
not
test
xor
push
pusha
mov
push
pop
shl
mov
ss
dec
sbb
add
add
jmp
fldz
cmp
xchg
lods
divb
push
addl
xor
add
xchg
outsl
mov
addr16
or
cli
outsl
mov
sbb
adc
xchg
jle
mov
aam
clc
ds
and
in
lods
sbb
je
xor
adc
or
cmp
in
out
add
insl
idiv
pop
add
cmpsl
xchg
lret
pop
jb
mov
bound
lea
mov
into
adc
lcall
adc
jae
adc
dec
sbb
rcr
push
push
jne
jle
or
or
mov
addl
enter
xor
out
adc
shrb
adc
into
into
fiadds
push
cmp
add
and
and
sbb
mov
cmp
mov
fs
sub
shr
bound
aaa
outsl
and
mov
push
lock
xor
rcl
mov
mov
enter
movsl
inc
sbb
ret
xchg
jo
pop
loope
sbb
add
push
mov
mov
or
mov
fisubs
nop
mov
loope
repnz
cld
lahf
aam
out
jo
sti
add
inc
push
scas
fisttpll
clc
dec
adc
add
stos
sub
ss
lods
or
shrl
int3
xchg
mov
mov
adc
clc
orb
outsl
pop
xlat
ljmp
push
stos
sti
stos
cmpsb
jl
imul
les
adc
xor
sbb
push
test
in
dec
out
inc
fsubp
popf
repnz
or
jnp
test
mov
outsb
sbb
inc
push
xor
add
dec
js
sub
popa
cmp
xchg
mov
into
and
pop
jne
repz
mov
hlt
fdivr
mov
sub
inc
sahf
loop
loop
out
xchg
adc
pushf
arpl
pop
jl
ror
mov
xchg
push
pop
jecxz
cmp
xchg
jno
xchg
mov
cmc
mov
sub
xchg
jle
push
push
movsb
pop
xchg
js
cmp
sahf
mov
add
gs
xchg
xor
jle
cmp
lods
pop
pop
stos
cmc
xlat
sub
dec
pop
xor
js
inc
test
iret
out
bnd
popa
xor
cmp
mov
pop
sarl
xlat
cltd
pop
sbb
cmp
cltd
push
arpl
call
sub
pop
lahf
jg
data16
scas
insb
cli
mov
push
js
inc
ljmp
pop
das
pop
mov
push
mov
fwait
cld
in
jnp
cmpsb
adc
pushf
icebp
rcrb
cmp
cmp
mov
sub
sahf
pop
ret
sbbb
outsb
nop
shl
packssdw
mov
dec
or
loop
ja
jmp
add
pop
or
lods
inc
fldcw
ret
and
ficompl
arpl
xchg
mov
xchg
dec
cmp
push
xlat
mov
add
popa
fdivl
movsl
or
mov
jle
and
push
sub
dec
lahf
push
sti
inc
cltd
jae
bound
and
xor
add
popf
int3
wbinvd
adc
lret
outsl
pop
fstpl
arpl
and
scas
adc
inc
push
mov
pop
xchg
imul
xchg
pop
clc
enter
scas
pushf
mov
push
flds
cmp
insl
rcl
jmp
movsb
cltd
sbb
cli
data16
push
aam
push
arpl
scas
xor
xchg
iret
stc
cs
bound
aad
mov
lahf
mov
sub
jns
ficompl
stos
mov
mov
sbb
lods
push
data16
mov
and
mov
mov
out
mov
inc
in
movsl
xchg
js
and
ja
mov
push
or
testl
lea
pop
mov
mov
add
mov
xchg
fidivl
sbb
mov
sbb
mov
sbb
xchg
adcl
dec
xor
aad
mov
push
dec
mov
rclb
pop
popf
mov
and
sbb
sbb
dec
mov
shlb
jnp
loop
dec
xor
lds
gs
push
mov
pop
ljmp
inc
push
mov
sbb
fbld
inc
pop
pop
movsl
faddl
push
mov
fisubl
imulb
or
push
aam
dec
add
mov
imul
gs
out
xor
sub
pop
je
mov
push
mov
push
mov
addr16
lds
pushf
push
cmp
push
mov
push
in
rol
xor
xchg
cld
test
out
fnstcw
inc
add
movsb
cmpsl
stos
stc
jg
test
pop
popf
stos
push
jg
push
dec
stc
cltd
sti
mov
push
stc
loope
sbb
icebp
sbb
xchg
and
push
jl
adc
test
dec
stos
dec
popa
addr16
xchg
sub
add
daa
ljmp
sub
cltd
jnp
je
mov
mov
int3
adc
fsubl
push
imul
mov
inc
dec
int3
loopne
pop
pushf
out
jle
cli
not
add
fistps
push
push
cmp
fs
in
addb
das
pop
mov
rcll
sti
out
adc
jno
cs
cmp
in
sub
leave
or
mov
outsl
pushl
push
mov
xor
lds
jbe
adc
arpl
push
sarl
cmp
leave
mov
shll
mov
xor
adc
sbb
pusha
stos
jns
int3
lods
jge
or
mov
scas
dec
pop
mov
sbb
in
add
mov
jo
cmpsb
adc
lea
jge
loope
pop
call
pop
pop
sub
es
xor
sbb
pop
repz
scas
dec
dec
in
push
pop
push
scas
xchg
xor
daa
adc
sub
inc
hlt
pusha
dec
rolb
into
mov
lock
sbb
cld
adc
mov
repnz
sbb
inc
in
sbb
sbb
iret
cmc
pusha
jo
pushf
inc
pminub
xchg
and
bound
sub
sbb
mov
les
lock
hlt
add
sahf
cmp
ret
mov
sbb
or
ja
inc
rcr
mov
aad
and
pop
dec
inc
ljmp
mov
add
add
rolb
mov
bound
sbb
mov
mov
loopne
xor
fcmovu
mov
ja
or
popf
mov
mov
imul
or
hlt
sub
hlt
cmp
cltd
mov
fwait
fs
push
sbb
jp
xor
nop
fcomi
in
sti
shll
cltd
nop
jno
test
inc
iret
ljmp
mov
fsubrl
jb
lcall
dec
cmp
cmpb
push
lock
test
loope
movsl
fstpl
andb
xchg
lds
imul
add
or
mov
push
ss
jo
mov
push
lock
inc
and
aaa
test
add
cli
lret
push
mov
inc
jmp
js
icebp
sarb
cmpsb
clc
lret
dec
xchg
fldenv
fwait
gs
mov
lahf
xor
jo
dec
pop
pop
mov
xor
loop
jmp
fwait
lock
out
call
in
lods
inc
cmp
test
movsl
push
mov
pop
sub
jae
int
dec
mov
adc
in
test
test
sarl
pop
jno
xor
fwait
push
sub
push
shrb
mov
sbb
into
pop
mov
test
sbb
pop
sub
aaa
js
add
push
sub
lcall
or
cwtl
mov
stos
mov
cmp
and
inc
mov
push
hlt
mov
mov
push
sahf
test
dec
xor
jbe
jmp
mov
in
pop
mov
mov
pop
js
dec
into
outsl
mov
pop
push
xchg
lods
scas
shr
dec
pop
cmpb
cmpsl
sbb
push
mov
imul
fnsave
mov
cmp
add
les
pop
mov
dec
push
or
das
rcrb
test
in
test
add
cmp
jb
mov
ret
fwait
xchg
add
ljmp
sub
xlat
adc
fildl
rcr
sub
add
sbb
or
adc
sbb
aam
cmp
popa
mov
and
cs
test
xor
nop
in
test
out
xchg
add
das
cli
arpl
mov
push
cmp
mov
inc
jnp
fistps
pop
popa
ja
outsl
lods
pop
hlt
into
lods
xchg
dec
fucomp
mov
xchg
dec
mov
cmp
push
pop
jbe
rcll
lret
jae
push
and
sbb
pop
and
daa
push
inc
xchg
mov
dec
in
jl
mov
int
fnsave
sbb
cmp
jecxz
aad
push
jb
into
and
push
mov
cli
or
movsb
lahf
mov
jo
movsb
inc
lods
sti
xchg
cltd
sub
jbe
mov
mov
xor
xor
lcall
and
movsb
dec
mov
jae
aaa
sub
jle
in
jae
pop
loopne
inc
pop
cmp
add
rol
xchg
das
mov
and
test
mov
aad
inc
movsb
daa
testb
or
mov
std
and
xlat
add
sub
loop
mov
or
mov
cmpsl
adc
cmp
lock
stc
push
cld
xor
pop
in
in
jo
adc
iret
ret
out
nop
pop
push
cli
stos
and
add
popa
in
mov
cmp
fdivp
fistps
adc
pop
sahf
js
int3
fbld
scas
aam
mov
sbbl
mov
jge
bound
jecxz
push
xchg
dec
fdivrs
cmp
jno
sub
jne
stc
pop
and
stos
sub
dec
fwait
sbb
cmc
dec
cld
fsubl
stos
sub
jbe
inc
mov
loope
imull
stos
sbb
mov
mov
jae
ja
cmp
inc
sub
inc
jns
xchg
sti
push
inc
mov
pop
jmp
into
mov
mov
mov
movsl
push
jne
mov
and
icebp
call
or
insl
mov
ds
adcl
jge
loopne
lods
fcoms
mov
push
mov
ja
cmp
add
xlat
pop
lret
icebp
cs
adc
jl
clc
cmp
or
cmpsb
popf
cmpl
mov
mov
push
pop
xchg
cmpb
dec
repnz
aad
push
fsubs
aam
mov
xchg
orl
pandn
scas
jbe
das
xor
pushf
mov
push
mulb
mov
jle
stc
in
pop
push
out
imul
pop
dec
iret
jg
dec
test
scas
mov
rclb
mov
arpl
test
and
push
call
imul
stos
xchg
xlat
add
pop
dec
jb
outsb
mov
leave
mov
in
mov
mov
out
and
mov
mov
nop
mov
jb
push
mov
cmp
lret
movsb
test
outsl
mov
add
jo
cmp
sbb
cli
dec
cmp
stc
mov
mov
jb
mov
insl
and
es
in
cld
popa
es
jbe
add
push
add
jne
mov
pop
popa
jae
cmpsl
jge
mulps
call
sub
mov
inc
fdivl
mov
int3
rorb
out
or
jno
add
jno
sub
imul
sub
ljmp
or
rorl
out
mov
mov
xchg
jmp
adcb
pusha
xchg
push
test
sub
in
dec
ljmp
mov
js
mov
mov
pusha
inc
and
incl
mov
xor
addb
shr
inc
jo
and
pop
push
lcall
or
js
ljmp
addr16
pop
sti
movsl
pusha
pushf
push
pushf
pop
push
call
add
jnp
push
repnz
in
or
icebp
je
xor
mov
std
dec
movsl
mov
sbbl
inc
nop
push
adc
push
pop
and
mov
add
xchg
dec
stos
in
push
fmuls
ss
mov
push
or
in
mov
movsl
push
aaa
jp
ficomps
mov
xchg
cmp
lods
sbb
inc
fnsave
lods
jmp
cli
lret
xchg
insl
cmp
or
popf
jge
aad
decl
pop
rcrl
push
pushf
and
mov
jg
mov
int
push
cmpsl
xor
lcall
and
pop
adc
xchg
cmpsb
jl
adcl
stos
jg
push
jae
jnp
pop
test
rolb
or
sub
xchg
mov
andl
jae
int3
in
lahf
cmp
push
xor
jge
mov
sub
or
in
mov
lret
pop
lock
jmp
push
mul
leave
mov
outsl
aam
cld
jb
add
fcom
sbb
cli
arpl
xor
iret
das
mov
out
fsubl
fwait
mov
xor
mov
add
inc
dec
dec
movsl
fmuls
dec
iret
mov
out
aam
add
mov
outsb
xor
sub
push
or
clc
push
inc
popa
loope
out
ss
repnz
mov
mov
mov
lea
and
add
fldt
xchg
in
jmp
mov
gs
mov
push
popa
js
out
mov
loopne
in
dec
lock
lahf
dec
mov
lret
inc
notl
jae
jno
hlt
out
sti
inc
imul
mov
repz
dec
jne
jecxz
sub
xchg
xor
sub
xchg
push
mov
iret
dec
outsl
loopne
push
xchg
cmpsl
jb
das
jmp
mov
and
xchg
sbb
xchg
jo
cmp
inc
sub
mov
lods
xor
enter
rorl
das
dec
data16
incl
mov
sbb
js
mov
push
pop
xchg
gs
jg
pop
inc
push
call
pop
sbb
push
jle
jmp
dec
xorb
mov
pusha
mov
clc
fcoml
xlat
xor
stos
dec
in
bound
ljmp
dec
aaa
popa
mov
loope
add
and
repnz
mov
and
das
in
push
cmp
push
ljmp
repz
sub
cmp
jnp
dec
fstl
mov
push
add
aaa
adc
testb
stos
stos
push
mov
inc
std
or
add
push
and
or
out
mov
inc
std
pushf
inc
jp
stos
jmp
test
push
pop
lahf
adc
pop
test
out
push
loope
aad
mov
inc
xchg
movzwl
pop
ficompl
sub
insl
gs
int3
bound
inc
je
mov
mov
sbb
push
mov
xlat
dec
loop
mov
mov
sub
outsb
iret
js
stc
or
mov
enter
inc
or
cs
lods
fadds
mov
adcb
sbb
lods
jnp
inc
cltd
cs
fyl2xp1
ljmp
shlb
nop
pop
in
xlat
das
adc
bound
int
sub
xchg
and
insb
jbe
incl
adc
inc
sub
in
sub
lcall
xor
in
dec
xor
add
xchg
jg
in
and
clc
das
jmp
clc
cs
jl
adc
push
ret
rcrb
xor
mov
popf
xor
dec
scas
xacquire
jge
pop
cltd
icebp
or
jl
dec
in
adc
mov
xchg
daa
cli
stc
cmc
hlt
mov
mov
mov
fldcw
scas
mov
mov
addr16
iret
lods
or
xor
jnp
sbb
mov
pop
pop
ds
xor
dec
mov
sub
adc
jl
lods
std
mov
add
inc
jg
scas
fwait
lcall
cmp
addr16
int3
add
sbb
inc
into
mov
and
push
sbb
sbb
xchg
push
lret
push
xlat
fld
inc
fcmovnbe
xchg
out
fs
cltd
jno
xor
jo
push
imull
and
ss
xchg
test
jmp
mov
xor
outsl
push
push
add
test
xchg
xor
repnz
mov
lcall
xchg
lea
lret
js
scas
into
lcall
jb
scas
fwait
push
test
xchg
fnstcw
or
cmp
add
and
adc
or
cld
rorb
cmpsl
inc
and
xchg
xchg
jg
ret
sbb
pop
sub
xor
aad
cwtl
add
inc
inc
int
xchg
xchg
iret
sbb
stos
jmp
mov
jne
sbb
ss
addr16
add
push
inc
and
mov
cmpsb
push
lock
jae
sahf
push
xchg
or
lret
add
xor
in
xlat
sarb
mov
push
iret
je
pop
sti
out
pop
cmpsl
int3
mov
dec
scas
xorl
shl
popa
push
inc
mov
repnz
test
cltd
inc
xlat
mov
mov
fiadds
add
xchg
test
mov
loop
fisubrs
push
adc
sti
push
inc
sub
xchg
mov
shl
shll
andb
mov
loopne
xor
jmp
arpl
shrl
mov
into
sub
daa
jns
fimuls
or
fcoml
aas
call
adc
xor
rol
bound
xchg
xor
cmc
push
xlat
cli
js
je
hlt
pop
sbb
je
push
out
les
mov
inc
jb
mov
andb
fmull
lods
cwtl
sti
lahf
into
into
sub
cmp
test
loop
mov
lods
dec
or
stos
xchg
push
and
sbb
or
mov
stos
xchg
jecxz
enter
hlt
cld
fdivs
sti
in
data16
mov
lock
or
cmpl
daa
and
xor
insl
push
into
std
addr16
fwait
pop
lds
out
jge
fldcw
mov
fdivrs
shrb
testb
push
imul
and
cwtl
jmp
jecxz
orb
mov
into
aam
cli
mov
cs
shrb
fists
mov
xchg
mov
push
loop
cmp
scas
and
insl
or
adc
aaa
lret
addr16
test
fiaddl
pusha
aaa
push
test
out
jns
pop
stos
sub
imul
cmp
stos
scas
sti
dec
inc
or
or
fnstenv
mov
mov
nop
mov
data16
stos
adc
xlat
push
addb
adc
sahf
movsb
pop
xor
add
mov
rcrl
sahf
inc
ret
or
inc
and
or
and
insl
loope
pop
sub
add
or
clc
das
mov
loope
sbb
inc
mov
mov
pop
cmc
pop
mov
mov
jne
fstp
jg
adc
xchg
xor
mov
in
and
ficomps
lods
leave
stc
pop
outsb
in
repnz
lea
adc
int
mov
jne
decb
scas
das
xor
mov
mov
jno
scas
mov
imul
mov
push
and
mov
das
and
pop
cltd
shll
mov
test
dec
into
movsl
cmpsb
popf
pushf
imul
mov
xchg
push
ds
pop
mov
and
negb
inc
lods
popf
cmpsl
xchg
jno
daa
pop
cmp
xchg
nop
push
cmpsb
push
mov
jecxz
mov
push
pop
push
and
xchg
call
jne
js
jns
shrb
stos
xsha256
cmpsb
out
mov
jns
jle
adc
sbb
xchg
in
or
xchg
mov
pop
jmp
or
loop
sahf
js
mulb
jg
subb
jnp
inc
inc
sbb
jae
fiadds
or
dec
iret
fbstp
test
aaa
xor
das
jle
ficompl
dec
popf
jbe
rolb
push
mov
inc
adc
bound
mov
insl
loope
rclb
and
lds
pop
test
lret
jne
add
aam
inc
xchg
pusha
imul
cmp
fstps
or
sti
jne
dec
test
jbe
insl
sbb
cmp
cmc
lcall
leave
sub
arpl
jecxz
lret
mov
xchg
dec
je
push
cmp
push
jb
mov
sub
xchg
push
dec
xor
ja
stc
mov
jge
cltd
mov
and
or
pusha
in
inc
out
pop
cmpsl
xchg
imul
outsb
xchg
adc
xor
adc
inc
dec
cmpsl
cmp
sbb
pop
xor
js
pop
pop
fsts
rcll
jp
loopne
or
arpl
aam
push
cmc
cli
loop
mov
push
xor
testl
dec
popf
jns
and
pop
stos
or
lock
jecxz
sti
inc
adc
mov
mov
das
popf
clc
hlt
aas
add
aam
mov
stos
mov
imul
popa
loop
sbbl
out
lret
pop
add
daa
cs
xor
dec
mov
lret
push
dec
lock
sub
fmull
in
fisttps
pusha
lcall
mov
push
inc
or
ja
add
lret
mov
rorl
lods
int3
test
cmpsb
and
adc
mov
sub
cmp
les
sbbl
cmp
jo
pop
xchg
shrl
push
mov
cwtl
in
cmc
scas
sbb
je
aaa
lods
pop
fdiv
dec
push
sahf
addb
add
popa
push
mov
jecxz
outsb
or
push
jecxz
and
ficomps
pop
and
out
mov
shr
pop
pop
loop
xchg
rcll
mov
sub
adc
mov
jo
dec
add
jg
jbe
shl
jae
jbe
push
mov
adc
add
movsb
cmp
daa
stc
cmc
mov
push
push
fisttpl
jno
adc
cmp
dec
loope
iret
mov
fcmovb
push
rolb
pusha
xchg
cmpsl
dec
inc
cmp
jno
scas
inc
cli
insl
inc
lcall
cs
lods
mov
cmp
int3
loopne
add
or
pop
notl
xchg
xor
incb
cmp
jmp
lret
sbb
pop
adc
std
xchg
lcall
popa
jbe
inc
xor
inc
jmp
fcmovbe
dec
or
mov
xchg
hlt
jae
push
jecxz
bound
jo
jge
fsubs
ss
loope
xchg
xor
add
lea
in
call
xor
faddl
scas
sbb
je
adc
ret
xor
nop
adc
les
cltd
and
mov
sbb
sub
jge
cmp
sbb
ror
js
add
das
lcall
cmc
dec
or
stc
add
in
pop
out
push
push
ficomps
repz
out
mov
fs
cwtl
nop
leave
jno
ljmp
test
mov
xchg
rcl
jae
ss
inc
lret
fildll
gs
mov
imul
or
les
mov
inc
scas
mov
mov
adc
mov
roll
cs
lods
pushf
ficompl
roll
adcl
jno
gs
mov
ss
xchg
pop
cld
cmp
cmp
inc
insl
icebp
fstpt
lock
sbb
or
pop
std
je
mov
or
or
cmpsl
fs
je
movl
mov
pop
push
adc
cmp
loope
pop
movsl
loop
loope
cmp
add
mov
xchg
stc
jne
stc
sti
scas
movsb
pusha
cmc
adc
and
sub
iret
mull
mov
lds
pusha
pop
clc
or
push
fisttpl
ret
mov
rcl
xor
shll
sarl
jns
out
adc
mov
cld
aam
jmp
test
inc
lret
in
out
mov
sahf
add
cmpsb
mov
inc
jmp
xor
dec
pushf
test
push
xchg
fbstp
jl
or
sbb
pop
push
mov
sub
shlb
mov
cmp
shll
js
mov
lods
lods
ficomps
jle
dec
push
enter
dec
inc
jge
neg
push
out
push
addr16
sbb
push
xchg
sub
xor
aam
or
mov
scas
in
out
dec
sbb
jnp
dec
jbe
sub
push
repnz
and
and
cmp
stos
arpl
inc
xor
in
mov
mov
subl
rcr
dec
inc
sbb
enter
cmpsl
mov
jnp
mov
imul
popa
popf
adc
fcom
inc
and
pop
je
push
stos
clc
xor
push
sbb
movsb
xor
out
push
mov
test
sbb
add
out
movsl
mov
out
lret
insb
mov
icebp
xchg
add
dec
pusha
insl
add
cmp
in
aad
xor
nop
jno
push
or
xor
mov
mov
loopne
xchg
cmp
loope
pop
and
and
imul
jnp
or
popf
data16
mov
insb
xor
inc
jmp
jns
dec
rorb
push
repz
xchg
or
push
in
sti
push
push
outsl
jns
adc
add
cmc
add
dec
jle
push
adc
mov
ret
aaa
nop
xchg
sub
movb
adc
lock
cld
pop
add
adc
lods
je
sub
shll
ljmp
fsubrs
jno
outsb
adc
inc
lret
adc
jnp
cld
sar
push
mov
mov
movsb
cwtl
xor
add
out
fdivr
xor
fistpll
inc
jne
popf
pop
loopne
inc
push
xor
hlt
lahf
lods
cs
mov
xchg
push
jb
xchg
pop
jns
out
jno
loop
sub
sti
sub
and
mulb
cmpsl
sbb
sti
icebp
mov
jnp
movsl
pop
sub
sub
fwait
addr16
psubq
or
mov
dec
mov
testb
cmpsb
pop
push
mov
in
push
mov
pop
push
pop
gs
out
xor
jo
push
cmp
int3
negb
clc
loop
das
insb
je
inc
sbb
outsl
sub
mov
outsl
cli
sbb
push
push
jge
hlt
loopne
and
test
out
sub
pushf
scas
jp
cmp
add
mov
pop
sub
adc
lds
and
jnp
mov
xchg
pushf
call
out
fbld
aas
arpl
xchg
imul
stos
fs
into
insl
out
out
cld
scas
out
popa
jae
mov
das
pop
mov
mov
mov
push
clc
out
jge
mov
das
dec
into
movsb
mov
sub
orl
jge
jno
js
or
call
push
aaa
popf
xorb
mov
jne
mov
or
push
fs
gs
jecxz
cmp
es
fwait
cmp
xor
mov
ds
cmp
fists
jmp
cs
insb
shll
push
scas
leave
push
lock
fdivs
in
sbb
test
rorb
or
ds
inc
xchg
push
imul
xor
add
leave
lea
jl
jg
mov
xchg
dec
lret
rcr
leave
and
xlat
jp
aas
cmc
bound
sarb
inc
mov
mov
bound
jmp
pop
pop
aam
icebp
dec
sbb
fildll
hlt
scas
or
jecxz
jnp
in
jne
iret
mov
mov
enter
iret
insb
push
and
or
es
sbb
sbb
adc
and
mov
xor
add
xor
iret
and
js
sar
mov
ja
xor
in
test
pusha
bound
ret
mov
sahf
mov
insl
loopne
mov
mov
sub
das
frstor
xor
or
insb
or
sub
xchg
rcl
scas
cmp
sub
push
push
xchg
jnp
jnp
jg
stc
notb
imull
dec
js
xor
xor
bound
mov
gs
outsb
fs
sahf
jbe
loopne
nop
push
fs
jge
adc
dec
daa
pop
scas
jbe
dec
mov
cli
xchg
push
push
xlat
jle
cmp
cltd
in
xor
sbb
outsb
jge
and
mov
loop
imul
test
sbb
jmp
pop
mov
inc
lods
aam
mov
adc
flds
push
jo
dec
pop
push
les
mov
enter
dec
or
call
cwtl
mov
loop
xchg
stos
iret
test
sbb
jl
jb
or
xor
je
imul
sub
mov
sub
push
out
lock
imul
pusha
insl
std
call
leave
or
mov
jp
daa
outsb
jge
push
gs
popa
test
xchg
fldenv
push
int
movsl
add
loop
sahf
arpl
call
in
scas
cwtl
push
jp
cmp
fadd
mov
lods
jl
push
cld
lahf
or
jbe
loop
ss
and
inc
popf
dec
hlt
js
xchg
ds
mov
stos
xchg
push
inc
jbe
fildl
or
adcl
cmpsl
add
push
mov
cld
aam
mov
dec
out
test
sub
inc
jge
mov
xor
push
push
out
push
sbb
pop
push
and
push
adc
dec
out
or
andb
jmp
fld
daa
jbe
dec
int3
inc
cmp
addr16
fbld
int3
sbb
adc
repz
mov
dec
pop
das
repz
add
jo
cmpsb
outsl
xchg
bound
arpl
testl
shll
push
adc
pop
cmp
into
popa
xchg
jns
adc
ss
or
pop
jae
test
arpl
shll
arpl
xchg
xchg
ret
inc
gs
gs
ja
xor
pop
pop
fimuls
pop
jg
pop
push
gs
push
pop
rorl
jne
cltd
cmp
cli
jns
test
add
clc
out
loopne
pop
adc
push
fs
les
fldt
mov
daa
pop
data16
cltd
mov
mov
mov
or
sub
inc
lock
je
mov
repz
int3
push
cmp
cmpl
mov
aad
or
and
pushf
cwtl
jbe
je
adc
mov
movsl
push
rcrl
push
jae
dec
insl
mov
pop
mov
enter
in
mov
and
xchg
inc
outsb
shrl
ds
push
repnz
add
cli
lea
and
std
pop
or
cmp
inc
fcmovnb
lcall
inc
fsubrs
jge
aam
stc
imul
sbb
add
sbb
dec
test
adc
es
xor
fwait
jle
divb
sub
pop
dec
ror
sub
mov
aas
std
cmpsl
repz
push
cmp
pop
push
popf
xchg
lret
popf
mov
gs
mov
sarb
sbb
loope
inc
lods
cmp
mull
fistpll
in
sub
enter
and
mov
iret
in
outsb
inc
popa
mov
add
xor
jns
ja
adc
add
push
mov
xchg
movb
fstpt
scas
ja
movsb
xor
xchg
inc
and
fcomp
mov
lods
jb
insl
fidivrl
sub
fwait
or
inc
cwtl
dec
mov
std
sbb
jbe
jl
xor
dec
popa
add
fsubs
cmp
lea
call
movsl
lds
push
push
mov
mov
xchg
je
icebp
rcrl
jle
idiv
dec
cmp
push
cmpsb
cmp
jge
addr16
sub
jle
loop
pop
add
fidivl
mov
mov
or
jmp
cmp
out
xchg
ja
out
es
mov
mov
cmp
adc
jge
in
dec
and
insb
gs
fistps
into
shl
and
arpl
adc
add
jge
fs
pop
into
mov
ds
pop
inc
push
fimull
pop
sbb
cld
mov
fildll
in
ja
js
push
mov
outsb
push
jmp
and
js
mov
test
jmp
dec
dec
hlt
add
sub
push
jae
cli
movsl
push
adc
mulb
test
test
sub
mov
xorb
outsl
xor
xchg
push
mov
mov
arpl
push
adc
cmp
jl
adc
mov
lods
sub
xchg
sub
push
pusha
das
push
mov
fwait
xor
push
lods
mov
xor
paddw
cmc
test
jno
or
pop
in
xor
mov
mov
push
lcall
aad
jnp
add
pop
jg
pusha
gs
mov
or
mov
xchg
mov
call
adc
call
adc
lret
fscale
and
mov
es
sub
pop
xchg
push
cmp
mov
repz
mov
ret
sbb
sbb
mov
pop
cmp
jb
cmp
mov
pop
push
push
int
int3
scas
push
hlt
cs
mov
inc
push
ljmp
daa
cmp
inc
push
jne
push
sti
and
mov
mov
mov
inc
insb
pusha
jge
fdivrl
jns
fldcw
je
popa
daa
std
mov
push
pop
pop
pop
shrl
pop
xchg
sub
imul
jl
cmp
xchg
xor
cwtl
jg
jno
sub
add
pop
in
and
sbb
orb
divl
test
xchg
cli
jmp
ljmp
loopne
lahf
orl
stc
scas
mov
xchg
sub
shr
or
pushw
fiaddl
or
mov
adc
cwtl
into
sbb
data16
sbb
movsl
in
loopne
dec
std
in
adc
push
imul
push
arpl
aaa
or
jge
loopne
push
mov
and
mov
adc
insl
mov
popf
dec
xchg
into
aaa
out
mov
and
js
xor
jle
pop
inc
jnp
fs
in
repz
mov
pop
sahf
out
push
testb
rcrl
sub
cmc
xor
in
mov
sbb
mov
jnp
adc
inc
arpl
sti
adc
jp
dec
push
push
scas
mov
pop
roll
xchg
cmp
out
aad
and
jb
jle
into
fcompl
notl
lock
fsubrl
popf
add
popf
movsl
mov
add
outsb
adc
pop
iret
cmp
in
add
xor
mov
xchg
dec
dec
ds
fimuls
fsubl
cmc
fsubrs
fiadds
xchg
fisttpll
lcall
stc
int3
inc
or
daa
or
fwait
out
xor
out
inc
mov
outsl
test
std
lahf
jp
inc
dec
ljmp
fwait
cmp
fbld
stc
adc
add
arpl
pop
imul
bound
pushf
int3
aas
lret
inc
addb
jb
xchg
xor
mov
xchg
add
testb
xchg
xchg
mov
hlt
in
aad
fwait
pushf
pop
insb
les
adc
je
mov
cli
inc
in
jns
adcl
lret
dec
mov
jmp
in
sub
jnp
out
nop
pop
faddp
add
fisubrl
movsb
and
sub
sarl
mov
sub
push
dec
lret
and
or
sbb
mov
mov
jp
mov
xor
dec
lods
pop
rcr
insb
divl
jge
fisubrl
ret
cmp
sbb
xlat
sub
lcall
sti
int
out
dec
inc
in
mov
pushf
push
les
cmovle
lret
lods
lds
iret
mov
or
jae
sbb
push
out
aad
enter
out
ds
inc
or
je
inc
jecxz
dec
popa
cld
push
imul
xor
arpl
cli
test
aam
imul
and
and
pop
int
sbb
cmc
out
ss
shlb
mov
push
js
or
jl,pn
out
outsl
imul
outsb
jb
shr
xchg
popa
outsl
pop
xor
leave
mov
inc
jl
js
mov
push
push
add
xchg
js
sldt
movsb
lahf
movsl
outsb
jae
aas
cmp
sbb
fs
cwtl
hlt
addr16
dec
cmpsl
fwait
cltd
jg
mov
adc
xchg
stc
scas
mov
push
cltd
push
rcrl
jmp
scas
jae
push
sub
mov
fsubr
nop
cld
or
dec
dec
sbb
or
imul
pop
fs
or
pop
xor
mov
mul
lahf
pop
and
fisubrl
fcoms
lret
jmp
movsb
test
paddusw
rolb
sbb
repz
test
add
add
mov
data16
lods
test
cmp
jecxz
mov
cwtl
mov
dec
jno
push
rcrl
push
sbb
or
cs
adc
cmc
jmp
adc
jne
test
cltd
jb
sub
dec
xor
xchg
xchg
mov
mov
mov
xor
xchg
in
xor
lret
fisubs
ljmp
in
fisttpll
xor
mov
repz
mov
xchg
add
cld
mov
test
mov
mov
jne
ret
add
aaa
jge
ds
scas
das
inc
not
in
push
or
inc
ret
fs
push
scas
loopne
xlat
adc
roll
shr
jl
lcall
jno
sub
mov
jno
arpl
cmp
mov
dec
aas
mov
adc
pop
mov
popf
sub
adc
std
mov
es
divl
lods
push
inc
mov
dec
dec
out
and
jmp
jbe
les
mov
roll
adc
push
sbb
in
sarl
or
movsb
aaa
je
sbb
adc
nop
shlb
mov
lock
test
jl
ljmp
dec
mov
call
push
add
aaa
cmpsb
sub
lret
mov
inc
xchg
aas
in
test
push
jno
loopne
push
sub
xchg
jbe
jp
cmp
roll
mov
cli
cli
inc
int3
fucomi
shr
inc
dec
sbb
push
sub
push
mov
sti
lods
add
mov
push
or
cmp
lods
add
shll
or
fbstp
dec
mov
std
and
sbb
add
push
lahf
imul
nop
sbb
pushf
in
pop
xor
add
xor
es
push
and
push
sub
push
mov
pop
stos
rolb
jne
jae
mov
cmp
push
sbb
fwait
push
or
in
jb
sub
ret
arpl
mov
stc
and
mov
icebp
cmpsb
sbb
mov
dec
lahf
push
jge
enter
clc
das
pop
bound
or
outsb
and
loop
out
mov
pop
sarl
ds
subb
or
sbb
sti
addr16
loop
mov
push
into
sbb
sbb
add
xor
and
out
and
mov
jnp
push
js
test
xchg
lret
es
arpl
jbe
into
xchg
mov
stos
adc
lahf
mov
ds
jbe
mov
inc
aaa
test
out
or
rcr
lahf
mov
lcall
in
sar
sbb
testb
mov
mov
mov
call
xchg
cli
xor
jmp
cli
adcb
in
icebp
rcll
shlb
pop
orl
or
std
cltd
jg
repz
or
add
lock
aam
sbb
out
insl
sub
mov
dec
scas
lds
insb
dec
repnz
iret
lcall
adc
shlb
push
add
jl
shlb
fs
sbb
push
inc
leave
bound
push
xchg
pop
test
jecxz
das
in
dec
mov
sub
or
rolb
int3
fdivl
outsb
cmpsb
cmp
rorl
dec
stc
out
imul
cmp
jmp
int
out
jnp
int3
popa
xchg
mov
add
ret
or
lock
pop
dec
xchg
shll
aas
hlt
out
hlt
addr16
mov
fisubl
dec
pop
mov
add
inc
add
mov
xor
aaa
xchg
loopne,pt
shll
dec
scas
js
push
out
das
test
sbbl
icebp
inc
in
fcompl
data16
out
or
mov
ret
and
int
imul
aaa
rcrb
xor
cs
movsl
lds
pop
rcrb
divl
inc
es
xchg
dec
jmp
add
push
inc
dec
lea
mov
int
test
sub
push
cmp
inc
push
int3
test
test
jg
cld
jae
aam
fiaddl
out
pusha
xchg
or
std
pusha
or
out
mov
aaa
mov
cmp
cmpsb
push
sbb
pop
stc
addr16
scas
push
xchg
je
mov
sbb
out
cmpsb
leave
scas
mov
xor
cmp
sub
movb
adc
jg
outsb
pop
lcall
out
test
mov
mov
mov
sub
stc
lahf
or
fstl
mov
or
mov
mov
cmc
out
cmpsb
pop
sub
dec
sbb
jb
push
push
dec
icebp
lock
dec
scas
in
insb
pop
or
pop
test
lock
xchg
fwait
ss
lret
imul
aad
or
scas
pop
xchg
fisttpll
push
mov
fidivrl
enter
lret
les
jecxz
jmp
outsb
insl
sar
fisttps
jne
pop
cmp
test
dec
testb
scas
dec
or
jle
sbb
push
sbb
push
mov
mov
data16
bound
jbe
aaa
dec
add
insl
lods
inc
inc
xchg
xchg
lods
inc
adc
inc
loope
orl
sub
inc
push
mov
inc
fdivs
inc
add
mov
pop
adc
ljmp
push
mov
je
test
xchg
outsb
cld
jo
loope
loope
push
push
mov
in
push
push
xlat
imulb
xchg
icebp
jmp
and
cmpsl
bound
mov
mov
push
das
pop
rcrl
int
cmc
xor
mov
xchg
xor
imul
addr16
cs
cmp
mov
pop
inc
addr16
iret
jl
enter
xchg
jg
mov
add
sbb
sub
mov
xchg
in
rcrl
xor
add
jno
push
push
push
jg
sub
fcmovu
dec
incb
mov
push
fistpll
fcmove
mov
aam
sbb
loope
imul
imul
js
mov
lahf
das
roll
pop
pop
in
je
jmp
les
xor
sahf
iret
test
mov
push
sub
bound
les
mov
add
int3
subb
minps
ljmp
jno
or
pushf
push
xor
jns
add
and
call
inc
and
out
mov
scas
cltd
xorb
add
rol
cmp
dec
scas
mov
pop
fisttpl
inc
out
movsl
jbe
jmp
sbb
out
dec
mov
and
fimuls
pop
fimuls
aad
sahf
shrl
sub
popa
push
test
call
mov
lods
lret
mov
jae
jae
pop
fwait
rolb
and
orl
cltd
outsb
cmp
add
jno
pop
xchg
push
dec
ds
inc
ficomps
pop
out
insl
rorl
jns
bswap
pop
push
scas
daa
aam
push
es
dec
lahf
push
test
jne
int3
enter
movsl
idivb
adc
adc
sub
or
cmp
mov
loopne
scas
push
xchg
sti
inc
cmp
arpl
outsl
or
inc
enter
inc
xchg
and
sub
in
mov
push
lods
cld
out
stos
sub
xchg
add
sbb
jmp
cmp
xor
or
out
adc
inc
sbb
cmp
std
cmpsl
xlat
aaa
in
or
icebp
xor
mov
jg
mov
insb
test
rclb
jae
loop
ret
aas
push
inc
jl
test
je
fs
rcr
pop
inc
orb
inc
cld
loop
and
adc
lds
xchg
jno
cmp
sub
scas
imulb
das
push
or
dec
js
movsl
dec
addr16
jg
enter
pop
push
in
push
loope
push
scas
pop
std
cmp
inc
lock
in
dec
jecxz
ret
out
xor
iret
lahf
push
and
mov
jno
cmpsb
inc
or
cmp
scas
movsl
and
movsb
push
pop
push
iret
push
bound
test
inc
jmp
mov
sub
aaa
cmp
cli
mov
push
stos
mov
mov
imul
je
sub
mov
mov
shll
push
enter
rcll
mov
sbb
arpl
dec
cmp
pop
mov
stc
es
jecxz
stos
in
jge
and
push
cmp
jae
enter
test
sbb
and
xchg
mov
push
pushf
call
jle
lds
sbb
not
lods
xchg
leave
or
aam
jle
out
aam
inc
push
mov
sti
std
push
insb
xor
mov
bswap
aas
mov
push
dec
inc
cmp
mov
enter
ljmp
push
adc
push
pop
cmpsb
ljmp
mov
and
xchg
testl
jo
mov
sub
jb
jecxz
aaa
in
cmpl
sub
aam
in
fstps
jecxz
xchg
movsl
das
jmp
lea
ret
shlb
lods
jl
pop
das
xor
in
mov
mov
aas
inc
cmc
sahf
xchg
adc
mov
das
ss
enter
pop
sbbb
outsb
ficoms
shrl
nop
inc
bound
and
dec
jbe
mov
int
loop,pt
pop
lcall
loope
pop
clc
sahf
rorl
aas
fwait
xlat
lods
loopne
xchg
dec
stos
hlt
out
cmc
sbb
mov
push
xor
push
movsl
arpl
mov
and
aas
vpacksswb
sti
jle
adc
aaa
push
xchg
imul
rorb
lret
andl
dec
gs
sbb
and
inc
sbb
popa
jle
repz
dec
stos
mov
xchg
mov
or
xchg
scas
jnp
cmpsl
cmpb
je
lahf
inc
subb
scas
cmp
or
addr16
xchg
mov
arpl
scas
insl
push
and
mov
jo
bound
mov
int3
or
push
lret
adc
fsubr
mov
adc
pusha
arpl
inc
out
mov
push
xchg
cmc
lea
mov
mov
pop
push
and
sahf
test
addr16
push
adc
push
les
or
push
lock
jp
cmp
push
test
push
cmpsb
out
daa
xchg
scas
mov
movb
das
pusha
push
dec
cmp
and
sub
lcall
sub
loopne
push
gs
out
divb
xchg
cmc
imul
fldenv
and
sbb
xchg
push
cltd
pop
jno
movsb
das
adc
mov
inc
lahf
mov
outsl
lcall
pop
stc
add
xchg
dec
xchg
inc
jnp
xor
out
or
inc
mov
ja
jecxz
shrb
or
imul
mov
cli
repnz
xor
jle
inc
cmp
xchg
fs
or
jne
dec
repz
je
in
out
aas
mov
add
pop
xchg
xchg
aas
push
std
aas
xchg
mov
in
mov
cld
mov
mov
jno
clc
xchg
je
xchg
jb
and
jl
mov
je
push
and
jae
lods
in
xchg
cmpsl
popf
nop
xchg
ds
repz
push
data16
adc
shrb
mov
imul
sahf
or
sti
imul
or
mov
cmc
pop
xlat
mov
out
sbbb
add
sbb
push
scas
xor
or
mov
cmp
movsl
andl
fsubl
jnp
mov
clc
leave
aaa
test
pop
in
dec
jp
jae
add
lret
andl
dec
mov
mov
pop
loopne
jmp
pop
push
inc
dec
pop
aam
insl
test
add
movsb
inc
ds
insb
cld
test
xchg
push
push
jae
fistps
mov
in
cmpsb
push
mov
or
add
inc
out
xor
mov
inc
sub
pop
mov
shll
sbbl
repnz
cmp
push
adc
inc
imul
ja
mov
jno
sub
repnz
call
sbb
lods
sbb
cmc
push
std
push
adc
mov
add
xlat
adcl
sbb
outsl
adc
inc
daa
jo
leave
iret
into
mov
testb
call
imul
lcall
loop
push
test
leave
mov
sbb
adc
fidivs
inc
daa
das
leave
loopne
cmp
or
inc
xchg
dec
pop
test
ret
pop
inc
dec
jg
fdivs
loopne
xlat
sbbl
mov
out
pop
inc
scas
jg
lock
add
scas
push
dec
in
cmpsb
ror
fmull
or
loop
mov
inc
cmovnp
xchg
or
add
push
dec
enter
imulb
fidivl
test
outsb
sub
es
add
jns
fs
lock
mov
or
into
push
fmuls
hlt
mov
ret
or
jmp
sbb
pop
fildl
mov
dec
lods
and
xor
xchg
das
aad
or
push
jle
sahf
fnstsw
pop
pushf
cmp
cmpsl
jle
xchg
sbb
rcrb
sbb
fsubrl
fs
push
inc
repz
adcl
xchg
lret
or
fsubs
jb
data16
cwtl
inc
and
mov
filds
add
inc
pxor
mov
jge
mov
mov
cmp
mov
xor
aas
xchg
pop
repnz
mov
hlt
lret
shlb
and
dec
jae
fmuls
das
cmp
out
inc
bound
rcl
sub
enter
mov
in
inc
mov
sahf
dec
xchg
push
push
fcomi
out
push
sbb
xchg
or
sbb
roll
xchg
jmp
jae
pop
xor
js
add
adc
push
and
and
aad
mov
mov
sbbb
mov
or
bound
inc
sbb
xor
stos
dec
in
add
push
and
pop
cmp
roll
shlb
xchg
insb
movntq
sbb
sub
and
jnp
daa
dec
cmp
inc
shl
mov
fbld
mov
pop
add
sub
push
lahf
add
adc
clc
and
pop
cmp
sub
add
xor
out
mov
rorl
pop
icebp
ss
inc
fcmovnb
lldt
loope
lds
add
inc
mov
mov
fisttpll
fwait
mov
shlb
mov
ljmp
xor
pop
xor
orb
mov
dec
mov
cmpsl
js
and
xchg
adcl
into
add
and
imul
mov
lahf
adc
xchg
iret
sbb
dec
push
cmpsb
ljmp
outsb
push
fisubrl
fldt
fs
out
and
xor
and
fisubs
andl
dec
bound
icebp
jns
int
lock
test
fdivs
fwait
pop
mul
bound
cmp
addr16
pusha
js
dec
addr16
cmp
frstor
dec
rorb
xchg
dec
inc
jns
rcl
shrl
sub
dec
cmpsl
es
mov
xlat
in
push
and
gs
test
lods
or
pop
xchg
shrl
pop
icebp
add
cmp
mov
pop
adc
mov
arpl
xor
dec
out
inc
popa
pop
push
shl
data16
sbb
data16
aam
clc
xlat
js
jmp
push
ds
int3
sub
jbe
xor
enter
rcrb
pop
imul
loope
inc
push
dec
add
push
dec
lcall
mov
xor
sub
aam
aad
and
aad
idivb
in
xcrypt-ecb
cmpsl
dec
or
pop
pop
not
jo
adc
data16
lods
fmul
gs
push
push
daa
xor
mov
jns
addr16
int3
sarl
pushw
dec
jmp
mov
sbb
push
ja
adc
fisubrl
adc
mov
dec
pusha
dec
inc
mov
fwait
cmpsb
cmp
ficoml
push
and
filds
out
xor
cld
and
ljmp
dec
pop
push
mov
lds
data16
out
add
mov
fldcw
mov
fdivs
cld
jns
out
mov
int
push
xor
mov
or
inc
test
cmp
mov
xchg
adc
leave
inc
pusha
adc
insb
bound
loope
stc
and
jecxz
rcr
jmp
jae
dec
dec
add
adc
push
adc
movsb
mov
push
inc
jge
add
roll
pop
imul
sbb
lods
cmp
popf
cmc
ljmp
xor
pop
fisubs
xlat
cli
pop
inc
inc
add
hlt
pusha
pop
enter
sub
sub
lods
insb
inc
jnp
js
mov
pop
pop
dec
fptan
push
aam
mov
ret
pop
gs
test
jns
dec
sbb
mov
arpl
leave
insl
shll
jl
imul
cltd
rcrl
andb
jecxz
mulb
cmpsl
lret
cmp
es
cmpsl
inc
lea
and
movsb
pusha
dec
xor
ror
shll
push
and
sbb
daa
cltd
aam
pop
cmpsl
xor
test
lods
lcall
das
bound
fists
iret
lock
pop
and
mov
in
fwait
mov
cmpsb
ficoms
fsubrs
push
push
adc
arpl
dec
mov
ret
push
sbb
in
add
mov
push
insl
cmp
test
cmp
rclb
cmpsl
fnstsw
push
sub
xlat
scas
mov
or
mov
mov
pop
xchg
les
pop
jo
dec
mov
fcoms
jg
mov
dec
inc
icebp
push
sbb
out
or
loope
mov
xlat
sbb
push
mov
lock
dec
sub
jae
test
cwtl
dec
outsl
lret
iret
or
cld
fldcw
ret
and
cmp
int
scas
jecxz
push
jnp
hlt
cmpsb
jne
cmpsb
aaa
es
push
inc
iret
mov
pop
bound
adc
and
pushf
or
ds
data16
add
loop
scas
iret
mov
dec
aaa
mov
imul
fsubl
jbe
stc
shl
bound
xor
icebp
scas
cmpsb
shll
inc
ret
rcll
leave
xchg
pop
lds
scas
hlt
rorl
fcoms
in
frstor
push
stc
aaa
xchg
or
enter
xchg
fwait
push
mov
push
outsb
cmp
insb
ret
push
or
insl
fldt
cmp
xchg
xchg
xchg
push
and
fsubl
frstor
xor
sarl
lds
xlat
inc
pop
mov
pop
je
push
std
data16
cmp
sub
adc
adc
outsb
adc
bound
inc
outsl
or
push
int
or
test
imul
jne
fdivl
popf
mov
and
repnz
test
imul
lea
push
push
jecxz
sub
jb
cwtl
call
dec
pop
xchg
pop
data16
aad
out
dec
cwtl
lods
jge
and
sbb
call
jle
push
or
cmp
sbb
cmpsl
imul
cmp
lods
xchg
mov
and
cmp
popa
ljmp
int
push
jmp
add
ja
xchg
out
lods
inc
leave
xor
shl
xor
outsl
xadd
xor
jmp
jo
jmp
push
arpl
test
nop
mov
outsb
insl
adc
cmp
pop
sub
sub
mov
inc
pop
in
push
cmc
xchg
addb
movsb
sbb
cmp
enter
jno
fwait
stc
clc
scas
aas
rorb
add
inc
sub
cmpb
dec
sti
ja
mov
inc
fiaddl
sub
lahf
into
xchg
es
inc
std
or
dec
sbb
xchg
inc
cmp
xor
pop
aad
imul
inc
ret
pop
pushf
xor
sbb
sub
mov
xchg
icebp
adc
xchg
lahf
loope
adc
adc
jmp
mov
outsb
push
mov
sti
pop
xchg
inc
mov
imul
cltd
enter
fildll
orl
mov
inc
inc
sbb
adc
and
lods
in
xor
popf
dec
inc
outsb
jno
test
lea
fadd
or
lds
add
jne
cmp
xor
push
xchg
lret
fisubl
mov
add
icebp
popl
loope
mov
or
adcl
xor
adc
and
stos
mov
sbb
xor
pop
and
ja
xchg
dec
out
sub
aaa
mov
stos
mov
add
insl
xchg
xchg
adc
pop
dec
pop
mov
int3
or
lret
scas
cmc
push
in
ja
sub
pop
mov
lock
mov
mov
imul
jle
sbb
mov
test
das
in
lds
xchg
pop
xchg
dec
out
inc
mov
and
or
or
and
lcall
clc
stc
mov
push
fnstcw
jo
dec
dec
xchg
in
hlt
aas
mov
js
sub
jnp
inc
popa
mov
and
ja
addr16
add
cmpsl
and
mov
testl
cwtl
sarb
fnstcw
pop
and
push
inc
jle
test
je
push
mov
les
ret
mov
lcall
xor
mov
jae
and
fcmovu
ds
sar
pop
rcr
pop
cli
je
js
loopne
mov
out
xchg
mov
inc
fidivrs
sbb
stc
fwait
call
in
sbb
jle
mov
adc
sub
mov
pop
stc
addb
jbe
mov
mov
out
mov
outsb
mulb
cmp
and
aaa
andb
add
sub
pop
fisubrs
movsl
or
add
stos
out
sub
in
lods
popa
mov
outsl
sbb
xor
clc
mov
mov
insl
xchg
scas
mov
js
cmp
das
insl
xor
add
lahf
push
xor
stos
mov
insb
xchg
mov
imul
and
sbb
mov
mov
movsl
push
cld
bound
out
push
lret
inc
fwait
sbb
xor
lock
adc
pop
std
and
mov
fistpll
sahf
sub
ret
idiv
loopne
jo
or
daa
movb
adc
dec
and
sub
mov
nop
cmc
mov
dec
data16
push
rcll
cmc
sub
inc
in
jnp
mov
cmp
xchg
xor
je
mov
cmp
icebp
or
xchg
loopne
xchg
scas
ds
xlat
cmp
fs
adc
sub
pop
frstor
sahf
adc
adc
movsb
or
and
pop
and
push
pop
pop
aas
stc
jae
hlt
xlat
add
movsl
mov
push
fs
pop
mov
int
mov
inc
sti
insb
loope
jecxz
dec
bt
jo
mov
cli
jg
jl
add
xchg
mov
mov
dec
rep
sbb
dec
jnp
rcr
out
fnsave
mov
inc
mov
pop
xchg
add
mov
xor
inc
fnstsw
sub
cmp
push
pop
and
jecxz
inc
jmp
mov
pop
popa
sub
mov
add
mov
sub
mov
ret
jo
cltd
addl
test
lock
xchg
xchg
add
cmp
mov
cmpsl
mov
insl
insl
push
iret
mov
add
sub
ss
push
lcall
loop
ds
sub
mov
jno
out
and
data16
sahf
mov
mov
frstpm(287
popf
xor
test
and
lea
iret
dec
add
cmpsl
ds
xor
push
adc
sti
out
xchg
vmwrite
and
cmp
je
push
add
xchg
xor
xor
enter
push
mov
mov
inc
movsb
or
cmp
test
mov
dec
in
adc
xchg
movsl
scas
psrlq
shrb
mulb
sub
test
push
push
enter
imul
add
mov
scas
xor
push
jp
mov
shll
and
add
imul
cmp
add
pop
adc
test
cmp
jge
outsb
imul
sub
mov
push
dec
or
pop
xlat
sbb
adc
jnp
xchg
pusha
push
stc
jns
cmpsl
ret
filds
icebp
leave
inc
cwtl
mov
mov
mov
lea
es
xorl
imul
insl
mov
mov
cmp
int3
ljmp
or
nop
cs
loop
test
sbb
daa
push
flds
lods
pop
mov
cmp
cmpsl
orl
fcmovnbe
inc
cld
or
cmp
outsb
je
jmp
loopne
or
inc
sub
stc
dec
rclb
ljmp
and
add
jno
nop
pop
sub
in
and
mov
loopne
mov
aaa
in
aaa
push
jo
call
gs
mov
dec
xor
jp
and
mov
xchg
movsb
outsl
xor
das
jle
dec
dec
sub
jg
aam
ret
adc
push
lret
or
mov
mov
sub
dec
sti
sbb
test
xchg
cmpsl
xor
or
arpl
mov
jmp
js
push
mov
add
cmp
jo
lret
mov
repz
cmpb
mov
push
sbb
push
insb
mov
inc
popaw
add
and
push
testl
and
pop
pop
mov
push
or
addr16
sub
popf
inc
sub
inc
loopne
cwtl
sbb
clc
and
lea
sub
into
es
cmp
xor
les
cmc
fldt
sub
out
fidivrs
pop
jmp
and
je
je
dec
jecxz
dec
add
cmp
push
and
xchg
push
scas
rclb
stos
sti
push
in
stos
mov
hlt
cmp
mov
shr
out
mov
adc
shlb
and
xchg
sbb
dec
stos
cmp
jl
mov
nop
inc
cmc
sub
movsb
imul
nop
in
cmp
rcll
xor
adc
pop
pop
test
fcompl
imul
sti
iret
mov
xchg
mov
shlb
stos
inc
loope
ja
dec
jecxz
xor
loopne
dec
lods
es
movsl
inc
iret
addr16
aam
inc
mov
mov
mov
sarl
lret
push
dec
test
pop
stc
xchg
iret
cli
stc
add
jl
daa
popl
pop
mov
imul
mov
sahf
loopne
out
imul
cmc
mov
adc
xor
mov
add
fisttpll
sub
stc
daa
icebp
lods
mov
dec
stos
or
sbb
ljmp
aad
pop
sbb
out
pop
out
lock
mov
fisttps
jl
shrl
cwtl
ja
adc
daa
jnp
mov
jle
push
mov
dec
sub
add
out
ret
pop
xor
sbb
scas
cmp
cwtl
lret
add
push
mov
and
jns
inc
jecxz
fdivrl
add
mov
mov
stos
test
push
out
addr16
int
or
adc
dec
jo
jnp
sbb
inc
mov
cmp
fiadds
jb
jb
xor
insb
mov
cmpsl
inc
add
pop
pop
dec
pushf
out
insb
inc
idivl
out
pop
xor
test
mov
adc
jae
jecxz
push
inc
dec
fndisi(8087
movsb
popa
mov
repz
inc
dec
test
sbb
push
cwtl
aas
lret
sahf
xlat
gs
js
call
scas
mov
inc
hlt
pop
xlat
xchg
dec
lock
push
push
pusha
fdivrs
lea
and
mov
jbe
idivb
inc
call
sbb
mov
pop
or
shrb
add
cmc
jecxz
fs
loop
push
jae
cltd
gs
movsb
arpl
inc
das
fs
push
xchg
lcall
std
sbb
fwait
mov
or
adc
js
int3
subb
and
aad
jo
mov
jbe
nop
mov
movsb
loope
adc
and
mov
daa
loope
lock
loope
or
mov
push
jns
or
std
rclb
add
xchg
cmp
ljmp
dec
das
cld
ds
xor
adc
bound
mov
xchg
or
xor
jg
jmp
movsb
idivl
rcll
test
sub
push
add
mov
push
or
adc
adc
pop
pop
and
fldz
mov
add
push
je
sub
sbb
filds
loop
adcl
ja
or
xlat
fbstp
stc
sar
js
pop
mov
imul
inc
mul
fadd
and
mov
call
dec
mov
fsqrt
pop
dec
or
push
push
xor
lahf
test
adc
cld
cmp
shll
push
mov
xor
sti
nopl
pop
sub
mov
adcl
fldenv
xchg
lret
or
and
rorb
push
popa
fbstp
mov
mov
adc
mov
and
xorl
add
stc
inc
movsb
mov
dec
pop
shlb
xchg
sbbl
dec
sub
adc
repnz
arpl
or
xchg
negl
movsl
neg
imul
inc
test
xchg
lea
add
lods
ds
scas
imul
pop
cmp
sbb
mov
sub
dec
pop
cmp
repz
cmp
roll
jo
lcall
cltd
out
push
cltd
xor
int
imul
sbb
rcrl
rolb
lods
out
fwait
scas
sub
dec
or
push
dec
orb
sbb
in
lds
js
xlat
sbb
mov
rcrl
lahf
test
imul
ljmp
jp
xchg
imull
mov
mov
pushl
ss
add
mov
fisubrs
loop
push
xchg
pop
std
cwtl
inc
loop
add
push
sub
adc
fucom
mov
repnz
lds
out
testb
cld
xor
data16
push
push
push
sub
xor
mov
or
sub
xchg
lea
jmp
push
mov
pop
sub
aad
ss
out
loop
cltd
lods
sub
cmpl
fsincos
sub
mov
cmpsl
ss
sti
sbb
mov
testb
mov
fld
dec
mov
or
pop
arpl
dec
jnp
jns
daa
sbb
fcomps
lahf
decb
add
dec
pop
mov
lahf
aas
sub
sub
fimuls
ja
nop
sbb
fmuls
or
dec
pop
arpl
jmp
cmpsl
xchg
sub
adc
xor
arpl
arpl
mov
push
scas
ror
push
push
int
sbb
ret
jle
mov
dec
movsb
mov
and
sbb
and
ret
mov
test
mov
das
push
cmp
sbb
icebp
push
loope
in
aas
xor
leave
out
xlat
sub
xchg
add
jnp
in
mov
and
fdivrl
movsb
push
jge
sub
stc
je
xchg
inc
jb
cmp
in
sbb
rol
xor
pop
adc
loope
cmp
xorb
outsl
call
adc
jg
push
ja
popf
je
xchg
loopne
out
out
xchg
inc
addr16
ja
fildl
lahf
xor
mov
mov
or
in
orb
and
addr16
and
cmpsl
pminub
lds
mov
hlt
popf
fsubl
daa
fsts
int3
inc
jo
mov
fucomp
pop
pop
rcll
js
sub
pop
andb
xchg
and
outsb
fwait
lret
xor
loopne
or
dec
cmpsl
and
and
inc
adcl
lcall
arpl
in
fbstp
fdivrl
repnz
movsb
lock
shlb
fdivl
loop
pop
sahf
sbb
lock
into
outsl
pop
cs
enter
xor
cmp
mov
push
in
fmulp
xor
inc
scas
sbb
cmp
fisttpll
clc
icebp
sub
fs
mov
inc
xchg
push
cld
jo
jge
fwait
test
rcll
mov
nop
daa
call
scas
lds
inc
repnz
hlt
lret
test
mov
dec
pop
mov
lock
jnp
adc
push
popf
inc
pushf
sarb
jl
dec
mov
mov
cmp
cs
lea
outsb
adc
sub
xor
pop
int3
or
dec
ret
nop
imul
in
repz
out
jno
repz
popa
hlt
mov
jecxz
test
sbb
cmp
fstpt
cmpsl
push
out
cld
idivl
mov
out
pop
das
into
cwtl
les
adc
fisttps
adc
mov
sahf
add
loopne
xchg
out
out
sbb
inc
mov
mov
pop
rorl
xor
jl
iret
xchg
sbb
inc
jle
subb
ds
int3
test
test
decl
xchg
sub
movsb
ret
sahf
stos
lret
js
movsl
orb
dec
push
fidivrs
cli
xchg
dec
testb
pop
pusha
mov
push
lods
aas
jl
inc
dec
loope
aad
int
mov
fidivl
jmp
jle
jl
xchg
mov
jl
and
inc
xchg
push
adc
push
pop
lea
lods
fisttpl
ss
mov
lock
bound
sub
mov
sub
call
cli
lcall
pop
les
mov
xchg
loop
sbb
pop
bound
in
popa
jle
mov
shlb
jge
mov
adc
push
addr16
mov
das
adc
xchg
ficoms
mov
dec
or
lea
in
ds
and
mov
or
mov
out
mov
and
leave
jns
or
fisubl
push
aad
pop
ret
sbb
ss
adc
cmpsb
cmpsl
and
mov
inc
enter
xor
lods
fmull
shl
lea
dec
into
xchg
sub
fmull
mov
inc
rcrb
mov
es
js
nop
rorb
cs
jb
stos
aad
mov
mov
push
popa
icebp
pop
pop
das
pop
sub
or
insl
cmpl
icebp
mov
leave
lods
jecxz
ret
ljmp
ja
popa
and
stos
rclb
push
push
out
fwait
adc
jb
mov
lret
sub
xchg
nop
pushf
cltd
int
lods
sbb
add
pop
rorb
inc
lcall
out
adc
repz
push
push
data16
test
sub
cmpsb
leave
shll
sbb
notl
and
push
mov
mov
cmpsb
aaa
fdivl
cvttps2pi
pop
mov
push
enter
sbb
cld
fisttps
mov
outsl
or
fimull
movl
fsubs
xor
add
mov
daa
jo
shll
out
outsb
jns
push
or
sub
dec
ffreep
jne
jg
push
test
push
or
stos
inc
push
data16
push
pop
stos
int3
and
sbb
aaa
sbbb
icebp
push
aam
lds
mov
cmp
mov
add
ret
fnstenv
fcmovnu
inc
push
mov
xchg
inc
and
insb
inc
and
dec
mov
orw
mov
dec
adc
xor
and
fstps
push
addr16
js
pop
cmp
mov
ljmpw
scas
lods
pop
mov
cmp
lret
add
sub
mov
pop
rclb
je
lahf
push
in
js
rolb
push
idivl
pop
fidivrs
fimuls
xor
stc
mov
dec
jnp
gs
in
push
jp
test
cli
cltd
pop
sbb
pop
jg
outsl
sbb
mov
imul
push
adc
mov
mov
icebp
and
jbe
push
push
push
fld1
scas
clc
dec
pop
lods
repz
pop
lods
test
mov
loop
add
fdivrp
cli
stos
mov
sti
cmp
jns
or
in
dec
aas
lea
xchg
daa
dec
lods
pop
add
mov
roll
mov
call
dec
jl
and
xchg
jo
clc
stc
or
daa
cltd
popfw
dec
int
popa
stos
xor
fstpl
xor
loop
outsl
or
push
pop
loope
sub
pop
imul
repnz
popf
mov
cmp
xchg
mov
orb
clc
add
fwait
movsb
inc
stc
xchg
inc
mov
std
inc
jl
pop
sbb
pusha
in
adc
jge
fldenv
arpl
cmp
mov
sti
pop
addr16
sub
add
push
mov
enter
das
mov
xchg
sbb
arpl
lock
loope
aas
nop
sbb
dec
push
mov
adc
mov
inc
arpl
xchg
je
in
cmc
and
ret
das
xchg
scas
adc
sub
jno
cmp
inc
negb
adc
movsl
xchg
or
dec
dec
lods
or
call
jp
inc
gs
cmpb
int
and
rcrl
jp
scas
popf
xchg
dec
popf
dec
mov
popf
xchg
sub
adc
and
outsl
mov
or
or
add
push
inc
lea
arpl
cwtl
cmpsl
imul
mov
cmp
out
push
mov
xchg
cltd
sub
ja
mov
push
xchg
jle
out
cmp
fildl
xchg
mov
push
ret
pop
sub
xchg
jmp
sbb
inc
xchg
and
cwtl
iret
adc
loopne
mov
outsb
stc
mov
fisttps
je
xchg
ret
addr16
jmp
xchg
pop
push
clc
aas
inc
jnp
push
xor
pop
xor
ja
xor
outsl
and
and
inc
and
dec
dec
loope
sbb
sbb
out
ret
inc
ret
pop
testb
sub
aam
inc
leave
mov
ret
lret
gs
sub
insl
jmp
mov
jmp
inc
sbb
sti
mov
cwtl
add
scas
push
sub
jle
sbb
pushf
nop
add
dec
jne
hlt
dec
fstps
lods
clc
sub
adc
out
jmp
loope
mov
mov
mov
popa
and
addr16
add
loopne
hlt
mov
mov
push
clc
enter
xor
mov
and
mov
sub
stos
jo
dec
in
cmp
xor
psubd
enter
stc
dec
int3
mov
sahf
xchg
xor
jne
inc
xor
pop
fdivl
add
or
mov
xor
loope
mov
sub
xchg
add
pop
imul
mov
leave
xchg
sub
fwait
dec
ljmp
cmp
xor
mov
or
out
dec
sub
aaa
fistps
pusha
inc
pop
add
xchg
adc
js
sub
xlat
shrl
insb
pop
sub
lcall
mov
pop
shlb
push
outsb
imul
push
adc
mov
fcompl
sbb
push
jl
push
mov
jne
or
aaa
movsl
dec
das
roll
dec
adc
leave
lret
in
shrb
adc
lods
add
mov
scas
scas
shrl
push
cmp
scas
and
lods
push
lea
es
sbb
addr16
out
fistpll
int
lret
int3
or
stos
xor
sub
fistpll
inc
rcl
sbb
mov
or
dec
ja
and
mov
adc
cmc
inc
aam
jg
icebp
movsl
mov
andl
insb
bound
andb
add
ret
dec
mov
add
pop
out
adc
dec
call
xchg
jmp
jge
out
repz
cltd
je
and
adc
sti
jns
mov
sahf
xchg
mov
lock
imul
mov
leave
sub
pop
and
push
shlb
add
call
inc
movsb
sbb
addr16
outsl
enter
adc
fwait
mov
inc
xor
and
ja
mul
lods
adc
xor
xchg
xchg
lods
fisttpl
in
add
aam
out
in
lock
inc
scas
fidivrs
cs
rorl
js
adc
les
add
sub
dec
push
out
push
lds
pop
jbe
dec
lock
push
fstpt
mov
push
sbb
arpl
popf
sbb
mov
int
fisubrs
mov
cmpb
outsl
test
iret
pop
test
dec
adc
enter
in
stos
dec
cmpsb
cld
insl
push
sarb
mov
push
add
add
aas
sbbl
popa
adc
ficoms
sbb
or
xchg
shl
cmp
mov
cmp
in
push
sbb
in
fcmovu
cmpb
pshufw
mov
outsl
pop
add
jl
addb
push
or
cmp
and
scas
pop
add
pop
push
jge
leave
cltd
movsb
imul
inc
jb
mov
fucomp
subl
inc
jp
sub
push
fwait
pop
fdivs
std
jne
inc
lea
pusha
push
jae
ds
das
push
xchg
js
ja
sub
or
shrl
cmp
pop
imul
push
jle
dec
pop
subb
jp
push
in
adc
imul
cmp
leave
mov
dec
pop
test
add
loopne
xor
push
add
ljmp
dec
fbld
xlat
std
jp
fwait
mov
rcrl
mov
decl
pop
pop
jge
cmp
iret
pop
xor
rorb
in
ret
cwtl
js
sbb
out
scas
not
rcrl
repnz
inc
jecxz
dec
movsb
mov
jmp
xlat
out
ljmp
inc
push
pop
gs
pop
xchg
add
xor
and
push
in
scas
repnz
mov
and
ss
in
push
xor
ret
inc
sbb
addr16
dec
sbb
aam
xor
hlt
ja
dec
ret
adc
cwtl
mov
out
jbe
in
arpl
addr16
adc
add
push
fimuls
xchg
repz
adc
inc
cs
and
daa
pop
jnp
and
out
clc
xchg
andl
stos
nop
mov
ret
push
jbe
ja
shrl
inc
xor
roll
xor
sub
xchg
call
push
shlb
or
or
repnz
hlt
adc
int
sbbl
lock
call
mov
fnsave
cmp
dec
sbb
das
sub
mov
mov
sub
fcoms
fcmovu
xchg
pop
mov
and
mov
nop
inc
outsb
fcomps
sub
lahf
lds
pop
mov
mov
lds
stc
jnp
ficoml
and
xor
iret
pop
pop
hlt
push
jne
jmp
pop
out
xchg
fcompl
pop
inc
das
sbb
inc
repz
sbb
jae
rorb
in
xchg
sbb
loopne
mov
lcall
dec
loop
push
or
fisttpll
cmc
push
sarb
mov
add
jb
mov
imul
xchg
imul
xchg
mov
pop
dec
imul
inc
sub
cli
in
nop
push
lods
insl
sbb
xor
pop
push
hlt
fndisi(8087
pop
dec
sahf
mov
cli
sarl
notl
cmp
inc
xchg
stos
mov
sub
mov
in
es
mov
push
adc
mov
arpl
sub
nop
sub
in
vpunpckhbw
ret
sahf
mov
sbb
push
jl
loopne
sti
jmp
rorl
test
aam
sbb
enter
mov
pop
aaa
push
and
sahf
mov
sub
repnz
out
mov
xchg
mov
cmpsb
leave
fidivl
fidivs
popa
push
insb
dec
leave
fbld
leave
aaa
int
sti
cwtl
adc
call
aaa
rcrl
xchg
insl
dec
out
ds
fstpl
sbb
fs
mov
into
jbe
enter
or
loopne
dec
les
dec
fistl
mov
negl
cmp
jp
lret
out
jae
pop
mov
loopne
les
icebp
aaa
dec
xchg
lret
daa
mov
xchg
lahf
mov
incb
mov
inc
sbb
out
add
adc
mov
lret
mov
mov
fnsave
mov
adc
call
pop
sti
mov
addl
xchg
cld
dec
cmc
cs
add
lods
dec
loop
mov
and
inc
daa
or
adc
cmp
mov
xchg
cmp
fdivr
push
mov
mov
daa
sarl
and
popa
into
rcrb
push
mov
inc
xchg
rorb
enter
mulb
push
out
push
shl
shrb
push
outsl
and
stos
sbb
add
or
sti
cld
sti
scas
add
push
inc
xor
in
or
mov
mov
sbb
cmp
int
mov
cmp
mov
mov
pop
pop
sbb
movsb
cmpsl
inc
fadds
test
testb
sbb
or
jmp
outsl
test
mov
sub
and
inc
mov
mov
or
lds
frstor
xchg
in
fwait
out
flds
out
div
inc
and
scas
cmp
rol
out
mov
scas
andl
in
insl
mov
push
mov
xchg
xor
xchg
arpl
sbb
mov
dec
mov
enter
inc
sti
lahf
pop
inc
lods
mov
out
xor
push
xor
xchg
mov
or
daa
sbb
outsb
add
inc
push
add
imul
clc
mov
xor
jge
mov
das
xlat
add
jge,pn
in
mov
sbb
mov
mov
fldl
push
xlat
pop
inc
std
mov
repnz
outsb
out
popa
mov
cmovg
out
dec
sti
clc
mov
pop
inc
movsl
cmp
pop
pop
and
mov
mov
cld
push
je
or
dec
sbb
sub
jg
aaa
pop
or
imul
insb
fsubp
dec
cmpb
lahf
fidivs
repz
rcrl
test
into
sbb
push
nop
or
popf
xor
insb
in
and
or
push
mov
imul
insl
mov
leave
mulb
jae
iret
js
inc
mov
jb
mov
mov
std
cltd
adc
mov
pop
xor
inc
ret
xor
push
sub
inc
push
and
in
add
fs
sub
mov
adc
and
loopne
inc
add
push
hlt
les
nop
jnp
cmp
lret
lret
int
xor
mov
loopne
aam
mov
das
dec
xchg
and
shl
out
andl
jle
add
pop
push
sub
fsubl
add
sbb
push
cli
decb
hlt
repz
xor
xchg
add
adc
inc
subb
xor
sub
pop
decb
sub
add
inc
push
fcmovu
mov
pop
scas
mov
jbe
pop
inc
mov
add
into
les
icebp
jp
test
lods
int3
ja
lret
or
es
dec
inc
fnsave
mov
mov
jbe
nop
scas
lahf
xchg
jb
push
xor
dec
sarb
fwait
imul
dec
out
dec
movsb
pop
sbb
adc
adc
fnstsw
inc
jmp
out
jne
xchg
mov
stc
jno
jb
inc
lret
push
mov
loopne
mov
mov
sbb
jle
test
ret
mov
dec
mov
add
sbb
jmp
push
sbb
pop
and
int
cmpl
jno
cli
jae
rcrb
sarl
pop
fnsave
shrl
lock
pop
sarb
jae
jp
push
xchg
pop
adc
leave
push
stc
arpl
sbb
or
cmpsl
jmp
and
addr16
fiadds
clc
arpl
mov
jnp
push
jle
in
inc
out
mov
xchg
int
les
push
push
aas
or
dec
adc
loop
fiaddl
enter
daa
mov
mov
mov
cld
fidivl
cmpsb
and
mov
mov
add
je
cmp
mov
mov
lcall
cli
sbb
mov
and
clc
dec
and
adc
addb
push
add
mov
mov
xchg
das
fwait
sbb
add
mov
xchg
inc
fwait
pusha
sbb
adc
xchg
inc
cmp
bound
leave
adc
js
dec
lret
mov
dec
arpl
and
or
cli
dec
stos
mov
arpl
and
adc
sbb
jnp
cld
movsb
cmc
jl
jmp
and
mov
cltd
xchg
pop
scas
push
xchg
adc
cmp
into
fwait
or
pop
test
std
cli
mov
lret
add
jno
sarb
leave
popf
push
push
out
inc
std
mov
lods
arpl
xchg
mov
aaa
call
enter
mov
adc
dec
out
stos
and
mov
lcall
int3
pushf
cmp
ja
fdivrs
lret
cmp
mov
sub
add
fwait
pop
movsl
add
pop
xchg
pop
mov
inc
shl
or
mov
or
dec
inc
in
stos
ret
in
add
add
shll
pushl
fbld
outsl
jae
ss
xchg
add
popa
pop
cli
rolb
sahf
repz
mov
adc
add
or
fadd
clc
or
push
ss
inc
mov
imul
mov
cmpsl
aad
repz
imul
int
mov
adc
push
test
mov
mov
cs
stos
or
xchg
pop
mov
insl
mov
xor
shlb
fisttpll
push
mov
imul
stc
mov
mov
leave
insl
jle
lock
mov
outsb
mov
add
into
stos
push
lock
sub
mov
xor
mov
sbb
mov
mov
lock
jle
mov
cmpsb
jl
cmp
outsl
jecxz
dec
loopne
mov
shrl
repnz
sub
lahf
es
push
lods
lahf
outsb
sbbb
popf
aas
jbe
or
fmuls
add
push
dec
aaa
mov
aad
in
in
hlt
mov
fidivl
leave
frstor
ds
pushl
jge
repz
fwait
xchg
dec
push
pop
sub
pop
insb
jns
mov
leave
idivl
cli
pop
adc
fmull
icebp
and
adc
stos
push
test
xchg
out
adc
add
push
call
out
mov
js
into
iret
push
mov
sub
pop
xor
out
sbb
les
dec
lret
or
adc
mov
je
mov
orl
push
xor
pusha
xchg
push
cmp
mov
into
cli
enter
jle
push
mov
scas
lds
adc
fsubrl
popf
mov
xchg
aam
mov
or
ja
xchg
or
leave
das
in
pop
mov
cmc
mov
addr16
dec
pop
pop
test
rcll
pop
out
xchg
rolb
xor
movb
es
jo
incl
fsubrl
sbb
jae
das
stos
push
push
aam
mov
in
xor
xlat
into
cwtl
push
jmp
pop
notl
xor
in
mov
scas
push
fidivs
push
sbb
pop
cmc
push
push
mov
cmp
mul
mov
sbb
es
jecxz
push
faddp
aad
js
nop
jle
test
repnz
movsl
cmp
mov
mov
aad
das
jg
mov
lret
int
addr16
inc
movsl
cs
cvtps2pi
xor
push
je
ficoms
xlat
cld
repz
add
inc
bound
insb
push
push
cmp
jmp
pop
in
imul
lcall
jg
aad
cmpsl
xor
inc
cld
jae
cli
shrl
addl
popl
inc
cli
scas
xor
xlat
add
pop
lret
inc
mov
mov
addb
xor
mov
lret
rcrl
dec
cmp
and
sbb
out
cmp
ret
stos
dec
add
pushf
stos
scas
ljmp
xor
test
fsubrl
add
aad
fsubrs
sub
orb
stos
jge
cld
cli
xchg
mov
jl
out
dec
and
jnp
xlat
xlat
jle
dec
testl
sbb
roll
jno
mov
scas
push
push
scas
imul
clc
or
mov
aas
nop
pushf
xor
loop
pop
pop
jae
lret
repnz
addr16
jno
mov
cld
and
cmp
out
jne
in
jl
cmc
insl
clc
outsl
jp
adc
sub
out
out
inc
in
ja
cmpsb
xchg
pop
les
mov
lret
or
loopne
fstps
mov
ljmp
loope
and
mov
rorb
arpl
sbb
test
sub
ret
cld
imul
jnp
sbb
push
cmp
imul
sub
adc
pop
mov
mov
lret
adc
fsubrl
in
push
sar
lea
inc
repz
pop
lods
jo
mov
outsl
add
cmpl
xchg
data16
cli
out
mov
fldenv
cld
inc
add
jg
or
lahf
lret
das
or
adc
cli
je
xor
test
add
imul
xor
sbb
scas
jmp
cmp
lock
mov
loope
mov
dec
ret
movsb
sarl
enter
push
mov
in
xchg
lods
stos
popa
sub
stc
faddl
sub
push
mov
inc
and
xchg
lea
js
and
arpl
push
stos
or
dec
hlt
inc
sbb
xchg
pop
out
mov
shrl
push
decl
in
push
test
movsb
andl
daa
pop
xchg
sbb
sbb
cmp
sbb
xchg
mov
pop
test
sti
das
pop
data16
ret
jnp
repnz
adc
xchg
sub
and
and
jle
pop
jbe
stos
or
xchg
and
loopne
in
fcmovnb
inc
ja
push
addr16
jp
mov
cmp
pop
mov
pop
jbe
adc
mov
or
rcr
mov
outsl
pusha
adc
lods
mov
sti
pop
hlt
push
jp
sbb
std
or
out
inc
or
sbb
inc
jmp
push
mov
jl
or
fnstsw
ret
jae
dec
mov
jg
add
mov
pop
sub
xor
loop
int3
into
and
loopne
pop
ljmp
mov
jle
push
je
cmpsb
fistps
mov
mov
sub
xchg
push
add
fadd
jae
jmp
jg
xchg
imull
ljmp
out
add
call
sbbb
inc
addb
inc
pusha
and
push
xor
jge
mov
pusha
das
mov
pop
aaa
movsl
mov
mov
orl
pop
addr16
das
jne
idivb
pop
or
xchg
mov
cli
xchg
in
clc
loop
cmp
cld
cmp
sub
pop
stc
add
stos
ds
fs
outsb
inc
mov
mov
sbb
lahf
scas
mov
dec
add
iret
arpl
xor
sbb
in
mov
pop
lret
push
enter
push
popf
push
ss
push
xor
adc
mov
jecxz
sbb
lods
mov
dec
mov
hlt
or
daa
fcmovnb
ret
lret
repnz
outsl
das
movsl
add
and
dec
xlat
push
scas
fstl
rorb
xor
push
imul
xlat
pop
sbb
mov
shl
sahf
or
xor
inc
lret
mov
mov
mov
mov
jge
aad
jp
push
scas
xchg
test
push
mov
push
loopne
dec
inc
dec
and
test
movsb
mov
sub
jae
sahf
test
call
or
or
arpl
mov
xchg
and
ficoms
adc
lahf
cwtl
push
fisubl
fwait
cmp
mov
cmc
inc
xorl
xchg
shll
outsl
ret
dec
fistpll
das
iret
pop
mov
pop
xor
sahf
push
movsb
sahf
ljmp
enter
iret
dec
add
std
jge
fcomi
mov
sbb
insb
outsl
lcall
loop
test
imul
mov
mov
pushf
gs
xor
cli
jmp
and
shll
inc
mov
pushf
add
pop
mov
shlb
add
jo
decb
pushf
push
lret
mov
sbb
jne
sub
ss
cmpsl
adc
movsb
inc
out
pusha
ja
xor
jp
lret
cmpsl
pop
shll
mov
rolb
push
push
pop
and
add
por
jo
dec
ret
and
faddl
add
sbb
push
bound
lret
jne
push
add
arpl
sbb
sub
aad
xlat
add
jbe
call
pop
add
xchg
rcrb
sub
daa
ljmp
dec
sbb
xor
ret
test
pop
add
loope
jle
cmpsb
xlat
mov
xor
adc
sbb
dec
pop
fsubl
pusha
add
cmpsb
in
pushf
cltd
lcall
adc
daa
inc
xchg
mov
out
in
ljmp
xchg
aas
iret
in
xchg
jg
pop
dec
sbb
out
sub
fstpl
rcl
les
pop
mov
rcrl
xchg
xor
mov
jg
inc
xchg
sti
adc
and
stc
pop
inc
sub
sarb
jno
ja
insb
test
in
std
mov
hlt
mov
xor
rorb
mov
lahf
mov
push
sarb
ja
sbb
sub
inc
jl
sbb
dec
lock
dec
scas
int
rep
lcall
jg
loope
loop,pn
test
cmpl
mov
es
adc
test
addb
clc
or
mov
int3
mov
movsb
lahf
pusha
xchg
negl
xchg
sahf
cmpl
and
enter
sub
fwait
dec
mov
xchg
inc
jns
cmpsl
adc
mov
ret
aad
jge
push
jno
cmp
movsl
andl
mov
jp
jns
loop
das
ljmp
rcrl
clc
fucom
je
xor
mov
xchg
aaa
daa
xchg
stos
dec
mov
xchg
insb
xchg
cli
testl
ljmp
xor
cmp
sti
aam
movsl
or
in
lret
stos
dec
cmp
lock
loope
jg
movsl
dec
pushf
push
sbb
lea
scas
clc
insl
pop
pusha
in
or
lcall
mov
xchg
push
xchg
daa
insb
bound
mov
mov
outsl
xchg
and
push
pop
testl
adc
sbbl
mov
cmp
add
cltd
ficoms
add
daa
int3
mov
hlt
jb
and
movsl
inc
mov
dec
sbbb
cmpsb
xchg
loop
lds
cld
xchg
imul
lcall
or
fisubrl
push
add
mov
adc
pusha
incl
out
out
aas
dec
in
in
push
addl
dec
pop
nop
add
xchg
loope
xchg
outsl
or
mov
into
pop
jge
lods
popf
pushf
mov
aas
fsubrl
add
vmovdqa
test
and
clc
dec
pushf
jle
pop
adc
repz
dec
jge
out
mov
mov
ficompl
add
mov
dec
das
je
xor
add
pop
sahf
sbb
add
lods
negb
cmp
jp
ret
push
repz
sti
mov
popf
cmp
jnp
std
lods
lret
lea
shrl
les
adc
out
fstps
repz
lahf
push
mov
lea
fwait
mov
subl
scas
jge
cs
sbb
mov
sahf
in
test
jecxz
jnp
mov
daa
out
movsb
sub
or
mov
mov
scas
pushl
aas
inc
test
lret
stc
mov
add
or
mov
jbe
js
sbb
addr16
sub
in
xor
icebp
push
shrb
rol
mov
fadds
repz
rclb
push
mov
mov
and
add
clc
in
sub
or
jp
out
imul
mov
ret
mov
fsubrl
and
push
iret
mov
jg
imull
inc
scas
testb
xor
ror
test
lds
inc
sahf
add
pusha
push
jb
test
add
sub
mov
mov
loopne
mov
adc
ret
iret
pop
addr16
sbb
les
and
movsl
inc
xchg
fstpl
int3
cwtl
mov
ss
in
test
xlat
daa
testl
js
scas
and
shrb
in
or
gs
mov
and
outsl
mov
push
or
int3
es
loop
cmp
dec
inc
mov
sbb
sbbb
cmp
lcall
mov
inc
rorl
jge
loopne
jmp
fisttpll
and
repnz
imul
cmpsl
sub
push
pop
jl
sbb
ret
insb
jecxz
inc
test
jecxz
jp
outsb
jne
ss
jmp
mov
pop
fimull
inc
mov
stos
ret
lret
push
les
sub
sbb
maxps
addr16
bound
xor
je
mov
insb
lret
fnstenv
ret
jne
mov
subl
push
stos
cmp
cmp
movsl
cs
pusha
mov
mov
jae
fwait
sbb
jno
data16
fwait
ljmp
dec
and
cmpsl
and
mov
cltd
ret
add
jns
repnz
mov
xchg
add
test
xor
or
stc
push
xchg
mov
sbb
and
xor
mov
cmc
aas
mov
lret
xor
xchg
ffree
int3
int
testb
sub
jle
jb
pushf
jb
scas
pop
pop
rcrl
and
mov
es
inc
mov
insb
jmp
inc
out
jg
jns
popa
dec
insl
adc
test
jne
addr16
loop,pn
dec
fwait
jecxz
sub
sbb
adcb
xchg
cmp
movsb
push
jb
mov
imul
and
xor
jmp
scas
std
loope
cwtl
push
or
pop
cli
adc
sub
icebp
inc
ds
adc
adc
inc
in
loopne
aaa
dec
cli
push
aaa
cli
movsl
inc
inc
imul
rol
adc
cli
pop
adc
testb
lret
push
lock
add
shll
outsl
mov
aam
add
add
jae
add
adc
and
mov
lods
dec
test
lcall
outsb
cmp
ja
imul
push
cs
xchg
ja
and
adc
lods
adc
xor
out
fdivrs
and
adc
xchg
scas
fiadds
mov
mov
mov
notl
pop
mov
push
ret
test
jge
and
test
add
es
outsl
add
cmp
cmp
les
fwait
push
fidivl
cmp
js
mov
in
clc
or
dec
pop
sub
ret
pop
pop
rcrl
outsl
leave
dec
andb
mov
movsl
dec
and
xor
cmp
aaa
and
mov
jbe
sub
sahf
in
iret
jns
xor
call
jno
mov
xchg
mov
adc
mov
pop
outsb
lods
sub
test
stos
lret
adc
enter
nop
add
or
roll
and
add
loop
mov
outsb
dec
daa
pop
mov
lock
aas
and
or
fdivrs
fsubr
loope,pt
aad
cmp
lods
xor
inc
lret
mov
push
sub
adc
addr16
gs
orb
jae
mov
jbe
movsl
push
ja
pop
ret
bound
cmp
inc
das
clc
dec
cmpb
jmp
das
xchg
or
add
xlat
mov
and
mov
and
inc
cmc
popa
push
test
jge
xor
insb
and
mov
push
ret
cmpl
fisttpl
cmp
push
xor
stc
sbb
inc
scas
out
xchg
out
aad
jns
popa
enter
mov
dec
imul
mov
jb
loope
sarl
imul
test
ss
push
movsl
mov
or
scas
scas
cli
scas
rcrb
sti
jnp
add
or
mov
test
sar
mov
jno
push
add
icebp
pop
mov
in
pop
jecxz
aad
mov
lods
in
pop
test
jmp
mov
pusha
shll
jbe
xorl
inc
sbb
shll
xchg
inc
frstor
out
aas
push
clc
mov
xor
call
mull
sub
aam
pop
das
mov
nop
sub
or
psrlw
ss
int3
jmp
dec
arpl
push
or
pop
outsl
xlat
adc
ja
insl
add
cmp
rcl
mov
nop
testb
jp
fwait
lods
push
les
hlt
test
jge
xchg
sahf
adc
cmc
cmc
or
push
adc
leavew
dec
inc
dec
test
ja
or
dec
inc
or
dec
loopne
sub
enter
lea
dec
repz
mov
sti
jnp
xor
fsubrl
xchg
pop
sbb
jnp
and
ss
movsb
and
lahf
sbb
adc
rclb
push
lret
popa
rorl
test
xor
ret
rcrl
pop
inc
pop
dec
xchg
mov
pop
loopne
ja
loope
mov
fcoms
xchg
lret
pop
push
lock
repnz
incl
insl
aaa
add
and
push
inc
imul
xchg
xlat
pop
sbb
push
iret
jmp
pop
mov
lret
jle
idivb
xor
aaa
stc
jl
bound
outsl
fwait
outsb
inc
mov
dec
cmpsb
cmp
sar
loope
jmp
pushf
sti
sbb
pusha
rcll
add
push
pop
in
loope
xchg
pop
mov
sti
mov
int3
cli
sbb
inc
shlb
fldt
cld
movsb
sarl
pop
cmpsl
xchg
int
mov
jl
jge
sub
push
outsb
xchg
imul
test
int
mov
jno
xchg
push
mov
outsb
addr16
mov
push
mov
xchg
add
pop
or
mov
jne
sarl
sbbl
test
stc
lods
mov
call
or
pop
loope
ljmp
sub
sbb
mov
xchg
sbb
pop
jnp
and
in
cwtl
cltd
test
add
imul
sti
jl
nop
push
rorl
push
rorl
loop
imul
xor
pop
cmp
loope
xchg
repz
incb
push
cld
mov
jmp
sbb
pop
icebp
divl
loopne
pop
cmp
pushf
jge
mov
or
add
jno
add
jbe
jge
outsl
inc
in
push
aas
dec
inc
lds
ja
popf
arpl
call
gs
es
mov
lea
cmpsb
out
testb
push
das
jmp
lods
cmpsb
out
and
mov
add
pop
out
cmc
cld
sub
pop
fucom
sub
test
push
dec
cmp
jo
into
lret
pushl
fldl
sbb
push
in
and
jbe
jecxz
mov
or
lods
cmp
ret
repnz
out
or
mov
das
ret
aam
pop
fdivl
idivb
jmp
test
xchg
repz
mov
inc
push
pop
nop
pop
aad
daa
cwtl
hlt
in
lods
and
mov
xor
ds
xchg
push
add
push
pusha
rclb
xchg
or
mov
dec
or
aas
jge
xor
lea
sub
pop
insb
addr16
mov
mov
or
aad
sarl
xchg
xchg
inc
jae
cltd
mov
mov
push
push
jns
mov
mov
lret
xchg
lods
sbb
sub
sub
lea
in
mov
inc
and
pop
jp
shrl
push
and
push
inc
mov
movsb
fmuls
adc
sub
rcrb
cwtl
adc
rcr
ret
fimull
xor
and
call
fstps
mov
ja
add
aad
dec
add
je
pop
subl
sub
in
iret
mov
adc
inc
xchg
icebp
sub
mov
mov
push
xchg
lods
jge
or
rcrb
idivl
ret
and
mov
mov
push
xor
mov
dec
sti
sub
or
dec
dec
leave
shrl
dec
dec
test
lahf
jg
dec
lods
mov
out
addr16
lcall
cmp
and
repnz
fs
out
std
inc
jnp
mov
push
insb
cmp
adc
and
adc
and
and
sti
mov
addr16
inc
std
sub
cwtl
lods
lds
or
fistpll
pop
int3
jbe
sub
pusha
xchg
movsb
repz
or
and
cmpsb
and
addr16
divb
les
cltd
cltd
pop
push
rorb
pop
or
mov
in
push
in
lret
lahf
push
or
int
adc
sub
push
leave
pop
jb
pop
jp
repz
das
cmp
cltd
cld
pop
stc
sub
cs
and
push
mov
sub
dec
ja
jne
bound
insb
dec
push
lds
cmpsb
fidivrs
sub
xchg
pop
xchg
scas
fimull
pop
pop
inc
push
push
and
and
sarl
and
and
cmpl
mov
mov
stc
add
jo
pop
out
je
sbb
dec
xor
sti
push
jle
jle
xor
pop
cltd
add
mov
dec
sub
push
les
notb
shl
inc
imul
and
pop
loop
push
xchg
or
pushf
and
mov
pop
mov
mov
adc
push
test
push
jg
jb
inc
aad
jge
push
fwait
adc
inc
xchg
pop
in
lods
ret
push
dec
mov
out
mov
scas
xor
out
fs
xchg
sub
fwait
pop
mov
or
xor
lods
data16
sbb
mov
dec
andb
punpckhdq
sbb
in
add
cmp
mov
xchg
xchg
inc
dec
mulb
mov
fdivrl
dec
test
out
or
inc
pop
pop
stc
xchg
imul
fsubrs
nop
pop
cs
icebp
jae
xor
test
int3
dec
jno
pop
inc
fsubrs
mov
or
inc
xchg
or
int3
dec
ljmp
adc
mov
jmp
xor
adc
shlb
push
pop
mov
cmp
xchg
call
lcall
dec
fdiv
sub
adc
loopne
imul
int
lds
mov
cmp
repnz
and
popa
xor
pop
inc
idivb
mov
add
pop
push
shrb
aam
loope
xor
jns
bound
sbb
jbe
fldt
lret
in
sahf
push
int3
scas
or
fisttpll
mulb
in
aaa
mov
and
call
xchg
js
movsb
cwtl
mov
xchg
hlt
mov
shl
dec
jmp
das
das
adc
in
dec
stos
aaa
mov
lea
xchg
mov
enter
les
pop
push
ja
xchg
mov
sub
jbe
fs
aad
leave
std
cltd
push
ds
ds
mov
loope
out
cmp
xchg
sub
mov
movsl
push
pop
cmpsb
daa
movsl
jne
mov
lcall
dec
imul
fsubr
cmp
enter
fdivs
adc
xchg
pushf
xacquire
idivb
xchg
inc
pop
stos
mov
aam
mov
pop
push
push
fcompl
lea
seta
aas
xlat
mov
jno
pusha
mov
arpl
ss
dec
add
aaa
into
mov
inc
mov
push
repnz
xchg
and
shll
cmc
sbb
movsb
jnp
xchg
xor
cmp
arpl
push
or
xchg
xor
jecxz
or
sub
pop
cltd
pop
push
cwtl
push
js
add
outsb
mov
fwait
cmpl
js
aam
jl
xchg
loopne
xchg
pop
lahf
jecxz
push
lds
rcll
inc
inc
scas
fs
ret
test
and
adc
arpl
pop
mov
cmp
xchg
fcmove
jg
xor
dec
cmp
dec
xor
or
ja
mov
or
ret
lods
pop
sub
mov
push
mov
mov
cmp
das
push
cltd
stos
fidivrl
frstor
in
cs
sbb
out
pushf
xor
sbbb
sub
orb
insb
lods
dec
icebp
filds
mov
stos
pushf
cmpb
push
stc
pop
outsl
les
xlat
pop
daa
jae
and
outsb
or
fcmovbe
lods
mov
mov
adc
fwait
out
lcall
pop
sub
out
fisttpl
xchg
in
mov
imul
repnz
cmp
jne
xchg
mov
vpunpcklwd
outsb
lods
add
inc
mov
add
loope
adc
mov
pop
jnp
pop
xchg
adc
incl
loope
pop
sub
fsts
mov
sub
sbb
aad
dec
sub
mov
sbb
lock
and
jle
enter
sub
xor
jle
lret
aas
js
and
jecxz
pushf
dec
jnp
inc
mov
dec
mov
inc
outsb
in
pop
cmpsl
leavew
mov
jecxz
add
jl
call
into
int3
data16
push
push
inc
lahf
sti
cmp
lock
jns
sbb
enter
gs
in
inc
adc
in
push
es
aas
pop
repz
xchg
push
mov
fbstp
cwtl
or
out
lret
dec
lret
fldcw
out
sub
into
fistps
out
cli
mov
fistpl
gs
adc
nop
mov
popf
les
sbbb
mov
fidivs
add
jns
mov
scas
xor
scas
es
aas
xlat
ss
mov
popf
es
and
mov
repz
fs
pop
lods
in
mov
rcrl
add
cmp
call
xchg
pop
outsb
or
inc
int
inc
pop
sub
push
mov
test
addb
outsb
inc
sbb
and
imul
scas
out
pop
xor
fstpt
push
or
jg
push
ret
and
mov
int3
xchg
add
das
sub
pop
xchg
mov
push
negl
jmp
stc
jmp
push
mov
jns
out
call
fsts
data16
sbb
inc
andl
mov
mov
pop
xorl
sub
mov
mov
lea
mov
sarb
popf
notb
pushf
mov
in
rep
test
push
out
daa
dec
mov
or
enter
push
xchg
xor
movsb
idivb
lods
xchg
pop
nop
scas
pop
jb
add
iret
pop
push
rcrb
int
mov
add
mov
test
add
lock
mov
inc
lds
cs
inc
and
fsubrs
test
add
xchg
pop
mov
movsl
call
fidivrl
mov
inc
push
lods
das
dec
lods
imul
adc
lock
in
daa
lahf
xchg
and
pop
lods
cmc
shlb
xchg
faddp
mov
cld
arpl
addb
sti
xor
sarl
jns
cmp
xchg
out
xor
dec
sbb
fwait
je
cli
gs
add
sub
pop
aas
outsb
aad
mov
dec
int
neg
cwtl
rcrb
cmpl
fisubl
rolb
js
js
mov
or
rolb
into
cmp
xlat
mov
dec
flds
loopne
add
sbb
and
mov
lods
lahf
cli
xchg
jmp
dec
adc
arpl
xor
daa
sub
jns
inc
lret
push
mov
sbbb
xchg
xlat
adc
sub
test
mov
mull
mov
xchg
sub
fxch
xchg
nop
roll
xchg
mov
jb
rolb
pop
loope
mov
mov
stc
sbb
or
xchg
and
int3
lock
popf
in
push
bound
cmpl
xchg
cmpsl
dec
sbb
or
fistpl
push
iret
shl
sbb
out
insl
sub
icebp
and
popl
dec
xchg
rcl
cmp
popa
jnp
pop
pop
out
adc
push
add
mov
scas
jno
mov
imul
loopne
sub
aaa
fisubs
rolb
xor
lds
adc
cwtl
add
mov
andl
inc
pop
mov
and
jge
sub
pop
adc
cmp
pop
jo
sbb
and
add
and
inc
cli
call
movsb
add
adc
jge
rclb
fwait
pop
mov
mov
popf
mov
mov
pop
mov
outsb
imul
inc
call
aad
xor
xchg
bound
sub
push
ret
mov
ja
cmp
test
iret
das
pop
cmc
sub
jg
mov
int
xor
jbe
out
lret
inc
stc
aaa
test
push
and
mov
cld
adc
pushw
stos
jae
sub
jmp
inc
jbe
arpl
sub
sub
or
xchg
fwait
popa
ror
fs
cmpl
sbbl
jbe
sbb
sbb
or
and
dec
mov
dec
ja
xchg
push
jns
adc
and
push
jge
jecxz
fistps
or
or
cmp
jns
xchg
sbb
jmp
cli
sub
jnp
rolb
divb
test
or
jl
jbe
mov
inc
push
sar
xor
cmpsl
mov
flds
fyl2x
add
cmp
push
adc
lock
xchg
mov
push
inc
jecxz
jge
xchg
cs
mov
aaa
dec
jmp
cmp
add
xor
pop
testb
add
loop
adc
lea
and
int3
pop
mov
mov
xlat
adc
push
and
cmpsl
jns
sbb
pop
inc
stc
jp
fcoml
mov
lgs
faddl
cmp
mov
mov
clc
stc
shlb
or
cltd
div
stos
pop
sub
jle
sub
in
or
xor
mov
dec
inc
push
xchg
call
jns
fsubl
sub
mov
test
jns
cmpsl
pop
or
mov
out
pop
pop
add
or
testb
add
jbe
push
dec
jo
leave
into
loop
lods
sbb
cmp
fsubrp
orb
and
cmpsb
lahf
xchg
sbb
shlb
push
or
cmp
dec
jg
imul
xor
adc
mov
xchg
ljmp
adc
sub
pop
mov
gs
sbb
and
xchg
fmull
sub
fs
div
loopne
test
jge
cmpb
dec
dec
inc
scas
mov
ret
dec
or
jge
xor
stos
mov
dec
mov
int
repz
scas
iret
mov
mov
xchg
inc
je
lret
fsubr
and
adc
mov
loope
rclb
flds
aas
pop
jns
in
ljmp
loopne
cmp
movsb
sbb
mov
iret
mov
pop
sbb
jbe
fdivr
xor
xor
insb
lahf
dec
mov
aaa
pop
adc
test
xor
pop
lods
nop
push
push
jb
stc
mov
sub
movsb
mov
cli
mov
popa
xchg
andl
es
or
mov
and
xchg
jo
ds
jnp
xchg
ss
lods
ret
mov
mov
lock
push
mov
xor
push
lahf
sahf
adc
add
xor
das
xorb
movsb
xchg
and
mov
mov
int
scas
ja
cmc
sbb
out
decb
mov
ds
sbb
sub
mov
jae
cmpsl
sbb
adc
cmp
cltd
lods
fnstcw
pop
mov
ret
pop
cmpsl
and
fwait
js
xlat
test
outsl
clc
sti
push
push
cmp
aaa
jp
push
sbb
sarb
scas
bound
dec
shrl
clc
pusha
scas
push
repnz
fimull
mov
inc
repnz
fidivrs
decb
mov
insl
iret
jbe
in
sbb
push
mov
iret
nop
daa
cmp
adc
lea
mov
imul
pop
mov
bswap
clc
push
insl
movsl
jnp
loope
xchg
je
inc
and
mov
orb
loopne
inc
lahf
imul
mov
mov
js
lods
std
int
sarb
dec
xor
pop
out
cwtl
fs
xchg
push
sbb
dec
add
nop
inc
icebp
adc
xchg
push
test
add
jo
cmp
jae
clc
mov
addl
ljmp
loop
mov
inc
and
cmp
and
or
inc
mov
rclb
popa
inc
jecxz
arpl
sbbb
std
add
xchg
xchg
pushl
jg
xor
daa
js
push
cmpsb
aad
push
push
insl
inc
lahf
jb
negl
pop
xchg
repnz
pusha
lock
xor
lret
lcall
es
repnz
fisubs
out
icebp
push
pop
iret
cmpl
sti
jnp
jge
ja
xchg
clc
pop
hlt
mov
xor
popf
es
test
push
push
movsb
add
xchg
insl
sbb
push
addb
andb
sahf
lds
add
sub
cwtl
mov
push
pop
hlt
lock
cmpsb
test
inc
insb
push
mov
pop
fmul
adc
cltd
ja
mov
jb
push
adcb
repnz
or
inc
cmp
inc
test
pop
xchg
pop
test
sbb
test
mov
xchg
fbld
cmp
and
arpl
aad
fnstsw
sub
xor
adc
or
outsb
push
add
and
shrl
dec
fwait
mov
je
repz
rorl
lea
xchg
inc
pushf
inc
jle
or
rol
push
sbb
int3
aas
jae
out
movsb
mov
cld
jb
mov
and
mov
testb
lods
dec
imul
jl
dec
aam
jecxz
inc
mov
push
jb
lods
test
hlt
and
mov
push
int3
jle
pop
sub
mov
sub
popa
fdiv
jle
fstl
mov
xchg
enter
cld
and
xchg
and
icebp
add
enter
pop
stos
loope
mov
arpl
or
jmp
adc
push
stc
gs
pop
cmp
and
pop
pop
mov
and
cmpsl
mov
and
mov
or
bound
ret
jbe
jmp
xchg
dec
mov
ds
leave
adc
fwait
pop
je
orb
xor
mov
jbe
or
xor
mov
and
jns
loopne
or
cmp
pop
mov
sbb
ljmp
jne
jl
push
lret
mov
sahf
pop
fyl2xp1
pop
cmp
lret
out
js
pavgb
xchg
insb
sbb
lock
arpl
jg
or
cmp
out
adc
xchg
test
mov
out
stc
push
subb
iret
adc
in
jb
add
scas
inc
aas
dec
lret
mov
cmp
sbb
lds
pop
scas
ja
adc
xchg
std
xchg
jge
sahf
daa
lahf
or
xchg
pop
mov
push
mov
mov
out
mov
roll
in
or
inc
adc
add
rcrb
movsl
cmp
push
loope
mov
xchg
pushl
ret
rclb
add
xchg
dec
xchg
mov
ret
aaa
jo
mov
nop
xchg
psrld
add
or
dec
mov
fsubl
xor
add
inc
cmp
movsb
into
pop
sbb
or
xor
bound
insl
ret
ds
ret
popf
sbb
les
cmp
adc
pop
icebp
scas
dec
sub
ja
mov
lret
dec
mov
scas
ret
jp
popf
testl
pop
pop
imul
out
xor
cmpsb
ljmp
jnp
mov
mov
jnp
or
sub
add
popa
scas
pop
stos
add
xchg
mov
mov
ja,pt
and
xchg
enter
mov
clc
jo
in
cld
jne
push
push
stos
mov
out
adc
fsubrs
adc
imul
in
cmpsb
hlt
push
int
lret
fwait
pushf
data16
jb
aas
clc
cld
lea
punpckhwd
int
fcoms
push
mov
push
push
inc
lds
push
outsb
push
push
xchg
bound
push
add
push
cli
loop
mov
xchg
sbb
push
ljmp
cmp
mov
or
outsb
sub
adc
test
dec
cmp
test
test
mov
daa
jle
jge
mov
push
arpl
aad
or
push
fdivrl
js
mov
or
adc
imul
fldt
inc
push
ljmp
jne
pop
icebp
in
dec
dec
sub
addr16
jp
jmp
in
adc
jno
imul
loope
jae
cmp
push
aas
pop
xchg
jns
sub
pushf
xchg
fucomi
lds
imul
xor
adc
xor
or
shrl
and
les
aas
in
mov
fnstsw
and
xchg
adc
mov
mov
jp
add
push
hlt
cmp
mov
test
pop
insl
into
mov
subl
ja
mov
push
out
sahf
jmp
adc
outsb
sbb
ds
xchg
xchg
sub
pop
rcrb
rcrl
or
mov
ljmp
xchg
or
cmp
sub
xchg
inc
adc
loope
mov
test
lret
gs
cmp
loope
sbb
fldcw
push
repnz
es
push
pop
mov
push
lret
jns
ret
imul
clc
std
shl
incb
cs
fisubrs
push
adc
pop
gs
push
xchg
jbe
cmp
mov
orb
and
mov
scas
in
xor
data16
mov
jl
push
jmp
idivl
pop
sub
xchg
xchg
rorb
clc
addb
fsts
inc
pop
mov
out
ret
mulb
adc
loope
mov
rcrl
pop
fstpl
cmp
jp
subb
xor
jbe
or
and
sub
cmp
movsl
mov
sub
stc
pushf
ss
andl
pop
lock
inc
adc
fcomps
adc
dec
dec
cmpsl
rep
sti
movsl
mov
xor
cmp
jp
ds
out
cwtl
inc
pop
mov
xchg
cwtl
lea
dec
adc
sub
imul
cld
adc
inc
out
jb
inc
and
mov
inc
ss
cmp
adc
addr16
add
xor
scas
div
mov
ret
sub
add
imul
arpl
sub
adc
enter
movsl
sbb
test
add
sbb
fisubs
jmp
and
inc
insb
lock
aad
or
jmp
xlat
adc
push
xor
or
imul
cld
or
out
iret
ficomps
mov
hlt
imul
push
push
or
mov
cmpsl
ret
addr16
inc
lods
pop
lcall
adc
arpl
push
or
in
and
mov
add
add
popa
lods
pop
add
in
adc
loopne
sbb
cmp
hlt
dec
aad
jbe
sti
sbb
xchg
mov
mov
mov
pop
inc
xchg
test
lret
sti
scas
and
cmp
jle
mov
jmp
inc
push
pushf
test
pop
subb
mov
movsb
ficomps
push
out
sbb
adc
cld
daa
les
or
lods
fdivrp
push
lahf
jbe
push
mov
aam
outsb
call
hlt
jg
mov
and
adc
addr16
in
xor
aaa
push
loopne
std
in
xor
mov
in
jl
mov
pop
aas
in
shll
int
jne
dec
out
out
neg
std
movsb
ret
es
popf
sub
jl
pop
int
and
cmpsb
sbb
mov
or
js
cmc
les
fimull
movsl
iret
dec
pop
and
enter
addr16
shll
int
inc
imull
xchg
cmp
xor
and
mov
imull
pop
mov
lea
ljmp
lds
iret
clc
pushf
int
rcrb
sub
bound
pop
les
sbb
pushf
mov
cltd
pop
jmp
cmpl
add
and
xchg
ret
sbb
fcmovb
or
fistl
mov
cmp
test
idivb
mov
fwait
nop
sbb
xor
insl
int3
push
jp
dec
icebp
push
jae
jbe
dec
dec
and
cmp
adc
jnp
lcall
bnd
fstl
jl
jge
clc
jne
adc
lock
inc
push
mov
daa
pop
movsb
mov
sub
inc
jno
or
ljmp
push
sub
rol
xchg
pop
cmp
arpl
jge
pop
testb
jbe
mov
fcmove
mov
jnp
jae
dec
ror
addr16
adc
mov
adc
mov
sbb
and
int
jno
xor
xchg
lret
fsubrs
cld
inc
fldt
mov
jecxz
stc
repz
push
aam
xor
das
pusha
sbb
imul
and
jecxz
lret
xchg
pop
pop
dec
ljmp
mov
inc
jecxz
inc
sbbb
cmp
mov
or
negb
xchg
and
inc
out
dec
sbb
ret
stos
std
mov
or
int3
push
sub
mov
dec
jae
xchg
data16
push
adc
test
adc
mov
adc
out
test
lret
dec
mov
shl
cmp
cli
pop
sahf
insl
push
aam
add
dec
addr16
mov
sub
xor
xchg
inc
pop
mov
jnp
les
pop
std
cmp
out
cltd
and
inc
cltd
mov
inc
xchg
dec
cmpsl
shrl
sbb
mov
enter
or
mov
std
adc
cmp
out
mov
cmp
xor
xchg
ja
jno
xchg
inc
cmpsl
into
test
pop
inc
pop
or
dec
jp
push
inc
test
loopne
mov
push
xor
ror
xor
mov
loope
pop
pavgb
std
or
notb
pop
in
adc
testl
mov
cmp
sbb
mov
dec
fs
push
in
adcl
addr16
mov
xor
shlb
add
stos
adc
push
jmp
das
lods
push
mov
test
pop
jno
repz
ljmp
pop
lods
sbb
sub
cmp
mov
jecxz
inc
dec
fcoml
lret
cmpsb
pop
hlt
pop
pusha
dec
shll
jg
adc
jecxz
jns
sahf
or
lods
sub
les
mov
mov
mov
lahf
sti
mov
mov
aam
push
xchg
mov
shr
xor
sbb
add
negl
mov
mov
imul
imul
enter
xchg
pop
imul
test
inc
std
sbb
adc
enter
pop
out
shrb
aas
sub
je
into
or
insl
insl
cmp
add
iret
add
jno
std
cmp
mov
sbb
lret
insb
sbb
in
push
out
aas
call
and
pop
repz
xor
push
pop
shl
ja
mov
jp
pop
and
cmp
inc
fsts
scas
je
dec
lods
xchg
xchg
popf
cld
jge
je
xchg
add
inc
and
mov
imul
mov
push
cmpsl
jge
xor
pmaxub
push
popf
mov
loopne
jmp
aam
cmp
lock
icebp
test
out
repz
das
pop
gs
push
fnstcw
ds
in
loop
test
cltd
js
rcrb
cmp
xchg
sbb
add
aam
mov
outsl
scas
call
ret
cli
sahf
popf
js
fbld
mov
dec
lock
xchg
xchg
jmp
je
sub
cmp
adc
frstor
sbb
stos
push
and
lcall
mov
pop
lods
clc
mull
outsb
xchg
mov
pop
jle
dec
push
pop
adc
dec
inc
or
cmp
je
cmp
in
adc
in
sahf
outsl
or
nop
lcall
pop
lds
add
and
lds
sub
loope
inc
stos
sti
scas
inc
lock
and
dec
sahf
inc
dec
push
mov
in
adc
fs
mov
push
push
push
sbb
push
arpl
pop
out
in
popf
dec
jb
repnz
sub
fbld
in
fnsave
and
fistps
jae
repnz
lock
arpl
adc
fcompl
addr16
in
int3
subl
or
popa
out
add
daa
xor
dec
mov
aam
or
fwait
mov
jle
sub
mov
fwait
xor
push
mov
arpl
inc
dec
xchg
fisubrs
dec
lea
popf
ret
lret
mov
shll
out
push
and
sahf
lcall
bnd
rcrb
rdpmc
jg
jnp
sti
fisubl
mov
xchg
aas
in
mov
pop
dec
add
push
add
jmp
pusha
iret
cmp
stc
mov
mov
lahf
addr16
add
imul
jbe
pop
movsb
cs
pop
pop
mov
xor
mov
pop
jns
fdivrl
lods
lahf
popf
mov
aam
fldl
jg
jp
js
lods
push
dec
lret
dec
cltd
jae
sub
jo
xchg
repz
or
and
jae
js
inc
mov
movsb
lahf
jae
fistl
adc
pop
jl
cmpb
lcall
decb
test
loop
pusha
add
call
popf
int3
fildl
sub
cs
movsl
push
push
mov
out
jae
ljmp
jl
push
loop
jbe
dec
xlat
jmp
repz
xchg
fcmovb
xchg
xchg
negl
pushl
shl
fsub
xorl
fwait
adc
std
pushf
cwtl
add
cwtl
mov
out
or
xchg
adc
pushf
jne
xor
mov
pop
sti
or
push
jbe
inc
pop
mov
sti
mov
add
fimuls
dec
or
sub
and
test
outsb
cmpsb
movsb
push
sarb
fcmovbe
loop
fnstsw
sbb
out
pusha
rorl
or
jl
inc
and
es
add
popa
movsb
cmpsl
outsl
push
pop
dec
aas
mov
xchg
cmp
sub
fmuls
pusha
jnp
gs
pop
mov
sti
push
andl
sub
add
jecxz
stos
push
lcall
or
inc
das
das
pop
fidivs
push
mov
aas
inc
stc
lea
insb
lods
das
fnstenv
icebp
dec
jb
fcomps
int
stos
in
adc
shrl
inc
cmp
cmp
in
cmp
pushf
xlat
lea
mov
cmpsl
jo
mov
add
xor
xor
mov
pusha
ljmp
mov
dec
lret
std
cmpsl
sbb
pop
addr16
adcb
fadd
stos
mov
xchg
in
fimuls
xchg
add
stc
ja
cld
mov
sarl
jmp
sahf
or
mov
into
mov
sbb
jne
xor
movsb
out
cmp
push
xor
orb
hlt
sbbl
inc
insl
push
stos
notb
fidivrl
jns
hlt
iret
mov
push
ret
outsb
pop
adc
and
aaa
dec
and
xchg
popf
divb
pop
push
movsb
jle
hlt
scas
push
jno
mov
mov
cmpl
xchg
shlb
and
jle
jl
mov
pop
in
sub
pop
out
mov
pop
aas
mov
pop
xchg
negl
cmp
push
mov
ret
sub
pusha
movsl
inc
scas
imul
popl
pop
push
mov
push
adc
pop
xchg
enter
in
ja
clc
pop
mov
mov
ret
push
and
and
jle
ss
push
jge
mov
jb
sbb
cmpsl
pop
lahf
test
push
test
dec
sbb
fs
popa
fwait
iret
std
pop
out
xlat
and
sub
or
aam
jmp
cmpsl
shlb
loope
push
mov
pop
jmp
sahf
test
in
aaa
insl
scas
ret
clc
mov
ret
cmp
jo,pn
roll
mov
sarl
ljmp
pop
ret
sbb
sub
lods
sub
pop
movsl
aam
sbb
pmaxub
dec
xor
jbe
adc
cmc
xor
movsb
into
jne
xor
data16
ret
xor
mov
ds
out
pop
aam
imul
pop
fs
mov
lahf
ret
daa
and
mov
pop
inc
mov
xor
outsl
cmc
pushf
jno
mov
pushf
xor
icebp
jmp
push
popa
rclb
jo
push
mov
in
mov
fistpll
push
or
and
add
pop
mov
or
les
xor
ret
inc
scas
loop
loop
push
jne
lcall
jne
cmp
push
shrb
or
jne
add
mov
or
ret
push
mov
movsl
fstpt
test
add
decb
mov
add
arpl
dec
dec
adc
les
sbb
test
leave
arpl
nop
mov
cmpsb
mov
loop
sub
lret
mov
mov
roll
aas
fbld
or
ja
notl
xor
clc
call
fistps
es
cmpsl
inc
std
inc
lahf
ret
pusha
fwait
mov
stos
and
inc
sbb
sbb
xor
jg
adc
fnsave
cmp
shr
pop
and
dec
sub
pop
jmp
dec
xchg
cmpsl
aad
pop
inc
jl
test
jno
push
call
das
xchg
pop
shr
dec
and
push
jmp
push
mov
imul
fadds
mov
stos
pop
es
mov
jb
icebp
sahf
pop
out
idiv
sti
jno
fwait
loope
jae
je
mov
cmp
call
shrb
repz
dec
mov
and
imul
fcmovu
sbb
bound
push
jecxz
mov
mov
movsl
jne
pop
lods
sbb
jns
mov
mov
insb
ds
mov
int3
lret
inc
mov
aam
int3
sub
cmc
aas
sub
jl
sub
stc
inc
movsl
rcll
mov
lret
daa
das
adc
sub
xchg
jne
scas
hlt
rcrb
sti
iret
int
loop
mov
cmc
adc
outsl
xchg
mov
sub
arpl
pop
ds
pop
in
sub
and
pusha
imul
adc
sbb
mov
xchg
mov
movsb
lods
mov
push
fdivs
sbb
xchg
int
test
jmp
pushf
scas
hlt
mov
roll
lcall
mov
pop
fs
push
rcl
out
daa
adc
aaa
insb
call
xchg
shrb
cs
dec
xchg
leave
in
mov
mov
add
cwtl
stos
ds
shrl
mov
mov
in
enter
pop
icebp
int
mov
repz
inc
xchg
and
arpl
adc
dec
adc
call
mov
fistl
cltd
pop
into
dec
in
mov
mov
mov
ficompl
push
adc
shl
mov
lcall
dec
jne
cmc
test
mov
mov
rcr
add
sbb
iret
mov
cmp
ss
jo
iret
xchg
testb
mov
enter
inc
dec
mov
scas
xchg
stos
insb
push
or
inc
sub
lcall
lahf
addr16
out
lret
push
loope
loope
adc
pop
ffree
mov
adc
xor
mov
sub
cmp
pop
adc
cmp
fsubs
add
push
popa
jnp
stc
leave
inc
xchg
push
cmpsb
lods
jne
mov
fs
sub
subb
cli
mov
jno
in
sbb
fst
mov
lahf
mov
jl
inc
mov
xchg
inc
jl
or
out
pop
push
adc
mov
scas
push
pop
in
or
adc
push
jbe
pop
repz
out
aaa
pop
inc
adc
mov
mov
inc
sub
adc
out
mov
lea
lcall
or
arpl
out
mov
or
sub
dec
daa
add
mov
repz
adc
mov
aad
xchg
xor
shlb
or
leave
int
imul
sbbb
int3
mov
je
out
sbb
out
pusha
js
scas
mov
les
scas
mov
loope
push
loope
leave
push
push
jnp
push
in
imul
shrl
xchg
rclb
popf
lcall
cld
mov
lret
xchg
test
mov
outsl
inc
push
sbb
add
sbb
mov
imull
je
dec
inc
icebp
adc
fnstenv
xor
sbb
fistpll
popf
pop
pushf
mov
fwait
js
adc
cmp
inc
scas
adc
call
bsf
test
cmp
aaa
js
sbb
pop
sbb
cltd
adc
stos
ds
push
xchg
adc
lahf
push
ret
mov
jge
push
and
dec
cltd
dec
pop
outsl
mov
push
fdivr
repz
adc
jo
in
enter
js
mov
and
imull
inc
jbe
add
dec
lea
jnp
jns
popa
sbb
pop
adc
xor
imull
push
mov
cmp
sarb
push
insl
push
push
in
daa
mov
shr
jl
dec
sub
xchg
pop
imul
mov
testb
scas
xor
andl
add
or
movsl
push
mov
lock
clc
daa
jo
add
mov
fistl
push
cs
push
fbld
jecxz
addl
pop
and
js
pop
inc
addr16
xchg
test
lahf
mov
in
imul
cmp
pop
ret
pop
or
fwait
jae
xchg
fdivp
in
imul
xchg
ja,pn
push
push
stc
xchg
xor
inc
sbb
mov
outsl
cs
and
out
push
adc
fsubs
inc
inc
mov
outsb
and
f2xm1
dec
andl
or
sti
movsb
sub
dec
pop
movsl
shll
popf
adc
xchg
pushf
addr16
inc
sbb
cltd
and
icebp
les
cmp
lea
fimuls
push
push
push
mov
pop
xchg
mov
inc
test
popf
xlat
lods
cmpsb
pop
pop
xchg
cltd
mov
mov
test
pop
pop
push
inc
xchg
mov
test
adc
sbbl
push
add
pushl
imul
mov
daa
pop
add
or
repnz
jge
mov
shl
fsubrs
sbb
inc
xchg
nop
fstps
mov
lret
jle
aam
sbb
into
gs
mov
jo
cmc
jg
and
std
ret
sub
out
pop
push
loopne
ja
lods
add
les
adc
lahf
sbb
inc
into
pop
jge
cmpl
int3
in
jno
mov
nop
dec
out
mov
xor
cwtl
push
and
ds
testb
mov
ljmp
test
sbb
jg
push
inc
xchg
loope
stc
jae
fidivs
mov
pusha
jecxz
shrb
int3
testl
stos
lds
xchg
hlt
int
cli
xor
and
sbb
mov
add
lret
fsubrs
loopne
out
mov
add
shll
je
lret
jmp
jno
pop
xadd
ds
aam
dec
pushl
addr16
loop
sub
cmpsb
shr
out
std
or
adc
out
pop
xor
pop
clc
jmp
mov
popa
mov
arpl
cld
and
mov
mov
xchg
pop
es
sbb
sahf
push
dec
pslld
mov
mov
lds
xchg
fnstsw
sub
and
push
repz
mov
xchg
js
ljmp
int
mov
pusha
jecxz
ljmp
jl
xchg
les
cli
pop
fmul
iret
add
push
or
mov
clc
jnp
push
rolb
ret
or
sub
xchg
nop
pop
lea
fldcw
cmp
ds
push
mov
fidivrl
lahf
mov
mov
or
jmp
sub
xorl
outsb
movsl
pop
movsl
scas
adc
push
sbb
in
adc
jnp
mov
or
lods
inc
enter
insb
ljmp
test
jg
cli
mov
or
sbb
cld
outsl
mov
fs
add
adc
cltd
shlb
test
imul
mov
pop
and
stos
adc
pop
sub
jne
push
stc
pop
xchg
scas
je
mov
push
mov
cmp
xor
pop
sbb
mov
mov
sahf
cmpsl
xchg
les
cwtl
mov
dec
imul
add
rol
mov
lods
sub
mov
fisubrl
inc
dec
pop
es
mov
sbb
pop
mov
stc
adc
adc
test
push
fwait
and
xor
ss
adc
lods
xor
xchg
push
pop
adc
push
ret
xchg
mov
fs
adc
rclb
rorb
addr16
cmp
mov
cmp
scas
insb
push
into
dec
dec
push
xchg
incb
sub
lahf
inc
andl
xchg
push
in
call
cmp
sbb
adc
or
fildl
ljmp
lods
sbb
imul
mov
add
orb
fimuls
call
imul
pop
dec
mull
adc
mov
dec
fs
sbb
jl
pop
mov
push
mov
adc
cmp
cmp
pushf
ficomps
sahf
shrb
imul
add
dec
in
sbb
sahf
cs
push
inc
cmp
jno
mov
sub
mov
pop
inc
mov
inc
mov
cmp
push
push
arpl
ficomps
jmp
xor
inc
dec
enter
cmp
lea
inc
loope
pop
mov
mov
xchg
push
xor
adc
adc
sub
push
add
mov
push
enter
dec
lcall
daa
lods
mov
mov
in
push
out
adc
push
lcall
out
adc
lret
adc
adc
cltd
icebp
fisubl
jae
inc
adc
ss
xchg
in
clc
stc
sub
pop
mov
xchg
mov
lds
stos
bound
inc
push
adc
rolb
cli
cmpsb
aas
pop
inc
ret
inc
jo
cmp
aaa
dec
imul
scas
xor
mov
xchg
test
adc
test
imul
xlat
dec
sbb
dec
ja
cld
pusha
push
or
jmp
in
mov
into
loopne
xchg
cltd
int3
mov
jp
sbb
hlt
std
pop
iret
jae
inc
cwtl
sarb
jge
mov
sub
scas
or
and
sti
mov
lahf
add
fisubl
mov
xchg
stos
mov
hlt
mov
icebp
nop
or
xchg
cld
insl
inc
jmp
xchg
sti
rolb
push
je
push
icebp
outsb
add
cs
insb
jae
arpl
lods
push
push
pushf
rolb
cmc
loope
adc
fsubr
push
cmc
jle
ds
imul
sub
inc
add
cmp
push
dec
mov
lret
arpl
rcr
sub
jb
and
inc
adc
jns
mov
adc
cmpsl
repnz
fistpll
sub
xchg
dec
mov
data16
xor
mov
mov
pop
sbb
sti
push
mov
bndldx
fidivs
and
dec
sbb
rorb
inc
and
and
adc
dec
pop
outsl
stos
sub
das
int3
push
jno
mov
cmpsb
add
inc
andb
aad
push
mov
cmp
ss
imul
adc
ja
push
pop
pop
out
movb
add
dec
push
xchg
out
mov
addr16
insl
adc
mov
stc
mov
inc
sbb
ds
and
lods
je
inc
les
xchg
iret
sbb
push
xor
sbb
es
pusha
cmp
jmp
popf
xchg
push
push
jle
and
dec
mov
das
push
mov
push
mov
and
cwtl
sub
leave
daa
fwait
scas
sbb
dec
mov
pop
mov
and
dec
sti
cld
popf
enter
call
cmc
mov
enter
fcmovnb
or
negb
sbb
add
mov
cli
jmp
pop
subb
sti
mov
test
test
and
push
or
data16
adc
sbb
pushf
xor
test
cli
stos
test
xor
clc
ret
push
and
ds
shl
movsb
leave
testl
add
cmp
mov
fisttps
cli
dec
xor
cmp
test
ss
mov
mov
fiaddl
scas
jae
xchg
cmp
jae
iret
jno
push
adc
xchg
mov
or
mov
sub
xchg
dec
out
adc
push
sub
xchg
lcall
test
pop
xchg
jo
push
les
movsl
cltd
pusha
lahf
push
jmp
fsubl
jnp
ss
xor
ljmp
xor
out
ljmp
xor
push
out
xor
cmp
popf
daa
test
pop
icebp
jmp
jp
xor
mov
dec
jg
lcall
add
sub
cmpsb
push
movsl
and
subl
mov
jmp
mov
jmpw
sbb
cmp
insb
pop
leave
dec
enter
pop
dec
lock
enter
std
bound
fdivrs
lret
fwait
enter
add
insl
cmp
mov
pop
push
loopne
xchg
mov
loope
ljmp
xor
mov
inc
push
sarl
scas
xor
insb
pop
xchg
gs
jmp
sarb
lods
int3
and
xchg
repnz
sub
icebp
movsl
mov
and
adc
xlat
sarl
mov
xchg
inc
and
fimuls
iret
mov
sub
cmp
cmp
or
mov
push
sarl
ljmp
ret
out
mov
mov
ret
sbb
mov
mov
movsl
fcmovbe
mov
cmc
xor
out
cs
aaa
sub
jns
sbb
ljmp
loope
push
bound
mov
jnp
xchg
fs
mov
push
add
scas
pop
mov
push
xlat
push
and
clc
dec
mov
xlat
mov
mov
add
add
mov
jbe
sub
inc
iret
dec
cwtl
pop
xor
xchg
mov
in
fdivrp
jno
adc
mov
jmp
pop
rorb
xlat
xor
jecxz
pop
insl
out
mov
xlat
nop
push
push
sub
ja
test
jb
cltd
es
aam
test
or
push
pop
insl
mov
sub
fwait
xor
nop
jge
mov
pop
xor
out
andb
lods
loope
sbb
les
xchg
div
jge
data16
mov
xchg
dec
push
adc
pshufw
mov
mov
sbb
mov
leave
push
push
jl
ffree
sbb
lock
ret
ret
mov
pop
mov
pushf
rcl
pop
jno
pop
push
or
cmc
popf
push
cmpsb
aas
testl
dec
sub
cmpsb
mov
lea
cmp
mov
data16
push
aam
repz
or
ljmp
ja
mov
enter
xchg
jl
mov
mov
or
mov
cmp
jg
cmpsl
or
test
scas
out
cmp
add
ss
adc
add
jb
lds
mov
mov
push
xchg
inc
cmp
xchg
cmc
inc
ss
jno
jp
xor
leave
sub
mov
fistl
cmc
testb
xlat
dec
addr16
mov
sub
ss
test
cli
jl
sbbl
shll
mov
insb
ret
pusha
testb
lock
sbb
and
inc
xchg
or
aam
bound
nop
pop
adc
pusha
mov
mov
and
aam
mov
stos
fst
push
push
mov
lss
sub
push
inc
jo
popl
push
popf
inc
test
push
adc
loopne
mov
jecxz
cmp
pop
push
sbbb
jb
sbb
jge
inc
mov
jg
xor
imul
in
pop
push
push
pop
out
add
adc
mov
mov
push
xchg
std
fsts
dec
jmp
incb
xchg
push
test
mov
mov
fisttpl
icebp
or
sbb
pop
mov
cmp
lahf
pop
bound
push
jl
jl
mov
mov
jecxz
sub
aad
add
push
jo
mov
or
inc
data16
cmpsb
ljmp
std
in
dec
add
sub
idivl
or
das
lahf
inc
mov
adc
pop
push
imul
adc
dec
jmp
std
push
mov
add
or
or
push
fs
filds
pop
pop
inc
insb
sbb
sbb
jnp
xchg
push
or
es
xor
loope
repnz
adc
hlt
ret
arpl
iret
ja
jbe
push
mov
sub
lea
inc
scas
xchg
cmp
jge
popf
notl
insl
push
mov
cmp
push
mov
add
stos
loope
aaa
int
push
lds
or
jmp
sti
ljmp
and
xor
mov
mov
in
adc
pop
ss
sub
cmp
jns
gs
movsl
inc
in
mov
adc
or
inc
push
adcl
jp,pt
xchg
pop
fdivl
aam
lret
ret
lds
sub
lahf
adc
loop
aam
popa
mov
pop
mov
push
sbb
push
je
leave
push
push
test
jp
pop
xor
test
mov
pop
or
orl
sub
xor
jnp
lcall
shll
cmpsb
dec
mov
push
cmp
jo
mov
js
sbb
jecxz
xchg
jo
inc
push
mov
popa
imul
dec
jo
cmp
in
jbe
mov
pop
xor
xor
bound
movsl
inc
jns
pop
mov
push
in
and
mov
leave
pop
pop
xchg
push
xor
and
aad
cmp
pop
mov
dec
sbb
xchg
rcr
ds
pop
mov
pop
add
lret
xchg
push
loop
test
sahf
fnclex
ret
mov
mov
sbbb
or
jle
xchg
xor
mov
jne
in
cli
sbb
cmp
adc
lods
int3
fists
push
cwtl
cmp
push
inc
cmp
push
cmp
sub
xor
les
scas
mov
fdivp
cmp
cmp
jb
sahf
lods
insb
sarb
in
inc
enter
xchg
aaa
and
inc
repz
rcl
dec
pop
insl
aad
fnstsw
sub
mov
les
jns
aad
push
push
jl
dec
sbb
sub
inc
inc
int3
adc
pop
dec
mov
rcrl
rcr
ret
mov
lds
jge
sub
lods
jle
cld
pop
rorb
roll
mov
out
add
out
xor
cltd
jecxz
test
scas
test
xchg
cmp
sub
inc
lret
add
dec
sbb
jmp
ret
adc
repnz
jp
mov
fsubp
sbb
int
rclb
mov
and
mov
test
adc
ret
xchg
js
out
ffreep
cmc
xchg
stos
adc
dec
cli
ss
or
push
jl
mov
jmp
shrl
add
lods
pop
add
inc
pop
cmp
pop
sbb
jae
imul
xchg
nop
shrb
xchg
mov
pop
xor
jo
xchg
test
sti
adc
pushf
mov
xor
mov
mov
out
sbb
xor
mov
call
pop
pop
push
xor
adc
aas
fdivrs
xchg
add
std
hlt
sti
inc
push
out
cld
mov
mov
rcrl
jge
or
cli
icebp
mov
out
fdivs
mov
cltd
pop
shr
dec
fsubrs
or
imul
es
lea
aaa
and
adc
cmpsl
jns
lcall
jle
sub
cmp
jmp
or
sbb
xchg
cwtl
cmp
js
or
inc
fwait
jle
enter
push
fdivrl
gs
xabort
add
mov
sub
push
and
add
fnstcw
test
insb
mov
cmc
das
stos
pop
dec
test
in
inc
icebp
pop
in
xchg
xchg
pop
mov
lahf
orl
add
ret
subl
imul
adc
test
cmp
loope
jecxz
add
das
add
icebp
sbb
sub
test
mov
mov
mov
int3
stc
bound
mov
jmp
inc
test
xchg
xchg
mov
nop
test
push
adc
out
push
add
loop
sbb
jmp
scas
dec
jmp
iret
repz
add
xchg
test
rcll
dec
mov
popa
imul
cmp
mov
xchg
xchg
or
or
and
pop
add
xchg
inc
daa
fwait
cwtl
cmp
cli
adc
movsl
test
cmpsb
fnstcw
push
dec
enter
fxch
pop
adc
mov
lahf
xor
in
aam
das
and
pop
push
adc
pop
popa
cmp
add
lret
add
addr16
testb
sub
rcll
les
cmp
fs
sub
in
add
aad
mov
lcall
mov
xchg
pop
jno
push
push
inc
xchg
adc
jl
xchg
sbb
dec
out
aad
mov
mov
add
and
fists
test
sbb
pop
xchg
movsl
inc
arpl
ljmp
mov
das
xchg
leave
sub
fucom
pop
jbe
mov
inc
xor
ja
push
mov
inc
int3
pop
lods
adc
fidivs
and
xchg
sub
into
enter
dec
icebp
inc
les
push
push
cmp
pop
add
notl
push
mov
sub
in
xchg
movsb
jne
cld
or
ja
loopne
pop
sbb
sti
out
popf
jl
dec
or
xchg
mov
dec
iret
cmp
and
sbb
adc
icebp
jecxz
mov
mov
xor
and
jno
fcomps
call
rcl
cs
xchg
in
mov
push
jl
push
or
mov
and
sub
dec
or
push
fisttpl
inc
cs
sub
push
xchg
rcr
xchg
gs
inc
jbe
sub
xor
mov
leave
dec
ret
push
push
inc
scas
or
mov
mov
in
imulb
div
sarb
or
test
pop
mov
add
xchg
shlb
test
xchg
sbb
daa
push
add
jne
rdmsr
out
test
shrl
mov
push
push
jmp
xor
jecxz
push
jmp
push
mov
pusha
cld
cmp
fmuls
pop
pop
jbe
adc
fimull
lret
adc
in
push
lock
cmpsl
adc
inc
scas
mov
add
mov
add
out
or
mov
xchg
bts
or
sbb
daa
mov
jbe
cwtl
lods
jmp
cmpsl
sbb
cmc
inc
out
push
std
xchg
pop
push
jecxz
out
xor
xor
mov
ficomps
outsl
fwait
cmp
daa
sbb
or
mov
les
outsl
outsl
pop
sbb
xchg
out
aad
xor
icebp
push
sub
xlat
push
or
inc
inc
jl
aad
or
pop
mov
fnstenv
loop
adc
clc
fs
dec
xchg
mov
or
lcall
jge
inc
jne
fcomi
mov
outsb
fildll
cmpsl
pusha
cmpsl
push
inc
jns
or
jecxz
jb
shl
mov
pop
mov
push
cmp
stos
js
inc
adc
psrld
cmp
push
rolb
inc
sbb
sub
scas
jl
mov
test
mov
lahf
or
scas
pop
cli
sub
push
jns
and
push
mulb
mov
mov
lcall
adc
scas
add
loopne
push
mov
adc
push
pop
adc
loop
out
push
sahf
jp
les
xchg
push
out
xor
push
andb
jl
cmp
ret
idivl
dec
loop
push
sbb
and
sar
movsb
jne
fwait
inc
adc
das
and
sub
mov
jo
popa
outsb
cmp
repnz
into
pop
mov
jecxz
inc
cmp
jns
add
xchg
mov
fisttps
push
daa
or
add
cltd
add
in
jl
dec
out
add
mov
dec
iret
shll
xor
pop
leave
pop
lcall
xchg
inc
pushf
mov
sbb
xor
pop
dec
loope
mov
mov
push
ret
inc
repnz
or
jmp
adc
and
lret
and
xlat
rolb
sarl
insl
in
and
inc
pop
lods
mov
fsub
add
out
pushf
imul
out
adc
je
xchg
hlt
sub
rolb
fnsave
jbe
dec
inc
push
andl
scas
lods
jl
mov
js
insl
in
and
shlb
fcmovnu
fxam
pop
iret
lea
dec
dec
pushf
mov
cmpsb
in
xor
insb
or
leave
xor
xor
push
popf
pop
mov
adc
aas
popf
mov
icebp
dec
xor
lock
icebp
sub
pop
xlat
add
cmp
xor
aam
mov
inc
push
mov
push
ret
mov
adc
xor
icebp
xchg
ret
push
push
mov
testb
int3
adc
pop
into
neg
clc
icebp
push
std
cli
mov
xlat
dec
cmpsl
int3
xor
daa
mov
pop
push
fdivrl
scas
xchg
add
pop
ss
push
xchg
push
movsb
outsl
dec
mov
sub
mov
imull
movsl
xor
sub
ds
push
dec
sbb
xor
jecxz
mov
arpl
xor
pop
test
decb
mov
sahf
outsl
insb
sbb
movups
mov
ss
mov
jo
dec
stos
ror
movsb
aas
mov
imul
aam
inc
mov
pop
xor
mov
rclb
mov
subl
call
add
inc
shll
or
xchg
jno
mov
push
inc
push
int3
ret
fnstsw
mov
cmpsb
push
rclb
pop
jecxz
mov
mov
dec
insb
idivb
jo
repz
push
imul
dec
into
push
and
dec
test
int3
leave
add
cmp
in
negl
jmp
pop
shr
loope
iret
int
nop
movsl
mov
xchg
icebp
push
cmpsb
mov
cmpsl
ds
pop
mov
add
lcall
fmull
or
inc
jo
inc
mov
adc
pop
aas
and
idiv
mov
imul
xchg
pop
insb
jecxz
mov
mov
lea
ljmp
bound
xchg
mov
add
pushf
sbb
sbb
gs
inc
sbb
inc
sbb
ss
in
lods
or
lret
dec
fisubrs
mov
lcall
imul
inc
mov
inc
push
xchg
xchg
addr16
movsl
imul
repnz
popf
mov
add
xchg
dec
outsb
out
lcall
pop
jns
push
push
push
sub
out
adc
mov
sub
mov
jecxz
jge
outsb
call
adc
test
lcall
xchg
and
lahf
sarl
dec
xchg
cld
fdivr
test
out
in
lods
push
inc
leave
incl
lods
xor
cwtl
scas
insb
or
push
sahf
aam
rolb
mov
push
cmp
dec
call
movsl
pop
pop
jae
fidivrl
sbb
dec
xchg
jg
rcll
sub
jbe
sahf
dec
or
stc
sub
push
adc
int3
mov
jg
xlat
jecxz
ja
xchg
or
std
test
lcall
push
inc
mov
stc
jns
sub
mov
loope
mov
int
shl
mov
jg
call
test
stos
ret
xchg
and
je
sahf
cli
out
dec
xor
rcl
pushl
test
push
dec
dec
lods
sub
hlt
clc
loope
test
sub
push
cmp
sarl
jp
push
adcb
inc
repz
aam
in
in
outsl
push
adc
icebp
push
mov
psraw
cmp
in
mov
dec
in
js
push
push
jnp
adc
mov
test
xor
xchg
pop
and
and
sbb
mov
mov
xor
call
xchg
or
ret
pusha
iret
repz
shll
cmp
or
out
mov
out
cmp
icebp
jecxz
pop
cmp
fs
int
lcall
test
cs
cmp
insb
repz
outsl
dec
push
adc
inc
clc
pushf
sub
test
insb
jge
cmp
mov
les
inc
xchg
mov
push
adc
decb
pop
dec
aas
cli
push
and
pop
arpl
icebp
add
lret
adc
dec
mov
fidivrl
enter
xchg
outsb
fldpi
cltd
mov
sahf
divb
mov
addr16
insb
iret
es
jbe
mov
xchg
mov
daa
push
xchg
into
jge
and
push
int3
xor
fsts
dec
inc
shlw
cmp
cmpl
bound
sarb
push
pop
cmc
push
stos
xchg
mov
insb
jns
cmpsb
aam
scas
fmull
mov
insb
jns
mov
arpl
push
stos
pop
mov
cmpsb
pop
lahf
popa
push
and
inc
lret
sub
int
mov
fsubrs
es
pop
popf
or
loopne
les
push
out
push
lret
and
cmpsl
cli
and
xor
ja
into
data16
cmc
xchg
jnp
out
mov
cs
call
imul
hlt
jae
mov
or
clc
xchg
aam
xchg
shlb
xchg
aam
popa
stos
addr16
cmpsl
dec
push
ds
jns
jmp
push
data16
into
in
pop
adc
sub
repnz
rolb
cmp
lcall
into
adc
push
xlat
push
dec
cmp
add
imul
scas
mov
add
cli
sub
loopne
mov
stos
in
jecxz
aas
fdiv
dec
rcll
sarb
pop
cli
sti
fistpl
mov
pusha
mov
lock
dec
es
and
mov
ret
dec
je
test
jp
jg
outsl
mov
add
hlt
xchg
cmp
rcr
mov
aam
adc
add
in
push
mov
cmp
setae
notl
pop
or
outsb
shrl
and
adc
push
outsl
pop
and
rcrl
fsubr
adc
stc
pushf
pusha
mull
fdiv
push
shrb
ret
xorl
mov
scas
pop
xor
imul
in
ret
js
lea
sbb
and
aad
add
nop
xor
lds
xor
push
popf
movsl
in
int
inc
incl
in
arpl
inc
fucomip
pop
or
mov
leave
adc
and
cmp
movsb
incb
adc
scas
out
sarb
repz
jne
push
push
in
nop
xor
dec
pop
aam
jmp
lret
adc
popw
in
call
push
push
sarl
ffreep
dec
inc
scas
insb
push
push
sbb
xor
mov
jecxz
mov
sbb
pop
into
imul
ret
jae
into
cmpsb
mov
insl
mov
and
mov
adc
lea
pmulhuw
cli
movsl
sub
and
pop
mov
rcl
in
and
jo
jnp
add
icebp
xor
sub
adc
jmp
add
hlt
aaa
clc
loope
add
scas
lea
mov
sahf
push
lret
dec
fwait
adc
xchg
fwait
push
lret
mov
push
adc
cltd
movsl
sbb
push
add
add
mov
jmp
add
inc
ja
cmp
gs
adc
pop
lret
or
jge
xchg
pop
loop
je
scas
dec
outsb
inc
in
shl
outsb
mov
push
nop
test
xchg
add
cld
repz
adc
cmpl
ret
mov
ja
sbb
sub
mov
pop
sub
dec
sahf
xchg
andb
hlt
loop
inc
insb
cltd
movl
push
pop
or
xchg
sub
pop
jno
add
mov
out
cmp
sub
cmp
cltd
cli
mov
lret
dec
pop
mov
test
sbb
lahf
jg
mov
push
xchg
mov
sti
or
mov
sub
stc
out
iret
in
mov
inc
rolb
repnz
call
xchg
mov
add
adc
add
mov
mov
jl
add
jp
dec
adc
insl
imul
into
outsl
into
sbb
pop
or
cmp
or
in
or
jb
test
int3
dec
loopne
jne
pop
pop
stos
jne
mov
lds
loopne
lcall
loope
add
jbe
je
sub
add
cs
dec
add
repnz
lahf
mov
bswap
dec
push
dec
push
stos
mov
fcmovnb
or
bnd
fnstsw
test
or
jae
icebp
loop
cmpsl
fs
jge
in
jbe
test
imul
aas
cmp
jno
mov
sbb
add
test
popa
ljmp
mov
iret
adc
xor
imul
shl
dec
pushf
std
mov
jl
fistpll
mov
popa
inc
fwait
adc
das
sbb
push
pop
xor
jns
cwtl
sbb
loop
cli
rorb
arpl
adc
add
cmp
pop
xor
ret
adc
push
les
jge
inc
ds
cmp
add
in
movsl
xchg
mov
dec
loopne
popa
lret
mov
fmul
mov
rorb
lea
sar
jp
fsubp
fs
mov
or
mov
xchg
pop
bnd
idivl
mov
cltd
or
or
dec
ds
test
lcall
dec
jle
ret
mov
hlt
fldenv
inc
push
inc
pop
push
push
mov
mov
fxtract
cmpl
loope
test
sar
in
js
mov
pop
ret
popf
jnp
in
xlat
test
inc
sub
add
jge
pop
xchg
inc
lods
lods
xor
inc
dec
arpl
xchg
xor
lcall
dec
adc
xchg
movsb
mov
test
test
ljmp
ret
push
adc
in
push
cltd
nop
sbb
cmpsl
test
cwtl
or
jg
jb
adcb
pusha
dec
jecxz
mov
pushf
imul
movsb
out
roll
adc
out
cli
dec
sahf
ljmp
sbb
dec
in
pushf
push
mov
into
repz
pusha
fimuls
aaa
jae
pop
test
and
subb
pop
xchg
inc
ljmp
imul
sbb
loope
xchg
inc
jg
xchg
push
mov
cwtl
pop
or
cmp
inc
xor
outsb
aas
cmp
cmp
cmpsl
cmp
rorb
loop
push
pop
out
jg
fwait
stc
cmp
xchg
in
adc
pushf
push
jns
mov
shrb
mov
sub
mov
pop
imul
cmpsb
and
dec
enter
out
jo
sub
push
or
sbb
add
pushf
stc
aad
add
mov
cltd
cltd
inc
sub
pop
push
out
xchg
hlt
mov
add
testl
fnop
or
pop
mov
adc
lcall
push
dec
js
pop
add
cmp
jns
flds
daa
shll
sub
dec
mov
and
int
mov
stos
and
dec
in
lahf
or
mov
ret
adc
mov
mov
mulb
int3
insb
das
push
add
ficomps
jmp
sub
ss
sbb
xor
mov
loope
mov
lods
mov
jmp
movsl
inc
hlt
fldcw
pop
aam
or
pop
lahf
xor
ja
iret
push
mov
jecxz
sub
insb
inc
imul
int3
aas
mov
and
fcmovnbe
sub
and
mov
push
outsl
xchg
jo
hlt
mov
adc
repz
add
outsb
lds
adc
je
loop
rcrl
aas
inc
sarb
outsb
mov
fdivl
in
pop
push
lds
and
adc
rorl
shlb
push
pop
into
mov
push
sti
adc
adc
in
pop
insb
sbbb
movsl
push
push
mov
xchg
mov
xchg
mov
aaa
xchg
mov
orb
mov
mov
lock
mov
inc
inc
cmp
push
xchg
es
jle
aaa
out
lods
xor
xor
in
mov
push
sub
inc
arpl
jle
xor
ret
add
lea
jmp
sub
sbb
out
lea
pop
out
outsb
lds
push
out
mov
scas
add
dec
jle
pop
xor
sub
adc
pop
repz
adc
lcall
jae
imul
jb
mov
or
std
fsts
cmpl
mov
mov
insl
loop
nop
lea
lret
push
mov
push
test
lds
and
outsb
repz
dec
and
insl
test
insb
sahf
out
sahf
cmp
sbb
ret
push
push
mov
call
cmp
mov
or
test
lods
sub
push
dec
jecxz
aam
subl
mov
xorb
in
cli
lret
mov
push
cmp
push
je
das
push
inc
dec
push
xor
je
adc
jnp
mov
push
jns
xor
add
fisubl
add
jae
jbe
bound
movsb
mov
push
stos
pop
cmpb
pop
cmp
es
or
iret
jnp
mov
stc
jl
dec
arpl
ret
xor
test
nop
jo
pop
sti
std
mov
add
xchg
dec
dec
call
add
out
or
and
outsb
subb
jecxz
xor
mov
lcall
loope
lret
cmpsb
mov
or
lahf
in
pop
xchg
dec
inc
rcll
adc
arpl
inc
cmc
sarb
enter
out
es
jb
aaa
in
mov
insb
popf
xchg
rcrl
jge
hlt
sub
xchg
xchg
or
or
fdivr
add
xchg
movsb
adc
add
and
idiv
sti
and
inc
cli
jle
cs
push
movsl
inc
imulb
pop
fiaddl
sub
aaa
sbb
mov
mov
lret
adc
fldl
enter
xchg
or
cld
into
mov
mov
into
jne
mov
cmp
pop
cwtl
std
jne
or
dec
adc
test
dec
and
fs
les
cli
in
adc
mov
and
je
lock
sbb
daa
xchg
ret
sbb
sub
mov
jne
jne
lea
loop
shll
in
xchg
inc
xor
xlat
nop
sti
add
lods
repnz
das
lea
cld
xor
jle
push
jbe
sbb
sub
popf
push
stos
sub
ds
lds
hlt
cltd
mov
das
mov
jae
pop
mov
mov
sbb
arpl
lret
icebp
push
lods
or
test
sub
adc
lea
cwtl
scas
and
xchg
shl
mov
xor
ss
scas
addr16
int3
mov
sbb
pop
test
jcxz
push
iret
test
fisubrl
mov
les
popf
mov
dec
and
jo
mov
mov
fsubrl
add
nop
push
in
and
and
aam
adc
out
mov
dec
orl
jle
aam
push
mov
fisttps
dec
inc
xchg
pop
and
stc
fldcw
pushf
fwait
mov
lea
sub
sub
sbb
fdivl
xchg
movsl
js
mov
xchg
mov
mov
jge
sbb
aam
add
scas
mov
jno
stc
add
push
movsb
sahf
add
mov
xor
aas
les
leave
jo
repz
loopne
push
movsb
aaa
push
mov
push
sub
adc
add
xor
clc
movsb
mov
ss
add
push
mov
arpl
fs
stc
lods
adc
repnz
repz
enter
inc
insb
push
sbb
mov
or
mov
sub
sahf
lret
xchg
cmc
mov
and
pop
lret
mov
out
and
ret
stos
push
sbb
mov
pushf
movsl
arpl
fs
pushf
movsl
inc
call
fisubl
movsl
out
pop
in
mov
gs
mov
sub
sbb
pop
sbb
mov
adc
addb
addr16
xor
ds
jns
repz
jo
leave
test
and
rdpmc
jg
dec
bound
xchg
inc
push
jae
xor
in
mov
dec
sahf
and
lds
xchg
scas
add
aas
shrl
inc
mov
lods
push
movsb
out
test
push
daa
enter
push
sbb
stos
mov
addr16
cwtl
and
fcompl
lea
bound
fiaddl
mov
mov
in
adc
les
lahf
in
cmp
pop
xor
hlt
test
js
jge
adc
sub
ret
sti
dec
loop
mov
lret
int
fwait
jo
dec
mov
sar
cld
push
sti
addl
lret
lcall
pop
sub
xor
mov
cmc
pushf
and
or
cmp
or
adcl
insb
jns
mov
cli
or
jnp
inc
scas
inc
mov
inc
sbb
lock
in
push
xchg
sarb
pop
mov
mov
ljmp
test
scas
adcl
push
add
and
sub
push
cmpl
lahf
sti
sahf
mov
scas
sbb
xor
in
xor
cmp
push
cmp
mov
movsb
xchg
or
movsb
dec
push
xchg
pop
fmull
mov
mov
in
fildl
nop
inc
dec
outsl
mov
in
imul
in
addr16
xlat
je
mov
in
add
jge
mov
out
sub
and
stos
adc
dec
and
std
popf
popa
stc
cmpsl
pusha
fwait
xchg
mov
fwait
ret
mov
int
mov
cmp
fdiv
mov
xor
mov
mov
cli
xor
scas
vmread
inc
movq
cmp
mov
xchg
shll
jge
cli
les
mov
js
cld
cmp
pop
stos
jmp
rcll
leave
lods
cmc
call
pop
or
in
push
xchg
mov
mov
mov
pop
shlb
cli
mov
fisttpl
sub
repz
jbe
xor
add
pop
out
clc
jmp
in
or
ret
adc
js
xor
sbb
sti
add
mov
xor
sti
idivb
rcrl
dec
push
and
jmp
pushf
jg
adc
pop
rcrl
cmp
push
or
std
inc
ss
push
test
mov
jecxz
mov
popf
push
sub
insb
or
add
ret
mov
nop
ret
and
pop
add
loop
push
lcall
pop
push
jg
outsb
mov
fmul
mov
jno
out
cmp
into
lods
push
fcmovb
gs
push
xchg
cli
mov
aam
fstl
inc
and
das
popf
cmpsb
mov
pop
divb
shrl
adc
cmc
cli
in
into
dec
jnp
mov
popa
ds
nop
fwait
int
mov
cmp
scas
and
adc
cmp
push
loop
loopne
lods
jl
stc
bound
mov
pop
out
dec
cmp
test
fisubrs
sbb
les
daa
cli
xor
cltd
sahf
fwait
xor
in
pop
lea
mov
dec
idiv
adc
bound
or
out
mov
and
add
cmp
add
bound
add
xchg
dec
dec
add
or
notb
in
adc
shll
inc
jae
rorl
push
inc
inc
xchg
cmp
mov
je
jnp
xchg
add
pop
cmp
sbbb
jne
sub
inc
xorb
and
mov
hlt
inc
jo
mov
add
xor
mov
mov
mov
jnp
and
jb
sub
cmp
or
xchg
sub
insl
sti
pushf
push
and
add
cmp
and
addr16
inc
dec
dec
mov
xchg
mov
dec
sub
ret
hlt
fstps
jno
jmp
fwait
scas
mov
mov
push
adc
fiaddl
fs
xor
js
in
push
bound
xchg
jo
int3
stc
out
jne
lods
mov
add
jmp
clc
or
mov
arpl
imul
and
sti
lea
cmp
pop
lret
pop
leave
ret
dec
inc
sbb
cs
mov
xchg
mov
adc
push
jnp
int
not
fs
cmp
sbb
test
jg
rcrl
lret
movsl
cmovp
les
sub
jg
sub
popa
shlb
data16
sahf
bnd
insb
test
add
dec
jle
cmp
out
in
fwait
or
movsl
xor
add
dec
lds
inc
negb
add
mov
sbb
inc
and
inc
lock
adc
mov
mov
ret
xchg
xchg
sbb
xor
out
dec
sbb
sub
fcomip
sub
cmp
sub
lahf
cli
inc
jmp
or
call
std
mov
push
xor
and
outsb
cmp
and
stos
sbb
dec
xor
push
xchg
pop
mov
xor
mov
ljmp
rcrl
lcall
add
sub
cmc
cmp
js
jns
pop
jns
divl
loop
jmp
pop
and
pop
iret
cmp
sub
xor
int3
push
shrl
xor
sub
mov
in
fisubrl
push
lods
lcall
test
push
push
sub
sbb
jecxz
xchg
inc
pop
dec
jp
loop
push
hlt
push
pusha
test
shrl
clc
idivl
pop
roll
xchg
pop
mov
roll
arpl
movsl
cmp
or
icebp
ret
mov
jmp
xor
fmuls
mov
repz
test
and
mov
cmp
call
sub
jae
dec
loop
pusha
jp
andl
mov
xor
add
ret
mov
mov
dec
repnz
sbb
add
and
fildll
adc
xchg
flds
inc
mov
fwait
inc
or
push
leave
push
lds
stos
add
cmp
add
int3
add
xchg
mov
xlat
cmpsl
mov
js
jmp
inc
xchg
fs
out
cwtl
add
paddsw
mov
pop
cmpsl
out
or
scas
mov
mov
inc
pop
idivb
leave
xchg
jb
jmp
repnz
sub
xor
in
inc
imul
mov
dec
in
push
bnd
mov
cwtl
frstor
pop
popf
jmp
lock
xchg
push
mov
fcmovne
jp
sti
or
in
dec
call
mov
sub
or
adc
mov
sub
sbb
cmpsb
idiv
lock
in
mov
fildl
xchg
inc
inc
in
repz
jno
pop
ja
mov
dec
test
loope
push
inc
inc
pop
imul
xor
cmc
mov
sbb
sbb
jo
hlt
adc
sub
mov
mov
mov
dec
mov
xor
int3
inc
aas
or
xor
adc
xchg
dec
mov
je
stc
jmp
rolb
sbb
add
mov
call
mov
loop
lret
iret
pop
rcrb
sbb
sbb
jae
inc
ds
mov
jae
mov
sti
icebp
xchg
mov
mov
stos
pop
sub
je
dec
push
notb
jb
rorb
mov
in
lret
fldt
outsb
shrl
dec
or
in
cmp
into
xlat
jp
rolb
pop
lahf
pop
imul
jl
adc
cli
mov
jns
jns
or
jmp
pop
adc
and
jno
sahf
test
xchg
imul
out
call
cmpsb
bound
stc
jge
ret
pop
fcoms
inc
jp
insl
out
cmpsb
mov
cltd
out
leave
int
dec
sbb
aad
jae
dec
mov
sbbl
mov
mov
pusha
push
daa
jns
pop
addr16
dec
outsl
jno
push
and
cli
sub
cmp
sub
cmpsb
xchg
mov
test
lret
add
frstor
mov
pusha
sbb
dec
mov
push
dec
xchg
or
aaa
mov
sbb
lods
push
scas
xchg
icebp
icebp
xor
mov
push
pop
mov
or
or
test
pop
jne
push
inc
mov
jae
push
xor
outsl
sbb
jb
xor
xchg
addb
push
dec
jp
cmp
xchg
aam
dec
decl
in
push
cli
jno
stos
xchg
inc
ss
sarl
popa
push
xchg
test
xor
movsl
xchg
mov
stos
lods
fsubl
jp
clc
pushf
rol
add
xor
sbb
hlt
cwtl
stos
mov
xchg
mov
sub
mov
aas
fisttpl
ljmp
mov
data16
cli
pop
fisubl
outsl
bound
pop
or
out
jecxz
cld
sbb
add
xor
mov
adc
loopne,pn
dec
dec
into
or
xchg
xor
jle
aas
jb
adc
adc
lahf
xchg
push
mov
or
mov
inc
sbb
push
mov
in
sahf
adc
stc
aaa
aad
mov
loopne
aas
test
push
pop
int3
xchg
movsl
mov
push
inc
aad
pop
add
ds
int3
test
or
ss
test
mov
jo
loopne
dec
incl
sub
out
test
lock
aam
xor
inc
mov
pop
or
aaa
pop
les
or
in
mov
jle
enter
sbbl
enter
adc
and
dec
outsb
mov
push
mov
movsb
mov
cmp
stc
mov
out
mov
mov
or
insl
aas
push
int
arpl
lock
movsb
sub
scas
jns
enter
push
xor
pop
retw
jmpw
cmp
lahf
rorl
sbb
in
add
lock
lds
sahf
fmuls
out
adc
nop
mov
push
lcall
pop
jb
dec
fld
fwait
cmp
jg
and
iret
push
xlat
gs
cmp
test
daa
mov
lds
jbe
xor
push
js
jge
outsb
aas
shrb
mov
sbb
mov
decb
mov
imul
xor
repnz
aas
mov
mov
mov
pop
clc
daa
sub
test
xchg
adc
sti
adc
ret
imul
jb
filds
cli
popa
subb
and
mov
out
test
jb
loop
sub
sub
mov
stos
test
push
fcoms
or
adc
outsb
sti
mov
cmp
mov
xchg
aaa
lods
jle
dec
or
cmc
test
test
lods
inc
icebp
push
pushf
dec
sub
add
fildll
push
mov
movb
arpl
cmc
dec
push
push
push
inc
lcall
and
sbb
loope
jecxz
ret
in
cli
xlat
push
gs
pop
js
dec
loope
adc
and
stos
xchg
cmpsl
mov
pop
cmc
jne
lock
push
cs
push
fisttps
cmpsl
lock
mov
dec
sbb
cli
push
test
push
mov
or
jb
pop
xchg
cmc
sbb
xorl
lcall
jge
push
test
lods
imul
jl
lods
sub
orb
arpl
rcpps
mov
xor
or
add
mov
pop
mov
mov
pop
mov
enter
fsts
scas
insl
adc
and
inc
dec
aad
pusha
pushf
or
fisubl
inc
mov
ds
sahf
sar
gs
in
push
inc
inc
lcall
xlat
lahf
sub
inc
push
repz
mov
inc
push
inc
jne
sub
dec
mov
pop
mov
or
call
pop
fistl
push
xor
and
pop
insl
sub
xchg
xchg
out
dec
fsub
addr16
and
mov
push
inc
jle
mov
int
out
aam
add
loopne
push
mov
rorb
and
xor
jmp
clc
sbb
jmp
adcb
aad
push
lcall
lods
lods
dec
inc
test
lock
test
xchg
loopne
pusha
outsb
sbb
insb
int
ss
jg
mov
add
mov
mov
imul
and
fisubl
mov
xchg
faddl
jle
pop
jecxz
mov
pop
fidivs
movsl
icebp
ret
lods
pop
mov
xchg
rcr
in
mov
ja
push
mov
dec
ret
stos
mov
pop
push
adc
mov
ljmp
adc
lcall
push
mov
or
shlb
pop
imul
mov
push
lret
int
icebp
fnstenv
or
aad
pusha
mov
test
add
lahf
sub
loop
pop
cld
xor
test
cmp
mov
div
or
jmp
scas
pop
push
insl
test
mov
movsb
pop
lcall
inc
adc
jne
xlat
loopne
shl
aad
inc
jecxz
and
mov
insb
adc
cmp
xor
les
xchg
add
sbb
into
add
lcall
loopne
lahf
data16
stos
sarb
mov
xor
inc
add
mov
mov
lahf
movsl
mov
adc
test
roll
cmp
jns
movsb
xchg
loop
mov
adc
iret
and
add
int
mov
xchg
push
pop
loop
and
ret
fldl
cltd
mov
mov
fiadds
xchg
jb
add
dec
xchg
pushf
nop
cmpb
repz
jecxz
test
into
insb
repnz
scas
subb
lods
xor
mov
stos
mov
enter
fdivs
mov
or
mov
movsb
adc
movsl
in
sbb
push
das
push
lods
es
cli
aam
scas
sbb
adc
iret
xor
sahf
adc
mov
jle
imul
popa
cmp
or
movsl
pushf
cmp
sbb
imul
xor
adc
iret
dec
pop
xchg
pop
pop
and
aam
add
xlat
dec
jle
dec
add
xor
dec
mov
cmpsl
jecxz
lea
out
sub
fiadds
or
lds
fcmove
sarb
pop
mov
cmp
mov
push
jno
mov
push
sub
fwait
js
sub
mov
ljmp
in
jns
mov
push
fwait
lret
int
fstpt
adc
jno
cmp
or
repz
dec
cli
push
outsb
dec
pop
ja
repz
dec
fists
ffree
cmp
test
push
jo
fdivrl
cs
neg
aam
adc
imul
mulb
jge
mov
data16
dec
int3
cmp
xor
inc
sub
test
stc
frstor
fsts
repnz
pop
call
inc
add
data16
sbb
jle
movsb
int3
xchg
aas
orl
stos
and
ss
jo
lahf
mov
iret
hlt
adc
sub
lea
push
push
clc
push
add
stc
add
sar
aas
xchg
sahf
dec
jae
adc
jbe
lret
lret
lods
call
add
inc
inc
js
mov
shl
jecxz
das
subl
stos
and
xchg
cmovp
pop
repz
imul
jmp
xor
inc
inc
xchg
pop
mov
push
fdivl
inc
js
in
or
mov
mov
cmp
cmp
clc
or
icebp
jp
push
std
mov
add
insl
daa
js
lds
loop
or
js
mov
xchg
call
or
repz
mov
jl
mov
push
xor
movsb
pop
or
jnp
push
fs
jne
hlt
and
outsb
mov
push
roll
add
and
addr16
fstp
jae
scas
or
loop
or
loope
mov
scas
push
jle
imul
mov
mov
fadd
mov
mov
out
or
imul
push
jbe
mov
or
inc
cmp
ret
push
in
jns
mov
and
das
jo
jp
out
orl
inc
adc
xchg
jle
fistps
test
inc
mov
mov
jo
or
mov
inc
orb
or
xchg
call
xchg
daa
cmp
xlat
push
shlb
enter
cmp
sbb
movsl
adc
mov
xlat
jne
mov
out
mov
push
cmp
mov
xchg
popf
sbb
fwait
dec
cmp
cmpsb
adc
or
or
dec
fwait
lods
iret
or
lods
in
xor
cmp
fwait
sub
adcl
iret
and
or
xchg
and
mov
movsb
fld
jle
and
jbe
mov
ss
xor
inc
push
pop
into
xchg
sub
cli
clc
lea
shr
addb
sub
mov
cmpsl
xlat
or
jmp
push
pop
dec
lret
imul
aad
mov
cmp
pop
stos
xor
xchg
call
scas
push
dec
cmp
sbb
ret
cld
cmc
push
adc
lahf
mov
and
mov
pop
mov
sub
movsb
xchg
xchg
mov
cld
imul
push
cli
mov
adc
sbb
aad
jne
loope
aam
inc
das
shrb
mov
sbb
rorl
mov
orb
loop
inc
dec
ljmp
push
mov
movsb
xor
mov
movsl
sti
xor
pop
fidivrl
daa
dec
loope
test
faddl
cmp
shrb
push
mov
gs
xchg
popf
push
sbb
dec
addb
push
loopne
xor
add
jo
xchg
inc
mov
aam
cmc
pop
ret
nop
jmp
test
aaa
movsb
add
fldenv
fwait
jb
testb
out
lcall
sbb
mov
test
rep
popf
lock
fldl
sub
insb
test
and
test
inc
lret
add
cltd
inc
hlt
bound
sbb
add
insl
iret
adc
dec
add
mov
jp
mov
aas
mov
insb
cmp
ss
ficoms
mov
js
out
sub
jno
pop
and
test
mov
and
into
pop
mov
jmp
daa
jg
pop
jb
sbb
cmp
lcall
mov
pop
mov
fmul
sub
inc
pop
in
xor
pop
add
mov
xchg
adc
in
iret
ss
adc
and
stos
out
lea
dec
or
mov
filds
cwtl
fcomi
pop
cmpsl
xchg
pop
cld
cmc
jl
dec
inc
adc
out
scas
popf
aas
mov
dec
cmp
lret
push
vpsllw
or
fists
out
out
inc
rorb
jbe
inc
lahf
sub
cltd
mov
fimull
dec
icebp
xchg
ret
popf
mov
inc
shlb
sahf
add
add
jne
mov
mov
and
adc
mov
jbe
insb
ret
divb
pop
sbb
hlt
arpl
xchg
negb
sbb
rol
add
push
cmp
xchg
sub
push
shll
je,pt
inc
lods
cmp
inc
loopne
push
cld
fucom
cmp
iret
outsl
mov
aas
mov
fidivl
in
and
inc
pop
pushf
or
mov
mov
scas
pop
cmc
sti
jp
cwtl
dec
lret
cmp
call
push
inc
inc
dec
jnp
jns
jl
jne
jmp
dec
in
add
daa
aad
xor
fsubrl
xor
ficoml
andl
xchg
fwait
fwait
iret
xchg
lret
popf
xchg
inc
xor
ss
sbb
pop
inc
jo
cld
pushf
pop
icebp
or
aad
sub
repz
pop
jae
adc
mov
cltd
not
cmc
enter
sbb
scas
aam
push
cmp
mov
or
sub
int3
lcall
inc
test
arpl
inc
incl
cmp
pop
mov
pop
ja
aaa
lock
jnp
inc
aad
xchg
fs
test
rorb
nop
lcall
insb
pop
adc
iret
add
addr16
push
mov
sahf
rcr
cmp
cmp
mov
arpl
and
scas
xchg
flds
pop
outsl
adc
dec
ljmp
flds
sbb
cmp
mov
mov
rclb
sbb
xor
cli
nop
std
mov
lea
xchg
mov
jb
cmp
in
fcmovbe
mov
xchg
inc
mov
lahf
inc
xor
and
out
iret
enter
std
test
and
push
ss
and
adc
int3
scas
mov
call
out
in
xor
sub
push
lock
mov
xchg
xor
mov
out
xor
pusha
aad
cmpsb
cmpsl
mov
or
movsb
xor
sub
cwtl
cmp
scas
dec
rclb
call
adc
push
adc
adc
mov
nop
jb
sub
pop
xorl
push
lcall
rcll
cltd
mov
sbb
dec
sbb
sti
mov
pop
jbe
mov
jge
les
cmp
add
inc
adc
addl
addb
iret
push
mov
sub
dec
mov
ss
add
sbb
inc
lods
arpl
mov
outsb
test
mov
pop
cmp
clc
pop
movsb
sub
sub
or
mov
jle
mov
clc
into
cmp
sahf
sbb
mov
and
test
mov
push
popa
jb
inc
test
ret
and
sbb
shll
xor
inc
ja
es
mov
scas
neg
adc
int
dec
clc
xor
shl
jns
push
sub
xlat
pusha
sub
jp
cmpsl
dec
outsl
lret
dec
sub
lahf
pop
or
scas
fcompl
mov
jno
xchg
sti
out
fadd
sarl
insl
fists
lret
aad
and
add
shrb
push
loopne
jbe
jle
dec
xor
repz
pusha
pop
or
xchg
scas
popf
mov
xchg
ficoml
test
int
adc
sahf
sbb
adc
mov
mov
xor
int3
aas
loop
rcll
adc
shll
pop
or
gs
inc
jno
dec
leave
pop
pop
pop
repnz
imull
xchg
sub
mov
dec
cmpsb
fidivrs
jmp
push
lods
xchg
pop
push
addl
negl
adc
mov
or
popf
mov
inc
das
sbb
into
inc
aam
jmp
push
sub
cmpb
push
lahf
add
ja
mov
out
push
lret
push
xchg
shlb
or
mov
test
fsubrl
pop
jg
xor
es
ret
cmc
sbb
and
adc
add
out
sub
mov
jle
mov
cltd
and
cmpsl
popf
push
xor
les
jo
insl
xchg
mov
add
xchg
aad
push
mov
in
bound
push
jno
inc
cmp
sub
pop
inc
jl
and
out
lea
sahf
cltd
pop
and
sbb
stos
out
insb
mov
rolb
lret
sub
sub
inc
mull
loop
mov
aaa
dec
cmp
push
es
sbb
insb
dec
lods
xchg
test
mov
sub
mulb
cmpsb
and
xchg
and
test
scas
xchg
jne
mov
ret
inc
adc
repnz
rcr
bound
mov
cmp
outsl
loopne
adc
in
add
lret
lea
jmp
mov
idivl
adc
pop
rcl
pop
mov
add
push
mov
ret
test
fisttpll
dec
xchg
xlat
mov
mov
sti
push
cld
les
xchg
xor
pushl
mov
test
push
cmc
fcompl
jle
popf
dec
pop
push
outsl
xchg
dec
fimuls
pop
xlat
js
mov
into
dec
lods
iret
mov
add
jb
pop
add
push
cmp
pop
fwait
mov
mov
and
cmovl
dec
xchg
mov
cmp
outsl
mov
xchg
sbb
mov
inc
fnstenv
pop
add
or
mov
xchg
xor
jg
jb
jae
jecxz,pt
insb
jo
sub
mov
pop
add
adc
sahf
jge
and
in
in
out
jg
pop
inc
loop
pop
xlat
xchg
or
mov
lds
mov
sub
movsb
xchg
adc
mov
mov
mov
or
rcll
xchg
lods
pop
sub
insb
mov
lret
push
shlb
aad
mov
mov
pusha
cmp
mov
inc
adc
add
dec
bound
xlat
mov
aaa
ja
mov
push
jns
stc
jmp
xchg
out
pop
lret
add
fisubs
fisttpll
outsb
movq
mov
pop
sbb
add
mov
fs
adc
mov
xchg
or
repz
lock
mov
dec
inc
pop
inc
adc
or
and
test
icebp
in
jmp
mov
adc
in
xchg
or
dec
xchg
and
dec
flds
mov
jo
adc
adc
pop
dec
test
adc
shrl
lods
popf
popa
dec
push
inc
inc
sub
mov
orl
dec
ds
add
sbb
gs
push
mov
mov
dec
repnz
mov
adc
icebp
mov
mov
loop
cmp
cld
rcrl
xor
dec
dec
ljmp
jle
push
andl
mov
arpl
adc
dec
inc
test
xchg
loopne
lea
jno
push
scas
cmpsb
inc
jp
arpl
mov
inc
adc
sahf
xchg
ja
jns
dec
mov
dec
jne,pn
push
mov
in
dec
fistpl
aam
sub
sbb
mov
movsb
out
lods
push
mov
cmp
imul
cld
dec
sbb
mov
push
mov
nop
shl
inc
aas
adc
cmp
sti
push
test
jo
cmp
inc
and
loope
push
inc
addr16
pop
std
out
or
lods
cmp
faddl
insl
pop
add
sbb
cmpsl
mov
outsl
push
mov
inc
fwait
test
ja
lret
cmp
jae
scas
sbb
mov
xchg
cmp
mov
rolb
cmpsl
pop
and
fs
repz
xchg
cmp
pop
mov
dec
push
push
dec
push
inc
fldcw
filds
push
imul
jbe
sub
ss
enter
outsl
sub
icebp
into
lds
rclb
adc
sbb
sahf
out
loope
scas
sbb
out
dec
movsb
mov
sub
jo
jno
adc
pop
cld
mov
jl
jp
sahf
int3
test
and
fs
add
ret
or
mov
dec
outsb
inc
sub
popa
int
xlat
push
adc
mov
lahf
push
sbb
inc
cmp
mov
jo
rolb
out
pop
sub
sbb
cltd
adc
mov
mov
jne
jne
cmpsb
inc
aaa
in
jnp
or
inc
fsts
cltd
and
mov
xor
xchg
mov
mov
mov
sahf
hlt
mov
or
or
jmp
adc
xor
adc
aam
and
data16
jge
int3
fdivrl
push
and
mov
pushf
jl
xor
rorl
or
sub
dec
push
into
pushf
sbb
imul
sar
nop
jge
add
xchg
or
jne
arpl
das
jbe
jg
shlb
mov
mov
insl
jl
fsubrs
scas
ljmp
pextrw
or
sub
sub
idiv
sub
shlb
cmp
les
jno
inc
js
icebp
repnz
scas
sub
cmpsb
enter
jecxz
push
fldl
loop
mov
cmpsl
shlb
fs
mov
shlb
xchg
cmp
and
mov
cli
mov
or
sub
aad
mov
outsl
flds
out
scas
fistps
or
jns
mov
aad
and
push
rcr
mov
push
fistps
stos
sbb
sti
in
mov
sub
or
mov
fldl
out
faddl
sbb
lds
sub
sbb
sub
inc
push
cmp
cwtl
int3
sub
pop
xchg
xor
inc
rcpps
fimuls
pusha
push
cmp
notl
lcall
mov
jmp
inc
call
fadds
push
cmpsl
sbb
or
inc
outsl
test
movsb
jne
sub
jge
sub
or
xlat
shrb
fwait
icebp
test
aad
clc
cwtl
dec
scas
aaa
shlb
fldenv
xchg
mov
sub
lds
inc
lods
add
inc
ja
mov
inc
sbb
xor
clc
es
and
ror
dec
pop
mov
mov
push
jbe
les
ret
ffreep
add
push
pop
or
ds
popf
mov
fdivrl
mov
loope
fildl
inc
sbb
sbb
jle
mov
jns
ja
icebp
xchg
cmpsb
add
or
pop
in
out
or
loopne
dec
xor
jnp
pop
jae
mov
sbb
xchg
js
inc
mov
jp,pn
cmp
scas
sbb
sti
sahf
jecxz
int
movb
imul
orl
mov
xor
shll
and
rol
insb
push
inc
jnp
jmp
dec
xor
or
addb
add
jmp
jmp
cmc
inc
pop
scas
xchg
sbbb
outsl
dec
orl
mov
pop
sub
bound
jmp
xlat
out
arpl
das
pop
into
cmpsb
cmp
aas
dec
shll
pusha
into
test
push
mov
aaa
lock
push
repz
inc
int3
popf
cmc
inc
cmpsl
rcll
sar
pop
lret
out
jge
pop
in
pop
sbb
gs
enter
sub
movsl
dec
movsb
out
push
aad
les
sbb
and
push
jae
outsl
mov
fstl
mov
bound
xor
mov
push
call
mov
jmp
stc
jbe
dec
xchg
cmpsl
sbb
sahf
push
cmc
outsb
arpl
xor
mov
aaa
mov
jp
int
out
js
clc
add
outsb
xchg
jb
add
sar
jl
insl
push
jecxz
andl
cmpsb
sub
sub
jecxz
rcll
stos
mov
sub
pushf
into
jl
pop
int
cmp
stc
aas
pop
sbb
lcall
xchg
xorb
subb
sub
sub
subl
psadbw
lods
aaa
push
push
hlt
sub
movsl
mov
cld
adc
scas
cmp
imul
lods
mov
push
dec
jmp
cmp
sub
scas
inc
adc
pop
ret
xchg
jns
lea
outsb
adc
or
mov
or
pop
cmp
sub
or
adc
movsl
ret
mov
rolb
push
pop
mov
repnz
movsb
std
mov
sub
clc
push
lret
popf
rcrl
pushf
jnp
test
popf
loopne
dec
fisubrl
and
jmp
xchg
into
sti
mov
adcb
xchg
test
stos
lret
pop
sbb
xor
push
dec
jae
sbb
add
push
or
add
out
lret
je
ljmp
icebp
std
jae
sbb
les
rcr
push
lret
pop
aas
inc
mov
shrl
add
int3
imul
shr
orb
shl
decl
pop
xor
mov
mov
or
lcall
inc
test
and
dec
fs
jle
jge
rcll
aam
ljmp
fs
fcmovbe
call
push
mov
mov
sbb
int3
icebp
pop
aad
les
adc
adc
je
in
push
push
sub
sub
cmp
lods
xchg
aad
push
pop
lret
cmp
or
in
testb
jge
int
lret
in
out
adc
aas
clc
lods
dec
stos
shrl
imul
xor
mov
sub
out
adc
dec
aad
fdivr
loope
bound
popf
ret
lcall
mov
pushf
ja
push
mov
pop
add
clc
aad
or
insl
adc
push
repz
outsb
or
neg
leave
inc
sbb
jae
pop
mov
xor
leave
mov
push
hlt
mov
fidivrl
push
sarb
aam
jg
lahf
mov
addr16
mov
aas
jge
into
mov
in
repz
lds
movsl
adc
icebp
adc
mov
pushf
loope
sub
inc
sti
ret
push
xchg
mov
push
mov
leave
xor
data16
dec
xchg
addb
adc
sub
dec
push
lret
and
loopne
push
sti
mov
sub
lahf
lcall
xlat
or
or
repnz
test
out
ds
xchg
lock
lock
push
ret
sbb
jl
and
movsb
mov
stc
gs
push
push
lods
int3
cmpsl
bnd
sbb
ret
xor
insl
fcmovne
mov
gs
and
pop
xor
das
ret
pop
sbb
fldcw
adc
rcll
push
mov
mov
dec
rcrl
shrb
sub
inc
clc
out
dec
aaa
es
mov
add
dec
sti
sti
aaa
and
into
daa
cli
sub
sub
mov
and
mov
inc
sub
mull
sbb
mov
inc
mov
pop
test
xchg
jns
jno
mov
shrl
mov
iret
ds
aad
mov
cltd
pop
je
xchg
aad
adc
dec
inc
mov
mov
ljmp
popf
push
push
pop
in
insb
adc
adcl
or
nop
xchg
int
pop
xchg
xor
jns
push
andb
in
incb
scas
mov
popf
ja
add
stos
cmp
mov
sbb
push
mov
test
or
mov
jecxz
fildl
xchg
outsb
nop
out
push
cmpsl
daa
or
xorb
jg
mov
push
push
movsl
jns
sarl
cld
adc
adc
and
aas
testb
jl
mov
inc
lds
fcmovne
cmc
mov
dec
loope
ret
push
xchg
roll
adc
mov
pusha
cmp
dec
mov
or
cmpsl
jbe
mov
sub
adc
negb
mov
add
xchg
dec
mov
mov
push
cmp
xor
xor
ffreep
neg
test
dec
loope
ficompl
repz
inc
xchg
pop
test
push
cwtl
sub
push
pop
cltd
sbb
and
inc
aam
adc
leave
pop
jecxz
push
jne
and
int3
mov
sarl
inc
out
rolb
cmp
add
outsl
mov
mulb
scas
imul
cmpsb
jge
sub
cmp
mov
fmuls
add
sub
or
ds
mov
movd
lods
push
fucom
imul
mov
and
xchg
cmp
mov
mov
jne
adc
push
jl
lods
test
sbb
arpl
xchg
or
sbb
fisubrl
dec
adc
jle
xchg
loop
cmpsb
sahf
dec
cld
repnz
mov
mov
ret
inc
inc
das
pop
les
sub
xchg
orps
add
xchg
xchg
cmpsl
out
fisubrl
push
cmp
cmp
leave
sbb
mov
subb
aas
add
repnz
lcall
sbb
xor
sbbl
int
push
test
mov
insb
push
movsb
adc
inc
or
lahf
in
out
xchg
xchg
add
popf
movsl
pusha
ja
rep
gs
insl
lods
jo
mov
adc
int3
adc
adc
jno
mov
lahf
adc
jnp
les
xchg
pop
pusha
sar
jne
xlat
jmp
les
push
fucomip
aaa
lods
fwait
data16
int
scas
stc
fimull
push
sub
xchg
scas
sbb
or
mov
dec
sbb
xchg
add
cmp
sub
mov
cmp
test
notl
in
sbb
ret
mov
xor
dec
rcl
repz
rclb
jns
fisubrs
jmp
push
sub
or
dec
mov
lret
shrb
mov
or
ss
aam
mov
dec
adc
inc
ret
jge
je
cmp
sub
je
mov
and
je
cmpsb
mov
xor
mov
lret
mull
mov
sub
and
xor
and
jb
lahf
push
mov
popa
pop
dec
mov
aam
jmp
mov
aam
das
xchg
ljmp
mov
push
or
icebp
pushf
mov
test
fildl
out
jnp
mov
push
ss
loopne
mov
addl
jmp
push
inc
outsl
nop
addr16
rolb
dec
cwtl
sub
sbb
jp
adc
xchg
add
xchg
and
mov
and
add
shrb
out
or
mov
test
aaa
aaa
fistpl
inc
fsub
mov
jbe
dec
adc
ficompl
call
pop
enter
arpl
jg
mov
or
in
arpl
and
cmp
idiv
movsb
mov
mov
fs
pop
mov
scas
pop
push
out
pusha
adc
mov
in
cmp
push
inc
shll
mov
into
popf
push
fstpt
rorl
mov
adcb
repnz
int
xchg
imul
mov
inc
call
jnp
xor
dec
ffreep
ret
mov
mov
outsl
inc
sub
pop
jne
mov
mov
push
mov
stos
adc
jno
cmp
cs
call
xchg
loopne
pushl
outsb
aaa
pop
lea
mov
aas
shrb
shrb
aam
in
jmp
out
pusha
xchg
in
ret
lods
inc
push
pop
stos
popa
clc
xor
out
mov
and
or
push
roll
sbb
dec
mov
sbb
or
cmpxchg
lods
push
hlt
adc
push
dec
mov
cmp
cmp
insl
popf
jno
addb
inc
cltd
mov
clc
cmpsb
push
sub
jne
cmp
das
mov
repnz
in
cwtl
sti
out
add
xchg
xchg
in
sbb
push
push
sub
add
jge
pop
or
gs
enter
cwtl
push
inc
push
or
fs
cmp
imul
ficoml
nop
sub
dec
adc
mov
or
and
cmp
hlt
ret
fstpt
cmp
fistl
lahf
hlt
sti
stos
arpl
mov
loope
ja
xchg
adc
push
jno
and
push
mov
xchg
out
and
roll
aaa
pop
pop
test
negb
xchg
cmp
ret
add
outsb
cmpsb
adc
jno
jp
sbbb
jno
push
push
pop
ret
dec
popf
adcl
hlt
mov
mov
fdiv
pop
lret
sub
adc
nop
aaa
cmc
imul
loope
mov
jnp
jbe
mov
negb
mov
in
mov
add
outsb
out
in
fistpl
sti
pushaw
sbb
push
add
inc
push
pop
stc
and
je
mov
sub
neg
mov
imul
add
add
jbe
pop
test
adc
cmp
cld
lods
jns
adc
push
imul
push
mov
jl
pop
adc
pop
dec
cmp
lds
xor
addb
xor
mov
gs
in
pop
fucomip
mov
adc
neg
shlb
cmpsl
loopne
fists
scas
pop
int
dec
mov
sub
stos
fisubl
push
jmp
mov
pop
out
xlat
into
cmpsb
cmp
push
mov
lock
imul
aad
jne
mov
gs
or
adc
or
ljmp
leave
mov
mov
jge
rcrl
and
cltd
ljmp
test
jne,pt
sub
or
pop
pusha
fistps
mov
pop
fcmovu
jne
scas
mov
jb
addr16
jecxz
xchg
lods
fisubrs
fcmovnb
lret
es
enter
jl
pop
mov
jbe
jg
adc
repz
sub
shll
addr16
out
sub
mov
push
xchg
rcrl
rorb
mov
insl
cmp
jmp
lock
mov
dec
mov
scas
xchg
cmp
daa
xchg
into
xchg
mov
push
insb
push
jnp
mov
push
je
mov
push
xchg
jae
push
ret
add
enter
jbe
jns
repnz
sbb
lods
dec
je
mov
add
cmpsb
into
cmp
xchg
pop
adc
mov
fnstenv
lret
sti
out
and
dec
or
loopne
ret
jo
xor
in
sub
cmpsb
xchg
inc
sub
mov
jbe
jmp
jo
cmp
call
push
and
jle
mov
enter
cltd
dec
jle
pushl
add
xor
add
inc
int
cld
ret
out
mov
sub
scas
adc
push
adc
imul
cs
mov
xchg
cwtl
scas
or
mov
push
sub
mov
frstor
pusha
ret
jmp
push
imul
pop
jnp
inc
sub
xor
push
or
arpl
outsl
jg
in
pop
pop
jne
sbb
dec
push
repnz
repz
hlt
add
lcall
in
pop
lods
fildl
aaa
popa
je
cmpsl
loopne
xor
movsl
mov
adc
or
adc
xlat
fildll
pop
stc
cltd
cmc
cmc
sub
ficoms
jbe
jge
and
add
test
add
dec
push
cmp
fcoml
jle
dec
mov
pop
lcall
ja
adc
pop
shlb
cmp
add
xor
push
pop
xchg
pop
and
push
pop
out
loopne
lds
and
aas
test
movsl
dec
movsb
mov
adcb
dec
enter
sbb
mov
adc
inc
outsl
lea
je
jb
cmp
test
jo
xchg
mov
cmpsb
ret
dec
fsubrs
std
or
mov
cwtl
jno
mov
adc
or
and
push
rolb
mov
dec
xor
xor
and
inc
jge
int3
imul
xor
les
pop
jo
dec
fidivs
insl
bound
je
jo,pn
std
and
mov
in
xchg
cmp
data16
or
les
pop
lret
jnp
imul
mov
xor
sti
shrb
mov
add
dec
adcb
int
lret
cmp
in
pop
mov
jbe
lods
out
outsb
jmp
dec
repz
adc
pop
out
add
rcrb
shll
aam
sub
icebp
cmpsb
es
ret
andl
pusha
mov
xchg
jb
mov
enter
es
mov
pusha
fistpll
adc
push
sbb
mov
inc
loopne
das
jne
sbb
in
daa
pop
imul
and
sahf
dec
or
loop
sbb
sub
or
dec
mov
push
in
cmpsb
cli
sub
xchg
aas
pop
push
ret
out
sub
in
cltd
push
dec
sbb
cmp
mov
cli
xor
rcll
push
in
roll
sbb
addr16
jmp
cmpb
inc
icebp
xchg
mov
jle
adc
dec
jbe
insl
lods
int
mov
ljmp
cmp
adc
jno
mov
in
aad
repnz
mov
mov
loope
outsl
inc
jmp
mov
dec
pop
and
pushf
out
movsl
jmp
adc
mov
inc
fs
pop
sahf
addr16
adc
dec
xchg
loopne
negl
inc
jle
shlw
test
add
push
push
stc
sahf
pop
mov
mov
icebp
mov
cli
lds
mov
daa
dec
adcl
cs
jmp
inc
loope
out
dec
dec
rorb
push
pop
lods
stos
out
aad
pop
inc
daa
cwtl
and
inc
bound
fcmovnbe
mov
sub
call
inc
lock
fnstcw
out
lock
das
aaa
sahf
mov
xchg
lods
mov
pushf
xchg
adc
andb
jmp
in
xchg
mov
dec
push
add
xchg
or
and
adc
xchg
push
iret
jg
out
pop
jmp
je
les
sub
push
jp
int
mov
je
ret
mov
dec
lea
sub
popl
mov
sbb
push
push
mov
sub
sbb
adc
sbb
adc
and
mov
inc
aad
jmp
fs
fadd
jne
push
sbb
popa
sbb
je
jbe
and
mov
mov
cwtl
mov
sti
push
enter
test
push
xchg
in
xchg
movsl
imul
pop
popf
out
xchg
xor
sub
outsb
cs
xlat
pop
pop
lret
mov
mov
jnp
ret
or
pop
or
rcrl
mov
repnz
pop
mov
shlb
cld
in
or
push
jno
adc
insb
sbb
aam
pop
ss
gs
pop
sbb
xchg
inc
mov
movsl
stos
in
cmp
mov
xchg
adc
sbb
ds
xchg
push
lods
cmp
sbb
inc
xor
jecxz
es
mov
jnp
xchg
dec
mov
push
ds
mov
sub
sbb
loopne
sbb
adc
pop
lds
inc
sqrtps
inc
mov
add
jnp
loope
inc
scas
mov
lods
das
mov
sub
aas
mov
std
mov
jo
mov
popa
popa
lea
and
xchg
gs
imull
imul
mov
add
xchg
aas
popa
dec
dec
lods
ret
xchg
ss
adc
adc
fstl
mov
cmp
xchg
inc
jecxz
and
lea
adc
jmp
push
pop
inc
into
fstpl
daa
or
mov
pop
inc
push
push
ret
fists
repnz
ljmp
inc
lods
mov
scas
imul
in
int
mov
push
aaa
lcall
movsl
jp
movsl
xor
push
and
sbb
jbe
cli
lret
leave
add
ficomps
fnstsw
lds
pop
icebp
lret
and
cli
in
adc
mov
fcoml
data16
fistpl
lret
mov
add
mov
sbb
push
mov
nop
inc
add
insb
mov
rcll
xchg
sbb
sub
cmp
xchg
mov
and
bound
fnstsw
subl
addb
inc
or
les
adc
ss
and
mov
jp
pop
into
pop
lds
cwtl
imul
jno
push
mov
push
pop
cmp
jbe
test
dec
rorb
adc
or
jo
dec
mov
lds
sub
or
or
hlt
jae
add
arpl
ret
mov
shlb
mov
pop
adc
out
push
cmp
test
leave
jnp
jnp
notl
xor
mov
mov
dec
mov
fdivrs
cmc
cmp
sbb
lcall
cmp
cwtl
mov
jo
int3
and
inc
enter
inc
pop
sub
sbb
into
and
add
data16
dec
xlat
mov
shrb
adc
int
xor
and
call
mov
addl
sub
inc
pop
mov
mov
jb
adc
icebp
mov
mov
xchg
out
mov
inc
jmp
es
mov
xchg
icebp
stos
iret
inc
loope
iret
add
cmp
int
dec
into
pop
ja
fisubrs
mov
adc
adc
xchg
mov
out
orl
push
sub
xchg
mov
sbb
push
lret
nop
sbb
lcall
je
push
lods
iret
mov
or
bound
adc
lods
iret
movsl
add
adc
xor
daa
scas
ds
std
gs
pop
xlat
and
xchg
sbb
add
mov
pop
sbb
xchg
rcrb
in
or
clc
ret
inc
scas
bound
add
mulb
rorl
fs
outsl
call
jnp
or
gs
js
jb
add
sub
loopne
adc
ret
and
xchg
sbb
push
cmovb
aas
jmp
insl
loope
cs
push
call
popf
dec
or
mov
lods
das
icebp
adc
daa
ja
leave
or
jmp
popf
or
jmp
lahf
shrb
in
and
enter
mov
cmp
dec
inc
dec
daa
xor
test
notl
xchg
rorb
dec
and
jnp
inc
add
inc
js
into
ss
int3
inc
mov
sbb
ss
pop
fsubr
orl
mov
sahf
out
subl
mov
stos
stos
push
mov
std
push
and
sahf
lock
and
jbe
into
jmp
add
pop
or
testl
scas
mov
cmp
xor
js
imul
scas
xchg
int
mov
dec
and
clc
inc
push
lds
jmp
movsl
fists
adc
fists
jmp
mov
pop
xor
shl
adc
pusha
pop
xchg
lods
add
ds
stc
loop
add
cwtl
mov
xchg
jg
or
mov
mov
mov
xchg
pusha
les
inc
jns
cmp
sbb
mov
fadds
jmp
lods
cmp
and
add
sub
mov
das
push
inc
xlat
sub
mov
je
lds
push
pop
decb
stc
bound
or
xor
mov
dec
fisttps
sub
rcrl
mov
out
lds
sbb
push
in
ss
fbld
lds
dec
or
mov
and
das
jl
push
das
lret
sbb
sahf
adc
sub
pop
xor
add
push
call
fisubrl
ljmp
inc
imul
shr
imul
sbbl
pop
jns
es
fcoms
scas
insb
std
add
call
xor
scas
xchg
mov
jg
cmp
int3
out
pop
and
xchg
aas
pusha
sub
or
inc
sbb
add
xchg
add
adc
mov
pop
mov
insl
mov
xor
mov
stos
inc
and
outsb
jmp
dec
cmp
ret
sbb
and
loope,pt
leave
mov
pushf
mov
ja
push
and
add
pop
mov
jmp
pusha
sbb
cmp
sbb
fwait
jne
jmp
popa
outsb
lds
loope
xchg
xchg
mov
push
out
mov
enter
jecxz
scas
test
add
sahf
jns
jae
outsl
xor
rorl
xchg
mov
xchg
arpl
leave
and
pop
movsb
cmp
pusha
xchg
in
and
fists
ja
xchg
mov
loop
int
mov
dec
nop
sub
pop
mov
mov
stc
sub
jo
xchg
xor
sahf
dec
mov
adc
icebp
mov
dec
xchg
lcall
dec
jp
mov
das
xchg
imul
cwtl
lea
pop
add
lock
int
stos
ss
lock
aam
out
dec
shll
push
sbb
mov
and
pop
push
add
push
add
push
shlb
jg
cmp
je
or
aam
push
cmc
mov
jle
or
fsubs
or
scas
or
sbb
lfs
jl
repz
xchg
test
jg
and
lods
xchg
sbb
mov
fisttps
pushf
ljmp
dec
jne
call
std
mov
fldcw
je
sub
in
int3
inc
xchg
pushf
fsub
jne
xor
in
xchg
xor
lea
subb
push
sarl
push
xchg
push
lock
enter
adc
pop
cwtl
enter
sbb
xchg
jbe
push
movsb
pop
ror
std
mov
test
ret
push
and
sub
imul
and
adc
add
adc
adc
mov
xchg
push
cmp
pop
arpl
xchg
not
jl
out
sahf
mulb
cmp
jne
imul
inc
into
xchg
or
mov
jl
add
lahf
je
lcall
and
pop
mov
out
sbb
test
pushf
sbb
into
add
cmc
push
mov
lcall
loope
push
lods
xchg
fcmovu
mov
jae
dec
jae
stos
mov
lods
imull
ds
sub
icebp
repnz
jae
je
sbb
lea
mov
sbb
push
push
jp
add
xchg
push
addb
push
popl
jns
sub
imul
dec
pop
cmp
out
and
ficomps
fisubl
std
add
and
incb
dec
push
xchg
shl
repz
xlat
fnstcw
loop
or
insb
cmc
sub
cli
add
lock
adc
add
pop
mov
pop
aas
int
push
pop
lods
cmpsl
in
cmp
xor
jp
mov
cmc
jmp
movsb
and
cmp
push
sbb
pop
jne
into
and
in
cmpsb
test
icebp
push
add
ret
sub
mov
pop
loop
mov
sbb
aad
test
ficoms
mov
mov
rcll
or
lods
std
xchg
push
jge
jne
pop
pop
adc
test
dec
int
ss
xchg
outsb
push
inc
inc
add
push
aas
xor
mov
clc
xor
push
shlb
cs
and
jbe
pop
outsl
test
repnz
enter
and
inc
dec
mov
loopne
sbb
xor
or
sahf
rcrl
inc
test
mov
pop
ds
in
push
in
rcl
push
xchg
sub
pop
xchg
dec
cmp
or
fs
lock
dec
pop
test
hlt
inc
push
xor
mov
fbld
fs
add
push
sbb
mov
jb
rorb
and
mov
dec
pop
cltd
adc
and
jecxz
push
pop
mov
cmp
mov
or
stc
xchg
dec
test
ret
jnp
jg
fsubl
cmp
cli
rcrb
jg
xor
push
mov
lret
cmp
lret
cmp
jg
cwtl
mov
adc
ret
pop
movsl
inc
and
movsb
mov
adc
mov
jge
lret
fisubl
out
mov
xchg
mov
stc
std
mov
sahf
hlt
pushf
out
ret
outsb
movsb
mov
mov
cld
push
push
jmp
mov
and
inc
jp
std
dec
lds
mov
sahf
mov
or
out
sarl
jno
and
pop
pop
xor
xor
in
mulb
pop
pop
rcrl
je
jno
inc
dec
loop
lret
add
ds
sub
add
test
lock
inc
xor
andb
add
xor
sbb
lret
push
push
repnz
out
mov
test
lods
repz
push
pusha
mov
jo
pop
and
aad
daa
scas
sub
aad
lock
ss
push
dec
lret
jbe
push
arpl
inc
arpl
in
dec
scas
pop
jno
lds
xor
adc
sbb
inc
mov
mov
inc
sbb
cmpsb
pop
and
pop
into
dec
lahf
pop
pop
fs
inc
test
or
das
ret
cli
aas
cli
sarl
mov
data16
jae
or
pop
lods
aaa
daa
jbe
stos
adc
mov
push
aam
cmpsb
mov
lret
aam
add
xchg
fstl
and
mov
inc
inc
or
dec
outsb
clc
pop
cmc
rolb
mov
adc
leave
nop
dec
sbb
dec
mov
jp
insb
in
andl
je
jo
aaa
or
push
pop
xor
aaa
lcall
aaa
inc
add
push
das
inc
jge
cmp
mov
cmp
and
jnp
cmpsl
mov
rorl
jge
scas
and
jbe
mov
mov
out
stc
jb
popf
cli
loope
mov
aaa
orb
lcall
scas
rep
addr16
sub
out
jl
movsb
shrb
sahf
pop
xchg
aaa
jbe
loope
push
xor
mov
movsl
ficoml
pop
push
mov
mov
adc
sahf
xchg
sbb
stos
mov
negl
mov
jl
cmp
shr
dec
mov
pushf
adc
lcall
pop
lods
mov
stos
outsb
lret
test
lock
mov
roll
jl
jl
pushf
and
outsl
in
ljmp
dec
pop
jb
pop
sbb
mov
clc
jle
mov
xor
stos
insb
repz
inc
dec
cltd
das
or
dec
jae
ret
js
aad
xor
pusha
xchg
icebp
ror
jmp
inc
xor
lds
in
jle
xchg
push
push
xchg
out
xchg
sub
lea
and
push
cmp
mov
shll
add
jmp
xor
cltd
push
push
push
sti
or
sub
sub
xchg
push
lods
ja
incb
outsb
jno
rcr
rclb
icebp
mov
sarl
mov
movsl
and
pop
push
jne
int
outsl
jge
outsb
cs
fsub
and
stos
cmp
push
xor
add
stc
dec
mov
lods
dec
dec
cld
lcall
mov
fcoml
pop
sub
roll
clc
cld
into
flds
push
orb
ljmp
jns
sbb
dec
ss
pop
cmp
ljmp
cmpsl
or
addr16
and
loop
insl
inc
sub
pop
jg
sbb
sbb
pushf
mov
sti
cmp
push
jb
decb
mov
aaa
cmp
cmp
sahf
sbb
mov
adc
xchg
in
mov
add
mov
push
icebp
cs
adc
idivl
mov
xchg
aam
jae
and
test
fdivrl
sub
test
das
enter
sbb
and
imul
sbbb
lds
les
pusha
insl
cwtl
or
in
mov
mov
xchg
mov
cmp
insb
dec
mov
ret
rcl
inc
xor
aad
ds
clc
push
lods
sbb
adc
addb
les
ss
fucom
idiv
and
inc
inc
mov
push
inc
add
jp
sti
gs
fwait
rcll
push
imul
dec
aad
or
xor
inc
out
lahf
fcoml
xchg
xor
sbb
mov
aam
cltd
cmp
pop
sbb
or
mov
insl
aam
add
pop
and
imul
push
push
push
push
lret
nop
sub
push
lea
mov
xchg
test
popf
mov
and
cs
ja
jl
sbb
fists
pop
mov
lods
ret
repnz
arpl
xchg
jl
sbb
xchg
ja
clc
adc
add
lcall
cmp
dec
pop
arpl
sbb
notb
mov
or
mov
call
pusha
mov
xor
popa
popa
out
sbb
movsl
and
iret
mov
out
mov
andb
mov
aam
repnz
dec
repz
repnz
add
jnp
pop
jmp
cs
scas
sbb
loope
mov
cmp
mov
js
sub
addr16
scas
stos
jl
imul
leave
std
mov
lcall
test
cmc
sbb
icebp
and
lahf
lahf
jns
xchg
mov
xchg
loopne
mov
or
and
aaa
jb
call
sub
das
movsb
dec
or
inc
repnz
testl
xchg
jmp
lea
lods
xor
ret
jecxz
jae
cld
jmp
int3
mov
jno
push
cmc
fcomps
mov
sbb
shl
inc
int3
jl
xchg
loop
xchg
pop
xchg
pop
shll
add
or
scas
sub
bound
jns
test
not
xchg
push
out
sub
inc
loop
and
jae
js
out
mov
aam
ds
mov
sbb
lods
sub
pop
jg
das
dec
push
loop
ds
mov
shll
mov
pop
sbb
stos
push
adcl
daa
cmp
sbb
push
test
repnz
jnp
xlat
in
push
out
jne
xchg
mov
decb
adc
stos
or
sarb
cmp
aam
mov
inc
add
and
dec
add
cmp
pop
test
mov
push
or
xor
filds
xor
push
xchg
pop
insl
popa
inc
xor
mov
hlt
push
cmp
and
sbb
sbb
mov
mov
cs
xchg
sub
lahf
mull
in
add
add
int3
mul
push
cs
sub
movsb
lds
in
inc
push
dec
push
stos
jb
pop
jo
out
sarl
es
add
scas
push
cmp
mov
or
and
inc
ret
test
leave
lahf
or
push
stos
movsb
add
jle
add
mov
sbb
rorb
xchg
mov
xchg
cli
and
fcmovne
xchg
mov
sbb
ds
int3
test
push
push
push
inc
in
scas
jp
pop
mov
jg
sbb
pop
push
mov
sub
jb
call
xor
mov
insb
inc
aaa
stos
push
pop
xchg
cmp
sub
in
push
xor
icebp
push
test
jl
das
jns
or
and
and
add
cmp
or
out
fisubl
out
push
xchg
in
adc
xchg
sbb
leave
push
aad
dec
inc
push
loopne
clc
pop
add
mov
push
cmc
movsl
xchg
pop
leave
cmp
add
lcall
add
sub
lcall
jae
movsl
pop
pop
leave
mov
dec
lcall
call
sbb
xchg
push
fsincos
pop
cmp
icebp
shlb
test
push
mov
dec
hlt
in
icebp
or
out
sub
lock
test
pop
cmp
stos
jle
cs
clc
inc
addr16
test
inc
movsb
repnz
inc
mov
lock
aaa
or
lods
xchg
lret
dec
sub
dec
gs
push
lods
lahf
xlat
fisubs
cmpsb
xor
scas
mov
push
mov
pusha
bnd
cmpb
jne
es
jbe
cmp
mov
divb
dec
and
mov
sub
dec
fnsave
pop
mov
mov
scas
add
orb
sbb
stos
cmc
cwtl
repnz
in
mov
aad
and
sub
orb
inc
call
in
popa
xchg
test
mov
xor
inc
lret
adc
int
jns
or
mov
rolb
dec
mov
mov
flds
or
test
addr16
mov
xor
add
aas
cltd
inc
inc
loop
mov
ret
xchg
into
or
lret
xchg
jmp
movsl
xor
ficompl
lds
jecxz
hlt
data16
rorl
pushf
rcll
dec
jg
pop
ja
mov
imul
test
push
imul
aas
insl
xor
cmp
mov
inc
adc
cmp
and
jl
pop
inc
pop
sub
pusha
aam
test
push
icebp
add
mov
cmp
adc
xchg
ja
int3
mov
test
mov
sbbl
test
and
imul
jno
jno
test
lods
dec
orl
xchg
jns
ljmp
cli
insl
movb
in
jne
stos
sub
mov
lret
loop
xor
push
adc
shll
push
movsb
xchg
pop
dec
or
andl
mov
dec
mov
cltd
rcrb
sarl
dec
push
es
outsb
sti
pusha
cmp
jne
cwtl
es
movsl
cmp
lock
dec
adc
xchg
scas
sbb
push
aad
subl
aad
xor
hlt
nop
xor
push
add
das
sbb
xor
jecxz
test
xchg
mov
pop
add
jo
jmp
xchg
mov
mov
movzwl
ds
xchg
pop
data16
mov
cmp
out
cmpsl
insl
pop
xchg
mov
xchg
aaa
sbb
adc
scas
mov
inc
xor
nop
or
dec
fstpt
fstl
xor
out
mov
pop
push
iret
in
inc
sti
dec
fdivrl
cmp
testb
pop
lock
or
es
xchg
fsubrs
mov
push
push
xchg
aaa
test
jns
dec
out
adc
jbe
out
nop
cmp
repnz
pop
jne
push
xchg
xchg
push
cwtl
daa
adc
das
push
fcompl
mov
sub
loop
andb
xchg
in
fsts
sub
pusha
sub
or
lcall
pusha
test
sub
orl
bound
popf
stc
cwtl
lods
mov
iret
test
stc
adc
repz
or
mov
inc
sub
shr
sarb
call
out
push
and
lods
std
lcall
outsb
dec
dec
ret
cmpsb
mov
cmpsl
rorl
push
jbe
adc
roll
cmpsl
fld1
daa
push
jmp
movsl
dec
sbb
mov
sbb
out
jge
mov
cmpb
mov
insb
ljmp
mov
aam
pushf
mov
movb
inc
adc
popa
arpl
xor
inc
iret
dec
adc
dec
sub
insb
mov
push
xlat
fbld
icebp
ffreep
stos
adc
scas
outsl
fwait
incb
cmp
ss
daa
les
or
and
aam
incb
int3
xor
or
adc
call
mov
imul
gs
or
dec
sbb
into
and
sbb
mov
mov
pop
add
js
sbb
mov
test
adcl
daa
sarl
sahf
mov
add
and
sti
gs
stc
clc
push
enter
jbe
cltd
sbb
sub
pop
divb
ja
ret
mov
ja
xor
addr16
add
pop
mov
ds
icebp
xorb
fadd
pushf
pop
push
cmp
mov
lea
mov
cmpl
aad
dec
leave
bnd
in
lret
add
stc
lahf
enter
cld
and
and
dec
inc
stos
outsb
stos
jo
mov
xorl
add
int3
sub
inc
popf
cli
push
push
jecxz
push
lret
shlb
or
cmp
popf
mov
stc
into
loopne
jg
mov
sub
loop
icebp
pusha
mov
icebp
fidivrs
dec
addr16
jno
imul
negb
loop
stos
fucom
insb
adc
push
mov
stos
mulps
jecxz
mov
mov
test
cvtsd2ss
push
shrb
inc
and
int3
stos
cmp
test
cltd
push
into
jno
ljmp
sub
pop
xchg
push
xchg
stos
push
cltd
and
test
popf
testl
xchg
mov
jge
sub
push
in
lods
fidivl
stos
push
out
pop
fdivl
mov
mov
add
ret
cltd
push
in
xchg
int3
je
mov
mov
inc
add
out
xchg
push
push
aam
cli
loopne
xchg
clc
mov
sbb
loop
movsl
sbb
psubsw
ficompl
pop
gs
cld
imul
xor
cltd
je
lods
iret
insl
add
das
xor
or
or
push
pop
sbb
xchg
ja
or
jnp
mov
pop
rclb
mov
pop
pop
shlb
push
cmp
push
out
fists
xchg
pop
les
lods
bound
adc
lret
pusha
out
cltd
loop
jne
xor
aam
push
repz
vpcmpgtd
mov
sahf
es
cmp
cld
jmp
test
andb
mov
and
mov
pop
push
add
hlt
push
aas
enter
xchg
and
push
jno
push
jne
popa
subb
xor
xchg
jge
xor
push
bound
je
lea
inc
test
mov
into
and
and
in
add
and
punpckhdq
xor
lock
mov
shr
mov
mov
rclb
mov
mov
cwtl
fsubrl
jl
pusha
aam
xchg
mov
xchg
and
pop
inc
ja
cmpb
jae
jp
pop
mov
cmp
cmpl
iret
clc
or
scas
lahf
leave
push
in
add
ss
pop
pusha
fdivrs
push
or
andb
add
shlb
jbe
pop
int
dec
or
sub
xchg
icebp
filds
push
mov
shrl
mov
mov
ret
js
lea
shrl
in
fidivs
jbe
mov
cld
xchg
imul
xchg
push
mov
dec
shr
aad
aas
leave
mov
in
pop
lock
mov
mov
inc
es
cmpsl
fidivrs
or
test
add
push
xchg
in
or
inc
hlt
jno
int3
lahf
dec
xor
push
fimull
mov
xchg
mov
xor
je
orl
mov
or
inc
inc
mov
call
loope
aas
bound
dec
push
pop
mov
sbb
or
pop
int
fsubl
es
cmp
test
hlt
imul
mov
incl
fistps
jbe
inc
mov
roll
lret
dec
jb
cmpsl
pop
and
aad
aad
push
jb
inc
popf
and
orl
pop
add
push
std
inc
das
or
cs
test
scas
shll
push
lods
aas
xchg
push
leave
call
loope
fldt
xor
ret
mov
dec
add
sub
lret
out
xchg
push
and
repz
lcall
lcall
call
mov
sub
enter
popa
clc
out
mov
call
mov
push
loop
enter
pop
mov
in
aaa
cltd
xchg
shll
xor
call
psllq
int3
leave
popa
outsl
inc
adc
push
js
xchg
gs
mov
jl
xchg
lret
push
loope
adc
push
xlat
popf
ret
mov
fsubrp
mov
sub
mov
xchg
into
out
or
xor
sarl
lret
xor
add
cmc
fwait
xor
data16
andb
enter
out
and
xchg
mov
shlb
push
daa
jnp
cmpsl
inc
shrl
test
pushf
fnstenv
push
mov
loope
fldenv
mov
fdivr
sub
pop
jle
rorb
cli
ss
into
sbb
insb
fnsave
std
xor
les
sbb
xor
inc
inc
adc
dec
jge
pushf
sub
out
pushf
pcmpeqb
dec
jb
lock
test
iret
jno
daa
insl
data16
subl
jns
orb
xchg
fildl
stc
sbb
cltd
adc
scas
adc
repnz
loopne
jmp
sti
cld
add
scas
stos
cmp
das
ljmp
cli
push
xlat
aaa
mov
jp
push
jp
out
stos
ljmp
xlat
jmp
mov
cld
jo
dec
sti
or
jecxz
out
push
mov
and
fistpll
sub
xchg
push
jmp
pop
dec
mov
lcall
mov
stc
out
and
imul
mov
dec
mov
jl
xchg
mov
push
mov
leave
jmp
les
call
sbb
or
test
inc
dec
es
in
into
loope
les
std
sbb
sbb
or
mov
add
xor
xchg
push
sahf
ret
push
fiadds
ffree
jns
mov
dec
in
mov
push
pop
mov
cwtl
aaa
popa
out
ds
loope
add
es
cmp
sub
cmpsl
add
dec
adc
repz
push
xchg
je
add
push
notb
mov
mov
sub
push
jne
bound
push
data16
and
es
ret
mov
fisttps
pop
mov
int
jge
mov
shlb
cmpsb
and
fsubrs
pushf
fisttpl
aad
dec
mov
push
ljmp
push
adc
std
jno
jmp
adc
sub
ds
xor
out
cmpsl
cwtl
ret
dec
sub
popa
aad
push
icebp
mov
xor
jp
dec
fwait
xchg
inc
enter
ret
shr
pop
adc
repz
or
ss
sti
xchg
pop
dec
push
jne
scas
movb
add
cmp
jb
add
sbb
mov
xchg
scas
cmp
dec
lods
test
xchg
rolb
loope
bound
add
lcall
mov
dec
lock
popf
dec
mov
mov
out
sub
mov
data16
leave
cmp
into
bound
xor
sub
cmp
push
ret
test
fidivrl
push
out
cmp
and
xchg
sub
or
out
sub
lods
mov
imul
test
pop
jns
jbe
jp
icebp
outsl
cmp
inc
mov
loopne
lds
ljmp
pop
xchg
pop
adc
scas
push
xor
and
mov
and
mov
sub
and
mov
and
xlat
cmp
dec
hlt
cmp
fnstcw
or
sbb
push
testb
dec
sbb
popf
xor
insb
clc
outsl
adc
pop
je
mov
insl
sbbl
add
add
mov
out
stos
adc
mov
dec
fadd
popa
int3
out
lret
addr16
xchg
jnp
push
ret
xchg
jl
ret
movsl
into
xchg
aaa
xchg
jnp
lret
movsl
ret
mov
mov
inc
inc
loope
jbe
jbe
push
and
mov
aad
test
loopne
mov
xchg
push
sbb
jae
jnp
icebp
sub
sarl
arpl
lret
or
mov
cmc
cwtl
loopne
or
push
xchg
inc
sub
jl
clc
cltd
jmp
push
int3
xchg
push
pop
ss
mov
fptan
and
mov
call
es
mov
je
xor
movsl
jecxz
push
jae
lds
cltd
jg
stos
lods
leave
into
cmp
jg
sahf
dec
xchg
mov
test
outsb
or
xchg
imul
lea
mov
inc
mov
aad
pusha
adc
shrb
mov
inc
add
fnstsw
jecxz
xor
out
lods
daa
outsl
pop
loop
ret
sub
cmp
sti
clc
inc
push
rorl
inc
out
add
inc
inc
mov
cmpl
push
cmp
movsb
or
mov
xor
sub
pop
out
and
pop
or
shrl
jo
stos
sub
cltd
mov
enter
jb
xchg
clc
sbb
addr16
sbb
lea
fidivrs
fldcw
xchg
adc
test
mov
cmp
repz
data16
pushf
std
andb
or
lods
lods
iret
push
cld
push
cs
and
in
shlb
gs
enter
cld
push
ds
pushf
and
movsb
xor
fidivrs
jmp
popf
sub
mov
cli
inc
mov
pop
stc
rcrb
popa
mov
push
cmpsb
xchg
dec
inc
push
adc
mov
pop
pop
out
mov
lock
dec
jnp
hlt
nop
fdivl
fwait
dec
mov
xchg
or
dec
int3
out
adc
lret
and
lcall
mov
and
adc
xchg
mov
jge
cmc
movsl
and
out
pushf
xlat
mov
sub
cmp
popf
add
mov
movsl
mov
movsl
aam
insb
xor
test
test
into
inc
sub
into
jnp
xchg
fcomp
stos
adc
fbstp
sbb
adc
fnstsw
lret
mov
and
inc
and
push
mov
rcll
and
adc
testl
adc
xlat
loop
dec
popf
sub
mov
aaa
or
les
iret
pop
push
ja
xorl
sbb
enter
pop
ret
push
pop
testl
mov
ror
adc
and
dec
xchg
inc
add
mov
outsb
dec
dec
mov
outsb
xchg
lock
ss
pop
aas
adc
loop
or
xchg
into
and
pop
pop
xchg
lret
mov
mov
insb
aaa
mov
cltd
sbb
movsl
aad
lods
mov
nop
add
add
sbb
pusha
add
fcompl
pop
call
or
test
nop
dec
mov
inc
lahf
xchg
roll
daa
les
and
addl
imul
pop
call
hlt
stc
sbb
mov
dec
fstl
ljmp
lcall
shlb
inc
ret
ret
ss
push
dec
xor
add
addr16
mov
test
out
test
xor
pushf
aas
cmp
sbb
shlb
sahf
sti
jne
js
push
shl
test
lock
xchg
jle
divb
and
loopne
stc
popf
or
stos
ljmp
data16
jmp
cld
add
test
add
inc
sub
testb
push
cmp
inc
add
fadd
insl
jb
pop
lahf
pop
jne
lock
mov
mov
gs
and
dec
fisubrl
stos
or
dec
xor
sbb
or
mov
pop
cmp
mov
out
test
inc
adc
enter
mov
clc
sbb
mov
xchg
stos
xorl
dec
hlt
mov
in
dec
out
xchg
or
sub
pop
inc
cli
gs
lea
mov
adc
mov
jne
ljmp
dec
mov
lods
xchg
ja
push
sub
cmp
incb
test
les
cs
add
movsb
cltd
mov
sub
and
dec
pop
cmpsl
rcll
sub
cmpsb
push
or
mov
or
hlt
jae
fwait
mov
ja
lret
push
lock
ret
arpl
sub
cmp
es
pop
movsl
add
sarb
mov
negb
xchg
xchg
adc
test
into
adc
push
dec
xchg
stos
movsl
inc
ficomps
arpl
jmp
mov
push
push
mov
lods
pop
ucomiss
xchg
or
fisttpl
cmc
in
pusha
out
lods
cmp
sbb
pop
xor
sub
je
xor
lds
xchg
mov
insb
push
add
sub
scas
push
stc
xchg
jg
mov
aaa
push
add
out
push
insl
fwait
jl
jae
add
lret
inc
mov
xor
mov
jns
pop
push
lahf
je
sub
jecxz
lods
dec
mov
lods
dec
test
mov
pop
insb
pop
dec
jno
sbb
aaa
arpl
ja
loopne
add
pop
fisttps
inc
fmuls
outsl
cmp
repz
or
bswap
cmpl
into
inc
push
shrl
loopne
fisubrs
jge
icebp
ja
mov
not
in
pinsrw
rorb
lret
mov
stos
jg
mov
faddl
jl
pop
adc
or
adc
enter
aam
mov
ret
jl
xchg
adc
stos
pop
inc
clc
cmp
incb
sbb
leave
jle
push
daa
xor
mov
xchg
xchg
jmp
or
out
movsb
std
int3
jne
sti
and
push
pop
cmpsl
jne
dec
int
icebp
lahf
or
lcall
push
and
iret
dec
inc
and
push
sbb
cmp
or
fbld
movsb
xchg
aas
fmuls
shr
daa
push
std
pop
sub
pusha
out
dec
mov
mov
loopne
xor
loop
mov
jl
or
xor
mov
xchg
rol
mov
popf
aaa
mov
xor
push
inc
sub
and
and
push
mov
dec
sub
jecxz
jge
xor
or
xor
lock
cmp
cltd
ljmp
cmp
in
cmpsb
add
ss
scas
xor
or
mov
stos
cwtl
cwtl
mov
ljmp
mov
cltd
jge
mov
insl
scas
testl
adc
add
cmp
outsb
fwait
jecxz
repnz
lret
and
mov
mov
cmpsl
stc
push
int
jl
jne
aam
mov
jl
inc
sahf
adc
jp
xchg
inc
dec
ficompl
mov
les
mov
nop
lods
mov
call
sub
pop
cld
mov
xchg
int3
iret
imulb
cmc
int3
cld
sub
es
and
and
adc
mov
addr16
mov
inc
xchg
sti
mov
mov
push
dec
lock
ljmp
sbb
add
sarb
popf
nop
outsl
xchg
push
inc
xchg
push
subl
xchg
cmc
test
or
mov
mov
mov
arpl
pop
int3
push
stos
xor
sub
imul
out
push
aam
sub
das
push
pop
mov
sub
movsl
jnp
xchg
daa
ljmp
mov
or
test
stos
pop
jge
push
fsubl
loopne
jp
add
pop
stc
aas
cwtl
js
js
push
stos
pop
filds
mov
jb
bound
fnsave
out
into
dec
adc
add
scas
mov
fcomip
dec
push
neg
jno
mov
loopne
ss
sub
jl
jb
pusha
xchg
mov
mov
wbinvd
inc
loope
fwait
popa
stc
xlat
mov
ss
outsl
jb
mov
roll
inc
inc
arpl
lock
xchg
add
aaa
and
pop
movsl
or
adc
insl
dec
jmp
xchg
rorb
movsb
imul
sub
rorl
pop
inc
xor
or
sbb
andl
push
xchg
jecxz
mov
aad
sbb
inc
inc
out
add
mov
and
adc
inc
adc
mov
xchg
or
push
cs
scas
daa
xor
dec
inc
popa
ja
orl
lahf
cmp
mov
sbb
cltd
push
mov
pop
sbb
inc
sub
pop
repnz
scas
mov
push
mov
xchg
ret
jmp
dec
cltd
jnp
lcall
stc
js
push
cmp
sbb
mov
xlat
in
shll
cmp
dec
cs
push
shll
push
out
repnz
es
mov
cltd
sbb
repnz
out
cld
adc
loopne
xchg
lret
gs
pop
and
lods
icebp
jns
orl
xor
dec
arpl
jne
cmpl
test
bound
xchg
sub
fldt
fs
cmp
pop
insl
out
lret
pop
xchg
cmp
loopne
adc
and
push
inc
sbb
push
out
jmp
lock
push
and
mov
lods
sub
push
xchg
sub
test
add
add
fnstenv
stos
loope
inc
mov
cmp
sub
test
test
mov
movsl
push
test
imul
mov
sbb
mov
fidivrs
jns
rcl
add
or
mov
stos
or
loop
or
leave
sub
sahf
xchg
sub
icebp
pop
addr16
es
dec
pushf
sti
push
cs
jns
gs
pop
jge
lods
leave
stc
add
sbb
lret
leave
mov
cli
sub
xchg
aam
cmp
lret
and
add
cmp
or
test
mov
test
cmp
lahf
fmul
dec
xchg
adc
bound
ror
lcall
xchg
cmp
add
shr
fnstcw
jne
xlat
or
add
or
jp
jns
mov
pushf
lock
xchg
mov
ds
pop
int
sbb
out
loop
cmpsb
lcall
and
cli
icebp
jl
sub
das
jnp
or
aam
testb
cltd
pop
add
pop
popf
incb
fs
aad
sbb
mov
adc
inc
lret
arpl
and
je
and
aad
lock
mov
and
outsl
and
sub
test
outsl
sub
and
mov
xchg
inc
mov
loope
aad
rolb
adcl
fdivrl
add
cmpsl
cmpsl
fbld
lods
fidivs
sbb
push
or
pop
out
lods
jae
cmc
mov
xor
icebp
les
in
repz
fimull
jae
xor
xchg
or
cld
dec
pop
shll
xor
popa
movsb
sbb
shrb
pop
mov
jns
outsl
sub
out
cli
fsubrl
sbb
jb
out
mov
push
inc
pusha
push
stos
or
dec
or
into
cmp
in
mov
pop
inc
aas
cmpsl
repnz
push
movsl
sbb
imul
insl
jecxz
mov
sub
stos
cmp
mov
addr16
mov
fildl
popf
push
adc
adc
sbb
and
mov
mov
clc
fwait
mov
mov
js,pt
loop
in
push
fisttpl
sar
mov
movsb
aam
cwtl
mov
sub
or
mov
arpl
xchg
mov
sub
mov
stc
mov
and
mov
mov
cmp
mov
adc
hlt
mov
bound
jge
mov
outsb
jo
mov
das
mov
loopne
sub
mov
xor
dec
mov
push
pop
mov
cs
test
out
pop
mov
cld
jae
xor
decb
loop
pop
jno
xchg
in
pop
and
ja
cmp
iret
bound
stos
xlat
dec
mov
push
es
fadds
cmp
add
arpl
imul
outsb
xor
movsl
jecxz
mov
mov
stos
loope
inc
cwtl
in
pushf
dec
insb
mov
add
mov
push
sbb
mov
call
pop
pop
popf
imul
in
fadd
in
int3
adc
jns
scas
sbb
loop
and
movsb
mov
test
inc
lret
cmp
shlb
xchg
adc
inc
nop
sub
std
out
imul
out
bswap
loopne
fistpll
lret
sbb
je
decb
out
out
xchg
test
roll
inc
ret
int
mov
xchg
jb
sub
cmp
jp
adc
fildl
mov
fisttpl
repz
or
sar
lahf
lret
cmpsl
inc
pop
mov
pop
jecxz
or
push
inc
outsl
aam
cmp
mov
push
lret
lock
push
test
push
mov
fldz
mov
pop
cli
xor
loopne
dec
and
xor
ja
and
push
loope
push
cwtl
sub
int3
jle
mov
push
imul
xchg
mov
dec
push
je
pop
mov
lret
cwtl
adc
mov
out
pop
stos
enter
sbb
out
or
sarb
es
icebp
rorb
cs
xchg
shr
dec
xor
push
out
push
sbb
pop
fcoms
scas
cmp
nop
adc
dec
adc
jp
mov
jns
sbb
rorl
jo
dec
loopne
sub
loope
pushf
xchg
sub
push
push
daa
push
imul
fbstp
movsb
test
cmp
adc
push
sbb
mov
ds
xor
or
push
xchg
bound
push
test
dec
mov
outsb
mov
ucomiss
in
sbb
enter
aas
dec
add
sbb
dec
insl
test
or
lret
aaa
adc
enter
imul
addr16
lds
scas
mov
hlt
mov
sub
fsubrs
ja
mov
shl
ja
jp
fmull
mov
leave
mov
lret
push
hlt
clc
sahf
dec
imul
mov
jno
dec
nop
lahf
push
pop
fbld
push
mov
es
xorb
add
fiadds
sbb
jb
stc
sub
frstor
or
xchg
ficoml
mov
movb
mov
xor
inc
sbb
mov
test
pusha
mov
sub
jp
idivb
cwtl
pop
fwait
inc
movsb
mov
dec
xor
xor
loop
push
pop
decb
adc
xchg
xchg
pop
adc
leave
mov
shlb
push
push
das
pop
mov
sub
mov
pusha
jns
repnz
out
xchg
xchg
inc
mov
add
mov
stos
push
add
hlt
jnp
xor
pusha
vmovsldup
xor
push
sbb
ret
add
scas
mov
icebp
sub
ret
pop
and
call
adc
xchg
jp
imul
cmp
repz
pop
je
bound
sbb
or
or
inc
cmpsl
lahf
sub
addr16
popa
fcom
jmp
inc
movsl
outsl
leave
lods
insb
jns
int3
cmpsl
mov
imul
pop
push
subb
mov
insb
int
call
popf
outsb
sbb
add
mov
sbb
scas
scas
stos
inc
enter
enter
pop
mov
dec
cmp
push
jo
inc
sub
mov
pusha
out
adc
mov
addb
dec
mov
jp
repnz
jl
dec
sbb
test
clc
inc
imul
sub
inc
cmp
inc
ret
out
mov
pop
cmpsl
sub
jns
ljmp
inc
cwtl
aaa
and
adc
mov
cli
xchg
test
mov
cmp
rcrb
mov
test
shrb
lock
and
inc
sbbl
iret
aad
stos
mov
fidivl
insl
lods
cmp
add
mov
pop
testb
cmp
pop
pop
movsb
xchg
and
shrl
mov
icebp
dec
int3
aaa
enter
scas
leave
fimull
sub
sbb
cld
mov
out
in
dec
clc
sub
add
xchg
fcoml
pop
mov
sbb
inc
xchg
lcall
pop
bound
and
jbe
adc
pop
addr16
jno
add
xchg
fildll
dec
aam
mov
test
pushf
pop
enter
lret
inc
cmpsb
out
loope
lcall
mov
jne
adc
aam
pusha
pushf
iret
aad
lret
subb
adc
repz
int3
dec
inc
pop
inc
cli
jns
and
mov
dec
xor
xchg
mov
outsl
pop
adc
ret
inc
push
adc
movsb
and
mov
adc
imul
mov
push
adcl
cmpsb
cmp
push
popa
pop
cmp
and
sti
xchg
or
lds
lea
push
cs
outsl
and
add
fwait
aam
inc
dec
or
or
sub
test
out
lahf
xchg
add
adc
xor
or
and
mov
sub
xor
xchg
pop
outsl
adc
cmp
push
lods
xchg
pop
dec
push
inc
fwait
ds
das
mov
dec
sbb
mov
or
lahf
mov
dec
xchg
sub
arpl
outsl
inc
mov
js
mov
add
or
xor
add
pop
aad
mov
pop
ret
scas
adc
sub
xchg
addb
imul
stos
cmpsl
push
hlt
sbb
divl
or
test
push
xlat
jne
call
pop
or
imul
inc
out
es
mov
int3
cs
xchg
jl
out
pop
and
mov
shld
or
or
iret
cmp
pop
inc
push
lea
lahf
arpl
pushf
fwait
push
push
and
xchg
popa
negl
pop
lcall
lods
lret
test
rorl
dec
cmp
pop
xchg
lahf
mov
cmp
inc
pop
pop
jb
sub
mov
fsts
rolb
inc
add
sti
push
mov
mov
add
dec
dec
cmpsl
mov
adc
jp
fnstsw
jmp
mov
or
in
add
mov
push
cmpsb
iret
rclb
xlat
lahf
sbb
pop
popf
std
ljmp
or
cmp
cmp
dec
movsl
xor
mov
addr16
adc
scas
movsl
push
or
xchg
dec
adc
sbb
out
dec
ss
or
int3
andb
mov
aaa
push
vpshad
mov
xor
cmp
inc
adc
stc
mov
dec
and
sahf
xchg
pop
cltd
dec
roll
repnz
dec
out
and
push
bound
pop
fcoml
sarl
fcoml
push
cmpsl
je
das
pop
push
shrb
jg
lods
or
lea
xchg
add
divb
mov
lcall
out
fsubrl
or
mov
mov
mov
test
test
cmp
dec
sbb
jns
jns
outsb
addr16
cmpsb
imul
int3
data16
xchg
int
or
arpl
inc
cmp
outsb
rorb
jne
mov
popa
loop
out
or
test
pushf
in
sbb
and
adc
inc
push
mov
jmp
shrl
cs
pop
add
pop
das
cmc
inc
mov
cmpsl
mov
pop
in
repz
outsl
fwait
inc
jecxz
rclb
or
lcall
push
ss
movsl
ds
push
or
or
mov
iret
gs
pusha
lods
adc
mov
test
adc
jle
mov
lods
push
jb
dec
clc
pop
clc
mov
popf
and
bound
pop
inc
adc
std
inc
jno
test
jne
arpl
lods
cmp
enter
inc
cmp
jge
inc
es
dec
aaa
xchg
fdiv
mov
repnz
mov
mov
lods
mov
push
dec
xchg
pop
pop
repnz
jle
dec
lods
cli
icebp
jb
mov
jle
into
movsl
cmpsb
hlt
xor
sub
test
loope
fsts
aam
push
pop
pop
sub
adc
jo
daa
sbb
fdivrs
push
cmp
iret
cltd
mov
sub
rolb
mov
sub
fwait
mov
cwtl
stc
fidivrs
cmc
call
jnp
pop
loop
add
scas
mov
cwtl
mov
into
es
mov
or
jns
xchg
negb
out
mov
add
cmp
aaa
cmp
xchg
push
mov
mov
xor
or
clc
out
fistps
xor
mov
inc
add
lods
arpl
rcrb
dec
sbb
xor
mov
rcll
scas
xchg
mov
and
xchg
mov
cmp
movsb
aad
dec
jl
lcall
leave
jl
insb
movsl
xchg
xlat
scas
jge
lods
mov
jo
std
lds
mov
mov
ret
push
aas
or
push
loope
addr16
in
icebp
out
inc
mov
iret
out
inc
dec
dec
xchg
dec
push
sub
out
scas
jne
adc
mov
jp
movsb
std
out
mov
push
jle
and
xchg
push
fwait
add
scas
frstpm(287
stos
daa
lea
out
insl
insl
push
int
jmp
lods
mov
loope
sbb
mov
iret
push
jle
rolb
mov
mov
xor
leave
dec
push
adc
loopne
lods
incl
mov
shll
cmpsl
mov
bound
jae
stos
adc
mov
icebp
xchg
in
sbb
jns
sbb
or
and
cmp
fidivrl
repnz
dec
dec
jmp
xchg
shlb
mov
jmp
xchg
popa
enter
out
aas
clc
jmp
push
jo
sub
sar
cmpl
push
adc
call
cltd
xor
adc
jne
hlt
fucomp
inc
pop
aaa
sub
sahf
mov
jne
data16
push
pushf
dec
or
rcll
icebp
cmp
mov
sub
push
sbb
fsubrs
xchg
ljmp
lret
cmp
pop
xchg
mov
pusha
xor
leave
aad
mov
lea
jmp
js
rolb
sti
push
sub
and
or
mov
popf
divl
fisubl
sarl
or
cli
mov
push
jp
in
mov
stos
imul
ss
sub
iret
push
pop
iret
mov
lret
notb
pop
pusha
pop
cs
out
cmp
inc
loope
ds
adc
cs
cwtl
sbb
cmp
xchg
pop
sub
loop
xchg
jbe
shrb
sti
in
sub
sbb
sbb
jmp
push
adc
into
out
cltd
bound
mov
std
rolb
or
jmp
dec
lea
pop
mov
mov
cmp
sti
mov
and
cmp
or
shld
pop
mov
sub
in
push
add
dec
cmp
inc
outsl
movsb
sub
sbb
pop
mov
jns
mov
clc
jl
test
pop
xchg
insl
adcb
sbb
inc
pop
stos
subl
call
out
daa
fdivrl
pop
sub
jo
loopne
sti
pop
jge
push
or
negl
fwait
add
sub
xchg
cmpsl
mov
pop
mull
pop
or
fsubrl
xor
fstpl
add
and
adc
into
and
xchg
cmc
mov
xor
fcomps
test
movsl
repz
jmp
insb
jb
call
pop
out
lods
shl
adc
or
outsb
add
les
push
jno
xor
subb
pop
lret
fiadds
and
pop
scas
movsb
hlt
in
mov
pop
aad
jge
push
leave
imul
adc
push
into
ret
xor
ja
pop
repz
pop
call
add
cmc
lret
push
daa
push
roll
sbb
push
ret
jne
shll
and
jp
xor
add
or
mov
movsl
jg
nop
xchg
ss
roll
xor
cmp
ss
sbb
jno
or
sub
lret
push
add
addl
inc
xlat
jl
xchg
cmp
div
inc
mov
cld
inc
xchg
das
in
sbb
pop
jae
arpl
mov
push
cli
or
leave
out
jmp
mov
cld
inc
hlt
addl
out
sub
xchg
mov
mov
repnz
repnz
and
sbb
xchg
and
in
mov
orb
cmp
fdivrp
cld
adc
mov
test
sbb
repnz
dec
cwtl
test
cwtl
sbb
lret
pop
out
push
pop
fisttpll
xchg
arpl
add
fs
jl
outsb
sub
mov
sbb
jb
jle
push
adc
adc
ds
lods
push
outsl
jae
cbtw
ja
dec
outsb
cmp
roll
cmp
fiadds
cs
push
clc
sub
stos
jle
jge
sahf
jmp
mov
outsl
push
pusha
test
inc
hlt
cmp
push
scas
aaa
sarb
cs
jne
lds
lret
or
sub
adc
mov
jae
mov
clc
mov
int3
pop
ss
xchg
or
repnz
mov
push
bnd
inc
push
movsb
xor
push
out
push
inc
xor
mov
inc
outsb
gs
sbb
push
mov
adc
mov
mov
gs
fs
push
or
cmp
xlat
pop
popf
popa
cs
cmp
xchg
out
adc
mov
jmp
int
push
stos
or
jne
and
add
mov
fs
dec
call
mov
xor
inc
repnz
jae
sub
jl
mov
push
in
jecxz
lcall
in
popa
fidivrs
mov
addr16
inc
int3
sarl
push
or
mov
or
insl
orb
sub
fyl2x
fcomi
out
dec
fisttps
lcall
jmp
repnz
and
mov
add
sub
push
outsb
test
add
lods
jb
cld
pop
ds
sbb
adc
mov
jb
rclb
dec
fidivrs
xor
jg
jge
mov
les
dec
sub
scas
mov
adc
and
cltd
add
mov
xchg
scas
popa
lahf
inc
mov
or
imul
ret
dec
jmp
mov
out
pop
dec
pop
mov
xchg
enter
and
daa
adc
out
insl
lods
inc
mov
cmp
xor
test
cwtl
arpl
popa
ret
or
push
repz
mov
xchg
mov
mov
or
xor
lock
mov
jg
call
fidivrs
mov
xchg
push
and
sbb
xchg
sbb
mov
lea
mov
gs
inc
xchg
jne
aaa
jno
ret
xchg
fwait
test
push
scas
jne
addr16
fwait
push
enter
add
lahf
sbb
sbb
mov
or
inc
cmp
mul
andl
std
pop
push
in
xorl
iret
je
into
xchg
cmpsb
mov
cmp
sub
pop
pop
jp
out
inc
xor
loopne
sub
mov
dec
mov
adc
mov
movb
rcr
aad
inc
aaa
dec
adc
jmp
dec
add
push
adc
sbb
adc
mov
setns
filds
lods
fistpl
jo
addr16
ret
frstor
sbb
push
or
jne
test
outsl
dec
pop
add
mov
bound
mov
or
xchg
sub
xchg
add
mov
mov
adc
dec
daa
scas
cmpsb
imulb
ljmp
mov
pop
les
and
cs
int
clc
loopne
sbb
inc
ret
push
xchg
icebp
fcomps
inc
iret
mov
movsl
arpl
aas
cmp
lods
xchg
cltd
ret
outsb
mov
jne,pt
and
mov
iret
das
push
fnstsw
sti
xchg
subb
mov
ret
js
jmp
inc
rclb
dec
cli
loopne
or
inc
or
mov
test
cmp
mov
xchg
aas
rorb
fwait
jae
xchg
ds
sbb
and
mov
sbb
scas
pop
in
dec
lret
out
into
inc
jge
and
test
and
fadd
ljmp
jne
std
push
mov
repnz
dec
cwtl
mov
sbb
test
xchg
movsl
pushl
aad
jne
mov
sub
add
mov
decl
mov
xchg
pop
call
sub
inc
mov
pop
mov
cmp
mov
xor
imul
inc
lods
xchg
cs
gs
arpl
aaa
sahf
aam
pminub
leave
outsb
lock
outsb
call
adc
and
pop
push
or
daa
mov
out
int3
nop
mulb
mov
sub
pusha
ret
jp
neg
sbb
movsb
outsb
and
popa
fucomi
adc
adc
lcall
mov
jae
ljmp
movsl
test
adc
leave
fsincos
aam
fisttps
fwait
repz
cmc
insl
loope
je
and
cmc
iret
xor
in
je
lcall
xchg
pop
add
pop
xor
xchg
mov
pushf
testb
repnz
sub
out
in
lds
add
push
movsb
push
cmp
imul
push
test
or
shlb
repnz
dec
xlat
mov
cmp
jne
pop
paddw
xchg
and
push
jnp
lock
out
mov
jae
divl
out
push
and
push
mov
cmp
cltd
fwait
mov
outsl
mull
mov
ljmp
xlat
sbb
or
ja
mov
xor
pusha
stos
push
cmc
xchg
mov
in
pop
mov
dec
jecxz
pop
sbb
insl
shlb
adc
neg
push
xchg
xchg
faddl
pop
mov
mov
inc
mov
xchg
lea
mov
xchg
fcmovbe
outsb
and
xchg
dec
lock
sbb
sub
pop
fisttps
insb
clc
and
leave
push
jp
stos
cltd
cmp
mov
cwtl
int
cmove
and
aam
jmp
mov
cltd
mov
or
or
xor
jecxz
movsb
xchg
add
cmp
test
in
pop
mov
mov
stc
add
out
adc
lock
out
jbe
andl
cli
out
dec
je
out
and
repz
aas
sub
dec
inc
and
add
mov
or
xchg
and
ja
out
xorl
movsl
int3
out
repz
add
and
cmp
es
pop
das
aaa
jecxz
in
mov
sub
mov
and
cltd
fimull
out
into
xchg
sub
test
enter
shll
repz
inc
sbb
popa
push
mov
xchg
repnz
inc
push
dec
xchg
ds
popf
int3
dec
mov
xorl
bound
cmp
dec
mov
dec
mov
jno
or
xor
cltd
repz
punpcklbw
mov
rcll
inc
and
mov
cli
or
pop
rol
jmp
and
test
push
pop
fcmovbe
out
or
mov
das
inc
fcomp
mov
sbb
sub
push
dec
scas
sbb
in
jle
jg
out
in
jge
addr16
dec
cmp
adc
or
lret
in
imul
push
nop
insb
in
add
adc
cltd
mov
jecxz
sbb
pusha
mov
jle
imul
jno
std
jae
inc
jbe
testb
jl
out
cmp
test
mov
sbb
gs
or
imul
std
adc
fldt
sub
lea
incb
fildl
sti
xor
or
push
sahf
push
cli
les
lcall
ja
pop
popa
and
or
cmpsb
adc
mov
arpl
lock
jbe
lea
outsb
inc
cmp
mov
sub
repnz
pusha
and
pop
fwait
or
test
push
mov
test
outsb
mov
add
jmp
cmpl
or
push
dec
jge
push
xchg
mov
cs
in
xor
lahf
push
leave
aaa
test
push
test
sub
pop
adc
mov
pop
fdivrl
inc
cmp
repnz
jecxz
loop
shlb
mov
data16
sahf
push
cmpsl
out
adc
in
mov
mov
inc
js
mov
out
adc
daa
lods
fisubrl
and
lret
or
frstor
outsb
xchg
mov
and
or
sahf
stos
repz
mov
cvtdq2ps
lahf
lods
mov
xchg
pop
aad
test
push
loopne
jecxz
rcrb
fildll
lret
inc
shlb
cmp
jmp
insl
xchg
and
add
sti
fdivrp
xor
pop
jns
repnz
dec
and
es
push
call
xor
or
clc
mov
jle
add
cmp
cmp
adc
cmp
jg
nop
xchg
sbb
jae
add
fsts
jmp
jl
mov
jae
movsb
push
or
add
and
dec
lds
mov
xchg
xor
mov
inc
xor
push
jg,pt
lods
hlt
mov
pop
pop
push
scas
mov
aas
movsl
xchg
cmpsl
movsl
dec
jl
jb
xchg
inc
cmc
adc
gs
dec
dec
and
hlt
or
dec
iret
adc
mov
mov
jp
aam
cmp
mov
dec
movsb
fimull
aas
mov
popa
cmpsl
cmpb
adc
outsb
sbb
mov
repz
lods
add
daa
aam
rep
cmpsl
js
sbb
sbb
inc
pop
ja
sbb
push
movb
xchg
test
int3
negb
pop
xor
stos
je
cmp
movb
movl
jb
in
jp
mov
pop
add
jns
dec
jo
aas
jb
pushl
ret
in
xor
lret
mov
loopne
sbb
pop
pop
push
mov
nop
mov
and
cmp
out
cmpsb
xor
cmp
jbe
ret
jmp
add
sbb
adc
inc
pop
pop
jnp
mov
xor
inc
imul
stos
xchg
jbe
cmp
and
je
sarb
pop
sub
fsubr
dec
push
scas
inc
xchg
pop
gs
sbb
adc
cmpsl
pop
es
enter
ret
xchg
frstor
and
sub
lods
xchg
mov
push
xchg
and
jns
add
mov
dec
dec
sbb
inc
rorb
push
xor
scas
cwtl
mov
sub
dec
bound
add
push
sar
fs
icebp
inc
sub
or
frstor
cmpsl
xor
and
push
outsl
sub
mov
ljmp
in
test
mov
dec
js
arpl
mov
or
cltd
xorl
jnp
cli
sarl
push
fisubl
mov
nop
outsl
imul
stos
ljmp
jne,pt
insb
push
xchg
in
pop
xchg
out
or
jecxz
cmp
arpl
adc
mov
test
cmpsl
push
cmp
in
sbb
inc
ljmp
or
ret
fildl
or
push
mov
and
mov
fisubl
mov
mov
lea
insb
mov
and
es
jg
cld
mov
jne
mov
or
fs
lods
sub
jbe
or
xor
push
pop
icebp
jns
pop
test
mov
arpl
popa
sbbb
mov
repnz
mov
xchg
pop
sub
xor
cmp
ret
in
iret
mov
mov
or
mov
aas
fwait
mov
adc
addr16
mov
inc
aaa
xchg
int
mov
adc
cmp
pop
sbb
dec
add
insb
or
inc
fldt
scas
out
into
dec
loop
je
int3
shl
mov
aas
mov
loopne
mov
pusha
lahf
mov
pop
push
insb
jb
push
mov
lret
imul
out
lret
dec
jp
lock
and
sti
daa
jne
xor
testl
and
or
push
xor
mov
movsl
test
jle
icebp
sub
ljmp
lcall
mov
sbb
xchg
sbb
clc
out
out
jecxz
and
mov
pop
add
sbb
mov
hlt
rorl
or
pop
fistpl
cmp
pushf
into
sbb
hlt
dec
shl
stos
jne
pop
ljmp
in
add
lret
jmp
inc
icebp
ds
dec
pop
inc
frstor
das
ret
jne
jae
add
xor
jnp
popl
inc
ds
jnp
scas
xchg
inc
cmpsb
outsb
dec
fldcw
mov
add
jbe
sbb
xlat
jp
outsl
enter
fsubs
rcll
imul
scas
xlat
adc
out
sbb
jne
sbb
adc
push
aaa
inc
insb
jmp
mov
xchg
das
in
adc
cld
scas
mov
adcb
test
mov
sub
xor
pop
adc
lock
sub
pusha
xor
in
loop
imul
fnstenv
pop
sbb
mov
call
mov
push
jl
popa
mov
adc
movsb
call
inc
insb
addl
mov
sbb
movsl
test
xor
fidivrl
or
dec
pcmpgtb
pop
cmpsl
addl
out
stos
jnp
jb
je
test
jge
mov
jp
nop
fmul
decb
mov
into
mov
imul
push
imul
jns
mov
negl
push
jnp
pop
and
cmp
pop
push
xchg
sub
arpl
mov
push
addl
sbb
stos
popa
aas
xchg
ljmp
adc
cwtl
pop
mov
add
dec
add
insl
xchg
hlt
dec
test
cmp
out
adc
xor
adc
cmp
popf
mov
xorb
fpatan
mull
mov
fdivp
inc
dec
pop
pusha
xor
jns
sbb
outsb
mov
push
mov
scas
xor
cmpb
and
bound
push
jle
mov
fldt
jne
sub
loope
lcall
dec
cwtl
aam
dec
adc
fucom
aam
mov
xor
sub
rolb
decl
xor
inc
sbb
push
daa
je
test
push
inc
int
in
xchg
jno
mov
pop
adc
xchg
mov
popf
pop
adc
add
add
out
pop
loop
adc
jg
movl
sub
adc
fmull
jecxz
cmpl
dec
xor
enter
in
mov
mov
mov
sub
mov
pop
push
add
cmp
lea
outsl
mov
add
cmp
stos
sub
mov
xchg
mov
sub
sti
jb
pop
test
push
bound
add
push
mov
ds
out
nop
enter
inc
push
sarb
inc
test
idivb
lods
dec
int
pop
nop
orl
add
xor
sarl
xchg
lods
xchg
dec
pop
lods
int
fcoml
stos
mov
lahf
mov
xchg
xor
incl
movsl
leave
push
mov
ss
sbb
sub
sbb
clc
js
lds
cmp
daa
xor
sbb
data16
lods
mov
insl
mov
sub
ss
fs
ss
pop
jle
rolb
lods
mov
sbb
or
xlat
push
mov
sub
addr16
es
xchg
sbb
xor
cmp
rcrl
aas
fwait
shl
mov
mov
or
stos
or
pop
cmp
and
subb
sahf
fsubs
out
adc
dec
jge
pop
jp
mov
out
sub
mov
or
in
add
int
sbb
and
or
adc
or
pushf
push
lea
test
jp
push
mov
clc
repz
mov
push
pop
icebp
rcrb
xchg
lret
jbe
pop
aaa
pop
lret
lea
mov
and
sub
xlat
je
add
jo
fsubrp
movsb
leave
int3
push
fildll
mov
jle
int
and
cmp
cli
pop
out
pushf
mov
nop
cltd
pop
dec
pushf
jne
cld
jae
scas
icebp
in
jl
insb
movsb
add
push
mov
mov
jecxz
add
ret
xchg
jb
std
pop
push
add
sbb
jecxz
or
imul
adcl
dec
cmp
xor
mov
cmp
mov
add
adc
icebp
insl
push
cmovp
jb
lret
outsl
push
lcall
mov
mov
xchg
out
hlt
insl
call
gs
cs
test
test
xchg
adcl
add
push
or
add
adc
dec
lret
popf
in
ret
push
inc
mov
sarl
cli
mov
jle
xlat
add
fiadds
push
lahf
push
xchg
lret
push
or
mov
daa
jo
loop
rcl
sbb
mov
imul
xlat
pusha
xchg
dec
ret
lret
pop
mov
sbb
lds
mov
and
jae
icebp
xchg
push
popf
es
jl
add
fldenv
shrl
sbb
lret
jbe
cmp
and
push
adc
or
and
stos
sub
pop
dec
or
int
decb
or
xchg
adc
mov
imul
jbe
xor
push
xor
push
roll
push
in
push
cmp
insl
push
jmp
add
in
jns
test
inc
mov
pop
lea
mov
clc
sub
std
and
mov
les
das
pop
add
cli
js
negl
loop
daa
dec
and
push
xor
inc
aad
push
add
and
inc
aas
ret
sub
sub
int3
movsl
xchg
call
jge
aaa
cli
movsb
cmp
and
and
movsl
sub
jp
test
sbb
adc
sbb
cmp
scas
inc
sub
dec
in
in
jge
je,pt
fwait
sbb
cli
or
push
or
mov
loope
inc
ja
jo
jne
outsb
pop
lret
sahf
adc
insb
inc
stc
pop
cld
pop
mov
cwtl
pushf
pop
cs
mov
push
inc
icebp
sahf
leave
int
pop
xchg
push
imul
add
imul
sub
lahf
scas
pusha
in
cli
ret
cld
movb
out
push
cmc
mov
lret
das
jmp
jae
pop
adc
sbb
in
or
loopne
adc
lret
int3
sbb
mov
movsb
into
jbe
xor
ljmp
out
movsl
mov
jno
roll
sbb
and
sti
inc
add
jge
jl
xchg
out
fwait
push
mov
aas
scas
jge
mov
xchg
rol
pop
mov
and
mov
lret
movsl
lea
pop
cmp
fdivs
and
popa
aaa
int
out
adc
fdivl
cmc
jmp
sub
push
lea
mov
sahf
or
ja
inc
mov
and
movb
scas
in
fisubrs
das
in
popf
or
jne
hlt
xor
mov
jae
pusha
das
jae
rcrl
or
gs
push
mov
mov
in
lods
popa
fsincos
mov
mov
and
out
cmp
pop
xchg
jmp
les
js
or
aam
enter
divl
movsl
push
pop
addl
mov
scas
push
nop
sub
or
sub
or
lods
lock
mov
ljmp
jns
mov
adc
ljmp
movsl
in
cltd
cmp
and
mov
sbb
add
scas
das
cmpsb
sub
mov
stos
xchg
enter
sub
push
xchg
mov
jle
shll
ja
in
jo
add
je
mov
das
dec
in
mov
or
pushl
push
mov
dec
mov
stos
mov
sub
dec
pusha
imulb
jg
repz
int3
imul
out
sbb
xchg
das
imulb
ss
call
push
adc
push
cmp
mov
xchg
iret
and
xchg
cmc
aam
sub
fmuls
mov
fildl
sbb
jl
sub
inc
adc
pand
insl
xor
stos
pop
sahf
push
xchg
daa
sbb
dec
sti
xchg
mov
sbb
sbb
push
fnsave
and
pop
mov
mov
enter
push
mov
jns,pt
jge
lds
jb
mov
rorb
jmp
in
jb
jns
sub
xchg
push
imul
in
movsl
sbb
jle
enter
stos
dec
sub
mov
or
mov
js
or
repz
mov
push
in
jne
add
leave
out
insb
push
mov
jae
lds
mov
jno
mov
pop
movsl
fsubr
adc
dec
stc
jle
lock
lret
pop
push
mov
push
jno
inc
ss
sbbb
push
je
lahf
dec
rolb
sbb
mov
cmp
dec
and
dec
fs
and
cltd
mov
adc
push
add
jmp
fxam
xlat
dec
adc
mov
jecxz
aas
mov
xor
test
out
push
test
fildl
pop
pushf
push
sub
sub
mov
daa
jecxz
pop
dec
cld
outsl
sub
scas
aam
test
jp
adc
js
add
xor
dec
add
mov
pop
sahf
mov
or
cmp
sti
push
and
pop
test
sub
scas
mov
into
mov
mov
in
add
pop
mov
mov
aaa
leave
pop
add
pop
daa
sub
ss
xor
outsl
jo
rcrl
sub
sub
cmp
in
pop
jmp
test
xor
sbb
add
pop
out
fwait
adc
xchg
ja
pop
les
out
jg
movsb
xor
mov
cli
outsb
lret
clc
stc
ret
cld
fists
fists
adc
jl
mov
inc
leave
and
mov
loop
add
sub
inc
lahf
mov
mov
pop
mov
add
dec
push
sbb
mov
jo
int
sbb
xor
push
adc
dec
xchg
inc
pop
or
inc
aas
pop
sub
cmp
fidivs
mov
sti
and
sub
pusha
jge
sbb
xor
cmpl
and
ds
je
xor
adc
lahf
push
out
movsl
and
cmp
jbe
and
sbb
mov
jp
lods
nop
fdivrl
mov
adc
aad
loop
lret
cmp
add
inc
fcmovnu
lcall
fadds
jp
adc
nop
push
sti
jge
scas
imul
adc
adc
fcomp
mov
hlt
into
adc
pop
xchg
and
daa
popf
cmpsl
sub
xchg
fbld
cwtl
add
bound
movsb
xor
adc
pop
inc
popa
cmp
data16
test
push
out
dec
cmpsl
push
loope
inc
mov
push
mov
mov
sarb
icebp
lock
mov
mov
inc
mov
in
mov
or
mov
adc
arpl
jo
mov
outsb
jg
outsl
sub
add
iret
mov
add
xchg
adc
mov
out
stos
popa
or
xor
clc
mov
int3
lahf
jmp
nop
push
cmpsl
in
andl
pop
cmp
cmp
and
jg
iret
inc
fisubrs
mov
and
out
push
xor
ficompl
add
cmc
xor
cs
aad
xor
or
enter
enter
mov
test
nop
in
inc
outsb
sub
pop
into
jae
push
push
mov
push
pop
cmp
inc
inc
jbe
js
mov
pop
xchg
mov
aas
clc
outsl
mov
bound
push
xchg
mov
xchg
jecxz
mov
je
fmuls
mov
jb
scas
inc
stc
fsub
scas
ss
mov
push
lods
insb
ljmp
pop
aam
xorb
jae
cmc
mov
jo
test
inc
mov
xchg
movsb
imul
sbb
pop
mov
fs
mov
push
inc
xchg
push
int3
outsl
lret
jnp
dec
divb
adc
jae
cmp
orb
xchg
dec
pop
rclb
lret
mov
pop
pop
inc
xlat
pushf
sub
xor
ljmp
inc
jp
outsb
mov
clc
cmc
outsb
push
jnp
icebp
lock
les
and
mov
ficoms
mov
mov
leave
and
sub
aas
mov
sub
test
mov
mov
iret
adc
mov
mov
jp
sub
jne
nop
lret
loopne
xlat
sarl
pusha
jp
popa
hlt
shll
scas
sbb
mov
xchg
call
or
test
ret
mov
cltd
scas
bndldx
mull
dec
push
push
xor
add
adc
bound
mov
pop
aad
aas
pop
cli
pushf
jle
jge
cmpb
outsl
pop
cli
push
pusha
imul
out
sub
dec
mov
and
pop
bound
mov
cmp
roll
sub
test
inc
xchg
cmp
in
fbld
aas
loop
lahf
dec
clc
fcomip
dec
jl
dec
pushf
mov
in
cld
pop
and
xchg
into
repnz
xor
cmp
inc
dec
dec
jle
sub
imul
dec
or
xor
loop
inc
pop
fnstenv
imul
and
inc
adcl
sbb
cltd
xchg
test
shrl
or
sbb
lahf
push
addr16
jle
xor
add
mov
cmp
enter
bound
inc
xor
cmp
mov
pusha
arpl
fwait
aam
jp
int3
shlb
not
jbe
xchg
mov
aad
test
jmp
cltd
sbb
ja
stos
stc
das
add
aad
clc
sbb
xor
mov
jns
daa
xor
in
jae
scas
xchg
inc
cmc
push
inc
imul
cmp
jnp
js
aas
add
shrl
pushf
xor
xchg
mov
push
fucomi
push
add
es
sbb
sub
sub
sarb
sub
adc
jne
push
mov
jl
loopne
pop
test
into
data16
xchg
in
mov
mov
and
ficomps
xor
aam
js
or
inc
test
pop
enter
movsb
push
fwait
imul
sub
into
cmpsb
in
pop
sub
fwait
mov
push
mov
dec
fdiv
push
add
idivl
cvtpi2ps
mov
imul
into
mov
jbe
lock
movsl
out
repz
add
sbb
dec
jmp
outsl
xor
call
lret
jno
xor
cmp
xchg
mov
loop
sub
shrb
mov
imul
lea
lock
xor
or
loop
inc
dec
xor
and
loop
fildl
faddp
sub
arpl
xchg
cmc
push
xchg
insl
fmuls
pusha
inc
nop
cmp
loopne
pop
xchg
push
mov
sbb
daa
sarl
push
ja
jg
mov
and
xchg
cli
and
add
jge
insb
push
outsl
js
nop
jbe
sbb
nop
inc
stc
daa
aad
fwait
inc
pop
add
stos
out
xchg
fstl
in
fstpl
add
shl
jg
and
jmp
mov
or
xor
shlb
cmp
ljmp
jl
push
sbb
inc
cvttps2pi
outsl
fdivrs
int
mov
testl
negb
adc
ljmp
ret
je
out
pop
out
enter
repz
pop
stc
outsl
ret
push
add
push
add
dec
xchg
pop
mov
or
add
xor
lock
mov
mov
repnz
mov
outsl
and
add
lods
sbb
stos
loopne
jle
ret
scas
repz
aad
dec
jns
negb
cmpsb
jle
es
mov
pop
xchg
jg
adc
js
iret
inc
jge
in
add
clc
sub
sub
aad
add
lret
fidivrl
push
fstps
mov
scas
and
out
mov
jnp
cmp
repz
in
push
mov
movsl
or
insb
pop
mov
mov
sbb
sub
jl
xlat
add
add
cmp
gs
cmp
popa
cmpb
cmp
nop
cmp
lock
add
and
push
mov
sbb
push
js
mov
cld
out
imul
or
std
cmp
enter
insb
lcall
fs
pop
iret
nop
push
cmp
incl
cmp
nop
cld
icebp
test
aad
ds
push
jne
fstpt
out
pop
mov
fucomp
and
and
xorl
push
loop
add
sbb
leave
outsb
dec
pop
or
addl
push
sub
xchg
insl
cmpl
push
clc
mov
shll
xchg
int3
add
xlat
xchg
imul
sbb
lret
out
fsubrl
dec
pushf
mov
and
mov
cmp
mov
int3
lods
or
subb
rclb
js
fnsetpm(287
or
dec
pop
sbb
pop
cmp
inc
ret
adc
mov
xchg
sub
push
adc
popa
xlat
mov
cmp
cmpsb
push
addr16
lret
or
hlt
sub
in
int
jae
sti
sbb
cwtl
jbe
sbb
daa
shrb
mov
into
jnp
test
outsb
mov
out
cs
add
call
ds
xchg
jnp
mov
scas
inc
je
adc
insl
movsb
lods
xor
hlt
hlt
je
mov
stos
sbb
xcrypt-ofb
cmpsl
sub
mov
scas
sub
jno
data16
or
pop
mov
xor
popa
cmp
ja
ja
sbb
fsubrp
cwtl
stos
mov
mov
inc
lea
push
sub
mov
push
sub
mov
pmaddwd
stos
mov
sub
push
cmp
aas
and
fidivs
repnz
ss
fnstsw
cmpsl
mov
sub
ret
sbb
mov
cmp
xor
adc
enter
adc
andl
mov
mov
push
mov
and
shrl
lock
ret
xchg
inc
pop
fnstenv
scas
jae
rorb
insl
jbe
adc
pop
sbb
daa
js
cmp
xchg
fldcw
pop
nop
push
jp
cmp
push
arpl
cmpsl
xchg
add
mov
loop
sbb
inc
mov
xchg
mov
frstor
jno
jns
mov
mov
ret
cmpsb
lock
daa
jmp
inc
outsl
xor
aad
stos
push
jl
dec
push
sbb
pushf
xchg
and
lahf
into
and
pop
pop
jl
adc
lock
lahf
mov
and
mov
inc
jae
movsl
popa
fimull
push
sbb
adc
jne
sti
xchg
xchg
inc
andb
sarl
mov
mov
or
fldl
pop
xor
mov
adc
sbb
pop
xchg
les
aas
movsl
scas
in
sub
out
sub
lcall
out
aad
cmp
loopne
fnstenv
mov
xlat
insb
scas
inc
mov
je
or
adc
int3
or
push
in
fcmovbe
aam
sub
xchg
mov
push
call
jp
jmp
jp
js
mov
in
dec
fisttps
add
imul
in
cltd
mov
lret
call
int
adc
xchg
popa
cld
mov
pushf
sub
andb
xlat
mov
sarl
mov
jnp
cs
nop
or
lret
add
outsl
daa
rol
cmp
cmp
repz
outsb
call
icebp
push
push
jbe
push
jbe
jnp
fucomip
ss
inc
mov
nop
aas
mov
mov
fistpl
into
lret
insl
inc
push
out
int3
stos
imul
cld
out
add
adc
repnz
and
mov
and
int3
repnz
sbb
fs
dec
popa
test
stos
icebp
cmpsb
shll
xor
inc
fmuls
mov
push
pop
call
bound
enter
jo
push
fwait
push
out
rolb
gs
sti
mov
dec
ja
ret
or
cmp
mov
dec
in
jp
test
cmp
fstps
jmp
js
aam
js
ss
lock
in
das
mov
lods
push
inc
stc
gs
repnz
out
cmpb
sub
mov
mov
mov
ss
jns
fsubrl
gs
ljmp
lret
dec
cld
popf
pop
jnp
scas
jmp
ret
ret
hlt
sbb
sarl
dec
mov
xlat
ss
sti
movsb
xchg
pop
push
dec
into
mov
sbb
adc
and
pop
or
fsubr
icebp
xor
or
sub
jmp
push
int
dec
das
gs
or
lock
and
repz
mov
sbb
dec
jl
push
jb
add
pop
push
gs
pop
stos
inc
mov
insb
push
sbb
or
pop
lret
or
and
and
pop
push
scas
leave
cltd
jae
jnp
out
aas
mov
mov
pop
fwait
xchg
outsl
mov
es
jge
push
push
jp
test
sbb
movsb
js
fdivrl
dec
mov
leave
cmc
pushf
mov
push
sub
pusha
enter
cmpsb
mov
sbb
jg
push
xor
cmovle
rorb
mov
subl
or
nop
xlat
nop
loopne
jmp
and
int3
rcrb
jecxz
cmp
jecxz
sub
adcl
loope
mov
es
and
pop
adc
xchg
inc
iret
jmp
cmp
fists
inc
jo
scas
sarl
lahf
add
mov
mov
add
jns
ret
sbb
xorl
mov
or
adc
sub
cvtdq2ps
shlb
mov
adc
mov
stos
sbb
and
fwait
xchg
lcall
les
loop,pn
addb
shll
imul
cltd
add
push
jge
repnz
xor
imul
mov
pop
or
in
addl
jnp
lea
mov
das
xchg
mov
mov
pop
fisttps
iret
xorl
dec
je
sbb
push
cs
enter
jl
pop
lods
xchg
in
enter
hlt
mov
jno
adc
push
stos
in
loopne
stc
inc
call
mov
xorb
mov
fcomi
xor
es
push
xchg
mov
in
sub
mov
imul
dec
adc
sarb
adc
imul
std
and
test
sub
cmpsl
pop
stos
daa
aam
mov
push
out
fisttpl
xchg
push
pop
fiaddl
je
mov
jl
adc
mov
ret
in
mov
sahf
ret
adc
push
lret
push
out
mov
sub
mov
ficoms
arpl
or
pop
je
fimull
mov
push
adc
mov
mull
adc
stc
inc
mov
repnz
jnp
insb
adc
test
gs
ljmp
adc
inc
mov
push
icebp
pop
int3
subb
cmp
inc
fadd
push
xor
and
fiadds
rcrb
rorl
int
mov
outsb
and
clc
shl
cmp
xchg
push
std
sub
adc
mov
nop
cmp
fidivs
sub
ljmp
add
add
cmp
mov
or
dec
fstpl
mov
pop
das
or
test
pop
ret
cld
idivl
stc
imul
xlat
dec
jb
sbb
add
inc
outsl
add
and
pushf
mov
insb
arpl
subb
aaa
test
push
enter
jg
mov
ds
or
dec
das
scas
cmp
mov
rolb
cmc
outsb
or
push
jmp
aad
and
dec
mov
lods
or
lods
in
in
or
cmp
loop
add
popa
cld
ret
sbb
lds
jnp
shl
clc
cmp
lret
fsub
imul
or
call
push
faddp
pop
inc
pop
push
pop
dec
jmp
ja
cmp
enter
out
mov
cmpsl
ljmp
xor
pop
psubw
ljmp
mov
or
mov
inc
jge
data16
shrd
test
or
push
mov
negl
inc
or
out
mov
sbb
inc
xchg
xchg
jnp
pop
xchg
dec
xchg
and
test
jbe
push
dec
xchg
arpl
sub
test
pop
out
mov
jle
push
es
or
dec
fistpl
lods
les
mov
mov
jo
jns
sbb
lock
adc
xchg
mov
mov
test
cmp
mov
sti
dec
dec
jp
incb
jmp
ljmp
add
dec
xor
mov
xor
jbe
insb
sbb
es
jmp
fisttpl
cmp
out
sbb
out
fidivrs
shrl
push
aad
in
mov
sbb
jne
add
mov
leave
add
or
or
repnz
xchg
inc
iret
jns
sbb
test
and
jmp
in
daa
jge
aam
popf
jle
pop
and
pop
fldcw
push
inc
cmp
shll
push
xor
and
lods
jae
push
imul
or
in
mov
adc
ljmp
div
sub
mov
out
add
aam
or
adc
in
or
jmp
mov
dec
push
pop
or
pop
cwtl
out
stos
pop
test
pop
dec
pop
loopne
pop
or
jmp
pusha
fadd
icebp
inc
outsb
sub
and
and
mov
insl
leave
jbe
data16
xchg
pusha
jo
xor
test
add
jbe
test
xchg
daa
jmp
mov
addr16
sub
inc
ss
cmc
pushl
call
loop
insb
scas
fs
aad
rorb
js
pop
jmp
mov
inc
lds
inc
or
stc
cld
dec
push
shrb
mov
pop
inc
push
out
jle
bound
mov
or
pop
imul
xorl
mov
mov
xchg
add
pushf
insl
xchg
and
push
out
ret
lret
popl
xor
mov
sbb
cmp
xor
inc
jno
cmp
in
aaa
jl
popa
ja
mov
mov
mov
leave
popf
inc
push
or
adc
imul
imul
push
push
adc
data16
subb
jl
out
pop
and
push
imul
mov
inc
xchg
repz
lock
in
mov
cltd
insl
rolb
outsb
sbb
cld
enter
push
xor
std
sbb
lcall
scas
jp
dec
mov
daa
popf
popf
ficompl
addr16
sahf
pop
out
or
push
movsl
dec
dec
jl
adc
stc
repz
lea
test
mov
xor
push
imul
incl
add
inc
xchg
pop
add
inc
and
pop
ss
leave
sub
push
mov
xchg
lock
or
lds
lds
xor
mov
and
in
inc
and
das
dec
sti
aad
add
adc
adc
fisubrl
pop
mov
outsb
add
xchg
cwtl
aas
ja
adc
mov
pusha
cmpl
leave
or
subb
enter
cmp
mov
dec
jae
data16
xchg
push
int
cmp
je
push
and
aas
testl
hlt
jg
addb
push
int3
ror
push
pop
push
mov
jb
push
arpl
jge
mov
mov
cmp
loopne
ja
xchg
sub
ss
and
cwtl
mov
in
cmp
dec
in
repnz
lods
dec
sbb
outsl
lods
and
mov
js
into
sti
lock
shl
std
fcoms
mov
notb
cli
mov
fwait
jecxz
pop
push
movsb
xchg
cwtl
std
ja
clc
outsb
cmpsb
insb
test
pop
pop
mov
test
sbb
sarl
xlat
inc
push
iret
xor
xchg
xor
lahf
mov
mov
dec
mov
add
mov
or
test
sbb
xchg
sub
jb
insl
jg
lret
les
bound
fst
cmpsl
pop
mov
xchg
test
outsl
pop
lock
fisttpll
cmp
aad
inc
push
mov
imul
mov
jne
jmp
addr16
bound
add
sub
jl
sub
xor
jp
add
sbb
jmp
addb
xchg
xor
jle
mov
std
mov
and
cmp
inc
pop
int
or
or
and
stos
pop
imul
cmp
movsl
sub
and
push
push
jmp
loope
xchg
sti
mov
jnp
xchg
movsl
scas
mov
int
sbb
jno
test
mov
packssdw
in
nop
xchg
and
nop
imulb
and
imul
cli
shll
xor
out
or
fnsave
mov
dec
mov
pusha
sahf
in
jne
imul
imul
mov
sbb
icebp
repz
stos
int
jbe
adc
mov
push
testb
jno
arpl
adc
std
adc
mov
sub
cmpl
aam
pusha
adc
test
mov
in
and
les
mov
pop
fists
pop
int
push
sub
rorb
ret
adc
dec
sub
test
scas
mov
ljmp
pop
jno
loope
jg
arpl
jecxz
add
cltd
lds
dec
sub
stos
and
push
js
mov
xor
iret
jae
cld
aad
and
add
xor
and
in
out
cld
mov
xor
or
aam
push
loop
jecxz
xor
or
inc
pop
mov
xor
inc
adc
or
add
mov
ljmp
xchg
xchg
adc
mov
jg
out
mov
sbb
sbb
or
inc
mov
insb
mov
jge
fstpl
sub
ja
mov
loope
mov
fstl
jg
mov
out
jge
mov
std
pop
adc
insl
shl
pushf
fildl
nop
jecxz
jo
inc
xchg
mov
and
jnp
add
ds
lock
adc
insl
mov
mov
xor
scas
ljmp
cmpsl
bound
mov
in
or
in
sbb
xchg
adcb
mov
pop
jns
test
insb
jo
sub
jbe
xchg
pop
sub
add
pushf
sbb
repz
test
jbe
jmp
scas
sti
jle
out
mov
lcall
mov
jne
sti
negb
push
arpl
icebp
xchg
movsl
and
fld
in
lret
arpl
dec
pop
xchg
jae
ds
rcr
out
push
mov
push
dec
dec
fadds
push
ds
xchg
fimull
push
lcall
sbb
or
or
push
mov
mov
mov
or
push
mov
ss
xchg
es
sub
and
or
sbb
sbb
test
lock
mov
inc
jle
out
ja
jae
fcomps
lret
xorb
fidivs
push
jno
add
rcrl
xor
and
or
xor
cmp
push
sbb
and
jge
cmc
rcll
pop
insl
enter
imul
xchg
xchg
test
repz
xchg
sahf
xchg
lea
ret
insl
mov
jno
cmp
out
cmpsb
das
adc
rcl
inc
adc
xchg
pop
scas
mov
shrb
aas
dec
jno
pushf
int
add
xor
incl
cld
orb
push
dec
jp
je
movsb
mov
or
or
scas
push
sub
push
mov
aaa
imul
jmp
sbb
outsl
ret
dec
mov
mov
test
js
pushf
lret
pop
and
mov
outsl
sub
pop
pop
sub
dec
cmpsl
dec
jl
fwait
data16
lahf
jle
and
add
iret
jo
scas
xchg
ds
adcl
popf
push
ljmp
aaa
nop
lcall
xchg
mov
inc
xchg
xor
jmp
dec
je
and
fs
maskmovq
mov
mov
mov
xchg
nop
inc
sbb
lea
cmpsb
shll
aas
cmp
and
or
orb
addb
cltd
std
mov
out
ss
inc
dec
fistps
loopne
dec
and
mov
inc
xchg
sbb
inc
and
adc
mov
fistl
in
test
sbb
jbe
cmp
fwait
push
rcr
sbb
mov
div
cmc
push
sbb
pop
scas
sub
mov
and
call
stc
fs
push
sub
pop
sub
inc
dec
or
ljmp
mov
and
fsts
outsb
std
ja
jne
dec
pushf
xor
push
mov
mov
mov
sahf
cmpl
dec
push
inc
mov
mov
movsl
imul
jae
adc
mov
jb
rcr
or
pop
and
xchg
sub
cmp
jg
jmp
mov
ja
sbb
leave
sub
arpl
cmp
push
ds
bound
mov
jmp
mov
push
fisubs
lods
repz
cltd
push
sahf
popa
mov
movsl
push
mov
std
xchg
and
push
addl
add
gs
sub
mov
mov
and
cli
jnp
dec
lods
popa
xor
in
push
fsts
lcall
cli
in
gs
loope
cmp
sub
subl
and
sub
mov
or
dec
jmp
cmp
fsubrl
sub
int3
scas
je
add
xchg
jo
popf
pop
stc
mov
sarl
mov
adc
push
roll
lcall
in
cld
add
xchg
cmp
scas
push
jns
das
cltd
jg
or
and
xchg
flds
pop
xor
push
frstor
inc
adc
fwait
mov
push
aam
scas
sub
fmuls
cmp
idivl
dec
add
add
pop
jnp
cmp
mov
sbb
imul
ret
dec
add
jg
or
dec
jbe
mov
add
hlt
jl
out
mov
jns
nop
pushw
pop
jb
adc
xchg
arpl
push
stos
dec
mov
fdiv
pop
gs
push
outsb
or
jnp
cmp
push
dec
cltd
dec
out
cwtl
jg
push
mov
popf
mov
mov
lahf
in
aad
lahf
jbe
mov
sahf
inc
pop
mov
dec
rcll
adc
pop
movq
sbb
icebp
mov
inc
mov
loope
cli
push
mov
cld
fdivl
or
add
ret
sar
lods
ljmp
sub
inc
push
add
cmp
cmpsl
sbb
jnp
in
ret
xor
add
incb
test
lcall
loopne
add
outsl
lahf
jae
add
fsubs
and
nop
sub
jbe
jno
imul
and
outsl
and
lea
mov
push
mov
jb
std
pop
mov
inc
xchg
mov
add
and
ret
jo
lret
call
push
idivb
jecxz
jb
shrl
pop
movsl
cwtl
mov
imul
int3
inc
pop
das
push
das
fs
sti
nop
inc
mov
xlat
ret
jmp
cmp
and
cld
push
push
fstpl
dec
das
pop
call
dec
cmpsl
loopne
cmc
dec
cld
in
add
je
pop
cmp
and
jo
jnp
mov
ja
lcall
testl
ss
add
cmpsl
rol
out
adc
jns
jle
xchg
lahf
sub
arpl
sti
insb
lret
mov
rclb
les
add
movsb
aaa
mov
repnz
loop
lea
mov
repnz
sub
stos
xchg
in
and
adc
cld
pop
xchg
sub
push
mov
mov
lods
dec
das
clc
jp
or
pop
xor
repnz
xchg
or
imul
xchg
fdivrs
sbb
cmpsb
out
xor
sub
inc
mov
mov
and
xchg
sub
lahf
ljmp
push
mov
adc
test
push
pop
adc
int
mov
das
mov
outsl
push
fwait
adcl
push
ljmp
pop
jg
shll
sbb
sahf
rclb
mov
mov
cmp
push
push
and
ret
pop
imul
adc
sbb
movsb
pop
lock
lea
ret
sbb
xor
lahf
dec
xchg
loop
loop
xchg
dec
imul
mov
xchg
sbb
jbe
aas
aaa
fdivl
xchg
lcall
cmp
xchg
xlat
adc
push
pusha
test
adc
adc
stos
jl
nop
push
ret
and
outsb
inc
cmpsl
daa
aad
ja
jbe
cltd
xor
adcb
lock
aad
jnp
jnp
xchg
dec
or
jnp
sti
std
jns
xchg
mov
inc
int
cmpsb
test
push
pop
lds
insl
lods
stos
jns
daa
and
cmp
lret
test
jl
aad
out
pop
inc
lock
pop
test
icebp
jl
and
xchg
mov
xchg
xor
inc
out
and
jmp
jno
dec
jnp
or
pushf
mov
push
sbb
push
xchg
push
shrb
das
pop
jb
sahf
fmuls
push
xor
xchg
scas
mov
inc
sbb
pusha
sbb
and
mov
jl
and
xchg
aaa
orl
lahf
xchg
pop
mov
mov
and
test
dec
out
mov
jl
cltd
or
std
pop
jae
cmc
shlb
repz
stc
loop
jle
mov
pop
loopne
sbb
roll
addr16
fidivrs
cmpsb
mov
shl
test
pop
pop
mov
push
mov
dec
cwtl
pop
push
add
pop
popf
sbb
sar
pushf
andb
xor
into
inc
mov
jmp
mov
ror
mov
subl
pop
dec
out
adc
sahf
dec
fistl
dec
lahf
sbb
mov
in
pop
loop
xchg
popa
add
movsl
repnz
pop
push
adc
dec
lret
inc
mov
mov
fisttps
jmp
push
scas
out
fiadds
mov
lods
mov
add
xchg
fdivr
aad
test
sub
test
stc
lods
fs
adc
jnp
push
sbb
add
push
add
jbe
lahf
imul
mov
mov
add
dec
sarb
xor
jecxz
cmp
sahf
xor
push
xchg
incb
inc
insb
aas
push
popa
xlat
add
mov
sub
xchg
loope
sti
jmp
loopne
arpl
mov
or
mov
es
mov
mov
clc
pusha
add
mov
push
sub
sub
loop
scas
jbe
cmp
adc
push
jg
hlt
imull
cmpsl
out
xor
jg
mov
in
clc
adc
pusha
loopne
out
cld
and
ja
xchg
push
imul
sysexit
mov
and
aaa
xor
in
gs
mov
xchg
cmp
xchg
hlt
inc
xchg
jmp
in
scas
imul
inc
add
imul
and
adc
and
cmp
mov
addr16
mov
lahf
cld
cmp
inc
mov
cmp
inc
dec
fdivrs
push
inc
xchg
hlt
cwtl
cmp
loop
test
add
mov
cmc
out
fidivl
in
jecxz
fists
push
xchg
rorl
nop
push
sbb
lret
fs
shll
push
mov
mov
pop
rcll
and
dec
fcoms
push
sbb
popa
jp
add
insb
mov
insb
mov
pop
cwtl
ret
jmp
inc
frstor
push
xor
cmp
mov
or
dec
push
mov
adc
and
aaa
lds
mov
call
leave
lods
cli
jle
daa
scas
loopne
xor
nop
and
xchg
out
xor
pop
xchg
sbb
popa
mov
push
lret
mov
roll
xor
in
aad
daa
push
xor
out
pop
popf
mov
cltd
mov
out
cwtl
cwtl
pop
inc
push
div
frstor
pop
div
cltd
ficompl
out
dec
cli
bound
test
xchg
fimull
roll
mov
inc
rolb
ret
cwtl
enter
nop
popa
adc
insb
jge
dec
mov
add
movsl
rolb
jne
iret
and
jo
adc
mov
sbb
addb
popa
cli
stos
lahf
ds
call
rorb
pop
stc
cmpsl
push
jb
fsts
movb
insl
push
leave
in
inc
add
test
jo
dec
jmp
cli
arpl
imul
mov
push
clc
pushf
movsb
in
push
and
cmp
inc
loop
test
ljmp
push
jp
xchg
cltd
addr16
adcb
xchg
jl
or
out
clc
adc
dec
in
mov
loop
mov
sbb
jo
xchg
mov
sub
mul
dec
mov
loop
jecxz
fcmovu
cltd
jno
aaa
xor
mov
stos
dec
out
mov
jae
outsb
mov
iret
xlat
std
sbb
lods
xchg
or
pop
xchg
lahf
int3
mov
in
sbb
jp
push
dec
lret
pop
jmp
dec
mov
cmpsl
jle
jg
je
imul
je
push
lret
loop
repz
ja
mov
adc
cmc
pop
add
fcoms
fnsave
or
pop
sub
nop
fcoms
std
sahf
int
sbb
pop
jl
mov
adc
cmp
mov
int3
or
daa
stos
mov
sub
leave
push
mov
in
fldl
or
fcompl
imul
int3
cmp
outsb
mov
pop
sub
es
imul
xor
sti
cld
pop
testb
leave
lahf
pop
fldt
orl
icebp
and
enter
pop
dec
xor
xchg
adc
pusha
jge
jno
xchg
lods
cmp
sub
or
sub
push
cltd
loope
ret
push
xchg
jg
pusha
and
cs
jns
mov
push
mov
rcrl
inc
push
xchg
stos
mov
mov
inc
cmp
adc
mov
pop
mov
aas
clc
clc
ret
cli
push
and
cltd
sub
adc
dec
hlt
or
ljmp
dec
jmp
sub
inc
fs
repnz
mov
cmp
mov
mov
dec
mov
mov
add
ss
adc
les
add
adc
push
pop
and
int3
jbe
jge
mov
or
int
mov
cmp
aad
rclb
sub
inc
dec
jno
movsl
sbb
adc
cmp
rcrb
push
push
fstps
sbb
nop
sysenter
je
daa
subl
iret
sahf
jae
mov
pop
jno
test
cltd
push
inc
arpl
sbb
xor
push
add
push
popf
mov
fcmovne
pop
std
mov
fimuls
das
inc
jl
xchg
repnz
or
inc
dec
inc
scas
ljmp
aad
imull
cld
jns
pop
xchg
sub
adc
xchg
movsb
je
fdivs
sbb
cld
or
xchg
and
call
fmul
inc
idivb
pusha
jnp
sbb
mov
out
mov
fidivrs
add
xchg
jp
sbb
mov
jnp
mov
mov
jae
jge
jno
xchg
int3
or
fnstsw
fidivrs
cmp
pop
jae
scas
ja
jmp
mov
push
enter
es
in
cmpsb
leave
jns
testb
stc
mov
xlat
mov
sbb
ds
jnp
xchg
sbb
test
lret
outsb
xor
sahf
pop
das
ss
mov
call
cmc
dec
cltd
pop
push
sbb
or
mov
imul
push
dec
mov
mov
mov
sub
aam
dec
adc
mov
fmuls
adc
pop
andb
sti
repnz
xor
lea
inc
jo
ficompl
fstl
push
lods
xchg
sub
test
dec
faddp
pushf
mov
insb
out
sub
popf
lahf
cld
push
stos
data16
dec
sub
loope
in
ret
dec
mov
cmp
sbb
arpl
push
nop
fsubrl
or
test
xlat
bound
mov
xchg
add
insl
out
sahf
sub
insb
addr16
mov
xor
jae
push
fnstenv
out
addl
mov
cmpsl
mov
pop
test
mov
push
mov
jno
xor
daa
cmp
inc
bound
push
cmc
cli
dec
push
insl
cmp
jle
fiaddl
xchg
dec
lea
scas
outsl
mov
mov
in
mov
push
pop
or
sbbl
adc
sub
insb
sbb
aam
in
sahf
in
jle
cmp
xor
andl
mov
jnp
sub
into
mov
loop
mov
loop
sub
stos
and
and
mov
sub
mov
xchg
xchg
dec
inc
rol
inc
maxps
pop
mov
cli
mov
pop
lods
cmp
mov
mov
dec
cmp
sub
fldl
mov
push
int3
sbbb
mov
sarl
and
xchg
add
jecxz
mov
jg
inc
or
or
jge
sub
clc
in
push
mov
hlt
pop
cmpsb
mov
shrl
add
push
push
xchg
or
ret
jb
push
or
outsb
sbb
mov
stos
outsb
mov
lcall
iret
inc
aam
cltd
lahf
ds
or
pop
lcall
push
aad
jbe
addb
fldenv
push
cmp
pushf
xor
cmc
lods
test
xchg
lods
std
cmp
mov
push
fs
sbb
mov
aam
mov
push
xchg
jne
xor
ret
orb
xchg
outsb
jmp
jae
leave
fcmovb
add
push
sub
ficoml
sbb
sbb
mov
pop
cmp
add
jmp
pusha
ljmp
add
sti
lcall
push
jo
les
popa
adc
dec
and
ret
jl
cld
mov
mov
dec
loope
inc
sbb
push
lahf
inc
adc
mov
jb
loopne
imul
repnz
and
pusha
stos
cmp
mov
out
push
dec
pushf
std
and
sub
clc
clc
and
xchg
dec
ljmp
inc
or
add
xchg
les
sub
cmp
pop
rol
in
mov
scas
sahf
cmpb
in
dec
nop
mov
loop
mov
movsl
cmc
ljmp
scas
int
jno
add
pop
mov
clc
les
out
leave
andb
or
mov
adcb
int3
popa
subb
inc
imul
ss
cmp
xchg
mov
xchg
xchg
xchg
jge
or
std
fdiv
orl
icebp
vpunpckldq
dec
xchg
sub
xor
ljmp
loopne
cli
mov
jecxz
push
mov
jb
mov
int3
and
shl
mov
mov
cltd
js
stc
mov
push
xor
add
mov
or
and
mov
aaa
lret
jge
mov
pop
ror
jnp
mov
add
jo
pop
inc
mov
cmc
push
mov
mov
dec
mov
xor
lret
movsl
sub
lahf
adc
mov
mov
jae
movsb
add
stos
mov
fcoms
aas
std
dec
lahf
xchg
mov
or
mov
outsl
dec
sbb
pop
fidivrl
cmc
xor
add
subb
mov
add
out
pushl
je
test
xlat
imul
xchg
out
add
rorb
ds
stos
cs
aaa
test
ret
push
mov
popf
lock
lahf
shll
cmc
test
in
adc
sbb
cmpsl
nop
leave
ljmp
test
aam
cmp
fwait
popf
push
clc
aad
mov
mov
mov
add
out
iret
andb
dec
addr16
and
stos
mov
mov
or
icebp
outsl
fsubs
out
inc
sub
daa
aam
push
xchg
test
mov
fs
pcmpgtb
out
nop
jno
movsl
add
mov
mov
lock
aad
sbb
inc
cs
dec
mov
sbb
stos
xor
dec
ss
imul
xor
or
sub
mov
push
mov
xchg
jg
iret
jno
add
dec
in
in
add
mov
fs
lock
dec
insb
fcom
xor
fwait
test
push
nop
lock
jbe
mov
xchg
popf
scas
sahf
add
cmp
dec
repnz
sub
push
push
add
jo
mov
cmp
push
adc
lea
or
jecxz
imul
repz
mov
jns
sub
mov
cmp
or
mov
dec
out
fldcw
add
lock
xchg
inc
icebp
nop
js
inc
mov
mov
mov
lea
xchg
stos
push
sarl
stos
movsl
adc
rorl
sub
inc
leave
push
adc
out
xor
sub
lock
sbb
mov
fisubrs
add
push
je
popa
push
out
pop
filds
push
mov
in
std
test
push
gs
sbb
sbb
arpl
xor
or
dec
es
call
lock
jp
imul
aam
imull
xchg
popa
hlt
mov
pop
push
add
mov
adc
scas
sub
ror
inc
out
push
xlat
and
repnz
mov
lock
push
add
jge
ret
adc
xor
cmp
mov
sbb
setl
jb
fidivrs
mov
sub
push
pop
push
cwtl
mov
lea
aad
mov
lret
mov
movsb
pop
push
cltd
sbb
add
mov
lds
in
std
lret
cwtl
mov
stos
or
dec
les
fisubs
jge
hlt
xlat
mov
das
mov
push
das
jb
pop
insl
push
push
notl
jne
mov
sub
xchg
frstor
pop
xor
stos
push
ljmp
and
mov
xor
fwait
add
mov
cmp
or
inc
dec
dec
leave
or
ds
aad
repz
mov
fisubl
dec
push
push
jmp
mov
inc
jmp
jl
lret
push
aaa
lds
cmc
sti
jbe
xor
add
and
shrb
pop
or
and
into
sub
cltd
lret
mov
mov
pop
and
rcll
inc
js
or
fmul
lock
bound
xchg
es
or
das
js
mov
js
push
pop
imul
test
ds
mov
insb
mov
xchg
in
push
test
jecxz
pop
push
mov
dec
movsl
push
push
in
adc
push
test
lods
adc
add
sub
xchg
dec
popf
int3
addr16
pop
out
ret
inc
fsubrl
popf
mov
sbb
inc
jae
jmp
lds
inc
sub
popa
ja
or
aas
push
xchg
test
ds
push
lcall
push
xor
out
cmp
fucom
shrb
jbe
lods
cmp
imulb
sub
adc
loop
adc
ss
ret
addr16
dec
aad
lods
pop
lods
xor
aas
cmp
fwait
xor
push
enter
dec
push
push
popf
int
sub
mov
dec
fsub
push
inc
fildl
jbe
cld
movsl
in
icebp
sbb
out
mov
jecxz
int
xor
fcmovbe
adc
cmp
inc
pop
sub
repz
push
decl
ja
cmp
lret
out
pop
push
dec
popa
jmp
push
cmp
cmp
inc
add
xor
andl
jnp
loope
adc
jno
hlt
mov
aam
and
lret
pop
dec
clc
xchg
xchg
aad
cmc
add
daa
testb
rcrl
sbbb
dec
icebp
movsl
ja
push
jnp
jbe
pop
cltd
insl
and
add
lds
mov
mov
ret
orl
adcb
jo
mov
inc
adc
shlb
dec
loope
and
roll
or
cwtl
mov
cltd
sbb
xchg
loop
cli
cltd
cmp
adc
cmp
ret
repnz
pop
adc
lcall
inc
cltd
mov
stos
lret
jo
loope
pop
jle
add
mov
or
sbb
in
addr16
popa
test
loope
mov
push
push
jl
jmp
xlat
or
addr16
cmc
xchg
fcmovbe
rorb
pop
dec
push
mov
adc
test
idivl
and
adc
inc
mov
sti
shrl
mov
cmpsb
out
jle
mov
insb
lret
xchg
pop
or
jmp
dec
sbb
dec
rcll
data16
loop
cltd
sub
test
add
jae
push
mov
sbb
repnz
sahf
movsb
dec
or
rcl
mov
push
sti
ljmp
dec
nop
loope
cmc
mov
shlb
test
xor
push
lret
or
dec
cmc
and
mov
cmp
mov
mov
inc
not
bound
xchg
pushf
loope
mov
stos
iret
call
sub
mov
sbb
sub
repz
inc
jmp
ja
movsl
imul
loop
lret
mov
fwait
inc
andb
loopne
ja
inc
gs
ljmp
in
push
dec
dec
data16
mov
pushf
mov
sub
add
nop
lock
test
dec
insb
inc
cmpsb
scas
in
sub
pop
adc
test
mov
xchg
mov
fiadds
jecxz
imul
pop
add
ficoms
pop
hlt
xor
movsl
test
sbb
sbb
sub
stos
inc
add
xchg
adc
push
mov
leave
push
mov
jns
nop
js
add
xchg
push
test
dec
movsb
ret
loop
sbbl
mov
popf
dec
leave
xchg
mov
push
hlt
int
movsl
imul
pop
cmp
sub
push
sbb
out
adc
xchg
push
mov
ret
fstl
xchg
and
push
lcall
sahf
jge
loope
pop
lock
std
xor
mov
adc
or
cli
ffree
aaa
jmp
xor
adc
aas
mov
pushf
lahf
testl
stos
dec
fldenv
lret
xor
out
ds
gs
mov
movsb
inc
sbb
pop
sub
sahf
jg
fildl
inc
mov
cmp
xchg
xor
aas
xor
dec
popf
mov
push
jmp
dec
es
mov
clc
lds
ret
mov
adc
xchg
ljmp
gs
and
xchg
aas
sbb
loope
lods
mov
push
cmp
movsb
add
fs
pop
in
add
cmp
dec
or
ret
fldl
and
jbe
out
loope
int3
adc
inc
push
mov
pop
jge,pt
fbld
xchg
fistps
popa
adcl
mov
inc
stc
fists
pop
inc
fstpt
and
or
test
jae
test
pop
arpl
fs
xor
das
or
or
pusha
adc
ljmp
sti
mov
jl
lcall
das
in
iret
in
push
lcall
mov
shrl
ret
push
dec
daa
frstor
decl
cmp
loop
sub
adc
xor
mov
popa
push
dec
push
call
inc
xlat
loopne
ret
cmp
pop
enter
mov
mov
push
nop
fmull
pop
call
hlt
imul
xchg
xchg
int
cmpsl
add
jne
aam
or
negl
pop
mov
inc
adc
jno
jb
jge
cs
movsb
push
outsb
and
pop
or
jle
sar
add
xorl
xor
add
jmp
ficoms
push
push
lcall
lret
lock
cmp
cld
cmc
adc
sbb
jle
xor
adc
sbb
loope
add
mov
cmp
imull
in
cmpsb
add
ljmp
into
push
fwait
sbb
pop
mov
push
cmpsb
dec
arpl
and
xor
hlt
jns
pop
fisubs
out
jbe
je
cmp
and
push
and
pop
repnz
add
cld
sub
in
test
cmp
mov
loopne
push
addr16
sub
jne
mov
adc
sub
and
and
mov
les
mov
rorl
in
bound
jne
ret
add
addr16
jle
mov
cmp
or
jns
sub
and
movsl
lret
lcall
mov
pop
mov
mov
adc
fstl
sbb
mov
dec
mov
inc
dec
adc
testl
push
hlt
push
mov
in
cmp
out
mov
jl
arpl
push
xchg
pop
popa
dec
imul
adc
jnp
or
mov
cmp
iret
xchg
test
jg
in
sarl
pop
out
sub
shrb
pop
sbb
mov
mov
dec
mov
jnp
jo
popa
mov
in
pop
ret
subb
fst
inc
sbb
jmp
or
lcall
push
adc
leave
add
mov
pop
xchg
xlat
jg
pop
divb
adc
bound
int3
xor
xor
mov
stos
mov
das
ds
addr16
outsb
mov
sti
ffree
test
aaa
inc
test
sti
lcall
push
hlt
push
icebp
popf
push
ds
lea
iret
in
xor
jmp
addr16
scas
jmp
mov
out
dec
mov
inc
xchg
push
lcall
fistl
jmp
imul
sbb
cmpsb
in
es
mov
add
outsb
imul
ds
es
and
xor
sbb
mov
pop
lcall
stos
test
sub
cmp
pop
dec
add
pop
lahf
wbinvd
pusha
aam
mov
mov
and
aas
in
pop
repz
pop
fdivrl
gs
sub
popf
je
outsb
jae
adc
dec
add
mov
mov
mov
jle
sarb
int
sub
in
js
outsb
xor
daa
xorl
and
jbe
xchg
leave
adc
pop
icebp
insl
push
push
and
push
inc
and
inc
outsb
inc
adc
inc
push
mov
in
or
jbe
sti
lahf
fs
movsl
data16
push
push
jge
mov
push
xchg
imul
sbb
sbb
icebp
push
clc
ljmp
in
mov
jae
pop
fsqrt
mov
sbb
push
mov
mov
fistpl
cmpsl
cmp
iret
mov
xchg
xor
mull
test
jb
adc
xchg
pop
or
int
jecxz
arpl
cmp
xchg
movsb
idivb
stos
iret
sub
jno
xchg
dec
mov
fldt
inc
sub
dec
imul
or
lock
imul
imul
pop
mov
aas
cltd
and
sub
repnz
add
xchg
mov
in
and
sbb
insb
popa
jnp
mov
js
movsl
aaa
and
cmp
imul
jbe
int3
or
in
shll
stos
icebp
push
pop
push
dec
arpl
sub
xor
xchg
mov
xchg
xchg
jne
jl
popf
pop
popa
sub
popf
mov
in
subl
subb
xchg
sahf
sub
mov
mov
inc
je
pusha
push
xchg
xlat
notb
fiaddl
shlb
outsl
andl
xor
cli
push
mov
insl
test
cmpsl
jl
mov
mov
sub
xchg
xorl
lea
cmpsl
pushf
loopne
faddp
loopne
pop
cmp
dec
andb
jo
stos
or
fnstsw
repnz
in
call
and
add
outsl
inc
jns
add
mov
mov
fistpll
xchg
movsl
dec
and
adc
mov
and
xchg
outsl
xchg
lahf
add
scas
or
jp
or
xchg
mov
add
inc
pop
xor
adc
out
gs
sbb
xchg
inc
popf
jmp
orl
stos
dec
test
data16
jle
popl
xchg
push
or
bound
xor
je
inc
or
mov
daa
test
fs
mov
jne
jl
test
test
adc
dec
cmp
mov
loop
addr16
mov
outsl
push
or
jmp
sub
xor
push
add
xchg
fdivl
out
and
pop
xchg
mov
jle
push
sub
leave
enter
jbe
mov
cmp
fs
in
sbb
xor
fwait
sub
lret
js
adc
push
inc
in
and
and
fnsave
lods
outsb
insb
adc
push
jecxz
mov
pop
push
test
adc
push
mov
push
ficomps
mov
push
xlat
push
or
fidivrl
repnz
subl
movsl
addr16
inc
test
mov
mov
jae
pop
pop
xchg
dec
ds
in
mov
ds
aaa
ja
aam
mov
lcall
sub
mov
movl
jnp
into
rcrb
icebp
cmc
push
out
cs
scas
pop
cmp
sti
imulb
push
imul
fwait
push
add
decb
fistl
sub
pusha
cmp
movsb
movsw
inc
sbb
xor
jle
lcall
lods
std
lods
cmp
iret
stc
jb
mov
shl
imul
add
add
xchg
cmpsb
leave
mov
dec
push
ret
dec
xchg
sarl
cmp
in
cmc
add
mov
or
test
daa
jmp
mov
mov
dec
push
sahf
or
sbb
xor
insb
mov
mov
cmp
cmp
xchg
inc
dec
in
dec
lahf
loop
fldcw
jp
sbb
sbbl
lret
shrb
push
fsubrl
add
pop
inc
nopl
mov
orl
and
outsl
pop
xor
mov
pusha
xor
inc
leave
push
sub
cmp
push
sbb
inc
and
and
push
montmul
cmpsb
adcl
fdivrp
loop
xchg
dec
fsubrl
push
sahf
inc
mov
cmp
push
mov
jp
mov
in
flds
insb
xchg
cmovbe
push
icebp
jg
sub
push
fnstenv
insl
dec
inc
xchg
mov
jnp
pop
negl
frstor
out
push
enter
jmp
divw
and
dec
xchg
push
mov
js
and
jns
ss
out
mov
cltd
xor
xchg
rcrb
push
stos
bound
jae
xchg
insl
jp
cmp
stos
mov
mov
lcall
adc
jo
xor
and
movsb
inc
fidivl
mov
jp
xchg
cmpl
jb
pop
xor
xchg
and
arpl
sbb
pop
aas
mov
add
orl
push
inc
xlat
popa
mov
or
out
lea
mov
mov
shll
sahf
add
push
mov
icebp
ljmp
pusha
jg
xor
out
sbb
cmpsl
dec
or
and
repz
sarl
fbstp
push
dec
push
jecxz
push
cwtl
out
mov
lcall
inc
or
int
pop
js
xchg
sbb
dec
loopne
lods
test
xchg
and
dec
or
mov
pop
fldt
fiaddl
or
mov
xor
xchg
push
adc
adc
inc
int
add
decl
dec
jb
call
sbb
jmp
or
adc
imul
xchg
pusha
xor
lret
dec
mov
sbb
bound
xor
dec
and
mov
add
mov
adc
cmp
jo
adc
clc
popa
jns
cmp
rol
push
imul
fadds
insl
stc
dec
mov
popa
icebp
dec
es
xchg
dec
sti
clc
aad
and
or
sti
jbe
test
adc
jo
or
lcall
fdivrs
sub
aas
pop
adc
cld
jno
pop
pop
fdivrs
and
xor
push
pop
aaa
sbb
in
movl
jl
cltd
cmp
xor
ljmp
push
into
imul
or
mov
imul
jne
enter
jecxz
push
mov
adc
jp
fsubrl
in
icebp
cmp
mov
pop
jecxz
lea
mov
mov
dec
and
fistpl
xchg
cmpsb
js
mov
pop
sub
xlat
or
js
aad
and
jbe
test
adc
sub
xor
jmp
jnp
or
mov
pop
dec
nop
std
lods
add
push
dec
mov
inc
std
inc
daa
in
mov
or
je
sahf
mov
cs
in
outsb
jns
pushf
xor
mov
mov
in
rcrb
or
push
dec
aam
dec
cmc
loopne
popa
mov
repnz
sub
mov
leave
pop
inc
into
not
dec
fs
inc
iret
dec
scas
cmp
cli
sahf
insl
loop
in
xchg
push
movsb
pop
mov
in
clc
pop
fdivr
fstl
andl
cld
mov
scas
or
and
loopne
jae
xchg
xchg
xchg
in
rcr
js
jae
aas
mov
fstp
lret
cmp
inc
adc
pop
push
dec
bound
idivb
adc
in
lock
pop
cli
xchg
inc
add
fs
and
into
loope
jbe
and
mov
sti
dec
ret
fadds
imul
add
dec
addr16
xchg
lret
mov
cmp
jle
jns
xor
das
mov
sbb
push
sbb
stc
pusha
adc
test
cld
dec
dec
push
mov
add
stc
sbb
xchg
and
int3
jns
inc
xchg
fsqrt
lods
lods
faddl
dec
aaa
inc
dec
ret
lods
lock
cmp
sbb
inc
test
sub
jmp
add
mov
pop
dec
insb
jno
ss
xchg
scas
int
mov
lahf
push
push
scas
xor
pop
push
aas
add
por
les
pop
mov
pop
shrl
in
inc
out
mov
int
push
jae
xor
or
in
cmp
xorb
sub
jbe
add
xchg
in
xchg
jp
imul
bound
out
or
mov
pop
stos
testb
dec
push
dec
jo
mov
jp
pop
mov
daa
les
inc
outsb
iret
sub
arpl
stc
les
mov
mov
leave
jnp
sbb
push
divb
pop
push
aas
call
lods
and
dec
add
in
mov
jb
xor
jecxz
rcll
adc
clc
sub
jne
mov
xor
mov
jle
js
in
cli
out
lea
idivl
dec
mov
push
jmp
add
loop
add
lea
add
lds
xor
sbb
jl
insl
ret
mov
inc
dec
das
mov
push
xchg
fmul
mov
sub
outsl
dec
hlt
and
sub
jp
cmc
cmp
popl
and
rorl
add
adc
mov
inc
lret
adc
rolb
sub
ror
notb
gs
jb
xor
dec
push
inc
push
cmp
out
xchg
mov
aam
pop
xor
cmc
jge
xor
sub
cmpsl
movsl
int3
test
mov
shrl
adc
lods
pop
xchg
in
add
test
and
sub
jns
push
pop
sbb
jae
gs
ljmp
add
pop
fbstp
loopne
stos
mov
push
ret
inc
stc
cmpsl
loop
sbb
lahf
sbb
cmp
dec
jle
and
or
iret
mov
stc
mov
add
fcompl
stc
pop
and
push
jne
jle
mov
rcrl
lret
ds
jnp
int3
test
push
mov
sub
and
push
inc
or
ds
cmp
fidivrl
shlb
mov
mov
dec
fdiv
iret
sub
inc
enter
fmulp
loope
bound
mov
imul
mov
dec
aad
int3
mov
into
fisubrs
dec
mov
sub
lcall
jecxz
ret
outsb
out
lret
pop
bound
sub
xchg
push
repz
and
cmp
add
fidivs
mov
push
dec
jo
adc
mov
in
xchg
lods
imul
dec
pop
jbe
or
inc
or
cmp
dec
or
movsl
fmuls
xchg
xchg
fldenv
test
movl
jns
push
xchg
les
jbe
stc
arpl
lahf
lods
js
cld
ss
mov
xlat
jp
testl
mov
fimull
push
pusha
dec
dec
mov
int3
lcall
dec
nop
sarb
adc
inc
out
mov
sub
xchg
int
pop
fstpt
das
mov
jg
pop
lods
lahf
js
mov
in
inc
xlat
push
leave
loop
mov
mov
imul
in
data16
cmp
sbbl
inc
xlat
or
int
inc
adc
inc
xor
ds
out
mov
jmp
xor
rcrl
and
push
pushf
mov
leave
lock
mov
movsb
mov
lds
sub
mov
bound
jb
aaa
sarl
into
mov
xor
js
lds
repz
cmp
arpl
lods
fwait
mov
leave
movsl
loope
je
add
xchg
in
sub
cmpsb
imul
mov
je
cmp
int3
add
fs
xchg
mov
cmp
dec
in
pop
xchg
lods
gs
xchg
sbb
pop
mov
jp
pop
jo
loope
sub
inc
sub
jbe
jle
inc
mov
or
mov
pop
mov
mov
dec
jg
jns
pop
mov
pop
mov
push
int3
repz
das
inc
sbb
loope
scas
addl
push
jecxz
je
and
arpl
jge
rolb
popf
lahf
scas
nop
out
xchg
push
add
dec
in
xor
push
shrl
stos
cmp
movsb
sbb
test
in
xchg
pop
mov
pop
repnz
xlat
out
push
sbb
and
insl
je
fldz
clc
jge
mov
push
xor
cmc
mov
pop
and
mov
inc
xorl
pop
ret
pop
jae
mov
pop
jns
fildll
push
pop
shrl
xor
mov
push
loop
mov
sbb
pop
mov
mov
and
fwait
cwtl
cltd
dec
sbb
push
inc
xchg
adc
das
and
dec
ret
hlt
ret
cmc
mov
fwait
cwtl
lahf
fsts
je
sub
lret
xor
ss
fucomp
dec
int3
lods
scas
insb
call
inc
sub
xchg
icebp
mov
div
push
pop
adc
popa
ja,pt
std
sbb
or
mov
xor
sbb
repnz
mov
ret
jno
dec
jno
incl
pop
pop
lret
sti
and
out
xor
test
add
push
out
xchg
xchg
andl
adc
xchg
nop
js
lahf
adc
push
add
add
mov
sub
imul
or
push
lret
js
dec
dec
push
xchg
sub
ss
add
mov
loope
mov
icebp
movsl
xor
repnz
jne
addl
push
sub
sbb
xor
dec
sub
xchg
sub
data16
roll
push
not
mov
mov
jmp
cmp
aas
fisttpl
mov
icebp
aam
and
adc
pop
mov
bound
sbb
shrl
and
movsb
push
int3
inc
movsbl
repz
fwait
and
daa
call
xchg
mov
pop
fisttpll
mov
push
jbe
aad
int
stos
inc
inc
mov
cli
mov
mov
es
push
sbb
out
addl
loope
mov
push
lea
lds
pop
mul
cli
cmp
mov
mov
cltd
loop
or
shll
dec
rorl
add
imul
or
sbb
or
inc
sub
test
insb
mov
mov
outsl
inc
dec
xchg
push
pop
fnstenv
arpl
daa
jle
out
push
rolb
les
pusha
push
jne
adc
xchg
les
pop
jae
sbb
fdivs
fwait
inc
sbb
xor
pop
les
mov
loope
in
shl
sbb
shll
cmp
jbe
cmp
bnd
mov
inc
mov
mov
xor
sub
and
xchg
mov
jne
mov
mov
rclb
mov
insb
sub
or
adc
idivl
pop
in
pop
cmpsb
int3
adc
mov
repnz
fldenv
xlat
popf
pushf
lods
rcll
push
and
nopl
jbe
dec
ror
add
mov
insb
mov
inc
adc
subl
mov
out
lds
mov
xchg
mov
cwtl
adc
sbb
pop
push
and
je
fdivrl
movb
data16
out
loope
rol
out
and
mov
jecxz
movsl
aas
inc
push
addl
rcll
push
inc
jae
or
cmp
mov
and
and
fidivrl
repz
pop
pop
jge
sbb
jnp
imul
pop
sahf
sub
push
xor
mov
fs
in
dec
mov
fwait
lcall
cltd
adc
cmp
mov
sahf
inc
xchg
mov
cmpsb
ret
imul
testl
lods
cltd
mov
ss
into
cmp
pushf
inc
mov
dec
loop
xor
cltd
lds
int3
ret
stos
rcr
out
ja
mov
sub
adc
ror
mov
push
mov
dec
in
jle
or
into
pop
adc
sahf
cmp
rcrb
xchg
movsb
call
sub
sub
pop
push
push
cltd
jle
icebp
push
imul
mov
cmp
dec
push
sbb
jo
aad
subb
je
lods
ficoml
arpl
dec
repnz
dec
stc
mov
pop
outsb
cltd
jb
cltd
call
push
mov
dec
lods
xor
mov
stos
arpl
sti
adc
fucomp
xchg
lret
or
int
jg
pop
xor
xchg
dec
scas
fistl
addb
jns
stos
enter
sbb
adc
in
out
outsl
movsb
aas
loopne
stc
xchg
or
stos
out
add
push
or
das
jmp
jmp
frstor
inc
test
adc
pop
push
xchg
or
outsl
stos
rcrb
mov
mov
mov
push
push
lret
and
dec
push
test
call
repnz
adc
adc
cmp
cmc
add
xchg
jge
sbb
mov
out
push
mov
xor
mov
pop
fadd
repz
add
ja
sbb
dec
leave
cwtl
jmp
imul
fwait
dec
mov
xor
dec
ss
imul
ja
mov
lds
out
sub
add
mov
jnp
lds
sbb
sbb
xchg
mov
inc
pop
mov
clc
mov
aaa
jb
arpl
jne
lahf
test
lods
adc
lcall
sti
mov
add
or
int3
lahf
push
jg
out
sbb
popa
mov
cmp
xorl
lahf
fisubrl
in
das
push
mov
sbb
dec
mov
popa
mov
ss
aaa
push
stos
pusha
aas
mov
icebp
mov
iret
xchg
je
or
adc
and
lahf
or
cwtl
xchg
and
mov
add
call
mov
testb
mov
sbb
add
aaa
testl
jbe
mov
sti
sbbb
mov
push
sbb
jo
pop
lock
mov
fs
sub
adc
out
daa
gs
push
push
popa
icebp
inc
lea
roll
out
xchg
test
out
dec
notl
and
subb
aas
or
pop
sbb
mov
icebp
aam
popf
xor
pop
xchg
mov
inc
cmp
fists
sbb
movsl
push
outsb
imul
and
mov
aaa
cltd
fdivl
stos
mov
pop
dec
push
cli
mov
movsl
push
pop
iret
fsubrs
dec
mov
lods
add
xor
arpl
cmp
jmp
push
loopne
jno
fwait
inc
and
orb
jnp
mov
push
xchg
push
jns
daa
fldcw
stos
pusha
add
jmp
cmpsb
mov
inc
dec
ljmp
and
ds
lret
jge
pop
and
cmp
jne
mov
ret
add
and
call
push
addl
iret
xorl
push
mov
xchg
cmp
pop
push
add
into
aad
or
fimull
inc
fistl
loope
pop
sub
ljmp
in
arpl
push
adc
repnz
xor
dec
cli
xchg
sbb
and
stos
sbb
mov
sbb
jle
rclb
lahf
scas
in
sub
imul
inc
idivb
pop
inc
pop
add
mov
adc
dec
and
pushf
and
movsb
loopne
push
sbb
xor
dec
cltd
pop
hlt
jns
cmc
sub
stos
dec
sbb
jle
gs
nop
lea
inc
mov
bound
or
fs
mov
cmp
js
orl
mov
xor
cmp
shll
add
push
mov
ret
loope
sbb
xor
push
xor
sub
lret
sbb
or
sarb
adcb
mov
cmpsb
mov
je
lds
subb
ret
xchg
loopne
fiadds
push
sbb
mov
sub
pop
push
add
fs
lret
aaa
outsb
shrl
dec
xor
loop
loop
sbb
in
daa
shlb
mov
mov
jbe
mov
inc
push
jecxz
cmp
loopne
push
sub
mov
cld
fdivl
outsb
in
cmp
fld
mov
sbb
pop
mov
jp
jp
jb
add
and
ret
scas
sub
fimull
cld
mov
push
cld
pop
repnz
fnstenv
in
sbb
push
hlt
pop
in
add
dec
enter
jb
push
std
pop
lods
movsb
mov
pop
into
add
cmpsb
pusha
aad
ret
inc
push
cmpsb
push
adc
into
mov
ficoms
stos
sub
xorl
cltd
sub
in
arpl
ds
and
jp
call
inc
jmp
lcall
stos
dec
pop
fiaddl
ret
dec
inc
out
rclb
and
adc
or
fs
add
push
test
push
enter
inc
xorl
loopne
mov
cld
or
ficoml
fstp
or
cmpsl
cmpsb
jmp
leave
adc
and
inc
push
lret
sub
repz
xor
lret
mov
sahf
pop
xor
shrb
repz
rclb
sub
outsb
loope
inc
push
subl
sbb
jge
fldcw
jecxz
jmp
or
lock
rcll
mov
mov
mov
or
push
or
push
or
loope
loop
mov
sub
mov
add
fmul
sub
enter
xchg
dec
div
pop
bound
ljmp
push
mov
cwtl
fs
pushf
jbe
mov
sbb
bound
stos
jge
and
fwait
or
movsb
jae
pop
xchg
aaa
lods
mov
jmp
in
rcrb
sahf
sub
arpl
cmp
pop
es
out
push
push
mov
jnp
dec
cmp
xor
cmp
jg
leave
and
mov
nop
sbb
jno
les
push
mov
test
out
mov
cmp
and
xorb
sbb
xor
ret
ss
pop
testl
cld
scas
dec
shl
addr16
xchg
das
scas
stc
ljmp
test
xor
cli
int
inc
subb
inc
bound
movl
cmp
ss
dec
add
aad
ficoml
push
and
dec
cmp
adc
daa
aad
sub
inc
lcall
jle
dec
mov
pusha
stos
or
cmpsl
xchg
adc
sbb
and
mov
jp
ret
pop
push
ja
mov
data16
jne
arpl
xor
and
gs
pop
test
mull
xor
aam
xchg
mov
xchg
pop
addr16
test
mov
aam
ds
lock
bound
push
and
mov
mov
mov
mov
lods
cli
outsb
add
shlb
or
or
jg
push
mov
subl
icebp
jno
jae
dec
repnz
push
jbe
mov
js
push
in
sub
in
push
jbe
xchg
inc
sub
sbb
mov
mov
js
mov
outsl
push
pop
xor
sbb
imull
push
test
mov
pop
pop
mov
xchg
inc
and
cmp
imul
adc
dec
shll
ds
xor
fcomp
mov
push
inc
imul
adc
in
mov
push
xorl
loopne
jp
xor
or
adc
jns
sbb
inc
outsb
iret
mov
jl
push
jae
movsl
das
xchg
cs
inc
sbb
or
push
subb
inc
inc
jne
sbb
jns
mov
sub
decl
xor
cli
andl
xor
jle
out
ret
xchg
sarl
push
mov
daa
nop
pop
or
push
dec
sbbb
xchg
jo
daa
rolb
sub
xchg
cmpl
lods
xchg
adc
aad
cmp
cmp
pop
roll
and
dec
pop
cld
cmp
push
je
stos
cmp
dec
and
stos
fidivs
das
push
push
mov
aad
fadds
sbb
dec
push
fs
data16
push
stc
push
sub
and
add
cmpb
roll
push
ljmp
mov
pop
mov
pop
daa
test
test
push
jne
push
xlat
out
mov
lcall
lcall
lahf
xor
pop
addr16
push
pop
xchg
dec
movsb
mov
pop
cmp
inc
bound
in
push
imulb
lret
inc
pop
fdivrs
and
jns
and
xlat
das
idivb
mov
packsswb
hlt
inc
xchg
sbb
out
adc
outsl
mov
icebp
in
stos
outsb
xor
and
rolb
repnz
xchg
test
aaa
add
xor
insl
ds
jo
jo
cmp
sbb
mov
or
pop
adc
nop
rep
mov
cmpb
sub
js
adc
sub
jl
mov
test
ljmp
in
jmp
mov
lea
mov
punpckhwd
jle
dec
sbb
mov
inc
mov
in
enter
xor
mov
adc
in
cwtl
cld
or
xor
cmpsb
jg
lret
and
mov
adc
cltd
mov
repnz
xor
push
mov
or
adc
mov
fwait
sub
mov
cmp
xorb
dec
jmp
and
mov
pop
hlt
incb
lcall
inc
dec
clc
and
or
rorb
add
dec
cltd
shl
dec
in
push
popl
cmp
int3
jecxz
js
jp
add
lods
popl
jmp
mov
add
xchg
loop
inc
clc
lcall
sub
lret
cwtl
ficompl
scas
jg
jnp
sub
mov
test
stc
ja
push
sub
mov
xchg
test
pop
fildl
bound
cmp
jne
cmp
sbb
nop
adcl
push
pop
subl
cmp
push
ss
pop
test
jne
jmp
push
pushf
push
mov
sbb
pop
icebp
or
ja
rolb
sbb
ss
or
xor
sub
loop
adc
pop
fldenv
or
aas
push
call
push
rcll
out
cmp
dec
pop
pop
call
das
ss
xor
test
adc
jmp
mov
adc
aam
mov
repnz
and
add
jp
fcompl
adc
jbe
cmpsb
dec
cmp
orl
sbb
mov
lahf
mov
push
testb
and
xchg
xchg
loop
roll
lret
imul
orl
test
or
js
pop
sub
sbb
outsb
xor
mov
imul
sub
dec
jp
daa
cmp
sub
jbe
pop
incl
and
repz
and
mov
inc
adc
stc
sub
mov
xchg
adc
sbb
sbb
mov
test
inc
loop
ds
cmp
flds
rcll
jp
stos
aam
ds
into
pop
adc
add
add
out
push
and
pushf
dec
mov
repz
dec
and
sahf
push
sti
sbb
mov
fwait
pop
lret
adc
add
mov
sbb
jo
loop
enter
aam
dec
pop
int3
imulb
sub
xor
icebp
fadds
call
adc
icebp
mov
repnz
fwait
popa
repnz
shl
push
loop
mov
mov
in
jmp
jae
aaa
cltd
or
test
mov
xrelease
jle
push
mov
in
rcrl
out
push
mov
cltd
push
std
push
subb
and
push
pop
cs
or
adc
insb
leave
add
jmp
mov
sbb
push
jb
add
dec
sarl
rcrl
les
mov
fadds
ret
enter
mov
mov
xor
sub
ss
insb
fnstenv
sub
cli
int
arpl
inc
or
rorb
ja
cli
sbb
push
scas
cmp
cmpsl
add
jns
gs
xchg
pop
sbb
shr
cmp
daa
sub
push
lea
jno
mov
sub
insl
push
pop
fldln2
imul
lds
sbb
push
xchg
rclb
xorl
and
mov
push
or
adc
notb
pop
pop
dec
mov
sbb
out
add
das
rorb
push
test
sbb
lsl
inc
push
mov
mov
mov
xor
xlat
leave
mov
push
lret
lock
shl
xchg
inc
icebp
stos
dec
push
loop
imul
data16
xchg
outsb
mov
mov
adc
xor
lea
arpl
sbb
mov
and
dec
jns
xor
mov
rclb
int
shll
push
add
fwait
add
add
icebp
cli
push
mov
or
add
test
adc
pop
movsl
into
add
xor
cld
lcall
shr
jmp
pop
es
sbb
jmp
inc
shll
ret
outsl
imul
push
inc
add
je
gs
mov
mov
mov
sbb
bound
jno
cmc
add
ljmp
jle
cli
dec
mov
ficompl
jae
mov
push
fcoml
mov
insl
jns
fcmovu
and
std
push
test
push
scas
scas
fs
out
repz
mov
and
jmp
inc
mov
repnz
jo
mov
cmp
popa
xchg
aas
mov
or
mov
xor
fsts
jp
shll
mov
mov
add
outsb
movsl
daa
imul
rcrb
loop
jo
push
and
int
mov
push
jns
pop
dec
rcrb
cs
mov
xchg
imul
loopne
mov
dec
fsubl
std
inc
mov
out
adc
and
mov
or
push
pop
fs
mov
xchg
lods
rorl
rorb
adc
icebp
movsl
pop
push
or
out
pop
scas
hlt
sub
push
icebp
adc
out
outsb
push
mov
jno
cltd
inc
push
push
iret
jl
add
dec
fsubs
mov
pusha
mov
cmp
fcomp
and
cmp
jmp
scas
pushl
aas
xor
out
out
out
sub
in
mov
jne
ja
inc
stos
es
pop
cwtl
xor
mov
je
push
in
int
push
dec
int3
cmp
sub
push
dec
adc
mov
xchg
fsin
inc
lret
fdivl
cmpsb
push
sbb
fbld
bound
xor
arpl
pop
loop
and
les
adc
xchg
sbb
and
rolb
mov
push
cli
sbb
add
adc
cwtl
cmpsl
add
test
outsb
scas
sbb
add
mov
pop
sub
insb
lahf
ljmp
mov
jle
jmp
sub
std
ret
in
mov
mov
xchg
nop
imul
test
lea
jnp
movsb
or
loope
or
xor
adc
in
jle
inc
and
adc
lret
sbb
orl
lods
or
sub
or
xor
mov
shrb
inc
jno
loopne
dec
cli
scas
jns
sahf
mov
adc
pop
push
sub
pop
sub
dec
pop
or
mov
ja
cmp
mov
mov
mov
lds
int3
cmp
jmp
out
dec
fnsave
cwtl
fistpll
sbb
ret
repz
xchg
pop
addb
scas
jns
mov
push
addr16
popa
mov
ret
sti
inc
mov
sub
test
pop
into
mov
adc
push
nop
sub
aas
aaa
repz
mov
dec
fildll
xchg
repz
push
mov
mov
pop
lret
cmp
add
inc
cli
push
test
stc
clc
mov
out
js
and
mov
sub
push
inc
dec
push
push
push
cmp
or
mov
test
mov
dec
sbb
je
inc
repz
inc
or
jne
jae
lds
lret
mov
loope
stc
inc
mov
add
jmp
sbb
or
sub
xchg
fsubrl
jnp
test
push
aad
dec
out
testl
ror
test
xchg
bnd
adc
dec
pushf
inc
push
and
xchg
cmpsl
mov
jecxz
in
sub
dec
ja
add
add
pushf
loope
outsl
lods
or
mov
xchg
dec
dec
mov
fwait
or
fidivrl
sbb
cmpsl
and
cmp
stc
dec
in
iret
in
outsb
pushl
subl
aas
mov
cmpb
mov
jbe
inc
xchg
stos
jp
jae
jecxz
out
enter
and
cmpsl
jp
sbb
in
mov
push
data16
push
out
sub
mov
ds
or
xor
xchg
push
out
out
hlt
je
repz
repnz
lods
int
aas
jl
sub
push
lods
stc
sbb
fmuls
sahf
fmulp
test
and
iret
mov
test
or
mov
and
lea
mov
adc
adc
jmp
in
mov
push
js
adc
stos
cwtl
sub
sub
shlb
fsts
adc
fsts
sbb
es
fcmovnb
push
ss
pushf
dec
mov
roll
mov
iret
inc
lahf
movsb
insl
loop
loop
scas
fsub
xchg
cwtl
stos
cmc
lahf
call
stos
sbbl
jp
ret
popl
sahf
stos
sbb
xor
dec
push
fisttps
pop
jae
mov
or
xchg
or
lods
je
fdiv
insb
cmpsl
nop
mov
in
out
movsl
inc
inc
jl
cmp
mov
xchg
jns
sub
push
cmc
lock
hlt
leave
mov
push
lea
cmp
mov
dec
rcll
push
add
call
jnp
sbb
pop
out
inc
in
scas
xor
out
xlat
xor
push
xchg
pop
mov
mov
jo
pop
adc
lods
notb
jle
loope
loop
repz
push
imul
push
bound
push
or
xor
cwtl
or
mov
cmp
cmp
daa
fdivrs
out
shr
sbb
clc
loopne
addr16
sbb
jp
pop
stos
and
and
xchg
outsb
add
jmp
xchg
int
jne
jb
xchg
cmp
jne
outsl
mov
jg
jle
iret
lods
repz
es
add
test
stos
leave
cmp
test
dec
lods
mov
dec
enter
fisubs
in
fs
loopne
mov
cmp
iret
scas
xor
pop
scas
adc
jmp
and
hlt
mov
icebp
fwait
inc
inc
and
lret
cmc
mov
jne
sub
imul
sbb
add
daa
cmp
fdiv
or
or
pushf
mov
xchg
in
lods
xor
ret
in
cmp
lret
inc
ret
movsl
js
je
lret
xchg
inc
xchg
mov
pop
sub
repnz
scas
push
and
push
cld
ret
pop
fwait
dec
cltd
lods
rcll
mov
int
pop
jp
aad
stos
adc
dec
sub
sbb
cmp
fildl
push
and
jb
fwait
jns
movsb
jo
loopne
xchg
mov
dec
aam
push
imul
and
movl
pop
out
pop
add
xor
popf
sub
dec
lea
xor
dec
pop
hlt
mov
and
out
lret
cmc
cli
jmp
pop
clc
lcall
sbb
push
stc
cmc
and
daa
dec
leave
jp
sub
incl
pop
push
inc
sbb
movsb
jmp
inc
arpl
push
xor
xchg
mov
popf
jmp
pop
into
mov
mov
daa
add
es
cltd
pop
arpl
cli
sti
add
push
pop
xor
jg
xchg
add
sub
icebp
pop
or
mov
and
repnz
call
rcrb
rcl
das
pop
std
and
add
pop
and
out
insl
je
push
mov
cmp
out
imul
sbb
dec
arpl
add
lcall
scas
jmp
das
jle
ljmp
jns
mov
lods
or
xor
mov
xchg
mov
mov
push
push
outsl
ja
scas
or
ret
movq
mov
fs
inc
and
push
ljmp
pop
loopne
in
push
mov
pop
xchg
push
mov
in
repnz
push
push
mov
insb
dec
push
data16
enter
and
mov
outsb
mov
mov
xlat
pushf
pop
push
fwait
dec
aas
ret
mov
jo
or
sarb
sarl
mov
jmp
sbb
mov
iret
out
mov
mov
inc
insl
adc
cwtl
pop
int3
jge
shlb
dec
testl
repnz
cmp
lcall
push
and
fildl
xchg
adc
push
push
cmp
mov
mov
inc
dec
dec
scas
push
loop
jae
mov
call
jecxz
cmp
out
in
sti
sbb
clc
daa
push
mov
lock
pop
shlb
mov
mov
jo
fstpl
imul
sbb
mov
or
jmp
jge
int
out
adc
aad
lds
or
fdivl
imul
push
sbb
fimull
mov
and
shlb
pop
sub
cld
mov
pop
cmc
repnz
jb
pop
add
decl
sbb
cmp
jmp
mov
or
test
rorl
mov
nop
int
cli
je
xchg
inc
ljmp
sbb
rcrl
adc
sub
and
adc
mov
pop
out
stc
ss
scas
pop
and
repz
sahf
push
mov
push
popf
out
xor
xchg
stc
mov
jp
xchg
push
psubd
fsts
lds
daa
jle
cmp
dec
jl
mov
lcall
bound
decl
mov
shl
gs
xor
call
les
idivb
lahf
mov
adc
out
sub
fcomps
sub
xor
or
sahf
xchg
sub
int
rorl
jl
mov
pop
hlt
popf
lods
cld
loop
shrb
and
fnstcw
mov
fcomi
es
hlt
pushl
jae
adc
stos
fwait
sarb
out
in
cmc
je
cltd
xor
jp
iret
jno
or
cltd
push
sub
cmpsl
outsl
call
jg
lea
mov
lds
pop
call
movsb
xchg
sub
adc
xorl
jp
fisubrs
mov
push
push
aam
xor
xchg
aas
nopl
cltd
aam
ja
lds
jbe
dec
dec
insl
or
aam
inc
rcr
xchg
sbb
cmp
sbb
imul
pop
jmp
or
mov
je
cmpsl
les
ljmp
aaa
popf
xor
xchg
inc
in
nop
xchg
pusha
pusha
inc
mov
jno
cmc
scas
push
sahf
les
std
inc
test
ja
xchg
sub
xor
push
dec
lcall
mov
bound
sub
out
and
and
rcrb
adc
xor
loopne
test
jmp
pusha
xor
push
xor
loop
sbb
cmp
outsb
dec
stos
xchg
cltd
sti
rclb
fidivl
insb
ror
ror
inc
pop
push
jns
stos
mov
mov
sbb
pop
out
mov
ret
addr16
mov
mov
xchg
xor
shl
out
mov
jle
inc
pusha
lcall
inc
lret
sti
jp
std
jg
loop
mov
or
mov
mov
xor
or
jb
mov
repz
stos
cmp
and
inc
adc
repz
aas
and
iret
and
sti
pop
sbb
or
jmp
addr16
xor
es
mov
and
lcall
add
xlat
aas
adc
and
mov
rol
pop
xchg
cwtl
data16
movsb
jmp
fdivr
stos
pop
inc
cli
lahf
inc
inc
roll
and
inc
insb
int
imul
jbe
cli
mov
loopne
push
push
arpl
mov
mov
imul
std
stos
dec
fstpt
sbb
xchg
xlat
into
push
mov
aaa
xlat
inc
rcrl
pop
fildl
and
imulb
jno
daa
pop
cmp
cltd
out
loop
sbb
jne
ret
subb
sbb
or
mov
sub
sbb
mov
loope
push
stos
cwtl
push
xor
and
rcrb
mov
das
and
mov
testl
cmc
cltd
mov
fadds
or
cltd
loop
xchg
xchg
lahf
dec
insb
test
inc
jmp
bound
shrl
mov
jne
inc
out
inc
mov
push
adc
aaa
movsl
xchg
sub
stos
testl
push
mov
rcrb
mov
cmc
jmp
jb
cmp
jns
pop
pop
xor
lahf
dec
fstl
call
ja
addr16
mov
adc
fisubrl
xchg
or
mov
mov
das
adcb
shrb
ja
lret
jle
fwait
imul
pusha
cmp
push
push
and
dec
inc
hlt
les
or
cmpsb
push
lretw
or
stc
test
xor
add
mov
scas
xchg
test
pop
shll
mov
imul
inc
add
into
or
int
repnz
mov
ret
add
sub
bound
jge
and
jge
cmp
fisubrl
fstps
insl
cltd
gs
shlb
and
fnclex
inc
in
sub
or
jb
mov
push
and
es
push
mov
gs
or
addr16
shlb
pushf
fdivp
int
ds
cmpsb
dec
jmp
and
pop
xchg
mov
inc
or
and
mov
sub
clc
les
repnz
ja
mov
xchg
push
jo
das
push
xchg
popf
add
adc
popf
mov
je
cld
jo
add
push
mov
hlt
inc
mov
pop
mov
sbb
call
xchg
jb
cmc
mov
xor
add
daa
icebp
mov
lds
imul
jp
fs
dec
repnz
or
jne
mov
mov
pmaxub
cmp
mov
addr16
icebp
jle
fldl
inc
lea
in
lret
idivl
sbb
inc
cmc
pop
jmp
imul
shl
mov
jmp
add
jecxz
mulb
cltd
ljmp
push
or
cmovg
cs
dec
aas
inc
mov
in
pushf
mov
push
or
push
sub
or
mov
mov
sub
xchg
sarb
add
inc
cmp
pushf
scas
sbb
out
loop
lea
jge
in
inc
and
in
leave
dec
xor
push
outsl
idiv
outsl
sub
subb
xchg
test
jmp
dec
popl
inc
cmpw
sub
mov
test
inc
add
lods
sbb
stos
and
inc
ficomps
es
push
cltd
ret
mov
lret
das
jne
pop
dec
and
or
scas
fdivl
pop
sbb
scas
add
out
dec
push
sub
mov
jb
cmc
jmp
shl
pop
addr16
add
mov
sarb
insl
lods
popf
xor
fs
fistpll
mov
mov
ja
inc
es
jle
add
sbb
or
sbb
xorb
mov
push
sub
mov
mov
gs
ss
push
jge
sub
or
jo
outsb
add
xchg
pop
aad
pop
dec
sti
aad
data16
pop
push
pop
cmp
out
pop
mov
xchg
enter
jmp
pop
or
ret
mov
inc
into
aaa
ret
nop
rclb
cmp
sub
es
sahf
loope
and
jmp
mov
out
dec
imul
iret
cmp
aas
adc
xchg
lea
mov
mov
je
jns
movaps
pop
fnstcw
sub
loop
faddl
loopne
push
ficoml
lcall
xlat
cli
mov
jmp
pusha
mov
cmpsb
pop
cmc
outsl
movsl
mov
ret
sbb
jae
xor
sti
pop
out
mov
outsl
xchg
lock
xor
push
orb
inc
cmp
add
xor
nop
push
loop
fcoms
pusha
std
js
aas
inc
movsl
std
xor
insb
mov
mov
mov
or
mov
jbe
jno
pop
pushf
cmpsl
adc
sub
out
inc
aas
mov
outsl
xchg
inc
inc
out
clc
enter
mov
mov
mov
jge
or
dec
lcall
jmp
push
dec
mov
pop
test
pop
insb
stos
arpl
add
rolb
mov
insl
shll
fnsave
jl
sbb
pop
jmp
cmpsb
add
cmp
insb
jne
cmp
cmpsl
cmp
icebp
add
popa
pop
mov
or
mov
cwtl
mov
adc
lret
addl
cmp
out
std
xchg
inc
jbe
mov
jae
sbb
xchg
pop
sbb
mov
adc
lcall
inc
data16
dec
mov
pop
and
movsb
mov
mov
or
xor
mov
pop
add
cmp
call
movsl
sub
jne
movd
clc
repnz
xchg
and
int3
add
cwtl
pop
mov
push
ss
shl
fidivrl
mov
jno
ds
repnz
sbb
mov
xchg
push
cmpsb
sbb
dec
andl
repz
cmp
aas
mov
sub
lret
mov
popa
pop
test
lcall
imul
or
xchg
jecxz
shlb
jns
or
cld
lock
popf
lock
sub
push
adc
jp
dec
arpl
jecxz
sub
daa
jl
clc
inc
mov
outsb
dec
sub
daa
cmp
addr16
adc
jns
testl
int
cmp
sub
pop
mov
in
or
test
in
jp
jmp
mov
xchg
xchg
and
inc
cltd
add
imul
mov
xlat
pushf
push
aaa
sbb
mov
xchg
and
xchg
lahf
jp
cmp
js
inc
cld
fisttpl
inc
adc
ss
or
std
jbe
js
xchg
cmovns
mov
xor
push
pop
in
xchg
add
xchg
cmpsl
js
adc
cld
mov
dec
jns
add
or
sub
mov
pop
cld
outsb
xchg
mov
push
andl
push
in
jg
das
scas
insb
and
inc
xor
xor
out
push
repz
pop
orl
sbb
scas
mov
adc
xchg
movsb
insl
flds
adc
test
pop
mov
sbbl
sbb
test
and
pop
fs
add
movsb
fs
scas
and
add
xor
push
xor
sub
orb
popa
loope
pop
popf
cli
jnp
cmc
daa
les
add
dec
mov
sbb
dec
and
das
pop
push
imul
sarb
aad
or
adc
fcoms
idivl
fisttps
and
xchg
dec
xor
mov
aam
sbb
dec
sub
repnz
add
dec
mov
pop
popf
fwait
outsb
sub
les
and
pop
sub
movsb
mov
add
aad
or
cmp
pushf
cmp
mov
sub
sub
notl
cltd
jg
jno
shrb
mov
xchg
push
push
add
cmpb
cmp
lret
je
ja
mov
movsb
leave
je
inc
sti
addl
pop
je
movsl
stos
and
ss
enter
inc
in
clc
and
in
xchg
leave
sbb
decl
inc
jg
inc
mov
rcl
out
cmpsl
and
icebp
lea
inc
mov
ja
mov
ljmp
xor
lds
stc
inc
test
lds
and
mov
ret
insb
and
xor
fisubrl
faddl
iret
stos
nop
jno
hlt
push
push
popa
into
cmpps
in
push
stos
sti
jle
cmpb
frstor
psrlq
dec
ljmp
in
xlat
xchg
sub
mov
or
jmp
into
sbb
out
ffree
or
roll
or
sbb
xor
and
push
push
or
jnp
pop
pop
movsl
rcl
pop
xor
dec
data16
sbb
add
pop
jb
movsl
push
outsb
or
pop
xor
mov
jne
dec
push
jne
mov
push
mov
pop
out
sub
loope
shlb
push
sbb
daa
js
out
scas
leave
int
pop
jno
call
orb
adc
sub
add
mov
ss
jns
jne
pop
add
imul
arpl
fldt
jmp
popf
push
ss
int
mov
or
xchg
pop
sub
push
sbb
jmp
sti
inc
loop
gs
test
stos
adc
cs
int
mov
cmp
push
push
lcall
not
mov
pop
jmp
jecxz
jbe
scas
in
mov
cmp
cmp
add
adc
arpl
or
mov
stc
aaa
push
jbe
aaa
add
cmp
addl
cmpsb
add
xchg
daa
adc
pop
pop
lcall
sbb
xor
fimull
pop
push
aas
pushf
push
es
inc
xchg
and
fdivr
xchg
shl
jae
jl
dec
rcll
xlat
pop
cmp
sahf
jle
adc
dec
nop
jecxz
nop
xor
mov
dec
xchg
mov
push
call
cli
xor
xchg
dec
dec
fsubs
and
aad
add
arpl
push
sbb
sbb
jle
push
push
mov
mov
fnstsw
sub
push
fadds
dec
xor
addb
movsl
test
int3
jbe
loop
mov
scas
and
sub
idivb
xchg
pop
mov
je
or
call
add
scas
rol
add
mov
pop
bound
mov
int
xchg
lcall
mov
imul
inc
mov
mov
dec
lcall
mov
imul
cmp
xchg
mov
push
or
je
stos
xchg
add
mov
aad
adc
jb,pt
pop
les
adc
inc
add
fcmovnu
test
addr16
insl
and
jnp
loop
mov
inc
inc
nop
lahf
push
dec
arpl
test
cmc
xchg
xchg
xchg
inc
pop
xchg
pop
movsl
or
mov
jle
stos
cmp
iret
imul
loopne
add
scas
inc
inc
xchg
ret
dec
lock
aaa
dec
pop
xor
cmc
inc
fs
cmp
arpl
jns
jnp
mov
adc
mov
shrl
loop
jns
sbb
lret
loop
cmc
sbb
cmpsb
pop
mov
push
mov
call
popf
mov
lmsw
mov
adc
mov
adc
sub
std
cli
loopne
fwait
cmp
dec
add
push
test
xor
movsb
and
jb
push
lods
mov
shr
fwait
jmp
les
mov
scas
ret
add
loope
in
movsb
repnz
int
xchg
mov
push
in
xchg
cld
or
or
stos
mov
mov
call
popf
out
xor
jnp
cltd
mov
mov
adc
and
sub
imul
aad
or
std
pop
pop
iret
mov
xchg
jno
andb
fildl
nop
inc
xor
add
cmp
sub
addr16
and
and
iret
scas
or
and
test
sbb
stc
les
outsb
fs
xlat
push
lcall
or
lods
cs
mov
ljmp
xor
mov
aad
pop
inc
addr16
or
or
push
in
leave
jl
sahf
leave
addr16
or
sub
je
arpl
ds
push
int3
xchg
bound
xor
imul
xor
lret
xchg
das
scas
outsb
sbb
add
mov
add
push
pop
and
clc
dec
dec
dec
fistpl
dec
hlt
loope
stc
jno
xchg
mov
add
imul
and
sbb
sbb
arpl
add
int3
jo
pusha
cmp
add
mov
xchg
sub
jne
sarb
fcoml
pop
sub
rolb
insb
sbbb
les
sti
jg
fstp
mov
repz
je
cmc
aaa
cmpb
and
orb
cld
rcrl
mov
fstpt
mov
cwtl
cmp
cli
jge
int3
lock
shrb
jge
xor
push
ficompl
jae
sbb
and
xchg
adc
addr16
xchg
inc
cmpl
pop
pop
call
pop
ds
faddp
lods
sbb
push
les
scas
mov
iret
fimuls
mov
add
pop
mov
and
lods
inc
cmc
sbb
ja
ds
sarl
lds
sbbl
sbbb
add
lcall
daa
and
aaa
arpl
jbe
xchg
dec
cmc
sub
dec
or
cmp
jp
pushf
jg
sarl
cmp
loope
sti
lds
ljmp
and
mov
out
lods
bound
xchg
lea
pop
dec
push
in
out
fsubs
jl
mov
push
jle
leave
icebp
rcrb
sbb
adc
popf
ljmp
mov
pusha
ret
ljmp
repz
xor
jmp
push
enter
jnp
iret
orb
dec
insl
daa
dec
in
stos
cli
loop
push
push
fwait
mov
inc
jge
cltd
mov
jl
sbb
icebp
test
dec
sbbb
adc
mov
imul
in
lods
cmpsb
fadds
dec
cmp
sarl
in
sbb
cli
mov
sbb
cmp
mov
clc
call
fs
fildl
mov
sub
sti
fdivs
test
out
mov
or
mov
lds
addr16
add
mov
jge
and
jg
jns
or
sbb
xor
sbb
cmp
inc
iret
mov
mov
hlt
xor
cmp
add
shll
popf
dec
jno
movsb
mov
mov
in
test
push
pushf
xor
cmp
or
jne
jbe
ret
movsb
int
mov
nop
xor
cmp
aam
enter
push
scas
sub
mov
xorb
daa
out
add
xchg
push
outsb
jno
test
stc
sbb
insb
pusha
mov
xor
clc
test
cmp
lret
ret
cmpsl
push
sbb
jnp
pop
clc
xorb
mov
in
xor
out
in
mov
sbb
xor
xor
lods
pop
mov
fnstcw
jne
push
push
mov
pop
cld
xor
pop
sahf
inc
pop
push
in
jb
xor
stos
push
pop
icebp
fistps
ds
pop
jmp
lds
pop
lcall
inc
sbb
cli
pop
pop
pop
cli
inc
pop
adc
push
push
popf
loop
push
ret
xlat
add
subb
inc
pop
lock
jno
sbb
and
js
or
sahf
jae
adc
inc
out
lcall
adc
clc
push
call
push
add
mov
push
loop
sahf
push
jae
mov
jo
sbb
cltd
outsl
pop
mov
jns
inc
fsubrl
in
fstps
jl
test
mov
loop
dec
xchg
cli
sub
pop
mov
fdiv
sbb
rorl
aad
insl
dec
sar
es
inc
xchg
in
inc
pushf
jo
sbbb
adc
push
mov
mov
pop
or
xor
pop
cld
mov
int
shr
xchg
sub
add
push
outsl
push
sbb
or
or
dec
cmc
lret
inc
int
mov
jo
sbb
add
negb
xor
jb
pop
cmp
jg
push
sbb
adc
dec
inc
imul
andb
idivl
mov
mov
adc
jmp
insl
pop
xchg
cmpsl
nop
aas
pop
mov
es
testl
push
pop
xchg
hlt
test
push
push
xor
mov
mov
ret
or
btrl
loope
dec
mov
loopne
dec
dec
int3
ret
and
push
sbbl
lcall
lds
lock
jl
push
js
pop
scas
pop
push
leave
mov
adc
imul
pop
aas
insb
loop
lea
in
push
popf
xor
push
gs
jae
add
stos
mov
ret
push
pop
lock
push
rcrl
cmpsl
fidivrs
leave
ror
xor
dec
add
and
xlat
cmp
push
into
aaa
jne
popf
lcall
mov
inc
push
jg
leave
and
and
movl
dec
jnp
jae
stc
pop
dec
test
inc
mov
cmpsl
sub
mov
or
mov
test
in
fisubrl
pop
mov
in
dec
sub
fwait
push
lea
fimuls
or
inc
ds
lret
push
or
pop
rorl
aaa
or
cmc
dec
fadd
sbb
mov
mov
das
fs
cmpsl
or
sahf
mov
mov
push
fdivrl
int
loopne
mov
lahf
pop
push
push
and
and
xor
mov
pushl
fsubl
ss
xchg
push
repnz
psubsb
push
nop
push
rorb
jae
inc
or
dec
sub
negb
pushf
insb
icebp
xchg
leave
add
lock
cmpsl
xor
push
jp
xchg
and
faddp
dec
rorb
dec
jge
hlt
pop
mov
inc
dec
mov
adc
sub
mulb
jne
adc
addr16
fcoms
push
in
lds
inc
cltd
sub
inc
mov
fs
jecxz
fdecstp
dec
xchg
pop
movsb
daa
inc
push
outsl
sahf
leave
aad
xor
sbbl
js
or
pop
inc
inc
sbb
imul
mov
mov
cltd
inc
rorb
and
out
mull
fs
fbstp
test
lods
mov
repnz
mov
sub
popf
sbb
dec
mov
aam
sbb
sub
scas
cld
mov
test
ret
jns
pushf
pop
sbb
outsb
nop
mov
test
outsb
push
into
mov
xchg
xchg
dec
mov
dec
cmpsb
mov
mov
xor
cmp
cs
sub
push
cmp
cmp
mov
dec
cmp
jge
jne
xchg
cmp
and
pop
inc
xchg
jno
lahf
or
jae
jo
fstp
xor
ljmp
cs
and
mov
lahf
rcr
or
rcr
mulb
lahf
adc
shll
dec
sbb
xor
movsb
sub
test
imul
jge
add
xor
jl
xchg
mov
lods
das
adc
ret
pop
cmp
pop
cmp
movsb
dec
cmp
sub
inc
fdiv
into
adc
cltd
adc
or
push
mov
mov
fisubl
mov
stc
mov
fsubr
data16
xorb
push
fldl
imul
ret
in
cmp
fnsave
mov
mov
test
mov
xor
dec
add
jmp
add
fxch
filds
sub
mov
cs
js
je
data16
and
inc
in
sub
push
mov
mov
xchg
leave
cmp
mov
cld
mov
pop
leave
pop
push
icebp
sbb
push
lret
sub
pop
pop
pusha
or
jge
insb
fisubrl
out
scas
movsl
add
dec
push
mov
cli
mov
fnstsw
frstpm(287
xor
cmpsb
mov
mov
push
mov
scas
aam
lods
arpl
out
mov
notb
sbb
xlat
roll
add
jnp
btr
cmp
lret
lcall
add
filds
mov
fimuls
add
enter
xchg
fmulp
sub
inc
jle
cs
and
lret
cmp
push
mov
pop
xchg
cmp
inc
cmpsl
pushf
xlat
lahf
fxch
jg
in
rorl
or
xchg
pop
test
addb
jl
shlb
out
clc
jecxz
js
pushf
jmp
test
and
dec
fs
xlat
fwait
pushl
mov
lods
pop
clc
mov
insb
loope
xchg
sub
sub
pop
inc
aam
adc
mov
inc
shlb
fwait
andl
popf
inc
mov
lret
outsb
and
icebp
pop
loop
fimull
push
pop
aad
mov
fildl
dec
xchg
icebp
jge
push
jmp
negl
fimuls
pop
pop
mov
or
repnz
mov
and
outsb
testb
cmovg
movsl
push
hlt
sarb
fdivs
pop
std
ucomiss
cs
leave
adc
mov
comiss
bound
jno
inc
sub
out
inc
pop
sahf
jl
sbb
mov
ret
dec
daa
sub
cmpl
sti
stos
dec
cld
push
icebp
sub
jns
push
hlt
sbb
cmp
imul
nop
xchg
cld
mov
lret
cmpsl
push
mov
lds
gs
loopne
js
outsb
push
xchg
cmpsl
fwait
lea
xchg
sub
nop
les
jnp
ret
sbb
xchg
inc
fs
fs
push
insl
mov
mov
jp
pop
xchg
mov
xor
add
mov
subb
shll
sbb
in
in
inc
pop
add
xor
aam
jl
out
lret
ret
xor
ficoml
cltd
and
aaa
dec
daa
xchg
sti
jno
sub
dec
push
repnz
es
lcall
bound
into
int
jns
inc
push
push
adc
mov
call
mov
mov
das
aaa
xchg
or
ret
popa
adc
inc
push
ja
lahf
mov
push
dec
stos
cwtl
xor
mov
dec
lds
ret
ds
sarl
or
xlat
sub
mov
pop
adc
mov
je
adc
push
int
je
dec
mov
pop
imul
xor
out
imul
std
pusha
ret
in
jecxz
pushf
insb
jne
lods
leave
sub
test
or
adc
push
das
pop
sbb
daa
iret
cltd
xchg
int3
outsl
outsl
out
testb
in
sbb
xor
outsb
repz
pop
faddl
ror
nop
mov
mov
add
and
cld
mov
ss
mov
push
pop
mov
mov
and
dec
jns
add
xor
int
fucomi
xor
js
pop
movsb
icebp
idivb
jno
outsb
cmpb
adc
sub
cmp
popa
aam
inc
orb
mov
pop
cli
nop
inc
dec
mov
rcl
fcompl
mov
push
xor
sbb
push
jae
mov
or
dec
or
cmp
lea
mov
loopne
jo
or
out
pop
add
arpl
pop
or
xlat
pushf
movsl
clc
ret
gs
mov
popf
sub
orl
adc
inc
sahf
adc
fwait
xchg
add
xor
push
call
aas
xor
dec
out
out
cli
cmc
inc
mov
jo
add
adc
fcomps
lea
dec
es
iret
subb
push
cld
cmp
loope
pop
adc
sbb
clc
mov
leave
stos
rorl
add
push
scas
sti
cmp
stos
fwait
cmc
inc
push
push
ficoms
pop
cmpsb
xchg
test
push
das
fwait
cs
sbb
mov
push
dec
nop
jo
loope
sbb
in
jg
cmpsl
lahf
aas
loope
or
pop
cmc
pop
psubsb
mov
dec
das
in
es
out
cmp
rcrb
cwtl
mov
add
dec
push
mov
inc
das
test
nop/reserved
push
repnz
lods
in
sub
cmpsl
sub
xor
and
inc
rolb
pop
jecxz
fstl
gs
test
insl
loope
add
nop
addb
mov
movsl
mov
call
xor
mov
push
jmp
es
rolb
fsts
int
call
inc
rcll
test
mov
js
and
mov
inc
sub
pop
dec
movsl
sbb
stos
je
jne
call
ljmp
or
cwtl
cmp
outsb
add
out
adc
hlt
pop
shrb
dec
cmp
mov
clc
cmpsl
leave
shlb
jle
or
push
icebp
lret
rcrl
adc
sub
mov
and
mov
cmc
bound
lea
aad
stos
cli
sub
clc
mov
loop
or
xchg
les
xchg
add
adc
add
sub
jmp
div
hlt
or
xchg
inc
pop
lret
notl
mov
inc
arpl
jmp
jns
inc
outsl
cmpsb
and
out
cli
xor
fdivs
popa
mov
inc
out
icebp
call
scas
xchg
mov
mov
in
mov
test
andb
dec
es
fwait
movsl
in
aaa
imul
ds
repz
mov
pop
rcl
jmp
sahf
loope
and
gs
jno
fwait
js
pop
data16
rcr
insl
mov
jmp
push
lcall
lock
mov
mov
adc
pop
fadds
push
emms
pop
cmp
movb
movsb
mov
sub
push
je
inc
sbb
mov
fimull
mov
pop
lods
cpuid
inc
ret
int
pop
ficoml
pusha
adc
dec
add
or
test
cs
cltd
and
add
sub
xlat
loop
fldt
cmp
push
sbb
mov
jg
push
and
rolb
fwait
mov
mov
fildl
push
sub
add
mov
push
xor
mov
dec
push
inc
dec
hlt
ret
mull
sbb
mov
xor
push
mov
sbb
xchg
and
or
stos
pop
int
in
gs
cmpsb
clc
fs
bound
mov
jmp
xor
jo
jmp
stc
lahf
cmc
ds
rcrl
ja
cld
js
test
addr16
pop
gs
lea
jmp
pop
pop
stos
fcmovb
mull
add
movsb
rolb
mov
cld
mov
pop
jns
cmc
push
cmp
and
mov
dec
stos
test
adc
iret
xor
jp
cld
mov
fisubl
rol
rcr
dec
adc
sti
push
cs
imul
ja
daa
daa
cs
arpl
call
outsl
repz
in
hlt
push
push
cwtl
out
test
outsl
ljmp
dec
das
dec
aam
pop
and
insl
dec
push
xchg
fistpl
sti
pop
test
int
subb
xchg
push
and
inc
pop
pop
test
mov
je
mov
cmpsb
mov
lock
adc
lahf
cwtl
dec
cmp
mov
sbb
or
pushf
push
dec
jmp
jo
cmp
pop
push
rcll
test
sub
sub
sub
cmp
test
les
fildl
mov
mov
bound
jo
gs
les
daa
sbb
adc
pop
pop
add
xor
lods
in
inc
fstl
out
pop
push
xlat
mulb
adc
fisubl
out
scas
push
shll
test
mov
mov
sub
lahf
test
sbb
jl
nop
ja
fildl
aas
punpckhbw
mov
inc
cmp
add
sub
push
mov
xchg
add
sbb
mov
or
lods
pop
sbb
and
flds
mov
xor
or
cmp
enter
cs
repz
mov
shlb
mov
mov
push
inc
test
add
pusha
sbb
in
cmp
inc
fcomps
gs
cmp
clc
add
notb
inc
aam
icebp
jecxz,pt
lahf
out
push
mov
cwtl
scas
in
xchg
push
popa
and
mov
pop
lcall
clc
sbb
dec
xchg
add
fsubl
out
mov
mov
movb
push
cmp
cld
addr16
sbb
or
bound
jbe
mov
pop
enter
sbb
and
xchg
cmp
add
cmp
sub
dec
sahf
movsb
in
addr16
insl
xchg
fcmovb
push
dec
shrb
lds
lods
dec
lds
mov
stos
push
and
lds
jmp
insl
push
mov
sbb
insl
adc
push
mov
mov
pop
adc
into
adc
cs
out
imul
mov
fnstenv
insl
mov
xchg
xchg
cmovle
jno
inc
jae
push
push
mov
gs
dec
sub
inc
gs
xor
lock
imul
or
insl
sar
push
adc
jl
inc
cmc
sti
xchg
push
mov
adc
std
test
std
jge
xlat
cmp
repnz
ss
aaa
stos
mov
pop
mov
lcall
mov
mov
into
mov
dec
dec
mov
pop
data16
mov
jmp
mov
pop
cmc
mov
iret
fnstenv
push
ret
bound
jne
mov
adc
loopne
cmc
sbb
push
test
push
mov
jg
add
dec
lret
push
push
mov
test
adc
sub
pop
cld
mov
pop
in
cmp
dec
aam
mov
lret
subb
mov
clc
out
add
cmp
sub
push
scas
lods
cs
cmp
cmp
xor
jo
js
push
xchg
lcall
push
in
xor
lret
mov
ret
xchg
dec
xchg
fiaddl
add
sub
mov
mov
addl
insl
scas
lods
lea
mov
repnz
daa
dec
iret
inc
pop
xchg
fisubl
inc
sbb
std
or
hlt
movsl
jl
scas
fcomip
inc
sahf
in
jno
int
push
sub
push
jl
pusha
jb
xchg
mov
and
add
or
mov
das
jne
xchg
dec
lret
mov
popf
add
out
push
push
jmp
sub
loope
mov
mov
test
add
xor
js
int3
cwtl
sahf
fdivrs
cli
aaa
add
pop
dec
test
shl
cmp
cmp
lods
mov
pop
jae
xchg
mov
mov
mov
std
cmp
psubsb
inc
sahf
or
in
js
mov
outsb
in
xor
rclb
and
and
pop
dec
xchg
mov
cmp
jb
dec
arpl
out
jg
and
out
shr
je
ret
stos
mov
shl
stos
add
clc
cwtl
cmp
enter
jb
cs
mov
inc
push
xchg
mov
sub
jmp
mov
push
lock
movsb
popa
mov
dec
loope
dec
jne
lods
cmpsl
mov
pop
xor
and
jl
dec
int3
popf
jle
js
dec
pop
insl
ja
cmpsb
aam
cmp
push
xor
repnz
incb
add
shll
repz
out
jo
push
pusha
aas
jl
jnp
cmp
push
mov
popf
cmp
in
cs
xor
mov
cmp
pop
mov
sbb
repz
push
arpl
jb
movsl
pcmpgtw
iret
xor
es
cmpsl
push
jle
lret
addr16
pop
out
pushf
xchg
outsb
lret
push
jge
bound
and
fs
sub
lock
jns
pop
inc
stc
jns
adc
out
pop
or
sbb
mov
xor
lock
sbb
int
bsr
push
or
mov
sbb
sti
ja
lahf
mov
mov
out
mov
insb
iret
divb
dec
push
xchg
in
and
sbb
fimuls
pop
mov
cmp
ret
xor
dec
mov
and
in
xor
and
push
lea
fwait
sbb
subb
push
ret
inc
xchg
lret
jo
sbb
mov
ljmp
fwait
orb
loop
mov
repnz
lods
sbb
and
mov
sbb
in
xchg
or
push
lahf
ffreep
insb
shll
cwtl
aam
test
sbb
movsl
inc
jae
cwtl
fldt
bound
mov
test
push
xor
push
mov
xor
cmp
push
je
mov
cmp
lret
arpl
lds
pusha
mov
stos
jmp
adc
nop
inc
add
ja
ret
mov
int3
mov
jnp
jbe
pop
add
pop
xadd
das
and
sbb
ss
in
pop
pop
pop
es
lds
enter
mov
fstl
adc
jnp
sbb
mov
add
jb
loopne
popa
bound
and
mov
xor
jo
mov
xchg
mov
mov
add
mov
imul
sbb
popa
xor
mov
pop
mov
add
cltd
xor
jno
mov
mov
stc
cs
inc
and
mov
das
pop
cli
nop
xchg
xchg
mov
mov
adcl
lret
testb
and
ret
add
shl
imul
out
pop
cs
adcl
aam
mov
mov
and
pusha
fadd
push
insl
test
and
adc
xchg
repz
nop
outsb
adc
ficoml
mov
ds
adc
shll
cli
aam
pusha
outsl
xchg
cltd
insl
jle
push
push
add
inc
ss
cmpsl
pop
out
push
cmpsb
xchg
je
aad
imul
pop
mov
lods
add
mov
pop
jns
ret
jne
scas
jp
cld
int
jg
aad
xor
lds
in
add
sbb
repz
xchg
les
into
sub
xchg
xorl
and
xlat
mov
addb
jg
inc
adc
loop
pop
pushf
sbb
movl
adc
and
lret
ja
cli
cld
pop
add
shrl
add
mov
int3
push
sbb
shl
cli
mov
inc
or
cmp
addr16
mov
lock
pop
jnp
and
loope
mov
aas
add
dec
jmp
adc
push
push
pop
aas
sub
and
or
hlt
sub
add
fmuls
xor
inc
mov
or
push
leave
jp
dec
popf
push
cmp
fnstsw
sub
xor
inc
sub
mov
pop
cmpsl
mov
mov
mov
jbe
or
jae
leave
sbb
fnstenv
sub
xchg
imul
and
push
dec
clc
loop
inc
push
mov
adcb
mov
int
enter
sub
mov
ljmp
popa
jo
mov
cmpsl
cltd
push
cmp
rcll
data16
adc
sarb
adc
fwait
jno
push
test
dec
scas
fisubrl
movsb
and
lea
aas
or
mov
mov
add
or
mov
cld
pop
dec
imul
bound
xchg
data16
jp
xor
lds
jmp
repz
hlt
adc
pop
sti
cltd
or
mov
aas
in
jno
test
mov
pop
push
ljmp
inc
xor
rolb
out
mov
jl
or
sub
rcll
loopne
or
add
gs
sbb
fidivl
push
sbb
dec
repz
lods
cmp
xor
cmp
sbb
loope
es
push
xor
dec
xor
inc
mov
push
lods
mov
fisubrs
into
fmull
lds
rcrb
inc
les
and
aaa
les
test
sub
addr16
je
xorps
cmp
fcoms
rclb
scas
mov
adc
lret
movsb
xchg
and
xor
ds
inc
pop
dec
mov
fwait
jnp
ljmp
jge
pop
loopne
xchg
dec
mov
mov
in
sbb
into
stos
lret
ss
movsb
shl
add
xor
aaa
or
shlb
inc
cmp
push
jl
cmp
xor
cld
ljmp
push
xchg
jbe
sbb
lock
inc
xor
jne
push
xchg
stc
push
push
mov
pop
jae
pop
jmp
int
mov
jl
enter
inc
lcall
mov
mov
sub
les
xchg
aaa
idivb
xchg
fistpll
sub
stos
pop
push
cld
adcl
in
mov
aas
mov
adc
stc
xchg
and
mov
jecxz
outsl
ror
das
ss
xor
push
push
in
push
loopne
sti
in
cmc
aaa
inc
fimull
test
out
scas
mov
into
test
shlb
jp
mov
sbb
repnz
xchg
or
dec
mov
outsb
adc
or
inc
sub
andl
adc
ret
cmc
mov
mov
ret
fldpi
xchg
add
jnp
mov
xor
jl
adcb
and
jg
and
dec
xchg
push
and
cmp
test
jns
mov
and
and
int
adc
dec
test
lods
mov
xchg
in
jl
adc
mov
or
sahf
jl
addr16
and
xor
loop
jp
hlt
dec
jle
repz
mov
or
or
insb
and
in
insl
scas
mov
xchg
pop
mov
push
push
shlb
dec
cmp
stos
pop
dec
test
movl
loope
aam
add
cmp
push
sbb
roll
jmp
dec
lods
sbb
sub
je
and
dec
xor
xor
dec
loop
lock
mov
test
test
imul
xchg
mov
filds
cs
fldt
mov
inc
rcrb
insb
pop
sahf
mov
dec
adc
dec
movsl
inc
inc
rorl
test
push
movsb
jmp
push
push
push
dec
mov
xchg
push
xchg
test
sbb
xchg
lcall
in
ss
mov
in
sti
lahf
add
and
fidivrl
loope
xchg
shrb
popf
jno
cmp
add
imul
outsb
jbe
cmpsl
xchg
out
jb
xchg
pop
cmp
mov
imul
lahf
push
repnz
shl
call
lret
call
pop
les
adc
fld
and
je
mov
in
pusha
pop
fdivs
int3
test
ret
dec
lods
push
fs
iret
scas
dec
mov
xchg
jo
fdivl
xor
sbb
mov
mov
lahf
shlb
dec
lods
ljmp
lds
sbb
push
add
icebp
fbld
xchg
leave
in
imul
add
movsl
jno
jae
mov
cmc
xchg
fwait
popa
or
ljmp
cmpsl
jle
inc
shlb
xchg
jmp
or
sbb
out
push
fdivrl
test
mov
ss
push
or
jle
stos
aam
dec
in
cmc
xor
sbb
jl
jbe
icebp
mov
clc
repz
mov
dec
popf
orl
sbb
xchg
pop
out
ljmp
int3
in
push
rcll
push
inc
pop
cmp
xor
jns
push
xor
mov
cmp
inc
dec
lds
jp
pop
inc
sub
movl
add
inc
imul
fldenv
fxch
jp
lcall
jb
xchg
iret
pop
ss
aad
jle
test
cmc
sub
out
loopne
stos
or
adc
dec
cmp
negl
scas
add
mov
sbb
sbb
or
insb
lock
setae
mov
dec
test
lcall
fsubrl
aad
sbb
xor
cmp
inc
clc
mov
loope
xchg
jne
and
pushf
inc
mov
into
push
rcrb
shrl
jo
lods
mov
or
aaa
imul
std
xchg
stos
fildll
pop
pusha
adc
subl
jle
fimull
fmuls
adc
lods
mov
xchg
mov
lret
outsl
dec
mov
sub
dec
push
push
cmc
ja
daa
js
push
imul
fiadds
xchg
rorb
rolb
lret
adc
jp
fwait
out
leave
ss
jmp
idivb
xorb
sti
mov
in
sbb
pop
inc
test
stos
std
jbe
jb
jae
or
ds
lcall
pop
popl
mov
cltd
repnz
and
mov
adc
mov
addb
jge
icebp
adc
lcall
cld
punpckhbw
push
out
pop
mov
sti
ret
fimuls
sbb
adc
lea
push
mov
and
mov
pushf
daa
cli
lods
gs
icebp
aaa
sub
adc
hlt
cmp
in
call
clc
adc
rolb
out
mov
shrb
pusha
daa
push
outsl
test
dec
cltd
and
sbb
icebp
repnz
into
jl
cmp
pop
lds
insb
cld
loope
into
or
push
jmp
xchg
adc
js
xor
sub
loop
std
sbb
push
std
rcr
into
or
dec
daa
out
xchg
xor
and
add
loop
mov
lret
pop
sub
pop
int3
add
je
mov
pop
int3
arpl
xchg
pop
dec
sarl
subl
pop
aad
push
test
pmullw
mov
dec
add
stos
rorb
sbb
nop
frstor
cltd
dec
loop,pn
daa
adc
inc
or
jmp
mov
sub
xchg
shld
pop
lret
lahf
and
dec
xchg
adc
es
pop
cmc
scas
dec
pop
pop
cmp
jae
insb
sub
jo
mov
adc
cwtl
insl
xchg
pop
cmp
call
jle
rcr
jb
cmp
push
dec
arpl
mov
rcrb
push
jp
lods
repnz
lods
dec
in
fsubrs
push
and
shr
inc
lea
sub
stos
in
sbb
test
fmuls
xchg
pop
int
pop
fucomip
ret
jb
sub
fnstcw
or
inc
addl
insb
out
jb
fists
xlat
jg
sub
dec
xor
test
or
mov
sub
xchg
xor
jns
mov
jae
pusha
lea
mov
das
inc
popf
punpckhdq
mov
pushf
gs
inc
rcrb
jge
add
mov
call
add
cmc
add
enter
fs
push
mov
fidivrs
fs
outsb
xchg
and
lods
lods
xor
insl
inc
fsub
imull
sub
and
inc
mov
xlat
ror
push
inc
sbb
cld
mov
rolb
scas
mov
in
add
jae
rcrb
jno
pop
pop
daa
xor
jbe
fwait
jno
inc
fxch
jno
push
lret
dec
or
stos
mov
dec
xchg
mov
cmp
push
ja
sbb
push
xchg
jae
es
jmp
dec
mov
or
insl
and
idivl
pop
int
cltd
rolb
xor
addl
js
xlat
mov
sahf
ds
je
mov
mov
xchg
fwait
fwait
inc
xlat
jb,pt
jo
out
movsl
lea
jo
aad
xor
cmp
jecxz
xorb
mov
roll
out
movsl
mov
and
orl
sub
xchg
bound
inc
jns
mov
sub
add
aam
sub
sub
test
daa
ljmp
pop
xor
mov
sar
data16
pop
ror
xor
dec
pop
lret
bound
cmpsl
xchg
and
push
inc
jg
lds
mov
or
sub
stos
dec
pushf
imul
and
xor
inc
fistpl
in
pop
or
jo
vpcmpeqd
lcall
out
dec
and
jle
stos
xchg
fwait
mov
outsb
ljmp
fcmovu
cli
rclb
inc
jl
fildll
lcall
mov
outsb
and
add
xchg
mov
jmp
mov
xchg
pop
sbb
ret
pop
jo
popf
and
and
in
pop
loope
out
subl
xor
push
lahf
jno
aam
loopne
cwtl
xchg
jle
xchg
sahf
or
ljmp
mov
xlat
pop
adc
xchg
out
push
push
pop
push
inc
sub
les
xor
loopne
das
pop
sub
ja
pop
sbb
xchg
pop
stos
inc
clc
pop
mov
dec
outsl
nop
in
inc
xor
fwait
scas
int
dec
aam
lahf
aad
cmp
pop
xchg
mov
es
movsb
hlt
pop
adc
cwtl
jae
cs
jns
call
sub
pop
div
das
dec
mov
pop
xchg
in
js
push
js
rclb
into
int3
and
divl
mov
pushf
xchg
subl
ret
cmpsb
shl
data16
or
mov
int
dec
call
repz
xchg
dec
shlb
fs
insl
outsl
jbe
lret
push
adcb
shlb
sbb
cmp
aam
stc
stc
fbstp
incl
mov
cmpsl
std
test
test
insl
inc
pop
mov
push
xor
mov
xchg
push
xchg
mov
js
or
enter
and
jmp
push
in
ret
out
and
rclb
lahf
dec
sahf
fiaddl
daa
addr16
mov
leave
jg
push
push
xlat
loope
jno
xchg
dec
inc
xchg
and
jmp
scas
fstp
aaa
bound
adc
mov
cltd
fisttps
sub
mov
mov
fs
push
mov
or
dec
sbb
out
jp
mov
inc
jbe
jae
mov
sbb
xor
pop
jg
pop
divl
leave
inc
lahf
dec
mov
mov
xor
out
and
outsl
adc
test
icebp
arpl
js
and
or
and
pusha
mov
in
jmp
std
cmp
inc
xchg
imul
outsb
repz
mov
sbb
mov
push
mov
pop
lods
push
outsl
div
and
xchg
or
outsl
ret
ja
xchg
arpl
out
xor
adc
test
mov
cwtl
mov
or
ss
or
pop
addr16
push
mov
cmp
in
xchg
jnp
scas
xchg
cmp
push
mov
xor
dec
dec
repnz
in
mov
add
inc
or
mov
cmp
dec
adc
pop
test
pop
jo
cmp
ja
mov
jl
mov
dec
insb
push
jnp
arpl
hlt
jnp
in
cmp
push
iret
adc
jl
cs
aaa
loopne
imulb
and
in
data16
lret
jo
mov
rorb
insb
mull
popa
xor
ret
xchg
das
and
sti
addr16
pusha
rcll
mov
add
dec
mov
sbb
jle
jp
xchg
sbb
jno
jbe
xorb
ret
adc
js
mov
xorl
and
out
outsl
stc
push
pusha
jbe
mov
mov
xchg
scas
jb
fbld
movsb
xchg
insl
jns
test
inc
movsb
jge
lahf
or
mov
call
cmc
loope
xchg
adc
aad
cmp
sub
xchg
aam
dec
pop
jecxz
jge
xchg
int
rolb
sbb
pop
lods
sub
dec
mov
jbe
aad
jnp
xchg
movsl
jp
fsubrp
in
inc
das
frstor
or
adc
icebp
xor
dec
sbb
push
mov
add
or
add
fildll
in
call
add
xchg
or
lock
xchg
out
iret
xor
lcall
mov
testl
rcrb
or
inc
insl
pop
js
add
ficoml
dec
push
out
dec
push
jns
adc
xlat
insb
imul
arpl
push
push
mov
fsubs
push
push
xchg
pop
out
cmp
mov
in
cmp
ljmp
mov
xchg
popa
js
imul
mov
jne
xor
pop
or
lea
mov
daa
hlt
mov
jb
jne
cli
mov
sub
gs
lcall
sbb
push
out
inc
push
arpl
sub
out
jecxz
add
jne
push
mov
xchg
andb
push
ds
lret
outsb
cltd
and
pop
outsw
fidivl
jns
or
xor
cmp
std
pop
roll
in
out
popf
ja
adc
sbb
aam
jns
pop
data16
loop
lods
aam
stc
rolb
ds
push
out
push
and
and
mov
and
xchg
jp
jmp
adc
cld
mov
insl
divl
gs
push
mov
mov
into
mov
sahf
iret
xor
fwait
mov
or
and
sbb
sub
jne
mov
mov
mov
xchg
sbb
add
sbb
movsb
lods
inc
es
jl
loopne
popa
imulb
aaa
inc
daa
out
sbb
lock
lods
inc
add
bound
adc
clc
out
mov
and
mov
pop
cwtl
sub
sbb
jno
mov
mov
jg
xchg
jecxz
xrelease
stos
call
jb
pusha
inc
rorl
xchg
ret
int
fmuls
roll
insb
push
dec
mov
lea
cmpb
mov
inc
out
pop
mov
push
adc
sub
jge
ret
mov
pop
scas
mov
cmp
fcmovbe
xchg
mov
mov
mov
xor
xor
in
pop
roll
push
fstl
in
iret
xchg
dec
cmp
push
push
or
call
mov
push
into
in
xchg
add
into
sub
in
jp
mov
mov
imul
push
int
jne
cmpb
scas
in
ficoms
cld
std
es
cltd
sbb
testb
int3
js
nop
mov
fs
aad
push
cmp
test
lret
push
cmp
pop
mov
pushf
jo
dec
hlt
sbb
aad
fwait
scas
leave
mov
sbb
jge
xchg
mov
mov
mov
adc
and
mov
cmpsl
mov
jb
dec
in
loop
repnz
mov
js
inc
orb
jno
aam
jl
insb
adc
mov
lods
cmp
into
jae
jb
jmp
push
cmp
mov
fisttps
repz
and
in
mov
cmp
mov
ss
lea
idivl
jge
out
add
loopne
sbb
push
stos
ja
fstps
adc
pop
push
mov
jecxz
jno
aas
lret
daa
inc
test
xchg
jo
add
imul
push
clc
or
ret
add
mov
idivb
scas
movsl
fucompp
push
cmp
vprotw
sbb
mov
and
fs
lret
sub
push
stc
shlb
jl
jne
jl
sub
hlt
xor
inc
adc
dec
mov
inc
lods
test
xchg
stc
out
out
mov
jge
dec
jmp
and
fwait
popf
and
push
fprem1
push
xor
add
pop
sub
ficoms
rorb
push
in
filds
jb
clc
xchg
pop
loope
pop
std
ss
xchg
sbb
icebp
mov
push
call
jb
mov
loopne
xor
cmp
aam
pop
mov
into
jne
bound
add
mov
ljmp
fildl
push
jo
rcr
roll
adc
out
mov
addr16
adc
add
lods
cltd
inc
push
pusha
xor
fs
mov
inc
scas
int
cmp
mov
mov
add
jbe
rcll
test
or
enter
push
dec
push
pop
data16
mov
mov
xchg
insl
xchg
xlat
es
or
daa
lret
fadds
ljmp
test
ljmp
sbb
pusha
jmp
push
fs
mov
pop
mov
sbb
mov
or
je
mov
xorl
lret
daa
mov
dec
xor
fsub
dec
or
ret
fadd
fcomip
pop
pop
mov
out
jge
ficomps
and
mov
lods
fmull
ljmp
jl
and
popf
fnstsw
enter
adc
mov
push
mov
das
or
jg
xor
inc
push
movsl
cmp
lahf
je
mov
xchg
hlt
les
sub
sti
clc
sbb
dec
push
mov
insb
cltd
fsts
fisttpl
pop
mov
push
jae
ja
rcll
xchg
int
inc
inc
xor
ljmp
inc
popf
outsb
sbb
imul
test
std
xchg
mov
imul
psllw
add
push
ljmp
sbb
inc
sbb
fsts
ds
fcomip
cmp
cs
mov
loopne
push
sbb
mov
das
leave
inc
stos
sub
mov
cmp
addr16
add
scas
call
xchg
stos
jns
adc
aad
cmpl
or
gs
push
stc
jge
pop
jne
xchg
pop
inc
fucomip
mov
pop
rolb
popa
xchg
aad
and
daa
cmp
pusha
dec
sbb
outsl
and
sub
hlt
mov
gs
mov
dec
repnz
loopne
dec
clc
leave
xlat
stc
sub
clc
pop
fs
test
cltd
fimuls
jae
ret
adc
pop
jl
cmp
shr
cld
add
inc
fs
inc
mov
inc
jns
addr16
aam
fistl
sbb
fistpll
repz
outsb
sub
ljmp
shrl
inc
outsb
ss
sub
pop
jp
cltd
cmp
jno
mov
stc
stc
test
pop
leave
adc
aaa
mov
scas
fidivs
ret
or
test
fwait
and
or
push
into
lds
bound
int
xchg
aam
ret
pop
ror
ljmp
jle
inc
daa
cmp
mov
or
nop
dec
or
cmp
push
ja
sbb
dec
das
scas
mov
xchg
inc
inc
movb
xchg
xlat
xor
mov
pop
xor
stos
cwtl
jp
int3
out
inc
mov
fsubrl
mov
stos
xchg
loop
aam
das
dec
out
mov
dec
test
cmp
aaa
popa
outsb
nopl
mov
jmp
mov
mov
stos
sti
jb
xchg
push
mov
mov
mov
xchg
aaa
pop
mov
adc
loopne
adc
shlb
fists
push
cmp
mov
jb
pusha
mov
fsubs
je
cmpl
push
mov
bnd
mov
pop
fistpll
sub
cmp
bound
jmp
cmp
xlat
mov
add
js
aas
dec
xor
mov
leave
fstp
aad
add
divb
dec
mov
stos
jp
cmp
add
fs
aad
orb
or
movsb
xor
outsl
iret
pop
test
mov
mov
adc
sahf
inc
call
mov
js
in
cmp
jno
sub
ds
repz
dec
pushf
fldcw
orb
popa
cmp
pop
mov
push
aad
cmp
ret
push
dec
cs
fcmovbe
mov
aam
mov
jle
shll
jge
jbe
sub
loopne
rorb
xorb
inc
out
mov
insl
inc
mov
icebp
out
jnp
push
daa
inc
imul
or
push
lea
mov
pop
iret
jge
int
outsl
xchg
and
stc
mov
add
jae
add
jns
fstp
pop
ljmp
mov
jmp
movl
jne
fldcw
jb
das
lods
movsl
sub
repnz
pop
imull
in
jecxz
or
pop
in
adc
dec
sub
stos
sub
mov
imul
aam
addb
xor
mov
lret
int3
jb
test
in
lods
adc
out
jns
xor
stos
add
test
mov
push
aaa
pop
jl
enter
add
sbb
pop
bound
lcall
jns
sub
cmpl
mov
push
pop
mov
aaa
xchg
jb
pusha
adc
fcomip
imul
xchg
js
aam
incl
and
push
dec
mov
sub
lods
mov
lods
pop
testb
in
push
inc
lret
fndisi(8087
adc
add
dec
mov
orb
fildl
addb
sbb
lods
popf
ljmp
xor
sbb
cmpsl
dec
repz
cmp
mov
inc
pop
cmp
aam
test
sub
popf
mov
mov
pop
hlt
fdivrl
addl
add
jns
popf
or
std
sbb
fsubl
inc
mov
add
int
xchg
xor
shll
pop
mov
mov
pop
xchg
ret
jnp
outsl
adc
bound
scas
mov
sbb
sub
dec
xchg
mov
sub
xor
in
push
ret
out
aas
in
xchg
jp
pop
dec
inc
mov
xor
xchg
mov
test
cmpsl
test
push
push
push
or
sbb
mov
adc
mov
int3
data16
gs
ja
mov
inc
addr16
xchg
cmp
pop
cltd
sbb
xlat
adc
lea
mov
lret
or
rolb
add
negl
adc
pop
sbbb
in
mov
mov
lods
pushl
pop
arpl
fimull
jmp
mov
or
xor
and
data16
ja
push
stc
nop
ja
ljmp
ds
xor
add
fwait
push
dec
insl
pop
ds
movsl
fisubl
push
out
sub
xchg
fs
sub
subl
fs
xchg
push
lahf
xchg
and
or
mov
jmp
inc
xchg
cmp
inc
int
mov
adc
cmp
cmpsl
adc
sbb
jae
mov
xor
or
pop
push
jns
sbb
loopne
stos
lods
push
les
aas
mov
mov
adc
mov
ja
or
mov
popa
or
xchg
dec
add
jecxz
std
stos
stos
fisubs
cli
and
fsubrs
scas
mov
cmp
xor
sbb
jae
push
xchg
pop
cmp
std
bound
test
ja
xchg
aam
jge
add
scas
jo
loop
popf
and
movsb
nop
mov
imul
repnz
sub
mov
cli
aaa
push
xchg
roll
imul
pop
dec
and
in
jp
cmpsl
shlb
push
outsl
pop
rcrl
push
lock
nop
rsm
xchg
andl
or
or
enter
pop
inc
dec
pop
in
daa
dec
jae
fiaddl
and
pop
jmp
push
mov
push
sub
dec
movsb
xchg
loop
jb
xchg
movsb
daa
je
dec
lock
arpl
pushf
dec
loopne
movsl
icebp
xchg
popf
dec
aam
insl
sbb
jl
mov
or
incb
in
jmp
stos
pop
popa
lods
mov
sahf
mov
add
repz
inc
xchg
mov
mov
insb
popf
adc
in
shlb
mov
jl
mov
leave
into
ret
adc
mov
and
mov
inc
iret
mov
mov
pop
insl
push
pop
in
mov
add
xchg
push
pusha
fbld
cmp
jo
imul
inc
adc
and
sti
pop
xor
cmp
mov
add
adc
pop
cmp
sub
sbbb
cmp
ja
cmp
test
pop
movsl
push
mov
lds
jne
pop
dec
pop
or
xchg
lods
loope
cmp
pop
aas
push
daa
int
xlat
dec
enter
sub
fldcw
jl
pop
sub
sbb
test
push
stc
sbb
xlat
sub
hlt
arpl
mov
rolb
xor
xor
mov
adc
loope
call
in
and
or
loopne
push
ret
out
aaa
mov
jno
push
add
pusha
xor
enter
cmp
mov
inc
pop
addr16
cmp
or
cwtl
out
ret
jb
enter
jecxz
mov
mov
sub
xchg
xorl
jnp
lods
add
les
pop
sbb
jp
fs
scas
mov
into
stc
mov
enter
arpl
movsl
fadds
insb
xor
les
xor
cwtl
add
cmp
sti
sbb
mov
inc
rclb
dec
or
stos
cmp
rcr
rcrl
push
jns
rorb
sbb
mov
loope
mov
xor
ss
cld
jg
rclb
jle
jg
lds
cmp
pop
aas
enter
jp
out
mov
hlt
and
mov
xchg
pushf
pop
jecxz
call
jecxz
push
lods
push
out
shrl
pop
subl
fcomp
cmp
pop
push
adc
out
lcall
dec
out
orl
out
addr16
sbb
push
mov
outsb
jmp
push
nop
xchg
fstpl
insl
mov
pop
fadds
in
test
les
jns
ror
or
int
stc
jno
js
aaa
outsl
fs
jl
and
int3
in
xchg
xchg
and
or
jecxz
movsb
lds
jle
cld
out
add
inc
and
and
jae
and
adc
dec
pop
cmp
mov
push
and
comiss
and
mov
je
mov
push
mov
push
loope
mov
imul
xorl
ljmp
dec
call
jle
push
divb
push
push
fildl
xchg
std
push
jb
adc
jbe
orl
stc
fldcw
adc
mov
fistps
mov
lcall
fdivp
enter
pusha
sub
sbb
pop
pop
testl
arpl
shll
jg
out
adc
lods
jge
or
jo
cmp
clc
add
test
lea
xchg
call
cmpsl
mov
inc
pop
sarl
xchg
shl
mov
and
out
arpl
cmp
pop
push
dec
imul
xchg
jmp
adc
hlt
out
stc
sarl
adc
and
jge
outsl
pop
add
xchg
cmp
push
push
lahf
gs
cmc
pop
dec
mov
outsl
xchg
aas
mov
jo
cmp
lret
test
mov
push
fucomp
mov
nop
sub
inc
push
jne
push
lret
jp
scas
in
je
mov
testb
pop
clc
push
xor
jno
enter
lret
ja
pushf
mov
and
dec
lahf
dec
cwtl
jg
int3
test
cltd
jle
arpl
lahf
faddl
add
push
test
jmp
sub
lds
jmp
repnz
push
movsl
cmpl
int3
mov
in
into
std
cwtl
ret
cli
push
stc
dec
ret
imul
faddl
push
mov
push
cmc
mov
and
aas
loopne
xchg
insb
or
nop
xchg
les
dec
popf
mov
loopne
push
xchg
xchg
pusha
cld
nop
jb
cld
dec
xchg
jae
xchg
and
iret
outsb
sub
inc
stos
xchg
jge
mov
cmp
pop
int
in
jp
fs
popa
insb
inc
lahf
in
lea
push
ret
gs
das
addr16
shl
xor
adc
das
ja
or
scas
xor
xor
inc
pop
cmpsb
jg
out
jnp
inc
xlat
mov
cmpsb
enter
and
xchg
mov
pop
imul
sbb
ror
cmp
int3
pop
out
adc
adc
enter
cmp
xlat
sbbb
push
das
xor
mov
pop
mov
ss
dec
mov
pop
sub
out
shll
ds
and
lcall
es
mov
fsubs
and
add
sti
push
pop
push
shll
pop
test
test
push
jl
or
and
test
ret
sub
in
ds
jecxz
das
insb
loop
fcoml
jns
or
pop
aad
or
jecxz
xor
das
cld
xchg
push
cwtl
lahf
ret
xchg
jbe
insl
cli
add
jne
mulb
ds
daa
out
mov
outsl
xor
addr16
jae
inc
stc
cwtl
int
mov
loope
in
add
fcmovu
sbbb
ficoml
pop
push
fildll
jb
bound
xor
sub
ss
and
stos
push
push
movl
enter
jno
mov
repnz
xchg
in
pop
push
xor
fstpt
shr
in
jl
not
mov
dec
xchg
add
mov
pop
inc
jnp
push
pop
adc
in
and
jnp
cmpb
push
std
xchg
test
jl
add
scas
or
pop
or
std
cmp
jg
dec
gs
sub
imul
stc
pop
lea
mov
loope
dec
add
les
jmp
movsl
shlb
cwtl
push
jl
mov
ret
xchg
sbb
cmp
loope
pop
xchg
test
rcrb
mov
loope
in
or
enter
inc
shll
adc
pop
cmp
cmp
ss
cmpsb
push
dec
pop
inc
sbb
or
inc
fucomp
in
xlat
push
dec
mov
jnp
rolb
mov
inc
cs
syscall
xor
loop
cmp
cmc
mov
mov
jbe
xchg
cmp
mov
stos
lar
jno
fbld
xchg
jg,pn
pop
inc
mov
pop
rorl
arpl
daa
das
aad
sbb
ljmp
jne
pop
xchg
and
or
pop
xchg
push
xor
lods
adc
movsb
data16
add
mov
insl
nop
push
ret
movsbl
jmp
outsb
cli
or
mov
sbb
adc
or
test
ror
in
stos
stos
mov
pop
mov
mov
rorb
cwtl
das
or
dec
dec
rclb
loope
sbb
dec
mov
mov
jo
ret
out
mov
xor
jnp
and
flds
jne
lret
out
sub
mov
in
or
imul
or
aaa
cmp
and
and
shlb
ds
scas
push
rcll
xchg
or
push
push
xchg
jnp
cmp
push
sbb
dec
sbb
jns
push
inc
clc
xchg
jge
or
lahf
je
loop
hlt
les
stc
push
jle
add
jl
ds
fwait
adc
call
pushl
xchg
pop
cmpsl
xlat
sub
adc
xchg
fs
inc
adc
pop
dec
xlat
dec
or
aad
sbb
fcom
out
sbb
dec
dec
aaa
cmp
push
stc
scas
inc
jnp
mov
cltd
sub
jns
lods
push
jge
sub
icebp
or
push
mov
sahf
push
in
sbb
sbb
fiaddl
add
xchg
mov
bound
fidivrs
jle
fcmove
dec
movsb
sub
mov
ficompl
and
jl
hlt
loope
pop
pushf
lea
push
ret
repnz
xchg
movsb
pop
ret
add
insb
add
push
mov
push
or
sbb
fidivs
push
cli
sub
jnp
sbb
add
jns
xchg
and
das
es
das
sub
lock
pop
push
cli
jno
cld
sbb
mov
xor
sub
fnstcw
adc
sub
lcall
push
lock
testl
mov
aad
mov
leave
subb
sbb
lock
call
mov
or
jb
out
adcl
sbb
cwtl
rorl
xor
pop
sub
push
adc
push
outsb
adc
mov
add
dec
push
daa
adcb
add
xchg
pushf
or
mov
or
rolb
shl
repz
mov
int3
and
lcall
in
or
das
int
jge
sub
punpckhwd
pop
inc
add
int
inc
testl
in
push
dec
sub
or
pop
in
fs
nop
sbb
add
mov
adc
and
outsb
jbe
stos
mov
sub
add
xchg
inc
insb
push
and
ret
lods
push
mov
lds
pushf
push
shll
imul
fadd
jbe
adc
or
pushf
sahf
rcr
addb
in
pop
fsubl
orl
sub
mov
out
mov
leave
iret
shll
popf
push
inc
fwait
jne
ja
repz
mov
stos
pop
adc
std
shrb
jle
push
ret
inc
int3
ret
mov
in
stos
mov
call
repnz
mov
xchg
cmp
and
jmp
cmp
shlb
jbe
xchg
cs
pop
push
xchg
stos
aaa
data16
sbb
cmp
movsl
push
dec
sahf
cld
or
testl
nopl
push
xor
jecxz
lods
adc
cmp
pop
es
insl
repz
mov
jb
or
push
lds
pop
cmp
pop
fisubrl
mov
push
nop
sub
or
xchg
test
jmp
data16
fidivrl
sti
hlt
dec
sub
xorb
fnstsw
cwtl
mov
stos
sub
ljmp
pop
and
push
dec
std
mov
in
or
lret
dec
push
lcall
ja
mov
outsl
rorl
sbb
lret
out
cmpsl
pop
push
sub
mov
or
cmp
xor
xchg
adc
adc
sbb
mov
out
mov
xchg
nop
test
push
xchg
push
push
ljmp
add
shll
lea
cmp
bnd
add
xchg
loop
fisttpll
enter
cmpsb
cmp
sub
xor
aas
sti
adc
mov
test
lahf
cmpsb
mov
loopne
js
pop
push
shll
aaa
insl
cltd
fdivrl
and
adc
dec
mov
jge
ds
inc
addb
xor
addr16
adc
sub
and
ja
or
rcrb
dec
loope
mov
jg
movsb
mov
xchg
push
xchg
xor
cmp
cmp
mov
outsl
sub
cmp
pop
push
rolb
enter
pop
or
out
ret
lret
movsl
lods
pushw
push
dec
pop
jmp
test
gs
outsb
pop
daa
sahf
or
cmp
pop
call
iret
jne
sbb
mov
test
dec
leave
ljmp
andl
or
dec
ret
push
addr16
add
fidivrs
mov
decl
cltd
mov
pop
lret
jp
popa
js
popa
jbe
in
mov
leave
inc
push
jns
mov
fmuls
inc
nop
call
pop
xorl
jns
inc
pop
or
and
mov
test
out
stc
sbb
fwait
leave
xor
and
inc
mov
cmp
jle
repz
or
hlt
ret
add
fstpl
daa
sub
rcrb
or
outsb
adc
std
out
and
in
xlat
sbb
in
dec
mov
xchg
fwait
jg
rorl
jo
popf
or
mov
mov
fcom
test
mov
inc
xor
add
mov
pop
mov
jno
in
adc
xchg
mov
addr16
cwtl
test
push
test
adc
sub
call
push
mov
sbb
sbb
ret
jecxz
add
js
inc
fisubl
mov
lret
cmp
aad
mov
jp
push
xchg
xor
sub
enter
movsl
jmp
in
add
pop
push
repnz
fdivrl
dec
lahf
pop
inc
sub
call
call
sub
shlb
aaa
int
lods
xchg
ss
mov
push
xchg
xor
das
push
mov
mov
movsl
jp
fsubrl
dec
cmp
rorb
stos
inc
adc
aam
shlb
push
jg
aam
repnz
cmpsl
int3
push
mov
adc
out
sub
scas
push
push
daa
into
loope
punpckhwd
or
insl
iret
call
mov
test
inc
xchg
adc
or
popa
dec
jle
or
add
clc
shl
pop
pusha
pop
leave
pop
aas
add
adc
sub
std
inc
push
hlt
or
dec
cli
pop
cltd
inc
addr16
or
xor
ljmp
sub
inc
jae
sbb
fbld
mov
xlat
sahf
repz
inc
imul
inc
mov
push
stc
lcall
sbb
ja
jl
stos
pop
imul
fdiv
xchg
loopne
pop
cmp
in
lret
jns
das
pop
pop
stc
adc
gs
call
push
movzbl
jns
or
pop
cmp
incb
repnz
sbb
adc
cltd
jecxz
aaa
mov
jmp
in
js
sub
pop
jg
inc
sbb
or
stos
lock
dec
dec
shr
cld
or
push
mov
cmp
pusha
and
mov
ret
cli
and
fidivl
je
or
cmc
jo
add
add
mov
test
mov
mov
cmp
push
pop
dec
xlat
test
and
out
sbb
mov
pop
aas
int3
addr16
jo
push
rorl
add
jp
fwait
mov
bound
lcall
cmpl
sub
push
cmpsb
dec
inc
out
aam
and
sub
xchg
sub
scas
or
dec
sbb
divl
jge
adc
shll
testb
xchg
cwtl
mov
je
movsb
and
out
push
imul
xor
stos
test
pop
call
sub
cmp
cwtl
lcall
or
pop
adc
fadds
stc
jecxz
push
mov
push
xchg
mov
add
test
mov
inc
xorl
xlat
xchg
pop
sub
pusha
fisubl
sbbl
adc
rorl
clc
insl
addr16
inc
push
mov
sbb
push
adc
aad
cmp
mov
cmp
ja
adc
jns
mov
adc
push
jle
xchg
mov
cmpsl
addb
push
or
je
pusha
push
out
xorb
pop
dec
les
and
das
mov
sti
jmp
add
mov
cmp
faddl
and
jle
xor
int3
add
dec
bound
insb
fsubrs
je
xor
cwtl
jl
mov
test
sbbb
in
dec
mov
adc
xchg
mov
adc
mov
cmp
icebp
shll
sbb
rcl
jnp
sbb
dec
leave
ds
pop
jmp
test
daa
cwtl
insl
lret
dec
ret
adc
push
dec
or
js,pt
call
in
jno
pop
and
pop
dec
test
bound
lcall
lods
and
xchg
sbb
dec
lcall
testb
movsl
cmpsl
imul
inc
pop
sub
movsl
ljmp
cltd
test
test
pop
mov
hlt
sbb
jmp
mov
fmul
xchg
fnstsw
shrl
ret
pop
mov
inc
sub
cltd
cmp
xlat
orb
subl
daa
rolb
mov
or
ficomps
paddsb
movsb
stc
dec
in
popf
jns
sbb
loopne
hlt
sbb
out
lcall
fstp
scas
inc
xchg
stos
sub
push
ljmp
insb
pop
xchg
xchg
ljmp
dec
jnp
pop
push
jb
pop
or
shll
xor
cmpsl
lds
aam
ret
pop
pop
in
mov
insb
mov
or
leave
sbb
jns
inc
cmp
in
pop
push
jp
xchg
pop
jnp
rclb
fisubrs
inc
cmp
rcr
mov
or
into
popf
iret
push
xchg
mov
or
mov
sub
movsl
out
adc
sti
fidivs
imul
mov
push
lea
or
dec
andl
fistpll
ja
movsb
mov
ret
mov
adc
xlat
mov
push
xchg
fsubl
or
sbb
loopne
add
sar
dec
xchg
jno
leave
pop
inc
pop
jmp
pop
icebp
push
aas
sbb
test
lret
or
pop
jl
call
mov
frstor
cmp
mov
andl
ss
pop
out
sbb
stos
add
sub
cmp
data16
cltd
dec
dec
movsb
mov
cmpsl
add
inc
pushf
inc
pop
add
out
movsl
ja
incb
loopne
inc
push
xchg
push
pop
fmulp
pop
pop
mov
mov
out
mov
loop
jns
mov
aam
mov
add
sub
clc
sub
cwtl
in
daa
es
lds
rcll
xor
fmul
or
dec
xor
ds
into
fdivrl
mov
orl
mov
ja
xor
jbe
mov
test
mov
push
repz
scas
fisttpl
mov
pop
cld
rcrb
xchg
mov
cmp
data16
les
sbb
sub
sbb
rol
mov
out
and
aas
repnz
cmp
subl
test
sbb
push
dec
fwait
rolb
inc
dec
test
je
jno
inc
lods
sbb
cltd
push
mov
movsl
mov
movsl
jbe
aaa
std
and
lods
pop
and
dec
xor
or
iret
cmpsl
mov
data16
out
mov
jae
ja
lock
jmp
inc
lea
and
xor
pop
inc
sbb
mov
fdivrl
and
imul
sub
jp
fisubrl
jne
rorb
clc
push
mov
push
mov
les
and
jmp
fwait
xchg
cmp
sbb
ret
pop
aaa
dec
dec
inc
or
fcoms
stos
mov
frstpm(287
sbb
and
lods
stc
xchg
arpl
mov
movsl
insb
scas
push
fistps
dec
das
dec
xor
loop
sub
add
rsm
mov
and
movsl
fidivl
or
fdivs
add
lcall
shrl
outsl
pop
out
sar
sbb
inc
les
jnp
add
mov
xchg
jne
ljmp
dec
pop
popf
sbb
outsl
daa
xor
daa
push
xchg
or
inc
in
mov
cmp
sbb
ret
rorb
dec
ljmp
dec
pop
hlt
fidivrl
lret
div
ja
das
mov
jo
and
dec
out
sti
jnp
loop
jnp
sbb
pop
into
mov
mov
insl
in
imul
xor
mov
xor
inc
mov
pop
mov
push
sahf
jle
mov
iret
int
sub
mov
stos
sbb
push
pop
jge
mov
mov
mov
rclb
adc
in
cmp
daa
aad
inc
xchg
mov
sbb
fmuls
and
cmp
xchg
cmc
cmp
sbb
lret
mov
std
sub
push
les
fnstcw
and
out
jp
lret
aas
dec
loopne
sub
mov
mov
test
orl
xor
insb
rcll
mov
repz
cwtl
xor
scas
and
add
cmp
lret
pop
mov
adc
aaa
icebp
add
mov
mov
lret
out
push
dec
push
xchg
aam
pop
mov
jae
push
adc
cmp
in
dec
rcrl
push
add
sbb
inc
movsl
addl
dec
les
xchg
add
sahf
adc
daa
push
outsl
cs
imull
mov
sti
cmpsl
ret
scas
fsubrs
cmp
andb
das
add
leave
and
test
fdivp
sub
loopne
jge
out
stc
imul
jmp
xchg
ljmp
rol
inc
or
lret
imulb
inc
test
es
clc
xor
sbb
xor
cld
mov
lods
inc
jo
cmp
add
out
pop
mov
push
out
dec
dec
xchg
add
xchg
aad
cmp
lahf
add
dec
xchg
in
mov
push
pop
addb
push
cmc
rorb
dec
fldt
jae
stos
call
inc
pushf
loop
das
loopne
xchg
mov
mov
pop
xor
mov
and
fcmovb
ret
gs
lds
lret
pop
mov
mov
inc
dec
icebp
fwait
sub
xor
mov
sbb
mov
movsl
outsl
jne
adc
enter
shll
inc
push
out
mulb
fldenv
ljmp
lret
lret
xchg
pushf
push
xchg
xchg
mov
mov
sbb
pop
gs
mov
xchg
in
outsb
out
xor
add
and
jmp
push
scas
cmp
call
pushf
int
stos
ja
push
xchg
inc
sti
outsb
sub
push
push
dec
std
xchg
test
xchg
push
pop
cmp
mov
and
test
pushw
push
or
add
jno
lea
jp
and
mov
stos
test
xchg
pushf
or
cmp
imul
lahf
cmp
jmp
popf
and
aas
adc
not
icebp
insl
sbb
mov
mov
mov
and
push
sub
loopne
shrb
inc
xor
inc
cs
popa
rcr
subl
xor
push
mov
and
test
es
daa
negb
data16
popf
mov
lock
and
push
adcb
cmp
and
mov
test
cmc
sub
sub
dec
rcrb
int3
arpl
add
ljmp
das
mov
fs
and
loopne
loope
xchg
dec
xlat
xor
shl
mov
shlb
dec
pop
divl
inc
pushf
aam
mov
jmp
push
cs
jecxz
and
rclb
lret
push
mov
arpl
push
cmp
ss
xchg
imul
mov
and
stc
ffreep
test
into
jno
mov
pop
adc
push
add
rcrb
pushf
adc
rclb
aam
jmp
test
loope
testb
out
pop
rcrb
xchg
cli
mov
xor
xor
sbb
sbb
dec
cmpsb
dec
sub
jmp
or
xchg
cmp
inc
dec
sub
mov
or
ds
cmp
or
mov
into
jle
add
arpl
out
adc
xor
popl
addr16
test
sbb
cmp
xor
stc
movsl
fiadds
xchg
jno
jge
adc
lods
pop
or
fnsave
daa
cmp
dec
lods
call
lret
add
fldenv
sti
out
mov
lock
jle
inc
stos
push
push
or
data16
cs
rcrb
loope
push
mov
es
jmp
and
mov
mov
mov
shrb
fwait
jae
lock
push
ficompl
jge
dec
inc
jle
fs
imul
sbb
sub
lea
lahf
mov
pop
pusha
test
hlt
cmp
mov
mov
and
pushf
sbb
xlat
jge
scas
pusha
aam
pop
inc
xchg
cs
add
and
in
in
pop
in
push
sbb
or
cmp
sub
dec
or
mov
int3
lds
loope
jne
frstor
fisubrs
sub
js
out
inc
sbb
or
lcall
mov
aas
or
pop
mov
in
insl
in
mov
jp
pop
icebp
xchg
mov
mov
xorl
add
ficoml
iret
sbb
inc
data16
jb
sub
pop
bound
fisttpll
lods
inc
mov
repz
cmpsb
insb
dec
movsb
or
js,pn
cmp
jo
mov
jbe
pop
es
mov
xor
and
cmpsl
enter
mov
pop
ds
movsb
cmp
cli
mov
es
pop
data16
fcmovnu
movsl
fldl
xlat
mov
pop
lock
add
adc
cs
decl
nop
xchg
pop
add
cld
xor
lds
mov
jl
mov
shlw
fdivl
add
mov
test
inc
jle
js
sub
popa
sbb
cli
test
in
fsubrs
push
add
pop
dec
sub
sbb
insb
and
jb
mov
mov
xchg
or
pop
rcl
lret
mov
arpl
lods
int3
aas
mov
int3
mov
dec
ss
jns
mov
inc
xor
xlat
loopne
lahf
xor
push
inc
cld
test
push
jno
fstpl
out
adc
sbb
adc
popf
mov
call
cmp
imul
push
mov
pushf
lret
sahf
fists
in
cmpb
xchg
push
dec
lcall
ss
cmpsl
adc
int
push
xchg
sarb
push
dec
test
arpl
xchg
sbb
pop
push
push
loop
jle
aad
push
xor
sub
pop
addl
sub
stos
jbe
fucomp
cmp
fnstcw
mov
inc
iret
cltd
loope
inc
bound
mov
cmpsl
or
dec
sbb
sbb
cmp
sbb
fs
mov
xchg
lahf
fldenv
je
dec
cmp
jbe
push
push
pop
rclb
and
repz
pusha
sbb
cli
inc
push
adc
mov
push
sbb
adc
jbe
pop
mov
cmp
inc
mov
pop
sbb
push
mov
and
jl
or
pop
mov
subb
mov
cli
addr16
cwtl
xor
cmpsb
mov
mov
inc
out
mov
imul
xchg
adc
mov
dec
sahf
shr
sbb
js
jmp
test
ds
sti
push
pop
jb
add
mov
pop
stos
xchg
adc
ja
outsl
lods
repz
xchg
fisubl
mov
mov
lret
jae
sti
scas
push
int
xchg
cmpl
or
sub
scas
call
sbb
jge
fidivs
push
mov
inc
mov
jg
test
dec
mov
fld
lock
cmc
jmp
mov
mov
xchg
fiadds
mov
stos
daa
and
lret
push
movsb
mov
and
cwtl
add
inc
and
xchg
aam
and
cmc
adc
sahf
fcomp
cs
push
jmp
mov
shlb
aam
sbb
adc
sahf
icebp
inc
lock
icebp
add
aad
int
mov
cmp
lods
inc
idivb
mov
out
out
mov
mov
fimuls
cmp
jle
icebp
aas
pop
pop
dec
subl
mov
sahf
cmpsl
jno
fldl2t
push
scas
aam
shl
jp
cld
cmpsl
fs
fstpl
movsl
lret
aam
negl
dec
xchg
mov
dec
jno
and
mov
or
lahf
adc
lds
idivl
fcoml
dec
insl
es
xorps
sub
outsl
xor
out
or
pusha
lret
xor
and
inc
ds
pop
cld
or
test
scas
loope
mov
and
cs
in
push
push
iret
jl
mov
clc
jecxz
faddl
jbe
xor
xor
inc
ds
data16
cmp
dec
repz
jne
mov
in
pop
test
in
leave
pop
dec
out
fisubrs
lods
insb
ret
inc
mov
mov
imul
mov
scas
adc
mov
ljmp
loop
in
les
mov
cmp
add
daa
push
push
lea
cltd
pop
rol
js
fsubl
mov
xor
mov
shll
mov
or
out
cmpsb
jns
push
roll
insl
test
lahf
addr16
hlt
outsb
in
sub
in
out
dec
pop
in
out
jp
loop
or
fldcw
mov
xchg
jns
movsl
cmp
pop
imul
inc
lret
js
sbb
xchg
scas
mov
in
les
outsb
sub
scas
in
lods
or
lock
sarb
rolb
xchg
dec
outsb
je,pt
fbstp
mov
pushf
in
jbe
in
dec
ret
push
sbb
push
fldcw
mov
in
mov
sub
add
fdivr
push
ja
sbb
rcl
jo
cwtl
sub
das
dec
mull
lret
je
ss
mov
data16
inc
jl
jg
bound
addr16
stos
sub
rorb
lds
test
pusha
movsb
imul
in
sahf
push
push
add
mov
popa
in
mov
push
pop
call
orb
mov
mov
lret
inc
cli
xchg
jg
gs
mov
mov
adc
fsubl
dec
cmp
jns
cltd
repz
pop
mov
fwait
shlb
mov
jns
rcl
or
and
fldenv
dec
pop
pop
repz
sbb
sub
inc
imul
jne
mov
and
mov
fsubrl
and
mov
js
into
movsb
dec
enter
hlt
bound
and
push
ret
xchg
sar
lods
push
push
cli
icebp
icebp
pop
push
cltd
pop
mov
rolb
lods
pop
cmpsb
sub
pop
pop
les
inc
add
xchg
fistps
pop
iret
mov
xchg
int3
pop
sar
and
test
push
push
mov
mov
popf
xlat
cltd
push
inc
cmpsl
insb
inc
ficomps
or
pop
dec
mov
cli
mov
add
in
xchg
cmp
hlt
mov
invd
jno
out
stc
out
mov
loop
mov
jmp
fwait
or
mov
push
mov
aad
add
adc
and
jnp
jns
push
jbe
mov
and
push
leave
lock
push
push
imul
adc
dec
pop
jmp
lret
xchg
subb
shrl
scas
inc
lds
pop
xor
inc
inc
xorl
gs
jno
add
test
xchg
push
jle
and
adc
pop
outsb
xchg
sbb
mov
xchg
jg
stc
repz
jnp
jecxz
mov
pop
lret
mov
jno
or
clc
cmp
mov
push
push
test
dec
xchg
mov
paddsb
cmp
mov
push
jl
and
push
xor
out
pop
mov
and
std
jo
cmp
dec
xchg
inc
mov
and
inc
jno
mov
jg
div
mov
test
cmp
ror
pop
push
or
cli
push
and
cs
dec
mov
mov
das
movl
je
repnz
adc
aaa
addr16
ret
mov
hlt
sbb
xchg
sti
cli
inc
aad
into
fistpl
in
hlt
and
jge
pusha
cli
sub
pop
pop
lods
xchg
mov
sbb
loop
stos
ficomps
push
cmpsl
jnp
loopne
mov
inc
arpl
call
mov
sub
je
xchg
mov
dec
in
mov
xor
jg
in
add
or
cltd
xor
or
adc
subl
and
jl
je
ja
dec
outsl
inc
and
clc
fmuls
cs
push
cmc
jp
test
into
testb
dec
push
loope
aam
push
mov
ror
incl
and
push
insb
sub
lock
pop
sub
shlb
nop
stos
inc
push
mov
adc
jl
inc
sbb
jp
jb
jmp
loope
int
jl
lods
negb
lret
std
sub
push
adc
fs
or
in
mov
movsb
mov
stos
and
repz
faddl
ret
enter
shrb
call
andl
dec
mov
mov
inc
jnp
push
add
dec
stos
lods
sbb
fwait
loope
notb
shlb
push
push
mov
data16
xchg
in
xlat
mov
cwtl
dec
xchg
repnz
xor
test
pop
jno
pop
xchg
mov
mov
xchg
pop
pop
insl
sahf
adc
jbe
cmpsb
test
ja
lods
inc
sub
call
stos
xchg
push
arpl
and
and
ret
in
cmc
push
cs
js
dec
out
add
aaa
xlat
fxam
mov
inc
push
test
sub
add
mov
adc
jge
mov
jne
mov
jae
mov
mov
faddl
dec
ffree
ss
dec
icebp
push
out
xor
lods
jge
inc
mov
mov
in
xchg
pop
jl
inc
nop
or
pop
fdivs
testb
rolb
sub
mulb
pop
dec
or
sbb
in
pushf
adc
or
loopne
les
sti
xchg
out
icebp
mov
neg
or
rcll
in
cmp
fadd
vphaddudq
add
mov
xchg
xor
pushf
xchg
adc
inc
push
jp
test
and
int3
push
jecxz
fucomip
aam
sub
inc
dec
jb
lea
pop
pop
jg
fchs
fsubrl
cs
xor
mov
lret
outsb
pop
call
cld
ljmp
iret
aad
sub
xor
test
cmp
in
cmpsb
out
fwait
inc
sub
mov
xor
test
xchg
adc
mov
enter
and
sti
out
in
cmp
xor
insl
xor
insl
push
push
sbb
mov
decb
inc
rorb
pop
and
xor
jge
jns
xor
ss
inc
xchg
xchg
pop
or
rcll
mov
ds
mov
cld
mov
mov
lret
popf
lcall
jp
pop
scas
ljmp
repnz
daa
fcmovb
xchg
jne
inc
shrb
xchg
pop
ss
cwtl
inc
mov
pusha
dec
sbb
mov
adc
push
push
cmp
pop
sbb
sub
xor
jle
rcrl
xor
popa
or
outsb
jmp
or
xchg
mov
divl
push
sbb
dec
jmp
addr16
jp
xlat
lods
ss
cmp
jne
push
push
movsl
test
and
xchg
mov
adc
push
and
or
cmp
adc
adc
jno
mov
jne
loope
sub
sti
mov
dec
lea
das
movsl
lret
dec
cmp
shrb
or
movsb
xchg
adc
xor
iret
xlat
add
fwait
loope
out
test
mov
mov
loop
push
mov
xchg
cmp
cmp
repnz
das
or
dec
adc
ds
icebp
add
outsl
adc
fs
out
push
mov
dec
mov
inc
ss
sbb
xor
dec
aam
pushf
sahf
fs
inc
pop
add
int3
sbb
and
xor
sbb
popf
inc
inc
mov
push
add
scas
out
jo
inc
leave
mov
fmul
and
shlb
out
sbb
or
and
fwait
test
xor
xchg
rclb
push
ja
nop
add
mov
adc
pop
loope
xchg
cs
stc
repnz
pop
jge
adc
insb
mov
or
mov
mov
inc
out
xor
cmp
push
fimull
inc
jnp
lcall
gs
leave
loopne
mov
popf
jne
daa
cwtl
sbb
into
insl
sbb
test
stos
jg
orl
bound
sub
jl
xchg
enter
lods
xlat
enter
xchg
in
sub
int3
push
pop
test
push
test
adc
ja
ja
aam
dec
dec
ja
ss
sub
mov
lahf
orb
int3
lock
stc
xchg
jecxz
and
and
mov
lret
dec
push
shrl
mov
add
lahf
push
xchg
or
xor
cmp
dec
lds
pop
xor
dec
push
adc
lret
insb
jecxz
fdivrl
dec
xchg
cmpsl
adc
test
inc
shlb
jb
and
decl
in
pop
inc
mulb
pop
inc
xor
rcl
adc
int3
mov
mov
jae,pt
fldcw
lahf
adc
or
inc
repz
out
mov
pop
mov
ss
mov
xchg
mov
insl
lods
jecxz
add
sub
mov
mov
xchg
js
sub
lock
addr16
aad
xor
mov
imul
sbb
dec
xor
jl
or
cmp
and
sbb
push
sub
mov
je
xlat
out
scas
and
jne
in
pop
pushl
xor
daa
dec
cs
xor
cmpsl
mov
sahf
mov
mov
jno
sbb
rcll
pop
push
int3
jecxz
pop
loope
out
xor
mov
inc
pop
sbb
push
adc
xchg
cwtl
xchg
orb
je
cmc
insl
sbb
aam
mov
das
adc
push
sti
cltd
or
and
hlt
scas
insb
mov
jb
repz
xor
push
push
sbb
test
jecxz
leave
fcomp
inc
gs
mov
or
popa
sub
push
mov
shlb
fimull
push
pop
mull
jo
inc
stc
loopne
call
jnp
xor
lods
cmp
push
mov
pop
fwait
std
test
mov
bound
cmc
inc
jmp
xor
inc
leave
sti
inc
in
cmp
xchg
test
stos
and
shrb
pop
es
pop
sbb
imul
jbe
insl
clc
mov
lds
inc
arpl
sbb
and
out
test
fildll
sbb
cmp
cld
sub
sub
mov
or
mov
lret
push
jbe
mov
jo
dec
mov
into
shlb
mov
bound
add
stos
ror
and
popa
imul
and
out
es
jno
mov
das
sbb
iret
pop
inc
cmp
mov
jge
loope
inc
inc
movsl
dec
stos
jne
scas
cmp
sbbb
dec
sbb
js
insl
cmp
adc
stos
jmp
sbb
insb
lahf
jno
dec
pavgw
gs
test
sti
mov
pop
data16
pusha
push
inc
gs
mov
push
push
jno
std
stos
mov
push
fmuls
clc
popa
and
sbb
lods
in
rol
pop
shll
sti
sub
sub
jmp
dec
jg
push
fs
imul
fwait
test
ret
lock
fst
shlb
cmp
inc
test
inc
lahf
ja
inc
jge
adc
cmp
fsubr
aad
insl
push
and
movsb
out
jnp
cmovno
loope
push
pop
cmpsl
pop
ljmp
jle
jg
ja
mov
and
sub
aaa
adc
insl
arpl
cmp
stc
gs
inc
pop
pop
mov
sbb
cmpsb
clc
nop
incl
mov
pop
and
xchg
sar
jp
daa
inc
test
stos
outsb
enter
mov
pop
mov
jge
xorb
push
cmp
mov
arpl
xlat
or
jns
inc
cld
add
int3
push
ljmp
mov
sbb
sub
pop
pop
dec
ret
lret
push
std
call
jecxz
adc
mov
dec
outsb
fs
clc
cmp
or
xchg
iret
pop
lods
shl
cltd
adc
pop
fisttps
mov
and
fucom
xor
leave
mov
mov
mov
test
ja
xchg
add
inc
arpl
sahf
popf
cli
ret
lods
push
and
je
cwtl
sbb
and
dec
ret
repz
jns
sbb
rol
pop
repz
jmp
mov
gs
aam
push
nop
or
add
dec
mov
cmp
nop
negb
jg
and
mov
popa
jl
dec
adcl
out
jbe
cmp
xchg
jmp
mov
mov
or
ret
in
jo
push
shll
mov
push
dec
fstps
mov
xchg
jb
push
out
sbb
xor
mov
loope
movsl
adc
shl
mov
arpl
jns
jne
das
inc
add
gs
lods
jae,pt
out
leave
inc
sbb
fs
jl
add
in
or
movsl
fsubl
pop
mov
add
dec
sbb
out
jo
scas
mov
mov
into
sbb
mov
movsl
es
cmpsb
imul
lds
scas
mov
inc
xchg
mov
rclb
lods
mov
ret
repz
stos
popf
mov
scas
inc
fstp
sbb
loope
lret
shlb
push
inc
sub
insl
sti
cmp
xchg
in
jecxz
push
or
mov
inc
loop
addb
and
dec
je
xchg
sti
ss
loopne
call
insl
mov
lcall
pop
xrelease
int3
aas
addb
mov
push
mov
and
repz
jnp
repnz
cltd
mov
pop
adc
or
ret
cli
sub
ret
inc
add
dec
push
lret
shrb
movsb
test
xor
mov
popf
mov
inc
sub
push
scas
pop
push
lret
adc
das
mov
push
incl
sahf
shl
dec
mov
push
mov
popf
bound
lea
lcall
adcl
push
mov
add
xlat
cld
xchg
inc
mov
pop
xchg
out
or
xlat
xchg
sbb
pop
cltd
xor
loope
shrb
push
incl
nop
inc
ret
faddl
sbb
jecxz
in
push
daa
repz
cmp
xchg
ss
push
fbld
jp
pushf
mov
mov
in
jmp
jbe
cmp
cmp
inc
or
mov
cmp
fdivrs
push
add
ds
inc
sahf
xlat
mov
sbb
or
fidivs
outsb
imul
sbb
shlb
lret
dec
lcall
or
mov
aad
jns
adc
incl
insb
add
xchg
outsl
lods
dec
add
jae
cs
push
movsb
xor
jno
or
dec
sti
dec
adc
int3
dec
mov
inc
daa
mov
movsb
cs
repz
aas
data16
xchg
call
or
sbb
iret
or
jnp
ficompl
or
loopne
enter
psllq
in
stc
push
mov
arpl
jge
mov
or
out
testl
call
shrb
lret
pop
inc
adc
loopne
lahf
mov
fs
loop
inc
mov
mov
pop
mov
dec
out
dec
push
dec
xchg
lods
push
xor
mov
cmpsb
ss
test
mov
aaa
jge
or
mov
mov
mov
insl
xchg
inc
xchg
inc
mov
js
sub
lret
dec
pusha
sbb
lds
cmp
dec
imul
pusha
push
sub
or
orb
ret
in
cli
es
dec
test
sbb
pop
mov
loop
cwtl
cmpb
cmpsl
sub
cmpb
lret
xlat
cmpsb
in
pop
jno
shlb
jae
popa
lret
dec
jo
ret
test
pusha
xor
daa
mov
push
add
dec
xchg
jl
pop
outsb
add
lods
sahf
cmp
adc
scas
adc
out
add
out
pop
xchg
mov
fists
jne
test
xchg
aam
arpl
sub
and
dec
dec
int
inc
and
cmp
push
xchg
adc
pushf
adc
imulb
adc
cltd
sahf
addb
jns
add
jno
mov
pop
inc
ret
adc
mov
add
sbb
sahf
aam
cmc
fs
xor
mov
pusha
mov
orb
call
sahf
xchg
xchg
mov
aad
mov
push
aaa
inc
out
push
iret
mov
adc
jmp
cmp
in
cmp
out
mov
pop
inc
mov
call
fsts
fdivr
dec
js
movsl
xor
mov
aaa
movsb
mov
inc
pop
jns
movsb
sub
xchg
cld
mov
pop
mov
gs
adc
les
popa
lock
pop
and
cmpsb
popf
adc
add
scas
stc
mov
fxch
jge
fwait
popf
xchg
pop
orl
mov
andb
or
mov
jle
and
adc
pop
jl
xor
pop
fcmovnu
sbb
adc
push
sbb
or
inc
add
dec
in
jbe
movsb
out
icebp
pop
aaa
pop
or
test
out
mov
push
jbe
sbb
add
sbb
pop
or
jge
out
jecxz
lretw
xchg
push
dec
and
mov
cmp
cmc
fldcw
xchg
fnstenv
ficompl
mov
dec
test
add
push
mov
daa
xchg
sub
push
cmp
test
cwtl
pusha
in
xchg
jb
mov
xchg
fisubl
jecxz
and
or
inc
imull
mov
dec
pop
adc
and
outsb
lret
mov
in
pop
mov
mov
pop
das
scas
jmp
repz
arpl
inc
insl
sub
repnz
shr
imul
pushf
add
ret
arpl
cmpsb
dec
push
sub
and
mov
cltd
fcompl
notl
aad
repnz
sub
fsub
jg
popf
dec
leave
mov
or
pop
mov
xor
ds
imul
sub
mov
inc
and
push
jne
daa
inc
frstor
lret
outsl
gs
testb
push
stc
jae
out
addr16
aad
dec
pop
ljmp
pop
scas
push
imul
pop
lahf
shll
sbb
gs
sbb
xchg
adc
jns
daa
mov
mov
cmp
pop
fidivrl
hlt
jno
mov
pusha
mov
imul
add
in
std
and
roll
mov
or
push
in
sbb
push
jge
adc
or
mov
ljmp
push
imul
int3
xchg
dec
adc
lret
negl
xor
test
sub
orps
int
push
testl
loop
movsl
int3
mov
ret
scas
cmc
cwtl
fmuls
cmp
adc
mov
inc
xorl
or
mov
mov
cmpsb
movb
sub
jno
and
push
pop
lret
ss
das
or
dec
add
scas
jle
xor
xchg
int3
xor
fists
push
and
repnz
mov
clc
and
mov
in
daa
cmp
testb
decl
fcoms
xor
aad
cs
dec
lods
outsb
add
popf
outsb
cmp
add
adc
icebp
push
js
jge
sbb
push
fnsave
and
jl
and
mov
loopne
xor
push
adc
mov
mov
aam
push
add
sub
xchg
lahf
ret
add
mov
aas
daa
mov
mov
out
out
xor
mov
dec
out
hlt
jecxz
or
fistpl
xchg
jns
add
in
mov
sbb
or
fadds
mov
ja
or
lods
aaa
imul
fcmovnu
emms
sbb
popa
push
inc
imul
lret
pop
arpl
push
xchg
aam
jns
xor
fcomi
mov
mov
das
hlt
sub
rcrb
add
ja
in
in
pop
jns
push
dec
shrb
sbb
sbb
pop
mov
jg
mov
xor
test
pop
out
xchg
leave
mov
cmp
adc
mov
cmp
gs
xor
rcrb
sti
and
pusha
add
sbb
jl
rcrl
in
movsb
jns
xor
jne
lock
sub
pop
xor
xlat
sahf
sub
ss
les
scas
xchg
popa
aam
sti
lods
jb
cmp
iret
mov
rcrl
out
ds
gs
pop
cmc
jno
das
aam
pop
scas
inc
loop
jae
mov
xor
and
xchg
jbe
pop
dec
sahf
pop
in
xor
inc
ret
dec
loope
out
mov
lret
dec
sub
or
jmp
enter
movl
mov
push
sbb
out
sar
jl
adc
adc
int
in
out
sub
lcall
sub
add
mov
call
and
pop
pop
ds
mov
outsb
xlat
clc
and
dec
dec
add
lahf
cwtl
scas
lods
outsb
jbe
pushf
out
pop
push
es
xor
sub
cmpsb
loopne
pop
pushf
inc
test
addr16
mov
xchg
inc
push
cmpsb
subb
lret
sub
push
outsl
pop
jo
xor
das
bound
in
cmc
push
xor
movsb
test
jo
sub
pop
repz
pop
add
bound
outsl
ret
test
xchg
and
pop
frstpm(287
iret
lret
rorb
shll
sti
push
sub
xchg
rcll
ret
mov
push
and
adc
push
inc
jo
psubusb
aas
add
dec
sub
dec
mov
push
add
mov
or
mov
mov
rorb
roll
movsb
jb
pop
push
xchg
jp
lret
movsl
xor
loope
fisttps
divl
dec
jne
push
inc
xchg
js
sub
gs
addr16
shll
mov
sti
cmp
insb
inc
out
mov
mov
mov
fistpl
dec
sbb
mov
jo
xchg
lret
mov
jge
sub
xor
add
inc
xor
mov
into
ss
lds
inc
rol
popf
pop
add
sarl
mov
imul
pop
mov
xchg
arpl
mov
int3
lahf
clc
xchg
push
repz
xor
mov
cmpsb
adc
shll
jbe
fwait
and
pop
cmp
or
xor
mov
push
cwtl
lods
mov
out
dec
lods
mov
sub
push
push
xchg
and
mov
ss
pusha
cmp
xor
pop
sbb
std
mov
mov
adc
mov
movl
sub
fdivrl
mov
sti
inc
fwait
in
push
dec
jne
or
fsubrl
movsl
pop
out
sbb
pop
sbb
pmaxub
popf
pop
sbb
and
std
imul
or
imul
stos
testl
fnstenv
mov
jb
iret
sbb
lret
jp
cmp
add
test
mov
mov
jns
fs
adc
and
in
flds
cmp
push
xlat
scas
fldt
les
jnp
sbb
test
es
xchg
inc
xor
jno
or
enter
ret
dec
push
cmovg
cmpl
inc
sbb
subb
push
scas
mov
sub
jno
sbb
mov
outsl
lret
mov
mov
movsl
jnp
lock
and
xlat
sub
sbb
cmpsl
jp
xchg
xor
or
mov
imul
or
rcrb
loopne
or
jns
test
inc
lods
pushf
mov
jb
cltd
mov
daa
jbe
outsl
or
in
inc
cmp
cs
addr16
dec
mov
test
xor
xchg
or
push
dec
out
inc
stc
lock
cs
sti
mov
mov
xchg
nop
rcrl
inc
mov
in
xchg
dec
out
mov
fsubp
inc
xchg
aaa
or
clc
add
pop
mov
loop
mov
sbb
push
cmp
mov
pop
cmp
ja
lcall
jbe
enter
scas
ljmp
rol
cmp
inc
aam
popa
dec
or
bound
jecxz
push
pop
divb
jg
hlt
mov
inc
and
cld
mov
lret
in
aam
fnstcw
frstor
pop
in
insl
mov
popf
cmpsb
das
adcl
ret
stos
jecxz
mov
mov
mov
mov
out
movsb
xor
jne
clc
cmpsl
ljmp
inc
ja
jmp
lds
or
cmp
cwtl
jl
in
and
inc
outsl
fstps
lret
jmp
enter
jmp
in
test
std
inc
pop
decb
aas
loope
jnp
stos
dec
add
arpl
push
mov
stc
fwait
test
scas
mov
dec
test
jbe
push
mov
pop
call
mov
sbb
ror
or
push
movups
push
clc
and
in
xor
pushf
jns
stc
pushf
mov
jno
enter
mov
or
addr16
push
xchg
push
fwait
pop
out
and
sub
dec
push
movsb
je
out
daa
mov
bound
xchg
dec
std
mov
dec
pushf
jnp
scas
popf
in
inc
xor
aaa
roll
lcall
xchg
mov
push
movsl
leave
int
mov
fwait
pushl
add
and
mov
test
lret
rorl
in
das
fcoml
int3
test
jl
sub
mov
pop
xchg
scas
add
xorb
pop
and
mov
leave
iret
mov
cld
bound
aam
push
or
inc
in
push
insl
shlb
mov
mov
test
sub
dec
xchg
in
dec
push
movsb
andb
test
mov
out
outsb
or
jo
icebp
add
xor
sti
jne
mov
in
cmp
shr
mov
inc
arpl
ss
shlb
idivl
shlb
lcall
in
shll
cmc
add
push
push
pop
scas
push
inc
outsl
frstor
jmp
stos
fwait
mov
push
leave
inc
inc
aad
or
and
and
adc
cltd
push
xlat
adc
out
test
in
push
loope
leave
cmp
fidivrs
cmp
cmp
fwait
lret
repz
jo
out
dec
sarb
mov
adc
inc
push
lock
pop
nop
cmp
rol
ficompl
jb
test
leave
cs
jle
mov
stos
cltd
bound
inc
scas
testb
mov
xchg
stc
adc
insb
popa
or
add
xlat
add
push
lea
mov
cwtl
aam
inc
lock
sub
idivl
xchg
jo
daa
popa
aad
je
addr16
mov
xor
stc
and
jb
inc
cmpsb
adc
test
scas
cltd
or
movl
in
push
test
test
xor
leave
shlb
jae
gs
ret
xchg
fildll
jno
in
mov
and
leave
sub
xchg
sbb
aaa
inc
mov
jp
cmp
and
sub
and
andl
addr16
sub
stos
aam
fiaddl
fsubrp
cmp
xchg
dec
pushf
or
imul
push
jl
jg
sbb
jge
bound
fsts
xor
inc
add
sahf
outsl
test
jmp
pop
test
sub
loope
mov
out
add
push
mov
fstpl
int
or
mov
jo
sti
popa
in
leave
clc
popf
cmp
js
mov
cltd
xor
addl
xor
jnp
mov
or
cld
lahf
or
stos
ja
imul
sub
mov
fnstenv
sub
mov
es
sub
xorl
repz
inc
push
or
leave
push
cmp
js
bswap
jl
clc
pop
sub
rorl
pop
xor
enter
jo
inc
inc
pop
in
hlt
jmp
outsl
xchg
and
cltd
push
cmp
mov
mov
sub
or
lea
inc
fsubr
outsl
jnp
imul
loopne
pop
adc
lock
hlt
addr16
loop
jl
cmp
out
movsl
xchg
mov
push
pop
fwait
jne
bound
or
pop
cwtl
mov
in
jno
pop
or
inc
inc
jg
add
daa
lcall
cs
popl
clc
xor
xor
mov
jb
mov
loope
jns
adc
cwtl
mov
add
imul
movb
aaa
pop
aad
rorb
push
mov
jmp
sbb
push
xor
sub
pop
ljmp
insb
out
cmp
inc
and
cmp
xchg
mov
aad
jo
fdivl
notl
add
aad
fistpll
add
xchg
xlat
lea
add
fdivrs
xchg
pop
bndcn
mov
fs
pop
push
test
or
mov
dec
aaa
and
mov
hlt
packuswb
loope
es
sarb
xchg
jo
pop
scas
fildll
xor
jle
outsl
add
mov
movsb
pop
cmpsb
or
aam
mov
popf
cwtl
je
out
mov
shr
xchg
add
fs
stos
or
pop
inc
pusha
push
loop
sbb
add
aad
sub
jge
in
adc
pop
and
sub
sbb
jae
mov
and
call
test
fs
xchg
mov
jmp
inc
test
add
ret
pushf
and
cli
popf
pushf
adc
adc
mov
mov
cmp
les
mov
inc
lock
rcrl
out
push
test
adc
adc
sub
insl
xor
rcrb
jbe
clc
add
cmpl
xchg
rol
and
sbb
mov
jno
pop
loopne
popa
or
jne
orl
mov
jmp
shll
int
xchg
cmc
pop
dec
add
jae
icebp
bts
scas
jnp
adc
stc
int3
push
adc
test
mov
sub
jge
sbb
pushf
dec
dec
stc
lock
pop
mov
cltd
jmp
aas
pop
divb
pop
fs
push
cli
mov
int3
inc
pusha
xor
inc
cwtl
jecxz
cmpsl
shlb
xor
orb
fsubs
hlt
stos
pop
jmp
adc
xchg
xchg
stos
orb
es
inc
mov
jnp
test
clc
sbb
stos
lds
das
stc
sbb
push
cwtl
or
jae
or
mov
adcb
data16
xor
sahf
sub
or
lret
xchg
sub
cs
mov
jmp
or
sbbl
inc
inc
fiadds
nop
push
cld
sub
loopne
pop
xchg
sahf
inc
stos
jge
movsb
loope
mov
push
xor
jle
mov
jge
and
orb
mov
int
pop
outsb
jns
lock
daa
or
mov
pusha
jbe
test
ss
pop
insb
jge
dec
stos
sub
cltd
fprem
cmp
push
inc
jno
mov
mov
or
aas
xor
gs
pop
hlt
push
pop
es
pop
prefetchnta
movsl
mov
mov
shrl
mov
jae
ret
adc
mov
fldenv
call
stos
xorl
mov
jle
pop
stos
jg
mov
arpl
push
pop
sbb
mov
icebp
lock
xor
sub
add
std
push
push
push
jns
fsubs
cmp
pop
dec
cmpsb
insl
lret
stos
and
pop
or
std
out
mov
jbe
jae
xchg
inc
pop
xor
xchg
jbe
rcrl
or
lret
adc
iret
fnstenv
divl
add
mov
mov
fdivrs
inc
test
push
add
pusha
jle
nop
cmp
sti
daa
mov
aam
lds
push
filds
mov
ss
jecxz
cmp
mov
xchg
inc
and
jne
gs
xchg
dec
aad
jmp
jp
popf
fdivl
push
loop
mov
xchg
jo
or
aas
and
xor
jmp
aaa
std
add
jne
andb
lcall
loopne
sahf
mov
cwtl
stos
mov
fwait
lods
xor
inc
add
ljmp
leave
in
add
pop
jle
and
hlt
add
popf
cmp
inc
div
sub
je
push
lcall
jb
push
mov
dec
ljmp
mov
pop
daa
inc
pushf
jmp
nop
repnz
cmpsb
add
je
out
mov
inc
add
lock
push
int
out
push
mov
jno
scas
dec
rol
pop
in
jb
inc
inc
add
add
adc
je
movsb
mov
sub
dec
sub
repz
sbb
mov
xor
adc
call
and
test
push
xchg
nop
push
les
jae
mov
loopne
outsl
push
cs
xor
dec
cmp
je
xor
jae
dec
mov
sub
dec
ss
enter
lods
cs
or
data16
mov
adc
hlt
les
notb
addr16
dec
mov
push
xor
roll
mov
das
add
test
lock
xchg
jmp
push
popa
sbb
push
fcmovne
ds
cmpsl
insl
mov
leave
loope
jmp
sub
sub
cmpsb
push
jmp
hlt
ret
or
int3
push
push
cltd
enter
inc
fs
xlat
int
adc
push
cwtl
jnp
je
dec
aaa
sbb
mov
fcoml
mov
pop
jb
je
cwtl
xor
adc
adc
lds
pop
lahf
or
das
loop
imul
xor
in
aaa
fiaddl
inc
jge
pop
cwtl
add
inc
test
cmp
pop
sahf
in
add
mov
pop
xchg
rolb
cmp
pop
rorl
pop
mov
leave
jl
lds
mov
fcomi
loop
divl
daa
cli
test
clc
mov
addr16
cmpsb
pop
testb
adc
rorl
mov
mov
icebp
mov
jmp
aad
sbb
inc
lods
mov
push
mov
clc
loopne
push
add
movsl
cmpb
test
mov
push
push
test
lret
push
in
push
or
cmpsl
out
sbb
jmp
ret
xchg
divl
push
push
fcompp
shlb
in
ljmp
pop
push
into
out
ret
adc
jbe
or
mov
or
rcrl
mov
inc
cmp
mov
sbb
int3
loop
mov
dec
push
int3
sahf
fidivrs
or
out
inc
xchg
nop
xor
jge
aam
or
out
and
cmp
mov
mov
xchg
dec
xor
mov
cmp
and
andl
xor
dec
cmp
pop
adc
test
xchg
verw
push
mul
add
out
dec
push
mov
pop
xor
push
rcl
push
popa
fcmovne
dec
lret
daa
pop
xchg
push
fninit
sbb
mov
push
out
pop
popf
movsl
cmp
or
in
test
adc
add
cld
cmpsb
jl
cmp
jns
cltd
cmpsl
or
xchg
cwtl
aad
dec
inc
jmp
xchg
mov
cmp
inc
cmp
xchg
cs
cmp
lods
dec
scas
xchg
xchg
sahf
jp
hlt
in
lcall
mov
sub
outsl
sbb
loope
mov
imul
fsubr
inc
xor
into
aam
addr16
lods
cld
mov
out
cld
pop
mov
inc
mov
mov
shlb
fimuls
cmp
dec
xor
mov
dec
jle
sub
loop
das
leave
mov
add
dec
rorl
les
icebp
push
jbe
cli
pop
cmp
aas
sbb
sub
lock
faddl
inc
mov
ret
popf
fisubl
repz
movsl
rorl
call
jmp
sbb
lahf
sub
stc
or
data16
ljmp
push
mov
sbb
jnp
or
mov
iret
mov
popf
sbb
cmp
addr16
sbb
hlt
add
mov
daa
stos
mov
fists
jg
push
inc
pop
and
dec
dec
loopne
xor
mov
mov
mov
add
mov
jnp
xor
mov
test
pop
cmp
js
les
sbb
fistps
popa
adc
dec
push
lret
xchg
outsl
pop
aaa
add
stos
outsl
cmp
pop
pushf
clc
and
stos
lods
into
push
inc
sahf
push
loop
xor
ja
or
sub
cli
aam
lods
fsubrs
aaa
jb
sub
ret
mov
shlb
pop
jno
call
cs
xchg
adc
jne
xchg
rorb
test
insb
jg
sub
push
test
or
mov
adc
fs
test
push
xchg
lret
shll
jle
xor
shrl
test
out
repz
cwtl
loope
jnp
loop
int
mov
mov
call
inc
fsubl
mov
jo
or
pop
xor
into
jp
dec
pop
mov
xchg
and
int3
inc
rcrb
add
lods
sub
repz
push
outsb
xchg
jmp
ja
aam
ljmp
mov
iret
xor
jne
in
jo
mov
jb
add
dec
mov
mov
or
push
pop
lcall
out
dec
add
add
hlt
mov
lahf
stc
scas
lock
and
dec
add
leave
in
test
sbb
adc
fildll
mov
cmp
jle
test
push
test
mov
push
repnz
sub
pop
adc
into
xor
mov
xchg
or
mov
mov
loope
add
stos
cmp
mov
pop
nop
sarl
out
mov
in
and
add
popa
pusha
in
stc
outsl
inc
lret
sbb
fistps
jo
jmp
sbb
jp
push
aam
jmp
push
test
lea
jne
inc
mov
mov
insl
sahf
insb
fwait
int
cmpsb
inc
daa
sub
ja
fsts
test
dec
or
dec
icebp
ret
popf
or
mov
dec
mov
popa
pusha
imul
aam
popf
xor
fbld
lods
mov
jp
in
push
dec
mov
push
jne
stos
mov
mov
pushf
pop
mov
or
pop
jne
push
test
jo
mov
inc
rolb
int3
arpl
call
mov
bound
adc
daa
mov
hlt
mov
inc
xchg
stos
xchg
xor
lock
stos
pop
push
push
inc
call
loop
test
lret
mov
hlt
push
out
fstpl
push
push
js
adc
in
mov
jmp
dec
int
pop
jg
mov
xchg
mov
sub
push
sbbl
pop
into
out
xchg
inc
and
scas
xor
loopne
iret
aad
shl
loope
mov
mov
inc
xor
mov
aaa
and
pusha
imul
mov
xchg
pushf
inc
xor
and
xlat
xor
iret
enter
xchg
imul
ljmp
pop
jne
cmp
sub
loopne
and
jp
movsl
dec
inc
in
hlt
cmp
sub
test
mov
jae
pop
xchg
das
pop
sbb
leave
ss
push
dec
dec
or
xor
movsb
dec
push
ret
or
push
adc
push
cmpsl
ljmp
push
dec
in
repnz
inc
cmp
cltd
fisttpll
std
jp
adc
pushf
mov
shll
jo
sbb
aaa
pop
xchg
gs
sub
push
test
dec
lahf
cmp
scas
imul
and
xlat
dec
adc
lods
dec
fcomp
fdiv
cmc
lea
cltd
push
push
xor
or
pop
ja
fsubrs
cmc
inc
dec
cli
movsl
and
add
outsl
cmpl
hlt
cmp
mov
scas
xchg
lods
enter
pushf
jae
adc
adc
std
sahf
cmpb
lds
push
jno
cli
jnp
mov
pop
xchg
sub
xor
in
push
cltd
loope
lods
mov
popa
cld
jmp
out
sub
xchg
movsb
js
je
cmp
or
cltd
mov
gs
repz
inc
sbb
aaa
push
in
bound
push
pop
sbb
out
push
cmp
into
cmp
xchg
mov
hlt
sbb
xor
mov
es
xorl
sub
mov
iret
lds
sbb
cmp
insl
pusha
and
repz
leave
pop
mov
scas
mov
pop
dec
mov
sub
pop
adc
cmp
pop
ds
adc
or
xchg
inc
xchg
jbe
dec
mov
sbb
xorl
xor
xchg
lods
dec
das
mov
sub
pop
pop
sbb
jo
cmp
mov
jle
push
jae
mov
xor
and
lods
shlb
or
fs
aam
cmc
jno
ss
rcl
push
insl
jge
or
mov
or
dec
cli
add
shlb
or
test
gs
pop
ja
xchg
adc
push
mov
jnp
fisttpll
push
xor
pop
cwtl
push
dec
popf
in
outsl
cmpsb
rcr
jne
insl
aad
jecxz
stos
xchg
or
arpl
std
mov
mov
loope
cmc
notb
call
xor
imull
mov
sub
cs
sub
jnp
mov
pop
xor
mov
pop
xor
xchg
cmpsl
je
inc
mov
enter
lods
sub
and
dec
sbb
rcrb
push
mov
push
mov
sbb
ljmp
mov
stos
cmpsb
push
jnp
repnz
test
scas
dec
outsb
inc
imul
xchg
dec
sahf
cmpsl
push
das
mov
pop
aam
clc
add
call
scas
dec
mov
mov
push
cmp
inc
ret
sub
add
add
mov
lods
mov
sbb
add
aam
repnz
jle
ret
pop
je
test
dec
gs
mov
repz
std
loop
in
push
add
xchg
btc
xchg
js
jle
pop
inc
ret
jge
inc
movsb
popf
aas
mov
outsb
cli
into
jmp
dec
sub
gs
inc
cmpsl
add
jp
mov
js
push
pop
sbb
popa
pushf
enter
daa
add
test
je
roll
xchg
fdivs
and
pandn
lea
mov
dec
sbb
jecxz
test
pop
sbb
push
sti
jne
adc
dec
adc
fdivl
lock
mov
xchg
mov
mov
sub
mov
push
jl
mov
out
cli
fwait
aam
pusha
lods
pop
xor
int
and
lcall
jne
aad
scas
lds
stos
jae
sbb
jg
mov
ret
rolb
and
cmp
leave
xchg
xchg
addb
in
loopne
mov
sub
sub
outsl
cmp
mov
dec
call
lret
jbe
rorb
add
mov
jo
inc
es
ljmp
mov
push
insl
dec
jo
xor
fwait
stc
js
outsl
cmp
mov
xor
fwait
ss
xchg
cmpsb
out
push
imul
fscale
daa
std
dec
inc
or
xor
mov
outsb
dec
jb
adc
scas
shl
mov
mov
cmovp
lods
cmpsl
jne
loopne
or
hlt
shlb
out
ljmp
inc
stos
jmp
jbe
push
adcb
push
push
xor
or
pop
ja
aad
push
and
xchg
mov
xchg
or
divb
push
lods
inc
sbb
ret
and
push
popf
and
outsb
xchg
and
jae
enter
xchg
push
dec
ret
icebp
ljmp
mov
ja
test
and
pop
lahf
lea
push
sub
incb
cmp
jp
push
test
or
adc
bound
xor
mov
pop
xor
imul
scas
scas
fisttpl
popa
mov
fs
arpl
mul
xchg
sub
inc
bound
movd
xchg
pop
sbb
inc
movsb
fidivl
in
mov
pushf
aam
cmp
idivl
push
arpl
lahf
adc
cmp
in
fsubs
test
out
push
pop
es
push
cltd
scas
loop
in
jp
popf
pop
in
cld
xchg
sahf
fidivl
mov
push
push
repnz
mov
leave
and
mov
sub
into
sbb
inc
mov
pop
mov
test
push
scas
fidivl
xchg
sub
mov
ret
sbb
adc
loope
jmp
cmp
rcrb
jbe
pop
fsubl
mov
andl
pop
xchg
add
ss
adc
mov
pop
sub
adc
push
fstpt
add
dec
outsb
xor
jp
or
cmp
mov
cmp
addl
rclb
mov
fmuls
jmp
out
jecxz
dec
mov
loope
jno
xor
xor
inc
inc
shrl
movsb
or
jp
sbb
xchg
xchg
jno
lahf
inc
push
mov
rolb
loopne
sahf
xorl
cli
stc
stos
jno
sbb
lock
xor
popa
andb
lret
jecxz
cli
out
pop
pop
cmovge
test
mov
sbb
xchg
jnp
lret
clc
push
rcll
jg
das
sbb
icebp
cmp
imul
push
inc
lahf
imul
insb
pop
jae
packssdw
fistps
push
in
xor
dec
xchg
add
sbb
mov
idivb
mov
in
mov
ljmp
mov
dec
jnp
cmp
add
sub
cmp
es
and
icebp
push
js
mov
or
or
lret
lock
cmp
xorb
rcl
add
or
xchg
ret
out
loope
inc
ljmp
add
add
js
push
inc
ret
adc
in
inc
hlt
test
scas
xor
jae
fisttps
ficompl
xchg
cs
pop
mov
mov
xor
js,pn
movsl
inc
cmp
lods
push
push
cmpsl
jmp
push
jae
out
jg
xchg
inc
cmc
and
aam
push
mov
arpl
mov
mov
sti
xchg
and
jp
mov
pop
mov
add
orl
mov
xchg
jno
sub
arpl
cmp
hlt
xor
and
inc
sbb
jg
cmpsb
ret
sbb
popf
lock
leave
stos
shlb
mov
jno,pt
in
cmp
lds
les
xorl
rcrl
aas
fwait
jae
lods
mov
and
fnstsw
jle
sub
mov
mov
pop
xchg
imulb
cmc
icebp
and
in
dec
cmpsl
inc
call
sub
cltd
mov
pop
push
inc
popf
repnz
popa
mov
or
mov
arpl
jnp
sub
jb
pop
loopne
fstpl
in
sbb
les
sahf
int3
adc
std
pop
ljmp
jne
fucomip
adc
dec
ds
push
call
outsl
push
pop
inc
sub
jmp
dec
shlb
inc
push
mov
les
leave
out
insl
lods
xchg
pop
mov
adc
and
jns,pt
cmp
les
pusha
les
bound
stos
or
mov
jbe
sub
xchg
sbb
cld
push
push
in
fcompl
fdivl
icebp
sarb
push
data16
dec
mov
mov
jl
mov
js
stos
sbb
cmpsb
scas
test
or
roll
je
mov
xchg
xor
rclb
cs
cmpsb
les
jns
or
daa
enter
pop
mov
fisubrl
mov
fisubrs
jmp
jp
xor
jbe,pt
jle
push
mov
add
mov
inc
jp
adc
dec
sbb
ret
sub
sub
pushf
add
imul
cs
and
adc
scas
push
dec
popa
push
sub
dec
lods
sub
pop
push
xchg
and
xchg
icebp
sarl
and
clc
js
mov
sbb
mov
mov
pop
inc
test
fidivrs
inc
cmp
lods
std
bound
cld
sbb
in
insb
div
fstpt
xchg
in
shll
jnp
outsb
fldl
rolb
jg
jp
lahf
add
and
or
test
shl
add
cmc
dec
mov
rorl
sbb
xchg
shll
hlt
sub
xlat
jbe
out
fisttpl
iret
sub
xchg
sub
js
imul
mov
ret
cmpsb
addb
out
xchg
scas
mov
out
sub
or
or
movsl
mov
hlt
lret
imulb
and
out
push
lock
nop
cmp
lret
mov
hlt
clc
imul
mov
aaa
add
mov
incb
insl
push
ss
loopne
out
sub
jbe
add
push
lret
inc
test
nop
in
pop
xchg
pop
xor
push
xchg
hlt
cmp
sub
mov
inc
imulb
dec
inc
inc
das
cwtl
repnz
int
lahf
imul
data16
stos
cmp
fisubrl
xor
aad
push
jns
mov
jmp
push
out
in
dec
xor
pop
les
ret
pop
push
mov
out
cs
scas
cld
pushl
jnp
mov
in
or
inc
das
xchg
mov
mov
stos
mov
xchg
paddsw
mov
add
aam
int3
inc
pop
test
mov
ljmp
pop
iret
aas
scas
cmp
xchg
es
xor
cwtl
mov
jge
inc
lret
and
ficoms
pop
cvttps2pi
push
adc
sti
mov
out
cmp
xchg
repnz
in
xchg
or
xchg
adcb
arpl
orb
lods
fsubrl
stos
push
mov
push
inc
xor
insl
nop
sbb
call
lret
mov
outsb
gs
les
or
shl
jmp
fstpl
lahf
or
dec
pop
cmc
mov
cmp
fildl
push
mov
xchg
xchg
push
gs
jmp
data16
adc
jns
fdivl
xchg
lods
mov
pop
push
movsb
mov
icebp
out
out
inc
cmp
lock
outsb
sub
lock
mov
xor
adcl
xor
cmpsb
push
dec
nop
pop
sub
xchg
insl
pop
sub
int3
dec
mov
fmulp
lods
xor
xchg
gs
mov
jno
mov
mov
arpl
into
jmp
ret
xchg
dec
push
mov
shrb
pusha
sbb
push
cmpsb
aad
movsb
stos
push
loope
mov
xchg
fdivrl
fisubrl
imull
push
sbb
dec
jnp
or
das
fidivrl
and
fildl
test
adc
push
xor
imulb
jle
mov
jo
lret
icebp
cld
lahf
outsb
div
adc
jbe
adc
mov
push
sbb
loope
jne
jno
pop
in
out
xor
push
lods
sahf
inc
outsb
jbe
aaa
sahf
xchg
push
sbb
adc
mov
cwtl
sub
sub
std
mov
xchg
sbb
dec
shl
jmp
insb
enter
cs
add
xchg
dec
pop
inc
stos
jle
inc
jl
cs
cmp
or
lods
call
jge
pop
insb
and
aaa
sete
xchg
addr16
loopne
pop
jne
sti
xor
popa
pop
std
into
arpl
sbb
dec
xor
add
adc
inc
filds
out
and
daa
jbe
popf
and
mov
sbb
sub
mov
in
leave
movsb
shrl
out
fdivrl
ret
scas
sbb
jns
xor
or
jnp
arpl
fnstcw
xchg
insb
add
sarl
sahf
xchg
xor
movl
das
mov
scas
or
shlb
pop
testb
jmp
fwait
pusha
jo
sahf
jo
cmc
loopne
lret
mov
add
sbb
rol
mov
hlt
int3
xchg
nop
insb
fcomps
iret
or
and
mov
test
pop
sbb
test
fildll
fidivl
cmp
fiadds
daa
and
fs
mov
into
and
sub
add
es
pop
lret
fs
mov
je
popa
je
arpl
and
cmp
repnz
test
clc
test
ret
cmpl
lahf
or
mov
nop
mov
mov
mov
cli
out
mov
loopne,pn
jl
lea
testl
cmpsb
sahf
sub
loope
inc
das
jne
push
call
fsubrs
mov
mov
dec
lock
out
pop
test
out
pop
repnz
jge
jae
int
in
stos
scas
xor
push
pop
outsl
add
imul
mov
push
cmp
cmp
pop
in
inc
cmp
sub
jmp
lret
scas
jp
jmp
mov
out
fiadds
pop
cmpb
rolb
repz
sbb
bound
inc
int3
cmp
fidivrs
insb
cmp
push
movl
fs
mov
and
or
push
lahf
cli
mov
std
std
sub
xchg
lods
xchg
aas
push
cwtl
shlb
ljmp
dec
mov
push
nop
mov
dec
push
test
scas
subb
hlt
imul
fists
jl
cltd
mov
fildl
push
jae
loop
cld
icebp
lret
add
adc
or
add
fnstcw
mov
divb
leave
lcall
sahf
shll
add
add
cmpsb
sbb
push
scas
sbb
rol
cs
mov
adc
push
loopne
cmc
test
enter
setp
fucomp
xchg
aaa
lea
sbb
stc
push
imul
test
jmp
jnp
sarb
xor
xchg
icebp
xchg
lret
cmpsb
loope
mov
fcoms
jg
push
push
pop
push
js
enter
loope
pop
les
adc
iret
adc
push
clc
lea
mov
fs
lods
push
mov
in
xchg
das
jp
leave
mov
cmp
hlt
jo
lahf
xchg
out
dec
pop
mov
fcomps
jp
cmp
je
test
pop
rclb
jb
aas
leave
ds
jnp
push
jb
test
xchg
jns
and
bnd
jo
das
inc
mov
inc
iret
xchg
sbb
ljmp
sub
shll
andb
stos
in
ss
not
cmpsb
push
jmp
cmp
cld
rol
or
icebp
inc
movsb
pop
aas
xor
rep
test
imul
test
out
jle
push
sub
mov
cmpsb
gs
mov
jg
aad
push
int
insl
call
add
insl
ret
cmc
inc
push
icebp
push
insl
adc
cmpsl
outsl
lea
js
xor
mov
aaa
ret
pop
adc
pop
cwtl
mov
pushf
ljmp
or
xor
mov
enter
ja
mov
add
cmp
jg
mov
out
fisttpl
pop
aaa
xor
out
dec
add
outsb
leave
jg
add
incl
mov
fistl
lods
int
ficoml
pop
stos
cmp
jb
dec
cmpb
mov
pop
cltd
mov
lahf
push
pop
mov
add
xor
mov
xchg
dec
and
inc
mov
xlat
pop
push
jg
push
out
nop
add
fimuls
negb
call
lcall
mov
scas
mov
jp
push
jp
fwait
sub
sahf
pop
bound
hlt
ja
sub
cmpsl
mov
stc
xchg
sbb
jno
inc
jbe
inc
popf
fnstcw
sbb
rolb
loop
cmp
aam
push
mov
fdivs
pop
push
and
sub
adcl
mov
sbb
aam
loope
fs
dec
in
xchg
jecxz
push
xchg
push
in
push
test
jbe
pop
aas
dec
int
sub
push
and
dec
ljmp
cwtl
mov
imul
sbb
push
and
lea
aam
popa
pop
xor
or
stos
bswap
sub
arpl
mov
push
mov
pushf
xchg
inc
clc
xchg
xchg
push
int3
push
ja
mov
pop
into
mov
ret
out
push
dec
push
js
jecxz
inc
jmp
mov
mov
in
in
sbb
aaa
mov
dec
js
xorb
or
sbbl
inc
xor
inc
xchg
or
lds
ret
sub
mov
add
dec
cwtl
gs
je
sub
push
or
arpl
jmp
testl
or
pop
and
xchg
push
inc
xchg
push
xchg
inc
cli
cmpsl
shll
pop
inc
fsubrs
jbe
push
ljmp
inc
scas
jbe
jg
call
inc
popf
pop
clc
ror
add
ds
sbb
in
rol
xchg
push
mov
fsubr
pop
or
scas
cmc
arpl
test
sbb
xchg
in
xor
aaa
jae
mov
pop
bound
pop
lea
xor
dec
jno
inc
imul
and
stos
adc
mov
or
in
pop
cmp
inc
nop
insl
aaa
loope
and
out
in
leave
leave
jns
idiv
add
inc
xchg
cld
push
test
stos
fdivrs
das
mov
inc
push
mov
and
movsl
cmp
mov
mov
lea
leave
fsubrs
outsb
dec
ja
cmp
cli
jmp
jmp
pop
dec
inc
jnp
jle
js
mov
daa
stc
repz
inc
inc
inc
mov
push
push
push
out
ljmp
mov
cmpsl
cltd
std
sbb
pop
push
ljmp
fistpll
inc
mov
dec
ds
js
and
or
cmp
adc
pop
in
sarl
fidivrs
das
int3
lcall
les
sub
push
mov
add
or
and
mov
fcoml
fwait
sub
shrb
lea
cmp
cmpsl
inc
shrb
push
push
jmp
testl
and
mov
std
cli
lahf
push
in
mov
jbe
mov
jae
pop
shll
iret
popf
push
imul
nop
sub
stc
movsl
fs
lock
pop
pop
dec
pushf
inc
push
in
filds
jae
inc
fldt
cmc
ret
jb
adc
or
gs
lret
jae
push
xchg
sbb
rorl
popf
jae
ljmp
outsb
call
inc
sub
mov
lahf
mov
sub
mov
popa
xchg
push
mov
mov
push
push
sbb
mov
fisttpll
jb
jl
mov
movsb
xchg
in
inc
shll
inc
stc
dec
adc
xor
xlat
sti
cmp
das
mov
dec
xchg
test
cmp
mov
jmp
sbb
and
ljmp
jb
pop
jge
sbb
js
enter
lock
sti
popf
std
jmp
mov
sar
sbb
mov
and
cmp
push
daa
notl
sub
cwtl
scas
adcl
stos
ja
xchg
aaa
mov
popa
inc
mov
cli
mov
or
dec
mov
daa
xchg
rcll
inc
xchg
jne
enter
dec
sbb
push
inc
movsl
mov
pop
pop
mov
mov
clc
out
jg
pusha
daa
add
mov
loop
push
ja
enter
iret
cmp
imul
mov
into
xor
and
out
lahf
mov
lret
in
push
and
mov
out
mov
filds
test
mov
dec
adc
flds
mov
out
filds
aam
or
ja,pn
call
repz
cwtl
sub
mov
pop
shll
fadd
orb
movsb
cmpsb
cld
push
sti
leave
mov
sbb
sbb
cmpsl
sub
or
jge
adc
into
out
das
lods
in
and
mov
daa
testl
loope
inc
jmp
cwtl
out
pushl
inc
jne
sbb
aad
mov
movb
jg
sub
push
in
or
mov
bound
loopne
sub
mov
inc
cltd
ret
xchg
or
scas
xchg
mov
cmpsb
xchg
cltd
xor
xchg
and
loope
pop
clc
mov
fmuls
sbb
lods
adc
rorl
rorl
pushf
xchg
mov
push
jno
adc
jecxz
mov
lret
lcall
mov
mov
in
movsb
cmp
sbb
cmc
or
mov
aad
cmp
push
lock
test
pop
daa
in
scas
fadd
adc
sbb
push
enter
jae
mov
mov
pop
aam
shrb
xor
cltd
mov
pop
mov
pop
ss
adcl
jae
lods
cmp
ret
jl
jl
lds
test
int
fiadds
pop
jmp
dec
cmp
add
add
or
fstp
push
xor
mov
fists
lock
stos
inc
iret
cmpsl
pop
mov
xor
inc
push
push
data16
push
iret
popf
aad
shll
mov
xorb
pop
adc
pop
push
mov
pop
stos
in
lods
jmp
lods
mov
sub
decl
int
and
out
sahf
jbe
repz
popa
pop
mov
bound
cwtl
jmp
sbb
repz
scas
dec
test
jecxz
mov
mov
mov
dec
fimuls
adc
js
imulb
std
std
lret
inc
stos
orl
repnz
es
bound
cmp
inc
xchg
popf
lods
mov
cwtl
dec
cmp
test
fnstsw
mov
into
add
arpl
arpl
pop
jae
das
bound
cli
mov
xchg
push
out
fs
testl
movntq
cmc
adc
mov
fwait
jnp
addb
adc
push
shrb
mov
jbe
or
es
orb
mov
pop
and
fs
imul
xor
xor
sbb
test
loop
dec
mov
incb
rcrb
xchg
gs
subl
mov
xchg
pop
xchg
mov
jns
outsl
shrl
les
shll
lds
lock
dec
stos
inc
in
adc
add
insl
popa
push
popf
add
add
jecxz
push
shl
js
mov
and
mov
sahf
ja
mov
cmc
or
push
sbb
add
cmp
adc
cld
loope
add
int
dec
lret
xor
adc
mov
sbb
pushf
cli
outsb
adc
or
adc
cli
cli
jb
ret
jcxz
or
adc
ss
sub
inc
std
in
jl
hlt
inc
mov
mov
sti
dec
fidivl
jl
shl
xchg
out
dec
les
jle
clc
jl
lret
mov
or
cmpsb
inc
jnp
xchg
adc
pop
and
xor
add
dec
pop
adc
fimull
aas
jo
test
jo
push
mov
test
dec
dec
nop
mov
dec
and
add
and
xor
add
ret
cmp
push
sub
int
mov
shrb
dec
inc
mov
mov
push
mov
ss
test
int
mov
aaa
dec
push
cmc
js
aam
add
lds
les
or
jbe
push
mov
xchg
ds
push
xchg
aam
push
inc
test
adc
mov
push
call
lahf
mov
mov
cmp
inc
insl
or
sarl
sbb
mov
jnp
insb
rclb
add
addb
data16
mov
hlt
mov
dec
loope
cmp
mov
je
push
dec
rorl
hlt
leave
add
cmp
cmc
xchg
mov
aam
xor
xlat
xchg
in
adc
popa
aad
jecxz
push
xchg
or
jecxz
sarb
cmc
xor
lret
test
sbb
fdivs
or
jbe
xchg
out
ja
repz
xor
scas
dec
pop
dec
sbb
jl
fsubp
outsl
aad
inc
sbb
push
xchg
xlat
push
lahf
push
out
mov
rcl
addb
dec
jae
jb
daa
cmp
das
mulb
cmp
popa
lret
inc
mov
loope
push
jl
scas
push
mov
movsb
adc
jno
push
or
roll
mov
dec
sub
addb
inc
sahf
shlb
call
dec
pop
jg
mov
aas
and
out
push
push
push
cwtl
jae
je
andb
rcl
xchg
mov
in
and
leave
mov
in
or
xor
nop
pop
movsl
test
cld
lds
orb
cld
popf
aaa
pop
sub
cmp
mov
into
or
inc
add
outsb
push
icebp
inc
sbb
pop
add
mov
jno
ffreep
out
cmp
mov
loop
jne
gs
in
cmp
cmp
inc
inc
divb
mov
mov
roll
pop
je
pop
enter
pop
lret
xchg
xor
dec
jge
jb
std
xor
pop
fs
pop
push
call
in
loop
pop
sub
popf
fdivrs
jp
pop
mov
bound
bound
out
shl
lock
sbb
test
outsl
xchg
dec
push
push
icebp
lret
cmp
je
addl
xchg
or
xor
xor
dec
iret
arpl
xor
and
pop
shrl
xchg
xchg
or
pop
jo
sub
sbb
cmpsl
and
mov
xchg
xchg
push
or
in
add
sar
cld
xor
fisubrs
xor
and
fidivs
dec
xlat
arpl
mov
dec
not
mov
rorb
arpl
nop
push
imul
cmp
iret
fisubrs
aad
push
jmp
fnstenv
je
aad
sti
test
cmpsb
push
fsubs
addl
mov
in
push
push
mov
ljmp
repz
dec
push
daa
cmp
pop
ds
cmpsl
in
sub
fisubs
xor
nop
sbb
jnp
and
mov
fs
testl
movsb
mov
in
lds
cmp
and
add
into
test
out
cmpsl
fdivr
pop
pop
cld
push
xchg
add
xlat
sub
sub
and
out
aad
bound
sbb
loop
sub
cwtl
xor
jecxz
lret
fs
dec
insb
jae
loope
sbb
inc
outsl
loopne
xorl
loop
push
xchg
adc
dec
into
ret
in
xlat
je
inc
cmp
fdivr
test
imul
mov
testl
in
mov
jnp
ds
cmpsb
inc
pop
loop
jno
pushf
imul
fisubl
adc
push
adc
or
in
loope
jg
mov
and
xchg
in
dec
out
sub
loope
jae
mov
cmpsl
out
int3
das
add
push
jg
pop
aad
popf
push
lahf
shl
mov
mov
lahf
ret
in
into
je
push
push
lcall
shr
icebp
fstpt
sbb
clc
xor
int3
ret
sub
inc
and
mov
les
inc
sub
rclb
sahf
xor
lcall
stos
call
xor
aas
mov
pop
movsb
into
imul
lret
call
out
insb
mov
insb
mov
sub
inc
scas
push
mov
add
mov
mov
daa
mov
test
sti
adc
dec
addr16
xor
xchg
dec
mov
insl
fildl
and
mov
loop
jae
rorl
cld
add
rolb
push
insl
fcmovu
xchg
cmp
gs
ss
push
imull
cs
in
or
and
sub
stos
jne
mov
or
jb
sub
and
pop
test
loopne
mov
nop
iret
adc
ret
mov
scas
mov
xchg
fbstp
push
and
push
shlb
lret
mov
jmp
xlat
test
xchg
sub
pop
jnp
nop
mov
pusha
cmp
aaa
ja
loope
mov
push
bnd
in
ljmp
nop
adc
sbb
pop
jae
xor
aaa
dec
aad
add
push
pop
and
adcb
push
mov
jge
insb
popa
xchg
es
sbb
push
pop
and
xor
sbb
fcom
mov
repnz
xchg
lret
movb
fsubl
mov
push
push
leave
adc
shll
stos
nop
and
movsl
and
add
mov
lods
push
inc
sbb
and
and
inc
xorb
xchg
jae
out
std
jmp
pop
mov
inc
outsb
bnd
pop
dec
lds
pop
adc
mov
in
dec
test
ret
xchg
jp
int
sti
xor
inc
popa
fidivrl
fs
mov
sub
dec
xor
sbb
mov
or
inc
inc
jnp
mov
push
xchg
fs
aam
sbb
pop
cmpsb
or
dec
inc
xchg
push
jo
out
push
sub
inc
jb
imul
jmp
dec
dec
cwtl
out
mov
xchg
lret
xor
subl
lahf
sti
sub
test
jns
mov
sti
cs
fcoml
cmc
fcompl
pop
and
ja
pop
push
popa
mov
popl
jo
sub
test
mov
fisttpl
or
sbb
iret
loopne
jbe
fsubrp
rcrl
stc
gs
insl
imul
or
mov
inc
or
addps
jg
pop
js
out
call
pushf
cmpsb
jb
mov
bound
pop
and
mov
adc
outsb
push
xorb
cwtl
data16
aam
lods
push
push
mov
std
cmc
add
ret
cltd
pop
jmp
pusha
lea
jp
dec
arpl
xchg
dec
add
rorb
pop
xchg
cmpsl
lahf
dec
int3
mov
mov
rcl
rol
andl
fsubs
mov
pop
hlt
jne
das
nop
pop
cmpb
xor
inc
ret
aam
cmp
mov
dec
cmp
addr16
xchg
aad
fwait
inc
inc
jecxz
lea
pushf
fldl2t
add
xchg
xchg
cmc
mov
adc
stc
loopne
and
cmovle
adc
cmp
clc
movsb
cli
pop
call
popf
xor
iret
xchg
mov
incl
and
cmp
js
testb
or
or
aad
sub
dec
arpl
dec
jg
mov
adc
sub
into
in
lods
pop
mov
clc
xchg
and
or
je
sti
cld
dec
js
lcall
jae
mov
sub
xorl
je
out
xchg
inc
cwtl
arpl
pop
mov
ret
insl
sahf
stos
add
cmc
push
pop
fidivl
mov
sbb
pop
xlat
repz
repnz
in
outsb
mov
fists
cmp
mov
stc
jbe
push
pop
fwait
mov
jle
xchg
enter
fsubr
clc
dec
sub
cmc
int
lahf
sahf
fisubs
jnp
mov
mov
aam
xchg
inc
jnp
push
jp
fnstsw
pop
jmp
inc
adc
inc
and
dec
clc
mov
push
cltd
cmp
mov
add
xor
mov
rorl
andl
mov
cld
test
inc
imulb
imul
mov
push
xchg
dec
push
stos
shlb
ss
or
mov
icebp
popf
pop
add
jo
mov
pop
das
repnz
pop
sub
ss
lods
mov
push
loopne
mov
fwait
xor
das
jle
xor
pop
push
in
sbb
jns
stos
inc
mov
aam
jge
pop
aas
dec
inc
bound
xor
stc
out
xchg
fiaddl
jns
cmpsb
adc
push
mov
insl
jg
out
out
stc
cmp
aas
fstl
test
mov
aas
popf
xchg
cmpsl
push
cmpb
mov
popf
dec
cwtl
xchg
fld
lods
xchg
lods
ficomps
pushf
xlat
push
adc
in
adc
mov
mov
cld
fildll
outsl
sahf
xor
push
call
addr16
aas
jle
or
jno
mov
pop
or
rorb
jbe
mov
sub
xchg
aaa
add
pop
imul
inc
cs
popf
cmpsl
cmp
jbe
arpl
inc
dec
lock
push
cltd
push
lahf
xlat
jno,pt
and
xor
ljmp
fidivrs
out
scas
call
mov
int
mov
lret
cmp
out
mov
or
sub
fadds
cltd
data16
mov
and
mov
js
xor
mov
js
shlb
mov
adc
sti
movsl
push
and
mov
aad
xorl
sub
fs
jno
pop
bound
int
pop
pop
push
pushf
cld
inc
sub
inc
dec
pop
idivl
pop
pop
add
adc
mov
out
xorl
xchg
mov
pusha
xchg
add
mov
sub
cmp
or
icebp
rcrl
shrl
out
pop
sub
je
loopne
movb
push
inc
gs
stc
call
push
in
nop
sub
hlt
mov
mov
inc
mov
mov
adc
push
les
std
adc
repnz
mov
inc
and
insl
push
mov
jle
mov
rol
add
jmp
das
push
mov
push
xlat
add
mov
cmp
pop
jge
add
jmp
or
adc
pop
mov
sbb
pop
faddl
scas
outsl
sbb
pushf
and
jnp
test
and
sti
mov
lcall
div
jmp
sub
int
pop
lock
adc
mov
adc
dec
cli
out
and
daa
jns
ljmp
push
mov
mov
loope
mov
xlat
dec
lods
in
xor
insl
shll
mul
mov
adc
pusha
xchg
cltd
sub
ja
das
add
lods
adc
mull
test
imul
out
sub
xor
sarb
leave
pop
ss
or
mov
pop
dec
cmpsb
inc
call
movsb
sub
fs
sbb
push
rcrb
or
rcr
bound
mov
ror
mov
roll
sbb
leave
mov
cmc
xor
imul
pop
fisttpl
lods
inc
cmp
mov
xchg
mov
lret
stos
orl
mov
adc
mov
and
jae
sbb
call
push
mov
jne
jmp
loopne
pushf
mov
xlat
pop
addb
data16
js
mov
mov
mov
mov
mov
xlat
sub
popa
lcall
stc
jnp
lahf
jbe
lods
sbb
push
lahf
jns
mov
and
das
cli
add
sbb
aad
dec
ja
mov
jg
mov
sub
leave
push
inc
jecxz
push
cmp
push
sbb
cmp
ljmp
pushf
or
jb
or
mov
test
insl
dec
push
xchg
push
push
scas
js
movsl
adc
add
addr16
or
movsb
jns
cwtl
daa
into
jg
nop
jbe
ds
stc
xor
out
sahf
inc
fst
jecxz
daa
aaa
dec
stos
addr16
or
adc
xlat
insb
inc
popf
push
aaa
dec
sar
adcb
ret
dec
out
sub
sub
bnd
adc
add
adc
rcr
pusha
imul
mov
add
push
cmpsw
and
push
gs
test
mov
pop
dec
xor
pusha
mov
imul
pop
pop
popa
mov
imul
dec
xchg
daa
xchg
insl
push
dec
jmp
pop
cld
mov
popf
or
push
xchg
popa
ljmp
inc
iret
dec
xor
xor
and
push
loopne
loope
fsub
mov
in
stc
cld
pop
outsb
cli
jp
fsubs
andb
xchg
pop
insb
das
sbb
ret
or
pop
jae
mov
adc
cmpsb
dec
popf
add
lds
shrb
repnz
mov
or
in
xchg
imull
addl
ljmp
xlat
xchg
es
jno
ret
jmp
test
cld
mov
outsl
daa
cmp
mov
ret
or
inc
shr
xchg
pop
lcall
mov
mov
pop
pop
ret
cmc
or
push
cmp
lea
idivl
nop
popa
test
add
shlb
sub
rclb
insl
ret
sub
popf
jl
mov
inc
repz
xchg
jns
xchg
in
pop
xor
shrl
adc
cmp
lds
cltd
popa
jge
cmpsb
cmp
and
cmp
fwait
outsl
sahf
pop
sarl
das
add
push
sub
mov
mov
jns
rcl
test
inc
xchg
xchg
push
xchg
idivl
sub
out
lea
inc
les
sub
fldlg2
andl
lock
out
sahf
icebp
dec
mov
jle
lods
dec
out
in
in
sarb
inc
and
sahf
xchg
mov
inc
cld
dec
xchg
jl
maskmovq
testl
mov
cmovle
sbbl
ja
mov
cvtps2pd
std
jnp
cmp
push
mov
sbb
jle
push
sbb
push
xor
into
sub
lds
mov
sub
jp
in
shl
add
push
or
jns
std
dec
repz
mov
nop
inc
mov
imul
and
and
push
scas
out
arpl
es
popa
test
lds
cmpsl
ljmp
stos
shr
fs
cmp
add
adc
sub
or
sbb
mov
ja
pop
ret
xlat
xor
push
addb
sub
movsl
inc
or
aam
sub
outsl
xor
aaa
std
xchg
rcrl
lods
stos
aam
loopne
jb
int3
in
into
test
leave
stos
aaa
popa
rcrl
filds
gs
mov
cmp
insb
adcb
repz
dec
aas
pusha
xchg
cmc
insl
ret
mov
push
into
repnz
lret
sub
inc
pop
adc
lahf
fdivr
xchg
rorb
or
leave
and
fbld
push
mov
dec
jae
ret
mov
and
call
add
dec
jb
shll
and
popf
or
mov
imul
and
lcall
mov
repnz
xor
fdivs
mov
dec
aaa
dec
jno
and
and
faddl
xchg
in
pop
xchg
lret
inc
adc
and
push
loopne
push
xchg
lahf
pop
or
pop
jmp
stc
jecxz
imul
push
and
sub
addr16
or
xchg
adc
int3
push
test
aad
push
adc
je
mov
mov
dec
jl
shlb
inc
rcrl
mov
adc
inc
mov
cmc
inc
mov
cltd
stc
pop
test
xorb
and
pop
fwait
les
fs
hlt
stos
mov
adc
dec
mov
mov
xor
xlat
xchg
roll
ljmp
mov
inc
aaa
imul
mov
ret
add
shlb
sbb
push
mov
sbb
pop
pop
loope
jmp
mov
std
jle
nop
lahf
add
jg
imulb
gs
or
xchg
sbbl
loop
aad
or
mov
outsb
push
xor
leave
icebp
xchg
lods
mov
add
andb
sub
mov
pop
fnstcw
punpckhwd
sub
cwtl
add
adc
popf
iret
and
push
hlt
mov
xlat
sub
mov
or
pop
mov
push
outsb
mov
inc
jecxz
sbb
jl
movl
add
iret
scas
xor
dec
pop
push
and
cltd
fsubrl
idivb
sbb
fisttpll
test
jne
jecxz
mov
push
mov
lret
push
inc
cltd
ja
mov
xor
xchg
fcoml
inc
sbb
xor
xchg
inc
mov
nop
fs
sub
add
mov
cltd
mov
add
inc
adc
inc
negb
int
xchg
mov
mov
out
jecxz
rolb
push
jmp
xlat
out
or
sub
push
fistpl
mov
mov
daa
sbb
xchg
and
xor
popa
push
pop
cmp
sbb
dec
aam
bound
and
shll
sbb
jbe
and
inc
je
sub
mov
xor
lret
jg
xor
or
and
into
push
jg,pt
dec
aam
cmp
data16
rorl
xor
ffree
or
fstl
mov
sbb
imul
mov
scas
inc
hlt
test
xor
hlt
ficompl
pop
aam
lods
mov
das
fsubr
loope
xchg
sub
push
js
mov
leave
inc
pop
mov
imul
xor
jmp
xchg
es
jle
or
lds
and
inc
mov
jle
xor
lods
loopne
and
daa
xchg
push
jecxz
dec
xchg
outsb
cmp
shrb
push
into
jp
or
scas
ficoml
and
push
scas
test
dec
popf
xor
cs
fsubrl
out
enter
jl
push
mov
mov
xchg
inc
test
lahf
push
inc
cmpsb
das
lock
imul
insl
ds
leave
dec
mov
cmpsl
sbb
dec
pop
loop
or
clc
push
mov
enter
out
cld
js
cmp
je
mov
mov
outsb
add
xchg
jp
bound
and
mov
cmpsb
xchg
push
out
xchg
cmp
loope
aad
mov
popa
shr
arpl
push
mov
sub
dec
jp
dec
jge
pop
rcr
sti
jbe
or
cmp
pop
scas
sarl
mov
dec
fidivs
gs
dec
lds
xchg
and
xor
pop
inc
cwtl
inc
fcoms
inc
sbb
sbb
std
das
mov
daa
arpl
jno
jmp
xchg
or
lcall
cmp
loop
or
insl
dec
cwtl
int3
insb
xchg
movsl
data16
cmp
inc
cmp
data16
lret
dec
mov
xor
aaa
insb
or
jbe
xchg
push
test
mov
mov
lods
mov
in
outsl
insl
stc
mov
ret
in
test
shll
loope
fwait
addr16
leave
add
add
push
xlat
in
pop
jnp
mov
xchg
scas
lret
mov
jo
das
jne
sarl
xchg
push
repz
in
cmp
repnz
adc
adc
pop
stc
fiadds
mov
ljmp
push
pop
cmpl
aad
sbb
sub
fldenv
push
add
or
jnp
ljmp
clc
xchg
rdmsr
adc
jp
and
add
movsl
clc
mov
mov
and
pop
dec
shll
mov
xor
and
mov
rcrb
mov
mov
cmpsl
and
ss
inc
out
ficoms
daa
cmp
gs
arpl
ja
ret
cmc
js
das
dec
pop
mov
xchg
mov
xlat
adc
addl
jge
mov
int
je
fstpl
data16
jbe
and
sbb
push
gs
int
push
jge
adc
mov
xchg
cmp
sbb
jno
push
scas
gs
movsb
xor
insb
and
sub
icebp
and
pop
out
iret
and
je
ja
and
testb
aaa
nop
sub
sub
xchg
js
jg
pandn
rcl
or
int3
das
es
inc
mov
and
repnz
xchg
lret
adc
mov
fisubl
movsb
push
negl
daa
int3
xor
xor
idiv
push
and
jno
int3
shlb
sarl
sub
push
scas
fsubs
fcmovbe
bound
cmp
pusha
mov
imul
enter
xor
outsl
inc
add
mov
and
jp
sub
js
jo
xchg
insl
out
inc
cmpsl
int3
nop
clc
fcmovb
xchg
sub
pushf
into
push
aad
jecxz
jnp
push
bound
fwait
lea
out
xor
cmp
out
pop
jp
roll
jnp
inc
xlat
repnz
div
jbe
push
pop
mov
scas
cmp
xor
test
pop
inc
cs
inc
out
dec
lods
pushf
xchg
xchg
test
lock
dec
push
cmpsb
sbb
or
xchg
dec
filds
out
cmp
lret
imul
xchg
xchg
test
jnp
and
sbb
lock
cli
les
ds
pop
sub
sbb
cltd
sub
adc
cmp
test
pop
ja
popf
inc
lret
shl
xchg
xlat
ljmp
rorl
cmc
stos
test
jmp
lcall
cmpl
or
pop
into
dec
xor
adc
scas
les
mov
pop
stos
xchg
xchg
mov
aad
xchg
mov
jbe
lea
sub
push
pop
out
mov
sbb
imul
mov
in
cmc
mov
or
rcrl
jmp
mulb
xchg
xchg
pop
jb
rol
pusha
push
fdivl
insb
lretw
nop
push
or
icebp
mov
push
xchg
add
mov
push
mov
add
xor
into
shrb
ud2
into
push
stos
or
gs
sbb
ljmp
rcrb
push
jle
jo
je
fwait
ds
nop
xchg
mov
adc
leave
sub
test
dec
or
inc
dec
enter
jmp
int3
push
lret
out
jp
aad
dec
mov
mov
stos
test
push
ss
rclb
insb
ret
adc
std
movsbl
loop
add
int3
or
aam
sbb
mov
jnp
cmp
xchg
push
cmp
xor
sub
inc
out
les
mov
cld
cmpsl
and
push
cld
xor
dec
add
pop
mov
xor
mov
outsl
test
xchg
int3
fisubl
mov
xchg
push
jp
sbb
std
push
addb
js
push
sahf
mov
mov
out
ret
cmp
cmc
cmpsb
push
fbld
jp
loop
and
fabs
dec
sbb
ljmp
mov
fstps
aaa
ret
sbb
add
cmp
push
subl
mov
push
iret
es
je
mov
or
imul
cwtl
mov
adc
push
sti
jns
and
in
dec
lcall
shl
cmpsb
mov
dec
fldt
pop
xchg
jge
cmp
int
call
sub
sub
push
sub
stc
xchg
inc
sbb
xor
lcall
out
jl
test
dec
and
test
xchg
adc
mov
nop
dec
pusha
dec
in
push
adc
gs
mov
aas
push
xchg
sbb
fdivrp
cmp
dec
push
call
pop
cmpl
lret
iret
fs
jno
jo
frstor
push
lret
into
iret
stos
push
repnz
mov
or
fbld
inc
xor
bound
dec
pop
add
cmp
ljmp
fdivr
inc
jg
sbb
jle
mov
fnstenv
loope
lods
lods
mov
imul
lods
or
std
jne
leave
sbb
sub
sub
sbb
or
xchg
mov
jbe
mov
jg
pushf
mov
and
cmp
pop
mov
in
xchg
das
sub
pop
lcall
movsb
fidivrs
and
xchg
data16
jne
adc
mov
sbb
xor
jmp
lock
outsl
sub
out
sub
adc
sub
fstpt
xchg
cmp
dec
inc
cwtl
jae
jmp
loop
mov
aas
mov
fnclex
mov
insl
mov
lods
lcall
lea
add
jp
lret
ucomiss
idivl
adcl
xlat
sti
mov
scas
push
mov
sub
mov
mov
cltd
mov
dec
jle
in
jmp
mov
sbb
nop
rcll
mov
push
in
or
push
push
jnp
sbb
enter
dec
insb
jle
sub
ja
dec
xor
sub
xchg
pop
iret
and
stos
push
pop
movsl
enter
adc
in
pop
in
push
and
push
popf
cltd
sbb
mov
jecxz
cld
pop
sbb
ja
aaa
shlb
ror
test
lret
pand
sub
inc
add
icebp
aas
mov
mov
iret
sbbl
sahf
ss
lret
leave
adc
scas
mov
dec
fisttpl
jg
xlat
pop
pop
out
sbb
jns
dec
dec
mov
popa
push
pusha
pop
les
add
lcall
sub
cli
xchg
out
lret
sub
test
imul
aas
xchg
and
inc
inc
mov
insl
sbb
push
inc
into
jb
mov
sar
jl
jb
repz
sub
shrb
mov
jne
movsb
add
mov
sbb
xchg
pop
sbb
repz
lahf
and
loopne
sahf
mov
cwtl
pop
push
push
jecxz
ret
jle
int3
ret
adc
movsl
iret
stos
push
call
mull
push
cmp
inc
push
mov
and
int3
stos
mov
mov
dec
imul
cmp
dec
pop
insb
out
mov
ret
lods
xchg
int3
mov
lret
out
xor
xor
shll
or
sbb
mov
xor
jo
mov
jne
das
dec
in
push
dec
mov
xchg
add
daa
lods
bound
jmp
roll
mov
dec
hlt
cmpsl
pusha
in
stc
leave
cmpsl
sbb
add
jmp
shlb
mov
jmp
dec
cltd
push
dec
cmp
fistl
in
mul
test
gs
mov
stos
adcl
lahf
andb
and
xor
xchg
jo
test
add
sub
mov
int3
fwait
jo
std
leave
push
sbb
arpl
loopne
xchg
add
fs
shl
repz
xor
mov
mov
negl
mov
out
pop
cmpsl
pop
cmpsl
push
sub
insl
xor
add
sar
mov
daa
xchg
pushl
add
add
rorl
int3
daa
outsb
lret
jp
adc
fs
cmp
lods
dec
push
lock
and
scas
push
xor
daa
add
in
out
call
mov
add
adc
cmp
iret
addr16
loop
fisubrs
fbstp
call
les
popa
sub
and
add
imul
xchg
cmc
cmp
dec
ret
inc
dec
insb
leave
mov
data16
daa
jne
sbb
cmp
out
mov
mov
jmp
loopne
dec
xchg
imul
pop
enter
fstps
jae
sbb
add
enter
push
push
in
xchg
sbb
out
pushf
out
sbb
cmpsb
sbb
jne
cmp
dec
sbb
push
sbb
mov
je
cld
xchg
xorb
sbb
pusha
in
outsb
push
mov
in
mov
add
pop
enter
test
jl
mov
push
or
bound
in
add
mov
cmp
mov
mov
or
and
mov
loope
push
ss
lea
stc
cli
lret
and
pusha
mov
pusha
jae
cmpsl
mov
and
mov
lcall
sub
push
imul
sbb
pop
dec
dec
call
cmp
mov
ret
addl
and
fdivl
adc
into
movsl
mov
cmp
nop
addb
into
pop
sub
dec
lcall
fstpt
in
loopne
nop
incb
push
jae
mov
jbe
and
and
outsl
dec
or
faddl
ds
push
xchg
dec
fnsave
or
outsl
hlt
add
stc
pop
nop
je
pop
imul
lods
outsb
ret
inc
and
fcomi
mulb
shll
dec
lods
int
xchg
pop
sti
mov
inc
movsb
sarb
pop
not
mov
jle
in
mul
mov
mov
loope
in
sub
push
mov
je
inc
andb
jo
xchg
mov
mov
pop
popf
jnp
ret
fbld
mov
sbb
leave
xor
test
sbb
sbb
fsubrp
nop
pop
je
pop
push
adc
jo
dec
mov
xchg
aad
xor
icebp
pusha
shlb
das
lcall
orl
or
or
pop
dec
inc
xor
pusha
and
push
add
pop
and
dec
push
lret
mov
cmpsl
jo
fcmovnu
lds
push
call
dec
add
loope
insb
rsqrtps
jbe
sbbb
cmp
cld
add
repz
push
jge
jbe
cltd
pop
sbb
sbb
xchg
push
add
xchg
push
mov
lods
pusha
and
push
insl
or
jo
mov
or
push
iret
jae
fidivl
xor
jb
mov
jae
cwtl
jnp
lods
les
mov
hlt
ds
inc
inc
daa
scas
sub
push
fiaddl
icebp
ljmp
insl
mov
jmp
cmp
dec
xchg
fisttpl
sbb
pop
mov
adc
cli
or
sbb
inc
add
jo
or
in
aad
sub
push
xchg
data16
je
xlat
inc
sub
mov
test
ret
push
cmp
mov
add
mov
cmp
outsb
movb
sti
mov
cli
mov
outsl
and
shl
cmp
add
int3
or
mov
push
roll
fwait
mov
stos
jg
add
mov
nop
jb
stos
xor
ds
inc
jl
jne
lahf
arpl
shll
lods
test
mov
xor
sbb
js
adc
dec
mov
int
sub
mov
ss
inc
les
test
test
inc
pop
sub
ljmp
nop
enter
and
push
xor
inc
shl
mov
cs
push
or
out
lods
push
mov
cwtl
mov
imul
jnp
dec
lahf
scas
push
push
fsts
fldt
mov
call
outsl
popa
js
pop
popl
xor
icebp
mov
call
xchg
arpl
inc
mov
ret
repz
in
and
push
pop
cmp
mov
out
insb
and
cs
test
in
cltd
fs
lcall
add
shll
sbb
pusha
cmpsb
cmp
das
insb
dec
cmp
or
adc
cld
xlat
filds
sbb
test
pushf
lds
and
scas
gs
mov
mov
or
mov
lcall
lahf
hlt
stc
dec
dec
arpl
fldcw
mov
mov
jecxz
dec
jecxz
movsl
cwtl
leave
faddp
jmp
out
cli
xor
push
and
fdivs
inc
sub
jnp
sbb
cmp
loop
scas
test
pop
dec
inc
xor
pop
out
idiv
mov
sbb
loopne
push
enter
bound
mul
add
inc
mov
int
pop
cltd
cli
adc
aam
in
loop,pn
rol
fs
pop
mov
lret
or
negl
xchg
lods
ret
dec
insb
mov
cmpsl
pop
imul
sub
push
jns
cld
pop
pop
out
inc
sbb
test
jp
outsl
add
icebp
ficoms
push
add
inc
cld
mov
dec
cmc
lret
xor
pop
sub
add
push
out
loop
int
cli
pushf
xchg
pop
pop
repz
dec
cltd
outsl
dec
cmpsb
mov
xor
sub
dec
pop
je
mov
es
repnz
xchg
xlat
mov
xor
xchg
xchg
orb
lock
pop
and
push
fldl
pop
sbb
fcomps
ljmp
adc
lret
imul
push
bound
jae
lods
in
push
fwait
xchg
ja
cmp
iret
xchg
pop
fiaddl
cmp
mov
lret
cmp
adc
lret
aaa
outsl
cs
and
fyl2x
mov
out
scas
mov
mov
rcl
push
lods
sahf
pop
mov
in
jg
jbe
cmp
out
mov
jns
pop
ret
dec
hlt
jno
or
xchg
push
xor
fistpl
dec
je
fsubl
shll
inc
adc
push
jbe
push
mov
sbbl
inc
shlb
push
or
mov
iret
daa
jg
icebp
sub
adcb
push
fidivrl
cmp
lods
aam
outsb
fcompl
pop
pop
js
jmp
xchg
loop
mov
and
mov
and
cmc
cmp
in
pop
adc
pop
ja
dec
mov
pushf
mov
das
inc
mov
out
inc
lock
cwtl
dec
test
rcll
dec
push
scas
aas
outsl
mov
or
clc
mov
and
inc
test
movsb
cmp
push
out
dec
mov
cmc
jp
lods
xor
in
jge
xchg
add
repnz
negl
or
in
insb
push
into
lret
jno
int
mov
sbb
roll
pop
sti
sbb
cmpsb
cltd
in
xor
fwait
ret
or
and
jb
sbb
cli
inc
inc
data16
or
inc
sub
adc
lret
push
pop
push
idivl
dec
fisubl
fwait
jbe
into
loop
pop
iret
cld
push
ja
rorl
repnz
sbb
les
in
and
mov
adc
sbb
push
sub
ds
in
sti
cmpsl
cmp
test
jnp
stos
dec
lds
add
or
sbb
sub
mov
bound
xchg
aaa
xchg
dec
dec
jb
jle
jecxz
cmp
push
cmp
dec
sbb
aaa
test
push
ds
outsl
cwtl
cmp
mov
popf
push
xor
dec
sahf
insl
push
les
rcrl
push
fs
fadd
data16
lret
jo
testl
fidivrl
push
push
push
popa
xchg
test
rcll
and
mov
loope
mov
gs
sahf
and
mov
test
aas
mov
imul
mov
test
or
push
int3
mov
daa
mov
inc
inc
clc
inc
les
inc
in
jl
sbb
repnz
test
mov
and
lods
mov
ds
push
xor
ja
add
cmpsl
cmpsl
popf
xchg
ret
dec
inc
and
call
icebp
xor
dec
lods
dec
call
pop
cmp
pop
std
sbb
les
jbe
adc
pop
insb
push
lahf
mov
dec
pop
nop
xlat
pop
ret
push
pop
pusha
sarb
into
js
test
daa
mov
xchg
call
sbb
out
aas
xlat
mov
add
sbb
mov
dec
arpl
imulb
sbb
bound
jo
ret
jns
sub
mov
rorb
notl
test
adc
push
pop
fstp
insl
lret
mov
sbb
mov
xor
push
jns
push
pop
pop
sti
inc
sbb
scas
int
mov
std
fadd
rorl
ss
stos
les
fstl
mov
loop
mov
mov
sbb
cmp
jle
cmpsb
mov
daa
cmp
sbb
and
test
in
pop
mov
clc
stos
and
adcl
icebp
jbe
lahf
lahf
dec
sti
dec
std
lock
dec
sub
dec
cmp
ja
inc
mov
insl
nop
in
stos
dec
das
mov
jecxz
data16
and
jns
aad
int
sbb
push
out
xor
xor
push
jl
xchg
shl
jmp
push
push
jno
push
lock
jo
pop
out
frstor
dec
fldenv
stos
mov
sbb
add
jb
pop
test
and
push
dec
jle
adc
jmp
cmp
jns
lea
addr16
dec
stos
dec
lea
cmp
out
xlat
sbb
jno
scas
sub
pop
or
nop
sub
lods
test
jno
pop
test
or
xchg
push
nop
fstpl
mov
fwait
iret
shrl
jp
pop
add
xchg
jno
mov
add
repz
imulb
jg
dec
divb
cmp
add
push
inc
outsl
push
xor
jns
cmp
movsl
out
xlat
xor
shll
or
lret
mov
add
dec
dec
pop
test
mov
popa
ret
in
jp
dec
sbbl
rolb
lock
das
xchg
les
add
add
pop
inc
call
cmp
mov
call
fsubrp
in
nop
and
mov
adc
dec
xchg
mov
add
jns
jne
shrl
loop
cmp
cltd
cmp
dec
addr16
enter
ret
setl
xor
loopne
ret
mov
jecxz
jp
out
sbb
mov
jns
loope
cmc
call
xor
cmp
sbb
mov
mov
lret
push
mov
ss
test
out
into
inc
add
cmp
sub
jnp
lcall
adc
jns
insb
rorl
mov
lret
test
dec
or
jge
pop
in
int3
adc
xchg
psllq
mov
push
rolb
test
xlat
or
mov
or
fstl
mov
hlt
pop
xchg
push
sbb
js
sbb
add
ds
jp
mov
pop
jl
movsb
jno
jg
and
outsb
sub
cld
pop
mov
in
test
xchg
cmc
and
cmc
push
stos
cltd
jl
int3
pusha
int
aam
dec
lret
mov
mov
ret
mov
sbb
into
insl
mov
fists
push
add
add
mov
shlb
std
lret
mov
cmc
inc
or
imul
imulb
xor
sti
dec
fdivs
gs
lahf
stc
imul
ss
xchg
scas
push
jns
movl
lea
in
xor
push
mov
adc
mov
test
bound
pop
jno
push
stos
mov
sbb
xor
inc
stos
repnz
inc
xor
cltd
mov
fisubrs
adc
rolb
or
add
sti
sti
inc
adc
rorl
out
mov
pop
popa
sti
fs
mov
lret
inc
jne
in
rcl
inc
scas
push
xor
aaa
pop
nop
into
mov
pusha
cmp
jmp
mov
arpl
cmpsl
stos
adc
std
push
test
ljmp
rcr
sub
cli
dec
xchg
in
mov
icebp
lods
dec
or
loopne
adc
fbld
pop
mov
aas
and
mov
sbb
inc
inc
data16
fimull
out
out
push
fsubrs
jle
xchg
add
js
fstps
iret
subl
mov
nop
dec
and
mov
add
scas
adc
data16
cmp
imul
jp
pop
adc
es
jne
mov
jle
push
lret
pop
mov
mov
out
test
outsb
outsb
stos
dec
sti
cwtl
sbb
nop
rcrl
mov
mov
xor
fnstcw
mov
xchg
ret
xchg
sub
mov
inc
mov
andl
and
in
iret
sbb
mov
push
mov
imul
mov
sbb
adc
mov
lcall
mov
sbb
mov
lea
adc
push
rcl
cmpsl
cmpl
mov
repnz
cmp
mov
dec
scas
and
mov
lcall
dec
cli
out
mov
mov
xor
imul
int
imul
pop
cmpsb
pop
push
pusha
fisubs
repz
sub
push
mov
pop
mov
adc
xor
sbb
repnz
in
int3
mov
or
inc
mov
dec
imul
test
shll
clc
push
push
sbb
out
mov
push
cmp
or
inc
fisubl
push
fs
sub
test
sub
cmpsl
jmp
push
shrl
aam
in
sub
push
mov
jge
push
inc
in
sbb
sbb
mov
mov
adcl
cmc
dec
movq
int
addb
mov
pop
cmpsb
add
or
mov
add
pop
fldl
xor
bound
sbb
outsb
imul
cmc
cs
scas
mov
push
push
xor
push
outsl
pop
ret
adc
sub
xlat
cld
enter
popa
imul
loop
bound
inc
out
pop
aad
xchg
sbb
lods
push
mov
neg
push
push
mov
hlt
adc
push
jecxz
in
lods
add
cltd
mov
data16
lahf
sti
mov
and
stos
js
mov
movsb
test
insl
andb
mov
push
lock
popf
xor
fisubrl
xor
or
les
out
stos
fs
adc
dec
adc
adc
icebp
pop
fwait
push
mov
filds
mov
js
pop
push
push
jg
pop
add
adc
pop
lret
adc
xchg
xor
sub
jb
and
jmp
bound
cmpsb
xor
shrb
jp
xchg
inc
sbbl
push
inc
jecxz
test
insb
inc
jl
fadd
cltd
jmp
not
les
sbb
daa
mov
jl
repnz
inc
push
xor
jmp
fistl
mov
xchg
mov
movsb
push
ret
dec
adc
test
shl
pop
or
mov
cmp
iret
push
pusha
cmp
stc
xor
push
push
pusha
imul
dec
adc
inc
push
sbb
fisubrl
push
push
mov
out
mov
adc
jl
xchg
jae
std
add
pop
pop
jecxz
push
mov
or
mov
aaa
xchg
pop
ficompl
enter
dec
push
ss
sbb
notb
adc
or
push
or
outsl
rcrl
inc
into
iret
scas
popf
jae
stc
mov
aad
sbb
mov
inc
and
sbb
mov
pop
mov
mov
movsb
mov
test
and
jnp
ret
xchg
rcrb
xchg
jns
out
insl
sbb
xchg
pop
out
mov
shl
push
push
mov
in
lock
int3
sbb
push
out
and
lcall
dec
mov
fs
fs
out
iret
adc
fnstcw
sub
jle
aam
pop
ja
bound
jae
in
mov
cmp
xchg
push
rol
pop
or
jnp
data16
nop
dec
add
add
insl
jg
aad
jne
inc
add
sahf
push
lret
xor
mov
cmp
mov
aad
stos
mov
mov
mov
jns
push
inc
add
shlb
negl
mov
cli
lods
mov
pop
mov
cmp
daa
jmp
stos
test
xchg
mov
pop
push
jle
icebp
outsl
add
dec
push
mov
push
jmp
sbb
cwtl
and
push
lods
sub
out
testb
lret
test
inc
test
adc
pop
sahf
gs
scas
and
mov
jl
mov
testb
out
inc
inc
lods
ja
mov
repz
hlt
push
repz
jbe
pop
repz
xchg
arpl
loop
dec
sbb
and
or
in
test
cmp
inc
imul
in
xchg
xchg
xchg
out
fldenv
pushf
xchg
or
add
lds
cmp
mov
imul
xor
dec
or
mov
and
repnz
mov
mov
mov
push
sub
adc
imull
fisttpll
comiss
sbb
dec
pushf
inc
cmp
adc
jl,pt
jnp
cmp
push
push
paddq
dec
push
xor
mov
jg
xchg
scas
mov
ret
xchg
fmuls
sbb
mov
or
testl
mov
inc
push
adc
dec
popf
and
addr16
add
push
mov
pop
push
push
mov
shlb
mov
jecxz
dec
ds
or
jno
add
pushl
daa
dec
sub
cmp
cltd
dec
cmp
roll
jae
jno
pop
and
and
scas
mov
jo
or
mov
popa
not
xchg
mov
pushf
inc
fisubrl
fs
dec
add
test
pop
xorl
adc
enter
xchg
sub
sbb
mov
insl
jno
inc
insb
dec
add
rorl
cli
xchg
mov
into
stos
test
xchg
xchg
aaa
cmp
std
jb
scas
inc
aam
ret
pop
dec
or
jno
aas
in
popa
lds
inc
ret
movsb
mov
xor
pop
cmp
add
in
andb
out
movl
icebp
and
xchg
outsl
adc
jg
in
jnp
shlb
mov
in
jg
pop
mov
lcall
push
and
inc
sti
lret
mov
pop
fwait
out
les
pop
loopne
xor
pop
repnz
or
mov
or
shlb
mov
sub
add
arpl
inc
inc
imul
ret
iret
push
dec
stos
xorb
jle
insb
xor
pop
aas
mov
test
or
enter
jp
in
stc
sub
push
out
or
into
mov
addr16
mov
mov
sub
pop
out
sbb
ja
filds
jns
imul
das
test
lahf
jae
fsubrs
adc
subb
sbb
ret
mov
or
loope
popl
dec
xchg
and
xchg
movsb
pusha
cli
popf
lods
in
jmp
stos
and
daa
pop
add
testl
mov
pushf
cmc
test
and
test
mov
mov
mov
xor
rdmsr
push
sti
mov
adc
lods
out
stos
das
loop
xor
repnz
pop
stos
mov
imul
or
mov
mov
lods
xor
push
sub
arpl
jb
xchg
push
inc
xchg
lahf
fldenv
adc
cmp
lahf
xchg
inc
jge
ret
jno
inc
cmp
daa
sbb
sbb
test
dec
movsl
movsl
mov
das
rorb
mov
xchg
xor
mov
ficoms
add
es
testb
lahf
or
mov
out
std
sbb
or
mov
jns
fwait
out
push
sarl
fwait
pushf
push
in
das
cmp
xchg
adc
shr
and
mov
jae
popf
addl
cltd
movsl
dec
das
out
dec
pop
ficomps
cmp
jmp
notb
insb
inc
call
sbb
inc
orb
outsl
imul
push
in
fmull
cmp
sub
cmp
adc
enter
xchg
xlat
aam
or
ljmp
mov
pop
inc
call
lods
out
push
push
inc
rcll
aas
stc
dec
jb,pn
dec
rclb
mov
add
cld
sub
and
jmp
sbb
and
cmp
mov
xor
mov
add
shrl
adc
dec
mov
push
mov
jns
or
inc
iret
mov
loop
pop
or
enter
scas
scas
inc
loope
sub
scas
in
scas
sbb
test
cmpsb
jo
sbb
and
ret
cmpsb
xlat
inc
dec
jge
cmpl
stos
mov
sub
daa
add
out
mov
lock
repnz
xchg
add
mov
sahf
and
and
fldl
xchg
lea
shl
fisubl
cmpl
lds
push
mov
sbb
test
vmread
mov
divb
and
push
dec
lods
inc
subl
xorl
in
and
movsb
inc
std
dec
cs
lahf
push
or
xchg
shll
imul
divb
les
stc
dec
lods
sbb
pop
das
mov
shlb
lock
les
mov
stc
ds
call
pushl
push
jno
int3
xchg
add
dec
enter
jl
dec
inc
dec
pop
fs
and
dec
sbb
int3
mov
dec
cmpsl
mov
loop
stos
adcl
aad
stos
dec
loop
xor
pop
add
add
ret
mov
adcb
push
fisubl
fcmovne
xchg
push
cmp
addr16
cld
mov
mov
add
scas
adc
bound
mov
pop
loopne
add
add
test
dec
es
and
call
lock
mov
cli
test
mov
cmpl
mov
sbb
sub
les
xor
lret
jae
fbld
mov
imul
add
ret
xor
sahf
nop
or
lods
inc
pop
insb
jns
push
push
cmpsl
push
sub
pop
dec
add
cs
jne
inc
push
adc
inc
pop
in
clc
sbb
sbb
xor
test
stc
movsl
in
xchg
mov
xchg
je
into
into
push
fdivrl
xor
lahf
inc
scas
push
lahf
jbe
lret
push
mov
inc
xchg
push
or
or
dec
repnz
cli
fldcw
xor
cwtl
add
push
dec
movb
aam
jp
into
jp
jbe
daa
cmp
add
jg
lret
inc
and
es
repnz
and
cmp
in
lods
inc
shrl
jg
scas
sbb
cmp
adc
loope
mov
jne
sbb
push
dec
inc
lcall
push
lock
inc
packuswb
je
pop
push
dec
jp
xchg
push
popa
cli
in
icebp
insb
into
cmp
cld
ss
jmp
addl
xor
dec
insb
aad
aas
push
fldenv
add
or
jno
stos
in
sbb
rorl
dec
lcall
or
movsl
int
jnp
xor
popa
dec
aas
fcmovnbe
in
rolb
ja
xor
test
pop
rcll
loopne
in
fwait
sub
mov
push
std
inc
sub
cwtl
xor
in
das
dec
dec
call
enter
mov
sbb
fnstsw
add
pop
orb
pop
jmp
repnz
jbe
mov
jle
xchg
out
hlt
iret
xor
loope
pop
in
pop
adc
adc
mov
test
pop
lods
sub
imul
jns
or
shr
mov
xor
adc
insb
ljmp
shr
sbb
xor
arpl
adc
arpl
mov
mov
jmp
mov
popf
divb
jbe
outsl
lea
sbb
jmp
adc
cmp
or
inc
ficompl
jne
sbb
push
ja
in
xor
push
jp
into
cmp
popa
mov
xchg
mov
cld
rorb
outsb
cmp
pop
adc
adc
push
bnd
xor
xor
inc
fcomp
push
adc
push
mov
and
sti
mov
xchg
mov
lret
add
xchg
push
test
cld
inc
mov
insb
pop
popf
xchg
clc
jb
cmp
and
pop
out
xlat
dec
pop
push
mov
and
jecxz
popa
sub
out
mov
push
pop
dec
mov
add
push
enter
mov
adc
rolb
xor
push
out
inc
and
inc
fstpl
sarb
mov
push
mov
mov
dec
lods
sub
push
push
push
mov
je
lods
roll
lods
xchg
adc
xchg
dec
jbe
aaa
cmp
out
mov
test
bound
push
pop
cmp
fisubs
add
mov
jb
addr16
enter
adc
push
xchg
cmp
shll
movsb
mov
cmp
pop
lcall
flds
or
mov
sbb
pop
ja
mov
stos
push
jne
mov
filds
pop
imul
push
pusha
repz
jl
sbb
test
dec
call
push
inc
lret
int3
lret
add
or
pop
sub
push
pop
xchg
adc
sbb
mov
aam
shl
es
cs
insl
stc
push
lcall
cli
enter
xchg
das
insl
int
mov
movsb
fsubrp
jmp
fldl
xor
ljmp
es
mov
mov
jmp
popf
mov
mov
iret
pop
xor
hlt
call
fs
xchg
sub
pop
pop
es
icebp
jnp
jg
rolb
push
add
mov
push
inc
pop
xchg
shr
ja
xor
cmpsl
push
pusha
xorb
jmp
sub
mov
and
fadd
js
xchg
loope
ds
xor
sub
insl
pop
mov
ss
addr16
outsl
mov
mov
cmp
mov
lods
orl
pop
outsl
jae
int
stos
mov
stos
loop
lahf
and
shl
pop
pop
call
fisttpl
movsl
push
std
in
lds
or
fnsave
movsl
push
or
jg
mov
cwtl
mov
jbe
hlt
or
dec
sarb
jg
cwtl
mov
ljmp
xchg
push
jge
pop
cmpsl
test
call
push
sbb
adc
cli
inc
pusha
xor
sub
adc
cmpsb
cmp
addr16
jp
testb
mov
mov
sub
or
push
jge
pop
pop
jmp
add
mov
mov
lret
jecxz
stos
sub
das
pusha
cmpsl
pusha
pop
adc
leave
mov
mov
add
das
xor
sbb
cltd
icebp
test
call
mov
data16
push
push
js
pop
pop
lahf
mov
push
stos
imul
mov
cmp
test
or
xor
jecxz
cmpsb
in
xchg
mov
js
fcmovu
add
sub
testl
adcb
out
adc
imul
cmp
dec
pop
cld
lahf
test
add
add
sbb
mov
in
mov
jnp
mov
inc
inc
rcrb
je
mov
loope
repz
sub
outsb
cs
lahf
xchg
in
cli
mov
iret
int3
scas
test
xor
fistpll
aaa
dec
inc
js
push
orl
lock
jnp
mov
lds
shl
mov
daa
dec
ror
sub
test
push
pop
divl
jmp
fimuls
add
xlat
lds
aas
push
cli
mov
sti
sbb
sbb
lock
dec
fs
add
and
and
int3
scas
in
jno
pop
pop
aaa
fninit
pop
sbb
lock
mov
mov
outsb
and
int3
jp
jno
ds
push
or
cmp
ss
push
add
add
dec
or
fisttpll
adc
push
mul
or
cmpsl
pop
jns
mov
lcall
or
inc
je
xchg
adc
popf
cmp
mov
or
cmp
scas
jecxz
cmp
loop
adc
jo
sub
es
and
ret
dec
into
or
pop
inc
imul
inc
inc
loopne
cmp
sub
lret
push
mov
lds
pusha
pop
leave
movsl
mov
jns
mov
mov
xchg
scas
or
pop
dec
adcl
aad
xchg
and
xchg
mov
mov
add
xchg
jnp
jmp
clc
mov
ja
enter
xor
rcr
mov
adc
and
popf
vucomiss
pushf
or
mov
xor
adc
inc
loopne
push
mov
mov
in
sahf
and
push
xor
or
sbb
push
xor
push
cli
dec
pop
insb
push
cmp
mov
into
and
and
mov
xchg
fstp
movsb
out
push
push
adc
aas
xchg
xor
in
mov
xor
xchg
shll
insl
ret
cmp
or
loope
mov
cs
inc
iret
aad
mov
gs
nop
cli
inc
adc
mov
push
rclb
in
push
cmp
stc
inc
mov
push
mov
scas
addr16
ror
addl
jecxz
dec
inc
mov
cli
push
mov
fnsave
popf
mov
pop
insb
cmp
jb
ljmp
js
lds
imul
sub
or
jbe
rclb
jbe
cli
mov
add
dec
sub
stos
pop
sub
test
mov
mov
push
cli
lahf
jno
fmulp
xor
or
xor
test
push
addr16
into
jmp
dec
in
pop
sub
mov
xlat
pop
cmc
ds
cs
push
push
dec
aam
adc
jle
xor
xor
fistps
or
pop
fnstenv
mov
jbe
cwtl
lds
fs
loopne
xchg
movsl
jp
jnp
mov
cmp
jnp
add
stos
jnp
gs
sarl
xchg
inc
adc
xchg
ljmp
lock
sti
push
push
ja
push
les
jge,pn
cmp
push
imul
fwait
call
pop
jno
fmull
je
pop
inc
mov
mov
sub
and
icebp
mov
daa
pop
jl
daa
test
lahf
jb
pop
je
in
xchg
lods
push
xchg
daa
loop
test
push
mov
add
insl
inc
outsl
adc
cmp
out
lret
les
lret
push
pop
inc
lods
sbb
lds
sbb
inc
sub
pop
xor
test
cmp
xor
lds
clc
jecxz
movsb
push
push
add
mov
stc
mov
jg
xor
mov
sub
fsubrs
out
jecxz
lahf
lods
adc
ds
jmp
loope
dec
mov
in
jp
call
test
inc
test
or
pop
lock
movsl
jp
pop
lret
fcompl
jmp
in
setb
sbb
andl
cmp
popa
mov
pushw
dec
int3
aam
pop
faddl
imul
pop
pop
cmpsl
into
bound
pop
and
scas
je
movsb
xchg
ret
inc
sahf
shrl
test
out
cmp
movsb
pop
loope
push
or
pop
push
aam
adc
dec
or
insb
mov
pop
int
jno
mov
dec
inc
scas
arpl
and
push
cmp
ret
jb
lret
lahf
gs
mov
mov
dec
dec
in
movsl
gs
and
es
ficomps
cltd
mov
push
push
dec
imull
fwait
cmpsb
leave
xlat
cmp
gs
sbb
push
or
arpl
fs
incb
rol
scas
arpl
je
es
mov
or
xchg
mov
or
xor
je
mov
fiaddl
pop
cmp
fisubrl
jo
fbstp
aaa
into
lods
cmc
out
cmp
fdivrl
test
inc
ss
adc
aaa
fisubs
mov
pop
xor
mov
test
stos
mov
push
fdivr
push
negb
insb
adc
and
adc
push
jb
test
ss
cmp
jge
movsl
adc
ss
insl
jne
cmpsl
mov
insb
pop
push
mov
dec
xchg
xor
pop
stc
jle
out
jne
shl
aam
push
mov
mov
lods
pop
adc
xor
xchg
leave
shll
sbb
pushf
pop
sarl
sahf
or
inc
mov
jns
movsl
test
sahf
dec
pop
sub
xchg
xor
dec
rol
and
mov
push
push
mov
nop
hlt
adc
mov
jge
js
mov
xor
cmp
adc
and
outsb
xchg
sub
cltd
popa
pop
push
mov
lret
jp
sub
out
int3
andl
lahf
sarb
mov
mov
push
pmaddwd
add
adc
je
mov
pop
cld
cmpsb
lods
nop
fdivs
cwtl
sub
lea
mov
cld
push
jno
jae
mov
fiaddl
mov
lret
nop
dec
sbb
xchg
stc
sub
pop
push
jecxz
addl
push
xlat
push
push
xchg
adc
cmpsl
insl
pop
iret
xchg
jne
pop
add
into
in
test
push
mov
not
jmp
call
popf
and
test
pop
push
pushf
xor
jecxz
push
lahf
in
outsl
cmp
lcall
mov
or
fwait
mov
mov
push
jae
pop
imull
push
mov
int3
and
hlt
sub
add
cmc
xchg
cmp
xchg
mov
pusha
or
mov
xrelease
pop
sub
pop
repnz
test
push
outsl
test
movsl
fwait
jl
xor
test
cmp
call
inc
jl
aad
pop
and
pushf
lcall
repnz
mov
sbb
mov
mov
repz
dec
popf
sbb
js
push
adc
lret
push
and
out
cmpsb
jp
mov
popa
ficoms
sbb
sbb
xchg
add
out
orl
sub
pop
cwtl
jbe
das
arpl
jo
xchg
jae
adc
jmp
cld
xor
fdivrl
mov
test
scas
jg
cmp
outsb
outsl
sub
cmp
fistps
in
icebp
arpl
or
pop
decb
js
testb
xchg
add
xchg
sbb
cmp
jp
mov
push
scas
aad
ror
mov
xor
jno
pushf
push
stos
or
and
lock
mov
jne
inc
mov
pop
pop
and
mov
mov
adc
xlat
pop
xchg
and
mov
ror
or
pop
mov
ds
mov
negb
out
cmp
add
std
inc
fcoml
shll
jbe
jae
jl
adc
je
nop
pop
pop
aad
cmpsl
insl
shrl
inc
mov
adc
jnp
out
pop
push
jp
les
jbe
xchg
addr16
add
test
fiadds
nop
int
xchg
hlt
and
and
cmpsl
call
xor
mov
into
xchg
test
cld
ja
repz
sbb
and
xchg
jg
rclb
pop
into
add
mov
lea
ss
leave
xlat
into
jne
add
sahf
xchg
sub
es
push
incb
jg
xor
jmp
sub
xchg
loope
addr16
push
xlat
pop
subl
mov
pop
xorb
jmp
pop
leave
jo
out
cmp
mov
xchg
cmp
int
test
mov
xlat
jecxz
inc
mov
and
mov
push
sub
jns
out
add
push
cmp
inc
roll
adc
gs
xchg
data16
dec
aaa
mov
ret
inc
cmp
xchg
push
jecxz
push
fs
ficoms
js
int
adc
sub
fcompl
fldcw
testl
fwait
and
xchg
imul
mov
fwait
inc
fwait
jb
repz
lcall
stc
sub
incl
popw
clc
inc
sbb
insl
sbb
mov
add
stos
lcall
and
daa
or
shrb
lcall
pushl
mov
mov
mov
fs
int3
xor
and
mov
mov
adc
mov
cmp
insb
jp
iret
fidivrl
inc
fs
dec
sub
dec
jno
andl
in
push
dec
and
js
and
adc
mov
inc
enter
cmpsb
or
cli
dec
xchg
mov
jb
jecxz
arpl
fwait
mov
mov
aam
vpminub
pop
clc
or
andb
out
aam
rolb
movsb
test
lods
mov
sub
cmp
jecxz
sbb
in
jge
cwtl
int3
adc
sub
push
push
stos
in
mov
lds
movsl
addr16
pop
loope
imul
mov
adc
xchg
cltd
lahf
push
int
cmp
fistpll
lcall
push
leave
xor
jp
das
add
filds
cltd
add
sti
cmpsl
rcrl
mov
add
pop
sbb
test
test
data16
or
sbb
int3
hlt
push
push
mov
jno
xor
std
inc
ja
cmp
rcll
inc
fsts
mov
or
fwait
int
xchg
jbe
jle
ret
imul
or
pop
mov
test
fidivs
ljmp
fs
mov
jb
cmpsl
sub
push
cmc
xchg
movsl
mov
adc
mov
int
mov
mov
popf
into
pop
mov
rorl
loopne
adc
cli
movsl
sub
loop
scas
lods
xchg
push
add
sarb
pop
rorl
clc
jmp
mov
sti
mov
mov
xchg
and
icebp
pop
stos
into
mov
adc
cmp
stc
test
mov
sub
repnz
gs
cld
outsb
subb
les
jecxz
xor
das
push
sbb
out
jp
dec
clc
dec
ja
inc
cmpsl
jp
push
in
jae
jnp
push
jecxz
sub
mov
inc
sub
pop
lcall
cld
mov
or
lahf
push
cmpsl
jb
sbb
push
pop
sarb
andl
rcrl
cs
mov
sub
jmp
in
scas
xor
in
jg
jae
mov
push
into
orl
push
movsl
mov
clc
movsb
dec
fldenv
push
jno
jl
xor
dec
pop
das
cmp
sub
mov
movsl
xchg
sbbb
sbb
mov
add
pop
arpl
bound
filds
pop
pusha
in
cmpb
cmpsl
jle
mov
pop
jns
push
xlat
push
pop
push
xchg
jbe
rcr
lret
hlt
cwtl
jo
and
pop
push
sub
mov
jl
cmp
stc
xor
pop
int
mov
iret
sub
jns
or
cmpb
rol
arpl
mov
sbb
inc
xor
test
popf
sub
into
lret
cmp
enter
std
fcomps
xchg
xor
mov
aam
push
mov
mov
adc
and
nop
add
test
insb
inc
push
push
or
je
mov
or
aam
mov
cmp
cmp
xchg
fildl
ficoml
ja
jge
scas
je
ss
jl
rcr
mov
and
mov
bound
add
fwait
sbb
shll
or
mov
dec
mov
scas
xrelease
hlt
adc
xchg
fwait
lds
loopne
lods
pop
out
inc
xchg
xor
mov
dec
xorl
fadd
sub
jns
mov
sbb
add
lea
sbb
xlat
pop
xchg
inc
in
jg
cltd
jb
mov
andb
movl
xchg
and
lods
mov
push
mov
into
mov
and
mov
mov
lahf
addl
pop
cmp
pop
pand
inc
xor
rcrb
clc
stc
movsl
or
ret
shll
divb
jl
aad
cwtl
inc
dec
mov
int
pop
xchg
hlt
iret
adc
inc
incb
dec
inc
or
pop
and
sbb
in
lock
sahf
lcall
loope
insb
test
lea
inc
testl
mov
or
in
imul
and
jns
out
add
cmc
inc
insl
jmp
jl
pop
dec
mov
pusha
and
cmp
inc
jle
push
mov
ss
add
lret
mov
mov
sbbb
mov
insb
mov
std
mov
push
fcoms
adcl
scas
data16
sbb
jo
mov
push
aaa
mov
loope
pop
xor
aas
push
scas
scas
out
mov
push
lret
dec
fst
sbb
pop
aam
rcll
je
xlat
lret
cmp
shrl
adc
add
mov
aaa
pop
mov
and
dec
mov
fcomps
repnz
in
sbbl
scas
dec
std
inc
hlt
mov
mov
and
into
fwait
shrl
mov
dec
out
cmp
sub
js
addr16
add
fwait
jnp
push
mov
scas
sahf
push
mov
sbb
sbb
mov
lret
mov
rcl
lret
xor
outsl
fmull
out
js
test
xor
aad
xchg
addl
cltd
dec
pop
repz
mov
ds
scas
pop
insl
adc
aad
jmp
and
sbb
sub
andb
sub
rolb
mov
lods
mov
xchg
jl
lret
addr16
movsb
arpl
mov
mov
jecxz
aad
xor
xchg
push
aas
pop
int
test
jnp
addr16
jo
xchg
xor
push
sbb
aaa
mov
mov
je
xor
jp
dec
mov
leave
shrb
push
xchg
adc
xchg
jmp
loope
insb
sbb
je
cli
cltd
fsubl
int
adc
pop
and
mov
pop
popa
sub
les
insl
inc
stc
jp
pop
outsl
mov
inc
sub
loopne
in
inc
push
and
xchg
dec
mov
shlb
mov
imul
arpl
and
jg
or
sub
icebp
pop
mov
pop
add
mov
std
bound
out
push
faddp
jmp
xor
xchg
sar
mov
dec
dec
inc
pop
push
pop
test
fidivrs
out
dec
addr16
and
sub
out
negl
shr
push
loope
enter
stc
mov
lcall
testb
aaa
jmp
inc
je
in
clc
daa
sub
mov
jl
mov
sub
out
popf
test
and
inc
pusha
imul
inc
adc
sbb
and
pop
lahf
movsb
test
int3
out
lahf
aaa
pop
sbb
loope
sbb
and
push
insb
mov
out
mov
or
mov
jbe
add
test
das
andb
pop
jl
les
std
imul
divb
xchg
jp
mov
mov
and
mov
push
lock
cmp
pop
jge
xchg
fistpll
sbbb
xchg
ficoml
sub
and
imul
fisubrl
clc
xchg
int3
mov
ljmp
sub
xchg
cmp
mov
sti
mov
jb
sti
mov
push
sbb
cwtl
pop
jbe
sbb
mov
ja
dec
leave
sub
sbb
jae
mov
pop
dec
daa
in
jo
adc
int
out
nop
mov
addr16
in
dec
out
jge
xor
push
lods
stos
dec
les
cmp
jg
insb
cmp
mov
mov
testb
pop
cmp
jns
jmp
jle
out
testl
sub
test
sbb
xor
adc
rcrb
fcoml
test
xor
inc
mull
faddl
leave
push
jnp
mov
jl
dec
jo
pop
push
mov
mov
out
lock
idiv
cmp
loopne
or
add
int
scas
jbe
push
das
inc
mov
or
cmovp
mov
push
jmp
dec
push
ja
je
pop
mov
mov
cmp
aam
fldl
iret
les
mov
movsb
repz
lret
mov
movsb
dec
lret
pop
js
call
push
outsl
sub
adc
incb
dec
xor
stc
sahf
add
ja
test
jmp
push
mov
mov
add
je
dec
cmp
cmpsb
mov
mov
sbb
jo
cmc
mov
mov
cli
sbb
jg
sahf
lret
call
sub
addr16
int3
jb
pop
or
mov
stos
cli
out
insb
adc
call
mov
bound
inc
aad
repz
cmp
dec
lea
popa
dec
imul
jge
pushf
fsubrl
inc
fxch
pop
push
xor
inc
xchg
push
pop
aam
rep
mov
jo
mov
add
rclb
lahf
cmp
xor
xchg
mov
in
lods
dec
mov
mov
repnz
insb
pop
cltd
stc
fsubr
push
aaa
mov
mov
inc
adc
push
sub
scas
fs
call
repnz
icebp
call
sti
daa
push
cmp
call
fucomip
pusha
stos
rorl
xchg
in
test
mov
test
cmp
cmp
adc
push
das
add
imul
scas
mov
pop
push
ffree
pop
push
xor
scas
fwait
adc
into
fsts
lods
inc
hlt
add
lret
das
mov
mov
dec
cli
sbb
fld
push
mov
fistpl
mov
dec
loope
xchg
xor
xchg
imul
dec
arpl
and
mov
sub
dec
dec
in
xchg
mov
pop
pop
rorl
sbb
sub
xchg
inc
repz
xchg
inc
pop
and
cld
aas
xchg
mov
int
test
shrl
cmp
ret
out
jns
rcrl
ss
ret
rclb
fimuls
sbb
movsb
xchg
fwait
mov
and
rcr
or
cmp
in
pop
dec
icebp
jle
daa
repz
insb
leave
adc
gs
push
call
into
loopne
pop
sub
pop
imul
cli
mov
aaa
ss
adc
mov
mov
dec
ficompl
fsubr
in
sub
add
mov
push
aad
cwtl
and
push
sarb
add
lods
outsb
call
push
call
aas
cmp
ja
addr16
jo
stos
or
jl
pop
dec
sbb
mov
mov
out
mov
in
mov
lea
lock
pop
lock
imul
xor
xor
js
hlt
pop
cs
push
mov
and
add
add
push
pop
xchg
push
movsb
cld
mov
push
cs
sbb
lock
pop
or
jmp
mov
fnstcw
gs
repz
or
shl
jns
fistps
xor
add
xor
loop
xor
insb
scas
movsl
add
sbb
push
adc
fidivrl
or
adc
incb
out
stos
arpl
out
leave
or
push
push
sub
loope
add
rorb
je
adc
stos
jnp
sti
jae
adc
and
jo
test
lahf
loopne
outsl
inc
xchg
aaa
or
push
cmp
je
jp
and
nop
mov
cli
pop
pop
inc
adc
cmc
xor
mov
and
pop
inc
dec
out
mov
loopne
pop
pop
das
xor
dec
fildll
rclb
push
cmp
pop
rcrb
arpl
lcall
push
lock
mov
ret
jnp,pn
and
push
shll
push
sbb
les
sub
pop
inc
adc
cli
loopw,pt
pop
cmpsb
int3
or
push
ljmp
dec
push
xor
push
jo
loop
jb
in
jae
lret
lds
cli
xorl
sbb
xor
and
xchg
inc
mov
ficoml
lahf
and
and
push
cld
mov
push
decl
sub
cmpsl
jp
sbb
and
nop
xchg
pop
fsubl
xchg
cmc
cmc
faddl
and
xor
dec
mov
popf
outsb
mov
ret
xchg
push
add
inc
std
jns
outsl
mov
mov
sub
push
pop
test
xchg
xchg
int3
xchg
jge
cmp
pushf
insl
inc
sbb
stos
mov
ret
mov
pop
mov
sub
movsb
movsb
ljmp
ficomps
xor
pop
cmp
out
shll
xorl
das
xor
pop
push
xor
cld
out
xchg
add
mov
outsl
int3
repnz
inc
jns
out
stos
xchg
insl
pop
xchg
mov
popa
imul
cli
or
cmp
jg
jp
lock
sbb
mov
lea
push
pop
xor
dec
dec
andb
test
sbb
iret
fstl
or
lds
cmp
xor
shlb
push
push
out
pop
cmp
sub
cmp
mov
mov
cmpsb
cmp
ljmp
cmp
jno
loop
neg
mov
or
push
test
ret
mov
or
mov
cmp
movsl
loop
sub
mov
inc
xchg
jnp
fmull
adc
shlb
std
out
dec
cmp
bound
mov
lret
dec
insl
stos
pop
out
stos
push
adcl
inc
and
cld
adc
aad
ret
cwtl
inc
cmp
pop
mov
add
out
in
popa
ljmp
xchg
bound
mov
pop
xchg
cmpsb
xor
enter
int
xor
adc
mov
xlat
push
icebp
addr16
pop
div
arpl
sbb
addr16
mov
lret
adc
mov
lods
loopne
js
inc
popf
xchg
jp
mov
ljmp
popa
stos
lds
cwtl
fcmovnb
clc
stos
aad
xor
adc
inc
leave
jmp
lcall
fs
cmpsl
es
fcmovu
testb
cmp
pop
aad
push
notl
xchg
add
push
and
dec
xor
in
mov
cmp
mov
test
repnz
ret
push
int3
mov
rcrb
repz
setae
int3
sti
in
cmp
xlat
mov
scas
into
int3
dec
nop
out
in
mov
mov
das
xchg
in
insb
divb
scas
add
mov
sbb
enter
pop
pop
ret
or
xor
mov
inc
repz
add
mov
mov
pop
aas
inc
outsb
mov
mov
xor
cld
inc
dec
pop
xor
ret
lock
push
inc
or
out
je
cmc
movl
mov
jp
test
or
cmp
imul
int3
shll
rolb
cmp
gs
dec
or
stc
addr16
enter
lahf
jo
pop
and
js
mov
fdivs
cmc
pop
rorb
dec
push
js
rclb
insb
xchg
enter
jg
std
and
ds
outsb
jl
jg
cmp
xchg
push
ljmp
out
mov
lds
or
adc
xor
push
mov
sbb
dec
das
xor
je
add
adc
mov
xchg
and
xchg
jb
and
pop
lds
in
lahf
int3
push
cmpsl
dec
mov
incl
pop
and
jecxz
fldt
ret
dec
xchg
cwtl
sti
movl
repz
mov
push
add
daa
ror
or
xchg
imul
dec
xchg
fidivrs
imulb
inc
cmp
lret
xlat
xchg
and
pop
cmpsl
cmp
mov
dec
ret
jnp
cmc
das
inc
insb
xchg
clc
fs
popa
rcrl
pop
dec
xchg
cltd
jl
jp
mov
es
bound
orb
mov
shll
fnsave
add
ret
out
xchg
cmp
popa
gs
jp
mov
jae
fsubs
add
mov
fbstp
sub
mov
lret
cltd
inc
push
imul
int3
mov
stc
pop
and
mov
fdiv
mov
dec
aas
inc
in
or
mov
loop
ds
mov
push
cli
add
mov
lea
jg
notb
add
xor
mov
xchg
inc
jno
mov
fs
fcompl
int3
mov
loope
test
inc
cltd
jne
pop
insl
out
mov
mov
add
rcr
mov
inc
push
mov
push
bound
fwait
leave
lahf
fisttpll
ds
jl
inc
pop
mov
push
push
rorb
lcall
xchg
rorb
scas
add
inc
adc
out
jb
mov
and
or
jg
adc
insl
out
enter
fcoms
dec
pop
mov
mov
stos
es
clc
xchg
jns
shr
test
pop
push
xor
add
mov
les
scas
mov
lea
xchg
pop
popl
mov
sub
mov
sub
iret
ficoms
sub
ds
jp
hlt
mov
or
inc
pop
mov
or
mov
mov
dec
and
xorb
int
mov
bound
dec
shlb
jge
add
lcall
pop
sahf
mov
xor
lahf
jge
shll
fucom
sub
fistpl
or
aam
mov
inc
xlat
scas
mov
outsl
mov
imul
mov
popa
fistpll
icebp
sbb
mov
xchg
repz
dec
mov
pop
dec
shl
sub
xor
gs
dec
fs
and
repz
push
jbe
fisubrs
mov
and
mov
lods
sub
popa
popf
xor
mov
stos
inc
mov
pop
mov
and
sbb
push
push
xor
imul
sub
dec
pop
daa
xorl
je
pop
sbb
ret
jb
test
out
ljmp
fisubl
js
push
lahf
test
adc
dec
pop
clc
test
loope
mov
dec
or
add
data16
dec
aas
xchg
bndstx
popf
or
imul
repz
shrl
sub
xor
jns
xchg
loope
mov
add
lret
mov
adc
outsb
add
lds
imul
fcompl
add
mov
adc
hlt
movsl
inc
mov
jmp
test
pop
dec
pusha
stos
mov
sbb
adc
add
mov
sub
mov
dec
repz
cs
adc
jns
adc
sub
arpl
fnstcw
pop
mov
fldt
push
mov
in
cmp
mov
xchg
add
cld
and
ljmp
jns
insl
ds
popa
rol
pop
test
adc
xchg
int
jl
gs
sub
mov
jnp
jnp
mov
aam
push
add
movsb
add
mov
aam
xor
mov
mov
insb
lods
popf
jne,pt
insb
mov
out
or
js
cld
sbb
cmp
stos
pop
and
loope
push
push
pop
jg
ret
xor
rcr
sbb
jg
mov
outsb
push
jbe
imul
pop
xor
sti
ja
push
sub
mov
scas
mov
xlat
jno
mov
popf
and
cmp
addr16
cmp
out
in
clc
inc
jge
ss
add
sbb
data16
push
fucom
ds
xor
xchg
dec
cmp
mov
ljmp
cmp
inc
hlt
pop
xlat
xchg
ljmp
jp
arpl
mov
clc
sbb
rcrb
xor
jns
test
or
bound
jno
lea
dec
aas
mov
sbb
jbe
lods
push
shlb
sub
daa
add
and
jns
les
and
ja
sbb
bound
rorb
adc
scas
push
call
push
mov
and
movsb
cltd
jb
push
mov
test
cmc
xchg
lods
loop
push
mov
jg
daa
lahf
mov
dec
stos
push
mov
decb
inc
sub
int
andl
dec
xchg
aad
jp
cmp
fisttpl
adc
std
pushf
adc
repnz
out
icebp
adcl
push
subl
sbb
xor
cmpl
adc
shlb
sbb
inc
test
insl
sub
push
xor
into
es
in
jb
mov
int
push
fistpl
sbb
xor
pop
aas
shll
sub
jb
pop
rorl
inc
cmp
xchg
lods
sbb
pop
fsubp
add
lods
dec
gs
mov
pop
cs
dec
inc
mov
dec
cmp
ljmp
sbbl
andl
push
dec
and
imul
testl
jnp
cmpsb
mov
imul
inc
jmp
aas
xor
fwait
dec
inc
enter
roll
and
push
out
jp
pop
sbb
outsl
sub
inc
negb
push
insl
call
cmp
aas
outsb
sbb
push
push
dec
bound
inc
ret
mov
in
inc
push
xchg
and
xor
or
jnp
xor
gs
or
faddl
adc
sub
xlat
leave
out
mov
and
scas
shlb
in
inc
xor
sbb
push
fsubs
fistps
out
mov
and
mov
mov
adc
adc
jbe
aad
jb
shll
xchg
sub
jns
inc
mov
inc
inc
push
cmp
cwtl
jge
adcb
in
fildll
xchg
cmc
jns
jae
inc
push
test
push
inc
pop
cltd
xchg
imul
enter
cmp
pushf
aas
and
aaa
push
inc
iret
nop
cmp
xchg
inc
repnz
jne
inc
jp
fnsave
add
lds
in
jle
pop
xor
fsubr
and
cmp
mov
rcll
adc
and
and
int3
test
mov
sbb
rcrl
es
mov
mov
sarl
shlb
add
das
mov
hlt
inc
sbb
cmp
pop
jl
jnp
and
xchg
out
add
cli
jne,pn
pushf
stc
stos
xchg
ret
rcrl
adc
lock
andl
mov
fs
adc
gs
outsb
xchg
divb
jnp
call
cs
nop
int
inc
arpl
les
call
xor
std
leave
jge
mov
xchg
jns
adc
lret
xor
aam
mov
dec
cmp
leave
mov
and
dec
and
cmp
mov
jmp
xlat
lds
add
mov
lds
inc
adc
andb
outsl
xchg
jp
pop
or
push
dec
cmp
ror
loopne
cli
jbe
aas
sub
add
movsb
pop
jg
lret
lea
cmp
stc
add
loop
add
popf
cmp
mov
hlt
loope
push
mov
les
imul
fcoml
sbb
out
sub
ss
sub
xor
add
negb
lret
push
nop
ja
or
addr16
inc
dec
cmp
loop
xchg
mov
in
lds
testl
test
mov
enter
pusha
push
xchg
mov
ret
les
fxtract
loopne
and
xor
inc
pop
pusha
dec
imul
push
or
repz
mov
lea
test
popa
inc
int3
adc
sbb
mov
inc
fwait
adc
aaa
push
cmpsl
pusha
sbb
dec
aas
flds
dec
push
andl
mov
xchg
out
mov
test
push
mov
xchg
xor
popa
xchg
xchg
or
mov
or
pop
pop
mov
int3
test
outsl
in
xor
inc
pop
cli
cmpsb
jne
add
sub
pop
push
popf
lahf
fiadds
pop
jae
shll
sbb
mov
leave
data16
pop
sub
leave
imul
mov
jecxz
clc
push
dec
into
fstp
hlt
movsl
gs
or
icebp
rcr
pop
out
and
arpl
jb
xchg
adc
lea
inc
xlat
fimull
js
dec
mov
mov
cltd
ja
rol
loop
out
xchg
jo
mov
sbb
inc
xchg
jbe
daa
add
adc
xor
sahf
mov
inc
jle
cmp
xlat
jmp
fcmovb
stc
add
popa
lret
mov
jne
xchg
sbb
mov
sbb
jp
jno
roll
adc
push
cltd
add
insl
pop
dec
jge
sbb
pop
xchg
pop
outsb
rolb
mov
push
jnp
add
sub
ficompl
adc
or
pop
mov
add
cmp
fs
cmpsb
test
jb
push
sarl
imul
test
mov
int
pop
repnz
aas
pop
and
ret
jmp
xchg
jb
fisttpl
outsl
js
cmp
lret
xchg
push
jnp
sbb
cmp
cwtl
and
xchg
cmc
cmp
xlat
jge
mulb
out
les
mov
inc
cwtl
mov
push
ret
mov
cmp
pop
pushf
mov
testl
jle
sub
lock
ljmp
in
push
imul
cwtl
sti
mov
and
mov
stc
mov
outsb
add
mov
mov
mov
cmp
test
xor
and
lods
gs
push
mov
adc
cmc
scas
pushf
das
ret
lahf
enter
push
pop
lds
or
hlt
enter
inc
push
mov
jbe
ljmp
lret
sbb
cmp
mov
imul
stc
inc
adc
incl
call
or
inc
jg
stc
sub
stos
mov
dec
fdivrs
icebp
ds
pop
cmc
push
daa
push
push
push
pop
sbb
mov
cmc
xchg
bswap
jl
add
adc
mov
leave
sbb
push
pop
into
push
xchg
adc
push
xlat
jne
dec
mov
mov
xchg
and
push
lcall
pop
pop
xchg
movsb
adc
and
pop
dec
out
adc
inc
scas
and
and
pop
xor
mov
jo
inc
pop
xchg
clc
adc
push
push
push
adc
and
aad
push
push
fcmovnbe
push
sub
cmp
mov
dec
stos
addr16
mov
fimull
push
mov
testb
lods
and
xor
leave
jne
add
das
add
call
push
cmp
adc
out
cmp
scas
fwait
lods
mov
pusha
xchg
jl
and
xchg
adc
pop
push
movl
pop
inc
jne
mov
inc
jbe
les
cs
sub
adc
or
lods
lds
lret
inc
sbb
imul
into
ljmp
cmp
pop
das
xchg
or
pop
lock
or
and
sub
mov
out
mov
in
fbld
dec
add
sub
push
out
rorl
dec
pop
mov
cltd
in
mov
out
mov
in
test
orl
jl
inc
jmp
out
out
in
cmp
adc
mov
outsb
fdivs
or
mov
shrb
in
push
movsl
xchg
mov
and
jle
dec
cli
dec
mov
clc
je
sbb
pop
fstps
imul
cmp
popf
push
push
popf
push
lcall
push
adc
in
out
addr16
xor
nop
add
adc
cmpsw
mov
jp
shll
mov
das
mov
fidivrs
mov
cmp
xor
outsb
fcoml
cmp
hlt
fsubrl
push
es
jne
out
rclb
movsw
sub
jge
nop
loop
jno
icebp
mov
mov
insb
in
push
mov
xchg
clc
loope
inc
ffree
and
mov
and
jb
pop
mov
adc
fisubs
push
mov
dec
fndisi(8087
jle
into
shl
jb
sarl
cmc
and
ficomps
mov
iret
ret
f2xm1
and
and
jg
lods
es
jo
add
jecxz
loope
aas
inc
shll
lret
mov
push
roll
lods
cld
cmp
ss
mov
dec
loopne
out
mov
adc
out
adc
in
adc
not
gs
movsb
dec
pop
cmp
mov
xchg
shl
or
fisttpll
fidivrs
inc
repz
pop
pop
insl
ret
add
sbbb
mov
std
ljmp
imul
sbb
jae
daa
scas
jo
jae
sbb
scas
and
je,pt
dec
lock
sbb
mov
call
sti
pop
sub
xor
inc
mov
pop
pushf
cs
cltd
out
cld
repnz
fsubl
test
js
pop
pop
leave
push
lods
test
lcall
shrb
shlb
cmp
pop
push
jmp
xchg
sub
and
mov
outsb
xchg
in
lds
in
out
dec
and
mov
aaa
rorb
inc
xchg
js
jg
lahf
icebp
in
xor
icebp
xchg
cmp
addr16
shll
lret
mov
lea
adc
dec
pop
jl
std
call
fwait
cmc
xor
mov
dec
add
loop
cmp
insl
sub
in
lods
mov
mov
mov
out
push
repnz
stos
xchg
loopne
inc
adc
adc
pop
mov
cltd
sbb
push
loop
testl
aam
ret
ja
fs
js
cmpsl
mov
sahf
scas
jae
add
shll
call
jecxz
pinsrw
jp
sahf
aam
icebp
ret
mov
mov
adc
lahf
xor
in
rclb
jne
add
xor
rcr
sbb
sbb
mull
jo
adc
out
lea
sahf
jg
out
or
es
aam
pop
cs
mov
imul
pop
or
out
subb
stc
mov
cmp
adc
cltd
gs
imul
popa
cmpb
jbe
and
adc
sbb
insl
lcall
pop
in
loopne
bound
aad
sahf
test
cmp
leave
je
pushf
cli
call
jns
test
pop
pop
push
or
insl
std
and
lea
sbb
cmp
daa
pop
and
clc
ret
mov
sub
jno
cmc
push
lret
movb
mov
out
jns
aam
xor
sub
push
test
and
icebp
out
ja
pop
mov
xor
and
imul
test
pop
mov
pop
xor
adc
dec
sbb
pop
shrl
dec
mov
ss
jo
sub
or
push
cmp
aad
xchg
neg
mov
fisubrl
inc
jle
mov
lds
out
jae
call
imul
stos
in
and
incb
xor
cmpsb
jle
push
in
subl
xchg
add
jecxz
mov
pop
je
inc
mov
popa
rcl
pushf
push
xor
cwtl
dec
lret
cltd
lret
jge
in
jb
test
add
insl
sbb
scas
stos
je
stos
jno
mov
jnp
aas
and
add
jp
clc
ror
icebp
cmp
jp
dec
xchg
mov
clc
push
xchg
call
or
pop
add
ljmp
mov
mov
rdpmc
std
popa
mov
enter
gs
jle
sub
pusha
mov
pop
push
mov
mov
rcrb
mov
test
int3
popa
mov
mov
jbe
negb
cmp
mov
into
push
dec
fsubp
xchg
daa
sub
jle
outsl
dec
jo
push
jp,pt
mov
mov
xor
jmp
rclb
test
popf
js
xor
cmp
scas
jns
dec
subb
lods
pop
inc
mov
mov
and
mov
mov
xchg
jge
dec
into
pushf
inc
xchg
ss
addr16
xor
negl
mov
add
xchg
fbld
or
jo
les
xchg
dec
test
sub
inc
or
je
js
fildl
mov
mov
sbb
push
and
sbb
out
stc
xchg
test
fnstcw
stos
sub
inc
iret
jo
sbb
or
lahf
inc
div
daa
fstl
fdivl
mov
repz
xchg
pushf
cld
sub
jge
mov
shrb
call
pop
cmp
cwtl
test
frstor
stos
jb
lock
mov
adc
push
ss
int3
adc
pop
lcall
adc
sub
xchg
jecxz
mov
add
sarl
rcrb
xchg
or
mov
mov
mov
fsubp
notb
mov
xchg
ret
sahf
inc
aam
sahf
xchg
pop
repz
jl
cmp
or
movsb
inc
cwtl
mov
mov
mov
jl
pop
leave
and
mov
or
imul
or
adc
mov
or
mov
and
out
push
push
dec
mov
leave
ficoms
in
and
nop
jle
mov
cli
in
mov
shll
inc
scas
mov
mov
lock
cwtl
cmp
ret
dec
fstpl
push
mov
mov
int3
inc
sub
or
movsb
and
mov
mov
test
incl
push
in
push
loopne
adcl
dec
dec
pusha
int3
inc
mov
or
push
adc
outsl
arpl
test
iret
fstpl
xor
xchg
push
push
adc
jne
addr16
inc
and
hlt
lret
mov
add
xor
out
insb
mov
mov
int3
mov
add
sub
fcmovne
cmp
stc
add
cmpsl
inc
mov
roll
icebp
mov
fidivl
xchg
pop
lret
push
cmpsl
lret
add
lret
push
mov
imulb
xor
dec
push
dec
dec
lods
sub
shr
data16
push
lret
xor
loope
mov
mov
fstpl
negl
mov
lret
or
mov
add
js
sub
mov
jne
insl
mov
popa
divb
inc
sbb
push
mov
divb
mov
pop
push
push
frstor
dec
push
add
popf
cmpsb
sub
es
and
enter
cltd
and
push
mov
xchg
and
adc
mov
and
lret
pop
in
cmp
sar
adc
mov
pop
push
repnz
mov
test
addr16
mov
outsl
cmpsb
add
push
sbb
mov
jl
sbb
in
shll
jb
inc
jae
jns
sbb
out
icebp
ds
push
xchg
fs
add
insb
fmul
xor
fwait
js
out
xor
jo
mov
faddl
xchg
test
mov
div
xchg
push
repz
jmp
in
push
aaa
fistl
jno
sbb
in
or
popa
mov
xor
es
mov
mov
lock
jecxz
rol
mov
js
cmp
jmp
bound
xchg
aas
leave
stc
jns
enter
push
sub
xor
nop
pop
sub
mov
outsb
adcl
push
repnz
pop
jecxz
xchg
jge,pt
pusha
lret
pop
sar
loopne
loop
push
pop
cmp
xchg
sub
addb
dec
repnz
imul
cmp
mov
mov
out
jno
cmp
arpl
mov
xor
cmc
or
cmp
cld
rcrb
inc
or
jo
pop
cwtl
inc
mov
mov
ss
mov
add
mov
fistl
popa
test
movb
loope
aad
sub
fcomip
jbe
sub
push
ret
dec
jg
cmpsl
sbb
bound
sbb
lock
xor
push
fisttpll
lods
xchg
add
aam
shrb
or
dec
cltd
cmc
shrb
push
sbb
xor
aas
movsb
xchg
add
sub
aad
xor
rcll
cmpsb
addr16
cmp
xchg
test
dec
sti
mov
movsb
push
cmpsl
jns
mov
jecxz
lea
in
mov
jb
jp
pop
xor
clc
shl
push
adc
lret
fmuls
mov
jae
ret
push
pop
lods
jge
push
lahf
in
add
or
dec
aas
mov
sbbb
cmovo
fs
les
pop
fcoml
cmp
mov
out
cs
pop
lret
ja
adc
mov
jne
js
pop
pop
leave
jmp
pop
movsl
lahf
inc
dec
movsl
packssdw
fsubrp
outsl
lahf
int
movntq
adc
ss
repnz
xor
sbb
out
push
sub
and
cs
mov
cmpsb
adc
pop
lret
adc
xchg
fistpll
adc
aas
imul
add
fisubrl
mov
xchg
sbb
lcall
lret
sbb
mov
jecxz
push
adc
clc
cs
in
dec
dec
in
std
lods
jle
dec
pop
inc
int3
and
pop
cld
outsl
sti
scas
shrb
icebp
pop
test
mov
fcompl
addr16
minps
xchg
dec
mov
pop
push
push
push
cli
das
or
mov
insl
ret
xchg
cs
add
push
xor
ljmp
xor
std
pop
lcall
inc
mov
mov
dec
push
push
jo
pop
aas
inc
inc
cmp
or
out
bnd
push
test
rcrl
push
adc
in
shlb
je
daa
lods
pushf
popf
add
xchg
adc
loop
loop
or
mov
sbb
aad
adc
pop
scas
imul
cmp
cmpsb
test
mov
dec
shlb
jmp
xor
test
mov
or
push
andl
mov
mov
jge
aam
cmpsb
sbb
mov
cltd
fcomp
pop
mov
repnz
vpmovmskb
lret
loop
fldcw
jmp
sub
iret
icebp
xor
fsubrs
dec
orb
mov
cmp
add
in
outsl
into
es
stos
mov
daa
int3
shr
scas
and
mov
scas
mov
mov
pusha
push
jmp
cmpl
and
das
or
push
sub
aas
popf
movsb
and
in
pop
xlat
xor
pop
decl
jecxz
fdivrs
outsl
insl
and
dec
inc
cmp
iret
rclb
arpl
in
inc
inc
or
mov
sub
sahf
cld
in
repnz
in
pop
mov
inc
daa
ficomps
sbb
ja
hlt
repnz
pop
gs
inc
lock
mov
and
out
je
lock
bound
jb
dec
test
push
jb
sbb
adc
test
imull
mov
xlat
and
mov
sbb
stos
adc
lcall
rcll
xchg
cmp
xchg
push
mov
xor
xor
add
adcb
jno
and
jecxz
add
xlat
aad
xor
cli
or
pop
and
test
xchg
push
scas
daa
insl
sub
popf
add
lods
rorb
jo
add
movsb
insl
test
pushf
xchg
lock
mov
sahf
or
xor
sub
xchg
dec
add
push
dec
lahf
les
or
pushf
mov
mov
stos
ljmp
cmp
push
call
inc
jmp
mov
jne
test
mov
xchg
fsub
mov
pop
mov
popa
out
roll
push
sbb
add
ret
imul
pop
xchg
add
and
movsl
testl
xor
insb
push
pop
push
lea
cli
push
push
pop
cmp
jle
xlat
jbe
and
daa
out
in
aas
xor
clc
sub
sbb
inc
call
mov
pop
ret
in
loope
sarb
mov
cmp
in
mov
mov
pop
sti
dec
fbld
addr16
jmp
or
nop
int3
stos
ljmp
int3
adc
out
push
movsb
fcoml
call
rolb
imul
movsb
jecxz
jne
xor
int3
dec
pop
lods
mov
jae
cli
and
outsb
mov
lods
dec
movsl
push
sub
loope
movsb
sahf
sbb
mov
sub
xchg
in
lret
fcmovbe
mov
and
test
aad
sahf
es
or
sbb
xor
xchg
std
sbb
mov
test
and
addr16
push
push
icebp
andl
pop
pop
and
jne
pushf
mov
mov
in
cli
pop
aaa
xor
push
enter
imul
jle
lret
sbb
mov
push
lock
lods
imul
mov
ret
and
mov
or
addl
aad
out
enter
mov
or
jns
cli
je
pop
fwait
or
outsb
ds
shl
pop
mov
xor
push
add
test
xchg
filds
outsb
popw
mov
add
sti
xchg
or
or
xchg
sub
mov
or
lea
dec
push
push
mov
adc
call
pop
psrld
pop
ret
pop
test
frstor
orb
cwtl
jmp
mov
pop
xchg
push
sbb
stos
enter
in
pop
pusha
push
repnz
es
xor
mov
dec
push
cmp
sbb
adc
jecxz
in
xor
mov
pusha
or
cmp
jmp
incb
jmp
add
add
stc
push
sbb
add
or
shlb
out
jns
js
arpl
test
mov
sbb
add
ss
mov
test
clc
cmpsb
pop
jnp
out
and
iret
lock
pusha
mov
adc
iret
jmp
xlat
ret
subl
cltd
push
test
or
insb
cld
xchg
into
sub
push
pop
je
jl
dec
or
jae
cltd
test
mov
pusha
inc
notl
mov
mov
lret
push
dec
and
inc
jmp
or
push
clc
cli
or
adc
enter
and
lret
or
push
out
int
jmp
mov
cli
test
mov
pop
mov
ja
in
aas
and
stos
fimuls
icebp
movb
leave
scas
mov
in
inc
lods
repnz
sbb
and
addb
xor
shrd
addr16
es
add
icebp
sub
or
xor
dec
cmp
push
imul
repnz
xor
sbb
bound
int3
loopne
aaa
mov
xchg
popa
pop
mov
lahf
in
test
mov
inc
rolb
cmpsb
xchg
out
stos
sbb
cmpsb
inc
cld
pop
pusha
aam
loopne
pop
cmp
pop
lcall
aas
std
stos
sub
pop
scas
ret
or
fnstcw
addr16
aad
push
jp
xchg
popf
out
sbb
icebp
aam
shlb
or
lret
dec
xor
add
stc
xchg
pusha
sbb
push
jge
inc
inc
sbb
imul
adc
scas
cmpsb
lahf
mov
push
cmp
aas
xor
pop
xchg
scas
popa
mov
mov
jg
clc
scas
repz
iret
jecxz
mov
cs
pop
in
mov
sub
mov
shr
xor
movsb
repnz
call
or
cld
add
sub
xor
nop
or
jns
lods
aam
arpl
inc
mov
inc
cmc
popa
mov
test
rorl
bound
out
dec
mov
out
mov
js
cld
fs
sti
std
iret
pop
or
int3
pop
mov
sahf
loope
shlb
mov
jmp
add
push
add
lea
pop
jo
adc
fdivr
dec
pop
xor
fdivrp
lea
scas
ret
std
mov
inc
jae
jle
pushf
sti
test
pop
xchg
ss
rcrl
or
subb
in
fimull
mov
pop
rcl
lretw
lock
pop
imul
or
pop
lods
mov
mov
and
xor
add
scas
aad
repnz
inc
mov
xchg
fidivs
xchg
aas
and
mov
sbb
insb
inc
fnstcw
fsub
pop
push
mov
lods
adc
aas
imul
or
outsl
jbe
mov
mov
fistpll
into
jns
pop
scas
pop
addr16
cmp
xchg
and
push
cmc
jge
rcrb
cltd
cs
push
pop
orb
mov
dec
data16
int
push
push
movsb
or
pop
mov
xchg
dec
mov
xchg
mov
cs
inc
in
mov
mov
xor
and
movsb
push
popa
roll
sarl
xor
ss
xor
and
mov
lahf
mov
jecxz
jmp
push
in
rcl
iret
int
into
jle
cli
fcomi
and
xchg
and
dec
push
les
pop
mov
stos
inc
test
mov
dec
loope
addr16
std
jl
mov
lea
fiadds
or
lods
fcoms
lcall
pop
out
dec
add
pop
stos
mov
and
pop
cli
loop
push
sbb
sbb
mov
mov
adc
stos
outsb
nop
jmp
pushf
pop
sarl
add
and
push
rorb
std
pop
inc
fadd
xor
lds
push
lret
dec
mov
xchg
loope
int
aad
repnz
pop
into
and
leave
push
dec
adc
or
lret
jp
jae
aam
pop
jecxz
dec
test
add
mov
sahf
push
testb
pop
aaa
fdivrl
aad
dec
leave
push
dec
rorb
shl
xlat
inc
adc
stos
dec
pop
mov
setae
push
lods
loopne
and
aad
add
outsb
mov
pop
sbb
into
fldl
and
lods
push
xor
mov
shll
das
xor
aam
shll
pop
jnp
mov
call
mov
out
adc
dec
mov
cmpsl
mulb
out
roll
or
pop
stos
rcll
idiv
cmpsb
movsl
je
or
mov
int
mov
fsubs
pusha
add
rcrb
je
fcom
popa
cmpsb
icebp
dec
add
movsb
lcall
faddp
out
aas
dec
xchg
inc
mov
pusha
xlat
ljmp
adc
leave
cli
mov
outsb
in
imul
in
ja
cmpsl
cmp
sbb
sarl
inc
adc
out
test
pminub
ret
int3
rcrb
dec
into
es
sub
add
clc
pop
xchg
add
fiadds
cltd
and
scas
nop
ret
push
loope
loopne
push
roll
add
pop
idivb
lock
js
aas
mov
mov
les
out
cli
lods
cmpsb
iret
sarb
and
cmc
movsl
pop
and
inc
jg
or
clts
lock
xlat
icebp
imul
sti
dec
add
scas
sub
jno
repnz
push
std
adcw
xchg
inc
mov
les
pop
inc
lret
jge
pop
sbbl
sub
push
pop
inc
lret
lcall
xchg
sub
push
jbe
je
jge
sbb
pushf
cs
test
mov
fstpt
sbb
fcmovne
lock
mov
sub
mov
lds
jp
adc
inc
jnp
dec
ret
mov
jge
outsl
pop
inc
jnp
xchg
outsb
stos
hlt
sbb
lcall
cs
shlb
jmp
dec
pop
inc
repz
mov
sub
xchg
mov
lds
and
xor
pop
dec
jo
aaa
iret
sbb
popa
andl
push
dec
sbb
stos
aam
sbb
dec
cli
aam
fs
scas
rcrb
rolb
dec
or
adc
test
pop
push
push
loopne
inc
add
add
in
cmp
or
cltd
and
pop
cli
xor
out
mov
popa
add
cwtl
mov
shl
mov
adc
dec
and
dec
js
mov
inc
mov
sub
or
add
fxch
imul
jl
add
inc
inc
jp
or
jo
push
pop
xchg
sbb
sub
dec
mov
mov
adc
insl
out
pop
inc
sbb
ss
adc
insb
pushf
pop
and
push
out
cmp
pop
test
add
push
inc
cld
lahf
call
test
test
lds
inc
mov
les
pop
notrack
add
push
mov
fbld
nop
pop
mov
sub
pop
push
mov
enter
inc
dec
out
orl
out
mov
out
jbe
xchg
jge
call
jmp
lock
iret
push
cmp
test
mov
mov
dec
sub
mov
mov
jge
lea
jno
fldl
aas
sub
sub
lods
arpl
and
mov
sbb
sub
clc
xlat
inc
cltd
cltd
sub
sarl
test
loopw
push
add
scas
daa
hlt
insb
fstpl
out
mov
cs
je
xor
pop
shrb
cmp
jne
in
outsb
cmp
pop
ds
dec
repnz
out
add
inc
lret
jns
xchg
fs
cmpsl
movsl
sub
int3
pusha
cmc
push
outsl
fwait
pop
movsb
sub
popf
cmp
cmp
xchg
inc
ret
cmp
aad
mov
jmp
cmp
jmp
dec
pop
xor
jge
dec
stc
jmp
jmp
ret
daa
ljmp
push
outsl
rcrb
testb
jg
mov
fidivrs
popl
and
cmp
outsl
sbb
mov
hlt
adc
test
fcoms
add
inc
sub
mov
jne
scas
or
or
push
mov
outsb
bound
in
insb
cmpsb
icebp
scas
insb
ja
loopne
sahf
jl
sbb
inc
jb
xchg
mov
cmp
addr16
pop
arpl
fisubs
pushf
clc
add
jbe
daa
cmp
jbe
dec
jne
mov
sbb
fdivrs
subb
sbb
mov
stc
jg
loope
lret
push
xchg
int3
sub
pop
cmpsb
and
jl
pop
daa
xchg
inc
mov
mov
sbb
adc
leave
add
mov
adc
inc
sub
inc
call
push
mov
sbbb
out
sti
dec
or
popa
pop
ds
aad
mov
enter
shrb
loopne
add
adc
mov
pusha
jge
jg
out
js
loope
xchg
mov
in
push
adc
insb
call
stos
aam
mov
sbb
mov
jb
shrb
fldt
cmp
sbb
mov
jb
xchg
test
mov
dec
sbb
pop
pop
push
pop
pop
repnz
sarl
and
mov
pop
rcrl
inc
das
push
or
and
rorb
sti
pop
clc
stos
lods
std
inc
or
xchg
jns
in
je
push
pusha
cmc
stos
mov
xchg
mov
xchg
aad
mov
pop
xor
jge
loope
push
lea
cmp
mov
fisubl
jecxz
dec
xchg
cli
xchg
sbb
sahf
js
iret
hlt
pop
dec
andb
and
out
xchg
fwait
shlb
cmc
push
aam
mov
into
sarl
add
insb
adc
or
add
aad
push
cmp
mov
dec
rcll
clc
dec
pusha
push
dec
rcr
jl
pop
push
push
xor
and
adc
jmp
push
sbb
inc
jmp
mov
push
les
sub
xlat
das
jecxz
bound
cmp
shlb
clc
push
xor
push
jno
mov
pop
stc
xor
test
adc
fsubr
imul
popf
inc
cmp
lcall
imull
xchg
hlt
xchg
pop
jo
sbb
inc
clc
sbb
in
stos
sbbl
cmp
lret
push
adc
cmpsl
stc
mov
and
pop
or
xchg
stc
push
inc
std
mov
adc
mov
ja
movsb
xor
int3
xchg
in
jbe
lds
dec
test
lds
and
shrb
inc
dec
aas
xor
lahf
inc
dec
jp
push
sbb
addr16
test
scas
mov
imul
cwtl
mov
lods
aam
adc
pushf
jl
inc
xchg
iret
jnp
ret
mov
test
sbb
in
rol
stc
pop
das
mov
adc
pop
js
push
jns
sahf
and
fimuls
movsb
imul
test
sti
inc
pop
in
in
repz
out
pushf
mov
jg
daa
lret
xor
imul
je
inc
mov
xlat
jns
xlat
add
mov
out
adcl
cltd
js
xchg
add
out
cmp
cltd
mov
mov
push
cmp
push
jnp
mov
sub
inc
enter
push
xchg
dec
jo
add
sbb
movsl
mov
sub
add
or
in
cld
int
dec
dec
ret
mov
arpl
ret
push
test
cmp
add
int3
and
test
fisubrl
hlt
xchg
lret
imul
add
jns
adc
outsl
lret
lods
xchg
jne
scas
sub
rcrb
leave
fisubs
sbb
mov
shll
add
add
cmp
sarl
sub
sbb
push
popa
jge
cmp
ja
ror
mov
pop
adc
xchg
dec
in
sub
dec
push
inc
cmp
mov
fimull
mov
pop
sbb
mov
pop
int3
loopne
pop
iret
xchg
out
fistl
testl
xlat
lcall
or
pop
cmp
sbb
mov
dec
mov
and
cmp
xchg
cmp
decl
fs
and
or
and
out
aaa
lods
rcrl
and
pusha
mov
push
lods
lret
add
dec
gs
call
add
movsl
jae
test
call
notl
icebp
iret
xchg
xor
iret
jg
in
add
jp
xchg
cld
subb
pop
fbld
std
and
inc
jns
inc
in
inc
enter
xchg
inc
add
xchg
out
push
dec
adc
sub
inc
mov
adc
mov
es
push
in
or
adc
arpl
jecxz
dec
jecxz
iret
repz
jle
lea
pop
and
push
loope
sbb
in
ret
xor
jae
js
js
jg
mov
in
sbb
or
loop
push
dec
xchg
jecxz
add
xchg
cmp
outsb
or
shrl
popl
jbe
jne
sahf
xchg
ljmp
sub
movsl
imul
cmp
pop
xchg
stos
add
shlb
xor
loop
xchg
cmp
nop
lcall
adc
xorl
adc
mov
ljmp
mov
stc
aas
add
fsubl
pop
mov
dec
mov
mov
mov
sub
push
push
ret
or
pusha
jnp
pop
jo
push
mov
call
pop
dec
fcmovne
popa
rolb
scas
ss
push
data16
push
shr
cmp
mov
cmp
cmpsl
testl
inc
adc
scas
fsubl
sti
fnstsw
pusha
mov
addl
ret
hlt
and
imul
repz
mov
adc
stos
jecxz
mov
das
mov
pop
mov
dec
sub
movsb
mov
into
repnz
xchg
out
out
mov
inc
pusha
fistps
insb
subl
inc
push
mov
outsl
and
jo
jns
inc
ss
xchg
adc
ja
enter
cs
lea
and
adc
ret
adc
add
int
push
mov
out
and
xchg
dec
lcall
cmp
lahf
cld
jns
shlb
mov
push
xchg
add
cmp
push
pop
xor
fdivrp
add
out
push
cmovns
fdivr
outsb
jl
mov
pop
inc
imul
js
sub
xchg
mov
cmpb
stc
jg
and
cmp
cmpsl
jo
mov
sbb
js
inc
push
jno
mov
and
outsl
fwait
jg
enter
repnz
pop
pop
xchg
mov
push
ljmp
out
andb
push
sbb
dec
fnsave
gs
fsts
lds
add
pop
xchg
jp
xor
adc
stc
jg
js
pop
mov
mov
test
inc
ds
sbb
subl
jb
ror
push
xlat
fs
push
out
adcl
js
sub
ljmp
icebp
test
je
jo
jo
adc
jnp
sahf
push
cmc
popf
add
dec
add
lods
cmp
ret
shl
jnp
sub
lock
pop
fs
and
xchg
mov
mov
mov
xchg
ss
mov
xor
fidivrs
cli
shrb
mov
fldt
xor
jno
mov
cwtl
mov
je
ljmp
lahf
adcl
xlat
dec
pushf
das
cltd
in
mov
and
pusha
pop
aaa
cmp
add
adc
lret
enter
or
mov
cmp
sub
bound
into
nop
jmp
mov
adc
call
fiadds
pop
jo
and
lods
jo
sbb
cli
test
jae
out
mov
add
sbb
fwait
insl
cmpsl
add
inc
jp
xchg
lea
or
in
pop
popf
jb
sbb
out
ljmp
xchg
or
xchg
jo
movb
mov
ret
std
pop
mov
dec
xor
dec
sub
cmp
dec
xchg
cmp
inc
ror
pop
sti
sub
outsl
movsl
mov
imul
xor
cmp
fs
hlt
push
sbbb
int
jl
sbb
adc
jg
mov
jp
sbbl
cwtl
sahf
jo
mov
daa
inc
mov
lcall
bound
insb
add
dec
mov
sub
push
sub
es
dec
mov
sub
sub
sub
sub
iret
cmp
adc
dec
inc
dec
mov
lods
in
inc
and
mov
lods
ja
lods
add
pop
mov
sub
jg
cmp
scas
sarb
or
cmp
jae
sub
jns
loope
and
test
dec
outsb
orl
lret
xlat
cli
mov
mov
jnp
aam
push
dec
adc
icebp
orb
mov
xlat
ret
aas
fistpll
repz
adc
ret
xchg
je
inc
xchg
rolb
pop
ljmp
cld
aad
outsb
movsb
xor
cmp
test
pop
nop
clc
sahf
mov
stos
pop
lret
cmp
push
shll
xor
es
in
out
mov
hlt
cs
les
scas
push
jbe
imul
pop
add
mov
add
cld
sbb
xchg
mov
jnp
aad
fmuls
int3
cs
shl
jbe
out
enter
cmpsl
fstp
dec
xor
scas
cmp
lods
mov
dec
and
fnclex
jmp
dec
js
rcr
shrb
add
or
mov
sbb
shlb
pop
inc
or
dec
movsb
adc
sub
push
cmp
sub
pop
daa
ret
and
aad
nop
outsl
mov
and
sub
or
sti
xor
testb
cmpsb
movsb
push
pop
fcomi
inc
and
jmp
push
cmp
jl
mov
rolb
and
jecxz
out
add
jmp
iret
stc
cmp
into
mov
addb
dec
push
xchg
mul
jl
test
dec
sti
xchg
sti
inc
sub
cmp
sbb
aam
out
inc
or
daa
and
jge
cmp
xchg
cmp
das
push
and
in
mov
mov
cmpsb
cld
mov
and
jg
push
addr16
adc
cwtl
sti
xor
sar
dec
shr
sahf
imul
dec
out
push
shll
stc
xchg
or
lret
shlb
addb
test
fstpt
bound
and
jnp
or
not
or
outsl
adc
stc
sub
mov
add
jge
add
cmp
jl
rcrb
push
stos
jecxz
das
dec
shll
imul
push
and
imul
mov
mov
xlat
int
jo
stc
movsb
lods
shr
stc
mov
pop
pop
jle
int
jo
andl
cld
rcrl
int3
mov
imul
lret
movb
dec
mov
dec
mov
nop
pop
lock
mov
pop
and
aam
sub
pusha
imul
jns
mov
xchg
mov
scas
pop
cmp
jns
sbb
cld
push
pop
loopne
rcr
push
jg
jae
and
ds
xchg
jp
inc
mov
push
addb
sbb
jae
stc
mov
sbb
das
pushf
adc
mov
sub
int
pop
sub
or
bound
fcoml
ljmp
pop
loope
shrb
xchg
xchg
testl
nop
sbb
repnz
cmc
outsl
mov
mov
iret
inc
sbb
push
push
stos
add
rorb
ss
rclb
mov
mov
or
dec
mov
or
and
popa
push
pop
add
enter
mov
std
fisubs
xchg
decb
and
mov
flds
test
and
xchg
outsb
jge
inc
mov
and
xlat
fs
push
insl
aad
out
push
imul
adc
mov
scas
leave
dec
dec
jecxz
jge
push
jb
sub
and
ja
inc
and
push
lea
jg
pop
in
dec
push
xchg
cmp
mov
out
cltd
popa
cmp
push
fwait
lods
aam
sbb
icebp
xor
and
mov
mov
in
mov
loop
aad
scas
or
mov
adc
and
inc
jge
out
int
jns,pn
cld
inc
rcrb
lods
sbb
lahf
inc
adc
cmpsl
outsb
add
sbb
in
cmp
jecxz
sbb
pop
add
into
mov
scas
sub
imul
or
mov
adc
mov
dec
cmp
xchg
mov
fscale
roll
dec
loope
rolb
sbb
push
inc
sub
cmp
mov
sbb
data16
dec
addl
xchg
loopne
xchg
ss
mov
mov
pusha
mov
jae
pop
cmc
jl
aas
hlt
sbb
xchg
movsb
sbb
sahf
mov
mov
test
int3
imul
inc
lods
and
xchg
test
aad
cmp
in
in
jbe
fisttpl
mov
out
mov
push
mov
fdiv
push
cmp
mov
pop
pop
dec
and
inc
cmp
aad
sti
mov
xchg
sub
adc
dec
xor
push
push
aad
mov
lea
jae
aam
cs
dec
xor
jno
mov
stc
sbb
mov
ret
sub
cltd
sti
push
sub
in
sarl
stc
inc
sub
pop
xchg
fistl
es
xchg
and
insb
stos
cltd
je
cmpsb
ret
icebp
jb
iret
adc
push
dec
push
push
add
in
adc
push
jle
jbe
sbb
mov
imul
fdivr
dec
pusha
xor
popa
negl
sub
movsb
lods
bnd
lcall
outsl
jo
add
scas
jmp
add
and
sub
test
adc
mov
or
insl
lcall
cmc
mov
sub
ljmp
dec
insb
ds
mov
jae
inc
sbb
loope
sbb
movsl
inc
adcl
sbb
hlt
cwtl
jmp
fnstcw
mov
inc
add
loopne
rorl
fcom
mov
aas
inc
lahf
pop
mov
ljmp
outsl
mov
into
mov
jb
sbb
incl
jns
jns
jnp
jae
gs
xor
mov
push
mov
ljmp
mov
adc
ffree
mov
data16
daa
adc
adc
mov
in
nop
push
and
and
dec
xor
lahf
ja
fidivl
loope
cmp
imull
pop
iret
cmp
idiv
pop
cmp
add
push
adc
mov
cmp
pop
stc
push
mov
loopne
jns
and
inc
cwtl
aam
push
fstpl
or
jb
sub
cmpsb
je
ret
pop
mov
mov
push
cmp
outsb
movsl
xchg
sub
lret
jg
cs
rcr
fisubrs
push
adc
and
cmp
dec
imul
lods
emms
xor
mov
xchg
sub
pop
call
cmp
in
adc
jo
sub
fdivp
loopne
jmp
loopne
int
fnsave
xor
jle
imul
pop
je
dec
xchg
inc
das
loop
dec
fiadds
aas
dec
mov
movsb
adc
and
sub
and
lea
ret
mov
test
cs
rolb
sahf
add
adc
call
imul
push
add
lea
or
popa
loop
ror
aad
js
fimull
push
adc
lcallw
rolb
jg
mov
inc
sti
sub
cmpsb
test
decb
mov
add
push
mov
mov
rcl
inc
push
push
dec
popa
andb
out
dec
lret
fidivrs
loop
test
pop
into
scas
pusha
push
jnp
jnp
jge
in
and
adc
and
xchg
or
data16
mov
pop
ds
xlat
or
and
into
push
jb
scas
sub
fs
ss
mov
mov
stos
mov
fbstp
lods
xor
xlat
fdivr
ljmp
scas
inc
ljmp
push
inc
imul
fadd
mov
and
adc
push
push
mov
jo
loop
pop
mov
int3
retw
in
adc
inc
dec
xor
pop
adc
xor
test
push
sbb
fsts
pop
stc
jno
iret
es
rcll
sbbb
movsb
inc
xor
mov
std
shlb
enter
nop
pop
xor
pop
sub
aas
rclb
cmp
je
mov
mov
sbb
outsb
xchg
xchg
sbb
xchg
movb
add
rclb
pushf
cmpsl
and
mov
add
mov
add
call
adc
dec
push
add
out
ljmp
xchg
aam
and
inc
pop
or
push
xlat
aaa
pop
sbb
fwait
mov
lods
fisttps
rorl
das
mov
movsb
lret
ret
outsb
cmpb
jns
js
cmpsl
lods
xor
dec
push
cld
je
shl
jb
jne
cwtl
in
dec
hlt
cld
pop
movl
inc
mov
or
fnstenv
adc
dec
jno
movsl
sarw
ret
mov
cmpsl
loopne
xchg
lock
leave
adc
mov
mov
pop
pop
jmp
push
outsb
xchg
adc
cmp
xchg
scas
imul
inc
mov
push
fdivrs
sbb
mov
frstor
pop
loopne
insl
add
or
cmp
add
js
pop
out
jbe
ljmp
test
mov
hlt
mov
lea
test
add
sub
subb
push
push
add
sub
push
adc
mov
notl
cld
pop
adc
pushf
jp
dec
pushf
cmp
imull
mov
leave
lods
es
and
push
dec
push
and
rclb
scas
push
pusha
push
aad
mov
sub
lods
push
into
call
dec
push
fidivl
mov
lcall
aad
cs
cli
lret
cmp
mov
mov
fimuls
cwtl
fwait
shll
out
push
pop
orl
ss
fsts
inc
sar
sahf
mov
jmp
lods
cmc
pop
inc
and
pop
and
loop
xor
test
stos
repz
lods
lret
fimuls
jecxz
xchg
cmp
fucomp
sarl
xchg
push
and
or
iret
test
sub
jnp
sahf
and
adc
adc
xchg
int3
in
cmp
mov
mov
adc
int3
arpl
clc
inc
mov
dec
push
lret
cmp
shlb
movsl
popf
test
or
ret
adc
popa
inc
js
test
push
cli
mov
dec
jb
sub
loop
or
add
mov
clc
pop
and
pop
ss
push
push
pushf
mov
dec
repnz
pop
mov
add
cwtl
outsb
push
in
add
and
movsb
mov
std
mov
mov
test
jnp
out
rcr
loopne
jne
mov
andb
push
mov
insb
add
rorb
and
mov
into
pop
adc
test
clc
aaa
test
mov
in
repz
scas
mov
imul
negb
lret
fldcw
fsub
andps
lock
cld
mov
ss
mov
insl
add
rcrl
mov
int
mov
clc
dec
js
mov
xchg
xchg
pop
out
lods
or
inc
ret
rol
cmp
mov
push
jns
inc
imul
and
mov
sti
fsub
cmpsl
sbb
pop
or
push
adc
jnp
lods
pop
xchg
testl
fs
mov
bnd
popa
mov
xchg
dec
pop
adc
sub
cmp
out
or
inc
in
in
add
ss
mov
jno
xor
add
inc
push
jmp
xchg
into
mov
jecxz
and
mov
mov
xorb
dec
rorl
mov
in
pop
out
jo
dec
xchg
loop
inc
rcl
aad
push
arpl
xor
sub
add
adc
clc
ss
pop
cmp
iret
mov
iret
mov
and
jns
mov
cmc
movsl
out
movsl
cmp
mov
enter
and
outsb
movsb
push
bound
sbb
dec
cmp
js
or
mov
jbe
push
xor
mov
sarb
sbb
dec
pushf
stos
icebp
hlt
push
pop
cmc
aad
aaa
stos
add
jno
dec
rcll
pop
into
mov
cltd
mov
into
push
dec
lcall
popa
testb
dec
xchg
loop
je
sbb
cltd
xor
adc
sub
cmp
push
loopne
xlat
mov
sti
jg
mov
das
sahf
cltd
inc
mov
incb
mov
xchg
movsb
add
sub
cmc
rolb
call
out
pushf
mov
addb
iret
leave
fcomp
je
into
pop
or
popf
incl
clc
je
add
inc
jge
ljmp
rol
lock
into
data16
cs
mov
inc
movb
jmp
push
pop
or
and
ljmp
out
movsl
and
xor
push
cmc
ss
sub
xor
add
add
je
int
mov
es
inc
repnz
mov
dec
mov
fdivrs
lret
imul
daa
sub
les
lock
fwait
cmp
retw
cmp
sbb
data16
lahf
push
jno
int
imul
test
cmp
repnz
sbb
sets
stc
ficomps
dec
pop
adc
or
jnp
sbb
leave
cli
cmp
dec
insb
lods
ret
sbb
xor
dec
xchg
gs
fistl
lahf
fsub
inc
repnz
jmp
pop
push
jns
sbb
lea
sbb
or
xchg
loopne
mov
mov
adc
mov
ret
ret
jo
bound
fcoml
push
enter
mov
inc
and
jo
call
hlt
jl
pop
mov
daa
pop
jecxz
lods
mov
sub
jl
jne
adc
ljmp
aad
aaa
xchg
push
loopne
pop
adc
mov
pop
dec
xchg
sub
out
xor
mov
ja
and
jne
pop
and
js
inc
xor
pop
pop
mov
dec
sub
sahf
pop
xor
cli
mov
push
fcmovnu
xchg
push
shll
shl
ret
xor
jle
aad
cld
filds
scas
cmp
xor
fidivl
cmpb
xchg
push
pop
leave
fs
sub
lock
scas
ja
xchg
or
mov
mov
jmp
ret
enter
mov
jle
push
stos
cwtl
in
or
popa
rol
test
les
pushf
in
aad
mov
jae
xchg
fidivrs
ret
fdivr
popa
cmp
je
lods
add
shr
pop
iret
or
adc
mov
and
inc
sbb
dec
adc
iret
push
add
sbb
sub
dec
repz
fdivp
mov
in
popf
out
jmp
scas
pop
mov
sbb
pop
data16
jno
fcomps
mov
inc
fwait
sti
shlb
fistps
lahf
xor
mov
lret
pop
cwtl
fcompl
aad
sbb
cmp
xchg
icebp
lret
push
xchg
decb
ljmp
sub
incb
outsl
or
push
pushf
inc
loope
push
sar
xchg
out
sahf
jecxz
cs
pop
sub
in
rorl
shrb
jecxz
fistpl
sub
test
adc
dec
mov
xor
mov
outsl
sub
cmp
negl
dec
inc
popa
sti
fs
push
fadd
push
lcall
mov
pop
repz
cwtl
fucomp
enter
mov
dec
mov
pop
push
jno
mov
push
ret
push
inc
mov
out
cmpsb
pop
stc
scas
sti
xchg
or
mov
pop
add
mov
imul
mov
mov
push
outsb
or
pop
sti
mov
loope
lods
enter
xor
xchg
idivl
out
loope
push
loopne
lret
out
push
push
mov
insb
add
mov
mov
mov
leave
jmp
aad
andl
jb
cli
outsb
pop
gs
jl
cmpsl
mov
mov
mov
outsl
cmpsb
mov
inc
lods
dec
inc
ds
sbb
mov
mov
add
ss
rol
in
inc
jmp
sbb
lods
scas
inc
inc
xor
push
cli
jb
outsb
int3
cltd
lock
sarb
ficompl
incb
mov
aad
add
iret
or
in
pop
jae
xor
rorl
fnstsw
outsb
aad
and
inc
into
adc
rcrl
or
lods
and
daa
push
stos
pop
pop
lahf
arpl
pop
push
aad
clc
into
sub
fisttpl
pop
call
jnp
sub
pushf
in
adcl
add
adc
and
cltd
js
and
fldcw
adc
rclb
jns
int3
xor
push
adc
sbb
into
xor
enter
mov
push
jecxz
xor
jno
adc
in
fdivr
aad
ret
or
pop
adc
sub
imul
dec
push
mov
pop
or
mov
push
inc
push
pop
aas
pop
cmc
aam
jecxz
rcrb
and
sub
push
or
dec
pop
inc
add
mov
xadd
push
das
push
aam
pop
icebp
outsb
mov
mov
lcall
or
adc
fpatan
mov
mov
pop
dec
jecxz
fnstenv
repnz
fldcw
dec
pop
sub
push
pushf
jmp
jo
dec
sub
mov
mov
xor
mov
movsl
in
or
std
ja
loope
xchg
icebp
mov
mov
and
jae
mov
aas
stc
js
daa
adc
jmp
sub
or
mov
dec
push
push
or
jmp
aad
add
and
repnz
fimull
cmp
xchg
sub
scas
ljmp
cwtl
jns
cmp
mov
push
scas
in
adc
jl
mov
xor
int3
subl
lods
aam
sub
xchg
lret
dec
sbb
inc
test
out
ds
insb
mov
adc
loop
push
je
in
jns
pop
jmp
mov
mov
mov
lods
xchg
inc
mov
enter
push
mov
xor
mov
pop
sbb
fildll
icebp
dec
lret
dec
hlt
dec
adc
shll
sub
mov
lahf
cmp
cld
repnz
test
in
or
aam
mov
outsb
mov
push
dec
ljmp
dec
sbb
test
bound
imul
mov
ja
dec
sahf
adc
push
jmp
popf
adc
iret
pushf
insl
pop
add
rcrl
movsl
outsb
push
je
scas
inc
mov
daa
mov
nop
mov
jae
and
or
outsb
cmp
cmc
pop
leave
enter
push
test
outsb
pop
les
adc
xrelease
shl
cmp
cltd
xor
mov
fsts
sub
pop
lahf
out
sub
ret
or
mov
repz
jno
fwait
or
sub
enter
and
andl
andl
out
arpl
lods
imul
jnp
pusha
cmp
cli
mov
movsb
pop
push
pushf
mov
clc
xorb
push
shl
or
add
iret
nop
shl
les
shlb
add
sbb
movsl
fdivl
sahf
into
xor
mov
or
jno
mov
les
mov
mov
addr16
setno
sbb
hlt
iret
lods
mov
and
iret
sbb
paddq
or
xchg
out
inc
int3
sub
mov
and
lds
inc
shlb
scas
outsl
or
mov
pop
test
test
je
lock
std
pop
mov
dec
xor
data16
lahf
cmp
sub
out
shlb
xchg
and
sarb
test
push
dec
pusha
xchg
fwait
cmc
xchg
ficoms
into
out
mov
sahf
add
inc
aad
or
sbb
repnz
lret
mov
test
xchg
xor
push
mov
inc
std
xchg
gs
pop
xchg
in
pop
xchg
ret
mov
xchg
lock
cmpsl
jb
adc
or
push
xorb
outsb
jmp
shrb
and
das
mov
scas
jl
inc
lret
cli
adc
clc
jp
shlb
dec
pushf
dec
lcall
or
je
fdivr
adc
push
jo
pop
and
jmp
pop
and
push
mov
fidivs
out
xchg
add
jle
aad
rolb
insl
outsl
adc
stos
shrl
scas
scas
rcr
sub
push
shlb
xor
dec
push
push
inc
sbb
inc
push
mov
notb
mov
inc
sbb
sbb
in
jl
ss
jae
mov
inc
fwait
in
inc
push
imul
xor
mov
xchg
inc
test
js
cmpsl
in
rcrb
leave
pop
lret
hlt
push
dec
testl
dec
push
mov
in
movsl
jne
sub
push
and
pop
nop
mov
xor
test
rcl
cld
and
sbb
movsb
mov
lret
aam
sbb
outsb
dec
and
pop
inc
iret
mov
ds
mov
nop
dec
or
js
sub
mov
sub
pop
rclb
dec
je
pop
stos
andl
aas
insl
xor
loop
lret
mov
cmpsb
rolb
mov
insl
xlat
add
cld
std
in
jecxz
aad
dec
sbbb
cmp
loopne
mov
xchg
lods
or
fstps
rorl
mov
loopne
mov
mov
xlat
add
mov
loope
loopne
adc
jns
push
jg
xorb
fldt
cmp
adc
orl
sbb
jp
or
jbe
or
push
inc
sub
cmpsw
jns
inc
les
faddl
outsl
shll
jae
pop
push
shl
shl
inc
jp
std
mov
cwtl
cmpl
ret
outsb
subl
and
test
mov
push
insb
cmp
scas
adc
add
lods
adc
ret
sahf
xor
adc
cmp
les
clc
or
dec
and
sbb
mov
xchg
sub
aam
add
xchg
xchg
push
sarl
frstor
add
popa
lret
xlat
or
imull
ret
or
js
outsb
int
lret
xor
jle
pop
pusha
and
cmpsl
dec
gs
push
push
lahf
xchg
les
outsb
push
imul
repz
ljmp
pop
and
mov
ret
or
push
sub
outsl
sub
rolb
arpl
popa
cmp
and
movsl
sub
mov
jae
mov
jnp
fstp
pop
push
iret
hlt
adc
xchg
xchg
pop
lds
sbb
push
jae
and
stos
mov
push
clc
in
sub
rolb
inc
es
into
sub
adc
imul
repz
insl
cwtl
and
adc
or
fsubrp
inc
jb
jne
push
sub
in
in
or
mov
nopw
and
and
ja
push
sbb
dec
into
repz
or
in
cmp
lds
pop
push
pop
push
outsl
mov
adc
pop
outsl
xchg
outsb
pop
pop
mov
mov
cltd
sub
mov
xor
fidivs
adc
dec
int3
cmp
xchg
dec
xchg
repz
push
sbb
imul
jnp
clc
sarl
loop
lret
push
out
xor
fistps
mov
sarl
leave
pop
xor
ficompl
dec
test
int
fs
fwait
es
cmpsl
ljmp
ljmp
mov
cmpsl
jbe
jg
xchg
fdivl
xchg
nop
push
sbb
scas
mov
jo
outsb
pusha
out
xor
insb
aad
popf
pop
cltd
fldenv
pop
aad
dec
adc
out
jb
shll
mov
jns
lods
mov
and
or
mov
mov
or
mov
in
and
fucomp
sub
or
inc
dec
rcrb
pop
xor
fcmovbe
jae
imul
nop
xor
push
int
int3
subb
jp
mov
fisubl
push
pushf
pinsrw
mov
add
test
into
sbb
in
shrb
mov
clc
leave
mov
jmp
push
jne
cmp
push
push
mov
jbe
imul
cmp
lahf
aaa
roll
inc
ret
imul
xor
test
loop
lret
test
in
neg
pop
je
int3
movsb
xchg
inc
lock
pop
ja
test
dec
xchg
mov
ret
mov
inc
xor
lcall
movsl
mov
xchg
jg
ror
jne
pop
xchg
mov
inc
xor
insb
cld
out
imul
adc
int
or
push
in
mov
andl
xchg
dec
mov
and
fs
push
lret
jl
dec
mov
repz
clc
movb
iret
mov
jo
test
or
call
dec
aaa
or
hlt
or
push
and
dec
jge
push
add
movsb
or
loope
mov
xchg
adcb
cmp
aaa
pop
add
cmc
stos
scas
enter
leave
test
mov
lret
push
ret
mov
xor
sbb
push
mov
arpl
dec
push
push
repz
lods
incl
fistpll
cmp
jle
pop
ja
pop
rcrb
aas
fs
jb
add
imul
test
adc
pusha
inc
enter
std
mov
repnz
call
call
push
push
in
adc
aas
into
fdivl
stc
inc
mov
sahf
test
jb
cmp
int3
popf
xlat
push
std
dec
dec
imul
inc
jle
iret
push
lret
es
fistps
je
pushf
das
xor
dec
insb
and
push
jns
loopne
arpl
lahf
in
in
xor
and
loope
mov
cmp
dec
and
push
fld
mov
cli
sub
pop
mov
std
mov
dec
sub
sub
mov
inc
data16
pop
gs
ja
cld
lahf
enter
inc
rclb
mov
inc
movsb
and
aaa
or
add
movsb
cs
xchg
pop
and
and
xchg
andl
mov
imul
fisubl
ret
shlb
push
daa
mov
inc
cmp
xchg
into
fwait
rcl
dec
rorb
stos
or
dec
pushf
inc
jne
xor
les
in
fcmovbe
sbb
aas
cmp
cmp
or
sbb
push
mov
dec
push
scas
mov
and
xchg
dec
jb
inc
xor
lret
addr16
inc
pop
test
jg
pop
inc
or
mov
pop
jbe
adc
pushf
pop
add
add
sub
mov
or
xchg
xchg
fiaddl
xlat
xchg
dec
sti
jae
mov
xor
insl
repnz
pop
or
notl
fimull
test
sub
push
rcrb
jg
pop
clc
call
sub
inc
addr16
scas
jae
movsb
ljmp
fiadds
add
jo
mov
lahf
pop
mov
in
fs
lea
daa
pop
inc
and
stos
xchg
arpl
and
test
orb
push
adc
mov
xor
fldcw
das
dec
cs
cmp
test
lcall
cld
cmpsb
jae
mov
dec
mov
in
xchg
mov
out
out
push
cs
in
test
rolb
jp
mov
cwtl
adc
mov
stos
mov
pushf
pop
push
clc
repnz
stos
sub
iret
lret
out
or
pusha
mov
sbb
rclb
in
dec
shrb
lods
cld
insl
sbb
bound
jge
mov
jae
mov
jnp
cbtw
lds
insl
xchg
mov
add
jnp
test
les
push
stc
stos
xchg
push
mov
cmp
dec
and
lahf
lahf
in
pop
sbb
stos
mov
into
cwtl
mov
xor
push
je
pop
mov
pop
daa
nop
in
cwtl
lods
mov
mov
cltd
sbb
jge
mov
pop
jnp
sbb
and
mov
mov
xchg
cmp
push
aaa
shll
push
pop
imul
imul
xor
push
mov
arpl
mov
stos
mov
add
hlt
in
sbb
sub
or
jne
inc
add
roll
dec
pop
decl
sbb
pop
lods
pop
lahf
xor
popf
lds
orl
xchg
idivb
jns
adcb
adc
dec
or
cmp
jae
in
pop
es
xlat
push
scas
stc
cwtl
jno
cmp
movsb
xchg
dec
fidivrl
pop
aas
cwtl
std
mov
cmp
into
mov
enter
adc
adc
fst
xorb
bound
and
or
pop
add
sahf
lret
lahf
cmpsl
or
push
jnp
out
pop
push
sti
and
mov
aam
inc
push
outsl
vfrczss
sub
test
add
into
jns
sub
mov
xchg
mov
int3
cwtl
dec
iret
jg
cmp
add
stos
in
mov
xor
lret
dec
push
cld
stc
mov
sbb
jle
xor
xchg
or
inc
push
jg
cmp
cmpsb
rorl
pop
call
nop
xchg
pop
cmp
pop
roll
push
in
or
mov
cmc
mov
adc
movsb
inc
inc
xchg
jbe
subl
js
add
dec
inc
scas
and
add
aam
jecxz
adc
mov
orl
xchg
cmp
mov
data16
lret
movsb
mov
adc
outsb
ljmp
xchg
out
cwtl
inc
orl
loop
cld
pop
cmpl
sbb
lods
xor
mov
lcall
es
pop
sbbb
mov
in
mov
stc
sbb
dec
mov
shl
inc
mov
xor
in
gs
mov
in
incl
les
jns
fmuls
daa
push
add
sub
push
xchg
lret
ss
int
mov
push
adc
push
mov
xchg
add
in
mov
add
imull
add
inc
add
jae
inc
jl
ds
loopne
xchg
pushf
push
int3
int
mov
mov
scas
mov
jge
repnz
mov
or
insb
lock
lds
negw
arpl
out
js
mov
cmpsb
pop
dec
pop
push
jecxz
sub
orb
sbb
aad
dec
mov
jg
int
mov
sbb
cmp
and
xchg
inc
orps
mov
dec
mov
sub
xchg
popf
jno
mov
xlat
aaa
xor
jmp
xor
adc
repnz
addr16
mov
dec
or
movb
dec
lods
pop
cltd
sbb
imul
xor
mov
sti
adc
or
xchg
nop
cmp
add
idiv
add
enter
pop
and
imul
iret
pop
int3
jb
sub
push
iret
int
push
dec
dec
aam
mov
sbb
cld
cmp
mov
ja
mov
cltd
lods
loopne
and
sub
or
call
adcb
add
icebp
mov
xor
jl
aad
inc
imul
mov
pop
insl
sub
add
mov
push
xor
pusha
or
dec
pop
shll
cmp
jp
cld
sbb
pop
gs
jg
fbld
mov
negl
leavew
xor
nop
sub
lock
iret
cmp
jae
movsl
cmp
adc
unpckhps
mov
bound
roll
jb,pn
test
loop
mov
stos
stos
adc
outsl
lcall
subl
pushf
lods
jnp
sub
push
dec
jnp,pn
cld
mov
cltd
xchg
mov
notl
dec
pop
insb
cmp
jge
or
aam
jg
test
fwait
pushf
mov
xchg
mov
pop
sub
pushf
dec
mov
push
pop
or
lret
bound
sub
pop
xchg
or
das
add
scas
into
lods
push
inc
jno
sub
dec
movsl
adc
xor
cmc
jg
addb
xchg
in
cmp
push
setae
pop
shll
out
mov
adc
sub
mov
lods
xchg
pop
sub
popl
js
movsl
jp
xlat
lret
xor
lods
int
mov
pop
fiadds
pop
xor
stos
lods
lahf
je
push
add
sbb
xchg
adc
inc
stos
rorb
push
aam
push
and
or
into
nop
sub
inc
out
cmc
mov
mov
jecxz
sbb
mov
xchg
cltd
inc
arpl
dec
mov
subl
jmp
sahf
mov
filds
in
add
popf
in
mov
ret
in
mov
cmp
cmpsb
mov
test
fnsave
xor
pop
mov
mov
jbe
mov
iret
repz
push
data16
movsl
shlb
out
adc
frstor
push
jl
jle
in
fs
jge
push
mov
and
and
sub
sbb
rcl
test
nop
out
lods
fsubs
cltd
dec
scas
push
jp
and
and
mov
in
imul
push
test
les
subb
adc
adc
bnd
and
decb
jae
cmpsb
fldl
push
xchg
ja
pop
dec
dec
xor
divl
addr16
cmpb
xorl
mov
lods
fwait
xchg
mov
lret
bound
sub
leave
dec
xor
sbbb
dec
enter
js
int
and
push
mov
xor
push
add
shlb
cli
cmc
jae
jae
jae
mov
jmp
fiaddl
in
inc
push
addr16
sub
push
cltd
and
xor
stos
inc
sarb
fnstcw
pushf
xchg
and
mov
ljmp
xor
les
out
fistpl
pop
sbb
jmp
lahf
cmp
dec
jno,pt
xor
dec
sbb
jle
test
inc
lret
mov
mov
repnz
cmpsb
mov
shr
pusha
lahf
lods
jmp
mov
mov
fs
sbb
ja
cmp
testb
lret
sbbl
sbbb
xchg
stos
std
mov
jge
repnz
inc
push
or
dec
int
or
mov
jle
sub
jp
nop
ds
mov
sub
xor
mov
and
popa
mov
jns
push
mov
sub
dec
cmp
fwait
outsl
xor
push
stos
lahf
test
sub
pusha
in
out
dec
je
movsl
pop
mov
imul
push
sub
inc
movsb
cld
lea
jnp
out
das
dec
pop
xor
push
inc
dec
iret
xor
lds
icebp
mov
mov
notl
mov
dec
and
jg
into
cmpsl
cmp
lods
hlt
hlt
sub
daa
fcomps
lahf
mov
test
add
mov
adc
xor
or
mov
or
popa
sub
sbb
adc
cmp
xchg
xor
es
popa
sbb
nop
dec
sub
fadd
cltd
pop
fsubs
xlat
js
pop
push
push
inc
mov
mov
jmp
xchg
int
add
js
adc
loopne
and
xorl
rol
inc
sbb
sbb
gs
pusha
lcall
inc
push
jmp
movsl
or
in
mov
inc
push
push
add
rolb
mov
jns
in
or
cmc
in
pop
xor
das
lds
idivb
into
and
repnz
sub
fdivrs
mov
roll
sbb
fbld
test
in
cwtl
push
inc
mov
call
test
sub
pop
shl
mov
out
or
es
mov
fstps
xchg
and
jbe
dec
mov
xchg
mov
push
mov
and
pop
andb
inc
lods
cmp
data16
mov
add
fildll
pop
repnz
test
sahf
jmp
mov
scas
cmp
or
or
add
leave
outsb
js
setbe
cmp
in
loop
loope
movswl
jno
mov
addr16
shl
es
push
mov
sub
push
dec
push
and
push
inc
les
mov
inc
ja
dec
adc
mov
nop
scas
jmp
lods
sub
daa
jbe
ds
imul
mov
and
push
sahf
fnstcw
ficomps
insl
out
cltd
clc
mov
or
push
test
ret
ja
aad
push
sbb
fadds
jae
andb
add
enter
cmc
mov
gs
or
mov
mov
pusha
pop
adc
mov
jecxz
aas
dec
leave
mov
rorl
and
lret
xchg
dec
mov
inc
pop
sub
push
mov
mov
xor
pushf
lcall
ficoms
push
pusha
daa
cs
rcrb
fs
mov
sbb
mov
mov
mov
outsl
jbe
cmp
sbb
loop
sbb
das
xorb
dec
icebp
jg
inc
xchg
mov
and
inc
test
and
xlat
out
loopne
add
mov
mov
out
push
dec
cmp
and
icebp
outsb
pop
add
sub
sbb
sbb
or
ss
and
jecxz
inc
es
cmc
inc
stc
mov
enter
clc
dec
adc
fbld
sbb
adc
add
adc
add
aas
loopne
repz
push
cmp
sbb
je
adc
pop
iret
lea
test
dec
mov
pop
and
bound
sub
enter
cmc
xor
in
insl
xor
pop
pop
fidivl
clc
lcall
aas
rclb
mov
popf
and
and
sti
cmpsl
push
ret
subl
ficompl
and
dec
push
sub
sbb
push
movsb
fwait
jl
adc
mov
arpl
iret
push
xlat
loope
ss
dec
pop
xchg
jp
out
scas
fdivs
xchg
jle
addr16
sbbb
dec
jmp
jp
jae
test
jo
sti
push
lods
jne
fs
add
jbe
sub
jns
push
bound
sub
dec
and
push
popl
sub
mov
mov
mov
mov
sbb
hlt
xchg
xchg
out
pop
jge
xlat
stos
mov
lret
push
pop
jne
xchg
sahf
mov
pop
and
xor
jl
mov
sub
jne
sbb
icebp
or
jb
es
cmp
inc
cmp
fimuls
imul
fldt
jns
sbb
js
into
std
sbb
mov
loop
enter
adc
fs
mov
or
push
and
cmpsb
orb
lock
cmc
add
mov
xchg
data16
cmpsb
or
das
popf
out
es
mov
shlb
inc
lock
lods
lret
test
dec
mov
push
xlat
jg
jbe
adc
imul
xchg
xchg
repnz
leave
xchg
jno
rorl
sbb
fnsave
repnz
dec
sarb
out
sbb
xchg
xlat
js
cmpsb
sub
cli
push
jge
jle
shll
jae
call
cmp
xchg
pop
dec
shr
and
iret
cmpsb
cmp
ljmp
scas
rol
popl
pop
push
mov
bnd
cli
sahf
mov
scas
aam
popf
pushf
push
add
std
mov
rolb
mov
insb
into
dec
cld
aaa
ret
jg
or
mov
out
mov
stos
add
sbb
and
shl
xor
mov
roll
add
dec
fwait
push
les
sbb
push
add
jmp
stos
cmp
fdivs
dec
fcomp
xor
sub
or
outsb
ss
rorb
movsb
mov
or
mov
push
fistpll
sub
clc
sbb
push
test
subl
pushf
xchg
adc
mov
push
out
xchg
nop
cmp
sub
notl
cld
mov
mov
push
es
cmp
ficomps
add
hlt
daa
pop
cmc
sbb
mov
add
sti
stc
xchg
stc
pop
push
xor
cmp
sub
sar
pop
push
cmp
xchg
and
inc
xor
iret
push
popf
mov
xor
and
lea
xor
or
pop
cmp
aas
lret
enter
jno
dec
mov
push
cli
cmp
cmp
out
aas
jb
and
andb
andl
fsubrl
pop
loop
out
and
movsl
sahf
aad
lcall
in
or
or
inc
call
and
cmp
dec
cmpsb
outsl
jnp
xor
sbb
xor
xor
xor
jns
sti
xor
pop
in
fmull
inc
dec
mov
inc
xlat
and
push
push
inc
push
pop
push
pushw
xlat
add
xchg
or
pop
ror
lret
mov
lods
mov
push
mov
inc
movsb
test
cmp
cmp
pop
ror
jne
cmp
lods
fiaddl
jb
inc
jno
movsl
jl
adcl
sub
xor
sbb
ret
lahf
in
test
add
scas
xchg
pop
adc
sti
push
sub
icebp
inc
ss
filds
fcmovb
mov
es
fs
adc
xchg
sahf
xor
inc
jae
aam
fistpll
adc
in
inc
cwtl
sbb
pop
sbb
lcall
push
push
lds
and
test
adc
pop
bound
pusha
xchg
xor
xchg
xchg
and
cmpsb
lahf
add
pop
add
sub
mov
sarb
xchg
roll
push
mov
mov
les
jmp
ljmp
sub
sbb
xor
mov
aam
mov
push
fcomps
daa
adc
mov
fdivl
test
sbb
or
mov
pop
xor
cmpsb
fidivs
shlb
sahf
inc
gs
jg
ret
xor
cmpsb
clc
lret
xchg
dec
stos
aam
cmc
inc
mov
or
xor
ret
fildl
jl
dec
mov
adc
adc
test
xchg
inc
inc
imul
lea
in
dec
scas
andl
or
xor
jmp
dec
ja
push
mov
and
push
mov
push
mov
popf
aam
jne
out
or
or
and
lods
in
out
add
jo
ret
ret
dec
jbe
cmc
jle
icebp
test
jle
ficomps
cwtl
push
nop
lret
mov
jne
sub
add
and
movsb
inc
inc
cwtl
dec
push
mov
dec
sbb
cmc
pop
and
adc
and
and
lock
scas
add
sub
std
daa
cmpsb
jnp
dec
jb
dec
and
push
icebp
in
pop
xor
outsb
mov
jne
je
jp
arpl
xchg
fisttpll
xchg
xor
out
pop
stc
adc
aaa
dec
xchg
mov
xchg
repnz
xchg
dec
lret
das
mov
je
nop
pop
andl
dec
inc
push
shlb
mov
push
bound
in
xor
repnz
cld
pop
add
push
in
push
mov
insb
cmp
popa
push
dec
xchg
and
sahf
shlb
pop
mov
scas
outsl
adc
or
inc
mov
xchg
jecxz
mov
or
xchg
fdivl
add
imull
fists
push
adc
sti
fidivl
jl
sub
push
sahf
cltd
mov
inc
mov
lea
pand
les
xchg
cld
pop
cmp
xor
stos
push
cli
pop
test
adc
push
xchg
fwait
or
clc
pusha
mov
data16
adc
xor
insl
pushf
repnz
inc
cmp
jmp
into
xor
mov
sub
outsl
xchg
and
xor
cmp
jge
mov
add
clc
or
imul
out
out
sti
push
xor
inc
fisubrl
sub
cmpsw
test
out
scas
icebp
call
mov
idivl
xchg
test
mov
xchg
clc
mov
mov
mov
lea
cltd
add
xchg
cwtl
sub
and
out
push
movsl
fs
and
mov
jle
mov
sarl
jmp
mov
sbb
push
outsl
mov
xchg
fwait
mov
lods
pusha
inc
push
push
out
lret
aaa
movsb
es
mov
popa
sahf
fmul
cs
outsl
cmp
fcmovu
cmc
lret
cli
sbb
adc
sub
test
pop
scas
push
jmp
add
movntps
lods
mov
mov
cmp
daa
xchg
xlat
ds
jge
dec
inc
and
popf
xchg
mov
inc
xor
clc
aas
pushl
xchg
jae
bnd
in
push
lret
mov
adc
enter
cld
icebp
xchg
loop
sub
jp
and
and
mov
inc
jle
cmp
mov
loope
push
cmp
push
sub
push
lret
nop
push
stos
pop
andb
mov
cmpl
mov
jo
xchg
mov
sbb
mov
pop
scas
iret
sub
and
xchg
data16
iret
dec
jb
cwtl
push
sbb
xor
leave
pop
push
xor
fimuls
data16
adc
test
xchg
mov
pop
rorb
and
in
enter
mov
lods
mov
test
dec
or
or
neg
add
ret
push
jmp
adc
sub
jle
addr16
jns
lcall
adc
mull
movsl
std
and
sbb
inc
data16
sbb
mov
lahf
insb
js
sub
mov
mov
pushf
xchg
ret
sbb
or
mov
int3
jne
xlat
scas
lock
bsf
mov
pop
sub
and
dec
in
in
mov
mov
imul
jge
stos
fcoml
sub
jp
fdivs
rolb
jns
push
out
mov
ret
adc
or
in
mov
jbe
xchg
push
pop
test
int3
popf
notb
or
push
sahf
sahf
call
and
ljmp
xchg
ss
and
cmc
call
push
xor
cmp
add
mov
mov
pop
sub
jnp
fistpll
add
rorl
add
fdivp
pop
insl
shlb
push
insb
add
lahf
scas
je
dec
adc
scas
lock
daa
mov
subb
mov
xor
mov
jp
dec
adc
call
pop
in
adcb
xchg
add
adc
jns
les
sub
push
lret
inc
mov
pop
inc
jg
mov
subl
sbb
sub
mov
adc
cld
in
fcoml
int3
fsubrs
inc
test
stos
jb
or
outsl
jno
gs
test
xchg
sahf
cmc
popa
jns
jle
hlt
jo
imul
cli
adc
mov
dec
int3
aad
in
xchg
mov
inc
out
xor
mov
push
sub
jns
pusha
andl
imul
mov
mov
jnp
fildll
add
movsl
enter
aam
popf
mulb
cmp
jp
inc
dec
test
push
adc
subb
rcrb
jns
pop
mov
lret
fsubr
fcmovnu
push
sbb
orl
das
popf
jl
loopne
mov
cmp
or
push
adc
in
clc
ja
arpl
in
je
mov
filds
dec
inc
popf
or
jecxz
or
mov
stos
add
nop
push
ret
fisubrs
mov
ljmp
ss
jns
jecxz
in
jg
dec
xchg
push
adc
imul
xchg
xchg
adc
push
fwait
dec
add
xor
mov
repnz
mov
xor
sub
pop
push
lret
sti
mov
jb
and
jp
dec
dec
fiaddl
imul
inc
inc
mov
mov
adc
xor
push
jl
inc
mov
imul
in
or
mov
loope
cmp
mov
shl
pop
pop
lret
inc
rorl
movsb
adc
decb
and
rorl
jl
push
xchg
cmp
sbb
dec
in
xchg
out
or
inc
repz
leave
pop
lods
cmp
push
ss
inc
mov
push
sub
popf
cmp
fstpl
jno
stos
sbb
out
dec
push
sub
stc
je
es
lods
shll
push
dec
add
fcomp
pop
mov
sbb
outsl
jecxz
nop
mov
mov
adc
jmp
pop
adc
mov
add
adc
sahf
mov
dec
lods
mov
mov
sub
pushf
scas
push
fisubl
cwtl
jp
cmpb
faddp
mov
push
cs
jbe
xor
shrl
jo
jne
xchg
scas
movsb
cld
jae
mov
shrl
into
imul
xchg
or
repnz
jg
in
test
stc
lea
loope
xchg
popf
cmp
mov
sbbl
or
mov
sbb
sbb
mov
nop
mov
cld
loopne
and
jne
cmp
rcrb
insl
or
out
pop
aaa
mov
hlt
cmp
sub
lock
adc
sbb
jge
mov
stos
imul
sbb
or
out
sbb
jnp
fs
out
cmpsb
lods
xchg
pop
xorb
ds
incl
fldt
out
push
inc
push
gs
lret
xchg
mov
xchg
inc
sbb
mov
cmp
and
push
pushf
mov
out
test
outsb
or
sbb
push
inc
and
fs
ljmp
sbb
mov
xor
mov
ffreep
movsb
pop
and
pushf
push
inc
cmp
inc
inc
push
cld
ret
jnp
dec
pop
sub
pop
pop
sahf
mov
sub
aam
cmp
jmp
pop
dec
adc
mov
fs
lret
push
cmp
fbld
push
sahf
into
dec
and
sahf
test
lods
cmpsl
sub
sbb
cmpsb
aam
lods
mov
dec
fisttpl
dec
in
cmp
je
jp
movsb
inc
inc
cmc
shll
push
decb
je
pushf
pop
repz
insb
int3
popf
xchg
xchg
movsl
mov
popf
adc
popf
xor
adc
call
mov
xor
add
xchg
mov
dec
into
cs
push
push
mov
jl
rclb
mov
xlat
jnp
fsubl
repz
or
cmpsb
shll
bound
mov
das
lods
fildll
fstl
mov
inc
adc
aad
rclb
fs
scas
add
arpl
js
mov
mov
loopne
ljmp
movsl
inc
mov
add
push
inc
imul
xchg
outsl
aas
xchg
fisttps
xorl
outsl
cltd
pop
cmp
sarl
jne
je
cwtl
cmpsl
dec
ret
lods
sub
inc
shl
mov
jp
fistl
and
int
cmp
sbb
pop
scas
mov
xchg
xchg
xchg
cs
push
xchg
scas
setnp
insb
rcll
mov
mov
push
xchg
jae
sahf
jbe
jp
add
out
ret
cmpsl
mov
cmp
xchg
adc
sahf
push
and
das
cmp
insb
js
scas
add
inc
mov
xchg
push
and
test
push
aaa
xlat
push
push
pop
jmp
push
pop
in
rcll
scas
ljmp
and
jo
jne
addr16
out
jge
mov
xlat
hlt
popa
dec
int
dec
cld
push
stos
jle
xor
enter
or
sbb
cmp
pminub
fstps
pop
out
jne
xor
scas
aam
inc
jae
cmp
sbb
stos
mov
iret
cmp
incl
xchg
mov
das
testl
outsl
loop
lds
add
jl
add
dec
dec
rorb
mov
daa
mov
int3
popf
pushf
rorl
stos
aas
outsl
xor
arpl
fistpl
out
insl
dec
add
sahf
sub
jae
js
adc
mov
cld
shl
ljmp
aad
pop
out
dec
mov
mov
movsb
fildll
gs
mov
scas
std
xor
orb
shll
cltd
shl
add
xchg
int3
in
push
repz
stos
jecxz
mov
fwait
lea
adc
fwait
rorb
lcall
lahf
mov
and
nop
pop
mov
pop
lahf
inc
mov
add
jno
jge
sahf
clc
popf
mov
lret
movsb
lea
insb
insb
out
sub
mov
or
cld
les
ljmp
fcmove
pop
arpl
jmp
mov
in
or
cmp
ljmp
test
mov
iret
call
decl
arpl
decl
out
jg
mov
xor
and
cmp
mov
jp
inc
cmc
repnz
cld
or
js
negl
iret
adc
andb
iret
or
icebp
and
and
scas
rcll
fs
addr16
fs
adc
cmp
addr16
call
add
lea
push
das
pop
add
mov
dec
push
sbb
pop
test
mov
add
adc
stos
push
mov
cmove
pop
outsl
mov
pop
jo
or
mov
rolb
cmpl
push
cmc
sahf
dec
pushf
cwtl
pop
inc
jecxz
mov
xchg
xor
xor
push
mov
cmc
sbb
push
fldenv
push
scas
inc
push
mov
mov
rcrl
xchg
fsubrs
arpl
push
test
pop
push
and
lock
xor
lcall
pop
jle
or
jo
mov
and
jg
push
ret
pop
movsl
pop
bound
pop
or
fnstsw
or
jp
sub
or
or
in
ss
jb
and
inc
cmp
inc
fdiv
ss
int3
clc
push
cmp
test
rclb
xchg
sub
xchg
xchg
sub
mov
test
lret
hlt
loopne
mov
icebp
roll
out
rol
jnp
sti
aaa
addl
cli
pop
arpl
inc
xchg
push
movsb
imul
or
sbb
movsb
lods
push
shlb
rclb
out
popf
adc
ds
ds
xor
adc
sahf
lcall
je
out
sub
pop
sbb
and
les
aas
mov
or
repz
xchg
inc
stos
pop
icebp
xchg
lods
jle
shr
in
mov
inc
std
mov
sub
pop
das
and
stc
shl
xor
adc
xlat
pop
xor
ds
sbb
push
adc
and
xor
imul
sub
out
fcompl
push
xor
std
into
pop
sbb
scas
push
xor
fdivr
js
dec
jne
push
push
mov
ss
jne
cld
inc
sbb
int
pop
int3
stos
movsl
rcrl
mov
push
mov
ja
push
stc
inc
jno
fcmovnu
sbb
xchg
adc
mov
add
cli
pop
mov
push
mov
xlat
or
lret
adc
imul
in
nop
add
or
pop
add
fists
loope
push
sub
xchg
fwait
cmp
xchg
lret
fistpl
mov
fimuls
or
cmpsl
inc
mov
das
sar
dec
in
jb
int3
int3
mov
inc
pushf
loopne,pt
cli
inc
dec
inc
call
jge
mov
cmc
scas
jne
push
xor
cmpsb
in
lock
sbb
or
ret
insb
ja
test
imul
xor
and
lock
fstps
ret
jecxz
jmp
lret
xchg
gs
push
pop
ss
jne
repnz
dec
movsl
sub
int
cltd
push
dec
push
lea
jl
jns
scas
ja
add
mov
scas
aad
shl
push
test
push
clc
mov
aad
mov
sarl
cmc
ljmp
sbb
cltd
add
inc
icebp
sbb
loop
dec
lahf
jmp
mov
stos
add
push
stos
jl
std
repnz
dec
loopne
imul
imul
mov
mov
outsl
mov
mov
inc
push
testb
or
cli
inc
insb
ds
or
xor
pusha
inc
cmp
pushl
nop
jbe
insb
inc
mov
bound
sbb
sub
cmp
fwait
jnp
popa
xor
aad
test
pop
inc
jge
cs
icebp
in
inc
lock
scas
cmp
pusha
adc
mov
lea
push
lcall
lock
stc
je
mov
das
mov
aad
ljmp
popl
ret
or
xchg
inc
imul
js
xchg
pop
pop
fsubs
ds
cmc
jnp
ss
mov
shlb
imul
inc
sub
in
jmp
inc
inc
pop
inc
insb
scas
mov
dec
push
mov
scas
jmp
and
fsub
dec
ds
add
adc
inc
mov
cltd
loope
push
or
movsb
insl
sbb
mov
movsl
cmp
jp
dec
cli
fsub
call
pop
add
lods
jmp
sbb
bnd
hlt
sahf
pop
jg,pt
inc
or
pop
pop
xor
shlb
test
pop
sub
clc
jns
push
push
push
jne
xchg
sub
jns
add
xor
in
lds
subb
or
mov
ret
inc
clc
adc
push
mov
andb
vpshuflw
stos
push
cltd
or
add
lods
aad
add
sbb
rcl
jge
cwtl
dec
dec
xchg
add
test
inc
mov
stc
orb
mov
repz
ret
mov
jb
test
sbb
sub
jg
mov
xor
sub
outsb
jae
push
cwtl
inc
pop
int
in
mov
and
add
ja
das
popf
sub
mov
stos
jb
mov
insl
lods
adc
and
add
push
negb
add
and
mov
push
mov
gs
jne
add
inc
jmp
add
test
push
movsl
xchg
aam
adc
das
dec
daa
repz
cmp
dec
add
mov
andl
mov
inc
pop
or
movsb
mov
loopne
sbb
aam
hlt
daa
cmpsb
mov
addr16
notl
sti
cwtl
mov
or
fsts
sub
out
add
dec
jno
pop
lcall
adc
xor
ss
ficoms
inc
shrl
shrl
mov
push
add
pop
dec
jmp
add
movsb
inc
sbb
movsl
sub
jae
les
std
test
jg
loope
cli
ret
mov
cmp
mov
sti
repz
aad
pop
mov
jbe
dec
andb
lods
out
cmp
mov
test
test
fimuls
cmp
movsb
dec
ficoml
mov
xor
je
pop
cmpsl
test
js
sub
push
lds
mov
movsb
daa
sar
shlb
inc
mov
arpl
loope
cmp
daa
shrb
ja
xor
jge
fucom
mov
lret
sub
sub
cmc
frstor
dec
int
jmp
and
pop
or
out
cwtl
or
pushf
aaa
mov
mov
lds
into
fs
sbb
push
shlb
jmp
es
pop
add
cmpsl
cwtl
and
cmp
aaa
lods
cmp
lds
popa
aad
mov
das
imulb
cmpsb
aas
out
fsubr
push
les
daa
movsb
mov
hlt
adc
mov
lock
cs
adcl
sbb
lret
loop
and
imul
cmpsl
inc
cli
mov
or
imul
rorl
ret
xor
ja
sbb
jmp
add
inc
inc
js
fisttps
mov
shlb
push
inc
cmpsb
loope
xchg
shl
decb
inc
pop
lods
cld
mov
pusha
and
push
das
scas
fstl
sarb
sub
outsb
icebp
mov
and
dec
mov
xor
and
sub
subl
orl
ret
rol
jnp
out
push
out
mov
sbb
xor
and
jecxz
imul
cmpsb
imulb
in
lret
adc
inc
and
inc
cwtl
test
ret
insl
lret
daa
outsl
jge
cmp
mov
lret
pop
pop
or
mov
int3
sti
mov
push
ljmp
out
divl
divb
in
jne
sub
and
addr16
bound
sbb
out
and
mov
data16
mov
sub
pop
sbb
add
push
mov
xchg
repnz
pop
out
movsb
xor
xchg
xor
sahf
scas
pop
mov
push
mov
cmp
xchg
sbb
es
cmc
les
dec
pop
in
cmpsl
addl
xor
jecxz
scas
xor
mov
add
pusha
pop
dec
jb
cmp
xor
jle
push
scas
push
lret
aaa
stos
cmp
rorb
in
aam
nop
shlb
cmp
push
xor
popf
popf
outsb
jecxz
je
cld
mov
fstpl
cmpsb
int3
inc
orl
add
pop
pop
sbb
xor
cli
mov
in
mov
aad
aad
repnz
iret
popa
into
jb
test
lahf
lcall
push
in
jne
mov
iret
jg
and
jecxz
sub
sarb
lea
aas
pop
cmc
sbb
mov
mov
js
jp
dec
mov
xchg
out
fnsave
lock
data16
rcll
xchg
jle
sbb
xlat
les
pop
pusha
rcll
adc
inc
hlt
mov
add
and
jl
cmp
cltd
int
daa
lret
psubusb
jnp
jnp
mov
cwtl
dec
pop
pcmpgtb
ret
sub
sahf
call
pop
xchg
clc
cmpsl
add
mov
push
mov
dec
mov
add
sub
fcoms
dec
and
add
mov
xchg
or
aas
movb
dec
adc
outsl
insb
imul
dec
es
mov
aaa
mov
mov
ljmp
lds
mov
and
fcomps
rcrb
or
or
shrl
sar
stos
xchg
std
popf
mov
jecxz
lods
imul
insl
push
pushf
outsl
mov
mov
jp
push
sarl
in
in
das
push
push
xchg
out
insl
mov
and
sbb
std
mov
adc
sbb
and
mov
jne
jmp
mov
fwait
and
stc
mov
add
jg
xchg
filds
outsl
xchg
iret
or
not
mov
fiaddl
dec
test
into
icebp
jmp
add
sbb
sbb
lret
sbb
push
jbe
stc
adc
dec
repz
pop
xor
mov
xchg
mov
cmp
ficomps
movsl
mov
sbb
mov
popf
pop
and
loop
sub
pop
stos
testb
pop
xchg
imul
pop
in
in
loopne
jl
popf
cmp
rcll
lcall
jp
or
dec
mov
shrb
shr
jae
mov
mov
scas
test
adc
mov
outsl
mov
shlb
movsb
je
in
jnp
int3
pop
ljmp
push
xor
enter
pushf
jl
clc
insb
mov
xor
xchg
push
sbbl
insl
call
jg
mov
jns
enter
add
int
sbb
and
jecxz
xor
fcoms
movl
cmp
cmp
jge
xchg
out
sbb
push
in
mov
mov
je
fwait
lcall
daa
call
mov
popf
adc
std
and
hlt
jb
inc
push
push
adc
dec
inc
ficoms
pushf
sbb
ficoml
pop
or
pop
jge
push
vphaddsw
sbb
sub
or
iret
arpl
flds
jge
add
pminub
or
xchg
addr16
sbb
cmp
push
stos
fisttpl
mov
sbb
sbb
sbb
mov
inc
lret
push
mov
stos
daa
jbe
dec
dec
out
stos
jns
imul
clc
mov
or
lret
cwtl
lret
shll
shlb
call
dec
shll
clc
in
mov
cmp
ret
shl
fcomps
and
pop
dec
push
jecxz
js
xlat
push
pop
jnp
push
mov
dec
adc
mov
or
and
mov
out
jae
xor
cmp
pop
mov
mov
jb
pop
mov
popa
insb
mov
xor
inc
push
mov
jge
mov
pop
pop
insb
data16
pop
jae
imul
push
sub
fwait
xchg
pop
mul
pop
lcall
and
out
test
xchg
dec
daa
out
into
adc
push
inc
loop
jnp
dec
mov
imul
gs
jle
ret
mov
dec
mov
out
jne
fidivrs
jmp
pushl
fcoms
movsl
sbb
inc
inc
das
testb
aad
mov
push
and
adc
xor
pop
int
jmp
mov
addr16
outsl
test
cmp
nop
mov
cltd
cltd
aam
and
cmc
lret
mov
mov
loope
cltd
xor
lods
stos
lret
fildl
mov
bound
mov
cmp
mov
mov
add
cli
push
int
inc
cmp
shll
sbb
inc
adc
add
jnp
loopne
out
jmp
psrlq
inc
addr16
cmp
add
mov
subl
clc
leave
test
pop
dec
adc
inc
in
push
mov
cmpsb
jo
das
fcmovnb
mov
xchg
das
mov
sarl
sbb
sbb
cmp
or
or
popf
inc
stos
aam
cwtl
in
dec
sub
dec
adc
sub
mov
pop
pop
xchg
and
push
or
lret
lods
pushf
jns
fwait
adc
cmp
and
ret
jo
test
fiaddl
fs
cltd
and
daa
imul
pop
sbb
cld
push
sub
mov
insl
sbb
movsb
sahf
fdivrs
add
or
pop
jbe
fildll
add
jmp
cmp
das
sub
sub
mov
ret
fistps
xchg
mov
xchg
leave
push
sub
scas
jmp
mov
mov
adc
sub
testb
iret
pop
out
or
cmp
sub
jbe
clc
negl
add
mov
sub
ds
je
mov
xor
test
lret
dec
cmpsl
iret
dec
xor
ret
lods
sarb
adc
dec
mov
xchg
sbb
and
inc
sub
pop
lcall
or
xchg
adc
lret
adc
pop
mov
fmull
mov
xchg
fcmovu
out
dec
jns
jns
popa
les
fwait
test
out
in
jne
sbb
imull
js
push
loopne
xor
fsubl
pop
fists
jl
dec
pop
push
lods
fwait
nop
insl
test
test
test
aas
inc
xchg
imul
mov
add
pop
mov
add
sbb
addb
sarl
mov
cmp
test
dec
daa
xchg
roll
pop
lea
scas
cmpb
pop
sbb
call
fldt
mov
xor
fsts
std
iret
jle
pop
sub
push
adc
ret
push
lcall
and
loopne
or
and
sahf
inc
inc
xchg
xchg
xor
pop
bound
push
add
pop
xchg
pusha
inc
xor
cwtl
sarl
pushf
pop
push
dec
jecxz
jb
outsb
mov
mov
and
pop
stc
xor
mov
inc
ja
adc
sub
adc
dec
or
pop
pop
movl
sub
mov
lods
fcoml
inc
jg
dec
pop
mov
add
scas
shlb
xor
cmp
push
imul
loope
adc
or
rolb
loope
xor
or
movsl
mov
cmpb
jl
cmp
jge
sub
cltd
adc
es
jbe
aam
sahf
xor
xor
aaa
cld
xchg
aaa
adc
push
rclb
arpl
test
sti
stos
jbe
inc
mov
cmp
add
loope
sub
mov
lock
mov
movsl
movsb
sbb
add
push
daa
push
cmpsl
cmp
add
test
inc
out
aam
cmp
nop
mulb
sub
push
sbb
mov
cwtl
repnz
movsb
mov
cmovae
jno
cmpsl
adc
dec
add
ret
add
pop
les
in
or
and
xchg
or
movsb
sti
jbe
push
mov
leave
out
push
seta
lret
ss
icebp
cld
fmulp
cmpsl
xor
fldcw
fnsetpm(287
or
xchg
jb
addr16
adc
xchg
pop
nop
sbb
movaps
mov
jmp
or
jmp
lea
push
ficomps
fwait
pop
mov
shll
cs
loope
dec
pop
xchg
out
fwait
outsb
aam
sub
and
call
sbb
notb
mov
adc
ret
push
push
sub
inc
adc
decb
or
int
lret
cmp
mov
lea
adc
inc
enter
xor
ss
test
add
jp
cmp
outsb
lahf
call
push
mov
add
out
xchg
js
test
call
jns
push
movsb
enter
push
mov
imul
jnp
shrb
mov
add
mov
fsubrs
inc
faddp
iret
movl
cmpsb
sbb
out
jns
cmpsl
insb
rorl
and
or
repnz
jge
push
jmp
cmpsl
jmp
cli
sbb
ss
std
mov
out
and
mov
mov
lods
xchg
inc
jo
ja
lret
pop
inc
movsl
sub
pop
pop
pop
in
je
movsl
movl
or
jecxz
std
stos
repz
popf
inc
fcmovb
stos
repz
out
enter
aaa
cmp
fnstsw
adc
rorl
fsubs
cmp
sub
imul
xchg
mov
testb
cmp
pop
push
decb
xchg
pop
lods
pop
xorl
sub
sahf
sub
mov
je
pop
pop
f2xm1
imul
bswap
stos
and
clc
int3
pop
pop
add
xchg
adc
mov
push
out
roll
ret
push
xchg
scas
stos
out
or
cmp
arpl
arpl
mov
cltd
aad
out
xchg
notb
push
push
fstl
mov
push
stc
icebp
sub
movsb
dec
popa
aad
jne
sbb
jl
stos
mov
push
inc
adc
in
cltd
mov
mov
das
cmc
cmp
dec
in
and
mov
inc
mov
add
addr16
adc
pop
add
out
lea
stos
mov
ljmp
mulb
pop
ljmpw
or
dec
push
jmp
cld
insl
xor
xor
adc
push
idivb
xchg
shr
loopne
pop
jb
xchg
fists
out
xor
xchg
xor
sti
inc
cmp
pop
sbb
test
fidivrs
dec
fmull
aam
addr16
pop
lret
int3
cmp
mov
aas
dec
js
or
mov
xor
js
pop
mov
xor
cmp
mov
movsb
daa
mov
popa
adc
jp
or
add
push
jp
cs
scas
and
xchg
mov
xchg
jbe
lods
sbb
add
movsl
mov
dec
or
aaa
sub
cmpsb
mov
or
cmp
in
jno
mov
pop
repz
cmp
pop
push
xchg
dec
fstpt
popa
adc
loope
pop
aas
loop
dec
cmp
push
cmp
sbb
fs
arpl
data16
jno
loopne
jge
pop
mov
iret
js
sbb
js
push
fwait
dec
lods
sbb
xor
fstl
jb
and
and
outsb
sahf
cmp
shlb
dec
daa
push
jp,pn
xor
push
pop
std
das
jecxz
xchg
sub
mov
mov
hlt
cli
sub
test
xchg
adc
leave
cmpsl
and
jge
mov
ret
mov
out
cmp
or
scas
add
js
test
pushf
sub
push
inc
es
daa
lcall
testl
and
push
cwtl
xchg
ret
pusha
les
jo
jae
fisttpl
jne
into
sbb
fisubl
testb
pushf
dec
cmp
rcll
dec
rorb
loop
push
xchg
jae
int
and
push
loopne
mov
jno
rclb
js
mov
into
dec
inc
add
bound
sbb
data16
ljmp
sbb
push
flds
sub
or
inc
mov
add
mov
or
mov
loopne
push
pop
pop
outsl
das
push
fnstenv
cwtl
mov
sti
jno
cmpsb
and
jbe
sub
mov
jle
clc
add
add
mov
rorl
jmp
rolb
int
out
mov
leave
dec
ljmp
aad
mov
leave
arpl
or
rorb
nop
sub
and
sub
mov
or
pop
shll
pop
repnz
pop
add
gs
repnz
nop
sub
pop
mov
add
xlat
mov
flds
jmp
mov
sbb
xor
insl
ljmp
out
jmp
movsl
test
add
xchg
scas
movsl
add
fcom
or
ja
ficompl
xor
dec
xor
cltd
cmpsb
inc
inc
fldcw
push
cmpsb
cmp
subl
sti
hlt
cmp
jecxz
dec
out
pushl
xor
pop
pop
sub
dec
fcomip
or
das
mov
push
adc
mov
jle
inc
lahf
shrb
xchg
fwait
mov
mov
mov
bound
insl
push
test
hlt
pop
call
or
pop
lods
ffreep
adc
fcmovne
fnsave
les
bnd
sbb
jl
adc
test
mov
cmp
mov
cs
cmc
out
stos
mov
fcomip
push
jb
cmp
pop
add
xlat
orb
scas
xchg
pop
rcll
test
pop
inc
xchg
stc
pop
out
jbe
mov
and
jns
inc
or
imul
imul
cltd
and
fadds
dec
in
cmp
sbb
movsl
test
ret
inc
add
loope
sbb
bound
lahf
cmp
stos
xchg
cmp
mov
test
xchg
dec
inc
insb
or
inc
jecxz
mov
pop
xchg
mov
lds
outsl
arpl
rcrb
test
xchg
pop
or
mov
je
mov
jne
jp
aad
movsb
and
mov
shlb
cmp
push
add
sbb
outsb
int
pusha
mov
mov
lods
std
pop
push
push
adc
bound
pusha
push
sbb
pushf
mov
les
pop
jbe
fdivrl
imul
push
mov
cs
scas
adc
addr16
jae
cmp
fldl2t
adc
add
xchg
xor
cmpsl
out
mov
xor
or
stos
mov
inc
mov
jmp
or
repz
popa
out
in
or
mov
sub
sbb
lret
dec
scas
xchg
mov
pop
test
popf
dec
lar
xor
gs
push
aas
adc
mov
sahf
stos
adc
fisttps
ljmp
or
mov
mov
jb
push
xor
cmp
add
inc
aad
push
add
push
repnz
xchg
jle
push
pop
cmc
outsb
into
add
in
out
nop
push
xor
enter
shlb
outsb
popf
cmc
loope
jb
xchg
jl
in
sub
into
dec
mov
push
push
insb
out
mov
jp
lcall
pop
leave
mov
xchg
jb
leave
inc
and
cmp
movsb
jb
mov
popa
mov
loop
inc
popf
jnp
ss
cmp
incl
outsl
adc
jnp
sbb
pop
loop
mov
roll
xchg
outsl
das
cwtl
ljmp
iret
or
mov
daa
das
lahf
pop
mov
xchg
cmp
inc
xor
cmp
repnz
in
push
mov
lds
push
in
push
inc
sbb
data16
fsubrs
and
jae
inc
fistpl
inc
jecxz
sub
nop
scas
sub
fisttps
add
out
lea
mov
xchg
xchg
out
es
pop
push
jne
or
dec
push
sahf
sbb
aas
cmp
and
sarb
push
lahf
out
xor
cli
mov
push
testl
mov
lods
or
mov
in
lds
sbb
mov
add
lds
in
or
and
cwtl
mov
jg
in
pusha
adc
mov
gs
adc
cmp
mov
or
rclb
in
push
jne
cmpsb
jl
pop
inc
lods
mov
or
xor
pop
loopne
sahf
int3
inc
iret
aam
testb
insl
ds
fisttpll
xchg
ret
sbb
xor
imulb
jmp
or
jne
jge,pn
shlw
mov
cmpsl
adcb
insl
popf
out
in
sbb
push
movsl
cltd
push
notl
push
sahf
cmp
fidivs
sahf
pop
mov
inc
in
idivl
je
pop
imulb
js
sbb
and
push
cmc
jnp
jne
push
mov
cmp
aad
sti
and
subl
out
dec
fdiv
mov
call
arpl
or
dec
adc
enter
lcall
pop
test
data16
mov
cmp
fistpll
enter
lock
sbb
pop
add
jae
push
push
xor
test
mov
push
mov
cmp
mov
pop
fxch
jnp
mov
sbb
xorb
fmul
or
scas
pop
mov
pop
inc
mov
or
sub
imul
gs
and
hlt
xor
imul
xor
lds
push
in
add
dec
and
dec
sbb
adc
popa
outsl
inc
mov
sbb
hlt
shrl
pushf
lcall
hlt
cmp
jp
xor
sub
int
mov
fsubrs
pop
and
int3
ja
or
lcall
psubb
dec
shll
cmpsl
jl
xchg
xor
pop
scas
or
test
fwait
jge
ss
add
pop
cwtl
ja
js
pop
mov
and
andl
cmp
movsl
insb
jbe
testl
jp
and
adc
xor
bswap
pop
out
or
mov
dec
pop
adc
xchg
lock
frstor
les
mov
xchg
xchg
pop
jbe
xlat
aam
jmp
or
cld
pop
xlat
xorl
adc
outsl
and
gs
cmp
in
sub
dec
fisttps
rclb
stos
xor
cwtl
aad
push
sbb
inc
mov
movsl
mov
xchg
pop
jb
popa
faddl
dec
into
dec
orl
push
out
dec
cmp
mov
add
push
push
cs
or
ret
xor
xchg
xor
icebp
pop
jp
pop
cmp
js
pop
out
mov
dec
mov
in
mov
and
xchg
or
out
out
mov
daa
add
jmp
subb
push
cmp
lret
in
cmp
fwait
sbb
mov
addr16
cltd
cmp
repnz
decb
inc
mov
mov
adcl
das
jecxz
pop
gs
ret
pop
sbb
leave
or
pop
jb
nop
ljmp
and
and
movsl
test
lock
ret
jb
xchg
xchg
lea
outsb
add
sub
sahf
lea
xchg
sti
shlb
fiaddl
inc
sahf
movsl
mov
cmp
cltd
fsts
lar
add
xor
cmc
xchg
mov
add
ds
xchg
rolb
mov
fsubrl
dec
dec
pop
dec
or
cmp
lods
sub
pop
xor
dec
lods
and
pop
inc
adc
jmp
test
sub
push
in
mov
ljmp
outsb
out
cmp
xlat
movsl
pop
pusha
in
xchg
in
test
outsl
adc
lcall
xchg
stc
orb
stc
ss
lock
pop
loopne
pop
jno
xchg
lcall
dec
andl
pop
fmull
jl
sahf
sbb
push
push
mov
push
and
push
mov
lods
ficoms
js
out
mov
adcl
stos
pop
test
icebp
fcmovnu
adc
pop
push
je
add
les
push
xchg
fsubrs
sub
pop
cmp
es
inc
xchg
mov
inc
test
pop
ret
sbb
int
dec
push
mov
dec
jns
lock
fcmovb
lds
jmp
lahf
data16
or
jle
or
xchg
int
lods
lods
mov
in
lcall
or
repz
mov
sub
icebp
and
sbb
cmp
push
jns
cmp
incl
mov
mov
mov
or
xchg
ja
pop
dec
mov
aas
setl
jb
movsb
push
nop
call
adc
push
inc
jne,pt
jnp
aas
shll
leave
std
lahf
into
xchg
fstpt
jp
push
cwtl
add
add
push
and
mov
cmp
imul
dec
adc
mov
mov
enter
icebp
mov
mov
mov
test
mov
and
push
dec
jo
dec
jle
fsubl
xchg
mov
data16
sbb
push
idivl
imul
loope
insb
lahf
sub
mov
pop
dec
sub
mov
mov
sbb
popf
or
aas
mov
aas
stos
pop
push
imul
cs
cmp
out
stos
ret
in
das
jle
xor
ss
imul
negl
xchg
pop
cli
push
test
jno
push
ret
push
xor
inc
inc
jmp
add
add
inc
mov
xlat
mov
loop
loope
lret
das
or
cmp
jle
rorb
cmp
dec
sbb
out
pushl
xchg
cli
xchg
test
bound
sbb
push
mov
xor
out
mov
inc
das
mov
idivb
leave
leave
nop
mov
add
xchg
push
xchg
mov
sbb
jno
ds
out
pop
push
pop
xor
fiadds
mov
and
xchg
jb
in
lods
ja
sub
adc
outsb
mov
push
out
es
push
xor
cmp
or
addr16
pop
mov
inc
sbb
inc
ret
mov
lcall
sbbb
das
pop
sbb
rcll
aaa
ret
adc
lds
pop
sbb
and
inc
pavgw
clc
call
push
test
push
sub
stos
mov
add
cmc
in
outsl
in
sub
inc
add
or
gs
or
sub
stos
mov
and
jle
sub
xor
pushf
inc
adcb
fistps
mov
sbb
xchg
push
inc
in
push
js
ds
inc
repz
test
pop
add
pop
insb
shll
inc
mov
test
aas
inc
xchg
cmp
jmp
lds
mov
pop
jecxz
mov
insl
sbb
iret
cmp
fwait
and
adc
or
sbb
push
mov
iret
loopne
daa
in
adc
fld
push
call
lea
or
ja
push
pusha
pop
pop
dec
pop
pop
sbb
fadd
rorb
push
pop
scas
jg
add
sub
into
dec
insl
into
js
scas
sbb
jo
jg
es
lahf
jecxz
mov
jge
imul
data16
jnp
push
cltd
xchg
mov
out
adc
add
test
jo
add
lret
jp
jmp
dec
imul
and
out
mov
mov
lock
rcr
scas
xor
xor
push
cltd
add
scas
add
aas
pop
test
fsts
and
neg
fwait
movsl
or
jge
xchg
jmp
out
mov
jle
lcall
jmp
xchg
call
fcmovnbe
fldenv
pop
aam
sahf
mov
ja
aam
jns
sub
sbb
in
cmp
clc
adc
jecxz
push
xchg
repz
dec
pushf
xor
je
pushf
jmp
out
addr16
cmpsb
addr16
scas
push
scas
dec
in
movsl
rorb
aaa
sti
sub
cmpsl
ret
ret
subb
inc
fwait
adc
mov
jle
mov
stos
dec
testb
mov
and
sbb
cltd
pusha
out
sbb
and
adc
jp
fmuls
cmp
dec
adc
jg
insb
sbb
cltd
call
test
or
sbb
sub
aad
iret
xchg
les
xchg
xor
int3
mov
lret
fisubrs
inc
cmc
pop
sbb
scas
mov
jno
adc
push
aas
dec
cmp
sbb
movsb
add
mov
mov
ljmp
std
mov
lret
pop
addr16
sub
hlt
push
cwtl
hlt
pop
sub
lea
shlb
pop
push
loope
pushf
cmpsb
sbb
in
xor
into
arpl
out
orb
bound
xor
cmpl
aad
and
loop
int3
cmp
insb
or
cmp
push
sub
arpl
mov
inc
dec
stos
les
pop
das
push
xorb
pop
adc
jns
out
add
jns
dec
adcl
cs
mov
mov
lret
lret
pop
inc
xor
repz
push
shrl
cmp
xchg
in
repnz
dec
mov
lret
and
push
cmp
and
sarl
mov
xchg
out
orb
data16
or
inc
dec
ds
pop
xor
inc
cmc
adc
call
push
test
jne
aas
shrl
pushf
ja
pop
inc
mov
imul
push
fcomp
clc
loope
sub
rcll
or
push
push
sarl
pop
jecxz
arpl
movsbl
into
test
sbb
xchg
dec
insl
push
or
mov
clc
gs
scas
mov
ljmp
xchg
sub
repnz
mov
pop
xchg
sti
jle
and
inc
mov
test
idivl
clc
arpl
push
xor
mov
add
pop
mov
dec
mov
jns
mov
imul
jnp
pop
xchg
cmpsl
cmpb
pop
jno
cmp
daa
xor
aaa
data16
xor
mov
inc
xchg
dec
dec
cmp
loope
rol
cmc
push
fistpll
sub
call
push
imul
ret
sbb
xor
fistl
cmp
arpl
push
add
mov
in
jnp
out
inc
mov
pop
or
out
or
cmc
and
adc
shrl
std
pop
ficomps
jae
in
and
mov
dec
imul
mov
inc
xor
in
call
std
mov
aaa
imul
imul
icebp
sub
sbb
fcomps
xchg
cmp
jo
cld
lcall
repnz
sub
sub
xchg
subb
lods
sti
pop
xor
jg
xor
jno
lret
je
and
inc
dec
out
sub
sti
sarl
into
loope
inc
and
test
ja
add
dec
aas
hlt
sub
das
sub
clc
jmp
xor
mov
xor
xor
mov
or
and
stc
inc
cmpb
push
jge
push
sahf
xor
iret
jle
push
fsubrl
adc
jg
sbb
push
in
mov
push
movsb
imul
cld
cmp
mov
inc
into
pop
nop
sub
fistl
and
addr16
loopne
ljmp
push
ds
loop
jl
loop
pop
adc
nop
dec
mov
xlat
lret
cmp
sahf
mov
or
pop
inc
add
pushf
xorl
fnstenv
sbb
addr16
loop
dec
lds
popf
cmpl
jecxz
or
gs
mov
gs
or
ret
movsb
xchg
enter
xor
xchg
mov
test
and
testb
mov
pmaxub
xchg
lock
lods
add
xchg
cmp
mov
fsubrl
sbb
in
in
mov
jno
jmp
mov
leave
lcall
cmpsl
mov
xor
cmp
and
shrb
jo
pop
sub
jge
cmpsb
xchg
xchg
dec
lret
xor
sub
sbb
test
adc
int
lret
mov
inc
lahf
into
addl
jo
scas
xchg
jle
cmp
daa
cwtl
popf
mov
loopne
lods
adc
cwtl
std
faddl
leave
jns
out
es
sbb
imul
rorb
stos
sub
mov
pop
push
stos
movsl
std
inc
mov
into
mov
dec
mov
int3
mov
sbb
cld
add
mov
add
xor
push
mov
dec
sbbb
pop
push
inc
es
dec
push
jecxz
or
mov
rcrb
pop
cmp
push
or
test
push
adc
dec
outsb
fistl
mov
out
push
cmc
cwtl
mov
dec
iret
mov
inc
or
insb
push
ja
adc
jg
lea
clc
ja
fdecstp
jae
push
test
ds
inc
rcl
push
xchg
mov
pop
out
xchg
clc
aas
pushf
xor
mov
stc
ret
cltd
std
pop
push
int
addr16
mov
fisubrs
mov
add
dec
bound
pop
aam
dec
in
test
sub
push
ja
and
out
sub
adc
mov
lahf
mov
into
xorl
mov
mov
stos
or
xorb
mov
jg
loop
sbb
int
mov
sar
push
cmp
or
mov
jmp
xor
adc
std
mov
inc
sbb
stos
dec
dec
jnp
pop
dec
les
jnp
lahf
stc
mov
mov
repnz
xchg
in
inc
shlb
fwait
xor
pop
out
pop
fldcw
outsb
jmp
test
mov
ja
loop
cmp
stos
lock
stc
mov
cwtl
test
mov
hlt
sub
mov
jne
inc
addr16
out
xchg
pop
iret
mov
call
dec
inc
test
jp
inc
mov
aas
div
xor
xor
jmp
jp
xor
dec
and
lods
addr16
jns
lahf
add
jne
push
popf
daa
inc
ss
ja
lods
stos
loope
out
xchg
dec
aas
mov
mov
adc
jp
es
addr16
inc
stc
stos
dec
test
shlb
daa
dec
aas
lret
in
and
rep
mov
mov
xor
jp
ja
testl
in
jp
leave
xchg
outsb
lcall
fwait
push
inc
pop
push
or
std
adc
mov
cmp
cwtl
movsb
xchg
lret
xor
sub
pop
add
test
daa
roll
push
cmp
out
xor
testb
fisubs
icebp
mov
xchg
sub
cli
mov
push
or
scas
imul
mov
xchg
push
pushf
cld
sub
cmpsb
fidivl
mov
xchg
jbe
roll
jmp
add
dec
xchg
addr16
mov
push
inc
mov
mov
mov
stos
out
xchg
out
pop
mov
enter
fdivrs
and
sub
xchg
addr16
lret
loope
pop
pop
mov
xor
mov
sbb
inc
bnd
aam
cwtl
in
add
pop
das
xchg
sub
lods
in
mov
mov
sbb
outsb
insl
sbb
je
mov
xchg
inc
push
adc
pop
cli
in
je
pop
lods
jne
xchg
decl
je
jp
int3
leave
and
add
and
subl
stc
in
addb
hlt
sbb
sub
outsl
xor
fwait
mov
popa
mov
add
jmp
into
xor
pop
cld
mov
in
loopne
jo
cmp
dec
leave
push
pop
jp
ja
xchg
sub
cmp
mov
and
decb
dec
pcmpgtw
rcll
push
pushf
insl
mov
cmp
jp
inc
xchg
mov
jns
hlt
cs
dec
inc
adc
push
stc
pop
std
loopne
cmp
testb
in
fistps
push
sbb
cmp
mov
lret
sub
int3
inc
xor
stos
pop
pushf
lock
push
mov
repnz
sbb
pop
test
mov
xor
outsb
daa
fists
jg
out
rcrl
and
pop
pop
lret
adc
and
hlt
call
pop
idivl
cwtl
jnp
inc
int3
int3
addr16
ret
jnp
sbb
movsl
xchg
inc
add
xlat
jge
or
insb
and
lods
adc
cs
dec
xor
ficompl
xor
xor
arpl
adc
sbb
push
cmpsb
mov
clc
mov
hlt
dec
and
mov
cmp
jg
sub
mov
or
add
mov
out
sub
inc
lock
lret
mov
cli
stc
arpl
xor
cmp
push
dec
fstpl
cmp
test
mov
mov
dec
push
lea
xor
cmp
sbb
and
or
in
insb
popa
mov
mov
jle
shll
das
pop
ror
xchg
leave
jecxz
out
or
mov
sub
daa
dec
outsb
bound
sbb
inc
jp
or
les
adc
das
fbld
lods
mov
mov
cmp
daa
pop
sub
nop
add
shl
adc
mov
divb
ss
out
pusha
mov
dec
or
outsb
das
sahf
ds
ljmp
les
jns
icebp
xchg
or
push
lea
or
ss
movsl
mov
pop
lahf
sbb
xchg
ret
mov
enter
inc
ret
in
adc
inc
xorb
adc
sti
inc
xor
add
inc
adc
fiadds
jno
hlt
xchg
jo
sbb
loop
add
flds
sbb
data16
dec
pushf
aaa
mov
mov
mov
in
fiadds
test
mov
movsl
in
sbb
sbb
xor
sub
inc
loop
inc
adc
pop
xchg
jno
sub
fistl
push
les
mov
fstpl
adc
leave
pop
repnz
pop
cli
fadds
push
movsb
add
push
sub
sub
pop
outsb
imul
gs
push
jg
shlb
aad
mov
gs
sahf
lea
or
adc
cmp
mov
sub
rcrl
adc
lahf
jnp
fcoms
or
push
dec
test
mov
push
or
out
or
cmc
inc
pop
mov
call
dec
add
add
cmp
jge
and
es
sbb
fcoml
aam
imul
jno
lds
xor
and
fld
out
pop
dec
loope
ret
popf
dec
mov
pop
sbb
jmp
push
shufps
lcall
sub
scas
outsb
fs
pop
jp
test
inc
dec
inc
lods
xorb
ljmp
roll
mov
and
outsb
pop
into
sub
sbb
mov
mov
sub
aas
sbb
push
inc
lahf
cmp
lods
aam
rorl
xchg
insb
daa
jno
or
mov
cmp
shl
out
in
add
pop
icebp
push
jl
popa
iret
scas
out
daa
aas
xor
dec
and
popa
outsb
popa
loop
cs
jae
inc
into
ret
pop
fwait
lahf
mov
je
pop
inc
push
pop
jg
insl
rolb
xlat
sbb
mov
sbb
pop
push
fsubrs
push
cmpsl
lret
inc
mov
or
aad
test
inc
int
movsb
mov
mov
daa
xchg
push
xchg
out
call
insl
push
adc
xchg
leave
pusha
cmp
aam
jecxz
cli
ret
stos
shrl
and
dec
add
sbb
pusha
pop
xchg
lock
jl
sti
addl
sbb
mov
shrb
xor
mov
shlb
les
nop
shlb
cli
cltd
push
incl
clc
in
test
sub
psubsb
mov
xor
loopne
call
daa
in
cmovne
jmp
fcomps
adc
jns
pop
pusha
mov
ljmp
jg
xor
fs
es
jae
xchg
and
int
arpl
mov
popf
push
push
ja
push
testb
mov
mov
dec
mov
pusha
xor
mov
sti
rorl
push
gs
sub
call
sbb
xchg
sub
mov
int3
pop
scas
lahf
lcall
sub
sub
lods
jmp
std
xchg
cmpsl
pop
hlt
jnp
add
mov
jno
and
cld
mov
invd
call
dec
mov
pushw
cmpsl
lock
xorb
fs
adc
cs
mov
outsb
outsl
ja
pop
lea
push
imul
bound
pop
out
sub
pusha
lahf
loop
dec
mov
daa
xlat
js
arpl
or
xchg
insl
cmpsl
or
adc
fsubr
shlb
and
test
cli
testl
mov
fmul
jne
jle
sahf
xor
adc
inc
and
lcall
int
fdivrl
and
inc
mov
loopne
les
outsb
test
fistpl
iret
xchg
daa
xor
push
gs
aaa
popl
push
fistl
mov
out
mov
fldt
dec
cmp
jae
out
inc
or
testl
clc
sti
inc
cltd
arpl
pop
adc
jmp
fildll
mov
les
cmp
dec
inc
jne
lods
mov
sbb
lock
mulb
leave
mov
roll
leave
mov
rorl
or
fbld
adc
ds
aas
or
sti
in
sbb
stos
in
packsswb
cmpl
sbb
icebp
imul
and
xchg
imul
ret
loope
mov
mov
jo
and
add
pop
aas
es
lock
sub
cmpsl
and
mov
xchg
push
inc
pop
pop
jecxz
sbb
xchg
push
fcmovb
test
stos
jo
icebp
add
arpl
std
push
js
add
clc
out
arpl
sbb
insl
dec
lcall
imull
loope
jl
cs
stos
push
popa
roll
loop
movsb
mov
push
int3
insb
shll
ds
mov
xchg
addr16
stc
or
cmp
mov
adc
dec
mov
sbb
jbe
mov
sub
and
dec
xor
test
divl
mov
incl
or
inc
pop
push
mov
xorb
mov
hlt
ror
jmp
scas
aas
sub
jmp
push
push
jge
lahf
popa
outsl
and
xor
test
xchg
in
in
fs
sbb
movsb
push
in
or
int
pusha
add
push
mov
jge
js
sahf
or
push
xchg
ffreep
inc
pop
cmp
push
inc
inc
pop
lods
add
pop
scas
dec
lods
jmp
movsb
push
es
and
sub
das
dec
fiadds
mov
xchg
xor
xchg
fwait
shlb
sub
mov
daa
repz
rorl
out
orl
into
or
sbb
test
sub
movsl
push
mov
js
push
insb
pop
outsl
sahf
jae
push
adc
std
mov
dec
push
xor
push
inc
xchg
loope
rcll
push
test
dec
adc
push
xlat
or
mov
mov
mov
sub
lods
mov
fnstenv
jge
jne
mov
loop
or
daa
scas
xchg
or
jge
add
les
pop
cmp
and
imul
or
dec
jmp
pop
divl
adc
ror
dec
sarb
jno
cvttps2pi
ds
xor
xor
int3
jge
and
mov
pop
in
and
xchg
pop
clc
xchg
mov
lret
adc
movsl
mov
cwtl
dec
push
jne
les
mov
sbb
xor
xor
cli
imul
mov
in
fidivs
adc
mov
xor
adc
push
cmp
cmp
notl
idivb
cs
inc
pop
in
cli
outsl
out
psrld
scas
pop
movsb
pop
arpl
xchg
aaa
push
xchg
sbb
xchg
shl
idivl
mov
cld
cmp
das
cltd
pusha
cmpsl
in
add
jl
sub
mov
enterw
sub
arpl
xchg
mov
mov
adc
mov
mov
daa
test
cmp
rclb
dec
inc
subb
movsb
test
dec
push
adc
and
stc
cmpsb
dec
mov
test
pop
push
fldenv
and
add
push
dec
cmp
int
mov
add
jg
mov
xor
mov
lods
lods
fidivl
sbb
shlb
push
hlt
inc
aad
xchg
xorb
add
pop
adc
push
pop
mov
adc
pop
loopne
dec
pop
xchg
dec
popf
jbe
es
notb
jne
fcompl
jae
sub
jo
mov
xchg
inc
or
pop
sbb
pop
lret
sbb
int3
xor
xor
outsb
pop
xor
loop
clc
repz
sar
loop
mov
cmp
iret
sbb
fistl
push
jle
jmp
mov
push
add
and
scas
rcl
stos
aas
imul
ret
out
ret
inc
mov
jp
loop
gs
popa
mov
dec
push
xlat
popa
int3
sub
out
adc
add
lds
in
sbb
pop
mov
repz
mov
lcall
inc
test
not
cli
fucomp
jg
mov
lods
dec
fdivl
push
pop
lods
test
pop
mov
dec
cmp
cmpsl
xor
mov
add
xlat
mov
mov
cmp
sbb
xor
lret
push
xor
mov
lea
inc
sbb
pop
fiaddl
test
scas
xchg
test
mov
jne
lcall
shrb
clc
loope,pn
cmp
push
mov
movsb
lea
mov
ja
jle
leave
push
push
inc
dec
aam
jo
add
cmp
push
inc
fldl
xor
in
xor
jp
lcall
push
xor
lcall
out
int3
adc
fildll
inc
mov
out
sbb
into
mov
jb
add
xlat
mov
add
rol
enter
mov
mov
pop
outsb
xor
stc
push
das
in
icebp
icebp
mov
das
pop
add
dec
pop
mov
shlb
mov
add
mov
dec
jnp
ljmp
adc
sub
or
mov
add
mov
std
data16
fstp
hlt
inc
cmp
aam
nop
or
sub
xchg
ret
movsb
and
inc
inc
jg
mov
mov
orb
pop
lahf
ljmp
mov
cwtl
sbb
lcall
js
fnstenv
adc
sub
xor
ss
xor
fdivl
pop
inc
xchg
je
incl
lock
inc
push
pop
mov
adc
call
flds
movsb
jmp
sbb
pop
aas
fmul
and
outsl
mov
bound
dec
lcall
or
lea
jae
and
pop
insb
inc
das
or
xchg
mov
lcall
inc
xor
jnp
push
cltd
push
cld
out
inc
jg
decb
divl
arpl
xchg
xor
sbb
pop
and
popa
push
shr
je
mov
aaa
stc
push
inc
mov
movsl
int
std
cmpsl
jne
sahf
xchg
test
xor
pop
push
popf
xor
sbb
sbb
test
mov
icebp
xchg
lahf
fs
int3
and
push
arpl
or
dec
or
imul
rcrb
std
sub
sbb
xchg
push
sbb
jg
push
in
inc
ret
ret
gs
movsb
dec
fadds
pop
hlt
lock
inc
int3
sarl
cmp
lahf
cli
out
dec
iret
daa
xor
ljmp
xor
loopne
push
xchg
inc
push
pop
std
imul
adc
sub
mov
pusha
push
rolb
in
loop
and
loope
inc
adc
push
lods
adc
inc
frstor
jmp
loop
or
lock
adc
jp
fdivl
add
xchg
mov
sub
jecxz
inc
test
popa
outsb
cmpsl
enter
ljmp
cmp
ss
dec
cmp
sbb
roll
xlat
mov
pop
sbb
mov
cmp
out
das
push
fidivrl
push
jle
xor
cmpl
mov
cwtl
adc
add
mov
push
fwait
mov
inc
push
jmp
sti
push
addb
jno
es
cltd
ja
ucomiss
xchg
adc
pop
cmp
xor
push
push
dec
cwtl
pop
cld
lcall
pop
neg
sub
out
push
cmp
push
xor
xor
cmp
xor
dec
mov
leave
inc
mov
xchg
push
je
push
xor
in
jp
and
aam
out
jb
xor
es
jne
add
jb
xchg
divb
shl
sub
mov
jo
push
cs
push
pusha
cmpsl
ret
push
xchg
sub
movsl
cli
adc
mov
dec
enter
xchg
enter
xor
mov
push
daa
xchg
outsb
xchg
mov
mov
adc
pop
ljmp
jl
sub
mov
jl
outsb
inc
cmp
push
mov
je
inc
jg
shrb
adc
int3
or
push
adc
mov
out
inc
sub
je
push
bnd
lea
push
inc
arpl
inc
rcll
lock
jne
push
sub
lea
sar
or
xchg
nop
repz
icebp
lret
ss
data16
add
or
jmp
jnp
and
cmpsl
mov
mov
dec
imul
lds
and
xchg
or
xor
testb
xchg
out
xchg
jnp
inc
jmp
test
mov
aad
pop
into
imul
mov
testb
dec
or
cmc
fistl
or
rcl
dec
adc
adc
fstps
mov
inc
sub
int
xchg
cmpsb
mov
and
jb
sub
stc
jmp
iret
icebp
sahf
stc
cli
add
int
daa
lods
sahf
iret
sub
adc
pcmpgtw
jp
fcmovu
or
ret
cld
cs
mov
int
ret
or
adc
pusha
nop
dec
push
out
pop
cltd
movsb
repnz
xchg
rcr
sbb
pop
or
rcrb
mov
fisttps
push
inc
add
mov
mov
push
add
fildl
repz
scas
adcb
mov
notb
shl
jmp
jnp
stos
adc
pop
fstpl
inc
fdivrs
jp
mov
imul
cltd
nop
push
test
push
sbb
sub
lods
inc
frstor
ds
out
mov
mov
xchg
and
test
stos
pop
test
dec
mov
jecxz
jns
incl
out
leave
std
int3
movsl
icebp
jp
ljmp
mov
sub
cmp
or
pusha
pop
or
in
mov
mov
shlb
les
mov
and
outsl
xchg
cli
xorb
adc
mov
popf
or
push
sub
xorb
gs
pop
and
pop
lea
xchg
jbe
mov
xchg
mov
aas
insl
mov
mov
ja
and
js
push
lcall
scas
scas
rclb
cltd
sub
test
or
mov
icebp
or
je
mov
shrl
jecxz
lcall
sub
inc
imul
dec
fmulp
lret
sbb
push
mov
xchg
sbb
sub
cmp
out
fisttpl
std
dec
mov
sbb
ds
scas
mov
jg
shrl
xor
pusha
and
jne
jmp
test
xchg
pop
std
adc
push
dec
cmc
int
repz
jae
mov
or
mov
jnp
std
les
xchg
mov
test
ljmp
enter
dec
popf
mov
push
sub
cmp
cltd
inc
std
cs
sub
out
leave
es
mulb
fwait
mov
in
mov
outsb
inc
jp
call
leave
lock
sbb
and
clc
sub
test
jge
pop
pop
pushf
push
mov
push
or
insb
and
jne
mov
imull
mov
arpl
pop
or
imulb
xchg
ret
orps
mov
push
jl
sbb
lock
jmp
inc
std
sbb
mov
cmp
push
jb
push
out
and
cltd
mov
pop
inc
mov
ljmp
push
movsb
or
and
xchg
notb
push
rolb
imul
icebp
mov
cmpl
mov
push
mov
mov
ja
rcrl
lea
iret
mov
popa
dec
nop
adc
mov
shrb
mov
sti
ret
mov
daa
xchg
aad
pop
jae
das
cmc
stc
nop
xlat
in
adc
cmp
imul
add
clc
inc
xchg
std
ficompl
aas
sbb
push
sbbb
iret
or
ror
and
fcoms
out
out
lods
test
push
xchg
pop
fsubrl
dec
int3
lcall
ret
jecxz
out
or
xchg
add
xlat
insl
inc
mov
in
scas
aas
fildll
xchg
push
mov
lods
xchg
push
into
sub
inc
dec
cmp
mov
dec
sbb
sbb
cmp
cmp
dec
mov
shlb
mov
xchg
or
pop
shrb
arpl
push
bound
faddl
cwtl
ficoml
mov
out
insl
add
rolb
ja
inc
cli
shll
cmp
xchg
outsb
inc
fcmovb
sub
xor
in
shrl
sbb
mov
xor
ss
add
or
cmp
roll
xor
dec
xchg
scas
add
and
call
out
and
idiv
ret
and
out
xchg
mov
mov
cs
mov
shrl
ljmp
das
push
and
mov
add
pop
outsb
test
sub
inc
mov
push
pusha
and
subl
jbe
insb
gs
push
das
sub
shrb
int3
lods
outsl
push
shll
es
mov
xchg
or
jns
lock
sub
xchg
into
lea
pop
mov
sub
cmp
sahf
pop
int
pop
rorl
xchg
adc
aaa
bound
sbb
adc
pop
pop
mov
mov
arpl
and
xchg
shll
push
arpl
adc
repz
xchg
incb
sub
shlb
push
xchg
mov
iret
or
lock
pop
add
xor
stos
loope
mov
push
mov
cmp
mov
and
insl
shlb
sbb
or
push
lret
stos
inc
dec
xor
hlt
mov
cwtl
fcmovnbe
les
lret
mov
add
cmp
xchg
add
fadd
fmull
aas
in
addr16
xor
add
sub
sahf
lret
and
mov
adc
aas
shll
mov
cmp
out
lea
sub
and
test
lcall
jge
rclb
or
xlat
mov
jge
sahf
lahf
adc
push
rcll
repz
or
enter
lcall
mov
mov
and
in
cmp
sahf
inc
mov
push
push
insl
and
dec
fdivr
scas
fbld
xchg
xchg
xchg
or
sbb
repnz
sbb
test
jp
mov
aaa
inc
cmp
test
add
loopne
jbe
fs
add
pusha
push
repnz
fbstp
mov
mov
faddl
jo
or
pop
cmpsl
jne
xchg
rcrb
push
mov
pop
orb
inc
cmp
rcl
ja
sbb
xor
sub
mov
out
outsl
fidivl
out
mov
xlat
adc
mov
sbb
sub
sbbb
inc
xchg
ss
push
or
cwtl
pop
adc
iret
dec
pop
lahf
mov
adc
or
rclb
pushf
xchg
ds
movsb
push
or
push
and
movsb
cmpsl
popa
xor
dec
add
lret
jle
adc
inc
xor
aas
mov
insb
ss
push
xchg
pop
mov
xchg
mov
inc
je
jp
xor
dec
cltd
ljmp
sub
std
sti
mov
inc
jle
movsl
imul
inc
pop
push
cmpsb
fwait
sbbb
and
push
fadd
aad
leave
test
enter
fisttpl
xchg
inc
daa
adc
jp
pop
add
or
pop
sarl
sbb
lea
pop
ja
dec
insb
cmpsl
inc
pop
out
cmpsb
sbb
out
or
imul
cld
push
nop
enter
icebp
push
mov
sar
pop
rcll
in
ret
pop
jb
cmp
pop
cli
jb
mov
sbb
pop
pop
add
fists
jnp
mov
jle
ja
xor
dec
ljmp
je
adc
imul
repz
push
jl
xor
xchg
sub
mov
stos
mov
cltd
xchg
rclb
nop
pop
out
mov
sti
push
mov
out
xchg
aas
lds
rcr
insb
imul
push
mov
cli
sub
adc
cmpsb
or
jecxz
fisttps
jo
jb
fwait
les
inc
imul
pop
ret
jge
push
cmp
icebp
mov
mov
dec
adc
sbb
out
adc
popf
inc
dec
jmp
or
cvtdq2ps
addb
or
push
sub
mov
push
cwtl
inc
sahf
xchg
jae
vmwrite
mov
cs
or
gs
jnp
sti
insl
or
clc
adc
loopne
sbb
add
std
loope
jg
ljmp
jge
push
add
jmp
sub
rol
loopne
aas
in
aas
pop
testb
mov
cmp
add
cmp
sbb
mov
push
jnp
scas
mov
xchg
mov
iret
fidivs
test
jne
jl
in
out
dec
or
mov
cmp
mov
rolb
aad
push
lods
jle
or
int3
mov
ja
mov
pop
cmpsl
mov
push
loop
cmp
ret
xchg
mov
mov
pop
test
rorb
xchg
sbb
aaa
es
jmp
mov
xor
out
cmp
mov
fdivp
mov
out
lods
insl
cmp
dec
movb
or
push
dec
and
mov
shll
xchg
mov
dec
mov
out
and
cltd
mov
xchg
sarb
mov
adc
js
aaa
scas
xlat
sub
jge
inc
mov
iret
sbb
mov
xchg
mov
movsl
mov
movsb
or
es
out
adc
pop
aaa
sbbb
xchg
std
ret
scas
jle
or
fcoms
rcll
ljmp
loop
cmp
lret
mov
sahf
test
sbb
push
pop
jmp
push
popa
sbb
mov
pop
add
div
push
aas
int3
sub
ljmp
jnp
mov
sub
push
in
les
jl
scas
pop
cmp
inc
cld
jne
test
cmpsl
mov
and
push
test
mov
jp,pn
sub
loop
mov
xchg
xchg
shll
sub
cmp
pop
dec
xor
enter
roll
sbb
lods
outsb
aad
imul
ret
test
xchg
dec
mov
push
push
add
scas
loope
bound
pusha
cwtl
rolb
add
ljmp
dec
stc
rcrl
mov
bound
lret
ror
mov
pop
aas
cmc
cli
mov
jmp
int
fldcw
push
sub
mov
inc
add
cld
mov
test
mov
xor
adc
pop
xor
pop
xchg
push
jnp
or
mov
sbb
data16
mov
and
pop
jno
mov
pop
inc
sbb
sbb
xchg
push
addr16
ficompl
leave
loopne
sbb
ret
in
movsb
loop
add
xor
sbb
adc
arpl
xchg
lahf
dec
xchg
push
xorl
sub
xchg
jb
dec
loope
daa
jae
loopne
cmp
mov
inc
dec
pop
loopne
and
idivl
and
mov
rclb
adc
jmp
sbb
je
lcall
jne
aam
jo
fadd
sub
push
sub
xchg
cmpsb
movsb
sub
aad
mov
hlt
xchg
shl
xchg
scas
inc
pop
mov
inc
pop
cmp
cs
iret
in
nop
jae
and
mov
and
aad
inc
sub
jmp
or
scas
mov
stc
xor
xchg
loop
mov
sub
pop
je
dec
lods
pop
bound
mov
push
popa
stc
shrd
in
xor
addr16
aaa
xor
cmpl
fnstsw
fsubp
inc
enter
clc
mov
in
adc
mov
pop
dec
hlt
rorb
mulps
repnz
leave
fdivl
adc
jo
xchg
aad
popf
mov
pop
add
into
movsl
out
das
scas
dec
lret
sbb
mov
cld
jp
sbb
in
xchg
adc
jno
jl
adc
jg
filds
xchg
mov
stc
stc
or
outsl
in
je
fstp
scas
cvtpi2ps
addl
insl
xchg
icebp
imul
adc
inc
jge
jg
sub
push
cwtl
mov
mov
negb
test
cmp
adc
dec
and
setbe
insl
inc
sbb
cmp
pop
xchg
leave
popa
jg
sahf
pusha
mov
dec
and
arpl
inc
aam
out
jo
loope
or
jl
sub
jns
adc
loopne
movsl
inc
lods
mov
adc
jmp
pop
pop
sub
mov
fsts
mov
push
jo
or
add
mov
cmc
sub
es
bound
leave
mov
jnp
je
js
pop
xchg
fs
jb
add
and
xchg
imul
ljmp
mov
xor
ss
ds
ss
mov
mov
faddl
aas
xchg
ss
fcomps
mov
dec
pop
fdivrs
std
aas
jae
fsubrs
and
dec
test
push
or
sub
dec
cmpsb
das
lods
jecxz
testl
adc
pop
cmp
aad
mov
mov
scas
fsubrl
fcmovbe
mov
pop
mov
jmp
xor
xchg
jb
sbbb
std
mov
push
and
lock
cwtl
dec
int
movl
adc
ret
mov
int3
rcll
gs
fidivrs
mov
adc
adc
popf
je
pop
ret
and
outsb
or
das
test
mov
mov
sub
xor
imul
add
pop
mov
fcoms
int3
cltd
inc
mov
or
mov
sbb
fmulp
mov
out
or
mov
ja
stos
sub
cmc
and
inc
inc
mov
decb
inc
mov
xchg
xor
aas
sbb
xor
push
push
add
mov
in
cli
fs
pop
dec
fisubrl
in
jge
mov
sbb
rorb
lret
mov
push
and
repnz
push
insl
pop
or
inc
adc
shrl
ja
push
pop
fcmovbe
lahf
imul
lea
ja
cmp
dec
xorl
sub
out
ja
dec
cmpsb
xchg
jl
inc
add
add
push
add
int
aam
mov
int
cmp
jle
fistpl
jo
jge
mov
shll
sub
mov
cs
xchg
lcall
leave
jae
mov
dec
in
scas
jnp
pop
lds
movsb
addr16
lods
dec
pop
ret
sub
stc
outsl
push
movsb
enter
movsl
push
or
mov
inc
in
or
sti
cltd
mov
add
jne
xor
stc
push
jb
dec
lret
cmpsb
cld
jmp
imul
jae
aas
out
mov
lock
mov
mov
pop
mov
pusha
fwait
in
outsb
mov
mov
mov
dec
sub
xor
add
push
clc
inc
jecxz
into
rcr
aas
scas
jp
test
sbbl
push
in
push
jle
sub
mov
stos
sub
bnd
jns
popf
push
std
fbstp
cmpsb
mov
and
fsubs
jae
mov
out
jo
in
mov
inc
push
shrb
jp
bound
mov
movsl
jp
loop
subb
push
xor
imulb
jbe
mov
xor
cmp
mov
sbb
in
std
test
mov
clc
shlb
cwtl
adc
or
scas
sbbb
add
bound
loopne
loopne
lods
js
loop
jns
fiadds
mov
pusha
call
pop
pop
je
lds
scas
nop
xlat
stos
xor
or
decl
aaa
in
out
int
outsb
mov
adc
stos
imul
loopne
and
in
lods
mov
fmull
add
das
leave
mov
fisttpll
jg
cmpsb
pop
pop
dec
or
mov
cmp
rcr
std
cmp
and
pop
rorb
hlt
popa
xor
movsb
pop
pusha
mov
arpl
loop
mov
test
ret
into
fimull
xchg
sub
sub
ficoml
popf
inc
mov
add
mov
xchg
iret
mov
jne
inc
mov
inc
pop
lods
rcll
cwtl
out
shrb
fsts
outsl
aaa
dec
mov
xchg
in
mov
mov
mov
mov
push
cmpsl
and
mov
dec
leave
or
in
fwait
cmpsb
jmp
mov
repz
jns
cs
fld
or
pop
aad
cmc
das
dec
pop
mov
orl
sti
lahf
dec
push
adc
lods
jns
cmpsl
mov
sbb
cmp
push
xor
adc
xchg
mov
sub
adc
and
pop
leave
ljmp
je
push
jnp
mulb
addr16
sub
cmp
outsl
cmp
hlt
adc
xchg
and
out
xchg
lcall
testl
xor
in
test
or
pop
jb
icebp
lods
add
dec
mov
and
stc
xor
mov
push
movsb
push
dec
stc
push
mov
push
pop
das
into
sbb
outsb
sbb
into
bound
jo
or
xchg
lcall
test
fmuls
xor
push
mov
pop
cmp
aaa
cltd
cld
lods
test
sbb
cmc
lods
out
cmc
cmp
and
leave
pop
cmc
mov
dec
and
cli
hlt
sub
jae
cmp
sub
sbb
decb
repnz
addb
adc
adc
dec
mov
fs
push
popf
ret
imul
arpl
in
vfmadd231ps
sbb
arpl
mov
mov
mov
mov
cmpsl
aaa
fsubrp
dec
sbb
jl
xlat
xchg
mov
aaa
scas
movsb
in
sub
and
fsubl
jns
mov
xchg
and
jbe
add
add
pushf
int3
or
xchg
mov
pop
mov
mov
adc
push
inc
imulb
in
xchg
or
imul
test
fdivl
and
jnp
mov
pop
mov
mov
insb
int
cmp
test
and
mov
xor
inc
scas
pop
in
mov
jae
adc
testb
hlt
pop
jo
inc
push
sbbl
imul
pop
into
mov
sbb
and
je
shrl
mov
sbb
es
and
ja
inc
lods
sub
fmull
idivl
sub
mov
sbb
aas
jp
pop
fwait
sub
nop
or
jle
xchg
jg
pop
sbb
hlt
leave
jb
pusha
std
mov
xchg
pop
nop
enter
push
dec
cmp
clc
mov
orb
mov
xchg
push
movsb
sbb
lods
jle
dec
lcall
insb
mov
loopne
aam
jbe
sti
sbb
xor
xor
cmpsb
push
test
mov
cltd
nop
shrl
add
ljmp
push
leave
push
imul
cmpsl
je
push
jns
xor
adc
push
out
adc
mov
adc
jo
rcrl
dec
int
mov
movsl
xor
fs
push
xor
jp
pusha
lock
inc
lds
jmp
outsb
xchg
sti
sub
lock
push
stos
sbb
mov
sbb
jo
andl
sub
inc
fsubs
xchg
push
xchg
lock
push
clc
leavew
cld
jae
add
mov
xor
xchg
jecxz
mov
adc
lods
pop
repnz
inc
add
cmp
cmp
dec
cwtl
push
stos
flds
incl
or
and
subb
ss
push
and
cmc
clc
pop
int
xchg
push
pop
sbb
push
gs
pop
jg
xchg
pop
dec
stos
cmp
out
roll
jno
and
shrb
imul
out
jae
sbb
movsl
sti
scas
sbbl
or
movsb
into
jp
int3
mov
add
aad
ret
leave
dec
push
dec
movsb
jno
shl
insb
in
cltd
mov
xchg
loop
mov
jmp
pop
popf
js
sahf
lret
sti
movb
cmp
gs
cltd
jmp
jg
xchg
push
jle
fwait
pop
scas
mov
xlat
mulb
xchg
roll
push
mov
ss
push
sarb
push
dec
inc
lods
ja
gs
lods
icebp
push
mov
dec
and
pop
data16
addr16
iret
insl
inc
pop
cmpsb
loop
inc
clc
mov
mov
fstps
data16
pop
push
repz
xchg
ja
pop
sbb
xor
push
shrb
sbb
stos
int
sub
mov
pusha
aam
or
pop
and
sti
scas
orb
in
out
loopne
in
sub
jo
pop
hlt
ja
fst
jg,pn
aam
imulb
sub
cwtl
mov
out
push
imul
lods
rcr
out
inc
sub
mov
xor
cmp
mov
les
push
jo
jecxz
shlb
or
negb
mov
and
mov
add
loope
test
jo
push
jne
cmp
push
or
divl
loopne
lcall
repz
jns
mov
orl
mov
sbb
xlat
dec
push
ss
stos
sbbl
out
mov
hlt
cmp
jnp
leave
sbb
ss
xchg
ss
iret
jae
push
xor
int3
andl
xor
add
popa
pop
pop
int
xor
sahf
outsb
out
mov
cmpsb
add
or
jns
test
cltd
xchg
xor
and
inc
dec
sti
add
repnz
or
outsb
mov
lret
mov
jo
rcrb
ds
mov
push
mov
imul
inc
xor
pop
pop
and
push
dec
push
mov
push
or
add
sti
xchg
cmp
jbe
xor
jecxz
xchg
adc
add
jp
lods
sub
repz
jo
cmp
sub
sub
fimull
fmul
jns
sbb
inc
cltd
lds
cmpsb
addr16
mov
mov
lods
adc
loope
jbe
sbb
js
mov
lods
popa
add
scas
mov
fisubrs
lds
mov
add
inc
mov
push
into
jbe
test
xchg
sahf
adcb
or
data16
popa
jge
cltd
adc
adc
push
adc
mov
mov
sbb
dec
pop
xor
out
push
movsl
cmp
mov
adc
lahf
outsl
imul
cmpsb
movsl
lret
xor
and
xchg
sub
in
dec
dec
inc
ja
jge
or
mov
leave
out
push
rcrb
dec
mov
jp
rorb
fsubrs
mov
hlt
out
jno
loope
aad
xchg
flds
pop
push
adc
mov
sub
xchg
adc
cmp
jno
sub
xlat
addb
into
jae
and
push
or
sahf
cmp
rcr
arpl
gs
rcrb
push
xchg
jne
dec
jnp
out
test
pop
enter
xor
inc
push
add
scas
mov
cmp
ret
sarl
scas
pop
mov
pop
mov
call
addr16
cld
rolb
pop
aas
lahf
ss
outsb
mov
push
jge
or
orl
inc
mov
sub
in
fiadds
xlat
pop
xchg
push
into
movsl
inc
leave
mov
push
sbb
hlt
enter
sub
cmpsl
mov
and
lcall
inc
lock
shll
mov
in
jmp
shrd
sbb
cli
test
xchg
and
xchg
jp
xchg
jnp
push
adcl
pop
mov
push
mov
rorl
adc
mov
shrb
cld
sub
icebp
ss
subb
mov
mov
rcrl
cmpsb
daa
jl
subb
push
xchg
mov
xchg
sub
ja
adc
in
xor
and
stos
aaa
sbb
roll
mov
dec
std
daa
dec
test
repnz
mov
or
mov
sub
stos
mov
mov
imul
mov
or
or
loop
movsl
push
xor
inc
inc
orb
loopne
in
xchg
adc
xchg
loope
cmp
mov
sub
jb
sub
jns
insl
enter
mov
int3
lods
out
shrb
or
out
in
add
push
mov
adc
cltd
cld
outsl
add
mov
or
pop
pushw
mov
testb
ret
push
cltd
mov
xchg
loope
call
dec
inc
cmp
out
repz
push
mov
mov
popa
cmp
add
je
int3
mov
cmovge
leave
lret
pop
inc
and
orl
adc
adc
pop
pop
sbb
in
or
sub
mov
lock
dec
add
movsb
or
fcomps
pslld
and
int
sahf
ljmp
lret
inc
mov
fidivrl
pop
out
cmp
fwait
jnp
out
sub
mov
fcoml
add
repz
add
jbe
cmpsb
loope
or
push
cmp
pop
out
pop
cwtl
shlb
sub
fsubrl
xchg
push
xchg
pop
or
daa
mov
adc
mov
cmp
out
nop
movsl
dec
push
outsl
outsl
pop
dec
push
push
xor
pop
jle
push
test
or
ret
and
mov
outsb
std
xchg
mov
cmp
mov
mov
cli
mov
jmp
pusha
jb
in
dec
cmp
dec
data16
fmuls
pop
inc
rcll
popf
fistl
jle
gs
xlat
cs
and
fs
sahf
fistps
repz
inc
lret
int3
insb
jae
mov
sbb
cmpsb
aad
loope
rcl
stos
add
mov
pop
sub
xchg
xchg
fs
popf
bound
out
jno
insl
ret
ficoml
test
dec
sbb
cmpsb
jb
push
sbb
mov
lock
out
aam
inc
stc
push
jbe
bound
cmp
ja
testl
cwtl
rclb
and
lods
inc
repz
call
sahf
or
add
in
push
mov
jecxz
jae
dec
jbe
stos
std
lahf
fisttps
push
and
das
insl
jmp
xor
cltd
js
int
sub
add
sbb
cli
xor
cmp
aam
clc
rcrb
scas
lcall
fs
push
inc
mov
test
cwtl
jge
fs
frstor
adc
gs
movsb
inc
xchg
lods
lods
imul
mov
pop
bound
aam
lea
roll
pop
sub
sub
inc
enter
andb
in
jecxz
inc
xchg
add
mov
outsl
pop
jge
dec
add
outsb
xchg
jne
xchg
sbb
or
in
mov
movsl
add
xchg
jns
mov
sub
rcll
xor
mov
aad
ss
shl
xchg
sub
ret
and
jbe
dec
inc
jge
cmp
lods
imul
adc
pushf
push
aas
dec
lds
mov
imul
inc
mov
clc
bound
sbb
cmp
fists
push
stc
push
or
imul
jg
ljmp
mov
jnp
jnp
fistl
loop
mov
dec
push
notb
js
xchg
add
lahf
jo
and
push
and
pop
add
dec
add
lea
mov
pop
sbb
xchg
es
xchg
jle
fdivr
push
add
leave
pop
pop
push
and
dec
xlat
dec
pop
imul
sub
insb
add
sub
push
jmp
inc
jnp
sbb
dec
nop
ja
mov
pop
cmp
push
sbb
jne
out
out
fsubrl
imul
je
movd
or
adc
mov
xchg
cld
sub
push
lods
cld
addr16
mov
aam
test
fdivr
push
add
js
repnz
data16
add
aas
jnp
jl
fdivp
scas
out
sbb
into
fdivrl
mov
sbb
hlt
lods
lds
add
dec
sub
cmp
cmp
enter
sbb
pop
sti
jo
mov
test
lret
jp
mov
xchg
shr
sub
inc
mov
push
jmp
ret
pop
jno
xchg
sub
sub
scas
sub
mov
push
and
out
idivb
and
scas
stos
adc
inc
sahf
js
jmp
gs
decb
push
fmull
mov
inc
pop
lahf
cli
out
mov
negl
test
and
cmp
cmp
sub
loop
imul
adc
pop
cmp
xorl
dec
or
and
in
in
jo
inc
add
lods
mov
jge
into
repnz
jg
mov
inc
out
icebp
add
cmc
push
gs
adc
xor
std
sub
es
mov
dec
out
and
jecxz
push
shl
dec
adc
rcll
mov
stos
fistl
inc
into
ss
sbb
lret
out
inc
jno
repnz
test
xchg
push
adc
pop
sbb
shl
xor
push
inc
dec
cmc
fs
push
cmc
icebp
mov
jo
cmp
inc
adc
mov
out
and
shlw
rorl
pop
pop
movsl
mov
dec
xor
lods
mov
xor
shr
inc
mov
and
inc
mov
xor
push
inc
ja
outsb
stos
sub
xchg
psadbw
je
mov
popf
push
inc
pop
or
mov
aad
mov
mov
dec
roll
add
pusha
cs
jp
dec
je
mov
and
dec
test
nop
rcll
out
daa
sbb
in
adcb
push
pushf
loop
xchg
in
es
imul
pop
test
sbb
adc
push
clc
adc
aaa
push
jb
addr16
mov
xchg
ds
ds
jno
lret
shrw
aas
xorl
and
addr16
and
jecxz
je
lock
mov
jne
adc
mov
or
in
outsb
sub
popa
lret
or
pop
out
sbb
xlat
pop
jp
sti
sbb
cmc
pop
mov
aaa
std
xchg
pop
add
push
shl
or
fimuls
fnstenv
lock
and
in
out
mov
in
sarl
sti
add
daa
and
in
cmc
xchg
push
jns
or
movsl
cmpsl
cld
lds
adc
insb
mov
lock
setbe
negb
dec
add
movsb
loope
sbb
and
int
or
cmpsb
inc
loop
pop
into
push
std
add
jecxz
mov
xor
adc
dec
test
dec
cmpl
push
out
dec
ss
adc
pop
push
xchg
sub
in
std
out
clc
frstor
ss
pop
sub
es
jne
pop
jnp
clc
out
lock
sub
movaps
jne
in
cmp
enter
jl
push
aaa
mov
mov
adc
adc
or
push
xchg
fistps
cmp
cmp
mov
outsb
jle
mov
sbb
pop
jl
and
jl
xchg
jb
out
adc
out
sbb
dec
icebp
lahf
scas
lea
out
cmpsl
cwtl
test
lea
dec
xchg
call
sbb
sub
stos
push
dec
and
orb
aaa
insb
and
adc
push
pop
mov
mov
imul
jne
sbbb
pop
and
xchg
loop
cli
mov
lods
rorb
ljmp
hlt
mov
push
push
jecxz
iret
das
xor
sarb
je
das
adc
cmpsl
inc
mov
push
or
mov
cmp
pop
and
fcmovnu
out
fdivrl
xlat
jno
pop
mulb
ja
test
jp
mov
push
test
lods
add
and
push
jo
in
fldt
lods
pop
or
or
xor
movsl
sti
ljmp
cmp
pushf
dec
fstp
push
repnz
adcb
cs
mov
lods
stos
insb
loopne
pop
adc
das
push
leave
mov
jo
push
pop
add
add
cli
dec
xchg
dec
adc
adc
movsl
ja
or
and
pop
cli
movb
xor
and
sbb
sbb
shr
sahf
jl
sub
popa
xchg
push
in
and
and
out
insb
add
hlt
push
out
into
xchg
cwtl
dec
mov
call
in
cld
and
mov
test
dec
lahf
sbb
pop
mov
jmp
aaa
sub
lahf
outsl
jecxz
packssdw
cmp
or
and
dec
inc
in
orb
call
jno
mov
shr
mov
xchg
dec
call
fcompl
mov
out
ljmp
push
inc
push
jnp
mov
sub
mov
out
lds
clc
xchg
cmp
xor
jg
in
sbb
lret
cli
lret
into
jp
push
dec
dec
mov
mov
xorl
sub
subb
scas
mov
push
inc
cmp
popf
pop
pop
ja
mov
pop
mov
leave
and
mov
sbb
arpl
stos
popa
cld
mov
mov
iret
std
jmp
lods
dec
lods
fstpl
sti
daa
pop
push
mov
mov
mov
addr16
incb
or
jmp
adc
cmc
mov
inc
pop
push
mov
in
push
sbb
daa
adc
fcmovu
cmp
call
inc
sbb
pop
xchg
cltd
decl
sub
cmpsb
mov
pop
jg
sbb
aas
or
xor
jno
lret
xchg
nop
mov
pop
cmpsb
push
adc
and
je
mov
jmp
mov
inc
dec
lock
add
lahf
and
inc
lds
push
imul
sub
mov
jl
cltd
cli
lea
in
mov
das
in
sub
daa
lock
jno
test
or
xchg
cmpsb
dec
or
flds
movsb
ret
bound
pushf
inc
xor
in
jb
adc
fs
ljmp
lds
aad
or
dec
fcmovnbe
xor
int3
pushf
ljmp
fsub
xchg
mov
outsb
or
insl
sarl
jns
fmull
cmpsl
int3
adc
adc
stc
sbb
movsb
out
adc
adc
inc
inc
popf
xor
repnz
mov
insb
mov
xor
std
dec
out
pop
gs
and
jmp
pop
sbb
cmpsl
es
cmp
add
cltd
rorb
mov
jge
dec
jno
lods
pop
addb
mov
jl
in
js
ja
dec
xchg
cmpsl
movsl
dec
es
sbb
hlt
xchg
cli
mov
pop
arpl
clc
mov
xchg
dec
rolb
popa
ss
jns
dec
mov
mov
mov
dec
push
cld
xchg
popf
push
sub
lret
mov
test
shl
out
cmp
push
rol
mov
xor
int
in
mov
xor
jge
imul
nop
add
fisubrs
lret
push
and
xchg
jbe
xchg
and
rorb
into
out
add
ret
lods
sti
sub
or
outsl
or
jo
jp
mov
mov
push
jecxz
stos
cltd
imul
jmp
xchg
jg
jne
cmp
fstpt
sub
dec
sbb
cmp
xor
add
mov
daa
adc
add
push
jns
and
mov
gs
adc
call
xchg
dec
pop
jo
cmp
jl
ljmp
in
int3
cmp
loopne
insb
pop
cld
jno
sarl
fcomps
push
bnd
es
sub
notl
out
lea
mov
stos
dec
aaa
into
ss
scas
cmp
nop
ds
adcl
add
jmp
outsb
push
jl
pop
shrl
iret
stos
cmp
and
xlat
lods
ljmp
pop
aam
push
add
iret
int3
jl
mov
out
dec
gs
pop
sub
mov
inc
shrl
cmp
lods
testl
imul
ja
sbbl
cwtl
mulb
lcall
mov
xor
pop
leave
mov
in
push
add
mov
sub
jecxz
pop
mov
clc
jmp
and
adc
ds
aaa
loope
push
pop
sbb
scas
repnz
pop
mov
scas
jne
test
sub
xor
mov
into
cmc
enter
pushf
loop
fs
push
and
out
fimull
pop
sub
stos
stos
fidivl
mov
mov
push
out
out
cmp
test
and
aas
add
jo
not
lcall
sbb
jns
and
lock
ja
out
cld
aas
xor
ja
and
cltd
jle
data16
mov
sarb
xchg
in
dec
and
xchg
cmp
or
or
xchg
sub
or
out
add
filds
mov
dec
jp
stos
insl
sbb
repz
pusha
mov
mov
paddusb
bound
push
and
mov
or
jmp
jns
dec
pop
stc
xorl
and
lret
test
xchg
dec
push
mov
mov
mov
addr16
out
add
mov
sahf
ljmp
inc
sti
inc
ss
fcoml
adc
test
clc
jo
fcoms
iret
mov
ficompl
cld
sub
in
pushf
xor
ljmpw
dec
das
sub
add
ss
pop
dec
jle
cmpsb
mov
test
insl
adc
popf
jbe,pt
ret
test
jae
xor
mov
pop
and
nop
les
cmp
dec
js
fucomi
dec
mov
scas
popf
inc
lods
push
inc
and
mov
aas
in
mov
or
lds
sub
inc
mov
mov
nop
rolb
inc
lds
addl
and
inc
pop
out
jne
sub
shll
or
pusha
pop
das
lds
or
and
xchg
movsl
outsb
sub
in
lds
dec
pop
mov
cmc
outsl
mov
jg
add
or
push
icebp
out
dec
mov
outsl
in
add
inc
jl
push
jbe
jo
mov
add
xor
push
dec
xor
imul
int3
das
and
dec
out
gs
pusha
push
hlt
movsb
jnp
insl
repz
out
dec
and
idivb
ds
mov
daa
mov
repz
sub
imul
int
jbe
mov
pushf
or
add
mov
mov
mov
movsl
adc
jae
push
pop
and
cmp
lret
xchg
mov
mov
cmpl
mov
rcll
mov
fildll
mov
and
arpl
mov
pop
in
cmp
cmp
jl
add
and
movb
push
jmp
cmp
adc
sbb
insb
push
daa
add
mov
mov
push
mov
in
xchg
inc
dec
or
or
lret
inc
inc
mov
push
pop
xchg
xchg
or
cmp
pop
scas
clc
ds
loope
pop
repz
nop
out
cmp
sbbb
xchg
jg
ficomps
lods
inc
jecxz
shr
pop
sbb
push
mov
je
push
addl
stos
push
cmpsb
cmp
pop
bound
xlat
clc
xor
push
cmp
les
or
imul
xchg
mov
cwtl
xchg
jle
inc
pop
imul
insl
out
sub
push
mov
ja
dec
aam
aad
jb
popf
mov
aad
shr
stos
jne
add
adc
or
aaa
inc
dec
fs
ljmp
sahf
inc
adc
cmp
dec
inc
rolb
roll
cld
xchg
push
xchg
inc
addr16
dec
int3
ret
sub
ljmp
inc
subb
mov
mov
into
sahf
leave
aam
shrl
push
pop
pop
aaa
and
mov
fiaddl
not
xchg
jbe
adc
and
outsb
push
xorb
mov
dec
push
pop
imul
lcall
fidivl
int
loopne
mov
in
cmpsl
mov
push
mov
int
mov
out
lods
daa
movsb
mov
mov
out
inc
fwait
cmp
dec
popf
mov
rcl
loope
ja
lcall
ds
xor
xor
pop
lahf
ret
out
mov
lods
roll
jle
rcr
or
movsl
and
ror
enter
push
ljmp
orb
and
fsubl
aam
xor
les
shll
orl
inc
notb
xchg
sub
rcr
jg
rorb
push
mov
push
fisttps
xor
cld
ja
sbb
jl
lcall
dec
mov
movsl
push
pop
negb
repnz
or
push
pushl
imul
pop
push
add
xor
std
aas
push
popa
rep
sub
pop
jo
lret
cmp
sub
fimull
xorl
pop
adc
rcrl
cmp
or
push
or
pusha
jle
ret
out
xchg
sub
jns
arpl
xchg
mov
mov
je
test
shl
fisttpl
stc
xchg
add
into
cmc
ja
jg
or
out
ud1
flds
xchg
sahf
push
stos
daa
jno
movsb
sti
xor
adc
in
mov
sub
cmp
inc
mov
dec
or
gs
add
xor
xchg
or
or
mov
pop
jb
xchg
scas
aad
ret
ficompl
inc
jns
subl
out
mov
loopne
fsubrs
and
rcrb
cli
fsubl
push
adc
ljmp
xor
and
ljmp
lret
fwait
jg
or
in
adc
push
out
cwtl
add
frstor
xchg
jo
lods
push
mov
mov
out
pop
sub
push
scas
sahf
roll
xchg
inc
int3
pop
shlb
and
movsb
orb
xorb
adc
sub
jl
in
sub
cmpb
rcl
jno
mov
jle
in
outsl
scas
pop
mov
cmpsb
cmpsl
xor
jb
hlt
lahf
mov
and
adc
push
mov
daa
dec
pop
lods
push
inc
addr16
or
cli
data16
dec
push
and
fildl
mov
test
xchg
sti
in
mov
inc
imul
outsb
and
mov
loop
daa
popa
jb
ret
lods
pop
std
xchg
enter
cmpsl
dec
push
push
mov
in
mov
xor
adc
cmpsl
sbb
dec
dec
mov
push
gs
inc
xor
inc
in
inc
lcall
inc
push
inc
xor
jle
movsl
xchg
push
sub
xchg
leave
jne
lods
inc
popf
push
icebp
xor
sbb
mov
xchg
aas
iret
inc
shl
int3
dec
sbb
or
and
cmc
fnsave
sbb
enter
out
inc
jmp
xchg
pop
push
pushf
arpl
add
int
push
mov
stc
ficoml
cmp
or
loopne
mov
stos
inc
arpl
mov
adc
fsub
mov
mov
fidivs
incl
push
jmp
cwtl
lcall
fst
pop
dec
inc
push
cwtl
enter
pop
aaa
inc
inc
jae
loop
or
gs
adc
mov
adc
xchg
and
cmp
xor
and
dec
js
sbb
bound
je
sub
pusha
ror
enter
adcl
mov
or
out
jg
ja
into
enter
pop
inc
xchg
icebp
mov
cmp
test
daa
incb
test
addr16
adcl
enter
and
es
inc
in
lcall
xor
dec
jmp
mov
dec
in
and
std
hlt
sbb
jge
mov
lret
test
mov
ja
ret
fisttps
negb
add
push
das
dec
xchg
movsb
iret
sub
lret
jae
sbb
adc
push
insl
repz
fldt
sub
ss
fnsave
cmp
cld
inc
sub
and
stos
mov
sbbl
mov
pop
xor
ljmp
xchg
std
inc
xor
mov
popa
mov
cmp
sbb
sarb
mov
leave
gs
cmp
stos
or
xchg
cmp
xchg
push
and
pop
xor
jmp
mov
sub
pop
lds
sti
mov
inc
mov
jecxz
mov
push
mov
jnp
mov
pusha
int
das
repnz
mov
jb
push
testl
loop
xchg
pusha
out
loopne
pop
int3
cmp
out
scas
rdtsc
stos
stc
mov
fimull
add
shll
daa
adc
pop
jae
test
mov
sbb
scas
mov
rorb
cmp
and
insb
int3
sub
adc
add
jno
cmpb
iret
in
jae
shlb
frstor
mov
es
xor
aad
push
xchg
push
pop
gs
rclb
xchg
jmp
shll
iret
or
pop
outsl
xor
fstl
adc
or
popa
xor
pop
mov
and
aam
pop
dec
arpl
push
je
jmp
xorl
push
sub
mov
pop
jb
dec
inc
push
xchg
adc
xchg
repz
jns
leave
cwtl
xor
jbe
jb
push
insb
sub
xchg
sub
add
mov
push
cltd
push
daa
je
and
push
stos
jns
xchg
xchg
vmread
sbb
push
pop
cmp
inc
xchg
xchg
repnz
add
lock
sarb
mov
xor
jle
nop
dec
lret
dec
lds
scas
cmp
aaa
jle
mov
inc
pop
jge
arpl
mov
enter
mov
mov
cmpsl
mov
mov
push
pop
in
pop
ds
aas
lods
mov
sub
daa
xchg
lea
xor
mov
push
fbstp
shlb
sub
sub
push
mov
add
mov
out
push
add
adc
inc
daa
jle
mov
and
jl
aas
mov
push
shl
ss
stc
mov
jle
jecxz
xchg
mov
cld
ljmp
xor
mov
add
ds
pop
out
pop
and
mov
inc
push
pop
push
test
testl
insl
rcrl
or
adc
mov
mov
imul
or
inc
xchg
inc
xchg
les
jb
inc
xchg
pop
xor
jbe
hlt
insl
pop
test
mov
daa
cltd
push
test
pusha
out
add
xchg
adc
das
and
lods
loopne
stc
ret
mov
mov
in
xor
mov
in
lret
adc
movsl
lods
push
cld
out
add
push
adc
pop
cwtl
imul
mov
jecxz
out
mov
push
out
loop
xchg
test
mov
mov
test
xchg
ret
mov
imul
sub
cli
mov
loopne
add
sbb
xor
and
and
xor
inc
fcoms
dec
jae
mov
cmp
test
cs
jno
rorl
or
aam
mov
imul
xchg
addr16
testb
xchg
and
test
scas
mov
sbb
bnd
or
mov
sbb
inc
xchg
mov
fimull
mov
cmpsl
inc
test
jno
xchg
enter
aam
xchg
scas
and
cmp
insl
aas
cwtl
sbb
mov
dec
add
xor
mov
loop
adc
and
out
mov
loope
push
mov
mov
push
sub
add
mov
loope
adc
std
imul
scas
dec
xchg
or
and
test
nop
imul
mov
mov
mov
in
add
sbb
dec
out
je
pop
sub
inc
test
aaa
fistl
stos
out
sub
shrl
mov
jg
mov
cmp
mov
stos
push
xchg
sub
ror
push
cli
adc
icebp
fmuls
and
cmp
fisubrs
xsha256
cmpsb
adc
jecxz
or
inc
pop
popa
cmc
lcall
js
lea
inc
or
adc
outsb
arpl
hlt
cmpsl
rorl
mov
test
mov
adc
jb
pop
push
int
jb
test
divl
push
mov
icebp
mov
add
loope
fcomps
call
pop
popa
cltd
scas
aad
pop
or
int3
mov
lock
and
jge
push
jnp
ret
out
sub
imul
imul
mov
and
pop
dec
pop
repnz
inc
out
cmp
insl
rclb
lret
dec
push
jmp
jb
mov
stc
and
inc
mov
sbb
jl
pushf
movsb
ljmp
stos
call
mov
push
xchg
add
cmp
in
push
idivl
add
icebp
mov
jge
pop
mov
stos
sbb
iret
std
xor
adc
pop
adcl
sub
mov
hlt
cmpsl
dec
in
fcomps
or
pusha
push
jne
inc
stos
insl
pop
mov
mov
mull
push
and
jns
inc
jne
and
push
iret
stos
adc
jmp
add
add
repnz
ja
mov
push
mov
stos
sub
sub
xchg
adc
rorb
mov
mov
fadds
dec
hlt
jecxz
and
adc
packuswb
sub
cmp
inc
cmpsl
cmp
ljmp
stos
insb
shrd
or
sbb
data16
iret
fidivrs
jns
repnz
or
mov
fwait
mov
cmp
adc
dec
enter
inc
jne
inc
outsb
adc
sbb
mov
adcl
push
push
fstl
adc
ja
xor
or
hlt
inc
jp
cmc
repnz
repz
imul
inc
pop
xor
push
push
dec
cmp
sbb
dec
fmuls
cmp
fnsave
stc
pop
ret
cmp
jae
cmp
mov
negl
sbb
sarb
cmpsl
ljmp
orb
int3
xor
mov
sbb
and
inc
push
lcall
cmp
and
cmp
aas
or
or
mov
adc
mov
add
imul
je
insl
shll
gs
xchg
ds
dec
call
pop
pop
pop
xchg
or
jbe
popa
lods
movsl
push
fmuls
out
or
faddl
xchg
jb
xchg
add
scas
cwtl
fldl
add
mov
xchg
std
movb
fcoml
mov
mov
add
mov
mov
dec
pop
adc
mov
jo
xor
add
bound
cltd
adc
out
lahf
sub
mov
mov
lcall
iret
pop
and
dec
pop
lods
mov
dec
add
addl
insl
mov
popa
ljmp
cmp
inc
xchg
pop
add
fnstenv
das
repz
fwait
mov
dec
sbbl
jecxz
lcall
sbb
mov
and
pop
or
lods
hlt
inc
or
xor
cmp
mov
fwait
ss
dec
outsb
vshufpd
fsubl
mov
mov
orb
cmp
fnstenv
fistl
mov
and
stos
xchg
into
cmp
mov
ljmp
or
outsb
in
je
pop
push
mov
ds
or
pushf
test
mov
inc
cmp
ret
sub
push
fwait
adc
es
cmp
dec
gs
fs
mov
dec
mov
xchg
jg
or
jecxz
jge
iret
mov
fwait
cmp
aaa
sbb
xlat
shll
mov
jo
ficompl
call
shl
mov
xchg
push
lea
and
jmp
sub
mov
fsubs
and
cmpsb
mov
lock
shrl
fstps
lods
or
mov
das
iret
jo
dec
or
incl
xlat
dec
pop
lods
sbb
or
into
enter
push
or
mov
into
adcl
adc
xor
subl
add
in
mov
mov
test
test
xchg
fstpl
out
shl
fldcw
out
mov
pop
int3
push
mov
jae
push
push
mov
in
ss
push
lcall
inc
ljmp
sbb
gs
maxps
sbb
cwtl
jae
push
mov
cmpsb
add
jg
jmp
repnz
out
daa
mov
and
fstl
aam
push
fbld
jbe
jg
cmp
loop
cmp
dec
jle
jae
cmpsb
push
cmp
stc
jae
aas
jno
pop
shl
decb
add
in
sub
sub
test
jbe
xchg
ds
addr16
in
fsubrl
pop
jb
sbb
xchg
adc
fsubrs
repz
xor
xor
out
mov
cmp
clc
es
mov
rcr
sub
push
dec
out
push
clc
cld
cmp
xchg
push
xchg
xor
sbb
and
repnz
orl
in
dec
in
fnstenv
andl
push
mov
inc
stos
lods
les
push
push
push
repnz
sbb
das
mov
orb
int
cmpsl
mov
sub
dec
add
inc
test
call
aaa
lods
jae
adc
fisubrl
je
push
int
jecxz
fcoms
push
arpl
pop
add
and
loop
sub
aam
hlt
push
and
add
push
dec
inc
in
stc
clc
pop
je
mov
mov
mov
pop
or
mov
mov
and
dec
in
test
inc
sub
jnp
dec
je
aas
dec
cs
sbbl
cli
outsl
aaa
mov
rcr
pop
jno
xor
xchg
rcll
jmp
icebp
mov
push
sub
jle
mov
xor
sub
pop
outsb
movsb
and
pop
adc
mov
jg
and
cmp
sub
inc
aad
xchg
ss
jge
fisubs
movsl
mov
stos
xchg
pusha
jl
fsts
int
arpl
popf
test
cwtl
sub
out
add
mov
xchg
mov
jg
fwait
cmp
int
or
shll
pop
mov
pop
push
popf
jp
bound
mov
sub
ficompl
lock
int3
dec
xchg
je
sahf
repz
dec
cmp
push
add
jbe
outsl
je
sbb
sbb
or
push
push
sbb
aas
push
jns
test
in
or
cmp
leave
mov
push
and
xor
and
mov
mov
shll
movsl
mov
repz
push
sbb
xor
dec
xchg
cmp
jae
adc
mov
daa
enter
mov
repnz
adc
hlt
iret
enter
mov
testl
adc
dec
rcrl
cli
test
xchg
jno
jbe
jmp
cmp
pop
out
movsl
sarb
ror
pop
jbe
xor
mov
pop
daa
sarl
cmpsl
mov
gs
push
dec
ret
xor
or
xchg
pop
push
je
popa
and
fistl
cmpsb
idiv
mov
int3
jae
daa
rol
sti
inc
cltd
insl
mov
dec
lcall
ucomiss
push
popf
jg
mov
and
lahf
mov
out
mov
sub
push
mov
jg
inc
pop
mov
shlb
movsl
sbbb
in
mov
shrl
popf
mov
inc
cmp
daa
jo
or
pop
jp
std
dec
mov
lahf
dec
xchg
leave
je
push
sahf
and
jb
xor
lcall
scas
aas
shr
lret
xor
imul
xor
out
flds
in
rcll
iret
mov
lahf
cld
shlb
pop
jnp
rcr
fcoms
lcall
jne
jge
mov
loop
mov
ret
mov
inc
dec
insl
jg
pop
clc
scas
aam
cs
arpl
das
cli
lods
mov
dec
cmpsb
jecxz
pop
aad
pop
jmp
mov
jnp
and
mov
xchg
dec
mov
xor
mov
lcall
mov
jb
fldenv
cmp
jl
and
jmp
adc
sbb
enter
mov
xor
fldt
daa
sub
mov
mov
inc
sbb
pop
imul
in
fisubl
sbb
das
cli
icebp
rcl
push
pop
gs
rol
push
popf
sbb
jnp
push
stos
jmp
repnz
cmp
mov
sbb
or
xchg
rcrb
and
sbb
call
mov
cmp
jae
fiaddl
outsl
cmpl
lahf
lcall
mov
cmp
popf
mov
stos
push
lahf
aam
jne
xchg
nop
inc
xlat
addl
push
mov
fldl2e
out
xor
test
daa
push
mov
sub
pop
movsb
mov
jns
lret
xor
leave
xchg
pop
sub
sbb
es
enter
dec
scas
scas
mov
pop
cvtps2pi
fwait
pop
push
add
xchg
rcrb
adc
mov
aas
push
pop
repz
mov
bnd
inc
adc
inc
fnstenv
adc
pusha
jnp
dec
fs
ja
and
shll
movsb
xchg
adc
push
adc
stc
mov
sti
stos
push
and
or
jnp
add
into
pop
pop
mov
ss
jae
test
inc
or
fldcw
rcrb
arpl
sbb
mov
popf
icebp
ficompl
dec
gs
jno
in
xlat
push
push
xchg
xchg
mov
dec
jge
cmpsb
fwait
jg
mov
and
lret
mov
enter
stos
jne
loop
sbb
push
jecxz
mov
mov
shrb
dec
adc
movsl
mov
sbb
in
xchg
inc
mov
repz
xor
dec
neg
dec
pop
outsl
mov
sub
scas
adc
push
push
mov
push
sub
pop
lea
mov
mov
notb
cs
js
in
lods
or
pop
pushl
flds
pop
outsl
xchg
cmp
popf
repz
adc
leave
jnp
mov
clc
imul
in
dec
imul
sbb
in
jecxz
mov
js
jp
test
nop
mov
test
cmpsb
push
clc
pop
ds
testb
adc
clc
sbb
enter
loope
mov
xchg
pop
out
xlat
mov
int
mov
in
or
imul
pop
fldl
xchg
xchg
push
fcmovb
lcall
ljmp
outsb
fdiv
clc
fstl
imul
js
adc
in
lcall
test
jmp
out
ja
test
jmp
rclb
fbld
ret
fwait
aad
dec
inc
inc
push
add
subb
mov
mov
pop
repnz
jl
xlat
movsb
mov
pop
push
ljmp
push
add
ret
repz
push
cmpsb
sahf
and
mov
mov
lret
pop
sbb
loope
imul
ja
call
insb
iret
and
push
cmp
cwtl
mov
or
rorl
test
mov
ret
or
insb
add
or
int3
loopne
adc
mov
inc
inc
aad
jg
arpl
out
scas
add
adc
jp
xor
mov
xor
lods
cld
xchg
fsubrs
push
xchg
mov
add
addr16
jge
jg
pop
xchg
xchg
insb
sbbl
loop
fistpll
pop
fstpl
mov
xchg
xchg
sbb
pushf
movb
xor
xchg
cmpsb
mov
push
cmp
mov
xchg
dec
lock
ja
stc
cwtl
cs
mov
pop
cmp
subl
pop
jb
outsb
xchg
fwait
fs
in
pushf
lock
ud1
xor
xor
mov
divb
mov
arpl
add
mov
mov
insl
dec
js
mov
and
clc
cli
cld
gs
mov
jo
addr16
add
fwait
mov
dec
je
hlt
out
ljmp
mov
out
inc
ret
sub
pop
xlat
push
adc
shll
and
add
jmp
ret
xchg
mov
loopne
xor
sti
sub
fisubrs
loope
clc
lods
ds
xor
pop
out
xchg
xor
pop
shlb
bound
mov
mov
mov
and
ds
fchs
mov
popa
lods
pop
push
fmuls
mov
daa
ret
jl
pusha
movsl
loopne
ja
shr
ret
adc
xor
lret
clc
aaa
ss
dec
add
fsub
xor
test
jg
inc
or
aaa
mov
daa
dec
push
push
or
inc
call
and
cmp
or
cmpsb
add
ret
pop
push
jl
mov
push
hlt
shl
ret
push
mov
adc
jb
xchg
and
xlat
lahf
fisubl
or
rorl
scas
fidivrs
mov
cmc
add
push
ret
sub
sub
sub
pop
jecxz
push
jl
dec
adc
out
js
pop
mov
mov
cmc
pop
mov
mov
mov
xor
in
bound
adc
sbb
push
stos
jmp
cmp
or
mov
inc
addr16
cmp
xor
test
xchg
push
xchg
push
cli
sbb
pop
dec
push
xor
nop
cmpsl
push
ret
add
adc
bound
mov
adc
xor
ds
std
cs
enter
das
and
lret
push
faddp
mov
lods
xor
cltd
push
sbbl
movsl
mov
cmc
add
and
fmul
xchg
pop
jecxz
loop
fiaddl
mov
push
insl
and
test
jge
push
xchg
sub
lock
scas
dec
or
mov
cmp
ss
cmp
jge
in
in
mov
inc
test
lds
jle
inc
mov
xchg
sbb
pop
xor
jbe
dec
dec
aad
xchg
or
adc
jbe
enter
inc
add
xor
push
jg
fwait
lock
les
stos
mov
pushf
pop
jbe
inc
neg
mov
mov
inc
or
movb
shll
mov
inc
or
and
fbstp
push
cmp
mov
aad
loop
repz
insb
add
or
jne
adc
push
mov
aaa
sub
inc
lods
ret
jl
jmp
xor
in
inc
mov
add
sub
sub
in
add
inc
sbb
cmp
inc
adc
xor
cli
data16
cli
in
fisubl
jecxz
mov
cs
push
xor
jge
out
pop
jns
cmp
clc
cmp
sub
dec
jne
and
jle
stos
iret
iret
in
int
aas
bound
jb
push
adc
jecxz
push
imul
ljmp
rcr
orb
mov
enter
cltd
push
clc
popf
push
add
outsb
je
push
les
movl
dec
fs
cld
mov
das
stc
sub
inc
jle
icebp
jmp
lds
pop
xorb
in
mov
ss
adcb
or
test
ja
pop
cwtl
adc
sbb
sub
pop
cmpsb
pop
insb
insl
imul
mov
int
push
mov
xor
cmp
dec
mov
lahf
jmp
push
roll
adc
pop
adc
js
push
addb
mov
stc
out
inc
sub
adc
mov
sub
sbb
cs
scas
bound
imulb
adc
inc
cmp
fcmovb
popf
xchg
mov
divb
sub
aaa
ja
icebp
roll
jmp
mov
in
mov
ret
and
adc
repnz
or
negb
cmp
jno
fidivrs
clc
mov
dec
sbb
fistl
pop
ret
xor
push
jmp
mov
in
inc
insl
or
mov
mov
insl
jnp
jne
push
xchg
fstpl
outsb
movsl
mov
mov
adc
fstpl
xchg
daa
std
jg
dec
jne
sub
test
in
cmovb
aaa
pop
or
test
sub
pop
decb
fcomi
mov
insb
cmpsl
adc
cmp
pushf
dec
fidivs
dec
pop
adc
or
mov
repz
xchg
and
push
and
outsb
shrb
pushf
pop
mov
arpl
ret
cmp
jno
cmpsb
jb
scas
dec
nop
mov
jle
and
repnz
stos
mov
xchg
aam
and
lret
subl
xchg
ss
or
add
or
push
repnz
flds
mov
and
test
test
xor
xor
mov
dec
xcrypt-ofb
cmpsl
sub
inc
mov
sub
xchg
push
pop
push
dec
clc
sti
dec
pop
dec
cmpb
data16
inc
cmp
cmp
inc
pop
add
adc
scas
cltd
shrb
fbld
dec
xor
xlat
cmp
jne
pop
push
jb
and
hlt
ja
push
sti
jno
notl
inc
lahf
popf
lcall
xchg
cmpl
test
inc
negb
lahf
mov
push
adc
cmp
mov
aas
mov
add
sub
sub
loopne
mov
xlat
sbb
rolb
jb
mov
mov
fimuls
sbb
add
sbbl
enter
vmread
lcall
mov
and
dec
ja
adc
lahf
scas
in
add
mov
pop
xor
inc
push
jae
in
andb
hlt
pop
out
in
leave
or
inc
movsl
mov
faddp
cmp
in
jae
push
xor
nop
adc
jg
addl
iret
jns
and
cli
enter
pop
roll
lods
and
pop
jne
out
mov
or
mov
pop
cli
stos
sub
stos
popa
sub
gs
test
lock
xor
ret
mov
adc
fstps
inc
cmp
insl
cmp
add
loope
adc
mov
mov
stc
dec
mov
xor
out
dec
xor
int
jl
sub
add
push
inc
fsubl
add
cmc
jae
outsl
push
push
popa
cmovne
test
int3
fwait
lock
jo
mov
adc
push
xchg
lret
dec
xchg
gs
push
xorb
jne
push
out
and
xchg
mov
add
adcl
jle
gs
adcb
arpl
and
jae
repz
aaa
ja
xor
scas
adcb
inc
and
mov
pop
inc
iret
sub
es
dec
push
or
mov
dec
cld
dec
aaa
push
lock
aad
sbb
enter
push
sbb
push
push
leave
ror
lea
aaa
push
stos
nop
mov
mov
push
jnp
xor
adc
mov
lahf
jae
stos
cmp
or
mov
rol
mov
gs
pop
imul
in
mov
xor
inc
xor
lcall
mov
push
mov
dec
enter
pop
btc
mov
scas
sub
mov
or
arpl
pop
sbb
popa
cltd
ret
sti
mov
mov
ds
jb
enter
push
stos
addr16
fcmovne
mov
and
mov
adc
ret
lret
xor
hlt
jnp
mov
dec
mov
lock
imulb
sar
xorl
mov
ret
sbb
add
test
xchg
xchg
mov
cmp
jne
mov
pop
ret
pop
jae
inc
repz
lcallw
xchg
pop
outsb
rcl
repz
jb
sub
sub
and
int3
in
ja
xchg
xchg
cwtl
inc
xor
dec
pop
aaa
imul
outsb
sbb
pop
in
mov
inc
out
and
jae
lret
sbb
test
sub
movsb
lock
imul
or
sub
xor
aam
cmpsl
adc
insl
sbb
scas
cmp
adc
mov
ljmp
and
dec
pop
inc
packssdw
aad
in
mov
cld
rcll
popa
jmp
adc
xchg
out
aas
xor
add
mov
jmp
cs
movsl
testl
ret
iret
in
pushw
lock
popa
icebp
mov
stos
xlat
loope
cmpsb
sub
mov
xor
mov
int3
dec
jg
cwtl
fyl2x
sti
jae
test
jb
push
rcl
sbb
sub
mov
sti
mov
cmp
out
rcrl
mov
bound
bound
sub
roll
ss
lods
sarl
insl
xchg
test
lods
loopne
js
mov
mov
mov
rol
push
jg
push
test
xor
jmp
scas
test
icebp
gs
sahf
call
mov
stos
sti
and
sbb
in
push
addl
lods
pop
mov
inc
aad
pop
mov
or
adc
scas
int3
rcll
repnz
jmp
stos
mov
mov
test
cs
xchg
inc
cmp
iret
cmpsl
mov
mov
test
pop
idivl
inc
out
push
jae
addl
mov
or
sub
dec
or
jne
push
pop
roll
test
push
ds
fucomp
lock
subl
je
inc
pop
jno
leave
sbb
mov
xor
push
jle
mov
mov
jns
stos
pop
inc
mov
mov
jle
nop
push
sub
aad
inc
cmp
add
mov
push
mov
mov
es
sahf
sbb
les
xlat
movsl
out
sarb
push
and
inc
xchg
inc
pop
cmp
imul
add
cmp
mov
jge
mov
rclb
loopne
pop
sbb
out
sbb
xor
iret
jg
mov
ljmp
push
xchg
mov
scas
inc
gs
test
xchg
dec
jo
and
mov
push
cmpsl
mov
xchg
dec
test
push
adc
cld
nop
sub
or
pop
or
gs
cmp
push
into
aas
arpl
pop
pop
cmp
sub
push
pop
outsb
icebp
in
es
jmp
jecxz
fxch
or
or
jge
pop
pop
pop
sbb
pop
cmpsb
mov
cmp
mov
sub
scas
and
mov
push
sbb
mov
fstl
lds
stos
cli
rcr
test
xchg
in
fnstenv
repnz
push
ret
push
es
or
cmp
or
fdivrl
jo
cmp
jnp
out
imul
inc
sub
icebp
jnp
and
sub
adc
jg
cmp
jg
mov
incl
das
sahf
dec
pop
shll
cmp
push
or
inc
jnp
push
fsubrl
xor
dec
test
mov
or
repnz
test
cmc
add
dec
mov
xchg
or
xor
outsb
fsubl
outsb
mov
jle
fdivs
xor
popa
inc
dec
mov
cmp
clc
ds
ret
pusha
das
and
fcomp
sbb
mov
add
movsl
gs
out
cltd
icebp
outsb
pop
add
push
jae
stos
fimull
dec
inc
lods
push
daa
stc
lea
pop
out
or
aaa
popf
cli
sub
test
sbb
pop
and
adc
jns
mov
test
fucomip
sub
mov
xor
int
jb
mov
mov
fwait
adc
jle
lea
lret
repz
test
inc
nop
aad
cmpb
mov
mov
cli
sub
dec
pop
test
mov
shlb
cmpsl
fbstp
xchg
lods
mov
gs
or
repnz
mov
in
or
add
in
add
outsb
adc
mov
negb
inc
mov
cmp
cmpsl
adc
scas
shrl
mov
lahf
mov
push
in
cmpsb
test
jnp
test
cmpb
jae
add
insb
out
in
in
xchg
jecxz
scas
lea
cltd
pusha
pop
scas
sbb
xchg
xchg
sub
mov
pop
pop
push
jl
sbb
sub
movsb
adc
daa
adc
outsb
sbb
xor
rorl
rclb
stc
scas
loop
insb
scas
inc
call
jge
jbe
pop
dec
mov
les
cwtl
sti
push
jp
cmpsb
xchg
fiadds
icebp
sub
xchg
jge
test
in
mov
push
lock
in
lret
shrl
ja
mov
push
filds
cmpsl
nop
mov
dec
lods
sub
cmp
pushf
enter
movb
sti
sbb
ljmp
test
mov
cmp
xor
mov
imul
rorl
jo
mov
mov
jb
pop
sbb
jl
test
in
jne
cltd
add
cmpsl
push
insb
mov
popa
into
push
out
cli
ja
stos
xor
adc
sub
push
call
adc
cmp
aad
add
inc
pop
std
ret
xor
scas
push
sbb
shufps
test
add
or
sub
and
mov
les
loope
dec
outsb
or
ja
clc
addr16
sub
aad
lds
fwait
mov
mov
iret
fimuls
sbb
push
sub
popa
mov
and
push
and
fwait
cmp
pop
imul
das
pop
mov
mov
aaa
mov
cwtl
push
or
sbb
mov
bound
and
jae
mov
arpl
sar
push
mov
adc
push
mov
les
xor
js,pn
sahf
push
sahf
pop
jg
xchg
sub
mov
stc
push
push
enter
push
pop
scas
add
clc
xlat
add
js
ret
pop
mov
or
dec
xchg
xchg
jnp
popf
mov
dec
push
lret
mov
je
cltd
popa
mov
sahf
and
cmp
mov
cmpsl
xchg
cmp
pop
pop
in
push
ss
push
mov
in
jno
sbb
add
scas
mov
or
sbb
movsb
push
jp
lds
jne
inc
add
int
in
adc
add
std
lret
loope
dec
dec
lret
sbb
mov
lds
ds
xchg
mov
mov
lret
cmp
jg
test
dec
sbb
sti
jp
fists
mov
aam
stos
test
add
repz
push
shl
loop
lea
rcll
push
das
aad
fs
adc
jg
pop
or
loopne
dec
push
fs
std
add
and
fldl
mov
test
test
pop
loopne
inc
adc
inc
fimull
jg
jb
add
in
clc
ret
mov
cmp
adc
jmp
mov
fs
cmp
imul
cmp
xchg
push
xlat
sbb
jp
in
mov
pop
aad
fisubl
aad
cmp
sub
pop
faddl
ljmp
pop
add
jnp
imul
fstpl
clc
cltd
imul
insb
es
aaa
dec
xor
dec
or
sahf
sub
sbb
scas
add
cmp
cli
xor
xchg
and
jnp
orb
int
js
or
mov
inc
push
jmp
mov
mov
xor
scas
jmp
movsb
iret
leave
and
aam
pop
enter
and
push
adc
mov
adc
dec
pop
aad
inc
in
and
jmp
cmp
sub
rol
xchg
cmp
lret
xor
fdivs
mov
lods
stos
ss
rcl
dec
pushf
adc
or
mov
in
pop
and
fs
dec
bound
sbb
mov
jbe
mov
loop
dec
jnp
dec
xor
inc
dec
fwait
pop
sbb
cmpsb
repnz
scas
out
xchg
out
pushf
enter
gs
addr16
cmpsb
pop
mov
xor
aaa
ret
add
mov
lret
mov
lds
cmp
mov
arpl
std
mov
push
push
add
xor
ret
dec
ret
cli
sbb
out
push
xchg
aad
nop
push
sub
and
dec
lea
mov
iret
mov
addl
enter
adc
cs
adc
adc
cmpsb
cwtl
rcrl
dec
mov
mov
movl
mov
lret
xchg
pushf
shlb
ss
add
lds
dec
int
mov
lea
sub
push
adc
push
add
push
mov
cmc
aam
jns
in
movsl
push
arpl
cmpsb
add
pop
insb
repnz
push
imul
enter
ds
fisttpll
repnz
mov
std
jmp
leave
sub
push
xchg
scas
xchg
outsb
xchg
hlt
and
shl
arpl
sahf
xor
xchg
push
jno
lock
imull
cmc
fwait
lret
xchg
popf
inc
push
filds
jnp
sbb
xchg
add
and
fucomi
sbb
insl
jl
jno
hlt
cmpsl
cmp
and
mov
dec
and
jg
adc
mov
mov
mov
xor
jecxz
cmc
push
lods
fs
ds
sub
push
adc
mov
mov
push
jg
jge
mov
push
aaa
jns
imul
test
push
stos
pop
push
jecxz
jnp
xchg
fimull
mov
jae
stos
push
fildll
mov
jne
repz
loopne
or
icebp
shr
loope
pop
dec
ret
subb
add
fstpt
and
xchg
pusha
sti
icebp
ljmp
sti
lcall
xor
mov
push
int
jnp
pop
jo
es
xchg
es
loope
jle
mov
adcl
inc
inc
gs
leave
imul
mov
adc
jnp
and
mov
cmp
cmp
aam
jbe
popa
jl
dec
pop
xchg
and
xor
pop
jp
cmp
jae
pop
ds
aam
popa
push
testb
testb
xor
and
imul
inc
popf
xchg
enter
popa
inc
js
sahf
xor
jnp
dec
fiaddl
mov
jecxz
and
and
es
ret
cmp
iretw
bound
les
fnstenv
sub
dec
or
stos
mov
fs
xchg
mov
cmpsb
xchg
popa
fdivr
aaa
adc
outsl
inc
xchg
pop
test
jmp
jl
xchg
int3
xor
mov
aam
pop
jge
jge
lret
sbb
bound
jo
mov
in
mov
sbb
mov
leave
mov
neg
shl
fldl
add
and
les
cmp
loop
mov
mov
mov
pop
push
push
xchg
cld
orb
mov
sub
inc
insb
sbb
mov
inc
fiadds
call
cltd
out
adcl
and
inc
frstor
sbb
sbb
pop
and
movsl
mov
inc
mov
stc
xor
push
fistl
push
dec
xlat
adc
push
in
sbb
jnp
cmp
sub
cmp
fdivs
subb
and
or
clc
aas
mov
pop
push
imul
push
icebp
mov
push
add
mov
and
lds
les
cmpsl
sub
mov
dec
push
arpl
leave
add
xor
push
dec
rclb
enter
push
stos
das
cmp
jp
add
dec
inc
adc
repnz
xchg
stc
dec
add
lcall
mov
sub
mov
mov
aad
xchg
mov
xchg
push
lea
xchg
or
push
negb
or
imul
push
stos
push
pop
push
ret
mov
stos
adc
insb
cltd
out
sahf
rcrl
data16
cmc
scas
xor
scas
int
mov
shll
cmp
push
int
push
es
xor
jp
scas
out
xchg
aas
enter
pop
hlt
lahf
dec
pushf
cmp
xchg
cmp
push
adc
out
inc
leave
mov
push
pop
xor
adc
lret
in
or
push
xor
std
aaa
outsl
aas
sbb
mov
pop
in
or
cmp
mov
fwait
ljmp
scas
mov
fwait
add
add
xchg
mov
push
pop
push
aam
cwtl
das
inc
cmpsb
cmp
lcall
aad
xchg
cld
ret
aam
popa
mov
in
or
in
push
sub
jge
mov
mov
sbb
pop
and
sub
mov
add
adc
cmc
mov
std
popa
ficoml
bound
xchg
pop
cmp
mov
xlat
inc
rorl
mov
mov
lds
lods
jae
jecxz
push
mov
jno
lcall
push
mov
fwait
rorl
or
xchg
bound
xor
mov
stos
cmp
daa
push
or
testl
fwait
sbb
sbb
adcl
rclb
out
sti
fs
test
outsb
repz
xchg
lea
xchg
jo
fcoml
lea
jne
lahf
sub
shl
scas
mov
push
lods
inc
adc
rorb
dec
push
push
outsb
adc
jle
movsb
sbb
rcll
insb
pop
xor
es
sbbb
xchg
mov
test
aam
sub
fisubs
sub
cmp
out
movsb
push
and
push
lds
fmul
sub
cs
and
repz
cmp
lods
mov
xchg
adc
mov
imul
xchg
imul
cmpsb
cmp
sbb
inc
iret
sar
jl
mov
flds
ljmp
out
mov
aaa
adc
cmpsb
fistl
jo
stos
daa
push
sbb
xor
push
and
jmp
cmc
arpl
inc
mov
fsubs
mov
dec
mov
xor
inc
in
mov
pop
cmp
lods
jns
mov
adc
pop
inc
jno
xchg
push
pop
xor
or
les
mov
negb
sub
jmp
xor
or
popf
aaa
xchg
fldenv
mov
lea
dec
add
imul
or
push
pop
inc
inc
sub
inc
mov
adc
fcomps
aaa
shlb
inc
repz
mov
lds
hlt
dec
inc
mov
and
jmp
mov
xor
into
adc
stos
xor
add
mov
adc
sbb
add
leave
les
mov
xor
outsb
mov
call
add
add
neg
std
cld
sub
add
cwtl
repz
or
bound
pop
fwait
push
push
xchg
jno
fwait
mov
sub
out
sbb
sarb
clc
inc
addr16
cmp
stos
push
in
les
add
in
adc
xorl
lret
dec
test
dec
pop
or
add
decb
cmpsb
ret
xchg
pop
push
out
cwtl
aaa
mov
andl
into
push
dec
popf
inc
sbb
lret
fdivs
mov
pop
ja
jae
add
lods
ljmp
pop
sbb
aad
out
mov
dec
push
mov
ret
cmp
dec
or
add
lods
cmp
pop
dec
sbb
pop
loop
jp
hlt
fcompl
adc
jns
fsubrl
cmp
movsl
daa
pop
lea
outsl
aad
in
aad
neg
xchg
insl
test
test
bound
ljmp
jb
add
dec
cmp
ror
mov
inc
push
add
stc
xor
dec
jecxz
repz
dec
test
or
outsl
in
jl
jns
leave
push
lea
mov
sub
jp,pt
cmp
ror
stc
mov
or
pop
xor
dec
xrelease
push
cld
out
scas
movsl
sarb
fsubrp
fsts
dec
mov
in
shll
push
sub
push
int3
or
xchg
jecxz
les
sub
push
in
and
pop
stos
mov
fsts
sbb
mov
or
dec
mov
ret
cmp
adc
mull
sub
or
dec
mov
inc
inc
dec
lods
ss
mov
xchg
test
dec
sti
xchg
cli
rol
push
outsl
imul
movsl
pop
fcmovne
decb
andb
scas
loop
shl
mov
insb
mov
add
sbb
das
sub
jl
cli
jle
cmp
mov
pop
cmpsb
mov
cmp
jb
inc
xor
mov
loop
and
out
cld
mov
cmp
stos
push
sar
push
inc
dec
mov
jle
jmp
add
and
ret
sub
jae
call
lods
in
loope
sbb
adc
dec
sti
outsl
inc
mov
dec
mov
std
sbb
jmp
sub
mov
lock
cli
push
cld
loope
inc
dec
clc
cmpsl
mov
aad
sub
push
and
lahf
dec
fisttpl
push
call
xchg
clc
imul
repz
sbb
mov
push
notl
imul
xchg
dec
stc
fwait
mov
mov
pop
mov
pop
imul
jg
outsl
in
push
mov
jns
sbb
scas
mov
mov
in
faddl
mov
sub
jge
ds
jg
outsl
test
test
fnstcw
sub
xlat
fdivrl
mov
in
adc
jne
mov
add
imul
jl
loop
add
enter
lret
pop
in
xor
sarb
xchg
inc
jle
rolb
mov
pop
insb
sbb
imul
enter
jno
inc
add
xor
lret
outsl
mov
es
iret
fs
jecxz
xor
xor
sti
mov
inc
stos
lock
xchg
std
xor
int3
mov
shl
mov
cli
leave
adc
xor
xchg
lcall
mov
add
imul
mov
mov
mov
jo
dec
push
les
lret
fldt
inc
fwait
sub
addb
xchg
loop
cmpsb
adc
stos
adc
mov
push
mov
dec
sbb
lcall
adc
xchg
adc
jno
test
cs
nop
dec
jg
lret
test
xchg
sub
jge
cli
mov
mov
enter
fadd
loope
cmp
and
xlat
pusha
in
js
and
fnstcw
call
ret
cmp
xor
jae
xchg
cld
stos
jb
push
push
rcrl
add
lahf
push
pop
cmpsb
xchg
iret
and
lods
insb
fldcw
shl
clc
adc
mov
daa
jae
int
pop
adc
mov
jns
push
pop
xchg
pop
nop
inc
xor
fpatan
and
lods
movsl
mov
mov
cmpsb
and
or
jmp
es
sub
xlat
xchg
mov
jecxz
mov
ljmp
sbb
mov
loope
jns
add
mov
inc
sub
je
cmp
mov
enter
inc
jno
out
push
shll
lds
sbb
pop
push
or
pop
inc
leave
into
fidivrs
sti
insb
xchg
movsl
jnp
popa
jecxz
fwait
sahf
stos
stos
pop
cltd
ror
dec
sub
das
pop
xchg
std
daa
shlb
daa
outsb
iret
aaa
xchg
outsl
and
jmp
sbb
sub
mov
cs
cmp
leave
xlat
je
movsl
inc
sub
and
lea
add
in
dec
xchg
sub
xchg
push
inc
xchg
ret
cmp
js
ret
xchg
push
jmp
push
stos
or
adc
mov
pop
mov
sbb
out
mov
mov
inc
mov
add
cmp
out
sub
arpl
lods
hlt
sahf
mov
insb
mov
gs
ffree
inc
roll
orl
push
push
fs
pushf
xchg
mov
js
sbb
aam
outsl
xchg
xor
jp
add
loop
ds
xorb
lcall
jl
addb
xchg
int3
mov
mov
sbb
mov
push
in
arpl
in
mov
dec
push
sub
cs
les
enter
sub
adc
ja
mov
mov
xor
xchg
inc
sbb
jecxz
sbb
and
pushf
fildl
fiadds
fwait
push
jb
and
or
sub
cmp
push
rclb
mov
sti
and
decl
push
out
scas
inc
inc
mov
pop
ret
hlt
cwtl
data16
mov
push
inc
inc
cltd
adc
push
rcll
fadd
stc
les
sub
lahf
lock
aaa
lds
hlt
fdivl
xchg
sahf
ret
sub
push
mov
cmp
jo
je
imul
rcrl
adc
into
fstpl
xor
or
cmp
testl
xor
add
mov
cs
es
rclb
mov
xchg
pushf
dec
das
outsb
xchg
fs
mov
andl
sarb
gs
adc
xchg
adcb
dec
ss
sbb
add
cmp
xor
jae
setbe
fistpl
and
push
fstl
pusha
cmp
nop
mov
add
testb
mov
rol
sbb
xchg
mov
mov
or
lret
popf
push
xor
int3
dec
mov
sbb
shrb
inc
std
std
lods
nop
loopne
scas
fisubl
dec
cmp
cmpsb
add
insl
cmp
cs
or
xchg
cmp
orb
pop
test
test
out
push
push
inc
mov
aas
xor
jmp
cmpsl
pop
ja
inc
insb
int
fmuls
faddl
sarl
ds
mov
and
adc
bsr
add
lcall
rorl
pop
repz
cmp
aaa
aam
jmp
es
xchg
and
mov
cld
in
pop
push
insb
stos
cmp
popf
iret
cwtl
imul
test
negb
xor
adc
push
insl
dec
ret
pop
mov
push
leave
scas
inc
inc
in
dec
lret
cmpsb
xlat
stos
pop
mov
stos
scas
or
push
cmpsl
and
ret
mov
pop
push
lock
jo
sahf
mov
push
pop
pop
cwtl
imul
push
push
xlat
or
mov
xchg
push
mov
pop
mov
push
pop
pop
inc
jb
or
mov
rcrb
mov
lods
mov
cmc
mov
push
or
adc
xor
mov
inc
addr16
mov
pop
shl
vmovdqu
inc
fnsave
das
mov
jo
sbb
lahf
push
push
mov
pop
inc
fdivp
pop
loope
bound
xor
nop
fiaddl
push
push
xchg
leave
addr16
xor
add
int3
xor
inc
sub
jmp
sbb
xchg
jb
fstl
test
mov
cmpsl
test
nop
push
fs
and
inc
mov
int
es
sub
imul
or
mov
xchg
shrl
sbb
popa
daa
push
fs
dec
xor
mov
mov
jg
xlat
std
mov
inc
imul
cvtps2pi
scas
arpl
enter
sbb
shr
sbb
add
inc
ret
arpl
sbb
pop
daa
les
out
sti
adc
xchg
aaa
scas
ljmp
lcall
daa
int3
cmc
das
push
cld
cmc
xchg
sarb
mov
push
mov
fld
or
mov
fcoml
loopne
scas
arpl
jp
adc
lods
sub
sbb
pop
data16
sbb
and
pop
or
decb
daa
pop
dec
mov
add
inc
lcall
out
outsb
jb
jecxz
nop
sarb
pop
jle
pop
cwtl
mov
pop
pop
inc
stc
test
push
adc
ficoms
lcall
test
rcl
leave
pop
push
out
or
xor
aam
insl
cmp
inc
aaa
jbe
stos
adc
sbb
aas
jl
in
mov
leave
xchg
xor
popa
jns
cmp
jbe
adcb
and
inc
and
sbb
aam
aam
lahf
loop
icebp
test
call
cmpsb
addr16
sbb
lret
mov
mov
cmp
pop
cmp
fdivrs
das
xor
addr16
push
jmp
push
hlt
loope
sub
jnp
roll
cmp
and
mov
xor
mov
les
mov
bound
xor
mov
and
push
scas
pop
cmp
xor
sahf
cltd
and
sbb
rclb
jbe
xor
adc
les
jg
inc
notl
sub
push
addl
xor
xor
mov
mov
cmp
mov
imul
imul
dec
push
out
xorb
adc
pusha
push
out
mov
jo
in
je
fs
jno
out
fs
shrb
in
sbb
dec
mov
inc
std
xchg
cmp
jb
inc
cmc
mov
xor
mov
lds
cmp
aas
adc
xor
or
fs
data16
jno
sub
push
push
out
sbb
mov
insl
lcall
pusha
dec
pop
sub
jbe
popf
sbb
nop
cmp
and
loop
pop
jp
xchg
lcall
add
iret
pop
sub
push
or
mov
or
mov
xchg
inc
rolb
rcll
mov
mov
jb
in
push
popf
pop
dec
jae
call
adc
repnz
push
idivb
sub
sbb
pop
test
mov
adc
pop
fwait
test
inc
es
add
lods
pop
cli
es
addl
xor
cmpsb
das
and
out
stc
fcompp
pop
nop
lea
pop
add
rcrb
push
dec
mov
mov
sbb
popf
in
mov
decl
test
pop
fcompl
lahf
jb
push
out
lret
push
inc
push
cs
fidivl
lahf
js
mov
mov
add
aam
call
xor
jno
jp
add
adc
or
in
sub
jmp
and
fmul
cltd
jg
pusha
mov
xchg
in
daa
sub
iret
jge
into
push
jne
imul
outsl
test
gs
mov
out
es
iret
jle
repz
or
mov
sub
dec
adc
cmp
fidivrs
mov
int
xor
test
jmp
push
sbb
push
push
popf
lea
std
repnz
inc
lret
add
enter
rcl
or
jecxz
sti
cltd
or
adc
jnp
mov
jo
jecxz
xchg
xor
fwait
movsb
pop
outsb
pop
dec
sahf
leave
popf
je
jno
addl
insl
insb
xlat
mov
pop
jmp
mov
fimull
pop
cmpb
dec
xlat
mov
pop
stos
data16
mov
call
add
cli
stos
mov
es
adc
xlat
push
ss
das
data16
sub
mov
fwait
and
pusha
add
adc
jp
and
shlb
pusha
xchg
lock
jno
dec
lahf
lock
xchg
or
pop
std
push
vfmsubaddpd
jnp
notl
push
das
add
aam
lret
add
xor
lcall
sbb
and
loop
call
movsl
jmp
js
call
cmp
jge
loop
orl
cmp
out
aam
sti
add
cmp
out
dec
and
aam
xor
xchg
mulb
out
mov
inc
fdivs
int
xchg
or
icebp
cld
mov
fmuls
aaa
and
lea
sub
pop
mov
pop
mov
es
test
rolb
pushf
lret
pop
cmpsl
scas
jne
xlat
out
fldt
and
int
add
xlat
popf
push
jne
scas
leave
lahf
inc
cmp
fcom
mov
inc
add
cmc
push
push
xchg
mov
mov
sarl
dec
push
jnp
cmp
scas
push
or
jecxz
sarb
cmp
cmp
mov
sbb
out
inc
aam
dec
xchg
mov
jecxz
add
inc
aaa
push
ret
lds
shr
jl
fdivs
mov
out
jae
sbb
stos
int
xchg
push
sbb
dec
les
stc
sub
dec
jg
sbb
add
scas
and
sub
cmpl
out
daa
pop
test
jecxz
fisubrl
clc
das
dec
cmpsl
subl
incl
sar
and
cltd
ljmp
rorb
xor
aas
icebp
lret
cld
hlt
mov
repnz
ljmp
pop
sarb
movsl
fstpl
in
push
xor
test
das
pop
hlt
loopne
icebp
sbb
std
pmulhuw
dec
fildll
xchg
inc
cmp
dec
push
inc
mov
add
inc
cld
mov
mov
adc
sbb
stos
jo
int3
push
outsb
std
mov
xor
adc
mov
fstl
sbb
sbb
outsb
mov
popf
sbb
arpl
mov
adc
cmp
fs
cltd
stos
pop
out
pop
and
aad
xor
cmp
fisubs
push
inc
mov
jmp
mov
sub
xchg
push
sti
and
iret
sub
and
or
cmpsb
scas
arpl
ret
fldenv
sbb
scas
lods
sti
ljmp
jmp
loope
add
xchg
loop
sbb
xor
or
jmp
sub
lcall
stos
inc
pop
xor
je
test
cs
mov
mov
pop
fwait
push
ss
xchg
jno
fidivs
mov
dec
inc
inc
xlat
mov
addr16
cli
xchg
jnp
shrb
jecxz
sbb
aam
jle
fadd
add
pop
fwait
lods
call
insb
and
add
repnz
push
rolb
das
jno
movsl
xor
testl
push
aas
ret
add
jb
cmp
sbb
loope
add
or
leave
popf
in
push
js
icebp
sub
xlat
mov
addb
jne
jo
dec
sub
xchg
icebp
in
test
sub
mov
daa
mov
pusha
out
xlat
and
jb
shlb
mov
inc
test
cli
fcomps
sbb
mov
imul
push
and
aad
xor
rorl
sti
lcall
add
psadbw
fbstp
sbb
add
daa
insl
push
sahf
xor
sarb
mov
andl
jmp
xchg
mov
scas
repnz
outsb
or
xchg
iret
xor
sub
jl
in
sbb
outsb
mov
shlb
shl
mov
mov
fincstp
pop
ffree
icebp
dec
repz
mov
xchg
or
call
lret
adc
aaa
mov
cmpsb
pop
outsl
adc
and
push
lret
ficomps
imulb
or
je
nop
sbb
int3
or
adc
je
inc
xchg
adc
sub
mov
out
adc
adc
in
sub
imul
mov
mov
inc
outsb
pop
pop
cmp
test
outsb
pop
icebp
imul
aas
call
pop
movsb
outsb
xchg
daa
sahf
jns
mov
shl
shlb
mov
xor
lea
test
jnp
and
out
dec
inc
jb
mov
mov
add
mov
push
and
ret
mov
fisubs
in
cmpsb
cmp
push
sbb
mov
rcr
into
adc
jne
sahf
or
inc
mov
push
out
push
clc
cs
stos
popf
rcrl
jp
dec
mov
stc
push
sbb
fs
pop
mov
cld
lock
call
adc
lret
in
ja
testb
or
movsb
inc
out
out
aas
mov
cmpsl
mov
mov
xchg
push
sbb
dec
repz
mov
adc
adc
fists
sub
fdivrl
lret
orl
lahf
ljmp
jne
scas
addr16
cli
push
lret
aas
movl
repz
xor
icebp
popf
dec
fadd
xlat
xchg
jg
scas
fisubs
inc
shl
or
std
cmpl
cmp
sub
jne
outsl
jae
or
pop
mov
or
mov
xor
mov
pop
xchg
mov
sbb
lcall
les
push
push
insl
loopne
sbb
aas
inc
aaa
or
lcallw
fcmovb
stos
in
xchg
pop
lret
das
in
pop
daa
fistpll
add
inc
mov
pop
cmp
lods
addb
ljmp
cmpsb
je
test
cmp
sahf
xchg
pop
incl
scas
sar
cltd
enter
rcr
sbb
sub
ljmp
mov
sbb
pusha
rolb
xchg
ret
push
sbb
push
pop
push
rcrl
mov
leave
aad
insl
cld
mov
add
and
cmpl
stos
repnz
pop
and
mov
adc
lds
mov
loope
addr16
push
xor
scas
popa
cwtl
jbe
incl
sbb
jo
sbb
imul
stos
jae
lock
dec
lds
pop
cmp
stc
fcoml
push
xor
shrb
inc
xlat
or
mov
pop
xchg
mov
in
mov
arpl
cwtl
fsubr
das
insb
rep
push
dec
adc
and
mov
stos
bound
cmp
aas
jge
sub
rcll
ss
loopne
cmp
call
xchg
fidivl
xchg
fcmovnu
mov
dec
dec
in
and
mov
int
lret
outsb
push
lock
test
aad
or
fdivrs
or
clc
ds
shlb
es
adc
jle
sbb
sbb
mov
aas
mov
loopne
mov
cmp
lds
jne
jg
mov
jp
adc
dec
cmpsb
pop
shrb
xor
movsb
shrb
sub
push
and
xchg
jo
out
dec
pop
push
push
xor
pusha
jmp
and
sub
lcall
negl
outsl
ja
xchg
mov
imul
xorl
pop
pusha
add
dec
mov
icebp
jo
fistpl
adc
xchg
neg
stos
xchg
aad
lock
sub
gs
lock
xchg
aam
and
dec
inc
out
mov
mov
inc
push
loope
call
mov
in
cltd
clc
leave
jne
jle
jno
sub
incb
int
or
mov
mov
add
loop
imul
inc
inc
pop
cli
scas
pop
push
sbb
xchg
mov
fdivrs
insb
addr16
mov
stc
inc
mov
cmp
mov
adc
sub
orl
jge
dec
add
xor
daa
aaa
dec
mov
jg
inc
aad
xchg
cmp
dec
ficoms
push
cmpb
inc
cli
mov
push
pop
xchg
je
sbb
add
push
xlat
pop
jle
mov
and
xchg
popf
popa
data16
inc
cld
and
mov
cmp
imulb
sbb
imul
test
dec
mov
popl
arpl
test
xchg
pop
mov
je
add
insl
sbb
jae
xchg
sub
mov
neg
jle
cwtl
rorl
mov
movsl
fcmovnbe
sbb
aaa
jbe
xchg
xor
clc
xor
push
jmp
int
out
outsb
fisttps
test
and
xor
pop
out
aas
cmp
stc
jnp
inc
xorl
adc
rclb
inc
mov
fsubl
jmp
adc
xor
dec
out
imul
xor
call
test
ret
pop
addr16
mov
popa
aaa
fimull
leave
jbe
jns
stc
fwait
cmp
mov
mov
pop
psllw
add
inc
das
mov
fs
stc
jecxz
jecxz
aaa
cmp
and
and
mov
cmp
aad
or
out
mov
rcrl
lret
daa
push
push
mov
cmp
ss
xlat
cmp
dec
aad
jo
scas
inc
nop
imul
pop
xchg
test
xchg
adc
fisubs
in
cmpsb
mul
test
adc
jne
push
fcmovnb
xchg
andl
mov
rorl
jle
fcomi
loopne
sub
movb
in
test
xlat
sub
scas
and
aaa
sahf
push
jg
cmp
dec
xchg
es
pushw
test
sahf
mov
mov
sti
out
hlt
add
jne
jae
call
pusha
pushf
cmc
mov
out
inc
idivb
xchg
jno
fbstp
lods
inc
mov
inc
mov
pop
inc
pop
sub
out
hlt
lods
arpl
dec
ret
push
shl
nop
cmpsb
mov
or
cmpsb
jno
aas
aam
mov
pop
ja
fsubs
push
leave
out
mov
mov
dec
fistpl
movb
and
xchg
xlat
sub
aam
shrl
cmp
pop
push
lds
fistpl
ljmp
cmc
lret
rorl
out
ja
xorl
decl
inc
scas
dec
or
es
in
fsubrs
mov
out
out
jb
sub
inc
out
jns,pn
sti
add
int3
gs
xor
sub
inc
xor
push
push
shll
cmpb
loope
cmp
dec
adc
cmp
stos
mov
dec
mov
cltd
imul
pop
push
dec
cmp
dec
ret
mov
mov
and
aad
fs
mov
cltd
nop
mov
fbld
mov
dec
loop
add
pop
je
mov
sub
xchg
and
pop
jbe
dec
mov
jl
ljmp
daa
stos
stc
addr16
shll
adc
dec
and
insl
or
iret
push
mov
fxch
or
sub
jmp
mov
sub
outsb
mov
sub
fwait
pop
scas
xchg
dec
loopne
hlt
test
and
cs
pop
shlb
test
js
mov
jg
sub
dec
xchg
std
cwtl
sbb
jo
mov
in
xchg
push
outsl
fscale
mov
jae
push
je
mov
cmp
or
gs
add
mov
adc
nop
movsb
dec
push
pop
sub
sbb
movsb
jae
daa
rcr
fwait
sbb
out
jecxz
aaa
cmp
push
pop
inc
inc
hlt
ror
push
mov
mov
add
xor
scas
ret
and
aam
cmp
lcall
fwait
push
and
and
cltd
stc
int3
sub
lret
mov
and
mov
aam
pop
movsl
and
imul
and
pop
jl
cmp
dec
out
or
lods
sbb
enter
in
push
push
addr16
int3
les
jb
push
xor
mov
pop
fdivl
xlat
adc
lods
pop
push
popa
push
add
jge
push
xor
xchg
dec
add
gs
cs
mov
popa
inc
pusha
mov
xlat
xor
or
pop
nop
jo
xlat
mov
fdivl
lcall
enter
sub
mov
repnz
andl
idivb
ror
sbb
or
fmull
in
rorl
jo
mov
inc
push
xchg
enter
lcall
mov
stos
and
aad
mov
and
sbb
inc
cmpsb
les
cld
enter
pop
popa
int
push
cmp
dec
cmp
jmp
cmc
dec
dec
mov
add
cmp
movsb
sub
pushf
xchg
push
cmp
in
add
sahf
call
inc
scas
pop
aam
bound
movsb
fsub
push
adc
and
xchg
dec
jg
movb
ja
dec
out
fidivs
push
gs
mov
ds
lret
test
pop
loop
mov
mov
lods
fmull
incb
sub
cmp
mov
pop
outsb
aas
push
xor
aam
jne
mov
inc
gs
out
and
jo
test
sahf
sahf
xor
fimuls
push
push
jle
pop
and
add
cmp
lods
insb
mov
or
test
popa
cld
pop
mov
insl
push
mov
popf
aam
sar
ret
push
jl
nop
add
cld
test
cmpl
call
and
insb
call
test
outsb
cli
mov
lahf
dec
push
notb
mov
xchg
or
xor
rcrl
aas
xchg
cmp
add
adc
outsl
in
sti
lret
addr16
dec
fisttpl
dec
push
and
fcoml
out
scas
mov
jmp
in
jnp
push
pop
test
shrb
push
in
into
iret
and
data16
push
cmpsl
mov
cwtl
mov
cmp
lds
or
aam
repz
push
mov
jb
cmc
mov
mov
sbb
lock
push
jb
xchg
push
jb
in
fs
add
push
cmp
cltd
push
mov
incl
adcl
jne
outsb
inc
and
sbb
sub
stc
out
and
push
dec
fidivs
test
lahf
xchg
aad
add
jnp
popa
adc
fimull
add
xchg
jg
aaa
aam
push
push
cmp
inc
lea
lahf
adc
or
add
lods
mov
jo
gs
or
push
inc
or
jno
mov
inc
jae
dec
sub
fst
test
icebp
cmp
popa
sbb
add
mov
push
sbb
adc
push
xlat
loope
sbb
adc
adc
ret
test
sub
ret
mov
cmp
adc
pop
outsb
pop
push
sti
imul
xor
add
inc
std
and
clc
negb
adc
insb
jl
rcll
insb
addr16
adc
call
fs
mov
pop
cmc
add
shlb
mov
sbb
mov
fildl
mov
lret
outsl
sbb
mov
andb
insl
sub
pop
fmul
sarl
les
sbb
ds
cmpsb
adcb
inc
dec
insl
push
insb
out
pop
adc
jle
dec
addb
decb
jp
mov
mov
sti
mov
jno
jge
adc
jnp
in
or
xchg
push
pop
jle
mov
jle
adc
sbb
xor
dec
push
mov
mov
adc
sub
xor
in
cltd
daa
loope
sub
loop
pop
in
fdivrs
lahf
lods
mov
mov
bnd
in
int3
push
call
and
cmc
stos
sarl
shll
mov
sub
sbb
ljmpw
adc
rcl
xchg
cmpsb
xchg
sub
aam
mov
addr16
popa
mov
data16
xchg
out
mov
sti
daa
sub
bound
mov
aad
pop
in
adc
mov
cld
or
aas
aaa
leave
outsl
cmp
icebp
jns
cmp
je
pop
mov
lods
popf
into
out
test
jb
jno
pop
lock
mov
test
mov
pushw
fimuls
dec
lret
js
lahf
xchg
mov
inc
mov
mov
aaa
push
movsb
lods
xlat
cmp
fwait
cs
xlat
xchg
and
lds
pusha
inc
mov
push
add
mov
sbb
pusha
fbstp
cmpsb
scas
xchg
xor
and
jp
and
loope
aaa
popa
fildll
jae
mov
call
mov
xchg
lret
xor
dec
lock
cs
lea
mov
das
cli
adc
in
out
fs
inc
imul
test
sub
das
dec
inc
pop
push
pop
fwait
adc
adc
add
and
sbb
repz
add
mov
push
fiaddl
data16
and
das
add
sbb
dec
loop
daa
push
leave
call
int3
jne
cltd
std
cmp
aaa
out
or
stos
sub
sbb
adc
lock
loop
inc
aad
lock
test
pushf
xor
xchg
pop
jmp
outsl
sar
cmp
fldl
lcall
hlt
ret
cmpb
hlt
dec
test
repz
mull
sbb
repz
ret
cmp
cld
aam
pushf
push
and
das
inc
sub
push
sarl
addr16
fiadds
cmpb
lret
or
addl
imul
imul
xor
and
jbe
xchg
adc
loope
lret
lods
xchg
movsl
pop
and
lret
inc
test
iret
xchg
adc
pop
dec
into
sti
fcomps
or
mov
pop
loopne
push
int
xor
std
leave
fisubrl
push
in
cmpsl
xchg
pop
add
mov
jmp
hlt
dec
pop
fisubrl
adc
jg
enter
fmull
andl
aas
push
es
adc
pop
ljmp
mov
es
xor
movsb
test
pop
in
xor
iret
pop
shrl
cmp
jmp
or
decl
fwait
ret
ljmp
iret
sub
sbb
stc
sbb
xchg
popa
inc
cmp
je
stos
jge
icebp
or
mov
pop
les
out
or
and
jne
movsb
addl
push
inc
dec
lret
in
fidivrl
in
mov
je
sub
loope
or
aaa
jnp
mov
adc
scas
and
sub
jg
repz
cld
ds
imul
mov
add
mov
mov
xor
sbb
adc
test
pop
rorb
cld
sbb
mov
mov
mov
pop
xor
dec
or
das
in
xlat
dec
insl
in
ficoml
and
test
mov
in
or
and
stc
aam
cli
daa
fdiv
or
stos
sbb
pop
sbb
pop
jne
dec
rcll
xor
jno
cmp
outsb
sub
adc
ljmp
dec
fcoms
pushf
in
test
lea
dec
cmp
out
sub
pop
in
adc
and
lret
mov
mov
out
xchg
pop
xchg
xchg
in
lods
push
mov
or
sub
dec
bound
lret
dec
mov
mov
mov
mov
mov
pop
mov
xor
or
push
out
push
jecxz
ret
in
adc
jg
jg
clc
lret
or
xor
lods
sarb
pop
pop
dec
xlat
les
sub
je
call
inc
in
jno
push
xor
and
popa
xchg
adc
mov
adc
pushf
xchg
out
sub
stos
test
lcall
or
mov
rcrb
push
sahf
repz
jnp
adc
push
mov
mov
mov
mov
addl
sub
imul
xchg
imul
cmpsb
andl
imul
mov
sub
jle
mov
mov
aas
push
dec
inc
stos
or
mov
push
gs
jg
mov
or
fisubs
jno
xor
or
pop
jbe
xor
fdiv
inc
dec
jns
add
incb
push
mov
mov
test
inc
push
sub
bound
fistps
cli
idiv
bound
inc
rcrl
xor
bound
scas
ljmp
lock
inc
mov
xchg
pop
lock
cld
jl
pop
pop
pop
imul
push
nop
ret
into
pushf
adc
scas
mov
shrl
inc
cmp
pop
add
mov
mov
sub
lahf
sbb
ret
lahf
fdivr
stc
adc
pop
roll
popf
adc
int
cwtl
xor
add
popa
je
or
and
add
push
mov
dec
mov
cwtl
ja
mov
sbbb
imul
pop
mov
insl
mov
mov
mov
adc
lock
lahf
pop
out
fnsave
test
jmp
xor
rorl
aaa
mov
push
ds
xor
sub
jb
cmpsb
stc
jbe
push
jo
xchg
out
enter
pushf
je
jmp
mov
jecxz
xor
xchg
lock
mov
fs
adc
add
and
es
outsl
dec
sub
xchg
push
pop
inc
lds
imul
cmp
daa
outsb
rorl
mov
leave
movsb
jo
jl
inc
mov
fstl
xor
mov
das
cmp
ret
mov
push
shl
and
sub
fimull
ja
jmp
adc
adcb
ljmp
dec
ret
mov
mov
and
test
cmp
insl
mov
mov
and
jbe
nop
jp
addr16
jne
stos
hlt
sbb
gs
or
xchg
adc
imul
test
std
scas
aam
inc
in
xor
push
int
jns
pop
fwait
push
sarb
fdivrs
push
inc
lods
rolb
inc
mov
enter
fidivrl
push
ret
loop
jge
sbb
sub
out
pop
scas
cmp
and
loope
addb
xchg
and
cwtl
jae
push
sub
outsb
insl
mov
jnp
inc
je
ret
pop
test
adc
insb
sbb
and
enter
jns
mov
mov
aaa
lods
and
inc
lret
gs
nop
leave
pop
or
mov
inc
pop
pop
jmp
test
pop
add
in
lret
testb
xchg
clc
jne
out
in
mov
sbb
int
int
sahf
ret
iret
xchg
xchg
cltd
test
in
imul
loopne
imull
fsubrl
xor
arpl
ss
out
test
orl
sub
outsb
andb
fistpll
rorl
mov
pop
mov
push
sub
dec
mov
fsubs
test
pop
iret
sub
xor
mov
lret
js
repnz
shlb
lahf
cli
mov
mov
adc
sbb
mov
bnd
jp
loop
add
shll
mov
and
repz
fs
jno
out
sbb
lcall
cltd
clc
leave
insl
mov
gs
inc
and
mov
shlb
sti
push
icebp
inc
shlb
push
pop
mov
sub
mov
popl
mov
sbbl
cli
xchg
ljmp
mov
mov
jns
mov
fistpll
stos
mov
ss
in
adc
jge
sub
jge
divb
pop
call
and
cli
jp
test
repnz
push
sbb
cmp
fnsave
mov
jg
cmp
xor
or
test
shll
adc
xor
stc
js
stos
mov
sub
pop
inc
stos
sub
mov
pusha
aad
rcr
push
stc
lcall
xchg
in
push
div
out
es
jg
mov
push
adc
jge
xor
push
fisttps
aam
sub
mov
jge
insl
int3
daa
sbb
out
into
insb
fidivs
and
nop
in
test
mov
shlb
dec
cmc
subl
das
enter
push
cmpsl
pushf
add
adc
inc
not
cwtl
push
pop
sub
insb
jo
xchg
or
stos
scas
sub
pop
aam
and
and
sbb
xchg
pushf
xchg
pop
sub
add
or
mov
xchg
fs
jbe
adc
or
rcr
lahf
aaa
rclb
clc
pop
leave
xchg
loop
or
push
sar
fldt
mov
adc
int3
inc
fisttps
fdivs
mov
into
inc
mov
test
lahf
daa
mov
leave
lret
cmp
add
fiaddl
lret
aaa
es
shrb
cmp
fcmovnbe
cmp
imul
inc
int
push
sti
inc
inc
fcmovb
cmpsb
jecxz
nop
cmp
and
dec
in
mov
outsl
add
std
mov
pop
in
jecxz
pop
mov
jl
mov
dec
lahf
lods
mov
imul
fcoms
add
xchg
xchg
int3
dec
sub
inc
test
jb
pop
fisttpll
xchg
push
mov
jge
adc
add
cltd
pop
add
mov
scas
xchg
test
cmp
loope
mov
jne
cmp
or
mov
addr16
int
cmc
clc
xor
adc
pop
cmpsb
lcall
sarl
iret
and
push
fs
push
repnz
mov
mov
insl
cwtl
hlt
pop
xlat
test
outsl
mov
fisubrl
loopne
push
loope
mov
sbb
outsb
push
sbb
pop
int
sub
cwtl
ret
lahf
ds
sbb
or
hlt
push
mov
jg
clc
or
es
mov
mov
shrb
jge
mov
in
mov
lret
fcmovnbe
imul
sbb
aad
imul
in
ljmp
push
andb
adc
adc
das
xor
xchg
loopne
retw
xor
push
repnz
inc
clc
mov
pop
mov
mov
xchg
mov
jmp
cmp
push
outsl
cmpsl
dec
subl
sar
hlt
cmp
mov
clc
jg
pop
ja
adc
push
mov
insb
push
aas
out
les
insl
pop
hlt
dec
adc
sub
aaa
mov
ljmp
dec
aas
xchg
mov
jl
test
push
orb
mov
push
sarb
testb
sub
iret
sbb
lods
lahf
add
mov
in
lret
jne
lock
pop
xor
sbb
xchg
dec
pop
xor
rolb
mov
cmpb
ficoml
add
movsb
pop
cmp
imul
adc
lahf
jno
out
jo
imul
mov
jnp
loopne
ret
lods
data16
sbb
sub
push
fcomip
rolb
je
sub
push
sbb
sahf
jno
push
jmp
in
sub
mov
or
clc
jnp
dec
or
xlat
dec
jl
sbb
bound
pushf
mov
or
sbb
dec
mov
mov
int3
int
push
dec
mov
or
lods
popf
lret
or
inc
movsb
inc
dec
adc
cmp
push
sbb
mov
rorb
and
movsl
cmp
mov
stos
fdivl
rcrl
sub
fadd
out
jbe
jns
sti
adc
popa
push
mov
sbb
cmp
add
into
fwait
sbb
rorb
cmp
repnz
outsb
push
inc
mov
push
mov
in
mov
test
pop
repnz
dec
movsb
jl
adc
faddl
or
rorl
or
test
xor
push
out
inc
sbb
test
and
inc
repz
aaa
add
mov
out
xchg
sub
jle
dec
pop
jmp
in
loop
push
lret
jnp
mov
jno
adc
sbb
out
push
mov
and
loopne
test
fldt
mov
es
xchg
enter
bound
inc
adc
popf
sub
out
cwtl
xor
faddl
and
mov
push
cmp
jnp
xchg
jmp
insl
mov
dec
pop
and
adcl
test
jle
pop
pop
leave
mov
ret
push
cmp
mov
lods
xchg
cmp
clc
aam
ja
and
cmpsb
fucom
inc
imul
lret
or
add
test
jo
aam
mov
aam
aas
dec
xchg
or
loop
sahf
sbb
sbb
lahf
add
ret
xlat
or
pop
aam
mov
fs
imul
or
xlat
mov
dec
dec
mov
cwtl
dec
cmp
cli
aaa
pop
or
addb
fisttps
jmp
out
mov
cmp
popf
jge
xchg
fld
add
mov
jno
push
scas
mov
or
lods
test
ljmp
dec
and
dec
js
adc
or
scas
push
outsb
mov
loop
lods
adc
sub
lods
cmpsl
out
mov
out
push
jne
xchg
mov
dec
or
test
arpl
pop
inc
sub
or
addl
mov
inc
aad
dec
fildll
int3
rolb
xchg
adc
xor
xor
sub
scas
pop
pop
fisubl
stc
pop
fldl
xlat
jns
push
movsl
fstps
mov
inc
dec
sub
sub
test
mov
sub
nop
cmpl
nop
jg
and
adc
ja
push
adc
mov
jnp
sahf
ficoms
cwtl
int3
pop
js
sbb
cmpsl
pop
jp
cmpsl
push
mov
cmp
dec
or
fildl
lret
pop
int
jb
ret
cmp
adc
aad
inc
pop
and
mov
mov
in
es
leave
lret
adc
add
in
mov
loop
cmp
int
pop
cltd
in
inc
xchg
fstps
add
in
xor
jl
cmp
xor
dec
js
and
jb
sub
jecxz
mov
xchg
popa
or
jp
lds
testl
cmp
jmp
sbb
aaa
sub
mov
inc
mov
ljmp
and
loopne
sbb
jge
jge
mov
shrl
and
dec
mov
cmp
lods
mov
ret
xchg
lret
icebp
lea
scas
cld
sbb
sub
in
repnz
cwtl
dec
or
orb
add
into
xchg
int3
leave
lcall
aad
gs
into
pop
jle
pop
into
in
jbe
jns
cmpsb
push
rcll
mov
cmp
sti
rsm
push
cmpsl
mov
dec
adc
movsl
test
push
add
cs
popa
xchg
adc
adc
inc
mov
and
add
lahf
pop
push
xchg
mov
pop
xchg
xlat
loop
arpl
lock
push
inc
sub
mov
int3
lret
in
int3
fwait
popf
add
ds
data16
mov
or
pop
stc
scas
xor
mov
sbb
and
cmpsl
lea
mov
scas
insl
push
out
xor
pop
push
xchg
xchg
das
jne
das
xchg
dec
jl
inc
addl
bound
mov
es
in
and
adc
jp
dec
lock
sbb
push
ss
dec
sbb
and
hlt
pop
or
retw
cltd
xchg
lds
push
filds
xorb
add
add
insl
orb
out
pusha
mov
addr16
xor
push
adc
xchg
gs
loopne
mov
scas
vandnps
mov
int
test
xor
faddp
sti
jae
or
insb
shl
out
xor
arpl
hlt
add
inc
adc
aaa
dec
mov
movsb
push
push
xchg
xchg
xchg
insb
gs
int
dec
int
data16
stos
or
movsl
xchg
hlt
ret
imulb
cmp
jb
pop
jle
cmp
rclb
test
idivl
jge
xorl
xchg
push
mov
jbe
hlt
clc
inc
shrl
inc
mov
jmp
jl
jns
outsl
popa
test
xlat
or
inc
mov
outsb
in
or
in
lret
xor
mov
push
inc
inc
arpl
sbb
add
inc
inc
mov
cmp
dec
mov
iret
push
jl
pop
add
jne
xchg
jle
outsb
in
fwait
push
sbb
popa
insb
xchg
outsl
aad
fcoms
cmp
cwtl
lret
es
or
dec
scas
and
add
fisubrl
mov
cli
pop
sbb
in
cmp
or
lcall
pushf
mov
or
push
mov
mov
fs
rolb
insl
push
loop
je
xchg
add
pop
add
iret
cmpsb
jns
mov
pop
xor
lahf
pop
int3
mov
dec
push
sahf
inc
sbb
and
rcrl
js
dec
jp
jecxz
ss
and
stos
jb
push
or
ficoml
sbb
adc
rcrb
sbb
sbb
mov
je
insb
mov
push
mov
mov
lock
push
fsubs
mov
dec
add
and
pusha
xchg
lret
pushl
mov
dec
mov
data16
shlb
stos
push
dec
aad
or
and
in
jno
mov
mov
add
imulb
inc
inc
or
icebp
ret
repz
sub
dec
sub
fdivr
cmpb
sbb
pop
sti
mov
repz
dec
in
and
jnp
jns
adc
out
stos
push
inc
hlt
std
ja
dec
sub
out
sbb
inc
jne
loopne
stos
push
sbb
gs
hlt
xchg
dec
in
sbb
xor
ds
and
dec
sbb
in
push
scas
pop
aas
cmp
test
adc
pop
lcall
and
ja
xlat
imul
sti
push
push
dec
or
and
mov
lret
lock
popf
imul
push
xor
push
or
cmp
rorb
jge
xor
jnp
pop
lds
cwtl
mov
scas
xor
push
pop
lods
mov
inc
cwtl
xchg
rolb
out
push
in
mov
fisubrs
mov
lods
popa
inc
inc
in
and
sub
lret
xchg
or
add
adc
push
sub
jb
mov
subb
sub
mov
loope
or
enter
popf
jecxz,pt
pop
lds
fdivs
lahf
in
cmp
xor
insl
xor
outsl
mov
shrb
std
test
or
dec
xor
arpl
xchg
sub
and
mov
push
inc
filds
cmp
jmp
mov
fdivrl
pop
cmp
or
mov
or
add
lea
insl
xor
xlat
je
lods
stc
loop
inc
dec
imull
inc
and
push
or
cmc
in
sub
movb
dec
mov
repnz
jne
hlt
pop
jns
lock
jecxz
push
pop
das
pop
repnz
jb
jae
mov
dec
dec
or
cmpsl
outsl
adc
xor
xchg
js
lahf
cmp
or
add
mov
and
and
cmp
mov
mov
mov
inc
and
and
dec
aam
sbb
add
icebp
lods
and
pop
cmp
sbb
jnp
aaa
cwtl
out
mov
pop
call
lea
ds
insb
cli
jp
push
cld
push
mov
fnsave
js
imul
lcall
inc
testl
aas
jmp
lock
pop
pop
call
popa
inc
gs
sbb
rolb
popf
ror
dec
cld
mov
test
lods
sub
push
jns
ja
sbb
and
fdivrl
psubsb
inc
adc
rolb
mov
add
in
jmp
dec
out
fcomps
rcr
xor
je
scas
test
inc
sbb
adc
xchg
out
adc
push
mov
lock
cmp
mov
scas
mov
popa
mov
imul
cmp
mov
and
cmp
test
out
adc
bound
sbb
stos
ret
xchg
in
fmuls
jl
sbb
fisubl
lret
clc
pop
ficomps
dec
hlt
pop
dec
enter
int3
xchg
xchg
push
pop
mov
add
std
and
pop
pop
fstl
bound
orl
cld
pop
push
adc
xlat
mov
rorb
pop
mov
rcll
mov
hlt
mov
std
cmp
mov
dec
and
lret
sub
ror
shl
iret
dec
push
arpl
push
iret
jmp
xchg
xor
insb
leave
cmpsl
mov
jbe,pn
stos
push
jae
sub
in
enter
clc
adcb
pop
push
cmc
jl
push
or
push
mov
aaa
add
xchg
cwtl
test
ret
aam
sahf
or
push
jg
pop
sub
shrb
jp
loop
scas
jg
fidivs
ret
mov
sbb
addb
fmul
aas
iret
pusha
repz
mov
xor
icebp
sub
jl
daa
sbb
pop
iret
sbbl
dec
imul
mov
cmp
mov
cld
cmp
jecxz
fcomi
mov
orb
xchg
pop
stc
ja
adc
dec
fstl
bound
fcoml
mov
mov
fistpll
lds
pusha
inc
shl
jae
cmp
add
and
cmp
loopne
jo
repz
add
cwtl
mov
pop
int
xchg
mov
cmpsb
inc
inc
lcall
shll
repz
in
push
add
stos
int3
cwtl
jo
lret
stc
data16
pop
jb
mov
pop
mov
addr16
xchg
sbb
pusha
push
lea
stos
mov
dec
push
dec
jns
cmp
inc
xor
and
sub
insb
push
pop
cltd
mov
ljmp
jbe
loop
xchg
mov
pop
dec
push
and
fwait
lods
lds
cmp
jae
xor
sub
iret
fnsave
dec
cwtl
mov
into
int3
add
mov
aaa
aaa
pop
adc
inc
and
or
hlt
rcll
sbb
mov
pusha
clc
lret
lahf
xor
push
xchg
or
jg
inc
ret
pop
or
cli
xchg
inc
xlat
fidivl
or
fstps
jmp
jmp
inc
mov
orb
int
lret
xchg
jecxz
inc
rcrb
xchg
xchg
sbbl
cltd
mov
sti
loopne
jmp
icebp
push
hlt
imul
addr16
lock
mov
sub
and
push
push
call
test
lret
mov
dec
rcll
dec
das
stc
sbb
in
js
sub
push
or
insb
adc
inc
push
push
mov
xchg
jne
sub
xchg
fneni(8087
mov
pushf
fldcw
inc
pop
push
xchg
imul
adc
mov
roll
shlb
jb,pt
cmp
repz
mov
mov
mov
cld
adc
add
mov
in
mov
cmpl
cli
les
mov
jg
aas
shll
push
lret
ss
sti
stc
sub
stos
xlat
push
push
sbb
add
repz
sub
dec
cwtl
outsb
adc
insb
enter
stos
mov
pushf
sub
std
sub
pop
out
fdiv
nop
adc
enter
add
or
pop
xchg
cmpsb
daa
out
rol
push
mov
call
insl
bnd
loope
mov
add
jb
dec
mov
mov
push
add
jecxz
jbe
push
adc
nopl
mov
cmove
fadd
arpl
pop
sbb
ljmp
xor
sub
jp
jp
rorl
sbb
in
loopne
sti
mov
negl
and
push
pushf
pop
or
inc
jp
sbb
cmp
jecxz
sarb
inc
in
adc
lock
lods
or
inc
inc
scas
fwait
jle
mov
push
imul
and
dec
xor
movsl
repz
pop
cli
bnd
fimull
es
add
je
insl
add
pop
insl
sbb
loopne
daa
mov
sub
lret
pop
mov
hlt
xchg
add
popa
mov
out
shlb
int
cmp
fnstsw
lods
in
test
mov
jae
fcmovnb
xchg
fchs
push
cwtl
stc
push
es
not
into
xor
fdiv
movsl
cmp
hlt
sub
dec
fidivrs
mov
sub
test
mov
xorb
mov
mov
arpl
lahf
and
push
or
or
xor
pop
xorb
fldenv
jno
punpckhwd
add
push
es
push
pop
dec
out
mov
push
movsl
das
dec
or
push
inc
lret
fdivs
les
repnz
sahf
mov
inc
sbb
pop
lock
in
cwtl
imul
dec
xor
pop
mov
jbe
sub
fimull
mov
or
and
rcrb
mov
cmpsl
xor
cmp
pop
fwait
out
in
mov
push
pop
xchg
movl
cmp
pop
add
lock
movsl
sbb
mov
cmpsl
push
dec
inc
inc
xchg
lret
stos
mov
outsb
inc
loope
rcrb
sbb
adc
jge
mov
repnz
jl
std
aad
stos
push
mov
sbb
jle
movsl
cmp
rcrb
out
stos
insb
or
add
jmp
cmp
loope
xor
pusha
jp
popa
mov
xchg
orb
xchg
push
jbe
sbb
ret
cwtl
push
loopne
enter
daa
call
push
xchg
jnp
cmp
int
xor
cmp
test
inc
inc
fwait
adc
dec
fucomp
out
sub
xchg
popa
jge
hlt
xor
aad
jg
addr16
fidivl
jb
dec
insl
inc
jmp
sbb
sbb
add
sub
clc
xchg
adc
push
dec
jno
movsb
popl
push
loope
lds
mov
mov
jecxz
in
xchg
inc
ret
cmp
mov
cwtl
or
and
push
mov
cwtl
outsb
arpl
jb
sahf
add
dec
cmpsb
push
and
ss
out
push
mov
mov
jg
push
sbb
mov
in
in
dec
lea
imul
mov
cmp
repz
adc
jb
sarb
cmpsl
push
and
leave
sbb
sbb
jae
movsb
or
add
adc
mov
jno
sbb
xor
mov
jns
push
mov
in
icebp
inc
mov
mov
imul
or
shll
outsb
addr16
loopne
add
loop
ja
inc
mov
orl
lahf
sub
xlat
dec
in
ljmp
neg
xor
test
xor
xchg
out
in
dec
sbb
jmp
das
outsl
cmp
cmpsb
nop
das
cmpsl
sub
dec
and
jecxz
jle
xlat
push
popa
mov
insl
xlat
jne
jnp
pop
js
add
inc
push
sub
pop
mov
test
outsb
ja
in
in
push
pop
sub
jae
ret
sub
sub
mov
aad
aad
jno
ss
mov
stos
mov
lahf
rep
fcmovu
out
mov
rcr
mov
push
aad
xor
mov
insl
adc
xchg
outsl
or
aad
sbb
xchg
mov
jbe
mov
and
sbb
pusha
pop
jecxz
pop
sub
daa
xchg
add
xor
sahf
push
sub
cs
ljmp
scas
push
jl
std
mov
xchg
shr
mov
mov
cli
ret
and
or
mov
cmp
outsl
mov
iret
or
bound
negb
sbb
mov
cmp
mov
shrb
sti
rclb
call
inc
mov
pop
mov
enter
jp
subl
sarb
inc
add
add
pop
adc
sti
jl
mov
out
mov
testb
inc
cltd
inc
push
lret
xchg
in
and
js
insl
inc
aam
and
dec
iret
repnz
lods
popf
inc
push
inc
ret
mov
outsl
popf
out
mov
xchg
push
lds
sbb
cs
stos
xchg
jne
cld
push
cs
push
cmpl
sub
mov
xchg
mov
dec
xchg
pop
mov
sbb
pop
dec
aaa
jb
mov
bound
xor
push
loopne
je
mov
push
dec
sbb
push
outsl
sub
outsb
xor
mov
loop
jecxz
fbstp
cmp
in
dec
sti
dec
sbb
xor
repnz
addr16
xorl
into
inc
and
ret
push
xor
jnp
adc
int
or
push
fdivrp
iret
lcall
cli
cltd
jb
lcall
sub
cmpsb
fadd
cmp
cmc
pop
mov
movsb
pop
iret
ljmp
sub
les
jg
pop
sarb
inc
dec
sarb
mov
xchg
inc
xchg
pop
lods
xor
xchg
pushf
and
jbe
ret
sbb
dec
push
scas
nop
and
adc
push
int3
sbb
into
jge
sbb
out
push
aad
into
fs
mov
jne
adc
mov
fcomps
int
rsm
mov
in
push
scas
addr16
ja
cmp
sbbb
dec
xor
xor
rcrl
or
rolb
es
decb
lahf
iret
push
pop
sbb
ljmp
sbb
sbb
lahf
push
add
inc
sbb
xchg
or
jecxz
mov
mov
in
mov
sub
push
jp
outsl
dec
rorl
cmp
jmp
pop
repnz
add
xchg
xor
cmc
cltd
xor
hlt
ficoml
mov
cmpsl
adc
ss
mul
test
jb
cs
bound
add
cmp
cmp
or
cmpsb
mov
push
push
adc
mull
mov
leave
aad
inc
fisttps
scas
insl
gs
andl
push
jecxz
stos
mov
push
push
pusha
mov
push
rorb
ret
xlat
cmp
mov
aad
std
push
rep
sbb
loop
nop
mov
adcl
sbb
repnz
pop
and
scas
inc
insl
fiaddl
sub
cmpsb
mov
je
pusha
loop
inc
movsl
ror
pop
mov
ss
imul
clc
lock
dec
lods
jl
mov
mov
mov
and
xor
nop
xchg
mov
fs
movsl
push
pop
inc
lea
aam
imul
jg
arpl
jne
andl
or
shl
fcompl
pop
lea
fmull
sbb
fs
dec
or
sbb
addr16
movsb
std
dec
scas
jae
lock
and
mov
or
cmp
bound
les
mov
jno
js
sub
loop
add
cld
fisubrs
clc
jmp
lods
sub
cmp
and
das
or
pop
cmpsb
xor
mov
outsb
fwait
sbb
sbb
inc
dec
adc
and
scas
pop
mov
lods
outsb
cmp
lds
sub
aas
inc
in
movsb
sbb
in
dec
jecxz
jns
adc
fnsave
repnz
mov
or
sbb
jne
sub
mov
shr
insl
daa
fnsave
cmc
in
xlat
jnp
push
sub
mov
xchg
pop
or
cli
lret
sub
inc
dec
test
negb
repnz
xor
mov
pop
push
shrb
add
or
push
cmp
rorb
pop
jge
xchg
call
jle
movsl
shll
mov
cmp
jno
sahf
cmp
mov
inc
push
rcll
lock
xchg
pop
mov
xor
scas
arpl
aam
cld
xor
outsl
or
sbb
pop
lods
xor
cmp
xchg
mov
push
aas
in
adcb
loop
and
jo
mov
popa
jp
adc
test
mov
push
xor
sbb
test
cmp
test
shlb
clc
dec
test
xchg
leave
push
inc
dec
cmp
dec
jne
mov
jne
push
mov
xchg
outsl
and
cltd
xchg
fld
cli
mov
push
jl
cmpl
idivl
lods
xchg
ja
fdiv
js
xchg
or
lds
mov
outsl
mov
cmp
mov
in
push
push
bound
jg
push
orl
repz
xchg
mov
ret
mov
out
loope
jle
xor
add
nop
dec
testl
aaa
loopne
aad
and
cltd
cli
add
xlat
aad
sbb
mov
sbbb
jb
sub
jg
outsb
mov
in
lods
js
mov
jb
das
xchg
add
push
sarb
or
outsl
enter
jmp
loopne
jmp
out
mov
sbb
push
into
pop
pop
xchg
add
out
pushf
sbb
stc
mov
aas
scas
loope
aaa
addr16
test
test
inc
jg
lret
in
fsubs
fimull
fmull
sub
pusha
test
ret
fcoml
movsl
dec
dec
inc
addr16
mov
or
xchg
adc
inc
test
cmp
push
dec
mov
addr16
aam
xor
mov
or
pop
das
addb
test
sub
push
jecxz
pop
scas
pop
mov
adc
mov
or
in
mov
mov
cmp
jg
add
xchg
mov
fisubrl
test
push
es
pop
movsb
xchg
lcall
push
xor
xor
pop
fnsave
cmp
in
fwait
push
mov
pop
pop
ljmp
pop
sub
cmp
and
mov
nop
in
je
pop
aaa
into
dec
push
out
push
out
and
stc
lods
rorl
jecxz
pop
jle
dec
sub
ss
js
into
mov
inc
inc
sbb
push
test
pushf
or
pop
mov
mov
popa
mov
popa
inc
fstl
pushf
daa
imul
es
lcall
xchg
mov
xchg
call
and
frstpm(287
xorl
hlt
or
mov
jle
leave
outsl
and
mov
lcall
jp
or
sbb
jmp
aaa
cmp
shl
jo
mov
or
jge
pop
pop
jae
lret
sub
dec
inc
stos
pop
mov
or
jnp
sarl
out
iret
lahf
shll
jbe
cmp
push
ja
or
xor
movsl
push
cs
sub
mov
sub
inc
mov
arpl
xchg
dec
fcomps
sub
jnp
or
sub
clc
out
ljmp
jb
ja
movsl
out
sahf
lahf
cmpb
scas
out
sub
cmp
sbb
mov
or
addb
mov
pop
fs
mov
das
adc
out
inc
mov
out
xchg
fildl
or
and
loop
out
test
imull
sub
movsl
pusha
adc
push
ret
daa
lods
repz
cmp
cmp
mov
popa
frstor
call
inc
cs
scas
sti
in
pushl
fadds
divl
fildll
leave
add
insl
test
es
dec
xchg
loope
mov
xchg
es
dec
dec
repz
enter
pop
pop
inc
sti
in
inc
test
scas
shll
test
enter
divps
in
jge
sub
enter
jp
test
enter
pop
add
js
or
mov
repz
inc
and
cmp
sbb
xchg
push
incb
sub
jp
sbb
mov
add
mov
in
pop
mov
jp
inc
jb
mov
fdiv
scas
xor
fimuls
jns
into
stc
ss
xor
add
insl
sarl
pop
dec
ret
push
jns
out
pop
out
sahf
sub
dec
shrl
and
mov
and
scas
das
adc
dec
scas
push
in
imul
iret
insl
pop
jmp
cltd
mov
test
or
sbbb
xor
int
sbb
sub
rcl
test
mov
mov
mull
sbb
arpl
cmp
ret
std
in
xor
mov
notb
shll
dec
test
pop
insb
mov
test
fstps
ud2
pop
movsb
cs
mov
icebp
test
and
inc
insb
arpl
pop
push
cwtl
pop
pushf
or
gs
sbb
out
sti
mov
loope
sub
inc
rcll
es
in
insl
push
sbb
jns
scas
push
cmpl
xchg
sbb
jecxz
cwtl
xor
xor
and
pop
inc
xchg
mov
sahf
jb
jge
aam
jae
insl
mov
movsb
and
mov
ss
pop
mov
imul
add
mov
jp
sub
sahf
mov
mov
mov
xchg
push
or
xchg
push
dec
jp
pop
xor
inc
addr16
pop
inc
push
sti
xor
pop
inc
aaa
mov
je
ljmp
das
or
ss
sub
clc
lret
test
in
jecxz
dec
jg
push
loopne
sbb
imul
ficomps
idiv
insb
mov
dec
int3
jnp
aad
jno
mov
movsb
push
dec
or
in
dec
mov
cmp
pop
inc
fdivp
mov
ja
or
xlat
movsb
push
sti
inc
fsub
and
jne
mov
mov
and
in
lods
jle
dec
xchg
daa
lcall
lahf
idivb
cmp
sub
jo
inc
sub
in
cmp
fdivrs
in
jb
filds
enter
and
mov
xor
mov
push
push
jb
divl
nop
inc
pop
roll
add
lret
loope
dec
xor
idivb
into
imul
icebp
lahf
jp
inc
xchg
mov
fwait
test
fisubrs
sahf
dec
lret
mov
pop
dec
cmc
test
sbb
sbb
mov
dec
xor
add
outsb
addr16
cmp
ja
inc
jmp
or
call
mov
sub
imul
daa
push
sub
sbb
jo
fcomi
shl
clc
xlat
xlat
rcrb
push
sbb
cmp
gs
jle
sar
fisubl
loopne
pop
scas
aaa
mov
loopne
sub
outsb
add
bound
cmp
or
pop
loop
pop
cmpl
mov
sbb
aad
sub
jo
xor
pop
cwtl
inc
sar
imul
gs
mov
pop
sub
mov
ret
cltd
jae
notl
call
push
adc
faddl
test
rcr
push
add
jmp
sub
imul
lret
fcomi
inc
nop
push
sub
dec
cmp
push
inc
mov
fildl
in
push
aas
jnp
push
mov
shll
loop
pop
pop
lahf
push
cli
cs
mulb
xor
xor
addr16
mov
sub
push
mov
lea
xor
push
push
sub
rolb
adc
sub
push
scas
cld
data16
and
jg
jg
lahf
rcrb
int
push
ljmp
test
mov
push
pop
insl
mov
sub
testb
push
inc
mov
mov
iret
inc
xchg
add
pop
dec
in
sbb
aad
xchg
lock
jecxz
jne
mov
mov
dec
push
pop
pop
ja
cltd
js
adc
gs
movsb
xchg
jno
outsl
push
out
push
inc
test
mov
sbb
jo
jo
into
stc
inc
stos
ret
jno
aaa
xchg
adc
jo
cmp
ds
pushf
aam
cmp
pop
mov
inc
outsb
aas
stos
xchg
push
daa
push
loop
sub
out
xor
xor
and
push
mov
imul
or
popf
push
mul
dec
insl
cmc
das
add
lods
inc
rorl
xor
jecxz
in
imul
dec
or
push
or
js
test
fnsave
xor
mov
repz
cwtl
std
ljmp
push
push
pop
dec
cli
fldcw
scas
push
shl
and
pop
jbe
adc
xchg
mov
je
cmc
pop
pushf
rcrl
add
aas
rclb
loop
xor
bswap
mov
mov
push
jle
jne
in
repz
cli
out
dec
or
call
adc
inc
negl
or
inc
scas
insl
add
sahf
fdivl
sbbl
mov
repnz
sub
inc
or
and
lret
pop
sbb
xchg
in
shrl
pop
mov
icebp
out
push
insb
jns
inc
nop
lods
and
jo
adc
mov
or
inc
sbb
mov
stc
repz
aaa
dec
or
adc
mov
popf
mov
stos
sub
subb
scas
sbb
into
push
int3
dec
pop
sub
insb
mov
inc
rorl
insl
imul
int3
imul
or
sbb
testb
dec
sbb
push
cwtl
mov
rcr
mov
push
mov
jo
loopne
mov
cmp
daa
adc
pop
shlb
mov
fbstp
xlat
sub
rcrl
ljmp
inc
ds
ret
and
sub
in
push
movsl
or
lds
push
enter
pop
push
outsb
shl
push
sbb
jae
and
rclb
stos
outsb
mov
fwait
cmpsb
cmp
jp
jb
adc
add
nop
lods
mov
fnstenv
adc
dec
js
iret
or
aam
in
scas
and
cmp
push
ror
and
jmp
sbb
dec
aas
lea
mov
sub
js
fwait
testl
fsubp
or
aad
inc
loop
jnp
imul
sbb
sub
mov
ret
jne
xchg
cmp
mov
mov
inc
mov
push
and
cmp
mov
cmp
dec
pop
xchg
sbb
rcll
mov
mov
or
pop
imul
mov
das
call
and
mov
sarb
xor
xor
or
jl
mov
cmp
lret
outsb
clc
adc
pop
mov
ret
lret
lret
popf
jl
cli
call
xchg
inc
xchg
ror
int3
mov
pop
jl
test
fidivs
jecxz
cwtl
xchg
ds
sub
push
and
imul
lret
and
xor
mov
push
lcall
popa
iret
leave
xchg
stos
mov
cld
mov
nop
pop
pushf
test
mov
out
xchg
imul
mov
xchg
jnp
sbb
jo
shrb
mov
xor
cwtl
jle
or
decl
cltd
mov
shrb
das
mov
iret
push
adc
outsb
sbb
cmc
into
mov
adc
mov
xchg
sbb
scas
and
inc
xor
mov
outsl
ficoms
gs
adc
jbe
and
pop
push
decl
roll
jg
iret
mov
fs
fs
bound
mov
lods
jp
cmp
jmp
mov
rolb
pop
sbb
xchg
jmp
repz
arpl
popa
ret
mov
popl
cs
mov
dec
jg
lock
sarb
popa
cltd
push
aad
test
loopne
dec
nop
call
ret
or
push
enter
and
es
pusha
sbb
sbb
or
icebp
sbb
lret
icebp
mov
jle
xor
and
pop
push
pusha
jmp
in
je
pop
cmp
mov
gs
fisubl
stos
sbb
add
adc
mov
bound
xchg
stos
adc
add
out
fwait
mov
frstor
mov
icebp
adc
mov
and
pop
dec
add
and
jp
jle
mov
pusha
mov
push
inc
in
xchg
dec
lahf
xor
xor
adc
mov
mov
sub
iret
insb
repnz
lds
js
lret
jl
popa
push
ss
adc
test
sub
xchg
lea
pop
cs
jg
or
test
add
lahf
fidivl
pop
mul
add
mov
adc
cmpsl
push
cmc
pop
rcrl
inc
test
cmpl
pop
fdivrs
push
xlat
or
cs
inc
mov
xor
mov
inc
stos
push
cmp
js
daa
cli
pop
test
clc
xchg
push
xchg
jg
gs
mov
into
mov
inc
aam
mov
or
push
and
fstp
mov
sti
adc
out
mov
data16
mov
jp
adc
insb
and
js
mov
xor
pop
sbb
xchg
cwtl
andl
mov
ret
sbb
push
lahf
push
sahf
lock
sub
in
roll
inc
inc
and
inc
push
adc
mov
or
jnp
sbb
push
inc
icebp
or
or
pop
outsb
mov
imul
dec
rcll
pop
push
lcall
into
cmp
adcl
mov
cwtl
xchg
test
push
popa
cmp
test
jmp
mov
int
mov
jns
stc
out
jns
test
sti
jae
push
lods
push
decl
dec
pop
push
iret
outsb
imul
cld
insl
outsl
cltd
mov
inc
add
les
aam
push
cmp
sti
insb
dec
iret
and
push
mov
add
or
dec
push
test
ss
aas
xor
sbb
xlat
imul
lds
hlt
pushf
cmp
and
test
mov
mov
cwtl
dec
or
jb
pop
repnz
nop
rorl
fwait
pop
inc
or
jg
stc
dec
xor
inc
push
fistl
fsubr
xorb
cmpsl
inc
mov
cmp
popf
insl
pop
lods
sub
in
int
mov
lods
inc
push
repz
xor
inc
mov
adc
pop
sbb
std
and
inc
xchg
cltd
pop
cmp
sub
pop
shll
xchg
xchg
jno
rcrl
test
in
mov
bound
inc
out
xor
cld
jb
push
xchg
repz
test
test
jp
or
int
sbb
in
adc
mov
cmp
loopne
dec
pop
mov
insb
shr
adc
mov
pop
dec
pop
cmp
jns
jp
stos
loopne
mov
fs
lret
fmull
sub
mov
sbb
out
pop
sbb
or
loopne
test
fisubl
mov
icebp
xlat
inc
fstl
jne
andl
popl
cmp
xorb
sti
in
mov
pop
into
or
cmp
fwait
jne
adc
xor
sub
iret
mov
rcrb
testl
sub
das
cwtl
pop
adc
push
repz
sbb
inc
mov
dec
faddl
jp
clc
push
testb
jge
inc
cs
xchg
cmc
xor
pop
xchg
and
fcmovnu
xchg
push
loop
lahf
dec
jo
mov
outsb
push
test
push
cmp
cmpsl
stos
sub
mov
adc
sbb
imul
stc
das
dec
lret
lea
mov
out
ljmp
iret
dec
sbb
sbb
mov
xchg
mov
dec
in
fnstcw
dec
xchg
test
mov
loop
or
pop
mov
shrl
dec
shll
mov
pop
xchg
xcrypt-ctr
cmpsl
pop
shll
mov
leave
jbe
xchg
ficompl
lds
outsl
push
imul
sahf
mov
inc
fs
test
lds
push
jae
add
les
cmc
imul
sbb
clc
inc
inc
or
pop
push
mov
stos
mov
pop
nop
mov
repz
sbbb
sbb
pop
bound
loop
fcomi
sahf
mov
mov
lods
js
insl
sbb
fbld
xchg
data16
cltd
pop
pushf
cmp
fldcw
xor
stos
and
xor
lock
mov
xchg
mov
mov
mov
dec
and
stc
clc
shlb
test
jae
mov
sbb
cs
jge
punpckhwd
jbe
dec
scas
sbb
das
adc
imul
dec
xlat
inc
lods
xlat
xor
hlt
lods
dec
or
and
or
cmp
pushf
loopne
in
lea
aad
mov
movsl
jl
xlat
pop
xor
test
add
add
addb
pop
das
jmp
mov
pop
sub
mov
shll
je
sub
sbb
adc
flds
les
mov
daa
int
sub
mov
ret
sub
mov
int3
dec
push
inc
int
mov
jmp
ljmp
jbe
sbb
pop
cmpsl
in
pop
popf
int3
sbb
lods
fs
in
stos
ret
add
and
sar
stos
lock
icebp
sbb
sbb
sbb
clc
enter
sub
jl
push
sub
jg
pop
mov
mov
sub
or
mov
es
jecxz
push
cmp
add
xor
jmp
or
cmpsb
cmp
or
xchg
cmp
cmp
pop
addr16
mov
ja
test
xchg
test
mov
push
mov
mov
arpl
or
out
inc
fistpl
js
fimuls
sbb
popfw
lea
in
dec
and
insl
cs
xchg
mov
sti
insb
int
pop
nop
aaa
std
lahf
jl
mov
sbb
outsl
sub
xor
testb
dec
push
inc
mov
sub
fldt
ja
sub
adc
cmp
pushf
mov
dec
adc
imul
jl
inc
rcrl
in
mov
lahf
ret
out
cmp
popf
ds
dec
push
xchg
outsl
sbb
int3
mov
insw
mov
adc
push
sti
xchg
add
push
pop
jle
cmp
je
sub
lcall
insb
add
fwait
mov
adc
ja
and
das
inc
les
idivb
jnp
insl
sbb
inc
pop
cmc
xor
inc
sbb
pop
out
das
lock
lahf
int3
pop
popa
mov
adc
pop
or
adc
insb
imul
jae
repnz
xlat
cmp
cmp
add
test
xchg
mov
or
xor
nop
insb
and
daa
jo
xchg
mov
sub
loop
push
add
or
faddp
xchg
push
leave
mov
mov
ja
push
xchg
fs
mov
xorb
pop
fnstenv
mov
divl
mov
leave
dec
outsb
mov
movsb
cltd
sub
or
lret
std
jne
sahf
mov
push
imul
sarb
fildl
cld
pop
cmp
cmpsb
icebp
fcompl
arpl
mov
lret
movsl
mov
arpl
fimull
cli
inc
lds
scas
movsb
sub
shlb
ja
insl
sbb
cmpl
xchg
jne
mov
pushf
std
ljmp
lahf
or
and
mov
mov
arpl
jnp
mov
and
mov
or
inc
enter
cmc
pop
jnp
leave
jno
pop
cmpsl
push
mov
push
mov
in
dec
mov
push
xor
sarl
aad
fldenv
adc
fs
pop
jp
leave
test
out
test
aas
loop
fisubrs
testb
mov
mov
rcl
and
adc
loope
or
loopne
fadd
ja
dec
ficoms
rclb
addr16
cmpsb
dec
mov
sub
lahf
push
jmp
notb
mov
bnd
or
fnstsw
fsts
sti
push
adc
mov
mov
adc
mov
cld
insl
aas
and
or
dec
int
mov
push
and
push
lcall
std
sbb
xchg
mov
inc
ljmp
or
push
jbe
dec
scas
fnstsw
fs
int
mov
in
push
adc
adc
xor
int3
cmp
dec
fstps
push
pop
fdivrp
jae
popa
in
mov
or
xor
sub
sub
adc
lret
addb
stos
push
jle
mov
repz
jge
adc
push
lea
mov
in
jbe
push
xor
fcmovnu
out
mov
push
add
incl
cmp
cmpsb
xchg
jmp
xchg
xchg
dec
mov
mov
jle
je
xchg
icebp
out
inc
fcom
xlat
gs
push
or
insl
call
jae
jno
jecxz
popf
pusha
repz
pushf
add
arpl
data16
sub
ret
xchg
jecxz
jecxz
pop
jmp
shrb
lret
add
rcrb
pop
and
mov
push
or
scas
dec
mov
adc
and
adc
sbb
lds
add
xor
pop
subl
cmp
sahf
jp
pushf
call
int3
lcall
mov
mov
clc
mov
insb
outsl
rcrb
fbld
xlat
pop
fs
lcall
pop
imul
mov
std
jne
push
xchg
xchg
add
or
pop
test
push
enter
jmp
adc
hlt
arpl
mov
push
dec
sbb
xchg
fwait
sub
testb
repz
ljmp
add
lahf
mov
mov
pslld
in
sub
xorb
pop
dec
cltd
push
scas
loop
adcl
outsb
mov
inc
adc
sti
test
scas
adc
push
adc
out
into
hlt
ret
loopne
xor
je
push
dec
mov
dec
jecxz
mov
call
pop
repz
cmpsl
mov
test
mov
rol
aaa
pushf
sti
or
call
push
jno
insb
xchg
inc
enter
cmp
fcoms
lret
test
mov
gs
in
ss
adc
mov
pushl
shlb
aaa
inc
dec
cwtl
jl
pop
dec
sbb
dec
inc
xor
push
testl
insb
fwait
inc
pushf
mov
addl
cmp
jns
cmc
jecxz
fcmovne
cwtl
and
bswap
pop
xchg
jl
arpl
jno
jl
mov
pusha
mov
fdivrl
jmp
xchg
mov
sub
push
aaa
ljmp
lahf
pusha
fldl
inc
ja
int
pop
test
push
fwait
loop
mov
push
mov
jns
mov
and
xor
push
negl
int3
mov
xchg
loopew
xor
push
outsl
divl
inc
movsb
jnp
je
mov
mov
push
out
lock
sbb
push
loop
dec
iret
stos
lcall
jno
or
mov
cmp
or
fidivs
loop
add
pop
lock
dec
cmp
mov
out
or
or
adc
das
sub
icebp
imul
loop
daa
rorl
jne
xor
pop
jecxz
popa
add
pop
or
add
jb
pop
inc
daa
fsts
daa
sub
push
xor
pushf
stc
adc
sbb
sbb
out
mov
pusha
and
xchg
into
or
repnz
stos
les
jp
xor
nop
fldenv
ds
jmp
mov
jb
mov
lcall
xchg
mov
outsb
std
adc
leave
xchg
dec
lods
cltd
fdivrs
lahf
and
and
cmc
stc
es
dec
mov
mov
ljmp
fcmovbe
imul
pusha
cs
es
shr
cs
popf
adc
mov
test
call
and
inc
jl
cwtl
shl
add
aad
icebp
cli
cmp
or
inc
xchg
std
das
daa
cmp
les
adc
lret
orb
xchg
pop
push
ljmp
xchg
in
dec
xchg
xchg
inc
jge
pop
push
push
fidivrs
mov
sub
jmp
xchg
cs
fnstcw
or
nop
ljmp
imul
pop
push
xor
ficompl
and
push
xchg
inc
shrb
sub
fdivrl
mov
cmp
push
cld
add
cli
cmp
test
sbb
inc
jb
movsl
xor
out
cmp
fistps
js
in
jp
cld
mov
sbb
je
subl
flds
js
aas
lods
mov
mov
dec
push
daa
jg
inc
add
sbb
hlt
push
movsb
cmp
xor
call
es
out
sub
out
pop
or
repnz
loope
sub
push
jmp
pop
imul
push
lods
push
repz
add
inc
jg
lahf
adc
xlat
in
and
jae
push
add
xlat
cmpsl
xor
imul
xchg
xchg
outsb
loopne
arpl
aaa
faddl
xorl
aas
or
pushf
cmp
pop
jno
mov
aas
dec
xor
cmp
stos
jge
mov
dec
sbb
xchg
daa
push
push
mov
jp
sub
jl
add
imul
push
fwait
inc
rorb
mov
mov
vmwrite
push
or
stos
jge
lds
out
sbb
pop
mov
jnp
fadds
sbb
or
pop
insl
mov
clc
cltd
fwait
push
push
mov
xchg
or
push
cmp
and
add
rcrb
sub
xor
lock
sub
repz
lret
mov
mov
stos
cwtl
jl
mov
xchg
mov
clc
mov
dec
divl
vcvttss2si
mov
cld
pusha
jno
or
or
sbbl
adc
push
imul
mov
je
dec
addr16
cmp
iret
and
inc
lods
cmp
pop
xor
js
jle
jge
mov
mov
lock
mov
enter
repnz
sbb
adc
pop
les
add
mov
sub
cmc
outsl
mov
xchg
movsb
out
pop
adc
add
stc
cmp
xor
pinsrw
vpsubusb
pop
mov
scas
imul
lea
movsl
xor
loop
mov
lds
dec
jb
scas
xchg
push
ljmp
sub
sahf
cltd
xor
rolb
les
popf
sti
jg
sbb
fmull
cmp
ja
daa
sub
addb
rdmsr
out
mov
test
daa
out
adc
shrb
inc
adc
arpl
mov
cltd
cmpsl
in
rolb
cmpsb
xor
add
jnp
incb
fcoml
cmpsl
outsl
loop
loop
popf
loopne
mov
push
xchg
cmp
xchg
ret
add
inc
stos
or
dec
repz
mov
dec
lds
outsb
or
cmpsl
inc
jmp
pop
cmc
stos
fdivs
sbb
and
dec
cmp
mov
mov
jo
repnz
inc
pop
pop
mov
adc
sub
popfw
sbb
adc
lahf
dec
andb
shrb
mov
inc
mov
inc
lcall
lock
sahf
ret
lcall
popf
nop
int
add
mov
push
repz
outsl
and
mov
popa
ljmp
jmp
popf
lahf
cwtl
jmp
xchg
sbb
and
dec
sahf
popa
jmp
pop
sub
mov
xor
dec
fdivrs
dec
arpl
and
xchg
jle
inc
pop
jle
xor
daa
jle
loop
xor
jle
xchg
cmp
sub
out
adc
xchg
clc
in
jmp
push
sbb
pop
jne
xchg
push
add
sub
cld
popa
and
push
aas
push
mov
jb
jg
cmp
repz
sbb
and
adc
add
cmp
and
js
out
mov
cs
xchg
test
xchg
push
adc
gs
sub
pop
repnz
xor
cmpsb
int3
insb
insl
movsl
fildl
xor
push
pop
call
xchg
dec
dec
aad
insl
mov
dec
loopne
jns
int
in
inc
cmc
data16
cli
lahf
push
loope
fnstenv
nop
mov
pushf
sub
repnz
out
jmp
sarb
jnp
sbb
sbb
mov
aam
xlat
out
mov
ret
dec
mov
cmpsl
jo
sub
sub
mov
lahf
push
cmp
mov
cmp
dec
sub
jmp
insb
sti
sub
jmp
roll
xor
in
push
setge
xchg
xchg
push
sti
outsl
out
jle
pop
and
push
stc
inc
jle
sub
add
insl
mov
aam
daa
outsb
test
lahf
xchg
lret
xchg
das
nop
ss
xchg
sub
xor
dec
or
xchg
inc
push
daa
scas
lea
je
into
jmp
dec
shrl
bound
mov
add
aaa
inc
repz
popf
arpl
out
jecxz
pop
jns
out
inc
ss
enter
pop
mov
mov
sbb
int
or
ret
mov
test
ret
xor
fidivrl
mov
pop
mov
push
ja
orl
push
cmp
pop
test
add
repnz
out
xchg
jne
jne
lcall
daa
cmp
mov
mov
pop
pop
ljmp
movb
dec
mulb
sbb
mov
cmp
int
xchg
leave
push
cmp
mov
repnz
ja
inc
mov
rorl
xor
inc
bound
leave
lcall
dec
icebp
cmp
dec
mov
sbb
cmp
ja
mov
clc
or
push
xchg
cwtl
in
ret
daa
mov
fsubl
out
push
adc
sbb
cmp
adc
subb
dec
fisubrl
dec
ds
popa
xchg
cmpsb
ret
cmp
sub
clc
pop
adc
mov
imul
icebp
sub
popa
popa
pushf
pop
dec
clc
aad
xor
enter
mov
lods
xchg
cld
jecxz
mov
sub
test
adc
sti
nop
pushf
lock
outsb
aaa
and
outsb
cli
jno
xchg
add
pop
xchg
xchg
insb
rorl
mov
xchg
int
xchg
adc
aam
mov
sub
leave
mov
xchg
mov
pop
jo
inc
lret
loop
inc
and
xchg
popa
out
in
xor
scas
dec
mov
mov
cli
push
or
rcr
mov
pop
dec
outsl
mov
mov
in
es
cwtl
dec
jp,pt
cmp
inc
lret
push
xchg
jno
fs
mov
push
ja
jbe
aas
xchg
imul
push
cmp
cmp
icebp
fsubs
mov
push
outsl
movaps
pop
cmpsl
mov
cwtl
clc
pop
dec
ss
int
push
fsubl
xor
push
dec
jge
in
add
js
adcl
dec
jl
mov
and
flds
ljmp
push
sti
insb
inc
loope
pop
addr16
imulb
lods
dec
add
int
push
sbb
jge
ja
pop
loope
fstpt
sbb
aaa
or
bound
push
ds
cltd
cmp
in
mov
or
bound
cmc
pop
cmc
inc
sbb
jae
aam
sbb
pushf
call
in
add
call
cmp
pop
popf
and
jmp
xor
pop
neg
lock
cs
and
push
loope
mov
and
adc
frstor
enter
inc
jge
cmp
lret
pop
mov
inc
shlb
mov
ret
shrl
repnz
ja
int3
add
jge
leave
push
pop
sbb
sbb
xchg
add
jnp
jle
or
out
fadds
pop
cmp
movsb
out
enter
cld
scas
mov
and
cld
pop
test
xchg
leave
in
fisttpl
stos
callw
pop
rcll
jmp
out
loop
mov
lods
xor
insb
add
sbb
add
lods
hlt
mov
mov
enter
pop
pop
adc
add
loopne
sub
das
adc
sub
insl
stc
test
cmp
xor
mov
ljmp
dec
jmp
dec
push
cld
push
std
inc
sub
dec
enter
add
xchg
lea
jnp
out
fisubrs
sti
pop
mov
pop
xchg
cltd
lea
stos
add
pop
lods
xchg
mov
push
xchg
mov
sbb
and
mov
jg
cmpb
mov
lock
and
out
rcll
sahf
pushf
stos
jmp
insl
pushf
test
inc
in
and
je
pop
xlat
or
dec
and
aad
pop
fcomi
out
dec
xchg
mov
jmp
mov
pop
daa
jmp
inc
out
push
lock
cmp
dec
inc
ljmp
jae
aad
push
push
mov
and
jnp
sub
int
dec
and
inc
cmp
xor
movsl
scas
cwtl
mov
jge
lea
mov
cmp
popf
cmp
xchg
mov
xchg
rorl
in
je
dec
pxor
orb
dec
cmp
popf
and
loopne
xchg
jg
jmp
push
and
pop
xchg
pop
adc
cmp
push
incb
mov
rcr
imul
jnp
in
sbb
add
cmp
fidivs
test
cmp
fdivrl
jbe
es
movsb
and
cmpsb
mov
arpl
mov
fldcw
push
cmp
and
int3
xchg
mov
add
in
outsl
mov
js
adc
mov
enter
jge
lcall
or
add
inc
inc
jb
test
dec
push
in
sbb
sub
hlt
mov
jae
ret
int
lods
pop
test
fisttpll
xor
in
dec
adc
xorl
sbb
out
mov
pusha
insl
push
sarl
xchg
sbb
xor
jne
shl
ror
vmwrite
add
out
jg
mov
call
mov
xor
mov
cwtl
loop
lea
stos
lret
int
ficoml
sahf
jno
adc
xorl
rorb
inc
xchg
dec
popa
movb
jnp
lret
fwait
popl
jo
cli
jmp
popf
or
outsl
shr
sbb
cwtl
jb
stos
xchg
pop
mov
js
nop
pop
sub
xor
orl
sahf
out
std
dec
and
or
push
pushf
cmp
push
enter
mov
movl
lcall
mov
xor
repz
adc
jnp
loop
jge
jnp
jae
stos
lock
mov
xlat
idiv
stc
cmp
aad
cmp
xlat
test
mov
sbb
pop
movsb
pop
xchg
repnz
sbb
inc
repz
and
movsl
mov
push
js
jnp
xchg
sub
cmp
rcrl
subb
lods
lods
rolb
and
adc
push
add
ds
jo
cmp
mov
sahf
push
lahf
sbb
lcall
cmp
fmuls
xor
push
mov
cltd
lret
inc
push
pop
arpl
mov
inc
pop
mov
push
and
aas
incb
sbb
mov
lods
pop
mov
aas
daa
push
lcall
sub
ret
mov
push
fcmovb
xchg
jae
xchg
pop
iret
xor
cmp
lea
inc
jno
sbb
repz
inc
shlb
pop
xchg
decl
out
dec
std
dec
pop
roll
cmp
adc
inc
enter
dec
lahf
test
frstor
mov
aam
lock
popf
outsb
movsb
data16
sbb
testl
and
push
mov
decl
push
stos
jno
or
adc
mov
or
dec
jp
sbb
adc
xor
xor
andb
xchg
xlat
js
pop
dec
dec
jp
push
xchg
and
and
aad
add
push
dec
mov
loop
lcall
dec
ljmp
mov
icebp
mov
int3
and
xchg
les
mov
mov
push
jl
push
push
fwait
mov
in
inc
inc
jl
pop
fwait
mov
nop
jb
insb
hlt
negb
xchg
lcall
outsl
xor
ja
movsb
rorl
ss
fmulp
mov
mov
popf
mov
cmp
cmp
sti
pusha
movsl
pop
in
movsl
mov
sub
mov
add
add
push
stc
out
ss
push
lods
mov
ss
mov
pop
mov
out
arpl
and
push
mov
arpl
dec
dec
cmpl
xor
aad
xchg
xor
movsb
xchg
pop
loop
lcall
testb
jp
ja
mov
jle
out
mull
and
mov
push
push
ficompl
in
rclb
lahf
mov
push
inc
xchg
aad
mov
inc
mov
adc
mov
test
ficomps
dec
nop
loopne
movsl
ret
sbb
push
ror
mov
hlt
jns
int
out
fistl
and
hlt
fwait
push
into
int
xchg
addr16
xchg
out
xor
ret
mov
je
dec
ret
xchg
xlat
nop
addr16
out
pop
adc
stos
std
popa
or
std
ljmp
fistpll
out
popa
outsl
dec
jecxz
cmp
insb
lret
mov
lods
shrl
push
cld
bound
test
insl
jne
insl
ror
ret
lret
fists
in
dec
lahf
xorb
push
adc
mov
xor
mov
lods
mov
and
mov
test
adc
rclb
mov
pop
filds
dec
jl
and
add
into
add
je
aaa
dec
mov
cmp
insb
int
sub
bound
add
jmp
fsubp
mov
jecxz
push
in
sub
scas
adc
loopne
pop
mov
mov
scas
inc
hlt
sbb
mov
add
mov
or
and
lock
popa
cmp
jns
outsb
ja
cli
inc
mov
push
lret
xor
pop
sbb
aaa
xor
enter
sbb
xchg
lock
dec
int3
push
add
data16
sbb
nop
push
inc
mov
enter
dec
les
fwait
popa
adc
mov
loopne
cltd
rclb
and
and
sub
jb
mov
les
jl
jmp
repnz
dec
aad
and
add
push
aaa
pop
fwait
les
cltd
das
andb
and
fnstenv
pop
clc
and
fld
mov
fiaddl
mov
loope
push
in
inc
jae
ds
sar
ficompl
test
mov
pop
and
xor
pop
mov
aam
jge
sahf
imulb
ja
dec
push
and
xchg
mov
or
fiaddl
xchg
int3
repnz
cld
scas
push
dec
add
imul
out
jo
outsl
out
dec
rcrb
inc
adc
dec
inc
mov
mov
dec
in
sub
outsb
and
jns
add
jg
sbb
push
and
repnz
xchg
es
xor
cmp
pusha
mov
or
nop
sahf
pusha
dec
xor
ret
or
aad
adc
sub
enter
push
mov
cmpsb
inc
push
and
ret
mov
cmp
mov
loop
cmp
xchg
cli
sub
sub
popf
ss
adc
jne
hlt
in
test
sti
cwtl
or
sub
pop
lock
pop
clc
xchg
sub
adc
lods
adc
inc
test
add
dec
insl
roll
cmp
fmulp
shl
fsubp
xchg
add
xchg
dec
in
int
cmp
mov
pop
mov
flds
popf
mov
fisttpll
test
ret
dec
cmp
arpl
flds
mov
jg
fsubr
push
cli
cs
add
adc
xchg
in
js
xor
xchg
mov
clc
sti
add
repz
dec
andl
xor
je
pop
gs
lods
cmp
adc
push
call
lret
jo
xorl
xchg
adc
inc
pop
inc
cmp
jns
push
fldcw
aam
adc
repz
adc
mov
in
ja
ds
cmp
jb
push
pop
mov
and
add
mov
xchg
sub
test
jge
fnstsw
xor
jne
or
iret
out
mov
add
mov
std
mov
mov
adc
fidivl
mov
sub
pusha
jecxz
dec
cld
outsl
add
lea
clc
in
js
in
je
pop
mov
adc
lcall
push
test
mov
in
and
and
adc
das
loope
mov
inc
sub
out
add
lods
fwait
push
faddp
stos
mov
jecxz
mov
inc
stos
pop
dec
pop
rclb
mov
aam
pop
sub
mov
mov
mov
mov
fisubrs
sub
ljmp
aad
clc
sub
cmpsb
mov
cmp
dec
xor
add
andl
jne
or
cmp
in
adc
js
xchg
add
test
stos
nop
cld
fs
push
aaa
fiaddl
loopne
aad
insb
mov
subl
xchg
add
pop
das
pop
jmp
dec
es
adc
ja
addr16
dec
xchg
or
outsl
in
fadds
xchg
ja
mov
push
repnz
and
imulb
sbb
sub
mov
ja
dec
cmp
shll
enter
pusha
dec
jno
mov
and
bnd
push
imul
je
add
sub
loope
mov
adc
pushf
test
cmp
in
xor
lret
xchg
lcall
jmp
pop
cli
xor
outsl
test
sub
cmp
nop
mov
push
jae
test
int3
int
jno
mov
lahf
fstpt
mov
or
jl
push
inc
arpl
rorl
mov
pop
rolb
push
and
out
and
dec
int3
lret
xchg
in
data16
xchg
xchg
cmp
rolb
adc
push
out
pop
das
mov
lock
lea
je
inc
push
int3
je
pop
xor
out
outsb
jge
cmpsb
inc
pop
fldt
outsb
xchg
cmp
jp
add
push
data16
out
or
mov
test
push
int
ja
repnz
lret
mov
mov
or
cmp
lret
and
daa
cs
or
fwait
add
cmc
shll
sbb
cmp
inc
pop
or
fcompl
call
push
mov
push
insl
shll
shl
bound
sub
push
icebp
pop
lahf
mov
aas
add
pop
insl
sahf
std
popf
rolb
imul
pop
icebp
xchg
pop
and
fimuls
xchg
or
xchg
aad
lock
data16
mov
adc
das
cmc
xlat
bound
push
adc
fstpt
cltd
cmp
test
xrelease
in
dec
test
inc
dec
std
dec
enter
sbbb
push
lods
enter
roll
cltd
push
mov
xor
inc
sub
in
incl
sbb
mov
xchg
jnp
call
je
out
and
mov
out
je
repnz
xchg
das
scas
mov
incl
push
pop
sub
test
mov
addr16
adc
adc
dec
dec
inc
test
jecxz
stos
or
fldenv
xor
pop
mov
pop
test
and
in
pop
xchg
xchg
ja
std
mov
mov
dec
repnz
dec
imul
sbb
pand
sub
mov
out
sub
fsubl
faddl
stos
mov
xor
jno
sub
ds
insb
push
sbb
xor
lcall
pop
stos
nop
jb
or
dec
stos
mov
inc
sarl
iret
xchg
and
jp
xchg
cmp
ss
jne
xor
adc
scas
mov
sarl
das
push
mov
das
push
out
mov
add
or
jecxz
dec
jb
rcl
dec
adc
cs
orb
and
sub
mov
cld
cmp
jecxz
pop
lea
mull
push
push
test
aaa
scas
sub
arpl
add
push
push
sbb
lret
push
cmp
int3
icebp
mov
jp
pop
jno
lock
fdivl
dec
or
or
inc
xorb
das
mov
insl
jle
adc
jnp
shrb
lea
sbb
rcrb
cli
mov
add
mov
pop
mov
aad
fucomp
pushf
xchg
add
and
lock
out
lock
sbb
sub
negb
mov
pusha
adc
push
outsb
add
xor
ljmp
push
dec
cld
fs
sarl
in
mov
iret
cmc
and
adcb
fildll
xchg
push
lcall
fs
out
in
sbb
jmp
mov
adc
scas
mov
fistpll
lds
cmp
cld
test
scas
cmp
fcoml
roll
push
inc
and
xor
js
mov
jp
sbb
inc
std
mov
loope
adc
or
xlat
or
and
push
mov
ds
scas
inc
mov
adc
sahf
xchg
ds
sbb
cli
mov
sti
push
sbb
jg
jmp
lahf
or
xchg
sti
jbe
lahf
and
or
xor
push
add
mov
pop
add
rclb
lods
fstps
mov
test
add
jns
lds
xchg
enter
adc
je
and
inc
add
push
push
mov
test
pusha
add
mov
adc
push
or
add
cld
push
xchg
push
in
add
es
xchg
js
rorb
push
fldenv
ljmp
adc
and
sub
jle
jb
push
push
or
aad
daa
jmp
js
cmp
neg
lahf
shll
stc
or
in
adc
insb
hlt
or
inc
imul
mov
js
mov
inc
rorl
sbb
mov
mov
inc
fwait
pusha
nop
and
xor
addb
cmp
xor
test
pushf
mov
cwtl
outsl
xlat
les
shlb
mov
dec
test
jecxz
loop
out
dec
cmpl
fisttps
jo
les
pop
filds
or
shrl
push
inc
jle
sar
push
push
xor
mov
jo
cmp
inc
lock
jns
sub
testb
xchg
xor
out
or
dec
xor
xchg
jo
push
adc
out
adc
sub
pop
add
cwtl
pop
gs
scas
push
scas
hlt
clc
sbb
clc
stos
iret
adc
pop
pop
mov
cmp
sarb
push
neg
pusha
icebp
sub
and
ret
icebp
scas
insb
das
push
xchg
ja
pop
lahf
ss
pop
cwtd
mov
jge
and
inc
pop
sub
mov
push
lret
out
push
mov
pop
test
jecxz
push
mov
iret
mov
loop
aad
mov
jns
stc
mov
test
mov
sbb
jle
mov
loop
sbb
jmp
imul
out
arpl
add
add
jg
stos
cli
cli
shlb
hlt
mov
push
dec
push
lods
and
or
dec
pop
push
rorl
or
subb
shrl
inc
loopne
inc
cmpb
pop
fsts
xor
vpshld
jne
adc
loope
cmp
ds
push
mov
cltd
arpl
outsl
aam
sbb
xor
enter
stos
xchg
test
outsb
outsb
fyl2x
sti
test
inc
cmp
lods
lods
shll
sbb
aas
aaa
pushf
negb
push
jo
cmp
lcall
push
loopne
jbe
pop
adc
cmp
dec
out
mov
inc
fiaddl
jecxz
rcrl
cmp
negb
mov
outsl
jne
xchg
cmp
js
mov
or
jns
int
rcrl
mov
js
or
or
out
js
in
xchg
ja
fidivs
fldt
sub
dec
je
lret
jmp
push
std
pop
adc
mov
jg
add
fs
lock
test
js
or
jbe
mov
scas
push
insl
or
adcb
lea
mov
add
cmp
mov
add
adc
mov
imull
ljmp
addr16
jle
mov
dec
or
test
rcll
xchg
xor
xor
pushf
push
sub
movsb
or
sbb
dec
adc
xor
stc
adc
insl
mov
fadd
adc
and
imul
ds
xor
mov
mov
mov
mov
dec
or
push
cwtl
pop
movsb
mov
xchg
and
pop
cmpsb
xchg
or
mov
push
addr16
mov
pop
aam
and
inc
jg
out
mov
add
in
xchg
jnp
out
sarl
fnstenv
ret
sub
jb
aam
push
je
mov
ss
xchg
in
lds
les
imul
sub
loope
xchg
mov
lcall
bound
cmp
in
cmp
fnstcw
dec
push
jo
fcmovne
dec
jle
ret
out
pushf
ljmp
sahf
pushf
mov
rorl
rcl
sub
outsb
jns
loop
and
pop
xchg
mov
add
cmp
mov
mov
popf
jl
pop
push
or
or
stos
mov
cli
in
sub
adc
mov
fidivrs
mov
inc
and
call
pop
jl
xchg
aaa
inc
cld
test
cwtl
push
add
adcb
xlat
std
mov
lcall
or
mov
arpl
xorb
cmp
sarl
aas
idivb
enter
rorb
pop
icebp
call
fdivrs
pop
inc
movsb
jne
mov
jg
push
pop
mov
popl
scas
mov
into
inc
add
xchg
test
loope
sahf
mov
xor
outsl
dec
add
ret
jno
pop
fstps
sti
inc
cld
inc
add
out
sub
mov
xor
mov
pusha
pop
notb
mov
mov
sub
mov
mov
or
in
insl
js
dec
mov
adc
or
pop
xchg
pop
cmc
loopne
sbb
adc
sahf
jae
and
int
xor
mov
xor
ljmp
inc
mov
pop
lret
cli
cli
repnz
ret
aam
add
fcmovb
pop
lahf
es
mov
jns
sub
cmp
cs
pop
int
jo
mov
mov
pop
dec
inc
adc
adc
lds
or
clc
push
jae
into
xor
dec
imul
in
outsl
mov
ljmp
fisubrs
dec
pop
sbb
leave
ds
push
dec
cmp
iret
stos
cmp
popf
adc
inc
pop
dec
push
in
cmp
sbb
lret
hlt
jns
add
inc
jg
inc
sbb
movl
sarb
testl
inc
inc
cmp
cli
inc
sarb
pusha
pop
sbb
daa
adc
dec
movsl
aad
sbb
popf
sub
inc
outsl
aaa
cmpsb
inc
leave
insb
and
mov
sub
and
add
mov
ja
cli
aaa
and
inc
clc
push
dec
data16
sarl
jge
clc
push
hlt
int
or
pop
pop
jle
sbb
sub
cltd
pop
in
int
loop
orl
scas
fisttpll
sub
add
xor
mov
repz
jb
shlb
sub
sub
mov
mov
in
adc
mov
fadd
imul
cmp
jno
inc
push
xchg
xchg
insb
mov
mov
rorl
jns
sar
push
fbstp
lcall
pop
sub
add
imul
loopne
cmpsl
scas
adcl
mov
xchg
cmp
in
rcr
das
add
clc
xchg
in
cmc
cwtl
pop
lret
es
sub
lcall
fidivl
shl
push
push
pop
jae
das
data16
lret
xorl
jne
mov
mov
mov
sub
out
sahf
push
sub
mov
adc
pop
insl
push
fistl
cmp
add
mov
and
add
sbb
pop
int
lcall
insl
call
pop
pop
pop
push
sbb
jle
pop
lcall
or
cmp
push
dec
push
clc
in
sbb
or
mov
push
movsb
or
sti
stc
in
cmpl
mov
nop
jbe
xchg
mov
inc
frstor
rolb
inc
mov
xchg
add
and
cmp
cld
pop
inc
repnz
outsl
mov
xor
jecxz
dec
inc
xchg
loopne
sub
je
pop
scas
adc
fs
xchg
movsb
daa
pop
sub
sbbb
es
leave
pop
test
test
fcmovnbe
mov
fwait
rcr
bound
jne
lret
leave
pop
or
in
sub
mov
ss
fwait
jle
or
push
pop
int3
mov
and
mov
ror
adc
cmpsb
movsl
or
shrl
dec
pop
add
test
andb
cmp
xchg
daa
sbb
inc
pop
clc
mov
jp
push
push
xlat
jns
adc
cwtl
in
cmp
aam
lret
inc
cmp
cmp
les
test
adc
sarb
test
test
jb
into
or
jl
jnp
dec
or
xor
xorb
int
mov
and
imul
lds
in
xchg
out
shll
mov
ret
push
in
mov
inc
xor
idivb
enter
xor
pop
add
idivb
xor
in
fwait
insb
xchg
adc
jl
mov
add
sub
aas
jae
xchg
xchg
or
sub
clc
pop
sbb
lret
cmp
jmp
das
inc
sub
xchg
jbe
je
bound
stos
mov
jno
int3
pop
in
call
popf
jle
or
stc
insb
rcrb
mov
push
adc
inc
cmp
xlat
pop
push
adc
xlat
push
adc
out
fsts
inc
pop
xchg
js
fucom
sub
sub
lcall
xor
aaa
mov
pop
xchg
int3
daa
mov
jns
iret
les
pop
aas
aaa
or
mov
push
mov
cmc
sbb
out
xor
dec
xor
faddl
mov
inc
cmp
mov
int3
add
pop
mov
das
lret
mov
mov
fisubs
push
test
pushf
test
ficoms
fistl
cmpsl
addl
repz
out
popf
cmpsl
ja
or
gs
mov
mov
popa
push
mov
sbb
out
sahf
mov
das
popa
and
pop
aas
jle
xchg
sbb
mov
ss
and
fisubs
and
mov
pop
cmc
cltd
lods
scas
lea
pop
sarb
xchg
jge
aaa
xor
push
out
mov
sub
test
pop
in
popf
data16
xchg
xchg
inc
push
es
fs
loope
insb
lea
incl
and
call
fcoml
jecxz
dec
push
pop
gs
les
xor
ficomps
jae
aad
das
cmp
enter
in
push
adc
inc
add
inc
imul
popa
iret
test
mov
pop
jp
mov
rcrl
cmp
int3
xor
mov
lods
pop
sub
push
sbb
mov
data16
pop
pop
cld
jne
pop
jmp
out
or
cmp
vplzcntd
cmp
das
cmp
iret
fs
shll
jne
jge
lea
adc
jecxz
sbb
push
popa
jg
mov
sarb
mov
jns
jle
es
arpl
sub
xchg
fwait
push
or
test
push
std
add
clc
popa
jecxz
test
aaa
popa
lret
pop
sub
cltd
aad
cmp
mov
inc
pop
xchg
pop
arpl
fcoml
stos
push
std
or
data16
or
leave
jno
lret
lds
jns
mov
dec
sub
fsubl
xchg
or
mov
in
fwait
mov
mov
int
add
add
test
add
call
push
push
lret
mov
jl
cltd
aad
add
loopne
lock
dec
icebp
pop
inc
icebp
out
pop
fnstenv
test
sub
and
sub
dec
mov
sbb
sahf
call
mov
popa
or
ljmp
lahf
or
stc
mov
and
in
lret
ret
fs
lods
insl
or
dec
adc
das
test
and
adc
ret
sub
mov
and
and
add
adc
dec
push
push
inc
or
sahf
pop
and
inc
inc
mov
cmp
push
fisubrs
imul
pop
lds
ret
test
rorl
lds
cmpsl
push
imul
pop
scas
nop
rclb
xor
or
pop
xchg
fisubs
inc
jns
loopne
xchg
pushf
sbb
jg
push
push
xchg
jae
inc
fwait
clc
pushl
sti
xchg
or
xchg
aas
cltd
in
add
push
stos
mul
stos
cmp
xchg
test
shll
fwait
add
decb
mov
test
movsb
test
add
xorl
insb
jle
orl
jbe
mov
sub
or
mov
insl
inc
ret
sub
inc
xor
cs
mov
add
push
mov
in
mov
pop
sbb
mov
cmp
push
or
das
imul
es
mov
cmp
imul
or
dec
jbe
jae
rolb
mov
pop
xor
mov
js
xor
mov
outsl
flds
in
inc
xor
ds
stos
popa
repnz
sub
xor
addr16
ret
add
mov
test
inc
jp
push
dec
test
mov
std
jl
aam
pop
jmp
es
sub
sbb
push
outsb
sbb
gs
mov
add
aaa
or
imul
mov
cmp
shrl
cmp
sub
sbb
push
add
cmpsb
jo
pop
jnp
jne
and
ds
jecxz
mov
sbb
in
mov
jo
pop
mov
pop
sbb
pusha
inc
push
and
dec
add
jb
adc
sub
lret
fstps
scas
lcall
add
js
push
dec
mov
in
sahf
mov
sub
sahf
ret
and
add
in
test
jl
hlt
xor
ret
cmp
cmp
mov
xlat
adc
xchg
loop
call
aaa
or
arpl
movsl
inc
cld
mov
add
mov
or
int
push
lock
mov
cmp
mov
pop
ljmp
mov
cmp
fdivrl
arpl
pop
push
icebp
add
push
test
imul
and
ret
cmp
sub
bound
add
push
clc
fwait
jmp
and
lds
dec
cld
inc
rcrb
icebp
test
pop
addb
outsl
dec
push
sub
test
pop
pop
push
push
xorb
sbb
cltd
cvtpi2ps
cld
push
test
test
arpl
lahf
or
jecxz
mov
or
mov
cs
sub
in
push
xor
push
pop
add
fmull
addr16
sahf
xchg
mov
pop
jg
je
xchg
adc
ljmp
mov
and
aaa
loop
outsb
pop
ja
sub
jmp
sti
scas
mov
add
sub
ss
inc
arpl
mov
mov
sub
inc
inc
test
push
xor
ret
lcall
mov
filds
adc
test
inc
lret
jb
shr
dec
add
sbb
sub
test
stc
xchg
mov
adc
outsb
push
lods
out
std
js
add
icebp
out
fwait
into
cld
mov
pushf
mov
aaa
mov
cld
stc
pusha
and
pop
jbe
mov
inc
mov
xchg
mov
mov
dec
sbb
and
push
sub
and
jo
mov
insb
sub
push
push
push
mov
out
enter
in
add
adc
mov
ja
xor
ss
jne
ja
insl
call
xor
jge
fildll
repz
push
or
cmp
and
inc
arpl
sbb
sbb
inc
fdivs
mov
adc
jmp
loopne
scas
mov
inc
lea
xchg
cmp
pop
out
pop
push
sbb
jne
lock
fimull
test
in
mov
sub
js
adc
jae
push
dec
jns
aas
xchg
xor
jmp
adc
jmp
pop
inc
inc
mov
out
sbb
stc
ss
fsubrl
inc
pop
sbb
xor
pop
popf
repz
sub
xor
std
loope
add
push
ds
pop
insl
push
dec
and
insl
dec
push
test
push
shll
ljmp
popf
repnz
mov
shrb
pop
jmp
xor
and
rcrl
ret
loope
subb
jmp
leave
je
push
pop
je
pop
adc
int3
scas
push
mov
das
hlt
out
add
js
popf
sbb
gs
jb
mov
xorl
jmp
adc
inc
push
cs
imul
adc
add
or
push
ffreep
dec
sbbl
shr
push
or
mov
shl
or
shll
jb
dec
mov
inc
fcmovnbe
mov
test
xchg
adc
adc
pop
lods
addb
outsb
aam
sbb
adc
push
mov
les
into
adc
insl
fistpll
add
jle
lock
fcom
into
call
jo
sub
cmpsb
movsl
push
jb
push
cmp
incb
movsl
xchg
push
int3
push
xchg
cli
and
jg
insl
dec
push
xchg
mov
push
jo
sbb
mov
test
imul
shrl
aad
int3
cld
xchg
sbb
add
xor
not
pop
dec
fs
lods
push
inc
sub
cmp
popf
jmp
cmp
xchg
cmp
fmull
adc
sbb
add
mov
inc
jl
pop
adc
cmp
and
sub
les
cmp
out
pop
test
cld
sub
call
inc
movsl
stos
arpl
push
xchg
mov
push
pop
xchg
lds
pop
call
jl
dec
es
repnz
xchg
cmpb
cmp
in
mov
fsubrl
call
cmp
xchg
or
das
sarb
loopne
xor
add
push
xchg
mov
idivl
sub
mov
dec
push
mov
add
and
aaa
dec
fs
sub
mov
mov
in
ja
cmp
pop
data16
pop
mul
fwait
les
out
or
sub
and
xor
movsl
add
pop
cltd
mov
mov
scas
sbb
sarb
mov
aas
adc
xor
mov
and
mov
js
cmc
add
test
dec
popf
push
push
mov
and
inc
rclb
hlt
loopne
pop
jnp
cs
repz
fimull
cmpsb
mov
aam
sbb
mov
sti
fistl
mov
sbb
mov
orb
enter
aas
ret
movups
rcr
ficompl
data16
xor
jge
jne
xchg
or
jne
cmp
loope
int3
enter
outsl
leave
add
ljmp
mov
mov
es
pushf
mov
std
cltd
cs
cli
mov
pop
adc
fidivs
inc
fistpll
icebp
in
lea
inc
lahf
les
pop
sbb
cld
jmp
pop
andb
sbb
ror
or
test
mov
rcr
test
js
sbbl
aaa
lods
mov
xchg
or
fdivrl
in
test
mov
popf
pop
clc
in
ficompl
andl
jae
inc
sub
xchg
pushf
cmp
fstpl
mulb
fildl
lock
cltd
xor
out
sub
icebp
push
in
sub
testb
jg
mov
mov
es
push
lods
jecxz
inc
xchg
sbb
sub
fsubs
mov
out
dec
aaa
push
lds
push
icebp
bound
in
loopne
push
test
sbb
sub
mov
jl
hlt
mov
and
ja
pop
pop
cld
and
xor
repnz
pushf
pushf
xchg
in
dec
fcomps
xor
sarl
xor
jg
inc
dec
and
push
jnp
dec
aaa
lock
scas
push
jo
xchg
sbb
xchg
jmp
nop
adcb
jb
cmp
xchg
or
dec
or
add
mov
xchg
addr16
mov
mov
in
orb
xchg
jg
in
xor
mov
cs
mov
lahf
sbb
mov
cmpsl
mov
pop
push
stos
daa
inc
jmp
aad
add
movsb
iret
in
mov
insl
xchg
xlat
roll
sbb
mov
in
cmp
popa
repz
jmp
sbb
test
mov
mov
pop
cmpsl
inc
xor
mov
popa
xchg
push
popa
and
adc
lds
jmp
icebp
les
mov
or
orl
imul
dec
lret
xor
add
es
mov
xlat
and
in
clc
cmp
stos
scas
lock
stos
in
in
in
xchg
pop
or
fstpl
call
dec
mov
pop
sahf
and
xchg
test
mov
pop
and
mov
mov
mov
mov
cmp
mov
mov
mov
lret
lret
movsb
and
inc
add
mov
mov
xchg
fisttpl
or
add
jle
leave
rcrl
pushl
enter
fldenv
xchg
shl
lock
fabs
mov
jno
xorl
pop
lds
sar
test
test
pop
inc
cmp
mov
fisubs
dec
mov
dec
sarb
std
das
inc
fcoml
ss
dec
repnz
cmp
mov
in
aaa
xchg
mov
dec
push
xchg
cmp
insl
enter
out
inc
imul
fcomps
xor
or
pop
rorl
mov
sub
mov
pop
je
outsb
and
mov
push
dec
and
sarl
cmp
rcl
into
fistps
fstl
repnz
xchg
stos
jmp
fmulp
in
insb
outsb
push
cmp
sbb
mov
add
xchg
repz
sub
insb
ja
inc
xor
pop
sub
jnp
in
jno
outsb
add
shl
lcall
xchg
sub
mov
cld
scas
ret
enter
in
stos
xchg
add
imul
stc
cmp
sbb
shlb
or
sub
cmp
push
mov
mov
dec
add
inc
insl
pop
addr16
test
xchg
fld
jg
sbb
or
push
imul
pshufw
pop
and
je
jle
mov
mov
lahf
mov
fwait
loopne
jg
jae
cmp
icebp
mov
repz
pop
xor
arpl
xchg
repz
in
xchg
fmul
inc
mov
and
addl
fwait
and
pop
es
cmp
es
sbb
or
in
jl
shll
sub
sbb
int
sub
add
and
int3
mov
xor
mov
into
aad
xchg
cmp
icebp
mov
movsb
ja
fwait
or
pop
inc
outsl
sub
pop
insl
je
jmp
inc
sbbb
sub
xor
pop
je
repz
rcrl
push
cmp
mov
cmpsb
push
inc
pop
pop
cmp
jp
decb
mov
cli
mov
push
mov
pop
call
mov
or
stos
sbb
sub
lods
cmpl
pop
xchg
movsl
icebp
cmp
repz
ja
jmp
lret
fidivrs
and
ljmp
mov
ljmp
ret
dec
test
sub
popa
push
leave
lods
xchg
pop
inc
sub
mov
jge
popf
fldenv
lea
loop
push
xchg
sub
stos
mov
outsb
sbb
xchg
sub
les
lret
or
stc
pop
inc
cmp
jmp
ret
and
sub
and
arpl
out
aam
shr
addr16
adc
popl
lret
pop
xor
hlt
nop
jb
shlb
cmp
push
das
movl
rclb
ss
xchg
xor
inc
stos
sub
fimuls
mov
dec
orl
dec
imul
int3
mov
or
out
sub
adc
pop
popf
mov
aam
adc
imul
lods
inc
into
pop
inc
in
addr16
insl
mov
std
lods
loop
iret
out
pop
mov
sbb
add
orl
sbb
mov
add
cmp
inc
mov
add
lret
int3
mov
xor
rorb
xor
in
pop
sub
xchg
sti
push
cmp
in
fwait
cmpsb
je
stos
aaa
cmp
je
add
ret
push
push
and
dec
shrd
xchg
pop
and
push
sbb
mov
in
adc
pop
xchg
pop
jle
xchg
mov
inc
js
aas
fcomps
push
and
adc
mov
pop
stc
add
cli
push
or
pop
xchg
imull
movsb
push
hlt
cwtl
inc
mov
cs
dec
scas
data16
mov
adcl
inc
push
xor
sbb
icebp
jae
jle
cli
xor
cld
cmp
mov
adc
adc
test
popa
pop
xchg
iret
loopne
xchg
pushf
cmc
cmp
ret
jle
repz
pop
mov
adc
and
icebp
adc
mov
push
xchg
or
jl
dec
fiaddl
dec
sbb
mov
dec
test
push
sahf
faddl
sarl
movsb
clc
adc
add
decb
sub
jmp
in
inc
or
sbb
pop
mov
pop
and
push
int
jle
aaa
fidivrl
in
sbb
and
rcr
insb
lahf
push
xchg
testb
mov
or
test
push
and
push
cmpsl
fimuls
pusha
inc
mov
pushf
push
rorl
je
iret
cmp
in
xor
jno
mov
popf
popa
inc
mov
pop
imull
loopne
sub
lcall
popa
pop
stos
jmp
sbb
orl
sbb
mov
add
rcrl
in
leave
mov
das
push
mov
adcb
jns
mov
lods
addr16
adc
out
add
mulb
sub
dec
cmc
adc
call
subb
sbbb
lods
lock
xor
cs
mov
push
and
push
jns
lods
mov
cmp
xchg
pop
and
jle
test
loopne
push
bound
ret
mov
dec
popa
dec
orl
imul
mov
sti
shlb
inc
pusha
xchg
sbb
repz
adc
cld
xor
out
js
mov
lret
mov
dec
lods
les
dec
fdivrs
pop
lret
adc
in
rol
shll
enter
push
cwtl
inc
pop
push
dec
lock
pop
xor
mov
fldt
pop
push
mov
push
roll
icebp
test
or
movsb
jl
cltd
in
test
popa
enter
jge
mov
dec
sahf
mov
push
and
insb
pop
mov
repnz
imull
push
in
sbb
dec
cld
pop
push
push
loopne
push
enter
ret
push
xchg
or
push
jo
mov
sub
nop
addr16
ljmp
das
adc
test
rcrb
pop
aad
sti
shlb
in
mov
or
inc
and
in
xor
adc
dec
xlat
test
aaa
addr16
adc
jbe
pop
xchg
sbb
sub
stos
cmc
push
aam
call
inc
iret
std
push
hlt
push
lahf
std
xor
dec
stos
rorb
nop
jge
pushf
dec
iret
inc
fcos
jp
push
inc
cmp
pushf
ror
push
and
or
cmp
pop
push
fwait
dec
pop
pop
add
aaa
fmuls
stos
xchg
or
push
mov
or
outsl
mov
stos
rol
pop
das
push
sub
pop
icebp
mov
stc
mov
adc
pop
cmp
push
sti
out
mov
jb
lcall
pop
lods
add
ds
pop
jg
dec
adc
add
addr16
stos
xchg
pop
cmc
stos
xchg
mov
inc
dec
icebp
jecxz
cmpl
shlb
adc
xor
dec
or
mov
push
add
mov
sahf
add
adc
jg
loope
mov
lcall
insb
arpl
xchg
ds
cli
mov
xor
sahf
test
test
imul
pop
cmp
aam
pop
jae
into
aaa
in
xchg
sub
mov
outsl
inc
sbb
stc
loopne
xlat
jp
jnp
test
pop
nop
jno
je
mov
jmp
inc
xchg
packsswb
push
test
int3
clc
mov
cwtl
cwtl
pop
out
add
mov
xor
push
in
add
cld
jle
pusha
and
cmpsb
xor
pop
mov
mov
ds
je
int3
push
je
fisttpl
jno
ljmp
scas
inc
cli
adc
daa
cltd
jnp
add
dec
out
leave
lret
shr
sub
inc
pusha
ja
xor
fsubs
movsb
add
pop
out
or
stos
daa
jno
xor
push
lock
nop
shrb
adc
mov
iret
mov
sub
and
xchg
inc
notl
addr16
repz
inc
cli
mov
in
jmp
mov
test
add
jne
data16
outsl
push
mov
int
inc
mov
rolb
inc
sub
xchg
cmp
xor
lock
pop
push
cltd
ret
aad
mov
lret
mov
notb
pop
inc
dec
push
mov
push
mov
xchg
xchg
push
shll
mov
mov
cmp
pop
jo
ja
cmp
cmp
mov
xlat
mov
rolb
cwtl
es
fdiv
mov
push
pop
push
orb
inc
push
jg
cs
xor
cmp
ficoml
push
adc
enter
sbb
xchg
shrb
xchg
pop
gs
xor
pop
xlat
jo
ret
out
mov
pop
outsb
sbb
ja
inc
pop
push
and
mov
rolb
pop
cs
sub
push
jl
dec
arpl
bound
test
adc
pop
dec
pop
imul
sbb
or
mov
call
ds
jnp
xchg
hlt
add
or
shlb
lea
cmpsl
out
lea
arpl
push
push
cmp
call
shll
dec
test
aaa
sahf
push
xchg
push
out
scas
inc
sahf
xchg
add
mov
lods
es
hlt
xchg
add
in
rcl
xchg
pop
mov
ficoml
xor
outsl
xchg
arpl
addb
inc
xchg
mov
aad
and
cmp
cwtl
pop
jmp
add
iret
cmp
test
roll
pushf
mov
cmp
imul
call
loope
sub
xchg
mov
add
cmp
push
dec
fnsave
lret
push
add
movsl
xorl
mov
jp
jg
xchg
pushf
popa
test
and
add
mov
je
mov
adc
inc
pop
std
incl
pop
cmp
push
mov
cmp
dec
jno
adc
push
sub
pop
fstpt
int3
cli
sub
mov
outsb
daa
lock
inc
ja
dec
nop
cmpsb
bound
repnz
stos
dec
push
enter
shrb
test
push
fs
icebp
movsb
jp
insb
xchg
sbbl
addr16
mov
xor
pop
inc
and
xor
test
fdivrs
iret
mov
insl
xor
inc
cmp
cmp
in
push
icebp
push
cli
dec
push
lods
jg
mov
add
and
mov
pushf
rcr
mov
mov
pop
push
mov
fdiv
inc
fwait
into
cmp
inc
aas
arpl
xor
xchg
inc
add
cmc
lods
scas
mov
xor
imul
call
dec
lea
cmpsl
es
xchg
lea
insb
sub
mov
adc
sub
mov
ret
push
aas
xchg
mov
jno
pop
enter
mov
mull
xchg
sarl
pop
repnz
dec
comiss
sub
pushf
and
neg
lret
mov
mov
decl
pop
inc
sbb
loop
or
inc
or
dec
jge
aad
les
inc
pushf
pop
and
ret
ljmp
imul
mov
push
pop
xlat
mov
popa
out
stc
xchg
add
or
mov
jbe
sbb
xor
int
mov
jnp
shlb
je
and
mov
sahf
test
int
add
sub
xor
pop
push
std
dec
xchg
sub
std
add
je
jge
mov
and
out
pop
add
jbe
mov
mov
mov
xor
add
scas
stos
mov
lret
sbbl
sub
jg
insb
push
test
xor
insb
nop
rolb
loop
xchg
lock
cld
test
jb
sbb
daa
rclb
cli
cmpsb
les
jle
jmp
jp
fisubl
clc
cmc
dec
jbe
and
cmc
or
js
mov
adc
mov
xchg
loop
push
fsubrs
movsb
adc
test
imul
clc
push
lods
shlb
sub
jne
and
cmp
sub
lahf
and
jge
dec
movsl
pusha
jl
sbb
arpl
loop
fstpl
jp
push
and
or
cmp
cmpsl
mov
pop
data16
cwtl
jle
push
idivb
shr
adc
inc
lret
ret
lret
addr16
sbb
insb
xlat
call
int3
xor
adc
sub
das
sbb
mov
mov
cvttps2pi
popa
ja
addl
imul
pop
push
adc
cmp
pop
loopne
test
jbe
sti
cmpsb
jae
xor
je
leave
pop
add
cmpb
pop
mov
in
inc
xor
repnz
icebp
or
cmp
cltd
push
lcall
dec
aad
loope
js
pop
loopne
sbb
out
push
dec
ret
add
test
xor
inc
jmp
sarb
mov
pop
xchg
mov
jg
push
pop
movsb
dec
inc
inc
or
pop
jne
xor
inc
push
jnp
cmp
push
stc
insb
adc
lret
das
notb
rcr
sub
xor
dec
in
dec
lods
mov
outsb
imul
inc
add
aas
jg
xor
push
in
fistps
je
jno
jae
xchg
pop
aas
xor
dec
jb
adc
pop
jecxz
fisttps
push
cmp
pop
notb
movsb
dec
test
mov
pusha
lret
les
outsl
orb
orl
jle
xor
adc
jbe
mov
movsb
movsl
lods
cmp
in
cmp
fistpll
outsl
lds
dec
jno
nop
jo
imul
mov
hlt
add
lds
jbe
movl
popa
sbb
xchg
mov
push
in
jns
xor
sbb
adc
stc
sbb
sub
test
cmpb
repnz
mov
bound
rorb
sub
dec
jg
adc
sub
add
pop
movl
leave
in
jg
add
clc
push
sbb
loope
jnp
cld
popf
mov
cmp
push
cmp
cmp
nop
push
pop
insb
mov
lds
pop
pushf
push
cmp
test
fists
jo
sahf
pop
in
xor
sbb
mov
mov
std
push
or
pop
xchg
xchg
lea
adc
scas
inc
push
xchg
mov
stc
shrb
mov
and
pop
in
cmp
popa
push
daa
cmp
sub
pop
xchg
cmp
int3
imul
mov
ljmp
xor
shrl
loope
pusha
and
mov
jecxz
push
inc
mov
push
xor
and
fcompl
stos
imul
push
pusha
xchg
loope
jecxz
lock
mov
scas
cwtl
test
lea
mov
rolb
dec
test
or
out
mov
fistpl
fidivrs
ja
push
push
cmp
mov
jmp
lcall
push
cmp
pop
mov
adc
or
scas
in
cmp
pop
lods
jl
dec
test
lret
lret
xchg
fincstp
xchg
jecxz
add
aaa
cmp
and
push
ret
mov
pop
sbb
xor
sbb
arpl
int3
mov
out
mov
dec
pop
cltd
jnp
jge
mov
out
ljmp
scas
in
lret
sbb
push
arpl
aas
xor
and
jno
mov
js
lcall
fdivrl
mov
jae
sub
push
cmpsb
pusha
jnp
xchg
movsb
test
mov
dec
inc
fcmovnu
mov
mov
add
aam
pmaddwd
jnp
pop
sti
fsubl
mov
sbb
cli
mov
notl
outsb
add
pop
imul
push
lret
pop
xchg
and
jecxz
out
xchg
mov
dec
cmp
jmp
sbb
push
pop
mov
and
out
gs
roll
ret
call
mov
loope
cli
inc
out
out
sti
jge
inc
mov
scas
jnp
scas
lahf
insb
call
rcll
outsb
sbb
xor
lret
mov
lahf
ret
das
mov
popf
into
je
add
into
add
lret
test
jmp
loopne
lcall
xchg
les
stos
aam
push
enter
movsl
sbb
inc
push
aad
sub
scas
stos
ret
repz
mov
test
xchg
mov
dec
push
insl
jl
in
js
sub
repnz
jb
std
xchg
test
clc
arpl
rcrl
int3
pop
pop
call
pusha
test
cwtl
push
ret
add
mov
jmp
ret
inc
mov
jmp
or
cmp
sahf
cs
rorl
ds
imul
jle
test
jns
push
sbbl
out
dec
aam
test
xlat
inc
test
pop
daa
ss
pop
push
arpl
pop
xlat
or
or
je
jne
pop
push
testl
sub
fldt
mov
test
jns
push
adc
lcall
cli
stos
sbb
push
fwait
mov
mov
jg
imul
jg
insl
mov
lods
movsl
xor
mov
mov
mov
sbb
stos
daa
sahf
fildll
cmpsl
fistpll
or
cmp
loope
icebp
mov
inc
cmp
jo
cmp
push
cmpsl
add
stos
xor
imul
adc
xchg
push
jmp
cmp
shl
mov
in
js
xor
shrl
fisubs
addr16
inc
out
cmpl
aam
insl
and
scas
sub
and
call
push
cmp
fcompl
mov
sbb
and
cmpsb
jg
movsl
cmp
mov
inc
xor
xor
or
inc
push
dec
or
popf
subl
repnz
pop
or
into
mov
fildl
dec
pop
fldcw
push
pop
cmpsb
and
sbbb
cmp
insl
das
addr16
movsl
pop
cs
xchg
jo
cli
insb
test
adc
xor
cwtl
xlat
iret
test
jp
cmpsl
jle
mov
scas
and
or
scas
fstp
popa
mov
jmp
sub
xorl
aaa
adc
cwtl
lret
jo
dec
dec
cltd
adc
pop
pop
outsb
mov
push
and
data16
xlat
repz
xor
dec
and
adc
nop
dec
xchg
iret
cli
jne
or
aam
push
adc
add
jo
insl
shlb
xchg
insb
rorl
scas
push
mov
jae
add
xchg
ja
outsb
pop
in
sahf
push
sbb
jle
popf
jp
sub
scas
xchg
push
sub
cltd
push
test
or
or
stc
ror
scas
push
sbb
in
mov
push
bound
add
push
pop
das
sbb
jge
and
adc
pop
ret
mov
mov
xchg
jp
std
insl
cmp
insl
sahf
xchg
loopne
mov
push
jno
sub
stc
bound
xchg
mov
nop
adc
ror
or
in
sbb
mov
pop
movsb
dec
or
sub
in
dec
inc
dec
push
call
popf
mov
inc
ret
cmp
mov
es
adc
jbe
sub
jno
pop
mov
int3
fwait
or
mov
cmpsl
aad
pusha
outsb
lcall
sbb
outsl
push
lret
xor
ljmp
shlb
cmpsb
mov
adc
inc
pop
clc
lret
adc
icebp
repz
push
xchg
gs
roll
scas
push
icebp
inc
mov
dec
dec
add
rcr
jnp
in
adc
and
out
push
cwtl
cli
ret
pushf
out
imull
inc
push
add
adc
lcall
dec
pop
jb
jl
loop
jb
or
adc
pop
pop
lahf
repz
inc
mov
data16
outsl
testl
arpl
dec
imul
scas
pop
jmp
jecxz
stc
pop
sub
fadds
out
ljmp
jecxz
jp
or
cli
push
sbb
cld
lea
jmp
outsb
xor
cmp
aaa
mov
xchg
pop
xor
xchg
xor
in
cmpsb
fdivrs
and
dec
cmpsb
sqrtps
cltd
jo
jle
imul
sbb
dec
adc
jge
dec
popl
imul
test
push
xchg
rcr
cmp
mov
fidivrs
shll
mov
mov
lcall
fsubs
test
es
nop
add
lahf
fwait
outsl
and
cmp
sti
ss
out
mulb
gs
mov
or
xchg
pop
xchg
cmpsl
xchg
lret
enter
push
jns
cli
out
movsl
pop
loopne
test
popf
addr16
adc
lds
rcrb
lahf
sti
mov
push
sar
fisubrl
xor
xor
imul
test
movsb
add
mov
addl
into
inc
push
das
jp
push
sbb
lret
mov
pop
call
sbb
out
sti
dec
inc
loop
adc
shlb
pop
xchg
jns
sahf
scas
clc
popf
sti
mov
cmp
push
out
sbb
pop
fsubp
aad
test
loop
dec
cld
cmpsb
hlt
sbb
sub
cmpsb
jecxz
xor
fstl
jmp
push
je
jg
mov
xchg
and
add
fildl
lcall
or
std
lahf
fisttps
inc
xchg
jne
push
fsubl
sbb
or
lret
inc
jl
popf
mov
xchg
test
pop
mov
cmp
pop
out
mov
cmp
sbb
scas
cmp
xor
pop
xchg
jbe
popa
ret
orb
popf
adc
xchg
es
push
xor
and
mov
movsb
inc
movsl
stc
popf
int
and
sbb
adc
inc
xchg
outsb
ds
xchg
mov
cmc
das
adc
imul
sub
sub
adc
xor
lock
test
ret
mov
mov
xor
cmp
test
fisubl
cmp
fimull
sahf
lods
and
mov
into
or
ds
inc
sub
dec
jecxz
push
ret
and
mov
cmpsl
popf
dec
sbb
fmuls
push
sub
mov
icebp
ja
lea
cmp
imul
xchg
xchg
cmp
shlb
pop
loopne
in
mov
scas
ljmp
mov
sub
ljmp
mov
cld
inc
xchg
jne
xor
pop
negl
jp
fidivrs
sarl
mov
enter
leave
std
fcmove
loopne
inc
or
sti
mov
adc
ljmp
lahf
cmp
xchg
or
adc
pusha
in
mov
mov
leave
in
push
sbb
lods
loop,pn
pop
daa
mov
mov
sbb
fnstcw
pop
sarb
jmp
mov
pop
fistps
add
lret
add
inc
or
fstl
dec
pop
inc
rclb
cwtl
fidivl
test
pop
test
enter
ss
lods
jbe
jno
mov
pxor
aaa
mov
or
arpl
push
flds
std
add
xor
call
jle
iret
movsb
bound
dec
xor
pop
mov
lea
jp
and
ret
int
lret
mov
xchg
fsubrp
divl
andb
xor
pop
jne
dec
ret
test
out
inc
cmp
push
jae
mov
adc
mov
or
out
push
shl
std
jb
pop
dec
mov
dec
sub
adc
inc
loopne
push
pop
sbb
divl
or
leave
cmpsb
and
and
shrb
in
fldl
insb
inc
arpl
dec
loop
subl
sub
and
mov
adc
push
jmp
mov
pop
inc
notl
mov
push
or
add
sbb
sbb
cmpsb
fistps
addr16
xchg
add
inc
out
fucomp
test
dec
out
dec
push
arpl
std
mov
stos
in
push
cmpsl
dec
pop
xlat
pop
das
or
dec
cmpsb
and
add
imull
xor
or
push
jo
inc
lcall
ret
add
sbb
pop
sbb
arpl
pop
or
add
pop
shr
pop
dec
pop
ret
jne
dec
outsb
mov
mov
adc
pushf
push
and
dec
cmp
or
int
mov
es
dec
cmpsb
dec
test
and
xchg
lea
fnsave
jge
lea
inc
xor
clc
jl
aas
xor
dec
loope
fwait
xor
hlt
xchg
in
decb
insb
ficompl
jnp
pop
jmp
xchg
dec
aas
adc
popf
mov
pop
ljmp
push
xchg
cmc
mov
idivb
add
es
inc
jle
mov
daa
sbb
ret
sub
cmpsl
sbb
loop
jb
xchg
sar
jae
out
mov
pop
mov
fisubrs
sub
ret
cmc
lcall
sti
xor
stc
dec
pop
sahf
fcomps
jne
repnz
fs
cmp
je
inc
mov
lods
sahf
and
lret
leave
aad
push
notl
mov
adc
addl
iret
fsubrs
addr16
adc
sti
arpl
mov
adc
test
mov
daa
push
push
shll
inc
shr
jp
push
shr
cmc
mov
cmp
xor
dec
imul
ljmp
aas
add
test
stos
pop
adc
pushf
aaa
loope
or
mov
and
shrb
scas
faddl
leave
divb
jg
sub
pop
ds
pop
out
cltd
sarl
ret
sbb
stos
xchg
jle
mov
add
cmovg
orb
mov
js
jae
testb
push
pop
arpl
stos
inc
xchg
xchg
push
adc
ficompl
nop
hlt
test
xchg
xor
push
test
sub
stos
es
xchg
shrb
imul
fstpl
int3
js
imul
ja
xor
in
mov
push
mov
insb
or
adc
pop
sbb
pushl
jg
imul
out
dec
add
dec
in
je
pop
jo
add
out
outsl
cmpsb
lahf
scas
jg
lock
sub
mov
loope
xor
lret
jnp
push
push
cmp
pushl
idiv
stos
popf
mov
data16
jno
dec
ja
dec
or
out
dec
aaa
jne
jns
adcl
xor
sub
decb
dec
mov
addr16
cmp
mov
mov
sahf
cli
mov
lret
push
loope
add
mov
int
mov
push
loop
cmpb
addr16
shlb
test
out
fnstsw
jge
out
ficoms
aaa
jmp
gs
rcll
mov
bound
jp
les
jmp
ss
lret
dec
ret
mov
arpl
les
xchg
lods
adc
jno
push
sbb
arpl
loop
cltd
mov
jns
js
orb
sub
mov
call
jae
jge
jg
or
loopne
jle
xor
test
cli
iret
cmp
inc
cmpsl
aam
clc
mov
cmp
ds
cwtl
xchg
ja
or
out
jecxz
es
mov
adc
mov
mov
int3
mov
mov
xor
xchg
mov
pushf
jo
pop
mov
adc
and
aas
xlat
push
mov
inc
mov
push
ljmp
aaa
sub
adc
cmpsl
std
subl
mov
jne
mov
and
mov
cmp
push
test
mov
add
in
inc
stc
cmpsb
or
rolb
popa
loopne
jb
sbb
pop
in
mov
xrelease
pop
daa
aas
cs
test
mov
and
jl
jl
xor
xbegin
mov
push
fadds
dec
push
mov
push
mov
push
fldenv
js
stos
or
jecxz
fiadds
mov
fdivl
stos
push
cmp
inc
icebp
shrl
xor
and
mov
cmp
andb
mov
rol
add
mov
jp
jecxz
aad
js
xchg
js
insb
mov
push
jne
push
xlat
in
lea
sarb
jae
pop
xchg
icebp
cltd
xor
enter
inc
iret
push
sub
or
movsl
jne
pop
cli
cs
add
xchg
test
dec
clc
sbbb
in
jb
lds
mov
ja
into
sub
lahf
imull
decl
imul
jle
stos
mov
hlt
in
call
mov
loopne
add
mov
in
int3
bound
rcll
movsl
fcmovu
lahf
loope
cld
push
out
mov
bound
in
das
lret
jecxz
ja
push
pop
xor
xchg
mov
ja
mov
shll
ljmp
outsb
aad
test
mov
enter
arpl
mov
xchg
add
setne
jmp
in
insl
push
mov
fsubrl
pusha
push
mov
stos
cwtd
outsl
push
out
aas
push
leave
push
inc
add
cmc
test
xlat
xlat
or
mov
push
dec
push
movsl
jb
push
ss
out
dec
inc
pop
jae
sub
push
repnz
or
sbb
stc
or
xchg
mov
popf
adc
pop
stos
xchg
jg
sub
cmp
movsl
and
inc
add
xchg
scas
mov
test
or
sbbl
repnz
dec
cli
adc
inc
dec
push
imul
enter
and
dec
pop
pop
in
adc
or
insb
popa
cmp
inc
cmpb
cli
arpl
int3
sbb
lahf
dec
mov
lret
cmp
test
jo
mov
pop
in
es
push
loopne
mov
iret
cli
sahf
mov
arpl
add
lods
ljmp
xchg
add
out
pop
lds
hlt
pop
inc
test
stos
cli
push
or
mov
in
aaa
les
lods
scas
fs
dec
dec
mov
mov
xor
dec
hlt
push
cwtl
pop
pop
mov
es
push
and
loop
es
jb
stos
arpl
cmc
sbb
mov
loop
and
shl
lcall
cwtl
repz
mov
in
add
cld
push
pushf
jg
push
sub
push
jb
repnz
xchg
cmp
test
lret
popf
inc
mov
or
push
aas
push
les
sub
stos
xchg
lret
aad
repz
iret
xchg
xchg
xchg
lock
aas
xlat
movsl
fdivrs
cld
sub
ljmp
push
xchg
cmp
dec
insl
clc
pop
adc
sti
test
outsl
adc
add
out
jb
cltd
mov
enter
arpl
sbb
adc
ret
mov
push
lods
adc
ja
cmpsb
sub
int
mov
or
and
dec
or
pop
pop
pushf
sub
cmp
jg,pt
test
and
adc
xor
aam
ret
jo
scas
cmpsl
test
icebp
push
and
or
dec
sub
xchg
addr16
mov
mov
dec
cmp
test
inc
jb
push
cmpsl
inc
xor
arpl
mov
fcmovnb
shrb
fidivrl
lcall
jmp
mov
cmp
incl
out
fidivs
shrb
xchg
xor
mov
xor
sub
fwait
sahf
inc
jns
mov
xchg
arpl
push
test
fwait
adc
scas
aam
stos
call
or
sbb
rclb
hlt
imul
call
lea
and
std
push
mov
mov
add
daa
mov
cmpb
dec
loope
mov
repnz
and
jns
sub
mov
and
inc
icebp
pop
in
add
mov
ret
lret
je
rclb
inc
scas
lret
scas
aad
mov
std
shrb
push
jmp
or
cmp
hlt
fwait
rcrb
leave
xor
jge
jo
mov
in
mov
cmpsb
inc
add
addr16
cmp
jl
mov
fistpl
adc
hlt
addl
test
pusha
icebp
dec
inc
sub
xchg
sbb
xchg
setnp
mov
cli
inc
fisttpl
idivl
mov
pop
jnp
mov
cmp
out
push
out
rcrl
aas
ja
mov
push
imulb
mov
scas
mov
or
sub
call
xchg
adc
rcr
cmpsb
hlt
xchg
push
fdivs
pop
sbb
bound
mov
pop
dec
fistl
popf
xchg
sahf
stc
in
mov
cli
test
push
ss
shlb
dec
ret
test
jge
sub
es
add
sub
sbb
sub
dec
or
daa
fs
rcll
cmp
test
push
xchg
mov
jmp
fstpt
movb
arpl
test
insb
ja
gs
enter
push
mov
popa
add
pop
call
mov
or
pop
adc
inc
cwtl
loope
and
cwtl
fldl2e
shr
jo
iret
and
imul
testb
iret
dec
out
movsb
fs
jne
xchg
sbbb
cld
out
jno
gs
in
jnp
addr16
nop
adc
addb
iret
stos
adc
sub
fwait
call
clc
ficoml
inc
cmp
mov
pop
add
jmp
mov
fsubs
sub
xchg
jno
dec
repz
call
fsts
adc
xor
or
lods
mov
jmp
push
cmpsb
cwtl
dec
mov
mov
sub
adc
movsb
cmp
mov
xchg
loopne,pn
shlb
movsb
test
xlat
add
jecxz
imul
lret
out
jns
shrb
lods
arpl
xchg
movsb
pop
es
push
sub
out
mov
shll
rorb
xor
push
jecxz
lock
mov
push
lahf
dec
add
adc
adc
leave
dec
outsb
repz
out
js
pop
cmp
cmp
mov
test
sub
orl
sub
pop
ljmp
cmp
sub
addr16
pop
out
stos
xchg
or
mov
shll
push
out
add
in
sbb
sahf
pop
sbb
or
aas
ret
xchg
std
push
popf
stc
and
loopne
ljmp
cmp
gs
je
dec
mov
push
adc
or
movq
jl
mov
out
cmp
stc
lcall
pop
cmpsb
or
mov
loope
or
jbe
adc
cmc
pop
sbb
pop
iret
cmp
jmp
cmp
sbb
xorl
aam
jne
push
xor
test
mov
in
pop
mov
sub
jp
in
stc
es
sbb
adc
xor
mov
loop
add
sbb
into
les
and
call
pop
push
insl
sbb
mov
daa
lahf
stos
adc
xchg
xchg
ds
mov
repz
rcll
and
das
inc
mov
mov
cmp
sbb
cvtps2pi
outsb
ret
aam
push
out
jle
out
jb
jae
cwtl
mov
xchg
push
ret
dec
or
int
xchg
dec
or
dec
iret
pop
push
fldenv
push
outsl
pop
sub
or
ja
sti
and
dec
test
mov
cwtl
sbbb
pop
cmp
mov
nop
pop
push
cmpsb
sbb
add
inc
dec
mov
stos
add
je
and
rorb
xchg
pop
shlb
int
or
or
sub
push
and
mov
loopne
add
push
enter
or
push
push
and
xchg
pop
xchg
out
cmp
data16
shrb
push
push
ss
pop
mov
cmc
cmc
xchg
add
inc
mov
into
mov
cmp
sti
adc
dec
sub
out
xor
imul
mov
push
in
hlt
int3
pop
fsts
test
adcl
jle
cmc
dec
lret
pushf
into
bound
les
xor
loopne
mov
pop
dec
cmp
xchg
int
sarb
das
in
lods
dec
mov
out
imul
lds
mov
mov
mov
arpl
stos
gs
out
in
jnp
scas
test
outsb
cli
cltd
mov
cmp
mov
in
pop
dec
xor
push
js
rorb
cmpsl
add
scas
mov
sbb
arpl
dec
pop
inc
js
loope
jo
sbb
fildl
and
jmp
popa
addb
lods
jo
cmp
xchg
pop
adc
mov
test
xor
enter
lret
add
jae
les
in
mov
test
xor
jmp
mov
lcall
sbb
or
jb
cs
cmp
mov
repnz
dec
add
or
xchg
js
gs
xchg
stos
out
movsb
test
xchg
cmc
jne
xchg
addr16
sbb
sbb
sub
pop
ret
push
faddl
ret
repz
data16
jb
pushf
in
mov
stos
add
sbb
rcr
fcomp
mov
filds
int
mul
dec
sbb
nop
jge
sub
mov
mov
mov
xor
inc
scas
sti
sbbl
push
pop
adc
dec
mov
cld
imul
shll
xlat
fsubrs
push
imul
adc
and
fistps
bound
xchg
mov
jae
mov
popa
xchg
enter
jge
jns
fistpl
xchg
or
cmpsb
insl
push
add
add
jecxz
mov
add
pop
jno
cwtl
shll
movsb
inc
inc
add
das
pop
sahf
pushf
test
ds
es
xchg
mov
cli
cmp
fdivl
jl
xchg
xchg
jbe
aad
pop
push
ja
fs
loop
cwtl
les
stos
jl
cmc
jp
fisubrs
insb
pop
push
movsb
add
ss
jno
orl
cmpsb
adc
pop
pop
std
push
and
das
mov
or
inc
cmpsl
gs
ret
jle
sub
push
pop
lods
int3
xor
sub
jbe
add
test
jle
loope
rolb
mov
or
jns
cld
cwtl
xor
mov
jmp
mov
shl
cmpsb
xlat
xchg
or
test
popa
push
adc
and
jae
insl
and
loope
jmp
loopne
js
push
lock
sub
push
xabort
push
sbb
sub
lods
and
add
fwait
cwtl
dec
dec
pop
xchg
xor
int
loop
push
sbb
movsl
adc
jg
lods
call
ret
out
and
sbb
dec
in
pop
mov
cmp
cmpsl
lea
fsubr
mov
add
mov
jecxz
fbld
cmp
push
scas
mov
mov
sahf
icebp
sbb
push
mov
mov
cmc
cwtl
xor
jmp
ss
or
xchg
add
outsl
mov
mulb
cmp
push
test
stos
xor
xlat
jae
sub
pushf
and
dec
je
ja
pop
aam
outsb
or
xor
xor
mov
popf
pop
int
xchg
adc
rcrb
mov
js
jne
cmpsl
setns
stc
and
adc
xor
adc
hlt
enter
lahf
fwait
add
push
inc
adc
mov
lret
xchg
mov
fildl
xchg
push
das
xor
lock
aas
xchg
xor
cmp
sbb
fs
cld
pop
sbb
xor
ljmp
mov
and
inc
sbbb
lret
ret
inc
mov
push
lods
jo
test
mov
mov
mov
daa
or
mov
sahf
xchg
popf
sbb
sub
aaa
leave
out
ds
and
jp
xor
jp
jbe
inc
scas
mov
fstpl
add
adc
aaa
mov
mov
mov
ret
lret
movsb
cmp
jg
sti
sub
push
popf
outsb
shrb
cmp
cmpsl
and
mov
xchg
mov
mov
iret
inc
repz
repz
sub
inc
popf
in
lahf
jmp
push
mov
pop
aam
inc
ret
scas
out
push
sbb
movsl
mov
es
div
pop
mov
adc
push
sbb
xor
pop
ror
xchg
or
cltd
pop
sub
push
mov
cmp
aaa
adc
or
rol
lahf
gs
add
popf
lret
pop
inc
mov
mov
or
jg
add
fists
cmp
fbld
jns
dec
call
aam
xor
xor
mov
pop
jb
push
pop
jbe
iret
xor
cltd
jae
or
lahf
mov
xchg
dec
jnp
test
mov
gs
push
loope
sub
ds
cmp
mov
cmp
out
cmc
cli
fwait
pop
int3
shl
lock
push
movsb
insl
inc
imul
xor
pop
daa
mov
dec
fisubl
xor
ja
test
mov
dec
out
mov
std
mov
lahf
fmull
clc
stc
sub
daa
into
fidivrl
push
outsb
cmpb
hlt
out
xchg
push
push
out
or
rclb
mov
mov
cmp
xchg
jp
sub
inc
mov
cwtl
in
cmp
xchg
mov
iret
stos
aaa
push
and
cmpsl
and
mov
cmp
xlat
cmp
jne
pop
loope
pop
jo
push
stos
cld
mov
pop
jo
mov
out
sub
mov
mov
and
cmp
aad
dec
push
sbb
fildl
cmp
out
sub
pop
int3
lret
inc
cmp
fdivrp
imul
rcr
push
loope
pushf
jo
fcom
movsl
enter
cmc
stos
push
push
pop
repnz
inc
mov
loop
shlb
ljmp
outsb
ret
cli
int3
mov
mov
loop
or
aad
xor
stos
lret
jmpw
mov
inc
xchg
jns
stos
jecxz
pop
sahf
sub
sbb
dec
mov
shrb
shll
lea
cmp
mov
shll
lret
out
cltd
jae
xchg
jb
and
sarb
test
mov
addr16
inc
inc
cmp
ds
jnp
out
xor
jns
inc
mov
pop
mov
pop
cmp
stos
dec
imul
jmp
mov
hlt
push
xchg
pop
pop
pop
jp
and
mov
mov
jecxz
mov
mov
stc
inc
ljmp
jne
addps
mov
fisttpll
roll
xchg
sub
hlt
test
mov
out
aad
leave
mov
imul
cli
mov
push
sbb
lret
lods
pop
ret
mov
pop
xchg
sub
outsb
mov
xlat
test
mov
ljmp
cmp
imul
mov
cmp
cmp
jl
xor
sub
sbb
stos
scas
cmp
pop
fisttps
inc
test
lods
andb
fwait
sbb
mov
cmpb
mov
out
cmp
adc
out
xor
xor
js
inc
ja
insl
or
test
scas
add
push
xchg
mov
mov
cwtl
lea
jo
je
pop
int
lahf
adc
mov
stos
fnstsw
subb
repnz
pmulhuw
mov
out
xchg
push
jmp
mov
loope
and
loope
adc
sub
arpl
mov
xchg
and
or
push
pop
aas
andb
adc
dec
jg
sub
filds
push
hlt
sub
jo
movsl
test
adc
notl
jle
shrl
mov
jne
pop
xorb
cwtl
pop
hlt
xchg
mov
cmc
xchg
sub
or
leave
inc
sbb
mov
stc
ret
add
add
loope
fsubr
data16
cmp
lcall
sbb
aad
push
pop
cmp
or
mov
mov
sub
mov
sbb
jl
mov
dec
mov
sbbb
movsl
lea
ret
xchg
mov
sbb
int
outsl
rorb
repz
lods
scas
and
pushf
std
ss
lock
pop
sti
mov
std
out
fstl
sbb
popf
sub
mov
bound
xor
and
pop
xor
mov
nop
jmp
das
xchg
dec
jg
xlat
cmc
add
icebp
sbb
mov
ficomps
inc
cld
and
lahf
mov
and
mov
push
aaa
lock
loope
hlt
pusha
xor
sbb
jno
sub
mov
inc
pop
shrb
outsl
mov
cltd
cmp
sahf
cmp
ficoms
push
daa
mov
jb
aas
add
shlb
ficomps
xor
xor
rcl
test
jno
sbb
insb
mov
sub
shlb
aas
lea
aam
rcrl
aaa
cmpsl
xchg
jl
fildl
insl
das
lock
inc
les
adc
add
cld
inc
pusha
je
jecxz
pop
mov
and
cmpb
mov
mov
test
cmp
cmp
lock
or
adc
int
iret
orl
rcrb
dec
mov
lret
imulb
pop
cld
sbb
mov
fcmove
lret
cmpsb
adc
add
jae
adc
pop
inc
pop
fs
bound
add
pusha
lret
lret
or
push
ljmp
mov
insb
mov
or
dec
cmpb
loop
insb
int
fwait
cmp
in
movsb
in
loop
jbe
ret
dec
fidivs
mov
mov
or
jp
or
fildll
sbb
pop
xor
push
outsl
pop
loopne
out
or
pop
dec
mov
cld
push
je
popa
push
pop
adc
xchg
jmp
enter
pop
dec
repnz
dec
fwait
cmc
test
pop
fs
cmp
repnz
and
adc
push
push
or
jecxz
push
out
add
and
lock
popa
lret
adc
fs
push
push
cmp
mov
pop
shrb
sub
adc
add
mov
inc
hlt
inc
xor
and
pop
mov
rclb
and
popf
rorb
fcmovb
cltd
test
pop
lock
inc
movsl
push
mov
icebp
cmc
mov
or
inc
out
call
out
mov
pusha
lahf
fwait
mov
mov
push
and
adc
pop
sbb
sti
mov
sahf
dec
addr16
pop
cmp
pop
push
cld
fs
ljmp
jns,pn
aad
jno
leave
xchg
adc
adc
lahf
mov
xor
in
mov
shlb
cmp
es
data16
loop
mov
mov
xlat
in
inc
mov
xor
xchg
sbbb
call
or
push
mov
push
aaa
leave
xchg
adc
push
gs
mov
or
lods
mov
movsl
lea
and
xchg
xchg
cwtl
jecxz
stos
lea
xor
lcall
xor
push
and
mov
jle
insl
mov
shll
mov
mov
lods
pop
sub
rorb
lea
dec
test
shrb
mov
fisubs
fldenv
cmp
ds
aam
ljmp
hlt
xchg
mov
enter
push
lret
sbb
pop
xorl
lret
mov
adc
push
mov
pop
fsts
lahf
xchg
mov
inc
shl
in
and
test
je
add
jo
in
jnp
add
arpl
sub
pop
pop
fnsave
mov
scas
daa
repz
dec
push
xchg
cmp
dec
pop
adc
js
movsl
rcr
fisubl
and
mov
sub
sbb
inc
nop
xchg
test
fwait
xchg
pop
mov
xchg
cli
jge
inc
jno
mov
insb
cld
adc
push
inc
dec
inc
mov
inc
sub
lret
scas
enter
mov
adcb
enter
sub
push
pop
or
mov
and
mov
push
and
call
cmp
jmp
into
jae
imul
sub
hlt
lods
adc
out
dec
and
aam
inc
andb
cmp
jg
fdivs
jnp
and
mov
icebp
xor
jl
push
test
inc
fxch
sbb
push
aam
and
xor
xlat
jbe
shlb
push
xor
out
jno
sbb
mov
cwtl
pop
testl
in
aam
mov
xchg
sub
insl
int3
enter
insl
fidivrl
rorb
push
lret
jae
inc
or
mov
adc
iret
mov
sti
movsb
adc
out
mov
sub
je
data16
das
adcl
pop
push
imul
inc
or
mov
and
clc
push
les
cltd
add
sub
cmp
mov
fwait
rorl
hlt
mov
add
pusha
sub
or
pop
aam
enter
sub
fs
pop
mov
inc
test
and
repnz
push
mov
call
imul
dec
mov
loope
lcall
shr
test
xor
cs
push
cmp
jb
cmpsb
enter
lods
xor
fsub
adc
push
ficompl
sarb
cmp
outsl
xor
sbb
jne
push
mov
xlat
and
add
lahf
lcall
stc
loop
jg
fcmovb
in
xchg
test
fstpt
pop
cmp
push
mov
mov
mov
out
cmpsb
mov
pop
dec
mov
xchg
imul
idiv
pop
adc
xchg
inc
aas
les
fwait
lret
xchg
subb
mov
fucom
adc
sub
dec
jg
fwait
cmp
pop
jb
mov
push
and
les
sub
mov
leave
adc
adc
mov
adc
js
push
cmp
andb
mov
mov
lret
sbb
fs
mov
jbe
push
and
add
push
and
dec
inc
nop
ret
pop
adc
mov
les
ret
cli
push
stos
imul
xchg
jl
mov
mov
mov
std
dec
pop
loopne
in
mov
adc
loopne
and
test
adc
xchg
mov
inc
xor
dec
lret
xor
test
jle
xor
nop
mov
sub
push
sahf
mov
lods
inc
sahf
mov
repz
in
jp
rcr
add
sub
mov
cmp
push
out
mov
add
cwtl
pop
ud2
scas
jae
xchg
add
pop
add
or
cltd
inc
xchg
push
lret
subb
mov
jo
xchg
push
mov
lds
jno
sbb
aad
and
out
das
rolb
xor
andl
push
push
lcall
cmp
jecxz
divb
test
mov
push
out
lds
popa
je
aad
fwait
push
inc
sbbl
fsubl
shl
and
mov
dec
sarl
sahf
inc
aaa
dec
ja
ret
in
fmull
clc
sub
push
stos
imul
sub
pop
pop
cwtl
iret
dec
push
shrl
pop
mov
aas
sub
loope
mulb
ja
cli
inc
cmp
cmp
mov
into
dec
pandn
push
pop
pop
mov
sub
test
mov
mov
lret
sub
push
add
lock
int3
mov
sbb
jle
dec
cmp
test
imul
dec
hlt
pop
jmp
add
and
xchg
mov
jnp
xor
scas
aas
cmp
mov
inc
xchg
push
mov
stos
mov
xor
mov
sub
mov
rcll
dec
mov
xchg
test
xchg
adc
test
mov
mov
cmp
movsl
out
dec
insl
sbbl
pop
pop
clc
ret
test
jecxz
lods
fidivrs
bound
lock
pop
jb
cmc
inc
cmp
insl
outsl
or
fidivs
loop
aad
jne
imul
insl
mov
pop
push
mov
adc
lcall
xchg
mov
subb
je
add
negb
test
fcomps
int
stc
mov
pop
add
shrb
sbb
mov
cltd
out
loope
cli
jle
shlb
ss
jge
fwait
es
xor
cmc
mov
adc
sub
push
adc
mov
push
xchg
or
mov
jae
jnp
scas
je
cmp
and
push
aas
movsb
in
jae
fcoml
add
add
jmp
fdivrl
inc
dec
or
pop
mov
lds
cmp
xlat
inc
pop
or
add
inc
test
or
cmp
mov
stc
mov
out
mov
and
ljmp
es
enter
mov
add
push
insl
dec
lahf
or
stos
push
or
jle
cmp
clc
pop
inc
ja
mov
dec
ret
jl
rorb
mull
xchg
loope
pop
adc
popa
stc
adc
mov
adc
jbe
cwtl
aad
xchg
into
or
mov
call
dec
push
mov
xor
movsb
lret
insl
mov
cmpsb
sbb
jns
mov
sub
mov
mov
fcoms
or
dec
push
psubb
sbb
pop
mov
ret
ret
inc
pop
push
jecxz
mov
lock
xchg
push
shl
es
inc
sub
fsubrl
aaa
and
sahf
add
and
cmc
and
inc
pop
shlb
paddb
add
jns
adc
cwtl
cmc
jbe
scas
lcall
sub
out
push
jns
or
cmpsb
out
inc
divb
push
push
shlb
and
icebp
mov
gs
xor
les
sbb
loop
lret
sbb
xor
xlat
imul
xor
data16
sub
shl
push
dec
xor
or
push
add
cmpl
fadd
and
je
insl
pop
int3
hlt
bound
xchg
or
inc
mov
into
xlat
add
ss
adc
ret
add
and
data16
xchg
aaa
int3
aad
imul
sub
push
or
adc
in
int3
push
out
incb
pop
dec
fsubrs
je
daa
aas
or
fldt
jo
int3
pushf
cmp
int3
xor
push
ret
mov
pop
mov
jg
add
mov
push
mov
in
mov
lcall
mov
adc
sub
outsb
xor
cld
mov
mov
sbb
aaa
mov
sbb
ja
xchg
mov
data16
das
dec
xchg
adc
cmc
gs
js
xchg
mov
subps
jle
hlt
mov
and
push
xor
out
addr16
pop
add
xor
cmp
rcrl
mov
lret
fsubrp
int
cmp
fdivrl
inc
sbb
and
and
add
push
imul
ja
or
dec
popf
dec
push
push
aas
mov
stc
jl
movsl
cli
mov
add
and
rclb
cmp
dec
je
push
sbb
clc
sbb
xor
insb
adc
mov
std
pop
pop
clc
jae
cli
pop
cld
filds
and
pop
jnp
movsb
daa
imul
shll
cmp
sbb
sbb
and
jle
ds
pushf
pop
and
jnp
mov
in
pop
popf
or
iret
js
int
sub
xchg
jle
pop
in
repnz
lret
imul
xchg
fcomps
nop
or
or
into
arpl
dec
nop
sbb
test
mov
dec
aam
cmp
jne
mov
pusha
cmpsb
mov
lock
jo
popf
or
cld
popf
or
inc
dec
push
or
test
ret
pop
dec
xor
ret
push
mov
sbbl
adc
xorb
mov
sbb
movsl
jae
out
lods
incb
pop
int
push
js
cmp
adc
sub
mov
xor
mov
or
ljmp
xor
push
pop
mov
mov
xchg
and
std
mov
jno
mov
cmp
jge
push
mov
aam
scas
nop
outsl
mov
out
sbb
xor
xchg
add
repnz
mov
popa
cmp
or
sub
cmc
adc
push
test
test
enter
or
ret
xor
jmp
ror
fs
xchg
jnp
mov
inc
push
jae
dec
sbb
xabort
out
mov
xor
cmp
test
roll
cmpsl
jecxz
pop
mov
fwait
pushw
pusha
repz
xor
lods
push
jnp
mov
loop
push
repz
ret
sub
inc
mov
or
popf
add
inc
add
mov
jg
out
mov
loope
add
sbb
and
jp
adc
int
sbb
push
shrb
jg
xlat
jecxz
loopne
push
pop
inc
xor
rcrl
loope
test
stc
xchg
and
cli
inc
push
out
or
in
sbb
lea
cmpsb
or
sbb
andl
arpl
popa
cli
call
scas
fs
dec
rorl
inc
leave
cmp
cwtl
jae
lcall
ja
sub
out
loop
cmp
inc
push
movsb
sbbb
and
jmp
das
int
mov
xchg
and
rcl
pop
inc
mov
xor
or
or
rcll
ret
stos
push
sub
cmp
mov
lret
adc
das
jmp
pop
inc
adcl
sbb
lcall
mov
iret
mov
js
xor
push
jns
lea
lcall
mov
ret
mov
mov
cwtl
or
ja
and
pop
insl
cmp
adc
popa
aad
xor
add
mov
pusha
xlat
fucom
pop
hlt
xchg
nop
push
je
in
jmp
mov
gs
lret
xchg
adc
leave
std
ja
scas
push
cld
or
fidivs
pop
mov
aad
sub
add
cmp
push
push
mov
mov
adc
fidivs
loope
mov
xor
fwait
push
or
insl
insb
out
add
ss
fdivs
in
pop
addr16
in
xchg
lods
adc
mov
rolb
lret
xor
xor
sarl
inc
icebp
loopne
mov
filds
jecxz
inc
lret
jmp
pop
or
adc
loope
or
jne
cmp
divb
jno
or
mov
rcrb
cltd
fisttps
xlat
mov
dec
int3
pop
std
sub
iret
xor
ss
push
in
and
nop
inc
jns
cld
adc
leave
outsl
mov
cli
daa
int3
lret
adcl
hlt
or
mov
mov
add
inc
aaa
fists
in
insl
xchg
pop
xchg
adcl
push
inc
add
xor
out
jl
push
push
adc
push
jbe
xchg
stc
out
jne
xor
mov
cwtl
icebp
sbb
loopne
inc
jno
push
imul
dec
stos
xor
xchg
inc
or
push
cmp
cmp
lock
push
outsb
mov
mov
cltd
push
xor
xchg
testb
sarl
adc
lret
arpl
orb
pop
xor
cmp
mov
jae
push
pusha
movsb
test
sbb
das
inc
aam
xor
mov
cmpsb
daa
out
stos
sub
pop
fbstp
cld
inc
notb
xor
jmp
lods
into
mov
enter
mov
loop
cmp
aas
and
jb
jecxz
pusha
sbb
sub
cmpsb
repnz
or
lcall
in
cmpsb
call
out
mov
pop
and
lret
test
fs
sub
fcoms
stos
test
push
loope,pt
leave
rcrb
and
xor
nop
mov
jno
mov
lcall
rcrl
fisttpl
fidivrl
gs
scas
imul
sbbl
movsl
std
xchg
inc
cs
int3
mov
xor
add
xchg
popf
aam
mov
cmp
divb
int3
sbb
lock
std
jae
sbb
or
inc
stos
scas
xor
sub
sub
xlat
inc
jb
pusha
adc
or
xchg
sub
add
mov
out
arpl
lods
xlat
fs
popf
out
xchg
and
mov
mov
scas
push
sahf
or
cmp
ret
test
jno
in
jb
in
jo
inc
and
leave
xchg
adc
clc
mov
or
pop
cmpsl
push
inc
mov
adc
mov
fbld
cmp
pop
jge
sbb
stc
or
stos
in
adc
jno
sub
mov
dec
inc
sub
fildll
xchg
shlb
xchg
lods
out
data16
incl
sarl
and
fcomip
dec
jbe
xor
fildl
rcrl
leave
mov
push
notl
inc
sub
cmp
mov
stc
or
repz
cld
cmp
add
test
mov
loopne
cmp
out
jo
aas
nop
inc
and
mov
daa
icebp
in
sub
adc
ret
out
lea
xor
dec
xchg
ss
mov
sti
orl
bound
in
stc
ja
jae
les
push
call
fidivs
in
jl
cld
fcoml
sub
jb
mov
insb
test
icebp
mov
mov
jno
xchg
testl
test
test
xorl
je
icebp
xchg
jmp
xchg
sbb
push
or
ja
cmp
mov
mov
mov
cmp
sahf
sub
fstp
pop
iret
outsb
mov
and
sbb
aam
or
testl
xor
insb
adc
cmp
ss
push
xchg
adc
and
xor
pop
rorl
or
ret
sti
and
lcall
das
lock
ret
pop
mov
loope
into
push
shlb
scas
es
push
pop
jbe
jns
cli
cmp
sbb
or
std
cmp
dec
pushf
movsl
cmpsb
sbb
fs
sahf
adc
or
xchg
sub
lcall
inc
xchg
out
sub
push
pop
pop
mov
rcrl
enter
jns
ss
lods
xor
dec
into
inc
add
or
mov
jno
mov
or
testb
bound
fnstsw
gs
pop
mov
ret
int3
or
mov
dec
pop
or
jge
rcrb
ljmp
push
inc
dec
xchg
loope
cmp
adc
cmp
in
xchg
jl
add
jmp
fisttpl
xor
mov
lods
out
lea
jo
mov
insb
xor
pop
movsb
mov
aam
mov
in
filds
xor
jbe
or
arpl
jns
divb
imul
into
test
loope
sub
mov
pop
fmul
repz
test
pushf
add
ret
stc
xchg
outsl
add
cltd
lock
in
aam
inc
out
ja
push
jecxz
aas
and
icebp
int3
xchg
dec
movsb
cmp
cvtpi2ps
pop
enter
movsb
cmc
mov
in
mov
sub
pusha
cld
push
shrl
push
enter
mov
push
repnz
inc
lods
cmc
in
lret
aas
imul
popa
push
adc
jb
int
fidivrs
push
xor
pusha
push
std
mov
lret
push
stc
mov
pop
test
add
outsb
mov
cli
cmp
inc
dec
dec
and
xchg
push
cmp
fwait
mov
fidivl
jge
rcrb
fmuls
in
mov
mov
mov
cmp
aaa
jmp
push
ljmp
in
repnz
stc
xor
push
cmp
add
add
ret
test
orb
adc
imul
movsl
ret
inc
cmp
movsl
mov
jg
mov
pop
loopne
ret
ret
sbb
add
xchg
imul
out
inc
insb
js
and
testl
sbb
scas
xchg
pop
push
xchg
icebp
and
in
push
stc
add
fidivrs
jl
mull
cmpsb
and
push
jnp
add
hlt
pop
or
jecxz
call
adc
pushf
push
imul
push
frstor
or
sub
and
imul
adc
jo
orl
push
ja
mov
out
into
test
das
mov
xchg
lahf
inc
fcoms
outsl
rol
fs
out
fidivl
mov
push
add
mov
mov
ret
push
int
mov
jae
inc
arpl
lret
pop
loope
or
push
xchg
push
out
iret
imul
xor
fs
ja
aam
push
cmp
inc
ss
xchg
xor
jle
mov
sub
es
mov
std
stos
pop
popa
mov
inc
xor
neg
sahf
or
movsb
jp
push
adc
pop
incb
xor
mov
xor
fsin
jl
fcmovnu
cmp
or
jb
and
iret
mov
shl
rorl
je
stos
bound
cmpsl
aad
add
xchg
inc
fcoml
jo
or
testb
shl
testl
mov
dec
fdiv
scas
sahf
mov
test
push
in
pop
fadd
jno
lods
cltd
mov
add
jl
mov
ljmp
dec
ds
mov
sahf
mov
aam
cmpsb
clc
jae
shrb
or
jno
subl
lock
out
fidivl
call
push
or
sub
jne
add
or
jb
mov
pop
andl
add
pushl
lretw
sub
jp
call
cmp
cmpsb
popf
addr16
mov
aad
mov
xor
push
mov
push
and
jno
adc
jl
sti
or
mov
and
push
cwtl
mov
dec
mov
cmp
jge
sbb
arpl
mov
xchg
or
push
inc
dec
inc
push
pop
fistps
jo
mov
pop
out
sbb
je
cwtl
dec
sub
xchg
jno,pn
pop
icebp
push
sbb
mov
fst
dec
dec
or
jbe
cs
aaa
jecxz
cmc
aam
mov
fldl
push
jle
repnz
dec
lret
pop
cmp
js
mov
je
stc
faddl
daa
mov
pop
sar
insb
mov
sbb
fcoms
xor
inc
dec
cmp
fisubrs
mov
push
jecxz
in
xor
aad
mul
fsubrl
cmp
or
imul
lds
fistpl
hlt
push
loope
dec
sub
aaa
mov
jl
mov
cmpsb
mov
cmp
leave
fwait
adc
shll
test
imul
mov
mov
mov
adc
pop
pop
cmc
mov
cmp
lods
fidivs
out
ja
xor
pop
les
mov
lcall
inc
ss
dec
xlat
ret
leave
pop
xchg
les
scas
sti
imul
add
shlb
outsb
and
cmp
int
inc
jge
ja
push
idiv
xor
int3
push
push
jnp
ret
dec
lcall
mov
orl
inc
dec
inc
sahf
testl
lahf
inc
movsl
jecxz
push
mov
jg
insb
in
mov
cmpsl
and
ds
pop
out
lret
pop
pushf
ljmp
je
push
mov
lahf
cmovp
inc
jl
into
mov
and
cld
aam
test
sbbl
sub
insb
xchg
ret
out
dec
cwtl
pushl
adc
data16
xchg
mov
enter
pushf
das
cmpsl
in
xchg
jno
pop
and
lret
stos
scas
pop
aam
mov
or
and
pop
mov
aam
xlat
pop
and
mov
cmp
push
jnp
in
sub
and
xor
mov
lds
cld
add
js
dec
jbe
pop
jnp
jl
cmp
gs
mov
or
cwtl
xchg
shl
add
xchg
mov
push
stos
sbb
push
pop
jle
inc
dec
fisubl
stc
sbb
repnz
jp
std
pusha
mov
movsb
subb
add
rcrb
lock
imul
dec
loopne
rorl
xchg
mov
outsb
pop
out
insb
test
and
out
or
jmp
adc
arpl
shrb
leave
mov
jno
shlb
and
mov
xchg
sahf
leave
int
fistpll
push
arpl
dec
movsl
dec
adc
jns
cmpxchg
sbb
in
xor
ljmp
pop
sub
lret
jl
jo
rorl
movsl
push
or
or
mov
mov
sub
xor
dec
xor
push
xor
mov
mov
lcall
lcall
ds
inc
cmp
push
jne
xor
cmp
pop
and
lods
cmp
jl
rorb
aad
movsb
loop
clc
sbb
xchg
jmp
adc
dec
inc
lahf
frstor
mov
enter
and
xor
into
fsubs
sarl
xchg
jecxz
test
mov
scas
jbe
cmp
push
bound
out
mov
enter
push
test
pop
stos
mov
sbb
cld
mov
or
xchg
pop
mov
std
insl
pop
aam
xlat
in
lods
testl
fs
dec
pop
divl
and
mov
cmp
pop
pusha
ja
ss
je
xchg
pusha
cld
push
push
dec
add
daa
jp
pop
sbb
mov
push
arpl
cmp
ror
sbb
add
xor
shl
add
insb
xlat
lds
fistpll
test
insb
sti
pop
imul
ss
fcmovnu
jl
fcmovu
mov
inc
cmpsb
lea
sbb
inc
jl
sub
clc
jle
sub
in
fisubl
mov
out
pop
ja
fwait
int3
pop
hlt
mov
adc
rclb
and
sbb
shrb
decl
sub
pushf
ficoms
icebp
xchg
hlt
push
repnz
sti
jne
pushf
loopne
mov
pop
mov
or
loop
rol
rcrb
pop
adc
push
and
addr16
into
xchg
and
mov
in
mov
dec
sbb
add
fwait
sub
cli
inc
pop
cmpsb
xchg
xchg
pop
jle
jecxz
or
mov
cmp
or
out
lahf
add
mov
aas
lods
test
pop
movsl
adc
aad
fsts
and
popf
loope
mulb
adc
sbb
stos
les
ud0
das
scas
push
rolb
into
mov
stc
jnp
sbb
stos
push
jmp
loope
loope
lahf
ljmp
movsl
pusha
xor
pop
xor
aaa
imul
cmpsb
push
mov
loope
leave
sub
sub
lods
xchg
inc
dec
fistpll
cmpsl
jnp
jl
ja
mov
movb
hlt
in
xor
inc
inc
push
push
or
jne
mov
orl
inc
inc
sub
xor
jnp
xlat
enter
adc
xor
mov
mov
adc
xorl
xlat
pcmpgtw
repz
popf
cmp
lahf
dec
test
icebp
cli
outsb
leave
xlat
jb
sub
jl
adc
fbstp
mov
sbb
lahf
xchg
cwtl
sbb
xchg
ret
mov
scas
dec
adc
dec
test
lcall
shl
adc
cld
xor
cmp
pop
cmp
or
mov
jbe
mov
pushf
fcoms
repnz
or
rcll
scas
nop
mul
jg
adc
icebp
sub
mov
sbb
mov
aaa
push
ljmp
outsb
pop
outsl
jp
pop
aaa
js
fidivrl
jnp
mov
pop
rolb
stc
xchg
mov
lret
xor
filds
iret
pop
xchg
push
inc
imul
fisttpll
jge
pusha
ffreep
fcomip
rol
shrl
or
lds
cmp
push
test
sbb
cmp
movsb
loop
loopne
mov
sbb
imul
mov
ds
sbb
jle
movsl
mov
scas
leave
mov
arpl
xor
or
ss
loope
and
sbb
push
insl
lea
xchg
pop
or
insb
cmp
jne
ljmp
imul
xor
fs
mov
cmp
js
js
pusha
xchg
or
add
aam
cmpb
lret
in
lods
and
lcall
mov
stos
ds
pop
js
dec
aas
cmp
and
inc
sbb
out
popa
jo
repz
push
cli
test
fwait
loop
lahf
dec
lds
dec
mov
nop
jl
jbe
jo
cmpb
insb
inc
out
cmp
shll
or
mov
adc
adcl
hlt
push
mov
lahf
inc
xor
mov
xchg
in
xor
sarl
repz
jmp
les
or
mov
xorl
aaa
lods
aas
cmp
push
inc
mov
mov
xchg
dec
jmp
push
das
test
pop
mov
mov
adc
and
mov
popa
movl
sbb
lea
test
pusha
nop
xor
dec
stos
mov
dec
insl
das
bound
mov
and
xor
orb
rol
icebp
pop
shlb
sbb
pop
shll
mov
dec
adc
cwtl
mov
pop
mov
inc
dec
sbb
cli
leave
aam
enter
and
jecxz
adc
movsb
ret
popf
and
pop
or
mov
sti
movsb
in
dec
xor
sti
pusha
out
test
jnp
push
push
insl
inc
xor
cmp
aad
mov
xchg
insl
lcall
call
scas
std
mov
mov
out
testb
add
mov
cli
lds
dec
test
sbb
daa
nop
dec
aad
inc
iret
iret
fwait
dec
dec
sbb
call
frstor
ds
push
pop
add
sbb
hlt
xchg
cmpl
cmp
call
push
inc
in
imul
test
cmp
data16
mov
jno
fsubrl
cmpsl
scas
pop
lock
pop
pop
lds
mov
aaa
jb
test
or
ret
jbe
fdivp
lahf
or
fistpll
mov
into
or
scas
push
data16
lods
test
punpckldq
inc
xor
es
movsl
jecxz
xchg
shl
add
jl
cmp
sbb
lcall
pop
test
push
nop
jecxz
dec
or
fldcw
sbb
adc
inc
movsb
dec
hlt
arpl
movsl
ret
leave
sbb
mov
or
nop
sti
loope
movsl
sti
gs
fbstp
mov
jnp
xlat
cmp
sbb
into
xchg
fwait
lahf
push
cs
sbb
imul
adc
jl
repnz
in
loope
mov
push
mov
and
dec
andl
cmpsb
dec
fsubs
imul
out
add
jmp
popa
shl
cltd
test
inc
add
adc
dec
sarb
or
push
cmp
dec
pushf
daa
movsl
stos
push
stos
lcall
lea
mov
mov
add
pop
std
cmpb
imul
shr
jge
pop
fists
cmpsb
adc
dec
jb
notl
dec
jmpw
fmul
push
and
mov
outsb
negb
test
jnp
test
mov
or
or
adc
pop
int
push
movsb
mov
mov
sbbl
xchg
xlat
movsl
in
cmp
jle
dec
mov
dec
jl
cmp
pop
addr16
cmp
pushf
pushl
pop
dec
test
dec
in
jmp
jl
in
iret
xor
xchg
into
mov
jmp
pop
mov
mov
mov
addb
aad
fsubl
rcll
in
pop
popa
sbb
test
add
dec
lock
xor
push
cmp
mov
cmp
mov
insl
popa
bound
jns
mov
dec
dec
and
and
test
xor
mov
adc
xchg
fstpl
push
mov
shl
sbbl
or
lock
orb
push
std
imul
sti
daa
pop
nop
cltd
dec
lahf
or
inc
mov
out
xchg
int3
jbe
rclb
inc
adc
mov
in
fldt
ds
fsub
cltd
and
ljmp
sbb
xchg
aam
xchg
arpl
pop
xchg
repz
pusha
push
fwait
push
ljmp
fstpl
outsl
mov
dec
xchg
lcall
lds
stos
sub
mov
mov
dec
sub
sbb
ret
test
cmp
loopne
in
pop
cmpsl
adc
out
insl
daa
sub
cmp
and
cwtl
dec
mov
add
repnz
fwait
adc
cmp
xlat
stos
and
push
and
and
jmp
dec
xchg
sub
cs
out
xchg
adc
jnp
icebp
cltd
pop
push
inc
cmp
out
xor
push
and
shl
and
das
rcrb
or
xor
sub
lret
mov
cltd
sub
pop
mov
jnp
lds
add
ficoms
cmp
push
sbb
icebp
and
in
pop
dec
jne
in
cmpsl
mov
mov
push
jmp
cmpl
out
insl
adc
sbb
daa
cmc
iret
push
lcall
or
pop
sbb
mov
frstor
jmp
or
pusha
jbe
push
mov
pop
push
push
dec
mov
jae
adc
sbb
scas
mov
adc
ja
fdivrs
mov
cmp
aas
int
mov
mull
push
pushw
sbb
inc
mov
aaa
xor
ror
sbb
adc
mov
lahf
mov
xor
inc
pop
jmp
daa
cwtl
mov
push
loope
xchg
icebp
mov
mov
aas
fldln2
into
imul
ucomiss
dec
and
push
mov
mov
sahf
sbb
mov
adc
xchg
adc
cmp
xlat
stc
sbb
mov
mov
fidivrl
pushf
push
xchg
xlat
andb
mov
in
mov
pop
jns
in
sub
pop
leave
sbb
scas
jnp
push
stc
lret
and
orb
jp
lahf
or
jmp
mov
add
imul
mov
add
ja
sub
xchg
aam
leave
adc
and
outsl
adc
vpaddusb
sub
adc
inc
adc
call
outsb
sub
xchg
push
cmp
dec
fdivl
xor
add
jecxz
add
insb
jno
dec
xor
and
mov
adc
test
jb
mov
mov
cmp
add
or
loop
push
aad
push
in
pop
popf
les
cltd
rcll
test
mov
xor
arpl
mov
dec
dec
xchg
pop
pop
pop
popa
jp
shr
fildll
add
imul
mov
scas
sar
pop
sbb
jnp
loope
iret
data16
cld
sub
fdivr
adc
inc
xchg
stos
out
cltd
dec
out
lret
mov
sbb
es
mov
inc
stos
sti
rcl
pop
mov
mov
fcmovnb
sbb
icebp
into
imul
jo
sub
dec
mov
or
mov
sub
cmp
push
mov
adc
andl
sbb
int3
scas
sahf
lock
popf
fisubrl
push
movsb
add
or
push
stos
jmp
push
cltd
cvtdq2ps
enter
fwait
int3
push
mov
addr16
pusha
cmc
sbb
mov
mov
xor
adc
cltd
in
test
push
leave
xchg
or
and
fcom
outsb
insl
adc
mov
push
leave
adc
jg
jb
xor
add
inc
inc
orb
inc
add
cmpsb
mov
mov
repz
xor
xor
lods
bt
cmp
bound
jmp
mov
push
xchg
or
into
bound
xchg
div
repnz
je
sub
mov
xchg
daa
jp
mov
sarb
mov
mov
movsb
mov
xchg
and
movsl
pop
loopne
jae
cs
leave
jge
shl
outsb
mov
les
scas
mov
jp
stos
or
std
imul
jns
jno
inc
cmc
cld
push
ret
push
movsl
jnp
sbb
int3
out
xchg
jecxz
push
lods
and
pop
pop
or
cmp
lcall
nop
jno
jne
test
jne
cltd
add
jne
aas
js
test
sbb
inc
andb
ret
popl
sbb
jp
sub
sbb
xchg
push
push
loope
xchg
pop
iret
inc
cmpl
dec
sbb
fstl
shrl
test
jecxz
ret
repz
popf
orl
je
mov
dec
push
mov
arpl
xor
bound
ljmp
andb
hlt
outsb
cwtl
outsb
imul
push
cmpsb
outsb
pop
pop
aam
push
ja
jnp
inc
gs
sbb
inc
xlat
cltd
lahf
enter
rol
or
cli
imulb
and
adc
pop
ss
fisubrl
mov
dec
test
inc
jg
es
test
clc
loope
imul
mov
in
mov
add
jne
push
mov
and
inc
int
imulb
lds
aas
repnz
jnp
test
adc
jecxz
push
pop
insb
push
cltd
push
in
mov
imulb
sbb
and
std
pop
push
js
jecxz
inc
and
mov
js
cli
repnz
jl
and
inc
out
push
mov
daa
test
lcall
stc
dec
sub
icebp
pop
lret
jle
jbe
jp
leave
leave
bound
xchg
adc
fnstsw
pop
adc
sbb
je
loop
lcall
push
mov
es
cs
loopne
aam
sub
fmuls
sub
mov
test
ds
mov
movsl
out
mov
rcr
sub
mov
int3
pop
inc
xchg
enter
dec
fwait
cld
lcall
out
data16
sbb
cmp
popf
scas
push
xchg
jp
pop
ret
test
cmp
ss
fimull
xchg
popa
inc
outsb
imul
fidivl
add
xor
popf
leave
cmp
or
stos
jle
outsl
or
aad
sarb
push
xor
fisttpl
fildll
leave
sbb
and
mov
xor
shrb
inc
pop
imul
fmull
enter
jbe
jns
push
gs
rcrl
stos
daa
add
pop
jp
sbb
sarb
and
mov
pushf
mov
into
jmp
gs
cmpsb
out
int3
pushf
pushf
mov
sbb
ret
int
adc
int3
push
int3
lock
pop
jns
frstor
inc
sbb
int
xchg
jp
mov
sbb
popa
call
cmpsl
mov
aad
add
add
pop
es
jle
inc
lcall
jl
xchg
pop
mov
repz
push
mov
out
mov
mov
jnp
pop
pop
test
jns
lods
lcall
add
and
add
lret
fsubl
sub
fisttps
popf
or
mov
xchg
and
push
mov
push
imul
mov
mov
in
mov
movsl
mov
popf
andl
into
sbb
ret
orl
fwait
sbb
inc
int
mov
mov
ja
push
out
pop
ss
or
std
jl
mov
push
xchg
bts
shlb
in
popf
xor
aad
xchg
aam
in
ja
mov
push
jbe
daa
cs
dec
jecxz
aas
mov
add
fcomi
fwait
movsb
dec
xor
xor
cmpsl
out
lcall
xchg
inc
stos
jne
ret
fs
fucom
mov
cli
stc
loop
adc
and
jmp
adc
sbb
mov
repz
adc
jp
or
xor
lock
lds
or
jb
add
push
sub
xchg
repnz
test
insb
test
mov
and
arpl
inc
lret
sbb
push
loope
adc
mov
jae
pop
scas
cmc
or
jecxz
pop
xor
data16
dec
ret
mov
rcr
outsb
mov
add
cmp
dec
push
mov
cmp
ret
rorl
xor
fwait
push
push
lods
aas
add
jmp
loop
sub
sub
aam
jno
dec
add
mov
movsb
rclb
stos
push
push
sub
lea
cld
mov
iret
inc
dec
gs
test
mov
push
push
adc
cmp
jecxz
cld
decb
push
mov
jp
jne
fidivrs
dec
and
push
into
push
push
xchg
fimull
bound
push
adc
mov
les
add
jne
add
lds
imul
ret
repnz
les
mov
xchg
pushf
cmp
int
and
les
mov
leave
sbb
movl
dec
repnz
ss
sbb
dec
popl
pop
pop
xor
imul
popa
pop
out
stos
jne
mov
and
pop
cmc
arpl
mov
fldcw
outsl
mov
push
jmp
lock
into
pop
add
scas
aad
inc
mov
std
xchg
stos
fldcw
jae
aad
or
sbb
xchg
mov
jle
push
or
insb
ljmp
or
test
rcrb
sbbb
pop
je
jle
daa
jl
sbb
test
mov
dec
dec
or
xchg
fwait
sub
adc
call
jne
sbb
fs
pop
dec
xor
xchg
fldcw
push
push
mov
roll
jg
dec
cld
cmp
pop
xchg
es
sbb
subb
ret
mov
shrl
ss
jp
or
inc
pushf
mov
sub
ja
inc
jae
ds
movsl
les
nop
and
out
add
fwait
push
lods
shll
add
jl
adc
movsb
jmp
jne
sub
inc
rorb
jnp
inc
shll
or
jnp
or
adc
test
and
pop
mov
xor
lds
in
dec
mov
outsl
lock
adc
imul
xchg
sahf
push
mov
cmp
lods
push
push
fmull
shl
adc
pop
add
push
add
mov
inc
and
pop
push
das
cmp
mov
ss
mov
and
cmp
data16
sub
aas
sahf
fstps
sbb
lds
push
mov
mov
xor
mov
clc
in
in
mov
and
cmp
add
imul
jle
xchg
movsb
mov
movl
adc
xor
xchg
pop
add
nop
lahf
jmp
pop
and
xor
int3
add
jne
mov
mov
push
pop
adc
adc
flds
or
jp
aas
sub
mul
pop
loop
rclb
jp
xor
out
xchg
stc
sbb
flds
mov
xchg
daa
adc
jp
push
mov
inc
mov
jae
add
add
loope
inc
xor
test
cmp
jns
lcall
and
inc
and
push
inc
sahf
mov
and
aas
outsl
ret
cmp
inc
jae
int
jle
sbb
add
pop
je
addr16
stos
jg
pop
test
push
sub
sbb
mov
cmpsl
adc
mov
jecxz
es
addr16
inc
lds
hlt
xchg
or
mov
adc
adc
jo
add
lcall
inc
add
adc
in
imul
add
jle
add
repz
repz
sub
rcrb
jl
jnp
mov
adc
fsin
mov
xchg
mov
dec
mov
jle
cmp
ss
jg
pop
xor
bound
and
popf
dec
or
pop
add
out
mov
sub
dec
mov
in
cs
pop
pop
pop
xchg
pop
adc
shll
adc
push
into
or
lret
pop
mov
push
rolb
cmp
in
pop
enter
inc
mov
push
dec
jg
xor
cmpsb
test
add
jg
stos
mov
inc
jbe
xchg
sarb
push
push
pop
fldl
stos
mov
adc
dec
daa
ja
fs
jno
incl
push
lcall
sub
sub
movsbl
ljmp
inc
adc
push
sbb
pop
sub
test
push
mov
dec
xchg
mov
and
imul
lret
adc
sbb
push
add
push
cmp
sbb
or
jnp
dec
add
push
mov
test
add
movsb
cwtl
mov
or
loop
aaa
push
fs
lods
movb
pop
mov
pushl
xchg
push
pop
mov
jnp
sbb
pop
movsl
mov
sub
clc
fs
cmp
or
je
mov
cmp
jmp
adc
nop
lods
fsubrs
lcall
mov
jecxz
dec
mov
sbb
and
pop
les
sub
aaa
cmc
xchg
xor
and
push
add
cltd
push
stos
fadds
mov
mov
into
vpminub
sbb
hlt
or
xchg
int3
xchg
and
test
push
mov
ss
arpl
dec
lret
and
pop
out
repz
xchg
std
mov
inc
or
aas
adc
push
push
xchg
push
pusha
mov
sbb
mov
push
mov
fcoms
mov
sbb
cs
jbe
xchg
loopne
ja
subb
cmpsl
xchg
or
sub
pop
insb
insb
into
adc
mov
adc
icebp
dec
or
fcmovb
outsl
test
push
jae
dec
jle
out
jb
fwait
and
stc
xchg
scas
les
push
push
jno
sbb
dec
sub
sahf
pop
xor
push
outsl
scas
mov
mov
inc
mov
dec
push
add
mov
and
aaa
inc
movsl
scas
aaa
dec
cltd
adc
sbb
mov
or
fildll
arpl
inc
jmp
mov
or
movsb
pop
out
das
ja
nop
dec
push
cmp
cs
cmp
stos
std
or
inc
jecxz
push
es
pop
popf
sbb
pop
adc
inc
test
sub
inc
sbb
adc
mov
std
jae
jp
xlat
sti
inc
inc
cmc
test
cwtl
movsb
push
lahf
cmp
popa
or
or
ficompl
xor
mov
mov
test
inc
ret
cmp
add
pop
clc
inc
adc
sbb
jge
pop
jno
movlps
outsl
jbe
popf
sbb
sbb
sbb
das
push
stc
xchg
sbb
lds
cmp
inc
xchg
mov
dec
insb
out
jmp
lret
cmpsb
pop
dec
jge
testl
adc
into
daa
outsl
adc
cmp
dec
adc
arpl
pushf
cmpsb
js
push
xlat
addl
xor
mov
add
sbb
faddl
sbbb
es
dec
cmc
cmovb
xor
in
out
aaa
mov
cwtl
mov
inc
stos
xor
mov
fildll
mov
and
pop
test
jmp
fisubrl
mov
mov
adc
mov
ficompl
push
iret
xor
imul
and
negb
ljmp
lret
lsl
sub
adc
lret
lock
ret
aaa
out
adc
cmp
mov
cltd
movsb
pop
repz
rorl
cmpsb
loope
out
fnsave
scas
pop
xor
mov
fistl
int3
cmp
jnp
dec
adc
xchg
int3
jne
out
rolb
aaa
push
subb
adc
add
or
fsub
bound
out
fstpt
cmp
inc
xlat
mov
mov
adc
pop
pop
dec
jbe
repnz
xchg
std
adc
jb
mov
mov
popf
ret
daa
push
mov
pop
mov
stos
test
bound
lods
sbb
sbb
dec
rorl
jmp
and
adc
out
mov
sbb
sbb
or
insl
mov
aam
imul
jmp
scas
ret
inc
jl
and
xchg
stos
ljmp
leave
mov
lods
rorl
lret
dec
popf
mov
repz
xchg
and
sahf
push
mov
cwtl
sub
cwtl
lock
insl
jns
in
fistpl
cmp
mov
js
rorl
mov
xchg
adc
ljmp
ret
lods
xchg
mov
inc
push
push
push
and
add
data16
cmp
xchg
lret
insl
inc
out
jo
sub
push
jnp
pop
fdivrs
jb
mov
jnp
lock
stos
xor
mov
cmp
xor
test
or
or
sub
mov
mov
push
test
pop
cmpsl
and
adc
mov
js
jg
jne
push
cmp
insb
add
cld
out
mov
movsb
or
dec
cmp
sbb
in
cmp
xor
int3
and
in
aas
mov
adc
dec
fs
or
dec
xchg
nop
ret
xchg
cmp
jp
jnp
stc
mov
or
sub
out
mov
test
inc
incb
dec
push
dec
into
cli
ss
xor
xor
les
out
out
fldcw
mov
jno
mov
es
mov
lea
mov
cmp
ja
and
push
pop
mov
repnz
sbb
jg
cld
iret
mov
mov
mov
sub
out
shll
xchg
add
xor
dec
out
and
ret
or
xor
divb
scas
roll
inc
sbb
mov
repnz
sbb
mov
inc
imul
out
add
je
sbb
xor
sub
xor
push
hlt
clc
and
nop
or
cwtl
scas
sub
jle
je
xchg
cld
jge
mov
jno
dec
or
xor
lahf
mov
sbb
fptan
fs
lds
pop
cmpl
mov
out
or
xor
mov
mov
add
mov
dec
push
insb
add
push
or
sahf
xor
jmp
xchg
push
and
aaa
pop
ret
insb
adc
popf
jbe
bound
sbb
dec
aaa
loopne
inc
xor
pop
jae
xlat
pushf
cmp
ds
push
rcrl
push
pushl
fmul
mov
push
and
mov
pop
ljmp
mov
cmpsl
xor
and
popl
adc
mov
sar
test
push
call
repz
cmp
cli
repnz
lret
jns
xor
fwait
pop
loope
inc
mov
scas
sbb
adc
shr
daa
xor
adc
out
imul
stc
xchg
nop
cld
xchg
fistpl
cvttps2pi
cli
inc
pop
pop
leave
mov
adc
sub
mov
xlat
mov
fistpl
push
xchg
jecxz
pop
fwait
es
das
out
mov
adc
cmc
add
pop
xchg
cmc
pop
repnz
push
pop
jecxz
das
cld
test
cmc
xlat
mov
ret
xor
and
inc
cmp
mov
mov
jle
jne
rcrl
ret
ds
or
sbb
xor
or
jle
mov
sub
cmpsb
inc
or
rcr
data16
and
cmp
arpl
inc
es
add
mov
aaa
test
add
movsl
test
aam
lret
lods
outsb
mov
sub
mov
xchg
push
mov
test
jb
cli
mov
aaa
ret
push
fnstcw
rol
pop
cmp
add
jae
inc
movsl
mov
xchg
jecxz
fnstcw
icebp
in
jge
mov
imul
and
push
aaa
fsubrp
imull
xlat
daa
or
out
scas
mov
xchg
data16
mov
push
enter
pop
sbb
out
sar
test
stos
add
pop
push
cmc
in
icebp
sahf
adc
adc
out
insl
dec
cmp
lds
push
std
arpl
mov
or
fidivs
mov
xor
mov
jge
cltd
ja
out
pop
scas
mov
push
rolb
aad
sub
sbb
stos
inc
inc
das
add
mov
popf
pusha
xchg
add
lds
pop
cld
add
push
int3
add
push
lock
aaa
push
stos
and
jp
out
fsubl
jmp
jno
and
loopne
rol
fwait
test
icebp
jae
mov
push
add
xor
add
ljmp
test
pop
mov
xchg
jns
outsb
pusha
mov
outsb
loope
lods
mov
adc
stc
lea
add
mov
in
sbb
inc
mov
adc
push
lcall
mov
jmp
stos
xchg
stos
rol
dec
out
sbb
push
aad
out
xchg
imul
dec
mov
fldenv
push
inc
leave
test
and
xchg
addr16
inc
pop
and
lcall
sbb
jle
bound
js
rorb
pop
sti
cmc
nop
and
scas
jg
or
jle
jno
sub
push
and
sub
sub
lea
sbb
mov
mov
xor
fs
lods
mov
adc
sarb
mov
out
je
scas
cld
bound
aad
imul
stos
mov
les
dec
mov
out
adc
and
mov
pop
sub
cmc
insl
fdivrs
mov
inc
sbb
dec
fwait
cmpsl
adc
adc
out
out
mov
cwtl
notl
stc
xor
clc
out
ret
lahf
fldl
mov
fbstp
in
mov
jnp
fwait
xor
aam
outsl
fcomp
dec
pop
inc
inc
adc
xchg
mov
mov
push
and
jp
or
fistl
pop
adc
ret
mov
cmp
jg
add
sub
popf
cmp
jo
jno
dec
repz
roll
aad
imul
mov
adc
es
sub
int3
notl
jno
ljmp
or
fcmovne
xchg
inc
faddl
push
jns
dec
jae
sub
cmpsb
jo
mov
cmp
adc
mov
sbb
push
add
pushw
add
pop
movsb
movb
cmpsl
pop
dec
push
sti
lahf
push
inc
in
push
pop
testl
xchg
fimull
or
scas
and
lock
pop
and
imul
inc
jae
sub
repz
bound
popa
pop
and
and
mov
sub
out
cltd
call
xor
cmp
lret
test
sub
int
call
add
in
scas
pushf
xchg
push
mov
push
test
mov
inc
out
xchg
add
test
cmp
les
xchg
bound
ret
mov
in
aas
mov
cmc
push
fwait
mov
push
mov
cltd
inc
xchg
inc
aad
xchg
enter
nop
movsl
loopne
dec
orl
pop
and
lret
mov
js
fidivrs
imul
xchg
mov
inc
outsb
xchg
popl
lret
or
jle
jle
mov
jge
or
cmp
cmc
out
es
int3
sbb
mov
inc
jb
stos
push
sub
mov
inc
lahf
loop
lret
fisttps
leave
xor
and
mov
outsb
rcrl
repz
addr16
and
incb
mov
mov
inc
stos
mov
ds
jns
movsb
sarb
push
daa
cmp
addr16
loop
daa
xchg
jns
sub
add
in
addr16
pop
repz
xchg
mov
mov
insb
iret
inc
xor
jle
out
xor
mov
xor
repz
push
sti
shrb
je
outsb
add
ret
mov
and
sbb
pop
push
stos
xor
test
rcr
je
aas
dec
xchg
nop
es
lahf
xchg
jp
lret
pop
mov
add
cmp
sub
hlt
add
fisttps
push
andl
inc
add
xchg
push
mov
adc
iret
out
fwait
push
sti
repz
jmp
jne
out
cmp
test
mov
adc
paddd
mov
mov
shlb
sbb
mov
push
push
dec
stos
xchg
ljmp
pusha
aas
add
pop
aad
dec
fidivs
fmul
das
jb
cmp
sbb
adc
or
mov
out
mov
sub
cmp
push
adc
sbb
xchg
dec
mov
mov
mov
scas
jg
push
ss
fdivp
stos
stos
and
add
and
xchg
idivb
jmp
aas
cmpsl
xchg
int3
xlat
mov
jnp
mov
cmp
mov
pop
xor
insl
dec
dec
and
cmp
mov
mov
dec
jecxz,pt
lock
sbb
sbb
lds
mov
into
xor
inc
scas
cmp
aad
dec
lock
dec
cltd
cmp
xchg
pushf
cmp
dec
lock
and
mov
jge
stc
sub
xchg
es
jge
in
ja
jae
add
repnz
rolb
mov
jmp
adc
lret
jmp
and
pop
test
fistpl
in
mov
cmp
je
ret
xor
into
push
clts
stc
dec
sub
or
mov
pop
imul
flds
xchg
stos
mov
cmc
inc
rcrb
popl
sbb
jecxz
rolb
movsl
adc
mov
cmp
int
cmpl
insb
lcall
pmullw
mov
push
push
add
sbb
xor
mov
pop
dec
and
enter
push
jmp
fistpll
aaa
and
lods
xchg
pop
fcomi
jmp
testl
ret
jns
mov
sbb
xchg
and
inc
jno
sub
pushf
push
jo
inc
sbb
dec
sbb
ljmp
mov
jg
and
sub
mov
and
pop
rclb
roll
cmpsl
sub
pop
out
mov
push
mov
mov
xlat
xor
jbe
pop
xchg
jecxz
xlat
dec
add
cmp
nop
inc
call
jp
inc
daa
and
fs
dec
mov
mov
ss
push
bound
sbb
faddl
icebp
dec
push
sbb
push
iret
add
xchg
dec
dec
loope
roll
mov
jp
jp
data16
sub
mov
jae
clc
scas
inc
cmp
mov
push
mov
ljmp
add
adc
xchg
pop
or
fwait
push
and
dec
aas
push
pop
and
sbb
movsb
xchg
sub
or
push
push
dec
mov
sub
lock
mov
cmpsl
jecxz
pusha
bound
ljmp
hlt
lods
cmp
repnz
insl
clc
mov
dec
nop
xchg
mov
cmp
sbb
push
mov
es
data16
imul
jo
mov
xchg
mov
test
or
fimuls
xor
push
xor
sbb
div
adc
leave
sub
mov
push
sahf
jb
jns
je
push
sub
mov
xor
pushl
into
mov
jbe
jno
leave
mov
cwtl
jmp
int3
add
adc
jb
rorb
ret
dec
movsb
test
xor
pushf
int
hlt
xchg
dec
andb
mov
data16
in
mov
add
insl
and
push
rcr
cli
out
sub
mov
out
jp
adc
insb
movsb
loopne
movsl
idivb
jg
sbb
js
add
stos
imul
aam
and
mov
push
scas
sub
dec
or
hlt
mov
inc
sbb
je
shll
sub
mov
call
fbstp
jmp
mov
mov
and
mov
push
fstp
and
les
loope
dec
mov
pop
add
adc
push
in
dec
std
ds
shl
inc
call
insb
roll
mov
sub
in
push
repz
cmpsb
dec
int3
fwait
jno
cmp
dec
call
aaa
dec
out
mov
test
mov
mov
stc
add
sub
push
push
jmp
mov
pop
pop
push
push
andl
lds
mov
xchg
cmp
inc
stos
setne
cmc
and
sbbl
jae
push
ds
mov
int3
xchg
adc
es
mov
cmp
and
cmp
or
fsubl
rcll
sub
sub
push
pop
mov
inc
jle
pop
lahf
sbb
dec
push
sub
not
stos
pop
inc
dec
sub
loopne
xchg
xor
add
cmc
sub
jne
loope
shrl
dec
shll
sbb
mov
into
pop
dec
mov
add
xor
movsb
lahf
or
gs
mov
lds
je
mov
iret
jns
pop
xor
insb
jg
jns
push
xchg
sub
jae
repz
xlat
out
mov
jecxz
and
and
jg
xchg
and
or
lcall
ficoms
xor
shrl
inc
jns
cmp
int
push
test
pop
imul
out
in
dec
leave
pushf
and
lock
cmp
dec
icebp
xchg
pushf
mov
sahf
mov
nop
roll
pop
and
mov
shrl
push
push
arpl
ja
jg
xor
adc
sub
pop
mov
pop
loop
xor
cmp
adcl
rol
xchg
and
mov
aam
mov
jo
inc
out
je
mov
sbb
test
icebp
aaa
je
mov
cmp
push
das
fadds
dec
mov
mov
std
cmp
mov
test
sahf
repz
ss
es
fimuls
sub
ficomps
jmp
inc
call
mov
xlat
mov
xor
lea
push
push
mov
xlat
mov
subb
sbb
push
jno
xor
jo
jl
mov
sbb
xchg
inc
test
rcr
lods
mov
cmp
mov
mov
movsl
sti
mov
pop
mov
push
stos
xor
sahf
cmp
daa
rorb
jp
push
fwait
mov
cs
inc
jae
or
sarl
sub
pusha
xor
imul
mov
add
push
clc
aaa
sahf
lods
cmp
mov
and
pop
in
push
repz
ljmp
ja
psllq
push
pop
push
lods
call
cltd
add
inc
inc
inc
inc
je
outsl
inc
cmp
fdiv
call
leave
in
scas
xor
adc
jb
cwtl
mov
mov
jmp
jecxz
pop
inc
mov
jmp
mov
sbb
sarb
pop
aad
out
data16
fstp
stos
mov
push
pop
in
ret
mov
scas
je
andl
add
mov
xchg
push
pusha
int
push
hlt
add
push
push
shll
cltd
clc
inc
sahf
and
cmp
xor
mov
adc
shrb
dec
scas
out
aam
adc
push
in
mov
and
lcall
jo
xor
stos
into
mov
mov
mov
rol
lret
enter
adcl
mov
or
xchg
insb
fiaddl
dec
mull
push
mov
push
shrb
or
xchg
push
mov
push
mov
push
dec
shlb
xchg
pop
icebp
mov
mov
or
push
lds
repnz
push
xchg
add
pusha
xorb
iret
hlt
cmp
inc
add
es
imul
outsb
mov
xchg
adc
out
jo
cmp
cld
pop
lcall
aaa
lods
aas
aas
lea
fldlg2
mov
ficompl
fisubrs
cwtl
push
push
cmp
jb
std
mov
int3
jno
dec
outsl
pop
inc
or
mov
mov
clc
adc
adc
shll
rol
or
xor
or
mov
mov
push
jp
jne
lods
pop
pop
mov
mov
notb
mov
into
cltd
sub
or
mov
in
pop
ds
adc
cmp
loopne
push
es
loop
or
inc
inc
in
push
mov
daa
adc
call
cltd
push
pop
xor
push
cltd
jbe
bound
ja
pop
push
xor
mov
loop
inc
je
fadds
or
cmpsb
push
stc
pusha
cmp
mov
cmp
pop
fnstsw
popa
mov
inc
sub
stos
shlb
cmc
es
pop
call
daa
hlt
bsr
push
mov
xlat
daa
pop
adc
ja
sbb
add
jno
rcl
das
das
dec
lods
and
mov
push
pop
pop
xor
push
repnz
mov
test
loop
cmp
cmp
pop
cmpsl
jnp
in
jp
ljmp
xchg
and
outsb
cmp
mov
test
test
jle
pushf
mov
mov
xchg
cmp
mov
xor
shll
mov
outsb
pushf
stc
and
icebp
add
mov
lret
xor
push
xchg
sbbb
stc
shlb
rorb
xor
xchg
in
jo
xor
cltd
outsb
repz
loopne
xchg
push
jae
int3
scas
shlb
xor
lret
and
mov
mov
push
pop
scas
ljmp
cmp
jmp
mov
mov
pusha
icebp
lea
popf
pop
fwait
cltd
sbb
imul
cmp
mov
push
pusha
cmp
stos
imul
xchg
mov
xchg
fistps
int
mov
or
mov
lods
jg
push
lds
push
inc
fwait
xchg
mov
lea
fwait
fcmovne
push
cmp
push
pop
pop
lock
mov
xchg
push
ror
mov
ss
popa
or
iret
jge
and
cmpsb
cmpsb
pop
sub
movsl
sti
inc
sub
pop
jmp
cmp
jle
sbb
mov
jns
je
scas
ljmp
scas
jmp
jmp
jmp
jno
jge
xlat
xor
add
mov
xchg
fdivrl
lds
sbb
pop
ret
cmp
aam
fnstenv
pop
out
jnp
fwait
out
sub
xor
repz
xor
in
sub
test
shll
mov
mov
mov
shrb
insl
jbe
add
push
repnz
ret
pop
mov
fimull
leave
mov
test
dec
mov
inc
sub
rorl
fs
test
fists
xchg
inc
xor
mov
sbb
inc
test
jno
loope
lahf
int
dec
cwtl
or
mull
mov
insl
mov
mov
lret
test
adc
popf
jge
pop
mov
add
ja
outsl
or
loope
sub
mov
xor
jns
jmp
cmpsb
fldenv
out
fwait
mov
lcall
mov
dec
into
mov
hlt
push
push
ja
dec
cmp
into
movsb
cmp
shrb
add
insl
xchg
sub
push
add
mov
and
inc
adc
jl
mov
xchg
mov
or
arpl
push
mov
fldt
imul
sbb
loope
sbb
mov
gs
adc
push
sbb
je
aam
mov
negb
or
cmp
jb
jns
addr16
fbld
add
mov
incb
lcall
and
push
in
sbb
xor
add
pop
mov
push
push
or
xor
les
or
leave
or
jo
mov
enter
pop
in
lahf
scas
int3
iret
loopne
cmp
test
mov
jge
scas
fdivrs
das
shll
add
mov
adc
fdivr
jne
test
mov
insl
dec
sbb
jo
lds
dec
scas
fnstsw
les
xchg
hlt
sub
adc
xchg
fbstp
cwtl
sbb
cmc
push
scas
gs
out
shrl
shlb
lret
out
sub
inc
out
cmp
add
push
adc
xor
mov
cs
jne
and
jp
aaa
push
cmp
cmpsb
ds
jnp
pusha
mov
les
pop
jb
pop
jg
adc
dec
push
out
out
imull
lret
adc
add
sub
scas
pop
sub
jnp
lret
dec
pop
jb
scas
jo
dec
lahf
inc
or
aad
rorl
inc
xchg
roll
and
aad
dec
cmp
mov
rorb
shlb
jns
xor
jmp
push
xor
push
jno
xor
test
sarb
push
xlat
adcl
mov
lret
out
test
xchg
sbb
jp
lret
dec
ja
xchg
iret
xor
js
and
pop
loopne
out
test
jno
xor
inc
sbbl
cli
mov
push
push
cmp
xchg
lods
push
mov
loope
mov
xchg
lods
mov
or
cmp
push
adc
or
setge
es
jp
add
mov
cmc
sbb
xchg
jge
cltd
ss
mov
mov
jle
mov
or
adc
xchg
gs
push
mov
push
daa
pop
rcll
movl
aam
push
dec
cmpsl
add
pushl
mov
xchg
push
pop
xor
enter
divb
shll
mov
leave
jb
mov
push
shrl
and
mov
sub
mov
inc
lahf
insl
fcmovnb
ja
mov
jecxz
add
repz
mov
xchg
adc
imul
insb
sub
inc
out
sbb
stos
pop
dec
add
adc
rclb
repz
in
aam
fmull
ret
xchg
rclb
push
push
push
jae
or
xor
ret
and
loope
fstpl
jnp
jnp
push
test
mov
das
cmp
sbb
and
ja
xor
lret
lahf
add
outsl
adc
sub
push
sbb
dec
mov
aad
rcr
and
or
mov
fnstsw
fs
cmp
xchg
scas
in
data16
aad
outsl
ret
sbb
inc
rcrb
iret
sbb
sbb
insb
icebp
jmp
dec
sbb
xor
mov
into
out
stc
pop
mov
shl
shrl
jmp
adc
xchg
stos
enter
ret
xor
ret
fists
adc
push
mov
xor
ja
mov
pop
clc
add
jns
jne
aad
cmpl
gs
mull
cmpsl
mov
subl
int
jmp
addb
fildl
sbb
pushw
and
in
or
cmp
mov
mov
out
pop
push
xor
nop
dec
cmpsl
mov
loop
in
fwait
and
sub
enter
dec
push
pop
fstps
add
imul
or
outsb
iret
push
or
mov
rcrl
pop
jmp
lds
es
loop
jecxz
jp
lret
push
mov
outsl
cmp
and
mov
insb
cmpb
xorb
sbb
xchg
sti
inc
sbbb
inc
pop
dec
movb
cwtl
movsl
jns
das
js
imul
fsub
or
pop
insl
push
aad
cld
cmpsb
add
sub
syscall
imul
jnp
dec
ffreep
rcrb
test
cltd
mov
in
mov
sub
dec
mov
mov
xchg
jp
xchg
fsubl
adc
movsb
ja
sbb
jae
rorb
out
loopne
lret
push
inc
rorb
lret
inc
nop
int
jns
movb
mov
sub
dec
fldcw
push
or
xchg
stc
pusha
xchg
or
negb
subl
lret
and
mov
popa
fmul
push
jae
cwtl
jae
cli
add
ret
jns
dec
rorb
sub
fiadds
sbb
repz
loopne
pop
repz
inc
inc
xor
xchg
sub
mov
push
out
sti
push
dec
mov
repnz
mov
mov
push
inc
xor
idivl
dec
xchg
std
mov
test
cmp
add
shl
popf
or
loopne
popa
lahf
scas
lock
jne
xor
gs
mov
push
scas
or
clc
xor
mov
ffreep
xadd
add
mov
pop
add
adc
in
jo
mov
popf
jmp
sbb
daa
xor
into
add
icebp
orb
addb
or
or
mov
rclb
dec
paddusw
ret
or
pusha
xchg
or
pop
mov
sub
inc
and
jb
jns
sub
dec
movsb
sbb
js
ret
shll
and
es
das
push
cs
jbe
mov
push
mov
sub
icebp
out
mov
jnp
es
arpl
insl
daa
pop
jle
cltd
clc
inc
ljmp
cmp
and
push
ficompl
xor
sbb
and
cmpsb
mov
xor
sti
xor
js
sub
xor
pop
xchg
cmpsl
jecxz
add
nop
mov
adc
adc
lcall
and
dec
pop
ret
pop
add
sti
scas
inc
sub
loop
dec
testl
dec
push
cld
call
jbe
mov
and
adc
pop
xor
push
in
and
int
pop
sbb
arpl
out
push
lret
push
aas
adc
jp
addr16
popa
scas
mov
mov
dec
leave
mov
pop
and
mov
push
jbe
clc
dec
lea
mov
mov
xchg
mov
and
mov
push
bsf
outsb
xor
imul
or
ffreep
pop
mov
mov
adc
repz
or
and
sub
je
movsl
pop
or
arpl
shr
jmp
push
xor
and
cltd
test
pop
jne
and
fnsave
sbb
stos
sub
shlb
loope
sbb
fiadds
jo
loope
subb
sbb
pop
es
inc
inc
pop
out
mov
fidivs
movsl
push
cltd
add
mov
dec
dec
repz
xchg
stos
add
mov
xor
adc
sti
cmp
aam
adc
aad
gs
push
data16
call
push
loope
pushf
lds
inc
pop
out
mov
sbb
and
push
jnp
mov
pop
cmp
lock
outsb
push
mov
testb
or
jns
push
lcall
jnp
lret
movsl
stos
aas
jg
hlt
xor
xchg
and
mov
mov
shlb
outsl
sub
cmpsb
int3
xor
sbb
movsb
repz
mov
mov
and
out
sbb
xchg
ret
sub
insb
sbb
adc
mov
iret
int
xor
jno
movsb
xor
sub
jle
mov
push
mov
fiadds
sti
inc
jp
mov
orl
ret
inc
mov
in
data16
movb
sbb
mov
cmc
out
mov
mov
jae
push
loope
sub
shrb
xchg
clc
push
dec
inc
icebp
sub
jge
and
loopne
ficoms
icebp
pop
jns
mov
out
or
and
or
test
jbe
and
adc
lock
aad
je
jnp
xor
xlat
test
ss
inc
in
je
bound
mov
test
pop
adc
jp
ljmp
and
fidivrl
pop
aas
imul
out
add
pop
xlat
call
inc
cmp
pop
mov
cmp
fidivs
mov
mov
fidivs
mov
nop
push
jg
or
into
bound
pushf
bound
iret
fisubs
jmp
loop
aaa
xchg
int3
nop
loopne
fcompl
pop
pop
imul
add
mov
ss
or
aad
push
xchg
fwait
mov
push
xorl
inc
adc
inc
pop
mov
inc
dec
gs
scas
loopne
cwtl
call
fisttps
repz
adc
mov
ret
xor
jb
pop
push
xchg
pushf
add
or
insl
xchg
dec
jecxz
mov
jnp
mov
cmp
xor
fstps
rcl
sbb
out
cmp
cmp
out
pushf
adc
test
sub
xchg
imul
and
lahf
fwait
inc
cmp
jl
lahf
fsubl
sub
jb
pop
or
addr16
jb
dec
cltd
mov
test
adc
inc
ljmp
push
icebp
cmp
and
fcompl
and
imul
fdivrl
jo
scas
push
mov
cmp
pop
mov
fstpl
or
xchg
int3
mov
jb
ljmp
das
pop
std
int3
into
dec
fdivr
stc
xchg
subb
cmp
adc
pop
inc
jge
iret
ljmp
addr16
outsl
in
xor
jge
roll
jmp
das
pusha
shrb
cmp
in
das
fdivs
out
adc
in
jecxz
adc
sbb
std
jns
imul
daa
ljmp
test
and
mov
mov
mov
inc
mov
and
dec
push
fidivrl
insl
fidivrl
mov
pop
nop
xchg
rclb
mov
je
push
fidivrl
out
jmp
and
out
push
xchg
outsb
ds
dec
or
popa
adc
or
inc
mov
lods
and
push
popf
cld
xchg
stos
hlt
orl
sbb
mov
add
jne
adc
outsl
and
cmpsl
cltd
pop
xor
pop
jp
add
xor
jecxz
add
loope
sub
aas
rcll
cmc
dec
or
mov
xlat
in
iret
ret
push
fidivl
jbe
iret
push
lds
lods
sbbb
dec
stos
pop
dec
aam
xlat
nop
cmp
or
xor
insl
cmp
jbe
aaa
jmp
sbbl
cmp
fildll
adcl
cmp
add
in
je
fistl
push
push
movsl
andl
cmp
sbb
xor
xor
loope
in
cmpsl
push
or
stos
xor
inc
idivb
push
pushf
adc
cmc
push
dec
aaa
mov
mov
js
mov
daa
pop
dec
mov
orl
xchg
jns
aas
arpl
jg
and
mov
xchg
sbb
xor
addl
je
pop
push
sbb
sub
jae
fidivrl
dec
cmpsl
mov
or
subb
enter
adc
subb
sub
jecxz
bound
adc
rolb
mov
xor
into
test
mov
mov
adc
cmp
mov
push
ss
hlt
lds
scas
and
dec
int
pop
in
ja
out
fs
push
int
push
pop
xchg
cwtl
xchg
xor
int
push
mul
or
sbb
push
jbe
cmp
and
mov
sbb
mov
aas
sbb
stos
push
outsl
movsb
and
lcall
mov
fprem1
data16
push
lret
js
sahf
mov
adc
aad
jmp
ret
mov
sbb
inc
cs
dec
jo
cwtl
pop
stos
and
pop
mov
mov
mov
lret
fs
out
or
pop
repnz
xor
jl
push
and
cmpsl
lcall
xchg
xor
lcall
dec
mov
jbe
mov
push
movl
lret
lea
mov
loopne
lret
jae
scas
adc
cwtl
shrl
cmpsl
mov
rorb
pushf
xchg
mov
jns
aad
mov
dec
cmp
or
out
rcr
mov
lret
jo
pusha
std
mov
cwtl
rcr
cmpsb
push
stc
lods
das
or
xchg
out
es
ss
mov
out
cmpl
xchg
jo
pop
inc
pop
mov
adc
push
cmp
inc
jp
or
loope
jae
jmp
adc
mov
and
loopne
xchg
out
ja
imulb
dec
orb
fldenv
dec
rol
test
roll
scas
and
cmpsb
cmpsb
mov
ss
cwtl
dec
int3
sahf
fildl
mov
sar
dec
sub
xchg
test
xor
outsl
or
fidivrl
lahf
sbb
xchg
rcrb
adcb
ljmp
out
hlt
mov
push
scas
shlb
jnp
xchg
cltd
js
inc
dec
push
in
xor
jo
sub
das
or
in
loopne
mov
arpl
xor
inc
je
cltd
jge
inc
jns
push
push
xor
popa
dec
aad
adc
cmp
test
add
ret
in
sahf
mov
pop
adc
cli
loop,pt
inc
repz
out
pop
mov
mov
mov
jg
ss
mov
xchg
sub
out
push
adc
jnp
ja
mov
gs
sbb
pop
loopne
or
pushf
inc
or
std
adc
dec
xlat
pop
and
orl
xor
cli
or
and
push
fisubs
mov
pop
js
pop
pop
fnstcw
sbb
int3
and
push
jmp
xchg
xchg
bound
cltd
sbb
lret
mov
fisttps
add
test
adc
and
inc
cmc
lret
mov
je
stc
gs
les
push
lret
jo
dec
ljmp
std
jns
out
lahf
push
aam
jmp
or
xchg
and
cmpsl
test
sbb
mov
adc
imull
test
idivb
cmpsb
ret
insl
xchg
out
lret
cmc
sub
fnsave
jns
adc
mov
pop
inc
mov
sbb
add
lods
adcl
push
jle
mov
into
xchg
lahf
push
jae
sarl
cmc
pushf
icebp
pop
insl
test
cmc
xchg
inc
mov
mov
add
and
stos
dec
push
daa
in
cmp
popf
push
roll
jnp
movsl
xlat
aas
or
scas
outsl
cmp
mov
push
pop
sahf
imul
je
out
inc
out
arpl
push
push
popf
imul
mov
inc
sarl
test
mov
out
dec
mov
or
fucomp
scas
push
je
lret
test
cmp
sub
ljmp
jge
mov
pusha
fidivl
js
xor
adc
sub
movsb
jg
xor
xchg
dec
sarl
dec
gs
clc
ja
mov
add
push
ficoms
pop
clc
lea
ficoms
mov
in
mov
mov
inc
lea
stos
and
inc
fsubrp
cmp
fildll
and
add
or
aaa
cltd
in
in
shrb
inc
imul
pop
pop
frstor
in
cwtl
adc
rol
push
and
shll
sbb
es
mov
mov
loop
inc
jge
cmp
out
jbe
sub
xchg
xor
int3
and
mov
dec
pop
jg
fmuls
fcmovnbe
sub
inc
cmc
icebp
push
push
popa
movhlps
ljmp
xchg
rcr
enter
inc
xlat
inc
aad
sbb
mov
add
mov
shll
roll
jo
cld
repz
les
dec
mov
imul
in
jnp
push
adc
inc
jb
lds
cli
fists
mov
into
stos
xchg
jae
ljmp
int3
pop
movb
and
shll
fmull
jge
cs
xor
sbb
push
mov
enter
push
pop
ss
push
xor
repz
fidivl
das
dec
xor
jl
or
orl
xchg
dec
push
sub
jae
scas
cli
mov
xor
ret
loope
movsl
sbb
jl
mov
xchg
sub
insb
loopne
pop
mov
cltd
add
stos
xlat
push
xchg
int
cmc
stc
aas
sub
adc
sub
add
insb
jbe
pop
pop
test
ljmp
inc
cmpsl
clc
xchg
pop
or
mov
rcl
xor
push
lods
pop
mov
inc
fisttpll
neg
cs
sbb
dec
or
push
cmp
fistpll
cwtl
fmull
push
mov
push
pop
dec
push
dec
mov
jns
adc
mov
sub
loop
jle
pop
loop
loopne
xchg
scas
jno
lcall
sbb
rol
inc
and
mov
fs
data16
fsqrt
arpl
mov
outsb
push
inc
cmp
dec
jo
jb
dec
or
dec
movsl
sub
mov
fwait
test
add
jg
fcomip
loope
les
in
lds
movsb
ljmp
mov
mov
mov
stc
lock
popa
dec
jmp
jno
sbb
mov
ja
dec
test
and
push
sub
adc
inc
push
insl
seta
aaa
int3
jb
lea
aaa
out
into
jg
into
mov
pop
xchg
pop
repnz
fidivrs
sub
dec
popa
outsl
inc
xchg
popf
loop
popa
jae
xor
xor
cltd
adc
in
jo
into
mov
lea
loop
testb
aas
aam
das
mov
mov
and
jg
dec
fsubrl
adc
cli
and
fucom
imulb
popl
movsb
clc
mov
jecxz
mov
les
dec
xor
outsb
insl
insb
xor
into
ljmp
insb
iret
pop
jecxz
cmp
loope
xchg
aas
sbbl
fadds
mov
insb
arpl
mov
arpl
push
in
repz
lea
ds
mov
jge
xor
mov
arpl
shl
popa
jbe
add
push
cmp
mov
adc
xchg
je,pt
fnstcw
mov
in
and
adc
pop
js
lea
lret
xchg
je
insl
fiaddl
std
mov
lods
inc
mov
stos
pop
outsb
cli
sti
xor
push
adc
push
testb
clc
inc
cmp
or
ret
out
mov
les
aaa
aad
xor
bound
pop
xor
fcoml
leave
test
push
fbld
pop
nop
adc
sub
lcall
dec
inc
ret
cmp
lds
adc
ret
sub
jecxz
pop
lcall
adc
rcll
leave
jp
lds
dec
sub
mov
rolb
lods
push
adc
mov
fisttpl
insl
cmp
out
int3
test
xchg
xor
arpl
push
pusha
sbb
stos
mov
je
hlt
insb
mov
mov
cs
aad
aam
and
cmp
inc
shlb
cmc
mov
sbbl
xor
ljmp
push
dec
shl
lcall
negl
pusha
mov
roll
jl
xor
fisttpll
sub
in
xor
add
jo
fwait
out
push
cwtl
int3
mov
xor
fcomip
push
push
pop
aaa
lock
push
cwtl
mov
pop
jne
dec
cmpsl
jne
mov
jo
aas
adc
in
mov
cmp
in
punpckhwd
into
sub
fdivrl
daa
adc
dec
add
push
mov
pusha
mov
leave
fwait
decb
fs
nop
pop
pusha
loope
loope
rcrb
push
rclb
aaa
aaa
aaa
lods
xchg
adc
mov
cmp
xchg
leave
mov
lahf
je
outsb
scas
mov
inc
into
es
sub
lcall
call
fwait
cltd
dec
mov
inc
sub
test
jle
jnp
jbe
leave
or
les
sub
outsb
add
clc
stos
and
and
daa
aaa
movsb
add
jecxz
and
mov
inc
xor
sub
test
adc
jae
push
mov
inc
and
ret
leave
enter
push
jo
lret
xor
jne
insb
addr16
dec
xor
aas
scas
leave
rol
or
cwtl
push
movsb
aas
lock
dec
xor
xchg
nop
test
add
std
jl
insb
cmp
mov
jbe
adc
aaa
repnz
sahf
mov
aam
cwtl
mov
cmp
xchg
lret
test
cmp
adc
mov
adc
mov
cmpsb
mov
cmpsl
jnp
jno
repz
popf
inc
mov
cmp
fsts
popa
in
loope
push
jne
clc
sub
ds
xor
jnp
test
mov
lea
cmp
jp
mov
lret
scas
int3
movsl
push
cmpb
das
test
sub
aaa
ljmp
inc
mov
int3
test
das
mov
fidivl
rcr
sub
xchg
pop
add
jge
iret
push
cld
inc
sbb
dec
in
jmp
lods
pop
xor
sarb
mov
les
sub
les
xlat
jo
fadds
adc
or
adcl
bound
inc
call
das
fnstsw
sbb
or
shl
cmpsl
mov
mov
pop
mov
ja
sub
xchg
out
jecxz
mov
ja
cmp
inc
mov
sub
xchg
dec
movsl
add
dec
ja
stos
push
adc
inc
xor
fwait
in
inc
mov
xor
adc
lds
cli
fwait
mov
ficoms
push
dec
fnstsw
inc
xchg
jl
sbb
rcrb
outsl
adcl
daa
insb
rclb
mov
and
iret
jns
xor
lahf
jae
enter
add
xchg
cmc
lcall
xchg
jg
add
ja
push
mov
push
sbb
mov
test
movsl
aaa
loopne
push
add
inc
ja
xchg
dec
stos
ss
cli
xchg
inc
push
outsb
out
lahf
add
out
ljmp
adc
cmp
mov
mov
cltd
in
or
sub
jmp
cltd
push
mov
cmp
ret
and
fcmovnu
outsb
rcll
mov
sbb
arpl
cld
rcll
sahf
xchg
mov
push
fdivp
push
ja
das
scas
orb
daa
jl
loop
or
xchg
and
clc
int
jecxz
add
ljmp
repnz
mov
aam
xlat
ret
shlb
test
jecxz
mov
lea
push
pop
lods
fimuls
lcall
sub
dec
es
test
cmpl
adc
add
adc
jmp
cltd
sub
hlt
inc
push
sub
shl
sahf
sub
sbb
shll
dec
cmp
and
cld
cmp
push
mov
stos
imul
dec
xchg
push
orl
in
fwait
sbb
lds
mov
lods
pop
xchg
xchg
cltd
and
and
les
xor
stc
insl
mov
mov
mov
and
out
adc
lods
sti
sbb
sub
mov
cmp
xchg
fsubs
xchg
scas
push
jmp
call
mov
shrb
mov
cli
insl
add
paddb
cmp
lods
jae
sbb
arpl
cmc
lods
inc
push
rcr
or
and
mov
dec
shrb
in
cmpb
cltd
test
jle
sarb
or
pop
imul
adc
adc
idiv
jmp
data16
in
mov
scas
jg
add
pop
mov
xor
icebp
inc
loopne
mov
lods
sbb
int
aas
pushl
mov
hlt
jmp
adc
xor
push
scas
fiaddl
inc
lea
xchg
je
or
insl
xchg
aam
jnp
std
daa
enter
ss
mov
sbb
ds
ffreep
aas
sbb
dec
pop
sub
mov
pop
loopne
fwait
inc
push
sub
or
jno
cmp
dec
int
ja
and
roll
cmp
adc
mov
and
adc
aam
sub
cmpsl
or
divl
dec
je
sub
stos
mov
inc
movb
les
push
outsb
ret
and
cmp
jmp
pop
test
push
adc
mov
sub
sub
movsb
in
out
mov
mov
js
add
ljmp
divb
lcall
mov
mov
add
push
arpl
add
mov
repnz
mov
cmp
lcall
xor
mov
lret
sbb
das
adc
adc
push
icebp
in
pushf
dec
or
xor
mov
sahf
adc
int3
sti
test
mov
test
jno
sbb
pop
cli
ljmp
inc
and
das
inc
int
mov
xchg
arpl
inc
test
repz
mov
jp
loopne
jae
and
out
adc
sti
dec
xlat
mov
mov
scas
cltd
inc
repnz
jae
std
movsl
cmp
les
leave
sarb
mov
popa
add
rcl
call
cmp
push
fisttpl
pop
push
lcall
inc
sbb
add
sbb
into
dec
xchg
pop
repz
add
test
push
enter
adc
lods
push
inc
fcompl
mov
push
lds
xor
or
xchg
xlat
ljmp
cmp
lcall
mov
cmp
push
or
dec
pushf
mov
fistl
fstpl
add
jecxz
pop
enter
xor
in
push
adc
cmp
pop
sbb
add
xchg
xchg
test
lods
pusha
leave
lret
es
inc
pop
sarl
xlat
rolb
outsl
pop
nop
mov
leave
out
ja
push
sub
inc
sub
xor
pushfw
subb
cmp
and
mov
jmp
xlat
sbb
aad
jnp
mov
fcmovnbe
sbb
or
jg
cltd
and
cmp
sti
and
sti
pop
icebp
stc
mov
sbb
inc
mov
mov
dec
sbb
jno
popa
xchg
mov
stos
dec
push
mov
adcb
inc
lock
daa
mov
les
xchg
inc
xor
fstps
sbb
fistpl
mov
ljmp
outsl
and
sbb
nop
pop
fcomps
push
mov
and
loop
mov
mov
loope
pop
xor
and
jp
adc
and
pushf
jnp
cs
mov
lods
lret
test
addr16
testb
das
jb
in
outsl
push
pop
pop
add
iret
xchg
add
movb
scas
mov
rorl
dec
es
push
cmpsb
cld
in
fcomp
add
sub
mov
movntq
imul
int
or
push
enter
mov
testb
lods
lea
bound
addb
shl
xchg
std
dec
mov
adc
ficompl
mov
push
mov
stos
test
add
sarl
pop
mov
scas
sub
loop
cmc
das
insl
jecxz
mov
pop
mov
mov
cli
pushf
test
mov
cwtl
or
ljmp
sti
stos
push
pop
and
or
push
inc
imul
mov
sub
icebp
in
inc
popf
cmc
xchg
outsl
mov
dec
mov
cmp
pop
push
inc
dec
jns
imul
rcl
jb
mov
gs
sub
sub
pop
gs
mov
jno
scas
insb
cmpsl
repnz
mov
test
ss
cmp
enter
mov
insl
out
jnp
insb
jne
mov
out
int
cmc
fdiv
or
jecxz
aas
cmpsl
sbb
in
hlt
pop
adc
fwait
jbe
pushf
mov
stos
cmp
call
jge
cmc
and
loopne
scas
xorl
fcompl
idivb
lods
mov
cwtl
lret
jo
inc
jp,pn
fwait
lock
jg
sbb
inc
adc
js
push
pusha
xor
adc
nop
pop
pusha
enter
adc
cmp
test
xchg
jmp
cmpsb
ret
xchg
mov
pop
inc
int
jp
psrlw
xchg
lret
or
mov
fisubl
sti
jmp
inc
dec
pop
imul
pavgb
add
dec
add
cmpb
xchg
enter
hlt
gs
sub
push
sahf
ljmp
data16
lahf
xchg
and
sub
loopne
jno
dec
popa
jg
js
js
mov
mov
fdivr
jge
stos
mov
jle
lods
aaa
test
gs
dec
lahf
loopne
and
dec
and
cmpsl
std
inc
or
or
xchg
sub
bound
cmp
aas
test
popa
data16
jmp
or
mov
das
jg
clc
push
push
gs
dec
xchg
sbb
mov
cld
xchg
inc
nop
push
lock
pop
sub
shr
push
andb
cld
insl
sti
xchg
jle
inc
pop
lds
jns
add
pop
adc
inc
dec
imul
mov
jno
jae
jb
cld
xor
rorl
adc
aam
pop
cmpsl
push
push
adc
jle
or
jo
inc
fsubs
pushf
je
xlat
xchg
loope
jns
adc
jb
adc
popf
lds
push
cmc
mov
pop
xchg
lods
push
sub
push
rorb
into
outsl
lea
sub
jecxz
aad
bound
jnp
mov
popf
lds
divb
xor
lahf
mov
loopne
push
and
sub
mov
sbb
mov
dec
dec
pop
push
fiadds
push
cmp
std
pop
add
xchg
xor
mov
add
popf
push
and
es
rolb
fiadds
scas
test
pop
test
pushf
icebp
push
mov
cwtl
xchg
mov
pop
inc
lcall
out
sbb
in
jns
mov
fisubrs
add
out
cld
in
jno
fmul
ljmp
or
fdivr
sub
jmp
xor
inc
in
shrb
jecxz
fldt
ret
dec
or
mov
mov
mov
fdiv
mov
fwait
pop
fwait
lcall
adc
pop
sbb
shll
fistl
dec
fcmovnbe
stos
adcl
dec
inc
scas
xor
add
xchg
andb
adc
test
xchg
jae
jne
pushf
int
mov
and
add
nop
and
jo
pop
sbb
xchg
insl
ss
push
jmp
cmp
mov
stc
sahf
push
dec
test
repnz
daa
nop
sbb
lcall
dec
push
xor
cmp
ret
jmp
scas
gs
dec
jg
fidivrl
jns
push
stc
shll
sub
pop
test
stos
jge
or
mov
out
outsb
lea
push
mov
and
xchg
xchg
and
mov
ret
and
dec
mov
mov
cmpsl
jns
cli
aas
pop
pop
mov
push
sti
cli
out
jg
and
cmp
or
dec
int3
sub
iret
scas
or
test
rorl
test
adc
pop
stos
pop
addl
mov
test
pop
out
inc
xor
sbb
int3
rorb
ds
lahf
lods
aam
int3
lock
xchg
mov
or
mov
mov
nop
cmp
inc
jmp
dec
fs
dec
push
cmp
daa
fdivrp
xor
dec
push
mov
inc
fdivrs
insl
adc
and
jecxz
leave
lock
jmp
incl
scas
popa
leave
dec
jnp
add
push
add
cmpl
ret
mov
cmp
pop
repnz
pop
and
dec
jo
mov
subb
mov
mov
mov
fwait
lods
cmp
adc
bound
jno
test
in
dec
xor
jns
mov
rol
mov
xor
bound
jbe
sub
and
sub
add
dec
fucomp
ret
add
inc
xorl
push
aad
cmp
and
insb
int3
in
std
mov
sti
cmp
testb
xchg
js
push
and
test
aam
outsb
add
jnp
rcll
outsb
nop
popf
fldl
or
pop
mov
scas
mov
lock
xlat
add
pop
cmpsl
mov
pop
mov
incb
or
mov
sar
push
mov
push
stos
or
jge
sarb
es
sbb
sub
adc
arpl
rolb
nop
out
pusha
xchg
lock
mov
scas
xchg
mov
sbb
aad
sbb
rorl
fsubl
sti
pop
sbb
add
push
lret
les
cmp
scas
mov
shlb
into
inc
lea
jge
fistpll
das
xor
mov
leave
add
and
mov
or
cmp
lods
nop
mov
dec
dec
and
je
cmp
mov
lock
out
mov
pop
mov
out
mov
or
mov
xor
sbb
outsl
mov
mov
xor
movsb
popa
loop
or
cmp
pop
push
je
imul
gs
mov
in
cmp
jbe
lcall
or
loopne
scas
popf
mov
dec
aaa
cmp
xor
or
ljmp
daa
insb
pop
gs
xor
xor
std
pop
push
lret
fidivrs
adc
loop,pn
jae
mov
sbb
mov
push
mov
xor
and
call
mov
ds
fucomi
cmp
fucom
mov
je
jb
lock
dec
les
mov
mov
in
mov
je
lea
push
sub
and
stc
xor
pop
stos
jno
cmp
xor
cwtl
das
push
pop
testl
lahf
out
mov
pop
mov
fnstenv
push
sarb
mov
aad
jns
insl
push
push
lret
cmpsb
xor
jns
add
inc
ja
pop
cmp
sbb
faddl
addr16
ret
or
or
into
cmp
dec
jno
repnz
aad
jae
lcall
fmull
push
aas
loopne
out
mov
mov
fisubrs
xchg
adc
inc
pop
inc
repnz
sub
dec
fistps
dec
adc
lret
popf
bound
or
scas
mov
push
lock
and
aam
mov
out
fstl
cmpb
xor
aam
incb
popa
imul
pop
jb
push
inc
mov
scas
ljmp
mov
dec
inc
cli
in
jecxz
mov
cmp
stos
xchg
cmp
add
inc
mov
sub
jmp
fistps
jne
inc
fildll
and
add
addl
repz
add
les
repz
je
mov
mov
xchg
test
xchg
sti
mov
sbb
aaa
add
cwtl
cltd
cwtl
loopne
fsubrs
xchg
mov
xlat
dec
sub
arpl
sahf
mov
adc
cltd
sbb
lahf
add
pusha
inc
push
lds
fwait
push
nop
xchg
lods
in
adc
ja
gs
psllw
ret
jp
popa
stos
lock
testb
call
lahf
loop
out
icebp
sbb
aas
pop
mov
mov
cld
shlb
mov
mov
mov
mov
insl
mov
push
dec
and
lock
test
inc
imul
cwtl
in
jmp
and
dec
sarb
pop
add
sbb
xor
fdivr
cltd
and
push
jp
jne
pop
pop
fld1
cmpsl
sub
sbb
push
test
sub
inc
cld
xchg
jmp
into
add
dec
sub
js
and
sbb
pop
dec
test
test
fmuls
insl
repz
and
inc
cmp
adc
pop
movsb
xor
or
or
ljmp
dec
pop
orl
cli
test
dec
shll
cmp
shr
sahf
jbe
xchg
flds
push
aam
rorl
out
mov
notl
jle
insl
shr
xchg
out
jp
fnstenv
adc
cmp
imul
sti
mov
insl
aam
inc
push
dec
es
lret
leave
add
andl
int
cmp
sub
xor
sub
mov
dec
pop
in
rcrb
push
xor
push
xchg
cmpsl
and
out
test
xchg
add
xchg
add
mov
jb
lods
iret
cwtl
push
ret
mov
mov
cs
lds
sti
and
daa
mov
inc
scas
call
icebp
dec
fnstsw
and
xchg
ret
je
xor
arpl
pop
xchg
arpl
daa
fnstsw
loopne
adc
fmul
scas
stos
sahf
xchg
push
cmpsl
lret
adc
and
mov
int3
mov
jae
and
sub
mov
movsb
and
jns
fildl
mov
popa
movsl
mov
xor
loope
loopne
outsl
incl
fsubl
xchg
stc
and
sbb
push
cmpsb
popa
pop
cs
mov
adc
icebp
sahf
pop
rorl
push
mov
test
dec
aad
sub
loop
rorb
jmp
jne
inc
mov
pop
cmp
ljmp
iret
or
pop
mov
flds
cli
xlat
aad
lods
dec
lret
cmp
imul
lods
addr16
js
and
orb
mov
sub
sub
hlt
jecxz
movsb
or
sti
loope
outsl
add
shrl
outsl
stos
mov
xlat
leave
repz
dec
push
push
or
shrb
ret
adc
inc
sbbb
dec
xlat
sarl
shlb
and
repz
loopne
int
xor
aad
nop
cmp
xchg
adc
loope
loop
jecxz
subb
inc
mov
pop
rcl
or
push
adc
mov
fistl
icebp
and
push
push
leave
fdivl
insb
lods
cmp
lret
int
push
fs
addr16
jnp
sub
bound
xor
shrl
inc
adc
hlt
aaa
call
inc
out
push
mov
sub
jns
mov
cmp
cwtl
testl
mov
jge
pusha
mov
data16
jp
test
jb
movsl
add
jle
inc
pusha
pop
cmpsl
and
xor
iret
mov
adc
shll
lock
cltd
push
cmp
mov
add
xor
stos
insl
jno
cwtl
repz
fiaddl
push
and
push
push
lea
inc
mov
jl
fnstcw
mull
cmp
les
pop
xor
sbbl
repz
std
rcl
mov
jne
jmp
rol
adc
jne
adc
push
push
out
imull
adc
inc
mov
ja
pop
loopne
mov
stos
outsb
hlt
movsb
fidivs
cmpsb
xor
inc
out
xor
xchg
movsl
test
cmp
rolb
aam
mov
mov
mov
test
mov
incb
adc
mov
lret
rorb
mov
ficoms
push
jbe
pop
push
popa
inc
inc
sbb
mov
push
mov
mov
dec
xchg
je
inc
hlt
daa
mov
shlb
push
jae
jp
sbb
mov
popa
scas
outsb
push
dec
mov
cld
psubw
sbb
aad
insb
dec
fbld
ds
jne
pop
jns
loopne
sub
arpl
mov
jns
or
jnp
add
mov
sub
push
adc
lcall
xchg
dec
lods
jg
loope
leave
sub
sbb
jns
dec
mov
lds
cli
out
jmp
push
jne
out
pop
sbb
bound
testl
xchg
pushf
jo
rolb
aaa
inc
stos
int
jns
sbb
pusha
hlt
dec
scas
subl
xor
scas
dec
pop
test
push
xchg
and
xor
shlb
inc
test
loop
lret
aaa
in
push
mov
sbb
pusha
sti
jne
dec
jo
push
push
lret
pop
aad
pop
insl
inc
push
daa
ja
cmp
scas
add
xor
inc
leave
inc
mov
mov
out
scas
pop
call
pop
loop
dec
icebp
imul
clc
inc
lods
jae
nop
subl
push
push
loop
test
adc
and
scas
cmp
mov
outsb
shr
out
mov
sbb
push
fldl
pop
jl
push
ret
sbb
adc
cmpsb
inc
bound
popf
pop
scas
pop
push
ret
cmp
push
dec
in
nop
paddusb
loop
adcl
sbb
xchg
cld
jmp
xchg
call
push
movsb
imul
out
and
js
mov
repnz
addl
repz
add
sar
jb
dec
cmpsb
iret
xor
repnz
pop
sbb
pop
inc
dec
insb
fists
iret
mov
imul
sub
scas
adcb
shlb
jae
shrb
call
dec
add
daa
xor
xor
mov
push
sbb
call
lock
dec
add
mov
pop
mov
xor
shlb
jnp
in
in
push
je
rorl
inc
push
aas
mov
jbe
out
mov
inc
jge
int3
sahf
adc
movsl
dec
outsb
add
enter
ljmp
jp
sub
aas
push
xor
mov
aaa
cs
idivb
shl
std
stos
into
inc
inc
fisubl
faddl
hlt
insb
xor
pusha
jmp
mov
lcall
subl
or
and
std
iret
pop
pop
leave
mov
pusha
daa
xchg
insl
cmp
fcomi
out
pusha
xchg
fidivs
cmpb
push
testl
jmp
xchg
inc
addl
adc
mov
jns
aas
jae
push
ror
cmp
xchg
dec
iret
push
inc
mov
idivl
dec
jb
cmpsb
pop
test
or
ficomps
push
xor
jns
and
ja
add
cmpsb
jb
jo
data16
roll
jl
mov
mov
movsb
or
shrb
xchg
in
cmpsl
sti
js
repnz
subl
fs
stos
sbb
or
jge
pop
aad
das
add
jecxz
and
leave
loop
aad
add
inc
fdiv
xor
mov
push
sti
push
repnz
xchg
sub
sbbb
push
popa
out
movsl
push
add
daa
enter
xor
jp
hlt
rcr
push
imul
nop
push
push
scas
ret
dec
dec
std
add
popf
sub
mov
dec
fimull
and
mov
add
pop
xor
cmp
xorl
lds
sub
popa
fildll
mov
pop
dec
push
xor
sti
sar
dec
fistps
push
xchg
cmpsl
ja
out
jns
mov
mov
mov
imul
out
add
fcoml
dec
xor
inc
push
add
out
jbe
sbb
popa
push
scas
les
fwait
mov
jbe
mulb
lcall
shll
pushf
test
push
loope
fidivrs
clc
cmp
push
popa
pop
fstps
andl
cs
sbb
out
pop
cmc
cmpsl
mov
pop
repz
and
cltd
and
inc
dec
lock
imul
mov
iret
jne
mov
rcrl
mov
in
daa
xlat
inc
ljmp
mov
mov
sbb
sub
sbb
add
or
mov
and
inc
lret
push
push
cmp
jbe
aam
jbe
popa
adc
hlt
ret
push
cltd
xorl
xchg
sbb
ret
sub
or
and
mov
mov
and
das
fidivl
outsl
data16
push
inc
cmp
add
push
sub
movsl
shlb
push
in
sahf
movsb
ljmp
adc
dec
rcrb
and
ja
mov
inc
ds
adc
adc
add
mov
jae
mov
mov
and
pop
stos
addr16
leave
insl
sbb
dec
repz
adc
push
push
push
jl
dec
xchg
inc
dec
icebp
sbb
roll
call
xor
jp
movsl
jb
and
adc
mov
pop
stos
in
fdivrl
mov
or
arpl
mov
pop
jae
out
andl
push
jbe
xor
aad
popa
pop
xchg
and
arpl
adc
lahf
test
inc
or
pop
ret
pop
repnz
jne
sti
xchg
push
sbb
sahf
mov
ret
pop
cli
adc
jb
test
mov
out
cmpb
add
iret
push
shlb
sarb
add
xlat
das
lcall
sbb
rorb
jmp
sub
repnz
jmp
ds
mov
in
sbb
push
and
ret
sbb
sub
or
add
pop
jae
fwait
pushf
mov
roll
jge
xor
xchg
pop
shrl
icebp
dec
ret
popl
mov
das
or
fimuls
cmp
lods
pop
cltd
fadds
hlt
shrb
xchg
scas
pusha
sub
cmpsb
mov
adc
inc
dec
ret
lods
imul
dec
jb
sub
in
inc
or
jb
dec
test
xor
jge
movsl
inc
call
or
cmpsl
sahf
lahf
push
lods
xorb
fwait
jnp
int3
sbb
repnz
inc
add
push
push
add
iret
xchg
stc
dec
in
insb
mov
mov
xor
cltd
clc
insl
das
adc
cmp
enter
pop
xchg
sbb
lock
mov
out
push
iret
sbb
jg
nop
xor
inc
popa
push
fsubrs
jmp
shll
mov
sarl
jb
cmp
inc
cmp
das
mov
or
das
pusha
ja
flds
adc
js
xchg
push
popf
test
bound
adc
jmp
jnp
adc
imul
xchg
fisttpl
cmp
addr16
jns
je
push
adc
mov
inc
push
jne
sub
adc
jns
mov
mov
fwait
in
mov
adc
frstor
xchg
stos
in
push
les
xchg
dec
out
xor
jp
lret
or
shl
mov
mov
stos
jl
leave
hlt
inc
push
movsb
pushf
subl
xchg
adc
popf
mov
lods
pop
test
imul
aas
cmpsb
sbbb
sub
jns
and
lret
fcomi
pop
adc
fadd
repnz
mov
jnp
mov
sarb
xchg
dec
adc
inc
jae
cwtl
loopne
cmp
in
xchg
aad
jp
or
and
mov
sbb
pop
jle
into
out
enter
test
loope
mov
lock
dec
idiv
lods
in
push
outsl
lret
and
dec
test
out
out
gs
lods
lret
or
pop
int
xor
les
pop
mov
adc
pusha
rcrb
pop
movsb
mov
lock
push
xchg
mov
add
aam
xchg
xchg
xchg
jno
mov
mov
jno
mov
jb
leave
jnp
lret
cmp
call
test
jge
aaa
mov
dec
push
sbb
mov
je
and
push
fadds
bnd
add
test
fchs
repz
sbb
or
add
sahf
lahf
lcall
leave
shll
ja
clc
cmpsb
stos
out
ja
mov
roll
insb
pop
mov
inc
pusha
into
jae
iret
lcall
pushf
ffreep
push
addl
adc
cmp
sbb
fsubrl
orl
ret
xor
movsl
sub
stc
jecxz
or
out
leave
add
pushf
mov
lret
ja
test
or
bswap
test
xor
cs
pop
faddl
or
mov
fcmovne
mov
or
adcl
test
out
cmp
sbb
add
dec
xor
popa
loope
pop
test
adc
ror
adc
mov
and
cli
shrl
test
cmpsb
mov
fisubl
je
lahf
push
fwait
lods
lea
mov
loop
ret
inc
shlb
std
jne
lahf
xchg
clc
xchg
jo
mov
push
pop
daa
pop
sbb
sub
lret
scas
sbb
stos
pop
push
and
out
vunpckhps
cmp
les
mov
sub
xor
orb
inc
ss
mov
sbb
imul
xchg
sub
int
or
scas
scas
ret
popf
xor
jecxz
jbe
pop
adc
pop
out
bswap
push
add
repz
popl
mov
mov
dec
pop
or
push
gs
imul
test
xchg
xchg
fisubrs
fcompl
xchg
andb
jb
cmp
or
mov
mov
cmpsl
addr16
jmp
jbe
inc
pop
xchg
or
mov
pop
jl
insl
loopne
sarl
notb
add
cwtl
add
adc
mov
cmc
mov
int3
lret
je
push
lret
mov
push
push
jbe
icebp
test
dec
imul
cmp
pop
sub
jmp
add
mov
pop
gs
aam
fstps
rcrb
xor
repz
fcmovne
jle
mov
pop
insl
mov
sbb
jb
cltd
pop
pop
adc
ret
fnsave
movsw
adc
or
xor
stc
jno
jl
add
into
aaa
movsl
stc
ret
ss
mov
insl
aam
ljmp
sub
repz
inc
inc
mov
das
jnp
rcrb
mov
test
pop
cmovae
call
js
xor
mov
es
and
inc
es
adcb
mov
cmp
lahf
jne
pop
int
test
enter
es
push
mov
cltd
popf
sbb
nop
sbb
stos
and
cltd
sub
pop
push
out
push
movsb
mov
cmp
xor
cmpb
mov
add
inc
sti
and
jo
call
push
add
jmp
in
int
cmp
mov
push
mov
add
stos
xlat
adc
rdmsr
shr
mov
sahf
das
adc
sbb
call
scas
add
fimuls
fsts
aad
fcomp
nop
xchg
pop
stos
loope
or
push
push
aad
and
and
sub
dec
leave
sub
popf
insb
pop
lret
mov
dec
adc
lret
push
push
sahf
pop
in
push
stos
lock
hlt
add
sub
test
dec
leave
hlt
sub
add
rclb
mov
mov
xor
test
jge
insb
test
out
jae
add
movb
sbbb
insb
jns
jns
stos
sub
adc
or
aaa
mov
rcrl
fstl
cwtl
sbb
bound
enter
lahf
outsb
int
movsb
filds
sbb
dec
lods
ja
jle
xor
xchg
fistps
jb,pn
std
push
and
addr16
jg
mov
or
xlat
stos
orl
hlt
leave
inc
out
mov
sahf
jb
fbstp
xor
xor
call
push
or
mov
and
adc
cltd
inc
cmpsb
sbb
je
cmpsb
inc
sbb
pop
jno
add
mov
insb
adc
pop
cltd
push
xchg
roll
mov
mov
fiaddl
xchg
cwtl
es
dec
jnp
push
out
mov
mov
imul
pop
loope
arpl
mov
testl
inc
jo
rol
push
pushf
mov
jp
mov
out
cwtl
mov
lods
iret
rorb
mov
mov
xchg
icebp
test
add
xchg
or
ss
jle
cld
cmp
push
pop
mov
mov
mov
lahf
add
es
roll
sub
aad
jecxz
lock
xchg
and
sbb
mov
loope
dec
jo
adc
pop
aam
pusha
pop
jne
imul
cld
cmp
inc
xor
outsl
cmp
mov
scas
mov
divl
adc
dec
sub
rclb
mov
stc
loope
leave
sbb
shl
pushl
adc
mov
mov
jmp
and
jns
ljmp
pop
push
insb
inc
mov
pop
xorl
mov
fs
xchg
mov
and
cltd
test
negl
movsb
dec
mov
dec
xchg
stos
ljmp
mov
js
push
sbb
cld
push
xchg
stos
push
inc
and
test
repnz
push
mov
xchg
jmp
pop
lock
adc
xchg
js
add
push
movsl
scas
xchg
sbb
lock
fdivrs
ficoms
jns
xchg
pop
aam
dec
mov
xchg
dec
insb
mov
je
mov
insb
jns
imul
and
sub
cmp
push
aas
ljmp
lods
aad
xlat
movsb
outsb
fs
out
mov
mov
cmp
out
in
mov
cmpsl
bound
fucom
mov
icebp
repnz
xor
test
rorl
lds
or
cmpsl
or
inc
mov
pop
leave
movsb
mov
xchg
jne
mov
jae
out
pop
mov
sub
sub
lea
adc
out
jle
fstl
xchg
rcrl
xchg
js
insb
lods
jnp
orl
mov
inc
add
inc
movsl
out
cld
push
test
imul
loope
lcall
dec
xchg
es
les
jmp
mov
sub
clc
mov
push
adc
arpl
subl
ret
push
sub
icebp
sbb
scas
sahf
push
mov
lahf
loopne
jmp
fsub
movsb
xor
outsl
add
mov
imul
pop
ljmp
stos
dec
jecxz
cld
sub
scas
lret
gs
aas
xor
jl
lods
push
sbb
js
adcb
pushl
sahf
fmull
cli
popa
jg
jl
insb
js
bnd
ficoml
loope
mov
push
cmpb
rcll
jle
rorb
addb
aam
pop
jo
and
subl
mov
pop
in
fstl
lds
xchg
mov
mov
aam
jle
imul
cmp
test
mov
lock
shl
lcall
aad
mov
xor
push
cmpl
xchg
out
cld
push
xchg
push
xchg
lock
mov
adc
jl
sub
int
movsl
xor
mov
movsl
popa
jns
adc
stc
pop
mov
sbb
outsb
pusha
nop
mov
out
mov
xchg
movsb
xchg
inc
shl
xchg
nop
or
data16
cli
lahf
shlb
mov
lahf
or
insb
inc
shll
clc
aam
cld
popf
cwtl
inc
jno
sub
inc
aaa
pop
mov
bound
mov
call
mov
adc
and
das
push
cmp
and
movl
andl
xchg
mov
daa
outsl
inc
loop
and
pusha
and
mulb
push
aad
aam
scas
and
mov
push
sub
or
sub
gs
mov
xchg
scas
add
push
repnz
jns
inc
pop
fildll
out
daa
add
fwait
mov
add
mov
fsub
cmp
pop
sbb
inc
pop
mov
push
and
popf
aam
and
adc
push
je
mov
out
sbb
inc
pop
addr16
xchg
cmpsb
or
stos
and
jnp
fnsave
mov
dec
lds
push
pop
mov
test
inc
or
mov
and
or
inc
rcl
jg
imull
outsl
lahf
sub
pop
outsb
negb
mov
mov
inc
in
das
call
ret
or
inc
add
fwait
xor
push
out
add
or
dec
push
sub
dec
jno
xor
jp
or
sub
sub
mov
xchg
mov
jge
pop
cmpxchg
outsb
cmp
fs
in
xor
das
mov
sbb
rcl
fcom
xor
push
in
jecxz
ds
leave
int
mov
dec
std
das
mov
cwtl
mov
test
hlt
jmp
ret
dec
jp
xchg
pop
dec
lea
negl
lcall
cwtl
sub
int
pop
add
add
sub
adc
dec
fisttpl
adc
loop
out
gs
insl
aas
pop
out
add
stos
push
loope
sub
aaa
jns
push
pop
bound
push
inc
addr16
shrb
inc
pop
mov
sbb
xchg
es
jbe
icebp
mov
sar
in
mov
sbb
dec
shll
ret
call
jmp
inc
or
mov
jp
insl
cmp
jecxz
and
push
fwait
rcll
popa
leave
jns
sub
int
cmpsb
adc
xor
shrb
xchg
bound
xlat
cmc
xor
fs
sahf
sti
sub
scas
adc
scas
test
fdivs
push
pop
out
jns
aam
insb
fcoms
mov
fsubl
imul
arpl
outsb
leave
pop
out
jns
jl
fdiv
sar
fistps
sub
orl
popf
test
inc
outsl
sub
pop
pop
push
sub
adc
imul
lds
push
fucomp
call
and
ja
add
add
hlt
pop
cmp
push
sbb
sbb
je
decb
lock
push
imul
js
xchg
fbld
sub
sub
pushf
dec
inc
insl
test
cmp
sub
aad
out
add
mov
fstps
cmp
scas
hlt
icebp
xchg
mov
mov
fistl
dec
push
dec
jl
enter
aam
repnz
not
loope
adc
lcall
or
jg
add
mov
es
pop
or
xchg
mov
ret
lods
pop
xlat
and
in
je
fdivrs
cwtl
insb
imul
mov
mov
jne
xor
aaa
cli
sbb
cmp
push
or
jo
mov
shlb
lret
adc
int3
cltd
push
gs
iret
stos
scas
cld
xchg
fwait
add
data16
jmp
xor
cltd
add
in
movsl
shl
inc
lods
cmc
sub
fwait
jle
test
nop
stos
add
out
push
adc
mov
xorb
jl
mov
je
mov
add
fisttpll
sahf
icebp
insb
das
adc
add
pop
adc
inc
pop
stc
in
xchg
push
inc
repz
jns
ljmp
push
jp
outsb
cmp
sub
cltd
std
mov
aas
or
rdtsc
dec
pop
inc
xchg
neg
sbb
scas
icebp
mov
out
fs
mov
in
pop
lods
adc
jg
sub
in
lret
cmp
adc
fisttpl
pop
dec
sub
pop
push
jg
jne
mov
shrl
stc
push
jnp
lret
cs
inc
adc
mov
orb
sar
push
repz
mov
cwtl
popa
pop
les
cmp
xlat
and
movsl
lock
fisubl
icebp
dec
outsl
add
sbb
outsl
fs
outsb
ficoml
add
add
popa
xchg
cs
test
adc
cmp
mov
xchg
lret
sbb
aaa
and
sbb
mov
stc
sbb
prefetchwt1
jae
xchg
ficompl
outsb
push
cmp
lds
sbb
ret
addb
mov
fisubrl
insb
fidivrs
xchg
dec
jle
xchg
adc
pop
stos
push
pop
xor
sub
daa
mov
movsl
repnz
mov
in
or
xchg
das
outsl
bound
push
sahf
jns
mov
push
and
data16
xchg
xchg
sbb
leave
pop
jno
stc
add
bound
jo
mov
jmp
shlb
and
sub
out
mov
sti
shl
loop
mov
filds
fisttpl
movsb
cwtl
fiaddl
dec
addb
mov
add
in
sub
cmp
fsubrl
mov
mov
push
adc
hlt
mov
pop
and
pop
test
mov
or
pushf
mov
sub
push
cmpsl
xchg
push
jno
cmp
dec
pop
arpl
dec
leave
in
loop
enter
jne
lods
insb
cmp
dec
out
test
cmp
jge
fisttpll
repnz
cwtl
into
bswap
mov
cltd
stos
aaa
adc
loope
dec
mov
shrb
nop
push
hlt
jns
push
jnp
call
out
dec
cmp
mov
cld
or
lret
lods
sbb
cmpsl
pop
dec
lahf
push
and
hlt
sbb
into
or
inc
mov
bound
fwait
push
jns
jmp
into
sahf
mov
cs
jge
icebp
push
sahf
outsl
arpl
pop
mov
dec
mov
sbbl
popf
dec
xchg
je
iret
ja
mov
repz
loopne
popf
test
mov
gs
push
mov
sbb
movsb
ja
test
sarl
out
xchg
sbb
xchg
pop
aam
xor
cli
mov
dec
ss
sub
add
dec
pop
nop
inc
pushf
xchg
add
lret
jb
stc
dec
addl
sbb
dec
mov
notb
mov
xor
xchg
pop
insb
cmc
xor
mov
cmp
push
mov
pop
or
movsl
dec
jge
stos
xchg
jno
in
inc
test
push
or
pushf
stc
cmp
dec
fisttpl
adc
mov
xchg
push
ror
pop
data16
sar
xchg
movb
in
dec
inc
ss
xchg
addr16
mov
aaa
push
and
ss
lret
loope
aad
pop
push
test
inc
out
or
out
xor
stos
mov
lret
or
call
mov
sbb
pop
xor
xor
cltd
in
sub
scas
sbb
sub
out
jp
sub
in
xor
and
movsb
mov
stos
mov
push
mov
xor
cld
mov
dec
xchg
inc
pop
mov
cmp
loope
aam
cli
aas
out
xchg
jne
mov
push
fs
jmp
or
scas
ffree
adc
outsb
cld
int
idivl
je
xor
xchg
pop
adc
sub
mov
xor
adc
cmp
les
mov
mov
lea
add
cli
pop
jbe
outsl
pop
mov
jge
dec
in
add
adc
lods
insb
push
sbb
lock
movsb
inc
mov
out
xbegin
lret
lea
sbbb
pusha
pop
add
add
test
mov
jns
gs
loope
cmp
or
call
mov
push
pop
xor
notb
jae
ja
sahf
dec
aas
lock
mov
cmpsl
ret
test
std
pop
fsubl
mov
add
popf
scas
xchg
andb
dec
xor
loope
cs
sbb
xor
pop
mov
cmpsb
mov
mov
outsb
pop
test
repz
inc
sbb
je
mov
sarb
mov
push
clc
fldenv
out
cmp
mov
frstor
jg
loope
jg
mov
ss
das
movl
mov
dec
pop
dec
mov
xchg
pop
mov
mov
lret
sub
dec
adc
push
call
ljmp
inc
push
dec
push
or
or
push
data16
or
and
sub
xchg
and
pop
add
movsb
and
lea
mov
fs
adc
enter
jmp
mov
mov
inc
and
pop
lds
push
or
xchg
call
stos
das
imul
inc
ret
incb
adc
rcr
pop
imul
nop
dec
aam
enter
mov
ret
pop
mov
pop
lcall
push
aam
mov
xchg
sbb
cmpsl
sbb
in
adc
add
loope
xchg
dec
aad
fimuls
jl
pop
jg
push
test
push
les
loopne
jmp
mov
mov
sbb
cmpsl
xchg
inc
idiv
jp
fdivl
adc
mov
insw
iret
mov
xor
outsb
cld
adc
pop
lret
pop
add
ret
lret
sub
ret
or
adc
cmpsb
fimull
pop
inc
movsl
out
icebp
jmp
sahf
jp,pt
lea
daa
jb
pusha
or
ja
hlt
xor
dec
mov
sub
xchg
shlb
jg
scas
mov
or
push
inc
stos
cld
popf
jl
pop
push
dec
aas
jmp
jnp
stc
pop
sub
mov
addl
jne
xlat
add
add
and
dec
js
test
push
into
mov
rcr
clc
sbb
inc
jne
xor
insl
jl
ja
and
jg
xchg
ret
stos
mov
xchg
lods
add
dec
mov
mov
je
movsb
pop
mov
sbb
clc
in
int
xchg
push
fcoms
aaa
sahf
pop
out
and
mov
mov
or
imul
inc
jb
sar
scas
sub
stc
mov
or
sbb
pushf
xchg
imulb
dec
add
je
arpl
test
jns
and
jns
jno
push
mov
popf
mov
sbb
push
jnp
addl
jge
js
int
add
lret
mov
and
pop
movsl
xor
xor
fiadds
in
ljmp
lods
xchg
repnz
nop
dec
into
icebp
es
or
xchg
aaa
adc
in
mov
movsl
jle
addr16
xchg
in
mov
sar
adc
shl
sbb
xchg
sbb
xlat
push
test
aas
inc
push
aam
cld
aas
out
lods
mov
movsb
fidivl
xchg
add
leave
mov
outsl
adc
clc
ret
fs
in
fsubr
adc
mov
dec
or
and
stc
fists
sbb
mov
adc
clc
ljmp
mov
dec
outsb
add
sbb
xor
inc
sub
mov
jecxz
lds
xchg
inc
mov
add
test
add
push
xchg
or
mov
clc
mov
or
add
std
add
pop
push
push
and
insl
pop
icebp
lods
cmc
mov
enter
add
pop
xlat
mov
or
int3
xchg
movsb
jo
add
pop
fiadds
xor
pop
sbb
inc
cmp
adc
mov
jne
sbb
pop
mov
imul
pop
lods
and
adc
add
sub
ret
mov
xchg
std
fdivl
xchg
rcl
mov
sbb
push
sbb
shll
pop
loop
mov
xchg
shl
mov
repz
arpl
mov
push
stos
mov
outsb
mov
rclb
and
mov
icebp
adc
lock
adc
mov
pop
add
mov
sub
dec
es
cmpsl
mov
push
mov
repz
lock
fcmovb
out
adc
xchg
sub
sbb
ljmp
daa
in
mov
insb
das
push
adc
dec
fidivl
add
scas
out
sbb
inc
add
mov
mov
xlat
fsts
dec
or
jg
mov
std
stc
lret
fwait
sub
jae
add
mov
dec
in
mov
mov
jle
cmpsl
mov
push
loop
loop
bound
mov
out
mov
call
mov
mov
jns
jno
lock
pop
or
inc
test
pop
divl
and
sub
xor
das
adc
test
lods
rclb
jle
jbe
pusha
pop
dec
add
xchg
and
inc
scas
pop
push
mov
scas
jge
lds
loope
inc
aam
call
stc
adc
xchg
sub
fsts
dec
pop
jmp
jmp
aas
fsubs
push
inc
test
jg
jb
push
fucom
in
ret
es
fidivrs
or
cmpl
dec
ret
adc
cltd
pop
mov
popa
pop
lea
mov
movsl
bound
push
xor
lret
movsb
inc
xor
mov
cs
push
dec
ljmp
divb
ja
inc
jns
mov
add
add
mov
fimull
cmp
test
xlat
cmp
fsubp
std
arpl
inc
xor
mov
dec
sub
test
jbe
sub
and
imul
mov
jg
pop
sbb
xor
inc
nop
dec
sub
inc
xor
pop
cmp
mov
lock
fs
mov
inc
leave
mov
testb
adc
xchg
les
or
or
mov
out
pop
imul
and
add
test
jae
in
mov
lahf
mov
inc
xchg
es
cvtdq2ps
repz
loopne
jl
jecxz
mov
loop
push
or
mov
xor
lea
cs
pop
cmpsb
dec
pop
orb
xor
daa
dec
test
lret
cmp
jecxz
ljmp
dec
scas
sbb
mov
push
mov
sbb
pusha
mov
mov
mov
dec
lods
clc
adc
into
push
jnp
adc
cli
jnp
lea
mov
fsubs
inc
push
mov
xchg
in
lret
or
xlat
sbb
and
mov
cmp
add
cmp
mov
insb
cltd
loopne
sub
jo
cmp
inc
leave
mov
or
adc
sub
fstpt
pop
cmpsl
sbb
pop
inc
outsl
shrl
gs
mov
push
aaa
cmp
leave
adc
es
mov
pusha
out
cmp
xor
divb
mov
lock
dec
ret
jmp
cmp
dec
inc
inc
movsb
lea
aas
cmp
jge
out
leave
jne
mov
push
sbb
repz
test
xchg
cmp
pop
pop
jp
xchg
dec
sbb
and
addb
inc
mov
mov
and
sbb
sub
ja
imul
or
xor
push
xorl
mov
or
sbb
jl
adcl
xchg
adc
cmp
jg
and
adc
outsl
mov
jne
mov
loope
jecxz
mov
or
xchg
add
icebp
push
test
xchg
ljmp
adc
push
imul
nop
and
fs
test
stc
mov
fcompl
pop
roll
push
les
vpextrw
jne
lds
repz
jnp
jbe
xorl
pop
jno
inc
dec
gs
shll
out
das
ret
dec
dec
lret
ljmp
std
andl
add
sub
mov
mov
scas
cmp
sub
adc
jp
sti
mov
rclb
add
cmp
leave
or
or
loopne
mov
test
cli
push
lds
push
sti
std
jne
sub
test
es
mov
jb
cmpsb
sub
shll
cmp
and
mov
cmp
mov
aad
mov
test
or
and
mov
int
in
lock
cmpb
inc
fcompl
shl
enter
mov
sbb
cmp
dec
enter
xchg
pop
jae
push
lret
addr16
fstpl
mov
adc
mov
int3
pop
pop
mov
out
fs
push
mov
push
roll
push
in
outsl
rorl
pusha
test
movswl
je
pop
in
out
shrb
sbb
ror
cmc
mov
xchg
out
js
cmp
add
sbb
sbb
pushf
stos
insl
sahf
lcall
push
roll
sbb
mov
dec
aaa
sarb
add
mov
xchg
and
repz
hlt
outsl
stc
xlat
loop
in
aaa
daa
sti
mov
pop
sbb
daa
adc
in
mov
pusha
popa
inc
push
cmp
mov
jbe
xor
test
xlat
xor
sub
dec
or
mov
imul
or
fisubrs
repnz
popa
data16
ret
sub
jmp
aad
fnstsw
scas
movsb
inc
fsubrp
xchg
out
gs
mov
mov
fsub
mov
lahf
fisttps
clc
or
xor
jae
lcall
lea
sub
aam
movsl
sub
lock
cmp
adc
loop
push
jne
mov
inc
dec
inc
sbb
xor
or
int
dec
mov
jb
mov
aaa
jne
gs
nop
inc
mov
pop
sub
into
and
in
push
sti
jne
inc
pop
leave
or
pop
push
jo
ret
jle
and
fwait
sbb
and
mov
iret
mov
sarl
sbb
inc
push
rcl
adc
movb
testb
add
sbb
xchg
fadd
test
fcmovnu
add
mov
clc
stos
ss
scas
imul
loop
stc
stos
jns,pt
jns
jnp
dec
mov
pop
add
cmp
and
aas
mov
cwtl
test
lds
xchg
inc
and
sbb
or
popf
nop
cmpsb
mov
pop
stc
xchg
jo
and
popf
push
stc
add
xor
cs
test
inc
xor
xor
les
ret
subb
xor
scas
inc
and
jmp
into
fldcw
lds
ds
stc
cli
sahf
pop
mov
pop
stos
pop
pop
clc
aas
jl
pop
mov
ror
push
sbb
add
nop
js
dec
out
xchg
mov
inc
xor
aaa
jo
pop
pop
fs
push
jp
pusha
ja
push
jge
or
in
negl
ljmp
cmp
lret
mov
mov
mov
jge
sti
cmpsb
lods
fwait
jo
into
push
xor
pushf
mov
stc
xor
mov
lods
cwtl
sub
imul
mov
or
push
mov
add
mov
jp
call
xor
outsb
cmc
inc
mov
scas
outsb
lcall
push
insl
xchg
mov
xlat
bound
in
sub
sbbl
movsl
add
pop
lret
cmp
push
in
sub
arpl
mov
std
je
loopne
xor
or
repz
pop
out
test
adc
inc
or
call
or
adc
lods
push
jecxz
pop
ds
fnstsw
loopne
jae
inc
repnz
ret
scas
adc
fsubs
iret
xchg
xor
push
and
daa
push
jecxz
jecxz
cmp
mov
sub
ficoml
inc
aas
ds
loop
test
push
push
or
mov
push
xchg
or
mov
ljmp
cmp
add
das
pushf
push
inc
mov
enter
decb
xor
mov
sub
dec
inc
push
les
adc
inc
ljmp
add
sbb
jae
out
pop
ficompl
out
call
add
dec
pushf
cli
cmp
dec
mov
rcl
add
pop
jg
out
adc
scas
outsl
pop
add
lds
subl
ljmp
xor
mov
aad
test
and
insl
rcll
icebp
fwait
xor
cmpsb
lds
add
xor
xlat
std
movsb
div
cmp
pushf
jge
repnz
ficoms
roll
jp
or
stos
daa
add
orb
loop
xlat
cmp
lahf
mov
sub
andb
or
cmp
mov
arpl
gs
sub
mov
cwtl
das
jnp
inc
pop
ja
jmp
enter
pop
jmp
adc
push
mov
call
or
in
inc
inc
lds
js
xchg
mov
xchg
cwtl
xchg
sbb
inc
outsb
jl
adc
aam
dec
rorb
adc
adc
inc
push
pop
cs
es
icebp
dec
imul
sub
push
dec
inc
mov
push
in
add
in
into
jp
movsb
dec
adc
or
inc
push
out
jne
mov
and
cltd
outsl
out
inc
push
addr16
popf
repz
jg
jne
or
cmpl
clc
arpl
pop
loope
je
jg
push
or
sahf
gs
sbb
mov
jge
daa
lret
pop
mov
jns
adc
adc
call
cmc
mov
dec
jecxz
je
daa
push
ljmp
sub
push
std
nop
adc
repnz
sbb
mov
lods
inc
xchg
pop
loop
or
and
aad
test
cld
int
dec
mov
fcomps
loop
sub
pushf
cwtl
xchg
data16
cmpb
lds
push
inc
pushf
andl
out
add
pop
testb
mov
call
fwait
mov
imul
imul
sub
sbb
repnz
push
shll
popa
jge
iret
nop
pop
xor
clc
push
mov
push
jecxz
cmp
xor
pop
pushf
push
popa
ror
dec
sub
mov
and
lods
sti
daa
out
inc
mov
dec
mov
popa
sub
xchg
rclb
sbb
lock
mov
jge
enter
lds
xchg
cmpsl
xchg
pop
sarb
inc
int
inc
adc
or
fld
imul
xchg
notl
mov
xor
test
sub
adc
adc
sub
in
lds
lcall
jae
add
push
ret
pusha
jmp
call
inc
clc
lret
lahf
push
shll
lock
incb
pusha
xlat
ficoms
mov
push
mov
shlb
inc
jo
and
test
insl
sub
add
std
push
outsb
stos
lret
dec
mov
clc
jno
pop
fdivrl
mov
shlb
shll
push
loopne
mov
and
fnstsw
inc
rcl
clc
icebp
push
lret
lods
cmpb
loope
ja
and
mov
cli
test
mov
leave
mov
add
idivb
mov
sub
cwtl
cltd
push
dec
outsl
ja
inc
add
sub
add
stos
lcall
dec
mov
pusha
adc
cmp
dec
cmpsb
mov
xor
imul
xchg
lods
iret
mov
pusha
out
add
std
shld
and
pop
loopne
mov
jae
xchg
jns
hlt
adc
jne
rolb
push
jl
arpl
je
dec
fnstsw
out
out
adc
xchg
test
pop
fcmove
bound
mov
das
cmp
dec
jo
xlat
and
loope
dec
fisttps
push
dec
xor
call
lods
out
xor
jae
lods
jp
out
fmuls
adc
pop
and
imul
or
arpl
pop
inc
push
subl
imul
xor
sbb
cmp
das
mov
add
arpl
lds
pop
lods
xchg
xchg
in
add
pop
js
cltd
cld
adc
scas
dec
mov
xor
ret
lods
pop
insl
repnz
es
movsl
jecxz
or
jae
jnp
aad
mov
cmp
mov
adc
dec
jmp
push
cmc
repz
mov
lock
jnp
gs
mov
or
and
lahf
cltd
cmp
fs
cwtl
inc
or
leave
pop
hlt
leave
or
es
pop
ret
dec
ss
xor
mov
sbb
arpl
mov
stos
sub
push
or
pop
call
mov
xor
or
pop
aas
cli
das
stos
add
sbb
inc
sbb
repnz
les
sbb
mov
pop
mov
aaa
nop
xor
xchg
outsl
lea
mov
loop
cwtl
mov
add
mov
cmp
or
add
repz
cli
stos
arpl
dec
test
outsl
mov
mov
loopne
mov
jg
sbb
mov
addr16
sub
les
dec
movsl
pop
xor
sub
sub
fcomps
pusha
sub
shl
mov
jne
divb
fisubs
cmp
pusha
jecxz
mov
in
sbb
ljmp
pop
sub
pop
pop
dec
imul
fwait
xchg
ret
xchg
fiadds
clc
popf
mov
pop
adc
movsl
add
mov
lods
sti
movsb
xor
out
sbb
mov
lcall
adc
adc
sub
sub
cmp
dec
gs
inc
sub
fstl
out
fildll
into
xchg
decl
sarb
push
xchg
and
push
inc
imul
mov
mov
dec
out
pop
out
loopne
cld
inc
push
cmpsb
and
and
jno
stos
mov
lods
sbb
je
nop
test
in
jb
popf
or
mov
inc
mov
jbe
dec
stc
mov
mov
and
mov
dec
inc
int
xchg
insl
cmp
cmp
jo
cs
jo
adc
pusha
out
and
pop
and
shl
arpl
movsl
ficoml
ds
pop
outsl
xchg
stos
adc
xchg
mov
dec
hlt
sbb
cmpsb
cmpsb
aad
cmp
test
dec
andl
addr16
mov
add
ret
mov
xchg
inc
lahf
sub
inc
mov
cmpsl
fwait
rcll
dec
push
pushf
mov
adc
sahf
mov
and
sysret
nop
cmp
mov
nop
lods
push
aad
sbb
pushf
mov
jns
js
mov
stos
xchg
mov
lods
push
jbe
add
fildl
hlt
cmp
dec
push
ds
dec
pop
jb
adcb
adc
cmp
jno
rclb
pop
mov
std
stos
inc
lea
pop
xchg
test
mov
pop
js
test
push
push
push
sbb
cmp
stos
test
lret
scas
outsb
ss
inc
mov
jmp
jne
test
mov
enter
mov
fisttpl
into
xchg
imul
or
push
adc
lret
inc
popa
dec
mov
cltd
jl
dec
scas
rclb
push
test
outsb
cli
dec
mov
mov
pop
fnsave
ja
in
sub
lahf
sbb
scas
dec
leave
into
xchg
inc
outsl
push
dec
cmp
pop
sahf
cmp
test
add
xchg
pop
pusha
mov
popf
dec
inc
or
jno
inc
and
repz
pusha
mov
push
aad
dec
cmc
xchg
dec
sub
and
sbb
dec
iret
les
pop
movsb
mov
mov
mov
mov
popa
or
inc
lock
xor
sti
push
movsb
adc
dec
push
aad
invd
xlat
xor
scas
dec
sbb
dec
stos
jecxz
fwait
xchg
mov
sbb
adc
shlb
jne
lret
scas
rcrb
mov
lahf
mov
test
xchg
lret
stc
mov
cmc
stos
imul
add
sti
inc
mov
jbe
into
or
mov
int3
pop
test
cmp
add
cmp
pop
xchg
lods
sub
enter
cmpsl
push
jl
daa
adc
adc
addr16
jg
iret
xchg
test
xchg
out
cmp
inc
inc
out
ficoml
dec
dec
mulb
pushf
dec
sbb
mov
push
sub
out
movsl
push
xor
int
and
sbb
cmp
add
test
rorl
shl
cs
movsl
xorb
xor
pop
pop
cmp
push
mov
push
loop
dec
rclb
push
adc
xor
lret
cmp
add
dec
inc
lods
ret
out
fcom
jnp
xchg
or
inc
scas
repz
fdivl
lcall
xorl
sbb
xor
call
stc
ret
push
add
and
push
jno
dec
stos
pop
out
outsb
mov
xor
lcall
test
adc
shlb
movsb
add
jns
adcb
add
filds
ja
rcrb
cmpsl
jl
int3
xchg
lcall
jge
nop
in
sub
adc
push
js
adc
xor
sti
dec
ss
mov
pop
repz
mov
or
iret
std
or
xchg
ljmp
pop
sbb
pinsrw
mov
xchg
mov
sbb
adc
cli
jmp
mov
jle
xchg
in
sub
outsb
std
test
gs
clc
mov
push
fcmove
mov
test
in
outsb
in
test
push
mov
ja
push
in
in
aaa
inc
xor
mov
mov
mov
sub
movsl
xchg
cld
clc
mov
dec
ljmp
sub
adc
call
ljmp
push
test
lock
push
dec
testl
repz
jp
add
dec
mov
rol
dec
fdivrp
push
push
dec
cld
jne
imulb
add
jns
loope
xchg
mov
adc
jbe
or
cmp
xchg
jb
aas
xor
repnz
sub
push
xchg
cmp
stc
in
lea
cmp
or
jbe
inc
scas
jecxz
repnz
mov
inc
adc
inc
pop
popf
nop
mov
cs
loopne
hlt
cmpsl
mov
fbstp
pop
pop
pop
ljmp
mov
and
sub
pop
adc
cmp
mov
adc
jnp
jb
mov
xchg
fsubs
fildll
sbb
lock
push
cmp
lret
rorl
frstor
mov
xchg
pushf
add
xor
push
and
lods
sub
and
cld
push
mov
dec
adc
lret
push
sbb
xor
test
stos
cmpsl
scas
lcall
push
clc
mov
aad
in
imul
add
push
aad
xchg
comiss
push
mov
lret
fucomp
push
js
xlat
pusha
sbb
dec
jnp
and
jmp
xchg
mov
js
mov
sub
clc
mov
jle
mov
sbb
mov
pop
cmp
push
les
adc
mov
jno
rolb
fucomip
mov
test
dec
cmc
movsb
stos
ret
xchg
xor
add
popa
push
std
dec
pop
mov
into
dec
dec
subb
and
mov
pop
mov
popf
pop
xor
sub
test
add
hlt
mov
cmc
test
jnp
inc
mov
nop
imul
xchg
fcmovnb
xchg
sub
pop
ja
push
jb
dec
scas
adc
outsl
xchg
cmp
and
xchg
lods
pushf
mov
cmp
repz
pop
push
je
das
cli
add
xchg
pop
hlt
pop
in
cmp
jge
mov
mov
jbe
loopne
xor
popf
sbb
enter
pushf
shl
shlb
sub
xor
jmp
addr16
sub
loope
aas
loop
adc
add
addb
sbb
aas
cltd
mov
pop
lea
sbb
push
cwtl
or
and
sbb
fdivrs
into
loopne
xlat
sub
mov
mov
shr
pop
push
jle
lret
loopne
jb
inc
xchg
inc
pop
sub
mov
out
lods
bound
clc
mov
xchg
cmp
dec
pop
mov
icebp
test
sub
mov
lea
sbb
imul
lahf
push
fsubs
sbb
xchg
xchg
fldt
jmp
stos
movsb
mov
xchg
pushf
xchg
js
and
or
adcl
fwait
or
test
inc
jg
lret
xchg
dec
push
xor
inc
stos
dec
pushf
jge
lds
mov
repz
sbb
xchg
xor
enter
aad
push
in
dec
xor
jle
pop
fisttpll
popa
mov
mov
daa
movl
fstps
scas
sbb
lds
push
sub
xor
push
aaa
pushf
mov
daa
popf
out
pop
fidivs
in
lcall
out
cld
dec
jmp
push
std
mov
mov
jmp
mov
movsl
repz
ljmp
xor
add
jecxz
mov
jle
sbb
xor
xchg
sub
aam
cmp
sub
adc
fwait
adc
lahf
jbe
mov
test
int
push
dec
sub
gs
and
stos
push
sub
mov
popa
fucomip
push
dec
std
into
and
pop
hlt
mov
lds
ss
sub
jge
adc
popa
jne
sti
xchg
outsl
xlat
test
fstps
sahf
sub
inc
jg
test
jecxz
sbb
cmp
into
out
loope
outsl
ljmp
push
in
ljmp
fsubl
inc
sub
dec
std
add
lds
hlt
fs
inc
icebp
bound
out
sub
test
sub
add
sub
and
sub
push
daa
or
push
push
xchg
leave
sbb
mov
dec
shll
es
inc
movsl
adc
push
outsb
cwtl
cmp
fsub
scas
mov
mov
es
sbb
jmp
xchg
aaa
es
pushf
mov
mov
cmpb
jbe
push
cmc
sbb
mov
aad
lock
sti
rorl
popa
lahf
test
jmp
in
sub
sbb
stos
inc
rcl
leave
lret
shr
adc
and
icebp
daa
int
sub
adc
push
sbb
cltd
lahf
mov
mov
lahf
xchg
popa
test
clc
les
xchg
or
mov
xchg
push
scas
sahf
addb
cmpb
lcall
andb
lret
test
jnp
loope
test
pushl
pop
xchg
cmc
or
cmp
xor
scas
rclb
je
lods
push
pop
xchg
xchg
add
int
cmpl
test
imul
mov
mov
jns
hlt
or
and
xor
lea
dec
pusha
les
push
lahf
test
mov
sub
stc
mov
out
sub
aas
cmc
rorb
out
push
dec
popf
mov
mov
pop
aam
das
mov
jle
imul
fsubr
movsb
cs
jo
rcrl
iret
jne
rorl
out
fs
xchg
mull
push
test
mov
mov
or
rcl
lea
jl
and
outsb
mov
fbld
mov
mov
pushf
mov
lea
ljmp
jecxz
mov
ror
mov
daa
sub
shrb
cwtl
pusha
in
dec
mov
dec
mov
aam
daa
in
inc
pop
js
sbb
lahf
lret
fisubrs
mov
jl
mov
cmp
test
sbb
pop
in
cmc
lds
jp
arpl
mov
orl
fs
in
popf
scas
pop
std
mov
push
stos
dec
push
test
pop
cld
fistps
add
lds
cs
jbe
push
call
sti
pop
push
xor
fistps
shll
insb
adc
xor
mov
hlt
xchg
stc
jle
jmp
mov
jmp
pusha
adc
push
pop
dec
and
push
cmp
xchg
aas
jb
dec
cmp
rorb
xchg
push
rclb
or
movsb
leave
mov
gs
adc
mov
sub
outsl
mov
enter
in
sub
les
inc
cltd
push
in
xchg
scas
popa
mov
sarb
jl
mov
xchg
out
ret
dec
rcr
sub
jge
test
cmp
ret
ljmp
stos
push
lret
aaa
or
push
adc
jecxz
mov
hlt
cwtl
or
add
mov
lahf
mov
sub
push
inc
cmpsb
ret
push
int3
xchg
nop
addr16
add
ret
imul
hlt
ljmp
sub
out
fs
ds
dec
xor
inc
pushf
or
outsl
sbb
jmp
std
imulb
enter
jno
mov
enter
cmc
cld
mov
push
mov
push
ja
add
push
leave
dec
cld
popa
add
out
cmc
cwtl
pop
jb
stc
sbb
add
mov
imul
insb
mov
mov
lods
fsubrp
pop
add
adc
loopne
sbb
push
aam
dec
jecxz
xchg
sub
jle
fcomps
lds
outsl
push
lcall
sbb
mov
outsl
test
imul
mov
inc
mov
ficoml
adc
sar
mov
lea
mov
cltd
dec
pop
xchg
or
shlb
or
mov
sub
shlb
and
arpl
rcl
xor
xchg
cmpsl
das
outsb
jle
mov
push
in
pop
sbb
and
divl
xchg
pop
in
ss
push
pop
cli
test
in
adc
mov
cmpsb
stc
shl
or
push
cld
in
pop
sbb
pop
movsb
in
ds
outsl
das
or
inc
fwait
out
fwait
call
jp
addr16
lea
cmp
mov
dec
inc
mov
in
pop
je
or
dec
shll
nop
cmp
loop
rcrb
push
lock
ret
lds
lods
pop
pop
ret
lock
pop
call
mov
mov
nop
lret
movsl
pop
pop
div
insb
mov
pop
lcall
or
xchg
lock
call
and
andb
xchg
ss
adc
sub
out
push
inc
stc
adc
mov
sub
lods
cmp
mov
sub
push
xor
ficoml
bnd
mov
stc
mov
pop
pop
fistl
lock
ljmp
xchg
mov
xor
das
add
mov
xchg
outsb
lahf
nop
inc
jae
adc
ja
fcompl
sti
mov
out
call
or
push
cwtl
pop
or
pop
lock
lahf
fwait
adc
pop
imul
sbb
pop
or
jl
jmp
jns
lds
mov
rcr
icebp
jns
dec
mov
fistl
add
pop
sub
mov
add
pop
outsb
call
jecxz
mov
outsb
xchg
and
jmp
cmpsb
iret
and
cmp
xchg
mov
push
les
popf
dec
mov
clc
cwtl
mov
roll
fidivs
or
rclb
or
push
je
aad
imul
cmpsb
jns
cmpsb
xchg
fdivrl
nop
add
adc
push
dec
decl
fcom
repnz
xor
xchg
ror
dec
xor
mov
in
in
mov
stos
out
test
mov
jge
fimull
pop
lcall
jge
js
dec
pop
cmp
mov
mov
jno
out
scas
daa
dec
pop
push
push
loope
sbb
inc
jmp
adc
aam
mov
das
xchg
adc
fistps
pushf
add
mov
fwait
roll
mov
xchg
rcrb
test
pop
cmp
mov
rolb
aad
adc
call
sub
xor
int3
push
adc
jle
icebp
call
cmp
in
push
xchg
mov
enter
push
pop
xor
fs
mov
sub
clc
push
inc
jge
das
cmc
fs
push
sbb
add
bound
or
pop
pop
sub
fwait
arpl
dec
fdivp
outsb
xor
and
add
out
xchg
insb
mov
fnstenv
sbb
xor
loopne
int3
mov
ss
jae
mov
adc
xchg
repz
jmp
xacquire
xor
push
insb
jne
enter
popa
pop
or
jns
xor
in
scas
movsb
add
lea
jb
or
xchg
jb
fldcw
outsl
jl
outsl
into
into
or
mov
jo
push
lock
xlat
jge
xor
dec
cmc
add
jbe
push
jbe
dec
jp
lahf
xor
sub
jb
inc
sbb
mov
sub
cs
and
aas
adc
cmp
les
in
lods
in
in
addr16
rorl
push
popf
test
lods
xchg
mov
mov
cmp
pusha
pop
or
insb
mov
mov
mov
repnz
mov
push
dec
jge
iret
sbb
add
ljmp
dec
rorb
jns
fnsave
fwait
mov
cmc
add
loop
test
fbld
ret
mov
jb
inc
pop
ror
pop
addr16
dec
adc
cmp
decb
sarl
xchg
bound
jnp
push
nop
cmp
jl
cmpsl
and
push
jmp
frstor
lods
dec
push
pusha
jae
inc
dec
aaa
cmp
subl
mov
mov
out
xor
xorb
mov
and
sbb
inc
dec
inc
xlat
leavew
xor
loop
fisubrs
mov
sub
pop
sahf
lock
xchg
bound
mov
jmp
arpl
xor
and
nop
imulb
scas
and
mov
xchg
inc
inc
inc
icebp
jle
push
or
rclb
test
dec
clc
ss
mov
jnp
xor
je
rcll
sub
movntq
out
sub
pop
add
push
lods
push
scas
mull
dec
xor
loope
inc
test
mov
or
xchg
pop
lea
xchg
je
ret
xchg
xchg
mov
outsl
xchg
aas
mov
aaa
and
xor
jo
dec
repz
mov
loopne
in
dec
inc
enter
inc
push
mov
js
mov
fildll
cmp
mov
push
mov
and
mov
push
or
pop
cmpl
js
je
inc
aam
mov
lock
jle
cltd
lea
or
js
cltd
mov
mov
sbb
fs
jle
mov
fnstenv
cmp
inc
shl
and
jo
xchg
in
push
lea
sahf
mov
push
repz
das
inc
sub
sub
inc
roll
sub
xchg
mov
cwtl
and
pop
push
inc
xchg
inc
pop
dec
adc
test
pop
inc
xchg
cmp
insb
cltd
sub
cmp
xor
sahf
jb
shr
scas
mov
jb
loopne
fists
cmpsb
test
fucomip
cld
pop
mov
add
scas
mov
mov
xchg
and
xor
lods
mov
mov
fidivl
enter
outsl
pop
jmp
sbb
cmpsl
gs
mov
sbb
or
jnp
loopne
call
xor
jne
rcrl
add
insl
repnz
inc
sbb
xchg
stos
or
cltd
push
ljmp
gs
cli
push
cmp
or
lret
add
sbb
push
push
lea
and
mov
dec
lock
test
mov
out
jmp
test
std
xchg
lahf
mov
xchg
mov
pop
hlt
or
rcr
out
inc
lret
dec
xor
dec
mov
sub
sbb
loop
pop
pop
mov
jo
popa
mov
ror
adc
aad
jo
dec
outsb
loope
fucomip
xor
clc
mov
pop
clc
imul
cmp
hlt
jno
adc
jns
loope
cmp
xchg
cmp
enter
pop
movb
xor
mov
xchg
mov
test
loop
inc
test
ss
mov
in
mov
jbe
cmp
pop
or
mov
add
lock
fstpl
mov
or
pop
aaa
mov
xor
push
push
cltd
and
sbb
mov
shlb
mov
cmp
fsubrp
cmpsl
cwtl
add
sub
pushf
ret
aam
jns
test
pop
bound
sbb
movsbl
mov
cltd
mov
adc
cltd
std
mov
mov
pop
shrb
cwtl
enter
out
inc
jmp
fadds
test
cmp
call
jl
adc
fs
jbe
cmpsl
and
aaa
jp
pop
push
fsts
dec
fucomp
dec
xchg
shll
aam
mov
adc
cmp
sub
test
test
ljmp
xorb
dec
inc
das
jo
movsl
jp
pop
mov
shl
lea
and
leave
jb
out
lods
xchg
gs
lahf
aaa
push
mov
sarl
inc
mov
insb
es
call
add
cs
cmp
and
sub
enter
inc
aas
adc
and
jns
pop
push
push
cs
jle
aaa
mov
jae
jl
mov
pop
mov
and
rorb
inc
ret
push
sbb
mov
pop
not
jg
add
push
mov
add
insl
shll
jb
das
push
ja
cli
test
loope
jno
test
cmp
mov
sub
shlb
loop
aad
cmc
adc
inc
shll
cmp
pop
mov
imul
notl
pusha
sub
fidivs
fsubrl
inc
dec
movd
pop
jle
popa
aam
notl
sbb
pop
mov
lahf
inc
pushf
data16
dec
pop
std
sub
pop
out
adc
pop
add
pop
jne
gs
mov
inc
sti
shl
cmpb
ss
nop
iret
test
lds
outsl
jmp
int
fs
popa
sub
pop
fdivrs
jecxz
in
sub
js
mov
popw
lods
jp
mov
dec
andl
and
mov
jo
outsl
test
push
js
aas
pop
xor
lahf
orb
fcmove
mov
lds
das
or
lcall
movb
cs
pop
popa
imul
mov
mov
fisttpll
cmp
pop
movsl
inc
sbb
mov
xchg
imul
xchg
add
xchg
xor
jge
rol
bswap
movsl
cmpb
xor
jnp
insb
fsubrs
xchg
call
push
mov
mov
leave
mov
adc
jo
inc
out
mov
rorl
loop
add
in
mov
scas
movsl
cs
inc
add
jb
cmp
scas
push
lods
dec
es
test
and
pusha
mov
scas
ljmp
test
sbb
sbb
push
cmp
ret
int3
sbb
jecxz
es
xor
mov
mov
sub
mov
cmc
push
push
ljmp
insl
stos
cli
sbb
lock
mov
adcb
aaa
lock
addb
xchg
push
scas
inc
movsl
mov
jbe
mov
sub
adc
sbb
jg
adc
fidivrl
push
cltd
add
pop
es
cmp
push
into
lock
sub
pop
scas
mov
or
dec
or
push
bound
xor
fwait
packsswb
in
jae
push
or
rcrl
jge
and
addr16
mov
jle
fisubl
aam
rep
dec
sub
push
adc
pop
cmp
test
jns
jne
sbb
call
cld
mov
js
js
cs
ljmp
les
and
aas
inc
jb
int
cmc
movsb
inc
sub
mov
push
push
fdivrl
and
adc
adc
mov
and
scas
pmulhuw
hlt
mov
int3
das
and
sbb
fidivl
sub
aam
jle
cld
or
or
add
mov
add
inc
mov
outsl
icebp
lods
mov
mov
test
insb
or
dec
inc
cmpsb
pushf
fadds
ds
inc
aas
lds
xor
movsb
outsb
test
jo
je
jno
iret
sub
fnstenv
mov
leave
mov
and
jo
mov
test
and
aas
sbb
jnp
aaa
pop
dec
and
add
add
mov
or
mov
mov
push
aaa
mov
sahf
mov
ds
jp
add
fs
scas
xchg
fistps
xchg
push
xor
adc
xor
dec
decb
xchg
sub
test
aas
imul
out
jo
movsl
push
push
popf
add
into
fidivl
mov
stos
push
out
cmp
push
cmp
and
lea
nop
mov
ret
cs
inc
sahf
in
mov
sub
inc
mov
mov
push
or
add
sahf
add
xchg
jb
sub
std
jbe
push
cmp
jecxz
add
jmp
inc
xchg
es
out
mov
jle
popf
sub
lcall
mov
mov
push
ja
sub
cwtl
outsl
sub
mov
cmp
jge
repz
jmp
lcall
cmp
das
js
dec
pushf
mov
jb
lret
pop
mov
inc
addl
sub
jnp
stos
repz
fiaddl
sbb
popa
movsl
push
sbb
iret
jg
mov
add
mov
inc
jb
cmpsb
fisubl
test
daa
xor
stos
mov
es
insb
xchg
pop
push
lods
out
rolb
xor
shll
jns
inc
stos
fildll
repz
call
xor
or
xchg
xchg
sub
jl
ret
pop
pop
mov
push
jmp
pop
mov
adc
repz
das
cltd
dec
repnz
cmp
mov
push
or
arpl
mulb
cmpsb
push
cs
add
in
sub
xlat
cltd
comiss
fdivrs
pop
fsub
mov
jmp
lcall
movsb
inc
stos
rcrl
aas
mov
decl
jle
pop
mov
cmp
adc
nop
repz
mov
sbb
outsb
in
hlt
test
push
les
sub
pop
or
mov
add
mov
or
fs
pop
std
pop
repnz
aam
or
inc
test
jae
cmp
dec
clc
in
adc
mov
test
pop
popa
test
xchg
sbb
xor
xchg
xor
pusha
jecxz
pop
xchg
cs
dec
das
mov
pop
mov
mov
adc
movsb
stos
or
cmp
pop
or
mov
or
test
jecxz
imul
subl
addr16
inc
adc
mov
sub
cmpsb
loopne
mov
mov
inc
xchg
gs
shll
xchg
mov
push
sub
or
sti
lret
adc
mov
pop
pushw
mov
shl
out
push
cld
add
ljmp
popf
in
xchg
push
ljmp
je
and
ss
out
inc
mov
je
or
or
mov
mov
xchg
out
adc
sub
loopne
push
in
jnp
cmc
jns
rol
xchg
xor
mov
mov
mov
mov
mov
and
or
in
arpl
pop
ja
mov
or
outsl
add
popa
lods
repz
lahf
leave
dec
jge
add
sti
mov
add
dec
lock
ds
clc
jb
fstl
mov
dec
stos
icebp
mov
in
jg
xor
int
ret
pop
pop
xor
mov
mov
inc
ret
ds
test
push
lcall
xchg
icebp
data16
in
fmul
add
xchg
mov
sbb
sti
xchg
inc
mov
push
mov
xor
neg
shlb
sub
cmpsb
add
nop
inc
arpl
push
pop
loopne
jmp
sbb
outsl
add
mov
lcall
aaa
or
and
adc
cltd
pop
incl
mov
mov
pop
pop
mov
cmp
sbb
jno
jg
mov
mov
outsb
pop
inc
outsb
mov
jne
jo
mov
gs
pop
cmp
in
and
adc
add
adc
pop
adcb
adc
clc
icebp
mov
shrl
cmp
test
scas
outsl
icebp
pop
mov
bound
aas
insb
rcr
sarl
xor
insl
and
shl
mov
les
mov
xchg
or
mov
lods
dec
mov
pop
push
loopne
inc
popf
cmp
mov
nop
clc
mov
mov
sub
fistl
mov
pop
cmpsb
and
insl
shlb
cwtl
add
push
or
sub
dec
outsb
pop
pop
pop
xorb
data16
jb
test
inc
enter
cmp
movsb
pop
push
jo
icebp
lahf
jmp
leave
cmpsb
sub
xor
xor
es
dec
js
std
shrl
movsb
push
sbb
pop
xorl
in
pop
aas
xor
mov
xor
lret
mov
dec
pop
mov
mov
adc
push
mov
push
or
mov
fs
cmp
pop
imul
iret
and
cli
push
lods
nop
jmp
rep
aaa
dec
mov
xor
insl
and
xchg
pop
cmpsl
shll
cmpsl
lcall
daa
orb
movsb
imul
in
lods
mov
loopne
mov
and
inc
dec
inc
imul
cmpsb
hlt
jmp
or
jno
mov
mov
das
xchg
fadds
jecxz
orb
sbb
sti
popf
jo
rol
or
sub
loop
out
sub
xor
into
fisubrl
mov
test
cmpsl
mov
aam
xchg
imul
mov
inc
or
out
subl
jns
test
sub
mov
cmp
and
aad
mov
pop
push
pop
cmp
fptan
and
pop
aas
popa
mov
lds
xchg
sub
push
cmpsl
cmp
adc
xchg
xlat
fimull
jmp
xchg
sbb
sub
cmp
test
jnp
sarl
out
jns
xchg
cmp
xchg
das
and
out
push
xor
sub
mov
negb
cmc
movsl
rcll
xor
insl
repnz
mov
xor
out
or
fs
rorl
insl
xchg
adc
mov
sub
and
leave
fucomip
add
fisubl
cld
mov
dec
xchg
jge
jo
xor
mov
cltd
mov
sahf
and
jmp
stc
movsb
leave
jecxz
fadds
into
mov
push
and
ja
loop
filds
sahf
stos
cmp
mov
or
jae
pop
lea
test
push
cltd
out
xchg
sub
push
inc
inc
xorb
test
cld
pushf
xchg
pop
mov
add
mov
xchg
out
mov
cmp
dec
test
je
push
jp
xchg
mov
inc
push
in
test
shlb
jnp
jbe
mov
jp
pop
and
loopne
in
mov
sbb
dec
mov
add
xor
fwait
pop
push
xchg
sti
aas
rcrl
and
faddp
lods
jne
jnp
lret
imul
and
lods
pop
nopl
das
mov
and
pushf
sub
adc
testb
jne
repnz
scas
inc
sub
fnstcw
push
cs
popf
pusha
lahf
jno
mov
test
mov
jecxz
je
ficompl
scas
lret
aas
movl
mov
icebp
add
and
sub
cmp
das
inc
imul
es
stos
sub
je
mov
sbb
jg
in
call
jne
adc
mov
rcrl
test
sti
add
repz
stos
aad
or
adc
mov
xchg
cmovg
jns
push
je
pop
lret
pusha
daa
push
add
pushw
push
sub
hlt
cmp
lahf
inc
and
int3
sbb
add
arpl
cmc
sbb
negb
ljmp
cli
xchg
mov
pop
add
outsl
add
cli
xor
push
scas
cmp
ja
lods
sub
mov
mov
iret
call
ja
cltd
ret
pusha
popa
mov
jae
dec
jne
jmp
mov
mov
aam
pop
mov
lock
mov
xchg
and
push
stos
jns
xchg
sti
dec
addb
fdivl
or
jb
pop
inc
or
cmp
sub
inc
orb
jns
inc
lahf
out
dec
xor
cmc
cmp
pushf
stos
aam
or
in
pop
loopne
mov
in
push
and
jae
and
push
out
cmp
xchg
nop
into
mov
sti
sub
ret
jp
mov
dec
mov
lods
xor
pop
sbb
mov
insb
insl
xor
mov
adcb
rclb
fldt
and
stos
mov
xchg
sbb
dec
ja
adc
call
xlat
fs
fstpt
jl
cmp
sbb
cwtl
dec
xlat
add
mov
imul
into
ds
pop
add
dec
or
sbb
jae
data16
lods
scas
sti
aam
jecxz
imul
and
mov
xor
inc
ficompl
mov
shll
pop
jmp
cmpsl
stc
inc
pop
mov
in
bound
popa
fnop
in
jno
int
mov
jle
xchg
jecxz
and
mov
mov
andb
inc
add
add
call
stc
xchg
insb
mov
xchg
xchg
pushf
arpl
mov
popf
push
pusha
pop
push
cmovns
mov
dec
or
push
jecxz
mov
fldcw
cmc
clc
enter
leave
scas
int3
jecxz
mov
or
adc
or
cs
xchg
movsl
jno
hlt
outsb
sbbl
add
inc
rcrl
pop
inc
xchg
testl
push
test
xor
mov
cmp
jp
insb
stos
push
cmp
adc
pop
stos
mov
jnp
dec
cmpsb
xchg
imul
and
pop
mov
mov
in
cltd
lret
call
mov
adc
fistl
add
or
lods
dec
int3
sahf
enter
mov
shll
cmp
arpl
lea
loopne
inc
cld
fs
mov
push
mov
push
sub
inc
and
fdiv
in
nop
ja
xchg
pop
inc
pushf
jnp
xchg
or
aas
dec
mov
shr
loopne
rcll
into
aam
jns
bnd
add
sub
les
mov
andb
jle
fists
ret
fst
aad
cld
lods
mov
jg
imul
shlb
sub
pusha
inc
cmpsl
in
call
popa
mov
pop
xorb
add
or
push
js
data16
push
push
outsl
das
jae
jns
or
in
jb
iret
or
pushf
jnp
repz
add
subb
sub
inc
adc
adc
out
lahf
mov
lock
ret
repz
jmp
js
cmp
cmpl
outsb
out
sti
test
jae
int
push
fs
pop
mov
push
xchg
xchg
icebp
push
sbb
incl
test
push
inc
add
fwait
inc
lea
fwait
cmpsl
push
aad
loopne
cwtl
xchg
mov
int3
add
pop
push
ss
xchg
xor
sbb
lret
sbb
out
mov
hlt
cli
ljmp
mov
jb
sub
inc
lret
mov
and
addr16
push
cmpsb
and
out
aam
rorl
xchg
dec
adc
movsb
pusha
outsb
mov
shlb
push
aaa
sub
js
imul
pop
call
mov
push
push
lods
inc
dec
fsubl
nop
cmpb
sti
dec
rcrb
pop
paddq
mov
dec
pusha
sti
call
mov
mov
adc
out
sub
arpl
test
leave
inc
fsubr
inc
pusha
sub
xchg
pop
dec
or
decb
sbb
daa
xchg
fwait
cli
cmpsb
add
sub
xor
fstps
lcall
mov
xchg
xlat
aaa
and
imul
jge
lods
les
mov
cld
sbb
mov
dec
loopne
xlat
nop
sub
ja
adc
jno
dec
pop
mov
sub
fstp
arpl
fiaddl
sub
adc
les
mov
push
adc
out
loopne
jp
es
fcmovnb
jnp
dec
or
and
xchg
loopne
push
cmpsb
call
jg
outsb
lea
sbb
lds
fs
stos
lret
sti
mov
insb
icebp
fnstcw
push
lods
sbb
and
sbb
add
xlat
out
pop
lahf
lock
adcl
xor
pop
cmp
loope
and
mov
rclb
inc
mov
mov
and
mov
adc
js
pop
js
add
test
mov
sbb
or
ljmp
xor
lret
mov
mov
xchg
into
lret
dec
jecxz
je
xchg
ret
mov
scas
pop
push
adc
scas
push
inc
enter
pushf
dec
repz
clc
sub
add
fldl
cmp
fnstcw
add
adc
cmc
mov
popl
cmpsb
call
xor
dec
movsb
mov
outsl
sahf
cwtl
call
xor
inc
lcall
and
ja
aam
pop
bound
bound
outsl
pop
in
xchg
std
push
cld
adc
jae
jae
dec
in
das
jno
jg
lods
pop
fcomi
dec
sub
hlt
fmul
ja
dec
pop
cmpsl
sub
push
jnp
loop
arpl
or
sbb
fildl
dec
int3
xchg
push
inc
inc
insl
lods
mov
inc
cltd
lods
incl
pushf
lock
hlt
cmp
xchg
dec
pop
mov
xchg
push
pop
or
jae
movsl
add
and
adcl
cmp
mov
cltd
adc
int
sbb
stc
xor
cmp
push
pop
adc
pop
aas
rcrb
lret
xor
popa
sub
mov
in
das
pop
fcmovb
push
fistpll
mov
daa
cmpsl
mull
and
test
cwtl
or
ljmp
jo
cltd
dec
inc
andl
iret
mov
icebp
add
dec
push
sahf
imul
movb
imul
pop
loop
xchg
cmp
fsubrs
sbb
and
or
and
stos
or
lcall
js
in
popa
icebp
add
ret
add
xchg
xor
pop
and
int3
add
push
and
inc
leave
ljmp
daa
lds
ljmp
divl
dec
inc
dec
add
xor
mov
adc
lcall
jo
jg
and
cwtl
cmpsb
sub
xor
hlt
push
mov
mov
cld
cmp
push
mov
outsl
stc
cli
insb
sbb
call
imul
pusha
xlat
out
gs
inc
add
sti
mov
cld
xor
fcmovnb
es
je
mov
and
push
jmp
inc
mov
or
or
or
xchg
and
inc
adc
jo
cmpsb
adc
sbb
mov
xor
xor
test
and
xor
jbe
in
nop
cmp
shlb
into
inc
outsl
push
or
fisubs
aam
mov
pop
addr16
xchg
rep
push
sub
mov
push
cmc
cwtl
mov
mov
in
cmc
lahf
push
push
stos
das
movsl
fwait
cmp
xorl
fldl
inc
jns
xor
pusha
aam
ret
xchg
push
dec
and
daa
fldcw
inc
sbb
movsb
cld
mov
sbb
movsb
outsw
and
daa
mov
dec
sarb
bound
negb
adc
push
and
mov
mov
lea
ret
jmp
or
xchg
bnd
loopne
out
fsubrl
and
add
dec
fildll
and
je
gs
push
lods
dec
inc
push
lea
ret
sub
push
add
insb
popa
ds
int3
push
test
in
popf
mov
adc
or
lods
mov
pop
addr16
xchg
dec
sub
pop
inc
and
inc
cmpsb
fwait
mov
scas
cmp
add
and
sbb
or
loope
push
clc
scas
mov
lret
fwait
mov
mov
sub
fdivrl
adc
iret
les
mov
rclb
push
lahf
pop
push
cmp
xor
inc
imul
inc
jo
imul
mov
xor
push
jge
xor
mov
pop
pop
repnz
test
pop
into
int
lcall
lcall
jno
pop
icebp
ss
test
dec
aaa
std
andb
mov
pop
popa
pop
call
inc
loop
mov
hlt
mov
fstpl
cmp
call
mov
stc
pop
pop
or
mov
ret
push
sub
pop
xchg
fwait
out
je
sbb
inc
jae
lods
iret
addb
inc
lret
adc
mov
xor
xchg
add
pusha
in
out
lods
adcl
inc
rcrl
sti
in
mov
jo
push
cli
sbb
dec
or
sub
sub
xchg
aad
addr16
adc
jae
arpl
insb
inc
shl
xchg
lret
je
rcl
or
out
add
in
and
imul
test
jne
adc
xor
in
jecxz
pop
das
xchg
adc
cmpsl
stc
jmp
fidivrs
adc
daa
cld
dec
jle
sub
mov
jns
jl
mov
scas
sahf
mov
flds
xchg
mull
imul
dec
test
aas
and
jle
rorb
stc
gs
jne
jp
mov
lret
nop
mov
inc
pop
in
xor
aad
mov
fiaddl
fimull
cwtl
scas
xlat
mov
icebp
out
insl
inc
mov
push
push
insl
and
aad
or
fisttpl
xlat
jnp
mov
push
ljmp
hlt
cld
jl
pop
mov
aad
jo
mov
cmp
push
ja
sub
test
aam
xchg
test
aad
push
test
mov
shlb
fs
jne
jecxz
nop
rdpmc
fstpt
lea
ja
cmp
cli
xchg
ret
test
jmp
dec
add
xchg
push
sbb
mov
aas
les
jno
test
jo
or
jnp
xor
lods
mov
fcmovu
incb
push
rcr
jecxz
std
adcl
call
jno
xchg
push
or
pusha
inc
xchg
in
fcomps
push
movsl
icebp
das
adc
popa
lock
insb
push
push
mov
ljmp
jl
jp
mov
fldt
shrb
in
cs
sbb
mov
iret
xchg
cld
push
cmp
fwait
leave
push
outsl
dec
jge
jb
mov
and
push
div
add
aam
lods
into
dec
mov
outsl
xchg
push
add
inc
stc
push
jae
outsb
mov
pop
scas
in
out
gs
cmp
je
push
push
xchg
mov
ret
ja
dec
rcr
popa
int3
mov
push
orl
stos
leave
aam
adc
ja
ja
sub
push
push
out
dec
mov
sbbl
mov
rcll
jb
jne
or
xor
push
jl
and
mov
stc
cmp
addb
adc
xchg
jp
call
mov
pop
fldpi
in
jmp
sbb
test
xchg
or
and
daa
lahf
popa
sti
adc
shl
and
jmp
or
add
std
or
or
cmp
outsb
rolb
not
sahf
pop
fs
pop
cmp
pop
adc
lret
sbbb
push
lea
adc
cmp
xchg
mov
pop
and
repz
cwtl
sub
in
mov
movsl
imul
insl
cmp
lahf
sbb
fst
rol
mov
jg
ficompl
cs
stos
jno
loopne
call
and
mov
and
adc
inc
jl
xor
pop
movsl
das
mov
hlt
mov
dec
mov
jbe
loopne
out
jecxz
iret
xchg
shll
mov
mov
xchg
sub
out
inc
imul
add
into
scas
jp
xchg
icebp
or
pusha
imul
mov
pushf
mov
cmp
fisubl
xchg
lret
js
sub
sbb
aaa
pop
lret
or
push
cmpsl
loop
xchg
sbb
push
orb
xchg
je
fsubrl
fsub
pop
mov
jo
xor
xchg
fstl
pop
sub
mov
mov
xor
adc
addl
inc
add
js
jae
popf
out
out
jl
dec
add
ffreep
or
dec
xchg
ror
mov
insb
bnd
nop
in
sbb
mov
jg
roll
mov
in
rcll
add
inc
xor
hlt
test
xchg
cld
dec
idivl
lods
lret
cmp
loope
cmp
adc
adc
insl
divl
push
push
jmp
push
lahf
sbb
adc
int
add
les
and
ret
inc
pop
imul
or
mov
push
not
fmuls
xchg
push
out
push
js
push
and
dec
cmp
mov
push
mov
movsl
add
adc
or
dec
aam
out
leave
shrb
sub
push
loopne
test
jg
fdivrl
sbb
or
loop
arpl
dec
aam
mov
sub
add
xchg
dec
lcall
rol
std
pop
insb
pop
aas
mov
les
jl
ds
xchg
jns
fadds
cmp
out
jecxz
stos
adc
xor
inc
aas
repz
or
call
cmp
inc
push
pop
loopne
test
stos
adc
or
mov
out
xor
push
pushf
cmp
repnz
inc
sarl
test
divl
js
fsubl
loopne
imul
xor
shll
mov
aam
inc
fistl
mov
sbb
in
out
popl
and
out
maxps
inc
insb
xchg
movsb
xchg
mov
dec
push
pop
enter
xchg
xchg
fsts
lock
test
or
stos
mov
imulb
cmc
xor
dec
jo
add
das
add
add
push
pusha
std
dec
shrb
fdivl
imul
push
push
mov
push
jno
mov
xchg
or
movsb
dec
xchg
cltd
lods
sbb
ss
cmpsb
sbb
adc
cli
jl
jo
dec
outsl
es
int3
sbb
popf
imul
mov
or
sub
movsl
mov
xchg
add
and
cmp
xor
mov
aad
inc
mov
xchg
popf
ja
mov
lods
cmpb
xor
and
jne
mov
cli
movsl
das
es
dec
repnz
pushf
cli
idiv
add
dec
fisubs
les
out
sub
push
push
dec
jp
xor
into
jle
pop
mov
mov
pop
je
ret
mov
inc
shl
iret
lods
movsb
push
mov
pop
mov
and
sar
inc
dec
sbb
lret
and
jnp
and
pop
pop
pop
daa
ja
cs
pop
arpl
lret
das
mov
cli
xor
out
hlt
repz
cmp
jmp
inc
std
ret
rcl
pop
push
sbb
xchg
and
cld
pop
xchg
fcomps
js
idiv
cltd
mov
pop
jno
out
lock
xchg
push
or
mov
imul
inc
push
int3
repz
lods
cltd
push
dec
jb
xor
or
or
sti
fldln2
inc
xchg
insb
int3
stc
hlt
sahf
cld
mov
imul
in
ljmp
adc
xchg
aas
dec
push
test
pop
jne
xchg
es
lret
loopne
or
enter
sub
push
mov
inc
sti
mov
dec
nop
lock
ret
lcall
insl
push
lea
dec
call
sub
ficoms
xchg
lock
push
int
in
or
test
shl
sub
test
add
push
lock
sbb
jg
scas
sub
inc
aaa
in
jno
jne
leave
dec
and
mov
inc
push
lret
push
xor
sti
pusha
add
faddl
mov
outsb
push
push
xor
sub
xor
dec
or
dec
mov
enter
sahf
testl
aaa
movsl
push
pop
mov
sti
jne
jge
inc
push
les
push
dec
add
pusha
xchg
dec
or
test
pop
push
aas
das
imul
test
out
or
ljmp
mov
fcmovnb
je
lock
mov
inc
sub
dec
scas
mov
dec
inc
sti
iret
jns
popf
fsubrs
mov
out
popf
jb
out
loop
loope
jecxz
cmpsl
popa
xor
sti
pop
push
call
testb
jbe
movsl
jb
mov
mov
sub
sbb
scas
lea
call
bound
rcl
xchg
sbb
jecxz
sbb
fsts
test
mov
out
and
jmp
in
cltd
mov
cmc
dec
mov
outsl
or
and
ret
mov
lods
in
xchg
add
or
pop
call
jp
jecxz
xchg
jo
shlb
fs
xchg
push
xchg
icebp
arpl
mov
mov
mov
inc
std
dec
hlt
dec
or
sar
dec
movsb
je
int3
out
push
jno
insl
cli
imul
sti
jno
mov
mov
xor
and
push
mov
int
pop
cmpsb
fnstcw
adc
dec
insl
ds
push
shr
shll
mov
testl
push
stos
pop
inc
lock
mov
aaa
fsubp
jmp
or
dec
lret
hlt
scas
ret
mov
push
and
xlat
popf
and
sarb
jle
pop
int
lret
xchg
in
shlb
negb
inc
rcrb
sti
es
outsb
loopne
sti
inc
inc
add
push
mov
xor
xor
mov
ds
pop
pop
adc
or
movsb
xor
adc
xchg
xchg
dec
into
cmp
sub
push
xor
cmp
ljmp
les
pop
rorb
gs
orl
shlb
adc
orb
xchg
sub
mov
jo
and
push
leave
mov
test
psubd
cli
xchg
sub
in
enter
ret
rclb
lret
insl
jae
adc
imul
gs
fwait
divb
jns
ret
mov
mov
je
ret
inc
cmc
cwtl
dec
xchg
adc
adcb
aas
cli
dec
ss
or
push
arpl
jae
adc
push
mov
jne
xchg
mov
dec
pop
mov
lock
aas
pop
dec
stc
fsubrs
popf
and
das
dec
xchg
imul
popf
in
sbb
jne
cltd
cmp
mov
mov
push
mov
jmp
mov
imul
gs
aaa
fcomi
fbld
rorb
je
daa
push
sbb
ret
xchg
xchg
mulb
mov
scas
pop
ss
stos
int
movsb
scas
sbb
pop
pop
adc
test
in
jns
dec
lret
mov
push
push
inc
ljmp
xor
push
push
fisttps
dec
dec
je
pop
out
cwtl
addr16
push
nop
leave
pop
imul
push
xlat
lods
xor
pop
test
inc
inc
clc
add
jg
jl
not
enter
lahf
push
cmp
adc
mov
cmp
push
outsb
pop
mov
or
add
push
lahf
xor
sub
sub
push
icebp
repnz
insb
mov
mov
cmpsl
inc
cmp
cli
and
das
nop
in
arpl
das
mov
fwait
mov
mov
aam
pop
bound
cmc
cmp
jns
clc
in
mov
sub
cmp
mov
adc
fdivl
ljmp
movsl
outsl
hlt
jae
xchg
enter
idivl
rclb
cmpsb
push
pop
pusha
cmp
add
and
int
pop
or
push
mov
movsl
pop
jb
push
imul
ret
inc
mov
mov
pop
sub
jno
mov
xor
out
adc
lea
outsl
sbbb
lcall
aam
dec
push
scas
mov
imul
lret
cmp
fldcw
sbb
pop
push
jg
scas
popf
cmp
or
lock
loopne
sti
push
rclb
mov
lods
lds
aaa
sub
jo
xor
es
dec
xchg
adc
jp
mov
mov
outsl
jle
repnz
sub
test
sbb
mov
sarl
pusha
cmp
data16
into
sbb
mov
xchg
inc
clc
adc
push
pusha
pushf
ja
jge
pop
cli
inc
lcall
push
lods
dec
iret
cwtl
das
mov
mov
and
adc
xor
add
addr16
xor
mov
bound
xchg
dec
and
mov
lds
test
sbbl
xor
sbbb
daa
mov
xchg
add
add
add
sbb
or
out
loope
dec
jmp
mov
inc
scas
jp
lods
fcomps
xchg
cli
lret
fcomps
pop
daa
loopne
jmp
test
mov
push
in
popa
dec
pop
lret
jecxz
push
out
icebp
push
sub
mov
pusha
adc
pop
popa
push
fucom
mov
cltd
rcrb
jb
test
fsts
insb
jg
rcrb
out
icebp
cmpsl
jb
inc
movsl
jnp
cmp
push
mov
xchg
xor
xchg
in
ljmp
addl
outsb
in
add
popa
jge
je
pop
pop
ss
mov
faddl
jecxz
dec
xchg
mov
stc
xor
call
push
sbb
push
int3
out
dec
gs
sbb
sub
aaa
shrb
nop
ret
cmp
jnp
repnz
mov
push
stc
mov
in
movsb
insl
inc
lds
repz
mov
leave
inc
mov
inc
scas
sbb
push
xchg
mov
insb
push
cmp
or
popa
into
jl
movsb
mov
push
cltd
xchg
das
imul
imul
lret
sub
hlt
xchg
mov
add
dec
mov
data16
ret
addl
cli
xor
add
sti
jns
push
outsb
mov
repnz
push
into
leave
int
cld
mov
adc
mov
gs
aam
xchg
mov
into
or
test
sub
and
sbb
stos
mov
mov
bound
adc
sbb
outsl
sbb
ja
repz
or
clc
int
mov
popf
ret
dec
fcmovne
aaa
push
dec
ja
push
push
add
adc
mov
sti
or
aam
testl
or
and
push
or
aas
sbb
lcall
jle
stos
mov
mov
lahf
jae
jns
shll
sub
test
fmul
lds
xor
nop
sub
sbb
mov
cli
lcall
arpl
jp
lcall
sbb
lock
test
cmpsb
add
push
pop
mov
inc
int3
sub
mov
jle,pt
add
icebp
and
fs
sbb
pop
out
in
rolb
out
test
dec
sbb
in
pop
xchg
pop
xchg
jb
jae
rcr
insl
cmpsb
add
jae
jmp
push
lock
fs
cld
movsb
test
mov
dec
xlat
movsb
push
aad
cltd
rol
push
pop
adc
cwtl
mov
inc
mov
hlt
or
call
inc
loope
pop
mov
cmp
mov
xlat
leave
adc
idivl
inc
cmpsb
pop
cwtl
mov
add
sub
cmpsl
sti
pop
mov
mov
pushf
sub
xor
repz
mov
rorb
mov
out
icebp
add
andl
dec
pop
or
sub
xor
enter
xor
xor
cmp
movsl
pusha
jge
push
test
test
in
lss
xor
test
mov
scas
inc
adc
mov
mov
arpl
and
mov
jmp
sub
jo
push
mov
pop
pop
leave
or
dec
pop
sub
mov
jbe
stc
loopne
jmp
mov
mov
les
cmp
inc
shll
pusha
subb
dec
dec
xchg
xor
sbb
std
rorl
or
mov
xor
xchg
jae
and
scas
jecxz
xor
sub
and
fisubrs
test
jae
dec
inc
mul
sub
outsb
ljmp
inc
popa
les
leave
mov
cmp
imul
cmpb
pop
decl
or
jg
pop
shr
shll
ja
inc
fwait
fs
sub
in
loope
addr16
push
adc
in
aam
mov
in
xor
fnstsw
hlt
imul
push
push
mov
je
and
jb
jge
mov
sub
inc
gs
testb
sbb
vunpckhps
or
sub
mov
mov
add
sbb
sub
add
insb
repnz
mov
jmp
dec
nop
bound
and
shlb
pop
push
xor
dec
aas
add
test
or
in
xor
daa
mov
xchg
lods
lret
push
aaa
pop
cmc
jmp
aad
roll
fistpl
jb
rcll
pop
add
pop
mov
cmp
scas
fucom
jl
enter
xor
repz
fisttpll
push
insb
or
mov
adc
xchg
add
in
imulb
imul
xchg
push
jl
fucomi
fiaddl
dec
add
mov
adc
inc
xchg
adc
push
loopne
jbe
fstpl
push
mov
sub
cli
and
jle
cmp
lahf
insl
mov
sub
mov
cmpsl
ljmp
push
sub
out
hlt
or
inc
cld
aam
mov
xchg
cld
out
jbe
jle
ljmp
jecxz
add
shlb
mov
scas
add
xchg
push
xchg
push
and
scas
adc
xchg
dec
movsl
scas
push
mov
mov
jl
add
ret
add
sbb
ds
ret
cmp
sar
adc
add
push
and
stos
lea
mov
cmp
cmpsl
sub
int
and
and
jle
jo
add
adc
stos
jp
mov
dec
add
xchg
adc
in
movsb
pop
or
ficompl
inc
pop
cs
rcll
xor
cmp
add
lcall
or
push
aaa
and
aas
xchg
dec
pop
loopne
cld
insb
dec
add
hlt
cmp
or
fdivr
pop
dec
popa
cmpsl
stos
push
fs
ret
mov
popa
ja
ret
xor
lods
bound
lock
iret
inc
sti
push
sub
lret
mov
aas
call
xor
insl
insb
outsl
jno
lds
stos
cmp
jmp
xlat
inc
push
jl
inc
popa
jmp
test
adc
sbb
sub
and
test
roll
jg
scas
int3
xlat
inc
xchg
mov
lods
or
xchg
push
daa
push
imul
jp
and
push
pop
cltd
mov
mov
fwait
lods
pop
cli
mov
jmp
and
test
popa
xchg
xchg
ja
je
sub
jns
xchg
lds
push
mov
popa
test
pop
add
mov
cmp
jg
sbb
in
testb
std
jecxz
push
pop
inc
xor
add
jno
dec
adc
xor
pop
mov
arpl
mov
lea
cwtl
movsl
mov
dec
fwait
lret
jle
push
mov
inc
pop
mov
lea
aam
icebp
les
iret
test
les
xor
lret
ja
rorl
xor
pop
addr16
sub
mov
cmp
addr16
dec
jae
test
lcall
popl
test
mov
pop
gs
in
jl
xor
imulb
lcall
fwait
popf
cld
clc
repz
arpl
test
mov
mov
dec
enter
pop
popf
xor
int
push
xor
pop
fwait
xchg
inc
mov
xor
movsb
pop
pop
testb
pusha
push
aaa
jnp
and
push
pop
dec
mov
jg
imul
scas
fisttpl
mov
out
or
mov
cmp
cmp
jae
stos
mov
jecxz
sub
jnp
or
pop
sbb
sahf
sbb
lods
loopne
movsl
push
pop
ss
jae
mov
ret
lock
aad
cmc
ret
sbb
inc
rclb
mov
ret
cli
mov
mov
lahf
lods
repz
lret
and
adc
mov
stos
cmp
mov
iret
jge
sub
cmp
adc
push
inc
mov
add
int3
xchg
mov
and
push
out
dec
enter
in
or
mov
xlat
pop
adc
mov
jns
je
push
int
pop
mov
stos
cmc
int
insl
sub
imul
push
inc
jae
loope
ljmp
lcall
add
pop
push
add
add
add
imul
lods
sbb
or
popf
ret
icebp
cltd
push
xchg
test
mov
sub
ljmp
movsb
sti
cmp
iret
cmc
or
jle
movsb
or
dec
movsb
movsb
mov
push
cmp
and
ljmp
bound
cwtl
lcall
vpcmpeqd
lea
jno
jp
dec
in
fisubrs
and
aas
rcrb
xlat
pop
sahf
xor
rcl
mov
mov
mov
dec
repnz
in
sbb
and
cmp
addr16
add
lods
push
repz
iret
icebp
hlt
pop
inc
outsb
push
pop
cwtl
int
jg
inc
adc
ljmp
jbe
cmpsb
xchg
mov
aas
and
push
push
push
cmpb
enter
test
jle
cmp
daa
lods
outsl
pop
js
adc
push
inc
xchg
xlat
mov
cmc
ja
sbb
or
imul
clc
movsb
cltd
lret
daa
sti
push
leave
nop
dec
mov
and
iret
repnz
adcb
jmp
cmp
and
dec
popa
sbb
outsb
test
mov
ret
rorl
fdivrs
xchg
out
cmpsl
int
repnz
mov
push
sub
inc
stos
pop
jns
mov
push
lock
test
shrb
inc
pushf
mov
cmc
arpl
sahf
mov
cs
ja
pop
jo
pop
pop
pop
cmp
and
mov
mov
popf
push
test
adc
and
in
sub
mov
lret
loope
pop
pop
leave
push
pop
mov
and
sub
dec
sub
jns
inc
push
nop
fstl
ja
scas
or
test
lea
in
xor
adc
test
xlat
fwait
xor
xor
lret
xor
fildll
in
push
jp
or
mov
fdivrl
push
outsl
sub
push
ja
adc
lret
mov
test
popf
aad
dec
inc
jo
jecxz
or
push
cmp
fucomip
or
imul
jecxz
cli
daa
mov
inc
inc
mov
mov
jg
sbb
ficomps
cmp
xor
dec
bound
aas
sub
sub
lahf
popl
into
int
or
pop
ss
dec
movsb
dec
ja
push
add
fldenv
jge
lahf
ljmp
mov
dec
fnsave
pushf
hlt
das
pop
sbb
xor
bound
adc
dec
jmp
fistps
mov
lahf
pop
pop
sub
in
outsl
popa
adc
mov
inc
stos
pop
incb
inc
push
jmp
cld
jp
add
xchg
cmp
push
add
jne
lret
shl
mov
lret
xor
and
and
mov
and
ret
jb
push
lcall
fisubs
fwait
js
sub
aam
cld
pusha
pop
inc
popa
add
sub
dec
insl
adc
or
xor
imul
pusha
stc
dec
push
mov
and
add
pusha
cmpsb
pop
jns
sub
insb
jg
daa
in
and
negb
loop
aad
ljmp
loop
jge
push
jmp
loope
call
sub
daa
and
pop
out
pop
fwait
sarl
mull
ret
movsl
sub
fucomp
mov
mov
pop
insb
mov
aam
cmp
xchg
fdivrl
xchg
das
dec
jns
in
mov
mov
dec
cmp
nop
push
int
mov
dec
mov
push
sub
fidivrl
cmp
je
sbb
and
lret
ror
adc
cmpsb
cmc
rol
jb
mov
push
xchg
lock
cli
les
sbb
out
adc
loope
xchg
test
inc
sbb
push
movsl
call
dec
xchg
incl
inc
pop
ret
inc
sbb
pushw
mov
and
sahf
stos
cs
lds
cmp
cmp
iret
lahf
call
sbb
fcompl
mov
mov
xchg
push
pop
cmpsl
jb
out
adc
inc
ljmp
lods
std
sub
shll
cltd
rcl
or
pop
pop
cmp
mov
jl
push
out
adc
fwait
pop
and
push
pop
ret
pop
adc
sti
inc
daa
fdivl
cmp
and
xlat
in
cmpsb
xchg
cld
mov
repnz
xchg
fldcw
mov
push
add
movsl
dec
xchg
insl
add
dec
aaa
jg
adc
cmpsb
xor
lds
in
adc
inc
repnz
stos
mov
dec
sbb
std
adcb
int3
xchg
jnp
ja
popa
out
jle
call
and
movsl
sbb
xchg
arpl
xlat
inc
mov
dec
into
xchg
dec
mov
jecxz
push
push
push
mov
decb
mov
or
dec
aaa
fcoms
test
ljmp
addl
imul
or
mov
ss
aas
fiaddl
ror
cmp
aam
cmpsl
sub
dec
cld
xchg
xor
out
lcall
ret
sub
cmp
dec
cmp
outsb
jg
loop
scas
fwait
cmp
add
fsubr
cmp
sub
fwait
mov
and
push
mov
sbb
js
hlt
inc
inc
pop
push
adc
sbbb
popf
xchg
sti
push
sub
loop
or
jp
and
mov
xchg
in
adc
push
jbe
cmpsl
ljmp
mov
stos
js
and
aam
push
addb
dec
mov
into
lds
scas
ret
xor
mov
hlt
aad
sbb
sbb
cmp
add
xchg
xchg
incb
adc
adc
int
mov
hlt
iret
loop
pushf
push
jge
outsb
or
negl
dec
pop
xchg
scas
sub
hlt
ja
lea
mov
sub
mov
orl
popa
mov
pusha
jbe
push
jg
mov
push
int
push
jne
mov
and
stos
movsb
popf
ror
mov
sub
shrb
xchg
push
jmp
adc
add
lahf
add
xchg
jo
popf
es
dec
and
iret
jmp
movsl
std
sub
cmp
lods
push
pop
mov
test
dec
test
in
or
jo
out
pop
pop
jmp
mov
mov
mov
arpl
dec
jle
or
and
mov
inc
out
fld
or
jb
stos
xor
pop
mov
push
xor
movq
vpmacssdd
js
push
jmp
inc
out
rcl
nop
mov
out
test
or
dec
mov
pusha
int
dec
push
jbe
cmp
movsb
dec
push
loopne
in
insl
movsl
lahf
pop
inc
stos
or
fcmovnb
xor
push
mov
shl
lods
push
pop
fcoml
dec
pop
sbb
or
mov
add
and
mov
pop
or
pop
or
notb
lds
cld
add
int3
xchg
loopne
imul
in
pushf
sbb
rcr
das
bswap
xchg
movsb
sub
cmc
popf
jmp
lahf
lea
push
and
incb
sub
add
dec
mov
aam
jb
adc
mov
loope
cld
loope
inc
cmp
dec
sbb
ds
aas
mov
inc
test
xor
pop
pop
shl
xor
das
fidivrl
movsb
mov
and
pop
jge
push
xchg
adc
mov
xor
shll
add
dec
mov
in
dec
sbb
inc
test
push
xchg
mov
mov
lret
cmp
std
nop
inc
fcomps
daa
jge
inc
inc
jg
inc
jg
mov
add
jmp
sub
mov
je
xchg
mov
sub
push
into
mov
inc
dec
mov
imul
and
int
pop
and
lsl
jle
push
cmp
data16
loopne
push
adc
inc
and
inc
in
cmp
cmp
mov
leave
cli
pop
inc
add
imul
sbb
daa
or
dec
cli
lock
stos
mov
add
dec
insb
mov
leave
pop
xchg
hlt
fmull
jl
xor
imul
xchg
add
xor
loopne
push
icebp
mov
lcall
mov
ja
and
shl
lods
mov
jp
xor
xor
inc
xor
xchg
mov
sarb
enter
cwtl
jg
fimull
xlat
cwtl
lea
sub
pop
inc
xor
hlt
sub
push
jl
xor
stos
jecxz
jo
dec
adc
loope
iret
rcrl
push
in
and
lea
out
or
or
pop
xacquire
xor
ret
rorb
outsb
enter
test
repnz
add
fnsave
repz
inc
ss
stos
inc
mov
ficoms
push
addr16
lcall
shl
fnsave
insb
xor
jbe
sub
jle
lods
inc
addb
xorb
dec
jp
jle
dec
or
and
or
adc
inc
pushf
mov
jb
dec
es
adc
scas
cltd
pop
pushf
lock
xor
push
mov
jne
cld
addb
fmulp
xchg
pusha
lret
and
push
mov
int
mov
xchg
add
push
rorl
sahf
cmpsb
in
cmp
outsl
fdivp
int
cmp
loopne
cmp
clc
xor
ja
mov
jno
test
push
xchg
mov
stc
add
ss
mov
outsb
xchg
xor
lcall
jne
and
push
add
orb
stos
jle
stc
shlb
jbe
adc
sub
cmp
cld
shlb
icebp
fwait
pop
inc
loope
mov
lock
mov
mov
pop
sahf
add
ja
enter
fmuls
into
imul
jg
adc
sub
cmc
pop
mov
mov
dec
ret
sbb
aaa
loope
cli
xchg
es
adc
mov
sbb
nop
fildll
xchg
lods
in
mov
cmp
push
dec
mov
dec
jl
mov
xchg
sbb
outsb
lcall
sub
mov
mov
popa
adc
popf
add
pop
add
pop
pop
dec
fsubs
stos
shl
stos
xor
pop
aaa
pop
cmp
mov
inc
mov
jle
leave
xor
lods
and
or
add
mov
inc
pop
in
loopne
jge
sbb
or
mov
ja
pop
jmp
or
cltd
cld
pop
lock
cmp
fucomi
rcl
popl
pop
mov
fsubr
push
mov
sub
out
add
fildl
aas
arpl
mov
xchg
fisttps
xchg
outsl
test
das
sbb
sub
jo
sbb
mov
mov
push
shlb
or
sti
dec
stos
xor
insb
inc
call
aad
mov
or
jl
ret
nop
cltd
dec
mov
xor
insb
sub
mov
lea
es
add
add
ret
dec
inc
adc
push
push
xchg
mov
imul
icebp
mov
push
lret
dec
dec
adc
movsb
pmaxsw
pop
xlat
mov
inc
fldcw
mov
push
les
popa
gs
inc
pop
xchg
shlw
fidivs
xchg
inc
js
sti
fisubrs
lds
ja
adc
fdivp
jge
sub
idivw
fcomps
loop
das
mov
add
lahf
sub
mov
subps
adcl
xor
mov
pop
out
cmp
in
inc
cmc
lds
vpcomq
adc
enter
mov
add
adc
adc
stos
cmp
inc
adc
adcb
insl
jl
sahf
stc
iret
sbb
pop
aam
out
xor
aad
stc
mov
lcall
cmpsl
jns
cld
repnz
rolb
icebp
xor
adcb
mov
jmp
dec
add
jnp
push
add
insl
jmp
cmp
fnstsw
inc
fisubs
pop
mov
and
add
xor
push
movsl
xchg
ja
and
std
mov
jae
mov
dec
xor
in
push
aam
jbe
push
fildll
jne
pop
aas
inc
shlb
loope
cmpl
inc
mov
dec
fs
lahf
pop
loope
movsb
repz
inc
mov
call
das
mov
popf
les
jle
test
cwtl
and
cltd
aad
jnp
xchg
fimull
out
insl
pop
cwtl
xor
cmp
movsb
sahf
jge
in
je
aad
sbb
in
fcomi
push
jne
scas
test
popa
jge
jecxz
xchg
xor
stc
push
adc
insb
lds
loop
rorl
loopne
mov
pop
addl
mov
push
push
pop
add
jno
pop
loopne
cmp
std
out
jecxz
loop
push
inc
xchg
je
movsb
xlat
out
push
cmp
mov
add
ds
addr16
outsb
out
imul
push
fld
xor
mov
cmpsb
dec
mov
sbb
int
or
or
pop
push
pop
rorb
inc
scas
pop
sahf
push
or
mov
pop
mov
mov
push
push
test
int
jae
clc
ret
and
lret
inc
pusha
add
mov
mov
sub
pop
xchg
xchg
lock
sub
xor
sbb
lret
imulb
aam
aas
mov
cmp
xor
sbb
dec
mov
xchg
sahf
mov
insb
add
lock
fwait
pop
sbb
sbb
push
mov
mov
rcrb
rcr
xchg
mov
int
lds
cmp
or
cmpsl
jg
pop
push
lret
add
or
pop
jae
call
inc
aam
movsb
scas
and
adc
mov
cmpsl
in
push
mov
cmp
hlt
test
das
int
jmp
add
insb
ja
daa
xor
sbb
jp
cmp
pop
cli
pushf
pop
inc
push
int3
nop
push
dec
sub
cwtl
inc
leave
cmp
sub
pushf
int3
ja
ret
mov
mov
movsb
ja
or
mov
flds
enter
iret
data16
testb
or
push
xor
daa
cli
dec
push
sbb
repz
ret
xchg
popf
jp
push
sbb
mov
je
inc
daa
or
add
push
imul
aaa
stc
movsb
lcall
pop
jge
outsb
popa
inc
sub
ja
scas
mov
add
lods
push
or
rorl
std
push
idiv
std
ret
lret
outsl
test
sti
dec
push
movsb
jle
or
cmp
push
pop
adc
out
sbb
call
and
loopne
test
cmp
stos
push
push
fcomps
sbb
xchg
imul
addb
aam
xchg
adc
sub
out
mov
and
xchg
outsl
test
adc
or
cltd
pop
nop
iret
aam
int
jae
mov
sub
or
ss
mov
or
in
ds
jp
xchg
mov
adc
mov
jbe
in
incl
faddl
mov
aad
inc
mov
jo
push
cmp
pop
sbb
test
loope
leave
xor
fldl
sub
nop
insl
outsl
imul
fisubrl
inc
clc
inc
add
shlb
sbb
push
into
inc
sub
add
leave
repz
jl
fidivrl
push
aaa
jbe
and
lcall
pop
aas
scas
xchg
pop
in
outsl
es
mov
mov
mov
bound
adcl
mov
ret
fs
out
aas
mov
add
adc
or
inc
dec
leave
mov
adc
out
in
or
ds
mov
push
movsl
and
pop
sbb
jo
mov
pop
notb
xchg
jg
cmc
cmp
fimull
lods
lods
out
out
cmp
cmpsl
adc
outsb
ja
adc
adc
aam
out
pmaddwd
xor
xchg
ljmp
add
into
ret
lret
mov
cli
xlat
lcall
addr16
add
pop
inc
and
push
mov
fwait
xchg
jmp
mov
ficompl
xor
jnp
sbb
into
mov
xor
enter
test
add
xchg
jmp
movsb
sub
pop
xlat
iret
xchg
in
jl
repz
push
icebp
outsb
insl
xor
shll
out
xor
jbe
pop
sbb
lea
and
rolb
or
and
jl
cmp
inc
xorl
test
outsl
fwait
stc
aam
int3
ds
enter
xor
pop
scas
mov
inc
sbb
into
cmp
jae
inc
into
xchg
push
test
cmp
out
daa
inc
mov
jmp
adc
adc
xorb
daa
push
push
mov
leave
ds
mov
mov
fcos
test
mov
pushf
scas
sbb
adc
xchg
lret
cmp
stc
fnstenv
in
jnp
push
mov
inc
add
xchg
shll
or
xchg
jnp
adc
mov
xor
xor
sub
sub
sar
cmp
rcrb
dec
adc
xchg
ljmp
std
aad
and
clc
inc
mov
mov
insb
enter
cmp
in
pushf
push
pop
or
jecxz
pop
shll
add
sub
mov
push
mov
test
adc
mov
xchg
jmp
jo
outsl
lds
pushf
and
call
in
fucomi
scas
push
push
aaa
fdivs
repz
int
inc
outsl
push
out
mov
push
mov
xchg
jb
jbe
xchg
cmp
mov
mov
es
fwait
add
test
and
aam
mov
int3
cs
mov
daa
adc
and
clc
push
push
mov
dec
cmpsb
and
lret
pop
dec
jb
test
xor
in
adc
or
jmp
mov
push
imul
pop
jb
lret
add
movsb
lret
stos
pushf
in
lds
cwtl
mov
or
push
inc
js
hlt
pop
mov
dec
pop
hlt
or
or
out
pop
xchg
dec
imul
xchg
push
stos
arpl
sbb
cltd
mov
movsl
mov
mov
shrb
cmp
mov
push
clc
xchg
mov
and
icebp
sbb
shrl
cltd
int
and
xor
dec
pop
decb
inc
cmp
add
imul
sbb
addr16
cmp
cmp
subb
xchg
lods
addl
mov
out
testb
aaa
mov
or
lahf
sbb
outsb
pop
movsb
add
dec
aad
movsb
icebp
inc
testb
mov
subl
sahf
xchg
les
jecxz
push
or
pushf
lret
stc
jne
xchg
cmp
in
xchg
xchg
je
mov
xchg
idivb
in
sub
dec
add
das
in
push
subb
insb
rclb
scas
sahf
pop
fs
ljmp
or
cwtl
lret
mov
sbb
cmp
push
test
ficompl
cld
dec
divl
les
sub
jge
sbb
mov
iret
arpl
adc
sbb
aam
adc
sub
fstl
add
fistps
adc
pusha
dec
test
cli
loope
outsb
and
push
push
xor
inc
adc
lods
mov
std
dec
test
sub
sbb
int
inc
arpl
hlt
loop
ret
dec
and
les
enter
aam
sbb
inc
mov
mov
push
xchg
pop
xor
popf
ds
call
sar
jp
xor
jle
jb
data16
or
and
and
outsb
movsb
mov
fldt
inc
cwtl
pop
test
sbb
pusha
cmp
mov
and
movsl
add
enter
pusha
sub
sbb
dec
inc
xchg
push
imul
sub
leave
adc
mov
mov
jb
shr
lcall
outsl
insl
mov
int3
cmc
xor
xor
add
and
repnz
loop
or
in
imull
push
jmp
lret
ficoms
movsl
popf
jae
es
stos
inc
daa
shlb
xor
test
aam
scas
sub
jno
mov
mov
pop
xchg
test
jns
sbb
lcall
dec
xchg
int
test
inc
dec
sbb
mov
popa
fadd
xor
xor
shrl
lods
mov
imull
dec
dec
xor
pop
leave
out
mov
mov
out
aam
rolb
out
sub
mov
xchg
loope
dec
xor
mov
gs
add
pmullw
adc
adc
je
mov
mov
mov
add
sub
mov
repnz
rolb
hlt
leave
in
rorb
sub
lods
mov
pop
jns
xchg
and
dec
outsb
vpmacssdd
dec
inc
mov
cmp
mov
cli
mov
jl
or
sbb
sub
mov
hlt
out
addr16
cmpsl
mov
movl
out
shlb
add
lcall
or
xchg
pop
cltd
and
popa
jns
aad
rclb
mov
xchg
dec
bound
dec
jp
icebp
xchg
sbb
dec
or
repz
push
out
and
xor
pop
imul
out
and
faddp
out
aaa
rorb
pop
mov
and
cltd
aam
inc
inc
stos
cmc
mov
lods
iret
stc
fnstenv
add
stos
sbb
sub
mov
add
fs
xlat
push
push
fwait
loop
int
mov
cli
test
or
cltd
ror
loopne
dec
jg
jno
jmp
test
insl
mov
imul
or
xchg
sarl
cmp
pop
xor
xchg
lock
mov
cltd
xor
jle
mov
shrl
xchg
imul
inc
mov
cmpsl
inc
xchg
adc
jbe
in
xchg
lret
je
icebp
xor
gs
pop
les
fsubl
sbb
cmpsb
aaa
aaa
adc
lret
dec
xor
loop
daa
lahf
push
lods
insb
jne
add
dec
das
ja
sub
xchg
enter
loopne
pop
in
ss
sbb
iret
stos
push
in
sub
in
jno
fwait
cmp
inc
jg
int
int3
add
or
bound
mov
xchg
and
sub
or
jno
movsl
push
and
add
add
pop
jo
jg
xor
xchg
movsb
lods
pop
mov
xchg
dec
or
je
push
or
sar
push
mov
shrb
mov
and
call
mov
in
pop
mov
ss
mov
push
daa
enter
mov
sub
clc
rorl
xchg
inc
cli
ret
inc
or
unpckhps
pop
xor
jae
mov
sub
test
and
dec
or
mov
call
mov
fbstp
xchg
rcr
hlt
out
jno
or
bound
fmull
dec
je
aas
jle
pop
push
jne
mov
std
mov
xor
cmp
mov
loop
mov
or
sub
fidivs
cld
cmpsl
aam
out
sub
xchg
icebp
popf
insl
cli
cld
inc
pop
sbb
jae
and
dec
or
data16
aad
dec
cmp
or
int
outsl
sub
mov
or
rclb
or
cmp
inc
push
pop
push
dec
cmpsl
sub
icebp
dec
add
xchg
aas
cld
xchg
cmpsb
mov
imul
sbb
pushl
cltd
pushf
xchg
push
xor
outsb
roll
sub
jno
mov
addl
ja
insl
lods
into
lods
fs
add
nop
mull
dec
addl
out
push
loop
xor
jecxz
fisubrs
movsb
repz
mov
in
sub
add
pop
fs
ret
dec
imul
fdivrl
idivl
mov
pushf
xchg
fmull
mov
test
mov
and
mov
out
jl
outsb
jmp
scas
out
jbe
mov
mov
mov
lret
test
jnp
mov
push
dec
dec
jg
cmp
mov
or
push
ret
push
push
jb
jmp
movsl
cld
mov
xchg
lds
mov
jns
mov
push
and
mov
cwtl
adc
fistps
sub
in
push
aam
mov
lods
call
and
stos
xchg
jecxz
xor
aad
repnz
ret
cmpsb
or
cmp
out
gs
bound
ret
xchg
mov
pushf
lcall
add
xchg
push
xor
aaa
dec
insl
cld
mov
add
pop
mov
sub
lea
lahf
ffreep
nop
test
pop
mov
mov
ret
sahf
push
add
jnp
jg
or
and
dec
scas
ja
jbe
push
mov
ret
rcrl
mov
inc
lahf
jg
xchg
ret
adc
push
sbb
loope
mov
in
pusha
ljmp
jl
cld
and
scas
sub
scas
jle
divl
rcl
cmp
jae
and
adc
out
or
mov
cmp
punpckldq
push
shrb
aas
mov
jns
popa
mov
sbb
and
push
xor
cmpsl
sbbl
push
sbb
dec
and
mov
pop
lods
aam
xchg
repnz
mov
jb
pusha
jmp
fwait
lret
vunpcklps
mov
or
std
ss
data16
ds
in
vpcmpeqb
lds
xchg
mov
stos
lcall
add
xchg
mov
das
out
mov
outsl
in
rcrb
andb
sbb
fdiv
fwait
gs
pop
jns
icebp
and
aad
sub
ss
outsb
xchg
in
xor
test
cli
cmc
adc
inc
xchg
xchg
in
sarb
aaa
nop
mov
pop
dec
sub
dec
adc
or
je
iret
popf
mov
inc
pop
jmp
cltd
xchg
test
push
xchg
fldl
mov
test
dec
mov
data16
stc
xor
jbe
adc
div
popf
jne
test
es
mov
imul
cwtl
mov
push
insl
ss
insl
aad
dec
fwait
pop
and
pop
push
xor
jbe
sub
hlt
adc
xor
loopne
and
loope
xchg
sub
mov
mull
cld
mov
push
out
lods
fwait
cmpsl
push
adc
arpl
mov
sar
add
clc
adc
ficoms
stc
stos
add
jge
mov
inc
dec
mov
imul
sbb
iret
mov
lock
dec
cmp
dec
mov
pop
dec
ljmp
stos
push
mov
rcrb
cmc
imul
dec
mov
mov
lock
cmc
jecxz
xor
stos
or
jo
sti
adc
loope
idivl
jno
lcall
in
arpl
adc
stos
aad
les
cli
pop
pop
pop
scas
mov
and
adc
push
movl
hlt
lea
mov
dec
add
xor
dec
dec
mov
test
xchg
fstl
mov
mov
ds
and
push
sub
xchg
sbb
push
movsl
jns
jnp
int3
adc
mov
lret
xlat
mul
push
je
xor
xchg
fmulp
outsb
xchg
inc
cmp
cmp
pop
cwtl
jnp
jg
fsubrl
fwait
sbb
cwtl
mov
test
push
popf
lret
push
and
adc
test
mov
stos
rorb
xor
divb
xor
adc
xor
in
pusha
xchg
aad
add
in
popa
sbb
inc
addr16
rorl
test
adc
leave
mov
inc
jo
mov
add
sahf
xchg
stc
add
clc
mov
cmp
adcb
mov
rolb
mov
in
adc
xlat
or
adc
adc
mov
sbb
pop
cmp
inc
pop
lret
cwtl
mov
scas
sub
rcrb
testb
jne
push
insb
add
inc
and
cmp
cmp
aam
sub
cmp
xchg
jp
das
fs
sbb
cs
pop
mov
adc
sbb
pop
sti
xchg
inc
fsubl
icebp
push
xor
or
sarb
cwtl
push
sub
es
jg
rcl
insb
bound
or
mov
xchg
dec
jl
stos
sbb
sbb
std
mov
cmc
push
mov
loope
or
daa
lahf
int3
mov
pop
loope
js
fcoms
lds
adc
lods
rorl
stos
sbb
les
stos
inc
es
rcrb
and
push
mov
ds
rorb
stos
push
sub
add
popf
sub
movl
imul
in
xchg
test
in
inc
subl
lds
mov
sub
iret
cs
icebp
xor
inc
fxtract
dec
or
cmc
imul
adc
out
xchg
stc
push
push
mov
in
mov
loopne
inc
push
mov
sbb
cld
testl
subb
mov
arpl
fmul
inc
andb
dec
mov
jmp
dec
xor
call
rcll
test
cmc
das
cmp
test
testb
mov
pop
lods
push
loope
push
pop
xorb
fwait
lods
mov
add
fdivr
mov
lds
sbb
rcr
je
fs
lods
jnp
pop
into
sbb
pop
mov
loopne
and
movsl
sbb
cli
lock
xchg
fdivr
xorb
sbb
bound
jno
jno
idivb
data16
nop
iret
sbb
mov
fs
push
and
xchg
nop
in
or
or
aas
test
data16
cmpsl
pop
sub
stos
jmp
mov
leave
dec
xor
das
dec
pop
mov
sub
mov
inc
out
rcll
shll
loope
aaa
loop
jge
popf
dec
mov
mov
rcrl
cmp
inc
adc
test
subb
xchg
push
xorl
inc
xor
jne
enter
lahf
cmp
lret
add
repnz
out
das
xor
inc
iret
push
adc
lds
push
dec
repz
imul
es
adc
mov
rcrl
sub
ss
icebp
sbbb
add
lahf
test
xchg
push
jns
daa
inc
mov
sbb
repz
jle
cli
repnz
xchg
nop
scas
cmp
xchg
inc
pop
idivb
mov
add
push
jmp
sub
pop
jne
jmp
das
xchg
dec
xchg
andb
adcl
push
push
xchg
stos
xchg
mov
sub
outsl
and
dec
pop
daa
out
shrb
mov
pop
push
sub
xchg
add
and
xchg
rclb
loop
or
xor
ds
xchg
and
sbb
xchg
adc
and
pushf
std
pusha
test
clc
mov
es
pop
in
repnz
mov
fxch
pop
sti
inc
mov
in
jbe
pop
inc
out
xor
jbe
shrl
adc
sub
push
out
rcrl
sahf
mov
loopne
insl
cmp
scas
loope
lea
scas
mov
insb
std
inc
pop
and
push
push
fimull
out
pop
sbb
repz
test
mov
dec
push
xchg
push
jo
inc
and
or
mov
ja
xchg
xlat
mov
test
xor
and
inc
sbb
jg
enter
cmpl
cld
scas
mov
pop
pop
sbb
frstor
mov
push
leave
out
jmp
ret
fs
shr
jo
insb
pop
arpl
lret
movsl
pop
adc
add
ficoml
xor
scas
add
xchg
rorb
and
jb
repnz
clc
dec
adc
mov
testl
hlt
pop
iret
dec
dec
mov
mov
and
out
lahf
jo
and
push
inc
lods
popf
in
fnstsw
sbb
fsubl
mov
cmp
jl
in
jns
jge
cmpb
sti
das
stos
pop
shll
mov
sbb
inc
ljmp
or
shll
lea
int3
adc
inc
iret
scas
scas
cmp
push
out
mov
aas
hlt
cmp
aas
jecxz
insb
arpl
insb
cs
loopne
das
adc
pop
es
mov
jb
inc
out
cmp
cmp
and
push
mov
jge
fdivrp
jmp
icebp
insb
lahf
rol
aaa
call
sbbb
xor
leave
cmp
aaa
sub
lods
jne
and
popa
mov
movsb
out
frstor
pop
fs
xchg
mulb
out
mov
out
hlt
jecxz
and
mov
sarl
sub
cmp
std
or
sbb
xchg
add
pop
test
push
notb
aad
mov
push
test
mov
push
jnp
div
xorl
xchg
std
lock
mov
jno
sbb
xchg
hlt
xor
sub
repz
out
mov
xchg
mov
or
data16
lcall
dec
add
dec
xchg
je
add
xchg
add
sbb
pop
mov
rcll
mov
pop
add
xor
pop
mov
xor
inc
fnstsw
xchg
inc
jl
repnz
pop
dec
jo
push
push
jns,pt
fiadds
in
mov
loop
into
lock
cmpsb
mov
lcall
les
or
inc
aad
adc
xor
jo
xchg
and
mov
out
ds
mov
push
cmp
jmp
xchg
popf
inc
xor
loope
mov
mov
push
gs
icebp
imul
cmp
pop
jno
aas
out
pop
mov
xor
add
lods
stos
cmp
sub
loop
out
add
add
and
nop
sub
loop
push
xor
loopne
sub
mov
mov
sub
hlt
mov
jg
push
and
mov
push
addr16
jbe
dec
xorb
dec
lret
cmc
ret
int
xchg
and
imul
scas
cmp
out
cmpsl
pushl
cmp
std
dec
mov
push
lret
inc
lock
mov
xchg
popl
cmp
cmp
sub
cmp
hlt
std
in
pop
cmp
ljmp
lods
movsl
xchg
and
popa
sar
and
in
arpl
add
fisubl
and
je
lcall
lret
movsb
or
push
mov
xchg
and
push
lock
movsl
lock
scas
sbb
adc
push
loop
cli
out
sbb
jecxz
lcall
adc
jae
xor
jle
or
fsts
bound
adc
loop
lods
pushf
repz
flds
mov
fwait
sub
es
xchg
cmp
or
cld
lret
cmp
push
shlb
aas
add
cld
js
lods
fcmove
clc
imul
rorb
test
out
sbb
clc
out
xchg
push
xchg
mov
push
mov
push
into
or
stos
jno
mov
and
out
mov
dec
adc
xor
push
scas
outsl
inc
sub
inc
cmp
test
xor
adc
int
sbb
pusha
inc
data16
fwait
dec
push
addb
pop
stos
in
imul
mov
mov
and
adc
mov
sbb
add
aaa
push
dec
lret
test
pop
xor
jle
addr16
fmuls
jae
imul
add
pop
sbb
cmp
repnz
xchg
inc
arpl
mov
sbb
imul
lcall
sbbb
sub
test
push
pop
xchg
jge
xchg
je
je
mov
pop
push
dec
jmp
mov
inc
jae
dec
fistpl
lret
std
push
add
and
fsubrs
ret
call
stc
nop
dec
fidivl
mov
mov
in
xchg
mov
mov
adc
or
out
adc
int
cmp
jl
daa
push
into
mov
in
in
scas
fdivr
xchg
int3
aaa
add
or
pushf
push
cmp
lret
test
jae
pop
mov
testb
pusha
mov
jbe
lret
push
sub
cli
fcomps
add
or
test
call
divb
repz
pop
add
adc
popa
sarl
push
in
add
dec
sbb
cmp
enter
out
or
ret
out
push
xchg
jle
mov
pop
xchg
fiadds
mov
int3
aas
pop
push
pop
dec
mov
push
cmpsb
jae
jo
test
es
xchg
es
sbb
gs
stos
stos
int3
cmc
sub
pop
mov
jnp
sahf
and
adc
xchg
push
ret
je
adc
cs
sbb
sahf
in
pop
popf
lret
in
sub
in
push
xchg
sbb
jae
jbe
stc
std
fisubrl
add
out
mov
dec
int3
insl
enter
mov
cmp
inc
cmp
xchg
push
mov
jns
std
sbb
cltd
fsts
in
lcall
fbstp
in
cmp
or
flds
icebp
xchg
mov
sbb
test
jno
push
mov
pop
bound
mov
adc
or
xchg
imul
mov
test
cmp
xlat
test
dec
push
push
cmpsb
xlat
les
mov
fstps
mov
or
pop
std
lahf
addr16
and
pop
cmp
aaa
lret
int3
jnp
in
cmp
out
lcall
addr16
pop
cmp
test
sbb
pop
jp
xchg
sub
dec
xor
mov
jp
xor
dec
rclb
and
insl
aas
lret
cmp
jbe
in
lcall
scas
aas
pop
pop
int3
adc
test
sub
cmpsl
mov
dec
cli
pop
or
fidivl
pusha
or
push
xor
out
add
in
rcll
divl
sub
pusha
lcall
das
cwtl
cmp
outsb
xor
hlt
call
mov
ja
shlb
ljmp
insb
movsl
icebp
jp
in
dec
inc
addr16
cs
mov
pop
fbstp
sti
daa
hlt
popf
cmpsl
aam
pop
pop
fwait
adc
or
mov
cmp
xor
outsl
ljmp
enter
int3
ljmp
lock
jp
xlat
in
mov
sbb
mov
jmp
or
push
testl
insl
jl
iret
mov
shlb
sub
jne
out
cld
js
xor
loop
insl
shlb
xchg
mov
mov
push
add
mov
inc
pop
and
loopne
push
icebp
xchg
xor
mov
and
int
xchg
test
inc
dec
loopne
sub
jp
xor
clc
pop
lods
xchg
push
clc
push
int
mov
dec
inc
pop
adc
subl
add
ds
repz
aas
into
out
push
aaa
imul
lock
mov
or
testb
xor
cmp
aaa
sbb
xor
adc
add
fcmovb
adc
rclb
out
xor
in
in
insl
bound
rcll
adc
sub
data16
pop
cli
enter
or
cmp
std
jne
mov
and
pop
pop
xor
dec
add
sbb
insb
lea
ficompl
xor
mov
pusha
mov
dec
add
sub
loop
mov
mov
lret
pop
rcll
test
inc
and
imul
sbb
lret
xor
jbe
out
xchg
pop
xlat
shr
loopne
inc
add
sbb
cmp
inc
mov
push
enter
enter
insb
popa
mov
sahf
sahf
cmp
shl
pop
jmp
inc
or
xorl
stos
xchg
xor
add
xchg
xchg
jle
nop
pop
dec
add
std
push
fldenv
test
or
xchg
inc
mov
orl
xchg
fmull
pop
or
jne
push
loop
xchg
das
int3
enter
mov
xchg
movsl
sahf
cmpsl
add
mov
ljmp
orb
fsubrl
cs
lret
incb
mov
outsb
or
popa
push
pop
xor
call
jl
sub
data16
rcl
aaa
xchg
or
sub
push
inc
add
mulb
lods
insl
xor
pop
push
faddl
inc
fstps
rcl
loop
jge
mov
movsl
push
idivb
mov
cld
mov
out
xor
iret
mov
xchg
js
mov
pop
fldenv
insb
or
xchg
addr16
xor
jne
inc
repnz
jmp
mov
sbb
lods
subl
and
rcrl
cmpsl
cmp
and
inc
hlt
or
jns
fidivrl
dec
sbb
nop
adc
pop
ds
mov
lret
ja
cmp
adc
out
hlt
push
and
out
out
insl
stos
mov
stos
add
daa
out
iret
pop
out
mov
xchg
xchg
add
lods
cs
addl
mov
sbb
add
push
mov
scas
dec
stos
lods
xchg
inc
out
xlat
arpl
cltd
ds
push
fucomp
or
and
insb
push
lds
cwtl
mov
cmp
cmp
sbb
insl
add
pusha
adc
pop
pop
mov
ss
add
jne
popa
mov
cwtl
jmp
cmc
xchg
stos
mov
in
pop
pusha
pop
dec
insl
sbb
pop
enter
aad
andb
dec
add
adc
mov
testl
push
enter
mov
xor
jne
dec
gs
lret
enter
in
xlat
xor
outsl
mov
mov
test
lcall
imul
dec
mov
and
idivb
aad
insl
adc
movsb
push
sub
cmp
inc
push
jg
push
adc
pop
rorb
shrl
mov
add
add
sub
add
xchg
inc
xchg
xchg
pop
adc
mov
scas
mov
pop
popa
std
loopne
popa
mov
pop
push
aad
out
shl
ret
cmp
sbb
fstpt
mov
leave
pop
movsl
inc
push
mov
pusha
nop
ja
cmp
jns
sub
push
and
jg
inc
or
fwait
addr16
add
lret
mov
pop
inc
pop
movsb
jecxz
movsb
xlat
mov
cmp
in
and
ss
ret
mov
mov
pop
dec
ljmp
fbld
jecxz
jp
push
sbb
add
mov
sti
in
jbe
scas
jo
fs
mov
fnstcw
lret
aad
sub
aam
fsubrp
mov
sbb
icebp
inc
out
jns
adc
scas
ret
sub
inc
movsl
aam
out
or
jbe
sub
lods
daa
adc
mov
jbe
in
mov
outsb
andb
push
fisubs
jne
fiadds
xor
or
das
pop
sarl
bound
push
xchg
andl
into
and
jmp
xor
lret
dec
arpl
mov
fnstsw
mov
test
shr
inc
int3
movsl
or
test
insb
cmp
adc
mov
ss
xor
add
cmp
sub
fisttpl
adc
imul
xor
and
mov
imul
dec
sarb
lods
xor
pop
cmc
icebp
cmpsl
pop
rcll
std
cmp
xor
pusha
pop
das
shrb
popa
outsb
pop
lea
cs
in
push
fidivrs
sub
in
xchg
in
movsl
jl
mov
add
enter
mov
pop
sub
addr16
pop
dec
push
pand
mov
and
push
dec
mov
cld
mov
or
inc
xor
loopne
and
xor
jg
mov
cmp
xchg
mov
push
xchg
and
pop
cmpsl
push
fidivrs
out
adc
inc
jb
xor
pop
daa
test
int3
xchg
mov
fistps
ja
pushf
pop
mov
aaa
jbe
mov
mov
xor
add
add
inc
hlt
les
or
sub
cmp
mov
ja
dec
movsb
adc
aam
inc
mov
std
std
in
cmp
loope
push
fwait
xchg
insl
pushf
cmc
into
sti
push
pop
push
mov
lahf
inc
xor
movsb
and
jb
mov
addr16
loope
popa
and
mov
dec
fists
push
xchg
retw
sarl
or
push
mov
test
xor
adc
mov
xor
ret
cmp
in
roll
pushf
int
lds
ljmp
jns
fldcw
push
or
stos
jnp
clc
sahf
sub
mov
jge
stc
mov
sbb
push
adc
rcrb
dec
inc
xchg
lds
movsb
dec
aam
test
rcll
inc
test
insl
ds
outsl
outsl
mov
dec
push
push
sbb
inc
mov
push
push
pop
inc
xorb
jo
push
push
xchg
loopne
ja
outsl
test
push
push
inc
js
inc
push
pop
movb
adc
rorl
pop
sbb
fs
mov
xor
imul
adc
movsb
mov
rcr
shrl
movsb
or
and
mov
or
mov
mov
push
push
dec
sub
and
comiss
aad
lods
lock
dec
jo
cmp
mov
mov
fdivrl
flds
icebp
inc
in
cld
ds
push
lods
shlb
inc
and
arpl
lods
lea
andl
ss
pushf
gs
leave
movb
xor
sbb
add
js
or
insb
dec
popa
subb
pop
cmpsb
and
sub
jecxz
pop
push
movsl
xchg
imul
mov
mov
imul
push
cs
cmpsb
inc
clc
sbb
dec
pop
lds
inc
aas
mov
mov
and
in
cmpsl
lods
lret
mov
fistps
jo
dec
add
roll
mov
movsl
test
jno
enter
popf
jo
out
lcall
mov
or
mov
inc
adc
jecxz
je
sub
shlb
jbe
imul
cld
mov
addr16
xor
sbb
xchg
inc
movsb
aam
mov
pop
adc
pop
mov
pop
in
je
xchg
pop
dec
dec
jnp
enter
mov
xchg
pop
cmpsl
jecxz
ret
push
jnp
sub
xor
cmp
jp
icebp
jbe
icebp
pop
push
rorb
adc
sbbl
jl
jmp
mov
popf
dec
in
loop
jmp
iret
xchg
imull
out
in
xchg
jge
mov
call
movsb
or
mov
aas
mov
sahf
push
or
pusha
dec
sub
jo
cmpsb
mov
jb
push
or
sbb
sbbl
js
cmpsl
fadds
jg
les
push
jns
enter
insb
pop
inc
pushf
popf
out
ljmp
dec
sarb
loop
add
adc
pop
pop
leave
mov
enter
movl
pushf
cmpw
cmp
iret
mov
push
lea
mov
fcmovne
push
pop
and
or
insb
push
je
or
test
dec
cld
sbb
sahf
pusha
jne
push
shlb
cmpsl
into
inc
push
inc
xor
jbe
cmpsb
dec
popf
add
sub
add
push
mov
sub
or
movsb
jp
add
mull
mov
outsl
lret
iret
mov
add
xor
fs
loopne
cld
sub
pop
scas
loope
les
mov
pop
call
movsl
jae
cmp
shrl
es
out
subl
push
jle
jl
mov
aas
sub
mov
push
testb
cwtl
dec
dec
addr16
enter
stos
bound
pop
push
jle
mov
jo
mov
call
mov
inc
rcr
cmp
shrb
jle
mov
sti
jns
xchg
in
and
test
cltd
jecxz
lret
mov
adc
dec
movsb
sbb
ds
jmp
in
test
pop
js
add
cmp
dec
lods
mov
adc
mov
push
lret
jae
jo
push
data16
add
adc
imul
in
test
jmp
mov
addr16
leave
call
cmpsl
pslld
stos
sub
or
mov
leave
loopne
loopne
lret
getsec
xchg
add
inc
mov
dec
and
mov
jmp
es
cmpsl
sbb
ja
hlt
cmc
mov
fbstp
add
or
std
ret
fstp
jne
cmp
test
mov
sbb
std
mov
push
movsb
aad
les
ljmp
lods
cmp
fiadds
xorb
imul
cltd
gs
in
or
fisubrl
and
mov
loope
dec
push
pop
pop
add
sub
add
lods
jnp
cld
stos
jo
mov
mov
aas
add
fwait
aam
outsb
xor
sarb
fiaddl
adc
add
out
roll
popa
lret
mov
push
push
push
jns
mov
inc
or
les
mov
jecxz
mov
ret
and
cld
dec
fcoml
adc
mov
sub
sub
test
adc
lcall
dec
in
push
sbb
dec
xor
imul
mov
cmpsl
pop
aaa
test
mov
add
cli
rorb
push
inc
or
fidivrs
and
xor
jo
fucomp
mov
lock
leave
or
sbb
sub
pop
xchg
testb
leave
cmp
push
fnsave
pop
sbb
int3
stos
daa
pop
cmp
enter
xchg
xchg
orl
xor
gs
adc
adc
pusha
xchg
cli
movl
cld
and
mov
addb
xor
push
xor
pop
xor
or
pop
aam
test
out
negl
jne
mov
or
stos
stc
inc
insl
in
and
cmp
pop
pop
pop
mov
lods
and
fbstp
mov
mov
adc
lods
mov
and
sbb
int3
xchg
rcr
jecxz
sub
fidivrs
xlat
lods
and
dec
or
ljmp
daa
mov
pusha
sub
clc
inc
pop
cmp
popa
pushl
inc
xorb
mov
cmp
push
pusha
adc
rorl
into
mov
sbbb
adc
jg
cmpb
xchg
out
call
sbb
mov
aaa
jecxz
push
push
or
mov
sub
repz
test
jp
pop
lret
aam
ret
popf
in
xchg
adc
shlb
ss
add
and
enter
adc
mov
sub
lcall
pusha
out
daa
jmp
pop
adc
rorb
les
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
mov
mov
xlat
jns
push
dec
mov
xchg
ja
loop
out
jbe
fsts
inc
push
pop
pop
jl
mov
out
test
xor
jmp
sub
jp
or
js
push
dec
ss
jno
pop
shll
insb
sub
testl
cwtl
sarb
fimuls
jbe
out
jmp
cmpb
mov
mov
clc
ja
mov
jl
jbe
rorb
jg
sbbl
aam
mov
xchg
or
dec
out
lods
iret
inc
ja
loopne
fcomps
fiaddl
inc
fiaddl
arpl
lock
std
or
adc
popa
sbb
cli
notb
test
push
dec
cmp
cwtl
popa
loope
dec
je
aas
lods
andb
add
add
mov
jmp
sysret
or
lods
pushf
sub
int
pop
nop
dec
sbb
adc
in
mov
rcrb
xchg
jecxz
in
fdivr
nop
stos
pushf
in
cltd
enter
mov
dec
out
cmp
in
jae
push
stos
jo
inc
fldenv
enter
mov
mov
sbb
push
loope
stc
mov
loop
dec
fimuls
add
sbb
fadds
repnz
xor
mov
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
lods
dec
mov
add
movsb
mov
