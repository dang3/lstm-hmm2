push
mov
sub
mov
xor
mov
lea
push
lea
push
push
movw
call
mov
xor
cmpb
sete
xor
call
leave
ret
push
mov
mov
push
mov
xor
sub
mov
test
je
xor
jmp
sub
roll
inc
mov
inc
cmp
jb
xor
inc
pop
pop
ret
push
mov
sub
push
push
push
call
mov
push
pushl
call
mov
push
push
call
push
call
mov
mov
mov
movl
jmp
mov
add
mov
mov
imul
mov
mov
add
mov
mov
or
mov
mov
xor
push
pop
div
mov
mov
shl
mov
xor
push
pop
div
push
pop
sub
mov
shr
or
mov
mov
mov
push
pushl
push
call
add
cmp
je
mov
mov
xor
push
pop
div
push
pop
mov
sar
mov
mov
mov
jmp
lea
push
push
push
pushl
call
lea
push
pushl
call
mov
mov
xor
push
pop
div
mov
mov
sub
mov
mov
mov
cmpl
jne
mov
mov
mov
add
mov
push
call
pushl
call
push
push
push
push
push
push
call
pushl
pushl
pushl
call
push
call
pushl
call
push
push
call
pop
pop
push
call
push
push
call
push
call
push
call
pop
pop
leave
ret
sti
mov
pop
int3
int3
int3
int3
int3
int3
int3
int3
sub
nop
cs
jne
dec
xor
ja
jp
int
pusha
dec
mov
data16
dec
sbb
push
xor
jg
adc
nop
roll
xchg
pop
push
inc
push
rorl
mov
pop
jl
add
pop
out
dec
mov
xchg
ret
mov
cmpsb
or
push
pop
call
pop
pop
ljmp
imul
pushf
jecxz
sub
jge
gs
pop
dec
xchg
inc
sbb
enter
jp
mov
in
das
popa
mov
loop
sbb
add
aas
mov
gs
jno
xor
addr16
mov
fstp
pop
out
add
jmp
out
ds
sbb
mov
sarl
vpmadcswd
mov
dec
lret
or
aad
cld
cmp
aam
lahf
fidivs
dec
mov
mov
inc
and
test
sar
enter
jmp
jno
fwait
mov
leave
mov
out
out
nop
jnp
fwait
test
mov
stos
repz
sbb
or
incb
mov
and
cmp
mov
pop
mov
addl
sahf
pushf
sbb
xor
or
inc
sub
xor
jne
mov
and
aam
xchg
call
mov
test
outsl
cmpsb
add
lock
loopne
mov
enter
ja
insb
cs
stos
jb
das
scas
add
xchg
shl
je
es
push
add
iret
add
add
bt
cmp
add
ror
push
jge
dec
int
lds
dec
cwtl
outsl
xorl
jecxz
ror
mov
inc
push
mov
pop
push
pop
lcall
js
scas
loope
sub
js
push
or
roll
pop
mov
mov
or
adcl
lcall
fsubp
rcrl
xchg
and
push
mov
jle
aas
gs
add
sarb
inc
sarl
jb
xchg
out
xlat
out
xor
dec
add
add
xchg
mov
mov
xor
jb
add
xchg
xchg
jmp
ret
test
mov
add
cmp
mov
aaa
mov
push
mov
ror
xor
leave
test
jne
aaa
push
pop
dec
xchg
pop
lock
xor
outsb
mov
fcmovb
mov
sahf
je
sbb
pop
pop
outsb
sbb
jno
xchg
sbb
pushf
aaa
in
stos
in
xor
mov
ret
adc
xor
movsb
push
shrb
sbb
pushf
inc
dec
sub
and
imul
in
js
adc
bound
call
sbb
sbb
test
mov
lret
jns
or
dec
adc
add
mov
mov
je
add
out
sti
fcoml
loopne
mov
cltd
jp
popl
mov
mov
or
aaa
gs
lods
mov
jp
xchg
push
ss
add
pusha
adc
sahf
ret
sub
lds
sar
inc
stc
ja
es
add
das
clc
rcrl
adc
inc
and
test
lret
adc
nop
outsb
hlt
pusha
xchg
int
icebp
jge
das
sub
cmp
outsb
or
or
scas
cltd
sub
test
int
int
mov
aas
inc
cmc
cmpb
sub
pop
aas
pusha
fisubrs
pop
mov
mov
pop
arpl
clc
test
adc
iret
cmpsb
pop
pop
cmp
mov
xor
or
jns
inc
or
pop
push
and
movsb
rclb
push
pop
xor
stc
les
stos
int
aad
lds
xchg
xor
pusha
cmp
xor
push
xchg
jp
out
pop
cltd
dec
jbe,pt
push
jl
test
icebp
pop
je
and
lods
outsl
bound
inc
ja
push
test
adc
inc
and
inc
mov
mov
scas
xchg
lods
lea
lcall
xor
aam
cli
sub
adc
ja
inc
mov
or
outsb
xlat
push
pop
pop
and
sbbl
pusha
xor
imul
adc
insl
test
lock
jle
pushf
mov
lods
into
mov
test
pushf
push
scas
mov
inc
imul
mov
in
dec
xor
xchg
loopne
pusha
cmp
xlat
and
and
jne
push
push
xchg
jp
dec
gs
inc
pop
cwtl
iret
push
mov
dec
xor
rclb
rolb
icebp
push
int
addr16
sbb
or
ror
roll
scas
ret
fmuls
cmpsl
mov
sahf
inc
push
jl
outsl
mov
sbb
push
out
mov
lods
ret
ja
sub
ficoml
lods
test
insl
mov
repnz
shll
loope
jno
stos
and
jns
fisttpl
in
xor
ret
push
sbb
sbb
jno
cmp
xlat
jmp
xlat
cmp
in
xchg
xchg
xchg
jle
add
push
add
mov
fwait
pop
jno
dec
dec
loopne
pop
bound
fcoml
mov
lea
js
pop
jne
fs
lcall
test
enter
pushf
aas
cmpsl
imul
mov
cltd
mov
push
or
popf
jp
out
int3
cli
out
daa
xchg
shr
jns
xchg
adc
sbb
push
movsl
fidivl
or
es
pop
fiaddl
mov
shrb
pop
push
mov
out
push
imul
mov
ja
das
sub
das
lods
daa
lods
mov
pushf
ret
addr16
insl
imul
arpl
cmp
xor
outsl
mov
xchg
pushf
icebp
fisttpl
sub
cmpsl
out
push
pop
int
sub
ret
pop
pop
in
pop
inc
aas
data16
ds
cmpl
std
pop
iret
inc
jecxz
push
dec
xchg
not
loopne
and
mov
aas
dec
xchg
add
pop
paddusb
jle
arpl
sbb
add
pop
dec
in
loope
inc
std
push
add
mov
push
sbb
xchg
leave
cmp
fnstsw
jg
or
nop
xor
or
mov
fldcw
mov
cmp
jmp
mov
or
pop
jb
xor
pop
insb
popf
cmp
jae
xchg
fdivr
cmp
fistl
mov
aas
int3
mov
hlt
mov
fsubp
lret
in
xchg
add
rcll
xor
jno
mov
or
push
xchg
xchg
push
hlt
dec
ret
shll
jne
push
inc
cltd
mov
pop
loopne
lds
test
inc
lds
fcoms
and
repnz
mov
push
adc
xchg
mov
jecxz
ds
mov
or
mov
jne
icebp
addr16
fcoms
sub
xchg
test
add
shrl
xor
mov
popf
dec
cmc
and
test
cmpsb
cmp
xchg
jo
mul
add
lock
enter
int
and
mov
rep
dec
sbb
outsb
out
adc
dec
imul
push
addr16
in
jne
mov
idivl
jmp
stc
pop
int3
roll
inc
pop
xor
scas
sub
pop
cmp
xorl
stos
mov
andl
das
sbb
add
jge
test
mov
dec
jbe
mov
pop
inc
je
mov
mov
daa
pusha
movsb
dec
jecxz
test
sahf
jnp
add
das
loope
call
push
into
hlt
cli
pop
insl
aad
push
cmpsl
pop
push
movsb
jmp
rcll
loope
cli
mov
mov
xor
mov
jge
mov
jo
stos
les
int3
subb
jno
push
and
out
cmp
adc
push
cmc
bound
pop
and
adcb
std
scas
lds
and
popf
fs
adc
repz
addl
nop
lock
lods
xchg
cmp
test
sbb
daa
ja
cltd
and
arpl
or
mov
stc
jp
imul
mov
std
fmul
fsub
add
add
in
scas
daa
add
push
scas
fs
jo
jae
mov
push
fdivl
mov
or
repz
fs
dec
xchg
icebp
xchg
cld
jns
fsubrs
arpl
or
dec
jl
mov
mov
add
out
xrelease
push
jae
stos
lods
or
pop
scas
mov
sub
and
mov
jp
insb
fldln2
sub
clc
std
adc
or
and
aam
ret
sbb
mov
jns
sahf
pushf
notl
mov
adc
fld
push
nop
sbb
xor
mov
adc
nop
stc
xchg
insl
test
add
fsts
mov
cmp
hlt
ss
xor
js
bound
shrl
bound
push
add
jo
rorl
inc
push
in
arpl
cmpsb
mov
inc
mov
mov
jle
addb
ret
mov
adc
lds
cmpsl
cmp
add
xor
popf
popa
sub
mov
rcl
jo
cmc
stos
pop
test
stc
aam
jecxz
adc
inc
and
mov
pusha
mov
fsubs
xor
repz
cmpb
out
call
in
cmp
dec
mov
dec
pop
cmc
mov
lods
in
test
inc
sub
cmc
cli
cs
clc
jae
ljmp
jns
mov
adc
movsl
jb
and
jbe
clc
mov
sbb
add
sbb
or
add
leave
pop
hlt
test
ffree
jmp
mov
fcmovne
shll
enter
push
pop
mov
sbb
mov
or
ret
sbb
je
push
add
cmp
xor
xchg
outsl
xchg
ret
xchg
sub
cli
fdivs
push
inc
dec
xchg
test
dec
mov
loope
daa
in
scas
mov
push
push
cmp
jns
dec
inc
aaa
adc
lock
xchg
popa
aad
xchg
and
test
inc
testb
mov
add
pop
xorl
or
pop
and
sub
add
sbb
adcl
cmp
hlt
pop
pop
shr
mov
cltd
test
pop
insb
jg
and
std
insb
cltd
mov
cmp
ret
jns
pop
fsubrs
shr
inc
push
cmp
out
sti
ror
pusha
incl
loop
and
outsl
mov
sarl
out
clc
pop
mov
fcoms
movsb
add
xorl
inc
and
scas
mov
mov
popf
call
xor
mov
test
jbe
movsbl
jbe
hlt
test
sbb
rol
loopne
fmull
lds
push
sahf
fwait
inc
adc
iret
xchg
gs
mov
xchg
lahf
lahf
dec
es
xor
pop
leave
adc
or
sarl
push
add
xchg
sti
cwtl
cmp
daa
inc
ljmp
in
mov
aam
daa
fidivrl
push
add
les
addr16
add
cmpb
cwtl
hlt
sub
idivl
push
hlt
loopne
out
or
pop
repz
insl
xchg
imul
mov
ds
aam
out
fsubrl
pop
aam
test
add
xchg
cmp
test
lahf
loop
pop
sub
out
in
pop
lods
into
dec
ret
call
stos
jne
push
sbb
add
mov
or
ss
xchg
std
out
xorl
jecxz
push
inc
sub
cmpb
mov
cld
arpl
nop
mov
outsb
in
sbb
mov
cmp
addl
bound
addr16
xchg
mov
in
shl
int3
jns
inc
insb
and
xor
push
loope
push
and
aad
test
gs
int3
imul
sub
pop
fisubs
mov
test
outsl
in
cli
and
and
bnd
xchg
sbb
mov
pop
add
adc
xchg
fs
lods
popf
out
sti
jl
fs
shlb
dec
arpl
xchg
adc
lret
jne
adc
pop
pop
push
scas
lock
lret
push
add
push
imul
loop
xchg
je
into
sbb
or
rorl
mov
mov
cwtl
or
pushf
dec
mov
mov
adcb
ficoms
xchg
cltd
jno
sti
ret
push
pop
and
inc
sbb
push
add
lds
add
aad
pop
jnp
inc
mov
frstor
repnz
fs
out
repz
cmc
aam
push
shlb
dec
jecxz
xor
cs
mov
push
dec
leave
std
dec
jecxz
xchg
dec
sbbb
sahf
lea
add
fsubrs
cmp
xchg
loope
add
inc
mov
in
or
int
mov
lock
xchg
mov
cmpl
das
out
push
mov
mov
scas
imul
mov
sbb
mull
add
movsb
dec
mov
jl
aad
xchg
sbb
lock
pop
pop
jmp
imul
cmp
in
insl
mov
mov
xor
inc
and
repz
dec
xor
mov
shl
sbb
or
stc
and
and
sub
in
ret
jmp
repz
lods
cmpsl
adc
jmp
push
jns
xchg
cmc
loopne
out
fstps
mov
push
movsl
adc
sahf
mov
or
pop
ret
jecxz
inc
sarl
addr16
pop
dec
outsl
inc
pop
call
aaa
out
loopne
stos
jae
jge
inc
pop
imul
out
dec
or
mov
pop
adc
push
add
jmp
addl
xor
imul
std
ret
dec
adc
inc
loope
pop
sbb
out
cmp
addl
cmpb
ja
subb
cs
and
and
movl
out
jle
jmp
lret
ficoml
sub
loop
je
aas
stos
mov
xlat
xor
cmc
shrb
cmpsb
cmp
out
jmp
mov
inc
jno
mov
inc
test
in
repz
imul
push
pop
pop
pop
out
js
mov
dec
aam
out
ds
in
sbb
jge
popa
lret
cmovle
cmp
pop
mov
mov
test
mov
cli
aas
jns
imul
adc
or
and
stos
xchg
mov
jecxz
or
shlb
mov
mov
dec
sbb
push
add
inc
sbb
mov
xor
dec
aaa
mov
popf
es
push
repnz
addr16
fdiv
jp
push
jl
pop
push
cmp
fs
mov
sarl
sub
sub
mov
jbe
push
inc
leave
xor
sub
cmp
pop
rcll
pusha
dec
pushf
in
jnp
xchg
shrl
xchg
adc
cmp
subb
data16
sub
leave
filds
cmp
mov
scas
loop
dec
fs
inc
cmpsb
les
ljmp
aam
stos
sub
jmp
pushf
shr
xchg
stos
inc
add
int
int3
inc
pop
add
add
fldz
outsb
cmp
cmpsl
and
jge
sti
incb
ret
mov
or
fcomps
or
push
cltd
fwait
xchg
test
cs
out
mov
fistpl
inc
mov
imul
fdivrl
pushf
mov
inc
psubusb
xchg
pop
add
xlat
add
mov
subb
mov
xor
es
stos
filds
rcl
xchg
xchg
pop
mov
int
imull
mov
mov
loopne
jp
pushf
xor
inc
jae
movsl
aaa
sub
jbe
adc
and
enter
mov
push
xorb
sub
iret
xchg
daa
push
jp
mov
adc
lods
jp
push
mull
mov
aaa
dec
out
pop
xchg
cmpsb
inc
movl
insb
sub
mov
and
pop
pop
insl
xchg
pop
mov
rcll
cmp
arpl
mov
push
push
and
fnstcw
xor
xor
mov
std
leave
add
lcall
cmp
dec
mov
leave
cmpsl
stc
xor
out
pop
inc
mov
flds
xchg
cmp
mov
ds
xchg
xchg
adc
mov
jmp
mov
add
lcall
orb
stos
in
xor
add
mov
sbb
testl
lea
rorb
fs
inc
pop
mov
movsb
push
jecxz
inc
xchg
sbb
or
loop
push
mov
pop
fidivs
stos
mov
mov
sahf
pop
or
ret
push
js
push
add
out
ljmp
mov
jne
es
movsb
pusha
xor
test
xorb
rorl
push
shrl
or
mov
sub
repz
sub
sahf
adc
aam
sub
or
sbbl
jbe
or
xchg
ficoms
push
out
int
loop
sbb
xchg
push
sbb
adc
cmp
jmp
into
fdivr
out
push
stos
pop
xorb
mov
mov
dec
cld
or
sbb
popl
fldcw
xor
mov
scas
xchg
xchg
dec
pop
xchg
mov
mov
std
ss
out
enter
adc
xchg
or
in
sub
mov
xlat
xchg
cmc
adc
cmp
aam
repz
arpl
sub
jle
inc
cmp
mov
push
or
stc
xchg
xor
ret
xor
pushf
je
sbb
jo
mul
pop
in
sbb
add
inc
int3
push
rcrw
fbld
pop
pop
test
lock
std
les
pop
mov
scas
in
add
sbb
into
std
add
fidivl
out
faddl
sbb
in
mov
mov
sub
fstpt
mov
push
adc
lods
adc
jecxz
mov
push
push
xorb
insl
cmp
pop
pop
adc
push
test
inc
pop
xor
mov
pop
dec
addb
rcrl
les
adc
ljmp
jne
mov
dec
xor
xchg
mov
and
xor
jp
out
and
or
mov
lahf
jp
loop
jne
dec
jp
pop
push
sbb
sar
or
rol
out
sub
loopne
sub
add
in
sub
sbb
lock
loop
xchg
scas
xor
lret
mov
fwait
dec
pop
push
cmp
test
xchg
movswl
aaa
nop
imul
mov
ds
out
mov
pop
dec
sub
je
xorl
pusha
lahf
jl
test
imul
fisubl
adc
push
dec
pop
hlt
shrb
mov
popa
por
call
sub
faddl
fimull
movsb
stc
and
stos
ficoms
sbb
sub
mov
jbe
and
stos
arpl
pushw
cltd
adc
imul
in
shr
test
add
adc
push
dec
lcall
xlat
aaa
fisubl
xchg
popa
imul
xor
mov
pop
jbe
dec
ret
das
lahf
mov
scas
jne
rcll
push
sub
push
dec
mov
cmc
cltd
rorl
clc
dec
xor
sbb
jne
add
inc
inc
out
enter
jecxz
jne
dec
push
sub
pop
sbb
idivl
ljmp
mov
das
mov
scas
inc
dec
jge
jne
mov
jns
test
cmp
push
or
pop
pop
lret
add
ret
js
mov
and
jbe
popf
add
add
pop
out
mov
stos
sbb
push
mov
ljmp
dec
ret
test
in
jmp
inc
adc
xchg
popf
or
pop
sbb
ret
ljmp
xchg
pusha
push
fcom
cltd
je
push
popa
inc
pusha
fdivrs
jbe
jbe
je
pop
mov
cwtl
and
nop
iret
jno
dec
jb
push
sbb
xor
fstps
sbb
pop
inc
mov
and
dec
cmpsl
out
js
js
popf
stos
iret
dec
jne
mov
imul
mov
aad
xor
sbb
mov
mov
sbb
roll
lahf
int
in
inc
push
adc
lret
les
xor
jae
push
aas
sub
push
inc
test
jl
cmp
repnz
xor
jmp
mov
xchg
lret
and
sbb
and
stos
ret
lock
pop
jmp
cmp
pop
cmpsl
xchg
xor
sub
cli
mov
sbb
sub
xchg
xor
jne
test
or
lds
sti
pop
les
or
repz
lahf
inc
push
xlat
xchg
adc
or
mov
xchg
int3
jge
pop
sbb
insl
enter
xchg
adcl
fcoml
or
mov
xchg
lcall
pop
xlat
cmpsl
notb
xchg
loope
xchg
scas
stos
dec
jp
ss
add
mov
xchg
mov
cld
loopne
es
push
cli
cli
sub
dec
and
mov
mov
jmp
push
imul
jecxz
imul
push
add
js
rolb
push
mov
jp
push
inc
xchg
xlat
ficompl
daa
lcall
push
in
test
mov
js
adc
mov
mov
sbbl
dec
pusha
mov
imul
fsub
out
das
xchg
sahf
fwait
pop
fstpt
inc
mov
inc
scas
stos
xchg
outsl
nop
test
outsb
inc
sbbb
vhaddps
pop
inc
mov
lods
mov
mov
or
jecxz
inc
sub
lds
jnp
adc
push
int3
xchg
fwait
or
cmc
in
aas
in
adc
inc
cltd
push
inc
jg
push
das
rcrl
in
fcoms
sbb
lahf
xchg
mov
mov
mov
jno
jno
inc
addl
mov
adc
sbb
cmpsl
es
sub
pushf
ss
mov
mov
out
stos
arpl
lock
imul
push
and
loop
xchg
pushf
jnp
andl
sub
test
stos
iret
mov
mov
imul
scas
gs
lret
mov
mov
push
or
rcr
cwtl
arpl
negb
imul
push
adc
hlt
shl
call
fdivs
mov
inc
das
push
popf
push
int
push
adc
popf
dec
dec
test
adc
and
int3
inc
inc
mov
pop
lock
adc
test
stos
cmp
and
and
xchg
xor
mov
adc
sbb
fistl
ficompl
in
and
inc
cmpl
jns
mov
mov
into
mov
and
loopne
pop
loope
arpl
lock
sub
sbb
imull
fdivl
mov
mov
sahf
sub
decl
ret
or
repz
repz
lcall
jecxz
xor
bound
xor
dec
pushf
fs
sub
lock
push
pop
push
or
outsl
mov
imul
loope
mov
sbb
xchg
push
sbb
or
repz
cmp
insl
or
add
gs
jmp
test
rclb
es
xor
aad
and
xchg
add
lret
out
push
lods
repnz
loopne
leave
jb
daa
pop
cltd
scas
loope
in
mov
aas
and
dec
aas
pop
popf
jae
pop
or
out
pop
out
rcrb
fcoml
xchg
dec
sti
jge
push
fldcw
rorb
inc
pop
mov
and
mov
insb
idiv
cwtl
test
mov
pop
stos
sub
loopne
mov
out
xchg
insl
mov
scas
cmp
adc
lret
adc
aam
mov
xor
out
aas
shrl
mov
jb
ja
mov
mov
pop
or
dec
inc
pusha
test
out
imul
jle
mov
loope
ffree
add
lcall
sbb
gs
ja
out
in
add
fmuls
pop
or
mov
lock
rcrl
push
push
mov
jmp
inc
aad
iret
pop
es
mov
scas
fists
in
jl
cltd
mov
test
sub
inc
and
cltd
sbb
jbe
in
ljmp
movsl
jge
or
test
pop
inc
cmc
inc
imul
std
ffreep
fsubl
sbb
xchg
shlb
arpl
jne
movl
xor
in
leave
push
stos
mov
xlat
or
add
test
adc
rorb
mov
loope
ficoml
or
push
sbb
mov
cli
mov
out
jnp
call
icebp
mov
lahf
xchg
into
and
push
in
add
add
jnp
std
outsl
ja
mov
sub
loope
adc
push
inc
mov
add
mov
shrb
leave
xor
xorb
fwait
mov
cwtl
xchg
jo
push
xorb
mov
sbb
into
subl
pop
sub
mov
add
imul
pop
xchg
out
rcrl
mov
mov
cmp
mov
sub
mov
ss
shrl
icebp
dec
mov
adc
out
and
xor
roll
sbb
test
pop
test
addr16
adc
push
fisttpll
dec
xchg
pop
fldcw
insb
sbb
mov
xor
xchg
mov
push
sbb
or
pop
frstor
in
out
xlat
mov
sub
stos
mov
cmpb
sbb
sub
fcmovb
repnz
insl
aad
mov
stos
push
xchg
adc
std
jmp
cmp
in
scas
out
lret
pop
jmp
sbb
fcoms
ret
insb
inc
lret
aad
adc
jge
icebp
jp
mov
xchg
mov
imul
mov
dec
ljmp
xchg
test
pop
test
lahf
movsl
cld
popa
inc
jnp
ljmp
cli
and
mov
pusha
jp
mov
or
cld
arpl
mov
nop
adc
js
mov
cmp
adc
xchg
mov
mov
xchg
test
ret
jg
pop
shrl
pop
jge
aas
mov
mov
add
xor
enter
fsubrl
inc
lods
adc
mov
mov
movsl
jo
push
testb
mov
mov
roll
xor
daa
ret
mov
xchg
jecxz
push
jno
mov
aas
mov
in
jle
sub
stos
or
pop
inc
cmp
pop
pop
fs
add
mov
and
and
nop
popa
test
mov
js
bound
xor
adc
mov
cmp
in
movsl
scas
movsb
jno
jl
jne
enter
sub
adc
and
aas
in
movsb
in
pop
xor
xchg
mov
adc
push
loopne
dec
jl
inc
pop
fadds
and
dec
es
cld
fstps
je
movsb
xchg
sbbb
dec
xchg
repnz
stos
mov
cmc
clc
mov
mov
dec
lret
inc
mov
pusha
das
jno
mov
popa
jecxz
mov
mov
cltd
pop
add
mov
test
push
arpl
dec
shrl
dec
mov
cmpsl
lret
sbb
fildl
jb
repnz
push
in
addr16
test
loope
and
jae
mov
ja
clc
push
in
mov
mov
mov
sub
jge
loope
pusha
roll
idivb
decl
sbb
shll
sub
nop
test
and
ret
jge
rolb
es
in
inc
mov
mov
jno
iret
inc
stos
loope
xlat
loopne
cmpsl
dec
mov
and
add
xor
cmp
pop
pop
xor
xchg
int
sahf
cmp
jecxz
stos
add
push
pop
xlat
cli
fisubl
lcall
xchg
sbb
cmp
testb
stc
ja
pop
sti
inc
lods
cltd
lea
cmp
add
mov
int
loope
ljmp
hlt
xchg
mov
sub
test
cli
cmp
in
ljmp
jo
inc
ss
pop
notb
jns
lahf
jb
subb
je
int3
mov
das
cmp
sub
test
inc
dec
out
js
stos
lcall
pop
or
loope
add
dec
pop
jae
or
mov
das
test
inc
pop
fisubrs
hlt
fcomi
adc
cmc
rolb
loopne
sbb
inc
mov
sahf
cmp
mov
gs
add
int3
jae
cwtl
mov
mov
fstps
test
and
aam
fs
cmpsl
gs
idivb
sti
dec
ds
fldt
mov
pop
cmp
out
repz
dec
jbe
daa
add
or
wbinvd
mov
sbb
ja
push
pop
jns
cs
mov
pushf
std
ret
sub
mull
and
mov
inc
je
nop
add
ljmp
cmp
out
outsb
sbb
pusha
imul
std
bnd
int3
arpl
fcompl
test
inc
scas
es
jge
mov
and
shll
dec
roll
pop
addr16
daa
push
mov
adc
jle
shl
xchg
adc
push
call
push
std
and
sub
and
jp
dec
and
fiaddl
pop
decb
cmp
pop
inc
sbb
shr
xchg
idivl
pushf
fcompl
dec
loop
pop
cwtl
sub
pop
dec
cmp
je
aad
mov
jmp
int
stos
xor
ds
sbb
jp
rorb
dec
dec
cmp
in
jae
dec
sahf
call
in
call
push
mov
jnp
xor
push
bnd
lcall
aaa
lcall
cli
iret
and
popf
mov
lods
mov
addr16
dec
inc
popa
mov
mov
std
dec
mov
idiv
add
sbb
movsb
sbb
adc
jl
out
loope
dec
cmpsl
out
lret
push
testb
push
stc
dec
inc
sub
xchg
jecxz
xor
mov
add
pop
sub
lods
imul
aaa
jmp
cmp
movsb
cmp
or
jecxz
sbb
or
stos
push
pop
je
dec
subl
push
hlt
loopne
lds
inc
test
mov
fistps
idivl
dec
ljmp
mov
cltd
sub
sub
jg
jge
inc
mov
mov
sub
ret
mov
or
xorb
mov
or
jbe
and
sahf
jle
xor
dec
and
insl
in
movsl
ss
add
jl
mov
cmp
add
push
and
out
push
sbb
pop
mov
jecxz
sub
pop
ret
push
pop
xchg
dec
jle
add
xchg
out
dec
add
push
pop
lret
lods
cmp
hlt
xor
or
adc
mov
and
test
stc
je
inc
xchg
mov
push
leave
fsubrs
shrl
mov
inc
sub
push
mov
mov
mov
sahf
jp
mov
or
push
lahf
add
sub
es
aad
add
loop
push
fildl
dec
mov
stos
paddq
mov
popf
adc
enter
pop
sub
ret
pop
icebp
std
sbb
and
aas
mov
push
dec
sti
cltd
jge
mov
or
pop
mov
fs
add
test
mov
jmp
fbld
fmuls
mov
or
mov
out
adc
push
negb
xor
jg
mov
iret
mov
inc
lds
sub
jmp
aad
adc
cld
in
bound
dec
mov
std
and
and
insl
lret
test
xchg
mov
loop
jbe
pop
mov
pop
add
stos
jmp
les
mov
shrb
cmp
xor
scas
mov
pushf
xchg
pmaxub
rol
push
shl
rcrl
insb
jne
push
fsubrl
lods
dec
inc
mov
and
push
adc
in
xchg
sub
outsb
pop
mov
icebp
dec
inc
mov
loop
test
shll
cwtl
jecxz
imul
xor
stc
mov
and
pop
lods
imul
cmc
int3
out
ds
xchg
int
out
das
adc
adc
sbb
pop
sub
sti
jge
pop
mov
or
popf
lds
inc
push
adc
in
add
mov
pop
call
iret
push
push
mov
iret
in
fucomip
xchg
push
inc
add
loop
pop
adc
sbb
pop
cmp
mov
popa
dec
jo
cmc
leave
jo
sbb
fisubrl
insl
lret
mov
jnp
pushf
int3
nop
or
rorb
mov
sub
in
cmp
daa
push
xchg
fistpl
arpl
aas
inc
mov
mov
dec
jne
fwait
ror
out
loope
cld
dec
in
int3
xor
sbb
dec
dec
popf
xchg
icebp
in
mov
notl
xchg
dec
jno
mov
dec
gs
insl
dec
mov
xchg
iret
jnp
fld
xchg
mov
xchg
notl
inc
in
and
js
push
or
xchg
jmp
es
loop
sbb
and
sbb
pop
cmp
scas
lcall
lcall
out
enter
arpl
mov
inc
xchg
inc
jg
ficomps
mov
cli
dec
add
dec
pop
test
and
and
lods
add
mov
sbb
sub
add
divl
fadds
push
pushl
jo
out
loop
inc
xchg
jmp
fs
outsb
jb
push
ret
iret
mov
lea
outsl
repnz
sub
roll
jecxz
imul
in
stos
fidivrl
mov
mov
mov
inc
mull
shl
outsl
fadds
in
adc
popa
stc
fiadds
test
adc
imul
repz
scas
nop
arpl
mov
aaa
inc
lods
mov
sbb
arpl
outsl
enter
je
add
movsl
jno
repnz
pop
mov
neg
lcall
aam
cltd
adc
pusha
imul
call
pop
add
loope
sbb
pop
adc
cmpsb
add
imul
fsubs
sub
or
mov
mov
in
add
loopne
xor
adcb
or
mov
outsb
dec
cltd
sbb
fsubrs
dec
cmc
dec
jg
lods
mov
fwait
gs
mov
xor
sub
or
and
scas
iret
sbb
arpl
ja
arpl
sbb
or
adc
mov
out
or
jnp
les
daa
adc
cmp
hlt
or
mov
addr16
aam
lahf
data16
inc
or
ljmp
bound
push
stos
and
icebp
xor
js
call
mov
aam
inc
push
mov
or
outsl
mov
adcl
iret
out
in
ficoml
shlb
dec
in
lahf
test
mov
je
jae
shll
cltd
xchg
mov
outsl
inc
xchg
push
or
xor
popf
popf
jg,pt
mov
mov
ds
sti
pop
push
into
and
pop
cmc
jae
mov
enter
push
cmp
xchg
shll
cli
and
cmp
sbb
mov
stc
jecxz,pn
into
cmc
add
jo
xor
rol
in
jne
lds
pop
or
push
sbb
adc
fcompl
adcl
leave
pop
test
sbb
loopne
ret
adc
mov
xor
jle
mov
jbe
push
xchg
push
insb
sbb
mov
fisttps
mov
mov
push
mov
xchg
outsl
insl
lret
imul
addr16
jo
sbb
stos
enter
loop
mov
dec
arpl
ss
add
inc
jb
addb
mov
rcll
mov
sbb
sub
les
xchg
mov
xor
cmp
sub
scas
nop
cmp
pop
arpl
and
mov
sti
xor
out
daa
lds
aam
xchg
mov
mov
rorb
sub
push
daa
xchg
add
sar
xor
testb
movsl
mov
sub
hlt
pop
lcall
sub
std
ss
xchg
jns
stos
sti
movsb
ljmp
out
aam
addr16
sbbb
cmp
push
mov
sbbb
pop
cld
sub
dec
fst
pop
iret
in
and
mov
fadds
daa
imulb
jmp
add
or
push
mov
mov
adc
dec
xchg
cwtl
mov
pop
mov
mov
pop
fcmovnu
ss
pop
dec
insl
loop
daa
adc
mov
outsb
idivb
imul
push
imul
dec
in
mov
lods
pop
xor
xor
das
and
push
test
xchg
lret
sbb
cli
mov
sbb
xchg
aam
cltd
xchg
add
push
add
shlb
fwait
sbb
in
je
das
stc
xchg
push
pusha
push
xchg
adc
ret
sahf
lds
inc
push
xor
je
push
mov
xchg
fldt
jl
add
add
mov
sbb
pop
sbb
xor
adc
adc
xchg
scas
loop
loop
jle
fwait
pushf
dec
or
imul
test
xchg
pushl
lret
push
mov
jae
cmp
xchg
shlb
cmpsl
and
sti
andl
dec
rorb
orl
in
sub
hlt
sub
cmc
adc
lods
test
scas
jge
out
daa
dec
nop
push
icebp
and
cmpsl
pop
subl
ror
xor
push
sbbl
and
jecxz
ja
mov
scas
ja
add
repz
imul
adc
cmp
lods
fisubrl
push
xchg
mov
dec
ds
enter
aad
mov
xor
bound
fdivrl
out
push
adc
mov
lahf
push
std
jbe
and
popf
and
sbb
xor
inc
xor
jle
testb
xor
xchg
loope
and
xchg
mov
cmpsl
jg
stc
in
push
fs
fdivrs
jns
cmp
mov
sbb
sub
mov
lret
or
mov
inc
test
add
adc
cli
xchg
adc
mov
mov
pop
jno
add
push
fcoms
xchg
inc
lret
xchg
lock
mov
lods
cmp
shlb
pop
pop
jl
cmp
xor
cld
jb
mov
jns
pop
pusha
gs
push
cmp
inc
scas
sub
and
rolb
jmp
or
or
or
and
js
dec
and
loop
lret
popa
push
xor
inc
clc
movsl
mov
adc
xor
jne
addr16
add
ss
lcall
add
mov
hlt
mov
sub
adc
inc
sbb
dec
sbb
add
lea
lahf
cmp
dec
mov
lods
imul
add
cmp
popa
or
mov
xchg
sbb
pusha
push
ficoms
fiaddl
cmp
xlat
lret
imul
jb
stc
mov
and
cmp
dec
push
mov
dec
stos
cs
pop
adc
dec
call
inc
in
and
mov
xchg
fldt
push
sar
and
mov
pop
mov
inc
cs
sbb
push
mov
leave
lret
in
outsb
jns
inc
jg
push
stc
test
inc
into
outsl
dec
outsl
stc
rcll
cmp
jbe
lods
fwait
and
xchg
in
in
ljmp
mov
pusha
rcl
test
scas
cltd
rorb
dec
scas
inc
dec
cmp
pop
inc
cmpsl
dec
pop
ret
je
sbb
mov
mov
push
dec
cmp
lret
lods
int
pop
xor
xor
jno
loope
push
inc
addr16
in
pusha
inc
add
test
pop
les
shl
sub
leave
stos
pop
jmp
imul
add
xchg
mov
dec
sub
and
mov
dec
add
jecxz
ja
stos
add
mov
test
cmp
ljmp
adc
jl
mov
xchg
xor
adc
test
hlt
push
into
lcall
cltd
test
dec
ret
mov
ss
sbb
test
fwait
jge
shlb
sbb
adc
out
jle
sub
push
jg
cmp
push
insb
mov
dec
dec
or
fisubrs
dec
xor
insb
dec
imul
addr16
inc
sub
dec
xchg
pop
jg
mov
lds
mov
cmp
loopne
push
lret
adc
add
ljmp
push
aad
mov
call
out
frstor
pop
shlb
push
push
xchg
repnz
sub
mov
pop
pop
pop
push
sbb
and
jle
outsb
movsl
jmp
pusha
push
fadd
icebp
mov
cmpsl
subl
adc
into
fmull
rorb
fwait
and
adc
adc
xchg
mov
add
imul
push
cmpsb
add
mov
sbb
inc
and
jnp
mov
and
inc
ret
xchg
cld
xchg
lret
jg
popf
in
push
mov
pop
lods
pop
mov
cmp
and
xor
rol
imul
daa
rcll
and
in
xchg
inc
push
rclb
mov
and
lds
dec
cmpsl
lret
and
sub
mov
leave
dec
lods
xchg
mov
mov
addr16
ret
cmpsl
stc
or
mov
xchg
cmp
cmpsl
jo
scas
add
and
in
test
loope
movsl
sub
lea
xlat
xchg
and
inc
pop
adc
or
pop
add
mov
out
out
add
mov
int
pop
xlat
push
dec
mov
and
nop
mov
shll
cmpsb
ret
cs
mov
jno
ja
fs
jns
aaa
shll
in
iret
aam
pop
ret
lock
insl
mov
jb
pop
jle
xchg
sub
arpl
js
or
sbb
aas
jp
push
fistpl
lret
jae
arpl
add
xchg
cmp
fmul
test
in
jns
push
clc
mov
jo
out
lds
add
arpl
push
mov
add
inc
dec
add
and
je
ret
pushf
fisttps
pop
dec
push
stc
int3
jecxz
in
fcomps
adc
xchg
lret
insb
xor
push
mov
jo
sbb
adc
cmpb
add
push
cmp
push
cmpsb
lret
jl
push
add
dec
push
xor
mov
clc
and
sahf
mov
pop
nop
mov
cwtl
jno
xor
pop
xlat
xlat
add
jecxz
jb
std
gs
out
std
cmp
dec
cltd
sub
shll
adc
loopne
sub
adc
xor
and
and
int
cwtl
mov
mov
pop
out
xchg
cmp
ret
jge
mov
inc
mov
pop
sbb
pop
int3
fstpt
scas
enter
dec
es
add
cmp
into
arpl
ljmp
dec
pop
sbb
insb
dec
cmpsl
mov
mov
or
test
aas
sub
push
mov
jg
xchg
and
test
mov
push
xor
add
jo
cwtl
in
movsl
or
leave
xchg
push
xor
or
pop
jno
ds
adc
sbb
cli
xor
cmpsb
sbb
fsubs
xor
inc
mov
in
jae
xchg
xor
push
xor
gs
mov
mov
ss
jns
push
adc
fsubrs
insb
dec
movsl
pop
inc
fimuls
sbb
cmp
push
jnp
lret
out
and
or
divb
inc
imul
daa
insb
lods
in
movsl
mov
mov
mov
jge
cwtl
sub
mov
cmpsl
xchg
psubusw
pusha
and
dec
cmp
push
loop
dec
repnz
gs
pop
iret
cmp
lret
psrad
xchg
jnp
cwtl
jbe
sub
lods
xlat
lock
jbe
ficoms
mov
rorl
loop
and
bound
das
mov
out
ss
mov
es
jb
push
and
or
xchg
sub
leave
std
cld
movsl
ljmp
arpl
insl
push
notb
negb
sbb
and
addr16
or
in
fildll
mov
mov
or
add
stc
inc
inc
push
out
adc
not
enter
in
jns
es
xchg
ja
lea
je
pop
cmc
sbb
mov
adc
jl
in
inc
jne
ljmp
icebp
popf
nop
xor
int
sbb
add
and
mov
es
mov
xor
jae
rorl
xor
mov
inc
xchg
and
adc
pop
push
sbb
pop
sub
pop
scas
dec
and
mov
mov
mov
rol
sub
les
test
mov
fcompl
add
xchg
rcr
add
pop
scas
xor
mov
pop
pop
loope
mov
push
outsb
testb
es
icebp
rcll
sbbl
mov
mov
test
lods
lock
add
xchg
xchg
lock
mov
push
rorl
adc
inc
xchg
and
cs
xchg
xchg
sti
call
jge
push
clc
mov
mov
sbb
or
pop
push
leave
push
sbb
clc
adc
int3
and
std
outsb
mov
nop
fwait
hlt
mov
cmc
dec
adc
rcrb
push
and
push
ja
jmp
push
and
xor
addb
inc
sbb
movl
fsubrs
or
insb
and
jo
lret
negl
lods
adc
sbb
ss
inc
mov
pop
xchg
sbb
popf
adc
sbb
es
cli
push
fsincos
cmp
fildll
mov
aam
pop
xlat
adc
subb
stos
dec
scas
cmp
and
xor
pop
es
in
mov
rcrl
shll
push
loop
outsb
push
fcomip
and
push
lea
cmp
add
push
dec
adc
cmp
xchg
mov
pop
iret
arpl
test
sub
pop
addr16
xor
add
sub
dec
push
sbb
xor
sub
dec
dec
pushf
cmp
arpl
stos
enter
mov
lods
jge
rorb
test
mov
out
repnz
sub
add
inc
adc
rcl
push
sub
sub
lods
mov
bound
xchg
inc
imul
daa
mov
add
cmp
ret
ret
sbb
fisttps
dec
in
scas
dec
pop
aam
inc
pop
cs
jl
out
rcrl
lds
ja
enter
movsl
push
jne
mov
push
call
jmp
or
push
fs
push
out
and
popl
push
hlt
mov
xchg
jno
gs
repnz
les
inc
add
es
mov
or
lods
out
pop
clc
dec
push
gs
add
mov
data16
outsl
dec
aam
push
xor
sub
cmpsb
fildll
daa
cmpb
xchg
push
in
int
mov
inc
call
out
cmc
loope
mov
push
or
divb
ljmp
cmc
mov
dec
push
std
fists
lret
push
test
lret
in
clc
repnz
fdivs
lea
mov
inc
mov
das
sahf
cmc
je
inc
in
xchg
mov
xchg
jmp
pushw
or
lea
pushf
or
jns
push
inc
mov
je
and
mov
shl
or
cltd
lret
xor
mov
negl
out
jle
int3
xor
es
sub
jg
mov
xor
jae
push
cmp
pop
mov
fisubs
fisttpl
push
ret
xor
cwtl
jae
imul
gs
jl
sub
pop
mov
je
xor
jg
fimuls
cmp
out
dec
rorl
sbb
cltd
mov
jns
push
mov
sbb
dec
ret
xor
jae
repz
jmp
mov
ja
mov
mov
xorl
in
shlb
sub
lret
das
testl
cs
xor
sbb
mov
mov
sub
jmp
in
fstps
stos
mov
mov
iret
cltd
mov
dec
mov
sahf
stos
pusha
ror
cwtl
sub
pop
shrl
lds
ret
pushf
xor
cld
mov
je
mov
mov
enter
or
dec
sbb
sbbb
dec
aas
outsb
movsl
sbb
lods
mov
mov
jge
push
retw
fs
leave
xchg
je
mov
xchg
xchg
cmp
adc
xchg
stos
mov
mov
ds
rorl
out
sbb
pop
mov
insb
push
jl
pop
sbb
data16
fdivrs
cmp
aaa
or
ret
dec
add
les
std
jmp
xor
in
sahf
jle
popf
or
and
xlat
jecxz
mov
xchg
xlat
in
cmp
std
xlat
and
mov
aas
inc
inc
lcall
lcall
ret
or
push
test
fs
and
into
and
mov
sti
inc
shrl
ds
out
notl
lods
pop
mov
jb,pn
sub
rcrb
mov
cmp
int
frstor
movsb
aaa
jae
and
rcrl
and
inc
inc
mov
in
icebp
mov
jne
or
sub
dec
sbb
pop
stc
jge
inc
mov
mov
sub
lret
cmpsl
enter
es
mov
adc
jbe
sbb
push
roll
inc
leave
mov
push
sbb
dec
push
or
mov
scas
fsubl
movb
xchg
aad
xor
mov
mov
push
mov
pushl
add
fstpt
idivb
in
xor
cmpsb
lahf
jbe
jl
dec
addr16
mov
inc
pusha
dec
mov
sub
pusha
in
mov
andb
and
and
xlat
fidivrs
push
xor
cmp
std
add
lods
idivl
addr16
movsl
cmp
xor
ljmp
xor
sbb
leave
std
sbb
inc
sbb
fbstp
cmp
sbb
cmp
xor
mov
roll
or
dec
xorl
fldenv
pop
jo
push
add
clc
les
mov
and
xchg
imul
mov
shlb
test
fcmovnu
jnp
adc
pop
aaa
cld
jge
js
arpl
and
stc
jb
shll
nop
sbb
dec
adc
js
mov
mov
iret
pop
mov
ljmp
inc
cmp
xor
jnp
nop
aaa
inc
push
pop
add
sti
in
pushf
bnd
scas
pop
cltd
fsubrs
enter
sbb
stos
mov
inc
sub
fsub
push
fdivr
mov
es
jp
cwtl
cmp
mov
repnz
lods
arpl
dec
test
inc
imul
shll
dec
imul
ss
sbb
fidivrl
inc
pop
jb
sbb
andb
in
aad
testl
mov
les
mov
sbb
mov
fwait
push
jle
push
lret
test
daa
cmc
out
adc
mov
lds
jl
xor
mov
cmpsb
adc
shl
inc
push
in
idivl
pusha
pop
in
pushf
cmpsl
popf
jg
test
mov
and
push
pop
dec
fdivrs
mov
out
mov
add
or
add
roll
jae
sub
gs
or
in
insb
ds
adc
cwtl
scas
jmp
and
dec
add
cmp
xchg
push
push
in
es
rorl
icebp
cmp
out
test
sbb
dec
adc
dec
mov
sbb
jo
inc
bound
inc
addl
loop
gs
jecxz
xchg
imul
mov
push
adc
leave
insb
sti
push
out
fildl
ficoml
mov
in
orb
xor
mov
pusha
ljmp
shll
lret
arpl
stc
mov
adc
lret
je
sti
add
sbb
ret
push
jnp
jae
mov
subl
push
loopne
stos
xor
and
aam
mov
negb
pop
adc
popa
cmpsb
xchg
and
out
out
mov
mov
push
loope
test
or
cld
in
inc
into
adc
out
mov
sahf
es
test
pop
push
sbb
xor
js
arpl
inc
xor
mov
sbb
jnp
fldt
jnp
jg
insb
mov
and
scas
lahf
inc
bound
xchg
xorl
mov
pop
mov
shlb
push
mov
mov
jmp
test
jp
xor
cmp
scas
shr
dec
push
mov
test
add
arpl
or
pop
pop
test
mov
enter
and
notb
cwtl
dec
rcrb
mov
and
fisubl
das
sbb
daa
imul
adc
push
sbb
insb
push
sahf
lods
sahf
sub
xacquire
dec
push
push
repnz
jmp
sbb
subl
lock
xchg
test
sub
pop
out
and
ret
mov
adc
or
xor
fcoml
test
xor
stos
cli
adc
cmp
loope
jns
cmp
insb
push
pop
xchg
xor
mov
repz
mov
sub
mov
sbb
hlt
mov
jae
in
or
mov
inc
rcrb
cmp
mov
mov
repz
mov
addb
outsl
xor
rclb
les
int3
movsl
or
push
daa
outsl
test
mov
stc
ds
in
xchg
fnstcw
aas
adc
inc
jo
stos
out
add
mov
push
aaa
pop
stos
ljmp
aam
adc
sub
xor
leave
push
nop
xor
mov
xchg
leave
sub
xchg
cmovg
aas
orl
dec
dec
shlb
jne
cmp
daa
iret
pop
adc
pop
das
idivb
mov
aad
insl
cwtl
inc
inc
cwtl
popf
cmpsl
and
or
sub
mov
push
pop
fistpll
inc
jb
das
pushf
mov
sub
rcrl
les
add
mov
mov
push
ret
dec
and
rcll
test
inc
call
js
imul
sbb
or
adc
pop
aaa
mov
mov
je
ror
sbb
aaa
subb
lock
xor
pusha
rolb
mov
push
cltd
ret
pop
aas
mov
pushf
fisubrl
sahf
xlat
inc
and
sbb
leave
mov
inc
sarl
mov
mov
in
cmp
push
daa
cmp
mov
jno
xchg
test
push
movsl
add
add
and
loopne
xchg
cmc
mov
cmpsl
push
pop
lock
sub
inc
ret
adc
dec
fadd
mov
dec
gs
inc
jns
addl
iret
cmp
inc
mov
es
xor
push
outsb
add
dec
ret
fists
mov
jp
les
inc
decl
cwtl
or
jl
jg
pop
mov
jnp
xor
je
cmc
adc
sub
mov
lret
mov
shlb
cs
adc
loope
popa
jle
ljmp
jnp
mov
imul
clc
leave
jb
daa
sbb
sbb
mov
sbb
push
in
mov
cltd
je
add
push
sub
mov
roll
lea
outsb
jbe
xor
dec
push
repnz
xchg
repnz
lods
cmpsl
ret
ret
xchg
call
inc
rorl
subb
jno
jecxz
out
jg
or
jmp
popf
ss
lret
cmp
or
fwait
insb
fldt
adc
mov
scas
je
xor
xchg
xchg
call
mov
dec
test
sub
push
testb
out
and
lds
jge
out
inc
pop
sub
mov
mov
mov
cwtl
and
or
in
movsl
pop
test
mov
sub
sbb
fwait
sarl
jl
aad
ds
xor
movsl
jbe
pushf
or
imul
xorb
push
push
dec
sarb
or
aaa
add
jbe
or
jecxz
iret
adc
imul
adc
mov
movsl
or
std
push
lret
dec
push
push
fs
mov
sub
movl
xchg
hlt
jmp
xchg
and
jae
mov
into
cwtl
push
jmp
rcrl
mov
test
test
lods
jb
add
in
mov
cld
pop
mov
xchg
jg
stos
rcrb
xor
shll
mov
dec
jl
call
lcall
ret
mov
movsb
nop
lea
adc
loope
andl
add
ret
sub
push
gs
adc
das
in
jp
lcall
cmp
lods
push
sti
cltd
jge
sub
lods
mov
dec
rol
test
cmpsb
aam
add
dec
jmp
jno
fstpl
inc
aas
inc
popa
sbb
pusha
inc
push
cwtl
pop
or
cwtl
push
xchg
daa
push
add
push
dec
cwtl
adc
sub
xor
pop
aad
cmp
ljmp
jb
add
jecxz
ret
xchg
cmp
sub
push
outsl
push
insb
xchg
mov
push
lea
cltd
inc
repz
dec
mov
dec
fcmovbe
imul
cwtl
push
sti
pop
sbb
inc
incl
jp
mov
repz
lret
pusha
in
daa
xor
loopne
aas
or
fcoms
or
popa
aas
jo
test
sbb
imul
clc
rcr
adcb
pushf
mov
scas
lret
cmp
adc
push
in
pop
pop
and
and
scas
ret
in
mov
pop
loope
imul
sub
mov
jno
aaa
mov
shrl
pop
ljmp
mov
leave
fs
aas
testl
adc
arpl
rcl
or
fbld
movsl
xlat
sti
mov
sbb
pop
incl
adc
xchg
pop
and
push
mov
cwtl
jmp
pop
out
aad
or
leave
ret
lock
jb
sti
fcoml
sbb
addr16
ret
aam
sub
push
pop
mov
cmp
cmp
rcr
adc
sbbb
cld
out
popf
mov
dec
jns
pushf
mov
hlt
cmc
test
jp
and
lds
scas
bound
pop
sti
popf
test
xchg
dec
cwtl
aam
mov
lods
out
popa
push
jge
shll
push
mov
loopne
and
repnz
sbb
fcoml
mov
mov
rol
movsl
cld
inc
or
cltd
lret
adc
dec
add
jo
std
jns
inc
mov
add
fwait
out
das
xchg
add
and
or
imul
mov
movsb
rclb
lods
popf
xchg
sub
mov
inc
cwtl
aam
xchg
or
jb
aas
sub
mov
je
mov
out
push
sbbl
andb
xchg
repnz
jge
dec
pop
jno
inc
sub
lahf
jno
add
popf
les
sub
mov
and
push
pop
loop
sub
cmp
lods
mov
jp
jb
and
mov
add
push
xchg
xor
cli
sbb
mov
je
ss
and
dec
mov
xor
mov
sbb
sub
mov
ds
jo
mov
mov
inc
pop
aad
stos
pop
mov
push
inc
test
outsb
push
pop
xchg
scas
push
fwait
jae
pop
and
repz
pop
das
jmp
loope
jbe
mov
lock
les
push
data16
stos
push
out
mov
jmp
js
sar
push
mov
stos
clc
mov
push
test
ljmp
adc
mov
loop
lock
dec
sarb
mov
sbb
cs
roll
adc
icebp
push
dec
pop
xor
mov
inc
mov
dec
scas
pop
jle
jle
std
mov
fsubrp
mov
lea
daa
xor
push
sub
adc
inc
clc
iret
scas
and
scas
fidivl
and
pop
fidivrs
fiaddl
in
insl
in
lock
xchg
mov
sbb
popf
jns
pop
les
dec
jnp
dec
push
or
cmp
adc
cmpsl
jge
fimuls
stc
add
arpl
mov
lret
shr
inc
call
mov
cmp
stc
pop
push
addb
pop
mov
xor
adc
adc
and
and
jbe
xor
fstpt
lds
scas
daa
push
in
fildl
int3
dec
dec
inc
test
inc
dec
push
sbb
push
iret
jnp
dec
sbb
pop
mov
sbb
pop
push
inc
cmp
xor
movsb
jp
call
into
pop
xor
adc
push
pop
rcrl
cmp
mov
sbb
adc
dec
mov
sub
and
test
iret
std
jmp
sub
cmp
jecxz
cmpsb
fcmovne
adc
add
dec
mov
jmp
cmc
ret
or
mov
je
add
mov
das
in
movsb
jnp
cmp
lret
adc
test
or
addr16
mov
arpl
pop
sahf
mov
cmp
sbb
push
inc
lcall
movsl
mov
fsubl
orl
fsubl
adc
pop
jmp
bnd
roll
jmp
push
dec
sub
cmp
push
push
movsl
scas
jae
sbb
icebp
cmp
gs
pop
loop
mov
jne
in
or
cmp
cmp
inc
adc
notb
fwait
push
jne
in
pop
cld
cli
bnd
jae
ss
mov
jns
sbb
mov
cli
xchg
leave
inc
in
fiaddl
in
sbb
call
xor
sahf
leave
inc
mov
push
dec
js
jnp
inc
mov
pop
push
sti
mov
inc
mov
mov
stos
in
pop
test
outsb
cmp
test
iret
xchg
add
ret
into
and
jmp
cmp
or
sbb
mov
mov
jmp
sub
xchg
xchg
push
xor
lahf
push
mov
and
cmp
dec
jle
adc
into
les
adc
call
jb
shll
ficoms
add
lcall
xor
push
cmp
enter
sbb
cli
mov
popf
inc
or
pop
leave
clc
jge
insb
jbe
test
push
push
mov
data16
repz
or
js
add
test
je
and
xchg
inc
adc
stos
sbb
mov
xchg
orl
xchg
loope
push
sub
cmp
repnz
call
fs
jle
mov
pushf
inc
sahf
call
mov
sbb
add
add
pop
stos
mov
pusha
cld
ljmp
test
sbbl
int3
mov
sbb
pusha
fsts
mov
adc
jne
sbbb
ret
xor
or
jns
and
add
mov
mov
xchg
inc
push
test
ftst
add
repnz
mov
and
sbb
sub
shll
xor
lea
js
gs
lea
xchg
mov
jmp
cmpl
sub
mov
data16
dec
jb
adc
mov
sub
idivb
sub
mov
ljmp
dec
and
sub
pop
sub
pushl
iret
inc
in
sbb
inc
cmp
inc
xchg
inc
push
sub
arpl
push
fsubrl
mov
movl
adc
jg
sub
out
insb
sbb
sub
mov
je
or
mov
and
mov
repz
sub
pop
fisttpl
jbe
push
add
lds
jne
das
inc
jp
dec
fst
mov
xchg
xchg
jg
sub
pop
jnp
nop
or
test
shll
and
je
loopne
test
out
push
in
pop
stos
push
dec
dec
dec
imul
adc
test
inc
test
or
jecxz
ror
adc
inc
iret
jge
mov
imul
jb
jg
lret
mov
out
std
into
or
push
jl
stos
inc
es
and
mov
xchg
bound
cmp
mov
aas
mov
dec
aas
subb
les
repz
mov
test
jg
rcl
mov
jbe
sub
and
and
into
or
cmp
cmp
adc
stos
in
scas
rorl
pop
sub
aaa
sahf
add
mov
sbb
icebp
jae
xchg
dec
xor
and
mov
jne
cli
jo
mov
shlb
xor
in
mov
in
and
mov
insl
es
jge
flds
pop
add
dec
pusha
loope
gs
mov
sti
iret
pop
loop
sbb
fisubrs
lret
or
xchg
add
or
addr16
sar
js
adc
add
leave
aas
arpl
pushf
scas
push
rcll
push
cmp
jmp
mov
in
pop
mov
call
les
or
xchg
xchg
mov
xchg
jo
ret
subl
cmp
lds
subl
inc
lock
enter
loop
mov
faddl
loopne
mov
sahf
loope
icebp
int
jnp
lret
jb
push
jno
sub
dec
ljmp
cmpsb
jg
adc
test
nop
cmp
dec
enter
scas
add
cmpsl
mov
push
and
adc
sti
fld
ljmp
mov
inc
lods
popf
or
xchg
or
mov
add
dec
jp
test
repz
jbe
sbb
clc
add
repz
sti
push
sahf
in
dec
push
add
jecxz
movl
emms
enter
andl
in
push
jne
sub
fcoml
pop
sub
mov
inc
imul
or
cmpsl
ljmp
add
fwait
and
sub
xor
cmp
xchg
jge
or
pop
jg
mov
mov
scas
in
mov
orl
pop
popf
nop
scas
lods
and
iret
pop
push
push
push
adc
int3
lock
push
je
ss
arpl
mov
dec
mov
loop
fisubl
xor
shr
sub
inc
inc
add
outsl
mov
mov
and
out
cld
pusha
mov
int3
push
stos
mov
dec
push
sbb
mov
xchg
ret
mov
icebp
inc
or
fadds
sbb
sbb
push
out
movsl
imul
cmc
mov
ljmp
jno
stc
subb
repz
cmpsb
jae
fildll
loop
or
dec
mov
ja
fsubrl
lcall
sbb
push
xor
or
cmp
inc
jb
movsb
popa
xor
sub
mov
js
lret
loop
jnp
leave
cmp
loop
mov
psllq
sub
pop
data16
mov
popf
push
push
dec
xor
sahf
stc
cwtl
mov
add
xchg
jmp
fadds
rcrl
cli
jae
mov
ficompl
js
add
mov
dec
pop
push
mov
pop
stc
sub
mov
add
push
adc
adc
in
inc
xchg
xor
mov
mov
shrl
lcall
loope
mov
mov
push
jle
sbb
decl
add
sub
dec
aas
mov
jb
xchg
dec
pusha
mov
in
ss
push
jns
outsl
outsb
sub
or
lahf
cmp
scas
je
ss
lea
inc
mov
hlt
sub
in
loope
sub
call
mov
mov
fcmovbe
xor
je
mov
push
call
bound
cmpsb
dec
pop
out
scas
insl
sub
shlb
test
cmp
jnp
sbb
mov
lods
es
std
test
push
sti
dec
pop
sbb
dec
mov
inc
dec
out
adc
pop
dec
in
mov
shrl
cmpsb
xchg
mov
add
push
pop
mov
add
sti
cmp
cmp
mov
push
call
in
inc
jl
dec
ds
mov
incl
push
leave
addr16
sub
dec
and
fs
fisttps
ja
std
insl
push
cmpsl
daa
inc
inc
push
xor
inc
js
cs
sbb
cld
jno
adc
addr16
fs
aas
and
aad
jo
push
sbb
out
lcall
push
sbb
popa
sbb
sub
dec
movsb
sarb
mov
lret
mov
stos
icebp
aas
sub
inc
fisttpl
pop
insb
outsl
lock
cmp
xor
and
loopne
xor
mov
test
insl
enter
aaa
cmp
insl
or
stos
push
or
cwtl
incl
add
fisttpl
iret
pusha
lahf
out
jae
push
xor
incl
mov
inc
adc
xor
or
inc
and
repnz
mov
jmp
int
mov
pop
aad
movsb
fs
notb
fwait
out
lahf
mov
sub
add
popf
sub
pop
in
ds
xchg
cmpsb
dec
mov
shl
fs
inc
jge
push
aad
stc
imul
mov
lahf
xor
fstpt
xchg
subb
int
fldenv
lret
cmp
daa
xorl
cmp
adc
movsl
inc
mov
aad
mov
xchg
scas
call
cmc
icebp
pop
mov
inc
movsb
xor
dec
mov
lahf
icebp
stos
mov
fmul
jo
pop
pop
push
mov
sbb
idiv
sub
add
das
xor
out
mov
jp
push
icebp
sbb
mov
test
jp
popa
mov
std
xor
dec
adc
idivb
or
lahf
jmp
das
mov
add
cmp
aam
movsb
xor
jae
mov
push
addr16
adc
data16
out
jnp
negl
xor
test
adc
je
orl
adc
fstl
test
out
imul
inc
cmp
mov
cmpsl
mov
ret
mov
mov
lret
mov
neg
dec
test
orl
xor
rclb
inc
and
jl
test
jp
aam
or
ret
sbb
push
sbb
or
mov
and
cld
fsubs
ljmp
lods
xor
dec
jp
sub
jecxz
shlb
jg
outsb
int3
int3
mov
jae
sahf
inc
adc
jg
mov
sub
lret
mov
sahf
ficomps
pop
cmp
pop
inc
lods
mov
mov
and
sbb
gs
cwtl
mov
mov
jns
dec
inc
movsl
mov
repnz
imul
xchg
xor
jg
inc
or
loope
xchg
inc
jns
inc
rorl
nop
xchg
cmp
dec
sub
lock
sbb
add
push
mov
inc
add
xchg
xor
int
cmp
jne
fcmovb
xchg
int3
xchg
push
xchg
fcomps
pop
mov
lods
scas
dec
clc
lea
popa
xchg
in
loope,pn
inc
pop
mov
push
insl
jno
insl
xchg
pushf
add
push
inc
mov
push
xchg
pop
mov
clc
inc
or
cmp
mov
int3
xchg
mov
mov
xchg
mov
xchg
daa
into
ss
jl
adc
push
and
or
rcl
fcmovbe
push
inc
lock
insb
adc
adc
adc
sbb
ficoml
push
jg
test
pop
mov
add
or
lret
icebp
outsl
or
push
xor
jb
pushf
mov
pop
cmp
ret
sbb
insl
incb
pop
dec
inc
daa
pop
xlat
mov
mov
mov
mov
fisubl
xchg
stos
mov
arpl
add
inc
test
push
mov
lret
pop
lea
pop
fs
loope
ds
sub
xchg
sti
insl
mov
clc
dec
jo
sahf
lahf
add
cwtl
mov
jl
sarl
sub
push
push
xor
cmp
xchg
sarl
push
mov
sahf
shll
dec
xchg
lock
fsubrl
lcall
xor
dec
fisttpll
and
sahf
dec
push
sahf
nop
cmp
lret
adc
insb
pop
call
inc
xchg
mov
lret
les
mov
fyl2x
cmc
dec
sub
push
int3
sbbl
shrl
or
push
shl
in
xor
mov
les
arpl
add
inc
fdivl
add
cmpsl
mov
aaa
pop
enter
cmpsl
push
fbld
and
sti
jle
xchg
scas
scas
addr16
adc
xchg
sbb
mov
xor
sub
xchg
inc
es
ret
inc
xchg
mov
inc
in
and
jns
dec
and
adc
dec
andl
add
aam
aad
mov
jl
leave
mov
lss
nop
mov
cmpsb
popf
xor
cmpb
add
frstor
pop
std
jns
int3
mov
jb
arpl
aaa
xchg
sbb
std
cmp
mov
fdiv
cmp
lret
ss
and
dec
mov
inc
push
inc
loopne
xor
mov
cmp
add
add
push
nop
or
sbb
xchg
hlt
jbe
dec
xor
push
jo
cmp
or
ljmp
xlat
cltd
dec
or
loop
jns
add
andl
adc
clc
out
and
lods
inc
out
cmpsl
out
or
scas
push
and
stc
popf
in
testl
dec
in
adcl
adc
sbb
add
lret
lds
push
cmpsb
push
push
mov
daa
adc
xlat
or
cmp
lds
and
xchg
fucom
xor
insl
out
mov
nop
icebp
cltd
pop
push
repz
pop
shlb
dec
push
or
fs
cmp
cmp
jnp
xchg
adcb
es
ds
adc
sbb
int
nop
adc
mov
add
faddp
cmpsb
or
test
and
xlat
fiaddl
dec
lds
dec
ljmp
outsb
push
cwtl
je
pushf
sar
or
sbb
inc
fists
xchg
pushf
add
std
mov
fsubs
repz
sbb
mov
sbb
adc
mov
ljmp
lahf
pop
stos
hlt
outsb
sbb
fs
push
insl
xchg
test
push
jns
aam
push
dec
xchg
mov
mov
dec
lock
mov
std
hlt
jle
push
dec
pop
push
mov
lahf
jecxz
or
pop
mov
xchg
roll
aam
cmp
popa
clc
test
sub
repnz
in
push
int
les
stos
push
jg
cltd
and
loope
addr16
fsts
jnp
mov
and
out
pop
cmc
fwait
or
fnstenv
out
mov
mov
or
movsl
inc
pop
bound
add
add
xor
and
bound
add
std
mov
repz
cmpsl
mov
pusha
mov
dec
inc
jmp
sti
pop
xchg
lcall
aam
js
inc
cs
test
jb
mov
cs
decb
and
lea
mov
dec
inc
add
mov
mov
sbb
add
push
xlat
repnz
pop
out
or
jbe
ljmp
mov
and
es
mov
inc
pop
shl
stos
sbb
mov
xchg
sbb
and
inc
mov
push
das
jg
arpl
enter
insb
dec
test
sub
and
push
jle
jl
sbb
rorl
add
cmp
sbb
addr16
ljmp
orb
jns
xchg
int3
add
push
jge
cwtl
pop
fimuls
sub
push
cs
testl
push
sbb
adc
hlt
push
lahf
fstpl
test
mov
pop
sbb
test
mov
adc
cmp
pop
int
and
cmp
add
dec
fdivs
test
test
pop
popf
and
jl
idiv
fucomip
sub
stc
mov
repnz
add
test
leave
mov
push
pop
sub
adc
leave
cmp
inc
push
test
xchg
jae
inc
inc
push
pop
xor
push
sbb
cli
call
dec
sar
jb
ds
adc
jne
mov
jo
in
jecxz
push
adc
xchg
xchg
dec
adc
roll
int3
std
int3
out
jmp
dec
jle
mov
jnp
push
jmp
stos
jl
jbe
cmp
ljmp
pop
mov
cwtl
xor
jns
loop
mov
clc
push
adc
sub
adc
pop
hlt
adc
dec
nop
cmp
jmp
outsl
or
xlat
xchg
aad
xchg
lock
and
jbe
insl
stos
scas
lret
ja
xlat
shrl
dec
push
cmp
and
js
cmc
lea
mov
mov
inc
fisubs
mov
or
out
sarl
imul
int3
ja
in
sub
jg
mov
xor
mov
mov
movsl
lods
xrelease
mov
pusha
cmp
ret
das
push
lods
lcall
add
pop
out
stc
outsb
sbb
popa
je
mov
sahf
scas
cmp
insl
or
add
mov
int3
adc
lds
loopne
pop
fisubrs
dec
push
insl
icebp
xor
push
inc
out
mov
inc
push
jnp
xchg
jp
shr
push
add
outsb
imul
sbb
jae
andb
sub
mov
pop
mov
sbb
adc
dec
push
addb
dec
aas
mull
cmp
inc
stos
cmp
outsb
mov
popf
adc
outsl
push
dec
and
mov
pop
cli
stc
popa
mov
jp
cs
enter
sub
insb
subb
inc
jbe
cmc
arpl
cmc
xor
push
aaa
iret
mov
in
xchg
jbe
cmp
out
out
sub
xchg
stos
addr16
add
aaa
lret
adc
jbe
cmp
int
pop
shr
dec
sbb
stc
push
add
mov
subl
cltd
sub
stc
ret
mov
push
sbb
into
test
add
rcll
mov
aaa
push
repz
lcall
ret
inc
xor
cmp
adc
xor
inc
dec
mov
add
movsl
fiaddl
stc
mov
add
add
mov
xor
xchg
inc
test
sbb
lcall
xor
sub
int3
dec
jb
dec
cmp
cmp
adc
push
out
test
sbb
stc
repnz
insb
xor
stos
xchg
or
das
js
add
and
repz
lret
push
iret
jmp
je
sub
push
in
xorl
push
fsts
xor
sbb
pop
mov
jno
orb
fsubrs
mov
loop
jbe
inc
mov
stos
or
das
insb
mov
jle
sbb
adc
cli
add
jecxz
dec
incl
stos
lahf
jae
sub
testw
adc
sub
loopne
push
into
in
cld
movsb
cmp
add
rclb
je
and
jnp
lret
and
icebp
lds
je
cltd
leave
icebp
mov
movsl
mov
out
xlat
fnstsw
scas
sub
daa
es
sbb
dec
aaa
leave
jae
xor
adc
stos
or
ljmp
enter
cmp
sbb
arpl
add
in
xor
and
int
mov
rcr
cmpsb
sti
mov
imul
xchg
loop
xchg
xchg
and
clc
insl
shll
mov
mov
jne
daa
cmp
dec
inc
xor
aam
das
fidivl
es
inc
add
mov
pusha
adc
shll
xchg
ret
xchg
fwait
mov
je
insl
insl
dec
cs
adc
divb
jo
fwait
add
fisubrl
insb
mov
mov
or
dec
dec
cmp
sub
mov
fs
aas
jno
sbb
and
and
mov
push
rcrb
mov
inc
nop
cltd
lret
popa
lds
push
or
fcmove
xor
push
scas
aas
testb
sbb
loope
lea
pop
ret
xor
sahf
test
cmc
sbb
lret
dec
sub
in
lea
nop
jmp
jo
lret
dec
mov
fwait
xchg
xor
pushf
popa
mov
add
enter
outsb
inc
filds
pop
pop
je
arpl
mov
cltd
xchg
in
sti
xchg
pop
inc
sbb
cmp
mov
dec
insb
mov
ja
out
mov
out
mov
jo
sahf
inc
notb
and
adc
cmp
xor
jb
int3
insl
shll
pop
lds
dec
add
ss
adc
les
pushf
pop
shrl
in
jbe
jl
out
mov
imul
and
adc
fidivl
lret
adc
or
frstor
adc
je
subl
loopne
jge
fisubrs
sbb
inc
pop
or
mov
xchg
xor
ljmp
dec
push
movsb
sar
push
cltd
mov
pop
icebp
addr16
mov
cltd
or
add
mov
dec
xchg
lods
cmpl
xchg
mov
mov
cmc
clc
shl
or
cs
test
nop
mov
adc
pop
hlt
jmp
sbb
xchg
push
and
setno
ret
test
in
jle
jbe
cld
and
pop
outsl
repnz
sub
out
sbb
jbe
dec
and
mov
ss
lds
jae
fiaddl
jns
cmp
mov
fcmovb
rcrl
cmp
sub
dec
dec
lahf
xor
dec
mov
sti
pop
ret
sbb
subb
sbb
xchg
aas
xchg
fst
add
fdivl
inc
lods
movsl
lret
jle
pop
adcl
xchg
lret
test
je
push
cmc
int
std
aad
sbb
aam
xor
aas
pop
sbb
out
repnz
insb
les
push
dec
lock
inc
fs
jnp,pt
push
lds
jns
cwtl
shrb
ret
loope
test
jl
daa
mov
mov
stc
inc
daa
or
cmp
push
cmc
push
pop
lods
or
mov
dec
aaa
bswap
lods
or
hlt
sub
daa
je
es
xor
pop
adc
mov
cmp
adc
jo
inc
fldl
inc
and
ret
xor
add
jp
pop
adc
movb
xchg
sbb
std
mov
loope
push
jb
repz
cmp
push
mov
scas
xchg
jg
lcall
addr16
repz
mov
jb
pop
cmp
sub
xchg
jnp
out
dec
insb
incl
fst
ss
sub
popf
in
std
sub
pop
aas
cmp
add
add
push
mov
scas
nop
jle
lahf
shl
rcll
sub
dec
xchg
loop
mov
jmp
cltd
movsb
nop
fcoms
test
inc
inc
ja
xor
test
clc
ss
daa
outsb
cltd
xchg
sbb
jg
push
in
lods
in
jnp
or
or
ljmp
fs
cld
popa
leave
fldenv
loope
sub
add
mov
sub
mov
aam
out
pop
adc
xchg
cmpb
stos
and
xchg
and
inc
mov
sbb
repz
xchg
push
fisttpl
and
or
dec
fistps
push
shll
cs
rolb
mov
jle
dec
xor
inc
aam
dec
xchg
dec
dec
xor
adc
fstpl
stc
test
in
and
jb
loop
pop
inc
jmp
inc
inc
rcl
jne
lods
lcall
dec
mov
in
call
fidivs
push
pop
inc
out
data16
sub
jg
jns
xor
mov
aad
aaa
fists
jbe
lretw
shll
dec
stc
roll
testl
call
pop
and
test
add
push
imul
sbb
in
pop
mov
inc
sbb
add
movsl
jge
mov
push
inc
and
dec
lds
xchg
ljmp
xor
repnz
xchg
lahf
iret
aas
loope
sub
mov
fdivl
leave
jle
mov
hlt
into
in
pusha
ss
dec
cmp
or
xchg
and
cltd
or
xchg
div
add
jp
mov
aas
or
pushf
lahf
das
mov
pop
sbb
in
jle
mov
lret
adc
or
int
xlat
es
jne
sub
adc
aas
scas
mov
repnz
or
cli
popf
sub
sbb
jmp
xor
out
ss
and
arpl
fldcw
mov
mov
or
rorl
mov
sbb
rorb
pop
inc
cmpsb
jp
outsb
stos
dec
mov
and
nop
jl
ja
jo
shrb
cmpsb
xchg
out
inc
or
jmp
or
or
sub
pop
xor
sub
jns
lret
dec
insb
out
xchg
fwait
add
out
les
cmp
cmpsl
xchg
ja
inc
pop
outsl
dec
cwtl
out
push
adc
pop
inc
or
cmp
aas
testl
test
scas
movsl
in
sbb
lds
fs
add
fistpl
adc
test
imul
andl
inc
je
cmp
je
jp
daa
repz
dec
xchg
repnz
cs
pop
inc
cmp
mov
sbb
rol
int3
xchg
xlat
or
lahf
out
fstps
cmp
outsl
rorl
dec
push
movsb
dec
mov
lds
mov
mov
popa
mov
mov
or
sub
ret
cmp
rol
xchg
sbb
lods
add
sahf
jmp
mov
push
mov
dec
mov
pop
ss
mov
mov
in
stos
xlat
hlt
ret
fs
dec
push
xadd
mov
sarl
rolb
lret
and
xor
es
sub
mov
pop
dec
scas
pop
ljmp
add
push
push
add
lcall
outsl
add
sbb
push
xlat
pop
outsb
imul
loope
mov
or
mov
loopne
mov
sti
cwtl
lret
fstl
fwait
std
jnp
int
dec
cmpsb
xor
je
pop
daa
sbb
jp
add
js
pushf
into
mov
xlat
mov
dec
mov
adc
dec
hlt
adc
jns
add
mov
out
and
xor
sub
lcall
pop
mov
jae
jmp
movsb
cs
mov
insl
jnp
push
cmp
mov
mov
int3
adc
or
ret
add
or
hlt
sbb
jnp
in
mov
out
push
or
cmpsb
pop
sub
and
mov
arpl
xchg
std
mov
cltd
mov
loope
push
adc
inc
push
jge
sbb
pop
insb
or
inc
gs
add
sub
adc
mov
testb
push
movsl
mov
or
mov
stc
jle
enter
and
int3
mov
xchg
jp
lcall
mov
repnz
mov
jo
arpl
xor
shl
adc
test
outsb
ret
clc
mov
sahf
sbb
xor
icebp
jno
in
test
mov
arpl
subl
cli
subb
ret
sub
pop
cmp
hlt
pop
sarb
push
imul
popa
ret
out
jl
mov
shll
lds
mov
sbb
sti
pop
sbb
cs
lahf
pop
cmp
scas
pop
out
push
fsubrl
mov
or
and
add
mov
mov
fs
push
adc
cmp
shl
xchg
cmp
insb
adc
lea
cmp
add
xlat
mov
jb,pt
and
cltd
int
add
daa
inc
xor
loop
lea
mov
roll
add
dec
add
int
in
jl
sbb
in
lcall
mov
movsl
out
xor
aad
sub
xchg
test
lcall
sub
popa
clc
into
xor
jne
rcr
add
lock
es
mov
ffree
loop
sub
enter
inc
int3
jge
jp
insl
bound
scas
sar
or
jns
cmpsb
aam
mov
inc
pop
and
out
outsl
outsb
xor
lods
xchg
je
out
pusha
ljmp
sub
ltr
pop
jle
xor
xor
mov
cmp
lea
sahf
lret
mov
test
push
fmuls
mov
leave
inc
inc
nop
outsb
test
inc
push
jmp
jmp
das
aam
aam
push
loope
mov
pop
pop
dec
jno
fwait
jns
sbb
ss
jo
push
testb
lock
test
inc
arpl
mull
xchg
jb
fldenv
xchg
sti
pop
mov
lock
testb
sbb
push
cmp
arpl
xchg
jg
cld
push
scas
aaa
add
cltd
pusha
rcr
test
push
mov
and
adc
xor
fimuls
lahf
mov
sbb
or
gs
out
movsl
imull
xchg
xor
cmp
popa
aas
cld
add
xlat
dec
popa
into
sbb
out
mov
mov
xchg
lock
cmp
test
movsb
mov
jmp
in
mov
dec
xchg
test
jl
inc
jmp
pop
mov
fcmovb
stc
pop
pop
test
mov
jnp
cmp
in
cmpsl
and
or
fldenv
repz
ds
repnz
lret
cltd
mov
outsb
repz
mov
inc
sti
daa
add
sbb
fdiv
mov
in
cmp
sub
and
pop
mov
xchg
shll
aad
movsb
cmp
shlb
push
fmul
ret
ret
mov
mov
xchg
mov
lods
cld
jecxz
repz
js
mov
testl
sbb
jae
nop
push
out
adc
inc
popl
xlat
bound
aaa
cmpsl
sub
into
push
imul
dec
or
jg
inc
dec
xor
mov
shlb
cltd
sbb
jno
in
mov
movsb
jmp
xor
sbb
sbb
cltd
ds
aas
rcrb
mov
push
lret
fimull
jge
mov
or
insb
cmp
in
cs
fdiv
or
rcrl
pop
add
and
adc
into
mov
in
arpl
pusha
fcmovnb
leave
push
or
outsb
inc
aad
or
push
mov
into
xchg
fsubrs
sbbb
mov
fdivl
pmuludq
pop
lret
add
lea
call
es
mov
shl
inc
mov
cmp
push
dec
and
faddl
xchg
inc
mov
addr16
int
or
lea
jo
dec
sbb
icebp
enter
sub
bound
pop
dec
mov
inc
clc
sub
fadd
push
out
je
mov
add
xchg
add
push
loope
lock
movsb
jne
mov
pop
sub
dec
mov
mov
mov
add
mov
pop
arpl
jl
into
mov
add
pop
inc
call
lds
insl
inc
push
adcb
mov
cwtl
scas
inc
test
das
movl
jb
xchg
push
in
add
jo
cmp
aas
daa
xchg
repz
sub
push
into
or
mov
sub
xor
and
adc
into
mov
loope
push
js
dec
insb
jne
aad
push
xor
call
fdivrp
sub
xchg
xor
enter
push
push
adc
outsl
imul
fistps
push
addr16
movsb
orl
or
out
jne
cs
push
test
sahf
adc
push
loope
sub
push
add
push
popf
jo
jge
mov
or
pushf
inc
mov
cmpsb
ljmp
cmp
pop
or
xchg
movl
popf
in
push
cmp
sti
dec
ljmp
jno,pt
cmp
xchg
aaa
rorb
cmpsb
add
outsb
fadds
push
call
ret
mov
pop
add
jecxz
lods
scas
cmp
scas
xlat
inc
imul
data16
shlb
pop
mov
push
add
ljmp
mov
shrl
or
loop
xlat
dec
pop
les
or
and
mov
cmpsb
mov
daa
aam
pop
jge
pop
jo
popf
add
repnz
out
outsl
insb
movsl
movsb
pop
filds
arpl
xor
adc
out
jae
in
xor
mov
push
sbb
cmp
add
popf
iret
stc
into
movsb
push
or
stos
and
ss
in
fcmovu
adc
enter
leave
push
inc
dec
jns
pop
outsb
sub
std
mov
lahf
inc
cld
push
negl
and
pop
mov
or
in
sahf
sub
mov
jle
imul
xchg
or
scas
enter
inc
bnd
adc
pop
and
bound
mov
arpl
xor
into
inc
add
cmpsl
popf
aas
lea
cmp
dec
pop
and
mov
mov
fwait
dec
push
aam
push
sub
xchg
dec
and
pop
push
negl
lahf
movsb
cltd
in
scas
dec
mov
jne
ret
cli
pop
and
push
clc
push
mov
mov
or
lods
push
mov
stc
mov
pop
fcoms
mov
xor
iret
adc
insb
mov
cltd
insl
or
lods
lock
out
mov
popa
popf
out
adc
or
fs
inc
iret
out
jbe
and
xor
jo,pt
adc
mov
loop
decl
cmpb
sti
repz
repz
leave
and
rclb
or
daa
inc
fidivrs
adc
sub
insb
push
lea
and
jo
xchg
add
and
sbb
pusha
fsts
lea
pusha
adc
imul
push
push
fs
dec
dec
movsl
cmpsb
cwtl
sub
es
pushf
add
lods
push
shr
cmp
lcall
push
mov
cmp
rcll
push
ds
xadd
or
cmp
fnsave
xchg
mov
xchg
lahf
xor
push
sbb
pop
shl
adc
adc
add
cmp
test
mov
icebp
out
jmp
rcrl
inc
test
cmp
sarl
dec
cmp
sbb
jne
push
cmc
stos
sarl
push
add
xchg
lods
mov
sbb
jmp
mov
or
test
jno
mov
cmpsb
or
lret
push
stos
sub
lea
ds
mov
stc
lcall
adc
cltd
mov
in
and
jbe
pop
clc
xchg
sbb
out
das
add
adc
cmpsb
test
pop
rcrb
mov
add
ror
cmpb
mov
inc
std
inc
mov
stos
jecxz
adc
iret
lods
add
push
fucomp
orb
mov
cmp
xchg
and
mov
shlb
lea
movsb
adc
push
sbb
stos
in
ds
dec
repnz
mov
push
jge
leave
out
or
les
jecxz
mov
fs
ret
pop
jnp
enter
mov
repnz
outsl
hlt
out
sub
pop
cmpsl
ret
data16
cmp
inc
stos
scas
jmp
in
mov
js
pop
push
xchg
inc
rcll
mov
jnp
jnp
std
push
dec
push
push
popa
out
pop
lods
fxtract
push
cmp
adc
cld
cmpsb
subl
sbb
pushf
in
sub
fstl
sbb
testb
popf
gs
sbb
loopne
cld
ja
pop
push
dec
pop
jle
cmp
repnz
sbbl
sbb
mull
aas
mov
pop
cwtl
inc
or
push
shr
jae
add
dec
cs
mov
movsb
xlat
adc
movsb
mov
sbb
push
and
pop
ret
add
bound
mov
mov
fxch
jmp
adc
cmp
sub
pop
cwtl
test
lahf
pop
add
dec
orb
fstp
mov
or
push
testb
inc
nop
pop
int
xchg
loope
sub
xchg
arpl
sarb
pop
shrl
xchg
rcll
xchg
call
or
inc
mov
ficompl
xchg
pop
mov
mov
mov
fistpll
popf
rorb
into
out
das
popf
or
jb
stos
addr16
xchg
sub
xlat
jge
jns
cmp
xor
add
mov
sub
out
mov
adc
mov
mov
lock
mov
movl
pusha
add
mov
sub
fucomip
cmp
cwtl
cmpsb
clc
fistpl
call
or
mov
ja
daa
sbb
xor
mov
jae
out
js
push
mov
sub
out
push
cmp
popa
int3
xchg
add
xchg
dec
or
add
mov
mov
and
into
adc
fmull
push
pop
jnp
cwtl
notb
xchg
pushl
xlat
xchg
add
lahf
iret
jle
mov
imul
mov
mov
mov
sub
jbe
mov
cmp
shl
sbb
arpl
mov
inc
pop
push
pop
sub
pop
mov
xor
mov
cmpsb
pushf
loop
cmp
out
lret
cwtl
jno
dec
fsubrs
adc
lea
std
jl
jg
fstps
mov
movsl
ret
xchg
bnd
sahf
mov
sub
leave
stos
adc
test
jle
out
mov
or
imul
xchg
pop
mov
sahf
fs
lock
stc
imul
arpl
adc
mov
pushf
mov
mov
aaa
clc
xchg
xchg
sub
mov
sub
imul
lds
enter
or
push
lods
jns
xchg
mov
cltd
dec
in
mov
sahf
jb
mov
and
lds
sbb
mov
popa
jle
pop
lea
push
xchg
out
lock
push
jmp
adc
pop
orl
push
int
notl
ds
dec
mov
mov
xor
adc
mov
dec
or
xchg
out
movsl
pusha
lcall
int3
jle
push
add
mov
cltd
fcmovnu
int
repz
add
mov
mov
nop
push
adc
and
lds
pop
fsts
push
rcrb
fstpl
and
fistpll
mov
lret
into
lcall
add
jg
into
cwtl
and
movsb
les
mov
jecxz
push
mov
popa
iret
jb
data16
rcrb
mov
and
cmp
stos
mov
in
sub
mov
push
add
outsl
xchg
sbb
repz
rcrl
out
lret
pop
sub
call
rolb
loopne
cmc
xor
mov
divl
sbb
jg
iret
xchg
or
or
out
pusha
push
out
mulb
dec
lret
ss
or
aam
lods
or
jp
adc
cmp
push
push
and
pop
inc
imul
int
mov
movsb
mov
cmpb
std
pop
xor
into
mov
nop
sahf
cmp
xor
leave
or
andl
pop
or
inc
or
xchg
sbb
xor
fwait
xchg
dec
cmp
pushl
pop
cld
std
clc
jg
imulb
fistl
test
imul
push
je
mov
jp
addr16
repnz
sbb
data16
inc
scas
ja
ss
icebp
mov
frstor
loope
or
mov
push
sub
add
out
scas
insl
mov
aad
inc
cwtl
mov
loopne
cmpsb
push
out
mov
fists
cmp
and
jmp
sahf
ds
add
and
in
mov
ljmp
sub
and
xor
xchg
pop
sub
push
mov
clc
popa
push
lods
in
and
dec
ffreep
cld
jmp
mov
nop
mov
cs
mov
cmc
ret
adc
jnp
lret
imul
adc
cld
jp
js
pop
jp
mov
push
into
mov
pop
xchg
shlb
mov
faddl
push
fwait
sub
adcl
sub
or
pop
lds
add
sub
aas
pusha
mov
fsubrl
pop
xchg
mov
lods
cwtl
inc
js
das
mov
or
xchg
arpl
xor
xchg
addr16
adc
pop
das
mov
mov
jle
es
jg
mov
and
xchg
ret
pop
fidivl
push
pop
mov
jo
mov
jle
fwait
mov
aas
mov
cmp
fwait
ret
mov
aad
lods
cmp
mov
in
stc
cmp
cwtl
mov
sub
in
fdivrl
sbbl
out
mov
aad
push
adcl
aas
xor
pop
push
fbstp
test
inc
loopne
pop
adc
nop
and
loopne
jmp
sbb
hlt
pusha
divb
xor
and
inc
call
in
xchg
cltd
xchg
pop
popf
fwait
lcall
into
pop
sbb
popa
inc
fsubrl
cmp
sbb
ret
jns
ret
push
xlat
push
jo
push
fisubrs
sbb
lcall
repnz
ja
out
movsb
adc
cli
pop
das
pusha
or
mov
cmp
jnp
adc
mov
mov
imul
jno
xchg
pop
rclb
xorb
add
je
pop
sbb
sub
or
mov
add
mov
enter
dec
outsl
sbbb
xor
jle
jbe
add
fstps
inc
js
dec
adc
dec
pushf
idiv
lret
seto
xchg
test
in
sbb
aas
pop
inc
mulb
and
xchg
mov
cwtl
jo
fisubrs
inc
aas
movsb
cmpsl
test
arpl
jl
mov
scas
dec
dec
je
sbb
aas
inc
adc
aaa
mov
jge
fdiv
push
cs
ss
out
dec
jg
orl
movsl
push
enter
jle
hlt
inc
data16
mov
pop
ja
xor
test
stos
cmc
mov
test
out
mov
mov
les
sub
popa
jp
dec
rcll
lods
lret
ja
xor
rolb
and
nop
mov
fistl
insb
shlb
jecxz
mov
lss
in
mov
rcrl
or
jne
fcom
push
push
pop
mov
test
into
cld
mulb
push
popa
adc
push
jge
int
dec
pop
dec
jg
and
sub
test
jg
cmp
ja
xchg
out
xor
jns
push
mov
or
cltd
pop
and
cmp
xor
mov
dec
or
xor
or
pop
jmp
jb
stos
bound
ss
or
cwtl
into
push
cwtl
mulb
mov
add
sbb
xchg
dec
xchg
jno
mov
xor
xchg
ja
clc
loop
je
adc
or
or
lret
jl
out
ds
insl
fnsave
pop
out
popl
ljmp
lock
adc
cmp
push
or
lods
sbb
aas
loop
shrb
arpl
rcl
jne
adc
mov
iret
fs
mov
jg
movsl
add
and
sub
mov
loopne
outsb
dec
adc
xchg
sub
push
movsb
mov
adc
insl
inc
aas
lret
xchg
jl
cmp
inc
xchg
lods
jmp
mov
jle
test
jl
in
mov
adc
adc
mov
idivl
in
sbb
cmc
adc
in
mov
add
push
mov
xchg
in
sbb
inc
test
test
jbe
sbb
or
leave
or
and
cmp
pop
push
inc
shlb
push
or
jecxz
mov
add
pop
xchg
push
and
aas
test
cmp
cwtl
xorl
sub
jmp
bound
xchg
jb
pusha
sbb
daa
push
les
shlb
sbb
push
daa
fimull
pop
or
jno
lds
das
xchg
adc
out
lea
in
cmp
xorb
hlt
jae
push
jns
jp
fcoms
ljmp
lahf
fnstcw
out
xchg
push
mov
pop
pop
push
mov
add
jecxz
ljmp
dec
mov
push
out
loop
lret
mov
shlb
stos
mov
dec
lods
mov
xor
cmc
dec
fnstenv
mov
adc
arpl
addr16
in
sub
das
mov
aad
add
fisubrs
push
dec
dec
cmp
aas
pop
and
xor
loope
js
sbb
mov
lods
movsl
or
jnp
mov
sub
cmp
xor
imul
or
js
or
xor
fldl
adc
pop
stc
inc
push
sbb
in
inc
popf
sbbl
into
lret
jae
addl
inc
dec
call
or
sti
pop
in
idivb
js
icebp
dec
or
movsl
adc
stos
imul
xor
inc
jmp
xor
add
sti
xor
loope
das
call
js
inc
dec
bound
jno
mov
jne
sub
xchg
jae
or
or
xchg
pushf
leave
negl
int
jmp
push
nop
dec
push
pushl
iret
fnsave
sbb
loop
inc
lret
outsl
push
test
pop
xchg
addr16
jl
in
icebp
les
xchg
popf
push
push
mov
adc
add
push
and
adc
sub
stc
inc
fisubrs
out
add
adc
add
inc
test
mov
xor
xchg
adc
dec
mov
push
sbb
popa
shr
push
jmp
jne
out
adc
cmp
ljmp
imull
pop
xchg
push
cs
and
test
and
xchg
sbb
pop
xor
mov
mov
dec
cmpsb
cmpsl
pop
pop
mov
cmp
test
and
test
or
sub
inc
xchg
mov
jb
or
mov
ret
xor
inc
rorb
and
imul
mov
inc
mov
loopne
jecxz
lods
pop
adc
aaa
movb
stos
int3
xchg
data16
add
dec
or
stc
std
cmp
adc
add
and
adc
jecxz
out
inc
xor
and
add
cmpl
mov
sahf
movsb
insl
xchg
cs
in
mov
jmp
or
cmc
pusha
or
arpl
push
xchg
fistl
pop
pop
dec
pop
lret
test
in
shr
and
cmpsl
push
pushf
jb
xor
leave
ds
push
clc
cs
jmp
pop
cli
outsb
jns
mov
or
mov
cmp
or
insb
mov
cli
inc
ja
mov
lahf
movq
repnz
pop
push
mov
mov
sbb
push
jge
pop
xchg
inc
sub
into
jae
leave
call
adc
lcall
hlt
in
mov
pop
xor
pop
add
jnp
lock
cmc
pusha
jbe
pop
repz
dec
aas
push
inc
outsb
push
inc
cmp
jns
ljmp
leave
jbe
divl
inc
mov
fs
std
push
outsb
push
mov
es
or
int3
loop
movsl
fisubrl
adc
xchg
notb
or
js
mov
repnz
icebp
mov
cmc
push
out
rcrb
pushf
int
pusha
xchg
pop
repnz
jg
jecxz
or
aas
dec
mov
mov
nop
loope
out
out
cld
aaa
ret
xchg
jbe
outsb
idivl
jne
inc
lret
aaa
lods
xchg
int
add
dec
ds
lret
lds
in
xchg
imul
pop
das
lds
mov
in
push
jmp
sbb
push
mov
gs
es
fnstcw
testb
int3
jbe
cmc
fsincos
lret
frstor
sbb
addl
mov
mov
jnp
jmp
adc
shlb
pop
sbb
cmp
add
faddl
and
sbb
cmc
aaa
and
imull
std
icebp
push
jne
mov
cmp
addr16
data16
dec
mov
dec
es
push
jno
es
leave
fcoml
iret
ljmp
adc
cmpsl
xor
outsl
add
add
push
aam
scas
repz
stos
enter
test
push
ss
jb
jb
mov
fistpl
sub
sub
sar
pusha
pushf
jecxz
cmpb
in
push
addr16
test
lods
fcompl
test
mov
or
ret
jg
sbb
fldt
mov
into
inc
stos
or
xor
sbb
add
or
js
nop
push
ret
in
add
mov
movsl
xchg
sub
repnz
mov
repz
cltd
cmpsb
mov
cmc
daa
das
mov
sbbl
jno
xchg
inc
pop
flds
fdivrs
addl
ja
sub
adc
mov
dec
xchg
mov
sbb
data16
pusha
xor
lret
test
lods
mov
enter
or
inc
jns
pop
aaa
lahf
dec
in
sarb
rclb
nop
cmpsb
sub
cmp
xchg
fnsave
or
fstl
jp
lahf
lods
mov
sbb
sub
data16
mov
push
movsb
lcall
or
pmulhuw
fsts
ret
pop
adcl
pop
scas
repnz
pop
scas
mov
push
in
cmpsl
lock
outsb
jg
aad
ficomps
push
push
movsl
xor
fldpi
adc
adcb
adc
test
adc
shl
shll
xor
add
ret
pusha
jp
cmpsb
mov
sub
pop
cmp
arpl
outsl
adc
sub
jne
das
ja
mov
jns
in
push
data16
loop
dec
ljmp
jne
cmp
int
inc
dec
jnp
mov
int
fldcw
mov
je
mov
out
mov
cmp
out
fs
pop
xor
sbb
sbb
les
pop
decb
sbb
fidivs
mov
mov
or
add
adc
js
jae
out
lea
js
inc
and
sub
sub
enter
dec
and
push
pop
bound
xlat
sahf
in
shlb
push
fcomp
sbbl
cmp
enter
dec
insb
insb
cmpsb
push
jmp
sahf
mull
aam
and
scas
xchg
fistpll
jmp
jmp
int
xor
scas
mov
mov
jne
mov
pop
mov
enter
imul
sub
pop
mov
lcall
or
mov
mov
mov
xchg
mov
lea
dec
xorl
and
pop
push
and
enter
add
xchg
mov
xor
mov
or
into
sub
lea
lock
xor
add
cld
xchg
sub
cwtl
aaa
and
or
mov
seto
and
sbb
divb
test
inc
xchg
sbb
dec
nop
cmp
push
fldl
and
cmp
cli
pop
es
fstpl
pop
jo
xor
push
cwtl
fcomps
cmp
cmp
in
movsl
cmp
mov
ds
adc
jg
mov
push
std
dec
cmp
mov
std
inc
arpl
mov
stos
test
cmp
push
jbe
ret
mov
clc
int
push
fimuls
stc
pusha
push
and
mov
lahf
andl
cmp
shrl
adc
imul
andl
inc
mov
dec
and
out
dec
push
sub
mov
aaa
pop
cli
xchg
jno
ja
jmp
mov
push
adc
fst
in
jae
fimull
xor
nop
call
mov
cmp
xchg
mov
popf
and
xchg
dec
outsb
call
mov
in
and
sbb
add
jno
fisubs
pushf
jmp
pop
pop
mov
xlat
xor
aad
jno
lods
mov
pop
roll
adc
mov
je
outsb
mov
or
out
mov
fildll
loopne
imul
dec
pop
mov
idivl
cltd
dec
cli
add
pop
shlb
adc
out
pop
or
inc
rol
mov
cmp
and
arpl
or
cmp
das
jecxz
inc
push
out
pop
xchg
shll
jb
and
aas
adc
ror
addr16
popa
xor
or
mov
xlat
repz
adc
psubw
es
inc
mov
jl
add
fsub
xchg
jge
jbe
jecxz
fstps
mov
scas
cld
xchg
dec
xchg
xchg
mov
pop
add
and
ficoms
insl
dec
cmp
or
lret
dec
mov
aaa
test
std
aaa
jecxz
mov
jb
mov
stc
jp
pop
lret
into
inc
mov
andl
out
xchg
pop
mov
adc
cwtl
mov
pop
add
dec
push
jno
pop
test
pop
fcmovbe
lods
pop
int3
movsl
push
xchg
stc
inc
fucomp
mov
clc
mov
ss
sbb
mov
orl
iret
adc
and
sub
gs
jp
outsl
xorb
loopne
daa
clc
jb
sbb
rcll
jns
mov
push
adc
pop
js
adc
in
cmp
sub
adc
ret
or
xchg
fldcw
ret
loopne
pop
sti
int
cwtl
lods
rcrl
popa
push
sar
xor
stos
pop
ss
aam
xlat
and
out
mov
movsb
cmp
mov
sbb
js
enter
cmpsl
add
hlt
mov
xor
mov
jne
fwait
cmpsl
out
loope
mov
mov
dec
and
scas
dec
test
adc
jp
jle
sub
xchg
pop
xor
dec
mov
push
mov
fwait
lods
loope
sbb
ret
ja
xor
add
xor
sahf
insl
in
jg
sbb
xchg
push
pusha
jne
sub
xor
sbb
imul
sysenter
inc
pop
arpl
imul
xlat
test
scas
mov
and
out
lock
movsb
mov
push
lret
xchg
jg
dec
xchg
xor
pop
push
fstp
inc
xor
xor
adc
sbb
xchg
dec
inc
repz
daa
pop
jle
aas
pop
sbb
nop
cli
mov
js
mov
mov
add
xor
add
sub
add
pop
ret
mov
negb
mov
pusha
and
sub
adc
xor
inc
mov
test
lods
mov
and
add
cmp
xchg
xchg
ds
sub
inc
cmpsl
scas
pop
add
dec
test
imul
cmp
cwtl
ret
mov
movsb
inc
aas
orl
out
dec
push
imul
out
mov
and
fistpl
imul
sti
je
outsl
jge
jnp
mov
cltd
mov
movsl
cmpsl
xchg
xor
cmp
add
fdivl
push
xchg
mov
nop
mov
mov
xor
pop
push
test
fidivl
pop
jne
test
add
add
inc
lfs
adc
xor
jns
pushf
nop
mov
mov
push
repnz
hlt
in
shlb
loope
imul
cli
jmp
xchg
scas
dec
lods
bound
shrb
stc
stos
cmpsb
mov
test
jne
loopne
negb
cli
and
mov
je
mov
jno
push
or
mov
dec
jge
mov
sub
xchg
imul
mov
fcmovb
sti
xchg
les
push
in
sub
inc
std
pop
test
xchg
push
inc
addr16
cmp
iret
ret
xor
jmp
inc
into
stos
stc
test
lcall
inc
adc
fmul
adc
and
push
xchg
clc
stos
mov
cmc
jns
iret
loope,pt
cmp
fstl
xchg
cmp
sti
cmp
pop
out
ds
out
test
mov
ja
fldenv
inc
out
mov
js
jmp
fsubrs
hlt
jns
test
out
mov
dec
mov
adc
int3
int3
outsl
mov
lock
adc
xor
and
or
sti
pusha
sub
push
or
jmp
inc
pop
jmp
jbe
jg
arpl
add
mov
sbb
movsb
pop
sbb
mov
outsl
inc
repnz
push
jmp
fwait
sub
arpl
push
lret
mov
inc
cmpsb
mov
jge
or
insl
ss
fldt
scas
aam
inc
mov
cltd
or
bnd
lods
dec
adc
inc
std
add
aas
mov
jnp
cmp
cmp
ficoml
in
dec
fwait
imul
sub
mov
and
clc
rcl
popf
jmp
movsb
dec
pop
repnz
scas
xchg
test
test
das
scas
stos
and
cmpsb
dec
shrl
mov
sub
out
dec
lcall
int3
movsl
stos
out
xchg
outsl
xor
pop
sbb
jmp
outsl
jbe
pop
mov
xor
insl
mov
xor
fisttps
aaa
xchg
xor
inc
jns
xchg
sbb
or
sub
add
imul
xchg
or
popf
call
or
in
enter
popa
stos
push
mov
jb
lock
sbb
pushf
pop
xchg
out
adc
sub
dec
popf
pop
jb
imul
std
pop
mov
or
shr
mov
mov
or
jge
xor
jne
dec
sbb
fwait
iret
ret
sbb
int3
cltd
mov
aam
rclb
pop
loope
ret
faddl
xorb
xlat
nop
fisttpll
in
pop
and
loopne
sub
mov
pop
nop
cmpsb
jns
ljmp
int3
aam
and
sub
adcb
cmpsl
mov
lahf
dec
pop
pop
dec
sbb
dec
in
and
mov
sub
imul
xchg
je
inc
and
mov
mov
push
pop
lods
and
and
xor
rcrb
sbb
cmp
rcl
jnp
imul
ds
ss
cs
rcll
mov
jmp
enter
popl
cmp
pop
push
les
push
rcll
out
ja
stc
or
fwait
aad
cmp
mov
std
adc
or
lds
hlt
add
imul
lcall
clc
mov
add
aaa
inc
decb
sarb
ljmp
mov
adc
cmpsl
jmp
adc
push
push
mov
push
cmp
cmp
je
or
mov
pop
push
insb
push
mov
and
and
xchg
dec
pusha
add
test
flds
test
adc
cwtl
loopne
mov
lds
ljmp
add
aas
jno
mov
and
or
je
dec
sbb
repnz
popf
xlat
stc
and
jae
and
add
js
fsubs
aad
mov
repnz
into
xchg
sub
mov
sbb
xchg
fbld
add
xor
fucomi
mov
data16
nop
sub
test
pop
cmc
adc
push
add
inc
xchg
add
pop
sti
jge
or
dec
pop
outsb
adc
cmp
jmp
jge
mov
sbb
rdmsr
xchg
fwait
sub
mov
sahf
mov
adc
sub
js
inc
xchg
and
mov
cmp
into
movsb
push
out
and
or
mov
adcb
shll
xchg
jg
cmp
testb
jmp
mov
arpl
es
repnz
lods
cmpsb
in
push
xor
xlat
pop
pop
es
and
inc
outsb
cli
jb
lods
and
push
cmpsb
aas
adc
lahf
xlat
mov
faddl
ss
gs
jle
ret
int
lock
sbb
mov
xchg
push
addr16
xchg
arpl
jnp
inc
push
inc
loope
and
aam
shlb
pmullw
dec
jle
xchg
loop
test
arpl
je
xor
cmpsb
mov
sub
lcall
xchg
nop
cmp
lahf
jo
scas
dec
gs
fimull
jle
mov
and
jp
and
sbb
add
sub
add
dec
sub
nop
push
add
mov
jl
lea
mov
orb
lds
add
add
test
mov
push
inc
movsl
cmpsb
xor
shlb
push
mov
call
imul
fsubl
jge
mov
mov
subb
xlat
bound
or
push
jnp
xor
push
dec
jge
lcall
pop
mov
jmp
jp
or
dec
jl
cmp
sub
roll
xor
icebp
cmp
push
shrl
bound
stos
and
dec
jbe
xchg
cmpsl
mov
jle
bound
jb
ss
addl
or
jbe
loop
sub
dec
or
sub
aas
lahf
lret
pop
pop
cmpsl
nop
jne
cwtl
push
cwtl
add
mov
ret
inc
mov
adc
stos
cmpsl
xor
push
sub
loopne
int3
xchg
mov
imul
aad
in
xchg
int3
std
jo
imul
push
js
cmpsb
mov
dec
sar
mov
cs
inc
in
loopne
push
aaa
push
out
andps
adc
rcll
fdivp
fcomi
enter
jae
icebp
sarb
mov
es
clc
or
js
aad
notl
adc
pop
stc
xor
and
push
leave
mov
add
rcll
push
dec
mov
push
mov
sahf
repnz
les
sub
repz
lods
scas
mov
add
or
dec
int
jb
enter
inc
jmp
and
popf
adc
inc
mov
ljmp
xor
mov
std
dec
out
stos
mov
sbb
movsl
or
mov
lock
jle
mov
shlb
sarl
shlb
and
loop
jl
adc
push
xchg
push
pop
iret
imul
test
addr16
sub
sar
test
popf
push
mov
cmp
mov
cmp
pop
inc
loope
test
mov
cmp
jno
movsl
adc
fstpt
das
and
addl
cmp
ss
and
dec
shr
movsb
insb
out
sahf
mov
imul
xlat
call
hlt
mov
mov
int
jmp
js
mov
push
push
cs
mov
xchg
adc
movsb
pop
push
mov
fwait
cmc
or
cmp
stc
push
ficoms
push
je
mov
add
jb
push
and
pop
push
xchg
mov
mov
sbb
mov
ficomps
or
repz
repnz
aad
lds
sbb
cmp
ja
push
stos
hlt
data16
std
test
int
test
cmpsb
loope
sbb
in
add
push
add
ljmp
sbb
mov
push
push
fdivrs
outsl
in
lret
aas
jo
gs
imul
sub
ret
cltd
jnp
pop
inc
inc
mov
dec
sub
shl
adc
jp
mov
push
clc
pop
dec
es
push
ja
mov
stos
push
int
or
ljmp
jbe
insb
lods
sub
pushf
xchg
popa
stc
and
or
jg
adc
incb
dec
es
js
jb
out
test
nop
pop
adc
mov
add
push
int3
pop
shl
fsubs
cs
in
inc
aam
or
ljmp
dec
in
add
lret
shll
add
packuswb
push
mov
jns
push
aam
jmp
into
aam
stc
pop
out
bound
lods
or
mov
mov
sub
adc
add
sahf
or
lds
call
push
lods
in
jecxz
ja
push
dec
arpl
mov
lods
mov
push
les
fstpt
pextrw
xchg
pop
add
sahf
shrb
enter
or
fwait
movsl
aam
sub
std
push
lock
pop
ds
daa
xor
xchg
out
push
adc
insb
cmp
dec
pusha
cmpsl
addr16
test
sub
out
cltd
cmp
jae
lock
ret
rclb
xor
push
lds
jp
pop
sbb
fnstenv
andl
enter
mov
push
add
daa
les
js
and
in
xor
pop
mov
repnz
lahf
call
outsl
jb
dec
lea
outsb
mov
jo
out
mov
rcr
into
outsl
or
dec
ret
stos
mov
mov
loopne
ljmp
mov
dec
mov
mov
repz
sbb
dec
push
lcall
les
dec
es
ja
stos
mov
xor
dec
clc
sub
aam
in
sub
xchg
push
shll
xor
mov
cmp
mov
mov
sub
movl
pop
or
test
cmp
lock
lcall
cltd
mov
ss
adc
adc
dec
adc
inc
cmp
mov
lods
cltd
nop
mov
pop
xchg
call
xchg
out
jp
scas
rclb
inc
in
push
xor
icebp
movsb
into
sar
and
sbb
movsl
jge
scas
mov
cs
mov
xor
xor
inc
jmp
pop
inc
adc
pop
inc
and
pusha
jb
jl
dec
jle
int
and
dec
negb
or
dec
in
pop
cmp
mov
scas
xchg
cmp
cmp
dec
int3
xchg
pop
cmpsl
and
mov
mov
out
sbb
cmc
xchg
nop
mov
jl
jno
inc
cmp
and
jp
dec
push
mov
rcrb
fwait
test
adc
mov
mov
sub
dec
shll
std
push
pop
leave
cmc
int3
jg
pop
cli
shlb
imul
test
stos
in
pusha
cmp
adc
ljmp
add
sub
sub
jl
sbb
mov
test
fisubl
stos
xchg
and
and
mov
fdivrs
sub
dec
sub
mov
ret
aam
mov
in
aam
imul
mov
pop
incl
mov
push
and
jnp
repz
pop
adc
mov
cld
int
sahf
ret
movsb
adc
addr16
outsb
mov
pop
jle
push
lods
mov
and
fwait
scas
add
ja
mov
xor
sbb
popa
mov
cwtl
imul
xchg
adc
popf
repz
xor
push
mov
mov
data16
cmc
pop
dec
lret
mov
ret
pusha
xor
fists
push
das
mov
xchg
lea
bound
push
cmp
cmc
xchg
pop
sbb
popf
push
outsb
daa
daa
in
push
fdivl
mov
add
xor
aaa
test
out
mov
push
in
cld
xchg
pop
inc
xchg
aas
adc
push
mov
and
imul
fadds
push
movsb
sub
iret
aaa
fsubrp
ret
push
dec
es
into
push
jl
inc
adc
aad
cmp
mov
dec
jnp
and
data16
enter
test
testb
rcl
dec
pop
out
arpl
mov
push
mov
rorb
jmp
lret
sub
inc
push
enter
xchg
test
adc
fisubs
std
inc
pop
movsl
sbb
mov
push
cmp
sbb
cmp
sahf
out
add
xor
add
mov
cli
pop
imul
mov
cmp
cld
cld
push
jb
stos
xlat
in
out
flds
pusha
xchg
push
les
shr
sbb
jmp
int3
icebp
xchg
inc
aas
jle
sub
mov
pop
adcl
pop
gs
xor
inc
mov
push
adc
call
dec
xchg
lahf
mov
lret
sub
mov
sbb
xchg
and
xchg
dec
dec
jne
outsl
daa
xor
jl
rcll
sbb
jnp
sub
add
pop
push
pop
popa
dec
enter
mov
add
cmp
xchg
sub
outsb
pop
repz
aas
cmove
out
mov
inc
lods
into
add
jae
pop
das
push
pusha
inc
adc
fdivrs
push
nop
loop
pop
rep
or
pop
cmp
es
dec
jae
push
les
aaa
cmc
push
addb
movsb
notb
xor
push
cmp
xchg
mov
push
inc
and
ret
imul
aad
sub
jecxz
push
push
mov
add
or
or
push
jle
sub
out
pop
pop
outsl
popa
push
icebp
stc
jmp
fildll
ljmp
mov
push
xchg
stos
sbb
jl
shll
jg
aad
lahf
lods
xlat
andl
adc
dec
shl
ficompl
push
sbb
sahf
mov
addr16
xorl
inc
ds
cmp
adc
mov
add
mov
js
loop
jno
xor
shrl
ja
fisubl
gs
cmpsb
dec
addl
repz
inc
mov
cmp
imul
movsb
mov
cvtpi2ps
outsl
and
cmp
xor
or
rorb
cs
sbb
push
add
outsl
push
mov
int
int3
xchg
sub
mov
arpl
cmp
loop
adc
or
mov
dec
outsb
mov
incl
xor
cli
test
aad
mov
cmp
push
pushf
jo
xor
fildl
aam
rcr
xchg
adc
out
inc
cli
jmp
nop
sub
ds
or
inc
cli
sbb
insl
aam
jle
fiaddl
movsl
jl
ret
lds
lret
add
sarl
jg
pop
repz
das
xchg
adc
push
mov
aad
mov
call
sbb
inc
movsb
jae
mov
enter
notl
adc
xchg
lret
add
xchg
movl
mov
lods
jb
add
push
fidivrs
adc
and
sarb
sub
shlb
inc
pop
push
fcomps
aaa
icebp
out
xor
sbb
clc
jns
xchg
or
adc
fwait
hlt
cld
push
dec
jmp
dec
pushf
call
jb
notl
sbb
push
jp
fcmove
xchg
jl
insb
and
nop
mov
loope
cwtl
push
call
bound
pop
cmpsl
enter
or
test
flds
ret
jp
sbbb
mov
sbb
sub
mov
sbb
sub
jl
cmp
mov
push
push
loopne
push
mov
je
cmp
jg
inc
xlat
push
fisubrs
xorl
sub
inc
insb
in
inc
push
negl
fmuls
cmp
rcrl
mov
pop
xchg
mov
jo
mov
mov
pop
addb
insb
hlt
add
pop
sbb
hlt
mov
cmp
fcompl
fildll
jnp
addb
push
sahf
dec
dec
bound
fldt
iret
jne
or
cmp
and
sbb
loopne
lret
pop
mov
xchg
lcall
adc
mov
ljmp
cmp
movsl
es
test
push
inc
lret
in
pop
push
and
xlat
fildll
cmc
dec
jae
and
jmp
nop
mov
mov
xor
adc
in
call
mov
aad
add
inc
mov
xor
xor
popa
mov
pop
push
jp
pop
hlt
cmc
jge,pt
xor
jp
xchg
mov
xorl
or
xor
js
pop
xchg
rcl
sti
add
es
comiss
out
enter
clts
push
hlt
fs
sub
and
cmp
jnp
rcl
cmpsb
aam
push
jle
orb
repz
or
jl
mov
jb
leave
fcoms
shlb
cmc
mov
in
add
mov
shlb
jecxz
aas
mov
inc
mov
sub
cwtl
sbb
fcomip
add
jns
js
in
push
pop
test
mov
jg
int
sub
xlat
mov
gs
fsubrp
fwait
dec
cmpb
add
xchg
aam
lods
mov
and
shrb
lods
pusha
out
cmp
in
cmpsb
xchg
cltd
adc
lods
dec
adc
inc
push
out
inc
jne
dec
out
pushf
cmp
fidivs
cwtl
push
cwtl
nop
pop
dec
sub
xor
fisubrs
in
js
dec
sahf
xchg
loop
out
imul
inc
test
les
cmp
movsb
mov
mov
push
push
dec
nop
adc
pop
mov
mov
add
pop
cmp
sub
mov
xchg
mov
notb
pop
int
repz
fisubl
dec
push
xchg
ret
dec
cmp
mov
outsl
cmc
pushf
popa
and
push
test
int
mov
rcrb
cli
out
pusha
inc
stos
mov
into
xchg
loopne
cmpb
add
inc
lret
test
inc
cli
cs
mov
jno
mov
cltd
in
mov
dec
mov
sbb
mull
sbb
es
movsb
jbe
inc
and
jle
sbb
inc
cmp
pop
daa
mov
notb
repnz
mov
pop
mov
fisubrs
aam
ljmp
add
and
scas
fistpl
jmp
pop
xchg
imul
pop
dec
mov
es
sub
push
push
lock
mov
xchg
cwtl
fs
imul
sbb
sbb
mov
or
mov
les
mov
cli
add
mov
mov
pop
add
fwait
jg
mov
imul
minps
mov
stc
fadds
std
push
xor
mov
xor
push
stos
mov
adcb
mov
xchg
sbb
dec
shrl
cmc
mov
mov
loopne
adc
mov
out
arpl
movsl
pop
jo
jge
adc
mov
out
mov
cmp
addl
movsl
lods
lea
sub
pop
ss
lods
movsl
mov
popa
fbstp
mov
inc
and
xorl
loopne
inc
leave
movsl
fiadds
loopne
lods
mov
aaa
sahf
mov
xchg
add
push
inc
pop
mov
testl
push
dec
repnz
dec
sarb
jae
lock
ret
addr16
jb
pop
in
popf
jl
je
jb
bound
push
rcrb
add
mov
cmp
enter
pop
mov
mov
jle
lret
adc
push
or
mov
add
xchg
mov
pop
cmp
sbb
daa
in
pop
je
push
in
jae
les
arpl
push
sub
cwtl
in
push
ja
jmp
xchg
xor
repnz
in
scas
add
sti
sub
jg
outsl
ja
jae
jbe
fstl
test
ljmp
mov
add
cli
sbbl
dec
add
sti
fimuls
push
shrl
hlt
je
ret
push
loopne
jne
jo
pushf
or
sub
push
fists
ljmp
pop
pop
dec
jge
inc
mov
clc
neg
iret
mov
mov
dec
jle
aad
aas
dec
enter
xchg
sbb
shr
hlt
mul
and
lret
aad
imul
add
scas
call
lahf
jnp
loope
pusha
mov
lds
fisttpll
imul
sti
mov
xchg
adc
dec
sub
lret
hlt
movl
filds
js
mov
ss
aaa
mov
pop
in
cwtl
xor
ret
xchg
or
iret
jns
mov
jle
fisubs
and
pop
in
sbb
out
imul
push
gs
cmp
rclb
fistpl
pop
pop
js
xor
mov
repnz
or
jle
mov
mov
mov
ret
out
pusha
jbe
sub
sbb
rcl
hlt
xor
and
ret
clc
xchg
add
mov
add
mov
mov
or
aam
les
lods
cld
xor
sub
pushl
push
jl
add
xor
sti
mov
or
sub
push
mov
dec
mov
lods
sti
cmp
in
cld
fbld
mov
ss
shlb
sbb
movsl
lahf
or
insb
jge
mov
mov
call
adc
mov
mov
or
and
out
call
push
fs
inc
mov
xor
fcom
inc
jo
arpl
jg
mov
jno
gs
mov
push
dec
fcompl
ret
sbbb
dec
mov
dec
call
aaa
outsb
cmpsb
nop
pop
outsl
repz
adc
adc
sub
lea
mov
sub
pop
push
cltd
xlat
bound
adcb
in
fwait
lcall
repnz
push
or
repnz
or
dec
jbe
std
xchg
add
pushf
sub
pop
fisubl
mov
dec
push
xor
les
sub
and
pop
xor
repz
jge
mov
andb
sahf
pop
std
sbb
dec
fstpl
movsl
insl
out
xchg
pop
add
mov
push
test
pop
movsb
mov
scas
out
cld
arpl
roll
daa
cmp
sbb
xor
mov
xor
fwait
cmp
push
pop
popf
mov
out
lcall
negb
mov
subb
call
mov
cmp
enter
pop
jmp
push
shl
lahf
and
scas
faddp
fstl
mov
add
mov
inc
stos
pop
fsubr
ljmp
pop
cld
cmp
stos
in
mov
dec
inc
adc
and
in
cltd
pop
les
aaa
ret
sub
push
sub
lods
mov
call
in
mov
imul
call
mov
adc
xchg
jne
arpl
aas
pop
stos
bound
mov
dec
test
jb
push
mov
loop
jle
loopne
mov
icebp
out
loop
imul
adc
push
mov
push
push
decb
dec
push
cmp
cli
jge
pop
fiaddl
fwait
imul
out
mov
std
dec
push
add
inc
xchg
push
xchg
pop
test
and
xlat
nop
outsb
jmp
cmp
xor
or
ret
stos
xchg
xlat
add
shll
inc
xor
xchg
out
push
or
in
add
inc
jl
dec
xor
testl
lret
lret
adc
or
mov
mov
das
daa
adc
push
sbb
into
inc
in
jo
xor
fcompl
test
inc
ret
xchg
pusha
cmpsl
pusha
lock
pushf
fistps
dec
xchg
dec
fmul
es
outsl
push
mov
inc
test
aad
test
pop
addr16
adc
call
xlat
test
push
add
jne
sbb
xchg
int3
les
jg
imul
test
js
int
loopne
fnstcw
bound
ss
cmc
mov
aam
xor
inc
mov
push
addl
shl
clc
dec
pop
xor
mov
mov
inc
cmpb
popa
in
mov
lret
lcall
mov
mov
rorb
popa
push
divps
mov
sarb
gs
imul
outsb
xchg
lcall
mov
adcb
call
jno
xor
dec
sub
inc
sti
addr16
xchg
and
test
push
imul
imul
jne
jae
lods
pop
inc
lahf
xchg
es
dec
das
into
sbb
movsb
jmp
cltd
popf
scas
leave
cld
and
repz
sub
lea
les
sahf
push
mov
fisubrs
sbb
cmp
or
lret
gs
out
arpl
shr
imul
loope
push
sbb
lahf
push
pslld
cmp
and
mov
push
cwtl
cs
imul
jp
add
mov
enter
scas
sti
cmpl
arpl
xchg
mov
adc
push
scas
mov
xchg
or
mov
and
incl
aam
insl
adc
bound
sbb
or
dec
xor
cli
movsl
ds
xorl
and
or
std
pop
sub
cmpsb
ljmp
dec
sub
insb
mov
pop
pop
clc
adc
dec
xorl
test
jg
mov
in
pushf
xor
xchg
sub
fimuls
xlat
mov
fistl
sar
jb
add
push
xor
push
fstl
pop
bound
add
add
ret
dec
lds
cmp
xchg
mov
repz
mov
pusha
cmp
push
sahf
jmp
jecxz
jle
mov
xchg
or
and
je
push
testl
xor
mov
jne
out
enter
adc
shlb
les
lea
je
pop
sarb
gs
repnz
cs
add
mov
adc
dec
and
mov
idiv
outsl
push
jne
movsl
inc
add
pusha
jg
and
jb
xchg
dec
sbbl
iret
shl
pop
and
rclb
xchg
jns
out
adcl
outsl
xor
iret
imul
sbb
lock
iret
add
mov
xorb
cmpsl
std
inc
test
add
cmpsl
popa
xchg
xchg
rolb
sub
inc
je
or
int3
enter
jmp
push
out
jb
imul
notb
xor
mov
daa
dec
sub
dec
insb
mov
sarl
cmpsb
xor
xlat
shll
sti
mov
dec
ja
cltd
in
jmp
fwait
push
xchg
js
jo
js
mov
xor
stc
lock
fidivrs
pop
lock
dec
das
rcll
pop
sub
sub
popa
xchg
xchg
jno
daa
mov
ret
mov
out
fildll
xlat
sub
or
pushf
cmp
push
lods
pushl
xchg
adc
add
push
jge
mov
push
push
jle
scas
enter
outsb
ljmp
pop
cs
mov
test
int3
std
push
test
data16
push
aam
ficoms
jecxz
es
cltd
mov
xor
cmp
add
pop
fucomip
gs
pop
outsb
ret
xchg
lcall
lahf
jl
push
xor
inc
test
xor
add
lahf
jae
icebp
xor
pop
int3
mov
cmp
xor
sbb
aad
ljmp
in
cmp
xor
adc
mov
sti
clc
loop
push
mov
inc
sbb
cs
mov
fldl
das
jno
shll
and
repnz
push
jno
inc
mov
test
jo
mov
mov
push
push
iret
jp
movsb
mov
jne
pop
adc
sahf
data16
test
int3
xchg
xor
xor
cmpsl
cmpsw
sub
push
jno
lock
push
cmp
mov
xchg
leave
xchg
sbb
mov
adc
js
mov
out
jb
adc
jb
mov
rorl
fistpl
xchg
daa
lock
mov
mov
cwtl
xchg
shrb
pop
mov
xor
and
dec
push
daa
inc
sub
pop
add
xor
cltd
mov
in
fwait
ljmp
xor
js
leave
out
stos
mov
push
in
jle
push
add
cmp
ret
out
into
xor
jno
data16
mov
dec
cmp
daa
xchg
popf
lret
cmc
fists
lods
adc
jo
into
adcl
adc
orl
out
pop
pusha
iret
aad
not
adc
lock
mov
cld
js
pop
xchg
mov
inc
lahf
ds
fnstcw
mov
aam
xor
dec
scas
mov
mov
lods
movsb
push
out
stc
aas
pushf
and
sar
or
leave
dec
jae
insb
add
cmp
xor
xlat
push
jns
insb
push
fcomip
scas
imul
in
daa
mov
jmp
sbb
and
test
int
int
cmpsb
and
roll
push
iret
es
mulb
shll
addl
and
jnp
out
xchg
shll
fildll
mov
xchg
cmp
mov
push
add
pop
nop
push
jl
xor
in
push
push
stc
xor
adc
cmp
mov
or
mov
imul
in
out
push
adc
pop
cli
dec
aas
jl
lea
and
jns
fisubl
jb
stos
fs
pop
mov
mov
and
cmp
sub
mov
push
or
dec
stos
push
sbb
xchg
dec
lods
fnsave
xchg
call
mov
leave
xchg
inc
and
adc
lods
mov
ds
repz
sbb
les
add
push
test
or
flds
fidivrs
and
xor
les
or
mov
sbb
mov
adc
inc
fldt
popa
int
mov
add
push
data16
push
push
jne
rorb
add
mov
movsl
add
xchg
xchg
movb
or
xchg
gs
pushf
inc
dec
mulb
aaa
into
adc
mov
push
hlt
es
xchg
scas
cmp
cmpsb
add
push
pop
mov
stc
add
xor
pushf
inc
test
inc
popa
gs
pop
or
pop
std
jno
sub
rclb
push
popf
xor
xor
mov
fdivs
jmp
jo
dec
outsl
popf
sti
scas
mov
add
xchg
adc
repnz
imul
loope
aas
mov
push
popa
popa
gs
hlt
insb
add
pop
lahf
pop
cld
int3
repz
scas
loop
dec
lods
jmp
shlb
aam
mov
cmp
stos
pop
or
push
mov
add
test
andl
xchg
push
into
lahf
jle
arpl
mov
movsb
jle
mov
rolb
sbb
xlat
dec
vpmovzxdq
divl
fucomp
pushl
orb
xchg
sahf
sub
test
out
ret
imul
push
in
test
xchg
cmpsb
jp
sti
lret
insb
outsl
add
movsl
mov
stos
xchg
xchg
jp
adc
repz
ror
dec
inc
pop
js
xchg
mov
pop
repnz
or
jnp
into
sarl
in
mov
push
mov
sub
push
pusha
jge
mov
shll
push
cltd
pop
pop
test
adc
push
adc
sti
or
lods
fists
sbb
les
in
in
and
je
lea
mov
dec
imul
hlt
imul
data16
jge
je
aaa
mov
inc
adcb
int
mov
int3
mov
xchg
mov
adc
ret
out
or
inc
fmull
loope
testb
dec
push
inc
add
lods
pop
cld
insb
lods
outsl
pusha
push
inc
jo
xor
adc
fsubr
ficoml
mov
mov
sub
mov
add
or
mov
cmp
and
jp
pop
and
lahf
into
or
enter
inc
mov
cltd
repnz
aas
stos
sahf
inc
insb
bnd
push
push
pusha
add
lea
aas
xlat
arpl
cwtl
in
fistpl
rorl
loope
in
sub
cltd
jb
mov
js
cmp
or
jnp
fwait
out
test
loop
dec
pop
mov
movsb
adc
mov
jne
data16
inc
cmc
leave
data16
pop
inc
jp
out
and
sub
inc
iret
in
call
imul
dec
dec
aam
dec
movsl
dec
movsb
lds
aam
cmp
sub
js
ljmp
into
aam
push
icebp
out
xchg
aad
cmp
das
repnz
negl
pop
add
sub
cs
sub
inc
out
bound
xchg
int
ja
xchg
scas
addr16
lea
aam
das
aam
xchg
pushf
ja
lock
sub
cmpsl
iret
mov
mov
mov
or
mov
add
out
mov
sbb
xchg
sti
aaa
in
push
lods
mov
mov
lret
out
test
push
clc
sub
mov
rcrb
stc
loopne
jbe
inc
dec
mov
data16
dec
popf
cmpsl
fwait
or
jo
add
shl
mov
sub
add
xchg
lods
jbe
das
sbb
xchg
mov
or
bound
push
fwait
cmp
sub
dec
push
cmp
shrb
mov
inc
add
iret
into
bound
ja
add
sub
fwait
pop
imul
add
push
outsl
outsl
mov
push
jle
mov
sbb
fidivl
xor
lret
mov
lahf
es
mov
xchg
xchg
mov
cwtl
ret
jmp
push
push
push
mov
pop
inc
push
mov
jge
mov
subl
mov
add
test
jg
lcall
fdivrs
push
or
hlt
xor
cmp
cmpsb
adcb
or
insb
test
out
jp
lret
pop
fistps
nop
sub
or
sub
ljmp
push
push
jb
clc
adc
sub
xchg
jecxz
mov
fwait
add
or
xor
push
lret
cli
mov
pop
jno
jo
in
jb
mov
inc
add
insl
scas
daa
or
dec
dec
adc
inc
mov
fbld
push
shll
pusha
outsl
cwtl
fs
pop
mov
lods
mov
sbb
out
push
push
mov
xchg
in
sbb
insl
dec
cmp
pop
movsl
pusha
fwait
and
mov
pop
sub
out
mov
pop
test
ds
cmpsb
push
or
sbb
xchg
repnz
sti
insl
jnp
insb
sti
inc
es
sub
push
loop
jl
jmp
cmc
mov
mov
add
push
xorb
pop
push
add
addl
xchg
jl
xchg
inc
inc
aad
cmpsb
or
inc
pop
or
push
outsb
dec
mov
lods
sbb
jg
stos
into
xchg
shrl
jp
in
out
mov
mov
cmp
jle
push
xchg
pusha
ret
in
fwait
xor
xor
push
push
mov
sbb
lods
inc
lods
push
fnsetpm(287
jns
push
pop
stos
pop
inc
dec
and
mov
sub
stc
movsb
ja
mov
sub
aas
fldenv
and
int
sbb
aam
das
pop
push
movsl
sbbl
gs
popf
mov
shr
ljmp
adc
add
hlt
in
add
ljmp
dec
and
push
add
jb
pop
stos
jnp
into
pop
inc
xlat
dec
sub
adc
dec
rcll
mov
xchg
xor
mov
popf
jnp
fwait
inc
fimull
cmp
daa
ss
push
movsl
mov
mov
and
jno
xor
nop
mov
ljmp
addr16
shlb
lock
outsb
push
dec
imul
inc
mov
add
inc
jb
test
ja
addr16
cmp
dec
pushw
repnz
mov
or
cmp
inc
sti
movsb
cmp
mov
sarl
pop
and
icebp
mov
sbb
mov
xor
gs
xlat
mov
clc
mov
mov
push
sub
clc
popa
inc
dec
xchg
in
mov
data16
gs
sub
in
or
dec
out
mov
cli
dec
dec
push
lds
mov
popf
jl
mov
addr16
cmp
or
lret
lahf
adc
mov
movsl
rcll
jecxz
fidivl
jb
out
push
pop
dec
jnp
xchg
ficoml
cmpsl
pop
jmp
pop
nop
xchg
test
xchg
inc
mov
push
push
adc
into
mov
inc
inc
or
dec
jecxz
xor
adc
cld
xor
fldcw
and
cmc
jno
lods
je
scas
fs
pop
push
inc
clc
fs
pop
inc
das
mov
imul
add
dec
xor
mov
mov
stos
enter
or
rcrl
inc
hlt
das
adc
push
mov
add
or
pop
int3
xchg
imul
mov
and
push
pop
lea
adc
int
jbe
lods
subb
shlb
dec
std
inc
sbb
pushf
jns
or
push
mov
scas
mov
xchg
lea
sbb
stos
out
mulb
push
and
arpl
pop
or
xchg
mov
or
sbb
mov
push
out
stos
sbb
sti
je
lret
or
cmpsl
pop
or
testb
movsl
icebp
xchg
es
mov
int
xchg
pop
fnstenv
enter
adc
rclb
les
loope
in
xorl
add
mov
lcall
xor
mov
sbb
inc
clc
ss
movsl
lds
iret
movsb
std
outsb
das
or
mov
sbb
xor
and
mov
dec
dec
xor
outsl
aas
mov
in
xor
arpl
mov
push
int3
or
mov
xor
jmp
dec
mov
jo
in
aad
mov
outsl
inc
jmp
enter
movsb
mov
sub
adc
jl
call
bnd
imul
stos
enter
lret
popa
jmp
sub
fistps
dec
and
inc
aad
outsb
push
cld
or
popa
repz
outsb
mov
rcl
iret
sti
inc
push
jns
iret
jae
xchg
or
pushf
ljmp
popf
rcll
mov
icebp
or
sub
mov
xchg
in
cmpsl
shlb
jmp
dec
jnp
add
adc
and
test
dec
mov
in
test
or
mov
xorl
mov
sub
xchg
mov
adc
sbb
pusha
sbb
movsb
add
gs
pusha
ss
jb
push
jg
bound
pop
and
add
jnp
test
bound
lcall
xchg
cltd
dec
pop
xchg
repz
xchg
jg
pushf
dec
cltd
rorb
and
fnsave
call
sbb
mov
iret
fisttpl
adc
cs
movsl
frstor
pop
jno
out
pop
fstps
outsl
popa
data16
notl
or
int
push
repz
mov
cmp
fs
pushf
lds
lods
xchg
int
out
popf
jl
push
cmp
sbb
add
add
inc
sbb
lock
mov
iret
and
or
xchg
pop
mov
int
pushf
imul
rcll
jno
sub
fdivrl
outsl
cmp
cli
cltd
adc
dec
pop
call
or
out
sub
mov
fcoml
adc
lret
jle
jle
jno
sti
dec
call
movsb
dec
push
pop
cld
incb
xchg
add
mov
repnz
push
or
loopne
jle
and
mov
pop
ds
popf
pop
add
add
pop
es
stos
pushf
inc
mov
pop
rol
in
inc
xor
jbe
popf
rcll
cs
or
je
and
push
dec
jbe
addr16
mov
mov
inc
xor
push
xor
sbb
push
jp
je
sub
hlt
inc
dec
xchg
enter
adc
push
cwtl
push
sub
xchg
in
out
dec
sbb
dec
nop
rorb
es
add
arpl
fiaddl
dec
cmp
or
lret
gs
hlt
jb
and
xchg
cwtl
pop
clc
push
dec
test
pop
iret
push
sbb
notl
push
mov
arpl
and
jnp
adc
insb
sti
jmp
add
insl
add
mov
or
push
repz
sub
cld
pop
dec
jbe
xor
loop
sbb
inc
lcall
sahf
fidivrs
enter
stc
jp
ljmp
inc
push
das
popf
in
jno
lds
push
divl
ds
filds
mov
xchg
adc
jb
fstps
cmp
aaa
lret
lods
jecxz
mov
stos
fcmove
jmp
sbb
leave
fwait
sbb
adc
sahf
or
jae
xor
sti
cltd
sub
sub
or
cli
out
jne
pop
cs
aaa
iret
pop
jo
aaa
gs
mov
sti
or
sbb
cld
in
and
pop
iret
jae
lods
jbe
icebp
pop
jo
arpl
mov
and
bound
push
ret
push
push
xchg
sub
and
mov
idivb
cmp
scas
aaa
mov
inc
sub
je
cmp
pusha
pop
lds
xchg
pop
add
test
scas
mov
sub
adc
jo
mov
mov
pop
out
and
pop
int3
push
push
int3
fs
sahf
mov
pop
jmp
enter
push
push
push
mov
jge
mov
jl
push
or
sbb
pusha
push
shlb
cmpsl
out
jg
cmpl
ljmp
jmp
ljmp
int
sbb
lods
fimuls
insl
lahf
pop
xor
mov
xchg
fwait
mov
mov
icebp
sbb
xorl
lret
shr
jo
and
stos
ror
jg
push
mov
lods
jae
xchg
shlb
repz
ss
fldcw
or
sarb
sub
and
mov
adc
ds
or
mov
cmp
mov
cli
inc
or
bnd
pusha
aad
jae
sahf
cmc
jb
stos
adc
int
push
inc
dec
xchg
je
daa
loopne
sbb
fisttpl
shrd
dec
aam
sahf
movb
and
jle
inc
rorl
mov
sub
sbb
or
subb
mov
cld
test
or
insl
dec
gs
stos
in
cs
mov
adc
push
mov
sbb
icebp
fdivrl
sbb
push
outsl
testb
sbb
mov
ret
lret
js
jae
jle
xor
cmp
add
xchg
dec
cmc
loop
cmp
inc
jne
sarl
xchg
adc
repz
ffreep
xchg
add
fadd
inc
repz
xbegin
stos
sbb
lret
adc
push
xchg
fwait
shlb
pop
scas
push
imul
scas
push
fisubrl
pop
cld
cmp
mov
scas
fcom
mov
icebp
and
push
jns
insb
fisubrs
pop
ljmp
loope
test
call
ret
les
or
loope
push
add
fdivrs
fdivl
xchg
test
push
inc
jle
decb
mov
mov
js
pop
mov
stos
fstl
push
ret
sbb
push
test
sbb
sub
das
and
in
xchg
out
push
xchg
pop
mov
icebp
fistpl
sbbb
dec
fsubrs
mov
cmp
mov
outsb
arpl
add
outsl
jle
jle
inc
push
xor
movsl
mov
lods
pop
outsl
cmc
cltd
jbe
inc
repnz
cmp
push
into
repnz
popf
push
inc
in
sub
pop
imul
testl
lods
inc
lahf
xor
int
pushl
cmp
or
cmp
pop
mov
inc
leave
movb
pusha
scas
pop
sub
test
inc
push
add
into
scas
lahf
ds
mov
jmp
das
pop
mov
mov
and
or
or
cmp
xor
stc
cwtl
or
les
xchg
mov
push
sub
push
lahf
out
dec
xlat
pop
pop
push
add
mov
add
mov
and
mov
push
loopne
add
mov
inc
call
jne
mov
xor
mov
cmp
inc
test
insb
cwtl
scas
pop
mull
sub
shll
sub
mov
movsb
dec
push
sbb
pushf
mov
js
pop
sub
inc
jl
xchg
rol
jae
xor
push
int
daa
and
add
inc
out
push
insb
ret
mov
les
push
fucompp
cmp
popf
fcmovnbe
leave
std
mov
imul
sub
mov
inc
jno
and
fwait
inc
xchg
jnp
sbb
popa
sub
jmp
sbb
ficomps
daa
pop
add
sub
or
jmp
xchg
or
adc
cs
insl
adc
lret
jne
pop
and
hlt
js
mov
faddl
dec
push
and
fstpt
sahf
test
daa
sbb
and
test
add
mov
cmp
test
mov
cmpsb
imul
repz
loopne
test
sbb
fnsave
icebp
mov
sbb
inc
xchg
out
cld
mov
cltd
xchg
ret
popf
loopne
in
adc
cmp
dec
data16
out
inc
xor
popf
and
sub
cmp
js
iret
test
xchg
addr16
cmpl
mov
lds
cwtl
pop
in
sub
mov
js
fstps
ljmp
xchg
stos
in
ljmp
out
adc
repnz
fmull
pop
pop
add
sbb
xchg
push
enter
mov
test
inc
mov
mov
mov
jl
repz
loope
mov
dec
ret
sti
mov
add
mov
outsl
dec
mov
mov
push
adc
test
and
xchg
icebp
sub
mov
call
mov
pop
or
clc
gs
push
pop
lea
cmpsl
sub
mov
mov
pop
jae
cltd
mov
cmp
push
leave
outsl
dec
call
aaa
ljmp
xchg
inc
add
incb
pop
sbb
sbb
int
clc
xchg
mull
xor
cmpsl
leave
rep
test
adc
mov
jecxz
test
iret
test
adc
mov
sbb
mov
dec
jmp
sub
je
jb
mov
mov
mov
mov
sbb
sbb
addr16
ja
popa
mov
xchg
in
ljmp
mov
mov
mov
inc
int
inc
test
pop
nop
xchg
push
add
inc
jmp
inc
icebp
out
sbb
xor
pop
xchg
jno
fnsave
lods
outsb
add
aaa
adc
ror
into
add
lea
pop
fnsave
fiadds
je
aad
and
mov
add
int3
bound
mov
push
mov
cli
pusha
inc
adc
or
push
sub
pop
xchg
incb
mov
mov
imul
xor
fs
xor
in
testl
add
ds
jge
sbb
inc
clc
sub
push
data16
inc
sbb
inc
mov
rcrl
fmull
push
jge,pt
aas
mov
dec
into
push
fbld
jnp
aam
cltd
add
icebp
add
fidivrs
clc
test
je
jbe
sbbl
loope
mov
test
les
or
push
and
test
or
jmp
std
and
dec
mov
xor
shrb
out
sub
cmp
data16
mov
cmp
dec
add
lds
sbb
xor
inc
ss
jno
jbe
adc
aas
shrb
mov
cmp
push
inc
pop
inc
inc
in
in
mov
sub
and
loope
xchg
dec
jecxz
fwait
jmp
ja
incb
xchg
jge
lret
push
std
jle
pushf
jne
jne
scas
in
mov
jg
lods
pop
push
es
jge
flds
fiaddl
inc
sub
pop
xchg
cli
aad
cmp
jno
fiadds
insl
push
ss
dec
out
shrb
adc
stos
stos
cmp
negb
sbb
xchg
mov
adc
inc
or
mov
lods
xchg
nop
and
insb
stos
js
out
inc
jbe
mov
mov
arpl
or
leave
test
inc
test
jns
iret
bound
jns
jae
pop
mov
cmp
push
imul
add
adc
int3
xor
rorb
push
mov
adc
xor
ljmp
imul
jl
adc
jmp
or
mov
popf
push
mov
lahf
test
lds
xchg
push
mov
jno
adc
inc
push
cmp
sbb
es
sahf
push
test
je
sub
mov
fisttps
imul
xor
sahf
mov
ret
sbb
dec
pand
mov
mov
sysenter
cmp
shlb
push
fs
loop
pop
lock
ljmp
xchg
cwtl
out
test
std
out
test
scas
fdivl
sbb
push
negl
and
cmp
fiadds
lahf
mov
or
shr
nop
lcall
sbb
push
out
jbe
outsb
sub
or
add
mov
repz
data16
jne
lcall
adc
test
inc
scas
cltd
punpckldq
sub
movsl
lock
adc
push
es
cmp
pushf
mov
test
jle
push
cli
mov
cmc
jno
push
inc
mov
inc
mov
adc
mov
out
fwait
icebp
rcl
fstpl
or
fdivrs
push
xchg
jo
dec
inc
push
nop
cs
adc
mov
aam
pop
fadds
mov
and
orb
jbe
imul
cmp
sahf
and
mov
lods
dec
and
pop
mov
pop
push
or
xchg
or
mov
shl
push
cwtl
lods
sub
test
xchg
or
xchg
cmp
and
jp
push
adc
lods
mov
push
jne
outsb
cwtl
in
scas
pop
fiaddl
dec
jns
sub
fisttpll
sti
rcll
pop
mov
jno
jne
pop
push
mov
cs
insl
xchg
stos
leave
xchg
pop
pop
inc
ror
scas
nop
push
push
leave
mov
adc
test
cmp
jle
fildl
adc
into
es
dec
aam
xchg
and
mov
ret
or
cli
dec
xor
notb
push
sbb
cmp
mov
clc
add
lds
xchg
outsb
sub
addr16
xor
popa
adc
ja
scas
xchg
xchg
pop
dec
icebp
sub
daa
adc
mov
push
sbb
jo
and
movsl
pop
push
push
loopne
das
hlt
push
xchg
out
gs
xor
jl
les
add
sub
fiadds
int
and
dec
aam
repz
clc
mov
xchg
je
rcrl
sarb
faddl
jo
lods
nop
loopne
mov
add
adc
addr16
jecxz
arpl
rolb
xchg
lock
int3
clc
andl
movsb
add
fstpl
shl
mov
mov
andl
aaa
mov
sub
lock
stos
add
or
std
ret
daa
hlt
fdivrs
cmp
or
pop
xchg
aas
jmp
and
xor
shll
mov
mov
stc
jecxz
jbe
fwait
push
test
jle
cmpsb
aaa
mov
stos
in
lods
mov
lock
fsts
lods
inc
and
jns
jmp
cmp
inc
sbb
lret
adc
int
cmpsl
dec
in
add
cmp
cmp
dec
frstor
movsl
or
inc
push
mov
lock
and
outsl
ljmp
xor
fwait
call
loopne
aaa
sub
ret
jl
mov
ja
mov
xchg
divb
jp
lret
pop
in
movsl
repz
push
inc
imulb
sbb
test
push
push
loopne
pop
sub
or
mov
xchg
movsb
xchg
inc
lret
dec
divl
jbe
aam
pop
pusha
outsb
mov
call
movsl
incl
inc
std
insl
orl
and
jnp
outsb
arpl
fsub
push
fnsave
sub
dec
xor
call
ljmp
sub
adc
jg
and
mov
cmpsb
leave
xchg
pop
jp
divl
adc
fstpl
add
cmp
pusha
mov
add
jge
dec
shl
mov
push
jnp
test
pop
test
pushf
mov
fisttpll
xor
lods
aas
mov
into
hlt
popf
jae
pop
testb
cwtl
lahf
aad
dec
sbb
mov
clc
dec
pusha
sti
and
mov
xor
fadd
pusha
ss
sbb
insl
test
imul
mov
mov
int3
pop
daa
in
adc
and
cmpsl
out
add
fs
cmc
xchg
sub
cmp
aaa
loope
das
ss
mov
xchg
pop
pop
lods
add
mov
add
fistps
xchg
dec
call
mov
dec
int3
add
pop
testl
pusha
andb
aas
loop
mov
cmc
outsl
imul
shrb
dec
jmp
lahf
je
sub
lds
mov
jns
andb
mov
pop
lcall
and
mov
mov
push
xor
in
fbld
fcoml
mov
lea
in
sub
mov
ret
repz
lock
mov
dec
hlt
or
adc
push
stos
add
pop
and
adc
scas
mov
mov
cltd
rcl
addl
arpl
enter
pop
xchg
fcoms
mov
outsl
pushl
push
mov
cmp
push
mov
repnz
mov
movsl
inc
or
xchg
push
cmp
push
and
push
rcll
xor
imul
pop
dec
mov
pusha
dec
fisubs
mov
push
lss
inc
add
lods
xor
fistpl
stc
inc
inc
sbb
add
ror
arpl
subb
inc
orb
or
test
sbb
insl
lahf
adc
icebp
sub
aaa
cmp
pop
mov
addl
mov
popf
rcrl
cmp
cwtl
test
adc
fsubrl
adc
lds
jl
adc
push
xchg
cmp
dec
pop
ja
repz
dec
jecxz
or
sahf
sub
mov
jne
push
fucom
shll
into
xchg
test
add
in
sahf
sbb
jns
mov
mov
fisubs
cmp
iret
lods
push
push
or
mov
push
aas
push
lock
cmp
stos
xor
icebp
add
xchg
xchg
xchg
inc
sti
jbe
push
jl
xor
cmp
adc
pop
hlt
cmp
mov
dec
and
dec
xchg
sub
in
mov
pop
iret
pop
std
xchg
fcmovu
push
cmpsl
pop
fchs
cmp
cmc
push
push
push
mov
out
mov
sub
adc
testl
pop
lret
out
testb
bound
mov
outsb
mov
and
inc
pop
ret
and
in
jl
scas
or
andl
mov
aam
shll
arpl
mov
xor
xchg
out
cmpsl
sahf
mov
ret
out
add
outsb
inc
call
add
add
scas
pushf
mov
mov
jno
push
dec
pop
adc
leave
loope
jb
dec
std
push
repnz
xchg
add
fucomp
out
xchg
mov
insl
sbb
push
std
inc
mov
push
mov
adc
mov
addb
cmpsb
test
out
xchg
ret
call
mov
in
adc
and
jae
pop
inc
jb
xor
cwtl
enter
mov
test
jo
push
inc
lahf
cmpsl
xor
and
dec
mov
test
sub
add
aad
ret
mov
push
repnz
lods
push
sub
test
jecxz
push
and
imul
dec
fnstsw
push
sbb
push
sub
outsb
push
xchg
jno
sbb
jnp
sbb
xor
push
push
loop
xchg
cmp
repnz
in
xor
pcmpeqd
lea
and
enter
leave
xchg
mov
inc
push
cmp
xchg
xchg
call
lea
mov
xor
pop
dec
pop
orl
jne
nop
xchg
out
ret
mov
out
add
pop
pusha
mov
xor
in
mov
add
push
int
xor
or
aaa
int3
fldenv
fldenv
dec
ja
or
andb
inc
jmp
pop
sti
cmp
cmp
mov
push
pop
cmpsb
inc
mov
xlat
and
cld
or
int3
jno
cmp
sub
sub
leave
xchg
cld
adc
xlat
mov
shrl
in
lret
mov
in
mov
sti
rol
lahf
xor
rcl
out
je
lea
rorl
pusha
pushf
mov
pop
scas
pusha
push
imul
std
jae
adc
gs
xor
cmpsl
leave
rorb
lea
sahf
repz
lods
loopne
clc
pop
ret
rorb
fisttpll
mov
dec
mov
js
add
dec
pop
lahf
fistl
pop
cmp
dec
or
mov
ljmp
mov
sahf
xchg
mov
xchg
xor
enter
and
jmp
mov
dec
and
mov
and
data16
dec
rolb
out
mov
cs
scas
ret
jmp
dec
imul
jmp
in
imull
sub
in
out
push
fdivl
jge
sub
es
outsl
mov
jns
and
outsb
add
out
out
mov
fidivl
push
daa
and
dec
mov
dec
pop
inc
test
dec
xchg
icebp
xchg
sbb
jecxz
and
ja
mov
sub
adc
lds
sbb
or
ret
negl
daa
xchg
dec
mov
jp
insl
mov
sahf
and
add
pop
test
insl
pop
lods
in
or
mov
test
xchg
dec
testb
js
ljmp
adc
fsin
mov
jmp
pop
cmc
jne
xor
popf
mov
jb
fstpl
jecxz
movsb
mov
mov
ffreep
inc
jae
jecxz
xchg
nop
inc
mov
jge
iret
bound
sbb
mov
int3
lahf
dec
xor
push
or
or
pop
add
dec
outsl
stc
loop
or
jl
inc
jb
test
and
ss
fbld
daa
pop
inc
std
out
test
add
add
rcl
dec
mov
push
or
addb
mov
mov
adc
sub
pop
xor
es
pop
mov
sub
lea
nop
cli
pop
cld
jl
pop
lahf
aam
jmp
mov
xor
dec
enterw
push
pop
out
xchg
sub
dec
jae
mov
and
jg
out
div
add
lods
dec
push
imul
sahf
iret
cmpsl
scas
mov
in
mov
mov
dec
pop
pusha
mov
xlat
cmpsl
call
test
dec
in
mov
sahf
iret
dec
jb
jge
lods
pop
int3
ds
or
test
jo
rcrb
inc
les
insb
fwait
cmp
jns
xor
jle
mov
lret
ficompl
ja
jp
jge
outsl
adc
sub
mov
sub
mov
pop
pop
push
cli
pop
xor
ret
cmp
enter
mov
outsl
and
push
lods
ss
adc
xchg
cmpsb
add
jle
push
sbb
pop
bound
ljmp
test
icebp
lret
lret
in
aas
sub
xor
imul
add
jae
pop
sbb
fsubr
adc
pop
cmc
aam
movsb
lahf
and
lods
cmp
insb
pop
aam
shll
sub
mov
xchg
lcall
jbe
push
sbb
sub
insb
sub
jnp
pop
icebp
vmresume
push
push
mov
outsl
lods
push
testb
cld
rol
pop
iret
inc
lods
mov
mov
fisttpl
ljmp
lock
ret
jg
ret
fucomip
mov
push
test
dec
movsb
xchg
shr
iret
pop
pop
and
lods
push
pop
dec
sub
xor
aas
stos
and
and
and
cmp
or
mov
xor
lret
fiaddl
pop
ret
xchg
cwtl
sahf
inc
and
xchg
push
and
sbb
or
out
lods
cli
hlt
scas
add
stos
pop
add
mov
dec
aas
clc
xlat
cmp
sub
ret
or
push
je
and
mov
dec
add
adc
sbbb
pop
xchg
ret
cltd
xchg
jg
jne
leave
test
cli
inc
sahf
ljmp
hlt
or
stc
dec
fimull
movsl
imul
and
dec
mov
out
dec
repz
cmc
jp
pop
sbb
xchg
fstpl
sbb
loopne
sahf
mov
xor
and
adc
mov
xor
lock
ja
ss
xor
lea
push
xchg
or
add
pop
inc
fmuls
cmc
sbb
sti
aad
dec
push
clc
addr16
xchg
sub
scas
lock
div
xor
xor
rorb
jmp
ljmp
lds
aad
dec
inc
out
mov
in
rolb
hlt
add
loopne
mov
xor
shrb
stos
cmpl
stc
inc
mov
aaa
pushl
jl
jnp
dec
rclb
or
xor
dec
int
push
sub
mov
and
sbb
sub
data16
popa
or
dec
sub
pop
mov
mov
stc
daa
push
push
lret
rorl
fnstsw
sarb
maxps
in
mov
bound
or
inc
cmp
cltd
and
push
shll
ret
frstor
dec
jne
mov
add
pop
outsl
rol
mov
test
movb
fisubs
lea
js
mov
pop
mov
mov
push
pop
out
mov
or
fbstp
inc
pop
push
jne
lock
imul
rclb
fcmovnbe
or
push
lahf
jns
pusha
mov
imul
aad
rorl
out
inc
xlat
jo
sbb
dec
gs
cmp
and
inc
out
aas
icebp
fisttpll
insl
cmpsb
call
lea
leave
mov
pop
sbb
loop
push
sbb
xor
mov
insl
inc
dec
dec
push
inc
fwait
or
aad
or
ret
sbb
sahf
pop
imul
jp
mov
pushf
cli
adc
fwait
mov
jmp
mov
insb
pusha
es
shld
scas
push
loope
movsl
push
lea
ljmp
repnz
jle
push
adc
dec
inc
pop
aaa
loope
sub
mov
aas
fidivl
into
push
jae
mull
and
test
mov
scas
fidivl
inc
ret
rorl
lods
xchg
xor
test
pop
adc
shll
or
imul
add
jnp
dec
push
outsl
xchg
xchg
pop
aas
push
sbbl
scas
int
pop
pop
fcoml
pop
subb
inc
lret
pushf
not
cmp
or
xchg
xchg
aaa
or
lret
push
xor
xchg
mov
in
and
scas
cmp
es
xor
jb
and
test
adc
sbb
xchg
sbb
loope
xor
add
mov
dec
lods
stos
and
lods
into
rol
lret
popf
out
sbb
rcll
mov
paddw
cmp
ficoml
jo
jne
lods
pop
mov
sbb
ja
out
cmpb
fwait
mov
mull
insl
push
shrb
inc
fsts
jg
xchg
pop
cmp
cmp
inc
pop
pop
xor
xlat
or
or
roll
cmpb
adc
cmpsl
or
jno
sbb
movsl
cmp
add
sbb
rcll
and
movsl
loopne
sbb
mov
cmp
test
aaa
push
sub
pop
lds
out
xor
push
movsl
sbb
mov
pop
ds
mov
fidivrl
cmc
cmp
jmp
insb
xor
and
push
cld
fwait
mov
inc
pop
aas
mov
pop
jle
and
adc
mov
lea
and
test
or
aaa
adcb
call
cmp
adc
push
fsubrp
mov
imul
popa
andl
aam
lret
les
shlb
bound
xlat
f2xm1
or
mov
jnp
push
aas
ljmp
pop
or
jae
shlb
or
repz
cmpsb
filds
cmpl
ss
pop
pushf
cmp
mov
push
xchg
or
mov
bound
shrb
cmpsb
jns
popa
jo
mov
mov
icebp
pop
jge
repnz
mov
inc
or
stos
xorl
xchg
inc
adc
sbb
jbe
insl
xchg
mov
adcl
mov
cltd
and
popa
or
insb
insl
dec
aad
mov
push
popa
lret
fstpt
jecxz
or
add
pushl
add
mov
addl
sbb
loope
adc
negl
mov
push
inc
ret
sti
xchg
int
daa
sbbb
cs
fidivrs
mov
push
mov
pop
bound
xchg
outsb
int3
pop
lock
minps
add
stos
lcall
arpl
mov
out
pop
jne
sub
xchg
int3
mov
arpl
jns
xchg
outsl
pop
rolb
repnz
movsl
frstor
pop
mov
ret
adc
xlat
dec
sbb
mov
fwait
ljmp
ret
dec
or
pop
addb
fstpl
dec
insb
cli
lcall
dec
mov
mov
cli
out
dec
fdiv
xor
sub
sub
xor
int
hlt
lret
aam
adc
ret
xchg
push
and
mov
lcall
push
mov
faddl
or
movsb
rcr
xor
icebp
push
mov
cmp
popa
inc
cmp
mov
jae
data16
pop
mov
icebp
sarb
sbb
push
aas
test
lds
jge
mov
dec
repnz
sub
xchg
std
mov
repnz
ret
push
cwtl
push
mov
sbb
adc
pop
data16
cmp
repnz
inc
sarl
movsl
fstpt
stos
mov
sbb
inc
push
cmp
loope
inc
testl
loope
lret
and
add
aaa
icebp
in
or
rorb
cwtl
ds
aaa
dec
or
mov
sub
adc
xlat
xchg
bnd
dec
loope
xor
push
jbe
sub
lea
cmc
pop
mov
dec
inc
jb
xor
inc
stc
dec
fs
pop
gs
repz
add
mov
sub
mov
pop
jae
sahf
mov
fcompl
pop
adc
push
repz
cmp
call
push
dec
scas
imul
out
or
movsl
dec
arpl
sbb
mov
jl
inc
stos
pushf
movsb
pop
xor
cmpsb
out
mov
jne
xlat
xor
outsb
cmpl
mov
fcoms
pusha
dec
test
mov
xchg
mov
subb
add
call
mov
movsb
arpl
pop
stos
test
out
call
mov
fisttps
jb
rclb
ret
mov
mov
pushf
add
push
mov
cli
adcl
sar
push
ja
test
call
adc
push
jecxz
inc
clc
pop
mov
ds
or
jne
xor
mov
xor
dec
aas
mov
jno
and
arpl
ficompl
outsb
std
je
lahf
cltd
je
mov
aas
lods
lods
push
jae
mov
inc
out
mov
test
mov
adc
pop
mov
sub
mov
push
fistl
jp
jp
mov
inc
lcall
imul
jae
xchg
push
or
ljmp
mov
and
icebp
js
jnp
inc
popa
popf
ljmp
out
outsb
clc
shlb
mov
add
mov
addl
data16
leave
aam
push
or
and
push
and
xchg
data16
dec
aam
notl
or
or
and
xchg
xchg
xor
add
mov
mov
loopne
jne
pusha
rcrb
xchg
inc
mov
repnz
push
dec
test
xchg
inc
push
outsb
jmp
ret
fwait
mov
pop
mov
jo
push
mov
xor
sbb
inc
mov
mov
inc
mov
mov
fwait
mov
xor
mov
jno
jp
mov
ss
rol
inc
sub
xchg
sub
idiv
push
bnd
arpl
rorb
fcoms
pop
movsb
jae
jo,pn
mov
lods
imul
imul
inc
stos
jo
jle
xor
mov
sbb
dec
inc
mov
inc
xchg
popa
aam
xchg
push
mov
push
xchg
rolb
sub
adc
rcrb
sbb
mov
pop
je
adc
js
out
in
push
pop
cs
xchg
das
rcrl
cmpsb
test
lods
popa
sbb
into
and
leave
mov
xor
stos
cmp
add
dec
pushf
xchg
cmp
out
jns
push
in
data16
ja
in
aaa
lret
jno
pop
addb
sbb
test
sbb
sbb
stc
mov
jmp
dec
pusha
test
sbb
and
testl
pushf
push
mov
xchg
aaa
mov
rcll
in
sbb
and
out
push
ds
mov
hlt
sbb
ss
and
out
orb
xchg
xchg
jl
lods
adc
fistl
aam
sbb
aam
shrb
or
push
adc
filds
cmpsb
testl
mov
addr16
mov
mov
pop
rcll
mov
dec
ret
or
test
inc
stos
inc
push
jp
sub
flds
cltd
and
inc
imul
push
scas
mov
push
in
xor
decl
hlt
int3
mov
push
sahf
and
dec
in
lcall
inc
sahf
js
test
call
ror
hlt
in
flds
jmp
sub
mov
test
pop
pop
icebp
shrl
mov
cwtl
xchg
sub
lods
sahf
outsl
pop
test
mov
pop
push
xchg
mov
jae
lods
add
sub
mov
sahf
dec
adc
add
je
aam
shlb
outsb
ds
add
ds
nop
adc
cltd
dec
fdivrp
in
insl
rol
jne
jmp
mov
int
xor
inc
xchg
pushl
add
add
fcoms
loope
test
xchg
std
in
pushf
pop
and
and
iret
pop
lods
sti
lods
mov
insb
or
adc
dec
shrl
sub
sub
lahf
or
ljmp
cmp
ficoml
cmpsl
in
je
adc
mov
mov
sarb
sbb
negb
iret
lcall
popa
or
pushf
add
inc
jns
xchg
ljmp
movsl
scas
jp
and
inc
jecxz
mov
repnz
xor
push
jl
ds
pop
dec
xor
adc
jecxz
in
mov
cltd
fs
lds
add
std
icebp
dec
divb
mov
or
out
jae
and
out
sub
test
push
inc
and
xchg
xor
sub
pop
jmp
adc
leave
sarl
and
outsl
rcll
push
sar
aam
xor
mov
cmpsl
stc
xchg
adc
dec
call
arpl
jno
adc
inc
push
jno
pop
sbb
dec
xchg
jae
sahf
mov
xchg
aad
jb
test
clc
nop
test
xchg
fmulp
mov
icebp
imul
aad
enter
sbb
pusha
ficoms
fcmove
adc
dec
cmp
sub
test
scas
xchg
loop
inc
fiaddl
ds
push
add
lods
push
and
scas
movsl
xor
xchg
mov
jno
add
pop
and
xlat
in
out
xor
leave
mov
jl
sbb
lods
mov
in
or
sbb
popa
shl
push
cpuid
jl
sbb
shrl
je
pushf
inc
add
decb
std
push
mov
xchg
sub
icebp
mov
add
imul
and
loopne
fcmovnb
mov
in
xchg
dec
hlt
unpckhps
loope
clc
in
je
jg
pop
add
cmc
jp
ss
leave
shlb
and
add
or
sbb
adc
movsl
stos
add
xchg
xor
mov
ss
push
add
outsb
enter
or
dec
sahf
cld
aam
mov
cltd
push
insb
sahf
mov
jmp
or
inc
adc
shrb
out
fistl
adc
aaa
push
aaa
shll
adcb
jg
daa
xorl
scas
mov
sub
mov
mov
out
jno
pop
in
ret
mov
xchg
ss
mov
mov
cmp
cs
sbb
shr
fadds
xor
inc
int3
pop
fincstp
loope
sbb
sbb
mov
pop
test
movsb
and
mov
mov
push
scas
loopne
addps
jmp
sbb
add
jne
mov
dec
add
sahf
into
inc
sub
cld
dec
adc
sub
mov
push
cmp
and
jno
aad
sbb
add
sti
or
repz
pop
add
push
pushf
push
stos
inc
insb
push
mov
pop
icebp
dec
leave
add
xor
xchg
lea
mov
imull
in
test
push
dec
pop
push
lcall
popa
mov
ljmp
push
into
es
lahf
sub
jmp
mov
xor
pop
pop
inc
mulb
or
push
cmp
dec
mov
das
xor
inc
jo
ret
jg
adc
mov
push
gs
movsl
mov
imul
push
ret
add
data16
add
dec
xchg
rorb
mov
adc
aam
mov
dec
popa
push
mov
loop
jmp
mov
arpl
leave
xor
inc
mov
scas
mov
push
rcll
inc
pop
leave
or
aas
push
scas
imul
pop
jne
dec
sarl
std
cmp
lock
fwait
dec
mov
in
xor
xchg
push
es
mov
jmp
add
cmpsl
mov
cmp
daa
adc
mov
nop
xchg
jo
scas
jmp
lods
or
orl
push
cmpb
sti
xlat
pushf
addl
popa
dec
sbb
lods
dec
popa
jge
decl
add
xchg
out
jp
aaa
cmp
add
and
adc
jne
push
pop
fidivl
fisubrl
push
adc
mov
fidivrs
repz
stos
push
shrb
and
jmp
jp
cltd
loop
imul
push
xor
dec
xchg
sub
pop
sqrtps
push
inc
jp
mov
jg
xchg
incb
push
stos
push
sbb
loopne
fistl
out
sbb
sahf
cs
andl
xor
xchg
pop
inc
loope
jl
mov
lock
frstpm(287
and
pusha
adc
icebp
push
dec
mov
dec
fldcw
inc
iret
xchg
loopne
and
scas
sbb
lea
das
jns
inc
and
ss
and
dec
push
js
mov
hlt
fimull
dec
dec
je
out
lock
push
push
sub
fistpl
cmp
fisubrl
fstpt
test
out
jecxz
pop
rolb
out
mov
mov
cwtl
sub
subb
cmp
add
lods
cmp
xor
sub
scas
dec
pop
jp
inc
xchg
xchg
stc
adc
xor
ja
adc
mov
pop
out
sub
xor
jns
nop
cmp
nop
mov
cmpsl
jp
loop
cwtd
pop
out
hlt
xchg
inc
stos
das
or
xchg
and
mov
push
or
sub
adc
push
into
addb
dec
push
push
cltd
cmp
aaa
and
add
dec
mov
cmpsb
clc
inc
adc
sbb
shlb
test
xchg
sub
mov
jne
jg
test
repz
push
xchg
inc
mov
ror
int
xchg
popa
mov
mov
xchg
jg
mov
nop
and
mov
stos
mov
adc
mov
cltd
inc
cmpsl
mov
iret
negb
mov
leave
pop
or
lret
out
in
push
mov
test
push
xor
ljmp
test
rclb
sbb
in
sbb
int
pop
jnp
out
sbb
xchg
mov
les
sahf
mov
adcb
pop
fldt
imul
aam
pop
enter
jecxz
incl
gs
movsb
hlt
loopne
cmpsl
or
jp
lock
push
mov
jl
mov
int
push
mov
cltd
sub
mov
dec
mov
sub
and
push
adc
out
mov
sarb
into
push
cli
outsl
jo
xchg
lods
std
inc
xchg
shlb
xchg
enter
daa
xor
adc
cmp
jg
rorl
and
insl
enter
sub
push
aaa
lock
lahf
out
pop
scas
jecxz
icebp
cmc
imulb
mov
sub
adc
cld
loope
sub
mov
mov
adc
pop
sub
ja
fstl
jecxz
lcall
stos
adc
adc
push
mov
xor
jns
mov
xchg
xchg
mov
push
sub
inc
mov
fs
in
in
popf
push
xchg
jl
and
iret
aam
cmp
jbe
aas
fistl
sub
and
push
clc
dec
xor
cld
icebp
jle
xor
addr16
and
clc
scas
shlb
pusha
xorb
lock
pop
insl
jb,pt
dec
cmp
and
out
adc
test
fiadds
jno,pn
jmp
add
fldcw
ja
pop
fcmovnbe
fbstp
sbb
push
lds
push
cld
js
push
xor
mov
cli
jb
xor
stos
mov
imul
mov
inc
pop
out
cmc
push
gs
je
mov
mov
andl
mov
iret
pop
movb
aas
cmp
pop
sub
orb
or
test
in
jle
add
push
adc
cwtl
test
dec
movsl
test
aas
adc
gs
int
jge
jge
ljmp
rcr
add
pushf
cs
in
mov
mov
addr16
xlat
cmp
jmp
icebp
xchg
pop
push
sbbl
inc
adc
ret
lret
stc
btc
jb
pop
rcrl
pop
les
adc
xchg
lea
fnstsw
xchg
add
pop
or
gs
xchg
lods
push
and
mov
adc
test
xchg
popf
push
cmp
mov
mov
test
push
shl
ja
mov
mov
cltd
sub
fistps
xchg
sti
dec
ret
dec
dec
push
push
outsb
sti
fdivl
test
sub
lea
ljmp
push
icebp
out
or
mov
add
mov
in
cmpsb
das
aam
or
fsubrs
ja
test
out
cmp
mov
jg
in
xor
push
fbstp
xor
aas
insl
outsl
repz
add
xchg
xlat
adc
inc
adc
inc
push
ds
and
jo
outsb
sub
out
mov
movb
popf
push
mov
mov
fs
mov
mov
jo
sub
test
test
cmp
int3
imul
sar
shr
jb
hlt
test
mov
or
movb
sbb
je
or
stos
aaa
stos
outsl
xchg
call
inc
cmp
adc
imul
outsb
inc
mov
mov
xlat
cmp
mov
inc
sbb
cmp
jbe
push
add
and
pop
pop
mov
dec
dec
xchg
pop
lahf
enter
xor
js
pop
mov
sbb
lret
jecxz
test
dec
jbe
stos
pusha
mov
addr16
fsubrs
cld
sub
add
dec
ds
lds
bound
mov
jo
mov
pop
sbb
lcall
imul
into
lea
std
pop
out
nop
inc
pop
insl
ret
sub
orl
imul
clc
loope
xchg
imul
test
pop
cmpsb
inc
or
leave
sbb
jecxz
mov
add
mov
and
cmpsb
fs
popf
pop
adc
add
jmp
dec
popf
loopne
jecxz
test
add
pop
stos
adc
lods
sub
pop
add
sub
insb
call
jecxz
mov
add
jmp
mov
inc
mov
pop
mov
aam
sbbb
lods
adc
fdivr
xchg
cltd
push
lea
jno
push
mov
mov
push
push
dec
mov
and
movsl
mov
push
xor
push
addl
pop
mov
ds
mov
ret
cmc
popf
loop
inc
adc
pop
out
mov
pop
lea
lcall
xchg
cmpsl
and
cmpsb
push
jne
hlt
xchg
movsb
test
adc
and
mov
push
lret
inc
adc
mov
sarb
and
push
fs
aad
icebp
sar
faddl
stos
push
rclb
push
sbb
and
fbld
outsl
jge
rcll
ss
push
fs
cmc
jp
mov
xchg
fwait
push
jg
cmp
fdivrs
inc
enter
or
mov
popl
and
sbb
jns
cmp
cmp
ljmp
lahf
les
jp
rcrb
ucomiss
dec
leave
or
add
fwait
jl
popa
sbb
stos
loop
xor
enter
mov
scas
movsl
pop
cmp
fidivs
lret
dec
push
ss
jp
push
arpl
call
dec
pop
inc
dec
push
aas
js
push
cmp
cmp
mov
icebp
bnd
lcall
jge
push
sti
xor
sub
sbb
repnz
pop
rcll
mov
pushf
pop
mov
ljmp
pop
pop
push
xchg
mov
gs
lret
jle
jmp
pop
mov
fisubrl
xchg
pop
movsb
ljmp
or
jae
add
xor
xor
jae
aad
inc
xor
cmp
xchg
ret
mov
shrl
fcmovbe
add
cmpsb
cld
push
jno
mov
adc
daa
ficoms
mov
loop
xchg
ffree
loope
inc
jnp
adc
add
aas
call
mov
inc
dec
push
ds
jb
dec
add
call
jb
sbb
mov
sub
push
pop
mov
popa
je
push
cmp
stc
inc
add
js
sub
outsb
inc
adc
icebp
inc
insb
das
fcomi
pop
aad
int
jo
ret
scas
in
jo
xchg
jecxz
pop
idivb
push
pusha
clc
xchg
je
stos
outsl
push
out
jns
mov
nop
popf
sbb
cmp
xorb
push
add
mov
inc
jp
xchg
dec
sub
lret
pop
movsl
arpl
mov
sbb
fs
fcmovnu
int3
xor
xor
and
dec
mov
bound
loopne
lods
loop
aaa
test
sub
pushf
sbb
sub
jb
fidivl
fcomps
push
sbb
jmp
mov
dec
imul
gs
imul
mov
push
and
mov
jle
scas
andl
inc
loop
sub
mov
sub
dec
out
xor
or
in
popf
fcmovne
in
inc
cmpsl
xchg
es
cmp
test
push
mov
cmp
fisubs
mov
icebp
ss
pusha
mov
inc
sti
out
dec
sti
out
lret
mov
movsb
pop
sbb
sarl
xchg
sbb
mov
scas
rorb
dec
mov
enter
pop
push
dec
loope
imul
test
sbb
add
sbb
xchg
mov
push
xchg
xchg
inc
pop
mov
popa
enter
cmpsb
jp
mov
cmp
test
mov
enter
aad
cmc
lds
lods
lds
push
push
wrmsr
xchg
xchg
push
adc
lahf
es
lods
mov
insb
popf
mov
xchg
add
add
in
or
mov
and
hlt
adc
sbb
mov
or
xlat
mov
insl
mov
sbb
dec
xor
xor
inc
mov
test
mov
jo
push
in
or
cld
out
pop
adc
and
clc
and
cli
xor
push
xchg
pop
add
push
jl
bswap
push
fnstcw
jg
xchg
mov
iret
aaa
mov
shrb
fidivl
flds
insb
lds
fimuls
call
pusha
and
ja
sarl
sbb
bound
jbe
inc
call
fidivrs
fisttpll
mov
scas
pop
je
mov
enter
aas
iret
dec
cli
nop
and
test
stos
ds
adc
adc
push
cs
in
dec
daa
pop
jns
divl
inc
jecxz
pop
insl
push
dec
xor
dec
in
mov
lds
and
dec
int3
fbld
lods
aas
stos
mov
inc
sti
inc
call
insl
ljmp
cmp
std
aaa
repnz
xor
in
sub
enter
or
xlat
idivb
xchg
flds
test
push
movsb
push
or
popf
dec
pop
pop
pop
mov
dec
bound
dec
rcrb
xor
and
jbe
insb
adcb
push
mov
add
cltd
imul
rcrb
leave
and
dec
xorl
push
leave
xchg
inc
sbb
push
cmpsb
aaa
inc
mov
mov
loope
cmpsl
push
and
pop
fstpl
push
mov
lret
jbe
pop
pause
add
dec
adc
jmp
pushf
dec
hlt
mov
mov
pop
xor
mov
inc
mov
sbb
inc
xchg
aad
jle
pusha
sbb
mov
xchg
jae
fdivr
fimuls
cmpsl
mov
push
in
or
pop
iret
scas
in
clc
push
push
int
mov
inc
mov
inc
rcr
pop
cld
sbb
ja
les
mov
std
mov
mov
lods
sbb
sarb
aad
sub
addl
fwait
cmpsl
xor
fwait
pop
dec
mov
popf
sbb
inc
sub
xchg
int3
push
push
xor
dec
outsb
mov
xor
enter
test
xor
repnz
pushf
insl
aad
pop
push
cmp
push
ret
pop
adc
repz
and
jbe
xchg
sbb
ret
aas
out
clc
aad
mov
pop
fisttps
popa
add
push
xor
stc
ss
call
jo
fidivrl
mov
ss
movsl
cmp
stos
cmp
pop
add
mov
xor
and
or
in
xchg
xor
cmp
lea
pop
xchg
cmp
decb
xlat
into
mov
and
and
dec
pusha
mov
add
mov
dec
or
jl
mov
shlb
lock
scas
add
fnstenv
enter
xchg
loopne
je
jnp
fs
sarb
cld
sbb
rol
cmpsl
xchg
cmp
sbb
mov
testl
xchg
push
insl
and
fucom
imul
sarb
jno
xor
dec
mov
call
sub
insb
addl
add
jle
add
xchg
cmpsb
iret
xor
dec
imul
mov
pop
pop
xor
scas
int
xchg
push
mov
imul
test
repz
and
scas
pop
mov
aam
adc
xchg
dec
js
sub
mov
push
push
int3
iret
ds
mov
push
mov
push
mulb
pop
adc
stos
mov
fsubr
inc
xchg
adc
mov
pop
xor
and
mov
jge
andl
jno
out
aam
out
shlb
sti
dec
xchg
dec
dec
sub
hlt
push
push
sahf
sbb
pop
push
add
push
pop
movsb
test
mov
mov
lret
cmpsl
loop
xchg
xor
xor
icebp
push
jb
push
rolb
fcmovne
cwtl
scas
cli
into
xlat
xor
icebp
mov
out
mov
cs
daa
lahf
and
test
gs
mov
int3
xchg
add
adcl
inc
scas
jle
stos
push
das
xchg
or
adc
pop
sub
dec
xor
mov
xor
adc
sbb
aaa
or
les
push
and
aad
inc
xor
add
or
cmpb
sbb
mov
jno
clc
fwait
emms
mov
xor
and
dec
and
cmc
pop
push
and
jns
sbb
mov
cmp
push
mov
mov
mov
mov
rcrb
pop
minps
lock
add
outsl
pop
pop
jmp
gs
out
fwait
clc
mov
icebp
pop
stc
adc
mov
dec
push
jns
scas
jae
dec
rcr
lcall
js
movsb
sub
fucomp
mov
fwait
inc
mov
aas
test
ja
leave
add
aaa
std
cmpsb
jl
push
sub
xchg
dec
push
outsl
rorl
or
xchg
add
popa
xor
lods
outsb
mov
mov
fnstenv
jg
mov
dec
sbb
sub
sub
in
insl
out
inc
dec
fwait
mov
bound
sub
sbb
mov
adc
je
push
mov
aas
mov
xor
cmp
cmp
roll
dec
sbb
lahf
dec
cs
xchg
into
fcoml
jno
pop
or
ljmp
movsb
test
sub
or
sub
mov
xchg
push
lcall
mov
cld
adc
loop
lahf
std
and
mov
pop
xor
sub
pop
add
pushf
shlb
imul
mov
xor
ret
sub
add
jp
addr16
xchg
mov
cli
and
jecxz
lods
test
repz
in
mov
add
mov
sti
cmpsb
testl
jecxz
test
hlt
je
gs
mov
mov
rcrl
dec
in
pop
mov
sbbb
or
mov
mov
cmp
fs
insb
jb
loop
jle
cmpsb
sbb
minps
sti
imul
or
jge
sbb
jg
xchg
fidivl
sub
fstpl
add
jge
push
jge
cmp
in
inc
pop
fmul
dec
dec
js
jmp
test
popf
jbe
into
or
inc
jge
and
mov
popa
push
jb
hlt
cmp
xor
push
mul
pop
dec
inc
in
std
push
fxam
inc
sub
inc
or
xor
inc
dec
repz
adc
push
in
mov
mov
mov
loopne
aam
push
xchg
dec
ss
es
flds
jecxz
fcomps
cs
lock
bound
adc
shlb
fmuls
aam
arpl
out
push
repz
fadds
cmp
lods
mov
inc
mov
mov
js
insl
and
jae
faddl
xor
clc
xchg
sub
pop
lret
xor
fbld
jg
loopne
xchg
adc
gs
mov
cltd
cmp
xchg
dec
xor
jmp
shll
mov
mov
mov
dec
and
test
stos
cltd
fiaddl
inc
test
sbb
pop
mov
int
nop
pop
mov
lods
push
mov
sub
aas
ljmp
mov
fdivl
cmp
jecxz
call
shl
jle
xor
ja
fdivrs
xchg
jecxz
inc
push
inc
xlat
rol
shl
sbb
dec
xchg
sbb
pop
nop
call
mov
pusha
pusha
subb
loope
sti
cmp
imul
aas
inc
push
lcall
or
mov
jns
inc
sbb
mov
push
js
and
jmp
shl
shll
mov
iret
ljmp
cmp
int
addr16
movsl
inc
mov
js
or
outsb
inc
push
xor
mov
out
or
mov
idivl
jns
ds
jp
mov
std
icebp
insb
aam
mov
ret
jo
inc
xorb
test
pop
xor
mov
inc
call
add
arpl
loope
das
inc
out
jne
fiadds
popf
ja
pop
sbb
sub
in
dec
xor
and
sbb
test
out
dec
lods
dec
pop
aad
lods
dec
xchg
push
jg
test
mov
cmpsb
or
xor
shll
sbb
dec
xor
out
adc
out
sti
jbe
jae
negl
add
push
iret
stos
push
sbb
popf
xchg
cmp
mov
das
push
add
popa
inc
in
pop
lret
xchg
out
dec
cmpsl
sub
jecxz
cmp
or
pop
dec
aam
mov
nop
daa
push
mov
adc
mov
mov
pop
mov
ja
sar
test
or
dec
dec
inc
jmp
popf
sarl
int
cmp
cld
sub
or
or
sbb
add
and
test
les
and
jl
aaa
jno
pop
push
sub
and
inc
mov
sub
bswap
inc
push
insb
pop
cmp
hlt
mov
cmp
jmp
mov
push
ss
push
or
loopne
xor
lret
imul
mov
mov
xchg
cmp
pop
sub
pop
mov
mov
aaa
xor
outsl
xor
mov
aad
push
lock
aas
xchg
aad
addl
stos
stos
sub
test
xor
cmp
mov
cmp
sub
enter
movsb
test
es
jo
outsl
stos
sub
fsubs
loopne
inc
or
lret
cmpsb
into
movsb
out
in
loop
and
frstor
lods
sub
aas
in
rcrl
inc
fcoms
lea
stos
aaa
push
xchg
outsl
jo
mov
cmpsl
sub
mov
inc
nop
add
repnz
jo
inc
dec
movsl
or
push
add
cmp
sub
aad
sub
loope
iret
clc
xchg
and
adc
mov
sarl
sub
test
sahf
adc
leave
pop
or
inc
jle
stos
icebp
into
jecxz
aad
cmp
clc
sub
popf
out
inc
sbb
das
cmpsl
dec
psllq
call
push
ja
lahf
inc
int
inc
push
mov
or
xchg
pop
push
fcomip
dec
fidivl
test
add
jmp
sub
outsl
pushf
lods
mov
inc
xchg
sub
pop
sahf
inc
movsb
in
into
fisttpl
pop
ss
jns
sub
cmp
outsl
mov
cld
test
and
adc
test
aam
xor
sub
in
movsl
pop
xor
cmp
mov
xchg
aam
mov
xor
sub
mov
push
pop
mov
daa
or
addr16
pop
xchg
stos
sbb
loope
jp
add
sub
cli
fidivs
push
ficoms
jle
or
xchg
nop
xchg
leave
out
add
rorb
adc
dec
jge
pushf
mov
dec
aad
jnp
in
sbb
cmp
jb
scas
outsl
pop
jbe
mov
mul
lcall
popl
cli
push
js
push
jnp
das
pop
pushl
cli
imul
aas
int
sarb
andl
repnz
xchg
fwait
inc
ret
xchg
stc
jns
pop
cmp
ret
push
push
das
lods
orb
jp
pop
ret
test
jns
rorb
adc
jno
pop
aas
arpl
dec
push
lcall
aad
std
cwtl
cmp
mov
push
jecxz
cltd
xchg
and
mov
cmp
cli
sbb
les
jecxz
insl
test
lcall
mov
sbb
cld
inc
imul
xchg
push
pop
les
stos
fcmovnu
in
mov
jns
xlat
push
dec
ljmp
or
addr16
call
fmuls
inc
inc
cmp
fdivrs
push
inc
pop
or
sub
mov
je
and
adc
outsl
ljmp
push
lods
pusha
pop
test
mov
mov
inc
jnp
xorl
loope
xor
cmpsb
lcall
mov
fimull
pop
mov
mov
xor
bnd
mov
popf
aas
cmp
jl
jnp
mov
adc
lods
arpl
negl
mov
dec
stos
add
xor
pop
scas
xchg
jo
push
daa
lods
dec
cmp
imul
or
sbb
inc
lcall
lret
enter
add
pop
ret
xchg
sbb
pop
push
cmpsl
fdivs
adc
test
loop
cli
cmp
push
cmp
xor
xchg
mov
lea
pop
adc
mov
insb
fdivrp
out
imul
mov
mov
rep
dec
pop
pushl
sbb
pop
dec
sub
pop
pop
jge
jg
ret
push
mov
adc
cmp
imul
dec
mov
decl
js
pushf
scas
bound
pop
stos
rorb
leave
enter
fwait
jl
mov
je
ret
jle
inc
inc
or
das
push
mov
mov
arpl
popa
rcrl
push
push
inc
dec
pop
and
cld
mov
in
xchg
push
cwtl
jge
and
shlb
cmp
cvtpi2ps
xor
mov
mov
mulb
add
inc
adc
sahf
and
jns
push
inc
test
push
push
test
pop
inc
dec
in
cmpsb
fisubl
scas
or
ss
pop
fiaddl
pop
or
push
xor
fimuls
push
sub
push
gs
fisubl
jge
mov
xor
rol
cmp
and
push
jle
out
roll
push
adc
adc
inc
adc
pushf
xor
or
xchg
shl
adc
lods
sbb
cmp
shll
adc
jle
and
mov
push
imul
mov
ss
cs
rclb
lods
fisttpll
sbb
fldt
push
sbb
cmpsl
mov
jg
mov
negb
jmp
ficompl
lds
cmpsb
mov
rorb
adcb
xchg
push
pop
cwtl
test
out
push
xor
andl
xchg
jl
add
mov
push
bound
inc
inc
lock
add
adc
call
lea
sahf
addr16
shll
lret
mov
xor
or
sub
js
jmp
jge
pop
sbb
mov
sbb
hlt
jnp
lcall
add
insl
sbb
jae
pop
pop
pop
je
jno
jmp
fwait
iret
cmp
fadds
imul
mov
aad
add
ror
push
and
cmc
inc
push
push
imul
pop
cmp
popa
sub
mov
xchg
mov
jp
adc
add
sbb
pop
xchg
fdivl
shlb
sbb
fnclex
aam
cmp
jl
dec
ljmp
cmpsl
dec
mov
popf
jl
xor
jns
bound
inc
lret
shlb
arpl
jbe
stos
push
shl
or
mov
scas
das
lods
adc
arpl
pop
cmpsb
divb
cmp
xlat
sahf
or
rcr
mov
mov
push
lcall
push
cmp
mov
clc
lcall
dec
shrb
ret
dec
clc
adc
mov
mov
push
lahf
jmp
pop
iret
inc
maxps
pop
mov
ljmp
nop
jae
test
mov
mov
in
cmpl
sbb
mov
or
ficoml
add
icebp
insb
add
inc
add
or
or
pushf
jl
xchg
inc
test
dec
addb
jmp
and
push
add
in
push
xchg
cltd
pop
or
daa
and
inc
xor
sub
cmp
jmp
jge
insl
fs
movl
mov
pusha
add
xchg
or
lods
out
push
loopne
sub
sbb
push
and
popl
mov
loopne
fidivl
cmp
sub
aaa
add
test
jp
inc
mov
imul
cmpsb
xor
cmp
mov
mov
or
repnz
std
aam
and
cmc
fidivs
lds
fdivs
or
pop
fmuls
inc
inc
sub
mov
pop
and
and
cmpsl
stc
add
pusha
mov
push
and
jb
jo
ja
inc
cld
pop
test
push
push
subl
pop
push
inc
icebp
mov
xorb
xor
cmp
std
addl
sbb
cwtl
mov
lods
dec
cmp
mov
sub
stos
xchg
sbb
lock
cmpsb
aad
arpl
out
decb
sub
add
out
xchg
cmp
add
rcrb
sbb
lea
out
mov
inc
add
and
mov
or
leave
pop
add
es
das
andl
and
je
fmul
jnp
adc
movsl
dec
aas
mov
mov
mov
cmc
aas
in
mov
rolb
adc
insb
pop
pop
cwtl
fldcw
mov
pop
push
ret
mov
mov
xchg
int
loope
inc
xchg
sub
add
insb
inc
sarl
mov
push
popa
test
jne
ret
lret
lea
je
mov
push
pop
mov
sub
lret
icebp
push
dec
js
jb
jmp
or
shll
push
or
mov
scas
bound
mov
xchg
mov
push
cltd
fdivrp
nop
out
test
mul
aam
aad
mov
add
mov
scas
pop
test
addr16
or
aad
flds
aad
xchg
test
lret
sub
inc
imul
js
rorl
hlt
sbb
inc
aaa
fiadds
xchg
sbb
jb
pop
cli
jne
jno
push
jg
adc
cld
cmpl
call
ror
icebp
je
push
iret
gs
in
mov
inc
push
imul
fnsave
stos
mov
subb
adc
dec
sbb
fmuls
sldt
imul
arpl
inc
and
iret
roll
repz
dec
sub
inc
hlt
sub
xor
stos
daa
je
arpl
adc
inc
mov
dec
popa
in
lcall
out
lret
hlt
adcb
add
xor
mov
fld
cmp
loop
gs
mov
lods
stos
pop
add
and
shrb
xor
arpl
pop
in
dec
and
je
scas
jae
lock
loop
jecxz
or
repnz
pop
sub
pop
xlat
sub
xchg
mov
sub
mov
cmc
aaa
mov
xchg
insl
sbb
xchg
les
and
jno
stc
cmpsb
push
clc
add
pop
mulb
cs
pop
sbb
adc
loopne
mov
cmp
imul
je
xor
add
xlat
dec
enter
push
add
loop
adc
nop
pop
andl
sbb
add
pop
cmp
xlat
aaa
cmp
subl
cmp
lcall
dec
adc
inc
sub
hlt
or
mov
cli
mov
mov
psrld
mov
inc
int3
ljmp
rclb
lahf
mov
inc
bound
and
mov
pop
lahf
add
cwtl
cmp
pop
or
test
adc
push
lcall
jl
push
cmp
pop
stc
dec
test
fildll
dec
sub
push
notl
xchg
fcompl
xchg
fisttpll
adc
loop
call
xor
or
add
mov
add
loop
push
adc
xchg
cmp
loope
dec
mov
xchg
pop
into
sbb
imul
push
xor
out
pusha
popf
push
xchg
test
fsub
popa
pop
push
cmpsl
dec
sbb
jb
fists
ret
pshufw
sbbb
negb
rcrl
inc
or
sub
mov
adc
lret
imul
shll
sbb
sarb
xchg
mov
mov
xchg
lret
outsb
loop
mov
out
jg
dec
mov
sbb
mov
xchg
hlt
repz
into
jmp
mov
andb
pop
inc
scas
or
inc
cmp
add
movsb
mov
data16
in
push
mov
add
scas
leave
push
stc
aam
and
dec
push
stc
fwait
or
dec
sub
call
out
stos
cld
or
sub
inc
cmpl
cmp
cmc
push
or
test
adc
mov
fstpl
lcall
mov
out
lods
mov
push
cmp
add
sub
jne
mov
jne
test
xchg
push
loop
lcall
shll
jg
xlat
movlps
in
push
jne
xchg
addr16
mov
iret
lods
sbb
ret
xchg
aaa
hlt
data16
frstor
aad
push
push
cmpsb
test
in
int
mov
mov
and
int
in
in
test
push
inc
ljmp
pop
aam
in
lret
mov
mov
shlb
enter
shr
rolb
ret
inc
push
push
cmp
pop
and
popf
mov
lret
pop
out
sbb
inc
daa
pop
je
xor
push
pop
stos
and
stos
test
idiv
jnp
xor
sbb
and
push
push
loopne
loope
xor
mov
jae
or
jne
insl
cld
sbb
andl
clc
sbb
out
test
arpl
lret
push
insb
push
sbb
cmp
loope
mov
jle
cmp
mov
aam
or
call
popa
ret
imulb
inc
or
and
in
fmuls
movsb
out
mov
or
mov
xchg
pusha
mov
repz
movsl
aaa
jnp
pop
jnp
xor
cmpsb
in
adc
dec
pop
mov
int
incl
out
or
pop
std
mov
dec
push
xchg
xchg
repz
cld
lods
shl
clc
or
ljmp
daa
xchg
idivb
les
jp
jmp
xchg
dec
lahf
and
leave
mov
xlat
xchg
jnp
pop
popa
and
jns
mov
jae
into
push
shll
pop
repnz
or
fld
inc
pusha
int3
cmc
cmp
loope
and
js
cmp
loopne
mov
fnstenv
arpl
add
inc
test
lcall
add
clc
xor
js
pop
daa
jnp
cmpsl
pop
push
add
mov
rclb
in
and
mov
test
mov
dec
mov
xchg
jmp
mov
fcmovb
adc
test
cltd
adc
jg
push
xlat
ja
jb
roll
or
xchg
jp
enter
int3
icebp
icebp
shl
ret
dec
cmpl
jp
dec
cmp
in
and
inc
xlat
dec
scas
movsl
xchg
aas
aad
lahf
pop
or
xor
cli
pop
jns
icebp
sbb
arpl
enter
aaa
mov
aad
xor
xchg
cmp
ss
jmp
push
je
lcall
pop
dec
aas
pop
mov
sub
dec
pushf
out
in
lret
pop
dec
mov
lea
dec
xorl
adc
dec
dec
dec
cli
popa
cmp
fimuls
add
es
insb
aam
addr16
pop
in
and
js
sbb
movsl
add
and
push
lds
sbb
sub
push
sbb
call
lret
insl
inc
popa
inc
cs
mov
mov
cmp
xchg
mov
dec
in
lcall
js
adc
rclb
xchg
test
mov
scas
test
cmpsl
iret
in
stos
or
gs
mov
add
lahf
mov
or
cs
mov
lcall
add
data16
cmc
jo
or
in
js
and
jmp
push
shrl
jno
xchg
mov
into
incb
dec
insl
adc
jns
xor
movsb
fs
in
mov
push
cmp
mov
xchg
mov
fnstsw
mov
pop
movsl
shll
sub
jp
mov
fs
gs
std
inc
adc
sbb
out
or
jne
cmp
aas
jge
insl
or
cwtl
daa
jecxz
pop
lock
mov
fldcw
jns
movb
scas
pushf
cmc
test
pop
lock
push
loop
dec
pop
sbb
test
sbb
or
cmp
loopne
nop
lods
insl
sub
enter
nop
pop
and
fwait
movsl
push
push
xchg
mov
push
sbb
mov
cmp
psubsw
jle
inc
repnz
call
mov
jle
cs
mov
pop
mov
test
in
imul
or
dec
call
dec
xchg
lahf
out
pop
pusha
imul
call
sbb
cmp
nop
pop
xor
test
push
mov
xchg
clc
push
scas
js
adcl
adc
popf
pop
add
inc
shlb
aas
mov
add
xor
outsl
or
pop
mull
clc
aam
fcompl
mov
nop
mov
mov
and
jp
pop
sarb
es
push
cwtl
inc
lahf
movb
sub
jbe
xor
ret
jge
out
sub
xlat
sbb
mov
or
xor
shl
sbb
fdiv
rcrb
push
test
mov
adc
adc
cmc
lret
rcrb
int3
je
dec
out
into
in
push
notb
cmp
movsb
and
clc
nop
or
stos
push
sub
data16
cli
push
dec
lock
pop
pop
or
rclb
call
sbb
sbb
mov
jg
xor
fcomi
adc
xor
adc
call
loop
sbb
cs
add
sbb
mov
mov
pop
jmp
pop
dec
xchg
repnz
push
loope
dec
lock
pop
pop
adc
mov
outsb
lcall
jnp
test
movsl
xor
nop
mov
enter
dec
xchg
js
movsl
adc
jns
cltd
sbb
cwtl
lea
mov
clc
and
or
jae
push
movl
lcall
push
sahf
mov
loope
xchg
add
jp
mov
adc
out
xchg
pop
stos
popa
in
fwait
mov
inc
xchg
push
mov
xchg
and
sub
sbb
sahf
cli
push
test
mov
imul
outsb
add
sbb
lcall
leave
lret
add
pop
je
jb
mov
pop
lods
or
dec
push
push
cmp
mov
sbb
adc
iret
mov
cli
lods
andl
jne
mov
lock
and
sbb
pushf
push
aas
sub
xlat
mov
data16
lret
push
es
push
and
mov
push
cmpsb
mov
imul
inc
outsb
shll
gs
inc
adc
fisubl
mov
mov
mov
xor
sbb
or
gs
fisubl
scas
mov
or
sub
pop
mov
xchg
lock
push
fwait
inc
inc
push
adc
cmpsb
gs
out
mov
push
mov
jmp
jg
cs
fcoml
lods
sub
jge
push
mov
in
fsubrs
test
adc
in
int
loope
cmp
mov
test
das
or
clc
mov
push
cmpb
lock
add
sbb
jns
out
jne
outsb
xchg
add
cli
xchg
and
rcrl
cltd
cwtl
cli
add
imul
add
mov
and
push
xchg
insb
cwtl
addl
mov
sbb
lret
pop
test
rol
pop
data16
xlat
loope
arpl
stos
xor
in
sub
stc
sbb
push
js
push
mov
lret
dec
cmpb
cld
xchg
jns
andl
jae
cmp
xchg
cmp
cli
pop
mov
and
xor
sti
mov
mov
test
lods
dec
das
mov
and
leave
faddp
mov
xchg
int
inc
pop
repz
pop
rolb
call
pusha
fisubrs
and
or
jg
ret
inc
scas
fiadds
addb
jp
xchg
loop
cmp
inc
scas
iret
dec
and
cmp
repnz
or
sub
fbstp
arpl
pop
or
sbb
or
rcll
incb
sub
xorb
cmc
addl
lret
xor
inc
test
xchg
dec
mov
loopne
push
push
es
ret
and
test
fstps
jg
or
add
sub
jno
push
jo
iret
adc
out
mov
mov
or
and
aam
pop
mov
rorb
aaa
loope
sbb
push
sbb
aad
lods
xorl
out
icebp
inc
lea
add
push
mov
popa
mov
mov
movsl
cmpsb
inc
xor
repnz
xor
add
push
push
push
scas
shrl
mov
lods
sbb
add
and
into
pop
mov
cmp
mov
inc
fists
sub
lcall
fisubs
add
jb
int3
dec
aaa
lahf
jo
movsl
xchg
out
pop
mov
xlat
sahf
hlt
dec
sbb
inc
imul
sti
add
lcall
icebp
mov
test
jo
xor
push
add
xchg
jne
aad
sbb
into
or
jnp
roll
push
testl
cmp
jmp
cli
pop
adc
inc
push
cmpsb
push
fnsave
jl
lods
dec
pop
pop
mov
mov
xchg
mov
cwtl
outsl
fs
call
cmpsl
or
jecxz
lods
mov
in
imull
lods
imul
es
notb
pop
popa
lret
cmp
cmp
test
mov
out
lea
sahf
xor
aaa
push
xlat
and
outsl
pop
js
push
scas
loope
pusha
repnz
cli
int3
sbb
xorb
movsl
ret
pop
dec
adc
pushf
stc
aaa
mov
pop
insl
rcrl
cli
lret
cmp
add
jmp
mov
lret
adc
hlt
ds
nop
cmp
mov
std
add
xor
push
fwait
in
in
inc
lods
add
cmc
ror
hlt
sbb
inc
in
push
sahf
sti
scas
cltd
xor
dec
dec
insl
or
mov
out
out
push
adc
aas
icebp
mov
mov
fcompl
sub
pop
cmp
mov
push
rcrb
cmc
and
adc
lock
shll
dec
movl
sub
sbb
jecxz
cmp
js
cmp
mov
push
roll
insl
adc
fwait
in
push
pop
push
in
imul
adc
push
lahf
jecxz
push
arpl
jl
mov
test
mov
adc
pop
pop
or
aad
outsl
sub
lret
lods
je
push
pop
cmpsl
sub
and
adc
sti
dec
inc
inc
and
push
outsl
cmp
stos
adc
fildl
fbld
cmovno
push
push
pop
dec
sbb
gs
in
dec
idivl
ret
in
sub
std
ret
lcall
sti
and
cld
daa
dec
add
mov
mov
jb
lcall
cmp
jb
sub
mov
push
gs
das
stos
mov
test
mov
mov
mov
pusha
clc
subb
movsb
test
scas
outsb
pushw
cltd
aad
cwtl
jne
mov
dec
mov
addl
jecxz
stos
pop
pop
jge
inc
mov
ljmp
add
cmc
xchg
sbb
fnstcw
pop
cmp
adc
mov
enter
enter
add
xchg
xor
mov
pop
jge
sbb
test
vpsubd
mov
shr
push
jbe
xor
push
iret
or
ds
fcmovnu
std
add
pusha
loopne
in
pop
mov
add
enter
mov
xor
jle
dec
lds
mov
mov
stc
int
add
xchg
jl
xchg
push
mov
mov
fwait
int
orl
outsb
cli
dec
sti
sub
not
test
fcmove
pop
xchg
outsl
dec
ss
outsb
cmc
dec
lods
xor
fiadds
mov
or
jmp
ja
in
aam
jp
lds
xor
subl
xor
out
push
adc
jg
jb
or
cwtl
xchg
cmp
hlt
mov
xchg
sub
call
push
filds
int3
pop
xchg
pop
fsub
in
decb
dec
rcll
xor
pop
iret
sti
std
dec
push
sub
xchg
xchg
dec
adc
xlat
iret
dec
sbb
jl
addr16
mov
pushf
subb
adc
cmp
mov
xlat
mov
repz
mov
gs
aas
push
adc
dec
outsl
lcall
enter
push
jne
xchg
and
xchg
xor
adc
mov
adc
sbb
xor
sbb
iret
aaa
jne
fistpl
popa
test
insl
std
mov
jbe
test
jp
movsl
add
stos
insl
insl
dec
jae
jge
mov
dec
insb
int3
push
xchg
xchg
gs
test
cmp
sbb
call
pop
fdivrp
sbb
mov
dec
sub
cmpsl
out
mov
jo
adc
push
add
leave
lea
xchg
mov
push
sti
shl
out
pop
jno
jg
or
xchg
adc
and
int3
sbb
call
sbb
lcall
mov
pop
mov
or
sub
push
dec
icebp
scas
and
repnz
add
add
add
cwtl
xchg
mov
fstps
mov
fisubs
imul
call
les
add
push
pushf
popa
cs
ljmp
es
std
and
clc
orb
int
mov
mov
xor
repnz
adc
roll
push
int
dec
loopne
push
stos
push
adc
mov
js
add
sbb
insl
ret
cmp
outsb
pop
rolb
leave
sub
ret
mov
lods
out
add
adc
pop
pop
and
push
fwait
aas
adc
or
sbb
mov
or
in
sti
test
mov
pop
or
mov
lret
sub
clc
repz
jp
test
or
xor
adcb
mov
pop
aam
fwait
sub
pop
pop
aaa
cmpsb
gs
and
mov
xchg
in
jmp
mov
addr16
inc
add
jb
jno
or
movsb
ret
aas
push
ljmp
cmc
lds
cmpsl
mov
xchg
cmp
ret
sub
adc
fldcw
and
mov
sub
or
xor
std
addb
ror
inc
and
sar
add
movl
rcrl
cli
stc
or
xlat
and
mov
or
lcall
or
adc
mov
mov
jbe
fwait
loopne
mov
pop
pop
inc
xor
mov
push
pusha
scas
mov
add
shll
loope
inc
xchg
sbb
sbb
add
adc
rdmsr
mov
mov
ja
fcomip
xchg
pop
shl
jnp
les
cmp
lock
jae
cmp
or
icebp
sub
scas
push
test
shrb
sub
icebp
jg
ret
pop
jne
and
iret
jbe
in
push
add
xchg
das
mov
clc
sbb
jmp
push
sub
or
or
addr16
add
mov
xchg
or
push
mov
mov
and
jg
inc
insl
pop
pop
mov
mov
mov
jno
lahf
out
andl
push
push
roll
sbb
test
fs
cmpsl
loopne
cltd
inc
ret
add
mov
or
aam
lea
out
mov
mov
mov
testb
loopne
sti
int
daa
add
dec
dec
clc
xor
addr16
or
and
subl
insl
sbb
cltd
and
fldt
cmc
pop
pop
mov
xor
pop
das
and
dec
xor
push
popa
cmp
or
inc
inc
xlat
push
jne
mov
cmc
scas
enter
or
aam
dec
repnz
inc
or
sbb
and
sarb
out
mov
nop
lods
loop
push
das
push
cld
jae
sbb
and
outsb
xchg
loop
xchg
fs
test
mov
xor
jno
cmc
decl
and
dec
lret
pop
inc
add
inc
sahf
lods
and
and
cli
dec
scas
nop
je
imul
arpl
sbb
popf
mov
adc
call
addr16
pop
mov
jns
sbb
lret
lods
mov
gs
js
stos
outsb
pop
push
ret
cmovne
negb
add
push
mov
jae
cmp
movsl
jns
xor
fsubr
xchg
outsb
dec
mov
xchg
out
push
xchg
mov
push
sub
and
jb
testb
pop
xchg
aaa
into
sbb
cli
or
adc
inc
ret
jmp
testl
subb
dec
push
add
out
aas
mov
mov
cmp
pop
cmpsb
popf
jns
incl
test
in
mov
test
pushf
rclb
mov
cs
mov
cmp
aam
cmc
jmp
xchg
mov
subl
mov
fdivl
pop
hlt
mov
popa
jb
je
frstor
push
sbb
fimull
sarl
pushf
sbb
jbe
gs
xchg
addb
call
notb
sbb
push
sub
repnz
cmp
cs
mov
addl
shlb
mov
divl
inc
lds
mov
outsl
and
ja
mov
mov
push
out
rorb
in
and
pushf
data16
loopne
xor
clc
jae
push
xor
stos
mov
fiadds
movsl
scas
or
out
jae
out
push
frstor
fldenv
lods
lret
xchg
pop
pop
cmp
xchg
sub
and
scas
push
cmc
jmp
repnz
mov
mov
push
ljmp
leave
ljmp
aas
bound
addr16
cmp
test
testl
or
inc
shrb
add
sbb
in
aad
or
adc
test
nop
ret
cmp
repz
in
repnz
mov
mov
cmp
rcrl
addr16
cmpsb
or
push
push
ficoml
sub
push
or
js
out
inc
xor
sbbl
out
push
adc
scas
jl
jge
into
test
add
insl
mov
sbb
mov
push
not
mov
inc
cmc
jnp
imul
ja
lahf
xlat
cli
sbbl
lret
aaa
dec
std
adc
divb
xchg
js
xor
mov
cmp
clc
cmp
mov
mov
scas
sub
je
js
push
js
adc
inc
dec
jle
xor
daa
push
ljmp
cmp
in
push
test
jno
add
rcr
lahf
xlat
call
lock
xchg
pop
push
ljmp
push
mov
inc
cmpsb
movsb
jl
mov
popf
shll
jb
xor
std
negl
in
xor
mov
sar
cmc
or
push
mov
or
inc
mov
cmp
outsb
dec
adc
mov
test
or
movsl
repz
aaa
dec
cwtl
jns
enter
daa
mov
cmpsl
fistl
in
push
subl
jno
shl
in
out
inc
jno
cs
stc
add
icebp
lods
mov
cwtl
xchg
jns
pop
enter
fnstcw
sysret
inc
add
rorb
leave
pop
push
inc
mov
popf
dec
into
sbb
jmp
xor
push
fiadds
decb
aaa
stos
xor
inc
mov
call
subl
fiaddl
xor
xor
sarl
cwtl
fisubl
insl
push
std
pop
push
adc
adc
test
or
test
xchg
mov
js
and
mov
sti
loope
aaa
es
out
cmp
test
arpl
pop
icebp
adc
xchg
outsl
in
push
cmp
out
loop
aam
scas
dec
outsb
pop
mov
into
pop
int3
arpl
jp
adc
dec
jb
and
leave
stc
mov
cmpsl
cmp
inc
ret
into
xor
cli
and
push
mov
or
add
movb
iret
enter
cmp
dec
out
xchg
adc
and
inc
pop
lret
and
lock
inc
adc
dec
sub
hlt
lcall
mov
push
icebp
dec
pop
mov
lret
lds
mov
mov
xchg
mov
xor
dec
sub
lods
lds
mov
stc
out
or
lcall
gs
jae
dec
xchg
mov
mov
loop
add
sub
jns
sbb
jg
aaa
pushf
dec
fwait
scas
xor
test
cmc
sub
icebp
call
fstps
or
dec
nop
or
add
pop
sbb
inc
mov
movsb
pop
lret
push
sbb
fimuls
add
shlb
or
inc
clc
jge
push
adc
cmpsb
daa
jg
in
aaa
mov
jnp
xor
inc
mov
inc
cmc
xor
xchg
testl
cmc
out
or
and
sbb
and
mov
fdivl
jnp
jns
arpl
cmp
or
pop
lret
aam
mov
jo
add
pop
movsl
sub
jmp
or
add
arpl
sbb
pop
stc
mov
lcall
sarl
pushf
mov
adc
in
or
inc
in
popf
cmp
insl
call
jae
lods
mov
xchg
pop
lods
enter
mov
xchg
scas
cmp
adc
out
repz
fwait
jae
inc
lds
xchg
jp
addr16
adc
out
mov
ret
or
push
or
shrl
ficompl
sahf
pushf
movsl
mov
mov
jnp
push
pop
add
inc
test
jb
mov
push
jmp
loope
cmp
aam
jp
out
jge,pn
scas
loopne
cmpsb
sarl
xchg
inc
inc
stos
cmc
sbb
mov
iret
cmp
xchg
or
stos
xchg
inc
lods
sbbb
xchg
adc
pop
cmp
lods
es
or
cmpsb
mov
and
mov
mov
sbb
stc
jp
je
push
icebp
push
lcall
mov
sbb
sbb
adc
xlat
jne
jmp
sub
mov
mov
xchg
xchg
adcl
movsl
movsl
addr16
mov
jns
aad
xor
test
mov
mov
push
out
in
sbb
xchg
bound
pop
scas
rolb
call
sbb
mov
fstpt
popf
mov
add
and
xchg
sub
and
mov
aam
rolb
ret
es
cmp
enter
inc
sbb
ret
daa
fcomi
push
pop
dec
xor
outsb
xchg
fnstenv
shl
stc
mov
and
add
dec
pop
and
inc
mov
nop
loop
mov
inc
dec
fistl
mov
jae
aad
cmp
jae
int3
adcb
add
cmp
mov
push
cld
addb
mov
loopne
mov
and
rcrb
add
sbb
test
movsb
cmp
xchg
mov
sbb
and
and
sbb
cmc
mov
inc
imul
pop
insb
insb
aam
sbb
popa
cmp
repz
or
stos
fld
mov
mov
add
or
divb
repz
mov
cld
xchg
inc
lds
aad
mov
scas
ficomps
jle
xor
lahf
add
add
pop
lods
out
adc
fimuls
test
insb
mov
out
mov
jb
mov
dec
cmpsb
or
aaa
std
dec
aam
leave
push
jecxz
xor
inc
inc
xchg
aam
stos
mov
and
lcall
in
push
arpl
pop
imul
push
push
jle
pop
push
push
and
mov
dec
xchg
das
cmp
andl
ds
shll
fwait
cmp
cmp
hlt
add
fwait
aad
aam
fwait
add
add
ljmp
push
jmp
pop
sub
movsb
adc
test
cs
push
dec
aam
fcom
mov
cwtl
push
mov
sub
push
xchg
sbb
insl
pop
arpl
add
out
inc
push
fisubl
stos
ffree
xchg
outsb
adc
ss
insb
xor
sub
ds
mov
jp
sbb
mov
dec
enter
scas
je
mov
jl
jb
aaa
pop
rcrl
add
sbb
and
outsl
add
bound
pop
subl
cmp
hlt
test
cmp
add
aaa
fldenv
mov
test
adc
push
dec
fsubs
mov
into
cltd
negb
mov
xchg
fcomps
repnz
les
mov
adc
push
jns
cmp
in
lods
fadds
iret
sub
xchg
popa
mov
or
jle
adc
sub
ds
test
inc
sub
fs
stos
sub
lret
rcr
add
sahf
aad
shll
adc
cmpl
ljmp
add
push
mov
faddl
cmpsb
mov
loopne
imul
pop
add
sbb
into
push
mov
push
jae
mov
cltd
pop
stc
cmpl
mov
mov
ljmp
in
sbb
cwtl
mov
sub
leave
sub
aaa
mov
push
into
adc
mov
les
jne
push
ret
pop
add
into
ljmp
fidivrl
xchg
rcr
fwait
dec
ret
ret
fs
rclb
or
shlb
int3
fstps
mov
enter
pushl
jge
or
push
rclb
popf
jo
ss
pop
mov
orl
xchg
je
daa
stc
data16
sbb
cmp
fwait
test
das
daa
loop
mov
inc
xchg
aam
xor
hlt
mov
mov
gs
scas
and
lahf
pop
pop
xor
cmp
in
lret
sub
mov
and
iret
cmpsb
push
loop
mov
jp
movsl
test
ja
idivl
xchg
in
adc
ret
pusha
push
xchg
jle
test
popf
fistpll
mov
mov
shrl
rolb
movsb
pushf
jne
iret
popf
rclb
dec
test
push
pusha
int
into
or
popf
nop
add
xchg
sbb
sbb
xchg
mov
lods
xor
das
shrl
push
cmpsb
and
sbb
out
mov
push
sbb
outsb
popa
push
add
mov
and
in
leave
jno
int3
adc
xlat
xchg
xor
ljmp
jns
xchg
push
frstor
out
or
int
dec
nop
mov
jne
popf
insl
cmpsl
orl
gs
cld
mov
xchg
ja
sbb
inc
jl
and
roll
repz
rorb
mov
sub
xor
jae
mov
mov
cld
xchg
in
xchg
insl
je
ret
dec
mov
or
push
clc
hlt
xchg
dec
out
xchg
arpl
push
push
in
arpl
push
mov
fisubs
jg
sub
inc
daa
hlt
xchg
out
and
push
fdiv
sub
fs
mov
popa
inc
popf
add
cmpsl
mov
jl
mov
and
jo
mov
lret
jne
rorb
in
sahf
or
imul
or
or
sub
mov
leave
rorb
nop
add
or
mov
sub
aam
fdivrp
cmp
jnp
inc
mov
sti
and
push
cmpsb
adc
sub
daa
cmp
int
cmpl
fdivp
mov
add
cmp
pop
rcr
ret
jns
cmp
push
dec
cmpsl
xchg
add
xor
add
xchg
pop
movsl
js
lcall
jecxz
fidivs
into
or
add
out
lcall
mov
idivb
dec
push
fs
xor
sarb
call
jmp
pop
jmp
in
add
jno
lock
mov
push
fstpt
aad
lahf
or
sti
mov
cmpsb
xor
xchg
test
adc
mov
jg
loopne
out
mov
inc
sub
adc
mov
push
mov
dec
mov
mov
subl
lock
in
or
out
jne
add
nop
push
int
stos
out
xor
add
fbstp
fucomip
loope
xchg
cmp
or
or
jno
add
mov
sub
xor
nop
insl
pop
add
mov
mov
mov
push
arpl
shr
je
push
lahf
add
cmp
dec
push
jbe
cs
adc
sarl
jnp
xor
inc
inc
cld
xor
aaa
movsl
and
lea
cmp
loop
mov
mov
pop
clc
xchg
mov
pop
repz
pop
call
sbb
add
mov
pop
in
mov
pop
and
inc
lods
cwtl
repnz
cli
cs
xor
shrb
xchg
outsl
push
mov
xchg
shl
inc
loop
sub
add
movsb
out
insl
sti
mov
xchg
sbb
rcrl
outsl
dec
mul
ret
in
inc
pop
and
sub
mov
adc
shlb
pop
lahf
inc
out
pusha
js
gs
cmp
xor
ficoml
scas
shl
and
out
pop
mov
sbb
loop
ja
loopne
ret
inc
shrl
pop
lret
jmp
mov
pop
xchg
call
shlb
add
sarl
lods
mov
scas
mull
sub
lea
cltd
lret
pop
popf
sbb
insb
fmull
int
dec
and
adc
ss
sub
test
dec
add
inc
or
xchg
inc
push
call
add
push
xchg
daa
out
lret
cmp
lret
aam
rcrl
repz
cltd
jle
dec
cwtl
frstor
cmp
test
cmp
cs
cmp
sbb
inc
xchg
imul
xor
sub
jge
inc
jle
inc
push
bound
adc
xchg
sub
enter
lods
mov
and
xchg
je
pushf
scas
test
filds
xor
sub
and
jo
enter
shl
or
add
bound
jo
mov
jl
les
cmpsl
rcr
pop
sahf
sti
and
mov
into
mov
mov
lcall
fstpt
xchg
outsb
mov
jmp
push
pop
adc
inc
ret
cmp
repnz
outsl
adc
mov
cmpsb
in
mov
inc
pop
push
lahf
lea
enter
fidivl
push
rorb
insl
je
dec
and
out
mov
ds
jp
int
out
out
fstl
mov
or
enter
mov
xchg
repz
arpl
push
mov
out
push
adc
mov
sub
lret
push
sub
jl
xchg
adc
cmp
or
pop
jmp
and
sub
ja
icebp
mov
cltd
sbb
or
and
mov
mov
add
lock
aam
scas
jnp
std
stc
pop
or
aam
mov
leave
fildl
aam
es
fcomp
mov
or
push
rolb
pushf
mov
ret
nop
call
mov
out
mov
push
or
xchg
ret
aam
mov
pop
mov
push
enter
push
gs
sahf
stos
push
cmp
xor
je
jg
push
stos
jmp
add
push
push
mov
cwtl
jns
dec
mov
shrl
adc
xor
and
and
std
ja
pop
cmp
lret
mov
fldl
ss
jb
xor
es
stos
in
xchg
pop
shl
dec
mov
mov
cmpsl
mov
jbe
addl
xchg
xor
sub
shll
mov
adc
ja
jne
ret
add
in
pop
add
push
aas
mov
or
loopne
je
leave
adc
sar
pop
scas
xchg
arpl
call
loop
pop
pop
shrl
xlat
xchg
adc
push
lods
adc
dec
add
dec
or
push
sbb
cmc
cmp
dec
dec
or
add
insl
dec
sub
xor
add
inc
scas
dec
or
xor
dec
arpl
rcrb
jnp
jmp
xor
mov
adc
xchg
add
rorl
and
icebp
ret
out
test
mov
push
loop
test
insb
in
jnp,pt
gs
inc
mov
mov
fsts
repnz
pop
push
fldenv
js
cmp
mov
and
pop
push
xor
xchg
out
sub
and
lcall
je
dec
mov
dec
dec
int3
andl
jmp
repz
and
pop
mov
inc
es
push
sahf
sub
insb
sbb
dec
sbb
int
mov
testl
xor
pop
decl
pop
out
addl
mov
push
and
aad
call
or
repz
pop
lds
sbb
inc
dec
lea
pop
pushf
pop
in
nop
or
loope
leave
mov
jp
jbe
das
dec
mov
mov
mov
lods
call
fsubs
lea
adc
pop
or
push
pusha
sub
sub
imul
jl
inc
or
rorb
js
cld
sbb
rclb
push
idivb
dec
cs
addr16
cld
ja
xchg
shr
mov
cmp
lods
add
test
mov
dec
lea
mov
ret
cmpsl
pop
sar
iret
xor
pusha
cmp
fimull
sub
jnp
movsb
xchg
jbe
clc
sbb
fstl
mov
adc
adc
mov
lods
mov
pop
and
sbb
rcr
dec
into
ret
enter
jnp
jo
jb
ljmp
cmp
add
cmc
inc
test
test
adc
lret
ret
jge
lods
sub
and
inc
icebp
mov
sbb
mov
xchg
lods
adc
hlt
roll
mov
in
jne
mov
aaa
mov
push
jecxz
cli
fwait
call
orb
scas
ss
notb
test
or
jmp
pop
outsb
shld
dec
add
mov
jno
jp
xchg
movsl
and
mov
mov
add
das
out
aaa
lret
testl
jmp
adc
push
jmp
cs
dec
insl
mov
cmp
mov
jo
pop
lar
inc
subl
fsts
jmp
jecxz
repz
add
mov
movsb
loop
and
cmpsl
in
dec
adc
push
les
cmp
fdivl
jb
movsl
push
xchg
adc
fidivs
or
fldenv
inc
bound
pop
push
inc
xchg
pop
int3
and
adc
stc
call
pop
aad
inc
cwtl
stos
sub
mov
test
pop
mov
fs
cmp
xorl
fcoms
icebp
pop
addl
sub
mov
divb
cmp
aaa
adc
subl
iret
std
into
inc
lcall
call
daa
fwait
sbb
cmp
mov
ljmp
mov
mov
call
test
jecxz
mov
xlat
xor
ljmp
pusha
dec
int
add
andb
mov
push
decb
test
mov
sub
std
xchg
dec
test
mov
iret
lret
dec
mov
xchg
add
add
pop
in
xor
sbb
jnp
push
je
pop
sub
sbb
xchg
pop
push
mov
jns
mov
cs
cwtl
or
rcll
push
adc
mov
jo
push
test
imul
jle
bnd
insb
inc
fstps
lahf
es
xchg
pop
mov
into
pop
add
adc
sbb
mov
scas
popa
insb
or
jmp
mov
jl
js
mov
xor
sbb
es
std
pop
data16
cs
push
push
mov
or
hlt
iret
popf
nop
hlt
mov
jmp
andl
push
push
lret
or
mov
loopne
leave
test
dec
pop
inc
dec
into
scas
add
push
ss
adc
fbld
pop
sbb
test
lock
xchg
dec
lods
jae
stc
fildl
scas
push
mov
stos
aad
addb
xchg
into
inc
lcall
icebp
xor
ss
sbbl
imul
xor
pop
pcmpeqw
or
jmp
push
in
mov
xchg
sbb
xchg
xchg
push
enter
and
adc
dec
scas
adc
stos
idivb
mov
fisubl
add
sbb
or
ss
lock
jb
pusha
mov
addr16
mov
ret
xor
outsl
arpl
push
sub
sub
faddl
aaa
mov
push
pop
pusha
outsb
mov
xchg
pop
cmpsl
dec
cmp
xchg
enter
jnp
ds
insb
mov
xchg
setp
mov
movsb
in
sbb
clc
mov
push
mov
mov
popa
jle
in
ds
out
je
std
in
push
mov
subb
pop
cwtl
mov
aaa
sti
push
out
aad
sub
ja
push
sub
outsb
mov
cmp
or
xchg
daa
out
arpl
mov
adc
in
lods
fistpl
jmp
movsl
js
jae
enter
pop
jge
push
enter
imul
lcall
fcmovb
xchg
sbb
rorb
mov
gs
sbb
dec
addr16
je
in
imul
pop
ficoms
fbstp
sub
stos
enter
out
and
dec
pop
xchg
mov
rcll
sbb
add
adc
sbbb
jnp
pop
push
ja
cmp
dec
out
orb
or
psllq
inc
lret
sub
repnz
fistpll
inc
lods
imul
scas
add
jecxz
aad
lcall
mov
pop
adc
push
test
push
and
jp
repnz
idivl
pop
daa
or
bound
or
iret
dec
push
push
es
frndint
scas
fdivrs
lds
mov
sub
pop
or
mov
xchg
stc
cmpsb
lcall
notl
mov
push
shrl
jg
sub
jmp
leave
and
imul
push
sub
ret
lea
mov
mov
popa
jnp
mov
out
add
pop
bound
insl
repnz
add
mov
addb
sub
adc
xor
cltd
cli
jmp
es
xor
repnz
pop
xchg
fcomp
mov
xor
dec
mov
call
push
mov
das
inc
sub
mov
dec
cli
add
in
sbb
out
lds
dec
adc
into
nop
mov
shrl
fs
adc
mov
inc
repz
pop
pop
adc
mov
sti
pop
aaa
out
sub
fsubl
loope
aas
add
fdivs
mov
push
in
mov
sub
js
cltd
sbb
in
push
pop
xchg
loope
mov
outsb
xor
out
xor
arpl
mov
ficompl
mov
lahf
jo
das
sub
cmp
inc
andl
mov
xchg
xchg
inc
mov
push
ja
mov
push
fcomip
mov
int
xchg
jmp
lds
adc
inc
sbb
or
leave
shll
gs
shl
add
sbb
add
or
add
push
pusha
rcrl
sbb
xor
adc
adc
push
inc
pop
inc
sub
scas
mov
xchg
sub
push
adc
fadds
xchg
inc
shl
shr
mov
pop
lret
and
jecxz
cwtl
aam
push
insl
inc
data16
pop
stos
ret
mov
mov
ljmp
lret
fsubs
negl
mov
xor
mov
push
jp
movsb
bound
ret
test
push
loop
adc
imul
or
cli
mov
fdiv
push
mov
pop
ljmp
mov
xchg
pop
jbe
nop
ret
mov
mov
pop
leave
inc
push
aad
lods
xchg
mov
push
push
rorl
repz
and
jb
cmp
adc
fs
loopne
push
cmp
jb
scas
add
sbb
sbb
mov
lods
pop
mov
imul
mov
xchg
shlb
sbb
adc
adc
dec
add
cmp
jbe
cmp
mov
cmp
in
xor
adc
jne
or
fsubs
inc
rcl
push
inc
push
push
mov
popa
push
xor
outsb
xchg
out
mov
and
imul
into
pusha
add
iret
pop
mov
push
outsl
or
popa
filds
data16
inc
mov
lret
mov
loopne
data16
pushf
xchg
sbbl
int
fstp
xchg
aas
rcl
mov
pop
mov
scas
in
insb
in
bound
cmp
popa
mov
pop
adc
mov
push
in
cmp
jg
cmpsl
mov
adc
mov
in
lcall
pop
cmp
lahf
adc
pop
enter
adc
ficompl
inc
inc
je
dec
imul
std
jmp
xor
or
push
aad
pop
mov
cmp
sub
ds
mov
ret
test
stc
in
cmpsl
out
mov
lea
subl
pop
pop
jge
mov
lret
aam
pop
pop
mov
and
into
mov
btr
sar
sbb
cmpsl
adc
movsb
and
ret
lret
push
je
cmc
hlt
jge
fs
add
xor
add
stos
xor
xor
out
int3
jno
in
rclb
lods
xor
aaa
push
test
pop
gs
jmp
mov
add
push
inc
fbld
dec
mov
mov
int3
je
or
inc
or
stc
jl
imul
adc
iret
or
push
inc
cwtl
loop
sub
sub
ljmp
cwtl
adc
mov
mov
mov
sarb
and
shlb
arpl
sti
jne
imul
fnstsw
adc
pop
cmpsl
fldenv
aaa
iret
rcrb
jns
xchg
xchg
dec
jge
hlt
mov
subl
popa
imul
cmpsl
add
dec
mov
ficoml
aad
or
fsubrs
xor
icebp
inc
negb
loope
mov
and
inc
mov
push
in
mov
pop
fiaddl
mov
sbb
or
ss
stc
mov
frstor
jp
lock
or
or
add
push
ds
jge
cld
mov
bound
dec
push
jbe
orl
andb
jmp
cli
xchg
ficoml
in
sub
cli
out
cmc
lds
lods
push
mov
sbb
mov
xchg
cmpsb
daa
aaa
movsb
xchg
popf
xchg
popa
fdivrl
or
out
or
jae
mov
xchg
mov
flds
pop
mov
jge
lcall
sub
enter
push
sub
outsb
repz
jge
jo
cmp
mov
mov
jle
xor
aas
in
sbb
out
movsl
push
or
cwtl
mov
and
rcrb
cmpsb
cmp
sbb
jne
inc
cmp
addr16
push
or
xor
lock
and
add
roll
mov
xor
mov
mov
enter
xchg
fidivl
popf
push
lds
clc
ret
fistpll
adc
pop
imul
pop
sbb
repz
jo
mov
pop
and
sub
lods
hlt
mov
cmpsl
inc
pop
xchg
aas
mov
adc
adc
xor
js
cmp
xchg
push
xchg
mov
sub
mov
out
addr16
es
mov
push
incb
jge
pop
adc
add
sbb
ljmp
repz
fcmovnu
clc
and
movsb
cmpb
leave
sbb
mov
aam
sbb
imul
cmp
iret
insl
test
xor
cmp
jae
push
dec
test
call
cld
fisubs
cmp
jg
imull
and
xor
sbb
mov
andl
xor
push
fnsave
clc
xor
xorl
sub
scas
lea
dec
aam
cltd
cwtl
jbe
push
in
sub
jge
push
js
xchg
ljmp
lret
xor
jb
jo
call
dec
cmc
jb
out
xchg
stos
cmp
and
popf
popa
add
inc
test
stos
jne
daa
cmp
imull
or
and
xor
mov
fisttps
test
lcall
into
sbb
fisttpll
aaa
jno
sub
mov
sbb
in
popf
pop
pop
fsubl
jl
je
push
mov
push
in
mov
lcall
xor
rcrb
mov
test
mov
jno
add
lods
lods
adc
daa
fidivl
aam
dec
lods
insb
cmpsb
popf
and
sub
or
push
sub
mov
mov
repnz
sub
pusha
call
fisttpl
fs
in
mov
fisubrl
jge
xor
out
dec
insb
push
repnz
les
pop
jle
pop
push
mov
test
fucomi
fnstsw
cmpsb
fsubl
jnp
adcb
repnz
std
mov
or
ret
xchg
mov
dec
loope
push
adc
cmpb
ss
bnd
test
fptan
ret
aaa
dec
out
xor
fldt
inc
mov
lods
mov
xor
fucomip
subb
cmpsb
popf
rorb
pop
pop
stos
mov
aad
std
mov
sub
out
dec
cmp
rep
or
mov
je
and
lahf
fiadds
push
jecxz
push
les
loope
inc
das
out
dec
and
push
ds
cmpsb
fwait
mov
and
push
lcall
icebp
setp
in
push
or
xor
pushf
or
pop
mov
adcl
mov
out
cmp
mov
ja
data16
popf
repz
sbbl
ds
mov
clc
stc
mov
cmpsl
xchg
pusha
aaa
lea
leave
les
dec
cmp
outsb
push
mov
cs
pusha
ja
mov
es
out
cmpsl
in
shll
xchg
call
jg
lds
ds
mov
popa
inc
lds
push
hlt
sbb
sbb
inc
repz
cmc
inc
jp
cmpsb
aad
shll
xor
stos
dec
in
add
or
lods
inc
fs
aaa
or
movsb
clc
in
daa
mov
ja
or
icebp
repnz
je
add
jg
out
shll
and
hlt
in
popf
movb
jecxz
movsb
mov
mov
push
or
cltd
das
insl
cmp
cmp
fwait
push
mov
aaa
out
add
pop
mov
mov
add
insb
outsl
lods
xchg
lds
mov
push
add
jb
arpl
add
outsb
jno
xorl
jne
cld
cmp
sub
cld
add
mov
jge
cli
and
pop
or
mov
outsl
or
sbb
xor
and
lcall
test
mov
pop
xchg
and
cmp
xor
pop
xchg
leave
mov
popf
loop
dec
cltd
rcrb
sub
cmc
push
or
push
roll
mov
rolb
movsb
dec
cmp
pop
loop
mov
int
fnstsw
scas
jge
sub
into
jbe
icebp
xchg
and
dec
mov
jnp
cmp
pusha
adc
popa
loop
roll
push
adc
jg
sbb
push
stos
clc
jae
mov
test
pushf
sti
divl
push
stos
sbb
mov
adc
imul
xor
pusha
xor
test
sub
push
movsb
xor
addr16
add
xor
fadd
sub
mov
xchg
jo
adc
cmp
mov
jo
lcall
xor
mov
mov
in
push
rcr
jecxz,pt
cmp
inc
push
loop
cld
mov
mov
mov
cmp
push
xor
cmpsb
shrl
popa
fnstcw
je
stc
int
cs
and
jmp
mulb
pop
clc
or
sti
scas
lahf
xchg
sub
mov
adc
add
push
mov
jge
rorl
adc
loope
and
stos
xor
pop
adc
fstps
fucomp
fidivl
mov
sbb
fs
icebp
scas
movsl
dec
xchg
inc
pop
xor
movb
xchg
and
lock
or
pop
pop
inc
setp
lods
fsubrl
adc
mov
scas
mov
test
or
imul
repz
mov
dec
pop
jmp
xor
rcrl
cld
add
cmp
sub
adc
jle
call
in
jae
imul
clc
out
mov
lahf
shrb
fcmovbe
mov
popa
mov
adc
xor
jnp
adc
fcmovne
mov
xchg
lods
fwait
jge
cmc
cmpsb
add
movsl
sub
jecxz
fstl
add
sbb
cmc
out
imul
fdivrp
add
add
aas
add
inc
cmp
xor
insl
loope
rol
adc
mov
mov
jg
pop
icebp
into
in
popa
rorl
jnp
push
sub
test
jns
jl
mov
dec
loop
pop
sub
xchg
push
cs
xor
jns
adc
test
cmp
xchg
mov
xchg
pop
lea
mov
mov
xchg
into
pop
movsl
insl
mov
cltd
pop
adc
decb
test
sbb
mov
cmp
imul
movsl
pop
into
repz
hlt
and
out
push
sbb
lahf
pop
pop
or
cmpsb
orl
cltd
sahf
push
sbb
xchg
hlt
mov
sbb
sti
in
sub
andb
cmp
lds
shl
lods
add
xor
dec
lock
xchg
sbb
and
loope
or
dec
adc
stos
pop
lea
cmp
ret
das
xchg
xchg
xchg
inc
bound
stos
sbb
jg
lea
cwtl
out
add
rcrl
mov
jae
les
mov
jae
clc
inc
and
mov
mov
ljmp
inc
jns
mov
xor
in
add
or
lds
js
aam
inc
scas
sahf
test
ds
sbb
jnp
xor
xor
lcall
push
jmp
mov
push
aaa
cmp
jl
mov
repnz
pop
insb
jge
ret
mov
wrmsr
outsb
inc
and
aad
jmp
mov
decl
jg
xchg
data16
repz
sub
push
jge
and
lock
sti
sub
push
stc
xor
repnz
jmp
push
repz
ret
cmp
lret
pop
rcr
mov
sub
sbb
std
or
sub
jns
jge
push
adc
mov
fwait
push
pop
cmp
scas
xor
push
fs
scas
arpl
pop
in
ljmp
sub
xchg
sub
mov
jge
sub
scas
mov
mov
fucomip
push
xor
adc
jp
lret
xchg
icebp
inc
push
push
jmp
and
inc
xchg
mov
pop
xchg
lahf
jnp
mov
std
jbe
lods
into
not
fldcw
jg
jmp
dec
movsb
push
xorl
jge
in
and
adc
jg
dec
mov
push
mov
test
ljmp
notb
nop
pop
xor
ja
shl
inc
lcall
push
pop
gs
push
lods
jb
xchg
shl
or
adc
arpl
repnz
and
cmc
push
xchg
sbb
les
cmpl
lods
adc
cmpsb
inc
sbb
push
inc
out
repnz
mov
cmpsl
test
mull
inc
sub
mov
jmp
mov
dec
jbe
sbb
pop
lock
and
sbb
adc
bnd
in
xorb
mov
clc
cld
je
pop
mov
xchg
incb
scas
leave
mov
lods
jnp
int
sbb
in
mov
icebp
add
inc
icebp
pop
sub
flds
fnstcw
loopne
mov
enter
jae
icebp
sub
lock
inc
cs
pop
and
push
lcall
jecxz
mov
push
pop
or
jns
ljmp
cwtl
das
dec
mov
xchg
push
les
fiadds
loop
inc
push
sub
mov
call
and
into
xor
cmp
cmp
xorl
loope
pop
in
xchg
or
std
push
pop
aaa
xchg
int
cltd
lcall
mov
icebp
notl
addr16
mov
jle
xchg
jnp
dec
dec
hlt
iret
lcall
insl
lcall
mov
cwtl
xchg
call
into
mov
push
dec
inc
pushf
pushf
sub
test
ja
test
inc
js
shufps
push
cmp
cmpsl
loopne
jnp
xchg
movsl
inc
fldenv
rcll
aam
jo
xchg
dec
jg
cmpl
out
test
mov
pop
mov
sbb
les
sbb
bound
cmp
and
pop
sub
sub
push
arpl
imul
push
mov
ljmp
jge
in
push
jnp
sbb
aam
dec
cmp
or
cmpsl
and
dec
add
sbb
sbb
aad
jp
repnz
inc
out
jne
push
mov
fisttps
pop
rorb
aad
pop
xchg
subb
pop
mov
movsl
xlat
loop,pt
and
outsb
adc
icebp
out
enter
sti
pop
lahf
xlat
dec
jbe
sarl
cmp
or
sbb
and
pushf
ret
in
fildl
shl
jl
popa
mov
mov
es
push
fisubs
cltd
mov
xor
bound
add
mov
in
push
jle
push
int
mov
test
cmp
int
les
icebp
movb
gs
and
sub
loope
add
add
jo
mov
mov
push
inc
push
add
je
test
mov
mov
mov
dec
mov
sbb
sbb
inc
push
outsb
mov
inc
jb
or
test
adc
enter
jmp
dec
imul
call
cmp
leave
inc
divb
push
xor
lahf
mov
popw
dec
ret
sbbl
cmp
mov
ljmp
mov
sub
int3
sub
clc
mov
dec
sub
cmp
mov
mov
lahf
outsl
add
cmp
push
int3
sarl
sub
pop
add
inc
addl
and
jo
lcall
insl
sub
outsl
sub
fwait
mov
xor
popf
mov
ret
adc
fnstsw
insb
std
movb
pop
pop
fidivrs
dec
push
rol
das
aam
int
push
movsb
fistps
dec
and
adc
xchg
ss
xchg
lea
push
aam
push
lea
add
adc
inc
sub
loop
jbe
mov
out
mov
or
test
mov
jo
pop
popa
es
ja
mov
stos
lret
sub
cmp
and
inc
add
dec
arpl
cmpsb
out
mov
push
icebp
cmpsl
enter
popf
xlat
jo
push
jg
jne
mov
fadds
in
ss
enter
pop
stos
inc
or
push
inc
cmp
push
faddl
mov
int
push
inc
xorb
shrl
lds
or
dec
aam
imul
or
xor
in
das
mov
stos
push
loop
xor
imulb
cmc
mov
es
xchg
sub
call
mov
aam
and
daa
lcall
fcoms
jle
pop
mov
int
je
insl
lahf
aas
or
jns
mov
dec
xor
sub
and
push
mov
outsl
in
leave
lret
mov
pop
cs
cmp
scas
ja
push
mov
sbb
cmc
fists
movsb
jl
subb
mov
fcoms
mov
popf
ja
mov
ret
pop
lahf
dec
dec
pop
xor
fisttpll
ljmp
push
shlb
mov
xchg
mov
es
fcompl
roll
jecxz
sub
inc
adc
rorb
mov
imull
cli
fisubs
je
dec
push
test
hlt
mov
lahf
mov
xchg
call
popa
int3
ja
popa
adc
lds
mov
jp
shl
add
mov
cmp
jne
push
and
cmp
inc
sub
aam
repz
jge
movsb
jmp
xor
out
sub
fdivs
lret
mov
pop
fistl
or
ljmp
add
jecxz
into
mov
fstps
jmp
sar
inc
xchg
outsl
or
push
cmp
stc
mov
mov
rcl
cli
fstl
cwtl
add
js
or
adc
inc
jb
jmp
mov
mov
xchg
fbld
push
out
mov
push
movsl
nop
sbb
fwait
scas
adc
cmpsb
loopne
js
jp
orl
loope
in
aam
out
adc
push
clc
sbb
cmp
sub
lea
adc
and
lods
mov
mov
xchg
push
outsl
mov
ret
lock
lcall
fcompl
fldenv
inc
ljmp
jns
push
lods
test
rclb
icebp
movsb
push
stos
fmull
xchg
lret
pop
je
popf
data16
data16
or
or
mov
bound
mov
xor
je
jle
lods
or
mov
push
das
push
rclb
inc
inc
lahf
xchg
push
loope
dec
cmp
movsl
lods
sarb
push
and
fnstsw
shl
cmc
cmp
adc
lea
sub
xchg
lret
or
test
shll
inc
clc
xor
mov
dec
call
loop
cmpsl
pop
or
sub
mov
icebp
mov
popa
jl
push
sub
add
cmp
mov
ret
out
jbe
fdivrl
xlat
push
cld
into
and
pop
adc
bound
push
fsubrl
into
xchg
mov
dec
leave
xor
repz
sub
hlt
push
push
dec
xchg
pop
iret
lods
adc
fnstsw
fwait
stc
cld
pop
dec
aad
call
fisttpl
push
insb
push
and
arpl
add
popa
inc
aas
fisttps
stos
xchg
cli
insb
jl
xor
icebp
data16
mov
repnz
insb
xor
xor
jle
fadd
scas
and
daa
insb
xlat
inc
or
test
jl
xchg
in
lods
adc
ds
sahf
cmp
loop
xchg
mov
mov
sbb
xor
aad
dec
xor
aas
mov
xor
or
inc
sub
aad
sahf
sbb
add
cwtl
decb
or
out
data16
insl
lahf
nop
aas
shl
xlat
mov
mov
movb
inc
pushf
fs
xor
jb
rcll
jmp
js
ds
loope
or
push
push
inc
add
mov
pop
or
and
fdivs
adc
notb
xor
pop
push
gs
andl
push
adc
xchg
jp
sub
sub
jmp
les
stos
imul
mov
pop
xchg
jg
leave
btl
fnstenv
mov
jl
mov
iret
addb
jnp
or
scas
mov
ss
inc
nop
inc
push
adc
xor
scas
imul
and
bound
xchg
mov
xchg
dec
testb
and
aas
add
inc
enter
test
mov
std
push
xchg
out
in
pushf
push
cmp
les
das
stos
pop
pop
sub
mov
xor
xchg
rorl
pop
int3
push
and
aas
mov
movsb
dec
jmp
pusha
or
rorb
ds
or
std
cmpsl
sbb
or
inc
adc
mov
inc
fstp
testb
loopne
rcrb
push
add
out
and
or
lcall
out
or
adc
mov
insb
xchg
lock
cmpb
or
aaa
lea
jge
pop
into
out
pop
sub
js
ja
cmp
lods
lock
repnz
fs
cmp
mov
inc
xor
sbb
imul
in
mov
jne
xchg
cs
dec
gs
test
mov
inc
add
mov
stc
test
ss
aad
outsl
push
mov
out
seto
test
loope
aad
jae
dec
and
sti
jae
push
pop
push
mov
mov
cmp
xor
inc
psubq
popa
lods
loop
mov
rcll
gs
sub
ljmp
xor
stos
mov
js
sbb
adc
fwait
pop
imul
xchg
xchg
mov
dec
add
clc
push
testl
push
cmp
xor
mov
cmp
lret
scas
adc
aas
je
cltd
dec
mov
sbb
jmp
mov
add
cmp
cmpsl
and
lahf
mov
dec
adc
js
out
fisubl
outsb
adc
mov
jmp
outsl
mov
cs
xor
jle
add
mov
insl
jp
add
jae
and
nop
sarl
add
pop
push
jo
cmpb
sbb
std
lcall
out
xor
test
insb
ss
lods
add
aam
xor
and
bound
mov
inc
and
stc
sarb
jg
rorb
cmp
xor
add
adcb
xchg
cltd
lcall
pop
mov
aaa
mov
or
adcb
sub
stos
test
mov
inc
loope
aaa
rorl
mov
or
fistps
add
loope
out
xor
cmp
xchg
fwait
sbb
nop
arpl
mov
or
jle
les
inc
and
or
add
and
outsl
jnp
jle
mov
stc
je
xlat
push
adc
insl
insl
mov
das
pop
pop
mov
arpl
ret
mov
adc
icebp
ja
adc
bound
dec
out
jecxz
add
pop
stc
fsubl
push
cmp
pop
movsl
rcr
sbb
pop
sub
movsl
push
pop
and
jns
inc
iret
ja
ja
and
inc
jmp
cmpsl
or
in
scas
jp
in
jo
mov
js
mov
idivl
xor
mov
pushf
and
test
xchg
dec
dec
xor
cmp
push
es
jae
mov
cli
lret
les
in
shr
aam
ljmp
pop
aas
dec
mov
push
out
and
xlat
js
push
mov
sbb
scas
inc
push
leave
jb
jecxz
push
fisubl
outsb
es
imul
nop
cltd
loop
pop
cmp
dec
inc
mov
xlat
cwtl
negl
hlt
adc
repz
or
mov
ficoml
loope
mov
mov
in
mov
jnp
sub
leave
lods
wrmsr
cs
out
xchg
fisubrs
repnz
out
jo
push
rcl
lods
xchg
push
or
ja
mov
xlat
inc
scas
jge
cmp
mov
test
stos
push
xchg
pop
or
stos
xchg
mov
and
and
adcl
faddp
jbe
dec
sbb
inc
pushf
mov
xchg
and
lods
aas
scas
sahf
kmovd
notl
sbb
or
pop
mov
lock
sub
inc
in
cld
call
insb
icebp
sti
pop
stc
cmpb
lods
into
pop
cmp
mov
out
xchg
push
cmp
popa
mov
daa
hlt
hlt
imul
mov
loop
xorb
pop
in
les
dec
xlat
jae
cmp
mov
add
dec
dec
mov
out
iret
in
push
mov
mov
arpl
sbb
test
jecxz
push
and
stc
fsubl
js
mov
aas
xor
mov
pop
jmp
lods
push
paddd
repnz
xchg
pop
or
mov
repz
std
jb
lea
shll
fisubrs
mov
dec
xor
clc
pusha
scas
je
mov
sbb
jge
push
xor
decl
popa
ja
lret
pop
pop
mov
sbb
decl
xchg
dec
inc
pop
stc
fdivs
dec
sti
in
mov
push
incl
and
lock
adc
dec
jno
inc
or
je
fistpl
shrl
adc
inc
cld
inc
adc
cmp
push
es
into
cmpsb
nop
sbb
cmc
xchg
dec
out
shrl
data16
test
pop
jns
aam
dec
inc
out
sbb
cmp
and
mov
in
or
cmc
sub
adc
es
xor
ret
jo,pt
adc
bound
sti
scas
jge
ret
xor
call
pop
pop
lea
mov
cmp
dec
frstor
popa
js
jp
cld
mov
xchg
jns
aas
roll
sub
stos
out
test
ja
push
imul
sub
jns
je
je
fistpll
dec
loop
clc
sbb
insl
xlat
loope
inc
cmpsl
and
adc
lret
jl
mov
push
adcb
mov
mov
push
inc
insb
loop
mov
out
iret
inc
xor
jg
std
std
push
out
jo
and
je
ss
fdivl
dec
mov
sbb
jno
adc
daa
add
jmp
and
mov
jmp
sarb
jp
shlb
sbbl
cmpsl
insl
sub
insl
stos
es
hlt
cmp
js
sti
aam
jl
sbb
mov
hlt
out
ljmp
call
or
sbb
mov
inc
fcmovnbe
adc
loop
idivl
sbb
insl
sbb
popa
sub
lret
mov
dec
mov
pop
jge
push
aaa
je
lods
xchg
mov
mov
cmp
loop
fnstsw
fmuls
cmpsl
shll
ret
ja
and
imul
mov
mov
outsl
int3
sbb
sarl
fisttpl
jmp
aaa
loope
add
adc
lods
xchg
into
pusha
sub
fwait
jmp
adc
cmpsb
ds
cmp
and
sbb
xor
in
mov
cmpb
data16
lahf
jmp
mov
addr16
imul
mov
add
scas
dec
stos
sbb
mov
cmpsl
push
cmp
push
jae
mov
in
mov
mov
inc
call
stos
js
cmp
je
stc
cmpsl
and
cmp
ljmp
push
imul
mov
aas
mov
mov
fidivs
loop
push
xor
and
fldcw
mov
stos
flds
imul
cmp
sbb
repz
movsl
mov
std
mov
imulb
mov
jg
andl
roll
xor
scas
lcall
fstpt
jne
iret
adc
dec
mov
fstpt
shl
icebp
pusha
stc
shll
lahf
mov
clc
lret
cli
loop
xor
or
sbb
inc
mov
test
loop
mov
cmpsl
aam
insl
into
dec
and
lcall
cmp
mov
arpl
sti
insl
out
mov
dec
or
cwtl
add
into
xchg
xchg
jmp
add
ret
sub
pop
in
lods
mov
jb
scas
mov
cmpsl
scas
jle
ret
jno
mov
mov
out
pop
inc
jae
aaa
jp
jnp
negl
js
sbb
outsl
push
push
inc
test
jg
pop
idivl
adc
loope
insb
mov
push
cmp
in
aas
outsb
sbb
xor
add
pop
icebp
mov
scas
repnz
test
cmp
and
out
dec
add
or
and
sbb
clc
xchg
jb
ja
into
fwait
push
mov
mov
das
lock
cmp
mov
push
inc
sbb
les
mov
lahf
xchg
xor
pop
fistps
bound
pop
pop
cmp
push
ficomps
insl
jge
xchg
clc
je
aad
inc
pop
test
mov
xchg
sub
push
out
stc
mov
add
fcomip
data16
bound
mov
jg
and
sbb
roll
test
xorb
xchg
jo
push
and
inc
mov
mov
lods
and
ljmp
dec
movsb
xchg
cltd
push
and
js
jmp
jo
test
ret
call
loop
xchg
enter
push
test
jp
mov
pusha
sub
pop
clc
sbbl
xor
dec
lret
add
cmp
data16
sbb
insb
sbb
mov
and
xor
std
and
add
or
cld
int
inc
mov
test
adc
mov
xor
jnp
xor
loop
pop
test
stc
lret
and
ljmp
mov
xchg
cmp
fcomp
int
mov
testb
or
ror
adc
mov
jo
test
and
popa
jp
add
push
imul
inc
jmp
or
push
pop
push
or
sbb
out
adcl
and
cmp
xor
fcoms
mov
fnstenv
iret
dec
push
push
push
jnp
fs
add
dec
cmc
inc
xor
je
push
dec
arpl
push
push
shrl
xor
xorb
pop
dec
out
pop
cmp
or
xor
mov
add
repnz
hlt
push
jp
sbb
adc
ficomps
sub
loope
addl
add
inc
dec
sbb
pop
rcll
adc
popf
mov
push
out
lcall
jmp
rcl
dec
imul
pushf
lods
adc
and
je
fcoms
dec
ret
test
fsub
add
addb
mov
je
sar
mov
sbb
push
daa
popa
jp
mov
test
push
or
leave
outsb
frstor
adc
movsl
pusha
adc
call
fidivrs
sahf
add
decl
mov
ja
and
sbb
data16
push
add
and
dec
mov
dec
and
fisubrs
xor
jle
sub
dec
mov
lods
lret
ficompl
mov
adc
pop
push
call
loop
jp
bnd
inc
enter
daa
xchg
lods
subb
xchg
pop
mov
fisttpl
stos
mov
into
push
ror
inc
jg
filds
add
mov
and
add
jg
mov
mov
loope
cwtl
and
sbb
xor
jne
and
ss
push
and
gs
and
cmc
lods
sarb
shr
ljmp
xchg
outsl
push
mov
je
inc
adc
sub
call
sahf
and
repz
jecxz
xchg
sbb
rorb
orb
adc
jne
hlt
or
adc
xlat
arpl
push
xor
mov
sti
hlt
push
adc
fs
stos
sbb
inc
pop
sub
je
mov
add
mov
inc
or
clc
rclb
ljmp
test
cmp
ljmp
sbb
dec
mov
cmp
lods
push
xor
nop
xchg
shrl
push
push
icebp
shll
push
xchg
mov
xor
lret
jp
pop
popf
paddd
cmp
mov
push
mul
xchg
repnz
fcmovbe
das
lds
loopne
popf
push
insl
movsl
push
cmp
scas
imul
ja
xor
mov
xchg
jmp
mov
cwtl
fwait
icebp
ret
and
fs
pop
mov
aas
dec
pop
push
daa
xlat
loope
adc
and
jg
stos
outsb
mov
out
mov
lcall
scas
iret
push
les
pop
mov
jecxz
lods
xchg
jmp
jge
cmp
sbb
push
lret
or
icebp
test
lret
jae
push
pop
mov
hlt
arpl
lret
dec
cmp
mov
sub
data16
aas
ljmp
add
dec
enter
sbb
lods
cmpsb
mov
cmp
xor
repnz
mov
fistl
and
adc
pop
pop
push
addr16
orb
lcall
and
fstp
cmpsl
call
xor
push
sbb
sub
dec
test
js
fisubrl
push
hlt
cmpsl
inc
jg
jae
lret
add
mov
adc
test
push
push
fstl
sbb
jae
push
jg
ds
pop
push
pop
push
push
movsb
insb
add
sbb
ret
pop
pop
cmp
mov
sti
jnp
idivb
jecxz
int3
pop
mov
xchg
mov
shll
orb
xchg
call
adc
int3
imul
jge
adc
jp
jnp
sbb
add
lods
xor
push
xchg
cmp
mov
add
lods
inc
out
sub
add
dec
sbb
push
aam
push
or
imul
cs
cltd
movsb
mov
sbb
xor
test
fwait
sti
sti
cltd
pop
imul
and
pop
adc
sbb
sub
loop
out
push
mov
loop
iret
in
jge
adc
andl
dec
cld
enter
jae
in
inc
push
adc
in
xchg
xchg
pop
ljmp
repz
pop
push
jb
ss
movsb
loop
cltd
mov
adc
push
jbe
daa
mov
xchg
and
dec
mov
xorb
dec
cmc
in
push
ds
jmp
or
jo
bswap
pop
shl
jns
or
push
mov
jno
andb
pop
xchg
js
dec
or
rorl
xchg
mov
sarb
jo
mov
test
inc
dec
mov
xor
sti
dec
mov
stos
lea
aaa
jbe
mov
stc
mov
pcmpgtw
mov
out
cwtl
adc
jno
lahf
in
mov
push
int
pop
adc
hlt
shl
mov
outsl
pop
add
andb
mov
cwtl
lock
int
mov
cs
or
push
fidivs
iret
xchg
mov
ror
mov
adc
js
lds
jle
jae
or
orb
or
xlat
in
inc
cwtl
in
lcall
or
jno
movsb
mov
xor
xchg
xchg
inc
sbbb
std
dec
jg
or
pop
pop
orl
scas
jae
mov
xchg
pop
adc
push
fmul
cmp
push
sbb
and
jecxz
in
fldl2t
pusha
adc
or
aas
add
imul
lea
pop
mull
add
data16
icebp
testb
arpl
fistpl
or
jmp
mov
outsl
or
jge
arpl
jae
cmpl
outsl
xor
test
push
lock
pusha
add
gs
test
inc
dec
aad
push
dec
mov
test
scas
jns
xchg
rorl
insl
jmp
les
loope
cmp
and
and
divb
xchg
mov
flds
add
dec
mov
mov
mov
fstpl
push
cmpsl
sbb
in
mov
adc
lahf
xor
sbb
add
mov
movsl
bound
xchg
inc
ds
dec
test
enter
jae
sbb
sbb
mov
pop
and
stos
imul
pop
inc
pop
sbb
mov
test
and
adc
add
in
jae
rcll
or
ret
fwait
pop
test
xchg
popf
push
xchg
in
mov
cmpsl
jno
pop
sub
mov
ljmp
lret
je
lcall
scas
sbb
movsl
in
mov
pop
lods
mov
add
lods
and
mov
in
sub
sub
loope
addr16
jge
inc
stos
cmp
lea
or
pusha
sub
stc
cli
add
fcoms
push
or
pop
xor
sbbl
cmp
pop
inc
and
lret
cmpl
cmc
or
imul
jl
dec
les
xchg
inc
pop
xor
hlt
inc
cli
jbe
fstpt
repnz
mov
cmpsl
gs
sbbl
push
adc
cmp
scas
dec
xor
sbb
addr16
xchg
lock
fdivrl
movsl
jb
out
add
mov
sub
inc
lea
iret
push
fs
aaa
enter
and
dec
loopne
movsb
out
jecxz
push
inc
inc
fldt
jmp
adc
repnz
mov
lea
sub
xchg
lock
out
fwait
mov
test
lock
sti
mov
inc
out
pop
call
mov
mov
xchg
add
andl
pusha
cs
ret
dec
sub
jnp
cmp
pusha
repz
jnp
in
inc
dec
leave
and
pop
jns
mov
adc
cwtl
inc
add
les
sti
fwait
or
fistl
dec
sub
movsl
iret
pushf
mov
jecxz
sbb
jg
fcomps
pop
cmc
jmp
and
sub
gs
mov
insl
add
or
out
jp
sub
rorl
jnp
sub
movsl
addb
pop
xchg
mov
test
or
inc
rcll
sbb
dec
hlt
lret
sahf
and
push
push
fidivrl
mov
xchg
inc
mov
call
push
push
fsubrl
add
jns
push
pop
lea
mov
fs
lea
fs
in
sub
dec
dec
addr16
adc
pop
add
mov
test
jmp
dec
fwait
mov
add
pop
nop
icebp
test
das
int
mov
push
fisttpl
call
cld
sub
jmp
push
scas
insb
xchg
mov
scas
and
loop
or
scas
inc
stos
aas
sub
and
lds
mov
jg
sahf
add
cmp
repz
push
hlt
movb
sbb
adc
sub
mov
pop
sub
nop
jnp
mov
leave
fists
mov
or
mov
mov
sahf
jp
mov
pop
aam
andb
mov
imul
dec
mov
cmp
nop
rolb
repnz
fnstcw
mov
in
xchg
lea
dec
xchg
jae
mov
and
lret
popf
repz
xor
pop
xchg
sub
mov
out
stc
and
sub
sbb
hlt
and
in
shr
pop
insl
push
mov
movsl
or
mov
sub
rcr
add
stos
clc
jno
push
mov
cmc
dec
pushf
fwait
and
je
push
ret
loopne
mov
or
int
mov
mov
scas
cmpsl
xor
or
popa
pop
add
xchg
lods
cmp
push
lcall
and
inc
adc
test
pushf
adc
stc
pop
dec
bound
dec
bnd
jmp
mov
adc
xor
pop
ret
mov
pop
data16
sub
sbb
loopne
push
sbb
xor
add
lea
inc
mov
xchg
inc
ss
push
ret
lock
pop
insl
mov
inc
and
decb
dec
ljmp
cs
and
lods
inc
push
lock
xchg
loopne
lock
xor
repnz
aaa
imul
pop
in
aaa
push
mov
std
sarl
push
xorb
add
inc
out
xlat
clc
xchg
jb
or
ds
mov
lock
and
xchg
mov
sbb
xchg
lahf
in
test
cmc
push
stos
push
push
insb
push
inc
lret
lcall
shr
jb
jp
popa
xchg
aas
je
push
jbe
jg
mov
and
or
xchg
sbb
cmp
mov
xchg
jo
xor
add
rcr
jns
xchg
nop
add
sub
sbb
negl
out
mov
nop
sub
movl
sbb
int3
fsubl
das
out
and
es
adc
pop
sbb
add
jnp
xorb
inc
fsubl
jno
sbb
shlb
ss
decl
out
inc
mov
or
or
mov
mov
inc
rcrl
stos
pop
dec
push
push
in
mov
int3
movsl
mov
cmp
mov
lahf
daa
fimuls
test
int3
in
xorb
repnz
xchg
lods
movsl
das
xchg
lock
mov
mov
dec
stc
out
out
loop
nop
xlat
inc
je
iret
lods
js
add
fdivrs
mov
jno
cmp
in
dec
mov
arpl
es
and
repnz
jecxz
call
or
dec
test
dec
adcl
pop
add
jmp
add
dec
and
push
mov
addr16
xchg
cmp
lods
fistpll
mov
ret
sbb
mov
dec
orb
mov
sahf
fprem
lret
xlat
xchg
jns
cmp
cwtl
inc
inc
xchg
add
or
adc
rdtsc
mov
dec
or
jp
iret
lahf
clc
push
pop
xchg
cmp
mov
push
call
lea
adc
fisttpl
push
sbb
or
sub
xchg
daa
mov
fstl
jo
lret
frstor
outsl
add
add
test
ret
mov
sbb
aad
and
xchg
mov
mov
or
cmp
clc
outsb
sub
popf
inc
mov
ror
in
adcb
fstpl
sbbb
addr16
sbb
dec
and
sbb
sbb
sbb
addr16
std
scas
test
popa
movsb
idivl
stos
xor
mov
in
mov
pop
xor
and
cmp
ja
mov
xor
test
in
mov
push
lret
mov
and
fmull
mov
pop
jno
cmpsb
dec
jne
stos
mov
insl
push
push
stos
icebp
jg
sub
es
loop
push
pop
shll
add
cmp
lock
subb
enter
add
mov
out
mov
dec
add
insl
aaa
movsl
lock
mov
sub
aaa
bswap
cmp
icebp
lds
aad
push
adc
pop
adc
mov
adc
jmp
xchg
sbb
loop
scas
or
mov
push
lahf
dec
sub
dec
lea
loopne
ds
sbb
lret
dec
mov
int3
and
jnp
rol
lds
sub
add
lods
arpl
adc
xlat
scas
add
jge
sbb
jle
repz
orl
enter
push
jne
lahf
inc
or
sti
shrb
sbb
daa
aaa
inc
sahf
or
jns
inc
fstpt
int3
std
mov
jo
inc
push
sub
popf
pop
jmp
repnz
pusha
mov
in
inc
xchg
ljmp
add
rcrb
jmp
sbb
jge
fistps
fstpt
jecxz
pop
xor
fldt
lcall
enter
cmpsl
xchg
in
jp
rcr
addr16
sbb
pop
out
popf
imul
ficoms
fsubrl
insb
fists
call
mov
cmpsb
inc
lds
jae
push
sub
scas
lret
sbb
notl
idivl
mov
adc
imul
push
pop
mov
jbe
or
mov
adc
jo
sub
je
jmp
stos
mov
dec
jae
ret
call
popa
push
mov
addr16
or
fs
mov
test
or
into
das
lds
adc
fistpll
popa
in
shlb
dec
mov
xchg
out
daa
jle
movsl
xlat
dec
cmp
jae
jo
adc
cwtl
xor
dec
xor
sub
enter
clc
inc
adcl
sub
push
xlat
mov
rolb
je
pop
clc
rclb
mov
xchg
lret
imull
lock
add
popa
es
pop
mov
sub
add
sub
xorl
xor
and
add
adc
and
js
hlt
xor
jle
popf
cltd
sub
ret
fs
mov
push
cmp
xor
jle
or
outsb
loope
inc
jge
push
mov
xchg
fcompl
mov
push
nop
jp
dec
shlb
int
insl
pop
cmp
jne
mov
arpl
jg
adcb
gs
rcrl
stos
add
mov
lahf
jmp
xor
jns
mov
pusha
ss
sbb
repnz
xchg
xlat
lret
xor
fmul
mov
frstor
cmp
or
jb
push
enter
push
dec
inc
mov
xor
test
push
adc
cmp
mov
pop
out
setnp
push
js
mov
inc
mov
pop
and
push
aas
pop
neg
jne
cmp
cld
rcr
xchg
cmp
push
popa
jns
popa
xchg
mov
shll
rcrl
fldl
mov
out
push
sbbb
imul
enter
stos
sub
sub
inc
outsl
pop
mov
jae
dec
inc
fisubrl
push
mov
aaa
scas
push
in
mov
push
test
loopne
sub
js
scas
fbld
inc
xor
jle
sbb
jl
inc
inc
jnp
xor
jne
mov
ret
adc
cmp
lea
jl
push
dec
je
pop
cmp
lds
adc
ja
mov
sbb
xchg
or
pop
pop
bound
xor
ss
jecxz
and
cwtl
push
jae
icebp
dec
pop
jmp
cmpsl
repnz
and
outsl
in
lcall
fsubrs
mov
daa
lret
and
out
jns
pop
ss
jbe
lret
dec
sbb
loopne
negb
mov
and
cmp
cmpsb
xchg
cmp
mov
push
jl
and
lock
jbe
sub
loop
out
lret
jle
mov
jbe
mov
cs
out
repz
push
insl
jns
inc
imul
mov
fbld
adcb
dec
cmp
lcall
add
and
jge
or
cmpsl
data16
aaa
sbb
jne
sbb
repnz
imul
mov
lock
pusha
xchg
sbb
lret
pop
out
jnp
lock
rorl
repz
xor
jg
mov
loopne
cld
aad
insl
rcrb
push
sbb
adc
fld
bswap
out
insb
xor
dec
sahf
aas
movsl
lahf
xchg
dec
inc
or
subb
out
into
adc
je
pushf
pop
xchg
stos
mov
push
fildll
sahf
dec
push
jno
jmp
pop
mov
das
xchg
ret
jp
out
sub
xor
inc
sub
hlt
imul
adcb
mov
add
lds
xchg
xlat
jo
aas
jne
mov
xor
dec
insb
or
jmp
shrl
jecxz
add
fidivrl
arpl
xor
and
xchg
loopne
pop
mov
in
push
mulb
adc
mov
es
cmp
imul
cs
pop
stos
xor
pop
loope
mov
movsb
mov
in
cmc
test
push
push
xor
and
mov
lods
test
mov
std
sub
in
pop
mov
mov
mov
fsubr
xchg
rcrl
mov
ret
test
mov
fwait
movsl
jp
sub
and
pop
jo
pop
jne
fsubrl
push
xor
ret
das
and
mov
inc
popa
push
jg
xchg
ljmp
mov
imul
sbb
and
or
icebp
pop
mov
xchg
jle
rcll
xor
pop
xlat
sbb
pop
sbb
xchg
pop
cwtl
xor
xchg
xor
scas
pop
out
shlb
sbb
loop
xor
das
aam
xor
cwtl
insb
pusha
pop
push
push
les
stc
add
push
xchg
mov
in
mov
push
push
icebp
mov
push
push
dec
or
xchg
fdivl
mov
int3
cld
fstpt
fldcw
push
and
pop
mov
inc
adc
cmp
add
fdivrl
mov
dec
dec
jne
mov
gs
pop
in
int
rclb
int
test
outsl
pop
cmc
pop
cmp
clc
push
outsb
fldcw
jne
fucomi
adc
jns
sbb
xchg
insl
adc
cmp
inc
cs
into
adc
and
mov
repz
pop
ret
jo
mov
stc
push
xor
loope
stos
fs
jp
sub
push
cmp
andl
sbb
lods
cmpsl
or
call
ja
and
daa
movsl
ja
out
iret
mov
sti
cmc
out
cmp
ss
inc
imul
adc
lds
jg
push
adc
adc
ret
repnz
cltd
int3
xchg
lods
jge
idivl
dec
test
roll
mov
and
inc
in
lret
stos
xlat
sbb
add
lods
mov
push
adc
mov
pop
xchg
jb
mov
hlt
lcall
push
mov
cmp
aad
xchg
xchg
add
push
or
and
add
in
test
clc
dec
adc
xor
adc
and
int3
mov
scas
xor
jg
sbb
js
add
xchg
add
aaa
adc
imul
stos
and
test
rcrl
dec
es
stos
hlt
shlb
mov
hlt
jb
dec
mov
scas
jno
enter
dec
add
jl
rclb
rcl
push
movsb
adc
outsb
dec
jno
dec
cmpsl
into
ss
lret
mov
adc
and
dec
add
xor
xor
adc
mov
leave
inc
mov
inc
jecxz
mov
xchg
push
out
scas
push
scas
test
sahf
movsl
js
loope
adc
orl
push
fistpl
movsl
xor
adc
push
cmpsb
stos
iret
cmpsb
aad
pop
xor
cltd
sub
add
xchg
aad
ja
testb
ret
sub
sub
mov
push
fdivs
cs
push
jbe
ret
stos
cli
lods
jp
jg
xchg
sti
pop
lcall
stos
xchg
cli
lcall
cwtl
sbb
mov
fistl
xchg
xlat
cmp
xlat
pop
push
pop
and
jmp
aaa
push
inc
fsubs
call
mov
pop
hlt
cld
add
repnz
stos
bswap
movsb
outsl
jae
lahf
or
mov
xchg
jl
stos
test
or
sub
clc
sub
fildll
mov
jbe
fstl
test
orb
mov
jne
push
stos
cltd
insb
jns
stos
subb
mov
mov
lock
fisubl
mov
adc
pop
frstor
and
push
loope
popf
mov
mov
mov
sub
sbb
bnd
cmp
sub
push
scas
stos
pop
adc
imul
icebp
mov
jecxz
cmpsb
or
test
jmp
push
lret
push
adc
dec
dec
push
daa
xchg
sbb
in
mov
add
sbb
add
cld
int3
rcr
cmp
out
cmp
movsl
inc
in
mov
mov
adc
inc
xchg
dec
lock
mov
xor
jecxz
sbb
dec
lods
adc
lcall
fildll
outsw
sbb
adc
stos
mull
pop
fs
repz
add
adc
sbb
add
mov
movsb
push
mov
and
std
push
popa
cmpb
fidivl
push
movsl
daa
lods
scas
xor
mov
xchg
lea
ss
ror
js
shrl
iret
shlb
cwtl
fwait
push
mov
cltd
push
popf
jge
dec
addb
lds
sbb
adc
jb
ss
adc
push
movb
stos
aam
mov
sub
mov
nop
adc
negl
cmp
dec
nop
sub
jbe
jmp
insb
sub
idivl
push
in
sub
movsb
clc
popf
lret
jg
sub
and
mov
mov
scas
into
ret
xchg
std
int3
inc
mov
rcr
cs
outsl
and
hlt
mov
push
jo
fldcw
or
lret
pop
sbb
stos
dec
std
cmp
out
pop
sbb
daa
fsubs
imul
ds
lods
outsb
inc
pop
insb
fidivs
mov
fadds
test
add
mov
sbb
dec
scas
xchg
aaa
cmpsl
in
test
lds
minps
shrl
adc
rcr
jge
and
or
mov
dec
mov
jge
mov
lcall
push
jp
div
cmp
out
push
out
sbb
mov
jns
pusha
mov
inc
das
scas
sub
std
mov
adc
dec
iret
adc
rcll
mov
adc
inc
inc
mov
faddl
xor
and
sbb
jae
fistps
repz
cmp
push
popf
xor
out
out
mov
cmp
inc
cmpsl
nop
lea
dec
stos
jl
push
in
dec
xor
push
jg
xchg
fcomp
cltd
sti
in
in
cmp
int
icebp
fdivp
jns
scas
js
mov
shll
fxch
mov
adc
jns
or
add
scas
mov
mov
and
lods
sub
jecxz
movsb
and
sbb
xor
gs
jmp
fs
mov
cltd
xor
das
fs
cs
out
lock
mov
insb
or
push
rcrl
scas
je
fdivs
lds
inc
mov
pop
push
xchg
popa
xor
jbe
pushf
mov
mov
mov
iret
jge
mov
lcall
mov
shlb
pusha
repz
jne
adc
pop
gs
cwtl
popa
mov
mov
add
pop
xchg
jb
sbb
in
inc
aam
xchg
out
repnz
add
dec
addr16
xchg
sub
xchg
pop
daa
jo
scas
mov
add
mov
scas
sti
in
scas
dec
pop
inc
fildl
and
push
movsl
push
fst
sub
lods
add
mov
fdiv
shll
push
fsubr
add
mov
and
dec
sub
lcall
push
in
mov
xchg
dec
ret
enter
xchg
inc
je
movsl
sub
sbb
adc
mov
dec
jns
cmp
fiadds
adc
mov
or
and
lea
lods
sbb
adc
in
push
add
out
cmp
lret
dec
hlt
adc
shrb
ss
push
or
xchg
mov
nop
add
sub
xor
jge
jnp
push
cs
imul
sub
lahf
ret
test
dec
add
mov
gs
bound
sub
outsb
ja
jle
mov
frstor
lcall
and
loopne
ds
sbbb
mov
shll
add
imul
push
adc
pusha
daa
sub
call
xor
mov
out
dec
jle
jne
pop
sbb
hlt
dec
daa
stos
sbb
and
fnstenv
and
mulb
adc
pop
daa
or
mov
lahf
add
je
mov
dec
mov
cld
orl
adc
nop
pop
dec
cmc
mov
sahf
out
pop
cmc
push
adc
push
mov
fadds
push
cltd
sub
rcl
ret
xchg
inc
sahf
or
fcmovb
stos
scas
and
adc
sbb
subl
inc
mov
and
mov
icebp
jecxz
rol
cmp
in
cmp
mov
mov
fwait
sbb
push
cmp
pop
lock
add
or
mov
push
leave
pushf
cmp
adc
hlt
ret
clc
les
xchg
inc
call
je
sbbb
dec
pusha
fsubrp
mov
add
lock
mov
aas
aad
fwait
jle
mov
inc
leave
icebp
lods
mov
sub
mov
pop
mov
sub
das
push
pop
call
sti
fadds
fwait
test
sub
es
cli
lods
jg
mov
sub
loopne
mov
out
je
in
sbb
mov
ja
ss
sub
stc
jecxz
cmp
dec
mov
push
push
lds
mov
ret
fldcw
notrack
notl
cmc
addb
mov
inc
into
fldt
loopne
sti
testb
decl
pop
xor
rcll
push
mov
aad
enter
and
fmuls
test
push
jmp
lret
stos
and
aad
arpl
push
imul
push
mov
outsb
xor
mov
jl
xchg
add
xor
call
dec
std
insl
pusha
pop
xor
stc
fucomip
push
sbb
xadd
fsts
mov
sbb
in
cmc
pop
repnz
iret
imul
pop
lods
or
addb
in
icebp
rorl
test
pop
mov
pop
sbb
faddp
jecxz
mov
aam
push
push
dec
and
xchg
and
jp
xor
sahf
sbb
or
push
aam
or
mov
xlat
cmp
mov
push
insb
and
fstl
push
push
ds
pusha
jecxz
and
xor
inc
inc
dec
test
cmpsb
xorb
sti
mov
mov
daa
xchg
les
cwtl
lret
sbb
adc
cmpl
cmc
mov
hlt
jp
mov
rclb
testb
sub
nop
pop
pushf
cmc
xor
mov
xor
stc
jle
outsb
insb
out
sub
xchg
adc
push
lret
jb
xor
xor
sub
out
stos
leave
adc
sbb
dec
xor
jbe
jbe
outsl
lods
popf
mov
rclb
inc
sbb
stc
mov
ss
ficompl
into
jp
mov
pop
fmul
mov
test
push
sahf
sbb
inc
pusha
adc
mov
pop
es
out
addr16
sbb
jno
or
lret
test
sub
popf
mov
push
lret
mov
cmp
inc
xor
pushf
addl
lcall
lahf
repnz
xchg
fsubr
test
adc
mov
sbb
iret
mov
xchg
ljmp
mov
icebp
mov
packsswb
jmp
cwtl
das
or
xchg
jb
xor
push
mov
or
jnp
inc
cmc
xor
mov
shll
popf
iret
push
adc
out
and
pushf
push
jge
gs
ret
enter
and
add
jmp
pop
scas
inc
and
fdivs
test
pop
mov
pop
mov
repz
xchg
lea
xchg
je
and
imul
add
sbb
inc
push
sarl
shrb
loopne
loopne
or
roll
enter
sbbl
aas
daa
stos
mov
push
xor
and
xchg
and
sbb
jae
push
and
test
int
mov
or
ret
fsubr
jae
stos
inc
add
pop
daa
and
or
xchg
arpl
aad
jnp
mov
lahf
jnp
cmp
mov
imul
inc
andb
inc
imul
sub
push
out
xor
scas
insl
ljmp
ljmp
mov
mov
lahf
jnp
ljmp
mov
inc
stos
jecxz
lods
pop
mov
jge
xchg
stos
lock
out
mov
jecxz
fimull
mov
test
arpl
fisttpl
mov
mov
push
mov
shl
cmp
adc
pop
jle
mov
mov
mov
and
orl
sub
into
and
add
aaa
fistpll
clc
mov
xchg
in
cmp
sub
sbb
add
mov
inc
dec
ret
sub
in
jmp
adc
je
xor
icebp
inc
rol
in
mov
cmp
or
outsl
jo
mov
sti
dec
clc
mov
add
push
gs
imul
outsl
fldenv
les
rcrl
scas
push
stos
jecxz
outsb
push
inc
pop
xor
push
jns
es
fsubrl
repnz
jmp
adc
mov
pop
sbbl
push
jnp
rorl
cwtl
scas
jg
out
adc
xchg
bound
push
add
adc
js
pop
stc
aas
or
and
in
test
push
scas
aam
xor
xor
scas
push
inc
mov
mov
pop
enter
ljmp
lods
mov
enter
pop
adcb
cmp
test
fs
add
out
mov
aaa
call
ss
dec
shrb
imul
pop
pusha
mov
xor
and
lds
fstl
rcrl
aaa
mov
rcrl
inc
ficompl
jge
jge
push
rolb
daa
stos
xchg
mov
mov
fstpt
rorb
dec
std
repz
mov
les
mov
imul
cli
cwtl
pop
jno
dec
dec
xor
pushf
rcrb
mov
jno
inc
rcrb
icebp
add
mov
adc
popf
mov
rcll
jmp
sbb
sub
cmp
in
push
xchg
movsb
sub
sbb
ljmp
lcall
and
imul
test
mov
pop
xor
mov
push
push
cmp
inc
dec
xchg
mov
jae
adc
jle
add
ret
mov
in
daa
call
das
rcrb
mov
push
or
in
jnp
pop
rcrl
cmpsb
sbb
inc
push
jbe
jmp
sbb
mov
pop
xor
or
xchg
hlt
xchg
jg
mov
jns
xchg
mov
dec
in
clc
pop
repz
mov
pop
mov
lcall
or
pop
sbb
sbb
ljmp
shlb
jecxz
add
mov
sub
fldenv
call
loop
test
cmp
sub
xchg
mov
negl
adc
xchg
mov
test
icebp
pop
mov
xchg
sbb
cmp
jno
cmp
popa
je
std
pop
xchg
popl
dec
mov
and
out
sti
das
add
xor
std
mov
jno
mov
adc
mov
xor
sbb
fisttpll
out
int3
cli
dec
repnz
fwait
adc
ret
dec
add
shr
pop
dec
push
mov
mov
push
adc
lds
mov
lods
xchg
jns
es
lods
dec
daa
push
sarl
sub
sbb
or
jle
ss
xchg
out
lds
sbb
daa
notl
aam
add
mov
inc
inc
and
xchg
rcll
lahf
fcos
xor
xor
jl
push
shlb
push
lds
inc
sub
jmp
das
sbb
xchg
mov
dec
fs
xor
out
ret
add
xchg
inc
cli
daa
aad
mov
into
es
test
in
sub
mov
push
stos
xchg
jb
lds
pop
cmp
lcall
lret
clc
sub
fwait
fwait
aas
xchg
sbb
lock
stc
push
aaa
jle
sub
add
add
loop
push
es
aaa
std
lock
out
std
sbb
dec
dec
sbb
inc
mov
loope
push
popa
test
pop
xchg
inc
pop
imul
cmp
dec
xlat
mov
test
jp
jo
bound
xchg
push
mull
adc
mov
std
mov
jne
cwtl
cld
imul
sub
sbb
fmull
ss
xchg
mov
push
pop
pusha
and
xor
popa
repnz
xchg
repz
pop
cs
xchg
lock
xchg
popf
subb
push
adc
int
les
bound
mov
out
rcrl
movsl
push
push
loopne
test
sarl
fwait
pop
les
jb
je
push
mov
xchg
adc
or
pop
stos
push
mov
jbe
xchg
and
inc
iret
insb
imull
mov
es
sbb
test
mov
test
pusha
fwait
idivl
aaa
or
iret
andl
out
lods
and
mov
fisttpl
cwtl
out
rcrb
jmp
das
and
and
or
cmp
add
push
insb
das
andb
add
das
mov
inc
test
stc
fwait
xorb
xchg
sub
pushf
add
push
mov
sub
push
scas
mov
lcall
arpl
outsb
pop
lods
jns
rcrb
movsb
mov
sub
push
or
fwait
mov
inc
push
scas
add
push
dec
call
sarl
sbb
mov
mov
dec
adc
push
mov
xchg
pop
repnz
jle
pop
xchg
cmp
shl
mov
jbe
push
sbb
xlat
mov
cld
push
xor
fsubrs
pop
sub
add
inc
rcrl
ret
or
mov
push
outsb
dec
popf
sub
jge
pop
imul
jb
mov
mov
sahf
out
push
push
adc
lods
sub
pop
xor
fildll
mov
mov
sub
pop
int
ljmp
scas
cs
leave
mov
cs
repz
sbb
jp
push
sahf
inc
aas
mov
jp
cmpsl
xchg
loopne
pusha
les
pop
dec
pop
incl
je
jmp
cmpsb
enter
dec
out
int
cltd
sub
xor
gs
fdiv
add
or
mov
pmaxsw
inc
in
out
jbe
out
js
fidivrl
mov
mov
xchg
sbb
sub
push
adc
movsl
jl
cmp
insb
adc
push
hlt
inc
and
gs
inc
jg
dec
xchg
adc
movsl
push
push
pushf
pop
movsl
imul
adc
inc
adc
adc
stos
sub
adc
mov
ljmp
mov
test
out
sarl
mov
mov
imul
jle
push
lea
xlat
leave
mov
cmp
pop
xchg
mov
aad
cmp
xor
sbb
pop
test
nop
lods
fldenv
fisubs
sbb
sub
cmp
dec
in
es
pop
and
dec
jne
das
xchg
pop
sub
nop
sti
cmpsb
je
clc
rcl
iret
roll
ja
in
mov
jecxz
out
popa
inc
cld
clc
jmp
in
iret
adc
rclb
adc
int3
loop
aas
outsb
jecxz
inc
je
jae
out
lret
fisubs
in
pushf
mov
xchg
sbb
pop
xchg
dec
dec
repz
ret
inc
fdivrl
out
outsl
pushf
insl
mov
movsl
aas
shrb
aas
mov
test
mov
flds
shlb
sub
mov
adc
sbb
jmp
push
mov
mov
into
xor
dec
out
push
pop
sbbl
pop
cmp
xor
clc
and
jmp
jno
dec
je
aam
iret
cmpsb
xchg
cmc
jae
push
leave
loop
test
shr
ror
fisttpll
jne
scas
sub
cwtl
ljmp
xor
into
jnp
xor
femms
push
scas
inc
and
dec
into
push
int
enter
sbb
notb
inc
and
push
lret
pop
dec
test
rcrl
xchg
ficompl
add
movsb
cmp
push
stos
add
sbb
repnz
sbb
outsl
xchg
xchg
les
push
fucomip
dec
sbb
out
cmp
pushf
cmp
or
aam
fucomi
add
and
outsl
loopne
inc
jns
xchg
jne
inc
add
insb
add
outsl
imul
jle
push
cmpsl
stc
adc
push
mov
pop
bound
push
ficomps
cmpsb
and
mov
subl
and
stc
fnstsw
push
cmpsb
and
or
enter
jg
sub
clc
or
movsb
popf
inc
dec
int
push
mov
repz
aad
aaa
cmpb
cli
movsb
insl
gs
jns
pop
mov
jae
rolb
aad
mov
aas
lret
imulb
fistps
xchg
mov
inc
clc
mov
mov
push
pop
push
insb
mov
inc
mov
enter
movsb
ja
or
mov
xchg
cwtl
aam
mov
jno
aas
stc
cmp
cmp
xlat
add
push
jns
push
sub
or
test
mov
or
push
dec
mov
adc
cwtl
loope
adc
shlb
or
imul
incb
jnp
mov
ret
cmpsb
frstor
mov
es
pop
ds
or
out
mov
push
mov
rolb
mov
and
jg
cwtl
pop
and
sbb
imul
xlat
add
push
fisubl
out
xor
loop
jb
repz
and
and
inc
mov
cld
fldpi
ja
lahf
movsb
jns
cmc
pop
sti
mov
adc
orl
mov
sbb
dec
mov
mov
hlt
push
lahf
test
jb
pop
sub
dec
push
insb
iret
repz
decl
fbstp
mov
push
aas
movsl
push
xor
mov
loope
mov
loop
dec
test
scas
in
aas
pop
ja
rorl
mov
mov
inc
ja
inc
cmp
fbld
inc
bound
jle
aad
jl
sub
mov
jle
leave
push
lret
sti
xchg
dec
add
out
outsb
nop
lea
and
push
xor
inc
sahf
stc
insb
jle
pushf
insl
scas
das
shlb
aaa
mov
inc
jmp
adc
inc
adc
sbb
sbb
mov
mov
leave
std
push
xor
sbb
in
cmp
ss
pop
push
mov
mov
aaa
push
rcrl
lds
lods
jle
jle
mov
sbb
out
aaa
repz
xchg
push
daa
in
in
cmp
lods
sub
negb
dec
fcomip
les
jb,pt
mov
fdivr
sbb
adc
fbstp
fildl
lcall
icebp
inc
pop
fdivs
enter
lock
mov
enter
test
out
or
jmp
push
and
cmp
pop
in
jp
cmp
pushf
sbb
add
popf
pop
popl
into
cmp
jg
mov
jns
cmpsl
or
sub
jmp
lret
mov
pop
loope
data16
out
stos
scas
push
sub
adc
bound
mov
jge
ret
or
movsb
into
sub
leave
jmp
sbb
enter
shll
mov
sti
push
push
cmpsl
inc
jg
insl
aam
mov
cld
pop
gs
loopne
push
loop
cmpb
sub
cld
roll
dec
mov
les
mov
mov
inc
sbb
hlt
jae
mov
cmpsl
movsl
int3
xchg
push
add
das
clc
xlat
push
dec
or
push
mov
daa
sbb
mov
mov
jno
mov
adc
mov
xor
mov
adc
add
dec
cmpsb
lea
pop
outsl
dec
aam
test
inc
ret
call
and
jge
aam
jge
pusha
sbb
imul
rol
nop
sbb
das
xor
lcall
inc
or
stos
add
xchg
shll
hlt
and
fs
mov
and
mov
out
ja
popf
lahf
cmc
ret
dec
fwait
dec
sbb
icebp
mov
xor
popf
and
and
rolb
sbb
adc
jge
out
pusha
push
dec
sti
mov
add
fcomip
test
dec
test
xor
ret
sbb
push
dec
mov
add
pop
cli
js
pop
jne
popf
cmpsl
rclb
stc
xchg
in
fisttpl
stos
inc
paddsb
and
inc
pop
fs
pop
das
ret
les
jnp
lcall
inc
and
fisubrl
lret
pop
push
sub
jge
jl
push
sbb
jle
sub
pop
sub
pop
dec
add
or
cltd
pushl
pop
out
lret
and
hlt
xor
xor
out
scas
mulb
js
push
or
lods
mov
test
test
inc
add
aam
cmp
push
dec
mov
pop
jbe
xor
in
or
movsb
adc
idivb
jno
and
cmp
push
pop
mov
sbb
xchg
clc
clc
mov
out
test
xlat
call
push
adc
je
mov
in
test
cmp
push
lods
imul
add
mov
jns
cmp
mov
and
pop
into
ljmp
xor
inc
pop
jo
lock
das
lahf
ret
dec
les
pop
xchg
jae
xor
add
lds
xchg
cmpsl
cmp
adc
xchg
in
int
xchg
shl
pusha
dec
lods
jl
pusha
cmc
in
sbb
cmp
icebp
dec
loopne
cmpsl
movsl
lcall
popf
push
movsb
cmp
lcall
mov
jecxz
out
ds
sbb
mov
cwtl
test
nop
cmp
mov
sbb
stos
in
fistl
data16
fcomps
jae
shrl
pop
mov
push
bound
mov
outsl
or
stos
mov
mov
lea
fwait
cmp
cmpsb
add
in
push
out
or
or
mov
xchg
and
dec
pusha
inc
mov
leave
pop
mov
jmp
and
jne
xor
repz
rorl
mov
xchg
mov
rorl
stos
pop
daa
dec
add
cmp
sbb
jecxz
sbb
add
add
mov
mov
aad
mov
sub
ret
test
or
mov
dec
fidivrs
outsl
jno
xchg
repz
adc
out
xchg
jne
adc
pusha
dec
inc
cltd
mov
inc
or
call
xor
add
stos
popa
xchg
pop
sbb
roll
mov
xchg
cmp
jbe
in
mov
or
loop
xchg
mov
shlb
cwtl
sbb
push
mov
faddl
cmp
mov
mov
stos
inc
push
xor
test
or
nop
lock
in
and
pop
inc
insl
dec
imul
in
dec
fldl
push
popa
xchg
pop
xlat
jae
jmp
cmpsl
xor
ljmp
dec
xor
es
aad
ret
jp
cmp
adc
pop
add
je
popa
call
or
loopne
pop
fsubp
stos
aad
sbb
clc
cmp
repz
xor
add
pushf
cmpsl
jae
mov
lahf
ds
sbb
xchg
xchg
mov
jmp
ds
pushf
inc
das
mov
jl
daa
inc
and
adc
dec
jecxz
ja
add
jno
mov
push
scas
dec
inc
xor
imul
out
stos
stos
addb
insb
repz
imul
xchg
cs
push
mov
out
addb
push
xlat
cmp
into
hlt
fcompl
aaa
or
jae
mov
ret
aaa
xchg
jae
cwtl
je
icebp
mov
and
add
cmp
popf
cmp
mov
sbb
cmpsl
jne
jle
sub
imul
sub
stc
sub
or
aad
jmp
hlt
or
lret
das
mov
stos
daa
daa
push
or
xchg
inc
das
adcl
in
shl
xchg
push
mov
vmovd
mov
outsl
pop
pop
dec
lfs
cli
mov
mov
and
mov
shl
fs
sbb
add
in
cltd
out
test
push
lds
movsl
xor
pusha
cld
push
ret
je
sbb
push
pop
sub
mov
cmpsb
aad
jno
push
lret
fs
inc
mov
mov
movsl
shrb
xor
testb
scas
sti
into
jg
push
push
pop
push
jmp
xor
cmc
fnsave
dec
aam
push
xor
or
or
jbe
sbb
loopne
pop
adc
mov
mov
lds
jo
add
outsl
fucom
shll
mov
orb
daa
aad
mov
cli
mov
cs
dec
add
push
mov
repz
jmp
int3
or
daa
icebp
push
inc
push
jecxz
fsubr
xor
inc
call
pop
cmp
and
sbb
pusha
and
loop
or
or
add
xchg
sub
sub
cwtl
jno
sbb
cmp
xor
cli
fwait
xlat
lcall
aam
in
dec
fwait
dec
es
arpl
std
pop
xchg
out
sbb
cltd
jge
push
and
mov
mov
xchg
mov
mov
xchg
sahf
scas
jbe
ret
lret
aad
mov
dec
sahf
call
xchg
xchg
scas
add
fs
js
dec
mov
and
rcrl
lds
insb
cmpsl
add
and
insl
sub
sub
cmp
out
xor
dec
addr16
lea
dec
xchg
mov
xchg
xchg
js
pusha
bound
or
cmp
jecxz
sarb
sub
jno
out
aaa
sub
lret
test
popf
push
xchg
andl
leave
pop
icebp
js
cmpsl
repz
mov
aam
jp
enter
pop
std
cltd
cmp
inc
lock
jecxz
sbb
push
mov
sbb
loopne
cs
mov
sbb
shll
add
dec
and
imul
jbe
sub
inc
clc
mov
stos
cld
xchg
lds
pop
sub
jb
cmp
xchg
mov
jo
and
mov
aas
shl
mov
std
int3
cmp
je
cmp
cltd
sub
pushf
xchg
dec
dec
aam
jmp
cmp
cmp
insb
xor
pushf
in
push
or
out
add
aaa
mov
jb
idiv
dec
jmp
mov
cmp
push
clc
mov
test
es
pop
rcl
push
das
jmp
mov
cmc
das
ret
clc
aaa
jle
test
arpl
divb
shll
in
inc
push
jp
sub
dec
add
mov
movl
or
inc
fldt
lret
add
inc
sub
icebp
adc
jo
mov
addb
mov
and
dec
negb
dec
sti
repz
enter
inc
jno
dec
lods
sahf
stos
mov
sub
shl
mov
roll
or
adc
in
xchg
fdivs
lcall
mov
sbb
add
out
lds
js
cli
gs
cmpsl
mov
xchg
add
loop
jle
mov
lret
inc
cmc
push
lret
call
jno
mov
or
xor
lock
clc
fcoms
hlt
addl
mov
dec
frstor
mov
data16
mov
sarl
pop
cmp
or
ret
cmp
and
pop
inc
fwait
cmp
dec
pushf
in
push
in
mov
mov
add
mov
scas
ss
je
arpl
sub
mov
ja
out
cmp
fwait
dec
xor
lods
mov
pop
imul
mov
xor
pop
scas
jle
cld
dec
daa
sbb
mov
sbb
and
jge
and
pushf
xor
dec
repnz
js
and
sbb
lods
cmpsl
stc
sarl
pmaxub
adc
inc
inc
jns
adc
rcrl
jg
jg
mov
or
cwtl
fs
sub
mov
xor
insl
ss
arpl
ss
jge
int
adc
push
xchg
out
or
cltd
lea
imul
test
sbb
pshufw
lds
adc
mov
gs
lock
cmp
nop
adc
cli
ja
mov
xchg
in
fistps
inc
fwait
jbe
inc
xor
xchg
cmp
repz
js
adc
shrb
rclb
lods
insl
sbb
push
fbld
clc
add
addl
je
xchg
inc
mov
xor
xchg
push
mov
and
aam
test
lahf
arpl
repnz
cwtl
call
xchg
xchg
mov
lds
lds
push
adc
les
mov
mov
jmp
xor
cmp
lcall
test
add
lahf
xor
or
cmp
bswap
mov
jg
mov
les
std
popa
pop
mov
fistpl
mov
jmp
jle
cmc
or
adc
add
and
movsb
push
aaa
cli
lds
and
pop
jb
fwait
xchg
std
adc
sub
mov
loopne
add
xor
add
cmp
rcl
cmc
sub
iret
imul
aad
sbb
sarl
mov
rorb
add
shlb
jmp
xchg
mov
test
popa
gs
sbb
fprem
cwtl
movsl
mov
lret
jecxz
into
push
add
xchg
rolb
fildl
decb
loope
mov
addr16
testb
cmp
aas
inc
push
add
jp
inc
mov
in
out
push
sbb
sbb
pop
or
mov
or
xchg
xor
pop
fwait
movl
jnp
loope
jle
mov
push
jmp
jge
outsb
ljmp
sub
cld
jo
sub
arpl
enter
dec
and
push
icebp
movsl
inc
mov
inc
aaa
dec
dec
movsb
in
ficoml
mov
ljmp
push
stos
popf
icebp
cmp
sub
mov
jecxz
loope
or
adc
jg
mov
adc
sbb
lock
shlb
pop
inc
jns
and
inc
push
inc
lods
clc
movsl
in
mov
sub
nop
add
and
testb
sub
movsl
inc
ret
loope
cmpsl
xchg
lea
dec
xor
insl
clc
in
popa
add
jae
imul
pop
ficoml
pop
sub
icebp
inc
mov
push
push
inc
jge
jns
jbe
imul
ljmp
pop
test
ret
mov
in
jecxz
cld
stc
xor
aas
cld
pop
inc
sahf
push
pushf
xchg
mov
ffreep
stc
shrb
xor
xchg
adc
inc
test
inc
xchg
push
mov
rorl
mov
jae
sbb
push
jne
jnp
push
xor
cmpsb
test
cmpsl
loopne
in
sbb
mov
or
push
leave
cmp
mov
dec
jb
sub
dec
dec
jbe
enter
bound
enter
scas
shr
cmpsb
xor
and
adc
shlb
xchg
and
fs
push
loopne
mov
out
xchg
jp
dec
jp
inc
lock
mov
out
push
fmull
push
outsb
imul
pop
mov
jmp
shl
fstpl
jecxz
mov
cmpsb
daa
subb
cld
data16
xor
es
bound
cmp
inc
lock
mov
pop
stos
add
pushf
imul
sbb
mov
xor
xlat
inc
enter
js
cmp
xchg
shlb
push
insl
fdivs
imul
jecxz
cmpsl
insl
xor
xchg
dec
insb
aaa
outsb
mov
insl
jne
arpl
bnd
sub
cmp
scas
out
les
into
xlat
idivl
je
xchg
arpl
and
gs
bound
scas
adc
jle
mov
xorl
dec
cmp
inc
mov
cmp
adc
sbb
mov
out
dec
mov
std
jne
pop
sbb
push
test
push
cwtl
jbe
lock
lods
sbb
and
mov
pusha
stos
inc
add
rorb
sub
lcall
leave
jl,pn
xchg
ja
sub
test
sub
or
push
sbb
jle
add
lds
jo
je
enter
jl
adc
nop
adc
cmpsb
jmp
adc
insb
inc
jno
daa
xor
mov
mov
pop
jne
fidivrs
xlat
adc
dec
xchg
popfw
popl
mov
shll
mov
pop
adc
es
rcrl
mov
push
leave
mov
or
adc
int
push
cld
cmp
cmp
mov
jmp
dec
sti
es
inc
adc
cmc
stos
ss
aaa
adc
pop
dec
mov
pop
dec
lds
mov
cmp
mulb
dec
int
popf
pushf
sbb
mov
fs
loope
sbb
cli
lds
outsb
xor
jl
push
push
dec
jp
mov
adc
stos
adc
in
ja
inc
insb
dec
popf
es
out
jno
pop
lods
adc
dec
xor
adc
adc
cmp
cmc
scas
and
cwtl
mov
rorb
dec
nop
add
addr16
fisttpl
sbb
and
in
pop
cwtl
mov
mov
icebp
xor
xlat
loope
mov
xor
dec
xchg
rorb
or
stos
mov
dec
stos
hlt
and
inc
out
lods
dec
and
stos
mov
cmp
les
sub
movsb
pop
push
pop
andb
fdivs
dec
sbb
mov
push
in
fnstcw
push
xchg
push
lds
dec
mov
daa
mov
addr16
andb
scas
scas
xchg
mov
lret
sbbl
inc
push
hlt
sbb
inc
aad
into
or
pop
int
xchg
lret
inc
addr16
in
outsb
pop
scas
cmpsl
push
flds
sub
inc
int
ret
aam
lods
cltd
add
jmp
roll
sbb
pop
push
adc
push
push
push
out
imul
cmp
dec
les
inc
adc
sbb
mov
jg
in
scas
test
ror
xchg
push
mov
cltd
sbb
or
test
mov
jg
adc
ja
mov
and
mov
fwait
xor
mov
in
mov
push
stos
mov
dec
cmpsl
loope
jo
push
sti
sbb
fcomi
mov
loope
testb
stc
jns
mov
out
rcll
hlt
mov
rorb
mov
add
mov
and
daa
fistpll
arpl
cli
in
dec
push
inc
das
iret
test
jnp
mov
mov
les
sub
mov
push
push
and
dec
ret
inc
mov
mov
pop
nop
repnz
add
sbb
jmp
xlat
push
or
shlb
cmp
push
xchg
sub
or
scas
adc
mov
sar
xchg
aad
inc
std
sti
sub
mov
lahf
movsl
ret
or
lock
xchg
xchg
jns
outsb
dec
in
or
mov
jno
scas
jne
pop
inc
or
popf
in
fwait
mov
ss
lds
mov
test
mov
and
clc
adc
sbbb
add
rcll
rcr
lea
scas
jmp
xlat
adc
inc
fs
insl
stos
xchg
into
jge
out
jae
and
outsb
push
pop
repz
mov
push
sbb
and
arpl
pop
mov
icebp
inc
pop
xchg
ja
movsb
ret
mov
mov
xor
sbb
mov
cmp
jo
repz
adc
stc
cwtl
mov
enter
fistpl
sbb
aas
xor
lea
inc
int
xor
xor
stos
aas
fdiv
xchg
int3
shrb
icebp
fcoml
ret
into
or
bnd
inc
push
push
sub
jl
call
xchg
adc
sahf
int
lret
repz
pop
rcr
popa
imul
imul
enter
or
jl
aam
sub
push
inc
addps
test
enter
or
stos
cmpsl
add
mov
ljmp
pusha
fdivp
out
scas
sbb
mov
aam
data16
push
add
shlb
loope
lock
mov
or
pop
rcr
je
push
arpl
mov
in
fs
add
shlb
and
test
out
jne
addr16
test
hlt
cmp
int3
xchg
mov
adc
mov
cmpsl
out
test
push
int3
lahf
xlat
dec
cmpsl
dec
mov
dec
sbb
outsl
mov
adc
bound
ljmp
jle
adc
or
aaa
push
into
or
xchg
js
xor
adc
and
sbb
loope
adc
roll
inc
xchg
daa
and
pop
out
adc
jnp
hlt
fildl
dec
jecxz
stos
js
jg
and
xlat
push
jns
into
inc
sub
cli
mov
mov
pop
xchg
mov
cmpsl
xor
insb
fdivrs
adc
out
or
fldl
mov
pop
mov
mov
push
into
dec
lcall
ja
in
xorb
mov
jmp
xchg
nop
mov
mov
xor
arpl
xor
add
sbb
adc
and
push
jo
outsl
push
or
stos
fmulp
xor
lds
lea
fnsetpm(287
cmp
xchg
mov
lods
mov
cmc
mov
popa
jmp
pop
fcmovnb
mov
fld
cmp
push
test
add
jl
xchg
ss
mov
add
mov
clc
in
fwait
cmpb
cmpb
adc
or
lods
mov
pop
inc
mov
push
inc
sbb
arpl
add
mov
shll
sub
lds
loope
push
sbb
add
pop
push
lahf
inc
cmp
jbe
sti
mul
sbb
cmp
jmp
mov
or
cli
jns
push
fsubl
test
enter
push
xlat
or
cltd
sub
inc
sti
xchg
adcl
mov
xchg
stos
pop
adc
loope
mov
stos
sarl
sbb
sbb
addr16
lahf
dec
or
pop
inc
fwait
movsb
mov
aad
leave
or
mov
jne
pop
pop
or
pop
imul
es
stc
jmp
mov
add
push
jge
cmp
jge
das
and
lock
loopne
dec
pop
mov
adc
mov
adc
aam
or
fnstenv
cmp
cmp
xor
mov
out
ficoms
movsl
add
call
jo
insb
dec
mov
insb
hlt
ljmp
popa
sbb
popa
sub
imul
mov
pop
push
inc
hlt
pop
cmp
push
lods
lcall
xchg
dec
adc
stos
outsb
leave
or
fmuls
mov
and
shlb
cmp
sbb
inc
sbb
pushf
lea
dec
loopne
push
xor
outsb
sub
adc
mov
xchg
aas
sub
rolb
mov
call
shll
xchg
cmp
and
jmp
inc
pop
mov
sbb
xchg
mov
call
cmpsb
inc
fidivl
out
pop
mov
int3
inc
repz
sub
lea
push
lret
pop
cmpsb
xor
leave
cmp
stc
lret
out
mov
sbb
mov
pop
out
std
stos
out
lahf
shrb
adc
jne
mov
scas
sbb
sub
push
rcr
out
icebp
jg
xor
jmp
hlt
or
add
and
repz
xor
dec
mov
mov
repnz
stos
outsb
dec
notl
loopne
int3
lcall
mov
adc
or
mov
addr16
clc
mov
sarb
dec
pop
out
addr16
jno
cmpl
orl
dec
inc
in
test
shll
cmp
push
inc
loop
into
push
sarl
cmc
mov
mov
lods
or
test
xchg
hlt
dec
xchg
mov
and
in
dec
or
sbb
call
out
test
push
in
xchg
jl
mov
jne
fsubr
cs
push
test
bound
cmpb
das
nop
fmulp
imul
call
mov
mov
add
int
shr
inc
add
faddl
cli
mov
addr16
rcr
pop
leave
rcl
scas
pop
push
loope
mov
cmpsl
cld
dec
adc
adc
clc
aad
inc
sbb
pop
xchg
pop
js
jo
into
popa
jne
movsl
ret
je
add
jbe
add
dec
sbb
cli
push
std
es
jno
lret
int
cmp
mov
js
fstl
push
call
jno
cmp
aas
pop
pushf
jo
lods
mov
loop
mov
add
mov
xchg
fidivrl
sahf
or
mov
or
insl
xor
or
push
xchg
cmp
xor
sub
cmpsb
arpl
hlt
popf
xchg
inc
or
sbbb
pop
aad
loop
push
enter
mov
ret
jbe
push
pusha
sub
addr16
or
in
mov
out
push
jo
push
shll
jnp
negl
icebp
adc
int3
push
xchg
jbe
aam
push
mov
sub
push
mov
pop
xor
xor
mov
xchg
stos
out
add
xlat
lahf
movsl
or
add
dec
cmpsl
adcl
shll
mov
ret
push
loop
sbb
lret
xchg
nop
jg
je
sbb
push
hlt
push
jae
add
fildl
adc
jecxz
sub
out
cwtl
cmp
ss
jmp
push
xor
mov
mov
aad
cld
pop
mov
adc
out
lea
frstor
imul
cli
or
movq
scas
bound
popf
imul
pop
out
sub
lock
mov
mov
and
repz
pop
jno
cmp
mov
sub
mov
dec
sub
or
ja
ja
stc
cmp
dec
mov
fcomps
std
imul
bound
pushl
mov
sti
ds
dec
aam
push
lret
addr16
mov
aad
fbld
ret
sbb
test
mov
or
nop
pop
daa
fiaddl
out
jo
stos
lock
jle
adc
mov
xor
stos
push
and
add
jns
xor
sub
mov
movsb
mov
inc
push
xchg
mov
inc
jb
cmpsb
sahf
mov
adc
sub
inc
insb
cmp
push
sarb
mov
ret
loope
test
bnd
daa
outsb
xchg
out
inc
stos
jno
mov
ret
and
push
pop
inc
rcll
mov
fxam
shr
adc
xor
adc
xor
and
out
js
lock
cs
imul
mov
cmp
fwait
mov
out
mov
add
mov
loope
mov
test
mov
dec
mov
mov
mov
repz
outsb
cmp
lret
loopne
lcall
push
fsubs
std
scas
jb
out
mov
loop
dec
jmp
push
movsb
mov
sahf
pop
insb
sbb
lahf
adc
jmp
adc
xor
inc
mov
xor
xor
stc
inc
int3
and
push
divl
aam
arpl
loop
stc
jmp
cld
pushf
xchg
cli
add
jmp
js
and
adc
ret
jle
push
pop
lret
les
mov
push
cmp
in
sub
jne
and
bound
jne
and
fidivl
inc
adc
je
shrl
fs
xchg
out
cli
dec
gs
sub
or
pushf
sub
cmc
mov
pushf
outsl
adc
out
mov
mov
pop
popa
cmp
jl
mov
inc
or
scas
push
dec
xchg
jmp
adcl
inc
mov
fwait
or
ret
fcoml
xchg
lea
bound
or
adc
adc
sbb
dec
mov
aas
adc
arpl
or
out
mov
or
xchg
sub
int3
push
or
in
out
aam
lods
nop
mov
movsb
es
sbb
rdpmc
sub
cmp
jne
lret
jno
in
fstps
xchg
xchg
std
xor
pop
jbe
inc
push
ljmp
pop
push
lods
add
adc
and
or
mov
bound
imul
add
fisttpll
mov
mov
mov
sub
sbb
loop
out
les
push
mov
nop
mov
pop
cmp
push
fimuls
pusha
mov
adc
and
out
aaa
test
cmpsl
or
add
sbb
adc
and
enter
mov
les
ja
push
xchg
rorl
imul
xor
shll
xchg
xchg
into
pop
insb
arpl
cmp
sarl
popa
loop
mov
xchg
iret
enter
cmp
sbb
jns
pushf
cmp
push
cmp
adc
lods
shlb
outsb
call
fmuls
icebp
movsl
mov
lret
inc
xor
dec
movswl
stos
jmp
fisttpl
aas
aad
call
push
jecxz
aad
fsts
mov
in
fadds
xor
or
mov
es
dec
cltd
and
out
in
pop
dec
and
loope
das
inc
aam
xchg
outsb
mov
inc
lds
cmp
jg
xchg
orb
adc
mov
fisubrs
fcomps
into
mov
les
or
xchg
mov
in
mov
push
imul
leave
call
das
dec
cmpsl
or
fiadds
pop
cmp
or
icebp
push
sti
imul
int3
jno
xchg
jle
dec
call
mov
je
movsb
pop
nop
sbb
or
ljmp
mov
dec
xlat
mov
jae
and
cmp
or
insl
xchg
stos
int3
sbb
or
stc
or
push
jecxz
pop
sub
xor
ss
pop
inc
xor
xchg
jo
add
fs
data16
xchg
xor
push
jnp
aaa
pop
xchg
dec
push
xor
in
push
adc
test
push
ret
sub
adc
les
adcl
popf
lea
out
sbb
fwait
inc
ss
ds
cmp
jbe
jmp
jb
jp
cmpsl
or
dec
mov
loop
xchg
push
sub
out
fildll
mov
in
dec
pop
cmp
test
fbld
xchg
mov
stos
into
testb
jp
mov
jb
mov
push
sub
xor
ret
leave
loopne
xchg
mov
and
int3
mov
je
jl
mov
mov
lock
add
sbb
pusha
jl
jae
ljmp
aam
fucomip
jmp
mov
mov
es
mull
hlt
push
xchg
pop
mov
pop
mov
and
mov
dec
add
loope
and
xor
into
and
mov
xchg
std
incl
sbb
sub
lock
scas
call
jecxz
out
cmc
add
lret
insl
stc
add
test
movsl
cmp
fcom
lahf
mov
flds
js
mov
sti
movsl
dec
jnp
sbb
add
ret
pop
or
sbb
lret
nop
and
mov
loopne
ret
pop
lcall
call
jne
cmp
mov
lea
mov
and
mov
push
enter
add
xor
in
add
jns
add
push
pushf
jg
outsl
sarl
or
mov
int
in
aas
mov
mov
into
xchg
or
clc
out
pop
pop
jecxz
sub
shl
push
push
mov
dec
adc
push
pop
mov
inc
push
sub
mov
jns
xor
adc
pop
popf
cmc
mov
std
lods
rcl
repnz
inc
mov
test
add
add
xchg
jae
adc
sub
xor
inc
data16
sub
dec
fsubrl
mov
push
dec
inc
adc
lret
sbb
pop
mov
lods
xor
sti
popa
cld
pop
xchg
mov
ret
push
inc
call
jae
inc
inc
outsl
pop
int3
cmpsb
insb
inc
aaa
xlat
loop
filds
push
pop
push
adc
pop
or
fidivrs
cmp
xchg
mov
mov
mov
aaa
inc
mov
push
or
jo
or
sbb
scas
fld
cmpsb
mov
xchg
push
sub
push
pop
push
int
adcl
sbb
jg
and
add
test
lcall
or
push
movb
adc
jne
add
mov
je
and
test
fcompl
push
push
xchg
mov
mov
mov
mov
sub
js
test
sub
pop
faddl
jecxz
lret
pop
cs
outsl
jle
lcall
jns
sub
adc
adc
popa
inc
es
and
dec
and
movsb
inc
or
jg
mov
push
ja
jns
mov
loopne
mov
or
pop
insb
jl
dec
add
mov
sahf
xchg
xchg
dec
pop
and
adc
adc
jmp
in
inc
outsl
mov
cmpsb
outsb
lock
jns
in
inc
lds
imul
cmpl
xchg
lahf
cltd
sbb
cltd
push
dec
push
stc
rorl
clc
pushf
mov
pop
fdivl
mov
inc
outsb
cld
lahf
jle
leave
repz
jb
dec
mov
int
fisubs
mov
outsb
in
pop
pop
in
mov
and
sbb
or
imul
cmc
sti
xor
adc
mov
jbe
imul
test
jecxz
test
rcll
and
lock
rcrb
cmp
test
mov
cwtl
repz
rcrl
arpl
mov
dec
dec
jne
push
mov
mov
mov
jg
lret
sbb
sbb
xlat
ds
jp
int3
jmp
mov
out
xor
data16
or
jge
cmp
jns
sbb
xor
mov
cmp
pop
jno
mov
outsl
xchg
in
out
add
jge
inc
inc
or
dec
cmp
xor
mov
push
ret
aam
push
rorl
or
sub
mov
xchg
sub
lcall
mov
adc
call
es
mov
mov
movl
mov
scas
fidivrl
mov
xor
mov
mov
sbb
inc
xchg
sar
outsl
jno
mov
cld
cs
and
icebp
lods
inc
in
xor
in
xchg
call
push
vcmpss
sbb
push
sub
mov
call
arpl
aad
arpl
inc
sub
imul
sbb
mov
ja
xlat
sub
std
and
pop
fwait
xchg
pushf
mov
idiv
dec
and
jecxz
pop
data16
daa
hlt
mov
add
jmp
test
mov
xor
rolb
frstor
sub
push
xchg
ret
mov
nop
frstor
ja
sub
inc
push
out
loopne
mov
shr
add
xchg
jl
out
sub
cmp
add
enter
out
repz
js
std
movsb
jno
sub
and
jno
push
pop
ret
cltd
sub
daa
inc
sub
cmpsb
mov
roll
lret
fs
fs
fbld
neg
sub
mov
jne
mov
jnp
leave
push
jns
lahf
adc
jl
lahf
outsb
jecxz
ror
fbstp
dec
insl
pop
add
jno
aad
lock
cwtl
inc
fdiv
dec
lea
sbb
out
add
call
mull
jecxz
inc
sub
shll
push
push
stos
pop
insb
mov
and
mov
cmp
inc
add
rcrl
mov
mov
add
stc
cmpb
mov
ljmp
ret
pop
push
inc
out
and
fldl
jg
mov
popf
or
add
fmuls
jmp
and
mov
hlt
es
shr
jne
ljmp
lcall
jne
mov
pushf
mov
test
in
pop
rol
test
mov
roll
pop
test
sub
out
cwtl
imul
icebp
sub
xor
mov
gs
xorb
push
out
mov
ds
mov
mov
imul
mov
andl
xchg
pop
xchg
push
aaa
clc
jnp
sbb
hlt
mov
xchg
aaa
sbb
wrmsr
add
inc
arpl
jb
lods
loop
fwait
test
sbb
and
mov
mov
cmp
push
jmp
add
xchg
cmpsb
pop
adc
lcall
dec
mov
push
jbe
jecxz
push
push
push
xlat
xchg
dec
push
pop
lods
push
cld
mov
fdivr
ret
lahf
and
test
jne
lea
inc
mov
lea
sbb
xor
mov
in
or
mov
into
sub
arpl
sub
cltd
jns
dec
adc
sub
jge
adc
xchg
xor
adc
int
pop
test
xchg
ljmp
jmp
repnz
xchg
adcl
xchg
ja
add
imul
sbb
lcall
push
cmpsb
sbb
push
or
pusha
dec
mov
mov
mov
int
adc
int
daa
cmpsl
lock
jno
mov
mov
dec
adc
or
fcomip
addr16
cltd
push
shl
xchg
xor
lret
cmp
jne
test
add
and
add
mov
sub
faddp
out
aam
xchg
stc
xchg
int
mov
fdiv
dec
sub
rorl
adc
fiaddl
lret
mov
xchg
mov
pop
in
imul
adc
push
push
inc
outsl
dec
pop
pushf
insb
decl
sub
fwait
xor
andl
push
jle
add
pop
add
adc
sub
sub
cltd
add
loop
mov
jns
rol
or
lcall
out
cwtl
out
fimuls
leave
movsl
adc
ja
add
out
and
lcall
add
gs
mov
cmpsb
adcb
loope
or
sahf
sbbb
push
xlat
mov
sub
push
sbb
notb
and
outsb
std
cmp
std
testb
jne
fs
push
push
jno
push
pop
bound
xchg
dec
pmaxub
lods
xchg
je
test
mov
daa
jnp
mov
mov
test
mov
in
cltd
jne
sub
xor
outsb
ret
int3
sub
push
cmp
xor
xor
aas
bound
inc
subb
pop
push
fdivr
movsl
movsb
gs
repz
fwait
add
fsts
add
test
inc
je
rolb
cli
fwait
xchg
sub
cmpsl
psllq
xchg
loop
xorb
or
mov
and
aam
cmp
inc
nop
int
jp
cltd
add
jmp
push
and
pop
mov
lahf
mov
sbb
loopne
into
sub
sub
add
mov
test
adc
rdpmc
mov
das
arpl
insl
dec
lock
int3
mov
jb
push
push
insl
cmp
inc
lods
pushf
stc
mov
not
mov
add
add
xchg
sbb
inc
gs
and
gs
aad
or
imul
pop
roll
jne
mov
xor
push
and
xor
out
mov
iret
pushf
adc
sbb
jg
push
push
fs
mov
pop
repnz
inc
xor
mov
inc
fcomps
arpl
add
frstor
and
cwtl
imul
mov
adc
pushf
adc
insb
out
test
mov
insl
data16
popf
roll
stc
push
mov
or
adcb
int
stc
lods
dec
jge
jae
and
push
pop
adc
lock
sbb
inc
xchg
psrld
das
stc
mov
cmp
sub
popf
mov
xor
cli
jle
clc
pop
mov
sub
sbb
xor
iret
sub
stos
sbb
decl
pop
xor
dec
std
push
mov
jb
jae
sbb
cmp
roll
jp
sbb
mul
jecxz
pop
adc
cmp
push
inc
jne
mov
jne
or
repnz
add
xchg
sbb
sub
jg
sti
xor
inc
sub
mov
pop
int
fsubs
stos
adcb
cmp
pop
test
sbb
pop
inc
aas
mov
sub
cmp
cmpsl
stc
and
adc
scas
cmp
ja
sub
xchg
mov
jae
mov
adc
leave
stos
sub
pop
pop
addl
fwait
pop
loopne
mov
insl
pushw
jns
sbb
dec
jge,pn
insl
fmul
fwait
inc
mov
aam
cmp
in
xor
push
out
mov
fcos
test
cmp
in
andb
pop
or
inc
icebp
mov
mov
dec
and
out
scas
sub
or
imul
mov
pop
arpl
push
daa
hlt
lret
jg
ret
sub
push
add
daa
xchg
sbb
mov
hlt
ss
repnz
mov
notb
dec
mov
cmp
pop
xchg
mov
enter
cmpsl
rolb
fcoms
jl
arpl
or
pop
pop
clc
in
shll
sub
scas
ds
xor
xlat
ret
mov
mov
jne
add
dec
call
pop
in
and
xchg
inc
xchg
daa
sub
dec
test
iret
inc
iret
xchg
es
xor
xchg
std
pop
aaa
mov
ret
adc
mov
dec
dec
addr16
jle
sub
adc
retw
gs
je
lcall
enter
pop
in
xchg
sub
in
jnp
lret
and
cwtl
arpl
lahf
arpl
mov
jmp
and
pop
adc
adc
das
mov
mov
loopne
xor
mov
mov
sti
dec
jb
push
cli
fs
add
nop
testb
or
and
push
popf
jge
mov
adc
sub
lods
call
outsl
pcmpgtb
and
jecxz
sub
pop
mov
and
cli
imul
int3
int
push
sub
cmpsb
pop
movaps
mov
stos
cmpsb
test
xchg
cmp
fisubrs
sahf
sub
and
inc
jl
push
out
pop
cmp
push
mov
jmp
pop
xchg
xchg
sbb
daa
mov
shrb
dec
imul
jae
or
bound
dec
jne
push
and
repnz
mov
push
popf
cld
mov
xchg
pop
jl
jmp
mov
jae
sub
jmp
push
jle
mov
sahf
xchg
mov
xor
faddl
jns
sbb
nop
aam
xchg
sahf
push
into
and
gs
mov
int3
lods
xchg
aad
addl
sub
aas
in
call
icebp
sti
mov
push
or
mov
scas
push
sub
pop
test
lret
sub
mov
push
mov
xchg
or
iret
push
sub
cmpl
or
gs
adc
gs
mov
dec
push
lcall
fildll
outsb
jg
and
and
lret
std
lret
mov
mov
xorb
insl
adc
add
les
jo
aaa
mov
dec
loopne
xor
xchg
and
jp
lods
hlt
fwait
andb
mov
inc
std
cs
pop
lret
push
pop
sahf
fsubl
mov
js
mov
mov
add
mov
sub
imul
mov
mov
and
xchg
lods
and
pop
cmp
stos
jbe
xor
xor
sub
rorb
shrl
arpl
fsub
rorl
mov
imul
xchg
push
cs
jb
fldt
cmpsb
movsb
pushf
mov
add
shll
mov
adc
add
and
dec
sub
jns
xchg
insl
std
adc
cmp
out
sbb
test
loopne
in
data16
daa
roll
and
inc
mov
pushf
aam
jmp
mov
mov
in
int
jo
lods
test
xchg
jbe
or
insl
xor
adc
mov
les
mov
sbb
sub
xor
xchg
out
sbbl
push
mov
xchg
adc
je
jge
hlt
adc
xchg
je
mov
into
mov
aas
insl
pop
ljmp
xchg
out
xlat
mov
xchg
mov
into
out
jl
sti
gs
out
cwtl
cld
add
sbb
sub
xchg
jno
mov
push
fs
rorl
scas
aaa
mov
mov
in
cmpsl
in
test
or
add
or
lock
stos
push
and
push
mov
test
jo
in
addr16
xor
fwait
add
mov
pop
dec
insb
nop
adc
add
jae
mov
mov
rcll
nop
mov
mov
push
dec
stos
movsb
xor
mov
je
or
mov
int3
fdivs
xor
push
jo
js
mov
push
mov
xor
ds
inc
addl
jbe
lcall
into
sbbl
les
test
out
add
cmp
loop
scas
push
mov
adc
je
add
cs
sub
or
xchg
sub
scas
js
mov
or
in
add
jnp
sbb
in
dec
mov
mov
mov
dec
mov
push
or
fsubs
out
mov
mov
mov
dec
pop
pop
sub
pop
ds
jl
ss
mov
adc
dec
loopew
imul
fnstsw
push
adc
repz
jo
pop
dec
inc
push
movsb
inc
xchg
popf
inc
jp
test
add
xor
pop
popf
lret
inc
add
cmpsl
xor
cmc
stos
stc
mov
or
xchg
or
sbb
pop
test
or
lds
xor
test
stc
scas
int3
pop
fiaddl
push
loopne
rcr
int
flds
cld
icebp
sbbb
sbb
daa
mov
outsl
int3
xor
xor
xor
addr16
fwait
inc
fs
int3
adc
arpl
dec
pop
outsb
jae
lahf
dec
mov
test
cmp
ja
lcall
pop
ja
mov
test
dec
hlt
or
loop
xor
shll
ds
sub
and
mov
and
jno
and
adc
lods
cmp
inc
jle
fists
mov
arpl
test
mov
mov
ss
jo
dec
int3
insb
mov
enter
sarb
xor
sbb
fwait
test
dec
lahf
cltd
xchg
xchg
sbb
cmpsb
mov
xchg
add
inc
iret
pop
hlt
add
jmp
jnp
push
mov
leave
inc
jecxz
fnstcw
push
xor
fnstsw
dec
into
mov
sbb
add
fldl
aaa
fstpt
shll
or
mov
jae
push
lds
xchg
loop
bound
fnstcw
lods
fxch
xchg
pushf
add
sbb
mov
sahf
add
dec
adc
pusha
lds
inc
jl
xor
jg
mov
jns
lahf
xlat
mov
insl
cltd
ss
dec
inc
bound
push
leave
ss
daa
cmp
fwait
jo
imul
jmp
ret
test
cmp
adc
dec
mov
outsl
ljmp
dec
roll
jb
je
sbb
dec
arpl
inc
adc
rcll
jae
and
push
loopne
pop
and
out
sbb
mov
and
int
enter
or
mov
aas
jge
mov
cmp
pop
inc
pop
rorb
push
inc
fcmovne
cli
adc
lods
push
fildl
mov
dec
out
xor
and
test
xchg
push
outsb
adc
pop
sub
inc
in
loope
push
je
fdivl
push
hlt
insb
sub
repz
out
dec
bound
sbb
hlt
add
adc
std
negb
dec
aam
test
test
jmp
sub
and
rolb
fisubs
or
jp
cwtl
bound
dec
enter
push
mov
push
mov
add
pop
cld
lds
xchg
mov
sbb
scas
enter
inc
out
push
push
add
inc
fldt
cmp
int
ficoml
sarb
out
xchg
inc
push
pusha
clc
negl
mov
or
mov
xor
scas
push
push
pop
gs
jp
inc
sbb
mov
push
push
jle
movsl
xchg
outsl
lret
stos
fisubl
ret
add
into
mov
mov
int3
and
ljmp
in
sbb
mov
imul
and
dec
mov
ja
subb
mov
lret
pop
add
es
sbb
inc
lea
gs
outsl
mov
mov
loop
into
mov
imul
insb
jnp
sub
mov
mov
sti
or
leave
pop
mov
in
jno
mov
fdivr
pop
ss
aad
movsl
xor
in
push
pop
jns
pop
mov
jge
sbb
pop
mov
jbe
in
stc
sahf
and
clc
cmp
mov
inc
neg
inc
dec
push
jnp
insl
xor
les
lea
imulb
mov
repnz
fstpt
add
jmp
shlb
lock
jmp
mov
into
lcall
iret
insl
lcall
mov
push
jecxz
fildll
mov
lods
sti
fld1
sub
add
pop
icebp
aad
rcrb
jge
prefetch
mov
int
daa
jno
leave
insb
dec
test
fcmovnb
ret
and
in
arpl
stos
xor
repnz
mov
mov
jno
leave
leave
aas
mov
lret
sbb
cwtl
enter
sbb
mov
or
rcll
add
add
subl
inc
test
inc
outsl
push
pop
cmp
testb
add
xor
int3
out
add
jno
mov
notb
push
pop
cmpsl
or
push
movsb
lock
mov
add
test
sub
pop
mov
jecxz
arpl
sub
loope
jg
jns
add
mov
outsb
or
mov
mov
cmp
mov
jne
pop
and
loop
sub
outsl
sbb
dec
sub
jb
jns
add
pop
imul
lock
fs
jns
out
push
dec
mov
dec
add
jmp
mov
arpl
push
leave
loope
aaa
xchg
in
cmp
cmp
or
jno
adc
push
cmc
mov
pop
mov
out
mov
rcl
mov
add
xor
dec
pop
cmp
insb
out
cmp
pusha
pop
inc
adc
ds
aam
mov
fsts
sub
mov
xchg
add
sbb
dec
jl
iret
insb
pop
sbb
xor
pushf
jb
mov
pop
das
in
jecxz
arpl
or
addr16
enter
popf
mov
call
adc
sub
shrl
mov
std
jl
xchg
mov
lods
or
addr16
fnstsw
stos
lods
cli
dec
xchg
xor
xor
add
dec
xchg
mov
in
popf
sbb
jl
adcb
aas
xor
clc
lods
jbe
inc
pop
movsb
dec
mov
pop
jmp
jg
xor
popf
xor
sti
imul
clc
fistpll
les
xchg
dec
sub
dec
jmp
sub
jno
mov
orb
dec
test
jo
nop
jg
mov
jg
mov
leave
push
inc
cmp
nop
mov
xchg
mov
or
imulb
sub
xor
sbb
cmp
inc
clc
mov
notb
jne
dec
jecxz
int
mov
or
inc
out
rolb
stos
pop
mov
dec
push
stos
jnp
xor
icebp
repz
popf
es
inc
cmp
popa
cmp
out
rcr
test
cmp
sbb
loope
jle,pn
xor
push
das
sub
jno
mov
fcomi
push
imul
movsb
mov
rcrl
ffreep
fst
adc
mov
leave
std
mov
sbb
popa
lret
iret
mov
pop
jns
mov
pop
mov
add
push
int
dec
mov
in
mov
mov
and
fxch
lret
mov
dec
jb
repnz
dec
stos
fwait
adc
add
add
lret
mov
sub
xchg
sub
jb
cmp
push
lods
sub
mov
adc
jo
popa
cmpsb
push
lret
push
pop
setbe
xchg
movsb
mov
cli
lahf
cmp
mov
dec
mov
jnp
cwtl
mov
and
pop
fdivs
out
sub
or
inc
sub
roll
outsb
sub
adc
and
jae
pop
scas
je
outsb
cmp
sub
xchg
push
mov
imul
mov
insl
aas
mov
fstpt
pop
fsubrs
lret
mov
cmp
pop
loopne
shl
aas
stos
scas
nop
push
xor
cs
into
add
add
test
stos
mov
dec
or
std
out
mov
nop
and
rorb
push
cmp
jp
mov
xorb
and
enter
jno
mov
and
xchg
in
sbb
filds
xor
xor
test
pop
sbb
mov
ds
cmp
dec
and
cmp
or
sub
push
pusha
sbb
jns
aam
xor
insl
push
arpl
jns
mov
outsb
stc
gs
cmpsl
cltd
jns
int3
push
stc
scas
jg
popa
inc
aam
dec
adc
movsb
ret
arpl
mov
enter
dec
and
jnp
adc
cmpsl
pop
cmpsl
mov
int
int
ljmp
push
lret
dec
cs
cmp
test
xchg
pop
test
out
mov
test
inc
popf
outsl
sub
scas
sti
sub
pushw
jb
pop
xchg
pop
addr16
sbb
sbb
push
mov
outsb
adc
dec
cmp
imul
loopne
cwtl
insb
int
add
dec
movl
push
icebp
loope
out
push
clc
movsl
lods
add
jo
pop
imul
add
shlb
and
jnp
push
cwtl
push
jb
jmp
sbb
aaa
sub
imul
les
mov
push
lock
mov
cli
push
xchg
mov
sub
std
std
jb
adc
daa
xor
outsb
inc
lods
mov
daa
inc
mov
sub
imul
xchg
leave
lods
in
add
mov
stos
out
and
sbb
add
outsl
das
dec
addr16
movsb
shrb
mov
iret
sub
rcl
xor
xor
fsubs
inc
dec
and
jmp
enter
mov
jno
test
or
cmpsb
mov
jne
or
add
mov
das
sbb
sbb
add
rcrl
dec
xchg
jae
xor
call
cmp
jns
xchg
xchg
test
je
ficoms
pushf
dec
mov
pop
iret
lret
movsl
push
dec
insb
cmp
sub
mov
into
fwait
enter
shll
cli
dec
dec
and
jge
std
ljmp
push
stos
mov
mov
cmc
shlb
rcll
movsb
rcrl
loop
sub
jb
xor
inc
enter
fiadds
cwtl
mov
or
repz
jno
lods
lret
pop
pop
cmpsb
into
mov
mov
aam
add
cmpsl
addr16
ds
pop
movsl
jl
xorl
mov
imul
loopne
lret
mov
in
xor
cltd
mov
sub
incb
icebp
mov
jbe
inc
sbb
stc
into
xor
add
icebp
test
sbb
arpl
lock
dec
sub
xchg
or
mov
aad
hlt
jo
jne
aam
arpl
sarl
aam
outsb
mov
out
scas
fstps
hlt
scas
jo
das
cli
mov
ja
push
fmull
aad
and
lret
bound
std
popa
fisttpl
scas
dec
or
pusha
jl
in
int3
push
std
adc
loopne
mov
and
sahf
data16
pushf
sbb
xor
push
popa
lret
sbb
or
inc
in
pop
ss
add
jae
dec
scas
lods
loope
sub
pop
dec
ret
or
adc
roll
cmove
call
adc
nop
xchg
xchg
mov
jno
iret
inc
sbb
es
cwtl
sbb
adc
daa
clc
loopne
test
cmpsb
mov
cltd
add
scas
into
jp
push
mov
pop
cmc
ret
cltd
xor
aas
cmp
stc
shufps
cmp
fnstenv
adc
adc
xorb
lds
xchg
cs
mov
dec
jbe
or
repz
cmpsb
add
xor
adc
mov
lods
mov
aam
das
mov
lcall
xor
inc
pop
lret
gs
dec
push
lds
or
test
dec
mov
mov
push
mov
movsl
lcall
mov
pop
mov
jae
aaa
jle
inc
and
in
dec
mov
or
adc
mov
icebp
sub
jno
ret
xor
jbe
aas
loopne
pop
inc
push
dec
jb
mov
pop
es
mov
out
xchg
jmp
js
mov
cmp
add
and
loopne
out
shl
push
mov
rcrl
push
repnz
mov
and
clc
jmp
pop
mov
mov
add
xor
mov
stos
mov
sbb
clc
xchg
lcall
cmpsb
adc
adc
push
jae
aas
ror
xchg
fcmovne
xor
ja
or
xor
cwtl
popa
aas
repz
orb
ja
mov
sub
sub
movsb
jp
in
enter
sub
aam
jmp
cltd
repz
cwtl
test
xor
stc
movsb
add
mov
pop
dec
adc
addb
lea
js
mov
jae
lods
push
pushf
das
xchg
pop
jle
add
js
dec
into
rol
add
aaa
lret
add
dec
rorl
jle
mov
mov
or
sbb
scas
jp
jae
sbb
and
inc
pushf
sarl
jb
and
scas
mov
shrb
lret
rorl
add
mov
push
add
clc
int3
push
dec
mov
and
inc
addr16
cs
cmp
repz
or
sub
pop
ja
adc
inc
out
stc
loopne
xor
jge
lahf
push
imul
and
fldt
xchg
lcall
sbb
pusha
aad
pop
pop
and
call
das
cmc
rcrb
mov
pop
ret
and
sahf
fisubrl
xorl
ret
into
dec
out
pop
popf
jg
pop
insl
inc
xchg
lret
push
std
and
sbbb
mov
xor
add
shlb
in
lods
fsubl
add
jg
mov
fcmovbe
bound
cli
jnp
push
imul
scas
inc
mov
lods
xor
out
sbb
mov
roll
push
cs
mov
cli
and
rol
insb
add
push
js
ds
insl
jae
pop
jmp
add
adc
fcompl
shrb
xchg
fistpl
jg
mov
xor
inc
sbb
pushl
into
mov
arpl
jmp
bound
jo
movsb
dec
pop
adc
ljmp
and
push
inc
jb
pop
inc
jg
mov
lds
add
mov
inc
adc
add
xorb
sti
lret
loopne
repnz
jl
cwtl
pushf
aam
daa
push
testl
ja
add
repnz
scas
push
push
cmp
arpl
or
xchg
or
mov
shlb
or
in
in
cmp
mov
dec
fs
push
movsl
ljmp
sbb
mov
pop
out
insl
inc
cwtl
mov
fstl
sbb
sbb
bound
and
add
cmp
pop
mov
xchg
arpl
out
push
andl
lret
mov
add
or
int
mov
insb
iret
and
and
cmpsl
shll
sub
insb
fistps
outsl
adc
mov
sub
push
les
cmpsl
sbb
push
mov
mov
lea
test
pusha
dec
push
and
cmc
inc
lret
std
in
lret
aad
or
inc
ja
jns
cmp
insb
jle
dec
mov
inc
sahf
test
xchg
sbb
mov
xchg
mov
gs
adc
fwait
lods
fisubrl
push
cli
sub
stos
or
ds
mov
cltd
sahf
fsubr
stos
cwtl
push
fldenv
je
test
movsl
shll
jne
jmp
data16
jno
or
test
cmc
and
jmp
sbb
ret
sti
insl
pop
iret
xor
add
cmp
lock
jae
cs
lcall
test
jecxz
sbb
push
gs
push
mov
dec
icebp
incb
sbb
add
cmp
mov
cli
mov
jg
mov
xor
or
mov
pop
jb
push
insb
push
jl
add
mov
and
in
adc
pop
ret
inc
xor
aam
mov
lds
mov
adc
xchg
or
jmp
xchg
call
scas
xor
mov
imul
jae
aaa
mov
xor
adc
cmp
loop
stos
rcl
fs
gs
jmp
out
jmp
es
push
call
lods
mov
inc
ljmp
dec
mov
and
mov
mov
and
loope
mov
pusha
xor
xchg
jno
adc
or
mov
outsl
mov
and
aaa
lods
aaa
jle
in
sahf
adc
movsl
nop
mov
xorl
sub
lret
imul
adc
inc
mov
fsts
jo
aaa
mov
mov
push
xor
push
inc
push
or
mov
mov
shrl
cwtl
adc
mov
pop
cmc
test
jne
loopne
pop
adc
or
sub
or
aam
add
addr16
movsl
test
pop
jmp
mov
pop
jne
and
jle
cli
in
and
mov
mov
sub
cmp
adc
fnsave
pop
push
loope
sarb
dec
repz
in
and
pop
pop
xor
pop
repnz
inc
sarb
stos
js
insb
daa
sub
mov
pop
mov
mov
mov
pop
int3
aas
mov
dec
and
fisubrl
repnz
negb
sub
lret
aad
dec
xor
cmp
or
dec
push
dec
mov
pop
in
push
sub
insb
push
xchg
xchg
mov
dec
lret
dec
lcall
cmpsb
push
mov
xchg
xor
dec
ds
jae
cmp
pop
push
enter
mov
inc
leave
push
arpl
fildl
push
or
mov
js
jno
jg
mov
loopne
dec
popa
add
mov
add
sbb
push
push
xor
mov
in
testb
push
enter
in
iret
push
addps
filds
push
or
xchg
adc
xor
aaa
leave
hlt
scas
xchg
pusha
add
stos
mov
ret
scas
pop
in
adc
push
jnp
jp
xor
jbe
mov
mov
xchg
daa
cmp
dec
add
imul
int
cli
repz
pop
sbb
mov
lods
xchg
adc
xchg
inc
xchg
jbe
push
mov
cmpsb
aaa
loopne
cli
sahf
and
cmp
loop
testl
adc
dec
add
cmp
push
dec
mov
leave
notl
iret
test
fildl
add
inc
cmp
push
lock
addr16
sbb
push
jb
cmp
adc
outsl
jne
mov
fistl
push
cmpsb
loopne
mov
jmp
clc
jecxz
cld
jmp
out
scas
cs
andl
cmp
adc
call
cmp
inc
add
das
rcrb
out
call
cltd
mov
movl
push
ds
rorb
sbb
jnp
cmp
sahf
dec
out
popf
arpl
and
lret
rorb
and
sub
cwtl
push
popa
jge
or
xor
push
into
and
xchg
icebp
loop
sti
inc
lods
xor
pop
dec
push
jg
shr
inc
pop
and
jb
stc
lret
lock
out
shl
outsb
inc
or
adc
lret
adc
xchg
add
push
jge
jge
out
outsl
movsb
ja
mov
nop
push
pop
sub
jae
lds
cmp
adc
ja
stos
ds
xchg
and
imul
das
xchg
push
mov
shlb
cmp
rclb
jae
clc
arpl
pop
push
push
daa
scas
pop
enter
inc
int3
add
lret
push
or
and
arpl
aad
mov
cmp
fadds
xorl
mov
outsb
dec
stc
adc
sbb
aaa
es
out
cs
jno
test
inc
or
popf
sbb
stos
pop
mov
dec
pop
rol
mov
adc
ja
test
mov
mov
cmp
jno
in
mov
or
nop
andl
outsb
xchg
jl
arpl
pushf
jno
fs
shll
loopne
sahf
fwait
ret
fmuls
push
add
push
jne
or
outsl
lea
push
hlt
int3
mov
test
push
dec
mov
or
lock
stc
shlb
xor
std
lods
cmp
jge
push
xlat
in
lea
fnstenv
pusha
add
xchg
dec
ficomps
mov
lahf
data16
add
dec
dec
cmp
data16
scas
xchg
jne
repnz
mov
loopne
cmp
adc
push
pop
cmp
shll
mov
cmp
fstps
cli
add
push
jne
and
aad
rcll
push
in
or
fsubs
jne
fwait
add
test
adc
addr16
mov
push
jne
xor
lods
xchg
or
fldenv
fnstcw
ljmp
mov
adcb
mov
cld
loop
push
mov
inc
mov
test
jnp
mov
arpl
scas
push
int
or
fdivl
sub
aas
pushf
push
sar
cmpsl
jmp
mov
arpl
push
mov
jnp
jge
and
inc
adc
pop
or
and
fdivs
inc
xchg
fists
loope,pt
jae
dec
xchg
jnp
cmp
mov
jbe
and
aas
outsl
cmp
cmpsb
push
bound
sti
rorb
int
mov
and
push
mulb
test
adc
pop
stos
jo
fs
push
dec
gs
iret
pop
enterw
mov
sbb
test
in
cmpsl
add
cmp
xor
cwtl
rcll
xchg
mov
cmpl
jg
je
cmp
iret
pop
push
gs
or
mov
aaa
xor
mov
cli
mov
fwait
test
xchg
sti
xchg
jbe
cs
inc
lds
int
sub
aam
pop
jae
leave
in
ds
and
lock
xor
cmc
mov
popf
sbb
call
mov
mov
fwait
dec
ror
inc
mov
loope
sub
xchg
sbb
cmp
inc
pop
dec
push
into
jmp
loop
dec
mov
fisttps
jno
stc
sbb
xchg
pop
cmpsb
fildll
hlt
jae
or
cmp
dec
mov
imul
jg
pushf
mov
dec
xchg
cwtl
pop
bound
test
subb
dec
lret
daa
mov
mov
fbld
or
cmp
popf
fbld
pop
xlat
sub
ret
mov
out
fwait
daa
lret
iret
mov
repnz
jne
mov
ss
mov
xchg
es
outsb
and
fnstenv
rcrl
jp
scas
mov
jae
sbb
cmpsb
mov
xchg
bound
insl
and
movsl
mov
mov
xor
subl
jle
loopne
sub
scas
jo
xchg
xor
xor
mov
push
cmc
pop
ljmp
push
jo
fiadds
psllq
lret
mov
daa
sub
mov
hlt
mov
int3
fsubrl
push
in
adc
mov
pop
lahf
mov
or
and
push
icebp
adc
xchg
pop
push
fiaddl
pop
sar
mov
ds
in
int3
xchg
arpl
mov
mov
loopne
or
lahf
pusha
outsl
cmp
jnp
or
mov
or
or
adc
mov
sub
jo
out
test
mov
popf
mov
xchg
jne
lcall
xchg
or
js
lds
iret
ljmp
xchg
xor
js
jbe
divl
cmpsb
jo
cmp
lret
xchg
mov
enter
mov
mov
cld
shl
sub
inc
xor
jns
add
insl
in
dec
mov
push
lcall
fs
movsb
cli
scas
int
cmp
inc
ljmp
cmc
sub
es
or
cmpb
ds
cmp
fisubrs
xchg
dec
dec
repz
pop
test
lea
outsb
imul
insl
adc
int3
inc
push
inc
stc
jmp
xchg
mov
ljmp
xchg
pop
or
mov
sbbl
int
cmc
or
push
ds
mov
inc
stos
in
aaa
das
cmp
xchg
pop
xchg
insl
jmp
mov
pop
xor
subb
ja
loop
cmp
inc
mov
mov
dec
in
shl
xor
mov
out
sub
dec
push
xor
cmp
addb
mov
ds
xor
frstor
aam
mov
imul
fwait
clc
push
mov
ud1
mov
clc
jg
sbb
cld
add
mov
rcr
movsl
mov
sub
test
les
sbb
cmp
xor
sbb
xchg
std
cmpl
add
mov
gs
jp
ss
sbb
sti
adc
cwtl
popfw
or
rorl
and
mov
push
mov
jne
and
das
call
mov
cmp
jmp
popa
mov
inc
pusha
xchg
hlt
jnp
and
mov
cmp
jns
jecxz
mov
sub
daa
popa
sub
jl
add
sti
addr16
popf
xchg
repz
insl
out
stos
push
push
call
cltd
and
pop
jbe
mov
faddl
ljmp
add
mov
mov
stc
cmp
jbe
push
and
dec
cmp
je
jb
lret
and
hlt
push
loope
jl
loopne
clc
adc
jmp
push
pop
iret
lea
ja
lahf
decl
cmp
int
xchg
fidivrs
cmp
jne
pavgw
ljmp
jnp
loope
lret
adc
shr
mov
xor
clc
mov
mov
and
out
cmpsl
mov
out
lods
sti
mov
je
incl
int
cmp
movups
jnp
cmpsb
addr16
cmpb
or
out
cmp
mov
dec
shl
cmp
in
mov
bound
int3
xchg
fdivrl
jmp
loope
nop
xchg
mov
inc
rclb
daa
and
jno
int3
ror
pushf
cli
pop
add
xor
jl
gs
xor
movsl
pop
lret
add
mov
loop
test
mov
sub
pop
adc
in
lods
add
add
insl
pop
divb
fistpll
loop
por
dec
jnp
adc
ficoms
leave
xchg
scas
lock
je
fisubrs
lods
add
cmp
outsl
lds
mov
mov
mov
mov
cmpsb
out
ds
cmp
sbb
mov
loope
shl
insl
ret
in
stos
jne
cwtl
inc
xchg
addr16
mov
pop
mov
rcrl
sub
xchg
leave
push
mov
xchg
aaa
add
mov
or
imul
popa
std
add
test
pop
cmp
aam
and
sub
fbld
cwtl
fcompl
push
pop
and
add
lahf
shrb
push
xor
mov
xchg
shrb
repnz
ret
push
in
xor
or
stos
push
inc
inc
repz
mov
jnp
sub
in
aad
or
dec
stos
divl
into
push
mov
shlb
sbb
out
dec
mov
cmc
sub
dec
stc
xchg
mov
adc
inc
dec
and
fs
jns
ja
and
sbb
and
cmp
push
cwtl
ds
addl
orb
push
pop
sarl
add
pop
dec
in
push
clc
test
test
pop
push
push
repnz
mov
push
push
jl
hlt
xor
pop
mov
inc
cmp
pop
pop
or
decb
outsb
jg
lds
scas
add
inc
int3
clc
inc
lock
outsl
dec
scas
pop
push
inc
mov
mov
lods
mull
ret
sbb
inc
in
add
push
jecxz
mov
repz
cmp
sbb
sahf
aas
inc
dec
aas
mov
mov
or
addr16
in
test
aas
xor
das
cmpl
in
sub
in
and
int3
mov
cmpb
push
in
pop
cmp
add
mov
xor
ds
shll
sti
or
je
sub
movb
mov
aaa
dec
daa
and
inc
push
dec
xor
dec
int3
dec
sbb
adc
push
jne
or
iret
mov
cli
cmpsl
scas
movsl
jb
inc
dec
jp
cld
js
cmc
jno
andl
push
rorb
cmp
push
cmc
fisubs
aam
add
cmp
sub
sbb
dec
sbb
lret
scas
and
rcrl
enter
push
pop
pop
jge
add
push
nop
cmp
pusha
xor
fwait
add
mov
pop
xchg
cmp
or
and
push
sarb
mov
push
test
gs
xchg
out
popa
movsl
rolb
rol
mov
ret
fcmovb
push
mov
stos
adc
lahf
and
pop
nop
pushf
fidivrs
sbb
addr16
cmpsb
les
mov
add
subl
push
inc
aad
int
xchg
scas
fisubrs
or
lcall
dec
mov
dec
or
xchg
sub
fisubrl
cmp
pop
fstpt
sbb
inc
add
out
outsl
ficoms
xor
outsl
dec
inc
pop
mov
push
bound
ret
xchg
fistps
push
jge
sbb
ds
pop
push
cmpb
cwtl
jp
pop
cmpsb
inc
out
cmp
cmp
ret
test
xor
decl
sbb
ficomps
bound
xor
jae
inc
jne
dec
and
mov
sti
sti
cmovle
ret
aas
test
jmp
and
push
dec
xor
add
fcompl
or
scas
push
inc
stc
or
repz
pusha
dec
int3
cli
xchg
es
bswap
jge
sbb
in
scas
jb
sbb
jb
adc
jae
roll
dec
jns
decb
mov
repz
in
inc
xchg
sub
mov
dec
add
rcrb
inc
inc
mov
loopne
call
call
xchg
rclb
xor
loop
fnstenv
movsl
das
daa
sub
outsl
test
aas
adc
and
test
repz
nop
pop
lcall
je
mov
in
add
sub
clc
inc
outsl
mov
and
test
popa
rclb
push
sub
mov
push
and
pushf
lea
adc
fisubs
lret
xchg
dec
pop
enter
mov
inc
pop
mov
dec
dec
pop
jbe,pn
xchg
adc
out
push
sahf
aas
fcompl
pop
clc
xchg
jg
mov
loop
rcrl
std
or
xor
or
out
aaa
mov
int3
mov
pop
sbb
jle
loopne
inc
scas
repnz
cmp
rolb
push
cmpsb
clc
outsb
lahf
add
sub
mov
add
mov
mov
and
pop
aam
fbstp
pushf
pop
fdivr
pop
add
in
sbb
lcall
shl
mov
mov
xchg
mov
fnstenv
into
mov
lock
mov
into
inc
pop
dec
ret
pop
push
int
sbb
dec
mov
cmp
mov
pop
jb
bound
pop
sbb
xor
aam
xor
push
mov
jns
cld
je
xor
ljmp
xchg
std
pop
jo
adc
inc
cmp
outsl
lock
adc
lea
mov
pop
pusha
mov
arpl
xchg
add
sub
stc
xlat
iretw
ss
xchg
inc
enter
clc
stos
hlt
adc
sbb
mov
leave
test
xchg
repnz
daa
mov
sub
mov
mov
xlat
mov
jl
mov
jecxz
jmp
test
popa
fstpt
add
sti
add
sbb
mov
nop
out
bound
lcall
sahf
sahf
mov
sub
xchg
pop
mov
mov
add
and
jno
pop
jo
ljmp
aam
jbe
adcl
dec
jbe
mov
inc
inc
shrl
sbb
mov
mov
or
loopne
inc
mov
fistpll
popa
xor
push
push
leave
and
xor
es
pop
out
iret
push
sbb
cmp
lods
mov
repnz
int3
js
lahf
sub
out
cmp
inc
mov
mov
scas
test
xchg
jne
dec
sub
call
call
push
in
imul
fs
push
lock
out
xchg
lods
sub
mov
push
jecxz
push
sbb
popf
mov
mov
push
lahf
and
push
lods
jecxz
sbb
and
loope
and
popa
inc
mov
xor
xchg
jl
and
xchg
sbb
popa
movsl
loop
cmp
mov
aam
jg
mov
movsb
aam
iret
pop
dec
ja
out
lea
sub
adc
cmc
add
inc
push
sar
push
in
mov
push
adc
std
xchg
and
mov
push
repnz
in
call
mov
in
jp
xchg
arpl
dec
pop
cli
mov
cmp
mov
pop
xchg
cmp
popa
mov
pop
mov
push
and
outsl
out
imul
jne
mov
jmp
lcall
shrb
or
push
mov
loopne
lods
rcr
std
add
call
shr
add
push
sti
movsb
loop
sbb
push
jecxz
pop
ret
mov
mov
pop
adc
mov
or
bsf
add
mov
add
push
add
adc
fbld
adc
and
pusha
inc
stc
movsb
push
mov
sbb
cmp
mov
aad
clc
in
in
pushf
imul
push
pop
repz
sub
jo
pusha
iret
into
sbb
inc
inc
cld
xchg
cli
cltd
jecxz
stos
dec
mov
add
js
cmp
sub
scas
mov
inc
adc
inc
das
push
adc
xor
sub
or
jb
push
lahf
pushf
pop
test
or
jecxz
push
push
mov
das
clc
mov
shlb
imul
pop
mov
and
jne
subl
xor
lods
adc
mov
dec
pop
xchg
bound
test
inc
mov
pushf
jne
ss
mov
js
push
outsb
in
outsb
imul
or
adc
out
pop
andb
stos
lods
sbb
inc
and
adc
inc
mov
jnp
loope
push
push
sbb
stos
std
ja
gs
ljmp
icebp
fwait
push
or
push
push
mov
out
add
cmp
mov
jb
jle
add
sbb
js
pop
or
fisubs
mov
pop
sti
loop
enter
adc
cltd
mov
cmp
hlt
mov
inc
movsl
add
mov
inc
repz
stos
push
and
mov
pop
mov
jecxz
cs
subl
mov
jecxz
lock
cld
push
or
cmp
lea
xor
xchg
mov
aas
pop
cmp
mov
outsl
cmp
icebp
adc
xchg
xlat
nop
lods
mov
js
pop
or
mov
fcomps
cmp
addr16
pop
mov
inc
adcl
cmp
jl
sahf
inc
loope
xchg
mov
mov
mov
fidivrs
mov
mov
ds
sarb
or
pop
or
sarb
xor
dec
mov
scas
add
ds
add
loop
xor
movsl
cmp
push
xchg
cmpsb
mov
jg
andl
cwtl
or
adc
stc
mov
cmp
sbb
in
push
scas
lret
lahf
push
xchg
and
es
int
daa
daa
rolb
push
jb
fsubs
shll
movsl
in
sbb
adc
xor
adc
mov
clc
mov
cli
pop
mov
mov
cs
jae
adc
xchg
push
pop
mov
cmpsl
sbb
cmp
nop
movsb
adc
cwtl
jecxz
mov
enterw
xlat
mov
repz
inc
cwtl
and
dec
xor
icebp
aaa
pop
cli
aas
xor
mov
or
divb
sub
jl
inc
cwtl
call
ficoml
divb
loop
mov
pop
mov
push
or
les
dec
xchg
xor
cli
icebp
or
sarb
andb
push
push
out
aam
test
movb
cmp
les
insl
fldt
adc
loop
cld
cltd
sub
mov
sub
mov
pop
repnz
inc
leave
mov
add
sub
push
enter
pop
push
dec
inc
and
or
pop
and
mov
adc
inc
mov
popl
and
and
neg
rcrb
ficoms
cmp
popf
cmp
or
out
aam
sbb
mov
mov
and
stos
jecxz
push
pop
mov
xlat
data16
xor
int3
jnp
inc
xor
scas
movsl
adc
mov
adc
pop
sahf
jnp
and
cmpsl
xchg
jne
fildll
aaa
and
mov
pop
scas
ljmp
in
mov
sbb
mov
test
pop
sub
and
ret
sbb
cwtl
aaa
inc
mov
pop
cmpsb
push
cltd
outsl
jo
mov
cltd
mov
vmovlpd
xchg
stos
mov
out
mov
pop
pop
xchg
call
cmpsb
add
sub
mov
cmp
stc
out
fbld
cmp
push
aas
lea
divb
jae
pushf
mov
call
dec
xchg
jne
and
push
push
cmp
adc
add
fs
cmp
and
mov
mov
mov
pop
add
jp
xchg
in
mov
xchg
sbb
adc
and
xorb
daa
and
xchg
jbe
inc
mov
mov
fldl
shll
push
maxps
lret
outsl
into
das
jae
fs
pop
xor
fs
push
jg
pop
scas
xchg
or
ja
push
push
aas
and
pusha
jge
mov
subl
add
sub
loop
sbb
lods
jo
cmp
jnp
xchg
lret
push
jo
enter
and
std
mov
mov
jge
or
into
insl
fs
push
jae
movsl
cmp
rorl
popl
push
lea
movsl
flds
repz
fcmove
xchg
push
adc
sub
or
dec
fcomps
test
xor
or
dec
jmp
or
pop
fildll
and
dec
shrl
movsl
sti
mov
test
ret
lds
mov
mov
adc
xor
in
push
aas
rol
sbb
and
imul
xchg
fsubrl
outsb
insl
in
outsb
negl
mov
pop
sbb
orb
out
rcrl
push
hlt
pusha
lock
ret
lods
or
lret
out
sbb
gs
clc
out
push
pop
push
mov
sbb
mov
imul
dec
sbb
and
and
lds
stos
adc
dec
pop
rorl
out
mov
fsubl
pop
repnz
cmp
and
insl
outsb
clc
jns
gs
pushw
mov
sbb
lret
ds
pop
pushl
aaa
in
out
mov
pop
push
push
inc
mov
sahf
out
xchg
fwait
lods
pop
fwait
pop
in
pop
pop
mov
inc
pop
mov
aaa
movsl
mov
rcrl
mov
mov
bswap
or
loopne
mov
xor
push
add
add
push
mov
mov
jmp
jmp
test
and
arpl
jmp
xchg
subl
pop
mov
rcrl
hlt
lock
xchg
outsl
aas
repz
cld
popf
cmp
pusha
xchg
push
lret
cli
movsb
lods
daa
dec
mov
inc
stos
and
push
lahf
outsb
push
push
inc
clc
fmul
pushl
inc
ljmp
fnstenv
mov
icebp
inc
sbb
jg
loopne
das
jno
inc
std
xor
mov
movsl
jbe
movsl
xlat
inc
je
pusha
xor
cmpsb
test
fbstp
inc
cmp
bound
aam
cmp
fcompl
jge
jo
shll
in
sub
sbb
cmp
cs
repz
xor
cmp
in
or
mov
cmp
sti
mulps
cmp
fdivs
ss
and
mov
mov
add
xor
or
cmp
or
sbb
in
sbb
ja
lcall
insl
cltd
sahf
out
cmpsb
push
mov
imul
push
shl
xor
fsubs
mov
das
mov
or
fnstsw
aam
jge
mov
jp
pop
push
sub
cwtl
mull
inc
icebp
mov
imul
push
and
stc
repz
repz
inc
jo
jns
dec
fdivl
push
addr16
dec
ret
outsl
call
fidivs
filds
adc
ljmp
push
jmp
cmp
pop
sub
icebp
add
jb
add
xor
add
jnp
mov
jne
or
scas
rclb
je
mov
xchg
shll
pop
sbbb
add
sub
sub
loop
xchg
jle
mov
xlat
sbb
sbb
fs
fxch
pushf
jns
test
pop
lds
cmp
arpl
lods
aam
add
paddb
aam
fstpl
add
push
stos
xchg
cwtl
negl
movsl
adc
pop
add
or
mov
fsubs
inc
dec
stos
push
cmp
cs
fistpll
jge
cmpsb
fnstsw
out
pop
cmpsb
lret
popf
lret
or
or
loopne
sbbb
cmp
fnsave
ljmp
jns
iret
ja
cli
mov
jle
and
dec
ljmp
adc
js
stos
repnz
and
push
sub
int
sahf
sbb
sub
rclb
and
jb
pop
mov
aas
mov
and
mov
add
in
out
push
popf
and
dec
mov
or
pop
mov
sub
lea
adc
inc
push
imul
or
or
mov
add
or
and
lea
imul
or
dec
mov
xorl
outsb
fldt
mov
fcomp
out
xor
cmpl
lock
sub
rorl
mov
mov
loop
or
inc
aaa
idivl
cmp
mov
cltd
add
jle
sub
push
or
mov
mov
jno
inc
shrl
jg
into
ljmp
or
mov
inc
imul
push
push
bound
adc
adc
sbb
xchg
add
das
cmpsl
or
push
test
imul
nop
jp
pop
cld
mov
scas
push
add
pop
test
lcall
popf
leave
in
sarl
push
push
scas
iret
cmc
inc
pusha
cmpsl
repnz
inc
loop
add
jecxz
or
ror
cmp
add
and
pop
setl
or
pusha
cli
xchg
ja
dec
cli
cli
push
and
jnp
cmp
hlt
das
jbe
xchg
cltd
inc
push
xor
ret
or
roll
pushf
jbe
inc
or
lods
jo
bound
mov
pop
das
sub
cmpsb
and
add
jmp
push
sbb
mov
dec
mov
or
scas
test
jbe
jne
or
push
rclb
or
adc
inc
test
in
call
jge
sub
mov
lahf
or
xor
in
jb
and
inc
dec
mov
and
sub
cmp
lcall
push
in
sbb
les
inc
repnz
jnp
pop
in
hlt
shll
or
test
repz
mov
dec
or
add
or
aaa
and
jno
dec
fucomi
add
faddl
les
inc
rcll
imul
or
loop
pop
xor
push
addl
ja
cwtl
jo
in
add
cmp
cmpsb
fwait
ret
imul
movsl
leave
push
rcll
lock
sbb
mov
inc
adc
lahf
lret
inc
pop
adc
inc
pop
sti
cmpsb
and
add
mov
cld
and
loopne
pusha
scas
or
jmp
cwtl
jl
inc
sub
or
or
pop
jge
enter
mov
dec
push
call
jl
hlt
out
fwait
in
sahf
xlat
fistpl
fldt
mov
shr
push
shr
jg
jge
jl
subl
dec
aas
je
icebp
test
psubsw
pop
fwait
jae
sub
cli
pusha
cmp
pop
dec
ret
pop
popf
mov
loop
pop
mov
push
dec
jle
push
cld
sub
imull
mov
mov
scas
sub
dec
xor
loopne
push
push
fmul
sub
mov
lret
call
mov
into
cmp
jmp
in
pop
les
in
int
inc
jb
or
jl
mov
rclb
adc
sbb
lahf
cld
jmp
push
cltd
inc
js
roll
das
in
mov
mov
mov
sbb
or
sbb
je
lret
in
adc
ss
and
sbb
ja
aas
int3
aam
pop
aad
push
or
mov
and
push
jbe
jle
mov
lock
arpl
pop
cmp
dec
push
sbb
arpl
out
xchg
push
scas
push
pop
mov
xor
push
push
push
fsubs
idivb
xor
inc
dec
add
jnp
adc
aad
nop
outsb
pop
mov
xlat
movsl
pop
arpl
in
cmc
lcall
je
inc
out
xchg
xchg
xchg
inc
mov
push
into
lahf
popa
xchg
sub
loope
fsub
jne
in
icebp
or
icebp
sti
inc
sti
push
sbb
std
mov
sbb
mov
push
gs
mov
push
aad
aaa
jmp
adc
ficoms
ja
mov
push
adc
dec
adc
jbe
cmpsl
push
popf
mov
and
and
bound
cwtl
add
in
xchg
mov
into
add
push
sub
add
xchg
sti
xchg
mov
adc
in
push
leave
mov
jp
inc
lahf
ss
jns
or
aad
push
scas
push
push
add
inc
loope
cmp
lods
adc
sbb
xor
sub
bound
xchg
adc
lahf
sub
push
call
aad
inc
dec
pop
dec
dec
nop
pusha
xchg
mov
inc
or
xchg
xchg
ds
jo
repnz
lds
add
stos
sub
sub
out
outsb
sahf
imul
shl
sbb
orb
mov
jl
xor
mov
jbe
outsb
pop
rcll
lea
mov
das
adc
mov
jbe
mov
rcl
and
xor
fnstcw
xor
cmc
sub
js
icebp
je
push
shlb
add
mov
mov
stos
lcall
or
dec
mov
shrl
sub
rolb
outsl
scas
push
mov
popf
scas
add
sub
ss
js
and
dec
shll
xor
aad
inc
ret
fidivrl
cli
pop
cli
decb
or
jae
iret
and
fsts
in
cld
mov
inc
gs
cltd
shrl
sbb
not
cmc
test
mov
mov
and
je
adc
sbbb
add
dec
cmp
add
repz
test
lahf
out
pop
cwtl
mov
or
sbb
ja
push
dec
and
dec
adc
add
xchg
in
ds
xchg
loope
mov
cmp
mov
cmp
outsl
pop
iret
std
fnstenv
push
neg
mov
call
mov
sbb
pushl
push
lock
fnstcw
lds
movsl
mov
bnd
inc
inc
hlt
aad
push
cmp
sub
imul
cs
sahf
stc
in
mov
mov
push
scas
inc
mov
pop
mov
xchg
jae
mov
movsl
push
data16
push
xchg
iret
loope
aas
and
mov
adc
pushf
jbe
test
cmp
imul
pop
sub
mov
out
jge
mov
shl
arpl
push
fadd
inc
xlat
mov
xchg
mov
fdivrl
mov
movsl
jb
pop
mov
fcoms
or
push
sbb
inc
fdivp
push
sbb
cld
adc
lods
inc
jmp
out
inc
cmp
push
pusha
inc
or
push
repnz
loope
mov
lahf
ja
mov
ret
into
ljmp
clc
addr16
cld
lods
mov
adc
add
xchg
fxch
negl
add
movsl
subl
fwait
push
inc
jnp
cltd
mov
clc
pop
lea
inc
xor
add
or
mov
sbb
lods
lock
inc
outsl
inc
xorb
or
stos
inc
aad
sub
leave
cld
bound
test
xlat
xor
mov
lret
sahf
repnz
xchg
pushf
jmp
fsubrp
add
bnd
insb
loope
fbld
scas
push
pop
insl
pop
cmp
iret
sbb
push
jg
xchg
imul
mov
shlb
test
jns
pop
dec
sbb
jl
cmp
inc
dec
mul
sbb
cwtl
mov
jp
fwait
stos
xorb
dec
pop
lds
push
sbb
mov
and
out
mov
inc
push
scas
call
add
jno
pop
and
in
icebp
mov
popf
sidtl
out
push
add
sti
cmp
dec
das
xlat
mov
enter
int
fcmove
stos
jae
int
fimuls
cmp
xchg
aad
loope
jns
pop
aaa
mov
inc
cwtl
aad
sub
in
ret
xchg
test
and
imul
fildl
jne
out
and
push
out
push
and
subl
sub
aad
leave
jge
inc
push
sbb
cmp
dec
sub
sub
popa
mov
jno
mov
popf
and
lock
mov
les
out
popf
lds
shld
lret
je
mov
inc
shlb
bound
mov
cmp
jle
fwait
mov
jge
subb
pop
nop
aas
xchg
jle
xchg
mov
mov
les
ret
loopne
jmp
inc
mov
jo
and
lds
push
data16
xchg
imul
inc
scas
push
push
stos
add
jl
fadds
popf
lret
mov
mov
sub
aaa
out
and
jne
sahf
push
movsl
fistps
aad
or
jmp
pop
sub
test
decb
ljmp
mov
loopne
icebp
mov
jg
ret
test
add
add
int
mov
andb
push
xchg
mov
aas
adcb
xchg
arpl
dec
fwait
push
add
sub
sbb
lret
sbb
test
jne
mov
dec
push
push
addr16
data16
sti
mov
and
or
outsb
movsl
pop
xchg
push
shlb
inc
xor
xchg
sub
outsl
xchg
xchg
in
test
and
pusha
cld
cmp
jno
fsubl
sti
pop
lret
cmp
das
sub
mov
inc
push
test
and
sub
int3
in
cmpsl
icebp
jno
mov
inc
push
add
adc
rorl
sbb
and
movsb
cltd
and
inc
adc
bound
mov
mov
pop
pusha
pop
cmp
pop
popf
adc
sbb
push
mov
fsubl
sub
cwtl
daa
push
int3
inc
std
sub
inc
mov
mov
or
or
sti
std
mov
sbb
push
cmp
pop
sub
rcrb
mov
jns
daa
in
idivb
roll
add
lfs
imul
out
mov
scas
test
call
or
xchg
das
je
popf
rcll
mov
push
lock
out
mov
dec
sub
mov
mov
ret
xchg
in
xor
mov
shrl
cmp
pop
in
dec
lret
add
rcrl
sahf
aas
insb
lret
ss
mov
xchg
enter
fwait
lret
loop
cmpsl
dec
add
add
div
pop
cmp
dec
icebp
pusha
pop
fnclex
cmp
pop
out
pushf
adcl
sub
mov
lret
fsubp
lods
mov
mov
test
fstpl
xor
movsb
loop
andb
std
adc
lods
cmp
test
fs
cmpsb
sub
test
out
mov
jmp
inc
mov
int
mov
imul
addr16
mov
add
add
inc
andb
dec
jecxz
push
pusha
ret
push
es
inc
mov
fstps
notb
nop
push
cmp
xchg
jecxz
cmpsl
sub
lds
mov
test
ret
ds
rcl
enter
cmp
and
popf
ss
add
hlt
popf
sbb
and
push
pop
out
mov
nop
test
testb
addr16
and
enter
nop
ret
lock
cltd
shlb
push
sub
in
dec
aaa
ljmp
pop
dec
pusha
pop
adc
hlt
xchg
and
in
mov
ret
sahf
push
les
mov
loop
out
mov
fildl
push
pushf
mov
adc
adc
invlpg
mov
insl
insb
cmp
js
push
ficomps
mov
les
and
lahf
shll
jae
cld
mov
pushf
cmc
pop
sti
lahf
shlb
add
inc
ret
jns
sahf
in
xchg
outsb
mov
mov
test
mov
push
hlt
bound
sub
and
add
sti
mov
xchg
add
and
sbb
sbb
pop
loop
pusha
lahf
push
fimull
jb
adc
icebp
adc
mov
inc
test
mov
push
leave
adc
and
ja
or
sbb
popa
pop
push
mull
fcmovnu
sbb
ss
push
sbb
inc
cmc
push
sub
xor
movl
fistpl
cmp
data16
and
jle
push
and
mov
add
pushf
jge
jp
leave
rol
ja
sbb
clc
ljmp
pop
les
loope
ljmp
les
mov
in
mov
jecxz
je
cmpsl
data16
std
jmp
jl
shll
arpl
jno
push
movsb
movsl
sti
or
out
daa
outsb
sarb
testb
fisttpl
jge
enter
aam
shrb
popa
adc
mov
mov
mov
dec
cwtl
popa
fisubs
repz
lret
sub
pop
lcall
push
sbb
pop
rol
pushf
gs
clc
lea
shrb
or
test
and
arpl
std
test
arpl
xor
cmp
inc
mov
cli
mov
push
sbb
adc
pushf
daa
insb
aaa
mov
cld
pushf
pushf
push
sbb
adc
mov
jle
mov
or
jno
cmp
cmp
jle
loope
push
out
lods
rorb
cs
add
sbb
adc
and
cltd
sub
mov
mov
rorl
addr16
clc
mov
and
xchg
cmc
xor
lahf
inc
fs
in
int
fldl
cmp
icebp
xchg
cmp
mov
cmp
int
mov
lfence
push
dec
imul
pop
jmp
fbstp
cmpsb
fcomps
mov
incl
movsb
sbb
cmp
mov
movsl
das
mov
mov
sub
jecxz
jb
cmp
loopne
inc
js
es
jo
cmc
cli
push
fidivrs
inc
in
mov
stos
and
dec
sub
xor
in
imul
shll
xchg
add
in
out
fwait
ja
jns
jbe
or
dec
pushf
mov
mov
mov
popa
test
in
loope
cltd
ret
scas
cmp
sub
cmpsl
cmp
fadds
test
lds
imul
ret
xor
test
add
shll
jmp
sbb
xchg
inc
int
push
mov
imul
adc
dec
pusha
fxch
add
jmp
mov
test
mov
inc
pusha
das
xchg
movl
pop
out
dec
xchg
or
popa
pop
test
imul
pop
sbb
rclb
dec
pop
pop
and
out
sti
or
ficomps
push
mov
roll
movaps
movb
sub
push
int3
xchg
cli
push
popa
iret
aam
outsl
dec
sbb
fsub
add
pop
jecxz
popf
sbb
insb
loop
insb
aam
stc
xor
test
push
cmp
mov
dec
out
std
test
and
push
outsb
sub
test
rolb
cmp
mov
add
inc
fcoml
mov
push
push
jmp
int3
dec
dec
jno
adc
or
test
push
add
rcrb
or
xchg
jmp
mov
adc
subb
jmp
xchg
add
ret
repz
push
mov
test
fcoms
int
mov
das
scas
add
shlb
cmpsl
xor
iret
jne
popa
aam
neg
lcall
repnz
rcpps
in
sub
push
inc
mov
ss
cmp
stos
sbb
addl
fnsave
ds
clc
outsb
loop
int
in
and
sbb
sti
cmp
dec
pop
and
jnp
mov
dec
les
lcall
and
lret
inc
gs
scas
lods
jle
jne
loop
out
test
xchg
rol
push
jmp
push
hlt
fwait
mov
js
push
lods
xchg
lret
imulb
lret
xchg
add
sarl
lock
sub
int
es
mov
jge
lahf
add
mov
scas
mov
sbb
imul
pop
or
js
out
stos
jne
lret
mov
mov
jae
xor
jo
cs
mov
mov
push
mov
jmp
movsl
aad
fmul
shll
data16
xor
pop
lods
push
aas
aad
pop
les
jecxz
adc
xor
sahf
sbb
mov
sub
xor
shlb
cwtl
mov
or
sbb
xchg
or
jge
es
fs
shrb
ljmp
mov
stos
xor
int3
inc
add
sbb
add
mov
cltd
cld
and
cs
in
sbb
xor
nop
test
add
push
xor
testb
outsl
popa
pop
sti
pop
jg
sbb
pop
addr16
lret
jmp
std
lret
aas
jae
in
mov
or
adc
loopne
xor
cmp
out
lock
xor
pop
jp
jl
adc
aaa
cld
jno
or
mov
mov
push
pop
cmp
shll
jnp
movsl
out
insb
fdivrs
mov
lods
lods
lcall
inc
inc
sub
jp
fsub
sarl
cmc
lods
andl
jmp
les
ds
jb
jns
addl
test
in
dec
sti
adc
ss
sahf
fwait
pop
scas
lret
jb
xchg
mov
pop
in
xchg
jp
hlt
lahf
mov
mov
enter
ljmp
sti
push
pop
xchg
movsb
and
sub
in
in
mov
sub
sarl
daa
mov
aad
frstor
mov
fs
jbe
sbb
mov
test
int
cmpsl
out
inc
dec
ljmp
insb
jo
push
cmpsb
push
push
cwtl
cmpsb
jnp
mov
aaa
loop
sbb
lahf
cwtl
push
outsl
aas
mov
in
cs
xchg
shll
filds
dec
ja
dec
lret
popf
sti
mov
lret
and
inc
clc
push
lods
push
loop
mov
pop
jbe
repz
adc
cmp
or
pop
push
xchg
in
in
inc
mov
jo
outsb
inc
jno
test
adc
cmp
sub
jp
adc
test
outsb
mov
or
pushf
notl
sbb
and
inc
repnz
cwtl
jb
movb
dec
jp
pop
push
xchg
or
cmc
mov
cli
data16
xchg
jmp
fcoml
rolb
ja
pushf
inc
sub
jbe
xchg
pop
mov
push
test
dec
mov
jo
sub
cmp
inc
jge
cmpsl
ret
lds
mov
lcall
xchg
stos
leave
xchg
ret
addb
repnz
mov
jl
xor
iret
sbb
mov
ss
imul
cmpsb
out
and
lds
scas
cmp
mov
subb
lret
inc
fdivl
add
popf
aas
rclb
fidivrs
push
sti
xchg
pushf
jo
jbe
jg
push
add
xchg
ror
lcall
fisubs
js
jns
loopne
sbb
push
ret
add
push
insb
scas
imul
or
in
xchg
sbb
leave
mov
jg
mov
pop
rcll
pushf
and
push
ljmp
sub
lock
sub
sbb
jmp
adc
jmp
scas
stc
repnz
mov
cli
pop
outsb
pusha
cmpsb
dec
xchg
insl
sub
call
vpunpckhdq
ja
lea
ds
cmp
sub
cwtl
add
idivl
or
pusha
and
hlt
mov
out
sub
pop
mov
dec
add
jb
popa
cmp
xorl
mov
xchg
sar
stos
pop
xor
dec
jl
sub
or
or
xchg
dec
add
xchg
add
cld
and
es
cmpsl
jmp
loop
ret
mov
in
negw
orb
mov
fmuls
std
push
xorl
pushl
stos
stos
pop
sbb
inc
or
sub
rorl
test
jg
xchg
jg
les
jecxz
rcll
sbb
and
mov
jl
mov
pop
cltd
loope
scas
xchg
or
insl
mov
rolb
cmp
andb
inc
aas
adc
push
ja
or
or
cs
fiadds
ss
adc
dec
fmuls
add
fcomps
loop
ds
shlb
and
frstpm(287
adc
lods
fwait
push
and
adc
stos
lret
push
sbb
push
push
cmp
shrl
push
test
mov
cmpsb
and
dec
mov
mov
rorl
mov
jge
inc
insl
das
push
mov
push
lret
loopne
test
repz
stos
dec
insb
add
and
icebp
xchg
aaa
pop
mov
cmp
cwtl
adc
cmp
sbb
scas
adc
mov
mov
pop
leave
xchg
test
xchg
inc
or
and
insb
aaa
jle
test
lcall
or
jae
cmc
and
jno
std
mov
xchg
pop
pop
imul
push
xchg
mov
sti
ss
jecxz
arpl
fcompl
lods
pop
jecxz
jne
imul
cmp
testl
add
andb
mov
out
arpl
mov
dec
xor
pop
xlat
cmpsb
rcrb
insl
std
scas
xchg
cmp
test
mov
xchg
lods
std
inc
adc
lock
mov
fwait
sti
mov
mov
xchg
fwait
push
add
fmuls
mull
jo
andl
dec
push
xor
loop
inc
test
filds
jb
cmc
pushf
stos
cmp
repnz
push
arpl
ret
or
mov
leave
push
rcrl
jp
dec
xchg
addr16
push
ss
push
call
adc
aaa
sbb
pop
pop
mov
cmp
inc
inc
mov
sub
sub
mov
mov
mov
add
adc
push
push
daa
cmp
cmpsb
icebp
ja,pn
push
adc
inc
sbb
add
sub
jno
xlat
jl
sbb
xchg
and
repz
jbe
pop
pop
cltd
outsb
cmc
loop
pop
push
sbb
aad
rol
iret
and
jl
jmp
add
into
mov
outsb
xchg
push
adc
mov
mov
stc
push
fsubrl
mov
jle
lods
cmp
mov
push
mov
in
mov
jl
loop
mov
adc
lods
sbb
bound
xor
pop
loope
shll
inc
sbb
or
push
ljmp
mov
mov
add
je
ljmp
out
xlat
mov
pop
jl
pop
aam
mov
jno
pop
mov
test
sub
std
iret
inc
add
xor
xchg
test
jno
cmp
inc
mov
insl
mov
outsb
sub
je
dec
testb
mov
call
mov
lret
addr16
mov
daa
pop
push
pop
pushf
jae
movsl
cltd
xor
insb
es
push
icebp
inc
lret
rcr
jae
mov
push
pop
xlat
andb
loopne
pop
loopne
leave
push
test
stc
xchg
mov
xchg
sbb
mov
xchg
and
dec
inc
int
ds
bound
pop
dec
aad
sbb
or
pop
les
adcb
repz
nop
sbb
xor
push
inc
stos
pusha
mov
pop
clc
push
in
rcl
jo
stos
or
loope
scas
mov
fwait
push
in
lods
xlat
push
xlat
xor
loop
and
jl
add
lods
ficompl
push
imul
pop
sub
test
mov
xchg
shlb
sarl
inc
inc
or
cs
data16
out
cmp
scas
xor
xchg
mov
pushf
jns
inc
push
gs
adc
adc
lcall
and
dec
push
orl
dec
scas
mov
mov
inc
xor
imul
cmpsl
lcall
push
cmp
hlt
iret
sarl
out
sub
dec
sub
or
xchg
outsb
fcoms
sbb
iret
aad
orb
rolb
out
fs
mov
jl
push
push
ja
fs
mov
enter
test
mov
sbb
clc
shlb
sub
mov
test
jl
mov
fbstp
ss
mov
push
fdiv
add
push
adc
mov
icebp
add
imul
adc
aas
cmp
and
jbe
xrelease
adc
add
out
cmp
cmp
and
dec
imul
xor
mov
outsl
lcall
adc
mov
sahf
fbstp
cs
cmpsb
mov
pop
adc
dec
pop
dec
mov
xor
push
test
or
dec
xlat
or
test
pop
leave
dec
cmpsb
jno
sub
or
call
lcall
push
leave
popf
jne
les
push
jb
xor
aaa
or
shll
jle
repnz
xchg
ficoml
inc
icebp
mov
sti
xor
push
lret
push
adc
push
dec
int3
sub
sti
inc
inc
xor
cmpsb
shrb
add
jl
inc
add
mov
xor
cwtl
call
xchg
ja
aad
repnz
push
fildl
cmpl
jae
adc
xor
movsb
and
dec
inc
add
push
sahf
mov
xchg
sbb
subl
mov
add
sbb
sub
sbb
hlt
mov
jge
test
pop
in
aas
mov
mov
push
data16
and
out
pop
ljmp
xchg
xchg
adc
and
add
mov
cmp
loope
jmp
mov
test
dec
rorl
repnz
cmp
stos
fs
fsubr
out
call
psubusb
mov
inc
aam
icebp
test
dec
and
repz
nop
pusha
mov
shrl
cmpsl
push
in
and
stos
xchg
mov
mov
movsb
aam
pop
jge
addb
pop
sub
rolb
fs
mov
xor
cs
iret
push
addr16
in
cs
into
xchg
mov
push
push
dec
dec
ja
adc
xor
call
lods
xlat
sbb
lods
iret
xor
or
adc
outsb
lock
dec
cmp
inc
in
imul
push
cmp
xor
out
push
adc
dec
mov
adc
popf
sub
test
dec
add
out
inc
mov
xor
mov
ljmp
pushf
xor
jns
cmpsl
lret
bound
fsubp
jl
sbb
inc
loope
sbb
inc
std
popa
in
ds
jg
mov
jo
shlb
jbe
cmp
xchg
ss
dec
out
movd
pop
and
mov
push
push
mov
repnz
xchg
push
fnstsw
xor
dec
ja
add
sbb
mov
test
pop
iret
xchg
scas
enter
lret
sbb
cli
add
sub
fdivr
or
addr16
xchg
pop
sub
pushf
and
xor
movsl
sub
roll
jp
pusha
mov
xchg
jns
out
push
fmuls
orl
clc
out
movsl
jne
in
lock
pop
and
leave
shr
jmp
ds
rcpps
nop
push
jl
mov
xchg
int3
sbb
jl
ja
sbb
adc
test
mov
pop
push
cmp
dec
ret
sub
push
mov
jo
xor
je
mov
pop
xchg
out
scas
ja
adcb
outsb
or
jle
pop
and
popf
lods
adc
cli
in
shll
stc
push
add
mov
mov
mov
popf
sarl
test
jbe
mov
mov
jle
add
sarb
mov
inc
imul
lret
push
aaa
dec
fnstsw
and
ret
test
adc
scas
jge
movsb
inc
cmp
jg
mov
push
lds
daa
cltd
imul
mov
sbb
mov
das
cmpsb
inc
mov
imulb
adc
pusha
test
jb
and
stc
fidivrl
push
xchg
and
push
enter
xchg
daa
addl
pop
dec
pop
mov
pop
and
pop
fs
iret
mov
daa
xchg
lahf
pop
or
push
stos
sbb
push
add
mov
lahf
gs
mov
les
cli
fs
push
xchg
sarb
test
add
or
xor
insl
push
ret
jne
sbb
pop
inc
je
dec
jae
cmp
dec
jmp
adc
push
mov
pop
jae
mov
add
dec
fucomp
xchg
or
cwtl
outsl
imul
mov
lcall
movsl
xchg
jns
sar
sbb
cli
xchg
inc
mov
push
xchg
pop
dec
xchg
decb
push
sbb
mov
popf
pushf
cli
xor
pop
pop
jl
hlt
push
lods
xor
mov
pop
pop
mov
mov
add
pop
inc
jbe
jle
loope
dec
outsb
aas
xor
adc
ja
jg
lock
and
push
out
pushl
push
jb
push
xchg
leave
jl
in
xor
mov
push
and
out
ja
mov
out
cwtl
repz
fistpl
sbb
xchg
pusha
xchg
cmpsb
mov
inc
xor
negl
pop
dec
jecxz
pop
stos
adc
xor
cs
in
push
test
js
lret
xlat
dec
xor
es
push
aas
ficomps
xchg
xor
mov
divb
and
xor
adc
out
sbb
mov
scas
or
outsl
xchg
lret
pop
daa
push
jecxz
mov
push
imul
icebp
stos
and
popa
notl
leave
jl
and
int
sbb
lcall
mov
sub
loopne
mov
lods
mov
xor
mov
jns
outsl
sub
in
sub
push
repz
push
fistpl
add
jne
mov
jp
push
pusha
fstps
jae
cs
aam
iret
push
stc
bound
test
jecxz
pop
or
xor
adc
xor
lock
outsb
pop
jge
mov
inc
xchg
inc
ljmp
repz
int
xorl
pop
jnp
adc
inc
pusha
mov
push
test
rolb
add
inc
xchg
mov
std
test
iret
mov
inc
sub
push
push
pushf
jmp
and
pop
fsub
and
int3
lock
add
add
pop
sub
sbb
insb
in
and
aas
mov
xchg
push
add
mov
lret
inc
xor
scas
mov
ret
js
xor
std
push
mov
jns
rorl
dec
decl
dec
mov
pop
jecxz
leave
popa
repz
pop
dec
enter
xchg
inc
dec
mov
sbb
jmp
loop
dec
push
sbb
mov
inc
test
xchg
jbe
pusha
mov
sub
stos
shll
fcomip
enter
push
ret
sbb
fisubrs
or
insl
cs
pop
ja
sub
push
pop
jnp
jge
stos
out
into
mov
push
pop
add
dec
idiv
push
mov
push
std
pusha
and
ss
push
xor
adcb
xor
outsb
insl
ss
lods
mov
and
or
adc
lret
popf
test
pop
xor
cltd
out
aam
xchg
les
adc
call
fwait
and
jecxz
dec
xchg
ret
outsb
dec
pushf
ds
test
test
aas
xchg
mov
dec
scas
loope
add
je
leave
fimuls
cli
xchg
add
adc
aad
mov
mov
mov
les
cli
push
sub
pop
mov
ret
push
and
mov
sti
mov
hlt
popa
dec
push
lock
push
and
push
lahf
jnp
ja
fisttps
fistl
xor
int3
inc
dec
push
out
add
das
das
dec
addr16
or
cmc
in
push
lret
aaa
and
test
sti
pop
mov
or
icebp
icebp
and
dec
add
sub
jb
jecxz
iret
add
and
out
mov
or
or
sub
jg
xor
mov
mov
push
enter
lahf
pop
push
mov
mov
popa
mov
xor
test
iret
inc
test
dec
lods
cmp
lahf
sbbb
pop
add
icebp
into
mov
cmp
cmpsb
xlat
jbe
pop
inc
int
lcall
sbb
pusha
add
inc
fdiv
pop
stos
push
cs
movsb
jmp
cmp
dec
idivb
mov
movsl
cmp
mov
inc
stos
aaa
daa
and
shll
push
ret
cmpsl
pop
icebp
inc
lds
jno
and
jle
loope
mov
dec
in
jae
mov
and
mov
std
sbb
dec
bnd
sub
pop
fdivr
lcall
lret
out
bnd
insb
sti
add
jcxz
aaa
popa
mov
loop
mov
subl
rolb
movsl
pop
inc
or
sub
lcall
test
push
jecxz
jne
inc
or
iret
adc
pop
and
in
psubsw
mov
std
push
ret
hlt
sbb
loop
mov
mov
ds
in
negb
push
xchg
pop
test
pushf
xor
xor
cmp
insl
iret
cwtl
loopne
sbb
push
pushl
lea
fistps
rorb
in
or
push
inc
mov
sbbl
addr16
jge
xor
adc
mov
dec
jns
mov
push
jnp
xchg
cmp
dec
aas
cli
push
fwait
aam
jbe
sbb
pop
ljmp
dec
arpl
mov
xor
notl
or
jmp
imull
lds
int3
mov
inc
loopne
outsb
or
out
dec
inc
loopne
dec
inc
adc
int
add
jo
jbe
jl
mov
addr16
cli
pop
ret
loope
mov
push
les
insb
popf
push
inc
cmp
xor
imul
sub
mov
add
cmc
or
mov
lock
sbb
cwtl
dec
sub
pop
cltd
mov
lods
popl
adc
aad
fistpl
popf
test
call
icebp
add
fnsave
aad
pop
add
hlt
or
mov
pop
add
inc
cmpsl
push
jno
fxch
adc
and
rcll
push
adc
out
jg
sub
xchg
fsts
add
xchg
mov
pusha
cmp
cltd
insb
mov
fidivrl
jo
xor
sub
movsl
jb
outsl
aam
mov
mov
movsl
loope
js
xor
xchg
clc
out
lret
adc
sub
xor
dec
enter
in
imul
ucomiss
test
xchg
arpl
sbb
int3
adc
jge
jecxz
mov
sub
or
loop
mov
xchg
popf
and
lahf
loop
sbb
insb
inc
mov
mov
cld
jnp
fisttpll
shll
stos
in
push
call
out
std
sub
pop
sub
pop
in
bswap
aad
mov
mov
sub
or
call
sub
jbe
repz
mov
pop
jle
mov
in
sbb
repz
popf
cld
mov
dec
xor
out
push
sub
mov
jecxz
xchg
xor
push
or
out
jecxz
incl
inc
pop
arpl
sub
jbe
push
and
cmp
cmp
cmp
fwait
cmp
inc
mov
mull
loop
fcomi
cmp
dec
icebp
mov
mov
add
mov
repnz
add
add
fnstcw
daa
pavgb
mov
jecxz
adc
dec
jle
nop
pop
xorl
fisttpll
mov
xchg
outsb
ret
in
mov
xchg
icebp
cmp
and
rcrl
mov
les
add
cli
bound
dec
ret
jle
roll
out
sbb
sub
jo
pop
jb
cmc
pop
sbb
mov
sub
or
mov
mov
adc
cmp
pop
xchg
jmp
push
mov
push
jg
cltd
test
lret
movsb
imul
iret
lret
mov
xchg
inc
test
shlb
and
jne
shrl
repz
sar
adc
bound
jp
jno
das
or
xor
pop
and
push
or
push
sbb
mov
adc
mov
xor
jne
test
mov
jg
dec
scas
xchg
push
mov
push
xchg
packuswb
fwait
or
pop
add
fldl2t
push
sbb
dec
inc
dec
mov
pop
pop
push
xor
jns
outsb
test
ljmp
sbb
lahf
inc
inc
and
add
stc
xlat
xor
mov
cld
outsb
fcoms
imul
outsb
dec
mov
mov
mov
sub
mov
xchg
and
jg
lahf
cmp
dec
push
dec
xchg
repnz
loope
and
xor
sub
pop
shlb
xchg
adc
sub
jmp
movsb
imul
mov
dec
push
stos
ja
int3
aas
enter
mov
jg
ds
test
or
inc
mov
and
xor
aaa
inc
cmp
fistpll
popf
inc
fcomps
adc
jl
xchg
sbb
sub
jae
stos
xorb
push
es
test
stc
push
insl
int3
fimull
fdivs
jns
jmp
add
out
sbb
imul
pop
sti
push
jp
icebp
dec
aas
fwait
push
mov
add
mov
imul
dec
and
clc
repnz
push
gs
push
mov
sbb
loopne
cmp
and
addr16
mov
iret
dec
and
xchg
xor
into
sub
mov
movb
inc
or
out
jge
pop
sahf
cmpsl
mov
push
lret
and
sbb
test
jl
pop
sbb
mov
cld
lret
icebp
addb
jo
lea
pop
test
outsl
test
push
or
subb
cmp
cmp
push
sti
insl
push
jmp
lret
xchg
es
mov
scas
xor
push
pop
repz
fldenv
insb
in
sbb
sar
fxch
pop
cmp
dec
push
std
scas
les
mov
pusha
dec
iret
ljmp
xchg
insl
lods
add
dec
cwtl
ljmp
pop
or
push
cmpsb
jne
fstp
xchg
std
jg
out
fs
push
int
fldt
imul
or
push
shrb
rcrl
xchg
sub
ds
xor
push
js
push
loop
and
xor
or
sub
addr16
mov
pop
shl
cwtl
lock
js
cmp
sub
aas
fildll
push
fs
dec
add
stos
cwtl
jae
and
jle
mov
mov
sub
daa
dec
dec
sub
xchg
arpl
out
test
fs
stc
push
mov
pop
roll
push
mov
mov
cmpsb
mov
dec
dec
imul
xchg
add
arpl
xchg
push
jecxz
push
xchg
jle
dec
adc
test
jle
jbe
xchg
pop
push
xor
pop
rolb
or
faddl
in
addb
aaa
mov
or
push
call
mov
aas
mov
sub
lahf
and
aas
aad
adc
pop
cmp
dec
push
aam
ror
adc
inc
leave
jae
stos
jnp
popa
test
ret
cltd
hlt
sub
and
or
rolb
ds
jle
push
push
emms
movb
and
lods
imul
pop
and
scas
push
dec
mov
dec
push
inc
pop
vexp2pd
jne
fidivl
or
sub
cmp
jnp
add
fstl
pushf
fadd
cwtl
push
mov
and
adc
xor
jae
rcr
nop
sub
xlat
xchg
push
dec
lret
test
nop
lea
scas
pop
push
xchg
xchg
add
xor
inc
loop
vmovaps
xchg
xchg
jb
pop
gs
fmuls
mov
cwtl
pop
test
push
sub
in
mov
or
xchg
sbb
jne
in
dec
scas
xchg
add
xchg
dec
dec
in
mov
xor
mov
aas
sub
cltd
movsb
cmovnp
dec
aas
dec
sbb
jecxz
dec
lea
jge
sbb
movsb
dec
xchg
shrb
loopne
rol
cmc
scas
xor
push
data16
add
orl
cwtl
mov
sbb
test
sub
cmpsb
jle
cwtl
fiadds
cli
nop
clc
jl
dec
add
lock
ret
jecxz
adcl
mov
mov
mov
scas
inc
sub
sbb
ror
std
leave
mov
and
out
push
mov
ja
bound
or
adc
adc
mov
cmpb
nop
add
and
enter
add
test
cmp
js
das
adc
inc
mov
scas
movsb
or
stos
movsl
xchg
ret
test
jns
shlb
sti
inc
sub
nop
fsubr
sub
movsl
nop
mov
dec
lea
out
fcompl
arpl
inc
fildl
adc
mov
or
jo
in
test
sbb
sahf
test
xor
aas
xor
outsb
pop
jge
push
insb
xor
sbbl
test
and
push
adc
clc
xor
std
aaa
mov
jecxz
scas
cli
xchg
dec
fisttpl
mov
or
mov
or
jnp
adc
sbb
jne
stos
mov
sbb
mov
sti
fstpt
js
xor
push
shll
add
das
pusha
xor
xor
mov
push
test
add
or
rol
cmp
lret
mov
pop
or
gs
cmp
push
mov
xor
arpl
adc
jno,pn
in
cmp
cmc
stos
sbb
add
jbe
xchg
jmp
test
repnz
icebp
mov
test
fisubs
leave
mov
stos
scas
push
jmp
fidivs
add
cmp
or
mov
js
filds
inc
mov
lock
jmp
inc
sbb
in
aas
cmpsb
pushf
loop
mov
call
xchg
cltd
imul
xchg
xlat
jnp
fs
loop
sbbb
or
xor
xchg
adc
icebp
mov
cwtl
stc
pushf
xor
mov
xchg
movsb
push
repz
xor
jecxz
call
adc
or
inc
in
mov
aas
push
pop
cmp
cld
add
sti
cmp
cwtl
mov
inc
push
dec
in
sbb
mov
mov
pop
cld
jo
scas
int
or
jp
or
sbb
addr16
fildll
xchg
or
mov
mov
dec
gs
dec
xchg
push
add
rep
out
and
adc
and
je
or
xor
or
ja
negb
daa
rorl
daa
ficoms
lods
scas
adc
sti
or
or
lock
test
sbb
stc
pop
pop
jns
mov
ss
bound
mov
add
mov
lds
mov
js
add
hlt
loope
add
ds
pop
leave
or
and
and
enter
xor
mov
movsl
sub
cmp
gs
add
int3
fidivrl
xor
add
movsb
jno
or
adc
je
mov
and
ficomps
xor
sbb
push
outsl
jnp
pop
fdivrl
ret
sbb
mov
adc
ret
fnsave
rclb
adc
loope
xor
fisubrs
inc
jae
insb
call
aaa
mov
add
and
mov
adc
add
mov
das
jg
ffree
mov
mov
mov
jno
pushf
push
inc
push
popa
mov
mov
enter
or
neg
test
clc
cmp
mov
pop
outsb
js
sbb
cmp
enter
mov
xor
jb
fdivs
mov
jp
je
mov
das
sahf
sarl
jmp
cmp
push
repnz
mov
ret
movb
pop
lahf
mov
ljmp
adc
les
push
sub
or
push
xor
inc
test
out
lock
inc
outsl
add
repz
sbb
push
push
roll
test
out
mul
idivl
loopne
jmp
arpl
lcall
and
in
or
loope
jge
xchg
jge
pop
mov
jge
jne
mov
xchg
inc
mov
jbe
enter
gs
jae
jnp
ficoms
mov
outsb
into
adc
mov
test
mov
sub
jmp
pop
sub
andb
and
lea
in
or
mov
xchg
and
gs
aaa
xadd
xchg
insl
add
mov
xlat
sub
mov
jno
mov
movsl
jecxz
stos
dec
js
inc
sbb
insl
loope
jb
xchg
pop
aad
das
and
adc
mov
sbb
test
orb
mov
leave
cld
ret
ss
jge
repnz
pop
mov
sahf
add
add
dec
mov
push
test
lcall
and
jg
mov
ss
pandn
loopne
setle
cli
sbb
dec
in
js
pop
jmp
out
jbe
add
cmp
pop
bound
mov
in
lcall
xchg
call
into
pop
sub
mov
push
jbe
mov
out
pop
in
xor
xchg
add
pop
lahf
cli
cmp
call
push
mulb
add
cmp
mov
xor
mov
fisubl
adc
xchg
push
or
out
mov
movsl
jecxz
xor
and
pop
mov
daa
cmp
jmp
adc
push
repnz
fs
xchg
or
inc
pop
jg
and
xchg
outsl
ret
mov
mov
pop
out
hlt
insl
daa
or
add
or
xor
test
jmp
cmp
int3
dec
xor
imul
idivb
adc
mov
ds
push
mov
stos
insb
dec
jns
mov
cmc
outsl
jl
push
jge
lds
stc
setge
lcall
lahf
flds
pushf
cld
xchg
mov
cltd
jmp
js
lock
mov
jb
pushf
and
repnz
sbb
std
stos
and
mov
mov
enter
pop
mov
test
mov
jne
popa
nop
xlat
xchg
sub
sub
xor
dec
stos
dec
adc
mov
inc
mov
jmp
mov
xor
fbstp
and
push
push
xchg
push
and
mov
mov
je
xchg
mov
sbb
bt
ss
imul
xor
xor
outsb
lret
es
sub
lcall
jp
mov
std
adc
in
mov
dec
jp
jne
fsubrp
or
xchg
insl
xor
into
push
ja
in
pop
add
mov
inc
jle
jae
bound
ret
loope
enter
lods
ds
aad
sahf
inc
lahf
mov
lock
mov
jp
addr16
and
xchg
gs
outsb
popf
mov
cmpb
jae
mov
jle
jp
sbb
sub
sub
pop
pop
mov
das
jnp
and
mov
and
outsl
or
mov
mov
scas
mov
or
notb
insb
ljmp
out
sbb
xchg
outsl
int3
lret
mov
jle
lret
sub
xchg
and
es
in
dec
mov
fnstenv
sbb
cltd
lods
test
cmp
xlat
lcall
addr16
push
std
loope
shrb
xchg
std
cli
les
ret
mov
dec
sbb
jmp
xchg
lahf
clc
jge
lahf
mov
jg
enter
dec
cmp
out
call
enter
mov
mov
xor
out
loop
test
jnp
ss
int
iret
add
ljmp
sub
fwait
push
arpl
cld
jp
fs
dec
jo
xor
mov
movsb
sbb
decl
or
jle
inc
arpl
fxsave
xlat
pop
stos
adc
xor
mov
sarb
shlb
jge
out
sahf
loop
ret
cmp
mov
negb
jecxz
or
in
cld
je
add
int
sub
call
pushf
push
inc
cmpsl
xchg
scas
mov
add
inc
adc
adc
fidivl
or
ror
mov
enter
cwtl
and
shll
push
adc
xchg
adc
sbb
push
pop
sub
mov
aas
out
test
mov
test
in
mov
cli
sahf
cltd
into
jno
inc
mov
mov
push
rcl
mov
push
mov
sar
xchg
add
icebp
fistpl
push
fimuls
xor
pusha
and
or
aaa
sub
mov
dec
and
lock
repz
sahf
inc
popf
add
jmp
jmpw
in
sbb
in
push
push
test
pop
jno
insl
fsubrl
loopne
xlat
iret
cmp
and
bound
pop
shrl
pop
pushl
pushf
jecxz
jnp
lcall
int
cmc
clc
rcll
or
daa
dec
push
lods
push
ror
mov
add
cmp
push
sbb
push
out
push
jnp
cmp
pop
lods
and
mov
arpl
into
cltd
nop
xchg
inc
in
cmpsl
mov
mov
jg
scas
popa
or
test
lods
cmp
inc
mov
mov
mov
je
mov
aas
cmp
test
pop
daa
jbe
cmp
ret
enter
in
addr16
pop
imul
mov
cmp
ret
sahf
cld
and
push
cli
push
arpl
ss
movsl
pop
push
out
sub
repz
mov
rorl
dec
xchg
out
or
enter
xchg
push
filds
aad
mov
inc
or
fmulp
mov
out
mov
mov
incl
jp
daa
or
adc
lret
pop
dec
lods
das
out
repz
sbb
xchg
xor
ret
cmp
ror
int
xchg
out
cs
cmp
out
sarl
jae
mov
cwtl
or
mov
add
test
arpl
pop
jle
popf
inc
jmp
test
mov
push
mov
gs
lock
sub
mov
xchg
repnz
ja
push
xchg
movsb
dec
push
inc
mov
out
mov
jae
add
mov
lods
ljmp
or
lret
loope
jg
jo
je
push
pop
out
data16
push
int
dec
movsb
add
loope
andb
jo
inc
hlt
loope
xor
addb
or
aad
shlb
lds
cmp
inc
mov
jo
add
pushf
pop
push
dec
icebp
adc
adc
int
jbe
insb
pop
ljmp
cmp
lret
sub
add
pop
dec
jle,pt
faddl
xchg
jb
notl
lods
pop
sbb
xchg
push
xorl
popl
fcompl
outsb
scas
cmpsb
mov
cmc
add
dec
mov
dec
jbe
dec
add
inc
stc
push
push
or
mov
insl
xor
inc
cmp
xchg
push
rclb
adc
mov
jmp
mov
jmp
mov
nop
lds
and
mov
in
fldcw
sbb
pop
inc
rclb
jp
xor
imul
addb
mov
addl
xchg
xor
fisubl
bound
sub
push
cmc
adc
mov
shrl
jp
add
jbe
jmp
repnz
fwait
stc
andl
bound
cmp
and
idivb
jbe
sub
jg
xchg
jnp
out
pop
daa
andl
mov
ss
xor
rorl
inc
data16
out
cmp
adc
xchg
mov
mov
pop
cmp
sub
pop
cmc
pop
lods
push
call
adc
js
pushf
xchg
pop
sbb
sub
cmp
jae
jl
adc
dec
sub
mov
dec
into
shl
adc
popa
add
jp
dec
adc
pop
adcb
aas
addr16
inc
fsubl
popa
inc
fwait
sar
popa
xchg
add
sti
movsl
sub
nop
aam
lock
jle
push
movsb
jecxz
cld
xchg
xchg
and
mov
sbb
nop
inc
push
sbb
int3
mov
or
jbe
jb
push
xor
mov
sub
leave
push
pop
push
nop
ret
test
test
rolb
popf
mov
outsl
push
mov
xchg
lret
mov
jmp
rorl
fs
repz
and
test
jmp
and
nop
push
mov
mov
and
clc
test
enter
mov
jno
mov
lea
ss
in
lcall
sahf
xchg
push
inc
adc
sbb
mov
pop
inc
divl
loop
sub
cmp
push
loopne
enter
xchg
jne
xchg
adcl
pop
mov
in
xchg
imul
mov
jb
sub
faddl
fildl
dec
imul
xor
mov
fs
jne
or
inc
sub
movsb
add
out
and
fwait
pop
loope
aam
xor
popf
ret
enter
cld
sbb
insl
imul
ret
mov
add
test
jmp
imulb
jno
fsubr
mov
aaa
sub
push
push
or
shl
outsb
or
sbb
scas
neg
fwait
cmp
fldcw
das
ss
hlt
push
and
xor
mov
into
daa
popa
sub
andb
pop
addb
inc
stos
clc
cwtl
inc
insl
cmp
stos
mov
nop
test
pop
sub
mov
ja
mov
or
popf
sbb
inc
mov
mov
dec
popa
push
adc
out
inc
cmpsb
mov
sbb
and
dec
pop
ss
lea
js
clc
jp
scas
fcomps
sbb
dec
sarl
into
testl
jp
mov
icebp
fwait
mov
sub
rol
std
xchg
lock
jnp
cmp
dec
dec
icebp
lock
movsb
dec
push
nop
in
loop
push
push
repz
cmp
fnstcw
sub
mov
xchg
adc
push
jo
add
ja
daa
jbe
sahf
push
cld
lret
mov
jbe
es
addr16
les
leave
scas
inc
fsubr
inc
aaa
sub
xor
jae
popa
add
xor
fldcw
in
mov
rorb
dec
mov
lods
xor
flds
mov
inc
xlat
nop
sahf
lret
cld
and
push
rorl
icebp
es
dec
mov
pop
fimull
aad
lea
lds
and
into
aam
ja
ficomps
xchg
jo
test
adc
call
rcrl
mov
icebp
lock
xor
fstps
or
arpl
and
mov
into
jae
popf
xor
aad
outsb
adc
mov
mov
pop
gs
adc
xor
push
sbb
dec
xchg
fadds
adc
cmp
loopne
sarl
mov
add
lock
std
fisubs
dec
sarb
imul
add
inc
mov
out
sub
stos
push
adc
insb
push
mov
push
mov
push
jae
push
aaa
out
or
imul
and
fbstp
pop
ds
das
xchg
shr
push
mov
adc
cs
xchg
in
add
add
mov
enter
leave
and
movsl
sbb
test
into
mov
orb
push
sub
push
ret
mov
mul
stos
call
add
dec
bound
push
divl
int3
in
cmp
mov
icebp
fidivs
fcomps
jnp
push
movsb
aas
cmp
ds
jp
sti
pushw
inc
mov
cmp
in
clc
xor
int3
dec
clc
push
mov
push
or
popf
fmull
jmp
jmp
stc
pop
xchg
pop
pop
jmp
imul
mov
stc
cltd
inc
xchg
imul
inc
clc
dec
lods
push
sbbl
inc
adc
mov
adc
loopne
cmp
mov
cmp
xlat
dec
fs
sub
hlt
jno
mov
pop
icebp
sbb
mov
jecxz
mov
xor
cmp
repz
jns
and
ret
mov
inc
aaa
sbbb
loopne
arpl
mov
insl
into
mov
dec
add
pop
int
cmp
push
add
cli
push
push
mov
sub
lahf
sbb
hlt
inc
jb
imul
in
clc
arpl
mov
mov
in
out
int3
mov
repnz
sbb
aam
mov
and
lods
mov
nop
andb
adc
mov
pop
sbb
mov
xor
je
and
imul
ds
mov
nop
add
sahf
xor
mov
cmp
add
nop
push
lods
sbb
push
orl
arpl
inc
inc
hlt
icebp
push
or
mov
pop
push
fnstsw
insl
test
movsb
rol
add
repz
fisubl
jnp
cmpsb
es
push
loope
push
ljmp
imulb
lods
jns
sbb
xor
repnz
or
mov
scas
sahf
sub
aas
and
ret
es
jp
fildl
fdivs
jno
outsl
xchg
sub
lret
or
stos
popf
js
cmp
xor
aaa
pop
js
jno
in
shlb
push
loop
iret
jl
push
test
out
mov
cltd
fbstp
adc
xchg
test
sbb
out
pop
mov
sbbb
inc
jge
sbb
or
xor
out
push
je
mov
sti
mov
push
xor
mull
ret
rcrl
jle
mov
gs
cmp
jecxz
mov
cmpsb
arpl
mov
insl
stc
cmp
inc
repz
shlb
push
sahf
xchg
bound
adc
in
xchg
hlt
out
sub
xchg
mov
pop
xor
aad
fs
mov
jmp
or
fsubr
mov
push
nop
stc
push
loope
jl
mov
dec
mov
rcl
les
xor
mov
dec
jg
mov
mov
cmc
jns
or
mov
stos
pop
xchg
roll
mov
pushf
jp
add
inc
sbb
jg
std
ds
pushf
xlat
imul
popa
out
cmpsb
add
imull
pop
dec
mov
in
dec
xchg
outsl
cwtl
cmp
orb
pop
xlat
leave
int
lea
mov
dec
mov
dec
cwtl
push
adc
mov
in
cmp
shll
adc
rcl
add
fisttpl
cmp
int
adc
push
jl
mov
fsubr
testb
jb
pop
imul
push
mov
in
out
out
test
add
pop
jbe
and
dec
pop
notb
mov
clc
pop
cmp
lods
cmp
aam
push
mov
pop
iret
cld
pop
cmpl
jge
mov
mov
sbb
fstps
push
fisubs
cmpsb
in
sarb
loop
add
movsl
cmpsb
pop
inc
mov
jmp
mov
cmp
movsl
subb
lret
imul
dec
pusha
loopne
sub
and
cwtl
inc
pop
fstps
scas
dec
sbb
add
mov
xor
sub
ja
cmp
lahf
fs
addr16
and
out
jge
pop
aas
jmp
cmp
pop
jbe
cmp
inc
stos
aaa
fstpl
into
mov
sub
test
cwtl
jp
mov
cli
hlt
push
jle
cmp
pop
sahf
push
pop
loope
inc
pusha
imul
imul
fildl
pop
jbe
pop
aad
cmp
ret
outsl
cmp
outsb
add
inc
and
iret
sub
pop
test
sti
aam
mov
repnz
xor
add
mov
inc
xchg
lcall
sub
adc
mov
mov
add
inc
dec
xchg
imul
pusha
sbb
xor
xchg
insl
div
sub
and
jns
jo
add
out
int
out
push
sbb
sbb
or
das
lcall
cmpsb
cmc
mov
stos
stos
pop
stos
push
and
add
sbb
jno
fnstsw
iret
jns
aas
rclb
and
cmp
add
imulb
mov
inc
mov
sbb
jp
testl
mov
shrl
sbb
insb
mov
cmpsb
mov
push
js
pusha
push
loope
loop
fwait
in
push
xor
jle
test
lock
mov
mov
push
out
fwait
mov
push
xchg
xlat
sub
test
push
mov
jge
adc
jl
xchg
cmp
jge
inc
push
fucomip
loopne
lret
shl
push
pop
je
sarb
pop
push
jnp
mov
mov
or
adc
sbb
out
fidivrs
int3
incl
cmp
adc
aad
dec
test
mov
call
into
mov
sbb
aaa
pmulhw
pop
mov
dec
fisttps
or
les
imul
stos
inc
mov
pop
enter
xchg
gs
xor
add
jne
cmp
inc
add
dec
data16
add
subb
sahf
jl
xor
add
stc
push
ss
mov
shrb
rcl
jnp
push
mov
leave
ret
inc
jae
jp
mov
pop
push
or
adc
adc
mov
aam
jecxz
loopne
mov
lret
daa
adc
es
lret
imul
xchg
and
out
ficomps
add
clc
mov
ret
and
mov
cli
push
push
mov
and
notb
mov
movsb
adc
orb
sbb
pop
fcoml
movsl
lcall
test
xchg
adc
test
adc
add
mov
out
in
mov
aad
cli
push
pusha
mov
sbb
push
dec
sbb
jmp
xlat
mov
in
dec
mov
sub
push
sub
nop
hlt
rol
sbb
adc
insb
dec
and
mov
mov
sbb
stc
pop
pusha
push
insb
loope
jge
dec
jns
ret
cmp
xor
push
xor
sbb
dec
jmp
loopne
mov
les
dec
sub
push
fisubrs
je
mov
pop
mov
out
sbb
lods
shll
lret
shl
lret
icebp
jae
stos
pop
shll
mov
jle
jnp
push
jns
push
pusha
jg
rorb
das
test
jg
hlt
insl
mov
xchg
and
cmp
mov
inc
dec
ficoms
mov
movsb
sbb
dec
loope
sub
es
pop
sbb
mov
addb
lret
pop
adc
jnp
test
sbb
cltd
call
pop
aas
mov
push
aas
mov
and
add
push
or
rcrb
pop
fldcw
push
lock
adc
out
mulb
stc
and
lahf
and
dec
lods
les
jle
xchg
andl
in
and
push
cmpsb
pop
xor
and
cmp
and
popf
mov
xacquire
xchg
insb
add
or
nop
push
cld
or
cmp
or
dec
and
movsl
push
int
xor
mov
leave
adc
sbb
jp
dec
fwait
sbb
adc
repnz
jbe
or
add
jb
les
stc
mov
lcall
cld
nop
xor
ja
jb
stc
das
lahf
jne
or
mov
das
mov
cmp
test
xchg
jg
or
jb
sub
xchg
add
xchg
adc
sti
pop
les
mov
sbb
ret
test
insb
jae
je
scas
jp
not
dec
ror
jle
jl
scas
push
and
pop
xor
pop
push
mov
xchg
imul
ja
fsubrl
jp
scas
sbb
or
movl
leave
cmp
or
push
cmp
mov
xchg
or
xchg
into
ss
inc
sahf
xchg
dec
or
loopne
xlat
mov
call
mov
pop
jne
dec
push
nop
test
les
aas
cwtl
iret
xchg
sub
aaa
mov
dec
push
movsl
jae
dec
mov
push
outsl
or
mov
mov
cmp
into
sbb
lret
xchg
xorl
adc
leave
jns
in
push
idiv
out
scas
cli
in
inc
or
mov
mov
mov
lahf
sbb
fs
dec
scas
imul
inc
mov
pop
pop
jae
daa
xchg
pop
int
inc
push
xchg
push
rcr
xchg
mov
inc
aas
mov
aaa
nop
lret
xor
and
sbb
ret
sub
sbb
movsl
int3
fldt
in
insb
imul
jge
mov
mov
outsl
mov
lahf
mov
call
out
mov
xchg
mov
pusha
lret
adc
inc
shlb
pop
into
add
cmp
jl
jge
nop
xor
cmp
push
clc
pushf
xlat
gs
mov
loopw
xchg
xchg
adc
and
adc
sbb
aam
outsb
pop
pop
sub
and
sahf
arpl
pop
test
in
pop
push
inc
inc
dec
push
shrl
add
jmp
sti
lret
cmp
inc
out
fwait
inc
aaa
addr16
ret
sub
ljmp
icebp
js
sub
cmpsl
popa
das
xchg
jle
and
cmp
cmpsb
in
push
call
mov
mov
dec
adc
xlat
les
inc
pop
std
inc
jno
fs
or
sbb
push
hlt
add
mov
mov
incb
insl
popl
mov
out
fcmovu
nop
ja
aas
sub
pop
rclb
mov
iret
decb
pop
push
es
and
testl
adcl
cmp
xchg
push
cmp
pop
inc
cmc
adc
xor
outsb
cld
fs
stos
pop
sub
mov
orb
sbb
arpl
lea
lods
pusha
iret
mulb
sub
test
movsb
xlat
cltd
jmp
rclb
inc
pop
mov
lret
mov
mov
mov
mov
fstpl
dec
je
sub
push
andl
aam
adc
pop
aaa
adc
add
lock
loop
dec
adc
mov
pop
repnz
cmp
mov
cmp
out
push
ret
xor
xor
loopne
shlb
push
movsb
out
loop
pop
mov
mov
dec
dec
xor
or
push
jge
pop
fst
jp
xchg
fcmovu
inc
int3
lahf
scas
js
jnp
mov
in
cmovnp
dec
cmp
jo
test
sbb
lods
lret
sub
mov
sbb
dec
xor
mov
jo
mov
mov
dec
jmp
inc
and
rclb
ret
inc
or
lds
loop
sub
pop
shrl
jns
sbb
fcom
leave
decb
sbb
js
mov
add
dec
jl
sbb
fists
stos
lods
int
sbb
mov
out
ss
push
sbb
stc
shlb
sub
and
addl
and
out
mov
dec
pop
jno
adc
lret
movsb
outsl
adc
mov
rcrb
mov
lcall
mov
jne
xor
and
inc
fists
stos
jge
adc
push
push
ret
or
sbb
cmp
and
mov
push
add
pop
popf
push
imul
jnp
imul
mov
test
in
pop
mov
out
inc
jo
xchg
push
xchg
push
icebp
sub
idiv
mov
xchg
iret
and
xlat
ss
mov
jg
test
dec
cld
mov
cmpsb
jo
repz
popa
rolb
inc
pop
pop
into
rolb
aam
outsl
jp
xchg
pop
mov
push
cltd
shlb
rorl
js
or
jge
in
mov
jne
dec
cltd
inc
or
cld
or
ds
xor
mov
mov
inc
and
dec
sbb
rorb
cs
mov
add
xchg
mov
lret
dec
mov
stos
in
inc
jmp
jp
and
lcall
and
shr
add
jg
fsubs
ss
push
cmp
mov
test
mov
popf
inc
xchg
in
xorl
pop
clc
repz
pop
inc
xlat
jmp
cmpps
and
scas
aam
addl
sbb
sub
xchg
or
lock
dec
int3
inc
push
fisubrs
sub
out
pop
push
and
push
cmp
and
test
fcmovnbe
cs
test
rolb
pop
inc
mov
popf
lret
cs
cli
xchg
push
mov
xchg
ja
mov
out
push
xorl
xchg
out
test
xor
add
add
xchg
fdivrl
movl
xchg
rorl
inc
mov
push
setns
je
dec
mov
fstpt
sbb
or
lahf
out
add
fists
enter
or
imul
repz
movsb
mov
lock
jg
mov
mov
stos
mov
cwtl
xchg
add
push
mov
icebp
ret
sub
or
mov
sbb
clc
xor
xorl
test
push
xchg
addb
adc
loop
aam
mov
inc
cld
pop
cld
xchg
sub
int3
push
jle
sub
mov
jecxz
or
lcall
push
and
jbe
xchg
int
sbb
call
adc
cmp
or
push
outsl
in
and
fwait
jmp
sbb
inc
jb
mov
ret
add
hlt
std
leave
jecxz
and
xchg
cmp
push
lret
ss
lahf
adc
decl
mov
jb
add
push
dec
ficomps
mov
sbb
adc
mov
test
and
lcall
push
jg
lock
mov
loopne
mov
add
mov
lret
int3
jne
sbb
cmp
roll
cmc
mov
into
imul
sbb
push
jmp
and
es
repnz
or
icebp
sarl
in
cmp
cmp
dec
fucomi
aaa
outsb
dec
dec
push
cmc
icebp
test
jae
xchg
pushf
ficoml
push
pushf
subl
cmp
pushf
push
stos
aad
cmpsl
stos
xchg
cmp
adc
adc
add
push
test
xor
addr16
cmpsl
xchg
fwait
cld
enter
mov
jbe
dec
push
push
and
jne
mov
test
scas
cmpsb
cmp
jo
das
and
dec
dec
mov
xchg
jp
lret
ds
lods
scas
outsb
mov
popa
movsl
push
mov
lret
adc
xor
jge
sub
jg
dec
push
stc
adc
cmp
push
and
movsl
pushf
fs
sub
ret
pop
or
data16
inc
sub
and
dec
push
adc
call
xor
in
mov
popf
lods
pop
jo
cmp
cli
in
stos
xor
inc
push
ljmp
inc
icebp
stos
ds
ljmp
sub
mov
push
pop
cmpsl
sub
push
into
les
rorb
and
into
xchg
or
push
dec
out
adc
cmc
test
jmp
sub
pop
ja
test
and
xor
loope
and
rcrl
pusha
push
dec
cmpsl
cltd
add
clc
jmp
jne
xchg
sub
sub
cmp
and
pop
xchg
jg
test
xor
dec
push
sbb
into
and
sti
cmp
fxtract
mov
xchg
inc
jp
xchg
inc
jnp
xlat
xor
mov
xor
ret
aas
adc
or
and
xchg
sub
push
add
in
and
and
stos
repz
or
es
lret
pop
dec
ljmp
bound
inc
and
in
aas
dec
out
adc
jne
add
push
repnz
pop
cs
loop
test
and
adc
mov
mov
push
inc
mov
cmp
mov
dec
lret
mov
in
imul
dec
pusha
call
sbb
out
mov
push
call
mov
fs
adc
jle
mov
push
movsl
mov
ljmp
mov
dec
or
inc
movsb
in
ret
arpl
jecxz
insl
pop
addb
ret
dec
aad
mulb
jo
imulb
mov
xor
xchg
mov
add
scas
in
adc
pop
fidivrs
rorb
loopne
cmpsb
insl
stos
test
xor
or
inc
jge
and
test
leave
into
dec
into
cld
inc
or
clc
sub
mov
sbb
mov
pop
movsb
mov
and
jle
cmp
mov
xchg
xchg
adc
rolb
add
testb
lea
mov
out
jo
or
cld
scas
ror
jae
pop
lods
cmc
jb
js
inc
jne
std
pop
push
xchg
xlat
xlat
and
mov
cld
add
jbe
int3
push
or
ss
cmpsb
jge
mov
rcl
push
push
jmp
push
sti
mov
pop
xchg
repz
mov
in
loop
sahf
dec
xchg
stos
push
int
jns
lds
push
test
xor
sbb
push
jle
setle
mov
repz
mov
movsl
jae
call
xchg
insb
daa
lea
or
add
cs
aaa
stos
sbb
push
js
fs
push
xor
in
fists
jnp
insl
inc
or
or
lods
jmp
andb
inc
icebp
adc
xlat
xor
mov
cmp
xchg
pop
and
jp
mov
jge
cwtl
adcb
jmp
push
sbb
js
mov
icebp
stc
mov
push
mov
fsubrl
push
and
data16
sub
push
popa
adc
sbb
outsl
loop
and
push
outsl
and
mov
shll
pop
movsb
hlt
popa
sub
push
movsl
icebp
ss
icebp
movsl
jmp
lea
sub
out
push
mov
in
shlb
jg
mov
dec
add
xchg
nop
mov
jbe
or
push
mov
pop
addr16
shll
and
stos
add
dec
dec
xor
and
int3
pop
jg
loope
fbld
mov
push
xchg
sahf
dec
adc
adc
cmp
pop
lods
or
mov
inc
lea
sbb
lahf
dec
call
sub
sbb
ds
push
xor
outsl
jge
lock
dec
inc
mov
pop
stc
fdivs
jns
inc
cli
and
sub
mov
inc
cltd
sub
xchg
and
adc
mov
xor
jnp
jp
sub
xor
into
inc
into
inc
lahf
imul
jnp
arpl
iret
dec
or
inc
call
ljmp
push
mov
push
jae
fimuls
xchg
shl
jl
adcb
pop
jle
push
test
out
xor
push
stos
cld
sbb
shr
fsubs
and
ja
mov
fcomps
cmpsb
adc
jb
adc
pusha
mov
sbb
lock
fnsave
xchg
arpl
icebp
or
inc
icebp
dec
test
lock
dec
xor
sub
jge
xor
and
and
push
fnsave
xlat
sbb
mov
mov
add
jno
in
lods
and
dec
jmp
sti
and
xchg
adc
shr
xchg
daa
lcall
add
popf
shll
sbb
ljmp
pop
dec
xchg
mul
popa
out
fsubrl
push
dec
insb
jl
mov
xchg
mov
subb
into
adc
mov
dec
iret
xchg
mull
push
pop
lahf
and
xchg
sbb
dec
mov
xor
ds
push
jno
jno
ja
es
or
jle
sbb
icebp
jge
in
or
and
sub
mov
add
mov
xor
sbb
mov
into
call
fisubrl
pop
insl
and
jp
dec
gs
arpl
dec
push
inc
adc
push
loope
scas
sahf
cmpsb
ss
mov
mov
xchg
lret
shll
push
addr16
sti
jmp
fidivs
and
into
mov
gs
popf
inc
mulb
push
xor
cmp
std
out
mov
add
xor
test
insl
pop
lds
dec
or
adc
mov
sbb
imul
mov
and
mov
xlat
shrl
call
dec
loop
xor
sbb
std
or
sbb
pop
xchg
stc
movsb
sub
les
and
and
lcall
mov
lds
cmpsl
jecxz
fmul
push
mov
int3
insb
in
push
in
ret
xor
lea
cmp
insb
enter
into
fldcw
push
repz
rcrl
dec
push
std
mov
lds
gs
push
xchg
addr16
mov
cmp
jbe
invd
jecxz
lret
shrl
lea
jg
bound
jns
cli
pop
in
pop
rclb
test
xor
in
mov
bound
sbb
and
mov
cmpsl
mov
dec
outsl
or
shr
adc
mov
and
rcrl
test
loopne
lock
pop
out
dec
sbb
stos
add
fmull
cmp
mov
dec
into
lds
fistl
scas
cmp
fstpl
dec
mov
jnp
dec
imul
xchg
pop
rolb
cli
lods
aaa
imul
cmp
push
loop
sahf
fsubr
movsb
or
pop
mov
fstpl
or
mov
je
rcll
jp
mov
jb
popa
scas
lahf
loopne
push
xchg
mov
ds
push
add
jp
mov
das
nop
movsl
cmpsb
fstl
int
nop
mov
outsb
dec
popa
int3
sahf
dec
aas
push
mov
lcall
inc
pusha
push
or
js
stos
xchg
mov
adc
push
add
gs
outsl
jecxz
dec
sub
stc
aaa
iret
dec
outsb
jmp
dec
dec
out
les
ljmp
cld
in
inc
jg
aam
in
pop
addr16
inc
mov
lret
cmc
push
lahf
arpl
add
loop
sub
testb
push
and
ljmp
jbe
pop
stc
jae
inc
mov
or
in
imull
mov
xor
pop
int3
fwait
sbb
icebp
dec
jl
testb
mov
fistps
fucomip
push
mov
sub
loope
lea
dec
jge
lods
call
mov
sub
xchg
xchg
jmp
hlt
adc
jl
in
les
sbb
sbbl
ret
and
and
ds
push
sbb
jl
addr16
or
push
cli
scas
lahf
add
mov
iret
test
test
mov
pop
aad
push
addr16
daa
or
xlat
xor
inc
jo
cmp
xlat
xchg
adc
mov
ljmp
xlat
repnz
xchg
cli
sub
bnd
xor
fnstsw
leave
pushf
ret
popa
mov
jg
mov
jb
xor
xchg
sbb
jmp
cmp
stc
dec
mov
mov
or
push
dec
pop
cmp
pushf
xor
xchg
fldz
std
enter
inc
jecxz
or
mov
jmp
xor
pop
cwtl
leave
xor
jl
push
xchg
jg
ret
hlt
inc
incb
adc
jno
es
popl
push
xchg
cmp
movsl
sbb
sbb
shl
in
mov
rorl
nopl
sbb
sub
or
jns
nop
das
stc
daa
lret
loope
jae,pn
test
jns
sbb
xor
gs
cmp
cmpl
cmp
and
jl
cmp
cs
inc
sub
cmp
nop
push
cltd
sbb
mov
sti
sbb
mov
lret
mov
add
scas
jmp
mov
ja
fistps
daa
lds
mov
pop
loope
nop
fbstp
test
fstp
cmpsb
jo
push
jl
pop
cmpsl
cli
add
ret
or
mulb
lock
pop
shr
dec
push
nop
jle
push
ja
xchg
dec
cwtl
bound
cmp
fcmovb
or
mov
test
adc
int
imul
js
mov
jno
pop
pop
sbb
cmp
mov
mov
inc
gs
add
sub
or
les
in
cmpsb
subl
cmpsb
push
icebp
add
cmp
rcrb
add
test
xor
pop
pop
lods
scas
pusha
ficoms
sti
push
sub
inc
dec
push
inc
cmp
xor
outsb
lret
and
cmp
adc
mov
xchg
jae
int3
and
fidivrl
mov
out
popf
pop
or
fmul
sbb
or
rorb
mov
imul
xchg
mov
xor
mov
xchg
cli
insl
push
ljmp
cmpsl
xor
jae
outsl
cli
call
in
roll
cmp
push
nop
iret
fs
in
dec
shl
dec
sbb
jns
and
das
mov
xor
rcr
loope
adc
pop
jb
ret
cmp
pusha
xchg
or
push
out
and
aad
jns
jo
jnp
ljmp
mov
mov
push
fdivr
std
aad
gs
pop
leave
lret
mov
in
hlt
xchg
sbb
out
pop
fidivrl
int
mov
jmp
pop
mov
pop
stos
inc
out
test
push
mov
mov
adc
outsb
sbb
ficompl
ljmp
clc
or
xchg
cld
mov
cmpsl
adcl
xchg
xor
adc
mov
icebp
ljmp
dec
mov
sub
xchg
push
lods
das
and
pushl
xor
or
add
xchg
inc
test
sub
sbb
xor
repz
movsb
lret
pop
or
les
xor
inc
pop
imul
int
stc
xchg
cmp
or
arpl
xor
push
mov
push
rorb
dec
sub
jb
test
push
inc
aad
mov
xor
fdiv
mov
jmp
rcr
and
clc
push
adc
mov
cmc
push
cld
cwtl
arpl
xor
test
pop
jns
pop
mull
mov
pop
pop
repz
jbe
out
imul
xor
cmp
pop
das
movsl
jno
sbb
lcall
aam
or
stos
into
sbb
outsb
lds
xor
sar
je
in
pop
push
jne
mov
pop
lret
mov
movsb
dec
in
xchg
push
stc
aas
inc
mov
imul
and
test
repnz
push
pop
and
and
movsb
xor
sub
fdivrs
sbb
jne
test
ret
mov
lods
fdiv
ljmp
rcrl
adc
lcall
insb
aad
mov
inc
fidivl
cmc
addl
aas
push
popf
jmp
sbb
dec
push
fsubrs
and
in
dec
jns
or
cmpsl
addl
lret
sbb
push
popf
je
aad
mov
fcomps
dec
or
enter
jns
push
sub
mov
or
mov
arpl
adc
inc
or
or
gs
punpckhbw
sbb
sbb
repnz
call
xor
sbb
mov
sub
push
adc
into
mov
push
movl
add
jns
xor
push
inc
dec
dec
adc
xor
push
adc
push
xchg
add
into
inc
popf
mov
test
js
lahf
popf
pop
lods
imul
test
xlat
in
das
push
jg
sbb
fimull
push
fmull
jl
xor
dec
mov
mov
clc
out
pop
lods
jl
push
pop
jbe
jp
xlat
xchg
and
jle
cwtl
push
adc
mov
inc
dec
push
arpl
push
fildl
push
lret
push
adc
xchg
cmp
push
enter
das
addr16
out
lea
adc
mov
push
leave
fidivl
inc
imul
fs
pop
insl
decb
mov
dec
je
ret
fidivrs
lret
pop
mov
mov
mov
mov
mov
ret
add
jb
sbb
test
cs
lahf
pop
jae
sub
rcrb
ss
test
loop
in
and
xchg
and
es
popf
call
jns
dec
shlb
ss
or
fcmovnu
cmc
adc
call
cld
mov
jns
in
loopne
jne
adcb
clc
scas
pop
and
outsl
jle
ret
in
repnz
dec
imul
clc
mov
jmp
mov
mov
add
xor
xlat
adc
add
or
xchg
es
mov
cmp
mov
push
mov
fwait
in
sarl
inc
cmpsl
es
mov
and
xorb
push
jge
stos
out
int3
jp
repnz
scas
or
xchg
cmp
sti
push
aam
dec
fstpl
sarl
mov
push
add
and
les
in
leave
sub
add
arpl
inc
cmc
or
ss
popa
pusha
push
jne
ja
insb
loopne
adc
std
xor
jecxz
cli
pop
lcall
clc
inc
add
cltd
jp
loopne
inc
fld
aaa
movsb
or
fmull
into
ja
ja
fcoms
dec
ficoms
imul
pop
shlb
mov
cwtl
aad
loop
clc
push
mov
sbb
or
xor
sbb
lock
push
repnz
xchg
sub
push
mov
lds
mov
lods
sbb
xchg
lods
call
fwait
out
in
lods
fbld
ljmp
sub
out
inc
adc
in
popf
out
inc
daa
pop
imul
mov
xor
xor
mov
pop
fisttpll
xchg
rep
fildll
jecxz
sbb
andw
into
insb
in
dec
imul
push
pop
dec
repz
cli
xor
out
leave
dec
lret
sbbl
lock
xor
or
xchg
ficoml
into
shrl
pop
fsubrs
adc
sbb
fwait
mov
push
push
fwait
pop
cmp
lds
fs
dec
mov
add
push
xchg
push
enter
pop
cmp
sbb
mov
mov
dec
push
out
mov
out
popa
jecxz
movsb
pop
out
jmp
test
test
add
test
mov
cmp
sbb
sub
pop
sub
mov
mov
fdivs
data16
push
jp
xor
inc
repz
mov
xor
in
loopne
cmp
sbb
push
jge
push
or
xor
inc
inc
or
sbb
cmp
sbb
or
lret
in
aad
hlt
icebp
call
jmp
shl
nop
aam
stos
jae
stc
data16
daa
decl
add
rclb
test
cltd
jl
rcrb
or
dec
dec
add
test
icebp
xchg
scas
es
addr16
jbe
loop
sahf
jmp
adc
dec
into
ret
mov
dec
mov
push
lods
popf
leave
in
call
sti
xchg
pop
mov
xchg
sub
sbb
mov
jmp
in
test
roll
js
movsl
mov
aad
adc
shl
movl
in
push
cmp
lods
pop
jecxz
xchg
mov
sub
sub
mov
imul
test
mov
xlat
outsb
mov
jmp
inc
mov
orl
not
xor
or
or
add
std
std
inc
je
sbb
aas
sarb
cvttps2pi
cld
xorb
pop
movsl
enter
add
je
movsl
cmp
add
cmpsl
xchg
dec
mov
or
sarb
and
not
repz
jnp
xor
roll
adc
xchg
ret
out
arpl
mov
out
leave
lods
enter
hlt
iret
outsl
cmp
std
sub
cmp
stos
jg
jge
dec
mov
push
ja
mov
gs
stc
adc
fisubrs
outsl
mov
jo
outsb
test
sahf
cmp
aad
aas
mov
popf
out
mov
jns
xor
adc
xchg
popa
in
cmp
inc
push
adc
xor
rcrl
xlat
pop
push
test
or
in
cmp
decb
sbb
jns
les
pop
mov
inc
dec
mov
xchg
mov
popa
or
cmp
mov
ljmp
arpl
or
cltd
sub
pop
jae
adc
xorb
pop
cmp
out
pop
addb
rcll
gs
data16
int3
pop
test
xchg
imul
or
pop
mov
sti
lods
push
outsl
push
mov
jae
in
pop
lret
mov
cmp
lea
mov
add
jnp
inc
dec
call
mov
cmc
cwtl
dec
bound
negb
out
xchg
outsl
popa
sbb
in
int
out
push
ret
pop
lods
mov
xchg
dec
in
pop
js
lea
jge
movsl
enter
cmpsb
ret
fstl
push
pop
xchg
popw
daa
es
mov
out
test
ror
push
push
repnz
mov
popa
or
inc
sbb
fisubrl
xchg
movsl
mov
or
cmpsl
add
adc
icebp
mov
push
or
or
pop
cmp
xchg
arpl
pushf
cmpb
mov
outsb
bound
addr16
leave
jge
daa
xchg
pusha
push
stos
inc
or
push
loopne
rol
mov
push
lods
mov
fdivrs
mov
jmp
xchg
xchg
mov
mov
push
popa
inc
xchg
adc
es
push
jecxz
add
outsb
enter
mov
cmc
mov
and
test
or
mov
dec
loop
and
dec
andl
out
jno
data16
ret
inc
add
mov
xor
push
aaa
mov
xchg
jae
ficomps
lcall
push
iret
mov
imul
jg
aaa
push
pop
int3
dec
jp
je
mov
cli
fstl
add
cli
cld
decb
jne
mov
xor
mov
or
mov
fmull
inc
jmp
jmp
or
sbb
sbb
add
cmp
addr16
mov
repnz
xchg
and
mov
mov
sub
lahf
add
xchg
std
rorb
outsb
aad
xor
jmp
subl
dec
loope
push
inc
adc
stc
cli
cmp
cmp
xor
mov
add
sbb
xchg
mov
mov
adc
add
enter
ja
mov
enter
and
pop
outsl
sub
jnp
ljmp
pusha
fisubs
je
gs
xor
addr16
xor
out
jp
addr16
adc
jbe
out
or
sbb
out
out
cmp
popf
into
int
fisubrl
aam
lods
mov
in
inc
lds
jp
sub
std
xchg
pop
mov
test
pop
push
insb
jle
iret
jno
iret
xchg
in
push
sub
addr16
sub
call
or
addr16
jne
nop
xchg
fldt
lret
sbb
jns
inc
movsl
nop
subl
jbe
rcr
fistpll
outsb
out
add
call
cmpsb
ja
testb
ljmp
cli
call
pop
insl
aas
push
in
mov
sbb
or
mov
and
jo
or
dec
in
xor
dec
stc
loopne
sbb
out
cmp
aad
fucomi
or
dec
dec
outsb
sbb
aaa
push
sahf
push
aam
dec
mov
cs
cmc
mov
inc
mov
out
push
add
lods
push
or
gs
test
pop
gs
popf
sub
add
inc
jl
lods
mov
jne
mov
dec
pop
dec
nop
lds
push
pushf
mov
or
xchg
and
mov
mov
adc
movsb
sbb
sarl
adc
sub
jbe
xor
mov
mov
xchg
cmpsb
popl
add
out
cmc
aam
leave
repz
sarb
frstor
aas
call
cwtl
imulb
mov
sbb
mov
test
or
pusha
sti
mov
sti
dec
popa
sub
iret
inc
mov
enter
icebp
rclb
and
cmp
lock
add
je
bound
std
mov
xor
push
jmp
pop
mov
jno
mov
xor
je
cli
inc
negb
push
sub
or
lret
cmpsb
mov
mov
pop
pop
rclb
push
aam
mov
out
sub
push
in
jno
lcall
cs
outsl
loope
xchg
jecxz
dec
into
and
push
mov
out
cmc
into
jle
jge
test
fucomip
dec
fnsave
int3
pusha
push
sbb
sub
dec
jge
jne
sbb
sub
sub
fisubl
add
dec
jmp
js
shll
repnz
das
ljmp
mov
pop
and
scas
loop
cmp
inc
lock
dec
shl
enter
push
mov
fistps
inc
dec
push
movsl
or
cmp
xchg
in
inc
in
sbb
mov
xor
loopne
aam
or
subl
cmpsb
inc
fmuls
mov
movsb
mov
adc
pop
or
js
test
dec
shrl
jo
jge
orl
pop
sbb
pop
xchg
mov
cmp
mov
lret
into
cmp
jae
add
int
cmp
mov
int
xor
and
scas
or
mov
pop
cltd
fstl
push
jmp
hlt
dec
mov
adc
fcomp
andl
lret
mov
enter
outsb
push
pop
cmpb
jle
add
mov
vmovsd
adc
cmp
jno
mov
xchg
sahf
cwtl
sub
mov
add
inc
push
push
add
sub
rcrl
test
fcmovu
pop
jb
shll
lcall
cmp
pushf
les
add
push
xor
jg
xchg
sarb
dec
push
cmp
fsubrs
add
loopne
popf
dec
jecxz
in
and
add
lock
add
and
stos
scas
les
add
lret
push
cmp
push
fadds
jnp
pushf
testb
out
add
gs
adc
repz
and
xor
adcw
lds
ret
add
andl
cmp
dec
mov
out
stos
ljmp
pop
loop
xchg
adc
mov
aas
mov
ds
shlb
sub
jmp
jno
sbb
jecxz
aaa
add
int3
and
out
mov
hlt
inc
xor
addr16
push
mov
inc
clc
and
out
cwtl
mov
sbb
jmp
cs
rcl
clc
out
in
gs
addl
or
mov
icebp
mov
fbld
inc
ffreep
lret
pushf
or
xlat
push
push
jae,pt
loope
cs
cld
lret
dec
movsl
push
jns
lds
jns
imul
bound
cs
stc
decb
cmp
imull
in
inc
xor
jo
enter
insl
sub
fwait
xor
jne
daa
ds
es
adcb
mov
test
in
pop
pop
scas
lds
cmpsb
je
xchg
repnz
js
push
call
adc
jb
cmp
inc
fists
pop
push
fidivs
mov
pop
into
xchg
push
mov
outsl
sbb
pop
push
pop
cmp
sbb
shll
lret
pushf
push
test
push
xchg
push
das
sti
dec
fistl
pop
xlat
movsb
shll
xchg
dec
jnp
jns
data16
xor
sub
jge
arpl
add
loope
popl
fwait
outsl
jnp
clc
jg
es
add
mov
data16
xor
mov
test
bound
mov
push
adc
rorb
call
aaa
shr
sbb
add
pop
xchg
push
cmovbe
xor
cmp
push
loop
mov
test
enter
aas
fsubrl
xchg
inc
adc
push
das
ljmp
pushf
dec
cmp
xor
jle
sub
jbe
movl
push
and
push
xchg
adc
mov
jle
jns
fsubs
outsb
xchg
xchg
arpl
enter
cmp
shlb
xor
fisttpl
mov
lock
inc
movsb
loope
push
sub
lods
adc
push
add
divb
sahf
sbb
xlat
sbb
add
leave
daa
subb
cli
roll
movsl
adc
daa
sbb
mov
mov
jmp
mov
pop
add
repz
xor
mov
cld
jmp
aad
dec
lahf
mov
popf
pop
mov
and
pushf
insb
adc
mov
sbb
push
data16
subl
scas
mov
lods
aas
and
push
or
dec
jae
pusha
stos
cmp
mov
push
jmp
sub
add
adc
mov
es
dec
leave
sbb
jmp
out
dec
mov
mov
jl
adcb
outsl
imul
lret
daa
idivb
std
aas
imul
adc
dec
daa
mov
push
dec
mov
into
das
adc
outsl
adc
jb
or
stos
cmpsb
cld
iret
bound
xor
in
outsb
addb
movsl
sarl
ds
test
loop
out
lea
inc
jns
movsb
call
fildl
adc
push
sub
call
shrb
dec
xchg
clc
cld
sbb
dec
adc
jecxz
in
scas
sbbb
dec
sahf
sub
and
insl
outsl
loopne
daa
jg
add
inc
popa
test
repnz
outsl
mov
sbb
mov
dec
or
movsl
subl
fisttpll
lea
mov
fnstsw
call
vcomisd
mov
dec
add
push
mov
sub
xchg
xor
mov
push
outsl
mov
or
cld
movsl
outsb
sbb
xchg
clc
mov
movsb
imul
mov
rcrl
or
fisubl
cltd
fs
roll
push
shrb
movsb
fldt
adc
mov
popf
ret
jge
mov
xchg
pop
fs
dec
or
jbe
adc
mov
xorb
xchg
insl
fistpll
add
loope
inc
roll
or
dec
fwait
add
mov
mov
jne
mov
and
arpl
jp
add
addb
test
cld
enter
mov
fcomps
aad
cmpsl
jg
and
mov
std
and
sbb
popw
adc
jmp
pop
sbb
cmpsb
scas
imul
pop
ja
jo
and
or
mov
rorl
aam
ss
iret
inc
mov
push
push
addr16
lret
popf
rclb
push
aam
subl
xor
jno
jno
lret
mov
xor
or
mov
cmc
pushf
outsl
cmc
aam
mov
repz
jno
mov
xor
lock
out
ljmp
jnp
cmp
xchg
jle
sbb
xchg
insl
hlt
inc
jl
xor
xchg
and
sub
mov
outsl
pushf
negb
cmp
aad
inc
xchg
addr16
inc
xchg
test
daa
notl
movsl
push
sub
bound
or
hlt
xor
sti
iret
inc
mov
call
dec
add
jg
jp
scas
mov
pop
dec
xlat
mov
adc
mov
lock
dec
outsl
loop
push
outsb
mov
push
fdivrs
cmp
ja
sti
xchg
test
stos
pop
adc
xor
jbe
imul
mov
jge
cwtl
imul
or
fildll
jge
mov
xlat
cmp
adc
or
rolb
es
dec
jne
mov
and
repz
pop
xor
inc
dec
sar
lcall
sub
push
popa
loope
xchg
xchg
daa
or
frstor
xlat
mov
cltd
lahf
sbb
cmc
popa
xchg
movsb
xor
ret
jo
adc
xchg
jne
sbb
cwtl
sbb
mov
fildll
test
sub
repnz
mov
loopne
sub
iret
add
ret
sahf
pusha
cmp
mov
aaa
mov
add
gs
adc
mov
imul
jecxz
int3
pop
xchg
jp
mov
add
addb
ficompl
cltd
lods
xchg
adc
insl
jbe
loop
sub
out
adc
and
mov
dec
je
mov
rcr
outsb
pop
es
lea
cwtl
jns
sub
lods
dec
movsb
std
out
inc
js
inc
and
scas
mov
mov
xchg
dec
xor
dec
push
aaa
inc
fmul
fmull
movsb
sbb
mov
cs
jnp
xchg
imul
push
arpl
lea
out
mov
shrb
cld
sti
jl
xchg
dec
jo
mov
xorl
jno
cli
mov
inc
and
and
pop
xchg
xorl
cmp
mov
inc
add
lods
dec
pop
jle
jb
jno
xchg
mov
cmp
and
jno
je
enter
out
ret
pop
int
xor
sub
add
in
ret
jle
pusha
ror
mov
sarl
sarb
xlat
stos
or
movsb
test
mov
mov
mov
popf
add
cld
fs
mov
xor
les
test
sub
and
pop
mov
leave
mov
mov
adc
ret
int3
lea
mov
adc
add
cld
inc
push
and
push
cmp
test
push
subl
sub
mov
cmp
mov
pop
mov
gs
jnp
lahf
int
scas
mov
xlat
push
frstor
das
mov
pop
lret
sbb
test
mov
sbb
jmp
repnz
sbb
adc
adc
in
ljmp
ds
nop
popa
imul
xor
and
add
xchg
div
ret
push
mov
cmp
test
inc
loop
sbb
ret
inc
fistpl
gs
andl
pop
je
fldl
lods
lret
insb
push
subl
adc
mov
movsl
add
or
push
pushf
ja
jne
xchg
xchg
jg
imul
push
aam
inc
xchg
testl
inc
xorl
mov
xchg
pop
mov
mov
aas
mov
addr16
mov
adc
jge
leave
cmc
lods
rorb
dec
outsb
mov
mov
mov
pop
fisubrl
cmp
or
push
jns
pop
pop
je
pop
out
aaa
lock
mov
cld
jb
mov
fwait
mov
test
inc
sub
push
ja
ss
or
push
pop
iret
fimull
pop
cmp
cmp
push
jle
push
pop
xor
mov
add
loope
jne
mov
and
cmpsb
enter
push
fistl
hlt
out
mov
dec
dec
and
dec
addr16
lods
jg
cmp
push
sbb
push
xchg
mov
ficoml
cltd
mov
mov
stc
xchg
gs
adc
aas
sub
orb
lods
je
int
xlat
shlb
and
loope
mov
push
in
call
aas
add
fwait
pop
lods
sti
adc
iret
mulb
popa
cmpsl
insl
mov
fnstenv
jno
inc
mov
dec
and
push
movsb
mov
outsl
stc
inc
outsb
lahf
xor
mov
inc
in
orl
shrl
rol
mov
mov
lea
or
daa
movsl
rorl
xor
cmpb
cmp
and
inc
mov
xor
das
js
push
add
adc
sbb
jb
dec
lahf
lret
push
xchg
push
inc
xor
test
xor
and
add
addr16
jg
cmp
sub
scas
pop
push
aaa
bound
add
cs
mov
jbe
pusha
shrl
pusha
iret
mov
cmpsb
cli
pop
or
mov
push
out
ss
inc
cli
leave
aaa
push
ja
mov
repnz
fsubrl
mov
pushf
mov
cmpsb
pop
sub
push
cmp
inc
xor
lahf
in
mov
push
fdivrs
gs
cmp
sub
cmp
int
jae
mov
jge
mov
stc
shrb
mov
outsb
stos
fcom
or
imul
je
repz
cmpl
sbb
pop
rcrb
push
fstps
cs
arpl
add
or
sub
adc
push
sbb
loope
mov
fists
test
in
push
notb
into
push
out
outsl
adc
mov
loope
cmp
or
es
rcrl
nop
pop
icebp
sub
roll
pop
inc
adc
imul
arpl
push
jo
sarb
ret
inc
jno
cmc
mov
aam
sbb
shrb
push
fstl
dec
test
inc
shll
ss
xor
mov
jge
dec
repz
dec
decb
jge
ja
xchg
aad
test
movsl
jle
pop
xchg
cmpsb
cmp
xor
sub
imul
es
mov
pop
lods
xchg
shr
ret
push
push
outsb
fildl
inc
add
movsl
mov
add
ret
ljmp
pop
pop
loop
xchg
je
add
cmp
f2xm1
cmpsl
xor
sub
jle
jecxz
dec
mov
gs
pop
xor
inc
sub
pop
lahf
sti
mov
push
pusha
inc
xlat
int
dec
dec
aam
out
pusha
sub
dec
pop
cmp
inc
xchg
stc
test
xchg
lea
xchg
jns
nop
or
mov
lcall
popa
pop
mov
jne
repnz
xchg
aas
xlat
lea
jle
sub
or
push
pop
nop
loope
mov
pop
mov
cwtl
movsl
addr16
pinsrw
adc
mov
inc
out
sub
insl
jno
mov
ljmp
lcall
and
add
in
subl
push
mov
popa
decl
push
jae
xchg
cmp
mov
inc
lods
daa
sbb
cmp
in
inc
aaa
pop
popf
mov
mov
inc
in
cmp
icebp
lods
data16
fldenv
inc
or
xchg
or
xchg
inc
mov
rclb
mov
hlt
test
popf
ret
adc
jle
mov
andl
push
mov
test
mov
pop
add
and
jmp
sbb
jle
adc
jne
aam
addr16
sub
jg
mov
add
mull
xchg
jbe
sti
outsb
outsb
rcl
sub
jge
cmc
in
mov
es
pop
ljmp
outsl
mov
push
outsb
dec
push
in
sbb
ficoml
pop
jnp
lret
sbb
and
mov
jne
xor
dec
aaa
in
jge
rclb
xor
imul
in
adc
mov
cs
and
inc
scas
add
mov
add
pusha
sub
pop
cld
fistpl
cmp
pop
jp
loopne
dec
mov
push
or
out
call
cmpsl
mov
xchg
fldenv
cltd
aad
push
push
int
pop
inc
dec
aaa
rclb
sbb
pop
push
cmpxchg
rcrb
rol
sub
xchg
pop
ja
mov
mov
mov
push
data16
add
sbb
mov
cmc
scas
arpl
dec
out
subl
adc
jnp
or
adc
rcrb
lock
rolb
mov
jmp
imul
into
inc
mov
lods
in
loope
dec
popl
inc
sub
jne
add
mov
xor
addb
rsm
inc
iret
pop
push
in
push
push
call
sub
mov
mov
cmp
push
pushl
and
push
arpl
mov
movsl
sahf
mov
push
rolb
movsb
cmc
and
ljmp
mov
mov
xor
xchg
xchg
fstps
sub
data16
in
ret
fwait
call
mov
dec
mov
js
dec
insb
test
dec
lret
ficoms
pop
adc
push
xchg
std
pop
mov
inc
add
ljmp
jp
lcall
xchg
stos
or
data16
adc
or
in
jae
jg
movb
mov
in
cmp
xchg
in
insl
clc
pop
fld
fst
in
and
jg
cmpsl
lods
ljmp
pushw
test
push
gs
or
mov
fsub
push
or
adc
mov
std
xchg
jb,pt
pop
sahf
cmpsl
insb
mov
call
add
and
sahf
fnstenv
dec
xor
insb
outsb
sbb
lock
ds
jge
ror
adc
jae
fcomps
and
xor
xlat
push
aas
scas
lods
jg
gs
xor
or
sahf
and
stc
sarb
cmpsl
mov
push
lods
cmp
add
jae
mov
mov
and
repz
in
stc
cmp
in
mov
xlat
in
fisubrs
js
lock
sub
or
mov
movsl
sub
pop
jae
negb
xchg
mov
ds
test
dec
andl
jmp
jbe
pop
cld
mov
iret
pop
sub
and
lret
hlt
and
xchg
pop
fcompl
and
pop
mov
adc
lcall
mov
xor
out
mov
les
mov
jne
xchg
popf
xor
sub
mov
add
or
xchg
call
popl
popa
sbb
fnstenv
icebp
inc
shr
fidivl
mov
loope
iret
outsb
pop
fisttpll
out
jne
or
aaa
dec
cltd
es
cmp
sub
ss
jg
and
and
jg
add
stos
movsb
test
test
test
pop
jl
adcl
stos
pushf
insb
add
cmc
sub
and
in
inc
fld
out
pop
mov
inc
xchg
xor
scas
rcl
aas
jnp
dec
pushf
sti
adc
jno
add
outsl
ret
idiv
and
sub
lcall
mov
dec
loope
push
xlat
rorb
nop
outsb
cld
xchg
je
push
rep
sbb
jne
outsl
or
rcr
out
xchg
pop
das
and
dec
dec
mov
dec
fwait
and
hlt
sbb
add
xorl
stos
adc
or
das
out
mov
dec
cmp
add
pop
inc
mov
lret
imul
jg
fistps
leave
fistl
mov
push
adc
pop
cmpsb
lock
sbb
scas
leave
cld
ja
lock
rcl
test
dec
mov
daa
cmp
ret
mov
or
and
cmp
out
and
popl
mov
sub
cmc
jno
xor
sarb
stos
shl
sub
jb
jmp
shl
test
inc
aad
ret
call
and
xor
call
push
leave
xor
xor
and
cltd
cmp
xor
das
pop
mov
sub
sub
daa
sarl
mov
aas
test
fs
je
scas
jne
push
loope
adc
jo
xor
xchg
fnstenv
stos
jns
mov
or
mov
popf
daa
imul
or
sbb
inc
fcoml
dec
ret
mov
xchg
outsl
ja
dec
xchg
pop
lcallw
add
mov
lret
dec
call
add
in
xlat
cmpsb
sahf
into
sub
sub
push
pop
aam
mov
mov
add
das
inc
fsubrs
ljmp
lret
cmpb
das
ja
pop
fnstsw
mov
das
loope
or
shld
mov
sub
adcl
push
push
shll
movsb
cmp
push
mov
test
je
in
mov
or
cltd
pop
in
pop
xchg
into
cmp
popf
adc
pop
subb
loopne
popf
imul
sbb
push
xchg
push
sbb
jnp
adc
cmc
fs
sti
mov
xor
cmp
push
fisttpl
enter
pop
lods
xchg
push
sub
sub
ja
pop
sub
add
popf
add
xchg
dec
fcmove
xchg
jle
mov
xor
mov
dec
add
sahf
mov
adc
incb
xchg
and
test
xchg
cli
and
fwait
and
mov
ficoml
test
push
sub
pusha
push
pop
insl
andl
adc
lods
dec
pop
push
stc
inc
call
fmull
adc
sub
js
sub
es
and
mov
addb
lcall
xchg
out
movsl
pop
xchg
call
or
dec
pusha
xchg
push
mov
fs
out
clc
jnp
outsb
cmc
lods
sub
adc
mov
pop
inc
xor
sti
decl
das
ret
add
dec
jno
fwait
imul
adc
pop
cwtl
aaa
xor
or
pop
int3
mov
xchg
pop
and
cmp
push
and
pop
iret
sbb
aad
add
sbb
mov
push
dec
in
int3
jmp
jmp
arpl
and
sub
add
or
out
dec
lret
mov
sti
adc
bound
roll
push
lcall
push
and
fyl2x
cmpb
adc
gs
fldl
mov
sub
push
push
push
or
pop
mov
cmp
mov
pop
mov
into
mov
adc
out
out
add
push
test
pop
scas
jl
hlt
sbb
cwtl
lahf
cmovp
daa
jmp
enter
xor
push
mov
sbb
mov
or
pop
jp
scas
jns
cmpsb
mov
adc
notb
push
std
push
cwtl
push
scas
pop
insb
mov
imul
shrb
push
cwtl
adc
xorl
les
ja
int3
loopne
jb
and
pop
push
fisttpl
push
xchg
cmp
push
adc
cmc
inc
in
aaa
or
mov
pop
jg
enter
pop
rolb
jo,pn
inc
sbb
call
lret
std
cmp
push
cmp
or
jl
incb
jle
push
nop
fcoms
imul
imulb
mov
pop
into
stos
add
push
lock
das
xchg
xor
ja
rorl
pop
je
lcall
or
pusha
jo
loopne
aas
sbb
cltd
es
pop
push
clc
in
stos
xchg
ret
lcall
popl
lret
dec
pop
pop
cmp
fidivl
pushf
xlat
ljmp
sbb
cwtl
mov
popl
mov
cli
out
stos
stos
hlt
jmp
test
out
out
rcrl
adc
cli
pushl
or
ljmp
out
push
stos
cli
cmp
sub
popa
adc
fcoms
sbb
fadds
es
mov
outsb
testb
imul
movsl
sub
xchg
add
les
xchg
jo
push
popa
ljmp
in
mov
push
stos
mov
out
sub
repz
lcall
pop
cmp
out
mov
xor
inc
loop
sub
stos
xor
repz
inc
fists
test
rolb
cmp
pop
mov
push
or
xor
xor
mov
pop
lret
fnstcw
sub
push
out
sbb
dec
int
clc
mov
sti
pop
loopne
adc
aam
dec
inc
inc
mov
jo
shl
or
rolb
ret
inc
dec
lods
mov
xchg
test
push
call
out
jle
mov
fsubl
outsl
mov
mov
int
loopne
dec
sub
out
test
in
iret
es
xchg
xchg
sub
outsl
ja
jecxz
rclb
insl
add
mov
and
inc
mov
iret
in
cmpsb
loop
xchg
push
mov
aad
mov
pop
add
mov
cmpsl
sbb
mov
jns
fldcw
lret
aam
jbe
or
int
mov
pop
mov
inc
movsl
js
out
mov
test
mov
popa
cmp
ss
jg
cltd
negb
adc
pop
shrl
repz
mov
nop
adc
pop
adc
and
pop
push
int
testl
push
dec
in
add
lcall
mov
mov
and
outsb
mov
inc
lcall
mov
or
shl
mov
xchg
aam
xchg
push
mov
jecxz
mov
loop
or
sbb
push
scas
inc
jnp
inc
rcrl
mov
mov
xor
ficoml
add
xor
rcrl
mov
jns
add
xchg
xchg
mov
xchg
jb
loopne
jae
mov
push
lret
and
push
adcb
test
add
mov
mov
adc
lahf
xor
push
inc
fsubrl
mov
adc
jmp
adc
jp
hlt
lcall
pop
fsub
adc
jge
ja
scas
xchg
mov
cmp
fstpt
ss
inc
fcoml
insb
mov
aaa
ja
test
call
mov
inc
inc
lret
aad
push
lock
push
sti
sbb
iret
push
add
adcl
shrb
das
test
enter
loop
shr
push
loopne
push
mov
movsb
cwtl
cltd
stos
enter
out
push
pop
test
and
fmul
notb
stc
sbb
mov
test
insl
xchg
mov
cltd
ss
popf
and
mov
in
sarl
add
jae
cmp
jbe
fistpll
setg
fwait
pop
sahf
andb
bound
daa
sub
stos
push
lods
add
adc
mov
jne
test
cmp
cli
xchg
inc
cmc
jno
sti
lcall
out
push
das
ret
pusha
jle
cmpsb
xor
and
fimull
pop
jmp
lds
sti
dec
pop
incl
or
inc
mov
xor
rcrb
sub
push
in
es
adc
add
loope
and
ja
xchg
in
je
mov
mov
clc
xchg
sub
faddl
jnp
fstl
cmp
aaa
test
cmpsb
shl
mov
vpinsrw
push
inc
js
push
mov
iret
mov
sbbb
jge
sub
mov
mov
sbb
pop
jno
mov
jnp
daa
dec
insb
inc
outsb
lret
mov
cs
pop
adc
fidivs
jg
mov
das
mov
es
pop
xor
push
es
pop
pop
dec
adcl
xor
sti
iret
inc
fcmovnbe
sub
fists
pop
cmpsb
cld
out
call
sar
or
iret
mov
or
xchg
mov
add
pop
imul
aas
repz
mov
fs
mov
dec
mov
lods
cmp
popf
mov
add
jle
inc
mov
rclb
arpl
push
rolb
shrb
jmp
mov
test
push
popf
flds
loopne
lea
mov
cmp
movsb
cmp
outsb
jb
pop
sbb
cmpsb
cmp
mov
stos
in
pop
loopne
push
aas
int
jne
mov
in
add
cmp
sub
out
inc
pushf
pop
cmpsb
mov
pop
pop
push
in
gs
test
mov
mov
add
addr16
jge
leave
xor
jae
pop
loopne
insl
mov
sub
mov
pop
insb
dec
dec
push
mov
ret
pop
dec
add
pop
scas
jge
int3
ret
inc
xchg
pop
and
test
fcmove
notb
and
pop
mov
out
xchg
mov
inc
xchg
inc
mov
rorb
dec
sbbb
movsl
fnsave
rcl
fcmovnbe
lahf
in
pop
xor
adc
sarb
adc
cmpsl
mov
jnp
in
ds
jle
sub
or
xor
aaa
inc
adc
sbb
enter
int3
pop
xchg
out
cmc
dec
mov
jno
leave
rcrl
fnsave
xor
and
dec
jb
data16
or
cld
and
mov
stc
lds
sbb
aam
fadd
daa
mov
push
add
mov
xor
jo
or
jns
mov
outsl
cmp
jge
idivb
sub
rolb
sub
pop
xor
aad
es
xor
lahf
nop
add
jecxz
cmp
aas
mov
xorl
fnstenv
shl
cld
mov
fldcw
movsb
dec
stc
out
aas
or
jns
scas
and
iret
dec
xlat
add
lods
arpl
aaa
dec
xor
push
add
push
leave
cmpsl
clc
or
xchg
xchg
insl
orl
jo
adc
mov
movsb
loope
sub
lahf
pop
jb
push
aas
sarl
inc
fsubrl
add
enter
popf
push
enter
out
fcomip
scas
mov
and
das
cwtl
arpl
push
int3
enter
cs
cs
pop
inc
call
or
mov
push
jecxz
mov
int3
sti
adc
addr16
sbb
inc
fcmove
xlat
jns
sub
jno
pop
nop
loope
pop
arpl
and
imul
popl
and
xchg
xchg
out
adc
xor
cmp
clc
add
inc
mov
pop
jmp
mov
bound
jge
orb
or
fs
inc
xchg
nop
insl
cmp
dec
mov
outsb
dec
hlt
push
mov
ss
push
mov
cmp
loope
inc
testl
mov
mov
loope
pop
cmpsl
fdivl
fldl
xchg
cmpsl
fdivrl
jns
dec
xor
mov
mov
xor
aad
mov
mov
mov
mov
inc
repnz
jo
nop
call
outsb
icebp
pusha
movl
xlat
addl
xchg
dec
xorl
jbe
dec
sbb
adc
and
jno
mov
movsl
in
cmp
mov
fstpt
movsl
dec
xor
jo
imul
fcoms
rcrl
mov
pop
aam
repz
cmp
xor
cmc
test
iret
jae
xor
pop
mov
or
outsb
cmpsb
out
insb
adc
rclb
ficoms
mov
sub
fdivr
ficoml
es
test
push
xor
in
or
jmp
jmp
mov
das
or
sarb
inc
xlat
in
pusha
orl
cmpsl
add
dec
fnstsw
jno
ds
dec
fstl
subl
sub
popa
inc
sbb
lahf
pop
sub
aad
inc
push
popf
mov
ror
fwait
fs
shll
nop
mov
xor
aam
add
push
mov
fcomp
ret
repnz
cwtl
xchg
ret
sahf
push
jge
sub
pop
xor
rcl
jmp
inc
push
xchg
pop
xchg
cwtl
adc
cli
mov
mov
xchg
mov
cmpsb
inc
mov
and
mov
and
xor
or
and
or
call
mov
dec
mov
divl
imul
jle
pop
repz
jecxz
or
aad
push
jbe
mov
fwait
into
cmp
jnp
sub
adc
xlat
ja
sbb
push
add
pop
mov
xchg
movsl
arpl
ficomps
sahf
psraw
pushf
inc
loop
addb
xlat
fs
mull
rol
stc
jecxz
imull
jg
sub
xchg
std
add
out
aam
and
or
mov
xchg
repnz
scas
dec
lret
sbb
dec
cmp
ret
sbb
mov
pop
cmp
lock
add
inc
cmc
add
dec
sub
mov
lods
cmp
or
jbe
jbe
jl
leave
shll
mov
mov
push
aad
pop
cmp
adc
xlat
das
lds
aas
stos
adc
sarb
jno
mov
inc
cltd
aam
dec
stc
ljmp
inc
mov
pop
and
jge
cmp
pushf
sbb
push
dec
sub
dec
pop
mov
jle
mov
stc
aam
inc
pop
rolb
mov
cmp
xor
inc
je
inc
lods
data16
dec
jle
lock
jg
mov
jp,pt
mul
mov
push
sbb
loop
int3
lea
pop
inc
cmp
dec
mov
dec
pop
mov
lea
push
neg
call
inc
push
and
push
rclb
or
pop
push
enter
js
xor
push
add
daa
movsl
push
xor
mov
push
js
shrb
push
lret
jmp
sbb
cmpsb
pop
xchg
sahf
sub
xchg
dec
push
pusha
outsb
pop
add
insl
xchg
stc
adc
jno
test
cmpsl
adc
out
std
xlat
bound
mov
mov
sub
sub
test
sub
xor
and
jns
aas
xor
add
inc
sub
xchg
xchg
jae
jmp
negl
in
rolb
shl
adc
out
out
push
daa
mov
fcomip
push
xchg
xchg
int
xchg
mov
xchg
mov
xor
xor
call
ret
sub
xorl
outsl
jmp
cltd
fsts
dec
shlb
pop
int3
rcll
push
xchg
xor
sbb
xor
push
sbbl
xchg
mov
mov
ror
or
xchg
in
xchg
or
push
shr
pop
jb
outsb
sahf
repnz
mov
ljmp
popa
cwtl
pop
shll
negb
cwtl
icebp
stc
push
xchg
loopne,pn
in
inc
push
lock
mov
jl
sbb
jle
hlt
sub
xor
or
enter
outsb
add
je
and
mov
pop
mov
ret
lds
cli
mov
and
mov
loope
imul
sbb
cmp
rcr
ficompl
test
jae
pop
ja
xchg
mov
mov
sub
xchg
fldl
xchg
xor
jnp
jle
int
mov
outsl
mov
imul
ljmp
jp
sbb
and
mov
pop
and
aas
cmpsl
sbb
sub
push
in
mov
bound
stos
and
push
aaa
lahf
cli
push
insl
dec
jg
repz
pop
jp
mov
movsb
fdivl
mov
sbb
mov
outsb
dec
add
xor
aam
jecxz
add
mov
jo
or
mov
mov
sub
xor
aaa
xlat
cmp
inc
out
arpl
imul
cmp
cmc
bound
ret
es
ja
pushl
xor
vmread
fstps
cmp
arpl
roll
fwait
push
insl
popf
mov
lcall
dec
popf
out
xor
popf
add
cmp
loop
fld
mov
sbb
ret
pop
jle
mov
or
sbb
adc
cli
das
out
xor
lret
jle
dec
jecxz
fsubrs
cmp
fsub
or
leave
inc
pop
adc
or
cmp
dec
and
and
mulb
fmuls
loope
or
fiadds
repz
aad
int3
jecxz
xchg
jmp
or
mov
mov
pop
add
pop
mov
das
addr16
add
mulb
mov
out
mov
pop
sub
sub
mov
sbb
fisttpl
mov
pushf
or
das
xchg
insb
pop
xchg
pop
xchg
xlat
dec
or
mov
sbb
out
inc
lret
jo
andb
jne
loope
sahf
xchg
dec
test
out
enter
mov
inc
add
loopne
sbb
xchg
push
dec
sbb
mov
xchg
ret
ljmp
inc
out
ret
out
cltd
pop
xor
sub
mov
lret
out
pop
inc
in
stos
popf
or
popl
add
enter
sbb
cmp
outsl
xchg
ds
or
push
scas
out
aam
pusha
xor
mov
xchg
cmp
xor
repnz
cltd
mov
pop
push
inc
fucomi
jecxz
fnsave
popa
scas
xor
jecxz
mov
mov
jl
repnz
inc
ss
jg
mov
jnp
inc
sbb
aad
xor
xchg
popa
xor
into
add
adc
daa
rolb
stc
icebp
pushf
cs
or
movl
xor
cmp
mov
jo
dec
jne
sbb
movsb
and
push
js
inc
xchg
adc
rcrl
lret
and
adc
es
scas
fisttpl
dec
ret
lods
pop
and
mov
jo
pop
ficoms
ja
adc
cli
int3
mov
mov
mov
sub
jnp
mov
pushf
addr16
test
adc
pop
mov
daa
insb
pop
cmp
adc
jae
mov
push
xchg
leave
xor
test
inc
enter
insl
xchg
xlat
inc
movsb
dec
pop
out
cmp
and
hlt
jnp
sub
pop
in
imull
dec
lret
lret
ss
out
outsb
nop
fs
mov
mov
in
insl
repz
cmp
mov
pop
mov
xor
insb
xchg
mov
insl
adc
mov
jbe
mov
xchg
insl
mov
mov
mov
fists
mov
cmpsl
sbb
ds
push
mov
sub
sub
sbb
dec
or
dec
in
test
mov
adc
in
sbb
sub
into
pushf
xbegin
push
pop
mov
xor
loop
sbb
cvttps2pi
mov
push
sbb
xchg
insb
mov
and
into
cmp
pop
pushf
test
in
sbb
push
mov
rcrl
mov
mov
test
or
pop
and
out
mov
repnz
push
call
outsb
and
xor
imul
out
jl
xor
iret
fwait
lea
popl
subl
cmp
cmp
leave
jg
aad
push
and
icebp
sub
pop
sub
add
repz
mov
in
add
sub
mov
je
inc
flds
nop
out
lcall
fdiv
sti
fimuls
sti
or
xor
jns
pusha
popf
lcall
sub
inc
cmp
jp
sub
stc
xchg
cmp
aaa
pop
loop
lock
and
aad
push
out
mov
cmpsl
cli
cs
add
or
lock
hlt
xchg
movsb
sbb
cwtl
fidivl
add
test
ret
mov
xabort
jnp
push
dec
sbb
out
popf
out
in
adc
mov
jmp
pushf
or
in
setg
cmp
addr16
mov
fcompp
mov
aam
inc
notb
in
insl
add
lret
cmpsb
mov
pop
add
xor
push
and
in
mov
xor
icebp
movsb
jno
xchg
jp
loope
sub
imul
in
push
shll
and
jmp
aam
mov
dec
jle
jbe
loop
mov
movsl
sti
pop
insb
les
ficompl
arpl
cld
inc
cmpsb
add
shrl
mov
popa
rclb
add
mov
sub
movsl
imul
and
and
rcl
lds
frstor
test
and
ja
pop
sti
push
dec
stos
adc
push
push
frstor
loope
fdivl
cmp
mov
mov
inc
loope
push
call
inc
rclb
xchg
cmp
test
jno
in
aam
adcb
mov
cmc
int
and
testl
xchg
fistl
loopne
sub
push
clc
lock
sbb
test
hlt
incl
in
sbb
call
mov
imul
xor
mov
scas
dec
cmp
and
add
clc
sub
xchg
push
dec
push
sarl
lret
in
fcoml
sub
ret
pusha
popf
push
arpl
xor
inc
pusha
enter
mov
mov
jne
mov
xchg
add
mov
add
hlt
pop
int
mov
lock
call
fsubs
test
and
cs
clc
sub
and
mov
pop
dec
push
xor
sub
mov
enter
js
out
add
push
jo
add
enter
jb
shl
mov
sbb
fcoml
push
jo
lods
andl
mov
pop
and
ds
outsl
sbb
xchg
rcr
int
and
xchg
ljmp
push
xlat
xchg
push
shrl
fcomi
hlt
add
sub
adc
lock
jbe
push
sti
fisttpl
mull
and
stos
mov
inc
in
push
sub
jno
mov
mov
and
cmp
add
sar
lds
std
push
gs
lock
test
mov
shlb
lcall
cmp
jmp
ss
sub
mov
pop
fisubrs
xchg
popa
xor
cld
xlat
cwtl
jge,pt
add
xor
stc
and
cli
cmc
ret
fwait
or
in
or
mov
xchg
daa
mov
pop
dec
sub
lret
adc
loope
ret
dec
ret
mov
call
dec
pop
popa
mov
add
ror
mov
js
outsl
insl
cmp
push
jmp
or
das
jbe
pop
les
jmp
sbb
cmp
test
jg
mov
std
scas
pop
mov
push
mov
dec
xor
cmp
pop
imul
sarb
fimull
inc
push
test
frstor
rcl
into
loope
decl
add
add
cmp
lods
fnstcw
and
sarl
in
and
rcl
into
pop
loope
jg
loope
sbb
loop
imul
es
daa
push
in
or
fsubp
jp
xor
out
loope
mov
test
push
insb
jg
push
popf
jnp
popw
mov
cmp
and
mov
shll
push
pop
inc
dec
icebp
dec
push
sbb
push
sbb
push
pop
add
insb
or
jnp
iret
push
js
xlat
movsb
js
fldl
ret
jl
adc
push
cmp
sbb
xlat
mov
aaa
add
or
or
mov
sub
scas
inc
imul
push
dec
frstor
dec
outsl
dec
ljmp
loope
cmc
mov
inc
adc
push
mov
lret
push
inc
lea
xchg
xchg
clc
push
loop
xchg
xor
add
or
sbb
fsub
push
pop
jns
iret
aaa
fiadds
divb
add
mov
jmp
rcll
add
pop
mov
aas
or
lods
add
ja
or
fidivl
jl
ja
add
sub
dec
fbld
push
adcb
subb
stc
cmpsl
mov
lea
aam
jno
test
inc
sbb
jp
inc
gs
mov
adc
xchg
lods
mov
sbb
mov
mov
pop
test
gs
ja
add
sbb
pop
fisubl
jge
xchg
sub
add
ret
sbb
cmc
adc
add
loopne
mov
mov
aas
adc
mov
mov
lret
rorb
jp
jnp
or
dec
jle
xor
sbb
xor
sbb
dec
mov
clc
cltd
call
inc
mov
insl
xlat
jle
push
cmp
mov
inc
mov
fcomi
shll
es
movsb
jmp
sti
or
pop
jle
xor
mov
enter
mov
mov
jg
pop
or
int
inc
in
push
add
stos
jns
xchg
imul
ret
adc
das
in
pop
loop
bound
xor
jl
mov
sar
js
push
test
inc
insl
inc
sar
dec
mov
fdivp
push
flds
cmp
in
mov
push
in
out
int3
add
jmp
cmp
mov
adc
sub
adc
sub
add
pop
sbb
or
mov
test
fistpl
adc
enter
sub
pop
lcall
movsb
mov
mov
push
fucomi
and
in
iret
sbb
sub
ja
icebp
outsb
outsl
shlb
lock
mov
sub
inc
jl
xchg
or
cmp
mov
push
mov
incb
fdivr
xchg
add
fs
sub
dec
jno
push
cmovnp
cmovle
adc
add
mov
mov
adc
dec
push
pop
dec
test
lret
cmp
sub
push
and
fmull
pop
call
push
rcl
cmp
dec
aas
arpl
leave
jbe
or
add
mov
lea
out
sbb
insb
push
push
scas
addb
adc
ljmp
xchg
sub
or
movsl
and
js
popf
or
nop
mov
mov
mov
iret
stc
pushf
and
lea
inc
mov
jmp
push
sarb
sub
nop
icebp
scas
fisubs
mov
in
fbld
xor
pop
push
fcmovnbe
dec
idivl
pop
dec
add
inc
outsl
jno
mov
enter
dec
pop
stc
sbb
fsubl
jp
pop
iret
xchg
nop
mov
add
cmp
dec
and
jl
cmp
cmp
out
ja
adc
stos
cmpsl
push
adc
pusha
sahf
es
jbe
orl
pop
int3
jg
pop
mov
outsl
stos
inc
cmc
jbe
push
pop
push
xlat
jne
int
out
je
pop
hlt
mov
pop
sub
aaa
xchg
jns
push
cmp
cmp
ja
ret
int
mov
push
jae
pop
jg
cs
xor
cmp
add
dec
ds
or
femms
pop
xchg
xchg
je
mov
xor
cmpsl
jo
or
rcrb
adc
pop
and
xchg
mov
je
jge
ret
imul
movsl
lea
mov
add
out
out
mov
sbb
push
adc
inc
jb
pop
xchg
inc
aaa
sub
mov
lock
fsubrl
mov
inc
adc
mov
mov
jge
ja
sub
mov
sub
jae
xchg
sbb
jno
lcall
into
push
or
pop
mov
push
out
dec
addb
mov
cmp
aas
loope
push
sbb
lea
push
mov
jmp
aad
sbb
inc
sub
and
mov
lds
arpl
sbb
push
mov
rolb
mov
repnz
mov
push
mov
aam
rclb
mov
jp
arpl
jle
mov
das
test
push
outsl
lret
lds
xchg
add
mov
int
out
jbe
push
test
andb
mov
adc
cmpsl
cmp
jo
aas
dec
in
dec
adc
pushf
cmpsl
fsubl
jle
jae
mov
cmp
iret
aas
jp
out
cmp
add
pushl
pop
imul
sti
lret
shlb
int
movnti
mov
xchg
and
int
jg
je
sbb
dec
rcll
dec
xor
push
cli
in
jnp,pt
test
inc
push
je
fs
mov
test
jl
jnp
cmp
ljmp
inc
pop
loopne
idivb
test
mov
aad
xlat
jmp
ror
and
inc
dec
mov
jecxz
xlat
int3
fldcw
mov
mov
jb
pushf
mov
xchg
in
lea
and
lea
aam
mov
sub
dec
pop
or
or
std
jg
jb
stc
test
and
aad
sbb
cmp
cli
mov
js
aaa
pop
push
inc
and
sub
popf
sahf
mov
int3
sbb
arpl
pop
mulb
jmp
xchg
lock
ja
dec
mov
mov
outsl
push
insb
ja
mov
lret
out
xchg
das
shll
inc
mov
mov
push
fwait
add
cmpsb
fldt
jbe
push
iret
dec
rol
dec
cld
aas
or
test
push
subl
shlb
or
push
out
imulb
xchg
in
sub
xchg
dec
cmpsb
out
add
fdiv
or
add
incl
stos
cmp
icebp
mov
aas
les
in
xor
sbb
rclb
fimull
adc
add
mov
addr16
rcrb
fsubrl
cmp
pop
pop
inc
push
idivb
pusha
adc
pushl
dec
dec
sub
pusha
sub
xchg
xor
adc
rolb
cmpsb
add
sbb
cs
push
sbb
test
cmp
mov
pop
in
push
pop
lods
popa
add
js
lods
in
push
push
pop
xchg
ds
add
inc
test
jl
lds
jmp
lock
lds
das
pop
xor
loopne
sar
sub
dec
push
arpl
js
repnz
mov
and
in
int
cmp
sub
into
push
cs
push
add
int
push
add
xlat
hlt
jo
adc
xchg
out
and
rorb
insb
incb
inc
test
push
adc
xchg
mov
lahf
ret
or
outsl
push
cld
cvtpi2ps
sub
out
adc
lods
es
fisttps
xchg
pop
mov
sub
mov
xor
xchg
into
data16
jge
add
sbbl
sub
mov
hlt
movsl
xorl
xchg
push
pop
std
mov
push
cmpsb
inc
push
mov
ror
mov
aaa
ficompl
lret
in
jno
jae
in
sbbb
xor
xor
sub
lea
insl
dec
xor
lret
lahf
sbb
pop
cwtl
cwtl
fwait
adc
mov
sbb
push
or
stos
daa
mov
mov
dec
add
cltd
dec
xlat
leave
xchg
aaa
rcrb
lcall
nop
sub
fcmove
std
out
xlat
rcrb
rcr
aas
icebp
mov
idivb
push
adc
popa
arpl
push
mov
or
lcall
ficompl
add
cltd
mov
cmpsl
jns
outsl
inc
add
lock
adc
jle
xor
adc
pop
cmpsl
adc
mov
sbb
cltd
push
aam
jns
mov
pusha
and
inc
lcall
inc
ds
sbbl
or
sub
sbb
sbb
loopne
pop
xor
mov
adc
lahf
cmpsb
out
dec
add
ja
cmp
fwait
adc
sub
push
mov
dec
divl
rcrb
sbb
mov
clc
push
popa
je
xor
or
mov
sbb
add
sti
jp
sub
movsl
sbb
je
in
inc
pop
sti
imul
cmpsb
mov
mov
jbe
xor
mov
lods
bound
addr16
stc
inc
out
js
mov
mov
mov
out
and
popf
jne
int3
inc
cmovns
xchg
loopne
out
mov
xchg
ror
cwtl
adc
sbb
movsl
lcall
push
bound
pop
inc
xor
dec
push
dec
sub
xchg
imul
xor
cmp
fbld
mov
adc
call
adc
or
je
outsl
int3
xchg
in
testb
jbe
cmpsb
or
int3
test
jbe
mov
adc
test
test
xchg
sbb
bound
mov
repnz
iret
test
jne
ret
sub
std
ficompl
pop
jg
add
enter
lds
xor
in
xchg
imul
mov
pop
pusha
ret
fs
test
and
push
push
adc
dec
cmp
fisubrs
scas
xchg
jae
push
xor
divl
mov
dec
das
inc
xchg
imul
ret
add
stos
or
stc
jmp
xor
add
mov
jle
lret
jl
js
xor
inc
fucomp
repz
sub
insl
lret
jg
jns
shll
std
sbb
dec
jmp
push
jl
ret
xor
push
sbb
fwait
dec
cmp
jno
orl
fists
or
ja
mov
in
ljmp
out
ja
xchg
int
pusha
jnp
mov
test
mov
inc
fwait
ret
xor
leave
iret
push
clc
fnstenv
xor
mov
cmp
loope
push
and
nop
push
cmc
lods
cwtl
divb
cmp
mov
clc
cld
or
xor
mov
xchg
iret
fdiv
lods
lods
mov
adc
test
push
jbe
xchg
int
scas
sub
shrl
insl
out
imul
xchg
clc
inc
stos
aas
shlb
add
push
adc
int
jo
nop
lahf
sub
fisubrs
sub
jns
jno
sbb
les
lock
adc
sub
mov
mov
xor
mov
push
fstl
lea
jmp
outsb
mov
pop
jns
cltd
mov
jo
test
sub
jbe
and
shrl
rolb
mov
jl
scas
test
fwait
lahf
loopne
xchg
sub
sub
xchg
push
mov
and
jno
xchg
fsts
mov
adc
or
push
sub
fldenv
lahf
cmp
adc
out
out
mov
sub
jbe
lahf
stos
aam
cmpsl
push
pop
movsl
mov
push
xchg
sti
xor
adc
add
adc
test
push
sub
xchg
mov
xor
or
jbe
push
jmp
dec
cmc
jns
sub
push
sub
sti
aaa
mov
pop
mov
loopne
or
das
stos
inc
mov
jp
push
in
jle
mov
dec
sbb
pusha
dec
mov
inc
and
jo
fiaddl
add
cmp
imul
jecxz
cmp
shlb
ss
jge
int
in
rcr
sub
in
pop
xor
testl
mov
mov
popa
push
sub
nop
test
mov
mov
mov
mov
cltd
stc
push
mov
cmp
stos
pushf
xor
test
mov
pusha
add
xchg
test
xor
insb
inc
int
and
out
and
jns
mov
bound
out
pop
pop
mov
fidivrs
ja
jae
scas
icebp
xor
bound
xor
aam
sub
sbb
xchg
insb
jl
dec
int
jo
aam
scas
adc
push
push
clc
pop
xor
pushf
pusha
sub
flds
jl
call
jle
add
pop
jb
in
sti
pop
xchg
mov
add
pop
push
test
lds
fcmovb
loope
add
and
jmp
clc
pop
mov
fcmove
jg
lcall
mov
inc
inc
jmp
xchg
dec
enter
movsl
add
mov
dec
sbb
mov
fldenv
test
stos
add
lock
stos
in
jne
aam
xchg
jno
mov
jae
push
test
inc
rorb
jge
mov
leave
mov
mov
mov
and
xorl
jl
pop
jae
mov
clc
jbe
jg
mov
pop
jo
add
in
fwait
jae
xor
cmp
xchg
mov
das
imul
out
lcall
scas
mov
pop
inc
outsl
es
sub
mov
add
mov
cmp
call
pop
and
xchg
xor
hlt
js
pop
or
sbb
xchg
xchg
mov
leave
inc
xchg
mov
cld
es
inc
xor
add
sti
addl
add
cmp
jnp
jl
call
pop
fcom
loop
mov
xor
or
mov
mov
inc
insb
mov
and
mov
or
pop
mov
xor
jnp
pop
bound
test
xchg
lods
add
lret
shll
pop
or
cli
xchg
mov
ljmp
sub
adc
hlt
nop
sub
cmp
adc
mov
arpl
lds
xor
jb
inc
jne
jle
fiadds
aad
insb
xor
cmp
inc
cltd
adc
push
insb
xchg
rcll
xlat
cmpsb
lock
lds
int3
bound
addr16
popa
inc
dec
dec
jo
jnp
imul
lcall
nop
cld
pop
out
cmp
dec
je
sbb
cli
sub
pop
mov
jnp
dec
ss
es
sub
out
loop
pop
mov
into
jno
loopne
push
scas
jle
pop
jle
add
jge
xlat
aam
dec
popf
or
dec
sub
popf
aaa
xchg
cmp
pop
mov
adc
pop
inc
test
xchg
movsb
pusha
int
dec
pusha
add
or
cmp
mov
aaa
aas
dec
cmc
cmp
mov
jmp
nop
xor
xchg
fnsave
int3
das
jle
jnp
popf
mov
sub
stos
test
or
sbb
mov
std
out
cmpl
scas
pop
jecxz
inc
mov
and
and
sbb
add
cwtl
shrl
test
mov
dec
xor
push
repz
push
aam
lret
sub
add
in
xchg
stos
int
call
cmp
mov
xorb
xor
decb
push
sub
icebp
ja
mov
xchg
clc
push
imul
jg
and
jb
add
int3
insb
sbb
push
push
add
xchg
mov
gs
test
jg
sub
in
dec
mov
dec
into
mov
adc
mov
enter
xchg
js
mov
pop
jp
test
mov
cltd
rolb
inc
cld
lcall
cmp
jmp
pop
aas
sbbb
aad
dec
dec
out
inc
or
xor
mov
gs
add
jmp
sbbb
push
insl
insl
cltd
je
notb
pop
xlat
stc
rorl
cmp
js
push
pop
arpl
lahf
outsb
clc
xor
adc
add
push
ret
aaa
or
std
fs
pop
insl
and
jnp
jecxz
push
and
movb
jmp
lret
or
es
rorl
nop
scas
jle
mov
mov
add
repnz
mov
push
add
xchg
imul
push
inc
out
ja
fsubp
mov
shrl
push
push
pop
and
add
xor
mov
mov
call
sub
fadd
sbb
verw
jge
clc
cmp
mov
repz
mov
add
scas
sbbb
pop
rcrb
mov
add
pop
add
push
pop
loope
jb
dec
or
xor
or
mov
sbb
mov
in
push
mov
dec
loop
enter
adc
mov
dec
pop
out
jp
pop
mov
mov
std
addl
mov
push
in
in
insl
cmp
mov
adc
or
inc
scas
lods
lods
aad
pop
pop
push
repnz
aas
sbb
xor
lods
mov
jecxz
sbb
mov
pop
cmc
sub
add
mov
in
and
adc
fcmovnb
scas
or
arpl
lods
pop
sub
dec
outsl
icebp
mov
ja
ja
scas
or
je
flds
cwtl
push
stos
or
dec
add
movsl
cmp
mul
sub
bound
pop
popf
jle
mov
scas
ds
int
xchg
or
hlt
dec
imul
cmp
sub
add
loop
nop
movl
mov
dec
js
mov
push
lea
addr16
mov
mov
xor
and
lods
orl
adc
test
push
fwait
jmp
add
cltd
cmc
icebp
jle
and
and
push
lret
push
and
scas
ret
mov
js
out
or
movsl
xchg
mov
aad
imul
mov
pop
rclb
popf
addl
mov
gs
sub
and
cmp
lea
dec
int
inc
fdivrl
mov
mov
insb
pop
dec
push
pop
data16
aad
adc
jp
mov
stc
and
adc
dec
loope
and
mov
cmpsb
lret
cltd
fbld
jmp
fwait
xor
idivl
stos
sub
aaa
mov
enter
loop
mov
aam
xor
xchg
cld
xor
cmp
and
and
sub
cwtl
mov
fistpl
out
sbb
fldt
adc
popf
loop
enter
cmp
lret
mov
enter
and
adc
sbbb
les
push
lods
cmp
jbe
in
inc
pop
and
and
cmp
call
insb
cltd
xchg
sub
imul
popa
inc
test
cwtl
lea
mov
fcos
movb
sub
sub
fwait
das
inc
inc
mov
repnz
xchg
and
lcall
and
mov
lock
jl
hlt
sbb
push
movl
inc
and
dec
ljmp
movsb
in
dec
inc
in
dec
shrb
les
mov
jle
rcrb
sbb
daa
fcomp
int
pop
adc
xor
outsl
arpl
fnstcw
pop
xor
arpl
jmp
fs
mull
scas
sbb
or
cmp
stos
and
testb
lret
dec
ds
sbb
dec
lea
fcmovne
sub
push
mov
outsl
loop
xchg
mov
mov
mov
mov
xchg
inc
jecxz
dec
sbb
aad
jl
add
jle
das
jno
sbb
xchg
jge
jl,pn
xchg
je
arpl
divl
add
pop
push
mov
cmpsl
push
or
mov
mov
enter
mov
adcl
mov
nop
mov
icebp
iret
jle
xchg
rolb
outsb
sti
rolb
xchg
inc
sub
push
push
call
add
lret
xchg
jnp
pop
mov
pop
dec
xor
push
loope
mov
mov
mov
cmp
movsb
icebp
insb
cmp
fstpt
lahf
loope
ss
or
pusha
mov
out
mov
aaa
sbbb
ss
mov
xorl
jge
xorb
fsubrp
aad
ret
pop
xchg
mov
or
xor
ret
dec
das
stc
popf
cli
into
enter
pop
pop
jle
rcrb
repz
pop
xchg
jl
fidivl
cmp
inc
jb
repnz
popf
or
dec
push
sti
sub
das
shl
push
cmpsl
cwtl
cmp
hlt
mov
pushf
sbb
cld
mov
pop
xchg
imul
fisubrl
data16
pop
arpl
adc
loope
sarl
and
pop
lret
popf
bound
ljmp
test
jo,pt
push
outsl
push
push
test
cltd
lock
fdivrp
adc
pop
scas
into
add
dec
bound
aam
lea
adc
push
sub
push
lcall
roll
std
sub
sub
ljmp
daa
outsb
popf
cmpsl
ret
int
lods
mov
xchg
movsl
xor
cmp
cmp
jecxz
out
inc
sub
mov
scas
sub
popf
sarb
xor
sub
dec
push
mov
lcall
cmp
xchg
jbe
mov
int
dec
and
in
psubb
cmp
xorl
inc
inc
sub
shll
pop
fiaddl
scas
mov
mov
iret
mov
into
xor
pusha
mov
in
aad
or
push
jecxz
insl
addr16
dec
jl
cmc
mov
sahf
lret
xchg
aad
mov
sti
xorl
xlat
add
aad
adc
inc
xchg
mov
add
add
shlb
sahf
aam
lahf
fwait
mov
pop
hlt
imul
xlat
aam
add
fildl
imul
into
sub
shll
dec
outsb
cmp
mov
jno
push
jno
cmpsb
test
loopne
les
inc
jl
add
mov
pop
xor
cmp
les
pop
int
push
mov
in
dec
in
cmp
ret
mov
cmp
test
jne
push
add
sahf
adc
shlb
mov
jp
ret
repz
loope
adc
jne
push
nop
lahf
movsl
inc
mov
std
loope
rorl
fists
leave
jne
mov
and
pushl
insl
daa
inc
mov
sbb
fnstenv
xor
mov
xor
pop
js
jge
cmp
and
rol
cwtl
push
lahf
fcmovb
popa
adc
push
sti
enter
adc
mov
sarb
or
push
lock
stos
sub
insb
push
xchg
daa
ret
push
cmp
push
jae
xchg
addb
daa
dec
das
inc
sub
mov
xchg
push
inc
adc
and
addr16
push
rolb
ds
cli
dec
sub
lods
xchg
push
mov
dec
fmulp
addr16
push
fdivs
ss
repz
imul
arpl
mov
into
jg
dec
ficoms
inc
sbb
mov
mov
mov
cmp
dec
cmp
ss
das
jns
fs
fstpt
cmp
fnstenv
aas
repnz
negl
sub
lds
mov
add
sub
mov
popf
hlt
push
mov
or
dec
psubsb
push
invd
gs
or
out
test
mov
xor
jge
and
push
add
mov
and
xchg
pop
es
add
jns
es
cmp
shl
cmp
and
addr16
arpl
jnp
out
out
pop
inc
cmpsl
in
fisttpll
cmp
insb
inc
and
mov
scas
in
scas
test
test
rcl
pop
adc
pop
inc
daa
adc
jb
inc
outsb
jge
push
clc
xchg
movsl
ret
jle
in
mov
xor
mov
data16
jge
cmp
lods
push
setp
aad
xchg
push
sub
push
dec
lods
pop
dec
jle
jmp
mov
in
push
out
add
aam
mov
popf
and
aam
mov
xlat
cmp
cmpsb
aas
jle
mov
rorb
divb
xchg
je
mov
sbb
inc
xor
sub
cltd
fstps
scas
mov
ret
or
pop
mov
push
test
cmp
mov
push
add
int3
sub
fwait
dec
lret
jnp
cmp
loope
pop
ror
push
jle
mov
idivb
pop
dec
jb
inc
sbb
addr16
mov
and
jbe
pop
scas
or
pop
sbb
add
enter
das
and
add
loop
roll
scas
les
cmp
sbb
xrelease
mov
nop
mov
add
push
dec
scas
push
sub
xchg
test
scas
in
stos
fcomp
insb
dec
adc
sub
sub
xor
pop
add
out
rorb
or
mov
cld
ss
loope
stos
mov
fcmovbe
cmp
and
paddq
adc
mov
cmp
stos
popf
or
inc
andl
push
mov
sbb
arpl
and
not
loop
movl
and
add
pop
dec
pop
enter
dec
fst
inc
inc
js
jmp
dec
ret
idivb
mov
filds
jp
jbe
stos
fs
cld
lahf
mov
xchg
cmp
outsb
out
add
jb
jge
push
pop
add
shl
ret
fcoml
test
jae
lea
pop
iret
imul
mov
jle
jbe
adc
std
xchg
dec
mov
xorl
aas
mov
jl
dec
cmp
mov
jmp
inc
push
xchg
xchg
jo
in
mov
scas
dec
jns
cmp
sub
rorl
or
cmp
push
mov
loope
pushf
jne
cmp
adc
fldcw
adc
popf
dec
sbb
push
pop
mov
sbb
xor
xchg
icebp
cli
leave
dec
fsubs
sahf
dec
pusha
jns
fcompl
add
daa
nop
lods
pop
insl
nop
ficompl
pop
pushf
lds
fmuls
add
dec
push
push
in
aad
in
jo
insl
add
jl
xlat
outsl
jbe
adcb
aaa
mov
test
test
push
cmc
test
and
mov
mov
jno
sub
and
push
lods
movsl
ja
inc
jae
or
mov
out
mov
sbb
stos
cs
leave
hlt
pop
rolb
cmp
xchg
mov
ret
pop
cmpsl
jo
insb
into
cmp
idivb
or
mov
cmp
jp
sub
pop
sub
test
or
fs
aad
dec
je
in
popf
bound
fstp
add
lret
mov
adc
add
insl
sbb
ficoms
pop
rorl
jle
lds
mov
mov
out
daa
mov
sahf
pop
stos
adc
inc
mov
aam
gs
movlps
fwait
cmpb
sbb
jp
clc
scas
clc
dec
cmp
push
jns
mov
mov
dec
cmp
mov
adc
or
mov
mov
out
inc
dec
jno
pop
dec
ja
enter
fadds
incl
dec
sahf
clc
cmp
pop
jmp
xchg
mov
in
lods
mov
loope
mov
inc
sbb
aad
mov
mov
lods
out
fdivl
dec
pop
cmpsb
cmp
movsb
ljmp
scas
and
call
ficoml
adc
xorb
push
sbb
std
into
aad
mov
dec
subl
enter
pop
in
pusha
xchg
xchg
inc
mov
xchg
repz
into
pusha
outsb
push
mov
mov
dec
or
movsb
test
xor
jnp
pop
or
xlat
adc
inc
xor
pop
mov
jno
inc
test
data16
and
test
mov
icebp
cmp
sbb
lods
xor
lcall
lret
idiv
div
ljmp
outsb
adc
inc
sub
mov
daa
mull
and
mov
sbb
sub
sub
mov
and
test
scas
mov
mov
pop
call
lea
insb
inc
xor
jg
inc
sub
hlt
sbb
dec
cmp
dec
adc
adc
mov
pushl
mov
xor
addr16
hlt
subl
add
aam
or
ljmp
mov
inc
hlt
cmpsb
mov
sti
mov
sbb
sbb
aaa
push
inc
lods
adc
inc
addr16
test
sub
and
mov
xchg
xlat
jne
dec
mov
ret
fwait
loope
pop
inc
mov
sbb
inc
mov
in
adc
adc
sbb
es
mov
jbe
or
mov
loop
lea
xchg
in
pushf
mov
sub
push
mov
rcrb
pop
mov
add
lock
adc
in
pop
adc
xchg
mov
add
lods
jno
ja
xchg
jne
scas
jle
nop
outsl
add
xchg
addr16
in
repnz
xchg
nop
outsb
sbb
sti
adc
cltd
push
mov
sub
dec
out
add
rolb
mov
mov
inc
cltd
xchg
mov
jp
cli
xor
repz
lock
jmp
and
aas
stc
iret
adc
inc
loopne
adc
pop
dec
ret
sarl
ret
jle
lock
sub
mov
lods
pop
out
mov
fcomps
gs
add
jge
mov
mov
push
test
scas
lcall
fidivrl
test
or
and
pop
mov
sti
or
xchg
pushf
dec
xchg
inc
adc
inc
lcall
push
shrl
ljmp
arpl
mov
ret
add
fcompl
test
daa
ljmp
lret
pop
push
jns
jp
jb
cmc
stos
test
mov
cmp
dec
xor
add
cmc
loop
dec
xor
ljmp
or
xchg
fsubs
xor
inc
jmp
dec
fidivs
incb
loopne
mov
mov
push
dec
sub
fistpll
adc
mov
es
xor
ja
cli
arpl
lock
xchg
pop
pop
aam
cltd
rcr
andb
lods
adc
cmpsb
cmc
addb
mov
lcall
push
leave
or
jmp
inc
loop
test
aad
ret
xchg
test
mov
adc
sub
xchg
xchg
iret
ss
inc
and
mov
repnz
sbb
movsb
jp
mov
mov
mov
aas
cltd
sbb
test
cmpsl
add
mov
fs
push
mov
ret
mov
mov
outsb
pop
cmp
add
insl
sahf
push
fs
add
movb
out
xlat
mov
in
xor
xchg
call
sbb
sti
fcmove
fiadds
ds
std
lcall
loope
xor
fucomi
mov
cmp
enter
daa
lds
mov
fimuls
test
popf
test
jl
mov
mov
pop
pusha
jb
fs
mov
movsl
icebp
sub
push
push
aam
rorl
cmp
in
xor
cmp
fmul
out
sbb
cltd
jno
ds
pop
test
sbb
out
cmp
das
inc
fs
or
jns
pop
std
and
inc
cwtl
jl
mov
push
jmp
add
das
jbe
sbb
fmull
stos
sbb
aaa
bound
iret
or
xor
loope
insb
cmpl
pop
movb
push
ja
sbb
stos
inc
sbb
fcompl
test
and
or
fs
cld
jle
lahf
mov
loopne
sti
cmp
shll
movb
add
fnsave
sub
and
xchg
insl
xor
pop
sbb
xor
jne
sarb
adc
js
adc
movsb
shlb
xor
sbb
cmp
cmpsb
in
pop
test
mov
mov
inc
iret
cmp
gs
loop
test
adc
or
scas
pop
les
out
pop
test
sub
or
lock
mov
int
mov
ret
fnstcw
repz
mov
pop
pop
lea
jne
xor
fs
sbb
add
outsl
mov
jp
xor
mov
fnsave
sbb
jge
sub
outsl
stos
sub
in
das
sahf
movsl
pop
xlat
cmc
sti
mov
mov
mov
shrl
xor
stc
push
mov
dec
shll
cmp
xchg
scas
xchg
adc
test
shll
and
insb
xor
inc
aas
pop
xchg
enter
mov
push
pop
dec
xchg
popa
stos
les
sti
mov
cmp
fst
push
sahf
movsl
add
add
test
cmpsb
xchg
stos
call
call
movsl
hlt
jge
outsl
mov
dec
push
xchg
or
jg
fucomip
adc
push
pop
leave
jle
imul
repnz
sub
mov
pop
xchg
mull
lea
mov
icebp
push
je
in
sti
leave
movsb
pop
int3
or
xchg
movsl
ds
out
mov
sub
sub
and
xor
shl
and
adc
js
imul
add
dec
sbbl
adc
pop
dec
imul
das
mov
sub
mov
shlb
out
lods
repz
pop
bound
mov
in
cld
std
sbb
xor
call
test
sbb
xor
aad
cmpsl
cmc
mov
es
jae
shrl
mov
inc
sbb
add
and
mov
xor
jo
in
push
jae
les
fdivs
cmp
repz
mov
or
arpl
mov
jno
imul
lret
adc
out
test
add
scas
cs
or
pop
xor
push
lahf
or
cmpb
rclb
loopne
pop
adc
jae
lds
mov
mov
stos
in
sbb
xor
mov
movsb
movsb
sarl
and
jge
out
movsl
inc
loopne
stos
sub
test
mov
les
cmc
adc
nop
add
or
push
push
cmpsb
xor
cld
frstor
jge
test
add
xchg
adc
xor
aad
mov
hlt
jnp
sub
sub
sahf
push
jmp
out
jnp
scas
cmpsb
sub
mov
aam
xchg
shll
mov
push
data16
push
pop
jae
adc
jle
push
je
sti
sbb
jp
mov
sbb
rcrb
insl
ljmp
data16
rorl
sub
stc
jo
add
mov
sbb
push
push
pop
xchg
lahf
leave
adc
push
cmp
popa
sahf
je
cltd
int3
repnz
jns
mov
movsb
sti
out
sarl
mov
push
and
test
push
add
out
push
xchg
push
ljmp
xor
out
int3
mov
insl
punpckhbw
dec
lahf
jmp
into
out
out
and
push
jge
push
sbbl
push
jb
mov
xor
jl
xchg
pop
xchg
fwait
jecxz
dec
pop
and
stos
and
in
mov
push
data16
sbb
mov
das
data16
cmpsb
icebp
repnz
or
push
dec
pushf
pushf
mov
pop
dec
jl
xor
pop
sub
xchg
or
aas
adc
cmp
dec
fwait
jnp
inc
fs
stos
mov
stc
mov
mov
sbb
adc
jmp
loop
mov
jge
popa
xchg
insb
mov
lea
mov
xchg
ret
ffree
aas
xor
popl
cmp
add
jecxz
cmp
xchg
lcall
ja
adc
sti
mov
outsb
out
lods
xorl
das
mov
cli
cltd
mov
push
imul
push
pop
aam
mov
mov
pop
out
cmp
arpl
xchg
fmuls
inc
xchg
mov
lret
cmp
lcall
outsb
inc
decb
mov
add
jg
mov
xchg
jo
scas
or
lock
adc
bound
mov
mov
nop
mov
push
or
orl
jle
orl
adc
add
aas
cmp
push
jnp
pop
rorb
xor
rorl
jl
insb
mov
and
in
into
jae
jmp
imul
leave
add
xchg
cmp
outsb
xor
movsb
xchg
pop
loop
loopne
xor
scas
nop
aam
jmp
cmc
mov
pop
pop
push
push
add
mov
ficomps
and
daa
and
mov
adc
xchg
xchg
and
jl
mov
push
les
xchg
out
int3
mov
jmp
xorl
mov
xlat
negl
movsl
and
jcxz
push
and
ja
loop
xor
orl
fisubl
pop
fsubs
jmp
loopne
xorb
cmp
fstl
cld
xchg
or
divl
xchg
ds
push
mov
add
jl
icebp
mov
or
mov
insb
push
pusha
jb
aaa
das
inc
inc
cmc
cmpb
push
jecxz
jae
mov
sub
addl
jnp
roll
lret
xchg
xor
scas
popa
leave
push
sub
xchg
stc
sar
enter
imul
outsb
test
movsl
push
pop
mov
inc
mov
cmp
addl
adc
mov
stc
push
mov
cltd
nop
stos
inc
inc
or
fisubs
dec
mov
stos
dec
adcl
sarb
add
pop
inc
jmp
pop
add
push
fs
mov
mov
mov
mov
and
ret
xchg
test
dec
dec
int
aas
subl
xor
test
xchg
rorb
xor
addb
mov
out
or
mov
xchg
and
xor
mov
mov
lds
xchg
mov
xchg
cltd
insb
loopne
fstpl
cli
and
push
xorb
push
mov
or
and
mov
jge
xchg
pop
push
push
test
or
xchg
push
cltd
dec
jo
pop
popa
cmc
fwait
push
js
mov
mov
or
push
hlt
inc
arpl
cmp
jbe
mov
int3
bnd
nop
dec
loope
les
dec
cld
xchg
pop
or
lret
jno
addr16
scas
vcomiss
popf
stc
mov
jecxz
shl
out
mov
xor
mov
in
mov
and
out
les
outsb
test
sbb
div
dec
in
push
or
ljmp
add
lret
pop
xchg
ret
repz
xchg
test
push
insb
cmp
push
lea
test
fcos
daa
inc
clc
pop
add
push
mov
cmc
xor
gs
add
sub
add
push
pop
push
bound
adc
out
int3
out
or
push
pop
cld
cmp
and
push
ja
ucomiss
stc
out
pop
mov
addb
ss
sti
mov
mov
sub
mov
sbb
ret
out
sub
iret
xchg
pop
stos
jle
scas
stc
and
and
call
loope
add
scas
out
push
cmp
sub
sarb
outsb
cmpsl
jbe
inc
cmp
sbb
cltd
les
outsb
test
adc
lods
int
out
xchg
mov
mov
les
mov
jmp
fisttpll
test
push
icebp
sbb
shll
stc
jmp
and
call
cmp
add
jbe
pop
repz
enter
jo
xor
aas
pusha
sbb
push
push
mov
in
or
testl
and
in
jbe
xchg
iret
and
cmpl
add
push
lods
mov
xchg
rorl
jbe
xchg
stc
ret
subb
jmp
mov
cli
jo
out
sarl
lcall
std
push
push
je
fsubp
or
xchg
daa
mov
clc
in
rorb
insb
dec
mov
int
dec
jg
mov
mov
or
in
push
sub
xor
ffreep
dec
decl
pop
jp
and
jl
cmp
les
sub
lock
push
cli
stos
inc
subl
push
in
lea
jmp
imul
add
sar
imul
mov
std
pusha
adc
and
or
dec
sbb
dec
jle
clc
mov
and
lods
jmp
xchg
pop
out
cld
jno
cwtl
push
jno
pop
cmp
mov
push
repnz
out
popf
dec
in
fimull
cmpsl
dec
hlt
out
push
sbb
adc
iret
popf
sub
cli
cmc
mov
jno
je
push
bound
lret
int
mov
ret
xor
cld
dec
add
cs
add
test
dec
mov
insl
push
out
pop
push
push
pop
jbe
in
in
push
jp
or
bound
bound
loop
cmpsl
dec
shr
or
xor
pop
in
xchg
mov
jp
je
xor
or
xor
jge
jg
or
push
or
roll
loopne
sahf
test
insb
lret
addl
push
sbb
mov
cs
pop
shr
jge
adc
mov
es
xchg
into
call
xor
pop
and
cli
out
cmc
xlat
es
xor
mov
into
or
or
jmp
imul
loop
addr16
push
daa
loopne
dec
and
pop
test
xchg
shl
repz
mov
mov
inc
hlt
mov
pop
adc
or
mov
xor
xor
cmpsl
cltd
fwait
adc
rolb
stos
mov
push
sbb
roll
je
rolb
lea
loop
in
xor
leave
jl
pop
sbb
fadds
mov
out
stos
cltd
xchg
ret
add
out
add
xchg
fnsave
mov
test
and
mov
mov
xchg
jne
xchg
add
push
dec
in
jne
in
mov
sbb
stos
out
movsl
fstps
mov
nop
stos
cmpsb
pop
add
mov
mov
and
mov
push
sub
adc
xor
jnp
dec
pop
fidivrl
pushf
cmp
pop
mov
or
test
cmc
into
not
fiaddl
rorb
add
mov
jecxz
xor
jmp
xchg
or
jmp
sub
cmp
push
fcompl
fnstcw
outsb
jae
push
jns
xchg
data16
in
dec
xchg
or
and
add
inc
xchg
sub
mov
xor
add
into
test
mov
mov
popa
jno
adc
cmc
add
jns
mov
jnp
lods
in
js
in
into
pop
jo
jno
fbstp
push
pop
jbe
pop
movzbl
movsl
test
mov
xor
cld
sbb
icebp
pusha
repnz
insb
dec
dec
xor
adc
or
aam
add
ret
mov
fcompl
ret
js
fcmovnu
inc
pop
int3
movsl
xchg
pop
fcoms
pop
mov
xlat
mov
pop
mov
popa
inc
lahf
or
xchg
pop
int3
jne
test
lret
into
std
xchg
pop
mov
push
rorl
test
dec
sti
mov
mov
fdivs
hlt
cld
or
into
xchg
xchg
lret
repz
lret
mov
jle
jbe
ss
enter
fstl
jp
std
mov
or
cmp
or
sbb
push
popf
or
cmp
jmp
insl
aad
pop
cwtl
sub
adc
mov
mov
push
jg
pcmpeqw
mov
hlt
sub
xor
fcoms
test
sbb
call
shl
push
cmp
inc
bound
aas
jae,pn
aas
sub
inc
les
addl
cmp
je
sbb
add
dec
leave
inc
icebp
mov
mov
int3
es
xchg
lret
subb
mov
cmp
ret
stc
pop
xor
fnstsw
and
lods
pop
js
jp
lds
mov
inc
adc
push
inc
mov
xchg
sbbb
pushf
push
adc
rolb
pop
adc
mov
aaa
imul
fcomi
xor
adc
std
push
push
jle
ret
int
push
cmpb
outsb
xorl
push
mulb
hlt
and
aas
cmp
repz
push
js
jae
cmpsl
or
jle
mov
gs
mov
xor
lock
xchg
mov
pop
faddl
mov
bound
or
add
cmp
aam
nop
ret
adc
push
push
adc
test
lock
addb
mov
mov
fwait
add
push
fwait
pop
iret
pop
xchg
xor
fdivrs
ljmp
or
es
pop
ja
push
jmp
lock
and
xor
bound
adc
or
lcall
add
dec
inc
out
cli
ljmp
sbb
out
fwait
pusha
jp
mov
jl
fwait
mov
pop
insb
xchg
in
hlt
mov
movsl
imulb
dec
xor
pop
mov
mov
test
sti
xor
sbbb
aad
imul
xor
or
les
push
cltd
mov
hlt
cmpl
inc
ja
in
repz
cwtl
adc
lret
cltd
bound
stc
xchg
add
mov
iret
pop
sub
cs
xchg
mov
mov
dec
aam
frstor
ret
add
mov
and
jmp
lock
mov
mov
mov
mov
add
mov
push
out
dec
cmp
dec
push
lods
fs
ja
sbb
ret
cltd
and
lods
jb
mov
in
cmp
lret
dec
adc
jmp
mov
cmp
add
and
inc
hlt
scas
jmp
leave
mov
lcall
mulb
add
ss
cmpsl
mov
xchg
dec
pop
pop
je
rol
shrb
stos
lock
mov
sti
cmp
insl
insb
bound
sub
decl
dec
rorl
mov
sub
movsb
push
fsubs
std
inc
insb
icebp
outsb
insb
aaa
addl
cld
movsl
sbb
ja
xchg
xor
in
pop
loop
cwtl
hlt
js
cli
dec
push
and
cli
lret
call
out
inc
movsl
mov
mov
fdivr
int
int
pop
clc
or
add
stc
ljmp
test
gs
iret
cli
xchg
add
and
insb
dec
imul
push
add
pop
shr
xorb
push
mov
fwait
add
jge
ds
imul
sub
cmp
mov
inc
xchg
icebp
sub
stos
test
push
inc
mov
stos
or
out
or
adc
dec
fistl
push
movsl
push
sbbb
mov
outsl
mov
sub
pusha
cmp
negl
mov
rol
push
je
dec
dec
adc
mov
inc
in
test
scas
cmpb
movsl
xchg
aas
pushf
cmp
cmp
jecxz
in
mov
jno
push
fadd
stos
mov
mov
mov
das
push
sub
push
mov
int
int3
ret
xor
std
mov
mov
dec
cmp
lds
xor
and
push
aad
fiadds
push
lret
das
fbstp
inc
cmp
loop
rorb
mov
idivb
faddp
imul
adc
int
add
mov
mov
sub
iret
cmp
subb
pop
mov
imul
sbb
pop
pop
push
rorb
adc
das
lret
pusha
cmpps
lcall
mov
mov
leave
and
sbb
neg
movsb
int3
dec
shll
nop
outsl
fnsave
fistps
sar
jg
bound
jmp
clc
pusha
fidivrl
mov
pop
jp,pn
rorb
addr16
xchg
out
pop
stos
test
jae
sub
adc
into
hlt
mov
dec
push
aad
inc
outsl
push
push
add
mov
insb
lahf
adc
mov
and
inc
sbb
in
jbe
xlat
add
and
jbe
lcall
mov
cmp
lds
insl
push
dec
mov
lahf
xchg
add
xor
pop
push
call
shlb
push
movsl
sub
jmp
ret
or
xchg
jecxz
sub
pusha
sbb
ljmp
sub
mov
ja
inc
and
cmc
cld
xchg
cmpsl
inc
dec
ss
lret
add
mov
push
push
inc
imul
jmp
mov
ret
mov
mov
aam
adc
mov
mov
and
scas
aaa
cmp
jl
std
sub
xor
jns
inc
loopne
jno
inc
stc
icebp
mov
aas
cmp
dec
xorb
ds
int
push
mov
push
sub
or
insb
fucomi
pop
pop
dec
and
or
mov
pop
fcoml
sbb
dec
mov
popf
cmp
repz
inc
or
mov
test
out
in
mov
pop
xchg
out
aas
xlat
ficompl
push
add
jns
idiv
pop
dec
add
sub
jnp
jle
or
in
mov
sub
scas
mov
sysexit
ficomps
ja
mov
xlat
mov
jmp
jne
mov
ja
sub
daa
out
dec
or
pop
adc
pushl
ret
movsb
jbe
test
outsb
jne
mov
movlps
xlat
in
incl
cwtl
sbb
shlb
gs
leave
cmpsb
sarb
mov
pop
adc
xlat
mov
jle
lds
cmc
adc
jns
jne
inc
or
call
in
outsb
jae
mov
add
popf
lahf
adc
mov
movsl
sbb
sbb
jbe
sub
leave
hlt
xchg
std
sbb
pop
inc
cmp
cmpb
movsl
sub
rcrl
out
adc
inc
js
loop
insb
sbb
xchg
ljmp
shr
adc
jb
inc
add
inc
xchg
xchg
loope
int
mov
stos
jmp
xchg
sbb
les
fnstenv
mov
popa
sbb
mov
sub
or
clc
adc
mov
popf
dec
mov
push
dec
jmp
scas
dec
mul
arpl
or
and
dec
dec
fisttps
pop
jle
xor
rcll
xchg
push
jle
sub
lcall
jb
pop
movsb
fisubl
jbe
fs
jmp
and
jo
into
lret
std
or
insb
dec
aaa
mov
mov
ret
mov
or
mov
or
nop
shrb
sbb
icebp
xor
mov
in
cmpsb
jl
xchg
dec
cmp
aaa
int3
jp
lcall
add
jmp
stc
lods
mov
es
mov
or
sub
mov
loopne
mov
and
mov
int
aas
jl
pop
cmpsb
insb
std
pop
fistl
sbb
fmull
add
insb
push
sub
fidivrs
push
ret
std
scas
ret
lahf
pop
dec
dec
fstl
and
pop
inc
das
lods
pop
test
adc
adc
mov
cmc
lods
mov
sti
sahf
fdiv
inc
dec
mov
pushf
idivb
repnz
cmp
mov
fmull
adc
pop
ds
sahf
cmp
sbb
sbb
ja
mov
mov
xchg
xor
pop
ret
aaa
push
pop
leave
mov
data16
pop
adc
mov
movsl
out
jbe
mov
mov
mov
les
mov
jp
push
mov
test
out
mov
pop
pop
int
imul
adc
lds
jns
shrb
mov
adc
scas
ds
adc
jbe
pop
xchg
adc
out
out
fdivs
jne
jg
leave
in
std
dec
jbe
lods
lahf
popa
push
xchg
popf
add
adc
mov
pop
lcall
xor
sbb
sub
push
test
sbb
ds
rol
movsl
dec
into
inc
dec
mov
mov
sahf
loop
mov
ss
adc
dec
pop
imulb
lock
jne
in
inc
push
and
lcall
into
inc
nop
lods
out
inc
cmpsb
test
dec
rol
adc
jl
ljmp
outsl
rorb
cmp
test
cmpsl
cltd
add
inc
mov
fstpt
sub
rorb
or
popa
adc
mov
ret
mov
jmp
fcompl
adc
mov
mov
pop
leave
aam
ret
cs
adc
add
mov
lcall
iret
jne
ss
es
int
xlat
test
scas
iret
dec
lods
imul
fiadds
out
lea
sub
imul
push
cmp
or
negb
jne
stc
out
adc
in
cli
jae
mov
lds
lret
sahf
push
sarb
scas
mov
mov
scas
out
mov
pop
test
outsl
pop
sub
into
push
int
sub
or
push
adc
inc
cmpsb
fisubrs
test
pop
dec
js
mov
jp
cli
ret
sub
daa
arpl
jae
and
mov
xchg
xor
sub
cmp
in
hlt
fsubrl
push
fcmovne
pop
adc
leave
leave
push
jnp
cmp
insl
pop
jl
sub
sbb
into
pusha
fwait
ss
sub
daa
insl
mov
jno
inc
sbb
int
out
jmp
lret
or
test
dec
mov
sti
cwtl
jecxz
sbb
inc
dec
push
out
mov
xor
push
jp
inc
outsl
xchg
add
mov
dec
shlb
std
xor
dec
inc
subl
sbb
sbb
test
fisttps
rolb
dec
adc
or
lock
pop
cmp
xchg
cld
pop
rcll
aam
ret
call
pop
jmp
sub
push
push
xchg
testl
loopne
push
adc
add
pop
jle
sub
and
adc
cmp
lods
lods
in
cmp
imul
add
gs
push
push
mov
push
out
push
ret
decb
movaps
lret
pop
outsb
xor
xchg
cmp
je
add
rorb
xor
xor
dec
sbb
int
lret
pop
inc
xchg
daa
mov
js
xchg
sub
idiv
sub
ficompl
addb
cltd
test
add
mov
mov
add
test
push
dec
mov
push
insb
ret
mov
sub
aaa
push
cmc
xchg
insl
pushf
sub
lcall
das
sbb
ret
sub
fadds
and
mov
dec
pushf
enter
push
stos
movsb
sub
adc
lods
clc
call
movsl
xchg
aaa
jp
cmp
test
push
incl
dec
lods
sbbl
insb
inc
js
inc
mov
inc
add
call
mulb
mov
jge
sub
lret
cmp
jno
jns
xor
fiadds
ljmp
adc
push
push
mov
jne
mov
rcll
sbb
ds
sti
dec
add
mov
adc
push
sarb
dec
out
lcall
dec
inc
cmp
push
in
cmovbe
call
popa
in
pop
lret
sub
cmp
cmp
dec
clc
hlt
fildl
out
jg
adc
cmp
in
cmp
xor
jge
movsl
pop
push
sbb
mov
add
sahf
sbb
imul
ljmp
int
dec
jno
ljmp
mov
insb
adc
iret
movd
mov
sbb
movsb
jae
mov
cli
adc
rcrl
out
mov
cmpsb
pop
push
js
xchg
inc
mov
cs
lock
push
add
out
push
out
mov
loope
es
movsl
jo
test
shll
jge
mov
idiv
inc
loope
shrb
in
and
cmc
inc
ja
rorb
sub
testb
and
add
or
adc
dec
shll
jle
push
mov
js
test
dec
mov
pop
pop
add
in
lock
test
push
push
pusha
pushf
pop
lahf
adc
ss
add
push
ja
inc
and
std
sbb
rcrl
mov
icebp
mov
cmp
iret
aaa
icebp
inc
cmp
add
xor
insb
out
and
ds
mov
mov
push
pusha
decl
icebp
rolb
out
jge
jmp
push
xchg
pushf
popa
mov
test
sub
dec
push
jmp
xchg
push
das
cmp
adc
pop
add
mov
or
insl
cmp
jnp
pop
stos
dec
orl
cmpsl
adc
test
and
dec
lcall
ja
and
pop
pop
add
inc
in
fwait
cmp
sbbl
aad
adc
or
lea
out
dec
cmp
xchg
mov
out
dec
xorl
and
test
adc
rolb
stc
mov
pop
xor
inc
cmpsb
int3
loop
ss
inc
xchg
pop
mov
fwait
dec
aad
inc
push
cmp
lret
add
xchg
mov
sub
mov
out
loope
xor
pop
cs
xchg
ds
cmp
enter
inc
jne
sbb
mov
or
dec
push
inc
repnz
mov
fnsave
inc
inc
jne
add
movsl
and
cmpsl
cld
and
pushf
mov
mov
lods
iret
clc
add
sbb
dec
mov
cli
dec
je
int
iret
push
sbb
movsl
lock
jmp
or
ret
cmp
test
aas
mov
add
sub
sbb
or
imul
jmp
fcmovb
fcoms
add
jmp
add
inc
inc
xor
sub
cs
sbbl
adc
adc
mov
xor
das
xlat
pop
dec
out
loop
or
xchg
ficompl
jno
or
cmp
inc
or
sbb
ret
bound
in
pop
xor
popa
mov
enter
gs
nop
and
xchg
pop
gs
cmpsb
add
jmp
arpl
xchg
push
daa
fcom
hlt
das
jg
sbb
pusha
xchg
mov
cs
orb
mov
mov
sub
jbe
call
adc
outsb
push
jecxz
scas
mov
psadbw
lahf
stc
dec
push
aaa
aas
mov
push
stos
or
xchg
add
lret
and
mov
push
add
stos
movsl
mov
cli
or
popa
mov
dec
pop
movsb
dec
dec
inc
lcall
ds
aaa
jecxz
clc
sub
popf
pop
and
push
inc
cld
add
test
ljmp
cld
cmp
sbb
cmp
movsb
sbb
mov
and
sbb
sar
and
loop
adc
rcrb
stos
mov
fnstcw
pop
push
push
jl
scas
leave
mov
into
mov
mov
inc
xchg
mov
xchg
sub
dec
iret
mov
mov
push
in
push
std
shl
pop
add
dec
mov
inc
push
mov
push
sbb
daa
mov
dec
loope
loopne
xlat
out
xor
mov
add
imul
sbbb
push
mov
gs
push
xchg
adc
bound
push
xchg
jl
loop
and
movsl
mov
jno
pop
cmp
out
xor
mov
int3
xchg
enter
xchg
cwtl
or
inc
pop
cmp
ret
mov
cltd
mov
cs
mov
cmpsb
xchg
lock
stc
repnz
xor
int
cmc
pushf
cmpsl
mov
xor
lret
add
dec
shlb
in
mov
outsb
fistpll
movsb
mov
in
adc
or
mov
call
or
xchg
push
sbb
pop
push
test
jbe
lea
popf
lahf
mov
mov
inc
push
dec
xchg
push
inc
bswap
sub
dec
aas
mov
push
xchg
sub
aas
imul
outsl
in
pushf
xor
ficomps
negb
jecxz
js
mov
xchg
in
adc
adc
scas
leave
mov
inc
jg
and
in
jns
xor
sbb
or
loop
insl
fidivrl
push
xchg
aad
scas
gs
jp
push
notb
out
and
in
dec
push
adc
jge
mov
lds
insb
xchg
mov
mov
pop
cld
fisubrs
enter
jp
xor
xchg
lcall
cwtl
adc
movl
mov
ret
jo
ljmp
inc
push
aam
inc
sbb
pusha
or
cli
out
sub
cmpsl
jo
and
idivb
imul
and
cltd
mov
push
bound
or
fiadds
out
push
sub
ret
notrack
je
pop
jmp
das
imul
ds
and
in
jae
lahf
sbb
dec
aad
inc
iret
es
fwait
dec
jp
jne
sub
jb
xor
mov
jmp
and
test
mov
insl
cmpsb
pop
mov
loop
lea
sub
add
sbb
data16
and
out
movsl
xor
or
or
cwtl
std
lods
insb
jb
test
es
jmp
xor
adc
bound
adc
dec
adc
inc
dec
push
insl
add
jbe
insl
jb
in
adc
dec
mov
mov
dec
pop
in
leave
in
add
into
fwait
jmp
adc
rep
fistpll
push
paddb
xor
cld
cmc
bound
sub
dec
test
movsw
les
push
out
enter
pop
inc
call
pop
xor
mov
xchg
js
mov
fldt
lods
lcall
cmp
mov
jnp
or
mov
xchg
nop
push
ret
cs
sarl
mov
dec
pop
sbb
push
add
push
int
imul
ja
pop
in
emms
mov
andl
fildl
std
inc
ret
lock
cs
es
pop
aad
cwtl
scas
xchg
fdivl
loop
pop
inc
je
mov
push
pop
repz
pop
lcall
lret
test
xor
push
inc
rcrb
js
mov
test
xor
mov
inc
jb
lods
or
in
push
aaa
std
mov
xchg
out
mov
mov
ds
or
dec
lods
or
leave
mov
cmp
inc
cmc
add
divl
rolb
cmc
cli
lret
and
mov
test
ds
mov
inc
jne
pop
test
pop
mov
sub
das
mov
inc
mov
mov
cmp
movsb
rcrl
loopne
fstl
pop
adc
or
mov
sub
jb
fiadds
dec
shl
mov
adc
or
imul
mov
loop
mov
xchg
mov
movsl
scas
push
iret
xor
add
push
int
ss
push
mov
push
repnz
int
jb
mov
and
inc
out
call
dec
dec
aad
add
enter
mov
push
add
dec
cmp
or
xlat
setbe
lret
cmc
sub
aaa
addb
in
inc
js
cld
mov
inc
pop
dec
cmc
xchg
in
adc
jno
jp
mov
paddusb
test
mov
nop
jp
dec
repnz
ljmp
adc
idivl
aaa
jb
insb
mov
outsl
add
mov
out
std
push
testb
or
mov
les
subb
push
arpl
test
call
cmc
push
adc
mov
pop
sub
fldcw
sti
int3
in
incb
jmp
out
lock
sub
cltd
inc
pop
inc
mov
loop
out
loopne
imul
out
aas
outsl
xorl
sub
pop
adc
dec
jae
mov
pop
jmp
pop
loopne
xor
mov
push
cmp
mov
sbb
mov
out
xchg
cmpsl
addr16
call
ret
xor
mov
ljmp
jge
test
daa
pop
and
ljmp
orl
arpl
push
inc
sub
in
sub
in
pop
sub
lods
popa
push
aam
mov
mov
inc
repnz
adc
pop
xchg
sbb
mov
push
mov
testb
into
loop
jo
inc
int3
popf
mov
and
pop
lock
xor
jnp
pop
out
adc
aam
jo
test
bound
add
cmpsb
dec
cmp
pop
mov
in
mov
into
jns
jmp
sbb
inc
cld
dec
mov
movl
cmp
mov
pcmpeqd
repz
xchg
push
jge
or
fwait
xchg
sub
js
push
sarb
xchg
push
jp
dec
movsl
adc
out
inc
cmp
mov
sub
push
push
clc
adc
jmp
aad
push
std
idivb
mov
cli
xor
pop
push
mov
popf
sbb
in
xor
das
mov
popa
leave
jb
and
cmp
adc
add
call
outsl
adc
mov
aad
xor
pop
aam
mov
mov
xor
outsl
ror
sub
xlat
mov
mov
orb
mov
pop
mov
sub
movsl
jnp
xor
adcb
out
pop
into
int3
pop
icebp
sub
ficomps
andl
lds
les
repz
push
jp
outsl
xchg
or
and
add
and
stos
cwtl
lret
sub
dec
mov
sub
pushf
pushf
inc
jge
loop
das
jbe
add
aaa
lcall
ja
shlb
adc
lods
add
sub
mov
in
js
clc
add
inc
dec
adc
sbb
fwait
jae
mov
xchg
inc
js
add
aad
add
add
orl
idiv
mov
mov
xchg
adc
imul
loopne
fcompl
mov
rclb
mov
pxor
push
sbb
jl
daa
movsl
inc
leave
cli
test
cmp
aad
push
cmc
lahf
sbb
in
int
lds
sbb
mov
mov
arpl
mov
and
rolb
adc
lds
das
cltd
and
adc
push
sbb
inc
lret
fldenv
or
out
push
scas
push
mov
push
jnp
xchg
aad
mov
test
mov
mov
lahf
cmc
gs
xor
in
in
aaa
adc
mov
enter
push
push
js
outsl
adc
and
in
clc
rorb
scas
ror
mov
cmp
clc
and
fistl
pop
sub
sub
sub
xchg
outsl
inc
rdtsc
fwait
movsl
aad
jmp
inc
jnp
mov
shlb
in
addr16
and
stos
inc
sar
add
movsb
cmp
xchg
loop
add
cltd
mov
adc
adc
pop
aaa
dec
xor
and
imul
push
int
out
cmpsl
js
mov
xor
jmp
dec
dec
dec
jmp
jecxz
lret
inc
mov
pop
sti
pushf
or
inc
mov
mov
push
xchg
adc
pusha
aad
jmp
jae
or
inc
mov
and
add
loopne
adc
xor
shlb
dec
mov
pop
mov
cmc
in
in
pop
shlb
nop
outsb
movsb
lahf
and
aam
add
inc
xor
mov
sbb
fmul
pushf
adc
sahf
dec
mov
xor
fdiv
inc
in
cld
nop
jl
ds
inc
call
add
sahf
je
adc
mov
fidivs
sbb
xor
mov
mov
rolb
sub
jecxz
lret
shll
xor
movsl
shrl
push
mov
sbb
inc
mov
adc
xlat
cmpsb
nop
push
cmp
shrb
arpl
cld
xor
xlat
mov
int3
mov
ds
pop
mov
js
push
lods
movsl
add
insb
sub
mov
dec
add
sub
lods
call
sahf
subl
std
in
push
xor
roll
sahf
mov
stc
mov
add
cmp
push
or
mov
cmpsb
sbb
sub
xchg
and
mov
sub
lds
hlt
iret
lcall
mov
sub
jb
pushf
rclb
les
lods
sub
das
mov
lret
jb
in
js
pop
scas
pop
xor
adc
or
aas
add
inc
xlat
pop
out
pop
add
int3
or
jle
lret
outsb
jge
cmpsb
add
push
mov
fucomp
and
xor
out
popa
pushw
pop
ljmp
outsb
jmp
shl
pop
dec
xchg
pop
xchg
pop
pop
ja
xchg
jl
mov
and
cmp
mov
cmp
popa
jne
test
push
and
ljmp
ds
aaa
push
dec
into
in
xlat
or
lock
in
push
cmp
dec
mov
movsl
mov
xor
scas
pop
in
sub
mov
cmpsb
cmp
jecxz
outsb
pop
nop
push
div
xchg
stc
into
sbb
push
mov
fstl
andb
and
sbb
inc
lahf
pop
add
adc
enter
ja
cltd
xchg
testl
and
adc
push
add
xor
mov
add
daa
pop
mov
lods
pop
cmpsl
aam
xchg
push
push
rol
inc
sub
test
addr16
in
repnz
push
xlat
mov
adc
les
push
adc
lods
push
mov
mov
lret
fistpl
test
loopne
dec
imul
fnsave
or
dec
mov
jmp
sti
push
mov
pusha
xor
scas
rcrb
jae
cltd
testl
clc
push
insl
add
or
shl
int
cmp
loopne
gs
pushf
out
adcb
daa
cmp
rolb
stos
fistpl
js
mov
inc
push
push
cmpsb
cli
mov
ljmp
aad
push
dec
xor
add
inc
xor
jmp
stos
ret
lret
in
leave
fiaddl
dec
fmul
push
stos
scas
adc
out
int
arpl
pop
or
test
test
mov
and
out
push
cmp
dec
cmp
leave
lods
push
sarl
cwtl
jp
ret
xchg
dec
mov
dec
fisubrs
lcall
pop
jb
sahf
fisubrs
push
jp
and
lret
sbb
cmovae
mov
and
or
mov
or
out
and
mov
scas
lods
adc
loop
push
data16
test
jo
out
cmp
test
in
add
push
cld
mov
cld
sbb
nop
push
xlat
insb
dec
add
push
jbe
push
sti
xchg
mov
lods
pop
add
loope
push
xchg
push
xchg
aam
shll
ja
int3
mov
stos
jmp
adc
aaa
xor
scas
or
and
push
or
xchg
push
inc
mov
and
lcall
mov
movsb
push
scas
cli
cld
jbe
scas
jbe
cmpsl
in
pop
mov
push
mov
mov
jmp
dec
xor
push
and
pop
cwtl
sub
jo
mov
push
xor
loope
mov
xor
js
pushf
mov
jne
jo
sbb
push
hlt
jns
ss
fisttpl
fildl
pop
mov
adc
pusha
jl
shrb
fcoms
rcll
imul
mov
iret
aaa
scas
clc
mov
out
xchg
push
out
add
inc
xlat
repnz
pop
add
add
mov
mov
add
bound
xor
ficomps
xor
mov
mov
out
xchg
nop
sbb
cmpsb
aad
outsl
add
pop
mov
lret
imul
sub
test
and
xchg
cmpsl
xorb
xchg
dec
aad
mov
popf
addr16
jecxz
je
scas
cmp
lods
mov
adc
jne
add
sbb
pop
mov
jmp
sti
adc
ja
mov
jl
or
sub
pop
leave
ja
sbb
aam
stos
pop
test
ret
dec
or
and
cld
mov
jne
jbe
call
rclb
enter
fistpll
adc
stos
ret
mov
das
stos
mov
and
inc
adc
sti
cmp
fsubrs
cmpsb
sbb
sub
mov
mov
lds
cmp
out
xchg
fs
mov
scas
sub
in
into
adc
cld
mov
adc
pusha
divl
call
insl
lds
daa
xchg
sub
lock
das
ljmp
pop
inc
pop
andl
cmp
aad
ljmp
lods
jns
imul
loop
sti
loope
orl
or
and
adc
jg
push
mov
sahf
and
flds
subb
lret
mov
clc
xor
mov
jg
idivl
out
pop
and
ljmp
fcompl
out
std
fstpl
xchg
stos
or
jp
out
sbb
jle
out
pusha
std
in
pop
cmp
cwtl
sub
push
hlt
push
hlt
xchg
sub
cltd
ja
dec
and
daa
cmp
push
jbe
sub
inc
in
cmp
or
mov
xchg
sbb
mov
loope
dec
rcll
dec
sbb
xor
mov
bound
sbb
mov
sbb
mov
jecxz
xchg
and
xor
test
mov
mov
mov
or
nop
cmc
hlt
push
das
adc
fimull
arpl
repz
jo
subl
lea
xchg
xor
mov
mov
lret
jns
jp
xchg
aaa
ret
adc
or
pop
out
fwait
push
cmp
enter
dec
xor
inc
mov
xchg
mov
fcoml
in
arpl
lds
push
mull
jae
pop
jge
pop
mov
sbb
mov
push
sbb
dec
lahf
mov
imul
inc
lods
fucomp
adc
sbb
shlb
gs
sub
das
data16
sbb
cmpsb
mov
xchg
iret
das
into
adc
fwait
push
sti
outsb
dec
push
lret
pop
dec
mov
ja
adc
jbe
sahf
pop
add
sub
mov
inc
leave
inc
push
xor
and
test
inc
mov
push
xor
jno
ret
mov
lret
in
rcr
xchg
or
dec
pusha
adc
cmp
rclb
imul
leave
xor
jecxz
xchg
je
push
push
jl
pop
movsl
fldcw
xor
clc
mov
mov
dec
std
shll
jl
mov
xchg
adc
out
jne
lea
push
fisttpll
int3
adc
lret
push
ss
pop
popf
pop
pop
lret
pop
jno
pusha
or
pop
shll
jno
out
xor
cmpsb
and
xchg
push
loopne
mov
mov
hlt
repz
dec
jmp
es
push
pop
jne
jae
fsubl
xor
xor
xor
hlt
imul
sub
and
or
cli
push
or
jb
add
testb
fsubs
loope
and
clc
test
stos
je
in
fwait
mov
push
leave
subl
xor
pop
sarl
cmp
xchg
fdivrl
pop
shrl
rcrl
icebp
xchg
fmuls
mov
jb
push
jmp
aaa
jge
fisubrl
insb
sbbl
and
adc
clc
xchg
lds
xor
inc
repnz
xchg
cmp
dec
jge
cmpxchg
mov
dec
out
jae
sbb
xchg
mov
pushl
and
fldcw
in
lcall
pop
mov
std
mov
mov
test
pop
lret
out
test
sub
push
add
ljmp
mov
sbb
addr16
test
lods
push
loopne
add
stc
and
sub
fwait
pop
jne
jo
sbb
jae
stc
add
cli
or
push
fmull
and
inc
and
pusha
xchg
or
pop
xchg
mov
pop
cmp
mov
enter
dec
mov
xor
sbb
cmp
out
or
das
movsl
mov
jnp
add
popf
mov
push
gs
into
xor
add
inc
enter
inc
sub
sbb
clc
sahf
sti
in
inc
ja
pop
bound
cmc
imul
vmovapd
scas
cld
in
xchg
nop
rorl
test
xchg
cmc
add
loope
adcb
shlb
mov
adc
mov
insb
adc
xor
fwait
mov
daa
leave
mov
add
sub
jl
loop
call
cld
in
sbbl
int3
jno
sub
das
and
inc
push
imul
adc
push
std
int3
pop
repz
mov
test
inc
data16
cmp
lods
ret
dec
push
sub
andb
and
insl
stos
mov
fs
push
rol
pop
push
call
jmp
or
lock
bound
enter
ds
jae
js
cmp
push
nop
dec
pop
les
fcmovnb
push
mov
pop
add
bound
xchg
shll
jo
jge
mov
sbb
and
imul
and
mov
mov
insb
roll
sub
mov
cld
mov
arpl
xchg
dec
pop
add
push
push
push
hlt
lods
mov
add
shlb
call
mov
pop
cmc
push
add
shrl
dec
pop
sbb
and
mov
cwtl
movsl
inc
sub
jne
xchg
sbb
jns
or
push
or
icebp
mov
mov
cmp
add
push
jbe
outsb
inc
sub
ret
mov
test
cmp
cmp
dec
xchg
sbbb
jbe
popa
adc
add
sub
popa
adc
jecxz
test
mov
inc
data16
scas
inc
movsb
int
pop
pushf
sub
add
adc
aam
xor
daa
fdivs
sub
fidivrl
pop
mov
inc
cmc
dec
fisubs
loopne
sbb
sbb
mov
pushf
dec
shlb
test
repz
scas
popf
jg
mov
jl
or
sti
xchg
leave
jle
imul
fxch
fsubs
fadds
xchg
jns
mov
pop
ret
addr16
jb
push
jns
outsb
xchg
xchg
lahf
jb
sub
stc
adc
out
scas
inc
loop
repz
ljmp
lock
sbb
mov
xor
xchg
popf
in
push
xlat
cmp
adc
pop
bound
fiadds
or
dec
jne
jecxz
cmp
aam
inc
inc
test
ffreep
mov
shll
push
scas
lcall
ja
mov
mov
push
add
pmaxub
xchg
pop
in
mov
je
inc
and
add
jmp
jns
inc
or
in
scas
xchg
outsl
cmc
popf
pop
repz
xor
insb
aad
sti
ss
pop
ret
ljmp
cmp
xor
dec
push
sbb
ds
cwtl
loop
dec
add
mov
push
cmpsb
pop
jns
sbb
xchg
imul
jns
cmpsb
and
aad
adc
xchg
mov
nop
cwtl
leave
sti
inc
negb
adc
sub
fcompl
fldl
jecxz
popa
pop
mov
add
aad
dec
sbb
addb
xchg
adc
mov
stc
or
ds
adc
sarb
fistpll
push
cltd
pop
push
adc
dec
imul
jg
dec
xchg
cld
mov
inc
mov
addb
dec
stos
fcomip
or
push
adc
pop
inc
shr
not
or
imul
in
das
lcall
dec
lcall
sahf
pushf
cmpsl
cld
xchg
fcoms
jecxz
repnz
sbb
loop
in
popa
or
mov
inc
inc
push
filds
pop
sub
cld
and
ficompl
adc
fcmovnbe
add
fdivrs
pop
xor
imul
mov
push
leave
xor
jge
cmpsb
popa
sbb
idiv
jecxz
mov
adc
adc
enter
out
mov
or
roll
dec
cmp
xchg
orl
pop
test
pushf
into
add
addr16
push
mov
fs
sbbb
push
mov
cld
mov
mov
mov
shll
xchg
data16
adc
hlt
daa
xchg
inc
push
fildl
xchg
inc
jo
xor
std
movsl
xchg
adc
sub
mov
jo
xchg
stos
xchg
rorb
hlt
insb
mov
fcoms
das
cmpsb
xor
rcrb
or
aad
in
inc
adc
lea
sbb
cltd
pop
mov
orb
pop
cmpsl
mov
mov
dec
es
inc
test
std
loope
stos
pop
out
ja
mov
sub
dec
lds
mov
pop
add
push
mov
inc
pusha
push
insl
sub
pop
or
scas
in
mov
mov
or
xchg
inc
lahf
add
das
sbb
fs
mov
pop
or
shll
xchg
movsb
ss
dec
and
dec
scas
sub
insb
das
cmp
cmp
pop
into
cmpl
xchg
shlb
popf
andl
inc
or
cmp
inc
mov
dec
pushf
test
pop
std
or
push
pop
inc
xchg
inc
jge
loopne
fwait
push
sub
and
loop
das
xchg
pop
cmp
stos
iret
cmp
sahf
push
and
jbe
inc
sbb
loope
loopne
add
xchg
inc
push
push
or
sahf
ret
ror
movb
test
repz
fs
sahf
push
je
jae
or
inc
push
cmp
push
sbb
and
shlb
cmpsb
fdivrl
test
mov
aam
xor
mov
mov
mov
rorl
mov
pandn
cmp
pop
fdivrs
shr
out
hlt
push
and
fsubrp
cltd
xchg
popf
mulb
add
mov
mov
jmp
subl
mov
ljmp
pop
inc
daa
sbb
xchg
out
xor
imul
or
aaa
sahf
ja
and
dec
in
enter
xor
out
push
pop
pop
in
push
fwait
sub
and
jae
and
lds
lcall
out
shrl
jb
push
pop
jnp
ja
mov
int
push
stos
in
cmp
sbb
fsts
push
clc
out
sahf
sysenter
xchg
add
push
mov
inc
mov
iret
adc
loopw
cmp
lds
xor
jle
dec
ljmp
and
mov
fs
mov
push
movsl
push
push
scas
inc
leave
xchg
mov
cmc
decl
jmp
sbb
jmp
sub
mov
inc
scas
sahf
push
mov
fidivrl
fs
adc
out
data16
fildll
adc
pop
adc
arpl
mov
daa
scas
addl
icebp
push
push
or
push
repnz
add
or
push
idiv
clc
ret
call
imul
jmp
loop
out
iret
dec
sbb
xor
test
ret
pushf
dec
inc
hlt
mov
test
lock
cs
dec
test
push
add
add
xchg
pop
pusha
pop
jnp
fsubp
aam
cmc
fucomi
cmp
sbb
inc
dec
shr
cmpsb
incb
inc
hlt
outsb
ffree
imul
jle
dec
repnz
and
jne
clc
shr
xchg
add
pop
and
and
xor
imul
cmp
into
sub
arpl
mov
outsb
ljmp
and
pop
add
mov
add
mov
jge
push
aaa
push
push
fsubs
push
add
enter
addb
test
adc
fmuls
imul
scas
mov
aam
addb
jbe
or
mov
ret
cld
shl
push
adc
cmp
das
gs
adc
in
adc
out
xchg
sbb
dec
dec
xor
aas
inc
testl
push
ss
add
xchg
mov
frstor
into
pusha
aas
xchg
lahf
imul
in
test
add
je
cmc
aas
rcrl
jecxz
mov
dec
jle
or
scas
xor
xchg
fisubl
dec
xchg
scas
dec
inc
roll
mov
jnp
les
dec
pop
xchg
fs
leave
lods
mov
xchg
adc
cltd
sub
in
sub
xor
cmpl
sbb
out
and
pop
bound
add
pop
mov
add
cmc
mov
sbb
lock
mov
test
ljmp
push
mov
push
adc
pop
dec
filds
es
cltd
movsb
pop
enter
outsl
call
hlt
icebp
xchg
adc
adc
test
lahf
sub
mov
insb
ror
sbb
ja
lods
hlt
insb
push
jp
jg
adc
pop
test
inc
sbb
adcb
jg
clc
pop
and
jno
int3
push
movsb
mov
stos
cmp
cmpsl
pusha
dec
pop
rol
add
sub
and
sbb
dec
outsb
add
iret
cmc
repz
add
add
inc
ljmp
or
out
push
sahf
into
mov
mov
xor
jg
xor
and
insb
push
xor
cmp
or
fs
push
stos
enter
pop
dec
int
aas
lods
notb
jo
sbb
and
jbe
cmc
std
out
out
cmp
leave
adcl
or
sbb
push
bound
mov
int
mov
test
out
adc
sub
inc
mov
pop
icebp
jne
movzwl
icebp
testl
addr16
jle
mov
outsl
cs
ljmp
pop
mov
pop
lahf
jg
cli
pop
pop
notb
popf
dec
push
push
ss
jecxz
pushf
dec
xor
add
or
add
sbb
jnp
into
mov
pmaxub
xchg
sub
xor
xor
pop
jmp
in
jmp
adc
cmp
push
mov
ja
ja
in
dec
and
rcl
mov
push
cmp
inc
xor
mov
fidivl
add
pop
push
pop
fildll
mov
std
inc
sub
mov
lds
shrb
jne
dec
xchg
loopne
or
js
mov
in
shl
inc
repnz
loop
dec
sub
aas
pop
add
mov
gs
roll
dec
inc
xchg
cmp
add
aaa
adcl
loopne
repz
adc
mov
mov
or
gs
sub
adc
jbe
lcall
mov
jecxz
lea
bndldx
jl
push
mov
rcr
repz
shll
int3
adc
lock
aam
or
aad
lds
jb
add
cmpb
xchg
lds
pop
mov
mov
out
pop
xchg
leave
subb
or
inc
lods
testl
jb
scas
push
push
push
fdivr
pushf
jae
sbb
stos
outsl
xor
or
cmp
hlt
arpl
fwait
loopne
mov
push
rorl
and
out
subl
push
out
pop
cmp
xchg
out
add
mov
jge
push
lahf
adc
add
insb
xor
enter
inc
les
jmp
stos
mov
inc
bound
je,pn
push
je
push
in
inc
add
imulb
and
or
sbb
or
mov
xchg
pop
ja
arpl
cmp
out
test
jmp
pop
ja
add
popf
fisubrl
test
ds
cmp
aam
pop
push
mov
or
arpl
mov
push
lahf
les
ret
sar
jmp
insb
movsl
fdiv
out
lea
in
es
int3
jp
daa
sbb
mov
ss
out
rcrl
ret
and
cmpsb
andb
data16
loop
rcrl
xor
lea
nop
arpl
mov
xchg
repz
inc
or
scas
push
cwtl
pop
and
sahf
imul
ljmp
movl
xchg
add
cmpsl
cs
test
iret
push
mov
rol
mov
or
iret
add
inc
push
daa
fwait
jmp
paddd
pop
push
mov
push
jne
add
aad
fnstsw
loop
jae
leave
adc
ds
xor
cmpsl
insl
iret
sub
andb
cmpsl
mov
ficoml
mov
or
mov
ja
inc
scas
lahf
popa
test
jbe
std
sub
js
mov
leave
ljmp
movsl
xor
mov
cmp
mov
lret
dec
jl
add
jb,pn
sbb
push
es
dec
sub
in
adc
dec
stc
mov
ja
es
aam
andl
addr16
mov
sub
das
in
insb
jmp
jl
ret
fsub
and
stc
dec
cmp
adc
enter
cmp
nop
dec
cmp
inc
inc
cmc
ret
mov
movsb
xchg
fdivs
and
mov
sbb
push
ds
mov
subl
in
out
inc
push
inc
mov
xor
aas
pushf
jne
loop
popf
inc
xchg
sti
pop
ror
xor
add
push
mov
pusha
adcl
dec
std
outsl
aam
movsb
frstor
mov
enter
xlat
mov
nop
adc
mov
into
mov
ss
fidivl
mul
cld
ss
movsb
loopne
iret
or
mov
sub
test
cmp
ss
lahf
int
pop
ds
xchg
imul
lods
push
out
gs
int
push
jecxz
pop
cltd
xchg
cltd
icebp
sbb
push
lea
jo
mov
in
mov
jmp
pop
add
data16
out
mov
push
call
js
add
lret
push
call
mov
push
jmp
mov
adc
xchg
out
and
inc
fisubrs
pop
cmp
inc
or
aas
pop
xchg
cmpsb
and
push
jl
or
inc
stos
jle
shll
int3
stc
xchg
frstor
jo
idiv
sbbb
or
mov
push
sbb
or
sub
enter
mov
nop
fwait
popf
or
or
xchg
jmp
iret
xor
sti
push
mov
fisubrs
mov
sub
movsb
sbb
dec
dec
jb
dec
ds
mov
push
cmp
movsb
les
xor
repnz
inc
pushl
out
aam
push
loope
cmp
test
pop
mov
push
mov
das
leave
aad
push
dec
pop
adc
rcl
dec
sbb
into
mov
stc
pushf
and
cs
sub
popa
iret
movsl
bound
mov
mov
adc
faddp
rclb
mov
sub
pop
fprem1
push
mov
adc
dec
inc
testb
cmp
test
sub
mov
jb
lea
mov
sahf
pop
and
dec
dec
imul
add
adc
repnz
xor
in
inc
jge
fstp
ja
dec
and
mov
mov
addb
in
xor
jae
lcall
lret
into
popf
lahf
cmc
inc
lea
or
mov
jle
push
adc
push
sti
into
shll
fwait
add
lds
cmp
arpl
shrl
dec
pop
addr16
adc
mov
aad
or
push
and
mov
and
inc
pop
jecxz
int3
adc
cmp
shrl
and
stos
sbb
fcmovnbe
hlt
mov
daa
je
repnz
sub
push
divb
out
daa
and
aas
push
test
jo
cmpsb
popf
in
scas
dec
mov
stos
cli
movsb
or
push
sub
mov
pop
xor
and
xchg
adc
add
pop
es
dec
inc
xor
jae
orl
pop
div
sbb
push
mov
pushw
or
mov
pop
fwait
jns
call
xchg
adc
sub
lea
adc
loop
xor
dec
fsubl
sbb
jmp
clc
ja
mov
xchg
adc
cmp
sub
ror
les
inc
jae
int3
sub
jle
xor
notl
pop
inc
inc
std
dec
iret
in
adc
mov
xchg
lods
or
jnp
stos
xchg
mov
sbb
and
or
clc
mov
and
sahf
test
mov
aad
daa
ds
sbb
adc
cmp
xor
pop
stos
mov
aas
dec
xchg
ret
mov
mov
arpl
stos
cmpsl
dec
repz
pop
jl
shrl
add
cwtl
and
mov
pop
push
and
repz
mov
leave
ds
xor
adc
addr16
movsl
jo
xor
sarb
in
and
decl
fcomi
or
dec
mov
subl
jne
out
jnp
mov
pop
push
dec
or
sub
mov
pop
lock
jge
mov
lea
adc
lcall
and
mov
adc
adc
pushf
cmp
fcomps
outsl
test
pop
xchg
sti
pop
or
jo
ret
mov
insb
icebp
in
das
or
fwait
dec
jnp
mov
sti
mov
xor
jnp
or
jmp
or
mov
lock
fwait
addr16
aam
or
nop
xchg
stos
pop
dec
push
mov
pop
jp
dec
inc
addr16
xlat
jmp
lahf
lods
jmp
dec
iret
cwtl
cmp
ds
mov
hlt
and
xor
in
xchg
mov
bound
jg
lock
pop
jne
mov
jbe
pop
push
sbb
adc
ja
sbb
sub
jmp
or
cld
shlb
sub
jb
ret
jae
lods
mov
xor
mov
inc
sbb
movl
pop
repz
sbb
cwtl
push
movb
in
bound
aam
movsl
bound
aad
aad
mull
inc
ds
loopne
pushf
add
push
add
push
cli
mov
dec
out
pop
out
out
clc
mov
pop
jecxz
fldl
lods
int
dec
test
icebp
mov
xchg
je,pt
push
xor
sub
dec
stc
push
js
rcr
gs
push
xor
pop
inc
mov
int
dec
xchg
jne
testb
xchg
loop
ret
add
aam
test
mov
xchg
shr
pushf
or
push
sbb
add
xchg
out
pushf
jbe
das
xchg
jmp
sub
gs
and
les
loop
push
push
test
sub
in
hlt
jne
fstpt
fs
add
inc
xor
inc
xchg
test
inc
inc
adc
push
mov
pop
xchg
cmpsb
xchg
sub
scas
test
cs
out
mov
ja
adc
jmp
rcrb
inc
dec
test
inc
push
addb
popa
pop
and
lcall
std
mov
dec
jb
outsl
xor
lods
stos
sbb
pop
outsb
jns
dec
jno
jbe
aaa
cmp
adc
repnz
ljmp
outsl
iret
mov
imul
jb
loop
clc
sub
test
and
jle
pop
test
je
sarl
rcll
loop
loopne
out
ds
pop
std
sbb
ret
add
and
mov
mov
ficoms
pmaxsw
adc
sub
pushf
or
inc
movsb
movb
mov
pusha
ret
and
mov
aam
pop
repz
mov
aaa
mov
pop
pop
push
ss
test
inc
or
pop
aas
mov
pop
sti
pop
inc
jg
cli
lea
xchg
aas
xchg
push
mov
cmp
cmp
dec
mov
iret
and
cmp
cmp
loopne
imul
test
cmpsl
lret
dec
ret
sbb
xor
xlat
xor
or
ds
adcb
sarb
iret
sub
add
push
mov
sbb
mov
xchg
bound
pusha
cmpsl
mov
dec
das
lods
add
dec
aad
stos
xchg
nop
ja
dec
mov
sahf
out
xor
dec
push
add
jle
and
dec
mov
into
test
movhps
subl
ljmp
fisubrl
fstpt
lret
call
insl
sbb
imul
and
sub
mov
das
mov
in
test
dec
test
mov
sub
mov
stos
cs
jl
or
inc
arpl
lock
mov
out
sbb
pop
notl
mov
jns
hlt
fs
mov
push
cmc
aas
jle
add
inc
lret
cmp
adc
mov
xchg
ds
cld
pop
popa
into
sbb
sbb
push
add
cs
pop
addr16
shlb
xor
xor
arpl
fisubrl
ret
je
dec
xor
cli
adc
int
pop
int
xor
call
das
or
pop
int
iret
pop
xchg
xor
aaa
std
hlt
push
pop
push
jle
popa
dec
lods
and
push
mov
jbe
int
lahf
and
aad
cmc
mov
cmovle
shrl
push
int3
cs
cmp
loop
jb,pn
xor
repnz
cmc
jg
lock
inc
pop
cmpb
add
cmp
cld
and
test
fnstsw
or
sbb
int
pop
jns
lret
mov
add
jg
mov
lods
xchg
push
cwtl
pop
leave
dec
dec
sahf
jge
lods
in
or
shll
mov
cltd
jle
insl
test
sub
mov
xchg
jae
adc
mov
ss
fcmovnu
sbb
jbe
ljmp
jae
sbb
negb
cmp
movsb
and
inc
jg
je
sbb
mov
mov
rcrl
xchg
xchg
xor
mov
or
mov
ret
or
loope
xchg
lcall
fildll
in
add
test
push
xor
mov
scas
dec
fisttpl
add
push
adc
packsswb
js
jmp
test
mov
add
mov
mov
xor
int
test
xchg
jecxz
lahf
es
push
aam
mov
shlb
or
mov
inc
sbb
cmp
aam
popf
mov
imul
mov
xlat
sbb
sub
and
sbb
fyl2x
ljmp
or
mov
outsl
test
or
call
mov
mov
mov
xchg
xor
jge
out
cwtl
push
idivb
dec
jnp
pusha
jne
iret
outsl
loope
cmpsl
scas
sbbl
push
inc
mov
cmp
mov
lods
aaa
inc
pop
mov
pop
mov
stos
andl
lock
ret
jb
mov
xchg
not
cmpsl
and
cmp
jne
pushf
adc
xor
sbb
loope
loop
fwait
or
mov
mov
dec
scas
jnp
inc
cld
pushf
pushl
dec
push
loop
dec
lods
cmp
jnp
scas
mov
xchg
or
mov
adc
add
mov
js
push
dec
or
push
and
inc
pop
or
repz
sub
mov
jp
add
movsl
adc
loope
xor
cs
sub
cmp
mov
andb
pop
xchg
sbb
add
int3
pusha
jg
dec
clc
jne
inc
push
sbb
xchg
pop
js
mov
mov
daa
ss
or
lcall
std
sbb
stos
fstpt
pop
sub
dec
mov
mov
pop
xor
imul
push
mov
into
and
sbb
sub
cmp
cs
push
sar
xchg
jns
pop
push
sub
icebp
cs
push
fstps
pop
xchg
ljmp
imulb
cli
movsl
fcompl
shll
enter
dec
sub
and
push
mov
mov
and
jns
inc
pop
cmpsl
sub
push
mov
leave
jl
push
ja
cltd
dec
lods
aaa
inc
les
mov
push
rorb
cmp
sub
ror
mov
subb
xlat
ret
clc
xchg
fbld
jae
inc
hlt
jg
clc
mov
and
leave
into
leave
ffreep
lcall
mov
aaa
jg
das
pop
fwait
push
push
add
push
mov
out
in
je
adc
je
movsb
xor
mov
and
enter
movb
push
cmc
movsb
scas
or
or
shl
data16
jno
dec
push
push
cmp
sub
adc
xchg
insl
mov
rcll
prefetchnta
movsl
lock
pop
scas
ficoms
es
lods
dec
pop
sbb
mov
sub
push
shr
das
int3
cmp
imul
je
bound
into
lods
sbb
pusha
xor
sub
fists
xchg
jl
sub
jmp
xchg
jl
xchg
arpl
inc
ss
std
or
bound
mov
jl
mov
inc
xor
mov
or
or
or
add
in
mov
mov
jo
in
out
adc
andl
icebp
out
rol
dec
popa
rcrb
pop
xchg
fwait
inc
inc
orl
les
push
lcall
pop
mov
ret
xlat
adc
loopne
ljmp
cmp
pop
dec
imul
dec
insl
es
dec
popf
ret
aad
es
mov
push
push
mov
repnz
mulb
jle
jecxz
sub
add
lods
rcrb
ret
call
mov
cmp
lret
cwtl
jp
jnp
mov
fiaddl
iret
cmp
in
add
jp
cld
outsl
les
data16
mov
dec
in
and
loopne,pn
pop
or
lcall
xchg
mov
scas
je
jmp
jne
fs
xchg
bnd
push
and
roll
pop
push
imul
repnz
lods
cmp
ret
adc
cli
lods
fdivrs
js
mov
push
dec
ja
adc
cli
mov
pop
gs
popf
aad
and
add
movsl
es
data16
lret
mov
loope
pop
pop
enter
sahf
cwtl
push
dec
inc
xor
add
add
leave
dec
sbb
sub
adc
ds
ja
cmp
pop
lret
and
mov
jnp
lret
and
test
daa
das
js
jecxz
fwait
jbe
pop
lcall
outsl
xchg
adc
adc
sbb
sti
cwtl
int
add
imul
lock
leave
popa
clc
jne
mov
dec
popa
xchg
out
sbb
cs
xchg
rclb
popf
aas
xchg
mov
xor
mov
ret
add
cmpsl
xor
and
out
xor
test
rolb
sahf
outsb
clc
leave
out
std
shrl
test
pushf
add
mov
jb
lea
cmp
ds
inc
in
sub
cmp
dec
sti
int
adcb
and
cmp
popf
xchg
sbb
aaa
mov
je
stc
push
and
outsl
lcall
sahf
mov
mov
sahf
jbe
lods
pop
movsb
pop
inc
ret
in
push
dec
ss
push
jg
js
mov
aam
ds
dec
adc
push
insl
mov
out
mov
or
xor
mov
xchg
or
nop
mov
std
imul
push
push
cli
adc
pop
stos
adcb
push
and
cmp
loope
mov
xor
cli
mov
fsts
xor
mov
cli
sbb
xor
push
pop
jg
test
inc
or
ja
movsl
or
push
lcall
lods
mov
mov
push
aas
in
add
into
sub
mov
das
hlt
mov
xlat
pcmpeqw
arpl
add
jnp
and
mov
or
cmp
jge
xchg
xor
jl
inc
mov
xlat
mov
jp
lahf
push
gs
dec
rorl
test
or
hlt
xchg
out
lahf
add
mov
loope
cmpsb
insl
movsl
fwait
mov
mov
ret
dec
jmp
sub
icebp
push
push
sub
cwtl
fs
in
cmp
xchg
or
add
addr16
imul
mov
lahf
and
inc
xor
pusha
loopne
or
int
dec
js
xchg
xchg
sbb
jb
stos
xchg
inc
sbb
aad
xchg
enter
or
lods
pop
test
sbb
ret
xchg
mov
mov
loope
pop
shlb
sub
fsubl
and
stos
aaa
in
jne
cltd
mov
inc
add
divb
add
into
xor
push
sbb
or
cwtl
iret
aas
dec
test
mov
mov
mov
fs
cmpsl
das
ds
sti
push
fwait
push
dec
stos
mov
int3
shll
sub
pop
dec
push
lcall
sbb
xchg
orl
arpl
adc
lcall
in
hlt
iret
mov
imul
xor
and
cld
xor
sub
repnz
mov
cmpsl
addr16
jge
xchg
xchg
in
sti
lods
pcmpgtb
imul
test
loop
insl
lea
xor
xchg
into
fnsave
jnp
inc
inc
xchg
xchg
dec
mov
mov
scas
and
push
cmp
lods
pop
adc
aam
dec
dec
imul
fs
pushf
inc
aam
sub
lods
repnz
out
sub
test
adc
cmp
dec
in
insb
fnstsw
xchg
xchg
pop
jmp
das
out
jae
mov
in
mov
lea
and
inc
adc
inc
jmp
fldl2t
cmpl
scas
mov
mov
jl
popa
jge
sahf
cmpsb
mov
or
inc
negb
pop
fsubrp
mov
adc
sbb
cwtl
in
sbb
push
jmp
fbstp
mov
xchg
daa
test
inc
sbb
stc
inc
mov
into
leave
inc
jge
push
shlb
and
push
bound
jo
loop
gs
adc
aad
mov
stos
adc
add
icebp
or
or
push
push
stos
xor
repnz
dec
push
repz
sahf
ja
dec
xchg
popa
xchg
xor
aaa
or
push
and
fsub
stos
add
xchg
in
ja
stos
mov
sub
push
popf
mov
icebp
pushf
dec
adc
push
shr
loop
lret
scas
repnz
enter
push
les
pushf
push
dec
fildll
ret
xlat
test
test
inc
mov
data16
jb
enter
mov
or
mov
lock
push
sbb
out
jp
scas
popf
lret
shlb
lock
xchg
mov
jle
push
mov
jno
dec
inc
outsb
je
bound
lret
not
xchg
inc
pushf
mov
mov
fidivrs
cmpsl
pop
fldenv
mov
lcall
mov
lea
and
cmp
std
mov
push
inc
mov
cmp
fcoms
cwtl
xor
in
sbb
rcll
rcll
inc
xor
add
movsl
xchg
arpl
mov
int3
loopne
xor
and
and
or
adc
test
arpl
mov
xor
imul
loopne,pt
ds
mov
sahf
sbb
adc
fimull
xchg
xlat
fsts
int
sub
into
jo
add
scas
pop
inc
mov
pop
sub
push
xchg
sbbb
mov
add
mov
aas
add
aad
repnz
in
mov
mov
mov
xchg
mov
cmp
xlat
les
adc
clc
mov
mov
jg
jle
add
sub
pop
cwtl
lods
insl
testl
xor
adc
mov
add
insb
pop
xor
fimuls
mov
xchg
imul
inc
xor
or
add
add
dec
xor
sbb
imul
iret
inc
cmc
push
in
push
push
sarl
sahf
jno
addl
cmp
mov
push
adc
mov
jbe
xchg
or
jle
adc
iret
push
js
repnz
xor
inc
arpl
sti
into
or
inc
sahf
lea
sub
dec
mov
mov
inc
xorl
mov
push
inc
jl
lds
jmp
arpl
mov
sbb
pop
mov
fstl
inc
sti
test
xchg
pushf
mov
lret
inc
outsl
cmpsl
push
push
lahf
add
add
jge
lret
dec
xchg
and
add
jne
mov
push
xor
pop
daa
sub
loope
jnp
and
jb
add
and
pushf
cs
aaa
pop
push
and
outsl
jns
insl
xchg
outsl
int
in
dec
push
shlb
loopne
pop
out
mov
jge
fidivs
cmp
stos
push
xchg
dec
push
xchg
or
test
fcmovnbe
adc
mov
mov
leave
aas
in
test
mov
sbb
pushf
push
js
in
push
xor
or
inc
inc
dec
pushf
iret
nop
cmpsb
jns
mov
clc
jle
and
sub
push
mov
cwtl
jno
pop
sar
and
jbe
sbb
jecxz
inc
xchg
mov
jbe
adc
hlt
lahf
icebp
mov
sbb
mov
mov
pcmpgtd
out
fiadds
mov
hlt
int3
mov
int3
mov
loope
dec
call
xchg
adc
das
push
in
mov
xchg
nop
push
jno
xor
vmovdqa
inc
fwait
lahf
je
pop
push
cmp
jns
or
cltd
dec
fnstenv
out
fadd
xchg
fdivr
js
bound
fisubs
xor
add
mov
sbb
adc
lods
pop
sbb
pop
dec
insb
fs
push
movb
insl
sub
jbe
std
pop
add
or
adc
sub
lock
adc
add
jb
sub
inc
inc
mov
cmp
in
lea
js
jl
mov
pop
outsl
and
scas
mov
fdiv
cmpsb
inc
test
movb
shl
test
cmpsb
jnp
daa
and
xor
pop
jb
sahf
and
sub
sbbl
out
scas
mov
cmc
and
jge
ss
lret
inc
jbe
dec
sbb
aas
xchg
dec
xor
push
dec
into
or
dec
xlat
dec
popa
mov
imul
int
mov
scas
mov
fldt
dec
dec
jne
add
add
ja
push
jl
leave
cmc
dec
scas
dec
in
je
xchg
mov
shlb
inc
out
mov
sbb
push
andb
movsl
popf
outsb
pushw
push
xor
inc
ja
sbb
cmc
push
jl
cmpl
rcrl
jae
out
int3
sub
xor
or
push
xchg
push
fucom
aas
dec
out
int
mov
nop
jge
cwtl
or
int3
gs
mov
lret
fnstsw
ficomps
test
xchg
mov
test
fucomi
sbbl
in
mov
leave
das
imul
adc
fucomp
xchg
adc
sbb
mov
or
loop
lret
loopne
out
jge
mov
add
mov
pop
callw
mov
jo
and
xor
int
dec
ljmp
jno
lcall
sbb
push
push
loope
daa
sbb
pusha
jle
mov
dec
sub
dec
cmpsl
mov
push
add
xor
mov
aam
inc
dec
dec
mov
jb
mov
sub
imul
imul
mov
and
cmp
out
adc
mov
aaa
imul
pop
je
scas
cwtl
insb
push
pop
cmc
sub
cltd
fdivrl
fcmovb
dec
mov
jnp
imul
and
imul
imul
pop
or
aad
sub
xchg
jecxz
jp
and
aad
dec
sbb
xchg
inc
mov
push
xchg
pop
cmp
sub
mov
out
pushf
pop
movsl
xchg
testb
push
lea
and
jo
and
xor
xchg
jmp
adc
jb
or
stos
mov
lcall
or
adc
cmpsl
dec
popa
mov
pop
das
push
mov
or
cmp
pop
sbb
add
outsb
xchg
scas
pop
enter
ficoms
sti
xchg
adc
pusha
mov
rorb
aam
lahf
orb
mov
test
dec
dec
push
jmp
aaa
xchg
and
sahf
cmc
cmpl
push
lea
cmp
test
cmpsl
lods
dec
cli
popf
cs
sti
adc
sub
fsubl
xor
sbb
ja
popf
into
cld
jmp
xchg
mov
jbe
xlat
push
les
jbe
jnp
mov
popf
cmp
lahf
es
push
lds
xchg
imul
mov
mov
std
addl
mov
mov
pusha
sbb
movsl
adc
fidivrl
repz
insb
cli
adc
cmp
dec
loopne
and
xorl
les
and
mov
or
adc
stc
cli
dec
lret
aas
pop
xchg
or
mov
movsl
movsb
sti
xor
mov
add
mov
lret
loop
mov
jae
xor
into
popa
dec
xchg
inc
mov
jle
lcall
adcl
xchg
shr
and
sarl
je
out
cmp
xchg
jge
out
dec
leave
inc
xchg
ror
addl
mov
addr16
sbb
mov
pop
fisubl
pop
insl
jbe
int3
dec
sbb
sbb
mov
jno
or
sub
lcall
fisttpll
rcll
pushf
jmp
pop
jle
sbb
jns
test
sahf
sbb
ss
ja
and
fwait
out
sub
mov
pop
cmpsl
cmc
inc
xchg
daa
adc
push
pop
mov
dec
sub
xchg
lods
sahf
iret
mov
mov
in
mov
mov
std
ja
sub
dec
add
frstor
ret
mov
add
daa
jl
pushf
push
aaa
sbb
push
inc
or
movsl
aas
sub
dec
cmp
adc
lock
insb
sbb
push
cmpsb
mov
leave
pop
mov
lahf
jmp
div
pop
and
mov
push
push
mov
mov
fcmovu
iret
xchg
push
movsl
addb
stos
adc
jb
ss
in
test
test
add
and
movb
pop
cmpsb
mov
xor
in
mov
mov
aaa
lods
sbb
stos
mov
repnz
shl
add
or
push
dec
or
outsl
add
outsb
negb
dec
jmp
and
enter
sbb
cmc
adc
scas
popa
test
mov
add
sub
shlb
push
push
pop
into
out
fadds
mov
push
jge
clc
imul
mov
lea
imul
repnz
cmc
js
xor
sbb
cltd
pop
fisttps
dec
shl
xchg
or
in
stc
mov
sub
add
int
popf
xchg
mov
insl
aad
and
test
push
sbb
jmp
mov
jle
leave
movsb
aam
insb
jne
movsb
inc
mov
xchg
or
out
nop
and
and
push
xlat
stos
dec
in
sbb
cmp
das
jle
mov
in
imul
arpl
pop
adc
std
pop
inc
or
mov
mov
add
xchg
bound
adc
outsb
inc
mov
adc
lret
push
xor
nop
sbb
movsb
out
icebp
mov
sti
sbb
stos
mov
adc
test
pop
lahf
pop
fisttpll
sub
pop
addl
stos
xlat
lcall
mov
xor
clc
loopne
sub
popf
enter
movsb
mov
stos
mov
in
push
mov
or
sub
xchg
daa
dec
into
je
inc
movb
adcl
dec
stos
jnp
mov
aad
movsb
jle
shll
and
adc
adc
out
push
sahf
dec
loop
fwait
xchg
test
jne
push
loop
rol
inc
cwtl
sub
daa
outsb
fnstcw
fidivrs
test
mov
shlb
insl
push
pop
xchg
xor
sbb
mov
pop
daa
shlb
add
fyl2xp1
push
insb
add
arpl
dec
orb
push
insl
das
xor
movsb
mov
xchg
jecxz
jp
jg
es
mov
bnd
dec
add
test
mov
push
cmpb
test
in
mov
leave
imul
xchg
push
fwait
enter
test
lea
sub
test
and
cmpsb
fidivs
enter
sbb
mov
pusha
mov
pop
addr16
cld
mov
dec
sub
out
loopne
idiv
mov
andb
outsl
imul
or
pusha
mov
pop
repz
mov
outsl
mov
inc
js
leave
pop
incl
adc
in
imul
push
jge
cmp
push
insb
jg
mov
test
push
jo
xchg
cmpsb
cmp
pop
sbb
lcall
mov
and
cmp
in
mov
or
movsl
jl
ljmp
pop
ret
aas
std
push
ja
test
fsubs
call
push
adc
dec
bound
adc
cmpsl
adc
cmp
std
lods
mov
adc
adc
or
cmpsl
lahf
xor
cwtl
popf
and
scas
or
orl
fwait
mov
repz
cmpsb
popa
push
js
push
push
in
sti
sbb
jecxz
sub
nop
xchg
in
scas
xchg
mov
xor
popa
decl
and
sub
loop
int3
jg
cmc
cli
mov
rcrl
test
ret
xor
and
or
and
aad
mov
add
dec
cmp
enter
leave
jns
push
cltd
mov
push
and
cmp
ret
hlt
popa
call
xchg
adc
inc
add
aad
sbb
mov
js
jg
mov
outsl
fwait
or
pop
and
cmp
movsl
mov
popf
insb
jle
cwtl
sub
dec
add
shl
mov
xor
cmp
jnp
xchg
sbb
das
hlt
pop
aas
mov
fcmovne
jo
mov
addb
movsb
mov
add
or
xor
and
loope
add
push
dec
cmpsb
cmc
jbe
jno
rolb
mov
dec
loopne
push
int
or
sub
or
mov
and
rorb
sahf
shrd
scas
loopne
dec
cmpsl
pop
enter
cmpsl
push
xor
dec
and
mov
inc
stos
sti
pop
or
sub
adc
pop
addr16
in
pop
and
add
imul
mov
or
ret
iret
int3
lds
push
ss
add
inc
jne
mov
mov
mov
xchg
inc
clc
jno
jl
ret
fcompp
insb
outsl
mov
movsb
pop
pop
xchg
sub
xchg
push
das
cmpsb
loope
push
pushf
ja
cmpsb
xor
xchg
iret
ss
in
dec
mov
pop
cld
cld
call
data16
and
aaa
pop
xchg
std
push
xlat
jno
imul
dec
js
pop
pop
jno
loop
leave
in
xchg
mov
es
fwait
sbb
xchg
jb
mov
dec
out
cli
adc
int3
lcall
clc
pop
rcr
out
out
and
add
int
and
mov
icebp
cmp
adc
sbbb
or
pop
fiaddl
push
stc
cmc
sub
rcrb
enter
and
inc
int3
or
pop
inc
pop
ljmp
mov
jg
inc
xor
mov
into
sbb
nop
outsb
stos
jnp
cs
push
cmc
push
repnz
addr16
scas
adc
xlat
cmp
mov
in
cld
mov
xchg
stc
jo
lods
pop
push
fildll
lcall
dec
les
rcrl
mov
les
sub
cs
push
fwait
inc
popa
jge
aas
jp
pop
test
mov
or
mov
add
jg
xchg
imul
xor
call
jne
cs
jmp
jb
hlt
cmp
sbb
cmp
mov
sbb
rcll
aam
cld
cmp
mov
scas
push
fidivl
and
nop
push
push
pop
inc
pop
pop
adc
add
stc
and
sbb
lods
add
stos
out
outsl
cmpsl
daa
shrb
sub
sahf
fnstcw
xchg
popa
or
cmp
outsb
out
dec
pop
repnz
out
in
push
sub
insl
imul
jmp
and
movb
insl
dec
push
mov
ret
cmp
xchg
mov
dec
repnz
insb
jg
clc
in
fwait
mov
pop
xchg
lods
fwait
sti
adc
jle
arpl
hlt
add
pop
pop
and
mov
mov
mov
test
bound
dec
mov
in
fisttps
and
int3
push
xor
scas
mov
dec
daa
pop
mov
sub
lcall
mov
or
cmpsl
out
out
mov
movsl
iret
popf
cmpl
popf
mov
inc
adc
jae
loopne
inc
inc
arpl
cwtl
add
lret
in
rclb
and
cwtl
aad
ja
adc
xchg
pop
cltd
lods
pop
xchg
or
popa
cs
dec
insl
ret
rclb
cmpsl
cmp
ds
cltd
mov
sbb
jo
pop
ret
lods
insb
inc
xchg
mov
cmpl
jecxz
cmpsl
jb
inc
xchg
jl
cltd
add
stos
pushf
jle
cli
add
idiv
and
push
stc
sbbl
dec
push
or
movsb
outsb
xchg
je
sahf
push
mov
aaa
pop
test
sub
cmp
aam
fnstcw
jmp
cmpsl
imul
adc
aaa
pop
cmpsl
jmp
decb
sub
mov
mov
insl
fmull
sahf
sbb
push
dec
xchg
fwait
lods
mov
sbb
fcmovu
pop
add
popf
cs
daa
fsubrs
fists
inc
jp
pop
xlat
mov
fadds
cwtl
or
testb
inc
cmp
divl
inc
sub
inc
lahf
rcrb
shlb
sti
sbb
ja
mov
jns
and
jnp
and
push
call
adc
inc
or
sbb
loop
add
inc
and
jg
lahf
jmp
push
cmp
mov
push
ds
aaa
pop
ss
mov
lock
jnp
sbb
push
aaa
and
xor
leave
scas
dec
fiaddl
mov
mov
int3
or
inc
jmp
cmp
pop
addr16
fmuls
sbb
xchg
add
sub
adc
sub
stc
adc
mov
and
loope
add
sbb
rcl
lods
xchg
dec
movsl
push
fistl
sbb
fs
pushf
cmp
movsl
adc
mov
stos
scas
cli
jne
xchg
fwait
sub
lock
pop
je
sub
xchg
mov
sub
lret
add
lods
mov
push
cltd
jno
hlt
in
pop
mov
or
lcall
cwtl
bound
cltd
pop
pop
aam
mov
sti
loopne
pop
pop
push
outsl
shrl
and
mov
dec
je
je
lock
add
sbb
andb
ret
mov
inc
and
push
mov
aam
lahf
dec
loopne
and
sub
xor
dec
subl
xchg
mov
cmp
xchg
out
andl
add
cli
scas
mov
lds
xchg
fsubr
jp
sbb
sub
dec
or
lods
xor
jnp
mov
xor
adc
ret
sbb
out
mov
push
int
push
fildll
push
mov
clc
les
and
lahf
and
cmp
aaa
push
inc
shll
cmp
cmp
stos
and
fisttpll
jnp
in
incl
xchg
add
ret
push
enter
adc
das
or
andps
or
cs
mov
mov
int3
andb
sbb
inc
ror
cmp
or
inc
mov
lods
ljmp
cld
xchg
lods
aad
mov
mov
sbb
xchg
push
lock
or
xchg
nop
xor
ss
jne
dec
jb
pop
mov
sbb
lock
mov
inc
sbb
test
xchg
xchg
iret
sub
xchg
pop
movsl
in
xchg
lcall
out
xor
into
xorb
sar
enter
dec
dec
jecxz
dec
push
add
jmp
loopne
leave
ds
adc
and
mov
movsl
inc
popf
fadds
mov
jmp
mov
mov
sbb
faddp
jle
fsts
jbe
lods
mov
imul
data16
imul
adc
inc
pop
lcall
incl
jmp
mov
pop
lds
cmp
push
movsb
inc
test
insl
popf
and
pushf
or
cwtl
and
push
push
sub
add
std
mov
sub
mov
lods
bnd
pop
xchg
lods
or
adc
int
popa
aad
adc
movsb
lret
bnd
mov
in
push
xor
test
out
mov
inc
or
cmp
ljmp
xor
fiaddl
jae
or
repnz
xchg
mov
cld
or
insl
adc
fwait
cmp
pushf
push
sti
ja
inc
nop
outsl
cmc
mov
jmp
jl
sarl
xor
add
mov
gs
or
push
bound
mov
fdivs
into
mov
popf
xlat
jmp
mov
adc
sahf
lret
ss
das
inc
mov
mov
clc
add
mov
icebp
xchg
out
aam
push
fidivl
std
pop
ret
enter
sbb
jg
movsl
adc
cld
cmpsb
ret
int
push
sti
xor
stc
jno
aaa
fildl
xchg
int3
sti
cwtl
adc
aad
insl
or
cli
leave
bound
pop
dec
pop
mov
test
insb
jnp
mov
popa
mov
jae
jbe
mov
mov
js
cmp
ja
mov
push
fdivr
push
cmp
clc
jecxz
leave
xchg
dec
jmp
lret
adc
int3
insb
and
fidivrs
aam
sbb
daa
xchg
jg
or
dec
lods
popf
sbb
or
aas
cmp
in
call
xor
mov
add
ja
je
push
or
inc
mov
in
push
push
fbld
push
push
aaa
aad
cmp
add
out
xor
movsb
inc
mov
testb
stos
adcb
sbb
test
in
xor
add
xchg
xlat
sbb
xchg
push
mov
and
mov
push
jb
push
loop
mov
test
or
iret
adc
imul
and
push
call
int3
std
mov
mul
push
leave
push
mov
pop
fdivl
jo
lret
sti
es
aad
xchg
inc
push
mov
in
mov
cmc
out
in
mov
mov
pop
pop
sbb
cmpsb
mov
inc
push
adc
call
jns
and
aad
push
sub
cmp
test
fbstp
jge
dec
inc
add
in
aas
mov
mov
ror
mov
pop
shll
sbb
loop
inc
dec
sub
stc
cmp
push
sahf
mov
add
stc
lahf
lea
leave
shl
sub
test
inc
pusha
lcall
aaa
test
xor
cmp
jo
push
mov
sub
push
outsb
addr16
rep
rolb
mov
test
push
lock
mov
imul
les
mov
sub
fdivs
subb
loopne
push
push
push
loopne
push
xor
jg
push
popa
push
mov
ss
push
aam
jge
icebp
icebp
fldenv
popf
jb
test
in
ret
je
movsb
or
jle
push
jne
xchg
lods
cs
cwtl
mov
ss
cld
scas
jb
fistpll
lret
push
inc
xor
imul
cmp
js
cltd
and
stos
sbb
ja
ljmp
out
int3
cmp
test
dec
fsubs
sahf
mov
std
dec
adc
js
or
cmpsl
sub
test
andl
stos
int3
test
test
mov
jns
cmc
mov
shrb
loope
push
nop
dec
cmp
jae
and
jb
mov
xor
mov
subl
or
fiadds
sti
or
adc
popf
xchg
stos
and
mov
xchg
inc
aaa
insl
sub
fldz
push
test
hlt
das
pop
std
fidivl
out
push
rorl
add
or
out
aaa
nop
repz
xchg
lret
mov
testb
repz
sti
xlat
jp
or
lds
dec
mov
jne
sub
pop
nop
sub
data16
test
dec
and
jno
adc
mov
sbb
out
mov
jns
push
xchg
dec
jne
pop
scas
inc
scas
loopne
inc
xchg
jg
sub
sub
mov
call
adc
jo
mov
ret
lahf
es
mov
in
cwtl
lret
aaa
loope
outsl
scas
clc
add
lea
pop
fcomps
lahf
adc
bound
xchg
mov
jnp
cmp
xor
inc
test
mov
and
dec
mov
xchg
leave
sarl
mov
int
push
dec
xchg
and
outsb
mov
jle
in
out
sbb
fstpl
nop
sti
push
jg
loopne
pushw
jle
mov
addb
sbb
popf
das
inc
in
std
lea
pop
jg
lea
sbb
sbb
jne
and
sahf
aam
std
push
cld
out
cmp
aaa
fdivrl
sbb
cmp
mov
adc
nop
cmpsl
cmpb
enter
cmp
inc
and
add
mov
enter
int
sbb
xchg
mov
jmp
and
sbb
outsb
in
xchg
fsubrs
jmp
mov
jno
push
pop
mov
aas
fnstsw
lret
mov
cmc
stc
int3
fisubrs
adc
lret
mov
inc
mov
lods
shl
cmpsb
lahf
sub
mov
jno
inc
pushf
hlt
or
mov
iret
adcb
int
inc
xchg
jnp
rolb
pusha
inc
push
cld
mov
mov
pop
jo
pop
test
popa
movsl
pop
fmuls
dec
or
xor
add
enter
mov
mov
aas
push
xor
leave
or
insb
repnz
std
add
sub
add
inc
fdivrs
pop
adc
js
pop
cli
mov
mov
stos
adc
sarb
decb
or
int3
xchg
sub
shl
sbb
xchg
mov
sub
add
inc
insb
cmp
push
xchg
sti
call
mov
sub
push
movsl
loop
out
stos
imul
jns
inc
and
mov
out
mov
mov
sbb
enter
mull
pushf
les
cmp
xor
xchg
add
xchg
adc
outsl
and
sbb
rorb
jg
adc
jb
sbbl
adc
and
push
cs
xchg
ret
mov
adc
adc
clc
sbb
jge
jecxz
xchg
lret
test
xchg
sub
call
out
sbb
js
xor
pop
dec
adc
shlb
mov
add
jmp
inc
mov
pop
rcr
jge
dec
and
shrl
cli
cld
mov
das
rorb
push
aad
xchg
enter
push
stos
outsb
jnp
cmp
push
xlat
das
shll
xor
push
xchg
and
mov
ficomps
ret
and
and
jnp
sub
mull
push
push
sar
lock
cltd
xor
orl
add
adc
pop
icebp
lret
dec
test
in
xor
xor
incl
andl
jb
nop
cli
jg
add
loope
xchg
or
xchg
icebp
pmuludq
scas
int
or
ljmp
test
frstor
and
in
mov
enter
test
std
in
sbb
cmp
jno
movl
insb
lods
aad
into
sbb
cwtl
cmp
adc
jp
mov
xchg
sub
sbb
cmp
add
jo
ret
data16
mov
test
xchg
pusha
push
cmp
ret
sahf
mov
mov
popf
out
dec
test
cmp
pop
idivl
inc
out
xor
ret
pop
orb
jmp
mov
or
push
fs
mov
addr16
stos
jo
mov
pusha
fucomi
sbbb
mov
push
inc
and
clc
out
add
xor
ret
add
xchg
fwait
mov
mov
rcrb
sahf
xchg
and
ret
jecxz
mov
ret
jb
enter
movsbl
jne
jp
notb
lds
add
je
mov
adc
sti
jns
js
hlt
inc
push
jp
movsb
jns
jmp
or
and
es
pop
and
dec
insb
inc
lods
fwait
dec
cmp
push
add
addr16
mov
jo
pop
imul
ss
jne
std
or
jmp
xchg
add
cltd
fs
enter
mov
jnp
dec
lret
outsb
leave
inc
or
mov
mov
test
rol
lcall
or
push
orb
sub
stc
loope
dec
adc
dec
sub
and
mov
mov
sub
clc
sbb
pop
xchg
xchg
movsb
ds
aas
sbb
movsl
sub
mov
push
sbb
lahf
movsl
aaa
push
sbb
test
ret
testl
pop
enter
cmp
cltd
push
cltd
add
mov
mov
lcall
scas
loopne
pop
dec
cltd
fs
fnstcw
add
das
lret
lods
or
out
mulb
add
in
dec
cmp
js
inc
test
mov
int
mov
sub
lahf
mov
xchg
sbb
mov
jae
add
push
jne
and
cld
cltd
jns
sbb
mov
mov
xchg
and
fwait
mov
ss
push
iret
push
pop
xlat
push
add
ja
inc
les
mov
push
mov
outsb
ljmp
inc
push
gs
mov
cmp
cmpsl
imul
std
gs
inc
mov
test
sbb
cmc
push
pop
jno
mov
addr16
loopne
mov
xor
sbb
mov
push
add
shll
movsb
aaa
pop
xchg
fldenv
xor
in
add
daa
inc
jo
std
add
and
out
jmp
mov
pop
mov
and
xchg
dec
cli
jbe
popf
sbb
sbb
and
inc
in
mov
jno
fmul
mov
mov
mov
test
mov
cmp
mov
adcl
cs
pop
xor
inc
push
std
jno
ss
movsl
out
call
dec
insl
divb
sub
add
adc
pop
aam
pop
test
stc
ret
lods
testb
in
int
pop
add
adc
arpl
mov
mov
add
jne
inc
inc
xor
pop
xor
xchg
out
sub
pusha
mov
add
sbb
add
dec
ja
fidivs
andl
sbb
in
push
hlt
shl
movsl
adc
sahf
push
push
sarb
shll
jns
xchg
push
xchg
les
arpl
int3
cwtl
hlt
mov
mov
pop
imulb
mov
es
push
sub
push
insl
adc
push
cmp
mov
ja
jns
cmpsb
sbb
xchg
cmp
push
cld
sub
lcall
dec
pop
jns
cwtd
push
sbb
mov
into
pop
cmp
stc
xchg
lods
daa
das
out
xchg
adc
frstor
lods
lahf
int
dec
push
lcall
notl
push
mov
cli
fcomps
das
push
and
fiadds
mov
dec
adc
and
and
aad
add
or
lods
jb
and
call
lods
into
into
out
cwtl
or
shl
mov
fcoml
cli
iret
shr
inc
jb
jb
cmc
sbb
int3
add
cld
mov
cwtl
movl
mov
and
daa
loop
push
and
popa
sub
lods
cli
cmp
xlat
sub
nop
cmp
push
push
adc
ds
repnz
iret
push
mov
popa
imul
cmpb
adc
into
mov
fsubrl
and
cmpsl
enter
xchg
repz
pop
mov
push
or
cmpsl
push
add
add
adc
ljmp
jne
mov
adcl
inc
xchg
push
rcrl
xchg
int
decb
adc
mov
xor
lods
cmp
je
mov
ret
inc
movsl
out
jmp
scas
data16
cmp
movl
pop
or
popf
aas
daa
gs
in
mov
movsb
xchg
xchg
mov
mov
std
xchg
adc
shrb
mov
mov
shlb
loope
aad
jns
mov
xchg
inc
fildll
test
dec
sti
adc
repz
jp
sbb
popa
and
mov
std
or
xchg
cli
dec
mov
loope
pop
sarl
lock
adc
fdivs
jo
std
loop
sub
mov
lcall
loopne
outsb
inc
inc
xor
cmp
fsubrl
js
jbe
ficompl
or
xchg
push
lock
sbb
repnz
lds
jp
mov
jge
movsl
mov
adc
das
subl
bound
cmp
mov
imul
subb
ret
int3
jae
mov
hlt
xlat
lds
sbb
mov
pop
push
cmp
loope
xchg
fs
call
pop
das
rcrl
int
stos
imul
push
stos
cmpsb
pop
call
popa
lret
stos
xor
xor
js
ret
lds
pusha
mov
dec
and
inc
pushf
rolb
add
into
push
push
or
bnd
sbbb
jo
or
fdiv
xchg
push
sub
pop
mov
addl
pop
fidivl
loopne
jl
adc
outsl
mov
das
inc
adc
pushf
cli
clc
mov
mov
or
movsl
and
mov
into
cmpsb
pop
stc
mov
dec
lcall
repnz
sbb
cmpsb
jae
and
jmp
push
mov
inc
xlat
sbb
leave
out
cmpsb
in
out
sub
pop
lret
pop
ficompl
jmp
push
es
sbb
or
sahf
and
data16
xchg
call
arpl
test
imul
jo
dec
sbb
and
repnz
fisubrs
jns
mov
data16
into
cld
js
aas
inc
insb
fmuls
push
mov
add
sbb
je
enter
or
adc
aam
add
pop
inc
std
dec
das
outsb
pop
pop
inc
push
push
push
cli
mov
je
mull
cmp
in
lods
aas
iret
aam
nop
dec
js
cld
dec
leave
decl
movsb
aas
dec
mov
loope
xchg
lret
outsl
mov
int
fidivrs
xor
push
add
inc
mov
shlb
add
int
or
lods
mov
pop
mov
sahf
push
cli
dec
mov
inc
dec
or
ljmp
jb
xor
cli
mov
xor
push
add
xor
sub
nop
popf
insb
lcall
jbe
icebp
cs
leave
mov
out
add
rol
xor
mov
push
lods
insl
jnp
and
cmp
shll
cmp
xchg
jne
push
out
pop
push
pop
pop
imul
jae
sahf
fnstsw
jle
lcall
push
fcomi
xor
sub
mov
js,pt
dec
xchg
and
loopew
push
adc
das
push
rolb
test
mov
repz
inc
cmp
mov
das
mov
aam
mov
aaa
repz
enter
adc
adc
inc
popf
mov
xor
dec
adc
mov
in
dec
outsl
divl
sbb
jne
bound
xchg
cmp
pop
sbb
inc
sbb
test
or
or
cmp
adc
mov
sti
insb
jne
mov
dec
sbb
xchg
dec
imul
pop
cmpsb
lret
adc
divl
aaa
mov
int
jl
adc
clc
stc
daa
push
xchg
sbbb
call
lret
mov
popa
or
aaa
and
int
nop
pop
loopne
movb
test
mov
dec
push
jns
or
out
sbb
ret
lods
shlb
cmp
ds
clc
lods
mov
scas
dec
jl
mov
cli
xor
mov
sbb
out
xor
setle
les
jg
cmpsl
and
dec
and
sbb
enter
mov
inc
xor
sti
popf
or
das
nop
mov
mov
pop
cmpl
xlat
in
roll
push
push
outsb
cld
jno
sub
cmpl
cmp
inc
mov
sarb
in
in
mov
lret
sub
int3
and
mov
pop
and
xor
test
jmp
xchg
mov
mov
xchg
inc
inc
int
insl
xchg
jns
pop
test
inc
mov
aas
adc
into
xor
push
jne
stc
and
or
repnz
push
repnz
xor
xor
in
adc
lcall
adc
inc
ja
pushf
push
repnz
arpl
dec
test
mov
pop
into
adc
js
repnz
adc
es
mov
scas
loope
mov
cltd
jb
pop
and
mov
or
lea
add
xchg
push
out
outsb
mov
mov
push
mov
sub
call
sbb
xchg
sti
daa
xchg
mov
subb
sarb
mov
dec
fsubrs
test
mov
popf
mov
cli
inc
inc
ss
push
sub
inc
loope
je
mov
cs
xor
clc
pop
gs
xor
cmp
jle
jnp
aaa
mov
push
outsb
jb
fnsave
loopne
jmp
mov
fs
lret
push
or
inc
in
xor
xchg
cmp
jl
daa
push
jl
shl
cmp
jecxz
pop
stos
gs
push
imul
cli
dec
testb
adc
scas
or
push
rcr
adc
mov
cmp
dec
cmp
add
sbb
sbb
in
imul
mov
cmp
rorb
pop
clc
testb
test
cli
pop
mov
sbb
cmp
cmp
xchg
mov
push
add
rolb
lods
subl
jg
enter
ret
fldcw
cmpsb
cmpsb
jns
sbb
or
inc
push
popf
jns
notl
adc
test
sbb
stos
into
rorb
sbb
inc
add
jae
shl
sub
sub
pop
sti
je
mov
movsl
fwait
divl
push
pop
or
jnp
aam
in
jmp
clc
mull
inc
rcll
sub
mov
dec
ret
aaa
filds
add
sub
mov
jmp
out
inc
enter
mov
cli
xlat
push
in
scas
into
xor
scas
aad
sbb
movl
imull
pavgb
mov
scas
dec
outsl
mov
lahf
and
push
sub
sti
fdivrl
or
dec
mov
pop
adc
orl
and
fsubrs
or
or
push
inc
mov
scas
stos
and
adc
icebp
or
jae
fdivs
sub
push
ljmp
out
xor
fwait
mov
jl
sbb
jge
sbb
imulb
and
lock
jmp
sub
xchg
scas
shll
cli
repz
fsubrp
imul
leave
push
jnp
and
cmc
jne
push
cmpsb
lds
scas
sub
and
push
repnz
pop
out
aaa
cmpsl
mov
inc
inc
loope
pop
mov
sub
add
insb
dec
xchg
aas
scas
sar
pop
mov
jne
jg
fbstp
sub
testb
xor
push
sub
mov
cmp
leave
int
sti
xchg
sbb
pop
lods
aaa
dec
sarb
testl
andw
xlat
or
rolb
rcrl
in
jg
adc
sbb
stos
mov
enter
into
gs
hlt
add
dec
fstpt
push
out
andl
and
mov
cs
sbb
push
jp
pop
pop
fmull
pop
sbbb
out
xor
push
adc
pop
and
out
pop
sbb
fidivl
pop
push
out
sub
lods
push
and
lds
bound
inc
sbb
jnp
shll
daa
adc
shll
xchg
stc
push
xor
je
sub
aam
push
cmc
and
ja
and
fbld
cmp
inc
mov
dec
les
rorl
leave
test
or
test
xchg
out
in
push
andps
insb
mov
push
mov
pop
push
xlat
aas
push
and
int3
scas
sub
clc
nop
faddl
dec
mov
dec
gs
xchg
pop
ljmp
sbb
cwtl
push
rcll
jne
scas
cmp
addr16
adc
rorl
adc
jne
mov
loope
jb
jg
push
bswap
filds
lret
mov
jae
stos
dec
mov
sub
cld
pop
mov
mov
adc
mov
fistpll
into
jae
or
lea
lret
or
sub
add
adc
call
mov
scas
cmp
scas
cmp
xorl
lods
sbb
push
loopne
sub
jp
scas
xlat
stos
rcrb
lea
test
adc
punpckldq
jnp
dec
xor
push
sbb
aam
testb
insb
aaa
push
sub
movsb
rol
add
or
ss
into
sbb
pop
mov
xchg
rcl
pop
pushf
stos
subb
mov
mov
in
mov
adc
push
insl
loopne
adc
mov
mov
inc
popf
loopne
mov
and
xlat
cmp
adc
cmp
pusha
test
or
fucomi
jo
outsl
mov
or
ret
negl
jnp
ja
data16
jb
outsb
es
fwait
movsb
pop
pop
movsb
movsb
cmc
pop
jnp
mov
lds
sbb
out
jb
or
lret
push
loop
pop
mov
es
mov
jecxz
sbb
loope
inc
inc
fs
insb
pop
call
lcall
repnz
outsb
add
pop
dec
or
adc
mov
repnz
lahf
imul
mov
cmp
test
mov
pusha
aam
test
pcmpgtb
hlt
xchg
add
inc
add
test
mov
lahf
add
iret
jp
hlt
andb
lods
cltd
pop
cli
and
mov
mov
mov
adc
add
shrl
jb
rorl
inc
pop
pop
fwait
dec
loope
aad
lahf
jg
adc
lods
int3
or
cltd
pop
lea
jge
sub
mov
ret
or
xchg
jno
mov
pop
std
jp
sar
cld
outsl
cmp
imul
int
pushf
loop
jmp
dec
imul
mov
mov
and
pop
mov
mov
inc
xor
adc
xor
popf
dec
xor
jg
xchg
mov
cld
popa
sbb
in
sbb
loop
xor
dec
in
test
stos
cmp
dec
xchg
sub
xchg
shrl
mov
mov
ret
pop
stos
mov
lds
xchg
pop
sarb
cmp
mov
or
test
inc
jo
insb
rcll
inc
xchg
sub
sbb
sub
bnd
xchg
and
imul
in
loope
leave
loop
sbb
sub
jnp
xchg
cmp
cmp
movsl
adc
das
mov
and
push
sbbb
and
add
inc
inc
or
push
test
jb
adcb
fdivrl
fisttps
dec
pop
shll
shlb
cmp
mov
cmpsl
push
push
out
cmc
lret
push
or
cs
mov
sti
mov
cmp
sub
sti
xor
xchg
rclb
pop
or
clc
mov
mov
test
call
mov
shll
ja
cwtl
in
xor
ret
imul
inc
popa
pop
or
jle
sub
outsb
or
aaa
push
pop
xchg
test
and
xlat
hlt
inc
pop
xchg
sub
pushf
ficomps
mov
dec
dec
fs
and
int3
rcrb
icebp
mov
xlat
fnstsw
lods
xchg
enter
pop
adcb
inc
pop
shrl
dec
xchg
add
int3
iret
cmp
gs
and
pop
icebp
and
adc
xchg
loopne
les
test
rcr
push
scas
movsl
inc
shl
pusha
sbb
nop
nop
test
in
loop
sub
sbb
cmp
jg
mov
sub
std
push
jle
mov
js
mov
mov
in
xor
mov
aad
clc
aam
push
push
xor
lcall
pop
adc
xlat
cmp
insb
add
sub
repz
les
jge,pn
xchg
mov
jmp
sahf
mov
rorl
test
pop
inc
daa
divl
adcl
dec
adc
xchg
les
sub
push
pop
out
inc
xor
sbb
add
dec
mov
sub
imul
and
mov
jae
cmpsb
xor
sbb
mov
lret
mov
lods
popa
xor
lods
pusha
repz
push
xchg
add
imul
es
jp
stos
int
lret
dec
or
mov
xchg
mov
push
fildll
jnp
mov
pusha
push
push
push
insl
cmp
add
in
sub
and
mov
pop
xchg
fstps
dec
ja
cmp
dec
mov
fdivs
arpl
imul
iret
lcall
ja
or
jns
inc
dec
jg
test
mov
fsub
jmp
pop
xchg
push
cmp
push
lods
and
push
stc
or
push
mov
fwait
repnz
std
orl
add
xlat
pop
cld
push
out
subl
or
sub
mov
xchg
subl
lea
pop
xor
push
roll
dec
cwtl
sbb
xchg
jns
sahf
enter
mov
xchg
movsl
pusha
addr16
sbb
or
mov
in
mov
mov
ret
shll
sub
mov
mov
mov
push
mov
or
movsl
outsb
call
lock
add
mov
xlat
test
sbb
cmp
sub
mov
call
popf
pop
inc
sbb
loopne
test
dec
movsl
push
add
cmp
ret
cmpsl
jbe
and
xchg
ljmp
dec
and
in
cmpsb
sbb
in
iret
dec
dec
pop
insl
mov
pusha
jle
aad
loope
or
mov
sti
adcb
sbb
push
sub
cmp
adc
push
gs
mulb
xchg
hlt
dec
in
mov
pop
adc
addb
or
add
mov
pop
imul
cmp
je
test
jbe
adc
xor
adc
outsb
pop
out
xchg
dec
push
int3
ffreep
push
adc
push
cmpsl
sbb
maxps
aam
mov
mov
pop
push
sbb
jmp
ds
xor
sub
pop
cs
rclb
inc
int
ret
jl
scas
movsb
sub
sub
jmp
push
sbb
pcmpgtb
inc
dec
data16
wbinvd
jne
cmc
xchg
aaa
test
jb
shrb
mov
push
sbb
add
mov
neg
mulb
push
bound
gs
and
inc
mov
lret
jp
scas
fsub
cld
sbb
xchg
aaa
jmp
sub
imul
sbb
pop
sub
daa
pop
mov
scas
pushf
dec
sub
shll
or
adc
stc
test
push
je
lods
jnp
rclb
mov
xor
add
dec
rcr
jecxz
mov
pusha
sbb
sub
mov
mov
std
sub
std
ret
mov
jmp
inc
jecxz
or
iret
call
popf
add
shrb
push
jg
push
je
sbb
fisubl
mov
stos
xchg
jge
lret
jae
int
push
jno
inc
jno,pt
sar
out
cli
mov
mov
lock
out
inc
pop
jo
xchg
add
and
mov
fistl
and
sbb
or
xchg
cld
cmp
lret
ret
lcall
fdivrs
stos
sbb
adc
xor
or
sbb
pop
lcall
in
fcoml
addr16
xchg
mov
cs
mov
addr16
add
sub
test
sarl
pop
jge
pop
mov
jg
and
sub
repnz
dec
mov
gs
loop
int3
xchg
jno
push
int3
mov
cmpsl
xchg
jmp
push
cmc
leave
in
sub
add
cmpsl
mov
ret
add
dec
mov
xor
sahf
mov
adcl
out
lock
sbb
dec
mov
xorl
sub
stos
pop
add
mov
push
in
dec
pop
jmp
sbb
aaa
mov
inc
adc
mov
fildl
bnd
mov
sbb
cmp
je
cwtl
test
or
dec
repz
cli
inc
out
sbb
cs
xchg
stos
mulb
push
mov
mov
call
jne
shlb
dec
cld
adcb
ljmp
jns
outsl
jle
sub
sbb
dec
cltd
cmp
sub
xlat
xor
sbb
cwtl
add
mov
jp
test
xor
sbb
pop
and
push
push
add
test
aad
data16
shr
enter
lods
jle
dec
rorb
xchg
gs
test
jb
pop
add
push
inc
pop
xlat
or
sub
mov
jae
insl
gs
nop
xchg
out
stc
icebp
lock
test
cwtl
dec
rorl
push
push
adc
pop
cmp
push
int3
arpl
cmp
pop
data16
adc
pop
mov
js
sub
mov
sub
xor
adc
inc
cmpsb
and
xchg
inc
lret
scas
sahf
pop
scas
inc
jmp
vmread
jno
xchg
push
sbb
testb
sbb
pop
cmovge
sub
mov
push
xchg
pop
iret
rcll
insb
add
mov
and
pushf
and
bound
lds
jl,pt
pop
xor
xchg
cmc
test
pop
jge
stos
fcompl
or
cmp
sbb
ret
sub
and
movl
and
push
xor
jecxz
mov
mov
int
into
cmc
iret
jmp
adc
pop
das
ss
lea
xchg
sub
cmp
fwait
pop
sub
inc
movsl
insl
mov
cs
jp
orl
les
xchg
inc
mov
jae
test
ficomps
xor
push
dec
aaa
sub
pop
out
rclb
stos
push
dec
daa
jecxz
push
push
add
outsl
adc
jecxz
lods
cmp
dec
pop
push
repz
int
mov
push
jae
aas
push
leave
test
outsb
sub
mov
sahf
jb
jae
push
fcoms
outsb
pop
std
xor
aas
jle
mov
into
push
sub
push
adc
cltd
loope
insb
and
fbld
mov
jmp
inc
cmpsb
pop
adc
fsubs
jae
lods
enter
les
xor
xor
and
ficoms
dec
adc
xor
xchg
adcb
inc
pop
les
dec
inc
add
dec
jb
push
cs
rorb
scas
sbb
movb
cmp
leave
jb
sbbl
into
mov
jnp
rcr
sbb
xor
mov
sbb
mov
sub
aaa
push
cwtl
mov
leave
push
mov
movsl
add
xchg
mov
sub
aas
das
push
xor
cli
loop
and
jns
cmp
push
push
mov
pop
push
push
fs
fcoml
scas
fistpl
jb
pusha
jno
adc
rcr
rcrb
push
cli
sub
sahf
push
pop
sarl
test
fiadds
mov
sub
lret
test
pop
and
icebp
cld
test
pop
mov
sub
push
jge
test
cmpsb
or
sbb
outsl
filds
dec
jecxz
add
fstps
lods
pushf
mov
xchg
add
pop
sbb
pushl
xlat
test
insb
popa
nop
add
inc
outsb
jp
repnz
dec
dec
xchg
and
or
movsb
sub
out
push
pop
dec
out
adcb
bound
ja
stos
xor
mov
xchg
add
push
js
fistpl
adc
and
rolb
scas
orl
mov
das
insb
int3
pop
mov
in
sahf
xor
cmc
cwtl
jb
test
xor
and
dec
mov
add
scas
leave
fimuls
sub
pop
xor
dec
in
dec
jo
mov
lahf
or
ja
mov
ljmp
fldl
out
lock
hlt
pop
and
repz
cwtl
lock
mov
lods
add
mov
or
jae
lret
repnz
fs
and
das
and
cmp
mov
fnsave
je
mov
mov
vmread
inc
jg
test
test
adc
mov
aam
inc
lcall
es
or
out
shr
pop
out
scas
jb
out
inc
jno
mov
lahf
outsb
jg
ds
mov
sub
aam
jmp
xchg
cmpsl
lods
dec
stc
shlb
rolb
xchg
mov
flds
inc
lahf
or
push
scas
sar
xor
je
clc
test
xchg
mov
movsb
adc
jecxz
mov
cmpsl
push
xchg
jmp
sub
call
pop
in
or
adc
and
mov
push
xor
and
lret
loope
cmp
xchg
repz
test
pusha
nop
sub
test
out
jg
out
cmp
out
add
out
inc
jle
in
repz
das
mov
fisubl
pop
inc
daa
in
and
sbb
add
and
mov
pop
out
pop
fcmovnu
out
xor
ja
xor
jge
fcmove
test
hlt
loop
jg
cltd
or
into
test
jmp
das
sbb
mov
fwait
int3
shlb
lods
pop
sub
cmpsb
cmp
pop
rcl
das
rcll
jne
adc
lea
and
or
lds
pop
je
insb
mov
xchg
addl
in
adc
pop
or
push
dec
cs
xchg
loop
add
fistps
push
cmp
pop
and
or
inc
outsl
push
testl
scas
repz
rcrb
xchg
mov
pop
fwait
or
stc
aaa
sub
lods
sbb
ret
sbb
imul
lds
xchg
cwtl
push
pop
lods
mov
cltd
fidivl
out
mov
scas
dec
frstor
dec
push
sbb
ss
inc
adc
mov
int3
bound
add
pop
insb
push
and
in
sub
ljmp
in
push
mov
sub
xor
insl
cmp
mov
enter
imul
mov
xchg
dec
xor
xchg
jnp
rcrl
cmp
inc
cmp
cwtl
dec
mov
out
jnp
push
jmp
hlt
inc
xor
xor
mov
andl
jg
in
push
mov
push
sub
sahf
cld
out
in
cmp
push
fwait
or
inc
repnz
mov
mov
jg
dec
mov
inc
lahf
xchg
cmp
jp
sub
inc
call
jmp
cmpsb
push
out
sub
add
sub
push
jns
dec
pop
test
in
dec
push
je
sbb
and
cli
popf
jb
mov
mov
push
inc
jp
scas
push
shll
add
add
add
pop
scas
lods
lret
sbb
pop
cld
pop
aad
or
aas
cmpsl
push
xlat
pop
loopne
jno
pushf
mov
in
cld
pop
cmp
outsb
push
stos
or
xor
dec
add
mov
or
xchg
xor
lods
push
cmpsl
test
mov
aas
rcll
jecxz
gs
push
dec
pop
jno
xor
xchg
xor
rcll
fisubrs
jnp
xchg
pop
cld
or
inc
lods
cwtl
rcl
and
jmp
or
sbb
jl
sub
jp
jmp
mov
rclb
xor
mov
andb
bound
fcoms
repnz
icebp
inc
test
jge
cmp
jnp
mov
jne
in
aaa
mov
mov
pop
add
xchg
adc
cmp
add
test
mov
ficoml
mov
mov
push
lcall
jmp
jge
jb
dec
pop
out
sub
movsl
xor
sub
sbb
imulb
imul
sub
inc
inc
jo
mov
lock
sti
jle
or
out
enter
mov
add
stos
leave
in
dec
into
add
mov
arpl
js
negl
jno
mov
add
sub
stc
mov
sbb
jge
cmp
sub
or
rcl
fstpl
ret
ret
sti
sar
fsubrl
test
mov
and
and
insl
cwtl
pusha
lcall
pushf
mov
loopne
sub
outsl
xchg
pop
push
sbb
dec
mov
lods
ljmpw
xchg
aam
fdivr
das
jae
push
jmp
sbb
aas
mov
jmp
pusha
mov
cli
push
fs
jo
push
mov
mov
sub
xchg
cli
mov
stos
xor
imul
add
es
in
pop
es
push
xor
movsb
ljmp
push
into
mov
cmp
jge
push
in
xchg
jo
sub
mov
pop
pop
add
sub
adc
or
outsb
rolb
rdtsc
push
out
and
and
or
icebp
out
jl
and
fstpl
and
push
leave
cld
into
add
out
mov
bound
sub
dec
cmp
jmp
ss
push
enter
xchg
push
xchg
mov
xor
popl
jmp
xor
and
sub
ja
xor
fcompl
jmp
pavgb
mov
sbb
pop
pop
loopne
xlat
arpl
jp
xor
pop
cmp
loope
shlb
cmp
adc
fstpt
lcall
dec
add
xchg
aaa
jle
mov
push
mov
jp
movsl
subb
sub
push
lahf
lds
ljmp
fsubrp
aad
ss
adc
into
or
sub
jb
cmp
jno
mov
jne
js
movsb
or
and
imul
cld
sub
icebp
jne
and
adc
ret
clc
gs
xor
inc
ss
fwait
and
sarb
pop
cltd
inc
lret
mov
xchg
fs
inc
xor
push
pop
shl
adc
cli
rolb
int3
mov
in
sbb
inc
imull
mov
divb
dec
cmp
or
mov
adc
xor
mov
aaa
shll
sub
ljmp
mov
inc
repnz
mov
lods
lahf
cmp
push
push
shll
inc
std
bound
test
shll
sub
aam
outsl
cmp
aam
or
in
enter
testb
add
pop
lds
ja
jp
lahf
xchg
jo
imul
nop
imul
in
and
sub
xchg
xor
pop
cmp
push
imul
sub
sbb
cwtl
xchg
xchg
jg
add
inc
push
mov
movsl
xor
outsl
je
dec
pop
fdivr
pop
push
int
test
xchg
inc
jbe
lcall
inc
sub
bound
jp
cmp
enter
imul
das
lret
sarb
movsb
xchg
nop
notb
test
loop
ret
call
mov
xor
pop
push
mov
inc
sub
lahf
addr16
or
push
sbbl
jb
rcll
jno
neg
push
test
sbb
mov
sub
ljmp
push
data16
and
mov
inc
shlb
and
or
and
imul
int
mov
xor
lahf
mov
ljmp
and
xchg
cmpl
mov
inc
scas
cmp
pop
mov
call
lods
push
sbb
sub
int
cmc
add
in
sbb
jnp
pop
into
jge
movsl
sbb
dec
push
cmp
clc
orb
test
adc
fsub
push
mov
adc
jmp
bound
out
lds
xor
mov
mov
ds
push
sub
fstl
xor
jl
mov
jnp
fisubrs
pop
push
dec
or
in
pusha
sbb
sbb
dec
mov
cmp
cmp
ficomps
xchg
enter
pusha
inc
cld
mov
xor
mov
je
lods
adc
jle
xor
fwait
xchg
mov
mov
inc
mov
dec
cmc
sub
dec
out
cmp
rcll
or
mov
int3
daa
mov
shlb
fucom
xor
sbb
bnd
jle
add
stc
aam
in
notl
clc
in
loopne
sbb
loop
xchg
mov
dec
push
sbb
or
shlb
adc
test
dec
in
outsb
dec
dec
scas
cmp
xchg
sub
insb
sbb
jp
cmc
inc
decb
out
leave
and
add
iret
mov
out
repz
lcall
loope
adc
andl
repz
pop
divb
dec
sbb
jle
mov
or
test
fdivr
cld
jno
cmc
ret
icebp
inc
or
mov
dec
nop
test
mov
fstp
js
sbb
scas
xchg
sahf
data16
xor
dec
fs
jo
inc
pop
nop
or
dec
mov
xor
dec
jle
fsubs
or
gs
mov
js
lahf
sbb
divb
inc
inc
popa
push
sub
fcompl
loopne
push
fdivr
ret
testl
sahf
sbb
je
idivl
shl
pop
sub
mov
mov
test
sub
mov
mov
fcomip
push
jl
cmp
add
inc
mov
ud1
imulb
add
icebp
lods
lock
push
or
adc
xchg
pop
in
ss
icebp
insb
push
jecxz
pop
out
in
jns
sub
outsb
dec
xchg
pop
dec
xor
add
lods
sbbb
mov
aad
mov
rcll
les
inc
inc
fildl
xor
or
imulb
pop
mov
sbb
jae
adc
sbb
lock
cli
cli
pop
or
add
xlat
popa
popa
sbbl
xor
out
push
test
call
push
std
repz
sub
push
les
sub
sub
out
sbb
test
mov
or
jle
shlb
and
sti
sbb
das
inc
mov
mov
pop
inc
sub
mov
xchg
sub
jecxz
fstpl
iret
stos
jnp
mov
iret
testl
mov
rcll
scas
insl
cs
push
dec
add
outsl
push
setp
adc
daa
pop
cmpsl
imul
movsl
int
mov
cmp
sbb
sub
mov
inc
imul
xchg
insl
mov
bound
push
jno
sub
je
inc
test
lret
dec
jns
je
jne
repnz
clc
shlb
dec
es
mov
push
test
xor
or
sub
push
cmpsb
mov
pop
mov
mov
sub
mov
dec
lahf
imul
mov
sub
jb
daa
xchg
push
inc
cmp
out
sub
mov
adc
jbe
pop
add
add
mov
inc
fcomps
sbb
pop
push
out
and
xchg
lea
leave
jle
out
sub
xchg
repnz
jnp
mov
test
jge
lods
jge
lds
popa
loop
xor
fdivp
jmp
cmpsl
jp
push
ss
pop
jecxz
xchg
dec
mov
xchg
cmp
push
std
ss
lea
jbe
xlat
dec
pop
lods
imul
push
mov
inc
adc
sbb
fcmovne
pop
jecxz
ficoms
mov
and
aaa
das
inc
out
push
ficomps
incl
jp
mov
ficomps
out
pop
mov
jb
mov
or
jmp
add
out
inc
dec
mov
cmp
movsl
scas
fisubrl
dec
int3
gs
hlt
pop
lock
mov
jge
xchg
enter
cmpsl
scas
or
inc
mov
test
jbe
jne
in
mov
fcmovne
fnsave
test
jge
or
fcomi
es
cwtl
pop
stos
push
and
cltd
inc
fbstp
leave
movsb
jo
adc
mov
push
je
ds
popf
imul
rorl
sahf
add
popl
rolb
arpl
mov
sbb
lahf
and
lds
sbb
jne
scas
stos
push
jae
mov
xchg
mov
mov
clc
stos
pop
mov
cwtl
fdiv
aam
or
iret
testl
dec
pop
sbb
or
sub
lcall
pop
xchg
rolb
ret
lcall
std
mov
add
loope
mov
ds
in
mov
pop
inc
pop
xchg
out
sbb
jle
scas
jge
pop
test
mov
cs
mov
add
sbb
dec
scas
sbb
subl
sub
mov
and
cmp
movups
jbe
fxam
push
adc
neg
xor
cmpsl
int3
jle
jle
ljmp
and
xor
and
test
je
lea
sub
adc
mov
inc
inc
outsl
dec
pop
frstor
lret
aam
insb
inc
ds
mov
inc
jbe
lods
cwtl
jae
lds
add
movq
lret
fcmovnb
xchg
popa
leave
jae
jg
or
xor
mov
scas
andb
push
ret
popa
out
and
rorl
pop
loope
fmuls
sbb
inc
add
loopne
or
jno
and
xor
push
mov
push
add
mov
in
fisttpl
repz
pop
xlat
jge
arpl
sbb
sub
stos
testl
fimull
lahf
and
insl
adc
lcall
mov
into
cmp
std
inc
adcl
jns
xchg
fcomps
jno
cmp
jl
mov
push
scas
cltd
and
es
xchg
mov
cmp
sub
push
insl
cltd
popa
inc
push
adc
lcall
icebp
mov
insl
movsb
in
mov
scas
pop
addl
daa
enter
nop
sub
mov
movsl
xor
loopne
jno
rcl
outsl
xchg
cmc
into
jle
push
pusha
inc
fisttpll
iret
push
jbe
jo
shrl
rclb
nop
pop
stos
lahf
or
add
xchg
mov
ss
hlt
in
outsb
mov
lcall
jecxz
or
and
fidivl
xchg
and
and
fisttpl
subl
stc
lods
pop
adc
lret
cmp
dec
add
addl
sbb
jae
setle
adc
in
movsl
sbb
out
and
cmp
sub
sub
push
cmp
sarb
subl
nop
cmp
add
xchg
fdivl
cwtl
out
int3
outsb
lcall
in
cmpsb
outsb
mov
add
add
push
push
cmp
in
mov
sub
dec
jno
rorl
arpl
rcrb
mov
cwtl
jns
clc
sub
cld
aad
test
mov
mov
push
and
fsubp
sub
scas
push
jp
mov
int
jo
jg
cmp
gs
negl
xchg
xchg
jae
ret
mov
push
mov
lret
aaa
cmpsl
test
cmp
inc
lock
dec
sbb
out
push
push
dec
pop
and
cmpsb
addl
jb
inc
dec
es
push
rorb
mov
pop
repnz
imul
jns
dec
push
push
pop
cli
push
insb
mov
js
hlt
outsl
pop
xchg
add
and
subl
stos
push
scas
addb
pop
xor
sahf
or
shl
push
push
add
inc
adc
lods
jle
add
pusha
movsl
push
jp
push
xor
aas
je
stc
cmp
dec
mov
jmp
ret
into
rcrl
lods
lods
in
mov
popf
push
sbb
cmp
nop
call
inc
inc
repnz
mov
lret
sub
pop
sub
lds
lahf
inc
jo
dec
shll
sub
mov
pushf
testb
sub
sbb
mov
imul
xchg
and
cmpsb
xchg
pushf
js
xorb
sbb
sub
imul
pop
test
fs
mov
pop
push
cwtl
inc
mov
fisubrl
xor
push
ljmp
mov
push
mov
sbbl
das
push
or
out
cmc
sti
outsb
lea
iret
mov
jns
cmp
cwtl
out
xchg
mov
xor
xchg
fdivp
shll
adc
and
int
inc
fdivs
sbb
mov
pmaxub
aad
popf
lahf
sahf
shrl
dec
in
dec
or
mov
roll
daa
je
ss
inc
xchg
lahf
mov
imul
pop
fwait
sbb
lcall
rorb
inc
mov
dec
call
iret
sub
pusha
addb
xlat
pop
inc
cld
daa
addr16
pop
inc
xchg
sub
push
test
leave
pop
pop
add
dec
and
add
clc
addb
ret
mov
pop
movsb
loop
cmp
and
aam
clc
mov
inc
adc
jo
and
push
mov
pop
std
das
pop
mov
in
arpl
clc
sti
ret
jnp
pop
push
adc
pop
mov
adc
xlat
mov
mov
push
inc
jne
xor
and
outsl
int3
push
jl
sbb
xchg
xor
push
sahf
adc
icebp
dec
ljmp
sub
stos
mov
insb
movsl
shlb
in
mov
fmull
sub
pop
push
loopne
gs
sbb
xor
inc
sub
push
xor
sbb
or
dec
cmp
mov
and
test
adc
incl
dec
pop
movsl
fsub
xchg
popf
dec
xchg
pop
mov
sahf
inc
call
inc
mov
cwtl
xor
push
pop
es
mov
mov
mov
aaa
out
call
iret
fcomip
cmpsl
popf
in
mov
ret
xor
jl
aam
mov
inc
inc
outsl
xor
jns
inc
adcl
pop
add
cmp
ret
nop
ret
or
loop
xchg
add
and
mov
add
xor
jecxz
pusha
fwait
sub
fxch
or
push
xor
hlt
loop
xchg
mov
pop
and
mov
sbbl
push
pop
mov
lret
dec
lds
adc
adc
adc
and
mov
aad
bound
mov
cmpsl
ret
dec
mov
xor
dec
push
adc
roll
scas
ret
sti
mov
imul
nop
aas
stos
nop
dec
push
pop
mov
out
cli
test
pushf
mov
sbb
cmc
pop
mov
ljmp
sbb
xchg
mov
push
je
jecxz
mov
pop
out
int
xor
stos
gs
adc
repnz
cwtl
out
pop
cmp
jmp
mov
mov
je
xor
jmp
shl
sub
shrb
pop
mov
fcmovbe
mov
mov
fs
stc
jno
inc
cmp
lock
jbe
iret
data16
in
add
das
hlt
andl
mov
pusha
subl
fidivrl
scas
mov
dec
mov
sub
add
ror
adc
sub
push
xor
cltd
scas
cmp
bound
out
xchg
jnp
repnz
jne
xor
out
xlat
test
out
add
les
xchg
cld
mov
ds
in
and
addl
push
aaa
arpl
int
jns
push
les
pop
sbb
mov
in
scas
in
into
pop
outsb
mov
in
ret
xor
mov
sbb
or
lcall
imul
pushf
xchg
andl
cli
out
xor
jo
and
lock
shl
mov
sti
cmp
pushf
sbb
jb
push
xor
inc
and
dec
popa
mov
repz
xor
mov
pop
adc
mov
jae
sti
or
sub
stc
loopne
xlat
jae
lea
xor
push
sub
in
mov
fistpll
icebp
mov
fisttpl
mov
jle
test
or
outsb
push
mov
testb
mov
ljmp
mov
inc
cmp
rcrb
repnz
xchg
push
sbb
stos
inc
idiv
cltd
stos
xchg
sbb
pop
ret
les
inc
or
xchg
js
js
in
push
inc
dec
jl
das
xor
sbb
adc
in
mov
ja
stc
ss
pop
pushf
in
jle
xor
stc
nop
cmp
inc
add
xchg
fildll
popf
aaa
cmp
push
jmp
or
inc
lods
xchg
call
fiadds
and
push
pop
xchg
push
leave
jb
mov
out
sti
push
negb
or
dec
sbb
ficompl
dec
test
push
fmulp
daa
ret
test
jp
shlb
and
mov
js
daa
in
sub
aam
or
push
cmp
jecxz
sbb
or
rolb
pop
push
dec
jno
jne
push
pop
dec
insl
cwtl
lcall
lret
mov
inc
xorl
and
jmp
and
inc
and
and
andb
lods
adc
or
ret
push
lret
pop
idivl
stos
out
call
cmp
cmp
es
dec
dec
and
pop
jle
mov
xchg
add
int
adc
aas
pop
mov
cmc
add
jnp
je
lcall
sbbb
xor
ret
inc
cmp
fldenv
arpl
mov
fsub
arpl
lds
jns
inc
test
and
sbb
neg
xchg
gs
sub
jbe
push
sub
inc
rcr
jb
push
or
out
outsb
aas
std
fdivs
dec
xchg
in
lock
es
shlb
pop
andl
test
icebp
mov
adc
aaa
mov
pop
push
cltd
pop
popf
xchg
jecxz
pushf
xor
mov
cmp
shlb
push
cmpb
push
and
test
sbb
inc
mov
dec
xchg
mov
or
sahf
push
ss
dec
ret
das
pop
add
cmpsb
fmuls
cmpsb
orb
or
cld
pop
popf
cmp
bsf
xchg
imul
call
movsl
cmp
jb
imul
jbe
add
aam
sbb
stos
adc
adc
fsubrl
mov
push
lods
jb
and
mov
in
cmp
sub
jp
cmpl
mov
lock
sbb
mov
mov
mov
inc
icebp
daa
out
lcall
and
gs
push
jo
lock
bound
push
push
and
sbb
jne
push
push
stos
dec
xchg
stos
lock
popf
push
adc
ret
mov
mov
or
daa
mov
test
sbb
mov
lods
sub
ja
xchg
jl
adc
jb
xchg
jge
popa
test
cmp
js
push
xchg
or
push
inc
scas
xchg
mov
int
adc
adc
mov
mov
fwait
inc
aaa
out
jp
mov
sbb
jnp
cltd
add
sub
insl
sbb
jecxz
mov
mov
mov
popf
neg
mov
aas
js
fwait
xchg
add
lahf
fs
cmpsl
adcl
fcmovu
ljmp
sub
lret
inc
mov
pop
nop
pushf
sbb
fldcw
shrb
jmp
dec
mov
mov
adc
std
dec
call
outsl
inc
daa
imul
sub
arpl
mov
mov
cmp
loopne
add
jo
lock
sub
xor
add
scas
push
dec
mov
aaa
gs
addr16
fldl
pushf
std
or
lods
lea
inc
and
nop
repz
add
pop
mov
scas
lret
mov
cmp
loope
insl
jg
out
cmp
and
test
dec
dec
adc
lods
push
mov
mov
push
out
and
jns
ficoms
pop
cmp
pop
movsb
xchg
or
scas
insb
pop
test
lods
out
sub
ljmp
fisttps
xor
xchg
xor
push
insb
mov
faddl
movsl
push
fcom
pop
insb
inc
aam
dec
outsl
icebp
js
mov
fwait
and
imul
std
lret
inc
push
stc
lock
pop
xchg
shld
add
inc
mov
out
push
or
call
sbb
xor
jno
push
hlt
arpl
outsb
adc
push
inc
adc
mov
or
lock
mov
jo
repz
and
fdivrl
pop
cwtl
jns
push
shrb
cmp
addr16
or
sti
xchg
push
xor
shrl
sbb
js
inc
gs
inc
inc
fcomip
int3
divl
inc
test
cmpsl
xchg
dec
fisubrl
push
lds
dec
lea
in
inc
adc
cmp
xlat
xor
adcb
es
mov
loop
cli
adc
fiadds
fdivs
xor
sti
orb
nop
sbb
mov
push
call
and
push
xchg
out
lret
scas
das
outsl
lahf
xchg
sub
lahf
jmp
xchg
xorb
mov
mov
or
repz
xor
jl
jge
cmp
mov
stos
in
mov
sbb
mov
xor
mov
sub
std
lods
shrl
sub
mov
cmp
outsl
push
adc
data16
adc
cltd
fcmovbe
icebp
jbe
cltd
adc
test
sub
and
scas
dec
add
dec
mov
inc
jg
outsb
iret
arpl
inc
cmp
shll
jae
inc
sub
js
lcall
pop
xchg
push
or
sbb
cltd
aam
data16
xor
inc
xor
fstp
cmp
lret
push
scas
sbb
jmp
ds
adc
and
mov
data16
daa
js
mov
xor
cmpsl
pop
xor
aas
das
in
mov
xor
out
mov
cmp
incl
inc
or
loope
in
inc
pop
imul
cmp
mov
sbb
or
data16
les
jle
in
fildl
and
ja
gs
add
push
sub
sbb
xor
pop
in
decb
shll
sbb
cltd
cs
iret
adc
cmp
or
cmpb
mov
mov
or
cs
js
pop
jg
sbb
mov
adc
aas
cmp
dec
mulb
mov
xor
mov
rclb
and
mov
cmp
mov
push
imul
xchg
mov
mov
push
pop
mov
fs
cmp
jg
add
pop
daa
mov
lret
popl
push
cmpsl
adc
iret
cs
daa
cmc
xor
nop
pop
cmp
aas
push
jl
fdivrs
jb
push
add
xor
cmpsb
es
lret
scas
mov
and
mov
inc
pusha
imul
push
adc
loopne
and
jg
insl
xchg
push
int
cmpsl
into
jg
adc
jb
bound
iret
mov
cwtl
inc
lea
xchg
icebp
std
dec
xor
cmp
mov
jns
add
push
enter
mov
mov
outsb
int3
mov
or
sub
mov
aam
or
mov
out
xchg
icebp
jle
jl
mov
addl
divb
mov
pop
fwait
push
mov
ret
dec
jb
xchg
add
sbb
sti
jmp
mov
xor
test
clc
cmp
movsl
cmp
arpl
adc
icebp
call
aam
insl
adc
mov
and
mov
out
test
movsb
sub
dec
push
das
jp
sub
cmp
sti
mov
lret
pop
push
adc
lock
push
leave
fidivrl
mov
mov
lcall
aam
loope
pop
sbb
pop
jbe
mov
dec
sar
dec
repz
lcall
lcall
shlb
inc
mov
xchg
inc
roll
cli
aam
xor
jnp
push
addr16
addb
fistpl
cmpsb
jne
mov
faddl
out
pop
ja
les
adc
and
fstpt
sub
sti
arpl
add
jno
and
dec
mov
lret
outsl
repz
loop
setl
in
jg
push
jg
popf
loope
push
lea
dec
mov
ljmp
cltd
gs
call
mov
outsl
notl
clc
mov
cmc
stos
repz
aaa
sti
cmp
and
es
shlb
add
dec
aad
inc
jns
int
pop
mov
dec
push
mov
lea
testl
hlt
xor
sbb
stos
xchg
clc
push
push
adc
lcall
test
add
into
inc
incb
sbb
negb
adc
push
idivl
adc
pop
cmp
sbb
mov
ror
iret
imul
ret
pop
jp
or
mov
mov
dec
outsb
jne
ja
lret
fdivs
cmpsl
adc
mov
mov
jmp
xchg
jb
adc
dec
dec
mov
push
cmp
insb
fwait
sub
sub
cmp
imul
inc
jns
mov
and
add
adc
shll
lds
cwtl
shl
jp
out
xchg
add
ja
out
notb
leave
sub
gs
jo
stc
dec
and
std
adc
mov
mov
dec
es
xchg
or
lods
mov
dec
jnp
lret
jmp
cwtl
mov
or
iret
movsb
xchg
push
imul
stos
jge
jnp
adc
mov
pop
xchg
jnp
push
fsubrs
ljmp
sbb
mov
test
rcl
mov
mov
jmp
lock
add
pusha
outsb
test
stc
and
sti
rorb
into
test
and
das
push
lret
rorl
sbb
icebp
or
pop
or
adc
pop
pop
inc
mov
xchg
pop
sbb
cli
pop
sbb
es
xchg
jge
scas
add
pop
cmp
mov
jne
data16
sbb
fs
add
sbb
mov
and
adc
or
lock
stos
xor
pop
jecxz
fimull
cmp
and
cmp
xchg
pop
les
push
push
cltd
orl
dec
xor
arpl
lret
into
push
mov
call
cmp
jne
mov
jp
mov
pusha
push
int3
jecxz
ficoml
push
or
push
scas
addb
mov
sub
popa
int3
push
scas
scas
mov
cmp
mov
pushl
jno
arpl
movsl
dec
mov
sub
sub
jecxz
push
addb
jo
pop
dec
adc
sbb
enter
push
addr16
fmuls
dec
inc
or
les
xchg
mov
push
sbb
jnp
lret
adc
jg
rcrl
movb
mov
pop
sbb
imul
xchg
frstor
sbb
or
jae
adc
test
adc
or
sbb
dec
stc
inc
xchg
sub
cmp
adc
push
adc
int3
shll
cld
mov
pushf
push
add
lcall
cmp
test
icebp
jecxz
ljmp
lds
push
ret
xchg
add
mov
or
mov
mov
pop
pmullw
test
xchg
pop
loope
je
aad
fisttpl
inc
fisubs
push
js
stos
jno
or
pop
clc
lret
pop
dec
pop
in
fcmovnbe
xor
jmp
js
inc
lret
add
and
pop
xchg
jge
pop
add
fdivl
idivb
je
jb,pn
mov
nop
sub
dec
mov
push
cmp
xchg
cmpsl
adc
dec
js
jnp
xchg
mul
mov
pop
cwtl
test
pop
movsl
cmovle
sub
add
and
or
mov
xor
push
add
call
mov
xchg
test
xchg
dec
fmuls
jns
les
jle
inc
push
ret
inc
push
ret
pextrw
or
inc
mov
cwtl
inc
push
fimuls
test
cld
aaa
dec
dec
add
ljmp
push
adc
sub
mov
fwait
xor
jb
cld
aad
in
push
xor
xchg
xor
daa
shrb
ret
loopne
mov
mov
adc
push
pop
mov
and
xchg
mov
xor
lods
out
pop
dec
popf
dec
adc
cmp
mov
roll
push
push
mov
cltd
pop
mov
mov
xor
and
xor
imul
jbe
fistpl
mov
dec
dec
in
in
stos
adc
in
in
sti
out
cmp
adc
xorb
test
add
adc
sbb
pop
inc
adc
dec
jae
fnsave
add
cmpb
nop
mov
data16
cli
sbb
shll
jo
repz
outsb
sub
mov
jns
sub
repnz
mov
and
dec
mov
out
cmpsl
loop
sbb
sbb
mov
pop
das
cmp
inc
inc
xlat
and
dec
jbe
sub
cmpsb
aaa
add
adcl
or
mov
flds
or
out
xor
xchg
mov
idivb
das
sarb
rcrl
xor
mov
aam
fndisi(8087
add
fsub
inc
scas
adc
fsubp
mov
and
aaa
cmpsb
ds
je
shlb
hlt
pop
push
fnsave
mov
test
mov
xchg
lcall
pop
repz
insl
sbb
sub
push
outsb
dec
in
add
in
cmpsb
mov
fists
loopne,pn
or
xchg
pop
cmpsb
ja
adc
add
shll
cli
mov
sub
adc
ljmp
lret
add
je
pop
and
hlt
out
into
icebp
inc
or
enter
dec
sub
stc
push
jg
jg
cmp
aas
repnz
or
ds
cli
xchg
fs
data16
repz
sub
in
loopne
push
cmpsb
lods
cmp
sub
enter
jne
lods
push
sbb
das
push
sbb
cmpsb
xchg
mov
popf
xorb
mov
daa
movsb
push
jnp
and
xchg
lret
aas
lahf
icebp
jae
jmp
mov
mov
pop
iret
push
jb
or
and
xchg
cmpsl
ljmp
push
push
test
pop
cmpsl
fdivp
jp
add
fdivrs
ret
xor
int
mov
jae
sbb
mov
test
xchg
aad
divl
xchg
adc
dec
popa
shlb
sub
inc
pop
add
push
fidivl
shll
jnp
pop
fdivs
xchg
popa
lock
mov
pop
adc
push
ret
pop
jb
jo
cmpl
stos
sbb
add
jbe
test
sti
mov
pop
cmp
sbb
add
pop
cmpsl
adc
imul
cmp
add
bnd
test
notb
fwait
in
outsb
or
add
int
mov
stos
das
icebp
pop
and
sbb
mov
paddq
je
xchg
push
jmp
xor
fidivl
inc
xchg
cmp
jecxz
imul
pop
rcr
mov
repnz
cmp
sar
aas
xchg
cwtl
or
pop
jmp
inc
jmp
repz
pop
aaa
outsb
pop
ja
dec
mov
add
in
mov
push
add
ss
mov
jb
mov
mov
mov
stc
mov
rcll
insl
mov
lea
in
xor
lcall
in
ret
inc
xor
inc
leave
aaa
cmp
loope
pop
icebp
int3
mov
xor
mov
inc
sbb
xchg
mov
stc
enter
fwait
lds
fisubs
cmc
nop
ffreep
jnp
jb
fsts
jo
lods
jne
pushf
stc
inc
lea
clc
add
sbb
nop
aad
cli
xor
xor
pusha
adc
sub
test
sub
andl
push
repz
sub
jmp
jo
and
mov
push
pop
mov
loop
xor
loop
lahf
jle
mov
mov
test
ljmp
and
add
push
shll
mov
mov
sbb
push
js
cmovnp
push
sti
fwait
stos
mov
push
mov
outsb
xor
mov
js
rorl
jbe
icebp
lahf
or
inc
pushl
aas
arpl
je
inc
xor
fidivl
aaa
cmp
ret
dec
es
mov
sub
mov
incl
mov
xchg
pop
cmp
sub
mov
mov
push
out
repz
or
xchg
out
test
push
daa
cmp
xorl
dec
cmp
sub
cmp
test
out
ficompl
xchg
inc
xchg
dec
std
ss
mov
mov
push
cli
pop
add
clc
or
jne
int3
add
mov
and
decl
lret
cwtl
push
push
jmp
into
das
mov
in
repnz
scas
pop
mov
gs
xchg
push
add
insb
lds
add
push
push
es
mov
xchg
push
mov
scas
jmp
mov
xchg
rcr
sbb
fimull
add
inc
xor
daa
dec
and
sti
dec
inc
das
movsl
insl
jo
push
test
push
xchg
test
dec
xchg
divl
cli
or
inc
ja
inc
pushf
sub
mov
mov
sub
fcmovbe
mov
ljmp
das
pop
xchg
fstl
jp
sub
xor
adc
adc
shlb
aad
adc
lahf
xor
and
popa
jae
sub
loop
push
adc
push
sbb
lock
inc
and
fldenv
out
mov
test
xor
push
out
ja
xchg
cmp
filds
iret
mov
pop
inc
inc
adc
fldcw
addl
insl
aas
xor
cmp
addr16
xor
jne
das
mov
in
jg
or
fstps
sub
pop
aaa
push
mov
jg
jo
in
sbb
inc
cmpsb
ja
dec
loop
mov
ds
dec
cmp
add
test
cltd
jp
or
xor
mov
jmp
sti
loopne
mov
repnz
cmp
pop
sbb
lock
rclb
pop
dec
push
ret
inc
mov
mov
pop
inc
divb
call
aad
inc
or
add
dec
popf
sahf
out
sbb
cmp
mov
xor
add
add
xlat
or
jle
fdivrs
scas
shll
movsb
jle
popa
mov
repz
adc
fimull
iret
insb
ss
mov
jp
imul
arpl
dec
mov
mov
adc
loope
das
gs
push
js
jo
into
mov
aas
in
cmp
mov
icebp
aaa
inc
int
xorl
cmp
jae
fisttps
insl
lret
inc
sub
aad
mov
push
mov
add
outsl
cmp
popa
dec
mov
dec
cs
das
adc
jo
fsubrs
ficoms
push
push
xchg
shlb
jb
adc
add
inc
adc
imul
jmp
jge
mov
iret
out
push
and
sub
test
cli
jmp
insb
push
cmc
xor
pop
fwait
sahf
dec
shll
push
pop
lock
xchg
adc
inc
sbb
imul
idivb
std
jle
rcrb
fnstenv
dec
ja
xorb
int3
cmp
push
push
les
test
push
lds
jne
mov
call
cmpsb
rcrb
out
pop
push
cltd
add
mov
mov
sub
cmp
aaa
xchg
jp
xor
aam
cwtl
int
cmpsl
ror
xor
ret
fisubrs
nop
push
std
push
push
xchg
cs
dec
imul
cmpsl
cs
push
mov
bound
jle
jge
jecxz
in
in
loope
addr16
das
out
ss
sbb
test
adc
jge
jmp
and
imul
cmc
sbb
mov
pushf
push
outsb
fstl
inc
mov
mov
mov
and
xchg
xor
stos
xchg
xor
scas
test
nop
shrl
inc
xor
movsl
call
out
or
popa
mov
sbb
dec
push
add
pop
pop
jne
aas
lods
or
in
lahf
iret
imull
mov
pop
or
or
mull
adc
mov
scas
test
push
add
cld
movsb
test
pop
sub
sbb
inc
icebp
jmp
xchg
outsl
in
lock
js
js
clc
std
lea
bound
inc
mov
xchg
and
jb
clc
cmp
push
sbb
pop
out
dec
out
or
movsb
add
daa
mov
decl
or
leave
push
pop
inc
test
lret
cmp
mov
mov
jmp
enter
shll
pextrw
push
mov
push
inc
std
push
stos
out
aaa
pop
ss
mov
pop
rclb
or
jmp
push
shll
aaa
shlb
push
sbb
xor
in
scas
mov
insb
bnd
in
and
lcall
jle
push
and
mov
fdivl
rol
movl
mov
sbb
fwait
test
add
and
sbb
mov
addr16
xor
mov
clc
and
mov
jns
fwait
into
xchg
jl
in
push
pop
into
and
shll
sub
cltd
lcall
adc
push
cmpb
int
stc
scas
adc
test
mov
fcoml
fildl
lcall
mov
mov
xchg
push
insl
stos
movsb
pop
fistps
outsb
daa
fidivrl
adc
cmp
dec
imul
adc
out
aas
iret
xchg
sbb
das
and
mov
in
jns
pop
lods
cmp
cmp
outsb
stc
shl
cmp
loope
shrl
call
lret
adc
sub
adc
cmc
add
outsb
roll
mov
or
sahf
in
dec
in
lahf
xchg
adc
icebp
sbb
mov
pushf
inc
push
inc
cmp
xor
pop
clc
mov
xchg
sbb
jb
shl
addl
lock
sbb
test
insb
cld
fmul
mov
mov
lret
and
imul
or
ss
adc
add
aas
cmp
push
int
ljmp
aas
jne
addr16
inc
mov
stc
xor
cmpsl
andb
inc
test
xor
sub
add
imul
shr
push
cld
into
test
pop
ret
push
push
and
jae
push
adc
out
int
xchg
xchg
clc
push
out
adc
or
mov
js
outsl
daa
or
or
mov
test
push
push
inc
fidivl
lea
xchg
jo
mov
ucomiss
test
xor
lods
or
gs
xchg
ljmp
cmp
jbe
imul
lea
cmp
jnp
add
dec
jae
dec
and
les
sub
mov
pop
sub
popf
sbb
pop
sbbb
sbb
sti
push
mov
push
add
inc
sbb
mov
dec
jne
popf
xchg
cmc
pop
jbe
xor
xchg
ret
dec
inc
push
testl
cli
fidivrl
bound
or
lods
sub
inc
xchg
inc
xor
fimull
mov
xchg
subb
and
and
enter
in
push
push
inc
outsb
pop
repz
lahf
nop
loopne
adc
dec
jg
icebp
jecxz
test
je
imul
fisttpll
add
ret
add
lods
loop
and
in
inc
jmp
cmp
in
add
aaa
pop
xchg
cmp
xchg
std
add
sub
jp
scas
jecxz
dec
jb
mov
cld
pushf
rol
xchg
jle
subb
ud2
and
rcrl
mov
mov
sub
cmpsb
gs
or
scas
mov
fdivrp
sub
idiv
mov
inc
jl
mov
lcall
bound
xchg
xor
outsb
push
ror
mov
decl
jecxz
sbb
push
jb
divps
stos
sbb
mov
cmpsl
cmpsb
lahf
jl
adc
pop
or
jb
dec
bound
mov
push
nop
repz
test
add
xchg
pop
jo
pop
hlt
mov
popf
bound
and
lock
adc
cmp
jg
sbb
mov
xchg
fcmovb
icebp
mov
aas
cmp
in
mov
xor
shlb
sbb
adc
test
lret
out
imul
in
test
jmp
std
cmpsb
jle
pop
fisubrs
stos
mov
or
xlat
mov
jno
dec
daa
fisubrs
out
push
jno
in
inc
mov
out
xchg
ds
ficompl
pop
mov
ficoms
mov
pop
pusha
js
repz
fdivs
xchg
push
cs
cmpsb
sar
jb
mov
pushf
lods
mov
repz
cltd
out
std
iret
enter
loop
out
cwtl
pop
dec
insl
ss
or
call
stos
pop
int
mov
cmp
sarl
xor
jb
lea
mov
dec
out
fstps
addr16
les
mov
js
sbb
fcoml
ljmp
inc
mov
push
roll
mov
hlt
jg
fcomps
fbld
add
cmp
lcall
insb
push
xor
imul
rcr
dec
dec
pop
fidivs
and
mov
test
movsl
xchg
lahf
in
lods
enter
dec
add
aas
mov
pop
cmp
cwtl
sahf
inc
or
movsl
imul
push
les
inc
shl
or
fsubrl
lods
jae
subl
xchg
sub
shrl
dec
and
sub
out
sbb
dec
or
imul
les
pop
int3
into
imul
mov
out
fiadds
jnp
xchg
testl
xor
xor
xor
or
mov
addl
cmpsb
aad
lret
add
mov
scas
dec
mov
into
adc
mov
scas
push
dec
cmp
jg
mov
in
pop
pop
jg
lods
stos
or
mov
packuswb
imul
shll
outsl
sbb
inc
lret
jbe
fcmovb
int3
push
cltd
subb
cmpsb
jns
push
sbbb
sub
aad
pop
mov
xchg
rcll
mov
jg
add
arpl
hlt
daa
repz
mov
div
and
adc
es
and
jmp
adc
dec
jmp
aad
enter
jb
and
push
int3
adcb
xchg
testb
push
fs
add
sub
inc
outsb
int3
aam
loopne
add
jae
in
lds
push
aam
push
test
popf
pop
enter
aas
cmp
or
ljmp
or
aas
fsubp
mov
mov
int3
shrl
pop
mov
fbstp
xor
add
gs
jle
adc
aas
pusha
inc
inc
popf
es
jno
pop
lock
jo
movsl
mov
arpl
xor
ret
ljmp
push
ljmp
cs
xchg
ret
shll
clc
fmull
pop
imul
cmpl
arpl
hlt
ficomps
pop
add
mov
shrl
rol
push
mov
repz
jae
and
pop
mov
inc
mov
add
outsb
mov
repnz
aaa
int3
repz
xchg
and
aam
sub
mov
dec
xor
cmc
jg
cltd
repz
mov
lock
push
mov
js
xchg
cwtl
popa
aad
jmp
fnstsw
and
int
jmp
sbb
jp
sbb
dec
je
pushf
sbb
sbb
add
mov
ret
pop
mov
mov
mov
jg
xchg
adc
clc
xchg
and
loope
xchg
cmp
scas
fstpt
add
pop
sbb
outsb
push
out
into
les
int3
cli
adc
inc
pop
mov
leave
cmp
xor
push
add
arpl
mov
xchg
mov
mov
inc
pop
leave
pop
test
mov
sub
and
gs
aas
lock
dec
test
dec
or
inc
cmc
out
pop
adc
fmull
les
mov
das
loop
and
inc
xor
jns
adc
fsub
ja
mov
into
outsb
jb
iret
push
xor
imul
lret
sbb
pop
addr16
std
jne
orl
add
cmpsb
adc
outsb
inc
adc
ret
arpl
cmp
test
test
push
xchg
mov
in
xor
sbb
cltd
inc
mov
cmpb
pop
mov
or
jb
rcr
cmpb
or
pop
xor
adc
jecxz
add
sub
xchg
or
test
mov
push
mov
popf
xchg
loope
add
movsl
jg
mov
imul
orb
xchg
sub
dec
jl
dec
mov
jns
jnp
and
add
inc
fsubrl
cmp
aad
divl
mov
sar
cwtl
ret
sub
xchg
xchg
and
sub
repz
popf
adc
inc
pop
xor
mov
repnz
insb
push
mov
lock
adc
push
je
push
or
pop
fidivrs
cmpb
mov
pop
mov
jns
ret
pop
mov
sbb
daa
xor
cmpb
inc
adc
out
movsb
push
ret
cld
jl
xor
cmp
add
dec
adc
insb
in
dec
in
movsb
das
lcall
lock
push
dec
xchg
out
mov
sbb
insl
inc
add
dec
sbbb
or
lock
in
in
sar
jno
inc
fimuls
and
mov
inc
iret
in
or
fs
mov
test
add
and
jmp
fisttpl
sahf
add
imul
xchg
mov
pop
mov
loop
test
int3
dec
loopne
sub
dec
cmp
sub
sub
adc
cs
push
sub
push
js
sub
mov
aam
sbb
jb
movsb
xchg
fwait
sub
cs
adc
mov
bound
lea
xor
out
cmpsb
push
ror
pop
mov
aas
subb
jne
aas
lea
fstpl
shl
out
imul
push
je
pushf
call
lret
mov
sbb
arpl
mov
dec
add
pop
iret
mov
aad
lock
fs
sbb
mov
pushl
roll
xlat
leave
ret
ret
popa
jmp
stos
push
test
lcall
mov
adc
jle
fwait
mov
jo
pushf
mov
ja
cli
pop
test
mov
or
pop
mov
xor
movsb
adc
sarl
out
out
add
fildl
xor
ret
and
hlt
imul
arpl
pop
mov
pusha
lods
push
daa
lods
aaa
and
sar
imul
cmpsl
fdivrl
dec
imul
loopne
inc
stos
sbb
mov
nop
xor
mov
neg
iret
mov
cmc
mov
ljmp
fs
mov
push
aad
jne
loop
mov
mov
test
lock
xchg
clc
lret
into
xchg
xchg
clc
add
scas
aam
scas
out
inc
cmp
mov
jo
sti
or
inc
adc
add
cwtl
mov
clc
das
rclb
cld
cltd
rep
mov
inc
mov
ljmp
pop
inc
movsl
push
lock
inc
imul
incb
aaa
in
ja
sbb
mov
repnz
push
and
xchg
cmpsb
jecxz
push
pop
sub
jnp,pn
lds
sti
out
xchg
mov
cmp
dec
pop
inc
mov
jmp
repnz
fwait
out
mov
inc
push
cmp
or
out
jg
jle
sub
pusha
adc
out
lock
in
ds
out
inc
cmp
mov
mov
mov
mov
sbb
jb
icebp
lret
push
and
cmpsl
fdivs
sti
mov
and
push
dec
or
frstor
out
and
int
push
fstps
shlb
or
xor
dec
xchg
cwtl
loope
jbe
call
repz
vpshuflw
repz
fdivrp
rol
or
adc
mov
mov
jb
je
clc
aaa
icebp
arpl
pop
pop
imul
insb
pusha
adc
js
imull
outsl
out
or
incb
sahf
xor
mov
jnp
mov
push
je
jg
dec
jecxz
es
or
adc
add
or
adc
add
pop
add
scas
sub
fucom
pop
sarb
scas
sub
push
mov
rorl
dec
inc
testb
ret
xchg
cs
mov
xlat
loop
jmp
hlt
test
repnz
rclb
loope
push
pop
xchg
mov
mov
mov
cwtl
aad
inc
add
push
xor
aas
and
xor
dec
add
xchg
lret
inc
shll
sbb
push
ja
stc
jecxz
push
mov
or
mov
cmp
fidivs
movsb
pop
inc
ds
rclb
push
cs
jb
nop
push
jnp
cwtl
adc
insl
cld
adc
icebp
mov
pop
out
xlat
sbb
mov
sub
outsl
daa
inc
lock
popf
and
mov
inc
mov
xchg
cltd
pushf
int
sub
inc
lret
ret
sub
and
int3
dec
and
jns
inc
iret
mov
mov
inc
push
icebp
push
or
bound
pop
pushf
test
cld
stc
lock
pushf
xlat
push
jae
outsl
jnp
and
push
cli
and
loope
or
rcrl
xchg
mov
push
in
sub
pop
jno
shrb
movsb
jle
cmp
add
sub
pop
pop
aas
stos
and
repnz
mov
pop
movsb
add
repnz
sub
inc
pushf
lcall
lods
dec
lahf
stc
in
dec
sbb
icebp
mov
aad
add
shll
insb
pop
cwtl
sbb
clc
pop
pop
addl
cmp
data16
cs
mov
les
mov
scas
add
lret
gs
cmpsb
lds
clc
lahf
sbb
cmp
xor
inc
cmp
mov
lock
call
jmp
ds
int
and
xor
jae
jp
int3
sbb
sub
adc
stos
sub
shlb
cmp
faddp
addb
nop
cwtl
push
sub
sti
mov
pop
pop
lret
js
out
or
sub
mov
mov
bound
add
ljmp
cli
sti
inc
mov
xor
mov
pushf
ds
fistps
outsb
enter
push
js
xlat
fisubl
fldenv
mov
aaa
xor
mov
hlt
sahf
sbb
lds
xchg
stos
jnp
addr16
add
mov
gs
cmp
lret
inc
mov
add
and
xadd
repnz
push
xchg
loopne
xchg
leave
cli
aas
movl
fsubrs
inc
negl
mov
adc
sub
insl
lds
mov
jb
inc
dec
sub
out
into
test
out
mov
pop
imul
adc
int3
imul
mov
xor
test
test
in
pop
das
push
mov
push
int3
imul
int3
roll
aas
mov
dec
dec
mov
jl
aad
dec
cmpsb
sbb
jb
cld
mov
jl,pn
sbb
arpl
sub
sbb
mov
add
dec
pop
mov
ret
aam
popa
mov
imul
pop
push
adc
pop
sbb
decb
adc
int3
lock
dec
ret
adc
or
xchg
and
adc
pop
out
adc
mov
xor
outsb
sub
jae
mov
lods
dec
int3
fidivl
mov
divl
sbb
and
fistpl
jbe
mov
jne
mov
and
sbb
test
push
cmpsl
inc
push
aaa
push
mulb
push
mov
fcompl
xchg
icebp
mov
dec
imul
sub
mov
mov
test
cs
pop
jmp
inc
inc
sub
xchg
cmpsb
imul
mov
movsl
or
push
inc
and
fistpl
jmp
or
test
int
sbb
ja
shrl
fcomps
adc
sbbw
cld
dec
das
das
sub
xor
xor
es
inc
mov
pushaw
lahf
inc
leave
sahf
lods
dec
out
and
mov
add
insl
jmp
out
inc
sub
jecxz
dec
and
pop
mov
lods
in
cmp
stc
insb
pop
test
mov
mov
clc
jbe
mov
jl
enter
jg
mov
adc
mov
sub
lea
insb
sub
mov
jecxz
xchg
sbb
ja
cmp
addb
enter
leave
jns
sarl
cmp
jmp
lea
outsl
push
inc
mov
jo
es
jo
add
lods
and
mov
push
pop
jne
cmc
mov
cli
inc
jmp
dec
mov
iret
test
fisttps
sbb
sbb
jmpw
jg
in
aad
sub
or
push
test
std
or
pop
push
iret
mov
xlat
pop
jmp
xchg
mov
and
jo
pop
sbb
insb
rclb
rcl
bound
add
inc
fiadds
sbb
add
or
add
out
fwait
inc
pop
mov
incl
in
insb
cmp
inc
fcomps
adc
add
js
or
jp
add
mov
mov
ficomps
mov
or
dec
fisubs
repz
lret
adc
icebp
gs
jmp
xchg
out
and
lret
mov
stc
sub
cmp
add
insb
xor
rcrb
dec
cmpsb
mov
xor
loopne
aad
inc
movsb
jg
or
sbb
inc
jns
mov
test
add
sub
and
lcall
add
inc
inc
std
mov
scas
aad
add
mov
mov
or
add
out
or
pop
push
rorl
in
jae
call
stc
xor
mov
mov
push
lea
inc
repnz
and
push
enter
pop
xor
aaa
ja
pusha
fcoml
dec
cmpsl
mov
jle
jge
pop
lds
and
adc
sub
mov
aaa
test
int3
mov
mov
jns
jg
mov
and
and
pop
imul
pusha
imull
test
pop
ret
or
bound
xor
sahf
stc
cmc
mov
mov
movsl
dec
fs
add
add
gs
pop
icebp
add
out
add
adc
add
idiv
cmp
jo
and
aad
lods
inc
push
and
lods
repnz
int
dec
ret
inc
mov
xchg
fsubr
cli
in
pop
push
or
xor
pop
mov
cmp
jl
bsf
stos
jbe
adc
jmp
jecxz
inc
fs
mov
pop
aas
push
inc
jo
xor
mov
or
cmpsb
add
and
popa
pop
aad
cmp
ficomps
jns
inc
mov
test
out
mov
fcmovnb
xchg
jbe,pn
mov
add
aas
loope
adc
dec
and
add
mov
lcall
aaa
sub
xchg
lods
cmp
sub
insl
in
fxch
jl
cltd
dec
fmul
push
ds
pop
dec
inc
push
and
cltd
mov
and
inc
test
mov
cmp
inc
js
in
icebp
test
fwait
xchg
insl
fstpl
add
mov
sub
xrelease
ror
fisubs
aad
scas
xchg
sbb
lods
out
adc
stos
shr
inc
push
xchg
xor
sub
sahf
xor
push
fisttps
sbb
mov
lret
ss
mov
mov
mov
clc
popf
cwtl
scas
jecxz
fsubrs
cmp
sbb
jb
xor
lcall
sbb
mov
cld
dec
shl
addb
and
jl
imul
lret
cmp
rcrl
daa
scas
arpl
out
inc
scas
out
cmp
and
and
xchg
shll
pusha
out
pop
je
and
aam
push
jnp
call
pop
int3
repz
lcall
jae
jne
push
pop
js
stos
xchg
sub
rorl
jle
mov
cwtl
loope
or
test
xchg
xchg
cmpl
daa
cs
jnp
pop
add
fdivl
add
fidivrs
xchg
gs
int
sub
cmp
mov
loope
mov
and
inc
dec
push
not
stc
mov
dec
pop
xchg
pop
or
mov
push
push
mov
fwait
push
mov
xchg
and
push
out
mov
or
mov
and
cmp
xor
pop
cs
mov
add
and
jmp
outsb
jl
filds
add
sub
cs
imul
imul
or
sub
or
jle
jnp
pop
push
notb
mov
inc
lret
cmp
lods
push
fsubl
in
xchg
ljmp
shll
push
pop
xor
nop
fidivs
ffreep
xor
mov
xchg
adc
sub
mov
xchg
mov
test
adc
nop
nop
divb
push
cmp
imul
and
jb
dec
cmpl
cmp
pop
gs
dec
cmp
jp
cmpsb
inc
cmp
test
sysenter
or
nop
jge
cld
adc
push
sarb
jbe
pop
sbb
insl
arpl
inc
scas
cmp
cld
sbb
in
stc
add
fldt
xlat
xchg
jg
loope
pushf
jne
xchg
cs
lods
movsl
dec
cmp
ljmp
dec
inc
in
sbb
fsubp
mov
dec
and
or
and
idivb
cld
dec
int
jge
xchg
mov
popf
sub
push
pop
test
jbe
cli
icebp
and
adc
into
dec
jmp
lea
jb
dec
sbb
jb
push
pushf
jae
ret
gs
and
add
scas
pop
call
ror
mov
jl
icebp
sti
jnp
or
into
push
mov
xchg
cld
lcall
mov
push
sahf
fwait
cli
mov
ficoml
int
xor
std
push
rcrb
push
cwtl
mulb
fimuls
popa
and
add
mov
jmp
mov
call
and
cmp
hlt
or
jmp
push
xlat
outsb
rorb
xchg
mov
out
insb
in
and
adc
or
scas
pop
lods
xor
imul
pop
cmp
mov
mov
mov
and
std
es
add
icebp
fbstp
add
pop
push
push
ret
icebp
push
fwait
gs
mov
push
aaa
das
push
je
decl
sbb
mov
mov
cmp
icebp
sbb
test
ficompl
xchg
pop
add
jp
mov
out
clc
aas
mov
div
sahf
sahf
loope
xchg
pcmpeqd
push
popf
push
in
adc
repz
jge
lahf
rcrl
repz
cmp
shll
enter
rcl
sarb
roll
inc
push
cmp
daa
jae
les
dec
loop
and
roll
or
add
sahf
sub
fidivrs
cmpsl
or
xchg
std
dec
push
pop
into
inc
and
pusha
jnp
mov
scas
xorl
mov
cmp
call
pop
lods
cmp
call
sbb
test
int3
out
inc
mov
fcmovne
jbe
inc
stos
inc
xlat
cmpsb
push
stos
jle
test
xor
mov
outsb
movsb
out
stos
or
sti
aad
and
or
ds
mov
adc
push
out
fcom
dec
xchg
pushf
out
imul
mov
cmp
int3
mov
xchg
mov
repz
ss
mov
sub
idivb
inc
inc
cmpsl
mov
rorb
push
dec
lds
xlat
push
push
or
pop
add
hlt
pushf
test
popa
sbb
mov
out
or
jo
xchg
dec
ds
clc
sbb
inc
cmp
fs
pop
clc
jmp
dec
dec
in
mov
mov
std
xchg
pushf
inc
js
and
ffree
dec
sub
cmp
or
sti
xor
enter
add
inc
in
add
in
xor
push
fdivs
rolb
or
push
sahf
pop
pop
dec
pop
out
xchg
ljmp
jne
pop
jecxz
addr16
lock
pop
inc
jle
jge
inc
aam
orb
cmc
stc
js
in
cmp
nop
adc
push
rorb
mov
mov
std
es
jl
rclb
stc
cmp
mov
cmc
int
sar
jle
xlat
test
aad
nop
adc
cltd
dec
aam
cmpb
and
adc
push
mov
sub
out
cmpsb
je
fistl
imulb
add
call
loop
shlb
and
test
cmp
adc
fnsave
cmpsl
mov
pop
loopne
add
fmuls
jb
outsl
add
icebp
leave
add
pop
test
test
mov
test
xor
jmp
std
loope
mov
int
pop
jnp
inc
insl
sbb
popf
mov
daa
outsl
shll
mov
cmpsl
mov
flds
xor
xor
test
cli
push
xor
scas
popf
dec
lods
js
shrl
test
xor
adc
fnclex
mov
mov
push
jo
inc
pop
xlat
mov
int
cmp
ss
mov
cmp
popa
push
in
ljmp
xchg
mov
and
add
add
lcall
jb
dec
mov
out
xchg
and
into
dec
sbb
daa
test
or
fimull
xchg
mov
inc
and
test
ja
and
and
fsubs
cmp
sar
test
sbb
jmp
jnp
aad
pushf
push
add
sub
test
push
add
rcrb
outsl
dec
ret
pop
jecxz
cmp
and
mov
jmp
out
lret
aaa
mov
popf
push
mov
inc
data16
gs
fmulp
push
loope
inc
push
jb
mov
or
inc
xor
inc
xchg
push
mov
shlb
loop
push
adc
or
sahf
sub
pop
fiadds
mov
push
sti
jnp
mov
movb
push
mov
add
and
or
xchg
out
hlt
xchg
xlat
jg
mov
out
xor
pop
popf
pusha
test
jns
in
aam
and
popa
push
andl
movsl
daa
int3
inc
cmpl
mov
jmp
test
mov
lcall
into
mov
enter
xchg
xchg
repz
subl
and
mov
mov
int3
xor
int3
jg
mov
push
or
stc
push
sbb
sub
nop
add
mov
xor
sbb
insl
sbb
cmpsl
mov
cwtl
adc
cmp
es
mov
jecxz
fimuls
test
mov
xchg
outsb
cmc
je
fiaddl
movsl
pusha
outsl
popf
mov
push
int3
or
mov
push
iret
mov
mov
lods
or
out
mov
test
adc
mov
push
jecxz
ret
cmp
adcb
imul
test
outsb
jbe
arpl
xor
mov
lret
mov
js
adc
in
adc
xchg
cmpsl
aad
loop
gs
push
mov
in
pushf
int3
mov
hlt
jae
add
dec
iret
stos
mov
or
sub
int3
cs
pop
adc
loop
arpl
outsb
pop
lock
xor
stc
pop
rorl
idivb
or
push
cmp
mov
and
push
out
insl
xchg
cmp
stos
xor
pop
mov
and
adc
mov
aaa
out
sbb
repz
int
andb
adc
int3
sbb
mov
cmp
aad
xchg
test
scas
mov
xor
mov
hlt
lock
les
or
shl
and
cmp
and
cs
int
dec
or
aas
jmp
pop
aaa
stos
cli
dec
pop
dec
aaa
xor
add
inc
jns
icebp
add
xor
cwtl
sahf
jg
and
pop
sbb
mov
adc
cmp
lret
cmp
xor
sbb
gs
int3
andl
scas
mov
out
imul
test
mov
cld
pop
and
jb
lods
inc
sarl
xchg
jnp
add
cmp
cmp
nop
jg
aam
mov
push
shrl
pop
add
hlt
mov
xor
mov
stos
dec
in
lods
inc
stos
fstpt
push
fs
xchg
mov
ljmp
jp
mov
inc
mov
stos
test
sub
mov
pop
cmc
lahf
sub
ror
xor
mov
jns
repnz
jbe
aas
cmp
dec
bound
jb
xchg
stc
inc
lds
cmpsb
jne
lods
pop
aad
fnstcw
push
daa
jae
xchg
popa
push
repz
cmp
int3
jne
jge
ljmp
cltd
icebp
sbb
lods
cmp
aam
fucomi
or
repz
call
lock
aad
insb
sti
nop
pop
push
or
jle
push
dec
or
outsb
sub
xchg
inc
mov
xlat
sub
bound
xchg
jae
jg
lods
jo
or
xor
ds
lds
pop
fadds
rcrl
inc
je,pn
push
mov
incl
and
lods
and
cld
mov
mov
mov
lret
aad
xor
cmc
ljmp
push
push
or
lahf
rcrl
pushf
lea
xchg
test
push
test
sub
dec
adc
cmp
jo
into
icebp
outsb
pushf
jbe
inc
xchg
ss
or
sub
inc
or
sahf
mov
popa
or
roll
sbb
aam
xor
xorb
inc
test
xor
mov
xor
jb
xor
xorl
ljmp
cmc
lea
rcrl
rclb
fisubs
pop
add
pushf
test
mov
mov
loope
pop
cli
scas
push
cmp
xchg
jp
cmp
and
fwait
pop
addr16
mov
sbb
imul
aad
arpl
ljmp
mov
cld
cli
xchg
xlat
mov
adc
sahf
mov
out
pushf
daa
push
sbb
popf
mov
inc
mov
ja
in
sbbb
cmp
mov
shrb
ret
mov
lds
jo
mov
ret
insb
lret
lret
mov
aad
mov
adc
mov
fsts
call
fidivl
push
sub
cwtl
loop
cli
push
xor
pop
icebp
xor
test
insl
adc
out
shll
sbb
jg
mov
insl
lds
pop
dec
imul
inc
popa
movsb
ja
ljmp
int
pop
sub
movsl
pop
mov
lods
xor
xchg
cmpsl
fwait
and
add
mov
test
cmp
push
push
and
ret
pop
jns
shll
mov
mov
das
cmp
jp
inc
jne
aas
lcall
pop
fsubs
test
dec
sbb
jmp
and
bswap
out
je
out
push
jmp
out
es
cmp
movnti
inc
sbb
es
outsb
mov
jnp
inc
push
out
scas
add
adc
cmp
cmp
pop
loopne
push
cmc
lahf
or
jg
orl
sub
mov
cli
mov
jl,pt
pop
in
out
popf
push
cmp
cmp
repnz
cli
dec
in
test
aam
mov
dec
pop
les
ret
pop
dec
faddl
inc
fs
popf
std
inc
and
inc
jmp
adc
add
call
ficoml
cmp
inc
or
xor
sbb
out
xchg
sbb
adc
push
fists
xchg
rclb
mov
xor
inc
mov
or
push
cmp
add
sub
mov
ficoms
push
cmp
fbld
dec
lods
aad
mov
enter
xor
inc
sub
mov
lea
loope
loope
sub
inc
mov
or
add
cli
and
jb
imul
scas
xor
iret
aam
sub
test
into
pop
je
inc
lock
mov
out
pop
mov
scas
repnz
clc
gs
lods
jo
inc
cmp
lods
out
jle
mov
cli
xor
pop
fsubl
arpl
push
dec
sbb
mov
jbe
mov
faddl
adc
aas
pop
cmp
lods
hlt
pusha
push
pop
imul
xchg
bnd
or
mov
lcall
jp
mov
fimuls
scas
movsl
insl
loope
lret
loope
sub
fnstsw
pop
rcrb
sbb
jl
inc
dec
shlb
loope
mov
mov
xchg
pop
sub
stc
mov
or
mov
filds
jge
out
pop
jae
push
and
lret
sbb
notb
push
out
sbb
lock
pop
mov
cmp
jle
or
imul
add
pushf
mov
ss
sbb
pop
dec
add
int3
loop
jb
jmp
mov
imul
or
pop
and
or
lods
es
out
adc
xor
bound
sub
push
sbb
mov
or
xor
sub
leave
out
out
and
inc
loope
clc
hlt
cmpsl
cmp
jg
xorb
push
push
and
inc
bound
test
ds
ret
iret
sbb
out
mov
or
enter
jecxz
mov
mov
add
cmp
je
pop
iret
mov
gs
push
mov
movsl
rcl
cmp
les
push
lret
add
pusha
add
cwtl
jp
frstor
mov
lods
ljmpw
cmpsl
push
rorl
sbb
adc
inc
outsb
mov
mov
jo
and
xor
cmp
ret
shrb
adc
insb
push
adc
lock
add
rol
mov
xchg
loope
enter
lret
lds
adc
xor
lret
mov
mov
fsub
mov
std
push
in
outsb
mov
mov
rol
dec
sbb
cwtl
mov
out
add
lret
nop
and
or
push
or
cmp
sub
in
adc
insb
js
sub
xchg
cld
shl
push
div
aaa
dec
xor
das
mov
subps
push
adc
sti
xor
cmpsb
adc
or
and
in
lds
js
pop
mov
cltd
dec
leave
push
add
inc
push
aad
and
jne
stos
pop
popf
mov
pop
lea
mov
test
pop
mov
push
cld
push
cltd
push
int
and
xor
js
lods
jp
jle
scas
mov
popa
hlt
iret
pop
jne
fsts
stc
push
cli
xchg
neg
push
mov
pop
push
dec
jp
dec
movsl
insl
mov
cld
or
imul
fucom
mov
stc
jg
inc
and
adc
leave
loop
mov
ss
out
xor
test
iret
add
adc
sbb
mov
ja
cmp
testb
enter
stos
inc
test
sbbb
mov
shlb
stos
aaa
and
add
aaa
icebp
clc
mov
add
das
push
cmp
sbb
and
push
nop
push
inc
mov
aaa
insl
sbb
xor
cmp
ljmp
mov
inc
xor
out
adc
scas
test
mov
xchg
nop
push
xor
dec
stos
loope
inc
cmp
jb
push
adc
mov
clc
adc
inc
mov
ss
cmp
repz
and
mov
jmp
movsb
adc
dec
jmp
or
cli
pop
mov
je
dec
jnp
test
xchg
sbb
ljmp
dec
cwtl
pop
mov
or
mov
cmp
js
nop
imul
mov
jp
aad
adc
jl
lea
mov
scas
out
in
adcl
gs
cltd
jecxz
ret
push
adc
mov
push
xlat
adc
jo
jns
ficomps
aaa
inc
xchg
cmpsb
lods
mov
popl
sti
lods
int
cli
inc
push
stc
jo
and
sbbb
decl
mov
into
jmp
call
insb
push
in
add
mov
pop
inc
xlat
cmp
jle
add
fcoml
jge
xchg
pop
pop
sub
cmp
adc
sbb
and
adc
ss
or
aaa
mov
cmp
mov
fcomp
stc
jmp
xlat
sbb
xor
movsb
pusha
insl
mov
add
mov
mov
pop
mov
inc
popf
mov
ss
mov
icebp
subl
clc
testb
push
int
cli
xor
out
xor
and
and
lcall
push
fistl
xlat
iret
adc
add
test
adc
inc
push
sahf
test
shrl
leave
mov
mov
and
cmpsb
or
cmpsl
cmp
inc
insb
andl
jg
xor
xchg
and
cwtl
mov
rcrl
fiaddl
testl
int
xchg
popf
pop
jp
bound
cmp
mov
sub
mov
ret
push
inc
xchg
outsb
cmc
test
mov
xlat
ret
cmp
rep
arpl
pop
mov
sahf
rorl
test
call
dec
mov
ljmp
mov
movl
mov
in
mov
ljmp
js
adc
push
adc
lds
clc
jmp
and
aam
std
and
icebp
gs
pop
jno
adc
mov
dec
mov
adc
ficomps
mov
ret
sti
ss
push
int3
mov
push
out
inc
idiv
out
ljmp
xchg
iret
push
xchg
push
add
cmc
repnz
std
test
mov
rcll
data16
add
push
jecxz
mov
sub
dec
cmp
movsl
or
jno
mov
sub
das
mov
cmpl
fists
int
loopne
cmp
jle
in
pop
jecxz
sub
cmpsb
imul
xor
xchg
xchg
icebp
push
mov
sub
push
pop
popa
out
pop
dec
jbe,pn
inc
hlt
jo
mov
pop
pop
test
mov
jecxz
in
ja
cmp
push
xchg
loop
cld
or
scas
pop
sbb
xor
adcb
push
or
icebp
gs
jp
add
sub
jb
bound
jl
dec
jns
pop
out
mov
test
adc
ret
test
in
pop
loopne
jmp
add
rorl
mov
cmp
cmp
outsb
pushf
lahf
push
lcall
xor
inc
xchg
inc
sub
ja
pusha
cmpsl
call
mov
mov
mov
mov
aam
mov
fsubs
push
ret
mov
xor
adc
pop
push
xchg
scas
in
std
or
inc
fxch
ja
js
xlat
js
jge
add
scas
dec
lea
mov
sarl
int3
sub
inc
aad
push
loopne
into
call
sub
lods
sub
fistpl
imul
in
add
sub
data16
lahf
call
mov
popf
mov
fninit
pop
cwtl
mov
sub
aaa
push
push
xchg
fs
fildll
push
xchg
xchg
sbb
sar
push
neg
rclb
sahf
popf
je
push
mov
inc
xor
sbb
mull
sub
aas
sbb
xchg
mov
sbbl
mov
push
push
call
fwait
add
imull
dec
sbb
adc
adc
or
pushf
test
jge
xchg
ret
movsl
es
and
push
cmp
push
push
push
lods
fucomip
sub
pop
aam
inc
loop
insb
loopne
xchg
xchg
add
cmpb
sbb
sub
jecxz
in
ret
rcl
jnp
and
fdivl
in
push
jns
dec
lds
movsl
cwtl
pop
iret
icebp
xchg
out
jp
arpl
dec
mov
or
fsts
cmpsl
mov
in
sub
loope
mov
xor
test
xchg
lret
insl
ljmp
push
loope
inc
add
xor
inc
push
mov
rolb
mov
pop
aam
xor
sub
cmp
sbb
push
or
pop
ret
ss
sbb
xchg
out
adc
int3
arpl
push
or
mov
xchg
xorb
jp
lret
cmp
fists
imul
push
call
sbb
pop
frstor
test
xchg
dec
cld
icebp
ret
scas
push
adc
sbb
xor
jbe
fucomip
add
ja
ret
inc
repz
fldcw
mov
cmp
loop
pushf
xchg
ljmp
test
mov
xor
adc
jg
out
xor
iret
mov
adc
into
xor
lock
pmuludq
es
jl
push
pop
into
sbb
xor
xor
repz
adc
xchg
sti
or
jge
mov
ret
pop
cmpsb
or
pusha
pop
vmovss
xor
xor
xlat
dec
dec
cmp
stos
icebp
adc
fisubrs
cmpsl
lea
loopne
test
xchg
lods
ret
dec
push
xor
adc
adc
sbb
cmpsl
aad
test
xor
pop
sahf
push
into
data16
mov
mov
xchg
sbb
sub
mov
or
enter
sub
pusha
cs
mov
outsb
and
sti
shr
sti
jp
int
fldcw
add
scas
jb
je
jge
xchg
cmp
mov
push
jne
neg
fiadds
xchg
ja
xor
mov
dec
roll
cmp
sub
jg
cltd
cli
lea
pop
notl
ja
es
into
movl
pop
sti
mov
and
gs
inc
inc
scas
push
stos
or
cmpl
push
mov
aaa
mov
adc
fwait
into
pop
in
xchg
sbb
stos
sub
mov
ret
push
mov
ja
and
adc
dec
cmpsl
push
xchg
aas
and
jge
pusha
and
mov
mov
sbb
icebp
jg
repz
add
jl
mov
inc
ret
icebp
test
mov
cs
sahf
xor
mov
js
jge
lock
pop
jns
mov
fiaddl
xor
pop
inc
xlat
out
sbb
lahf
dec
push
push
gs
pop
mov
pop
sub
xor
or
or
add
cmp
pop
fidivrl
push
xor
adcl
pop
aam
iret
and
dec
rcll
adc
daa
outsb
xchg
pop
sub
inc
bound
xchg
cmc
xor
jle
lock
std
sarb
xor
enter
jae
minps
push
mov
jno
push
sub
and
add
pop
in
add
jg
loope
int3
xorl
ljmp
test
jle
mov
mov
jecxz
bound
mov
and
mov
cmp
sbb
cli
and
jg
lahf
mov
out
test
loope
jmp
iret
sbb
and
mov
mov
mov
in
lahf
popa
lcall
pop
int3
imul
leave
mov
test
scas
arpl
push
jb
sbb
and
lods
xchg
adc
ficoms
dec
and
jmp
pusha
and
subl
repnz
mov
mov
push
aaa
fistps
cmpb
stc
sub
jmp
outsl
add
push
stc
sbb
cmpsl
inc
in
fistpl
test
loopne
cltd
push
inc
dec
lods
xchg
mov
dec
hlt
hlt
mov
xlat
fldl
sbb
aaa
in
in
mov
mov
and
xchg
repnz
outsb
or
xor
sbb
sub
mov
shl
pop
mov
in
das
push
popa
mov
fldenv
pop
or
adc
sbb
sub
fwait
add
add
mov
jnp
or
push
es
mov
push
dec
mov
test
mov
add
mov
lret
xchg
into
sarl
adc
or
cmp
bound
mov
insb
or
fnsave
ret
std
xor
icebp
dec
and
in
dec
push
xchg
and
adc
jnp
xchg
aam
insb
fcomps
cs
ljmp
out
pop
jg
aaa
rcl
sbb
stc
xchg
cmp
int3
ret
push
add
sarl
in
int
xchg
xor
xor
push
lcall
jno
push
aam
movsl
scas
mov
xchg
sub
adc
outsl
cmp
adc
lcall
popa
push
in
or
mov
cmp
or
in
jmp
add
jg
addr16
pushf
jmp
incb
loope
stc
ds
subl
sti
fisubrl
std
xor
jns
xchg
std
push
xchg
cmc
mov
scas
xor
inc
sub
cmpsl
mov
xchg
mov
in
out
adc
jns
out
stos
inc
aas
popw
or
data16
add
inc
subl
fprem1
fdivr
pusha
xchg
cmpsb
inc
addb
xor
sub
mov
adc
jne
add
cmp
mov
push
repz
jne
adc
mov
out
push
cmpsl
test
sbb
es
movsb
out
idivb
nop
in
dec
push
mov
movsl
outsl
dec
sbb
add
dec
cwtl
stos
xchg
cmp
push
xchg
adc
mov
jb
leave
cmpsb
nop
add
push
push
subb
in
addb
ljmp
pushf
fs
cmpsb
xor
mov
lea
test
pop
loopne
mov
out
sbb
mov
lcall
jns
ds
jnp
mov
xchg
in
imull
push
filds
jno
mov
shll
mov
out
inc
add
mov
mov
mov
xchg
push
add
or
lock
in
loopne
sbb
adc
movsl
call
jo
pop
in
lods
dec
push
stc
iret
mov
mov
cmp
inc
mov
popa
push
rorb
daa
rcrl
movsb
mov
dec
js
insl
cs
mov
adc
mov
adc
push
loopne
gs
es
pop
shll
ret
icebp
fsubl
stc
cmp
popa
inc
je
ret
mov
loopne
jge
shrb
xchg
mov
add
ljmp
or
add
test
mov
aam
testb
popw
ret
clc
daa
in
sbb
sbb
pop
in
pop
addr16
or
sub
insb
cld
lods
rcl
jecxz
mov
inc
sbb
inc
xor
fs
stc
cmp
jmp
aad
mov
cltd
jbe
outsl
pusha
xlat
jge
fcompl
popa
movsl
xchg
dec
mov
shl
xchg
jg
das
jno
pop
test
popf
andb
or
in
jno
push
mov
inc
mov
jecxz
movsb
or
mov
jnp
iret
gs
pop
bound
inc
cmp
stos
cmp
loop
push
add
adc
js
mov
shrb
push
jge
movsb
and
jns
pushf
xor
bnd
adc
out
shrl
fyl2xp1
rolb
scas
mov
js
int3
push
pushf
frstor
jge
nop
xchg
cmp
fistpl
inc
or
loope
push
popf
into
lea
stc
mov
ljmp
addr16
std
loopne
push
int
pusha
xchg
fildl
inc
sbb
punpckldq
hlt
mov
insb
and
leave
sub
imul
imul
inc
cmp
inc
push
and
imull
xlat
loopne
shll
cmp
xchg
repz
add
jno
inc
mov
add
stc
data16
lret
jns
fildl
jmp
cwtl
scas
sub
insl
inc
sti
pop
sbb
lret
out
sub
movsb
fists
xchg
cld
das
hlt
stos
jbe
jno
std
sbb
cmp
xchg
loope
sbb
xlat
jno
push
cmp
popf
sbbl
gs
push
cmpsl
iret
mov
cmp
adc
dec
out
mov
inc
stos
push
sysexit
jl
aad
mov
xor
fs
jnp
imul
popf
xor
ret
xchg
jnp
loopne
mov
hlt
fimull
comiss
addr16
dec
lock
test
bswap
cmp
divb
xchg
sub
out
cmpl
in
and
jb
fstps
sbb
imul
pop
hlt
ja
das
sbb
sbbb
mov
enter
out
jns
loope
daa
inc
and
jl
pushf
mov
add
sbb
jge,pn
outsl
daa
shll
cmp
stos
cwtl
lcall
xchg
jne
or
push
mov
mov
jne
add
mov
imul
dec
stc
xor
adc
jb
dec
int
pop
mov
cld
cmpsl
mov
inc
test
mov
test
inc
fldl
lcall
outsb
lea
mov
bnd
lret
jle
xor
ror
notl
push
add
ret
adc
dec
fs
cltd
icebp
ljmp
xchg
lea
popa
sbb
sbbl
mov
adc
sti
aaa
push
sbb
rcll
out
in
dec
push
ss
aaa
std
ret
jl
xor
sub
xchg
xor
add
and
and
cld
dec
addr16
scas
in
loop
xor
push
lahf
mov
popa
stc
inc
sahf
push
arpl
cwtl
cmpsl
jbe
cmp
cmpsb
sub
pop
ucomiss
mov
push
outsb
dec
lcall
xor
imul
dec
cmc
loop
push
add
jl
or
inc
adc
aas
inc
adc
movsb
cli
xchg
xchg
repnz
mov
js
ficomps
call
mov
std
jns
stos
iret
stc
pop
in
cmc
sti
mov
adc
loopne
jbe
adc
adc
adc
lret
fstl
not
add
adc
nop
dec
mov
hlt
inc
mov
int
cli
outsl
mov
xor
shrb
sub
inc
ret
xchg
hlt
fwait
mov
cs
sahf
sub
cmc
sbb
repnz
leave
insl
xchg
js
xchg
add
outsb
subb
frstor
cmp
in
sub
cmovs
sub
stos
xor
adc
fsubs
cmp
or
push
mov
enter
fmuls
popa
xchg
leave
inc
stc
jmp
mov
in
mov
mov
pop
and
xchg
cmc
or
je
add
test
mov
inc
or
adc
xor
andl
in
add
ret
lea
jno
adc
mov
ret
int
out
cld
push
jne
popa
std
cmp
push
push
cmp
push
sub
std
dec
mov
fs
mov
sarb
adc
add
inc
cmp
arpl
push
ljmp
cmp
movsl
sbb
xor
and
cmc
adc
out
lret
dec
cs
or
xor
aad
mov
cmpsb
jae
std
mov
adc
dec
in
dec
or
or
xor
jecxz
or
push
dec
sahf
loopne
sbb
test
into
inc
out
or
int3
scas
push
pop
daa
shl
push
sbb
cmp
sub
pop
sub
decb
mov
mov
lods
bound
lea
mov
scas
faddp
cmc
sti
and
mull
leave
cmp
icebp
aaa
cmp
pushf
sbb
inc
xorb
lock
xchg
gs
inc
mov
cltd
out
mov
dec
pop
iret
xchg
sbb
inc
cmp
push
std
push
cmpsl
xor
or
sub
fs
xchg
cmp
cmc
int
icebp
cmpsb
pop
dec
dec
mov
pop
hlt
mov
add
out
xchg
aas
and
clc
xor
adc
rcr
jb
int
insb
xor
in
ds
dec
stos
fwait
mov
pop
mov
out
cmp
inc
js
mov
movsl
dec
fldt
fistl
jne
xlat
enter
dec
inc
push
in
dec
pop
mov
or
das
inc
cmpsl
mov
sub
sub
add
adc
cld
mov
cs
jb
rorl
pop
mov
enter
decb
call
lret
mov
data16
adc
scas
add
es
jb
into
cmp
sbb
imul
push
inc
and
into
rcrl
movsb
cli
adc
sbb
into
xlat
std
mov
add
pop
das
sub
pop
stc
or
dec
sub
cmp
push
mov
pop
and
sahf
stos
in
or
mov
cltd
dec
scas
and
in
mov
mov
cmp
inc
stos
lcall
mov
pop
es
sub
ja
cmpb
pop
mov
push
add
enter
cmp
loop
enter
pop
jo
iret
filds
dec
jg
mov
xchg
ljmp
push
lret
ljmp
ljmp
sbb
imul
sub
shlb
iret
bound
cmp
xchg
mov
sbb
sahf
test
insl
and
xchg
jae
sbb
mov
out
sbb
or
dec
sub
stc
cmp
pop
ljmp
push
aam
lret
das
cmp
jle
test
aas
xor
sub
cs
or
stos
lds
js
aad
mov
xchg
lahf
movsb
test
cmp
in
mov
sbb
lock
rcrb
dec
cltd
sub
xchg
jg
or
loopne
addr16
cwtl
jecxz
ret
aas
fs
imul
dec
not
outsl
lods
inc
lret
mov
sbb
jmp
repnz
ljmp
sub
into
xorl
int3
repnz
pop
dec
insb
pop
sub
jg
mov
or
xchg
in
stc
push
add
cmp
mov
sub
outsl
popf
fwait
rol
jae
pop
adc
jo
mov
mov
out
mov
jbe
pop
adc
das
mov
loope
push
seta
enter
outsb
and
or
pop
cmpsl
push
mov
pop
mov
add
cltd
imul
cmp
mov
inc
mov
dec
setle
test
aam
push
mov
mov
iret
mov
cmp
vmwrite
and
cmp
inc
dec
dec
out
dec
call
negb
sub
lea
in
inc
inc
inc
push
pop
inc
or
push
imul
dec
hlt
nop
add
sub
sub
mov
nop
dec
jb
cmpsb
xor
cli
movsl
push
in
xchg
js
push
int
call
addl
pop
mov
fiaddl
test
xor
out
pop
repnz
cmp
sbb
popa
push
jecxz
cs
sub
cmpsl
push
out
adc
hlt
je
nop
jp
push
lods
xchg
ds
call
sbb
add
pcmpgtw
fldt
es
ss
xchg
xchg
jne
in
sahf
fnstcw
adc
leave
scas
xor
cwtl
pop
pop
dec
push
mov
lea
add
lret
add
outsb
push
mov
cmpsl
cld
sbb
call
push
in
or
jp
lahf
xor
idivb
inc
cld
push
int3
cmc
mov
adc
mov
aas
xchg
mov
daa
jle
pop
fiaddl
incl
js
fs
loop
xchg
mov
adc
je
mov
sbb
jmp
cmp
fidivs
and
bound
cmpsl
mov
cld
adc
push
data16
aam
lcall
enter
fcoms
ljmp
loope
ret
out
dec
mov
add
les
rclb
test
mov
push
cmpsl
sub
mov
jae
je
insl
jg
test
mov
insb
cwtl
outsb
mov
shrb
dec
dec
in
mov
dec
pop
loope
scas
push
mov
mov
call
imul
add
pop
test
or
and
xchg
pop
adc
inc
faddl
icebp
cs
jno
je
and
mov
movsl
loopne
and
andl
in
xchg
insb
js
scas
jns
mov
add
mov
shlb
xor
loop
sbb
loope
mov
jle
lock
or
pop
sub
cmpsb
lcall
adc
dec
dec
pop
out
js
jne
lret
pop
sub
lret
add
imul
pop
xchg
xchg
out
test
jo
aad
pop
adc
mov
inc
jmp
cmp
stc
jge
mov
std
sub
mov
xor
lcall
lds
mov
call
lcall
mov
sub
enter
pushf
lock
add
clc
stc
mov
loop
add
xchg
mov
test
mov
inc
add
sub
cmp
loop
push
push
cmpsb
or
outsl
sysenter
movb
sbb
adc
mov
pop
repz
in
push
push
nop
cmp
test
cmpb
dec
lea
mov
mov
or
xchg
jg
ja
pop
fistl
data16
adc
add
or
sarl
push
push
pop
pop
mov
das
jl
xchg
xchg
imul
and
jb
test
mov
stos
ljmp
add
xchg
jno
xchg
adcl
sarl
and
data16
iret
ret
jmp
in
mov
loop
cld
shrl
sbb
out
add
mov
push
lock
imul
fiaddl
mov
scas
cwtl
mov
adc
push
push
adc
data16
les
mov
jp
stc
mov
lahf
xchg
xchg
push
imul
in
sub
xchg
cli
inc
call
pop
iret
lahf
mov
pop
adc
es
stc
sbb
scas
add
xor
push
test
add
mov
sub
sbb
popf
popa
fnstsw
jo
in
mov
mov
or
paddq
sub
jno
repnz
or
scas
mov
mov
pop
inc
dec
jnp
xchg
cld
add
cmp
adc
adc
adc
cmc
xor
clc
jl
nop
iret
addr16
test
idivb
and
jecxz
fs
loope
xlat
mov
mov
or
imul
adc
mov
push
jle
sbb
add
in
push
push
scas
cmpsb
jmp
add
add
ljmp
mov
int3
sbb
or
mov
mov
mov
sbb
out
fcmovnu
sub
adc
pop
and
mov
xchg
sub
mov
int3
push
jno
inc
fmull
jb
mov
dec
mov
ret
or
inc
push
cwtl
inc
jmp
mov
pop
jns
sti
pusha
push
mov
jb
stos
movsb
jg
dec
mov
lock
aaa
push
mov
inc
pop
rolb
fs
xchg
mov
sbb
imul
pop
dec
xchg
scas
or
or
mov
test
sbb
cs
lds
xlat
jbe
fwait
mov
pop
jae
pushf
dec
leave
orl
movsb
shll
gs
pop
jne
mov
mov
fcoms
add
shll
out
icebp
imul
ljmp
leave
cmp
pop
lea
popa
pushf
jmp
jo
daa
das
xor
aad
pop
xlat
mov
aaa
xor
lea
pop
test
add
cwtl
icebp
je
out
pop
popf
sti
sar
dec
dec
add
jmp
sbbb
aaa
mov
inc
cwtl
js
mov
xor
cwtl
adc
dec
add
arpl
dec
stos
add
test
sub
pop
je
xchg
lahf
sbb
bound
sti
lods
loop
lahf
pushf
std
enter
mov
imul
pusha
mov
imul
mov
fimull
out
or
cmc
and
cmpsb
nop
test
mov
shr
add
out
fwait
fwait
and
jbe
ret
cmp
xchg
xchg
out
shr
push
dec
cmc
add
pop
jb,pt
pop
sbb
push
mulb
daa
iret
xor
sub
in
jg
in
cmp
in
shrb
xchg
mov
aaa
arpl
mov
dec
les
das
xor
mov
movsb
jmp
or
clc
lods
mov
bound
inc
xchg
jle
cmc
or
dec
fildll
mov
xor
aaa
cwtl
andl
push
test
movsl
add
xor
int3
test
lret
into
stc
std
mov
jle
add
subl
sahf
dec
stos
pop
lret
adcb
push
sbb
sbb
int
rcr
xlat
add
mov
xor
jnp
mov
loopne
dec
mov
cltd
stos
hlt
mov
movsl
ret
inc
xchg
movl
cmpsb
dec
xchg
xchg
jp
lea
pop
test
cmp
cmp
iret
jmp
adc
leave
jne
dec
cmp
add
icebp
mov
ficompl
mov
movsb
ss
xchg
mov
mov
arpl
or
pop
out
rcrb
movsb
adc
ss
adc
cmpsb
xchg
les
mov
iret
aas
test
pop
xchg
jae
jnp
and
scas
mov
iret
pop
cli
xor
xlat
jns
dec
and
ret
out
push
mov
jmp
sti
push
leave
arpl
lods
push
out
adc
aaa
jge
dec
shrl
dec
xchg
mov
push
movsl
test
or
jg
jg
inc
mov
sbb
dec
add
jge
and
fs
std
mov
call
or
pop
stos
iret
or
pop
aam
movsb
fs
bound
es
jg
in
add
push
push
stos
jecxz
pop
mov
sub
adc
ret
jg
stc
in
lea
daa
pop
sarl
jnp
das
mov
clc
out
and
rorb
aaa
adc
pushf
pop
adc
or
int
and
repnz
outsl
int
add
or
pop
xchg
fisubrs
sbb
push
leave
mov
in
dec
and
mov
cmpsb
lock
rorl
lcall
and
daa
popf
inc
and
cmpsl
mov
pop
add
add
mov
jbe
daa
jnp
adc
xlat
jg
cmpl
and
test
lret
roll
mov
bound
mov
enter
out
pop
in
mov
xor
xchg
add
scas
mov
xor
outsl
xor
dec
jno
pop
dec
jle
repnz
xchg
popf
rcrb
sub
out
xchg
push
movsb
cmp
repz
mov
lock
stos
push
mov
frstor
js
adc
cwtl
sub
inc
jbe
lcall
mov
xchg
fdivl
mov
daa
mov
dec
das
push
fs
adcl
fs
or
out
mov
pushf
idivb
call
fs
popa
mov
loop
outsb
mov
sbb
popf
push
lods
das
clc
mov
inc
aas
sub
pop
or
andb
fists
outsl
call
mov
xlat
pop
loopne
mov
jbe
movsb
mov
mov
sub
mov
push
je
subb
and
mov
arpl
xchg
dec
or
dec
push
in
lock
add
insl
push
test
lret
imul
icebp
adc
mov
or
popa
push
outsl
out
add
aaa
into
sbb
xchg
sub
or
mov
mov
out
test
fidivl
inc
mov
lds
stos
mov
push
and
in
xorl
mov
nop
mov
lahf
cli
jb
test
ss
popa
out
movb
fsubrs
push
dec
dec
add
push
xchg
test
sti
iret
mov
dec
adc
out
mov
ret
xchg
add
int
aad
mov
cmpsl
xor
ljmp
cmc
stos
std
sbb
movl
mov
lods
push
out
push
std
mov
or
jns
cmp
leave
hlt
or
popa
cmp
out
cmc
ja
out
aas
call
inc
lock
std
stos
jb
jle
mov
lods
leave
push
repz
jle
jae
adc
xor
int
jmp
push
insb
insl
sbb
or
xchg
dec
jns
stos
dec
je
insl
test
adc
and
andl
push
cltd
and
gs
aaa
insl
xchg
or
iret
enter
pop
cmc
dec
loopne
out
mov
xor
div
icebp
leave
nop
enter
bound
jne
inc
das
jecxz
loopne
push
in
push
addl
sahf
cltd
mov
std
std
ret
test
xchg
roll
or
jns
outsb
inc
aas
mov
pop
popa
arpl
nop
mov
adc
pop
and
jo
rcr
inc
call
mov
mov
sub
sbb
test
jns
loop
lcall
xchg
and
lea
inc
fistpl
or
jp
test
xchg
inc
lcall
and
stc
fidivrs
in
les
into
leave
pop
std
scas
cwtl
mov
pushf
mov
inc
cs
loope
ss
sbb
negl
sub
addr16
shl
ljmp
jne
cmc
jae
jno
hlt
out
jg
ja
jecxz
mov
jno
mov
cmc
inc
lock
imul
dec
xor
sub
pop
rorb
add
or
popf
push
mov
sub
add
mov
ds
inc
in
rcl
testl
std
dec
xchg
out
fsubrs
cmp
add
nop
fisubrs
into
jno
loope
outsb
lahf
aaa
push
mov
push
xchg
jle
dec
fs
shl
jne
js
lret
push
jns
mov
adc
clc
cwtl
enter
jnp
jae
aam
cmp
rdmsr
xor
aad
jb
and
or
xor
pushf
pop
mov
shll
cmc
outsl
arpl
adcl
pop
cmp
jmp
and
stos
dec
pop
out
movsb
jle
sbb
adc
popf
xor
adc
jecxz
mov
mov
push
into
iret
addl
popf
mov
xor
and
and
cmp
stc
mov
add
daa
mov
pop
cmp
es
pop
lret
pop
shll
cmc
pushf
fwait
cmc
jo
int
sbb
adc
jo
adc
sahf
pop
mov
hlt
and
xchg
cmp
sar
xchg
mov
andb
pop
or
rclb
into
inc
sbb
lea
jns
int3
divb
inc
sub
mov
sub
cmpsb
inc
scas
mov
add
xor
mov
jbe
pushl
cmp
add
or
sbb
push
cmp
jb
ja
or
loope
js
fisttpl
jne
mov
aas
les
add
and
sbb
jp
mov
add
xchg
inc
xchg
nop
fwait
cmp
fidivs
xlat
jmp
jne
jbe
sub
hlt
mov
fcmovu
out
xor
mov
push
neg
out
dec
cli
imul
data16
cmp
outsl
aad
xchg
popf
mov
adc
lock
outsl
xchg
mov
push
ret
sub
xchg
dec
xchg
inc
xor
test
les
lods
movsb
cli
mov
pop
in
scas
out
sub
mov
inc
outsl
mov
std
adc
inc
cmc
add
cmp
ljmp
fwait
add
add
les
jp
imul
add
insl
test
in
loope
in
insb
mov
fisubrs
outsb
or
movsl
push
divl
sti
inc
gs
sti
aas
jb
subl
pop
mov
inc
pop
andb
pusha
in
incb
add
fsubrs
push
xchg
mov
sbb
adc
adc
xchg
push
iret
out
adc
mov
xor
pusha
pop
sub
mov
push
lods
mov
add
in
push
repz
and
daa
cs
mov
xor
dec
das
fs
lods
and
addb
sbb
popf
outsb
xor
rcl
icebp
push
cmp
sub
inc
rcrl
mov
ja
mov
aad
rcl
mov
jg
xor
push
mov
sub
lret
or
sahf
ljmp
repnz
daa
pusha
adc
aaa
pop
outsb
pop
jle
or
sahf
dec
mov
imul
sbb
dec
jle
pushf
mov
int
insl
scas
jno
mov
in
lret
aas
iret
sbb
loopne
fs
imul
cmp
cmp
adc
in
pop
sbb
dec
inc
shl
cmp
pop
pop
dec
das
testl
adc
sub
iret
clc
cmp
loop
iret
repnz
shlb
jmp
jle
mov
or
mov
dec
fbstp
sub
inc
ds
xchg
imul
push
int3
push
pop
aad
push
repnz
pop
dec
mov
test
lock
push
pop
adc
mov
add
pop
in
shrb
jne
hlt
repz
mov
pop
mov
das
cmpsb
call
inc
inc
mov
sub
test
in
dec
xlat
sbb
dec
cmp
and
subb
push
push
imul
xchg
mov
das
sub
pop
mov
roll
push
popf
ds
jae
cld
jnp
mov
and
lret
aam
adc
in
fnstenv
mov
mov
fiaddl
inc
jns
in
jle
add
jnp
shr
jmp
repz
idivb
shr
rolb
jne
rep
inc
push
xor
cmp
mul
inc
xor
lahf
in
sub
xchg
inc
test
int3
fcoms
in
movsl
test
pop
leave
lret
push
lret
test
idivl
xor
in
pusha
mov
cs
outsb
push
std
mov
mov
shl
adc
sub
fdivrs
imul
and
repz
pop
mov
xchg
xor
cwtl
xchg
out
int
call
lea
mov
aad
dec
call
test
mov
pop
js
subl
jle
jb
aaa
mov
add
push
mov
push
or
or
jmp
arpl
gs
push
mov
adc
xchg
in
repnz
idiv
cld
mov
popa
es
cmp
xchg
xor
push
outsb
cltd
jge
faddl
mov
in
pop
sbb
cmc
pop
out
sahf
jg
pop
lcall
sbb
jmp
incb
mov
xchg
sti
mov
bound
arpl
mov
inc
mov
fisubs
shll
mov
and
xchg
inc
or
push
ljmp
push
shrl
or
bound
int3
leave
add
in
test
sub
sub
inc
mov
cmpsl
lret
add
sar
jnp
jl
lods
and
rorl
movsb
bswap
push
lods
leave
inc
mov
aad
jmp
and
jnp
mov
mov
sahf
xor
add
or
lds
adc
xor
ss
dec
rcl
daa
xchg
cmc
dec
add
loopne
andb
fninit
ljmp
cltd
xchg
fiaddl
mov
sbb
mov
xor
or
push
xchg
aad
idivb
pop
gs
repz
pushf
test
dec
daa
popa
jecxz
cs
xor
mov
adc
out
jp
push
mov
stos
and
xchg
xchg
ds
jno
mov
das
mov
in
add
xchg
test
mov
ss
int3
ds
jo
jg
push
sti
mov
cmp
dec
mov
mov
dec
cwtl
cltd
inc
pop
int3
mov
sub
daa
dec
fsub
iret
int3
inc
negb
and
movsl
cmp
sbb
aas
in
sbb
cltd
dec
fdivrs
ret
sub
test
xchg
fdivs
inc
mov
sub
mov
sub
loop
mov
leave
pop
push
add
and
inc
ljmp
fwait
jge
jp
or
les
push
daa
in
xchg
sbb
aaa
outsl
outsw
imul
cs
jecxz
leave
sbb
je
inc
xchg
pushf
pop
movd
mov
jns
ss
mov
pop
push
push
pop
jmp
daa
xor
lcall
rclb
or
sub
cs
xor
mov
scas
bound
push
adc
cmp
ja
adcb
sub
arpl
sbb
push
insl
adc
aaa
xchg
mov
xor
in
int
cwtl
repnz
jnp
lds
lea
iret
xor
filds
ja
mov
adc
or
pushl
push
stc
stos
push
jne
mov
aam
mov
mov
popa
lahf
cmp
cmp
mov
and
mov
push
mov
push
and
sbb
hlt
in
dec
cmp
idiv
cmc
push
pop
lret
add
or
jecxz
sub
shll
mov
pop
roll
in
fistl
sbb
shl
jecxz
movsb
cmpsl
jbe
pop
bound
push
hlt
cmp
dec
mov
cs
mov
out
les
jmp
in
mov
cli
shlb
imul
scas
fisubrs
out
push
icebp
dec
mov
inc
mov
sti
test
arpl
mov
test
mov
sbb
xor
push
scas
enter
mov
in
inc
pop
bound
inc
cvtps2pi
call
xor
rcr
cmp
add
popl
mov
in
cwtl
sub
inc
aaa
loop
xchg
xchg
rcl
fdivr
xchg
mov
and
into
lret
inc
imul
xchg
sti
sub
inc
pop
insb
dec
fwait
cmp
les
and
ficomps
ret
repnz
lods
shrb
outsl
xchg
aam
adc
rol
xor
insb
shll
add
xchg
adc
xchg
loope
push
add
push
aas
pop
loope
cmp
sub
pusha
push
mov
mov
test
xchg
and
rcrb
xchg
imul
mov
mov
mov
movsl
lods
out
test
or
ss
sub
jns
loope
loope
xlat
dec
pop
iret
xor
xor
xchg
ret
mov
sbb
pop
mov
sbb
jmp
jo
lcall
add
imul
popf
lret
xchg
int3
and
mov
or
ja
shll
mov
push
fistl
or
movsl
in
and
testb
or
and
push
ja
in
std
sub
divb
sahf
aad
push
inc
ror
inc
xchg
testb
jp
or
movsb
cli
ljmp
cmp
mov
mov
lock
hlt
dec
push
adc
in
push
sbb
dec
cltd
loopne
xchg
jne
fs
sbb
and
hlt
shll
inc
cmpsl
decl
adc
cld
fwait
xchg
bound
mov
shll
cld
loope,pt
daa
xchg
scas
lods
insb
pop
jmp
mov
loopne
lock
aam
flds
add
pop
xor
pop
push
mov
rorw
xor
les
xor
add
jecxz
in
ficoml
dec
jmp
fcmovnu
sar
and
imul
imul
stos
jns
lret
mov
mov
pop
lahf
fisubs
sbb
jle
add
xchg
cmp
outsb
mov
test
stos
lds
fwait
jne
icebp
pusha
cmp
xor
mov
xchg
sbb
mov
inc
cmp
push
lea
into
push
xchg
jge
xor
test
fidivs
movsl
rcrb
xlat
pop
cmp
into
cmpsl
jnp
aad
jo
sub
dec
movsb
imul
enter
mov
inc
and
pushf
fs
push
xlat
fwait
push
inc
or
mov
arpl
pop
jecxz
mov
and
bound
mov
jp
push
cmp
jbe
ret
in
std
out
push
push
dec
fs
inc
mov
mov
adc
clc
push
mov
pop
mov
cs
push
mov
and
mov
inc
xorb
pop
push
nop
inc
cmp
mull
out
pop
sarb
lahf
ss
jno
xchg
jp
jg
jne,pt
xlat
pop
ja
fldt
and
data16
rorb
add
rcrb
mov
in
inc
xor
sub
push
add
push
mov
shrb
mov
sub
mov
inc
mov
sbb
mov
jmp
lret
cmp
and
mov
pushf
xchg
das
pop
mov
loopne
xor
jge
test
adc
shr
push
les
push
lahf
or
std
and
push
fwait
sub
jae
mov
in
shll
cmp
lret
add
jge
jno
ficompl
sbb
jno
je
add
dec
addr16
mov
push
inc
jl
xchg
das
jb
push
and
fldt
pushl
sarl
sarb
mov
jae
fistps
push
dec
mov
pop
addl
loop
outsl
ljmp
popf
sub
adc
jl
fldenv
in
fdiv
mov
push
mov
sub
adc
daa
dec
jnp
xor
cmp
outsl
inc
into
xor
movb
adc
ret
add
aas
xchg
fmull
pop
mov
pushf
jl
pop
fiaddl
cmp
pop
fldt
inc
mov
xchg
movsb
cs
test
mov
repnz
or
sbb
fisttpll
push
dec
adc
cmp
clc
mov
sbb
outsb
push
jb
out
sub
push
scas
rcl
cmp
sub
repz
lret
lret
bound
mov
arpl
ret
subb
add
dec
prefetchw
jo
aas
pop
clc
insl
sahf
aas
pop
lea
add
test
xor
jp
push
ret
mov
sahf
or
stos
out
cld
loope
sbb
incb
fstp
and
ja
movl
es
add
mov
push
mov
xor
mov
inc
je
or
loopne
jae
mov
lcall
subl
insb
es
lea
cmpb
jmp
test
adc
dec
pop
arpl
sahf
mov
cmc
add
negl
lea
add
pop
pop
xchg
test
cmp
ljmp
insl
xor
div
sahf
jle
imul
push
or
xchg
shrb
mov
or
shrl
lret
repnz
sbbl
lea
push
clc
xchg
fsubrl
fstpl
sub
add
mov
cld
push
gs
cmp
cltd
js
fadds
jecxz
mov
insb
stos
enter
mov
cmp
dec
aaa
iret
sar
ret
add
jo
push
lods
xchg
mov
roll
mov
jg
inc
or
xchg
xor
or
std
xchg
les
mov
and
or
lret
mov
cmp
inc
mov
cmp
out
xchg
movsb
and
and
lock
stos
pop
leave
shrb
pusha
push
cs
adc
pusha
mov
xor
and
jno
int
pop
test
aas
hlt
fdivs
mov
lea
loope
or
cmp
movsl
adc
out
insl
pop
push
sarl
dec
arpl
repnz
je
mov
dec
xor
popf
sarl
inc
jnp
aad
pop
cld
adc
mov
dec
hlt
jo
adc
stos
in
push
aas
cmp
fbld
test
lock
aad
jl
call
fdivrl
rorb
cmpsb
adc
sub
loop
xchg
lcall
int
sub
clc
cmp
dec
mov
jmp
lret
les
or
in
adc
jo
mov
pop
pop
or
jb
fs
les
push
inc
lods
leave
push
stc
mov
cli
cld
scas
and
mov
or
mov
pop
inc
ljmp
xchg
push
outsl
into
repnz
aas
hlt
inc
push
adc
je
lock
jp
loopne
aaa
outsl
sub
jno
dec
je
fprem1
enter
cmp
xchg
add
loope
subb
mov
add
ficomps
add
sahf
mov
scas
call
test
inc
fnstenv
push
xlat
scas
test
call
mov
or
xchg
adc
stos
push
dec
movsl
mov
or
daa
inc
out
cmp
push
aad
push
pop
shlb
jno
pushl
xlat
popf
daa
in
pop
sub
xlat
lods
fisttpl
loop
mov
jns,pt
lds
xchg
fdivp
sub
das
xchg
gs
add
push
clc
test
jne
mov
lret
rol
add
pop
in
pushf
push
outsb
pop
and
cmpsl
mov
ljmp
sbb
mov
mov
nop
jecxz
dec
mov
cmp
push
xchg
cld
inc
xor
std
push
mov
mov
xor
incl
movsl
fsubrs
cs
test
fisttps
mov
xor
test
fcmovu
push
mov
data16
mov
jnp
mov
cmpsl
ret
xorb
int
jp
inc
mov
mov
inc
or
or
xchg
or
andb
and
and
inc
jle
xchg
ffreep
loopne
jbe
xchg
lcall
xchg
jl
push
enter
push
and
adc
mov
xchg
and
push
testl
ret
movsb
jge
xlat
es
frstor
and
jnp
test
arpl
push
mov
lret
mov
lcall
push
sbb
mov
jo
sti
in
sub
pop
inc
fsubrs
imul
lcall
ja
and
movsb
jge
decl
dec
call
in
mov
mov
mov
std
cmp
jl
mov
mov
inc
mov
sbb
or
mov
es
mov
push
sbb
cmpsl
arpl
cmp
leave
andl
adc
inc
out
mov
jno
aad
jae
sbb
xchg
xor
loope
jns
push
scas
jb
and
les
mov
pushf
mov
jbe
rorw
dec
cs
in
mov
aam
aam
jno
or
insb
or
out
sbb
call
mov
dec
sar
push
inc
push
packssdw
cli
and
addb
xor
xchg
call
repz
insl
cmpl
iret
outsl
mov
push
push
fs
mov
dec
and
lcall
push
test
jp
pop
ss
cmp
jmp
mov
xor
jle
aam
pop
push
sub
inc
pop
inc
stos
inc
mov
jmp
dec
pushl
pusha
add
pushl
adc
test
bound
je
cs
sub
imul
jecxz
fdivrl
loopne
subl
sbb
inc
rorl
pop
sub
add
sub
lds
inc
lds
icebp
fisubs
and
push
xchg
and
dec
sar
jb
mov
add
jns
xchg
sbb
out
cmovp
iret
in
mov
imul
aaa
fs
mov
xchg
imul
loopne
xor
ja
xchg
mov
dec
dec
lcall
fs
xlat
iret
xchg
lcall
jb
sbb
mov
js
dec
sarb
lcall
push
pusha
inc
jo
sub
sbb
mov
dec
and
xchg
pop
sar
dec
fsubl
jg
pop
mov
shll
mov
andb
scas
add
fstpl
xchg
add
adc
dec
cmp
idivb
pusha
push
push
aad
int3
daa
mov
cmc
or
ja
arpl
test
roll
jl
dec
arpl
pop
ja
call
fimull
xlat
inc
jcxz
movsb
push
clc
outsl
xchg
push
lds
push
adc
negb
push
fmuls
add
inc
or
and
jmp
inc
dec
mov
sub
adc
mov
add
cmp
test
stos
adc
ret
pusha
stc
cmp
fs
rorb
pushf
lret
sub
dec
push
inc
stc
addr16
insl
psubw
xchg
cmp
and
mov
loopne
nop
fcoml
movsb
mov
mov
std
xor
mov
add
popa
push
pushf
shlb
fmul
int
mov
aad
loope
test
jmp
rorb
enter
mov
push
cmp
mov
lret
fwait
nop
sub
dec
lods
fisubs
jp
insb
ja
inc
xchg
add
in
pop
jge
movb
ljmp
cmp
cmp
xor
inc
ficoml
or
jg
jne
fcoms
test
in
fildll
mov
jl
cmp
cmp
pop
push
or
ds
inc
flds
and
mov
dec
cmp
sbbb
fs
dec
mov
aad
arpl
dec
cmpsb
sub
push
jo
pusha
test
and
dec
inc
xchg
mov
in
or
adcl
inc
sbb
jns
repnz
mov
das
imul
push
mov
or
icebp
xchg
mull
push
ds
dec
push
jg
enter
pop
movsb
cltd
out
mov
inc
add
sub
mov
adc
sbb
add
push
addr16
test
cmp
mov
out
enter
sbb
sbb
shl
not
movsb
xor
mov
rorl
inc
inc
pop
gs
fnstcw
xchg
xchg
rcrl
sub
faddl
in
add
test
in
cmpsl
lahf
sti
pop
inc
xchg
mov
or
inc
mov
mov
xor
push
fdivrs
cmc
test
daa
shll
lea
jo
mov
cs
push
adc
or
in
cmp
mov
push
out
mov
popf
imul
cmp
xor
xchg
inc
jae
rcl
mov
mov
mov
push
cmp
clc
loop
mov
loope
cs
setge
add
mov
repz
stos
sub
jne
stos
push
sbb
int
push
fwait
mov
xor
adcb
ret
mov
dec
mov
ss
push
sub
mov
mov
and
in
lcall
movsl
mov
fiaddl
loope
inc
loope
dec
pop
xchg
jae
push
and
lahf
rcrb
jae
aaa
sub
add
and
pop
addl
or
adc
loope
js
dec
scas
xor
xchg
lcall
clc
sahf
sub
inc
test
movq
sahf
mov
xchg
cmpsl
dec
fistpl
push
popl
mov
loopne
sub
add
pop
xchg
adc
or
jmp
loopne
cmp
jb
sbb
shll
dec
or
les
lods
jge
int
fsubp
out
dec
mov
rcrb
xchg
enter
cmp
pop
adc
pop
pop
push
jne
bound
mov
or
dec
stc
or
jg
mov
sbb
lcall
lea
adcb
outsl
and
sub
cmp
scas
imul
add
mov
adc
cltd
lods
push
repz
pushf
pushf
jg
mov
sbb
pushf
cli
mov
jge
test
jmp
jns
add
mov
xor
jmp
push
inc
push
dec
movsl
daa
and
pop
pop
adc
cmp
lods
sub
lahf
lret
lahf
xchg
xlat
stos
adc
cwtl
shrb
push
sub
mov
xorb
add
lret
xchg
fildl
sbbl
mov
rcrl
dec
dec
dec
insl
ror
push
pop
lahf
xor
shll
test
orb
xor
aaa
lahf
cmp
xor
mov
daa
jge
mov
rorl
inc
ds
mov
adc
sbb
mov
data16
test
in
pop
and
movsb
iret
mov
jg
decb
cmp
shll
cmp
jg
sbb
cmp
jns
mov
arpl
repnz
pop
jg
mov
sub
jge
cmpsl
mov
and
xor
daa
iret
pusha
lods
inc
rolb
jp
ret
pop
jge
mov
push
inc
and
lret
dec
out
mov
inc
cld
jecxz
mov
fimuls
mov
lret
sbb
jmp
jns
xlat
xorb
pop
xchg
xchg
popa
mov
addb
sbb
sbb
mov
scas
sbb
xchg
ret
and
sbb
mov
and
in
mov
daa
outsb
push
cmp
push
mov
popf
xchg
inc
inc
sbb
xchg
int
pusha
cld
cli
and
jl
imul
jnp
aaa
es
fimull
adc
xchg
jle
movsb
jae
adcl
jl
push
into
dec
sub
and
ja
mov
pop
rclb
clc
sbb
or
mov
pop
movsb
jmp
cmpsb
or
cmp
movl
das
popa
lret
out
lods
inc
add
pop
clc
jmp
scas
jg
xlat
out
adc
test
add
hlt
sub
xlat
cmc
ret
push
inc
call
and
ficoml
and
xchg
lods
ffree
pop
lods
testb
add
outsb
pop
dec
das
inc
adc
mov
mov
in
out
push
xor
aad
ret
out
insb
cmp
sbb
push
inc
andl
xor
xchg
call
cmp
cmp
out
jp
and
daa
mov
xchg
in
inc
addl
andb
pop
jno
jg
imul
xchg
inc
in
pop
stc
adc
mov
xor
and
je
in
popa
xorl
lods
push
xchg
jb
in
fstpl
leave
stos
stos
mov
add
dec
adc
jbe
mov
cmpsl
fdivrl
cs
cmp
in
pop
inc
lret
shlb
int
and
xor
mov
movsl
rcll
lcall
xchg
or
fisubs
lods
in
inc
testb
daa
jnp
cltd
push
pop
mov
imul
inc
rcr
pop
pop
test
stos
insb
jl
or
mov
pop
inc
add
roll
mov
inc
or
aaa
hlt
mov
repnz
mov
dec
xchg
test
adc
push
rclb
mov
fists
or
add
ja
inc
jge
and
mov
adc
mov
fcoml
xchg
lahf
popf
loope
xor
adc
adc
xchg
or
mov
and
mov
test
pop
cltd
and
sbb
mov
repz
mov
int
cmp
jae
addr16
sbb
mov
add
mov
sbb
lods
mov
cmc
rol
das
insl
mulps
pop
and
test
add
ja
and
sub
shlb
mov
jne
sbb
movsl
sbb
add
in
out
cwtl
or
dec
push
lds
jne
imul
js
mov
outsb
sub
ds
fnsave
dec
insb
xor
lock
in
cmpsl
mov
lods
xchg
or
ds
mov
sbb
aas
xlat
inc
lcall
jns
ss
int3
mov
jg
in
int3
shll
std
cltd
cld
and
dec
mov
lahf
mov
sub
xchg
pop
xchg
cli
mov
cmp
mov
ljmp
addb
arpl
or
xor
fwait
xor
and
cmpsb
test
cmp
sbb
addb
popf
rcll
mov
inc
xchg
nop
mov
mov
sub
enter
adc
scas
xor
adc
enter
xor
adc
xchg
mov
pop
and
xchg
sbb
push
mov
jno
sbb
cmpsb
iret
sub
jp
sub
hlt
fwait
jns
dec
push
neg
mov
xor
ss
pop
repnz
jne
scas
mov
lods
je
arpl
lods
mov
sbb
jb
push
notl
stc
mov
sbb
dec
adc
loop
mov
bound
mov
js
testb
inc
adc
xor
test
ja
mov
psubusb
js
roll
inc
sub
mov
xchg
sub
xchg
nop
rcrl
cwtl
mov
cmp
shrb
test
push
mov
fisubl
pop
clc
out
xchg
add
cmp
rorl
dec
mov
adc
lock
mov
mov
pop
ss
mov
lea
mov
call
hlt
xor
loope
mov
dec
jnp
enter
add
xor
jmp
ret
pushf
mov
loop
jb
loopne
stc
push
call
notl
clc
aad
dec
or
aas
jns
xor
gs
sbb
aaa
loope,pn
mov
sbb
loopne
xchg
or
sbb
sbb
hlt
lret
std
pusha
and
out
dec
xchg
test
mov
adc
dec
mov
scas
add
leave
dec
xor
ja
sbb
je
ds
sub
cmp
sub
aam
cwtl
push
jge
dec
ja
clc
aam
sub
hlt
add
or
push
push
scas
loopne
cmpsl
aam
outsl
push
mov
and
lods
adc
sub
xor
jg
roll
aad
push
and
xor
lret
pop
pop
mov
das
fisubrs
pop
adc
push
mov
mov
jno
jnp
sbb
jmp
shrb
push
fdivs
pop
xchg
in
pop
aam
jle
mov
test
cmc
cmp
cmp
iret
aad
movsb
inc
lods
cmp
jge
add
mov
xor
bound
inc
push
jnp
addr16
aad
lcall
pop
cltd
xchg
cmp
loopne
jno
sarb
jnp
or
push
sar
lods
call
out
or
inc
das
fcmovnbe
fdivrl
lea
inc
into
inc
insb
adc
mov
imulb
decb
jbe
movsl
dec
ret
lds
mov
sbb
mov
mov
rol
mov
xchg
lea
rcrl
cmp
test
ret
adc
fcmovnb
inc
or
add
xor
push
xchg
push
xor
cmp
in
icebp
imull
xchg
fnstsw
arpl
mov
dec
movsl
or
inc
sbb
adc
pop
cltd
out
jp
mov
mov
leave
jae
dec
cmp
mov
mov
xchg
inc
loope
jge
adc
decl
add
pop
outsb
mov
cmp
out
ret
scas
cmp
jmp
cmc
fdivrp
loopne
adc
outsb
jno
bound
xchg
mov
sahf
out
cmp
sub
cmp
xchg
dec
fwait
adc
and
sub
int3
icebp
adc
push
adc
adc
xchg
addb
sbb
jge
xchg
stc
addr16
stos
cmpsl
pop
dec
xchg
rcrb
jecxz
cs
aaa
inc
pop
ds
test
add
jl
adc
rcll
xor
and
mov
pop
sarl
addb
out
sbb
movsb
lcall
lods
nop
add
xchg
inc
cmpsb
pop
mov
fxch
push
push
sarb
or
nop
mov
dec
add
outsl
jmp
push
push
es
out
sub
dec
pop
xor
sub
dec
sbb
push
leave
and
lea
lcall
mov
in
sbb
movsb
dec
shlb
and
testl
cmp
lret
movsb
inc
or
pop
stc
andl
mov
test
sarb
sbb
shrb
loop
mov
mov
sbb
stc
mov
jb
into
cmp
jo
and
lock
mov
scas
pop
mov
repz
sbb
lret
in
mov
arpl
les
mov
jecxz
leave
rcll
add
xor
and
cld
stos
jbe
int3
das
out
scas
mov
and
stc
push
inc
mov
test
pop
insb
mov
mulb
and
xchg
jne
movlps
jl
push
into
fcmovnb
in
cwtl
insb
int
xor
jbe
hlt
les
cmp
mov
sub
push
xor
scas
inc
xor
push
mov
mov
testl
inc
data16
stos
xor
xchg
sub
addr16
sbb
repz
jbe
pop
popa
cmc
test
pop
out
jecxz
icebp
lea
out
insb
in
je
pop
push
jl
mov
jbe
std
daa
mov
lds
out
in
pop
aaa
push
loopne
jp
ja
int
mov
cmpsb
lahf
jecxz
fwait
inc
mov
cmpsb
lret
lods
int3
fwait
mov
cli
pop
mov
sbb
fmulp
add
sub
add
negl
insb
daa
outsb
push
push
loop
cmp
push
dec
adc
insb
pushl
sbb
stos
mul
xchg
mov
dec
push
mov
sub
adc
aad
ja
into
pop
mov
cld
decb
cltd
loope
jl
mov
in
idivb
es
mov
xlat
stc
cltd
nop
in
inc
pushf
mov
cmp
jge
ljmp
dec
flds
mov
std
push
sub
jmp
nop
neg
in
add
lods
pop
stc
inc
hlt
jge
push
dec
dec
push
xor
xchg
sbb
int
fbstp
xor
bound
push
mov
sbb
cmp
loopne
pop
pop
and
dec
les
adc
testb
or
mov
xor
inc
mov
pop
sub
shlb
out
dec
mov
push
xchg
stos
sub
push
xor
scas
and
sahf
mov
push
or
int
mov
das
adc
mov
addr16
cmp
add
cmp
xchg
push
jp
mov
insl
ljmp
dec
mov
jb
lahf
insl
leave
sbb
call
jl
lock
inc
xor
or
and
aad
adc
jns
push
pop
imul
pusha
scas
pop
push
or
cmp
test
cld
cmp
iret
xchg
pop
push
imul
out
leave
sub
cmp
jle
clc
loope
push
bound
fisttpl
xchg
shll
loop
inc
xor
addr16
pusha
jnp
sub
push
adc
mov
insb
and
popl
or
loope
arpl
fdivs
pop
xor
push
lods
xor
jnp
arpl
stos
mov
jo
dec
in
mov
in
pop
mov
cltd
stc
add
adc
xorl
add
jg
cmp
push
pop
jle
mov
movsl
arpl
enter
cmp
cli
jp
inc
sbb
sbb
mov
ds
adc
stos
imul
das
out
or
sub
jmp
push
adc
cltd
pop
jl
cld
sub
jnp
push
jl
shrl
addr16
imul
jo
cmp
dec
xor
mov
scas
xchg
pop
out
fisttps
lock
adc
lret
faddp
outsl
cmp
pop
lret
or
mov
inc
loopne
jecxz
mov
ret
aaa
imul
pop
pop
cwtl
push
push
int3
xor
imull
mov
pop
sarl
pop
dec
mov
pushf
loope
lods
jo
add
jae
mov
sub
mov
inc
sbb
push
test
mov
shlb
in
pushf
dec
lret
jb
insl
or
stc
mov
push
popf
aam
push
popa
dec
scas
sbb
or
lods
adc
adc
add
dec
or
add
add
xlat
mull
lret
popa
aaa
and
bound
pop
stos
je
or
insb
pop
ficoms
or
loop
mov
in
jae
imul
pop
fdivl
pop
ja
lahf
sub
fmuls
adc
mov
shlb
pop
mov
push
test
hlt
mov
pop
sbbb
jp
pop
and
es
jg
lret
jp
mov
cmp
sbb
out
lcall
mov
repnz
pop
sub
or
je
adc
cltd
notb
cmp
ja
jb
arpl
outsb
loope
or
ljmp
push
movsl
push
push
push
xchg
push
mov
lret
daa
cli
incl
dec
ljmp
insb
xchg
push
xchg
jne
out
pop
test
ljmp
imul
inc
lds
mov
inc
ret
lcall
or
mov
push
mov
inc
push
cmpsb
or
jle
fdivrl
push
push
xchg
vmovaps
ret
cmp
mov
out
push
push
mov
inc
cld
pop
mov
jecxz
sbb
sbb
xor
jns
or
sub
pop
cmc
mov
jbe
rorb
outsl
es
or
push
jo
jge
cmp
push
sti
and
xchg
or
push
push
fsubrl
faddl
pop
orb
jnp
lea
pop
sbb
aam
pop
movsl
and
adc
dec
cwtl
test
fistpll
dec
test
mov
aas
dec
mov
jle
add
movsl
sti
mov
iret
pop
add
push
jp
push
cmpsb
clc
jo
add
aam
inc
adc
mov
cs
or
das
add
sbb
and
fnstenv
ret
pop
lret
and
sbb
out
dec
shll
mov
fstps
push
aaa
repz
int
imul
xchg
sub
cwtl
outsb
sahf
and
jmp
test
mov
lahf
popa
and
jecxz
cwtl
inc
fsubrl
lock
cld
mov
cmp
jl
test
rcl
jo
lea
cmp
xor
movsl
pop
inc
xor
je
scas
int
push
insb
jecxz
fists
out
stos
or
test
xchg
or
cmp
add
cmp
inc
loope
and
push
dec
jno
mov
jge
movsl
mov
shll
sti
fcmove
sbb
pushf
rcrl
cmpsl
cli
and
dec
adc
add
adc
outsb
dec
adc
pop
pop
sbb
addb
xor
lcall
pushf
cltd
inc
fcmovne
cmp
cmp
xor
jg
test
fwait
inc
daa
mov
add
imul
cmc
or
cltd
mov
cmp
gs
or
cli
xchg
pop
outsl
das
push
hlt
push
daa
mov
add
dec
ficoml
movsl
mov
fisubs
gs
in
jmp
call
rol
out
lret
cmovnp
fwait
shrl
mov
je
loope
addl
adc
incb
int3
pop
loopne
inc
add
sub
pop
repz
pop
jl
mov
and
pushf
in
xchg
mov
jmp
test
xchg
dec
ljmp
lods
je
push
dec
in
int3
es
cli
fadd
mov
or
jb
aas
packsswb
test
out
pop
or
sbb
sti
xor
mov
cld
mov
fucompp
int
adc
push
mov
jecxz
fistpl
mov
cli
daa
int3
es
ret
jp
mov
bound
fidivl
dec
jb
mov
cmp
in
cmp
and
mov
inc
rolb
xchg
ret
int3
pop
lahf
jbe
jl
or
insb
lahf
adc
add
test
movsb
mulb
lahf
jecxz
in
scas
pop
cltd
add
rcrl
sub
sub
lret
cmp
rorb
sbb
jne
or
jne
xorl
das
sub
xchg
mov
jo
cmp
daa
mov
sub
mov
pushf
inc
rclb
pop
sub
sahf
int3
mov
push
add
jne
xchg
xchg
dec
add
imul
xor
push
cld
push
pop
fistps
push
cmp
mov
cmp
adc
mov
xchg
mov
cmp
mov
mov
fwait
or
adc
jge
dec
xorb
fiaddl
push
int
mov
sbb
xchg
sbb
sahf
sub
sti
adc
cmp
mov
mov
dec
sub
xor
jecxz
pop
leave
lods
push
pop
xchg
xchg
adc
xchg
imul
jl
pop
mov
pop
push
ja
out
push
addr16
jne
fsubs
mov
push
mov
xchg
call
movsb
in
and
idivb
aas
push
sub
xor
lea
sbb
mov
jle
cmp
and
fdivrs
mov
test
lahf
inc
push
pusha
pusha
push
lods
aad
pop
mov
inc
pop
jecxz
lahf
int
movsb
and
ljmp
mov
insb
sahf
das
enter
cltd
xchg
sar
enter
xchg
xchg
enter
mov
mov
loope
mov
daa
or
cltd
sahf
pop
xor
aaa
push
jo
mov
pop
jl
xchg
enter
sahf
ret
hlt
xchg
aam
jmp
inc
jle
out
push
xchg
or
test
mov
and
popf
fdiv
adc
outsb
shrb
and
bound
jno
pop
and
iret
add
lret
sub
dec
push
pop
sbb
cli
dec
mov
xchg
ljmp
dec
test
xorl
andl
bnd
dec
xchg
icebp
push
popf
daa
xchg
call
push
lcall
mov
rcrb
mov
lods
add
data16
dec
pushl
cli
popf
lret
dec
outsl
nop
gs
repz
or
arpl
xor
int
dec
lret
cmp
jns
xor
cmpsb
jne
jmp
lock
mov
dec
pushaw
mov
and
std
sbb
aaa
pop
repnz
bound
mov
lret
lcall
js
fiadds
movswl
push
imul
cmp
in
sub
mov
pop
jb
rol
lock
jl
xchg
dec
inc
lahf
sub
lods
mov
fdivr
xchg
daa
cmp
jge
jp
xchg
in
lods
arpl
push
test
cwtl
cmp
call
ja
push
mov
sub
mov
add
mov
xchg
stc
das
gs
mov
int3
fcoms
enter
jno
loop
xchg
jae
aad
cmpsl
or
js
xchg
repz
roll
loope
fldcw
ret
inc
push
outsb
jle
xchg
and
add
sub
sbbl
das
add
dec
jb
dec
stc
fimull
add
and
rol
cs
adc
sub
and
mov
aaa
insb
movsb
cltd
push
inc
and
sub
in
adc
fdivp
dec
mov
jae
sti
and
push
testl
sbb
adc
divl
lds
mov
jno
lods
mov
jmp
add
jge
and
mov
adc
addr16
pop
jmp
lock
lret
or
pop
push
lock
lahf
pop
adc
ret
pop
das
fildll
pop
in
scas
test
push
clc
in
jmp
cltd
enter
mov
mov
push
adcl
inc
dec
pop
cmpsb
jle
shll
mov
fistpl
add
ds
xlat
jecxz
in
sbb
sbb
inc
andl
ret
divl
jo
pusha
fistpll
fsubrs
lods
inc
sbb
into
jns
in
pop
pop
iret
fcmovne
insb
rcll
inc
ja
xchg
mov
mov
mov
sbb
jecxz
or
int
sub
mov
xor
enter
dec
dec
je
mov
cmp
or
mov
inc
add
xor
push
mov
mov
push
cli
mov
rclb
or
push
add
lods
outsl
dec
sub
push
adc
aam
push
insb
lock
mov
fsts
cwtl
jle
int
adc
in
cmp
push
xor
notb
cmp
imul
dec
int
pop
les
adcl
mov
stc
sbb
jg
in
sbb
jbe
cmpsb
in
cmp
and
out
xor
std
add
jge
cmp
fsubrl
push
xchg
dec
dec
cwtl
cs
or
insb
hlt
adc
ret
cwtl
addr16
push
imul
in
aam
sub
and
sub
psrld
push
scas
cli
cmp
jns
push
aam
scas
mov
mov
sbb
scas
lahf
fyl2x
repz
inc
pop
lret
cwtl
pmaxsw
cmp
loope
fs
or
mov
or
pop
cltd
jle
and
sbb
outsb
sbb
test
test
daa
mov
imulb
pop
push
daa
adc
or
test
sbb
jnp
out
mov
into
fdiv
push
sbb
cmp
mov
lods
idivb
push
repnz
imul
mov
adcl
imul
fldcw
push
bound
in
in
data16
stc
mov
stc
ss
or
push
int3
mov
sub
fnsaves
cs
inc
outsb
notl
negl
pop
popa
push
arpl
lods
fcos
loopne
push
mov
sub
scas
ljmp
ficomps
out
call
shll
inc
push
mov
dec
push
mov
ret
xchg
dec
and
push
clc
jns
icebp
hlt
cmp
adc
adc
addr16
adc
inc
shll
sbbb
sub
lret
lret
pop
imul
lock
xor
fs
jb
cmp
mov
into
push
jns
ja
ret
icebp
popa
xchg
rclb
insb
cmp
xchg
and
mov
cmp
dec
pop
mov
push
push
lahf
and
pop
rcll
sub
out
cld
fistl
sbbl
stos
insl
ja
pop
sbbb
lods
mov
mov
jo
rorb
jp
jle
cmp
lcall
lea
in
sub
cmpsl
in
cmpsl
sahf
or
push
xor
mov
insb
cmp
sbb
cmp
mov
cmp
lock
mov
mov
fs
out
dec
adc
cmp
mov
movsb
jnp
add
je
addb
ret
cmc
xchg
xchg
xchg
pop
push
outsb
sahf
mov
xor
int
arpl
icebp
ja
clc
test
sub
lods
nop
and
jg
push
push
sbb
xchg
shl
cmp
pop
stc
pushf
aaa
push
call
mov
ja
test
mov
fldenv
nop
mov
lock
xor
mov
fstpt
adc
xor
daa
pop
pushf
mov
pop
loopne
and
das
xor
enter
stc
xchg
mov
stc
in
xor
inc
mov
out
or
decb
data16
pop
in
push
pushl
mov
insb
mov
push
in
lret
and
jae
push
add
cmpsb
fisttpl
je
xchg
cmp
dec
push
adc
ret
dec
mov
loopne
sbb
shr
mov
in
sar
sbb
lods
push
pop
ds
fdivs
pop
dec
scas
out
ret
mov
jb
add
add
dec
shrb
fsub
adc
dec
sub
mov
xlat
or
pop
or
pushf
jmp
imul
adcl
pop
adc
push
pop
cmp
jmp
lods
xorl
push
std
imul
lods
sbbb
cli
cmp
js
mov
addl
inc
out
or
mov
fidivrs
sbb
test
xchg
and
xor
fwait
sub
sbb
sub
mov
pop
cmp
in
jae
push
fnsave
jbe
cli
jl
push
nop
lock
addr16
out
sub
stos
inc
leave
xchg
mov
fs
fildll
int
lods
add
cmp
ds
push
push
adc
jnp
mov
jbe
lret
in
pop
fstps
adcl
mov
inc
pop
mov
ror
repz
lea
in
das
ja
aad
jmp
push
lds
adc
mov
pop
jo
add
push
jle
xchg
sti
mull
add
and
out
push
nop
and
std
cmp
mov
clc
icebp
jo
in
sahf
cwtl
push
add
adc
dec
push
int3
mov
orl
xchg
clc
shll
and
mov
outsb
pop
inc
mov
inc
mov
repnz
bound
add
and
mov
mov
int3
jg
fdivp
mov
push
std
je
cltd
shll
xchg
sub
repz
aas
addl
add
bswap
setl
mov
pop
sar
and
or
or
cwtl
xor
dec
or
into
aaa
adc
push
jno
fstps
mov
pop
sub
insl
ds
les
imul
je
mov
dec
add
jmp
cwtl
xchg
lret
cld
aad
out
lret
in
stos
std
mov
jns
aas
sahf
push
mov
insb
and
xchg
fwait
mov
xlat
lret
roll
sbb
xor
aas
sub
jo
inc
mov
add
fsts
push
mov
aaa
cmp
fstl
movsl
loope
icebp
jmp
jo
sbb
insl
shl
xchg
mov
sbb
xchg
xchg
cmp
pop
popf
cmp
pop
jl
pop
jne
cmp
popl
cmpsb
inc
pop
mov
stos
mov
sbb
lea
push
adc
sbb
pop
pop
rolb
and
dec
je
ljmp
pushf
int
pusha
aaa
xor
lahf
mov
push
jp
fimuls
stos
mov
jecxz
imul
sub
xchg
pop
neg
and
cmp
fnstenv
shl
and
loopne
inc
cmp
pmaddwd
inc
arpl
jge
repnz
repz
jno
in
mov
aad
aam
pop
mov
outsl
xlat
and
mov
int
mov
arpl
push
test
pushf
in
jns
mov
mov
loopne
dec
jne
fsubrl
pop
movsb
insl
mov
int
xor
les
ja
xchg
inc
or
imul
cmc
stc
pusha
mov
shlb
lret
adc
add
nop
mov
popf
mov
lods
shl
pop
pop
xor
inc
pop
das
push
fimull
sbb
pusha
pop
sub
lret
add
mov
ss
out
or
mov
iret
pop
aad
cmp
xlat
pop
lods
xor
cmpb
nop
add
xor
enter
sub
push
cmp
and
push
mov
mov
pop
les
ss
sahf
cmp
or
out
mov
mov
inc
cltd
and
rcrb
jne
sub
mov
cltd
test
mov
notb
cwtl
mov
jmp
cld
insb
jp
inc
jbe
pop
inc
jecxz
jp
mov
pop
add
pop
sub
or
adc
inc
mov
scas
lds
push
jle
aaa
jno
cld
mov
pop
adc
test
sub
adc
sbb
cld
imul
xchg
and
cs
insb
push
push
xorb
andb
xor
gs
test
ds
std
lods
dec
xchg
stos
loop
cmc
jecxz
add
lcall
sbb
in
shrl
inc
xor
mov
inc
lahf
xor
scas
mov
pop
add
pop
xor
je
and
sbb
outsl
push
imul
insl
insb
hlt
mov
fnstsw
sub
fwait
ja
sahf
inc
jecxz
test
dec
cld
mov
jle
sbb
fcmovbe
aas
aam
or
mov
inc
pop
dec
xchg
es
add
rcr
sbb
mov
rolb
add
cmp
lahf
mov
out
sbb
insb
push
enter
mov
dec
faddl
into
into
adc
or
and
push
insb
leave
mov
mov
in
fmul
in
jle
sbb
loopne
iret
sbb
inc
fcompl
push
lahf
xchg
dec
xlat
sbb
mov
std
xchg
xchg
mov
sbb
sahf
mov
or
flds
test
fs
cli
cmpb
push
movsl
push
sub
dec
adc
in
inc
and
adc
xchg
popl
xchg
sub
repz
lods
sbb
push
pop
xchg
fmull
out
pop
xlat
outsb
add
xchg
out
add
xchg
xorl
and
stos
loopne
leave
lds
addb
mov
xchg
or
sbb
mov
sbb
mov
jmp
sbb
xchg
loop
cmp
ret
movsl
xchg
sbb
pop
sbb
dec
inc
or
cs
ja
adc
sbb
pop
stc
sub
adc
rclb
mov
arpl
mov
jb
pop
clc
aaa
add
mov
adc
lcall
es
jle
lea
bound
push
pop
fdivrl
jmp
xor
out
scas
xor
imul
iret
push
add
repnz
rcrb
outsl
pop
mov
xchg
pop
fisttps
fisubs
jno
sbb
fldl
pop
clc
imul
fs
xor
mov
pop
mov
and
dec
xchg
setp
pop
jmp
xchg
and
cmp
sub
std
mov
cmp
sub
dec
pop
mov
sub
dec
rorl
test
jmp
add
sarl
or
popf
mov
sub
lea
rol
lahf
movsl
or
mov
ljmp
push
shlb
inc
nop
test
cmpsb
cmpsl
push
sahf
push
lret
mov
sar
xor
xor
push
mov
cmpl
jno
das
dec
mov
out
jne
ja
mov
or
or
push
test
mov
jno
xor
add
icebp
and
mov
mov
and
inc
xchg
imul
add
int
and
xchg
cmp
loop
inc
je
enter
lds
gs
mov
cmp
in
pop
mov
cwtl
push
inc
sbb
jo
pop
enter
jo
fstpl
dec
xor
ss
and
lcall
jbe
xlat
sarl
cmp
xchg
fsts
pop
adc
stos
cmpb
xlat
sbb
jl
jnp
mov
mov
enter
adc
inc
stos
sub
cmp
in
icebp
pushf
and
lret
das
fs
add
js
dec
and
int3
sub
mov
lods
pop
cwtl
dec
xor
push
sbb
fistl
mov
je
add
imul
xchg
fwait
rclb
arpl
adc
jno
pop
and
in
sub
push
sub
jmp
enter
add
cmp
dec
movsb
stc
nop
enter
addb
rorb
jecxz
fisubrl
xchg
xchg
or
dec
pop
jbe
pop
cld
jge
add
cmp
push
mov
xor
mov
lea
adc
and
test
or
fwait
clc
in
les
in
dec
cld
cmpsl
jmp
mov
jbe
mov
cmp
mov
ret
dec
xchg
xor
mov
in
popf
add
cwtl
xor
ret
sub
sub
fistl
jb
push
or
jl
and
add
pop
mov
inc
testl
inc
jge
sbb
xchg
aad
outsl
xchg
into
push
out
mov
jmp
cmp
sub
push
stos
push
out
adc
jne
mov
fstl
ljmp
add
or
mov
pop
loope
jo
call
into
mov
sbb
sub
movsb
push
pop
jb
mov
push
daa
into
sar
pop
xor
jbe
lcall
push
jno
adc
fistps
mov
xchg
sahf
inc
lcall
or
pop
inc
xchg
sbb
leave
xchg
cmp
sub
rolb
decl
mov
minps
mov
mov
je
inc
sarb
mov
in
cmpsb
jl
and
and
cmpsl
pop
mov
lock
bound
mov
lea
ss
scas
mov
mov
mov
mov
sbb
es
loop
mov
jns
sbb
movsb
stos
mov
jle
enter
pcmpgtw
push
ss
dec
out
xchg
shlb
lods
push
adc
xchg
rep
sti
hlt
ss
scas
jg
mov
inc
and
jbe
lcall
cmp
mov
push
ljmp
mov
scas
aaa
gs
pop
dec
imul
dec
repnz
add
and
push
andb
dec
cmp
add
push
dec
xchg
push
xchg
pop
fcmove
xchg
lods
and
loope
sbbb
add
addl
mov
imul
inc
movsl
icebp
sti
out
xorb
add
mov
sub
je
dec
aas
stos
jo
aad
lock
sbb
in
mov
mov
xchg
and
push
je
data16
ljmp
roll
arpl
mov
cmp
sbb
loop,pn
int
jmp
mov
fs
jb
sarl
jle
pop
ljmp
mov
or
call
adc
scas
lret
xlat
adc
lds
imul
cwtl
out
fistpll
aas
ss
imul
cmp
push
popf
xor
stos
jo
pop
or
mov
pop
fcomps
mov
mov
call
sub
dec
inc
movl
je
loope
aad
jne
lret
bound
outsl
ret
dec
mov
mov
leave
testl
jo
arpl
loope
mov
push
mov
push
sub
getsec
loope
insl
sub
int
stos
push
push
test
xchg
pop
sbb
fadd
mov
xor
inc
mov
mov
push
mov
pop
or
add
test
xchg
enter
cmc
add
mov
adc
rcll
out
in
cmp
lret
fiaddl
pop
or
cmpsb
cmp
mov
and
pop
lods
cmpsb
push
mov
lret
push
or
mov
pop
mov
shrl
push
cmp
xchg
add
pop
mov
popf
dec
jge
dec
dec
cmp
xor
sahf
aaa
imul
adcb
popf
jb
out
fcomps
sub
movsl
pop
cli
rolb
xor
bound
mov
jo
fs
xchg
repz
xchg
jne
lret
mov
mov
js
add
repz
sbb
push
jmp
lret
cmp
push
int3
push
pusha
xchg
adc
sub
and
in
xor
in
lods
jne
insb
mov
jb
ret
xor
fdivrl
lahf
leave
xchg
movsl
jbe
cltd
lds
aaa
add
mov
adc
dec
sbbl
and
cli
and
ss
outsl
pop
sbb
push
xor
mov
push
adc
cmc
enter
mov
and
loopne
insl
xor
or
popf
or
sub
mov
mov
ret
outsb
inc
jae
stos
insl
lret
xor
cmpsb
adc
das
add
call
pop
mov
add
mov
add
xchg
jg
mov
push
push
push
loope
push
aaa
sahf
ret
mov
shrb
sbb
lods
or
mov
out
xor
pop
lods
add
cmc
loopne
push
imul
outsb
das
in
adc
rolb
dec
xchg
les
sar
adc
jne
lcall
sub
imul
inc
or
jge
add
shl
fidivl
roll
in
sbb
xchg
sarb
mov
fstpl
lret
ret
fstpl
outsl
dec
mov
or
pusha
and
or
xor
test
pushf
xor
imul
xor
sub
ds
pop
inc
xchg
adcl
out
dec
add
cmc
inc
add
mov
subl
mov
incl
cli
sub
shll
sahf
jle
imul
push
into
adc
sub
mov
jne
and
jbe
fmul
jae
lcall
ja
mov
stos
mov
jg
pop
add
jnp
into
repz
fwait
mov
test
push
mov
in
fldl
xchg
scas
clc
scas
jle
ss
jno
xchg
popf
push
cmpl
sarb
mov
xchg
ret
clc
sub
jns
fstpl
or
dec
rcrl
adc
test
and
es
xchg
stos
jl
add
xchg
adc
xlat
rolb
outsb
notb
sahf
inc
push
push
lret
dec
cmc
lods
aad
adcb
mov
test
movsb
cmp
sub
and
andb
cmp
stos
lods
mov
jo
and
imul
into
push
and
add
stc
fistpl
fwait
aam
adc
fistpll
push
xor
mov
push
stos
stos
sbb
or
or
mov
adc
push
push
shrb
rcrl
mov
lcall
int
xor
shl
sbb
add
addl
sbb
xchg
cli
push
inc
mov
push
push
lock
mov
shrb
xchg
rorb
xchg
jnp
mov
or
pop
adc
push
fiaddl
xchg
sub
jge
rclb
add
sbb
pop
jmp
inc
mov
out
xchg
fs
pop
jl
or
ja
pusha
or
pop
orb
xor
ret
stc
les
mov
fldcw
xchg
das
dec
push
mov
pop
inc
sub
inc
xor
cmp
or
jle
fucomi
mov
dec
ret
fsubr
pusha
sti
and
mov
push
xor
pushf
shll
inc
sbb
pop
imul
mov
xor
xor
cld
mov
hlt
push
mov
jb
stos
in
mov
nop
jb
pop
pop
shll
mov
das
enter
loope
jge
inc
xchg
das
xor
xor
js
sbb
jle
cmp
push
sbb
scas
cld
xchg
imul
out
ficompl
into
aam
jns
adc
add
data16
jns
xor
jae
fcoms
push
cmp
negl
dec
dec
pop
pop
popf
adc
repnz
jp
mov
and
add
mov
mov
fimull
mov
adc
or
and
mov
xchg
shll
aaa
inc
jns
pushf
adc
pop
movsl
shlb
jbe
je
rcr
jg
mov
lods
and
and
aam
pop
mov
xchg
or
call
incl
push
lahf
stc
push
jne
adc
mov
mov
lds
outsb
push
mov
into
popa
add
sbb
xchg
mov
dec
popa
pop
push
xchg
movsb
jns
inc
int
sub
and
jo
or
push
pop
js
out
icebp
cmc
notb
xchg
mov
fdivs
mov
enter
dec
jo
jge
rcl
pop
fcomi
lcall
stc
pusha
jbe
mov
push
jne
mov
jbe
jecxz
pusha
lods
push
nop
test
xor
jg
aad
shrl
or
cmovg
jecxz
mov
ret
and
cmp
rcrl
leave
aam
dec
notl
dec
pop
xchg
jge
stc
bound
into
mov
cwtl
xlat
je
push
or
mov
adc
repnz
aad
push
mov
add
pop
xor
shl
inc
dec
push
shl
cmp
mov
xchg
in
cmp
lcall
inc
data16
imul
mov
sbb
sub
lret
xchg
mov
hlt
insb
stc
mov
xor
frstor
lret
sbb
ret
test
inc
pop
ja
fidivs
mov
cmp
pop
fildll
mov
aad
xlat
jno
mov
aas
mov
cwtl
mov
and
xor
jns
xlat
pop
xchg
or
sub
lds
pop
inc
call
dec
lcall
fcmovb
in
in
sub
shrl
rolb
pop
xchg
ret
or
push
mov
and
mov
leave
cmp
mov
aas
or
dec
insb
pop
mov
nop
arpl
lret
dec
in
mov
lods
data16
push
frndint
xchg
mov
lods
jge
xchg
jl
mov
push
repnz
gs
adc
data16
mov
dec
cmp
sub
add
jb
fmulp
test
mov
sub
outsl
dec
jp
cld
addl
stc
jl
sub
inc
add
in
aas
jno
pop
cmpsb
adc
cmpsl
or
pop
and
scas
stos
or
mov
cli
push
mov
ss
xchg
cmc
js
and
mov
fiadds
fstps
ljmp
xchg
ret
xchg
mov
jge
mov
jp
aam
push
lea
xor
cmp
mov
mov
inc
mov
test
inc
sbb
cmpsb
test
repnz
test
sti
ss
cmc
aas
insl
xchg
mov
cmc
mov
fistps
ja
insb
fidivl
aam
sarb
inc
add
fisttps
scas
cmp
sbb
jns
inc
testb
or
repz
jnp
call
je
sub
mov
shrb
add
xchg
jp
cmp
stos
dec
movsl
lds
das
xor
sub
sbb
dec
push
pop
test
ret
out
and
xchg
aad
andb
stc
cmpb
sbb
int3
or
adcb
shlb
lods
jno
inc
stos
aam
test
sahf
jl
jb
xchg
sbb
fwait
push
lds
addl
out
test
xchg
in
adc
mov
cmp
pop
xlat
lods
push
inc
ljmp
jnp
jno
and
mov
cld
repz
xchg
es
imul
sub
sub
cmpb
and
lcall
sub
test
inc
out
dec
ds
or
outsl
scas
insb
fcmovne
xor
fcmovnb
xlat
mov
int3
mov
push
test
fisttpll
sub
push
and
pop
mov
add
xor
mov
imul
repnz
addr16
shrb
ret
pushf
mov
inc
lods
mov
pop
pop
movsl
shrb
lahf
jne
shrl
jo
fwait
iret
xor
mov
or
fnsave
arpl
je
sbb
popf
or
mov
dec
ret
or
lcall
dec
out
push
sub
data16
mov
push
daa
jb
lds
or
cltd
daa
add
lock
cmp
mov
fsubp
push
xor
les
sub
inc
into
sbb
jg
jnp
xlat
and
hlt
ret
xor
pop
fwait
mov
pop
iret
add
and
aad
cmpsb
cmp
pop
jo
ja
jo
push
stos
add
jns
js
dec
shll
mov
lods
adc
rcll
je
jns
mov
mov
adc
jmp
cli
adcl
negl
fldl
movsb
aad
leave
adc
dec
je
mov
scas
and
mov
inc
pop
xchg
add
pushf
adc
push
subl
mov
cmp
sub
jb
popf
cmp
int3
mov
push
push
rorb
and
aam
or
push
lock
insb
dec
push
jp
mov
test
mov
sar
adc
adc
inc
fisttpl
frstor
sbb
bound
stos
leave
xchg
repnz
arpl
aad
cmp
and
push
pop
stos
mov
add
loopne
ljmp
les
iret
cmc
cmp
daa
loope
cmp
cmp
sbb
push
xchg
pop
lcall
gs
sub
neg
push
out
bswap
test
lret
or
dec
hlt
int
xchg
cmpsl
out
mov
jle
pop
inc
push
popf
incl
lret
cmc
adc
inc
cmp
out
mov
addr16
lret
js
sbb
pop
inc
xlat
dec
sbb
jmp
enter
pop
neg
sbbl
push
test
pop
pop
cmp
inc
divb
jge
and
jb
popa
add
pop
sub
mov
rclb
cwtl
mov
add
or
or
int
inc
dec
xor
push
mov
bound
fdivrp
adc
jmp
mov
outsl
jp
aas
or
dec
xorb
int3
sbb
into
or
mov
lods
and
mulb
jmp
or
inc
mov
in
cli
cmp
inc
lahf
leave
insb
rcrb
jns
add
les
push
jmp
push
jbe
add
sahf
xchg
shll
xor
push
inc
mov
mov
sbb
das
das
leave
test
push
fsubrl
pop
xchg
fdivl
jmp
sbb
sbb
sbb
pop
sbb
outsb
fstl
dec
out
mov
rcl
scas
or
inc
out
adc
insb
adc
repz
xchg
fnstcw
fsub
lcall
adc
mov
inc
rcrb
mov
mov
inc
dec
or
test
xchg
mov
es
sbbl
mov
enter
ret
pop
jmp
cmp
psrld
adc
adc
pop
jno
sti
sbb
lret
rolb
sbb
pop
scas
popf
mov
out
clc
adc
loope
sub
and
ret
inc
out
mov
push
addr16
lcall
inc
mov
sub
fsubrl
insl
sti
and
out
mov
mov
xor
pop
or
jmp
fwait
out
mov
or
clc
pop
pop
icebp
cmp
jb
ds
test
popa
bound
insl
jl
xchg
xor
mov
xchg
cli
imul
lret
pop
mov
inc
dec
mov
add
sub
into
sbb
rclb
xchg
push
push
cltd
sub
cmp
add
loop
cli
push
pop
mov
and
test
lcall
mov
or
adc
cmp
pop
inc
jecxz
add
or
mov
cmp
loop
in
scas
loope
or
nop
push
inc
fs
sub
movsb
dec
push
pop
or
test
loop
add
icebp
add
sbb
out
inc
in
fadds
pop
mov
add
xchg
add
pop
out
cld
push
fists
sbb
gs
lret
test
popf
adc
xchg
fdiv
xchg
and
and
dec
add
in
mov
out
cmpsl
sti
dec
or
les
pushf
fistpll
adc
mov
je
shll
sub
push
dec
cmc
add
lahf
mov
imul
xor
add
adc
sbb
sub
std
or
outsl
das
ss
mov
ss
jmp
inc
imul
adc
push
mov
imul
xor
mov
das
arpl
cmc
dec
sub
movsl
lcall
cltd
mov
mov
cmp
add
decl
mov
int3
popa
fidivrs
out
dec
inc
inc
ja
jno
jl
mov
hlt
xchg
or
popa
sub
jge
in
in
mov
add
popf
ja
loopne
jge
jl
add
mov
jno
sub
sub
inc
test
jge
cs
and
in
mov
out
fadd
push
push
rolb
insb
xchg
mov
iret
sub
imul
inc
repz
adc
dec
mov
ljmp
in
jp,pn
push
sbb
pop
imul
jae
fistpll
pop
ljmp
shlb
add
adc
stc
std
add
inc
es
cmc
xor
bound
int
negb
sbb
inc
inc
add
dec
cld
test
shl
cwtl
scas
xchg
mov
push
mov
fsubrl
scas
pop
leave
pop
sub
testb
xlat
dec
scas
shrl
dec
movsl
imul
lahf
lods
fs
add
mov
int
or
dec
iret
inc
and
or
mov
or
dec
or
clc
daa
jnp
mov
out
mov
imull
shrl
mov
imul
lahf
fstps
clc
jmp
pop
add
add
dec
cld
adc
xchg
xor
mov
jns
pusha
div
jp
jnp
mov
stc
sarb
mov
mov
mov
int3
setb
data16
sbb
jl
sbb
jae
cli
pop
mov
xor
imul
popf
movsb
jne
jo
add
lahf
les
lahf
stos
jnp
or
mov
pop
sbb
fadds
or
mov
add
repz
pop
out
pop
adc
adc
sub
dec
mov
rcrl
xchg
mov
sub
jecxz
cmp
mov
sbb
cs
mov
fcoms
lds
fsubl
aaa
dec
ror
inc
int
sarb
jb
js
shl
pop
mov
imul
dec
cwtl
fldcw
psrlq
push
sub
out
in
or
loop
or
or
lds
jl
jl
clc
add
jns
xor
in
repz
dec
clc
adc
sub
jmp
cld
loope
insl
insl
jp
push
sub
cmc
dec
sbb
or
sbb
mov
js
lds
js
push
inc
cmpsl
add
pop
push
outsb
mov
andb
das
or
mov
inc
jae
dec
push
js
sbbb
sbb
mov
mov
push
dec
push
loope
fsubrs
outsb
mov
sub
pop
in
cwtl
sub
and
mov
adc
imul
sahf
fisttps
je
push
cli
orl
mov
test
push
mov
addb
rcr
mov
jp
shll
lahf
sub
repnz
loopne
jbe
add
jne
fisttps
inc
rorb
sub
mov
cmp
and
lods
lret
mov
push
fwait
dec
pop
mov
mov
sbb
pushf
and
jge
lods
pop
push
cwtl
mov
inc
mov
fndisi(8087
out
push
mov
shll
je
mull
hlt
jo
test
jbe
shll
std
xchg
push
xchg
es
push
enter
test
and
idivb
out
int
or
cmpsl
int3
xchg
add
add
jae
add
ljmp
dec
ss
repz
lea
dec
or
xor
lcall
mov
fld
mov
pop
xchg
ja
mov
sub
cmp
sub
push
nop
sbb
int3
enter
outsl
jge
ss
jle
out
pop
mov
cli
lods
mov
mov
add
dec
inc
fadds
movsb
inc
xor
or
adc
fimull
rclb
mov
in
sbb
movsb
fwait
sbb
fcoms
aas
mov
sub
lea
push
push
in
mov
cmpsl
and
lock
lcall
xor
dec
cmp
mov
insb
sub
or
js
xchg
or
adcb
mov
xor
into
sahf
xchg
push
in
mov
rolb
jae
cwtl
mov
in
sub
add
icebp
nop
and
repz
std
push
cmpsb
imulb
mov
out
add
pop
roll
and
pop
hlt
pop
mov
adc
xor
inc
jl
inc
or
lret
lret
cmc
aaa
sbb
push
mov
inc
cmp
inc
cmc
xchg
test
add
cwtl
xor
inc
xorl
xor
xchg
jnp
xor
mov
popa
es
sbb
inc
ljmp
sub
icebp
mov
fadd
sub
addr16
mov
outsl
lcall
repz
call
sub
sahf
add
xor
cmc
push
mov
jbe
shr
leave
outsb
mov
adc
ljmp
insl
test
pushl
jb
xor
leave
pop
popf
loop
lahf
in
add
jne
adc
popa
cmp
mov
mov
sub
dec
pop
or
mov
aam
mov
push
jmp
movsb
scas
push
je
jle
cwtl
lods
test
out
mov
cld
adc
jg
shrb
sub
arpl
cmc
add
pop
leave
aam
cmp
cmpsl
and
cmp
cmpl
fcoml
sbb
cs
in
push
in
mov
push
xlat
inc
mov
ss
adc
mov
lret
addr16
pop
mov
or
js
jp
jg
adc
inc
mov
push
mov
fsubrl
pop
fsubrs
xchg
es
lea
das
xor
ret
add
mov
movsl
ss
cltd
int3
lret
ret
inc
idivb
aad
fsub
sbb
lcall
mov
pop
xchg
mov
pushf
in
jne
les
stc
pushf
lret
xchg
lret
pop
fisubl
pop
sub
xlat
or
dec
jg
mov
outsl
xchg
icebp
jmp
adc
rcl
pop
in
and
inc
sbb
shlb
stos
sbb
int
inc
xor
cli
add
cs
jnp
loope
fcos
ret
aaa
xor
mov
daa
mov
movsl
rorb
outsb
insl
or
mov
cmc
dec
imul
sub
xor
and
in
jnp
stc
push
loope
movsl
jmp
in
repz
aad
test
jne
popf
loope
insl
shrb
stos
xchg
sbb
adc
sbb
lds
pop
xlat
add
iret
xchg
jb
out
mov
inc
mov
fsubl
out
test
ret
xchg
or
or
sbb
mov
popf
movsl
xchg
movsl
add
movsb
gs
test
cmp
popa
cmp
shll
stc
repz
je
pop
fbstp
negl
lret
out
out
sbb
inc
faddl
les
jmp
inc
rcrb
fadds
or
dec
mov
mov
mov
scas
addr16
test
xchg
loop
fidivrl
mov
into
dec
sbb
aad
adc
mov
and
jmp
loope
cmpsb
or
cltd
rolw
insb
jmp
es
push
sbb
jo
in
int
les
inc
fdivrs
or
in
jl
inc
xchg
xchg
loopne
xchg
jg
push
add
mov
sahf
iret
cmpsb
ja
add
adc
lret
imul
je
outsl
xchg
hlt
popa
push
repz
pushf
mov
jle
cmpb
add
leave
out
je
mov
clc
lods
stos
push
sbbl
rorb
leave
daa
das
fisubrl
not
adcb
mov
ss
iret
rclb
scas
sub
mov
mov
mov
lahf
rorl
pusha
clc
push
push
fidivrl
cltd
or
sbb
aad
pushf
inc
fcompp
mov
fisubs
push
inc
loopne
lods
stos
inc
cmpsl
je
mov
shr
cmpsl
inc
push
fmuls
stos
and
dec
in
push
das
sbb
inc
cmpl
repnz
mov
subl
xchg
cmp
pop
scas
sahf
cs
push
push
sbb
or
fmull
inc
adc
pop
sbbl
aas
ficomps
pop
mov
jns
pop
jl
mov
push
insl
sub
mov
decb
lock
gs
lret
icebp
test
bound
nop
in
cld
lret
jnp
inc
aaa
shr
imul
add
stos
add
inc
add
bound
dec
jge
dec
mull
cltd
pop
xor
cwtl
divb
adc
push
dec
lahf
jecxz
jbe
inc
cmpsl
xor
std
shlb
test
jb
xor
in
loope
mov
push
push
int3
pop
bound
cmp
cmpsl
rcrb
mov
fdivrl
ret
in
sbb
rorl
xor
add
inc
in
lods
in
sub
push
loope
out
sub
in
notb
insb
lods
scas
ja
dec
ss
push
or
push
sbb
scas
xchg
hlt
dec
in
je
sub
xor
add
mov
push
jge
mov
fistl
inc
push
out
int3
sahf
dec
addr16
sbb
dec
add
das
sub
mov
shll
or
add
mov
aas
sbb
sub
aas
call
or
stos
jp
mov
inc
mov
sbb
dec
outsl
imul
fcomi
jno
pop
sar
or
dec
fcmovnb
stos
arpl
push
adc
popf
lahf
loope,pn
in
cmp
sbb
mov
add
mov
dec
and
aad
mov
push
in
mov
jp
mov
mov
test
mov
jp
inc
pop
jmp
jns
push
adc
push
cmpsl
sete
pop
inc
or
sbb
aaa
cmc
add
in
pop
jae
insl
jmp
mov
cmpsl
fnsave
addr16
push
rorl
push
lret
pop
or
mov
fisttpl
movsw
arpl
lods
test
outsl
es
and
or
mov
js
stc
insl
adc
fisubs
adcb
fucomp
std
mov
ret
pop
adc
mov
pop
mov
pop
out
outsl
mov
mov
mov
jp
outsb
scas
lock
xor
pop
cmp
ja
pop
loop
clc
dec
cmp
pop
mov
stos
lods
scas
xlat
adc
movsb
lahf
adc
and
leave
out
test
sbb
jecxz
les
or
lret
into
cmp
xchg
add
jnp
repnz
lret
les
insl
mov
or
pop
test
outsl
hlt
fwait
adc
outsl
addl
lcall
lds
cmp
jg
cli
sahf
xchg
clc
cmp
dec
push
insl
mov
add
mov
dec
or
push
and
and
adc
sti
xchg
iret
pushf
and
cmp
jb
jne
int3
setae
and
sbb
sbb
xchg
ret
fisubrs
adc
aaa
out
adc
outsb
int
bswap
xor
dec
fwait
pop
pusha
lret
aaa
stos
shl
ret
xor
repnz
fdivrs
xchg
les
aad
cmp
mov
inc
cmpsb
or
push
or
dec
dec
test
clc
push
and
jg
lea
add
out
daa
outsl
cwtl
pop
into
cmp
outsl
sarl
sbb
sub
cmp
inc
jns
push
sbbb
rorl
outsl
inc
neg
xchg
push
imul
push
or
loopne
insl
sbb
pushf
adcb
push
fnsave
mov
or
or
in
push
cmp
dec
push
sti
jb
dec
ficomps
pop
daa
push
xlat
sti
shlb
jns
push
dec
daa
es
lock
adc
adc
insl
fcom
or
dec
or
out
js
shlb
pop
in
cli
xchg
cmp
mov
pop
pop
movsl
je
sahf
sub
lods
xchg
lods
cs
xchg
aaa
jmp
movl
movsb
push
insl
add
xchg
sbb
mov
xor
stc
dec
stos
fcom
mov
mov
add
jne
fnsave
mov
imulb
cmc
add
into
jno
js
mov
xchg
pop
dec
fwait
loopne
lods
add
mov
sarb
les
xor
test
xchg
vmovddup
or
lret
sub
jb
xor
popf
push
lock
cmp
mov
pop
jns
mov
fisubs
pop
andb
mov
mov
fimull
push
mov
xor
insl
fwait
test
adc
push
test
and
xorb
scas
push
push
add
pop
jo
xchg
int
jne
js
stc
and
sub
inc
xlat
inc
sti
add
sub
mov
cmp
fimull
loop
mov
push
cltd
flds
cld
mov
lahf
lods
jl
pop
stos
dec
roll
push
test
adc
ret
ds
xchg
insl
test
jo
ret
addr16
cmp
sbb
mov
aam
and
scas
push
adc
mov
fs
push
and
jg
lret
lret
pop
mov
hlt
sti
inc
dec
mov
push
dec
inc
fsubs
push
inc
mov
in
xor
or
test
mulb
imul
hlt
push
jns
popf
mov
cld
and
fwait
test
push
mov
adc
xchg
daa
push
push
adc
fwait
or
xchg
cmp
movsl
or
xchg
dec
ret
and
shr
mov
lret
lods
dec
mov
xor
push
jne
in
js
xchg
fld
add
movsl
aam
inc
mov
aam
push
mov
and
outsl
insl
arpl
nop
mov
xchg
jno
mov
icebp
les
cltd
push
mov
fbld
sbb
faddp
sub
int3
and
enter
fisubrl
loopne
xor
jns
push
push
ficompl
push
fistps
xor
je,pt
xchg
mov
xlat
dec
cli
and
aas
adc
clc
jb
cli
mov
sbb
sahf
cs
mov
lret
pop
mov
ja
mov
jne
inc
jne
jmp
pushfw
sti
lods
mov
insl
imul
subl
push
sbb
inc
lods
mov
jge
mov
cld
xchg
xor
jbe
inc
dec
xchg
dec
adc
incl
push
in
mov
mov
scas
loop
sub
loopne
sbb
pushf
push
popf
jns
cmp
mov
sarl
test
adc
popf
cmp
movsb
sub
loop
mov
sub
dec
mov
mov
inc
jb
cmp
sbb
push
aaa
pop
out
sub
call
lods
xchg
sub
cli
dec
jg
inc
adc
popf
cmpsb
mov
or
mov
or
dec
shlb
jb
jae
mov
clc
mov
fists
add
jae
push
into
sbb
cmp
pop
imul
mov
push
fisubrs
or
je
mov
sub
lods
daa
leave
mov
or
and
addb
outsl
xor
sbb
jne
in
jmp
push
push
leave
icebp
call
add
aaa
pminsw
out
dec
setb
aam
sti
in
sub
jbe
inc
in
aad
and
cmpsl
idivl
aad
mov
into
loop
cmp
repnz
loopne
pop
movnti
insl
out
addr16
push
cltd
xchg
pop
in
jbe
stc
in
inc
jnp
cmp
add
pop
add
mov
adcl
repz
or
dec
cmp
push
sub
aad
in
push
lcall
pop
and
mov
test
sub
or
jecxz
mov
pop
out
in
mov
cmpsl
xor
es
outsb
jns
mov
jge
mull
inc
fadd
out
testb
les
aaa
in
sbb
sub
loope
cmp
pop
jle
lods
in
stc
add
mov
loope
mov
jo
cmp
aam
popa
outsl
mov
mov
filds
les
add
clc
xor
pushf
fidivrs
repz
inc
repz
imul
add
add
lret
and
loop
movswl
and
gs
push
in
mov
mov
fneni(8087
pop
push
sbb
jno
mov
pushf
and
cmp
cmpl
fcmovbe
dec
es
xor
push
imul
iret
jns
add
div
xor
push
ds
inc
mov
inc
repz
adc
mov
mov
cwtl
mov
mov
jmp
inc
daa
fildll
sbb
inc
add
sub
inc
addr16
or
in
cs
mov
fldenv
cmp
jecxz
mov
and
daa
pushl
or
lock
adc
jmp
add
loopne
inc
rolb
fcomp
popf
mov
lods
stos
jl
cmp
popa
jnp
std
mov
push
pop
dec
fst
cmpb
arpl
stos
push
outsl
idiv
sbb
out
mov
popf
push
push
stos
pusha
mov
fistpl
movsb
xchg
adcb
jg
jecxz
out
sti
rorb
or
fnsave
repnz
xchg
sbb
clc
adc
cmp
dec
mov
sbb
fsubr
dec
lock
sbb
sbb
xchg
in
mov
push
aam
sub
sub
icebp
xchg
mov
sbb
jp
fistl
cltd
xrelease
pop
xor
mov
xor
or
jl
out
icebp
inc
stos
sbb
xchg
dec
leave
test
aad
xor
mov
push
mov
adc
or
add
sub
bound
aam
xlat
scas
pop
xor
adc
bound
in
aam
jae
add
fdivrs
pop
mov
xchg
jne
sub
cld
and
or
ret
outsl
mov
cmc
negb
pcmpgtd
int3
cld
ds
adc
es
out
das
fwait
xor
jmp
dec
xchg
push
pop
outsl
mulb
stos
mov
fdivrl
dec
sub
jo
movsb
mov
mov
hlt
cmpb
int3
dec
out
sbb
les
js
lcall
sub
add
cld
sahf
mov
jo
scas
jmp
mov
xchg
jbe
inc
stos
or
fwait
std
aad
lock
sbb
lcall
lahf
dec
inc
jl
dec
movsl
movsl
jo
mov
scas
pop
in
mov
jmp
arpl
xchg
and
jae
adc
andb
mov
testb
mov
mov
out
sub
lcall
jo
mov
jne
mov
xor
test
xchg
sub
les
into
and
adc
pop
loopne
or
gs
mov
cmp
push
nop
jmp
fldcw
lods
stos
fistps
outsl
out
mov
xor
mov
test
in
dec
sub
sbb
jae
push
fdivrl
cmp
and
and
lods
mov
cmc
sar
push
push
pop
popa
push
dec
sti
jns
mov
inc
test
fucompp
das
jbe
push
cmp
ret
mov
std
lock
mov
movl
jecxz
and
jo
pop
outsl
insb
push
shrb
inc
fistpl
je
sub
adc
push
and
cmpsl
cs
divb
out
mov
sti
int3
rcll
mov
lret
push
jp
out
sub
aaa
cltd
add
add
jp
data16
or
mov
sbb
out
sub
cmp
and
adc
pop
jge
cld
dec
push
pop
in
pop
shll
stc
mov
das
pop
pop
xchg
jno
add
cld
lcall
sbb
in
mov
jp
push
pop
stos
add
repnz
aam
out
ret
gs
and
pop
imul
movsl
and
xchg
aad
jge
test
xchg
inc
negb
or
or
xor
test
mov
ljmp
xchg
or
lcall
rorl
jmp
pusha
cmpb
sbb
lret
movsb
aas
mov
jbe
xor
push
lds
sbb
repz
mov
cmp
mov
xchg
add
jecxz
mov
mov
sbb
ss
cltd
insl
push
inc
sub
pop
movsl
mov
mov
incb
ret
push
and
out
shlb
lret
pusha
push
push
iret
jge
xlat
in
pop
mov
jbe
mov
aad
rcll
addl
inc
ljmp
xchg
rcrl
aaa
pop
movsl
aad
daa
mov
js
cli
outsb
mov
fs
push
cmpsb
push
lret
popf
dec
xor
add
in
mov
jg
adc
in
lret
addr16
lahf
rorb
jge
adc
pusha
add
mov
mov
fstl
dec
jnp
or
xchg
sub
sbb
loope
in
xchg
inc
cli
jno
loope
aas
fadds
xchg
loop
inc
ds
mov
and
sarl
scas
jb
push
add
mov
aas
cs
shll
push
and
pusha
stc
ljmp
aaa
pop
insb
sub
lea
outsl
pop
mov
mov
jmp
xchg
xchg
aas
std
xchg
pop
clc
aaa
xchg
push
int3
push
and
cmp
inc
aas
xchg
cltd
dec
mov
scas
dec
sub
outsb
sbb
cmp
dec
fwait
or
sbb
ds
movsl
jbe
hlt
inc
mov
xor
es
pusha
dec
push
repnz
pop
outsb
lret
pop
popf
sarl
mov
mov
sub
xor
add
or
cmp
je
push
jmp
jne
shrb
pusha
fs
lcall
dec
ffree
xchg
sarb
popa
bound
and
and
insl
test
mov
mov
stc
add
push
test
out
push
cld
xchg
icebp
jge
popf
movsb
dec
xor
repnz
sbb
xor
cmc
mov
xor
outsl
cmp
enter
xchg
adc
xor
and
add
pop
cltd
iret
pop
mov
cmpsb
stos
repnz
push
cmpsb
fistps
jmp
sarl
ret
mov
sub
xchg
mov
in
les
or
xchg
into
mov
adc
test
push
aaa
push
dec
push
imul
push
add
xchg
iret
and
das
xor
fs
test
pop
and
int
fidivl
out
fsubr
test
add
cmpsb
mov
dec
mov
scas
imul
mov
jo
cmp
inc
das
dec
xchg
andb
jb
scas
xchg
rcrb
das
test
aaa
inc
int3
mov
sub
or
addr16
mov
andl
pop
int3
dec
test
jbe
mov
cmp
repz
and
loop
add
push
push
loopne
push
repnz
mov
stos
shlb
cld
push
lret
adcb
fldcw
or
adc
dec
icebp
jp
push
and
ja
mov
push
inc
pusha
outsb
push
aam
jbe
push
jge
sti
and
mov
ljmp
fidivl
push
jno
jne
pushf
xor
or
xor
test
xchg
and
dec
sbb
jmp
loope
std
shrl
addr16
fcoml
cmpsl
fdivrp
pusha
push
aad
mov
fadd
pop
push
push
or
jl
mov
movsb
mov
rol
adc
dec
int
daa
out
lock
jg
cmpsb
daa
aaa
push
adc
into
mov
out
incb
and
int
test
add
iret
cvttps2pi
sub
xchg
cwtl
loopne
xor
jle
mov
push
xchg
pop
lahf
mov
aad
imul
mov
jb
adc
test
loope
jmp
pop
push
lret
aas
jo
outsl
cmp
mov
aaa
or
jns
into
es
sbb
mov
lea
push
cmp
jecxz
or
push
and
scas
cld
pop
xor
mul
mov
add
sbb
dec
sbb
inc
idivb
icebp
je,pt
jl
loope
scas
bnd
repnz
cmpsb
ficoms
test
ss
popf
sbb
mov
pop
mov
sub
fwait
sub
mov
stc
cmp
and
push
cmpsl
or
lcall
inc
sarb
or
scas
stos
jl
cmp
xchg
mov
xchg
outsl
dec
daa
mov
test
dec
xor
icebp
mov
adc
xor
or
push
push
cmpsb
mov
dec
mov
enter
mov
dec
stos
roll
popf
daa
add
notl
sub
mov
cwtl
cmp
loope
bound
roll
aaa
cmp
dec
mov
xchg
jecxz
adc
dec
out
add
dec
pop
pop
pop
add
das
push
insb
push
pop
aas
shrl
mov
arpl
cmp
cmpsl
call
bound
pop
sub
in
cli
pop
dec
movsb
add
adc
inc
ss
xlat
adc
push
cmpsl
cmpsl
xlat
insl
lcall
mov
pop
push
push
and
mov
in
jmp
pop
sbb
cwtl
imul
lock
inc
adc
mov
gs
add
cli
divl
or
cmc
jns
enter
out
loope
repnz
aas
aaa
mul
movsl
aas
movsb
repz
xor
sub
xor
aaa
test
adc
mov
rclb
sub
and
out
xbegin
xor
sub
cmp
pop
int
fisttps
jp
mov
xchg
sti
loopne
xor
lret
testb
mov
sub
push
ret
jecxz
add
pushf
aaa
mov
out
xchg
pop
in
pushf
and
mov
sbb
testb
fists
add
xor
and
aas
jecxz
jno
xchg
push
mov
push
cmp
push
into
sub
push
test
cmp
dec
or
outsb
inc
dec
mov
mov
lea
popa
push
daa
cs
shll
push
mov
jl
sub
decb
shll
pop
mov
idivb
and
sbb
push
stc
dec
jb
mov
ret
inc
cltd
je
fsubrl
ret
stc
nop
cmp
sub
mov
js
jns
add
es
ret
les
addr16
xor
xchg
inc
int
mov
inc
aas
push
push
mov
cmp
daa
dec
add
dec
inc
fbld
sbb
jge
ds
pusha
xor
adc
sbb
inc
iret
xor
adc
or
push
loope
dec
into
lods
xchg
cmp
iret
or
int3
push
cmp
jb
or
cmp
divb
stc
jb
mov
mov
mov
insl
dec
lret
sbb
lahf
xchg
jge
sub
clc
leave
xchg
jns
leave
icebp
in
cld
outsl
add
add
out
fcompl
fs
frstor
cmc
lds
and
add
rcrl
push
mov
xchg
aaa
cmpsl
int3
notl
outsb
dec
jecxz
push
repnz
jno
add
nop
dec
out
clc
push
dec
or
fcoms
xchg
pop
xchg
subl
repnz
push
xchg
lret
push
dec
or
stos
mov
xchg
push
adc
xor
or
clc
mov
push
mov
in
add
add
aas
out
adc
jmp
loopne
fsubs
sahf
or
outsb
outsb
shrl
inc
sbb
aas
call
fldcw
sbb
sub
cmpsl
sbb
adc
cmp
test
mov
lock
out
mov
rcrl
mov
jns
loope
xor
mov
stos
ret
pop
lds
xchg
sub
add
loopne
daa
sub
test
jecxz
inc
xchg
lret
fs
inc
or
sbb
and
imul
mov
xchg
push
jnp
lret
js
enter
adc
ja
int
sbb
dec
movb
sub
dec
repz
inc
pusha
scas
popa
and
sbb
sahf
cli
push
pop
sbbl
int3
fnstcw
loopne
dec
call
popf
mov
sub
les
adc
fstps
push
jg
and
add
jne
xor
jo
add
in
mov
in
push
push
rol
adc
es
jmp
mov
mov
aas
adc
push
loop
imul
in
xchg
leave
dec
ds
ret
xor
fs
inc
enter
int
and
cmpsb
ret
add
and
jp
mov
inc
inc
adc
jle
add
hlt
orl
mov
leave
inc
mov
sbb
jb
inc
jge
and
insb
out
nop
out
imul
int
dec
hlt
push
lods
dec
xlat
or
mov
xor
add
sub
ret
imul
sub
or
sti
and
inc
in
and
fs
xor
mov
pop
fcoml
js
sbb
lret
push
lea
mov
jmp
ret
leave
mov
das
mov
and
aas
jecxz
notb
cwtl
insb
fs
xchg
mov
ss
push
xchg
fmull
roll
aad
sbb
movsl
popa
scas
cmp
sbb
jb,pt
enter
and
cmp
into
nop
pop
add
je
les
jb
push
adc
jae
mov
mov
cltd
inc
mov
mov
pushf
push
icebp
jb
shll
arpl
aas
dec
dec
dec
pop
push
arpl
ret
cmc
rolb
cmp
or
add
cmpsb
addr16
leave
lods
mov
mov
lfs
inc
xchg
or
test
rorl
imul
mov
add
aam
pop
popa
xchg
dec
push
shr
push
sti
imul
iret
jle
push
xlat
ds
mov
xor
cld
ret
pop
fimull
push
mov
cmpsl
jmp
push
pop
sbb
movsb
popa
adc
jmp
leave
call
cmc
jne
dec
lahf
scas
ds
lahf
pop
in
add
jmp
mov
cwtl
push
loopne
dec
lea
into
add
das
mov
bound
xchg
stc
fadds
shll
inc
mov
xchg
mov
mov
jecxz
stos
sub
fs
cmp
and
push
fisttpll
mov
popa
in
cld
out
mov
pop
mov
mov
jge
cmp
lea
rcll
pop
mov
jmp
pop
rcrb
cs
lea
mov
insb
and
push
or
inc
jmp
fisubrl
jl
fldt
add
daa
lods
xchg
mov
cld
ss
mov
loope
nop
mov
pop
xchg
jl
ss
stos
cmp
or
cmpb
xchg
jns
fidivrs
xchg
mov
mov
fcom
out
adc
dec
adc
ret
cmp
add
clc
xchg
test
pop
dec
pop
ret
repnz
mov
ja
mov
mov
outsb
lret
and
mov
cmp
std
test
and
stos
lahf
sub
popa
fs
mov
pop
mov
sub
cld
and
adc
lret
aas
movsb
xchg
shll
int3
jge
and
or
jae
mov
or
movsb
mov
inc
popa
shll
sahf
pop
dec
test
jo
xchg
cmpsl
jecxz
loope
mull
in
cld
adc
dec
pop
sahf
add
xchg
sub
aad
push
js
in
add
push
mov
into
arpl
std
mov
psubsb
jne
movsl
fwait
inc
pop
pop
or
mov
cmp
cli
test
lods
jb
imul
adc
ljmp
stos
jle
sub
nop
xor
std
and
xor
mov
in
sti
je
lods
cld
outsb
rclb
loopne
loope
push
pop
out
and
loopne
shlb
iret
lea
cmp
enter
pop
repz
insb
sti
in
mov
aad
imul
sbb
ror
and
push
out
mov
outsl
mov
push
sub
shlb
imul
push
push
sbbb
inc
cmp
xchg
gs
out
addr16
pushf
mov
addr16
scas
int3
repnz
int3
xbegin
cs
push
and
mov
jle
addr16
ja
insb
lea
mov
push
jbe
mov
imul
and
data16
lcall
sbbl
outsb
loop
xor
sarb
dec
xchg
and
mov
and
add
sub
jne
inc
shr
lcall
and
xor
or
adc
push
lahf
mov
lds
push
add
pushf
test
sub
arpl
repz
push
ret
daa
adc
dec
loopne
negl
xchg
pop
repz
xchg
lahf
roll
cwtl
xor
cmp
clc
dec
ficoml
mov
push
jge
xchg
scas
aaa
cmp
jecxz
jle
sbb
and
pushl
lahf
divb
and
adc
jmp
sbb
fisttps
mov
inc
adc
iret
mov
mov
sbb
sahf
pop
pushl
mov
xor
out
pop
sub
dec
xor
call
lods
imul
jno
and
mov
stos
xor
mov
movsb
popa
mov
inc
int3
or
adc
push
push
imul
dec
inc
mov
jle
insb
cwtl
add
xlat
pop
xor
mov
mov
inc
ret
call
sbb
xor
jl
rcrl
pop
pop
and
inc
pop
shrl
jo
ss
jp
pop
cmp
das
icebp
mov
mov
test
pop
loopne
lcall
insb
mov
or
lds
sub
aad
leave
and
pop
cmp
arpl
and
cmp
lea
leave
jmp
sub
lea
mov
xchg
ret
test
fnsave
sar
cs
int3
xchg
lret
or
cmp
ds
jle
pop
sub
inc
mul
dec
jns
sub
sbbl
and
push
hlt
jo
push
push
aad
sbb
mov
pusha
ret
push
aas
and
and
xlat
les
stos
fsubrs
or
xchg
movsb
pop
mov
xor
into
pop
insb
mov
fsub
fcmovnu
clc
aad
inc
mov
mov
sti
movsl
push
cwtl
in
int
mov
iret
stos
out
mov
push
mov
mov
jb
andl
xor
loope
repz
negb
fisubrl
sbb
pop
cli
cld
xchg
pop
stos
in
and
shlb
mov
adc
push
loop
and
xchg
sbb
push
fiadds
outsl
ret
das
xchg
ss
gs
test
popa
loopne
je
push
cmpsb
out
cmc
sub
fldcw
mov
imul
test
lods
adc
notl
sbb
xor
mov
mov
xor
sbb
xchg
dec
je
lock
sahf
das
inc
mov
ror
cmc
shrb
addl
ss
mov
fisubrl
cs
mov
sbb
sbb
add
inc
mov
bswap
jg,pn
andb
mov
pop
lfs
mov
push
dec
cli
mov
ret
inc
adc
xchg
cmp
je
rorb
pusha
cmp
mov
cltd
fstpl
or
dec
out
sti
xchg
popa
lret
fistpl
test
cmpsb
sti
ds
mov
jae
jo
cmpsb
dec
lods
movsl
leave
enter
push
xchg
std
jmp
sub
inc
sub
out
stc
mov
dec
pop
mov
cmp
xchg
out
cltd
movsl
xor
xor
ss
fldenv
cmp
xchg
lods
mov
in
mov
mov
cmp
insb
jb
loope
sbb
mov
cmp
fmull
mov
cmpsl
popl
or
push
cltd
push
outsl
faddl
jecxz
jecxz
stos
rclb
inc
cmp
std
mov
push
cmc
add
add
jg
inc
mov
fldcw
cmp
das
dec
inc
cmp
in
shr
flds
cmp
test
adc
lcall
xchg
jmp
mov
mov
sub
xchg
sub
sti
xchg
xor
icebp
nop
test
or
js
lcall
addl
add
inc
stc
imul
sub
push
ficoml
push
insb
outsl
insl
iret
and
mov
popa
or
packuswb
jbe
loopne
mov
ror
dec
xor
pop
mov
jp
xchg
mov
xchg
adc
dec
xchg
jno
cli
pushf
test
push
scas
addr16
jne
jnp
nop
aas
pop
add
loop
iret
sub
popa
insl
xor
cmpsb
aaa
push
inc
and
jne
pop
xchg
inc
js
test
cmp
aad
not
fldl
lea
push
xor
jo
inc
lock
and
pop
repz
push
push
cwtl
mov
pusha
loop
iret
sbb
stc
dec
int3
filds
stos
scas
lcall
jno
push
push
lret
pushaw
mov
inc
hlt
pop
pop
pusha
popf
dec
add
add
sarb
hlt
stos
lahf
divb
in
fidivl
sbb
lret
xlat
jne
lea
mov
sub
inc
das
jp
pop
push
xor
xor
sub
js
pop
mov
jge
add
push
test
test
push
imulb
clc
aaa
lret
mov
fists
jecxz
push
cmp
cmp
int3
mov
fwait
jmp
mov
dec
mov
cs
hlt
xor
mov
sbb
push
pop
and
jp
dec
adc
lret
mov
xchg
scas
mov
jmp
adc
xlat
test
imul
decb
in
or
mov
fs
imul
mov
jo
outsl
lock
pop
lret
mov
in
and
data16
xchg
inc
data16
cltd
mov
xor
les
ret
jl
pop
cwtl
push
add
or
pop
pop
int
mov
push
sub
xorl
outsl
push
cltd
sbb
ja
cld
cmp
jo
rorl
data16
add
setl
cwtl
jnp
jbe
lret
lock
sbb
loop
les
fnstcw
jae
out
lds
stc
pusha
aam
lret
jg
cltd
fsub
mov
inc
sub
out
cmpsb
incl
and
sti
mov
adc
imul
adc
inc
jl
dec
jp
fdivs
sub
cld
fidivrs
cwtl
sahf
stc
push
cmp
or
jecxz
pop
cmpsb
adc
lcall
push
push
sub
and
subb
jge
adc
adc
jnp
fwait
adcb
dec
mov
cmp
dec
sbbl
inc
and
pop
pop
xorb
fdivl
in
addr16
notl
in
popa
mov
jp
dec
sub
jae
sbb
lret
cmpsb
and
jg
dec
add
hlt
jmp
fsts
and
cli
rclb
jmp
orb
pop
lock
mov
pop
jecxz
xor
ja
cltd
add
pusha
enter
jo
loopne
shrb
sbbb
fxch
mov
and
mov
movsb
sub
ret
add
add
lea
dec
and
out
or
fs
push
out
mov
dec
push
loop
call
insl
mov
adc
scas
scas
jl
out
jno
mov
clc
xchg
dec
nop
ficoml
sbb
xchg
fs
sub
mov
mov
or
in
gs
call
aas
mov
lock
jns
in
daa
mov
adc
pop
lahf
lods
cmc
lods
mov
jg
scas
mov
cmc
push
jl
aaa
sahf
mov
mov
icebp
push
push
daa
outsb
push
push
pop
jmp
sub
push
xchg
pop
inc
mov
inc
cmpsl
flds
jns
subb
cmpsb
mov
fisttpl
and
dec
jl
xlat
adc
inc
jnp
or
adc
mov
fcomps
icebp
xchg
lock
adc
add
or
pop
in
sub
int3
js
mov
test
out
adc
dec
sarl
movsb
rcrl
cmpsb
mov
loopne
sbb
orl
into
xor
mov
ja
inc
ja
je
pop
gs
add
jmp
sbb
xchg
adc
pushf
push
add
int
fsubrp
push
sbbb
pop
jmp
jl
mov
movsb
mov
mov
cwtl
mov
aaa
cmp
sub
push
xchg
dec
jb
cmp
pop
icebp
or
cmp
cmpsb
outsl
push
es
adc
ficoms
pop
jg
pop
daa
pop
mov
cwtl
push
push
dec
pop
orl
lock
pop
adc
mov
lds
jg
lock
xlat
aam
pop
repnz
mov
push
std
lods
dec
and
mov
icebp
rcrb
xor
xchg
dec
xchg
mov
cld
cli
lds
movsb
insb
sub
scas
outsl
scas
pusha
lds
push
xchg
lcall
into
and
and
dec
loop
mov
jae
std
mov
xor
test
and
mov
sub
out
mov
cmp
push
nop
inc
xchg
outsb
ss
mov
mov
or
sbb
lret
in
outsb
imul
call
lock
lcall
pop
adc
fmuls
daa
subl
inc
and
add
add
inc
into
push
hlt
mov
and
jbe
jg
push
mov
add
test
or
bound
call
pusha
imul
imul
and
pop
das
test
dec
sbb
adc
add
mov
cmc
dec
dec
xor
and
fld
jo
cmp
cld
mov
xchg
pushf
and
test
dec
pusha
in
sbb
stos
and
rorl
int3
shr
je
pushf
in
ja
xchg
inc
xchg
mov
mov
dec
or
inc
jne
out
hlt
push
fists
out
stos
add
shrl
imul
sub
inc
outsl
add
nop
cmp
loope
insb
xor
int
mov
cmpsl
mov
pop
dec
imul
fildl
pusha
paddsw
fmul
dec
enter
mov
push
pop
inc
popa
test
xchg
mov
mov
andb
repz
xchg
mov
stos
nop
loope
inc
mov
popf
dec
and
stos
roll
sub
inc
jmp
scas
repnz
fwait
dec
sub
insb
inc
push
dec
xor
std
xlat
out
notl
pop
push
lods
in
jno
sahf
hlt
mov
aaa
lahf
sub
fwait
cmpsl
add
xor
jmp
push
stos
jle
daa
or
dec
cmpsb
jb
mov
repz
test
sub
insb
sti
dec
mov
repz
jb
inc
leave
pusha
sub
pop
insl
cld
ljmp
xor
fsubr
das
jmp
push
fwait
add
mov
sub
je
or
dec
dec
xor
test
mov
pop
mov
or
pop
sub
into
pop
mov
in
stc
rcrl
mov
jnp
pushl
cli
push
test
lea
addr16
popf
daa
stos
clc
movaps
pop
ljmp
or
xchg
pop
stc
fisttpll
outsb
jmp
push
and
mov
in
jnp
insl
es
sub
in
add
inc
pop
outsb
outsl
cs
mov
sbb
andb
mov
mov
lea
lcall
adc
push
and
enter
pop
push
pop
mov
addr16
das
das
sti
lahf
call
and
lock
je
jecxz
cmpsb
fisttpll
xchg
leave
or
cmp
mov
jne
push
push
pop
mov
lods
inc
mov
ss
hlt
cmp
mov
insl
mov
pop
sti
arpl
xor
inc
test
mov
sti
arpl
repnz
adc
jecxz
xchg
movsl
ja
mov
insl
xor
out
mov
sbbb
iret
jo
ret
ret
dec
std
subb
in
cmp
jbe
xchg
fmuls
mul
loopne
sub
jge
je
insb
lock
pusha
push
or
mov
adc
mov
sarl
mov
dec
mov
xor
or
adc
lods
xchg
push
jge
jnp
xchg
dec
mov
int
mov
orl
clc
and
dec
lods
lods
nop
cli
stos
das
jmp
jp
jl
stc
dec
jle
in
into
and
sarb
xor
out
sbb
jae
jmp
mov
je
dec
jmp
sbb
mov
lock
or
push
movsb
pusha
ror
outsl
out
add
push
pop
jmp
pusha
lea
mov
dec
mov
icebp
fstl
ret
mov
lea
sub
mov
sbb
fwait
repz
into
imul
ret
lea
dec
push
sbbb
push
or
cs
into
xor
mov
sbb
mov
and
sbb
mov
xchg
out
cwtl
xchg
adcl
out
jns
pop
jle
mov
jmp
pusha
mov
cltd
out
movsb
lahf
or
arpl
push
cs
lods
pop
and
stos
mov
sbb
insb
inc
mov
dec
mov
leave
aam
pusha
cmp
add
mov
lcall
popa
in
and
subl
inc
mov
fists
nop
adc
rcll
cmc
sub
dec
outsl
ss
rcr
imul
xchg
inc
jo
cs
cld
scas
in
rorl
imul
div
mov
mov
es
mov
add
insl
pop
xor
fimuls
les
xlat
push
xchg
sub
adc
popa
adc
test
cmp
xlat
or
jae
and
mov
or
loopne
dec
es
xor
mov
inc
xor
add
aas
pop
inc
mov
mov
dec
push
shl
jg
jge
mov
aaa
and
xor
ret
out
mov
inc
test
sbb
jl
scas
inc
xchg
and
sbb
dec
push
adc
leave
in
int3
repnz
addl
repz
cmp
test
mov
xor
sub
add
sub
nop
add
ror
cld
mov
pop
xchg
xchg
cwtl
repnz
leave
add
adc
mov
in
sbb
mov
pop
jmp
jg
js
insl
call
out
jnp
pop
addl
sub
jmp
xor
adc
push
imul
lods
fs
push
xchg
mov
or
mov
ljmp
pop
and
sbb
stc
mov
add
xchg
xchg
dec
cs
xor
or
iret
xchg
lds
sti
push
adc
les
dec
ret
push
insl
sub
xchg
mov
mov
rcrb
add
icebp
inc
scas
in
dec
loop
pop
mov
into
nop
mov
sbb
ret
lock
iret
dec
call
movsb
xor
sub
fldcw
mov
and
aaa
out
cmp
lds
add
mov
pop
mov
pop
movsl
mov
inc
cltd
mov
sbb
sbb
sbb
sti
outsb
loope
jg
jg
jnp
add
loopne
popa
xchg
dec
ja
shr
sub
dec
stc
cmc
stc
movsl
stos
sbb
inc
push
pop
pop
nop
xorl
push
lods
cli
xchg
dec
rclb
mov
shlb
pop
push
adc
sbb
cmp
push
popf
jno
or
lods
lret
dec
add
xor
mov
xchg
mov
sbb
int
pop
xchg
mov
ficompl
ret
mov
int
push
test
insb
jo
inc
scas
inc
push
mov
in
iret
sub
add
aaa
lods
into
cmpsl
je
sqrtps
scas
sub
stos
jp
outsl
sbb
sbbl
sub
ja
inc
add
mov
fsts
cmp
test
push
inc
lods
xchg
dec
cmpsb
aad
push
loope
inc
fs
push
mov
pop
push
rcrb
fsubl
addb
addr16
outsb
jne
inc
fidivl
loopne
mov
scas
js
push
push
bnd
daa
out
or
call
jnp
fisubrs
lock
xchg
shlb
dec
xchg
ja
out
cmc
mov
xchg
iret
xchg
popa
push
cld
cmp
push
insb
push
int3
movsb
jg
push
lahf
mov
daa
cltd
enter
lock
repnz
adc
cmp
xchg
movb
xchg
gs
jo
in
sar
xchg
insl
mov
arpl
sbb
cld
ret
jbe
gs
push
push
roll
xchg
jmp
lods
btl
decl
lahf
gs
cli
lock
cltd
inc
lods
lock
testb
popf
fsubr
jnp
outsl
mov
jne
subb
ffreep
jae
xor
iret
mov
es
jle
push
mov
xchg
mov
add
mov
pop
inc
pop
ss
jo
jge
adc
aas
adc
push
ret
mov
sub
push
add
movsb
sarb
pop
push
push
addr16
inc
out
xchg
lret
mov
aas
cli
cltd
fdivl
es
mov
cmp
aaa
lock
jle
test
pop
and
pop
sbb
and
inc
loopne
stos
adc
mov
cmpsl
lahf
inc
fs
jne
imul
dec
stos
xchg
imul
inc
pop
mov
dec
pushf
cvtpi2ps
xchg
std
xor
pop
mov
sbb
in
fsubrl
cmp
addb
enter
push
jecxz
mov
subl
lods
lcall
mov
push
enter
dec
lcall
gs
xchg
inc
dec
dec
cmp
and
sub
cmc
pop
jp
xor
aas
inc
cmp
adc
call
jns
push
xchg
inc
jecxz
or
insb
sub
or
in
popf
out
jmp
cmp
pop
sbb
xlat
push
stos
jecxz
jl
insb
rolb
ljmp
pop
dec
xor
loop
fs
cmp
pop
xor
and
cmpl
cmp
pop
and
and
adc
lea
sahf
out
lods
xchg
loop
jne
shll
jge
push
push
ds
fiadds
mov
sbb
push
mov
cmc
push
pushf
aaa
push
into
test
inc
sub
jle
inc
fildll
lret
adc
mov
jns
adc
es
scas
sub
sub
data16
xor
mov
mov
inc
ss
fs
bound
pop
sbb
mov
jmp
int3
push
fs
inc
jg
or
cmpsb
imul
xlat
cmp
xor
jo
jp
sbb
fsubl
jmp
inc
mov
mov
cmp
mov
cs
jno
ds
dec
mov
jl
xchg
push
sbb
or
addr16
fmul
adc
cmc
and
orb
std
dec
decb
test
sahf
lcall
loope
dec
stos
dec
inc
popa
dec
sbb
iret
ret
cmp
cmc
pop
mov
inc
arpl
fildl
jle
or
mov
adc
sbb
xchg
mov
enter
xchg
pop
or
stos
int3
clc
mov
cltd
stc
inc
pop
and
js
movsb
std
in
push
push
cmpsl
and
inc
mov
sbbb
dec
adc
mov
xchg
shlb
aad
push
movsb
faddl
xor
mov
ret
inc
int3
movsb
xchg
nop
pop
xchg
test
pop
shrl
inc
test
jp
pop
pop
inc
or
dec
sub
adc
sub
mov
ss
rorl
and
leave
pop
mov
mov
cli
shrl
arpl
inc
mov
fs
rcrl
pop
push
pop
jo
popf
loop
mov
sub
xor
daa
jo
fnstenv
test
xchg
pop
pop
sbbl
fnstcw
loope
loope
dec
jne
out
loopne
pop
addr16
inc
add
repnz
cmp
or
mov
cltd
jle
mov
cmp
push
enter
mov
in
ds
jb
adc
ret
inc
aas
outsl
aam
dec
ljmp
gs
sub
dec
aad
ret
jmp
push
add
push
test
popa
shrb
pop
ret
mov
mov
mov
cmpsl
adc
mov
pop
jb
add
jmp
and
xor
test
out
and
dec
cmp
sbb
insl
int
shll
mov
jo
insb
pop
cwtl
and
mov
addb
adc
cltd
mov
xchg
or
and
call
sbb
and
jge
int
cmp
ret
imul
or
and
xchg
xor
bound
jnp
mov
pop
insb
push
adcl
int
lods
cmp
lret
add
lret
add
mov
dec
mov
test
sbb
inc
ss
add
into
mov
push
stos
aas
lea
mov
push
loopne
xor
mov
addl
shlb
sti
mov
mov
repz
fsub
lea
inc
in
pop
adc
dec
stos
jns
pop
icebp
jl
or
popfw
pop
mulb
mov
mov
in
pop
addr16
fildll
xchg
ret
jp
je
cmp
lcall
adc
push
pop
fcomps
dec
das
adc
iret
imull
out
xchg
fldcw
or
jne
cmpsb
test
xchg
dec
je
dec
hlt
dec
jg
push
push
xlat
ljmp
mov
dec
mov
outsb
xchg
dec
adcl
fistpl
rol
mov
scas
movb
xrelease
out
js
fistl
sahf
mov
sbb
insb
inc
push
dec
mov
xor
or
shlb
je
arpl
rolb
jb
inc
bound
orl
je
cmpsl
dec
outsl
aaa
push
clc
and
dec
mov
enter
dec
sbb
sbb
stc
les
out
cmp
jbe
xchg
into
cli
cmp
jle
add
gs
dec
mov
fsubrs
gs
xor
stos
cmp
xlat
fucomip
fwait
cmpsl
daa
push
jg
hlt
sahf
adc
add
ret
jno
aam
or
mov
popf
add
adc
scas
stos
inc
movsl
xchg
dec
pop
loopw
inc
lock
adc
popf
pop
imull
or
dec
mov
repnz
mov
jl
arpl
rorb
movsb
iret
je
pop
into
daa
pop
and
pusha
fstl
cmp
inc
add
es
xchg
inc
mov
cld
js
sbb
mov
data16
arpl
sub
cmpsl
adc
repz
mov
pop
push
and
ds
sahf
sub
sarl
mov
jmp
jae
lcall
in
int3
dec
fisubs
sub
int
and
popf
or
or
mov
ret
test
or
shr
stos
sbb
mov
es
imul
pop
aaa
stc
pop
sub
xor
push
jecxz
add
fdivrp
in
test
fwait
popf
cmc
sbb
mov
flds
pusha
outsb
add
mov
or
mov
scas
pop
rolb
lock
fisubrs
push
das
pop
decb
outsl
mov
in
mov
lret
pop
rclw
int
adc
mov
mov
cld
out
subl
pop
sahf
aad
xchg
icebp
mov
fsts
cwtl
test
js
pop
or
cld
mov
movsb
pop
pop
loope
scas
xchg
dec
std
fwait
decb
leave
and
loopne
and
mov
xor
mov
mov
mov
jne
fidivl
loopne
adc
fisubrs
xchg
por
outsl
js
std
adc
add
dec
add
dec
lods
int
in
mov
cmp
add
dec
sbb
test
adc
mov
add
mov
cmp
mov
mov
lods
inc
fisubrl
jne
arpl
jle
dec
test
jnp
movsb
dec
cmp
mov
and
sbb
sahf
imul
adc
jp
pop
lds
outsb
inc
out
pop
jae
jle
mov
pop
dec
js
push
jle
push
das
aas
or
iret
pushf
sbb
ss
xor
rcr
push
pop
pop
pop
cwtl
sub
jbe
lcall
mov
sub
fcmovbe
xor
fistpl
pop
mov
push
nop
dec
mov
cli
mov
or
jmp
jecxz
push
mov
fidivrs
jp
xchg
int
lods
mov
outsb
int
ret
xchg
repnz
xchg
fimuls
aaa
idivl
popa
sub
push
or
mov
scas
stos
into
lock
pcmpeqb
icebp
sbb
popf
pop
std
sahf
dec
lahf
dec
mulb
sbb
sub
add
push
and
ret
cmp
je
mov
cmpsb
cltd
out
pop
sbb
in
adc
dec
rorb
iret
sub
nop
push
out
inc
cmp
mov
mov
in
imul
iret
jl
pop
stos
and
and
mov
stc
add
daa
aad
sbb
addr16
add
xchg
mov
adc
fcomps
cmp
or
test
or
test
mov
jbe
sbb
push
sub
jmp
mov
outsb
cltd
ret
dec
inc
es
mov
sub
xchg
mov
or
out
in
jnp
and
jg
loopne
stc
or
push
adcb
test
adc
inc
movsl
push
cwtl
popf
add
cmp
cmpsl
into
daa
outsb
lods
push
mov
dec
add
subl
insb
push
xor
rorb
xor
sahf
nop
xchg
negl
inc
stc
inc
cmp
aam
insb
cltd
pop
sbb
sbb
mov
not
scas
cmpsl
in
dec
sbb
int
xchg
bound
lret
or
push
xchg
pop
std
in
mov
sbb
or
jno
cmp
scas
stc
push
adc
ds
add
sti
sbbl
repnz
cwtl
arpl
insb
dec
scas
inc
lcall
jg
daa
ljmp
or
repz
imul
test
mov
jmp
mov
push
jno
idiv
sub
mov
rol
test
adc
loop
jmp
movsb
push
and
stos
cmp
int
pusha
push
bound
notl
mov
mov
sbb
sub
push
cs
cli
dec
or
sbb
cmp
lds
fdivl
gs
xchg
aam
cmp
push
enter
mov
incl
mov
gs
mov
dec
push
test
sub
mov
repz
xchg
pop
dec
add
mov
dec
out
xchg
je
xchg
add
or
aaa
loop
ror
mov
jb
std
js
xor
jnp
fstpl
adc
mov
faddl
xchg
push
out
mov
sahf
call
cld
push
cmc
out
imul
jl
shll
add
into
xchg
xlat
pop
sbb
and
dec
sbb
mov
or
jge
nop
add
sub
mov
mov
enter
daa
aas
fsubrl
in
ljmp
pop
aas
hlt
dec
fisttpll
clc
dec
lock
outsl
mov
out
mov
dec
sub
int3
mov
mov
jae
xor
lea
sarl
movsb
scas
insb
andl
test
jae
xchg
outsb
aaa
push
xor
mov
cwtl
stc
or
pop
pop
sub
data16
sbb
ret
es
and
test
scas
popa
jle
sub
push
cmp
ret
jecxz
loopne
stos
push
xchg
outsb
push
dec
or
test
mov
lock
cmp
outsl
test
repz
xor
rcrb
shl
xchg
xor
sbb
subb
or
pcmpgtw
sti
dec
out
enter
aas
or
int
in
loop
jecxz
in
sub
pop
mov
add
cli
mov
fbstp
xor
add
xchg
pop
or
out
dec
mov
pop
push
icebp
inc
jnp
xchg
scas
fimuls
out
and
xchg
mov
push
mov
mov
cmp
mov
and
xor
mov
shl
insb
popf
mov
in
cli
dec
cltd
xchg
jno
adc
or
lahf
je
jl
mov
call
sbb
imul
jne
stc
and
imul
enter
pop
mov
and
inc
or
xor
add
jp
xor
outsb
jb
repnz
ja
xchg
decl
cmc
ret
stos
xchg
jle
idivb
sub
push
rcrb
xchg
std
in
nop
and
test
insl
les
mov
sti
cmp
in
fistps
push
dec
out
imul
mov
push
inc
fstpt
push
sub
cmpsb
loop
inc
sub
push
imul
dec
mov
cmp
sbb
outsb
add
inc
sti
sahf
xor
sub
daa
dec
push
fistpl
xchg
cmp
sbb
dec
jmp
bound
jle
into
fcmove
inc
adc
jge
jp
mov
push
mov
fistpll
in
jg
or
jmp
scas
add
lods
fmul
inc
mov
mov
stc
pusha
inc
jg
add
xchg
sub
dec
repnz
leave
into
jmp
addr16
add
inc
mov
imul
lret
sbb
sbb
lret
inc
push
fsubrl
adc
push
push
dec
xchg
ja
jg
jl
rcrb
push
add
cld
test
lahf
les
jb
dec
jae,pn
adc
daa
ficoml
or
cmp
mull
jcxz
xchg
pop
ds
in
jnp
loopne
pop
ror
add
jle
xchg
xor
outsb
pop
and
mov
in
frstor
mov
test
xchg
adc
jb
jl
inc
daa
add
movsb
icebp
add
iret
mov
sbb
or
out
add
clc
sub
pop
mul
gs
lods
clc
mov
lcall
or
add
pop
cmp
push
ds
cmp
mov
pop
xchg
ret
xchg
cmp
pushf
mov
outsl
mov
sahf
lea
in
leave
mov
out
adc
or
jp
mov
pop
xor
lcall
bound
dec
and
insl
cmp
xchg
mov
mov
inc
je
aaa
push
testl
ljmp
sub
daa
mov
pop
leave
mov
leave
arpl
outsw
inc
cs
lret
cmpsb
cmp
je
data16
add
iret
cmpsb
stc
mov
insl
stos
pop
or
leave
mov
les
loope
arpl
je
loope
and
int
ret
jns
notb
mov
xor
ret
push
push
push
mov
pop
ljmp
fisttpll
movsl
sbbb
jae
js
adc
pop
aaa
push
lds
add
js
ds
fstps
lock
outsl
ret
aam
test
pop
push
es
add
inc
lcall
adc
inc
xor
rorl
sub
lock
or
adc
ffree
jle
shld
pop
mov
adc
jl
arpl
int
add
out
movsl
dec
mov
mov
sti
push
outsb
push
das
xlat
loopne
loope
je
sub
es
rcrl
xor
dec
pop
pop
adcb
inc
xchg
cld
lock
sbb
jmp
mov
dec
fisttpll
mov
push
xchg
cmp
sub
jnp
mov
push
mov
in
inc
add
js
sub
je
jno
push
leave
arpl
imul
mov
mov
add
and
mov
dec
push
adc
mov
cmpsl
add
jbe
jp
jle
jae
out
ss
dec
out
xchg
rol
in
outsl
and
xor
xchg
movsl
cmp
push
xchg
jecxz
mov
xor
xchg
ja
pop
adcb
dec
xlat
sub
bound
je
in
adc
or
jl
adcb
out
addl
fmul
repnz
stos
sarb
mov
hlt
movsl
cmpsl
pop
ficoml
ret
xchg
leave
inc
insw
mov
iret
adc
cmpsl
in
inc
lret
inc
jmp
and
or
inc
arpl
je
cmc
fldcw
pop
repnz
outsb
daa
push
aad
mov
pop
addr16
lds
and
xor
iret
xchg
xchg
stos
je
add
loopne
cld
mov
sub
movl
jns
cmp
push
sbb
ds
bound
rcl
inc
into
dec
notb
lods
lahf
mov
clc
das
jmp
sub
sahf
xchg
dec
jnp
inc
dec
push
pop
scas
push
test
xchg
push
movsl
inc
sbb
xor
or
fsubr
repnz
and
out
xor
xchg
jno
xor
mov
ljmp
fistl
pop
and
iret
cmp
test
mov
mov
sti
adc
aam
xchg
cmpb
push
movsl
pusha
pop
adc
xchg
imul
mov
cmpsb
outsl
or
cli
sbb
data16
lret
xchg
mov
xchg
and
cld
push
inc
add
test
loop
ret
fsubrl
in
call
icebp
mov
dec
sub
mov
cmp
fdivrl
mov
pop
stos
sbb
fldcw
mov
into
shrl
xlat
pop
out
mov
call
mov
xchg
mov
fildll
or
subb
fdivrs
push
mov
enter
pop
lret
aas
into
push
mov
rorl
jmp
clc
or
xor
ja
push
xor
or
std
imul
dec
loopne
loopne
out
fisttpl
sub
in
stc
mov
adc
scas
gs
push
cmpsl
stos
loopne
cmpsb
mov
push
mov
jmp
sbb
mov
pop
cmp
addr16
and
xchg
add
mov
push
loop
scas
cmp
dec
push
jne
bsf
into
jge
push
ds
cmp
pop
or
add
imul
out
ret
push
push
adc
icebp
pop
mov
dec
rcrb
orl
mov
and
rorb
dec
adc
rcr
push
push
inc
xchg
jbe
or
and
xchg
call
jp
addr16
jmp
fimull
xchg
test
cmp
cld
jns
xor
push
dec
mov
divb
outsb
subl
mov
or
cmp
mov
xor
pop
lds
lcall
push
mov
cmp
shl
movsb
repnz
sarb
jb
call
add
je
add
dec
mov
lock
popa
push
mov
dec
rolb
aad
jno
mov
sbb
rep
mov
and
rcrl
lret
sbb
inc
mov
hlt
outsl
xchg
push
inc
rorb
ja
jne
in
xchg
dec
push
sbb
jns
push
sbb
mov
ds
mov
shl
mov
mov
mov
adc
and
adc
fcompl
lods
push
pop
jns
mov
jl
mov
or
gs
test
inc
std
loop
push
in
loopne
loop
cmp
mov
adc
mov
fistpll
mov
cmp
cmp
inc
add
mov
sbb
shll
fwait
xchg
cltd
rorl
imul
scas
sbb
ret
pop
gs
xor
xchg
or
loop
and
inc
fcomi
jae
sub
push
les
xor
aas
mov
push
ds
add
cli
cmp
xor
mov
jns
or
push
jne
test
scas
iret
push
inc
add
sbb
stos
mov
nop
pop
popf
fldt
fstpt
std
popa
sub
lahf
incb
sbb
rcrb
xchg
adc
arpl
cmp
call
cmpb
jmp
ds
inc
loope
imul
aas
xor
or
jo
sarl
and
inc
sti
pop
fld
cmpsb
js
pop
test
jmp
out
ja
jp
rcrl
sub
mov
adc
jo
call
pushf
ret
cwtl
pop
movaps
xchg
out
lcall
push
or
aaa
xchg
push
pop
xchg
cmp
or
data16
xchg
ror
aas
repz
inc
adc
mov
jb
adc
sarb
dec
sbb
lods
fwait
inc
fsts
pop
or
cli
cs
cmp
sub
or
movsl
cmp
cmp
xchg
rcl
mulb
pop
mov
xchg
jge
mov
popa
or
aaa
cmpsl
push
xchg
sub
push
adc
xor
fidivrl
push
negl
mov
push
andb
jmp
push
insl
sti
mov
loop
and
ljmp
in
inc
js
jae
push
fwait
adcb
lock
push
add
fdivr
xchg
in
outsb
push
mov
mov
out
int
das
cltd
mov
mov
mov
pop
lock
xacquire
add
push
ficoms
inc
mov
add
mov
mov
mov
dec
popa
lret
lock
imul
xchg
mov
mov
ljmp
hlt
leave
xchg
incb
ficompl
fst
add
or
sub
xor
test
sub
sahf
mov
in
pop
mov
aas
pop
jno
push
dec
cmpsl
lret
ljmp
aaa
sarb
cmp
incl
cli
or
mov
movsb
mov
iret
dec
or
ja
ss
xchg
hlt
int3
jne
aad
ficoml
jge
rol
mov
jp
in
ja
test
pop
bound
outsb
bound
xchg
pusha
mov
adc
loop
insl
stos
insb
lahf
cmc
ja
mov
adc
sbb
lds
push
jmp
adc
adc
lods
call
filds
orl
pop
insl
addr16
xchg
ja
test
js
ret
jne
pop
inc
cmp
dec
out
pop
and
stos
repz
inc
and
jo
arpl
push
push
mov
add
mov
xchg
fidivl
popf
jne
mov
dec
xor
addr16
mov
ja
xchg
in
cmc
add
or
nop
cltd
rolb
dec
shrb
ljmp
inc
mov
xchg
xorl
and
scas
daa
adc
mov
or
adc
aad
jg
dec
lods
jno
insl
int
lods
imul
mov
jae
adc
jl
test
or
stc
push
adc
adc
inc
push
mov
xchg
dec
and
jecxz
adc
pop
into
mov
sti
mov
adc
sbb
xchg
add
cmp
fwait
std
mov
repz
inc
lods
leave
dec
fsubr
lea
sbb
push
and
icebp
pop
fwait
nop
jle
daa
cmp
fprem1
push
cs
push
inc
fld
adc
popf
hlt
jg
leave
cld
pop
ja
sahf
cmp
dec
push
lret
sarb
sub
ljmp
add
lea
adc
push
cmp
push
fmull
push
movl
fiadds
mov
adc
mov
push
and
icebp
js
xchg
dec
lods
icebp
int
push
cmp
ret
cmpsb
mov
sbb
fcoml
or
add
idivb
out
mov
imul
cmpsl
shrb
cmp
mov
je
lahf
ja
int
lea
decl
fdivs
inc
xchg
fcmovu
aaa
mov
pop
cmp
sbb
lret
lret
repz
int
outsl
mov
xchg
ljmp
mov
jb
popa
ja
inc
mov
mov
shll
dec
jo
pushf
xor
mov
test
xchg
jmp
sub
adc
out
es
fnstenv
ljmp
xlat
mov
xor
lods
repnz
push
pushf
or
or
xor
cli
dec
jo
mov
inc
pop
imul
or
movl
xchg
pop
lea
out
push
out
add
pop
add
repnz
aas
mov
ja
jae
dec
inc
add
out
xchg
subb
cmpsb
lods
addr16
sub
lret
mov
call
cmp
mov
aas
cmp
dec
arpl
cld
sub
adcl
or
iret
push
push
dec
fisttps
cmp
arpl
jmp
push
popa
ret
fcoms
add
pop
push
fists
in
fisubl
mov
outsb
in
nop
push
adc
int3
dec
cs
mov
aad
and
ret
xor
pop
cld
pop
scas
inc
sbb
add
aaa
xlat
fisttps
xor
mov
mov
jnp
jmp
stc
outsb
in
movsl
pop
mov
xor
dec
movsl
inc
xor
xor
sbb
lahf
int3
push
jle
cmp
js
fwait
sbb
hlt
in
leave
cmp
lods
dec
std
jbe
sub
cld
lock
adc
stc
shrl
pop
scas
out
pop
pcmpgtw
cwtl
sub
or
sbb
lea
adc
popf
ret
test
add
pushf
jae
mov
cmp
xchg
jmp
add
mov
mov
dec
pop
jno
sbb
mov
mov
popf
pop
aam
mov
jmp
rcrb
xchg
mov
iret
outsl
das
std
stc
mov
rcr
lcall
push
push
lahf
cmpsl
lds
adc
sbb
xor
imul
daa
addb
test
aam
psadbw
bound
cmp
pop
int
sub
push
push
sti
lds
ret
mov
push
pop
aad
xor
cmp
xor
and
pop
loopne
in
mov
loopne
and
out
sarl
or
cmpsl
loopne
xchg
std
xchg
cld
cmp
mov
loop
or
mov
lcall
inc
cli
das
sub
and
cmp
leave
cmp
lret
ret
scas
adc
push
adc
aam
and
imul
mov
mov
sbb
mov
inc
mov
sub
aas
jo
pop
fistpl
es
jmp
mov
jg
jb
cmc
mov
mov
mov
xchg
push
or
pop
cmp
dec
jne
mov
ficomps
push
xor
nop
aas
jle
xor
add
mov
push
jle
idivb
out
inc
out
or
repz
xlat
cltd
mov
test
jae
sub
sub
adc
add
dec
mov
stos
popa
pop
xchg
scas
adc
push
add
mov
or
popa
mov
int
in
imul
sti
xor
mov
rorb
icebp
add
scas
cmp
xor
stos
mov
sbb
cmp
mov
mov
xlat
rcrl
test
push
lahf
aaa
mov
inc
inc
fisubrs
aaa
outsl
jae
stc
sbb
xchg
xor
stos
cmc
aad
jns
adc
gs
xlat
rorl
pusha
sarl
sbb
sbb
push
jo
bound
push
lret
bound
cmc
test
push
inc
inc
fistps
scas
neg
xchg
mov
pop
pop
je
clc
out
adc
sbb
sub
cmp
and
into
aam
jbe
jbe
mov
je
imul
xor
out
lcall
inc
add
mov
addl
inc
dec
push
int
insl
popa
add
loopne
xor
adc
xor
add
sbb
inc
and
jmp
pop
add
xchg
and
std
jb
in
loope
mov
or
in
jle
roll
ljmp
lods
mov
aas
lods
aam
data16
lahf
subb
jle
lods
inc
popa
in
stos
sbb
pop
fbld
pop
rcr
adc
push
lahf
adc
fcompl
shr
adc
inc
and
push
sub
jl
fadds
test
data16
pop
and
pop
mov
xchg
arpl
popf
dec
add
or
jge
test
xchg
push
sbbl
push
fistl
clc
dec
and
cmp
movsl
pusha
sbb
adc
in
cmp
ljmp
jbe
mov
aam
cmpsb
ret
jmp
dec
data16
xchg
cmp
stos
shrb
mov
popf
loope
xchg
daa
sbb
test
js
imul
out
mov
mov
sub
test
jg
or
adc
mov
roll
or
lds
rcl
jmp
hlt
mov
js
pop
lcall
pop
jbe
dec
insb
into
cmpsb
std
leave
add
gs
add
push
testb
adc
outsb
sub
aad
xor
mov
call
cmpsb
sub
mov
mov
fbstp
int3
mov
movntq
add
lcall
xchg
bnd
and
test
ljmp
xor
pop
stos
cltd
lret
in
outsl
cwtl
sbb
adc
out
push
cld
mov
es
out
lods
push
xor
add
mov
scas
aad
mov
imull
fwait
int3
inc
mov
jnp
je
and
lods
adc
test
dec
sub
cmp
adc
xlat
inc
sub
inc
mov
jp
rcll
out
xor
xchg
add
out
subb
jl
clc
movsl
dec
add
loope
mov
outsb
adc
sub
ds
and
adc
in
xor
cmp
loopne
loop
cli
mov
cli
dec
add
push
addr16
cli
sbb
add
cmpsb
cmp
adcl
sti
movsl
and
popf
ss
or
adc
or
int
das
stc
lcall
or
insl
dec
sub
jne
lds
or
cmp
xchg
aad
adc
lods
lods
ss
sub
mov
dec
xchg
dec
popl
xlat
sub
movsl
dec
cmp
jecxz
shlb
cwtl
ja
fwait
divl
mov
xchg
cmpsb
inc
lods
mov
pop
pop
or
dec
dec
sub
imul
mov
mov
sbb
ss
jecxz
iret
les
jp
sub
jo
mov
xchg
jecxz
inc
mov
cld
jmp
shll
push
sbb
ret
subl
or
jae
arpl
roll
add
mov
movsb
cli
xlat
out
lahf
aad
in
add
mov
and
jl
fwait
dec
sbb
pop
jns
xchg
lret
add
jg
adc
or
mov
sub
ds
leave
xor
and
push
jnp
adc
inc
enter
mov
push
mov
adc
adcl
pushf
add
andb
and
dec
mov
stos
pop
int3
cmp
addr16
mov
inc
call
pop
mov
lret
mov
push
push
jne
xchg
loop
jne
mulb
std
dec
mov
dec
mov
fs
sar
cmp
or
add
cld
push
aam
push
add
stc
cmpsl
outsb
ss
outsl
or
repnz
xchg
movsl
ret
lcall
push
jmp
adc
enter
jge
cmp
xor
mov
loop
dec
xchg
lret
sahf
sbb
ret
aaa
inc
add
xor
jp
repz
adc
adc
xchg
lcall
mov
imul
cmp
jnp
pop
je
imul
sahf
outsl
push
cmp
les
sarb
adc
test
into
adc
sarl
xchg
cmp
sub
xchg
mov
cli
nop
xor
xchg
jnp
stos
stos
pop
shlb
cmp
das
ljmp
jns
pop
es
adc
push
popf
mov
je
adc
shll
incb
imul
mov
aaa
pop
mov
mov
mov
push
cltd
jno
inc
push
jle
bound
cld
mov
cmpb
pop
rep
test
inc
adc
xor
testl
add
iret
int
ss
mov
xchg
fldt
sub
mov
inc
sti
loope
lods
xchg
pop
movsl
enter
or
dec
sub
xchg
arpl
addr16
or
in
enter
int3
or
or
arpl
inc
cmp
pop
mov
jae
data16
add
sbb
movsl
test
mov
cmp
movsb
mov
cmp
popf
mov
mov
movsl
cmpsl
stc
aam
ret
ss
aas
in
ljmp
dec
sbb
mov
pop
clc
fldenv
sbb
out
sbb
or
lods
imul
call
lods
inc
insl
fsubrp
add
movsb
addr16
in
je
sub
jle
shrl
pop
mov
and
popf
cmp
stc
push
adc
mov
dec
das
daa
cli
cld
stos
test
mov
jne
push
lahf
mov
jmp
add
outsl
lods
cld
jmp
mov
cmp
lahf
roll
sbb
sarb
imul
mov
push
pop
outsl
imul
add
cwtl
cltd
fsubrl
inc
js
adc
and
ja
cmp
mov
ret
fsubrl
int
push
push
ret
out
xor
popf
loope
lds
add
sbb
inc
jae
sub
ljmp
in
aas
andb
mov
popa
fstpl
push
movsl
cmp
mov
insb
in
in
mov
fmul
xchg
jge
icebp
pop
push
inc
jge
daa
in
jo
imul
pop
lret
mov
enter
push
cwtl
es
mov
dec
dec
arpl
lret
jns
pop
lcall
out
imul
test
ficomps
sbb
outsl
nop
mov
and
ljmp
push
xlat
cmpsl
push
push
js
sbb
or
mov
sub
popa
or
aas
out
mov
outsb
sub
loope
rorl
fildl
ror
aas
test
repnz
cmc
pop
add
add
iret
inc
nop
insl
mov
mov
xchg
mov
neg
sbb
or
clc
mov
aam
leave
addl
rorb
mov
jle
jmp
js
icebp
or
mov
and
and
cs
lret
insb
lcall
jmp
sbb
or
aam
add
ret
lcall
and
mov
xor
outsb
imul
and
ljmp
lea
sbb
mov
pop
inc
push
cs
inc
or
std
scas
mov
sub
push
fcmovb
cltd
dec
add
push
insb
pop
cmp
daa
cmp
adc
insl
mov
inc
xor
mov
dec
pop
adc
fbstp
jl
sub
jp
push
stc
cmp
pop
sbb
das
xor
aas
sti
inc
dec
ss
fucomp
test
mov
stos
rcl
daa
mov
insl
xchg
loop
inc
cld
mov
cmp
inc
btr
hlt
add
push
inc
es
enter
push
cmp
mov
sbb
sti
dec
pop
mov
scas
lea
pop
pop
pop
fists
shl
fwait
pop
xchg
inc
out
sahf
dec
or
cmp
inc
loop
xchg
mov
push
cltd
adc
aad
addr16
push
and
lcall
xchg
addr16
out
or
je
push
incl
int3
scas
add
sbb
lcall
and
loopne
repnz
sbb
fidivrl
or
cmpsb
fs
stos
jae
push
sbb
shlb
test
ficomps
adc
ret
sub
jg
jns
movd
lret
mov
mov
push
into
add
mov
ret
push
jbe
imul
daa
icebp
and
dec
inc
push
sti
push
imul
sbb
repz
out
adc
imul
mov
jo
fdivrl
idivl
mov
incl
xor
inc
jno
or
cmc
daa
mov
lock
fistpl
aas
fwait
ret
pusha
aas
mov
mov
pusha
inc
jp
out
jmp
aaa
dec
out
xchg
xchg
gs
jmp
insb
or
stos
pop
inc
dec
dec
mov
mov
ret
out
and
xchg
cmp
mov
insl
gs
mov
cltd
pop
sub
add
xchg
add
dec
adc
lret
lahf
pop
push
loopne
sarl
xchg
sbb
xchg
popa
inc
enter
rcll
outsb
icebp
xor
jns
add
jne
push
adc
cld
push
jnp
adc
or
fbld
jno
test
mov
sbb
sbb
sbb
mov
mov
dec
push
cs
and
cmpsb
pop
sarl
pop
adc
lods
pop
mov
loop
mov
sbb
sub
jae
test
je
ret
into
xor
ljmp
xor
push
push
add
lahf
mov
stos
dec
cmp
cli
fucom
push
jmp
lds
in
std
in
pop
jnp
dec
aaa
es
fsubs
jae
mov
addr16
xchg
xchg
mov
test
xchg
pushf
mov
stc
call
into
incl
stc
and
push
subb
mov
inc
lods
push
or
pop
xchg
inc
lahf
ss
test
loop
mov
testl
lcall
add
mov
inc
push
fsubrl
shll
cmpsl
mov
test
popa
sahf
fistl
dec
je
add
mov
lret
lret
outsb
add
and
pop
push
std
call
mov
mov
rclb
std
or
cmp
pop
sarb
mov
sub
sub
int3
xchg
cmp
into
xchg
movsb
sbb
jo
test
jecxz
xchg
stos
daa
push
sub
inc
clc
adc
adcb
subb
pop
add
dec
sub
bound
cmp
loopne
inc
sti
rolb
or
aaa
mov
or
push
cltd
out
jp
inc
ljmp
mov
or
std
ret
lea
ja
or
mov
adc
mov
mov
in
into
movsl
cs
outsb
push
pop
test
push
shlb
jns
in
adc
test
jecxz
xor
clc
inc
or
sub
pop
in
fcomp
rorl
xchg
sbb
sbb
xchg
mov
cli
aas
insb
arpl
and
shll
cmp
sbb
fmull
daa
mov
idiv
mov
fcoml
sub
mov
mov
sbb
mov
and
fildl
sub
rcrl
leave
xor
add
jg
fidivl
xchg
ss
push
jecxz
fwait
adc
cmp
ljmp
icebp
mov
hlt
lods
sub
xchg
jl
inc
mov
mov
popf
sub
cmp
or
lret
mov
shlb
mov
clc
fs
popf
mov
or
push
arpl
mov
pop
mov
ss
loop
mov
or
scas
mov
leave
pop
cwtl
inc
loopne
into
cmp
in
cmp
int3
ret
into
add
jne
inc
mov
pop
sub
xor
nop
sub
insb
sub
adc
mov
sub
adc
cs
lods
xchg
fisubs
clc
in
fsubrs
and
mov
inc
mov
lds
sub
out
test
cli
mov
sub
push
mov
sbb
negb
jnp
insl
js
aas
cmp
adc
cmc
repz
xor
rcrl
push
scas
xlat
sub
int
bound
add
shlb
test
push
lods
pop
lahf
xlat
push
jne
rcll
loop
adc
push
add
lods
pop
outsb
test
mov
xchg
out
pop
jge
aad
cmpsl
fwait
and
ret
mov
jbe
bound
ret
push
mov
cmp
jge
ret
xchg
rolb
ret
push
je
aam
lea
adc
jl
mov
push
xor
xchg
jge
aad
push
lcall
adc
pop
jnp
xchg
inc
mov
adc
sar
dec
mov
call
mov
adc
mov
adcb
insl
negb
in
lods
mov
mov
outsb
out
xchg
vpunpckhbw
mov
push
push
pop
mov
mov
mov
shlb
xor
push
fwait
psubsb
push
int3
das
and
mov
andl
xchg
add
and
fs
jne
hlt
enter
pop
add
fldt
mov
outsl
lds
cmp
pusha
lea
jae
adcb
mov
ljmp
add
mov
jge
inc
dec
dec
push
push
dec
lods
movsl
pusha
adc
push
pusha
outsb
les
jg
jnp
inc
into
push
push
inc
bound
into
iret
jp
daa
outsl
and
shl
mov
sti
test
mov
push
xchg
add
or
xchg
test
hlt
popa
lcall
enter
pop
and
adc
mov
or
ror
rclb
aas
movsl
dec
jo
dec
mov
add
xor
popf
or
and
test
mov
xchg
add
out
mov
mov
iret
adc
pop
xor
insl
out
add
jnp
mov
push
inc
pop
lret
mov
rcr
inc
addr16
and
pop
lods
pop
es
cmp
int
sub
out
jg
mov
cmpsl
lret
jo
insl
cmp
jp
fwait
shlb
int3
cli
push
arpl
pop
sbb
xor
outsl
rolb
daa
ljmp
mov
data16
nop
sub
mov
lods
add
push
xor
push
lods
fsts
arpl
lahf
out
cld
jb
shl
enter
xchg
xchg
adc
add
inc
sbb
or
ret
pop
or
test
enter
push
mov
out
jne
lds
bound
mov
stos
sub
les
fimuls
sbb
mov
and
mov
imul
pusha
sub
data16
je
sub
test
test
mov
push
pop
jnp
rcl
test
repnz
cmp
sub
xchg
mov
test
fidivrs
xchg
jge
push
jmp
test
mov
pusha
ds
scas
subb
fimuls
xchg
add
call
int
cltd
sub
mulb
push
sub
mov
jmp
pop
int3
mov
test
add
and
or
cld
jo
dec
mov
loopne
mov
fstpt
xchg
push
jne
and
jae
cs
cmp
jle
test
mov
mov
or
cmp
push
jmp
into
loope
movsl
and
icebp
ljmp
sub
lahf
mov
and
push
or
cli
out
popa
cli
pop
add
mov
clc
mov
lock
mov
popf
lods
xchg
pop
in
push
xor
lret
scas
cmp
shll
out
adc
mov
mov
andl
nop
pop
inc
sub
add
mov
xor
test
inc
sti
stos
int
inc
es
imul
push
pcmpgtd
scas
xchg
test
call
iret
stos
dec
add
mov
loopne
mov
popf
jecxz
cmp
push
or
cmp
sti
fs
out
mov
cwtl
addr16
mov
fimull
and
pop
dec
sti
xchg
pop
call
stc
sti
mov
cmp
xchg
cmp
add
dec
jp
cli
ret
es
jno
jmp
rcll
sub
mov
imull
push
sti
ret
dec
sub
fistl
call
jge
in
jne
test
movl
xor
in
in
gs
loopne
pop
jbe
jbe
lahf
jae
ret
idivl
push
cmp
mov
cmp
into
loopne
cld
cld
out
aad
shll
out
push
xchg
xor
jns
jbe
mov
call
sub
dec
xchg
xor
inc
stc
and
das
repz
mov
inc
mov
test
imul
pop
arpl
mov
cmp
mov
lret
shll
dec
mov
pop
sbb
enter
pop
insl
loopne
stos
jb
mov
pushf
outsb
es
xorb
popa
adc
sahf
imul
arpl
leave
movsl
jle
add
out
xchg
loopne
add
mov
bound
xor
in
mov
pop
and
add
push
xor
mov
and
sub
jp
inc
fstl
outsb
das
scas
lcall
inc
fldt
mov
sbb
pop
movsb
popf
lea
xorl
pop
jg
ja
adc
fcmovbe
add
lret
jns
sub
addr16
dec
pop
sbb
xor
inc
mov
cmc
insl
jne
and
mov
push
pop
popf
lret
pop
xabort
cld
xchg
push
ret
push
insb
xor
or
rolb
dec
xor
jae
and
iret
test
shrb
push
inc
cmpl
mov
pop
mov
xor
dec
es
pop
ds
or
fiadds
push
inc
adc
test
js
in
dec
dec
add
pop
cmp
cmp
addr16
cmp
or
dec
inc
ds
movzwl
test
sub
or
gs
sub
jnp
dec
sub
inc
pop
dec
cmp
dec
mov
clc
and
daa
ljmp
call
add
xadd
add
pop
mov
call
cmpsb
movsl
sbb
pop
adc
call
loope
or
dec
mov
fldt
push
xor
mov
scas
adc
sub
inc
dec
mov
inc
cmp
popa
jle
adc
push
push
push
jb
cwtl
sbb
out
push
movb
in
in
insl
pop
in
test
cmpb
inc
sarb
mov
jecxz
imul
adc
jae
mov
lcall
xor
jno
stos
sbb
mov
or
inc
test
fsubl
ljmp
bound
out
scas
xlat
pop
adc
jne
mov
mov
bound
sbb
push
outsb
add
leave
xor
repz
into
inc
jp
out
push
bound
insl
add
and
cmp
sahf
push
cmp
xor
xchg
fnstenv
mov
les
cmpsl
inc
mov
lahf
push
add
outsl
cmp
test
inc
sub
adc
movsl
sbb
cmp
dec
je
dec
ret
mov
dec
and
iret
cli
enter
cmp
lret
jge
in
jge
popfw
or
pop
in
and
lods
int3
aad
std
pop
cmpsb
pop
xchg
mov
cltd
dec
jo
or
cmp
sub
push
iret
push
jnp
mov
mov
leave
pop
out
pop
or
daa
jecxz
jecxz
pop
sahf
mov
or
movsb
xor
outsb
sub
and
sub
cwtl
lock
in
mov
dec
jb
xchg
dec
adc
pop
push
negb
cld
out
cli
repnz
scas
aam
adc
repnz
ret
sbb
rorb
sti
cmp
psrad
mov
mov
xchg
inc
cmp
aad
imul
mov
or
std
out
xchg
lds
cld
stos
sbb
in
mov
in
jg
rep
scas
mov
and
int3
pop
popa
xorb
and
jge
sbb
adc
push
add
inc
test
int
adc
and
popa
xchg
jecxz
divb
mov
or
pusha
jle
pop
adc
dec
sbbb
or
and
fs
or
lds
jmp
xor
ret
movsb
loope
test
insl
push
jl
mov
push
or
dec
jg
lret
mov
adc
dec
xor
ret
xor
test
sbb
mov
pop
mov
jb
jne
fcoml
cmp
xchg
lcall
and
out
imul
mov
sbb
pushf
ficoml
or
lea
loope
jle
mov
push
and
inc
lret
mov
sti
or
inc
mov
ss
negb
movaps
cmp
div
sahf
mov
lcall
psubb
enter
shld
loope
outsl
dec
sub
inc
lea
cmpsl
in
lea
mov
jb
arpl
jle
xor
jnp
fildll
cmp
in
and
add
inc
out
jbe
mov
in
fisubs
cmp
sub
out
xchg
pushf
lods
and
fbld
lods
dec
leave
xchg
orb
or
add
xor
cmp
xor
mov
test
je
adc
sub
in
push
mov
rcr
lret
lds
test
test
ljmp
scas
icebp
movsl
iret
repz
test
lods
cwtl
out
mov
shrl
stc
into
scas
xchg
aaa
xor
fidivs
pop
mov
add
int3
sub
shll
js
loop
mov
mov
xchg
add
mov
pop
pop
xor
inc
mov
lret
push
jecxz
xchg
fistpll
push
sti
shl
enter
aaa
int
insb
stos
leave
je
movsb
popl
rcll
daa
pop
outsb
cmp
push
mov
icebp
dec
subl
push
int
xor
cltd
insb
jg
inc
fistpll
repnz
dec
in
cmp
stc
ret
and
push
xor
sarl
data16
sbb
jbe
mov
popf
mov
mov
push
or
outsb
sbb
int
es
mov
xor
push
idivl
ret
iret
xor
cltd
cmc
mov
sbb
stc
pop
and
mov
mov
ficomps
test
test
or
jno
xchg
imul
ja
scas
imul
lahf
es
mov
imul
push
xor
popf
scas
add
sahf
inc
dec
int3
scas
mov
ret
or
shr
addr16
xchg
test
sub
push
in
xchg
inc
push
shlb
adc
fisttpll
jns
add
out
add
andb
gs
std
xchg
sub
out
sub
xor
mov
outsb
out
mull
xlat
roll
punpckldq
imul
gs
jae
cmp
lods
vmaxsd
xlat
in
das
movsb
ljmp
inc
jmp
pushf
arpl
out
add
jnp
add
daa
push
mov
cld
aad
cmpsl
jae
pmulhw
outsb
incb
jecxz
lcall
std
push
je
jno
xchg
inc
nop
mov
inc
adc
shll
push
fistl
mov
lds
or
and
sub
jo
push
jmp
scas
ds
arpl
or
imul
iret
xlat
mov
sub
sahf
or
push
xchg
inc
je
jg
xchg
lret
xchg
inc
es
out
jg
pop
adcb
fcmovne
repz
aas
push
ss
cli
fadds
xor
push
cltd
xchg
add
fidivl
inc
mov
jl
adc
shll
insl
mov
scas
shr
xchg
imul
lret
jge
xorl
into
sbb
out
sbb
xchg
cmpsb
loope
cmpsb
or
repz
mov
or
cltd
jp
jb
aad
push
shrl
mov
repnz
push
push
popa
into
pop
xor
out
sbb
int
scas
mov
and
cmp
push
mov
sub
data16
push
sbb
inc
sub
dec
lahf
pop
popa
jns
mov
mov
sti
push
add
daa
sti
aas
mov
xor
dec
xchg
add
fwait
cmc
shlb
test
aam
xchg
outsb
fs
cld
rcrl
push
add
sti
push
xor
or
jge
push
mov
or
push
add
repz
cmp
cld
adc
dec
jg
push
push
sub
subb
xchg
mov
movsl
add
dec
adc
aas
push
add
xor
mov
sub
push
repz
pshufw
arpl
repz
jnp
or
loopne
pop
ds
mov
fs
push
leave
sub
push
sub
jecxz
sub
inc
pop
sbb
and
xchg
lds
int3
aam
pop
cmp
loopne
rdtsc
mov
mov
fdivl
lods
notb
in
sbb
test
mov
and
xorl
or
push
ja
and
inc
aad
jns
dec
pop
aas
cli
pusha
popa
pop
or
clc
sub
mov
popf
int3
repz
gs
test
xor
int3
fsubl
and
dec
int3
xor
and
repz
repnz
mov
dec
sub
int3
std
testb
sbb
test
dec
or
in
inc
jge
push
repz
mov
test
clc
inc
imul
add
mov
push
mov
test
into
outsb
sbb
mov
and
sahf
scas
xchg
leave
pushf
fstp
test
in
jp
jns
jl
inc
add
iret
aas
sbb
jp
ret
mov
call
scas
mov
je
mov
or
setb
out
sbb
out
and
sub
enter
leave
push
push
mov
icebp
aaa
add
xor
mov
xor
ds
add
or
rolb
sub
mov
jge
xchg
popf
jo
xor
fdivrs
and
add
adc
ret
test
mov
fs
mov
jbe
dec
outsl
cmp
jb
xchg
jo
stos
lret
jp
pop
mov
inc
xor
or
adc
add
mov
out
sub
shr
test
xor
cmp
sarl
ljmp
pop
mov
mov
and
jbe
cmc
and
and
fcomp
aam
push
push
daa
ss
cmc
loop
fisttps
test
stos
out
dec
call
mov
into
stos
inc
stos
xchg
fisubrl
add
fisubrl
sbb
cmp
push
or
pop
xchg
cmp
add
aas
or
or
lock
add
popa
jmp
adc
ror
fcmove
ss
scas
or
jmp
adc
jecxz
addr16
hlt
push
cmp
scas
xchg
sub
jno
dec
xchg
mov
fcomip
cmc
or
push
adc
push
push
sbb
pusha
enter
cmp
rcl
push
xchg
adc
shr
jne
roll
adc
push
scas
xchg
inc
xchg
push
cmpl
in
or
pop
dec
sub
cmp
push
call
push
lcall
pusha
andl
ret
lods
scas
jp
iret
pop
clc
jns
cwtl
in
and
in
pop
hlt
inc
add
xchg
hlt
sub
test
push
jb
xchg
sbb
jmp
xchg
dec
mov
mov
sbb
loopne
inc
jecxz
mov
adc
xchg
dec
scas
or
or
pop
push
push
xor
repz
and
lods
inc
fs
pop
xchg
add
out
aad
dec
dec
jbe
dec
out
mul
in
add
test
mov
out
mov
dec
add
out
xchg
leave
adc
lcall
into
jecxz
sbb
push
mov
inc
aam
cmp
xchg
xor
push
jl
fsts
push
into
decl
add
dec
sub
push
mov
sbb
add
ficoml
and
test
shlb
xchg
enter
and
dec
pop
pop
xchg
addb
xchg
ljmp
cmc
fs
xor
cmp
and
addl
repnz
add
jb
loope
or
fs
ds
dec
cmpsl
shll
scas
popa
jno
pop
dec
pop
jne
out
xlat
dec
lret
int
in
jae
pop
mov
cwtl
and
out
inc
add
and
mov
sbb
xorl
iret
mov
or
mov
cwtl
cmp
inc
pop
loopne
out
lahf
inc
shl
sahf
fs
mov
cmp
sbb
std
sub
xor
or
push
mov
insl
jne
inc
pop
mov
in
push
mov
imul
das
xchg
mov
enter
sub
mov
xchg
fldl2e
scas
scas
sarb
cmp
jae
jl
mov
pusha
lret
sbb
mov
adc
push
sub
adc
xor
cmpsb
nop
jle
push
outsl
insb
std
shll
push
cmpsl
push
popf
xor
jnp
hlt
and
cmp
ljmp
add
jmp
fcoms
xchg
sbb
push
cmp
sbb
xorl
dec
das
xlat
mov
sbb
int
stos
into
xor
andb
adc
gs
pop
push
mov
mov
insb
pushf
mov
and
push
dec
lret
pop
mov
cmp
mov
stos
loopne
jno
sub
rolb
cmpsl
and
ss
push
rcr
cmc
mov
mov
insl
loopne
cmp
jne
aaa
dec
movzwl
push
sbb
cmp
xchg
pop
repz
or
push
sbb
out
dec
sbb
into
jle
mov
daa
push
sub
adc
push
mov
daa
inc
pop
pop
pop
mov
sub
je
aaa
pop
cmp
out
xchg
jo
or
inc
mov
mov
fcomp
in
dec
movsl
jecxz
rcll
hlt
jo
data16
scas
std
sub
mov
push
jb
pop
movl
loope
test
adc
shlb
inc
or
pop
andb
mov
mov
mov
xchg
adc
push
imul
imul
and
mov
jl
mov
mov
imul
daa
fstpt
hlt
mov
add
mov
aas
insl
xchg
mov
lret
or
inc
dec
sbb
in
lock
arpl
ss
pop
iret
roll
fiadds
xor
push
jmp
subb
ret
xchg
or
js
sub
movsl
inc
or
fcmovnbe
push
add
rclb
dec
shl
out
cld
push
push
mov
stc
adc
ficomps
xchg
jnp
xor
rcrl
int3
fildl
mov
mov
jp
cmpsl
daa
push
jmp
out
jno
push
fistps
xor
inc
adc
ds
dec
add
dec
movsl
insl
jecxz
mov
mov
popf
push
popf
hlt
and
adc
xor
inc
sub
push
lea
test
test
and
stc
cld
ss
jge
push
sub
or
cmp
or
imul
in
fcom
pop
add
sbb
jae
push
outsb
mov
std
aas
cmp
mov
xchg
or
xchg
add
jne
xchg
shrb
cs
and
xor
pop
mov
jne
sub
and
push
mov
push
mov
xlat
hlt
popa
sub
xchg
or
lahf
adc
aam
test
or
push
sub
or
scas
fldl
push
lds
dec
lock
imul
mov
mov
mov
aad
xchg
cmp
push
cmp
jmp
inc
enter
fsub
cmpsl
lods
imul
pop
and
jnp
push
ja
push
insl
push
xlat
ja
cmc
outsl
data16
dec
mov
jno
insb
pusha
jb
adc
sub
jae
insl
sbb
dec
pop
mov
fcomps
mov
cmp
cmpsl
push
mov
pop
fcmovnbe
stc
jne
fiaddl
or
rcrb
add
inc
and
xchg
mov
shl
lret
bound
mov
cld
test
loopne
mov
outsl
fcomp
push
add
ret
lods
scas
in
je
pop
xchg
fdivrl
insl
lret
xor
sti
jmp
xchg
fwait
in
xor
jae
jmp
daa
jg
stos
cmp
mov
stos
add
pop
mov
cmp
addr16
add
push
pop
out
mov
push
out
popf
sbb
and
jnp
fiaddl
inc
gs
jg
orb
test
mov
incb
outsb
jo
fistl
jle
jae,pn
hlt
adc
mov
leave
mov
xor
popf
pop
pop
stc
xchg
pop
mov
ret
xchg
lahf
popa
xchg
popl
out
inc
add
wbinvd
fcoms
dec
loope
scas
xchg
das
jmp
xchg
add
mov
fisubs
pop
add
sbb
out
xor
xorb
hlt
daa
int
sahf
lods
std
jno
mov
clc
and
dec
mov
into
les
ds
xor
inc
mov
andb
fnstcw
pop
outsl
fistpll
xchg
sti
aas
in
jp
dec
inc
vpmaddwd
mov
popa
push
xor
and
dec
adcl
and
push
fidivrl
mov
roll
jbe
in
pop
mov
fwait
adc
inc
roll
fstl
push
out
adc
inc
adc
inc
cpuid
outsl
xor
into
sbb
dec
xor
xor
data16
les
dec
stos
or
cltd
jo
sub
pop
xor
std
mov
mov
inc
xchg
sub
ja
pop
outsl
loop
das
push
push
push
aaa
psraw
dec
gs
sbb
nop
lahf
xlat
mov
cld
add
hlt
mov
mov
negl
cmpsl
loop
or
push
ret
out
fmulp
mov
movsl
xchg
roll
rol
popa
leave
in
mov
leave
add
imul
inc
jno
cmovne
gs
push
inc
lahf
fwait
push
pusha
pop
xor
push
imul
xor
xchg
or
jl
inc
ret
jle
and
out
mov
cmp
mov
test
dec
fsubrs
sahf
repz
push
shrb
pop
xor
in
jb
mov
lds
loopne
add
or
cmp
jle
xor
dec
ret
push
inc
xchg
pop
add
mov
imul
mov
jmp
xor
daa
xor
in
fisubs
lcall
pop
jb
adc
adc
and
sar
mov
mov
push
pop
jne
pop
es
ror
cld
add
fsubrl
in
nop
ja
mov
in
dec
pop
sti
add
in
mov
insb
ret
lea
es
out
shrl
jnp
call
adc
xchg
cmp
mov
in
in
xchg
or
test
jo
cmp
shlb
sub
out
sub
xchg
or
fucomp
add
cmp
xchg
mov
jne
add
mull
aad
rcr
mov
lahf
xchg
sub
and
mov
adc
lea
dec
jl
xor
pop
mov
lea
cmp
pusha
ret
test
mov
in
mov
add
mov
les
jmp
mov
add
sub
mov
ret
jmp
repnz
sub
hlt
jg
fisubs
std
sbb
pop
loopne
pop
pusha
daa
andb
xchg
push
into
fsubr
lret
xchg
mov
mov
cwtl
cmpsb
push
stos
sbb
je
cmp
pop
hlt
into
sahf
mov
lock
sbb
negl
out
pop
in
cli
xor
inc
inc
sarl
push
jb
add
inc
scas
jb
test
mov
insl
lock
push
fnstenv
adc
sti
fstpl
test
pop
cld
cmc
dec
mov
ss
bound
mov
popf
jnp
out
bound
add
test
xchg
fsubs
cli
gs
scas
mov
pop
clc
int3
xchg
jp
mov
or
mov
rol
jo
cltd
pop
xchg
adc
ret
pop
stos
sbb
xchg
ficoms
and
inc
aaa
fnsave
fmuls
mov
sub
mov
or
test
jg
jbe
or
daa
cmp
gs
daa
aad
mov
lret
insb
js
mov
into
js
bound
jno
jns
inc
sbb
jl
or
adc
stc
nop
in
inc
cmp
clc
or
lret
roll
faddl
cmp
mov
mov
dec
adc
popa
loope
icebp
mul
lret
cmp
dec
mov
jno
divb
aas
sti
test
in
xor
fwait
pop
cmpsb
pusha
lahf
call
and
sub
pop
mov
adc
pop
leave
adc
negl
pop
pop
cmp
addr16
pushf
enter
pusha
fildll
push
ljmp
bound
xchg
ja
pop
pop
jbe
mov
cli
add
xor
lret
popf
aaa
cmp
push
std
or
mov
stos
lahf
imulb
xorl
cli
or
popa
cmp
das
push
jp
sub
jmp
mov
cld
lcall
movsb
int3
test
fdivrl
add
adc
dec
dec
cs
and
insb
repz
mov
mov
xchg
jno
sbb
mov
adc
ds
dec
pop
lret
mov
push
lods
cmpsl
test
mov
sarb
xor
mov
cs
and
xchg
mov
or
ljmp
es
in
push
pop
loope
out
loope
clc
mov
scas
lea
aad
mov
inc
xchg
push
fcomps
sub
cltd
pop
outsl
std
ja
jl
sti
jae
fistps
sub
xchg
sti
aaa
outsl
dec
ss
push
lcall
sbb
stos
jne
pop
dec
in
fsub
xchg
lock
mov
into
and
pop
adc
push
out
add
xchg
cs
pop
enter
fs
inc
sub
sub
inc
out
in
lea
outsb
or
sbb
test
xor
data16
dec
xchg
inc
jo
adc
xchg
push
pop
stos
stos
xchg
mov
xor
push
stos
loop
ss
aas
testl
jno
lea
loope
aam
mov
push
mov
test
add
jecxz
les
pop
inc
mov
ret
xor
shlb
test
xor
or
cmpl
cmpsb
mov
lea
mov
and
aam
xchg
jp
xchg
add
dec
pusha
jecxz
sbb
loop
int
mov
cs
int3
push
pop
testl
inc
xchg
ds
out
and
mov
add
pop
pop
pushf
rdtsc
mov
jg
cltd
push
imul
das
icebp
add
push
pop
scas
fidivrs
adc
subb
faddl
dec
mov
add
pop
ret
in
movsl
lods
inc
sbb
aad
cld
outsl
inc
pop
out
lahf
fbstp
push
add
ss
int3
jo
aam
fwait
sub
cli
sahf
cmc
sub
push
loop
addr16
push
sbb
imul
adc
sub
or
mov
jbe
lret
bound
push
hlt
xchg
sbb
loopne
jl
jbe
push
push
cltd
add
mov
lcall
jo
ss
jmp
repz
inc
push
cld
adc
or
ficomps
xchg
xchg
mov
sti
out
dec
mov
adc
lods
push
xchg
test
iret
push
or
stc
xchg
sub
test
cmp
and
fwait
movsb
xlat
nop
in
leave
imul
mov
test
mov
adc
sub
push
jge
and
push
xor
xor
jae
out
mov
lea
jmp
mov
jnp
mov
push
lea
jns
sub
lret
mov
jmp
pop
xchg
xchg
pop
pushf
and
icebp
pop
rcll
push
lea
jle
test
lret
push
test
jns
jecxz
mov
cld
mov
adc
dec
idiv
or
sbb
lahf
lods
dec
fsub
test
mov
int
and
test
jne
bound
mov
jae
dec
ret
cmp
mov
movsb
movsb
pop
jns
and
add
and
cmpl
gs
jae
fcoms
bswap
aad
mov
pop
xlat
jp
dec
loope
imull
cwtl
int
lds
negl
push
xchg
scas
or
add
popa
sbb
cs
xchg
jl
xor
es
sub
out
fisubs
jno
pop
sub
dec
jg
inc
sub
lods
add
cmpb
xchg
mov
das
orb
mov
sarb
jle
cmp
testl
dec
add
int
xchg
sbb
mov
mov
jmp
add
cmpb
scas
leave
xchg
mov
es
jp
lds
push
dec
sbb
fs
jl
lods
pusha
in
in
push
sbb
fxch
push
imul
iret
inc
cmpl
inc
dec
cwtl
or
ja
f2xm1
out
jecxz
iret
rcll
sbb
enter
push
out
into
push
xchg
lock
ljmp
lahf
add
std
lods
fcoml
sbb
push
push
addr16
in
dec
enter
mov
repz
cmp
push
leave
fwait
push
push
jbe
lea
push
pop
jbe
push
xchg
imul
call
adc
push
leave
inc
pop
call
fs
jmp
jae
popa
add
jo
adc
sub
pop
mov
sbbb
aas
pop
mov
clc
push
mov
or
sti
add
mov
add
mov
insl
jl
int3
dec
mov
dec
in
lret
inc
dec
mov
xor
test
adc
xchg
jnp
fldenv
mov
ret
or
inc
les
imul
mov
insl
test
dec
and
jg
lods
xchg
push
mov
sbb
pop
inc
imul
cmpl
push
lcall
lcall
hlt
loop
test
outsb
inc
cmp
jae
leave
sub
ss
push
push
mov
or
jb
mov
lahf
popf
xor
push
and
lret
enter
jp
or
mov
mov
adc
out
fmuls
lds
push
call
out
lods
daa
cmpsl
jo
xor
cmc
xor
jb
dec
pop
rorb
add
ljmp
dec
test
outsl
sahf
adc
je
sbb
loope
cmp
push
cmp
ljmp
sub
pop
jl
push
sub
pop
or
cmp
xchg
add
pushf
push
xchg
push
inc
cmp
mov
and
fidivl
in
js
mov
push
leave
mov
sti
push
jmp
addr16
sbb
mov
mov
fildll
pop
iret
ficoms
add
popa
sahf
scas
or
cmc
icebp
adc
sub
jg
pop
and
lea
sbb
test
lahf
cmpsl
mov
cmpsb
mov
dec
imul
adc
je
sub
inc
adc
adc
cld
outsb
sub
adc
out
xlat
mov
faddl
xchg
jmp
rorl
pusha
shl
test
fidivrs
adc
aaa
leave
add
lods
push
lods
and
jno
nop
ds
outsl
nop
out
cld
je
add
testb
cltd
test
popa
je
xor
data16
and
pusha
rcrl
add
mov
jmp
movsb
mov
pushf
loope
jno
sarb
insl
les
es
jecxz
pushf
xchg
pusha
iret
and
add
adc
mov
test
lock
fs
into
inc
or
xchg
dec
incb
lods
pop
lcall
xchg
jmp
mov
push
insl
xchg
ljmp
cs
scas
dec
fimull
inc
jb
sbb
and
add
stos
sar
mov
mov
push
xchg
mov
ltr
idivl
lahf
fistpll
pop
xchg
inc
cmpsb
cltd
mov
loop
xor
ds
xor
out
mov
mov
js
jp
popf
js
adc
cmpsb
mov
xchg
outsl
mov
lcall
jno
or
shll
add
mov
jns
mov
stos
jl
push
xchg
aam
mov
xchg
hlt
inc
cmpsb
pop
adc
out
sub
jnp
out
dec
shll
aam
pushw
inc
sbb
je
sbb
cld
dec
add
jae
pop
jl
xchg
or
or
cs
pop
push
and
sub
adc
aaa
inc
inc
popa
mul
sbb
mov
jne
inc
sub
pop
pusha
data16
jp
faddp
pop
sbb
pop
insl
pop
cmp
mov
sbb
push
jno
js
pop
mov
lock
pop
stos
pop
mov
xor
pop
mov
inc
cs
imul
push
or
ja
inc
daa
xor
sahf
jle
popf
call
cmpsb
inc
add
jge
and
mov
sub
inc
push
nop
xor
subl
and
repz
hlt
jne
daa
repnz
in
in
insl
fstl
jecxz
ljmp
negl
adc
push
addr16
out
mov
or
mov
jmp
jnp
mov
pushf
ret
push
loop
cmc
sahf
sti
sbb
loope
subl
inc
mov
dec
paddusb
lods
cmpsl
ret
je
bound
mov
sub
mov
mov
sub
iret
loop
xchg
jb
jo
pop
or
andl
out
aaa
xchg
imull
gs
loop
stos
cmpsb
loope
ljmp
push
repnz
mov
fs
sub
pop
stc
movsl
inc
dec
icebp
or
push
nop
shlb
prefetchnta
outsb
mov
mov
dec
jmp
frstor
xchg
les
clc
popf
popf
cmp
in
jmp
xor
loop
mov
pop
push
popa
push
clc
xlat
jae
mov
es
cmp
movsb
subb
xor
fadds
out
subl
pop
shrb
or
push
adc
sarl
ret
loope
mov
or
sub
inc
rcl
fdivrl
sub
cmp
shrl
dec
push
push
push
xchg
imulb
mov
ja
and
je
jns
das
add
int3
test
mov
sub
mov
inc
daa
fscale
aas
ret
aam
imul
scas
jne
or
cld
inc
xchg
jns
xor
sub
mov
pop
test
mov
adc
push
xchg
das
inc
xchg
fs
ss
jbe
sbb
xchg
push
rorb
mov
sbb
in
add
shrb
mov
mov
testb
ss
pop
out
jne
mov
int
out
test
sbb
inc
mov
jp
gs
ret
idiv
stos
repnz
sub
sub
pusha
jnp
jae
js
lods
mov
cs
xchg
lcall
inc
add
out
push
or
mov
push
daa
lret
push
mov
xor
jmp
inc
test
pop
movsb
mov
sub
dec
and
mov
xor
je
cmp
movsl
or
jmp
popf
mov
in
mov
xor
decl
mov
adc
cmp
mov
xlat
xchg
xchg
and
dec
out
insb
xchg
iret
sbb
test
xor
dec
idivl
adc
stc
adc
jae
jb
arpl
ficomps
cmp
adc
jecxz
pop
inc
adc
xchg
pop
stos
xor
pop
orl
mov
push
push
out
clc
pop
popa
mov
cwtl
and
jg
xchg
in
rorb
jo
lahf
mov
mov
lods
jne
cmc
mov
pop
and
cmp
mov
lock
repz
scas
pop
clc
mov
pop
mov
in
dec
jno
idivl
int
test
push
das
lods
je
cmpl
imul
jmp
in
repnz
clc
repz
jns
mov
mov
mov
sub
insl
rorl
pop
subl
fwait
in
push
in
addr16
pop
xor
push
mov
pop
loopne
sarl
lea
ss
cmp
jge
jnp
mov
or
mov
xchg
jmp
out
push
lods
jno
and
lds
lret
mov
addr16
movsb
lahf
adc
sub
jbe
aas
push
inc
push
in
jmp
pushf
popa
jl
mov
mov
pop
sub
inc
jmp
fwait
sub
ss
xor
adc
imull
mov
sti
cmpsl
mov
push
mov
dec
push
pop
jo
clc
mov
xchg
adc
stos
loopne
jecxz
mov
fdivl
daa
hlt
std
xor
out
ja
push
stos
ja
add
ljmp
shll
imull
mov
andl
mov
xlat
mov
mov
ret
sub
xlat
ds
mov
nop
add
ds
sub
stos
add
adc
mov
cmp
sbb
or
add
dec
mov
cmp
and
and
xor
ret
fs
shlb
xor
pop
bsf
or
and
xor
xor
cmp
leave
dec
movsb
test
mov
mov
adc
daa
mov
aaa
pusha
jbe
ljmp
jae
dec
mov
push
mov
idiv
push
jo
pop
mov
call
pop
sub
repz
test
inc
mov
and
pop
scas
imul
icebp
sbb
out
inc
test
push
lods
inc
xchg
aam
fchs
rorb
outsl
mov
mov
or
sbb
test
xchg
nop
rclb
mov
stos
fcompl
sbb
sub
inc
sbb
add
dec
add
xchg
mov
test
lods
cmpl
inc
cld
sbb
int
ret
sbb
jge
shrl
push
pop
and
sbbl
cmp
test
jne
lock
fcom
dec
adc
repnz
and
lret
and
sbb
add
or
fisttpl
popa
stc
sub
and
or
cwtl
pop
sub
inc
loopne
je
jo
in
xchg
dec
jg
adc
insb
cwtl
pop
sarb
lods
mov
out
push
xchg
test
adc
out
jo
xchg
push
loope
or
mov
jno
mov
mov
fcomps
adcl
xor
xchg
sub
lock
or
lock
or
cli
loopne
xor
ret
mov
jo
repnz
lock
jge
insb
jns
out
lds
cld
push
ret
mov
mov
ljmp
xchg
imulb
sbb
pop
jb
bound
daa
add
pushf
mov
add
push
sbb
hlt
lcall
xor
cmpsb
mov
cmp
aam
mov
sbb
push
jae
test
mov
inc
xor
jbe
adc
sub
out
icebp
cmp
mov
jp
jecxz
jne
push
and
sahf
cmp
lahf
movsl
adc
inc
or
adc
popa
xchg
sbb
lret
imul
jnp
inc
mov
sti
pop
outsb
incl
cmpsl
push
push
clc
rcl
rcrb
dec
xchg
insb
pop
out
rol
sub
in
mov
cmpsb
stos
xchg
or
stos
and
mov
lret
scas
pop
ja
aas
pop
jnp
out
sbb
jno
out
xor
xor
xor
repz
pop
fsts
popf
std
cmp
fmull
adc
clc
sbb
je
pushf
mov
inc
pop
mov
lock
mov
mov
cmp
push
into
mov
add
push
shrl
aas
or
xchg
mov
sub
and
pop
imul
cltd
cmc
out
sub
int
jno
test
jnp
sub
or
sub
out
xchg
xlat
test
pop
dec
or
cwtl
mov
test
lea
sahf
and
rol
in
std
out
mov
inc
mov
loopne
pop
jge
addr16
pop
test
pop
sbb
and
bound
data16
xchg
and
push
pop
adc
lret
xor
xchg
cwtl
xchg
fs
ss
test
mov
aam
dec
jmp
nop
daa
xor
sbb
sub
jge
movsl
stc
cmp
fidivl
out
loopne
add
nop
mov
bnd
lret
ret
jecxz
mov
jl
movsl
jb
cmpsl
push
adc
mov
cs
adc
sbb
gs
fistpl
push
insl
add
push
xchg
lods
sub
stos
push
mov
xchg
cmp
push
out
ljmp
gs
mov
ja
mov
nop
stos
xor
cmp
adc
or
and
call
clc
leave
and
pop
adc
popa
negb
jecxz
adc
aam
inc
stos
inc
or
push
imul
jge
sub
cwtl
sub
mov
jg
ljmp
icebp
fwait
jae
imul
movsb
push
push
stos
mov
jne
adc
lcall
jne
rcrl
cmp
in
xor
jo
and
movsl
test
pop
inc
out
push
and
or
outsl
mov
repz
test
fnstsw
sbb
imull
sbb
pop
mov
or
addps
leave
addr16
imul
mov
insl
in
xlat
and
pop
inc
xchg
repnz
in
cmp
fstl
or
inc
xchg
jbe
stc
mov
mov
add
xor
outsb
dec
pop
popa
pop
aas
xchg
jne
mov
add
push
stos
ljmp
sbb
test
mov
iret
sbb
adc
sub
cmc
dec
xor
and
mov
fisttpll
sbb
push
imul
test
mov
sub
xchg
out
xchg
mov
jae
arpl
stos
cmpsb
bound
mov
pop
movsb
adc
sub
mov
cmpsl
dec
leave
dec
daa
jns
and
frstor
add
in
xor
xchg
pop
jo
add
jg
test
shrl
sub
movsl
mov
daa
notl
shlb
lahf
cli
sarb
mov
pop
jg
jne
mov
push
call
inc
adc
mov
jl
in
push
das
test
or
aam
cmp
ds
stos
inc
lcall
or
je
shll
push
mov
call
push
dec
xchg
xchg
test
cmp
lock
mov
mov
out
ljmp
push
pushf
ss
dec
bound
mov
icebp
fldt
aam
mov
pushf
dec
fnstenv
and
call
mov
shrd
add
ja
bound
pop
mov
adc
ljmp
mov
sbb
std
ret
movsb
sbb
movl
ja
fstl
mov
cld
aam
jae
test
out
jb
or
shll
ss
push
adc
cs
lcall
lahf
cmp
pusha
test
xor
sti
mov
or
mov
js
mov
ljmp
pusha
lods
ret
ret
pop
sbb
or
push
pop
aaa
sti
les
jl,pn
repz
fnstcw
mov
mov
jbe
mov
loope
pop
addr16
dec
xor
sbb
cs
mov
aad
sub
in
jnp
testl
xchg
jecxz
xor
mov
inc
stc
and
call
dec
jle
outsl
and
dec
outsb
repnz
lods
dec
movsl
lcall
mov
jl
js
push
fcmovu
insl
mov
jmp
add
das
mov
adcl
sub
cmpsb
mov
xchg
aad
dec
mov
push
or
xor
stc
xchg
enter
lret
pop
and
xchg
push
cmp
loopne
mov
aas
jbe
test
pop
add
popa
fdivl
fnsave
inc
add
and
pop
outsb
into
clc
clc
and
test
pop
sahf
or
out
mov
sub
or
sti
xor
cmp
cmpw
in
in
std
sbb
add
and
xchg
jle
call
addb
and
mov
ja,pt
dec
mov
sbb
out
jo
pop
lock
aaa
adc
inc
sbb
inc
mov
ljmp
test
mov
adc
cmp
call
pop
aas
pusha
push
fstp
xchg
xchg
mov
inc
or
incb
push
and
pushf
mov
rolb
js
or
into
rorb
jmp
into
dec
movsl
sbb
cltd
fwait
notb
loope
mov
or
xor
xchg
aam
testl
push
fmul
shrb
xlat
inc
inc
dec
mov
add
jecxz
pop
mov
roll
mov
std
sbb
test
mov
pushf
xchg
leave
or
mov
arpl
jg
jae
dec
inc
cmp
fwait
stos
push
nop
pusha
cli
dec
jbe
inc
mov
push
pop
jp
xchg
pop
jmp
cli
aas
jno
dec
cwtl
cmpb
das
loope
adc
inc
xor
fdivr
in
sub
popa
call
sub
mov
mov
pusha
subl
cld
imul
push
adc
dec
adcb
clc
outsl
sub
mov
loopne
popf
dec
dec
mov
dec
inc
mov
outsl
xchg
dec
sbb
inc
ds
int3
push
pusha
sbb
pop
xor
es
iret
insl
and
add
js
mov
pusha
cli
cld
movsl
es
enter
xchg
mov
push
repz
icebp
mov
pop
scas
xor
hlt
jno
cmp
inc
fsubr
fldcw
mov
push
mov
xor
aam
jge
rcrl
and
xchg
mov
cmc
popa
test
dec
out
ret
das
iret
push
inc
cwtl
in
pop
fldcw
pop
outsb
lea
loope
push
push
xor
push
mov
stc
push
xchg
dec
sbb
add
je
fwait
sub
imul
sbb
gs
dec
fidivs
xor
add
xchg
fistps
and
xor
aas
mov
sarb
jge
mov
mov
data16
or
pop
xor
popa
sub
jo
out
xchg
dec
repz
push
inc
mov
jl
sub
movsl
mov
and
faddl
mov
push
insl
fwait
jle
add
mov
pop
push
aaa
jo
push
jp
lahf
adc
inc
adc
das
jbe
jg
insb
dec
fs
push
cli
dec
mov
test
xor
fwait
jge
idivb
or
into
xchg
push
repz
sub
jp
jle
mov
mov
sbb
cmp
push
inc
repz
aam
dec
sbb
aam
mov
lahf
xor
mov
and
cmp
in
testb
jmp
cmp
jno
push
mov
shlb
push
cmp
xchg
xchg
dec
dec
mov
or
xchg
lahf
mov
cmp
cmp
mov
push
adc
jns
add
mov
out
imul
hlt
pop
iret
mov
xchg
inc
xor
ljmp
push
mov
sbb
push
bound
js
lea
scas
sbb
xor
loope
stos
sahf
xor
bound
inc
xchg
cs
sbb
add
or
call
inc
stc
mov
sub
sahf
aam
aad
shll
or
cli
xor
popa
push
sbb
push
jl
por
cli
jecxz
movsl
push
lahf
push
aaa
ljmp
mov
or
adc
mov
cltd
mov
mov
movsb
dec
xchg
fwait
test
out
repz
je
push
das
or
sub
scas
imul
sbbb
adc
fidivrs
roll
dec
cmp
je
aaa
pop
add
es
lret
nop
adc
cmp
test
test
add
fdivl
mov
xchg
or
adc
in
mov
mov
insb
xchg
fxtract
mov
xor
xchg
fstps
repnz
mov
pop
jbe
jl
cld
mov
leave
aam
xchg
add
jle
adc
and
sub
stos
mov
push
xor
ss
xchg
arpl
adcl
mov
cmc
and
call
ljmp
jp
adc
movb
sahf
in
push
adcl
hlt
add
xor
test
cwtl
mov
add
orb
jbe
dec
into
fnstsw
std
inc
icebp
sub
cli
inc
hlt
inc
enter
sub
notb
out
fcmovbe
lea
dec
clc
mov
cmp
adc
movsb
inc
mov
cmc
lock
xor
loopne
rolb
pop
rep
out
decl
add
dec
in
mov
mov
pop
mov
xor
xchg
iret
in
push
cmc
in
hlt
sub
xor
xchg
ds
xchg
sti
jge
sahf
adc
sbb
pop
jb
sahf
mov
outsl
pop
sti
shl
fdivrs
mov
test
dec
jmp
mov
call
dec
xor
shl
lock
int3
mov
inc
sbb
push
fdivl
xchg
cli
daa
jl
fidivrs
nop
dec
mov
test
test
and
pop
imul
addr16
pop
arpl
sbb
das
add
cli
rorl
mov
push
push
mov
stos
subl
repz
xchg
mov
sti
icebp
daa
or
loope
test
mov
xchg
jns
sbb
lock
sbb
adc
insl
ret
jge
adc
pop
dec
push
lret
in
xor
ss
movsb
pop
inc
sahf
outsb
push
mov
sbb
sub
je
in
jae
icebp
fsubrp
mov
ljmp
out
pop
inc
push
mov
fbstp
call
cld
or
and
push
stos
roll
adcb
cmc
mov
popa
jmp
andb
adc
stos
popa
or
mov
shr
sub
ret
jmp
movl
dec
dec
rcl
out
lret
cmp
mov
sbb
jno
xchg
add
enter
dec
jbe
mov
jnp
dec
or
cli
dec
sub
aam
jle
or
enter
out
test
cld
loope
add
sbb
or
cld
jno
lahf
xor
xchg
xchg
pop
pushf
push
inc
gs
mov
mov
icebp
lods
dec
sti
push
xor
push
mov
fnstsw
adcb
push
push
roll
pop
and
push
push
fistps
pop
ds
pop
neg
lahf
fs
mov
xchg
stc
jnp
cmp
rolb
repz
adc
push
negl
fisubrs
cmpb
rcrl
cmpsl
jns
pop
xchg
push
cld
mov
cs
mov
lahf
les
test
cmp
mov
and
dec
sub
imul
add
movsl
fstps
inc
repnz
dec
loopne
popf
cmp
or
and
xor
xor
push
jl
or
rorl
fistpl
mov
ret
loop
cld
repz
pop
call
mov
ficomps
pop
cmc
test
fistpll
lds
arpl
hlt
mov
add
mov
mov
lret
mov
movsb
sahf
push
mov
dec
out
add
sbb
ja
data16
ja
xor
dec
mov
mov
adc
mov
jnp
cmp
shrl
xor
shlb
call
cmpsl
addl
lret
xor
aas
xor
dec
xor
sbb
enter
stos
out
push
sbb
jg
out
pop
fstps
dec
cmpsb
lret
lret
adc
push
inc
mov
push
jo
gs
aam
adc
inc
out
mov
repnz
mov
and
popa
jbe
jns
pop
adc
jp
lcall
aam
push
inc
arpl
jge
mov
mov
orl
movsb
push
mov
and
mov
jecxz
sub
pop
movsl
negb
cmp
cld
mov
pushf
inc
arpl
fiadds
cmp
and
lea
sti
sti
inc
out
mov
jmp
xor
subb
mov
popf
test
dec
xor
xchg
mov
adc
jne
fprem
jne
mov
aam
clc
pop
xchg
dec
in
dec
inc
dec
out
or
xchg
mov
je
sar
jns
push
mov
out
je
cmp
xor
retw
xchg
cltd
xchg
cmp
imul
or
repnz
stos
pop
enter
test
xorb
cmp
jne
pop
fdivrl
inc
push
mov
cmovnp
push
mov
dec
gs
sbbl
gs
movsl
mov
ret
out
jge
inc
mov
mov
or
ja
add
pop
je
xchg
xor
ret
and
cs
inc
aaa
jmp
andb
popa
imul
nop
repz
pop
mov
in
cmp
mov
test
scas
xor
mov
mov
add
and
lcall
lods
sbb
test
mov
jnp
sub
shll
mov
cmp
jmp
fwait
mov
aad
xor
fimuls
jl
xchg
rcrb
pop
dec
or
sbb
lahf
leave
xchg
xchg
in
cmp
outsb
mov
pop
fisttps
dec
cmp
xlat
or
adc
add
or
add
add
mov
push
je
xchg
fcom
ret
sub
int
adc
xor
lret
loopne
jmp
xchg
jne
rol
lea
rcll
sub
loop
sub
daa
push
mov
iret
movsb
cwtl
outsl
jl
out
inc
iret
mov
dec
inc
sub
cld
pop
cmpsb
lcall
shrb
pop
mov
xchg
dec
add
push
push
jg
xor
xchg
pushf
dec
lds
xchg
clc
jo
std
out
push
std
mov
push
imul
mov
pop
rorl
in
cs
pop
and
dec
sti
cmp
test
inc
xchg
shlb
add
rcll
mov
repnz
lret
les
fisubl
int
or
mov
jle
dec
pop
or
movsl
xor
mov
sub
pushf
cmc
jo
orb
icebp
push
jno
mov
int3
adc
cmp
pop
in
fcmovb
cmp
andb
sub
ljmp
popf
or
jge
xchg
push
imul
loopne
aas
dec
adc
mov
jp
sub
fidivrs
fidivrs
and
pusha
push
mov
push
mov
push
ljmp
xchg
inc
out
mov
or
mov
ret
sti
mov
sub
cmc
addr16
jl
inc
pop
push
cld
push
orb
push
xor
jnp
lods
sub
in
and
cwtl
cli
hlt
bound
add
pop
rol
cs
add
arpl
add
sbb
in
jo
jb
pop
push
sbb
cmp
aas
xchg
sub
jmp
in
popa
xchg
inc
loopne
sub
popa
cld
outsb
pop
iret
mov
or
jae
stos
or
arpl
mov
mov
adc
movsl
test
in
cmpsl
test
add
jo
dec
push
mov
addl
fmull
aad
jae
ds
or
xor
pop
cmp
or
sub
xchg
cmp
sti
nop
shlb
sbb
js
repnz
sbb
clc
or
push
and
in
aam
jmp
imull
cwtl
pop
or
test
mov
pop
xchg
cmpsb
mov
push
mov
rclb
xor
lret
addl
sub
arpl
mov
int3
pop
and
xlat
xor
or
test
das
push
les
sti
jns
imul
push
jle
dec
dec
scas
jbe
cmp
xchg
repz
mov
repz
call
push
mov
popa
out
scas
leave
rorb
scas
and
xchg
stc
leave
push
test
pop
ret
jp
add
xchg
clc
dec
pop
push
inc
inc
fmull
xchg
aaa
dec
sub
negl
lcall
cmp
jmp
mov
movsb
sub
xor
pop
fcoms
mov
sbb
shlb
push
push
fisttps
mov
in
mov
mov
les
sbb
adc
iret
cli
dec
push
and
sbb
pushf
vpsllq
add
xlat
jl
popa
xchg
sbb
bound
out
pushf
js
pop
cwtl
ja
jg
xor
out
mov
add
adc
xchg
fldenv
je
es
sub
xchg
nop
mov
rorb
add
pop
pop
out
das
cld
pop
fistpl
loop
mov
and
dec
pop
in
inc
adc
push
rolb
or
pop
repz
lcall
mov
cwtl
sub
mov
jle
into
dec
xchg
int
and
fnstcw
icebp
insb
jle
adc
ret
ja
fstp
out
mov
iret
pop
stos
add
sbb
test
clc
mov
imul
xchg
psubd
jno
push
jbe
cli
mov
iret
loopne
inc
stc
cmpsl
into
fsubl
or
mov
mov
iret
stos
stc
pop
in
and
sbb
ja
data16
bound
ljmp
stos
sub
pop
std
loope
lods
scas
mov
jg
lret
fadds
jmp
xchg
mov
dec
xchg
mov
jbe
add
repz
andl
cmpb
into
hlt
cs
repnz
imulb
mov
scas
shrl
out
cmp
inc
outsb
dec
rorb
dec
sbb
movsl
mov
icebp
mov
jmp
lds
daa
adc
pop
cmp
xchg
jp
adc
je
xor
xchg
adc
mov
stos
ss
lcall
xor
cmpsb
jg
lods
jl
jle
in
inc
lds
imul
out
push
call
and
sahf
cmpsl
add
fisubrs
add
xlat
mov
inc
add
dec
and
mov
mov
int3
aad
loop
mov
repz
xorl
js
mov
fldl
jmp
out
dec
add
xor
rclb
sbb
or
push
loop
mov
orl
jg
aas
mov
daa
jae
movsl
leave
xchg
cmp
inc
adc
xlat
daa
jno
jbe
xchg
not
mov
ret
sub
sbb
pop
cmp
jno
pop
xlat
mov
testl
loopne
pop
fiaddl
out
outsb
lahf
sbb
sub
sub
js
jmp
in
and
xchg
mov
jno
xchg
fdivl
sbbb
mov
mov
test
fcmovu
sbbb
jnp
daa
dec
cmp
ret
jecxz
ret
mov
cmp
pop
sub
mov
push
push
inc
lret
rcrl
pop
fs
dec
and
cmc
and
jp
xor
lahf
cmpsb
xchg
xor
push
rcrl
push
jmp
shrb
mov
pop
push
ficoms
adc
dec
mov
jo
and
std
jmp
pmulhw
dec
cmp
adc
dec
scas
jo
fdivrs
xor
mov
sbb
test
test
std
lret
cmpsb
clc
lods
push
mov
or
jge
or
mov
inc
rcr
pop
gs
cmpsb
xor
or
out
cmc
adcb
mov
cmp
shrl
gs
cwtl
insb
sub
lret
ss
shll
scas
sub
xchg
jb
imul
xorb
xchg
out
fwait
or
les
mov
js
cmpsl
or
push
lea
mov
shrb
gs
outsl
ja
and
pop
cmpsl
push
add
push
mov
inc
js
add
aas
movsb
je
xchg
sub
dec
test
cmpsl
sbb
xchg
add
mov
cs
int
lds
and
fistl
mov
inc
xor
jge
xchg
in
movsl
je
leave
std
inc
pop
jns
dec
pop
lock
push
lods
pop
cltd
or
call
push
ret
jmp
and
lea
dec
mov
ficomps
add
loop
fs
fcoml
out
scas
lea
cmp
push
mov
addr16
std
ficoms
pop
jbe
xlat
pop
pop
mov
fwait
pop
cli
pop
shrl
inc
push
jg
xlat
xchg
repz
arpl
mov
sbb
sti
scas
pop
fwait
icebp
ret
int3
loopne
jmp
xor
pop
fsubrs
xor
pop
and
dec
push
mov
push
mov
in
jne
cmpsl
mov
adc
rcr
pop
sub
lahf
sub
sub
push
xchg
add
mov
mov
repz
xchg
cltd
and
es
mov
shrb
jl
cmp
dec
or
fcoms
add
mov
clc
mov
push
in
cmp
lock
or
push
inc
and
ret
and
aam
nop
mov
add
push
dec
pop
inc
pop
inc
or
xchg
xchg
pusha
push
inc
lcall
lock
in
mov
fdivrl
pop
dec
cmp
data16
sarl
mov
rorb
or
mov
sbb
jmp
sub
in
in
leave
xchg
push
jnp,pn
jbe
into
add
add
sub
sub
mov
or
stos
pop
pop
sbb
fistl
jbe
inc
push
pop
popf
push
es
sub
adc
lcall
cwtl
ss
xor
mov
test
mov
jae
pminsw
or
inc
cmp
and
fmull
inc
push
and
xchg
mov
mov
jl
bound
sub
popf
jae
insl
in
cwtl
sbb
xchg
sahf
jns
scas
mov
aam
add
xchg
dec
pushf
pop
in
push
adc
pop
test
mov
mov
sbb
pusha
pop
outsl
xor
dec
or
fst
sbb
mov
subb
incl
mov
dec
lret
xor
pop
and
fnsave
cmovbe
loopne
lahf
sbb
iret
mov
inc
sbb
sarl
lea
bound
mov
dec
cmpsb
in
pop
pop
push
add
sbb
dec
jmp
outsl
xor
loopne
das
repnz
shll
jae
sbb
mov
dec
rcr
enter
add
xchg
cmpsb
push
push
cmp
rcrb
xor
pop
sbb
mov
and
xlat
lods
aam
out
pusha
call
jle
fs
pushf
aas
push
ret
andl
cmp
cltd
xor
adc
outsb
pop
bound
idivl
insl
mov
cwtl
mov
mov
pop
in
cmp
mov
out
mov
mov
push
dec
cmp
inc
mov
sahf
or
hlt
xchg
jmp
xchg
test
mov
inc
rol
daa
dec
push
push
lds
mov
loopne
loope
aas
sahf
jp
xor
mov
pop
fs
scas
mov
dec
aaa
cltd
lret
imul
gs
aam
xchg
xor
mov
push
cmp
and
test
mov
loope
mov
xor
mov
stc
enter
jg
pop
inc
jnp
mov
inc
daa
mov
mov
sbb
dec
mov
jle
xor
cmp
stos
fwait
xchg
xchg
inc
jb
enter
mov
das
jl
lcall
push
mov
out
jo
mov
xor
xchg
stc
lret
sarb
inc
cmpsb
adc
cmp
xchg
stos
aad
mov
pop
test
popf
decb
andb
dec
cltd
es
mov
jl
lcall
idivb
sbb
clc
pop
mov
mov
dec
xchg
and
pop
lahf
xor
push
fsubl
and
sete
cmp
stos
dec
out
test
mov
jb
xor
jnp
xor
mov
jp
ret
stos
inc
dec
pop
mov
dec
cmp
and
ror
out
push
push
out
ja
ret
repnz
repz
mov
xor
je
mov
aaa
xchg
iret
insb
lret
xchg
jmp
pop
xchg
stos
aad
rolb
mov
add
mov
or
sub
jecxz
xchg
ljmp
das
pop
lret
and
mov
push
xchg
idivl
push
pop
mov
mov
inc
cmpb
ffreep
movsb
outsl
push
sub
enter
mov
inc
fwait
jae
dec
mov
dec
mov
xlat
add
dec
push
dec
push
push
fiadds
xchg
mov
ja
cwtl
push
gs
bound
and
add
mov
mov
jmp
inc
pop
jecxz
loop
mov
loopne
sar
pop
das
ret
add
cmp
mov
bound
stc
xor
sbb
shr
jecxz
and
out
psrlq
sbb
pop
xor
sbb
adc
adc
xchg
insb
sub
adc
cmpsl
xchg
add
movl
ss
dec
shll
sbb
or
dec
imul
out
xchg
mov
stos
in
mov
push
rcll
adc
pop
movsb
mov
mov
push
mov
xor
fldcw
and
mov
mov
mov
repz
jmp
push
and
cmp
dec
cmp
pop
push
loope
nop
mov
lahf
jp
adc
jecxz
pop
jle
daa
cmp
fdivs
pop
pop
mov
sub
push
shll
popf
leave
add
scas
cmp
mov
cmpsl
pop
lahf
aam
inc
fwait
lret
test
fnstsw
loope
repnz
fnstenv
and
into
rolb
shlb
ljmp
jnp
es
out
test
fisubs
mov
mov
nop
rorb
xor
arpl
add
sub
cmpsl
pop
cmp
push
sub
adc
cmp
adc
mov
in
bound
push
sub
push
int3
gs
jge
xchg
push
mov
int3
aaa
mov
pop
jmp
dec
or
mov
pop
add
add
test
or
push
push
xchg
cs
ljmp
sbb
sub
mov
sub
jb
iret
xor
cmp
ficomps
mov
dec
sub
xchg
int
inc
loopne
shlb
add
scas
mov
movd
xor
testl
out
jnp
inc
mov
outsb
sbb
or
xor
ds
lock
out
cmpsl
les
cmp
xor
dec
cmp
in
and
dec
or
xor
movsb
mov
xor
pop
and
push
iret
or
dec
ljmp
lds
lcall
int3
sub
inc
cmpsl
insl
rorl
flds
mov
sti
in
fstps
add
jns
arpl
dec
mov
jnp
push
lds
cli
adcl
stos
int
mov
xlat
cli
repz
pop
add
shrb
fsubs
out
cmpl
jp
lock
push
xor
jns
popf
sub
lret
aam
sub
xchg
xchg
dec
xchg
mov
aas
sbb
in
and
out
cmpsl
mov
and
push
add
cltd
xchg
addr16
push
or
clc
xchg
adc
mov
add
lods
test
fdivrs
orl
and
cmc
sbb
pop
lahf
fidivs
push
cwtl
push
ds
jnp
pop
imul
xor
loopne
andb
inc
sbb
pop
sub
repz
push
xchg
dec
sub
jle
pop
scas
enter
fdiv
lret
cmpsl
jle
test
out
inc
out
push
cmp
call
fwait
inc
test
aam
ds
xor
test
out
add
fistl
insb
ds
sbb
aam
or
xor
in
jns
mov
jno
data16
into
les
fmull
subl
pop
repz
sub
add
sarb
in
loope
or
cmc
pop
rcl
xor
mov
fadd
leave
outsl
mov
xor
inc
or
jns
jbe
ret
fsubl
jns
and
inc
hlt
mov
int
mov
pop
popa
cmc
cmp
cmp
gs
pop
cmp
sub
cltd
ja
sarl
or
xchg
inc
fildl
imul
adc
push
push
int3
rcrl
pop
sub
adc
outsb
stos
sbb
mov
cmp
add
cmp
sbb
adc
lret
movsl
jecxz
jl
mov
inc
outsl
lret
mov
adc
ljmp
jp
inc
dec
out
inc
add
lds
add
mov
lret
inc
fs
add
cmp
jb
repnz
arpl
mov
jp
jmp
out
movsb
xchg
bound
test
push
cli
jbe
or
stc
in
pop
or
aas
cltd
dec
in
iret
xchg
dec
add
lds
rcr
js
jbe
pop
adc
pop
clc
repz
mov
mov
movl
jns
cmp
iret
lods
or
jo
mov
sbb
daa
push
mull
sbb
sub
and
sbb
adcl
cli
mov
add
sub
pop
or
scas
jbe
pop
out
out
sub
dec
insl
arpl
cwtl
int3
mov
pop
push
adc
out
flds
xchg
push
stc
idivb
inc
jge
inc
or
dec
mov
mov
std
insl
aam
jo
xchg
stos
cmpsb
dec
popf
je
out
cwtl
xchg
cmp
mov
add
adc
sub
out
mov
orl
arpl
pop
and
jnp
stc
add
adc
xor
cmp
adc
sub
stos
adc
clc
scas
jecxz
jnp
lds
jne
pop
adc
aaa
pusha
or
mov
cmp
and
cmp
leave
xor
hlt
dec
subl
xchg
inc
inc
mov
repnz
mov
push
sbb
lcall
and
sti
je
in
mov
cwtl
addb
add
pop
popa
fbld
test
cmc
jp
cmp
pop
jo
xchg
jne
js
repz
int
mov
add
insb
shl
fbld
ret
xchg
cmpsb
xchg
jle
cmpsl
or
and
ss
leave
dec
loopne
clc
or
rcr
cmp
or
inc
cmp
and
test
jno
mov
cltd
sub
ficoml
push
gs
cmpsb
or
and
stos
int3
xor
faddl
jp
stos
or
mov
ja
icebp
push
fwait
xchg
mov
or
adc
mov
mov
inc
fbstp
faddl
inc
and
lods
mov
outsb
leave
mov
icebp
decb
mov
sarb
out
dec
daa
out
adc
imul
pop
adc
mov
push
inc
gs
test
gs
data16
inc
add
mov
pop
and
sbb
dec
sbb
cld
pop
je
inc
setne
cmpsb
and
or
clc
insl
jo
mov
and
adc
jb
mov
inc
cmc
inc
add
dec
mov
cmc
or
xchg
lods
mov
aas
jbe
mov
fwait
int3
pusha
xchg
out
std
pushf
fcompl
jle
or
cmp
mov
mull
mov
fidivrl
cmpl
pop
dec
pushf
sbb
adc
add
jle
adc
test
out
lods
add
push
mov
notb
push
popa
shl
push
int
jp
ret
out
xchg
pop
dec
sarb
push
mov
mov
mov
cwtl
xor
xor
cmp
dec
cmp
mov
daa
ret
sbb
neg
mov
aad
and
cmc
clc
jns
or
and
call
lret
aam
in
jbe
out
in
pop
xchg
xchg
mov
add
mov
pop
scas
xchg
cmp
call
pushf
scas
lret
jle
je
pop
xchg
xor
je
pusha
pop
xchg
int
pop
add
hlt
jle
ljmp
hlt
add
push
pop
mov
jns
cs
mov
mov
or
push
pop
cli
inc
sub
pop
cmp
jp
mov
adc
cli
xchg
jnp
xorl
sahf
lods
loopne
in
adc
leave
cmp
es
push
dec
rcrl
mov
adc
pop
or
inc
push
inc
inc
adc
daa
hlt
mov
adc
inc
dec
cmp
lret
jmp
push
adc
je
subl
mov
out
insb
jmp
lds
scas
push
jns
xor
push
lods
mov
dec
mov
icebp
cmpsb
jge
fimull
out
outsb
out
xchg
add
and
cmp
dec
dec
xor
leave
cmp
mov
adc
add
test
cmp
sahf
mov
mov
cmp
sbb
int3
mov
icebp
fistl
leave
loope
push
mov
inc
sti
push
ret
cmp
pop
or
jmp
sbb
sub
jno
mov
pushf
push
pop
cmp
stos
xchg
xchg
jo
pop
fs
mov
sub
out
dec
mov
enter
jl
cs
fnstsw
cmpl
in
cmpsl
inc
loope
inc
add
jge
pop
jge
aad
mov
out
pusha
pop
sbb
filds
bound
mulb
or
adc
fisttpl
sub
iret
jmp
mov
adc
pop
mov
rorb
rorl
dec
xlat
subl
xchg
mov
mov
cmp
repz
add
int
dec
xor
scas
test
mov
jo
popf
orb
ja
leave
scas
loopne
push
addl
push
stos
cmp
lahf
jno
add
iret
lret
adc
dec
in
dec
xchg
pop
xchg
lock
fsubl
sub
out
insl
cwtl
mov
mov
and
sbb
dec
arpl
cmpsb
mov
pushf
inc
pop
dec
pop
sbb
fisubl
cmp
clc
sbb
and
mov
in
inc
stos
cld
mov
jle
andb
adc
xchg
popa
add
adc
scas
sahf
pop
pop
cmc
cmp
dec
mov
push
mov
popa
iret
push
fistpl
jle
daa
leave
or
aad
xchg
add
fldcw
push
adc
dec
pop
pop
inc
push
test
lds
insl
pop
inc
mov
sbb
rolb
mov
or
in
xor
fmuls
adc
and
flds
adc
pop
cmc
scas
lock
push
outsb
es
mov
jb
jmp
iret
rorb
arpl
jns
and
gs
movsb
mov
fmull
cmpsb
loope
xchg
imul
add
mov
lret
adc
lods
hlt
pop
adc
and
add
cmp
movsl
jp
mov
or
out
mov
dec
cmp
xchg
sbb
icebp
dec
sbb
sahf
xorb
sbbl
repz
pop
add
mov
lea
mov
imul
outsl
enter
cld
fsts
jns
popa
leave
jne
cmp
and
xchg
subl
adc
lods
pop
fcoms
dec
mov
xchg
cltd
mov
aas
mov
subl
lock
mov
push
jne
jecxz
pop
adc
lcall
mov
imul
sbb
push
push
mov
cmp
cmpxchg
aam
xor
sbb
std
dec
adc
xchg
les
push
lahf
insb
repz
js
stos
xchg
sbb
ja
xchg
dec
xchg
push
pop
mov
rep
mov
and
cmp
mov
dec
sbb
gs
push
inc
sbb
rcrl
scas
adc
jno
mov
cwtl
push
mov
sbbl
frstor
pop
in
inc
test
xchg
add
dec
adc
jmpw
aad
outsl
lcall
pop
nop
xchg
fs
dec
xchg
lds
or
ss
mov
jne
inc
sti
or
inc
test
push
mov
jno
dec
pop
cmp
push
and
cmp
loopne
loop
ja
movsl
lds
sbb
cmpsb
jbe
sbb
bound
jbe
cmc
fadds
mov
cmp
lods
xchg
mov
cmpsb
aas
mov
int
xor
cmp
inc
fsub
adc
sub
test
cwtl
gs
pop
outsl
jo
sbb
cmp
cmp
negl
mov
adc
cmp
ret
push
je
mov
jp
mov
jge
inc
scas
inc
fdivrp
sahf
mov
jns
movsb
pop
xor
lahf
cwtl
enter
smsw
sbb
jno
or
cmpsl
ror
popf
push
pop
add
push
in
mov
je
in
test
outsb
dec
push
pop
sti
mov
mov
mov
scas
fistl
dec
dec
test
xor
dec
fisttps
add
movb
add
ret
push
mov
addr16
lods
mov
xor
dec
xor
jns
xor
sbb
mov
not
mov
push
xchg
data16
clc
outsl
add
decl
test
pop
bound
rorl
mov
jno
test
sahf
in
icebp
add
xchg
xchg
jg
inc
mov
fisubrs
sbb
add
cltd
mov
dec
in
ss
ja
fnstsw
mov
inc
sub
stc
filds
jmp
jecxz
lds
jnp
dec
in
popf
data16
pop
shlb
jb
imul
sbb
lahf
push
test
mov
arpl
cmp
pop
mov
lock
outsb
test
and
inc
sbbb
push
jge
dec
push
inc
xchg
test
mov
mov
enter
cli
arpl
xchg
aas
mov
inc
xchg
mov
mov
add
fsubp
sti
push
inc
cwtl
shrb
cmpsl
jecxz
adc
dec
in
out
ljmp
or
jnp
push
adc
fwait
mov
or
jge
int
jns
lock
pop
cmc
dec
pop
mov
push
push
rcll
xor
in
aas
rorb
mov
pop
pushf
adc
pop
stos
add
enter
test
mov
jnp
cmpsl
mov
loopne
scas
push
outsb
dec
js
or
cmp
cs
sub
mov
mul
or
fs
adc
outsl
cmp
sub
aas
or
mov
pop
or
ror
or
sbb
mov
test
inc
pop
adc
test
jno
subb
imul
and
sub
xlat
push
xchg
or
or
pop
mov
jle
adc
mov
rorb
cmpsb
mov
repnz
das
xchg
cmp
lds
popa
mov
cmp
js
and
cmp
mov
and
ud0
std
sbb
ljmp
js
vphaddwq
cld
test
shrb
in
fildll
mov
sub
push
xchg
jg
mov
icebp
aaa
mov
push
sub
ret
rorb
and
cmpsl
mov
aad
enter
mov
daa
xchg
pusha
shll
adc
inc
les
jl
repnz
sub
stos
loop
jmp
cmp
xchg
flds
cs
lcall
add
repz
imul
stos
sub
enter
iret
mov
adc
leave
into
pop
jecxz
popa
xor
cmp
adc
shll
inc
movsl
fwait
test
mov
cmp
add
pushf
jl
sub
push
dec
rcrl
adc
add
mov
and
int3
sub
ljmp
sbbb
fwait
jno
xchg
jle
in
mov
rcll
jmp
push
nop
sahf
pop
sbb
xchg
out
and
push
xor
xchg
arpl
mov
mov
lahf
pusha
cmp
in
cmp
scas
iret
adc
test
pushf
cmpsb
jmp
roll
ret
xchg
std
lcall
xchg
jmp
xchg
popf
xchg
cwtl
and
scas
push
inc
push
lahf
dec
pop
xlat
xchg
cli
into
dec
sbb
xor
jg
push
mov
sub
jno
insl
cld
lods
arpl
dec
clc
xor
fstp
xlat
lret
sub
sahf
xor
mov
jle
mov
bound
or
loope
aam
push
xchg
inc
cli
int
pop
pop
pop
dec
adc
in
mov
int
andl
push
in
xor
pop
inc
xor
push
mov
roll
jns
pop
jle
add
insl
data16
mov
in
aas
jecxz
aam
fdivrl
push
xchg
arpl
xor
daa
pop
push
jle
test
loope
mov
xor
pop
dec
or
cli
std
pop
ficoms
sbb
lea
push
adc
cwtl
adc
push
adc
mov
testl
out
jae
jno
ja
lahf
aam
mov
add
mov
mov
and
js
mov
repnz
dec
inc
nop
push
flds
gs
sbbl
xchg
mov
ja
and
jp
daa
xchg
inc
and
bnd
pushf
rorl
adc
cld
cs
nop
repnz
les
je
inc
into
js
dec
lock
aaa
loope
mov
push
jmp
call
pop
addb
push
enter
jmp
sarl
popf
xchg
fisubrs
jle
or
sub
std
jecxz
gs
pop
es
andb
jo
jb
dec
ficompl
and
ljmp
add
idivl
test
mov
or
xchg
gs
nop
test
jg
bound
push
pushl
jb
or
or
repnz
xchg
fadds
adc
pop
xchg
insb
ljmp
fisubl
addr16
call
dec
sbb
push
fs
lret
mov
push
pop
repnz
jb
sub
dec
push
cmpb
stc
addr16
ret
lock
in
sub
cmp
imull
push
lea
jno
mov
push
push
out
mov
shlb
shrb
out
cmp
pushf
mov
add
imul
sti
push
or
stc
sub
fidivl
je
sub
in
push
movsb
in
jae
mov
mov
lahf
adc
loope
mov
sahf
lods
mov
lock
or
test
scas
pusha
scas
xchg
out
sub
push
and
inc
aad
xchg
movsb
push
push
inc
mov
leave
mov
dec
push
xor
outsl
repnz
das
cli
popa
or
pushf
lahf
ss
std
push
jno
xor
inc
dec
adc
push
jge
fimuls
pop
test
add
xor
ret
push
inc
xchg
es
cmp
cmp
and
or
repz
jmp
getsec
sbb
pop
mov
jp
loop
pushf
enter
flds
ss
lds
movsl
nop
icebp
push
inc
jge
mov
cmc
iret
pop
loope
sub
dec
xchg
mov
aaa
fistpl
fs
add
dec
fsubs
lret
lods
insl
into
lds
push
imul
lods
shr
clc
ret
loopne
inc
cld
mov
dec
aas
cmc
gs
mov
out
cmpb
xchg
or
pop
popa
push
mov
sarl
mov
adc
cmpsb
sti
mov
xchg
adc
mov
dec
test
or
clc
loop
icebp
outsb
imul
sbb
das
int
sbb
pop
int
xor
pop
frstor
mov
ss
jo
in
imul
jmp
popa
nop
jge
pop
out
shrl
fwait
das
or
fidivrl
or
adc
pop
loop
divb
outsl
adc
adc
inc
dec
jae
xor
push
add
movsb
fimuls
xchg
lods
andl
sub
inc
aad
ljmp
ss
adc
add
icebp
outsb
add
movsl
jnp
adc
out
pushf
inc
mov
sub
xor
cld
pop
test
jo
xor
mov
les
and
jmp
and
adc
into
add
mov
xchg
aaa
fwait
loope
pop
and
cltd
out
dec
aad
outsl
int3
fwait
shl
dec
lcall
dec
mov
jmp
xchg
mov
push
mov
add
push
mov
cmp
movsl
inc
loope
xor
in
mov
rcl
push
mov
push
and
fcmovnu
xor
imul
in
pop
adc
in
addr16
cwtl
repz
mov
fnstenv
mov
jns
lods
or
push
adc
xchg
mov
subl
test
mov
cmpsb
mov
insl
stos
icebp
push
cmp
lcall
inc
mov
addr16
cli
iret
lea
mov
cmp
pop
and
in
js
push
cltd
aas
mov
out
jle
stos
lcall
nop
fs
lret
push
int3
in
cmp
pop
pop
cmpsb
inc
push
jnp
mov
mov
sub
mov
outsl
push
push
imul
pop
jmp
inc
xchg
aas
dec
int3
loope
inc
outsl
mov
mov
push
inc
ret
hlt
add
mov
ljmp
cmp
leave
lcall
push
outsl
push
mov
xchg
mov
xchg
into
leave
add
frstor
inc
push
fnsave
or
lea
movsb
mov
stos
xchg
pop
or
repnz
out
mov
lods
xchg
mov
cmp
test
add
outsl
inc
mov
or
decb
sahf
test
cmp
mov
xchg
aaa
adc
aaa
jo
shlb
adc
fs
or
mov
dec
pusha
lock
mov
imul
test
dec
adc
and
imul
popf
pop
dec
and
push
mov
out
xchg
dec
xchg
addr16
pop
int3
frstor
sub
sub
mov
mov
ret
xor
jo
inc
push
aas
aas
arpl
aaa
xor
sti
xor
adc
dec
pop
mov
insb
shll
cld
out
mov
or
faddl
push
aad
xchg
adc
test
xchg
sub
or
loopne
fsubrs
xchg
sahf
lds
das
sub
push
rcl
enter
iret
test
mov
mov
add
lods
pop
pop
jns
mov
out
adc
jl
or
bound
ljmp
pop
xchg
inc
insb
outsl
adc
push
in
iret
movsb
push
movsb
jp
jno
out
jge
push
add
jmp
cmc
je
cmp
sti
daa
xor
sub
pop
ret
pop
mov
xchg
push
mov
das
shll
int
mov
ljmp
inc
dec
shll
jle
outsl
xor
pop
add
xrelease
outsb
shlb
call
adc
out
jecxz
imul
out
lods
pop
pusha
cmp
dec
fldl
add
adc
mov
lods
fmuls
out
cmp
imul
pop
add
push
mov
popa
incl
or
sub
sub
inc
cmpsl
xlat
pop
pop
pop
push
and
mov
inc
fisubs
xor
adc
call
lods
sbb
cmpsb
jae
xor
add
jle
add
rcrb
hlt
mov
rclb
shll
and
aad
mov
pop
insb
push
cwtl
jbe
sbb
in
xor
stos
jnp
pop
xchg
insl
push
mov
or
fbld
cwtl
xor
push
push
inc
flds
and
inc
aad
dec
add
adc
in
mov
jl
fs
int
cli
inc
sbb
scas
in
and
bound
imul
arpl
je
jnp
jb
addl
xor
xchg
add
jl
mov
push
and
xchg
testl
stc
pop
and
pop
adcb
shrl
pop
lcall
scas
add
or
mov
lret
dec
cli
into
pusha
insb
dec
inc
sub
imul
and
mov
fs
mov
xlat
scas
mov
lods
adc
add
pop
je
mov
lods
xor
and
mov
cmpsb
fbld
xchg
pop
insb
popf
or
mov
lods
and
nop
out
push
cmp
xchg
adc
es
dec
mov
cwtl
insl
or
xchg
ja
clc
lods
movsb
push
mov
push
inc
and
jmp
or
lods
cwtl
inc
gs
pop
jne
shrl
cmc
out
stos
add
insb
rcll
aam
stos
sahf
or
cmpsb
inc
es
js
xchg
xchg
lea
out
lret
fistpll
das
jo
mov
mov
fnsave
xchg
cmp
mov
lcall
adc
jmp
cmp
popf
js
aas
ficomps
cwtl
clc
stc
mov
cmpsb
push
sbb
cs
fisttpl
test
shl
add
cli
outsl
mul
mov
push
scas
jo
data16
lds
jl
jmp
imul
xchg
dec
dec
xor
xchg
sbb
andb
sahf
enter
xchg
jge
out
jns
push
fwait
repnz
inc
mov
or
pushf
push
mov
inc
xchg
add
sahf
adc
push
jne
push
dec
mov
cmp
adc
mov
push
mov
icebp
repz
or
mov
xchg
mov
hlt
int3
xchg
cs
bound
test
cmpsb
mov
loope
aam
imul
inc
mov
and
xchg
mov
dec
cmpsl
and
add
or
jb
mov
jmp
aad
lea
mov
ss
insb
lods
fnstcw
mov
jns
or
pop
mov
popf
loope
fiaddl
stc
pop
xchg
out
jmp
sti
and
jg
sbb
addr16
mov
pop
mov
cwtl
inc
popa
fisubl
testl
add
push
jecxz
or
push
sub
dec
ficomps
pop
shlb
in
imul
pop
aas
ret
out
pop
loopne
jmp
movb
lods
mov
popa
pusha
lcall
data16
dec
std
push
movsb
inc
ss
cmp
mov
out
push
xchg
jl
push
loop
mov
mov
or
jecxz
pop
rorl
fists
sbb
mov
pop
orl
daa
sub
jecxz
in
pop
sti
dec
jp
out
mov
sbbb
push
bndldx
push
lods
stc
popf
mov
adc
stos
inc
enter
xor
cmpsb
aam
filds
icebp
push
adc
add
icebp
pushf
pusha
adc
and
adc
stos
cld
inc
jbe
fwait
pop
fiaddl
loop
mov
fs
rolb
enter
enter
cmc
ja
push
adc
add
mov
push
insb
or
fs
loop
int3
jmp
mov
xlat
jmp
inc
nop
mov
outsl
sub
xor
notb
lds
sbb
inc
cli
sbb
sbb
xchg
cmc
xchg
mov
cmc
dec
push
and
dec
pop
mov
mov
jns
fcom
out
or
js
push
int3
andl
jmp
dec
inc
arpl
adc
mov
sbb
adc
and
adc
add
dec
xor
std
rorb
mov
pop
mov
arpl
xchg
jp
add
sub
cld
pop
mov
push
int3
cmp
sbb
cs
mov
movsl
or
loopne
adc
sub
inc
outsb
fwait
out
jecxz
mov
or
ljmp
insl
adcl
js
cmpsl
insb
iret
sbb
xor
lods
sub
out
dec
add
pushf
icebp
add
mov
stos
sahf
iret
mov
mov
data16
repz
lds
xchg
repnz
dec
push
add
ss
inc
add
imul
mov
int
das
ja
cs
icebp
xor
sarb
fbstp
xchg
add
out
andb
dec
cmp
jle
and
cltd
cmp
mov
or
inc
inc
lock
jl
inc
dec
sub
out
mov
push
jno
jle
push
sub
js
add
mov
cmp
push
cmp
jne
pop
pop
jae
and
sbb
push
lret
inc
xor
add
out
adc
pop
mov
sub
cmp
cmp
cmp
mov
pop
sub
es
mov
or
rcrb
mov
aas
call
lcall
iret
mov
sub
and
mov
mov
lahf
cmc
lret
mov
adc
inc
adc
jo
mov
gs
mov
lods
cmc
or
ret
pop
lret
mov
or
loop
jge
cmp
pop
outsb
xor
push
ret
cmp
add
sti
fmull
push
scas
in
pop
sbb
mov
mov
sbb
outsl
push
mov
push
push
std
pop
and
into
inc
mov
repz
ss
xchg
data16
cwtl
sbb
fwait
xchg
pop
lock
push
cmpb
mov
shrb
sub
cs
rcrb
vpmuludq
jne
sahf
xlat
ret
fst
imul
and
jmp
sub
clc
loopne
jl
pop
pop
andl
inc
xchg
xchg
lock
sub
xchg
adc
es
shlb
xchg
inc
adc
stc
andb
inc
mov
setae
push
and
or
mov
jmp
dec
fldl
imul
sti
loope
xchg
mov
jnp
iret
push
xchg
scas
pop
or
mov
ffree
loop
sbb
xchg
repnz
add
aam
xchg
loope
sahf
mov
sub
in
fcom
je
flds
pop
or
into
shl
lock
pop
call
arpl
stos
mov
mov
lock
lea
dec
out
iret
stc
fsubrs
push
scas
cmpl
push
inc
add
pop
sbb
sbb
jp
cli
inc
icebp
bswap
lds
insl
les
cmpsl
mov
fstpl
test
mov
mov
xor
mov
cmpsl
jne
sar
pushf
ljmp
popf
mov
lret
cmp
fimull
mov
jge
nop
jno
insb
gs
adc
xchg
imul
sub
xor
shrl
mov
out
lods
jnp
xchg
int
rcrl
inc
lea
arpl
out
cltd
xchg
pop
daa
hlt
inc
jbe
xchg
jge
repz
popf
inc
sahf
cli
rorb
lcall
jno
push
outsb
adc
rep
or
das
mov
push
xchg
clc
arpl
in
adc
jmp
fwait
mov
mov
mov
inc
in
pusha
js
mov
jno
shr
fidivrs
add
in
xchg
xor
push
push
xchg
pop
lds
cli
loope
sbb
cltd
test
addl
inc
ja
scas
stos
filds
popf
jecxz
inc
dec
lret
jmp
xor
sarl
mov
add
mov
movsb
sub
ljmp
fisubs
ret
pop
stos
pop
xor
sub
or
sbb
arpl
lahf
mov
les
jb
or
aaa
ss
xor
jne
inc
and
int3
xchg
sete
xchg
xlat
add
mov
adc
mov
push
cmc
js
xchg
sahf
push
jmp
mov
xchg
sbb
pop
out
sub
fs
popa
insl
les
xor
in
push
adc
mov
xchg
outsb
cmp
or
sarb
sub
lcall
inc
out
pusha
outsb
popf
sti
punpckhbw
add
fsubs
in
gs
call
div
xchg
cld
or
mov
loope
pop
out
loopne
dec
or
sub
into
scas
pop
push
stc
rorb
pop
sbb
pop
lcallw
xchg
lret
aad
cmp
int3
add
dec
adc
enter
pmullw
mov
ds
icebp
lret
faddl
xchg
pop
push
and
arpl
xlat
outsl
fnsave
leave
daa
xor
loop
je
shl
insb
fnstcw
mov
push
add
movsb
inc
lea
mov
daa
popf
das
test
adcb
jge
xchg
es
mov
enter
pusha
or
dec
xor
sub
arpl
movsb
push
repz
mov
push
call
push
loopne
adc
mov
adc
fildl
add
sub
es
mov
sub
and
in
or
xlat
xchg
mov
faddl
cmp
adc
pop
lds
ds
inc
arpl
mov
xchg
lcall
je
int3
scas
push
adc
inc
pushf
sbb
fisubrs
ja
icebp
sub
jmp
adc
xchg
out
add
in
fldl
out
jl
call
lahf
aaa
mov
cli
fsub
daa
adc
xchg
daa
sbb
lcall
cmp
popf
sbbl
jnp
add
sbb
sub
addl
push
pop
cmp
inc
xchg
push
and
fiadds
jge
mov
testb
loopne
clc
sahf
loop
lret
add
lcall
adc
push
dec
test
adc
jns
lock
stc
jge
repz
or
shlb
pop
fs
add
out
popa
mov
mov
ljmp
popf
fstpt
clc
xchg
sub
daa
orb
test
cltd
push
dec
in
mov
shll
xchg
sbb
xlat
fadd
push
jge
cmp
loopne
sub
cli
push
pop
add
repnz
dec
data16
jge
stc
es
add
imul
movsb
sbb
mov
jecxz
inc
lods
cmc
mov
and
inc
and
sub
loope
jecxz
pop
inc
pinsrw
push
and
mov
loop
sbb
jmp
lcall
scas
sti
push
test
cltd
fwait
xchg
cmp
hlt
addr16
fisttpl
mov
pop
mov
dec
xchg
mov
dec
or
jb
mov
popf
aad
mov
inc
das
arpl
insl
inc
add
sbb
jo
rol
lret
push
inc
xchg
popf
fs
add
int3
lock
fldcw
outsb
xor
cmp
jmp
call
aaa
cli
push
dec
roll
sub
mov
or
xlat
sti
mov
cmpsl
push
xchg
xchg
test
mov
jge
sub
and
icebp
cmpsb
jmp
rorb
pop
add
fcos
pop
jns
xchg
add
push
fdivp
es
xor
mov
imul
arpl
or
rcl
out
xor
mov
call
or
lea
in
jns
sbb
dec
ficoms
mov
imul
mov
sub
push
xchg
shlb
adc
repnz
jge
push
lock
incl
addr16
or
cmp
test
add
je
push
sub
or
sbb
mov
gs
xor
xchg
lahf
aas
pop
xchg
aas
cmpl
pop
mov
mov
pop
test
nop
push
inc
clc
adc
mull
ja
fldl
fdivrp
adc
sub
mov
mov
test
push
outsl
jb
cmp
jecxz
cmp
in
pop
lods
sbb
in
fadds
gs
pop
imul
jg
mov
mull
das
fwait
les
push
xchg
pushf
inc
sbb
pop
or
test
push
scas
xlat
lahf
das
cmp
sub
iret
add
mov
cmp
scas
mov
iret
fcoms
test
sbb
test
out
mov
jo
xchg
test
in
pop
pop
sti
pop
xchg
stos
pop
enter
cmpsl
inc
mov
adc
flds
aas
mov
sub
xchg
lahf
mov
sub
arpl
cmpsb
mov
mov
push
jl
mov
ja
push
outsb
fbstp
fcomps
aas
movsb
fisttpl
ficomps
jecxz
inc
jge
imulb
das
xchg
pop
aam
rol
sub
fldl
sti
cmp
cmp
dec
aas
or
testb
out
nop
inc
inc
test
mov
mov
adc
adc
mov
fimull
inc
adc
sub
aam
js
rclb
adcb
cmp
xorl
sti
cmpsb
mov
dec
mov
mov
outsb
insl
sub
dec
lea
inc
xor
mov
into
cmpsl
and
movsl
pop
pop
mov
adc
jbe
pop
iret
xor
push
sarl
cli
xor
popf
ret
or
pusha
in
xchg
jge
rolb
leave
pushl
add
mov
push
sbb
push
fwait
dec
sbb
jl
add
pop
call
cli
jle
test
mov
adc
add
rcr
pushf
lcall
add
pop
add
push
in
addr16
fmul
jae
xchg
enter
popa
iret
stc
dec
xlat
int
lea
xor
das
mov
jns
sub
orl
xchg
es
ja
xchg
shrl
mov
test
jo
xchg
mov
cwtl
sbb
out
cltd
cld
aad
sar
add
push
cmp
mov
push
jnp
fisttps
adc
adc
sahf
loopne
addr16
stc
mov
mov
mov
add
add
mov
and
mov
ljmp
dec
jns
test
cld
ret
call
dec
add
mov
fldcw
or
ror
pop
daa
shr
leave
fnstsw
mov
add
iret
mov
add
add
inc
and
ds
jecxz
fiaddl
lret
iret
xchg
mov
call
or
jle
in
out
xlat
and
mov
out
call
iret
jg
mov
int
inc
addr16
enter
hlt
or
fdivrs
xchg
jne
push
int
jecxz
adc
mov
leave
addr16
in
testb
aaa
add
pop
mov
mov
icebp
loope
pop
and
xchg
aaa
lods
cmp
dec
jno
push
pop
out
in
jmp
mov
mov
cs
das
psllq
jbe
jb
mov
and
in
in
xchg
push
sub
push
enter
mov
sbb
adc
fadds
nop
lock
xor
dec
cmp
add
pop
dec
rcl
push
sub
repz
cs
ljmp
cmp
sbb
repnz
push
lds
in
js
inc
adc
xor
imul
aaa
push
push
mov
pop
enter
sbb
aad
cld
enter
jmp
popf
scas
mulb
jl
or
mov
adc
jmp
mov
xchg
test
sbb
clc
or
inc
inc
scas
jnp
jl
pop
addr16
and
xchg
loopne
sbb
add
xchg
clc
std
jp
or
mov
sbb
push
dec
and
mov
popf
mov
ljmp
cwtl
adc
mov
xor
mov
inc
cmc
xchg
mov
push
xchg
adc
pop
and
imulb
ret
fcomp
shll
add
rcll
mov
mov
or
cmp
out
call
shll
mov
addb
adc
inc
andl
pop
jg
test
fisttps
scas
mov
push
mov
test
enter
add
test
into
stos
cld
fcompl
add
cli
cltd
mov
popf
push
xchg
push
or
mov
mov
add
inc
fs
jne
adc
mov
sbb
aaa
jne
cltd
out
in
jo
pop
xor
rsqrtps
rorb
mov
out
xchg
pop
pop
js
sub
jno
nop
rcr
into
adc
lret
popa
jne
inc
enter
jecxz
in
rcrl
dec
sub
arpl
das
xlat
push
fidivrs
sarb
shl
inc
cmc
std
dec
jne
fidivrs
mov
int3
into
cwtl
push
mov
je
ss
mov
add
lods
pop
popf
ret
mov
sbb
mov
in
sbb
nop
cld
mov
adcl
mov
pushf
jmp
ss
jae
mov
push
dec
add
adc
mov
scas
push
push
push
or
jne
lods
sub
cld
adcl
lods
add
sub
ljmp
push
lahf
mov
mov
insb
pop
inc
push
shlb
inc
imul
pop
rorl
test
push
jle
scas
rclb
clc
cmp
aas
pop
jb
and
xor
pop
or
jle
or
hlt
push
test
insb
or
pop
out
f2xm1
lods
cmp
and
mov
cltd
int
pop
iret
dec
lods
cmc
aam
pushf
lret
xchg
out
jb
pop
cmc
pop
fisttpll
mov
idivl
pusha
or
lret
mov
cmp
and
fsubl
add
or
jl
lret
fcmovne
sahf
sub
enter
add
fnstcw
jno
xchg
push
outsl
shll
sbb
dec
es
ljmp
in
arpl
out
dec
gs
outsl
ss
adc
sub
lea
aaa
inc
sub
sub
fstps
or
std
mov
adc
and
aas
mov
loopne
leave
dec
lcall
out
mov
cmp
fs
fsub
cwtd
jp
mov
ja
enter
jb
ret
jg
push
adc
dec
sbb
push
sbb
pop
add
pop
push
fimull
fadds
movsl
sbb
xchg
std
mov
je
shrl
gs
pushf
inc
xlat
jns
cmp
mov
es
xchg
push
inc
adc
push
push
cmp
roll
cmpsb
movsl
mov
neg
jg
outsl
xchg
fdivrs
mov
enter
in
shll
add
mov
mov
out
pop
fstpt
add
mov
aad
outsb
cmp
jl
ret
lock
daa
lods
gs
pop
bt
jmp
dec
mov
adc
in
push
pusha
cmpsl
sti
cltd
loop
sub
aam
pushf
ret
xchg
test
out
add
cmc
cmp
inc
insl
imulb
ds
movsl
mov
outsl
std
mov
pop
repz
push
adc
sbb
loop
loope
in
xchg
lds
stos
mov
xchg
pop
bound
xchg
push
mov
ds
push
loope
sub
pop
inc
test
cmp
dec
dec
cltd
mov
cwtl
cmp
push
and
push
in
pop
inc
clc
stc
adc
pop
push
mov
cli
repnz
mov
xchg
int
jecxz
xor
rcrl
imul
xchg
imul
fisttps
popa
dec
pop
fadds
adcl
and
ja
cmp
les
mov
xchg
into
or
stos
push
jnp
mov
ljmp
lods
xor
and
jmp
fistpll
push
jmp
push
dec
push
mov
out
in
notb
jge
dec
pop
pop
sbb
std
jae
leave
loop
jecxz
or
cltd
std
dec
lret
pop
xlat
movsb
fsubs
test
idiv
ljmp
pushf
xchg
ja
cmp
mov
cmpsl
fidivrl
ficoms
pop
ret
ficoms
aaa
push
lock
xor
mov
jl
dec
sub
dec
aas
pop
adc
jge
imul
daa
jbe
ficompl
mov
aam
pop
repnz
sarb
adc
lods
xor
aam
xor
nop
push
xor
xchg
push
cmp
decb
in
stc
add
and
cmp
fwait
pop
int
sbb
inc
adc
pop
push
std
out
add
add
push
adc
add
xor
outsl
rcl
adc
push
jo
nop
cmp
sub
rcl
add
ja,pt
pop
sbb
lcall
push
int3
cmp
insl
sub
sti
mov
mov
lds
pushf
insl
jne
test
adc
rcr
pusha
int
test
xchg
shll
pop
in
das
xchg
es
push
mov
loop
ja
add
add
cmp
inc
sbb
inc
ret
scas
sub
mov
add
xchg
xchg
rcrb
mov
push
pushf
cld
fcomi
outsb
jns
jg
pop
cmp
jp
out
mov
dec
bound
movsl
pushf
clc
js
sub
inc
cmovne
add
cmp
fs
popf
test
cmp
hlt
into
addr16
add
mov
mov
std
lock
loope
add
das
inc
dec
dec
aam
mov
xchg
pop
scas
push
rcll
sub
repz
clc
out
mov
data16
ret
mov
ds
out
xorb
jmp
aaa
push
xlat
lods
outsl
mov
and
dec
fldt
xor
je
stos
fcompl
rol
adc
add
and
cld
or
xchg
fdivs
pop
call
adc
aas
notl
insb
jnp
outsl
adc
adc
or
cmp
xchg
jl
fs
sarb
xchg
nop
and
mov
xor
jno
sub
pop
pop
lock
fcoml
popf
jns
fnstcw
popa
mov
add
dec
dec
adc
in
mov
fxch
in
cwtl
sub
mov
push
pop
push
jg
cmp
ficomps
sbb
jnp
push
int
out
imul
adc
ss
dec
hlt
ljmp
imul
out
mov
mov
pusha
test
and
lods
std
adc
loope
das
pop
fsubl
adc
xchg
orl
out
sbb
jg
lds
or
mov
lods
sahf
pusha
ret
pusha
lds
dec
and
stos
sub
mov
shll
rorb
and
arpl
mov
sub
loope
mov
jne
jno
xchg
mov
inc
jb
mov
push
lea
test
loop
sub
sti
ja
ds
add
aad
xor
data16
lahf
xor
lock
xchg
pop
push
mov
sub
into
sarl
roll
adc
or
sahf
orl
xor
aaa
mov
loopne
int3
inc
iret
inc
cli
adc
push
iret
pop
mov
insl
shlb
adc
fucom
in
or
into
pop
push
mov
add
stos
mov
shrl
subl
ret
sbb
pop
adc
into
xchg
test
push
stc
jb
mov
jnp
cmp
pop
xchg
cwtl
inc
mov
imul
sti
ds
shufps
decl
or
cltd
mov
add
mov
or
xor
or
fimuls
orl
int3
mov
stc
and
push
lods
imul
add
ljmp
mov
jbe
imul
cmp
lret
aam
xlat
jbe
outsb
dec
lcall
jnp
xchg
mov
add
xchg
icebp
or
cmp
xchg
pop
xchg
out
and
cltd
mov
stos
shll
push
popf
lds
or
xor
adc
xor
nop
pop
orl
cmp
jecxz
xchg
dec
into
aam
outsl
sahf
stc
mov
push
adc
sbb
popf
hlt
loop
xor
jmp
mov
adc
add
sbb
mov
scas
movsb
pop
cmp
inc
out
stc
push
pop
enter
mov
mov
dec
pop
push
scas
popa
lret
mov
jnp
data16
push
imul
mov
movsl
cmp
cmc
push
jae
mov
or
movsb
push
repnz
push
scas
cmp
scas
cmpl
xor
xchg
rcrl
pop
aad
je
enter
add
testb
gs
jae
mov
sub
mov
mov
addr16
mov
mov
xor
iret
mov
push
or
adc
mov
ret
imul
int3
arpl
add
push
sbb
add
dec
inc
push
jl
pop
cmpsl
pusha
pusha
jmp
into
mov
clc
xchg
repnz
leave
orl
sbb
jle
cmp
int3
rep
jbe
fs
enter
mov
dec
out
pop
xor
xor
gs
mov
in
mov
pop
test
test
push
fsts
icebp
mov
inc
iret
inc
xchg
ljmp
ds
jl
xor
mov
pop
pusha
and
adc
inc
sub
jge
fdivrl
xchg
mov
xchg
mov
mov
inc
scas
mov
call
insl
iret
leave
add
popa
enter
dec
dec
jp
jb
xchg
add
and
mov
addr16
xchg
aaa
in
fwait
test
es
xor
and
xchg
divl
in
mov
lret
fstps
adcl
sub
repnz
ja
shll
and
and
btc
stc
leave
jns
in
mov
mov
bound
sub
movsl
sub
pop
out
js
jo
loope
cmpsl
dec
xchg
cmp
sub
popf
outsl
scas
mov
scas
or
sub
test
test
push
lea
lcall
pushf
mov
jle
hlt
cmp
mov
scas
inc
leave
les
xchg
inc
daa
adc
mov
ss
outsl
in
push
sub
repz
addr16
in
cmp
mov
mov
and
jae
int
add
dec
mov
aaa
shl
pop
ret
rclb
mov
mov
adc
cmp
mov
jmp
push
movsb
xor
fisttps
xchg
or
stos
dec
cli
test
push
test
ljmp
pop
push
cld
fneni(8087
test
jge
repz
fcompl
push
fmuls
jbe
out
xchg
in
xchg
pop
mov
int
mov
cwtl
stos
push
add
ret
ljmp
fwait
stc
push
jecxz
inc
iret
sub
cmp
je
xchg
mov
mov
faddl
mov
cmpsl
pop
repz
xor
in
mov
inc
mov
mov
or
and
aaa
xchg
mov
into
aas
pop
xor
int
cmc
in
adc
sbb
jmp
sub
xor
push
mov
inc
xor
insb
je
or
push
mov
bound
jp
mov
adc
cld
add
jmp
outsb
mov
pusha
rep
jle
and
add
adc
fldt
jnp
push
in
into
push
xchg
or
add
push
pop
hlt
in
pusha
xchg
inc
mov
bound
xor
outsl
stc
std
xor
or
xor
sub
add
imul
and
aam
clc
sti
or
lock
lcall
jl
lzcnt
jne
xor
test
cld
xor
mov
arpl
push
repnz
sub
or
mov
sbb
cmp
adc
mov
mov
andb
sbbb
add
pop
pusha
add
adc
push
stos
adcb
fdivrl
pop
xchg
xor
imul
mov
and
fs
fisubl
xor
ja
cmp
int
notl
jle
mov
test
fisttps
jbe
shl
lahf
jns
test
rcll
mov
movb
cmp
ret
and
cmp
dec
cli
sahf
es
mov
hlt
clc
jno
gs
loop
xchg
fptan
outsl
inc
out
or
hlt
xor
ss
leave
pop
pusha
mov
dec
les
sub
inc
in
inc
aad
or
cmp
lahf
aas
rcr
mov
call
mov
push
push
mov
push
in
dec
cmp
in
jo
pop
fbld
sbb
xchg
data16
jne
and
inc
cmpsl
xchg
ret
dec
imul
dec
outsb
add
push
jecxz
push
adc
adc
cli
cmpsb
and
stos
sbb
mov
jmp
sub
bound
xor
mov
lahf
sbb
iret
scas
call
jno
pop
mov
cmp
fcoms
cld
mov
pop
ljmp
sub
sub
test
jnp
lods
push
fimuls
adc
lea
std
int3
leave
icebp
inc
add
cmc
cmp
add
xor
or
adc
imul
sbb
loop
push
aas
aam
out
push
test
fsubs
loopne
mulb
cld
hlt
pop
pop
inc
das
testb
mov
mov
pop
sbb
or
loopne
adc
mov
push
adcb
mov
xchg
inc
test
xor
xor
mov
notl
inc
inc
sbb
cltd
pop
addr16
and
mov
adc
shlb
sahf
mov
test
insl
mov
repz
jp
mov
mov
jl
mov
outsl
fwait
dec
add
mov
push
inc
xor
add
push
mov
enter
addl
adc
dec
clc
sbb
sub
xchg
mov
xor
push
jns
inc
push
loop
je
lods
pop
scas
push
enter
pop
xchg
mov
pop
add
out
inc
push
cmp
sbb
cld
sbb
xor
push
in
sbb
add
mov
mov
and
add
out
mov
sbb
add
or
popf
fidivrl
inc
test
pop
scas
in
mov
inc
sub
or
repz
pop
aad
sahf
pop
movl
dec
or
cmp
icebp
cmp
or
cmpsl
in
enter
lcall
push
outsb
imul
xchg
inc
xchg
mov
adc
icebp
fwait
call
jbe
mov
sub
rcll
pop
arpl
addb
mov
push
das
lcall
xor
cmp
inc
and
int3
jmp
cs
push
xor
icebp
arpl
jp
lds
xchg
add
jns
dec
mov
sub
add
dec
add
aam
dec
mov
xchg
bound
test
mov
ficomps
mov
push
xorb
or
int3
sbb
fcomip
push
adc
dec
add
stos
cld
bound
sub
mov
cs
fdivl
add
fnsave
inc
sub
xchg
cs
call
scas
pop
push
dec
stos
adc
rol
dec
xor
test
shlb
sub
jg
add
sbb
mov
pop
adc
adc
dec
cmc
and
jg
popf
test
or
stos
test
outsl
adc
xchg
and
subl
fs
dec
popf
dec
bnd
xchg
insb
dec
nop
sub
lcall
dec
inc
lock
add
lret
xchg
test
push
daa
cmp
mov
mov
pusha
ficomps
pop
jl
cmp
fdivl
je
addr16
mov
outsb
mov
in
shr
ret
ret
stos
hlt
dec
pop
int
inc
push
inc
jo
stos
inc
push
dec
adc
gs
loope
in
dec
call
sbb
jle
cmp
mov
push
cld
cltd
or
mov
xchg
push
or
push
mov
cld
mov
cmp
ds
mov
int3
fnsave
pop
aad
cmp
pusha
pop
pop
cli
sar
stc
cmp
xor
lret
in
jne
push
int
pushl
push
push
jae
shl
xchg
ljmp
int3
arpl
rcrl
jmp
pop
jle
dec
sbbl
xor
and
sub
mov
dec
push
pop
cmc
fs
push
bound
cmpsb
or
mov
cmp
push
mov
or
in
stc
gs
jecxz
loope
outsb
sbb
xor
scas
aaa
popa
cmc
or
mov
or
in
sub
or
jne
or
push
mov
test
bound
inc
mov
adcl
xchg
adc
js
xorb
ret
enter
lock
outsb
ja
push
or
xor
adc
stc
je
cmp
cmp
rolb
and
pusha
mov
repz
push
icebp
inc
pop
lahf
jmp
xchg
test
lret
fwait
icebp
inc
les
adc
rorb
data16
jp
adc
inc
add
mov
sbb
mov
test
ja
xchg
xchg
mov
imul
xchg
in
inc
out
xchg
add
gs
ss
sbb
js
xlat
loopne
orb
outsl
or
mov
cmp
nop
jecxz
inc
cmpsb
lock
jle
cmp
std
xor
pop
or
mov
and
cmp
xchg
pop
xchg
sub
ds
dec
pop
push
or
enter
icebp
jmp
fcmove
bound
cmp
rcrb
xchg
adc
mov
pop
lods
push
call
mov
mov
loop
push
mov
or
pop
fs
and
fnstcw
mov
xor
adc
jmp
outsb
sbb
div
or
inc
sub
ja
test
mov
rol
in
mov
pop
mov
cwtl
insl
jg
cmc
pop
bound
add
pop
push
inc
or
pop
mov
add
cmpsl
movsl
stc
adc
xchg
notl
outsb
dec
iret
leave
cmp
movsb
ret
pushl
jbe
push
dec
clc
rclb
shlb
imul
jns
test
mov
ljmp
popf
insl
pop
test
dec
call
xchg
add
pushf
add
shll
sbb
rorb
or
in
jmp
je
rol
sbb
movsl
in
das
ja
mov
test
into
pop
pop
mov
popa
inc
sbb
fwait
nop
fcoml
jecxz
sbb
cmc
dec
call
mov
inc
cmp
sub
ret
sbb
cwtl
xorl
cmpsl
imul
pop
movsb
jmp
xor
lds
xchg
dec
add
sub
mov
jle
dec
mov
cmpl
cmp
icebp
scas
data16
fcoms
xor
addr16
xor
leave
hlt
jno
mov
adc
fcmovnbe
std
mov
movl
int
pusha
lcall
dec
popa
popa
aad
cmp
mov
xchg
mov
sub
icebp
jnp
test
lcall
out
lock
mov
shr
mov
sti
jmp
xchg
lret
mov
sbb
inc
mov
mov
fsts
mov
xchg
mov
and
inc
sbb
dec
inc
lock
and
stos
pop
jg
inc
lea
outsb
push
ja
mov
int
mov
dec
outsb
fnstcw
icebp
dec
cmpb
push
into
cli
mov
test
es
arpl
xor
jnp
xchg
loop
xor
dec
and
inc
sbb
mov
xchg
lcall
and
pop
inc
jg
jle
and
addl
jp
cmovp
ror
dec
adc
cmp
dec
inc
mov
popf
xchg
mov
call
neg
inc
addr16
xorl
fdivr
popl
inc
xchg
jge
xchg
lahf
cmp
push
gs
cmc
dec
cmp
sbb
mov
aas
inc
and
mov
push
add
sarb
mov
sarl
jp
rorl
mov
fwait
clc
sbb
xchg
inc
push
sub
inc
or
xchg
add
cltd
pop
push
or
or
movsl
cmc
sub
mov
cmp
adc
rclb
xor
lock
insb
add
sub
in
lds
test
adc
es
dec
in
lea
scas
das
test
jp
mov
sub
adc
ja
and
sbb
or
push
lods
sti
push
aad
adc
sub
loopne
jl
jp
xchg
mov
mov
pop
in
pop
xchg
xor
jl
clc
ja
and
push
cmp
ret
dec
rorl
lcall
in
and
rolb
or
jae
mov
mov
dec
lods
pop
jnp
mov
mov
arpl
push
pop
rcl
popf
and
sahf
inc
push
jp
push
or
pop
frstor
xchg
xchg
fwait
and
aad
mov
leave
push
pop
inc
sbb
es
ja
or
shl
imul
hlt
test
js
jecxz
test
rol
adc
add
repz
pop
push
test
stc
lods
repnz
mov
mov
dec
aas
mov
pop
push
das
mov
pop
stos
loop
or
pop
outsl
stos
mov
dec
push
test
jb
push
push
and
dec
xchg
cld
popa
dec
popf
movsl
xlat
jno
sti
out
mov
cmp
sti
jno
jae
aas
and
int3
dec
cmp
pop
les
sbb
repz
xchg
add
cmp
fstl
inc
xchg
inc
popf
mov
pop
gs
xor
jle
add
test
pop
xor
rcrl
fwait
test
dec
movsb
mov
dec
mov
fxtract
notl
xor
jge
test
mov
mov
jb
jns
dec
hlt
xor
test
push
sbb
sub
jno
sti
sbb
cmp
inc
cmp
dec
scas
sub
cmc
fs
inc
mov
movsl
sbb
add
pusha
xchg
nop
mov
pop
mov
fcoms
je
hlt
cltd
pop
inc
xchg
scas
aas
rcl
test
adc
ret
add
addr16
jg
arpl
scas
dec
idivb
inc
xor
fstp
add
imul
push
sub
push
dec
mov
popf
int
adc
xor
mov
sub
push
inc
xchg
fmuls
sbb
jge
scas
sbb
outsb
sti
fsub
jg
in
lock
loop
xor
xor
addl
mov
mov
ret
cwtl
sub
das
add
ja
jb
dec
add
jbe
xorb
leave
aam
push
stc
addl
inc
push
inc
fisttps
mov
and
dec
mov
sti
gs
test
in
dec
cmp
popf
jbe
dec
mov
xchg
imul
pop
and
push
cld
lods
cmp
push
or
inc
push
jmp
mov
push
cmp
insb
mov
testl
cltd
pop
dec
hlt
nop
pushf
xchg
mov
adc
mov
pop
cltd
mov
xchg
jmp
cmp
inc
or
inc
fisttps
jb
call
into
jbe
jle
shlb
repz
mov
cmp
lret
imul
jb
das
mov
xchg
lret
mov
aas
ret
arpl
gs
imul
or
push
xor
cmp
sub
add
xlat
mov
mov
loop
sub
and
scas
out
pop
hlt
les
jo
sbb
cmp
fcompl
inc
cmp
jge
xchg
jp
sti
fucompp
jge
or
pop
mov
pop
nop
mov
testb
sbb
ret
in
jp
lea
nop
test
mov
out
or
push
fadds
dec
sbb
dec
call
or
cmpsb
cmp
push
imul
jle
or
mov
in
jne
mov
stos
xchg
repnz
pop
push
outsb
or
xchg
mov
test
test
cmp
jl
addr16
xor
ja
push
xchg
bound
xchg
cmp
rcr
and
xor
es
cmp
int3
mov
nop
lea
push
xchg
cmp
lret
mov
lret
pop
and
repz
cltd
inc
cmp
mov
or
sub
add
es
xchg
iret
sbbb
jbe
cmpsb
outsl
push
shll
clc
mov
mov
lods
sbb
hlt
add
pop
data16
cmp
inc
jl
addr16
cmp
adc
inc
scas
loope
mov
dec
xchg
adcb
xchg
xchg
xchg
ja
cmc
cmp
xor
sti
jg
jl
lahf
popl
lret
fcoml
sbb
dec
loope
dec
cmp
lds
or
movsl
popf
mov
or
imulb
sbb
pop
pop
out
push
nop
js
fisubl
lcall
inc
lret
addr16
inc
in
mov
push
mov
xchg
or
jmp
mov
shll
adc
or
push
mov
divl
push
xchg
xchg
leave
sbb
imul
test
leave
lock
test
xchg
mov
mov
icebp
push
lahf
jae
cli
mov
aad
push
loope
repz
push
in
adc
or
fidivrl
ds
inc
pop
jg
mov
test
gs
fwait
test
jle
std
in
mov
adc
fsub
mov
int3
js
in
mov
adc
aad
insb
cmp
xchg
addr16
jo
cmp
ljmp
cs
jo
stos
adc
cmpsb
iret
test
fiadds
dec
jae
outsb
adcl
jg
push
fildll
mov
xchg
inc
jns
arpl
ljmp
scas
imul
outsb
aas
sbb
test
ja
xchg
push
xchg
iret
dec
mov
ljmp
sub
lds
lods
mov
mov
imul
jmp
inc
dec
fistps
pop
inc
out
pop
jnp
dec
call
xor
push
mov
cmp
scas
je
fs
push
iret
push
jmp
je
mov
insl
aam
pop
fadds
sub
push
rcrl
outsl
add
push
jns
pop
xchg
stos
popl
cmova
xchg
test
jns
jne
adcl
popf
insb
add
dec
lods
or
xchg
ja
les
adc
cmp
xchg
stos
jne
fdivl
sti
sub
sahf
adc
mov
outsb
cmpsl
out
jecxz
xchg
lret
pop
sbbw
mov
xlat
andb
mov
and
jecxz
sub
pusha
add
ffree
test
mov
dec
aam
sub
push
in
xchg
arpl
call
dec
shrl
iret
popf
iret
and
stos
jg
pop
in
dec
xchg
pop
adc
cmpsb
str
lods
inc
add
xchg
movsl
repnz
imul
fmuls
test
mov
in
cli
dec
arpl
pop
adc
and
push
xchg
daa
xor
jbe
sbb
mov
xor
rolb
push
shlb
out
rcr
repnz
push
lea
in
or
sar
inc
insb
out
and
dec
sub
cltd
das
test
push
cld
orb
stos
mov
mov
lret
jb
stos
inc
sbb
leave
mov
lods
mov
imul
ret
fwait
test
movsl
sub
aad
call
mov
cmpsl
pop
in
adc
mov
repz
and
es
add
add
aaa
mov
out
cmp
cmp
and
mov
in
loop
push
mov
mov
cmc
or
jmp
mov
mov
fists
mov
sbb
push
pop
nop
shr
in
sarb
push
adc
xor
mov
push
xor
stos
add
sub
mov
jl
mov
mov
push
mov
inc
jnp
mov
sub
pusha
frstor
shl
pop
mov
imul
jne
test
leave
inc
xchg
mov
xchg
aaa
xorb
sbb
pop
sbb
cmp
xchg
mov
ss
mov
es
inc
cld
je
ficompl
nop
jg
push
pop
jmp
fwait
cmpl
jo
std
jecxz
fwait
adc
in
adc
lret
lcall
test
and
xchg
test
jg
shrd
test
iret
je
rorl
call
inc
mov
shl
sub
pop
dec
sbb
push
or
jno
push
pop
into
aam
les
ss
jbe
pop
leavew
add
and
das
mov
outsl
popa
arpl
adc
icebp
cwtl
je
repnz
cwtl
mov
add
fcmovne
data16
add
loop
add
fsts
lret
cmpsb
inc
scas
mov
ss
rcrb
cmp
repz
jnp
shrb
xor
push
xchg
shlb
fiaddl
pop
imul
out
mov
int3
push
and
sub
fistps
pop
mov
cmpsb
dec
sub
int3
or
push
fwait
rol
add
sbb
cwtl
lods
inc
mov
adc
jae
mov
enter
xchg
movsb
xchg
clc
aad
gs
lock
notl
mov
gs
mulb
repnz
add
bound
xchg
repz
cmp
lods
cmc
lcall
sar
fwait
mov
fdivs
mov
jno
dec
leave
in
mov
inc
cld
mov
cs
int
mov
sbb
dec
cmp
push
pushf
push
rcl
fnstcw
add
data16
leavew
push
orb
in
dec
lock
sahf
shrb
lock
adc
fwait
stos
or
inc
icebp
xchg
hlt
fdivp
loopne
sub
es
add
mov
xchg
jae
dec
inc
jbe
out
daa
sbb
lret
push
adc
inc
sub
idivl
hlt
mov
mov
or
pop
aam
loop
loope
test
or
loopne
mov
xchg
sub
mov
push
test
and
xchg
lahf
roll
clc
stos
fldcw
fstpt
int
scas
shlb
mov
inc
out
push
and
fbstp
add
stc
and
imul
push
inc
jecxz
cmp
push
or
dec
sub
pop
mov
jns
or
xor
push
out
add
mov
rcl
add
or
jg
mov
dec
inc
imul
std
sub
fistpl
divl
loope
imul
jg
sub
scas
call
mov
aad
dec
jns
lock
inc
pop
sbb
cmp
aad
rol
movsb
pop
leave
adc
or
push
inc
sti
cs
push
hlt
and
pushf
and
cwtl
addr16
mov
push
jo
jmp
ljmp
ret
and
rcrl
cmpsl
mov
add
mov
mov
popf
jle
xchg
mov
push
ss
movsl
sbb
mov
test
movsl
cmpb
dec
arpl
dec
shrl
sub
and
in
mov
inc
xchg
add
dec
test
or
jbe
rcl
stos
sub
in
sbb
mov
lock
dec
cmc
cltd
nop
or
cmpsl
push
push
adc
add
js
mov
insb
dec
sub
leave
inc
ss
data16
sbb
leave
jg
sub
test
iret
mov
push
push
rcl
scas
sub
jmp
pop
subl
fldcw
adc
pop
sti
mov
sub
mov
jmp
sbb
int3
hlt
xor
sbb
lret
test
xor
lcall
sbb
sub
aaa
mulb
ret
notb
lods
and
daa
xchg
aam
daa
rcll
inc
pop
mov
mov
gs
adc
in
adc
jo
gs
sti
push
mov
fiadds
or
or
pop
test
xorl
scas
in
cmp
int
mov
fistps
sbbb
fidivs
push
sub
push
jo
bnd
in
shll
fisubrl
call
inc
lret
or
shl
inc
add
in
imul
xchg
jecxz
iret
ret
mov
mov
xchg
daa
icebp
das
mov
fcom
push
jmp
scas
mov
test
outsb
xchg
or
mov
es
out
insl
daa
lods
aas
sbb
mov
lock
push
je
inc
or
insl
fnsave
testl
jns
add
jle
fistl
aas
push
sarb
mov
cmp
je
jne
bound
mov
or
xor
inc
ljmp
cltd
mov
iret
movsl
cld
ss
cld
xchg
imul
jecxz
test
out
mov
sub
outsb
loope
outsb
sbbl
jo
aad
stos
xorb
mov
dec
and
std
or
dec
rcrl
out
mov
mov
push
movsb
pop
call
pop
ret
in
fcoms
dec
jge
sahf
jl
inc
xchg
std
in
adcb
ret
sub
lcall
mov
nop
jmp
push
add
pop
push
sub
scas
mov
pop
test
clc
jge
mov
xor
jge
jg
fiaddl
mov
es
leave
cli
mov
out
inc
jmp
pop
leave
test
sbb
mov
in
stc
mov
jmp
ljmp
bound
xor
mov
imul
push
pusha
push
jle
jb
lcall
scas
outsl
inc
shlb
repnz
in
lret
stos
sbb
enter
je
loope
testb
ss
xchg
rolb
aam
sub
fdivl
out
mov
iret
jns
jae
lock
out
mulb
xor
ret
pushl
repz
testb
push
lds
jecxz
lods
mov
shlb
xchg
inc
mov
es
sbb
xchg
mov
xor
or
inc
ja
out
imul
jmp
pop
shlb
jo
clc
xorl
jno
xchg
xchg
out
and
int3
movb
xorl
and
pop
push
addr16
pop
push
out
sbb
in
jns
test
mov
inc
ret
ja
fstp
cltd
inc
sub
push
mov
gs
and
neg
push
fs
hlt
stos
xor
lret
out
mov
adc
lret
call
sub
clc
les
insb
aam
sbb
mov
sbb
scas
ljmp
aad
xchg
mov
ja
inc
daa
fadds
add
mov
scas
cs
insl
data16
inc
sub
xor
out
jnp
jnp
mov
outsb
sbb
xor
add
fnstenv
test
mov
dec
mov
or
cld
jo
daa
dec
cmp
pop
pop
shr
jbe
adc
cmpsb
lock
mulb
xor
fmuls
ret
adc
mov
sub
loope
fsubrl
sbb
in
jnp
ficompl
popa
add
and
add
std
sbb
idivl
insb
or
orl
sub
rorl
adc
and
movsb
push
pusha
cli
jb
stc
and
sub
testl
xor
iret
push
daa
pusha
xor
sbb
lea
rcrl
inc
es
jnp
ret
mov
or
insb
das
mov
xchg
cmp
cmpsl
push
mov
lds
dec
xor
dec
imul
cmc
sub
fdivl
aad
cmp
push
cmp
test
mov
inc
cmp
aad
add
sar
mov
aas
fcompl
ds
hlt
inc
call
jge
lea
test
cld
int3
mov
aad
add
in
pusha
mov
in
ja
mov
pop
imulb
push
gs
add
lahf
xchg
cld
loopne
sbbb
push
gs
inc
push
adcb
and
xchg
insl
in
cli
fidivs
xchg
rcl
sbb
stos
popf
gs
ja
push
repnz
adcl
fsub
add
mov
aad
xor
dec
mov
cmpsb
pop
push
mov
add
in
popl
stos
pop
fdivs
das
mov
mov
dec
cmp
jl
stc
cmp
jg
and
lods
adc
push
inc
jle
stc
movsl
jmp
sar
xor
sahf
jl
ljmp
adc
push
lock
xlat
or
test
aas
call
push
adc
inc
cmc
je
aas
xor
sbbl
bound
fsubrl
xchg
loopne
push
addr16
mov
mov
jge
fiaddl
lds
pop
aam
mov
out
mov
and
xchg
push
xor
xor
add
mov
push
clc
dec
outsb
xor
fs
sbb
lods
rcr
dec
cmp
aaa
leave
sub
cmpsl
outsb
add
lcall
xchg
ljmp
lods
mov
sbb
aas
xchg
and
push
sbb
adc
in
push
push
mov
add
or
xchg
dec
lods
jl
xor
lret
xchg
mov
ret
in
insl
sbb
shll
shlb
cmp
and
dec
sub
inc
jle
dec
adc
add
ja
in
outsb
push
adc
shl
mov
jbe
jmp
adc
lret
or
sub
outsl
loope
sub
out
xor
pop
xchg
insl
cmp
lcall
xor
js
jl
jne
mov
xchg
test
pop
movsl
jmp
xor
inc
gs
mov
pop
in
xchg
fsts
xchg
cs
subb
push
or
out
push
shrl
mov
push
add
cwtl
clc
xchg
mov
mov
xchg
dec
out
xor
dec
jp
add
pop
loop
pop
sbb
mov
in
inc
mov
sahf
pusha
cmp
mov
lea
into
mov
rcll
shr
arpl
add
repnz
mov
pop
clc
aas
cmp
jae
out
subl
add
in
add
and
xchg
pop
jno
pusha
dec
mov
push
sbb
scas
xchg
mov
mov
int3
xlat
xchg
jle
in
js
insb
ret
add
dec
cmp
add
jge
jno
mov
stos
popf
jo
cs
test
popa
out
push
nop
adc
aam
adc
mov
das
xchg
movsb
dec
xor
jo
add
adc
dec
jno
pslld
int
xor
clc
ljmp
add
push
xchg
mov
cmpsb
push
test
mov
mov
add
js
jmp
xchg
push
test
loopne
in
loop
fcmovbe
aad
push
int
push
lret
cmp
in
pop
hlt
mov
mov
shlb
pop
das
xchg
push
xorl
jge
int
adc
movsl
in
and
push
es
or
jp
repnz
pop
mov
fs
out
mov
popf
fnstcw
lea
loope
int3
pop
pop
xor
popa
sbb
push
leave
pop
ss
pushf
bound
sub
and
imul
setno
shrb
mov
xchg
xchg
pop
icebp
mov
inc
adc
test
xlat
cs
xchg
out
inc
dec
push
mov
insb
cmp
pop
test
push
jg
push
xor
les
or
repnz
inc
or
popa
jle
push
and
jae
jecxz
pop
lcall
rorl
xchg
lcall
outsb
popl
iret
cmp
xor
sub
daa
iret
xlat
les
jnp
popa
pop
jecxz
jb
outsl
sub
in
out
aam
or
test
mov
aad
mov
xchg
in
push
jnp
shlb
sbb
fdivrs
and
pop
mov
sub
iret
sbb
or
mov
mov
and
sub
cmpsb
jbe
insl
outsl
jnp
je
xchg
jmp
xor
mov
add
pop
stc
loopne
mov
jecxz
inc
adc
push
and
pop
mov
push
cmpsb
ds
sub
or
push
mov
mov
call
mov
sbb
mov
shlb
insl
cltd
push
sbb
sub
jle
or
inc
or
push
mov
adc
imul
xchg
mov
aam
sub
lret
sahf
imull
js
cmp
fcmovne
mov
and
imul
cs
pop
and
add
adcb
mov
cmc
inc
inc
mov
push
into
pop
pushf
mov
pop
iret
jnp
ljmp
scas
jmp
push
inc
mov
mov
push
pop
scas
stc
cmp
lock
in
stc
lcall
or
jg
sbb
add
bound
xchg
fisttpl
inc
es
inc
lahf
clc
sbb
call
and
sbb
in
xlat
xchg
or
and
mov
dec
pop
jbe
sbb
sbb
popf
enter
in
and
sbb
outsb
mov
pop
mov
lahf
stc
or
jbe
or
push
fcoml
loope
daa
ret
dec
fwait
jg
clc
ret
stos
scas
bound
xlat
roll
pop
pusha
cmp
incl
bound
xor
or
roll
fsin
in
or
mov
sub
or
insb
inc
loope
int3
bound
or
cmp
push
pusha
sbb
je
jne
mov
ja
add
fistl
ljmp
xchg
test
jg
cmpsl
call
ja,pn
popf
inc
movb
gs
jne
dec
dec
add
iret
ret
inc
sub
lret
je
adc
push
adc
lea
shufps
push
xchg
pop
mov
rcl
stc
setp
les
mov
adc
dec
into
outsb
popf
outsl
pop
leave
enter
cmp
rcl
xor
vsubps
mov
mov
int
hlt
push
inc
inc
cmpsb
push
jnp
faddl
mov
adc
outsl
sahf
testb
mov
in
in
frstor
mov
pop
cmp
jmp
push
scas
jnp
jge
in
iret
negb
mov
cmc
mov
mov
cld
xlat
gs
sbb
mov
data16
imul
and
or
and
push
jmp
call
fwait
ja
in
fwait
cltd
mulb
pushf
iret
jnp
mov
inc
pop
jno
sub
inc
mov
in
add
push
imul
int
int3
mov
mov
jbe
fists
decb
stos
cmpsb
test
mov
popf
je
movsl
mov
jns
addr16
jcxz
add
dec
xchg
mov
cmp
testl
pop
jo
push
test
pop
out
adc
mov
dec
icebp
or
mov
js
mov
and
lret
popf
xchg
lea
jecxz
repnz
push
enter
mov
fistl
imul
cmp
jmp
mov
mov
sahf
fdivr
mov
dec
loope
mov
dec
dec
int
jl
ss
and
lcall
movsl
outsl
mov
mov
adc
dec
pop
and
mov
sbb
cmpsb
mov
xlat
imul
mov
sbb
idivl
adc
push
or
mov
scas
xlat
or
fidivs
out
repnz
mov
insb
mov
int3
mov
je
loop
mov
jo
int3
cs
subl
lea
movsl
pop
andl
aaa
mov
dec
pusha
jo
int
outsl
dec
loopne
lret
mov
imull
mov
scas
scas
test
ja
mov
mov
push
movsb
leave
pop
dec
xchg
inc
icebp
mov
inc
dec
or
mov
cmp
push
sub
enter
icebp
rorb
lock
fimuls
daa
lds
fisubrs
push
shrb
loop
insb
jae
mov
push
adc
rcrb
dec
jb
enter
enter
cmp
jo
imul
es
into
out
jmp
push
fs
movb
adc
lds
mov
xchg
push
and
dec
ja
lcall
mov
out
test
or
filds
dec
incl
mov
xor
xor
movsl
movb
iret
hlt
out
mov
aad
jbe
pop
push
or
scas
cwtl
jno
fwait
push
arpl
fst
jno
sub
mov
shrb
lock
xor
sub
add
adc
fcomi
xchg
int
jge
xchg
push
jp
mov
and
xor
add
cld
jno
sub
push
stos
jnp
push
pop
call
ljmp
insl
pop
mov
adc
lret
es
in
cs
lcall
adcb
cmpsl
iret
mov
xchg
sub
inc
in
jae
fidivl
adc
test
jle
mov
mov
std
call
or
jp
adc
imul
jl
jg
push
nop
mov
adc
movsl
call
in
orl
and
pop
add
add
enter
int3
call
ret
or
daa
hlt
add
push
sarb
xor
and
repz
fld
cmp
outsl
dec
cs
test
sahf
sub
movsb
xchg
inc
jg
outsl
jp
test
jl
mov
push
jmp
aam
mov
add
or
lret
inc
push
adc
popf
pop
cmpsb
add
jbe
mov
outsl
ja
arpl
out
aad
cmpsb
mov
and
pop
sub
mov
and
int
jmp
xchg
insl
push
inc
in
push
inc
mov
orl
fildl
lret
daa
sbb
sub
dec
and
mov
repnz
xchg
mov
mov
mov
into
push
in
cmp
mov
adc
dec
pop
jae
sub
sbb
mov
xor
cmpsb
or
movsb
mov
xchg
and
mov
stc
push
adc
in
dec
lahf
in
imul
mov
adc
mov
push
and
mov
gs
jb
push
and
push
sbb
mov
repz
jg
jmp
push
xchg
push
sarb
push
mov
ficomps
push
lret
mov
int
lods
jp
in
inc
cmp
ds
into
lods
stos
ret
dec
testb
aaa
rcrl
enter
sub
sbb
outsl
pushf
sti
fstps
cli
xchg
arpl
rol
leave
lret
and
pop
inc
iret
insl
push
dec
addr16
xlat
inc
sbb
loop
jo
cmp
or
outsb
xor
xchg
pop
lock
stc
dec
pop
push
jle
aaa
popf
shr
sub
pop
pop
lret
push
mov
xchg
adc
sub
cmpsb
sub
insl
push
cmpsb
lods
mov
jle
xchg
add
das
jmp
cmp
sbb
adc
sub
scas
mov
xor
xchg
push
test
push
jne
hlt
outsl
ret
dec
or
mov
aam
repz
sub
lahf
pop
xor
pandn
mov
test
cltd
mov
das
aaa
mov
inc
inc
mov
sub
xchg
jmp
add
cmp
cmpsb
mov
dec
addr16
inc
subb
fnsave
stc
sub
push
cmc
jae
aam
sub
out
loopne
cld
inc
arpl
xor
cmp
jo
imul
inc
loop
adc
push
xor
lcall
dec
mov
pop
fs
dec
cwtl
inc
inc
inc
push
shl
rol
xchg
cli
lods
mov
or
jne
pop
pop
cmpsl
hlt
cmp
mov
xchg
dec
jno
out
jp
out
xchg
jne
fs
testb
mov
popf
push
into
fs
mov
cmp
mov
sahf
mov
push
movsl
sar
cmpl
in
sbb
cli
cltd
out
xchg
inc
xchg
fcoml
andl
imul
fisttpl
inc
inc
pushf
ja
sbb
pop
add
inc
or
test
sbb
mov
xchg
rcll
lods
push
push
push
cwtl
enter
adc
cmp
aad
stos
inc
cli
arpl
gs
fsubr
mull
xchg
jg
out
insb
scas
xor
lret
adc
pop
xchg
ja
rcrl
ja
push
leave
xlat
cmpsl
nop
aas
inc
xchg
add
or
adc
xchg
sti
xor
inc
rorl
mov
xchg
jle
outsb
or
inc
rolb
mov
aaa
scas
mov
mov
roll
inc
notb
orl
sarb
dec
cmpsb
cmp
pop
nop
or
rolb
dec
lret
sub
sahf
xor
pop
fdivl
aad
mov
stos
or
fdivp
cmp
insb
mull
cs
or
cld
loope
pop
cmp
pop
fucomip
and
xchg
outsb
out
stos
cmp
jno
es
jo
inc
push
rcll
sub
mov
jp
xchg
and
cwtl
cld
fwait
cmp
jmp
imul
sbb
subl
add
shlb
fwait
int
movsb
cs
outsl
sbb
pop
loop
jg
aaa
lods
scas
imul
cmpsl
mov
or
outsb
inc
fs
jb
pop
int3
and
iret
dec
ss
int3
loop
imul
aaa
iret
jae
ffree
jo
mov
decb
xor
insl
into
push
adc
scas
dec
mov
fmuls
xor
sbb
pop
daa
inc
mov
in
lahf
loope
das
lods
sbb
in
adc
sub
mov
dec
cs
xor
shlb
jg
push
adc
cmp
loope
mov
cs
jbe
test
stc
popf
icebp
mov
test
jl
lahf
cmp
jnp
fstpt
out
push
iret
sub
jnp
inc
mov
sar
ds
aam
add
and
insb
ret
xorb
mov
cmpsb
iret
lret
notb
mov
mov
pop
inc
sub
cmc
adc
in
fsincos
xchg
gs
and
sbb
mov
push
adc
xchg
inc
cmp
lcall
mov
mov
sahf
mov
adcl
aam
push
loop
jl
sub
push
inc
shrb
paddsw
sub
add
push
xor
push
cmp
adc
mov
pop
xchg
mov
pop
call
or
adc
mov
fsub
jae
lcall
cmp
push
adc
daa
mov
mov
mov
mov
inc
and
push
repnz
loop
imul
rcrl
mov
inc
es
fisubs
lods
adcl
iret
xchg
mov
and
loopne
lods
out
mov
dec
pop
jg
jb
bound
and
fildll
ret
jecxz
cmova
mov
orb
mov
jo
insb
flds
cwtl
jno
scas
and
add
stos
hlt
sub
ds
pop
add
cmp
add
subl
pop
cmpsl
movsb
mov
cmpb
in
flds
cmc
rolb
xchg
call
icebp
addr16
stos
fidivl
clc
and
jne
aas
scas
add
loope
lcall
mov
mov
mov
mov
jnp
lcall
or
adc
dec
sbb
je
adc
xor
jmp
pusha
mov
addr16
and
mov
or
repnz
in
insb
dec
xor
xor
pop
or
jge
shrl
push
and
rcrl
jne
add
sbb
dec
pop
or
cmp
push
or
mov
es
cli
adc
mov
loopne
pop
jno
mov
cwtl
sahf
push
sbb
cli
pop
test
sub
addr16
sbb
cli
or
pop
jne
sub
bound
adc
popl
scas
jns
ss
mov
sbb
push
push
and
add
clc
dec
sbb
notb
in
mov
sbb
sbb
fsubp
scas
jae
sahf
add
mov
fimull
cmc
fsts
ror
bound
xor
mull
ficomps
jno
cs
adc
orl
push
or
mov
jmp
scas
mov
imul
int3
flds
pop
cmp
push
pop
iret
or
fiaddl
iret
stos
into
sahf
cmc
push
jbe
movsl
sub
or
inc
clc
sbb
pop
dec
xchg
fisttps
lahf
adc
xchg
sti
rolb
mov
dec
nop
inc
cmc
ljmp
dec
mov
lret
xor
data16
sarl
pop
out
cmpsb
test
in
test
jle
pop
jle
cs
mov
jg
inc
add
lods
repz
mov
cmp
dec
cmp
mov
mov
sbb
sbb
xor
dec
add
add
inc
and
popa
pop
cmp
mov
divl
inc
rclb
adc
loope
cmc
out
bound
int
jno
leave
mov
pop
inc
xchg
dec
and
nop
adc
pop
loopne
mov
loope
push
aas
jg
push
mov
outsb
gs
xchg
jecxz
das
jnp
cmc
sbb
xchg
dec
aad
pop
arpl
aad
decl
adc
sub
dec
cli
cmpsl
cmp
in
cli
inc
scas
dec
lret
dec
arpl
paddq
arpl
pop
mov
inc
fnsave
fimull
mov
pop
mov
pusha
sub
into
xor
mov
xor
xorb
sahf
pop
jmp
stc
xor
jae
ds
lcall
pop
mov
popa
or
mov
xor
dec
xor
das
mov
add
mov
add
jl
pop
push
xor
scas
sub
mov
xor
aaa
ret
fcmovbe
into
lock
add
nop
divl
xor
pop
stos
nop
hlt
addr16
push
and
rorb
jne
negl
pop
imul
add
cmp
lock
or
pop
mov
pop
das
pop
inc
clc
sbb
lcall
inc
neg
fimuls
cmp
sub
fidivrs
flds
or
jnp
sbb
sbb
adc
dec
imul
cmp
mov
in
pop
or
clc
dec
test
cmpsl
andb
test
mov
sbb
sbbb
push
fisttpl
or
inc
cmp
or
dec
in
push
bswap
cli
xchg
adc
push
pop
in
xor
xchg
pop
das
add
sub
nop
dec
mov
xorl
dec
test
xchg
push
data16
imul
cmc
les
and
dec
into
movsl
cwtl
jnp
mov
xchg
or
mov
int
insb
sarb
or
jl
inc
fdivl
xorb
ja
dec
inc
mov
je
push
sub
enter
pop
push
or
xor
out
pop
inc
pop
push
mov
lods
ja
push
push
cwtl
in
aam
sarl
pop
cmc
pop
shll
mov
or
pop
rcrl
sbb
pop
aaa
int
xchg
int
aam
outsb
lds
pop
sbb
mov
sub
mov
std
cmpsb
adcl
insl
inc
cmp
mov
cli
jge
pop
dec
lahf
in
js
dec
shrb
das
sbbb
add
sub
call
stos
sub
mov
xor
pusha
into
in
mov
adc
aaa
jmp
jne
or
pusha
xor
xor
or
dec
xchg
subl
cmpsb
cmp
jl
icebp
inc
insl
push
push
and
pop
or
and
fs
inc
mov
xor
inc
jae
ret
push
jp
rcrb
mov
adc
and
mov
push
data16
mov
push
fildll
cs
mov
xchg
sub
jo
nop
jl
mov
pop
mov
push
cld
push
add
fisubrs
popl
pop
cmpsb
dec
lea
addb
inc
ja
pop
push
mov
imul
xchg
mov
add
pop
xchg
mov
data16
push
or
jge
cli
lock
lds
mov
insb
lret
push
mov
jne
inc
std
nop
lock
ret
xchg
inc
xor
add
jg
or
xchg
andl
inc
cmp
bsf
inc
cmp
cmp
repnz
or
cld
inc
dec
divl
out
fwait
inc
dec
ss
mov
xchg
pushf
cmpsb
add
jmp
je
pop
mull
xor
shl
fistps
insb
cld
adc
iret
loopne
inc
and
outsb
lds
daa
mov
xchg
addr16
inc
cmp
xlat
or
test
dec
in
mov
or
sti
and
testb
or
or
mov
jns
push
jmp
into
enter
rclb
xchg
adc
dec
loop
xchg
cmp
push
lret
dec
push
xor
cld
leave
loopne
test
sub
cli
neg
jne
movsb
cmc
pop
mov
push
pop
ja
pop
movsl
outsb
ret
jno
xbegin
cld
cmp
loop
test
cmc
fs
cmpsb
orl
mov
in
and
ljmp
mov
mov
in
leave
data16
mov
sub
xchg
add
mov
aaa
cli
insl
push
cmp
popa
das
cmp
sbb
pop
cwtl
xchg
cmpsb
or
mov
int
js
inc
nop
push
jp
cwtl
jnp
aad
sbb
lods
mov
cmp
and
adc
cltd
jb
sahf
movsb
jp
xor
add
xlat
sub
inc
mov
xor
inc
cli
daa
adc
loopne
data16
fwait
lds
xchg
and
imul
push
push
pop
aaa
mov
cmp
add
cmp
sarb
mov
lds
ret
fdivrs
inc
dec
or
pusha
jp
sub
mov
ljmp
idiv
pushf
dec
xor
pop
pop
pop
pusha
int
xor
dec
arpl
jne
mov
jne
jg
aas
cs
je
or
rclb
jns
inc
lds
adc
dec
ja
in
stos
mov
into
fsubrl
daa
cmc
rcrb
nop
dec
and
pop
xchg
ja
push
insl
jae
arpl
jg
std
or
mov
mov
dec
iret
stos
daa
add
fsubrs
mov
mov
pop
or
sub
lods
adc
jecxz
ja
scas
cmp
mov
push
adc
rolb
test
out
sub
cmp
in
rclb
sub
or
push
out
add
and
sbb
lcall
mov
and
mov
enter
orb
movsb
cmpsl
pop
out
add
fst
mov
mov
and
mov
or
out
and
dec
aad
shrb
sbb
lock
shl
xlat
out
sub
insl
sub
sub
mov
add
out
xor
sbb
fadds
sub
imul
xchg
dec
in
sbb
aas
inc
adc
jmp
pushf
addr16
mov
sahf
pop
outsb
imul
cmp
mov
inc
or
jmp
xchg
into
mov
sub
lcall
adc
movsl
adc
fcomi
or
das
pop
xchg
or
es
in
test
dec
jne
pop
test
sbb
xor
lods
call
cmc
movsb
popl
mov
dec
jp
adc
cmp
mov
cmp
cmp
les
ds
cmc
mov
cmp
clc
fsubs
mov
jbe
insl
cli
sub
lock
mov
movsl
popf
aam
test
mov
flds
or
add
dec
outsl
pop
push
jge
jl
in
pop
add
movsb
jb
or
xchg
push
jnp
gs
gs
test
lret
push
test
mov
push
lods
daa
xchg
pop
mov
cmpsb
or
jno
imulb
cmp
insb
cmp
xor
ds
repnz
or
js
or
pop
clc
shlb
popa
out
cmp
sub
inc
jge
loop
adc
movsb
test
inc
insb
loope
xchg
add
icebp
lds
das
stos
add
add
jmp
jno
and
push
stos
pop
or
push
std
xchg
add
mov
out
or
mov
in
ret
in
es
cs
and
sahf
add
mov
cli
cmc
push
test
add
es
inc
es
in
pop
mov
mov
icebp
push
roll
pop
pop
nop
xchg
arpl
cmp
shlb
mov
xchg
lds
adc
out
sub
adc
sbb
pop
cmp
sbb
jecxz
daa
cmpsl
pop
clc
outsl
sahf
jo
rorb
int3
pusha
jle
jp
or
aaa
scas
in
and
pop
push
es
mulps
pushf
insl
inc
adc
dec
jnp
sar
mov
hlt
or
loopne
and
pusha
ret
mov
icebp
mov
jecxz
subb
push
or
mov
and
divb
inc
pop
jbe
xchg
and
mov
aaa
and
push
pop
dec
add
mov
sbb
and
mov
ds
dec
popa
aam
push
push
dec
mov
add
in
push
fadds
adc
outsl
add
pop
cli
cmp
mov
xchg
dec
test
mov
jbe
sub
mov
fwait
jge
jmp
bound
cmpsb
lods
aad
hlt
lea
inc
ret
push
inc
or
xor
pop
jge
mov
dec
lcall
push
pop
cmpsl
rorb
outsl
xchg
mov
icebp
stos
addr16
push
xchg
cmpsb
iret
inc
pop
sbb
fidivs
jnp
neg
js
repz
into
pop
loope
out
fsubl
push
call
cmpsb
push
lock
test
out
out
dec
jmp
push
insb
idivl
pop
fcmovnb
xchg
fstl
adc
mov
lds
sub
test
xor
mov
sbb
aas
dec
pop
cmp
addb
cltd
aas
call
pop
xor
scas
pop
xor
cmp
loopne
aaa
not
out
and
ss
sti
lcall
cmc
aad
popf
pop
bound
or
sbb
je
xor
repz
push
pop
imul
clc
pop
rcll
pop
dec
cwtd
shrl
and
enter
dec
pop
pop
and
jmp
lds
jecxz
gs
stc
xor
inc
sub
rcrl
push
sbb
adc
enter
xchg
adc
mov
push
pop
push
scas
jg
in
das
inc
pop
push
arpl
cli
jg
fisubrs
adc
mov
xlat
push
popl
sahf
js
fdivrs
inc
jbe,pn
cmc
jb
add
cmpl
subl
int3
bound
dec
pusha
or
inc
xchg
jp
xchg
mov
jge
pop
pop
adc
pusha
jge
pop
jecxz
notl
pop
push
leave
into
fwait
adc
lret
int3
addb
rolb
mov
dec
jmp
stos
cmp
push
bound
js
push
and
dec
jns
cmpsb
imul
mov
jp
cmpl
cmp
daa
pop
push
push
dec
inc
ss
cmp
mov
jge
int
jne
mov
inc
inc
push
ljmp
mov
daa
notb
cld
frstor
inc
testl
sub
lea
xchg
xchg
add
sbb
xchg
aaa
leave
or
test
dec
out
dec
in
jb
push
fidivs
out
clc
cmpsl
sahf
adc
push
inc
jae
nop
mov
inc
cmp
sbb
push
lret
and
jnp
int
andb
loopne
js
mulb
cmp
dec
rcrb
aad
sbb
iret
mov
rcrb
mov
or
xor
mov
test
xchg
dec
sub
mov
push
pop
cltd
pop
stos
cmpsl
or
aam
mov
dec
test
mov
shlb
sarb
ret
mov
or
sub
test
cwtl
add
je
test
lea
rcr
aam
addr16
sbb
movsb
jb
mov
sub
or
add
fsub
out
pop
pop
mov
jo
push
dec
addb
inc
or
bound
xor
pop
lahf
mov
push
cld
jp
or
jne
fucomi
aas
mov
aad
pop
push
add
sbb
aas
cmp
fstpt
inc
addl
jge
inc
mov
mov
or
scas
xchg
nop
aam
int
sbb
mov
add
les
lea
jnp
cmp
adc
inc
fs
mov
jno
jnp
xchg
aaa
int
rclb
xchg
cmp
sub
xor
inc
push
fdivrs
cltd
cs
insb
fildll
adcl
jmp
pop
lret
pop
cmp
leave
repnz
mov
popa
ret
dec
inc
add
push
xor
jne
sbb
add
dec
and
inc
icebp
in
outsl
xor
insb
xor
and
cmc
xchg
scas
cli
mov
fnclex
mov
fldenv
or
mov
std
insb
sub
jge
jne
scas
mov
inc
and
out
xor
dec
ds
out
std
mov
mov
mov
lock
adc
mov
in
ja
push
dec
fists
adc
ljmp
adc
inc
shlb
fninit
push
out
dec
idivb
sbb
psubsw
js
pop
lds
adc
lahf
mov
popf
mov
loope
inc
pop
popf
scas
dec
jns
and
xlat
repz
sub
cmpsb
lcall
push
adc
xor
xorb
dec
xor
insb
fs
jl
aad
add
xor
mov
and
inc
xchg
fucomp
mov
adc
lcall
mov
pop
cmp
adc
in
faddl
and
sbb
cld
fcomps
and
inc
arpl
push
bound
daa
inc
sbbb
sub
pop
adc
fisubs
pop
xchg
jl
test
nop
inc
mov
mov
sahf
iret
sbb
dec
imul
out
mov
and
loop
jo
push
push
movsb
xor
mov
mov
shl
add
ficoms
mov
pop
testb
mov
outsl
and
lahf
add
lahf
insb
loop
cwtl
sub
lea
inc
mov
mov
mov
mov
mov
popa
add
ret
jnp
and
scas
and
push
data16
xor
std
push
push
xchg
mov
fstp
mov
xchg
popf
or
xor
icebp
xchg
sub
or
ret
pop
cmpsl
jb
xchg
push
mov
dec
sub
sub
or
mov
cmpb
adc
addb
cli
sbb
xor
loopne
imul
inc
mov
and
popf
add
adc
push
inc
cmpsb
fsubrp
les
roll
adc
mov
fsubrp
add
mov
int
sbb
cmp
push
lret
jmp
repz
jp
xchg
int3
adc
push
in
insb
out
icebp
sbb
out
adc
inc
add
test
je
pop
jbe
aas
call
add
imul
mov
rorb
ja
adc
fdivrp
loop
out
out
mov
rolb
mov
xchg
pushf
pop
fidivrl
jl
mov
outsl
pop
sub
dec
jmp
jb
rcll
push
shrl
cmp
fnstenv
pop
dec
push
add
mov
int
mov
cli
xor
sbb
inc
inc
popf
imul
mov
ljmp
xchg
rcl
call
mov
mov
lock
je
in
dec
pop
mov
lds
pop
add
push
stc
test
add
ficompl
mov
stc
loop
push
outsb
inc
cmpsb
das
push
cmp
dec
stos
sbb
dec
movb
sub
jmp
imul
mov
fdivr
pop
push
js
dec
xchg
add
dec
lock
mov
mov
pushf
out
sub
mov
push
rol
mov
dec
jb
jmp
rorl
sub
call
pop
xchg
mov
xor
push
mov
sub
imul
test
ljmp
jnp
mov
jne
xchg
xchg
inc
jg
inc
xor
xchg
fcomps
pushl
lock
sti
ftst
xchg
out
call
sbb
rorl
addb
push
orb
xor
sub
jb
fldenv
push
mov
and
addr16
lahf
loop
and
fnstsw
movl
mov
jp
push
adc
jno
scas
inc
lds
cs
jnp
adc
stc
incl
int
std
roll
sub
jo
dec
fstps
int3
icebp
outsb
inc
sbb
xor
ds
shll
xor
xor
subb
xchg
cmpl
mov
sub
push
or
adc
inc
in
out
lods
pop
mov
sub
dec
clc
jbe
pop
cmp
fcomps
std
pop
stc
mov
test
jno
or
fcomps
or
cwtl
cli
adc
scas
movsb
mov
cmp
push
sub
and
xchg
push
stos
es
inc
cmpl
dec
sti
test
xor
movsl
xchg
mov
iret
cmc
mov
das
sub
sub
xor
repnz
jo
insl
jo
jbe
mov
pop
fstl
xor
and
es
insl
test
mov
mov
daa
decb
pop
inc
pop
jmp
sub
push
jg
xchg
test
fidivl
pusha
pop
stos
icebp
push
adc
cli
mov
add
pop
addr16
int
cmp
xchg
jmp
dec
lret
and
pop
jns
loop
and
mov
out
and
dec
xlat
push
xor
js
repnz
and
loop
fstpl
sub
and
cltd
push
sub
xlat
mov
pop
jg
xor
int
ljmp
xor
jmp
fistpll
and
jo
daa
pop
pop
ss
iret
sahf
push
push
loop
imul
aad
push
dec
lret
dec
sub
push
mov
push
scas
xchg
push
sub
sbb
inc
pop
sbb
xchg
sbb
pop
push
add
lret
arpl
int
mov
stos
fsub
pop
outsl
shrl
dec
incl
aad
xchg
pop
or
inc
fwait
pop
je
inc
sbb
int
dec
roll
xchg
jg
dec
mov
cmp
out
cmp
mov
mov
sub
mov
or
xchg
imul
je
orl
sub
aad
mov
pop
filds
add
or
push
sub
in
cmpsl
scas
and
lea
inc
or
movsl
adcl
sbb
outsb
or
cmp
out
mov
lds
ds
movsl
rcrl
lods
cmpl
lahf
int
sbb
shll
lret
cmpb
inc
xchg
fcmove
or
mov
idivl
enter
aad
nop
ret
negl
or
dec
mov
cltd
xor
cltd
and
icebp
out
fcompl
pop
mov
into
loopne
js
push
xor
add
out
in
and
pop
mov
inc
mov
pushf
dec
adc
xor
addb
and
mov
jns
ror
pusha
lret
fildll
inc
jle
add
movsb
mov
and
xchg
mov
or
das
cltd
sub
imul
hlt
cmp
adc
mov
inc
mov
cwtl
mov
or
sbb
xchg
xchg
mov
dec
inc
jmp
jns
add
pop
cmp
leave
imul
aad
rcl
das
clc
sub
push
jns
mov
mov
fistl
pop
stos
jb
rolb
ret
sbb
ljmp
sub
leave
test
jo
in
sub
dec
mov
sbb
lcall
push
sbb
jb
repnz
dec
mov
cmp
out
rcrb
add
inc
mov
mov
in
adc
lret
mov
out
mov
xchg
jne
fwait
or
xor
out
jl
or
adc
das
xchg
test
ja
shll
ss
jbe
dec
leave
mov
addb
popf
adc
outsb
cmpsb
inc
popa
mov
rolb
mov
mov
aas
lods
test
jbe
and
mov
and
andl
aas
cmpsl
sub
loopne
sarb
add
mov
outsl
ljmp
jo
iret
sub
popa
insl
jbe
aam
scas
test
pop
inc
les
testl
call
sub
and
loop
addb
andb
mulb
dec
mov
pop
dec
dec
xchg
movsb
fs
in
rcll
mov
push
dec
mov
mov
mov
dec
xchg
jns
sbb
mov
xor
add
push
hlt
jge
es
in
daa
mov
fistpll
push
adc
ficompl
out
aaa
adc
or
stos
or
mov
repnz
push
sahf
pop
cmpsl
std
jnp
fistps
outsb
jl
push
or
bound
shrb
shll
popa
rol
shl
mov
mov
ljmp
cmpsl
test
fcmovu
fadds
jmp
stc
ret
xor
rorb
scas
mov
mov
push
add
add
out
dec
push
shlb
xor
inc
ds
sub
outsb
jns
fisubrs
jge
les
pop
push
in
out
test
or
cli
mov
std
push
jl
xchg
arpl
xor
repnz
leave
mov
scas
sbb
or
xor
or
xchg
popa
push
and
add
rorb
repnz
push
std
and
loope
fdivl
sub
into
pop
jbe
rcr
cmp
repnz
cmp
sub
popf
faddp
int3
lods
push
sbb
loope
shrl
xor
leave
adc
jbe
pop
fstl
stos
pop
aaa
jmp
repz
ficoml
dec
mov
or
inc
push
imul
mov
adc
pop
mov
jecxz
add
lret
adc
scas
or
dec
lods
inc
ret
inc
fnstsw
mov
mov
insb
cmp
lahf
repnz
and
test
mov
xchg
test
xlat
insl
xchg
repz
cmp
mov
lea
lock
cmpsl
imul
push
xchg
xchg
clc
rcrb
mov
push
jae
sub
ja
ror
xchg
decl
mov
and
xlat
cmp
inc
repnz
test
in
xchg
cld
cmp
iret
gs
ret
insl
fbld
out
fmul
test
dec
add
mov
inc
pop
adc
out
jb
dec
xorl
mov
adc
cmp
xor
jno
pop
insl
stc
cli
and
test
mov
mov
jg
xor
mov
xchg
movsb
jmp
pop
adc
jae
cmp
xchg
movsl
stc
mov
rcrl
std
mov
push
inc
add
out
xor
test
cmp
push
test
aas
mull
add
sahf
sub
lret
mov
mov
fcomip
pop
int
rcrb
dec
xchg
lods
mov
dec
rcrb
fnstcw
jae
jl
mov
xchg
xchg
pop
push
loope
loope
daa
outsl
and
pop
jae
inc
or
lea
sarb
cwtl
roll
cld
mov
mov
insl
pusha
or
or
and
push
push
aas
lds
sbb
cli
xor
dec
push
call
fsubl
push
jg
inc
sti
push
mov
or
ret
les
mov
data16
popf
fwait
sub
clc
loope
lea
addr16
and
pop
lcall
sbb
lods
adc
test
adc
repnz
call
pop
sbb
dec
mov
outsb
pop
mov
or
mov
jo
shrl
sbb
int
test
scas
and
cmp
or
ss
and
push
lock
add
cmpsl
loope
stos
add
ljmp
cs
enter
inc
push
sub
adc
movsb
jmp
imul
bound
jbe
add
push
pop
lahf
pop
pop
adc
adc
adc
cmp
call
leave
sbb
mov
xor
xor
inc
adc
mov
cmp
roll
mov
mov
jnp
test
fsubrs
fiadds
bound
xchg
scas
jnp
outsb
and
sbb
cmpsl
push
push
lret
fwait
popf
mov
scas
jnp
inc
notb
daa
push
xchg
stc
or
xor
pop
pop
test
inc
push
mov
add
jge
imul
xlat
decl
cmc
push
adc
aam
sub
shrb
sti
es
in
cmp
repnz
or
mov
cmp
fbld
das
scas
test
mov
push
sub
and
mov
pushf
fcmovnb
ja
decl
dec
sub
out
mov
aam
fsubrl
movsl
out
push
inc
or
mov
cld
test
mov
outsl
orl
push
lret
cltd
in
jnp
lahf
cmpsb
dec
and
and
jb
add
mov
hlt
mov
icebp
mov
cmpsb
jno
cmc
jne
repz
jecxz
cs
mov
dec
mov
cmp
mov
add
pop
cwtl
add
leave
push
jb
in
xchg
outsb
push
rol
xchg
out
push
int
cmc
push
adc
repz
pop
lods
fistps
shr
or
ja
xlat
mov
bound
lahf
daa
call
dec
leave
fdivrl
mov
es
xchg
fdivs
pop
lret
inc
jnp
dec
dec
daa
and
and
js
cld
mov
fsubrs
loop
mov
xorl
movsl
dec
es
cmp
movl
stos
int3
dec
iret
push
loope
mov
out
leave
mov
pop
ljmp
inc
dec
or
outsl
jecxz
ljmp
and
stc
outsl
nop
inc
pop
loop
fnstcw
mov
das
adc
imul
je
jle
add
out
stos
imul
arpl
movsl
movl
sbb
add
mov
imul
in
rclb
xor
inc
call
jmp
pushf
or
push
inc
xchg
pop
adcl
mov
psubw
pop
int
xchg
adc
data16
pusha
push
cmpsl
jp
subl
mov
test
pop
push
dec
inc
nop
inc
mov
sub
in
shlb
dec
icebp
sbb
adc
in
cmp
pop
nop
lods
int
sbb
not
mov
add
lock
imul
mov
pop
test
ret
scas
dec
daa
fdivrl
dec
repz
lods
aaa
xchg
sub
loope
or
mov
fwait
outsl
mov
loopne
jl
scas
orb
pop
push
rcrl
cmpsl
ja
daa
rolb
iret
mov
imul
psubusb
in
add
mov
add
icebp
nop
adc
js
xlat
stc
push
lods
orl
insl
clc
fbstp
lods
pop
inc
movsl
xlat
leave
adc
mov
ret
sbb
imul
fs
sub
xchg
sub
add
or
repnz
stos
pop
push
dec
push
jns
add
jne
stc
xchg
call
xor
mov
or
mov
sbb
fwait
in
popa
stos
loope
daa
outsl
leave
test
add
dec
ret
dec
lock
loope
inc
xlat
std
and
pop
dec
xchg
sbb
data16
les
cmp
leave
sarl
xor
jno
imul
enter
outsb
or
cmp
repz
inc
movl
inc
jnp
or
in
push
jmp
cmc
mov
sbb
dec
testb
push
out
cmp
ret
jg
dec
xor
and
repz
ret
xchg
pop
mov
add
insb
xchg
dec
cld
mov
int
mov
mov
dec
or
in
pushf
cwtl
arpl
adc
test
data16
or
mov
cmp
jbe
imul
test
sub
out
pop
je
in
sbb
xor
sbb
in
out
sbb
mov
pop
mov
add
pop
xor
shr
dec
arpl
test
lods
ljmp
xchg
aas
repnz
cltd
inc
xchg
jo
mov
add
adcl
pop
sbb
int
in
and
adc
and
clc
lcall
jns
rcll
movsb
push
pop
dec
xchg
call
add
lods
out
jae
das
add
xor
fcom
shrl
das
mov
out
in
andl
mov
adc
add
pop
dec
fildll
enter
repnz
cmpsb
inc
shlb
add
or
stc
xchg
roll
lds
cltd
addl
mov
jne
cltd
or
xchg
pop
cld
fiadds
jns
add
sub
loope
pusha
and
jl
cltd
stos
call
jo
dec
shlb
sbb
sar
cmp
push
push
xchg
pop
ds
sbb
cld
out
sarb
jmp
gs
push
xchg
popf
mov
mov
sbb
pop
mov
pop
jbe
and
cli
call
jmp
in
add
out
fst
shrb
les
mov
gs
jnp
and
test
aas
or
shrd
ret
mov
fadd
pop
add
fcmovnb
cli
push
jmp
clc
cmp
inc
or
ret
cmp
add
sbb
xlat
repz
xchg
push
pop
dec
repz
or
sub
lea
sbb
hlt
xor
dec
call
sub
cwtl
jp
or
insl
add
mov
movsl
pop
dec
gs
and
add
jnp
add
add
add
pop
stos
sbb
mov
pop
mov
testl
mov
xchg
mov
dec
in
pushf
int3
movsl
aam
sub
call
ficoms
inc
xor
sub
shrl
mov
dec
je
repnz
test
sbb
mov
es
rcrl
mov
add
clc
subb
aas
mov
imul
icebp
mov
movsb
out
pop
fistl
cli
cmp
jae
adc
lret
dec
cmp
repz
or
clc
adcb
popf
cltd
dec
push
add
pop
es
adc
mov
lahf
inc
lods
fs
jne
mov
cmp
lock
jle,pt
mov
xor
lds
lea
or
sbb
mov
clc
push
xor
stos
rcl
push
stos
mov
xor
inc
cmp
hlt
add
xchg
cmp
mov
mov
fs
xchg
ror
andb
add
xchg
sbb
cmc
ljmp
pop
mov
clc
sbb
daa
in
push
repz
ss
jp
adc
cmpsl
xor
out
or
insl
cltd
xor
arpl
testb
mov
rcrl
mov
movsb
icebp
lea
lods
fcoms
arpl
xor
mov
out
xor
cmp
iret
jecxz
pop
mov
or
inc
mov
add
in
ret
shr
xchg
cmc
rcrb
out
ss
cli
frstpm(287
leave
add
push
pop
sarb
test
or
push
les
and
sbb
loop
clc
ja
mov
inc
fisttpll
fildl
sti
pushf
sub
enter
lock
test
mov
xchg
sub
ds
fimuls
mov
mov
xchg
sbb
sub
leave
cmp
push
mov
push
aam
std
hlt
pop
sub
push
aas
jg
jo
xchg
jae
fcmovu
sbb
mov
in
into
dec
pop
gs
out
cmpsb
out
sub
lret
xchg
jecxz
xor
popa
ja
jae
jnp
push
fwait
cmp
repnz
pop
imul
in
add
out
shll
ficomps
adc
pusha
adc
cwtl
push
test
push
xchg
mov
mov
in
inc
push
pop
cli
test
cmc
pop
cmp
test
mov
lret
sbbb
dec
imull
push
pmaxub
xchg
mov
insl
fcomps
mov
jb
mov
out
mov
scas
jp
popa
sub
pop
xor
int
rcrl
into
jge
mov
sbb
mov
orb
push
das
cwtl
xor
test
add
dec
jecxz
sbb
cmp
dec
insb
out
and
fcomip
inc
ret
adc
inc
inc
cmpsb
jae
or
repnz
push
xchg
push
mov
loopne
insb
leave
stc
add
lods
cmc
out
mov
test
push
pop
outsl
adcb
or
push
scas
pop
mov
inc
loopne
mov
lock
out
jp
movsb
imul
mov
dec
cmp
mov
clc
cmc
in
in
xor
mov
aas
clc
sbb
lcall
jp
out
xchg
mov
mov
push
out
sti
test
sbb
add
and
add
adc
sub
push
inc
stos
add
cmpsb
pop
or
xchg
mov
sahf
or
out
sub
cmp
call
cmp
gs
xchg
inc
imul
fwait
gs
xchg
inc
loop
dec
or
pextrw
jbe
adc
mov
xlat
jle
jb
jmp
lahf
loopne
fsubrp
clc
jns
fnstsw
out
dec
jp
dec
mov
movsl
xchg
sbbb
mov
jecxz
movsb
movzwl
jp
iret
and
repnz
daa
bound
sbb
mov
jmp
ljmp
rcl
xchg
add
push
pop
cmp
or
mov
hlt
pop
inc
mov
xor
sub
jmp
inc
xchg
jp
rcr
push
fwait
ret
imul
adc
push
mov
cmp
mov
lret
in
jg,pt
cmpsl
loopne
pop
xrelease
popf
add
jbe
push
mov
sbb
xchg
sarl
mov
test
ret
inc
pushf
push
sbb
fs
fldcw
and
push
add
js
push
cmc
add
int3
loop
pop
adc
out
and
notb
aaa
cli
loope
in
xor
sbb
mov
inc
xchg
mov
jge
lret
mov
int
sahf
mov
movsl
hlt
sti
pop
jecxz
scas
add
sub
xor
out
aaa
addr16
jae
inc
xchg
add
xor
jecxz
cmpsb
jo
push
pop
add
adc
sarl
setnp
pop
mov
fidivs
sbb
mov
inc
cmpl
pop
push
jp
les
call
and
loop
mov
inc
inc
add
push
mov
cmp
sbbl
scas
lods
dec
stos
in
push
pop
mov
push
insb
push
xor
lahf
xor
dec
inc
ret
adc
mov
leave
setb
inc
in
scas
out
mov
mov
jb
sbb
adc
iret
push
movsb
pop
clc
pop
mov
fdivrs
lret
inc
mov
cmpsl
test
decb
pusha
test
dec
push
mov
cwtl
cmp
call
ss
lods
sahf
pop
ret
pop
or
test
call
adc
clc
stos
sbb
cmp
prefetchwt1
add
xchg
in
or
jmp
pop
in
dec
pop
or
aam
in
sbb
adc
push
fwait
mov
inc
clc
mov
rclb
lock
xchg
test
stos
adc
loopne
dec
ss
jbe
mov
jbe
jecxz
popa
pop
aas
cmp
xor
scas
lock
test
enter
es
iret
xor
hlt
lcall
and
jge
dec
mov
pusha
out
es
fdivrs
add
jmp
jp
lcall
mov
mov
jp
inc
sbb
add
jne
push
fnstenvs
push
out
into
imul
or
jle
in
cmp
call
lcall
mov
scas
lret
push
orl
xchg
test
paddw
or
and
adc
jge
shll
cli
mov
pop
dec
test
cmp
mov
and
cld
fisubl
nop
ds
insb
int
frstor
mov
mov
cvtps2pi
movl
ret
mov
jle
es
jmp
xchg
arpl
ljmp
shll
loop
sahf
idivb
dec
fiaddl
dec
and
push
dec
sub
or
sub
mov
inc
aad
jp
xchg
xor
fnstenv
cmp
out
dec
or
xor
fcmovb
lods
out
test
inc
pop
xor
xchg
aaa
insl
push
jle
rcl
jl
xchg
jle
push
loopne
jp
nop
sti
into
xchg
adc
out
data16
mov
pushf
incb
mov
xchg
aam
dec
das
pop
test
add
sub
or
test
or
in
xchg
pop
rclb
shlb
mov
flds
sub
aad
adc
adc
or
inc
add
inc
sub
jl
dec
ss
mov
scas
or
cmp
les
inc
jle
data16
mov
cmp
pop
outsb
dec
pop
in
sahf
insb
jb
jb
pushf
mov
lea
inc
addb
push
add
stc
mov
jge
je
push
push
xor
cmovg
and
clc
jmp
push
fstps
xchg
fisubrs
sub
dec
mov
jmp
js
hlt
int
jg
ret
xor
enter
fildll
shl
arpl
pop
aaa
fisubrl
clc
dec
xchg
movsl
mov
xchg
stc
pop
push
out
mov
add
aas
shlb
jecxz
bound
pop
daa
cltd
push
push
sub
inc
jnp
movsl
mov
sub
out
sbb
or
std
dec
mov
fs
iret
mov
cmp
sbb
insb
inc
es
sbb
and
dec
add
pop
dec
aam
pop
ret
repnz
pop
dec
out
cs
pop
fxch
cmpsl
pop
jne
repnz
stos
sub
stos
or
rclb
add
fnstsw
lea
int3
call
int3
daa
xor
test
mov
loopne
mov
lock
fdivrs
cs
xor
pop
or
jecxz
push
fistl
scas
imul
push
mov
out
aas
pop
pop
data16
lock
push
jmp
repz
lods
sahf
add
das
les
xor
adc
rcl
add
push
mov
xchg
iret
ficomps
adc
scas
into
stos
popw
mov
sub
test
xor
ja
in
daa
cmc
inc
xor
sbb
or
movsb
lods
jecxz
cld
scas
addr16
push
fcompl
scas
jno
pop
aad
xor
filds
jnp
sbb
pop
out
sbb
lock
push
ret
stc
jge
adc
adc
add
jp
out
test
jns
popa
dec
add
fisttpll
movsb
mov
cmp
rcr
clc
mov
gs
cwtl
sub
pop
add
out
decb
or
and
loopne
jno
cmpsb
xchg
test
jl
or
pop
mov
mov
outsb
inc
cmp
mov
xchg
fidivl
loope
aas
std
test
repnz
cltd
mov
fcomps
stos
push
pop
mov
sti
shl
je
or
or
lods
and
icebp
rolb
or
adc
add
mov
mov
push
push
inc
xchg
jae
mov
sub
sbb
dec
inc
inc
mov
jl
and
mov
jecxz
in
or
pop
pusha
xor
out
add
inc
call
idivb
lret
lcall
xorl
inc
or
nopl
in
add
in
inc
add
jne
adcb
out
xchg
into
jecxz
shrl
sbb
cmp
or
test
pop
mov
xlat
inc
imul
mov
data16
loop
mov
pop
pop
ss
pop
sarb
sbb
dec
lds
sbb
es
pop
add
jge
add
aad
add
mov
pop
sbb
test
mov
rclb
jbe
push
push
cmp
and
push
shll
add
pushf
jbe
add
mov
popf
mov
fdivs
out
cmp
mov
lods
dec
jbe
cmp
mov
bound
jp
test
inc
dec
repnz
call
or
out
xchg
js
inc
dec
pop
out
mov
pop
or
mov
push
mov
cmp
jge
xor
cmpsb
or
lret
pop
add
mov
lcall
dec
dec
add
fnstcw
add
xlat
xor
jecxz
add
jns
fdivl
add
mov
test
xor
lahf
sub
add
lea
call
scas
push
into
cs
inc
subl
inc
mov
xchg
sbb
pop
inc
and
push
cmp
repz
mov
addr16
call
scas
or
push
jecxz
imul
or
in
add
push
mov
sarb
dec
cmp
cmp
xchg
inc
inc
pop
mov
cs
or
sbb
ja
test
aas
gs
and
jmp
mov
in
mulb
mov
add
sbb
mov
lcall
ljmp
push
and
leave
in
inc
stos
pop
jno
lods
and
stos
jno
add
mov
lcall
jnp
cmp
imul
adc
inc
cmp
pop
je
mov
clc
in
xchg
cmpsl
jno
fdivr
add
sub
add
insb
xor
adc
dec
mov
scas
jge
sti
testb
cmp
aas
jg
shl
aam
cmp
hlt
adc
lret
rcrb
dec
xchg
or
aaa
xchg
ljmp
stc
fs
outsb
in
and
xchg
mov
inc
jbe
jo
popf
int
sbb
incb
sahf
cmpsb
push
cmp
sbb
out
pop
pop
sarl
jo
push
ss
pop
std
mov
mov
push
inc
or
lds
test
adc
inc
mov
or
add
inc
pusha
sbb
sub
cmpsb
test
sbb
and
add
add
or
pop
es
push
mov
xchg
sbb
dec
sbb
xchg
pop
ret
cmp
aaa
pavgb
xchg
call
test
ja
mov
fndisi(8087
mov
or
adc
xchg
or
aaa
pop
lods
rcl
cli
mov
pop
push
inc
xchg
cmp
sbb
fwait
xchg
out
adc
xchg
sti
jne
mov
movsb
imul
test
pop
jnp
push
stos
mov
sub
jle
xchg
xchg
movsb
hlt
and
int3
cmpsl
insl
mov
lock
mov
mov
push
and
or
push
loope
sar
mov
push
mov
fiaddl
adc
and
fwait
jmp
adc
cs
out
jp
push
fs
pusha
out
cmpsl
push
cld
inc
iret
and
xchg
push
nop
movsl
aaa
push
arpl
loopne
push
dec
test
mov
pop
fs
int3
xor
xchg
add
pop
jb
sahf
pop
push
cmp
pop
xor
sbb
add
sbb
dec
jl
adc
xor
or
pop
or
outsl
out
dec
movsb
and
dec
xor
jno
cmc
data16
mov
out
int
push
lahf
fdivl
fmull
fisubs
and
ds
push
jo
shll
mov
adc
add
movsb
outsl
xor
mov
ficoms
sub
out
add
cmp
inc
pop
scas
sub
ret
lret
loope
adc
mov
dec
iret
popa
lcall
sub
sar
cs
in
mov
xchg
cli
push
xor
push
jg
divb
lcall
mov
popa
inc
cmp
xchg
ja
mov
inc
cmp
xor
imul
mov
mov
aaa
repnz
mov
push
xor
enter
out
cmpsl
cmc
jnp
pop
cmpsb
inc
or
jae
add
cmp
or
or
add
mov
repnz
push
out
xchg
inc
jl
pop
int3
and
sub
sub
cmp
cld
lcall
pop
sahf
movsb
popa
xchg
nopl
std
pop
inc
jmp
sub
lea
dec
jb
fistpll
jg
scas
or
shlb
lock
movsl
dec
mov
pop
mov
lcall
cmp
push
mov
or
mov
insl
mov
insl
fwait
add
call
mov
repz
push
test
cmp
loopne
cmp
out
inc
push
xchg
inc
mull
repz
jg
icebp
scas
dec
cmp
pusha
loop
xor
stos
dec
pusha
call
jbe
shrl
lock
sub
push
cmpsb
cmp
or
movsl
in
adc
mov
mov
pop
adc
push
xchg
mov
inc
arpl
mov
xor
dec
rcrl
add
xchg
mov
sahf
xchg
add
inc
lods
bound
jnp
stos
adc
adc
sar
xchg
int
int
rorb
pop
ja
gs
iret
imul
mov
insl
pop
in
jl
dec
dec
mov
inc
push
das
rol
and
pop
add
cmp
xchg
lcall
sbb
and
pop
pushf
adc
pause
aas
xor
jo
decb
push
push
out
and
jp
arpl
pop
loopw
dec
shll
mov
xchg
push
xlat
sub
inc
cmp
and
sub
lea
je
cmpsl
cltd
mov
repz
pop
xchg
cmp
sbb
test
mov
sub
es
cmp
loope
mov
xchg
pop
mov
mov
xor
xor
in
hlt
mov
stc
data16
ja
add
add
call
ret
xchg
lods
dec
xchg
add
adc
out
xor
mov
lock
ds
jp
es
push
adc
scas
xchg
mov
lds
dec
out
or
xor
call
mov
pop
popf
xlat
mov
push
ret
cmp
fildl
ljmp
xor
in
and
fdivs
sbb
sbb
add
sub
mov
xor
loop
xchg
pop
stos
lock
ret
add
dec
add
cmp
dec
and
add
jl
leave
js
push
push
jp
xor
cmp
mov
lret
cmp
cmp
inc
push
adc
rolb
or
repnz
imul
mov
sbb
dec
xor
add
sbb
jnp
and
and
cmc
inc
dec
pop
inc
mov
sub
pushf
dec
insl
aas
jb
mov
dec
dec
xor
push
int3
movsb
ds
inc
sbb
add
jmp
jmp
xchg
inc
cmp
gs
jns
popl
icebp
xchg
adc
inc
sub
out
js
aaa
bound
out
xor
pop
jl
mov
fsubl
cmp
stc
push
or
dec
sbb
insl
pop
scas
jmp
pop
or
xor
xchg
dec
jp
sbb
xchg
and
aam
xchg
adc
andl
jmp
dec
xchg
mov
cmpsb
jnp
inc
pop
nop
clc
pop
out
dec
jbe
es
sbb
sub
lret
fcmovnb
int3
ss
loopne
aam
bound
inc
scas
sti
jns
stc
ret
addr16
leave
sbb
mov
leave
cmp
scas
lahf
cmp
mov
mov
nop
fdivs
cli
rol
sbbl
adc
inc
xor
imul
cltd
rcrl
push
and
push
xor
test
mov
loopne
and
sar
xlat
fidivs
shrb
inc
jl
cmp
les
mov
inc
sub
pop
cltd
lods
pop
mov
adc
dec
mov
sub
loopne
enter
pop
sbb
mov
loop
inc
push
push
cltd
fwait
xchg
jns
mov
xchg
sub
jae
cmp
shlb
xchg
mov
pop
push
int3
int
scas
subb
dec
mov
push
std
pop
xchg
mov
fildl
jg
daa
sbb
js
enter
or
mov
pop
inc
por
add
jo
inc
and
cmp
mov
xchg
mov
lods
lods
pop
adc
popf
les
leave
dec
xchg
fcmovnb
subl
and
sub
iret
jle
pop
push
mov
lds
and
dec
and
push
jp
ljmp
or
push
js
lret
cmp
pop
sub
lcall
imul
je
imul
and
nop
adc
arpl
jp
mov
test
push
sub
jbe,pn
pop
and
dec
adc
xor
mov
pavgw
mov
ja
ret
loop
mov
aam
sub
sbb
pop
adc
test
jo
or
js
dec
rcl
fcompl
out
push
xor
inc
jecxz
arpl
ja
jle
jbe
sahf
stos
je
push
nop
ljmp
shl
lcall
lahf
rclb
pop
jecxz
fwait
mov
jge
sbb
imul
jbe
enter
push
sbb
jle
mov
jle
or
xchg
cmp
fucomip
mov
ja
fwait
jbe
fdivs
xchg
push
sahf
inc
outsl
sar
mov
adc
mov
jo
mov
insb
inc
sub
push
add
mov
mov
mov
sarb
nop
jo
push
hlt
in
in
fisubrs
push
push
and
push
pop
jl
cmpsl
repz
lock
push
stos
pop
clc
push
push
addr16
xchg
in
xchg
and
or
add
repz
inc
dec
adc
pusha
sub
jecxz
jne
jg
sbb
into
or
mov
fwait
mov
or
add
fimuls
stos
sub
add
add
mov
mov
push
sahf
push
jbe
movsl
ds
inc
sbb
repnz
sub
icebp
cmpsb
mov
cli
test
pop
mov
jmp
jo
sahf
jae
jle
mov
fisubrl
scas
cmp
dec
mov
jns
adc
xchg
rcrl
cmc
push
cmc
mov
mov
stc
jmp
jmp
rcr
data16
mov
scas
loopne
lods
ds
mov
sbb
lds
pusha
test
js
push
inc
clc
cltd
js
push
and
cmpsb
dec
pop
sbb
es
ss
adc
in
mov
push
mov
in
popa
dec
pop
mov
fpatan
fwait
sbb
jge
inc
fs
adc
call
mov
and
fmuls
inc
lock
add
xchg
pop
or
push
jmp
in
ret
push
xor
loopne
push
les
dec
add
jg
lods
imul
add
mov
lods
xchg
fsub
js
stos
dec
fwait
das
call
clc
addr16
mov
pop
test
call
cmpsl
fwait
or
inc
jecxz
mov
pushf
mov
shll
pop
push
rcrb
lods
lret
leave
push
sub
dec
add
mov
pusha
sbb
lock
jno
pop
dec
dec
out
shrb
call
in
adc
push
test
mov
mov
arpl
jmp
fwait
pop
mov
pop
aam
xchg
mov
sub
xor
nop
pushf
outsl
pop
add
cmp
pop
iret
mov
jmp
repz
sub
jecxz
mov
imul
inc
fidivs
adc
mov
mov
mov
or
pop
ret
xor
and
shlb
push
push
and
push
movsl
repnz
jg
aaa
stos
cwtl
nop
pusha
jb
mov
sbb
or
gs
in
das
mov
out
out
adc
lahf
call
push
sub
bound
mov
cmp
inc
xchg
push
pop
outsb
inc
stc
adc
rcrl
sbb
aas
or
in
insl
cmpsb
cmp
or
or
mov
into
xchg
inc
pop
push
xchg
loopne
push
repnz
cmpsl
ret
and
xchg
fcoms
xchg
mov
mov
adcl
pop
iret
sub
out
jg
mov
out
cs
sub
inc
gs
int3
or
cli
call
in
scas
fldt
movsl
or
cmp
inc
pop
test
into
pop
push
loope
push
and
out
test
push
ja
js
sbb
xchg
adc
int
sbb
sub
jmp
jle
lret
sub
mull
lret
mov
in
fmuls
mov
jno
or
xchg
mov
xor
and
inc
jno
sub
inc
sti
dec
andl
or
dec
mov
dec
ljmp
pop
movq
in
pop
int
and
and
fdivrs
stos
imul
pushf
push
js
jb
push
rorb
hlt
jle
and
inc
dec
cmc
add
test
les
in
xchg
lret
sub
fprem
pushl
outsb
mov
sbb
orl
mov
cmp
fs
sbb
call
pop
or
sti
mov
leave
sbb
inc
dec
int
pop
dec
mov
fucomip
sbb
mov
into
out
jne
outsl
fists
les
cmpsl
pusha
ss
loope
jmp
xor
arpl
loope
scas
fwait
push
or
sti
push
jge
inc
leave
testl
movsl
xchg
repnz
aad
cmpsl
cmp
imul
bound
lods
in
dec
dec
into
jo
jmp
pop
fwait
fs
outsl
pop
sahf
pop
lea
push
adcl
sub
add
mov
leave
adc
jge
lret
pop
cwtl
xor
ja
test
ror
mov
push
int
jo
or
jle
bound
loopne
mov
cmc
dec
sub
add
fs
daa
ja
mov
adc
pop
xlat
idiv
out
daa
cmp
cmp
xor
les
in
xor
loopne
movsb
sti
dec
mov
int
cmp
scas
pop
fsubrs
xchg
cld
movsb
and
mov
mov
lahf
ret
in
jg
xchg
sbb
aam
fstps
pop
test
ds
xchg
sub
add
mov
fwait
cwtl
repz
mov
stc
xchg
rcl
mov
je
fwait
or
out
sarb
mov
lds
lods
cmpsb
dec
jae
sub
flds
push
and
outsb
pop
inc
xchg
test
add
ficompl
add
stos
incb
fs
sbb
mov
mov
repnz
inc
push
sahf
ja
jns
sub
mov
or
push
imul
inc
rcr
xchg
lret
jp
sub
or
pop
mov
pop
fmull
mov
xchg
sub
inc
mov
cmc
mov
sub
imul
or
sub
mov
test
lahf
cmp
jle
jo
push
pop
push
cmp
imul
and
adc
js
xor
out
mov
fnstsw
xacquire
lea
pop
sbb
mov
lcall
fiadds
inc
cltd
adc
jb
add
frstor
scas
mov
xorb
push
lahf
stc
jp
ret
xorl
sbbb
jge
repz
leave
aas
xlat
cwtl
or
jmp
insl
clc
or
push
cmp
daa
pop
mov
fwait
mov
repnz
iret
out
pop
pop
ljmp
xchg
xchg
pop
xchg
push
roll
lds
pop
testb
out
mov
push
inc
rcl
inc
fisubs
cmpsl
shll
out
and
inc
cwtl
inc
cmp
jb
adc
cmc
aam
push
outsl
inc
jne
pop
call
mov
jne
fildll
ja
imul
mov
sub
adc
out
xchg
pop
clc
popa
pop
sbb
cmpsb
jne
sbb
sub
addb
jae
pushf
mov
inc
call
cmpb
rolb
and
jp
sbb
lcall
movsb
or
mov
in
xchg
sbb
lahf
dec
xchg
lcall
scas
adc
mov
inc
out
out
ret
mov
or
or
adc
gs
pop
and
inc
push
mov
pushf
fidivrs
call
in
cld
cmpsb
adc
es
sarb
ret
mov
add
fcmovbe
bound
pop
cmpsl
sti
in
xorb
push
sti
fsubr
fcoml
or
and
xchg
pop
mov
iret
fwait
sahf
jecxz
fistpl
pop
jecxz
test
aam
ja
ficomps
test
pop
or
pop
cmc
data16
jp
or
xor
sbb
push
push
pop
push
ljmp
xchg
imul
outsb
in
pop
adc
xchg
out
mov
push
push
sahf
dec
leave
shl
outsl
mov
insl
fisubrl
les
lods
sahf
dec
xlat
addl
add
cwtl
daa
out
stos
sub
lods
inc
pusha
je
dec
or
mov
jle
cmpsb
fwait
jmp
jmp
pop
fildl
mov
pushl
adc
std
hlt
std
xchg
mov
mov
adc
pop
stos
inc
je
push
dec
pop
push
push
addb
jae
xor
hlt
add
jle
adc
mov
mov
xchg
or
xchg
pop
pusha
pop
mov
clc
mov
add
jno
push
jecxz
int
inc
cmp
rcrl
fstpl
adc
xchg
cmpsb
insl
xchg
add
andb
popf
outsb
testl
int3
cld
scas
inc
push
repnz
adc
leave
cli
cmpsl
sarb
inc
testb
ds
xchg
mov
xor
clc
outsb
dec
or
insb
or
dec
je
std
inc
or
push
dec
push
lock
sbb
repz
leave
enter
cmc
push
lcall
insl
and
xchg
inc
and
push
dec
push
mov
or
add
inc
add
repz
lret
fisubl
push
cmp
adc
jmp
pop
testl
mov
adc
sub
fwait
mov
add
rcrl
das
lret
pop
imul
out
cmp
adc
ret
sbb
xchg
adc
adc
cs
xchg
repnz
frstor
jns
sti
or
orl
hlt
aas
jo
movsb
adc
aam
ds
fists
lret
push
ljmp
jo
rol
in
or
mov
sbb
fsubl
xor
pop
mov
xchg
mov
dec
leave
out
inc
inc
jmp
arpl
aad
xchg
cld
pushf
cmpsl
adc
popa
push
lods
mov
mov
mov
das
ljmp
pushl
insl
sub
add
push
jge
sbb
jmp
fidivs
sub
mov
aad
or
stos
jle
adcl
lods
aam
sahf
lods
push
mov
mov
cmp
jo
subb
fisubl
in
and
xor
inc
lahf
std
sbb
pushf
daa
fisubrl
lret
shl
pusha
rcll
mov
mov
ds
pop
cmp
add
cld
call
lret
mov
out
mov
and
sbb
cmp
adc
dec
sbb
inc
daa
xor
and
vpunpckhwd
sub
shll
push
je
or
mov
sti
scas
loopne
jmp
jae
stos
test
fcompl
jne
add
sub
mov
je
push
cli
testb
leave
in
push
sarb
adc
pop
jp
test
lret
add
stos
pop
daa
mov
sbb
jo
scas
or
jns
push
xchg
xor
int
clc
jb
lods
push
xchg
aam
fidivrs
push
dec
inc
adc
push
push
outsl
rclb
addr16
int3
jp
or
int
add
mov
dec
scas
stos
sbb
sbb
or
imul
or
stos
and
xor
push
shrl
dec
in
dec
repz
mov
add
jmp
sub
mov
fwait
imul
test
gs
push
addb
ret
mov
xor
mov
push
xorb
mov
mov
cmpsl
mov
loop
cmpsb
dec
jmp
jo
sbb
das
inc
jo
sub
outsl
pop
dec
mov
cmp
push
and
cwtl
add
cmpsl
iret
imul
aaa
call
mov
icebp
xchg
loopne
dec
mov
lods
inc
bound
rcl
ret
jbe
push
push
out
in
adc
scas
dec
imul
fisttps
ja
call
mulb
add
and
fisubrl
sti
lret
fstpt
mov
imul
inc
loope
jbe
dec
inc
cld
xchg
xor
pop
movsb
adc
leave
je
xchg
shl
out
adc
inc
fprem
cmp
xchg
call
pop
dec
fs
lret
fcmovu
movsl
gs
dec
aaa
in
and
xchg
jg
mov
pop
xchg
push
sbb
dec
loop
jno
inc
filds
mov
jbe
and
cmp
stc
repnz
sbb
mov
lahf
xchg
adc
in
jns
dec
sbb
lahf
test
std
push
fmul
sbbb
mov
mov
stos
divb
push
or
sbb
or
in
dec
sbb
fildll
jnp
lds
push
jb
ficomps
mov
pop
pusha
sbb
push
pop
mov
rclb
add
ljmp
inc
jae
icebp
ja
ret
add
test
testl
cmpsl
add
fdivl
mov
jo
push
in
xchg
rcrl
stos
sub
sbb
mov
ret
sbb
sub
inc
dec
xchg
cmc
rol
nop
adc
sub
fwait
or
in
push
popf
divb
sbb
or
cs
scas
divb
mov
ds
cmpsb
sbb
add
repnz
fldl
cmp
unpcklps
add
add
js
out
fistl
imul
lods
int3
loope
in
xlat
xchg
pop
or
inc
dec
mov
leave
sbb
test
aam
push
cli
dec
bnd
dec
or
iret
pop
jge
mov
sub
sbb
mov
jmp
popa
pop
jae
call
pop
popa
insl
bound
stos
and
or
xor
sbb
ss
aad
mov
mov
pushf
ret
mov
out
adc
push
adc
jl
fwait
je
stc
xor
xchg
cmp
xlat
push
cmp
fcoml
sbb
and
add
fildl
mov
xchg
cmc
mov
push
pop
icebp
rcr
sti
jge
js
add
jge
mov
push
mov
dec
sar
nop
dec
cmpsl
mov
xor
data16
shlb
xor
pushl
inc
fsubl
push
aad
dec
xchg
jne
dec
cmp
mov
lret
out
data16
loopne
stc
xor
and
ljmp
daa
inc
stos
push
jns
sahf
push
mov
cmpsl
mov
data16
cli
je
pop
pushl
cld
and
sub
js
mov
mov
cmp
adc
lods
mov
test
stos
and
enter
addr16
inc
ljmp
mov
mov
jmp
dec
mov
dec
cmpb
lret
xorps
xor
sahf
in
scas
lret
in
or
mov
mov
xchg
outsl
repnz
bound
xchg
add
mov
ljmp
add
fwait
call
cs
lret
es
push
fcmovne
xchg
dec
out
shrl
stos
nop
xchg
test
fistps
adc
cwtl
mov
out
shr
sahf
dec
sbb
popa
xchg
inc
push
xor
into
mov
pop
xor
xor
jo
pop
add
jcxz
and
or
push
or
je
or
adc
push
mov
nop
xchg
dec
js
dec
jle
push
les
push
and
ret
pop
lahf
lret
push
push
pop
bound
shrl
cmp
ja
aad
xor
sub
add
sbb
inc
cltd
pop
cltd
movsl
daa
scas
in
mov
inc
sbb
cmp
mov
push
mov
cmp
pushf
adc
lret
add
pushf
scas
adc
test
cmp
mov
aas
adc
inc
jmp
jp
loop
jns
sub
mov
dec
mov
mov
mov
outsl
cmp
adcb
xchg
mov
dec
mov
and
push
add
lods
das
jmp
jl
inc
and
sbb
daa
push
dec
xchg
mov
shl
int
xchg
dec
icebp
inc
push
pushf
sbb
jg
fistps
cmp
cmpsl
in
fs
test
xor
add
in
xchg
xchg
test
mov
stc
pop
addl
imul
sbb
push
dec
pusha
repnz
mov
std
mov
mov
inc
xor
or
pop
nop
test
add
divb
or
call
test
std
and
mov
clc
cltd
xchg
cmpsb
push
pop
cmpsb
setb
mov
shrb
and
outsl
ret
lock
cmpsb
sahf
movaps
xchg
xor
cmp
cwtl
insl
mov
mov
xor
ljmp
pop
push
sub
scas
mov
int3
mov
aaa
test
mov
inc
jle
sahf
mov
outsl
inc
notl
shlb
sub
clc
lret
out
aaa
mov
push
outsb
test
adc
sbb
add
lret
arpl
xchg
pop
mov
sahf
mov
fwait
or
aas
rcrl
rcrl
lea
movsl
out
ja
and
daa
jne
jge
repz
mov
mov
push
cmp
dec
sbb
lret
scas
cltd
sbb
std
cmp
xor
lret
sbb
fadds
ficoml
popf
add
ret
or
in
int3
cmp
dec
or
jae
or
push
cltd
jmp
fisubrs
mov
leave
add
stos
add
std
add
icebp
out
dec
sbb
mov
popf
inc
push
out
in
repz
das
movsb
clc
adc
pop
xchg
xor
fdivrs
ret
fisttpll
bnd
lods
rolb
and
add
pop
jle
or
ja
pushf
adc
mov
in
das
mov
pushf
or
in
xchg
stos
sahf
push
arpl
and
push
ficompl
int
and
dec
pop
aad
inc
mov
jg
sbb
dec
and
cmovle
scas
cmpsl
pop
ljmp
and
rcl
out
mov
mov
or
push
hlt
mov
in
xchg
fs
cmp
cmpsb
call
sub
imul
test
fldcw
and
jg
jb
push
lahf
imul
dec
aad
sub
test
fwait
and
loopne
divb
xchg
fldl
and
push
sub
xor
mov
ja
mov
and
sbb
inc
jns
lcall
xchg
jae
lods
push
and
sub
xor
add
push
test
sub
pusha
fiaddl
sub
or
incb
fimull
fiadds
and
in
test
scas
jb
mov
inc
inc
xor
lods
and
scas
fwait
cmpl
mov
mov
mov
in
cmp
jns
inc
test
pusha
punpckhwd
mov
jg
fs
bound
movsb
xchg
and
rorb
movsl
jne
mov
xchg
mull
mov
ret
clc
xchg
xor
dec
cld
loope
sub
cmpsb
es
cmp
in
fadd
mov
movsl
in
jge
push
dec
sub
scas
inc
sub
out
mov
inc
call
sbb
dec
lock
xor
leave
dec
cmpsl
shl
cmp
add
adc
cmpsl
ret
mov
pop
push
xchg
lcall
xchg
mov
or
notl
aas
sbb
pop
mov
add
adc
out
push
mov
and
fstpl
movb
pop
mov
xchg
jge
movb
test
movsl
cs
mov
nop
cmp
addr16
pop
xor
in
push
imul
scas
mov
add
fsub
push
pop
cmp
cltd
xor
push
stos
xor
sub
dec
and
add
stos
sbbl
sbbl
xorl
add
out
cmp
rorl
jmp
xor
mov
jns
insb
push
dec
push
mov
ret
test
subb
xchg
xor
stos
xor
sub
ja
push
cltd
and
daa
pop
cmpsl
ljmp
sbb
jp
lahf
push
push
dec
add
mov
xchg
std
or
sub
jo
addr16
scas
mov
push
add
repz
mov
push
pop
in
pop
mov
outsb
arpl
ds
adc
in
xor
push
arpl
popf
aam
idivb
mov
aam
insl
dec
fimull
mov
pushl
daa
adc
rcll
mov
fldl
les
adc
ja
enter
push
mov
jne
mov
adcl
xchg
and
mov
pushf
mov
popf
scas
adc
icebp
lea
and
mov
pop
xchg
jp
or
and
jno
pop
lret
inc
repz
cmc
mov
adc
icebp
xor
mov
mov
stos
out
dec
mov
inc
jecxz
in
push
sbbl
sbb
pop
pop
push
xor
cs
inc
inc
ljmp
pop
pop
jnp
mov
xchg
fldt
push
shlb
cmp
sub
scas
sub
test
and
xchg
dec
jae
jp
test
add
mov
dec
jb
jl
sbbl
outsl
cltd
out
add
dec
mov
ds
daa
or
sbb
addb
sarb
scas
sarb
data16
addb
mov
pusha
pop
aaa
pop
and
dec
out
add
std
xlat
sub
add
mov
shll
and
scas
adc
jecxz
and
xor
pop
hlt
fildl
cli
sub
scas
je
out
aad
inc
dec
sbb
xor
dec
and
out
adc
test
mov
sub
sbb
sub
cwtl
shrl
xchg
pop
daa
jae
aaa
lods
cld
jnp
sub
inc
jmp
loop
mov
lahf
sbb
push
push
repz
push
shll
fists
dec
test
test
aad
lods
cmc
push
ss
testl
sbb
bound
mov
call
cld
pinsrw
cmpsb
push
and
aaa
pop
push
jbe
push
mov
outsl
inc
mov
pop
xchg
leave
rcr
loopne
jge
and
mov
add
cmp
push
fsubl
mov
pop
in
movsl
push
mov
inc
jmp
lret
dec
inc
sub
stos
add
mov
and
cmp
jg
aaa
lods
dec
cmp
adc
loopne
push
cld
adc
xchg
fistpl
or
push
data16
adc
dec
mov
cli
sbb
pop
add
xor
adc
jg
call
es
mov
dec
ret
push
sbb
test
jo
lret
jnp
test
xchg
lret
cmpb
or
sbb
push
sub
pop
fidivs
mov
cmpsl
rolb
cli
push
mov
jmp
loopne
fmuls
sbb
fwait
jnp
jl
sub
lods
in
popf
cmpsb
dec
lea
xor
push
or
sbb
push
arpl
outsl
hlt
notb
inc
mov
xor
nop
mov
xor
mov
andb
xchg
pop
call
aaa
pop
bound
test
cmp
loope
lds
jp
sbb
por
ss
stc
or
mov
or
xor
dec
out
scas
adc
arpl
jecxz
dec
aam
cli
ds
fxch
stos
dec
iret
mov
arpl
push
push
and
out
ret
fwait
ljmp
cmp
fucom
mov
and
fsubrl
inc
lods
mov
mov
dec
loope
sti
popl
xchg
outsb
ret
fstps
pop
mov
pop
push
pusha
fs
rcll
lods
pusha
or
sti
int3
add
push
mov
ret
adc
fimull
in
push
jnp
or
dec
fdivr
not
pop
mov
shlb
jmp
pop
mov
xor
cmp
sub
fildll
sub
sub
insl
lret
daa
mov
imul
xchg
push
push
repz
mov
lcall
inc
test
and
idivl
push
loopne
mov
cwtl
shl
gs
gs
cmp
test
mov
andb
xlat
or
mov
sub
jb
mov
sti
fiadds
pop
push
aas
lds
mov
xchg
mov
sahf
cmc
sbb
push
filds
ret
pop
lds
mov
mov
sub
psllq
push
pop
pop
push
or
mov
xchg
inc
in
out
sbb
add
movsb
lods
cmp
clc
jl
out
lock
add
std
in
mov
fldt
dec
stos
rclb
fwait
shlb
jl
push
iret
enter
rcr
in
inc
jo
push
shrl
rolb
jno
sub
enter
fcompl
clc
sbb
xchg
test
in
stos
mov
into
xor
bound
stc
lret
mov
inc
mov
insl
popa
mull
out
push
cmp
xor
into
jno
hlt
stos
pop
push
adc
ds
repz
jno
push
pop
cmp
loopne
addr16
mov
push
mov
xor
adc
rcrb
loope
and
test
lods
inc
call
aam
out
and
sub
xchg
movsb
or
outsb
push
inc
inc
jmp
scas
out
jmp
adc
ret
mov
add
jmp
pop
rcll
mov
vpacksswb
sahf
fsubrs
mov
jge
loopne
pusha
mov
xorw
sbb
sbb
mov
sti
push
lods
add
xor
mov
mov
add
fists
fisubrs
sub
lahf
adc
lahf
outsl
jb
lods
lret
push
dec
test
fdivrl
jo
js
pusha
jg
ret
ret
ljmp
movsb
push
jecxz
xor
mov
mov
and
sarl
ficoml
imul
xor
or
prefetch
movsl
in
test
jge
inc
stc
xchg
inc
aam
in
rorl
xlat
add
xchg
push
test
cld
int3
notb
mov
clc
adc
cwtl
push
or
jo
outsl
and
in
push
pushf
mov
fisubs
ja
jns
loope
test
push
fdivrs
aad
xchg
xor
xchg
add
aaa
test
and
mov
xor
aas
sub
and
ret
mov
test
addr16
sbb
add
fdivrl
test
lock
push
rorl
sub
stc
rcrl
out
in
sahf
or
jecxz
hlt
adc
mov
scas
pop
addr16
add
add
pop
add
push
cli
ss
mov
mov
clc
dec
mov
add
jbe
ss
lock
mov
ret
sbb
fstpt
sub
add
adc
xor
lds
sub
add
xor
call
and
fnsave
jge
mov
mov
push
nop
fidivrl
fcmovne
jp
aas
cmp
leave
sbb
and
js
inc
les
push
test
loopne
jb
out
xlat
sub
sbb
stos
xchg
sbb
dec
pop
rcrl
pop
addr16
loope
inc
mov
or
xor
mov
jmp
stos
les
loopne
fs
enter
movsb
or
pop
inc
aam
push
dec
mov
and
int3
pop
fisttpl
fnstcw
pushf
fimuls
sbb
into
adc
int3
or
aad
xor
mov
fldcw
jl
xor
fisttps
lret
lods
lods
xchg
xchg
jb
pop
in
daa
icebp
cmc
mov
outsl
and
mov
dec
aad
out
sbb
loopne
aas
push
repnz
repz
jge
test
dec
pushf
testl
mov
mov
xor
xchg
sbb
test
shrb
ds
loope
xchg
mov
xchg
rcrl
dec
mov
lcall
sbb
into
or
in
sarb
add
fwait
jo
and
adc
fnsave
pop
stos
movsl
repz
nop
movsb
add
xchg
mov
js
xlat
sarl
adc
ja
cmp
test
adc
xchg
jle
adc
lret
jge
or
out
xlat
xchg
in
sbb
fdivs
lock
xchg
add
inc
and
dec
gs
inc
fstl
cmp
mov
movsb
jno
sbb
jno
and
push
dec
mov
mov
pop
and
jb
push
cwtl
xchg
roll
jne
stc
psllw
sbb
pop
cmp
mov
cwtl
mov
mov
cmp
dec
inc
nop
dec
dec
int3
scas
mov
mov
jo
test
pop
pop
enter
cmp
jle
and
mov
sti
mov
scas
stc
push
push
shlb
push
cmpsl
pop
imul
mov
mov
push
ss
out
cmpsb
cld
or
sahf
jecxz
and
xor
lret
lret
sbb
lcall
pop
xor
jb
es
test
jno
push
sbb
shlb
insl
jnp
aas
repz
loopne
dec
in
xlat
mov
push
ffree
mov
mov
or
or
and
nop
adc
fnstcw
cli
jge
pop
mov
or
mov
bound
shl
cmp
test
add
pop
test
dec
mov
xor
adc
fistl
daa
push
sbb
ljmp
adc
fidivl
idivb
loop
popa
dec
lret
les
push
fbld
jge
iret
xchg
add
adc
aaa
xorl
pop
sbb
sub
push
shlb
add
jae
imulb
das
sub
and
and
add
popa
cmc
sbb
ret
cld
lea
mov
roll
cmp
xor
lret
jmp
out
dec
dec
int
aaa
pop
or
mov
pop
jns
cmpsl
add
outsl
sti
mov
out
mov
xor
popf
lret
and
mov
mov
idiv
psubusb
push
int3
jmp
push
aam
inc
jne
mov
ds
clc
popf
xchg
icebp
bound
pop
in
int
jno
in
mov
pop
scas
nop
jae
pushf
push
and
sub
push
adc
and
push
cltd
std
or
xchg
xor
or
push
mov
movsb
fldcw
incb
test
testb
inc
pop
mov
scas
mov
add
or
cmpb
or
inc
loop
adc
jne
mov
fisttps
xor
or
lahf
mov
and
pop
mov
mov
les
jo
jg
ret
mov
sbb
daa
cmp
pop
pop
std
xchg
daa
pop
addb
jo
inc
inc
inc
mov
adcb
pushf
syscall
test
pop
hlt
out
bound
incb
cmc
cwtl
cmp
adc
push
loop
scas
jno
mov
cltd
outsl
mov
movb
pushl
fcmovbe
push
jb
es
sub
mov
movsl
cs
notl
and
pop
pushf
jnp
xchg
leave
pop
aad
nop
pop
addr16
xchg
movsb
mov
inc
movsb
adc
mov
icebp
sub
mov
mov
rcrb
mov
icebp
movsl
dec
inc
push
cmp
sarl
lds
into
jae
jp
xchg
lods
sbb
push
jmp
mov
and
scas
int
xchg
lock
mov
inc
scas
dec
or
mov
mov
int
pop
nop
push
out
daa
mov
loopne
fwait
test
mov
xchg
or
pop
insl
rcll
fnstenv
mov
xchg
aas
stos
ja
xchg
ljmp
fld1
cmp
test
add
addb
divl
ret
inc
pushf
lods
negb
lea
and
jge
mov
pop
inc
sbb
mov
mov
fcomps
in
ljmp
ja
scas
jbe
aam
xor
push
sub
pop
jnp
and
inc
sbb
lahf
test
cwtl
xchg
and
test
imul
add
repnz
pusha
das
bound
out
mov
inc
es
mov
jmp
sbb
cs
xchg
imul
push
es
dec
jmp
pop
repnz
mov
xchg
sbb
rclb
xchg
mov
mov
adc
addr16
insl
ljmp
pusha
stos
insb
add
out
test
cmp
mov
sbb
dec
incb
decl
jecxz
lret
popa
cmc
mov
jmp
int3
popa
mov
sub
lcall
aad
dec
pop
sub
adc
enter
mov
loopne
sti
xor
inc
fisubs
xlat
in
jle
lret
or
std
shll
ja
rcl
fadds
leave
push
xor
add
push
mov
pop
jb
test
in
mov
sahf
flds
xchg
outsb
clc
aad
pop
loopne
stc
sahf
and
pushf
int3
adc
push
int3
aas
or
scas
cltd
mov
je
mov
jg
lock
add
xlat
bound
xchg
incl
sbb
imul
or
mov
jg
pop
sbb
jp
rcrl
xor
shrl
jae
dec
stc
jae
pusha
mov
dec
sbb
add
movl
push
call
out
push
xchg
rcr
mov
lahf
pop
cmp
mov
fsub
andl
inc
jae
repz
cmp
ficoms
rclb
arpl
aam
mov
adc
outsl
insb
push
and
std
sub
sub
aas
sbbb
aas
out
fsubs
add
in
shrb
xchg
test
add
jmp
push
sti
jne
push
cmpsb
mov
mov
das
mov
mov
xchg
bound
jb
inc
mov
xor
add
clc
test
fbstp
xchg
js
add
jae
push
jle
jg
xchg
mov
es
pusha
leave
int
lcall
xchg
jb
call
jmp
push
mov
ljmp
sub
jae
sub
pop
mov
pop
xor
adcl
out
out
push
je
lods
mov
subl
xor
iret
jmp
shll
fidivrl
inc
mov
test
push
xchg
iret
mov
insl
jo
sbb
jne
xchg
int
sbb
dec
cmp
dec
mov
inc
fcomps
pop
add
idivb
lock
data16
mov
popa
pop
jae
xor
jp
sub
imul
cmp
push
sbb
leave
lods
mov
out
sub
test
and
es
add
inc
or
call
adcb
inc
adc
sub
int
hlt
xor
cli
ja
clc
xor
xor
lgs
int
sbb
inc
ret
push
xchg
push
cmp
and
push
repz
push
and
jl
and
dec
mov
mov
mov
mov
mov
aad
fistps
jg
repnz
push
stos
push
ret
imul
call
popf
je
or
fisubrl
pop
fwait
jbe
xchg
inc
jmp
mov
jae
or
adc
mov
push
in
aam
lret
push
mov
jae
in
mov
adc
dec
lods
loopne
jo
je
faddl
xor
mov
pushw
aad
cmpsl
pop
popf
clc
xchg
xchg
stc
sbb
xchg
cmp
xor
ljmp
mov
xchg
lret
pop
push
mov
dec
call
xor
sub
jle
mov
test
jmp
dec
fdivrs
push
add
jmp
and
ret
adc
mov
jp
int3
repz
in
or
pop
sbb
cmpsl
mov
xchg
frstor
xchg
inc
cli
xor
jnp
adc
nopl
cmp
test
add
shll
mov
fwait
jno
mov
xchg
sub
loop
inc
and
cwtl
jbe
loope
push
cmpsl
dec
setnp
xchg
and
insl
add
adc
out
je
inc
ss
sbb
divb
flds
mov
or
dec
pop
adc
jb
leave
sub
mov
ss
insl
xor
and
add
ret
lods
pop
popa
hlt
adc
jmp
cmc
rcrl
mov
inc
mov
cmp
mov
xchg
sub
pop
nop
and
sbb
lock
ja
les
xchg
lock
ret
or
xor
fwait
dec
lods
inc
test
mov
xchg
in
pop
dec
fwait
movsb
fcoms
fwait
mov
icebp
lret
outsb
mov
pop
subb
sahf
fucomp
popf
sub
repnz
mov
dec
lahf
jnp
cli
iret
repnz
inc
xchg
dec
mov
mov
ja
shr
mov
cmp
mov
xchg
das
add
test
cmp
or
xchg
mov
inc
dec
clc
pop
adc
cmp
cmpsb
xlat
pop
mov
daa
popf
xchg
pop
pop
mov
shlb
adc
test
xchg
sub
and
jp
daa
pushf
cmp
sbb
insl
sub
lcall
add
inc
orl
xor
lods
inc
xor
add
aas
push
xor
push
aam
xorl
popa
cli
dec
add
adc
add
mov
add
movsl
and
ss
or
ret
repnz
int3
push
jge
mov
adc
pop
adc
test
sub
mov
sub
cmp
mov
xchg
loope
inc
das
sbb
stc
mov
mov
push
mov
cmp
lods
mov
std
push
push
enter
nop
test
icebp
in
fildl
mov
ja
add
data16
es
mov
idiv
jae
lds
in
stc
and
xchg
add
jno
ret
push
bnd
in
pop
loope
push
test
cltd
or
inc
dec
cltd
sub
js
sbb
cmc
clc
xchg
loope
mov
lcall
sub
xchg
push
fwait
dec
push
loopne
stc
jb
xchg
sbb
mov
iret
lcall
mov
test
sub
jns
rolb
fstps
xchg
jmp
pushf
aad
leave
inc
test
jg
pusha
cmp
imul
jle
dec
into
mov
xchg
inc
shrl
and
pushf
pop
add
scas
mov
mov
sub
jg
dec
pop
lea
jb
pop
lcall
stos
fisttps
jge
xor
cmp
xchg
in
inc
push
ds
je
sub
lods
push
push
outsb
pop
cmp
mov
sbb
lret
lahf
push
imul
xor
test
fildll
aad
and
imul
in
pop
fcmovne
mov
mov
cmp
inc
sbb
mov
out
inc
add
push
pop
pop
scas
lods
cwtl
repnz
pop
fdiv
scas
mov
orl
adc
lds
dec
jp
or
add
cmpsb
imul
shrl
les
cli
cli
mov
xchg
xchg
jo
sbb
cltd
pop
sub
repnz
pop
cltd
add
xor
pop
hlt
lcall
aam
hlt
jno
jnp
jge
out
pusha
mov
xchg
out
inc
out
leave
test
xchg
mov
repnz
adc
imul
inc
push
cli
fidivrs
cmp
xlat
into
mov
push
sub
aaa
jl
clc
jl
jns
xchg
addr16
loop
imul
cmpsl
jnp
add
fs
div
or
cli
mov
sti
cltd
pop
xor
xchg
jg
cmpsl
lret
mov
dec
pop
out
xchg
sub
jl
sbb
pop
adcl
scas
push
arpl
mov
jns
pop
xlat
add
push
mov
das
icebp
sub
gs
mov
leave
mov
icebp
xor
dec
mov
cli
jb
xlat
or
fyl2xp1
adc
nop
push
rcrb
sub
imul
ja
pusha
in
cmpb
imul
dec
jecxz
mov
call
sbb
rol
call
scas
cmp
sarl
arpl
mov
scas
mov
in
cmova
in
cmp
sbb
mov
jmp
mov
cmpsb
cwtl
pop
in
enter
je
cmpsb
sbb
xchg
cmp
mov
leave
stos
rcr
pop
in
loope
cmpsb
inc
fs
mov
mov
mov
xorb
fmul
or
mov
or
mov
aaa
xor
sti
rcll
sub
sbb
cmpsl
clc
jae
ret
and
xor
sbb
add
fimuls
jo
ja
lods
lahf
and
jle
cmpsl
adc
jg
fistl
leave
push
rol
pop
mov
out
cmp
mov
loopne
inc
out
lret
xor
setge
push
cmp
popa
push
add
call
stc
add
cs
xlat
adc
sub
xchg
and
and
sbb
xchg
popa
in
xor
and
shrb
dec
mov
push
andb
test
in
bound
lahf
mov
mov
popa
mov
mov
or
out
add
inc
dec
jae
jle
xchg
xchg
mov
clc
pop
xorl
inc
xlat
push
lods
pop
ror
fst
in
xor
xchg
mov
inc
fabs
dec
and
fs
aas
cmp
dec
dec
std
idivl
cmp
jecxz
es
xor
xchg
push
iret
jno
sbb
pop
dec
or
add
cmp
xchg
jp
push
movsb
mov
pusha
sti
sete
sub
pusha
out
int3
xchg
aaa
or
leave
gs
pusha
call
out
imul
clc
cwtl
push
jo
ret
or
cmp
push
bound
test
in
jmp
mov
xchg
sahf
dec
push
movl
fwait
pop
dec
jno
xchg
repnz
in
negb
mov
adc
dec
insb
dec
ret
mov
clc
daa
push
mov
rcrl
and
jno
test
sub
jecxz
push
loopne
xchg
cmc
adc
push
mov
pop
push
cmp
lods
fcoml
or
fnstenv
add
adcb
mov
hlt
out
js
insl
repz
jmp
sub
in
dec
add
pusha
cmp
and
sti
xchg
in
loop
sub
and
pop
sub
cmp
les
js
adc
ficoms
sar
jl
xchg
fcmove
sub
cmpsl
stos
pop
repz
lcall
jns
pop
js
jbe
ja
mov
out
jecxz
sbb
inc
xor
cwtl
xor
jl
mov
fistpll
stos
les
stc
mov
dec
mov
or
sub
sahf
mov
loopne
pop
or
ljmp
inc
or
lret
push
lret
leave
lds
jb
sub
push
lea
loopne
inc
mov
or
jae
jo
ficoml
repz
test
mov
test
jns
cmp
pop
jg
sbb
dec
outsb
cmpsl
xchg
mov
lret
xlat
and
pop
cld
aad
mov
adc
push
push
cmp
sarb
insb
test
int
inc
inc
dec
adc
lods
xlat
frstor
jp
repnz
cmp
jecxz
add
mov
scas
xchg
push
push
js
ret
ret
mov
xor
xchg
lret
adc
scas
fsubs
add
xor
xchg
test
hlt
dec
dec
repnz
loope
sub
inc
or
and
adc
iret
or
lret
ja
or
mov
cmp
mov
mov
jmp
push
jp
xchg
subl
je
repnz
mov
je
inc
ret
jno
ret
jnp
push
jp
dec
inc
cs
ret
sahf
cmpsl
cltd
pop
movl
stos
adc
dec
ret
pushl
adc
shlb
xchg
imul
or
dec
lret
fsts
js
in
mov
repz
pushl
cmc
test
cltd
aam
fistl
insl
pop
dec
pop
pop
rcll
jg
in
cmp
mov
das
mov
mov
pop
xchg
sahf
mov
xchg
inc
dec
sbb
inc
pop
mov
jmp
push
fndisi(8087
add
or
dec
sti
and
imul
jle
icebp
cmp
pop
xor
sahf
imulb
les
js
mov
xchg
add
daa
and
in
test
lods
fidivs
dec
pushf
xchg
adc
pop
cmpsl
push
mov
test
push
push
dec
shl
lods
jmp
sarb
mov
and
loope
inc
out
push
enter
jo
mov
jae
xchg
mov
xchg
adc
icebp
jl
movsl
jbe
sahf
add
stos
aaa
cmp
fstl
aad
sub
fidivrs
cmp
xlat
add
cmpsl
sbb
movsl
and
test
add
popf
mov
repnz
orb
and
js
xor
mov
popf
addr16
xchg
xchg
inc
data16
adc
mov
xchg
push
mov
je
jl
test
lahf
pushf
iret
inc
add
lcall
sbb
cld
arpl
jb
ljmp
pop
dec
dec
or
dec
mov
pop
jecxz
stos
dec
push
loope
popf
out
jg
out
ficoml
es
test
lods
mov
and
mov
jo
fisttpll
arpl
fnstcw
pushf
in
shll
push
int
shll
mov
mov
mov
or
xchg
sti
int
hlt
addr16
push
cld
mov
cltd
xchg
mov
lods
xchg
cmp
out
iret
push
popa
inc
testl
mov
mov
imul
mov
or
cmp
outsl
sub
sti
jmp
gs
add
aad
push
jge
inc
jl
push
in
outsl
faddl
shll
add
pusha
in
in
aaa
or
sar
lahf
mov
jne
in
pop
cmc
aas
in
cltd
cmpsl
ja
pop
divb
testl
cmp
sbb
jno
xchg
fcompl
xor
lock
rolb
jmp
int3
lods
lret
movsb
adc
and
jl
rcll
mov
adc
imul
mov
mov
stc
shr
jnp
inc
cwtl
jmp
aas
je
xchg
jmp
les
add
pop
cmp
xchg
and
outsb
out
icebp
add
or
jmp
ret
nop
clc
andb
lods
cmp
inc
movsl
sti
dec
add
das
adcl
aam
sub
out
adc
pushf
mov
dec
repnz
fwait
inc
adc
xor
mov
int
inc
outsl
in
xchg
add
jl
fmul
popf
fcomi
fs
xor
int3
decb
fisubrs
daa
subl
xor
xor
negb
leave
aam
popa
mov
cmpsb
iret
out
dec
push
xor
sub
mov
jl
ljmp
das
cmp
and
test
pushf
dec
out
dec
pop
clc
mov
xchg
or
push
ret
repnz
mov
in
out
mov
mov
sub
test
sar
xchg
flds
mov
cmp
sahf
xchg
jl
and
and
sti
dec
fidivs
pop
mov
xor
or
add
into
pop
mov
mov
movsb
dec
in
cwtl
xor
scas
sahf
fs
addr16
dec
mov
xchg
popf
add
push
push
int
add
fsub
add
mov
mov
shr
sarb
sub
push
out
outsl
out
inc
rorb
outsl
out
insl
push
bound
mov
daa
ljmp
mov
aaa
lcall
sbb
idivb
lahf
xorb
pusha
adc
and
std
pusha
and
lds
jge
xor
sti
fisttpll
loop
sbb
xchg
adc
sbb
sbb
lods
fstl
xor
pop
add
out
mov
and
pop
jo
jbe
lcall
test
ret
lock
imul
mov
cli
je
cmc
mov
lret
xchg
divl
jb
sbb
les
leave
stos
dec
ror
out
into
es
stos
pop
push
aas
jne
ud0
adc
decb
push
fisubl
lcall
test
xchg
adc
jo
xchg
dec
ret
mov
jae
sub
mov
popa
lret
pop
add
in
add
neg
pop
sbb
sbb
mov
scas
inc
test
push
and
jb
leave
adc
jne
les
dec
inc
cltd
jmp
fmull
pop
adc
ficoms
movsl
ret
sub
loopne
mulb
jecxz
add
inc
add
movsl
addb
sub
shrl
cmp
sbb
xchg
jl
mov
cmp
xchg
inc
adc
push
adc
adc
add
lock
lcall
pop
out
pop
jae
pushf
xor
outsb
pop
pop
dec
mov
sub
testb
push
push
repnz
inc
rorb
sub
or
inc
mov
sbb
loop
push
push
adc
and
xchg
sahf
inc
push
xchg
jmp
and
xor
inc
xchg
pop
cmp
mul
xchg
ror
fadds
mov
mov
dec
fildl
push
enter
xchg
sbb
mov
inc
pop
sbb
sub
in
cmpsb
push
jl
clc
aas
mov
fwait
add
push
pop
icebp
dec
xlat
rolb
cmp
cmpsl
pop
jmp
sub
ds
stos
push
xchg
mov
enter
inc
mov
and
sub
inc
cmp
cmp
addl
addr16
out
faddp
push
jp
cmp
add
outsb
xchg
lahf
in
or
inc
sub
scas
add
mov
mov
mov
mov
mov
cmpsl
cmpb
xor
cmp
rcrl
and
test
adc
stc
mov
enter
sub
push
add
inc
cltd
das
leave
js
popa
aas
add
cmpps
jmp
sub
out
sbb
std
fwait
jo
aas
into
inc
stc
push
mov
out
insb
pushf
dec
cmp
dec
cmpsb
sub
in
push
in
insl
jecxz
shl
push
or
mov
push
xor
xchg
adc
mov
fcoml
in
jnp
pop
leave
xchg
inc
pop
bound
in
mov
and
in
and
sub
inc
push
daa
or
mov
repz
or
mov
cmp
pushf
jmp
in
push
dec
test
push
out
jbe
and
mov
fisttps
add
xorb
push
sub
push
ss
shlb
mov
stos
lret
pop
push
adc
cmc
jns
rorb
mov
and
or
rcll
inc
loopne
and
jnp
mov
dec
inc
cmpsb
mov
int3
je
hlt
sbb
xlat
mov
xorl
enter
in
jge
fldcw
cmpsb
mov
xchg
pusha
stos
adc
ret
or
test
ja
pop
jge
and
aas
lea
or
mov
mov
test
cmc
mov
sub
rcrb
out
jnp
or
cmpl
clc
fcmovbe
and
lods
das
nop
daa
repz
repz
mov
jne
icebp
cltd
sub
cmc
pop
mov
dec
lret
call
bnd
cmp
mov
push
push
lods
inc
call
and
loope
xlat
push
cmp
js
pop
or
cmpsl
lock
add
mov
lret
sti
adcl
jo
int
mov
dec
adc
lahf
sahf
cmp
mov
pop
repz
mov
and
xchg
data16
and
and
xchg
stos
subb
mov
inc
cli
jnp
jecxz
push
aas
sbb
fs
xchg
das
clc
and
lahf
in
mov
mov
jp
lds
test
xor
cmp
xchg
pop
sbb
ret
inc
add
and
dec
and
xor
sub
xchg
mov
out
lcall
xchg
arpl
rcll
loope
outsl
into
clc
pushf
jae
and
push
add
and
dec
stos
cmp
loope
jno
or
xchg
aaa
shll
loop
xor
das
sbb
ret
xor
push
pop
ret
dec
sbb
mov
mov
pushf
dec
and
xchg
lcall
adc
bound
pop
sub
lcall
xlat
out
leave
mov
loop
xchg
mov
cmc
mov
pop
mov
movsb
in
dec
push
xor
ljmp
jmp
adc
pop
dec
ret
mov
outsb
lret
fistps
or
in
or
ja
gs
mov
in
inc
cmpsb
pop
mov
shrl
decb
mov
aam
out
jb
testb
cli
push
les
js
xor
cmpb
and
xchg
hlt
xor
popa
pop
std
stos
push
sbb
loop
aad
lahf
sbb
dec
std
fcoml
jne
push
pushl
rolb
outsl
daa
add
pusha
call
out
xlat
std
cld
lods
fmull
pushl
pop
in
sbb
clc
arpl
fmuls
sarl
aas
stos
add
mov
lea
pop
dec
jae
ret
nop
cmp
push
sub
and
xchg
sti
sub
testl
lret
mov
rorl
outsl
outsw
loope
dec
jne
and
setle
inc
or
das
lods
cwtl
sti
cmp
loope
dec
mov
and
lret
mov
xor
inc
cmp
std
push
in
inc
ljmp
sub
dec
enter
xchg
add
jl
or
dec
fcmovnbe
and
repnz
push
iret
test
mov
jg
xor
js
cltd
adc
data16
jmp
push
jmp
test
int3
popf
out
cwtl
into
cmp
rcl
xchg
ret
dec
addr16
aam
sub
and
push
jne
add
gs
cld
adc
ja
test
inc
out
xor
std
push
mov
xor
pusha
push
cmp
mov
jo
aad
in
rolb
loopne
out
inc
rcrl
cli
outsb
mov
cmp
mov
sbb
stc
xor
sub
icebp
dec
repz
xchg
push
mov
lret
je
test
sbb
jl
jns
out
in
xchg
jge
sbb
dec
int
ret
call
mov
mov
inc
rcrl
sti
mov
or
mov
into
mov
notb
mov
cmp
sub
imul
mov
mov
cwtl
imul
nop
cmp
sbb
xor
xchg
mov
imul
mov
xchg
fs
aad
flds
enter
push
jle
and
nop
std
test
inc
mov
cmp
mov
jno
adc
jmp
cld
adc
adc
lret
fcoms
movb
mov
jge
outsl
es
jns
outsb
mov
ljmp
sbb
cli
inc
test
sub
inc
xor
cli
sti
xchg
test
loope
sub
cmp
sbb
mov
mov
lods
shll
mov
inc
shll
inc
adc
fmull
dec
adc
in
and
jmp
xor
test
pop
push
inc
cmpsl
fsincos
lahf
enter
int3
add
loopne
jge
mov
pop
mov
repz
ss
sbb
lcall
int
std
or
push
jl
loop
xchg
lea
cmpsb
mov
cltd
cltd
ret
mov
mov
push
clc
mov
in
insb
pop
sub
jno
inc
lds
xchg
pop
sbbl
push
sbb
mov
add
dec
sbbl
xchg
add
cltd
aaa
add
sbb
mov
jp
popa
lcall
xor
in
pushf
roll
jg
xchg
and
and
cli
loope
jno
std
nop
fldenv
enter
sub
cmp
out
imul
xchg
cmpsb
arpl
pop
rcrb
xor
cwtl
pop
lods
jne
push
or
inc
pop
push
xorl
loopne
mov
pop
xchg
insl
ja
sahf
dec
dec
popa
loope
gs
aaa
pop
push
outsb
gs
push
pop
test
nop
sub
lea
sbb
jbe
repz
lret
mov
test
adc
inc
out
add
push
jge
lret
cmp
scas
int
sbb
loop
add
shll
and
xor
insb
cmp
cmpsb
xor
pop
xor
cmp
mov
push
sbb
fld1
aad
cmp
out
dec
and
or
repnz
gs
iret
jecxz
mov
xor
push
std
push
vmovaps
jmp
flds
into
jmp
cmp
incl
add
jmp
pop
mov
or
pushf
xchg
sahf
aad
lock
ss
js
xchg
xchg
xchg
sbb
scas
loop
out
cld
aad
mov
dec
and
ret
imul
ss
mov
xor
pop
and
aaa
ja
in
mov
jecxz
in
loopne
mov
mov
sub
jbe
mov
and
sub
mov
mov
push
cmp
or
cmpsb
dec
mov
or
aaa
popf
xchg
xchg
cs
jae
add
inc
out
leave
adc
cmp
jp
pushf
mov
mov
sbb
and
cmp
jle
sbb
daa
jle
aad
cld
mov
das
loop
or
mov
out
add
xchg
in
pop
cmc
pop
popa
pop
pushf
pop
cld
push
scas
rcrb
scas
jne
push
lahf
jns
int3
outsl
test
leave
ret
xchg
sahf
xor
loope
fidivrl
pop
jb
mov
in
add
xchg
cs
or
ja
adc
lods
inc
cmp
adc
and
xlat
dec
lds
add
cmp
pop
dec
ljmp
mov
jl
xchg
jb
jo
pop
int3
cmp
rcrb
pop
dec
aad
adc
fadd
mov
xor
xchg
adc
inc
adc
or
jo
inc
sub
adc
shll
push
xchg
inc
and
xor
or
std
bound
loope
les
adc
test
pop
mov
push
rorb
orl
pusha
test
outsb
jle
divb
decl
ss
jmp
ss
test
push
xchg
mov
inc
stc
xchg
lahf
dec
movsl
sbb
int3
xchg
ret
push
sbb
inc
dec
mov
dec
push
adc
inc
add
mov
inc
lods
xchg
mov
or
pop
cmpb
add
mov
cld
lods
aam
data16
scas
jnp
sbb
pop
std
adc
loopne
sbb
mov
out
jmp
jecxz
add
mov
ljmp
sbb
in
cmp
arpl
jne
pop
xor
jbe
in
scas
add
cmp
push
push
ret
ja
pop
mov
xchg
sbb
out
test
gs
cwtl
xor
and
pop
xor
mov
cmp
cmpsb
push
shrl
jns
push
or
cmp
xchg
out
enter
lods
adc
sbb
add
out
sbb
mov
xchg
jne
loope
stc
ja
jns
or
jecxz
mov
xor
cmc
lahf
adc
fldcw
or
xor
jne,pn
dec
les
push
cwtl
insl
xchg
ljmp
mov
jge
mov
out
xchg
sbb
fimull
adc
sbb
push
add
push
outsb
cmc
insl
xchg
dec
fwait
jp
dec
cmp
call
push
jae
cld
out
jge
ror
push
push
sahf
jmp
cs
adc
inc
push
push
xor
add
imul
repnz
out
dec
push
popf
insb
jge
data16
mov
and
loopne
pop
and
data16
jmp
push
lods
push
lret
and
adc
cmpsl
inc
adc
cmp
mov
jb
test
push
jmp
fwait
push
add
dec
mov
xor
lods
in
imul
insl
std
dec
add
pop
cmp
stc
pop
sbb
in
sub
enter
xor
sbb
push
and
stc
aad
in
ret
jecxz
loopne
adc
fwait
xadd
int
daa
push
mov
dec
fnstenv
fwait
xchg
xchg
dec
addl
daa
jbe
movsb
cmp
push
repz
arpl
xchg
xchg
cmp
mov
divb
hlt
fadds
je
cs
push
fcomi
push
fcompl
push
std
xchg
mov
mov
lock
adcl
jne
test
xor
jo
add
jecxz
cmp
push
fdiv
jb
sbb
mov
xor
dec
call
push
pushf
jmp
addr16
insb
test
adc
push
adc
notb
das
js
pop
fdivl
aad
add
xor
mov
iret
inc
jle
push
movsl
nop
mov
pop
jmp
inc
stos
aas
icebp
and
lock
iret
push
adc
mov
mov
push
dec
dec
mov
add
scas
mov
xchg
add
and
inc
adc
lahf
icebp
scas
std
mov
jnp
mov
mov
mov
insl
xchg
jno
mov
sbb
sbb
sti
dec
out
or
add
pop
pop
cwtl
std
or
adc
bound
mov
cmpsl
es
rclb
sub
sbb
lcall
pushf
insb
sti
push
inc
jge
push
es
fwait
je
cs
cwtl
cs
xor
sub
fst
add
mov
mov
test
andb
fwait
inc
test
js
inc
cmp
lret
cmp
mov
mov
outsl
sub
push
fxch
pop
xor
pop
in
andb
fld
lods
scas
lcall
mov
lea
jne
mov
lods
jo
push
int3
das
andb
jbe
mov
or
inc
dec
dec
cmc
into
out
outsl
sahf
xchg
dec
jb
jmp
inc
pop
push
cmp
inc
lcall
push
int
out
shll
jo
mov
pop
lcall
dec
xchg
insb
loopne
mov
iret
fisubl
xchg
mov
jbe
incl
xchg
xlat
out
popa
sub
pop
jnp
push
js
lea
sbb
adc
add
les
pushf
outsl
outsl
jmp
jp
xchg
mov
clc
sub
pop
flds
ss
out
jne
int
dec
sub
fldcw
outsb
decb
dec
pop
pop
into
sbb
cli
std
cmp
inc
gs
movsb
mov
cld
dec
xchg
pop
decl
call
mov
inc
xchg
lcall
fmuls
inc
xchg
scas
scas
out
push
fdiv
jg
mov
or
mov
or
mov
add
orl
lods
mov
in
push
pop
xchg
pop
cmp
sbb
push
dec
pop
roll
fadds
insl
shll
add
mov
pop
test
fwait
and
sub
stos
into
or
mov
fcoms
testb
sti
sti
xchg
repz
xchg
jle
std
pop
adc
cld
jle
inc
mov
cmpl
arpl
cli
out
sbb
jge
add
cmp
xchg
sub
jno
mov
cli
cmpsb
call
xchg
fcompl
jns
ss
pop
add
lods
xchg
mov
jno
fsub
movsb
scas
ja
mov
roll
sub
lret
pop
adc
xchg
mov
pop
push
xchg
in
jl
repnz
in
pushf
popf
mov
mov
sub
ss
clc
mov
xlat
xchg
adcb
sub
daa
arpl
loop
xor
pop
shrl
testb
or
sbb
inc
xor
popa
cmp
xchg
cltd
hlt
sub
pop
cmpsl
and
add
sub
mov
push
or
popa
push
fmulp
inc
and
push
sub
mov
in
ret
mov
test
sbb
out
aam
loope
js
lock
cmp
das
call
jno
mov
lcall
mov
mov
into
jmp
jns
aaa
or
pop
lods
or
mov
xor
out
or
xchg
dec
sbb
push
mov
in
sub
xchg
sbb
pop
mov
adc
cmp
lods
lret
fwait
stos
aam
sub
jl
mov
jmp
cmpsb
cmp
test
out
rorl
adc
test
sbbb
adc
bound
pushf
sbb
sub
and
pop
jmp
mov
push
aas
sub
cltd
inc
jae
fs
sub
mov
fld
fstps
enter
adc
cltd
arpl
mov
xchg
popa
fcomip
dec
jmp
aas
adc
ja
fiadds
test
stos
pusha
jle
xchg
xor
ja
dec
jns
pop
dec
je
cmp
jb
dec
jae
inc
lock
fmul
sbb
xchg
lods
sbb
inc
xchg
push
mov
xchg
mov
out
adc
or
dec
ret
outsb
enter
fldt
cmp
popa
fildl
test
icebp
inc
sub
in
fildl
int3
int3
xlat
sbb
mov
popf
iret
lret
aas
in
mov
sub
xchg
mov
into
or
push
pusha
leave
push
pop
push
sahf
or
and
ret
mov
jmp
push
adc
sar
inc
outsl
scas
mov
roll
sbb
xor
lock
cmpsl
inc
xchg
xchg
ss
xchg
and
jge
mov
and
int3
cmpl
ret
xor
xchg
lret
dec
int3
mov
aaa
adc
lods
inc
in
add
packssdw
push
sbb
sbb
bnd
pushf
cli
or
mov
or
lahf
mov
mov
push
outsb
imul
mov
stos
stc
sti
mov
cmc
cmp
insb
inc
shlb
sar
stc
cmp
mov
in
xchg
inc
out
lock
jbe
mov
adc
ficompl
into
xor
jns
stos
je
mulb
xlat
sti
out
mov
xor
pop
inc
int
out
sbb
test
std
lods
xchg
adc
xor
xorb
and
push
add
push
mov
inc
sub
jle
or
xchg
push
push
mov
in
nop
stos
ret
jecxz
mov
pop
adc
sub
imul
into
add
popa
dec
inc
lds
pusha
or
ljmp
popa
sbb
sub
test
scas
and
pop
sub
ljmp
push
xchg
data16
stos
dec
lods
daa
test
or
outsl
clc
sti
pusha
adc
sub
push
push
mov
jno
rcll
mov
bound
imul
cmpsl
cltd
sub
jecxz
cmp
xor
dec
aas
lret
and
ds
into
push
ret
rep
and
add
je
mov
cmp
ret
dec
outsb
pop
rcr
cmpsl
arpl
lgs
push
and
les
xor
pop
xchg
jnp
lahf
scas
aas
lea
jb
lds
insl
xor
jo
xchg
add
add
xlat
clc
mov
inc
push
add
cmpsb
cwtl
mov
daa
std
mov
cmp
xchg
and
inc
stos
jg
jbe
mulb
sub
popf
jmp
push
jg
push
int3
ret
inc
lods
outsb
cmp
fwait
repnz
jmp
push
fistl
insl
dec
sub
bound
cmp
mov
cmp
add
imul
mov
addr16
xor
lcall
lock
jecxz
push
adc
fdivrs
xchg
pusha
jecxz
add
sbb
daa
rcll
mov
add
xchg
outsb
je
add
xchg
pusha
lahf
pop
outsb
push
and
xor
shlb
dec
aad
xchg
loope
inc
pop
loopne
xor
mov
mov
outsb
lock
mov
cli
pop
popa
mov
shl
daa
pop
inc
inc
pop
popf
pop
sbb
pusha
jns
cmp
inc
repz
test
scas
jno
mov
sti
scas
cli
xchg
mov
adc
pop
push
xor
mov
pop
adc
fdivr
jnp
cmc
out
sbb
xchg
dec
lahf
outsb
push
jne
stos
jecxz
shr
adc
mov
inc
loopne
icebp
outsl
fdivl
out
or
popa
xchg
aam
lods
mov
jg
xor
nop
cmpb
sbb
jbe
mov
pushf
mov
and
sub
xor
fs
mov
int3
jb
push
pop
andl
das
outsb
pushf
adc
mov
cwtl
mov
in
in
sarb
out
mov
out
in
push
enter
ljmp
or
rcll
jg
add
fiaddl
sub
stos
add
aas
add
in
sub
nop/reserved
push
adc
ljmp
in
sahf
inc
mov
lahf
jge
ret
adc
add
fidivrl
cltd
testl
jp
je
icebp
les
shr
jae
aaa
repnz
add
push
pop
jnp
lret
sarb
inc
mov
les
out
sbb
mov
sbb
dec
fcoms
lods
sub
sbb
test
or
addb
or
scas
jg
test
xchg
in
xor
les
add
adc
sbb
or
leave
and
adc
int3
stos
movsb
cmpb
test
inc
push
cmpsl
pop
lock
inc
sbb
mov
clc
ja
pop
imull
mov
dec
xchg
xchg
sahf
iret
fisttps
push
sbb
fmuls
fistps
or
dec
nop
int3
lods
imul
dec
mov
insl
test
cli
mov
lds
adc
jl
pop
push
and
outsl
add
cltd
scas
in
or
insl
fcmovbe
cli
mov
pushf
push
nop
jnp
inc
cmpsb
inc
jae
and
pop
cmp
push
vmovapd
lahf
sub
xlat
and
mov
or
adc
test
test
testl
mov
dec
add
push
xchg
mov
fists
pop
fwait
imul
cld
push
loopne
in
leave
fisubrl
lar
push
das
adc
leave
xchg
xor
cmp
inc
jmp
imul
jmp
add
or
mov
out
jo
test
push
cwtl
ret
push
pop
sbb
popf
mov
pop
imul
stos
repz
ds
sub
scas
pop
add
fdivrs
lahf
stos
bound
int
fbstp
aaa
cmpsl
inc
and
stc
std
aad
sub
xor
mov
sub
insb
pop
and
and
jmp
in
mov
xor
add
lds
inc
cmp
cmp
insb
xor
cld
xchg
arpl
imul
jge
sbb
jns
scas
inc
adc
negl
lods
xchg
imul
inc
rorb
out
cmpsl
push
adc
cmp
rcrl
add
mov
xor
test
inc
filds
jl
inc
lcall
sub
xor
loope
movsl
insb
mov
xlat
popf
push
and
divl
lea
mov
addl
adc
adc
into
loopne
jle
dec
int3
sbb
out
cmp
imul
cmpsl
sbb
xor
adc
pop
jl
mov
xor
in
adc
adc
idivl
pop
mov
cltd
into
jne
inc
mov
sti
pop
or
mov
adc
pop
jno
jb
sub
xorb
cli
sbb
or
imul
into
jb
xor
jg
notb
std
daa
pop
mov
jmp
shll
add
addr16
loope
and
mov
into
cmp
out
jo
sub
xchg
dec
test
xchg
ret
sarb
push
scas
stc
mov
rcrb
inc
add
push
in
shll
push
mov
cmp
notl
iret
and
fmuls
dec
dec
mov
push
push
add
ret
aas
jbe
mov
xor
fs
aam
pop
sub
jmp
push
adc
dec
mov
popf
movsb
mov
adc
jno
aad
lods
add
sbb
xchg
imul
fwait
cmp
lods
cmp
lods
fcoms
les
mov
cmp
and
test
mov
sbb
ret
mov
outsb
dec
ljmp
jecxz
testb
push
lods
push
xor
jb
pop
movsb
ret
xchg
add
iret
mov
adc
int3
xchg
pop
cltd
aas
pop
cmp
and
mov
daa
jo
js
or
push
mov
mov
or
xor
or
push
push
mov
punpcklwd
movsl
adc
jae
cltd
imul
repz
cltd
les
mov
test
cltd
xchg
mov
test
ja
ljmp
outsl
ljmp
in
shlb
jns
cmp
movsb
mov
iret
roll
andb
imul
sbb
push
in
popa
ficomps
out
lods
fdivs
pop
fs
push
fwait
inc
or
bound
scas
adc
push
daa
test
icebp
fldcw
xchg
loope
xchg
lock
lock
sub
push
in
adc
das
es
add
push
stos
cli
ljmp
jg
test
mov
mov
or
cmc
sahf
pop
and
cmpsl
mov
dec
add
cs
sbb
out
mov
sbb
dec
push
inc
pop
xchg
inc
fbld
nop
push
mov
repz
cltd
mov
dec
out
pop
lods
lods
xor
ljmp
or
es
std
jo
push
pop
in
call
icebp
hlt
aam
jmp
sub
jp
daa
mov
sub
in
cmpsl
add
inc
fcom
pop
int
fstps
mov
mov
pop
insl
fwait
inc
sbb
stos
or
push
mov
in
sbb
jnp
clc
push
add
cltd
pop
mov
movsl
shrb
push
std
imul
outsl
inc
js
iret
adcb
popf
inc
add
add
pop
and
inc
subl
popa
mov
fimull
icebp
and
enter
out
imul
fwait
jns
xchg
lret
jns
sub
popa
dec
add
sbb
xchg
jle
sahf
and
sbb
xchg
push
adc
leave
pop
sub
fcom
mov
xchg
inc
jnp
cltd
mov
push
stos
and
dec
xor
mov
xchg
xor
xchg
leave
jbe
and
dec
lea
cmp
lret
sahf
iret
xchg
imul
in
inc
cmp
lea
idivl
fcomip
or
xor
dec
or
movsb
gs
or
jecxz
das
stc
cli
xchg
and
jnp
adc
mov
mov
mov
in
test
adc
popf
push
adc
int3
ficompl
sbbb
cs
mov
repnz
sbb
popf
test
adc
mov
cmc
lock
jl
xchg
and
es
pop
movlps
add
xor
ret
dec
cs
lock
ljmp
gs
push
mov
mov
mov
aam
call
mov
les
stc
fbld
and
cli
int
ljmp
xor
shll
scas
xor
lret
xor
pop
add
push
ja
popa
rorb
test
mov
cmp
pop
fs
ficoml
lret
sbb
outsb
std
sbb
jno
stc
loope
das
mov
lods
outsb
shll
fwait
aad
jl
enter
jp
lds
mov
mov
sbb
pusha
outsl
adc
repz
testl
xor
mov
dec
jne
mov
mov
sub
sub
xchg
xor
inc
daa
adc
and
stc
addl
inc
cmp
mov
lds
cmp
pop
cmp
shll
push
xchg
jbe
add
mov
push
in
add
mov
mov
mov
cmp
mov
or
pop
loop
fcmove
aas
cmp
inc
lret
popa
movsb
inc
cmp
das
xchg
sub
sub
adc
rorb
in
push
or
xor
add
clc
inc
mov
sbb
fs
ret
add
lods
mov
pop
loope
or
pop
mov
pop
jg
sbb
and
rcll
outsl
cwtl
xor
dec
leave
dec
add
fnstcw
mov
mov
andb
cltd
scas
mov
ds
xchg
or
outsl
adcl
add
lret
stos
aas
mov
jns
sbb
xchg
mov
cld
inc
cmc
loop
insb
inc
jo
cltd
filds
and
clc
fdivrs
mov
pop
dec
sbbl
loop
xchg
xor
sbb
adc
cmp
cmpsl
pop
cmpsb
clc
mov
fmull
sub
add
pop
mov
test
repnz
and
jg
test
nop
mov
sti
stos
ds
ss
dec
cmp
sbb
or
test
mov
int
push
dec
loopne
sbb
addl
sbb
pushf
ds
cmp
pop
jnp
ljmp
mov
int
imul
out
xchg
in
loop
and
cmc
mov
sub
ss
jo
dec
jns
push
pop
mov
or
ret
ret
loop
fwait
lock
fwait
jp
movsl
cltd
add
cmp
jns
cwtl
mov
aam
in
out
bound
sub
mov
add
mov
subl
or
sbb
das
sub
or
scas
insl
incb
sahf
push
imulb
xchg
enter
lock
lret
xorl
lock
add
dec
aas
push
sbb
ret
xlat
cmp
and
cmc
js
xor
jecxz
and
push
icebp
into
mov
shlb
adc
cs
xor
enter
jb
push
xlat
sub
push
sti
jle
xor
pop
xchg
dec
dec
enter
xor
dec
imul
inc
push
rcr
insb
lea
lcall
pop
arpl
and
mov
pop
xor
lea
in
jge
sbb
push
into
adc
lea
sbb
jmp
inc
fsub
divl
adc
popa
lret
in
lahf
inc
sarl
lahf
lahf
sti
sbb
xchg
mov
test
in
push
loopne
push
dec
push
mov
ss
cmpsb
sub
scas
jmp
outsb
pop
lods
jns
sbb
sub
jbe
icebp
fdivrs
enter
jmp
push
push
and
sbb
call
int
mov
mov
test
inc
cmp
gs
mov
or
outsl
xor
jae
call
insl
jecxz
dec
cmp
fisubs
nop
pushf
inc
sahf
loop
pop
das
hlt
cmp
mov
loopne
popf
xor
daa
dec
pop
fnsave
push
xchg
cmp
jp
int
sbbl
in
push
lock
add
xchg
mov
dec
rcr
js
jno
dec
mov
jnp
insl
jnp
data16
sub
cmpsb
stos
mov
cmp
jno
shll
add
inc
xor
sub
jnp
jl
mov
mov
arpl
inc
stos
add
into
xor
mov
mov
stc
push
sahf
jecxz
jl
dec
fisubrs
shll
push
jne
dec
pusha
add
lea
inc
test
pop
sar
sub
xlat
push
ss
rorb
test
xchg
jb
add
cmp
lock
mov
scas
mov
repz
outsl
mov
jne
mov
push
iret
adc
into
call
sub
mov
mov
and
jle
pop
daa
dec
adc
ljmp
sbb
push
jns
jl
adc
jb
test
cld
ljmp
push
fs
fimuls
cmpsl
lret
add
pop
stos
mov
idiv
shr
xor
pop
jae
inc
shl
iret
lret
pop
jmp
mov
je
pop
test
add
or
lods
pop
mov
ljmp
out
sbbb
push
pop
lock
lds
vmwrite
scas
cmp
lea
ss
in
add
jno
into
add
sbb
ss
mov
mov
lea
leave
idivb
sbb
mov
mov
stc
cmp
add
es
insb
jl
loope
imul
lods
ljmp
popf
sub
clc
adc
in
stos
add
add
jbe
mov
insl
loopne
push
mov
push
push
xorb
cmp
lahf
outsb
lret
inc
cmpsb
adc
xchg
getsec
adc
icebp
dec
loop
or
inc
push
add
in
in
scas
adcl
cmp
enter
subb
jno
jg
lods
dec
inc
mov
shrl
mov
sub
mov
clc
add
sub
mov
ljmp
and
inc
dec
in
sbb
mov
push
popf
clc
icebp
push
lds
pop
pop
int
mov
ret
mov
xchg
aaa
lods
sbb
xor
sti
dec
adc
stc
sbb
insb
shlb
jno
outsb
in
clc
mov
notb
in
sub
mov
push
sbb
leave
fisubrl
cmp
clc
or
into
loope
add
outsl
or
mov
jp
dec
pop
inc
fisttpll
jae
iret
in
fistpl
loopne
andb
inc
inc
lahf
xchg
pop
sub
call
sub
in
dec
jne
out
adc
xchg
or
mov
call
and
mov
enter
xchg
fisttpll
sbb
cmp
lret
jg
pop
sub
iret
adc
ljmp
xchg
push
inc
adc
sub
mov
outsl
xorb
jbe
inc
mov
test
dec
movsl
fbstp
mov
aam
dec
inc
std
mov
fs
mov
xchg
jae
mov
xor
xchg
cld
mov
testl
mov
in
jnp
push
mov
pop
mov
mov
int3
pop
fmuls
into
xchg
and
scas
push
aas
fs
lret
jge
daa
scas
add
push
nop
xchg
jge
push
jle
ret
fwait
out
jae
arpl
andb
mov
dec
jecxz
imul
sbbb
ljmp
sub
aam
das
ret
ljmp
xor
xchg
icebp
lock
xchg
add
xor
loopne
aas
add
add
jle
mov
jo
add
sbb
or
sar
out
cmpsb
jnp
inc
pop
inc
ljmp
outsl
ljmp
popa
xchg
stc
rcl
mov
push
andl
jo
xchg
inc
xchg
inc
push
xchg
sub
outsb
mov
arpl
xchg
push
push
pop
jne
insl
mov
mov
or
adc
push
sub
nop
or
shll
jmp
outsb
movsb
or
loope
sbb
dec
mov
xor
cmp
dec
push
addr16
idivl
stc
into
mov
icebp
mov
xlat
in
bound
inc
or
pop
call
shrb
cs
fld
adcb
jo
mov
test
and
fidivl
mov
mov
lods
dec
push
pop
sub
out
leave
and
adc
adcl
add
test
arpl
pop
dec
imul
cmpsl
and
sbb
dec
mov
lea
in
mov
inc
mov
daa
and
add
pop
or
inc
xchg
data16
pop
mov
dec
mov
add
gs
les
pop
add
inc
js
scas
add
xchg
pop
test
xor
adc
sbb
add
mov
sub
adc
pop
jmp
fmul
in
movsl
add
xchg
aam
sub
sbb
xchg
lods
sbb
and
pop
inc
sub
cmp
inc
in
outsl
pop
into
mov
and
dec
and
jge
inc
les
push
stos
cmpsb
add
push
test
scas
insl
and
ds
jo
xor
dec
lods
add
mov
push
rcl
pop
pop
sbb
inc
add
jbe
mov
add
dec
or
mov
fwait
push
mov
dec
or
jle
cmp
mov
mov
mul
push
dec
icebp
pop
jp
sub
jae
lock
cli
cltd
lods
movsb
sub
cmc
jb
inc
lds
je
stc
out
mov
subb
popa
push
mov
lahf
cmp
dec
push
or
xchg
xlat
cmp
mov
mov
adc
arpl
lock
sahf
fsubr
cvtps2pd
push
into
nop
sbb
mov
fcmovnbe
sbb
jecxz
fsubs
rcll
stos
sub
into
les
das
jecxz
insl
ds
mov
dec
jmp
movsb
xlat
in
dec
cmp
dec
ljmp
addl
or
imul
mov
inc
push
jae
mov
movb
or
inc
inc
jno
sbb
jbe
add
mov
out
data16
and
jp
jbe
cmc
push
xchg
cmove
loop
inc
xor
sub
stc
jnp
cmp
sub
in
push
dec
daa
jp
negb
cmp
jo,pn
movsl
dec
out
push
fwait
aam
aaa
movsl
jo
sbb
fildll
imul
addr16
xor
xchg
repz
pop
enter
mov
repnz
lock
push
jns
inc
int
fidivl
or
and
cmp
pop
data16
add
mov
push
xchg
xor
bound
out
sub
inc
push
mov
mov
cmpsb
mov
xor
or
and
cmc
leave
mov
push
punpckhdq
in
test
stos
loope
sbb
int
or
mov
sahf
arpl
cmc
push
adc
out
imul
push
pop
out
mov
popf
mov
sub
cmp
add
cmp
stos
movsl
push
push
movsl
mov
push
loope
or
pop
scas
add
rcrl
pusha
or
jle
pop
xor
popf
rolb
cmp
push
cmp
jae
rolb
mov
mov
pop
xor
xor
lret
mov
jle
idiv
adcl
jbe
pop
adc
xor
in
mov
xchg
in
mov
xchg
xchg
cs
inc
mov
sub
les
pushf
sbb
pop
jecxz
mov
rcrl
mov
aaa
jae
je
jge
sbb
out
dec
js
das
out
pop
fs
pop
lret
jno
cwtl
aam
mov
mov
fdivrs
fs
sbbl
pop
icebp
xchg
aad
mov
stos
xor
test
xchg
fdivs
add
push
loope
mov
sbb
mov
jne
mov
inc
ja
xchg
sub
sar
xchg
jno
pop
scas
cmp
xor
mov
sub
and
sbb
pusha
pushf
dec
inc
inc
rol
sub
dec
nop
push
mov
push
mov
aas
movb
fdivrs
jns
aaa
cwtl
cmp
xor
shll
xor
adc
mov
pop
jb
mov
call
lods
popw
ficomps
out
addr16
scas
sbb
stos
cmp
mov
imul
pop
lods
sbb
cmp
cmp
mov
ja
rcl
pop
lret
scas
ds
pop
js
or
xor
lods
push
fdivrl
imul
in
repz
pop
xor
mov
pop
xor
shrl
pop
movsl
add
inc
and
imul
lcall
inc
fnsave
stc
dec
daa
sub
add
xchg
shlb
cmp
adc
cmp
call
and
pop
mov
cmpl
mov
add
lods
cmpsl
aaa
push
lea
inc
xor
mov
lods
xor
cli
pop
imul
mov
xchg
lods
je
adc
sbbl
pop
sub
outsl
push
or
negl
jg
sub
cmp
cmp
and
aas
or
stos
sub
mov
pop
jl
push
lds
fidivrs
scas
lea
popa
in
and
inc
loope,pn
jecxz
dec
ljmp
and
jle
cmp
movsb
test
les
mov
in
pop
mov
xchg
jnp
loopne
fwait
or
inc
sub
aaa
lods
cmp
dec
fcmovne
iret
dec
scas
or
nop
mov
movsb
cmp
shlb
repnz
fsts
dec
ret
sub
jns
in
jge
jg
jg
pusha
fwait
repnz
lret
cmc
leave
icebp
cmpsb
call
call
stos
inc
xchg
dec
or
mov
push
das
or
shll
mov
cmp
sbb
orl
mov
add
jp
jae
mov
pand
cli
mov
dec
mov
sub
out
nop
mov
dec
xor
jecxz
or
xchg
enter
out
dec
mov
pop
and
loopne
sbb
aam
test
rorb
shrb
nop
cmc
mov
rcll
or
dec
ret
inc
inc
jmp
icebp
leave
das
xlat
leave
fwait
insb
sar
push
jmp
loopne
push
fimull
sub
rcrl
xchg
inc
adc
sbb
out
mov
lcall
popaw
mov
pop
mov
push
daa
dec
sbb
imul
jge
adc
in
lds
pop
cmp
arpl
lds
mov
shlb
cmc
shrl
cmpsl
jmp
inc
sbb
sub
fxtract
jmp
loope
rorb
xchg
adc
sbb
and
rcl
lahf
jg
adc
mov
cs
mov
cwtl
loop
mov
aas
enter
subl
lods
out
pop
jns
jmp
or
xchg
mov
mov
mov
scas
adc
in
out
scas
gs
or
imul
mov
cltd
and
daa
adc
mov
mov
outsb
adc
sbb
jecxz
xor
push
dec
ja
mov
pop
inc
dec
mov
cmp
xor
ret
add
subb
arpl
out
stc
gs
mov
jecxz
lcall
loope
in
xchg
or
fbstp
shrl
mov
add
xchg
lods
adc
enter
inc
mov
shlb
xchg
dec
loope
mov
fistpl
lods
rcrb
movsl
cmpsb
and
enter
jbe
lods
jl
push
adc
mov
or
and
push
xchg
cmp
push
inc
cmp
je
shrl
in
sub
dec
mov
stc
adc
gs
test
adc
gs
icebp
loopne
mov
cld
fstl
inc
xchg
mov
dec
mov
inc
xchg
ffree
pop
mov
lods
mov
popf
mov
push
xchg
imul
in
mov
and
pop
loop
and
xchg
lahf
popa
dec
xchg
mov
jmp
jb
cmp
cltd
jo
inc
inc
push
xchg
ja
fs
orb
inc
loop
popf
push
dec
fwait
fwait
mov
outsb
lods
aad
mov
loopne
jl
adc
xchg
fwait
jnp
sbb
push
mov
aam
mov
ljmp
pop
mov
inc
out
mov
mov
and
and
ret
adc
js
jg
xor
adc
xchg
cmp
fidivrs
add
decl
cmpsb
sbb
jbe
jg
jecxz
dec
push
jb
push
outsb
pop
test
clc
sub
insl
pop
scas
test
push
es
sbbl
clc
pop
lcall
push
mov
rorl
lret
pop
add
adc
ret
add
mov
gs
icebp
pop
push
fadd
cli
daa
xor
jl
fs
jl
xchg
jg
lret
std
jae
mov
notl
mov
push
or
xor
in
mov
or
js
inc
daa
test
pop
jmp
dec
xor
push
mov
rcr
push
pop
mov
ds
es
cmp
je
pop
addr16
outsl
mov
mov
out
xchg
lock
lock
mov
insb
mov
das
push
adc
pop
call
add
mov
mov
dec
mov
jo
scas
jmp
inc
arpl
and
fnstenv
adc
std
jno
stos
cmpsb
test
push
push
pushf
lock
jmp
arpl
sbb
out
sbb
mov
repnz
xchg
lret
add
pop
inc
jo
into
adc
sbb
idiv
jmp
sub
add
ret
inc
xor
xor
cli
test
loop
adc
xchg
xor
cmpsb
jecxz
imul
xchg
test
cmp
lds
xchg
or
jl
cwtl
mov
and
ficoms
daa
out
mov
imul
mov
test
or
sub
push
inc
cli
dec
push
ds
jae
icebp
or
pop
mov
jmp
popa
jno
jae
add
imul
cmp
stc
or
dec
sbb
and
sahf
scas
xor
aaa
jo
push
shll
outsb
jae
int
push
aaa
pushf
adc
es
mov
je
sub
dec
sub
sbb
jno
and
pop
pop
lods
jp
pop
dec
fwait
inc
cltd
jnp
dec
xchg
ljmp
xor
inc
mov
and
cmc
test
fdivs
fcmovbe
xor
jl,pt
loope
and
sbb
xor
rcr
pop
mov
psrld
xchg
cwtl
mov
dec
xor
int3
inc
jecxz
js
cmp
or
test
fs
sbb
loope
inc
adc
clc
pop
cli
ljmp
aad
pushf
sub
test
mov
push
push
mov
adc
adcl
fisttpl
arpl
cmp
cmp
pop
dec
test
lods
or
cmp
fistl
shrl
mov
imul
pushf
jns
daa
cltd
aam
xor
lea
fpatan
sub
aas
jo
push
xchg
cmp
pushf
or
bound
adc
sahf
xor
dec
mov
testb
insl
adc
ss
int3
stos
pop
or
inc
les
out
mov
sbb
mov
mov
xchg
cmp
fsubrs
fbstp
sub
test
cmp
xchg
aad
fs
push
xlat
inc
inc
enter
fmul
loopne
aas
jb
inc
sbb
push
ds
popf
push
in
insl
xor
add
jbe
adc
stc
lock
out
xchg
cwtl
cmp
bound
add
pop
lods
mov
fildll
test
leave
mov
mov
xchg
repnz
pop
push
xchg
lahf
adcb
push
fisubs
arpl
add
js
inc
scas
inc
inc
xchg
xor
in
in
call
pop
lahf
jns
sbb
sahf
and
jle
jp
xor
pop
mov
das
adc
pop
andl
out
je
mov
pop
andb
pop
lret
push
push
adc
sub
xor
loopne
xor
nop
xor
cs
popf
jns
aam
ficoms
es
scas
pop
shrb
mov
adc
inc
fistpl
or
shrb
adc
lods
shll
lock
push
ret
scas
xor
or
leave
out
mov
jnp
push
lahf
in
pop
mov
mov
mov
and
xor
es
jle
push
pop
xchg
adc
andl
loop
pop
or
xchg
mov
or
negb
mov
push
sbb
pop
pop
addr16
int
cmpb
inc
ret
cmp
pop
inc
cmp
mulb
jg
mov
hlt
pop
push
int3
cwtl
loopne
rorl
or
lret
rcl
jl
mov
lcall
mov
insl
or
mov
lods
mov
inc
ds
adc
mov
push
mov
mov
lahf
jae
or
xor
mov
fisubrl
push
sbb
lods
dec
cmp
xor
in
push
movsl
xchg
jno
pop
je
pop
dec
add
shl
mov
mov
outsl
pusha
out
push
sub
pushf
clc
mov
sbb
cltd
mov
test
lea
dec
mov
and
jnp
rcr
and
aas
xchg
adc
jle
sahf
lahf
push
push
or
out
fdivp
adc
das
pop
lret
ror
fistl
pusha
jo
repz
test
cmp
fwait
mov
jnp
or
mov
cmp
mov
inc
inc
shrb
mov
ret
sub
cmp
mov
fcoms
sbb
add
and
sub
xor
iret
xchg
pop
sub
sarb
ret
cmpsb
or
push
test
fbstp
dec
adc
fadds
ja
inc
test
pop
push
mov
arpl
push
mov
or
test
int
popw
popa
dec
test
jmp
outsb
or
out
xor
mov
loopw
popa
cmpsl
and
insl
mov
sub
incl
jno
fisttpll
pop
push
fistpl
or
sbb
mov
repz
hlt
mov
mov
sbb
mov
stos
es
sti
adc
fs
pop
pop
in
leave
and
jmp
jo
sbbb
mov
jge
mov
inc
mov
add
iret
xchg
lock
jg
movsl
popf
fwait
ljmp
jg
xchg
jne
pop
inc
add
lcall
shll
xchg
sar
shll
pop
xor
push
icebp
push
das
jne
cwtl
mov
stc
repnz
mov
sbb
push
ja
movsl
out
jbe
jle
mov
sub
int3
leave
xchg
out
and
or
push
push
mov
outsl
cmp
dec
add
insl
lea
rcl
loop
push
mov
or
lds
test
out
hlt
push
and
xor
imul
add
xchg
jl
add
and
xor
xchg
mov
popf
mov
shl
mov
push
test
cmpl
lea
test
iret
pop
lcall
lcall
aad
mov
aam
ljmp
push
mov
push
ljmp
pop
mov
mov
addr16
adc
dec
xor
cld
fistps
movsb
outsb
xchg
fnstsw
aaa
aas
dec
jno
mov
jo
cmp
popf
adc
dec
sbb
js
clc
loopne
mov
dec
addl
pop
lea
pop
mov
mov
int
add
xchg
sbb
clc
loope
dec
lods
xor
or
sti
mov
int3
sbb
ljmp
stos
xchg
sti
cmp
pop
dec
aad
pop
in
dec
stos
pushf
outsb
cmpb
cmpsl
frstor
dec
cmpsl
dec
sub
loope
sbb
int3
push
or
enter
fdivrl
in
pusha
sbb
mov
les
mov
pop
mov
test
or
cmpsb
pusha
mov
push
pop
inc
push
cmpsb
jae
arpl
pop
stos
test
add
std
cmp
mov
out
push
mov
jae
push
add
daa
incl
imulb
mov
mull
sub
or
mov
mov
add
into
fdivrl
imul
mov
pop
mov
lret
shlb
mov
add
scas
adc
icebp
inc
nop
fldt
sub
sub
xor
dec
mov
fwait
lods
cmp
in
cmpsl
icebp
xchg
divl
into
mov
lret
testl
shrb
int
ret
shll
xchg
mov
imul
mov
subl
xchg
les
jl
jp
sbb
std
push
sub
dec
jle
aaa
add
cmp
pusha
mov
ja
adc
fs
shll
ds
xchg
into
sbb
aas
cltd
imul
lods
sarl
push
mov
mov
mov
adc
mov
dec
lret
adc
xchg
dec
xchg
sti
ds
inc
xor
inc
mov
xor
cwtl
mov
aam
lretw
aad
mov
xlat
cmp
out
add
or
nop
leave
mov
cld
outsb
pop
mov
testb
add
and
jne
inc
popf
mov
push
xor
mov
jno
or
fisubrl
mov
sbbb
outsb
leave
mov
add
sbb
je
cltd
add
dec
test
repnz
out
xchg
xor
xor
dec
repnz
jbe
lods
sub
xor
sub
jne
push
xlat
in
xor
xlat
lock
xchg
mov
push
or
into
aad
movsb
xchg
jecxz
pop
ret
shll
jg
sub
and
ret
inc
dec
ret
pushf
ret
pop
rclb
add
into
pop
pop
das
test
xchg
jae
inc
call
jns
shlb
push
push
pmaxsw
mov
adc
aam
or
jg
inc
das
insl
jbe
or
sarl
aam
leave
lret
pushl
std
gs
mov
dec
jecxz
test
pop
pop
daa
sub
insb
add
lods
xor
mov
sti
adcl
jnp
enter
mov
inc
inc
or
lods
push
xchg
mov
test
repz
inc
xchg
sbb
nop
imul
loop
xor
xchg
inc
cli
push
lods
add
icebp
test
mov
pop
cmpsl
jbe
mov
inc
jmp
mov
test
pop
jecxz
pop
jnp
mov
or
lea
std
bound
pop
sbb
mov
flds
jno
xor
pushl
pop
cmp
or
in
jle
or
push
mov
and
jb
fmulp
jl
pop
push
push
push
jne
jmp
lods
rcl
sbb
cmp
insl
aad
cmp
fcomps
adc
adc
sub
mov
jne
and
stos
insb
ljmp
adc
jns
mov
js
xchg
out
scas
lahf
push
jo
push
dec
adc
jp
loop
pop
or
addr16
lds
repz
shlb
out
xor
pop
or
out
push
push
cld
gs
in
cs
into
xor
sbbl
test
cmpsl
es
or
call
ljmp
insl
negb
xchg
fdivrl
and
sbb
hlt
pusha
add
sub
inc
test
push
mov
mov
stos
xchg
loop
popf
cmp
test
sub
jbe
push
mov
jmp
xchg
sti
inc
insb
mov
lods
fwait
sub
mov
push
cld
in
jp
cmp
test
cmp
push
jle
sahf
lcall
mul
imul
test
pop
icebp
ds
mov
adc
std
test
in
or
shrb
xchg
mov
hlt
mov
ja
inc
xchg
xchg
sbb
cmpsl
in
xor
mov
insl
push
enter
mov
pop
sub
stc
push
mov
insl
jno
xchg
das
cmp
pop
out
mov
aam
mov
mov
push
nop
push
cmp
jp
or
mov
les
fidivl
inc
pop
jae
sbb
in
mov
imul
aad
inc
aaa
sub
xchg
jl
data16
mov
cmpl
loope
mov
dec
movsl
xor
je
cmp
cmp
cltd
inc
mov
cs
or
dec
xor
jns
insl
dec
bound
cmpsb
inc
sub
push
stos
out
xor
call
xchg
movsl
leave
fidivs
xchg
mov
sbb
pop
sub
cmp
fnstenv
imul
add
popf
dec
mov
int
mov
imul
test
out
repnz
lds
mov
fistps
inc
jnp
into
xchg
sub
pushf
mov
aad
pop
mov
adc
in
dec
adc
mov
xor
dec
cwtl
dec
bound
subl
das
dec
hlt
add
lea
in
mov
and
jecxz
jmp
ja
mov
add
dec
pop
lock
cmp
scas
enter
push
pop
movsl
out
inc
jb
aad
push
sbbl
testb
not
insb
push
arpl
in
dec
adc
scas
jo
icebp
mov
inc
mov
and
xchg
pop
fildll
imul
xor
mov
xor
dec
xchg
fwait
ret
add
mov
dec
mov
fidivs
sbb
pusha
mov
faddl
mov
mov
cld
pop
mov
mov
xor
or
js
sahf
jno
stos
bound
lea
dec
daa
push
xchg
dec
or
fwait
and
pop
pusha
dec
cmp
mov
pop
add
inc
pop
mov
fwait
js
pop
fs
or
adc
into
ja
gs
adc
xor
pop
xchg
out
sbb
add
stos
cmp
idivl
imul
push
and
push
jge
and
bound
idiv
lds
and
cltd
es
insl
cli
and
insl
pop
jbe
push
xchg
in
stos
jb
jecxz
sub
and
fbstp
cmp
icebp
fwait
xor
jae
nop
cmp
movsl
sub
jg
vmovaps
xchg
dec
test
stos
mov
ret
xlat
std
sub
mov
mov
mov
cwtl
xor
in
mov
lcall
add
pop
push
pop
mov
and
jns
outsl
shl
in
incl
cmp
test
bnd
mov
ret
xchg
outsl
cmpsl
and
sub
xchg
gs
lret
mov
lret
dec
fsubrl
jns
jle
cmc
decb
shlb
dec
or
movsb
mov
xor
sub
arpl
mov
push
sbb
jecxz
xchg
or
add
rorb
push
xchg
repnz
inc
xchg
cmp
xchg
dec
pop
arpl
or
stos
cvttps2pi
push
mov
cmp
cmp
push
dec
dec
pop
or
fwait
mov
cld
cmp
fwait
nop
mov
cmp
push
inc
mov
pop
jns
icebp
xlat
lods
sti
je
std
mov
pop
pop
cs
push
in
ljmp
lds
pop
mov
icebp
xchg
xor
sahf
roll
in
repnz
or
and
inc
insb
aaa
adc
lret
add
adc
xor
sbb
adc
in
cmp
popl
je
inc
inc
aam
repz
test
push
sub
in
push
int3
jnp
fstl
pop
sub
push
inc
jg
mov
nop
testb
imul
ds
cmp
lret
jb
mov
mov
aam
fdiv
push
out
adc
xchg
cmp
push
in
hlt
xchg
xor
cmp
sarb
mov
inc
mov
fdivl
adc
add
insl
lcall
push
jge
sub
cmp
out
call
shll
es
fxam
xchg
cmp
cmp
mov
out
fnstenv
stos
adc
rorl
std
xchg
jl
push
adc
mov
or
cmpsl
inc
mov
cltd
and
pop
cs
lods
jmp
call
lret
xor
sbb
and
int
mov
sahf
sub
ds
rorb
or
and
out
mov
mov
pop
fdivrl
push
in
xlat
xorb
andl
lea
dec
gs
rolb
mov
adc
std
pop
cli
sub
inc
call
xchg
mov
mov
jecxz
rcrb
repnz
je
sub
push
add
test
cmpsb
xchg
or
pusha
xchg
int3
push
jnp
aas
mov
add
lock
push
sbb
daa
adc
shrb
aaa
imul
add
out
fidivl
hlt
sub
dec
sbb
aam
cmpsb
sahf
mov
mov
push
aam
outsl
insl
stos
bound
or
xor
cmpsl
mov
push
push
icebp
fnstenv
sarl
xchg
dec
mov
and
sbb
inc
mov
cmp
xlat
lret
sub
mov
sbb
lds
jne
jnp
push
cli
cwtl
fnstsw
aas
jmp
sarl
stos
xchg
negl
lcall
dec
adc
imul
pop
insb
or
sub
rcrl
jnp
adc
push
ffreep
cmp
mov
or
xchg
imulb
jge
sub
adc
and
cmp
sarb
and
fcoml
insb
xor
imul
mov
pop
std
xor
dec
inc
adc
ss
in
mov
push
out
call
mov
jno
fnsave
xchg
xchg
adc
or
xor
mov
stc
int3
fcoms
xor
push
mov
cmpsb
xadd
or
mov
testl
ljmp
imul
decb
inc
js
mul
ds
pop
xor
outsl
imul
mov
inc
or
adc
fisubl
pop
jmp
cmp
mov
mov
insl
mov
cli
cwtl
mov
data16
mov
cmp
daa
movsl
in
sub
rcl
xor
fimull
pop
jmp
loop
aam
sub
imul
mov
and
and
mov
out
in
mov
jno
xor
xchg
out
inc
lret
icebp
lgs
fsts
ret
jge
sbb
rclb
mov
xchg
jle
data16
pop
mov
movsb
inc
arpl
adc
cmp
xchg
std
movsb
mov
inc
lods
jle
mov
push
add
notl
sub
test
add
or
or
lcall
push
inc
sti
out
fwait
inc
mov
mov
popf
lahf
cs
or
and
fnstenv
repz
insl
xchg
mov
lret
pop
xchg
dec
call
pop
pushf
movsl
aam
mov
sbb
pushf
fs
push
xor
pop
cs
inc
cmp
outsl
movsb
jmp
or
sbb
jg
ret
jo
das
in
mov
add
push
jno
push
jnp
or
fs
test
and
sbbb
lret
sub
mov
push
loopne
test
dec
loope
cwtl
das
ror
mov
xor
hlt
inc
shll
mov
sbb
lods
sub
stos
and
pop
lds
cmc
sub
jle
popf
mov
call
mov
cmp
xchg
jge
xor
lahf
and
add
repnz
pop
xchg
dec
shlb
repnz
adc
fimuls
fnsave
add
add
std
addr16
mov
outsb
popf
adc
or
ljmp
in
jmp
stc
pop
daa
jmp
int
loop
sti
jnp
xchg
cmpsl
mov
lods
xchg
cmp
cld
mov
sub
adc
movsb
repnz
lahf
adc
mov
pop
enter
fidivs
jl
push
ds
aaa
add
scas
mov
ds
roll
call
and
mov
mov
xchg
lahf
ja
adc
movsl
push
mov
test
fs
xchg
xchg
xchg
aas
pop
aad
adc
icebp
mov
or
push
jns
pop
sti
and
sub
fs
and
jmp
jnp
cmp
pop
stos
xchg
dec
idivl
into
stos
dec
out
aas
cli
xchg
stos
and
adc
call
test
scas
jle
test
dec
jle
ja
mov
fsubl
inc
pop
adc
mov
jbe
pop
xor
mov
xchg
sub
ret
xchg
aam
mov
adc
sbb
xor
adc
xchg
dec
cmpsb
jno
add
push
scas
jmp
scas
push
out
jns
add
or
cwtl
fildl
movb
stos
mov
imul
or
mov
xor
testb
cmpsl
adc
popf
cmpsl
out
outsl
mov
xchg
sbb
mov
sub
in
or
adc
aaa
aad
ret
sub
mov
add
push
mov
addr16
adc
fsubr
inc
les
jns
lods
js
push
popf
xchg
xor
iret
add
push
mov
aaa
std
inc
xlat
or
in
ret
mov
xchg
push
fsubl
xor
and
mov
ja
ljmp
clc
push
mov
addl
loop
bound
in
xchg
js
fnstsw
inc
inc
aam
mov
lret
stos
mov
push
test
shl
pop
outsl
xchg
imul
dec
ss
xchg
pop
fbstp
mov
pop
or
push
push
mov
hlt
subb
test
or
not
in
fwait
popa
sahf
nop
sbb
sub
jg
sbb
sbb
sub
push
inc
cmp
movl
sub
test
pushf
stos
rcrb
movsb
sbb
lret
push
sbb
inc
cmpb
jnp
nop
cmc
out
lds
or
div
cmpsl
cltd
xchg
xor
out
decl
mov
ljmp
adc
fimull
sub
aam
sbb
ja
push
sub
jl
sar
aam
pop
dec
repnz
inc
jne
xlat
hlt
dec
or
jnp
push
xchg
inc
xor
dec
inc
or
sub
dec
dec
add
push
add
sbb
int
ret
jne
aas
ror
or
sub
iret
ret
andb
mov
shll
pop
add
in
mov
sbb
jp
and
iret
dec
out
dec
lods
jge
leave
xor
add
mov
mov
push
testb
rorl
jle
xchg
pop
loop
inc
or
and
popf
or
sbb
popa
call
in
stc
les
add
and
push
out
insl
push
out
or
daa
cmp
push
xchg
pop
adc
mov
in
dec
sbb
scas
push
pop
gs
dec
lock
pop
bound
dec
fstl
jb
adc
push
les
push
inc
pop
addr16
movsl
dec
add
test
out
fldl2e
xor
iret
shlb
ja
es
pop
mov
pop
pop
mov
sub
popa
dec
scas
int3
pop
popa
xchg
sub
xor
dec
ja
lret
outsl
ret
test
jg
pop
cmc
test
fbld
ss
xor
mov
out
xchg
sahf
cmp
pop
pop
lods
sub
repz
rorb
fs
inc
xor
mulb
xor
lcall
mov
xor
cmp
les
mov
jbe
mov
cmp
add
xorl
pop
cwtl
jp
call
sub
lret
in
movhlps
lcall
mov
mov
stos
pop
incb
out
pop
cmp
loop
movsl
ficomps
out
xchg
iret
outsb
call
sbb
xchg
inc
inc
std
jl
sub
jne
add
fwait
insb
dec
or
and
dec
out
xchg
mov
add
dec
into
cmpsl
sarl
mov
not
lds
hlt
popa
pusha
mov
or
int
sbb
repz
pop
notb
call
lods
in
loopne
or
test
arpl
lahf
js
insl
or
mov
push
je
xchg
jns
jbe
and
out
pop
cmp
je
loope
orl
sub
cmpsb
mov
int
aam
pop
std
xor
push
mov
inc
push
pop
test
lret
les
push
adc
xchg
mov
repz
push
in
jmp
pusha
cmc
cmpsb
fs
push
push
std
arpl
jecxz
ljmp
sbb
inc
pop
cs
shl
fcompl
mov
cmp
popf
adc
jns
fldcw
stc
and
or
repnz
push
clc
pop
imul
pop
pop
lret
testb
mov
loopne
in
fidivs
scas
stos
xchg
add
scas
xchg
cmp
push
mov
sahf
pop
es
mov
outsb
lcall
scas
xchg
add
inc
stc
push
insb
inc
pop
lret
sti
loopne
pop
cld
pop
push
mov
fucomp
call
add
pop
popf
or
cltd
mov
or
inc
adc
aas
test
and
mov
clc
and
sub
dec
stos
xchg
push
inc
dec
scas
andl
les
aas
incl
mov
pop
in
hlt
aad
xor
es
aad
ret
jbe
in
les
xor
sub
xor
ds
test
sub
loope
jae
leave
sub
loopne
aam
sub
pusha
lret
movb
mov
cld
repnz
loop
xlat
loope
fistpll
dec
mov
adc
gs
push
lret
inc
pop
inc
adc
fsubrs
fisubrs
icebp
mov
aas
mov
fcomp
adc
pop
ss
pushf
dec
add
out
test
add
aaa
std
popa
setp
push
xchg
lds
xchg
scas
jl
and
xor
insb
nop
pop
stos
dec
xlat
mov
jb
xchg
je
icebp
and
xor
jecxz
or
arpl
cmc
adc
mov
or
dec
lret
jp
daa
mov
ja
rcrb
mov
adc
cltd
jne
out
xchg
push
jae
fsubr
pusha
popa
repz
fcmovnbe
repnz
fists
addr16
sbb
dec
pusha
das
test
adc
test
lret
push
xor
jo
jmp
cmpsl
arpl
enter
mov
push
xchg
xlat
jns
xchg
inc
cwtl
mov
mov
enter
lods
daa
stc
aas
nop
cltd
xor
arpl
inc
jns
push
out
pop
je
rcll
ljmp
xchg
loop
fcom
sbb
imul
repnz
add
aam
inc
jecxz
aas
jmp
or
orl
sub
dec
movsb
addr16
jg
sarl
xchg
mov
fsqrt
xchg
and
mul
sub
jo
xlat
jo
call
insl
mov
dec
pop
push
jle
enter
pop
xchg
jg
outsb
push
mov
dec
adcb
mov
jmp
arpl
lahf
sbb
cmp
cmp
xchg
sbb
repz
push
and
cmp
dec
sub
xor
jmp
rcrl
sbb
sub
lods
jmp
lahf
jns
in
sub
jl
out
idiv
arpl
mov
inc
add
sarl
flds
cmp
fwait
stc
mov
jno
xlat
inc
pop
xchg
dec
addl
inc
push
shr
dec
dec
aas
outsb
ljmp
ficoms
push
fs
xchg
xlat
dec
push
cmp
fcomi
add
or
pushf
mov
adc
fidivl
ret
jle
lods
hlt
xchg
inc
adc
loopne
add
in
shrl
lock
icebp
int
inc
mov
repz
jns
scas
xchg
ss
popf
pop
sarl
outsb
je
insb
dec
scas
mov
int3
aaa
fidivrl
push
sub
mov
scas
in
push
push
outsl
pop
dec
sbb
jnp
adc
notl
mov
shlb
lds
mov
iret
jno
mov
fwait
mov
inc
mov
popa
mov
jge
mov
shll
sahf
mov
loopne
icebp
mov
cmp
rcrb
mov
fwait
aam
pop
popa
es
sbb
add
jle
pop
sbb
push
out
out
out
lds
imul
jecxz
or
arpl
icebp
mov
mov
addr16
push
dec
add
daa
push
sti
dec
mov
dec
mov
xlat
pushf
dec
cmpsb
arpl
into
xchg
cli
rorb
inc
jl
test
xchg
fs
test
xchg
xchg
sbb
pop
nop
pop
or
jnp
nop
add
add
jo
pop
int
cmp
xchg
movsb
fisubrl
cmp
test
xchg
ds
mov
push
rclb
pushf
add
in
ljmp
or
dec
and
or
cmp
cli
cmp
jmp
repz
sbb
cli
leave
fsubs
sbb
mov
and
push
dec
xchg
std
pop
les
or
jl
mov
mov
mov
fdivl
cltd
lods
ret
adc
mov
push
mov
cmpsb
mov
adc
lea
xor
and
jbe
loope
loopne
call
mov
lahf
sbb
dec
adc
loopne
pop
sub
das
test
and
scas
cli
jmp
imul
fwait
dec
aaa
daa
jge
xor
pop
ja
imul
shll
push
mov
mov
fidivrs
mov
pushf
in
ficomps
jo
gs
loope
popa
xor
fcomps
aas
enter
mov
repz
leave
mov
adc
jbe
ret
xor
ljmp
sub
dec
jno
ljmp
in
mov
push
pusha
rcll
xchg
cmp
stos
push
adc
push
rclb
pop
rcrl
outsl
mov
lea
rcrb
jmp
shrb
cmp
repnz
fcomps
in
mov
cmp
das
cmpsb
mov
jne
sub
into
jo
inc
pop
les
xchg
or
call
push
mov
pop
pop
loope
inc
jmp
cmpsl
cli
scas
lret
insl
cwtl
in
mov
out
mov
stos
or
faddp
stc
leave
pop
xchg
test
sbb
or
mov
mov
push
adc
cmp
sbb
fdivr
xchg
sti
push
mov
mov
jne
int3
fisttpll
jmp
sub
imul
push
push
push
or
mov
std
dec
sub
aas
mov
add
mov
bound
in
and
jb
push
inc
adc
inc
adc
fimull
out
mov
aam
cmp
push
dec
mov
cld
pop
imul
pop
or
dec
sub
dec
sbb
cmp
sbb
loop
xor
sbb
cmp
mov
adc
push
stos
loope
mov
lahf
int3
and
xchg
lret
mov
push
adc
aaa
or
dec
mov
ret
adc
jb
add
cmp
stos
imul
out
test
jecxz
or
pushf
aaa
fs
mov
outsb
adc
xor
lret
ljmp
xorb
loopne
ret
aad
insl
icebp
mov
ret
pop
aad
ret
icebp
add
leave
popa
lea
push
jnp
add
or
ss
jmp
sarb
xor
aas
adc
cs
shr
into
test
stos
inc
shll
lcall
ret
xchg
or
ja
popa
fwait
into
aaa
push
xchg
xchg
add
ficomps
imul
dec
mov
and
aaa
loopne
je
push
aas
mov
loope
inc
xor
pop
stos
xor
pop
sub
xchg
xchg
mov
xchg
cmc
push
push
loope
cmp
adc
mov
iret
lret
sub
dec
inc
mov
stc
les
into
pop
out
lret
in
in
nop
inc
lods
and
or
mov
cmp
mov
cmp
adc
pop
ja
sub
mov
icebp
test
in
adc
std
mov
in
gs
lcall
das
popa
push
lea
inc
rcrl
std
pop
aaa
cwtl
pop
add
test
scas
xchg
mov
inc
sahf
in
icebp
ds
rolb
pop
ljmp
cs
cmpsb
mov
jnp
mov
fnstsw
jo
sahf
cs
xchg
out
add
adc
xchg
in
dec
gs
xchg
fmul
mov
push
das
pop
shrl
loopne
stos
jmp
stos
arpl
sbb
clc
jae
outsl
icebp
sub
push
loope
stos
adc
nop
pop
sbb
or
xor
shrb
jg
xchg
or
test
sub
aaa
inc
inc
sub
popf
xor
adc
xchg
sbb
fcomip
dec
cmp
mov
sar
clc
lds
push
mov
repnz
mov
test
popf
sub
dec
ret
nop
adc
ret
in
gs
adc
dec
cld
sub
je
mov
add
push
xchg
pop
test
push
enter
push
mov
jmp
and
dec
add
inc
and
push
insb
jmp
clc
stc
cmp
xor
lds
jge
fists
imul
or
data16
nop
mov
je
sub
lcall
fisubrs
pop
stos
into
or
mov
mov
pandn
les
mov
loope
cmp
jno
sbb
mov
mov
cmp
pusha
test
pop
sbb
sar
push
clc
test
pop
loope
xor
ss
sub
lahf
adc
ds
daa
push
xchg
sti
insb
pop
into
inc
mov
lods
sub
xchg
and
mov
push
jnp
adc
loop
xor
aam
idiv
fldcw
fisttpl
iret
arpl
xor
leave
inc
mov
cmp
cmpsl
rcrl
call
fstl
jnp
pop
mov
jb
enter
jo
or
jecxz
in
popf
icebp
dec
les
es
or
aas
dec
mov
sub
mov
icebp
xor
jl
ret
xchg
ror
jge
xor
and
cmpsl
add
xchg
jp
lahf
dec
nop
das
fwait
stos
jb
mov
lods
test
movlhps
lret
cltd
mov
scas
xchg
mov
out
cli
gs
sbb
test
and
lahf
push
inc
cmpsb
arpl
sub
cmp
cmpl
mov
pop
mov
pushf
iret
ljmp
sbb
push
rorb
test
lcall
inc
mov
roll
nop
stc
lahf
push
jge
jns
push
jle
push
dec
sbb
scas
movsl
test
test
jnp
in
add
ret
loopne
scas
scas
bound
mov
mov
sub
lock
lcall
aad
xor
out
mov
dec
pushf
mov
scas
icebp
ja
add
xchg
es
cwtl
cmpb
ret
int
xor
add
insl
jl
dec
add
inc
push
inc
adc
iret
mov
stos
add
mov
lcall
or
pushf
in
cs
mov
push
xchg
and
and
dec
mov
jmp
adc
lret
push
pop
cmp
xor
sub
scas
fidivrl
cli
lret
jo
out
push
test
mov
notb
xor
mov
inc
mov
rol
xchg
dec
push
cmp
mov
into
fldl
lret
jp
stos
mov
add
and
push
loope
add
xchg
add
pop
sub
les
push
sti
pop
ds
or
int
mov
push
mov
sti
rcll
cmpsl
scas
dec
dec
sbb
mov
mov
mov
adc
icebp
out
mov
outsl
sti
out
xor
or
cmp
xchg
sbb
xor
nop
push
pop
xchg
sbb
std
rolb
adc
inc
rcrb
mov
xor
js
xor
xchg
fsubrl
lods
cmp
adc
int
pop
and
and
dec
inc
cltd
sahf
ss
and
pop
cmp
call
std
pushf
and
push
dec
dec
adc
mov
push
das
pop
loop
push
icebp
mov
hlt
xor
mov
shll
mov
dec
adc
ljmp
loope
idivl
mov
cmp
mov
pop
ss
or
xchg
mov
sub
test
xor
mov
sti
icebp
xor
xlat
outsb
cmpsl
dec
mov
daa
dec
sbb
ret
jle
or
and
sub
adc
mov
es
rclb
add
popf
mov
mov
jno
rclb
xlat
mov
push
dec
into
sub
pop
jne
mov
and
adc
pop
jne
sbb
jle
dec
push
loope
insb
call
ljmp
xchg
inc
dec
je
int3
sbb
jo
fbstp
lret
hlt
int
je
sbb
mov
fs
sbb
mov
xchg
nop
ret
das
add
add
popf
push
inc
inc
push
clc
mov
stos
xor
xchg
loop
pop
dec
rclb
or
cmpb
mov
dec
pop
and
cltd
rcrl
js
call
adc
xchg
fsubrl
jo
xchg
movsb
lods
out
sbb
lcall
icebp
push
xor
jns
fwait
mov
jp
pop
fbld
lods
lret
and
pop
lds
sub
jo
dec
packuswb
jbe
push
push
mov
std
dec
dec
faddl
aad
out
popf
jnp
push
sbb
xchg
cmp
pop
rorl
loope
jle
or
andl
je
add
inc
cld
mov
dec
popf
pop
and
addb
std
sbb
rolb
decl
cmp
rorl
into
fs
or
mov
arpl
ds
test
sbb
test
testl
scas
and
mov
jns
add
das
push
push
dec
gs
movsb
jo
sub
fstps
fsubs
arpl
mov
or
xchg
aam
mov
jns
xchg
ljmp
adc
or
scas
cmpsb
dec
jo
xor
loopne
mov
push
lock
sub
mov
xor
cld
pushf
mov
or
adc
mov
and
fildl
jne
push
test
xor
sbb
jle
nop
pop
leave
and
sbb
mov
inc
jecxz
mov
lahf
fdivl
mov
adc
bnd
dec
push
cmp
aas
in
sub
add
mov
movsl
adc
cmp
sub
cmp
mov
stos
pop
cmpsb
test
into
mov
add
lods
out
jbe
pop
cs
fbld
out
dec
shlb
dec
inc
push
sub
push
adc
lcall
push
dec
mov
jne
je
testl
int3
insl
cmc
fs
stos
pop
sub
mov
sar
out
lea
mov
xchg
xchg
rcr
cmc
lock
loopne
mov
jne
mov
pop
ret
or
jp
filds
xor
in
repz
dec
push
xchg
sbb
outsl
adc
int3
movsb
call
bound
xchg
aad
add
jbe
fmul
dec
dec
aas
adc
mov
cmp
sbb
ret
add
repnz
jb
icebp
mov
icebp
or
popa
bound
stos
jo
leave
push
xchg
or
flds
push
test
aas
in
dec
xchg
ss
pop
test
ret
lea
lock
push
mov
or
adc
std
shl
fimuls
sbb
nop
je
dec
loop
cli
fdivl
mov
repz
mov
jp
ljmp
es
push
xor
sbb
xchg
dec
cmp
fistl
dec
sbb
mov
inc
in
stos
inc
pusha
cltd
ret
jno
cltd
cltd
adc
imul
fstps
jns
data16
repz
out
pop
lock
lods
addr16
daa
and
mov
out
xchg
adc
lea
add
mov
push
rclb
adc
add
mov
stos
cli
mov
sbb
fucomip
jmp
icebp
jb,pn
xor
mov
jp
int3
push
push
mov
pop
out
sbb
add
mov
lea
lret
in
push
in
xchg
cltd
inc
mov
and
out
cli
fcompl
stc
mov
pop
mov
pop
adc
negl
jo
xchg
sub
movsl
int3
inc
mov
xchg
pop
xor
ljmp
adc
and
pop
xor
adc
fdiv
xor
or
mov
ffreep
lcall
push
cmpsl
in
mov
pop
xlat
insl
push
mov
js
add
add
mov
pop
out
sbb
sbbb
sbb
aad
shll
sbb
aad
add
in
cmp
fildll
sbb
daa
or
jno
loopne
and
inc
sub
loope
and
push
push
or
jle
mov
test
push
outsb
dec
cmp
jge
mov
mov
popa
pop
sahf
out
adc
out
js
repz
dec
rcrb
push
or
or
fidivrs
imul
stos
mov
add
aaa
popf
ljmp
mov
lods
mov
mov
dec
imul
rcr
or
pop
addl
cmp
and
push
jbe
dec
adc
ds
lds
lods
cmp
repz
jl
pop
pop
inc
xor
or
cmpsb
xor
les
sarb
testb
scas
xor
push
mov
test
and
xlat
cltd
mov
xor
xchg
fildl
push
bound
test
daa
out
xor
xor
pop
decb
xlat
cmp
push
imul
and
js
or
pop
movb
jns
lock
sti
out
push
stos
add
mov
jns
sbb
jecxz
and
outsb
pop
test
xchg
mov
jmp
arpl
lock
cmp
mov
movsl
jo
lret
aad
out
shll
sub
mov
dec
sbb
rcr
les
xchg
mov
mov
sbb
out
imul
mov
dec
lcall
xchg
mov
fldl2t
stos
jb
sbb
push
cmpsb
inc
lret
mov
loope
add
mov
mov
mov
outsl
dec
int3
sub
test
or
mov
sbb
rorb
dec
leave
jecxz
cmp
xchg
ds
sbb
mov
jns
and
mov
sbb
fsubrs
test
jl
jno
jo
jecxz
push
in
test
lods
imul
iret
xor
mov
inc
pop
je
popf
lcall
or
and
jo
test
loope
pop
and
mov
lea
adc
int
fbstp
adc
dec
pushf
pop
xchg
out
sub
inc
xor
aaa
rdmsr
jge
pushl
popf
cmpb
popa
add
xchg
cli
xchg
enter
movsb
sahf
mov
add
and
xor
loop
jns
add
test
stos
push
mov
sarb
les
adc
push
jecxz
insb
add
ret
and
pop
mov
lret
bound
das
or
mov
xchg
subl
dec
in
mov
imul
into
mov
mov
mov
or
push
pop
fcomp
fisubrl
or
mov
cmpsl
push
cmp
and
out
iret
sub
clc
or
mov
xor
xor
jo
fcompp
lahf
cmpsl
pop
mov
stos
lock
push
popa
cmpsl
push
add
sahf
cwtl
jmp
push
sbb
nop
mov
xchg
outsb
mov
jb
loope
mov
push
loopne
movsl
dec
js
das
dec
add
mov
out
xchg
lock
push
or
imul
popf
movsl
in
jp
daa
jne
imul
rorl
in
mov
push
or
pop
jae
mov
cmp
mov
jo
xorl
fstp
inc
in
call
negl
insb
mov
sub
pop
jnp
jns
jecxz
pusha
es
inc
xlat
ss
ror
dec
mov
inc
adc
or
fxtract
lea
mov
cmp
pop
test
subb
pop
pop
ret
test
fsubl
xor
mov
adc
mov
shlb
les
and
repz
jmp
aaa
mov
outsb
pusha
rorb
push
mov
xchg
mov
pop
xor
movsl
dec
adc
and
dec
hlt
in
pop
sub
push
mov
add
loopne
jmp
sahf
dec
stc
jo
fdivl
stc
lcall
cmp
loop
cs
jmp
push
mov
mov
ficompl
mov
aam
mov
sahf
cwtl
sub
jne
lcall
les
call
pop
movsl
mov
mov
inc
lret
inc
adc
ffree
outsl
out
sub
xchg
jle
pop
or
sub
rclb
insl
lea
mov
out
dec
push
mov
push
mov
loop
es
mov
xor
pop
sbb
rol
scas
shrl
aad
lcall
addr16
add
fnstsw
or
xchg
pop
les
fmull
inc
and
adcb
sar
sub
push
dec
fwait
jle
lods
scas
movsl
mov
stos
rcrb
push
insb
push
aad
pop
sub
dec
out
dec
jle
scas
mov
fnsave
mov
mov
pop
ret
incb
popf
push
dec
leave
lret
dec
mov
jp
lds
shlb
push
sahf
lods
add
pop
add
lret
dec
xor
and
or
xchg
loope
jae
loop
idivb
add
xor
inc
pop
arpl
inc
cmp
inc
cli
iret
loope
pop
jge
or
mov
in
or
xorl
adc
cmp
pop
mov
f2xm1
dec
inc
mov
push
gs
push
sbb
pop
hlt
out
fwait
movsl
fildl
es
fadds
pop
xchg
inc
adc
or
mov
dec
cwtl
ret
hlt
push
rclb
or
cwtl
cs
cmp
sbb
pusha
dec
mov
mov
or
add
pop
addl
stos
push
lods
icebp
push
sti
int3
push
mov
adc
mov
add
mov
pop
or
es
sub
add
test
aaa
lret
pop
cmova
cmpsl
test
ret
mov
or
pop
mov
mov
insl
mov
mov
ljmp
lock
in
mov
sbb
sub
xor
hlt
das
outsb
and
ja
loop
sbb
mov
fcomip
xor
insl
sarl
les
jl
dec
bound
pop
jo
ret
adc
pop
mov
pop
and
test
mov
lods
dec
mov
dec
daa
les
cmc
adc
push
dec
pop
inc
jo
lods
std
enter
scas
sahf
fdivs
outsb
or
test
daa
inc
into
icebp
cmp
scas
rcll
bound
xchg
mov
inc
push
lds
pop
xor
and
xchg
jns
push
stos
add
movsb
icebp
jne
aad
xchg
add
or
xor
lcall
pop
jb
mov
sub
add
jnp
inc
dec
add
push
push
push
push
mov
cld
jle
xchg
stos
jnp
xchg
xor
call
push
sbb
lds
loopne
jae
adc
push
outsb
gs
xor
sub
or
jnp
adc
adc
push
sahf
mov
out
push
fwait
je
mov
sbb
pushf
sbb
test
pop
data16
mov
pop
notl
out
cmc
pop
cmp
cmp
fs
jns
cmp
nop
pop
int
in
jns
cmc
cmp
and
es
jns
sbb
jb
dec
imul
shll
bound
sbb
pop
pushf
xchg
jnp
movsl
xor
insb
push
inc
out
cmc
mov
xor
mov
sahf
nop
aaa
cmp
xchg
or
ljmp
inc
fnstenv
mov
outsb
xchg
das
ss
mov
repnz
stos
sbbb
sbb
fadds
imull
js
inc
inc
jo
xchg
pop
adc
pusha
inc
sti
lret
leave
jns
jge
inc
mov
add
sti
mov
push
test
pusha
jmp
cs
inc
push
aad
mov
jb
xor
mulb
jns
test
int
xor
mov
push
push
in
in
jmp
adc
and
mov
xchg
sub
icebp
cmp
jecxz
and
and
dec
fistpll
inc
loopne
dec
pushf
push
push
scas
and
inc
jl
imul
pop
push
adc
pusha
fcompl
dec
int3
lret
xchg
lods
add
stos
mov
mov
fstps
inc
jle
cwtl
fsubs
rolb
cwtl
in
fs
dec
cld
shl
inc
outsl
mov
int3
cld
icebp
pusha
fisubs
mov
in
mov
popf
mov
cmp
in
addr16
out
mov
or
jp
test
scas
out
add
cli
adc
inc
cli
adc
push
repnz
ficoms
sahf
enter
lret
xchg
adc
push
das
sub
mov
mov
pushf
mov
mov
pop
sub
adc
mov
les
adc
out
and
push
adc
add
mov
inc
fmulp
leave
push
cs
fstpl
aaa
sbb
add
sbb
mul
mov
cli
xor
aad
cli
imul
inc
mov
es
loope
sahf
pop
mov
jge
push
pop
fsts
mov
bound
std
ljmp
sarl
mov
arpl
ficompl
dec
aas
popa
push
xchg
out
lret
xchg
jnp
add
dec
add
sbb
mov
cmc
insl
adc
cmp
dec
jge
rol
sub
subl
adc
lcall
leave
sub
and
pop
in
inc
jne
mov
jb
ljmp
out
add
daa
fcmovnb
repz
and
xor
mov
cmp
sbb
xchg
in
rorb
rcll
popa
fucom
cli
cmp
jo
mov
pop
pusha
or
and
dec
mov
je
jge
and
inc
cld
xchg
dec
mov
movl
cld
mov
or
pop
mov
popf
sub
cmpsb
inc
push
std
imul
fbld
cmp
lods
adc
jbe
fdivs
xor
or
into
scas
jp
out
fwait
cmp
aam
mov
fnstsw
dec
jg
ss
and
xchg
xchg
cmp
add
lret
or
rsm
es
andl
pop
loop
mov
xlat
adc
push
add
jne
ficoms
jns
xchg
pop
or
push
arpl
xchg
inc
rcll
mov
mov
push
loope
add
xchg
pcmpgtd
inc
sub
xchg
fistpl
int3
jns
add
add
orb
mov
push
dec
insl
mov
in
mov
cmpsl
std
sub
fildll
mov
jge
popa
pop
sbb
cmp
insb
jno
jge
adc
orl
mov
xchg
bound
and
pop
cmpsl
pop
inc
loop
mov
rorb
mov
and
push
std
inc
mov
dec
cmp
js
lods
int
xchg
cld
movsb
mulb
lock
shrl
loope
mov
cmp
xchg
ljmp
in
push
mov
mov
les
pop
cmp
dec
push
lods
out
aad
lods
cmp
mov
mov
sahf
vpslld
cld
dec
shr
int
inc
out
cmp
xor
gs
lahf
and
adc
sub
lret
aam
insb
subb
push
divb
pop
js
outsb
push
mov
inc
lock
cmp
cwtl
or
fstpl
mov
mov
outsb
jne
mov
xor
ds
pop
jl
icebp
ja
xlat
mov
mov
mov
mov
js
and
pop
pop
pop
pop
divb
jno
lea
lahf
ficoms
inc
push
pusha
lahf
mov
mov
repz
sub
outsl
sbb
aam
and
jne
jns
xchg
push
push
sbb
mov
insl
call
ds
fbld
pushf
test
rcrb
sti
mov
sbb
xchg
jae
and
mov
pop
sbb
and
lcall
cmp
cmc
pop
sbb
fidivs
loopne
pop
xchg
push
sbb
pop
jb
push
rcrb
inc
mov
fisubrs
dec
mov
mov
in
sub
loopne
movsl
inc
rcr
icebp
es
inc
icebp
mov
je
adc
ret
push
sbb
mov
mov
mov
addl
mov
inc
lds
cltd
or
enter
add
push
pop
and
add
jae
push
cmp
xchg
inc
test
add
xchg
mov
into
scas
sub
inc
in
repz
jle
xor
in
js
add
repnz
out
dec
adc
and
jmp
xchg
loope
jl
push
orb
adc
lods
leave
test
cmpsb
lahf
das
sub
jo
cli
and
add
lods
outsl
inc
lock
fidivs
sub
push
inc
sahf
dec
pushl
adc
ljmp
or
push
and
jge
loop
nop
mov
out
dec
je
xchg
mov
xchg
fistps
imul
out
pop
cli
sub
loope
fiaddl
push
pushf
and
push
stos
dec
pop
jns
mov
mov
push
xchg
pop
adc
cmp
jl
call
dec
dec
adc
clc
push
lcall
mov
mov
movsl
mov
cmpsl
lods
stc
sbb
inc
sbb
dec
pop
stc
notl
movsb
dec
pop
lret
mov
cmp
out
inc
andb
dec
ljmp
mov
fcmovbe
jecxz
popf
jbe
jmp
sbb
fisttps
push
adc
fstl
outsl
adc
ja
loop
scas
mov
pushf
test
xorl
lsl
xchg
pop
pop
into
repz
hlt
push
cltd
cmp
jmp
fucomi
pop
imull
mov
adc
test
mov
testb
mov
push
addl
stos
lds
test
sbb
mov
lods
cs
lods
ss
mov
dec
push
scas
shll
mov
rcrl
cmp
dec
xor
cli
fiaddl
fnsetpm(287
stos
add
jns
popl
mov
sub
int
in
je
test
scas
cmp
mov
nop
dec
jg,pn
mov
sub
push
inc
or
mov
loope
adc
mov
jbe
lea
cld
jnp
int3
pop
sbbl
scas
pop
sub
leave
sub
call
fadd
in
int
jnp
xor
sub
loopne
ljmp
pop
or
xor
inc
cmp
adc
scas
sbb
enter
mov
pop
mov
loop
pop
inc
sub
xchg
loopne
out
xor
jne
cmpsb
int3
dec
test
sub
jp
mov
push
popa
mov
fcompl
in
xor
jbe,pn
xchg
lock
mov
test
sbb
or
adc
push
imul
add
jns
jb
les
push
cmp
mov
sub
inc
and
call
adc
repz
scas
sub
repnz
dec
mov
outsl
push
add
int3
pop
aas
sub
push
sbb
cmpsb
mov
xor
cmp
adc
in
sbb
popf
jo
inc
xor
inc
test
subl
stos
sbb
es
roll
mov
inc
lahf
jns
dec
scas
scas
or
in
clc
mov
cwtl
xchg
xor
lods
xor
adc
mov
js
test
std
ss
je
inc
ss
test
xor
mov
shl
ljmp
movsl
xchg
add
std
fsubs
fdiv
js
jle
ljmp
inc
std
dec
js
sbb
sbb
mov
gs
rorl
add
mov
dec
push
cmp
mov
pop
in
inc
pop
out
je
sahf
repz
shrl
mov
arpl
fldt
pop
push
std
movsb
push
in
inc
aas
cmpsl
dec
leave
mov
push
aaa
cmp
fisubl
add
pop
lods
pop
mulb
lods
movsb
sbb
aad
xor
roll
sub
or
inc
push
hlt
xor
iret
mov
aas
or
pushf
pop
push
dec
imul
sub
lods
push
mov
xor
outsl
shrb
arpl
loope
cmpsb
fstp
and
inc
shlb
in
cmp
jo
and
dec
add
insl
lcall
xchg
movsb
push
adc
loop
adc
jmp
out
push
addl
sbb
mov
cltd
pop
iret
int
cmc
mov
cmp
mov
mov
nop
fldcw
dec
cld
in
xor
mov
sub
xchg
sub
or
adcl
dec
fidivl
pop
dec
pop
ss
scas
xor
test
orl
jg
cltd
fsubr
sbb
leave
loope
inc
fmuls
sahf
lods
mov
push
mov
aad
push
fdivl
std
fcoms
add
or
int
bound
mov
inc
test
arpl
xor
test
push
adc
pushf
adc
xchg
aas
mov
jnp
push
in
scas
xchg
pop
bound
pop
aad
dec
icebp
xchg
popa
loopne
clc
push
sub
js
xchg
mov
xor
mov
or
sbb
bound
in
insl
cli
mov
fldl
repz
sub
aad
xchg
addl
sbb
inc
pushf
iret
cs
push
mov
sub
xor
int
test
sbb
aam
bnd
rcr
or
test
mov
jnp
xchg
push
or
test
and
iret
xchg
pinsrw
lock
jbe
ljmp
dec
fldcw
ja
imul
into
push
imul
mov
mov
call
mov
mov
gs
add
es
lret
arpl
scas
scas
sbb
push
daa
imul
mov
xchg
mov
orl
fldenv
mov
mov
xor
sbb
pop
push
std
sahf
ret
arpl
and
mov
into
scas
fiadds
sarl
mov
ja
data16
jmp
and
arpl
or
or
dec
movsl
xchg
mov
sub
imulb
ss
mov
mov
daa
mov
adc
cmpsb
popf
adc
call
loop
cli
pop
pop
pop
jecxz
mov
pop
or
mov
add
xor
xchg
cmc
jae
fwait
jnp
xor
repz
cmp
stos
sub
shlb
scas
or
das
cmp
ss
in
jb
stc
adc
cwtl
flds
js
xor
ja
fiadds
jecxz
xlat
mov
mov
es
sub
fnstsw
fildl
or
add
mov
and
pop
mov
push
sbb
rcr
xor
and
aam
lods
pusha
xor
sarl
roll
cwtl
add
adc
ficoms
mov
add
pop
pop
call
mov
icebp
in
addr16
sahf
cli
fisttps
sub
xor
pop
ret
icebp
mov
xchg
lods
loopne
leave
xchg
lods
inc
ror
roll
dec
push
push
into
sbb
add
int
or
jecxz
icebp
imul
and
out
and
pop
addr16
int3
pop
xchg
push
xor
sub
sub
cmp
sbb
and
add
sub
rcr
or
repz
outsb
xchg
xchg
lea
fwait
mov
mov
mov
das
std
outsb
out
mov
mov
not
sub
pop
mov
fidivrl
mov
sbb
and
dec
cmpsb
jge
and
popa
into
test
xchg
aas
cmpsl
add
and
loope
rolb
and
and
add
cmpsl
shlb
cmp
xchg
lret
xchg
lret
test
or
hlt
adc
inc
daa
mov
div
push
jae
sub
andb
adc
cmpsl
push
push
lret
cltd
lcall
jmp
mov
imul
sbb
mov
push
sar
xchg
or
test
stos
sub
push
pop
std
cld
pop
sub
push
enter
or
fcmovnu
fdiv
or
leave
sub
mov
xor
test
stos
incb
movsl
sbbb
aas
mov
pop
pushf
das
daa
or
add
cmpsl
dec
mov
push
out
iret
add
popa
dec
insl
mov
mov
inc
cmp
xor
sbb
lahf
inc
push
ret
inc
fmul
pop
das
ficomps
daa
test
mov
cmp
xchg
pop
mov
mov
xor
xor
jl
xchg
cmpsb
mov
add
add
in
dec
inc
test
addr16
gs
test
std
inc
imul
add
lret
frstor
jle
das
cmpsl
mov
cltd
mov
aad
lea
inc
sar
fwait
lods
mov
clc
xchg
xchg
test
jge
or
jecxz
mov
inc
test
push
stos
imul
mov
pop
cli
sub
cmp
inc
aam
arpl
dec
mov
scas
or
sahf
stos
scas
repz
clc
dec
fists
lret
shll
out
mov
stc
ror
xor
mov
or
out
loop
ror
sbb
adc
adc
sbb
sbb
cmpsl
inc
ljmp
out
jne
mov
js
or
inc
jae
sbb
popf
insl
xor
cmp
adc
in
mov
movsb
jo
mov
es
jnp
or
roll
int3
or
dec
xor
mov
repnz
stos
out
sbb
pop
mov
sbbb
push
dec
or
add
and
repnz
mov
dec
inc
sub
arpl
cmp
call
sbb
sub
or
mov
fistl
mov
sti
jg
mov
push
xor
loope
sbb
int3
mov
jae
in
jp
push
insb
pop
jp
cmp
rorl
adc
push
ucomiss
les
inc
lds
mov
shlb
insl
or
adc
lret
adc
fwait
push
aas
ret
stos
into
pop
and
xchg
add
es
test
repnz
loope
mov
test
cmp
pop
loop
mov
sbb
mov
push
adc
cmp
clc
andl
icebp
outsl
stc
pop
jp
fs
shl
mov
sub
fldt
cmp
xorb
jmp
jle
enter
sti
pop
int
imul
fwait
xlat
shll
cmp
test
xor
and
and
sbb
lret
mov
mov
jge
outsb
jns
sahf
out
in
adc
out
cwtl
mov
loope
out
pop
outsl
xchg
lods
push
push
jnp
and
sbb
mov
push
je
xorb
out
mov
pop
rol
sbbb
je
mov
out
aad
inc
adc
iret
cmp
dec
pop
and
push
aad
jns
or
cmpsl
sub
mov
cmp
cwtl
mov
imul
es
ror
mov
je
shrb
dec
cmp
mov
outsb
test
or
loope
adc
sbb
pusha
imul
mov
repz
loopne
leave
push
mov
adc
addl
pop
mov
pop
jbe
lcall
je
mov
ds
add
cmpsb
sti
xchg
pop
adc
sti
test
push
sub
inc
xor
imul
sbb
and
and
lock
xchg
sbb
push
jle
orl
enter
mov
mov
out
or
mov
and
pop
or
stos
clc
jmp
cmp
loopne
cmc
adc
dec
aas
pop
mov
lock
xor
inc
data16
icebp
lock
fidivl
mov
bound
pop
in
shlb
ret
ret
cmp
pop
mov
push
inc
mov
in
fistps
sub
xchg
gs
or
ret
sub
cmpsb
test
sbb
pop
xchg
push
xchg
adc
fimull
fwait
or
push
xchg
xchg
sub
dec
sub
mov
out
aaa
mov
push
add
push
cmp
std
mov
cmp
jae
mov
xchg
loope
dec
pusha
and
cmp
dec
push
in
ret
inc
push
push
es
pop
jle
movsl
sbb
dec
mov
leave
int
sti
pop
fsubrs
out
enter
jb
jb
xchg
xchg
addr16
ret
xchg
repnz
push
pop
jge
mov
add
mov
loop
std
sbb
xor
sbb
jmp
rcrb
sbb
rcr
sti
cmp
mov
lods
sub
push
adc
jae
inc
arpl
fsubs
mov
out
ljmp
pop
mov
inc
sahf
cltd
popa
stos
sbb
std
scas
sub
and
xorl
out
xchg
push
hlt
mov
fsubrs
xor
rcrl
mov
push
and
dec
cmp
pop
aam
xchg
in
std
cs
scas
lret
hlt
pop
scas
xor
fld
and
loope
adc
mov
cmp
or
or
add
popf
cmp
cmp
and
jg
xorl
sub
sub
sub
shrb
ficompl
push
mov
loopne
fisubrl
repz
rorb
or
lahf
inc
cmpl
test
dec
ss
shr
inc
jecxz
push
leave
and
push
in
shlb
lods
xchg
inc
xchg
cmp
mov
mov
pushf
push
cs
mov
pop
cmp
jne
inc
and
dec
lret
mov
push
bound
lea
or
or
mov
out
sbb
jl
fstpl
mov
imul
xor
and
xchg
shlb
mov
pop
and
lahf
fldl
inc
xor
inc
fsts
push
or
xchg
mulb
hlt
outsb
mov
inc
jb
idiv
das
fwait
sbb
out
hlt
push
mov
addr16
fidivrl
divb
sbb
or
xorl
xchg
clc
mov
or
mov
pop
inc
flds
mov
loope
xchg
adc
or
sbb
xor
inc
pop
cmc
loop
mov
adc
mov
addb
sbb
inc
fs
fnstsw
dec
xor
popf
mov
add
les
out
and
jmp
and
mov
in
add
cmp
out
adcl
push
push
mov
adc
pop
shlb
add
sarb
xchg
popf
lock
in
shl
gs
sub
adc
pusha
xchg
into
adc
lahf
fstl
arpl
imul
jg
mov
inc
sub
sbb
ja
mov
mov
testb
movsl
cmp
and
lods
and
inc
minps
xchg
leave
mov
jbe
repz
movsb
mov
xchg
push
jmp
cmpsb
sbb
repz
ret
shl
sarl
repnz
cmp
cmp
outsb
popf
jbe
adc
mov
nop
cmpsl
xlat
xchg
add
repnz
sub
into
or
aaa
xchg
ret
pushf
stos
pop
sbb
cli
sub
sub
sub
enter
cmp
xor
insl
cmp
popa
lock
pop
cld
in
mov
add
jle
sahf
jg
sbb
into
std
jg
xor
inc
push
mov
outsl
add
cmp
sbb
push
aam
outsl
ljmp
int
movsl
popf
cmp
jb
outsb
ficomps
aaa
inc
mov
ljmp
ret
cmp
push
pusha
mov
jno
cmp
das
nop
adc
dec
pushw
lods
push
and
fs
sub
mov
imull
je
and
and
loope
test
add
and
bound
xchg
shlb
cwtl
orb
dec
insb
fldl
push
insl
or
cmp
cmp
adc
mov
add
push
in
andl
imul
mov
rol
cli
jo
daa
inc
inc
xlat
jb
adcl
jns
mov
scas
rcrb
cmp
jge
out
jns
pop
mov
daa
sbb
add
ss
imul
adc
sub
mov
insl
dec
dec
push
data16
rcrb
xor
ret
in
aad
test
xchg
lds
sbb
lock
popf
nop
xchg
dec
pop
rcl
test
sub
cltd
out
dec
sub
inc
sub
fsubs
fucomip
push
mov
jle
pop
cltd
sbb
add
insb
sbb
pop
scas
mov
xor
or
sbb
mov
out
bound
inc
push
aaa
xor
mov
inc
push
adc
jbe
cmpsl
js
insl
push
cmpsl
mov
sub
shlb
mov
jo
and
mov
add
sbb
mov
insb
es
aad
nop/reserved
stc
ret
xor
jge
jno
inc
xchg
unpckhps
scas
jo
dec
dec
cmc
dec
loopne
adc
jmp
and
mov
cmp
test
lret
jae
or
loop
mov
pslld
cs
cmpl
xor
xchg
loopne
das
push
cltd
xchg
inc
fadd
or
mov
or
aas
in
scas
popl
mov
repz
das
iret
test
repz
es
js
xchg
test
sub
or
mov
push
and
xchg
jge
gs
jo
mov
in
sbb
jle
aad
mov
rclb
pop
mov
popa
sarb
xchg
mov
lds
push
or
mov
adc
pop
mov
repnz
jns
jo
sbb
inc
lods
iret
stc
mov
cltd
inc
out
loopne
dec
lahf
sub
add
or
lods
pusha
cltd
rcrb
pop
cld
pop
pop
imul
jle
adc
lahf
repz
sbb
adc
movsb
cli
movsb
aas
xchg
dec
cmp
rorb
movsl
iret
nop
mov
xchg
push
mov
sub
scas
stos
cmp
and
mov
dec
loop
and
movsb
pop
and
jp
push
add
adc
aaa
std
add
cld
add
mov
sub
dec
outsl
sub
mov
and
mov
cltd
fsubs
negb
shll
adc
mov
aaa
sub
xor
test
insb
bound
push
sbb
adc
mov
add
js
out
push
int3
gs
inc
lahf
mov
int
ret
mov
cmp
push
into
push
push
adc
sbb
push
pop
test
lahf
lahf
cmp
into
sub
jle
cld
mov
xchg
aas
xor
jle
mov
das
jno
add
sbb
cltd
push
adc
xor
xor
mov
add
and
and
test
inc
jo
scas
lock
insl
add
mov
and
xor
popf
and
or
push
lahf
cwtl
das
mov
into
out
pop
pop
test
into
fs
lea
xchg
aaa
insl
xlat
lahf
je
pop
fsubl
push
shlb
or
mov
add
gs
mov
inc
and
mov
jae
sahf
and
int
mov
pop
xchg
arpl
cld
push
popa
and
and
out
js
lahf
xchg
bound
loop
div
dec
jb
dec
in
xor
dec
sub
pop
xlat
in
out
pop
aas
int3
pop
iret
int3
cld
mov
sarl
lahf
jnp
aas
mov
addr16
or
mov
xor
leave
stc
ds
push
flds
inc
push
cmp
insl
repnz
jo
cs
repz
ud2
enter
aad
fisubl
lcall
add
scas
les
frstor
mov
pop
or
pop
and
imul
cmp
std
xchg
pop
pop
clc
mov
popa
mov
or
or
in
loop
mov
les
daa
mov
mov
loope
mov
in
icebp
shlb
sbb
sub
scas
dec
dec
cltd
xchg
xchg
jl
jg
cmpsl
call
bound
or
popa
adc
pop
pop
cmp
xchg
mov
dec
xchg
cld
push
sahf
cmp
loope
cmpsl
xchg
mov
in
dec
mov
and
push
jo
sbb
mov
ds
push
sbb
cmpl
fists
repz
rcl
xor
xchg
mov
sar
outsb
gs
and
flds
daa
lahf
in
outsl
cli
cmp
shll
aad
adc
nop
imulb
dec
pop
cmp
movsb
ds
test
int
add
mov
and
mov
inc
push
or
fsubr
popa
cli
mov
mov
jno
out
or
leave
out
push
jne
leave
and
cmp
std
es
arpl
lret
or
fs
or
shrl
shr
cmp
lock
fiadds
decl
lods
mov
iret
or
mov
inc
js
cmp
in
push
rolb
jne
ljmp
out
cmp
push
mov
mov
pop
ljmp
jmp
clc
out
add
jge
xor
imul
add
psubsb
xchg
xor
testb
fcmovb
ret
in
push
sar
xor
or
jmp
nop
iret
and
rclb
call
xor
pop
jg
pop
ds
xchg
lahf
mov
and
adc
cmp
fdivl
stc
sbb
xchg
outsb
jns
pop
dec
adc
mov
push
or
fcmovnbe
mov
and
insl
push
adc
xchg
sub
int
mov
nop
sbb
or
add
mov
sub
mov
jns
test
inc
xchg
scas
mov
out
fwait
rcl
push
into
cmp
scas
inc
or
lods
sbbl
push
mov
push
mov
movsl
mov
stos
int
adc
sti
inc
shll
sub
aad
mov
jle
enter
jnp
inc
hlt
andb
cmp
lods
xor
xchg
pop
jmp
sbb
dec
mov
mov
or
sbbb
jne
xchg
adc
or
mov
rolb
adc
movsb
loopne
sahf
shll
push
dec
addl
cli
lods
mov
cmp
add
mov
push
cmp
test
push
dec
push
jae,pt
mov
nop
cmp
mov
xchg
mul
jb
push
jecxz
nop
jecxz
cmp
or
cmc
pop
das
bound
cld
int
sbb
cwtl
mov
jnp
dec
outsl
push
cmc
mov
push
inc
sbb
outsb
push
pushf
xor
dec
sbb
repnz
outsl
out
push
leave
jbe
adc
adc
icebp
lahf
repz
push
nop
or
jle
mov
outsl
push
fiadds
adc
lcall
sub
daa
fisttpll
pop
ret
cmpsb
push
xchg
mulps
or
sub
negl
jb
lcall
jmp
jns
mov
pushf
inc
pop
std
mov
xchg
sub
mov
jns
mov
icebp
outsl
adc
pop
or
repnz
mov
inc
enter
std
dec
pop
fsubr
mov
scas
cli
adc
lea
push
and
addl
jmp
mov
enter
cmp
and
mov
aam
jns
dec
pop
lret
movsl
pop
pushf
xor
dec
data16
push
aam
add
je
clc
out
jno
sbb
stos
outsb
enter
mov
test
jmp
mov
xchg
rcrb
or
stos
dec
adc
push
dec
mov
mov
cwtl
lahf
xor
push
mov
test
int3
mov
lcall
mov
out
nop
mov
mov
push
push
stc
pop
test
mov
sub
inc
cmp
es
imul
sarl
sbb
into
mov
fcmovnb
mov
jns
daa
mov
sbb
add
mov
xor
mov
fdivr
xchg
mov
aaa
leave
cmp
popf
imul
lahf
stos
push
sti
push
into
push
mov
push
pop
dec
cmp
or
add
dec
pop
or
imul
sub
push
ficomps
gs
fcomip
push
or
xchg
sbb
test
lcall
in
jp
lahf
test
adc
mov
ja
push
mov
scas
je
daa
ret
xor
sbb
mov
inc
outsl
cmp
les
or
sarl
and
xlat
lods
into
xchg
aas
jno
push
add
mov
dec
cmc
and
pop
and
push
loop
jo
mov
out
jmp
push
mov
pop
jecxz
pop
mov
and
lcall
out
inc
adc
fistl
jge
std
xchg
jb
shr
cmp
stos
add
int3
loope
pop
push
adc
jb
mov
cmp
cmp
push
sbb
sahf
or
push
adc
scas
notb
call
lock
fdivs
into
ret
add
jnp
sub
sub
popf
and
or
outsb
and
sbb
roll
adc
bound
jle
mov
divb
add
fs
rcll
insl
push
sub
add
dec
out
sub
cwtl
pop
push
lret
fidivrs
mul
mov
sub
leave
cmp
xor
xchg
es
or
push
jg
xchg
aas
js
add
cmpsb
insb
fistl
enter
jno
insb
sbb
jae
xor
in
popf
std
filds
es
lds
adc
shll
out
insb
ljmp
dec
orb
mov
ret
ret
lods
lret
jbe
sub
xor
jmp
mov
xchg
mov
sbb
das
mov
rclb
lahf
mov
pop
push
in
repz
sbb
mov
or
xorl
in
xor
mov
mov
or
ja
push
es
test
rolb
lds
cmp
in
cmpsl
outsb
fisubrl
pop
mov
pop
repz
or
shll
test
mov
nop
or
mov
loope
out
ds
push
inc
xchg
adcb
lea
jmp
or
shll
xchg
ror
fldl
and
dec
mov
mov
mov
push
shrb
cmpsb
orb
jg
jb
push
jp
adc
mov
mov
aaa
shlb
in
mov
es
mov
ljmp
std
aaa
int3
jno
pop
jge
sbb
nop
std
adc
addl
pop
push
push
inc
mov
adc
cmp
repz
fstps
leave
or
jb
jno
xorb
cmp
outsl
mov
sub
nop
repnz
stos
insl
add
ret
loope
xor
ljmp
fcompl
inc
adc
xor
fcoml
adc
cmc
inc
scas
inc
inc
sahf
lea
lcall
mov
mov
pop
mov
ficompl
addr16
aaa
pop
sub
imul
lea
ja
imul
sahf
test
data16
dec
jmp
and
push
add
fstps
out
xor
inc
in
pop
jl
jge
xchg
jge
adc
mov
or
sbb
or
inc
ljmp
lods
cmpsl
xor
stc
ljmp
add
dec
mov
mov
imul
sbb
cmp
cmp
xchg
mov
mov
lods
ljmp
sub
and
or
cwtl
mov
lret
inc
mov
testb
push
xchg
outsb
shlb
shll
ja
ljmp
dec
mov
dec
mov
js
xor
call
movsb
fists
sbb
out
push
imul
int3
rorb
mov
dec
sub
call
cmp
cmp
sub
ret
mov
and
jne
cli
dec
clc
lock
inc
stos
mov
add
jl
and
repz
xor
rorl
insb
arpl
sbb
xchg
mov
lods
jp
mov
repz
cli
adc
sbb
mov
lds
outsl
lahf
out
jbe
aaa
push
jmp
or
in
les
or
sub
std
imul
lds
shlb
orb
das
test
jo
rcrb
retw
inc
mov
loop
add
sti
adc
or
inc
push
stc
cld
imul
add
outsl
sub
in
lock
mov
test
jo
in
jnp
cwtl
sbb
adc
clc
mov
xchg
sub
mov
and
into
test
shll
loopne
push
or
xchg
jmp
jl
dec
push
insl
cmp
xor
stc
cmc
and
cltd
popf
test
aaa
push
arpl
mov
insl
leave
xor
cmp
icebp
jae
xchg
pop
dec
lea
add
lock
in
mov
inc
mov
pop
rcrl
fwait
gs
dec
js
sbb
shl
mov
scas
dec
rol
pop
add
cwtl
cmpb
xchg
adc
xlat
mov
mov
and
jbe
in
and
add
sbb
cmpsb
enter
iret
xchg
mov
orb
mov
mov
stc
insl
xchg
leave
mov
cmc
xchg
mov
or
xchg
xor
jae
jb
mov
fiadds
push
mov
inc
pop
test
pusha
aaa
ja
movsl
lcall
fwait
mov
jns
push
pop
cmpsb
repz
mov
adc
std
pop
mov
ljmp
scas
cmp
adc
or
fcmovnb
test
cmovs
sub
sub
insl
data16
lods
xchg
jbe
jne
and
push
inc
fs
and
dec
and
mov
testl
add
dec
fadds
push
add
jnp
out
gs
inc
jmp
xor
and
ret
repnz
xchg
inc
jo
push
pop
rep
push
cltd
cmpsb
nop
or
lock
outsl
xor
lock
push
sbb
inc
ficompl
dec
xor
xor
jge
pushf
fwait
clc
out
daa
jno
lds
notl
dec
ljmp
inc
aam
popa
stos
push
shlb
sub
aam
sti
pop
pop
add
sar
sub
xor
lea
mov
jo
push
xchg
cltd
and
lods
cmp
testl
lods
ljmp
mov
aas
cmp
shll
sbb
mov
es
je
jne
js
mov
inc
dec
pushf
xor
push
cmpsb
imul
xchg
jnp
cmp
leave
push
inc
pop
xor
sahf
repnz
inc
jl
loop
push
add
popa
fdivr
out
inc
fs
pop
mov
fwait
sti
loope
jecxz
dec
pop
xchg
scas
or
xor
inc
ror
movsl
mov
or
mov
sbb
nop
sub
dec
push
lods
and
pop
mov
adc
dec
cmpsl
mov
daa
jmp
fs
notb
pop
shl
inc
dec
test
fdivrl
cmpsb
mov
mov
sbbl
movsb
sbb
fs
or
icebp
out
hlt
sti
bound
add
and
jno
cmp
fwait
mov
mov
stos
mov
mov
xchg
lret
jp
repnz
fidivrl
rcl
adcb
push
sub
into
cld
jne
stos
xchg
and
and
jge
stos
inc
mov
scas
lret
cmp
push
push
pop
lcall
scas
xchg
mov
repnz
dec
xchg
or
data16
scas
add
dec
fs
rorl
jno
mov
out
inc
data16
jecxz
stc
push
and
pop
subl
add
cmp
mov
in
in
jmp
fisubrs
mov
cmpsl
cmp
push
fsubr
loope
inc
xor
pop
mov
lods
rcrb
cmp
call
test
pushf
cld
ss
cmpsb
pop
add
pushf
jmp
cmp
mov
mov
out
inc
mov
mov
arpl
jp
sub
xchg
or
fs
mov
enter
loop
lret
leave
xor
loopne
inc
movsb
pop
xor
inc
insl
aas
shl
sbb
mov
mov
cmp
jno
mov
mov
mov
inc
testb
dec
mov
outsb
mov
push
imul
cmc
out
fdivrl
or
push
mov
fs
hlt
repz
and
xchg
lea
push
jmp
inc
hlt
std
das
dec
mov
insb
loop
jecxz
out
xchg
pop
pop
filds
pop
test
fidivl
cmp
in
fwait
mov
push
loopne
xor
imul
fisubs
push
in
jno
mov
dec
and
daa
int3
int
in
aaa
das
push
jg
cmp
inc
cltd
js
mov
std
xchg
xor
out
pop
pop
sti
arpl
rcrl
dec
inc
ss
jnp
and
mov
out
cmp
jns
mov
and
dec
mov
enter
popf
sbb
jb
lods
ss
stc
popa
push
mov
pop
rolb
sti
xor
arpl
fmull
and
xchg
sbb
cmpsl
inc
push
sbb
repnz
xor
aad
dec
addl
xchg
adc
mov
jae
inc
iret
ss
pop
add
mov
dec
icebp
and
mov
or
shl
or
inc
je
sub
mov
sbb
or
movsb
fimuls
and
jg
fsubr
adc
push
pop
popa
int3
fists
cld
cmp
sub
push
mov
add
push
loope
stc
mov
ljmp
and
fcoms
in
cmp
mov
ljmp
mov
je
hlt
sub
inc
fisubl
or
pop
mov
mov
sub
test
xor
jnp
xor
push
pop
push
insb
add
insl
pop
dec
or
test
jne
add
iret
inc
xchg
ss
cmp
mov
pushf
into
or
andl
ds
adc
ds
sbb
push
ret
inc
cmp
sarl
push
xchg
mov
lret
lea
ss
imul
lock
inc
cmpsl
les
add
mov
sbb
loopne
lock
xchg
mov
jp
popf
adc
push
sub
jl
les
inc
arpl
lock
or
bswap
adc
mov
xchg
jecxz
test
les
fisttps
sbb
data16
orb
out
outsb
stos
hlt
je
sub
nop
inc
push
push
mov
in
mov
adc
lret
cmc
lret
shlb
decb
orb
push
xor
repz
inc
xor
lods
or
mov
enter
mov
lods
mov
jb
and
std
push
add
inc
fs
out
jmp
or
or
adc
add
jo
push
jo
mov
movsl
and
rolb
inc
js
add
cmp
das
leave
jle
gs
jne
cs
ret
pop
sarb
mov
pop
and
adc
aad
and
push
cli
add
xchg
inc
movsl
xchg
jno
adc
mov
mov
and
fxch
mov
push
out
clc
das
hlt
mov
addr16
mov
es
mov
push
xor
adc
ljmp
jnp
adc
outsb
sahf
leave
mov
jl
incb
push
int3
lret
out
pcmpeqd
mov
jle
sbbb
out
inc
mov
sub
into
push
push
addr16
ret
jno
pop
outsb
pop
push
stc
mov
mov
aaa
jg
and
jmp
pop
test
xor
pop
add
xchg
aas
daa
imul
pop
and
dec
mov
xor
cs
int3
lock
push
or
in
cwtl
int
cmp
sbb
int3
fisubrs
xlat
push
add
sbb
lcall
push
in
sahf
push
scas
cs
mov
sub
mov
pop
jle
push
pop
testb
pop
testl
push
les
adc
mov
mov
cmpsl
mov
sahf
stos
jge
push
adc
cmpsl
jl
inc
pop
xchg
stos
sub
mov
pop
es
aaa
cmpsb
out
cmp
mov
fmull
push
imul
jo
ret
int
mov
sbb
and
add
rolb
jle
or
mov
lcall
mov
xor
aad
pop
insb
mov
mov
loop
lods
stos
xchg
fs
jmp
out
imul
movsb
out
xchg
and
xor
fists
pop
add
jecxz
mulb
pop
add
or
lret
cmp
mov
jg
push
enter
mov
xor
js
sbb
cld
push
mov
xor
mov
fmuls
xchg
mov
loop
cmp
scas
pop
fildl
mov
insl
lret
out
iret
mov
mov
out
and
pop
shr
sub
sahf
or
cmpsl
mov
adc
sahf
cmp
dec
test
unpcklps
pop
inc
shll
inc
loope
dec
add
loope
sub
nop
xchg
adc
fldenv
xor
cli
xchg
scas
shll
aad
sbb
enter
sbb
enter
outsl
push
fwait
xchg
nop
push
push
dec
adc
mov
mov
sbb
shll
jle
test
xchg
cmp
movsl
xchg
sbb
aad
out
gs
dec
pop
jne
mov
jbe
adc
adc
movswl
xchg
popf
ret
jo
out
xchg
pop
or
data16
mov
dec
jbe
lahf
cld
and
pushf
dec
cmc
xor
jb
pop
jl
sarb
ficompl
jbe
or
or
inc
xor
jle
adc
inc
fs
ret
add
xor
out
ds
mov
int3
mov
aas
and
test
mov
add
inc
xor
repz
loopne
add
fistpll
add
cwtl
incl
popf
aaa
sbb
clc
sub
inc
add
and
dec
cmp
mov
dec
pop
mov
imul
flds
mov
testb
xchg
cmp
mov
or
inc
popa
push
insl
addr16
test
js
jbe
pop
int
sbb
pop
inc
xchg
pop
push
push
and
clc
fcmovb
in
sbb
sub
in
cmp
idivl
imul
mov
push
xor
pusha
pusha
popa
mov
cs
push
repnz
mov
popa
ret
jl
mull
cs
push
xor
mov
es
cmp
cmc
data16
pop
mov
and
push
dec
leave
inc
or
loopne
jo
jae
and
leave
cmp
pop
out
scas
and
repz
and
insl
adc
adc
out
cmp
fucomi
ja
add
sbb
repnz
data16
pop
popl
sbb
add
int
add
add
rcl
mov
dec
cmp
stos
lods
dec
xchg
in
fildll
mov
jo
idivl
jmp
cmp
sbb
xor
cs
xchg
jbe
inc
cmpb
xor
xor
repnz
mov
xchg
dec
sahf
xchg
lds
arpl
nop
mov
fidivs
int
out
repnz
cmp
pop
and
fadd
loope
and
out
push
shll
sbb
lret
cmc
clc
fistps
mov
test
jl
xchg
je
xor
add
stos
add
ja
mov
loop
dec
movsb
cmp
mov
lods
pop
addr16
aam
lcall
push
ds
sbb
ffreep
lret
ljmp
or
pop
lahf
inc
and
jmp
xchg
adc
orl
jo
xchg
aam
repnz
inc
sahf
mov
scas
xchg
mov
les
xchg
dec
push
andb
test
sbb
lods
lret
std
mov
push
jle
repnz
dec
add
jb
mov
xor
mov
js
or
jge
add
lcall
push
iret
jmp
mov
int3
cwtl
or
and
push
fildl
movsb
clc
cmp
scas
aad
filds
sti
std
mov
shll
in
push
shl
push
rcrb
jmp
insl
pop
repz
mov
dec
outsb
pop
fsubrl
and
arpl
sbb
adc
jecxz
pushf
ja
std
ret
aas
lcall
cmp
mov
lods
in
addb
pop
out
or
ds
inc
adc
jecxz
push
stos
add
shl
int
cmpsl
xorb
push
insl
lea
aas
negl
cmp
gs
or
pop
push
pushf
bound
add
cmp
lret
popa
dec
pop
fstpl
ret
daa
inc
icebp
mov
lret
cmpsb
stos
nop
dec
adc
rorl
imul
jmp
mov
mov
xchg
adc
mov
fadd
cmp
ss
mov
mov
cmpb
rcr
in
dec
into
jb
movsl
push
xor
adc
push
aam
fbld
add
lods
cli
hlt
aaa
cmc
pusha
fldenv
pop
insb
aas
sahf
clc
mov
mov
dec
shlb
cli
scas
push
daa
add
sbb
movsb
inc
mov
lret
add
in
or
sub
xor
and
dec
aas
notl
in
or
pop
and
mov
mov
cwtl
jmp
dec
int
adc
push
jnp
bound
sbb
pop
shrl
pop
lret
loopne
or
push
rcl
hlt
stos
sub
jno
pop
jp
ja
inc
add
aas
sub
gs
icebp
sub
idiv
push
xchg
cmp
xchg
adc
mov
in
jg
je
sbb
push
fcoml
je
xchg
xchg
mov
pop
jno
cmp
pop
push
sub
pusha
cmp
pop
pop
lret
push
pop
js
dec
int3
iret
xor
push
add
in
cmp
push
xchg
bnd
ret
xchg
mov
mov
sti
dec
aad
sub
mov
dec
sarl
sahf
pop
push
movsb
mov
sub
xor
test
mov
push
xor
les
fs
push
rorb
outsb
cmp
push
adc
mov
cwtl
lret
xchg
inc
stc
daa
lcall
scas
call
adc
inc
dec
or
jecxz
int
pop
push
adc
dec
mov
xor
pusha
in
out
mov
dec
enter
ja
xchg
mov
testl
push
inc
and
insb
xchg
push
je
inc
inc
xchg
jg
pop
cwtl
jno
icebp
in
in
addr16
mov
lea
pop
mov
push
hlt
shlb
imul
and
xchg
lea
lcall
jp
push
add
aaa
sub
inc
cld
adc
cs
movsb
and
out
pop
pop
xchg
jnp
jne
mov
fwait
jo
sbb
ficoms
nop
int3
icebp
jno
or
jge
mov
inc
imul
push
out
push
sbb
mov
mov
loope
push
loope
push
daa
mov
push
inc
aam
jne
pop
hlt
scas
sub
xchg
mov
decl
jae
or
push
testb
push
mov
andb
repnz
sbb
cmp
mov
xorb
cli
dec
cld
sub
pop
pop
loopne
addb
cltd
lret
adc
mov
add
push
dec
out
into
popf
mov
cmp
inc
add
and
mov
pop
fimuls
jmp
outsb
je
cmc
testb
xchg
dec
loopne
add
shll
fbld
mov
test
pop
pop
sub
imul
pop
arpl
push
dec
jo
mov
push
hlt
aad
pop
jb
adc
push
mov
addr16
bound
out
push
popf
jb
movsb
iret
fists
mov
jnp
xchg
sub
sub
sbb
mov
pop
arpl
jl
cld
mov
movsl
inc
xor
gs
daa
insl
inc
mov
cmpsb
inc
sahf
sti
cmpsl
xchg
ror
hlt
testl
pop
stc
jle
dec
cmp
lods
xchg
or
out
js
in
insl
mov
cli
lcall
add
repz
aad
shll
or
xor
popf
in
mov
stos
ss
roll
sub
mov
push
fwait
loop
pop
neg
into
xlat
mov
shl
add
insb
scas
sub
sbb
scas
adc
into
loopne
mov
dec
rolb
ret
xchg
mov
out
movsl
movsb
lret
out
xchg
sub
jae
cmp
nop
loope
adc
into
movsl
push
cmp
dec
sub
pop
adc
out
mov
pop
mov
push
dec
inc
rorb
lret
pop
insb
cmp
jge
and
loopne
jge
fs
mov
scas
xchg
nop
cld
daa
scas
inc
jae
stos
aad
in
jnp
out
push
ret
push
inc
xor
add
lret
jmp
or
push
jae
movsl
cmp
pop
cmp
cmp
movsb
lcall
pop
leave
or
pop
pushf
dec
jo
push
sti
cmp
jp
pop
adc
sbb
jbe
fsubs
fcoms
bound
xor
imul
out
jg
aad
and
mov
sbb
test
inc
nop
pop
push
adc
pusha
enter
pop
nop
rcrb
pusha
dec
hlt
cmp
out
mov
fldl
sbb
mov
push
fmull
dec
icebp
ret
leave
lret
cmp
iret
sbb
mov
adc
lock
nop
pusha
pop
adc
mov
test
pop
dec
mov
stc
xor
rorl
push
lret
xchg
sbb
adc
roll
in
idivl
cmp
pop
dec
icebp
adcl
push
or
xchg
jge
mov
jo
jb
into
pop
fcmovnb
sbb
lret
add
pushf
add
cmp
repz
cmp
push
mov
pusha
scas
adc
mov
xor
jp
sub
inc
inc
mov
sbb
or
and
jg
sub
dec
dec
jb
scas
into
sarl
cltd
iret
aam
jmp
push
out
mov
test
mov
jae
jle
xor
pushf
and
sbb
sbb
loopne
scas
fistpll
xchg
stos
mov
lcall
mov
push
sbb
adcl
push
iret
adc
xchg
pop
add
gs
inc
cmp
xchg
jns
test
inc
pop
pop
test
mov
sub
insl
jle
xor
cmp
push
or
fimull
popa
jnp
loopne
pop
lcall
mov
aas
int3
cmpsb
loope
mov
pop
or
push
pop
ljmp
jnp,pn
xor
jg
cs
ficompl
lock
cwtl
iret
lahf
loopne
fisttpl
push
cli
int3
movsb
mov
mov
xor
push
dec
mov
adc
scas
dec
add
or
inc
fstp
fisttpll
adc
jo
repnz
sub
sti
adc
stc
add
dec
fbstp
pop
push
roll
jge
or
fiaddl
xor
pop
xor
jno
xchg
dec
stos
jl
pop
mov
add
enter
inc
movsl
jae
iret
sarl
leave
pushf
push
ds
jo
jne
jbe
mov
sbb
fs
cmp
and
cmp
jb
call
xchg
push
cmp
xorl
loopne
je
jmp
lcall
mov
push
and
adc
jge
pop
in
call
add
mov
ret
push
arpl
inc
mov
bound
push
ret
mov
push
arpl
in
mov
xlat
outsb
mov
faddl
aam
mov
mov
cmp
pop
into
das
leave
sub
push
lds
nop
sbb
aad
ljmp
lret
xchg
mov
sbb
cmp
cmc
scas
push
cmp
rcl
insb
pop
test
stos
aad
pop
xor
repnz
ds
loope
push
into
xor
andl
push
mov
jbe
lret
pop
sub
xchg
out
aas
movsb
adc
dec
jge
xchg
imul
andb
lahf
std
enter
mov
sbb
addr16
pop
orl
and
jp
in
imul
adc
jecxz
lock
dec
mov
adc
or
mov
jle
dec
pop
sti
mov
mov
rcrb
mov
bound
in
cmp
std
lods
sarb
lods
mov
cmp
push
popf
and
std
dec
scas
pop
mov
mov
cwtl
sub
push
fs
repz
nop
pop
add
int3
xor
push
push
and
xor
cmp
dec
loop
pop
mov
push
sahf
xchg
adcl
out
mov
mov
sub
dec
out
fstpl
jl
std
push
jge
popf
sub
ss
lcall
or
sbb
adcl
jb
push
mull
dec
add
aas
mov
ret
scas
or
or
mov
test
test
repz
sub
out
andb
ja
mov
orl
popf
sbb
fisubl
and
icebp
or
cmp
mov
outsb
adc
pop
shl
test
je
out
ficomps
mov
and
jo
and
dec
cltd
out
push
movsl
mov
push
xchg
ljmp
jne
jmp
or
in
adc
lcall
std
call
int
mov
nop
xchg
rcll
out
xorb
jnp
insb
xchg
or
sub
xchg
es
mov
inc
outsb
sbb
ds
shll
pop
imull
lret
dec
out
sub
sub
jbe
in
aaa
cs
dec
push
jmp
fdivs
jp
iret
or
aas
sbb
adc
idiv
push
jo
pop
and
data16
gs
insb
mov
loop
mov
xchg
inc
rcll
adc
add
add
fisubrs
push
bnd
push
jb
aaa
add
lret
mov
xchg
push
icebp
cmp
sti
cmp
add
popf
repnz
out
mov
lret
sub
mov
push
pop
sti
mov
cmpsl
mov
pop
push
cmp
xor
sbb
xchg
pusha
mov
lods
pop
repnz
pop
xor
sub
jne
in
mov
push
pop
incl
scas
jb
jecxz
arpl
popf
xchg
lods
pop
divb
in
jae
mov
add
addr16
xlat
ret
repnz
shlb
arpl
out
bound
not
or
pop
mov
dec
xor
mov
inc
sbb
pop
mov
repz
out
mov
cmp
sbb
int3
jecxz
or
push
cmp
divl
imul
add
ret
shlb
push
inc
jb
push
cmp
lds
and
jg
or
mov
cmp
cmp
aam
xlat
call
or
pusha
jns
cmp
cmp
xor
inc
sub
cli
push
inc
xchg
out
xor
shrb
mov
sbb
or
jnp
repnz
ficompl
roll
out
lahf
jno
arpl
jge
enter
fldt
scas
ret
into
popf
rcrl
add
mov
cmpsb
repz
mov
das
adc
push
mov
push
rcll
xchg
and
xlat
mov
lret
and
pop
mov
leave
mov
xchg
sbb
in
jb
push
push
cs
push
cmp
ret
push
pop
loop
sub
in
inc
int3
aad
xor
inc
mov
not
inc
and
repnz
lds
rolb
inc
xlat
hlt
divb
and
into
cmp
inc
cmc
int3
and
xchg
sub
outsl
push
push
cmp
inc
push
imul
mov
push
repz
out
in
mov
jmp
lahf
push
lcall
mov
pop
nop
jl
adc
cmp
sub
add
add
cmp
sbb
fistpl
jbe
mov
mov
pop
add
loop
mov
xchg
ror
fstpl
add
lret
cld
pop
fstpt
cmc
test
movsl
cmp
mov
nop
push
ret
pop
in
push
adc
fldenv
stos
and
inc
and
int3
push
push
jecxz
jne
inc
inc
or
xor
sbb
adc
dec
aad
rcll
sub
cld
add
cmc
cltd
mov
mov
sahf
and
xor
enter
sahf
jnp
fs
fldt
es
sbb
clc
mov
jae
xchg
mov
fisttps
pop
fdivrl
mov
jmp
mov
daa
repnz
insb
outsl
imul
test
aad
mov
xor
cwtl
test
lea
adc
or
icebp
dec
or
jecxz
aas
imul
mov
xchg
addr16
xor
lahf
cmc
fwait
mov
mov
bound
push
outsb
aas
fisubrl
sti
cmpsb
js
xor
jecxz
repz
mov
mov
pop
cmpsl
pop
adc
mov
mov
push
lahf
push
daa
add
lds
add
or
xor
movsb
sub
xor
psubsw
sub
cmp
jne
push
arpl
ss
push
inc
sub
sti
je
sbb
dec
push
inc
push
jg
sbb
and
push
adc
mov
insb
in
jp
bnd
fldcw
mov
add
shll
or
jg
adc
sbb
cmp
test
mov
cmp
repz
loopne
jg
push
std
test
mov
add
sbb
dec
mov
in
int3
dec
fs
xlat
shlb
imul
xor
cmpsl
fsts
movsl
icebp
cmp
das
push
mov
mov
adc
in
mov
lahf
or
jp
fs
push
outsl
stos
sbb
add
mov
sar
jecxz
sbb
arpl
fbld
subb
jp
cmp
int
fwait
xor
in
sub
cmp
or
adc
pop
cmp
aad
out
ficompl
ror
mov
lret
push
mov
cmp
push
adc
dec
inc
std
adc
push
ds
adc
xchg
fwait
sub
outsb
frstor
jno
ds
movsl
mov
out
insl
sbbl
cmc
sbb
push
xchg
and
mov
cli
cmp
mov
lods
xchg
popf
or
inc
xor
xor
jg
inc
pop
insl
enter
sub
shll
out
mov
jmp
dec
rcr
mov
mov
adc
cltd
jmp
mov
push
pop
lcall
sahf
divb
pop
push
mov
push
mov
mov
sub
test
and
sub
int3
and
and
lds
mov
ss
aad
jge
sub
pusha
mov
jge
xor
out
out
in
loopne
addr16
in
lahf
adc
inc
lods
les
or
mov
mov
stos
lahf
rcll
mov
int3
fstpt
xor
mov
inc
les
cmp
sbbb
les
xchg
pop
ds
jge
add
out
testl
lahf
xchg
cmp
or
cmp
mov
xchg
adc
xlat
out
js
mull
xchg
dec
cmp
sahf
and
push
and
pop
popa
loope
pop
pop
mov
fcmovbe
in
mov
ljmp
push
sbb
or
cmp
mov
mov
inc
adc
xor
pusha
mov
jbe
shr
lds
cmp
leave
inc
jbe
xor
movsl
std
insl
fnsave
aaa
mov
sub
sub
mov
cmpsl
out
leave
insl
mov
add
xchg
repz
push
nop
pop
pop
jl
mov
push
mov
stc
inc
ret
add
mov
mov
pop
mov
sub
mov
test
push
imulb
sbb
testb
mov
pop
sbb
pop
mov
jbe
cmp
lret
and
cmp
and
pop
pusha
xor
sub
fs
cwtl
cmpsb
or
fsts
push
inc
stos
in
jne
pop
pushf
hlt
aam
sahf
and
adc
add
push
fildll
dec
ret
mov
outsl
xchg
or
sub
dec
sbb
or
jge
sbb
call
imul
or
cmc
jbe
fimuls
cltd
outsb
je
pop
gs
add
inc
out
repz
sub
loopne
shlb
iret
pop
and
inc
sbb
cmp
jp
mov
push
in
leave
push
or
flds
add
add
lahf
cmpsb
dec
sub
push
pop
call
insb
jae
daa
push
pop
add
cmp
or
addb
ja
xchg
hlt
lcall
or
mov
cs
sbb
shll
in
cli
dec
mov
data16
sub
pushf
out
repz
enter
push
out
imul
xchg
add
fimull
and
mov
sbb
add
ja
nop
jecxz
inc
scas
jo
sti
fcoml
clc
mov
push
jo
sarl
push
pop
dec
lea
daa
sbb
ret
pop
xchg
sub
or
push
xorl
mov
iret
loope
ljmp
ljmp
or
ja
int
push
ss
fsubs
xchg
lock
sub
cmpb
ret
out
aad
pop
jmp
xor
mov
xchg
jae
add
mov
inc
add
add
js
andb
pushw
ss
iret
jmp
push
pop
inc
out
adc
fistpl
sbb
sub
pop
outsl
mov
out
mov
sbb
pop
inc
les
cmc
mov
or
test
push
mov
scas
mov
jmp
out
jbe
std
js
imul
gs
mov
repz
test
sbb
push
add
cmp
xchg
ljmp
mov
cmp
fldenv
or
xchg
sbb
lods
sub
fdivr
sbb
mov
in
test
cmp
mov
push
cmp
pop
ficoms
dec
aas
pushf
dec
icebp
or
sbb
ds
clc
jns
ret
push
movsl
stos
add
lds
pop
xor
push
adc
mov
jne
push
add
add
popa
xor
mov
or
adc
xor
jbe
ljmp
xor
push
cmp
xchg
pop
sub
jb
jecxz
scas
ficomps
cltd
push
pop
dec
mov
mov
stos
stos
gs
ja
mov
jle
shr
ds
neg
leave
sbb
dec
sbb
hlt
add
mov
mov
pop
ja
in
push
outsl
stc
dec
adcb
lret
jo
push
subb
stos
hlt
mov
ja
xor
sahf
push
push
push
mov
test
fsubl
popa
popf
mov
adc
loope
loope
inc
dec
sahf
int
out
stc
repz
add
adc
repz
sbb
jg
push
dec
add
imul
or
fcoms
mov
outsl
cwtl
jns
std
outsb
jp
mov
ljmp
arpl
push
mov
jb
imull
and
xor
fiadds
lret
shl
mov
mov
std
data16
mov
repnz
lea
sarb
sahf
jno
adc
mov
jno
cmp
adc
aad
pop
decb
pop
pop
dec
cld
hlt
mov
cmpsb
or
adcb
xchg
sub
mov
mov
push
fldpi
stc
jmp
jns
cmp
fildl
push
or
add
adc
movsb
adc
in
inc
push
push
sbb
scas
jecxz
cmp
mov
cwtl
mov
push
ja
jle
pop
pop
ss
clc
out
sbb
push
je
and
in
repnz
jecxz
outsl
mov
pop
add
jae
aas
scas
roll
insb
xchg
aad
and
push
xchg
mov
pop
pushl
xchg
bound
jbe
jnp
lods
inc
add
fidivs
mov
cmc
adc
add
add
fcomps
sub
lods
roll
mov
push
mov
mov
mov
lea
or
in
add
andps
data16
nop
jnp
outsl
mov
out
sbb
push
push
and
adc
push
xchg
push
dec
lds
mov
jo
out
sbb
xchg
lods
aaa
addl
jmp
lret
jmp
js
sahf
fsubs
fdivrs
sbb
adc
rclb
add
fadds
ret
rcrl
out
std
inc
xchg
sub
out
mov
mov
mov
test
mov
ljmp
add
aaa
pop
fnstenv
jae
jae
and
mov
mov
sahf
outsl
xor
imul
sbb
xchg
xorb
cmp
in
lods
cwtl
test
or
mov
test
dec
xchg
jb
jecxz
xor
in
and
std
or
cmpsl
cmp
xchg
les
adc
cmc
sub
popa
dec
dec
fistl
shll
out
fidivs
dec
mov
stc
cmpl
dec
add
ja
adc
xchg
xchg
fs
dec
out
sbb
inc
or
mov
or
xchg
sbb
mov
pushf
lods
push
push
add
mov
fwait
shll
cmp
mov
dec
cwtl
or
mov
andb
andl
add
push
adc
ss
inc
movsb
stc
xor
xchg
xchg
leave
aad
pop
mov
xor
xor
jecxz
pop
ja
pop
sub
iret
adc
ljmp
cli
sub
into
cmp
add
or
or
pop
call
jnp
mov
in
test
clc
and
jno
scas
mull
dec
inc
inc
out
insb
ljmp
data16
mov
lock
mov
roll
bound
add
add
push
test
inc
inc
adc
or
cli
es
sbb
sub
lods
clc
ljmp
daa
add
loope
add
rorb
aam
jge
cmp
imul
sahf
inc
lret
iret
stos
rcrb
test
adc
mov
sahf
mov
hlt
into
xchg
inc
xchg
jl
add
cmc
mov
push
test
ret
pop
jge
push
dec
stos
add
movsb
and
cwtl
insl
lcall
xchg
sbb
daa
out
push
movsl
adc
xlat
out
cmc
repnz
xor
filds
repnz
push
jp
cmp
mov
mov
mov
and
insb
clc
or
and
lds
mov
rclb
dec
rclb
xor
les
ss
add
and
mov
or
adc
jo
sub
cmc
pop
lods
divb
sbb
sbb
mov
mov
fisttps
add
inc
add
scas
mov
inc
mov
inc
outsb
push
add
lods
addr16
sbb
mov
mov
das
dec
xchg
add
push
daa
pop
fldl
dec
cli
lret
outsb
aam
mov
out
clc
mov
negl
or
push
sbb
in
arpl
mov
mov
test
clc
adc
jbe
ficoms
fnstenv
pop
je
dec
and
rcrb
test
fcompl
cmp
insb
je
repz
daa
gs
inc
lret
jae
mov
outsl
push
sbbb
xchg
clc
or
or
out
aam
std
aad
rcr
cwtl
mov
ja
lret
lcall
jo
mov
out
sub
inc
imulb
mov
enter
xor
pop
xchg
loopne
xchg
push
lea
ljmp
jl
lds
mov
add
outsb
imul
repnz
mov
lods
scas
dec
push
xor
xchg
ja
aam
or
inc
jp
adc
jnp
sbb
fdiv
jg
inc
je
push
xchg
push
push
arpl
cmp
dec
push
pop
in
clc
mov
je
xchg
imul
xchg
dec
jae
mov
mov
pop
and
aad
xchg
pop
pusha
std
lahf
inc
or
ret
and
fidivrs
sub
xor
jp
rcll
and
mov
mov
into
sbb
adc
jge
icebp
xor
ror
stc
das
ja
pop
sbbb
idiv
xor
pop
dec
sbb
fstpt
cltd
adc
mov
roll
jmp
xchg
add
cli
cltd
push
aaa
or
mov
lock
cmp
push
pusha
pop
sub
mov
repz
fcmovnb
add
movsb
or
js
add
test
pop
lahf
push
loope
or
and
cmp
mov
fwait
lock
out
leave
test
mov
and
xchg
rorb
mov
sub
push
ret
fsubs
pushf
jo
mov
jnp
aas
and
xchg
addb
inc
test
pop
and
jg
in
test
jo
in
mov
ret
out
push
call
aad
push
call
sbb
sarb
std
cli
lock
adc
sub
lret
jns
xor
mov
lods
mov
xor
jno
in
cmpsb
jno
jl
sub
stos
jb
push
jnp
cmpsl
xchg
sub
mov
xchg
inc
push
fdivs
test
mov
mov
xchg
lea
arpl
popa
mov
xlat
nop
ljmp
shlb
into
ljmp
out
sbb
pusha
test
mov
xchg
pop
popf
les
cmp
sbb
fistpll
xor
js
mov
cltd
cltd
xchg
sub
cltd
xchg
jl
cmp
adc
inc
pop
sbb
pop
push
stos
add
xchg
push
cmp
push
xchg
insl
xor
int
dec
fcomps
imul
lods
and
jge
lock
xor
imul
jle
mov
pop
pop
add
dec
mov
jge
test
and
xor
popf
test
ljmp
sub
push
flds
cmp
mov
je
push
scas
into
and
out
mov
ficomps
dec
add
out
push
adc
or
dec
push
hlt
mov
andb
jae
shr
mov
stos
test
or
or
into
adc
mov
sarb
mov
xor
and
loop
sbb
xchg
icebp
aas
inc
pop
pop
pop
lcall
push
push
and
inc
cmp
outsl
sub
xchg
jp
fdivrl
fs
call
mul
jmp
or
sub
mov
leave
hlt
cld
mov
out
fisttpl
mov
inc
and
mov
xchg
cmp
repnz
repz
jo
scas
xchg
es
xchg
mov
daa
insb
je
test
adc
insl
lock
push
lock
ds
or
inc
dec
adc
mov
jnp
test
cltd
in
jp
mov
ret
mov
pusha
xlat
lret
insb
fxch
ret
add
nop
test
aam
lds
test
orl
push
xchg
sti
es
pop
test
shlb
out
ljmp
xor
xor
push
cmc
and
fcmovb
leave
dec
add
aaa
inc
lret
adc
lret
in
pop
mov
mov
and
sub
insl
lock
sbb
scas
push
ret
xchg
je
mov
mov
icebp
mov
je
fdivrl
pushf
rol
xchg
and
pop
or
popa
pop
push
pop
dec
shll
jno
movsl
ficoml
push
mov
xchg
mov
sarb
sub
les
rcrb
and
lods
xor
rorb
xor
mov
push
and
push
mov
clc
iret
and
hlt
xor
xchg
adc
decl
mov
xchg
cmp
cmpsl
sub
shl
xor
cwtl
cmp
fadds
sbb
rcrl
push
and
and
insb
push
into
rorb
lret
into
out
jb
mov
or
push
push
mov
sti
stos
imul
pop
jle
sbb
ret
aad
pop
pop
movsl
in
dec
dec
addr16
movsl
or
inc
movsl
loope
dec
addb
xchg
sub
inc
int
repz
fistpll
mov
cld
sub
iret
jo
xchg
stc
ret
dec
sti
mov
int3
cmp
roll
xchg
es
subb
push
shll
subl
sub
push
cmpsb
aaa
sub
push
movsb
pop
je
dec
mov
xchg
ljmp
jg
sti
in
imul
mov
adcb
dec
imul
cmp
pop
jecxz
sbb
lcall
cmpsl
sub
dec
jb,pt
inc
test
xchg
hlt
sbb
mov
mov
test
cmp
pushf
nop
sub
cld
dec
push
sub
rcrb
and
jle
xor
repz
pusha
jle
loop
pop
mov
inc
fwait
pop
test
xchg
dec
rorl
fadd
cs
xor
xchg
push
mov
jg
lcall
enter
lods
ss
ja
les
pop
and
adc
arpl
leave
scas
cli
mov
aam
std
out
lcall
pop
fsubp
xor
sarl
and
mov
add
les
dec
sbb
imul
dec
stos
adc
or
push
jae
and
imul
popa
in
les
sbb
push
jp
and
daa
mov
sbb
jo
movsl
sbb
push
cmp
or
jae
pop
xorb
mov
je
push
sub
mov
pop
lds
or
aaa
roll
pop
xchg
int3
ficompl
mov
dec
mov
aam
cmpsl
pop
insb
adc
cmp
das
clc
mov
pop
pop
test
inc
dec
push
inc
inc
ljmp
push
bnd
shll
icebp
mov
fcomp
fiadds
jmp
cmp
pop
lds
inc
adc
cs
pop
test
fimuls
pcmpgtd
in
fwait
and
rorl
push
aas
jle
and
lock
and
mov
pop
sahf
inc
mov
mov
fwait
leave
leave
mov
cmp
add
lahf
dec
xor
xchg
sub
adcl
aam
mov
mov
jbe
out
fs
mov
or
or
test
inc
sub
xor
add
fwait
decl
into
sbb
inc
lret
popa
mov
lret
pop
testb
and
lock
cwtl
mov
xchg
xlat
fstp
pop
adc
iret
je
dec
jmp
mov
pushl
mov
mov
xlat
mov
notl
fistps
repnz
imul
js
adc
into
push
cmpsl
ja
test
shll
jo
cmp
xor
pop
std
aad
scas
test
dec
or
lds
push
fiadds
mov
jmp
xchg
mov
enter
push
cs
mov
jl
or
ret
pop
gs
incl
in
mov
dec
cmpsl
mov
arpl
xchg
push
adc
test
mov
inc
insl
and
mov
mov
rclb
jge
fists
fsubr
fstl
loop
hlt
sub
aas
lods
and
mov
add
orb
adcb
addr16
scas
ss
jns
std
lods
xabort
shlb
mov
inc
mov
js
xlat
mov
js
push
xlat
sbb
sahf
add
rorl
movsb
stc
out
xor
pop
mov
std
mov
icebp
lds
or
push
call
or
loop
jmp
je
add
push
test
mov
std
xchg
pop
in
xchg
sahf
fs
cld
out
aam
pop
fnsave
in
adcl
pop
push
push
fsubs
pop
cmpsl
cs
mov
mov
pop
jmp
cmpsb
fwait
stos
push
dec
pop
lea
jnp
dec
mov
xchg
int3
imul
bound
adc
fnstenv
lret
mov
fstpt
fldcw
xor
push
sbb
lret
dec
cwtl
jge
repnz
test
xchg
incl
hlt
jmp
movsb
psubb
inc
jbe
pop
insb
xchg
xchg
dec
push
pop
adc
decb
xor
lods
arpl
cld
inc
push
loopne
dec
into
xor
dec
mov
mov
dec
fistl
dec
cmp
xor
dec
jle
mov
dec
xor
repz
xchg
test
adc
adc
sub
sub
jmp
fdivrs
inc
and
and
dec
push
in
ja
aam
xchg
inc
xor
hlt
and
xor
stos
push
cmp
sub
push
xchg
adc
jne
jp
imul
jo
popf
inc
jecxz
xchg
jp
mov
jmp
cmp
xchg
incb
ljmp
push
test
and
jl
mov
imul
sbb
mov
ret
shlb
mov
pop
mov
mov
std
dec
mov
dec
out
stc
aad
movsb
sub
cmc
ljmp
pop
jl
or
mov
aam
test
mov
test
ss
xor
cmp
xchg
mov
inc
cmp
push
in
imul
mov
mov
cltd
mov
scas
inc
ds
stc
add
stos
sbb
jne
mov
xchg
cmp
dec
adc
cmp
call
sub
rolb
add
lret
fiaddl
mov
mov
jg
sbb
mov
imul
jbe
lcall
sbb
add
rcll
inc
scas
mov
or
addl
and
inc
out
and
dec
push
in
jb
imul
mov
mov
mov
inc
or
adc
je
xchg
call
outsl
fcompl
inc
test
test
sbb
leave
or
je
insb
add
xor
push
sub
cmpsb
int3
push
divb
dec
adc
mov
mov
loopne
xchg
xor
gs
sub
std
cli
xor
and
or
clc
jb
inc
sarl
mov
int
adc
imul
loopne
mov
pop
inc
lcall
test
push
pop
rcrl
xor
push
out
mov
mov
std
dec
jle
xchg
mov
cmp
jmp
addr16
in
or
aam
lods
fidivrs
shrb
enter
mov
fsubrl
test
fprem
rol
mov
cmp
ja
sbb
push
inc
mov
mov
pop
popf
fcoms
ret
cltd
in
add
mov
loope
xchg
xchg
pusha
push
into
clc
daa
xor
into
mov
jb
xchg
mov
push
sbb
add
adc
sbb
dec
pop
lods
ret
add
lock
jb
inc
dec
xchg
jo
cmp
xchg
cli
push
xchg
mov
cmp
pop
and
loopne
scas
subb
sbb
mov
cld
push
pop
subl
loope
push
das
jl
jno
xchg
es
push
push
icebp
mov
push
jle
cltd
inc
mov
lea
test
insl
mov
and
std
repnz
cmp
dec
pop
sub
mov
test
mov
mov
xor
insb
mov
push
cmp
movl
sbb
outsl
sbb
adc
pop
jp
stos
add
xor
mulb
xor
in
adc
adc
out
cmpsb
cmp
xor
mov
sbb
cltd
inc
add
mov
inc
pop
mov
jbe
xchg
pop
lahf
cmovno
pop
pop
dec
lret
mov
xchg
pop
cmpl
stos
in
jns
out
mov
xchg
mov
pop
pop
dec
lock
scas
js
call
sbb
or
cli
sub
pop
mov
arpl
and
mov
inc
in
pop
mov
daa
pop
inc
push
push
add
out
and
int3
xchg
sbb
push
pop
aad
mov
mov
mulb
cmp
imul
cmp
mov
adc
xor
mov
icebp
dec
fistps
dec
and
mov
test
adc
add
cmp
sbb
sub
add
sbb
out
insb
push
hlt
hlt
in
jecxz
rclb
test
leave
dec
xor
xchg
add
xor
adc
pop
into
into
cmp
push
jne
push
frstor
pusha
xchg
or
or
mov
fwait
test
mov
fstpt
cmc
mov
xor
enter
jl
mov
je
out
test
or
jecxz
mov
lret
and
fiaddl
cs
or
enter
call
push
mov
stc
mov
mov
or
adc
outsl
sub
pop
shll
push
sti
pop
sub
mov
mov
popa
bound
rcll
jnp
jle
or
pop
pop
loopne
mov
mov
icebp
test
mov
cmpsb
jno
or
mov
jg
xor
jo
in
in
popf
lds
sub
cmp
push
mov
and
cmpsl
xor
lds
mov
mov
push
sub
js
inc
xor
fwait
rclb
aas
out
xchg
xchg
mov
cmpsb
clc
push
and
adc
out
fistps
sbb
inc
or
mov
jmp
lahf
fiaddl
sahf
mov
xor
cwtl
cmp
fwait
in
fsubs
adc
cmp
cmp
fwait
imul
lea
xor
mov
mov
test
jnp
ret
cmp
jge
cmp
jle
mov
and
inc
pop
pop
push
pop
lea
insl
outsb
sub
scas
out
cmp
jns
std
jnp
cmpsb
insl
repz
sub
mov
call
cltd
leave
mov
aas
in
ds
ret
or
add
add
cmp
ror
jbe
jb
inc
cld
fadds
add
addr16
jmp
sahf
ljmp
jmp
mov
jno
xchg
lock
mov
push
arpl
adcl
dec
cld
mov
dec
adc
or
xchg
and
testl
xlat
mull
jns
je
adc
fiaddl
mov
out
pop
clc
test
mov
pop
dec
lods
mov
repnz
lret
push
push
sub
insb
call
adc
sahf
int3
sub
sub
jbe
pop
mov
pusha
cltd
imul
jge
pop
jmp
insl
test
imul
inc
sbb
jns
loopne
dec
negl
insb
cs
mov
lcall
pop
imul
mov
jl
sahf
or
cltd
xor
jb
xchg
cwtl
out
xor
stos
mov
aas
sub
pop
inc
lcall
inc
sub
fbld
cltd
adc
pop
or
icebp
insb
jl
push
ss
enter
out
xchg
inc
jno
std
jecxz
out
mov
sbb
xor
inc
out
inc
aad
and
jmp
test
or
push
inc
sahf
aaa
adc
push
test
test
jns
mov
mov
ljmp
push
inc
mov
jbe
pop
daa
mov
sahf
xchg
filds
ret
jmp
sarl
ror
in
ss
xor
push
add
push
jb
lret
mov
sarb
cwtl
mov
cs
fwait
in
ss
lock
std
mov
sbb
mov
std
jae
sar
leave
sbb
stc
xadd
into
stos
xor
repnz
push
je
cli
jg
out
or
lods
mov
jmp
test
mov
pop
adc
xor
mov
loope
pop
leave
jg
push
sti
adc
ret
or
jecxz
add
in
mov
or
data16
or
pop
nop
and
ficompl
xchg
push
loop
or
xchg
stc
and
push
mov
pop
orl
pop
outsb
dec
jge
cmp
test
add
mov
inc
add
xchg
fwait
cmc
cwtl
and
jmp
adcb
add
adc
xor
sbb
jb
in
mov
les
orb
push
adc
lods
call
sbb
scas
popa
mov
testb
das
sub
push
outsl
loopne
xor
xor
pop
jg
adc
sub
in
loope
cli
cli
lret
adc
pop
sub
jmp
pop
fsub
jle
adc
mov
pusha
loopne
sbb
add
xor
jle
iret
lret
lahf
adcb
clc
gs
aad
insl
pop
out
xor
addb
push
arpl
xchg
dec
fs
fcompl
jnp
jb
icebp
lcall
cmpsb
fsubl
test
mov
jge
jnp
pop
icebp
ljmp
jne
fisubrl
aaa
mov
fimuls
icebp
mov
jb
jl
mov
test
jl
mov
nop
mov
lret
cmp
xlat
fstpt
stos
rcll
inc
sbb
scas
sbb
inc
add
jae
and
mov
jnp
xchg
pusha
in
and
xchg
add
stos
aad
orl
dec
add
scas
jb
sbb
insb
jne
je
jne
add
mov
insl
mov
jge
pop
mov
mov
xor
push
aad
pushf
xchg
cmp
loope
mov
pusha
mov
push
cmp
inc
lods
mov
fistps
lahf
lea
pop
xor
lcall
sbb
js
aaa
jno
xchg
push
add
out
sub
xchg
xchg
arpl
xchg
jp
adc
pop
add
ret
out
repz
idivb
add
sub
sbb
push
ja
pop
jge
jle
mov
out
mov
xor
inc
mov
shlb
movb
push
shrl
shl
addr16
dec
sbb
ja
cmpsb
shrb
cmpsl
in
cwtl
arpl
fistpll
movsb
push
xchg
pop
push
in
sar
fmull
test
fs
fstl
cmpl
imul
jge
cmp
or
aaa
test
jo
add
popf
sub
xor
cmpsl
jbe
rcr
adc
jecxz
mov
pop
push
inc
jge
sub
je
jbe
inc
aaa
mov
aaa
sub
mov
or
sub
dec
pop
leave
mov
cmpsb
ja
es
sub
mov
les
mov
lret
xchg
fsubr
push
je
rcl
mov
shlb
mov
xchg
stos
js
xchg
sub
pop
inc
or
cmp
adc
or
std
fisttps
test
inc
xor
loop
sbb
adc
stos
fisttpll
and
push
dec
sbb
pop
hlt
jecxz
lret
mov
inc
add
lret
mov
and
mov
mov
mov
in
mov
stos
ss
jae
addb
push
add
into
mov
decb
sarl
xor
stos
fs
sub
arpl
or
cli
cli
and
xor
cmc
out
xor
mov
add
cltd
xlat
xor
inc
pop
in
out
sub
jae
insb
iret
scas
sub
loop
adc
sub
andl
loop
mov
ss
ret
sub
cltd
add
push
xchg
test
sbb
aad
cmp
out
imul
bound
mov
mov
mov
subl
ja
inc
scas
xchg
stos
leave
jmp
mov
cmp
adc
es
ret
jmp
outsl
arpl
sub
daa
or
bound
sub
popl
test
in
or
data16
cmc
jne
sbb
loope
inc
lcall
sbb
dec
push
test
push
inc
sbb
pop
int3
outsl
mov
mov
dec
xlat
or
out
pusha
ss
jg
adc
aad
cmpsb
into
outsb
andl
fisttpll
push
dec
xchg
push
loop
add
inc
shlb
add
cmp
lahf
add
pop
and
xlat
cmp
clc
adc
push
jecxz
icebp
mov
jge
out
mov
and
enter
jbe
fld
shrb
mov
cmp
out
xlat
sbb
aad
inc
out
and
nop
adc
inc
test
jbe
lods
ja
and
mov
mov
fcomi
leave
pop
shrl
mov
adc
mov
inc
push
dec
xchg
bound
adc
push
dec
pop
sar
xor
fsubl
pop
cmc
sahf
fdivrl
mov
aaa
mov
ss
rcr
in
lret
jns,pt
jae
and
jl
sbb
push
jmp
pop
dec
jo
or
and
xchg
xorb
cltd
loopne
mov
lds
inc
rcrl
pop
add
xor
ret
test
fidivrs
lret
lea
push
sub
xor
arpl
call
scas
fistps
and
fiaddl
dec
sub
xor
js
jae
add
mov
icebp
out
mov
mov
aam
scas
iret
mov
popa
sbb
stos
inc
sarl
cmp
lea
xchg
iret
jmp
out
jge
movsb
jns
sti
xlat
xchg
std
mov
pop
outsl
inc
lds
std
and
inc
push
dec
pop
sub
out
ret
pusha
inc
sub
dec
sub
jne
mov
mov
xchg
sub
inc
pusha
mov
add
pusha
fidivrl
popf
mov
mov
cmp
or
sub
pop
add
cmp
loopne
aam
and
imul
xor
mov
fisubrs
dec
cmp
gs
jecxz
xor
push
add
into
mov
adc
in
ret
shlb
or
add
push
inc
cmp
in
cmc
jo
mov
fldl
mov
idivl
sbb
push
scas
cmp
imul
sub
rorb
cmp
pop
push
jle
push
test
dec
xchg
pop
push
imull
fdivr
stc
out
inc
mov
dec
add
jmp
pushf
pop
cmp
mov
dec
sbb
shr
xchg
loopne
fdivl
or
stc
jle
push
orl
and
ret
insb
mov
sbb
push
mov
adc
je
cmc
jle
sub
or
cmpsb
dec
jp
jno
dec
call
cltd
adc
xor
shlb
mov
aaa
test
or
or
ficomps
jne
addr16
mov
rcr
jp
lock
das
stos
dec
push
push
movsb
int
mov
mov
push
xchg
cmpsl
cs
out
vmread
jbe
push
imul
pop
xchg
test
imul
mov
mov
mov
dec
cmc
adc
and
popa
pusha
push
dec
rclb
push
mov
jns
mov
testl
or
out
pushf
cmp
sbb
pop
fists
cmp
scas
ds
sub
in
gs
mov
mov
add
movsl
stos
fs
jb
inc
cli
mov
cmc
in
push
or
test
and
xor
add
imul
mov
iret
or
inc
jmp
aam
lods
mov
or
push
xchg
or
sub
repz
test
inc
fidivl
mov
mov
nop
out
shrb
add
scas
lea
cltd
xchg
lea
cmp
mov
sub
push
scas
mov
jp
adc
cmc
dec
sahf
imul
or
add
mov
std
mov
outsb
test
inc
mov
aam
mov
jne
cmp
arpl
test
loope
loopne
mov
stc
int
repz
stc
push
xor
adc
mov
pop
jo
insb
dec
lret
mov
stc
scas
xlat
ds
sub
sub
loopne
mov
cmp
xchg
mov
scas
push
aaa
add
sbb
jb
sbb
mov
add
xchg
cmp
or
add
xor
pop
cmp
bound
mov
loop
rcrb
xor
dec
inc
imul
sahf
sub
pop
sub
in
lahf
mov
lods
popfw
mov
mov
mov
loope
fs
idivb
fcompl
outsl
add
mov
ret
test
jbe
cmp
sbb
les
int
idivl
jg
arpl
xchg
nop
add
aaa
insl
push
sbb
inc
cmp
mov
jnp
mov
test
or
xor
outsl
lcall
inc
fcmovnb
sub
aad
loopne
aas
or
pop
pop
leavew
and
ds
dec
or
aam
arpl
sub
pop
pop
imull
jae
icebp
cld
jg
movsl
int
jg
aaa
inc
mov
jl
jmp
mov
data16
mov
adc
xchg
scas
outsb
out
std
popf
jl
shll
sub
xchg
rcll
mov
sbb
aas
push
bound
iret
fs
pop
sub
les
fidivl
out
idivb
push
shll
and
push
imul
das
add
jnp
inc
push
adc
mov
pop
pusha
lods
daa
std
dec
inc
cmp
sbb
adc
test
jno
push
cwtl
popf
je
xchg
jbe
xor
pusha
adc
stc
jo
sub
cmpsb
jecxz
cltd
lret
jnp
xchg
sub
ljmp
std
pop
pusha
inc
jae
cmp
mov
pop
xchg
push
mov
pop
push
iret
sub
mov
jle
sub
xchg
jnp
inc
cmc
sub
out
fiadds
pop
clc
outsl
movl
jmp
aas
xor
and
lret
outsl
push
lret
pop
or
push
or
sbb
enter
sar
pusha
fcmovb
lds
daa
repnz
xchg
lret
lret
push
verw
mov
mov
pop
push
inc
lods
negb
les
add
cs
daa
repz
push
xchg
sub
inc
pop
stos
inc
push
test
push
aam
je
sub
sbb
mov
jbe
std
add
inc
jecxz
jae
pop
xchg
icebp
xor
clc
jo
aad
dec
push
push
pop
sbb
add
movsb
ficoml
mov
stc
pop
imul
ret
mov
addr16
xlat
mov
imul
dec
adc
cli
and
lret
xor
adc
xchg
popf
insb
int3
das
jae
loop
imul
mov
ja
dec
mov
jl
fwait
adc
lods
adc
addb
sti
enter
notb
mov
repnz
fldcw
sahf
cmp
mov
push
data16
mull
sbb
or
sub
pop
in
xchg
enter
out
scas
out
clc
sbb
orb
push
lahf
jp
repz
dec
adc
or
jp
xor
inc
jb
es
je
inc
mov
mov
jecxz
inc
or
add
mov
ss
rcrb
pop
cmpsl
fsubs
cmpl
add
ret
rcrl
dec
xor
enter
rcr
out
lea
mov
mov
or
sbb
xchg
adc
pusha
ja
cwtl
mov
fisubrl
mov
pop
pop
movsb
pop
arpl
pop
pop
push
enter
movsb
lret
cli
pop
shll
and
or
popf
jmp
test
mov
cmc
fwait
push
jecxz
pop
inc
loope
shll
mov
leave
dec
or
scas
sbb
movsb
das
testb
pop
add
cmp
mov
cmc
jns
mov
push
push
pop
or
pop
sub
stos
in
ja
push
ret
fwait
mov
sbbb
xchg
adc
mov
pop
mov
dec
sbbb
mov
fsubrl
fs
fcomps
mov
insb
lcall
out
sbb
lret
sbb
cmp
cmpsb
and
push
sti
mov
cmp
lock
shlb
xor
inc
and
mov
gs
sub
shlb
icebp
nop
sahf
inc
sub
mov
cmp
push
shl
ss
lcall
and
pushf
stos
adc
sbb
daa
add
mov
scas
sti
xchg
sbb
sahf
lret
add
dec
test
sti
cmc
xchg
ss
mov
dec
mov
xchg
int
xchg
out
into
pop
repz
xor
xchg
xchg
or
mov
mov
pop
notb
mov
sbb
xchg
arpl
jns
pop
pop
sti
push
sub
xchg
sahf
in
add
cmc
xlat
repnz
xorl
and
pop
mov
lahf
push
lock
push
xchg
movsb
nop
test
movsl
sub
in
imul
mov
mov
ss
out
jne
and
push
cmp
inc
mov
wrmsr
push
jg
icebp
inc
addr16
push
sub
xor
jle
daa
call
xor
add
in
mov
mov
loopne
fcmovnu
xchg
stos
mov
inc
sbb
shll
iret
inc
jb
cmp
cmpsb
mov
inc
mov
adc
int3
addb
cmp
js
pop
xor
add
sub
xlat
out
mov
outsl
dec
cmpsb
jb
cmp
inc
sbb
fadds
cvtdq2ps
ret
mov
and
call
add
daa
push
adc
sbb
lcall
inc
add
inc
test
adc
enter
es
dec
inc
lahf
add
mov
adc
ljmp
rcrw
imul
add
fadd
or
addr16
xor
add
sub
sbb
sbb
je
lds
or
out
mov
dec
cmp
mov
add
scas
push
mov
lcall
nop
cmp
cmpsl
push
cmpl
mov
ret
fisubrs
sbb
stc
in
imul
imul
loopnew
mov
push
pop
push
clc
mov
and
pop
mov
push
enter
scas
push
data16
push
shrl
inc
popf
and
pop
cmp
mov
jge
in
mov
pop
or
shrl
xchg
rcl
cli
xchg
pop
test
mov
iret
pop
in
lods
push
adc
adc
out
out
cmp
adc
movsb
inc
inc
lds
pop
mov
outsl
fstps
lea
aad
adc
pusha
repnz
xor
imul
jne
cmp
decb
imul
xchg
xchg
mov
dec
lds
mov
pop
call
xchg
or
fwait
leave
push
rol
icebp
mov
ret
add
ret
xchg
pop
xor
xor
out
push
sub
fcoms
or
push
popf
out
push
inc
ffree
sub
fisubrl
std
push
stc
xor
cmp
jb
mov
xor
imul
mov
in
dec
push
cmp
cwtl
mov
pop
adc
push
jle
mov
xchg
clc
mov
es
sarb
jae
dec
inc
lock
push
push
mov
pop
jne
pop
shlb
clc
add
push
sub
mov
fs
pop
insb
rclb
imul
jae
aam
jno
inc
xchg
mov
push
enter
fcos
cmp
pusha
in
loopne
adc
push
fstpl
stos
push
outsl
ret
mov
sbb
pop
insl
jle
cmp
add
mov
ficoml
rclb
shlb
fwait
jg
incb
sub
sbb
mov
dec
repz
inc
add
mov
std
inc
add
je
bound
lods
xor
imul
ds
push
or
popa
push
pusha
mov
mov
addr16
pop
pop
mov
lods
ja
mov
pop
popf
dec
movsb
es
enter
fmull
stos
fimull
lcall
mov
cli
xor
int3
cmp
xor
jbe
mov
add
jo
sbb
and
rcrb
lods
lret
pop
mov
adc
loopne
icebp
mov
mov
lods
xchg
sbb
pop
mov
cmp
call
test
sub
jb
stos
xor
test
sub
das
cli
cmp
je
cmc
mov
movsl
lock
fcomps
sbb
insl
int
mov
sub
mov
ljmp
cltd
mov
mov
jle
fdivr
daa
pop
mov
and
fbstp
jp
cli
rorb
test
andl
inc
mov
xchg
ds
in
pop
out
cli
inc
and
xor
add
push
push
xchg
cmpsl
cmp
rcll
pop
daa
movsl
addl
jae
jp
sbb
test
xor
mov
out
xor
inc
pop
cmp
sub
sbb
cmc
jno
mov
imul
mov
sahf
push
call
push
pop
test
xchg
aad
xor
and
nop
lock
pop
sub
sbb
jecxz
out
inc
std
cmp
or
pop
test
repz
inc
shl
pop
pop
pushf
xchg
mov
push
inc
cltd
cmp
mov
outsl
xchg
or
pop
enter
sbb
xchg
or
xchg
frstor
adc
cmp
pop
and
es
sub
call
lcall
in
dec
lods
xor
jnp
test
push
loop
shl
sbb
xor
mov
sbb
add
test
and
popf
rcr
or
rolb
rorl
push
sbb
xor
xchg
pusha
cmc
jns
pop
mov
cwtl
fdivl
aad
jns
add
sahf
jnp
stos
adc
and
mov
arpl
add
jns
inc
push
lods
sbb
aad
pop
js
lock
push
and
leave
add
pop
lret
inc
inc
pop
test
xlat
xchg
das
dec
loope
shlb
dec
adc
ret
xor
loopne
cmp
in
push
xchg
sbb
and
repnz
sarb
shlb
dec
mov
sub
lcall
cmp
dec
jge
leave
gs
rorl
ds
nop
jg
vpsubq
push
in
jmp
inc
sub
pop
cmp
push
lods
notb
inc
pop
xchg
js
jo
loopne
push
dec
push
mov
xchg
iret
xor
ss
scas
push
pop
rclb
mov
shrb
loop
lods
mov
mov
sbb
cmp
pop
cmp
sahf
add
dec
mov
xchg
mov
mov
or
add
out
js
aam
sbb
mov
jb
mov
jnp
mov
aas
rcl
adc
ja
xchg
jmp
push
jae
mov
xchg
mov
sub
mov
xchg
je
mov
fisubrl
cli
xlat
lcall
cli
stos
xchg
testl
inc
dec
sub
and
out
in
cmp
and
push
outsb
cmp
cmpsl
xchg
idivb
nop
and
insl
negb
add
pop
or
sub
std
mov
and
xchg
int
shll
and
sub
and
xchg
out
cmpsl
stc
add
xchg
pop
fsts
push
out
cmpsb
mov
js
sub
sarl
push
out
aas
mov
fidivs
loop
pop
mov
mov
mov
or
or
stos
adc
ss
or
pop
pushf
aad
push
or
dec
mov
sub
inc
fdecstp
popa
outsb
les
or
lret
js
fsubr
jno
and
xchg
add
lods
test
out
lcall
lods
or
push
inc
or
xor
cmc
mov
mov
xor
mov
mov
mov
pushf
iret
adc
sub
pop
cmp
notb
mov
sbbb
jne
mov
fistpll
add
dec
fsubs
enter
mov
outsl
sbb
movsl
ret
clc
jns
in
lahf
xor
cli
repz
incb
add
lock
inc
mov
test
andl
loop
aad
mov
pop
cli
or
cwtl
adc
loop,pn
js
jmp
mov
add
add
jae
out
xchg
push
rclb
pop
and
mov
jbe
stos
je
outsb
push
xorb
add
adc
mov
out
lea
mov
loope
insl
or
inc
adc
push
pop
cmp
les
cmp
aad
inc
or
push
jecxz
lcall
add
mov
lea
lock
mov
hlt
dec
jnp
sti
sti
ja
insb
mov
popf
push
aas
push
push
pop
push
cmp
ds
xchg
lahf
dec
mov
xor
mov
ljmp
cs
xor
iret
jp
arpl
sahf
out
cmp
jmp
scas
cmp
adc
int
push
pop
sbb
lock
xchg
xchg
pushf
dec
cmp
adc
shll
mov
jns
add
mov
ficompl
sbb
popa
mov
popa
mov
mov
mov
dec
pop
xchg
mov
lret
es
push
sub
mov
insb
scas
jmp
movsl
cmc
cmpsl
enter
or
push
fcompl
fcmovbe
push
xchg
mov
scas
jo
sahf
jp
mov
stc
cmp
sub
es
pop
cld
inc
push
xor
ror
popf
jg
pop
faddp
push
movsl
and
out
into
inc
xor
scas
mov
xchg
jle
adc
std
xchg
mov
into
push
lock
xchg
and
and
push
push
hlt
add
lret
jmp
mov
je
mov
or
jecxz,pn
test
xor
pop
dec
outsl
pop
divb
xor
jnp
out
and
andb
fs
daa
and
push
fnstenv
or
aas
adc
jns
aaa
add
sub
xor
into
clts
in
cli
lcall
and
inc
pusha
cmp
jmp
outsl
jge
xor
leave
stos
loop
imul
lret
cmpb
sbb
add
test
push
shll
adc
outsl
jbe
inc
scas
xchg
stos
and
loop
gs
arpl
andb
pop
sub
fs
sbb
adc
dec
call
sub
sbb
inc
pop
fimull
mov
pop
sbb
xchg
inc
popa
call
fld1
jecxz
clc
push
xchg
or
fildll
sbb
jle
mov
pop
jnp
jle
mov
cmp
xchg
cli
stos
pop
cs
pop
in
dec
push
mov
ja
jae
lods
mov
inc
fisubl
js
aaa
mov
or
shll
sbb
mov
cmp
cmp
imul
pop
lret
sbb
out
fwait
lahf
incb
ss
cmp
mov
and
mov
mov
xchg
call
sub
testl
out
flds
dec
iret
iret
and
jmp
pop
mov
ret
ja
pop
in
sub
jae
fwait
add
xchg
jb
test
lcall
cmp
jl
or
loope
outsl
add
sbb
cmpsl
test
xchg
gs
lock
or
loope
icebp
inc
xchg
xchg
xor
roll
stos
pop
lcall
mov
stc
out
dec
test
lret
push
add
in
sbb
sbbl
je
mov
arpl
aas
mov
add
adc
lea
out
out
mov
push
mov
mov
hlt
lahf
clc
lock
sbb
arpl
mov
ss
or
popa
cmp
int
pop
cs
scas
or
and
aaa
jle
jecxz
rcl
dec
inc
push
and
cwtl
jmp
pop
mov
loope
mov
sub
dec
andb
mov
pop
into
sbb
add
xchg
ljmp
push
sub
mov
mov
scas
leave
jp
and
bnd
fimuls
inc
dec
insl
cmc
pop
push
add
cltd
adc
inc
test
mov
fmul
repnz
and
scas
inc
and
push
repz
cmp
jp
jl
pop
fisubrs
sbb
jl
adc
mov
sbb
cmp
mov
sub
mov
xor
mov
fisubl
sahf
fstl
ficompl
addr16
mov
es
or
xchg
dec
in
cmp
insb
lock
mov
pop
cld
mov
mov
xchg
outsl
scas
dec
popf
xchg
mov
js
adc
enter
sub
fs
aam
insl
xor
xor
push
xor
je
mov
add
pusha
fldcw
inc
xchg
inc
or
fwait
je
adc
jb
mulb
mov
fistps
outsb
sub
adc
xchg
xor
ljmp
dec
inc
add
dec
jnp
dec
test
cmpsb
mov
cmp
xchg
jnp
dec
jmp
push
dec
pop
xor
xchg
jle
shll
out
das
cwtl
sbbb
aad
cmp
ret
mov
push
xchg
flds
mov
addr16
shll
add
inc
pop
dec
or
or
push
das
cmp
out
add
and
aam
cli
pop
hlt
dec
cmpsl
jp
cmp
and
ljmp
lret
mov
mov
push
mov
icebp
hlt
jae
or
cmpb
mov
cwtl
jmp
sbb
cli
sub
xor
adc
lahf
sbb
mov
mov
jmp
sbb
mov
es
push
cltd
aam
mov
jo
daa
push
popf
add
hlt
pop
bound
fs
sbb
ja
andl
dec
push
rcrl
sti
adcl
inc
and
outsl
cwtl
push
dec
les
insl
jbe
jge
jno
xorb
fwait
add
leave
aas
ficompl
shr
xchg
sub
mov
out
xchg
sub
jbe
out
int3
sbb
fstpl
and
fnstsw
outsl
pop
cmp
jb
rorl
fnstsw
mov
jg
sbb
xor
and
test
sbb
jnp
lods
add
jmp
pop
and
pop
in
std
xor
mov
gs
movntq
js
fnstcw
mov
neg
mov
cmp
and
add
outsl
addl
adc
outsb
insl
sub
mov
cmovge
add
jae
ret
mov
outsl
loopne
or
stos
mov
ret
mov
stos
js
out
push
pop
call
cmp
inc
aaa
arpl
adc
sbb
xor
xchg
das
test
xchg
int
or
sbb
jecxz
imul
mov
shlb
cld
pushf
daa
jbe
lods
xlat
mov
push
fnstenv
mov
lcall
mov
ret
test
jae
push
push
je
lahf
out
insb
xchg
icebp
adcb
fldl
add
rorl
scas
and
lcall
adc
inc
pop
mov
insb
add
pop
lret
imul
cwtl
pop
mov
and
jmp
aam
mov
imul
out
lock
pusha
int
jno
inc
adc
das
or
call
sub
fwait
and
adc
imul
jg
fcomip
sub
dec
xor
mov
js
cli
lea
lock
sub
jmp
adc
rclb
popa
cld
into
mov
push
mov
inc
xchg
push
mov
and
fimull
pop
ss
mov
sti
fs
push
dec
or
insl
call
add
roll
lock
inc
and
movsl
test
sahf
pop
mov
jne
inc
jmp
mov
xor
xchg
cmp
dec
lret
ret
cmp
adc
rcll
inc
popa
xor
add
xor
mov
stc
roll
cltd
push
movsl
cmpsb
ret
movsl
or
leave
out
int3
enter
dec
dec
stos
cwtl
add
daa
dec
mov
mov
int3
inc
je
sub
mov
and
xlat
nop
int
jp
or
addr16
cld
into
mov
sahf
nop
icebp
xchg
jno
dec
int3
inc
aas
pop
stos
cmpb
loopne
sbb
inc
imul
adc
xor
dec
in
pop
jg
mov
jnp
jbe
lock
xor
mov
das
hlt
inc
xchg
and
mov
inc
or
mov
sub
sub
adc
ss
in
clc
cmpsl
imul
fldl
lahf
scas
std
or
mov
sahf
pusha
mov
popa
bound
adc
or
hlt
cmpsb
mov
sub
mov
xchg
cmp
fisubs
aaa
pusha
add
adc
je
adc
or
jns
les
in
inc
mov
adc
and
jg
jmp
mov
movl
cltd
les
inc
aas
lahf
lret
dec
xor
push
xor
jmp
hlt
pop
rcrb
lds
sub
jae
aas
cs
mov
gs
jo
shr
mov
sub
aaa
cmp
cs
jl
negl
aas
inc
test
jns
std
sub
xchg
sbb
mov
xor
enter
jge
fisttps
inc
mov
ss
dec
pop
sub
outsl
shrl
inc
les
lock
pop
cmpsl
xchg
pop
out
js
bnd
mov
arpl
push
jmp
arpl
ret
sub
ret
jmp
lcall
int
pop
jl
movsl
sbbl
mov
mov
sbb
lea
jl
lcall
fbstp
push
jle
push
and
out
mov
or
mov
jecxz
movsl
sub
xchg
ret
inc
lea
and
adc
int3
dec
xor
cwtl
popf
dec
adc
mov
sub
insl
push
in
out
mov
or
int
in
into
jnp
or
adcb
xor
add
pushf
sbb
cld
xchg
cmpsb
ljmp
mov
fisubrl
mov
rcrl
dec
pop
lods
and
dec
cmp
sub
mov
dec
fdivl
jmp
subl
lods
sub
ss
adc
pop
mov
push
outsl
mov
or
jl
rclb
jg
xchg
mov
push
insb
pop
jp
pop
mov
xor
dec
jne
shrl
pop
int
or
inc
xor
pop
push
shrl
xor
lahf
adc
push
pop
push
fstpl
pop
loope
push
push
cld
dec
add
jecxz
adc
or
mov
repnz
in
das
sbb
test
out
dec
mov
test
xchg
fimuls
rcll
add
push
push
les
add
testb
arpl
adc
into
aas
cmp
je
or
mov
fisubrl
push
dec
push
mov
hlt
repnz
jecxz
push
mov
aam
adcl
inc
aad
and
cmp
ret
sbb
inc
movsb
sbb
lock
push
lds
mov
pop
arpl
sbb
dec
add
sbb
daa
scas
sbb
adc
aad
mov
lods
lret
jp
cltd
fcoms
adc
adc
cmpsl
pop
not
xchg
jbe
mov
insb
add
ja
xlat
mulb
xchg
inc
pop
mov
mov
xor
mov
dec
xor
xchg
mov
cmp
bound
inc
push
xor
add
jb
and
stos
nop
inc
shr
and
stc
in
shlb
sahf
dec
add
fbld
sbb
hlt
xchg
sub
pop
sbb
or
adc
cld
test
sbb
stos
faddl
ss
fsubl
insb
mov
ret
push
hlt
ret
rclb
mov
mov
jmp
fstps
sbbl
push
js
icebp
sub
add
xchg
nop
std
lahf
mov
stos
addr16
popf
adc
jae
push
add
sbb
mov
fdivs
pop
jl
lds
mov
jno
nop
popf
pop
out
stos
in
lods
jns
xchg
sub
pop
mov
int3
xchg
imul
push
out
sub
mull
and
das
loop
mov
test
dec
xor
call
test
inc
mov
add
arpl
mov
pop
bound
lret
sub
push
pop
mov
lret
lahf
ss
arpl
es
call
aam
lret
clc
iret
sub
sahf
jnp
push
push
sub
xchg
rolb
cli
nop
jne
push
mov
jl
cmp
fptan
ds
xchg
dec
ret
ret
jg,pn
imul
or
mov
jmp
jnp
dec
cmpl
xor
pop
sbbb
xchg
xor
adc
xchg
inc
mov
xchg
dec
into
ficomps
out
xchg
add
call
jecxz
mov
push
ficompl
fsubs
lock
mov
test
shrl
fistl
outsb
pop
sub
add
mov
js
dec
rcrb
cld
popf
and
test
fcmovb
inc
lock
add
mov
icebp
mov
pop
arpl
mov
cmp
mov
adc
popl
dec
cld
seto
push
add
ja
push
jns
push
sbb
sub
mov
fsubs
sub
xchg
ds
les
xor
out
adc
lds
dec
rcrb
sbb
adc
jge
xchg
out
cmp
out
sub
xchg
sahf
jge
and
jecxz
sub
fsubrp
xor
xchg
incl
push
add
aaa
movsb
outsb
gs
frstor
cmp
xlat
cmpsl
pop
add
mov
cmp
jge
xchg
jmp
roll
inc
push
test
add
je
lret
sbb
lret
imul
rol
clc
into
cmp
and
mov
cmp
mov
dec
shll
pop
lahf
cltd
or
fstl
add
push
clc
mov
jbe
sbb
inc
imulb
int3
in
in
insl
rclb
pop
orb
inc
fs
dec
aaa
pop
sbb
xchg
andl
shrl
fcoms
or
sbb
sbb
nop
movsb
mov
xchg
shlb
mov
jmp
frstpm(287
xlat
sub
inc
cltd
jg
xchg
pop
stc
lahf
jmp
out
lret
add
fcomps
fbld
mov
adc
sbb
dec
int
xor
loop
adc
fldcw
testl
lea
mov
lahf
xlat
add
mov
lahf
pop
jae
sub
xchg
push
add
in
test
je
or
sub
std
add
xchg
cld
xchg
fsubl
adc
outsb
jle
cmp
mov
les
cmpsb
rcrb
stc
xchg
and
sub
mov
mov
inc
pop
addr16
push
shlb
popf
push
mov
jp
mov
jmp
lds
mov
scas
pop
push
sub
xor
sub
or
inc
ja
ret
enter
test
sub
faddl
lea
inc
xchg
jp
rorb
mov
mov
push
pushf
scas
imul
data16
xor
outsb
comiss
orl
movsl
sbbb
sbb
ds
mov
adc
pop
idivb
test
xchg
dec
sbb
add
pop
ljmp
adc
dec
cmp
xchg
push
and
rclb
aad
arpl
inc
dec
movsb
jecxz
lcall
jecxz
adc
pop
aaa
cmpsb
lahf
inc
or
pusha
lret
std
dec
ret
push
cmp
and
in
mov
stc
xchg
pop
push
gs
in
sub
adc
push
clc
mov
mov
pushf
fdiv
fnstcw
call
jmp
test
cli
loope
lcall
int3
mov
xchg
enter
pop
sarl
xor
sbb
arpl
inc
jg
js
jbe
inc
inc
xor
aaa
cmpsl
jbe
mov
lret
or
lods
adc
ficoml
imul
add
push
jae
in
push
leave
fucomi
cmp
rcr
mov
iret
sar
xchg
mov
fwait
nop
lahf
mov
out
or
fadd
fbld
mov
jge
xchg
out
pop
loope
es
test
mov
fadds
cmp
ja
cmc
out
test
das
cmp
imul
test
and
jl
pusha
jb
cmc
lds
pop
and
inc
andl
mov
cli
jae
xor
adc
inc
cmp
pop
xchg
xor
mov
add
pop
add
out
mov
arpl
popf
loope
dec
lock
repz
xchg
push
or
mov
jno
push
push
lret
icebp
imul
lahf
test
inc
ja
mov
clc
cmp
add
lea
cmp
push
pop
lahf
test
cmpsb
xchg
test
jecxz
mov
clc
insb
pop
daa
inc
add
and
divl
sbb
das
sub
loop
adc
push
pop
push
fwait
mov
sbb
in
test
je
xor
mov
imul
lock
sub
ja
shlb
jne
cmp
inc
xlat
cmpl
xchg
jecxz
test
stos
dec
in
test
icebp
or
leave
sub
xor
scas
adc
stos
xor
int
out
dec
rcll
sbb
pop
push
roll
shll
lods
cmc
lret
out
rcrb
lahf
inc
push
out
dec
xlat
pop
mov
xchg
sbb
and
jge
adc
xchg
push
xchg
mov
xchg
hlt
sarb
push
xor
rclb
push
inc
incl
jmp
sub
test
icebp
and
mov
gs
ds
xchg
movsb
bnd
xor
and
mov
lcall
mov
mov
rsm
lcall
inc
push
and
fdivr
nop
cmp
adc
adc
fwait
clc
mov
loopne
mov
lcall
int3
mull
in
in
cmp
push
or
cmp
sarl
outsl
mov
int
popf
mov
pop
ja
push
sbbl
cli
dec
xor
sbb
jnp
sbb
faddp
lods
nop
and
inc
mov
dec
push
jbe
mov
adc
es
mov
in
lahf
fbstp
xor
mov
aad
mov
sub
shrl
xor
xchg
int
push
mov
sarl
mov
xchg
lods
jg
popa
sub
in
test
xchg
and
aam
jbe
test
sbb
cmpsl
jl
outsl
mov
cmp
loopne
aad
dec
and
jmp
mov
cmp
mov
add
dec
int
inc
stos
aas
dec
dec
mov
enter
jge
add
add
xor
pop
dec
adc
xchg
jmp
jl
int3
inc
add
lret
adc
xor
inc
sbb
mov
and
dec
dec
adc
dec
mov
mov
mov
mov
lods
popa
lea
inc
nop
rcll
idiv
ds
dec
pushf
adc
bound
stos
les
pop
int
pop
shll
ja
insl
pop
push
and
push
jo
sbb
ds
and
or
sub
std
dec
pop
lods
pop
xor
ds
adc
or
sahf
xchg
push
adc
cwtl
xor
and
lds
test
aaa
enter
push
lds
jb
adc
mov
out
fbstp
ds
cmpsl
std
out
sahf
xor
in
xchg
stos
out
hlt
push
adc
cli
dec
je
notl
xor
mov
push
jle
fdivr
enter
jb
cmpsb
mov
push
push
mov
or
lea
jb
jnp
mov
jns
aaa
outsb
or
imul
and
dec
pop
fcoml
in
outsb
cli
inc
cmpl
mov
lock
and
jbe
std
inc
mov
jg
imul
popa
movsb
dec
clc
jns
es
sub
int
or
mov
and
loope
add
jnp
or
stos
repnz
xchg
lret
lods
icebp
sub
cmp
insb
xor
outsl
sub
inc
ds
bound
stos
out
enter
out
push
cmpsb
gs
cmpsb
mov
inc
adc
ret
fwait
and
adc
push
lds
popa
push
fsubl
xor
mov
sub
jnp
sub
jle
aam
lcall
pop
push
test
jne
nop
test
mov
add
into
jnp
dec
idivb
aaa
mov
and
fwait
mov
arpl
adc
cmp
imul
into
leave
js
cmc
xor
test
lods
test
inc
mov
rcr
ds
aad
iret
mov
dec
xor
sahf
and
push
jo
pop
scas
shlb
mov
jbe
pop
test
aam
mov
stos
test
pop
int3
repz
in
enter
xor
jnp
mov
push
inc
xor
leave
lock
popf
pop
inc
into
int
pushl
imul
mov
adc
test
jne
imul
jmp
pop
scas
push
dec
pop
daa
mov
dec
inc
dec
sub
inc
sbb
push
sti
pop
in
jecxz
push
outsl
das
xchg
pop
mov
rclb
mov
imul
mov
xchg
insb
out
popa
and
xchg
icebp
mov
lods
sbb
in
push
mov
inc
mov
data16
into
arpl
add
or
call
push
pop
mov
popa
and
leave
lcall
shll
movsb
or
and
xchg
sub
mov
divl
or
fcoms
out
push
in
insb
inc
xor
int
cmp
cmp
xchg
loop
and
cli
mov
cmpsl
dec
xchg
mov
cmp
stc
mov
roll
andl
lcall
fs
fidivrs
jg
loopne
add
out
mov
sub
stos
or
lock
roll
jne
test
inc
pop
fwait
ds
dec
clc
les
add
mov
cmp
aad
pop
pop
xchg
fcomps
mov
push
ja
mov
cwtl
jns
pop
cmpsb
sarl
fcoms
xchg
or
ficoms
jp
mov
les
mov
pop
sbb
cmpsb
icebp
pop
or
xchg
cltd
xchg
mov
xor
xchg
or
cmp
popf
sub
sub
inc
jns
enter
lods
or
shrl
jno
push
xchg
insb
pop
aad
ror
or
insl
lds
rorb
lods
ja
popa
bound
dec
lds
lock
mov
xchg
push
adc
in
pop
fiaddl
dec
cld
pop
push
sti
mov
loop
adc
call
inc
add
add
mov
clc
insb
ja
mov
loope
pop
sahf
das
lods
sbb
test
hlt
fldl
or
inc
mov
push
hlt
dec
xchg
jae
jb
jae
outsl
xor
aaa
jne
fs
neg
jns
jmp
pop
js
in
mov
ss
mov
jecxz
clc
cmp
cmpsl
jo
cli
pop
stc
adc
add
lret
sahf
lods
mov
and
pop
and
stos
pushf
add
mov
mov
dec
das
and
adc
add
inc
push
ljmp
enter
lret
dec
test
movsl
shrl
pusha
cmpl
rclb
fcmovnu
aam
dec
int
sbb
adc
fsubl
scas
cmpsl
push
rcrb
push
int
outsb
mov
jns
cli
aad
dec
pop
ljmp
xchg
add
jae
mov
in
mov
int
sbb
push
pushl
bnd
push
jnp
mov
jae
xchg
or
or
out
out
movsb
in
push
pop
jle
es
sub
sbb
arpl
fiaddl
es
fisttps
or
imul
or
rorb
dec
push
adc
sub
mov
ja
add
lcall
cltd
mov
or
push
pop
icebp
pop
mov
test
cmp
pop
test
clc
cmpsl
lahf
outsl
or
lods
sbb
and
xchg
or
jl
sub
arpl
xchg
xchg
cli
out
out
xor
lret
adc
fbld
fistpl
cmp
dec
push
push
nop
pop
mov
sbb
fcoml
jp
inc
mov
push
xchg
ret
sub
lahf
jnp
push
push
fldt
mov
inc
dec
scas
cltd
arpl
push
test
lods
mov
sar
push
out
cmp
test
sahf
jno
arpl
shlb
mov
and
xchg
mov
inc
inc
mov
cmc
mov
imul
mov
xchg
sarb
sub
jns
shrb
mov
mov
cmp
jg
adc
sbb
push
pop
xor
mov
or
sub
test
pop
out
lds
xchg
and
and
or
jecxz
imul
pop
hlt
xchg
push
jno
mov
lcall
cltd
adc
pcmpgtw
push
pop
cld
or
mov
pop
mov
pop
aaa
in
pop
xor
inc
sub
pop
lods
lea
mov
mov
insl
hlt
fcomps
pop
push
pop
jno
mov
sub
pushf
xchg
jbe
mov
mov
fwait
out
jmp
push
jbe
ficoms
and
jbe
scas
jo
imul
mov
push
jb
repnz
mov
jb
xchg
pop
cmp
pushf
test
aas
or
inc
and
test
popf
adc
addr16
push
sub
cmpsb
dec
xor
popf
imul
pusha
sbb
add
mov
mov
daa
shrb
sti
pop
sbb
outsl
repnz
xchg
pop
arpl
push
jnp
add
xor
popf
sahf
loop
mov
mov
pop
adc
imul
andnps
cmp
push
jmp
pop
cwtl
mov
mov
inc
cmp
cmp
icebp
pop
jle
and
and
mov
jmp
test
mov
std
mov
sub
pop
sbb
inc
and
filds
push
mov
hlt
adc
push
in
jb
mov
inc
sahf
jecxz
mov
xor
mov
xchg
dec
push
inc
dec
pop
push
mov
lret
pop
movsl
xchg
jl
push
cmc
or
mov
xor
mov
ficomps
push
push
movsl
sbb
pop
jecxz
add
mov
movsl
add
rcr
outsl
dec
std
push
pop
cs
push
lock
lcall
imul
popf
jae
sub
fsubl
int3
pop
cmpsl
outsl
push
mov
incb
lock
into
imul
push
out
mov
mov
inc
mov
stos
push
aam
jl
jo
cmp
rorl
sbb
hlt
mulb
or
lds
inc
ds
lahf
mov
imul
sub
sub
push
mov
popf
sarl
dec
lret
pop
arpl
or
fwait
sub
arpl
jns
in
cmpsb
imul
pop
popf
popa
pushf
push
nop
hlt
or
ljmp
icebp
idivl
aam
insl
orb
cmp
popf
xor
fcmovnu
std
inc
cltd
test
into
shrb
imul
pop
hlt
cmpsb
stos
jp
mov
cmp
push
or
in
fldenv
xor
and
cltd
jp
push
dec
sbb
mov
fbstp
xor
scas
stos
shrl
mov
jo
and
mov
mov
xchg
mov
cmp
mov
dec
notl
pop
pop
sub
loopne
xchg
in
jp
movsb
fninit
add
mov
dec
sti
add
adc
pop
scas
sbb
mov
cmp
outsl
das
sti
outsl
pop
out
lahf
add
dec
cmp
jp
jb
mov
dec
cmp
and
push
int3
loopne
pop
test
push
or
xor
repz
ja
dec
dec
push
gs
lea
in
repnz
sbb
stos
mov
fwait
repz
leave
pop
loope
add
fs
add
jbe
mov
cmp
pushl
cs
outsb
mov
ds
xlat
jnp
xchg
or
xchg
xor
rclb
fnstenv
outsl
insl
inc
cmp
lea
sbb
clc
out
dec
mov
repnz
imul
mov
sbb
push
pop
jnp
sahf
pushf
ret
xor
or
pop
and
sub
add
cmp
jp
int
insb
mov
inc
lods
mov
cmp
pop
cmp
daa
mov
lahf
xchg
ljmp
jne
outsl
and
inc
fwait
and
mov
mov
ret
dec
scas
dec
in
out
dec
push
in
xchg
fs
sub
ds
xchg
xor
orb
mov
inc
mov
sti
mov
cmpsb
xchg
rcll
sbb
or
rcrb
jnp
cwtl
inc
push
pop
xchg
xor
into
clc
mov
mov
popa
push
jecxz
fstpl
add
nop
or
xor
lea
pcmpeqb
clc
dec
shlb
pushf
sbb
jb
faddl
hlt
leave
int
xor
ror
push
cwtl
out
loop
popf
fbld
stos
cld
sbb
testl
mov
push
mov
ret
adc
mov
rcl
fbstp
jae
test
std
mov
xor
adc
pop
push
std
inc
or
ja
mov
sub
sub
test
push
jne
or
mov
xchg
mov
xchg
stc
jno
push
arpl
jnp
pop
cmpb
outsl
test
xor
xor
std
imul
xor
dec
pop
mov
neg
push
jmp
xor
cs
sbb
aas
adc
mov
xchg
mov
sbbb
cwtl
mov
mov
iret
pop
pop
mov
outsl
cmp
mov
ljmp
and
and
test
push
jmp
push
shrl
push
cmp
scas
repnz
jno
pop
aas
je
sarb
pop
pop
in
push
inc
jge
negl
push
or
push
push
adc
verw
in
insl
scas
fldenv
push
add
jb
shrb
add
lcall
or
push
inc
fs
mov
add
add
jg
sahf
out
push
cltd
xchg
movsl
fbld
mov
in
pop
cli
or
dec
loop
sbb
xchg
mov
xchg
cs
sub
lea
mov
bound
lahf
dec
loopne
pop
fidivl
out
add
lcall
push
ret
jae
mov
cmp
jae
clc
jns
sub
push
rorb
xchg
ficoms
add
fwait
xchg
mov
xchg
xlat
sbb
cmp
add
jb
push
lds
jl
sub
or
mov
and
repz
inc
push
movsb
test
sub
jb
das
pop
mov
call
mov
inc
dec
out
jbe
jno
sbb
jle
sti
int3
les
and
lea
hlt
outsl
sahf
mov
fsqrt
lcall
fidivrs
loope
add
add
push
movsb
or
adc
ret
test
dec
movsb
xor
fs
jne
daa
inc
adc
mov
dec
rolb
pop
scas
pop
jae
jne
int3
push
out
sub
dec
loop
xchg
ljmp
in
cmpsb
jns
add
adc
xchg
stos
fucomp
outsb
jb
stos
and
jbe
out
frstor
lods
int3
mov
push
cmp
popw
jno
lds
pop
xor
xor
stc
or
pop
sbb
pop
cmpl
cmc
sub
cmc
clc
jl
popa
js
fcomps
pusha
push
mov
xchg
fwait
lcallw
lret
repnz
in
inc
sbb
push
fiaddl
call
incb
fdivr
mov
mov
xchg
add
popa
push
ja
bound
leave
mov
movsl
sbb
sub
pop
cmp
sub
pop
xor
mov
inc
int3
add
xchg
cli
sbb
rcrb
std
fwait
negb
hlt
cmpsl
cmc
push
mov
mov
imul
adc
sub
je
lret
fisubl
or
xchg
pop
or
out
ds
lock
dec
pop
pop
mov
hlt
xor
js
sbb
push
dec
popa
push
loopne
sbb
pushf
mov
bound
mov
inc
mov
push
mov
push
scas
mov
setne
dec
cmp
call
push
adc
aad
sub
jmp
mov
xchg
das
jmp
out
xchg
xchg
add
js
mov
mov
icebp
dec
sub
data16
xor
mov
leave
imulb
xchg
push
inc
xlat
mov
adc
push
mov
and
loopne
shlb
sbb
imul
fcmovne
stos
jnp
mov
sar
sarb
clc
xchg
pop
icebp
jmp
outsl
push
or
push
lret
pop
pop
jae
hlt
loope
jl
or
in
adc
cmp
or
add
lods
pop
ss
imul
call
loope
loope
clc
dec
jg
int
jo
lahf
mov
mov
mov
adc
xor
rdtsc
pop
inc
shlb
jne
lock
mov
out
push
outsb
xor
mov
push
cmpsl
jne
jb
mov
push
xor
daa
sbb
mov
dec
ds
pop
dec
and
out
mov
mov
sarb
stos
ss
ss
cmp
pop
jle
adc
xchg
lds
dec
test
fwait
adc
dec
or
sahf
pusha
adc
jle
sbb
xchg
adc
fimull
hlt
gs
xor
repnz
insb
push
fcmovnbe
test
jmp
scas
stos
jp
dec
sub
mov
scas
imul
test
lret
cmp
ja
pushf
fnstsw
xor
outsb
add
pusha
mov
or
sbb
stc
xchg
inc
loope
mov
mov
xlat
xor
gs
aad
cmc
inc
shrl
in
insl
call
mov
mov
jno
xor
mov
xor
bound
test
jb
mov
add
andl
push
in
movsl
or
or
mov
cmc
xor
pop
stos
xchg
pop
fwait
fs
sti
aam
addr16
lcall
leave
imul
and
aaa
jae
mov
movsb
pop
push
xor
andl
sbb
xchg
stos
cvtpi2ps
dec
lea
mov
pop
int3
mov
icebp
pusha
xchg
shll
jl
fsubp
loopne
mov
ret
jae
shlb
xlat
aaa
xorps
clc
pop
testb
jno
add
rorb
or
or
lcall
lock
icebp
pop
pop
mov
adc
adc
push
enter
test
push
pop
arpl
xor
sbb
xor
push
fwait
lahf
dec
push
cmp
jl
sbb
jo
pop
in
enter
dec
adcb
xor
xor
inc
or
std
push
push
stc
inc
aaa
les
cmp
iret
xchg
pop
insb
mov
das
mov
inc
inc
pop
insl
sub
pop
push
and
outsl
or
add
inc
adc
jne
mov
mov
pop
add
or
xchg
repz
jge
decl
sub
rcrl
into
xor
dec
jne
add
sbb
out
repz
ret
push
or
shrl
jno
inc
lock
xor
mov
js
sbb
mov
xor
xchg
mov
sbb
jp
bnd
pop
cli
xchg
jge
xchg
jno
xchg
fwait
xchg
or
in
dec
or
roll
cli
mov
inc
xchg
lret
sbb
push
xor
subl
movsl
xchg
xor
push
imul
test
test
aaa
jmp
lcall
and
fxch
fwait
bound
ret
movsl
pop
adc
sahf
pusha
mov
dec
mov
and
and
pop
push
andl
xor
jno
mov
popf
imul
iret
ja
dec
mov
push
xchg
mov
xor
dec
shlb
cmc
mov
jg
loopne
addr16
jle
icebp
ljmp
adc
pop
jl
dec
push
dec
das
repz
sahf
loope
push
mov
jl
dec
push
push
pop
notb
les
out
testb
loopne
into
jg
sbb
xchg
push
jg
push
inc
xchg
inc
push
mov
insb
add
push
loop
sbb
xor
cwtl
call
xchg
loopne
mov
mov
in
mov
stos
mov
mov
mov
mov
mov
xchg
jnp
push
movsl
push
movl
mov
out
lcall
push
insb
loope
ja
gs
rcl
addb
cmp
rolb
pop
cwtl
cli
mov
adc
push
sbb
lret
or
mov
mov
inc
fs
js
jbe
inc
push
mov
daa
mov
adc
out
mov
sti
int
cmpsl
cmp
lods
outsl
enter
fsubs
popa
jo
iret
push
pop
add
int3
movsb
push
mov
cmp
test
adc
in
ss
rolb
jns
pop
cmp
and
jecxz
add
dec
push
adc
shlb
sbb
pop
movsl
sub
and
adc
adc
fstpl
mov
inc
ljmp
add
sub
mov
testb
push
push
stc
in
inc
push
add
out
jno
sub
push
std
sbb
sbb
jnp
nop
rcrb
pushf
xchg
cmpsb
aas
lea
lret
push
cmc
in
outsl
int
ja
fst
sub
mov
cwtl
pop
cwtl
out
out
xchg
je
sbb
arpl
aaa
add
pop
fidivrl
out
fiadds
dec
mov
outsb
test
dec
cmpsl
lahf
jl
stc
pop
adc
add
les
shr
out
shll
xchg
std
sbb
rcll
mov
mov
jno
jb
jnp
fcmovnbe
out
scas
dec
clc
xchg
fiaddl
test
cmpsl
inc
xlat
fldcw
dec
nop
xchg
test
add
sub
jnp
push
in
shll
add
jb
push
mov
sti
xchg
inc
mov
dec
and
dec
rcll
cs
adc
into
xchg
lret
mov
das
fwait
loop
sarb
int3
les
adc
fimuls
ret
mov
mov
adc
in
mov
and
aad
shlb
push
cmp
add
dec
xor
repnz
inc
cmp
fst
repnz
mov
xchg
aaa
pusha
enter
pop
divb
mov
ja
jp
in
push
lds
int
fisttps
fs
test
jmp
jnp
aad
fsubrs
repz
stos
addl
push
adc
loop
jae
adc
push
pop
arpl
add
mov
push
scas
add
sub
outsl
jo
subb
push
adc
repz
pop
pop
inc
sbb
pop
push
sbb
jb
arpl
mov
lret
jecxz
and
xlat
cmpsl
cmpsl
or
mov
mov
stos
lds
add
loopne
push
lahf
das
pop
mov
leave
call
ss
cmp
fsub
addr16
lds
scas
mov
add
xchg
fsub
cmp
pop
dec
insl
mov
and
jge
mov
pop
jmp
dec
dec
pop
jg
cmpsb
bound
cmp
or
mov
xchg
add
fisttpll
pop
mov
iretw
adc
repz
jbe
ljmp
mov
push
xchg
cmp
cmp
sbb
fcompl
mov
mov
lret
mov
rcrb
push
xor
or
leave
adc
and
xchg
sub
imul
mov
sub
rcrl
dec
mov
xchg
pop
jmp
cltd
mov
stos
fsubrl
push
popf
aaa
aad
pop
je
pop
fstps
fsub
pop
jns
dec
and
ret
lahf
pop
lds
testl
cmp
std
cmc
call
xchg
mov
lret
adc
dec
daa
rcl
sahf
lahf
ret
inc
mov
adc
movsl
push
stos
xchg
test
mov
test
dec
lret
adc
and
in
adc
adc
sub
mov
popf
loopne
outsl
sbb
data16
pusha
add
mov
mov
sub
imul
xchg
inc
popf
std
icebp
loop
dec
mov
pushf
pop
cli
jnp
pop
inc
mov
add
aam
add
dec
lods
inc
lret
ds
xchg
inc
xchg
adc
jecxz
bnd
push
cs
loope
lcall
int
pushf
push
int3
jo
pop
fcoms
or
cli
dec
push
mov
jo
loope
sahf
pop
cld
les
jae
std
es
inc
push
pushf
push
jl
call
out
dec
jecxz
cmpsb
cmpsl
jle
add
movsb
or
out
lret
jl
push
jo
cmpl
jbe
fidivrs
or
jp
pop
clc
cmp
sbb
data16
lahf
jge
add
mov
mov
loop
mov
jmp
jg
push
int3
mov
jecxz
sbb
dec
dec
incl
shrb
in
and
in
addl
inc
fwait
idivb
aaa
stc
ss
mov
clc
bound
adc
hlt
mov
pushl
jno
arpl
cld
in
nop
mov
mov
aad
mov
mov
push
sahf
iret
int3
cwtl
mov
mov
push
mov
push
push
ror
mov
sub
mov
adc
pop
sub
mov
int
xchg
leave
mov
jg
jnp
lock
push
jne
stos
mov
test
dec
mov
ret
pushf
mov
xorb
mov
jge,pt
test
imul
or
and
jae
fisttpll
xor
xor
insl
sbb
jne
clc
cwtl
xchg
mov
ret
cmp
push
popa
aam
jb
push
cmpsl
fnstcw
mov
int3
popf
mov
dec
cmpsb
mov
ficomps
ljmp
and
adc
dec
icebp
dec
stc
cmp
iret
jmp
movsl
cld
fcomps
negb
adc
adc
loop
sub
sub
push
mov
andb
pop
sbb
stc
mov
or
xchg
andl
push
movsl
dec
and
test
les
and
mov
pop
xchg
jno
sub
fistpl
ds
stos
xchg
mov
in
pop
out
cltd
adc
jp
mov
lods
push
gs
std
lods
mov
fst
or
or
cmp
or
xchg
mov
and
enter
or
pop
jecxz
into
add
or
repz
or
xlat
rol
mov
loope
adc
shrb
push
cmpsb
clc
adc
cmp
jmp
cltd
sbb
sub
pop
xchg
dec
adc
or
mov
adc
lock
mov
xlat
cmp
mov
jbe
and
jb
add
pop
dec
cwtl
cmp
stc
mov
mov
daa
out
mov
ds
dec
push
das
jne
sahf
adc
add
and
xchg
loop
add
je
shl
push
aaa
cmp
or
mov
or
cs
movsb
pop
add
jno
dec
xchg
addr16
loopne
xchg
xchg
sbb
stc
dec
fucomip
loopne
bound
jbe
and
xchg
xor
mov
add
pop
or
aas
sbb
roll
lods
push
xchg
aad
pop
ss
popf
cwtl
loopne
lcall
mov
lahf
stos
flds
outsl
xchg
sub
fildl
mov
ljmp
cmp
js
out
push
jle
push
push
std
mov
mov
inc
jbe
inc
lods
push
mov
push
iret
xchg
xchg
xor
cmp
ret
cmp
add
imul
xchg
pop
dec
sub
push
arpl
mov
pop
xchg
ja
movsb
pop
cmp
jnp
lea
in
and
or
in
xchg
pop
xchg
pop
or
in
push
push
pop
dec
jo
nop
pop
cwtl
add
adc
fmulp
adc
outsl
pop
push
inc
les
cwtl
push
cli
pop
frstor
sub
mov
sbb
test
shrl
roll
sub
sub
inc
push
adc
loopne
push
scas
xchg
xchg
enter
jo
mov
push
popa
mov
cmp
inc
aam
mov
and
sbb
inc
dec
xor
mov
popf
test
push
out
mov
push
loopne
mov
xchg
rol
xchg
cmp
js
pop
enter
gs
xchg
sbb
pop
fisttpl
in
or
andl
ret
push
add
inc
pop
mov
mov
add
and
add
inc
addr16
cmpsl
mov
add
pushf
sbb
je
mov
mov
out
dec
and
and
jb
imull
xchg
xor
ret
scas
inc
mov
std
gs
inc
adc
jbe
add
ss
mov
cmp
jl
cs
jne
cs
or
js
xchg
or
rcll
lahf
xchg
das
cwtl
int
sbb
mov
xor
sahf
aaa
cmc
sub
int3
js
and
icebp
xor
push
cmpl
inc
imul
test
icebp
imul
nop
adc
pop
fsubrp
dec
pop
sbb
daa
xchg
fstps
test
imul
and
adc
movb
arpl
ret
out
add
hlt
cmp
pop
xchg
jp
mov
fwait
dec
loopne
clc
imulb
mov
and
add
ds
push
adc
incb
xor
out
shll
xchg
dec
iret
ffreep
shll
pop
das
sbb
lret
js
cmp
lret
shrb
ret
loop
sbb
outsl
push
pop
lea
mov
push
test
jnp
test
mov
js
push
repnz
adc
pusha
decb
pop
and
sub
mov
push
sub
jle
adc
int
xor
mov
mov
push
dec
daa
out
pop
mov
xchg
pop
lock
pop
adc
imull
aad
push
mov
push
and
cmpsl
xchg
push
sti
dec
push
clc
sub
xor
mov
sub
cli
daa
shlb
push
ficompl
add
inc
aaa
mov
lods
cmp
adc
ret
aas
shlb
sbb
cmp
sahf
ds
movsb
sub
sbb
nop
hlt
cmp
movsl
cltd
jo
loopne
jbe
sarb
sub
jae
fisubrs
repnz
cli
jno
stc
xchg
cmp
cli
fldl
iret
stos
mov
jae
xchg
inc
shrl
or
js
jo
sbb
addr16
iret
jae
jns
pop
and
dec
call
add
sub
push
cmpsl
push
dec
push
xchg
inc
rcrl
xchg
mov
jno
xchg
pop
repz
add
inc
cld
int3
and
data16
stos
and
xor
iret
les
mov
dec
sti
push
jns
sbb
inc
loop
pushf
dec
lods
fwait
cmc
push
rorl
or
cmpsb
enter
aad
mov
in
sub
dec
popf
fiaddl
sbbb
cmp
jp
jecxz
xor
icebp
and
lds
cmp
shll
pop
and
xor
ss
and
sarb
push
leave
popf
fwait
movsl
out
cmp
jg
fwait
cmp
mov
loopne
push
cwtl
out
pop
adc
xor
scas
xchg
popf
aam
mov
lods
sub
dec
mov
imul
and
xor
ja
adc
or
or
xor
xchg
movsb
jns
sub
jo
int3
aad
jns,pn
xlat
jb
sub
and
cs
outsb
leave
xchg
xor
lds
fdivl
test
xchg
mov
jge
sub
lahf
mov
lea
std
rcrl
pop
pop
loop
jle
and
shrb
xchg
lcall
scas
push
xor
lock
push
mov
dec
lcall
mov
xchg
mov
cmpsl
inc
fidivrs
fdivr
iret
pop
pop
and
iret
cmpsb
shrb
cmpsb
sbb
jno
dec
mov
inc
mov
mov
hlt
add
jno
cmp
sbb
and
jo
or
out
cmp
subl
jnp
push
sub
jo
and
jmp
cltd
test
inc
faddl
jmp
jg
jmp
cmp
stos
dec
enter
je
inc
in
mov
cmp
xor
cmp
test
sarb
dec
xchg
jmp
out
push
xchg
mov
fisttpll
and
cmp
fprem
stos
loope
xchg
loop
fistl
and
les
test
popf
mov
lahf
mov
or
lock
add
xor
sbb
pop
add
mov
dec
bound
loop
push
adc
pop
stc
arpl
xchg
xor
adc
or
adc
fsts
cli
out
jg
or
cs
sarb
add
push
jle
jbe
int
data16
mov
imul
inc
or
mov
fsubr
aam
aas
mov
outsl
mov
lods
jb
lods
lcall
dec
cs
fldcw
jo
ljmp
add
jmp
sbb
add
mov
into
pop
les
std
ja
fmull
out
push
and
popf
jl
or
aas
add
iret
mov
push
pop
or
xchg
inc
cmp
and
or
scas
jle
outsl
push
and
into
mov
cmp
jmp
cmp
out
out
add
jmp
mov
dec
out
inc
out
sbb
sub
jne
mov
es
lret
sti
aas
push
inc
or
jle
mov
das
pop
jne
test
mov
xchg
adc
jo
sarl
xor
daa
inc
xor
push
sahf
adc
sub
sbb
fnstsw
and
jnp
dec
and
mov
mov
xor
cs
add
mov
divl
pop
fbld
mov
test
and
jmp
and
xlat
pop
dec
out
cwtl
sub
sub
cmp
pusha
lock
bnd
inc
ljmp
add
jbe
stos
shll
jg
pusha
test
adc
pop
fdivrl
sub
push
or
lds
push
jp
lea
cmpsb
loop
sub
es
jmp
cmpsl
sarb
add
push
sbb
mov
and
or
pop
sbb
dec
mov
in
ds
mov
ja
inc
pop
jle
mov
popa
push
push
shll
data16
out
repz
jecxz
mov
mov
mov
fmulp
data16
fucom
sub
fidivrl
mov
lret
divb
lahf
sub
xchg
into
lods
mov
push
mov
pop
cmc
enter
add
sarb
or
jge
or
in
pop
push
clc
adc
popf
push
xchg
adc
bound
push
nop
movsb
xor
dec
subl
or
shlb
push
ret
repnz
inc
scas
hlt
ret
out
pop
and
xlat
lahf
fwait
std
push
push
in
add
sar
push
fidivl
lods
in
stc
shrb
cmpb
push
repnz
and
xchg
stos
shlb
mov
subl
orl
mov
test
test
fldenv
hlt
sub
cmp
jne
inc
jle
jp
fistps
sub
movsl
dec
in
mov
jns
out
call
aas
stos
cwtl
rcrb
mov
jo
in
in
lret
into
lret
dec
popf
cmp
movsl
dec
clc
les
pushf
xchg
sbb
imul
aaa
or
dec
fs
dec
fs
imul
divb
test
sbb
dec
lret
leave
out
lahf
fwait
inc
pop
lret
sub
inc
arpl
and
pop
and
dec
cltd
add
fsubrl
jo
stos
int3
jnp
cmp
loopne
inc
test
icebp
and
incl
sbbb
into
and
stos
ret
scas
cld
dec
sahf
fcos
cmc
arpl
enter
lcall
mov
xor
mov
jle
adc
and
xor
call
xchg
dec
add
sub
mov
sub
clc
xchg
push
jmp
repz
mov
lods
fs
xchg
lcall
and
ds
aaa
xchg
inc
movsl
lcall
call
pop
add
xor
nop
dec
jno
or
add
not
or
adc
bound
jmp
lcall
std
and
jo
rol
movsl
jne
sbb
out
test
and
xchg
andb
cmc
test
cmpsb
movsl
scas
add
or
loopne
push
xor
pop
or
fwait
rorl
add
cmp
cmp
xchg
xchg
repz
push
into
pop
in
sti
mov
repnz
jl
or
mov
test
insb
js
sub
fcom
mov
cmpsl
mov
xor
jbe
mov
cwtl
jb
pop
jecxz
loopne
lea
pop
adc
jl
fstpl
add
ret
loope
mov
sub
adc
mov
cld
xor
xlat
or
xchg
add
mov
and
imul
jnp
mov
out
lea
sbb
mov
xchg
xchg
aaa
jecxz
sub
mov
add
and
mov
shlb
pusha
jmp
jp
sbb
pusha
and
adc
push
dec
and
cmpsb
or
jmp
test
sub
sub
sub
push
ljmp
ja
scas
loope
dec
fsts
fs
addb
inc
test
out
or
test
and
lcall
loopne
jle
stos
mov
cmp
sahf
arpl
addl
aas
test
out
cltd
lods
and
push
fidivrs
insb
or
dec
cld
mov
shr
js
mov
stos
sbb
cmpl
push
in
xchg
jnp
or
aam
inc
sub
out
pusha
inc
sub
xchg
loop
out
int3
xlat
pusha
fildl
sbb
cld
mov
dec
shrb
enter
aas
push
stos
loop
mov
nop
pop
idiv
sbb
sub
imul
xchg
aas
je
pop
pop
insb
outsl
mov
inc
andl
sti
pop
daa
fsubs
roll
repz
jp
fnstcw
outsb
xor
adc
sbb
dec
cmp
mov
lds
sub
mov
cli
mov
scas
scas
cmc
xchg
loopne
int
and
stos
mov
int3
lret
nop
outsl
imul
arpl
outsl
xor
add
push
imul
inc
negb
adc
sub
sbb
das
leave
inc
scas
movsl
inc
mov
sub
fdiv
cmp
sarl
sub
int3
lock
or
leave
int
push
xor
add
sbb
stos
cli
dec
mov
inc
lods
or
pushf
outsl
push
data16
ljmp
cmp
xchg
mov
scas
inc
scas
stos
clc
notb
jb,pn
sbb
dec
mov
mov
fisttps
mov
pop
aaa
into
jae
push
mov
add
ret
sub
push
xor
mov
xchg
push
adc
outsl
inc
popa
inc
test
cmpsb
inc
cmpsl
push
mov
xchg
lock
scas
push
int3
daa
adc
mov
push
stc
loope
sub
adc
pop
and
fists
xchg
pop
aam
inc
in
inc
mov
inc
mov
mov
in
aas
mov
jecxz
xorb
dec
mull
clc
in
mov
scas
ficoml
pop
fmuls
xor
inc
fimull
outsl
scas
and
clc
inc
imul
lods
dec
mov
clc
xchg
adc
pop
pop
bound
mov
rcrb
cmp
adc
out
ja
mov
mov
out
cmc
fstpl
std
mov
inc
xchg
pusha
adc
push
add
xor
sar
ficompl
pop
lods
into
push
shll
into
rclb
cmc
jbe
rol
or
js
adc
push
sbb
daa
sarl
mov
add
nop
push
jo
ss
mov
lret
stos
clc
notl
jns
pop
sbb
push
mov
cmp
xchg
enter
dec
adc
out
lock
lret
mov
pop
in
and
or
cs
hlt
sbb
rorl
mov
into
ljmp
loope
cmp
pusha
inc
dec
aam
or
pop
add
inc
loop
mov
pop
enter
aam
aas
push
shll
push
pop
gs
sbb
imul
dec
jno
icebp
bound
insl
mov
nop
and
cmp
pop
movsl
mov
sbb
movsb
push
cmc
dec
dec
or
mov
gs
jo
leave
mov
mov
xor
fwait
imul
sahf
adcl
mov
popf
add
adc
pusha
ret
arpl
xor
stc
jle
push
sti
dec
sarl
mov
es
call
ja
fwait
gs
mov
ret
sti
out
into
arpl
push
sbb
xor
push
cmp
outsl
es
ror
mov
xadd
aas
jl
ret
mov
jnp
enter
cmp
fsubl
dec
jl
mov
roll
or
iret
push
xchg
dec
pop
pop
push
shrb
cmp
rcrl
jg
xchg
insb
mov
gs
dec
shlb
lret
dec
fistpl
test
sbb
dec
inc
int
es
sbbl
scas
jbe
push
cmp
cmp
add
in
rorb
xor
aad
dec
push
loop
aas
ficoms
xor
outsb
aas
sbb
out
or
dec
cwtl
mov
xchg
jnp
xor
cmp
or
xor
and
mov
pop
sbb
nop
cmp
and
je
int3
inc
fbstp
in
jecxz
mov
outsb
lcall
jmp
loope
lret
mov
mov
lret
xlat
and
mov
cli
pop
push
and
pop
in
mov
mov
dec
or
leave
add
xlat
movsl
pop
mov
xchg
sbb
sti
push
cmp
mov
mov
xor
pop
jmp
sub
mov
sbb
movsl
push
add
clc
rcll
mov
xor
push
in
adc
xchg
addr16
dec
adc
add
imul
xchg
outsb
and
xchg
and
and
pop
adc
shrl
shl
repz
icebp
outsb
or
mov
mov
int
mov
push
stc
loop
jle
outsb
dec
jmp
pop
stos
sub
inc
adc
mov
pop
subl
addr16
xor
in
arpl
dec
jle
add
sbb
std
mov
inc
xchg
bound
mov
cld
test
mov
xchg
loop
ret
xchg
push
loopne
mov
fsts
mov
xchg
lods
xchg
mov
imul
adc
loop
sub
and
mov
ficomps
and
rcll
aas
nop
push
xchg
cmp
movsl
adc
in
in
lods
cs
fnstcw
xchg
pop
jecxz
add
xor
cmpsl
stos
pusha
lea
cmpsb
lret
xor
lret
sbb
mov
insb
out
jb
push
int
cmp
mov
cmp
jg
sbb
cltd
xchg
push
movsl
jle
fdivs
es
cmpsb
ja
cltd
cs
jns
cltd
xor
xor
xchg
cmp
inc
aaa
adc
jbe
adc
test
xchg
mov
mov
imul
xor
xlat
mov
sbb
pop
cmp
testb
lahf
aad
rorb
int3
push
xor
fs
call
ja
mov
ss
sbbl
pop
sbb
mov
inc
ljmp
adc
movsb
push
cmp
xor
mov
push
jne
daa
xchg
or
push
add
push
push
lea
out
decb
fsubr
mov
add
popf
fisttpl
pop
mov
ss
mov
pop
adc
cmp
clc
pop
mov
add
xchg
insl
movsb
ljmp
xor
and
sub
imul
rsqrtps
jge
and
fldt
bound
add
push
or
pop
mov
cmp
push
call
cmp
mov
into
stos
xchg
xor
jl
inc
push
outsl
mov
push
push
push
mov
add
fs
xor
test
rolb
mov
fdivrs
popl
xchg
test
jmp
mov
inc
fldt
add
mov
std
fsub
cltd
lock
pop
call
insb
inc
inc
jmp
sbb
outsl
mov
mov
push
dec
mov
mov
mov
xchg
sbb
inc
sidtl
fists
or
push
or
mov
bound
mov
sti
or
jmp
mov
xchg
jle
xchg
jno
jmp
xor
scas
mov
jbe
daa
out
xor
sbb
mov
std
loop
cmp
testl
mov
inc
test
mov
xchg
iret
loopne
dec
data16
pop
cmp
dec
mov
pop
test
lret
jo
push
jne
and
adc
push
mov
mov
cmp
outsl
mov
fstps
fiaddl
icebp
mov
into
mov
lods
lret
and
dec
pop
lods
insl
mov
loopne
les
das
mov
push
aam
xlat
test
jp
xchg
shlb
aad
ret
or
and
xor
pop
fimuls
out
sbb
mov
mov
and
jmp
lret
push
imulb
ds
dec
push
loopne
fwait
add
clc
shlb
cmpsb
loopne
shr
pushf
or
sbb
inc
and
push
mov
xor
xor
popf
das
data16
lods
insl
xor
int
pop
hlt
orb
xor
sbb
mov
inc
sub
xchg
add
dec
inc
sub
pushf
in
setns
aaa
std
mov
jno
outsb
add
pop
iret
pop
push
push
movb
cld
es
or
fcomp
fwait
wrmsr
xor
es
xchg
mov
cmc
adc
adc
test
sub
jp
rep
movsb
pop
lods
sbb
cmpsl
repz
xchg
xor
xchg
xchg
jnp
lret
or
jno
push
outsl
jno
mov
xchg
out
out
loope
mov
sbb
xchg
inc
fs
cltd
or
or
test
push
mov
add
or
pop
push
outsb
cwtl
int3
sbb
or
out
mov
fcoms
addb
ss
pop
cmpsb
inc
subl
out
jmp
mov
das
mov
push
je
aaa
mov
and
xor
dec
xchg
and
shrb
jle
aas
jbe
mov
fcomi
cmp
push
dec
std
and
jb
mov
and
in
inc
in
push
inc
data16
jbe
vhaddpd
sub
insl
ljmp
nop
or
rcr
adc
mov
jnp
and
and
fiaddl
out
lock
xchg
fld
in
daa
insl
test
lods
ret
repz
pop
pop
jnp
lcall
out
dec
popa
data16
sarl
out
pop
lcall
cltd
test
mov
push
test
mov
sti
je
and
cwtl
in
das
incl
pop
pop
daa
cmp
ljmp
mov
fisubs
insb
nop
loopne
movsb
cltd
fsubs
pop
mov
repnz
inc
subb
mov
jns
dec
sbb
xchg
dec
mov
cmpl
enter
gs
sub
sarb
or
jl
and
push
in
cld
andb
pop
mov
push
in
push
rcrl
sbb
push
ds
add
jno
sub
xchg
int3
pop
sub
fbstp
rclb
mov
sahf
bound
dec
dec
inc
mov
mov
scas
test
insb
jne
mov
mov
mov
pop
dec
insb
push
popf
mov
mov
lcall
sbb
mov
sub
cmp
xor
xor
xchg
cmpsb
imul
and
or
dec
frstor
stc
popf
mov
and
hlt
or
add
dec
lcall
or
out
mov
or
cltd
mov
rorb
and
xor
cs
jo
mov
mov
das
pop
and
es
daa
dec
subl
sbb
jb
stos
negb
iret
xor
out
fucomp
stc
popa
cmp
mov
xlat
pop
or
mov
mov
sbb
and
cld
mov
gs
mov
inc
and
idivl
nop
jg
xchg
push
aaa
aas
add
sub
mov
lcall
push
movsl
sarb
inc
cs
fs
push
loope
out
add
aam
and
stos
inc
push
sbb
lods
mov
or
pop
frstor
mov
lret
xor
sti
dec
lods
imul
shrb
lahf
loopne
dec
fnsave
sbb
call
loopne
push
and
lret
sub
mov
xor
lods
movsl
cwtl
test
sub
pop
std
pop
stos
mov
xchg
in
pop
out
rclb
xor
xchg
cmp
in
mov
rclb
imul
sbb
and
ja
pop
int3
jmp
or
mov
mov
outsl
jnp
repz
stos
scas
and
pop
pop
cld
clc
xor
fxch
mov
or
mov
push
push
js
adc
stos
push
mov
lods
mov
lock
mov
pop
ret
pop
leave
aaa
or
adc
and
jmp
cmc
in
inc
idiv
push
and
ja
cmpsl
pop
sub
sub
scas
cmp
mul
xor
or
add
lods
lods
xchg
xor
sub
test
dec
jb
or
jne
jne
cli
add
aad
dec
push
mov
daa
dec
push
arpl
adc
jbe
mov
xor
adc
jmp
mov
push
out
dec
xchg
shl
lcall
faddl
mov
enter
mov
out
in
pop
in
push
push
test
add
stc
jge
cli
mov
test
fdivs
mov
clc
inc
lock
jne
js
xchg
and
add
and
xchg
jl
lods
popa
xor
pusha
aam
jp
jmp
into
jmp
jnp
aad
clc
mov
jns
jno
mov
sub
xor
into
dec
pop
cmpsb
in
gs
adc
pop
int
sbb
mov
movsb
je
pop
push
mov
mov
pop
sbb
jecxz
into
in
inc
mov
in
movsl
aas
jno
pop
xor
sbb
inc
insb
cmpsl
xor
mov
xor
pop
addr16
hlt
in
js
aad
int3
sahf
fsubs
push
jnp
mov
lods
adc
sbb
cwtl
test
mov
rcl
xchg
mov
int3
clc
jle
cmp
mov
ljmp
xor
dec
inc
sbb
shrb
into
push
mov
ljmp
idivb
cmpsb
xor
nop
adc
fistl
popa
sub
sbb
imul
fdiv
test
inc
js
lock
stos
outsl
jecxz
bound
out
mov
leave
stos
add
cmc
test
stos
dec
fnstenv
xor
xchg
adc
cmp
sub
and
sahf
rcr
dec
loope
arpl
scas
cmpsb
insb
xchg
out
or
arpl
adc
test
out
push
inc
mov
adc
testb
int3
dec
out
das
sahf
push
push
sbb
inc
mov
jecxz
xchg
mov
xor
inc
jle
pushf
das
mov
and
jge
xchg
lahf
aas
add
sub
mov
and
mov
pop
mov
fidivrs
clc
imul
mulb
rcrb
mov
mov
xchg
scas
push
movsl
sub
push
mov
iret
ja
lcall
stos
xor
cmp
inc
arpl
sbb
cmp
iret
xor
loopne
jb
jno
xor
leave
push
in
dec
mov
arpl
jge
add
in
sub
dec
fistl
sbb
mov
mov
and
xchg
enter
xor
or
dec
add
test
adc
pop
or
mov
sub
xchg
or
push
rorl
and
pop
or
jno
adc
sub
jnp
mov
jecxz
mov
icebp
call
iret
xor
jge
fbstp
fisubrs
fcmovne
lea
test
js
sub
pop
lret
ret
push
inc
aas
cmp
add
or
fisubs
insl
adc
lahf
xchg
int3
fcompl
xchg
push
jecxz
test
dec
call
jnp
test
imul
scas
outsl
jb
or
push
inc
xchg
or
mov
push
cmpsb
or
mov
or
and
xchg
das
enter
scas
sub
mov
popa
out
sub
enter
test
mov
scas
test
xchg
push
jp
push
mov
lret
adc
in
push
fistpl
aam
imul
lahf
mov
add
jge
jbe
sbb
outsl
sub
or
insb
pop
cmp
push
mov
jno
sti
pop
pop
stc
push
es
sbb
lcall
adc
insl
data16
fnsave
in
sbb
insl
add
mov
mov
jl
es
ja
scas
jg
daa
pushf
fcompl
or
and
add
je
and
test
inc
out
rorl
js
into
es
cmp
mov
push
pop
xor
jge
jp
fmul
into
adc
adc
push
int3
pusha
scas
jbe
sub
lock
lods
rorl
mov
jb
jne
loop
outsb
jb
pusha
cmp
shll
cmp
aad
mov
daa
inc
arpl
jae
jb
adc
adc
jns
aad
or
xchg
xchg
add
jle
ljmp
mov
push
imul
jb
xchg
shll
jbe
cmpsl
inc
psrld
push
adc
sbb
adc
std
pop
and
push
les
dec
pop
mov
xchg
lock
mov
lea
push
int
iret
int
mov
add
adc
pushl
sub
jae
inc
add
mov
push
or
imul
outsl
in
pushf
sbb
mov
push
lods
les
xor
dec
mov
in
push
xor
inc
cmp
inc
mov
jae
pop
inc
mov
mov
jp
and
rcrl
fs
dec
mov
add
push
push
add
pop
ret
ss
arpl
push
std
jae
test
xchg
sahf
sbb
sbb
stc
out
jecxz
lahf
roll
adc
movsl
arpl
mov
jge,pn
cmpsb
fwait
loop
scas
cmp
mov
mov
pop
mov
xchg
xor
imul
sbb
loop
add
es
fcomip
add
js
jg
xor
movsb
scas
imul
ljmp
mov
xchg
mov
adc
mov
scas
mov
test
ret
push
ret
lret
imul
fdiv
shl
push
or
sub
sbb
sbb
xchg
loopne
aaa
xor
insl
mov
out
jnp
test
lcall
pop
dec
jne
xor
and
int
sbb
xor
lret
mov
in
loope
mov
mov
mov
in
sub
fildl
sub
cs
xchg
mov
add
push
data16
sub
add
sbb
push
push
pusha
out
fimull
loopne
addr16
addr16
stc
cltd
cld
or
mov
ds
insb
ja
std
shrl
mov
xchg
ret
in
jge
mov
push
fcoms
xchg
in
sbb
cltd
and
adc
or
lcall
sub
stos
pop
call
imul
pop
aas
arpl
out
fmul
pop
negl
das
pop
call
sub
push
dec
cmovae
scas
sarl
pop
lds
fwait
mov
add
push
jb
shlb
add
push
xchg
mov
scas
sbb
push
push
sub
adc
in
je
push
mov
iret
gs
data16
lea
mov
aas
aad
vandnps
lcall
aas
mov
add
pop
cld
sub
les
stc
pop
push
ds
ret
sbb
jg
aam
mov
sub
adc
ret
sub
cmc
rolb
mov
dec
sbb
rcrl
pop
addl
pop
negl
mov
mov
lock
inc
mov
jle
mov
push
xor
icebp
add
jne
pop
jecxz
xor
cmp
jbe
in
arpl
mov
movsl
pop
xor
in
xchg
cmp
or
jnp
sub
je
addr16
bound
pop
mov
push
pusha
gs
dec
jbe
dec
push
jp
jb
mov
xchg
dec
sub
cmp
xor
loope
mov
lahf
scas
mov
mov
inc
fldl
movl
lods
adc
xor
int
mov
inc
pop
xchg
int3
lds
inc
push
leave
sbb
add
mov
mov
sub
mov
rorl
xlat
xchg
push
mov
add
loop
xor
sti
or
cmp
aaa
dec
cmc
push
aaa
mov
jmp
sbb
pop
out
push
mov
and
or
icebp
pusha
test
xor
mov
mov
rcrb
dec
mov
out
jo
leave
jbe
rcl
outsb
lds
mov
mov
mov
and
and
pushf
sarb
imul
cmc
lods
xchg
sarl
iret
cmpsl
aad
or
sub
and
adc
and
rorl
adc
add
mov
pushf
in
push
stos
filds
dec
rol
into
cmp
sbb
pop
mov
jmp
inc
dec
jmp
cmpsl
shll
push
das
inc
cmc
je
jecxz
pop
shlb
imulb
pop
lock
cmpsb
lret
js
sub
ret
daa
or
mov
mov
pop
xorb
mov
mov
mov
outsb
jle
rorb
push
and
jmp
gs
jl
popf
pop
xor
jg
mov
jns
insl
testl
in
dec
daa
jbe
lret
lret
les
sub
jne
sbb
xor
iret
sahf
inc
pop
imul
test
popf
gs
mov
rcl
add
push
adc
jg
mov
ss
cmp
inc
adc
jo
mov
or
cmp
push
out
into
insl
jl
das
out
or
dec
pop
mov
wrmsr
inc
mov
sbb
jbe
arpl
lock
add
loop
icebp
sbb
shr
jns
stos
sti
mov
dec
in
rorb
outsb
enter
mov
xchg
aaa
daa
popa
or
adc
lahf
push
sub
in
dec
sti
pop
pop
push
mov
dec
adc
lods
hlt
fdivrl
jg
imul
je
popf
lea
pop
fidivrl
xor
inc
inc
inc
out
add
dec
adc
test
pop
inc
test
into
pop
les
inc
shll
push
push
rcr
pop
or
lods
rorb
mov
in
in
ja
pop
shll
js
outsl
or
jg
cs
je
lahf
aad
xor
lods
inc
dec
in
mov
mov
int
into
sbb
dec
add
mov
leave
inc
in
sahf
push
jl
jge
outsb
arpl
cmpsl
add
das
jno
es
mov
mov
and
cmc
test
xchg
outsb
xorl
add
sti
lea
fmull
and
cmc
dec
xor
out
nop
mov
add
pop
ror
mov
repz
je
mov
roll
xchg
jl
push
cltd
pusha
inc
out
push
push
lcall
inc
ljmp
xor
adc
jge
jle
or
pop
mov
out
jnp
mov
pop
push
test
movsb
iret
movsl
jno
cs
in
sub
arpl
mov
and
gs
add
adc
sarb
ljmp
test
dec
mov
bound
push
lcall
ret
lahf
mov
inc
ljmp
nop
rol
imul
mov
sub
iret
decb
xor
sbb
fisubl
mov
dec
popf
loope
sub
xchg
out
push
paddd
xor
cmpsb
inc
jg
popa
ja
hlt
test
xorb
cld
lock
xchg
add
sahf
js
loope
mov
popa
xchg
stc
subl
add
mov
cs
aam
jmp
outsb
inc
fists
std
jmp
lds
loope
loope
push
mov
pop
and
sbb
rcrb
sbb
enter
and
push
shrb
imull
xor
aad
fistpl
aaa
scas
mov
pusha
xor
mov
scas
lret
xor
addr16
outsb
in
ja
inc
stc
jbe
cmpsb
es
push
test
out
mov
shrl
fwait
push
xor
gs
daa
movsb
mov
subb
mov
xor
mov
hlt
aaa
shrb
ds
mov
pop
mov
jmp
in
popf
fwait
es
dec
addr16
sarl
repz
or
jg
pop
sti
mov
pop
aas
es
testb
dec
and
push
sbb
or
mov
cli
out
cmc
jmp
nop
psubd
inc
gs
jno
addb
cli
clc
push
xlat
decl
cmpsb
jo
aas
mov
stos
xchg
lods
sub
cwtl
shlb
pop
movsb
popf
push
mov
and
movsl
mov
ficoms
dec
sti
push
clc
or
lret
adc
adc
daa
outsl
cltd
out
aam
xor
fsubs
loop
add
inc
bound
data16
adc
popf
pop
mov
cs
sub
and
sbb
out
js
and
test
pusha
stc
adc
pop
jb
fdivs
mov
cmpsb
fs
cltd
std
push
repz
inc
call
mov
xchg
outsl
sbb
pop
clc
pop
out
push
out
addl
aaa
sarl
xchg
xor
sbb
lods
and
jmp
push
dec
call
add
push
xchg
pop
aad
fisttpl
enter
cmp
add
nop
repz
pop
mov
adc
test
xor
mov
outsl
push
stc
or
pop
gs
and
mov
cmp
mov
pop
jb
add
int
inc
mov
aad
dec
out
nop
lret
or
int3
in
inc
xor
dec
das
and
push
into
fwait
in
mov
push
mov
push
lock
test
cmpsl
sarl
adc
adc
mov
dec
aaa
das
enter
inc
mov
ss
lahf
sahf
adc
mov
pop
mov
adc
dec
and
sub
jbe
fs
dec
mov
jb
mov
sbb
imul
data16
mov
push
stos
mulb
sahf
fisttpll
fldl
in
movd
sub
test
imul
pop
mov
insl
cmp
loope
stos
fstpl
leave
cmp
sbb
cmc
jmp
mov
dec
fnstenv
mov
and
scas
imul
pop
fdivp
and
inc
push
or
in
sbb
inc
roll
cli
leave
mov
jmp
rcrl
mov
ret
incb
dec
cmp
mov
push
adc
cld
popf
push
loope
movzwl
inc
jp
decl
cwtl
adc
pop
xchg
mov
daa
dec
std
cmp
repz
ljmp
scas
and
leave
mov
cmp
push
insl
mov
data16
push
fxch
sub
insl
mov
jg
unpcklps
xor
sarl
cmp
sub
pop
add
cmp
jae
in
fbstp
popa
inc
push
imul
loopne
push
sbb
xor
inc
icebp
rol
out
jno
insl
pop
popf
in
jl
jmp
jle
xchg
jmp
push
cmc
lahf
test
std
adc
ret
and
dec
xor
stc
cmp
and
and
icebp
lcall
pop
or
pop
xchg
xchg
add
sarl
push
movsb
cmpsl
jb
mov
out
mov
daa
lods
and
leave
aaa
inc
lea
jbe
mov
iret
nop
ficompl
mov
repz
push
dec
sbb
insb
int
hlt
push
sbb
leave
std
dec
dec
fsub
xor
scas
jge
popf
cmpsb
sub
addl
mov
jb
jno
daa
adc
push
fldt
mov
and
pop
enter
out
jae
pop
loope
adc
les
cmp
adcl
cmp
fwait
add
sub
popa
idivl
aaa
aam
jo
sahf
mov
clc
lcall
mov
lret
movl
fldt
lea
out
fisubs
and
fistpll
out
sahf
jecxz
add
jmp
mov
push
fwait
mov
inc
add
and
sbb
idiv
test
lods
jl
push
adc
movsl
orl
insl
jg
and
les
jb
mov
adc
rclb
push
insl
or
sub
icebp
add
js
jmp
push
mov
sbb
add
add
inc
inc
mov
lcall
jp
sbb
xor
int
sahf
mov
mov
sbb
cmp
xor
cmp
mov
mov
pop
jl
cmp
sbb
notl
jo
or
stos
testl
xchg
xchg
mov
pop
jg
dec
insl
pop
mov
fidivrs
and
xor
mov
fwait
xchg
mov
fmull
sub
jge
dec
fnstenv
imul
fstl
jle
lods
pop
loopne
outsl
cli
jno
mov
dec
add
jg
out
add
jmp
adc
sbb
mov
xor
jne
pop
pusha
rorb
scas
stos
ret
pop
pop
pop
mov
out
pop
repz
and
dec
gs
imulb
xchg
or
arpl
add
mov
mov
lods
je
sbbb
mov
aad
sub
mov
ds
hlt
aam
mov
test
idiv
mov
pop
inc
jo
mov
mov
cmpb
daa
jne
fstl
jno
pop
bound
push
mov
lcall
aad
shl
leave
ficomps
out
push
push
mov
pop
sahf
nop
xlat
jne
repnz
inc
clc
out
or
pop
cmp
int
xlat
or
dec
addr16
pushf
fsubs
daa
adc
fucomp
dec
out
pop
pop
icebp
pop
cmp
aad
leave
sub
aaa
mov
das
jae
xchg
cs
add
cmp
jo
cmpsl
mov
arpl
into
shlb
movsb
sbb
mov
mov
sbb
data16
ficoms
push
jmp
fnstenv
andl
pop
pop
xor
outsb
mov
cltd
daa
sbb
push
adc
dec
fldcw
popa
dec
sub
mov
mov
or
mov
and
pusha
push
push
sbb
sub
mov
sub
mov
jle
sbb
imul
mov
push
mov
lock
lret
adc
aam
jo
retw
mov
cmp
mov
arpl
clc
std
xchg
xlat
cmp
lea
popa
jmp
fidivrs
jbe
mov
cmp
add
stc
clc
sbb
pop
inc
mov
andl
or
je
mov
inc
xchg
sarl
adc
clc
arpl
xor
dec
je
push
add
mov
je
leave
les
mov
leave
sbb
imul
imul
mov
jle
mov
sub
cwtl
pop
or
in
mov
push
outsb
adc
pushf
add
sbb
mov
mov
xchg
test
mov
sahf
xor
mov
lret
mov
push
shrb
mov
stos
imul
das
jge
pop
jg
sbb
pop
mov
mov
cs
test
cmp
or
repnz
sub
push
stos
xchg
xchg
stc
in
out
lods
scas
sub
mov
cli
xchg
sub
add
lock
lret
xor
mull
hlt
xchg
mov
in
icebp
ljmp
cmpsb
inc
adc
daa
pop
xor
aaa
xor
pop
add
xchg
int
pop
mov
xor
negb
sbb
jle
and
out
loope
pop
shlb
lods
jb
add
filds
xorb
cwtl
and
pop
sbb
mov
jecxz
out
clc
add
xor
lock
ss
sbb
in
mov
popf
mov
dec
cmp
mov
pusha
mov
imul
mov
js
add
mov
adc
dec
or
mov
inc
sarb
ss
mov
aas
loop,pt
pushl
push
pop
rorb
mov
jge
cmp
int
hlt
mov
jge
xchg
imul
pop
popf
jne
cmp
push
loopne
ret
sub
cli
cltd
stos
cmp
out
test
lea
xchg
or
jl
lock
jae
pushf
lds
arpl
add
jne
jmp
sub
and
daa
xchg
fcoml
out
leave
dec
sbb
sbb
cmpsl
dec
mov
nop
in
movb
push
mov
mov
and
subl
xor
aas
les
add
dec
dec
lds
push
jno
push
sbb
cwtl
out
aam
mov
push
out
push
jo
jge
mov
xlat
push
or
sub
inc
hlt
movb
pushf
dec
mov
stos
pop
xchg
adc
cmp
call
mov
xchg
dec
xchg
je
ja
stc
pop
dec
jp
sbb
cmp
scas
insl
andb
mov
test
rcl
cmpxchg
xchg
add
add
call
sbb
inc
popa
push
dec
lahf
loopne
jge
scas
stos
mov
jns
or
loopne
mov
fmul
testl
or
bound
aaa
add
adc
dec
movsb
shlb
loopne
enter
jp
pop
or
push
lret
mov
rolb
sub
jmp
or
mov
adc
xor
pop
addr16
mov
loopne
cmpsl
bound
adc
negl
mov
or
loop
cmpsb
lahf
fmulp
cmpsb
test
int3
data16
out
xchg
pushl
es
nop
push
mov
dec
xchg
push
fists
call
push
sub
xorb
jl
aad
arpl
sbb
push
add
add
pop
cwtl
ss
addr16
mov
addr16
sbb
mov
mov
divb
out
sbb
scas
pop
lea
je
popa
push
xchg
mov
jno
and
adc
fdivs
rcll
mov
mov
gs
int
in
jmp
mul
jno
arpl
ret
nop
scas
pop
and
mov
sbb
out
pop
cmpsb
push
repnz
sbb
shl
inc
insl
fisubrs
dec
imul
jo
ror
addr16
sti
gs
iret
rolb
cli
pop
sub
mov
decb
push
push
sbb
sub
sub
mov
mov
sub
out
ss
arpl
int3
pushf
cmp
push
gs
sbb
rorb
xchg
scas
sbbb
sarl
dec
jg
jg
mov
mov
mov
adc
out
sti
aaa
add
mov
insb
pusha
pop
sti
mov
scas
mov
dec
ret
sbb
inc
mov
jbe
push
pop
rorl
mov
inc
xchg
pop
mov
sbb
out
inc
movsb
ljmp
sub
cmp
pop
cmc
adc
insl
rclb
add
xor
xchg
push
dec
inc
das
inc
aam
pop
fstp
aad
pop
mov
mov
xchg
int3
subl
inc
cmp
add
mov
cmp
xor
add
std
arpl
repz
dec
cld
leave
repnz
arpl
mov
clc
testb
mov
dec
add
jl
jp
mov
idivl
ret
lea
int3
jl
add
push
or
cmp
mov
aam
mov
mov
outsb
cld
adc
mov
cli
jge
arpl
test
pop
test
jmp
jp
imul
cmp
dec
cmpsb
je
loopne
insl
adc
cs
jb
jno
sub
xor
into
adc
push
lock
int
inc
cs
xchg
call
lods
jp
mov
push
jecxz
inc
push
xlat
icebp
mov
mov
fidivl
jo
repz
pop
dec
out
push
xchg
pop
into
mov
and
xchg
mov
out
and
int
aad
ficoml
addl
sbbl
sub
imul
lret
sub
mov
add
leave
inc
popa
pop
test
push
sahf
and
fs
sub
jnp
push
mov
iret
out
adc
hlt
pusha
ljmp
dec
cld
fistpll
shll
aam
dec
addb
jne
jno
mov
dec
xor
ljmp
xchg
push
neg
add
mov
repz
xor
mov
and
clc
aad
hlt
mov
cmp
out
mov
sbb
mov
inc
sbb
sahf
inc
sub
cmp
jns
out
inc
clc
push
icebp
sub
dec
pop
xchg
nop
mov
adc
pop
fdivrp
sbb
test
adc
push
add
mov
pop
sbb
ffree
mov
ret
inc
and
or
sbb
enter
repz
inc
hlt
sub
and
mov
dec
xchg
pop
sub
fistl
jecxz
or
mov
cmc
mov
clc
dec
icebp
test
out
andb
mov
push
fildl
jbe
cmp
jle
inc
js
or
mov
popa
out
cmp
loop
out
xor
jge
xchg
cmc
pop
cmpsb
pop
cmp
icebp
cwtl
pusha
mov
push
pop
mul
cwtl
nop
mov
mov
fiadds
in
repz
rcll
or
jmp
jge
addl
in
pop
cmp
out
out
add
sbb
outsb
repz
or
out
sub
out
inc
sbb
adc
sub
scas
rcrl
inc
aas
sbb
mov
mov
pushf
fcoml
lods
pop
and
fmull
lcall
leave
and
pop
pop
fsts
add
push
and
xlat
push
cmc
stc
ljmp
xchg
pop
jmp
fwait
xchg
outsb
pop
add
mov
push
add
mov
dec
jecxz
inc
mov
cmp
fucomi
mov
pop
lods
cmp
adc
sbb
fbstp
rcl
pop
les
add
push
inc
cmc
std
add
lretw
clc
mov
insl
mov
xchg
cmp
test
mov
lea
out
outsb
shll
rolb
cmpsb
mov
js
add
sbb
xchg
jl
mov
enter
inc
cld
insb
int3
imul
sub
fs
test
and
je
sti
and
rol
xor
jg
lahf
popa
xchg
nop
pop
cs
adc
inc
cmp
xchg
adc
iret
daa
stc
add
das
mov
jnp
ss
cmp
enter
cmovae
cmp
aam
xlat
add
test
jge
scas
sub
out
sub
dec
jns
and
lret
pop
movsb
mov
sbb
mov
mov
pop
and
add
cmp
ret
cmp
add
xor
sub
cmpb
addb
push
leave
loope
ja
pop
add
sbb
outsb
xor
jge
inc
lods
sub
ret
inc
mov
sbb
push
shl
lock
pop
loopne
fists
and
iret
loopne
subl
and
icebp
xor
jae
imul
and
in
inc
cmp
pop
xchg
js
rol
cmp
out
jbe
sub
lret
mov
fldcw
popa
cs
clc
ret
pushf
push
enter
lahf
cmp
insl
mov
bound
enter
add
hlt
ds
cmpb
sub
jbe
and
xchg
pop
push
xlat
push
jge
test
cmp
sbb
inc
daa
es
pop
sub
and
dec
out
repnz
cmp
lcall
shl
hlt
pop
mov
ja
dec
push
or
inc
sub
test
popa
loop
popa
loopne
out
aam
sbb
loope
add
mov
sbb
ret
imul
cmpsb
repnz
ljmp
mov
pop
lods
sbb
mov
das
cmp
std
sbbb
and
rolb
jbe
mov
inc
fldenv
xchg
rcrb
dec
pop
pop
test
xchg
out
adc
mov
dec
pushf
xchg
mov
stos
xlat
adc
xchg
mov
stos
xlat
ret
daa
mov
shll
inc
pushl
leave
cmp
pusha
stc
int3
repnz
inc
imul
inc
or
imul
ss
cwtl
push
jmp
fldenv
out
xchg
xor
add
in
add
add
cmc
call
bound
lds
mov
jmp
inc
sub
fwait
lcall
jb
xor
addr16
sbb
pop
lods
cmp
dec
inc
mov
jl
xor
push
pop
sub
outsl
adc
inc
adc
ljmp
cmp
mov
pop
add
ret
cmc
imul
fdivrp
xchg
outsl
daa
mov
js
xchg
xchg
mov
jg
push
push
jl
pop
push
jno
test
mov
lods
ds
mov
inc
test
cltd
mov
cld
enter
cmpsb
add
add
sbb
push
pop
sbb
mov
adc
pop
xor
inc
out
inc
xor
xor
mov
shrl
in
dec
fs
dec
addr16
jmp
push
inc
sub
lcall
push
jne
and
fistl
popf
repnz
fst
cld
or
movb
inc
xchg
hlt
leave
adc
out
std
mov
dec
stos
inc
sub
and
xchg
inc
mov
xor
mov
dec
jl
lds
mov
cmpsb
inc
jnp
lret
cmp
pop
and
jle
xchg
mov
or
js
cmpsb
mov
push
pop
sub
sbb
adc
sbb
jb
or
dec
sbb
xor
xor
sub
movsl
mov
pop
fmull
push
adc
lods
cwtl
std
nop
mov
xchg
adc
add
loope
sub
pop
or
xchg
inc
mov
mov
adc
adc
ja
inc
jo
mov
pop
sub
repz
xor
test
mov
sahf
jb
ret
push
addb
and
or
mov
cltd
push
sbb
out
adc
inc
jg
fsubrl
mov
inc
dec
loope
adc
mov
stos
pop
mov
aam
jno
sbb
inc
lods
sbb
bound
push
inc
fdivrs
adc
ljmp
dec
jne
out
ffreep
add
and
xchg
shll
enter
xor
or
shrb
mov
jle
sbb
sar
add
mov
enter
or
sub
repnz
push
push
sbb
jnp
roll
aad
sub
cmp
cli
ljmp
xor
or
mov
repnz
neg
mov
imulb
cmp
and
jns
adc
ret
cmp
jecxz
gs
or
xor
inc
cmpsb
mov
jmp
push
int3
pop
mov
dec
dec
or
xchg
push
xchg
mov
dec
enter
lock
ret
dec
pop
in
ljmp
adc
movl
arpl
pop
in
idivl
outsb
xor
cwtl
out
push
insl
sbb
scas
aam
in
movl
idivl
xlat
jns
mov
xchg
pop
fucomp
xchg
lret
scas
mov
in
out
sbb
mov
mov
fiaddl
xchg
loop
add
xlat
jo
int3
mov
inc
test
scas
mov
movsl
outsl
mov
pop
and
icebp
mov
stos
adc
pop
xchg
sbb
cwtl
adc
xor
lock
ljmp
push
scas
fbstp
test
sbb
stos
pop
xor
add
into
sbb
cmpsl
and
push
xchg
shl
push
cmpl
test
ret
je
cmp
mov
cmpsb
jle
movsl
inc
or
lret
inc
jae
mov
fsubs
inc
bswap
or
test
sbb
sahf
shl
addl
or
inc
mov
pop
testl
cmp
fwait
and
mov
cmp
jmp
cmp
mov
pop
mulb
pop
mov
mov
mov
sti
enter
cmpsl
sbb
or
lds
aaa
movsl
cmp
mov
push
push
and
scas
pop
aad
aam
cmp
pop
push
push
mov
out
aas
aaa
ds
xor
jne
adc
dec
sub
ljmp
mov
test
sub
push
shr
xchg
or
outsl
adc
inc
dec
lea
mov
icebp
mov
jmp
push
inc
add
inc
lods
mov
add
dec
popa
xchg
push
dec
hlt
imul
cmp
or
jo
xchg
push
rol
subb
jecxz
pusha
ljmp
fldcw
ja
xchg
pop
xchg
fdivrs
jno
pop
test
inc
dec
lea
mov
add
inc
adc
xchg
cmc
xor
lock
into
enter
inc
pop
pushf
adc
and
sub
xchg
mov
mov
dec
cs
std
cmpsb
add
std
jecxz
sub
add
in
jg
adc
nopl
daa
sub
dec
mov
inc
enter
push
in
mov
lods
icebp
in
jmp
mov
dec
stc
lahf
push
jbe
jmp
mov
add
mov
mov
or
fs
inc
inc
push
int
jmp
dec
cmp
dec
pop
xor
pop
aas
loopne
popa
aas
add
stos
add
in
jecxz
xchg
push
jg
xchg
jbe
cmpsl
push
lret
subl
dec
mov
sub
mov
add
push
inc
xlat
cmpb
je
movsb
adc
mov
sub
push
pop
movsl
push
cmp
fcomps
pop
pop
daa
cmpsl
inc
push
add
jbe
aad
lea
sub
shr
in
dec
test
popf
inc
paddb
adc
fdivl
int3
sbb
pusha
pushf
jbe
sahf
jge
mul
or
or
xchg
fidivrl
pusha
and
sbb
add
pop
mov
or
ret
hlt
push
push
jb
sub
ret
out
cmp
push
mov
and
dec
xor
incl
adc
das
jge
mov
sbbl
sarb
mov
fwait
scas
bound
ds
mov
push
fisttpl
stc
inc
imul
stos
inc
ja
in
mov
pop
scas
ret
out
mov
sub
enter
das
xchg
lea
sub
fisubrs
shl
les
mov
aas
pop
outsb
mov
sub
and
add
pop
rol
pop
out
ja
mov
imul
aad
leave
lods
cli
mov
arpl
imul
int3
sti
mov
mov
fildl
pop
add
push
popf
js
icebp
out
in
mov
jo
fstps
fcmovu
int3
addl
mov
int3
and
test
or
mov
pop
sahf
test
xor
and
clc
dec
pushw
popa
or
sub
das
dec
mov
in
fxch
xchg
push
mov
dec
das
rorl
jg
inc
dec
leave
xchg
cld
pop
sarb
lret
rolb
mov
fdivs
inc
js
xlat
outsl
subb
xor
outsb
movl
and
mov
popf
ret
mov
lods
sub
jp
fildl
sub
xchg
add
iret
mov
jno
loop,pt
fdiv
xchg
pusha
jnp
dec
in
push
rorb
sarl
sub
jnp
stos
test
scas
sbb
cli
inc
lock
mov
lods
ficoml
mov
sbb
pop
or
dec
adcb
jbe
mov
cltd
out
bound
je
rcll
mov
icebp
push
ret
sub
inc
stc
roll
cmp
ljmp
adc
decl
stos
cmp
addr16
shlb
subl
cmp
dec
push
pusha
inc
decb
xlat
scas
mov
lahf
xchg
ret
icebp
clc
jae
mov
sbb
sub
stc
xchg
sub
pusha
movsb
and
aad
movsl
fstpt
leave
sbb
in
daa
lock
pop
in
lahf
mov
push
insl
testb
test
xchg
cmc
pushf
mov
repz
cmc
enter
stc
sbbb
std
xchg
push
je
fwait
imul
fdivs
push
xchg
aam
push
add
sti
shll
mov
add
xor
loopne
dec
mov
mov
add
into
mov
ljmp
jl
insl
inc
jns
int
lods
sbb
cld
andb
movsl
xor
push
cmp
adc
dec
inc
aaa
dec
fs
loopne
je
xor
xlat
clc
enter
mov
or
pop
and
mov
inc
mov
pop
movsl
cmp
mov
pop
notb
cmpsl
push
xor
mov
sub
jae
jl
out
popf
imul
dec
adc
inc
add
xor
mov
push
scas
into
frstor
dec
mov
orb
cmc
jle
inc
and
dec
xchg
mov
jne
pop
dec
and
in
nop
mov
mov
repz
enter
repnz
dec
sub
xorps
imul
mov
mov
mov
add
cmp
outsb
mov
jecxz
xchg
xchg
dec
jg
pop
pop
das
adc
jmp
fidivrs
arpl
push
push
xchg
push
fdiv
test
js
adc
int3
popa
and
lret
inc
sub
daa
push
pop
sbb
xor
pop
aas
sub
jae
push
cmpsb
test
xchg
bound
jle
dec
jnp
lods
xchg
rcll
ret
lea
xor
xor
adc
pop
push
mov
cmp
or
jae
scas
pop
mov
cmpsb
je
lods
mov
add
xchg
sarl
pop
xchg
jb
pop
adc
insb
sbb
xchg
jnp
str
jl
mov
mov
lods
stos
dec
cmc
faddl
test
sti
popf
fsubrp
mov
or
pop
in
cwtl
call
cmpsl
loope
in
ja
ja
repz
and
cs
stc
xor
ds
fmull
dec
push
dec
cmp
out
aam
fildl
pusha
and
stos
fdivs
xchg
mov
add
notl
loop
dec
pop
ljmp
fdivl
cs
cs
lahf
scas
or
and
outsl
cli
mov
outsb
mov
leave
xchg
inc
iret
rorb
mov
sahf
jge
sahf
adc
adc
cmp
inc
cmp
mov
andl
cmp
inc
sti
stos
into
lea
sti
rcl
or
dec
xchg
jnp
test
outsl
inc
xchg
lcall
andb
mov
xchg
aas
dec
pushf
cmp
call
call
into
xor
push
nopl
adc
pop
repz
mov
dec
nop
scas
ss
mov
js
lea
enter
bound
ret
test
popf
movsl
cmc
aad
pop
push
stc
pop
xor
pushw
push
dec
jb
movsb
sbb
loope
int3
push
out
repz
cmp
cmp
and
ret
aam
mov
dec
ret
lds
mov
xchg
adc
sarl
addr16
xlat
aam
pop
jge
jecxz
inc
or
mov
ret
dec
jmp
outsl
lods
xchg
stc
addr16
insb
fstpt
lret
dec
xor
xor
mov
lret
int
imul
mov
je
lock
sbb
mov
jb
xor
inc
cli
test
push
jg
nop
ficompl
loopne
fucom
je
jns
outsb
dec
xchg
adc
shlb
add
imul
xor
push
cmp
nop
insb
and
sub
pop
loop
push
push
mov
push
or
insb
pushf
xor
push
movsb
and
pop
imul
push
imul
sbb
cmp
xor
xor
mov
in
das
mov
jae
ret
dec
popa
sub
aaa
decl
push
je
pop
cltd
rcrl
dec
loopne
leave
lds
xchg
jns
rcrb
lret
jp
shll
mulb
ljmp
lret
sbb
jne
push
add
movsb
movsl
add
sti
and
mov
sub
pop
cmp
mov
in
push
bnd
or
xchg
adc
je
popa
xchg
and
pop
xorb
or
arpl
mov
push
lret
sub
dec
mov
mov
sbb
xor
mov
add
cmp
popl
push
mov
icebp
and
xlat
lcall
mov
jl
cli
mov
dec
aad
pop
es
mov
jae
sti
sarb
movsl
shrl
push
lock
lahf
jbe
in
jge
lods
sbb
xchg
jbe
lahf
cltd
aad
adc
aam
arpl
mov
jmp
shlb
rorl
dec
je
jnp
pushf
insl
mov
sub
inc
ret
sahf
xchg
pop
btc
lock
out
jnp
sub
or
pusha
int
add
into
dec
push
lods
pop
lock
lcall
jbe
pop
ljmp
adc
mov
mov
pop
jo
push
mov
jle
pop
nop
in
insl
and
add
outsb
and
pop
mov
push
sti
xor
push
dec
sub
test
mov
mov
adc
xor
pop
or
add
mov
jae
arpl
cmc
and
rol
cmp
mov
cmp
push
icebp
sub
sbb
call
cmpsl
dec
mov
ss
adc
sbb
pop
adc
add
pushf
mov
mov
mov
out
cmp
inc
push
mov
hlt
test
data16
mov
mov
mov
int3
out
in
adc
call
int
mov
into
jbe
sahf
sbb
mov
and
pushf
aad
adcb
leave
dec
ret
insb
decl
cmp
repz
mov
push
adc
shrb
lcall
mov
xor
test
imul
jmp
inc
in
xchg
ljmp
lock
mov
out
mov
fsts
outsb
call
mov
jmp
insb
push
jb
iret
mov
inc
add
pushf
jns
outsb
xchg
xchg
and
test
into
hlt
rolb
push
add
sbb
lds
imul
and
pusha
lea
scas
test
lock
cmp
hlt
mov
cmp
jb
stos
mov
pop
mov
flds
popa
cmp
xor
mov
dec
xchg
in
jmp
int
and
arpl
push
popa
xchg
fldl
dec
and
xor
xchg
insb
repnz
movsl
sbb
pop
xor
mov
ret
cmp
fimull
out
leave
or
mov
rcll
ror
mov
sub
fsubrs
adc
clc
or
adc
cli
popf
shll
sbb
in
cmp
push
xor
addr16
call
lods
xchg
jno
cli
flds
dec
or
iret
xchg
cmpsl
in
xor
in
push
and
loope
mov
in
out
and
pop
mov
bnd
es
push
out
mov
pop
in
int
xchg
add
push
out
into
jae
xorb
sti
clc
addr16
xor
movsb
hlt
jmp
out
adc
sub
push
mov
mov
loope
add
ret
jmp
hlt
loope
cmp
jns
lock
ffreep
mov
mov
out
aas
addr16
loop
cmpsb
pop
add
pusha
popa
adc
mov
dec
iret
cmp
mov
sub
popf
jbe
data16
jnp
ds
addr16
mov
aaa
imul
dec
mov
aad
xor
push
out
es
mov
xor
adc
or
sbb
sahf
mov
aas
adc
push
add
jg
mov
bound
ret
dec
jmp
je
push
and
in
pop
pop
pushf
jmp
lds
shrl
adc
dec
add
cmp
fdivrl
loopne
pop
aad
dec
bound
sahf
cmp
or
iret
inc
mov
adc
scas
mov
adc
sbb
int
mov
inc
sahf
scas
into
test
pop
mov
in
push
leave
push
or
subb
rcrb
inc
mov
push
ret
es
xor
loop
jb
inc
call
les
jle
adc
test
jb
dec
cwtl
or
xor
shl
xchg
test
xchg
mov
sar
movsl
insl
xchg
cmp
jbe
mov
jmp
or
mov
add
pop
dec
jle
dec
mov
jbe
xchg
push
xorl
jl
das
mov
movsl
adc
in
mov
mov
adc
scas
sbb
pop
popf
aas
int
xchg
cmp
test
pop
fsubl
push
mov
add
inc
sbb
cmp
sbb
cmpsl
ds
pop
pusha
or
pusha
sub
or
sbb
push
adc
out
dec
in
cs
mov
mov
mov
mov
punpcklwd
cmpsl
iret
aaa
addb
and
jnp
fistpl
cld
ficompl
repz
pop
sbb
mov
fildl
pushf
outsb
cmc
mov
imul
xor
xor
add
dec
and
xchg
loop
mov
jne
dec
out
mov
add
sub
int
into
das
mov
lret
mov
lods
mov
add
push
cmc
mov
jecxz
fdivs
adc
icebp
cmp
in
add
imul
shlb
dec
jle
nop
add
fs
jae
fwait
inc
xor
mov
xchg
pop
push
mov
aam
lret
pop
imull
popf
addr16
lea
pop
jp
add
push
push
jno
ss
insb
bound
xor
nop
sbb
dec
gs
xor
inc
push
jecxz
cmp
pop
push
enter
mov
add
fadd
stc
xchg
movsb
inc
pusha
pop
fsubrs
push
je
jae
shll
mov
mull
stc
cltd
mov
xchg
cwtl
and
sbb
sub
out
bound
sarl
lcall
sbb
mov
cmpsl
lods
loopne
fwait
mulb
xchg
sbb
lret
mov
lods
xor
jno
outsl
enter
mov
insb
dec
mov
test
jns
fwait
sub
fistpl
sbb
clc
push
sbb
sbb
mov
inc
or
add
mov
jnp
test
in
push
fidivrs
sbbb
aad
imul
rcr
paddd
icebp
mov
jge
pop
loop
jns
jo
les
sub
int3
mov
mov
or
add
mov
mov
jbe
repz
testb
mov
mov
xor
mov
cmpsb
ret
frstor
sbb
push
adc
xor
push
dec
cmpsl
inc
sahf
jecxz
cmp
cmpsl
pop
rcrb
xchg
sub
mov
loopne
int
push
cld
push
rorb
popa
jp
xor
push
lcall
push
xor
nop
mov
pop
jns
and
fwait
xor
fldl
sub
mov
aaa
dec
mov
xor
and
pop
push
mov
adc
andl
pusha
testb
pop
push
sbbl
push
jb
inc
mov
movsl
and
sub
fldenv
sarb
jbe
inc
xchg
add
and
mov
mov
pop
mov
lret
mov
scas
cmp
sti
leave
stc
scas
xor
add
pushf
jecxz
enter
mov
jo
fstpl
ficomps
test
clc
scas
fidivs
movsb
mov
scas
insl
xor
xchg
push
xchg
mov
lret
scas
mov
dec
dec
rcrb
mov
decb
iret
nop
mov
mov
mov
sub
jmp
movsb
sti
clc
mov
xor
es
lods
ss
sub
mov
jns
fbstp
sub
inc
pop
je
stos
sbb
jg
inc
aaa
ljmp
fisubrl
in
jne
out
mul
data16
fstl
xchg
mov
jne
pop
mov
outsb
pushf
test
push
xchg
insl
fsubrs
mull
sub
pop
cmpsb
adc
mov
ljmp
cmovns
dec
out
cld
and
scas
clc
pop
repz
mov
push
cmp
fucomi
es
mov
cmp
repnz
push
inc
movsb
jns
movlhps
mov
add
add
xor
inc
mov
es
fnstsw
pop
pop
pop
push
inc
rol
cmp
sbb
push
sub
daa
rcrl
cmc
in
pop
xchg
les
pop
fnstenv
jge
jae
cmpsl
rclb
push
push
mov
mov
sbb
sub
lods
hlt
push
pusha
stos
ljmp
pmaddwd
into
xchg
cld
jne
rorb
or
stos
inc
rcrb
cmc
into
mov
jge
xor
xor
scas
jnp
sbb
js
loopne
or
ljmp
or
adc
out
daa
push
hlt
notl
cmp
int
or
mov
mov
add
movsb
sub
or
pop
and
outsb
xor
pop
push
popf
sub
arpl
clc
dec
jns
xorl
mov
jecxz
dec
hlt
stos
mov
clc
lahf
popf
cmp
mov
cmpsb
insb
sub
test
inc
aaa
inc
mov
mov
inc
js
icebp
es
sub
cmp
jecxz
sahf
lea
inc
int
jbe
sbb
lret
cmp
sbb
fdiv
jle
call
dec
inc
inc
cmp
into
cmc
insl
dec
movsb
out
mov
add
mov
sub
sub
xlat
xor
rolb
iret
fdiv
mov
stc
lahf
iret
shrl
mov
pop
add
push
pushf
push
jne
dec
xlat
test
jne
xor
jmp
imul
cmc
push
adc
test
hlt
imul
lea
scas
cwtl
shlb
test
and
mov
push
mov
inc
pop
add
cltd
leave
push
pop
stos
out
mov
xor
inc
fidivs
mov
das
add
jnp
icebp
andb
or
push
mov
and
cld
push
fs
jns
sahf
mov
repz
pop
and
mov
xlat
xor
fwait
cmpsb
sub
sarb
sub
sbb
pop
fimull
leave
jbe
adc
loope
ret
push
add
sbbl
stos
popa
dec
cltd
fnsave
out
call
outsb
or
or
lods
push
cwtl
in
xor
test
sbbb
aad
shrl
sub
and
sbb
loope
popf
test
jno
cltd
xorl
jle
mov
mov
fstps
fiaddl
clc
push
addr16
cmp
mov
scas
sarl
aaa
mov
iret
mov
xchg
inc
call
lods
adc
in
cli
pop
inc
mov
int3
mov
es
pop
or
aam
or
xor
push
outsl
arpl
sub
dec
imul
dec
add
xor
xchg
adc
aaa
stos
cmp
jecxz
pop
subb
mov
std
imul
stc
cmp
pop
xchg
adc
inc
jo
jle
and
std
in
adc
aam
mov
loop
aas
sub
in
push
scas
add
loopne
and
sbb
pop
pusha
movsb
push
pop
in
sub
movsb
mov
es
lods
pop
and
xor
fstps
movsb
dec
jmp
lock
xor
inc
add
ficompl
jle
in
and
mov
sub
rorl
jb
cmp
adc
mov
sbb
cmpsb
push
or
pusha
mov
adc
xchg
adc
bswap
or
cmc
int3
imul
flds
dec
pusha
push
inc
int
cwtl
or
gs
loope
stc
sahf
xor
and
setg
jl
addr16
cmp
stos
loop
mov
inc
fdiv
xor
sar
rcl
and
cmp
mov
out
out
inc
stc
stc
cltd
mov
daa
add
mov
adc
mov
inc
pusha
xchg
xchg
fnsave
sub
mov
popa
std
dec
sub
out
and
stos
daa
es
repnz
idivl
xchg
dec
push
es
pop
push
jns
mov
enter
mov
add
adc
pop
sbb
loopne
rol
imul
jmp
cmp
push
cli
push
stos
jb
mov
jnp
jmp
push
test
dec
lahf
ss
jmp
lret
add
in
cli
fisubrs
fcmovb
adc
fmulp
mov
mov
fisubrl
xor
mov
inc
lahf
push
mov
pop
mov
lods
add
out
push
loopne
mov
inc
add
lcall
loop
inc
push
fnstenv
mov
lcall
std
pop
mov
scas
inc
test
shlb
add
push
mov
jle
push
andb
dec
nop
scas
inc
int3
inc
out
addr16
insl
sub
lods
out
cwtl
nop
mov
mov
leave
das
push
pop
xor
dec
jbe
and
add
outsb
mov
jp
pop
lret
repz
adc
je
outsl
enter
add
out
xchg
int
or
js
mov
xchg
dec
popa
insb
jge
es
dec
call
std
add
movsl
push
test
in
stos
mov
push
aas
dec
jnp
out
cmc
jb
mov
clc
mov
mov
fisubrs
fstl
inc
cmpsb
in
xor
test
jmp
nop
dec
jae
mov
in
dec
gs
pop
jle
loope
xchg
test
lahf
pop
cmp
xlat
push
mov
pop
pop
sub
and
add
addr16
pop
stc
mov
daa
addb
add
mov
test
cmpb
jecxz
cltd
adc
mov
pop
and
out
fcomip
pushf
test
mov
add
clc
mov
psadbw
jnp
scas
fdivrs
sar
lea
mov
xlat
sub
mov
push
sub
ljmp
xchg
pop
dec
push
data16
pop
pop
adc
or
mov
dec
cmp
mov
xor
sbb
jnp
cmp
mov
or
in
insb
daa
jnp
jmp
xchg
mov
ficompl
inc
dec
fcomip
stos
push
jnp
push
bound
fwait
fs
inc
sbb
fucomi
int
sahf
aad
fs
shrb
mov
and
insb
ja
ss
std
jecxz
sub
or
cs
jne
xor
and
ret
aas
in
ror
mov
les
add
rcll
das
xchg
imul
fstl
ds
dec
fidivl
inc
xchg
in
dec
mov
filds
and
push
pop
jne
mov
jo
sbb
xchg
jb
imulb
mov
andl
stc
jb
xchg
mov
jno
jnp
push
cs
mov
push
fucomip
cmc
inc
sub
cmp
pop
mov
add
push
cmpsb
push
or
xchg
mov
push
inc
xor
cmp
add
jecxz
xor
xchg
test
lahf
je
loop
in
xchg
push
stos
xor
inc
imul
mov
outsl
jp
cmp
leave
testl
mov
shrb
notb
cmp
leave
jge
rcrl
cmpsl
out
and
xor
mov
imul
cmpsb
xchg
push
mov
mov
scas
xchg
push
xchg
out
sub
cmpsb
cmp
mov
mov
shlb
outsl
fcmove
mov
and
jecxz
std
mov
lds
cwtl
stos
notb
imul
stos
inc
aad
sub
repnz
jnp
push
pop
jmp
mov
mov
fstpl
or
xor
int3
mov
std
add
jle
inc
push
ret
sbb
mov
sub
and
lret
repz
sbb
sub
aam
push
mov
xlat
inc
dec
sub
loopne
or
cmp
cltd
sub
jae
xchg
mov
outsl
jge
scas
xchg
pop
xchg
sub
push
jl
fidivrl
xchg
jmp
fstps
popf
mov
sbb
push
aad
les
imul
add
jo
cltd
enter
mov
je
add
fimull
jge
test
aad
loop
insl
movsl
adc
mov
je
adcb
jne
and
jmp
sarb
xchg
stos
pop
jl
dec
inc
add
fidivs
lret
xchg
jno
scas
cmpl
dec
out
jl
pushf
iret
movsl
mov
and
lods
sub
out
cmp
in
adc
lret
gs
xchg
outsl
outsl
mov
outsb
loop
arpl
xor
insb
lods
jecxz
push
and
out
es
stc
fidivrs
dec
jge
repz
sbb
pop
add
adc
push
in
mov
faddl
dec
fdecstp
cmp
shrl
rolb
add
and
movsb
inc
pop
addb
adc
adcl
sbb
jo
rcrb
cmc
movsl
sbb
jmp
xlat
cmp
das
cmpb
sbb
mov
cmp
divb
xor
adc
mov
mov
insl
mov
adc
jb
orb
loope
in
push
shll
adc
pop
sub
test
repz
and
sbb
ljmp
xchg
aaa
xchg
gs
dec
mov
xchg
testl
push
or
inc
sbb
sub
add
push
and
push
iret
ja
push
sbb
pushf
jbe
jnp
aad
sbb
xchg
jle
and
insl
xchg
repnz
movsl
jle
pop
shll
adc
mov
in
std
imul
mov
lahf
jns
dec
loopne
cmpsl
cmpsb
ljmp
int3
stc
jo
cs
flds
mov
cmc
mov
nop
add
mov
sbb
cld
fs
pop
jne
stos
push
aam
push
dec
push
cmp
rcrl
sbb
push
or
hlt
mov
fnstenv
adc
int
adc
pop
cld
add
dec
mov
pop
imul
fistpll
xor
pop
mov
insl
lods
test
cmc
add
push
xlat
xchg
or
pop
int
and
mov
xchg
and
cmp
fisttps
imul
push
sbb
jmp
xor
dec
pusha
clc
add
or
test
je
aad
mov
cmpsb
out
loope
out
xor
aad
in
dec
sbb
popa
popf
loopne
push
mov
popf
mov
push
push
loopne
dec
icebp
push
pop
jle
in
mov
in
inc
ret
hlt
push
sbb
pop
jp
mov
imul
in
sahf
clc
jle
lods
orb
xor
add
outsl
cmpsb
mov
jae
out
mov
inc
mov
negb
or
xchg
mov
add
pushw
jmp
inc
jo
stc
and
movsl
loope
inc
push
lds
jb
dec
ja
bswap
or
mov
push
sahf
neg
mov
lcall
lock
jmp
mov
das
stc
cli
loopne
stc
in
jae
mov
push
sbb
fisttps
inc
stos
cmp
sbb
xor
rcrb
dec
or
lret
scas
mov
xor
inc
adc
push
xchg
ljmp
pop
fldt
mov
mov
icebp
outsb
jns
mov
mov
pushf
movsb
xchg
mov
cltd
fstpl
push
mov
rcrl
xchg
movsb
das
push
cmp
inc
pop
xchg
in
cmp
lret
cmpsl
add
aas
mov
sub
fwait
addl
mov
inc
fdivl
lret
fiaddl
loopne
push
jmp
pop
dec
xor
stos
test
sahf
movsl
mov
jl
adc
es
cli
cmp
sub
xchg
push
inc
xchg
pop
sbbb
out
adc
pushf
cmp
mov
imul
dec
and
cld
add
xor
jae
cmp
inc
mov
sti
lret
dec
cmp
jne
mov
mov
jmp
subb
xlat
or
jae
dec
xchg
bound
xchg
enter
dec
scas
aam
es
fwait
jmp
loop
sti
out
mov
push
jge
cwtl
push
fucom
daa
xchg
dec
rol
lret
xor
testb
lea
sub
in
test
dec
lods
cmp
sub
dec
leave
enter
push
adc
bnd
or
dec
push
scas
pop
imul
shrl
xor
std
idiv
test
xor
sbb
sbb
push
fidivs
nop
lahf
js
stc
mov
in
or
in
xchg
js
push
xor
mov
lret
mov
fsubr
into
jb
sub
mov
and
out
and
jg
cmp
inc
lahf
xchg
insb
movsl
and
mov
dec
mov
mov
shl
ficompl
mov
shrl
lds
push
ja
pusha
ljmp
fsubl
shll
sbb
ds
negl
pop
fs
in
pop
aam
outsl
aas
xchg
xor
mov
ffreep
outsb
addl
aam
scas
je
into
arpl
mov
sahf
sub
push
inc
clc
xor
shlb
out
sub
pop
fldcw
push
jle
xchg
xor
or
xchg
xchg
dec
js
xor
pop
cmc
or
dec
xorl
fsubs
in
inc
das
add
or
or
in
dec
test
lret
adc
pusha
xlat
sub
movsb
call
ja
lret
sub
add
ljmp
insl
pusha
pushf
jle
sbb
push
mov
add
and
arpl
pop
xchg
push
cmp
cmp
jmp
mov
gs
or
in
inc
jmp
add
stos
mov
pusha
std
jne
mov
test
stos
add
lods
std
pop
cwtl
stos
xchg
mov
daa
and
iret
xchg
cld
sbb
aam
push
mov
mov
sbb
and
ret
lock
cmc
ljmp
cwtl
or
stos
mov
das
mov
adc
mulb
loop
mov
mov
scas
ljmp
add
lds
rorl
dec
lahf
std
les
out
mov
sub
cmp
jle
add
ja
bound
movsl
into
sub
lock
das
addl
test
lea
mov
dec
ja
dec
xlat
sahf
and
jmp
movsl
mov
in
sbb
repz
scas
scas
shrl
dec
mov
jno
int3
jle
and
xchg
cmp
sub
fisttps
sbb
dec
bswap
insb
xchg
sbb
push
jne
mov
pop
mov
sbb
inc
in
stos
adc
movsb
cmpsl
adc
adc
lea
cli
mov
jle
and
repnz
xor
icebp
lock
and
cwtl
js
es
xchg
pop
sbbl
mov
fadd
sub
mov
ja
ljmp
jmp
jae
icebp
push
and
femms
clc
push
mov
inc
popf
insl
sbb
les
dec
aam
stos
inc
fst
sbb
mov
imul
cmp
jae
std
xchg
mov
mov
int3
cmp
jg
pop
pop
sbb
stos
cmp
jp
or
mov
jnp
repnz
out
adc
add
aaa
xchg
aad
inc
hlt
xchg
or
leave
sbb
ja
inc
ds
stos
popa
add
dec
xchg
nop
rcrb
outsl
fmull
pop
scas
or
daa
insb
out
bound
or
add
push
push
cs
xchg
stos
jae
pusha
loop
out
sti
in
adc
jl
push
add
pop
lret
int
leave
push
rorl
mov
inc
cmp
cmp
pop
dec
fnstcw
jmp
jns
mov
fdivr
ljmp
sub
sbb
mov
lret
bswap
enter
std
inc
mov
lods
cmp
add
add
pop
pop
sahf
sti
xchg
es
nop
pop
lcall
popa
lret
inc
cmp
call
shll
mov
sub
sbb
in
jmp
pop
xchg
and
or
hlt
lock
dec
stc
dec
mov
push
or
mov
shl
mov
cmp
outsb
sub
sarb
push
shlb
pop
or
ds
push
pop
xchg
sbb
dec
jge
pop
jno
std
arpl
roll
jmp
je
lds
repz
pushf
jb
repz
aam
fmul
pop
push
inc
stos
inc
jg
notl
xchg
inc
cmpsl
scas
into
lock
pusha
sti
push
pop
loop
mov
mulb
daa
push
add
std
dec
adc
lret
ja
xor
nop
fnstsw
sbbb
sahf
inc
sbb
hlt
pop
dec
and
cmp
stc
divl
and
mov
mov
lret
aaa
fmuls
and
and
jge
pop
cmpl
aad
outsb
sub
xor
out
cwtl
call
push
cmp
hlt
lret
or
shrl
xchg
push
pushf
mov
enter
add
fdiv
adc
jge
adc
add
fldcw
fldl
jcxz
enter
into
dec
jne
dec
adc
xor
sub
mov
pop
sbb
dec
iret
cmp
decl
outsb
int3
dec
mov
sbb
adc
lock
sbb
pop
mov
adc
sahf
jmp
sbb
fsubrs
fsubrs
and
aaa
pop
mov
mov
test
stc
inc
push
int
call
mov
mov
lcall
je
scas
bound
addr16
and
pop
jle
push
and
cmp
mov
subb
sar
cld
and
jae
or
sahf
test
push
and
in
adc
cmp
sbb
lods
gs
loopne
jecxz
ds
xchg
cmp
divl
pop
dec
sub
mov
fstl
loopne
inc
sti
mov
push
sarb
jns
mov
lahf
fadds
sti
pop
pushf
pop
sbb
dec
push
xchg
or
lods
mov
inc
jne
daa
pop
push
or
jo
mov
dec
adc
icebp
popa
daa
sahf
iret
mov
loopne
bound
pop
pop
ja
call
cld
cltd
outsb
shlb
dec
sarb
pushf
loopne
mov
xor
xchg
sub
jecxz
rclb
shrb
adc
and
addr16
push
dec
inc
ret
mov
test
mov
cli
dec
call
movsl
ja
stos
iret
inc
ss
dec
rolb
mov
xorb
repz
jbe
mov
mulb
mov
bound
mov
stos
dec
loop
xchg
vmovd
add
in
sbb
popa
xor
cld
mov
repnz
push
sub
loope
mov
xchg
add
add
sbb
enter
seto
aas
sti
lcall
stos
xor
insl
leave
mov
mul
in
sarl
loope
push
imul
sub
and
sbb
push
push
adc
icebp
arpl
fidivrl
enter
dec
dec
add
xorl
adc
sbb
sbb
imul
sbbb
shr
inc
dec
adc
pop
cmc
jo
jge
jmp
jne
lods
push
mov
or
fxch
dec
mov
in
xorb
pop
pop
ss
and
push
out
bound
xorl
adc
mov
xchg
cmpsb
jg
ljmp
rorl
add
cmpsl
outsb
lea
cmp
sbb
lret
push
xlat
test
test
pop
cmp
movb
push
aad
xlat
pop
push
push
pop
in
outsl
xchg
leave
pop
push
xchg
pop
data16
or
xor
mov
arpl
pop
push
movb
cmpsb
pop
inc
test
adc
and
mov
push
movsbl
nop
test
jmp
out
pop
add
hlt
test
test
mov
lcall
cld
fistpl
arpl
iret
lret
mov
mov
ficoms
cmp
adc
cmp
shl
hlt
insb
fimuls
icebp
es
daa
xchg
rcrb
aaa
add
lock
sbb
mov
insb
push
shlb
mov
mov
pusha
mov
xchg
test
add
cmp
adc
or
jmp
lods
push
mov
cli
lahf
cwtl
loopne
pop
xchg
repnz
mov
adc
popa
lds
repnz
or
mov
leave
lret
repz
mov
data16
dec
ret
jnp
aaa
test
enter
xor
mov
xchg
xchg
mov
fcmovu
inc
jae
repnz
nop
push
push
mov
push
pop
push
xchg
mov
dec
push
iret
rorb
outsl
fistpl
pusha
aas
push
ljmp
push
roll
cmp
xchg
adc
mov
cmpsl
pop
sahf
rolb
xor
ret
das
jmp
push
insl
cwtl
sti
fisubrl
mov
push
pop
out
jle
sti
inc
mov
rolb
daa
add
adc
jne
nop
or
sahf
lock
pop
lcall
jecxz
and
sub
gs
xor
dec
push
je
scas
cmp
or
xchg
pop
xor
clc
out
lods
call
andl
idivb
xchg
fcomip
cli
jmp
cld
adc
or
mov
mov
cmp
int
andb
arpl
lahf
mov
pushf
push
inc
or
out
faddl
enter
scas
lcall
pop
pushf
leave
es
xchg
bound
mov
mov
add
daa
cmp
ss
sbb
nop
je
into
cmc
cmp
xor
loop
mov
dec
fimuls
pop
cmp
mov
int3
lods
ret
jae
notb
add
nop
stc
das
and
in
fiaddl
daa
and
inc
dec
sub
cwtl
xor
push
fcompl
inc
sub
jl
popf
shll
ret
test
pushf
adc
nop
imul
mov
inc
xor
orl
mov
mov
pop
xor
in
std
push
mov
iret
aam
fsts
idivl
cmp
adc
fdivrl
pop
mov
mov
stc
fcmovnb
lods
mov
dec
pop
enter
pop
pop
pop
mov
mov
movsl
push
adc
jecxz
lock
sbb
add
xchg
xchg
push
jp
sub
shrl
sbb
aad
ljmp
push
mov
fimuls
xor
repnz
popa
push
testb
pop
dec
popa
push
cmp
in
sbb
dec
ja
pop
jb
clc
add
pop
xor
cwtl
fildll
mov
sub
and
jo
push
jl
sahf
je,pt
adc
sahf
jbe
jmp
cmp
pop
sbb
sar
cmp
cmp
test
int3
and
add
or
psrlq
scas
addr16
mov
inc
adc
sub
inc
scas
mov
or
or
cwtl
xor
imulb
cmp
add
jno
lds
fcmovnbe
lret
shr
sbb
out
xorb
xchg
ret
adc
mov
aas
pop
out
cmp
sbb
dec
fwait
sbb
push
lods
adc
stos
popf
dec
cmp
mov
rorb
sbb
es
inc
cltd
sbb
push
mov
and
test
push
cmpsl
dec
or
and
pop
repnz
fsts
fistpl
mov
inc
hlt
pop
incb
icebp
shll
je
das
dec
push
movsl
aaa
dec
in
pushf
repnz
mov
jnp
popl
test
mov
pop
sti
push
dec
cwtl
add
les
outsl
fwait
ret
sub
mov
xor
push
es
stos
notb
add
push
rcrl
fcoml
iret
mov
mov
jo
std
sbb
or
pusha
and
pop
ret
iret
int
and
dec
and
push
xchg
les
lahf
mov
adcb
dec
in
js
or
repz
sbb
in
test
shll
je
mov
mov
jge
ja
sti
cmp
dec
cmc
sahf
popf
inc
das
mov
sbb
jecxz
gs
lcall
fidivrl
js
stos
sbb
cmc
push
fs
push
int3
mov
mulb
push
sub
cmp
jmp
push
xchg
aaa
pop
stos
ljmp
sbb
pop
cmp
ret
dec
outsb
lods
xchg
xor
arpl
mov
mov
mov
dec
jne
push
dec
rorl
xchg
push
pop
stos
test
pop
pop
test
xor
pop
sbb
pop
out
adc
mov
add
repnz
dec
mov
leave
outsl
addl
or
and
mov
inc
adc
imul
loopne
jmp
xchg
cs
push
ss
xchg
lods
sbb
mov
mov
cwtl
xor
out
popf
test
push
adc
imul
cmpsb
mov
dec
sub
sbb
cli
aad
push
icebp
or
cmp
mov
and
sbb
outsb
sbb
or
insb
sub
aas
inc
jb
ret
add
cmc
in
jne
test
movsb
stc
or
inc
dec
int3
lds
sbb
add
icebp
or
mov
jmp
std
dec
into
aaa
pop
mov
leave
xchg
and
test
and
fisubrs
mov
jbe
idivl
cmp
dec
pop
arpl
icebp
gs
xchg
xchg
cld
pop
cmp
fscale
ljmp
ret
push
xchg
ss
add
xor
ds
push
ss
jae
xchg
fidivrl
sbb
or
inc
dec
xchg
mov
add
hlt
mov
add
mov
mov
test
push
lods
in
push
dec
dec
cmp
xchg
cmp
out
lods
xchg
sub
fmul
xor
dec
add
cmpsb
sub
js
pop
jmp
roll
out
or
mov
fidivs
pop
insl
sbb
repz
mov
lods
push
cmp
into
lret
ss
sahf
gs
fcomps
mov
jecxz
and
inc
pmaxsw
xchg
rclb
fs
sbb
sbb
lds
addr16
mov
mov
mov
jmp
xlat
mov
popa
pop
sbb
lret
sarl
xchg
xchg
loopne
and
jno,pn
lret
addr16
adc
push
ret
out
icebp
bound
outsl
or
int
loopne
pop
cli
imul
aam
xor
in
roll
push
aam
lret
outsl
jecxz
xor
jne
out
xor
pop
fdivr
pop
std
mov
xor
lahf
or
dec
in
aad
lret
sub
rorl
cmp
daa
push
push
dec
lods
cmpsb
decb
push
add
jl
pop
dec
mov
cmp
sub
cmpb
jg
incb
or
in
xchg
aam
shr
jns
cmp
pop
pushf
sub
mov
push
and
xchg
pop
jmp
shrl
pop
insb
cli
in
push
aas
mov
push
push
add
ret
rcrb
bound
adc
push
out
dec
fisttpll
pop
xor
sub
mov
or
lds
pusha
mov
xchg
mov
sub
mov
popa
inc
mov
add
fnstcw
cmp
arpl
push
and
clc
ret
fwait
inc
push
push
lods
loope
pop
mov
insl
rcrb
repz
xor
sub
cmp
add
push
in
sti
sub
or
adc
pop
lock
xor
adc
xorb
sar
cmc
cld
stos
flds
mov
jmp
scas
pop
and
pusha
inc
stc
in
test
push
or
imul
and
ret
and
adc
pop
inc
ret
jbe
sub
xor
adc
jle
add
and
movsl
gs
cmp
xchg
push
push
jne
add
xchg
xor
inc
xor
and
bnd
out
mov
jecxz
pop
in
cmp
fstl
ret
xor
pop
imul
ds
or
aaa
ret
rep
cmc
adcl
mull
push
sub
mov
xchg
xchg
rcrb
add
inc
cmpsl
gs
out
mov
das
or
fistl
xchg
ja
pop
bound
dec
add
popf
cs
sarl
mov
popa
ret
jp
icebp
push
in
out
pop
add
lahf
dec
dec
jbe
ficomps
add
inc
jl
mov
popa
lods
pop
rcrl
movsb
clc
sub
out
push
adc
mov
aas
outsb
int
push
test
and
jbe
repnz
cmp
pop
dec
mov
push
leave
xor
jmp
scas
push
es
sbb
jbe
push
push
sub
out
mov
push
dec
inc
mov
movsb
int3
leave
sahf
fildl
cmp
push
dec
repz
rclb
dec
xchg
sbb
nop
dec
andnps
enter
sbb
add
cmp
shll
popa
pop
pop
mov
sahf
push
out
mov
testl
pop
daa
mov
xchg
std
outsl
test
xor
mov
jle
jge
cmpsb
cmp
pop
pop
sysexit
fstpl
pop
arpl
fdivrs
int3
jbe
adc
sbb
pusha
ret
pop
jecxz
add
leave
das
xor
int
stos
shlb
inc
sbb
lea
mov
ret
jl
outsl
fdivrp
sub
clc
xchg
xchg
mov
or
out
xor
ljmp
fs
popa
or
outsb
and
mov
fs
push
xchg
mov
mov
jbe
mov
add
clc
cmpsb
stc
mov
mov
mov
push
pusha
inc
mov
jb
pop
jo
ret
sub
movsl
mov
mov
cmpsb
push
add
mov
lret
cwtl
inc
mov
rcll
mov
and
xor
pop
xchg
sbb
pop
jno
pop
and
inc
xor
arpl
fisubrl
xchg
scas
imul
xor
das
xchg
shrl
push
jp
mov
in
jns
pop
mov
jnp
aas
cli
dec
std
cmp
xchg
jl
ret
add
ret
sbb
add
xlat
mov
fdivs
cmp
popa
sbb
hlt
inc
in
add
sbb
out
mov
inc
test
test
daa
sub
xchg
inc
sub
cmp
movsb
decl
fstps
inc
dec
ffreep
dec
mov
pop
out
xchg
js
inc
in
push
cmpsl
mov
pop
dec
subl
jo
ror
das
divb
les
mov
sbb
xchg
leave
sub
ret
xchg
fstpl
lcall
add
sbb
cld
cmpl
jns
stos
jns
dec
rcrb
adc
mov
pop
popa
jne
inc
and
js
movsb
mov
inc
pop
outsb
xorl
dec
insl
dec
cltd
call
je
sti
mov
movsb
add
popw
inc
loop
fidivl
push
das
lods
popa
cld
push
out
push
pop
inc
push
xchg
lcall
mov
loopne
jl
xchg
clc
loope
movsl
loope
mov
inc
ljmp
test
call
outsl
push
rol
lods
xchg
sarb
adcl
xchg
and
pop
addr16
icebp
aad
xchg
repnz
push
cltd
pop
js
lods
loope
cmp
cmpsb
insl
je
xor
pop
test
cs
aaa
adc
mov
xchg
cwtl
fsubs
je
mov
mov
push
mov
or
shr
xor
mov
pop
out
ret
int3
mov
stc
jbe
out
xchg
mov
cmpb
stos
lods
mov
dec
scas
out
or
xor
pop
mov
clc
sbb
inc
loop
lods
fwait
adc
jb
pop
inc
mov
jns
mov
mov
cmp
inc
inc
nop
dec
and
fs
es
xlat
jne
js
mov
push
add
imul
scas
mov
insl
or
movsb
or
mov
or
fisubrl
clc
fstpt
sub
stos
negl
or
jmp
xchg
mov
mov
movsl
jge
mov
mov
pop
xor
and
fwait
rcr
ljmp
inc
stos
lahf
addl
test
scas
cmpsb
outsl
sub
cwtl
sub
inc
push
jl
sub
dec
mov
push
test
nop
sub
push
xor
add
rclb
mov
in
cmp
sahf
mov
cwtl
xor
inc
sub
xchg
rcrl
cmp
ficompl
int
shrb
imul
ljmp
subb
movsl
jo
inc
jnp
jl
dec
pop
stc
cmp
popa
lret
adc
dec
idivl
aas
mov
arpl
bound
rcll
cld
sbb
cltd
sahf
push
lcall
loopne
lock
ficomps
cmc
inc
cld
les
xchg
sub
mov
mov
xor
inc
hlt
jg
mov
add
insb
loopne
pop
add
testb
adc
cmp
retw
push
xorb
daa
sbb
and
daa
pop
lahf
into
cmpsl
mov
fs
popf
cmp
push
push
push
inc
mov
sbb
mov
insb
ficomps
mov
movsl
pop
imul
test
fstpl
and
pop
arpl
movsb
xor
pop
xor
pop
push
aad
pop
push
cmpl
bound
inc
scas
mov
lock
repnz
fwait
or
fmul
jecxz
mov
push
jbe
xor
jecxz
push
ret
add
push
xchg
adc
out
ljmp
or
out
das
roll
and
testb
fs
mov
adc
dec
adc
sbb
jmp
inc
xchg
bound
in
cmp
movsl
mov
lods
add
dec
pop
fnsave
rolb
inc
pop
mov
xor
lods
add
sbb
repz
add
outsl
adc
mov
sub
stos
xchg
push
jecxz
mov
push
lock
or
push
dec
inc
sbb
jne
nop
fidivl
addr16
jo
adcb
mov
hlt
pop
mov
mov
mov
cmp
pop
je
sar
divb
mov
call
popf
push
mov
in
cld
sub
idivb
xor
loopne
dec
test
fldenv
dec
pusha
std
push
cs
outsb
xor
sar
add
mov
dec
xor
and
pop
lea
add
les
dec
jne
add
pop
scas
push
icebp
int3
dec
mov
movsl
sub
in
scas
out
shrb
pop
and
sub
push
xchg
push
out
loope
in
aaa
sub
adc
lcall
inc
cltd
stc
xchg
xor
dec
out
fstpt
rorb
je
adc
pop
sar
icebp
pop
mull
int
pop
xchg
cmp
pop
lods
negl
xlat
rcrl
pushf
aam
inc
or
mov
jp
mov
lock
roll
movsl
or
sub
fsub
nop
das
pop
cmpsl
push
jo
push
fisubs
xor
pop
sub
fsubs
sub
and
push
pusha
pop
cmp
push
pop
lret
xchg
push
test
popf
xor
sbb
sbb
sbb
cwtl
push
mov
out
arpl
movsb
sbb
divb
push
adc
and
sbb
inc
lahf
mov
dec
add
xchg
fildl
xchg
cmc
imul
xchg
test
or
stc
incl
jns
pop
push
lods
and
mov
loop
xlat
imul
cmc
mov
shrb
dec
sbb
repnz
cmc
cmp
into
ljmp
pop
dec
xchg
notl
cmp
popf
daa
popa
in
orl
pop
push
lea
cli
dec
data16
mov
inc
add
ja
dec
adc
jo
push
jno
das
shlb
and
aad
aad
pop
sub
mov
dec
loope
xchg
add
sti
dec
jnp
fstpt
mov
shrb
adc
sub
divl
dec
pop
and
ja
fdivl
jmp
enter
sub
and
jp
stc
mov
cli
pop
mov
jne
mov
xlat
jle
sarl
mov
pop
shr
mov
icebp
fcmovnb
pop
xor
stos
sub
daa
outsl
pop
push
cltd
pop
fdivrp
pop
int3
loope
fwait
popl
aam
outsb
jecxz
mov
call
xchg
in
and
and
pop
cmp
push
enter
mov
ljmp
dec
mov
popl
mov
xchg
push
fisubrs
cmpsb
lods
arpl
mov
dec
int3
shlb
ret
mov
dec
lea
push
mov
add
xchg
mov
xchg
cmp
sub
call
dec
scas
mov
pop
fadd
and
mov
jnp
test
sbb
adc
jecxz
jmp
mov
decb
mov
scas
add
dec
icebp
jmp
add
push
fcompl
leave
mov
pop
sub
andb
adc
enter
jle
sbb
mov
push
adc
lahf
icebp
add
insb
inc
data16
ljmp
pop
loopw
add
jmp
popa
inc
cmpsb
lea
mov
mov
test
pop
lock
cmp
sbb
push
shrl
sub
pop
dec
je
adc
shl
cltd
std
loopne
jnp
cmp
call
add
dec
lods
push
pop
test
pop
xchg
insl
cwtl
ljmp
xor
xor
inc
and
xchg
pop
mov
jnp
es
xchg
and
cmpsl
mov
jmp
mov
inc
cmpsb
xor
jp
xchg
pop
xor
in
int3
sbb
add
cs
cmpsl
jmp
and
call
sbb
std
aaa
fdivr
adc
xchg
mov
mov
add
das
sarl
mov
cwtl
pop
leave
jp
push
pop
mov
or
insb
sahf
clc
sbb
sbb
jl
or
dec
sub
jmp
test
or
in
inc
test
cmpsl
call
adc
mov
negl
in
in
dec
sub
and
sub
sbb
nop
imul
jmp
inc
inc
cltd
add
pop
xor
cli
imul
mov
jg
insb
jecxz
adc
xchg
lea
mov
lea
popf
cmpsl
lds
or
sbb
mov
mov
dec
out
mov
and
add
pop
inc
stos
mov
adc
repz
dec
fsts
xor
jl
adc
cmpsb
call
and
hlt
int
in
sbb
jne
and
cmpsl
push
stos
pop
je
cltd
flds
pop
popf
and
xorb
sahf
shl
mov
cs
out
clc
mov
or
or
and
push
add
hlt
mov
mov
movsb
adc
cmp
push
mov
push
dec
xor
pop
push
mov
dec
pop
xchg
lds
mov
fucomp
js
popa
sahf
cs
movsl
xor
sbb
mov
and
lret
int3
push
ret
or
bound
cltd
aam
ror
lcall
cwtl
outsb
sub
or
sub
inc
push
cmp
push
cmpsl
repz
mov
cmp
addr16
add
dec
cld
mov
ja
pop
imul
jns
call
insl
add
cmp
adc
xor
mov
push
lret
into
ja
imul
fs
cmpsl
pop
xchg
jbe
jl
sub
jle,pt
jg
cmp
insb
inc
js
sub
sbb
mov
mov
iret
dec
mov
add
call
xchg
cmc
add
imul
cmc
int
out
rcr
mov
cli
sbb
cmpsl
dec
sbb
cmp
lods
jmp
add
lods
mov
lods
mov
cmp
adc
jecxz
rolb
and
pop
and
das
addr16
movsl
add
out
jns
pop
ret
js
outsb
xor
xor
mov
xchg
jnp
aad
scas
dec
outsb
mov
add
es
xchg
mov
jo
sbb
out
push
pop
call
rclb
add
push
cmp
jns
mov
ljmp
sub
stc
mov
dec
sub
jmp
add
movsl
cmpsb
daa
daa
mov
mov
aad
call
jne
and
out
push
int3
out
add
xchg
pusha
stos
in
push
pop
sbbb
cmc
or
cld
jmp
pop
sbb
test
pop
push
mov
adc
cs
jae
addb
sbb
push
cmp
pop
or
push
rcrb
adc
xchg
sub
xor
test
fwait
pop
std
popf
fcmovne
test
xlat
push
loop
pop
int
test
sbbb
iret
pusha
sbbl
hlt
inc
cmp
aas
push
pop
pavgb
call
std
shlb
pop
and
inc
adc
xchg
fsts
into
ljmp
jge
sub
ficomps
mov
es
inc
shll
andl
enter
dec
mov
sub
xchg
mov
xchg
sti
pop
pop
dec
mov
or
lock
pushl
orl
add
adc
add
div
fcompl
push
sbb
stc
mov
pop
inc
jno
mov
call
mov
fidivs
jmp
mov
lea
cmc
xadd
mov
mov
loopne
xchg
stos
sub
mov
cmp
cs
fistps
aam
mov
push
add
cmpsl
ljmp
les
enter
sbb
adc
dec
shrb
fwait
test
dec
fmul
xchg
add
and
dec
lahf
ret
add
in
ret
imul
in
stc
adc
cmp
mov
jae
rcll
aaa
jno
lret
sub
sbb
push
pusha
sbb
imul
jecxz
push
sub
and
mov
pop
pop
sbbb
les
jne
in
cs
cmc
notl
inc
mov
fsubrl
push
adc
cmp
adc
clc
sbb
fidivs
and
mov
testl
insl
mov
jbe
mov
mov
mov
and
jnp
add
xchg
mov
mov
fmul
cmpsb
pop
idivb
mov
popa
xchg
mov
pop
iret
sbb
aam
push
cmp
add
mov
in
xchg
dec
sbb
jne
or
and
lret
push
cmp
and
lods
fstl
inc
pushf
inc
cmp
popa
inc
sbb
bound
cmc
pop
sbb
or
orb
loope
xchg
movsb
mov
cmp
in
out
lahf
subb
arpl
dec
mov
not
sbb
rcr
add
pop
mov
hlt
and
lret
dec
cmp
fnstenv
fld
push
inc
push
out
ss
jmp
lods
pop
xchg
stos
test
lea
or
cld
cmp
inc
dec
fists
pusha
repnz
ret
xlat
or
dec
add
in
into
jnp
inc
lcall
outsl
xlat
int3
and
popa
lock
hlt
mov
inc
cs
push
xor
fnsave
and
add
movsl
in
sbb
popf
cs
test
push
xchg
jp
outsl
or
xor
add
mov
cmp
mov
xchg
mov
sbb
in
xchg
mov
mov
sbb
dec
push
or
jno
jg
mov
sub
xor
mov
cmc
pushf
stos
jp
dec
xchg
sub
push
jg
jp
dec
mov
int3
outsb
sbb
sub
inc
adc
fldl
ljmp
fmul
mov
daa
or
sahf
shr
lock
fistpll
cltd
in
cmpps
push
push
jbe
sbb
subb
sbb
or
dec
es
and
and
pop
aaa
push
sti
std
mov
adc
xor
cmc
sub
js
mov
xlat
test
jg
leave
or
push
add
in
out
pop
and
out
or
fdivs
mov
lret
fsubrs
mov
mov
repz
pop
leave
scas
js
push
sti
and
pop
dec
dec
inc
mov
cwtl
js
aas
out
ss
sub
inc
xchg
jnp
mov
repnz
sbb
movsb
shld
out
fsubrp
std
shlb
or
daa
rclb
jg
test
test
push
xor
rol
lret
and
fsubs
int3
add
push
or
inc
mov
add
adc
pop
push
aas
fstl
dec
mov
mov
lock
aas
sbb
push
aad
outsb
mov
pop
pop
cmpsb
insl
jecxz
and
fstl
test
movsb
pop
dec
xchg
cmp
fimuls
and
fnsave
mov
das
or
psllw
adc
in
mov
pop
inc
lahf
sub
cmpl
dec
ja
data16
jge
bound
jae
add
mov
sbb
pop
faddp
aaa
cmp
pushf
movsb
cs
and
icebp
xor
and
xor
rol
or
stc
pop
and
aas
enter
mov
mov
or
sub
cmp
orl
sub
daa
mov
in
xchg
test
notb
leave
mov
and
add
adc
rorl
mov
cmp
mov
in
dec
sbb
je
jns
jg
in
adc
scas
cltd
rep
test
mov
mov
xor
dec
sbb
rclb
adc
jle
repz
ljmp
push
call
mov
sub
jecxz
mov
aas
adc
mov
bound
arpl
mov
jl
cli
cmpsl
andb
mov
mov
pop
mov
lret
push
call
inc
cmp
and
in
mov
cld
pop
mov
inc
scas
inc
mov
mov
or
dec
insb
mov
jg
xchg
inc
jp
nop
call
sbb
rolb
pop
ss
clc
push
jge
cmp
out
cmp
mov
sbb
addr16
adc
mov
mov
push
loope
je,pt
fmulp
in
lea
jle
or
xor
mov
imul
jmp
or
push
iret
dec
push
dec
sbb
or
add
sub
jle
clc
icebp
push
push
pop
fsubrs
aas
mov
jbe
push
cld
jns
dec
and
xor
sbbl
test
or
ret
push
cwtl
sub
int
jbe
jnp
les
jnp
rcrb
in
cld
push
addb
test
inc
mov
in
pop
rolb
aam
shl
pop
sbb
loope
aaa
push
sbb
jb
push
xlat
aad
aam
mov
mov
hlt
fmul
mov
and
pop
sub
loop
jb
xor
imul
mov
mov
or
xor
pop
arpl
xchg
daa
add
adc
pop
dec
adc
es
rorb
jno
fmull
insl
pusha
sti
sarb
pop
mov
add
es
arpl
lea
cmpsb
aaa
mov
aad
ffree
push
int
iret
lock
insb
mov
add
pop
out
aam
push
movsb
dec
in
pop
jnp
pop
xlat
insl
fcompl
adc
cwtl
lahf
push
inc
inc
ret
pushf
aad
imul
mov
add
pushf
or
cmp
dec
mov
es
cmp
inc
and
mov
fs
fcoml
push
lcall
dec
jge
aas
mov
mov
nop
push
insb
or
aaa
enter
movsb
push
push
mul
mov
mov
adc
stos
icebp
mov
xchg
mov
stos
or
dec
sub
icebp
out
and
xor
jne
popf
cmp
int
ret
push
adc
sbb
gs
xor
xchg
dec
jbe
push
mov
lods
sbb
inc
inc
gs
jl
in
sub
ja
enter
xchg
mov
add
int3
enter
dec
test
inc
sbbl
cmpsb
pop
xor
dec
cmovbe
xorl
or
push
les
add
ds
repnz
rcrb
ja
jecxz
subb
adc
adc
jne
cwtl
push
stos
sbb
ds
pusha
mov
cmp
enter
sar
cli
jmp
icebp
int
lods
xchg
mov
push
or
sbb
push
adc
jbe
enter
subb
test
jmp
cmp
sbb
mov
jo
sti
les
addr16
xor
push
mov
jae
das
or
cmpsb
iret
mov
adc
incl
xor
or
cmp
and
rcr
and
daa
and
es
and
jbe
inc
push
jbe
push
and
out
scas
iret
scas
pop
push
xor
pop
lret
cmp
mov
int3
mov
cmpsl
addb
xchg
jnp
out
std
jl
and
cmp
pushf
aam
ret
xor
xor
nop
xlat
js
test
mov
xchg
pop
fwait
adc
sar
scas
push
cmp
push
xchg
inc
test
adc
pop
mov
cli
sub
xchg
adc
ljmp
and
stos
inc
ljmp
cmp
cmp
push
fisttpll
ja
hlt
sti
aaa
sub
sub
jmp
xor
or
push
sub
fiaddl
stos
idivl
fistps
daa
dec
adc
out
cltd
mov
pop
cmp
ds
pop
hlt
dec
rcrl
cmp
adc
add
and
add
xchg
xor
pushf
push
adc
out
jno
aad
popf
mov
jecxz
fildl
in
leave
cmp
ds
nop
shr
mov
nop
xor
fidivl
inc
mov
sbb
loope
fs
inc
int
push
aas
push
sbb
or
addr16
cmp
cli
mov
mul
mov
mov
cmp
sbb
mulb
inc
add
inc
mov
cli
aaa
pop
jg
imul
repz
pop
jb
repnz
mov
xor
fiadds
dec
inc
arpl
push
cmpsl
in
push
jge
lods
out
mov
stos
dec
mov
cmc
fadds
repnz
scas
xchg
inc
inc
mov
pop
roll
xor
aad
xchg
les
push
gs
sub
lret
jecxz
pop
xchg
mov
pop
cmp
inc
inc
and
xchg
fnstsw
lea
aas
fildll
xchg
jle,pt
out
adc
leave
pusha
cli
or
dec
cld
mov
pop
cli
fs
cmp
mov
inc
fmull
xorl
jae
push
jb
sar
outsb
xor
inc
or
jp
fstpl
dec
imul
filds
dec
mov
int3
xchg
and
mov
shrb
cmp
aam
add
clc
arpl
add
or
and
xchg
xchg
cld
push
rorb
aaa
nop
mov
mov
push
jp
aas
shr
sbb
icebp
lret
add
dec
arpl
dec
das
add
pop
cmp
int3
cld
cmp
arpl
push
ljmp
fildll
sub
pop
sub
adc
icebp
fdivrl
mov
inc
sbb
aam
cltd
popf
aad
push
xchg
std
sub
loop
loope
mov
push
pushf
xlat
int
in
cli
mov
imul
push
dec
in
insb
repnz
lcall
sbb
jne
int
push
sbbb
sbb
lahf
inc
jl
leave
lret
popf
push
push
aaa
add
pop
pop
inc
jecxz
aam
xlat
xor
xor
test
aaa
mov
and
decb
ja
div
sbb
inc
in
mov
inc
cmc
js
dec
cmp
mov
sub
cmp
loope
repnz
sbb
push
jne
movsb
xchg
mov
outsl
adc
aad
pop
jmp
enter
mov
cmp
idiv
nop
gs
aam
out
fwait
push
cmp
or
xor
insb
cs
pop
in
mov
sti
add
xchg
mov
icebp
and
xchg
jle
jns
jecxz
jl
jnp
xlat
aaa
jge
xchg
mov
xchg
rcll
fnstcw
jbe
sbb
std
cmpsb
leave
adc
imul
push
cmp
movsl
lods
outsb
adc
rcrb
aaa
rcr
mov
fldl
xchg
pop
xchg
mov
or
aam
sbb
mov
dec
out
push
stc
shrb
dec
add
xchg
cltd
or
mov
in
inc
add
mov
mov
popf
and
or
push
jne
outsl
xor
pop
mov
or
adc
rolb
das
or
jae
sub
clc
aam
sub
push
movsb
pop
test
dec
xor
ss
xchg
mov
imul
int
push
or
fs
xor
lds
mov
or
stos
imul
loop
and
call
inc
pusha
sbb
mov
in
sti
adc
je
cmp
imulb
mov
sub
iret
ret
xor
outsl
add
pop
in
cmp
cld
sub
repz
pushf
repz
lea
xchg
sbb
push
mov
je
dec
xchg
push
mov
fimull
xchg
and
ret
mov
inc
pushf
loop
out
and
loope
les
jae
mov
mov
out
mov
xor
adc
sbb
shll
dec
lock
cmp
mov
mov
out
jo
inc
inc
pop
mov
mov
cmp
mov
xor
ds
in
cmpsl
out
jae
and
popf
jmp
repz
notl
cmc
mov
aaa
jp
lock
xlat
adc
fidivl
lock
imul
loopne
jns
pop
mov
xor
ss
sub
lret
cmp
insb
cmp
inc
or
mov
enter
jmp
outsb
pusha
out
sub
lahf
jae
add
insb
loope
sub
hlt
or
outsl
jmp
ss
icebp
cwtl
add
ret
adc
dec
xlat
mov
cmp
sti
pop
cmp
dec
mov
in
sbb
and
jmp
inc
xor
fimull
pop
or
push
test
arpl
xchg
lea
out
int
sub
and
ja
pusha
push
int3
lcall
cmp
xchg
push
and
or
imull
movb
xchg
cmc
sbbb
popf
pushf
adc
xchg
fiadds
pop
inc
pop
stos
adc
jp
out
testl
mov
rolb
sub
adc
sbb
and
adc
adc
in
cmp
push
test
out
pop
push
in
ds
ficomps
lret
repnz
jnp
and
dec
push
stc
or
test
inc
enter
sarb
mov
xor
ret
pop
add
into
lret
xchg
int
xor
xlat
lret
push
push
sub
mov
push
mov
divb
mov
mov
das
gs
mov
add
xchg
in
lds
jmp
shlb
test
xchg
es
imul
into
adc
leave
call
or
fldt
inc
sarb
lods
mov
out
sub
fsts
pop
mov
div
arpl
daa
test
mov
fdiv
mov
enter
push
xor
inc
arpl
jl
sarb
mov
pop
sub
ja
mov
push
jp
ret
pop
xor
jae
and
xor
and
and
data16
decb
out
inc
mov
jg
cmp
sbb
cmpsb
inc
mov
xchg
in
dec
test
int3
adc
dec
ret
or
mov
lock
pop
pop
push
xor
jmp
in
sahf
idivl
test
fcoms
cmc
xchg
dec
jae
xchg
jl
mov
push
lods
ss
jp
into
movsl
xor
jnp
xor
xor
xchg
pop
push
movsl
push
jmp
aam
jg
ret
cmpl
sbb
mov
insl
fsts
bound
or
fsubrs
fistl
sbbl
cmp
push
xor
or
xor
add
bound
gs
aaa
fs
push
sub
iret
and
inc
sbb
pop
shlb
xchg
aaa
sub
sbb
cs
imul
fnstsw
and
leave
pop
outsl
aam
andl
rorb
ds
adc
aas
mov
mov
xor
inc
jmp
popa
aad
xchg
sub
xchg
jmp
xor
lret
fstpt
pop
xor
cmp
jge
lock
decb
add
loop
scas
mov
push
out
gs
mov
and
fnsave
mov
xchg
into
enter
pusha
cmpsl
bound
dec
mov
enter
stc
mov
nop
cmp
push
gs
pop
inc
int
cltd
das
fdivrl
lret
adcb
roll
les
repz
inc
das
push
inc
mov
fsubrl
scas
xchg
subl
mov
mov
aam
addr16
sub
jnp
ljmp
jecxz
mov
push
mov
pop
add
add
ja
mov
sbb
push
push
cmp
scas
cmp
sbb
pop
sbb
daa
push
andl
sub
pop
mov
or
jmp
cmpsb
sub
leave
dec
cmpl
and
das
and
add
jbe
js
or
mov
mov
dec
cmp
adcb
aad
and
jle
add
cmpsl
adc
addr16
or
push
cld
outsl
in
sbbl
adc
add
mov
pop
xor
imul
cmp
xchg
mov
push
cmp
in
mov
and
pop
mov
mov
fdivl
mov
cli
stos
and
stc
repz
fstpl
jns
push
adc
cmp
jo
cmpsl
sbb
test
push
shl
hlt
popf
jne
xor
lret
dec
jo
repnz
push
mov
dec
and
adc
iret
hlt
push
cwtl
cmovno
pop
inc
xor
popa
adc
pop
inc
xchg
dec
and
sbb
sbb
xchg
mov
loop
sub
ljmp
out
push
push
nop
xor
cmp
lock
divb
stc
cmp
and
cmpsb
andl
or
or
scas
js
daa
flds
add
sbb
inc
shrl
aam
jl
icebp
loopne
cmpsb
pop
jecxz
test
or
inc
pop
imul
sub
test
setp
ds
ret
aas
nop
testb
stos
cmp
sub
jmp
mov
cmpsl
adc
mov
dec
dec
adc
shll
sarl
orl
sub
into
adc
dec
adc
sub
jbe
lret
dec
xchg
push
mov
aam
mov
mov
aas
jbe
outsl
scas
pop
pop
adc
iret
aam
pop
mov
mov
mov
aam
pop
in
mov
mov
add
push
lret
xchg
out
ss
mov
icebp
inc
pop
fwait
loopne
mov
mov
nop
fs
cwtl
sbb
add
sahf
mov
mov
sbb
jg
jl
xchg
xchg
lret
and
jle
aaa
ja
imul
ret
scas
cmp
pop
pop
xor
pop
mov
aad
imul
sub
push
js
xchg
rcl
add
or
mov
fstpt
push
jp
add
sbb
pop
push
sti
lret
sarb
jne
hlt
cmp
fs
lea
add
leave
test
fwait
cmp
ljmp
in
fadds
xor
mov
in
jno
mov
mov
jnp
pop
sub
loop
popa
leave
je
inc
rclb
fisubl
je
fldenv
or
jae
daa
sub
es
out
mov
mov
imul
mov
leave
lahf
fwait
stos
call
cs
test
scas
adc
mov
shll
cmpsl
cmpsb
cmp
jne
shll
xor
ja
pop
mov
sbb
sbb
mov
cmp
dec
pushf
out
and
pop
ja
push
jb
out
addb
jnp
pop
dec
call
movsb
add
stc
jmp
cmpsb
push
cmpl
out
rorl
inc
test
add
cmpsl
adc
test
lcall
add
subb
mov
mov
add
fldenv
rcrl
sahf
mov
lret
push
mov
jl
movsl
jbe
mov
out
inc
lds
inc
test
insl
cmp
sarl
fs
xchg
cwtl
inc
divl
dec
je
lahf
adc
shlb
popf
es
sbb
mov
test
and
out
adc
or
push
pop
mov
or
je
repz
fildll
stos
pop
scas
dec
in
xchg
adc
in
movsb
lock
jl
or
dec
insb
jp
sbb
sub
jge
and
stos
or
cs
mov
sbbl
pop
into
inc
fildll
icebp
punpckhbw
pop
jae
pop
inc
imul
rcl
lods
popa
popf
push
and
sub
mov
arpl
iret
ret
sbb
sbb
call
lods
lret
and
push
loop
hlt
pop
ja
cmc
sbb
push
testb
or
mov
call
dec
cmc
dec
add
jno
cli
loopne
add
xor
inc
or
xchg
or
popf
pop
push
jne
outsl
push
jp
fs
bound
lock
lret
movsl
sbb
stos
mov
test
bswap
popf
xchg
xlat
push
mov
fcmove
mov
test
push
mov
pop
out
divb
les
xor
cmpsl
pop
jns
push
out
xchg
inc
pop
xchg
ret
push
xor
in
test
dec
mov
mov
add
xor
xchg
ljmp
dec
mov
and
sub
jle
jl
div
fucompp
test
add
neg
cmp
and
std
imull
lahf
pusha
mov
rcll
popa
sti
xchg
push
fs
adc
pop
jmp
cwtl
cmp
inc
int3
xor
mov
cltd
mov
pusha
mov
mov
ss
mulb
mov
mov
pop
push
mov
inc
fidivrs
cmp
repz
or
mov
hlt
push
mov
lods
aas
xchg
inc
fsts
xchg
sbb
ret
repz
sub
js
cltd
push
shll
imul
leave
stos
loopne
sub
popf
dec
jnp
nop
xor
sarl
push
fucomip
push
add
adc
mov
mov
or
imul
push
jb
jbe
lock
cld
shrb
lret
xchg
sbb
xchg
cltd
ja
dec
xchg
sub
sub
mov
fadd
mov
lock
xchg
lret
mov
sbb
and
rcrl
int
test
aas
pop
mov
ret
dec
pop
int3
rcrb
popa
jle
test
dec
sbb
ja
xlat
out
int3
pop
or
mov
sub
cmc
pop
outsl
dec
fs
scas
rolb
adc
adc
fs
lock
xchg
mov
imul
sar
mov
or
outsb
jbe
cmc
push
and
movsb
mov
mov
je
dec
xlat
jno
xor
dec
mov
pop
loope
or
adc
xor
bnd
and
and
and
or
push
testl
push
push
int3
jb
xor
push
ror
arpl
dec
cmp
cli
in
inc
in
icebp
in
jg
add
ja
push
mov
add
pop
push
andl
out
add
jb
aaa
jne
cmp
fimuls
mov
push
repnz
ret
cmp
mov
shrb
jl
mov
inc
cmovl
out
es
fsubr
cmpsb
rol
pushf
cmp
mov
jne
xchg
mov
mov
mov
dec
fstpl
push
cli
adc
add
lods
ds
out
subl
mov
outsb
pop
mov
jecxz
push
movd
xor
out
cmp
lods
push
inc
mov
in
ljmp
out
cmp
arpl
xor
sub
inc
dec
adc
sbb
and
scas
call
pop
sahf
stos
and
imul
std
cmp
sbb
mov
xchg
insl
sub
mov
or
lods
fs
cmpsl
lock
mov
adc
dec
roll
repz
arpl
push
and
repnz
pop
jle
popa
mov
jle
sub
lret
or
jb
imul
mulb
dec
sti
sbb
dec
jno
lock
out
and
je
xor
rclb
dec
nop
in
pop
ret
lds
jmp
scas
sub
test
mov
test
int3
jae
xchg
dec
xlat
pop
scas
inc
or
rcl
push
inc
icebp
pop
les
cwtl
xor
movsl
adc
stos
sbbb
loope
cmp
or
loopne
adc
leave
cmpsb
lret
rcrl
and
inc
out
cwtl
movsb
fsubs
cltd
out
jle
dec
or
cmp
cs
mov
ja
into
sub
inc
xchg
add
fstpl
xchg
int
and
in
adc
dec
pop
push
sti
mov
xchg
xor
adc
add
xchg
call
scas
and
xor
mov
mov
jp
gs
dec
je
push
push
outsl
icebp
jo
movsb
jbe
xchg
sub
dec
pop
pop
cmp
pop
sti
sub
cwtl
add
xor
outsl
cld
jg
pop
loopne
test
and
jp
push
dec
mov
add
cmp
ffreep
scas
pop
jns
jnp
mov
sbb
mov
xchg
cmp
mov
mov
lods
push
mov
inc
jmp
sub
das
pop
test
jns
andl
stc
das
je
fwait
adc
insb
jmp
fmull
bound
mov
ljmp
repnz
cmp
insb
adc
jg
sub
adc
xchg
mov
xchg
pop
int3
int3
cmpsb
sbb
push
adc
int
outsb
pop
shll
or
test
jg
faddl
outsl
jns,pt
int3
or
inc
fsts
push
gs
push
inc
push
jae
inc
decl
push
mov
ret
and
inc
pop
cs
sub
outsl
insb
enter
test
stos
call
jns
push
in
in
stc
call
loope
pop
pop
mov
rorl
je
inc
pop
push
adc
mov
rolb
or
imul
add
addr16
out
add
and
xchg
pop
push
shlb
pmulhw
xor
mov
dec
mov
sti
int3
arpl
or
cmp
dec
js
xor
imul
mov
incl
adc
push
xlat
pop
dec
add
xchg
fistps
fs
mov
sub
jnp
lea
in
sub
iret
loop
mov
mov
shll
cmp
jmp
pop
xchg
xor
dec
jns
mov
adc
movsb
lcall
ds
jb
fadds
xchg
or
sbb
or
ficompl
push
aas
gs
or
dec
xor
mov
imul
push
sti
pop
aas
or
mov
push
loope
or
lods
test
pop
add
out
sub
std
xchg
sub
lock
cmpsb
testl
pop
in
lahf
push
dec
pop
aas
clc
fistl
addr16
mov
test
cmp
jmp
jae
rcl
dec
push
imul
or
adc
out
sti
imul
test
dec
inc
bound
xchg
mov
in
cmp
push
fisttpll
inc
outsb
sti
sarb
xor
cmpsb
and
or
xchg
js
aas
repnz
lret
push
test
add
pop
xchg
enter
cs
inc
and
dec
fs
mov
popa
fldenv
xchg
loopne
mov
or
js
xchg
mov
sqrtps
lret
dec
mov
and
popf
inc
movsl
adc
popf
lret
cwtl
fsubrs
adc
shll
rcl
cmp
jmp
cmpsl
xchg
sbb
mov
sub
mov
mull
cmp
mov
imul
lds
je
mov
ljmp
sbb
push
mov
add
mov
adc
add
jae
cltd
out
std
or
jnp
push
push
cmp
jbe
in
xorb
ja
outsb
mov
jmp
push
mov
movsb
jo
jp
incl
mov
shrl
mov
fs
mov
xchg
fistps
rolb
push
ret
mov
mov
sahf
fcoml
or
test
ja
mov
inc
mov
out
outsl
xor
mov
sbb
andl
mov
test
bound
int3
xchg
jmp
sahf
ja
cmpsl
pop
dec
add
jno
jmp
aam
add
into
add
pop
cli
das
sti
push
inc
mov
rclb
xchg
xor
adc
adc
jb
call
dec
push
push
adc
mov
or
mov
inc
mov
test
and
xchg
out
imul
addl
ficoms
xor
and
movsl
or
jb
jg
mov
xlat
mov
mov
inc
daa
popa
lret
jmp
in
jb
jo
inc
lcall
mov
mov
nop
arpl
sbb
lock
mov
inc
sub
mov
jo
or
out
cld
and
je
out
test
or
leave
loop
pandn
add
mov
cmpsl
jge
adc
sub
push
jp
jns
into
jp
push
xchg
mov
sbb
or
push
mov
jg
mov
pop
pop
or
stos
jnp
jl
sub
jbe
pop
mov
scas
and
repnz
pop
mov
mov
testb
sarb
stos
into
out
fs
int3
test
call
int
stos
push
dec
jl
loop
sbb
pop
fbld
cmp
dec
addr16
jg
cmc
fidivs
or
aam
icebp
cli
push
or
out
jo
sahf
mov
into
xchg
xchg
addl
lcall
test
add
scas
std
cmpl
push
xchg
icebp
movaps
dec
or
push
sarl
call
xchg
dec
or
adc
ljmp
push
adc
jg
fidivrl
mov
inc
mov
adc
or
lret
sub
sahf
mov
cmpsl
add
popa
stos
push
push
sbb
push
adc
orb
mov
mov
push
mov
push
ss
popl
lret
std
jmp
xchg
out
cmp
loop
mov
or
sar
inc
dec
inc
mov
iret
inc
pop
add
in
mov
fdivrl
push
mov
data16
cmc
loop
lds
rorl
xchg
push
mov
fwait
mov
nop
fadds
ret
dec
and
jbe
sub
mov
mov
icebp
test
jge
je
jg
dec
enter
pop
cld
cmp
add
or
cmc
inc
sub
call
rorb
dec
repz
lods
stc
leave
fsubrl
inc
add
or
data16
mov
inc
stos
xchg
push
sub
fiaddl
push
jp
mov
mov
or
js
sbb
xchg
xchg
lds
das
fldt
insb
mov
mov
arpl
ljmp
in
push
rcll
outsb
jle
and
cs
jo
push
mov
push
jne
pop
loopne
fnstenv
push
sbb
add
inc
cmp
push
out
push
inc
je
rcrl
adc
add
negl
mov
ljmp
or
cmpsl
mov
je
pusha
data16
lahf
xor
hlt
mov
mov
pop
jg
push
adc
aam
subl
outsl
loop
inc
stos
mov
cmp
push
mov
in
push
nop
sbb
or
out
and
mov
mov
ss
in
movsl
mov
out
inc
lods
pop
iret
xor
mov
out
mov
inc
dec
jne
inc
pop
scas
mov
in
int
inc
stos
push
pop
lds
mov
std
pop
in
sbb
test
xchg
outsb
lods
cmp
cmc
testl
xor
jl
fcmove
and
das
or
mov
out
mov
aad
sub
ret
push
mull
sub
lahf
int
es
dec
sub
rorl
fsubp
js
outsb
add
and
adc
std
ja
dec
inc
or
xor
or
jnp
pop
mov
lods
or
mov
push
cmpsb
jnp
inc
out
test
mov
mov
pop
out
dec
mov
aas
xor
out
mov
inc
sbb
xchg
pop
les
mov
cwtl
hlt
push
roll
jbe
mov
test
push
sub
into
add
dec
sbb
dec
in
testl
das
mov
lahf
aaa
adc
aad
push
loop
sub
mov
pop
insb
and
lret
mov
and
inc
lcall
sbb
std
cs
xor
xor
mov
xchg
mov
and
wrmsr
inc
dec
lds
stos
shlb
or
shll
out
movb
add
stos
mov
cltd
imul
mov
das
pop
xchg
aam
mov
mov
mov
in
popf
mov
push
add
cmp
sahf
lea
out
outsb
push
mov
dec
add
fcoml
imul
cwtl
les
in
dec
ja
rorl
push
test
mov
add
lods
insl
cmpsl
and
subb
xchg
dec
addr16
fs
or
inc
ret
lock
and
push
inc
dec
mov
lods
addr16
jg
in
mov
mov
adc
jge
stc
xchg
xchg
lods
dec
stos
sbb
xchg
inc
lods
xchg
inc
aaa
cmp
add
aaa
dec
lods
sahf
mov
dec
or
cli
call
movsb
dec
loopne
inc
and
cmp
and
leave
nop
lcall
test
sti
fcmovnu
xor
pop
dec
adc
cli
arpl
xor
lcall
push
out
cmp
jl
fstl
jnp
adc
loope
or
sub
lcall
lods
add
popf
mov
mov
pop
sbb
push
or
outsl
je
cs
mov
jl
movsl
or
loop
into
mov
inc
xor
sub
aam
iret
repz
testl
inc
push
push
jo
xchg
xlat
pop
aad
cmc
pop
push
xchg
jbe
or
push
sub
dec
add
inc
adc
push
pop
call
scas
jb
or
xor
mov
mov
fidivs
mov
sub
cwtl
shll
stos
xor
push
push
aas
xchg
data16
xchg
sahf
or
mov
jle
test
push
jnp
sbb
jne
adc
xchg
sahf
aad
xchg
xor
pop
jl
iret
ds
or
mov
cli
pop
hlt
jae
sti
xor
rcl
cmp
dec
sar
in
mov
sahf
lcall
xchg
out
dec
mov
push
push
xor
dec
fldenv
stc
or
test
mov
popf
push
insl
ficompl
pop
mov
outsb
and
lds
fdivrl
pop
out
out
inc
nop
mov
add
int
dec
mov
faddl
repnz
jge
inc
and
std
xchg
mov
ret
push
aam
cs
aaa
shlb
stc
rcrl
shl
enter
or
dec
into
mov
lret
mov
js
mov
int3
into
imul
or
sbb
mov
ret
stc
dec
add
sbb
sub
jge
lds
xchg
jne
pop
nop
adc
enter
jb
bound
add
mov
pop
pop
mov
push
pop
js
xchg
movsl
add
adcl
bound
or
aam
xor
or
or
fcompl
mov
mov
test
movsb
adcb
test
or
cmp
adc
popa
stos
and
jle
or
inc
lahf
inc
stos
add
cmp
cmp
je
cmpsl
imul
cmpsl
and
sarb
and
lcall
adc
les
out
pushf
hlt
es
push
dec
orb
mov
enter
inc
ret
jne
ljmp
adc
sti
sbb
out
call
lsl
sub
mov
arpl
andl
xor
xor
shlb
icebp
lock
push
adc
adc
scas
repz
and
out
lahf
testl
mov
ds
xor
push
push
lea
jo
jmp
mov
mov
and
addr16
arpl
test
ss
fdivl
fisttps
mov
movsl
repz
mov
gs
push
xor
testb
mov
sbb
or
or
out
xchg
ja
dec
sub
or
dec
push
cmp
rcr
push
dec
or
xor
mov
in
xchg
jp
inc
ss
dec
repz
jle
mov
popf
adc
dec
repnz
rcrl
jmp
and
mov
test
aam
testb
cwtl
hlt
cmc
out
and
std
enter
push
mov
cmp
bound
fcomps
and
enter
scas
xchg
add
shl
fsts
pop
in
cmp
xchg
daa
jp
movsb
fidivrl
cmp
rcll
push
add
or
dec
call
leave
mov
adc
xchg
push
sub
inc
and
add
fiaddl
imul
or
int3
leave
ret
test
adc
js
test
push
loope
pop
sbb
xchg
pop
in
xchg
dec
dec
out
pop
fwait
add
adc
mov
add
push
out
cltd
insl
add
mov
lcall
pop
or
sti
imul
lret
ds
xlat
xor
scas
into
mov
jmp
call
and
test
test
scas
sub
loopne
test
sti
mov
jg
xchg
push
into
outsl
or
inc
sub
ja
stos
faddl
and
or
ss
add
cmp
push
mov
std
stos
outsl
imul
xchg
lock
shll
scas
push
dec
out
add
dec
hlt
xchg
xchg
cmp
cli
push
sub
jp
out
push
into
pop
mov
sti
push
mov
pushf
adc
pop
sub
mov
repnz
into
loop
push
mov
push
xorb
inc
mov
add
rolb
push
les
xchg
test
xor
xor
xchg
leave
jmp
mov
mov
insl
pusha
test
imul
mov
mov
sbb
cmp
stos
mov
mov
cwtl
dec
rolb
or
jb
sub
inc
dec
ret
ret
inc
int
aaa
xchg
jnp
inc
inc
mov
mov
pushf
add
ja
enter
pushf
add
movsl
xchg
mov
xor
cmc
cwtl
movsb
adc
inc
inc
push
and
mov
pusha
mov
repz
sub
sbb
and
data16
or
rcll
fldcw
xchg
cmc
icebp
push
add
add
mov
in
mov
xor
jecxz
sarl
aad
fistps
mov
xchg
and
jmp
in
pop
xchg
push
call
jnp
add
xchg
arpl
mov
dec
orb
sbb
stc
sub
lods
sbb
pop
inc
cmp
aas
insb
xchg
dec
dec
xor
sub
insl
insb
sahf
subb
dec
imull
dec
sahf
into
cmpsb
dec
xor
std
rclb
push
push
push
mulps
and
mov
fwait
call
mov
ja
adc
ljmp
jp
mov
mov
js
fs
mov
scas
inc
mov
sahf
fsubr
jo
es
out
cltd
jbe
mov
fcoms
cmp
gs
or
and
xchg
and
mov
bound
mov
ret
push
adc
ja
or
xchg
popf
adc
les
sub
dec
movups
repnz
add
adc
filds
sahf
stos
fwait
hlt
pop
cwtl
ljmp
and
scas
adc
cld
bound
movsb
in
or
dec
xchg
inc
jge
mov
pop
pop
pop
adc
int3
cmp
daa
push
add
mov
dec
or
out
pop
inc
fdivrs
or
and
fcompl
xchg
push
lods
in
xchg
cltd
xlat
lods
xor
aad
cmp
or
xchg
pop
dec
add
fiadds
cltd
bound
jo
adc
xor
arpl
cmp
cmp
pusha
mov
sbb
into
negl
in
test
xor
repnz
jg
xor
jne
xlat
pop
jo
lcall
test
outsb
jecxz
sbb
in
or
mov
adc
xchg
xchg
jb
stos
insl
mov
add
leave
sbbb
mov
ret
in
sbb
aas
enter
pop
sbb
ret
stos
gs
in
popa
pop
ja
mov
xor
mov
mov
pop
cwtl
dec
das
xor
xor
push
xor
add
inc
inc
sbb
shlb
cwtl
aad
imul
jb
mov
mov
add
mov
fwait
cld
mov
imul
fnstcw
jno
scas
adc
jmp
xchg
leave
dec
scas
cld
shr
push
cmp
insb
testl
loopne
mov
push
repnz
sbb
jge
negl
test
xor
cmc
or
lret
int3
popf
push
stc
mov
push
jp
mov
adc
mov
fucomp
push
dec
movsl
mov
sbb
into
movsb
sahf
cmpsb
dec
mov
cmpsb
repz
in
sarl
xchg
xchg
mov
andb
push
imul
ja
repnz
pop
cmp
fisttpll
mov
sub
fstpl
stos
or
xlat
in
test
inc
cltd
mov
movsl
call
stos
dec
jb
mov
pusha
jno
adc
mov
dec
jae
pusha
bound
inc
pusha
jecxz
test
and
add
dec
jge
incb
push
inc
dec
xor
sub
cmp
notl
inc
xor
cmp
testb
les
inc
adc
pop
push
xor
lret
add
cmp
daa
mov
dec
je
js
add
cli
mov
inc
sbb
lods
fcomp
mov
or
sbb
sbb
push
movsb
mov
and
mov
mov
rcrb
xchg
es
push
lret
out
arpl
mov
mov
stos
sbb
mov
sbb
dec
inc
or
sub
mov
insb
leave
fsubl
cmp
jp
xorl
add
in
and
leave
or
scas
imul
sub
pop
sti
xchg
adc
repz
jge
bound
mov
inc
adc
jmp
loopne
cli
ja
push
mov
pop
push
leave
movsb
aaa
mov
cmp
inc
dec
cmpsb
add
inc
jge
aas
sti
sub
aaa
sbb
pop
xlat
mov
adc
stc
sbbb
mov
jnp
mov
loopne
test
je
cwtl
xor
adc
jmp
ds
call
insl
ds
dec
insb
das
jecxz
jbe
outsl
aam
push
inc
clc
shlb
inc
inc
sahf
ret
dec
mov
repnz
mov
stos
add
mov
add
dec
ds
cmc
fsubl
pop
icebp
nop
mov
add
xchg
pop
jno
mov
add
data16
sub
daa
pop
icebp
std
ljmp
cmpsl
mov
jecxz
sarl
mov
xchg
jecxz
stos
icebp
mov
cld
or
pushf
ljmp
pop
stc
and
push
xchg
out
mov
stos
in
and
cmpsl
add
movsl
lret
mov
cmp
adc
push
push
in
out
rcrl
xor
jne,pt
inc
adc
adc
or
lods
xor
aam
jp
pop
mov
pop
mov
push
mov
xchg
dec
popf
bound
mov
test
sbb
shrb
clc
mov
and
shl
mov
aas
clc
jae
and
inc
adc
outsl
jo
fsubrl
inc
inc
sbb
dec
cmp
daa
pop
lds
mov
jbe
movsl
inc
fisttpl
xor
mov
cmp
stc
mov
inc
fdivr
jmp
rcrl
test
insl
add
cwtl
and
lcall
add
add
or
sub
mov
or
jns
bound
xchg
push
fwait
cld
mov
les
std
aam
mov
scas
and
fs
cmpsl
push
adc
xor
jnp
pop
ss
push
or
mov
mov
fidivl
clc
fisttps
loopne
push
and
ja
stos
outsb
xchg
push
aam
hlt
bound
popf
sar
rcrl
pop
cmp
orb
pop
sahf
in
insl
mov
test
nop
mov
or
inc
pop
mov
fisttpll
pop
mov
mov
mov
push
insb
sbb
test
add
push
out
enter
test
sbbb
push
jmp
add
lahf
cmp
hlt
mov
fists
or
js
mov
out
sbbb
pushf
lea
push
or
xchg
fsubs
cmp
or
fiadds
mov
mov
inc
outsl
jne
mov
jae
js
mov
adc
sub
cmp
xchg
and
or
rcll
mov
mov
lret
std
dec
adc
insl
leave
pop
ja
outsl
or
hlt
hlt
imul
mov
push
xchg
mov
movsl
sbb
gs
xor
inc
inc
jmp
das
sbb
xchg
adc
cmc
sub
ret
in
ja
in
mov
cmp
cmp
pop
pop
pop
or
cs
aam
and
inc
lret
in
inc
fcomip
mov
in
fwait
leave
push
lahf
push
enter
mov
imul
pop
ljmp
test
in
jecxz
sbb
adc
xchg
lea
xor
fmull
out
jno
cmc
inc
addr16
into
push
cmpsb
xchg
jecxz
inc
xchg
and
pop
and
mov
mov
cli
sbb
lea
jg
xchg
pusha
and
and
call
jg
loopne
adc
inc
mov
dec
repz
sub
lahf
inc
in
lea
stc
mov
rcr
dec
and
add
mov
ret
imul
push
pop
jg
sbb
or
dec
sbb
imul
jae
inc
fsubr
int
or
and
ja
es
into
into
ja
negl
int3
js
hlt
add
push
int
cmp
inc
je
jmp
pop
in
ret
out
or
jmp
inc
dec
insb
dec
sbb
xor
push
cmc
mov
ja
mov
push
mov
bound
and
out
ss
je
test
or
cmp
mov
in
inc
xor
cmp
insl
mov
jnp
ret
pushf
push
cmp
je
jmp
sub
lods
mov
pop
popa
daa
push
inc
add
adc
daa
pop
scas
pusha
inc
aad
mov
cmp
mov
rorl
pop
or
jnp
cmpl
sub
push
xchg
mov
movsl
mov
xchg
jge
or
jae
imul
js
add
int
mov
xchg
cmp
outsl
mov
jb
mov
push
out
stos
adc
fadds
lahf
jbe
mov
roll
push
aad
dec
pusha
mov
ja
gs
add
arpl
push
jge
repz
adc
inc
fidivrs
push
cmp
sub
push
out
or
fcoms
mov
pusha
lea
popa
sub
cmc
sbb
ja
fcoms
test
call
push
dec
fnstenv
jns
mov
std
call
mov
inc
sub
jmp
jg
loop
mov
dec
adc
jae
fsubr
push
sub
hlt
mov
xchg
add
and
mov
loope
inc
loope
imul
adc
into
dec
stc
mov
and
cld
inc
add
dec
mov
inc
push
daa
pusha
mov
icebp
cltd
dec
cmpb
movsl
mov
pop
lods
cmp
mov
mov
and
clc
rclb
stc
shrl
mov
dec
scas
call
pop
lahf
sub
das
sahf
into
pop
sbb
lock
sbb
jne
test
inc
leave
cmpxchg
or
adc
sbb
imul
dec
popf
repz
inc
lahf
pop
cmpsl
mov
xor
jae
push
and
repnz
addr16
inc
push
loop
fwait
jecxz
lock
or
out
adc
lods
mov
fxch
imul
stc
sub
add
pop
shll
das
scas
lock
je
pop
jl
jge
test
orb
aad
sbb
mov
push
in
bound
int3
jecxz
sub
test
lret
pop
pop
or
add
inc
and
leave
sub
ljmp
adc
ret
jae
adc
fcmovnbe
shlb
mov
aaa
xor
cmp
movsb
out
loope
xchg
pop
je
mov
aam
xchg
xchg
es
sub
call
repnz
lcall
cmp
pop
loope
dec
push
mov
rorl
mov
add
jo
nop
mov
stos
imul
inc
jne
mov
jg
jno
inc
mov
ljmp
sbb
xor
mov
sub
ljmp
aas
mov
mov
mov
add
or
xor
cs
inc
jmp
xor
mov
xchg
and
mov
test
adc
jno
inc
daa
sub
clc
jecxz
sub
mov
outsb
xlat
cmpsb
and
cmp
mov
mov
cmp
jl
lods
mov
add
das
pushf
add
pushl
lahf
cmp
add
xchg
push
cmc
stc
cwtl
xor
mov
and
mov
sub
sbb
daa
gs
out
out
sbb
cmp
mov
cld
jae
scas
jl
test
jecxz
in
xor
sub
sbb
and
adc
bound
pop
cwtl
xlat
push
sub
imul
jge
jle
popf
push
push
in
and
mov
scas
xor
ret
fidivrl
rcrb
loopne
je
movsb
lods
out
dec
ds
inc
scas
rep
push
movsb
push
popa
in
sbb
mov
enter
aam
mov
movsb
test
fldl
popa
jle
addr16
xor
test
xchg
fidivl
sub
xor
iret
fidivs
cmp
jle
xchg
test
sbb
lods
fsubs
mov
add
mov
insl
mov
das
in
mov
push
mov
flds
sub
cmpsl
insl
pushf
xchg
push
filds
cmc
xor
aam
stc
and
xor
dec
add
dec
out
shll
icebp
push
xor
inc
push
jbe
sub
push
movl
mov
jno
jecxz
mov
jge
add
test
xor
dec
xor
inc
ss
outsl
lret
sbb
addl
adc
dec
mov
loope
inc
imul
xor
fcmovnu
adc
sbb
jnp
imulb
push
jbe
sub
fsubrs
and
mov
aam
jno
push
stc
cli
and
pop
popf
xchg
hlt
gs
sub
xchg
cmp
cld
xchg
adc
mov
sub
aaa
cltd
test
lahf
jb
push
pop
pop
je
or
ficompl
xchg
mov
mov
loopne
test
mov
out
xor
mov
cwtl
push
icebp
push
fwait
mov
mov
outsb
mov
leave
pop
inc
mov
xchg
pop
sbb
jmp
fsub
lds
dec
ds
fistpl
push
pop
cmpb
and
in
fidivs
lcall
test
mov
push
adc
in
xor
ds
mov
nop
incl
out
outsb
sub
xchg
cli
inc
mov
adc
push
add
mov
jge
loop
ss
mov
cmp
add
int
xor
mov
andl
pop
push
push
enter
dec
int
dec
push
mov
lds
sbb
xor
or
jno
sar
fsubrs
add
jno
push
xlat
fists
adc
sub
or
sub
sbbl
lret
xlat
stos
aas
movsl
mov
je
outsb
out
negb
insb
jle
shll
test
out
mov
jnp
das
dec
ja
pushf
xor
inc
mov
mov
jnp
es
mov
or
push
push
cmp
loopne
add
decb
or
scas
leave
int
cmp
mov
jae
add
test
orl
arpl
cld
push
aam
mov
fidivrs
mov
jp
sti
stos
inc
out
or
stc
call
xlat
repz
lret
mov
jo
mov
and
lret
call
or
leave
mov
xorb
inc
cs
mov
ret
push
sub
pop
ss
and
or
xor
shrl
or
dec
insl
sbb
dec
test
xchg
mov
insl
cmp
outsb
jg
scas
sub
repz
cmp
jno
inc
adc
ret
lcall
pusha
sub
pop
hlt
jnp
fwait
mov
jl
xor
mov
inc
jp
pop
in
push
pop
add
jns
or
dec
mov
mov
mov
stos
dec
and
std
lcall
fstpl
jge
imul
pop
pop
mov
arpl
xchg
repz
cmp
fs
push
sbb
clc
out
ss
or
into
es
mov
jecxz
test
sub
inc
dec
aam
scas
jbe
inc
arpl
lcall
ficoms
pushf
decb
jle
loopne
xor
jbe
push
out
pushf
pop
sbb
sbb
cmp
xlat
pop
ljmp
cs
bound
bound
fstpl
imul
push
pushf
push
dec
xor
dec
pop
ss
mov
int
mov
adc
std
sub
clc
push
jnp
add
fists
ss
jmp
and
pop
stos
xor
lea
xchg
fadds
iret
nop
movsb
aas
mov
ljmp
mov
jae
mov
cmpsb
fwait
sub
and
mov
mov
pop
les
sub
and
fidivrs
or
inc
or
shll
xor
pusha
xor
test
jo
outsl
jae
into
cltd
sub
ret
cmp
xchg
es
push
movlps
mov
sbb
sbb
ret
mov
popa
ss
cld
xchg
into
mov
fs
jle
xor
sub
push
or
negb
sbb
push
jns
add
fdivrl
xlat
ret
sahf
imull
sahf
add
lock
xor
cmp
push
scas
dec
dec
pcmpgtw
pushf
stc
mov
in
inc
push
cmp
jp
repz
sbb
and
cmpsb
inc
idivb
dec
sub
dec
aam
xor
fs
shrb
addl
cld
push
daa
aam
dec
dec
jp
fadds
adc
or
daa
adc
stos
andl
movsl
movsl
lock
pop
inc
push
sub
mov
xor
mov
add
xchg
or
pop
mov
push
das
or
sub
xchg
mov
jne
xor
dec
ljmp
mov
xchg
push
xchg
sub
inc
adc
js
jl
test
icebp
xor
fidivrs
dec
mov
std
sub
ljmp
ds
mov
dec
inc
pop
jns
mov
adc
push
movsl
popf
sub
pop
cs
divl
addr16
out
push
in
jnp
sbb
ja
sarb
outsb
iret
xchg
xor
aad
push
into
pop
pop
popf
fiaddl
inc
jnp
js
xor
mov
adc
lods
imul
lret
lcall
push
xchg
jg
push
lea
ljmp
xor
push
pop
jg
movsl
sbb
pushf
mov
movsl
lret
loop
cs
mov
jmp
cmpxchg
push
cmp
mov
push
mov
nop
notl
and
cmp
scas
push
insl
test
shll
jp
cmp
sub
xor
mov
and
xchg
lahf
lods
outsl
push
or
mov
cli
push
aaa
shll
adc
xorl
push
mov
jmp
icebp
sbb
sti
jb
inc
xor
sub
loop
in
push
popa
cmp
rorb
xchg
cmp
mov
data16
shrl
imul
sbb
ja
or
push
roll
xchg
ds
movsl
mov
hlt
fimull
movsb
add
fs
and
adc
and
mov
dec
cmp
push
ret
add
lcall
xchg
rcrl
push
rolb
test
insb
gs
push
mov
rcrb
fidivrs
stos
jp
jp
in
mov
pop
inc
data16
cli
jecxz
mov
gs
add
pop
xor
inc
mov
push
aaa
adc
lahf
aam
or
mov
pushl
add
and
mov
jno
push
mov
fdivl
jnp
push
mov
sbb
pop
xchg
cmp
pusha
shll
ss
fidivrs
adc
test
leave
and
scas
push
stc
sti
push
dec
repnz
sub
xor
inc
stc
adc
dec
xchg
push
jge
push
sub
adc
addl
mov
roll
sahf
insl
mov
xor
xchg
js
and
add
adc
icebp
mov
mov
or
sub
aam
pusha
js
mov
daa
sub
popf
inc
sti
dec
in
fmuls
aad
adc
pop
stc
in
push
or
push
ret
jmp
fadd
mov
mov
repz
inc
sti
aas
xchg
mov
hlt
outsb
sahf
dec
inc
fsub
fcompl
loopne
pop
fcomps
dec
mov
jmp
aad
ljmp
inc
add
xchg
lret
inc
stos
sbb
cmp
or
push
adc
ret
fldt
adc
cmc
rcll
stos
fisubs
and
mov
fwait
pop
hlt
lods
sub
das
test
leave
cmp
lods
ficomps
mov
ja
sbb
iret
xor
test
mov
xchg
dec
cltd
psadbw
ljmp
mov
add
pop
inc
mov
insb
jne
and
lret
call
dec
mov
dec
dec
mov
sbb
sbb
in
ja
pop
scas
mov
add
popa
fdivrl
mov
arpl
add
inc
loope
or
vpshaw
pop
sub
lret
fisttpll
mov
adc
cmp
stos
fdivr
and
adc
push
stos
out
inc
jl
sub
lds
stos
pop
adc
pop
mov
pop
fcompl
outsb
xchg
pop
stc
ds
pop
std
jb
pop
lret
mov
das
popl
adc
loope
add
int
jne
sbb
neg
mov
sub
add
sub
out
dec
inc
inc
jg,pn
adc
mov
push
hlt
push
sub
nop
dec
push
push
repnz
sbbb
sbb
stos
xor
cmp
jmp
cmp
mov
mov
stos
pop
jmp
mov
push
ficomps
inc
movsb
xor
sbb
jno
inc
jo
clc
jg
das
lahf
shlb
pop
loope
inc
mov
aaa
scas
jmp
push
sbb
mov
adc
test
mov
sbb
inc
js
imul
ljmp
adc
mov
mov
xchg
inc
sbb
sbb
popf
and
pushf
popf
cmc
mov
shrl
ds
hlt
pop
pop
adc
out
dec
scas
rcrl
jl
pop
sub
pushf
mov
int
jno
mov
dec
addr16
scas
into
ljmp
xchg
icebp
jae
inc
sbb
pop
push
mov
pop
sbb
addr16
and
and
scas
fs
pop
leave
mov
cmp
sub
mov
and
fcoms
jmp
jo
decl
mov
mov
jp
call
les
jo
faddl
jmp
lea
mov
sub
sarl
rolb
popa
fidivl
add
imul
xchg
mov
sahf
mov
pop
aad
pop
push
leave
insb
hlt
mov
jecxz
jnp
repnz
cmp
push
out
inc
pusha
jmp
leave
xchg
fincstp
add
fcmovu
test
imull
or
lret
iret
mov
xor
les
mov
mov
add
enter
out
dec
bnd
nop
loopne
mov
stos
or
add
rol
je
jno
xor
mov
fidivrl
cltd
push
std
shll
mov
ds
cmp
sahf
out
add
fadds
std
dec
es
sub
jge
ret
add
hlt
stos
push
and
xchg
hlt
jl
jecxz
sbb
push
mov
stc
xor
cmpsl
cmpsb
jle
lock
push
aas
add
out
je
loope
pusha
push
in
mov
jle
xchg
movsb
add
divl
pop
ds
neg
or
sbb
in
or
pop
clc
mov
push
sub
clc
push
cmp
push
js
js
ret
ficoms
popa
adc
outsb
add
imul
mov
fdivrp
jns
adc
test
xor
xchg
scas
and
dec
fbstp
push
mov
add
sbb
xchg
and
outsb
test
inc
lods
and
repnz
sub
in
sub
add
iret
fdivr
push
jb
sub
push
xchg
xor
fwait
fs
push
aam
fmull
jmp
inc
cmp
add
push
lods
cmp
fsts
sub
in
sub
sbb
sub
sbb
lea
test
test
loopne
mov
jp
bound
arpl
dec
mov
sub
mov
xchg
jecxz
mov
or
mull
jo
cltd
fists
jp
je
push
push
aam
mov
fildll
pop
lcall
or
cmp
dec
scas
rcrb
xchg
inc
js
in
mov
jno
jae
loopne
jb
add
insb
cli
testb
sub
popf
sub
pop
adcb
out
mov
lahf
push
pushf
and
sti
xchg
pop
or
aas
test
sahf
add
mov
aam
sbb
dec
jge
out
sbb
loopne
dec
repnz
ja
scas
push
pop
std
mov
push
shll
jmp
mov
ss
fisubrl
mov
sbb
adc
lds
dec
data16
mov
rcll
push
inc
and
mov
rolb
jmp
or
cmp
fs
jg
pop
loopne
test
aam
xchg
mov
mov
adc
xchg
xchg
bound
or
sub
xor
xor
mov
fistl
mov
or
dec
arpl
pop
aam
or
mov
pop
inc
mov
test
dec
inc
clc
mov
rcrb
int3
int
mov
loop
sub
dec
fmulp
shl
jno
outsl
adc
test
dec
adc
cmp
cld
out
lods
test
std
push
mov
jg
cmpsb
sbb
dec
jl
cwtl
sarb
fwait
movsl
shrb
push
pop
orb
arpl
subb
popa
out
sbb
lds
aas
ljmp
jp
pop
fmuls
fdivrl
jle
jle
xor
lds
cmp
data16
xchg
shlb
push
push
mov
clc
idivl
mov
jne
cmp
subl
sti
jle
dec
push
cmp
fs
cmp
inc
xchg
clc
sbb
in
adc
addr16
sbb
stos
bound
mov
xchg
test
jbe
cmp
ja
sbb
adc
btr
sbb
jp
inc
mov
add
mov
and
cmp
adc
pushf
add
xor
dec
mov
icebp
mov
in
sbb
nop
addr16
cld
in
or
popa
mov
inc
jmp
ljmp
repz
mov
add
shrb
mov
hlt
pop
pop
and
ret
push
nop
enter
push
cmp
mov
jae
mov
jmp
jmp
out
rorb
push
cmpsl
cli
ficoms
lds
sub
dec
pop
push
or
dec
and
cwtl
icebp
movsb
and
mov
sub
mov
aad
test
adc
imul
vfrczss
cmp
mov
roll
and
and
fwait
mov
ja
mov
loopne
ret
mov
in
out
cs
pop
fnsave
adc
loop
inc
orb
in
sti
push
jg
test
push
jb
scas
in
scas
idiv
negb
mov
sub
test
ja
int
divl
in
lret
pop
ja
decb
jnp
std
inc
add
push
and
inc
adc
mov
fimull
int
xchg
movsl
lea
dec
sub
push
iret
sub
sbbl
sahf
sub
jl
sub
jno
push
jno
push
fsts
or
imul
cmp
push
lock
fs
arpl
mov
jb
push
ss
lds
pop
arpl
lods
adc
dec
xor
mov
dec
mov
stos
cmc
pop
xor
sub
iret
inc
int
jg
mov
addl
dec
or
cltd
and
cli
outsb
dec
aas
xchg
dec
cmp
fadd
in
sbb
in
mov
mov
sub
jg
xchg
cmp
imul
cmp
push
sbb
xor
in
dec
insb
jbe
or
rcpps
push
scas
jnp
lret
lock
mov
nop
repnz
sbb
dec
pop
daa
cmpsl
addr16
jnp
push
mov
xor
int
and
sbb
pop
fcmovne
testb
mov
mov
scas
mov
jno
or
gs
loopne
mov
shl
arpl
outsl
push
sub
in
aas
cmp
mov
test
call
out
pop
leave
out
ror
sub
jl
jmp
dec
dec
roll
jns
inc
push
cmp
lods
int3
mov
cs
and
mov
add
add
xchg
sbbb
leave
jp
xchg
and
push
or
test
lock
xchg
pop
sbb
xchg
mov
mov
testl
cmpsb
mov
pop
xchg
add
stos
jmp
mov
and
les
loopne
addr16
into
and
adc
fadds
out
popf
in
ret
inc
cli
jb
push
rcrl
and
loop
clc
pop
popa
in
jbe
rolb
sbb
packuswb
cmp
add
repnz
and
and
hlt
and
lcall
clc
lea
ljmp
add
ficoml
sbb
xor
popf
aas
inc
test
fnstenv
inc
sbb
packuswb
or
rclb
jl
pusha
mov
in
or
and
mov
mov
shr
xchg
xchg
aad
adc
fldt
dec
out
in
cmp
pop
mov
or
shl
fiadds
mov
mov
and
jge,pn
bound
xor
stos
mov
sbb
xlat
dec
popa
cmp
xchg
std
add
push
and
cs
outsl
shr
ja
cmc
lods
jbe
daa
fs
fcoms
stos
popa
add
push
cmc
sbb
jmp
inc
jg
dec
dec
jo
mov
add
mov
ret
roll
pop
xchg
sub
popa
outsb
xchg
adc
add
jmp
cmp
js
jno
filds
shl
mov
sub
ret
sub
mov
shll
cmp
or
fmul
das
or
and
movsb
lds
jns
pop
scas
loope
and
adc
out
cwtl
mov
pop
jp
mov
jne,pn
imul
pop
filds
push
stos
mov
sub
cwtl
adc
sahf
arpl
mov
repz
mov
inc
mov
lret
cmp
push
mov
mov
imul
int
sub
aam
nop
aam
jmp
push
push
fisttpl
jbe
push
repnz
dec
pop
es
loopne
pavgb
rcrb
mov
jns
test
stc
js
push
jbe
popf
or
aad
inc
in
add
lods
loope
std
xchg
xor
xor
jb
div
sbb
aad
sahf
popf
mov
push
shll
rorl
mov
nop
aaa
out
movsb
pop
cmp
push
inc
jge
cmc
icebp
mov
sbb
mov
pop
add
stc
xchg
lods
jmp
jne
loop
push
loope
xor
aaa
inc
hlt
mov
mov
and
mov
adc
stos
add
idivl
or
and
ret
xchg
inc
pop
jg
pop
dec
push
sbb
jg
mov
jmp
adc
jae
push
inc
popa
data16
in
mov
cwtl
add
adc
outsb
dec
aas
in
fnstcw
jp
pusha
movsl
sahf
rcrl
mov
lahf
jg
xchg
out
popf
push
insl
or
sarb
pop
icebp
scas
adc
sub
xchg
jmp
jnp
sbb
test
pop
arpl
adc
fsubrs
xchg
outsb
sub
scas
xor
rorl
or
jge
inc
add
dec
jb
mov
add
jge
sbb
fstpt
stc
es
in
jne
lret
pop
adc
dec
jg
xchg
or
sub
pop
cbtw
es
insb
pop
or
rep
mov
ljmp
xor
in
xchg
call
dec
aad
dec
xchg
xchg
sbb
ret
push
sbb
addl
mov
aam
pop
dec
loopne
repz
mov
ds
push
mov
jecxz
push
xchg
or
clc
jg
inc
rorb
dec
xchg
xchg
push
test
xchg
cltd
mov
push
push
adc
sarb
dec
test
les
in
pop
pusha
pusha
jb
lods
push
ljmp
mov
imul
dec
stos
fst
mov
mov
mov
cmpsb
scas
sti
outsl
and
loope
jnp
ds
lret
sub
jmp
mov
add
mov
mulb
xchg
fsubl
rcrb
add
xchg
adc
imulb
loopne
xchg
mov
lcall
fisttpl
xor
insl
jnp
mov
jns
in
insb
cwtl
pop
add
les
cmpsl
pop
cmpsb
cmp
ret
movsb
inc
je
sti
sub
fcom
stos
push
push
push
fisubs
xor
xor
xor
push
push
push
pop
aad
pop
xor
or
fbstp
popa
into
jnp
add
test
mov
nop
lock
movsl
arpl
pop
lret
in
mov
xor
inc
dec
cmp
dec
or
mov
sub
fldt
mov
call
imul
sbb
sub
std
push
inc
out
int
push
inc
cmc
push
mov
sahf
loope
bound
sbb
xchg
xor
scas
or
inc
cs
in
lods
xor
repnz
call
jns
jbe
sub
dec
in
lea
loope
xor
mov
cli
jmp
std
push
jo
jle
mov
dec
das
mov
and
cmp
adc
daa
loopne
push
andb
and
jmp
decl
lods
xor
insl
pushf
pop
test
roll
push
pop
and
push
xchg
mov
sub
jns
sub
rep
outsl
fwait
pop
mov
jb
popa
and
and
mov
dec
adcl
std
popa
clc
adc
pop
stos
adc
xchg
jns
inc
mov
cmpsl
mov
xlat
push
lods
std
gs
loop
mov
bound
fildl
and
inc
or
scas
ficompl
mov
or
cmp
leave
mov
jp
push
cs
mov
nop
fisubs
pop
or
dec
pop
mov
push
sub
fstl
dec
or
sbb
sub
testb
push
xlat
mov
mov
lods
add
fmuls
mov
call
lcall
shrl
jbe
inc
push
pop
jecxz
or
sbb
pop
iret
inc
icebp
mov
mov
cmp
stos
push
push
jg
adc
lcall
ja
pop
subb
repnz
ret
pushf
fwait
xchg
ficoms
test
push
or
pop
mov
movsb
push
sbb
xchg
sub
cmpl
popl
inc
xchg
adc
out
repz
jno
jecxz
or
push
leave
pop
pop
mov
sbb
gs
loop
jne
roll
mov
fstps
mov
ss
add
xor
cmp
cmp
sbbb
dec
cld
adc
cld
lret
imul
push
lret
mov
loopne
scas
dec
sahf
adc
push
adc
enter
add
or
jge
mov
mov
call
dec
repnz
pop
dec
xchg
movsl
sub
int
jbe
inc
or
pop
adc
xchg
xchg
mov
jge
pop
in
inc
sti
cmp
aas
xchg
sub
xchg
aam
cmpl
dec
inc
inc
in
inc
fisttpl
fldt
and
out
arpl
push
add
inc
sbb
mov
jno
or
push
aad
sub
out
fbstp
jecxz
mov
pop
cwtl
mov
fistpl
cltd
test
dec
sub
ret
mov
and
mov
repnz
imul
insl
dec
call
sub
imul
int3
sub
loope
inc
test
dec
sbb
out
add
cmp
test
add
outsb
iret
pop
daa
int3
xchg
adc
addr16
or
jl
or
jl
out
in
ret
pushf
push
bound
adc
pop
sub
mov
mov
lret
push
xor
nop
aaa
cli
lret
mov
popa
mov
lcall
leave
sbb
push
adc
shlb
xchg
pop
js
pop
sbb
lahf
cs
das
add
xor
lods
in
sub
arpl
in
xor
xlat
shl
push
jnp
ljmp
mov
adc
adc
sub
scas
js
nop
loop
adcl
jno
fistps
jne
in
fisubs
dec
ja
cmpsl
cli
sti
inc
mov
sub
shlb
sbb
mov
jl
adc
mov
sub
jne
cmp
add
test
ds
or
jg
and
or
jl
sub
sahf
xchg
in
cmpsb
jns
movsl
stc
fsubl
mov
decb
aad
dec
inc
xchg
dec
bnd
add
int
incl
aaa
fsubr
fs
call
mov
jnp
mov
movntps
fwait
push
sub
lods
iret
push
cmp
fstpl
push
pushl
dec
inc
push
fwait
repz
push
sub
and
test
pop
cs
mov
xor
jg
sub
mov
stc
sti
inc
mov
mov
dec
not
xor
mov
adc
pop
aaa
sti
repz
jecxz
lea
ret
nop
jle
aas
pop
ret
es
ret
into
xor
fiaddl
mov
mov
js
pop
push
gs
mov
push
imul
xchg
js
push
pop
mov
ret
push
xchg
lods
inc
enter
lahf
pop
hlt
mov
and
cmp
mov
xor
or
jmp
or
mov
scas
mov
adc
es
popa
adc
mov
inc
js
call
lret
incb
or
mov
iret
aaa
lcall
sbb
push
cmp
mov
aaa
mov
sbb
pusha
pop
adc
push
mov
aad
and
imul
jle
push
and
test
rclb
jmp
inc
cmp
inc
cwtl
insl
jg
dec
fildl
mov
mov
outsb
inc
out
fwait
mov
xor
in
jns
pop
or
lock
or
jmp
jnp
sbb
repz
add
lock
inc
dec
mov
leave
push
sti
xor
pop
rorb
mov
leave
or
and
jno
nop
in
ja
xor
mov
jp
shrb
out
addl
jmp
or
hlt
loope
test
jb
sub
add
stc
mov
xlat
dec
push
sub
adc
push
stos
shl
jnp
repz
cmp
xchg
and
test
mov
outsl
and
sub
aas
pop
inc
jmp
pushf
add
imul
ror
aam
push
mov
dec
xchg
daa
shrb
pop
or
bound
out
jno
out
mov
xor
cmp
xchg
jnp
mov
jo
mov
into
ret
push
test
xchg
sbb
or
mov
ds
insb
cli
dec
or
inc
xchg
rclb
jmp
enter
inc
test
pop
cltd
and
outsl
cmp
jp
lahf
ljmp
sbb
mov
sbb
movsb
loop
cltd
movsl
dec
aam
sub
mov
aas
sub
adc
push
addr16
adc
xchg
lahf
or
mov
jmp
ljmp
push
jg
xchg
imul
sbb
lret
xchg
scas
xor
cmp
xchg
icebp
mov
and
add
add
outsl
and
lods
and
pop
jbe
scas
and
xorb
stos
push
cmpsb
stos
cmp
int
and
ficompl
push
test
sub
xor
clc
pop
sub
cmc
cmpsb
popf
fmuls
sub
xorb
mov
cwtl
xchg
ss
int3
pop
xchg
and
lods
mov
xor
ret
dec
mov
mov
xchg
push
jecxz
mov
or
and
or
insb
jle
xor
clc
ljmp
push
lret
cmpsb
hlt
icebp
rcrb
sarb
lret
sbb
fs
fucom
push
dec
lret
bound
xor
pop
int
cld
fmul
sbb
lds
jmp
in
div
adc
pop
sbb
mov
or
adc
xchg
jbe
leave
test
fcompl
pop
pop
and
negb
cs
sar
pop
xor
lods
insb
nop
add
and
push
sbb
or
js
xchg
add
mov
lock
jge
rclb
sti
pop
pop
xchg
lahf
xor
jle
push
stc
push
movsb
icebp
ljmp
jp
daa
push
pushf
and
xchg
jmp
mov
out
mov
mov
stc
mov
dec
lds
or
jbe
or
add
mov
xlat
add
push
popf
fiaddl
mov
mov
ja
mov
push
jl
dec
inc
or
mov
scas
scas
sbb
jb
or
adc
sbb
inc
ret
inc
jecxz
sub
repnz
push
or
pushl
das
jb
dec
mov
call
sbbl
movsb
mov
in
and
pop
or
sub
btr
sahf
sub
inc
clc
or
call
out
icebp
push
cmp
pop
mov
dec
push
and
daa
dec
cmpl
xchg
sbb
jnp
adcl
ja
mov
into
push
out
addr16
add
pop
xchg
shll
add
lret
push
cmp
stos
test
ficoml
and
pop
cld
xchg
jecxz
test
lahf
jns
js
sub
fcoms
dec
repz
insb
xor
ljmp
cltd
mov
dec
lcall
inc
inc
inc
mov
leave
fmull
dec
shrb
shll
add
pusha
testb
xor
pop
and
shrb
mov
pop
sub
add
add
or
jge,pt
pusha
std
popa
lea
lock
shll
in
dec
scas
push
xchg
pop
fdivrs
arpl
inc
shlb
pop
test
icebp
rcl
std
inc
cmp
sub
mov
adcb
hlt
rolb
sbb
pop
mov
xchg
push
cmp
jae
sub
pop
lods
fistpl
sub
scas
sub
and
jno
inc
lods
fisttpl
push
outsb
push
into
adc
adcl
jno
call
loope
push
gs
jo
and
push
fildl
dec
ljmp
xchg
je
jge
jns
xchg
repz
das
dec
inc
cmpsb
mov
push
push
scas
add
leave
inc
dec
fsubr
mov
addr16
enter
adc
xchg
mov
mov
xchg
push
push
dec
fldl
mov
decb
sarl
push
xchg
or
inc
loope
loope
dec
outsl
pop
fsubp
sbb
rolb
cwtl
fcmovb
insb
mov
and
aam
ret
ret
xor
jmp
cli
ja
or
inc
adc
mov
or
mov
or
fcoml
bound
icebp
ja
fs
jb
xor
pop
mov
pop
bound
aad
mov
ret
mov
out
mov
adc
mov
inc
movl
or
pop
mov
aam
jb
dec
not
cmovns
inc
pushl
cmpsb
pop
fwait
das
hlt
xchg
or
outsl
mov
mov
mov
dec
push
insb
pop
adc
mov
inc
pop
xchg
jg
inc
dec
pushf
pop
mov
ds
or
lods
frstor
xchg
outsl
mov
cmpsb
inc
addb
jbe
out
mov
rorl
xor
add
adc
test
fiadds
and
pop
xor
mov
je
loope
and
xor
jbe
stos
leave
pop
jb
cmpb
fldl
cmp
loop
xor
push
je
cmp
add
pop
mov
or
les
hlt
xchg
push
mov
jmp
arpl
jp
les
xor
lock
push
jecxz
sbb
test
fidivl
mov
dec
sti
xor
scas
fsubrs
mov
xchg
cmp
cmpsl
add
jle
jp
mov
dec
ds
fldcw
ja
scas
xchg
in
stc
mov
lds
xlat
add
xlat
pop
out
cmc
and
cs
in
mov
pop
fisubs
mov
cwtl
imull
aaa
push
sbb
shll
push
pop
fwait
pop
adc
enter
add
loop
adc
push
add
sub
sbb
int
lret
jg
lcall
mov
enter
fdivp
movsl
dec
loop
jmp
mov
fwait
mov
adc
out
push
leave
roll
adc
mov
lods
dec
lahf
xor
leave
out
push
inc
add
out
int
orl
je
data16
fists
mov
lret
jo
jns
adc
mov
push
jns
xor
fidivrs
push
and
das
pushf
clc
xor
sbb
sbb
sub
sti
stc
jo
scas
push
scas
loop
ss
sub
insb
xchg
jle
push
cmp
pusha
jns
cwtl
mov
dec
dec
xor
dec
sbb
jge
out
sub
add
add
jne
xor
jge
shlb
stos
sti
stos
lcall
mov
cmp
stos
mov
xor
data16
aam
mov
test
sub
or
cmovne
mov
or
stos
adc
push
xchg
mov
arpl
and
fistpll
mov
cmp
outsl
gs
inc
aaa
fwait
xchg
or
mov
mov
jae
hlt
xchg
cs
int3
out
adc
loop
aaa
cmc
adc
lahf
jno
jbe
adc
pop
sbb
jb
add
mov
xchg
int3
pop
aam
adc
es
lcall
add
repnz
into
aas
dec
cs
fisubs
jle
clc
inc
xor
ret
jge
imul
dec
jne
cmpsb
stc
xor
scas
stos
mov
jmp
mov
mov
outsb
insl
mov
push
adc
lcall
push
add
or
xor
add
add
scas
bswap
mov
mov
fsubl
xor
jne
xor
xchg
pop
jg
mov
ss
loope
mov
icebp
pop
lds
icebp
fwait
clc
cmp
fwait
in
daa
inc
or
dec
addl
mov
imul
xchg
mov
je
or
inc
add
push
je
jl
mov
push
sub
push
aaa
adc
xchg
pop
adc
mov
notl
fwait
orb
jge
fmull
test
pop
lods
adc
or
test
sbb
imul
rolb
or
aam
fsubp
inc
sti
lret
pop
inc
add
mov
dec
xchg
shll
pop
mov
and
cli
outsl
loop
ds
movsb
add
push
mov
mov
push
lcall
cvtpi2ps
dec
pop
mov
shll
push
xchg
lods
mov
sarb
movsl
cmpsl
jno
leave
lcall
sahf
lea
into
xchg
mov
mov
dec
das
mov
or
adc
sub
ss
mov
cltd
loop
xor
xchg
jp
or
mov
test
mov
sub
pushf
aaa
int
jmp
outsl
shll
test
jns
mov
in
roll
add
insl
daa
loop
adc
jg
rcrb
dec
in
sbb
xor
cmpb
xchg
sub
mov
jmp
xchg
cmp
mov
movsl
fsts
mov
mov
icebp
ret
imul
js
and
sub
jns
cld
push
call
fldl
aas
mov
inc
and
cmpsl
int
or
xchg
dec
dec
jge
call
out
push
or
insl
add
dec
xor
jbe
add
pop
bound
lock
imul
cmpsl
cs
fsub
cmp
cwtl
test
add
lods
mov
out
cmp
ret
popf
mov
adc
xor
mov
insl
add
dec
mov
lcall
jne
cmp
sbb
sbb
pop
ljmp
loope
js
mov
incl
dec
sub
outsl
adc
xchg
fisttpl
mull
mull
sub
shrl
cmp
es
adc
sub
stos
adc
push
mov
adc
sbb
xor
int
jbe
fwait
jo
xlat
test
xor
dec
push
mov
xor
push
andb
xchg
bound
adc
in
addb
rorl
xorl
fdivl
xchg
xchg
jno
arpl
xchg
jns
lret
adc
cmp
gs
cli
shlb
loopne
push
loope
jbe
fisttpll
jmp
pop
arpl
sbb
mov
testb
jle
inc
je
ror
rcl
seto
mov
insl
jl
out
movb
mov
sub
jne
or
sbb
cltd
into
add
and
inc
stc
jbe
movsb
popa
cmp
or
cli
insl
lahf
cmp
sub
fdivrs
sbbl
pcmpeqb
enter
std
xchg
or
adc
fsubs
push
out
shl
cld
and
inc
dec
inc
loop
pop
pop
dec
fstpl
xor
lcall
or
sbbl
push
fisttps
mov
out
adc
popa
out
xchg
jb
movsb
or
pushf
and
sar
xchg
lcall
shll
ret
aam
or
cmc
lret
cmp
jns
fists
lods
sbb
dec
xchg
leave
nop
mov
rolb
or
mov
xor
and
and
add
cmc
push
pop
push
idivb
ret
imul
xchg
push
pop
mov
ds
daa
adc
xor
sar
mov
sub
iret
ret
js
and
mov
ret
mov
fidivl
iret
add
mov
xchg
das
xchg
sbb
mov
push
lcall
orl
cmp
jmp
fwait
outsb
mov
pop
clc
insb
cltd
mov
or
lea
std
xchg
push
int3
xor
sbb
jb
mov
mov
loope
test
adc
cmp
dec
out
push
mov
test
inc
add
outsl
mov
sbb
outsb
sbb
pop
decl
dec
in
add
sbb
pop
addr16
lea
lret
enter
sahf
mov
mov
lods
rorl
loop
movsl
mov
or
ljmp
sti
xchg
xor
mov
xorl
xchg
sub
gs
push
push
cmp
mov
pop
lret
lret
repz
scas
jo
aaa
mov
idivb
sub
repnz
jecxz
call
cld
cmp
push
test
mov
inc
inc
notl
dec
test
mov
xorl
xchg
test
insb
pop
xorb
mov
mov
lret
xchg
hlt
lret
mov
inc
mov
or
pop
bound
xor
cwtl
sbb
cmp
fwait
mov
popa
negl
sbb
jno
adc
pop
xchg
fisubrl
and
sbb
sbb
in
test
fistps
int3
ja
mov
loope
pusha
xor
mov
pop
loop
loop
js
inc
lret
jbe
rolb
xor
cmc
inc
addl
cmp
fisttpll
js
mov
cmp
add
fnsave
in
repnz
xlat
cmp
outsl
xlat
lock
mov
inc
sbb
push
adc
test
mov
leave
sub
out
mov
rcll
sahf
lret
call
mov
gs
pushf
pop
sahf
test
aam
js
shrd
cmp
stc
and
test
sbb
lods
aad
mov
add
sub
push
iret
popa
fdivs
sub
repz
bnd
push
mov
dec
clc
incb
stos
mov
sbb
mov
mov
inc
jns
pop
das
pop
int3
scas
fsubs
and
or
aad
enter
cmp
jae
mov
stos
mov
lret
in
clc
mov
jge
icebp
xor
testl
fimuls
hlt
fcoms
jg
leave
xchg
add
in
mov
mov
inc
and
dec
lahf
jnp
mov
push
pop
inc
mov
daa
sti
fstps
pop
xor
insl
push
add
cwtl
add
jl
inc
sti
movsb
fiaddl
inc
add
js
sub
jl
adc
mov
out
push
xchg
xlat
je
test
cwtl
jecxz
cmpb
shlb
mov
and
loope
jl
iret
push
fs
clc
push
out
sbb
inc
jb
test
andb
push
cld
call
pop
pop
popf
inc
jno
add
mov
cmp
xlat
xchg
adc
lods
fwait
adc
fisubrs
shl
in
cmp
daa
add
repnz
fs
cmpsl
xchg
enter
das
mov
into
jp
je
adc
inc
pop
jge
fiadds
mov
imul
add
insl
inc
decb
mov
ror
mov
sbb
pop
xor
and
dec
pop
sbb
mov
cli
imul
push
ret
jmp
imul
mov
pop
movsb
popf
pusha
inc
mov
call
bound
mov
add
ret
popf
xchg
lds
add
movsb
cmp
frstor
xchg
jl
divl
sub
dec
mov
iret
push
clc
mov
and
mov
sbb
cmp
and
inc
xor
rcl
ret
imull
loopw
push
inc
aas
pop
cmp
add
sub
scas
dec
mov
ret
push
data16
xor
movsb
arpl
adc
shl
cltd
xchg
shl
icebp
xchg
ret
xchg
arpl
shlb
jle
or
int3
std
push
incl
add
push
int
mov
sub
imul
mov
inc
pusha
lcall
mov
in
cmpsl
mov
arpl
jo
pop
cmpsl
pop
cli
out
and
mov
faddl
pop
dec
mov
push
xor
fs
mov
mov
xchg
dec
cwtl
loope
xor
and
pushf
xchg
add
lcall
cmp
lock
lods
sub
test
popa
popf
or
dec
sbbb
mov
lahf
cmpsb
cli
xor
leave
and
aaa
cmp
shrl
movsl
insb
mov
inc
scas
aas
push
xor
lahf
dec
sbb
lods
adc
aaa
sti
mov
jnp
push
xchg
add
std
hlt
xor
repnz
les
or
xchg
and
daa
movsb
leave
stc
mov
hlt
outsl
mov
std
lods
push
jmp
cltd
lcall
sub
shrl
and
cmp
cli
mov
aad
repz
jp
jge
adc
xchg
movsb
xchg
stos
inc
andb
mov
aam
xor
ljmp
hlt
cmp
cwtl
cmp
je
daa
cs
aas
mov
xor
add
cmpsl
adc
xor
andb
mov
jne
dec
xor
cltd
xchg
ret
divl
aam
fbld
inc
lret
pop
je
test
mov
or
sub
jb
dec
mov
insb
fstpl
pop
and
jle
outsb
js
sarl
pop
aaa
rolb
push
push
daa
sbb
test
je
jmp
jmp
lcall
mov
fs
mov
jmp
xchg
mov
jbe
mov
out
dec
outsb
lock
lahf
icebp
lods
push
leave
bound
mov
std
mov
and
stos
mov
mov
lcall
cmp
je
and
test
push
stos
mov
lea
inc
test
xchg
js
adc
push
cmp
retw
fnsave
cli
inc
bound
jp
iret
inc
addb
fidivl
xlat
jbe
lret
fstps
bound
xor
outsl
adc
mov
xchg
xor
fsubrp
sbb
add
jo
fwait
or
mov
imul
fdiv
nop
cmp
dec
fcoml
bound
outsb
sub
jae
sbb
push
rcrb
pop
adc
inc
mov
jg
sub
xchg
jl
xchg
notl
push
jle
mov
fwait
out
dec
inc
xor
sbb
mov
cwtl
push
sahf
inc
mov
in
mov
mov
inc
js
out
sbb
bound
jnp
cmpsl
adc
sahf
stos
dec
adc
sbb
mov
xchg
xor
jg
xchg
ficoml
xchg
in
pushf
and
movsb
stos
int3
test
mov
mov
into
ljmp
shrb
cwtl
aaa
push
jecxz
pop
lcall
sarl
inc
sub
adc
sbb
cmpsl
add
fidivrl
pop
int
pop
fdivp
mov
dec
sahf
cmp
movsb
push
sub
imul
push
in
sub
mov
jbe
xchg
iret
stos
stos
imul
inc
call
cmp
jecxz
into
adc
pop
je
pop
or
cltd
xchg
mov
and
cli
xor
and
sarb
hlt
adc
jo
push
pop
xor
xchg
test
aam
bound
cmp
sbb
add
mov
dec
test
mov
mov
pop
mov
mov
xor
mov
or
sbb
aam
add
es
mov
pop
inc
stc
xchg
push
mov
add
fists
pop
jmp
adc
inc
fimull
mov
mov
arpl
fwait
pop
cmp
xchg
stos
sarl
jb
out
sahf
push
icebp
insl
hlt
inc
push
je
xchg
shll
fimull
cld
jecxz
jbe
push
loop
mov
jmp
or
js
mov
dec
decl
sbb
sbb
xor
sub
addr16
jno
paddw
fistpl
loope
test
sarb
out
ss
jae
push
dec
stos
xchg
push
or
push
push
lahf
les
movsb
pop
jae
pop
dec
pushf
pop
test
mov
ljmp
pushf
rol
in
rcl
inc
insb
ja
je
aad
jbe
into
in
inc
mov
xchg
es
imul
cmp
clc
xchg
pushf
inc
loopne
in
mov
adc
gs
xor
mov
or
in
xchg
loopne
mov
adc
hlt
inc
jl
dec
pop
pop
dec
inc
popa
data16
in
es
pop
in
xor
push
cli
mov
push
cmc
pop
pop
jae
lcall
jg
cltd
inc
sbb
mov
jb
pusha
push
xchg
fdivrp
cmpsl
faddl
test
xchg
lods
stos
xchg
lret
cmp
fiadds
inc
imulb
das
sub
inc
test
test
adc
adc
iret
test
xchg
pop
cmc
mov
imul
enter
lahf
daa
mov
ss
xchg
imul
roll
je
xchg
jmp
push
pop
add
je
shll
and
cli
lret
pop
mov
stos
lock
and
inc
pop
mov
xor
fisubl
icebp
mov
sahf
or
xchg
jno
outsb
adc
mov
push
sbb
lret
cmc
mov
repnz
cld
rcrb
xor
rorb
sub
lcall
push
xchg
xor
jo
mov
xchg
das
xchg
addb
cmp
dec
inc
cmp
sbb
arpl
pop
xor
lock
mov
jl
mov
jno
cld
sub
push
rcl
jmp
adc
imulb
mov
cwtl
jmp
mov
mov
in
and
jo
sbb
pop
in
push
add
dec
das
dec
loopne
xlat
ficomps
call
xor
pusha
movsl
lahf
sub
sbb
inc
xor
push
and
fistl
out
adc
rcrl
or
repz
push
mov
in
add
sbb
sbb
lahf
mov
ret
mov
data16
clc
push
cmp
jb
add
lahf
add
rolb
or
push
ret
lret
enter
mov
insb
loop
add
cmpsl
dec
xchg
and
inc
stos
push
xchg
pop
inc
jle
add
mov
sbb
jl
negb
loope
jns
sub
dec
rclb
push
adc
dec
ljmp
idivb
outsb
fwait
inc
daa
mov
bound
testl
ss
push
xchg
sub
and
imul
mov
sub
fnstcw
sbb
mov
mov
or
mov
jns
adc
cltd
repz
paddw
mov
add
rcrb
mov
sbb
inc
in
inc
cmc
loopne
inc
or
sbb
daa
lret
gs
clc
call
cmp
ret
sub
hlt
dec
fsubs
jmp
sbb
inc
arpl
cmp
dec
popa
div
cmp
xchg
fsubp
popf
stos
dec
lock
out
hlt
push
loope
mov
push
pusha
daa
mov
inc
cmp
testl
jae
jne
lahf
cmp
add
fstl
jb
aaa
mov
dec
pop
adc
jmp
out
popa
stos
mov
in
mov
xchg
into
scas
in
rcl
pop
dec
mov
frstor
fsubp
mov
pmaddwd
aam
inc
andl
push
jo
negb
test
pop
inc
xor
adc
sbb
pop
sbb
cmc
sub
int3
rcrl
dec
adcb
push
mov
sbb
je
mov
and
int3
cmp
leave
popa
jnp
pop
pop
mov
xor
mov
mulb
jge
inc
adc
xchg
and
add
push
lret
popa
push
xchg
or
push
push
and
mov
dec
adc
in
mov
cmpl
push
xchg
jge
test
dec
xchg
outsb
mov
add
mov
xchg
stc
scas
sub
test
sub
mov
xor
mov
pop
outsb
jo
loop
push
iret
cmp
rol
jmp
sahf
insb
sub
or
fdivrs
mov
or
roll
pop
jb
lret
sbb
test
sub
test
pop
int3
dec
sub
or
fwait
lret
pop
jo
dec
insl
jle
ja
loope
lock
pop
push
sbb
repz
hlt
inc
adc
daa
xor
ss
or
xchg
xchg
movsl
xchg
repz
sahf
pop
mov
sub
ja
xlat
sub
cmpsl
or
adc
loope
test
jo
rol
add
sbb
push
push
sarl
or
xchg
and
scas
or
ss
add
push
rcl
mov
ret
jno
aad
into
jp
clc
jecxz
int3
jne
adc
mov
and
push
jmp
daa
aad
push
cmpsl
xor
inc
in
cmp
ljmp
xchg
aas
or
bound
mov
test
loop
testl
into
mov
lods
outsl
pop
xor
jns
addr16
test
shll
push
fwait
pop
jmp
lahf
shrl
aaa
loop
jns
cmpb
xchg
xchg
call
cmpsb
adc
mov
sbb
pop
xchg
lds
and
adc
lret
jle
xchg
xor
xor
sub
cmp
shlb
dec
pushf
add
or
aas
mov
dec
das
dec
in
cmp
cld
ds
push
jge
shl
dec
into
and
out
andb
pop
mov
insl
decb
add
cmc
or
shlb
push
mov
inc
repz
std
adc
xor
jns
sbb
xor
sbb
popa
cmp
movsl
push
dec
sbb
push
aas
adc
imul
out
cli
daa
mov
mov
lret
xchg
xchg
lods
inc
mov
in
and
daa
test
jmp
mov
adc
sahf
pusha
jbe
in
loope
inc
sbb
mov
aad
test
push
adc
cltd
imul
add
cwtl
mov
movsl
cmp
adc
xor
or
mov
stos
jecxz
push
cmp
fsub
in
dec
sahf
in
inc
cmpsb
clc
clc
outsb
xchg
loopne
adc
mov
adc
ds
out
jp
push
out
sbb
orl
test
clc
cmp
jmp
jae
xchg
push
test
fisubrl
hlt
mov
loop
or
or
add
cli
ljmp
sarb
mov
adc
mov
add
mov
cwtl
or
push
mov
daa
clc
stos
push
mov
xchg
mov
inc
jo
adc
sbb
fiadds
xor
es
lcall
jae
stc
dec
mov
scas
jnp
imul
pushf
cmp
inc
in
arpl
push
fcmovnbe
or
jge
call
leave
push
punpckhdq
outsl
insb
in
test
push
loopne
push
pop
sahf
stc
shlb
aad
dec
mov
mov
jmp
lret
xor
mov
cmp
push
mov
outsb
mov
scas
dec
fdivrl
mov
inc
lret
mov
hlt
and
add
jl
or
stos
clc
icebp
jbe
adc
hlt
sub
out
jle
ret
cld
stc
fiaddl
rcl
fstps
fcoml
cmp
cwtl
dec
icebp
inc
dec
pop
mulb
adc
xor
inc
push
and
outsl
test
arpl
xchg
xor
xchg
movb
push
stos
cld
xlat
test
jg
push
lods
mov
push
dec
or
xor
mov
inc
xchg
pop
inc
sbb
jg
mov
xor
aad
cli
shll
imul
popl
sbb
add
cmp
outsl
xor
jo
cmp
in
push
adc
int3
xchg
adc
movsl
ljmp
into
xchg
jne
bound
inc
lds
ljmp
ret
push
lcallw
into
jae
scas
sarb
xor
xor
push
cmpsl
neg
sub
and
xchg
movsl
inc
xchg
sub
sbb
pop
das
lock
xchg
js
pop
or
xchg
xor
xor
cmp
jae
repz
push
enter
fwait
stos
inc
or
dec
bound
ljmp
or
jmp
out
pop
stc
fmull
inc
ret
mov
fists
bound
mov
arpl
pop
mov
fildl
movb
pop
scas
jle
test
add
adc
cmp
push
xor
push
sub
jl
lahf
pop
or
aad
fwait
into
call
inc
pop
xchg
xchg
pusha
ficompl
daa
mov
xlat
out
push
or
mov
inc
rclb
popa
jbe
adcb
cmp
xor
inc
mov
cs
aam
push
and
mov
xchg
aam
mov
cmp
stos
outsl
inc
push
and
out
and
aas
stc
pop
sti
push
je
sub
sbb
pop
cwtl
pop
sub
imul
mov
in
xchg
sbb
in
xchg
jmp
lds
cmc
and
pop
fs
test
sbb
xor
cmp
add
fucomp
or
sub
xchg
xor
outsb
repnz
clc
popa
or
xor
pop
push
out
inc
daa
xchg
sub
inc
cmp
shll
gs
pop
je
cmp
repnz
mov
scas
xchg
scas
dec
pop
sbb
sbb
notb
sub
sub
mov
ret
jne
jmp
inc
in
clc
xlat
push
aaa
add
popa
jo
sarl
xchg
stos
jnp
jecxz
sub
das
jl
or
sti
rcrb
neg
repnz
xor
hlt
idiv
pop
test
jmp
mov
and
mov
fsubrl
mov
sub
dec
adc
mov
pop
outsb
jecxz
rorb
jns
fucomi
mov
and
inc
adc
jmp
stos
xlat
cmpsb
repz
adc
inc
test
icebp
xchg
test
fildl
ret
add
pop
setge
inc
ret
dec
sub
add
xorb
jge
cmp
or
adc
rclb
sub
jmp
mov
push
mov
mov
stc
and
sbb
dec
or
cmp
xchg
mov
enter
adc
pop
push
stc
lea
xor
popl
imul
sub
add
adc
movsb
in
out
popa
sbb
shlb
test
frstor
fwait
into
ror
popf
cmp
mov
sbb
outsl
dec
repz
in
out
movlhps
ret
adc
xchg
push
mov
fwait
sub
lea
iret
addr16
add
dec
movsl
add
or
cmc
or
mov
enter
mov
aaa
mov
inc
test
lcall
clc
lahf
jmp
out
repnz
ror
mov
fdiv
pop
repnz
jae
mov
xchg
fadds
sarb
lock
jl
fidivl
jmp
movsl
andl
scas
mull
lret
out
in
push
mov
add
imull
or
stos
xchg
js
mov
pop
testb
or
xlat
fs
push
add
mov
sbb
lods
xchg
pop
rolb
and
xor
jge
dec
jecxz
sub
je
jmp
mov
loopne
insb
notl
xor
pop
xor
test
adc
pusha
cmp
xor
lret
push
out
enter
mov
mov
pop
push
enter
ja
jno
pop
mov
out
or
adc
mov
dec
jg
mov
mov
xchg
psllq
add
sbb
popf
mov
jb
pop
fwait
cmp
xchg
mov
in
adc
dec
shrb
dec
or
mov
jecxz
cwtl
stc
std
add
arpl
xchg
and
or
or
push
sti
jp
cmp
fisubs
lods
mov
and
adc
into
inc
shll
enter
or
rcr
cs
inc
inc
sbb
xor
mov
mov
fsts
test
sbbb
enter
fidivl
bound
es
fisttps
and
jg
jno
scas
inc
cmc
and
fsts
dec
push
mov
add
cld
dec
loop
jo
push
lods
cmc
aad
sahf
mov
iret
sbb
or
inc
je
sbb
and
stos
dec
adcw
jg
sbb
dec
test
aad
loop
fst
push
jecxz
mov
fnstsw
aas
mov
cs
push
cmp
pop
cli
sub
cmpsl
lret
inc
mov
lods
cmp
mov
dec
cli
adcl
and
pop
push
sti
lret
cmpsb
inc
outsb
xor
popf
push
pushl
push
dec
mov
mov
inc
bound
aad
shlb
mov
push
ja
sbb
push
sahf
nop
cmp
jl
mov
or
mov
and
inc
push
popf
mov
cmc
mov
js
or
cld
cmp
add
push
sbb
push
loope
sbb
lock
hlt
xor
jne
xor
aaa
mov
add
cmovle
lret
out
xlat
add
mov
in
fldt
gs
scas
mov
lock
jp
add
scas
incl
scas
sarb
popa
fdivrl
adc
add
mov
cmp
sbb
ror
inc
inc
sub
fbstp
jnp
push
pop
iret
mov
shlb
sbb
dec
cmp
aaa
scas
xor
and
loope
sbb
sar
xchg
xchg
add
jnp
mov
mov
push
subl
imul
add
jg
fadds
push
test
adc
mov
adc
cmp
push
rep
mov
pop
cli
aad
stos
add
inc
in
push
mov
pop
push
xchg
iret
pop
cmp
mov
xor
add
iret
push
xchg
mov
fisubrl
xchg
cmpsb
insb
test
cmovno
aas
fisttps
jns
sbb
sbb
mov
jl
mov
scas
call
popf
inc
jp
jg
fwait
mov
pusha
repnz
cmp
jb
mov
xlat
pop
xor
pop
mov
xorl
sbb
outsb
repz
enter
mov
ss
cmp
jbe
test
in
mov
or
sti
mov
push
jno
xchg
shrl
pop
int
or
lock
mov
jle
js
lock
or
xchg
xor
xor
lods
jns
jne
and
fldcw
pop
addr16
jo
add
xchg
mov
ret
faddp
fisubl
or
jo
aaa
xchg
idivb
sbb
lods
dec
push
pop
negl
jbe
sub
cmp
int3
or
arpl
adc
pop
inc
das
lods
jmp
shll
adc
mov
rcrb
or
add
test
dec
shll
jne
and
sub
addr16
mov
lock
loopne
jno
roll
push
cmp
test
incl
dec
out
fistps
jns
adc
fs
add
lea
insb
cmpsb
cmpsb
or
loopne
xchg
es
jo
push
enter
lret
xor
scas
jmp
mov
jmp
int3
movsl
cmp
out
dec
or
out
or
leave
mov
mov
xor
in
xchg
and
adc
mov
and
repnz
cmpsb
dec
mov
popf
push
cmp
jns
lea
xchg
jecxz
mov
jo
nop
pop
icebp
ss
push
scas
lahf
cs
or
dec
flds
test
and
ficomps
pop
into
xchg
xlat
xchg
mov
lret
mov
add
push
in
aaa
mov
push
or
add
shlb
sahf
fwait
lret
dec
fwait
sti
sub
push
cld
xchg
dec
outsb
jl
addb
sub
popa
push
ljmp
add
out
cmpsl
mov
and
mov
or
fidivrl
mov
pop
sbb
orl
insb
aaa
mov
adcl
mov
cmp
sub
mov
mov
clc
addr16
xor
sub
xor
mov
jp
push
push
cmp
lcall
sti
cmp
mov
into
xlat
cltd
mov
imul
push
jg
popl
pop
arpl
cltd
jl
jo
out
loope
cli
adc
lret
pop
sbb
dec
and
push
add
es
add
sub
cmp
cmp
into
sahf
call
sahf
mov
dec
leave
lret
dec
jle
addl
pop
mov
popf
dec
pushf
and
sahf
push
or
daa
mov
fs
ret
leave
shll
and
aaa
cld
mov
xor
jp
bound
xchg
les
pop
and
aas
mov
mov
pusha
fldcw
aam
dec
xchg
popf
icebp
xchg
add
mov
mov
leave
popf
lock
nop
cli
out
mov
cmp
bound
mov
add
iret
pop
ja
adc
sbb
cld
mov
mov
push
push
add
mov
xor
leave
push
daa
dec
xchg
push
push
cmp
dec
cwtl
cmp
sub
insb
scas
push
jle
cmp
jmp
pop
add
outsb
push
mov
arpl
jecxz
hlt
inc
pushf
jbe
out
push
and
cltd
fldt
cmovno
and
ret
aad
stos
test
adc
inc
insb
mov
sbb
or
mov
pop
js
mov
jmp
popa
iret
stc
int
add
xchg
cltd
jle
sub
or
fs
mov
cmp
cmpl
scas
jnp
pushf
and
mov
xchg
sbb
imul
arpl
pushf
jb
cwtl
push
inc
dec
arpl
gs
bound
or
dec
sahf
mov
mov
lea
aam
xor
mov
sbb
mov
ret
aas
stos
fisttpll
and
cli
cld
sub
lock
mov
mov
mov
nop
outsl
dec
pop
gs
and
out
movsl
sbbb
or
pusha
push
jmp
mov
xchg
pop
inc
and
and
rolb
ja
outsl
mov
mov
icebp
fldcw
dec
push
popa
jmp
sbb
jl
loope
push
gs
les
dec
mov
jnp
xchg
rorl
mov
clc
cmp
scas
mov
fmull
mov
andb
mov
fsubl
hlt
add
je
and
lret
pop
push
ss
subl
call
lods
mov
and
dec
jne
push
mov
stc
lock
fwait
inc
add
out
jle
testl
sub
xchg
in
dec
inc
shld
mov
repnz
popa
fcomps
adc
and
jne
pop
test
mov
in
inc
cld
adc
addb
mov
xchg
cs
aad
sbb
lds
insl
je
adc
xchg
jne
adc
jmp
jle
push
mov
xchg
sahf
int3
jp
aaa
call
rclw
not
dec
fstps
jo
testb
rep
ret
lcall
xor
test
jns
or
xor
hlt
out
lods
sub
hlt
xchg
in
cli
push
loop
sbb
je
sub
incb
sbb
jge
jl
cltd
leave
int
das
mov
mov
ss
cwtl
out
and
mulb
cmp
jbe
or
sbb
loope
dec
int3
jnp
shl
push
sbb
aam
mov
test
sahf
out
imul
mov
sub
or
je
jmp
lret
jne
xorb
push
inc
or
mov
push
pop
fstpt
cmp
or
xchg
rcrb
movsl
jbe
push
sub
dec
jno
inc
jnp
ds
into
cmp
andb
leave
mov
sbb
mov
stos
inc
inc
insb
pop
lods
jl
or
xchg
lock
sarb
popl
call
fistl
xor
lea
mov
xor
in
mov
dec
cld
mov
dec
dec
mov
jmp
lds
ljmp
add
mov
test
hlt
sub
pop
lret
aaa
mov
inc
inc
icebp
leave
icebp
aaa
mov
in
ja
je
xor
shlb
stos
jmp
jmp
mov
inc
mov
out
movsl
mov
dec
mov
fnstsw
lret
lea
out
les
test
faddl
sub
fcoml
jecxz
ret
mov
sahf
pop
mulb
js
add
call
mov
inc
sub
mov
outsb
xchg
lret
jno
sub
lahf
fdivl
iret
add
jno
imul
fs
scas
mov
dec
sbb
loopne
js
push
ja
xchg
and
jecxz
aam
xchg
clc
cltd
xor
mov
pop
add
cld
dec
pop
dec
sbb
xchg
cmp
jno
adc
scas
fistps
lock
jns
cmp
mov
imul
and
mov
rorb
loopne
push
fldl
dec
pop
mov
push
ss
adc
ret
adc
data16
sub
add
xor
jge
je
xor
sbb
jae
push
cli
mov
repnz
loope
adc
jo
cmpsb
sbb
jecxz
lods
inc
or
xchg
cmc
pushf
jg
dec
inc
add
cld
cmp
notb
push
pop
les
pusha
adcl
test
vpavgb
fcmovnb
push
add
push
or
ss
dec
and
and
icebp
cmp
jns
pusha
xchg
lea
mov
fistl
sbbb
mov
mov
std
inc
fisttps
test
sbb
decb
out
in
ja
jb
jo
pop
add
mov
inc
add
xchg
jns
cmp
sti
outsl
pop
fnstcw
jne
in
cmp
xor
mov
or
lods
in
lods
outsb
mov
push
sbb
mov
nop
ror
cwtl
aad
inc
ret
rorl
jnp
cmc
mov
cmc
mov
add
inc
pop
and
por
adc
sbb
cmp
scas
xor
pop
ss
rcl
and
imul
and
jae
adc
stos
lods
test
mov
movsb
xchg
cmp
aam
push
push
sub
adcb
mov
lods
lea
xor
fstpl
add
jbe
sub
shl
dec
inc
push
inc
test
fisttps
mov
fcmovbe
or
and
imul
sub
pop
test
pop
jns
sub
test
and
loop
fdivr
ds
pusha
js
add
ss
or
movsl
fiadds
push
xchg
insb
inc
and
sub
cmp
test
xor
js
cwtl
inc
pop
or
mov
dec
or
mov
pop
add
es
stos
fwait
dec
sbb
lods
sub
add
jae
lods
xor
data16
lret
repz
iret
jno
je
test
mov
rorl
adc
in
fisttpl
fyl2x
mov
out
sub
cmp
pushf
cli
jp
adc
add
mov
add
jnp
shlb
mov
mov
cli
dec
sbb
leave
fwait
mov
xor
mov
jo
std
cmp
xor
lahf
jne
pop
scas
in
jge
popf
mov
sub
outsl
jle
or
repz
rcll
inc
mov
addr16
in
sbb
xor
stos
cld
imul
inc
adcl
test
scas
sbb
adc
push
cld
jl
enter
cmpsb
pop
inc
cmp
stc
ret
pop
cltd
ficomps
hlt
lods
cmp
sub
sub
mov
adc
xchg
idivl
in
inc
xor
stos
test
mov
dec
je
sbbb
xchg
andb
sbb
lods
mov
cmc
sbb
test
fs
movsl
jmp
scas
dec
and
mov
mov
int
aad
jl
aam
adc
mov
sbb
mov
fistpll
mov
cmp
mov
mov
ficompl
mov
adc
add
dec
dec
sub
popf
jnp
xor
jecxz
jo
dec
repnz
xchg
dec
cmp
nop
dec
and
and
push
pop
cvtps2pi
or
mov
inc
mov
sahf
das
test
popa
fcoml
or
inc
psubd
and
or
mov
ds
or
mov
jecxz
push
xlat
inc
int3
cli
cmp
js
sahf
cwtl
push
or
pop
lahf
jmp
sahf
rep
test
jmp
into
nop
xchg
jne
jg
dec
inc
jecxz
push
push
stos
sti
jmp
je
lock
movd
addr16
imul
cmc
sti
and
cmp
add
test
shlb
xor
into
insb
xorb
js
adc
movsl
jg
inc
aas
mov
push
mov
jae
ja
lods
fnstenv
in
mov
inc
repz
mov
cwtl
fmuls
clc
popa
scas
testl
aad
leave
adc
loopne
cmpsl
arpl
cmp
mov
fwait
or
lcall
scas
cwtl
sbbl
inc
test
aas
sti
scas
insb
pop
out
adc
add
cs
cmp
imul
iret
test
or
mov
bound
aaa
xor
inc
and
cmp
cmpsb
adc
xor
push
inc
push
aas
insl
dec
jecxz
imul
mov
insl
mov
nop
and
pop
nop
aam
xchg
rcr
movsl
xorl
and
lahf
or
cmpsl
pop
pop
nop
in
xchg
stc
pop
cmp
popa
repnz
stc
aaa
inc
lahf
sub
test
mov
mov
mov
xor
adc
in
push
sbb
cmp
rclb
shrb
fisubrs
je
dec
inc
add
sbbb
movsb
addb
jecxz
in
push
stc
loopne
ret
movd
mov
mov
xor
mov
cli
jl
ljmp
ret
xor
sub
xchg
test
dec
fbld
push
mov
push
cmp
in
jae
loopne
cmpsb
sbbb
insl
lcall
sbb
out
imul
xchg
xchg
cld
clc
fwait
jge
adc
mov
jo
pop
add
ror
pop
rcr
pop
test
paddw
loop,pt
int3
ror
mov
sub
mov
pop
ljmp
lds
arpl
sar
lods
js
pop
mov
dec
sbb
jmp
xor
sbb
push
xchg
aaa
ljmp
ret
lock
mov
insb
aad
fstl
xchg
cwtl
cmc
xchg
or
movsl
clc
icebp
pop
outsl
cmp
xchg
loop
pop
mov
fists
sbb
sbb
xchg
jbe
push
jg
cltd
imul
mov
xor
jne
adc
add
mov
int3
xor
aam
xor
pop
mov
xchg
sub
pushf
add
xor
jo
mov
inc
adc
gs
mov
int3
sbb
xchg
orl
xchg
dec
jb
push
rolb
ret
dec
sbb
cltd
inc
inc
jo
jbe
in
sbb
mov
adc
ret
jno
mov
push
inc
cmp
push
sub
ret
rolb
cmp
cmp
add
mov
xchg
hlt
or
mov
and
or
icebp
fdivrl
push
and
sbb
and
popa
dec
inc
mov
jg
repnz
mov
ja
movsl
push
addr16
and
das
or
dec
in
add
sti
insb
push
pop
into
lahf
fcmovnu
cld
call
cmp
push
cli
inc
ss
cmp
jnp
and
add
and
cwtl
in
pop
add
bswap
sub
inc
cmpsb
or
ss
mov
adc
in
and
mov
fidivl
inc
mov
pop
cmpsb
cmp
pop
out
out
leave
test
add
stos
lret
les
adcl
adc
sub
movsb
arpl
bound
aad
ljmp
xor
pushl
mov
sub
lock
xlat
push
xor
mov
lret
imulb
xchg
dec
push
repz
mov
or
sahf
sti
cmp
pop
sub
out
mov
stos
out
xor
mov
inc
or
pop
pop
push
repz
push
jne
mov
sub
pushf
fdivr
clc
rol
mov
jb
jge
push
into
jno
mov
cwtl
jg
push
sbb
mov
cli
mov
jg
pop
xchg
mov
inc
mov
jle
xor
mov
or
jecxz
loop
push
mov
fs
mov
stos
cmpsl
orb
je
mov
cmp
pushfw
lret
aad
cmpsl
xchg
cmpsl
cmp
and
out
clc
data16
mov
sarl
addb
movsl
pusha
cmpsl
lret
push
push
inc
shr
push
cwtl
movsb
into
ret
mov
out
push
jb
clc
lret
pop
push
ret
sarl
mov
add
inc
scas
jnp
test
lcall
push
push
cs
dec
cld
sahf
push
js
add
inc
insl
mov
sub
and
bound
shrl
mov
inc
lods
leave
mov
invd
inc
inc
and
dec
pop
xchg
mov
in
shl
mov
xchg
adc
popa
es
pop
push
cmp
daa
lods
ret
inc
ds
shlb
js
test
jmp
pop
adc
iret
insl
mov
sbb
inc
jo
and
push
jmp
cs
sub
or
stc
xchg
mov
mov
popf
je
add
xchg
dec
lret
stos
inc
pop
clc
mov
fldl
scas
mov
xchg
repz
jl
aas
int3
test
mov
cmp
fxch
jne
mov
mov
sbb
es
jecxz
mov
addl
aaa
push
leave
push
mov
std
jae
xor
rolb
jb
mov
adc
lret
push
shr
inc
push
cmp
scas
jle
sbb
cld
add
xchg
dec
jg
mov
repz
inc
jb
xchg
repnz
sbb
dec
jmp
in
int
fadd
mov
and
mov
es
push
pop
xor
mov
pop
into
adc
outsw
sub
fidivl
add
aad
and
xchg
je
sub
scas
cmp
mov
pop
xchg
out
arpl
or
pop
dec
pop
imul
push
mov
xor
mov
push
push
mov
cmpsb
sbb
lahf
fiadds
and
outsl
test
pop
jns
adc
jmp
mov
popf
inc
sbb
decb
mov
sub
cmp
pop
pop
add
jecxz
sub
mov
mov
outsb
xchg
jp
ljmp
dec
repz
jl
pop
inc
xor
nop
ret
add
xchg
mov
lahf
pop
push
popf
js
daa
lret
or
shrl
stos
loop
js
int3
mov
enter
push
out
inc
fdiv
js
mov
shr
sbb
ss
ret
adc
cltd
pop
lret
xchg
out
sbb
iret
sbb
pusha
aam
imul
lret
lcall
sbb
ds
adc
mov
rol
xchg
inc
add
in
shll
cmp
jbe
adc
inc
and
pop
xor
adc
ret
dec
adc
insl
pusha
js
imul
jp
rcrb
inc
sbb
mov
push
sub
inc
dec
pop
adcb
pop
into
or
cmpsl
lcall
lods
mov
push
rcll
test
and
test
push
mov
xchg
fsubr
pop
stc
xchg
out
testb
mov
add
cli
xchg
loope
inc
mov
enter
sti
or
or
call
sbb
cli
adc
in
rorl
mov
mov
xorb
iret
daa
push
enter
insl
das
inc
mov
mov
cwtl
jo
sti
adc
sub
jmp
jp
cli
mov
cmp
jnp
add
pusha
in
mov
add
cli
sbb
mov
or
cmpsl
orl
or
lods
and
jle
cmp
and
cmpsb
and
xchg
les
rorl
insl
cmpsl
jle
cli
pop
into
and
xor
cltd
mov
mov
xor
les
fisubl
xchg
inc
or
int3
dec
push
cld
add
adc
std
mov
push
pop
lds
mov
sar
cltd
and
je
add
cmp
adc
pop
jb
dec
jb
and
fnstenv
movsb
jl
gs
shrl
repz
xchg
mov
std
push
sbb
cltd
fsubs
mov
orl
dec
sub
addr16
xlat
insb
or
dec
dec
xchg
xor
adc
pop
dec
cmp
repnz
sbb
stos
scas
inc
inc
xor
push
xchg
in
adcl
push
inc
sbb
movb
arpl
pop
ja
mov
sbb
push
mov
lahf
pop
pusha
cmpl
cmp
push
and
fiadds
push
jno
adc
call
aaa
jne
test
sbb
jp
xchg
movsl
mov
cmpsb
aad
add
fmuls
imul
in
mov
mov
mov
xchg
mov
mov
clc
mov
pop
push
add
mov
je
sbb
pop
cmp
push
imul
jno
mov
push
jb
adc
dec
jecxz
sub
sbb
insl
lods
cmp
xorb
lods
inc
mov
adcb
add
in
lret
sub
adc
les
pop
shl
movsl
pop
rclb
jo
daa
adc
inc
stos
cmc
repnz
jecxz
outsl
pop
shl
push
and
pop
pop
and
mov
ds
sbb
inc
adc
hlt
pop
mov
orb
sbb
or
jns
loopne
aad
sub
lret
jno
dec
jmp
into
jl
jle
cltd
lahf
sbb
sbb
stos
std
into
mov
cmp
imul
xchg
xor
jns
enter
mov
out
fldcw
scas
inc
inc
sbbb
lods
orl
or
movsl
adc
aad
in
and
xor
push
sbb
inc
daa
neg
fistl
push
leave
sub
imul
mov
sarb
or
ss
mulb
push
mov
mov
ss
and
xor
sbb
dec
xor
in
or
gs
and
dec
xchg
gs
mov
jmp
add
das
in
mov
sub
cmp
lahf
loop
ret
push
popf
jmp
and
inc
jb
je
std
and
mov
insl
push
or
loop
mov
xchg
bound
push
pop
cld
cltd
jns
insb
dec
inc
lods
aaa
and
sbb
mov
fimull
out
push
mov
and
in
cmp
rolb
xchg
cs
outsb
ss
adc
xor
enter
cli
mov
call
test
popf
rcr
std
pop
inc
push
and
mov
adc
mov
inc
dec
insl
cmp
scas
or
xor
dec
xor
jl
repnz
mov
test
or
push
lret
hlt
fistpll
shrb
add
jae
pop
adc
clc
jnp
cwtl
jmp
adc
push
leave
test
std
mov
mov
fstpt
fisubs
loopne
nop
pushf
shlb
pop
imul
testb
cmpsb
int
fwait
lds
adc
pop
icebp
xor
mov
jnp
mov
mov
inc
lods
adcl
add
xorl
divl
int
test
inc
fwait
lods
cmpsl
jo
sub
sahf
in
lds
adc
outsl
mov
sbb
test
push
clc
xchg
pop
dec
and
lahf
cmp
mov
mov
push
lret
test
mov
pop
lock
inc
jo
call
fnstenv
sbb
cvtps2pd
sarl
out
gs
sub
xchg
out
push
adc
jbe
or
repnz
lock
ds
and
dec
std
inc
sbb
out
sub
xor
sahf
into
mov
andl
cmp
test
call
add
mov
inc
add
cli
mov
rcrb
jb
cmpsl
lea
out
sti
stos
and
mov
test
je
pushf
push
aaa
xor
pop
rcrl
mov
mov
in
stos
loopne
std
xchg
pop
xchg
in
insb
dec
adc
jns
test
pusha
out
shlb
mov
sbb
call
je
subl
pushf
and
push
push
xchg
aas
add
lock
cli
cmc
dec
inc
out
sub
cmp
icebp
icebp
loop
cltd
or
ret
inc
out
sbb
jno
pop
sahf
test
test
ss
mov
dec
mov
pop
mov
cmpsb
adc
sti
into
stos
sbb
lods
jp
loop
clc
xor
data16
lahf
fimuls
xchg
out
and
sub
jo
mov
es
mov
pop
dec
je
jno
push
add
subps
adc
stos
add
mov
cmp
fildll
sub
sti
and
push
out
lret
lods
push
ds
sbb
into
jg
test
jecxz
xlat
mov
cmp
leave
xchg
xchg
mov
inc
lahf
jg
mov
mov
in
pop
in
adc
inc
divl
mov
into
cmp
hlt
xchg
sbb
outsl
push
out
xor
negl
jmp
push
out
pop
sub
lods
adc
jg
xchg
mov
sbb
in
cltd
pop
stc
add
cmp
pop
das
es
xchg
mov
dec
and
and
push
jae
push
cld
xchg
sbb
pop
dec
in
inc
xchg
lock
dec
lret
push
testl
inc
mov
leave
scas
cmpsb
subl
inc
push
hlt
xchg
dec
lret
xchg
mov
xor
mov
movl
pavgb
das
repz
xchg
sub
dec
push
repz
xchg
adc
fsubl
inc
jae
inc
xchg
shrb
xchg
jns
repz
into
je
pop
xor
push
push
push
or
rorb
mov
orb
ljmp
jo
stos
movsl
sahf
sbb
inc
int
out
xchg
lds
insl
fsts
mov
push
push
sub
imulb
mov
push
mov
xlat
fcmovne
inc
sbb
mov
int
data16
shll
xor
pusha
sbb
cld
sub
mov
push
pop
clc
fdivrl
fidivrl
cmp
cmpsb
jg
and
orl
divl
cmpsb
mov
dec
pop
lods
jg
mov
insl
pop
pop
mov
mov
mov
mov
push
push
sahf
ret
mov
popa
js
jo
mov
adc
imul
xchg
aaa
push
mov
scas
faddl
inc
callw
xchg
pop
cmc
jne
sbb
push
push
add
adc
pop
aad
int3
loop
and
xchg
idivb
cmpb
and
xlat
lods
jecxz
inc
inc
outsl
shll
test
or
xor
dec
add
sbb
in
pop
sbb
sub
nop
ficoms
add
jo
out
jns
add
adc
testl
outsb
pop
push
xor
loopne
cld
dec
mov
sti
ds
inc
mov
jmp
std
xchg
dec
das
inc
or
or
mov
in
push
mov
fwait
cld
inc
cmp
aad
inc
ficomps
xor
jnp
pushf
rolb
mov
loop
popf
inc
jnp
jmp
mov
inc
push
adc
xchg
int3
cmpsl
jo
scas
xchg
dec
cli
clc
sub
and
lea
sub
pop
cli
cmp
mov
rol
add
pop
mov
fisubl
aam
call
leave
sub
mov
pop
ret
xchg
stc
stos
cmp
cmp
xor
or
mov
insb
or
into
push
mov
pop
mov
push
or
lcall
pop
clc
or
out
fs
sub
sub
jl
adc
lcall
add
lds
xlat
aas
ret
test
loope
rol
fcmovbe
aas
jns
cmp
xchg
rolb
in
test
std
out
loope
dec
cmpsb
jmp
dec
nop
ja
and
leave
aad
lret
rcll
loop
push
pop
dec
lea
gs
int
stc
xor
push
popf
jge
pop
das
in
pop
es
xchg
pop
sbb
adc
add
ds
jne
enter
fists
push
or
add
cs
lds
inc
xchg
out
dec
mov
cmp
mov
push
pop
jg
test
les
js
cmp
add
add
push
outsb
rcrb
insl
call
mov
cmp
int3
mov
inc
orb
adc
push
xor
test
adc
rolb
nop
loop
sub
loope
div
sbb
and
add
fcompl
pop
fwait
pushf
out
in
pop
mov
adc
das
jae
mov
mov
jbe
imul
xchg
dec
loop
loope
stos
or
sub
push
push
xorl
adcl
filds
cmp
inc
xchg
cltd
sub
add
mov
mov
hlt
inc
jnp
sbb
scas
sbb
dec
inc
dec
push
fstps
mov
cld
pop
repnz
mov
adc
xchg
je
out
xchg
xchg
dec
lock
ss
lahf
dec
test
sbb
shll
ljmp
in
pop
aaa
jecxz
dec
in
push
testb
sub
push
nop
pusha
and
cld
cli
or
cmp
and
insb
dec
negb
adc
cmp
out
sub
movsb
xlat
cltd
mov
mov
repnz
xor
sub
adc
add
sub
ror
imull
rcll
push
inc
push
jp
mov
cmp
lea
inc
lret
xor
outsl
sub
mov
fcoms
jmp
add
xchg
xor
mov
and
mov
xchg
subb
push
mov
push
ret
cmp
incl
mov
mov
mov
pop
jl
mov
pushf
sbb
mov
jno
ds
outsl
add
sub
lcall
imul
aaa
push
enter
pop
xor
and
scas
fs
cmp
dec
iret
adc
pusha
mov
mov
lds
inc
mov
adc
xchg
ret
xlat
and
test
lock
sbb
push
mov
mov
mov
push
ja
mov
repz
mov
or
and
rolb
aaa
push
mov
dec
mov
sti
inc
lds
gs
lret
mov
aas
cmp
inc
mov
mov
cwtl
icebp
sbb
orl
sbb
pushl
rep
fsubrl
sbb
scas
pop
xchg
xchg
stos
icebp
and
adc
dec
lret
rcrb
adc
mov
jmp
mov
adc
out
push
mov
bound
sub
xchg
aas
insl
adc
cmp
sub
cmc
pop
push
jnp
mov
pop
scas
cmc
and
orl
sbb
cs
mov
rorl
add
lds
test
lahf
stos
insb
xlat
cltd
or
push
xchg
xor
xor
adc
add
js
cs
push
stc
in
stos
dec
les
sbb
test
fucom
ficoml
sahf
add
push
icebp
cmp
adc
dec
data16
inc
ja
mov
jecxz
sti
sti
xchg
cmp
das
movsb
fnstsw
sub
push
mov
aaa
add
je
fisubrl
add
jbe
mov
pop
popl
repnz
push
imul
mov
ja
out
clc
lods
and
sub
jg
xchg
out
xchg
insl
mov
sti
inc
push
nop
rcrl
popf
push
in
sub
xchg
lea
push
or
sbb
jne
js
std
fsubrl
shrb
pop
sbb
pop
jno
loop
test
enter
jb
adc
mov
xor
or
ds
dec
out
pop
sbb
out
mov
cmp
cmp
dec
jmp
inc
push
pusha
mov
cmp
mov
jl
jae
es
pminub
popa
dec
js
lods
inc
adc
xor
adc
cmc
ror
repz
mov
pop
outsl
and
les
rcl
xchg
xor
mov
nop
subl
adc
jno
into
lcall
mov
jecxz
dec
in
mov
xlat
ljmp
pop
cmc
call
xor
sbb
or
in
icebp
mov
aam
fadds
pop
push
dec
das
ret
clc
inc
scas
rcll
test
jbe
xor
imul
std
push
inc
insb
int
pop
dec
movsb
enter
mov
pop
out
les
cmp
shl
pusha
xor
xorl
jge
cwtl
negb
push
dec
pop
icebp
cltd
cld
adc
mov
stos
sbb
dec
push
mov
mov
insl
sti
out
push
cmp
das
lret
ljmp
xor
movsb
jbe
xchg
and
xor
xor
xlat
push
call
pop
and
adc
out
icebp
stos
popa
lods
pop
push
loop
insl
inc
mov
push
jae
shlb
les
loopne
adc
lods
sahf
push
pop
dec
js
xchg
xchg
dec
pop
sub
jno
fs
js
inc
push
das
pop
call
xor
pop
mov
shll
mov
or
jbe
inc
gs
dec
and
inc
imul
test
xchg
pop
and
push
cmpl
lods
push
add
pop
sub
adc
xchg
mov
inc
sbb
test
xor
sub
test
pop
icebp
in
sar
sub
in
imul
rorb
mov
in
iret
out
xor
pop
jp
xor
jle
data16
adc
push
scas
mov
xchg
lods
test
lock
or
cmp
jns
bound
mov
mov
xlat
mov
mov
xor
push
loop
imul
mov
cmpsl
mull
xchg
loop
xchg
pop
add
imul
jmp
clc
out
or
xchg
punpckhbw
xchg
addr16
add
aam
ficoms
out
dec
dec
xchg
mov
fisttps
pop
call
xor
push
sbb
xor
notl
sub
bound
inc
pusha
xlat
out
bound
std
je
lret
pop
cmp
cmp
addr16
movsl
pop
dec
loopne
cmpsb
test
fmuls
les
xchg
mov
mov
or
lods
mov
push
xor
or
mov
dec
pop
sub
pop
adc
add
into
pop
xor
lret
pop
movsb
push
lods
ret
and
mov
jecxz
cltd
data16
sub
mov
nop
pop
nop
jmp
cmc
dec
xchg
sbb
sub
cmpsl
cli
mov
enter
aad
pushf
dec
mov
sub
mov
decb
jl
adc
jo
dec
in
push
cmp
dec
xchg
lcall
mov
dec
cmp
pop
jge
nop
arpl
lods
xchg
pushf
pushf
fisttpl
adc
lret
lea
xor
fstpt
das
jle
gs
fadds
popaw
pushl
push
out
sarb
jno
mov
jge
iret
imul
insb
insb
sub
xor
lret
sub
das
add
mov
das
sarl
bound
mov
sbb
xchg
pop
fisttpl
mov
nop
jecxz
pop
push
scas
cmpsl
push
sbb
inc
ljmp
push
mov
dec
lds
aas
notb
stos
int
rol
and
xchg
test
jns
mov
es
movsb
xchg
and
mov
jo
xor
scas
into
rcrb
xchg
lock
dec
push
movsl
lods
inc
jle
inc
int3
mov
inc
jmp
add
ror
in
in
push
cmp
mov
pop
mov
cli
fmull
mov
gs
jb
mov
sar
scas
fdivl
sarl
ja
pop
dec
dec
sub
das
imul
mov
sbb
ret
les
aam
cwtl
cmp
xor
add
cltd
push
mov
fldln2
and
enter
into
sahf
or
cltd
push
or
dec
cwtd
mov
pop
mov
jns
cmp
xchg
pop
cmp
outsl
xchg
std
mov
sbb
cmpsb
je
mov
push
cmpsl
sub
insb
dec
ja
ret
ds
mov
pop
add
jbe
jbe
jmp
pop
xchg
sbb
pop
hlt
sbb
dec
xchg
or
sbb
adcb
adc
cli
or
mov
xchg
mov
lret
add
fnstcw
or
fistpl
cmpsb
pop
scas
xor
sahf
repz
stc
and
add
fldcw
hlt
addr16
dec
pop
dec
lea
xchg
js
inc
iret
mov
dec
push
jae
lods
test
push
inc
or
ljmp
xlat
sbb
and
in
sahf
test
cmp
es
sahf
pushf
scas
rclb
push
inc
xchg
sub
inc
or
adc
push
pop
sub
subl
lahf
gs
sahf
call
pop
mov
arpl
ss
cwtl
sbb
mov
outsl
and
mov
icebp
jbe
xchg
int
xor
sarl
jae
pop
test
xlat
xchg
aaa
xchg
pop
mov
js
out
insb
pop
push
outsb
roll
pop
or
mov
pop
repnz
dec
adc
inc
xor
icebp
fwait
stos
mov
ja
add
xor
mov
adc
lahf
test
xchg
fs
repz
and
jge
cmp
repz
arpl
mov
mov
ss
incb
test
jbe
repz
add
clc
call
push
mov
cmovae
inc
cltd
fcom
outsb
xor
add
and
dec
pop
add
add
mov
cs
stc
das
inc
lods
xor
mov
xchg
js
sub
das
enter
outsl
orb
daa
jno
sub
push
and
mov
rorb
fxch
fnclex
add
pop
imul
bound
stos
pusha
fsubs
daa
dec
add
push
mov
cs
repnz
and
push
sbbl
in
ret
push
sbb
xor
lret
test
inc
loopne
dec
ss
inc
and
sbb
cli
aad
mov
test
add
add
fistpll
ret
xor
leave
mov
cmp
mov
insb
inc
pusha
push
jno
addl
sbb
or
mov
sub
pop
loopne
push
or
leave
mov
xchg
aaa
mov
dec
xlat
js
cmpsb
into
or
sub
xchg
xorl
test
out
sbb
cmp
ja
push
inc
xchg
ret
push
xchg
mov
pop
inc
jnp
mov
cmp
cld
rcrl
xchg
xchg
testl
icebp
fisttpll
imul
or
gs
fs
mov
imul
inc
inc
xchg
xor
push
and
sbb
sar
arpl
rcrl
add
cld
xchg
stos
xor
popf
in
dec
clc
sbb
and
pop
cmpb
xchg
sub
xchg
inc
pop
pop
movsb
test
mov
push
bound
cwtl
cmp
xchg
lds
pop
cmpb
loopne
cmp
push
scas
jne
push
lods
sbb
fdivs
pushf
xor
jne
pop
adc
push
push
loopne
pop
scas
mov
rcl
outsl
inc
loopne
out
and
mov
dec
add
aam
mov
cs
cmp
xchg
outsb
mov
jns
or
or
pop
mov
imul
rcl
mov
and
xor
addr16
cmp
insb
xchg
xor
mov
subl
test
push
mov
jns
and
dec
jge
daa
jge
frstor
and
push
adc
cmp
outsb
cmc
lea
jb
pop
out
pusha
sub
clc
add
jle
cmpsb
push
mov
cmp
sub
mov
or
fistl
push
outsl
or
fldt
and
jo
loopne
aam
repnz
mov
imul
and
in
mov
push
inc
sbbb
mov
mov
sub
and
push
arpl
mov
ss
fidivrl
push
addr16
loope
mov
fstl
jbe
sti
jp
insl
adc
insb
or
jae
arpl
xor
mov
adc
clc
sub
pop
jg
sub
xchg
test
xchg
jno
cmc
jecxz
aad
push
inc
push
mov
icebp
jecxz
sti
mov
scas
enter
xchg
adc
loopne
fmulp
pop
rorb
ds
cmp
mov
fdivs
add
push
js
ljmp
shll
les
and
mov
and
sbb
sbb
mov
add
push
add
pop
sub
inc
cmp
fwait
out
pop
cvtps2pd
inc
jecxz
hlt
loopne
das
dec
test
movnti
pop
insb
cwtl
je
push
lret
mov
xchg
imul
jmp
shlb
popf
les
or
push
cmp
add
in
sahf
divl
fmull
pop
int3
pop
push
es
and
sbb
test
jnp
push
pop
aad
cmp
and
lea
dec
mov
mov
and
dec
fcmovnu
add
and
popa
icebp
shl
and
sub
cmpb
in
into
in
dec
and
outsl
idiv
mov
and
fbld
xor
inc
push
mov
movb
sbb
test
das
add
pop
test
clc
pop
lods
lea
push
jns
push
daa
xor
and
js
outsl
xchg
xor
test
mull
xchg
sbb
ret
fistpl
xchg
ja
inc
std
jecxz
out
test
popf
lds
mov
mov
adc
push
ret
push
xor
xchg
mov
dec
loopne
rcr
jno
nop
imulb
hlt
dec
mov
outsl
cmp
inc
sub
cli
sbb
lahf
jbe
adc
push
outsl
xchg
roll
mov
and
aad
pushf
aas
imul
scas
add
imul
pusha
and
add
dec
loopne
jl
adc
xchg
inc
scas
mov
stos
imul
jns
sahf
sbb
mov
arpl
xchg
test
mov
lods
or
nop
inc
jecxz
push
adc
jp
sub
jmp
sbb
pop
jg
mov
cmc
mov
sub
xor
xchg
mov
js
push
xlat
inc
scas
into
xchg
jmp
and
pop
cmp
mov
inc
orl
imul
push
repnz
sbb
js
lret
loope
shl
loop
ss
ret
nop
inc
std
shrd
cltd
cli
lea
mov
pop
mov
push
xlat
lea
push
inc
fisubrs
adc
jecxz
xor
mov
pop
popf
inc
decb
lods
test
or
outsl
shll
inc
add
pop
in
xlat
je
mov
stc
jg
loopne
sbb
mov
ja
lock
push
dec
hlt
test
add
xor
outsb
xor
pop
daa
pop
push
push
sahf
stos
lds
dec
test
je
cmpsb
nop
pushf
stos
in
mov
sbb
inc
fs
lcall
inc
xchg
ljmp
pop
jb
testl
outsb
add
sahf
cmpsb
push
loop
into
mov
fdivp
cmp
in
pop
ret
jb
inc
pop
mov
notb
adcb
adc
add
cs
cli
xchg
adc
test
mov
mulb
in
inc
lcall
inc
xlat
or
outsb
sarl
fwait
movsl
ficompl
mov
mov
jae
movsb
lret
cmp
mov
pop
nop
jecxz
cmp
fsts
cld
push
test
aad
fdivrl
mov
xchg
jb
and
js
in
sub
dec
popa
stc
cli
push
lods
xor
popf
mov
xchg
fsubrl
sbb
fstpt
push
mov
mov
popa
push
mov
repz
sbb
add
cli
lcall
arpl
les
hlt
fisttpll
inc
sbb
xor
inc
sub
push
push
sbb
dec
dec
mov
scas
scas
test
jae
and
sti
int3
pop
xchg
or
stos
adc
cmpsb
fwait
int3
fnstsw
dec
shlb
cwtl
push
mov
pop
mov
push
push
inc
sbb
jle
loope
add
out
fistpll
stc
mov
das
aas
pop
mov
lock
jno
jnp
movaps
push
push
pop
sbb
out
push
aaa
xchg
dec
jmp
jns
push
int3
gs
mov
inc
movsb
imul
inc
mov
or
xor
insl
cwtl
sub
xlat
ds
jb
xor
pop
test
push
mov
cmp
cli
cmc
daa
push
movsl
push
mov
cmpsb
in
xor
pop
pop
cli
cmpsb
enter
mov
push
xchg
popa
leave
lcall
inc
mov
ret
stos
shrl
jmp
cld
popf
lcall
in
jge
clc
imul
jge
add
imul
ds
mov
or
lahf
xchg
stc
or
xlat
out
aaa
test
jne
loope
orb
fidivrl
inc
leave
cmc
and
aas
subps
cltd
dec
xchg
loopne
push
stos
fistpll
lcall
add
sbb
dec
add
dec
xchg
inc
add
movb
and
inc
subb
mov
dec
add
ret
sub
imul
js
or
aam
inc
add
mov
sbb
inc
loope
jmp
dec
push
push
pop
jp
pop
mov
push
adc
insb
stc
test
jo
mov
cwtl
dec
jp
jno
jl
inc
mov
call
cmp
push
xchg
push
mov
jmp
or
sbb
push
and
mov
decb
ret
es
dec
shrd
insb
rcr
sub
mov
outsl
cwtl
sub
lods
push
incl
dec
inc
sub
decl
sahf
out
or
jmp
test
cli
mov
movsb
add
loop
imul
je
push
xchg
lret
add
inc
js
xor
aam
mov
pop
ljmp
enter
addb
xor
dec
inc
mov
faddl
movsl
ret
movsb
ret
xor
and
jbe
notb
aad
rclb
xchg
aam
jnp
movsb
out
cmpsl
popa
xchg
jmp
adc
adc
push
and
ficoms
pop
xchg
push
push
je
mov
test
push
dec
in
iret
rol
addr16
sub
mov
jle
sbb
lock
adc
movsl
dec
outsl
add
nop
adc
push
divb
add
popf
mov
adc
aaa
xchg
cs
xor
add
outsb
mov
inc
lret
test
cmc
pop
jb
jl
outsl
loopne
adc
shll
cmp
mov
or
push
dec
jmp
adc
add
popf
dec
jge
frstor
mov
pop
adc
cmp
ja
incl
lahf
xchg
popa
sbb
sub
cs
mov
popf
imul
xor
loopne
rcl
sbb
lds
cmc
inc
inc
and
fistl
mov
cmpsb
xlat
in
add
or
fcomp
insb
test
frstor
jp
fwait
cltd
fistl
jle
jbe
loopne
pop
or
push
cltd
pop
jne
push
cmp
js
shll
and
sbb
cld
sub
cs
popf
add
mov
mov
mov
sbb
popa
push
xchg
sbb
out
xor
ss
xor
outsl
push
cmp
adc
imul
stc
loop
lods
add
rolb
and
aas
sbb
add
sub
xor
and
insb
xchg
jno
mov
pusha
stos
std
cld
xchg
add
adc
jmp
or
outsb
xor
mov
arpl
lret
or
push
and
insl
fsubr
in
out
adc
out
sub
test
fwait
inc
xchg
mov
aas
add
add
sub
mov
dec
xchg
jp
xchg
bnd
sub
jge
icebp
out
jns
xlat
adc
sbb
jo
jecxz
sti
sarb
sbb
int3
shrl
popf
dec
rclb
dec
mov
dec
mov
outsb
out
mov
sbb
scas
call
lret
loope
or
inc
or
inc
pushf
pop
fs
test
dec
and
jg
iret
or
jno
adc
cmp
mov
aas
enter
cmp
push
xchg
lcall
push
mov
imul
xchg
cmp
insl
sbb
ds
ret
je
fsubs
jl
sbb
stc
add
aaa
scas
xor
pop
test
xor
les
xchg
xlat
cmp
call
es
imul
mov
cmc
dec
or
aas
sub
faddp
dec
push
jns
mov
stos
xchg
adc
mov
sub
fmul
lahf
outsl
mov
add
ret
add
mov
cmpsl
bound
dec
pop
add
mov
jge
movsb
xchg
add
dec
es
cmp
cmp
lret
fdivs
popf
cmp
shll
mov
push
cmp
mov
aad
adc
adc
cmp
cmp
test
mov
out
mov
enter
enter
je
xchg
or
mov
icebp
scas
add
mov
sbbb
test
jp
and
fs
pushf
cmp
or
lcall
mov
pop
inc
xchg
jp
push
sahf
pop
enter
lea
dec
jl
jp
mov
pusha
addr16
int3
xchg
pop
movsl
mov
ljmp
inc
xchg
jbe
mulb
inc
daa
out
mov
pushf
in
cmpsl
sub
outsl
lds
sti
idivb
mov
leave
cmp
cld
lret
sarl
add
push
stc
hlt
into
xor
mov
mov
cltd
mov
insl
xchg
sar
mov
into
cld
in
frstor
xor
imul
xchg
cmc
sub
sub
push
sub
and
inc
xchg
mov
sub
pop
push
mov
shlb
inc
aad
mov
inc
push
sbb
cmpb
dec
fs
mov
addr16
aam
lea
xor
jae
push
mov
das
jg
lahf
sub
cmc
mov
das
mov
pop
imul
ret
or
fadds
pop
inc
cld
in
cs
aad
mov
mov
fisttps
sub
daa
pusha
bound
sub
lahf
sbb
cmp
outsb
ss
or
test
cwtl
push
movsb
and
adc
in
mov
pop
into
xorl
test
mov
mov
inc
lods
push
sbb
xor
push
outsb
leave
cmpsl
cmc
lahf
loop
jb
cmp
mov
sarb
mov
sbb
dec
cmpsl
xchg
and
pop
jmp
loop
cld
lcall
std
mov
and
push
dec
int3
lds
popf
or
mov
in
mov
add
lock
cmc
dec
insb
push
push
cmp
mov
ljmp
jbe
and
stos
jb
add
add
dec
mov
insb
fiaddl
test
add
inc
pop
dec
lods
sub
push
push
sbbl
or
push
or
inc
icebp
push
ja
loope
jl
push
cmp
into
repnz
mov
shlb
adc
imul
jno
mov
dec
pop
dec
dec
mov
inc
subb
pop
std
repnz
push
fcomps
and
in
out
movsb
movsb
cmp
movsl
scas
mov
xchg
jno
jecxz
xor
and
sub
jmp
loope
xor
mov
dec
mov
mov
leave
xchg
xor
aas
rorb
mov
push
adc
mov
inc
mov
sub
or
nopl
sub
divb
je
movsb
and
out
jp
scas
aad
xor
mov
pop
jno
mov
in
or
and
xor
mov
adc
insl
loopne
and
jb
into
les
pop
ja
sbb
adc
sub
loope
pop
pop
icebp
jbe
cmp
mov
mov
stc
sahf
mov
mov
test
popa
shl
mov
push
fstpt
inc
push
push
popa
inc
cmp
mov
int
jnp
clc
push
rclb
stos
dec
repnz
mov
mov
push
stc
jp
lret
ja
setg
cltd
sub
push
or
icebp
adc
jae
jns
jne
jecxz
add
mov
mov
jmp
leave
std
mov
imul
and
imul
lret
cli
mov
mov
rorl
xchg
sbb
jg
mov
jl
adc
or
pop
mov
shlb
push
test
jg
adc
dec
sbb
inc
addb
push
add
jp
push
cmpsb
and
jbe
cld
xor
mov
bound
jbe
lea
sbb
push
or
scas
inc
inc
ds
sahf
imul
jb
movsl
fwait
roll
adc
add
fstl
dec
loope
jns
aaa
xchg
fwait
stc
dec
inc
mov
or
scas
pop
sub
iret
mov
push
loope
lret
jbe
inc
ds
lret
mov
lret
cmp
daa
outsb
pushf
mov
xor
popa
cmpsb
sbb
adc
clc
jno
insl
cmp
outsl
cmp
jg
and
push
pop
inc
popf
and
test
mov
adc
cmp
rolb
lret
inc
fldenv
aaa
int3
pop
ljmp
push
shll
mov
dec
pop
mov
insb
pop
cmp
cwtl
test
scas
int
add
out
mov
stos
cmp
mov
xor
pop
jecxz
sbb
cltd
xchg
mov
cli
or
push
pop
lret
xor
push
shrb
lock
fcomps
and
into
iret
sbb
mov
lea
xlat
fcoms
push
xor
rorb
push
loope
mov
adc
in
cltd
push
lods
in
mov
movsl
dec
sti
or
lcall
int
out
inc
pop
jbe
or
scas
xchg
lret
stos
insb
or
cmp
pop
mov
adc
adc
xor
xor
pop
mov
mov
shrb
pop
lods
jnp
mov
jmp
inc
cwtl
outsb
push
js
inc
out
notl
call
pop
aaa
add
mov
pop
bound
mov
ret
xchg
sbb
jp
std
push
or
das
es
cmpsl
mov
sbb
movsl
stc
xor
mov
push
and
cmpsl
mov
xchg
or
dec
out
insb
fwait
jo
xchg
mov
sub
push
push
push
cmp
lea
and
js
pop
inc
mov
loopne
cs
mov
leave
fwait
xor
jno
dec
ds
dec
iret
cs
ret
loope
push
add
cli
out
mov
dec
arpl
pop
test
push
fdiv
das
repnz
sti
jl
mov
aaa
mov
dec
stos
and
je
adc
pop
and
dec
adc
pop
cmp
inc
inc
shrb
insb
sbb
xchg
xchg
loop
mov
pop
pop
icebp
and
sub
pop
das
out
sbb
in
sbb
nop
sub
mov
sub
lock
nop
jno
cli
mov
xchg
push
dec
pop
mov
xor
fmuls
mov
jl
jo
ja
mov
push
inc
aad
sti
mov
stos
stos
xchg
mov
cmp
sbb
jl
aaa
hlt
adc
gs
or
jns
push
ret
push
xor
inc
pop
sub
jmp
neg
xor
mov
pushf
dec
dec
jp
jae
out
ljmp
fwait
iret
cmp
das
mov
push
scas
test
sbb
cmpsb
jmp
scas
mov
add
mov
xlat
mov
dec
mov
fisttpll
pop
jbe
not
int3
stos
sub
push
ret
or
std
xchg
add
mov
ljmp
adc
xor
aad
push
mov
xchg
dec
aaa
xor
test
bound
leave
incb
jp
nopl
lret
out
ds
dec
cli
adc
dec
push
pushf
arpl
mov
jo
rcll
mov
out
add
jp
pop
dec
arpl
out
fbld
jno
adc
and
or
fwait
mov
inc
inc
rclb
mov
xchg
fdivl
shll
xchg
jl
cmp
push
popa
pop
inc
js
mov
icebp
xor
cwtl
data16
out
jb
or
lods
in
jno
mov
jns
stc
add
into
in
pop
mov
int
punpcklbw
push
fs
or
xor
repz
lcall
mov
dec
mov
in
push
jge
pushf
cs
call
pop
jmp
sub
pushf
arpl
lret
jae
mov
out
fnsave
sub
inc
clc
and
subb
inc
jns
xchg
mov
pop
mov
adc
out
mov
aad
rclw
stos
sub
insb
and
push
les
push
sub
jmp
dec
repz
sub
mov
pushf
mov
mov
aas
insb
pop
ljmp
fbstp
pop
and
or
mov
outsb
mov
cmpsb
movsb
fidivrl
push
data16
dec
lock
dec
lds
add
pop
ljmp
and
mov
out
stos
xorb
rcrl
pop
les
mov
jge
pusha
lret
sub
push
subl
mov
and
push
jmp
jg
inc
in
les
xchg
std
pop
shlb
dec
and
and
cmp
xchg
movsb
jo
jnp
add
pop
mov
stos
mov
cmp
int3
cs
testl
dec
mov
xchg
gs
fnstsw
mov
cld
loop
sbb
int
movsb
aam
inc
xchg
insl
xor
mov
call
inc
jge
jb
into
jnp
adc
bswap
pop
cli
jno
je
fdivp
addr16
push
mov
decl
cmpsl
js
jne
pusha
jge
jne
ljmp
or
std
mov
push
mov
pop
push
pop
xchg
lds
push
add
push
mov
push
xchg
dec
lret
arpl
or
fdivl
and
nop
andl
lods
outsb
out
sub
cmpsl
inc
ss
into
dec
adc
mov
add
push
arpl
ret
jl
jmp
pop
inc
icebp
js
sbb
mov
mov
mov
mov
inc
add
fs
adc
loop
push
cmp
cwtl
scas
lret
out
and
shlb
jo
push
data16
repnz
sub
push
popa
mov
out
mov
push
test
fmull
pop
add
fs
insl
jmp
shlb
ds
push
and
xor
push
repz
stc
popa
cmpsl
out
ja
movb
sbb
sbb
or
pop
mov
xchg
es
cmpsl
adc
cmpb
stos
popa
out
loop
jb
fcompl
les
mov
and
outsl
testb
iret
test
push
test
lcall
jge
clc
inc
mov
mov
xchg
adc
jnp
lcall
les
jle
or
pop
icebp
mov
daa
mov
mov
lods
ror
push
fs
fucomi
mov
push
mov
imul
adc
or
pop
adc
xor
xchg
pop
mov
dec
adc
jo
xor
push
jns
cltd
jae
enter
sub
dec
xor
imul
xchg
fcom
sub
xor
arpl
pop
dec
mov
xchg
inc
adc
loope
lret
mov
sbbl
pop
pop
pop
leave
movsl
dec
and
mov
xchg
jnp
xor
push
jb
xchg
movb
loop
jg,pn
sbb
mov
pop
addr16
sbb
cwtl
andl
xor
mov
inc
fists
or
pop
sub
rorb
push
sub
cmp
jge
test
push
inc
jno
xchg
dec
xchg
stos
outsb
mov
mov
lret
push
mov
dec
lods
adc
fistl
push
shll
aam
mov
xlat
adc
cs
cmp
xchg
iret
daa
pop
xlat
push
mov
mov
cmpsb
push
loopne
mov
mulb
mov
out
dec
add
popa
jecxz
xorl
scas
xor
in
sbb
adc
and
sub
popa
mov
adc
or
jae
pop
fldln2
out
adc
ret
jns
aad
cwtl
loopne
cmp
out
sub
xor
lahf
imul
pop
xchg
sarb
sti
andb
lods
test
dec
xlat
and
push
scas
push
inc
cld
repz
testb
cmc
push
jl
out
imul
and
cmp
push
jns
and
sub
or
pop
adc
adc
add
imul
ljmp
ljmp
cmp
stos
js
mov
dec
repz
popa
imul
outsb
mov
into
dec
mov
dec
in
cwtl
mov
mov
xchg
addr16
jno
jl
scas
jno
std
xchg
out
or
loope
pusha
push
mov
xchg
pop
stc
decl
jae
ljmp
out
imul
adc
shll
fstpl
pop
je
lret
shll
test
xchg
xchg
jne
jbe
or
dec
movsl
inc
leave
cmp
ret
xor
pop
lds
rcrl
cmpsl
fsub
pusha
scas
mov
add
dec
cmp
mov
push
inc
mov
xchg
xor
nop
xor
mov
out
adc
mov
or
cmp
jbe
popa
pop
cmpsl
dec
mov
scas
jno
sbb
xchg
outsb
mov
push
enter
inc
dec
outsb
aas
push
and
lret
insb
nopl
shlb
decl
xchg
jp
gs
mov
mov
cwtl
enter
sub
jmp
out
std
push
gs
in
int3
negb
int3
sbb
pusha
je
xor
loope
or
or
mov
into
inc
mov
inc
arpl
mov
call
popa
lcall
je
lea
fildll
sbb
pop
push
fldcw
call
jns
push
mov
adc
std
pop
push
cmp
cmp
push
out
or
push
sub
xchg
cs
lds
idivb
xchg
into
imulb
je
clc
test
lock
jnp
inc
jno
cmp
xchg
popa
out
add
faddl
push
cmp
xlat
in
jle
pusha
pop
jns
xchg
inc
stc
add
lds
add
mov
test
ficoml
jns
mov
pop
add
jo
pop
lahf
add
sub
cmp
inc
inc
daa
jns
jle
cmp
sbbl
sbb
shlb
das
enter
fs
stos
mov
pop
loope
or
lret
mov
rcr
scas
das
inc
repz
and
cmpsb
cmc
clc
ss
outsl
xor
xor
jle
xchg
insl
jmp
ja
mov
pop
out
jecxz
faddp
jecxz
das
gs
insl
lahf
lods
clc
mov
fisttpll
fwait
lret
ret
mov
jnp
xor
inc
and
das
xor
push
rcl
out
sub
pop
pushf
jae
sub
lds
cltd
ret
and
sub
fidivrl
repnz
popa
adc
popl
or
push
cmp
iret
jle
mull
pop
push
imull
push
xor
cmp
cmpsb
pop
out
jl
jnp
stos
push
adc
lret
xchg
inc
jns
lret
jns
popa
rorl
add
mov
cmpl
adc
ret
xorl
incl
or
inc
imul
cli
sbb
call
push
js
lods
and
jno
jge
in
lds
xchg
pop
mov
test
out
sti
xorb
pop
jbe
ret
mov
out
into
and
insb
cmp
inc
and
iret
dec
popa
inc
xchg
xchg
push
dec
imul
lds
arpl
mov
jge
movsb
sahf
pusha
pop
cmp
xchg
push
cmp
dec
imul
jge
test
loop
sbb
push
int
jmp
push
mov
aam
jge
mov
fidivs
out
mov
aad
in
cmpb
pop
test
mov
mov
fwait
arpl
sub
jl
dec
or
add
aas
pop
add
adc
mov
mov
jl
ficoml
rolb
adc
dec
das
sbb
addl
bound
push
inc
pop
rcrb
ret
movsl
nop
sbb
xchg
xchg
es
test
cmp
push
pop
sbb
out
ds
cld
adc
shrb
mov
popa
adc
sub
test
xchg
shl
add
xchg
mov
lds
lret
jle
add
daa
push
iret
mov
cmpsb
pushl
add
sbb
in
push
cs
push
or
add
dec
gs
inc
pop
ja
push
fsub
xchg
or
jle
push
insl
xor
or
fdivl
adc
or
xor
mov
incb
bound
rcl
andb
ficoml
mov
cmp
aad
outsl
out
sbb
jle
imul
rcrb
out
dec
fnsave
divb
mov
es
cmp
aad
shrb
lds
mov
cmp
fldcw
nop
stos
push
pop
cmp
xchg
jb
xlat
cli
push
sbb
dec
pushf
test
xchg
mov
fcompl
insb
mov
lret
shlb
mov
mov
arpl
dec
jmp
shrb
mov
lock
jo
not
pop
out
jo
movsl
inc
jge
iret
test
sbb
cmp
arpl
cmp
pop
faddl
dec
je
into
dec
xchg
mov
icebp
insl
aam
xor
fs
pop
sub
cmp
fisubrl
loope
mov
lods
or
in
pop
addr16
cmp
out
lock
cltd
das
xor
rolb
pop
push
push
ljmp
out
pop
sti
xor
test
enter
mov
cltd
out
cmp
lods
imul
mov
int3
rclb
aad
xchg
pop
cmp
push
leave
mov
in
in
sub
xchg
mov
fs
sbb
test
adc
adc
or
cld
rolb
out
push
mov
pop
pop
xchg
push
xchg
jae
lcall
ja
scas
xor
orb
daa
popa
sub
and
jmp
inc
push
inc
dec
out
push
jno
jo
rolb
mov
int
pushf
mov
dec
lods
xchg
inc
fdivrl
inc
into
int3
stos
int3
jne
mov
sti
nop
cs
gs
push
daa
pop
lret
mov
xor
shll
icebp
adc
cmp
out
inc
mov
in
popf
pop
adc
add
sahf
sbb
and
sub
scas
test
or
imul
xchg
jo
or
sbb
out
lock
dec
dec
mov
addr16
add
sbb
jge
cld
or
cwtl
lock
cli
mov
mov
mov
push
inc
into
int3
out
xor
jle
loope
adc
pop
cld
inc
sbbl
loope
std
mov
loop
push
pop
mov
leave
mov
xlat
fisttpl
xor
sbb
jp
pop
dec
es
fcoml
cmpsb
outsl
scas
pop
lret
popa
xchg
push
enter
sti
mov
jb
jmp
aaa
js
jno
stos
mov
and
xchg
fisubrl
popa
or
xlat
fisubs
jne
insb
int3
loop
cld
rcr
dec
push
stos
lret
mov
cmp
cmc
fsubrl
in
jge
or
push
scas
or
dec
and
mov
adc
sub
cmp
jl
xor
pop
aaa
or
jl
loop
dec
xchg
sub
push
dec
push
fsubs
push
pop
movsl
out
insb
test
ds
xchg
xlat
subb
cs
inc
mov
addb
std
jge
jl
adc
pop
loop
cmp
arpl
mov
clc
jecxz
push
mov
cmpsl
and
mov
call
adc
scas
loop
push
mov
fbld
int
js
lock
insb
or
push
lods
int3
pop
xchg
lahf
or
int
or
mov
dec
in
or
xchg
mov
dec
mov
xor
sub
fdivr
mov
orl
pop
mov
ss
cltd
push
out
orl
test
push
sbb
xor
mov
sbb
rcr
pop
icebp
and
mov
test
repz
or
lcall
mov
in
jns
ds
pusha
xchg
jbe
lret
adc
or
repz
dec
gs
outsb
pop
scas
push
arpl
pop
mov
sarl
push
rcll
or
ds
inc
xor
mov
cmp
inc
fmull
push
aam
in
ret
les
push
mov
pop
jge
test
lcall
xor
hlt
das
sahf
mov
js
xor
lret
jns
cld
pop
stc
xlat
js
and
hlt
rolb
mov
xchg
sub
and
push
mov
imul
jp
test
dec
and
fsubrs
jno
stos
mov
mov
add
xor
lods
clc
jae
ss
and
inc
pop
push
js
ret
loopne
add
sub
cmpsb
pop
xor
push
mov
inc
mov
imul
inc
xchg
jg
gs
push
aam
push
lock
cmpsl
ret
mov
sub
xor
sbb
mov
hlt
decl
pop
lds
fldt
dec
in
out
lods
xchg
jae
pop
lods
in
setb
push
and
xor
add
sub
jge
inc
pop
xchg
push
outsb
jns
mov
cli
stos
inc
mov
ret
cmp
mov
adc
mov
bound
lea
xlat
pop
pop
dec
pop
xchg
mov
mov
and
out
dec
loope
fnsave
and
inc
loope
push
adc
xchg
and
mov
jl
push
shll
xchg
sbb
repz
clc
pop
sbb
mov
shl
xchg
imul
xchg
sbb
mov
stos
sbb
xor
or
xchg
stos
or
stos
mov
js
and
fsubs
pop
into
xor
test
push
pusha
mov
cmpsl
push
es
xchg
sub
in
test
mov
and
test
jae
push
adc
adc
mov
das
scas
sub
shrb
jnp
loope
cwtl
andb
mov
or
ret
and
cltd
cmpsb
int
mov
sub
push
mov
movsl
xor
shrl
sbb
rcl
mov
fwait
pushw
insl
pop
and
fs
ss
ds
xchg
sbb
push
sbb
xchg
push
push
imul
jle
dec
cli
mov
cmp
dec
inc
adc
addr16
or
std
mov
inc
nop
mov
add
aas
push
andb
into
or
jbe
xchg
xchg
dec
jbe
ds
inc
lcall
mov
cmpsb
outsb
inc
push
int3
mov
subl
cli
pop
sahf
es
mov
mov
outsl
jge
xor
jg
jns
mov
push
xchg
aaa
iret
insb
and
data16
maxps
in
sahf
xchg
pop
mov
xchg
push
lcall
push
pop
and
imul
scas
push
int3
push
inc
jo
pop
cmp
iret
sub
xchg
push
add
in
pop
jle
jnp
adc
outsl
or
pop
mov
daa
xchg
mov
fidivs
inc
xor
jle
mov
mov
psubsw
leave
stc
int3
adc
sbb
xor
aam
int
bnd
mov
sbb
mov
jl
sbb
inc
sbb
pop
cltd
neg
mov
sub
inc
cmp
sti
mov
jecxz
sub
ret
add
mov
enter
inc
mov
jnp
inc
inc
mov
and
iret
jle
adc
push
mov
xlat
popf
push
scas
enter
xchg
xchg
sbb
shll
lds
push
shl
cmp
lret
sarl
sbb
es
mov
test
lahf
and
dec
scas
jg
fucomp
aas
xchg
pusha
add
inc
lret
arpl
scas
cltd
ja
test
rcl
stos
xor
int3
decb
fcompl
push
je
clc
push
test
jmp
add
lahf
push
filds
push
lcall
mov
mov
lods
movsl
inc
rcrl
popl
hlt
or
mov
outsl
mov
nop
sub
pop
add
mov
dec
xlat
inc
add
sub
mov
jo
add
mov
scas
xchg
push
mov
pop
dec
mov
int
xor
sbb
mov
push
cmp
cmp
sub
dec
cmpsb
aad
mov
clc
js
mov
pushf
sub
ret
adc
mov
fwait
testl
sbb
add
and
xchg
aas
dec
sub
or
scas
bound
test
cmpsb
out
lea
enter
out
push
jmp
or
ja
aam
iret
add
jle
xor
addb
lahf
aam
cmp
mov
xchg
or
xorl
sarb
inc
jnp
dec
lods
fisubrs
out
push
dec
mov
test
xchg
mov
push
cltd
popf
insb
jnp
loope
xchg
mov
es
gs
pushf
das
xchg
ficoml
adc
cld
jle
and
pusha
xor
movsl
imul
push
jecxz
lcall
mov
mov
outsb
bound
xchg
adc
lcall
mov
inc
insl
in
fdivl
xchg
jge
ficomps
dec
cmp
test
inc
xchg
xor
pop
mov
push
lret
jnp
sarb
cltd
and
cmpsl
cmp
mov
or
cmp
jbe
sub
xchg
jo
loopne
inc
scas
pop
jae
rorl
mov
push
test
mov
inc
adc
fisubrl
mov
fdivl
mov
rcr
dec
add
in
repz
rcl
cs
iret
test
push
xchg
outsl
test
xchg
jnp
stc
cmp
adc
mov
stos
je
ljmp
scas
add
in
aaa
push
popa
mov
aad
mov
dec
inc
or
aam
test
mov
jmp
mov
mov
test
lcall
and
add
mov
lods
lahf
imul
cmp
setle
mov
addr16
push
jp
stos
shr
andl
fidivs
cmp
bound
jg
mov
and
mov
adc
and
lcall
xchg
cltd
nop
add
dec
pop
dec
pop
mov
mov
or
and
ds
orb
add
mov
and
lods
xchg
stc
repz
mov
sarl
jmp
push
or
lcall
sti
pushf
rcrb
push
mov
sahf
lret
mov
sbb
rcrl
dec
push
popa
movsl
popf
sbb
sub
xchg
xchg
sbb
repnz
xchg
pop
popa
lret
xchg
cld
out
sub
clc
jo
ret
insl
inc
std
mov
cmp
cs
mov
push
adc
jns
mov
mov
lahf
idiv
leave
in
and
outsl
into
jecxz
jp
mov
push
or
dec
jbe
inc
mov
loop
push
into
pop
dec
push
add
je
lea
add
adc
fwait
mov
jnp
lret
dec
and
repz
lds
mov
insl
push
and
xchg
jae
mov
jnp
sbb
sahf
add
push
scas
mov
cmc
and
sub
rorl
fnstcw
xor
shll
push
xchg
sub
or
ret
ret
adc
in
push
mov
push
out
shlb
sub
nop
mov
xchg
mov
dec
jo
negb
mov
jns
mov
into
fsubrs
incb
mov
cmc
mov
mov
and
lds
insl
in
sub
lods
roll
fdivl
pop
lret
xor
lock
push
rorb
sbb
movsb
push
xor
cmpsl
sbb
mov
mov
sbb
pop
pop
or
xor
int3
cmp
jae
mov
aam
cld
adc
lea
dec
fmull
addr16
stos
adc
pop
loopne
lahf
movsl
mov
mov
inc
xchg
nop
cmp
leave
jmp
push
arpl
inc
rorb
mov
jmp
in
mov
mov
insl
adc
mov
dec
test
adc
dec
inc
mov
shlb
ja
int
jmp
sbb
ret
fwait
icebp
popf
int3
push
mov
pop
loopne
dec
cmp
ss
sub
data16
sub
jg
push
add
dec
in
mov
jge
xchg
mov
fnstenv
test
pop
insb
cmp
xchg
sbb
push
rcrl
push
xor
addr16
hlt
ja
push
nop
dec
mov
repz
addr16
cltd
sub
jb
mov
insl
jmp
enter
push
mov
push
add
pop
cwtl
add
inc
mov
sub
sbb
jbe
clc
clc
fcomi
jle
lret
cld
gs
imul
scas
nopl
loop
xor
test
inc
iret
xchg
mov
jae
les
push
ret
push
or
fimull
inc
inc
and
sub
and
data16
icebp
lahf
push
sub
xor
dec
jae
and
inc
add
mov
in
sub
and
rolb
cmpsb
add
jae
mov
gs
mov
inc
cmp
movsb
add
xor
jne
insl
dec
jmp
dec
cwtl
je
jnp
xchg
insb
push
dec
mov
add
pop
jnp
jbe
sti
sub
sbb
sbb
jo
aas
inc
pushf
mov
mov
loopne
pop
in
lds
push
mov
xor
adc
mov
jae
jl
jae
xor
lret
pcmpeqd
xor
das
sub
gs
fs
pop
loop
sub
mov
addr16
add
rcrl
xchg
jno
ftst
repz
pusha
mov
leave
jg
adc
int3
fs
xor
mov
shll
insb
mov
mov
testb
push
lds
inc
ds
pusha
and
jne,pt
mov
cs
fcompl
popa
jo
mov
stos
mov
inc
pop
cs
repnz
mov
sbb
sbb
cmp
sbb
imul
aam
cmpsl
pop
mov
shlb
shll
push
lods
lock
call
inc
and
mov
mov
and
sbb
xchg
fisubs
sub
mov
mov
iret
pcmpeqd
ds
fidivs
mov
negb
adc
pusha
add
loopne
int
mov
and
sti
mov
inc
fldt
inc
xlat
fisubrl
jp
movsb
sbb
inc
jno
out
xchg
loope
orl
jl
sbb
aad
icebp
jbe
pop
mov
lea
xchg
int
push
stc
mov
inc
sub
fcompl
adc
sbb
stos
mov
push
or
or
test
xchg
lcall
test
shrl
xchg
popf
cli
inc
add
add
cmp
xchg
inc
mov
pop
xor
jmp
or
mov
mov
sbb
adc
out
lret
and
inc
ljmp
dec
xchg
popf
pop
fistl
jbe
arpl
into
add
inc
scas
push
mov
shll
jmp
int
out
push
test
jge
jbe
cmp
aad
loope
imul
decl
lret
mov
in
jae
adc
or
dec
cmpsl
sbb
push
and
lods
bound
mov
mov
fists
xchg
push
gs
xchg
xor
out
out
or
inc
sub
adc
insb
stc
rorb
jl
mov
repnz
xchg
subl
inc
or
stc
push
jb
jmp
out
mov
add
dec
dec
mov
in
jno
stos
in
mov
fldenv
sub
sub
adc
ds
jbe
dec
out
jg
adc
jns
cmp
aaa
add
data16
xadd
mov
dec
movhlps
inc
movsb
fnstsw
xor
addr16
jnp
jecxz
loopne
icebp
stc
scas
mov
loop
or
cmc
mov
or
cmpsl
mov
popf
repnz
cwtl
popf
dec
dec
call
shl
loope
cmp
inc
add
repnz
xchg
mov
lods
js
leave
loopne
push
push
js
sub
in
lahf
add
icebp
pop
hlt
add
popa
pop
out
jae
jno
xchg
fidivrl
outsl
mov
pop
nop
cs
mov
lods
sub
int
pop
bound
stos
cmpsl
mov
cmpsl
push
or
test
dec
xor
pop
popf
pop
dec
outsl
icebp
xor
mov
das
or
sub
int
shll
push
xchg
pop
je
cmp
popa
pop
mov
cli
add
mov
and
icebp
lret
cmp
rorb
lret
aad
imul
out
movl
iret
call
inc
ljmp
sbb
imul
sete
inc
sahf
jge
pop
fs
sbb
inc
mov
cmpsb
mov
in
loopne
sub
aaa
imul
daa
mov
fucomi
pmullw
pop
jno
enter
notl
xor
mov
pop
push
sbb
insl
imul
pop
adc
jb
repnz
stos
scas
mov
aad
sbb
pop
mov
testb
and
pop
out
xlat
daa
imul
gs
sub
pop
dec
pop
ret
orl
popa
jne
int
bound
gs
mov
cli
pop
push
cmp
sub
outsb
lret
fwait
mov
mov
mov
cmpsb
or
mov
clc
and
inc
xchg
data16
idivb
mov
mov
xlat
data16
out
dec
and
sbb
inc
js
lods
clc
add
test
pop
jge
pop
xchg
push
inc
dec
cld
out
ja
and
lock
popl
push
adc
pop
je
clc
push
lds
mov
sbb
mov
push
imul
xchg
jb
xchg
movsl
mov
rcrl
cmpsb
pop
out
fcom
mov
lret
push
stos
sub
popa
lods
sub
cmp
jnp
jb
push
aas
divb
movsl
fsts
mov
push
fadds
lret
cmp
rolb
pop
gs
xor
xchg
cmp
xchg
repnz
jp
jb
inc
push
movsl
jg
das
adc
xor
or
mov
dec
xor
inc
jne
push
aaa
add
or
or
mov
cwtl
xchg
shlb
inc
and
lock
mov
jbe
sbb
daa
test
fidivrl
xchg
or
pop
fnstcw
ds
jne
push
loop
jecxz
cmp
sub
sub
push
or
movsl
xchg
sti
dec
push
insb
les
notb
mov
add
mov
ja
popa
and
jl
xchg
and
sbb
cmp
stc
adc
push
sbb
sbb
popf
repnz
outsb
jp
xor
jg
ja
out
or
push
push
cmp
add
sub
std
das
iret
call
std
sti
mov
outsl
test
ficomps
sub
push
mov
lods
add
pop
jo
mov
dec
jl
outsl
sahf
das
xorb
scas
out
cmp
cmp
mov
mov
loope
rorb
cmp
add
sub
add
jne
insl
xor
lods
adc
push
nop
les
aad
push
dec
jge
movsl
adcl
lret
in
cmpsb
notl
push
jmp
icebp
inc
jmp
xor
cmpsb
sub
and
ljmp
push
dec
loop
out
sahf
jle
jne
mov
sbb
cmp
cmp
cmc
fldenv
jbe
in
cli
sbb
jbe
lea
or
aas
daa
jb
jecxz
xor
jp
mov
lock
in
cwtl
push
cmp
add
in
insb
cs
add
pop
mov
sbb
adc
sbb
mov
ret
dec
cmpsb
push
xlat
aam
jno
pushf
arpl
mov
adc
jg
jo
adc
ja
xchg
in
ja
and
dec
lahf
aad
inc
xchg
fldt
add
push
jle
movsb
sbb
mov
jmp
sbb
popf
rorb
fidivrl
mov
jne
push
adc
imul
jmp
in
adc
xchg
mov
inc
and
lcall
mov
repnz
mov
ja
hlt
lcall
xchg
push
int
adc
ret
idivb
aad
sti
repz
insl
and
stos
movsb
lret
lcall
pop
adc
sbb
push
pop
xor
mov
mov
aaa
sub
hlt
mov
jmp
xchg
push
dec
mov
xchg
sbb
xchg
xchg
mov
sub
or
mov
cwtl
daa
inc
popl
hlt
stc
sub
cmpsb
jecxz
ficompl
cmc
mov
xor
xchg
dec
inc
movsl
fdivr
cwtl
pop
testl
stc
or
sbb
dec
or
test
cld
xor
add
xor
mov
mov
fwait
stos
les
leave
icebp
rorb
xchg
ret
dec
adc
mov
mov
mov
xchg
jno
sti
sbb
aam
aam
or
pop
add
cmp
idivb
jle
adc
mov
mov
or
repnz
clc
push
inc
xor
pop
mov
xchg
stos
scas
mov
shl
adc
lods
lea
adc
inc
shlb
mov
pop
out
or
call
loop
jo
pushf
addr16
subl
int
addr16
push
pop
mov
rcrb
icebp
pop
add
pop
call
or
lahf
mov
sub
mov
jb
and
push
addr16
push
xor
and
and
xchg
mov
icebp
stos
pop
pop
xor
insl
roll
loope
cmpsb
movb
xor
scas
jno
add
or
je
call
ret
pusha
mov
not
mov
fsubl
lock
rcrl
in
imul
popf
mov
dec
xchg
xchg
add
lock
jo
insl
xchg
fcomp
inc
xchg
aaa
push
lret
pop
mov
sbb
dec
jnp
mov
sub
pop
mov
push
rcrb
jb
mov
fstps
pop
or
inc
sti
outsb
cmp
cmp
xlat
and
negb
jmp
mov
test
lahf
pop
and
add
xchg
and
push
pop
in
jl
adc
or
clc
push
test
sub
xchg
xlat
clc
xor
out
testl
inc
lcall
dec
aaa
fldenv
dec
fisttpl
test
sbb
pop
andl
fldcw
incl
mov
or
jne
mov
js
push
cs
mov
add
xchg
and
pop
xchg
insb
mov
fsubrl
pop
or
rcl
xchg
orb
out
fidivl
lcall
add
out
enter
cmp
loop
cmp
iret
sbb
and
sub
add
ss
sbb
pop
in
adc
fs
adc
iret
pop
mov
xor
and
enter
mov
adcl
arpl
test
lods
mov
je
and
shr
cmp
jno
sbb
xchg
lcall
leave
les
push
lods
aaa
pusha
in
out
popf
xchg
pop
dec
movsb
dec
repz
loop
cli
ret
push
in
test
ret
mov
call
and
cltd
mov
xchg
jne
add
movsb
inc
mov
cmc
xchg
xchg
inc
in
xor
imul
xchg
mov
and
mov
in
dec
add
and
dec
fs
mov
adc
push
inc
adc
movsb
mov
leave
and
dec
pop
mov
mov
add
push
test
cld
hlt
nop
mov
pushf
das
dec
dec
mov
sti
sar
in
in
adc
adc
xchg
xor
cmp
cmp
push
mov
jg
xchg
pop
fdivrl
sarb
jns
mov
or
mov
pop
lea
push
loop
cmpsl
loope
stos
inc
lcall
pushf
sbb
leave
mov
vmread
pusha
mov
and
or
xor
mov
in
notl
shl
aam
jge
test
icebp
fimull
repz
mov
flds
stc
push
lods
lahf
jg
sbb
mov
mov
pop
hlt
pop
or
lcall
arpl
cltd
adc
mov
mov
push
push
je
out
shlb
push
cmpsl
fildl
mov
mov
push
leave
inc
cli
mov
mov
addl
mov
outsb
jg
mov
call
or
adc
cmp
popa
mov
pop
xchg
in
aaa
dec
push
cs
mov
mov
sbb
lea
push
jg
fsubp
popf
dec
inc
mov
stos
aad
and
jge
xor
in
adc
into
pop
push
ret
idiv
add
out
mov
sbb
bound
lea
cmp
xchg
jecxz
aaa
inc
pop
fdivs
mov
stos
jmp
es
push
lods
insl
and
loope
xchg
pop
imul
push
xchg
fistl
cmp
imul
xchg
outsl
cltd
jbe
and
hlt
cld
ljmp
ficoms
popa
push
call
add
push
xchg
fldenv
xchg
popa
jmp
cmp
lret
ret
dec
mov
pop
test
ret
pop
or
sahf
cs
sub
sub
xlat
insl
rcr
or
or
bound
push
mov
xchg
dec
pop
cmpsl
or
je
cmp
sbb
push
rcll
notb
mov
sti
add
mov
cmp
lods
popa
fildll
outsb
add
clc
test
jg
sarl
mov
mov
js
cmpsb
sub
sub
cltd
adc
iret
push
dec
sahf
sub
lods
jae
movsl
push
and
mov
push
cmp
mov
notl
icebp
std
cltd
add
insl
xchg
insl
mov
lahf
icebp
sub
inc
xchg
jnp
in
jb
mov
xor
std
or
cmpsb
xor
jmp
in
jbe
in
out
add
dec
or
ret
cmc
mov
or
pushl
pop
inc
xchg
loop
jmp
add
pushl
mov
xchg
sub
push
aad
stos
shll
pop
or
jo
push
inc
movsb
call
test
shr
inc
sbb
repnz
mov
ljmp
clc
xor
lds
inc
push
testb
out
ss
les
or
pop
fcmovb
test
fimull
inc
push
aad
fists
and
sub
pop
mov
or
je
push
movsb
ds
loop
xor
and
xchg
or
lds
add
test
aaa
or
or
mov
mov
dec
fimull
or
pop
arpl
pop
ja
cs
mov
xor
pop
cmp
sbb
jno
mov
loopne
insl
stos
pop
adc
icebp
fisubs
jno
mull
mov
ljmp
mov
xor
outsb
lsl
lods
add
lds
and
push
mov
sarl
pop
mov
incb
andl
leave
in
adc
imul
push
insb
add
stos
jecxz
sbb
push
xchg
mov
ret
dec
fwait
roll
dec
aam
push
push
popl
out
xor
mov
jno
cld
mov
sbb
push
data16
aam
jno
imul
cli
jl
aam
push
sbb
lret
xor
ret
mov
jle
int
lds
jle
aaa
jns
and
mov
pop
lahf
push
pop
movsb
out
xor
mov
out
stos
xchg
outsl
fmul
sbb
js
ljmp
sub
int
jmp
je
lcall
cld
and
mov
nop
lret
inc
insl
ficoml
je
inc
sub
aad
insb
adc
nop
push
inc
sub
xlat
sub
cwtl
dec
mov
and
outsl
push
xorb
cld
sub
dec
lahf
push
lahf
pop
ficompl
das
cmp
movsb
or
pop
adc
xor
stos
hlt
je
sub
repnz
negl
lods
aas
gs
mov
xor
insb
pop
insb
mov
lock
lock
pop
pop
sbb
push
repz
mov
adc
mov
add
sbb
je
repz
int3
sbb
dec
enter
aaa
dec
jmp
cltd
rorb
inc
cmc
push
int
push
adc
mov
jecxz
addr16
or
lret
pushf
notrack
xchg
xlat
decl
sahf
dec
inc
int
pop
jmp
sti
jne
out
sbb
adc
add
lods
lods
rorb
sub
push
fists
xchg
add
push
leave
cwtl
cmp
xor
add
stc
push
inc
aam
jp
pavgb
jle
xor
cmc
sub
int3
pushf
lods
push
or
cld
pop
loopne
xchg
add
pushf
repnz
mov
dec
out
pop
stc
into
aam
inc
icebp
fsub
clc
ja
inc
imul
or
jb
fistl
repz
dec
and
mov
jle
mov
xchg
arpl
adc
jle
mov
aaa
lcall
ret
pop
sub
jo
cmc
cmc
int
inc
pusha
push
out
pop
sub
je
lcall
sub
jg
push
cmp
out
pusha
dec
xchg
xchg
pop
ss
imul
aas
and
mov
sbb
dec
mov
stos
jno
into
inc
call
and
cmc
outsl
cmp
fisubl
lret
ret
ss
lea
sbb
adc
ja
inc
lret
test
sub
add
dec
adc
pop
cmp
std
cld
push
dec
jae
repz
dec
pop
movb
pop
repz
or
lds
cmp
addr16
leave
adc
nop
add
shll
aas
inc
sar
out
aas
cld
out
cmpb
fistl
push
aad
leave
push
push
int
ret
cmp
push
and
mov
in
sti
jmp
push
mov
push
push
dec
stos
daa
int3
jns
and
cmp
mov
lock
cmc
leave
ret
inc
add
lahf
dec
xor
mov
hlt
sub
scas
sbb
jp
cmp
mov
ss
mov
lcall
or
xorb
xchg
push
clc
mov
cmp
iret
fsub
shr
cmc
dec
outsb
jecxz
stos
pushf
push
sbb
jg
lret
stos
gs
pusha
jg
or
shl
repnz
and
stos
sahf
int3
or
outsl
adc
pop
sbb
inc
pop
mov
pop
cmp
pushf
out
fsubrl
pop
fsts
rorl
push
dec
xor
mov
push
pop
andb
push
popa
cld
mov
cmp
ficoml
aad
cmc
push
ret
xchg
dec
add
test
out
lods
data16
add
and
in
mov
jmp
int
adc
pop
push
into
and
orl
adcb
loope
push
adc
mov
adc
xchg
sbb
or
add
cmp
loop
jns
fimull
sbb
inc
mov
jae
lods
in
sti
add
sub
xor
int
mov
pop
int3
repnz
mov
xchg
arpl
rcl
xlat
sbb
add
cs
lods
bound
dec
popf
int3
cmp
arpl
adc
mov
clc
mov
fsubrl
call
cltd
mov
pop
dec
xchg
cmp
xchg
inc
xor
sbb
xchg
hlt
gs
cmp
mov
hlt
cltd
lret
and
inc
stos
pop
sub
pop
test
or
jo
inc
aas
pushf
stos
dec
push
lea
addb
inc
scas
and
lea
mov
dec
shl
jl
and
pop
pop
pop
xor
and
cmpsl
push
dec
pop
movsl
and
bound
sub
scas
ret
inc
add
mov
popa
mov
mov
xchg
test
jo
insb
mov
ret
sub
cmp
xchg
mov
mov
insb
aaa
sbb
adc
jne
pop
mov
mov
add
lods
in
es
movsb
jge
imul
cmp
cmc
sub
lcall
out
sarl
adc
mov
and
mov
aad
es
cmp
pop
out
cmc
das
mov
pop
sub
push
sub
call
pop
bswap
neg
sbb
cmp
mov
push
scas
and
std
movsl
add
inc
add
xchg
divl
ret
out
add
xor
mov
inc
mov
sarl
repnz
jnp
cmp
arpl
scas
int3
out
repnz
loopne
imul
test
xor
out
lea
out
cmp
sbb
inc
js
xchg
lcall
push
sub
aas
jecxz
xorb
lret
icebp
insl
inc
and
ret
lods
sub
xchg
mov
shl
xchg
lret
in
pop
push
mov
cli
push
mov
cltd
cmc
aaa
gs
pop
imul
lea
xlat
test
leave
pusha
popf
mov
gs
xlat
fmuls
xchg
scas
xor
fcmovu
aam
and
loope
roll
adc
add
aaa
mov
mov
ror
xor
and
fadd
mov
or
repz
arpl
gs
inc
jno
inc
sub
mov
adc
mov
ljmp
xchg
arpl
and
mov
insb
test
clc
fmuls
jmp
lret
vmovlpd
fdivs
jl
push
outsl
xchg
cmp
arpl
xchg
xor
cmpsl
movsl
mov
das
push
dec
lea
jl
push
cli
dec
mov
pop
pop
push
out
or
mov
ljmp
fbld
nop
mov
lret
or
dec
aas
out
shrl
push
filds
sub
int
push
adc
addr16
fisubs
imul
xchg
ret
sub
cltd
fcmovne
popa
fsubl
push
pop
xchg
aam
pop
mov
xchg
xchg
jo
xchg
jecxz
cmp
sbb
mov
dec
je
rolb
cmp
pop
push
clc
dec
dec
shlb
jmp
or
mov
and
loope
rcr
imull
xchg
pusha
mov
loop
jo
stos
mov
pop
and
adc
pop
popa
or
inc
sub
mov
add
or
lea
xchg
jg
ja
pop
fucomp
push
sbb
popa
dec
push
sbb
fnstcw
mov
in
adc
aad
popf
xchg
xor
pop
inc
ret
aam
fwait
lahf
in
and
dec
sbb
pop
repnz
shll
es
sbb
sub
jbe
in
testb
fld
lods
jecxz
lret
repnz
rep
push
insb
jo
jnp
insb
int
cs
pop
xchg
mov
pop
dec
shrb
mov
inc
hlt
jl
push
mov
xchg
testb
mov
sarl
imul
stc
push
rclb
and
mov
inc
inc
leave
cltd
pop
inc
stc
inc
or
out
aam
jno
iret
pop
int
xor
adc
aas
movsb
in
fsub
stos
outsb
and
and
push
lret
adc
insl
shrb
or
cmc
cmp
push
push
xchg
mov
loop
test
mov
or
xlat
xor
lods
and
loopne
mov
das
jnp
mov
shlb
mov
inc
or
mov
xchg
inc
mov
icebp
fstps
outsl
mov
dec
xor
add
jb
jno
sbb
fcomp
aas
sbbl
xchg
xchg
les
sub
enter
insb
ret
shlb
jg
addps
adc
fimuls
sbb
xchg
fldl2e
push
pop
leave
cmp
sub
ficompl
insb
aam
dec
in
mov
sbb
test
xchg
popa
fisubs
xchg
aad
rcll
test
mov
push
push
adc
addl
lcall
cwtl
sti
xor
mov
add
test
scas
scas
dec
fiadds
push
in
scas
push
pop
call
inc
into
xchg
inc
mov
add
popf
mov
test
mov
mov
sbb
sbb
push
cmp
bound
cmp
or
movb
xchg
push
outsb
and
out
and
mov
push
mov
ret
lods
xorl
fadd
cmc
lcall
dec
fs
mov
std
fnstenv
popa
mov
jmp
xchg
mov
cmpsb
sub
mov
push
cmpsb
adc
cmp
mov
push
jno
idiv
dec
mov
push
cmpsb
jnp
mov
push
roll
std
lods
adc
mov
pop
jb
xor
fsubp
lock
negb
jnp
push
lds
sub
and
out
mov
adc
mov
int3
dec
sub
lods
mov
orl
pop
rorb
mov
push
popa
pop
mov
int3
jno
and
loopne
pusha
fldenv
xor
in
icebp
lahf
daa
xchg
inc
push
jo
mov
out
mov
test
lcall
cmc
mov
lods
gs
mov
or
add
daa
jbe
pop
out
daa
nop
jae
ret
adc
add
xor
int3
jge
cld
and
sahf
sahf
arpl
mov
pop
mov
gs
aad
sahf
xchg
push
adc
sub
add
frstor
popf
mov
xchg
add
xchg
popa
mov
push
push
push
scas
dec
inc
dec
pop
repz
ret
jle
icebp
push
adc
insl
shll
dec
ja
lret
stc
pop
mov
sbb
pusha
inc
push
xor
sbb
xchg
fistl
outsl
movsl
out
movsl
fisubrs
lods
insl
mov
outsl
mov
xlat
std
cmc
push
rclb
test
cmp
sbb
fs
outsb
or
pop
cltd
js
out
or
adc
push
test
jnp
pop
dec
je
cmp
gs
mov
aas
and
dec
jno
inc
dec
adc
jae
push
sub
dec
jb
mov
leave
inc
push
lcall
inc
call
popa
ljmp
mov
sub
cmpb
xchg
mov
lea
mov
out
add
outsb
aaa
ret
fwait
adc
rolb
pop
mov
mov
sub
push
xchg
mov
ret
daa
pop
loop
jae
mov
mov
mov
dec
mov
outsl
or
call
dec
outsl
cmc
and
into
pop
dec
aam
cmp
mov
out
xchg
dec
sti
pop
rol
sub
dec
cli
or
les
mov
pop
cwtl
popa
adcl
les
adc
out
enter
sqrtps
cmc
pop
dec
push
addr16
adc
mov
xor
addr16
in
sbb
mov
push
mov
pop
mov
mov
cld
push
mov
mov
jbe
push
dec
adc
push
push
hlt
push
push
addl
test
or
jmp
sub
jb
ss
daa
xchg
sub
adc
outsb
out
pop
cld
stos
mov
push
cli
and
jbe
push
xchg
pop
push
data16
inc
mov
mov
imul
cltd
mov
sub
scas
sbb
pushf
jno
mov
push
dec
jb
mov
sbb
jo
push
pop
push
movsb
and
push
sub
ret
xor
outsb
notb
repnz
lea
std
inc
mov
xchg
push
jle
jno
fstpl
sbb
push
jne
xor
push
push
mov
cs
mov
xchg
scas
adc
cltd
loope
push
lret
jecxz
or
cltd
cli
mov
imul
call
sub
data16
imul
sub
jmp
mov
add
mov
adc
addb
inc
adcl
rorb
lahf
xchg
xchg
cltd
add
notl
cmp
xor
shrb
and
dec
xor
seto
movl
iret
fistl
rolb
stc
xchg
inc
dec
pop
stos
test
dec
or
test
sti
jl
fimull
lods
mov
mov
mov
inc
jle
int
aas
imul
movsl
jnp
inc
std
pop
fistpll
xor
and
out
shll
and
out
cmp
in
push
lods
rcll
add
js
stos
cwtl
jns
fisubrs
and
mov
insb
into
insl
dec
xor
lds
inc
test
add
xchg
adc
inc
add
out
repz
les
mov
repnz
int3
cmp
jne
mov
and
mov
xchg
mov
pop
hlt
in
mov
jecxz
or
adc
sub
fwait
out
or
mov
xor
lret
add
aaa
inc
call
and
rcll
push
test
sbb
pop
mov
mov
mov
gs
cmp
test
roll
jno
push
mov
mov
dec
inc
lods
rorb
fiaddl
subb
int
int
pop
gs
sbbl
sub
insb
xchg
movsb
fisubrl
shlb
add
sub
jbe
sub
jns,pt
xor
pop
lahf
add
pop
cmp
lods
imul
mov
rorb
loope
fs
and
out
xchg
dec
mov
add
sub
pop
pop
out
adc
jne
mov
daa
mov
fmul
xorps
es
mov
test
sub
adc
jno
into
pop
addb
andb
dec
mov
or
sub
mov
imul
adc
sub
outsl
push
int3
ds
cmpsl
jnp
jmp
cmc
repnz
fildll
pop
sarb
sub
rcr
mov
inc
push
scas
adc
arpl
aas
mov
cltd
and
jb
gs
cmp
ljmp
insl
sbb
sub
iret
push
iret
lds
subl
sbb
lahf
and
mov
or
push
mov
shr
jns
pusha
xchg
jo
push
sub
js
ret
or
sbb
push
js
pop
or
push
sbb
sub
outsb
pop
iret
adc
addr16
sub
mov
and
jg
sbb
mov
push
int
pop
sahf
xor
call
inc
mov
xchg
pusha
jl
into
inc
inc
push
jl
ja
mov
mov
sub
nop
xchg
cmpsl
xor
fwait
xchg
in
jnp
pop
movsb
scas
dec
mov
cmp
inc
call
lock
sub
cli
lds
xchg
ret
int3
or
cmp
out
pop
jmp
add
adc
dec
cmp
mov
dec
mov
repnz
or
jge
jge
dec
pop
push
andb
add
fwait
inc
lret
push
or
mov
in
pusha
push
mov
sbb
xor
enter
sbb
dec
dec
push
jns
enter
test
push
cmp
test
sarl
popa
mov
mov
jbe
cwtl
inc
and
adc
mov
insl
mov
lcall
notl
or
fcomi
lods
cmp
xor
push
push
int3
fsubl
inc
mov
mov
fistpl
mov
ficomps
test
scas
jecxz
in
std
test
repz
cmp
xchg
movsb
push
les
sahf
rcrl
inc
mov
in
test
js
dec
adc
cmp
inc
mov
and
hlt
jne
in
stos
jns
push
lret
andb
in
lcall
das
jmp
pop
jmp
mov
sub
test
or
lret
mov
int
jge
mov
repz
push
and
jo
push
inc
inc
into
sbb
dec
sub
js
cmp
mov
xchg
adc
sbb
fwait
sbb
loopne
lcall
rcr
mov
xlat
js
rcrl
mov
call
sub
mov
dec
jge
push
and
lods
or
push
nop
mov
mov
push
jmp
xchg
andb
sub
mov
jne
int
in
adc
pop
xchg
mov
and
idiv
int
push
subl
and
jno
jnp
pushf
cwtl
fwait
inc
fwait
fidivrl
repnz
addb
js
push
mov
inc
jp
lock
test
xchg
je
cld
rclb
jb
inc
rcrb
and
sti
popa
fdiv
add
sbb
in
inc
dec
jp
aas
int
in
or
inc
inc
idivl
lds
pop
in
push
jno
or
xor
leave
lods
add
jge
ds
ja
orl
cmp
xorl
pop
insl
xorl
mov
mov
je
jo
xchg
and
mov
jbe
insl
xor
mov
divb
cmp
bound
or
movsl
cmpsb
inc
scas
push
mov
push
mov
pop
xor
imul
push
insl
lcall
or
sub
xchg
xchg
push
jecxz
and
cmp
jnp
xor
fs
add
and
stos
mov
fisttps
rclb
testl
aas
in
stos
add
xchg
fs
repnz
xchg
popf
xor
stc
mov
repz
daa
xor
xchg
push
outsb
adc
pop
jmp
xchg
movswl
shrl
jle
loopne
js
out
cmp
push
cmp
lods
mov
lret
imul
mov
movsl
pop
cmp
xor
test
movsb
in
pop
ret
or
dec
fdivl
sub
cmp
lea
and
xchg
xor
or
or
das
xchg
stos
pop
mov
dec
imul
adc
sbb
xor
sbb
xor
xchg
sbb
and
jge
cmpsl
stos
repz
push
sarb
cmpsl
mov
push
jbe
arpl
adc
out
jge
mov
int3
mov
pop
adc
lods
jb
push
lcall
mov
inc
call
sub
pushf
mov
or
sub
cwtl
cmpb
and
add
icebp
mov
js
adc
fwait
push
cwtl
xorl
gs
pushf
sbb
subb
ljmp
test
mov
adc
jbe
adc
or
mov
cmc
push
mov
mov
mov
setbe
fstp
test
movb
mov
fstpt
fnsave
and
loopne
fistpl
add
lods
inc
or
dec
addl
jae
xor
and
sbb
rcll
imul
adc
orl
push
fstl
jbe
rolb
xorl
jbe
sub
stc
sarb
xor
pop
popf
sbb
test
fwait
cmp
cmp
sub
mov
sti
adc
cld
xlat
mov
inc
sar
push
stc
jnp
incl
inc
roll
pop
push
xchg
inc
in
or
not
inc
movsl
lahf
xchg
push
inc
or
sahf
in
imul
hlt
lcall
popa
ret
lods
fcomps
arpl
into
and
addr16
jmp
add
inc
mov
jmp
jae
sarl
jae
mov
inc
lock
sbb
add
mov
mov
icebp
mov
inc
or
mov
frstor
rorl
push
pop
stos
jno
pop
pop
jb
sub
push
add
push
adc
int
arpl
and
jmp
dec
push
and
fstps
stc
inc
clc
scas
add
pop
mov
not
inc
ret
out
fiaddl
mov
jecxz
negl
pop
popa
repz
add
std
jno
cmc
mov
inc
into
pop
and
gs
inc
mov
jmp
das
pop
jge
icebp
dec
sub
mov
jns
imul
test
and
lret
jnp
lcall
pop
pusha
jno
jg
data16
mov
punpcklbw
aam
or
jge
jp
les
test
in
cmc
insl
aas
jno
add
scas
cwtl
xchg
dec
mov
xor
into
aaa
lret
adc
mov
push
mov
js
mov
push
adc
fstpl
pop
sahf
sub
in
testb
popa
mov
repnz
xchg
std
xor
inc
mov
xchg
or
fs
inc
add
stc
mov
mov
jno
shrb
movsl
cmp
xchg
cmp
rol
xchg
pop
decb
xchg
inc
in
inc
lret
insl
pusha
inc
cli
pop
cmc
adc
iret
add
xchg
es
sub
jecxz
iret
mov
adc
xchg
lcall
imull
lea
fs
lods
inc
clc
push
push
jae
xchg
frstor
xchg
xor
inc
leave
std
mov
or
xchg
sbb
cltd
imul
adc
and
repz
push
pop
inc
or
mov
adc
rcrl
push
cmp
jns
mov
fildll
adc
sti
les
testb
mov
lret
jge
sahf
xchg
xchg
dec
mov
lahf
lret
or
xchg
lret
std
shlb
pop
mov
push
rorb
push
inc
cmp
scas
in
shll
push
jmp
movsl
lea
out
lahf
pushf
xchg
jbe
cmpb
mov
fwait
mov
arpl
mov
lods
adc
xchg
sbb
mov
stos
cmp
adc
adcl
jmp
pop
xor
jnp
pushf
shrl
sub
inc
xor
mov
mov
stos
movsl
int3
fcomp
scas
and
pop
out
repnz
push
sub
pop
cmp
dec
imul
or
sbb
mov
lock
hlt
cmc
add
xchg
sbb
jb
in
rcrl
push
fwait
jmp
mov
mov
inc
lret
ljmp
push
push
iret
gs
scas
xchg
neg
aaa
mov
fsubr
pop
aaa
fld
mov
xor
mov
sub
bound
xchg
je
cmpsb
add
ljmp
loope
fsubrs
loopne
in
adc
xchg
push
dec
pop
sarl
xor
jbe
cld
mov
xchg
dec
cmp
cmp
fidivrl
pop
or
jae
or
or
stos
jmp
inc
repnz
xchg
sbb
into
out
mov
and
ret
xor
xchg
or
insw
insl
push
inc
dec
ljmp
xlat
pop
cmp
pushf
jmp
cmpb
sbb
xor
test
inc
ss
dec
jle
pop
mov
fwait
pop
in
and
push
mov
repnz
mov
mov
mov
das
mov
sahf
rol
enter
inc
adc
jb
adc
jle
mov
lock
into
push
inc
jmp
pop
push
stos
stos
mov
out
lcall
daa
pop
inc
add
out
leave
jne
sub
xchg
push
jmp
rol
outsl
aam
or
add
rolb
mov
aad
mov
cltd
or
pop
movq
fimuls
mov
fninit
into
imul
adc
popl
dec
inc
adc
pop
add
sar
call
push
pop
sahf
rol
int3
mov
mov
cli
push
xchg
pushf
or
pop
lret
and
jns
dec
adc
add
and
push
xor
dec
jns
sbb
cmp
mov
or
das
cmpsb
mov
mov
inc
xchg
jne
or
push
sarb
sub
push
bound
imul
rolb
push
jl
popf
ja
shl
fidivl
cltd
sti
cmp
cmpsl
lcall
fwait
add
cmp
addb
out
jns
sub
sub
mov
adc
repnz
pop
lock
jne
xchg
stc
pop
fcmovnu
push
stc
pop
jmp
sahf
je
adc
jb
or
shlb
mov
ss
in
cmp
xchg
les
dec
inc
ds
xlat
jbe
stos
js
je
sub
dec
imul
adc
andb
pop
mov
lods
xchg
or
ja
fidivl
pop
outsl
sub
jno
out
add
sub
lret
dec
outsb
xor
push
push
fwait
adcb
cltd
out
push
nop
and
push
nop
mov
inc
and
sti
mov
aad
lcall
jp
mov
add
mov
add
addb
cmp
dec
fidivs
popf
push
inc
addr16
and
aaa
mov
push
mov
cmc
mov
lds
cmp
ljmp
jge
fwait
test
inc
and
cmpsl
mov
dec
jmp
ret
cmp
and
aad
aas
add
into
je
cmp
add
nop
adcb
push
add
jno
cmpsl
inc
into
out
mov
cmpsb
subb
mov
ljmp
pusha
sti
adc
mov
add
xchg
lock
sub
push
or
ljmp
mov
inc
sahf
mov
inc
inc
outsb
cmpl
add
dec
jecxz
aaa
jmp
xchg
stos
xchg
pop
or
lock
jns
int3
enter
mov
add
push
scas
repnz
sbb
iret
ljmp
xchg
dec
push
fstps
pop
xchg
lds
in
inc
mov
adc
cli
add
hlt
hlt
inc
cmc
loopne
cmpsl
push
jge
adc
xchg
jo
sar
das
inc
subl
enter
or
and
adc
imul
add
or
mov
out
push
push
mov
or
jo
pop
jae
jnp
jno
sbb
popa
lods
push
xchg
add
insb
shrl
clc
xor
mov
movsl
in
bound
push
bound
cli
inc
aaa
int3
lea
or
mov
adc
incl
mov
lcall
sub
aam
cltd
sub
mov
push
pop
sti
dec
arpl
stc
negl
inc
cmpsb
pop
or
pop
dec
mov
push
push
or
addr16
les
pop
pushf
pop
leave
inc
sub
mov
sbb
dec
cwtl
mov
jg
out
pop
outsb
mov
fists
push
lea
mov
jp
enter
or
push
dec
mov
pause
stos
jecxz
inc
dec
jbe
cmp
addr16
pusha
aam
cs
pop
xchg
inc
rolb
shlb
out
push
sub
sub
cld
ror
mov
hlt
fucomip
aam
in
add
adc
mov
fsubl
pushf
mov
mov
and
jg
lret
ds
ljmp
xchg
int
xor
add
nop
push
clc
inc
add
lcall
daa
xor
icebp
fdivl
dec
jge
dec
push
call
jo
mov
mov
cmp
pop
stos
cltd
mov
pop
jo
popf
xlat
mov
sbb
movsb
adc
cs
jnp
out
xor
outsl
jbe
jns
xor
popf
xchg
sbbb
pop
mov
xor
sbb
jg
pop
mov
movsl
js,pt
iret
cmpsb
les
imul
cli
popf
imul
sub
adc
es
mov
rol
xor
xchg
mov
test
cltd
int3
sub
iret
and
dec
aaa
leave
add
mov
inc
xchg
push
pop
inc
cli
push
mov
lods
lock
mov
push
inc
xor
scas
pop
inc
push
cltd
xor
ficompl
push
in
pop
lahf
not
xchg
sub
pop
xchg
jge
dec
pop
cwtl
pop
bnd
popf
sbb
add
loop
imul
dec
lods
pop
icebp
mov
and
testb
aaa
inc
push
int
aas
and
movsb
inc
ja
enter
es
lret
insb
leave
pushf
xor
adc
dec
fs
lea
pop
cmp
inc
fldl
js
sub
cwtl
adc
xlat
jmp
out
ret
pop
and
jae
cmp
jbe
lret
cmp
fsubrl
xchg
into
clc
or
mov
push
mov
mov
sbb
jle
add
in
mov
sub
movsl
pop
aaa
out
scas
daa
fdivl
jne
mov
cmpsb
stc
mov
movsl
add
pusha
pushf
mov
cmpsb
adc
and
xor
shlb
sub
clc
jb
or
add
std
ss
xor
xor
adc
adc
dec
mov
les
ja
insb
imul
inc
xor
and
aam
mov
push
adc
adc
in
dec
lods
mov
test
dec
int3
xor
ret
ret
pop
pushl
mov
sarl
cwtl
push
fdivrl
mov
xor
es
in
lods
cwtl
popa
mov
or
cmpsb
sub
jbe
pop
mov
pop
jno
fisttpl
stc
cmp
out
rorb
xor
sub
iret
sbb
hlt
cld
jp
enter
jno
inc
insl
push
clc
jp
cmp
jo
sahf
repz
jge
insl
andb
pop
jmp
push
inc
xor
xchg
sbb
aam
test
sub
test
popf
into
push
pushf
call
andb
xor
loopne
loop
pop
cmp
cmpb
push
pop
loope
adc
je
pop
push
outsl
xchg
fs
xor
inc
fwait
shll
sti
push
test
push
lods
lcall
stos
ljmp
mov
aad
dec
scas
pop
fdivl
out
ret
leave
pop
movb
loop
xchg
ss
mov
rol
adc
inc
data16
test
and
fistl
sbb
sahf
test
pop
jle
inc
rorl
lcall
push
adc
and
jbe
push
stc
xor
mov
cmp
test
ja
jmp
push
nop
sub
stc
in
fs
mov
add
xor
ds
mov
loopne
es
and
push
cwtl
test
loope
sbb
jle
fisubs
into
inc
test
jecxz
movsb
movlps
jb
jg
enter
inc
xor
in
add
in
cltd
xor
int
add
stos
fucomp
out
jl
pop
xchg
lahf
daa
aaa
outsb
push
movsl
repnz
pop
int
xlat
aaa
xchg
in
or
aam
add
sub
xor
add
lret
pop
and
in
mov
test
pop
jnp
bound
mov
mov
sbb
scas
jmp
sub
scas
mov
adcl
movsb
in
imul
neg
dec
cmc
cmp
adc
cmp
adc
lds
cmp
fldl
cwtl
loopne
dec
ds
mov
adc
cmpsb
jle
aas
cld
and
mov
or
aam
data16
lcall
icebp
aas
mov
enter
insl
into
xor
add
ss
pushf
or
inc
xchg
xlat
ss
dec
adc
pusha
add
rolb
jae
push
loopne
mov
fstl
pusha
lods
lcall
loopne
in
movsb
mov
or
pop
xchg
shlb
scas
fdiv
cmc
cmp
sub
mov
mov
or
cmp
mov
shlb
or
mov
push
lcall
dec
js
mov
add
cmp
dec
test
ss
gs
out
pushf
and
jl
mov
pusha
jecxz
dec
dec
pop
outsb
jp
mov
test
insb
sbb
loopne
sbb
xor
sbb
sbb
jns
lock
push
pop
mov
push
int3
cmp
jae
aas
test
mov
das
or
xchg
lods
sbb
sbb
out
sbb
icebp
fmull
repnz
push
pop
addr16
jno
push
push
xor
add
ljmp
mov
insl
gs
daa
push
sbb
jae
mov
lock
jbe
and
inc
fdivrs
pop
mov
pop
test
dec
mov
pop
xor
aas
das
cwtl
mov
aas
jecxz
shl
rcl
cmp
inc
xorb
adc
adc
daa
gs
jae
mov
mull
lods
scas
add
data16
inc
fwait
popa
pop
mov
in
sbbb
dec
sub
mov
pop
mov
scas
cmpsl
xor
in
gs
adc
hlt
hlt
nop
jae
xor
mov
pop
push
lods
jge
inc
fistl
imul
movsb
mov
sbb
sbb
pop
ss
cld
or
insl
push
dec
pop
inc
inc
mov
je
orl
xchg
push
dec
cmpsl
sbb
push
jle
mov
sarb
cld
pushf
mov
push
in
mov
je
ja
lret
imul
jl
outsb
cmp
clc
popf
add
pushl
cmp
adc
mov
insb
xor
inc
xchg
repz
xor
mov
add
insb
in
cmp
cs
dec
inc
gs
cmpsb
mov
das
and
repz
push
stos
cmp
dec
cmp
repnz
push
xlat
pop
xchg
pop
scas
adc
xor
out
or
pusha
push
dec
nop
add
jb
push
sbb
jmp
or
add
fs
cld
in
lds
div
test
and
jle
jg
out
mov
cwtl
mov
jmp
dec
sub
lock
insb
loope
nop
or
loopne
lret
and
pop
push
imul
fldcw
arpl
cmp
push
xchg
cwtl
loopne
ljmp
push
in
cmpsl
shl
push
ret
icebp
jl
push
and
adc
pop
rcl
stc
xchg
and
lea
inc
aas
leave
arpl
leave
out
movsl
mov
pmaxsw
inc
fnclex
inc
adcb
mov
fdivl
pop
pop
push
push
jne
cmpsl
add
cmp
rorb
rdpmc
and
stos
mov
sub
cmc
in
and
pop
lods
in
mov
fucomp
push
lods
loope
cmc
and
cmp
mov
ret
gs
mov
jb
lahf
dec
shrl
inc
fbld
mov
fsts
addr16
pop
sbb
les
sub
ljmp
xchg
add
and
xchg
or
sbb
test
outsl
out
jbe
in
mov
int
mov
xchg
call
jae
lea
cmp
push
mov
sub
lret
and
movsb
js
jge
adc
stos
add
sbb
inc
dec
xchg
mov
xchg
sub
data16
pop
or
test
or
mov
aaa
sub
scas
insb
mov
sbb
adc
cmp
adc
lcall
clc
sbb
loop
xor
and
int3
mov
jmp
mov
cmpsl
mov
and
test
mov
inc
test
adc
fisubs
dec
jnp
mov
xchg
pusha
pop
rorl
lret
gs
xor
popa
iret
imul
es
sub
and
xor
dec
roll
or
push
lods
in
jno
sub
mov
repz
not
or
lret
cmpsl
daa
cmp
mov
or
push
fadds
mov
lock
sub
mov
je
push
aam
and
scas
out
pop
xchg
push
insb
xor
aam
inc
repnz
mov
push
aas
jle
scas
and
cmpsl
mov
push
je
les
dec
fwait
sahf
add
mov
mov
lret
decb
inc
rep
add
std
jp
cltd
outsb
jmp
and
pop
xcrypt-cfb
cmpsl
es
out
jp
xchg
fnsave
mov
xchg
adc
dec
lahf
testl
and
sub
and
out
dec
in
int
dec
inc
inc
cmpl
push
loop
int3
fwait
notl
mov
sbb
sub
add
scas
dec
add
stc
mov
test
or
mov
xor
test
adc
sbb
cmp
xchg
cmpsb
outsb
fiadds
shufps
or
test
cli
mov
ja
pop
and
jb
mov
ret
adc
inc
inc
mov
xor
xchg
push
ss
divl
sub
pop
mov
int
push
loopne
cmp
ret
cmc
mov
popf
mov
cld
idivl
stc
les
jbe
xchg
lds
outsb
xchg
into
xchg
repz
sbbl
pop
ficompl
mov
data16
and
mov
sbb
sub
push
insb
push
testl
jo
mov
pop
andb
or
repnz
insl
clc
xchg
jnp
gs
push
fcom
jns
shll
fptan
pop
cmp
fimuls
arpl
cmp
mov
push
mov
adc
mov
test
icebp
repnz
dec
add
mov
pcmpeqb
popa
fdivrl
sub
dec
decb
sarl
adc
sub
dec
in
ja
xchg
jecxz
xchg
es
aad
mov
rcll
pop
mov
lret
es
insb
out
push
stos
jnp
stos
push
push
dec
mov
mov
add
mov
test
int
lock
fisttpl
mov
insl
mov
xor
pop
push
jno
stos
shl
mov
daa
dec
cmp
pop
std
cmp
outsb
adc
jp
mov
xor
fs
fsubl
jbe
loopne
dec
mov
repnz
push
stos
mov
cmc
gs
into
pusha
scas
fmulp
inc
mov
shll
fidivl
sarb
mov
divl
cld
faddl
xchg
pusha
inc
test
pop
add
mov
call
rorl
notb
mov
out
loope
dec
inc
cmp
sarl
inc
adc
lret
in
cld
add
ficoms
jae
repnz
inc
mov
mov
sbb
pop
push
mov
push
xor
scas
iret
xor
enter
mov
push
test
sbb
or
xchg
mov
pop
pop
mov
imul
aam
mov
data16
xchg
add
ret
add
mov
dec
pop
test
bound
add
dec
test
clc
stos
sahf
aad
push
rcll
pop
xchg
rcrl
sarb
int3
out
or
pop
aaa
adc
jge
inc
pop
mov
imul
ror
xor
divb
sub
xor
push
sbb
rclb
push
xchg
testl
cltd
fsts
jl
mov
test
aam
mov
inc
mov
popf
xor
xchg
outsb
rolb
dec
adc
jb
rcll
xchg
shrb
inc
lahf
inc
fbstp
popl
repz
sub
cld
testb
pop
mov
imul
add
and
lods
push
repz
js
adc
jmp
cld
fs
dec
add
sbb
bswap
movsb
lcall
cmpb
sahf
js
addl
lret
xchg
outsl
in
mov
jp
inc
push
or
rclb
xchg
lret
add
jmp
jp
int3
add
cmpb
and
mov
cvtpi2ps
dec
leave
lahf
outsl
and
sbbl
sahf
scas
xchg
inc
jo
ret
jne
loop
insb
mov
rol
xor
cmp
addl
fsts
fstpt
dec
add
inc
dec
xchg
xchg
fistl
cmp
mov
pop
mov
mov
mov
pop
or
roll
sub
in
mov
sbb
jns
push
jmp
xor
sbb
daa
daa
mov
mov
mull
jmp
mov
repnz
lret
in
inc
and
cmp
mov
sbb
push
mov
mov
dec
mov
mov
aas
aad
lret
adc
xchg
mov
dec
cmp
outsb
push
rcll
jbe
pop
and
popa
fbld
sbb
fcompl
add
mov
into
xchg
xchg
js
in
and
add
mov
cmp
cmc
and
push
js
mov
sub
sbb
cmp
movsl
and
and
dec
fidivs
mov
loope
vpshlb
cmp
pop
les
cmp
add
inc
ret
add
or
arpl
mov
stc
scas
mov
add
loope
out
lcall
sbb
out
or
dec
sbb
adc
mov
pop
aaa
iret
add
and
xchg
lcall
popf
ds
jo
pop
test
pusha
hlt
cmpsb
adc
repnz
std
and
jne
inc
je
dec
push
and
clc
mov
daa
rcr
push
sbb
xor
rcl
repz
pop
jge
push
pop
addr16
fwait
adc
lret
js
lcall
push
inc
arpl
pmullw
sbb
xchg
lahf
fcmovu
pop
xor
mov
ficompl
mov
ljmp
and
xor
dec
call
popa
jnp
push
push
lgs
fidivrl
mov
insl
test
xchg
push
jmp
xor
dec
test
hlt
xlat
jnp
mov
pop
ja
test
lods
scas
out
inc
fldenv
lods
ljmp
repnz
scas
pop
jle
lods
ficompl
bound
pop
addl
pushf
flds
in
or
pop
stos
xor
cmp
pop
in
inc
dec
lret
sarb
ret
hlt
add
mov
fldcw
imul
sbb
int3
cmp
sbb
aaa
xchg
xchg
and
push
xchg
mov
and
sub
rorb
mov
xor
adc
pop
pop
in
iret
push
mov
jp
pop
enter
popa
arpl
dec
repz
push
and
ljmp
test
lret
or
mov
aas
cmpsl
das
xor
mov
push
mov
pop
or
mov
les
adc
xor
arpl
pop
jge
adc
xor
pop
popf
jge
jno
adcl
cmp
and
add
mov
mov
jnp
ret
movsb
mov
add
and
orb
ret
lods
shll
stos
cwtl
or
stos
pop
cmpsb
call
and
inc
pop
jae
and
xchg
jmp
mov
sarb
loop
jb
jl
ss
sub
popf
pop
push
adc
xchg
stc
adc
ss
mov
sbb
std
push
sub
lcall
mov
imul
lcall
jg
mov
aaa
push
test
shlb
jecxz
shlb
adc
icebp
adc
xor
dec
fnsave
push
lds
inc
fwait
lock
cmp
sub
jle
repnz
insl
inc
lret
inc
lcall
fwait
inc
mov
nop
repz
in
mov
testb
sarl
mov
andb
inc
lret
inc
pop
pop
push
mov
lret
arpl
xor
cmp
cmp
and
popf
xchg
push
adc
fists
inc
mov
pop
leave
xchg
push
popf
addr16
push
push
mov
aaa
jno
and
lret
sub
stos
pop
enter
sub
bound
xor
out
fldt
fld
cli
adc
cmp
insl
jo
jno
iret
adc
xor
rclb
std
pop
pop
scas
js
test
in
lahf
pop
xchg
loope
push
xor
sti
subb
lock
or
xchg
je
cmp
mov
pushf
sbb
mov
and
movd
cmp
push
dec
test
adc
sub
xor
hlt
mov
in
cmpsb
jmp
pop
mov
xor
add
adc
inc
dec
cmp
adc
add
gs
gs
daa
pop
xor
sti
dec
pop
and
mov
les
jp
jnp
fsubrs
sti
pop
insb
sti
insb
repnz
pusha
pop
lahf
clc
add
rcl
xor
sub
xchg
pop
mov
mov
ret
nop
push
in
mull
add
adc
push
test
or
jle
out
sbb
xchg
or
insl
int
sub
imul
pushf
dec
out
or
hlt
mov
test
mov
pushf
push
jno
hlt
lds
bswap
cmp
pop
and
mov
andb
loop
mov
push
add
test
and
outsl
xchg
pop
fwait
mov
pop
shrb
inc
jge
jne
enter
ljmp
clc
in
jo
adc
cli
push
dec
push
mov
adc
pop
movsb
pop
pop
jecxz
mov
lds
jbe
pusha
mov
sub
push
push
dec
add
imul
cmp
test
push
imul
jae
xor
sub
xlat
fabs
sub
pushf
add
clc
loopne
mov
mov
mov
xor
mov
mov
mov
xchg
xor
test
mov
stos
scas
call
repz
mov
mov
sub
push
ljmp
push
or
mov
mov
popf
mov
push
mov
ja
gs
fdivr
cli
loopne
mov
test
pop
popa
test
test
jns
lds
xorl
or
aaa
pop
cmpsl
jmp
inc
stc
jae
push
or
sbbl
sbb
addr16
fimuls
sbb
add
call
test
leave
sbb
inc
cwtl
xlat
popf
int3
pop
pop
lret
pop
push
xchg
push
mov
inc
pop
adc
add
mov
pop
lods
xor
rcll
pop
or
loopne
pusha
mov
movsb
jmp
jne
repz
adc
jl
mov
sbb
xchg
and
lods
push
pop
ficomps
in
sahf
sahf
lret
loope
push
dec
adc
inc
hlt
stos
ret
mov
sub
lods
test
push
cwtl
dec
dec
lcall
insb
inc
lahf
outsl
sahf
imul
sbb
lods
mov
decl
pop
in
xchg
and
sub
imulb
sbb
dec
push
ret
push
xor
test
push
movsb
imul
fwait
arpl
sub
cwtl
iret
stos
lea
repz
push
lret
mov
xchg
imull
dec
xlat
shlb
dec
pop
pop
stos
mov
pop
daa
xchg
mov
inc
jl
inc
test
stc
sub
xchg
xor
data16
xor
clc
fnop
loope
push
add
sahf
lock
int3
mov
les
aaa
sub
fbstp
mov
cmc
cmc
inc
add
out
sarb
push
sub
mov
arpl
push
pop
addb
bnd
mov
sub
cmp
scas
rorl
movsl
ljmp
push
call
adc
ljmp
dec
cmp
inc
sub
out
pop
inc
clc
jo
mov
stos
or
jns
cmpsl
loop
pop
scas
push
jae
fdivs
icebp
sub
call
xor
cmpl
fnstcw
push
jbe
iret
aam
je
pop
cmp
mov
scas
jge
int3
mov
mov
fcmovb
xchg
pop
lea
xchg
adc
jnp
xchg
mov
push
sbb
pop
rcrl
js
sub
repz
push
addr16
and
mov
fnstenv
int3
cmpsb
pop
outsl
and
js
out
pop
outsl
or
movsl
decl
push
xchg
and
jbe
inc
and
outsl
nop
pop
enter
jbe
push
sbb
push
es
push
popf
xchg
xchg
nop
jnp
adc
pop
mov
nop
repz
popf
mov
jb
int
and
dec
call
adc
push
sub
pop
xor
lods
fsubp
pop
fsubs
fimull
jmp
hlt
inc
dec
leave
notl
ret
and
lcall
xchg
jl
cli
std
push
sub
adc
dec
cld
aam
orl
je
cld
xchg
cmpsl
adc
in
push
xor
repnz
xchg
subl
rcr
xlat
cltd
and
add
mov
outsl
mov
ja
cmp
and
push
dec
jo
cmp
int
enter
inc
mov
ret
jge
add
and
sub
mov
mov
inc
vandnps
add
mov
dec
repnz
leave
cmc
xlat
aad
xlat
scas
and
sbb
test
jl
mov
xor
add
loop
rcrb
mov
shr
mov
out
push
or
ds
data16
jmp
cmpsb
jge
dec
call
xchg
inc
mov
and
push
fidivrs
pop
dec
jo
movb
mov
mov
imul
pop
dec
jbe
cmpsb
jnp
sub
mov
lea
mov
cmp
in
and
shld
pop
flds
jp
scas
call
test
mov
pop
cmp
mov
lds
hlt
into
int
shll
jbe
roll
cli
das
push
movsl
dec
push
sub
cmp
sub
shll
pop
fmuls
push
push
test
ret
cmp
sbb
xor
mov
mov
loop
cmp
jle
inc
xchg
daa
dec
jb
rclb
adc
flds
iret
mov
push
lods
sbb
or
js
xchg
lret
mov
jo
xchg
jb
out
idivl
pop
sub
out
imul
ja
roll
dec
jmp
popf
pop
test
add
jge
je
ss
jbe
cld
adc
mov
inc
or
fwait
xlat
fistpll
mov
dec
cli
stos
mov
pop
fmull
pop
mov
rcl
or
std
iret
cmp
xor
xchg
push
mov
dec
adc
push
push
cs
mov
add
adc
cmpsl
mov
orb
sbbl
xor
aad
popf
daa
movsb
push
sbb
mov
clc
xchg
cmp
jl
xchg
mov
lcall
fsubl
push
mov
mov
in
cmp
hlt
jg
xchg
jp
jecxz
dec
cltd
bound
int
call
out
jle
cmp
dec
mov
inc
and
out
mov
or
jge
jl
and
add
jle
mov
std
test
jbe
sbb
insl
sbb
add
dec
pop
mov
jge
outsl
stc
ret
imulb
inc
add
dec
pop
sub
fistps
out
int3
aaa
stos
mov
fucomi
pushf
sub
pop
popa
mov
xor
jnp
adc
movsb
hlt
into
loope
sbb
es
lcall
lods
adc
sbb
pushf
das
xor
inc
pop
and
mov
pop
add
push
or
inc
or
dec
je
mov
jl
frstor
mov
sti
inc
lock
cmp
loope
jmp
shlb
lea
adc
jae
jle
sbb
mov
stos
cs
adc
mov
xchg
cli
dec
int3
mov
cmp
addb
add
mov
fsubrl
mov
jmp
lcall
add
jno
pusha
push
dec
pop
jl
sbb
jo
in
cmp
dec
fwait
stos
and
push
push
dec
pop
dec
mov
xchg
mov
jmp
mov
dec
cld
repnz
aam
sbbl
call
jl
mov
aam
jl
pop
jae
add
fwait
jp
icebp
push
fstpt
cmp
ljmp
data16
cmp
mov
cltd
cmpsb
inc
cli
jl
ret
scas
imul
das
out
sub
cld
fistl
push
or
and
cmpsb
push
es
inc
mov
mov
sub
pop
popf
jne
sub
pop
stc
stos
lahf
add
push
cmpsl
fstpt
xchg
aaa
push
repnz
dec
adc
xor
adc
sbb
or
add
fs
gs
push
fcomps
jl
pop
add
or
adc
fiaddl
push
sub
fcoml
call
push
or
or
dec
fs
lea
jle
mov
mov
hlt
lret
in
sbb
int3
popa
inc
std
dec
inc
jl
push
sti
inc
cmpsl
adc
push
add
scas
ret
cmpsl
sub
fucomp
roll
and
inc
jns
sti
mov
sbb
ror
outsl
push
push
test
push
adc
movsb
jg
push
sub
das
iret
and
fsincos
push
test
cmc
push
xor
fbstp
rclb
sub
xor
ud0
dec
les
push
and
mov
xlat
loop
mov
or
add
cmp
aad
ja
inc
rcrb
insb
dec
adc
pop
rcll
loope
imul
mov
ds
out
in
fisubrl
add
inc
push
and
pushf
sub
test
idivb
test
sbb
dec
xchg
pop
sarl
lods
inc
xor
pop
gs
loope
lret
jle
jl
fwait
lea
pop
push
outsl
mov
mov
cmp
std
jecxz
outsl
in
hlt
and
out
mov
ficomps
outsl
imul
dec
xchg
jae
frstor
dec
jae
repz
dec
xchg
jne
and
jp
sbb
pop
mov
mov
dec
clc
xchg
adc
and
lret
ja
push
pop
ficoml
xor
stos
xchg
mov
das
inc
jnp
outsl
test
outsb
shlb
pop
push
xchg
imul
inc
inc
iret
dec
dec
sbb
jg
outsb
dec
cmp
inc
lods
aas
push
cmc
cmp
jae
xor
push
ret
mov
insb
jecxz
mov
aad
inc
mov
cwtl
mov
fsubl
movzbl
or
fnstenv
cmp
stc
in
cmpsl
pop
mov
push
fnsave
mov
xchg
cltd
loope
sub
adc
les
shll
ss
cmpsb
pop
mov
outsb
mov
jns
divl
lea
loopne
lds
or
cltd
mov
aad
adcl
dec
mov
pop
jae
jmp
jge
jb
and
push
jno
mov
jp
mov
out
daa
jp
and
add
aad
into
call
std
and
insl
add
hlt
dec
movsb
je
cli
cltd
pop
loop
insb
dec
cwtl
jb
fmull
xor
out
and
std
test
ja
push
cmp
cmpsl
les
and
lret
xchg
dec
ds
jle
pop
jo
or
sub
sti
lahf
cvttps2pi
sbb
add
dec
jp
pop
xchg
js
data16
vsqrtpd
int
or
mov
int3
mov
jl
xchg
pop
jno
add
daa
jo
mov
mov
inc
add
mov
add
movsb
shll
iret
push
mov
popa
ss
rcl
or
sbb
add
leave
push
xchg
mov
fidivl
sarb
pop
push
adc
add
ss
inc
std
pop
in
mov
loopne
fidivrs
test
sbb
fcomps
sub
rcll
push
ljmp
aad
pop
xor
fstl
and
mov
int3
jno
rolb
cmp
xor
int
cmp
add
mov
bound
loop
jno
mov
inc
cmpsl
jno
jae
es
push
psubusw
adc
xchg
mov
std
sbb
sub
xor
xchg
mov
xor
xlat
loopne
mul
pop
add
iret
inc
les
inc
fcmovbe
xchg
push
nop
push
and
add
loope
push
jne
ret
shll
inc
mov
imul
add
ja
sub
mov
push
orl
push
clc
or
lock
xchg
mov
xchg
gs
mov
dec
cmp
xchg
mov
pop
jb
mov
mov
xchg
pop
popf
jmp
push
cmp
test
mov
lds
test
call
sbb
aad
inc
lods
adc
sub
add
fistpl
mov
pop
rcll
pop
sub
fstpl
sbb
sbb
stos
add
mov
ret
mov
pop
test
cmp
pusha
push
xchg
push
scas
adc
fdivl
jmp
cwtl
je
movsl
bound
in
mov
mov
fmuls
fmuls
add
push
lds
cwtl
jae
insl
sbb
pop
sbb
jge
aad
sti
inc
push
leave
ljmp
sti
pop
inc
sub
sub
sahf
cmp
rcrl
pop
fisubrs
out
hlt
outsl
push
xchg
adc
lret
mov
sub
sbb
das
push
xchg
repnz
jecxz
xor
negb
ds
mov
lret
adc
xchg
dec
and
frstor
jecxz
lcall
push
andb
scas
mov
stos
jg
or
movl
out
mov
outsl
mov
aas
xlat
push
xor
sbb
imul
adc
mov
aam
cltd
and
sbb
jge
loop
fdivr
rorb
repz
adc
ret
shll
push
aaa
pop
stos
orl
push
out
int3
pusha
push
ja
mov
inc
outsb
iret
sub
adc
les
xor
pop
jmp
cmp
fldcw
je
stos
clc
pop
sahf
in
lcall
pop
stos
push
xor
mov
or
fisubrs
sbb
popf
pop
xchg
jp
mov
sub
cmc
in
pusha
push
fdiv
sub
lcall
xchg
ficoms
push
es
mov
dec
xchg
mov
xchg
popa
xchg
jge
loope
shrb
or
ss
fidivrs
inc
ja
ss
fs
aaa
xchg
ds
sahf
mov
or
pop
cmp
xchg
clc
dec
add
loopne
jno
sub
xchg
imul
cli
adc
sahf
push
lea
mov
nop
jae
push
jae
test
loop
repnz
push
out
pop
mov
mov
jecxz
scas
and
rorb
rclb
mov
ljmp
aam
inc
lret
xchg
scas
stos
sahf
inc
call
stos
fs
divb
dec
or
or
insb
je
mov
mov
push
adc
xor
inc
xchg
push
outsl
mov
mov
data16
adc
xchg
pslld
loope
sub
ds
cld
fistps
mov
xchg
add
adc
ss
in
adc
es
adc
adc
mov
mov
outsl
cmp
inc
cli
cvtdq2ps
dec
dec
adc
inc
sbb
add
mov
in
xor
int
mov
lds
js
outsb
imul
outsl
dec
pop
add
xchg
shll
incb
pop
push
xlat
cmpsl
add
rclb
cmpsb
ficomps
pop
pop
adc
mov
xchg
dec
sub
xor
cvtpi2ps
dec
out
cmp
popf
outsl
int3
clc
dec
enter
sbb
mov
int3
in
mov
ret
xor
or
arpl
lcall
adc
jne
cmp
mov
mov
mov
cltd
push
rcll
fldt
or
mov
push
pop
out
stos
rolb
lret
push
mov
pop
outsl
fucomip
mov
sub
mov
sub
leave
in
sbb
adc
mov
mov
sbb
pop
out
pop
mov
jbe
in
or
int3
scas
gs
js
fmull
jns
push
jbe
ret
jg
les
pop
push
ret
nop
xor
pop
repz
stos
stc
dec
fisubs
or
adc
imull
and
adc
sub
and
pop
pop
outsb
push
mov
mov
js
mov
push
mov
ljmp
test
ss
and
push
ret
jae
xchg
dec
pop
xchg
sub
xchg
xor
jbe
mov
loope
loop
imull
loop
scas
aad
xlat
test
std
lods
or
popa
sub
pusha
jno
pop
bound
ret
sbb
leave
in
mov
add
fldenv
xor
xor
mov
loope
int
jg,pt
in
and
mov
lods
dec
add
into
mov
adc
adc
loopne
mov
sbb
jmp
pusha
adc
add
xchg
jb
je
loop
nop
fidivl
xor
push
add
mov
pusha
aas
mov
inc
sbb
jae
mov
cli
xchg
call
lods
aaa
and
mov
sub
cltd
movsb
mov
div
dec
insb
sbb
lods
lahf
lcall
outsl
add
inc
xlat
testl
adc
and
out
movsb
sbb
adcb
mov
xchg
stos
test
mov
ss
push
inc
ret
pop
pop
cmc
ss
adc
out
pop
jnp
pop
mov
js
add
push
fisttps
inc
cmpsl
or
or
insb
sahf
inc
loope
mov
arpl
in
inc
in
mov
sbb
mov
mov
mov
ret
mov
pop
jl
hlt
lods
sub
int3
insl
jae
ret
inc
ret
imul
mov
push
es
stc
sti
xchg
das
pop
enter
xchg
inc
mov
mov
dec
cli
jae
xchg
test
jne
mov
push
push
lock
insl
pushf
inc
jp
mov
push
test
add
xchg
iret
mov
movsb
mov
push
jmp
add
mov
jg
adc
push
mov
sbb
adc
push
aas
lcall
ljmp
add
adc
dec
adc
in
aaa
roll
lea
in
cwtl
push
jae
shll
xchg
adc
les
mov
xchg
sub
scas
insb
adc
lahf
jne
adc
xor
scas
adc
and
mov
mov
and
sbb
sub
jbe
ja
out
mov
leave
cld
push
push
fsubp
dec
sbb
pop
inc
pop
jns
test
mov
lods
aas
and
mov
adc
sub
pop
push
pop
mov
adc
iret
cmp
jne
neg
dec
mov
repz
movsl
fwait
sahf
fmulp
pushf
pop
leave
imul
out
outsb
add
jae
cmpsl
push
scas
cmp
repnz
inc
roll
mov
repz
daa
xchg
jns
or
mov
popf
or
add
pop
pop
cmc
mov
nop
clc
sub
cmc
gs
push
or
pop
dec
cli
mov
push
sub
pusha
cwtl
pop
adc
cltd
nop
jne
dec
mov
push
jno
sub
fldenv
dec
mov
pushf
cmpsl
cmp
pop
push
mov
sub
add
jne
iret
jo
aam
es
add
pop
sti
xchg
mov
rorb
das
es
inc
or
add
inc
sarl
dec
icebp
mull
iret
mov
rorl
enter
ja
adc
lret
cmp
pop
ret
lods
mov
lods
ret
mov
lods
ja
jecxz
dec
fldenv
pop
mov
xchg
pop
lahf
das
sub
push
cmp
xor
jne
lcall
mov
mov
cld
pushf
test
jle
jae
aas
cld
cmp
adc
in
ret
add
pop
lret
dec
test
adc
mov
subl
xor
xor
fildll
outsl
cmp
and
mov
aam
sbb
das
iret
dec
xchg
popa
outsl
adc
test
xchg
fs
mov
pop
sbb
add
hlt
add
xchg
enter
sahf
jg
popa
rclb
jle
daa
dec
jb
in
inc
cmpl
in
sub
xchg
add
cmpsb
enter
testl
iret
push
xchg
sub
dec
rcll
sbb
sti
lock
imul
or
in
nop
adc
xor
repz
ss
lods
dec
in
imul
testw
ret
jb
and
cs
adc
mov
sbb
or
sti
lods
dec
inc
push
orl
xor
js
aaa
aaa
mov
xchg
stos
pusha
popa
pop
sbb
mov
mov
add
xchg
out
mov
sbb
loopne
aad
int3
cmpsl
ja
push
adc
jmp
nop
out
and
push
pop
add
and
clc
icebp
cltd
pop
adc
cmpsb
movzbl
sbbb
mov
cmpsl
test
adc
lock
out
pop
xor
imul
aaa
jo
ja
adc
jbe
fsubl
sarb
xchg
and
mov
fld
pop
jnp
pop
fucomip
pop
mov
or
es
add
jne
mov
aad
andb
cmc
stos
insl
stos
sub
loop
inc
xor
outsl
das
dec
test
cmp
std
test
ret
movsb
inc
call
sub
fwait
push
int
nop
in
test
lock
js
xlat
repnz
inc
pop
sub
ss
aaa
sbb
xchg
nop
lahf
sbb
rclb
xor
aas
jg
scas
mov
std
and
pop
sub
std
call
cmp
mov
mov
jp
mov
movsb
in
xchg
ds
inc
repz
xlat
xor
add
leave
fidivl
popa
movsl
mov
out
call
xchg
mov
mov
jecxz
pop
nop
add
pop
mov
and
or
sbb
std
mov
fnstcw
lock
mov
mov
jne
and
lds
xor
push
pop
mov
mov
pop
popfw
and
push
xchg
xchg
adc
ret
adc
gs
and
jecxz
jmp
pop
mov
das
cmp
jl
mov
bound
dec
inc
mov
loopne
je
push
sub
mov
cmp
ljmp
xor
jnp
jmp
sti
js
psubq
das
cmpsb
lea
repz
add
add
stc
mov
lods
adc
dec
pop
jns
fldt
lahf
adc
push
mov
cmp
fisttpll
push
add
or
mov
nopl
idivl
pusha
test
loop
mov
aaa
shlb
insl
dec
inc
pop
rcrb
cs
cwtl
popa
xchg
xor
ja,pn
jl
xor
scas
mov
pop
ljmp
mov
pushf
jmp
iret
test
inc
fstpt
fs
out
gs
dec
mov
in
popf
mov
iret
test
or
cwtl
add
sbb
ljmp
lahf
int3
mov
int
xchg
mov
mov
rcrb
push
cmp
xchg
adc
fimull
sti
mov
imul
mov
xor
push
add
inc
imul
orl
xor
test
and
push
push
out
popa
out
ds
aaa
aas
mov
bound
mov
dec
add
mov
fisttpll
icebp
lcall
mov
dec
es
xor
aaa
mov
cmp
mov
push
es
add
push
fsub
xchg
fstpt
xchg
lock
ja
mov
out
sbb
xlat
lods
bnd
insl
sub
addl
into
xchg
in
aas
mov
cmp
push
ljmp
xchg
jecxz
xlat
movl
or
add
add
xor
jg
mov
dec
or
leave
es
jge
in
sbb
in
js
push
pushf
addr16
pushf
popf
push
in
jle
data16
std
shrb
mov
stos
lret
or
pop
scas
add
push
shrl
push
stos
rcrl
lds
repz
push
popf
mov
imulb
fst
ljmp
xorb
out
add
push
xchg
repnz
jnp
push
loope
xchg
pop
nop
mov
pop
fsubp
lret
ja
hlt
cmp
cwtl
test
mov
push
lret
testb
adc
and
lods
ret
xchg
pop
aaa
jmp
cmp
mov
or
push
outsl
stos
int3
mov
dec
call
jmp
push
lret
rolb
cmpsl
fsubl
inc
xchg
dec
adc
ret
inc
mov
imul
in
dec
xor
test
sub
shll
or
jbe
rorb
int
pushf
push
cwtl
sahf
adc
fs
jmp
lods
in
shrl
inc
fiadds
xor
or
or
pop
dec
inc
sbb
clc
mov
adcb
push
inc
mov
mov
push
pushf
in
cs
movsb
add
inc
mov
sub
test
xchg
xchg
sbb
aad
xlat
mov
test
out
mov
cmpsl
testl
insl
inc
mov
out
and
sub
imul
lods
outsl
mov
int3
xchg
lea
adc
cmp
movl
movb
movsb
lea
dec
cmp
mov
adc
pop
inc
ljmp
cmc
jge
mov
or
mov
jb
scas
cmpsb
push
jmp
jne
iret
fwait
xchg
jmp
mov
adc
xor
xchg
repz
stos
arpl
pop
or
sbb
cmp
aad
dec
pop
xor
fcomi
or
cwtl
dec
and
mov
mov
ret
xor
sti
loop
pushfw
mov
cmp
pushf
adc
mov
inc
fwait
sahf
addb
or
clc
sub
pop
jmp
jg
scas
rol
pop
adc
adc
dec
out
pop
mov
mov
popa
gs
mov
mov
mov
inc
mov
outsl
repz
push
mov
mov
push
jns
jnp
sbb
stc
mov
out
into
popf
xor
cmpl
cli
push
ss
sub
add
cs
test
jae
jnp
stc
lahf
mov
dec
mov
je
xchg
or
mov
outsb
sub
cmp
mov
cmp
xchg
jae
in
popa
cmp
mov
int3
aas
cmp
mov
adc
pop
popf
or
jmp
mov
iret
push
fldcw
pushf
aas
cld
popa
pop
pushl
push
mov
lahf
into
cmp
jmp
repz
jmp
xchg
mov
and
test
mov
inc
push
hlt
rcrl
loopne
es
push
fwait
or
ret
jno
pop
lret
into
fs
sbb
sbb
inc
shlb
push
cmc
mov
rolb
push
imul
add
sbb
inc
mov
push
xchg
push
sub
mov
xchg
push
and
push
add
outsb
jo
or
int
fstpl
or
cmp
jo
push
push
in
aam
xchg
cmpsl
jbe
mov
adc
add
ds
in
lahf
andb
call
out
fldl
pusha
jne
out
aaa
jmp
cmp
add
loop
ljmp
mov
xchg
cmpsb
icebp
xchg
out
push
add
dec
subl
in
nop
mov
sbb
loopne
movsb
enter
xor
adc
mov
fmul
sbb
xor
push
sub
stos
test
xor
sbb
and
jne
xor
dec
ljmp
pop
insl
loopne
aaa
add
sti
mov
xlat
lret
hlt
fidivl
cltd
add
enter
and
jae
lcall
adc
popf
test
jb
add
jae
nop
aaa
call
test
jmp
clc
dec
dec
mov
xlat
adc
inc
xchg
jge
pop
cwtl
mov
or
inc
aad
into
adc
sbb
ljmp
xchg
and
xchg
out
bound
push
and
jge
in
cld
js
xchg
adc
pop
das
dec
test
sbb
cs
mov
test
xchg
sbb
inc
dec
jnp
xchg
sbb
pop
xorl
mov
sub
mov
sti
lock
ffree
jle
test
and
adc
je
xor
in
cmc
loope
push
sub
inc
shrl
insb
std
sbb
and
jno
adc
mov
scas
arpl
pushf
or
in
cmp
fs
fdivrs
pop
lea
jg
adc
je
stos
in
stc
aam
stos
mov
jno
in
dec
jbe
push
jge
test
inc
mov
push
lock
popf
in
fwait
adc
jmp
and
xchg
bound
int
es
add
lret
scas
xchg
cmp
xchg
aam
add
mov
ret
sub
add
dec
test
mov
lock
test
lret
int
call
sbb
pop
dec
mov
das
jp
lahf
sti
add
mov
and
jbe
mov
xchg
and
pop
mov
imul
nop
sbb
aam
nop
mov
into
cmp
imul
ljmp
push
es
jae
pop
fwait
push
mov
cmp
popa
test
movsl
imul
cmpsl
inc
mov
mov
inc
aam
rclb
jmp
ficoml
movb
add
fcoms
push
push
out
repnz
into
mov
inc
mov
lret
fwait
xor
lods
das
or
fldcw
imul
jne
orb
and
mov
mov
imul
and
lcall
xor
dec
mov
sub
add
sub
ror
ficoms
cld
mov
les
and
push
test
inc
mov
in
sub
pop
or
lea
int3
enter
ret
xorb
inc
mov
dec
pusha
out
std
out
addr16
jns
xor
jge
adc
divb
pushf
popa
cli
push
dec
mov
cli
inc
call
ljmp
sahf
and
pushf
adc
sbb
std
shll
inc
inc
pop
push
mov
cltd
mov
js
pop
shll
push
leave
push
xor
xchg
and
arpl
fsubrs
and
add
and
hlt
out
push
sahf
ss
push
mov
pop
pminsw
pop
mov
je
sub
test
dec
mov
gs
dec
inc
mov
and
lret
or
cmp
iret
and
push
dec
cmp
adc
aas
xor
jl
mov
out
fmull
adc
sbb
pop
test
aam
xor
mov
push
xchg
xor
jnp
fld
lcall
jp
add
inc
stos
xchg
or
inc
inc
mov
mov
sti
pop
push
lcall
arpl
leave
sbb
lret
stos
jmp
ret
cld
nop
incb
shl
adc
mov
pushf
repnz
or
mov
mov
repnz
test
xchg
jne
lods
lret
push
push
js
cmp
aaa
mov
into
dec
sbb
pop
xchg
sbb
or
out
test
xor
jno
sti
or
push
or
jmp
loop
add
outsb
jbe
and
lret
push
pop
in
mov
cmp
mov
es
stc
inc
test
testb
cld
lods
xlat
inc
inc
cmp
pop
mov
mov
pop
clc
icebp
scas
sub
mov
sbb
cmp
dec
jmp
outsl
push
lods
outsb
gs
imul
call
jns
mov
loopne
aaa
sbb
pop
add
in
mov
daa
mov
pop
iret
mov
mov
scas
or
ret
and
sub
pop
jo
and
mov
lahf
ja
dec
mov
inc
push
cmp
mov
int
int3
push
pop
iret
sahf
push
adc
subl
imul
xchg
rcrl
pushf
sub
mov
fwait
mov
ljmp
cs
sbb
fdiv
pop
xchg
and
andl
hlt
sub
std
dec
call
push
neg
insl
mov
popa
pop
imul
lods
sbb
outsb
leave
xchg
lea
les
or
sub
addb
mov
insl
ljmp
mov
push
cld
fwait
orb
out
mov
mov
xor
imul
int3
out
sbb
cmp
inc
sbb
cwtl
or
jbe
rclb
and
cmp
popa
add
xorl
rcrl
mov
push
xor
jl
push
roll
dec
cltd
movaps
fidivl
pop
fcoml
push
aaa
push
insb
pop
and
inc
push
pop
mov
and
and
add
ljmpw
incb
lcall
popa
adc
mov
jo
sbb
cmp
xlat
or
jmp
sub
push
std
gs
dec
mov
dec
jl
lock
xlat
mov
dec
in
pushf
sbb
scas
pop
xchg
or
push
scas
leave
xor
or
push
movsl
push
mov
jne
push
add
in
sub
and
in
sub
cmpsl
push
testb
je
mov
sub
jae
dec
inc
lods
dec
xchg
or
cmpsb
fbstp
dec
push
or
into
sub
inc
jae
insl
cwtl
lds
call
push
xor
inc
dec
jne
test
out
pop
sub
push
cwtl
dec
or
mov
sbb
test
push
popf
scas
mov
pop
mov
jo
mov
and
addr16
out
mulps
nop
pop
pop
aam
sahf
pop
cmpsb
or
push
push
mov
stc
ja
cmp
xor
data16
fildll
push
cmpsb
sub
adc
sub
jo
adcl
mov
dec
fistpl
mov
inc
add
xlat
shrb
mov
push
mov
adc
dec
or
dec
rcrb
xchg
adc
xchg
pusha
mov
pop
pop
mov
or
stos
and
dec
cmpsl
lods
ss
call
int3
repnz
lods
and
xor
jle
fs
sbb
dec
push
rol
in
ss
cs
inc
push
stos
ja
xor
in
lret
fldpi
push
test
sub
out
mov
pushf
insl
push
add
cltd
push
xchg
sub
out
xor
pushl
in
fcmove
faddl
push
cmp
jno
rol
loopne
xchg
clc
sub
sub
popf
fsubrs
out
sbb
test
cmp
int
sar
les
mov
hlt
xorb
inc
jns
mov
cmp
push
roll
clc
iret
cmp
fwait
and
push
rep
push
push
lds
mov
rorl
sub
gs
cli
jge
neg
jg
imul
mov
outsl
outsb
add
dec
pop
inc
and
push
sbbb
js
sarl
call
xor
or
and
adc
add
pop
jl
and
cltd
ljmp
icebp
jge
je
push
outsb
popf
mov
mov
xor
ret
inc
pop
fcmovbe
in
push
test
push
push
aaa
mov
hlt
jb
cld
push
pop
push
mov
sti
in
pop
hlt
ds
js
loopne
add
bound
mov
mov
mov
inc
decb
mov
mov
sub
xorb
nop
sti
push
jg
sub
fnstenv
mov
imul
out
xor
in
insb
push
inc
std
add
mov
sbb
imul
jl
or
aad
popa
inc
lea
sub
subb
dec
jne
pop
jmp
jmp
add
repz
das
out
add
xchg
jb
es
push
jo
pop
loopne
call
xlat
aad
imul
mov
insb
fmul
jl
fists
aad
and
and
mov
les
scas
lock
cmp
cmp
movsl
adc
or
or
jne
stos
push
jns
xor
pusha
and
xor
jnp
sbb
aad
test
mov
shrl
popa
lahf
jb
test
shrb
stos
pop
xchg
je
adc
loop
fidivrl
inc
mov
dec
dec
jmp
andb
insb
int3
out
dec
fstl
dec
jle
pop
push
xlat
fdivs
lds
xlat
sub
dec
aad
mov
add
cwtl
imul
jg
mov
das
fildl
dec
call
aam
and
or
xor
cmpsl
add
and
lret
js
and
pop
fiadds
push
cli
lods
lcall
pop
mov
or
or
sti
inc
outsb
loopne
scas
pop
dec
in
cmpsl
addb
xor
cmp
fsub
lret
test
jg
jno
in
push
sti
les
fistpl
push
pop
aad
movsl
rcrl
mov
in
jae
ror
jmp
or
arpl
xchg
or
movsl
pop
lock
jle
inc
andl
jp
js
cmp
xchg
push
jns
jmp
sbb
xor
inc
inc
std
test
pop
imul
mov
dec
xadd
push
xor
outsl
in
frstor
mov
mov
pop
jmp
add
or
push
cltd
cmpsb
mov
addr16
sub
inc
in
xor
dec
inc
in
sahf
jbe
int3
les
dec
jne
and
or
loopne
pop
cld
dec
add
test
jo
adc
sub
mov
fcompl
pop
inc
add
fcmovnu
xor
fisubs
or
sbb
pop
lock
and
lcall
dec
push
in
insl
aad
aaa
imul
lret
lret
cmpsl
fadds
enter
push
mov
mov
mov
mov
or
ja
pop
dec
mov
roll
dec
loope
fldl
xor
fwait
cwtl
movsl
mov
xor
loope
rolb
cmpsl
mov
pop
mov
xor
sti
cmpsl
gs
xorb
fmuls
nop
jecxz
xor
dec
enter
jns
mov
mov
ss
jp
nop
lea
inc
stc
mov
sub
push
add
adc
in
jg
mull
aad
loopne
rcrb
cli
mov
cmpsl
sub
out
jl
sahf
aas
jg
mov
jle
imul
loop
fidivrl
bound
jecxz
fdiv
inc
push
mov
sbb
jmp
mov
cmc
in
xchg
imul
inc
or
jno
adc
jo
mov
test
pop
sub
shlb
dec
xor
push
or
das
sbb
iret
push
jge
push
cmpxchg
jnp
xor
rcll
mov
jns
adc
xor
dec
clc
in
cmc
add
sub
pop
fldt
add
mov
insl
dec
mov
adc
inc
adc
ret
pop
sbb
cs
mov
test
push
loop
adc
lcall
dec
in
inc
fsqrt
mov
jle
daa
ret
cmp
cmpsb
mov
cwtl
mov
mov
xchg
xor
lret
ficoms
aam
push
dec
adc
in
xchg
fidivrs
bound
push
int3
cltd
inc
js
pop
cmp
cmpsb
outsl
jmp
repnz
xor
sbb
add
pop
ss
lret
jl
pop
jmp
pop
xor
movsb
jge
cmp
ret
mov
xchg
outsb
cltd
dec
les
mov
push
loop
aad
jmp
cli
xchg
adc
and
mov
adc
mov
mov
xchg
gs
push
stos
sbb
sbb
mov
loopne
sbb
std
hlt
inc
pop
dec
adcb
xchg
popa
cmpsb
pop
mov
pop
imul
lcall
add
mov
mov
ds
add
scas
inc
mov
or
neg
cmc
xchg
push
aam
outsl
lods
sbb
pop
je
sbbb
xchg
sti
rcl
inc
adc
mov
sbb
xchg
lock
stos
jmp
or
add
ret
sar
repnz
test
xor
insb
hlt
sahf
jno
push
inc
notl
sub
adc
mov
sbb
shl
ficoml
jmp
push
adc
sbb
pop
je
sbb
lock
rolb
push
mov
push
jle
in
jge
arpl
arpl
or
cmp
add
hlt
movsl
inc
jge
push
add
gs
lret
mov
lret
loop
sub
ret
jb
xor
leave
incb
popl
fwait
push
fadd
lds
pop
sbb
and
loop
mov
push
arpl
idivb
push
andl
in
test
or
push
pop
xor
mov
fiaddl
mov
fstps
les
cmp
xor
pop
clc
pop
pusha
lahf
sbb
dec
sahf
push
xor
xor
xor
cmp
test
jb
movb
sar
movsl
mov
jns
or
mov
aad
mov
lock
pop
lret
sub
aas
cvtdq2ps
addr16
jb
imul
jg
fst
rorl
cmp
xchg
jmp
in
and
mov
mov
jge
sti
leave
xchg
pop
idivb
pusha
out
andl
and
xchg
aad
jecxz
dec
and
sbb
xor
cmp
int
and
test
add
sahf
push
pop
jno
js
into
cmp
and
inc
inc
jae
nop
sub
push
js
das
stos
in
decl
jecxz
add
mov
daa
push
jbe
push
fbstp
leave
jo
es
adc
push
pop
inc
sub
pusha
out
jmp
insl
roll
ss
ja
enter
fildll
push
adc
in
outsl
push
mov
xor
mov
loop
call
push
push
jl
scas
mov
nop
xchg
dec
aad
mov
push
push
pop
int
pop
jb
push
xor
jne
shlb
pop
test
cmp
jo
xchg
in
xor
imulb
push
or
fnstenv
lret
test
inc
cmp
mov
lds
lods
jne
les
xchg
mov
repnz
in
ljmp
incb
lahf
mov
fs
mov
and
test
lock
push
stos
hlt
mov
pushl
rcrb
xlat
xchg
imul
dec
mov
inc
pop
pop
fcoml
test
xchg
and
fsts
dec
xchg
xor
dec
pusha
imul
xchg
push
addl
push
mov
lret
sbb
call
xchg
mov
xor
jno
xor
dec
inc
pop
push
adc
xchg
xlat
std
cmc
aam
sub
cmp
loope
rcr
call
imul
adc
xchg
and
cmpsb
mov
mov
std
xor
sbb
push
push
fldcw
and
test
mov
sub
xchg
xlat
mov
arpl
stc
mov
mov
fldcw
fs
int
lret
jbe
dec
or
mov
ret
cld
adc
jno,pt
fidivs
enter
push
scas
add
adc
data16
and
stos
aam
inc
mov
cmp
sub
loopne
rclb
inc
cwtl
adc
dec
cmpsb
push
out
sti
in
sbb
ja
sarl
jp
dec
mov
sbb
rcrl
je
push
jecxz
imul
std
movsl
sub
pop
sub
adc
shrb
out
mov
in
jno
insb
mov
test
lahf
mov
or
imul
xor
pop
stos
lcall
or
lods
jecxz
inc
xor
jmp
mov
ret
adc
lods
sub
movsl
sbb
imul
cld
pop
scas
adc
pop
popa
mov
sbb
or
pop
clc
jge
out
and
or
dec
shrl
rcll
dec
inc
cmp
or
bound
push
or
call
push
sub
xchg
adc
fs
movsb
jmp
mov
add
loopne
cltd
push
test
mov
inc
aad
inc
mov
in
icebp
pop
sub
cs
push
mov
add
sbb
mov
xchg
adc
jae
repnz
or
aad
sahf
in
pop
fwait
cld
xchg
cmp
je
inc
mov
mov
loop
shll
jge
mov
mov
pop
aad
mov
cmp
pop
ds
mov
daa
xchg
xor
pop
repz
mov
xchg
pusha
das
sub
sub
push
out
mov
add
cmpsl
cmp
lds
xchg
sub
jmp
xor
std
and
push
ret
lret
add
loopne
popa
out
mov
fisubrl
pop
mov
mov
ljmp
cmp
pop
push
push
mov
mov
xchg
mulb
xor
scas
inc
pop
dec
fwait
outsl
cltd
or
sbb
insb
je
cmp
pop
leave
sbb
cli
inc
imul
es
and
mov
das
pop
pop
inc
dec
inc
es
xchg
mov
and
inc
adc
nop
insb
mov
mov
insb
ja
add
xchg
or
pop
mov
xchg
jns
fdivp
push
iret
xor
repnz
out
repnz
sub
mov
cmp
jbe
pop
push
cmp
daa
sub
cmc
pop
adc
sub
sbb
dec
fisubs
call
fstps
mov
or
or
cmpsb
jnp
push
mov
rol
rcrl
and
movsb
test
lods
pop
lret
int
mov
dec
push
jecxz
adc
sub
aam
lds
scas
fildll
daa
movsb
pusha
jl
jl
stc
cwtl
fstpl
mov
repz
gs
jmp
push
aas
mov
push
daa
addr16
jb
dec
mov
in
mov
imul
xchg
lea
insl
adc
mov
pushf
lds
lret
add
stos
or
mov
into
js
mov
sbb
loope
fcmovnb
lods
adc
sbb
add
into
inc
test
adc
cltd
sub
jo
cli
mov
sub
jmp
cmp
dec
arpl
rcrb
aas
sbb
lret
pop
test
lcall
xchg
repz
shrl
stos
add
and
movsb
push
fsts
jge
int
out
mov
in
or
fs
and
aad
xor
cmpsb
mov
lret
repz
fwait
addr16
lds
in
lock
test
jl
and
xchg
mov
cmpb
fmull
xchg
in
cs
loopne
lret
push
add
cld
imul
sbb
rol
or
xchg
push
add
ror
mov
out
pop
dec
aam
decb
mov
popf
roll
mov
inc
jb
and
add
cli
aaa
mov
mov
mov
jbe
test
add
push
sbb
push
xorl
push
ja
mov
add
inc
xor
jno
call
sbb
add
out
arpl
pushf
inc
inc
and
rcll
pop
cmpsl
mov
add
and
cmpsb
and
inc
xor
and
js
jae
adc
adc
aas
adc
push
jae
push
iret
enter
add
out
shll
push
popf
pop
push
push
push
sub
test
dec
cld
scas
in
xor
addl
and
xor
xadd
ficoml
inc
cmc
and
push
inc
mov
fwait
mov
add
cld
add
test
jp
filds
push
pop
xchg
mov
enter
pop
or
inc
aaa
pop
icebp
push
cmpl
xchg
roll
int
mov
imul
sbb
pop
mov
aaa
pusha
out
inc
in
shrd
jge
scas
pushf
cmp
cld
inc
xchg
sub
and
jns
adc
mov
test
mov
rclb
fcoml
out
push
xor
ficompl
jl
push
sahf
fs
push
mov
push
popa
mov
jne
cmp
push
std
cmp
cli
fs
fsub
add
inc
and
and
std
or
push
pusha
xlat
jne
rcll
mov
and
xchg
addr16
adc
fistpll
cltd
push
jbe
or
sbb
jns
out
test
out
scas
mov
ret
pop
movl
cld
pop
aad
ret
rol
pop
push
lods
loop
xchg
aaa
mov
hlt
ss
jno
dec
add
outsl
loop
lea
xor
stos
stos
mov
pop
cwtl
pop
js
enter
loop
xchg
sub
popa
std
lods
pop
push
scas
inc
stos
insl
jne
hlt
jmp
out
cmp
arpl
fidivrl
fxch
mov
dec
insb
cld
add
dec
adcl
dec
cmp
mov
popf
loop
pusha
xor
sub
adc
fsqrt
aaa
iret
inc
push
les
sar
outsb
push
sub
ljmp
push
into
int
push
sub
push
push
out
insb
jae
jo
into
les
mov
fcoms
mov
pop
push
stos
add
jp
hlt
pop
mov
jl
mov
in
insl
xchg
pop
lret
iret
dec
stos
stos
push
pop
les
test
push
or
jl
inc
mov
pop
push
jno
mov
pop
mov
adc
mov
pop
inc
insl
iret
cmpsl
inc
in
pop
sub
lea
ljmp
mov
popf
push
jns
push
sub
xor
push
jg
repz
xchg
adc
jl
or
mov
or
add
xor
ds
int3
ds
mov
pop
sub
pop
cmpl
mov
loopne
mov
ss
mov
mov
push
aas
notb
push
inc
sub
fisttps
adc
fwait
sbb
shlb
pusha
and
pop
sub
push
mov
std
into
inc
cmp
imulb
dec
jmp
xchg
rcrl
lcall
lret
imul
mov
or
mov
dec
outsb
and
push
or
or
idivb
gs
jo
mov
xchg
das
xchg
push
ret
and
sahf
push
iret
sbb
cwtl
ja
push
in
jmp
adc
imul
and
cli
insb
loop
repnz
repz
inc
ljmp
and
xchg
jnp
push
cmp
xor
addl
nop
jg
push
xchg
push
add
adc
mov
cmpsb
pop
movsb
push
adc
pop
push
hlt
inc
sub
sbb
lds
sbb
scas
test
and
mov
mov
inc
sub
mov
pop
cmp
jae
xor
mov
dec
ss
repz
rorb
jl
popa
push
push
cmp
rol
jae
inc
cmc
out
fistpl
cli
jns
loopne
ret
shll
rol
adc
push
and
jbe
jbe
add
and
enter
mov
dec
mov
jae
les
push
sbb
cmovns
in
aam
xor
sbb
jae
ds
das
push
inc
xor
aaa
or
insl
sti
mov
inc
adc
inc
insb
lods
jo
pushf
cmp
ret
pop
inc
jnp
add
inc
mov
inc
sub
xor
rcrb
xlat
loop
add
imul
adc
push
aaa
mov
sti
out
les
call
xchg
sahf
push
data16
sbb
xchg
pop
mov
daa
int
mov
hlt
scas
inc
fnstsw
cli
pushf
pop
push
imul
adc
jl
push
pop
out
xor
lea
cmp
shll
lds
cmpsl
mov
jmp
mov
aas
xchg
push
hlt
call
scas
in
cwtl
popf
xor
fisubrs
movsb
xchg
lods
inc
cmp
xor
dec
sub
addb
cwtl
xchg
or
mov
push
xchg
daa
mov
sbb
and
outsb
in
js
mov
push
push
jno
int3
aam
inc
loope
push
popf
mov
fs
lea
scas
js
cmpsl
sub
adc
xchg
cmp
fstpt
pop
or
inc
xchg
xchg
mov
cmc
and
cmp
fwait
inc
mov
rclb
xchg
cmp
popf
aam
and
push
or
mov
ja
dec
fldenv
arpl
pop
lcall
inc
orl
movsl
sarl
gs
inc
xchg
jmp
push
leave
shrb
sub
sarb
lods
and
in
and
aas
test
movsl
cli
movl
mov
cld
aad
pop
test
jge
lea
rclb
jmp
or
add
sahf
inc
pop
cmp
mov
addr16
inc
loop
push
xchg
xchg
jb
and
or
sarb
dec
xchg
pop
sarb
sub
xor
and
add
mov
xchg
jns
in
or
jo
xchg
addr16
dec
or
sbb
imul
inc
mov
push
cmpsb
ljmp
ror
add
push
sub
add
and
xchg
cmp
aad
or
shll
sarb
jp
jns
jg
jb
jmp
mov
add
jne
dec
dec
cmp
jbe
cmpb
push
cs
sbb
rcrb
ret
les
dec
or
incl
aaa
lods
push
in
int
fbld
lahf
js
mov
or
sbb
sbb
popl
pushf
sarl
push
adc
and
dec
adc
cmpsb
xor
mov
inc
adc
and
sub
mov
sub
dec
and
and
or
jne
mov
addr16
shlb
cmpsb
into
sub
psrlw
lea
sub
xchg
adc
pop
mov
push
cmpsl
dec
loopne
mov
shlb
sti
testb
mov
push
mov
aad
push
or
fists
mov
lret
push
jnp
daa
fstpt
enter
fbstp
inc
push
adc
and
push
mov
incl
sub
sub
push
xchg
jmp
pushf
sbb
cmp
sbb
pop
test
ret
into
leave
shll
aam
stos
jmp
jl
sbb
mov
movsb
daa
fmuls
xlat
fmuls
movsl
dec
push
clc
in
out
testb
out
inc
jge
xchg
js
or
decl
repnz
nop
fsubrs
ror
lods
cmp
pop
in
mov
and
mov
cmp
push
xor
jge
xor
jne
dec
lods
aaa
or
pop
pop
clc
ss
das
lret
jl
mov
pop
adc
cltd
push
pop
push
insb
addr16
gs
daa
jno
mov
cmp
outsl
jne
or
push
repnz
call
imul
dec
adc
mov
xor
inc
mov
sbb
cmp
test
outsb
cmp
movsb
cld
and
cmp
sbb
cmpsl
dec
adc
leave
mov
lds
sub
sbb
mov
xchg
mov
or
data16
jg
or
cmp
xchg
mov
mov
pop
xchg
sbb
jl
push
xchg
cmp
mov
cmp
gs
pusha
fs
push
pop
mov
jno
add
dec
hlt
cld
adc
fnsave
pop
popf
dec
lret
adc
out
add
fistpl
cmpsb
mov
and
jno
inc
lea
ficomps
and
fwait
cld
xchg
inc
and
in
cmp
and
push
add
ja
lea
lock
shll
iret
popf
add
fwait
push
sbb
push
dec
lcall
cmp
mov
mov
fnstenv
nop
pop
rcrb
mov
push
fstpt
mov
sbb
jae
adc
and
push
push
in
inc
pop
jle
cmc
cli
or
outsb
push
adc
add
push
popa
scas
pop
add
pushf
adcl
fidivl
add
xchg
sub
inc
loop
dec
sub
mov
test
jne
out
rorb
mov
in
mov
or
cld
or
movsb
mov
les
ds
loope
jns
dec
outsl
mov
fadds
add
rcl
dec
test
pusha
sahf
scas
jnp
test
jg
idivl
jg
mov
lods
dec
adc
and
adc
mov
fcoml
gs
shlb
rol
cmpsb
cmpsb
jecxz
jecxz
jmp
cmp
push
imul
orl
out
js
mov
add
test
hlt
int
aas
inc
sti
mov
pop
push
jne
push
inc
dec
xor
pop
sti
mov
push
xchg
mov
das
fs
insl
mov
jp
sub
sti
aad
loope
mov
test
test
out
push
xchg
sbb
cmp
pop
test
and
sub
outsb
call
pop
fwait
in
xchg
mov
and
decl
sbb
arpl
test
pop
inc
mov
and
xor
jecxz
orl
addr16
sub
fincstp
sub
sbb
add
xchg
sub
sbb
pop
push
lods
pop
xlat
mov
dec
shl
sbb
jmp
xlat
adc
jmp
mov
in
adc
js
js
pop
xor
scas
pop
in
xor
in
and
xor
loop
ss
decb
xchg
je
pop
adc
into
mov
leave
inc
xchg
xchg
inc
pushf
sbb
clc
aaa
fistl
adc
dec
or
push
rcll
dec
out
outsb
xor
aaa
mov
mov
cmpsl
cmpsl
jbe
outsb
push
and
ss
iret
add
pop
inc
cwtl
mov
sbbb
xor
js
ds
mov
imul
and
sub
call
int
call
cltd
lahf
aam
adc
scas
push
add
mov
icebp
mov
gs
repnz
fcmovu
fmuls
or
sbb
push
lcall
push
ret
dec
cld
jp
add
orl
inc
stc
imul
xchg
in
popf
inc
out
pop
nop
aam
xor
sub
xchg
add
push
movl
fstp
sbb
and
dec
testb
cld
pop
push
stos
cmp
and
dec
dec
aaa
jne
pop
mov
stos
adc
out
inc
sarb
jne
sub
pop
adc
shl
xchg
xchg
mov
cmpsl
sub
int
jle
test
pop
mov
das
outsb
stos
cmp
fldlg2
call
mov
cltd
inc
outsl
lds
mov
push
cli
mov
sti
loope
sbb
add
jmp
mov
or
mov
das
mov
pop
push
clc
aad
xor
fisttps
scas
pushf
nop
xor
xor
push
adc
mov
xor
pushf
das
sub
add
pop
adc
stc
leave
into
jbe
roll
and
jo
scas
aaa
filds
jne
xor
or
mov
nop
shl
je
lock
dec
sub
jne
dec
inc
negl
sbb
ret
fs
push
es
mov
test
push
nop
sbb
mov
push
mov
and
push
movsb
pop
cli
or
pop
and
or
lea
sbb
fcoms
sbb
mov
pop
fwait
jecxz
popf
inc
jmp
movsb
repz
in
shll
fldcw
divb
nop
movsb
or
xchg
sub
mov
jne
out
inc
sub
sub
inc
aas
cmp
mov
stc
add
push
pop
and
mov
call
arpl
push
inc
loop
ljmp
xchg
stos
mov
daa
cmp
lods
outsb
lea
or
fldcw
and
ret
jmp
push
insl
leave
leave
leave
hlt
add
mov
repz
xchg
or
roll
sbb
push
jge
lcall
mov
inc
int3
leave
stos
in
add
pop
push
mov
pop
inc
cmp
xor
pop
sarl
or
stos
fs
out
push
popa
mov
push
aaa
mov
push
jp
outsl
dec
fmul
jl
adc
pop
out
test
mov
pop
inc
or
sbb
push
lahf
cmpsl
xchg
mov
or
inc
lcall
out
and
jne
pop
cmpl
sbb
xor
popf
add
xor
cld
rcll
scas
aaa
mov
test
popa
js
jl
mov
out
pop
or
js
push
stos
clc
lds
sti
mov
push
mov
out
aam
arpl
cs
xor
adc
lock
or
push
das
out
addb
sub
and
xor
cmp
fidivrs
adc
adc
mov
mov
sarb
fsubrl
pop
enter
ljmp
mov
dec
jnp
clc
inc
push
addr16
and
xor
pop
insb
inc
in
popa
test
bound
add
push
cmpsl
sahf
lcall
and
cmp
repnz
push
push
js
mov
popf
pusha
cli
or
aad
mov
pop
mov
mov
lret
xlat
cmpsl
inc
push
mov
and
and
jne
stc
lahf
ret
mov
xchg
cmp
mov
hlt
mov
jl
sar
sahf
fsts
mov
add
packuswb
sbbb
push
lock
add
pop
mov
push
out
inc
add
mov
inc
add
ljmp
inc
sbb
mov
shr
out
xor
outsb
imul
inc
add
pop
ja
adc
lret
adc
aaa
jecxz
sub
pop
xchg
lods
pop
add
test
aad
cmp
push
cmpsb
mov
in
xor
icebp
jo
mov
in
jae
or
fs
in
jnp
stc
add
dec
lahf
addl
movsb
movsl
shlb
lods
test
rcrl
mov
xor
pop
scas
out
ss
fwait
add
xor
push
pop
xor
inc
hlt
push
test
cltd
hlt
negb
inc
mov
or
into
aam
jecxz
incl
xor
stc
insb
data16
aaa
push
add
popa
fldpi
sub
add
cs
adc
mov
and
push
mov
cmpsb
xor
pusha
fwait
aaa
in
add
mov
mov
rcll
and
push
dec
lock
shr
xchg
sti
push
or
arpl
sub
dec
mov
sub
sbbb
cli
fistl
daa
stos
mov
push
out
mov
mov
notb
cld
jne
push
cs
icebp
add
sbb
aaa
ljmp
decb
add
dec
arpl
fcmovbe
xchg
andb
inc
arpl
inc
cltd
mov
mov
js
insb
adc
lcall
pusha
jb
adc
test
cmp
scas
cli
loop
mov
add
lock
mov
inc
mov
xor
mov
outsl
lock
push
aas
iret
scas
mov
movsb
sar
push
cltd
shlb
pop
inc
xchg
xchg
add
les
pop
jne
cltd
lahf
out
mov
rcrl
add
adc
clc
sbb
mov
gs
lock
and
orb
loopne
xor
shrl
iret
sbb
xor
imul
cmc
hlt
xor
mov
stos
shlb
cmp
stc
inc
mov
adc
jge
addr16
xor
sbb
mov
pusha
mov
rcrl
stos
xchg
jno
sub
in
ja
fisttpl
sub
sub
mov
and
mov
adc
and
mov
fdivrs
pop
xchg
outsb
lods
das
mov
xchg
or
pop
pop
icebp
fbstp
and
pop
jg
adc
movsl
and
jp
lds
rolb
ds
insb
pop
mov
sbb
fsubr
xchg
xchg
inc
sbb
cmc
nop
jb
fsubp
mov
shrb
ret
dec
push
int3
fcmovnu
stos
adc
aad
pop
dec
inc
hlt
dec
dec
loop
xchg
inc
inc
jle
ds
lahf
test
cmp
sarb
mov
cmp
ljmp
pop
pop
inc
adc
or
dec
jle
pop
fiadds
jo
sbb
ret
push
mov
pop
insl
xor
dec
push
jp
aad
add
jmp
push
icebp
sub
ror
sbb
stos
es
inc
sub
cmc
pop
insl
inc
insl
jmp
sbb
cmp
data16
mov
sbb
xor
xor
or
pop
imul
pop
dec
add
and
out
jp
cmp
mov
testb
jne
xor
and
loop
fidivrl
imulb
and
add
cmp
add
cmp
add
xlat
lret
icebp
arpl
jge
add
sbb
cmpsl
fwait
cli
shl
jmp
jbe
dec
repnz
int3
jns
push
clc
adc
xchg
shll
mov
add
mov
fs
aaa
ja
jns
pop
adc
test
lahf
cmpsl
or
adc
lea
ja
adc
outsl
push
sbb
jmp
into
scas
xchg
xor
pop
fsubrs
push
pushl
or
dec
and
outsl
cs
jp
or
leave
fsubrs
push
repz
dec
cmpl
jne
pop
sub
rorl
cltd
cmp
xchg
sub
mov
jb
or
mov
inc
dec
test
cmp
sub
xor
inc
das
cli
xor
outsb
bound
mov
jecxz
pushf
hlt
loopne
scas
adc
cli
pop
sbb
xlat
mov
andb
fcmovnb
stos
xorb
test
push
das
cmp
xchg
mov
and
mov
idiv
mov
xchg
mov
cmp
add
push
imul
jle
aad
fbstp
push
jns
andl
and
push
in
or
xchg
sbb
jp
cmp
int
rcll
ds
pusha
mov
fucomip
scas
test
cmpsl
and
nop
stos
dec
fwait
nop
xchg
mov
pop
out
stc
mov
jbe
call
arpl
adc
lods
rclb
xor
pop
dec
jns
mov
and
jecxz
movsl
in
lret
loop
pop
sbb
int3
cld
std
pop
int3
imul
pop
shrb
fcomps
mov
rorl
ds
adc
lcall
or
ret
into
faddl
outsb
xchg
imul
mov
mov
jecxz
push
pop
fistl
mov
adc
fsubp
mov
out
xchg
test
mov
insl
daa
or
or
jge
xor
popa
mov
and
jbe
std
fimuls
cld
ds
sbb
mov
movsb
mov
mov
sbbl
push
lcall
add
push
pop
push
add
sbb
lds
lret
push
push
xchg
ljmp
and
jne
sbb
xchg
mov
jecxz
shll
jecxz
mov
and
imul
stos
sbb
cltd
xor
movsb
dec
fidivrl
adc
pop
int
shll
mov
jo
cmpsl
arpl
addb
inc
push
in
inc
int3
jle
and
mov
cmp
mov
or
and
fisttpll
sbb
pop
sbb
cli
cs
lock
ja
fidivrl
mov
mov
jp
cli
lods
in
jmp
ds
stos
lds
or
mov
daa
pop
or
inc
dec
bound
in
mov
iret
sti
sahf
sti
fmull
xchg
loope
test
or
dec
xor
ret
jl
loopne
mov
cmp
xor
or
outsl
arpl
cli
sahf
leave
cli
jp
xor
fwait
cmp
mov
insb
int
shlb
and
adc
mov
xchg
inc
xchg
cmc
push
mov
fcomi
pop
inc
mov
pop
sbbb
xor
mov
xchg
xor
divb
fs
mov
adc
jge
lahf
push
add
imul
repz
sti
das
mov
sbb
lcall
pop
jg
cmp
ljmp
inc
add
ja
add
xchg
vpsubusb
adc
mov
pop
arpl
call
push
xor
mov
pop
loopne
sbb
sub
pop
push
lods
scas
gs
inc
aad
jb
mov
mov
sub
jo
jp
fwait
rclb
sbb
das
jb
fmuls
xchg
xchg
pop
push
pop
add
add
hlt
ds
xor
fnstcw
daa
sub
sub
cli
fstps
xchg
test
adc
int3
mov
and
mov
mov
jge
aad
fcomps
push
mov
jo
out
adc
xchg
mov
popl
ret
push
cmp
fs
cld
shl
dec
lds
testb
xor
sbb
sub
pop
fildl
les
cmpb
mov
sub
scas
sbb
sbb
xchg
out
cmp
pop
enter
loopne
mov
push
jge
out
das
jns
aad
nop
std
or
jmp
xor
addb
xor
inc
shr
pushf
sahf
lods
in
xchg
xor
fsub
inc
aas
scas
mov
or
imul
mov
inc
dec
addr16
push
in
xchg
ret
sbbb
cwtl
jae
and
fs
cmp
movsb
popa
les
jecxz
icebp
pop
and
jp
aad
daa
push
push
js
lea
add
or
jge
jne
push
es
mov
je
jno
add
popa
movsl
daa
mov
lcall
adc
mov
stos
dec
stos
dec
mov
in
and
or
test
dec
popf
and
jo
lods
cs
pop
jne
mov
int
sub
es
ret
push
mov
xlat
repnz
push
jmp
and
xchg
mov
andl
loopne
xor
dec
and
aaa
sub
mov
jge
lret
pop
orb
pop
iret
in
popa
push
iret
dec
enter
pop
mov
rol
sbb
ret
cli
sbb
out
push
mov
mov
std
fdivs
mov
outsb
adc
sbb
scas
adc
shlb
insl
add
arpl
jmp
mov
mov
dec
lods
std
jb
aam
pusha
xchg
inc
jmp
dec
sub
mov
add
and
ja
xchg
pop
dec
addr16
je
xchg
xchg
lcall
add
rol
xchg
push
xor
fs
lret
mov
adc
xchg
sbb
movsb
xor
cltd
push
xchg
mov
imul
andb
cs
or
lds
push
sub
sbb
sbb
mov
mov
lods
mov
xor
mov
aas
pop
mov
in
fistpll
mov
or
jle
xor
xlat
mov
fadds
movsl
gs
pop
mov
sub
xlat
test
jl
cmp
daa
sahf
in
xchg
repz
dec
je
fcmovnbe
jbe
lds
rcrl
xchg
bound
xchg
mov
mov
aas
mov
nop
adc
sbb
xor
add
test
cmpsl
pop
jne
testl
test
inc
stc
sbb
insl
adc
lea
cmp
adc
out
test
mov
add
imul
pop
sarl
sub
adc
mov
jno
pop
jl
push
fucomi
lock
sub
outsl
cwtl
fdivrs
xor
pop
jecxz
jg
jle
int
in
loope
je
mov
sbb
sub
je
and
scas
xor
data16
stos
lock
jns
cmp
aam
rcll
push
cmp
add
push
nop
push
xchg
push
cmpsb
or
loop
xchg
les
and
mov
sub
cs
xor
repnz
mov
dec
mov
fwait
incb
inc
push
je
daa
addl
aad
lret
xor
and
in
shl
mov
pushf
popa
push
jle
out
data16
cmp
gs
mov
adc
pop
cwtl
mov
dec
jb
lcall
cmp
sub
mov
mov
mov
cmpsb
in
lods
fcomps
mov
adc
add
push
and
mov
push
cmpl
xchg
test
add
pop
lret
adc
add
mov
pop
pop
cmp
pop
mov
fwait
int
ds
jg
gs
aaa
stos
cli
push
xchg
mov
cmp
test
ret
mov
scas
mov
bound
in
jmp
ds
hlt
pop
push
dec
sbb
lretw
sub
ja
and
hlt
push
push
jae
and
pop
jnp
mov
movups
jo
pop
mov
cmp
in
orl
std
jo
push
cs
push
test
lock
adcb
andb
dec
mov
add
inc
and
sti
xchg
fistpll
mov
fistpl
mov
dec
mov
out
push
mov
xchg
dec
rorb
mov
mov
imul
sbb
pusha
sahf
mov
int3
shll
mulb
ds
mov
xor
scas
roll
cmp
in
or
xchg
add
add
mov
mov
out
push
jg
sub
mov
push
das
inc
rolb
scas
sti
lds
adc
aaa
cli
test
outsl
cmpsl
cmp
cmpsl
rcll
pop
jbe
push
mov
inc
imul
inc
adc
mov
mov
or
cs
cld
pop
inc
jbe
rcll
sbb
mov
iret
shl
dec
pop
or
daa
cs
or
leave
dec
and
mov
fistl
ret
push
mov
call
jmp
js
mov
gs
mov
mov
fidivl
fdivrl
or
pop
orl
repnz
incb
popa
rorb
xchg
pop
lret
push
rolb
jle
dec
xchg
xor
xor
adc
sbb
adc
testb
leave
cmp
and
out
jno
test
ret
fcoms
mov
pop
aad
aaa
add
daa
fimull
in
stos
cmc
adc
push
and
imul
push
leave
aaa
push
int
loop
push
jb
test
ljmp
test
int3
outsl
and
test
call
mov
rcll
stos
mov
push
shlb
push
xchg
dec
fmul
gs
push
inc
mov
ja
push
ss
add
inc
mov
stos
outsb
sub
addr16
pop
imul
dec
push
popf
idivb
add
loop
and
scas
aam
sub
sbb
or
popf
jb
or
cmp
ret
aas
push
cmp
mov
jg
lods
dec
int3
or
insl
inc
cmpl
fcmovb
cmp
push
mov
sub
or
ljmp
fstpt
ret
stc
jecxz
inc
pop
shll
and
add
fs
daa
push
fwait
cltd
mov
jb
lahf
xor
sub
add
or
pop
xchg
mov
sub
and
mov
clc
sbb
movsb
outsb
std
xchg
shl
jle
push
es
jo
xchg
movb
in
es
sbb
pop
std
rcrb
out
pop
sbb
movb
cmpsl
ret
bound
pop
push
shlb
lea
lret
or
shll
les
insb
xchg
in
pop
es
mov
cmpsl
mov
rclb
pop
scas
in
push
repnz
ja
mov
push
adc
fcmovb
xchg
mov
lds
movsb
call
lret
pushf
xorl
mov
outsl
adc
popa
hlt
inc
pop
jno
and
xor
xchg
cs
mov
aaa
pop
push
out
mov
movsb
add
hlt
mov
mov
mov
test
mov
xchg
inc
xor
lods
mov
jecxz
shlb
inc
or
std
sarl
popa
mov
mov
popf
and
mov
lock
mov
sub
icebp
sbb
xor
jp
addr16
daa
sub
pop
mov
pop
fistps
mov
aaa
dec
and
push
loope
hlt
adc
das
xlat
jae
pop
mov
test
lahf
dec
test
sub
stos
and
movsb
fnstsw
sub
cltd
xchg
xchg
jo
mov
mov
shlb
int
xchg
test
mov
sub
xor
test
sub
jle
sub
fidivrs
mov
push
cmp
inc
std
xchg
pop
sbb
add
fcomi
add
push
and
xor
dec
arpl
cmp
lods
and
loop
and
cmpsl
mov
jns
adc
mov
std
xchg
ja
fs
inc
clc
repz
shl
out
push
inc
aam
jne
add
test
adc
pushl
lret
jp
sbb
gs
pop
bound
es
or
push
test
jnp
ret
sub
mov
ljmp
scas
or
pop
add
cmp
pop
mov
aam
lret
fwait
xchg
pop
cmp
arpl
or
jl
add
shrb
call
xchg
ret
insb
jne
out
ja
ret
scas
mov
mov
inc
xorb
lret
inc
scas
insl
test
cmp
lret
imul
adc
cmp
int3
xchg
test
outsl
imul
pop
cmpsb
jb
xchg
add
push
xchg
fisubl
mov
pop
pusha
or
inc
mov
cld
jl
fmuls
pop
dec
mov
push
dec
cwtl
add
mov
dec
push
cmp
jecxz
and
divb
push
sub
sbb
enter
out
das
out
call
add
int3
push
inc
aas
xor
and
xorl
call
addr16
call
dec
jmp
lea
inc
mov
ret
cmp
pop
outsl
incl
add
inc
outsl
loopne
ret
add
pop
out
xchg
dec
test
pop
outsl
xor
lcall
sbb
pop
jp
add
ds
pushf
and
dec
adc
mov
clc
and
je
outsb
fisttpl
xor
nop
je
orl
fstpt
mov
sbbb
aam
cmp
shlb
jge
xchg
or
sbb
fmuls
dec
cmc
push
mov
nop
les
mov
xchg
mov
clc
rol
scas
daa
lock
cmp
inc
sbb
loope
lret
rcll
daa
add
addr16
adc
lret
ficompl
cld
xlat
out
dec
add
mov
or
mov
and
orl
mov
ss
cmp
mov
gs
xchg
es
lcall
jg
push
xor
pop
repz
movsl
mov
subb
ljmp
mov
push
lock
lahf
dec
push
sbb
in
fnstcw
pusha
or
fisubs
dec
push
sub
mov
outsb
or
ret
pop
das
pop
xchg
fsts
sbb
sbb
adc
cmpsb
jg
jle
shll
sarb
xlat
rol
rclb
cmpsb
xor
jmp
push
jmp
les
cmc
jae
aaa
out
cwtl
push
outsl
jns
adc
xor
pop
lods
xchg
ja
fmul
pop
or
fnstcw
aas
xchg
loope
pop
xorb
mov
sahf
mov
mulb
cwtl
rcrb
jp
xchg
sbb
or
lret
lret
mov
push
repnz
arpl
test
sub
jmp
jp
jmp
mov
jnp
js
push
push
mov
insl
cmp
shl
jnp
mov
arpl
and
or
es
adc
lods
ljmp
mov
sub
pop
mov
pop
pop
inc
push
push
push
int3
movsb
mov
sbb
mov
aas
mov
jl
repnz
pop
dec
mov
enter
mov
popf
adc
xchg
loopne
sub
adc
out
lcall
adc
sub
call
dec
pop
test
dec
push
jns
pop
push
cmc
out
call
sbb
pop
lock
adc
mov
or
xchg
inc
jge
cmp
test
adc
inc
dec
aas
stos
daa
add
in
sar
out
xchg
push
lret
and
dec
jo
xor
jle
std
and
mov
adc
sub
pop
jl
sbb
clc
xlat
adc
sbb
pusha
je
ss
inc
repnz
xchg
and
inc
sbb
mov
mov
rclb
call
insl
inc
mov
loopne
push
inc
jae
gs
inc
addl
fwait
xchg
or
ficompl
jge
dec
popf
mov
push
inc
js
fsubrs
pop
add
aam
roll
movsb
inc
jl
mov
mov
in
mov
sbb
and
xor
js
xchg
lahf
loopne
sub
xor
shlb
jnp
loop
or
cld
inc
mov
leave
sub
add
or
rcrb
fsubrs
int
lods
sbb
sub
cmp
inc
aam
imul
xor
cltd
mov
add
popf
jno
fildl
pop
outsb
js
mov
jae
push
fisttpl
mov
add
sub
lcall
adc
aam
dec
xchg
inc
push
cli
push
gs
loop
ret
lcall
frstor
jmp
sub
push
movsb
pop
stc
mov
jmp
dec
lret
sahf
sub
lcall
call
lea
pop
xor
dec
cmpsl
and
fs
aam
daa
rorb
push
icebp
pushf
out
dec
rcrb
jne
popf
subl
cmpl
cmp
cmp
nop
lock
call
pushf
mov
sbb
or
lret
pop
mov
shlb
mov
js
xor
outsl
div
mov
cltd
push
stos
jns
pop
repz
mov
out
les
jae
mov
inc
xchg
cmp
cmp
imul
mov
sbb
pusha
push
add
or
das
mov
or
jnp
int3
stos
cmpsl
dec
ja
push
mov
xchg
popa
loopne
inc
xor
orl
addr16
xchg
jge
inc
pop
fwait
cmp
xchg
inc
enter
inc
inc
xor
daa
pop
dec
shrb
cmpb
jmp
mov
xchg
jmp
xor
cli
hlt
lods
paddusb
loopne
xlat
adcl
add
inc
bound
adc
in
cmp
sub
adc
pushf
imul
pop
leave
and
pop
test
xchg
sti
pop
repnz
mov
cmpsb
jbe
lods
cwtl
push
sub
test
jnp
outsb
cmp
outsl
mov
test
mov
push
insb
xor
jo
jne
jno
sbb
sahf
push
push
push
jo
popa
mov
push
inc
pop
mov
cmp
sahf
out
cmp
out
aas
call
adcl
insl
xor
sub
cmp
dec
pop
jo
mov
inc
pop
addr16
mov
lcall
imul
xchg
add
mul
je
sub
ljmp
jmp
mov
jbe
inc
jle
sbb
ret
pop
lcall
ljmp
test
inc
jb
cld
jg
jnp
jge
mov
flds
test
dec
mov
inc
dec
jl
dec
lret
xchg
inc
add
fstl
imul
test
outsl
mov
popa
outsb
mov
cmp
inc
pop
lret
gs
leave
xchg
jecxz
add
loope
mov
sahf
add
and
inc
xchg
lret
xor
repz
jb
sbbl
sub
pop
push
mov
fcmovnbe
imul
push
sbb
fistl
mov
cltd
das
sbb
dec
and
mov
push
or
mov
pop
push
cmp
imul
xchg
popa
jb
fdivr
lcall
or
stos
sti
mov
roll
jp
call
jb
fmul
jns
dec
or
clc
xchg
dec
cmp
or
loopne
add
push
and
imul
idivb
icebp
nop
icebp
dec
or
popa
mov
icebp
push
sbb
pusha
push
sbb
mov
xchg
lock
fldenv
or
loopne
sub
push
mov
or
rorl
xchg
clc
cmp
adc
add
push
push
push
adc
test
addb
fisttpll
jns
adc
mov
fcomps
jne
enter
xchg
jbe
mov
inc
mov
pop
fadd
or
adc
inc
sbb
fsubs
add
fidivrl
pusha
ja
negw
lret
arpl
inc
xor
imul
or
push
dec
and
lods
lahf
add
push
addr16
cmp
fisubl
int
clc
cwtl
loop
mov
xchg
mov
adcl
mov
aam
shlb
outsl
loop
sti
jb
and
jne
arpl
mov
in
lahf
insb
daa
loope
call
notb
cli
daa
push
shlb
ds
icebp
in
movsb
lret
outsl
mov
scas
outsl
sbbb
cmpsb
jns
jne
shl
jecxz
int
jbe
xor
push
fcmovb
xchg
movsl
gs
mov
clc
test
insb
sahf
fistpll
cs
dec
push
mov
mov
mov
imul
jno
lcall
inc
mov
mov
data16
jmp
xlat
rcl
divl
out
mov
js
add
loopne
pop
test
mov
les
mov
cld
int
jae
mov
xor
daa
inc
sub
pop
push
stc
fwait
inc
jae
insl
mov
loopne
pop
inc
pop
in
jb
sbb
xor
jmp
loop
negl
pop
les
mov
mov
ss
jge
hlt
fmull
test
insl
scas
inc
sahf
dec
out
jne
test
aas
insb
dec
cwtl
and
push
in
jl
mov
jl
mov
jg
pop
sahf
cmc
xchg
inc
dec
xchg
and
adc
nop
xor
pusha
or
sbb
add
shrl
push
cmp
testb
and
mov
pop
mov
lret
hlt
js
mov
icebp
call
ret
push
push
xor
mov
test
mov
out
movsl
inc
test
ficoms
ret
mov
inc
adc
or
push
sbb
sub
popa
ret
out
push
int
cmp
lret
iret
cmc
add
in
xor
movsl
and
movsl
xchg
inc
xchg
adc
rcrb
add
sti
mov
or
add
mov
or
sbb
pop
xchg
cmp
in
pop
mov
pop
mov
sub
scas
test
rorl
xor
les
pushf
push
push
push
or
fistl
orl
clc
out
je
aaa
mov
xor
or
jmp
imul
repnz
push
dec
fcomps
ffree
cwtl
cli
daa
jle
mov
repnz
das
or
xchg
out
jge
pop
dec
dec
and
lock
push
add
outsb
dec
jmp
inc
out
fidivl
push
call
xchg
sub
add
and
movsb
lods
or
xchg
mov
mov
pop
jae
pop
mov
in
ss
jnp
pushf
inc
fwait
inc
loop
or
aam
mov
repz
sub
dec
enter
cmp
jae
push
xchg
std
in
xchg
dec
mov
xchg
push
rcll
mov
add
mov
lock
mov
dec
xchg
jmp
mov
jb
stc
popa
push
xor
or
lahf
push
jne
addr16
and
push
mov
decb
in
js
jge
mov
xor
adc
xchg
mov
nopl
jb
out
sbb
cmp
jbe
inc
aas
std
movsl
inc
leave
test
and
push
imul
xor
mov
sub
jg
imul
inc
pop
fwait
add
mov
xchg
xchg
scas
repnz
cmp
loope
pop
cmpsb
imul
dec
std
mov
xorl
lret
jg
fwait
lahf
stos
int3
push
or
jg
sub
mov
xor
push
aam
aam
aaa
dec
jns
mov
xchg
xchg
or
xchg
push
fbstp
xchg
fidivs
adc
add
popf
test
fdivs
out
mov
stos
jno
push
loop
sbb
xor
mov
mov
call
dec
mov
mov
pushf
dec
and
fisttpl
xlat
push
mov
pop
ret
mov
or
and
pushf
xchg
sub
or
sub
push
mov
and
mov
xor
mov
sbb
mov
pop
dec
mov
push
mov
sub
adc
lahf
int3
scas
cmp
sbb
sbb
lock
jo
pop
ja
and
mov
mov
xchg
cltd
xor
imul
jmp
push
jmp
or
idivl
arpl
jo
push
icebp
rclb
and
ret
jge
movsb
hlt
adc
cwtl
inc
lahf
fisttpl
loopne
adc
fdivs
out
subl
cmp
sbb
pop
shll
mov
xor
fcoms
or
out
lret
popa
adc
cld
sbb
jmp
mov
int3
pop
push
mov
rcrb
jge
xor
pushf
xor
lea
xchg
inc
cwtl
movsb
sub
cmp
ja
test
adc
aam
pop
fsubrl
cmp
cwtl
aas
or
in
cld
xor
pop
lea
into
sti
shll
jp
adc
push
fs
adc
mov
cmp
mov
imul
rorl
bound
and
and
scas
pop
pop
clc
ja
add
sti
push
add
dec
mov
mov
pop
inc
push
and
xlat
xchg
int3
adc
sbb
push
pop
cmc
gs
loopne
inc
jno
adc
pop
sbb
stc
sbb
adcl
xlat
pop
lcall
inc
pushf
in
adc
fnstsw
and
inc
cvtdq2ps
dec
fisubl
xchg
dec
push
cmp
mov
sar
adc
test
pop
push
lods
mov
adc
sbbl
sub
fwait
mov
push
mov
pushf
push
lret
mov
adc
andl
mov
fstps
sub
push
and
pop
mov
in
je
out
mov
inc
sarb
in
dec
in
fldenv
mov
mov
sar
and
xor
loope
ss
dec
orb
xor
sub
sub
add
inc
push
pop
mov
adc
jbe
dec
adc
js
test
and
popa
subb
mov
ljmp
mov
faddl
fld
sub
and
sub
aas
push
xchg
xchg
lock
test
and
jmp
movsl
sti
adc
add
adc
lcall
aam
arpl
mov
inc
outsb
dec
mov
shlb
fld
es
fcoms
outsb
fs
ja
jmp
mov
add
out
aaa
sbb
dec
std
adc
es
lods
add
push
test
xchg
mov
and
in
push
mov
out
or
aad
jle
cmp
andl
adc
bound
fs
xchg
aad
push
xchg
cwtl
pop
outsb
or
xlat
out
fimuls
dec
dec
aam
and
dec
pop
cmp
and
xor
inc
fstl
addl
test
iret
xchg
inc
cmp
cmp
outsb
stc
insb
xor
icebp
mov
push
push
and
cmpsl
mov
loopne
add
or
shlb
xor
sub
pop
sbb
scas
jp
lds
fsubrl
mov
mov
jecxz
popf
dec
dec
ss
mov
xor
mov
bound
lahf
outsb
mov
fldenv
mov
xchg
in
ja
jb
sub
roll
insl
fimull
in
xchg
lret
inc
sub
sbb
jb
mov
sarb
lahf
mov
add
mov
mov
sbb
xor
sar
in
scas
or
in
pushl
fisttpll
fdivrl
push
sub
cmp
imul
jae
and
mov
inc
js
clc
jmp
cmp
inc
int3
lret
mov
test
cmp
and
out
mov
mov
clc
xor
lock
subl
call
test
negb
mov
inc
cmp
dec
xor
xchg
loop
jo
or
pop
mov
mov
inc
push
push
push
fistl
jle
add
push
xchg
popl
jo
testb
out
jb
movsl
xor
jns
lods
pop
cwtl
lds
stc
sub
in
js
dec
or
cmp
mov
gs
imul
add
enter
notb
jb
movsl
cmc
outsl
outsb
je
popf
lds
loop
cmp
ficoml
cwtl
cmc
or
fcom
mov
push
rcrb
rcrb
ds
int3
popf
sub
cmp
leave
ss
lret
bound
pop
xchg
fiaddl
and
adc
aaa
icebp
jne
dec
ficomps
fnsave
jb
fsubrs
aam
cmpb
lods
lds
jl
fldt
cmp
jns
nop
insl
and
in
sbb
cmp
inc
dec
add
testb
popa
lea
mov
mov
fucomip
sahf
sbbl
icebp
push
lret
stc
dec
mov
and
mov
sub
dec
pop
out
mov
lock
test
mov
int
mov
les
xor
jo
gs
ljmp
sbb
inc
orb
gs
xchg
pop
mov
push
add
and
es
mov
mov
xchg
xor
push
xchg
push
xor
mov
push
xchg
adc
shrl
sahf
xor
push
add
mov
lret
ja
ljmp
push
or
loope
dec
nop
mov
push
lret
xchg
notb
push
ss
adc
mov
mov
sbb
xor
fwait
xor
movsl
nop
clc
aad
cmp
outsl
sbb
mov
icebp
imul
sub
inc
sarb
push
mov
push
not
or
aam
push
add
jmp
mov
testl
or
inc
and
mov
out
cmp
jmp
insb
jp
dec
stos
scas
andl
jnp
js
mulb
mov
sbb
push
inc
sbb
mov
test
jmp
xchg
iret
sbb
lds
xorl
jmp
repz
in
bound
mov
push
test
xor
mov
les
add
xchg
nop
xlat
shlb
daa
push
iret
xchg
clc
pop
popa
jbe
pop
ffree
sub
xchg
sbb
pop
int
repz
add
dec
and
das
pop
adcl
and
icebp
fnstsw
jns
js
idiv
popa
mov
dec
dec
ss
mov
xor
sbb
sub
jnp
lsl
hlt
push
mov
mov
test
fsubl
xchg
push
in
pop
test
dec
jae
inc
pop
stos
sbb
cmp
push
add
jl
popa
fisttpll
imul
arpl
imul
add
and
ret
xchg
repz
push
scas
jp
stos
hlt
mov
pusha
orb
gs
push
adc
imul
cpuid
mov
in
jo
insl
in
fadd
inc
sbb
mov
int
loop
loopne
sub
xor
bound
out
xor
in
mov
inc
jge
mov
pop
cmp
data16
cld
mov
xchg
push
cvtps2pi
jle
add
jmp
adc
mov
rcr
and
inc
mov
into
nop
sbb
jnp
lock
out
stos
cmp
xchg
loop
loop
jge
fldt
fimull
test
push
cmp
outsl
js
inc
inc
insb
seto
mov
mov
xchg
daa
sarl
sbb
push
in
mov
mov
dec
dec
scas
mov
push
and
sub
js
push
xor
xor
aas
pop
adc
xchg
mov
lods
popfw
js
push
les
xchg
repz
js
cmp
fwait
pop
lret
movsb
imul
subl
insl
pop
das
test
xchg
add
sub
out
mov
jmp
inc
jae
es
popa
adc
iret
mov
or
loop
cs
mov
push
pop
and
pop
in
stc
fsts
sti
test
icebp
pop
xor
pusha
push
mov
movsl
mov
sub
jb
pushf
das
cmp
ret
pusha
adc
lods
jb
lcall
sbb
jmp
adc
popf
shl
rol
mov
mov
lret
mov
or
insl
imulb
repnz
fwait
imul
xchg
movsl
cmp
push
sbb
fldlg2
push
fadd
dec
scas
dec
inc
stos
add
pop
push
adc
mov
nop
push
ss
mov
fwait
ds
stos
or
andl
lcall
mov
pop
cmp
in
loopne
aaa
push
notrack
adc
leave
cmp
and
stos
outsl
xor
mov
adc
or
and
clc
lahf
push
dec
xor
out
clc
scas
xlat
popa
dec
lods
dec
lds
test
inc
leave
and
pop
outsl
repz
inc
in
pop
xor
dec
xor
arpl
mov
pop
xor
push
js
loop
movsl
or
icebp
xor
xor
loop
outsl
inc
daa
xchg
push
shl
jb
ficoml
sbb
xor
mov
inc
sub
xchg
insb
mov
cld
dec
mov
repnz
cmp
addr16
jns
or
and
add
mov
xchg
ret
sub
arpl
sarb
iret
xor
movsb
fnstsw
out
aaa
enter
or
sub
aaa
adc
out
mov
cltd
xchg
pop
clc
loopew
rcll
inc
fwait
lods
and
and
into
in
lahf
fnstenv
cmp
dec
stos
jne
jae
or
scas
add
adc
daa
stos
ja
jo
mov
movsl
add
movsb
mov
les
push
push
and
outsl
pop
push
dec
and
mov
stos
xor
mov
adc
push
fwait
shl
adc
xor
pop
sub
scas
adc
test
adc
xor
fcoml
mov
dec
pop
adc
pushf
inc
cmp
jmp
mov
or
fsubl
jns
leave
int3
push
setae
xor
daa
into
outsl
jge
jno
ds
mov
repnz
lahf
cmpsb
and
mov
test
sub
mov
mov
pushf
rcrb
sbb
push
outsl
xchg
adc
mov
aas
mov
les
sbb
jmp
shll
arpl
pop
out
adc
or
push
fldl
cmp
fstps
adcb
inc
jmp
jg
loopne
jecxz
cmp
das
popfw
es
mov
pop
push
sahf
cwtl
inc
inc
push
jno
popf
mov
adc
mov
xchg
xchg
xchg
sbb
dec
fsubrl
jg
insb
arpl
dec
push
sbb
in
shrb
push
les
cmp
jo
mov
adc
xor
decb
mov
cs
mull
into
jne
sub
imul
cmp
jg
cmpsl
push
fildl
xchg
inc
js
je
mov
xlat
xor
ret
in
cmp
cmp
xchg
sbb
aas
mov
mov
sub
pop
fbld
mov
xchg
push
aas
xchg
popa
pop
hlt
cld
ror
out
int3
cmp
scas
notb
pop
pop
insl
inc
into
sbb
pop
enter
andl
jo
dec
cltd
jns
packuswb
fs
push
mov
and
adc
in
and
jle
jnp
dec
mov
and
cs
sub
popf
push
sbb
mov
pop
xor
les
rolb
jg
push
imul
jg
fs
setno
pop
inc
pop
sub
jmp
add
ss
iret
rcrl
add
add
in
mov
pop
fisubl
cmp
loop
jle
cmp
pop
sub
sbb
dec
mov
add
ljmp
or
and
sbb
jnp
jecxz
pop
inc
xor
loopne
fmull
push
ret
cli
jl
cmpsl
pop
pop
fsubl
rcrb
xchg
adc
mov
xchg
stc
push
inc
mov
inc
hlt
mov
fsts
ljmp
xlat
cmp
test
xchg
jo
jmp
es
or
dec
push
adc
scas
mov
in
inc
in
movsl
bound
pop
ret
scas
fmuls
inc
rcll
sub
inc
popa
push
mov
leave
mov
and
or
in
cli
jo
adc
dec
ja
hlt
sub
or
jge
inc
push
xorl
rolb
and
fmull
cmp
mov
xor
movsl
sbb
sub
dec
adc
sbb
xchg
pop
subl
push
stc
and
sbb
stc
das
sbb
das
fs
cmp
sahf
and
adc
push
shlb
std
inc
pushf
call
add
mov
cmc
aas
xchg
cwtl
inc
loop
insb
fistpll
roll
ret
push
xor
sbb
popf
int3
dec
mov
fnstsw
fisubl
inc
repz
xchg
pop
add
dec
dec
mov
test
enter
and
or
insl
in
inc
rcl
mov
mov
scas
or
fists
sub
jecxz
xor
and
ja
mov
ljmp
dec
jb
sarl
xchg
inc
xchg
xchg
push
sbb
inc
rclb
jecxz
xchg
das
jle
shl
mov
dec
arpl
pop
mov
mov
sub
testb
xchg
inc
notb
faddp
lods
mov
jl
psubsb
lret
mov
int3
lock
xor
jmp
push
jb
rclb
call
add
jecxz
inc
inc
popa
mov
mov
xchg
and
outsl
scas
dec
fiadds
lock
gs
lret
mov
mov
pop
mov
sbb
divb
push
or
push
dec
mov
lds
xor
add
jmp
and
ss
test
pushl
add
xlat
or
shll
cmp
fcmove
xchg
add
mov
pop
scas
xchg
xchg
popl
xor
cmp
mov
into
jne
int
call
mov
stos
push
mov
inc
aam
xor
sub
xchg
int3
sub
sahf
popa
add
call
push
dec
lret
mov
and
pcmpgtd
pop
mov
aam
push
inc
pop
inc
scas
jecxz
mov
mov
arpl
gs
jl
jae
mov
les
sbb
mov
or
faddl
sub
push
mov
js
or
stos
out
divb
add
jne
inc
lcall
mov
jne
jne
call
pusha
pushf
lods
orl
jmp
and
xchg
inc
or
rorb
test
jno
xor
in
outsb
and
push
fsubrl
sbb
ret
dec
and
sbb
push
push
jb
aam
pop
fmuls
into
stos
std
mov
lods
fnstcw
ret
pop
mov
popa
ds
outsb
dec
xchg
lds
leave
jns
jb
and
test
mov
mov
aas
nop
test
test
and
std
and
in
or
add
sub
xor
cli
test
jo
scas
sbb
enter
movsl
popf
pop
ds
mov
xlat
jp
mov
aam
dec
cs
cli
test
aas
mov
cmp
fs
pop
cli
pop
mov
das
in
stos
in
and
and
xchg
sub
mov
mov
sbb
stos
add
dec
imul
jp
sbb
jb
mov
jb
in
xchg
divl
int
fistl
jnp
clc
int3
clc
vshufps
sub
dec
adc
sbb
adc
xor
adc
icebp
pop
movsb
push
fiaddl
popf
push
cld
mov
and
fisttpll
and
and
mov
sbb
das
jnp
shll
mov
dec
mov
add
push
roll
sub
and
rep
pushf
gs
movsb
jle
mov
xor
add
mov
xchg
sub
cld
xchg
xor
sti
push
pop
pop
rep
popa
mov
std
mov
fwait
mov
xor
fidivs
and
aad
dec
mov
sbb
adc
or
dec
pop
jmp
cmp
push
inc
rclb
gs
test
fstl
xor
pop
repnz
cmpsb
into
lds
mov
pop
jno
bnd
add
shrb
stos
jnp
xchg
fcoml
mov
dec
pop
ss
mov
lock
ja
push
lock
pop
bound
add
aad
lock
cwtl
ret
mov
sub
xor
jge
mov
jl
inc
jbe
sub
out
jns
jae
int
addr16
xchg
or
js
lcall
std
push
and
or
pop
dec
pop
cwtl
pushf
mov
cmpsl
into
jl
ljmp
jge
adc
rol
adc
dec
gs
push
inc
add
xor
pop
fcmovb
and
and
push
mov
jae
adc
jo
fnstsw
pop
cmp
add
ss
pop
push
add
or
addr16
aaa
pop
roll
mov
pop
add
jle
xchg
mov
mov
inc
inc
lret
xchg
jne
aam
cmp
cld
cli
aas
jmp
repz
movsl
imul
xchg
xor
cmp
loope
bound
sbb
inc
aad
sbb
test
repz
mov
dec
dec
lea
cmp
push
mov
mov
jecxz
aas
push
insl
sub
jge
daa
cs
xor
mov
shll
addr16
dec
or
nop
cli
jb
in
ret
test
out
jmp
push
cltd
mov
xchg
adc
jae
sub
push
addr16
movsb
fistl
mov
iret
mov
aad
sbb
jnp
stos
dec
repz
arpl
dec
xchg
sbb
jg
mov
pushl
xor
inc
cmp
sbb
cmc
sbb
mov
jmp
les
add
dec
inc
test
or
sbb
test
sahf
outsb
pop
stos
arpl
outsb
dec
mov
and
jmp
cltd
pop
mov
pop
shll
int3
inc
cmp
rol
loope
xor
mov
outsb
scas
jg
jmp
add
cli
add
or
out
adc
in
push
je
lret
cmpsb
pop
repz
fimull
add
push
mov
test
push
fisubrs
repz
cmc
xchg
lcall
and
jmp
jmp
pop
adc
test
inc
mov
fildl
fsub
inc
lds
lret
mov
testb
pop
push
push
int3
rorl
or
mov
not
in
sahf
movsl
adc
mov
pop
dec
xchg
add
adc
test
pop
inc
adc
aam
jmp
call
push
mov
mov
xchg
sbb
adc
stos
imul
aaa
rclb
jns
xchg
in
jmp
in
or
std
pop
repz
push
cmp
add
aad
rclb
pop
cmp
jl
scas
pushf
pop
push
cltd
jp
int3
std
pop
push
sarb
out
jg
mov
cmpsb
xchg
dec
or
cmp
loopne
arpl
aas
call
mov
cwtl
mov
lahf
divl
repz
inc
push
jno
ljmp
mov
gs
bound
lds
dec
bound
add
xor
cmp
jmp
mov
into
mov
insl
in
mov
sbb
dec
mov
leave
add
movsb
nop
js
aam
jle
adc
pop
addl
adc
cmpsl
and
std
xchg
mull
or
pop
insl
jle
stos
cmc
inc
and
sub
pop
xor
xor
fsubrl
adc
int3
repz
xchg
das
cli
mov
cmp
rcrl
outsl
shl
rclb
pop
sub
mov
repz
bound
or
pop
mov
inc
push
mov
xchg
cmp
add
and
inc
incl
pop
repnz
lahf
dec
xor
push
push
xor
loope
dec
lcall
cwtl
mov
arpl
sbb
testl
in
es
aaa
xor
adc
stc
repnz
or
xchg
or
outsb
addr16
inc
push
daa
and
jge
clc
imul
lret
mov
dec
dec
pop
jl
stc
inc
paddusw
xorl
jno
cmp
repz
jbe
stos
mov
cmp
and
jne
test
loop
adc
or
jns
sahf
pop
mov
dec
add
repnz
mov
fidivl
popa
dec
and
aad
dec
adcb
jmp
ds
lock
mov
xorb
add
push
adc
and
push
xchg
adc
out
fidivs
ret
xor
std
lahf
cltd
xor
mov
ds
daa
notb
sub
xor
lods
or
add
movsl
xchg
daa
mov
mov
into
inc
cmp
out
pushf
dec
aas
rcr
xchg
push
pop
lods
jl
mov
stos
test
xchg
aaa
in
ljmp
std
push
xchg
push
aad
mov
test
push
or
dec
xchg
dec
push
dec
adc
aam
mov
push
mov
rcll
xor
push
xor
test
cli
mov
les
sub
pop
cmp
cmp
aam
rcll
mov
xchg
lret
leave
cld
sbb
dec
shrl
popf
add
jb
sbb
outsb
sbb
iret
movsl
cmp
test
fildl
loopne
arpl
fmul
cmp
aad
sbb
mov
out
enter
inc
test
jb
jecxz
pop
jg
push
mov
arpl
xlat
lcall
mov
aam
iret
and
pop
adc
mov
or
push
iretw
ror
adc
inc
ret
sub
mov
sarb
mov
mov
aam
bound
and
xor
push
mov
ficomps
ljmp
popf
les
xor
push
jge
sbb
clc
jo
jno
or
cld
shl
call
adc
fcomps
popf
test
jmp
dec
cmpsl
push
adc
push
jno
int3
in
sahf
dec
cmp
fwait
ljmp
pushf
mov
pop
mov
call
and
lret
out
or
test
leave
inc
xchg
cli
cmp
ss
fisubs
fxch
and
sub
fistl
cmp
jae
mov
arpl
loop
push
mov
dec
sbb
lret
dec
add
inc
cs
dec
and
or
sub
jl
cltd
fidivs
jg
testb
and
cmc
insl
mov
push
mov
icebp
jo
xchg
mov
fisubrs
dec
mov
sbb
push
sbb
add
loope
sub
adc
adc
pop
sub
jbe
jb
mov
pop
add
xchg
fs
cmp
movsb
ss
adc
bound
add
xchg
lea
lods
jle
cmp
mov
pop
push
cmp
mov
in
xor
dec
push
push
pop
fldt
outsb
jl
mov
roll
mov
cli
gs
xchg
cld
and
lds
repz
or
inc
rcl
inc
pop
sbb
push
cli
push
jno
ja
iret
dec
sbb
mov
ds
psrlw
nop
xchg
pushf
lock
push
repnz
sbb
sbb
adc
fs
dec
mov
xchg
sub
iret
mov
nop
jb
xorb
cmp
mov
xchg
loopne
xor
mov
shlb
mov
adc
and
int
out
sarb
inc
dec
mov
sub
into
xorl
sahf
pmaddwd
pop
push
mov
out
xor
testb
ret
lcall
and
ds
popf
test
add
mov
sub
adc
jne
mov
pop
push
sbb
sub
mov
pushl
imul
push
mov
out
and
flds
inc
scas
in
insb
add
std
stc
lds
cld
mov
push
sub
insl
or
mov
and
sbb
mov
cmp
into
add
mov
sbb
pop
stos
pop
orl
xor
xchg
aaa
mov
lret
push
rcrb
notb
xchg
mov
out
jge
ljmp
mov
sub
add
test
cmp
loopne
dec
sarb
loope
mov
cmpsb
je
lahf
daa
push
push
sar
jno
das
jecxz
push
mov
add
cmp
movsl
iret
jnp
ljmp
ficoml
cltd
jg
inc
shlb
add
std
shrb
stos
pop
and
dec
dec
iret
imul
hlt
cmp
ljmp
neg
push
fistpll
loop
ljmp
fsubs
insl
div
outsl
adc
out
jns
jb,pn
xchg
leave
mov
ljmp
jnp
in
cs
les
ret
push
nop
cmpsb
mov
jo
jl
test
push
adc
adc
jecxz
sub
movsl
mov
sbb
gs
cld
test
movsl
sahf
mov
and
adc
sub
push
icebp
push
shrb
xchg
rcrl
inc
mov
movl
aad
js
pop
dec
push
mov
push
ret
jge
cld
add
pusha
lods
pusha
cmp
and
sub
mov
push
pushf
sbb
cld
aas
push
sbb
pusha
add
out
cmpsl
in
lods
mov
jl
mov
out
push
ja
push
cwtl
inc
hlt
cltd
add
or
adc
jge
fstpl
loope
aad
cmp
xchg
xlat
lret
ret
imul
adcb
movsl
call
cwtl
in
push
sub
data16
and
or
adc
loope
mov
push
jne
mov
mov
cld
hlt
jae
xchg
and
iret
xlat
pop
sbb
xchg
and
sub
ljmp
pop
xor
fcmove
mov
sbb
mov
and
jmp
add
enter
pop
mov
incl
and
xor
cltd
popa
xchg
test
jmp
adc
test
mov
movsl
cmpsb
jnp
loop
jge
adc
inc
lods
adc
lock
test
push
mov
mov
xlat
adc
mov
movsb
in
push
arpl
fwait
stc
push
dec
xchg
mov
inc
add
jp
fs
leave
fidivrl
mov
inc
mov
cltd
jge
sbb
push
or
scas
call
shl
inc
shlb
adc
adc
test
mov
or
ret
jb
dec
xor
rcll
adc
cmp
dec
adc
jmp
lds
push
push
scas
xchg
leave
sbb
ret
ljmp
lods
xor
test
insb
add
rcr
stos
sbb
push
aaa
clc
mov
xor
cmp
sub
mov
js
pop
imul
dec
push
sbb
fs
fdivs
xor
cld
add
push
pop
rorl
dec
aam
pop
je
imul
dec
mov
out
dec
scas
cs
or
sub
mov
sbbl
dec
xchg
pop
push
push
shll
xor
popa
add
int
lods
cmp
xchg
add
push
or
xor
stc
mov
popf
andb
cmpsl
pop
mov
mov
mov
pushf
rorl
cmp
dec
pop
push
sarl
daa
cltd
rcrb
adc
add
fisubrs
rcll
jmp
repz
ja
xlat
pop
xor
xchg
sbb
mov
add
shlb
and
les
clc
out
lods
test
bswap
rclb
dec
jb
enter
fcoms
xchg
fsubr
ss
out
in
mov
shr
push
inc
in
mov
pop
aam
scas
stos
mov
rcr
xchg
pop
pop
fld
in
jno
mov
or
xchg
push
cmc
popa
cmp
test
mov
xchg
fucomip
aam
pop
into
lods
sub
lret
pop
and
scas
inc
enter
cmp
addr16
inc
rcll
sub
xor
push
fs
adc
sbb
mov
in
add
or
in
inc
dec
and
stc
aad
fistps
cmp
test
sbb
sbb
fxtract
xor
and
fcmovnb
shrl
mov
push
out
add
sub
jmp
lods
aaa
into
and
sub
loop
sbb
ljmp
push
and
fidivs
test
shlb
lret
push
shlb
hlt
int
cmp
insb
adc
jae
jg
add
or
sub
xchg
add
loopne
cmp
cmpl
cmp
mov
xor
push
hlt
jecxz
es
jnp
cmp
lret
add
inc
push
rorl
xor
pusha
jp
sub
das
ss
int3
pop
dec
out
icebp
es
clc
sub
or
mov
aam
adc
mov
push
cmpsl
add
decb
jb
or
gs
cld
enter
daa
lods
or
aad
movsl
fstpl
imul
outsl
pop
cli
fbstp
adc
inc
lods
add
mov
inc
mov
sub
gs
cmp
imul
outsl
les
cmpb
push
jns
adc
jge
popf
test
mov
inc
and
fs
jmp
out
ror
cmp
sub
in
roll
shll
repnz
push
push
inc
push
adc
add
fisubrs
cmc
jge
push
push
fldcw
pop
les
mov
sub
sub
xchg
jp
mov
inc
scas
pop
mov
lds
addl
mov
mov
dec
out
sbb
popa
add
rcr
dec
mov
jge
jo
cmp
push
shll
scas
dec
and
add
push
aad
xor
int
pop
cmp
pop
hlt
add
lods
fdivrp
inc
iret
dec
sbb
lods
cli
mov
mov
stc
xchg
int3
cmp
jecxz
movsl
fadd
shll
stos
jne,pt
int
inc
andb
scas
cmp
mov
shll
dec
fisubrl
pop
fcompl
add
outsl
lahf
push
ja
push
xchg
xor
xchg
pushf
dec
mov
pusha
adc
cs
adc
xchg
addr16
lcall
in
xchg
and
int
xor
jp
sub
mov
sbb
popf
test
sub
shll
cmp
clc
scas
inc
mov
scas
dec
loopne
shl
daa
cli
ds
add
pop
movsb
aas
sets
out
lods
sbb
or
stos
add
imul
loop
outsl
outsb
or
andb
push
scas
sub
mov
xor
outsb
mov
in
fnsave
in
cld
sbb
stos
xor
xchg
lds
cwtl
imul
pop
cld
pusha
mov
add
adc
adc
inc
xchg
je
adc
jne
sbb
and
daa
push
fdivl
cmp
lock
arpl
cmpsb
loope
sub
lret
add
xlat
dec
int
mov
fmull
cmc
xchg
pusha
and
xchg
pop
cld
add
jb
add
aam
push
notb
nop
cmc
leave
dec
pusha
in
repz
dec
mov
xchg
mov
pop
mov
xchg
mov
jns
mov
inc
dec
popf
ljmp
push
jb
mov
mov
pop
imul
inc
gs
jmp
xor
es
mov
cmp
shlb
adc
xlat
push
loope
jae
add
xchg
mov
shrl
xor
fisttpl
out
jo
xchg
cmp
dec
mov
sahf
sub
fdivs
dec
pop
aas
jle
mov
daa
mov
pushf
and
daa
cmp
ljmp
mov
inc
push
lock
jns
in
mov
movsl
cmpsb
orb
sbb
dec
sub
mov
mov
cmc
fimuls
push
pop
cmpsl
loope
pop
out
sahf
lods
pop
mov
leave
push
inc
cmp
loopne
cld
jb
cmpb
out
shll
fs
mov
and
subb
fiaddl
cmpsb
pop
mov
int3
sbb
scas
ret
arpl
mov
test
mov
mov
inc
pop
lods
int
in
jmp
cltd
xor
sbb
inc
outsl
repz
jns
aas
push
rorl
test
pop
lcall
popf
das
stc
ret
push
lds
cmc
outsl
adc
shr
into
out
cmp
pop
stc
divl
mov
or
inc
jl
jmp
outsb
imul
adc
add
mov
imul
push
push
pop
jne
dec
leave
push
cli
cmp
outsb
je
dec
dec
mov
pushf
mov
lds
xlat
leave
mov
lock
mov
lret
jmp
stc
and
inc
xor
xchg
push
xor
or
gs
mov
into
test
mov
jp
push
stos
xchg
btr
xchg
pop
mov
push
jne
dec
fadds
mov
push
sbb
jbe
push
cmp
inc
outsl
xchg
push
xor
in
cmp
pop
mov
jb
les
mov
incb
daa
das
xchg
push
inc
daa
stc
rolb
nop
arpl
and
sbb
rolb
or
add
push
sbb
popf
les
dec
lea
inc
cmp
ds
jno
adc
rolb
sbb
inc
pop
xor
addr16
cltd
mov
jecxz
sbb
sub
sahf
aaa
xchg
bound
cmp
lret
lock
cwtl
jle
sti
notb
call
or
push
xchg
xchg
inc
in
pop
stc
mov
clc
cmpl
orb
mov
pop
fs
es
mov
mov
stc
inc
lret
fadds
loop
pushf
sub
loope
orb
loop
push
adc
idivl
movsl
xor
int3
and
nop
test
scas
stos
mov
jecxz
std
cs
push
sbb
and
int
cwtl
cmp
adc
lds
pop
shlb
int3
mov
int
stos
xor
jecxz
jge
xchg
inc
cmpsl
jmp
out
pusha
cmpsb
mov
sbb
lret
jmp
je
loope
popf
pusha
jae
push
mov
test
dec
loop
cmp
mov
mov
mov
int3
xlat
sub
insb
adc
mov
icebp
imul
xor
stos
adcl
jg
add
add
xchg
jecxz
jbe
cs
cmpsl
pop
jge
int3
pop
xor
add
mov
dec
sbb
sbb
popf
sub
std
or
mov
push
arpl
cmp
bound
jmp
repnz
xchg
mov
adc
inc
insl
out
xchg
std
sbbl
cmpsl
lods
andb
inc
mov
xor
fnstenv
sti
adc
dec
js
jne
adc
mov
lea
mov
gs
xor
flds
int3
insb
mov
imul
icebp
mov
mov
push
dec
sbb
push
testb
or
test
dec
in
jle
sub
cwtl
fdiv
dec
les
cmp
sbb
cmp
cmp
and
sub
pop
mov
xor
or
jp
or
cmp
lods
cmpsl
fldenv
dec
and
push
add
sub
xchg
pop
and
test
enter
dec
adc
call
jbe
test
repz
adc
or
xchg
lret
and
or
inc
mov
push
adc
mov
cld
in
testb
xlat
dec
pop
negl
rolb
pop
mov
push
pcmpeqd
out
je
jns
push
mov
xchg
inc
lock
or
mov
add
fistpll
add
loop
xor
cmc
test
pop
mov
mov
incb
sbb
out
jmp
rol
and
inc
xchg
sti
sub
sub
int3
mov
negb
jmp
cld
sbb
ljmp
divl
mov
inc
mov
ret
test
les
and
jo
mov
cli
xor
icebp
push
or
and
out
dec
enter
pushf
leave
or
dec
push
fistl
sub
adc
cs
cltd
mov
repnz
lock
hlt
xor
cld
daa
adc
inc
cmp
add
cld
xchg
cwtl
dec
in
xor
rcrb
cmc
in
pop
mov
dec
mov
in
cmp
inc
fsubrp
pop
repnz
es
xor
jae
push
ja
leave
lock
popf
dec
mov
push
xlat
adc
or
fmulp
repz
jle
sub
fwait
cmp
mov
xlat
and
mov
fcomps
loopne
lahf
repnz
and
sub
stos
mov
cwtl
cwtl
jo
sahf
ss
pop
scas
cwtl
jl
and
dec
and
pushf
fcomps
cmpsb
and
jnp
push
shrb
mov
sbb
cmc
hlt
test
lret
das
hlt
pop
sarb
sti
push
inc
imul
jle
mov
scas
jg
jb
adcb
jle
imulb
aaa
jp
adc
cmpb
lock
fdivrl
mov
pusha
pop
jge
rorb
shll
testb
jne
loope
cmp
lahf
ror
mov
ficompl
aaa
lret
push
mov
push
fidivs
jbe
push
fsubs
ret
rcr
fimuls
mov
cmp
jae
jmpw
es
adc
out
stc
or
int3
scas
sub
jge
aaa
push
push
and
adc
fcoml
shlb
xchg
inc
mov
mulb
adc
push
pop
jne
adc
and
sub
in
mov
push
in
xchg
stc
dec
xchg
loop
inc
mov
ja
pop
push
pop
push
jnp
lret
clc
insl
insb
dec
cmp
addr16
add
stos
mov
jo
xchg
daa
or
cmp
sbb
scas
inc
or
fldln2
dec
cmp
das
in
push
mov
andb
cmpsb
xchg
cmp
jmp
sbb
hlt
jecxz
mov
mov
fidivs
test
popl
push
mov
jo
vpcmpeqw
dec
scas
jbe
fwait
add
sbb
popa
test
mov
ret
pushf
jg
jmp
mov
xchg
fistl
ljmp
ljmp
cli
into
fnstenv
add
clc
lret
xchg
fsub
adc
shrl
ret
imul
mov
mov
add
cld
mov
dec
mov
jnp
aas
cmp
mov
add
outsl
and
add
mov
jmp
mov
addr16
dec
lea
xor
mov
out
movsl
shlb
xor
and
cmp
mov
aam
pop
aad
roll
iret
mov
adc
in
mov
cli
call
daa
jb
xchg
push
nop
mov
aaa
stos
cmpsl
inc
xor
aas
addl
bound
mov
cwtl
rclb
popf
fstpl
cmpsb
ret
or
cmpsb
sbb
shll
xchg
xchg
xchg
cmpb
xchg
ljmp
jl
push
cmp
out
loop
fisttpll
dec
in
add
call
rcrb
push
mov
jno
dec
or
sbb
pop
cmp
inc
ja
loopne
and
jle
repz
jbe
or
in
shlb
scas
in
std
push
mov
mov
cltd
fistl
pop
add
push
aas
mov
xchg
ja
xor
out
imul
xchg
clc
pop
mov
rorl
pop
jl
adc
sbb
lds
mov
inc
xor
hlt
adc
into
les
inc
push
sub
aas
xor
adc
fcmovbe
gs
aas
or
dec
sbb
xor
mov
jb
stos
out
xchg
add
and
sbb
ja
or
push
out
pop
inc
jnp
outsl
subl
add
mov
xor
inc
lds
sub
sbb
and
push
push
clc
ja
push
rcrb
fwait
gs
test
sub
xor
push
xchg
inc
or
es
mov
fsqrt
lret
stos
mov
sub
sahf
push
dec
enter
pop
ret
dec
in
ss
push
ffree
pop
pop
mov
jge
pop
dec
cmc
stos
cmp
test
or
mov
pop
hlt
sub
xchg
xchg
mov
ret
xchg
into
xchg
inc
gs
fwait
test
xor
ret
pop
jecxz
iret
jecxz
sbb
inc
iret
cmp
sti
dec
fisubs
int
fstps
fstpt
and
in
pop
mov
push
nop
ret
xchg
stos
xor
sbb
jle
int3
shll
mov
aaa
pop
fisubl
sbb
repz
and
nopl
mov
xchg
sub
lock
pop
sbb
jg
cmp
add
int
sub
addr16
cltd
fistpl
jnp
mov
mov
stos
inc
out
add
das
inc
pop
pop
les
sbb
sub
fmuls
cmp
popf
jle
add
notl
cmp
xchg
or
stc
xchg
dec
enter
adc
aas
dec
xor
pop
sbb
and
mov
or
fbstp
idiv
call
and
stos
movsl
lods
rorl
lods
aam
and
mov
lods
dec
loop
mov
add
outsb
jge
and
push
jb
sub
and
outsl
enter
mov
aas
in
int3
or
push
movsb
lods
mov
xchg
xchg
shll
sbbl
insl
pop
stc
movsb
and
mov
out
sbb
mov
mov
sbb
insb
cmp
imul
imul
gs
loop
mov
inc
test
mov
das
jb
iret
stos
out
jecxz
cmpsb
arpl
lods
sbb
pop
pop
scas
jecxz
mov
rorl
fldt
psrld
int
push
mov
xor
mov
add
jge
xchg
push
dec
cmp
xchg
clc
push
pop
loope
jno
jne
and
xchg
xor
jns
fiaddl
repnz
scas
stos
pop
and
push
insb
aas
andb
das
shlb
int3
jmp
xlat
mov
mov
mov
jo
fwait
mov
jbe
mov
xchg
adc
shlb
clc
lds
and
add
daa
mov
adc
sbb
xor
mov
stos
sub
sub
fisttpl
out
fisttpl
in
in
mov
mov
sbb
xchg
rcll
push
lods
push
mov
xchg
movsl
xchg
scas
and
lds
xor
push
clc
mov
dec
pop
jmp
pop
ja
pusha
jmp
cmp
adc
cmp
testb
push
punpckhbw
and
jg
jnp
das
out
push
sbb
jg
pop
pop
xchg
jo
int3
jne
ror
sub
sbb
fs
lods
and
xchg
cmp
int3
jcxz
test
add
mov
inc
pop
push
xorl
ud1
jb
inc
mov
push
jnp
dec
xchg
aaa
int
out
ficomps
iret
jecxz
adc
loope
or
fdivrs
repz
divb
je
rcrb
push
and
arpl
or
andb
in
jle
andl
cwtl
ljmp
add
sbb
cmp
adc
inc
stos
sbb
add
fucom
mov
lahf
or
or
add
mov
sbb
stos
clc
fs
jno
mov
inc
sbb
negb
out
jns
cmp
jl
xlat
daa
xchg
sahf
adc
adc
aas
cld
js
adc
cltd
push
std
mov
push
fstpt
loop
mov
imul
insb
cmp
jge
imull
iret
pop
push
sub
fcmovb
sbbb
sub
daa
out
adc
pop
push
cmp
cmpsb
jmp
inc
mov
jne
sbb
xlat
psrlq
or
sub
xchg
enter
mov
mov
dec
cmc
jge
lea
or
rolb
aam
or
in
sahf
loope
test
stc
add
loope,pn
mov
push
fistpll
sub
xor
cli
adc
scas
xchg
aam
sub
rcr
mov
ficomps
dec
das
and
in
cmp
xchg
outsl
popl
fstpt
lds
jbe
lods
dec
xor
mov
cmp
mov
cltd
jl
push
add
call
cwtl
mov
xlat
pop
xor
pop
and
sbb
xchg
dec
repz
push
add
movsb
xor
push
repnz
or
cmp
sbb
lods
adc
jnp
fstpl
push
cmp
in
out
fildl
jae
iret
mov
int
push
mov
in
jae
mov
fistpll
in
lret
ficoms
sub
nop
or
icebp
mov
roll
mov
dec
std
pop
test
test
gs
lret
push
push
test
add
xor
fsubs
dec
scas
negb
das
out
xor
push
icebp
lcall
inc
stc
push
das
mov
and
pop
cmpsb
icebp
sub
push
cli
in
mov
fwait
aaa
add
xor
shrb
push
cmova
cmp
sub
xchg
call
mov
sbb
mov
dec
ret
lods
pop
aad
mov
sbb
out
test
add
in
adc
inc
inc
cmp
test
or
jmp
pop
aam
add
adc
add
jg
lcall
sbb
mov
dec
inc
sub
ljmp
jl
loop
xor
jo
rcl
lahf
add
pop
aaa
cmp
enter
jno
dec
cmp
pop
push
cs
loop
inc
jb
jb
add
push
or
popf
fildl
cld
add
mov
add
insl
and
test
cli
ss
in
ds
imul
mov
in
jbe
negl
xchg
loope
or
out
aam
ret
dec
outsb
les
subb
dec
inc
adc
push
sub
lcall
add
divb
push
faddp
sub
pop
pop
push
aad
jecxz
mov
addr16
pop
and
cmp
mov
pop
mov
push
xor
xor
int
js
mov
popf
jns
push
adc
cltd
pushf
scas
cmp
add
ficoms
and
int
cmp
adc
mov
lods
inc
xchg
pushf
mov
test
fisubs
aam
mov
pop
push
out
popa
loope
aam
sarb
jne
jns
mov
jmp
repz
jl
ds
dec
push
stc
adc
push
adc
imul
into
fbld
testb
stos
insl
mov
outsl
inc
out
sbb
testb
add
testb
add
scas
or
mov
push
or
pushf
push
xchg
out
pusha
cmp
rclb
shlb
gs
push
rorl
sub
outsb
js
es
cmpsl
xchg
jnp
aam
fs
call
ja
lcall
gs
dec
add
xorb
and
jns
es
xor
shlb
xchg
icebp
dec
push
mov
ljmp
and
jbe
mov
test
cmp
pop
jl
inc
out
sub
inc
in
shlb
test
jb
sub
jnp
cmp
test
sub
cli
push
sbb
jl
pop
rol
loope
enter
aad
mov
push
shrl
das
inc
aaa
addr16
inc
pop
mov
mov
push
pop
and
push
dec
jp
adc
jg
popf
jg
addr16
loope
aas
loopne
negb
sbb
adc
sbb
xor
sarb
mov
dec
inc
or
je
call
or
into
clc
inc
in
stc
call
testl
aam
xchg
fstpl
xchg
mov
jle
outsb
gs
xchg
mov
insl
outsl
xchg
mov
cld
mov
and
push
cmpsl
daa
mov
adc
rolb
rcrl
cli
add
xor
push
mov
jbe
adc
add
fucomi
rcrb
mov
jno
sub
ljmp
popf
scas
sbb
cmp
jl
shll
dec
push
mov
xchg
movsb
es
add
push
adcb
scas
mov
inc
mov
rcrl
mov
loopne
aad
push
cltd
fmull
mov
insl
cld
dec
and
ret
mov
jmp
pop
pop
dec
xor
mov
ret
jbe
add
xchg
ja
mov
adc
mov
outsl
hlt
ljmp
mov
push
lea
inc
cld
mov
daa
and
aad
cmpsl
imul
xchg
outsl
pop
or
ss
adc
cmp
mov
and
rcrl
movsl
sarb
jecxz
call
mov
add
mov
arpl
call
fldt
notl
sbb
mov
push
dec
pop
pop
pop
sbb
push
adc
xor
xor
rol
add
add
pusha
popf
xchg
clc
jno
jae
push
jbe
or
xchg
xchg
cli
mov
dec
sub
jl
sub
inc
movsl
sub
pop
in
sbb
push
dec
cli
cmp
mulb
outsb
fwait
xchg
in
cmp
mov
jecxz
ss
mov
add
popf
xlat
inc
test
adc
cmpl
mov
insb
nop
adc
sbb
cmc
ja
cs
xchg
pop
mov
pop
aam
out
inc
sub
cmp
and
dec
fsubl
clc
pushf
jge
inc
or
rcl
push
cmp
in
sarb
fisttpl
insb
jne
jge
ss
fwait
jmp
cmp
inc
aam
jl
pop
les
add
cmp
insl
mov
ljmp
enter
mov
jbe
cwtl
add
xchg
xchg
loope
sub
sahf
cmp
aas
es
lcall
add
pop
bound
xchg
testl
or
cmp
push
fwait
pusha
repnz
out
add
push
stc
leave
jno
ret
into
inc
lds
dec
out
ljmp
mov
lret
adc
pop
push
insb
shlb
cs
scas
icebp
mov
jae
sbb
sub
stos
repz
inc
out
jns
push
hlt
add
mov
idiv
mov
mov
adc
imull
mov
adc
cmp
sarl
icebp
mov
movsb
dec
push
stc
adc
sti
sub
lods
bound
sahf
jmp
enter
call
xor
push
push
pop
push
dec
sub
lcall
dec
or
and
push
imul
cmpsl
movsb
adc
out
jns
pop
arpl
popf
pop
jo
test
mov
mov
and
adc
mov
push
filds
leave
push
xor
js
adc
lret
into
test
gs
int3
or
cmp
xchg
data16
xor
jmp
lahf
mov
inc
or
sbb
pop
push
pop
jne
mov
mov
lods
icebp
cmp
out
test
ror
mov
nop
lahf
jb
mov
popf
mov
push
ss
leave
call
cmpsb
arpl
std
data16
out
mov
dec
fisubrl
cmp
cmpb
cmp
test
and
dec
mov
cmp
iret
add
and
ret
scas
lahf
and
xchg
sbb
scas
push
jge,pt
sub
insl
loop
pop
jb
jne
dec
pop
jmp
mov
cmp
cmp
aaa
dec
mov
shlb
xchg
dec
sarl
and
sbb
or
push
jp
xchg
lds
in
inc
daa
adc
mov
je
lds
cmp
jle
mov
outsl
gs
and
push
loopne
sub
mov
pop
push
jbe
cmp
push
lods
mov
inc
sub
into
adc
in
mov
cltd
mov
cwtl
jae
cmpsb
jecxz
inc
out
fcomps
sti
aaa
jge
push
cmp
sub
inc
jg
sub
push
cli
insb
inc
ja
inc
or
mov
push
aad
aad
pop
add
icebp
jnp
inc
fisttpll
popa
add
test
jl
mov
xchg
xor
fs
sbb
pushf
or
andl
cmpsb
cltd
mov
in
add
sub
mov
pop
call
pusha
dec
int3
push
shlb
or
inc
hlt
or
xchg
cld
mov
insb
cli
mov
movsl
mov
mov
inc
xor
lret
mov
rcll
pop
ror
xchg
into
ljmp
cli
out
sahf
fnsave
int
sub
dec
dec
ja
in
scas
ljmp
or
int
xchg
jmp
js
stos
imul
enter
xchg
rorl
mov
repnz
xchg
loopne
adc
cmpsl
ret
jae
sbb
lods
pop
test
cs
dec
mov
mov
int3
fidivrl
js
xchg
shl
cmpsl
lea
add
rcrb
int
andl
push
inc
je
cmc
xchg
out
ss
pop
lea
xchg
mov
outsl
adc
popa
in
xchg
notl
pop
fdivr
outsb
xchg
ret
sti
or
sti
repnz
cli
xchg
mov
or
enter
syscall
imul
stos
jp
push
test
imul
loope
cmp
xlat
xchg
ss
jo
rol
lods
jns
scas
dec
gs
shl
cmpsb
xchg
inc
mov
pop
cmp
pop
ss
inc
push
inc
mov
mov
int
insl
leave
dec
pop
int
push
mov
ss
repz
adc
cmp
inc
insb
pop
mov
push
cmp
fidivrs
and
loopne
in
push
jp
imul
mov
mov
lahf
cmp
and
cmpb
pop
test
fidivrl
inc
stc
cmp
into
xchg
push
mov
loope
das
insl
jo
cwtl
pop
add
push
in
fstps
add
or
gs
mov
movsl
or
sub
mov
mov
sub
jp
mov
fldt
cmc
out
call
jmp
pop
or
daa
inc
insl
jl
dec
cmpsb
add
lahf
imul
and
ja
push
and
rorl
push
pop
sub
out
fdivrs
sbb
jo
cmc
push
pop
and
push
mov
addr16
stos
xor
fstpl
rcrb
cmp
lods
into
pop
jae
push
cs
sub
adcb
shl
mov
fsubrs
and
into
pop
lret
out
sbb
out
test
xchg
pop
lea
roll
adc
fmuls
push
lods
mov
pusha
xchg
mov
push
add
mov
jnp
jbe
sbb
sarl
cmp
fbstp
push
out
and
jns
or
mov
mov
int3
mov
mov
sbb
insb
dec
das
out
sub
scas
testl
pop
add
es
mov
lds
pusha
xchg
mov
sti
jle
js
cmp
out
loop
inc
into
or
push
xchg
inc
rclb
xchg
pop
pop
cld
fsub
push
fwait
ljmp
cmp
loop
test
xlat
mov
mov
push
cmp
push
cmpsl
xchg
dec
sub
es
push
push
jno
add
les
xor
divl
push
aad
clc
pop
arpl
xor
les
jo
notl
xor
jae
arpl
xlat
add
pop
push
pop
leave
bound
xchg
ret
repz
or
jmp
call
fwait
mov
out
mov
xchg
in
dec
pop
pop
inc
adc
xor
icebp
push
sub
xchg
cltd
jge
push
dec
sbb
mov
movsb
inc
add
adc
repnz
push
fs
push
xor
daa
scas
jge
popf
jns
popf
inc
jp
sbb
jge
jno
fiadds
test
xchg
scas
lahf
out
and
fimull
and
cmp
push
xchg
jae
sub
sub
cmpsb
cmp
mov
lret
scas
pop
lock
mov
daa
ret
pop
decb
pop
das
mov
sbb
ljmp
lock
gs
out
imulb
sub
cli
mov
das
das
sbb
clc
shlb
ficomps
fsubl
inc
shrb
sahf
cmp
xchg
js
rcl
fcmovbe
mov
lahf
ficoml
inc
loopne
lret
inc
add
rcrl
fadds
and
clc
into
add
sub
cmp
clc
mov
sub
cwtl
cmp
aas
jecxz
add
cmp
mov
mov
and
repz
mov
ds
stc
std
xchg
sbb
or
sbb
and
push
jns
mov
enter
insb
jne
xor
jp
test
mov
mov
sub
sti
dec
out
lea
adc
jge
fadd
or
iret
cmp
mov
inc
ja
rolb
and
push
incb
xor
sub
outsb
fnstenv
stos
cmp
fimull
mov
add
scas
fidivs
inc
mov
cwtl
movsb
mov
movsl
jno
stos
and
movsb
pop
pop
dec
test
cmp
adc
dec
adc
in
stos
icebp
jp
fstl
cs
bound
inc
dec
jo
addr16
loop
pop
sub
xchg
loope
je
scas
mov
fsubrp
pop
jecxz
adc
in
mov
movsb
rorl
push
push
pop
in
loopne
sbb
pop
mov
dec
dec
jl
cltd
mov
jo
xchg
cltd
fadds
adc
sahf
mov
and
mov
sub
outsl
leave
push
aaa
fbstp
fbstp
das
pop
jbe
insb
fildl
jl
adc
rcll
xchg
outsl
js
ljmp
icebp
js
fwait
ret
mov
ds
pop
fcompl
lret
sub
sub
scas
ret
jp
add
enter
clc
push
pop
mov
adc
andb
inc
out
mov
aas
push
ficomps
inc
add
popa
out
out
push
scas
subb
add
add
ficomps
enter
mov
outsl
cmp
jno
jne
ret
in
add
jmp
mov
sbb
push
jge
jbe
inc
or
pop
cmp
adc
add
jnp
lea
stos
adc
mov
ret
lods
mov
in
pop
jne
int3
mov
enter
mov
sub
or
push
lods
in
loope
adc
push
popa
es
push
xlat
mov
out
mov
loop
mov
not
dec
pop
add
pop
jb
addl
scas
daa
lock
fistl
push
cmp
jae
pop
sbb
mov
mov
ljmp
push
xor
xor
cmp
les
and
imull
sbb
inc
mov
aam
sbb
push
ffreep
pop
fwait
pop
push
jg
mov
pusha
mov
fistpll
int3
nop
jbe
pop
mov
or
jnp
add
lods
das
push
call
daa
rolb
jne
nop
adc
add
mov
int3
add
mov
pop
lahf
ss
jmp
sti
push
test
stos
pop
std
loope
mov
adc
jno
mov
xchg
ljmp
aam
mov
or
xor
leave
push
pop
xlat
mov
cltd
add
jmp
jg
pop
push
cmovge
cld
xchg
mov
jne
mov
xlat
cld
xchg
mov
outsl
out
adc
push
outsb
xchg
sbb
dec
cmc
lcall
xchg
inc
ret
rcrl
fiadds
sbb
mov
ds
mov
add
jl
inc
inc
out
enter
xchg
test
jmp
inc
repnz
aaa
rclb
js
addb
or
push
fwait
leave
push
sbb
pop
stos
xchg
lock
fwait
mov
mov
lods
adc
loope
push
ffree
jne
inc
xchg
adc
pushf
lods
lret
out
mov
and
jo
cmp
mov
lret
inc
jge
xor
into
jo
cmp
imul
inc
scas
testl
bound
pop
and
sub
inc
iret
mov
pop
push
dec
aad
mov
scas
rorb
cmc
es
and
cmc
cmc
daa
out
stc
mov
cmc
jp
das
call
add
sub
inc
xor
push
insl
sahf
leave
pop
mov
out
imul
add
scas
jae
pop
mov
push
adc
inc
fildl
inc
imul
insb
inc
sbb
or
arpl
pop
lock
cmp
out
subb
pop
call
test
insl
jg
pusha
mov
repz
andb
and
lods
enter
call
ss
push
sbb
lea
ret
mov
ret
dec
aam
loopne
cli
stos
dec
mov
jg
pop
call
sbb
sub
push
hlt
mov
imul
test
out
shufps
add
mov
test
mov
subl
incb
shll
adc
sbb
mov
mov
jl
sub
out
out
pop
push
or
mov
cmpsb
push
loopne
xor
arpl
testl
pop
and
inc
jmp
adc
call
mov
xor
mov
pop
lock
inc
pop
cmpsl
mov
into
shrb
popf
mov
push
int3
lret
adc
dec
movsl
js
test
arpl
sub
scas
dec
lods
ffree
test
fwait
imul
adc
call
fsin
jg
push
ror
and
push
xor
inc
call
sbb
jae
movsb
repz
std
mov
jnp
aaa
imul
mov
rcl
mov
test
int
push
xchg
mov
mov
shr
dec
xchg
scas
jmp
addr16
popa
xchg
dec
outsl
jge
fldenv
sbb
jns
mov
jbe
enter
jb
pop
mov
mov
arpl
in
pop
sub
int
pop
inc
inc
js
ret
cwtl
sub
test
xor
repz
jno
lods
ja
or
cmp
repnz
test
rorl
lock
mov
lock
pop
loop
xor
or
cmc
fisttpl
ret
push
popf
mov
xchg
xchg
stos
popa
aaa
jno
cmc
jge
shl
fmull
shl
sub
jg
nop
orb
dec
push
mov
push
cmp
scas
loopne
mov
cmp
mov
mov
inc
insl
ds
mov
sbb
decb
flds
pop
fisubrs
test
cwtl
add
xchg
cld
mov
inc
fcom
inc
mov
mov
add
jo
pop
int3
fnstsw
into
jbe
push
bound
incb
loop
xor
scas
gs
out
xor
sbb
add
or
sub
sbb
fdivs
sti
pop
jge
cld
and
fs
sub
mov
dec
xor
add
bound
cmpsl
adc
inc
pop
pop
orl
mov
add
mov
xchg
shll
inc
div
jbe
ret
out
xchg
add
fdivrl
out
jmp
enter
inc
movsl
data16
adc
je
pop
mov
xchg
fdivs
xchg
push
jnp
test
mov
shl
mov
fadd
inc
cli
mov
dec
gs
mov
fbld
inc
data16
push
loop
cmp
cwtl
add
jno
mov
jno
push
push
cmc
sahf
ret
sub
add
dec
fadds
xchg
jnp
xor
pop
xor
jo
in
sub
test
sbb
jno
mov
sub
mov
mov
leave
in
cwtl
jae
addr16
pop
movsl
mov
mov
dec
mov
iret
icebp
icebp
sub
jb
ljmp
dec
in
mov
add
and
push
xchg
or
ds
lahf
inc
js
jae
adc
in
dec
xchg
push
mov
xor
clc
lods
loopne
mov
add
or
add
das
rolb
rol
add
jmp
in
pop
lahf
push
out
mov
push
test
mov
inc
int3
lea
mov
add
mov
adc
mov
xchg
scas
je
jmp
into
insb
push
leave
test
lds
mov
inc
xchg
fidivrs
add
inc
jge
inc
pop
push
sub
push
fwait
outsb
in
rclb
pop
xor
movsb
dec
jns
ljmp
cltd
sub
mov
movsb
mov
pushf
inc
or
jp
mov
adcb
mov
mov
daa
push
adc
inc
pop
mov
xchg
in
dec
repz
cmp
int3
repnz
repz
loope
inc
fisttpll
outsb
cmp
pop
sub
je
adc
pop
add
jb
dec
sub
adc
cmp
dec
lods
jmp
int3
enter
lret
xor
test
imul
adc
fdivrl
add
and
jns
sbb
jno
mov
faddp
fcomps
jecxz
ja
out
jmp
pop
mov
xor
xchg
mov
or
ja
cld
or
into
add
enter
push
pop
hlt
and
jo
punpckhdq
cmpsb
inc
cld
inc
jbe
ret
iret
lods
jns
xor
shrl
cltd
repz
xchg
lret
cli
and
cli
mov
jno
loopne
test
push
lret
stos
xor
fidivl
mov
stos
xchg
dec
push
inc
rcrl
and
arpl
and
lret
push
bound
sti
popf
rcr
cmp
mov
pushf
stos
lret
dec
dec
stos
movsl
mov
pop
fidivrl
bound
pop
roll
push
jns
cmp
cmp
in
sti
mov
leave
and
lcall
jb
fwait
sub
lahf
rolb
aaa
inc
add
rol
xchg
out
xchg
fisttpl
insb
adc
cmpsl
iret
xor
popa
push
je
gs
cmp
xor
dec
int
mov
es
sub
sub
out
in
jp
fsubl
sub
sub
dec
cmpsb
ret
and
ret
add
pop
mov
dec
scas
je
sti
xor
add
fdivrs
enter
ds
and
lds
xchg
push
jnp
mov
or
xchg
jmp
nop
pop
imul
inc
jnp,pn
dec
mov
mov
loope
pushl
cmp
sar
jecxz
movsl
std
movsb
jno
mov
add
push
pop
push
es
test
mov
fs
xchg
sarl
xchg
or
outsl
dec
push
icebp
adc
call
clc
cmc
cld
xchg
pop
mull
push
outsb
insb
call
add
ss
dec
push
clc
shrb
popf
and
pushf
mov
call
nop
fidivs
xchg
mov
sub
mov
pop
xchg
test
inc
lds
sahf
add
xchg
arpl
rcr
jnp
scas
outsb
cmp
pop
cltd
sub
xchg
sbb
test
lret
idivb
jbe
sbb
xchg
push
repnz
std
out
mov
mov
push
stc
roll
mov
cwtl
inc
mov
mov
mov
adc
xchg
dec
mov
pop
lahf
push
jmp
xor
cmp
mov
sub
xchg
popa
xor
jecxz
int3
pop
xchg
jmp
adc
sbb
mov
xchg
push
hlt
fisttpl
sub
aas
cwtl
loopne
into
adc
nop
adc
cmpsb
cmp
xor
cld
cmpsl
mov
aas
out
and
dec
lret
es
aaa
ret
int3
jg
shl
or
in
fs
repz
adc
or
ljmp
dec
pop
jmp
sbb
mov
xchg
mov
out
cmp
aas
iret
mov
xor
sbb
or
xor
pop
fwait
inc
jnp
mov
iret
mov
mov
insl
outsl
mov
sbb
push
inc
and
mov
xchg
out
dec
ljmp
add
mov
pop
aam
aas
lret
je
push
jmp
mov
mov
mov
adc
int
push
loopne
or
fsub
jnp
sub
andl
cmp
in
push
pop
or
xor
testl
pop
jp
sub
aad
jae
jecxz
cmp
sbb
mov
mov
mov
add
jnp
sub
push
enter
inc
mov
pop
dec
inc
jge
rcrb
jnp
pop
jns
scas
xor
cmp
dec
movsb
call
lret
mov
jno
mov
ds
inc
adc
jbe
jnp
and
cmp
inc
cmp
lea
mov
adc
ljmp
sub
xchg
cwtl
sbb
adc
xchg
rorl
imul
sub
addl
fmuls
push
scas
nop
push
adc
add
inc
mov
xchg
out
dec
insl
adc
xor
bound
mov
mov
pop
movsb
out
mov
popf
movsb
jge
or
mov
mov
adc
cmpsb
jl
add
shrl
lds
push
jmp
pop
add
or
and
addb
sahf
sub
test
aad
in
xor
hlt
xor
jge
aas
cmp
out
cmpsl
inc
sbb
in
mov
inc
jns,pn
mov
aas
jecxz
jo
je
xchg
loop
sub
cmp
repnz
arpl
and
das
pop
sti
pop
jb
adc
lahf
addr16
mov
jbe
aam
int
inc
fcomip
cmc
hlt
mov
dec
jns
push
sbb
xor
outsb
scas
add
fadd
sbb
jecxz
mov
aam
mov
mov
bound
dec
or
adc
enter
fdivs
add
sub
sub
test
sbb
pushf
cmpsl
fisubrs
dec
aad
pop
mov
lea
filds
mov
notb
fcmovnb
sbb
jp
xchg
movl
xor
and
iret
push
sbbb
push
data16
lods
adc
pushf
or
or
xor
add
lds
add
mov
testl
out
scas
dec
push
aas
and
lcall
mov
fisubl
iret
int
jle
mov
pusha
adc
out
movsb
pusha
lahf
push
lock
lret
adc
sbb
add
dec
pop
pop
call
mov
dec
pop
mov
cltd
push
jne
push
leave
fsubrp
jl
cmp
pop
inc
insb
sti
push
mov
ja
arpl
movsb
xchg
sbb
scas
nop
aad
popf
mov
shrl
cmc
or
jg
pushf
sub
and
cmpsl
test
frstor
inc
xchg
push
xchg
xlat
and
adc
imul
jbe
push
jo
mov
add
sbb
mov
xor
mov
repz
push
jle
mov
mov
pop
add
rcl
inc
loope
shll
or
inc
adc
mov
sarb
test
add
dec
fldenv
int3
aaa
sbb
out
inc
xchg
cltd
ja
or
adc
sub
and
imul
dec
xchg
ljmp
inc
push
dec
xorl
jbe
movsb
xchg
and
add
ret
mov
ficomps
mov
inc
out
xchg
in
out
add
data16
cmc
bound
push
cmp
loope
add
adc
pop
cmp
mov
jp
movsl
push
int
xor
es
mov
xor
cmpsb
cltd
sbb
adc
out
scas
mov
scas
lahf
and
xor
leave
sub
and
sbbl
movsb
lcall
out
in
cwtl
xchg
jbe
les
push
push
sub
cmp
mov
adc
lock
lahf
dec
enter
jns
enter
shrb
xchg
loope
sub
inc
inc
lcall
cli
out
ja
sub
lcall
jmp
push
fisubrs
lcall
adc
jmp
in
mov
mov
xchg
sbbb
popf
shlb
loopne
hlt
sbb
dec
fsubrl
addr16
adc
xchg
pop
or
adc
popa
fnstsw
std
nop
je
idivl
lods
jb
loopne
xchg
push
pop
inc
jmp
addl
stos
nop
notb
icebp
mov
jae
mov
lock
mov
adc
outsl
xchg
pop
lock
mov
in
inc
or
jmp
movsl
aas
mov
es
dec
sub
out
je
xor
mov
jnp
js
sub
fisubrs
xchg
ss
in
out
and
test
sarl
insb
lds
aaa
mov
inc
xchg
icebp
dec
and
jp
std
pusha
jno
scas
ficoms
xchg
and
mov
push
jae
sub
jg
push
sbb
add
cs
xchg
cmpsb
xchg
dec
adc
cmp
sub
mov
add
pop
mov
sbb
cmp
and
movsl
mov
and
ljmp
arpl
mov
mov
pop
and
mov
cmpsb
jns
xor
cmp
mov
pop
out
into
arpl
sbb
mov
cwtl
in
cli
mov
sub
shrb
add
pop
imul
sbb
xchg
cli
xchg
aam
sub
adc
ljmp
xor
mov
int
lock
push
and
hlt
stos
inc
rolb
sub
add
int
dec
pop
aas
sahf
shrb
push
xor
inc
xor
loope
xchg
sbb
sahf
outsl
lret
lcall
lret
pop
addr16
mov
pop
and
dec
xor
stos
mov
mov
pop
fs
sti
cmp
xchg
mov
mov
jp
push
adc
xchg
ds
scas
jmp
loope
inc
pusha
pop
mov
xor
lds
mov
sahf
out
add
dec
insl
cld
out
stos
adc
mov
les
aam
jmp
loope
mov
aas
out
add
dec
xor
pop
lock
mov
xor
sbb
xchg
aam
xchg
imul
push
inc
std
iret
adc
mov
push
incb
js
mov
mov
push
jl
add
jnp
outsl
outsl
loope
addr16
addr16
mov
xchg
adc
jmp
daa
push
jge
leave
mov
mov
adc
fwait
mov
addl
ret
out
shll
sbb
cmpsb
and
repz
stc
dec
mov
lods
leave
cmc
adcb
in
cltd
ss
ja
mov
sti
pop
leave
xchg
aas
out
add
jo
ror
insl
add
or
pop
in
and
test
inc
push
cmpsl
cmc
jmp
mov
xchg
fs
mov
jle
mov
jb
ficompl
out
insb
mov
xor
add
cmp
jp
mov
dec
lea
stos
dec
add
ret
fnstcw
push
rolb
notb
sti
loopne
popf
roll
pop
addr16
out
jbe
fwait
push
push
xor
pop
sub
cmpsl
or
mov
sub
dec
pop
cmc
pop
iret
lret
mov
leave
imul
mov
sbb
rolb
ja
aas
add
push
lds
xchg
dec
and
js
and
xchg
fimull
inc
xor
or
mov
outsb
std
cmp
dec
lds
out
aam
fists
or
cmpb
je
fsubrl
hlt
ds
inc
push
push
and
pop
sub
test
adc
fdivrs
mov
enter
sbb
mov
lods
out
mov
sub
and
mov
lods
inc
sbb
fs
insb
ja
ds
decl
lock
jl
cwtl
inc
imul
pushf
int3
push
jge
es
sahf
arpl
sti
arpl
imul
mov
sbb
psrlq
mov
imul
or
jnp
mov
or
add
adc
cmpsb
mov
jb
pop
xlat
jmp
jge
lods
pop
sarl
clc
jne
aaa
push
shl
nop
push
shl
xor
mov
sub
das
shlb
nop
repz
ret
adc
cmpsb
in
dec
sbb
adc
pop
test
mov
insb
mov
dec
js
pop
sub
jmp
pop
jo
mov
xor
xor
cltd
sbb
lret
jno
or
sbb
adc
dec
dec
test
jl
mov
loope
repnz
mov
push
popa
mov
and
mov
enter
aas
jp
mov
xor
sub
adc
sbb
pop
inc
jecxz
adc
dec
push
jbe
push
jmp
mov
inc
push
dec
lea
add
adc
lret
leave
fmuls
ljmp
mov
fsubrs
stc
push
xchg
xlat
inc
dec
mov
sbb
in
xchg
call
push
mov
sti
inc
into
and
sub
push
pop
std
mov
call
aaa
inc
ret
into
dec
lea
sti
loope
inc
mov
xor
cmp
mov
stos
incl
scas
sbb
push
inc
and
notb
cmp
push
push
and
push
xor
cmp
mov
adc
xchg
jmp
shr
xchg
inc
inc
loopne
mov
outsl
fmull
lds
stos
jb
arpl
dec
mov
ret
jge
push
scas
out
sbb
in
clc
push
cmp
cmp
ds
and
dec
ss
push
cmpsb
xor
xchg
stos
adc
jo
push
bnd
mov
and
mov
dec
mov
xchg
jmp
or
ret
sub
cmpl
mov
push
ljmp
lods
inc
pop
lods
iret
adc
ss
mov
ret
sbb
dec
pop
je
adc
cmovne
out
push
xchg
mov
gs
lcall
arpl
outsl
sbb
fdivrp
push
and
and
jo
sbb
and
stos
in
xchg
in
outsb
xor
scas
pop
aas
inc
fimuls
aas
aam
xchg
adc
or
sbb
pop
je
mov
adc
mov
xchg
or
scas
pop
sub
sub
jecxz
pop
movsl
test
insl
fisubs
pusha
cmpsb
jg
jbe
test
mov
mov
xchg
or
add
scas
mov
lret
movsb
mov
mov
jo
dec
pusha
pop
daa
inc
mov
nop
sbb
in
lcall
mov
bnd
daa
push
dec
adc
mov
mov
arpl
lahf
mov
out
insl
pop
mov
aaa
add
sarl
jbe
test
push
sub
enter
jae
dec
mov
push
hlt
into
dec
sub
mov
push
and
enter
dec
rcll
jmp
int
rolb
mov
mov
xchg
sbb
xchg
out
xchg
xor
dec
mov
test
jns
add
mov
xchg
arpl
adc
in
dec
and
add
ret
test
lret
xor
imull
in
stc
sub
sti
xor
mov
fwait
loope
adc
je
lock
sahf
and
enter
or
xchg
addr16
sbb
enter
fwait
in
roll
mov
scas
and
imul
push
dec
sub
test
nop
mov
rolb
push
push
mov
and
push
mov
pop
lds
lahf
inc
pop
and
cltd
inc
loopne
loopne
fsubs
std
pop
popa
add
pop
jnp
jmp
rcll
lfs
pop
push
pop
cmpsb
fs
adc
xchg
sbb
push
ds
xchg
popa
pop
mov
fwait
popf
jb
popf
fs
fcompl
cmp
jle
pushl
inc
test
repz
mov
adc
fld
sub
jb
frstor
ljmp
push
jnp
and
jb
fisubrl
hlt
push
movsb
jb
xchg
lods
mov
push
xchg
add
pop
lcall
jo
notl
mov
push
sbb
iret
je
insl
iret
cwtl
jae
adc
fidivrs
fisttps
mov
incl
mov
mov
xor
push
ja
xchg
cmpb
adc
fcmovbe
jecxz
add
adc
xchg
pop
adc
sbb
lea
dec
inc
and
ja
or
repz
mov
addl
pop
fadd
cwtl
outsl
mov
pop
aam
mov
data16
inc
lret
insl
add
scas
jp
out
scas
test
leave
push
ljmp
out
add
popf
rcll
xchg
ret
xchg
movsb
loope
or
subl
jp
xchg
mov
lock
push
inc
xor
xchg
add
pusha
xorb
push
test
fldt
or
dec
and
pushf
pop
int
addb
lea
adc
mov
mov
pushf
xor
xchg
xor
fistpll
sbb
push
stc
cwtl
mov
xor
fs
cmpsl
push
repnz
imul
mov
dec
and
cmpsb
xchg
pushf
shll
pop
jo
hlt
xor
inc
aam
adc
add
scas
xchg
idivl
adc
adc
cmp
ljmp
xchg
add
movsl
lds
xor
int3
popf
cwtl
xchg
or
sub
inc
inc
pop
cltd
mov
subl
mov
test
add
mov
je
dec
or
out
mov
push
or
and
shr
push
mov
arpl
js
imul
mov
push
pop
or
xchg
push
nop
ja
fcmovb
test
cltd
ss
inc
adc
leave
scas
sar
movsl
adc
sbb
out
in
fsubl
add
cmp
jge
xchg
cmpsb
pop
adc
mov
outsl
push
dec
data16
mov
xchg
push
pop
test
outsl
xor
cmp
mov
mov
ljmp
data16
lds
stc
stos
dec
sbb
mov
xchg
orb
sbb
xor
mov
push
int3
xlat
inc
xchg
fisttpll
int
in
into
inc
mov
fs
pushf
ja
roll
mov
loopne
or
adc
xor
insb
sahf
mov
into
adc
test
or
movsb
xchg
mov
dec
xchg
mov
mov
mov
or
push
lea
and
es
enter
adc
push
cmp
inc
or
xchg
mov
sbb
mov
es
loope
ja
xor
dec
jg
cld
lea
sub
push
push
mov
lahf
and
cmpl
sub
iret
jp
fidivrl
mov
popa
outsl
int
push
sarb
stos
imul
cli
jno
aam
sbb
inc
jp
xchg
pop
sub
xchg
dec
popa
adc
cmp
enter
les
push
lcall
jno
lret
scas
stos
push
mov
add
movsl
aam
subb
ds
sbb
lea
xor
enter
in
gs
icebp
add
jmp
imulb
xchg
jl
jp
pop
pop
mov
les
mov
cmp
xchg
insb
iret
pop
mov
out
aam
mov
fbld
and
es
jmp
mov
sarl
sarl
pop
imul
and
shr
negb
sub
dec
inc
leave
push
into
int
xchg
push
adc
in
and
cwtl
xlat
fimuls
jae
and
fiadds
repnz
jne,pn
push
js
inc
cltd
jnp
cmpsl
jmp
inc
jne
mov
and
mov
arpl
les
insl
stos
jmp
shrb
and
bound
sbb
aad
dec
or
mov
mov
inc
xor
inc
mov
push
pop
lcall
lods
xchg
add
scas
mov
adc
dec
lahf
inc
push
dec
dec
repz
sbb
test
xchg
cmp
push
out
mov
inc
mov
sysenter
mov
out
repnz
pop
cmp
sub
sti
jmp
mov
dec
pop
pop
in
sub
mov
jle
jecxz
and
pop
dec
sub
lock
icebp
mov
pop
fcos
ljmp
int
and
xchg
or
adc
mov
bound
pop
pop
or
popf
cmpsl
ret
push
fists
cmp
lret
nop
dec
and
mov
or
test
aam
dec
xchg
addr16
xchg
fdivrl
cmp
int
test
mov
pushl
outsl
inc
mov
jl
lea
movsb
add
push
xor
testb
dec
add
es
hlt
pop
xchg
pop
mov
push
rolb
test
ds
mov
push
jns
insb
mov
xchg
lahf
lea
arpl
enter
push
push
cmc
sbb
bound
dec
fildll
mov
jecxz
adc
out
pop
pop
rcrb
mov
ret
xchg
rcr
outsb
pop
mov
loop
sub
add
push
es
imul
subl
mov
and
lret
fstpl
inc
mov
daa
daa
movsb
outsb
sbb
jo
fdivl
xchg
mov
repnz
leave
or
jmp
xor
pop
fnsave
jmp
pop
int
cmp
xchg
adc
ja
aas
sahf
repz
les
enter
inc
mov
mov
jns
dec
test
inc
insb
shr
imul
lock
std
jo
or
out
and
dec
pop
add
addr16
dec
data16
in
inc
cmovne
xchg
and
xlat
into
dec
lret
call
and
jmp
pop
adcl
cmc
ds
cs
mov
imul
push
inc
rclb
es
xor
in
adc
push
cwtl
pop
jae
inc
mov
bound
or
das
daa
stos
pop
in
cmp
ret
push
aaa
mov
nop
bound
stos
bound
xchg
inc
mov
roll
mov
sbb
pusha
fadds
aaa
nop
mov
test
or
mov
jmp
rcll
std
imul
or
sti
into
aam
xchg
or
mov
jno
jno
imul
loope
push
mov
jl
push
cmp
test
xchg
sbb
into
xchg
cmpsb
arpl
cmpsb
and
lret
add
inc
cmpsl
outsb
xor
imul
fsubr
cmp
jbe
push
cmpsl
ljmp
pushf
test
scas
test
mov
and
sub
nop
sti
xchg
push
mov
push
fs
jle
add
sub
loopne
outsb
xchg
mov
cmp
mov
mov
stos
xchg
push
or
and
ljmp
daa
xchg
and
out
and
rcl
pop
lahf
ss
mov
in
into
das
inc
pop
push
add
lods
daa
imul
inc
jb
insb
and
mov
shl
dec
in
mov
lret
push
mov
arpl
xor
sub
clc
int
mov
call
push
xor
rorb
movsb
or
test
pop
test
push
imul
sbb
jns
std
ficoms
bound
push
test
sub
int3
or
adc
jge
or
icebp
or
icebp
and
lcall
cmpsb
sub
movsb
fidivl
mul
add
jns
cmpsl
aaa
jnp
pop
mov
mov
dec
addr16
punpcklbw
int
mov
aam
int3
lods
xchg
ds
pop
jb
sarl
ret
xlat
arpl
sbb
jns
out
aad
int3
dec
aad
dec
idivl
fs
xor
pop
mov
push
or
adc
cmp
sub
push
inc
dec
lds
mov
mov
push
dec
imul
bound
mov
lret
xor
xlat
outsl
dec
sbb
je
loop
lds
xor
dec
loop
je
xor
outsl
aas
push
mov
or
or
mov
rolb
out
iret
fwait
inc
jge
mov
or
out
jnp
pop
xor
push
or
xchg
sub
sub
faddl
int3
jl
sub
loop
jo
pop
daa
leave
dec
fdivrl
ljmp
fists
int3
fcompl
inc
push
std
in
mov
popa
jnp
cld
ss
idivb
push
mov
lret
xor
xchg
mov
fwait
nop
aam
sub
pop
sub
and
mov
jno
mov
pop
and
int
or
out
mov
and
int
push
jg
inc
jl
pop
nop
xchg
add
jae
push
mov
mov
or
ss
pop
mov
aaa
ret
cpuid
jae
sub
rolb
subl
stos
mov
fnstcw
mov
pop
fcmove
cmp
loope
hlt
lock
sub
xchg
hlt
mov
xchg
mov
mov
les
mov
out
ja
or
out
sarl
rolb
mov
outsb
test
or
jle
pop
xlat
lret
nop
stos
ljmp
repnz
pop
out
sbb
xlat
loopne
scas
push
jns
in
jbe
addr16
idivb
shrb
sbb
mov
xor
fcomps
repz
inc
jg
int3
xor
mov
icebp
xchg
inc
repz
and
cmpsb
xlat
or
lods
jb
mov
arpl
sub
inc
enter
std
fldenv
or
adc
mov
insl
and
mov
mov
enter
jns
hlt
cli
int3
test
cmp
jno
addr16
pop
xor
filds
cmp
jbe
mov
fsts
icebp
out
test
int3
pop
jo
mov
test
cmp
push
stos
cmp
in
int3
mov
pop
push
aaa
loop
xchg
repnz
fsts
in
mov
js
sbb
xor
cs
jmp
cmp
jmp
xor
sub
popf
jns
pop
pushf
pop
push
sub
pop
sbb
iret
push
and
push
lods
xchg
dec
ja
mov
in
xor
pop
sub
or
xchg
lcall
pop
ss
sub
mov
shrb
pop
lahf
push
and
pusha
movsb
sbb
loopne
jge
stc
xor
and
rcrb
test
testl
adc
in
ficomps
ja
jae
std
cltd
jge
mov
mov
jge
and
pop
xchg
xchg
fisubrs
jge
mov
fcomps
adc
inc
out
sahf
add
sbb
mov
xchg
xchg
mov
cmp
pop
lcall
imul
sub
push
jge
push
jmp
xor
inc
mov
pop
cmp
movsl
fisttpl
insb
orb
xor
add
arpl
mov
ficoms
aaa
xor
rcll
fdivl
es
fs
jmp
inc
jge
sub
iret
cmp
add
add
roll
pop
shrd
aam
ficoms
or
inc
xchg
fiaddl
jne
pop
xchg
inc
lds
push
arpl
cmp
daa
addl
stos
nop
jecxz
or
gs
aas
xchg
mov
stos
cmp
jno
jno
test
scas
sbb
add
shlb
fisttpll
popf
or
movsl
into
push
push
or
nopl
rcrb
push
in
mov
das
enter
fisubl
mov
pop
lret
addr16
js
cs
leave
ljmp
xor
adc
stc
cmp
sub
xlat
push
fidivl
jae
cltd
pop
out
mov
cli
insb
cmp
or
cmc
rcr
or
cld
dec
adc
out
rcrb
add
sbbl
or
outsl
icebp
jo
mov
and
shll
rolb
push
jbe
xor
add
iret
mov
pushf
add
inc
ja
lcall
sbbb
dec
int3
sbb
sbb
pop
mov
dec
mov
clc
add
dec
inc
xor
out
decl
stc
fnstsw
and
push
push
xchg
out
sub
add
add
sbb
mov
es
test
xor
or
repz
dec
enter
and
cmp
call
and
in
sbb
sub
and
scas
into
inc
mov
mov
outsb
inc
aad
add
cmpsb
pop
push
pop
sbb
xorl
mov
orb
jle
inc
mov
imul
lock
xchg
xor
jo
int3
test
mov
adc
push
inc
mov
sbb
stc
in
sti
xor
push
into
test
pop
inc
pusha
mov
push
cmp
sub
mov
push
push
cmc
and
jl
xchg
fdiv
bound
pop
jmp
movl
xor
aad
xlat
fisttpll
mov
inc
loopne
jmp
ret
and
add
lcall
inc
lret
lret
mov
mov
enter
notb
mov
gs
cmp
ror
fidivrl
clc
fsubp
lret
push
cmp
sti
xchg
daa
inc
mov
and
xchg
fildl
inc
shr
stc
dec
mov
iret
outsb
fwait
adcl
mov
popa
inc
dec
enter
mov
cmovs
scas
and
dec
in
or
arpl
jae
loopne
scas
iret
pushf
cli
or
pop
adc
enter
insl
pusha
sub
jecxz
xchg
and
fwait
rolb
test
in
cmp
cmp
rcrl
insl
push
insl
jp
hlt
addr16
adc
jnp
test
mov
cs
je
inc
fisubs
cmp
sub
in
sbb
arpl
lahf
xchg
and
idivl
ret
icebp
pop
sbb
test
or
stos
jo
scas
mov
gs
sub
xorb
push
sub
les
aad
dec
aas
or
sbbb
aam
sti
mov
lahf
into
int3
dec
shr
pop
jbe
add
add
inc
add
mov
enter
xchg
jg
or
inc
ds
push
push
incl
jns
dec
jno
iret
mov
mov
es
cmp
mov
bound
scas
push
dec
je
cwtl
loop
jbe
mov
push
xlat
jmp
mov
icebp
in
sub
cmp
mov
sbb
inc
cmp
rol
and
mov
jmp
addr16
loopne
mov
je
inc
loopne
adc
repz
lock
xor
mov
rcll
mov
cmpl
outsb
push
ficomps
orl
jae
mov
shrb
bound
inc
dec
ds
mov
ljmp
lock
xchg
jo
into
push
ds
insb
cltd
les
mov
jle
sub
scas
xor
inc
jp
clc
xchg
jmp
test
xor
out
addr16
push
in
adc
inc
pushf
movsl
loop
add
push
add
in
cmp
test
lcall
pusha
push
sub
fiadds
iret
mov
mov
cmp
sub
loopne
fs
xor
sbb
in
aas
mov
lods
jge
inc
push
sbb
cmp
out
ds
mov
mov
enter
mov
or
sti
inc
inc
sub
sti
inc
clc
adc
fldcw
and
and
mov
scas
rsm
shr
stos
sti
or
mov
cmc
or
or
fidivrl
xor
jg
xchg
xchg
scas
cwtl
ljmp
inc
fnclex
enter
cmc
lods
adc
je
sahf
xchg
repnz
dec
std
push
clc
mov
sub
pop
fs
nop
pop
cli
hlt
nop
or
dec
push
test
out
lods
ficoms
mov
inc
pop
pushf
mov
dec
sbb
xchg
push
adc
push
jecxz
push
add
sbb
dec
or
inc
ljmp
dec
cmp
mov
jg
and
aas
xor
addl
cmpsl
hlt
pop
pop
pop
mov
pop
mov
pop
pop
inc
xor
mov
outsl
push
inc
xlat
push
add
xchg
roll
sub
sbb
cmp
pop
rep
out
mov
mov
sub
dec
or
iret
popa
loopne
ja
adc
push
std
cmp
mov
mov
shll
ret
ret
and
inc
jno
jp
push
nop
out
test
lahf
cmc
fidivrs
add
xchg
or
test
out
mov
pop
dec
fcmovne
mov
es
sbb
mov
push
daa
lods
inc
mov
in
sub
iret
ss
notb
imul
idiv
stos
cmp
push
int3
cmp
addl
sub
jae
or
inc
fcos
adc
mov
sub
jns
dec
inc
mov
fcomps
add
cld
enter
mov
outsb
popf
int
xchg
enter
sub
icebp
and
popf
push
sahf
sub
test
fstps
cmp
cmpsb
pop
and
xchg
xor
andb
test
sbb
mov
pop
push
popa
int3
sti
popf
or
sti
or
pop
sbb
repnz
mov
nop
dec
mov
cld
fisttpll
adc
or
ds
xchg
pusha
shrl
mov
mov
or
std
movlps
cmc
or
or
xchg
shlb
rcrb
mov
das
xchg
pop
fimuls
jns
test
xor
shrl
rcrb
imul
dec
sub
pop
mov
adc
dec
push
ret
xor
aaa
xor
fdivp
movsb
adc
cmp
or
or
movsb
out
or
dec
test
ss
lods
pop
and
stos
push
push
cmp
pushf
stos
mov
loop
pop
mov
es
in
pop
popa
ja
aaa
ds
aaa
cli
sbb
test
fiadds
in
xor
xchg
adc
jne
and
cmp
mov
xchg
jne
cmc
pushf
dec
cmp
xchg
sbb
sbb
mov
es
push
sbb
lods
cmp
or
jb
dec
and
push
cmp
dec
xor
lea
call
mov
xor
mov
scas
out
arpl
pop
call
push
cmpsl
sub
and
dec
lods
addl
outsl
mov
push
mov
mov
cli
pop
repnz
and
test
mov
mov
jmp
sbb
pop
xchg
cmpsb
push
cmpl
movsb
rclb
out
dec
jne
mov
pop
out
and
into
inc
mov
push
push
cli
pop
es
mov
in
outsl
pop
je
and
adc
adc
int
stos
outsb
filds
lea
adc
test
add
addr16
pop
pusha
frstor
jns
mov
enter
rorb
pusha
cld
fmuls
int
gs
mov
call
push
xor
test
mov
js
test
gs
adcl
push
daa
rcl
addr16
ss
cmp
adc
ds
idiv
shlb
jg
sbb
and
int3
divl
into
sub
and
pop
adc
scas
push
adc
in
lcall
loope
push
loopne
imul
clc
lea
loop
mov
popf
jle
idivl
fs
rcrb
cmp
mov
pop
xor
push
and
cmp
pop
in
mov
movsl
outsl
push
shrl
pop
pop
dec
jbe
lods
jle
sub
decl
jnp
fwait
jl
mull
shld
mov
push
adc
movsb
mov
jecxz
jns
stos
popa
cmc
xchg
add
enter
punpckhwd
xor
rclb
jl
or
adc
dec
sahf
push
push
jnp
in
in
aas
imul
out
xchg
jno
arpl
stos
add
call
test
lret
mov
stos
arpl
jb
dec
lods
mov
sbb
imul
call
sub
das
fsubp
jbe
mulb
int
sbb
mov
sarl
imul
sub
aas
cld
mov
mov
mov
cmpsb
outsl
rcrl
mov
popf
xor
and
inc
data16
incl
and
lock
and
scas
js
sub
xchg
cmp
stos
popf
imul
cltd
adc
pop
dec
nop
sub
movsb
fucomi
stc
mov
ds
cmp
mov
gs
pop
aas
push
lret
outsl
mov
push
jns
jne
aad
aas
lcall
mov
cmp
lcall
test
cmp
or
pop
pop
inc
cmc
sub
movsl
jne
jns
mov
ja
cs
jo
pop
and
mov
imul
repnz
ret
jg
push
mov
and
mov
or
mov
movsl
push
mov
xchg
dec
adc
mov
fists
add
or
mov
aas
inc
mov
fmul
jae
je
ja
xchg
xor
mov
clc
mov
movb
inc
add
push
rcr
nop
cmp
xor
sbbl
xchg
or
mov
push
add
jecxz
jmp
lret
std
aas
negb
cmp
jmp
das
pop
fldl2t
xor
dec
inc
jl
int3
addr16
jae
jecxz
rorl
mov
mov
push
push
mov
cmpsb
jge
sbb
xchg
sub
aaa
shl
xor
mov
mov
das
jg
push
iret
jmp
loop
mov
adc
cwtl
or
mov
dec
js
clc
movl
sub
jnp
mov
imul
gs
shl
pop
loop
les
in
or
lods
jge
adc
js
pop
test
or
out
pop
add
and
push
ror
and
sbb
outsl
fldcw
mov
dec
sub
mov
out
jp
sahf
ret
push
mov
push
andb
movsb
clc
lcall
cmp
pushf
adc
sbbb
pop
jb
je
jne
cmpsb
fstps
and
divl
dec
xchg
or
out
mov
jle
push
les
mov
cmp
test
outsl
enter
dec
xor
or
or
in
loop
insl
sub
imul
lret
inc
rcrl
cmpsl
inc
and
cmp
or
mov
arpl
in
pop
dec
xor
fnsave
sti
daa
in
mov
push
push
cli
aas
js
push
mov
loope
cmp
jle
mov
inc
enter
xchg
cmp
cltd
lcall
lock
aaa
jl
repz
pop
mov
fnstenv
push
or
dec
int3
scas
cmp
mov
mov
out
sub
in
pop
int3
sahf
scas
dec
addr16
add
pop
jno
jmp
xor
sbb
sbb
mov
cmpsb
inc
mov
jnp
repz
jecxz
inc
iret
orb
aam
xchg
push
jecxz
cmpsl
inc
stc
out
cmp
leave
xchg
dec
insb
shl
mov
repnz
adc
sbb
dec
sbb
jnp
dec
rclb
push
cmp
in
insl
and
mov
out
adc
out
nop
mov
sbb
pop
pusha
or
mov
mov
pop
push
add
sbb
dec
cmc
aaa
clts
popa
mov
fldt
or
inc
es
inc
lock
cli
push
aam
or
sahf
ds
xor
and
dec
push
mov
std
ret
jb
popa
movsl
cltd
scas
rolb
outsb
das
aam
xor
xchg
imul
fs
sbb
push
cltd
lds
daa
loop
icebp
push
scas
aaa
movsb
aad
cltd
dec
lret
popf
push
sbb
je
or
mov
aad
and
in
das
lret
lea
out
out
fstps
push
cmp
xlat
in
jp
cmpsl
outsb
xor
call
pusha
cwtl
std
idivl
pop
pushf
mov
jae
jg
and
xor
cmp
lock
xchg
jne,pt
xchg
mov
out
jmp
and
push
test
jle
sbb
sbb
mov
jg
lret
test
jge
insb
cmp
and
cmp
scas
movswl
std
cmpsb
cltd
inc
cmpl
cmp
sbb
dec
and
lock
clc
movsb
int
bound
dec
mull
pop
xlat
dec
mov
out
sbb
mov
jb
fnstsw
mov
mov
iret
in
inc
xor
jno
adc
pop
xchg
orb
gs
ret
mov
enter
into
roll
mov
pop
iret
mov
pusha
and
adc
pop
pop
jle
sbb
lea
xor
xor
add
sbb
dec
dec
shll
aam
movsl
jae
flds
stos
push
mov
lret
je
mov
hlt
dec
cmpsl
mov
popf
ljmp
mov
enter
stos
push
cs
ss
shr
xor
mov
pop
mov
mov
cmp
sti
cli
add
push
sub
add
cmp
jns
mov
push
lahf
stos
incb
xor
dec
imul
in
lret
out
pop
shr
push
mov
jo
subl
pop
jmp
sbb
xorb
ret
cmpsl
leave
xlat
push
mov
jno
sub
and
pop
cmp
mov
mov
rcr
xchg
aam
int3
jno
add
les
lea
or
lods
pushf
daa
mov
add
lock
lea
xor
sub
pop
inc
cld
inc
inc
scas
fcmovbe
and
mov
sub
push
jo
aaa
sahf
add
and
mov
xor
stos
xchg
ret
adc
xchg
mov
in
rorb
cs
scas
subb
mov
test
test
icebp
jns
fwait
data16
and
jp
sub
push
sub
inc
and
sbb
shlb
aaa
stc
dec
pushl
int
fld
mov
dec
add
icebp
mov
std
adc
hlt
and
call
ds
mov
pusha
add
test
test
pop
addr16
fimull
or
orl
movsl
mov
ljmp
dec
pop
xchg
fildl
cld
cmp
jecxz
xchg
and
loop
jg
imul
ret
test
xor
dec
mov
loope
pop
dec
inc
pop
or
pop
push
jb
push
out
mov
repnz
mov
adc
ss
push
xchg
add
dec
loopne
adc
in
mov
out
fwait
aad
xchg
push
jb
movsb
adc
cmp
negl
aas
cmp
mov
sbb
pop
add
imul
int
adc
cmp
lock
inc
or
cmpsl
push
sbb
out
and
movsl
mov
push
je
push
sti
movsb
adc
imul
rcrb
xor
push
in
popf
data16
leave
sbb
jecxz
ljmp
js
mov
and
xchg
xchg
mov
ret
pop
int3
pusha
lahf
not
push
addr16
jle
add
lcall
sub
outsb
data16
stc
test
cmpsb
mov
pop
sub
cld
je
cmp
xor
add
adc
stc
sahf
push
push
jo
sub
rcrl
ds
or
shrl
jl
outsb
xchg
cmp
push
call
dec
sub
nop
pop
xorl
cmpsl
add
shlb
mov
cmp
inc
or
enter
cmpsb
out
xorb
jg
test
subl
imul
and
jp
in
mov
jmp
jecxz
scas
cmc
repz
rcrb
xorb
add
je
and
loopne
inc
xor
dec
loopne
or
and
in
adc
ficoms
out
lret
mov
adc
pop
in
jl
push
xchg
mov
repnz
add
scas
mov
adc
sbb
dec
sub
jns
in
nop
add
shlb
xchg
into
mov
je
xchg
rcll
pop
inc
sub
dec
adc
and
pop
cld
cli
shl
daa
dec
jnp
cmp
lahf
push
push
dec
sbb
sbb
in
jae
mov
and
inc
jae
inc
idivb
sbb
mov
lds
sbb
xchg
xlat
popa
jnp
mov
rcrb
sub
dec
loopne
imul
xor
dec
sub
nop
cltd
jge
js
mov
xchg
dec
cmc
sub
xor
inc
mov
dec
pushf
fildll
dec
dec
repz
sbb
rolb
rorb
add
fldenv
or
enter
call
mov
cs
loope
pop
lods
cmp
rolb
mov
enter
dec
pop
jno
add
es
fs
mov
xor
out
ret
jae
cmp
mov
sbb
pop
aam
popf
jno
mov
jo
jno
push
push
imul
dec
cmpsb
dec
shlb
fidivrs
push
xor
out
test
adc
mov
insb
push
rclb
sbb
pushf
pusha
shr
sub
cmpsl
lahf
or
xor
cmp
mov
inc
test
mov
ror
scas
mov
out
and
mov
cmp
jno
sbb
xlat
dec
pop
push
pop
stos
movsb
les
pop
test
dec
fcomps
outsb
jge
mov
add
inc
clc
ds
cltd
pop
repz
ret
jle
or
ds
pop
jno
cmp
or
dec
pusha
adc
sti
inc
aas
orb
popf
lret
jle
and
adc
ficompl
test
pop
ja
sub
sbb
and
out
xchg
xchg
cs
adc
mov
stos
push
fstl
insb
xchg
test
dec
add
cwtl
push
dec
add
in
xor
pop
jmp
sbb
fldt
adc
lods
mov
jo
push
mov
iret
and
pop
lret
iret
xor
loop
mov
shll
sub
fistps
js
mov
out
inc
fadd
and
mov
rcl
rol
outsb
jne
sbb
out
int3
cmp
dec
scas
dec
mov
push
push
xor
loope
fdivrl
test
jo
jp
movsl
add
jmp
sbb
popa
pop
flds
sti
cmp
dec
test
daa
jnp
cmp
mov
sbb
test
stos
lea
incb
dec
push
popf
mov
xchg
jp
jno
lock
add
adc
ret
xchg
cltd
test
bound
cmp
aad
mov
xchg
dec
mov
jb
mov
mov
jmp
inc
shrl
jne
inc
loop
lahf
shlb
lret
sbb
add
xor
push
adc
mov
xlat
fcoms
xchg
in
shlb
pop
shll
mov
sbb
xorb
repnz
sahf
movsl
aam
notl
fcmovnu
test
sub
cmp
ret
scas
movsl
imul
mov
add
test
xor
ret
add
or
and
outsl
or
cmp
or
imul
shlb
pop
dec
mov
les
jnp
pop
enter
or
shufps
pushf
dec
jns
pop
sub
mov
pop
mov
jg
enter
xor
cmc
cli
insb
inc
adc
insb
mov
cli
ja
aaa
lcall
adc
jl
test
rcl
push
sbb
push
mov
inc
cmp
jge
jle
add
mov
dec
hlt
cmpl
jbe
mov
ja
in
xchg
jae
outsl
lret
imul
adc
or
sub
adc
pop
clc
jmp
adc
nop
xchg
dec
insb
insl
mov
pop
cmpsb
mov
jne
jae
mov
xlat
stos
add
mov
or
shlb
out
cmp
jb
loop
stos
mov
lret
push
pop
orl
imul
in
sub
inc
popa
xor
add
mov
ja
xor
insl
outsb
in
mov
and
lods
jg
out
push
push
lods
pop
addb
int
call
mov
fdecstp
push
addb
ss
idiv
mov
xor
adc
clc
inc
cmp
mov
adc
lods
inc
fbstp
iret
mov
xchg
dec
mov
rclb
lock
cmp
ds
xchg
xor
iret
or
jae
ds
adc
add
add
in
dec
or
lds
or
sbb
shl
jmp
jg
iret
in
or
aaa
stc
inc
lods
dec
lret
icebp
sqrtps
test
jecxz
pop
mov
ja
insl
in
add
add
xchg
push
pop
mov
fstps
mov
mov
hlt
rcrb
dec
out
xchg
ljmp
je
dec
push
testb
xor
adc
jnp
lahf
mov
mov
xor
incl
filds
push
dec
dec
sbb
add
mov
lcall
xor
retw
ss
push
lcall
add
stc
pop
je
xchg
enter
stos
loopne
imul
jnp
mov
scas
pushl
mov
int
adcb
jns
mov
int3
dec
in
fucom
loop
arpl
aam
xchg
jg
jle
inc
cmp
jo
addl
je
insl
jns
addr16
int3
push
pop
cmp
cmp
fldcw
cld
rcll
xor
dec
jg
inc
iret
xor
scas
ds
jns
xor
fisubl
enter
xchg
lret
pop
pop
into
icebp
bndstx
xlat
test
call
sub
aad
out
repnz
jo
jmp
fstl
fcoml
les
and
push
es
pop
daa
pusha
pop
cmp
in
cmp
ljmp
pop
cli
ret
lea
fmuls
add
lds
sub
mov
dec
xor
mov
jno
or
out
sbb
test
stos
pop
into
imul
sub
inc
aad
fdivs
jns
pop
clc
sub
dec
cmp
cmc
jle
mov
pop
ja
repnz
out
repz
ljmp
cltd
incl
in
xor
inc
pop
mov
and
jns
lret
scas
xchg
inc
jne
push
xor
stc
lock
movsb
test
xlat
out
adc
inc
push
in
xor
push
xor
addr16
out
mov
jmp
ljmp
push
lea
inc
jbe,pt
mov
xchg
stos
sbb
dec
cmp
cwtl
and
jl
fsubl
mov
or
and
mov
sbb
or
outsl
lock
into
cmp
adc
ljmp
mov
ret
repnz
clc
jae
sub
call
inc
lods
jg
fdivrs
push
sarb
out
add
and
cmp
push
ja
jge
sbb
or
loopne
mov
insl
mov
jae
inc
test
mov
sub
cmp
lods
iret
push
test
das
cmp
fs
sbb
jg
mov
inc
mov
adc
outsb
fmuls
test
sub
add
inc
jecxz
js
xchg
adc
mov
inc
sub
mov
mov
sahf
mov
in
mov
dec
xor
int
push
push
mov
aam
inc
add
jecxz
gs
scas
and
push
pop
mov
mov
jo
pop
inc
mov
jne
jge
scas
or
add
outsl
in
fiadds
std
stos
ds
lods
cwtl
lret
sub
push
fstpl
movsb
mov
push
push
subb
inc
loopne
inc
imul
push
jo
in
out
dec
rcl
in
push
jle
aas
popa
out
std
inc
cmpsl
imul
dec
cs
cmp
repnz
lret
imul
mov
xor
fs
inc
sub
in
test
sub
add
shr
stos
jne
add
xor
adc
push
cmp
shll
out
mov
pop
add
jge,pt
dec
ficoms
adc
push
add
aam
dec
comiss
and
scas
insl
or
mov
subl
imulb
mov
clc
push
mov
sub
sahf
sub
insb
push
repnz
leave
sarl
cmp
mov
jmp
addb
cld
sar
mov
mov
and
movsb
jp
and
sbb
adcl
fsub
xchg
leave
ret
dec
in
pop
xchg
sbbb
adc
adc
pop
dec
pusha
mov
xlat
aas
cmp
mov
mov
es
xor
mov
lret
je
add
adc
or
push
or
jg
xchg
or
popa
popa
fwait
pop
jmp
mov
jnp
out
test
mov
or
dec
or
jae
mov
cli
add
sub
or
jmp
iret
add
fsubrs
outsb
xchg
fistpll
mov
or
inc
sub
gs
xchg
loope
push
mov
push
int3
xlat
xor
std
sbb
mov
gs
xlat
add
or
mov
call
sub
xchg
or
shll
aaa
fistpll
push
mov
scas
popa
cli
ficoms
in
xchg
jae
and
xchg
adc
xor
xor
das
out
je
out
fs
lret
cmp
mov
adc
or
fstl
scas
mov
jnp
rcrl
in
add
sub
cli
xlat
pop
call
add
enter
jnp
cltd
test
cwtl
repnz
movsb
mov
aad
fnsave
daa
mov
dec
or
pusha
ret
cli
imul
sti
xlat
iret
stos
fdivrl
in
daa
push
ljmp
bsr
xchg
mov
pop
lods
jbe
fiaddl
es
stos
repz
sbb
jno
mov
lea
push
and
dec
xchg
addr16
aaa
cmpsb
pusha
inc
in
int3
xchg
fists
out
hlt
stc
aas
dec
in
dec
out
cld
add
mov
rorl
or
cmp
and
jp
xor
mov
jmp
mov
pop
aam
cwtl
aam
jge
dec
mov
int
ds
nop
in
add
std
add
push
call
ret
fmull
or
mov
loope
cmp
inc
es
push
lcall
or
cmp
movb
test
jmp
fimuls
mov
dec
shl
xchg
dec
int3
hlt
fistl
xorl
mov
and
das
aaa
mov
clc
or
mov
loope
loopne
std
outsb
xchg
rcl
arpl
icebp
cmp
aam
sbb
mov
lods
in
lahf
dec
cmc
xchg
pop
icebp
aad
push
pop
sti
into
xchg
in
mov
pop
lock
push
dec
pop
add
xor
sub
scas
pop
sbb
cmp
jno
mov
xor
imul
cmp
xor
mov
subl
push
and
lods
and
orb
icebp
daa
xchg
daa
and
lret
lock
mov
mov
lea
aas
dec
xchg
lock
cmc
cltd
cmp
lret
sbb
mov
jg
and
jl
dec
cmp
and
ds
xorb
push
bnd
daa
nop
xchg
int
fildl
xchg
jns
sbb
icebp
rorb
sub
or
sub
bound
or
inc
dec
mov
stos
fdivs
insl
lock
iret
and
dec
and
sbb
cmp
mov
ret
push
jge
and
pop
idivl
outsb
jbe
add
mov
ljmp
out
pop
loopne
aam
jge
jmp
mov
aam
ja
mov
lret
and
inc
movl
add
enter
ror
ret
lea
rolb
add
leave
jg
cmp
mov
pop
mov
cmp
jmp
jp
jnp
hlt
iret
sbb
rolb
out
or
mov
jge
xchg
aad
jb
mov
imul
add
sbb
sbb
pop
nop
scas
dec
jo
aam
std
adc
and
stos
xchg
int
in
add
out
and
das
out
icebp
ds
loop
stos
push
lods
and
in
les
pop
test
aam
sahf
dec
mov
into
lods
aaa
xchg
sub
xchg
insl
rcr
pusha
in
push
in
scas
add
pop
push
roll
jae
inc
in
lods
xchg
cwtl
adc
xchg
adc
int
out
or
push
dec
jb
adc
or
aas
jg
imul
push
add
add
test
negb
sub
fcomps
pop
sbb
stos
pop
jecxz
cmc
lret
psrad
xor
ret
movsl
aad
jne
mov
addb
ja
insb
rcrl
ss
sbbl
inc
movsl
cld
adc
fistps
repz
iret
xor
xchg
in
cmp
jg
popa
mov
sahf
mov
js
or
cli
xchg
add
loope
ret
push
mov
ljmp
mov
hlt
testb
fcos
mov
adc
adc
mov
xor
cmpb
and
mov
fnstenv
scas
je
mov
sbb
and
sti
dec
inc
adc
icebp
fsubs
jge
out
push
xor
mov
repnz
out
sbb
sub
jne
mov
fbstp
lds
shl
lods
push
pop
rcrb
ljmp
dec
jle
js
mov
mov
dec
fstl
xchg
rcll
cld
mov
scas
js
or
pop
jnp
in
xor
inc
mov
cltd
push
cmpsb
mov
les
ret
arpl
aas
in
push
sbb
cmpsl
inc
ja
inc
mov
andl
pop
and
mov
loop
repz
aam
or
fbld
jno
daa
push
mov
xor
mov
or
loop
ret
leave
mov
in
jge
push
adc
out
lds
repnz
mov
mov
loopne
dec
dec
pop
add
push
lods
popa
add
bound
mov
mov
cmpsl
dec
push
test
outsb
sub
repnz
add
cmp
ljmp
jg
or
cli
sbb
cmpsb
lret
aad
mov
cmpsb
mov
xchg
movsb
lds
pop
sbbb
xor
pop
sti
mov
jmp
loop
ret
test
dec
sbb
dec
or
xchg
inc
pop
aam
ss
pop
add
add
jae
inc
mov
mov
rorb
cmp
mov
mov
adc
push
lods
inc
adc
mov
xchg
inc
mov
ret
loopne
adc
dec
cmp
push
xor
cmp
push
xchg
add
push
stos
jo
push
mov
into
mov
nop
push
lock
mov
addr16
cld
aam
out
jl
pop
out
jns
sub
cld
jmp
arpl
sarl
and
add
scas
fstpl
jp
aam
xchg
xchg
add
push
xchg
out
cmp
mov
jp
data16
es
or
mov
mov
imul
int3
out
data16
sbbl
mov
pop
in
mov
js
xor
pop
dec
popf
icebp
lret
mov
and
jmp
jl
fadds
dec
fcmovbe
jnp
sbb
pop
jle,pn
xor
test
xchg
add
popf
sbbb
mov
or
popf
pop
call
sahf
mov
xchg
or
mov
jg
out
jbe
mov
lcall
notb
iret
frstor
enter
pop
in
shrb
sarl
push
pusha
xorb
repnz
push
jmp
fwait
mov
pop
inc
stc
aad
addr16
push
or
inc
pusha
cmp
loope
mov
movsb
and
or
cmp
dec
mov
or
rol
jo
fcomps
push
sarl
pop
stc
push
pop
loopne
fimuls
inc
outsl
mov
iret
push
movsb
loope
stos
pop
stos
iret
not
ret
out
cmp
xor
sarb
mov
andb
adc
xchg
mov
out
mov
push
cmp
je
leave
add
push
lea
mov
ror
insl
xchg
mov
aaa
loop
dec
popa
test
nop
inc
icebp
test
hlt
imul
xchg
dec
faddl
cmovo
inc
jmp
pop
sbb
in
aas
inc
fmuls
aas
fst
daa
mov
dec
test
push
xchg
leave
scas
push
int
in
jno
dec
cld
pop
lahf
xchg
imul
insl
pop
fidivs
rolb
xor
fwait
cmp
rcll
cmp
ja
dec
sbb
xlat
loopne
pop
cltd
mov
push
mov
pop
leave
jae
test
mov
test
push
js
xchg
fbstp
in
add
adc
repz
cmpsb
lods
lahf
sub
sub
pop
or
fucomip
jns
inc
adc
jb
sti
push
push
inc
push
xchg
sbbb
jbe
jge
mov
insb
xchg
xchg
sbb
lahf
xchg
push
fwait
test
cmp
jo
movsb
and
xchg
pushf
int3
inc
mov
sub
stc
or
push
aad
pop
inc
fldcw
mov
call
movsb
inc
jecxz
shll
dec
inc
mov
xchg
mov
ret
cwtl
nop
addr16
sahf
ficompl
jmp
sbb
mov
or
jnp
xchg
inc
mov
imul
jo
test
jno
adc
inc
push
mulb
sub
fldt
pop
cmp
or
leave
gs
or
or
ss
outsb
xchg
adc
idivb
push
jecxz
aas
xchg
aad
lcall
mov
outsl
or
les
and
add
or
xchg
outsb
mov
arpl
je
loope
push
movsb
cli
mov
jg
in
roll
add
fisttpl
push
nop
adc
xor
sbb
in
xor
sub
sbb
add
and
popf
jecxz
jl
fildl
adc
xor
and
cmp
or
les
cmove
push
dec
jle
std
mov
dec
cmp
leave
lea
mov
nop
imul
jecxz
iret
push
push
jo
xor
xorb
popa
or
sbb
nop
lcall
pop
or
stc
aam
xchg
dec
dec
lea
mov
fwait
xchg
shr
sbb
popf
and
lret
or
xchg
in
jl
inc
cs
dec
rcl
push
into
shlb
into
scas
cmp
js
jne,pn
sti
jmp
daa
mov
and
loopne
or
mov
std
cmpsb
in
cltd
shr
orl
sub
fistpll
lods
add
xlat
mov
sbb
push
mov
or
stos
add
mov
lret
and
in
dec
icebp
pushl
repz
push
jle
stos
cli
lea
mov
es
out
mov
ds
sbb
rcll
sbb
pusha
xor
test
ljmp
sbb
cmp
cltd
call
add
jl,pn
loop
dec
ds
pop
xchg
scas
xor
stos
xchg
insl
push
cmp
cmovl
jecxz
pop
cmpsl
das
xchg
sub
cli
loopne
ja
inc
inc
mov
decl
mov
adc
addr16
cli
or
cld
adc
adcb
jb
ret
cltd
andb
adc
mov
mov
loope
int
ficoms
pop
shl
fiaddl
out
or
cmp
pop
dec
cmc
adc
ficoml
enter
add
mov
push
mov
cmpsb
push
add
jge
daa
mov
clc
xlat
loop
mov
cwtl
dec
pop
inc
cld
adc
sbb
jns
pop
xchg
jno
popa
sbb
xchg
fcomps
mov
cmp
sub
incb
out
or
imul
push
add
mov
adcl
notl
pop
loope
inc
inc
stos
lahf
js
in
aas
jecxz
loopne
stos
cmp
ret
imul
xchg
and
add
cmp
cmp
jl
ret
call
movsl
sub
stos
xlat
js
pop
xor
push
int
mov
clc
ret
xor
mov
repnz
add
cmp
cltd
aas
jge
jle
pop
xchg
push
push
mov
add
repnz
ss
xor
out
out
add
into
test
jge
xchg
pop
and
fbstp
mov
mov
icebp
and
loope
cli
add
mov
dec
mov
lcall
fs
jecxz
push
adc
or
inc
mov
add
fildll
out
pop
add
mov
cld
add
fcoml
leave
adc
add
ret
and
adc
cmp
mov
pop
xchg
movsl
pop
or
aas
mov
loop
aaa
inc
cmp
xchg
fisubrl
mov
sub
pushf
call
jge
push
jp
icebp
je
sbb
cmp
adc
jmp
add
adc
cld
fs
mov
dec
cmpl
adc
cmpsl
cmp
addr16
xchg
add
dec
jno
aad
or
ss
repz
cld
scas
out
jno
shrb
jge
das
mov
sbb
mov
jp
ss
sub
mov
xchg
scas
incl
pop
fildl
testb
popf
repnz
in
mov
iret
inc
dec
mov
mov
pop
sbbb
add
loopne
in
xchg
ljmp
mov
jns
lea
outsl
fwait
cltd
mov
sbb
cmp
lcall
mov
jmp
lcall
cmpsb
mov
aad
sub
pop
xchg
cmp
ret
sbb
nop
aas
mov
mov
inc
popf
popf
cvtdq2ps
int
mov
push
rcr
push
add
mov
pop
sub
shrb
std
push
mov
es
add
mov
adc
shll
and
and
push
xchg
lret
xor
xor
lea
test
enter
mov
sbb
cmp
stc
rcll
sbb
cmpsl
push
cli
pop
addr16
cld
arpl
aad
imul
icebp
je
cmpsl
test
call
mov
fidivs
jbe
adc
jne
xchg
lods
xor
xor
lahf
test
dec
shlb
addr16
stos
push
fcompl
mov
sbb
jle
sbb
ret
inc
popf
jecxz
sub
fsubrl
cmp
repnz
mov
sahf
and
aaa
cmpsl
test
cmp
dec
icebp
sarb
xchg
cwtl
cmp
loop
shrl
inc
cmp
insl
in
fiaddl
outsl
inc
or
jg
xchg
in
cmp
ljmp
add
push
adc
rorl
fcomps
out
ja
out
mov
in
push
lea
imul
and
dec
sub
dec
sarb
cmc
enter
dec
addr16
mov
sbb
mov
jmp
jno
jmp
mov
iret
hlt
stos
fprem
imul
cmp
add
scas
scas
iret
dec
jmp
inc
shll
rcrb
aam
lret
cmp
fbstp
mov
adc
or
push
cmc
push
ficompl
int
push
js
mov
push
lock
addr16
je
adc
cli
push
jmp
daa
inc
mov
bts
pop
mov
mov
gs
sub
sub
inc
pusha
sub
push
adc
push
les
scas
sahf
int3
pop
pop
jmp
inc
les
enter
and
out
xor
mov
pushf
mov
mov
lahf
cmp
cmp
shlb
push
and
mov
ja
roll
add
fildl
mov
not
lds
dec
ljmp
cmpsb
add
inc
cmpsl
incb
daa
cwtl
adc
leave
mov
daa
pushf
jb
inc
mov
lret
dec
and
inc
mov
fwait
inc
mov
sbb
lods
adc
lret
enter
push
jle
mov
sbb
stos
dec
pop
inc
push
daa
adc
test
and
outsb
mov
test
adc
jp
pop
clc
cmp
popa
jl
push
xor
jecxz
fwait
mov
and
adc
test
add
daa
pop
imul
stos
pop
mov
jp
cmp
scas
stos
pop
mov
and
imul
jg
push
cmp
add
mov
push
xchg
call
ljmp
enter
xchg
push
add
fadd
cmp
lahf
xor
sbb
lock
shlb
push
and
dec
pop
or
dec
sub
ds
mov
mov
jmp
xchg
leave
push
pop
mov
sti
push
jl
and
push
push
sub
pusha
cltd
inc
or
cs
mov
xchg
push
jle
adc
bound
cmp
and
std
jle
les
xchg
loope
sub
or
lods
mov
ror
xchg
cli
cmp
into
std
out
xchg
pop
xchg
dec
and
fucomp
popf
in
cmp
sub
scas
and
ret
scas
jp
idiv
pop
mov
cmp
ret
cwtl
add
pop
cmpxchg
repz
cmp
push
lret
jge
or
mov
cmc
jb
lods
lcall
mov
push
add
fisttpl
cmc
hlt
mov
mov
nop
sbb
out
mov
push
xor
pop
sbb
xor
lea
mov
mov
aad
inc
dec
jae
mov
subl
sub
sbb
loop
mov
push
sbb
sub
cmp
xchg
idivb
or
sub
sbb
pop
pushf
gs
lcall
jae
dec
cmpsl
jae
das
enter
jmp
and
add
sub
and
jp
int
inc
int3
or
aam
sbb
rcrl
mov
es
lret
push
adc
shll
lret
cmpsb
xor
add
push
mov
and
hlt
popa
or
dec
mov
add
sub
lods
in
mov
stos
sbbl
hlt
in
mov
aas
push
and
jp
sahf
or
loopne
test
ror
mov
pop
mov
pop
xchg
and
jnp
imul
in
dec
test
push
mov
xor
pop
dec
imul
lods
icebp
lods
dec
push
cwtl
pop
xchg
pop
pop
push
mov
add
leave
cwtl
cmpl
mov
shll
fwait
jns
mov
rolb
loopne
adc
sub
orl
fists
push
sbb
fdivs
stc
hlt
jp
outsb
inc
movsl
or
mov
fsub
cwtl
subb
shlb
int3
xor
push
ret
jb
imul
cwtl
mov
ret
mov
and
and
inc
add
dec
shlb
loope
hlt
arpl
inc
repz
pop
xor
fadd
popa
jbe
int
pop
aaa
mov
iret
mov
cmp
scas
shlb
dec
scas
push
loope
sbb
test
xlat
sahf
or
and
push
inc
leave
scas
out
imul
jns
movsl
movsl
shrb
roll
push
push
xor
sub
les
and
lret
das
push
xlat
aam
push
sbb
test
jbe
test
xchg
into
sbb
pop
fs
push
mov
add
lods
inc
jl
or
push
push
int3
adc
xabort
cmpsl
int3
mov
movb
call
push
pop
adc
xchg
inc
cmc
call
cltd
orb
fwait
out
nop
mov
jge
jae
xor
aaa
addr16
pop
xchg
es
std
lcall
xchg
xor
popf
add
mov
mulb
adcb
frstor
das
lret
outsl
mov
inc
mulb
js
xchg
data16
xor
add
add
jg
stc
iret
fstpt
into
adc
xor
jbe
dec
and
and
in
cld
imul
add
xchg
xor
ds
in
cmp
movsb
add
into
mov
lcall
mov
mov
popf
sub
mov
mov
sub
push
pop
and
sbb
xchg
fsub
fucom
xor
mov
clc
jb
mov
push
pop
sub
mov
jecxz
test
repz
push
sbb
mov
push
scas
push
fists
adc
aas
rclb
cmp
cs
fcmovb
lret
cwtl
shll
sub
in
mov
push
ds
insb
push
sub
adc
or
incl
sub
into
pop
cli
push
jp
fadds
popa
or
jl
add
lret
or
jmp
sarl
test
popf
sahf
in
cs
xor
fdivrs
mov
pop
jle
cld
movsb
jbe
and
add
xor
fdivp
subl
add
out
push
sub
dec
dec
cwtl
cltd
lret
repz
jmp
movsl
jg
xor
fs
daa
inc
into
je
sub
dec
movsb
sbb
shlb
pop
mov
mov
lods
mov
rcr
sub
loopne
xlat
movsl
lods
add
lahf
xchg
pop
pop
inc
imul
loop
jge
sahf
repnz
in
mov
aaa
push
cld
xchg
scas
or
clc
das
ljmp
sub
push
jg
mov
dec
cwtl
pushf
jbe
lcall
or
ror
jle
ljmp
adc
xchg
and
lods
adc
js
jg
idivl
fidivrl
add
pop
lea
mov
ja
movsl
lret
dec
sbb
pop
dec
test
jbe
inc
fwait
inc
nop
lret
push
ret
xor
cmpl
or
xor
nop
dec
ss
idiv
xchg
cmpl
fnstcw
push
cmp
sahf
aam
pop
ja
inc
inc
xchg
data16
loope
adc
mov
jp
repz
sub
sbb
ja
fldl
fs
jne
pop
dec
push
je
cmp
push
push
sbb
jmp
js
mov
ds
sahf
test
popa
mov
push
lds
xchg
push
add
jmp
cmp
iret
aas
loop
fisubl
add
aam
push
scas
dec
or
add
movsl
adc
in
push
loopne
or
popf
jecxz
inc
loopne
iret
pusha
rolb
lds
vfmsubps
xlat
xchg
lds
push
stc
xchg
mov
stc
dec
xor
test
cmc
lods
inc
mov
sbb
pop
adc
or
sti
xor
mov
or
int
daa
jp
xchg
jb
sbb
aas
pop
add
fs
jle
sbb
imul
test
loop
add
orl
aad
loop
push
pop
repz
lock
leave
popf
out
mov
sub
jne
jg
sbb
push
les
cwtl
test
out
in
sbb
mov
imul
gs
mov
das
jp
daa
or
mull
xchg
sub
cmp
pop
mov
orb
dec
jo
iret
jbe
iret
pop
cld
stos
sub
andl
fildl
jmp
lret
jmp
mov
roll
outsl
cwtl
cli
in
and
jno
ret
mov
cmp
in
ud2
inc
jl
pop
imul
xor
inc
xchg
jne
jmp
not
pop
jbe
hlt
lds
stos
jp
test
push
sub
loop
cmp
je
mov
push
inc
inc
andl
pushf
jmp
xchg
xorl
mov
lcall
adc
stos
jb
test
mov
xchg
outsb
jne
inc
out
mov
xor
pop
es
test
sbb
dec
rcr
mov
jg
add
jp
xor
mov
sub
decl
cmp
inc
ds
pop
imul
bound
bound
ja
inc
dec
lret
mov
mov
mov
xor
out
sbb
fistl
inc
push
fisubs
push
jnp,pn
jb
cmc
push
sbb
xchg
push
in
sarb
mov
cmp
or
cmp
add
adc
in
add
popa
jnp
mov
jne
xchg
sub
cmp
popf
adc
enter
sti
and
cld
dec
add
nop
mov
fsubrp
into
clc
test
out
mov
pop
xor
imul
dec
fstl
pop
pusha
pop
aaa
cmp
mov
mov
mov
sar
lds
insb
es
mov
test
repz
xor
push
les
and
shll
shrl
inc
sbb
sti
dec
decl
popa
fimull
xchg
pop
push
out
xchg
jnp
jne
push
int
lds
outsb
push
jp
sti
sub
push
sbb
leave
fwait
dec
xchg
sar
xor
dec
sarl
mov
mov
xor
sahf
and
add
mov
mov
inc
xchg
repz
jno
in
mov
lock
scas
inc
insb
pop
mov
cs
repnz
or
cmc
mov
fs
jl
jle
and
mov
xor
and
cmp
subb
stos
out
adc
dec
mov
insl
loop
mov
lea
pop
adc
rorb
jbe
push
push
jo
jae
cmp
jno
inc
fisubrl
mov
jp
inc
gs
leave
push
xchg
add
ds
fdivl
dec
mov
jbe
sarb
pop
or
xor
mov
test
fs
movsl
cld
adc
and
push
pop
jmp
push
add
xchg
ss
inc
idivl
insl
adc
and
ds
aam
shr
clc
jge
pop
adc
pushf
xor
outsl
in
ret
mov
or
inc
mov
cli
movsl
clc
nop
lret
outsl
pop
int3
jae
xchg
pushl
xor
push
imul
aam
push
mov
xchg
aam
fcomi
adc
mov
stos
iret
aas
mov
mov
jecxz
inc
insb
cld
out
lea
test
cmpsb
in
sbb
mov
stos
insb
or
inc
repnz
aas
or
mov
sub
cmp
push
mov
push
pop
xor
hlt
xor
pop
gs
outsb
dec
adc
fdivs
sbb
std
cmpl
das
sbb
pop
andl
dec
pop
cmc
lret
and
sahf
sbb
mov
pop
ljmp
mov
and
dec
out
push
or
in
cmp
rorb
jecxz
lods
sub
cmp
pop
aas
jge
or
stos
mov
push
xchg
scas
loopne
inc
dec
xchg
jb
js
and
mov
not
rorl
call
xchg
mov
addr16
add
dec
sub
addb
adc
mov
stos
jmp
xor
mov
nop
aas
daa
sub
loopne
xchg
push
jno
lret
push
stos
mov
data16
sub
in
test
call
xchg
rcr
dec
shl
sub
mov
inc
and
mov
push
dec
add
scas
mov
add
push
gs
jne
push
pop
leave
inc
mov
in
inc
lret
lds
test
pop
xchg
cmp
mov
decl
lea
jnp
cmc
jne
scas
ja
add
js
adc
jns
xor
add
mov
mov
inc
mov
mov
mov
les
scas
cs
popf
sub
inc
xchg
dec
ror
repz
pop
arpl
or
lods
sub
pop
push
inc
leave
cwtl
jl
mov
push
or
xchg
lcall
int3
add
cmp
or
divb
inc
fcom
adc
bound
or
xchg
insb
arpl
pop
addr16
jle
add
inc
jns
inc
jecxz
mov
clc
test
test
mov
sbb
mov
sbb
out
inc
push
push
fldl
push
fisttpll
fmuls
adc
pop
decl
clc
cltd
xor
and
xlat
dec
add
lcall
cmp
leave
icebp
int3
add
add
imul
adc
nop
int
dec
xchg
jg
xor
and
jmp
xchg
mov
adc
adc
rcll
jns
movb
aam
adc
stc
repnz
stos
pop
aad
aad
aaa
add
mov
mov
test
cmp
pop
cmp
inc
and
fdivrs
xor
ror
inc
jle
jne
jge
repnz
push
ljmp
mov
test
int3
insl
push
roll
xchg
fnstcw
out
xchg
xchg
lods
mov
outsl
enter
subb
add
or
pop
mov
push
imul
add
out
xchg
mov
mov
scas
lods
lcall
pop
sarl
jnp
fisubs
repz
cld
int3
pop
ret
pusha
popf
insb
push
testl
mov
xchg
jo
mov
jo
sub
or
inc
lret
and
fstps
or
fldl
pop
ret
adc
lret
in
sbb
clc
out
mov
push
cmp
popa
in
fs
push
in
loopne
test
daa
push
in
mov
es
add
push
adc
std
repz
imul
mov
pop
mov
mov
dec
sbb
repnz
ja
cltd
jne
pop
or
out
gs
leave
in
xor
js
hlt
sbb
mov
js
push
jmp
add
sub
in
dec
movsb
xor
mov
jp
pop
scas
jg
and
xchg
xchg
mov
pushf
jae
enter
jmp
add
xlat
sub
ffree
movsb
pop
sbb
cmc
pop
bound
sbb
sarb
jge
push
pop
int3
dec
out
loop
mov
mov
call
cld
lds
je
dec
sub
add
push
mov
mov
jbe
pushf
mov
in
mov
int
out
xchg
call
cmpsl
add
jge
insb
lcall
cmp
in
add
xchg
roll
int3
add
in
dec
push
in
jge
lret
and
mov
test
dec
loope
retw
xor
xchg
mov
sub
lret
stos
ret
movsl
jne
pop
fdivrs
js
dec
mov
data16
and
sbb
cmp
xchg
add
test
mov
jp,pn
cwtl
cmpsb
and
push
sub
cmp
and
enter
pop
sbb
bound
test
pushf
imul
jbe
lods
xor
push
push
insl
test
mov
mov
fisubrl
popa
or
into
ljmp
movsb
ja
sbb
adc
xor
int3
clc
and
ret
cmp
fcmovb
cmp
pop
dec
pop
jmp
push
fwait
push
fs
out
outsl
dec
pop
jge
add
push
imull
push
add
jne
fnsave
xor
fmul
xor
jb
push
icebp
xchg
out
pop
popf
ss
xchg
jne
sub
ds
inc
nop
mov
mov
mov
adc
dec
push
jne
das
bound
mov
mov
mov
lods
not
es
push
mov
mov
inc
lret
pop
dec
mov
shrb
jae
xchg
aas
push
mov
jo
lock
test
push
mov
dec
repz
xchg
pop
lds
fmull
paddusw
xchg
or
add
shl
lock
sti
pop
orb
pop
call
js
xchg
adc
popf
xchg
mov
jl
jo
or
ss
sahf
je
cltd
dec
movsb
mov
mov
rcll
lods
cwtl
rcr
scas
mov
push
cvtps2pd
mov
add
in
mov
fisubs
out
out
and
sub
lret
aaa
pop
in
push
outsl
inc
andb
jae
mov
stos
xchg
out
es
in
fmuls
jl
sub
mov
cmp
and
xor
stc
lahf
in
test
ficoms
notb
int3
lret
imul
out
ljmp
mov
sbb
ljmp
jo
icebp
add
inc
mov
sub
fwait
cmp
jns
cli
lahf
lock
add
ljmp
leave
push
inc
mov
lret
pop
es
sbb
inc
pusha
shll
cld
sub
xlat
jbe
in
stc
mov
jle
and
in
shll
movsl
daa
jne
ret
fstl
push
cli
fadds
lea
add
int3
xchg
inc
lock
pop
mov
or
dec
cs
pop
push
div
cs
and
jne
pop
mov
in
ds
in
mov
sahf
fldcw
mov
cmpsl
daa
iret
fcompl
ljmp
sbb
sbb
jecxz
xor
xlat
testb
lret
test
jbe
in
cmp
add
fwait
sub
pop
scas
push
xchg
dec
into
inc
xchg
xchg
inc
sbb
mov
lds
adc
loop
cmpsl
cmp
inc
push
out
and
jbe
ljmp
dec
or
fwait
fists
adc
mov
in
sub
pop
xchg
out
test
aaa
loope
push
jl
mov
scas
cs
add
mov
popa
adc
inc
leave
inc
mov
negb
mov
out
cmpsb
je
shlb
ret
adc
lret
and
pop
insl
cmp
mov
sti
inc
cwtl
fs
lods
jno
mov
inc
fistl
test
imul
xor
mov
inc
dec
xor
xchg
add
inc
lods
sbb
fstl
xchg
xlat
ljmp
sbb
mov
pop
inc
and
loope
loop
ss
cmpsb
cmp
adc
pop
add
sbb
push
add
loop
test
stc
xorb
fdivs
test
sub
vpunpckhbw
jnp
lcall
add
sub
push
outsb
dec
jne
inc
leave
out
sbb
cmp
mov
mov
jmp
stos
rep
mov
ja
fsts
je
les
sub
mov
pop
ja
in
shrl
mov
subb
sbb
clc
pusha
inc
aam
negb
jnp
and
in
xchg
sbb
or
xor
sti
hlt
pop
in
pop
push
xor
xor
ds
ret
pop
sti
inc
mov
movsl
jb
clc
push
push
sti
sub
xor
shll
les
mov
xchg
sbb
push
pop
sub
cmp
and
fwait
xchg
ret
mov
mov
add
mov
cmp
dec
sbb
dec
inc
fsubrl
ljmp
std
inc
adc
rcrl
add
push
adc
xchg
lret
jle
jmp
mov
shlb
xor
leave
sub
xchg
add
mov
pop
or
add
adc
cmpsl
int3
imul
cmc
add
mov
xchg
popa
cwtl
inc
jbe
lods
dec
xchg
nop
add
inc
data16
jl
out
loopne
jg
insl
outsl
nop
loopne
xlat
push
pcmpgtw
push
fadd
pop
push
cmp
iret
sarl
das
ss
stos
mov
rorl
outsb
insb
popf
call
in
scas
js
add
cwtl
aaa
shll
lea
loop
push
in
in
nop
loop
and
push
pushf
jae
inc
mov
xor
push
and
adc
jnp
in
leave
mov
jmp
cli
daa
hlt
mov
or
push
inc
sbb
in
cwtl
mov
sub
out
addr16
xor
pusha
call
fidivs
sub
fnstsw
testb
idiv
aaa
xchg
fcomi
je
sahf
testl
aam
xchg
lahf
mov
rcrb
test
pop
into
adc
cmp
xlat
jg
enter
jne
leave
xchg
push
icebp
xlat
notb
scas
mov
mov
push
mov
adc
pushl
sti
add
leavew
xchg
dec
jge
imul
sbb
cmc
fwait
pop
cmp
dec
fmuls
mov
ljmp
inc
jbe
mov
nop
adc
adc
insl
cld
pop
aam
sbb
jp
mov
loopne
mov
cmp
dec
pop
pop
xchg
mov
push
add
pop
dec
cltd
ficoms
xor
sub
or
sub
lret
inc
movsl
enter
call
insb
push
movsb
sbb
sbbb
add
mov
data16
test
cltd
cmc
int
xor
out
cmp
addl
imul
subl
nop
mov
inc
cmpsl
hlt
and
popf
mov
add
pop
inc
inc
into
xchg
pop
out
loope
mov
cli
outsl
call
push
sbb
nop
lcall
mov
scas
xor
cld
pop
mov
cld
imul
sub
popf
push
inc
jmp
movsl
lret
pop
jecxz
fs
push
xchg
leave
in
mov
adc
push
out
int3
cmp
add
mov
test
sub
cmp
add
mov
inc
pusha
es
outsl
xchg
sahf
fdivrs
mov
insl
inc
lods
mov
out
sti
jns
mov
mov
push
lahf
fimuls
jbe
jg
xor
aam
lods
fisubs
fs
jg
add
mov
mov
sub
mov
push
loope
cwtl
in
movsb
inc
jmp
movsl
ss
jmp
or
iret
testb
mov
add
jge
int
pop
dec
sub
sub
inc
gs
jns
daa
mov
scas
xlat
push
pop
xchg
es
sbb
movsl
std
push
sbb
adc
pop
xchg
repz
int3
sub
lods
dec
push
popa
jge
xchg
lea
jmp
xchg
or
mov
fstl
rcrb
das
pop
adc
and
fcomp
or
andl
adc
inc
and
stos
xchg
push
jo
adc
fldcw
sbb
xchg
ljmp
push
cmp
das
push
adc
shll
out
or
sbb
cmp
push
aas
test
cmc
arpl
stc
and
mov
in
sbb
stos
mov
xor
xchg
imul
fimull
in
mov
mov
pop
mov
push
aad
shrb
sbb
repnz
and
mov
faddl
cli
and
test
push
inc
xchg
pop
inc
sarl
mov
xor
xchg
test
mov
scas
lds
cmp
test
push
lock
sarl
mov
mov
mov
test
mov
push
rcr
sti
pop
ficomps
add
insl
adc
out
scas
ja
and
aaa
push
jecxz
pop
pop
shll
mov
out
xchg
lds
lock
push
std
mov
cmp
mov
sbb
mov
je
rclb
loope
xchg
push
fcomps
pusha
mov
insl
xchg
addr16
push
mov
pop
ljmp
pop
test
mov
add
es
cwtl
cmp
pop
xchg
sub
insb
adc
ret
nop
mov
xchg
cmpsl
mov
test
cmp
cs
sbb
inc
xchg
and
inc
pop
inc
popf
adc
push
mov
bnd
and
ret
push
pusha
in
flds
shll
dec
xchg
dec
mov
into
sbb
ftst
pop
pop
add
mov
repz
xchg
mov
pop
xor
rorb
cltd
mov
xchg
mov
inc
fimull
mov
fistpll
or
out
pop
or
imul
fisubrl
sbb
push
mov
inc
sbb
je
cmp
jmp
jns
test
mov
xor
test
or
or
outsb
xchg
sbb
enter
mov
je
pushf
ja
jle
dec
jnp
add
mov
push
xchg
icebp
jle
xchg
fisubrs
add
imul
sub
inc
or
in
popa
push
adc
adc
imul
rcll
es
mov
lock
testb
push
or
aaa
js
ljmp
cmpsl
push
or
out
jno
pushf
loopne
xchg
arpl
outsb
es
lcall
fstpl
lock
in
xlat
pop
cmp
push
jns
xor
xchg
adc
aas
aaa
push
pop
push
mov
mov
dec
push
decb
cltd
pop
mov
and
imul
fldt
in
push
push
add
xlat
xchg
mov
xor
ss
xor
mov
les
add
xchg
inc
jecxz
mov
and
orb
ss
xchg
ds
lods
fidivl
cmp
xchg
dec
adc
mov
lcall
xor
push
in
xor
mov
imul
std
push
push
out
in
lret
out
cmp
xchg
js
push
adc
jl
jp
mov
xor
lcall
test
rcrl
jl
loopne
iret
stc
loop
pop
add
jo
sub
mov
cmc
pop
sbb
mov
outsb
lods
push
xor
mov
out
jbe
stos
add
sti
les
xchg
test
mov
in
jg
repnz
iret
fisubrs
jns
test
ret
push
psubusb
mov
and
xor
jns
mov
call
aas
gs
clc
jl
data16
ret
addl
mov
or
arpl
push
cmp
stos
cmp
cmp
scas
dec
mov
pop
iret
xchg
aam
and
add
imull
pop
cmp
fsubr
add
and
stos
lds
or
jge
sub
add
xchg
dec
mov
out
inc
mov
pushf
push
dec
scas
push
push
sarb
out
mov
pushl
jns
jno
sub
ret
ja
std
subb
xor
mov
icebp
add
xchg
scas
dec
bnd
lock
shlb
pop
aam
mov
mov
jle
shlb
ss
testb
sub
bound
inc
jo
inc
add
cli
imul
rorl
xchg
pushf
xor
cmpl
pop
pop
or
imul
push
push
xchg
sub
sti
or
and
and
mov
into
mov
cmc
aad
and
dec
cmp
lds
push
imul
add
inc
adc
cs
mov
push
mov
adc
arpl
popf
sbb
mov
imul
fstp
je
push
inc
cmp
sbb
inc
mov
xor
jb
push
aaa
inc
mov
fwait
push
mov
push
ljmp
loopne
dec
jge
mov
mov
stos
nop
cmp
push
and
repnz
sbb
bound
mul
pop
scas
inc
adc
lahf
mov
lods
sub
sub
lret
aas
mov
xchg
daa
in
xchg
jns
xchg
subl
out
out
xchg
or
sbb
and
rcl
rorl
adc
or
cld
mov
mov
push
xor
add
push
andl
ss
loope
cld
mov
in
pop
jno
cmc
mov
push
es
xchg
dec
mov
sub
cltd
insb
sbb
inc
sbb
mov
lret
or
in
aad
test
addb
call
mov
and
dec
enter
pop
adc
inc
addr16
mov
insb
mov
mov
adc
adc
scas
sub
xor
je
add
fbld
push
lds
push
dec
cmp
cli
cmp
cltd
cwtl
lea
cwtl
jmp
sub
mov
or
out
enter
pop
push
dec
call
pop
in
inc
dec
stos
mov
dec
sar
sub
cld
sbb
lret
pop
ret
test
clc
add
lock
mov
adc
out
ja
stos
fsubr
iret
sub
sub
popa
loop
mov
sahf
lahf
inc
pop
orl
push
js
cld
outsl
ret
jno
or
mov
test
test
and
or
lock
test
mov
fists
movsl
fwait
dec
das
push
movsl
mov
add
xchg
add
decl
pusha
addr16
daa
cmp
mov
sbbb
jecxz
daa
sub
inc
lahf
sbb
pop
imul
fs
roll
cli
cwtl
inc
xchg
push
inc
fs
frstor
jo
and
sub
xor
or
inc
pop
mov
loopne
and
mov
out
mov
cltd
stos
jo
mov
loopne
xchg
fisttps
sti
mov
add
loopne
sbb
cwtl
mov
out
mov
enter
pop
stos
iret
jle
lret
inc
scas
outsl
nop
pop
inc
into
mov
je
repnz
loope
shlb
lret
mov
push
mov
test
out
cwtl
push
fldenv
repnz
sbb
or
aam
cwtl
je
pop
insl
push
jns
and
aad
push
push
jmp
lahf
sbb
fmul
mov
push
pop
hlt
sbbl
sub
in
enter
in
rcrl
fistl
sbb
out
xor
rolb
push
jae
mov
fcom
add
lret
push
int
cmp
movsl
and
mov
pop
lahf
sbb
jb
call
in
cmp
pusha
mov
sub
or
xor
xor
xor
or
jo
dec
clc
jp
push
pop
stos
stos
xchg
sbb
stc
outsb
sbb
arpl
and
outsb
mov
nop
sub
xchg
sbb
loop
jle
add
loop
xor
ss
arpl
test
stos
insb
gs
std
adc
xor
xchg
mov
inc
bound
insb
es
mov
cmp
sahf
inc
lret
adc
or
jae
xor
fs
sti
test
daa
push
aad
out
inc
xchg
ds
subb
xabort
lods
pop
mov
mov
aaa
jns
imul
in
dec
mov
ds
outsl
stos
test
cld
nop
mov
dec
push
fstps
dec
mov
psrld
mov
and
push
mov
in
adc
repz
loop
clc
div
lea
sub
or
mov
in
sti
popa
push
stos
or
mov
in
and
bound
adc
xchg
pop
fs
mov
or
cmp
inc
jp
in
xor
mov
mov
test
dec
fcmovbe
xchg
rorl
sbb
mov
loopne
ret
fsubrs
cmp
mov
jl
push
pop
xor
addr16
lods
dec
jmp
fdivrl
inc
mov
in
enter
movsl
pop
fs
fdivrs
xor
mov
xchg
add
mulps
xor
dec
loope
mov
xlat
inc
mov
test
arpl
aad
cmp
xlat
or
cmp
sub
mov
cmp
adc
fdivr
cmp
push
das
add
mov
sub
hlt
fimuls
pop
xor
outsb
sub
shlb
fsubl
jge
pop
data16
mov
or
popa
add
rcrb
cmpb
cwtl
and
in
pop
mov
repz
shll
fcmovnbe
sub
jns
int
int3
sbb
dec
cltd
mov
cwtl
push
test
cs
mov
es
sub
mov
sub
mov
mov
ret
push
dec
loop
pop
xchg
sbbl
jb
icebp
adc
pop
or
es
idivl
or
and
mov
dec
xchg
sti
sti
or
add
mov
mov
ljmp
push
xor
push
pop
inc
push
pusha
enter
add
xor
stos
pusha
jg
pop
xor
pop
mov
adc
sbb
pushf
pop
xchg
xor
lea
orl
push
cs
jp
dec
or
lret
jo
xchg
add
pop
sbb
ljmp
pop
popa
push
push
push
nop
sub
adc
enter
pop
pushf
outsl
lea
dec
div
and
inc
icebp
xor
mov
adc
mov
das
push
cmp
cltd
push
cmpsb
ja
jge
pusha
cmp
add
pop
mov
movsb
out
dec
jo
call
jl
push
or
jbe
push
pusha
lret
xchg
xor
dec
stos
sub
cmp
pop
adcl
outsl
leave
popa
loop
lcall
cmp
std
and
inc
lds
icebp
imul
shll
imul
je
repz
mov
add
xchg
add
in
cli
cmc
ljmp
xor
push
aaa
mov
push
push
adc
cmp
adcb
pop
sahf
cmpsl
cmp
movsl
js
loope
pop
mov
jnp
mov
sbb
stos
test
mov
popf
pop
jl
sbb
xchg
inc
movsl
adc
in
mov
inc
dec
and
xor
add
push
jne
pusha
xchg
push
dec
mov
mov
shlb
in
mov
mov
clc
xchg
test
adc
aaa
sbb
insl
xlat
jae
sti
sbb
inc
pop
lahf
mov
repnz
add
push
cld
daa
dec
pop
scas
sub
cs
mov
rorl
or
inc
adcl
pop
lea
aas
loopne
adc
outsb
pop
das
jae
cmc
imul
pushw
adc
jl
xor
div
jmp
add
jnp
sahf
jg
scas
fsts
in
mov
sahf
outsb
pop
jg
mov
push
imul
jae
fdivrp
push
xor
sti
xchg
fcmovnb
sub
or
insl
scas
mov
xor
push
dec
rcrl
into
data16
sbb
push
int
mov
stos
shll
or
rcr
pusha
mov
mov
xchg
add
rcll
sub
adcl
or
cmp
in
jno
mov
inc
cld
fwait
sarb
shrb
clc
sbb
hlt
jl
daa
dec
int3
fbstp
imul
mov
ret
add
pushf
addr16
mov
shll
aam
and
lock
out
cmp
testl
ficoms
push
out
push
mov
jle
inc
insb
cmp
add
add
push
lds
pop
pop
sub
movsb
dec
or
mov
loopne
hlt
pop
call
scas
push
sub
in
iret
sti
fwait
inc
mov
mov
test
insl
imul
out
mov
push
push
sbb
sub
insl
shlb
in
sbb
pop
out
sbb
sarb
dec
xchg
gs
and
and
mov
inc
mov
mov
stc
scas
ljmp
movsb
fwait
es
test
jl
adc
sbb
scas
aaa
push
addb
ret
cld
or
xor
xor
add
popa
lahf
test
loope
inc
cmp
jl
cmp
inc
mov
or
pop
xchg
test
jnp
xchg
mov
je
pusha
mov
stc
cmp
cld
dec
push
xor
mov
sub
inc
pop
aas
or
mov
pop
addr16
imul
xor
push
pusha
scas
and
jns
add
in
testl
mov
mov
push
test
or
add
bound
mov
mov
add
adc
pop
cmp
xchg
pop
inc
xor
xchg
dec
xlat
call
xor
xchg
mov
or
shlb
xchg
mov
ss
sub
sub
fists
dec
cmovge
stos
cmp
in
lret
ret
push
adc
mov
push
sub
js
adc
hlt
jle
mov
add
inc
jmp
das
mov
mov
cmp
pop
lock
out
inc
xor
fmull
add
dec
xchg
push
xchg
sub
in
mov
adc
decl
inc
fldl
sub
cmpsl
inc
lods
mov
or
lea
stc
sub
mov
push
popa
sbb
mov
je
push
lahf
sahf
ret
inc
mov
popa
nop
or
sbb
loope
xor
mov
and
jbe
ret
xchg
xor
movsl
pop
xlat
mov
dec
mov
sahf
sub
lods
out
into
inc
les
inc
jns
or
push
insl
ret
call
jo
pop
fadds
xlat
insb
les
xchg
mov
scas
pop
mov
push
imul
insl
mov
outsb
and
pusha
aas
push
loope
insl
add
aam
and
xor
cmp
mov
push
adc
rol
imul
inc
je
push
movsb
stos
lock
rclb
push
test
xchg
cs
mov
push
movsl
lods
movsb
addb
and
dec
aam
fucomi
adc
jge
xor
cwtl
rorl
adc
lea
push
jg
sub
jmp
xor
mov
int3
ss
loop
inc
movsl
fwait
dec
jge
gs
inc
call
lret
insb
mov
mov
shl
push
push
testb
pop
cmpsb
inc
xor
mov
pop
add
push
test
out
mov
jp
jbe
add
cmpsb
dec
stos
ret
call
push
pop
mov
call
daa
clc
jp
sbb
call
lcall
fsubrs
cmc
jg
lahf
push
xchg
adc
repz
mov
sbb
fsubl
jae
lods
cmp
mov
jp
iret
and
cwtl
ljmp
repz
adc
and
sbb
sub
or
mov
lock
cmc
xchg
jbe
xor
pop
cmp
in
repnz
cli
mov
es
aad
add
xchg
mov
jecxz
cs
fsts
inc
ret
psubq
inc
out
das
adc
xor
mov
cmpsb
mov
add
loopne
stc
dec
sbb
mov
int
sbbl
ror
xlat
cmp
clc
inc
sbb
push
inc
test
jbe
mov
out
test
xor
jp
sbb
leave
mov
push
push
xchg
cmc
lret
call
sub
lea
xor
sbb
shrb
and
push
lds
jns
ja
and
sbb
inc
pop
push
push
stos
inc
or
inc
adc
fcomps
jo
dec
out
fmul
notl
sarl
das
fcmovnb
mov
adc
mov
or
push
ret
mov
push
jecxz
adc
fistps
sarb
sub
mov
pop
xlat
int
inc
mov
inc
loopne
fstpt
cmc
adc
clc
enter
add
das
imul
or
shlb
in
roll
int3
mov
push
push
rorb
out
pop
push
adc
pop
test
cltd
out
pop
xor
xor
push
push
ja
push
sub
xchg
sub
jl
int3
ss
add
push
out
rcll
jge
scas
test
cmp
mov
dec
in
cmp
aad
data16
mov
fidivrs
xchg
mov
push
hlt
mov
push
push
push
mov
adc
nop
adc
or
adc
fsub
and
xor
movl
or
or
test
mov
inc
or
sbb
repnz
mov
outsb
xor
or
lea
jbe
stos
cld
add
jb
inc
push
or
shr
cs
test
mov
addb
or
fildll
repnz
ret
mov
mov
jo
xor
ffreep
cmp
les
fmul
in
stos
sahf
push
scas
icebp
aas
fildl
push
inc
jnp
insl
and
cmp
cmp
jo
std
dec
decl
xchg
adc
je
mov
int
retw
cmp
mov
push
inc
fbstp
ds
adc
outsb
or
inc
add
xor
rcl
lahf
mov
loopne
arpl
mov
xchg
xchg
out
push
sub
lods
add
mov
pop
faddl
push
and
sbb
and
jno
imul
sbb
mov
daa
mov
adc
mov
or
push
sub
adc
sbb
or
adc
cmp
cmp
iret
mov
xor
cmp
push
add
cmp
icebp
das
add
xor
popf
stc
mov
mov
insb
jge
jecxz
stos
cmp
jnp
xchg
sub
testb
sbb
adc
mov
mov
faddl
iret
add
jmp
adc
pop
push
push
movsl
pusha
loope
ss
notl
mov
inc
fwait
in
or
or
jae
inc
pop
jno
in
adc
les
out
inc
mov
ss
subl
nop
push
iret
pop
xacquire
movsl
xor
cmpb
and
dec
and
jle
ljmp
xor
dec
xchg
mov
mov
mov
sub
divl
loope
sbb
xor
scas
dec
mov
in
mov
xor
aaa
mov
or
ja
xlat
fs
sbb
xchg
data16
and
jmp
daa
mov
mov
imull
and
mov
test
or
xorl
int
stc
lock
sar
or
push
sub
shl
sbb
or
mov
or
inc
xor
fsubs
fcoml
mov
insl
adc
mov
add
sbb
add
repz
push
dec
xlat
push
adc
fdivrs
aad
clc
cmpsb
loope
dec
adc
add
and
addl
xor
sbb
sbb
mov
outsb
lods
xor
cltd
ja
scas
add
and
cmp
jo
outsl
in
adc
push
inc
les
add
call
stc
sbb
lods
aaa
int
or
fbstp
test
jne
cmc
mov
mov
repnz
pop
lahf
lds
jbe
dec
imul
inc
sub
rcr
adc
decb
push
mov
jp
or
mov
jne
fiadds
aaa
inc
aad
add
jae
out
mov
jge
push
jbe
test
pop
leave
stc
push
inc
jne
push
pop
fxch
cmc
decb
cs
cmp
xor
mov
sahf
std
jecxz
jo
pop
into
imul
inc
or
lods
pop
out
cltd
adc
cld
xchg
sub
add
and
cmp
sbb
push
jmp
mov
push
lret
insb
stos
lods
inc
jmp
lcall
jnp,pt
test
outsl
sub
sti
mov
and
pusha
mov
out
xor
stc
ds
loope
xchg
mov
aas
sub
pop
loopne
shll
cld
push
push
sarl
xor
cld
divb
scas
fadd
clc
cltd
mov
fwait
clc
bound
dec
cmp
inc
pop
in
cmpsb
sti
push
mov
mov
cmp
out
pushl
inc
mov
mov
sbb
jmp
jae
call
jnp
in
cs
adc
rcll
and
xchg
cmpsb
sahf
xor
lidtl
test
lods
loop
lcall
add
cmp
cld
daa
and
jecxz
lods
sbb
dec
dec
stos
rorb
fldcw
cli
loopne
scas
fcompl
hlt
sbb
int
mov
lds
xor
sub
sbb
jo
dec
jne
arpl
pop
mov
jo
inc
inc
push
cld
les
aas
push
dec
inc
mov
ja
push
shlb
gs
pusha
fcomps
fisubs
push
xchg
cli
xchg
ret
xchg
cwtl
leave
xor
pusha
ss
pop
test
icebp
sbb
jg
sub
scas
outsb
mov
pusha
jo
in
mov
inc
mov
pop
push
mov
adcl
mov
inc
dec
fisttpl
xor
frstor
pandn
mov
xor
add
dec
cmpsb
mov
or
arpl
mov
fcoml
xchg
pushf
imul
bound
nop
xchg
cmp
push
push
sub
loop
insl
push
mov
xor
mov
xor
repnz
stc
sarb
jae
add
nop
addl
pop
jnp
fstl
das
bound
sub
nop
outsb
call
addr16
or
hlt
mov
into
push
lock
rolb
jnp
hlt
test
mov
mov
aam
add
out
or
js
into
out
mov
testl
dec
mov
int
xor
fldt
lock
add
das
popf
shll
lds
mov
and
cmpsl
lahf
xchg
sbb
jbe
xchg
xchg
imul
or
push
mov
into
rol
jnp
fmulp
mov
aaa
cwtl
ljmp
cwtl
inc
insl
in
je
push
dec
nop
mov
nop
test
stos
pop
add
bound
icebp
pusha
pop
push
pop
lret
sahf
adc
xchg
push
cmp
scas
jbe
mov
push
push
ror
mov
pop
sbb
push
jg
dec
cmp
cmp
mov
mov
sub
jge
pop
mov
pop
mov
aaa
or
aam
cwtl
into
nop
out
mov
mov
sti
insl
stos
js
in
lods
daa
or
lock
les
and
orb
cmp
fbld
stc
pushf
pop
mov
sbb
lret
jne
dec
shll
into
dec
pusha
out
cltd
push
dec
sub
inc
js
or
or
lret
add
fsubl
xchg
inc
cs
dec
pusha
jle
sbb
dec
dec
cli
js
mov
and
push
sti
cmp
mov
aas
mov
por
cli
and
test
std
pop
repnz
jno
clc
pop
test
lods
and
mov
sbb
out
xchg
xorl
pop
and
push
sbb
xor
cmc
cmp
push
inc
out
mov
pop
pushw
sub
cmp
xlat
adc
cmpsb
mov
jmp
inc
push
shlb
in
sub
out
rorb
xchg
and
jno
push
int3
loop
stos
test
dec
xor
fdivs
xor
icebp
mov
mov
fistl
push
fstpl
xor
and
add
jp
inc
hlt
xchg
js
mov
mov
pop
mov
push
jno
dec
jnp
jne
xchg
loopne
mov
push
xlat
xor
andb
daa
in
inc
out
pop
push
mov
and
pop
ja
gs
xchg
out
mov
scas
out
fwait
dec
xor
or
cmp
push
iret
and
or
fisttpl
fs
add
aaa
jl
movsb
movsl
test
out
add
cvtps2pd
repz
mov
in
xchg
addr16
cmp
mov
daa
xor
fcomps
cwtl
mov
lret
inc
aam
neg
lret
iretw
mov
cmp
enter
loope
mov
repnz
pmulhw
push
sbb
mov
or
lods
mov
mov
cmc
cmovp
popa
xchg
mov
lods
dec
mov
jb
cs
dec
stc
shl
aam
pop
loop
lods
xchg
mov
mov
sub
scas
orl
cmpsl
sub
cmpsb
jg
xor
cltd
mov
outsl
xchg
fcoml
test
jge
jbe
xor
fs
ja
mov
jno
aaa
jl
dec
sub
pop
push
dec
call
lds
test
arpl
sbb
imull
ja
imul
cmp
sub
data16
lods
es
mov
xor
cmp
mov
dec
mov
or
in
inc
jge
sbb
jge
or
movntps
push
movsl
mov
pop
push
cmp
jb
push
lahf
sub
lods
cmp
les
cwtl
dec
jnp
jge
out
push
hlt
inc
sub
jb
push
jp
pop
addr16
pop
push
pop
notl
sbb
ret
enter
cmc
loopne
xor
jb
xor
jb
outsl
sbb
hlt
adc
call
push
pushf
repnz
xor
mov
or
insl
leave
push
jae
pusha
arpl
adc
add
test
and
jecxz
out
fdivrl
adc
popa
xchg
add
repnz
lret
leave
mov
pop
push
test
mov
repnz
push
dec
loopne
lea
jns
js
jae
or
addr16
in
ljmp
jae
mov
stos
xor
cs
xor
add
call
or
insl
jne
repz
lock
out
or
in
or
sub
xchg
inc
cmc
popa
fidivrl
adc
mov
or
aam
push
mov
push
outsb
movsb
rcll
xchg
xor
das
xchg
xchg
xor
hlt
outsl
testl
lods
mov
and
xchg
jne
mov
out
jbe
mov
test
dec
aas
mov
dec
jo
mov
jbe
jae
sbb
je
inc
hlt
lods
les
movsb
push
in
jle
hlt
shrb
add
popa
ret
xchg
pop
jnp
pop
mov
or
fists
fisubrs
into
mov
shrb
arpl
push
push
roll
inc
hlt
dec
jnp
mov
lret
sahf
in
jae,pt
cwtl
es
or
out
jnp
outsl
ja
fcoml
dec
push
test
je
aam
push
loop
push
mov
sub
cwtl
jne
aad
lret
jae
jne
sti
push
jecxz
jmp
sub
outsb
mov
adc
cld
sub
mov
cmp
iret
dec
leave
cmp
pop
fildl
jmp
and
roll
adc
sub
lea
mov
mov
test
stos
xlat
sbb
int3
icebp
pusha
inc
lods
dec
aad
adc
pop
adc
cmp
rol
push
js
clc
or
repnz
cmpb
mov
cmp
jbe
and
je
or
lods
fs
dec
adc
lds
xchg
push
adcb
cmpsb
fsubrs
das
dec
jl
xchg
pop
mov
loopne
xor
hlt
mov
adc
or
or
dec
inc
clc
in
xlat
js
stos
sbb
inc
js
out
push
mov
sub
and
mov
popa
cltd
lods
mov
xlat
fisttpll
popf
or
push
sbb
mov
sub
call
call
es
scas
xor
push
push
popa
mov
sbb
aad
movsb
out
and
es
and
push
inc
test
dec
in
xor
pushf
les
inc
sbb
sarb
mov
testb
push
xor
sub
jne
mov
cmp
cld
inc
popl
cmpsb
lods
mov
add
mov
pop
std
mov
out
xchg
fsubrl
daa
movsb
jmp
mov
cmpl
loope
push
lcall
fsubrs
in
outsl
mov
out
jns
out
insb
inc
sbb
out
mov
mov
fs
jle
leave
add
jnp
pop
push
cwtl
inc
es
inc
xorps
pop
jecxz
in
push
scas
fistps
je
call
loop
xchg
pushf
orb
push
push
aas
inc
and
pushf
xor
dec
xor
inc
push
nop
out
pusha
jo
leave
loope
lahf
mov
push
pop
mov
mov
add
cmp
push
push
in
cmp
loopne
push
iret
lahf
out
jbe
push
in
inc
and
xchg
or
in
and
out
ds
xor
enter
roll
nop
int3
cmp
lcall
arpl
sahf
ljmp
jge
xchg
addr16
add
adc
xlat
mov
sbb
adc
outsl
and
loop
adc
sub
mov
hlt
add
dec
mov
jmp
iret
in
or
add
in
xchg
rcll
xor
rcrb
iret
mov
adc
dec
jae
xchg
lret
je
adc
sub
mov
cmp
movsb
stc
dec
loop
lds
scas
cmp
mov
imul
add
and
rorb
mov
out
icebp
or
mov
stc
int
outsl
add
lret
push
es
pop
add
and
fcomi
orl
and
or
out
hlt
and
outsl
in
adc
push
stc
cmpsb
bound
shl
lea
cmpsl
push
jo
and
and
js
dec
mov
push
ficoms
sub
lret
adc
jg
dec
insb
add
add
ret
arpl
xchg
mov
mov
jnp
lds
pop
cmpsb
js
std
xchg
dec
ds
les
pop
into
dec
mov
pop
outsb
pop
mov
mov
das
cli
int
mov
lret
lret
movsb
sub
mov
lahf
addr16
sbb
dec
mov
mov
push
and
and
inc
pop
bound
adc
xchg
int3
sub
movsl
je
or
push
cmp
js
outsl
push
stos
xchg
sarb
xor
in
sti
lcall
mov
jmp
cltd
sbbl
pop
xchg
repz
loop
test
rcll
imul
cmp
adc
sub
xor
adc
cwtl
stos
push
jns
outsb
dec
cmp
inc
sub
gs
ljmp
inc
sahf
mov
jbe
mov
test
aam
xor
arpl
xor
rolb
ds
pop
jp
sbb
test
pop
popw
mov
mov
jmp
ret
mov
call
repz
mov
ja
push
pop
mov
aas
notb
out
sbb
pop
in
test
movsl
icebp
jns
bound
aas
outsb
shlb
dec
out
aaa
mov
and
and
dec
aad
sbb
aam
pop
or
pop
jp
aad
jbe
pop
ja
lahf
loopne
adc
mov
mov
adc
mov
mov
aad
pop
out
xor
repnz
adc
push
jge
adc
lahf
test
fmul
inc
negb
push
jg
pop
test
lcall
mov
dec
in
inc
inc
out
cs
in
add
push
out
movsl
jns
cmp
mov
mov
xchg
in
jmp
mov
cld
sub
mov
jle
xor
daa
xor
cmp
jae
and
lret
das
xchg
mov
fs
pop
and
pop
ret
cmp
mov
in
mov
and
mov
popf
inc
sub
rol
cld
sbb
hlt
mov
ljmp
mov
repnz
popf
sbb
das
movl
jbe
cld
ljmp
idiv
inc
jb
stos
sbb
pop
pop
inc
adc
push
push
jmp
iret
sbb
in
jb
or
fs
jno
icebp
xor
adc
stos
xor
mov
mov
into
cwtl
cmpsl
dec
mov
add
pusha
dec
sub
mov
pop
sbb
mov
xor
push
inc
jle
subl
dec
outsb
cltd
xor
xor
cmc
push
cmpsb
bound
sahf
clc
cmp
adc
jl
rcr
pop
loope
cmpb
cmp
mov
adc
pop
scas
adcb
loope
fdivr
ret
push
rorl
lock
mov
mov
inc
xor
xchg
cli
jnp
popa
jb
cmp
jb
movsb
sbb
cmp
mov
xor
mov
out
and
pop
outsb
or
in
mov
pop
add
int
mov
mov
dec
insl
aam
dec
test
sbb
mov
das
mov
jae
clc
fistpl
cmpsb
jp
in
pop
xchg
das
pop
daa
bound
and
mov
mov
shll
nop
inc
xor
mov
push
shr
fcmovbe
jmp
cmpsb
cli
dec
loope
add
arpl
popa
fdivs
cmpsb
cmc
cli
lret
shlb
fdivrs
mov
repnz
push
mov
jbe
in
insl
or
push
andl
mov
inc
rcrl
nop
mov
scas
in
dec
mull
sub
clc
push
aam
lret
mov
cltd
push
lea
jle
lahf
or
mov
add
dec
addr16
xor
test
push
fnstsw
outsb
test
nop
ljmp
lcall
movsl
ds
out
mov
ja
adc
clc
into
ret
mov
or
jmp
xchg
mov
call
adc
repnz
ret
test
das
pop
ss
mov
and
xchg
mov
push
insl
lret
mov
push
jmp
cmc
push
push
daa
add
aas
xchg
cmpsb
cmp
or
rorl
test
das
loope
test
mov
inc
aas
enter
lock
fst
fisubs
incl
add
leave
fdivrl
aad
xchg
add
fs
jg
sub
mov
out
test
cmc
pop
icebp
dec
ljmp
mov
dec
dec
call
sub
pop
roll
jnp
out
mov
mov
pop
xchg
fisttpl
or
push
mov
xor
adc
cmp
dec
inc
push
std
addr16
inc
bnd
mov
mov
cmp
inc
pxor
sbbb
aas
out
subl
std
push
cmc
sbb
int3
les
test
jecxz
insb
lahf
fnstcw
sti
in
nop
jno
mov
das
xchg
dec
icebp
leave
aaa
pop
cld
lods
sub
outsl
cmp
or
ret
or
push
cmp
inc
imul
popf
sub
aaa
cmp
add
mov
sub
sub
pop
sti
xlat
jnp
cwtl
scas
push
dec
jge
add
pushf
mov
mov
enter
jns
and
sub
xor
push
mov
jmp
lahf
or
test
jmp
inc
xchg
mov
hlt
pusha
sbb
jmp
hlt
es
add
add
sub
add
cld
inc
adc
std
push
mov
stos
inc
xlat
in
ja
mov
cmpsb
adc
mov
dec
insl
jmp
sahf
mov
lea
or
lds
fildl
add
push
inc
cmpsb
bound
xor
bsf
mov
push
mov
cmp
or
mov
out
jo
push
je
dec
inc
out
jbe
into
mov
insl
fs
je
jns
ljmp
mov
xor
mov
jmp
inc
out
dec
ret
adc
or
inc
xchg
sub
add
iret
fs
push
mov
aas
bswap
push
mov
mov
gs
sbb
mov
pop
mov
push
cwtl
sub
push
daa
xor
data16
dec
fwait
dec
cs
mov
xacquire
mov
lret
aad
out
call
aas
add
iret
jl
scas
clc
inc
push
aas
ror
sub
push
mov
dec
ja
movsb
das
jecxz
lret
or
adc
in
sti
shrl
je
cmpsl
mov
jecxz
clc
std
xchg
mov
insl
sub
mov
ljmp
test
leave
ja
in
rcrb
add
sbb
enter
mov
xchg
into
mov
pop
imul
sub
push
test
das
icebp
cvtpi2ps
adc
lds
std
inc
inc
pop
mov
mov
xchg
dec
nop
xchg
xchg
xchg
mov
out
and
in
aad
sub
dec
and
dec
sbb
pop
mov
fisubl
add
or
jne
les
into
xchg
pop
sub
push
cs
lds
mov
adc
sub
jecxz
push
mov
sbb
add
stos
and
xchg
test
mov
xlat
push
cmpsl
into
cmpsl
pusha
adc
jnp
mov
in
scas
push
mov
push
mov
out
lds
cmc
and
add
lret
and
xchg
jecxz
dec
pop
insb
es
mov
add
adc
cli
iret
or
mov
popa
cmp
jo
lret
adc
aas
adc
mov
imul
mov
arpl
add
cltd
popf
popa
test
pop
or
insl
lahf
inc
push
xchg
mov
aad
enter
and
hlt
cmp
add
push
enter
repz
test
pop
lea
jp
pop
dec
cmp
jmp
std
push
cltd
sahf
mov
mov
rcl
mov
aam
stos
gs
xchg
cmp
enter
push
pop
adc
xchg
jle
aam
or
inc
imul
mov
sub
imul
out
imul
sbb
inc
push
mov
dec
fistps
cmpsb
add
js
xchg
sbb
pop
lock
mov
jp
sub
jle
stos
push
lret
jae
cli
mov
pop
mov
inc
jg
jae
aad
mov
adc
icebp
inc
mov
lcall
cmpsl
dec
push
mov
pop
into
iret
inc
xor
xchg
loopne
xor
sahf
jp
mov
imul
loopne
stc
push
lahf
movsl
xchg
jae
jnp
mov
cltd
xor
push
jle
jmp
pop
xlat
std
lods
or
leave
mov
xor
pop
mov
cmp
insl
addr16
inc
loope
dec
repz
mov
ret
popf
lret
add
sub
out
sbb
fs
lea
daa
out
hlt
in
mov
sub
inc
dec
inc
dec
cmp
sbb
rcll
adc
sub
lret
add
fsincos
pop
push
es
leave
pop
sarl
or
shld
nop
flds
add
xchg
and
push
out
cmc
bound
or
je
fs
test
dec
fldenv
int3
jns
xor
aaa
insb
xor
lahf
pop
psubq
xchg
push
jecxz
sbb
mov
sub
mov
test
push
repnz
cmp
mov
je
xchg
jmp
sbb
sub
orl
cmp
gs
xor
or
sbb
push
idivl
jmp
or
in
push
push
aad
mov
fwait
test
jecxz
adc
mov
inc
outsb
jp
sub
add
shl
pop
jg
enter
xor
xor
mov
popf
mov
pop
mov
stos
sub
fstpl
push
or
push
cmp
inc
outsb
jo
fmuls
pop
mov
dec
xor
jb
rcrl
sarb
and
or
outsl
cli
add
fisubl
les
jle
imul
cmp
gs
mov
loopne
sbb
mov
fwait
pop
scas
mov
gs
lods
ja
push
push
lret
shll
xchg
mov
push
mov
loopne
inc
mov
inc
xor
outsb
push
fisttpl
xor
out
xor
insb
sbb
sbb
je
lods
sub
call
add
ljmp
aam
stos
inc
pop
loop
and
push
jl
xchg
sti
mov
loope
dec
inc
aad
and
xchg
insl
out
pop
mov
xlat
mov
sub
in
jle
and
call
fldt
dec
cltd
aas
and
sbb
in
arpl
add
push
mov
add
rcll
loope
sbb
sub
nop
out
ret
and
inc
xor
or
out
or
dec
ja
mov
inc
dec
xor
ret
in
push
mov
aam
fs
mov
dec
xchg
jmp
bound
adc
test
sub
ja
cmpb
lcall
cld
xor
fdivrl
js
dec
cli
pmaxsw
push
nop
andb
mov
subl
outsl
pop
xor
pop
mov
mov
repz
in
rol
xor
push
add
jl
adc
mov
lods
push
and
lcall
xchg
sbb
mov
add
fs
repnz
into
mov
jle
and
xchg
sbb
dec
xchg
ss
incl
adc
mov
cmpsl
sahf
xchg
add
xchg
jbe
out
std
leave
data16
push
andb
mov
mov
data16
push
aas
xor
jb
imul
cmp
std
inc
xchg
jb
dec
cmp
fistpl
loopne
popf
cld
dec
lret
cmp
sub
int
stc
sahf
imul
cli
xchg
cltd
mov
outsl
cmc
pop
adc
stos
inc
inc
push
jo
cmp
lcall
out
imul
inc
cltd
fwait
pop
xchg
cltd
mov
mov
out
mov
jae
adc
insl
test
flds
sbb
clc
add
pop
out
or
mov
arpl
aad
mov
rcl
cmpsl
ret
xchg
loop
fsubrs
push
xchg
pop
xor
mov
imul
jae
jns
cltd
pop
sbb
ret
cmpsb
cmp
jne
cmpsl
stos
in
xlat
xor
push
dec
fsubrs
mov
aaa
sahf
insb
insb
or
adc
xchg
mov
pop
adc
fadd
jl
call
inc
xor
sub
cmc
xlat
adc
jle
push
pop
data16
addr16
fs
pop
and
bound
gs
mov
rcrl
jge
aad
mov
jo
pop
movsl
or
adc
inc
out
adc
push
jnp
mov
add
leave
daa
inc
push
cwtl
mov
imul
sub
xlat
sbb
dec
jg
cmp
imul
imul
insb
scas
popa
test
mov
xchg
mov
push
sub
lcall
dec
mov
and
xchg
cmc
jmp
cltd
daa
pop
int3
jb
outsl
fimuls
fnstsw
push
xchg
mov
sar
jnp
mov
pusha
lcall
mov
test
mov
fxch
pop
adc
jae
jbe,pt
std
mov
xadd
sbb
mov
pop
call
daa
add
inc
rcrl
loopne
sahf
mov
jl
jmp
rclb
int3
mov
sbb
mov
mov
xchg
jb
pop
sub
sahf
stc
fidivl
insl
xor
mov
cmp
jnp
mov
jo
in
repz
xchg
push
imul
inc
adc
sub
adc
lock
clc
jb
cmp
dec
add
mov
dec
sub
mov
fidivs
mov
jns
int
fsts
movsl
jno
int3
or
add
add
push
sub
ficoms
jecxz
mov
cmp
fsubs
adc
outsl
sti
mov
xchg
and
mov
xchg
add
or
ret
cmc
in
negb
aad
cmp
push
fldt
cmp
rcl
imul
sbb
jne
les
jle
test
lea
mov
fwait
xchg
mov
sub
pusha
adc
xchg
subb
in
pushf
inc
enter
mov
jbe
lods
pop
push
cld
std
insl
in
cli
out
adc
push
push
aas
loope
or
test
xor
push
call
dec
mov
mov
es
fildl
out
mov
mov
aad
jne
insl
mov
mov
jmp
in
inc
sub
jge
or
ret
jb
adc
filds
out
jle
pop
and
cltd
subb
fadds
cmp
ljmp
enter
and
dec
outsb
stc
scas
pop
and
popa
arpl
jb
stos
jmp
xchg
cmp
sbb
daa
and
bound
repnz
mov
roll
shrl
mov
mov
add
ja
scas
pushw
cmp
mov
cltd
xor
leave
or
push
lods
imul
cmc
ficoms
lods
outsl
cli
lods
lds
dec
insb
pushf
xor
not
js
in
mov
or
shl
xchg
out
stc
loope
mov
aad
into
mov
mov
aaa
cmp
mov
rcll
jo
out
jmp
dec
jp
dec
or
mov
xor
popa
cmpsb
out
or
movsl
adc
int3
sti
pop
shr
xor
sbb
adc
mov
or
in
xor
mov
dec
sbb
stos
cmp
aas
jmp
cli
jno
or
cmp
and
addl
add
insl
jecxz
inc
push
lods
hlt
dec
hlt
inc
fistps
mov
cltd
sub
outsl
in
or
cmp
add
cmp
cld
inc
clc
mov
xlat
ljmp
dec
outsl
push
add
lds
sub
sub
js
mov
in
dec
push
icebp
add
cmp
leave
xchg
push
xor
xor
out
inc
loopne
lcall
fidivrs
addr16
outsl
and
add
ret
fstpt
inc
dec
jb
rorl
ja
xchg
adc
jno
mov
pop
loopne
jb
pop
jae
sbb
sbb
pushf
pusha
xchg
pushl
cmp
add
cmc
sub
lods
and
fsubrs
xchg
mov
andl
xor
arpl
outsb
mov
fidivs
mov
pop
sub
iret
add
rolb
jb
imul
mov
cld
inc
popa
and
pop
cltd
push
leave
ret
fwait
movsb
push
out
subps
xor
cld
sub
xchg
pop
push
movsb
loopne
mov
sbb
imul
fwait
test
mov
popf
lret
inc
or
sub
ljmp
std
out
xchg
popa
imul
pop
int3
in
add
popa
fs
cmpsl
mov
xor
xchg
adc
jp
popa
les
xlat
mov
sub
cmp
cmp
in
mov
ds
repnz
dec
cmpsb
push
add
adc
sarl
pop
popf
leave
and
mov
mov
loope
sub
xor
fsubs
xchg
cmpsl
mov
inc
pop
push
incb
or
in
mov
pop
orb
sbb
sub
xrelease
fwait
imul
ljmp
push
sub
lret
sub
insb
stos
pop
out
jnp
push
pop
or
stos
out
cmp
xchg
push
cmc
xorb
adc
add
cmp
das
push
in
gs
out
and
sub
jecxz
xchg
and
fisttpll
pop
mov
add
mov
or
dec
in
cltd
add
push
push
xchg
mov
adc
fdivl
sub
xchg
mov
xor
jae
sub
mov
mov
insb
pop
mov
mov
and
pusha
cmp
pop
fs
ficoml
adc
addl
mov
pusha
ds
xchg
clc
loopne
roll
add
mov
fwait
hlt
std
push
test
pop
pop
push
ret
jl
adc
fidivrl
scas
in
std
cmp
push
addr16
into
adc
prefetch
or
js
out
push
or
xor
adc
xchg
lret
and
mov
jne
scas
aas
dec
add
jmp
push
js
test
sub
bound
mov
out
jg
lret
ret
sti
or
jmp
flds
pop
inc
mov
popa
and
jno
push
sar
cmp
xor
xor
push
loopne
repz
jmp
mov
testl
sbb
lahf
insl
adc
jge
cwtl
inc
adc
int3
xchg
jae
pop
mov
pop
mov
and
sti
lret
sahf
xor
jge
xchg
int3
xor
adc
and
inc
jl
stos
mov
xchg
sahf
scas
jl
bound
arpl
sub
jo
in
push
inc
ja
mov
ret
sahf
test
xor
jg
or
test
lods
adc
sbb
xor
imul
loopne
xlat
ror
test
es
jle
pushf
rorl
cmpsb
xor
push
jg
and
hlt
push
and
cmpsl
mov
out
cs
and
jg
push
cmp
movsb
xor
cmpsb
insb
cld
xchg
mov
push
cmpsb
clc
pop
pushf
add
xlat
xor
inc
js
or
aas
jp
jp
fldcw
mov
lock
push
test
mov
jno
cmp
push
mov
ljmp
inc
test
stos
int3
mov
inc
hlt
leave
cmp
fidivrs
shlb
mov
lcall
das
insl
pop
push
mov
lods
xchg
fdivrs
push
pop
loope
lahf
jmp
adc
mov
dec
shll
push
jle
test
mov
dec
xor
repnz
imul
inc
and
insl
mov
aaa
xlat
jne
hlt
mov
test
mov
sub
and
es
or
shll
inc
xor
aas
and
xchg
push
lods
insb
mov
push
or
fcoms
mov
jmp
movsb
lods
ljmp
xorb
push
lret
inc
inc
dec
sub
xor
dec
lret
out
adc
in
adc
cs
das
nop
je
add
repz
push
repz
sti
push
push
lcall
inc
fsubl
inc
ret
cmp
add
sbb
and
mov
out
push
and
sbbl
in
int3
inc
ljmp
clc
orl
push
mov
mov
outsb
cltd
loope
inc
movsb
lea
inc
loopne
mov
sbb
cmp
or
push
in
jmp
test
ljmp
imul
jno
into
push
xorl
sbb
dec
add
push
les
adc
fisubrl
outsl
adc
mov
adc
xchg
lds
inc
call
dec
sub
mov
in
push
bound
mov
addb
adc
dec
jecxz
mov
mov
icebp
loop
mov
mov
cld
movsb
cs
pop
xchg
add
sub
pop
cli
movsb
fsubrl
inc
nop
outsl
pop
rcrl
sbbb
jmp
ficoms
inc
imul
outsl
fidivs
les
cmp
fcmove
mov
sahf
mov
adc
and
xor
jp
shll
movsl
movsb
sbbl
hlt
icebp
aad
xchg
push
mov
in
cmp
adc
jb
je
rolb
pop
xor
mov
lods
mov
arpl
or
adc
fildll
enter
movsb
xchg
iret
leave
xor
fbld
mov
jp
scas
mov
js
mov
out
fnstcw
mov
mov
mov
push
pushl
cmp
xor
lret
outsb
call
loop
xor
repnz
or
push
lock
js
xor
sti
into
stc
cmp
sub
pop
jo
mov
gs
stos
test
stos
cmp
insb
add
std
pop
sbbl
lds
mov
push
fmull
sar
cmp
scas
pop
ja
popa
bound
push
jl
aas
into
in
dec
xchg
mov
popf
hlt
xorb
ror
daa
sub
push
push
and
daa
jnp
repz
mov
sub
mov
dec
and
pop
dec
push
xor
mov
sub
add
jg
inc
sbb
mov
add
rclb
push
lcall
outsb
or
lea
test
xlat
or
pop
mov
or
mov
jnp
push
or
rcll
lret
lds
decb
dec
adc
pop
jne
test
clc
xor
testb
js
fdivp
outsl
inc
dec
imul
gs
and
jge
rorl
jmp
sbb
xlat
pop
xchg
pop
mov
shl
xchg
push
add
sbb
stc
jb
in
rorl
out
jae
sub
gs
lcall
ret
or
dec
pop
aaa
popa
sbbl
xor
cmp
psrld
cmp
shlb
outsb
pop
cmp
fcomi
cmp
xchg
scas
push
xchg
cmp
push
imul
test
mov
dec
or
fmul
cmc
bound
pusha
adc
push
test
xor
shl
sbb
inc
in
jp
mov
loopne
outsb
inc
or
or
push
es
in
ljmp
andb
jge
push
jae
rcl
popf
pop
in
test
push
ret
cmp
add
lahf
shll
divb
repnz
lods
pop
mov
fcomi
cmp
lret
mov
das
in
in
shrl
jae
sbb
add
mov
push
pop
shrl
and
das
mov
push
inc
mov
ljmp
testl
xchg
jns
add
sub
imul
pusha
in
inc
dec
pop
scas
xor
jle
add
jnp
addr16
imul
inc
dec
xchg
pop
pop
xchg
sub
mov
lds
pop
dec
push
mov
jns
push
pop
dec
and
dec
mov
shll
sub
lcall
imul
adc
iret
std
or
out
pop
orl
add
lret
push
push
mov
mov
pushf
dec
lds
int
push
popa
add
es
pop
rcr
int3
or
loopne
loope
test
inc
jne
add
iret
and
jns
mov
jo
add
add
mov
bound
add
clc
imul
rcl
sub
addl
cmp
push
std
mov
pop
sbb
icebp
in
jecxz
ljmp
jmp
pop
push
std
mov
jmp
jno
lret
cmpsl
stc
icebp
sahf
mov
xor
lcall
xor
fstpt
sub
jnp
push
xchg
daa
push
jbe
and
xorl
es
xchg
push
xor
adc
add
dec
repz
pop
outsb
inc
jmp
xchg
sahf
sub
cld
mov
adc
stos
jne
or
sub
loopne
les
popf
sub
mov
addr16
cmp
lret
push
pushf
nop
sbb
gs
mov
arpl
das
inc
jg
xor
outsb
lock
hlt
pop
mov
lea
stc
adc
loope
and
rcl
lods
push
pop
cmpsb
pop
test
jl
test
xlat
test
push
xorl
imul
movsb
sbb
in
jle
jo
punpcklbw
xor
fmuls
into
cli
xor
cmp
negb
fistpll
ljmp
xor
jl
loope
push
jecxz
push
mov
sar
cld
gs
dec
xchg
imul
lret
ret
shlb
out
jns
jns
aas
mov
lods
cs
fs
push
insl
add
pop
mov
add
adc
mov
pushf
adc
sub
mov
push
jae
pop
inc
fldenv
push
push
and
and
mull
movsb
cmp
inc
add
dec
mov
and
insl
cmovbe
movl
xchg
jbe
xchg
cmc
cmp
sbb
jl
insb
dec
out
xor
inc
and
dec
pop
inc
inc
mov
push
stos
in
arpl
inc
jns
scas
jae
lds
mov
adcl
fcmovnbe
dec
pop
pusha
jle
mov
mov
lds
shll
sub
sub
sub
pop
lds
push
rcl
popf
add
in
inc
fistpl
sarb
insl
insb
adc
jne
imul
cmp
clc
jg
insb
les
add
icebp
and
adc
mov
test
adc
pop
je
add
icebp
mov
int
inc
jbe
lret
jg
push
orl
leave
icebp
push
xor
push
add
push
sub
sbb
pop
sbb
dec
call
mov
dec
ja
lret
sbb
mov
sub
movl
sbb
adc
xchg
jo
lahf
lods
lahf
or
or
push
inc
rcll
pop
adc
cli
jmp
fs
les
out
mov
pop
add
sub
push
loopne
arpl
scas
movsl
push
movl
add
sbb
ficoms
dec
jl
jns
pop
mov
movl
icebp
scas
addr16
xchg
leave
sbb
sub
mov
pop
mov
in
mov
and
adc
aaa
inc
sbb
sbb
out
jle
ret
cmpsb
aaa
hlt
mov
sar
jo
mov
push
stc
inc
push
in
mul
addb
inc
sbb
add
insb
mov
insb
adc
mov
faddl
sbb
cld
pop
and
jle
xchg
stc
out
inc
mov
lret
mov
dec
enter
jmp
lods
inc
dec
movsl
out
iret
mul
imul
push
shlb
pop
or
ja
xor
dec
sar
aam
sbb
out
cmc
or
mov
pop
scas
pop
in
inc
mov
icebp
sbb
dec
adcl
hlt
mov
push
rol
shll
push
push
inc
dec
je
call
aam
std
jbe
mov
dec
stos
jecxz
jl
in
repnz
mov
sbb
daa
pop
or
mov
xor
cmp
mov
cmp
xlat
fistps
mov
rol
in
popf
sar
shl
pop
dec
xor
pop
inc
mov
or
xchg
xchg
pop
push
jg
subb
push
push
fptan
dec
fprem
insl
data16
clc
in
clc
lret
jp
push
mov
lds
sti
add
shlb
aaa
lret
jle
adc
and
adcl
lds
push
or
in
mov
jl
jb
shlb
dec
adc
jle
sti
sbb
ds
and
fnstcw
push
outsb
pop
mov
stos
mov
mov
shll
repnz
or
mov
xchg
push
sbb
mov
mov
orb
xchg
icebp
adc
out
mov
ja
test
ret
icebp
mov
jmp
add
adc
aam
inc
add
xchg
movl
popf
lods
sub
shll
cmc
xor
jp
movsb
jns
daa
pop
mov
jp
stc
add
jmp
fdivrl
inc
lds
stc
mov
ljmp
cs
cmp
sti
sub
lods
notb
mov
paddusw
notb
int
push
cwtl
mov
ret
jmp
adc
scas
cmp
incb
pusha
shrl
inc
sbb
rcrl
add
and
or
xchg
push
rorl
pop
cmpsl
jb
fs
imul
push
es
and
pop
push
flds
jbe
orl
int
sub
mov
aam
idivb
xchg
mov
call
pop
fstl
bound
pusha
and
mov
sub
fidivrl
mov
push
ljmp
cld
in
jl
push
ja
out
add
xlat
loope
mov
adc
test
test
orl
dec
rcrb
xchg
cld
xchg
in
iret
cmp
pop
inc
mov
add
add
ja
add
enter
test
shlb
dec
jne
or
out
sub
push
pop
out
arpl
subl
pop
jne
aas
mov
sbb
dec
pop
adc
adc
shll
jecxz
and
push
mov
fwait
mov
std
pop
data16
pop
es
dec
mov
adc
fsub
in
cmp
pop
lock
mov
mov
push
sub
fwait
je
ret
push
cmp
and
or
mov
sub
and
push
or
sbb
and
pop
and
sub
lcall
push
cmp
dec
jb
push
cs
lret
inc
js
cmp
mov
xor
fcompl
lea
test
jae
push
add
and
push
lock
iret
shll
mov
and
add
push
shlb
and
mov
inc
ret
dec
inc
fdivl
lods
xchg
inc
and
notl
rorb
imul
xchg
or
in
test
cmp
sbb
in
lret
std
clc
xchg
rorl
je
in
mov
mov
push
jmp
test
add
mov
ds
sub
hlt
add
dec
push
cmpl
lods
lds
dec
mov
lds
int3
test
sbb
push
loopne
dec
lods
in
xchg
data16
inc
pusha
and
fwait
js
mov
push
push
gs
cwtl
enter
cmp
xchg
lea
call
fcmovu
pusha
fdivs
jl
scas
in
shlb
mov
cmp
mov
mov
gs
mov
jo
mov
sbb
xor
mov
and
repz
cmp
dec
inc
hlt
xchg
jl
ds
adc
dec
xchg
sbb
cmc
sbb
cmp
sub
and
adcb
sub
pop
insl
dec
enter
add
push
js
out
test
insb
fcmovne
cmc
xchg
popa
ret
jb
mov
fisubl
and
data16
sub
add
daa
cld
cmc
fmull
andl
push
cmp
aam
out
sarb
mov
jns
dec
dec
push
cmpsl
je
pop
imul
ficompl
aam
sub
mov
sub
sbb
or
sbb
jg
insl
jp
in
movsb
test
fistpl
jp
adc
cwtl
xorl
pop
sub
jmp
inc
lods
lahf
fistps
and
dec
loop
fisttpl
pop
scas
adc
das
cmp
rol
mov
testl
imul
adcl
iret
mov
sahf
jns
in
mov
xchg
inc
scas
and
pop
mov
aas
pop
push
sbbb
mov
push
cmpsb
rorl
push
in
into
mov
loop
push
das
lods
mov
pop
push
xchg
sti
cmp
mov
push
sbbl
and
lods
jns
mov
mov
or
insb
pop
insl
add
loop
stos
int
inc
mov
mov
xchg
cmpsl
fs
adc
sbb
or
sbb
xchg
and
loope
xchg
js
fsubrl
push
cmc
mov
jmp
xchg
js
xchg
and
cmp
jb
push
cmpl
or
cmp
dec
ret
pushf
enter
push
add
jl
aad
jnp
xchg
pop
pop
jns
insb
hlt
push
or
inc
sub
imul
test
add
sbb
dec
stc
into
pandn
mov
cmp
test
clc
and
cmc
and
sbb
or
fldt
mov
aam
lods
mov
sub
xor
or
jnp
mov
and
idivb
mov
es
adc
jmp
pushf
inc
loopne
rcrb
bound
in
mov
xchg
fsubrl
add
stos
inc
ret
jp
and
mov
lock
xchg
inc
in
aad
and
cmp
pmaddwd
push
in
mov
push
jnp
in
mulb
adc
mov
xchg
imul
inc
dec
lret
cmp
inc
sbb
fst
fldcw
mov
or
jne
stc
imul
scas
lods
ficoms
cltd
lds
repnz
call
test
jmp
popf
mov
xor
sti
fdivp
jecxz
sahf
mov
out
into
scas
je
popa
cmpsl
fists
ljmp
lret
or
adc
rorl
es
mov
pop
add
nop
insl
shlb
dec
testl
fimuls
cmc
aad
mov
pop
dec
bnd
inc
sub
cli
fnstsw
or
aaa
cmp
sub
sub
aas
rcl
shrl
loopne
lret
aaa
adc
mov
bound
cwtl
sbb
and
les
ljmp
js
xchg
icebp
xor
dec
pop
call
inc
orl
dec
xor
aas
pop
je
nop
jne
scas
dec
mov
cmp
mov
pusha
sbb
cli
insb
or
fsubs
test
enter
sub
cli
push
jae
fnsave
xor
push
imul
adc
sahf
ss
jge
fwait
or
leave
dec
jp
mov
stos
daa
xchg
mov
jle
popf
inc
ds
sbb
insb
aas
mov
sub
jns
jg
push
ja
pop
or
cmp
ljmp
das
subl
sub
cmp
sub
pop
jo
cmovno
mov
imul
test
rcrb
aad
scas
out
ret
mov
in
stc
sbb
clc
jnp
das
int
daa
mov
inc
sarb
xchg
loop
daa
out
push
jo
inc
push
and
in
lods
jmp
cmp
mov
xor
repnz
push
or
int3
fwait
push
sbb
lcall
movsb
bound
jg
xor
dec
mov
in
insl
mov
sbb
scas
out
push
push
mov
xor
fldenv
fdivs
in
std
jmp
ficompl
jo
lock
sbb
iret
outsl
clc
in
push
push
xor
mov
jne
xorb
orb
push
adc
adc
or
int3
movsl
ret
cs
sub
jns
out
pop
dec
sbb
out
or
sub
jp
mov
inc
mov
mov
sub
in
jnp
test
inc
mov
std
mov
xchg
cmpsb
mov
inc
rolb
lock
hlt
dec
fsubrp
and
sarl
test
cmpl
pop
call
or
out
cmpsl
sbb
rolb
loop
or
ret
stos
xchg
adc
xchg
mov
xor
cs
clc
out
or
pop
mov
fwait
xor
add
add
cwtl
arpl
je
pop
mov
bound
jb
sbb
add
inc
mov
in
add
cmp
jbe
ss
mov
dec
aaa
enter
xchg
lods
outsb
lds
ljmp
mov
ja
sbb
mov
iret
out
fnstenv
mov
xchg
mov
fwait
add
and
into
insb
aaa
and
dec
test
ss
flds
add
or
sahf
add
mov
in
pop
jae
es
push
rcrl
push
in
pop
push
inc
mov
inc
sbb
jg
or
cmp
xchg
sub
cmp
sbb
jne
push
sbb
lcall
mov
call
outsl
stos
imul
hlt
lds
aad
push
sub
push
mov
pushl
fiaddl
lret
jne
scas
cmp
negl
inc
mov
andl
imull
ljmp
aaa
sub
pop
mull
or
xchg
push
dec
mov
sbb
jne
sbb
bound
fwait
adc
jns
loopne
mov
or
loop
push
fbld
mov
gs
mov
pusha
xor
arpl
jno
inc
inc
fistpl
repz
mov
cltd
mov
pop
out
push
sahf
xchg
ret
popa
push
imul
xor
push
mov
popf
arpl
sahf
cld
jbe
mov
sbb
stc
pushf
inc
shl
clc
or
ficoml
cmp
dec
aas
xchg
xchg
shrb
int3
xchg
dec
push
setb
faddp
push
push
stos
mov
mov
cltd
xchg
jmp
fcoms
lock
add
mov
cmp
and
test
adc
dec
pop
cmc
xchg
lcall
into
cmp
xor
cmc
loopne
or
pop
push
jns
or
sahf
push
sti
xchg
dec
and
and
mov
and
jg
mov
lret
ret
cmp
xor
in
rcrb
pop
scas
call
mov
xchg
cmp
movsl
sbb
add
pop
or
or
movsl
pop
mov
adc
out
daa
test
mov
leave
push
sub
xlat
jecxz
jns
ds
es
and
mov
adc
negb
or
outsb
into
push
and
push
addr16
test
ror
dec
scas
or
cmc
loopne
xchg
dec
push
mov
jl
add
sbb
push
or
lock
bound
inc
and
rorb
aad
ljmp
pop
dec
mov
mov
add
mov
rol
hlt
sub
stos
fdivrl
divb
popf
pop
ljmp
or
popf
sbb
loopne
add
in
sub
mov
stc
daa
fs
leave
dec
lcall
aad
xor
fldl
repnz
inc
fistpll
dec
push
inc
in
inc
inc
cmpb
das
pushf
and
sbb
or
fs
push
cmp
fcoms
int3
out
cmc
mov
shrl
sbb
stos
mov
mov
jmp
add
pop
sub
adc
jmp
adc
push
lret
xor
scas
repz
lahf
adcl
xor
pop
adc
cmp
push
scas
cmpsl
push
sbb
inc
pushf
rorb
jno
cltd
jg
daa
inc
out
inc
mov
nop
adc
movsb
or
jl
out
dec
scas
mov
xchg
pop
movsb
in
or
arpl
sub
xor
mov
cmp
pop
mov
and
mov
push
sbb
imul
xor
repz
imul
hlt
cmpsl
jmp
pop
inc
add
cmp
fidivrs
dec
mov
insb
jae
mov
rclb
lods
add
jge
xor
addr16
pop
pop
aas
or
push
ja
cltd
mov
mov
in
adc
pushf
inc
sub
cltd
xor
fstpl
xlat
pop
pop
push
hlt
shlb
xchg
fisttpl
jecxz
loopne
sub
dec
ret
jmp
xor
ja
sub
pop
pushf
addr16
pusha
pop
popf
sbb
mov
outsb
lea
in
jne
jge
shll
dec
adc
or
pop
mov
in
xchg
cmp
mov
addr16
insl
xlat
or
inc
lds
jb
pop
pop
or
push
loop
or
inc
lret
mov
jns
inc
push
adc
orl
jo
stos
jle
scas
jmp
pop
cs
push
mov
pop
cmp
cvtdq2ps
int3
test
xchg
sub
cmp
cltd
jbe
dec
cs
sub
icebp
sbbb
int3
mov
pop
push
xor
test
rcrb
repz
loop
push
lea
and
mov
test
mov
loope
movsl
add
mov
mov
pop
mov
sub
lods
lock
sbb
je
insl
int
sub
adc
imul
imul
jo
daa
das
mov
test
out
push
loope
or
arpl
out
in
mov
out
fs
mov
push
test
mov
dec
cmpsb
enter
push
fnstsw
mov
jg
insb
and
rol
insl
test
std
xchg
dec
sahf
add
insb
roll
cmpl
hlt
data16
mov
xchg
es
sub
scas
mov
scas
std
dec
ror
or
mov
mov
outsb
data16
imull
push
and
mov
sahf
or
addl
xor
repz
cmpsl
jns
ret
dec
sbb
sbb
popf
mov
cmp
jbe
scas
mov
push
cli
jmp
mov
cmp
out
arpl
test
inc
lret
lcall
sbb
pop
or
gs
sub
scas
pop
fwait
nop
adcb
dec
pop
inc
sub
inc
das
mov
xor
mov
cmp
data16
shl
and
jp
dec
movb
test
cmpsb
xlat
fisttpl
arpl
int3
lret
icebp
repnz
cmp
mov
mov
mov
dec
mov
or
adc
jo
pop
cmc
dec
jae
icebp
repnz
jbe
ret
mov
les
mov
mov
adc
lock
rcl
in
loope
ds
and
mov
cli
push
mov
sub
or
push
pop
arpl
adc
inc
push
jbe
adc
movsb
ror
lea
aaa
xor
ret
insl
stos
dec
mov
inc
lcall
into
aaa
lahf
dec
popf
adc
das
pop
movsb
sarb
std
lods
cmp
sub
cltd
mov
fwait
jge
lods
adc
sbb
icebp
out
lods
insb
add
sbb
push
loopne
aas
enter
ret
aaa
mov
lods
jge
mov
and
fiadds
add
test
xchg
mov
sarb
mov
xchg
mov
pop
jbe
push
test
mov
lret
sbb
aaa
mov
outsb
mull
or
ret
lcall
hlt
and
push
inc
push
push
cmp
xor
das
popf
iret
mov
es
sub
and
adc
lcall
cmp
mov
call
xor
push
daa
addl
movsl
leave
sbb
adc
xchg
xor
adc
pop
mov
jecxz
mov
lods
jle
xor
iret
dec
shlb
add
es
mov
pop
outsb
daa
enter
push
sub
in
rorl
jae
fdivr
mov
mov
adcl
xlat
pusha
mov
movsl
dec
loop
adc
lea
shrl
dec
mov
and
pop
sahf
sub
pop
jmp
and
pop
or
pop
ss
sub
cmp
rorl
idivb
les
xchg
pop
iret
test
lret
fwait
push
xchg
push
out
xor
or
lea
stc
mov
inc
dec
mov
fdivrl
pop
fsts
cs
sub
imul
mov
mov
aad
mov
test
mov
adc
push
scas
jae
enter
pop
xorb
mov
jae
sahf
cs
cmp
aad
mov
cmpsb
cmpsl
jle
inc
gs
outsl
push
mov
in
inc
lods
or
cmpsb
cld
sub
mov
in
hlt
imul
mov
jb
jmp
cmp
movl
mov
ret
pop
sbb
in
bound
outsb
jmp
nop
out
pop
or
mov
sti
push
or
js
cltd
ret
punpcklwd
fistpll
mov
and
pop
icebp
sahf
mov
pop
jmp
dec
aas
push
add
mov
mov
in
into
ljmp
incb
popf
movsl
mov
pop
outsb
inc
and
outsl
loop
out
adc
xor
cmp
add
je
aas
mov
daa
loop
mov
jne
fwait
cmp
stc
jno
pop
repnz
movsb
or
mov
lret
inc
fisubl
scas
add
xchg
adc
cmpsb
xchg
jl
fsubrs
push
shrl
sbb
push
pop
fcom
xor
and
pop
inc
pop
cmp
sbb
fsubr
cwtl
out
dec
mov
xor
jecxz
dec
dec
and
adc
or
mov
popf
cmpb
jb
js
jae
sbb
inc
loopne
das
lock
cmp
dec
jmp
push
js
push
pop
and
fs
int3
and
aas
shl
sbb
inc
or
neg
stos
dec
subl
xchg
dec
fwait
pop
sub
pop
mov
data16
subb
into
xchg
loop
mov
adc
cmp
sti
ss
les
pop
ficompl
scas
jmp
pushf
pop
jns
loop
and
cmp
mov
fistpll
fisubrs
mov
sbb
push
jnp
arpl
test
inc
xchg
icebp
xor
std
repz
scas
daa
insl
subb
nop
or
or
and
test
jl
sbb
sbb
cmp
cltd
inc
std
cmp
xor
xchg
pop
popf
xchg
mov
and
sbb
jg
rol
movsl
add
mov
repz
in
leave
or
subl
sbb
sub
sub
gs
dec
mov
xchg
sbb
jb
pop
stos
sbb
andb
and
add
in
sbb
and
shr
fs
mov
xor
jmp
shl
orb
js
mov
push
mov
rcr
addr16
test
mov
sbb
rorl
inc
aas
rolb
cs
ficoml
cmp
cmp
mov
in
test
iret
or
xchg
and
sbb
mov
sub
sub
sub
das
inc
lock
inc
test
scas
out
mov
cmc
and
pop
call
lods
pusha
and
add
dec
mov
pushf
dec
xchg
add
out
and
and
push
xlat
test
add
fcomps
ficoms
mov
xor
lock
loop
mov
ficomps
cmp
pop
std
inc
cld
rcll
push
cmpxchg
dec
rclb
and
aaa
loope
mov
lock
into
inc
dec
add
xchg
dec
mov
int
std
jae
fdivrl
adc
out
xlat
or
cltd
mov
aas
nop
mov
xchg
clc
aad
popa
ja
rorb
or
pop
outsb
imul
xchg
xchg
mov
je
jle
pop
xchg
pop
sbb
js
cmp
sub
xchg
push
mov
ljmp
sub
std
lds
lahf
push
mov
fdiv
int3
mov
movb
sub
int
loop
jge
add
mov
jnp
test
lcall
sub
mov
lret
idiv
jp
cwtl
jbe
pop
out
rol
sub
popa
test
push
xor
mov
roll
cld
outsb
aas
insl
xchg
cmp
loope
out
lea
mov
ret
sbb
push
xor
inc
pop
mov
adc
inc
adc
dec
jns
fildl
out
lods
add
xlat
sub
mov
and
movsb
mov
xor
dec
aaa
movsb
inc
push
inc
adc
mov
pushw
movsl
fst
mov
das
in
adc
jb
enter
xchg
adc
mov
add
xchg
push
fdiv
jno
dec
push
lret
mov
inc
shrb
xlat
jns
clc
inc
cmp
rcl
add
js
dec
cmpsb
rorl
push
add
xchg
out
test
popa
outsl
int3
xor
jbe
cmp
or
xchg
sarb
sub
xchg
std
inc
int3
into
int
int3
arpl
sbb
add
cld
jecxz
jle
loop
cld
inc
inc
mov
jle
add
es
jle
ljmp
sti
notrack
ljmp
adcl
lcall
sbbl
add
loopne
push
sub
dec
cmp
mov
cmp
xor
or
and
pushf
pop
js
loop
dec
cmp
stc
repnz
mov
in
push
movsb
add
test
call
mov
data16
sbb
aaa
xor
mov
xchg
add
int3
inc
fidivs
nop
inc
push
mov
dec
adc
push
cmc
sub
enter
nop
pop
shrl
pop
iret
push
xchg
test
add
into
ret
cmpsb
dec
sti
test
or
push
shlb
mov
adc
add
test
icebp
mov
outsl
andb
adc
test
pop
mov
icebp
sub
mov
ret
sub
mov
rclb
pop
or
cs
xchg
jl
bnd
mov
call
fwait
xor
out
sbb
sub
dec
push
or
inc
inc
mov
roll
dec
leave
add
lret
iret
jecxz
or
ljmp
dec
push
filds
loopne
sbb
bound
jae
call
test
mov
cs
rorb
add
adc
push
cwtl
push
cmpsb
iret
pop
jge
mov
add
pop
xor
cmp
xchg
ficoml
in
mov
add
out
adcl
jge
and
mov
jge
mov
mov
adcl
pop
cmp
mov
dec
mov
mov
or
sub
repz
adc
mov
sub
and
shll
jne
psraw
mov
mov
mov
xchg
pop
popf
push
scas
mov
sbb
jecxz
push
test
sbb
js
mov
call
xchg
xlat
adc
pop
dec
push
jle
hlt
ja
int
jb
int3
cmc
mov
cmp
jp
add
xor
sub
sbb
pop
insl
lret
pushf
sti
shrd
stos
or
inc
push
test
sub
int3
mov
add
mov
dec
mov
push
mov
xchg
lret
cs
pushf
jne
test
or
xchg
das
outsl
dec
lods
aaa
cli
js
xor
jg
and
dec
outsb
dec
xchg
xchg
test
push
pop
ret
data16
inc
mov
inc
sbb
dec
mov
push
jg
ss
push
mov
popf
int
cmp
js
out
es
mov
xchg
loop
loope
dec
imul
and
shl
fs
mov
pusha
jp
aas
jb
dec
jns
repz
jle
or
cmp
mov
mov
rclb
jo
aad
mov
cmp
cmp
jge
and
insb
xchg
and
test
icebp
xchg
in
sbb
repnz
test
mov
in
mov
outsl
cli
jmp
fdivrl
int
out
in
popa
jne
mov
pop
cmpsl
sbb
js
sti
mov
cmp
adc
jle
cld
ss
je
js
ljmp
dec
nop
jmp
push
inc
loopne
sbb
sbb
shlb
sub
and
jmp
mov
pop
jecxz
popf
xchg
inc
xor
push
loopne
popw
std
mov
repnz
in
push
ljmp
lcall
and
loope
loop
rcrb
and
adc
stc
jns
int
xchg
mov
movsl
nop
jne
dec
xor
cmpsl
or
or
in
rorl
xchg
stc
mov
dec
mov
xor
mov
push
pop
pop
push
lods
mov
xor
sub
push
dec
push
ret
mov
ds
jns
sub
test
enter
sbb
pusha
add
loopne
xchg
cwtl
imul
inc
out
lock
jle
and
or
push
mov
or
push
rcrl
adc
fsubrs
sbb
rclb
push
pop
mov
divb
push
bound
mov
pop
cmp
sti
push
mov
or
push
stos
sbb
out
sub
push
xchg
xor
add
push
stc
addr16
pop
shlb
push
gs
popa
into
jno
int3
or
fcom
cwtl
or
dec
mov
rorb
call
popa
or
aam
call
mov
dec
push
and
cmpb
add
ror
pop
out
xchg
into
xlat
iret
sbb
aas
test
mov
lea
pop
lret
popf
scas
js
ds
xchg
lahf
aad
aam
mov
xcrypt-cfb
cmpsl
daa
pushf
mov
int
and
inc
in
cltd
mov
dec
push
je
std
sub
ja
orl
push
cmpsb
movsb
mov
add
fld
pop
sahf
scas
push
lcall
push
push
jbe
movsb
lods
std
in
and
sbb
mov
cmp
mov
cmc
pop
imul
or
insl
sub
enter
out
sahf
xor
adc
cld
sti
mull
sub
jle
xor
lods
push
aad
andl
in
push
push
loope
add
sbb
jae
mov
popa
mov
in
dec
jb
xchg
lret
addr16
scas
out
push
sbb
add
icebp
sub
or
xor
nop
inc
fcompl
cmp
fadds
mov
stos
movsb
cs
xchg
mov
jne
jnp
mov
and
nop
dec
in
sbb
test
mov
jae
pop
xor
inc
fsts
ss
jns
lahf
loopne
xor
xchg
jno
jae
cmp
and
pushf
sbb
or
xor
jl
xchg
dec
test
xor
add
adc
sar
and
sub
ja
hlt
push
arpl
pop
jno
ret
lcall
sbb
dec
es
in
pop
jnp
lock
adc
cmpsl
je
jle
int3
mov
mov
sub
mov
cmova
ror
imul
sarb
adc
xchg
sahf
lahf
lcall
out
test
fs
fsts
xor
movl
rcll
push
lea
mov
xor
icebp
into
stos
xchg
scas
rcl
pop
add
mov
insl
lods
dec
lcall
sbbb
jo
scas
mov
push
das
icebp
adc
ja
push
inc
mov
popf
push
xor
fisttpll
xchg
aam
and
aaa
fwait
xchg
lock
lret
xlat
icebp
mov
push
push
daa
jecxz
lods
pop
mov
dec
into
shlb
gs
pop
sub
rolb
test
pop
add
ljmp
jge
or
bound
loopne
mov
mov
jae
sarb
lock
pop
push
push
ret
push
cmp
fwait
pop
je
pop
push
pushf
dec
push
pop
daa
std
xlat
scas
subb
leave
xor
scas
fimuls
or
int
lds
push
lret
out
mov
xchg
sbb
pop
jns
lds
push
xchg
cmpsl
xor
add
js
int
divps
mov
push
das
cmp
leave
sub
sbb
push
ljmp
cmp
pushf
sub
in
mov
jmp
nop
xchg
mov
call
repz
mov
or
mov
rorl
mov
fdivl
pushf
loope
pusha
sahf
and
sbb
cmpsb
lods
out
inc
jl
js
push
mov
jge
jp
in
add
outsl
mov
fs
arpl
adc
test
stc
push
jl
cmp
mov
aam
or
int3
push
inc
cmp
idivb
and
xlat
pop
repnz
lret
in
inc
or
daa
sub
sbb
fcompl
sbb
ljmp
repnz
outsl
xlat
bound
pop
push
lahf
and
imulb
push
fldt
push
cltd
jecxz
rorb
imul
loopne
rolb
adc
xchg
sti
pop
imul
stc
mov
clc
sub
mov
cld
rorb
mov
lcall
testl
test
push
js
cmp
pop
fildl
sub
inc
adc
aas
incb
mov
xchg
or
cmc
mov
adc
insb
hlt
out
movl
nop
add
push
mov
sarb
gs
ja
jbe
mov
sub
shl
mov
fwait
cmc
xor
repnz
pop
popf
jns
lahf
out
and
inc
shll
inc
jge
insb
lods
lock
mov
loopne
cltd
mov
iret
pushf
es
testl
sbb
pop
sub
dec
sbb
jmp
xchg
insb
pop
je
xchg
je
mov
xor
int3
sub
ljmp
sbb
adc
fs
cli
fidivs
sub
xchg
mov
jb
gs
dec
enter
or
decb
pop
pop
jns
inc
imul
cmp
dec
xor
xor
add
xchg
cmp
cmp
add
sbb
add
dec
pop
in
bnd
mov
rcr
or
arpl
ds
insl
stc
out
clc
dec
push
cld
xor
adc
dec
cld
pop
jmp
fwait
lock
mov
jecxz
fs
sbb
dec
lcall
jo,pt
fwait
push
push
jo
inc
push
int3
cmpsl
pushf
clc
aad
loop
jmp
add
lcall
sarl
shrb
mov
mov
cmpsb
mov
sti
ret
decb
cli
lret
ds
push
out
daa
xchg
sub
xor
xor
mov
fimull
aam
and
lahf
jle
push
push
jns
cmp
mov
call
inc
inc
dec
sbb
and
jo
mov
fs
or
in
repz
sub
and
popa
mov
and
arpl
outsl
inc
sahf
ror
cs
js
xor
outsb
ss
adc
jnp
dec
je
stos
fistpll
ds
scas
je
lcall
maxps
gs
sub
shrb
pop
xchg
and
stos
decl
inc
adc
xchg
inc
jecxz
fdivrs
repz
loop
xchg
inc
clc
mov
cltd
mov
xchg
mov
cmp
notb
popa
cmp
dec
and
mov
push
xor
ret
pop
push
xor
inc
stc
mov
push
sar
pop
insb
cmp
sbb
adc
addr16
pop
scas
outsb
adc
ret
jl
xor
sbb
xchg
push
insb
stos
test
inc
cltd
xchg
fwait
push
outsl
outsl
pop
add
jmp
lret
lods
adc
in
mov
xchg
cs
and
pop
jb
xor
pop
imul
push
out
or
daa
mov
out
push
aaa
clc
leave
ret
outsl
or
jne
lds
faddl
xor
jbe
sub
std
pusha
push
pusha
cmpsb
mov
mov
push
pop
xchg
sub
mov
ljmp
cld
inc
repz
mov
dec
push
outsb
mov
pop
movsb
xor
aam
jp
scas
adc
mov
add
add
mov
mov
std
cmp
ds
add
pop
adc
push
cmc
movsl
mov
les
or
sub
stos
cmp
fst
out
xchg
daa
xchg
sbb
loop
cmpsl
dec
mov
mov
cltd
call
mov
xor
jg
icebp
arpl
popa
dec
dec
jnp
ret
lods
std
das
inc
mov
lret
mov
in
mov
and
mov
std
sub
js
loop
or
stos
testb
int
inc
jmp
in
sbb
inc
jmp
push
lods
pop
mov
and
dec
xchg
sbb
stc
jb
lahf
pop
stos
paddusb
shrl
xor
jl
push
fsubrl
dec
test
and
mov
cmpsl
xchg
sbb
mov
andl
das
jg
xlat
pop
rclb
roll
cmp
mov
jge
push
cmp
add
mull
scas
cs
cmc
xor
dec
popf
mov
dec
lock
and
push
mov
cmp
or
push
and
dec
sbb
mov
or
mov
cmp
jp
jne
cmp
pusha
xchg
push
testb
xor
push
mov
or
cmpsl
mov
pop
scas
adc
push
push
jmp
scas
lahf
adcl
inc
xchg
jo
cmp
in
add
popf
lahf
adc
das
lcall
sbb
cmc
ja
mov
xchg
xchg
int
sbb
int3
mov
std
pop
pop
jecxz
arpl
xchg
popa
arpl
pop
xchg
das
stos
or
sahf
fwait
xchg
lcall
jmp
ret
inc
jle
shl
scas
mov
push
cmp
mov
dec
enter
sub
mov
sub
nop
dec
jae
push
fs
mov
shlb
mov
cmpsb
insl
sub
xchg
cmp
movsb
insl
mov
jne
inc
xchg
jmp
mov
daa
xchg
sbb
lret
add
sahf
test
loop
stos
jns
xchg
dec
lahf
xor
sub
lock
adc
iret
and
std
cmp
mov
hlt
in
jae
aas
xor
mov
or
cmp
xchg
add
adcl
and
sub
sub
mov
jno
es
jns
xchg
cli
pop
push
jnp
stos
cwtl
mov
cltd
in
js
adc
and
pop
imul
xor
pop
xchg
jb
xor
jg
or
lea
mov
icebp
push
jecxz
push
xor
movsb
cwtl
or
ficoms
jecxz
push
dec
inc
aad
ljmp
pop
inc
push
push
andl
loop
imul
lcall
repz
or
sub
out
add
xchg
dec
cmp
or
cmpl
lea
cmpsl
fldenv
gs
cmp
cmp
incl
sub
out
call
adcb
adc
adc
push
loope
mov
adc
add
mov
add
fistpll
lahf
mov
add
loop
lcall
stos
out
adc
fs
out
es
cmp
pop
jge
mov
iret
clc
lahf
insl
lret
push
push
mov
or
insb
adc
dec
movsl
inc
outsl
push
pop
sbb
mov
cwtl
lret
fidivrl
pop
out
dec
mov
int
and
cltd
out
aad
shll
push
call
adc
rcrb
push
sti
jnp
stc
xor
and
or
decl
mov
inc
arpl
or
xor
mov
pop
lahf
es
stos
bound
rcll
or
dec
aam
shrl
jmp
and
push
roll
or
addl
loope
pop
jl
pop
cltd
adc
or
jnp
adcl
cmp
and
shll
sbb
popl
cmp
inc
inc
mull
sub
sbb
push
lock
and
ds
mov
cmp
mov
cmp
pusha
or
push
mov
mov
or
cs
jl
mov
jge
bound
aad
and
mov
fstpt
and
aam
sbb
sbb
das
jecxz
or
or
xchg
push
enter
jae
fldl
pop
and
aad
test
call
and
xlat
idivl
xchg
cmp
mov
pop
jge
xchg
pop
xor
sbb
pop
pop
mov
mov
pop
sarl
add
xlat
push
inc
mov
jg
adc
in
add
outsb
shlb
xchg
xchg
icebp
jmp
inc
jecxz
sti
ljmp
xchg
xchg
or
inc
testb
imul
enter
push
mov
sbb
cmp
push
out
rolb
sub
inc
ret
iret
inc
test
xor
pop
stc
loopne
je
fwait
adc
mov
xchg
ror
mov
leave
movsb
ss
addb
sti
loop
adc
mov
inc
pop
fcmovu
pop
adc
sbb
inc
mov
fidivrl
imul
xor
out
sub
and
jge
dec
jnp
add
mov
pusha
xor
mov
and
inc
movsl
imul
sub
mov
fldcw
leave
js
sub
dec
push
fnsave
aam
pop
fdivrl
stc
push
arpl
push
mov
cld
jmp
push
xlat
mov
cltd
sub
lret
cmp
cmc
aad
pop
mov
addr16
inc
outsl
ljmp
sbb
push
mov
add
sub
inc
in
add
mov
loope
mov
dec
iret
sti
pusha
lcall
mov
notb
cmpsl
jbe
sbb
dec
and
jecxz
mov
aam
loope
cmp
imul
add
scas
insb
mov
loopne
pusha
xor
mov
adc
mov
mov
ss
jb
lods
cli
lea
xchg
popa
nop
pop
ret
push
sub
xchg
int
repnz
add
jnp
jno
aas
fistl
dec
cmp
cmp
cs
inc
aam
popf
fwait
or
divb
and
xor
hlt
mov
xlat
cmp
ret
in
aas
pop
loope
or
xchg
pop
xor
mov
in
aad
jo
dec
inc
imul
pop
jle
bound
adc
sub
pop
push
insl
imul
cltd
xchg
ja
mov
dec
mov
add
sub
rolb
movsb
pop
jae
mov
addr16
dec
jl
gs
inc
jno
add
mov
sarl
inc
sub
fimuls
mov
sub
jg
clc
mov
fs
jmp
adc
adc
add
push
jmp
cwtl
icebp
das
in
or
pop
dec
add
aam
sub
sahf
jmp
push
mov
cmp
out
shll
lds
ret
and
and
and
js
or
cmc
arpl
mov
push
cmc
pop
add
jg
pop
fildl
inc
sbb
or
cli
sub
into
sub
sbb
push
movsl
xor
jae
adc
lds
adc
mov
and
test
fdivrs
in
out
pop
insl
scas
cmpsl
ret
fdivl
call
or
in
add
jmp
addr16
idivl
test
push
push
mov
pop
mov
aam
jp
sub
shl
fcom
lret
mov
cli
out
shll
cld
hlt
sub
mov
jecxz
push
adc
addr16
imul
cmp
pop
and
ja
in
jne
in
pop
leave
and
adc
popf
adc
aas
add
dec
pop
sub
mov
jo
fs
xor
lret
or
jp
inc
mov
pop
push
pop
push
and
mov
mov
jmp
rclb
leave
xchg
push
or
jmp
fldl
test
xchg
out
cmp
jg
adc
sub
push
sbb
mov
xchg
comiss
cmp
cld
inc
xor
sub
xor
test
fmul
daa
mov
cmp
push
and
or
insl
adc
mov
fisttpl
int
iret
fnstsw
xchg
ljmp
and
xorl
inc
mov
adc
inc
dec
loope
jp
not
xchg
jmp
lds
hlt
xor
push
ljmp
sarb
jge
cmpsb
jno
cld
fldcw
out
enter
enter
lcall
push
pop
xchg
jle
mov
inc
xor
add
test
les
inc
test
js
data16
xor
push
mov
jae
cmpsb
pusha
sbb
cmpsl
cmp
jb
scas
mov
pop
adc
adc
sahf
inc
or
pop
push
arpl
sahf
sbb
jne
add
cwtl
push
cltd
mov
loop
mov
rorb
mov
pop
pushf
fistpll
icebp
das
mov
and
xchg
adc
push
repnz
movsl
pop
xchg
pusha
test
push
cltd
mov
fisubrl
jb
dec
push
bound
bsf
add
xor
and
add
sub
sbb
mov
add
pushf
xor
gs
and
add
cmp
push
cmpsb
sub
test
push
sahf
out
repnz
inc
std
scas
mov
adc
popf
cmp
pushf
outsl
mov
or
jmp
insb
xor
adc
in
inc
xor
mov
inc
mov
push
jecxz
push
sub
xor
jle
gs
jg
jmp
mov
sbbl
out
loop
int
scas
jae
roll
cmpl
dec
sbb
pusha
push
gs
daa
cmpsl
push
insl
pop
dec
jle
inc
dec
xchg
or
sub
xchg
sbb
sarl
add
jns
jg
cmove
imul
pop
addr16
sarb
sub
stos
gs
mov
ficoml
add
je
dec
inc
mov
pop
cs
test
mov
jb
outsl
enter
sub
mov
jae
push
mov
inc
mov
and
or
push
lret
jo
pop
arpl
fstl
lahf
out
cmp
lods
mov
adc
mov
cmpl
or
adc
xor
and
xlat
fbstp
add
mov
test
xchg
repz
cmp
repz
lret
and
mov
popa
jmp
sub
pmaddwd
push
mov
mov
out
lock
xchg
shlb
pop
dec
or
add
stc
lcall
adc
clc
int
pushf
bound
ds
fistl
lret
and
xchg
inc
lea
pop
lds
and
lock
lcall
aad
inc
adc
push
insb
push
pop
lock
sarl
push
mov
ja
xor
jmp
sub
sub
pop
cmp
push
icebp
xchg
iret
cwtl
pop
mov
pushf
movups
add
imul
jbe
stc
sbb
test
push
sub
mov
shll
pop
ja
adc
mov
rcrl
outsb
aas
inc
jnp
aam
subl
cmp
pcmpeqd
jb
inc
inc
int3
lock
cmp
arpl
in
pusha
aam
jl
xchg
ret
fldenv
mov
sub
push
nop
and
xor
loope
subl
bswap
cmp
movsb
jp
jno
inc
or
or
fsubrp
clc
add
xchg
mov
push
out
fiaddl
enter
addl
fdivr
cmpb
pusha
xorb
xchg
in
inc
lcall
xor
push
sub
dec
push
lcall
pop
or
push
int3
test
cs
cmp
or
nop
dec
sti
arpl
cli
aas
cld
ret
inc
jae
loop
jb
les
add
and
dec
aam
mov
inc
bound
and
mov
imul
lods
jecxz
jecxz
jae
loopne
cmp
loopne
es
pop
cmp
mov
sbb
shrl
push
inc
mov
mov
pop
dec
pop
popf
incb
lds
je,pt
in
mov
jae
push
bound
push
fwait
jnp
div
lods
mov
and
aaa
jns
xchg
cmp
xlat
jle
or
adc
dec
and
mov
and
push
data16
push
lret
jecxz
into
sbb
mov
sbb
push
push
ret
cmpxchg
jo
cs
cld
dec
sbb
cmp
cmp
dec
sti
cmp
fdivrs
jae
insl
pop
xor
inc
cmpl
xlat
icebp
data16
cmp
pop
xor
dec
mov
jns
xor
sub
je
rolb
in
mov
das
in
push
mov
ja
jmp
rorl
cmp
popa
test
pop
lahf
nop
ud0
pop
dec
aaa
lods
add
jecxz
scas
lods
and
movsb
push
test
xchg
xor
lock
or
ja
mov
jns
pushf
sbb
jns
lret
jecxz
in
and
in
pop
and
hlt
fsubs
enter
or
aam
xchg
xchg
xchg
xchg
mov
mov
sub
out
sbb
push
in
das
xor
fst
pop
pop
sub
or
scas
adc
xchg
imul
dec
ror
push
sub
xor
dec
sbb
dec
xchg
lock
in
aad
les
sbb
cmpsb
sub
jne
or
subl
mov
int
or
test
bound
lock
lahf
outsl
repz
fucomip
add
xchg
fdivr
and
mov
adc
pusha
jmp
sbb
or
lods
mov
push
mov
sahf
loop
aas
mov
hlt
sti
icebp
setno
dec
lcall
pop
add
push
xor
fisttpl
cmp
lock
addr16
ja
mov
pusha
mov
jno
popf
xchg
pop
cmpsb
inc
cmp
and
or
fs
dec
jge
in
and
fiaddl
std
js
mov
cmc
idivb
mov
xchg
aam
sbb
sub
jo
pop
mov
daa
insb
iret
cmp
test
push
jg
mov
cmpsl
orl
push
jp
inc
nop
loop
data16
cmpsb
decb
mov
xor
rcrb
jae
test
mov
cmp
dec
adc
ret
push
inc
jno
jg
subb
sbb
loopne
mov
mov
ret
mov
add
aam
and
xorb
divb
cwtl
std
mov
lret
mov
dec
or
rorb
in
int3
in
aam
ja
loop
jecxz
mov
push
mov
ja
outsl
xor
repnz
in
adc
add
jl
xchg
mov
sbb
addl
add
pop
jae
push
or
adc
lock
jge
sub
inc
mov
jb
or
xchg
fidivl
xchg
xchg
test
and
and
mov
notl
fdivrs
mov
sub
dec
pop
xchg
or
fistl
add
adc
jb
sub
adc
movntq
and
cli
sub
dec
inc
adc
or
mov
jns
xchg
fsubs
ret
jb
cmp
xlat
and
sub
add
mov
sub
mov
jle
jae
mov
rorb
data16
test
xchg
push
cltd
mov
aas
nop
xor
std
inc
dec
fmul
mov
mov
mov
pusha
push
jle
or
mov
sbb
pop
imul
mov
mov
adc
clc
cli
and
mov
daa
xor
sub
cmp
movsl
cmpsb
jge
rcr
cltd
mov
mov
imul
pop
mov
sahf
push
push
jge
pop
pusha
pop
inc
rorb
rcrl
fisttps
shr
inc
lods
repnz
shl
cli
and
inc
xor
cmp
sti
fbld
pop
popa
jbe
shrl
add
mov
stos
dec
sbb
mov
mov
xor
enter
and
sbb
data16
mov
cmp
cmc
jecxz
push
data16
ja
dec
pop
stc
mov
sub
ljmp
hlt
mov
loop
outsb
es
cli
shll
outsl
mov
mov
add
cwtl
test
bound
pop
hlt
cwtl
cwtl
mov
adc
sbb
lret
adc
sti
push
iret
bound
inc
adc
fs
cmp
or
cwtl
addl
lds
jo
inc
nop
scas
sbb
iret
or
ficompl
sbb
in
adcl
push
jmp
jbe
lcall
adc
cmpsb
lods
adc
aas
movsl
jge
lcall
jle
shll
push
lret
add
cmp
sub
pop
icebp
jbe
test
mov
push
xor
sub
in
popf
dec
pop
ret
mov
or
mov
adc
mov
jnp
inc
lods
mov
rcrb
lods
inc
dec
ljmp
fdivl
inc
movsl
out
ja
mov
jge
push
sbb
les
xchg
mov
fcmovu
add
std
orl
push
lds
mov
je
notl
push
cmpb
adcl
push
push
in
xchg
loopne
enter
ret
hlt
or
jmp
fxch
xchg
enter
leave
imul
inc
pop
mov
and
add
lahf
sub
adc
scas
mov
or
push
fmull
xlat
ja
dec
add
inc
xor
fsub
dec
dec
mov
movsl
mov
cmc
mov
outsb
gs
mov
mov
push
add
jnp
pop
cmpsl
cmpsb
cli
sub
call
mov
pop
xchg
and
jg
push
pop
sti
ret
xchg
repnz
lds
cli
lret
inc
std
movsb
push
movb
adc
xor
cmpsl
lods
shrl
cmpb
adc
jb
push
fiadds
push
orb
inc
sbb
lds
loope
subb
xor
ljmp
fprem
mov
xor
jns
mov
dec
sub
scas
cmc
pop
sbb
data16
les
adc
mov
mov
mov
hlt
bound
je
jp
xor
fdivrp
lods
insb
xor
mov
cmp
ds
imul
outsl
bound
mov
out
mull
icebp
dec
mov
push
addr16
ljmp
mov
outsl
stos
fs
dec
push
push
out
cwtl
jo
or
iret
mov
adc
nop
pop
hlt
fisttps
aam
ficoms
jge
or
fwait
ret
mov
pop
jnp
in
test
push
jbe
jae
jae
mov
push
sbb
std
test
fdivp
movsb
enter
dec
je
pop
or
and
sub
push
test
iret
sub
pop
and
push
mov
outsb
stos
mov
stos
sarb
ret
subl
jns
and
cmp
sarl
sti
push
mov
das
imul
insl
sub
cmp
imul
inc
pop
jae
xchg
xchg
cld
mov
cs
add
imul
jo
sub
mov
jae
in
cs
jmp
lcall
call
jmp
mov
adc
pushf
push
dec
mov
mov
or
cwtl
jno
inc
out
and
cs
inc
inc
mov
jb
xchg
cmp
js
jg
andl
stos
push
lock
xor
mov
add
push
inc
cmp
and
stc
call
lods
sbb
push
cld
sub
mov
insb
aaa
mov
adc
inc
add
imul
repz
sub
xchg
xchg
xlat
je
inc
ret
aaa
call
dec
add
lods
mov
jbe
mov
pop
dec
lods
jp
push
adc
mov
pusha
test
push
mov
xchg
mov
std
dec
sbb
and
fiadds
dec
xor
pop
mov
pop
fwait
imul
jo
xor
dec
mov
inc
scas
bound
and
fwait
pop
dec
and
sahf
cmp
loope
popf
in
jmp
repz
xchg
jg
add
adc
mov
sbb
pusha
or
cmc
ja
jecxz
mov
add
mov
or
dec
push
negb
mov
pop
mov
push
in
pop
data16
xchg
in
out
ja
push
and
lock
ffree
bound
enter
int3
movsl
out
pop
sub
jp
popa
jge
mov
lock
rep
js
es
pop
inc
sbb
fsubrl
xchg
aam
test
mov
pop
ss
mov
testl
jge
sbb
dec
or
mov
jmpw
loope
xchg
inc
push
adc
xor
lock
fcmovnu
outsl
ljmp
or
into
imull
and
inc
cs
sub
and
int3
test
mov
adc
mov
in
call
mov
pop
ljmp
out
in
pop
add
iret
xchg
addr16
jnp
add
fildl
mov
clc
or
dec
jg
jge
push
sub
mov
sub
cli
sbb
jmp
mov
mov
aaa
pushf
int3
pop
movsb
fcompl
insl
sub
aaa
mov
lahf
add
cmp
dec
jno
iret
fbstp
pop
jecxz
mov
fbld
xor
lret
std
lret
out
ror
test
lret
sbb
push
and
cmp
jl
test
loopne
ret
mov
fisubl
mov
jmp
test
cmp
jl
xchg
ret
add
aad
rclb
repnz
ret
jns
lahf
cmpsb
test
popf
shll
adc
mov
or
mov
dec
js
jmp
out
pop
scas
jle
iret
push
push
imul
jne
sub
push
or
out
push
negb
shrl
imul
cmp
loop
mov
pusha
xor
fadd
xchg
imul
ds
jge
mov
and
jg
cmpsl
addr16
adc
add
and
stos
imull
dec
movsl
cmp
cmp
out
cmpsl
test
out
pop
repnz
mov
mov
cmp
iret
shl
test
out
scas
and
or
dec
fsubrs
nop
cmp
and
pop
imul
fcomps
add
shl
sub
call
mov
dec
rorl
mov
jnp
enter
sub
jmp
inc
mov
jo
cmpsl
jno
jmp
pop
aaa
insl
mov
jo
adc
insl
dec
xlat
mov
in
add
les
jbe
shrb
mov
adc
sbb
push
int3
pop
jbe
gs
lea
mov
icebp
shl
fs
stos
test
aam
movsb
stos
pop
scas
or
xchg
sbb
rorl
push
mov
iret
test
sahf
orl
je
push
inc
mov
sbb
aam
and
scas
in
lock
or
cmpsl
push
subl
test
and
mov
xchg
jge
out
pop
mov
clc
daa
dec
sahf
stc
mov
inc
xchg
pop
test
sbb
int3
inc
leave
leave
test
push
fisubrs
fldenv
mov
inc
dec
sub
mov
movsl
lea
pushf
loope
sub
decb
loope
push
subb
test
fimull
in
pusha
clc
inc
xor
imul
clc
in
xor
adc
or
jle
inc
xchg
sarl
mov
pop
mov
dec
add
mov
jl
jnp
es
xlat
popa
jmp
jmp
dec
sub
orl
das
dec
into
xchg
loope
or
cmp
sub
jmp
cmpsl
or
bound
pusha
mov
stc
sub
pop
js
loope
adc
arpl
cmp
mov
mov
pop
push
jg
xchg
add
mov
movsl
es
add
movsl
repnz
addb
in
push
pop
pop
bound
test
and
sahf
inc
mov
inc
cld
psubusb
jecxz
push
mov
aas
mov
subl
mov
test
insb
push
xor
imul
xchg
pusha
hlt
std
jno
or
push
add
and
mov
out
mov
dec
mov
mov
hlt
dec
dec
into
int3
adc
movsb
fistl
lahf
cli
out
add
gs
xlat
dec
shrb
mov
inc
xchg
and
dec
xlat
pop
pop
pop
shll
push
jl
adc
or
jge
push
popa
mov
mov
clc
push
mov
test
cmp
ss
lret
shll
adc
adc
cwtl
adc
mov
aas
adc
call
mov
adcb
stos
shll
dec
addl
jecxz
lret
xor
nop
rol
push
ficomps
xchg
lcall
xlat
xchg
clc
xor
es
out
sub
scas
loopne
lcall
sbbb
ret
dec
sub
push
pop
cli
pop
lods
push
leave
imul
cs
mov
lds
lret
mov
inc
adcb
ret
and
mov
jg
xchg
inc
loope
jle
int
fldt
mov
sarl
sbb
and
scas
jge
in
xor
cmpsb
push
test
sub
push
idiv
fcoml
jne
lret
adc
mov
data16
das
or
in
mov
bound
sub
push
orl
mov
jle
push
xchg
shl
dec
daa
out
sbb
test
inc
pop
mov
jg
push
jle
shrl
and
sbb
pop
add
inc
sbbl
pop
sbb
or
sbb
arpl
mov
sub
xchg
lods
inc
pop
cmpsl
out
addr16
inc
scas
in
inc
cmpsl
adc
xchg
sbb
add
jno
xchg
sub
push
nop
enter
pop
push
jbe
jnp
mov
sbb
inc
jbe
mov
lods
arpl
or
jbe
sbb
aaa
adcl
add
out
mov
pop
or
aad
testl
jmp
mov
xlat
sbb
adc
adc
scas
xchg
clc
and
add
xchg
dec
jns
jg
cmp
insb
sub
adc
sbb
mov
rorb
mov
add
push
les
push
ja
mov
dec
loopne
rclb
adc
fsubs
sahf
inc
out
jne
cltd
pop
cmp
test
adc
and
pop
inc
xchg
dec
xor
in
testb
and
mov
jmp
jp
sub
push
adc
stc
test
imul
xchg
pop
in
mov
pop
es
sub
int
mov
dec
movsl
movsb
ljmp
aaa
cld
sbb
add
addr16
xchg
pop
mov
pop
icebp
loopne
icebp
pushf
cmpsb
jns
es
inc
ss
inc
sub
cwtl
push
push
sub
jbe
jmp
sbb
int3
dec
mov
mov
jnp
cmp
mov
inc
fistps
aas
inc
fisubs
jmp
sub
adc
jl
xor
sub
mov
add
dec
stc
je
es
dec
mov
mov
cmp
jp
loope
stos
pop
adcb
test
jecxz
mov
insl
sbb
popa
mov
dec
pop
or
lcall
fwait
or
fldl
pop
mov
lret
inc
xchg
adc
popa
orb
out
aam
adc
mov
and
push
xchg
cmc
pop
push
loop
mov
mov
ret
stos
mov
or
outsl
popf
subl
cmp
sub
filds
mov
sub
fsubrp
xor
xchg
loopne
or
in
dec
fcompl
ret
stos
inc
mov
addr16
jge
ja
lods
cwtl
out
lret
push
pop
mov
inc
xor
in
movsb
test
sarb
in
cmp
imul
pop
sti
int
sub
out
mov
mov
sbbl
stos
or
add
fbstp
orl
lea
mov
imull
shll
aas
scas
jae
adc
cs
orl
sbb
into
outsb
inc
dec
or
int3
div
jne
push
test
mov
pop
dec
xor
inc
data16
mov
idivl
sub
aam
ficoms
mov
cmp
mov
xchg
push
lods
lahf
add
mov
ret
mov
imul
dec
jge
jmp
or
jbe
mov
scas
mov
sbb
out
adc
orl
int
add
and
fcmovne
test
imul
pop
ss
in
jmp
pop
lods
jns
xbegin
pop
cltd
mov
loopne
cmp
shll
loop
sub
xor
lds
lea
stos
inc
sbb
je
decl
pop
adc
mov
push
aad
push
jecxz
mov
arpl
jle
test
mov
popf
out
mov
jno
adc
sti
mov
adc
pop
ds
ljmp
fdiv
xchg
push
xchg
aad
inc
in
inc
ja
jg
push
mov
into
aas
push
xchg
pop
bnd
jg
cld
inc
cs
mov
cmp
testl
jo
xchg
adc
sti
adc
fs
std
dec
or
insb
xchg
mov
or
imul
dec
scas
iret
fistpll
inc
ss
jbe
xor
jmp
push
subl
fistps
sub
cmpsl
jbe
mov
inc
inc
shl
insl
in
hlt
jge
inc
push
mov
orl
stc
xchg
lock
outsb
pop
push
jp
mov
jne
data16
and
scas
add
xor
inc
inc
fistl
call
int
cld
pop
ret
cwtl
out
sub
shl
out
iret
mov
data16
mov
xlat
jno
cmp
dec
xor
dec
sarb
rclb
push
cmp
inc
and
or
adc
push
popf
dec
inc
ret
in
xchg
and
lock
lret
xor
jo
or
jmp
xlat
fs
sub
inc
mov
sbb
bound
cli
repnz
mov
aas
insb
xchg
sub
jbe
sbb
into
jle
sub
jle
cs
sbb
jnp
cmp
ficoml
sbb
sbb
repz
sbb
mov
jmp
movsl
lahf
cmpsl
mov
fisubs
add
aaa
xor
movsb
imul
xchg
orb
rorl
jl
and
pop
mov
hlt
popa
mov
dec
push
imul
aam
mov
cld
dec
lcall
xchg
arpl
arpl
sub
jnp
fildll
repnz
dec
xor
test
jb
cmc
mov
insl
mov
cmpsb
pop
not
sub
jge
popf
dec
sub
xor
push
jno
cmp
pop
sub
aaa
sbb
xchg
into
and
and
test
inc
das
mov
cmc
dec
in
cmp
cli
mov
jmp
sbb
push
adc
xchg
xchg
cltd
push
pop
repz
jg
mov
xor
push
xor
add
inc
or
add
sahf
mov
rolb
xchg
pusha
fstps
shl
imul
testb
cmp
sub
pushf
pusha
add
ficompl
pop
aaa
xor
insl
push
and
and
mov
imulb
lock
inc
xchg
fwait
xorl
aaa
xchg
inc
pop
pop
push
push
mov
pop
mov
mov
push
push
sbbb
lret
and
or
pop
mov
jecxz
add
sub
mov
lret
dec
jl
aad
ror
xchg
jmp
fisttps
add
jae
dec
pop
dec
fiaddl
xlat
call
mov
sahf
rcrl
scas
and
imul
add
mov
dec
adc
aaa
adc
inc
gs
mov
cmovo
xor
hlt
popa
lods
sbb
outsb
sbb
add
adc
test
jns
aam
and
mov
sahf
std
dec
xlat
movsb
loope
aas
mov
push
mov
in
fcmovnbe
lods
mov
fwait
pop
call
and
xchg
push
xchg
adc
cmp
sahf
ds
fcmovnbe
test
pop
aas
or
fdivl
jecxz
jno
push
pop
xor
nop
inc
mov
add
mov
and
dec
add
std
inc
jne
or
push
pop
and
and
xorb
xchg
push
mov
rcr
xor
inc
jbe
push
or
aam
jne
jae
jbe
test
sub
xchg
and
xor
or
push
fwait
inc
jnp
stos
and
in
das
shlb
in
jbe
cmp
pop
inc
fs
cmpsl
mov
sub
ja
push
inc
dec
gs
adc
pop
sarb
inc
int3
mov
stc
mov
scas
sahf
shl
sbbl
sbb
sbb
and
adc
add
into
pop
mov
and
jo
mov
lods
push
add
test
add
adc
data16
xchg
xor
ss
xlat
pop
stc
mov
imul
mov
das
lods
pop
lods
jl
mov
sub
or
adc
mov
xor
ds
out
repz
jnp
xchg
in
aaa
sarl
mov
adc
std
add
xor
fxch
and
push
imul
jno
xlat
add
xor
sub
insl
sub
js
push
lret
lods
in
ss
test
fsubrl
test
insl
clc
sub
repnz
push
sbb
lret
cli
loop
cmp
jne
or
enter
pop
jecxz
dec
cwtl
cmp
push
fidivl
dec
and
ficoml
sahf
ds
lea
and
or
fcompl
dec
dec
scas
imul
xorl
hlt
fs
cmp
push
mov
sub
xchg
mov
out
sbb
mov
iret
outsl
lahf
sbb
mov
or
dec
xchg
cmp
nop
cli
adc
inc
xor
into
insl
stc
inc
xlat
push
nop
push
fadd
inc
lahf
jg
popa
xor
xchg
or
push
pusha
jecxz
aaa
mov
jmp
sub
pop
out
adc
and
push
stos
add
inc
inc
scas
adc
mov
ror
insl
cwtl
out
shrl
adc
lock
repz
in
mov
add
or
andl
xchg
and
sbb
movsl
jl
imul
test
pushf
cmpsb
mov
sbb
daa
add
cmp
fcmovne
imul
int3
stc
nop
in
int
cwtl
adc
out
addr16
pop
mov
push
xor
andb
and
push
pop
loopne
orl
mov
imul
xchg
inc
or
pusha
jo
loopne
int
xor
mov
cmpsb
popa
mov
int
repz
or
push
test
jnp
repnz
mov
jnp
popf
aam
and
lods
adc
xchg
int
mov
jge
popa
pop
shll
lret
cmp
cmp
outsl
scas
addr16
repnz
sti
pop
popa
js
imul
mov
mov
rclb
push
hlt
sbb
imul
std
push
lds
aas
jb
cltd
mov
lods
lcall
sbb
stos
jo
pop
mov
data16
xchg
push
cmp
test
js
jmp
mov
les
fnstsw
mov
dec
out
inc
mov
mov
adc
or
mov
add
out
mov
rcll
lock
lcall
adc
push
cli
neg
cmp
jbe
mov
adc
dec
cld
js
test
sub
cwtl
xchg
loopne
pop
sub
ja
xor
popa
jmp
enter
shlb
fistpl
int3
or
icebp
xor
dec
sti
xor
std
sahf
adc
movsb
decb
push
dec
aam
sub
and
mov
or
pop
jb
add
jge
stos
or
int3
or
jne
jl
mov
push
stos
or
popf
push
lea
sbb
adcl
popf
cmpsl
sub
jno
dec
lcall
insb
rcrl
les
jle
pop
sub
inc
clc
scas
dec
cmp
sub
mov
mov
fstpt
lahf
test
aaa
bound
adc
lret
lcall
xchg
fimull
dec
loopne
push
aam
adc
rorl
cmp
repnz
sti
fwait
cmp
lcall
xchg
mov
test
test
push
testl
daa
mov
jge
lods
mov
rclb
pop
scas
cld
lock
mov
ret
iret
lea
jb
in
jle
cmpl
fnstcw
jp
mov
ja
push
js
lds
jae
das
pop
fildl
out
call
inc
call
faddl
das
popa
add
xchg
mov
test
cmpsl
pop
loope
sti
int3
sub
mov
and
in
push
in
jl
push
testl
out
xor
shlb
xlat
xor
imulb
mov
icebp
jl
sbb
pop
jg
test
outsb
inc
ret
and
cmp
sbb
mov
or
pop
jne
and
sbb
inc
and
incb
int3
sti
cmp
cmp
or
das
dec
inc
insl
fcoml
stos
lret
fidivrl
aad
mov
mov
mov
cld
jg
and
ds
mov
pop
push
adc
inc
bound
adc
push
test
sbb
jg
push
pop
push
inc
mov
and
insl
push
adc
xchg
daa
test
push
testl
mull
cwtl
ret
scas
outsl
jecxz
mov
iret
movsl
fisubs
into
cmp
bound
jb
fistpl
pop
ret
inc
cmp
xor
mov
ret
jae
sub
pop
push
jbe
in
jne,pt
mov
addr16
lea
pushf
popf
pusha
mov
je
mov
and
mov
loopne
push
cli
ljmp
adc
fucom
push
ret
push
sbb
in
sbb
push
insl
rorb
aad
mov
into
sub
cwtl
inc
and
iret
mov
push
sldt
shl
mulb
ds
sti
xor
xchg
add
add
sub
aad
add
test
adc
xchg
shl
into
jge
jge
inc
arpl
shlb
mov
addr16
mov
xchg
adc
in
push
jno
xor
das
lcall
imul
imul
out
adcl
xchg
adc
lret
test
add
pop
pop
sub
arpl
push
adc
jp
sub
sub
dec
lret
dec
inc
rolb
ja
xchg
dec
jge
aas
cmp
mov
cmp
test
jo
xchg
mov
cmpsb
iret
adc
shl
xor
in
cmpsb
es
imul
ror
xchg
es
outsb
jg
pop
lret
arpl
lea
scas
xchg
lahf
xlat
cwtl
jb
sub
imul
pop
dec
icebp
dec
aam
je
out
cmpsb
push
fbld
insb
inc
mov
fwait
pusha
sub
sbb
in
push
add
daa
mov
daa
inc
cld
xchg
and
xchg
mov
pop
jg
jb
xchg
xchg
xchg
cld
rcrb
mov
xlat
and
jle
das
lret
push
lret
daa
mov
scas
aam
mov
pop
in
fistpl
inc
or
aas
iret
dec
out
xchg
push
add
insl
xor
or
sahf
loop
nop
scas
jbe
add
push
test
adc
testl
dec
test
pushf
mov
or
inc
sbb
cld
jnp
adc
pop
hlt
lock
pop
xor
lds
add
lock
xor
push
popf
mov
pop
in
in
leave
sbb
dec
shrb
mov
sbb
pusha
and
repz
pop
orb
sbb
clc
cs
loope
das
daa
scas
andb
cli
cbtw
in
int
pop
push
sub
movsb
mov
or
nop
lret
jnp
push
ret
cmp
xor
imul
push
stos
fidivrs
adc
cli
jae
xlat
cs
or
sbb
arpl
ljmp
inc
iret
sbbb
add
or
inc
scas
push
add
mov
inc
test
add
sub
mov
jecxz
xor
sbb
add
or
test
out
cmp
xchg
sbb
and
push
xchg
mov
js
outsl
mov
bound
fsubp
iret
mov
fdivl
sub
mov
popf
xchg
loopne
orl
push
jp
xchg
mov
ret
subb
cmpsl
xchg
push
lods
lods
lret
mov
xchg
xor
cmp
mov
imul
jbe
fwait
mov
icebp
lea
sub
pushf
mov
jbe
rcr
sbb
call
in
aad
or
pop
scas
aad
aaa
inc
ret
inc
dec
adc
adc
popf
loopne
shll
mov
in
nop
push
pop
adc
jno
sub
into
lcall
push
jp
mov
jge
xchg
cmp
orl
mov
scas
js
jp
outsb
movsl
xor
adc
jb
sarb
nop
push
pop
sub
shlb
xor
ja
mov
loop
and
mov
push
testb
and
push
or
lret
stos
xchg
iret
es
xlat
push
pop
pop
fwait
leave
inc
xor
mov
dec
xor
adc
push
por
cwtl
divb
push
jp
dec
nop
inc
push
sti
out
cli
dec
cmpl
xchg
sub
sub
lcall
rclb
cmpb
jp
pop
loopne
and
jmp
pop
cltd
push
add
bound
push
jns,pn
xor
sbb
stos
lea
or
push
stc
icebp
movsl
int
inc
jg
and
mov
push
mov
movsb
outsb
cmp
sbb
stos
push
mov
xor
cld
xor
je
sti
cmp
cmc
or
movsb
sub
inc
clc
inc
imul
sbbb
call
fwait
ud2
icebp
dec
mov
aam
xchg
add
pop
loopne
aam
sub
dec
mov
js
pop
addr16
mov
rcll
mov
rorb
add
pop
xor
bound
cmp
test
pop
mov
pop
push
mov
fbstp
push
push
ljmp
pop
loopne
ljmp
pop
stc
sub
cwtl
jle
mov
bound
loopne
rcll
xchg
mov
xor
outsl
dec
test
ret
adc
lea
xor
mov
stos
in
imul
mov
sub
add
jno
stos
rol
push
popf
pop
jne
movsl
xor
add
aam
inc
insb
out
insb
nop
test
add
fs
fstps
clc
outsl
jne
adc
bnd
cmp
pop
add
icebp
jae
pop
or
mov
add
or
xchg
inc
mov
bound
fwait
setl
stc
jno
sub
mov
sti
out
pop
les
repz
push
xchg
cmp
clc
stos
mov
aas
loopne
cmp
mov
fisttpll
cmp
cmpsb
testb
pushf
repnz
sbbl
cmp
jle
mov
repz
sub
or
pop
jae
insb
sub
jnp
iret
faddl
dec
jge
leave
das
push
push
mov
and
sbb
sub
lret
add
loope
movl
sub
inc
lds
and
iret
and
sbb
out
fsubrs
loop
scas
or
ss
push
add
movsb
or
dec
shll
addb
sahf
fcoml
aas
pop
out
mov
jns
lret
cld
aad
mov
cwtl
rcrl
pushf
xchg
out
stos
inc
lret
fdivrs
or
add
push
mov
mov
loop
jbe
dec
sbb
adc
mov
dec
repz
xchg
fs
jp
xor
loopne
mov
xlat
push
push
sbb
leave
in
mov
inc
leave
and
jno
sarl
mov
push
es
lds
or
mov
sub
daa
lds
cmc
mov
cmp
inc
loop
dec
imul
mov
cmp
in
mov
cld
lock
dec
loope
cmp
sub
add
in
pop
shll
stos
repnz
movl
mov
nop
push
cmpsb
xlat
addr16
popf
nop
mov
adc
add
lret
in
adc
push
push
and
xchg
popf
fs
and
inc
push
cmpsl
les
aaa
inc
mov
pmaddwd
ret
push
and
pop
sbb
inc
aas
push
mov
xor
push
push
or
adcb
xor
call
std
imul
sbb
pushf
jmp
sarb
outsb
fmuls
xor
push
ret
lods
fsincos
insl
in
test
push
cmp
dec
xlat
mov
inc
paddd
xchg
jg
sub
push
adc
pusha
push
lret
and
scas
das
fs
lock
loop
mov
lods
stos
cmc
xchg
cmp
je
fcoml
outsl
lea
sbb
jo
mov
or
mov
adc
sub
adc
mov
pop
packssdw
std
or
mov
outsb
aas
test
lds
xor
cwtl
xor
fsubrl
mov
sbb
jo
sti
nop
pop
adc
test
mov
cmp
xchg
aam
add
and
jmp
or
js
jp
xchg
mov
xor
iret
xor
movb
dec
add
mov
inc
adc
pop
or
or
nop
jb
add
xor
push
inc
push
push
mov
adc
test
cmpsl
arpl
movsb
gs
push
ljmp
int
sub
xchg
dec
cld
fsubrl
pusha
mov
or
pop
mov
int3
es
icebp
inc
cmp
xsave
push
mov
cmpsb
aad
sbb
pop
out
or
faddl
pop
push
cli
xor
xlat
sbb
shl
xlat
mov
lods
or
sub
arpl
add
cmp
cmp
ljmp
in
out
jne
les
pop
pop
or
shrb
mov
movsb
adc
inc
cmpsb
cwtl
fiaddl
inc
xor
js
and
jno
jge
inc
xor
rolb
int3
ficomps
je
insb
movsb
dec
repz
or
jne
lret
push
fwait
in
pop
out
inc
cmp
and
rolb
sti
mov
into
mov
in
testb
ficoml
mov
xchg
jge
lret
popa
jnp
xor
and
repnz
gs
fsts
aaa
dec
ljmp
push
scas
xorb
or
xchg
pushf
cmpsb
pop
mov
shlb
pop
push
mov
jecxz,pn
mov
ss
std
daa
xor
and
xchg
mov
sbb
jge
jnp
and
jp
int
xchg
in
sti
mov
adc
in
mov
pop
std
ds
aad
jmp
push
movsl
xchg
test
inc
and
in
mov
loope
leave
and
js
pop
cmp
jmp
fistpll
les
outsb
inc
xor
fwait
mov
inc
xchg
in
adc
loopne
jmp
rcrl
inc
xor
mov
or
dec
jecxz
fwait
outsl
xchg
pushf
inc
xchg
js
mov
xchg
sbb
fucomp
bound
lahf
fstl
in
and
adc
fs
and
sub
aam
pop
sahf
iret
push
fsubrs
xor
adc
push
scas
icebp
or
iret
es
add
ret
fcoms
pop
inc
cmpsb
mov
fsin
pop
into
mov
push
pop
js
jmp
out
leave
dec
push
nop
cmp
inc
std
jb
cli
frstor
mov
insb
lods
pop
imul
popf
jae
popf
xchg
bound
popf
lock
addb
dec
xor
test
add
mov
adc
mov
inc
fisubrs
and
stos
std
lahf
xor
pop
pop
dec
mov
js
decl
enter
dec
adc
inc
xor
push
dec
mov
xchg
mov
orb
stos
and
mov
imul
movsb
adc
mov
jge
je
mov
inc
adc
mov
inc
ret
lods
es
lret
dec
mov
mov
cmp
test
fiadds
sub
lret
pop
dec
test
inc
insl
xchg
subl
inc
bnd
daa
mov
ficompl
daa
add
push
int3
mov
cmp
sti
xor
scas
sahf
dec
addl
lret
dec
out
push
sbb
jmp
xchg
or
jecxz
mov
jne
and
cmp
icebp
ss
sub
jbe
cltd
fists
jmp
lods
dec
mov
and
leave
push
leave
and
dec
data16
xchg
xchg
mov
imul
adc
mov
adc
scas
test
add
jne
hlt
jmp
sbb
add
mov
mov
and
mov
repz
and
sub
loopne
inc
push
xor
loope
lahf
push
call
mov
xorb
jge
sbb
jl
enter
inc
hlt
iret
mov
cs
cmp
ja
xor
inc
push
pushf
pushf
push
add
mov
add
fs
or
es
cmp
add
mov
xchg
cli
mov
enter
mov
sarb
shll
lret
pop
sahf
cs
cmp
adc
xor
mov
leave
fsub
pusha
push
dec
jbe
jae
xchg
int3
cmp
pop
arpl
mov
or
fdivrp
std
mov
fcmovne
frstor
jge
aad
pop
lock
sbb
push
adc
in
sarl
push
out
rorl
push
pushl
sbb
lret
mov
inc
out
arpl
mull
mov
pop
inc
cltd
fs
mov
lock
mov
mov
and
push
fwait
stos
inc
mov
ret
sti
insb
cmp
add
popf
inc
mov
sbb
pop
arpl
mov
cltd
jecxz
mov
jmp
xchg
cmpsl
jecxz
outsb
stos
cmc
in
cmc
mov
rcrl
rorl
out
mov
fs
sub
xor
mov
jge
fidivl
and
aaa
push
cmpsb
pusha
and
cmpsl
in
jp
cmpsb
movsb
and
jno
outsb
cmpsb
xor
jmp
repz
and
insl
pushf
jl
jge,pt
fnsave
arpl
cmc
cmp
adc
dec
ret
add
ja
xchg
mov
pop
mov
into
int3
cmp
ljmp
fisubrs
shlb
lcall
rcr
outsl
xor
fwait
mov
dec
cmpsb
mov
mov
in
fbstp
push
cld
fs
cmp
adc
fcmovne
xchg
pandn
int3
lock
iret
aam
lahf
sub
fildll
sarl
mov
ds
int3
sub
mov
dec
push
xlat
stos
mov
sbb
add
loope
adc
cmp
cmpsl
test
fistl
outsl
sbb
or
loop
lahf
mov
lods
xor
loope
das
in
pop
lods
xor
lret
arpl
loop
movsb
push
fldpi
popf
add
mov
ja
out
out
sbb
ds
arpl
inc
cmpsb
cmc
cmp
leave
es
sbb
fisttpl
sbb
fisttpl
or
lahf
pop
pushf
daa
lret
jne
pop
xor
sbb
inc
cltd
hlt
jmp
and
test
ss
xchg
push
popf
outsl
cmc
movsb
cmpl
loop
pop
dec
mov
inc
jl
jmp
cmp
xchg
mov
enter
outsl
dec
mov
pop
pop
sub
test
mov
insb
clc
imul
addr16
fisubl
jle
or
sub
sbb
mov
jns
push
inc
in
stos
paddd
sbb
xchg
push
xor
aad
shlb
sbbb
xlat
addr16
ret
dec
outsl
loope
insl
mov
cmpsb
das
popf
adc
mov
in
lock
mov
add
test
orb
arpl
xchg
push
sub
xor
daa
mov
push
fs
sbbl
add
fimuls
nop
mov
std
xor
jecxz
dec
arpl
mov
mov
push
or
int
mov
mov
jno
cmp
add
out
test
pusha
int
mull
dec
mov
sbb
cli
fs
jmp
stc
punpckhwd
mov
out
and
das
idivb
mov
mov
add
lret
pop
cmp
adc
aas
into
inc
mov
and
jno
add
push
sbbl
in
leave
inc
pop
outsb
outsb
movsl
adc
cs
and
jg
inc
add
push
mov
jae
mov
in
push
ljmp
inc
clc
testl
add
int3
cli
mov
fcomps
dec
insb
push
mov
outsl
repnz
xor
in
sti
and
inc
mov
xor
pusha
out
mov
mov
pop
xor
jbe
rorb
or
inc
inc
adc
nop
cmpsb
lret
push
sub
lea
sub
sub
xchg
lods
cmpsb
dec
xchg
movsl
xor
push
loop
cmpsl
mov
fstps
pop
push
int3
ja
fisttps
xchg
les
xchg
scas
jno
rcrb
jo
iret
out
pusha
jae
xchg
dec
clc
fcoms
sub
ret
jge
ja
sub
lods
sbb
jns
dec
cmp
cli
shll
movsw
pop
xchg
cmpsb
push
xchg
xchg
cmp
iret
jb
fninit
out
adc
loop
ret
into
sbb
out
enter
aas
daa
dec
add
sbb
imul
or
mov
pop
pop
aaa
sbb
rcll
lds
cs
jnp
xor
and
negl
rcrb
push
out
inc
xorb
jmp
shll
cmp
into
out
mov
xchg
adc
mov
inc
data16
sbb
icebp
mov
lcall
fcmovbe
fldl
ret
sbb
mov
ja
ret
xchg
ret
scas
jl
bound
cli
inc
push
and
and
adc
and
out
aaa
stc
jecxz
fistl
or
shr
sub
jnp
cmp
rorb
and
mov
lds
movsb
stos
pushf
add
push
and
or
lods
adcl
je
shl
xchg
cmpsl
pop
and
shrl
lea
jp
roll
andb
xor
std
xor
rorl
push
mov
nop
fdiv
repnz
popa
stc
test
into
jns
daa
mov
or
push
mov
stc
mov
xlat
jle
hlt
imulb
mov
push
dec
imul
outsb
lods
ret
lcall
call
xchg
jb
inc
fistpl
jmp
testb
sub
mov
jb
pusha
jno
mov
stc
xchg
call
pushf
dec
je
jnp
xor
sti
add
cmp
xor
cmp
imul
push
sub
ret
xchg
mov
test
xlat
cmpsl
in
aas
mov
mov
mov
pusha
push
jg
movlhps
inc
xchg
inc
rcll
je
mov
dec
shrb
mov
push
clc
mov
xor
pop
xorb
fwait
bound
paddsw
dec
addl
sbb
out
dec
xchg
data16
repnz
add
loop
xlat
insl
insl
shrl
and
inc
mov
xchg
xorl
add
stos
mov
sbb
movsb
jl
or
fisubrl
sub
xchg
inc
cwtl
dec
cmc
push
aas
mov
into
ret
adc
fdivs
fadd
jmp
jb
das
cltd
js
nop
sarb
inc
and
cmp
pushl
arpl
and
jmp
lods
stos
sub
lcall
fs
test
jge
icebp
loope
pop
jecxz
inc
inc
pop
xchg
mov
adc
insb
cli
push
shr
jo
jbe
call
aas
outsl
aas
dec
add
test
ds
add
or
add
xor
mov
cmp
lahf
in
mov
in
cmc
add
leave
das
xchg
fdivl
or
mov
dec
push
sarb
or
loopne
fsubrp
mov
add
cmpsl
mov
out
cmp
fildl
and
xchg
imul
fsubr
xlat
aad
lcall
pop
lret
lock
das
xchg
or
pop
mov
out
pushf
lock
int
dec
add
stos
insl
inc
xlat
sub
insb
notb
lock
or
addl
sbb
std
fsubp
inc
stos
push
insb
inc
cmc
jp
aas
popa
inc
ja
jb
movsb
popf
mov
pop
cmp
mov
out
and
repnz
scas
cwtl
outsl
sti
mov
aam
pop
enter
repnz
in
fisttpll
jns
les
sbb
fisttps
insb
or
pushf
outsb
arpl
ret
and
dec
jge
adc
and
mov
jl
pop
out
sub
pop
sbb
adc
cmpsb
cmp
pop
pop
icebp
xlat
or
push
mov
xchg
push
inc
leave
dec
cltd
and
insb
rol
push
sub
shl
inc
adc
sahf
pop
sub
daa
adc
lock
adc
sub
mov
cmp
lcall
xchg
sti
call
ljmp
fsubl
xchg
jecxz
mov
sub
in
icebp
loop
pop
cmpsl
int
sbbb
cmp
xor
mov
pop
fcmovne
mov
or
pop
int3
leave
loop
jle
pop
cmc
lods
js
mov
push
pop
or
movsl
sub
into
into
ss
mov
pop
pop
sub
fsub
and
cld
notl
add
out
dec
mov
arpl
repnz
dec
sbb
adc
enter
add
into
in
int3
fcoms
xor
popaw
jl
into
inc
mov
mov
aad
loop
push
add
push
mov
mov
dec
or
outsl
in
xchg
aas
and
faddl
sub
lcall
lret
push
adc
mov
jl
jbe
into
xor
xchg
enter
testl
mov
mov
adc
add
mov
add
test
push
test
in
fldenv
into
mov
inc
inc
scas
and
sbb
aaa
hlt
mov
inc
cmp
dec
push
dec
cmpsl
pop
lea
ud1
xor
loopne
sbb
add
add
shl
xor
adc
shll
cld
loopne
jno
pop
xor
lret
popf
push
scas
jle
subb
adc
icebp
addr16
xchg
lcall
cmp
enter
push
fwait
sbb
cli
mov
cmpl
aas
imul
sub
ficompl
sub
add
sbb
pop
xchg
add
lret
push
scas
int
aaa
negb
mov
ljmp
sbbb
shlb
xor
pop
mov
incl
jb
fidivs
inc
cmc
add
std
mov
jge
rcr
push
pop
mov
mov
mov
ret
out
ss
mov
mov
and
jns
cmp
sub
push
popf
lcall
xchg
xor
fcoml
xor
iret
ds
adcb
mov
pop
cli
adc
aad
stos
mov
jl
std
fldenv
dec
mov
cmpsb
and
mov
mov
inc
pushf
data16
adc
sbb
mov
fs
idivb
imul
clc
js
loope
inc
ds
call
xchg
es
add
ds
fdiv
es
mov
xchg
cli
lods
nop
cmc
mov
push
jb
jg
into
dec
sub
lahf
xor
push
pop
addr16
lret
shll
cmovo
cmpsl
mov
test
cmp
ficoms
inc
pop
andb
push
aad
push
pusha
nop
push
add
test
push
inc
jl
dec
std
inc
jbe
in
cmpsb
clc
adc
icebp
iret
jle
mov
pop
out
les
rol
cmp
and
lret
loop
leave
dec
push
add
shlb
test
ror
roll
pop
jmp
xchg
lahf
ss
mov
int
mov
jecxz
mov
sbb
xchg
jae
lahf
and
outsb
or
hlt
sbb
cld
cmpsb
pop
sar
fwait
cmp
adc
stc
iret
fistpl
adc
movsl
aam
nop
jmp
call
mov
push
jecxz
in
cmp
imul
subb
sub
movsb
mov
lret
mov
ljmp
out
and
addl
mov
cmpl
ljmp
mov
cmp
push
lret
mov
inc
inc
add
lret
pop
ret
outsb
add
dec
ret
in
cmpsb
loop
push
cld
adc
mov
insb
lcall
hlt
mov
adc
test
cld
leave
sub
sub
ss
mov
lret
and
lea
repnz
xor
mov
adc
mov
sub
scas
mov
pop
fs
lods
push
mov
push
lret
rolb
test
cld
dec
stc
xorl
das
sbb
test
inc
dec
pop
loopne
inc
mov
fwait
xchg
fnstenv
jne
iret
mov
push
jp
push
jecxz
add
fisubrs
mov
jmp
jns
aam
stos
adc
push
arpl
pop
into
cmp
xor
orl
idivb
ljmp
shl
adc
in
xor
ret
add
fnstsw
cmp
xor
rcrl
fs
push
add
mov
stos
insb
pop
xchg
pop
push
in
sahf
lret
adc
lods
mov
cmp
jge
fists
sti
cmpl
fwait
in
push
fwait
sub
push
pop
lahf
loopw
xchg
jb
pop
add
in
mov
mov
out
add
test
inc
arpl
int3
jg
pushl
loop
and
xorb
cmp
xchg
mov
lock
xchg
inc
stos
or
xor
mov
ja
push
imul
ret
mov
adc
dec
outsl
jl
imul
loopne
cli
call
pop
mov
add
mov
sbb
stos
subb
pop
dec
xor
jge
jnp
mov
jp
fdivl
pop
adc
pop
ljmp
outsl
mov
jle
stos
push
leave
cmp
not
fcmovb
rol
xchg
sbb
test
push
test
mov
cs
xorps
test
pop
outsl
fimuls
pop
add
js
int3
es
out
cmp
dec
lods
sbb
repz
mov
xchg
mov
cvtps2pd
pop
outsl
stos
add
push
rcrl
adcb
leave
add
testl
movsl
pop
jno
xchg
lods
pop
sbb
push
lods
mov
push
push
das
jp
mov
mov
cmpsb
add
xor
xchg
call
outsb
xor
mov
mov
inc
sbb
push
cmp
cld
or
mov
mov
pop
xlat
loop
push
inc
imul
pop
cmp
cmp
inc
testb
es
ss
adc
jb
in
pop
js
int
ss
sub
pop
push
xlat
cmpsl
mov
popa
inc
dec
sbb
pop
insb
sahf
daa
cwtl
pop
mov
stos
loope
xchg
pop
pop
pop
sbb
jae
in
xchg
dec
pop
mov
push
ret
insl
imul
mov
out
dec
rol
cmpsl
inc
mov
push
lret
movsl
jae
inc
das
ret
xchg
jg
or
jle
pop
fcmovnbe
jg
cs
out
push
je
sub
rcr
inc
jmp
jmp
cmp
stos
add
sbb
dec
lds
inc
dec
inc
daa
ja
lods
or
pop
fiaddl
or
jns
push
lds
inc
push
lahf
cmp
fwait
add
ljmp
push
pop
aaa
mov
push
push
pusha
pop
mov
xor
pop
lods
outsl
insl
xchg
fbld
shrb
xchg
xchg
or
shlb
ret
in
nop
lds
aad
xchg
and
xchg
push
xor
cmpsl
stos
cmpsl
leave
adc
fwait
insl
subb
je
pushf
in
loop
lahf
ret
fadds
dec
or
push
and
add
lods
mov
cltd
push
int
jbe
or
xchg
push
outsb
sub
ret
or
in
into
bound
or
pop
xchg
sbb
xor
xchg
mov
jb
into
ret
cwtl
sub
pop
cli
test
ds
inc
ss
mov
in
call
in
sub
xchg
out
out
dec
mov
jge
cli
pop
adc
xchg
test
xor
cmp
adc
sbb
xor
or
xor
cmp
push
fwait
mov
cmp
xchg
in
or
cmp
adc
mov
repnz
cmp
popf
jecxz
int
fcmovbe
xchg
mov
or
mov
jnp
clc
sbb
jne
in
push
test
xchg
mov
sbb
cmc
xchg
mov
call
cli
jae
mov
loop
xlat
shll
daa
mov
adc
pop
xlat
add
xchg
sbb
lock
insl
mov
jge
jecxz
sbb
mov
xchg
idivb
and
pop
add
loope
ret
mov
xchg
pop
mov
fstpt
pop
mov
jl
pop
fs
push
out
out
shl
sub
aam
mov
dec
fwait
or
cltd
mov
and
cmc
adc
xchg
insb
cmp
imul
movsb
xchg
mov
cmp
repz
std
shrl
adc
lds
fucomi
rolb
or
movsl
jle
leave
lods
adc
mov
jge
icebp
mov
lods
es
pop
lods
popf
cwtl
vpavgw
inc
jl
dec
mov
enter
mov
xchg
imul
sti
sarl
sahf
orl
push
test
clc
sub
pop
ljmp
out
add
pop
inc
pop
int3
fs
push
mov
inc
xor
inc
fwait
scas
mov
cmp
adc
and
pop
adc
addl
es
fistps
sbb
mov
dec
pop
insb
add
adc
dec
push
add
scas
push
out
in
loope
es
rorl
rorb
loope
mov
addb
fwait
mov
cmp
repnz
mov
aad
mov
inc
enter
and
sbb
mov
addl
loop
lret
mov
fsub
pop
jmp
das
sub
inc
dec
push
lahf
cmc
dec
jecxz
push
push
mov
mov
mov
sub
ret
add
pop
les
xor
fisttpl
jl
aas
popa
mov
pop
and
mov
pusha
xor
pop
cmp
xor
or
inc
inc
fucomi
xor
pop
iret
into
repz
call
loop
cmp
shl
cmp
xlat
push
xlat
xchg
add
cmc
ret
repz
sbb
inc
mov
push
inc
pop
mov
lret
xchg
out
aas
ret
shl
cltd
dec
test
lods
xchg
out
out
mov
out
inc
mov
or
add
xlat
push
and
fdivr
push
push
andps
lods
jo
xor
mov
iret
lcall
pop
popa
dec
mov
icebp
fimull
call
je
outsl
into
cmp
jecxz
sbb
xor
icebp
jns
or
ss
or
push
or
or
in
stos
mov
mov
into
xchg
mov
gs
add
jae
sbbl
xchg
jecxz
stos
or
inc
fistps
and
adcb
out
jo
mov
xchg
iret
pmaddwd
sub
aad
lds
lock
and
mov
jns
test
xchg
fldenv
cld
xlat
divps
int3
stos
push
mov
lods
mov
lcall
out
dec
inc
adc
imul
outsl
data16
loope
pop
add
icebp
xor
scas
std
nop
popf
push
jno
cmpsb
or
push
pop
adc
test
cwtl
mov
stos
in
in
fiadds
push
or
loopne
out
rorb
push
pop
jno
adc
call
cmp
cmc
xor
out
pop
movsl
sbb
addl
jg
fldt
dec
aad
mov
cmp
sbb
push
xchg
stos
mov
cmp
and
jae
bound
push
cs
daa
stos
or
mov
shl
daa
pop
dec
cli
pop
jno
dec
jae
cli
shll
add
push
pop
stc
inc
and
mov
mov
inc
mull
sbb
stc
mov
sub
xchg
int3
inc
shlb
shlb
clc
mov
popa
sbb
sti
inc
aaa
add
pusha
cmpsb
mov
negb
stos
movsb
ret
test
mov
and
xor
and
mov
adc
xchg
dec
lret
scas
lcall
dec
mov
test
dec
xor
cmp
mov
bound
mov
xchg
add
sarl
xor
test
in
lret
lret
push
mov
push
in
sbb
nop
or
inc
mov
dec
movsl
and
jmp
movsb
push
lcall
jne
popf
stos
adc
aad
fsubp
jnp
scas
or
test
pop
mov
ret
aam
loopne
flds
xchg
cwtl
add
lods
mov
cmp
dec
jnp
adc
xchg
or
xchg
push
in
dec
out
out
daa
cmp
addr16
mov
iret
outsl
lock
fisttps
bound
mov
inc
or
push
imul
aas
add
ficoms
xchg
nop
adc
divb
cmp
push
jge
and
aas
incl
in
int
add
cltd
repz
sbb
push
mov
fisttps
mov
hlt
push
sbb
testl
add
inc
jl
xchg
mov
stos
jmp
idivl
mov
mov
xor
or
xchg
arpl
mov
push
or
add
fisttpl
call
rcrl
push
mov
das
cmp
mov
cmp
repz
aad
mov
xchg
lret
aad
jg
ds
arpl
mov
dec
jl
in
xor
xor
int
out
outsb
and
imul
inc
add
in
mov
rcr
jle
mov
mov
rorb
fldt
sahf
sbb
xchg
les
mov
fsubrl
push
push
imul
testl
bound
enter
lock
xchg
scas
sbb
add
adc
inc
stc
cmpsb
in
js
js
mov
rcrb
insl
sub
cmp
sub
add
mov
or
mov
adc
popf
pusha
lret
les
jmp
int3
xchg
push
sbb
or
sub
pusha
pop
imul
jae
inc
mov
mov
sarl
push
add
jmp
or
inc
in
sbb
pusha
sbb
pop
add
fs
add
pusha
adc
xchg
dec
in
aas
push
pop
and
sbb
dec
jo
push
bound
xor
sti
xchg
imul
mov
inc
jbe
shr
lret
lret
js
ds
jecxz
adc
xchg
or
iret
ds
sbb
cmp
xlat
xchg
pop
and
cmpsb
mov
stc
aaa
pop
arpl
sti
pop
xor
loopne
aaa
xchg
fnsave
fbstp
sbb
sub
adc
inc
stc
xchg
mov
int3
sub
sbb
or
or
test
mov
cli
mov
test
xor
in
imul
movsl
jl
xchg
lods
xchg
mov
test
push
dec
lods
dec
bound
push
std
or
jge
stos
mov
mov
dec
icebp
dec
scas
mov
pcmpgtd
jecxz
repz
sbb
xor
addr16
mov
test
sub
xchg
insb
cltd
lods
xchg
push
mov
mov
sarl
mov
mov
in
jge
mov
jecxz
jp
rol
dec
aas
subb
aas
mov
repnz
ljmp
adc
cmp
lock
shrl
xor
mov
adc
xor
insb
rcrb
jmp
inc
push
mov
push
popa
rcrb
mov
ds
mov
dec
mov
sbb
push
test
jnp
outsl
gs
lea
pop
loopne
mov
dec
xor
mov
pop
dec
out
push
jbe
loop
in
pop
inc
xchg
sub
lock
push
and
xchg
push
cld
dec
fidivs
mov
mov
ds
cltd
pushf
cwtl
int3
jb
pop
push
in
mov
mov
jg
cmp
mov
sar
sbb
mov
cmc
cmp
mov
push
test
push
hlt
mulb
sub
push
push
mov
arpl
dec
into
xchg
aas
xchg
popa
sub
imul
ror
inc
and
cltd
rorl
clc
insb
sahf
jae
adc
mov
xor
rol
call
sbb
arpl
pop
dec
sub
lock
mov
cmp
xor
pushf
inc
jmp
add
fnstsw
pushf
cli
test
or
push
gs
repz
xlat
movsl
cwtl
out
sbb
in
push
sbb
nop
dec
dec
test
cmc
pop
and
pop
dec
sbbl
or
add
mov
pop
ret
cs
test
ljmp
aas
or
xchg
mov
loopne
or
push
dec
mov
sbb
cmpsb
mov
add
sbbb
fisubrl
pop
sbb
xor
fwait
mov
mov
or
sbb
jae
in
lea
scas
into
aaa
mov
lds
and
idivb
cmp
xchg
cmc
cmpsl
xchg
int
pop
and
aas
ret
rcrl
inc
mov
push
pop
push
xchg
xchg
dec
xchg
and
add
shlb
or
cmp
leave
pop
mulb
fsubr
jns
mov
dec
inc
and
adc
xchg
inc
push
ljmp
data16
test
push
enter
push
cmp
mov
and
lret
loop
sub
fimuls
ret
cld
out
push
lods
fistl
or
mov
fmuls
fistl
push
adc
add
mov
xchg
cmp
inc
push
jmp
add
jae
cli
test
adc
jne
mov
mov
mov
sti
mov
mov
in
rclb
mov
rolb
dec
jae
cmpsl
pop
adc
cmp
andb
jge
adc
xor
lods
push
leavew
mov
gs
cmpl
sbb
push
add
mov
mov
lahf
jmp
sub
or
pop
sarl
insl
cmp
push
push
leave
lock
mov
mov
test
nop
nop
push
jne
test
mov
lret
cmp
in
jecxz
stos
notl
sbb
sub
std
cmpsl
rclb
cmp
fidivrl
mull
addr16
jnp
out
cltd
cmp
jo
call
loop
add
pushf
or
pushf
and
cmpsb
push
sbb
hlt
dec
flds
jae
push
loop
mov
cmp
aam
cld
movsb
add
pop
jle
sbb
sbb
test
popf
loop
mov
lahf
xor
leave
ja
jecxz
cmc
add
sub
fnstcw
cmp
addr16
dec
cmp
push
int3
nop
ss
pop
sbb
mov
jp
aaa
jmp
je
mov
or
lahf
or
or
addr16
xor
scas
rorb
scas
adc
add
push
fisttps
les
clc
cmp
jb
cmp
pop
test
xor
mov
shll
mov
jno
cmp
pusha
fxam
out
xadd
or
sbb
xor
dec
sbb
nop
sbb
push
xchg
cmp
outsl
rolb
mov
sub
jns
push
dec
lds
and
out
mov
cli
repz
movsb
out
imul
dec
sub
scas
nop
insb
gs
or
fdivrl
notl
stos
in
incl
and
xlat
call
dec
shll
lcall
and
and
ret
pop
mov
sbb
pop
mov
pop
jge
xchg
lahf
add
icebp
xor
jb
pop
in
mov
xor
enter
mov
push
cld
insb
ret
fistpl
xchg
scas
addr16
dec
xor
in
cltd
push
in
push
rcll
pop
mov
cmpsl
cmp
push
dec
add
and
int
nop
jp
or
mov
mov
cmp
test
pop
sbbb
addr16
push
add
fldt
adc
scas
aas
jns
outsb
pop
clc
mov
mov
subl
stc
xchg
xchg
mov
repnz
in
push
inc
mov
sahf
lcall
cmp
sahf
jmp
lea
pusha
sbb
call
enter
sbb
push
inc
cmp
nop
sub
mov
lret
dec
js
mov
mov
pop
jae
mov
push
pushf
icebp
ret
test
cld
sbb
out
cmpsl
loop
fstpt
xchg
jecxz
cmp
imull
jne
push
xchg
notb
ret
mov
xor
and
clc
and
popf
addb
shr
mov
jne
outsl
adc
or
inc
or
mov
icebp
pop
int
jbe
clc
xchg
lods
das
out
sub
cltd
loopne
cmpsb
adc
sti
scas
mov
adc
xchg
mov
sti
inc
pop
sub
movl
dec
clc
or
insl
or
lock
dec
ss
add
mov
loop
mov
out
jbe
repz
fidivrl
mov
pop
ss
lds
lods
aas
jge
push
das
popa
aaa
sbbl
loopne
fsubs
decb
test
cld
jecxz
les
pop
or
repnz
lds
sti
xchg
nop
outsl
inc
test
mov
and
cmc
jge
xchg
jns
lea
daa
add
xor
int
mov
mov
mov
jmp
scas
cmpsb
push
in
mov
std
vphadduwd
mov
add
push
sar
push
or
xor
push
fucomip
popf
stos
call
fistpll
jg
repz
andb
cltd
repnz
stos
push
ret
mov
fstpt
sbb
mov
cmp
inc
jbe
push
xchg
mov
xchg
mov
add
or
je
std
mov
loope
fwait
scas
jecxz
sbb
jnp
aaa
addr16
movl
add
ja
lahf
push
ror
ror
mov
in
arpl
lea
aam
test
mov
sarl
in
inc
aam
or
mov
cmp
aaa
sahf
movsl
int3
and
cwtl
pushf
or
cld
mov
mov
jg
mov
and
rorl
push
mov
scas
dec
ljmp
test
push
sbb
inc
jle
push
outsl
sbb
push
mov
xchg
mov
jecxz
mov
xor
xchg
stc
mov
int
mov
call
imul
in
pop
addr16
or
popa
aad
jge
pop
addr16
int3
mov
adc
adc
adc
shrl
lcall
movsl
bound
mov
lods
add
mov
or
pop
clc
add
cmp
scas
lods
mov
add
test
mov
flds
xor
stc
std
add
jno
movsb
dec
loop
fs
jo
xchg
sbbb
adc
pushf
sbb
lret
ljmp
stos
mov
in
movsb
adc
pop
mov
in
lret
or
push
daa
dec
loop
mov
fisttpll
shl
loope
repnz
dec
or
shll
js
or
push
push
faddp
punpckldq
notl
mov
daa
jne
sbb
jbe
lret
lods
cmp
lea
movsb
jno
or
movsl
and
ret
fwait
lock
daa
out
inc
add
cmc
inc
dec
into
inc
add
in
sub
adc
mov
add
cli
rcrb
sahf
in
not
cli
out
mov
rolb
iret
cmp
gs
outsl
call
std
inc
inc
pop
pop
mov
or
insb
jmp
xor
jge
mov
lock
mov
popf
jns
push
mov
sbb
out
mov
dec
xchg
cmpsl
adc
pop
addr16
fdivrs
jo
mov
movsl
sub
pop
lret
idivl
push
int3
jl
xor
test
add
xchg
mov
pop
fstp
fdivrl
leave
adc
mov
cmp
cmpsl
ficoml
and
pop
xorl
popa
rolb
popf
jg
mov
jne
add
pop
xchg
mov
loop
in
mov
dec
push
insl
lock
xlat
push
ja
test
into
arpl
adc
mov
inc
mov
cwtl
fildll
cli
clc
popf
scas
addl
cmp
add
dec
out
cmp
jno
jne
pop
cmp
aas
push
pop
sahf
insb
sub
sub
loop
ret
dec
adc
xor
call
mov
aaa
add
cmpsb
push
decb
pop
sahf
xor
ljmp
push
xlat
int
lods
fistpl
adc
aaa
add
lea
add
mov
mov
jo
sub
out
outsl
cmp
imul
icebp
xchg
and
or
mov
inc
imul
xchg
ret
mov
inc
les
push
mov
and
jmp
rolb
xchg
and
jl
arpl
out
xchg
and
and
dec
push
adc
push
out
scas
mov
sbb
aas
shll
jmp
pushf
cmp
or
push
inc
outsb
nop
out
hlt
sarb
mov
nop
mov
ficoms
sti
fistpl
add
sbb
add
adc
adc
mov
xchg
pusha
fwait
lods
mov
push
mov
popf
inc
adc
push
movsl
inc
outsl
lods
inc
rcr
mov
cli
xchg
shlb
aas
push
or
cmp
add
repz
jb
adc
add
inc
mov
pop
xchg
daa
out
add
aam
daa
dec
outsl
adc
fisubrl
dec
mov
dec
mov
push
shl
ds
pop
inc
loopne
rorl
out
push
sbb
and
es
sub
adc
fadds
rcrl
xor
push
push
cmp
push
pop
cmp
cmpsl
int3
pusha
push
sahf
jbe,pn
das
and
es
jg
inc
in
add
inc
out
movsb
mov
cmp
enter
shr
addr16
push
sub
in
cltd
cs
andl
int
shll
sub
dec
jb
in
mov
sub
sti
and
mov
popa
mov
xor
es
inc
mov
loope
and
add
ss
pop
loope
or
xor
cmp
push
clc
mov
cmp
xchg
lds
mov
nop
mov
dec
xor
mov
xchg
push
enter
insl
cs
enter
sbb
in
ret
scas
pop
mov
push
mov
dec
sti
or
and
or
cmp
out
xchg
sar
sub
arpl
shrb
es
mov
hlt
add
bound
push
shll
sbb
lods
jnp
les
push
and
scas
pop
pop
ret
dec
jb
sub
mov
or
lea
sub
jnp
or
mov
in
imul
fsub
mov
mov
or
bound
dec
push
cmc
sbb
std
aad
lcall
push
push
shll
mov
xchg
sbb
ss
sti
lcall
mov
js
add
cmpsl
push
sub
leave
inc
sub
std
outsl
and
mov
xchg
shll
fwait
add
dec
sbb
test
lret
aaa
scas
jo
jge
mov
mov
pop
jle
stos
aad
mov
out
cli
jbe
leave
jne
dec
mov
lret
cwtl
sub
fcomi
sbb
pop
cmc
add
and
dec
test
imul
rcll
inc
push
jl
xchg
and
pushf
jnp
mov
or
sbb
ds
rol
leave
insl
rep
push
sbb
sarb
push
xchg
rclb
lods
xor
xchg
out
test
dec
pusha
push
inc
and
ds
add
jl
mov
sub
jl
cmp
jg
mov
cmp
gs
fdivl
popf
xchg
sbb
aas
dec
mov
and
in
jg
popa
jae
mov
ret
or
and
in
testl
out
mov
fcom
popa
cwtl
movsl
sbb
cmp
sysenter
xor
loope
add
adc
mov
in
dec
sub
addr16
outsb
jae
mov
jmp
fcoml
lock
ja
inc
push
pop
les
pop
cli
push
push
shlb
xchg
pop
xor
xor
jge
dec
sub
int
sub
dec
int
adc
add
xor
popl
arpl
cmpsb
xchg
jmp
les
dec
jbe
inc
dec
and
repz
adc
icebp
push
lcall
fwait
test
mov
mov
test
cmp
sbb
inc
sub
enter
test
ljmp
lea
push
clc
jnp
inc
or
mov
dec
pop
aas
cmp
pop
jb
out
jns
rcll
pop
jmp
fstpl
scas
in
xchg
in
add
xor
loop
inc
mov
jno
shlb
cmp
dec
pop
sub
insl
cmp
lret
loope
jns
mov
sti
add
xchg
mov
add
and
iret
in
idivl
lods
jle
stos
fimull
mov
sbb
add
push
and
mov
or
sub
push
jmp
pop
lret
enter
inc
lock
fs
push
leave
dec
xchg
das
int
inc
imul
in
stc
cmp
adc
dec
mov
jmp
jmpw
lahf
nop
notb
mov
pushl
test
notb
push
stos
jae
into
les
add
pushf
fs
loopne
jne
mov
mov
in
ljmp
mov
and
sbb
sti
pop
mov
stos
mov
inc
mov
pusha
ret
stos
arpl
mov
fwait
xchg
add
or
orb
shrb
xor
js
or
xchg
test
add
mov
dec
in
xchg
pop
adc
xor
mov
cmp
add
jne
inc
add
dec
les
je
jp
add
adc
dec
adc
imul
push
xchg
mov
outsb
add
fsub
cmc
lods
jne
sub
pop
cmp
add
imul
lret
fisttpll
adc
push
mov
cmp
aad
loope
sbb
inc
cmpb
movsb
mov
cmc
imul
push
mov
loope
mov
popa
xor
lret
add
mov
inc
xor
add
pusha
enter
mov
add
sbb
mov
or
or
js
jmp
outsl
lcall
or
shlb
imul
add
inc
inc
dec
xchg
or
insb
mov
scas
mov
js
inc
les
ss
mov
or
jp
jmp
xchg
sub
dec
push
js
sti
pop
ficoml
and
mov
xor
cmp
sbb
mov
out
sub
add
cmp
popa
cmp
loop
cli
js
out
lret
inc
pushf
jle
jle
adc
jmp
sub
inc
mov
mov
mov
sarb
xorb
aaa
xor
xchg
inc
lret
push
push
mov
jp
adc
or
popf
inc
jb
leave
aaa
jns
jle
push
addr16
cmp
movsb
push
mov
leave
pop
mov
fcompl
loope
fs
bound
xchg
mov
add
loope
in
mov
mov
adc
cmp
mov
sbb
addr16
insl
sub
fstl
mov
or
repz
ljmpw
hlt
mov
pop
loope
cmp
sti
sarb
add
mov
sub
cmp
call
pop
sbb
pop
mov
rclb
repz
sbb
pop
bound
pushf
xor
pop
fnstsw
push
std
mov
cltd
and
mov
sahf
in
pop
jecxz
hlt
es
mov
add
sbb
mov
out
and
ss
fidivrl
sbb
out
adc
gs
enter
dec
and
pop
fsubrs
cld
es
add
scas
movsl
mov
pushf
mov
sub
test
clc
mov
mov
dec
fistpl
pushf
sub
xchg
mov
lcall
test
mov
lock
mov
popf
enter
leave
mov
cmpsb
or
mov
sub
pop
es
pop
cmc
xchg
or
inc
or
sub
jle
mov
pop
outsl
push
sbb
std
lds
xlat
mov
jp
js
lods
sub
and
mov
mov
cwtl
mov
cmp
scas
out
ret
push
cmpsl
call
cmc
nop
mov
inc
ret
insl
mov
dec
jle
adc
push
and
add
lods
das
int3
cmp
dec
inc
mov
xchg
repnz
cmp
rolb
nop
leave
push
cmp
pop
aas
callw
sbb
aas
mov
pop
cmp
adc
jnp
cwtl
cmc
call
popa
mov
pusha
pop
cmp
in
dec
xor
jae
dec
repz
push
scas
inc
mov
pop
test
leave
push
aam
and
jg
lea
movsl
lret
cs
outsb
mov
out
imul
inc
aam
repnz
mov
shll
pop
push
decb
jno
push
inc
mov
rcll
push
and
or
out
lcall
mov
sbb
xor
dec
inc
push
imul
subb
fwait
mov
fistpl
lret
testl
xchg
or
test
cld
icebp
and
fisttpll
jecxz
stos
stos
dec
mov
or
mov
push
stos
call
dec
out
push
xor
sub
idivl
ja
dec
cwtl
mov
test
data16
ljmp
aaa
and
pop
pop
movsb
mov
imul
or
fnsave
addr16
add
jle
mov
dec
andb
rcl
fcoms
cwtl
xor
xor
sbb
xchg
xchg
and
fsubp
icebp
lds
or
pop
test
pusha
arpl
aam
inc
fcoml
out
xchg
jns
push
stc
jl
mov
push
pop
pop
push
fwait
cwtl
fldcw
cmpsw
stos
push
repz
cmp
stos
cmpsb
inc
jmp
jns
out
and
repnz
jb
fs
inc
je
sub
subl
mov
xchg
sub
pusha
cli
xor
mov
jmp
push
mov
jmp
or
inc
lds
call
dec
scas
adc
fisubs
mov
xchg
notb
mov
mov
addl
sub
lea
and
cmp
adc
lock
xchg
push
dec
stos
pop
cmpsl
xor
mov
mov
out
and
pop
ja
and
cmp
push
add
inc
xor
pop
mov
cltd
popl
adc
sub
call
cmp
sahf
pop
sti
sbb
addr16
jge
push
cmp
dec
shlb
imul
inc
dec
lcall
push
and
mov
jmp
xchg
lods
xchg
lcall
test
jp
push
pusha
jmp
xchg
pop
outsb
add
leave
dec
pand
dec
pop
lret
das
add
ret
dec
insb
out
push
jmp
in
nop
sub
push
jecxz
xchg
push
jl
add
ficomps
dec
pop
into
adc
stos
sub
jl
mov
fwait
aad
cmp
daa
add
adc
mov
dec
hlt
adc
mov
or
adc
das
jg
pop
pushf
jbe
sub
fildll
imul
out
pop
inc
ud1
test
xor
adc
cwtl
pop
push
dec
lock
shl
dec
lock
cmp
add
rolb
mov
ss
ljmp
mov
xchg
mov
scas
xorb
xlat
fcompl
mov
int3
negl
ret
je
fildl
aaa
les
inc
shll
out
jecxz
inc
mov
push
ret
xor
faddl
les
jb
pop
dec
incl
adc
jo
jge
xlat
pop
cmc
sahf
mov
fs
aad
inc
adc
jo
ret
jl
imul
mov
repnz
cmp
pop
pop
lods
mov
or
adc
mov
dec
adc
dec
dec
mov
aam
ljmp
adc
loop
jmp
mov
repz
in
xor
dec
pushf
daa
loope
sub
shll
sbb
stc
enter
push
sti
pop
adc
lahf
add
adc
icebp
sub
in
add
mov
aaa
nop
jmp
dec
arpl
add
sbbb
sbb
jno
adc
mov
mov
fadds
cmc
cs
adc
sub
xchg
cmpsb
add
repnz
sub
push
mov
shl
mov
cld
jmp
sub
andb
and
arpl
inc
stos
in
mov
or
je
loopne
dec
movsb
orb
setae
mov
xchg
pusha
push
jns
push
push
out
pop
and
xor
jne
jnp
push
es
add
insl
loopne
leave
sar
je
xlat
pop
or
insb
xor
popf
cmc
pop
aad
dec
sbb
daa
cmp
push
sbbb
testl
fucomip
xlat
imulb
int
inc
mov
mov
aad
mov
cmp
push
mov
movsl
cmp
lcall
bound
int
cmpsl
fs
jmp
dec
cmp
xchg
movl
sub
test
int3
mov
dec
dec
pop
mov
mov
shll
lods
lock
popf
stos
das
flds
add
push
shlb
adc
cld
push
push
out
test
test
xchg
and
ljmp
mov
xchg
sub
push
in
sbb
bound
inc
loop
xchg
insb
pop
lea
push
movsb
movsb
mov
or
scas
cmp
movsl
stos
popa
out
inc
fsub
js
jmp
mov
lahf
stos
sbb
sub
cmp
popf
jb
js
push
xor
adc
popf
cmp
adc
adc
fbld
out
mov
dec
mul
hlt
mov
sub
mov
cmp
imul
shlb
popa
shlb
shlb
mov
adc
push
mov
jle
fnstcw
xor
push
movsl
rcrl
ljmp
mov
sub
popa
mov
sahf
pop
mov
sbb
cwtl
fistl
adc
mov
aad
aad
repz
ds
nop
xchg
enter
sub
dec
mov
jl
mov
dec
mov
lock
cld
insb
test
inc
dec
rcr
inc
aas
movsb
mov
cmp
xor
jne
sbb
pop
xchg
mov
scas
add
cmp
sbb
mov
jp
sbb
popa
mov
js
jecxz
cli
lcall
xor
fcomps
fwait
mov
andb
cwtl
jno
xchg
daa
scas
pop
sub
or
cmp
mov
add
sbb
shll
mov
imul
add
mov
xchg
in
add
mov
and
cltd
sbb
add
mov
jmp
sub
fwait
adc
imul
je
scas
addr16
jecxz
dec
aas
popa
repz
jns
mov
jmp
jmp
cld
pop
scas
inc
xchg
ficomps
mov
cmpsb
xor
in
lods
lahf
fs
inc
and
xor
es
out
ret
add
mov
outsb
xor
mov
fcompl
jg
xor
xlat
dec
jns
call
lret
push
out
es
jno
push
mov
dec
arpl
dec
mov
inc
cmp
push
dec
or
inc
icebp
dec
mov
jbe
leave
add
push
repnz
fadd
mov
xor
cmpl
and
cmp
out
pop
nop
test
ja
sub
subb
repz
lret
and
insl
mov
leave
mov
and
sbb
jg
loope
lret
add
arpl
ja
jg
sbb
outsl
fstpl
repz
hlt
cmp
mov
daa
insb
jae
dec
je
fidivrs
pop
jmp
loop
jnp
stos
or
or
inc
add
pushf
clc
stos
add
cmp
pop
int
cs
mov
std
or
pop
push
dec
mov
xchg
pop
mov
sti
inc
stos
ror
sahf
stos
mov
adc
stc
jg
lahf
cld
cltd
xchg
out
xchg
int
in
bound
mov
dec
cmp
dec
outsb
test
arpl
test
push
and
fsubrl
or
mov
pusha
xor
xchg
dec
dec
ds
jmp
aaa
jmp
pop
shrl
cmp
pop
shl
sarb
and
aaa
insl
call
cmpsb
subl
fs
pop
mov
data16
push
dec
pop
pushf
push
mov
lock
adc
pop
mov
mov
add
cli
cli
push
mov
adc
sbb
pop
fs
xchg
push
jb
call
daa
mov
loop
fstpl
mov
inc
insb
pop
mov
ffreep
add
add
loopne
inc
pop
xor
shl
lcall
aam
add
dec
mov
and
outsl
mov
jp
out
dec
cli
sub
cltd
and
fwait
neg
cmp
sbb
jns
fidivrl
lds
adc
and
cmc
insl
scas
stc
shll
mov
inc
jle
nop
xor
pop
mov
jg
push
sub
stos
dec
xchg
mov
xor
push
jp
push
imul
xchg
and
push
cmp
cld
mov
xchg
loopne
in
adc
fwait
arpl
add
int3
addl
cmp
add
add
xor
pusha
aad
loop
mov
negb
push
je
subb
lret
jp
sti
xchg
and
push
mov
iret
ja
push
mov
shlb
jb
xlat
imul
cmp
fwait
inc
aam
fs
xor
mov
jo
mov
inc
adc
and
lds
push
cmc
lret
fsubr
jp
pop
int3
dec
cmp
popa
js
or
sub
push
jg
imul
and
and
pop
push
leave
adcl
sbb
mov
es
in
sti
and
add
xor
push
jb
adc
mov
scas
pop
cmpb
fistps
das
jo
ret
loope
in
jno
repz
ja
lds
nop
push
xchg
fistps
lret
stos
daa
loopne
xor
call
imull
mov
flds
push
mov
mov
dec
cmpl
aam
push
push
jecxz
jmp
fs
sub
sub
imul
outsb
or
movsb
mov
test
sub
arpl
push
xor
sbb
and
mov
pop
nop
inc
mov
adc
and
mov
ret
loope
inc
xor
es
lret
mov
icebp
fisttpl
jp
fs
dec
and
les
cs
inc
fs
push
mov
ja
push
out
mov
jns
pop
add
push
jb
jl
outsl
push
dec
pop
jle
into
or
jae
xchg
jno
mov
addr16
test
xor
jl
jge
jp
pop
xor
dec
pop
pop
add
dec
sbb
rcrb
inc
ljmp
sbb
or
stos
daa
sbb
iret
loope
add
fisttpl
nop
jl
or
scas
pop
xchg
adc
adc
cmpsb
test
jbe
push
iret
clc
int3
ret
rcl
lret
sbbb
push
push
inc
lahf
mov
in
and
icebp
sbb
jno
aas
jns
dec
mov
repnz
mov
sbb
jne
sub
insb
sbb
mov
gs
dec
jno
in
in
add
out
jle
sahf
jmp
or
push
inc
xchg
popf
push
loope
inc
test
popf
sti
pusha
out
cmpb
xchg
xor
fsubr
xchg
xchg
js
mov
fs
jb
mov
adc
jb
orb
fldenv
fdivs
add
inc
push
adc
mov
mov
cmpsl
pop
push
test
jo
sub
xchg
pop
push
call
pop
and
idivb
or
nopl
insb
ja
hlt
pop
stc
mov
adc
mov
divb
mov
pop
pop
pmaxub
xchg
out
mov
adc
shlb
sbb
cs
icebp
fisubs
xchg
popf
inc
jge
and
mov
xor
mov
addb
sbb
mov
xchg
insb
aam
cmp
cmp
or
or
xor
lock
in
and
xchg
pop
dec
stos
aam
test
bound
ret
pop
push
cld
mov
add
sub
or
imul
mov
neg
adc
cli
lods
add
ss
aad
mov
pop
and
loop
fucomp
mov
dec
out
loopne
jg
ret
mov
loope
fidivrl
sbb
cmp
push
adc
jl
and
cmp
or
fcoml
js
movsl
lret
enter
in
testl
ret
es
lcall
insb
push
sub
lret
ret
cmpsl
pop
in
sub
and
mov
hlt
mov
in
inc
cltd
add
pop
cmc
divl
test
xchg
fidivrs
inc
xchg
xor
xchg
sub
jae
rclb
pop
fbld
negb
out
out
stos
cmp
scas
inc
lods
call
xor
sub
sub
insb
mov
mov
mov
aas
push
cld
in
inc
inc
aaa
lods
xchg
les
pop
dec
xlat
push
rcrb
arpl
jge
rolb
shlb
hlt
jae
xchg
mov
std
add
sub
test
or
jge
out
fcmovbe
fistpl
or
mov
lds
mov
inc
into
jecxz
xchg
mov
jmp
push
mov
mov
inc
mov
arpl
repnz
out
push
adc
loop
not
xchg
jbe
adc
mov
push
push
scas
dec
add
push
leave
ss
cmp
pop
mov
cmc
push
mov
xchg
rcrl
or
cmp
faddp
in
mov
lret
push
and
sahf
adc
mov
or
pop
pushf
pop
xor
nop
shll
jo
push
jb
mov
cmp
pop
or
lret
mov
movsb
iret
xor
adc
mov
pop
mov
addl
fsub
and
dec
dec
pop
push
fs
jne
into
fwait
pusha
aaa
and
pop
adcl
enter
push
stc
dec
into
push
push
add
jp
bound
push
inc
pop
sub
pop
test
adcb
ja
iret
dec
sarl
lods
pop
ss
xchg
mov
or
mov
into
jle
stos
cmp
repnz
push
xor
pop
in
mov
xor
cmp
popa
pop
jge
sbb
cmpsb
mov
push
lods
cmp
and
arpl
dec
inc
stos
jg
jp
add
xchg
sub
shrl
mov
pushf
push
je
add
dec
cmp
pushf
xor
scas
mov
push
std
sahf
mov
mov
xor
pop
sub
rcr
ja
out
add
repnz
mov
int3
out
psubb
pop
setb
shrl
shlb
jecxz
data16
lret
in
enter
cltd
dec
sub
ja
shl
js
xor
lods
inc
cltd
sbb
loope
cltd
orb
mov
cltd
mov
sarl
test
cmpsl
out
sub
cmpsb
push
push
leave
fnstsw
mov
cmp
pop
pop
and
push
sub
inc
movsl
add
push
nop
and
rolb
push
cmp
fstps
inc
repnz
mov
cmpsl
lret
fdivs
mov
outsl
xor
mov
jmp
pop
adc
pop
dec
inc
mov
loopne
adc
rorb
inc
das
adc
in
aam
rcrl
sbb
sbb
shll
fstpt
mov
inc
out
mov
out
sub
lret
sub
pushf
mov
dec
divb
repz
scas
jp
js
or
in
push
std
add
data16
or
stc
std
int
sbb
repz
inc
push
xor
js
lcall
cwtl
dec
in
inc
or
mov
arpl
aas
les
and
adc
jae
aas
sbb
mov
iret
ficoml
push
push
pop
jb
dec
jb
into
or
dec
jp
in
cmp
sbb
insl
sti
adcl
std
popa
mov
jnp
add
std
call
stos
pop
jl
adc
push
pop
fs
adc
scas
repz
mov
popa
and
rcrl
ss
jno
xor
mov
sbb
mov
push
or
dec
mul
push
imul
insb
xor
clc
pop
imul
push
lea
lds
mov
rol
pusha
mov
mov
fisttpll
dec
or
inc
xor
std
test
mov
loopne
stos
dec
xor
paddq
addl
ja
rolb
jecxz
std
sbb
lods
and
add
cmc
leave
xor
lcall
test
ljmp
nop
sti
adc
lahf
stos
sub
scas
cli
sbb
cli
xor
xchg
stos
imull
pop
adc
ror
out
cwtl
cmp
stos
shll
or
mov
push
mulb
int3
dec
pop
sub
inc
or
in
lcall
in
ja
leave
jecxz
jne
out
lret
cmp
sbbl
pop
decl
mov
sub
cltd
lret
push
rorl
cld
jp
or
jno
dec
add
loopne
rolb
and
testl
dec
adc
dec
or
jl
subb
mov
punpckhwd
ljmp
mov
lock
xchg
dec
pop
adc
xor
sub
mov
bound
lock
test
cmp
in
int
mov
jnp
mov
jmp
and
cmpsb
cwtl
mov
imul
insb
icebp
std
push
loope
lock
dec
out
dec
mov
cmp
mov
xchg
adc
and
and
add
test
mov
sub
rcll
pop
pop
pop
jl
cmc
gs
push
mov
mov
pop
sti
sbb
hlt
inc
cmc
repz
loopne
dec
les
sub
pop
inc
pop
repz
sub
mov
xorl
call
xchg
mov
add
pop
jae
test
jle
adc
aad
mov
fistps
adc
mov
aaa
aad
mov
mov
rorl
int
loop
or
lret
inc
pop
adc
mov
pop
mov
adc
jns
movb
push
adc
xchg
pop
inc
repz
les
stos
insl
mov
xor
das
outsb
push
push
cmp
shll
inc
push
int
ret
mov
mov
push
gs
stc
pop
cmpsb
scas
sub
or
mov
pop
sbb
loopne
sahf
and
xor
cmovo
add
adc
insl
sub
push
and
xchg
test
mov
pusha
xor
sti
mov
xchg
sbb
fistpl
sbb
cmp
sub
lds
jnp
add
daa
sbb
xor
out
rcll
sti
rclb
imul
sub
or
fmul
sahf
jl
inc
mov
sub
and
lret
dec
sub
paddsw
aaa
std
sub
xor
pop
push
ljmp
cmp
push
add
out
pop
das
pop
or
outsl
jb
fwait
stos
pop
xor
iret
mov
add
dec
rep
xchg
scas
mov
sub
mov
and
insl
int
jmp
aam
out
cmpsb
push
add
push
call
dec
push
pop
xchg
rolb
cmpsb
cmc
insb
pop
fisubrl
xchg
cmp
data16
lods
jbe
loop
mov
in
sub
std
jp
jmp
jp
test
mov
sub
lock
mov
jge
cld
lcall
scas
and
lret
scas
mov
flds
inc
in
mov
mov
scas
add
mov
mov
sub
adc
insb
fsub
outsl
push
in
arpl
and
aas
push
dec
aaa
sub
mov
and
mov
push
xchg
pushl
cmp
ficompl
and
cmp
jmp
pop
dec
cs
dec
es
sbb
into
and
stos
adc
rcrb
cmp
dec
das
mov
enter
outsl
or
popf
jne
adc
lret
int3
mov
xor
sbbl
cmp
shll
pushf
scas
lock
iret
xlat
test
rol
fisubs
sti
out
jnp
add
push
mov
sar
pop
popa
cmp
push
mov
or
add
mov
or
daa
dec
inc
stc
or
mov
mov
or
push
mov
test
and
sbb
or
jecxz
or
push
adc
es
sub
add
lock
jmp
mov
loop
stos
jns
mov
das
in
shrb
popf
dec
fimuls
mov
out
lret
hlt
in
sbb
sub
dec
pop
mov
mov
iret
push
je
inc
scas
cmp
adc
mov
mov
xchg
ret
jo
pusha
pop
push
hlt
lods
int3
jne
repnz
xor
lock
mov
andb
das
xor
dec
jge
cmp
push
leave
mov
into
gs
ret
cs
andl
shlb
xor
or
test
jmp
xor
mov
push
cmp
inc
pop
mov
stos
xor
or
pop
pushf
xor
mov
psrld
or
insl
mov
ljmp
and
test
nop
mov
pusha
mov
xchg
repnz
std
outsb
test
test
cmp
and
jle
mov
sbb
iret
jmp
jnp
inc
insl
aaa
push
ss
sbb
test
mov
inc
xlat
hlt
or
mulb
add
push
xchg
jae
enter
fwait
das
test
aaa
push
sbb
push
push
inc
dec
xchg
fnstcw
nop
sbb
fisubs
sahf
sbb
mov
dec
add
outsl
pop
leave
dec
jno
into
aam
xchg
xchg
ss
mov
sub
push
dec
enter
pop
pusha
xchg
loope
sub
cmp
jge
mov
mov
sbb
adc
ljmp
int
mov
int
xor
or
vmovd
inc
or
fisttps
lahf
or
iret
lahf
outsb
cmp
lret
scas
aaa
sub
hlt
push
add
inc
lods
in
out
fmull
inc
mov
mov
jp
mov
add
sbb
mov
dec
popf
mov
or
lock
push
inc
push
test
mov
bound
mov
jne
cmp
ret
sbb
jno
shlb
push
out
jge
call
cld
aas
cmp
and
inc
test
lcall
adc
aad
scas
push
add
movsl
sub
mov
sbb
pop
loope
add
mov
outsb
xchg
xchg
out
adc
xor
xchg
adc
mov
jge
mov
js
lahf
imul
aam
mov
popf
pop
and
test
push
in
lea
add
cmp
loopne
pop
xor
lea
in
pusha
stos
inc
and
cmpsb
outsb
scas
ds
pop
out
xchg
or
ja,pt
and
int
inc
insb
sub
lods
inc
nop
xlat
ljmp
push
ret
outsl
lahf
imul
xor
ret
insb
adc
ret
aad
pop
or
outsl
and
ss
stos
cmpsl
xor
loope
test
adc
xor
loop
dec
mov
movsb
pop
mov
cltd
sbb
fidivs
or
mov
fisttpll
pop
shrb
jne
js
xchg
and
jg
pop
mov
outsb
push
pause
pop
in
pop
orl
int3
sbb
lods
adc
dec
lea
inc
mov
imul
push
loop
es
cmp
jo
rcll
add
pop
sahf
xchg
aas
fidivs
jmp
lret
loop
jecxz
movsl
pusha
dec
cld
mov
lock
popa
ljmp
xchg
dec
cld
cmpsb
mov
fadds
add
xchg
ja
cmpb
clc
enter
movsb
andb
pop
popa
inc
mov
sahf
pop
fs
sarb
fisubs
dec
pushf
mulb
mov
push
sbb
icebp
mov
rcll
pop
mov
push
adc
sahf
adc
rclb
jg
sub
loope
push
sbb
pop
cli
cld
mov
out
sbb
mov
mov
jecxz
fs
and
pop
pop
or
jne
xchg
popa
shlb
cmp
cmc
insl
cwtl
jmp
movsl
ja,pn
xchg
fcompp
test
call
int3
push
sub
adc
stos
dec
mov
sub
sub
mov
jecxz
and
fistpl
es
jnp
roll
into
cmp
fnsave
out
pusha
sub
in
adc
push
les
xchg
lret
sub
add
aad
jl
mulb
mov
fildll
push
and
pusha
cli
pop
jbe
imul
std
sub
mov
xor
into
cwtl
shrb
cmpsl
enter
sti
fisttpl
xchg
fnop
mov
cmp
out
stc
dec
sbb
pop
mov
sub
cli
push
sbb
in
repnz
push
flds
loopne
clc
push
adc
inc
mov
dec
xchg
xchg
iret
xor
cld
inc
xor
icebp
into
ret
xor
push
testb
rorl
fldcw
add
sahf
pop
insl
popl
icebp
cmp
mov
enter
out
pop
pushf
mov
inc
movaps
shrb
jbe
test
add
iret
pop
jmp
dec
xor
jnp
cs
jle
outsl
push
mov
inc
or
pop
cmp
sbb
jle
out
sub
daa
aad
popf
mov
jg
cwtl
in
xor
loope
js
or
fiaddl
sbb
sub
repnz
jge
or
add
nop
cmpsb
sub
xor
dec
outsl
lock
pop
jne
xor
xchg
dec
and
test
jmp
aas
push
mov
shrl
add
arpl
pop
stos
or
test
mov
fldt
in
cmc
fcoml
push
dec
adc
icebp
sarb
and
shrb
jl
insb
xchg
fnsave
stos
adc
scas
jp
pop
push
enter
sub
out
stc
sbb
cmp
fs
addl
enter
push
jle
cmp
mov
divb
aas
fisttps
add
test
int3
fprem1
test
stos
inc
push
int
inc
add
push
sbb
pop
aam
push
cmp
dec
jnp
bound
ret
inc
arpl
pusha
js
add
out
arpl
popa
idivb
loop
popa
lds
dec
mov
sbb
mov
xchg
adc
pop
andl
mov
testl
xchg
add
notl
or
popa
iret
test
fdivr
cltd
fsubr
mulb
in
dec
inc
pushf
test
mov
fsts
mov
stc
dec
int3
fwait
push
inc
scas
shlb
jbe
adc
rorl
and
push
fsubs
lds
and
ds
rcr
mov
sbb
mov
dec
sbb
movsl
jae
jne
xchg
daa
sbb
fisubl
fsubrl
enter
iret
fisubrs
add
or
push
mov
call
and
ljmp
dec
out
pop
mov
push
popa
jge
and
insl
aam
dec
cli
stc
adc
mov
mov
aam
mull
jle
dec
inc
pop
inc
jne
xor
xlat
mov
pop
adc
mov
xlat
mov
dec
pop
movsl
imul
sbb
fdivrs
mov
mov
or
lcall
xor
xor
popa
int3
sbb
icebp
push
gs
jge
jp
sbb
cmpsb
cmc
push
test
pushf
mov
mov
xchg
sub
xchg
fisubrl
faddp
and
scas
in
pop
sub
mov
push
cwtl
das
mov
cmc
std
adc
mov
xchg
dec
lret
test
xchg
sub
insb
stc
pop
dec
push
or
lock
sahf
push
sarl
push
push
sbb
fiadds
inc
adc
loopne
in
mov
repz
and
push
xchg
adc
or
adc
xor
daa
push
push
adc
push
cwtl
cmp
mov
into
sbb
push
rorb
sbb
and
jg,pt
pop
les
cmp
sbb
loope
pop
into
outsl
fisubl
mov
mov
xor
imul
mov
mov
mov
ficomps
xlat
xlat
lods
rclb
jle
jg
sub
add
lds
jae
xor
ret
in
push
pushf
pop
stos
shl
fstps
jp
ljmp
cmp
test
imul
int3
add
jmp
pop
cmp
add
addl
jne
enter
test
clc
xor
add
xchg
adc
mov
sub
jl
movsb
pop
scas
ljmp
mov
add
mov
sti
pushf
je
cmpsl
xchg
test
xor
inc
xchg
sbb
mov
and
add
xchg
jne
pushf
enter
sbb
enter
popf
sub
mov
lret
pop
sbb
lahf
fwait
adcb
mov
pop
dec
sbb
insb
mov
add
lods
sbb
int
and
ficoml
fimull
mov
clc
fisubl
js
stos
cmp
push
sub
loope
adc
sbb
xchg
cmp
rcrb
and
loop
lret
bound
sub
sbb
pop
xchg
stos
addr16
cmp
jo
sub
inc
xlat
cmp
xorb
fdivr
pop
xchg
pop
scas
xchg
mov
cld
sbb
clc
lds
jge
jb
es
xorb
fistpll
sbb
je
fwait
inc
jae
push
scas
pop
cs
jbe
test
jecxz
add
js
jg
cmp
clc
mov
xor
add
shrl
mov
xchg
cmc
xor
cli
or
lods
or
test
xor
jno
loop
push
adc
int3
ffree
pop
imul
fdivl
mov
xor
fs
idiv
lods
adc
aad
outsb
aad
loope
sub
outsl
sbb
mov
lahf
mov
dec
dec
jge
jmp
lret
mov
xor
sbbl
dec
repnz
jb
or
lret
ljmp
fldl
pop
or
iretw
xchg
sbb
xchg
xchg
sub
loop
inc
into
jmp
jb
push
cmp
and
ja
cmp
or
push
sbb
mov
push
inc
or
xor
push
data16
repz
out
jno
pop
jae
int3
and
dec
push
mov
lret
in
sub
pop
aam
push
movb
jecxz
jns
icebp
cs
int3
popf
xor
xchg
gs
cmp
add
jmp
in
cmc
push
int3
mov
cmp
push
inc
fidivs
dec
mov
ja
xchg
pop
scas
xchg
cli
insb
push
inc
popa
out
mov
xor
movl
pop
mov
stos
jo
jns
jg
jl
dec
scas
push
fists
adc
mov
jbe
inc
call
repnz
arpl
lds
xchg
mov
adc
daa
jle
adc
dec
dec
stos
rorl
mov
mov
loope
add
je
fstpt
fsubp
mov
pop
or
std
lods
adc
icebp
ds
adc
cmp
cmpb
daa
lock
scas
dec
push
push
adc
jl
cmp
stc
lods
dec
mov
mov
mov
inc
sub
ret
pop
mov
mov
mov
das
in
mov
cmp
sbb
pop
lcall
jbe
test
push
shlb
je
pop
xor
les
bswap
jns
outsl
adc
push
inc
jmp
out
arpl
iret
inc
mov
testb
or
push
push
movsb
push
pop
mov
jmp
enter
sub
jb
inc
mov
jmp
push
mov
sbb
movsl
shlb
cmp
mov
inc
cmp
cmp
addl
add
fnstenv
loopne
mov
insb
int
movsl
addr16
mov
sbb
or
jmp
popa
icebp
cmp
sbb
inc
push
lcall
fcompl
shlb
xor
mov
cltd
push
jo,pt
rolb
sbb
sarl
lret
sbb
cmpl
lahf
dec
data16
rcr
arpl
sbb
add
clc
test
lds
or
dec
and
lret
inc
push
lcall
aam
rcll
rorb
int3
jge
jle
imull
std
mov
sarb
push
in
xorb
lcall
adc
aas
adc
push
xchg
jns
lret
inc
push
xchg
jge
dec
sti
repnz
sub
int3
roll
add
fs
mov
repnz
push
aad
xchg
xor
mov
xchg
mov
je
and
test
pop
rcrb
cmp
pop
imul
mov
inc
les
jno
scas
fidivs
xchg
subl
sbb
add
cmp
dec
dec
insl
gs
xchg
test
jns
cmp
adcl
or
mov
and
js
test
mov
negl
fwait
inc
rcrl
dec
jnp
mov
std
js
int3
xchg
xchg
pop
jo
dec
jno
imul
in
fbstp
fcomi
rcrl
jnp
jae
incb
pandn
popa
lcall
mov
mov
fistps
sub
ljmp
mov
xchg
cmc
fdivs
fwait
xchg
sub
out
adc
or
xchg
test
push
adc
iret
jmp
ljmp
xchg
mov
push
jnp
in
fnstcw
aas
xchg
push
shl
insb
or
or
mov
sub
push
xchg
sbb
cmp
sub
out
mov
sbb
mov
push
add
shll
call
fdiv
dec
and
adc
shll
repz
xchg
push
jl
and
cltd
or
push
pop
test
jne
shll
stc
adc
data16
cld
mov
add
mov
out
sub
fidivl
push
add
pop
nop
push
loop
xchg
mov
aaa
mov
lea
inc
mov
les
outsl
in
pop
sub
loope
mov
dec
jecxz
testl
dec
jp
pop
pop
lds
push
push
fiaddl
pop
lds
fisttps
push
jnp
or
jmp
fdivp
cld
bound
lds
sub
in
leave
adc
imul
loope
dec
out
ret
addb
lods
push
sahf
or
sahf
mov
mov
mov
xorl
adc
lea
movsl
gs
repnz
inc
inc
out
loope
pusha
fildl
dec
jnp
inc
jle
jp
push
insl
jae
iret
fs
jecxz
stos
movsl
outsb
adc
pop
push
sub
lock
loop
sti
adc
pop
aad
xchg
adc
cltd
in
filds
cwtl
cmp
popa
test
cmp
in
fimull
push
mov
cmpb
pop
sti
aam
fildl
jecxz
aas
scas
add
sbb
pop
xor
in
pop
scas
insl
ja
pop
testb
push
xchg
and
mov
or
push
push
and
adcl
push
fimull
pop
mov
int
push
dec
mov
loopne
add
push
adc
fisttps
aaa
arpl
shl
test
mov
cmpsl
gs
mov
loopne
adc
mov
aaa
lods
push
pushl
or
cmp
insb
mov
xchg
aaa
das
aaa
mov
xlat
xor
ljmp
aas
nop
in
or
lret
dec
leave
hlt
mov
mov
int
inc
inc
movsl
sub
inc
aaa
push
sbb
loop
imul
loop
or
adc
frstor
xor
inc
mov
mov
jnp
shll
pop
dec
ljmp
ja
mov
xor
mov
fs
stc
ja
sub
arpl
xchg
fcoms
jae
mov
leave
push
test
and
nop
sahf
adc
jo
or
jecxz
insb
sahf
xchg
cli
lock
data16
clc
fidivl
bound
mov
xchg
out
int
int
and
and
sbb
xor
mov
mov
mov
test
dec
and
repnz
push
jle
sbb
outsl
into
lds
fs
sub
pop
fldl
nop
fsub
shll
out
in
sbb
dec
xor
lea
mov
movb
or
mov
mov
cmp
xchg
out
xchg
or
xor
sbb
andl
iret
fwait
add
rcrl
pop
insb
mov
add
xchg
adc
push
in
out
xor
lret
or
movsl
cmp
shlb
mov
add
dec
repz
inc
and
cmpsb
xor
pop
pop
lcall
xor
jo
xor
mov
xchg
scas
jae
lds
out
lret
sbb
xor
sarb
es
dec
je
or
mov
lret
shlb
sahf
or
mov
je
push
fdivrl
cmp
aaa
or
notb
jb
cmp
int
scas
sbb
sbb
xchg
pop
and
movsb
or
scas
add
ss
scas
jge
out
movsb
dec
xor
js
mov
mov
mov
adc
pushf
repz
inc
and
mov
inc
xchg
fs
test
test
test
fidivl
pop
add
pop
cmpsb
or
movsb
cmp
cli
inc
mov
sub
out
or
inc
lods
push
inc
fldl
les
cmp
mov
add
inc
add
ror
testl
aas
push
addr16
fwait
cmpsl
push
iret
jmp
cltd
test
ds
ret
mov
dec
pop
push
rorl
adc
xlat
cwtl
psrlw
mov
aad
arpl
xchg
addr16
adc
lahf
ljmp
fcmovnb
and
notl
movl
test
ret
adc
int
xor
add
orb
push
pop
daa
ljmp
loopne
jbe
xlat
sbb
in
mov
scas
cmp
lret
or
lods
mov
pextrw
fs
addb
aas
mov
push
popa
xchg
stos
push
or
rcll
mov
outsl
cmp
pop
aam
push
mov
sub
mov
pop
jae
fldt
and
jle
mov
cltd
aam
lret
xchg
fistpll
adc
testl
fdivs
pop
movsb
loopne
sub
push
xor
loop
ret
mov
repz
lds
jne
daa
inc
inc
mov
ficoms
or
fsubp
sub
mov
and
mov
aad
lgs
aad
pop
xchg
push
xor
push
mov
aaa
mov
stos
sahf
cmp
jb
test
fsts
sbb
leave
mov
nop
cmp
lock
cmp
lcall
popf
mov
pop
cli
rcrw
idiv
frstor
push
cmp
pop
cs
or
dec
rcll
outsl
jle
int3
mov
pushf
out
jmp
loopne
pop
insl
test
lret
int
shrl
mov
imul
add
inc
push
ret
adc
cmc
jmp
ja
mov
push
cmp
arpl
or
sahf
test
add
jbe
or
loope
xor
test
mull
and
dec
cltd
inc
lahf
testl
sbb
ss
fldl
pop
mov
adc
imul
inc
jb
add
sbb
push
clc
mov
lods
lods
adc
and
orb
dec
test
mov
ss
or
add
sbb
inc
cmp
inc
ficoml
loopne
jo
orb
xor
pop
cmpsb
das
jo
push
mov
xorl
xchg
popa
inc
mov
scas
int3
push
or
out
push
add
adc
and
sbb
mov
mov
out
into
mov
sub
lods
push
rolb
out
jne
sub
or
adc
dec
fsubs
movsl
in
mov
adc
clc
mov
pusha
xor
fs
jge
daa
sbb
push
test
xor
cltd
int
stos
lret
sbb
jg
fcmovnbe
jle
and
gs
xchg
and
imull
lret
sti
pop
lods
in
jmp
pop
xor
pusha
outsl
sahf
sti
jno
xlat
test
lcall
rcl
pop
sbb
and
push
ja
dec
pop
sub
fsubr
fwait
mov
sbb
stos
adc
jg
outsb
movsb
imul
sub
jne
sti
fcmovbe
pop
jg
cmp
cltd
movsb
adc
push
jmp
pop
adc
jl
arpl
inc
push
or
test
jo
dec
sti
ljmp
dec
popa
rorl
and
push
jmp
sbb
rcrb
and
fdiv
jns
lcall
or
aam
lea
inc
mov
dec
out
fwait
test
sub
icebp
lahf
cmpsl
sahf
aas
into
mov
lcall
popa
sbb
aaa
mov
insb
addb
jo
stos
sub
push
add
adc
cmp
dec
cmpsl
loope
xchg
cmpsb
pop
xchg
imul
dec
cmp
mov
jne
mov
stc
inc
sub
in
cmp
add
pusha
and
dec
test
iret
jb
lahf
push
push
ljmp
popf
loopne
jmp
stos
dec
jns
adc
cld
mov
dec
mov
xchg
stos
arpl
lahf
bound
push
in
sbbb
insl
ds
cmp
add
jl
fiaddl
cmpsl
lock
or
std
icebp
or
js
push
data16
in
lds
inc
fidivl
pop
or
inc
mov
jne
fisttpl
xor
daa
pop
dec
push
stos
jle
stos
hlt
xchg
xorl
xor
in
jle
mov
jl
call
into
je
lds
and
cmp
imul
adc
push
cmp
mov
das
mov
xor
pop
inc
loopne
push
loopne
ret
fildll
orb
jecxz
call
adc
dec
orb
aam
add
iret
pop
mov
sbb
clc
fstpl
inc
mov
fimull
in
inc
loope
sbb
mov
xchg
xchg
inc
fcomip
imul
mov
dec
pop
incl
pop
jl
xor
sti
addr16
xor
das
out
lds
mov
int3
daa
fnstcw
jb
sub
jb
pop
mov
subb
xor
jecxz
ja
idivb
mov
xor
mov
dec
outsl
mov
mov
pop
sbb
jl
or
jle
repz
addr16
push
push
test
mov
sub
repz
pop
scas
imul
dec
mov
sub
mov
cmpsb
pop
push
add
mov
in
mov
std
dec
inc
xchg
pushf
mov
dec
rcrb
adc
cli
mov
loopne
and
xor
and
and
push
hlt
dec
or
push
insb
mov
mov
adc
in
mov
loopne
sbb
fstps
push
loop
in
xchg
sti
mov
lea
bnd
or
loope
pop
addr16
xor
test
push
adc
je
mov
and
xchg
test
sub
jnp
and
aam
sbb
and
cmp
or
jb
adc
bound
add
xchg
adc
orb
rorl
mov
insl
test
push
push
movsb
sub
mov
pop
cli
adcl
and
or
lods
mov
push
out
xlat
pop
ret
out
and
into
mov
mov
or
cli
jb
je
int3
cwtl
jp
xchg
xchg
inc
or
xchg
mov
call
push
push
dec
hlt
jl
mov
xchg
cmp
inc
sbb
push
jle
cmpxchg
inc
rcll
cmp
fs
mov
fldt
insb
jne
push
in
sahf
inc
mov
push
cmp
jge
sub
pop
dec
mov
mov
xchg
je
clc
int3
nop
mov
lahf
mov
inc
daa
mov
out
pop
lcall
ftst
xor
pop
jne
cld
xlat
arpl
mov
loopne
lret
pushf
ds
xchg
or
jne
enter
lea
inc
adc
lea
fldt
push
insl
xchg
xchg
dec
pushf
jo
js
lret
pop
js
mov
push
imul
mov
call
push
mov
hlt
mov
push
jno
push
test
test
pop
shlb
js
inc
pop
lahf
or
push
ret
adc
popa
add
icebp
rcr
sti
xor
shrb
or
adc
and
mov
add
xor
js
jl
cwtl
pushf
push
mov
adc
pop
jp
pop
testl
xchg
in
rorb
mov
lods
imul
pop
daa
inc
addb
in
movsb
dec
pop
inc
cltd
mov
inc
int
movsl
out
add
jg
jns
mov
mov
xor
cmp
mov
push
hlt
movsb
lods
lea
das
cs
sbb
fstps
cmp
gs
pop
imul
pop
shrb
mov
cwtl
pop
inc
scas
xchg
or
adc
arpl
push
aaa
push
mov
add
aaa
loope
jmp
roll
cmp
mov
mov
scas
jae
stos
jmp
push
mov
sbb
out
mov
push
hlt
popf
clc
jnp
popf
xchg
jl
cmp
jg
ffree
data16
dec
popa
xchg
gs
pop
push
inc
push
cs
cmp
push
scas
das
ds
jnp
fwait
jmp
ret
ret
insl
sub
adc
jmp
push
test
loope
or
xchg
fcmovb
jbe
xor
cltd
push
jns
push
push
orb
ds
sbb
insl
rol
stos
jle
sub
xor
out
cmp
mov
dec
mov
fstps
ss
and
sbb
cmp
insl
insb
lea
pop
mov
sbb
mulb
adc
cld
in
fimull
je
out
xchg
and
ja
mov
add
cld
sbb
and
lea
repnz
imul
pop
icebp
cmp
pop
rclb
lea
mov
jmp
sub
mov
cmp
mov
enter
jb
adc
fwait
and
fisubs
jnp
mov
loop
push
push
mov
into
pop
mov
js
cmp
icebp
gs
sbb
iret
ljmp
mov
repnz
call
or
les
pop
push
jge
mov
cmp
aad
lret
mov
dec
jbe
popa
mov
cmpsb
shl
popa
sub
jg
fcomp
mov
nop
pop
add
insl
pop
push
lods
sarl
jg
dec
fbstp
mov
adc
xor
xlat
mov
aaa
daa
mov
pusha
adc
push
push
push
shl
out
or
sub
xor
push
fcoms
lock
xchg
punpckhbw
stos
icebp
fisttpll
ret
adc
shrl
sbb
hlt
mov
mov
jmp
sbb
dec
sahf
pop
mov
loopne
sbb
mov
mov
jne
sub
loopne
mov
push
push
stos
shrl
jnp
add
sub
sub
mov
ja
inc
mov
and
int
popf
dec
mov
ja
mov
sti
je
xchg
push
int3
or
test
rorl
jle
xchg
fldcw
mov
ss
inc
push
inc
and
enter
xlat
mov
movsb
test
pusha
test
cmpsb
fisttpl
sub
lcall
in
out
mov
cmp
push
fwait
dec
ficoms
pop
xchg
inc
fistl
enter
cld
pop
loopne
pop
aam
mov
in
mov
jae
sub
stos
sub
xor
dec
iret
jg
mov
mov
in
add
mov
std
mov
call
fdivrs
imul
xor
aas
add
sbb
cs
into
imul
dec
cmp
xor
lds
add
push
lock
sbb
bound
out
test
inc
movsb
sub
pop
xor
sbb
lock
mov
in
pop
add
push
sbb
sub
cld
jno
inc
cmpl
popf
mulb
aam
push
lret
dec
cmc
dec
jo
test
fadds
cmpsl
cmp
loopne
test
popf
push
add
mov
xor
sub
or
adc
xchg
sub
rcrl
and
je
stos
add
sub
sbb
mov
inc
movsl
push
mov
jl
mov
into
and
mov
pop
ja
nop
stos
aad
ljmp
subb
rcll
push
insl
xchg
mov
pop
mov
jmp
jle
cwtl
pop
pushf
xchg
out
jp
hlt
fisttpll
idivb
pop
rcl
cmpsl
and
pop
jae
fldl
fwait
out
pop
icebp
jmp
cmp
fcom
rclb
pop
push
xor
pusha
add
xor
dec
jge
arpl
in
xlat
inc
pop
movsl
icebp
and
dec
in
pop
jmp
orb
mov
divl
out
je
and
push
outsl
dec
arpl
adc
jmp
mov
std
das
movsb
fmuls
fisttpll
pop
pop
in
mov
xor
adc
cmpsb
in
add
pop
mov
call
sti
or
stos
test
ja
mov
or
mov
loop
cmp
in
movsb
jns
pop
and
fnstcw
mov
sti
pop
cmpb
idivb
add
stos
addr16
xchg
push
inc
pusha
cmp
icebp
xchg
cmp
call
jecxz
icebp
clc
jne
repnz
popf
pusha
fisubrl
popf
jb
xor
fs
outsl
sub
ud0
sub
pop
pop
and
lret
cmpsl
inc
inc
lret
add
ljmp
dec
dec
mov
pop
pop
mov
stos
jge
push
test
push
pop
pop
sti
jp
mov
into
out
jl
sbb
sti
mov
and
dec
ja
push
cmp
cmp
test
jne
and
inc
leave
xor
lea
xor
and
inc
xor
fiadds
cmp
cltd
or
pavgw
scas
mov
inc
in
gs
je
and
in
hlt
xchg
iret
fidivrs
sub
mov
pop
push
call
daa
aad
or
sub
jae
rclb
call
xor
les
adc
loop
lcall
or
add
dec
dec
fcomps
test
call
mov
call
sbb
stos
daa
int
cld
call
add
adc
movsl
pop
pop
or
addr16
lock
push
aas
fildl
je
cmp
fdivs
jb
and
inc
jl
je
xchg
and
inc
in
sub
and
or
mov
rcrl
mov
ret
pushf
pop
adc
xchg
push
rorb
mov
sub
not
dec
mov
cmp
out
push
dec
and
mov
js
jge
push
mov
daa
lcall
out
das
inc
xchg
cmpsl
pusha
sbb
je
push
cmp
jnp
les
xchg
insl
sub
sbb
cld
fidivrs
sub
cmp
cli
pushf
jge
into
mov
push
mov
fwait
out
xorb
adc
stc
std
xor
cmp
ljmp
lret
lret
xchg
int
leave
jo
xlat
dec
mov
and
lret
movsb
cmp
jmp
movsl
add
sub
add
sub
and
and
inc
xor
cmpsb
inc
push
xchg
dec
arpl
dec
sbb
xchg
jge
xchg
inc
or
inc
push
imul
xchg
dec
and
movsb
cmp
mov
xor
call
mov
ret
imul
insl
jb
rcrl
in
inc
jmp
push
int3
outsl
mov
shl
outsb
popf
inc
adc
dec
pop
arpl
and
jo
mov
xor
jle
xchg
mov
push
fwait
clc
mov
adc
loopne
inc
push
mov
push
mov
das
lock
pop
or
imul
or
mov
cli
cmp
lret
xchg
pop
int
xor
fisttpll
jo
insl
dec
fisubrs
out
mov
jnp
lods
in
jmp
lcall
push
je
aaa
std
js
mov
adc
inc
sbb
and
and
jae
repz
fs
mov
mov
dec
mov
lods
or
lret
cs
jp
inc
mov
xor
mov
sbb
setne
jle
nopl
sbb
imul
or
imul
and
inc
mov
stos
pop
lcall
pop
and
hlt
out
lea
xchg
adc
fcoml
mov
hlt
push
lea
idivl
pop
cmp
in
and
mov
fs
sub
stos
fistpll
dec
mov
andb
mov
cmpl
popf
pop
jg
mov
or
push
jmp
inc
pop
rorl
test
es
cmp
pop
sbb
push
and
in
xlat
jmp
lock
jp
and
jb
cmp
jb
push
fistl
imul
mov
xor
mov
jle
out
fmuls
pop
xchg
mov
fildl
pop
test
mov
cwtl
xchg
cwtl
dec
enter
in
sub
test
cs
sti
insl
idiv
pop
xor
mov
pop
fdivr
sub
gs
xor
xchg
xchg
into
and
pushf
mov
mov
xor
out
js
or
mov
push
inc
push
lock
xchg
enter
or
fstpl
add
loope
mov
andb
xchg
mov
push
cwtl
cmp
push
lret
js
in
pop
mov
repnz
lds
lock
dec
subl
cmp
mov
dec
ljmp
shll
test
pop
mov
test
add
mov
fcoms
popf
out
popf
or
je
int3
orb
push
cmp
jle
sahf
fcmovnbe
sbb
inc
and
in
out
sub
sub
pop
dec
mov
shrl
insb
pop
sbb
jnp
adc
rcll
or
and
dec
adcb
xlat
adc
in
sti
movsb
sbb
xchg
sbb
push
ja
or
and
lahf
pusha
jnp
jp
mov
pushl
ror
add
rcr
data16
in
bound
imul
fildl
dec
cmp
mov
or
pop
sbb
xlat
dec
mov
xorb
cmp
or
xchg
iret
add
or
cwtl
aad
inc
daa
add
leave
test
imul
and
idiv
in
pop
cmp
xorb
sbb
sub
push
lret
lahf
aas
negb
shll
jne
adc
add
mov
mov
outsl
add
push
addb
xor
cltd
dec
cs
cmp
sub
xchg
mov
inc
dec
jnp
ficomps
andps
repnz
push
fs
mov
or
jb
sahf
xor
outsb
xchg
fimuls
pop
mov
scas
cmp
lods
mov
xchg
and
lods
pop
in
add
daa
mov
adc
adc
pop
push
out
sbb
mov
pop
dec
pop
xlat
or
clc
fistl
pusha
cmc
ss
mov
aad
int3
push
outsb
jge
out
insl
dec
adc
test
pop
lret
mov
mov
mov
jl,pn
and
jecxz
loope
cltd
lcall
mov
shl
pusha
cmp
bound
sahf
fisubl
ss
fsts
mov
aad
sahf
test
fs
insl
cltd
mov
xor
popf
push
inc
jns
mov
dec
sbb
aam
jg
scas
sub
push
push
add
shl
data16
lods
pop
divb
rclb
hlt
loopne
xchg
mov
pop
mov
popa
mov
icebp
mov
fidivl
ret
inc
fnsave
rolb
subl
cmp
mov
out
xchg
lahf
test
adc
daa
insl
inc
pusha
add
adc
iret
stos
cld
and
ficoms
loopne
push
xor
out
sarl
inc
cs
das
pop
fs
lahf
sbb
pop
loope
xchg
insb
jge,pt
fnstsw
xor
bound
pop
es
jg
xor
jne
push
jo
repnz
inc
dec
mov
fiadds
fnstcw
lret
sar
push
dec
shll
pushf
and
and
jmp
inc
xor
inc
aam
xor
mov
fdivr
roll
adc
cld
push
mov
push
mov
push
cmp
mov
lods
mov
adc
int
sahf
rcr
push
loope
xchg
ret
jb
push
outsb
cmc
push
inc
sbb
mov
push
lock
push
fneni(8087
mov
flds
fsts
cwtl
mov
fsts
sbb
test
mov
ljmp
cmp
cwtl
out
lock
sysenter
pop
aas
bt
sbb
xor
inc
lods
into
cld
xchg
sbb
sub
fstp
ss
dec
jne
test
in
mov
fsub
xchg
pop
ljmp
xchg
mov
lea
rcrl
es
insb
inc
mov
cmc
xor
in
push
add
iret
push
jmp
loope
lock
pop
popf
push
push
mov
call
enter
add
leave
inc
mov
xchg
sub
mov
jp
jecxz
adc
sub
add
movsb
xchg
xchg
push
inc
mov
mov
cmpsb
andb
insl
test
popf
in
xchg
xchg
or
xchg
out
fstl
popf
cli
int
popa
pusha
jg
faddl
sub
push
inc
mov
test
add
out
sub
push
mov
inc
xchg
addr16
xchg
mov
xchg
sbb
and
ds
jp
jmp
fisubl
movsb
lock
inc
jge
mov
addr16
fiaddl
pushf
aas
into
inc
add
mov
add
pop
xchg
rolb
pop
mov
push
stos
dec
sub
in
sbb
xor
fstl
fcmovnu
std
adc
fdivp
notl
dec
nop
cmp
jnp
dec
mov
or
sti
repz
xor
loop
xor
popf
lods
cmp
leave
add
dec
lock
xor
out
jo
adc
movsb
sbb
xchg
push
lcall
xor
and
adc
dec
adc
iret
jno
dec
fs
stos
insb
cli
lahf
out
stos
insb
out
cmc
stos
gs
sbb
sbb
cwtl
dec
and
mov
int
aaa
jg
cs
lcall
push
pop
popf
and
inc
imul
mov
jp
sbb
mov
int
lret
idiv
out
jmp
fnstcw
test
ljmp
shr
iret
inc
add
testl
push
movsb
lahf
jns
adc
and
pusha
mov
dec
add
xchg
or
adc
mov
and
jns
xor
xchg
rcrb
push
iret
test
aad
pop
inc
ret
mov
xor
xlat
jae
into
insb
push
adc
mov
shrb
js
cmp
sahf
mov
lahf
and
push
mov
in
lcall
pop
je
add
mov
scas
push
push
push
aas
dec
cltd
add
pop
xchg
dec
out
adc
pop
xchg
push
or
lahf
repnz
das
iret
inc
jmp
mov
add
mov
int3
les
mov
jl
aas
shl
arpl
cmp
les
popf
lock
js
fldt
mulb
inc
jae
dec
dec
fs
ss
lods
ja
in
xor
and
adc
call
pop
pop
movsb
movsb
addr16
jp
add
aas
inc
iret
mov
outsl
jb
addr16
jg
jg
mov
movsl
sbb
and
add
mov
inc
jmp
hlt
fdivr
mov
dec
and
fs
push
push
into
mov
outsb
aas
inc
shl
arpl
dec
bound
loop
cmp
negb
out
iret
inc
sahf
iret
jo
and
push
and
xchg
and
ljmp
and
pop
test
int
sbb
cmpl
mov
sub
mov
xchg
mov
ror
fcmovbe
lock
dec
mov
sub
mov
inc
and
inc
or
push
push
popa
inc
out
rcrb
lret
cmpsb
les
fnstsw
mov
ja
ret
adc
push
lea
cmpsb
inc
dec
inc
dec
jno
xchg
paddb
ljmp
out
adc
mov
fisubrl
mov
popf
mov
into
and
sub
test
inc
stos
sub
and
cmp
cmpsl
das
mov
adc
jno
cld
call
popa
dec
shll
cmpsl
sbb
mov
add
mov
imulb
lret
sub
push
cld
dec
je
out
sahf
mov
adc
jle
sbb
dec
rcl
sub
xchg
out
aad
dec
push
push
push
test
adc
xchg
mov
stos
jecxz
sbbb
xchg
out
inc
mov
cmp
or
sbb
adc
out
fldt
push
jb
mov
xchg
sub
movsb
or
bound
sub
cld
mov
mov
out
sti
xchg
push
in
sbb
sbb
movsl
sbb
pushf
mov
lea
into
or
jnp
mov
out
leave
adc
push
shrb
sbb
iret
testl
push
stos
or
jmp
jo
bound
mov
test
xor
roll
xchg
pop
shrb
loop
aas
mov
es
shr
lahf
push
sbb
sahf
mov
leave
push
cmp
mov
cmp
int3
jbe
xchg
shlb
jb
aas
mov
repz
mov
jnp
daa
insl
popf
out
leave
add
out
lret
xchg
cmc
test
mov
outsl
mov
fs
mov
out
add
and
lock
call
push
pop
xor
and
out
repz
das
jae
sahf
jns
mov
jle
daa
jecxz
inc
sti
shll
in
jo
jae
and
adc
cmpsb
dec
push
fcoml
repnz
xor
mov
out
test
jecxz
adc
push
out
pop
push
shll
mov
cmc
pop
daa
push
adc
or
adc
jne
mov
loopne
or
cld
jno
push
fcmove
or
add
or
add
sub
ficoml
jne
ljmp
fisttpll
xchg
jmp
sbb
pop
mov
movsb
push
daa
dec
shrb
or
and
insb
loopne
mov
and
movsl
out
cmpsl
jo,pn
sbb
pop
inc
pushf
sahf
insl
ss
xchg
fimull
mov
mov
inc
cli
mov
ds
lret
cli
out
jecxz
cmp
insb
out
ja
or
xor
dec
or
outsl
jp
pop
loop
fistpll
data16
or
mov
push
test
out
test
lret
lahf
jmp
inc
mov
mov
cltd
insl
xchg
xchg
add
adc
sahf
int
insl
int
mov
and
imul
cltd
or
adc
loope
aad
scas
stos
cmp
out
push
jl
imul
ja
xchg
data16
ss
mov
ljmp
sub
cmp
lret
jle
les
loop
mov
cmpsl
inc
dec
xor
fidivrl
push
imul
cli
sbb
cltd
xchg
pxor
pop
mov
push
or
scas
lods
fiaddl
sahf
dec
sub
inc
jmp
cmpsl
pop
push
arpl
or
aas
dec
loopne
lods
push
out
mov
mov
repz
aam
repz
lds
scas
or
add
out
out
imull
dec
sbb
ljmp
lahf
imul
jns
push
lahf
lcall
mov
ds
inc
mov
repnz
push
push
and
out
test
push
int
mov
push
adc
xchg
sbb
sub
pop
push
or
std
push
push
cmp
pop
in
leave
pop
stc
push
out
jo
pop
push
push
sub
xchg
stos
cwtl
mov
and
out
mov
add
imul
lods
scas
pusha
out
xor
lock
mov
data16
dec
jp
lret
in
sub
sbb
push
xchg
inc
dec
ss
lcall
repz
push
mov
pop
mov
ja
cmp
inc
cmp
inc
dec
loope
jbe
sub
fmul
and
sbbl
mov
push
movsl
nop
ds
xchg
loopne
jns
sub
cmp
rcrb
outsl
and
cmp
fadds
jp
inc
subl
subb
call
scas
dec
push
fisttpll
aas
inc
dec
rclb
sub
mov
sarb
dec
jge
fnstenv
movsl
lock
scas
shll
loop
into
daa
rcrb
xchg
ret
xchg
out
or
adc
rcrb
dec
pop
pop
pop
jmp
pop
out
cmpsb
xchg
outsl
gs
fnstenv
push
jns
aam
inc
and
dec
scas
orl
dec
xlat
adc
cmpsl
stc
push
ljmp
je
cmpsb
dec
or
pop
ss
and
test
rorb
cmpb
addb
push
nop
push
sbb
aad
push
inc
ds
or
js
shrl
call
or
mov
lods
dec
mov
jecxz
rclb
sahf
jae
jp
fdivrl
mov
mov
push
mov
arpl
popa
mov
in
xor
add
in
mov
inc
in
lea
inc
dec
mov
pop
je
push
push
fidivrl
xchg
loope
cvtpi2ps
push
popa
xchg
imul
pushf
xor
fistpll
dec
mov
sub
jb
imul
hlt
add
cwtl
movsl
addr16
aam
js
icebp
lret
stc
push
add
int3
push
push
mov
js
fidivl
loope
shll
inc
mov
xchg
repnz
stc
inc
loopne
sti
mov
les
shrb
mov
bound
es
icebp
sub
int3
movsb
pop
mov
rol
xchg
and
cmp
subb
dec
sbb
dec
pop
sbb
sbb
iret
push
cmp
cs
aas
push
xchg
xor
jl
lret
and
jle
mov
add
lods
sti
ljmp
les
and
sahf
xor
pop
mov
cld
mov
xchg
fisttps
push
jmp
lods
push
mull
aad
add
add
push
ds
add
adc
bound
adcl
scas
scas
push
mov
xor
cs
rcl
mov
push
movsl
lods
mov
sbb
leave
fiaddl
mov
jmp
inc
add
vmovmskps
or
test
or
xchg
sbb
mov
call
call
cld
xchg
jg
push
adc
jno
pop
xchg
pop
dec
mov
xorb
ja
push
or
stos
mov
xchg
sbb
sahf
outsb
pop
pop
jbe
je
ret
dec
dec
mov
push
nop
dec
push
mov
xchg
insb
ss
test
insb
mov
inc
pusha
jnp
shlb
cs
push
push
js
inc
lret
inc
ljmp
push
or
jnp
xor
dec
data16
int
fs
xor
or
jbe
mov
out
adc
push
int
xchg
ret
movsb
mov
out
les
mov
jb
or
out
pop
and
leave
mov
sbb
pop
ret
jp
add
sub
pop
mov
dec
rclb
mov
lock
je
das
or
and
mov
xlat
leave
mov
aas
jmp
jmp
rorl
fldln2
stos
push
cmpsb
sbb
jge
cli
cmpsl
xor
push
sub
xchg
imul
mov
pushf
add
or
rcrl
in
hlt
mov
testl
mov
xchg
gs
mov
insb
xor
cmp
aam
sub
mov
shl
in
repz
ss
sub
inc
movsl
xchg
das
sub
push
mov
mov
in
inc
aas
notl
icebp
aam
out
add
add
ljmp
mov
test
repz
jne
mov
mov
push
orb
aaa
loop
push
mov
pop
mov
cwtl
push
inc
test
inc
mov
out
dec
lods
div
scas
sbbb
sbb
inc
adc
aam
sbb
fidivs
int
dec
dec
fdivs
sub
fistpll
pop
xchg
push
nop
push
adc
and
pop
cmpl
mov
sbb
cli
xchg
in
lods
xchg
int
cmp
rorl
push
sub
push
dec
mov
std
js
pop
rorb
jge
push
fwait
or
out
pop
cvtpi2ps
adc
adc
or
dec
mov
xor
add
jle
jl
cmp
ret
clc
scas
cmpsb
scas
fwait
and
jbe
dec
xchg
pop
inc
xlat
dec
jmp
xchg
push
data16
lods
rclb
sub
xchg
lret
outsl
jg
jb
jecxz
cltd
pop
xchg
mov
jecxz
cld
loope
lahf
call
ret
gs
popf
xchg
mov
mov
rolb
out
cltd
sub
test
cld
inc
inc
adc
inc
ret
insb
in
mov
clc
stc
repz
cmp
in
push
fldenv
std
je
lcall
sub
inc
loopne
lea
mov
fadd
lret
mov
mov
mov
and
adc
mov
into
cld
jo
insb
or
aas
shrl
rcrb
or
fadd
iret
arpl
push
sti
in
cmpsb
xchg
or
jmp
jg
cmpsb
add
and
cmp
jbe
roll
pop
aad
shlb
push
lods
sub
mov
mov
test
and
test
pop
sbb
add
sbb
test
jg
adcl
mull
idiv
enter
cld
adc
int
jecxz
adc
jbe
xchg
push
push
int3
rorl
xor
cmpsl
nop
dec
adc
movsl
jno
mov
push
sbb
shrb
add
inc
pop
imul
loop
fsubp
dec
mov
test
scas
dec
add
xlat
cmc
inc
mov
sub
mov
adc
dec
xchg
repz
xchg
cmpsb
fmuls
mov
leave
pop
jmp
adc
xchg
add
push
xlat
rorb
lret
cmp
call
popf
jbe
jne
or
cmp
cmp
xchg
sbb
adc
pop
add
addb
negl
pushf
rolb
nop
xchg
xchg
in
fsubl
arpl
in
test
les
xchg
testl
and
pop
adc
sub
pop
mov
mov
jno
push
push
mov
ret
mov
adc
sahf
out
jge
mov
sti
mov
and
sbb
pop
push
stos
jp
mov
movsl
push
les
int
rcll
xor
call
stc
out
add
cmp
xchg
mov
ss
mov
sar
outsl
push
cmp
gs
stos
testb
or
and
mov
fidivrl
push
je
push
insl
jae
mov
pop
shll
cmp
mov
and
xchg
lahf
cmp
repnz
inc
insl
in
in
dec
dec
mov
xorb
xchg
inc
mov
test
inc
and
jns
and
insb
pushf
and
pop
jge
mov
fs
sub
fstpt
pop
mov
imul
outsb
inc
dec
mov
pusha
lock
xor
test
fiaddl
fnstsw
pushf
ret
sar
or
dec
xor
push
mov
aaa
push
std
mov
pusha
enter
lds
mov
cmpl
aam
pop
mov
dec
or
repnz
pop
jae
shlb
out
ss
sbb
fwait
push
mov
dec
cltd
cmc
int
cmp
or
dec
jmp
daa
xor
int3
je
lods
ds
lods
mov
dec
out
cli
xor
pextrw
mov
daa
stos
stc
out
push
xor
xchg
push
mov
addl
add
scas
repz
sub
addr16
add
shll
popa
insb
or
jmp
ljmp
pop
mov
inc
mov
inc
xor
add
add
add
jle
dec
fs
fsts
add
inc
xchg
pop
jns
movsl
fnstsw
mov
xchg
and
fdivrl
loop
sti
les
pop
outsl
push
and
or
pusha
xor
cmc
cmpsb
xor
cltd
inc
and
sbb
mov
mov
cmp
dec
dec
scas
inc
mov
daa
or
rorb
push
mov
adc
mov
test
push
inc
mov
adc
xchg
sarl
in
gs
shrb
fimull
inc
push
pusha
mov
bound
mov
lcall
lods
call
xchg
iret
loop
adcb
inc
pop
adc
push
aad
sub
or
in
popa
cmp
mov
pusha
movsl
jp
flds
xchg
xchg
xchg
dec
mov
push
icebp
xor
sub
rcrb
or
and
mov
cmp
push
jnp
cmp
add
jg
pop
inc
aam
or
in
lods
sub
inc
test
negb
aad
je
aam
inc
mov
jg
or
dec
nop
orb
lahf
push
lcall
rorb
test
dec
push
xor
lock
cltd
add
int
push
rcr
inc
into
rcrb
pop
decb
fstps
add
enter
inc
add
jne
pop
xor
sbb
leave
ss
divl
adc
adcl
sub
lret
fxch
or
pop
lret
xchg
sar
dec
inc
shlb
aam
stos
cmp
dec
sarb
and
es
and
enter
lcall
rol
xchg
stos
stc
fs
sub
ret
je
push
ret
pop
sbb
xor
mov
testl
lret
or
dec
add
ret
and
jmp
or
mov
push
loopne
pop
add
aad
cld
lret
mov
das
pop
es
add
hlt
test
mov
sub
adc
stos
adc
push
popf
pop
or
adc
sub
shll
and
sub
pushf
sub
xor
adc
test
adc
out
gs
popf
ret
js
adc
aaa
mov
es
jne
xchg
or
into
in
sub
loop
jecxz
or
popa
jns
dec
mov
in
xor
jg
push
inc
dec
jl
aam
mov
sub
push
sub
sbb
cmpsl
outsb
pop
sar
mov
frstor
pop
xor
mov
repz
inc
add
push
test
aad
and
ljmp
or
insb
pop
pop
push
mov
push
add
mov
jl
clc
xor
cmc
push
clc
pop
xor
jns
adc
or
in
push
inc
decb
mov
jne
jns
sub
pop
inc
cwtl
mov
dec
xor
clc
cld
jmp
orl
jecxz
adc
lcall
push
and
ljmp
aaa
or
rcll
repnz
scas
outsl
mov
adc
mov
jns
pop
push
ljmp
xchg
pop
pop
lret
fwait
data16
sub
jmp
push
ret
out
test
cmc
mov
aaa
sbb
inc
pop
data16
ljmp
xchg
rol
mov
pop
push
jmp
xor
in
adc
lahf
push
dec
jp
mov
stos
jmp
rorb
imul
fiadds
mov
pushf
ja
pop
mov
in
ret
lret
test
lret
fiadds
test
in
sbb
idiv
data16
scas
mov
push
adc
lcall
push
adc
call
outsl
cmp
scas
cmc
dec
and
inc
mov
fldt
xchg
jle
cmpb
sub
and
pop
pusha
fdivs
in
and
fwait
mov
insl
popf
in
cli
inc
push
call
push
push
mov
jo
fs
enter
clc
leave
push
mov
cmp
and
out
or
shrb
sbb
mov
jmp
xchg
outsb
outsl
sbb
dec
test
fistpl
push
or
jns
adc
lods
jg
pop
mov
dec
and
aad
lret
scas
mov
shl
mov
nop
imul
fs
bound
rclb
mov
push
push
mov
mov
pop
cmp
out
stc
mov
idivb
xchg
inc
mov
dec
inc
insl
lods
arpl
repnz
jo
repz
inc
pop
jle
jp
mov
mov
shrb
int
sub
adc
mov
pop
mov
iret
ds
add
inc
cmp
fs
sbb
mov
fisubs
lcall
jb
jno
mov
ds
add
outsb
adc
dec
cmp
loopne
jmp
mov
les
cmc
lods
aad
fidivrl
mov
loope
iret
movsl
mov
jb
inc
insb
pop
mov
jbe
je
mov
ret
mov
clc
cltd
arpl
lea
fcmovbe
xchg
dec
and
rcrl
xchg
and
fwait
push
aas
xor
xchg
jg
sub
cmp
cmp
push
push
sub
jb
add
cmp
out
jp
jno
push
xchg
and
mov
fstpt
mov
into
movsb
pop
in
cmp
dec
or
or
or
aad
fsubs
outsb
inc
cmc
hlt
inc
sbb
aas
or
push
dec
daa
flds
mov
mov
idivb
bound
incb
jns
cmp
pop
sub
lahf
dec
dec
rolb
shll
mov
jmp
inc
push
popa
pop
cmp
mov
and
into
movsb
sbb
ret
push
out
sbb
add
inc
out
pop
pop
fisubrl
jp
leave
pop
enter
or
nop
pop
add
dec
mov
xor
icebp
movsl
loop
mov
hlt
sub
mov
das
idivl
sub
ficoms
cmp
push
cmp
pop
test
scas
ja
xor
sbb
sbb
sub
sbb
mov
pusha
jb
lods
pushf
rclb
xor
popf
pop
aaa
push
repz
mov
xor
push
cs
test
popf
pop
orl
je
mov
fucom
pop
dec
js
daa
mov
mov
adc
cli
in
sti
mov
mov
daa
fisttpll
mov
adc
jg
cmpsw
loope
jg
movlps
shll
test
mov
je
pop
pop
jp
inc
stos
xor
sbb
mov
lret
mov
cmp
out
push
xchg
push
jl
iret
xchg
filds
rcrb
dec
int
imul
test
mov
aas
dec
add
or
sub
aad
xchg
fnstsw
push
mov
jno
push
mov
je
jae
out
inc
es
in
mov
cmp
adc
dec
into
outsl
sub
les
std
and
ljmp
fcomps
in
gs
sub
inc
jg
jg
out
cmpsl
xchg
insb
lcall
outsl
lods
test
js
test
jl
popf
mov
sbb
adc
cmpsl
or
xchg
inc
mov
decb
sbb
xchg
lds
xor
or
xchg
popa
daa
dec
fldcw
xchg
notb
xchg
js
mov
jns
enter
aad
sub
movsl
jae
and
jo
or
mov
imul
cli
mov
addb
add
lock
adc
mov
fs
in
cmp
fiadds
sub
ja
sbb
mov
cmpsl
scas
inc
clc
shrb
mov
add
jbe
sub
or
movb
adcb
addr16
inc
ret
dec
inc
sbb
mov
ret
testl
test
sub
test
movsb
cltd
stos
jb
push
mov
mov
icebp
jmp
mov
movsl
and
call
lcall
sbb
stos
add
cmp
add
sbb
out
fists
or
pop
mov
out
push
dec
movsl
imul
mov
rorl
and
pusha
cld
xchg
inc
andl
test
cmc
push
pop
push
in
mov
adc
rcr
adc
jl
cltd
mov
lods
adc
or
sub
lret
push
pop
mov
or
lret
mov
cmp
inc
lret
inc
push
and
inc
jg
push
out
lds
loope
pop
jnp
in
xor
inc
jecxz
addr16
addr16
inc
ja
mov
sbb
enter
imul
pop
mov
lcall
bound
mov
jle
jecxz
dec
lahf
test
inc
clc
outsl
or
rcr
or
imul
sbb
dec
dec
rol
and
or
out
inc
cmp
pop
xchg
fildl
xor
dec
inc
add
lret
imul
cltd
fists
in
or
call
xor
and
aaa
daa
insb
adc
ja
mov
pop
stos
loopne
push
rcl
icebp
cmp
cmp
and
push
mov
cmpl
pop
dec
sub
hlt
jbe
addr16
stos
xor
jno
sub
leave
inc
cwtl
nop
mov
stos
push
dec
mov
fstl
rcl
or
stc
push
inc
fldt
popa
inc
jecxz
lods
dec
test
cmpl
xor
loope
sub
add
addr16
xor
inc
sbb
inc
inc
or
cmp
mov
cmp
cli
sbb
jns
out
mov
aam
xchg
xchg
lret
fs
aaa
push
add
lret
cltd
das
fisubrs
mov
insl
jecxz
adc
lcall
sub
repnz
lock
xor
int3
pop
xchg
sub
sbb
or
xor
mov
into
ja
pop
and
ja
aad
adc
js
aas
dec
out
jecxz
fdivrp
lds
pop
jl
or
mov
stc
or
test
scas
and
pop
adc
sbb
cmpsb
mov
mov
inc
xor
pmaddwd
mov
aad
adc
sub
xor
xchg
inc
xor
mov
lods
int3
pop
jle
rcrb
dec
add
push
cwtl
test
lahf
xchg
push
inc
inc
adc
dec
jns
mov
dec
vphaddubq
pop
add
adc
lcall
mov
mov
pushf
and
test
pushf
pop
jno
in
jle
inc
ret
mov
or
mov
pop
arpl
push
cs
adc
pop
insl
mov
pop
rolb
loopne
or
cmpsl
js
or
jo
cmpsb
and
addr16
shrb
test
cmp
push
fnstcw
sbb
daa
out
pushf
adc
pushf
lret
and
orb
movsb
lret
sbbb
mov
dec
add
rolb
mov
cmp
xchg
xor
mov
inc
enter
pop
std
push
idiv
pushf
sbb
push
js
jns
test
ljmp
loopne
sbb
dec
in
sbb
mov
add
mov
pushf
inc
push
and
scas
pop
mov
cmp
mov
or
mov
in
ret
adc
ja
jo
cmp
popa
cld
outsl
loopne
aam
jl
adc
hlt
imul
cmpsb
ds
jmp
cwtl
and
jbe
xchg
add
jecxz
add
pop
dec
outsb
mov
adc
jle
imul
loope
das
dec
jle
and
dec
cld
iret
fiadds
sbb
dec
sub
sbb
cltd
jmp
and
jecxz
jb
mov
jl
shlb
fadds
inc
inc
xchg
jmp
test
mov
inc
sbb
inc
fs
xor
xor
lret
lret
push
xor
and
pop
into
leavew
jecxz
in
testb
lahf
or
pop
ss
out
sti
arpl
mov
in
dec
sub
mov
push
imul
roll
scas
or
and
in
stc
in
aad
lods
xchg
scas
sub
xorps
incl
pop
adc
ss
imul
xchg
adc
push
es
out
cs
jecxz
sarb
mov
cmp
aam
push
mov
adc
pop
xchg
pop
fisttpl
mov
pop
push
and
push
test
pusha
or
imulb
inc
sahf
dec
and
dec
cmp
test
call
xchg
out
std
icebp
pop
jmp
jns
sahf
mov
cmp
call
xor
aad
insb
daa
sub
xlat
repz
and
loopne
daa
movsl
mov
dec
sbb
es
xchg
clc
popa
cltd
movsl
repz
sbbb
inc
adc
loopne
pop
fmuls
add
aad
sub
fisttpll
out
jmp
adc
ret
ljmp
daa
jb
adcb
pmaxub
adc
into
mov
jle
mov
push
ds
lret
mov
addr16
mov
jecxz
fcoml
sbb
xor
sub
lahf
xchg
imul
sub
add
dec
add
stc
adc
cwtl
xchg
rol
add
pop
lods
and
jle
loope
adc
aas
sub
jge
dec
loop
imul
test
mov
in
sbb
adc
insl
cld
cmpsl
stos
cltd
jmp
pusha
mov
jle
sti
jne
mov
add
iret
and
xchg
cmpsb
gs
sbb
lock
cmp
outsb
sbb
jae
je
cmp
cmp
mov
test
fidivrl
pop
cmpb
shr
mov
rcll
push
pop
lcall
mov
push
xor
mov
std
mov
mov
or
adc
add
xor
rclb
sub
push
arpl
mov
icebp
aad
int3
dec
js
push
xor
lret
or
add
and
popa
jno
js
sti
or
int
rolb
pop
mov
mov
xchg
lds
arpl
and
jno
mov
ret
daa
nop
nop
aaa
jp
bts
out
lock
push
test
es
xchg
xchg
push
fwait
repnz
hlt
test
test
inc
xor
add
xor
loopne
out
jg
sarb
test
adc
cwtl
sbb
and
shll
and
inc
dec
xor
xchg
dec
xchg
jnp
cltd
insb
mov
inc
mov
mov
jne
adc
es
jmp
cmp
lea
divps
stos
sub
sub
mov
jg
dec
fstpl
xchg
xor
dec
mov
stc
pop
mov
mov
jns
xor
cmpsb
mov
jb,pt
out
adcb
out
cmpsl
inc
shll
jne
cld
mov
xlat
jmp
ljmp
mov
fnstenv
sub
test
jno
sub
push
mov
adc
mov
or
jmp
idivb
sub
sub
add
push
pop
fld
sub
fs
mov
std
xchg
mov
das
push
jg
push
xor
mov
movsl
clc
mov
movsb
and
lret
mov
pop
add
xchg
and
dec
enter
subl
xchg
push
insl
adc
int
xchg
mov
ja
out
mov
mov
mov
lods
add
cmp
movsl
lock
jle
add
insl
lahf
add
sbb
sbb
mov
inc
mov
test
mov
dec
and
pop
or
ret
xor
cmpsb
fcoms
pop
idivl
adc
loopne
stos
cmp
and
pop
mov
bound
and
popa
jmp
jecxz
and
dec
dec
pop
lcall
outsb
add
dec
sub
adc
adc
jg
js
dec
sbb
out
imul
pop
lods
pop
pop
loopne
cmp
es
mov
xchg
xchg
dec
pop
mov
push
cmp
pop
xchg
or
sub
mov
ret
andl
dec
push
in
test
jle
jmp
pop
das
pop
out
xlat
mov
xor
cmp
xor
inc
sahf
sbb
bound
cmp
mov
int
popf
inc
ljmp
scas
jge
add
lahf
mov
sbb
sbb
xor
push
fdivl
mov
pop
enter
inc
mov
xchg
shlb
ficoml
jle
je
cld
inc
bound
test
aas
mov
sub
das
xor
icebp
mov
lret
xchg
faddl
cmp
pop
fdivp
out
stos
stc
jbe
inc
mov
inc
les
rcl
test
mov
xchg
fdivrp
sub
xlat
stc
pop
jns
hlt
inc
mull
sbb
mov
outsl
dec
pop
sbb
inc
gs
pop
loope
aad
add
jl
ljmp
cmp
xor
adc
adc
lods
icebp
mov
das
andb
or
mov
mov
jnp
jle
mov
jnp
cmp
xchg
inc
inc
cmp
add
mov
xchg
inc
into
dec
add
les
xor
pop
or
cmp
add
push
pop
mov
jnp
dec
cld
data16
loop
inc
sarb
lcall
inc
cmp
mov
sbb
faddl
inc
int3
pop
cltd
rolb
jmp
iret
fbstp
sub
pop
add
sub
adc
dec
lea
cmc
xor
mov
outsl
insl
jecxz
pop
lock
cmp
pop
insl
bound
xchg
loopne
inc
int3
test
xchg
push
flds
pusha
cmpsb
pop
movsl
mov
es
or
fwait
imul
and
dec
pop
outsl
rorb
mov
mull
jns
popf
imul
jae
mov
jmp
movsl
jmp
jl
pop
xor
sahf
sbb
inc
roll
lods
iret
jae
rcll
xor
xchg
xor
push
jbe
mov
mov
imul
sub
adc
aam
jno
outsb
fwait
sub
push
frndint
les
add
jbe
std
mov
push
cltd
stc
cmpb
inc
in
xorl
lds
xlat
ss
lea
fmull
test
inc
out
dec
xor
sbb
mulb
push
daa
jl
push
inc
ss
int3
fimuls
pop
aam
lds
push
std
push
mov
add
clc
xchg
mov
sbb
mov
xor
cmpsb
sti
push
mov
out
lods
movsb
mov
movaps
jmp
mov
stc
lret
aas
gs
jno
clc
repnz
loop,pn
test
pop
pop
out
mov
aas
ja
add
mov
cmpsl
pop
push
jbe
mov
test
stos
hlt
je
imul
test
push
cmc
ret
mov
and
pop
xchg
push
inc
cmpsb
enter
into
push
fidivrs
stos
hlt
subb
js
cmp
lods
sub
sub
push
arpl
imul
clc
popa
incb
cld
inc
es
inc
or
mov
adc
xor
push
mov
push
scas
nop
lret
into
test
mov
jns
add
aad
sbb
sub
in
jns
pop
jo
pop
sbb
mov
push
imull
or
ret
pop
shlb
push
cmpl
inc
add
aaa
loop
sbb
inc
in
adc
fnsave
dec
pop
call
test
add
sahf
aas
movsl
xor
ja
fidivrs
cli
xchg
shll
push
clc
in
rclb
dec
sarb
dec
inc
rcll
out
ret
imul
pushf
fs
cmp
test
sub
inc
dec
push
subl
pop
add
insb
shrb
ret
insb
sub
push
push
lds
ljmp
xchg
movsb
adc
xchg
sbb
or
xchg
ja
sub
sub
mov
orb
pop
mov
xchg
push
cmpsb
test
jl
inc
fsubrl
addr16
movsb
enter
fsubr
pusha
test
pop
fiaddl
jne
cld
imul
sub
sub
lock
jno
mov
cmp
sbb
int
pop
xorl
mov
or
add
sbb
and
call
mov
inc
pop
add
jns
jmp
in
lea
adc
ljmp
popf
adc
adc
int
inc
int3
ja
pop
push
pop
test
addb
cmp
pop
add
sub
lcall
pop
cltd
xlat
cmp
lret
sub
inc
mov
xchg
mov
cmpsb
add
mov
mov
dec
fisubs
pop
faddl
fisubrl
daa
jno
mov
adc
addl
jle
std
dec
je
or
mull
iret
stos
xchg
pop
cmpsb
sti
jnp
or
aas
mov
jle
div
jnp
repnz
lahf
jne
push
cltd
pop
popf
jg
or
movsb
jnp
addb
loopne
adc
xchg
mov
stc
cmpsl
das
dec
xchg
dec
push
pop
and
mov
fnstenv
pushf
mov
roll
or
ja
and
imul
cwtl
push
or
jo
push
mov
pusha
cltd
ret
test
je
icebp
popf
loopne
fldcw
inc
xchg
shrl
xor
fistps
or
cli
loope
push
or
in
je
pop
mov
add
xchg
in
fisttps
mov
add
push
stc
out
dec
dec
ja
dec
adc
adc
xor
dec
jnp
and
clc
icebp
fcmovu
jge
into
pushf
divb
loope
fisttpl
nop
jecxz
je
dec
repnz
cmp
out
icebp
mov
jbe
sbbl
add
jl
fnstsw
mov
call
or
in
flds
xor
sub
pop
adc
in
or
pop
addr16
ss
mov
push
aaa
push
xchg
shrb
jp
into
imul
aad
sarl
into
add
cmc
addb
clc
xchg
adc
ja
cltd
jg
adc
in
dec
inc
push
gs
gs
cmpsb
cmp
leave
lods
push
mov
stc
aad
bound
faddp
jg
xor
cwtl
or
scas
adc
ret
cwtl
mov
bound
hlt
sbb
ret
fidivs
push
add
pushf
mov
ret
lods
add
iret
mov
cli
ficoms
add
cmp
jmp
mov
jns
adc
stc
outsb
add
push
fisubl
xor
icebp
or
or
unpcklps
fdivl
aas
lods
sbb
test
out
xchg
bound
mov
xchg
cmpsb
inc
dec
mov
jns
mov
shlb
outsl
ds
jnp
adc
dec
and
in
add
pop
repnz
adc
push
ret
and
mov
push
inc
imul
fildll
in
xchg
std
outsb
xchg
sub
jns
pop
ja
xorl
jle
pop
mov
cmp
jae
addr16
xlat
rcrb
inc
jge
dec
in
mov
in
dec
imul
pop
or
nop
cli
aam
xor
mov
dec
push
or
das
or
mov
push
mov
in
cltd
shlb
mov
cmp
push
sbb
sar
xor
loope
push
ret
cmp
imull
pusha
jb
cmpsl
xor
repnz
jnp
in
mov
fldenv
adcb
in
daa
mov
inc
pop
rcrb
mov
pop
xchg
xor
mov
test
aam
jns
dec
jl
mov
sti
fnstenv
lods
insb
lea
pop
push
shr
sub
sbb
xor
lret
mov
stos
in
jno
cmp
loope
call
add
addr16
or
mov
pop
jle
ret
adc
icebp
sbb
addr16
pop
stos
dec
inc
ja
jmp
xchg
adc
pop
mov
adc
mov
and
test
popa
jo
jg
or
and
scas
lods
rcr
push
xchg
imul
out
adc
jp
jp
pushf
fdivs
pop
fwait
xchg
inc
cmp
inc
adcb
or
push
cmpsb
xchg
pop
sbb
mov
jb,pt
mov
call
stos
addb
fstpl
adc
pop
and
int3
movb
arpl
arpl
cmp
sahf
imul
imul
mov
fwait
arpl
lret
inc
clc
dec
fs
shlb
aam
sbb
jo
xchg
test
lret
push
push
fnsave
dec
jg
mov
push
mov
lret
iret
mov
xor
add
les
pop
xchg
push
pop
lret
add
sub
or
mov
push
mov
push
out
arpl
lret
sbbl
push
nop
inc
clc
push
mov
jmp
or
and
sbbb
mov
add
test
jmp
scas
ljmp
shrl
push
cli
out
sbb
add
insb
jge
pop
push
repnz
xchg
ret
cltd
xchg
popa
mov
int3
aaa
iret
sbb
pop
int3
sarb
testb
dec
loope
pop
or
sbb
cltd
jge
fidivrs
or
lret
mov
inc
cmp
mov
repz
subb
jmp
int
xor
xor
nop
adc
and
mov
dec
scas
sub
ret
repnz
mov
mov
inc
dec
dec
sub
jmp
das
gs
mov
push
xchg
push
sbb
into
sub
jb
adc
sbb
fbld
data16
mov
and
mov
scas
cmp
and
jnp
aaa
int3
jns
sbb
inc
inc
in
dec
mov
mov
sarb
mov
out
movsl
dec
inc
jmp
loopne
mov
jl
movsb
loopne
sbb
mov
sbb
lahf
sbb
dec
pop
cld
add
pusha
insl
add
lock
test
sahf
rcll
push
inc
lock
inc
xchg
add
pop
scas
sub
xchg
or
jne
xor
jge
inc
enter
sbb
fwait
sub
mov
hlt
data16
leave
out
cs
sbb
pop
popa
rolb
dec
sub
jbe
vdivps
addr16
jge
push
hlt
and
or
xchg
xchg
jns
fwait
jecxz
ror
rcrl
ja
test
popl
data16
ds
repz
jp
ljmp
ljmp
jae
sbb
in
mov
sub
stos
fidivs
xchg
cmp
jle
popa
in
cmp
xchg
jp
xor
andb
aam
mov
enter
insb
imul
sub
or
push
aaa
dec
push
scas
ja
fcompl
mov
call
sbb
cmp
fnstenv
sub
dec
test
iret
xchg
sub
addr16
lret
cwtl
push
jl
inc
loopne
xor
pop
cltd
stc
mov
arpl
mov
sbb
mov
jle
push
sub
mov
int
jno
or
aam
mov
push
divl
ret
adc
pop
cmp
sar
imul
dec
cmpsl
mov
mov
and
and
jbe
inc
pop
mov
add
push
pop
test
sub
push
dec
mov
add
inc
and
xchg
out
addr16
sarb
xor
movsb
cltd
shlb
inc
pop
out
xchg
and
push
push
outsl
loop
movsb
mov
int3
inc
mov
popf
es
xor
pop
out
adcb
inc
js
adc
sbb
cmp
out
jecxz
pop
sbb
or
outsb
sbbl
das
cli
leave
push
stc
add
lret
pusha
pusha
mov
mov
ret
outsl
pushf
mov
or
mov
je
push
xor
pop
xor
cmpsb
ret
or
sti
insl
aas
in
or
enter
imul
or
repnz
jb
add
popf
push
dec
push
push
adc
pop
inc
jo
dec
or
lock
mov
mov
xchg
outsl
mov
loopne
mov
or
xor
hlt
push
sti
fisttpl
scas
loop
dec
ret
adc
or
data16
inc
jnp
or
pop
decb
adc
mov
add
imul
inc
adc
mov
dec
or
fcoms
into
mov
mov
fidivs
test
mov
adc
andl
sub
mov
mov
xor
add
jo
jnp
leave
jmp
jbe
bound
mov
inc
mov
mov
lahf
in
cmp
xchg
pop
sbb
pop
adc
mov
and
dec
stc
push
imul
sub
mov
dec
iret
daa
pop
aam
cmp
adc
fwait
in
mov
inc
sbb
mov
insl
scas
leave
fisttpll
jbe
fcmovnu
movsl
pop
movsl
nop
mov
cmp
or
jecxz
out
mov
in
adc
push
add
sub
inc
outsb
ret
mov
push
push
outsb
jge
rorb
lcall
jge,pn
dec
jb
das
cmc
pusha
loopne
repz
movsb
fcom
das
add
cs
mov
dec
add
daa
pop
jmp
dec
icebp
sub
sbb
movsb
in
fisttps
push
lods
sub
test
or
sbb
mov
lea
icebp
into
jbe
test
out
lret
jmp
dec
movsl
int3
sbb
sbb
sub
incb
lret
popa
sub
jp
popa
fisubrl
mov
addr16
mov
out
and
shr
sahf
out
jae
jb
add
jae
adc
pusha
adc
sub
es
popf
pusha
xchg
mov
mov
jne
mov
xchg
imul
in
or
int3
dec
outsb
mov
pop
into
sub
add
lahf
out
rorb
bound
push
push
test
jb
push
mov
lods
sub
dec
ljmp
les
mov
sbb
inc
sarb
movb
mov
fmuls
sub
and
lret
cltd
push
out
in
push
rcrb
iret
pop
scas
fimuls
shlb
and
fbld
insl
sub
cmp
clc
adc
mov
cwtl
repz
es
je
push
add
int
push
inc
ret
sub
fisubrs
aad
xchg
pop
cmp
xor
in
mov
add
popa
fimull
push
xor
ret
roll
rorl
sub
fdivrl
sahf
dec
sbb
gs
loope
jae
mov
jbe
call
sbb
pushf
sbb
xchg
popa
rol
popf
adc
lods
int3
mov
mov
or
jge
jl
cli
xchg
lods
test
call
cmp
jl
hlt
lea
xor
inc
push
mov
in
je
jae
cmpsl
ja
js
outsb
fistpl
daa
or
push
lcall
dec
lahf
cmp
and
addr16
jne
loop
mov
and
mov
push
out
push
xor
neg
cmpsl
adc
outsl
mov
addr16
outsb
mov
mov
push
push
outsl
cmpsb
dec
mov
cwtl
adcl
pop
sbb
mov
mov
and
js
out
rolb
mov
inc
rorb
lret
je
cmpl
mov
iret
add
in
dec
enter
ret
jle
cwtl
dec
pop
outsl
mov
stos
nop
jge
xor
rcl
das
mov
dec
mov
int
cli
pop
rorb
inc
sub
std
cmpsb
push
movsl
fwait
sub
andl
in
pop
cwtl
xchg
xor
jo
pop
pop
cmpsb
xor
lret
mov
jp
mov
cmp
mov
mov
cmp
fisttpl
lods
dec
cs
push
stc
sub
testl
sbb
ret
push
fildll
iret
fcomps
scas
imul
cmp
mov
shl
rcr
mov
adc
hlt
out
or
addr16
jp
mov
rorl
cmpsl
ss
mov
icebp
cmp
das
fcom
out
cli
cmp
pop
pop
daa
inc
add
xorl
inc
loopne
xor
pop
imul
imul
hlt
mov
xlat
xlat
call
insb
xchg
loop
pop
mov
push
gs
mov
outsb
ret
or
test
icebp
add
arpl
out
xchg
or
gs
fs
cli
es
adc
out
div
dec
jl
rolb
fldenv
scas
mov
cmpb
nop
stc
rolb
std
and
imul
sbbb
inc
cmp
push
mov
mov
mov
icebp
sbbl
add
aam
dec
adc
xchg
inc
pop
shll
daa
dec
mov
cld
cmp
sub
mov
xor
cwtl
jmp
inc
ss
mov
xlat
insl
pop
add
out
push
imul
cli
mov
out
sbb
je
add
xor
xor
dec
adc
xlat
pop
adc
push
xor
mov
movsl
lcall
dec
cmp
jge
mov
rcrl
lea
repz
sbb
fcoml
pop
call
ret
xchg
movsl
cmp
pushf
xchg
mov
push
sub
inc
in
pop
lock
insb
mov
test
fimuls
sub
arpl
roll
and
int
imul
sub
in
xor
mov
ljmp
inc
xor
push
movsl
sbb
adc
or
leave
mov
movsl
mov
pop
mov
jno
loopne
cmpsb
andl
jbe
andb
mov
push
call
cmp
and
lret
adc
lret
mov
jmp
push
subb
or
test
jb
adcl
imul
mov
cld
adc
test
inc
push
xor
add
xor
jge
cli
into
fisubrs
mov
mov
in
push
mov
sbb
jno
jae
sub
xor
leave
popa
fstpt
dec
lods
fucom
xchg
jne
mov
fs
xchg
xor
out
mov
and
pop
es
and
fcomp
or
cwtl
sub
xor
repz
lret
sbb
psubsw
ret
repz
pop
xchg
movsb
addr16
push
dec
mov
jecxz
dec
adc
out
out
xchg
pop
aas
sti
mov
push
mov
pop
hlt
mov
lds
xor
sub
mov
mov
lods
loop
fincstp
mov
add
gs
fidivs
cmc
icebp
jmp
mov
notl
flds
mov
aaa
inc
int
pop
aaa
dec
inc
sub
cwtl
das
adc
mov
cld
cmc
mov
leave
sti
sub
inc
arpl
imul
inc
pop
inc
ljmp
neg
bound
clc
shll
lret
xor
and
mov
and
push
lods
bound
mov
jae
popf
dec
xchg
divl
mov
insl
out
mov
xchg
aas
xchg
mov
jae
jns
jecxz
push
xchg
mov
inc
sti
xchg
xor
xchg
nop
ljmpw
insl
push
xchg
ret
inc
adc
pop
fisubl
fidivl
mov
sbb
pop
std
in
out
mov
adc
sub
aad
dec
pop
clc
cmpsb
ret
scas
push
ds
movsl
imul
test
pop
lret
stos
cmp
loop
daa
add
daa
xor
fsubrp
sub
adc
rorb
jne
nop
mov
jns
dec
in
arpl
es
cmc
xor
xchg
jmp
jle
add
and
lods
push
push
sub
pop
xor
bound
or
enter
int3
data16
adc
das
jno
cs
pop
add
loop
outsb
push
lcall
add
pop
jp
mov
mov
bound
sahf
repnz
push
cmpsl
ss
pop
mov
rclb
jno
shrl
mov
or
pusha
leave
or
int3
push
pop
xor
xchg
mov
pusha
xchg
shll
test
mov
cmp
fs
cs
stos
push
pop
insb
lret
iret
mov
les
xor
jmp
call
sahf
rorl
and
test
enter
inc
mov
les
stos
lcall
pop
xchg
in
jge
movl
pop
or
push
daa
data16
shrb
add
inc
in
popf
push
jmp
cmpsb
mov
std
mov
jns
push
insl
enter
and
movsb
sub
aaa
jb
in
xor
daa
ss
mov
jae
mov
int
arpl
push
fadds
ds
and
push
bound
add
lea
inc
adc
cli
out
gs
andl
mov
cli
pop
mov
mov
jbe
and
mov
and
filds
aaa
pop
jbe
out
mov
push
stc
gs
lret
jae
adc
push
clc
inc
xchg
mov
xchg
sub
dec
out
xchg
aam
jnp
cwtl
data16
adc
mov
outsl
fstl
cltd
call
sub
mov
movsb
adc
fidivl
sub
scas
mov
ljmp
cs
mov
hlt
lock
mov
lds
sbb
idiv
push
daa
lret
sbb
sub
dec
xor
imul
inc
xchg
ret
xchg
adc
sbb
sahf
sarb
pop
jge
xor
adc
repz
arpl
cmpps
push
sbb
pop
mov
lods
adc
cmpsb
xor
fstl
jns
cmp
pop
adc
sbb
idivl
aad
cld
jae
icebp
xchg
test
xchg
movsl
stos
movb
xchg
cmp
mov
xchg
into
cmp
mov
aaa
pop
mov
hlt
out
out
xor
adc
mov
or
mov
je
loopne
dec
iret
mov
pop
xor
bound
xor
cmp
xchg
lods
aam
jg
popf
in
rcrl
sbb
aam
int
lods
cmp
xchg
loop
decb
out
ret
mov
and
inc
out
pop
xchg
cmc
sub
movsb
sub
jge
push
push
ds
mov
in
push
or
dec
xchg
ret
and
mov
scas
xor
sbb
cmp
or
sbb
repz
push
mov
pusha
cli
pop
xchg
scas
mov
rolb
xor
add
pop
dec
mov
pushf
cld
cltd
cmpsb
bound
das
mov
fsubrs
sbbl
and
inc
xchg
jp
pusha
mov
cld
cmpb
gs
pop
xchg
xchg
push
movsb
push
stc
test
jno
inc
out
mov
pusha
fisttps
mov
clc
adc
in
outsb
sbb
dec
fs
cmpsb
cmp
ljmp
xorl
ja
inc
push
mov
or
sbb
mov
test
sub
lcall
sub
cmp
pop
sub
jl
pop
test
mov
outsl
push
push
inc
sub
and
xchg
in
push
fistl
or
fmuls
mov
cmp
lock
hlt
or
jnp
mov
nop
out
aad
xor
push
in
int
arpl
dec
out
push
xchg
sub
and
gs
es
popa
arpl
pop
int
mov
pop
aam
mov
adc
inc
les
loope
push
cmp
stos
xchg
inc
xchg
jg
add
jne
push
mov
jbe
sub
cmp
out
xchg
ret
ret
mov
add
stc
jne
pop
fnstenv
lahf
adcl
popa
call
addr16
or
push
out
mov
dec
inc
pop
push
mov
mov
cltd
andl
les
div
push
stc
or
inc
fsubrs
sarl
lds
cmp
sbb
shl
cmp
mov
adc
sarl
imul
lds
fmul
cmp
fcoms
and
mov
clc
adc
test
hlt
shrb
sub
jmp
leave
addb
cmpsb
cld
add
repz
jp
push
mov
dec
sub
insl
lods
mov
adc
jg
pop
xlat
mov
adc
or
dec
ljmp
mov
lock
leave
or
popf
inc
mov
dec
xor
mov
dec
mov
cmp
cld
push
ja
cmc
out
mov
test
xchg
push
jp
sub
push
lahf
into
cmp
std
pop
sub
lcall
adcl
mov
xchg
jmp
mov
pop
lock
cwtl
stc
std
out
ja
cmp
mov
add
or
ja
fdivrs
push
insb
push
cwtl
xchg
jle
aaa
out
leave
test
push
cmp
mov
jmp
pop
or
stc
test
movsb
xor
repnz
pop
ljmp
mov
jns
mov
and
lahf
jge
std
in
popf
push
mov
iret
out
pushf
xor
mov
fadd
loopne
iret
gs
daa
aaa
lock
add
es
xchg
cwtl
sbbl
mov
jecxz
xchg
sbb
cmp
addr16
sub
adc
dec
push
jle
xor
fbstp
jo
jnp
repnz
xor
dec
push
imul
repz
lds
ret
xchg
cli
lods
fcmovne
cmp
pusha
dec
fiaddl
rorb
imul
cmp
sub
ret
adc
decl
mov
cwtl
movsl
add
jno
shrb
adc
pop
nop
dec
call
icebp
pop
xorb
pop
sub
and
jecxz
cmc
pop
jne
neg
fldt
adc
fsubrl
mov
mov
jp
mov
ret
adc
pop
rcrl
ss
sbb
and
lds
and
leave
xchg
push
iret
popf
out
aam
out
testl
lods
xchg
mov
es
repz
adc
movsb
scas
std
cmp
and
pop
pop
xor
push
dec
fisubl
cmp
int
in
rclb
pushf
inc
mov
and
xchg
and
adc
std
add
ss
inc
dec
mov
push
cmpsl
je
push
addr16
popa
pop
sar
or
bound
sar
sbb
cmpsl
daa
push
jns
std
mov
sub
stc
sub
cmpsl
jb,pn
push
mov
mov
fdivrl
or
inc
insb
test
xor
mov
lret
fldcw
jne
mov
add
das
out
mov
out
popl
push
jbe
xchg
aad
sub
and
cs
out
jo
dec
and
mov
mov
mov
shlb
inc
clc
push
in
mov
mov
and
and
dec
inc
pop
and
popa
dec
jmp
mov
stos
fadd
pop
notl
xor
sub
sahf
adc
lea
ret
leave
cmp
dec
je
gs
xchg
add
jecxz
lods
sub
stos
lret
cmp
loope
sub
data16
adc
xchg
mov
add
loop
mov
jo
stc
pop
inc
idiv
outsl
push
movsl
or
xchg
iret
in
call
test
orl
mov
fsubrs
repnz
mov
shlb
mov
push
jle
xchg
xor
inc
push
fs
cmp
js
mov
fdiv
test
pop
pop
sbb
pop
cwtl
inc
pusha
nop
out
std
stos
es
fiadds
mov
jns
or
sbb
arpl
ja
mov
mov
lods
and
jecxz
xchg
leave
sub
mov
pop
xlat
xchg
sub
insl
pop
inc
ret
dec
cs
sbb
inc
roll
mov
and
push
push
add
ret
mov
add
fdivr
loopne
adc
jle
ljmp
sub
prefetchnta
arpl
xchg
subl
in
add
cmpsb
cmp
mov
pop
or
push
gs
push
icebp
inc
and
les
fstp
into
fwait
jno
std
repz
sbb
insb
xchg
sahf
xchg
or
jmp
xchg
test
pop
cmpsl
shl
rcll
lret
ret
dec
add
rol
sti
push
daa
push
lret
fnstenv
dec
mov
xchg
push
or
pop
or
loope
jge
jecxz
sbb
pushf
cmc
fwait
int
jg
ljmp
adc
das
ret
push
add
out
cli
xorb
inc
xchg
adc
and
sahf
rorb
sub
fmuls
dec
call
fsubrl
dec
sti
ret
add
orb
mov
adc
test
sub
or
push
mov
jnp
xchg
inc
push
or
xchg
and
incb
sbbl
and
cmp
sub
jge
das
cmp
jecxz
lods
push
aad
jp
leave
push
mov
dec
push
ret
adc
and
es
adc
inc
ljmp
out
fimull
sti
iret
pop
lock
jbe
dec
cmp
arpl
cmpsb
stos
add
sub
mov
pop
xchg
pop
stos
sarb
dec
scas
shll
loopne
test
sub
or
jp
and
push
stos
cmp
sub
mov
jb
adc
sub
fstps
ja
mov
stc
ret
arpl
xor
xchg
jne
cmc
adc
outsl
jle
mov
inc
ja
mov
pop
inc
sbbb
mov
inc
cmpsb
inc
adc
jp
add
mov
adc
out
jp
cmp
dec
icebp
imul
pop
sub
and
mov
dec
pop
cmp
mov
sub
outsl
movsl
test
sub
push
rorb
push
jne
jno
fwait
insl
sbb
and
test
push
imul
mov
sub
iret
jb
push
and
adc
mov
lea
sub
pushf
pop
call
imul
and
mov
or
lods
and
inc
pminub
dec
push
fs
and
cltd
pop
push
jg
es
sub
jnp
sbb
lods
lock
scas
lcall
add
mov
nop
in
insb
fwait
xchg
pop
aam
popl
test
iret
ljmp
call
lods
and
testl
jmp
xchg
stos
mov
loop
aaa
and
cltd
dec
jae
mov
mov
shl
push
data16
add
add
fwait
jb
and
xor
jecxz
add
jg
incl
jbe
test
add
or
fnstenv
lock
mulb
mov
ret
dec
fs
call
push
mov
movsl
inc
sti
xchg
xchg
nop
mov
sbb
addl
adc
aas
adc
lret
xor
daa
loope
sbb
mov
out
jnp
push
repnz
fcoms
cs
mov
pushf
pop
loopne
mov
sahf
adc
pop
inc
adc
out
icebp
fs
test
popa
cmpsl
arpl
mov
mov
decb
or
rolb
push
mov
add
rcrb
hlt
and
pop
daa
stc
fwait
rorl
sbb
aaa
stos
xchg
fidivs
addb
push
xchg
jnp
in
outsb
movsb
lods
cmpsb
sbb
xchg
push
ss
insl
inc
xchg
inc
stc
xchg
push
mov
inc
iret
aas
mov
jg
cmpb
cmp
push
call
mov
sub
pushf
add
xor
out
and
cmp
add
jle
mov
into
xor
push
or
xor
movsl
mov
lock
in
mov
mov
test
push
pop
jmp
out
out
clc
lock
mov
jb
adc
notl
lret
mov
add
lods
shlb
adc
sub
out
mov
sbb
aam
clc
inc
sub
rcll
test
add
inc
adc
imul
cwtl
lods
inc
mov
imul
shll
fdivrl
and
in
gs
mov
rcrl
fdivl
pop
cmpl
mov
push
sub
jecxz
out
sub
scas
ret
add
repz
jmp
sbb
push
jg
pop
push
mov
pop
frstor
in
ja
push
jns
add
pop
stc
pop
jle
sub
jns
mov
xor
pop
cmp
inc
or
mov
or
out
add
gs
rcl
jecxz
or
adc
les
xchg
jb
test
mov
fiadds
xorl
jl
dec
enter
js
sub
ror
add
fidivrl
xor
hlt
jl
pmovmskb
fistpl
mov
jl
insb
andb
data16
add
and
or
inc
pop
pusha
sbb
push
or
cmovs
scas
shl
adc
pop
testl
aaa
movsl
rcrb
inc
push
mov
imul
xchg
xchg
insb
jno
adc
inc
fcmovbe
out
test
test
cld
pop
cld
push
test
sub
ja
out
clc
in
shrl
fldt
mov
inc
xchg
lock
cli
pushf
fdivp
stos
or
pop
cmp
pop
imul
scas
sbb
cmp
mov
xchg
cmp
out
in
outsl
pop
inc
mov
adc
imul
mov
push
cs
mov
in
scas
fldcw
sbb
lret
xchg
dec
ja
mov
cmc
inc
cmp
fmuls
xchg
adc
aam
dec
cmp
fldl
fistps
push
push
add
pushf
and
int
sbb
mov
lea
int
stos
insl
push
mov
repz
adc
rcrl
mov
imul
add
pop
pop
jnp
out
or
flds
inc
aaa
inc
add
sbb
mov
xor
push
dec
jge
dec
inc
lcall
cmp
cltd
push
arpl
lds
mov
mov
adc
call
iret
es
negl
call
bound
cmpsb
shlb
mov
lret
cs
sbb
shlb
and
pop
lods
pop
inc
cs
jbe
popf
int3
je
dec
mov
cmpsl
imul
mov
and
cmp
js
sub
fs
cmpsl
enter
xchg
sub
xchg
lret
mov
je
nop
mov
xchg
push
je
sbb
repnz
repnz
es
mov
inc
sahf
mov
dec
inc
push
or
fcmove
add
mov
insb
lods
xchg
movsb
sub
in
xor
xchg
inc
push
jns
add
mov
mov
lahf
xor
roll
in
aam
dec
js
adc
into
pop
roll
cwtl
inc
dec
rorb
lods
add
xor
pop
insl
data16
ficomps
subl
adc
test
xor
cli
imul
sub
repz
sub
mov
dec
fbld
push
adc
scas
lret
jns
mov
cmpsb
cltd
mov
jno
xor
in
iret
rep
mov
lahf
jo
dec
xchg
pop
mov
enter
mov
mov
jno
xchg
mov
loope
mov
imul
jae
cwtl
inc
and
xlat
pop
dec
loopne
add
scas
mov
in
add
sti
ljmp
add
push
cld
inc
andl
enter
xor
pop
sbb
mov
lea
jnp
cmpsb
jl
stc
cmp
add
and
or
sbb
rcrl
notl
fcomi
cmc
dec
shl
and
pushf
cmovae
ljmp
dec
push
push
popa
jp
sbb
jmp
cmp
aaa
pusha
mov
push
and
sub
test
outsb
in
adc
xchg
mov
out
inc
push
xor
int
lahf
pushf
mov
test
jge
gs
stos
pop
lcall
cmp
cmp
xchg
or
pop
or
jae
jb
xor
stos
int3
mov
adc
sub
xor
and
in
in
mov
mov
add
ljmp
jmp
push
in
pusha
aam
jg
jb
push
and
xor
lods
insb
ss
movlps
mov
testl
mov
popa
clc
stc
cmp
stos
cmc
mov
movb
push
sti
iret
xor
outsb
pop
xor
sbb
xchg
movsl
fidivrl
sub
fistps
xchg
xor
xchg
dec
mov
mov
xor
xchg
shlb
fldt
shlb
jae
push
enter
mov
pop
push
test
inc
jnp
push
sub
jno
sbb
cmp
rcl
pop
mov
stos
fstl
sbb
push
mov
testl
outsl
dec
mov
loop
lods
enter
fldt
loopne
into
js
aas
add
aad
aad
out
mov
sub
lods
out
sub
add
adcl
jp
pop
cltd
xor
fcomp
jae
lods
jae
sub
dec
push
les
std
ret
outsb
pop
xchg
sar
sahf
sub
mov
mov
cld
mov
lods
push
pop
repz
mov
sbb
jae
je
xor
push
xchg
cmp
aad
cmp
push
pop
jb
fiadds
rorl
push
xor
pop
jle
dec
jb
inc
sbb
mov
or
aad
inc
xchg
int
in
push
popl
jb
inc
popf
ss
repz
mov
out
jns
test
jle
icebp
inc
aas
xor
ja
or
pop
sar
add
xchg
inc
adc
out
icebp
jns
je
int3
adc
xor
xor
in
mov
dec
clc
cmp
data16
jnp
xorb
jbe
xor
ljmp
incb
pop
scas
data16
nop
pushw
pop
xor
jnp
out
mov
loop
out
aas
sbb
loope
mov
adc
sub
xor
mov
sbb
mov
pop
fs
sub
into
pop
jns
addr16
pusha
outsb
ffreep
xor
xchg
dec
push
aaa
xor
inc
mov
out
rclb
add
add
jb
shr
cmovbe
mov
dec
in
xor
mov
mov
pop
pusha
fwait
pusha
xor
jmp
mov
rcrl
adc
mov
pop
cld
mov
mov
movaps
sbb
jb
and
mov
adc
je
add
sbb
jae
cmp
fnstenv
xchg
aam
clc
out
jo
fistps
repz
mov
cs
jnp
lods
repz
mov
imul
popf
and
rcrb
ja
or
and
rcrl
adc
in
xchg
xchg
icebp
push
arpl
sahf
lock
std
fs
bound
fcmovb
xchg
lds
add
fmulp
mov
push
in
mov
test
lds
aas
jecxz
rorb
push
popa
adc
imul
and
sarl
inc
dec
call
sbb
sbb
shl
addl
daa
inc
mov
enter
cmp
push
dec
jle
nop
pop
scas
ret
push
push
jp
sbb
ss
cmpsl
xor
inc
mov
push
sub
dec
add
push
push
jge
push
repz
inc
mov
adc
add
push
push
sub
inc
pop
stos
mov
mov
in
jp
lret
pop
pop
push
push
sub
and
aas
xchg
fildll
aaa
into
xor
mov
scas
jbe
insl
xor
mov
cmp
lahf
xor
push
pusha
add
into
inc
xchg
push
fsubrs
mov
pop
dec
xor
mov
cs
clc
push
iret
cmpb
clc
pusha
push
fidivl
push
sbb
sub
rcr
movsb
pop
push
in
ret
repnz
popf
dec
push
test
lock
lods
test
lock
rcr
dec
stos
mov
stc
fcmovnb
mov
xchg
cmpsl
into
and
mov
fldcw
pcmpeqb
sub
call
nop
jne
out
jg
inc
imul
cmp
rorl
cmp
inc
adc
cld
mov
pop
mov
and
xchg
sahf
add
mov
mov
stc
adc
pop
repnz
cs
push
xor
and
insb
dec
jge
inc
or
jge
sub
in
and
add
push
mov
ret
in
cs
mov
js
shlb
cli
popa
add
mov
nop
pop
leave
pop
mov
lea
ret
nop
or
or
sub
mov
xchg
outsl
jns
daa
incb
mov
testl
stos
enter
push
mov
stc
lret
int3
rcrl
out
sub
jle
sub
shlb
cli
xchg
hlt
push
nop
sti
dec
and
pop
icebp
cld
pop
rclb
mov
jns
push
push
xor
or
mov
lea
mov
mov
enter
jae
mov
sahf
cmp
mov
cld
outsl
int3
jno
test
mov
mov
cld
cmp
dec
inc
mov
adcl
lret
add
adc
fucomp
mov
mov
jle
mov
lock
jp
ficompl
jle
mov
xor
lahf
repnz
cld
jo
inc
pop
daa
int3
into
jle
xchg
fwait
pop
cmp
fdivp
out
push
data16
fisttpll
or
psraw
lea
ds
mov
mov
dec
jns
popa
loope
jno
add
mov
mov
add
dec
aad
mov
int
jae
vpunpckhbw
les
mov
or
jecxz
hlt
test
adc
enter
outsl
sbb
sub
mov
xor
loop
xchg
lret
ret
in
sti
cmpsb
add
and
mov
ret
mov
pop
dec
lea
push
mov
addr16
ljmp
adc
pop
inc
add
fsubr
or
pop
sbb
outsl
add
lret
push
call
mov
cmp
inc
sarl
cmp
adc
xor
mov
andl
cwtl
push
push
clc
and
jg
lods
mov
inc
adc
bound
movsb
fisttpl
cmp
fldl
pushl
test
out
push
and
xchg
sub
xchg
sub
cltd
xchg
mov
out
xor
es
dec
in
fisubl
sub
mov
cmp
mov
ret
push
fnstcw
in
dec
pop
fcoml
jbe
int3
inc
popf
xchg
jmp
test
fwait
call
in
push
bound
nop
es
repz
or
jns
shrb
and
cmpsl
sti
jecxz
xchg
sub
cmp
inc
fistps
jae
daa
xchg
xor
shlb
lea
out
pushf
test
sub
xchg
sub
out
and
jg
xor
js
shl
xchg
into
push
lret
xchg
mov
sub
xchg
lcall
lcall
mov
cmpsb
pop
jae
in
test
add
sub
repnz
xor
and
fdecstp
popf
ret
aas
jg
shl
test
int3
cmp
mov
jbe
cmp
shll
mov
cltd
xor
cmpsb
mov
mov
add
push
out
xchg
repnz
push
pop
mov
stos
cmp
mov
push
test
push
xorb
cmp
sbb
ret
dec
cmp
inc
add
mov
ljmp
lock
xor
repz
push
aaa
mov
stos
ds
sub
jae
mov
out
pop
jle
cmp
and
push
movsb
sbb
mov
fdivs
rcrb
xchg
sbb
and
jmp
insb
dec
repnz
cmpsl
pushf
mov
stc
icebp
addps
adc
mov
cmc
scas
push
jne
gs
xor
push
inc
mov
test
jl
loope
jg
sbb
mov
jle
inc
in
pop
cmpsl
jb
das
lds
inc
mov
ret
int3
adc
enter
mov
push
jle
rcrb
push
pop
and
rcll
stc
dec
lea
jge
pop
rol
ja
pop
out
iret
inc
dec
or
outsl
lods
mov
dec
xlat
add
sar
add
sbb
mov
push
jp
cmp
add
lret
jmp
popf
test
or
outsl
sbbb
mov
lods
dec
cltd
mov
add
out
cmp
loop
ficoml
popa
dec
or
and
jns
aas
and
cwtl
xor
out
mov
test
icebp
mov
mov
stc
aam
ja
pop
out
sbb
jl
jp
test
cmpsl
mov
repnz
into
je
fadds
pusha
mov
push
sahf
adc
inc
pop
nop
xor
pop
xchg
sarb
imul
dec
and
jmp
imul
and
cmp
mov
popf
xor
dec
insl
fiaddl
xor
cmp
rcrl
ret
mov
aas
into
aas
gs
cmpsl
xchg
cmp
dec
or
andb
mov
xor
stos
cld
cmpsl
into
rcrl
ret
pushf
scas
int3
xchg
lret
stos
jne
adc
push
mov
loop
mov
int3
push
je
das
and
sbb
popa
and
jle
clc
dec
cmpsl
push
cmp
orb
daa
dec
pusha
inc
sti
inc
movsb
push
mov
out
movsl
inc
lods
jbe
out
jo
fcoms
insl
rolb
xlat
call
push
cld
mov
ret
ret
mov
and
aaa
jnp
cmp
movsb
cmp
cld
frstor
flds
push
xchg
jno
xchg
jg
adc
lods
dec
cmp
movsb
outsl
stos
sbb
push
fldl
mov
jnp
xor
sbbl
push
repnz
or
and
shlb
inc
xor
lcall
jl
aam
jg
repz
fcomp
rolb
cli
sub
out
adc
orl
mov
xchg
xchg
mov
inc
dec
inc
mov
imul
sbb
inc
ret
fcmove
out
fld
in
dec
mov
cmc
orl
fimuls
hlt
cmovnp
add
jb
and
jle
hlt
mov
and
stc
adc
orb
pop
mov
sbb
cmpsl
sub
outsl
pushf
ficomps
int
or
out
imul
fisubl
jl
clc
inc
cmp
mov
call
mov
cmp
sbbb
xor
and
xor
push
clc
dec
jno
loope
xlat
fimuls
les
mov
cltd
sub
adcl
jns
call
hlt
sti
push
xor
ret
push
shrl
cmpsl
mov
xchg
sbb
push
mov
stos
pusha
outsb
xchg
mov
inc
xchg
xor
pop
mov
lahf
je
call
cmp
fistps
sub
or
daa
mov
push
js
test
in
mov
lock
push
push
mov
cmp
or
rcrl
mov
aad
ja
ficoml
cmc
jmp
sbb
fwait
mov
stos
in
movsb
fwait
xor
cmpsl
pusha
mov
adc
pusha
jmp
paddusw
ljmp
sarb
xor
shr
jge
xchg
mov
hlt
xlat
jno
cmp
push
pop
movb
lods
sahf
jg
in
or
jecxz
push
jecxz
add
push
pop
mov
cmp
jno
mov
adc
xor
test
push
loopne
cs
cmp
inc
movl
xor
xchg
out
insb
mov
imull
clc
test
pmaxub
dec
test
add
enter
cmc
stos
sahf
jmp
clc
mov
lock
movsb
jg
cmc
jp
mov
sahf
shl
stos
inc
dec
pusha
ds
ljmp
pop
or
fdivr
xor
lea
add
mov
out
inc
mov
mov
mov
inc
ljmp
repz
movsl
addr16
add
es
orb
scas
rolb
mov
add
sub
sbb
jl
xlat
jg
add
jb
call
and
fildl
xchg
fldenv
imul
dec
aas
and
mov
sbb
aad
push
cli
filds
add
adc
xchg
push
push
adc
outsl
loopne
fdivr
add
pop
pop
mov
and
aad
aas
jge
insb
loop
sub
mov
mov
xorb
inc
lret
scas
lock
and
mov
aas
inc
imul
push
call
lret
lods
cltd
cmp
cmp
xchg
fisubrl
fdivp
data16
cs
fcomps
subl
mov
imul
xor
xchg
movsl
mov
sub
sti
adc
cmc
inc
fucomi
sbb
aas
or
inc
test
cmp
inc
repz
sub
insl
push
ja
push
sbb
nop
dec
inc
fidivrl
dec
pop
sub
adc
push
out
jl
sub
inc
ja,pn
in
push
js
hlt
or
mov
mov
icebp
icebp
hlt
xor
jnp
fiaddl
or
cmp
enter
pop
aas
cmpsl
movsb
dec
cmpsb
ret
sbb
sbbb
push
dec
aas
jbe
xchg
jecxz
loopne
adc
mov
xchg
outsl
ficoml
addr16
xchg
cmp
inc
ret
mov
mov
rclb
adc
aaa
test
shl
mov
les
loopne
cmp
push
neg
out
rclb
push
push
mov
repnz
je
push
movsl
push
data16
sub
lods
hlt
sub
add
insl
lahf
mov
ja
je
stos
adc
movsl
xor
nop
jg
faddl
pusha
mov
fadds
ljmp
mov
jno
mov
sub
ret
lock
xor
cmp
leave
cli
roll
add
cld
subl
adc
nop
rorb
call
inc
xchg
push
cmp
xchg
insl
mov
dec
imul
in
sbb
sbbl
inc
clc
pop
ds
lahf
pop
dec
subb
adc
and
mov
iret
stos
stc
sarb
shll
xchg
push
sbb
loope
push
ja
lret
and
xorl
roll
stc
enter
pop
lret
and
push
jns
cmpsb
in
ljmp
outsb
insb
push
pop
lods
adc
scas
dec
sub
movsl
jle
sub
cmp
iret
push
aaa
inc
jg
pop
xlat
push
sbb
aas
push
das
pusha
fsubrs
cwtl
sarl
stos
sub
push
inc
insb
jo
jl
mov
xor
cli
pop
mov
in
das
xchg
sahf
add
jl
dec
sbb
cs
popf
pop
jge
in
dec
out
inc
movsbl
inc
fneni(8087
out
and
iret
cltd
fldenv
int
adc
das
sbb
pushl
mov
dec
jbe
es
lds
jecxz
dec
orl
add
adc
stos
or
popf
xor
scas
ja
sti
insb
pop
sbb
aad
cs
inc
jb
xchg
popa
cltd
xchg
cli
rclb
mov
xorl
in
dec
pop
daa
into
jle
scas
push
js
lods
sbb
sbbb
inc
cmp
nop
dec
sub
lods
push
outsb
sub
icebp
insl
sahf
cmpb
lret
sub
icebp
loope
enter
mov
jmp
pop
mov
sub
and
jbe
push
inc
nop
out
addr16
loope
shrl
cmp
dec
xchg
mov
and
sub
jae
mov
sarl
lret
mov
sbb
je
mov
test
movsb
add
leave
xor
add
je
push
sub
repnz
xchg
in
sub
pop
ljmp
stos
push
bound
cmc
mov
sub
out
js
mov
or
cli
cmc
and
mov
sbb
adc
je
int
data16
mov
ss
jg
push
aaa
push
push
fdivr
cs
out
xor
mov
scas
lock
cmc
xorb
xor
dec
mov
sbb
or
fiaddl
push
lret
or
jp
cmc
cs
xor
inc
stc
mov
loop
shrl
adc
push
vunpcklpd
and
or
adc
xlat
addb
mov
ret
and
mov
sbb
jmp
jmp
out
push
popa
je
insb
and
mov
lock
dec
mov
data16
daa
stc
int
mov
mov
inc
sbb
fs
lea
std
fldenv
pop
mov
sti
gs
stos
fprem1
push
inc
xchg
hlt
fadds
lea
jns
sub
xor
aas
scas
rcrb
test
lcall
ss
sbb
pop
inc
rcrb
pop
mov
pop
mov
divb
jmp
xor
pop
mov
lcall
ds
mov
xchg
pop
or
xchg
inc
push
push
test
outsl
pop
dec
repnz
or
lds
imull
inc
out
pop
jge
pop
scas
push
push
inc
call
mov
fcmovu
jnp
fstpt
ja
jbe
jmp
push
out
mov
push
mov
mov
ss
into
mov
jo
mov
fmull
mov
adc
xchg
cmc
pusha
sbb
dec
sbb
outsl
movsb
inc
je
in
mov
cmc
mov
imul
adc
lds
and
mov
mov
sbb
movsl
scas
mov
cmp
iret
loopne
adcb
sahf
inc
mov
aad
xlat
sbb
cmc
sub
nop
push
cmc
xchg
mov
sub
bound
adc
rcll
and
cmpsb
sbb
shll
mov
push
cmp
fs
das
xor
mov
push
out
int
aas
mov
cmp
lahf
add
or
sbb
xchg
push
popa
xchg
mov
push
adc
popl
sbb
push
popa
jmp
add
xor
mov
push
sahf
rcrl
sahf
loopne
arpl
mov
outsb
mov
inc
movsl
cmc
test
cmp
pop
add
repz
in
popa
jecxz
cmp
xor
pop
sti
loopne
loope
jae
in
inc
aas
dec
int
or
dec
pop
pop
push
shl
stos
inc
jne
or
lret
jl
sbb
es
jb
test
mov
out
push
mov
scas
mov
push
lock
xlat
push
and
pop
jmp
add
std
push
test
xor
mov
subb
ftst
dec
inc
gs
add
loop
pop
xchg
sti
mov
jbe
lea
daa
push
rcr
xlat
xchg
in
nop
int
loope
inc
xchg
shrb
jmp
scas
insb
call
mov
xor
pop
dec
test
sub
sarl
je
push
pusha
dec
shlb
xor
add
or
pusha
sbb
loope
cs
iret
ret
jno
jo
add
pop
fidivs
add
xor
dec
cmp
je
mov
mov
orl
inc
add
mov
xlat
aas
mov
test
scas
lret
adc
imul
mov
mov
insb
sbb
push
cmpb
fdivs
cltd
ja
pop
test
xchg
xchg
mov
dec
dec
xchg
mov
or
enter
or
or
pop
jle
enter
xlat
das
add
scas
in
ja
add
jmp
pop
xor
mov
jp
lea
jae
out
ret
sbb
in
jo
outsl
fcomps
rcrl
jae
sub
mov
xchg
in
loope
mov
push
push
mov
test
mov
mov
push
jo
ret
lea
mov
inc
into
and
enter
out
sbb
mov
fisttps
andl
test
sahf
clc
daa
pop
loope
ljmp
cmp
pop
ffreep
mov
and
shl
mov
mov
mov
xorl
ljmp
imul
mov
mov
xor
fwait
sub
inc
es
push
push
or
mov
rcl
sbb
mov
xchg
lods
pop
sbb
scas
or
in
sub
arpl
adc
out
or
dec
repz
flds
xlat
gs
fistps
les
sahf
or
cmc
lcall
mov
inc
ljmp
mov
xor
inc
int
ss
jo
ds
out
and
mov
inc
fisubl
add
mov
rcrb
cmp
add
push
dec
hlt
popa
arpl
mov
mov
arpl
fwait
jnp
xor
xchg
mov
loopne
repz
push
push
and
push
scas
pop
sar
and
dec
and
popa
setne
jl
lret
mov
push
mov
jae
aaa
je
repnz
repz
aam
cmp
and
ljmp
call
sbbb
xlat
cld
into
pushf
xor
cwtl
outsl
mov
js
jno
fsubrs
dec
add
dec
pop
stos
mov
je
jp
xchg
insb
push
jmp
add
aas
stos
and
jns
add
scas
dec
ret
xor
push
stos
cmc
xor
cmc
jle
mov
into
mov
aaa
cmpsl
jge
jb
xor
in
je
xchg
jecxz
das
adc
push
jbe
fcmovb
pusha
fs
xor
sub
cmp
push
cli
fxtract
push
stc
mov
add
test
aas
into
fisttps
adc
and
ljmp
mov
outsb
sbb
and
call
and
aam
sbb
in
xor
fldcw
jle
mov
je
xchg
xchg
push
sahf
xchg
fldcw
sub
xor
insb
pop
stos
fwait
popf
insl
pop
pop
ljmp
call
insb
into
dec
int3
push
jo
mov
std
int
imul
shlb
shrl
test
ds
fsubrl
jnp
test
or
jle
les
push
std
lds
inc
mov
outsb
dec
scas
xchg
pop
aas
xchg
int
sbb
out
sbb
add
push
ja
pushf
sbb
mov
cmc
in
sub
mov
sti
pop
test
daa
addl
aas
ljmp
push
xchg
sub
out
mov
lcall
fcomps
lret
inc
out
fcmovnu
clts
add
jne
mov
dec
xchg
push
inc
fbld
xchg
hlt
jl
test
lcall
or
or
sbb
mov
divl
dec
sahf
cmp
lods
mov
adc
mov
mov
rcr
or
add
cltd
or
jb
icebp
xor
in
cmp
pop
mov
pop
sub
xor
je
mov
aas
movsl
and
mov
jg
bound
fmuls
cmp
mov
push
add
int
mov
mov
rcrb
mov
dec
jae
loop
fs
movsl
xchg
lock
mov
addr16
bound
pushl
xchg
jge
cmpsl
and
mov
push
mov
and
lods
es
cmc
adc
test
mov
scas
aad
aas
std
pop
dec
pop
sbb
mov
xor
rcll
daa
or
imul
push
icebp
jno
mov
xchg
mov
lea
fxch
pushf
shl
mov
mov
shll
push
lcall
loope
pop
insb
lret
push
or
scas
jecxz
lret
pop
jb
shlb
sbb
push
shlb
push
add
mov
cmpsl
ret
je
addb
pop
pop
inc
movsb
fs
or
out
cmp
push
inc
push
push
push
gs
mov
xor
repnz
inc
push
lahf
jmp
push
jle
loopne
ja
sub
mov
test
jne
inc
pop
mov
imul
das
push
or
add
mov
orb
jmp
adc
or
xchg
or
adc
xor
add
jne
inc
imul
dec
mov
cs
aaa
push
cld
add
sbbl
ljmp
je
mov
ret
xor
cltd
ja
xor
add
jns
lock
xchg
cli
cs
push
sub
mov
jo
sbb
loop
icebp
int
in
mov
faddl
cmp
jnp
rcrl
mov
jge
mov
cmpsb
mov
fs
stos
cltd
add
aad
pop
loope
dec
aam
push
inc
add
xor
mov
and
cmpsb
das
inc
in
clc
and
fists
jnp
pop
and
pushf
pop
jle
add
xor
pop
xchg
inc
or
push
enter
aas
out
fbld
faddl
test
lea
adc
fst
xor
loop
in
nop
jmp
sub
mov
inc
int
fldl
out
dec
pop
adc
ficoml
lret
jno
dec
daa
mov
lods
push
fwait
int3
mov
test
insb
mov
jns
adc
mov
cltd
push
add
lea
dec
jl
fwait
or
mov
pop
jge
mov
cmpsl
sbb
mov
mov
and
jno
xlat
cmp
jbe
xlat
sbb
pop
cmc
repz
mov
mov
mov
sub
dec
jo
sarl
aaa
xchg
cmp
mov
jno
repnz
jle
cmpb
cli
das
loope
addr16
adc
pop
lods
mov
or
xchg
imul
lods
mov
data16
and
out
pop
fisubrl
dec
jne
sarl
push
aaa
or
idiv
cld
sbb
aad
cmpsl
cltd
lds
aas
inc
in
xor
jbe
loopne
push
dec
xlat
es
stos
mov
imul
pusha
xchg
push
cmpsl
ds
mov
test
aad
push
rep
pusha
mov
jecxz
and
lahf
push
xchg
cli
pushf
cmp
push
mov
inc
repz
jge
loope,pt
stc
adc
inc
in
sbb
jae
mov
ret
jno
ds
pop
jno
xchg
popl
negl
dec
adcb
inc
arpl
cmp
lcall
cmp
xchg
lds
gs
std
inc
mov
jmp
popf
mov
jo
lods
jb
nop
jg
fcoml
popf
pop
pushf
mov
cmp
fisttpll
bound
cld
mov
call
push
loope
dec
dec
and
and
pushf
dec
push
lock
repz
mov
xchg
orl
out
sbb
sub
xchg
mov
add
mov
mov
fmuls
cmp
and
mov
pushf
and
outsl
mov
push
sbb
addl
jo
adc
addr16
mov
add
mov
in
shld
cmpsb
call
cwtl
fnsave
xchg
sub
mov
mov
in
inc
sbb
mov
push
xchg
pop
jae
xor
xchg
aad
cmpb
sub
out
es
lds
lods
push
add
adc
int3
dec
stos
sub
scas
mov
or
shlb
and
cmp
adc
sbb
loopne,pt
push
add
inc
lahf
xchg
add
jp
sahf
addr16
mov
daa
mov
add
sub
psrld
rolb
rcll
mov
xchg
jmp
or
bound
mov
test
stc
push
inc
adc
outsb
aas
bound
arpl
add
jl
pop
lods
les
or
testl
dec
xchg
cmp
jo
cli
out
mov
shll
pop
sti
loope
popf
aad
xchg
loop
in
ds
ret
add
mov
idivb
mov
jecxz
clc
dec
or
les
ljmp
inc
xor
es
mov
add
add
fldcw
adc
out
xchg
mov
shll
sub
sbb
jb
insl
xor
shl
hlt
popa
movsl
xchg
push
dec
inc
jb
cli
cmp
sbb
jbe
xor
pop
mov
dec
pop
insb
sub
xchg
cmp
cmpsb
insb
faddl
fisttpl
mov
jecxz
xchg
or
aaa
mov
stc
cmpsl
lfs
adcb
test
sarb
sub
mov
sub
stc
and
stos
adc
cli
sbb
mov
int3
sarb
fs
jnp
push
xchg
cs
mov
jle
sub
je
add
mov
std
dec
xor
jo
aas
lea
xchg
shlb
push
insl
negl
pop
lahf
dec
jmp
out
lods
mov
dec
sub
jge
cwtl
adc
push
inc
and
sbb
adc
sbb
cwtl
js
cmp
pop
add
xchg
inc
andl
shr
ds
mov
add
cld
test
push
cmp
imul
sarl
jecxz
mov
push
cmp
adc
les
jmp
push
dec
sbb
cltd
testl
shll
pop
push
cmp
mov
lcall
inc
stos
enter
mov
daa
lahf
fistps
in
cmpsb
imul
dec
mov
stos
js
adc
lods
jnp
push
dec
stc
mov
add
dec
out
pop
in
aas
ja
jecxz
inc
mov
add
pushf
mov
ss
mov
xor
data16
cmp
inc
jmp
cmp
cmp
dec
push
fwait
jle
lea
sbbb
xor
xchg
in
jne
mov
mov
xor
sbb
pop
in
popf
push
cmp
pop
hlt
jle
push
sub
cmp
inc
test
jp
inc
or
cmpsl
mov
test
mov
mov
inc
adc
ret
cmp
sub
lods
xchg
popa
inc
fwait
adc
ss
cld
fstl
add
ljmp
mov
push
inc
in
cmpsb
repnz
fiaddl
adc
ljmp
sub
or
lods
jge
aam
mov
scas
inc
jg
fnstsw
push
cmpb
xchg
int3
sub
outsb
push
rorb
imul
cmpsb
in
shr
or
inc
insb
mov
xorb
adc
cmp
jo
rcll
pusha
into
xor
scas
xchg
inc
mov
int3
jp
shll
cmp
adc
or
aad
inc
rclb
ljmp
mov
pop
push
add
icebp
lds
mov
mov
sbbl
adc
in
xchg
adc
test
fmuls
hlt
push
pop
push
jbe
cmp
inc
shll
inc
mov
clc
jno
xlat
and
test
cs
mov
add
je
shll
jae
cmc
mov
pop
mov
adc
xorl
add
gs
ret
and
mov
xchg
xor
adc
cmp
ficomps
cmp
fnstsw
push
cmp
dec
jnp
dec
fucom
add
dec
cs
decb
call
push
fistpl
leave
push
lock
or
xchg
leave
adc
sub
adc
fisttpll
dec
pop
stc
pop
test
mov
in
in
test
shrb
shll
bound
push
jg
jb
dec
inc
pop
jno
sub
je
movsb
mov
ss
mov
fadd
unpcklps
popf
lea
or
fstpt
cmp
sub
sbb
sbb
mov
dec
scas
xchg
push
mov
pop
mov
push
push
xor
lret
mov
inc
mov
or
mov
mov
adc
jbe
sarl
int
or
fsubp
and
add
adc
add
sub
inc
adc
mov
clc
cmp
push
mov
inc
repnz
dec
lea
xchg
test
mov
pushf
mov
out
test
out
in
push
dec
jge
gs
incb
mov
mov
dec
sti
mov
cmp
out
popl
stc
int
mov
lods
mov
push
out
lret
das
adc
pop
mov
fwait
stos
in
call
roll
mov
aaa
dec
sbb
inc
mov
push
and
or
int3
push
sub
or
in
mov
jle
xchg
ficoms
dec
call
dec
mov
decl
lock
mov
ret
adc
sti
inc
or
nop
fs
sbb
test
sbb
jno
aam
cmp
std
leave
xor
scas
shl
insl
inc
mov
and
sub
push
xlat
jecxz
pushf
xchg
dec
aas
lods
scas
std
arpl
sbb
xchg
and
push
cltd
mov
popf
inc
add
es
mov
add
ds
push
shrb
sub
jbe
sbb
add
sti
test
mov
fisttpl
sti
push
jp
sub
jp
xor
sti
jbe
push
data16
push
test
shll
xchg
aam
pop
mov
add
leave
jp
dec
mov
push
mov
rcrl
dec
sti
std
xchg
subb
gs
loope
mov
push
dec
dec
repz
jl
test
mov
mov
movsb
mov
in
mov
and
xor
add
test
fcmovbe
xor
cmp
mov
push
and
js
lret
xor
cmpsl
xlat
pop
repz
pop
cld
into
cmpl
mov
mov
les
mov
mov
push
xor
sbb
xchg
lea
push
icebp
mov
jge
push
in
aad
out
jns
sbb
dec
arpl
jecxz
push
and
mov
push
faddl
pop
mov
mov
push
fstps
jecxz
lret
xchg
xor
aaa
xchg
das
inc
nop
bound
xchg
mov
lea
sbb
pop
jmp
push
mov
sub
es
xor
xchg
mov
das
in
jmp
rcl
outsb
into
mul
add
dec
test
loopne
push
call
push
cs
jo
sbb
inc
sbb
pop
mov
lret
nop
fdivrs
adc
sbb
fists
jmp
xchg
jecxz
mov
aad
sbb
pop
or
ja
sti
test
cmpsb
dec
repnz
icebp
cmp
xor
addb
inc
repz
sbb
ret
and
jp
push
js
fadds
push
sbb
rcrl
in
addl
and
fdivr
ljmp
mov
jne
xor
loop
adc
add
push
mov
lahf
in
mov
out
repnz
js
fstpt
fs
cltd
pop
insl
mov
xor
push
add
dec
repz
jae
insl
cmp
lods
aad
xchg
cld
test
inc
push
jl
pushf
lock
cmpb
scas
movsb
shll
in
xor
xchg
mov
outsb
lock
inc
repnz
lock
and
stc
cmpsl
mov
push
lock
imull
lahf
daa
ss
mov
das
mov
push
or
lods
inc
xlat
pop
inc
lds
hlt
pop
enter
in
mov
inc
negl
loope
fucomp
jo
js
cs
sub
pop
notl
aad
or
jp
ss
and
sbb
and
pushf
repz
push
mov
push
pop
xabort
push
ret
iret
jecxz
mov
cmp
lea
in
pop
pop
mov
mov
loop
add
cmp
std
cmp
inc
or
cmp
subl
push
std
sbb
shll
rclb
adc
jb
push
jecxz
hlt
ljmp
xor
test
repz
pop
les
stos
insb
aaa
adc
es
adc
push
hlt
fmul
pop
add
ficoms
fldenv
fisttpl
int3
lahf
push
lods
sub
mov
cmc
not
in
std
push
rorb
jno
notb
test
mov
sub
rclb
sarl
cmpsb
sub
clc
xchg
cmp
inc
sub
jbe
sbb
adc
jp
adc
in
mov
stos
xchg
fsubrl
sbb
lock
repnz
stc
pop
xor
mov
clc
sub
sar
and
adc
lock
mov
nop
shlb
mov
mov
loope
mov
jmp
fisttpll
or
mov
jno
inc
shr
scas
mov
inc
adc
sub
mov
mov
jmp
push
aas
cwtl
loope
push
sti
flds
xor
or
pop
lds
cli
xlat
bound
in
sarl
movsb
negl
je
arpl
jno
mov
loopne
adc
popa
cli
add
xor
rclb
pop
movsl
inc
mov
outsl
popf
test
cld
and
rorb
movsb
scas
rcrb
ret
lods
lcall
sub
into
mull
cmp
imul
dec
adc
pop
in
adc
cltd
ds
repnz
es
iret
xchg
adc
pop
pop
ret
cld
mov
leave
rclb
cmp
pop
int
test
xchg
sub
mov
sbb
or
jle
mov
mov
shl
or
push
push
cltd
ret
adc
ss
mov
out
lea
sbbb
sub
popl
sub
imul
mov
mov
and
cmp
or
cmp
outsl
aad
mov
jae
sub
add
pop
lcall
fucomp
sub
data16
sub
xchg
and
mov
das
sbb
or
pop
dec
test
out
sub
mov
mov
push
mov
fnsave
ror
rcr
aas
mov
mov
and
scas
mov
dec
into
mov
orl
shl
xlat
mov
xchg
jno
or
mov
popf
arpl
adc
shrb
add
int3
mov
inc
data16
fwait
jnp
xor
aam
sbb
adc
ret
fs
push
xchg
or
pop
pop
push
cmp
prefetcht0
jp
push
mov
xchg
cli
pop
add
add
sub
gs
inc
lret
xor
cli
jecxz
je
les
adc
pop
shrb
add
lret
addr16
jmp
adc
push
jae
cs
push
fnstsw
xchg
mov
sarw
cwtl
rcl
push
popa
push
aas
das
fs
lea
flds
shlb
mov
push
lcall
pop
in
jg
push
aaa
adc
jle
sbbl
aas
lods
lret
or
insb
jp
cmpb
lods
pop
loopw
pop
outsb
mov
jb
sbbl
inc
push
lods
dec
lods
pop
jno
adc
insb
inc
lods
add
mov
dec
loopne
fwait
adc
cmp
cmp
inc
cli
jl
and
das
outsb
dec
pop
sarb
stos
scas
cmp
es
xchg
sbb
xor
shlb
lahf
lret
cwtl
loope
adc
fnstcw
imulb
jmp
cld
push
sub
cmp
aaa
lods
je
shlb
insl
push
xor
test
jae
lea
push
mov
jg
fnstsw
mov
icebp
hlt
mov
adc
inc
cld
aas
nop
lds
push
outsl
les
sti
add
repnz
ja
mov
or
and
fimull
ret
push
dec
xor
test
mov
les
in
gs
cli
mov
inc
subb
bound
insb
add
fmull
push
sbb
sub
test
pushf
cwtl
fiaddl
jno,pn
jecxz
xchg
stos
push
lea
pop
jmp
in
adc
rcr
std
call
loop
ret
and
mov
fisttps
outsb
popl
cmp
in
pop
jg
in
adc
dec
sub
scas
jns
mov
push
inc
cmp
xor
lods
sahf
or
ja
int3
div
sbb
pushf
jb
or
dec
imul
test
adc
xchg
xor
push
call
xchg
sti
sbb
add
mov
or
xchg
icebp
jmp
inc
adc
repnz
xrelease
xor
mov
mov
jns
mov
adc
mov
sbb
stos
shlb
fstpl
jbe
push
pop
nop
ficompl
jno
cmpsl
outsb
xor
in
or
sbb
mov
movsl
dec
hlt
sbbb
filds
dec
jecxz
jecxz
and
pop
add
test
movsl
icebp
je
sbb
sbb
push
mov
inc
in
ja
add
movhps
aas
pop
imul
dec
cwtl
daa
inc
add
leave
dec
lods
subb
mov
les
shrb
pop
dec
rol
inc
scas
cmp
shlb
add
std
jbe
xor
adc
pop
xor
rcrb
and
adc
popf
sbb
cmc
pop
mov
je
fsubs
leave
push
pop
decl
fwait
sbb
mov
xchg
popf
cli
cmp
add
push
jbe
call
xlat
pushf
xlat
mov
pop
ljmp
in
adc
jne
push
bound
mov
ds
add
cwtl
aam
dec
fistl
mov
call
js
aas
cmp
fcomi
dec
mov
out
cld
pop
mov
frstor
mov
out
pop
mov
sub
pop
push
lahf
inc
ficompl
jbe
xor
cmc
jae
xchg
jb
movsb
sbb
test
lods
fwait
mov
push
sbb
mov
or
jae
gs
push
ret
mov
inc
cmp
adc
xchg
adc
xchg
inc
sub
jns,pt
lds
dec
aad
pop
jl
mov
inc
rolb
shr
js
push
add
xor
adc
cmp
add
in
movsl
xchg
mov
fistpl
cltd
test
mov
ror
xchg
mov
fdivs
sbb
mov
mov
jp
sbb
mov
lahf
jg
scas
fdivrs
push
das
cwtl
inc
mov
xchg
jmp
iret
repnz
xor
jl
ret
mov
stos
inc
mov
xor
mov
test
sub
in
das
xlat
jns
jge
ljmp
notb
sbb
out
imull
pop
dec
push
xchg
aad
sarl
cmpsb
push
cmp
dec
aaa
push
loopne
movsl
mov
push
movsb
xchg
hlt
cmpsl
in
repnz
xor
inc
xor
or
test
jmp
sti
mov
imul
andl
cmp
push
iret
js
popa
mov
incl
add
pop
andl
lock
push
jns
cmpsl
dec
push
repz
cmc
into
cmp
dec
pop
cwtl
mov
cs
jb
or
dec
out
xor
aas
insb
add
jo
inc
rcrb
mov
mov
xchg
jb
in
fstpt
or
push
test
adc
mov
mov
push
push
fs
repz
shl
lret
mov
dec
xor
push
and
mov
jne
arpl
adc
or
out
stos
pop
pop
sub
adc
sub
mov
aad
jns
push
repnz
fwait
decl
mov
mov
aas
cmp
and
xorl
aas
sbb
pop
jbe
and
cmp
shl
adc
jmp
and
jge
clc
fwait
rolb
dec
push
daa
arpl
shrb
cmp
and
leavew
xor
sub
insl
mov
mov
inc
mov
mov
roll
subb
enter
cs
negl
fidivrs
push
add
xor
lret
aad
pop
test
mov
cltd
cs
cmp
in
fwait
lret
jl
jae
sub
adc
lcall
or
sbb
push
aas
xor
dec
or
arpl
cmpsl
fcoms
push
or
mov
mov
xchg
and
push
fcoms
pop
ret
inc
jnp
push
shrb
adc
lret
mov
imul
or
xor
test
jl
xchg
mov
sahf
inc
adc
adc
cmpsb
dec
mov
add
cs
inc
loope
xchg
sub
cld
push
lret
out
add
dec
in
nop
movsb
push
aam
ljmp
in
inc
cmp
push
pop
cmovno
and
ret
cld
dec
dec
pop
add
pop
fbstp
inc
and
jmp
sub
popf
sbb
sbb
imul
cmpsb
adc
into
pop
add
adc
in
cmp
sbb
test
dec
test
pop
dec
xchg
cs
add
aas
je
xor
sub
int3
insl
aaa
std
movsl
je
loop
and
and
inc
rolb
cli
mov
mov
adc
add
mov
in
data16
fistpll
mov
xchg
lret
dec
in
sbb
hlt
pop
cmp
lods
imulb
cmpsl
inc
sub
xorb
pop
mov
je
pop
shlb
popf
cmp
mov
or
aas
in
in
jecxz
sbb
cli
int3
ret
inc
loopne
xor
push
es
dec
mov
pop
aaa
mov
imul
aaa
dec
ds
sub
mov
pop
enter
lcall
cmp
lea
pop
jle
test
xchg
popf
cwtl
out
mov
gs
inc
lret
loope
pop
jnp
mov
loop
dec
adc
mov
jmp
xchg
test
mov
movsl
jne
lret
shrl
add
add
loope
lret
xor
subl
sub
xchg
clc
iret
ljmp
sbb
cmc
dec
test
stc
pop
mov
shrb
lods
sub
mov
and
cld
pop
pop
mov
mov
xor
dec
leave
jecxz
shll
lret
dec
imul
or
cmp
int
cmpsb
pushf
shlb
cmp
andl
mov
je
mov
mov
das
aad
and
sbb
mov
leave
data16
cmp
mov
fwait
outsl
cmpsl
or
rclb
and
aaa
jge
data16
ds
mov
cmpsl
lods
lcall
jmp
dec
sbb
pusha
push
mov
or
cmp
fsubl
pop
std
out
es
test
je
addb
cwtl
sbb
cwtl
cmp
decb
fists
and
in
andl
cmp
or
repz
sub
add
gs
or
add
mov
es
pop
fisubs
sti
dec
adc
mov
sbb
mov
dec
mov
rcr
fptan
xor
fists
push
test
sbb
decb
pop
mov
adc
test
pop
stos
dec
xchg
cmp
jp
jle
sbb
cmp
and
jo
pop
jecxz
je
inc
fistps
jae
xlat
sahf
je
shlb
adc
aaa
ret
sahf
sub
in
icebp
and
cmpb
or
test
aad
ja
test
jp
xchg
insb
xor
add
inc
and
push
inc
push
jbe
or
jbe
sarl
mov
call
stc
shlb
pop
xor
outsb
cmp
test
ljmp
push
addr16
ret
fnstcw
mov
sub
popa
mov
mov
cmp
and
pushf
jno
arpl
in
inc
xchg
cld
icebp
insl
out
pop
arpl
cmp
xchg
sub
cmpsl
scas
mov
pop
jle
jp
push
rcrl
push
add
lret
xchg
aas
out
jnp
mov
xorb
pause
neg
testl
lea
stos
pushf
jnp
jbe
jmp
xor
cltd
mov
and
ret
mov
pop
mov
lock
push
or
mov
or
pop
rolb
loop
dec
adc
bnd
mov
fmuls
dec
dec
xchg
inc
xor
in
iret
adc
pop
jl
test
notb
cmp
in
repz
out
fsub
push
inc
push
or
cs
insb
aam
mov
inc
mov
xchg
loope
mov
das
incl
rclb
test
mov
mov
and
fistps
fwait
idiv
cmpsl
test
xchg
push
jmp
push
jp
data16
or
cmp
testb
xorl
lock
xchg
js
movsl
in
fistl
fwait
pushf
into
xor
addl
scas
mov
stos
outsl
push
jmp
ljmp
dec
cmp
addb
mov
push
add
push
mov
cmp
jno
aad
and
add
inc
sub
in
mov
jl
dec
ljmp
push
jo
or
aam
nop
mov
cmp
stc
adc
and
lea
add
adc
sbb
xor
int
jae
adc
sbb
aaa
sub
cmp
xchg
jp
add
sbb
das
dec
addr16
xchg
or
mov
into
jo
je
mov
mov
sbb
dec
or
xor
jge
mov
fiadds
fists
xor
outsl
dec
imul
xchg
fists
inc
push
or
aad
hlt
shlb
sub
scas
js
mov
test
aam
jp
sub
cmp
repnz
push
adc
cltd
cmp
push
push
mov
shll
cmp
jb
xchg
data16
dec
or
test
xor
fwait
enter
adc
lret
loopne
adcl
push
push
lret
ret
push
out
xchg
lods
test
mov
xchg
jnp
adc
xchg
mov
scas
dec
mov
sub
sbb
mov
push
xor
sbb
insl
movsl
jmp
test
arpl
sbb
mov
lret
mov
jecxz
loope
pop
pop
jo
imul
push
xchg
insl
fwait
out
cmp
xchg
mov
rcr
scas
cmp
push
imul
mov
repnz
mov
add
pop
pop
ret
xor
bound
shrb
gs
and
fmul
iret
jmp
xchg
and
xchg
mov
pop
jmp
rclb
sarb
mov
in
push
repnz
jo
insb
stos
push
int
ud1
imul
dec
sub
inc
sahf
inc
rorl
cmp
sub
aad
data16
shrb
add
lahf
and
cmp
insl
iret
mov
jnp
inc
jmp
lock
push
into
mov
es
push
adc
out
inc
xchg
sbb
and
mov
fdivrl
jl
mov
scas
pop
or
lock
jnp
movl
lds
fidivl
inc
lea
sub
xor
inc
popa
push
out
cmp
icebp
or
ret
outsb
pop
fdivrs
push
mov
inc
mov
movsl
xchg
sti
push
adc
cld
lcall
mov
sarb
xchg
inc
cwtl
rcrb
add
xchg
xor
adc
into
enter
xchg
sbb
in
xchg
sbbl
out
ljmp
arpl
call
cli
fsubs
sti
imul
imul
pop
sbb
clc
lcall
mov
pop
add
shll
shr
pop
dec
movsb
jp
and
mov
or
clc
jmp
mov
aas
popf
push
aas
mov
xor
jge
loope
cmp
pop
sbb
pusha
cmpsb
mov
mov
dec
shrl
mov
decl
jbe
jb
cmpsb
sbb
dec
jle
sbb
aam
or
ret
push
pop
jo
sub
loopne
inc
aam
jo
xchg
inc
xorl
inc
les
daa
and
enter
scas
sbb
add
mov
iret
icebp
jg
add
dec
sbb
xor
pop
mov
sub
in
push
mov
movsb
stc
setnp
jne
adc
bound
sahf
inc
lahf
mov
setb
or
shlb
orl
jo
mov
sub
adc
hlt
pushf
push
rcrl
into
shll
movsl
sbb
xchg
mov
out
cmp
loopne
ret
ret
dec
rcrb
sub
sub
pop
daa
pop
push
test
adc
out
jae
andb
cmp
jne
stos
pop
mov
push
jns
lds
fisubl
mov
jge
push
mov
pop
leave
loopne
add
xor
xchg
xchg
mov
cmpsl
stos
sbb
pop
mov
nop
mov
test
ds
out
jbe
imul
sub
fwait
xor
jmp
jle
out
pop
jge
cld
or
jmp
inc
add
je
lret
icebp
sbb
mov
loope
jo
cli
outsl
inc
pusha
in
push
lods
test
clc
rep
xor
sahf
xchg
loopne
movsb
inc
inc
neg
sub
mov
xchg
adc
or
outsl
jne
cmc
sbb
xchg
popf
jo
dec
stos
out
in
xchg
mov
xor
adc
imul
imul
cld
dec
inc
or
mov
mov
aas
mov
fbstp
push
pushf
sbb
ret
pop
cmp
inc
inc
test
adc
lods
inc
jecxz
insb
xor
repnz
mov
xor
or
push
sbb
xorb
in
ljmp
push
mov
test
cmp
add
sub
fdivs
lods
es
adc
push
daa
cmp
outsb
addl
push
push
dec
xchg
mov
fldt
movsb
push
lods
imul
sti
mov
mov
or
pop
repnz
in
in
adc
add
mov
jmp
pop
mov
loope
lds
idivb
pop
mov
inc
adc
pop
cmp
loopne
sbb
cmp
insl
ret
cmp
dec
jbe
adc
xchg
jno
dec
jae
loopne
daa
lea
push
jb
ret
mov
out
mov
scas
shlb
push
js
inc
into
pop
or
mov
or
dec
xchg
cld
xor
rorb
mov
mov
pop
or
es
jb
sub
add
out
jo
es
call
jno
popa
inc
jns
push
in
sub
dec
adc
flds
xchg
pop
mov
and
or
movsl
adc
push
jge
add
pop
and
ja
or
push
jno
xorb
add
mov
mov
jb
dec
loopne
push
sti
shl
sti
dec
loope
ffree
mov
mov
ss
scas
movsl
scas
pushf
getsec
pop
and
cmpl
mov
adc
and
pop
cmp
iret
imul
mov
mov
push
lret
mov
bound
push
popa
mov
push
lea
push
jne
adc
sbb
mov
fidivs
mov
mov
jg
mov
mov
mov
mov
push
or
daa
add
mov
push
cltd
jle
pop
dec
mov
xor
jmp
and
cmpb
pusha
sub
cmp
outsl
test
sbb
mov
dec
push
aaa
mov
jnp
sarb
mov
sub
mov
xor
sbb
dec
cmp
push
ret
or
movsb
loopne
adc
dec
test
movsb
mov
repz
adc
xor
add
das
mov
or
ss
scas
pop
pop
fildl
push
in
test
sub
mov
sub
and
in
in
push
xchg
or
mov
and
ret
jnp
fidivrs
pop
pop
dec
outsl
testl
add
xchg
dec
ds
ds
push
xchg
out
shlb
dec
es
outsb
jbe
stc
jecxz
mov
mov
adc
pop
fistpl
rclb
test
xchg
call
adc
jbe
push
fcompl
cmp
shl
mov
popa
adc
cmp
mov
js
aas
mov
jge
jb
movsb
enter
push
rorl
inc
mov
adc
xchg
mov
cli
cmp
pusha
andb
mov
jb
xor
sub
pop
pop
leave
movsb
cmp
add
adc
aaa
repz
loop
repz
insl
jae
lcall
and
fnstcw
sbb
push
inc
xor
aam
das
dec
cmp
dec
es
push
cwtl
test
loop
xor
cmpb
mov
ljmp
xchg
lock
pop
and
insl
mov
xchg
pop
mov
aad
in
into
pop
imul
mov
and
decl
out
mov
mov
jb
movsb
jle
sbb
lret
push
cmc
dec
or
push
bound
outsb
mov
mov
lahf
loope
xchg
inc
arpl
adc
repz
push
and
or
test
stc
add
sub
pcmpeqb
or
cli
lcall
frstor
lret
hlt
fwait
pushf
push
mov
jne
jo
dec
movsb
arpl
add
outsl
sbb
dec
lock
fwait
jp
clc
and
ss
int3
subb
push
hlt
fdivrs
mov
test
int
xchg
adc
mov
fwait
pop
ss
rcll
mov
xlat
out
loope
jmp
mov
sub
popa
push
mov
enter
repz
in
jno
lahf
pop
clc
and
xor
insl
clc
sub
stos
inc
inc
lock
and
stc
lahf
push
popf
sbb
pop
add
rclb
xorl
aas
mov
daa
lock
or
and
js
pusha
add
jo
bound
sub
lds
les
mov
int3
or
scas
sbb
dec
pop
stos
mov
sbb
fldt
aad
inc
xchg
inc
fisubrs
inc
ret
int
cmp
int
cmp
jnp
push
stos
pop
cmpsb
push
mov
outsb
jmp
lahf
sub
aas
inc
cmc
icebp
dec
addl
lods
pop
ja
mov
lret
sbb
shl
push
adc
push
xor
fs
ror
test
stc
sbb
add
repz
jno
lods
xlat
fwait
jne
je
pop
ljmp
xor
ret
lret
cmpsb
loope
and
xchg
cmc
ret
into
pop
aad
pop
cltd
cs
pop
bound
dec
adc
push
adc
loope,pn
out
inc
adc
hlt
pushf
sbb
mov
das
sbb
aas
dec
mov
outsb
testl
fwait
in
nop
dec
mov
negb
ret
pop
je
jecxz
xor
ja
adc
ds
dec
shrb
insl
into
jmp
inc
cmp
rol
sub
pop
or
inc
addl
insb
add
in
subl
out
mov
mov
cmovne
pop
add
sbb
lret
mov
push
jne
pop
mov
jae
jb
xor
mov
xlat
lods
add
int
jp
sbb
out
mov
sbb
outsb
fwait
into
inc
addr16
sbb
pop
je
lcall
pop
jecxz
mov
push
sti
sbb
daa
xor
adc
xchg
xchg
cld
xor
dec
mov
int
rclb
dec
pop
dec
or
lret
jmp
xchg
mov
push
inc
out
push
push
int
push
mov
addr16
sti
jo
mov
xlat
out
fcomi
xor
int
data16
mov
pushf
psrld
or
adc
mull
mov
sub
inc
push
ss
or
mov
push
add
mov
gs
xchg
jae
mov
jmp
sti
in
js
push
jmp
loop
jl
dec
adc
mov
push
adc
rorb
add
into
test
mov
adc
pop
je
inc
dec
ret
or
adc
bound
sbb
pusha
cmc
pop
mov
lret
mov
ja
mov
cmp
xor
mov
btr
pusha
ss
lcall
mov
insl
mov
mov
hlt
mov
rcll
or
in
leave
cmp
scas
fsubl
jmp
mov
xor
mov
rcr
push
out
popa
xchg
shl
int3
pop
lahf
cmp
adc
cmpsb
xchg
ret
repz
out
popa
jb
cmp
lret
sub
sbbb
add
jbe
jo
iret
adc
ficomps
adc
repz
cmp
dec
insl
out
mov
mov
add
inc
or
mul
lcall
mov
in
andl
ror
test
adc
ja
fisttps
add
jmp
inc
pop
sub
pop
mov
lret
inc
imul
sbb
jmp
fiaddl
cs
sbb
cwtl
pop
dec
addr16
xorl
cli
mov
xchg
xchg
rcrl
xrelease
fiadds
daa
sar
lea
lcall
add
push
dec
cwtl
lods
pop
mov
nop
cmp
add
fwait
subb
mov
rclb
pop
push
out
adc
add
push
push
loope
stc
sub
xorb
ds
adc
lahf
in
add
or
lahf
fs
daa
inc
pop
lahf
js
sarb
lods
iret
sub
push
stos
popf
sahf
jbe
and
jbe
test
inc
daa
xchg
out
cmp
xor
idivl
jmp
add
nop
inc
mov
or
mov
add
pop
mov
test
pusha
das
jns
cmpsl
and
mov
je
cld
xchg
pop
jge
lods
pushf
and
pop
mov
or
fdivs
or
inc
pushf
mov
adc
fwait
pop
sbbl
inc
out
jge
cmp
daa
push
pop
xchg
icebp
mov
xor
leave
fwait
fwait
lcall
jle
sbbb
jbe
nop
jb
mov
mov
push
inc
out
mov
mov
inc
inc
imul
dec
out
mov
lock
inc
leave
mov
push
and
sbb
jmp
mov
mov
nop
xor
cs
mov
rcrb
mov
std
pop
or
lods
fnsave
outsb
aad
adc
icebp
jbe
pop
test
cmp
arpl
fsubs
sub
push
in
jo
add
adc
cmp
xchg
xorl
stc
rcr
repnz
and
inc
lock
imul
pop
adc
int
in
movsb
pushf
leave
cmpsl
movsb
xor
and
addr16
fsubrl
fwait
cmp
dec
fs
jne
das
mov
push
shl
push
test
leave
call
loop
mov
inc
std
shrl
jns
les
call
mov
xorl
inc
mov
fstpt
sub
and
adc
sbb
sbb
push
cli
pop
jno
faddl
xchg
xchg
getsec
jo
lods
outsl
lcall
fs
add
cmp
in
or
mov
inc
fmulp
dec
sub
leave
cmpsb
jnp
stos
adc
cmpsl
mov
mov
hlt
xchg
push
lret
mov
inc
sub
jb
cmc
scas
jne
push
movsb
test
test
fbstp
cmp
adc
sbb
xor
mov
sub
jbe
leave
sti
loop
jno
ret
cli
pushf
cs
or
test
adc
cltd
cmp
call
jae
arpl
mov
in
notb
jmp
xchg
jp
stos
sub
push
push
xor
insb
es
lret
xchg
cmpsb
xlat
xchg
movsb
mov
daa
mov
xchg
inc
push
lcall
repz
adc
pop
enter
test
fs
mov
inc
jg
fsubs
int3
cmp
movsb
hlt
cs
cmp
fwait
rorl
ljmp
adc
sub
lret
add
jecxz
and
mov
mov
sub
sbb
lret
mov
push
and
lret
ja
ja
out
adc
push
sbb
or
mov
mov
mov
dec
pop
popf
rolb
lock
or
rcr
cmpsl
jnp
cmp
jns
pop
adc
cmp
xor
cmc
dec
push
lahf
out
icebp
rorb
adc
mov
mov
pop
sbb
repz
movsl
jnp
adcb
add
pop
pop
mov
sub
pushf
insb
sahf
pop
mov
notl
ret
lret
add
test
mov
jbe
outsb
push
jns
xchg
or
mov
inc
and
fsubr
rcrb
mov
pop
dec
mov
sub
sbb
std
jmp
add
xchg
mov
imul
pop
outsb
aam
pop
dec
repnz
cli
cwtl
adc
sub
into
insl
sbb
or
jmp
repnz
fcmovbe
clc
xchg
test
dec
nop
mov
mov
nop
fwait
cmp
cltd
sbb
das
inc
mov
aaa
dec
pop
push
jne
add
lods
xorb
divb
jns
fisttpl
ja
test
jmp
mov
lds
mov
pand
mov
jb
or
ficoml
sbb
ja
ret
add
adcb
xchg
cld
add
pop
fcompl
js
cltd
cmp
cwtl
mov
or
xchg
lret
or
data16
mov
clc
in
repz
sub
mov
cmp
aas
and
out
cmpsb
or
shlb
adc
out
pop
mov
sub
rorb
inc
push
inc
or
jge
push
dec
popf
std
mov
test
mov
dec
dec
std
and
mov
mov
pop
ja
lret
ror
adc
data16
cmp
test
adc
push
jnp
or
cmp
jp
adc
sbb
or
cli
lea
clc
sbb
sbb
push
cs
mov
arpl
dec
nop
or
ss
cmp
lea
cmpsl
xchg
and
int3
stos
insb
cwtl
outsb
dec
idivl
sub
test
int3
fimuls
add
call
lret
ret
gs
iret
dec
pop
sub
sbbl
mov
add
les
imul
leave
mov
cmpb
xor
aas
mov
adc
imul
sbb
ret
xchg
rcrl
pushf
xchg
out
ljmp
xor
movsl
xchg
push
inc
jae
lock
xchg
rclb
pop
mov
push
arpl
aam
cwtl
jg
adc
sbb
mov
les
push
sbb
add
in
and
cli
add
mov
pop
push
test
arpl
addr16
jp
mov
shl
push
or
cmp
adc
sbb
add
ret
pop
mov
psubb
inc
and
sti
arpl
pop
ja
sahf
inc
cli
mov
insb
ret
fsts
sub
mov
xlat
or
icebp
cmpl
rcl
fsubrl
jle
mov
sub
es
imul
fidivrs
push
outsb
or
xchg
test
jecxz
mov
adc
and
ljmp
stos
lods
test
push
inc
hlt
jb
mov
pop
dec
andl
addr16
and
scas
icebp
inc
incb
movsl
push
mov
or
and
xor
je
test
out
mov
scas
push
push
adc
loop
mov
rorl
stos
test
mov
cmp
lret
sub
stos
or
xor
jp,pn
lods
sti
cmp
ret
xor
ds
pop
push
iret
inc
xlat
clc
out
mov
insb
std
roll
sbbl
xchg
data16
mov
jge,pt
jecxz
jge
sub
push
or
pop
push
mov
cmp
out
jmp
cltd
inc
push
in
add
ds
lret
sub
enter
sub
add
testl
xor
mov
ljmp
push
loopne
in
dec
sub
lret
pop
xor
sbb
js,pt
ss
adc
imul
arpl
sbb
mov
out
cmp
pusha
mov
jge
sahf
inc
pop
test
sbb
sar
dec
scas
leave
arpl
push
fmull
cmc
jle
add
pushl
jb
sbb
inc
cmp
test
cmp
add
ss
ja
stos
pop
pop
inc
lods
subl
xchg
jns
dec
inc
push
and
sub
daa
push
xor
push
xor
fidivl
int
jae
jns
fistpl
pop
mov
es
sbb
sahf
aam
sub
mov
fiaddl
popa
ss
jns
or
jb
test
jg
mov
cmpsl
inc
mov
xchg
imul
add
fcomps
jecxz
lods
in
rorl
lret
inc
ds
mov
xlat
lahf
loope,pt
jmp
and
push
cmc
or
hlt
inc
filds
into
push
dec
gs
jnp
xchg
cmp
addr16
pop
add
cmpsl
bnd
scas
xor
or
adc
scas
xchg
test
pop
icebp
mov
bound
dec
adc
jmp
mov
adc
xor
xor
push
xor
ret
pop
sbb
mov
idivl
fcoms
dec
jl
jae
sbb
test
call
sahf
xchg
bound
dec
pushl
pop
std
popa
enter
push
inc
cmp
insl
push
sbb
cld
and
in
push
mov
and
adc
lea
int3
sub
cmc
fisubrs
inc
icebp
sbb
xchg
fsub
xor
xor
pushl
jb
sub
fildll
push
xor
sub
and
inc
and
cmpb
push
sarb
nop
icebp
lods
mov
dec
lcall
mov
fstp
lret
cmc
dec
pop
mov
mov
int
push
or
or
push
mov
jle
pop
icebp
pop
add
arpl
adc
ret
out
lret
shlb
hlt
nop
fldl
and
inc
test
ss
roll
ja
mov
pop
and
and
mov
mov
dec
xchg
push
mov
repz
or
fnstenv
jl
ret
fdivs
lahf
movsb
mov
and
subl
adc
xlat
clc
cld
ljmp
or
inc
pop
xchg
fidivrl
jmp
int
mov
mov
iret
cmp
mov
inc
pop
xor
mov
lahf
in
jle
inc
push
pop
inc
add
and
cmp
fsubrl
into
mov
jg
or
cli
pop
outsb
and
adc
mov
mov
inc
les
outsl
xchg
mov
into
leave
xchg
pop
dec
mov
lret
insl
mov
xchg
or
aas
data16
pop
outsl
ficompl
adc
and
mov
ljmp
fdivp
movsl
or
mov
pushf
int3
daa
add
jne
aaa
pop
pushf
mov
push
dec
mov
ja
jae
sahf
icebp
or
dec
cmpsl
jmp
xchg
test
in
sbb
fnstcw
mov
int3
jns
fldl
fwait
sub
imul
lods
ficoms
js
sti
enter
inc
in
arpl
push
and
pop
xchg
xchg
mov
jno
xchg
cld
add
and
mov
fdivr
int3
mov
sub
ja
cmp
push
cmp
imul
cmp
cmc
push
aam
in
mov
inc
xchg
loope
xor
out
xor
ficompl
sahf
and
shl
dec
lods
pop
push
add
insb
das
sub
and
jae
fsubs
inc
insl
pop
and
cmp
mov
ja
pop
lds
mov
xor
aas
pop
mov
dec
sbb
dec
mov
add
xor
mov
mov
popa
jo
cmc
pop
insl
push
inc
addb
jl
jo
out
shrb
popf
shll
dec
cmp
cmc
movb
aas
and
aad
fists
sub
pop
mov
sub
out
mov
and
insb
cwtl
add
push
add
mov
daa
cmp
xchg
ljmp
lret
xchg
adc
pop
sub
push
or
add
fwait
mov
jle
into
pop
jl
pop
or
int
out
fisttpll
iret
es
ret
out
rcll
cli
or
roll
nop
lods
pop
cwtl
fcomps
js
jbe
or
xor
add
pop
ds
ds
fstl
or
pop
jns
xchg
mov
aas
pop
cmp
jge
and
and
lahf
test
jno
loop
insl
jbe
add
int
loopne
adc
mov
mov
xlat
inc
inc
call
aam
jecxz
into
cmpsl
xor
aaa
shlb
lock
mov
pushf
and
ss
dec
adc
and
sub
repnz
pushf
sub
dec
xorb
jo
clc
inc
add
cmpsl
divb
xchg
mov
dec
xlat
pop
call
xor
jle
xchg
jp
popf
mov
cmpsb
popa
and
stos
mov
and
or
je
fs
xchg
xchg
movsb
in
rcrb
add
hlt
sub
cmp
aaa
cmp
mov
imulb
in
sarb
pop
div
adc
lahf
cmp
dec
jo
cmp
dec
repnz
jl
dec
pushf
xchg
jbe
pop
add
or
adc
lahf
pop
adc
mov
inc
sbb
adc
dec
shrl
orb
or
jmp
rep
cmp
add
bound
lods
xchg
add
add
pushf
xor
mov
ds
xchg
fucomip
iret
mov
ja
dec
add
pop
outsb
xchg
xor
out
into
divb
pop
in
push
sub
sub
cmp
sub
stc
gs
mov
mov
mov
inc
jns
leave
pusha
mov
push
sahf
pop
out
or
mov
cmp
add
cmp
pusha
mov
sarb
inc
movsb
outsb
fs
add
int
jecxz
outsb
or
push
push
mov
fs
push
and
lea
mov
pop
inc
mov
push
jns
scas
add
jno
sub
mov
cli
jo
mov
mov
add
sub
cmp
push
js
pop
lret
mov
jg
loope
mov
fcompl
ds
mov
ja
push
jmp
jo
ficompl
inc
sub
inc
shll
loopne
jmp
cmp
mov
pushf
mov
scas
bound
outsl
xchg
mov
pop
or
fbld
jecxz
aaa
cmp
cmp
sahf
stos
cld
scas
dec
sahf
in
pushf
loopne
mov
int3
push
outsl
mov
add
mov
aam
xor
sarl
cmpsl
pushf
or
and
lret
movsl
lcall
test
ret
in
js
imul
ljmp
xor
sbb
and
sbb
jge
shlb
leave
cmp
mov
mov
adc
les
mov
fs
aas
dec
lds
enter
imul
frstor
sub
dec
mov
movsb
je
and
into
or
outsb
pop
jmp
pop
loopne
pop
in
dec
fdivl
mov
loope
xchg
into
and
cmc
cmpsb
mov
out
lcall
dec
mov
out
ret
cmp
test
adc
push
das
arpl
test
leave
dec
add
addl
test
movsb
or
ret
pop
and
sbb
push
inc
sbb
cmp
and
pop
stc
push
add
int
and
imulb
leave
xchg
out
into
rcrb
addr16
push
insb
push
aas
push
outsl
scas
jnp
pop
cmp
jb
shrb
sub
mov
test
jne
dec
mov
gs
aam
psubusw
movsl
mov
xor
aas
shl
movsb
ret
popa
imul
sbbb
and
int3
adc
out
adc
imul
xor
popa
and
pop
and
xchg
vandps
in
mov
pop
sysexit
mov
fs
and
stos
push
mov
pop
stc
add
lcall
cmp
jbe
cs
mulb
into
cs
cmc
bound
sub
cmp
inc
lcall
stos
fwait
shll
out
stos
enter
add
ficomps
adc
js
xor
outsb
loope
inc
sub
loope
xchg
dec
adc
pop
xor
xchg
sahf
call
add
test
enter
inc
add
jecxz
sarl
ret
jb
sti
jne
cmc
cld
mov
ffreep
add
jae
dec
cld
cld
pusha
lds
iret
xchg
xchg
mov
jecxz
dec
out
or
cmc
jmp
mov
xor
jb
mov
pop
xor
jbe
adc
jle
inc
pop
jle
jbe
pop
cmp
outsl
push
mov
pusha
cmp
sti
xlat
mov
test
addl
imul
fwait
pop
push
aad
push
or
jge
leave
or
stos
addb
cmp
push
pop
mov
cmpsb
sar
mov
mov
sbb
cwtl
mov
mov
out
or
pusha
cmpsb
adc
pop
jmp
scas
lret
jle
dec
iret
xchg
lahf
arpl
xor
jbe
enter
fwait
loopne
bswap
xchg
fs
repnz
jg
jle
lods
in
iret
sahf
mov
lcall
leave
fs
push
repnz
mulb
inc
lock
cmp
pop
pop
jp
push
pusha
add
inc
inc
sbb
dec
or
rcl
pop
cltd
xlat
mov
fiadds
sub
push
out
loopne
lahf
out
adc
loop
sbb
filds
push
hlt
mov
lods
xor
rorb
sbb
in
movsb
leave
int
cmp
in
scas
add
div
sbb
xchg
je
pop
xor
jo
push
pop
or
add
inc
enter
stos
scas
mov
fldcw
or
outsl
cmp
ds
lock
in
xlat
subl
and
lret
pop
dec
xlat
jbe
stos
add
test
or
orl
xor
pop
jge
inc
stos
imul
test
test
fstpl
testb
int3
push
cli
das
nop
pop
dec
mov
pop
push
sbb
push
in
mov
add
out
dec
mov
cmp
cmpsl
loope
js
sarb
testl
and
cmc
neg
fdivrs
lods
push
notl
mov
sbb
loop
and
outsl
adc
ficompl
cmc
mov
lds
popf
in
aaa
stos
insb
das
stos
mov
pop
dec
repnz
mov
sub
or
cmp
ret
mov
ret
je
daa
inc
push
cltd
out
lods
pop
aaa
xor
ret
test
push
inc
les
add
pop
pop
loope
dec
nop
je
in
test
push
inc
dec
xchg
popa
pusha
sub
cs
xchg
ljmp
jo
inc
jns
mov
or
fldl
add
jno
mov
rol
repnz
outsl
js
repnz
push
lret
rcrb
rclb
fcomps
mov
mov
stc
or
push
in
and
clc
lcall
test
in
xchg
popa
jl
incl
cltd
stc
xor
popf
adc
mov
add
cltd
pop
lock
mov
bound
int3
test
inc
mov
add
adc
push
push
out
cwtl
pop
add
mov
pop
sub
je
add
mov
dec
or
inc
out
lret
adc
mov
add
out
lcall
xorb
movsb
xchg
xchg
fsubrs
dec
xor
push
fnsave
push
in
inc
sbb
jp
lods
inc
cmc
shr
jns
inc
add
add
mov
pop
nop
lock
loop
int
xor
cmpsl
aam
or
jecxz
cld
cli
jge
frstor
pop
imul
pop
xor
stc
subb
add
movsb
das
in
adc
or
cmpl
mov
and
push
push
sahf
cwtl
push
cld
mov
or
inc
subb
out
adc
pop
or
pop
in
sahf
int
or
cmc
pop
push
sub
scas
pop
and
push
test
in
jns
int3
add
jb
sub
testb
out
sbb
jp
subb
in
xchg
inc
aas
insl
push
enter
sbb
cmpsl
les
adc
pop
jl
dec
mov
lods
xor
repnz
xor
sbb
push
jp
jbe
arpl
jne
rclb
lods
out
adc
or
dec
xchg
pop
adc
insb
xchg
mov
sbb
into
or
adc
lds
push
pop
dec
lods
int
out
xchg
or
pop
xchg
mov
scas
push
pop
xor
adc
xchg
jbe
aaa
faddl
movsb
jp
or
js
sbb
cmp
sti
sub
testb
sub
test
hlt
or
arpl
into
xorb
jbe
cmpxchg
xor
call
sbb
mov
stos
xor
adc
cmp
jl
movsl
mov
insl
inc
aam
movsl
xchg
pop
jo
mov
mov
and
add
repz
push
sub
adc
ss
jne
add
xchg
xchg
dec
std
adc
pop
or
mov
out
push
test
lock
pop
xchg
xor
hlt
add
repz
fwait
sbb
test
cs
fwait
jo
je
roll
dec
shr
aad
mov
add
jecxz
jbe
imul
xchg
ds
sub
out
sub
fsubrs
sub
test
fildll
ja
pop
push
push
ret
mov
xchg
ret
xchg
mov
loop
mov
pop
adc
pusha
push
repz
cwtl
lahf
mov
sbb
nop
popl
adc
xchg
jg
mov
pop
pop
adc
lea
pushf
mov
cmp
xchg
std
inc
pushf
std
xchg
fnstenv
cmovle
push
cmp
movsl
pop
and
int
pusha
pop
jg
jbe
xlat
mov
pop
test
cmpsb
mov
stc
or
dec
sub
pop
mov
mov
inc
mov
rcl
test
mov
xor
out
mov
jns
mov
sbb
push
and
add
jno
aas
in
xchg
lds
aam
or
push
xor
aas
cs
cmp
add
cli
pop
lret
push
jnp
mov
xor
push
dec
scas
sbb
js
test
lahf
sbb
or
ficomps
mov
iret
call
out
sub
adc
adc
fadd
ljmp
cmp
pop
ficomps
cld
cld
out
fsubs
xchg
and
or
shlb
mov
add
add
cmp
ret
pop
pop
dec
sbb
sarb
cmp
das
shlb
std
sub
inc
fs
inc
insb
sub
mov
arpl
adc
pop
stos
lock
and
xor
push
pop
movsl
dec
icebp
adc
popa
addb
loopne
sahf
test
mov
cmp
dec
lods
inc
push
or
jno
pop
xorl
jle
mov
es
mov
pop
fiadds
call
loopne
sti
ljmp
push
mov
mov
inc
fsubl
push
in
pusha
scas
pop
cltd
and
pop
mov
xchg
fs
mov
push
push
and
sbb
lods
iret
notl
or
in
leave
add
outsl
push
xchg
fmul
ljmp
je
jecxz
push
pop
popa
and
es
fxch
adc
clc
mov
sbb
hlt
repnz
repnz
pop
fimuls
add
outsl
sbbl
adc
movsb
lods
cmp
and
es
es
leave
or
xchg
shr
jb
out
insl
mov
pushf
icebp
ret
dec
xor
repnz
lods
mov
movsl
inc
pop
push
out
or
movsl
lods
pop
cmp
lahf
inc
popf
cmp
xor
inc
cmp
imul
or
decl
je
in
or
repz
or
lods
sub
or
fidivrl
and
insl
cmp
adc
xchg
mov
test
xchg
in
mov
in
test
mov
outsl
imul
cmp
lods
cmp
mov
dec
jmp
addb
push
or
mov
sbb
fxch
ss
int
popa
stos
cmpsb
adc
cltd
cmpb
lods
xor
jl
and
xchg
mov
call
inc
mov
add
xchg
loopne
pushf
push
or
rorb
push
lret
ja
add
pop
jae
in
inc
pop
fisttpl
jns
cmp
outsb
dec
pusha
pop
aam
dec
push
pop
outsb
movsb
fwait
sub
outsb
sti
outsb
xor
js
inc
push
loopne
lock
sub
cmc
jae
xor
adc
cmp
stos
xor
sub
dec
jb
pop
imul
test
inc
lret
pop
pop
pop
mov
jb
push
sarl
call
mov
sahf
mov
xchg
jp
stc
popa
mov
mov
mov
dec
mov
ja
inc
rcrl
ja
sbb
jmp
and
adc
push
test
data16
fcom
decl
sbb
lock
sbb
mov
mov
pop
arpl
lock
mov
rorb
cmc
ret
jle
jge
sar
lds
mov
jno
add
jle
mov
or
test
pop
add
mov
push
sub
ffreep
mov
pop
mov
lods
rcll
add
ror
cmpl
js
cmp
xor
mov
mov
mov
mov
cmp
mov
int
fadds
jno
int
xchg
xor
repnz
cmp
sbb
mov
test
popa
add
outsb
lret
insl
out
stc
mov
jae
adc
cmp
and
pop
inc
fistpll
dec
sahf
jno
sub
outsb
movsl
mov
popa
in
pop
leave
cwtl
test
inc
scas
shlb
mov
jb
xor
xchg
push
ret
and
lds
mov
js
add
dec
adc
inc
ficoms
nop
pop
push
lahf
cmp
push
jne
les
sbb
lcall
ljmp
shrb
xor
inc
mov
stc
jbe
divl
jo
mov
cmpsb
add
and
mov
ss
rcrb
pop
push
push
xadd
or
sbb
fdivrl
dec
jle
and
in
call
pop
aam
repnz
xchg
dec
int
adc
mov
xchg
dec
aas
jecxz
pop
xorb
add
pop
mov
jns
and
lds
lock
test
out
inc
daa
mov
cmpsl
les
or
fisttpl
mov
mov
xor
loopne
fisttps
pushf
ret
or
ljmp
jl
sub
jp
call
pop
inc
sbb
sahf
dec
icebp
mov
fldcw
loope
adc
mov
jae
fwait
popf
popf
inc
xchg
inc
add
arpl
fadd
ds
push
stos
pushf
mov
pop
cmp
jo
lret
cmpsb
fisubrl
and
insb
inc
repnz
add
testb
rorl
jb
jle
loope
data16
pop
ja
ds
mov
notl
cmp
xor
xor
jp
pusha
movsl
add
stc
dec
mov
dec
mov
push
insb
dec
shr
sbb
nop
mov
dec
inc
or
xor
jmp
cld
or
mov
hlt
or
inc
fstps
fnstenv
mov
cmp
into
lahf
add
ret
adc
in
decl
or
xor
sbb
jbe
cs
cmp
lock
imulb
jne
cmpsb
inc
or
xchg
xor
xlat
adcl
or
aad
jnp
call
fstpl
inc
and
pusha
bound
and
mov
xchg
or
cmpsb
icebp
mov
roll
rclb
and
inc
xchg
mov
jecxz
mov
sub
mov
mov
xchg
ljmp
push
js
sub
dec
fmuls
stos
shlb
aam
dec
and
daa
cmpsb
mov
push
push
cmp
inc
cmovbe
aad
popl
cwtl
in
sahf
aad
add
loop
push
ljmp
add
mov
ret
daa
and
out
pop
pop
add
insl
in
pop
and
dec
into
repnz
popf
xchg
pop
mov
push
fdivp
pushf
xchg
test
mov
pop
mov
arpl
imul
lea
xchg
in
push
xor
imul
lods
leave
xchg
es
divl
jnp
and
inc
dec
sbb
pop
cmpsl
mov
push
sub
cmp
jp
inc
aaa
xchg
inc
dec
pop
cmc
cmp
lahf
mov
pushf
out
fbld
scas
push
mov
sub
cmp
andb
and
pop
cmpsb
test
push
pop
push
sbb
pop
inc
lods
lods
push
and
push
cmpb
imul
mov
jl
mov
push
or
outsl
addr16
cmpsb
test
cwtl
add
mov
iret
cmpsb
packsswb
and
mov
xorl
mov
mov
push
enter
shrb
out
pop
jbe
dec
jecxz
sub
scas
test
bound
cmp
adc
jo
or
lcall
mov
sbb
xchg
ja
jns
mov
lds
aas
loop
imul
xchg
push
sbb
js
popf
ret
cli
push
or
sub
ja
adc
out
fstpl
add
adc
adc
out
mov
dec
insb
fisttpll
popa
xchg
sbb
repz
mov
and
dec
cmp
sub
jge
mov
add
and
pop
mov
pop
inc
xchg
std
out
inc
cmpsl
mov
xchg
insl
insb
nop
xchg
vhsubpd
gs
xor
aas
call
add
or
inc
lods
or
adc
mov
xor
mov
repnz
xchg
pop
sar
aam
add
mov
push
dec
or
mov
dec
sbb
lods
dec
mov
imul
enter
jbe
popf
cmp
aas
xor
mov
and
das
pop
dec
repnz
mov
add
xchg
xchg
inc
sbb
mov
inc
add
test
cmpsb
push
insb
dec
scas
inc
or
cld
enter
lahf
gs
roll
mov
mov
test
mov
xor
pop
movsl
mov
inc
arpl
adc
sbb
pop
aas
jecxz
push
jno
adc
enter
sbb
jmp
add
push
and
push
pop
pop
dec
or
pop
std
jge
and
mov
sbbl
fstpl
push
inc
pop
jl
and
cltd
mov
push
dec
push
sbbl
lahf
dec
cmpsb
or
jns
sub
aad
outsl
pop
sbb
or
add
cwtl
inc
add
cmp
jge
sahf
lock
cmpsl
or
and
mov
arpl
mov
addr16
stos
mov
jo
cmc
sub
or
aam
enter
scas
mov
mov
mov
sub
push
das
dec
push
inc
push
and
mov
in
pusha
pop
jg
cwtl
clc
decl
inc
mov
cld
idivb
dec
movsl
lcall
add
fmul
jl
imul
mov
rsm
and
adcb
shl
jns
pop
add
in
inc
jo
mov
or
adc
cmp
pop
out
mov
js
inc
jge
pop
dec
xlat
mov
or
daa
sbb
in
or
test
push
xchg
pop
add
xorb
ficomps
pop
ss
fidivrl
add
add
repnz
loop
es
push
dec
xchg
jp
mov
lea
in
or
lcall
dec
add
mov
lea
mov
xor
inc
in
hlt
addr16
idiv
xlat
mov
ja
daa
pop
sub
pop
imul
pop
push
int3
push
scas
cli
sub
dec
je
pop
push
in
and
pusha
je
je,pt
mov
aas
movsb
loopne
jmp
jecxz
loope
jne
hlt
mov
jle
pushf
dec
mov
push
ret
fiaddl
fdivrl
pop
jl
insb
mov
xor
mov
leave
mov
sbb
lcall
aas
xchg
push
ljmp
dec
test
cmp
and
inc
repnz
mov
mov
or
cltd
andb
in
cli
pop
mov
mov
xchg
enter
xchg
imul
mov
subb
xor
testl
or
xchg
test
xchg
xor
outsl
pop
int3
jp
es
or
lock
inc
lds
lock
sub
jbe
scas
xchg
mov
dec
inc
repz
mov
mov
sbb
jns
mov
sub
fs
notb
test
notl
pop
push
lea
es
and
outsl
xor
or
je
jmp
data16
cmp
jb
mov
inc
fs
iret
xchg
imul
outsb
sbb
ret
ret
lods
fs
sbbb
add
lahf
pop
sub
mov
mov
pushf
xchg
call
xor
data16
call
adc
data16
and
cs
push
add
jp
in
and
or
push
call
sub
pop
popf
shr
popf
dec
or
mov
mov
scas
jge
ret
out
add
pusha
jg
lret
test
test
lcall
add
addr16
les
sbb
inc
test
dec
cmpb
add
mov
imull
popl
std
xorb
adc
orb
pop
cmpsb
inc
push
js
ljmp
daa
fdivr
bound
mov
adc
mov
xchg
xchg
jno
dec
mov
fdivs
mov
sub
dec
iret
and
push
adc
add
cmc
xchg
dec
bound
mov
fistpl
repnz
and
and
ja
arpl
daa
andl
stos
repnz
and
cmp
mov
out
push
add
sub
ficoms
add
xchg
test
or
xchg
ror
jg
push
and
mov
inc
jle
pop
fmull
out
call
data16
mov
push
and
sbb
dec
push
push
stc
insb
xchg
les
lods
pushfw
nop
and
fiadds
out
subb
in
xlat
out
repz
push
xlat
int3
fistpl
jecxz
mov
cld
sbb
ljmp
lods
adc
xchg
mov
dec
mov
out
jns
stc
fimuls
outsb
cmp
jno
mov
pop
sub
sbb
aaa
push
push
mov
lret
push
lret
push
pop
fwait
imul
negl
lds
and
add
sub
loopne
mov
xor
cmp
bound
bound
cmc
js
decl
xchg
and
xchg
adc
mov
mov
fucomp
or
sti
fimull
mov
movsb
scas
xor
and
pop
sub
lods
outsl
or
jno
push
sub
in
icebp
fcoms
rcrl
or
sbb
mov
lret
in
jns
push
pusha
sbb
xchg
cwtl
cmpsb
add
xlat
mov
inc
push
pop
inc
or
mov
in
das
push
cmc
sub
mov
test
roll
xchg
mov
jb
cwtl
sti
stos
addr16
imul
cmp
pop
jl
mov
in
out
jp
ds
push
gs
popa
mov
mov
push
int3
pop
fcmovnb
sbb
test
pusha
rorb
enter
insb
xor
dec
fdivs
stos
mov
lret
adc
sahf
cwtl
in
inc
aam
push
xor
cmpsl
adc
out
int
push
or
ds
mov
xor
xor
mov
mov
ret
popf
testl
xchg
cltd
pushl
mov
fsubrs
pop
mov
mov
daa
and
cmp
stos
xchg
sub
cltd
mov
sub
sub
mov
mov
xor
out
inc
and
test
pop
leave
sti
out
sti
jecxz
jb
sub
adc
xor
mov
clc
ret
xchg
movsl
flds
leave
xchg
xor
and
or
adc
out
push
out
push
sub
fistl
flds
mov
xchg
inc
and
mov
mov
push
jmp
cltd
js
dec
xlat
aad
test
ss
cmpsb
mov
cltd
or
sub
mov
xchg
jg
and
push
outsb
into
jge,pt
sub
out
scas
push
mov
ss
xchg
pushf
sbb
leave
scas
push
inc
insl
mov
aam
push
jns
mov
in
jp
bound
testb
sub
jb
mov
cmp
mov
add
aaa
inc
das
inc
sub
xchg
negb
lods
loope
xchg
mov
mov
mov
arpl
iret
insb
mov
int
sub
xor
inc
cmpsl
push
clc
nop
cmp
test
sbb
lods
in
fidivl
sbb
lods
adcb
movsb
fstps
popf
xchg
aam
fwait
enter
icebp
add
arpl
adc
xchg
add
in
imulb
ret
mov
addr16
adc
dec
mov
cmpsb
stos
fsts
mov
fisubrs
mov
lret
add
push
jecxz
push
mov
xlat
in
inc
and
arpl
test
jbe
inc
in
adc
movsl
add
mov
add
push
lea
call
subb
test
push
loopne
out
mov
rcr
jle
push
sub
daa
incb
pop
cmpsl
add
mov
mov
or
shl
lods
inc
push
test
mov
fisubs
out
inc
faddl
pop
orl
lea
fnstenv
inc
dec
mov
xchg
loope
mov
das
mov
fs
pop
sub
cmc
xchg
test
popl
sub
mov
cmp
or
lahf
into
stos
or
xchg
jno
mov
loopne
rorb
mulb
jo
popf
into
in
sub
xchg
dec
push
arpl
dec
add
or
cli
stos
inc
add
addb
jnp
push
or
mov
arpl
inc
xor
gs
xchg
pop
bnd
js
xchg
out
sub
cli
fnstsw
sti
std
pushf
and
repnz
out
jno
add
mov
repnz
sub
outsl
cwtl
out
add
les
cli
pop
xor
outsl
lods
int3
pop
enter
jbe
fs
outsb
addr16
add
call
call
mov
mov
xor
and
data16
push
sub
mov
pop
adc
stc
jecxz
xor
aam
loope
mov
shl
pop
dec
test
je
xchg
bound
or
mov
ss
gs
lods
mov
push
fsubl
pushf
insl
cs
scas
ret
dec
addr16
outsb
lahf
mov
cmp
sahf
imul
je
adc
push
sub
hlt
add
cmc
jle
pushf
cmpsl
daa
popf
test
imul
loopne
ds
push
shll
sub
outsb
push
mov
dec
jne
fcmovbe
cmc
movsb
jmp
cld
fs
int
in
sub
jle
mov
into
fwait
jae
cmpsl
int
dec
pusha
jmp
cmp
dec
pushf
test
cmp
sub
cmp
sbb
add
fistpl
movsl
push
or
mov
cltd
stos
push
loop
add
cmp
pop
cmp
xchg
mov
jb
in
ror
dec
jp
dec
xchg
and
or
mov
dec
ljmp
movsb
fsubrl
ret
popa
and
fwait
xor
pop
js
lahf
stos
lret
cmpsl
mov
mov
xchg
jae
mov
fsubrs
fs
pop
mov
dec
push
outsb
sub
add
and
div
sbb
ja
hlt
lea
cli
out
sub
xchg
lahf
shlb
in
xchg
clc
rcrb
sub
loope
sub
mov
stos
mov
mov
ret
repz
mov
dec
inc
popf
sbb
aad
dec
ljmp
es
add
mov
shlb
insl
jmp
mov
jecxz
fdivrl
in
rcll
cmpsl
cmc
fistpl
xchg
lods
lea
mov
mov
xchg
adc
pop
jo
xchg
cmp
push
sub
push
je
out
shlb
mov
adc
out
arpl
aas
mov
imul
test
adc
inc
pop
mov
fisubrs
cmp
and
xor
int
mov
imul
xchg
push
subl
inc
add
mov
scas
loopne
mov
push
pop
pop
pop
adc
mov
mov
orl
mov
push
add
push
mov
cmp
fnstsw
adc
dec
in
loope
xchg
imul
std
sbb
sbb
jbe
cmc
insl
inc
aad
loop
sahf
push
cmp
mov
mov
lds
xchg
popa
dec
add
sahf
stos
mov
mov
data16
mov
fwait
push
xor
dec
in
rorl
dec
mov
xchg
pop
orl
lcall
imul
stc
dec
jg
pusha
negl
push
loop
fbstp
push
jp
imul
loopne
fs
pop
dec
js
aam
in
adc
ret
pop
and
xchg
dec
sub
xchg
push
jecxz
xor
mov
or
xor
dec
cmpsl
lahf
int
sti
mov
insl
sub
mov
xchg
jb
ljmp
loope
inc
cltd
or
test
jg
mov
fcoml
lcall
cmp
inc
rclb
scas
cli
inc
mov
popf
mov
push
mov
xchg
rcrl
inc
jmp
cmp
cmp
out
xor
imul
inc
pop
and
add
scas
aas
aad
scas
or
js
mov
sbb
shll
mov
outsl
sub
stos
gs
jne
outsl
leave
out
loope
xchg
mov
sub
dec
out
scas
or
or
mov
cmp
jae
imul
les
cli
pusha
xor
xor
lods
aad
call
mov
and
sub
sub
aad
lock
out
pop
dec
data16
aam
loopew
arpl
inc
repz
js
inc
icebp
loope
cmp
das
outsl
sahf
mov
enter
ja
fmuls
push
mov
shll
mov
add
scas
dec
sub
js
pop
outsl
push
and
arpl
and
ss
pop
addl
cs
nop
mov
lcall
inc
insl
jmp
into
jae
sub
add
jae
jns
cs
shr
sub
cmp
insl
enter
cmpsl
rcrb
es
mov
cmp
inc
daa
pop
pushf
lea
sbb
mov
mov
lods
out
aam
ficoml
scas
jmp
dec
test
xchg
inc
pop
in
leave
xchg
and
and
fs
mov
jmp
or
and
arpl
lods
and
sbb
in
or
movsl
scas
aaa
adc
ss
pop
and
test
cmp
push
mov
pop
orl
or
inc
dec
dec
loop
aad
shl
int3
pop
mov
pop
pop
daa
jns
sub
dec
and
std
adc
aaa
outsb
imull
lds
ret
cwtl
fs
pusha
jmp
andb
push
cwtl
pop
xor
jns
sbb
cmp
push
addr16
inc
lret
leave
or
push
jle
cmp
push
cmp
aaa
repz
jge
mov
push
rolb
cmp
add
arpl
mov
cmpl
xchg
sub
aam
mov
xor
clc
pushf
cmp
mov
mov
push
sbb
inc
jo
in
xor
shlb
jnp
dec
cmp
outsb
mov
cltd
sbb
loopne
mov
xchg
cwtl
hlt
arpl
add
aam
xlat
jle
mov
pop
into
mov
xchg
fsubrp
hlt
push
add
sub
pop
mov
cmpsb
adc
js
sub
test
lods
inc
popf
sub
mov
add
jp
rolb
inc
dec
inc
and
rcll
jae
sbb
mov
jb
out
jmp
cmpsl
mov
jg
adc
xchg
inc
testl
xchg
dec
in
pop
push
xchg
loopne
lods
nop
mov
sub
mov
xor
sbb
mov
inc
sahf
ss
or
lods
cld
mov
mov
pop
fisubrl
scas
and
mov
outsb
sbb
scas
ret
mov
mov
pop
mov
add
or
das
fadd
sub
cs
push
imul
push
insb
jmp
dec
mov
iret
and
pop
xor
cwtl
sbb
xor
add
mov
clc
stos
clc
add
and
filds
mov
les
std
push
xchg
cmc
mov
lock
push
mov
and
dec
mov
int3
sbb
and
jne
scas
outsl
cs
cmc
jg
push
pusha
mov
xchg
out
jecxz
out
adc
and
pop
push
add
jne
into
push
sarl
int
loope
or
lods
mov
jnp
out
pop
stos
mov
cmpsb
shll
aaa
stos
jp
push
pop
das
mov
pop
or
sub
mov
add
jl
loopne
out
std
ljmp
jecxz
and
cmp
jp
jns
movsl
dec
scas
mov
jae
inc
popa
or
push
mov
cltd
aas
pushf
and
lock
mov
cmp
daa
xlat
inc
mov
xchg
out
leave
push
ret
mov
shlb
ja
shlb
sbb
scas
andb
sbb
adc
adc
push
dec
enter
mov
test
push
xchg
adc
pop
jge
ret
push
imulb
mov
setl
jecxz
lea
outsl
aam
or
dec
nop
add
ucomiss
clc
jecxz
pop
pop
ss
subb
test
lret
add
sti
pop
jne
push
stos
insb
fcoml
pop
les
push
mov
push
adc
xchg
shrl
mov
mov
pop
inc
clc
cmp
dec
xchg
inc
and
push
cs
xor
mov
adc
nop
nop
icebp
xor
adcb
add
lahf
inc
push
pop
push
sub
mov
enter
or
sbb
jmp
push
imulb
jne
jo
push
popa
imul
subb
mov
mov
mov
xchg
in
clc
adc
push
inc
dec
push
mov
mov
adc
lret
and
jo
mov
inc
pushf
bound
adc
movsb
fcoml
mov
lcall
mov
xor
add
nop
sub
lea
jbe
popf
lods
jl
fs
mov
pushf
lds
aad
in
std
mov
jnp
scas
inc
dec
pop
xchg
int3
cmpsl
sbb
cltd
push
adc
lcall
fisubs
filds
xor
fcoms
jno
xchg
adc
out
dec
out
mov
cmp
cld
call
enter
iret
orl
lcall
add
popa
hlt
insb
in
frstor
shr
push
add
sbb
adc
pop
mov
add
cltd
pop
jns
sbb
xor
mov
test
roll
push
mov
cli
scas
mov
outsb
dec
xlat
pop
into
daa
cmp
add
xchg
xchg
sub
clc
mov
out
mov
sub
sbb
inc
imul
lahf
call
inc
dec
movsb
xchg
push
jb
scas
and
mov
ret
sbb
xchg
gs
cmp
fnsave
cmpsb
pop
enter
xchg
sti
imul
stc
jae
in
imul
cmp
jno
test
test
lahf
xor
movsb
xor
and
inc
push
cmp
insl
cs
je
aaa
pop
jg
loop
movsl
icebp
xchg
push
dec
cmpsl
pop
add
adc
lahf
loopne
sbb
movsb
mov
notl
ljmp
inc
sub
and
and
js
shl
cli
sahf
outsl
push
movsl
int3
inc
inc
popf
xor
sarb
rclb
sbb
pop
jne
pop
inc
dec
mov
lock
stos
enter
inc
call
loop
sub
ret
push
sub
jp
lods
decb
pop
std
inc
and
flds
pusha
lret
mov
inc
int3
or
in
push
scas
inc
je
pop
xchg
idiv
clc
jno
sbb
cmp
dec
inc
sti
dec
ror
out
ret
test
lods
insb
dec
adc
mov
int
icebp
sub
clc
nop
push
loopne
mov
mov
mov
call
inc
and
cmpsb
andl
imul
call
sbb
mov
mov
sub
les
fnsave
jl
popf
das
je
or
pop
pop
sbbl
icebp
incb
jne
cmp
push
dec
mov
movb
mov
jl
xchg
sbb
jecxz
imul
shl
out
and
lods
adc
rorl
push
ljmp
std
push
cmc
jb
mov
imul
scas
push
pop
inc
fidivrl
push
test
mov
out
fcmovnb
pop
repz
cld
or
sub
inc
test
das
mov
daa
add
mov
icebp
jle
push
fdivrl
or
daa
add
sbb
and
add
or
or
sbb
dec
and
sahf
mov
adc
pop
stos
pop
cmp
mov
mov
lods
cmp
inc
popa
enter
jg
or
dec
sbb
aad
out
mov
and
ljmp
sbb
in
outsb
sahf
push
mov
std
repz
std
lods
inc
scas
and
lcall
stos
xchg
lret
out
and
ljmp
push
popf
inc
sbb
mov
mov
nop
jnp
in
or
stc
inc
adcl
dec
sahf
dec
fdivs
hlt
push
push
lret
imul
jne
mov
push
push
push
sub
dec
xor
incb
in
ja
mov
popa
sbb
mov
xor
rcrl
ja,pt
jb
mov
stos
in
xor
idiv
mov
ret
dec
mov
mov
ljmp
jae
mov
cmpsl
fimuls
lods
adc
enter
and
ss
out
stc
mov
test
adc
mov
adc
adcl
mov
shlb
clc
in
addl
fildl
lcall
adc
pop
dec
enter
jae
jno
fnstenv
mov
push
outsl
aaa
and
xchg
xor
or
aaa
fstpt
test
outsl
inc
xchg
paddq
pusha
mov
int3
out
sbb
into
xor
lret
es
lds
fidivs
sub
cs
pop
jae
mov
mov
stos
jle
scas
mov
aad
adc
orb
pushf
pusha
lods
jg
push
mov
xchg
sbb
mov
cmpsb
dec
cltd
mov
push
jb
lret
nop
shll
adc
push
sti
push
test
test
mov
aas
pop
mov
mov
sub
adc
fwait
jno
mov
cmp
xchg
out
data16
push
rcrb
sbb
insl
dec
aad
add
jmp
test
mov
insl
stos
leave
jg
inc
fwait
call
and
cmp
adc
jae
movsb
mov
mov
dec
nop
outsl
je
adc
xchg
out
push
sub
or
outsl
mov
ret
imul
cmp
inc
sub
mov
and
ss
lds
mov
xchg
jl
mov
rorb
and
mov
jmp
in
es
repnz
lea
cmc
or
push
clc
pop
daa
sbb
mov
popl
xchg
sub
sar
xor
sbb
dec
rolb
xor
aas
fdivs
fs
mov
push
out
pop
in
push
aad
loop
pop
in
aad
fs
ljmp
xchg
xchg
pop
sbb
push
pop
and
inc
pop
fwait
hlt
push
test
out
add
adc
push
lret
mov
xchg
mov
jle
xchg
ljmp
in
aam
or
in
mov
inc
jmp
mov
push
mov
repnz
push
mov
jne
xor
mov
in
int3
test
stc
cmp
arpl
sub
add
sbb
sub
mov
pop
aas
aam
cmp
cmpsl
mov
ss
shlb
jne
mov
pop
stc
sti
dec
imul
adc
movsb
sub
addr16
or
jno
or
jl
dec
jbe,pn
add
jo
mov
vpsllq
out
sub
arpl
mov
jnp
cld
push
loopne
xchg
push
les
scas
fldenv
int3
in
in
addr16
not
daa
mov
push
mov
xlat
nop
insb
jecxz
std
xor
pusha
sbbl
add
ljmp
jno
sub
dec
neg
sub
pop
mov
xor
bound
ret
bound
inc
sub
clc
inc
adc
adc
jnp
or
mov
push
arpl
loopne
mov
dec
mov
jmp
add
int
sub
fstl
or
sub
pop
add
or
mov
cld
in
repz
and
lock
out
lahf
pusha
pop
xchg
rol
pop
xchg
mov
insb
cmpsl
notl
call
jns
add
fisttpll
sbb
or
cmp
inc
aas
pop
fwait
aad
cs
dec
xor
addb
call
loop
mov
test
dec
cmp
sahf
pop
jbe
loope
lods
pop
inc
adc
jns
fs
addr16
repnz
cmp
test
mov
sbb
dec
repnz
dec
dec
xor
sub
fwait
ja
aas
iret
xor
call
cmpsl
mov
out
nop
movsbl
pop
push
pop
mov
outsb
push
mov
mov
test
outsb
daa
movsl
lret
in
push
imul
in
push
jae
les
add
mov
ja
jle
in
fcmovne
dec
out
leave
hlt
xchg
bound
in
pop
xor
in
inc
push
in
mov
nop
out
in
mov
mov
aam
add
test
xchg
push
stos
inc
adc
daa
mov
or
cs
mov
mov
add
mov
shrb
mov
dec
rol
add
pop
cmc
cmp
mov
pop
jno
nop
xchg
hlt
popa
jne
into
lds
in
outsl
or
inc
iret
and
adc
xor
loopne
jnp
je
xchg
push
pusha
inc
push
imul
mov
sbb
mov
mov
sbb
jno
jne
movzwl
xchg
fwait
rorl
mov
push
cltd
popf
add
nop
movsb
and
or
les
nop
sbb
xchg
sahf
ljmp
sub
gs
inc
out
and
lret
jne
pop
mov
xchg
shl
aad
adc
movsb
in
dec
js
pop
jns
add
inc
hlt
push
mov
dec
mov
jmp
orb
and
out
mov
or
mov
jae
stos
ret
es
inc
sub
sbbl
out
mov
push
ret
ljmp
lods
xchg
xor
shrl
dec
sahf
xorl
stos
mov
pop
pop
in
jg
and
push
out
pushf
xor
aaa
mov
insl
test
xchg
and
std
sub
shlb
mov
and
rorl
lock
je
push
and
push
adc
push
pop
ret
shrl
pop
int3
add
scas
je
imul
cmp
cmpb
loope
pop
pop
cmpsl
push
xor
xlat
adcb
out
jl
push
in
pop
in
adc
lods
mov
or
ret
je
daa
cmpl
bound
add
addr16
dec
scas
sub
in
cwtl
push
std
mov
or
cmp
stos
cmpsb
or
xlat
in
les
xchg
mov
mov
out
xor
mov
rcrb
push
mov
xchg
dec
xor
add
shl
ret
loop
ljmp
push
cmpsl
dec
sahf
orl
bound
push
dec
shr
fcmove
mov
xor
orb
jmp
or
push
push
add
and
mov
mov
mov
xchg
aam
mov
pop
mov
mov
add
sbb
orb
pop
addr16
clc
add
pushf
sbb
pop
fidivs
or
jmp
lcall
xor
mov
xchg
push
jle
decb
sub
cld
insl
add
sahf
mov
sbb
push
adc
int
push
pop
ljmp
fcmovbe
cld
push
out
dec
jo
out
fidivl
test
or
test
rcl
push
push
sbb
mov
pop
mov
xor
iret
and
int
pop
pop
into
dec
fisubl
loope
xlat
jae
jecxz
inc
or
add
clc
pop
cmp
and
insl
or
mov
push
icebp
loope
cs
and
push
and
out
dec
in
fiadds
push
sbb
scas
jmp
dec
lret
xchg
sti
push
sub
jns
rcrb
sbb
pop
aad
mov
imul
cld
leave
jb
dec
stos
lcall
mov
in
jb
adc
jecxz
xor
xchg
push
sbb
aad
dec
add
and
inc
xor
dec
pop
add
mov
cmp
push
sub
inc
aaa
iret
fimull
repnz
push
insb
loopne
out
mov
mov
test
dec
in
cmc
pop
ficompl
xlat
fdivrs
cmp
cmp
inc
sbb
jb
imulb
ds
ss
cli
in
xor
aas
cmc
mov
jbe
push
sub
sbb
mull
ljmp
addr16
ds
dec
xor
sub
negl
jnp
sbb
ljmp
cmp
rorl
cmpsb
mov
push
lods
cmc
leave
inc
sbb
das
adc
stos
js
dec
repnz
ja
int3
adc
into
mov
cmp
je
repz
rolb
pop
ret
or
inc
daa
shlb
lret
pop
jmp
lret
iret
jo
add
xor
lret
pop
fstpl
push
pop
jmp
mov
daa
push
lea
push
cmp
jg
loopne
popa
inc
lret
dec
sbb
pop
arpl
mov
addb
divb
shlb
inc
sbb
push
lods
ret
pusha
cltd
nop
decb
xor
push
jnp
pop
imul
jbe
cmp
scas
push
mov
fmull
ret
out
stos
cmp
and
pushf
in
dec
orl
es
nop
inc
xor
daa
add
mov
jno
ljmp
push
mov
test
add
out
outsl
lock
xor
das
leave
shr
es
jae
test
and
pop
call
lds
lock
mov
enter
stos
int
pop
sbb
mov
pop
jg
fdivp
fwait
stc
shrl
movsb
lock
push
push
xchg
jp
add
add
mov
adc
hlt
aam
cmc
cmpsb
icebp
shrb
inc
xchg
sti
shl
adc
rol
andb
and
xor
vpsrld
pushl
add
pop
mov
loopne
rclb
dec
cmp
scas
aas
jno
and
pop
jnp
mov
xchg
insb
jns
xchg
iret
xor
mov
xchg
add
aam
clc
enter
mov
mov
fs
mov
dec
ja
add
cld
pusha
fdivs
cmp
out
ret
inc
in
mov
insl
inc
sub
pop
inc
rcr
stc
and
clc
ss
cmp
and
adcb
fiaddl
sub
dec
inc
lret
stc
sbb
mov
sar
pop
dec
jno
jmp
or
ds
ret
xor
xor
fldl
lock
repnz
dec
fcmovnbe
xor
lcall
stc
mov
add
jg
or
inc
add
push
xor
dec
and
dec
dec
int
adc
and
jl
cmp
cmp
pusha
jmp
sbb
cmp
nop
or
daa
cmp
imul
jns
dec
test
jge
das
add
adc
cmpsl
sarl
xchg
mov
aas
test
repz
sbb
dec
mov
inc
cltd
add
adcl
add
or
mov
cmpsb
shrl
pop
imul
cmp
sbbb
cmp
adc
jmp
enter
loop
mov
inc
das
jg
mov
lahf
icebp
loope
movsb
pushf
mov
cli
lahf
into
jle
shll
dec
movsb
add
les
adc
repnz
data16
mov
cwtl
add
push
mov
aas
mov
and
loopne
int
stos
jnp
xor
and
cmp
mov
jge
in
inc
aaa
pop
jno
cld
fcompl
push
shlb
mov
mov
inc
loop
in
outsl
std
xchg
push
mov
sar
add
iret
inc
cmp
in
mov
hlt
enter
push
xor
sbb
xchg
dec
adc
push
aad
outsl
or
mov
push
dec
sub
cmp
les
mov
push
push
adc
loop
nop
pop
push
ja
xchg
push
shll
add
div
jmp
lahf
loopne
fs
ljmp
sahf
lcall
pusha
stc
das
imul
push
shlb
jecxz
pop
adc
or
add
inc
xor
movsb
scas
fstps
xlat
cmove
jbe
push
lret
add
rol
and
and
jb
dec
addr16
outsl
lcall
jae
mov
dec
sub
add
adc
test
popa
enter
sbb
add
add
or
xchg
xchg
dec
push
lcall
and
cmc
cltd
in
adc
pop
popa
clc
loope
dec
adcb
mov
ss
imul
lahf
ja
xchg
mov
dec
dec
adc
cwtl
mov
iret
lret
sbb
xchg
pop
dec
sbb
push
jge
xchg
imul
push
jg
dec
cwtl
iret
aas
push
insb
push
mov
mov
shll
sub
adc
insb
and
jl
fcmovb
iret
imul
inc
adc
pop
mov
pop
mov
push
movsb
lea
cmp
jne
jmp
repnz
andb
inc
and
popa
fsubrl
push
adc
in
push
aam
cmp
mov
dec
testb
jmp
jecxz
test
pop
mov
aad
lods
lahf
or
jae
fcomps
call
pop
push
mov
sub
xchg
in
ds
add
mov
cmp
ja
fstl
mov
sbb
mov
imul
jp
jle
jns
stc
std
enter
push
loopne
push
fwait
leave
mov
inc
mov
loop
jp
push
cmp
mov
jns
push
test
add
in
lock
std
lods
outsb
lods
mov
xor
fxch
mull
and
or
daa
test
push
lods
ret
or
in
icebp
stos
xor
aad
ret
xorl
movsb
stos
data16
in
xor
lahf
in
test
js
out
push
inc
test
sbb
sarb
add
pop
mov
daa
cmp
fcoml
lods
lods
hlt
or
fdivrl
loop
dec
jo
shrb
hlt
mov
into
xor
mov
outsl
das
icebp
mov
mov
loope
es
repnz
out
mov
ret
adc
dec
push
mov
les
das
sti
adcb
loop
mov
test
xchg
mov
push
jbe
and
hlt
arpl
push
lds
imul
sbb
inc
push
adc
out
or
xor
push
jns
fs
lret
sahf
dec
sbb
or
aad
test
mov
add
aas
inc
pop
push
push
ja
push
addl
cwtl
or
fs
addl
inc
lcall
cmpsl
adc
adc
or
pop
sub
mov
cmpsb
stos
dec
and
data16
mov
adc
dec
push
adc
lret
stos
outsl
fadds
adc
jmp
sbb
xchg
das
pop
arpl
nop
out
pop
add
lret
loope
xor
xor
leave
fimuls
and
loopne
cmp
inc
out
ljmp
pushf
and
lret
call
push
mov
lcall
pop
aaa
fdivl
daa
repz
push
fisttps
mov
dec
iret
mov
lcall
mulb
lods
xchg
and
push
dec
mov
adc
mov
jae
mov
int
in
xor
mov
in
xor
and
clc
rorl
adc
gs
inc
push
sub
sub
and
lds
or
lahf
xor
or
mov
fwait
sbb
cmp
jmp
add
pop
outsb
xchg
push
sub
cmp
dec
fists
test
jge
lret
mov
adc
push
in
loope
test
daa
push
pop
rcl
push
lods
ja
or
mov
cvtpi2ps
shl
mov
es
les
lcall
test
hlt
fisubrs
add
jo
pushf
test
mov
scas
ja
je
bound
jo
cmp
ror
loopne
int3
cmp
adc
mov
popa
xor
pushf
xor
mov
or
sbb
xchg
or
movb
mov
or
or
addr16
cmpsb
enter
jmp
out
addr16
push
jmp
adc
scas
sub
push
les
int3
sbb
mov
je
xchg
mov
cmpb
mov
inc
mov
mov
mov
out
cmp
lods
es
push
fidivs
push
lods
push
mov
jo
add
adc
loope
mov
or
loop
sub
pop
aaa
pop
fnsave
or
mov
sbb
pushf
lock
push
jmp
dec
addb
xor
fsts
inc
call
call
jo
imulb
and
dec
xchg
mov
test
movsl
je
and
fwait
add
push
adc
lds
out
sub
inc
mov
mov
iret
and
dec
pop
inc
xlat
jbe
sub
rcl
addr16
pop
frstor
out
test
push
lods
dec
stos
in
mov
ljmp
xor
lsl
jae
sbb
pop
out
fidivrs
or
repnz
push
mov
jo
xchg
psubusb
push
mov
push
mov
cmpsb
inc
ja
cmp
adc
xchg
fistpl
lret
or
loopne
adc
cli
adc
and
je
pop
mov
fsubrl
int
pop
jnp
pop
mov
lods
movsb
sbb
mov
or
adc
bound
mov
inc
dec
loop
leave
addr16
jmp
sub
inc
icebp
adc
aam
inc
scas
push
cs
mov
or
inc
add
cmp
or
in
out
and
scas
loop
or
inc
sahf
add
and
inc
std
cmp
xor
mov
dec
fdivrs
int
push
fs
lret
scas
out
xchg
push
lea
adc
and
adc
push
popf
das
jnp
in
in
jmp
imul
and
add
inc
loopne
sub
fsubr
mov
jg
mov
sbbb
and
jb
aaa
fiadds
cmp
and
jmp
pop
fistl
mov
push
push
mov
imul
inc
mov
test
push
jg
mov
aaa
mov
cmp
dec
or
push
cs
shlb
or
jo
push
jl
stc
push
lock
in
test
and
out
mov
ds
into
inc
push
cli
testl
std
negl
sbb
ficoml
std
jae
or
aas
jmp
mov
dec
add
adc
xchg
repnz
pop
movsl
cmpsl
sbb
ds
repz
sub
mov
int3
mov
mov
mov
mov
movb
cmp
jns
xchg
sub
push
mov
mov
test
sbb
cli
sarl
push
xchg
adcl
sub
clc
sbb
and
andl
cwtl
sar
jbe
sbb
inc
jp
mov
adc
sub
leave
mov
push
and
movsb
ret
fidivl
daa
inc
lret
sahf
push
cmp
jmp
push
ret
adc
mov
xor
cmp
test
pusha
inc
cmp
pop
outsb
and
mov
lods
stos
xor
xor
leave
xchg
mov
ret
mov
pop
pop
sahf
push
mov
lcall
push
repz
mov
aam
push
mov
mov
ss
ficompl
or
dec
sub
and
in
inc
inc
push
scas
movsb
das
inc
xor
jmp
in
movsl
cwtl
mov
mov
inc
jne
nop
imulb
mov
xchg
ficoml
loop
mov
xchg
test
pop
adcl
mov
movsb
pop
adc
int3
and
add
or
xchg
dec
adc
jmp
add
and
call
in
es
out
sub
sbb
repz
cmp
cs
imul
or
pop
jle
push
insl
out
push
ljmp
push
add
filds
mov
add
std
mov
mov
and
imul
jo
push
je
out
add
jmp
push
fs
push
and
cmp
cmp
and
repnz
das
xchg
and
inc
lods
aaa
dec
mov
daa
xchg
jmp
aam
or
or
iret
gs
mov
or
and
cmp
push
dec
test
mov
ss
jle
aam
loope
sub
sbb
test
sti
sbb
lahf
repnz
inc
lods
jmp
mov
add
add
ss
push
out
sub
sahf
pusha
jmp
cmp
push
negb
mov
movsb
mov
pop
adc
mov
loopne
sahf
and
gs
outsb
add
fbld
add
push
mov
cmpsb
das
xor
cmp
push
out
sti
das
pusha
pushf
cmpsb
sub
mov
adc
lret
in
cmp
jp
outsb
sti
ret
jbe
dec
push
jmp
cmp
aaa
shr
sarl
ror
repz
rol
or
jno
insl
cld
les
pop
mov
fs
jg
push
cmp
dec
inc
int3
es
stos
mov
dec
xchg
jl
jns
push
and
xor
fs
cmp
sbb
imul
dec
or
das
dec
lods
cmc
sub
icebp
dec
and
add
cmc
mov
or
add
mov
fldenv
lahf
je
pop
push
sub
shl
mov
je
adc
pop
lahf
sbb
xor
outsb
jns
insl
mov
rcrb
stc
sbb
icebp
xor
stos
pusha
push
pop
push
aaa
xchg
jns
sub
pop
in
fildll
pop
xchg
mov
adc
test
rorb
adc
xor
xchg
or
rcrb
add
dec
adc
and
dec
sub
sbb
pop
adc
jl
jl
cmc
rcll
sub
sbb
jbe
mov
nop
mov
mov
inc
push
sbb
jl
xchg
enter
xlat
pop
and
xor
insb
sub
cmp
mov
and
sahf
jg
push
add
imul
in
xor
sbb
inc
dec
xor
push
mov
inc
and
xor
ret
int3
xchg
rolb
cmp
sbb
fiaddl
push
and
icebp
fcmovnbe
iret
into
and
mov
jno
adc
cmp
inc
imul
shrb
movsl
int
dec
push
mov
imul
add
into
out
insl
gs
pop
mov
mov
inc
mov
test
ljmp
lret
fildl
push
int3
push
cmpb
out
lcall
pop
cmp
xchg
outsl
stc
cmp
dec
loop
xchg
adc
dec
sub
xlat
ret
repnz
or
dec
pusha
pop
mov
mov
pop
mov
ss
cmp
pop
cwtl
pop
std
xor
lock
into
push
divb
sti
test
orb
mov
push
lahf
dec
out
das
mov
adc
xchg
pop
xchg
jb
dec
push
fdiv
imul
ret
aam
stc
adc
push
mov
ficompl
and
aad
in
aas
mov
add
test
adc
jo
scas
add
pop
and
push
jno
xor
aam
rcll
aaa
bound
dec
hlt
sbb
cmp
in
subb
fdivs
add
mov
inc
sub
ss
jle
cmp
pop
cmp
test
mov
pop
inc
lret
mov
jns
inc
push
sbb
cmpl
loope
stos
fcmovb
mov
cmp
insb
sbb
sahf
inc
movsl
jae
in
jo
out
not
out
scas
push
int3
and
inc
or
inc
lret
int3
cmp
shrb
push
out
cwtl
testb
or
pop
in
mov
add
sbb
push
dec
sbb
pop
xor
popf
cmp
sub
push
add
mov
push
fisttpll
and
fisubl
sub
pushf
icebp
pop
pop
xchg
mov
xorb
xlat
aas
repnz
xor
bound
out
mov
cwtl
cmp
repnz
nop
inc
mov
in
add
fisubs
dec
jecxz
jbe
loopne,pn
mov
divl
pop
xor
push
ret
xor
push
jecxz
or
out
jmp
mov
push
mov
pusha
loop
push
out
push
fpatan
pushl
ljmp
mov
das
adc
mov
mov
inc
add
jae
push
out
iret
pushf
enter
jnp
repnz
push
mov
test
jecxz
cmpsl
add
inc
dec
xchg
push
dec
mov
ljmp
cmp
data16
dec
jmp
inc
movsl
call
xchg
daa
mov
leave
sub
adc
xlat
sub
sahf
sbb
or
jmp
inc
dec
adc
xor
push
jne
stc
daa
jle
mov
push
shl
roll
mov
testb
mov
mov
fwait
in
cld
xchg
push
pop
fisttps
dec
mov
insb
rorl
ds
pop
jg
push
jle
pop
xor
dec
aas
out
push
faddl
mov
cmpsb
out
cmc
fsubp
jbe
pop
div
dec
xor
pop
scas
lock
xchg
mov
cld
mov
testb
sub
stos
in
add
jl
fisubrl
inc
cwtl
ja
scas
sti
sbb
sbb
mov
push
jle
jecxz
pushf
imulb
push
and
pushf
mov
dec
fisttpl
int
xchg
lahf
pop
push
repz
adc
sub
jge
push
ljmp
test
fs
push
ret
mov
push
xor
fidivs
insb
nop
pop
test
lahf
das
pop
lret
and
in
cmpsl
call
das
es
lods
jecxz
fs
mov
jns
mov
mov
out
scas
lret
add
push
xchg
push
ljmp
adc
test
mov
dec
movsb
sbb
shl
lea
jo
std
adc
movsb
add
push
test
mulb
pop
sub
inc
and
inc
sahf
lds
mov
cmp
jle
push
out
mov
lea
jmp
push
and
lock
insl
pop
cmp
scas
mov
sbb
jnp
fisubrl
shlb
sub
sub
call
cli
lock
mov
out
add
sub
dec
aas
jb
fdivrp
pop
in
dec
jno
test
and
lea
ss
dec
jmp
jbe
push
decl
mov
xor
subl
inc
shl
push
pusha
test
pop
mov
pop
dec
ret
inc
jmp
out
inc
addr16
enter
popa
mov
flds
sbbl
sbb
test
pop
lret
or
xor
enter
mov
les
jl
add
mov
mov
mov
push
mov
mov
push
inc
scas
pop
jns
pop
repnz
ror
stc
dec
daa
aam
or
ret
je
xchg
pop
jo,pn
hlt
adc
pusha
dec
cs
decl
cltd
int3
or
outsl
push
cmp
push
lods
mov
xchg
mov
add
outsb
cld
into
test
fcmovne
data16
push
test
adc
adc
data16
push
xor
dec
and
aas
cmpsl
fnsave
in
push
xlat
sbb
fimuls
loop
xchg
xchg
imul
push
lret
inc
xchg
filds
inc
das
in
out
scas
pop
pop
mov
push
ljmp
mov
pop
std
pusha
in
movsl
jp
push
cmpsl
mov
mov
mov
sub
stos
rorl
in
jb
fsubs
stos
rol
lods
push
pop
mov
or
xor
push
les
mov
adcb
stos
cmp
jo
ffreep
cld
mov
addb
cltd
xchg
ljmp
push
imul
sub
idiv
xlat
dec
mov
ret
mov
xor
inc
mov
mov
movsl
xor
lret
push
pop
dec
xchg
fildl
and
adc
test
cli
js
scas
lea
leave
dec
sub
cmp
adc
adc
jo
orl
mov
push
push
ds
cmpsl
movups
ja
and
in
popf
pop
sbb
or
adc
out
out
cmp
gs
pop
movsl
or
and
and
scas
popf
sub
faddl
mov
pop
or
add
arpl
dec
push
sub
cld
push
neg
fcmovnb
pop
adc
jge
int
fnstsw
and
int3
inc
rcrl
mov
dec
lcall
jae
sub
lret
mov
jo
fimull
insb
out
adc
add
int
add
sub
and
or
sub
arpl
xchg
pop
pop
lret
popa
add
push
out
pop
test
bound
int
cli
loopne
adc
pop
iret
inc
push
int3
dec
adc
sahf
mov
outsl
push
aas
iret
mov
mov
lahf
pop
movsl
ja
loop
fnstcw
aad
mov
dec
mov
mov
xor
xchg
das
sbb
xchg
sbb
pop
test
xlat
addr16
pop
stos
or
sbb
or
lahf
jbe
push
out
pop
sub
ja
and
imul
mov
cmp
pushf
jg
fldenv
in
ret
add
ljmp
in
cmpsl
jnp
and
xchg
pop
aad
js
dec
cmpsl
mov
daa
mov
dec
clc
dec
xchg
fnstcw
int3
push
jp
jne
adcl
insl
js
sbb
insb
ja
push
aaa
xlat
inc
mov
jns
out
iret
lret
arpl
mov
or
rcl
cmp
xchg
repnz
xor
jne
dec
pop
movsb
sbb
fdivrl
adc
adcb
dec
and
xor
es
mov
jp
daa
iret
dec
mov
faddp
sub
or
jbe
xchg
sub
movsl
jge
mov
and
inc
fwait
dec
inc
out
pop
out
lcall
or
aad
movsb
mov
incb
or
mov
fdivrs
mov
mov
dec
mov
ja
pop
insb
ss
jno
mov
push
add
pop
cmp
fadds
xchg
xchg
pop
sbb
jae
outsb
dec
sbb
iret
xchg
adc
in
dec
lcall
loope
movsl
adc
sbb
xor
xor
pop
rclb
dec
xchg
int
imul
dec
cmp
dec
imul
sub
xlat
bnd
loope
adc
stos
stos
stc
jb
and
shr
inc
add
lret
and
or
pop
push
lods
mov
mov
push
ljmp
jns
mov
and
cwtl
je
push
pop
ror
pusha
and
je
mov
loopne
ss
loopne
arpl
or
out
and
divl
into
aas
jns
push
pop
lret
into
addr16
stmxcsr
aaa
ret
or
es
mov
pop
pushf
js
push
jae
jae
cmpsb
decl
movsb
sahf
mov
pop
push
pop
aas
incb
xchg
fldt
repnz
sahf
call
cli
in
adc
mov
pusha
inc
std
sub
repz
repnz
add
mov
scas
ror
xchg
adcb
sub
mov
adc
mov
jmp
mov
fistpl
lea
popf
or
repz
lcall
add
sti
std
or
xchg
hlt
mov
enter
mov
adc
mov
adc
jno
xor
xchg
push
loop
dec
add
adc
adc
lret
mov
inc
dec
lahf
lea
push
xchg
jle
jns
xor
xchg
aas
jp
cmp
cltd
mov
scas
and
mov
add
jle
mov
adc
pop
cmp
cmpsb
inc
scas
cmpb
sub
dec
pop
dec
out
push
add
xchg
inc
xlat
dec
into
incb
or
inc
ret
icebp
pop
test
jecxz
in
sub
add
adc
jmp
cmp
xor
lods
les
lea
addr16
cmpb
in
pop
test
out
lods
gs
xchg
mov
dec
das
xchg
pop
outsb
cwtl
imul
cmp
xchg
subl
cmp
loopne
addl
ret
xchg
mov
fdivrl
xor
sbbb
pop
inc
mov
loop
push
sub
push
dec
inc
jo
imul
pop
outsb
or
fwait
daa
pop
sbb
lahf
push
sub
enter
mov
les
pop
add
mov
call
lods
filds
sub
mov
out
jns
sub
stc
fstpl
cwtl
sahf
shr
mov
adc
mov
mov
imul
divl
sbb
into
fstpt
or
daa
and
ret
sub
push
iret
push
lret
push
dec
jbe
sbb
js
test
mov
cmpsl
sub
xor
inc
call
pop
imul
in
mov
mov
loope
insl
dec
xor
fcmovu
repnz
or
gs
lods
or
push
xlat
xor
vmaxps
call
xchg
ja
js
or
xchg
cwtl
pop
mov
insl
pop
in
jne
dec
je
cld
lods
ficoms
xor
and
cmp
cld
xchg
xchg
pop
jp
add
fdivs
sub
sbb
jbe
lahf
mov
lods
data16
call
es
rol
add
fiaddl
frstor
loopne
jl
xchg
insl
and
pop
sub
fidivrl
cmp
xor
xacquire
enter
push
jmp
adc
rcr
push
mov
and
ds
inc
push
cld
lea
lods
insl
xchg
mov
std
push
or
and
add
inc
cmc
jmp
jl
filds
repz
and
mov
imull
push
pop
push
imul
dec
xchg
scas
cmp
or
sbb
into
movsl
loope
popf
pop
cmp
inc
mov
arpl
and
lret
mov
fcomps
in
xchg
out
clc
arpl
jnp
or
adc
arpl
pop
pop
test
imul
mov
lret
jle
ret
inc
into
or
lods
add
and
ljmp
stc
es
xchg
pop
fisttpl
cwtl
scas
loop
jecxz
sbb
mov
sbb
loopne
mov
sbb
mov
mov
out
stos
loopne
push
in
dec
push
inc
sbb
pop
xor
mov
xchg
lea
jae
cltd
xchg
out
nop
adc
mov
iret
lods
xlat
cld
mov
rorl
es
fmull
push
pop
ss
mov
inc
roll
movsl
psrld
push
push
and
hlt
jle
subl
ljmp
cmp
jmp
outsl
pop
in
data16
mov
xchg
pop
test
test
les
push
mov
add
andl
out
mov
jo
jnp
mov
jp
or
stos
or
loopne
lret
push
cld
cmp
mov
mov
stos
in
iret
and
xchg
jns
sub
push
add
mov
mov
push
mov
in
jo
arpl
addr16
push
xchg
mov
adc
pop
repnz
jb
stos
pop
int
pop
stos
mov
pop
sbb
push
lock
subl
daa
push
sbb
cli
jmp
mov
jmp
add
or
jecxz
loopne
loope
out
and
js
sbb
testl
cmp
ret
add
xchg
mov
adc
out
popf
incb
and
mov
fs
sbb
and
stos
aad
push
adc
push
add
jo
in
mov
aam
push
pop
ret
sub
les
jb
mov
xchg
mov
outsl
adc
in
lret
xlat
xor
cmc
inc
mov
or
dec
dec
sub
call
mov
inc
out
mov
xchg
dec
bound
imul
popa
sub
insl
fldl
imul
mov
clc
imul
mov
push
outsb
scas
push
xchg
push
mov
adcb
decl
jmp
cmpsl
sbb
mov
xor
push
dec
les
xor
dec
leave
fistpl
pop
inc
push
shlb
push
dec
addr16
mov
fwait
jne
mov
cmpsl
out
or
ljmp
and
sub
fwait
mov
imul
int
xor
mov
mov
imul
ja
out
movsl
int
push
adc
pop
imul
sbb
pop
std
inc
int
dec
ljmp
fildl
arpl
push
andb
xchg
in
pop
and
test
jg
inc
clc
fadd
aad
inc
scas
int3
clc
pop
push
mov
mov
push
push
pop
inc
lahf
iret
hlt
icebp
lds
lret
imul
sti
fdivs
les
popa
inc
sub
xchg
or
jne,pt
cmp
push
out
cmp
pop
mov
push
dec
add
imul
add
fs
ds
xchg
push
scas
jp
mov
call
je
pop
mov
cmp
sbb
rorl
push
xchg
aad
cwtl
push
stos
xor
add
pop
popa
sahf
out
notb
mov
sub
pop
xor
sti
and
repnz
push
mov
cmp
sarl
lock
sub
cltd
pop
jno
xchg
ficoml
add
cli
inc
cld
pop
push
pusha
xchg
inc
cmp
loope
sbb
jmp
bound
inc
add
and
setae
cmpsb
push
xor
lahf
add
push
pop
fstl
mov
or
loope
movsl
adc
imulb
insb
in
add
in
sub
movsl
gs
fwait
je
outsb
jecxz
negl
leave
rcr
fstpl
push
jns
aas
dec
rorl
rorl
inc
sbb
test
mov
fisttps
stos
adc
loopne
adc
pop
sbb
xchg
sbbb
movsl
xor
js
arpl
jecxz
arpl
lea
ds
push
or
lahf
jae
xchg
cmp
mov
inc
popf
pop
xlat
inc
out
xchg
fs
lea
clc
jp
bound
sbb
xor
stc
jbe
inc
sub
mov
sbb
xor
cmc
outsl
and
daa
jno
push
leave
loop
push
jl
xor
imul
inc
mov
adc
mov
dec
sbb
xchg
leave
dec
push
rcrl
mov
and
lahf
cmp
lahf
sarl
sbb
shl
lock
data16
nop
test
adc
mov
imul
adc
test
dec
fnstcw
and
test
pop
ja
mov
cmp
in
daa
repnz
movsb
pop
std
mov
xchg
jl
mov
xlat
dec
push
testl
sbb
loope
adc
ja
sti
push
jecxz
push
leave
ljmp
mov
les
inc
loopne
push
cmp
repnz
push
dec
js
mov
mov
pop
pcmpeqb
xlat
sbb
jg
xchg
ljmp
and
cmp
cmp
in
mov
fs
sub
into
or
inc
ja
dec
in
xor
mov
stos
jae
sbb
or
movsb
arpl
gs
jns
jmp
push
jns
cli
int3
sbb
call
jb
js
lea
xchg
push
insl
loope
mov
push
jg
dec
push
imull
into
push
sbb
insl
outsl
into
addr16
les
jl
lea
insb
daa
inc
ret
add
shlb
into
test
lock
mul
push
sub
aad
xchg
jmp
cmpl
jmp
push
sbb
add
mov
sbb
lock
aam
cmpsl
dec
imulb
lods
dec
ret
and
sbb
sahf
mov
cmp
test
mov
xchg
mov
xor
jp
push
aaa
setge
fnsave
dec
push
lea
pushl
and
loop
jne
stos
push
xchg
mov
loopne
mov
jnp
add
mov
lods
fidivs
xchg
lods
cld
fs
inc
cmpb
pop
cld
repnz
mov
dec
lahf
scas
test
mov
jno
mov
mov
aaa
dec
inc
jmp
je
sbb
pop
ds
aad
mov
hlt
sub
pop
add
fadd
daa
subb
cmc
add
insl
mov
mov
shr
push
out
ljmp
fldcw
sbb
or
enter
aas
sub
lds
push
sbb
js,pn
push
nop
pusha
or
testb
cmp
cs
xchg
jge
orl
stc
cmp
sbb
shrl
sahf
xchg
fdivs
sbb
push
jge
das
mov
scas
stc
jns
dec
pop
nop
arpl
es
icebp
xlat
sbb
mov
push
pop
sti
dec
iret
pop
mov
fdivr
andb
pop
adc
fwait
aam
push
mov
adc
aaa
jo
popa
adc
repnz
fcmovbe
mov
jge
push
mov
xor
jno
test
mov
and
cmpsl
cs
xchg
in
addr16
xor
cmp
ret
pop
int3
cwtl
inc
stos
jmp
xor
mov
xor
js
inc
scas
xchg
aas
jo
fdiv
xor
jb
sbb
mov
les
xor
dec
adc
cmp
sbbl
xor
dec
outsl
adc
leave
addb
mov
xor
pop
mov
inc
testl
pushf
sub
ret
sub
andl
lods
shrl
repz
std
xchg
lea
add
mov
outsb
jl
push
imul
sahf
jge
adc
xchg
push
xor
shrl
sbb
push
enter
repnz
push
cmpsb
mov
es
sub
mov
sub
sbb
add
push
cwtl
sbb
rcl
scas
push
out
jmp
mov
sysexit
xlat
or
jmp
add
xchg
jle
mov
sbb
or
ret
dec
pop
cmp
into
xlat
movsb
ja
adc
inc
inc
jle
aad
loopne
and
add
pop
mov
pop
daa
push
cmp
xor
incl
jp
push
mov
and
sahf
sub
insb
add
xchg
lods
lock
sub
mov
or
out
pop
lods
insl
xor
dec
pop
cwtl
bound
psubw
scas
sub
lods
and
dec
and
out
int3
and
add
dec
add
xchg
xorl
out
xchg
add
es
stos
pop
in
dec
lcall
or
inc
push
testb
je
popf
xchg
lahf
int3
shrl
jo
sbb
cmpsb
jae
lret
fnsave
psadbw
adc
mov
aaa
cmp
xchg
leave
nop
dec
fwait
or
scas
mov
mov
or
pushf
mov
dec
jg
out
fsubrs
call
xor
fmuls
pop
xchg
mov
dec
dec
loopne
pop
je
dec
das
or
adc
ljmp
outsl
pcmpgtw
cs
cmc
sbbb
lret
push
outsb
fsub
inc
out
push
xor
mov
popa
imul
lds
push
lds
rcll
fstpt
popf
push
and
dec
pop
cli
lds
push
jle
jns
cmpsb
mov
loop
xor
pop
and
jne
cmc
and
adc
push
sub
ftst
xor
adc
sti
sbb
ret
out
xchg
outsb
add
repz
std
or
add
imul
cmpsl
sbb
xchg
sbb
ja
adc
jp
lds
add
adc
fwait
inc
sub
push
sub
adc
mov
sub
out
pushf
cmp
stc
sbb
enter
and
fcmovne
rorb
jo
mov
imul
pop
in
and
jecxz
shlb
push
push
sub
mov
dec
xchg
fldenv
jbe
cmp
mov
mov
push
cld
stos
mov
dec
jl
loopne
or
out
cmp
mov
sbb
ret
mov
push
pop
jno
rol
in
mov
outsb
adc
xchg
push
popa
fiaddl
cmc
push
jge
movsl
push
push
fsubrs
xchg
lcall
push
adc
popf
ljmp
pop
out
rolb
lea
adc
popf
jne
in
aas
push
push
sbb
jle
insb
mov
push
push
mov
call
aas
cmp
mov
dec
mov
push
inc
loop
push
int3
cmc
and
aas
std
mov
fildl
mov
pop
mov
sub
outsb
lcall
lret
ja
xchg
cmp
arpl
sub
daa
or
cwtl
jp
adc
add
icebp
dec
push
daa
sbb
test
les
aas
mov
mov
lods
mov
push
xor
fcom
das
stc
cmp
dec
mov
les
jbe
add
jle
lcall
test
stos
push
movsl
add
shr
pop
sub
inc
cmp
dec
fistpll
adc
movsb
or
push
push
mov
push
xor
jecxz
notl
jl
insl
or
jp
jne
fisubrl
in
popa
popf
inc
push
enter
dec
and
into
sbb
stc
test
lods
add
sbb
mov
dec
ds
push
fwait
mov
into
adc
mov
out
in
mov
add
testb
adc
out
mov
ret
in
mov
mov
xorl
jae
int3
add
or
sarb
cli
stos
fmuls
mov
stos
inc
or
cmc
xor
cli
and
sbb
mov
inc
fists
cli
pop
hlt
push
mov
mov
rclb
dec
xor
jl
daa
pop
inc
xor
and
and
push
xchg
fnstsw
repz
fwait
adc
push
and
or
pop
out
outsb
jmp
bound
aad
push
ss
xchg
jns
cmpsb
in
je
mov
ss
jg
sub
shrl
lods
scas
and
jbe
xor
enter
jo
mov
and
daa
aam
jmp
arpl
ja
ficoms
addl
aas
mov
lock
and
pop
out
xchg
fisubrs
js
push
xorb
jae
in
dec
adc
jns
jge
shlb
popa
pop
and
pop
inc
xchg
dec
pushf
adc
add
pop
call
scas
scas
jg
cmp
inc
add
xchg
inc
cmpsb
push
sbb
movsb
aas
popa
mov
subb
sub
mov
xchg
sbb
vpshufd
cwtl
push
push
out
xchg
mov
hlt
leave
ret
outsl
cmp
inc
sbb
xlat
sbb
cmpsl
sbb
pop
push
push
jle
or
sub
mov
push
jg
out
pop
push
mov
or
lret
push
mov
test
addl
mov
mov
addr16
in
shr
mov
sti
pop
cmp
cmp
stos
dec
sti
stc
shll
cmpsb
ja
adc
notb
xor
iret
test
and
inc
push
scas
out
neg
repz
sub
pop
jno
repz
mov
mov
pushf
jno
cmp
movsl
bnd
sahf
cmpsb
jmp
arpl
adc
add
ljmp
cmc
cld
les
rcrl
lahf
pop
cld
addb
and
dec
jne
fistps
mov
add
xor
out
rcll
or
movsl
lock
inc
loop
cmp
xchg
mov
inc
jmp
inc
into
enter
in
stos
xorb
lock
cmp
in
pop
and
fidivs
outsb
fimull
scas
xchg
insb
cmp
xchg
sub
xchg
cmpl
cwtl
push
push
dec
aam
add
out
scas
push
sub
cmp
or
xchg
sbb
pop
pop
fwait
jnp
mov
push
dec
adc
ret
loopne
or
add
stos
and
mov
mov
or
push
mov
cld
sbb
or
dec
cmp
out
mov
push
mov
jnp
xchg
push
into
xchg
int3
mov
mov
sbb
fsubp
pop
movsb
rcrb
outsl
lahf
dec
add
or
scas
aaa
adc
in
test
adc
popf
addr16
xchg
dec
xchg
push
std
mov
insl
xchg
or
jmp
cmp
pop
ljmp
repnz
dec
aas
scas
add
test
cmpsb
mov
int3
outsb
out
xchg
shr
sub
xor
test
aaa
fsts
movsb
bound
push
add
movsl
out
mov
mov
jbe
aaa
inc
addl
sbb
jle
mov
sub
fsts
pop
xchg
or
adc
mov
dec
dec
jbe
in
repnz
mov
daa
cmpsl
arpl
out
lret
mov
mov
fcoms
push
xor
into
out
dec
aas
xchg
cmp
cmp
cmp
mov
int
cmova
popf
add
aad
bound
jnp
push
or
arpl
jp
push
arpl
mov
ret
fistpl
sarl
mov
jmp
in
jno
mov
mov
pop
jno
jo
es
xchg
loope
xor
xchg
outsl
out
dec
or
imul
xchg
push
xchg
mov
enter
aad
or
addr16
aam
mov
in
aam
mov
xorps
in
scas
ffreep
inc
push
inc
pushf
fnop
dec
stc
cmpsb
loope
sahf
sbb
std
dec
pop
inc
mov
add
adc
fwait
pushl
movsb
pop
loop
lods
fldl
cli
inc
or
xchg
sbb
add
xor
push
mov
sub
inc
and
repnz
sbb
push
outsl
sarb
cmovo
jb
loope
cmpsb
or
call
inc
lea
add
scas
hlt
aad
stos
sub
test
pop
mov
rcl
and
inc
add
test
test
xchg
addr16
aaa
roll
je
rcrl
lods
push
dec
fstl
pop
lods
fdivrl
sub
js
clc
js
inc
add
add
movsb
xchg
mov
gs
subb
aam
pop
pop
mov
shll
mov
or
inc
aas
scas
lock
dec
shl
pop
ds
mov
sbbl
movb
insl
inc
ret
adc
jp,pn
xor
shlb
int
pop
out
clc
and
push
int
fidivrs
mov
insb
mov
push
add
adc
icebp
cld
popf
add
xchg
shll
jmp
mov
pop
std
cmpsl
repz
lahf
xchg
lret
dec
cmp
mov
xchg
repnz
jns
in
mov
mov
push
lahf
testl
jge
cmp
push
les
pop
push
dec
inc
cmp
or
xor
xchg
roll
or
cmc
mov
sub
scas
or
sbb
cli
aaa
gs
adc
mov
decl
arpl
mov
pop
mov
fmul
pop
rclb
lods
dec
mov
repnz
push
cltd
cwtl
cmc
loope
addr16
loop
mov
in
mov
in
imul
and
push
insb
lods
inc
out
push
sub
mov
dec
add
nop
push
mov
hlt
movsl
jmp
fsts
movsb
cmp
loopne
cmp
jae
xor
sarb
sar
jbe
pop
inc
sti
cmp
mov
movsb
push
incl
mov
cmc
inc
or
ficoml
lods
in
dec
movsb
inc
scas
xor
inc
mov
in
adc
neg
call
add
cwtl
mov
mov
fs
out
mov
popa
mov
sbb
test
xchg
aas
sbb
xlat
or
cmp
insb
icebp
ljmp
fcoml
icebp
and
mov
lds
push
cltd
bound
fisubrl
mov
pop
or
push
dec
movsl
sti
test
jecxz
les
sub
pop
test
lahf
test
out
dec
cld
xor
loopne
daa
enter
loope
dec
or
loope
inc
fcompl
mov
std
insb
or
clc
add
pop
mov
icebp
stos
dec
ret
js
xlat
mov
mov
mov
repz
fidivrl
jns
punpcklbw
inc
mov
ret
or
cld
pop
mov
sbb
repnz
sub
je
xchg
push
push
aaa
sbb
pop
dec
pop
pop
xor
mov
cmp
sti
push
cmpsl
cmp
xchg
lods
add
dec
push
sub
xor
xor
jbe
xchg
and
adc
sbb
push
nop
adc
fidivl
xor
add
cld
adc
sbb
inc
mov
iret
enter
cmp
cmp
movsl
aam
inc
in
push
int3
es
mov
jno
sub
ret
xchg
ljmp
jne
sub
add
or
pop
lcall
fs
pop
sub
push
je
movsl
test
push
xor
into
std
jbe
bound
mov
mov
ss
ljmp
dec
jmp
leave
stc
cltd
mov
xor
clc
inc
xchg
popf
movsl
stos
cmp
lds
mov
inc
setg
pushf
das
adc
rcl
xor
popf
hlt
pop
pop
repz
push
add
inc
test
repnz
and
mov
fstpl
pop
xlat
inc
xchg
cmp
xor
sub
in
pop
cmp
add
cwtl
mov
fsts
add
les
xor
xchg
adc
movsb
cmp
sarb
pop
mov
cmp
xchg
lea
xchg
in
aaa
or
sti
lods
mov
cli
pop
push
cmpb
sahf
cld
dec
je
cmp
jge
mov
mov
xchg
decb
daa
nop
jne
pop
pop
xchg
inc
inc
mov
cli
xlat
cmpsl
push
or
loope
xor
test
jo
inc
stos
jnp
aaa
fabs
lret
dec
divl
xor
mov
mov
mov
sub
das
mov
inc
inc
xchg
sbb
xchg
aad
pop
je
leave
or
push
adc
and
pop
fnsave
popf
out
aas
inc
push
mov
add
lds
mov
jl
shl
icebp
adc
subb
dec
sub
js
mov
aam
dec
sbb
nop
add
stos
mov
xor
push
jmp
lock
push
movsl
mov
loope
mov
into
inc
mov
stos
dec
push
xchg
int3
out
movsl
aam
push
mulb
or
lock
inc
cmp
and
fisttpll
lds
lea
jecxz
aam
xchg
idivb
ljmp
pop
loop
jbe
dec
sub
adc
int
daa
jnp
lret
loope
jmp
xorl
sti
shlb
daa
jo
cltd
push
mov
decb
dec
ficomps
pop
push
outsl
mov
mov
out
lock
mov
mov
sbb
mov
push
jb
imul
lock
in
pop
cmp
je
mov
mov
mov
and
adc
fstpl
lds
xchg
xchg
or
push
in
xchg
cmp
lahf
decl
ljmp
xchg
sbb
or
test
loop
addps
cmp
mov
xchg
fsubrp
mov
or
sbb
inc
pusha
and
jmp
inc
xchg
dec
ret
stos
cmp
cmp
push
mov
into
xchg
jp
out
push
test
jno
pop
xor
mov
faddl
call
cli
push
pop
cmp
into
rorl
sbbl
inc
shll
test
imul
push
stc
push
mov
iret
inc
or
mov
rcr
arpl
cmpsb
mov
pop
test
cwtl
loopne
push
repnz
jmp
jbe
adc
jae
sub
push
lock
xchg
sub
pop
sbb
std
sub
cmp
or
sub
sbb
jae
jbe
cld
mov
mov
addr16
stc
cmpl
iret
inc
fidivrs
lods
loop
aas
sub
inc
sbb
out
jno
std
dec
scas
sbb
aam
jns
mov
pop
xchg
insb
test
fimull
pop
cmc
inc
jp
lods
lahf
iret
inc
xchg
bound
es
push
pop
jns
repz
push
push
pop
sahf
mov
xor
push
lahf
fistl
cmovne
xchg
jp
std
shrl
loopne
jg
mov
pop
add
les
inc
fbld
and
jmp
and
add
mov
out
xchg
push
push
lahf
sbb
shlb
pop
jecxz
jnp
out
or
add
rcrb
ficoms
and
ss
in
lahf
sbb
push
push
test
filds
dec
enter
push
jae
sub
mov
mov
pop
xor
push
mov
or
pop
into
hlt
cltd
push
out
lea
adc
es
add
mov
rcll
pop
mov
and
ljmp
and
nop
bound
lahf
push
mov
int
cli
bsr
mov
mov
mov
sub
adc
cli
add
lds
sub
xor
xchg
cli
lock
in
fwait
mov
mov
sub
icebp
bound
mov
sbb
ljmpw
and
ja
icebp
push
inc
notb
inc
mov
push
xor
push
xor
outsb
mov
mov
and
jne
out
pop
xor
mov
cmpsb
enter
sbb
mov
xchg
jecxz
ror
mov
jge
ljmp
pop
fcomp
ret
jg
xorb
xchg
mov
outsl
call
clc
outsl
mov
xor
xor
jge
add
iret
lcall
movsb
adc
es
sub
das
mov
xchg
inc
aaa
jge
and
add
pop
or
lcall
push
mov
mov
aam
test
fidivrs
out
mov
push
jne
mov
xor
in
jne
push
incl
add
jae
xchg
sub
or
int
cmpb
cmp
fisttpll
shl
add
mov
mov
dec
ja
sbb
loope
jp
mov
call
dec
pop
mov
jmp
add
scas
inc
lea
loope
mov
dec
push
outsl
cmp
aas
mov
test
mov
subb
jae
in
ja
jns
and
clc
fldcw
hlt
cmp
ret
xchg
daa
insb
es
je
add
pop
mov
sahf
xchg
mov
and
cmpsb
stc
dec
movsb
adc
push
jb
push
mov
push
pushf
mov
out
ja
int3
push
jp
aad
xchg
cmpsl
pop
mov
mov
and
push
and
adc
jno
pop
imul
cmpsb
int
movsl
fwait
iret
pop
jae
mov
out
mov
mov
sbb
or
dec
repz
aam
imul
cli
ja
aad
test
les
fcoms
les
pop
sbb
mov
add
or
pop
sbbl
sahf
and
test
mov
push
stc
hlt
cli
jecxz
cmp
xchg
pop
arpl
lods
xchg
jno
icebp
rclb
ljmp
inc
mov
mov
add
push
push
lods
dec
in
cli
inc
push
pop
into
mov
ljmp
cmp
jle
loope
add
ds
pop
in
fwait
pop
loop
pop
test
cld
js
push
push
mov
call
sbb
test
xchg
into
sbb
shl
les
add
lahf
ljmp
mov
mul
cmp
data16
stos
pop
cmpsl
or
cmc
and
aam
fstpl
cli
inc
daa
filds
or
add
int
xchg
pop
mov
cmpsb
xor
add
xor
fucomip
in
add
adc
mov
dec
and
sub
and
vandnps
inc
outsl
xor
clc
fimuls
jg
sub
add
cmp
cmc
xchg
inc
mov
push
jne
icebp
pushf
mov
mov
cmp
jp
pop
jne
inc
add
das
cmp
testb
mov
pop
add
pop
dec
ja,pn
jp
ret
push
jns
inc
cmp
dec
fisttpl
sarl
fidivs
scas
dec
mov
jp
ret
cmp
inc
dec
push
mov
fwait
test
sub
sub
sub
pcmpgtd
ljmp
rclb
pop
shlb
scas
mov
push
ss
cwtl
fistps
out
or
fsub
push
int3
clc
and
fwait
shlb
or
lret
xchg
jb
sbbb
insb
jle,pt
mov
out
jmp
mov
bound
cmc
mov
insb
mov
add
adc
test
xor
stos
stos
ljmp
or
daa
popa
xorb
pop
fildll
push
mov
ljmp
ret
test
cmp
and
jnp
out
hlt
loope
outsl
cmp
ljmp
mov
in
push
fisttps
movsb
push
sub
xor
daa
push
nop
test
cmc
fldenv
add
jmp
adc
jns
xchg
insb
mov
pushf
dec
xor
cltd
cli
icebp
push
cmp
es
add
cli
inc
pusha
cmpsl
and
jmp
call
lods
mov
js
out
repnz
rorb
aad
nop
sub
xor
inc
sub
pop
cld
pop
fsubl
ss
test
aam
hlt
push
jb
in
dec
clc
ficoms
adc
ret
call
fwait
push
cmp
mull
pushfw
mov
xlat
jne
and
sub
lods
daa
imul
test
imul
push
jne
addl
fsubl
das
sub
xorb
cmp
adc
repz
mov
and
mov
push
push
icebp
lcall
cwtl
pop
rcrl
aam
cmp
dec
test
mov
mov
loope
jns
addr16
pop
and
sbb
dec
mov
mov
outsl
aas
inc
jle
dec
mov
fcmovnu
push
int
ds
aas
adc
inc
subb
sbb
stc
or
clc
in
imul
jmp
pop
and
jne
sbb
jmp
loopne
test
sub
aad
sbb
aaa
dec
or
add
insl
mov
or
cs
push
loop
stos
ret
inc
loopne
xor
aas
fstpl
out
inc
leave
int3
and
jge
lret
mov
ss
inc
or
and
add
sub
mov
aaa
sub
push
iret
or
cmp
push
mov
inc
xchg
mov
movsl
and
rcrl
bound
mov
cmc
xorl
iret
int3
mov
pop
jmp
leave
push
jae
pop
aas
or
pop
dec
daa
pop
pop
dec
push
cltd
rclb
jecxz
add
fdivr
and
add
ja
xor
clc
push
fildll
dec
in
scas
scas
int
add
xchg
xchg
add
push
popf
xchg
popf
inc
mov
pop
add
cltd
mov
movsl
iret
sahf
or
jmp
outsb
dec
lea
ret
jmp
jp
or
sbb
jg
dec
mov
inc
and
ret
or
jmp
pop
incb
push
push
pusha
pop
movl
or
shr
sub
loop
in
aas
insb
push
in
js
fnsave
enter
push
les
filds
or
cmpsb
mov
lea
and
test
loopne
add
cltd
sbb
mov
jecxz
scas
enter
dec
pop
adc
ret
cs
push
cmpsb
xchg
loop
mov
cmpsb
shl
inc
loope
jns
cmp
test
push
dec
nop
test
jg
out
jae
push
cmc
pop
inc
adc
mov
inc
roll
in
popf
rorl
lods
sbb
mov
sbb
cmpl
xor
rcr
jg
add
push
mov
jnp
dec
mov
push
or
int
in
mov
jmp
mov
mov
cmpsl
or
divl
cltd
pop
xchg
int
inc
sbb
jmp
and
push
xor
pop
xor
sub
cmp
sub
or
cld
and
movsb
or
mov
push
add
inc
int
ss
pushf
push
xor
test
cmp
cltd
in
fcompl
inc
or
out
nop
sub
loop
insb
mov
pop
pop
das
ss
or
add
adc
mov
mov
sti
jae
xchg
pop
pop
daa
pop
or
adc
mov
repz
mov
dec
ret
mov
cwtl
ret
cmpsb
xorl
jle
loopne
enter
test
ret
pop
jge
out
pop
add
std
lods
cmpsb
pop
jo
cmp
cmp
stos
xlat
addps
in
ret
mov
mov
jmp
jo
addb
and
xchg
cmp
xor
fstps
shll
lret
cmp
mov
out
mov
aaa
push
repnz
jb
xor
fs
or
xor
and
arpl
cmp
push
mov
shl
test
out
les
dec
push
or
call
adc
push
outsb
out
xchg
in
lds
adc
leave
inc
push
pushf
fadd
jl
sub
mov
cmp
jns
out
cmp
push
or
dec
dec
inc
push
push
out
std
lcall
adc
jecxz
xor
fwait
xor
sbb
movsl
addr16
pop
loop
push
ds
adc
jo
into
cmp
cwtl
call
cmp
mov
jbe
jmp
push
pop
xlat
lea
cmpsb
add
decl
adc
cmp
cmp
push
pop
scas
mov
sub
insl
sbb
lahf
lret
out
cmpsl
mov
pop
push
pop
push
xchg
sbb
xchg
test
scas
inc
cmpsb
jae
mov
dec
pop
mov
jns
xchg
cltd
push
mov
inc
xor
dec
adc
mov
test
push
and
jo
adc
jae
cmc
fcoms
imul
in
rorl
dec
push
sub
xchg
cli
mov
mov
cmp
int3
pop
pop
hlt
or
mov
movsl
ret
cld
xor
imul
inc
stos
push
cmp
pop
dec
xchg
mov
jecxz
test
dec
or
cmpsb
ret
fisubs
pop
fsubrs
out
xchg
and
xor
iret
push
scas
fldt
outsb
in
mov
loop
ret
inc
dec
loop
dec
cltd
in
xlat
xor
sub
mov
movsb
lahf
sbb
and
cli
cwtl
ljmp
push
cli
pop
pop
call
pop
ljmp
pop
bound
ret
xor
pop
call
push
cli
fidivrs
out
aaa
jb
adc
mov
rclb
pop
xchg
inc
test
cmp
sub
test
repz
out
std
call
add
cmp
std
xchg
and
cltd
or
xchg
ljmp
sbb
or
push
mov
jg
mov
jg
mov
xor
dec
ds
fwait
stos
mov
lcall
pusha
in
jecxz
pop
out
outsb
add
in
in
pop
jnp
mov
pushf
pop
sub
inc
adc
sbb
jge
sbb
xlat
inc
push
fildl
mov
mov
jp
scas
cmpl
cltd
xchg
cmp
cmp
js
cltd
enter
mov
xchg
imul
xor
mov
jnp
adc
fdivr
cld
inc
jge
nop
in
stc
cmp
mov
call
xor
push
arpl
push
mov
sub
pop
add
xlat
push
andl
icebp
in
ror
cwtl
lahf
mov
movsl
adc
dec
jmp
daa
sub
jns
mov
dec
inc
sahf
pop
cmc
jnp
shll
jge
cli
inc
jle
scas
jne
dec
mov
mov
xchg
fcmovb
mov
add
sti
scas
sbb
xchg
test
jb
lcall
imul
jp
mov
jle
and
xchg
jmp
dec
inc
cs
jecxz
mov
aad
ficomps
inc
cmp
fldcw
mov
jmp
lret
das
fisttpl
xchg
push
jae
mov
out
pushf
push
fists
in
popa
xchg
dec
test
loop
mov
in
sahf
fsts
out
nop
fistpl
mov
jl
scas
loopne
clc
adc
bound
testl
lret
in
dec
pop
les
cltd
out
ja
sub
push
add
pop
adc
cmp
icebp
sbb
aad
fs
or
add
lcall
ds
inc
pop
push
add
jle
aam
in
pop
and
push
into
inc
mov
push
xor
shrl
loopne
push
es
sbb
gs
pop
mov
mov
fsubs
cmp
mov
roll
sub
testb
push
test
xor
pop
lods
lret
add
aad
pop
dec
push
pop
pop
push
mov
popa
pop
or
imul
cwtl
outsb
ljmp
sub
js
test
pop
ss
ljmp
orb
jb
fstpt
loopne
ficompl
dec
mov
push
lcall
iret
scas
in
lods
xchg
cmp
loopnew
mov
push
lret
or
lods
ret
movsl
or
sub
gs
paddw
cvtpi2ps
flds
test
push
mov
add
cmp
pop
test
decb
push
aad
cmp
ljmp
fsubp
pop
imul
push
push
movsl
faddl
add
cmc
xor
mov
cmpb
dec
lcall
cmp
mov
cmpl
out
pop
add
loop
dec
sti
enter
fwait
push
aas
inc
shlb
je
sbb
jbe
sub
out
pop
push
pop
adc
inc
std
pop
pop
mov
aaa
cmp
in
pop
cmp
xchg
cld
push
out
fimull
popa
movsl
sub
or
mov
jns
fisubs
ja
test
push
insb
popf
inc
daa
add
aad
into
test
imul
mov
test
ds
iret
and
sub
and
fadds
lds
xor
push
push
jmp
inc
dec
jecxz
and
pop
subb
xor
insl
mov
sbb
sarl
sub
sub
dec
scas
cmpl
xor
mov
mov
or
add
out
popf
cwtl
inc
leave
sub
shl
xor
add
push
flds
je
aas
insl
adc
adc
inc
jg
out
addl
dec
fmull
jmp
mov
and
mov
imul
dec
cwtl
mov
jmp
scas
bound
nop
aam
cmp
rcll
sub
cmpsl
cs
out
loop
int
mov
test
xor
enter
shlb
cmc
imul
pop
dec
jg
add
lods
outsl
cmp
inc
xchg
imul
and
add
adc
xchg
mov
cmp
stos
pop
repnz
adc
in
mov
mov
pop
shlb
adc
test
dec
jp
dec
or
add
call
ss
jnp
dec
cmpsb
imulb
leave
jmp
sbb
xor
and
gs
xchg
sbb
dec
movsb
pop
and
add
lret
and
inc
cwtl
adc
mov
xor
jl
imulb
outsl
sbb
js
scas
sub
fldl
xor
xor
xor
and
pop
test
inc
jg
mov
and
shlb
jecxz
shl
pop
shr
pushf
push
pop
fwait
shll
xchg
in
ret
xchg
mov
pop
xchg
pop
mov
push
daa
out
jecxz
test
jno
mov
cmp
out
inc
or
jg
mov
jno
fs
cmp
inc
inc
add
mov
stos
outsl
inc
mov
cmpsb
fildll
jl
filds
inc
xor
aad
xchg
sub
pop
mov
pop
cmp
push
dec
xchg
mov
dec
lock
pop
mov
jge
dec
ja
cltd
mov
cmp
fisubrs
sbb
jmp
push
fsub
inc
pop
mov
das
cmpl
mov
popa
arpl
pop
xlat
pop
in
shl
push
dec
push
das
das
push
push
adc
or
dec
adc
cmp
int
dec
xor
or
push
not
rorb
enter
out
fwait
outsb
pop
fwait
sbb
jl
cmp
sahf
mov
and
out
scas
sub
pop
xchg
lods
pop
jge
test
ja
dec
mov
xchg
bound
mov
clc
mov
adc
xlat
push
xchg
stos
cli
addr16
mov
cmpsb
loop
ds
jns
inc
fimull
fwait
test
loope
incl
cmpsl
mov
pop
ss
pop
int
inc
jle
roll
divb
sub
stos
sbb
xchg
test
inc
push
mov
jmp
push
sahf
and
pop
out
push
scas
mov
and
sbb
push
mov
push
rolb
xchg
pushf
mov
mov
ss
mov
lret
fildl
jbe
jns
adc
int3
or
sbb
bswap
pop
adc
jne
pop
push
dec
fstp
sbb
xchg
lds
pushf
icebp
rolb
gs
out
aam
or
push
xchg
jg
pop
aad
jno
nop
mov
or
inc
in
adc
mov
aad
aad
lret
loopne
clc
or
test
xor
mov
je
and
add
adc
std
jmp
add
lcall
jmp
add
mov
jge
xor
or
repnz
jl
jb
add
sbb
and
mov
lock
loopne
jecxz
dec
and
mov
repnz
addr16
pop
pop
mov
cmc
out
xor
lret
jp
inc
xchg
mov
cmp
adc
sbb
aaa
push
dec
mov
mov
bound
pop
dec
adc
inc
fsubrl
aam
sbb
loopne
ljmp
cli
mov
imul
fcoml
mov
mov
sub
push
mov
stc
test
push
xor
xor
das
jecxz
jnp
ljmp
lds
sub
inc
js
ret
jns
aas
loop
arpl
xorl
sub
inc
pop
fs
das
add
xor
icebp
xor
mov
shll
sbb
daa
dec
repz
mov
dec
xor
jmp
into
dec
sbb
push
aam
or
push
mov
cli
adc
aam
mov
pop
pop
lea
bound
lcall
hlt
push
aam
data16
sbb
sarl
decl
daa
mov
cwtl
push
test
aam
mov
test
insl
push
mov
mov
inc
das
sbb
inc
jne
pop
inc
mov
cwtl
jg
jae
adc
push
mov
xchg
bound
and
ljmp
call
xor
mov
mov
or
int3
cmp
ljmp
xchg
sbb
push
pop
or
imul
mov
clc
xchg
movsb
inc
mov
sub
sti
mov
adc
inc
pusha
xchg
enter
sub
into
nop
mov
setb
jmp
push
fiaddl
sub
push
out
push
or
sti
shll
xchg
jb
arpl
jo
jg
ja
cmp
jg
roll
movsl
pop
sbb
mov
pop
gs
adc
cld
pop
ficomps
dec
inc
jbe
leave
xchg
push
push
pop
dec
sbb
icebp
add
mov
xchg
push
sahf
sbb
mov
scas
push
sti
lret
out
jle
imul
push
mov
pop
inc
dec
and
mov
and
int
cli
pop
test
mov
lcall
and
cli
and
push
dec
mov
pop
mov
and
cmc
lea
cmpsb
inc
sbb
or
pop
push
cmp
mov
add
outsl
push
push
aas
in
jns
mov
lods
mov
push
mov
cwtl
pop
lea
stos
fcoms
cmp
addps
lret
sarb
pop
and
push
sbb
stos
sbbl
push
jecxz
mov
jge
cld
pop
mov
jns
gs
aam
inc
inc
sarb
and
or
and
hlt
and
in
scas
xor
jo
aas
inc
sub
sbb
mov
std
jno
pushl
jmp
sub
dec
cld
mov
pop
and
xchg
jb
xchg
scas
test
jg
roll
cmp
outsb
inc
mov
loopne
aad
pop
jbe
push
or
ret
jmp
mov
mov
arpl
pop
adc
push
stos
cmpsb
xor
daa
imul
popf
xor
je
movsb
mov
mov
push
jae
xchg
add
dec
bound
push
jecxz
cltd
mov
lahf
sbb
fadds
sub
cli
rcrb
nop
sbb
jno
lea
call
das
in
adc
out
jns
inc
icebp
ds
call
xor
addb
xchg
push
lcall
outsb
std
xchg
out
push
inc
xchg
cmp
xor
mov
fs
es
in
enter
xor
adcb
mov
jne
cld
fstps
xchg
sahf
xchg
in
or
lds
fucomp
dec
fdivl
cwtl
mov
push
sub
fildl
dec
add
adc
bound
in
js
adc
cli
test
mov
arpl
imul
pop
xchg
into
adc
pop
cld
mov
cmp
add
sub
enter
pop
jmp
adc
mov
aad
clc
cmpsb
sbb
cmc
xorl
repz
mov
xor
jmp
mov
jb
imul
or
push
or
xor
jo
mov
add
inc
adcb
les
stos
insb
mov
into
test
adc
and
jle
fwait
lds
sbb
sbb
les
test
mov
mov
mov
sub
test
outsb
in
adc
adc
inc
mov
mov
jo
push
sub
or
cmp
mov
sbb
add
push
data16
lea
movsb
out
push
mov
call
out
jecxz
hlt
pop
cmp
sub
imul
mov
fimull
sbb
sbb
mov
sbb
rorb
and
cli
sub
and
adc
mov
gs
daa
sbb
dec
add
jno
fwait
jle
andb
aam
pop
sub
sub
and
lret
in
jle
sub
lods
mov
hlt
pop
cmp
cwtl
and
in
sbb
mov
scas
imul
mov
bound
lcall
pop
mov
pop
or
mov
movsl
add
out
push
in
enter
mov
into
sub
push
es
int3
and
xor
repz
pop
cli
nop
les
pop
mov
mov
mov
stc
test
outsl
imul
lock
out
cmp
popa
mov
sbb
xchg
popa
cli
imul
dec
jnp
dec
outsl
push
lret
fadds
jl
mov
imul
sub
cmp
adc
xchg
dec
cmpb
mov
dec
mov
insl
push
sbbl
jg
lret
inc
cmp
lcall
loop,pt
sbb
and
mov
xchg
repnz
xor
sub
test
lret
mov
les
mov
mov
mov
adc
push
cld
sub
mov
or
popf
stc
lods
add
add
roll
push
pushf
lea
sub
rorl
push
in
fwait
jnp
sahf
into
cmpsl
dec
sub
sbb
xor
js
hlt
call
out
sub
stos
iret
adc
outsb
adc
mov
jnp
stc
or
cltd
adc
and
popl
mov
push
mov
cmp
mov
fwait
xchg
shll
inc
dec
mov
enter
and
js
jmp
mov
test
in
stc
push
jp
sbb
mov
xchg
mov
dec
dec
nop
cmpl
mov
insl
leave
mov
sub
and
shll
xchg
in
cltd
push
fistps
dec
add
adc
mov
jmp
cmpsl
add
popf
mov
jb
aaa
sub
push
and
nop
fists
fsub
stc
lds
or
dec
cmpsb
sub
movsl
lret
pop
int3
mov
fistl
mov
idivl
mov
mov
mov
pop
push
test
pusha
jl
out
lret
or
les
lods
popa
movsb
pop
push
pop
inc
jmp
pop
dec
je
out
arpl
lods
jp
xchg
mov
xchg
inc
mov
loopne
inc
or
inc
xchg
push
mov
push
push
subb
mov
and
scas
or
hlt
mov
iret
dec
sub
mov
pusha
xchg
sub
adc
cmpsb
adc
bound
rep
mov
adc
ret
xor
xchg
adc
sbbl
cli
movsl
pop
adc
cmp
loop
inc
aas
push
loopne
scas
rorl
jl
ss
cli
mov
daa
bound
scas
out
add
and
push
or
mov
xor
mov
fucom
dec
or
cmp
push
inc
aam
and
add
insb
mov
clc
jne
je
rcr
jge
push
movsl
mov
ja
xor
or
mov
adc
jbe
das
rol
pop
sub
push
test
cmpsb
adc
cmp
cmp
lock
call
fwait
push
testl
or
and
into
pop
fwait
popa
push
ret
ret
pop
cmpsl
xchg
mov
dec
sbb
ret
sbb
dec
jno
cltd
xor
aas
mov
and
repz
lods
push
cmp
rcl
add
sbb
ja
sbb
repnz
int3
or
add
or
sub
iret
sahf
ret
cltd
mov
mov
out
pop
lahf
add
push
jmp
adcb
daa
in
xor
andl
sahf
pop
fsubl
push
shrb
mov
jb
shlb
les
jl
pop
sbb
test
inc
js
lsl
jle
jno
mov
js
and
ret
call
inc
cltd
nop
popf
mov
adc
sbb
pop
sub
mov
add
mov
enter
ret
fwait
inc
in
ja
sub
ficoml
mov
clc
pop
shlb
push
fwait
pop
gs
dec
sub
xchg
mov
xor
outsl
or
xchg
adc
movl
or
fisubrs
stos
xor
mov
popa
dec
call
mov
mov
jo
jp
mov
sbb
rcrl
mov
arpl
loopne
orb
stos
add
lret
push
or
movsl
inc
mov
adc
lods
jg
mov
cmp
cwtl
addr16
cmp
fcomps
pop
sbbb
sub
jb
xor
pop
jp
decb
out
jns
sub
sbb
das
mov
bound
loope
add
ja
stos
daa
icebp
icebp
gs
mov
fadds
adc
dec
inc
rorl
add
lock
push
mov
mov
inc
js
jg
jg
mov
call
push
cmp
hlt
inc
mov
rorl
cmpsl
lcall
inc
xor
movsl
fcomi
cs
hlt
push
fimuls
hlt
pop
mov
push
or
sbbb
jae
je
dec
cli
and
sbb
push
jmp
sbb
movsb
and
fs
dec
aam
push
int
and
jns
dec
out
push
scas
push
push
or
stos
mov
pop
fwait
mov
hlt
add
jle
sbb
mov
popf
ss
sarb
pop
cmpsb
xchg
imul
aaa
repnz
push
ror
enter
sub
xor
stos
add
xchg
jns
out
insb
mov
scas
add
test
insl
lea
and
fisubrl
jnp
das
or
iret
imul
add
pop
popf
add
xlat
sub
inc
add
inc
mov
in
mov
rcll
std
mov
test
jb
outsb
sub
push
mov
xor
insl
mov
fwait
push
jmp
fcomi
push
or
xchg
mov
testb
cmp
cmc
dec
adc
lock
sub
out
lock
ss
movsl
sub
or
xorb
mov
popa
mov
inc
enter
jns
push
ds
add
push
out
sahf
cmp
or
popa
sub
sahf
out
dec
cmp
or
push
sub
bound
stos
and
mov
push
and
int3
mov
cmpsb
sub
inc
lret
jg
cmp
mov
jae
push
rcll
jbe
sti
out
pop
lahf
pop
pop
mov
push
sbb
enter
andnps
cmp
add
mov
cs
data16
repz
sub
insb
out
xor
addr16
movsl
sub
fsubs
and
and
rorb
mov
std
push
icebp
test
outsb
shll
mov
mov
lods
pushf
cmpsl
push
and
sbb
adc
xchg
arpl
jmp
dec
in
pop
aas
mov
fimuls
dec
sti
int
in
sbb
fisubl
mov
push
not
fwait
mov
loopne
dec
and
adc
jbe
adc
orb
fdivrs
adc
mov
xor
sbb
add
and
mov
bnd
adc
mov
sbb
xor
test
pop
xor
ja
xchg
pushf
pop
push
in
ret
pop
add
pop
movsb
mov
push
pop
mov
out
mov
or
sarl
imul
sub
and
mov
das
loope
push
and
or
out
insb
imul
stc
sub
repz
out
test
jmp
fs
adc
pop
mov
inc
lods
ret
shlb
mov
stos
pop
fnstcw
pusha
inc
sbb
push
inc
clc
xlat
jecxz
pop
shrb
mov
xor
dec
mov
lock
mov
fisubrl
test
add
mov
test
push
push
gs
cmpsb
call
push
pop
pop
jno
xchg
lahf
adc
sahf
jmp
test
lods
fadd
movsl
fsubrs
sbb
cli
clc
sbb
popl
sbb
mov
lock
pop
adc
xlat
or
ja
sub
add
fsubrs
fldenv
adc
test
adc
push
dec
aaa
sahf
rorb
push
in
xorb
and
sarl
fstp
xor
ret
mov
in
aad
js
pop
ljmp
or
int
jmp
ret
ds
stc
loopw
cs
cmp
jg
popa
dec
inc
mov
cld
dec
push
cmpsl
je
cmp
dec
adc
arpl
daa
lods
out
lret
aad
mov
mov
xchg
aas
push
cwtl
add
push
adc
and
roll
adc
lock
cmp
xor
fiaddl
fildl
js
push
test
or
fcoms
lahf
in
inc
out
insl
sbb
rol
pop
jns
mov
int3
dec
mov
dec
out
sub
mov
jae,pt
sub
inc
clc
adc
cwtl
push
popf
mov
loope
push
out
aas
lret
int
push
shrl
or
popa
lret
dec
aaa
sub
sbb
inc
mov
mov
sbb
icebp
mov
sti
xchg
lock
fidivs
rcll
addr16
stos
shlb
and
pop
cmpb
outsl
adc
clc
lods
add
push
dec
pop
lods
fmuls
fs
int
repnz
in
jl
push
xor
inc
mov
xchg
or
push
lock
mov
jl
mov
ss
cmp
and
inc
and
jbe
jge
popa
or
cmp
mov
push
outsl
adc
hlt
add
pushf
push
sub
inc
gs
aaa
hlt
and
mov
cmpsb
test
mov
lcall
mov
les
mov
pop
jp
inc
fldln2
inc
lret
pop
pushf
bound
aas
add
sarl
cld
jmp
je
xchg
mov
das
mov
jmp
cli
repz
popa
movsb
mov
mov
out
sbb
cmc
call
rol
sbb
cmc
pop
hlt
xchg
xor
sub
jne
imull
lcall
mov
mulb
pop
pushf
and
xlat
jbe
bound
add
xchg
lock
jge
fisubrs
ret
and
fdivp
pop
lods
lahf
cmpsb
cmc
cmpsb
push
jle
or
mov
jb
sub
xor
mulb
xor
mov
or
nop
mov
sbb
js
jbe
jge
loop
sub
or
les
push
xor
jb
aaa
rolb
add
aas
ret
test
jp
int3
sub
test
xor
fisubs
cmpsb
ficomps
and
xor
aad
ret
mulb
jnp
jle
rol
das
inc
add
sub
nop
xchg
insl
ss
adc
inc
adc
inc
cli
ret
sbb
rcrl
dec
xor
pushl
add
fisubl
rcl
dec
or
xor
jno
or
lods
faddp
ss
mov
xchg
sbb
ret
imul
bound
pop
mov
lods
push
adc
push
xchg
add
call
sbb
popa
sub
jno
add
stc
adc
shl
mov
out
mov
lods
xor
or
jmp
pushf
sbb
mov
mov
cmp
lret
into
inc
inc
mov
xchg
dec
mov
mov
adc
pop
sub
or
mov
cmc
mov
dec
xchg
cmp
inc
inc
pop
repnz
shrb
push
xor
adc
xchg
jg
addr16
push
ss
mov
cs
test
and
push
jl
push
xchg
and
inc
aad
mov
push
int3
push
mov
test
inc
mov
in
outsb
fcoml
fmull
cmc
cmp
cmp
out
inc
adc
adc
cmp
push
subl
sbb
jecxz
and
jecxz
push
push
out
mov
int3
in
inc
ret
popf
add
jmp
fwait
mov
insb
movsl
and
ret
cmpsl
xor
aam
inc
dec
mov
xor
fstl
jge,pt
pop
loopne,pt
xorb
imul
movsl
lret
ficoms
xor
sub
pop
mov
ja
int
or
pop
je
jecxz
fimuls
xchg
sub
into
repnz
inc
sarb
rolb
rol
cmp
cld
push
dec
fisubrs
int
fistpl
sbb
or
mov
cmp
shl
insb
dec
adc
sbb
or
push
cmp
or
xchg
push
sub
jbe
push
dec
and
xchg
sbb
inc
dec
push
fcmovnb
dec
jae
loopne
xchg
xchg
cmp
inc
es
insb
icebp
sahf
inc
ficoml
je
mov
pop
lahf
xchg
sub
in
hlt
and
inc
testl
cmpsb
cpuid
test
rclb
test
fbstp
mov
in
xchg
or
inc
or
icebp
popa
mov
xchg
sub
pop
test
add
mov
sbb
mov
clc
pop
pop
loopne
dec
orb
out
jmp
gs
int
xchg
hlt
cli
mov
xor
les
orb
rolb
out
into
mov
push
lret
pop
mov
pop
movsl
jns
jae
mov
int3
jg
mov
cmpsl
mov
xor
inc
sbb
out
cmp
pop
sbb
push
rcr
jno
aaa
rcl
or
ret
lcall
push
adc
push
and
data16
cmc
push
push
mov
mov
mov
sbb
adc
notl
mov
aad
aas
lods
rorb
mov
rcrl
or
rcll
mov
mov
pop
mov
sbb
mov
sbb
iret
leave
in
jmp
aad
dec
or
aas
sahf
shll
mov
xchg
out
insl
sub
cmpsb
pop
adc
cmp
mov
cltd
lods
rcrl
repz
ds
and
je
sbb
adc
das
fidivs
push
or
ret
mov
mov
push
sub
out
popf
pop
xchg
dec
rcl
jbe
add
mov
sub
lds
iret
or
jno
mov
call
mov
and
fadds
mov
inc
into
pop
mov
xchg
test
lods
sbb
mov
popf
dec
shrb
jg
push
dec
adc
xorl
mov
loope
mov
add
pop
sar
xchg
cltd
mov
fisubrs
idiv
mov
push
xchg
and
push
mov
pop
imul
lods
xor
jbe
dec
add
out
jne
jnp
mov
sbb
cmpsb
xor
cmp
cwtl
ds
cwtl
adcb
fsubp
mov
neg
inc
insb
xchg
cmpsb
mov
xchg
add
outsl
mov
jmp
jg
push
push
out
into
decb
sub
ret
notb
jge
loopne
fisubrs
shrb
cmp
popa
dec
mov
loopne
mov
sbb
mov
mov
xchg
sahf
sbb
cmpsl
pop
add
ret
mov
xchg
lea
ja
pop
loope
sti
sbb
test
out
add
gs
inc
in
shll
inc
and
fldcw
outsb
bound
add
out
popf
loopne
lret
pusha
jecxz
decb
cmp
sub
ljmp
shll
cwtl
mov
lret
adc
outsb
imul
paddsb
mov
and
in
jnp
cld
jne
inc
pop
xor
or
outsl
sub
sahf
cmp
xlat
fstl
loope
cmpl
xchg
mov
xlat
xor
fiaddl
adcl
cli
cmp
mov
cld
sub
addr16
je
aam
jmp
mov
sarl
pusha
mov
test
and
js
xchg
fstpl
pop
arpl
cmp
mov
icebp
les
cmp
cltd
mov
sbb
divb
pop
icebp
in
sbb
in
in
ss
push
movsl
jle
jbe
push
loopne
and
ret
and
int
int3
mov
dec
dec
pushw
xor
je
xor
out
stos
aaa
sbb
inc
imul
sahf
cmp
dec
adc
mov
lds
sub
test
cmp
lods
mov
push
xor
out
or
push
add
iret
fidivrl
pusha
or
shlb
ret
test
or
xor
hlt
mov
add
jno
mov
cmp
das
mov
jno
jl
add
clc
sbb
inc
stos
pop
mov
sub
jne
jle
fsubrs
fs
js
pusha
je
jb
dec
dec
inc
jbe
fs
cwtl
adc
sub
bound
mov
test
andl
test
xchg
jecxz
push
jae
test
or
push
js
sahf
mov
addl
adc
ret
sbb
inc
mov
fsubrs
mov
mov
or
xchg
add
jg
aam
adc
push
sub
imul
and
ja
mov
daa
lahf
add
sub
push
sahf
mov
sbb
jmp
in
fnstcw
ss
shlb
mov
fwait
aam
mov
lcall
push
stc
xor
inc
mov
cmpsl
or
and
xchg
test
add
adc
out
aaa
les
mov
dec
outsb
imul
mov
cmpsb
or
mov
jno
rolb
les
in
imul
xchg
fs
lcall
sar
mov
inc
movsb
outsl
mov
push
push
daa
js
add
and
xchg
add
push
pop
inc
inc
add
sbb
bound
fchs
outsb
push
in
subl
insl
inc
xor
adc
mov
jne
ficompl
and
aad
add
call
jge
out
inc
aas
lods
lret
dec
xchg
inc
sub
mov
mov
mov
mov
cmp
stos
stc
aad
sbb
add
jne
cmp
xor
xchg
into
jb
cmp
pop
push
mov
adc
js
shl
popa
int3
icebp
dec
insl
sub
inc
mov
scas
les
inc
sbb
sbb
jmp
and
push
sub
push
je
push
iret
push
add
lcall
push
cmc
std
cmpsl
frstor
mov
jo
xor
inc
lea
cmp
dec
add
sbbb
inc
cmc
mov
cmp
decl
and
fimuls
or
adc
inc
xchg
push
push
iret
arpl
dec
and
jbe
js
std
int3
fstp
sub
out
jle
enter
sti
cltd
push
sbb
inc
rcll
mov
inc
jo
leave
enter
sub
nop
sahf
jge
or
shrl
sbb
scas
fistpll
cmp
loopne
xor
cwtl
inc
shr
jg
outsb
jb
cmpsb
arpl
outsl
push
int3
mov
nop
mov
test
test
and
js
push
sbb
xchg
adc
inc
lret
add
enter
cmpsb
insb
xchg
stos
xchg
jmp
add
shl
test
fprem
push
out
outsl
inc
outsb
lret
pop
xor
repz
loopne
jmp
and
aam
das
in
movb
outsb
cltd
push
loopne
jecxz
int3
mov
mov
fwait
daa
sub
stos
lock
xchg
fwait
lret
or
sbbb
cmp
mov
mov
mov
icebp
push
in
push
fnstenv
pop
mov
add
mov
mov
push
xor
mov
js
or
sub
cmp
push
pop
dec
jecxz
and
dec
and
in
leave
popl
mov
into
push
dec
popa
mov
mov
gs
dec
les
add
mov
mov
xor
sub
outsb
xor
inc
aas
and
hlt
sarl
sub
mov
add
cmc
push
andl
mov
popa
repz
imul
scas
outsb
and
test
fimull
ja
imul
adc
or
cmp
fnstcw
and
lea
imul
xchg
push
sbb
shrl
jecxz
movsl
mov
mov
insl
imul
push
fcoms
cltd
inc
das
out
mov
mov
pusha
pushf
sti
mov
ret
sub
mov
js
jg
cmc
das
and
dec
sbb
sbb
ds
insb
xchg
fcompl
cmpsb
pop
add
filds
jge
mov
pop
push
add
lock
or
aas
ror
sbb
add
adc
xlat
pusha
push
int3
pop
push
nop
xor
rorl
test
and
mov
xchg
and
or
cli
jb
push
daa
in
cld
jnp
shll
loopne
aas
roll
mov
or
out
cmp
in
dec
mov
push
push
lods
fsubs
ljmp
inc
data16
pop
fcomp
icebp
dec
push
adc
sti
cli
test
inc
pusha
test
popf
mov
xor
and
in
xchg
ds
cmp
adc
or
pop
adc
leave
mov
mov
pop
nop
lods
jg
xchg
fsubs
pop
mov
xor
cmp
adc
inc
mov
mov
add
or
movb
push
push
pop
lret
sbb
xor
rclb
xor
jb
mov
mov
mov
push
sbb
icebp
push
fadd
andb
sub
push
loope
xchg
insl
add
push
loopne
outsb
adc
mov
insb
scas
loope
int3
xlat
sbb
mov
lea
cmp
je
sbb
mov
ret
adc
xchg
out
jmp
push
pop
jl
movsl
and
push
cs
fistps
inc
inc
inc
mov
pusha
cmp
std
dec
lea
xchg
aaa
or
pop
or
jp
push
push
inc
push
in
jbe,pn
lods
push
js
jg
jmp
mov
fisttpll
mov
dec
jb
xchg
or
lock
xchg
sti
mov
mov
iret
mov
insb
lods
mov
sbbb
mov
adc
ja
jns
jmp
cmp
push
sbb
leave
sbb
xor
scas
in
cmp
xor
jne
cmp
addl
mov
mov
shrl
lds
mov
addb
rolb
in
ret
xchg
icebp
and
pop
cld
nop
jp
stos
mov
or
cmc
add
mov
add
or
push
mov
jns
stos
out
int3
fcomp
pop
negb
adc
mov
sub
cmc
sub
pop
ret
ficompl
xchg
jp
outsl
mov
push
inc
jbe
push
pusha
xor
mov
aam
mov
mov
out
je
pop
mov
xchg
mov
dec
movsb
ss
sarl
push
inc
movl
roll
mov
mov
jbe
call
adc
cmpl
mov
adc
push
push
orl
in
daa
sub
xchg
test
pmullw
cmp
fmulp
jb
mov
sub
push
add
out
hlt
push
sub
popf
test
adc
clc
adc
divb
sub
sub
fsubrs
lahf
jno
xchg
mov
mov
mov
lret
div
and
cmc
mul
xchg
stc
push
int3
sub
push
lds
aam
shrb
insl
test
scas
push
mov
pop
or
mov
xor
test
jle
adc
push
inc
inc
and
out
mov
adc
mov
cmp
addr16
adc
repz
sub
ret
mov
push
jge
mov
xchg
and
fcomp
jo
sub
loope
mov
push
shll
sub
inc
in
jnp
mov
sub
mov
lret
repnz
loopne
insl
add
sbb
repnz
test
jmp
mov
push
xchg
xchg
add
inc
addr16
or
add
icebp
mov
mov
repz
mov
jns
leave
xchg
push
fnstsw
movsb
sti
mov
int
add
pop
repnz
lcall
out
mov
xchg
or
and
movsb
ret
cltd
and
dec
adc
jecxz
ljmp
bound
mov
lods
jno
lods
out
mov
roll
dec
mov
fiadds
insb
add
sbbb
inc
xor
outsl
xchg
daa
ret
inc
mov
push
std
xor
jno
push
jb
xor
push
mov
nop
insl
dec
pop
js
in
sbb
add
lds
jnp
pop
push
cmp
jbe
cmpsl
rorw
hlt
scas
pop
cld
inc
divl
cmp
pop
outsl
sub
fmul
rcll
cli
test
stos
mov
cmp
ds
xchg
cmp
lret
rclb
shll
imul
ss
dec
mov
stc
leave
dec
out
mov
iret
adcl
xor
sub
loopne
cltd
lcall
mov
adc
pop
sub
lcall
sbb
cmp
ret
jb
sbb
adc
imul
movq2dq
jns
jge
sub
gs
frstor
outsl
rcl
outsb
stos
lret
mov
or
iret
or
je
popf
out
xchg
jno
clc
rorb
inc
cmpsb
pop
push
adc
adc
sub
xor
lods
add
ds
xchg
jecxz
pop
fcmovne
cs
xchg
scas
inc
and
jge
inc
pop
cmp
daa
imul
cmpsb
mov
ss
int
loop
push
add
das
adc
fldcw
fisubrl
test
jl
sti
jno
lds
sub
stc
push
sti
mov
push
sub
aas
in
xor
lret
mov
cmp
aam
or
cmp
push
jl
imul
ja
sbb
xor
xchg
cmp
push
jbe
mov
pop
icebp
xor
adc
enter
add
fwait
add
loop
pop
pusha
push
jno
push
lret
fstpl
or
cli
imul
int3
pushf
inc
rcrl
dec
sarl
jl
stos
call
sbb
xchg
jmp
push
fs
or
xchg
jl
rorb
aaa
or
mov
jg
test
ret
data16
dec
push
mov
mov
aam
stos
rcrb
out
stos
push
sub
mov
stos
into
test
cwtl
jecxz
lret
lahf
cmpsb
aas
cmp
cli
movsb
cmpsb
xchg
stos
clc
xchg
jbe
xchg
hlt
inc
faddl
mov
adc
data16
jmp
sbb
mov
xchg
es
cmp
sbb
jno
rol
imul
pop
sbb
int3
inc
js
jnp
les
cmpsb
and
aam
push
jbe
es
leave
cmp
pop
cmp
repz
bound
cmpsb
sarb
dec
sbb
jae
adc
adc
nop
test
cmp
lcall
add
sub
push
imull
pusha
xchg
xchg
cmc
adc
push
mov
dec
aad
adc
cmp
pop
lret
add
push
and
jne
mov
icebp
std
jp
mov
and
jno
xchg
test
mov
push
enter
lods
cmpl
add
addb
pop
lods
adc
mov
scas
pop
push
push
xchg
jbe
pop
add
mov
es
pop
cmpsb
pop
ds
xlat
in
dec
push
adc
out
inc
sub
and
mov
fdivrs
mov
arpl
cs
icebp
mov
cmc
les
push
imull
call
out
pop
les
mov
and
stos
push
test
inc
cmp
inc
push
loopne
stos
xchg
imul
lcall
mov
adc
out
or
inc
test
sahf
push
mov
dec
std
dec
out
push
push
or
icebp
jne
shll
sub
mov
mov
mov
rclb
test
fidivs
xchg
push
int3
mov
add
mov
rcrl
je
xchg
fwait
in
xchg
sbb
sbb
pop
cli
mov
mov
sbb
lret
bound
stos
or
cmp
fcoms
pop
imul
shrl
ret
adc
addr16
lcall
test
inc
mov
mov
lds
xor
xchg
mov
out
pop
inc
sub
xchg
dec
inc
pop
sub
cltd
inc
mov
mov
dec
dec
fiadds
xor
ja
popl
fistpl
push
push
dec
or
sbb
imul
mov
jnp
mov
dec
shll
rorb
rcr
and
mov
fsubs
das
jp
das
inc
sbb
pop
lret
add
mov
or
lret
mov
and
leavew
sbb
imulb
insl
cmp
fnstenv
fistps
pop
adc
lods
sub
inc
aas
stc
mov
mov
and
xchg
outsb
sbb
je
dec
scas
mov
push
sbb
add
add
jl
mov
lock
movl
inc
mov
or
addr16
or
aad
cmp
push
jne
dec
out
cmpb
add
clc
mov
adc
lahf
xorb
inc
fstps
cmp
sub
popa
xchg
enter
mov
lods
sub
loop
shrl
loope
pop
pop
mov
cltd
mov
std
xorb
lea
pop
adc
cld
jmp
sbb
and
cmc
jle
or
bound
mov
mov
fadd
aaa
push
das
sbb
and
and
jge
mov
xchg
cmp
mov
or
jl
dec
sbb
cmpsb
adc
cltd
loop
repnz
fbld
call
dec
inc
and
daa
pop
mov
je
xchg
mov
cmc
cli
jmp
dec
xchg
fwait
out
jnp
push
xchg
gs
imul
mov
push
adc
jmp
mov
daa
outsl
xor
dec
cs
sbb
lods
mov
mov
lock
ret
dec
mov
dec
and
xchg
add
rcr
dec
mov
pop
xchg
sbb
xchg
mov
call
mov
addr16
xchg
stc
test
mov
dec
fcom
mov
sti
mov
ds
push
mov
xor
add
aam
or
ljmp
jge
sti
xchg
pop
stos
mov
arpl
dec
fwait
js
pushf
push
ds
cmc
xchg
fiaddl
inc
je
lods
sub
cmp
sub
sub
mov
jb
adc
adcl
xacquire
fdivp
pop
or
int3
mov
lock
test
out
pop
inc
in
dec
sbb
mov
mov
bound
jae
inc
push
arpl
dec
repnz
aad
sub
aas
dec
dec
and
dec
outsb
pop
outsl
push
jb
lret
ret
inc
mov
mov
shl
jecxz
dec
inc
add
or
add
lea
mov
test
test
cmp
clc
fdivp
sub
xchg
andl
push
pop
cmp
iret
rorl
jb,pt
xchg
and
mov
test
in
ljmp
xchg
cmp
aas
cs
cmp
sub
test
cltd
xor
notl
movsl
mov
mov
repz
xchg
or
loope
fwait
push
mov
push
inc
test
fisttps
test
test
lock
pop
popf
xchg
arpl
mov
clc
call
adc
mov
pop
fistl
jecxz
pop
icebp
jbe
sub
leave
mov
sub
fistpll
mov
cltd
adc
push
and
mov
adc
pop
jne
xchg
es
mov
push
mov
pushf
ljmp
ret
sbb
jnp
lods
dec
pop
fnsave
sbb
or
iret
lea
push
test
scas
sbb
xor
out
push
mov
mov
gs
mov
sarb
fisttps
int
cltd
lock
inc
scas
sub
cmpsl
vpmullw
pushf
xorl
pop
mov
inc
bnd
mov
sub
pop
mov
mov
xchg
mov
sub
dec
sub
push
mov
jge
mov
cmp
js
and
mov
loopne
out
mov
jp
mov
fdivs
aad
popf
sbbl
rcll
pop
inc
pop
or
aam
pusha
mov
repz
out
test
lods
daa
clc
sbb
inc
mov
hlt
mov
subl
stos
adc
int
pop
adc
pop
dec
loop
push
fdivl
rcl
inc
andl
scas
sbb
xchg
xlat
fwait
pop
cmp
adc
mov
in
fnsave
mov
jo
out
add
sbb
cwtl
fistpl
mov
mov
leave
mov
jl
div
add
fsts
mov
in
xchg
push
dec
mov
lea
fdivr
pop
out
cld
pop
nop
mov
push
mov
cmc
rorb
movsb
xchg
sub
outsl
sbb
ret
or
test
fcoms
into
fnstsw
test
jb
and
sub
imulb
ja
lahf
pop
enter
sbb
xor
sbb
adc
out
loop
test
mov
cmp
daa
imul
dec
mov
add
jg
or
pop
sbb
sub
test
call
pop
mov
dec
cmp
mov
push
inc
stos
inc
std
fcmovnu
mov
or
push
or
pop
jb
das
mov
jb
and
cmp
xor
push
inc
jmp
int
pop
nop
insb
pop
dec
or
dec
out
sbb
shrb
and
lods
scas
add
lcall
cmp
lret
cld
pusha
das
cld
xor
cmp
sti
enter
mov
cmpl
loopne
push
test
cmp
aaa
js
xchg
shlb
mov
mov
test
jo
mov
mov
adc
add
rcrb
popf
pop
addr16
stos
xchg
dec
adc
or
mov
mov
in
dec
and
cld
scas
fistpl
fcoms
lds
xchg
inc
fisttps
sub
add
push
int3
stos
mov
cmp
push
rorl
mov
arpl
dec
mov
mov
pop
lods
sub
lret
ret
adc
cs
xor
push
adc
cld
mov
sbb
daa
rcl
add
push
in
lcall
push
sbb
mov
repz
cs
fidivrs
in
pop
add
jnp
ja
mov
xor
mov
xchg
xchg
jnp
jno
push
mov
bound
pop
nop
cmp
push
sbb
adc
pusha
xchg
ds
mov
subl
imul
sbb
loop
jns
or
in
jb
or
out
mov
ds
sbb
add
movsl
mov
lret
movsl
mov
lea
jle
jne
sbb
jecxz
fidivl
or
movsb
in
ret
popf
aad
xlat
int3
fidivl
dec
rcl
movsl
je
dec
or
insb
and
jg
leave
ja
shr
sbb
adc
repz
push
inc
mov
sub
lods
insb
mov
test
mov
inc
sti
aas
psrad
sbb
and
cmp
addr16
add
ds
movsb
dec
and
shrb
scas
lods
fdivl
or
dec
sbb
jns
cmp
pop
sbb
push
andl
adcb
cmp
xor
and
in
cwtl
pushf
push
mov
mov
xor
dec
inc
subl
push
lock
or
push
test
jp
mov
mov
aad
orl
repz
fnstenv
sti
adc
mov
mov
testl
pop
cmp
loopne
and
out
stos
jo
pop
and
cld
lret
imul
ja
aas
fldcw
mov
mov
shrl
sbbl
dec
xor
cmp
inc
andb
pop
cmp
clc
icebp
sub
jp
cmpsl
repnz
fndisi(8087
mov
out
insl
repnz
push
and
rcll
adc
nop
int
out
xchg
fcmovnu
sub
dec
add
mov
xor
xchg
pop
adc
lds
cmp
mov
lods
cmpb
lret
jno
lock
mov
xchg
push
pop
inc
mov
cmp
inc
xor
jge
repnz
push
push
mov
test
mov
loope
insb
jbe
xor
xor
or
insb
pusha
mov
xor
adc
adc
xor
sar
std
xchg
mov
cltd
jo
add
jns
sbb
push
add
cmp
les
cmp
test
int
mov
adc
ss
lret
cmp
popf
and
cmp
or
fs
cmp
stos
push
insl
xchg
inc
es
sbb
xchg
xchg
or
scas
mov
out
out
sarl
cmpl
push
es
popa
add
and
xor
dec
inc
cmp
int3
add
mov
jno
sahf
iret
pop
push
test
lahf
push
fisubrl
jne
xor
inc
ret
push
xchg
adc
out
inc
mull
sub
mov
mov
test
mov
and
ret
sar
enter
fptan
addl
je
pop
adc
stos
loopne
lret
jmp
sbb
je
sub
outsb
bound
ret
or
cmp
data16
push
out
and
jb
cmp
adc
push
jb
das
cmp
or
xchg
xchg
ret
xor
mov
popa
ret
cmp
dec
test
sub
test
sbb
subl
sub
mov
cs
pop
fisttpll
lret
mov
sbb
inc
add
cmp
add
jbe
and
mov
aam
aam
test
rclb
call
fcmove
xor
adc
decl
aad
xor
cld
mov
pop
cmp
and
cwtl
mov
push
pop
mov
mov
imul
mov
cmpsb
orb
add
out
sub
mov
insl
push
or
pushf
out
test
clc
fdivp
pop
jae
fldl
inc
adc
dec
push
sbb
dec
jge
inc
xor
xor
ret
xchg
les
popa
sbb
xor
cmp
jge
insl
insb
push
pop
and
fdivs
shr
scas
mov
icebp
addr16
in
fldenv
aas
out
loope
push
scas
add
add
js
mov
ror
inc
movsb
sarl
test
movsl
test
xor
pop
push
adc
xchg
adcb
mov
add
adc
scas
ja
inc
sub
lret
mov
pop
inc
jo
ds
enter
stc
mov
cmc
loopne
jae
js
scas
pop
out
test
jecxz
adc
inc
mov
test
dec
push
fmul
sti
and
subl
add
mov
xchg
cmp
pop
pop
rcrl
dec
pop
jmp
pop
inc
pushf
sbbb
mov
jmp
addr16
enter
xchg
xor
pop
sub
pusha
xor
fwait
test
bnd
dec
cmp
or
mov
data16
rol
call
xlat
iret
jbe
jb
mov
mov
xor
test
xchg
inc
leave
or
xchg
sbb
mov
lret
loop
lods
lea
jo
sub
dec
add
scas
pop
test
sub
cld
mov
nop
imul
pop
leave
sbb
mov
scas
dec
and
les
inc
stos
std
out
out
sub
aad
mov
dec
flds
and
ja
mov
sub
pop
pusha
add
aam
mov
aad
mov
xchg
outsl
push
mov
cmp
mov
out
jb
jb
iret
stc
pusha
sbb
lret
sahf
sbb
sub
add
push
insl
lods
adc
repz
out
sbb
cmp
xchg
ja
jne
or
sub
sub
sub
jno
nop
jo
adc
mov
jb
ds
iret
scas
and
xor
ret
add
popa
loopne
jo
stos
vmovapd
and
or
inc
lock
mov
incb
mov
push
mov
pop
jp
and
fildll
adc
inc
sahf
insl
int3
aad
mov
aam
push
pop
stc
loope
xchg
sbb
mov
xchg
lcall
sbb
les
test
sub
adc
pop
xchg
cmpsl
xchg
push
fwait
dec
cmp
lods
int
adc
mov
loopne
adc
add
pop
es
aas
rcrb
pushf
inc
mov
dec
stos
lods
insl
dec
fcomp
pop
addr16
inc
fdivs
cli
or
xor
mov
cmpb
add
mov
fidivl
in
fistpll
add
cltd
dec
jecxz
addr16
xchg
add
and
lock
inc
je
push
out
out
int3
loop
dec
jmp
cmp
jmp
xor
stos
shr
mov
jmp
icebp
test
ss
insb
adc
push
jmp
scas
icebp
cmc
rol
mov
dec
inc
adc
pop
into
rolb
and
xchg
jb
sbb
mov
xor
lret
je
fwait
mov
push
push
jnp
repnz
lret
outsb
mov
shll
jmp
push
xchg
nop
xchg
lds
push
nop
cmp
dec
mov
xor
pop
pop
jo
and
mov
in
jae
aad
xchg
xchg
dec
adc
rclb
lcall
xor
mov
pop
in
push
out
loope
inc
mov
ret
jo
popa
dec
xor
sti
or
pop
or
sub
loope
adc
xor
rolb
xchg
xchg
in
je
in
pop
fbstp
ret
sti
fimull
inc
int
aaa
sbbb
lods
adc
into
popa
mov
lods
dec
lods
sub
jne
pop
ret
jle
jns
adc
pop
out
cmp
xchg
movb
dec
xor
mov
repnz
es
ja
mov
imul
jae
sub
subl
or
and
shll
xor
dec
cmpsb
lret
leave
mov
adc
lea
xchg
cwtl
fstl
fsubrs
mov
addr16
sbb
mov
sub
dec
inc
in
out
xor
mov
push
xchg
mov
adc
pop
shl
or
sbb
repz
into
adc
pop
jb
xchg
mov
push
push
cmp
mov
push
sub
pop
sbbl
or
dec
pop
popa
or
and
add
cld
xchg
loopne
adc
in
add
cmp
imul
movsb
mov
cs
mov
jns
rol
jns
add
inc
cmpsb
int3
or
cmpsb
sub
pop
sbb
fwait
cs
fwait
mov
fdivl
inc
lock
sub
push
shll
arpl
inc
outsb
pop
sbb
movsb
jmp
je
loop
lret
orb
mov
popa
into
mov
jnp
scas
scas
pop
push
cmp
bound
fisttpl
gs
decl
sbb
mov
fildll
rol
fmul
adcb
andb
mov
mov
xlat
inc
or
into
mov
xchg
repz
dec
in
loopne
in
data16
js
cli
cmc
add
xor
fwait
or
movd
jg
arpl
push
fisttps
ds
sbb
xchg
xchg
sbb
fwait
lods
xor
add
clc
sti
jecxz
test
aaa
sbb
xchg
add
scas
out
sbb
movsl
sub
ss
inc
in
xchg
fisttpl
jnp
roll
jae
popa
push
jnp
mov
cwtl
fsubr
sub
adc
fildll
icebp
cmp
jle
out
pop
pop
or
sbb
adc
ja
aas
jb
xchg
insl
cmp
movsb
mov
sbb
sub
movsb
loope
pop
std
mov
dec
subb
and
adc
test
je
int
ret
xchg
jg
movsl
enter
xor
in
rcl
jp
adc
mov
add
in
in
outsb
xchg
outsb
rep
and
inc
mov
dec
pop
mov
inc
cmpsb
sbb
add
imul
mov
pusha
push
push
lret
inc
scas
popf
pop
gs
lret
ljmp
cmp
jmp
inc
lea
aad
jbe
adc
or
das
inc
jmp
ret
in
fsubl
jnp
das
ljmp
out
and
dec
cmc
pop
cltd
xchg
ficomps
gs
test
test
les
mov
movsb
test
daa
cmp
push
scas
mov
ja
xlat
adc
mov
mov
mov
lods
and
xor
sub
loope
mov
adcb
in
popa
push
add
adc
out
mov
loop
xchg
cli
outsb
rcll
add
dec
sbb
xchg
in
lahf
mov
popf
iret
and
xchg
mov
mov
adc
push
dec
push
cs
or
xlat
outsl
insl
les
shlb
pop
and
ljmp
cmpsb
sub
xor
sub
xor
pop
cmp
sahf
sti
fcmovbe
pushf
push
outsl
pop
out
adc
add
fmull
aam
cmpsb
xchg
and
mov
pop
movsb
rol
dec
lds
sub
out
and
push
dec
xor
mov
and
inc
push
sti
insb
repnz
lcall
jmp
es
jo
mov
inc
lods
int3
cli
pop
xchg
nop
lret
mov
sbb
cmp
loop
mov
int
shr
daa
push
faddp
mov
lret
imul
pop
rolb
int
je
jb
mov
ljmp
xor
stc
scas
ja
das
int3
mov
inc
adc
loop
subl
inc
adc
mov
xor
xchg
xor
cltd
jo
cmp
js
push
stos
add
sub
stos
repnz
out
mov
fdivl
xchg
movsb
pop
jno
rcrb
lret
sbb
sbb
int
or
xchg
movsl
je
sbb
jne
or
movsl
inc
mov
cmpl
inc
xchg
jae
mov
fistpl
mov
iret
mov
jmp
add
test
enter
add
jle
mov
add
je
lock
xor
in
inc
jno
sbb
mov
addl
jl
jne
pop
data16
std
cmp
movlps
fldl
pushl
cmp
add
lea
pusha
sbb
push
jge
cmpsb
jmp
jg
push
cmp
mov
dec
ss
and
loope
mov
fdivl
jecxz
sub
iret
xor
neg
lods
cmp
sti
mov
cltd
mov
xor
mov
dec
ret
xchg
mov
add
xchg
scas
insl
cs
imul
fldcw
ds
incl
dec
in
sbb
movsl
rcr
dec
push
enter
cmp
pushf
add
cmp
inc
xchg
test
mov
add
js
mov
filds
movsl
mov
std
mov
cmp
test
pop
sub
xor
jmp
leave
aaa
insb
roll
or
jns
shl
sub
clc
xchg
mov
mov
jl
out
push
jno
shlb
ficomps
adc
push
scas
pop
test
mov
mov
sbb
push
xchg
mov
jle
into
into
pmaxub
jns
cmpsb
mov
or
imul
push
sub
push
iret
sbb
xor
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
hlt
jb
adc
mov
ret
push
lods
cltd
cmpb
sbb
inc
lock
out
mov
je
mov
call
xor
add
lods
pop
dec
es
jo
mov
xchg
mov
and
inc
jae
hlt
dec
loop
cmc
jne
and
fisubrs
add
stc
movsl
fs
imul
dec
in
stos
ja
sbb
pop
adc
inc
add
cs
push
mov
xchg
cld
pop
rclb
inc
or
fmul
cli
js
mov
cltd
mov
stos
test
fs
aas
xchg
loop
cld
clc
aaa
pop
ja
dec
push
iret
xchg
dec
push
fstpl
push
jne
fwait
enter
push
adc
mov
inc
mov
cmp
repnz
filds
cld
push
icebp
clc
test
popf
push
xor
in
outsb
inc
scas
insb
lds
add
xor
pop
out
mov
adc
xor
idiv
xchg
ja
xchg
test
fcoms
call
jecxz
sub
mov
loopne
pop
iret
mov
mov
mov
out
outsl
fchs
push
aad
shlb
orl
std
jle
sarb
sub
cmp
xchg
jl
orl
pop
ss
sbb
pop
pop
add
dec
or
mov
ret
std
es
fimull
cmpsb
add
inc
lret
pop
mov
adc
adc
pop
call
cmp
mov
aam
andb
je
jo
iret
roll
push
hlt
and
aam
push
jnp
sub
push
jno
popa
iret
xor
sbb
insb
adc
or
in
fstpt
lea
out
inc
test
adc
mov
cmp
lods
inc
add
fwait
push
pop
stc
shlb
push
lahf
lcall
mov
clc
mov
mov
xchg
pop
or
in
mov
sub
and
adc
sbb
sbb
pusha
jnp
mov
into
out
jg
mov
dec
data16
fdivrs
and
push
xchg
fidivl
sub
adc
movsb
jmp
ds
push
roll
sbb
xchg
lods
or
into
scas
fcmovnb
repz
xchg
xor
stos
sbb
mov
dec
xlat
push
outsl
add
sub
push
cli
jnp
call
mov
sbb
out
sub
dec
xor
movsb
aad
xchg
int3
pop
push
xor
dec
jp
jmp
xor
fs
jnp
fisubrl
leave
leave
inc
lods
mov
movsl
lods
push
sbb
mov
cmpsl
in
cmp
es
jbe
movl
jae
cmpsb
push
push
adc
loop
pop
std
or
pop
push
inc
fldcw
aam
xchg
xchg
jb
outsb
push
sub
mov
xor
inc
jno
push
aad
aad
inc
shlb
inc
insb
out
in
lock
lea
mov
mov
or
push
ljmp
loop
push
out
icebp
jg
inc
xchg
lods
xor
lcall
insl
adc
lea
push
sub
pusha
inc
sbb
push
push
pop
cmc
or
dec
adc
lret
push
mov
sahf
cmc
jmp
fildl
or
cmp
imul
aaa
cmp
shrb
pop
and
loopne
shll
stos
xor
mov
xchg
aad
insb
xchg
outsl
jmp
or
jge
inc
es
sar
imul
mov
sbb
mov
mov
scas
insb
test
sub
enter
orl
jo
popa
push
push
fs
shll
test
add
hlt
xchg
dec
add
rcrl
repnz
inc
cmp
pop
mov
cmp
cmpsl
cltd
and
cs
imul
adc
outsb
or
inc
dec
fcomip
pop
testl
lret
jg
into
cmpsl
cmp
jb
jle
cmp
lret
lcall
push
jmp
mov
pop
mov
bound
xchg
das
push
cmp
cmp
stc
inc
sub
cld
pop
sub
mov
sti
jl
aas
jecxz
mov
add
pop
cmp
das
or
xor
and
mov
data16
cmp
dec
outsl
mov
jo
cmp
lds
aam
mov
notl
adc
xor
mov
scas
push
cmp
or
loopne
xorl
pop
jg
xchg
gs
sbb
push
movsb
daa
mov
push
sbb
add
cmp
gs
mov
push
mov
stos
pushf
add
inc
adc
sbbb
mov
mov
imul
shrl
mov
push
dec
es
lea
mov
adc
mov
xor
jp
das
ja
ret
into
jge
mov
das
jl
outsl
imulb
jno
add
xlat
in
mov
lret
aad
xor
sbb
push
and
adc
call
mov
xchg
ljmp
fcompl
inc
clc
fcoms
push
xor
mov
cmp
test
inc
jnp
inc
push
push
xchg
pop
cmpsb
and
dec
aaa
mov
jbe
icebp
jmp
mov
fwait
push
scas
push
test
pop
repz
or
fimuls
ss
cli
aam
out
mov
dec
xor
insb
sbb
inc
in
sbb
sbb
jle
fldenv
iret
xchg
jge
push
fs
cwtl
push
sbb
in
lea
sub
shlb
scas
xchg
dec
mov
and
pushl
push
fsubl
sub
pop
mulb
cmp
leave
xor
adcl
lret
pop
loope
lret
dec
pxor
jecxz
jle
jnp
dec
cmc
pop
stc
inc
daa
or
into
in
jmp
sub
mov
imul
push
push
in
fwait
leave
js
mov
lea
std
cs
insb
stos
mov
push
mov
loop
cmp
fnstenv
sub
ja
mov
in
lds
jle
lods
push
fwait
cmpsb
xadd
cmpl
repnz
cwtd
js
inc
mov
cmp
ffreep
pusha
lret
dec
aas
pop
and
inc
cmp
mov
or
fldenv
fcmovnu
cmc
fwait
cld
inc
and
insb
fisttpll
mov
stc
sbb
add
in
add
add
xchg
xchg
test
and
xchg
and
pop
cld
stos
gs
inc
rorl
xchg
push
mov
push
aam
fisubrs
sbb
mov
cmp
push
inc
and
outsl
fisttpll
jo
push
mov
jb
testl
sbb
push
sub
sbb
cmp
xchg
cmp
adc
jecxz
and
rclb
test
inc
arpl
cwtl
xchg
ljmp
gs
movsl
push
mov
popa
jno
inc
pop
cltd
add
fdiv
push
imul
jb
and
cmp
scas
xor
lahf
sub
sar
mov
push
fisubrs
sbb
xchg
imul
add
popf
push
jae
jbe
test
adc
push
mov
jmp
xchg
pop
imul
jmp
mov
pop
scas
int
mov
clc
idivl
push
push
jp
sbb
push
sbb
pop
mov
push
push
cmp
push
enter
fcomip
and
sbb
fdivrs
fistpl
fstpl
ljmp
pushw
aad
push
xor
negb
xor
insb
mov
ret
pusha
movsb
aaa
push
or
mov
fists
dec
adc
iret
and
jns
mov
cld
jns
jns
out
jmp
loop
lock
lcall
mov
cmp
lods
clc
cmpsl
lret
ret
or
or
inc
mov
std
or
xor
adc
jbe
dec
dec
jp
stos
push
rcll
jae
cmp
adc
jne
jbe
cmpsl
push
xchg
dec
roll
lahf
fidivs
and
pop
cltd
or
sti
dec
cltd
mov
inc
adc
imul
or
fisubrl
ret
cld
mov
loop
mov
mov
frstor
fs
in
pop
sbb
ds
or
pop
fldcw
pop
jnp
jbe
sub
add
outsb
dec
jge
jmp
and
pop
shlb
in
xor
sub
xchg
call
fisttpll
pop
adc
lahf
adc
aad
adc
and
cmp
lcall
adc
lods
mov
push
cmp
addr16
fst
cmpsl
lods
jl
aam
push
popa
jge
ret
jp
pop
jmp
pushf
adc
ss
add
ss
sbb
inc
add
jnp
lds
fisubs
dec
add
scas
and
adc
addr16
mov
shll
push
cmp
aaa
test
aaa
mov
scas
push
ret
sbb
dec
stc
push
adc
rclb
in
ss
ja
movsl
sbb
call
imul
int3
xchg
pushf
bound
das
mov
dec
fstps
fisubrs
pop
out
loope
push
mov
inc
sbb
and
add
add
jecxz
call
out
cmp
xchg
or
add
div
js
jmp
pop
jns
lock
lods
xchg
cltd
xor
mov
stos
adc
lds
and
aad
data16
cmpsb
lret
cli
repnz
push
test
inc
cli
ljmp
adc
jne
mov
jecxz
pop
dec
adc
pusha
pop
rcrb
shll
aaa
dec
icebp
leave
shl
iret
js
mov
jmp
mov
stos
movsl
dec
addr16
sub
outsb
seta
int
and
sarl
arpl
mov
mov
stos
push
or
xchg
xchg
xchg
cli
bound
cwtl
std
aad
shlb
daa
sahf
xchg
sbbl
dec
add
das
subl
lcall
add
sbb
jae
dec
and
dec
outsl
jmp
mov
dec
sub
daa
or
adc
ja
divb
sub
rcll
jnp
daa
sub
cli
stos
mov
mov
stc
cltd
cmpb
sbb
rcrb
sub
cli
jns
mov
je
and
cmp
movsb
inc
push
ljmp
pusha
ret
leave
subl
adc
ffreep
and
subl
xchg
inc
scas
divl
imul
adc
dec
mov
cmpsl
leave
pop
int3
jnp
cmpsb
push
inc
js
pop
mov
mov
sbb
call
xchg
out
lods
inc
mov
rcll
cs
in
mov
sub
data16
enter
adc
jle
stos
inc
jge
nop
xlat
adc
test
jnp
xchg
cmc
call
iret
adc
pop
sub
push
hlt
out
inc
fstpl
adc
sub
and
shr
dec
mov
mov
lahf
mov
ret
imul
inc
movsb
mov
pop
shlb
inc
sub
dec
loopne
outsb
int
jne
cli
ljmp
cmp
xchg
repnz
data16
push
mov
gs
aaa
xorl
push
dec
std
insb
xchg
jno
icebp
inc
addl
enter
jmp
mov
sub
pop
sbb
cli
jns
shlb
pop
mov
dec
add
fwait
push
rorb
sub
xchg
mov
xor
shlb
loop
movsl
mov
pop
inc
mov
dec
push
pop
jnp
push
seta
loope
push
pop
cmc
adc
pop
test
cld
push
adc
xor
cmc
cli
sbb
inc
jp
das
imul
cmp
mov
insl
cltd
sbb
loope
das
aam
jo
lods
sti
jle
stos
call
mov
arpl
loopne
fsubrs
fisubs
push
mov
adc
cmc
push
or
leave
xchg
test
dec
ljmp
test
sub
loope
or
xchg
lret
cli
mov
sbb
pop
add
pop
rol
add
imul
cmp
dec
fmuls
xor
shl
push
jle
test
push
ret
add
fistl
adc
add
push
and
clc
arpl
push
xor
rclb
leave
xchg
sbb
pop
pop
mov
cmp
cmp
sbb
cmp
sbb
mov
adc
dec
sarl
inc
ret
es
pop
dec
lods
xchg
js
das
and
xchg
fwait
xchg
xchg
outsl
sbb
adc
jne
add
sbb
mov
mov
push
rolb
inc
test
mov
mov
adc
lcall
repz
add
lock
out
inc
jge
pusha
loop
jmp
aad
pop
sbb
add
fbstp
aaa
mov
aas
dec
loopne
out
scas
shrl
sbb
divb
pop
cmp
es
lret
pop
or
bound
loopew
dec
data16
inc
and
cld
xchg
mov
push
jnp
out
dec
out
in
addr16
dec
mov
jno
ljmp
sbb
push
jno
jno
aas
imul
xor
clc
call
rcr
mov
pop
pop
aam
push
in
subb
sti
imul
mov
xchg
xor
mov
pushl
sub
push
xor
cmp
xorl
or
cmp
push
lds
jp
dec
loop
iret
jno
xchg
push
lcall
rcll
es
lcall
cmpsb
imul
sahf
jo
mov
mov
mov
repz
insb
in
dec
xor
mov
or
xchg
aaa
add
push
aam
adc
mov
mov
push
jno
fnsave
idivl
rorb
sub
mov
mov
movsb
dec
xchg
mov
ret
sub
adc
jns
and
or
ret
mov
pusha
push
fs
and
mov
mov
sub
fwait
add
test
xor
mov
std
sbb
aam
push
lods
xchg
dec
sbb
inc
mov
cmp
stos
push
sbb
push
insb
pop
fidivl
push
aaa
aaa
mov
inc
out
cmc
push
rorb
or
sub
fisubl
adc
lods
sbb
jb
out
out
mov
inc
dec
cmp
repnz
dec
data16
adc
fisubrs
pop
dec
mov
cmp
or
fbld
ja
jnp
icebp
stc
leave
and
push
mov
push
addb
rolb
jle
sahf
cltd
and
sub
push
pop
mov
xor
xorl
jae
cli
out
inc
jno
xchg
dec
rorl
jmp
jo
mov
mov
fiaddl
mov
cmc
into
push
out
mov
pop
dec
pop
jne
xor
stos
inc
das
jmp
clc
or
cmc
insb
dec
jb
sbb
sarb
mov
hlt
das
xor
cmpsb
cli
push
fwait
les
repnz
or
das
or
arpl
jmp
std
pop
rclb
stc
call
jg
sub
push
mov
jb
std
push
xor
ret
mov
icebp
inc
push
or
push
stos
in
pop
inc
adc
clc
xchg
pop
sbb
pop
xchg
inc
data16
xchg
pop
mov
out
dec
das
enter
nop
adc
xor
roll
sub
or
xor
fildll
into
out
loope
mov
leave
sbb
loopne
or
xchg
adc
pusha
sbb
das
inc
cmc
xchg
fs
fnsave
mov
ljmp
js
sahf
imul
cmp
inc
push
rclb
mov
mov
xlat
inc
pusha
and
mov
lret
shll
mov
pop
test
inc
mov
push
push
gs
mov
and
lcall
in
mov
insl
mov
push
and
mov
adc
cli
xchg
test
movsl
jne
or
pop
mov
fistl
lret
cmp
mov
push
out
adc
jecxz
adc
daa
fwait
mov
call
aaa
cmpsb
jp
sar
popa
movsl
iret
scas
xchg
mov
push
pop
mov
sub
stc
mov
mov
mov
fldl
jg
imul
test
mulb
icebp
cwtl
adc
jno
cmp
lods
inc
outsb
test
inc
mov
div
cmp
rcrl
xchg
jbe
das
adc
dec
lods
and
jae
daa
out
push
int3
dec
add
popa
mov
push
out
out
movsb
cmpsl
cltd
out
out
add
jb
pop
add
add
mov
insl
xchg
xchg
in
add
fsubr
popf
pusha
mov
lods
out
sub
inc
xor
cmpsl
cwtl
dec
ret
mov
scas
push
test
cmp
dec
push
fsubrl
or
test
rorb
mov
jecxz
bound
mov
inc
frstor
clc
addr16
cmpsl
or
mov
add
jecxz
inc
aad
xor
ljmp
or
mov
ret
sbb
fstps
call
les
je
push
std
mov
dec
fwait
xlat
mov
fs
jns,pt
cmpl
rcrl
in
mov
or
jge
ficompl
jmp
lock
loop
cmp
sbb
cmp
pop
xor
jge
cltd
mov
mov
ja
adc
adc
adc
xor
and
xchg
xor
std
aaa
push
dec
je
ja
mov
shlb
jb
jne
iret
push
js
test
mov
test
jbe
movsl
in
pop
sahf
add
pop
mov
mov
shrb
lret
rolb
cmp
sahf
adc
mov
icebp
mov
icebp
jno
jp
xchg
sub
lret
mov
jge
fs
or
ret
insb
adc
repnz
push
lods
xorl
pusha
and
fistps
js
sbb
inc
inc
xchg
bound
lock
jmp
jae
xor
imul
jae
sub
inc
gs
cmp
movsb
add
es
imul
ljmp
sub
sarb
mov
mov
insl
cs
cltd
imul
mov
jmp
rcrb
movsb
sub
sub
sbb
paddq
xchg
popa
addl
xchg
sub
jbe
aas
in
jnp
shlb
pop
sub
sub
and
icebp
cmpsl
subb
dec
add
cmpsl
into
or
pop
repnz
add
insl
xchg
cmp
sub
jno
lret
int
inc
enter
jle
dec
fcomps
mov
sub
je
push
pop
stos
add
scas
jp
cmp
fists
mov
mov
push
stos
mov
in
popf
lods
mov
sbb
test
fisubs
xor
cld
sahf
movl
lds
jle
lods
jae
inc
lods
adc
sbb
adc
mov
dec
jo
lret
push
leave
mov
mov
arpl
lods
mov
mov
aad
cmp
jbe
xchg
pop
inc
mov
loopne
comiss
popf
sub
aad
std
mov
xchg
cwtl
imul
inc
aaa
popf
pop
sar
and
cli
inc
pop
outsb
scas
mov
cmpsl
test
adc
dec
rolb
adc
adc
dec
loope
cmp
sub
pop
mov
sti
push
and
fsubrl
and
xchg
mov
cmp
push
aam
jmp
and
bound
in
sub
or
add
push
xor
das
gs
mov
xchg
inc
xorb
or
movsl
push
add
nop
int3
cmp
les
pop
ret
shr
jl
jp
xchg
jne
jb
jne
fsqrt
nop
test
jo
xchg
pop
mov
xchg
pop
pop
xor
mov
cli
mov
imul
bound
outsl
call
pop
fadds
adc
sub
mov
enter
in
mov
andl
xor
jns
out
movb
and
js
call
adcl
fwait
int3
add
fmulp
or
sub
test
mov
jnp
inc
pop
imul
lds
lret
pop
dec
jne
inc
sub
bound
xor
insb
jl
daa
imul
cmp
orps
in
scas
lds
jmp
jbe
xor
or
fadds
adc
and
or
mov
or
scas
or
and
scas
ss
call
add
add
loopne
inc
loopne
add
add
punpcklbw
add
and
mov
jmp
push
and
test
imul
push
jp
sbb
cld
test
aas
sbb
mov
jno
sub
mov
jp
pop
adc
clc
fld
adcb
mov
test
imul
jo
dec
ss
insl
xchg
faddl
adc
arpl
mov
cld
inc
aaa
mov
icebp
inc
scas
iret
or
sub
dec
in
cltd
rcll
adc
test
xchg
lcall
jns
popf
mov
mov
int
pop
jnp
stos
int3
push
lods
and
inc
jno
add
dec
mov
outsb
xor
inc
insl
jmp
imul
das
add
in
add
sahf
inc
pop
test
dec
shlb
xor
rcll
dec
and
sbb
inc
rorb
add
dec
push
inc
pushf
cmp
add
gs
popf
xor
and
adc
adcb
dec
ret
xchg
es
loopne
shll
fwait
hlt
sub
bound
sbb
xor
dec
icebp
jnp
lahf
in
les
or
dec
orb
mov
and
lock
dec
jns
sbb
enter
mov
int3
jno
or
xchg
jns
movsb
loop
push
pop
add
shl
inc
nop
out
xorb
xchg
bnd
scas
sbb
mov
andl
sahf
lret
out
or
inc
jmp
aas
mov
addr16
in
or
imul
mov
add
dec
fldcw
lock
fwait
mov
insl
bound
pop
lret
je
mov
cmp
mov
int
ss
pusha
add
pop
pop
bound
movsl
pop
jg
outsb
push
iret
into
mov
sub
adc
js
jmp
mov
mov
mov
jae
cwtl
fisubrl
gs
inc
dec
xchg
add
lea
and
lcall
xchg
xchg
push
pop
inc
loop
sub
push
fidivs
hlt
and
js
pop
out
sub
jge
icebp
icebp
stos
and
inc
adc
fsubrs
and
push
push
call
sbbl
xor
das
dec
fsubrl
inc
int
movsl
movsl
xchg
mov
xchg
mov
mov
ror
flds
push
push
sahf
mov
inc
addb
insb
dec
cld
push
ja
or
stc
jecxz
in
mov
mov
es
in
in
jp
mov
mov
dec
repnz
xchg
or
mov
sub
test
into
pop
outsb
sub
pop
push
out
cmp
fwait
pop
inc
xchg
mov
mov
and
mov
mov
rclb
mov
dec
and
cwtl
aas
jbe
dec
in
out
fnsave
mov
test
subb
adc
xchg
jp
andb
push
dec
inc
xchg
push
and
mov
sub
push
dec
xchg
xchg
push
xor
mov
loopne
cmp
cld
add
fs
mov
mov
scas
pop
js
adc
mov
clc
xchg
jae
in
lds
loopw
xor
mov
test
dec
or
movsl
xor
cltd
xchg
and
mov
mov
inc
inc
in
cltd
dec
mov
mov
sub
fimuls
movsl
lods
mov
shlb
std
or
scas
mov
inc
shll
add
dec
hlt
nop
je
stos
xor
in
imul
shrb
adc
cmc
cwtl
ficomps
ficoms
push
jecxz
adc
fwait
push
fcomi
jns
mov
in
lret
test
or
dec
sub
vpsubsw
mov
xor
sbb
stos
mov
ret
icebp
daa
jae
incl
adc
rcrb
imul
add
mov
adc
dec
xchg
add
lahf
cmp
mov
mov
jp
cmovp
insb
rcll
out
jmp
addr16
mov
iret
xor
xor
cmpsl
das
pop
mov
out
out
push
xchg
stos
xor
mov
lret
or
mov
mov
sahf
movsb
jle
adc
add
or
jns
js
sub
adc
ljmp
inc
arpl
mov
mov
movsl
mov
stos
cmc
xchg
sub
test
pop
push
cwtl
sahf
mov
rorl
jge
iret
mov
jge
cmpsb
jecxz
je
inc
movsl
add
das
push
add
ss
or
clc
sbb
fildl
movsb
jne
fcomps
scas
clc
clc
gs
push
rorb
adc
and
mov
outsl
test
and
mov
hlt
lds
addr16
push
int3
pop
push
inc
fcompl
and
mov
popf
dec
mov
cmpsl
stos
pop
cmp
aad
mov
dec
cmp
push
adc
dec
cmp
sub
icebp
in
inc
xchg
enter
loopne
jns
sbb
mov
rclb
rcll
jbe
aas
or
out
stos
mov
inc
sub
push
out
in
rcrb
add
pop
imul
jno
push
mov
rcl
xchg
test
std
lret
pop
lods
push
pusha
lret
add
mov
out
fbstp
adc
pop
aas
push
cmpsl
cmp
imul
fidivl
hlt
sub
stos
stc
leave
inc
je
in
int
mov
push
mov
mov
add
rol
push
hlt
test
jl
in
andl
aam
or
out
sar
scas
in
shll
xchg
fldenv
and
add
dec
jp
jno
cli
add
ja
inc
and
lret
push
dec
into
xchg
loopne
loope
sbb
mov
mov
jl
push
pop
mov
xchg
lods
mov
mov
sub
mov
je
loopne
cmc
xchg
scas
std
sub
in
fnsave
pop
push
pop
jp
sarl
and
push
add
lret
dec
sbb
sub
mov
and
enter
lret
and
sub
cmp
lds
cmp
ljmp
loope
xor
daa
adc
out
test
xchg
jnp
push
xor
push
dec
push
aaa
adc
ljmp
mov
inc
inc
mov
repz
das
enter
cmpsb
cld
mov
adc
movsl
jne
inc
out
push
cmpsb
dec
ljmp
aas
add
xorl
cltd
movsl
xor
lcall
out
cmc
jae
sahf
loop
xor
mov
cmc
lods
pop
lds
fiadds
dec
ljmp
sub
dec
cmp
dec
adc
loopw
hlt
in
mov
mov
xor
xor
rclb
popa
adc
xchg
jg
fimuls
xor
cmp
add
dec
mov
or
rcrl
lahf
loope
adc
hlt
xor
shrl
jb,pt
adc
daa
test
lret
fistpll
hlt
xchg
js
loopne
das
ret
sti
adc
mov
adc
push
loopne
scas
leave
jge
lods
and
in
and
fistpll
fistpll
shlb
cmp
repz
std
pop
cwtl
and
mov
sti
hlt
les
out
pushf
dec
dec
cwtl
insl
add
jns
mov
in
add
push
gs
test
or
loopne
fistps
imul
sbb
hlt
andl
jle
mov
roll
jnp
sub
inc
fdivrs
jmp
jne
rep
ss
gs
jno
ficomps
inc
mov
pop
and
xchg
xor
pop
mov
loop
aad
mov
adc
sbb
xor
std
mov
jg
and
popa
adc
scas
jg
push
lea
test
and
push
jmp
push
testb
pop
pushf
xor
or
mov
push
sub
mov
ja
mov
lret
mov
push
xor
incb
lods
add
or
in
cmpsl
mov
pushl
into
pop
jl
or
sahf
jl
inc
jns
iret
add
pop
or
sbb
cmp
adcl
cmp
or
leave
mov
sarl
and
rcr
shlb
mov
jo
xor
xlat
scas
lahf
rclb
fstps
pcmpeqd
push
pop
xchg
or
xor
int3
fwait
loop
movsl
int3
or
xchg
inc
jmp
out
sub
cmp
dec
adc
int3
xor
xor
movsl
je
push
xchg
jg
int3
jl
cmp
nop
xchg
cmc
dec
sub
ret
dec
aaa
mov
repz
out
cmp
mov
sbb
mov
aam
mov
roll
sbb
outsb
lret
jb
addr16
mov
sub
cmp
or
rolb
popf
roll
fwait
roll
sti
inc
lea
mov
daa
sub
fildll
es
xchg
lret
outsl
test
fadds
mov
lock
xchg
add
pop
popf
adc
jmp
cmp
xchg
mov
dec
dec
xchg
out
jnp
mov
popa
lods
adc
vandps
aad
push
and
inc
xchg
adc
insb
mov
mov
pop
mov
mov
sti
sbb
repnz
in
mov
adc
imul
dec
dec
pop
mov
cmp
pop
cltd
out
jnp
adcb
sbb
bswap
aas
cmc
pop
inc
icebp
int
sub
mov
mov
or
ja
into
xchg
add
pop
mov
sub
test
nop
lahf
mov
mov
mov
sbb
test
fnstcw
sub
sbb
adc
xchg
lds
enter
adc
and
dec
mov
rcr
repz
xchg
and
sbb
push
pop
call
mov
mov
loopne
loope
sub
dec
sahf
mov
int3
inc
scas
xlat
and
imul
into
out
bound
ror
mov
pop
aaa
pusha
mov
fldt
add
inc
in
mov
jns
outsb
push
arpl
xchg
sub
out
jl
faddl
sbb
or
movsl
out
adc
shlb
jmp
or
xor
xor
and
sbb
jp
xor
jp
cmovge
inc
push
sbb
nop
loopne
cmpsb
ret
std
push
ror
sub
xchg
jb
xor
sub
ljmp
cmp
mov
lahf
xor
xchg
addr16
or
pop
cmc
or
loopne
imul
xchg
fscale
sbb
and
mov
mov
adc
and
adc
sbb
test
sbb
mov
lds
nop
lret
lahf
push
ljmp
sbb
push
lock
out
add
popa
pop
push
jae
mov
xor
aad
pusha
das
sub
in
or
sahf
arpl
sub
inc
dec
fs
addb
mov
jl
fidivrs
jb
xor
cmpl
add
lret
mov
sbb
sahf
aam
arpl
and
sahf
jb
ja
nop
int
mov
scas
mov
insb
cmpsb
in
loope
mov
jge
ljmp
xchg
add
sub
xchg
inc
test
pop
sbb
adc
jo
ficompl
repz
inc
lea
and
ljmp
push
xchg
test
cmp
test
lret
cmc
call
jns
jbe
std
sub
movsl
aam
mov
jp
add
jns
sbb
in
jbe
jmp
je
stos
in
in
arpl
lret
cmp
cmp
push
dec
aaa
outsl
das
mov
outsb
aas
jmp
mov
pop
pop
xorb
in
aaa
lock
or
out
push
xchg
in
leave
data16
sub
aaa
addb
loope
jae
xor
adc
and
iret
mov
neg
clc
jne
cmp
sub
sbb
cmpb
or
dec
cmpsb
negb
jmp
popf
mov
sbb
jns
decb
pusha
loope
pop
jl
jmp
or
hlt
cmp
stc
and
jmp
divl
mov
dec
int
bound
pop
scas
mov
jnp
fisubrs
shrl
arpl
dec
mov
mov
cmp
in
mov
sub
xchg
push
push
sub
ja
fcoms
sub
push
push
mov
or
sarl
sahf
popf
out
orb
xchg
sub
ss
filds
xchg
add
pop
fldl
popf
dec
subb
dec
push
lea
push
cmpsb
lret
push
push
les
outsb
sbb
sub
pop
enter
sub
sub
hlt
push
push
movsl
jl
data16
in
pop
add
ljmp
cmpsb
insb
jno
dec
mov
push
mov
pop
sub
mov
iret
jle
pop
inc
test
sub
inc
mov
mov
inc
icebp
jmp
pop
int3
cwtl
mov
or
push
pmulhw
xchg
sbb
jno
inc
in
lock
mov
jp
mov
ss
aas
fidivrl
cwtl
clc
mov
jmp
subl
or
jmp
and
pushf
ds
jns
sub
adcl
lods
loope
ret
xchg
xorl
movsl
scas
int3
mov
int
lret
xor
jae
adc
hlt
lret
lcall
addr16
pushf
mov
test
and
decb
nop
and
xlat
insb
cmpsl
and
mov
cmp
std
es
sbb
call
ret
mov
andl
jno
dec
dec
out
in
mov
test
outsb
andb
repz
add
jo
aam
sahf
cld
jo
cmpsb
icebp
dec
bound
xor
aam
ds
mov
add
js
add
sahf
pop
test
jne
push
mov
cmp
mov
jge
lcall
jne
push
or
xor
mov
pop
nop
or
je
jge
icebp
sub
movsl
cld
cmpsl
jmp
push
push
mov
xor
inc
xchg
leave
lcall
jb
pop
fxtract
stc
lds
mov
pop
push
mov
cmpsl
gs
lock
lret
popa
daa
sbb
in
pop
repz
ret
addb
cs
xorl
int
sbbl
std
arpl
stos
inc
stos
mov
test
mov
lock
or
and
into
jnp
lock
pushf
outsb
inc
les
mov
stos
jp
xor
adc
inc
test
pop
jmp
xorl
xchg
sbb
mov
imul
sub
ret
lods
fstpl
or
push
pop
mov
pop
shll
mov
lret
mov
xchg
lahf
lods
xchg
mov
push
or
mov
decb
sub
mov
imul
and
repz
sub
or
adcl
mov
cmpsl
call
jmp
add
mov
xchg
and
fildll
nop
sub
test
and
test
mov
add
push
dec
cmc
jo
leave
adc
ss
hlt
addr16
cmc
jg
mov
cmp
mov
sbb
sbbl
cmpsl
cmp
mov
inc
xor
mov
lods
popf
add
adc
lock
push
popa
and
aas
cli
push
aad
xchg
insb
xor
mov
xlat
push
or
inc
inc
lds
xchg
cmp
in
lcall
mov
xor
xchg
jmp
adc
sbb
mull
lahf
in
movsl
sub
ja
xor
and
push
mov
jae
sbb
mov
test
push
and
mov
xor
push
mov
mov
sbbb
xorb
xchg
xor
dec
mov
inc
sub
and
stos
leave
mov
jle
loopne
jle
lds
xchg
fiaddl
hlt
adc
pop
roll
or
dec
inc
in
and
jno
adc
jl
and
sbb
or
jecxz
cmc
pop
xchg
lock
pusha
sub
cmp
into
mov
xchg
adc
and
das
out
xor
jecxz
jno
xorl
fstpl
imul
sbb
cltd
sti
sbb
xchg
imul
mov
or
dec
lods
jnp
jae
test
push
mov
sbb
fimull
clc
insb
in
push
and
fldcw
xchg
push
bnd
pop
repz
sub
sub
dec
enter
mov
xor
pop
imul
pop
push
and
add
and
scas
addr16
sub
sbb
pop
js
outsb
pop
test
int
adc
cmp
xor
xchg
pop
xchg
sbb
and
push
stos
imul
dec
stc
add
mov
dec
mov
mov
fcmovne
into
xchg
or
jbe
jne
stos
mov
adc
jmp
movsb
push
xor
push
es
je
mov
xor
and
jp
lds
in
adc
mov
mov
push
daa
or
shll
outsb
outsb
insl
jle
jmp
sub
loop
mov
and
push
cmpsl
aas
cmc
shlb
xchg
in
clc
negb
add
test
mov
mov
into
clc
and
ljmp
adc
sbb
lret
mov
mov
inc
mov
mov
adc
push
lret
mov
cmpsb
pop
lock
sub
pop
sbb
sbb
loopne
xchg
jp
pop
mov
mov
sahf
push
lahf
icebp
cmpsb
in
sbb
lods
xchg
xor
jne
sbb
inc
jl
mov
push
imul
mov
pop
loope
scas
test
nop
or
sub
test
daa
inc
pop
scas
test
cmpsb
and
incb
xchg
adc
fsub
push
cmc
or
out
jecxz
push
push
mov
loopne
test
clc
cmp
jge
and
mov
push
mov
movsl
inc
popa
lahf
roll
fistpl
mov
les
lahf
clc
lds
lret
cmpsl
inc
push
pop
cs
in
outsb
jo
hlt
inc
notb
or
pushf
in
ret
mov
outsl
inc
movsl
movsb
sbbb
xchg
inc
xchg
jnp
addl
int
fsubs
sbb
push
test
push
cmp
pop
into
fmull
lea
dec
xor
int3
fistpll
cmpsl
fistpl
push
movb
inc
shlb
ss
repnz
or
mov
inc
movsl
outsl
repnz
xor
repz
or
xchg
cmp
pop
scas
xchg
fwait
pop
pop
sub
xchg
jb
fcmovnb
fcomi
xchg
ljmp
inc
les
pop
cmp
cld
andb
outsb
clc
or
or
sarl
ljmp
and
out
stos
lds
adc
scas
bound
stos
fisubl
pusha
lods
adc
bound
push
bnd
dec
pop
xor
pushf
push
in
int3
inc
es
mov
andl
fsts
and
push
out
mov
mov
imul
mov
sbb
ja
mov
ds
sub
stos
adc
pop
fwait
out
push
in
xchg
push
lock
cmp
outsl
inc
push
pop
arpl
cmpsb
fistpl
dec
fldt
and
mov
mov
push
test
cmpsl
adc
xlat
fs
int
pop
lret
js
inc
fstps
andb
out
out
rcll
stos
or
insb
nop
xchg
xor
xor
dec
xchg
add
fnstenv
and
ljmp
jle
mov
add
cmc
xor
int
push
or
dec
cmp
cmp
mov
mov
mov
cmc
mov
cmpsb
push
jle
add
test
movsl
mulb
iret
call
push
idivb
les
fnsave
and
roll
xchg
ja
adc
push
cmp
arpl
mov
insb
dec
cmp
das
jbe
cmp
dec
mov
mov
fdivl
mov
repnz
mov
js
dec
and
jbe
mov
xchg
jge
push
cmp
xchg
popa
lret
test
js,pn
jne
in
jo
arpl
aam
mov
test
rcrb
out
push
loop
bound
push
stc
jmp
sub
leave
cld
cmc
icebp
mov
je
addl
rorb
cmp
adc
add
and
out
fidivs
lret
and
aad
out
call
mov
xchg
es
xor
dec
xor
imul
inc
ret
sbb
fildll
sbb
jo
jne
out
les
fcom
pop
ss
lcall
mov
and
js
xchg
fisubrl
hlt
lods
add
sub
cmpsb
ja
cmpb
jmp
in
jp
push
lahf
xchg
sbb
mov
movsl
mov
arpl
cmc
jbe
or
scas
add
repnz
movsl
push
idivl
jo
adc
lahf
push
mov
cs
bound
fnstenv
fdivrl
dec
push
jecxz
testb
nop
adc
lds
sbb
sbb
andl
xchg
ljmp
lods
and
rclb
cmpsb
scas
loope
scas
in
fsubrs
xchg
loope
mov
xchg
xor
lcall
push
lretw
inc
cs
cld
mov
cmp
inc
call
dec
movsl
test
xor
popf
inc
out
mov
xchg
and
sbb
arpl
mov
rcrl
sbb
mov
adc
fdivrs
sbb
test
out
nop
ja
cld
and
dec
hlt
pop
sub
push
jge
and
clc
mov
dec
mov
dec
cmpsb
or
add
or
fidivl
int3
adc
mov
mov
sub
clc
push
out
mov
pop
out
xchg
jbe
rcll
cli
mov
mov
sbb
push
inc
testl
cmpl
idivl
jmp
pop
inc
pop
ret
or
roll
rorb
int3
sub
ficoml
dec
cld
jmp
cmp
enter
inc
insb
jne
xlat
cmp
inc
mov
xchg
movsb
lea
inc
sub
insb
adc
sbb
loope
xlat
push
icebp
cwtl
hlt
bound
cmp
xor
dec
xor
roll
or
rol
insl
mov
lret
pusha
xchg
cmp
xchg
push
popf
jno
movsl
stos
sub
mov
mov
lret
xlat
in
jns
xchg
jle
addb
mov
push
adc
sbb
inc
dec
scas
pop
ljmp
jne
lock
repz
sub
mov
aaa
sti
push
or
dec
jge
int3
mov
popa
cmpsl
add
aam
mov
jnp
dec
xchg
cmp
dec
inc
mov
in
in
subl
imul
outsl
aas
aam
add
rolb
js
lods
imul
movsb
jae
mov
daa
mov
sbb
mov
push
mov
adcl
cwtl
bound
sub
pusha
arpl
jb
inc
mov
inc
lock
in
mov
jle
mov
sub
das
stc
xchg
push
aaa
clc
pop
les
pop
inc
cmc
cmc
ss
push
out
mov
mov
xor
repnz
or
out
jmp
mov
cmp
fidivrs
sub
mov
adc
fisubs
cmpsl
xor
decb
imul
pop
movsl
imul
adc
imul
add
mov
ds
leave
call
jne
cmp
aad
or
in
xchg
push
inc
sbb
push
pusha
cmp
iret
loopne
std
mov
fs
pop
sar
lcall
gs
gs
push
sub
out
pop
xchg
out
and
popa
icebp
out
repz
bound
ds
push
push
jmp
test
push
push
icebp
ja
push
mov
cmpsl
add
loop
xor
andb
mov
outsb
mov
aas
lock
mov
js
setno
cwtl
cmp
test
js
dec
xchg
imul
xor
xchg
es
inc
stos
sub
jg
xchg
sub
xchg
in
dec
lds
dec
in
divb
jl
pop
lret
es
xor
aaa
aas
mov
mov
pop
sub
mov
mov
xor
lret
popf
sub
pop
xchg
movsb
sub
movsb
fidivrl
into
aas
mov
das
inc
inc
cli
fildll
in
jmp
test
cmpsl
mov
push
pop
mov
aad
push
mov
ja
xchg
lock
cli
xor
cmp
cmp
push
jne
xchg
adc
xor
aas
and
movsb
adc
xor
mov
inc
mov
mov
and
xor
lods
mov
pop
dec
mov
mov
mov
dec
mov
mov
rcll
mov
fstpl
fcom
arpl
enter
cmpsb
lcall
push
xor
xchg
ja
test
cmp
test
adc
xor
aad
or
pop
clc
in
sub
ret
inc
mov
and
popa
jg
punpckhdq
in
add
cmpsb
push
pop
js
mov
out
lods
repz
mov
int3
jle
jae
ss
mov
shlb
iret
pop
pop
jg
sbb
and
call
fisttpl
out
leave
pop
lock
add
iret
mov
aaa
shlb
in
int3
dec
jnp
popf
sub
loope
mov
mov
jb
shll
dec
imul
sub
sub
stc
lahf
cs
inc
push
dec
fwait
aas
push
in
int
sub
pop
pop
push
sub
adc
bswap
outsb
fildl
mov
movsb
and
pusha
sub
push
cmpsb
movsb
dec
sahf
inc
mov
pop
out
sub
lods
ss
pop
aad
scas
cld
jnp
pop
cmc
inc
in
push
adc
enter
fldl
arpl
or
pusha
subl
loopne
or
enter
and
addl
sbb
lcall
adc
xchg
dec
loopne
mull
cmp
mov
fcoms
shr
leave
mov
push
je
add
or
lret
test
and
jnp
dec
mov
sub
fisubrl
rcrb
orb
sti
lahf
movsb
lcall
mov
jecxz
lahf
sbb
pop
ss
addr16
shlb
xor
es
cmp
ljmp
or
mov
or
test
xchg
loope
sbb
loop
cmp
ficomps
dec
mov
xchg
pop
sti
xchg
mov
not
cmp
jb
inc
lods
pop
and
xor
ds
mov
sbb
sahf
add
fsubrp
repnz
jo
test
out
jb
movsl
outsl
pusha
mov
jge
push
ja
es
push
cmp
xchg
push
mov
push
test
mov
fisubl
dec
jno
or
push
sub
xchg
pop
mov
add
aam
pop
js
stos
loopne
arpl
out
pop
popf
stos
cmp
orl
test
cltd
pop
and
out
pop
add
jb
push
ja
cmp
outsb
aam
pop
dec
out
jg
xor
xor
jp
xor
or
or
mov
mov
inc
movsl
mov
imulb
hlt
push
xchg
ret
sub
pushf
cld
cmp
or
push
popa
testl
xor
mov
inc
cld
decl
pop
data16
pop
stos
pop
jb
sub
adc
nop
hlt
or
in
sub
jp
or
aas
cmp
sbb
fisubs
and
mov
and
push
mov
loopne
inc
addr16
mov
cli
fisubrl
lods
push
inc
pop
pop
cmp
cmp
lock
pop
inc
mov
iret
repnz
mov
inc
jae
cmpsl
aas
ret
sahf
vcvtsd2ss
les
pop
mov
dec
mul
out
add
mov
sub
cmc
and
rolb
push
and
mov
cmp
mov
mov
sub
stc
adc
mov
push
jg
in
push
dec
and
push
aad
inc
pop
and
xchg
xor
mov
outsl
imul
rcr
dec
out
cltd
shlb
jl
push
pop
xor
jb
or
push
adc
sub
xlat
mov
dec
xor
pop
mov
mov
sahf
shlb
mov
jl
icebp
cmc
out
outsl
orb
shll
cmpsl
pop
and
xor
mov
lea
fwait
push
sub
clc
xchg
pop
and
scas
xor
push
mov
movsl
and
lret
rorl
fmull
loop
sbb
cmp
test
xlat
push
int3
or
dec
pop
cmpsb
cmpsb
popa
sub
push
adc
cmp
xchg
cmp
stos
sbb
out
jbe
push
jmp
in
add
sub
xchg
sbb
sub
addr16
xchg
xchg
adc
pop
es
cmp
mov
push
scas
mov
test
add
sbb
mov
aas
pop
jne
or
outsb
push
dec
rolb
loopne
cmp
in
sub
xlat
pushf
test
jle
mov
in
outsw
sub
in
lds
push
inc
fisubs
and
ss
test
cmp
shll
into
add
stos
mov
jns
stos
stos
enter
xchg
inc
sbb
sbbl
jne
mov
push
sbb
sbb
insl
push
or
cmp
outsb
test
arpl
test
iret
pop
mov
rol
fsubrl
jge
or
sahf
add
sbb
mov
or
mov
test
insb
add
adc
das
ror
mov
xchg
aam
in
cmpsl
les
in
mov
sarl
das
stos
mov
or
repz
int
mov
push
mov
push
loop
mov
dec
mov
push
fiaddl
sbb
fmuls
ret
pop
adc
xor
xchg
sbb
inc
pop
lret
fiaddl
sub
jae
mov
test
xor
push
adc
or
xchg
or
aas
test
push
xlat
inc
ds
mov
jo
outsb
in
xchg
push
dec
ss
outsb
iret
fstpl
inc
shll
aam
cli
loopne
push
je
int
cld
pop
test
test
add
mov
sub
mov
cmp
dec
xor
jne
cmp
fmul
pop
iret
test
dec
adc
jmp
dec
outsb
dec
sbb
dec
push
cwtl
pop
sub
cld
xchg
cmp
xor
out
fbstp
sbb
mov
and
cltd
dec
jl
mov
fwait
outsl
pop
push
push
mov
push
mov
shrl
jb
mov
dec
inc
scas
std
adc
adc
icebp
xlat
movsb
and
int3
daa
movsl
mov
sbb
mov
xchg
test
push
mov
push
arpl
popa
xchg
push
insl
dec
addr16
iret
out
fdivr
dec
pusha
xor
daa
aam
das
sti
loopne
jg
mov
xor
dec
mov
sub
or
popf
mov
lcall
adcl
inc
or
in
aam
fsubrl
mov
fildl
bnd
repnz
xchg
shrb
fs
pusha
orl
lea
sbb
pop
fwait
xchg
ja
push
mov
subb
pop
out
adc
call
addr16
call
add
in
test
icebp
inc
in
adc
jns
push
out
js
nop
std
cltd
xor
or
push
neg
jecxz
xor
cmc
cmc
pop
xor
lock
xor
and
test
pop
lods
xchg
imul
add
icebp
pop
sub
push
and
xor
xchg
inc
push
jae
adc
sbb
inc
loope
inc
jnp
and
xchg
adc
test
xchg
cmp
mov
xchg
stc
stc
adc
and
mov
pop
test
jl
push
fiaddl
mov
mov
jg
outsb
xor
ds
sahf
xchg
or
dec
repnz
jmp
icebp
repz
scas
inc
sarb
dec
jne
and
popf
and
incl
mov
leave
stos
and
sub
cwtl
pusha
icebp
fnsave
pusha
cmp
dec
jp
xor
cwtl
pop
or
fimuls
sahf
pop
add
movsb
aam
mov
dec
push
lret
clc
xlat
jl
cmpl
roll
lds
mov
icebp
xchg
jge
call
mov
xor
stc
push
loop
pop
push
xchg
sbb
mov
mov
and
fstps
les
mov
sub
mov
lcall
push
in
push
stos
mov
pop
arpl
xor
push
lret
inc
jno
in
cmp
loopne
jp
mov
push
int
adc
mov
inc
dec
js
lahf
inc
pop
add
xchg
lahf
scas
out
dec
out
pop
cmpsl
cmp
roll
daa
xor
shll
popa
lcall
ret
movsl
sub
pop
hlt
arpl
pop
jns
push
xor
xchg
xchg
jmp
sbbb
jp
xor
test
mov
shlb
rolb
push
mov
fidivrs
inc
neg
ja
and
std
movsb
movsb
and
jns,pt
dec
cs
pop
in
stc
lods
pop
es
and
inc
xlat
sub
ja
es
or
rcrl
js
mov
mov
xchg
bound
divl
loop
insb
ds
movsb
inc
mov
popf
pop
ret
cmc
jno
cli
xor
adc
rolb
push
insl
test
xor
push
sahf
aaa
sub
mov
fs
jmp
or
cmc
int
lret
mov
mov
iret
sbb
mov
inc
movsl
out
fwait
add
pushf
pop
aad
inc
xchg
scas
and
sub
popa
pop
mov
mov
lret
in
jne
scas
push
out
fucomip
call
notl
popa
push
or
ficomps
lods
test
xor
xor
adc
jno
stc
xor
and
dec
test
popf
add
push
cmp
lret
test
sbbb
imul
sub
daa
sti
fistpl
scas
mov
xor
add
out
xchg
adc
fdiv
xchg
push
cwtl
imul
and
and
or
mov
cmc
movsb
call
fiaddl
fisubrl
enter
sbb
xor
test
scas
ret
fisttpll
jle
pop
out
jb
xor
dec
dec
cwtl
ret
ja
cld
xor
cmp
mov
mov
pop
jo
loope
ds
repz
into
aas
xor
mov
in
cmpsl
sbb
push
and
xlat
or
mov
add
addr16
cld
outsl
cmpb
cmp
dec
push
sbb
mov
bound
push
mov
lret
insl
bound
in
sbb
fidivl
or
pop
pop
mov
dec
mov
fwait
loope
cmpsb
dec
cli
insb
cs
icebp
das
pop
xchg
mov
jle
es
push
popf
test
fcomp
fstl
fisttpl
loopne
cmpsl
das
filds
and
in
push
js
shlb
sub
inc
push
jg
lahf
xor
cmp
xor
push
mov
cld
out
imul
filds
pop
bound
xor
ficoms
inc
or
xchg
fnstsw
mov
into
movsl
sahf
sbb
xchg
test
xor
xchg
mov
or
jmp
pop
sbb
cmp
in
imul
subb
jecxz
mov
cmpsl
sub
insb
sbb
sub
cmpsl
loop
xlat
cmp
imul
icebp
xor
into
sub
jne
xchg
adc
dec
mov
call
push
and
frstor
or
sarb
sub
das
pop
sub
xchg
imul
paddb
sahf
xchg
and
out
jge
sub
popa
pop
mov
xor
add
ljmp
sub
std
xchg
lret
test
sti
cwtl
mov
dec
cmpsl
sbb
pop
xor
adc
sarl
mov
pop
mov
inc
mov
mov
daa
jle
fs
imul
rcrl
inc
jl
xlat
pop
or
cmp
inc
xchg
pop
mov
mov
test
fsub
cmp
in
push
ret
xchg
mov
cmp
push
gs
insl
dec
push
into
ja
mov
inc
xor
jnp
push
mov
test
imul
or
jl
and
sbb
jo
movsb
mov
and
fdivrs
mov
and
pop
test
sub
out
cmp
mov
scas
lret
shrl
adc
jmp
jg
call
je
jbe
inc
lea
arpl
cmp
xchg
shll
dec
in
in
mov
sbb
inc
loope
adcl
cmp
mov
add
pop
pop
test
lock
cmp
aam
and
clc
loopne
dec
lock
xchg
in
outsb
sub
fwait
and
loop
data16
outsl
jnp
adc
mov
jl
ss
or
test
dec
cmpsl
jp
push
pop
add
stos
xchg
stos
ds
adc
sti
notl
ret
ficomps
imul
jle
mov
icebp
dec
test
lods
mov
movsl
mov
cmp
lock
or
out
and
xchg
jnp
in
nop
mov
cmp
cmp
dec
push
mov
ret
adc
fstpl
adcl
pop
aas
ret
jno
scas
push
aad
out
add
pop
inc
push
stos
and
jp
mov
ss
test
mov
adc
lock
jl
adc
int
jno
mov
movsb
in
cs
lcall
clc
jae
das
stos
lret
or
sbb
xchg
orb
fisubrs
aam
adc
arpl
ror
out
jle
bound
pop
jg
inc
out
xorl
xchg
lock
mov
cli
sub
inc
rcl
outsl
ja
fucom
hlt
pop
dec
insb
jl
gs
aaa
or
sub
push
sbb
hlt
sbb
sub
xchg
enter
sbb
je
insb
push
mov
mov
aas
push
or
dec
mov
das
add
or
loopne
mov
push
or
popa
in
mov
cs
into
mov
movsl
fwait
gs
xor
scas
pop
mov
test
sbb
sti
inc
popf
mov
jg
rcl
xchg
sub
outsb
add
pop
sub
mov
jno
jno
in
lock
mov
lret
bound
in
in
dec
imulb
sbb
rcpps
in
cld
sub
push
enter
dec
inc
mov
jp
mov
xchg
ds
and
dec
in
js
push
nop
ficoms
adc
rcrl
pop
out
in
lret
add
mov
mov
setns
adc
rorl
pusha
daa
xorl
popa
ffree
pop
into
jne
lret
ret
cmp
sbb
ret
sbb
xchg
mov
pop
inc
movsl
cmp
lret
les
das
std
add
rol
dec
mov
in
lds
lret
pop
data16
aas
vmwrite
mov
out
lock
add
out
in
cmc
push
jo
jmp
mov
jae
fsubr
adc
or
push
xchg
out
call
and
dec
aas
ret
in
arpl
xlat
dec
mov
jecxz
lret
or
mov
ret
pop
push
xchg
ror
int3
cmc
inc
xchg
gs
xor
sub
sbb
in
sbb
je
movsb
mov
mov
mov
lods
jnp
dec
jb
hlt
call
ret
cli
in
outsl
sub
stos
bnd
dec
jb
push
gs
push
mov
out
sbb
mov
mov
push
pop
push
mov
fwait
cs
mov
pop
fcomps
mov
and
aam
mov
sub
pusha
or
pushf
lret
imul
mov
add
xchg
sbb
in
fs
jno
mov
sbb
or
lods
jae
mov
or
mov
jp
sarl
adc
lret
test
sti
int3
pop
dec
dec
imull
or
jno
fmul
adc
das
test
movsb
sbb
ljmp
insl
jp
ds
mov
movsl
popf
jnp
sub
jnp
adc
insl
pop
push
pop
sbb
insb
jmp
subl
pop
int
jmp
push
lea
rolb
ljmp
in
fisttps
outsl
loope
push
lea
movsb
lret
add
insl
enter
push
dec
arpl
stos
xchg
or
or
pop
dec
cmp
call
loop
fmuls
daa
roll
sbb
xchg
call
sub
stos
je
mov
movsl
adc
sbb
icebp
jns
daa
add
xchg
adc
mov
lods
andl
cli
cltd
cld
int3
pop
push
pop
sub
cmc
mov
enter
mov
xchg
push
xor
gs
or
xchg
mov
imul
sub
int
xchg
jo
sbbl
mov
jne
popf
std
jb
pusha
lahf
loop
cmc
cmc
mov
jp
cld
mov
cmp
scas
gs
dec
push
pop
leave
pushf
lea
cli
jne
adc
mov
adcb
ret
call
dec
dec
in
aam
js
cmp
sbb
cli
mov
fstpt
xchg
lcall
jmp
inc
pop
fs
dec
das
repz
sub
xchg
add
jo
nop
loope
lock
pop
outsb
mov
adc
mov
xor
in
stos
push
xchg
and
push
push
shrl
cmpsb
jbe
scas
stos
xchg
mov
stos
pop
jmp
or
mov
icebp
decb
mov
mov
icebp
in
and
out
sahf
data16
ja
push
adc
ja
scas
dec
mov
les
jb
iret
and
inc
add
stos
popa
mov
repnz
arpl
push
scas
and
xorl
push
or
shl
cmp
ror
xchg
mov
push
push
roll
jle
mov
sbb
mov
negb
movsb
test
in
cmp
adc
jmp
ss
test
sub
leave
subl
dec
add
test
rol
loop
lods
xor
add
jl
movsl
push
dec
int
xchg
sub
in
add
jl
aam
xchg
cmp
xor
mov
dec
pusha
push
divl
sub
adc
mov
jb
add
test
adc
mov
cmpsl
in
pop
mov
out
and
and
bnd
add
ficomps
mov
push
xor
pop
imul
xor
cld
xchg
lock
mov
int3
sbb
sahf
rcr
or
nop
or
push
jl
test
mov
call
dec
dec
cli
push
jne
add
mov
cmp
lcall
nop
cmp
cmp
cs
fidivrs
push
dec
dec
xor
xor
popa
cltd
shrb
xchg
mov
sbb
stos
jecxz
cwtl
dec
sbb
popa
movsb
and
add
roll
fdiv
cmc
pusha
sbb
jne
pop
sbb
jne
cs
or
dec
jbe
cmpsb
push
jae
adc
fs
pop
imul
mov
in
adc
out
out
loopne
mov
push
push
addb
pop
cmp
les
loopne
cmp
mov
cmpsb
stos
iret
inc
sub
jmp
dec
leave
loope
call
inc
aaa
xor
test
gs
mov
sbb
push
inc
scas
adc
mov
test
pop
or
pop
push
leave
movhlps
xor
mov
call
aam
decl
into
sarb
push
mov
jmp
mov
das
sti
repz
push
add
mov
adc
push
jp
mov
rclb
out
jns
mov
shlb
ret
and
iret
rclb
mov
outsl
push
pop
xchg
aaa
js
cmp
je
sbb
dec
stos
mov
add
mov
setno
bswap
cmp
pop
mov
imul
xchg
and
mov
call
into
dec
sbb
push
push
cmp
add
lahf
movsl
les
mov
sub
adc
add
pusha
lds
jae
stos
and
cmc
les
dec
pop
pop
and
and
les
repnz
mov
xchg
dec
adc
fs
dec
movsl
pop
mov
cmp
xchg
shlb
fidivrl
push
dec
pop
test
push
sub
inc
testl
dec
test
cltd
dec
popa
add
stc
inc
add
testb
add
dec
sbbl
mov
loope
and
pop
test
mov
fistpll
out
xor
stos
hlt
add
mov
pop
loopne
push
inc
ja
add
fisubrs
out
repz
cmp
add
dec
adc
stos
nop
enter
fwait
and
sub
lret
fs
xchg
imul
push
bound
jo,pn
xchg
out
mov
repnz
testl
pusha
lcall
movsl
mov
mov
and
push
fisttpl
xor
out
int3
or
push
in
adc
leave
push
dec
loop
sub
addr16
sbb
pop
fucomp
mov
mov
jle
push
repnz
popf
adc
stc
or
daa
fwait
mov
mov
bound
xor
bound
and
add
push
aam
pushf
jge
xchg
sarl
cmp
push
jmp
pop
push
adc
cmpsl
incl
movsb
cmp
sbb
scas
scas
mov
test
das
ljmp
pop
push
dec
xchg
loope
ja
movsl
pushf
nop
lcall
jmp
scas
aas
loopne
mul
fs
cmp
in
inc
xchg
adc
aas
push
fists
mov
lock
test
push
cmp
clc
or
sbbl
loop
adc
jo
sahf
aad
sbb
jg
sub
out
inc
mov
inc
pop
in
call
popf
lods
test
scas
int3
jecxz
add
rclb
enter
and
mov
aam
inc
iret
pop
xlat
cmpsl
fisttps
popa
test
ret
clc
stc
push
mov
sub
mov
jg
sbb
push
in
lods
xchg
ret
adc
lock
aam
dec
jno
dec
adc
add
mov
mov
daa
cmc
shlb
rorb
pop
negb
scas
stc
dec
lret
fcmovb
add
pop
mov
pusha
mov
inc
cmp
ss
incb
xor
push
and
xlat
test
push
mov
sub
push
rep
mov
in
sbb
fistpll
ljmp
dec
or
cmp
cwtl
mov
push
fidivrl
in
xor
shrl
add
pusha
enter
lret
pushf
pop
pop
mov
faddl
mov
pop
sbb
mov
adc
mov
popf
push
jno
movsl
mov
outsb
arpl
add
stc
lods
test
push
pop
pop
jne
xor
push
adc
inc
inc
fmull
dec
adc
push
or
fistpll
nop
movsb
rorl
mov
aas
cltd
jbe
loope
mov
sbb
leave
mov
stos
inc
iret
xor
cs
pop
ret
sbb
sub
cwtl
add
mov
shrl
sub
dec
fnstsw
xor
dec
add
sub
movsl
cmp
cmp
push
mov
xchg
mov
sbbl
out
popl
cmpsb
ss
enter
rcll
xor
aam
ds
and
scas
adc
pop
int3
sarl
push
into
mov
mov
int
cmp
xor
adc
mov
xchg
inc
in
ret
mov
repz
test
push
or
mov
and
jge
addr16
nop
nop
xchg
scas
dec
fistl
and
cmp
mov
cmp
jno
frstpm(287
lock
adc
mov
xchg
xor
push
imul
and
into
lds
jg
cmp
dec
xchg
mov
aaa
shll
pusha
sbb
mov
inc
adc
xchg
push
and
jg
cmc
fs
in
lcall
xchg
inc
jb
shlb
xor
xor
cmc
xchg
pushf
and
pusha
mov
jne
les
push
lds
test
adc
es
cmp
pop
push
cmp
and
fs
jbe
mov
movsb
dec
pop
lahf
mov
stos
adc
cli
xlat
xor
out
leave
jns
mov
mov
data16
xor
push
add
not
xchg
mov
pop
push
fwait
jecxz
rorb
arpl
jnp
arpl
sarb
dec
aam
test
push
sbb
rcrl
pop
fists
xor
fs
or
nop
mov
or
icebp
jo
fdivrl
scas
jg
data16
loopne
pop
lret
push
lea
cmpsb
test
adc
push
rorl
jnp
loope
jl
adc
mov
mov
pushf
xchg
cmp
sub
push
mov
pop
jl
insl
sbb
movsl
icebp
mov
arpl
mov
outsb
divb
push
dec
int3
shlb
fs
pop
xor
cmp
ljmp
leave
insb
pop
xchg
jbe
js
stos
int
dec
filds
nop
repnz
pusha
shr
aaa
ret
dec
hlt
xchg
mov
jb
mov
cmpsb
andl
lea
dec
lahf
in
pop
inc
xor
stc
int3
and
scas
icebp
sub
jl
add
ljmp
or
fwait
or
mov
or
inc
jbe
shl
lret
int
cltd
fidivrl
test
cmp
mov
pushf
mov
aas
movsb
shrb
dec
gs
sti
imul
xchg
sub
mov
test
jle
mov
add
fistpll
push
add
es
inc
jecxz
and
mov
pop
pop
and
jae
mov
xchg
shr
xor
sub
sub
inc
daa
and
push
mov
roll
out
fdivl
stc
push
aas
xor
adc
ss
punpckldq
mov
stc
cmp
mov
ljmp
fisubrs
shl
xorw
or
cmp
push
ja
dec
push
addb
jno
bound
fwait
mov
cmpb
adc
mov
loop
gs
cmp
imul
aad
push
out
repnz
push
das
push
sub
fsub
andl
jp
mov
data16
jo
jno
sbb
pop
sbb
cmp
mov
aas
mov
adc
pop
sub
dec
inc
and
and
cmpxchg
addb
pop
xchg
shl
in
adc
imul
pop
fs
mov
cmp
addr16
add
cld
pusha
push
inc
rolb
adc
push
sti
mov
xchg
movsl
scas
rorl
aaa
pop
push
xor
or
daa
cmp
pop
mov
dec
mov
rol
dec
movd
in
out
or
lea
add
adc
xor
lret
add
fdivrs
sub
or
sbbb
cmp
xor
in
scas
xchg
lock
push
inc
outsb
das
jl
sar
xchg
sbb
movb
dec
xchg
and
les
hlt
mov
nop
jns
mov
xchg
inc
pop
ret
sbb
adc
or
fnstcw
or
rcll
mov
in
stos
loopne
loopne
insl
mov
out
jecxz
or
repnz
fisubs
sub
ret
je
add
sub
daa
lock
insl
adc
sar
mov
mov
insb
xor
cs
pop
dec
adc
or
and
sbb
sub
std
shrb
stc
gs
dec
enter
pop
rclb
nop
lods
mov
lods
sbb
sbb
inc
test
dec
stos
jecxz
popa
lahf
leave
xlat
ds
cmpl
sub
in
mov
jne
cwtl
test
std
xchg
in
popa
adc
cli
push
cmp
ljmp
test
add
xchg
fwait
xchg
lds
lock
cmpsb
push
enter
or
mov
sbb
stos
dec
cmp
xor
call
push
add
inc
cmp
stc
inc
sbb
jae
add
cli
pushf
adc
mov
iret
xor
push
scas
in
cli
mov
rcll
inc
jo
sbb
leave
mov
xchg
xor
pop
inc
push
add
int3
lea
rol
movsl
add
add
lds
pusha
fucomip
mov
mov
sarb
dec
fsubrl
imul
aas
push
mov
sti
fst
push
fmuls
cmpsb
or
shlb
hlt
inc
push
pop
insb
dec
mov
adc
xor
loopne
in
divl
xchg
int
and
cmp
fdiv
sahf
test
fs
sahf
movsb
insb
dec
jae
mov
and
add
mov
das
adc
ja
push
fld
mov
adc
rclb
dec
dec
jge
mov
pop
push
test
pusha
xchg
sub
enter
cs
dec
pextrw
flds
call
arpl
xor
mov
ss
and
adc
push
ret
cmp
int
cmpsl
mov
or
rolb
mov
bound
cmpsl
jle
out
jl
mov
sbb
mov
js
jp
pop
or
dec
sbb
les
in
into
pop
jns
inc
add
in
mov
or
lea
cmp
xor
jle
pop
cmp
pop
in
nop
xor
lret
cmpsl
pop
mov
pop
shl
pop
inc
xchg
mov
mov
test
bound
jecxz
arpl
add
out
xchg
shr
jb
pop
dec
in
dec
stos
and
aad
insl
adc
test
sub
mov
xchg
xchg
je
mov
mov
or
int3
es
push
out
lds
dec
stos
int3
insl
cmpsl
movsl
cmp
push
aas
les
mov
andb
jbe
icebp
inc
pop
sub
add
int3
and
test
int3
jecxz
sbb
mov
jnp
dec
mov
push
jno
and
push
mov
aas
mov
jnp
stc
imul
sbbb
push
iret
xchg
jmp
ljmp
cmc
in
pop
ss
cli
pop
fst
adc
xchg
fbstp
adc
popf
clc
in
arpl
xor
sbb
xchg
xchg
bound
push
psubsb
lods
mov
into
pop
adc
fisubrl
or
cmp
bound
xchg
out
ja
gs
add
or
add
jecxz
imul
add
cmp
sub
jo
stos
popf
out
jno
mov
cld
xchg
xor
xor
pusha
and
rcrl
jp
lods
add
sar
jb
fcoml
sbb
aad
adc
cmpl
push
or
xchg
js
ss
shrl
pop
rcll
cli
jp
pusha
pop
inc
repz
shll
cmp
adc
dec
movsb
insl
mov
push
mov
jp
jnp
das
loopne
mov
sbb
mov
test
cli
pop
movsl
dec
fldl
mov
xor
pushf
push
xor
xor
cmp
aaa
or
sub
nop
mov
and
aam
adc
inc
mov
push
inc
inc
push
mov
sbb
push
rorb
test
or
mov
or
mov
and
pop
adc
in
mov
pop
fidivrs
xchg
push
cli
shlb
int3
outsb
and
xor
mov
into
mov
pushf
cltd
inc
scas
adc
sbb
lret
jmp
popf
push
dec
adc
inc
cmp
es
into
or
sub
ss
stc
aam
xchg
mov
mov
addr16
add
pop
sbb
xchg
stos
aaa
adc
jp
mov
jbe
sub
ds
sbb
cmp
and
imul
xchg
mov
mov
push
mov
rolb
lret
adc
dec
repnz
jecxz
int3
cmpsb
add
leave
adc
scas
xor
sbbb
adc
mov
in
lock
ficoml
shll
lods
push
push
jae
std
pcmpeqd
mov
ror
mov
in
cs
xlat
movlps
test
mov
nop
pushf
fildl
inc
aas
mov
pop
add
outsb
cmp
or
out
stc
lds
clts
test
add
incb
and
mov
mov
pop
sub
push
lret
lret
mov
stos
daa
cmp
and
push
xchg
jle
cltd
sub
mov
push
mov
insl
xor
js
ja
pop
sbb
lahf
fbld
add
pop
mov
lea
cmp
cmp
jmp
mov
push
mov
xchg
add
mov
les
mov
icebp
insb
andl
lds
and
or
dec
pop
adc
push
pop
mov
xor
xor
cltd
rcl
rorb
iret
lods
push
jle
adc
cmp
xchg
jns
cmp
jle
or
mov
jno
or
pop
div
popa
lods
leave
mov
adcb
cs
ja
xor
pop
push
js
cmpsl
adc
xchg
add
mov
out
cmp
xchg
mov
lock
arpl
mov
lret
dec
dec
add
mov
mov
neg
ljmp
gs
add
mov
ds
std
outsl
push
cli
ss
notl
cltd
dec
xorl
leave
movl
dec
imul
and
lods
xchg
rcrl
andb
mov
je
mov
shlb
xchg
push
cmpsb
stos
movsb
mov
rcrl
mov
xchg
xchg
push
xchg
mov
sbb
fs
pushf
in
cmpsl
xchg
repz
fsub
adc
int3
nopl
pop
fsubrl
roll
aaa
test
gs
inc
int3
xchg
jnp
jb
xor
sahf
int3
aas
xchg
movb
mov
xchg
or
dec
xchg
lods
mov
cmp
or
loopne
lock
xchg
xchg
loope
jp
xchg
mov
jl
jge
f2xm1
std
cmp
jl
ljmp
and
or
mov
dec
aas
scas
pushf
insl
jns
mov
pop
cmp
je
push
ljmp
movsl
nop
loope
or
cmp
mov
xchg
push
sti
das
inc
lret
popa
andb
pop
jl
loop
lock
call
push
and
jnp
jmp
aam
fs
scas
jb
mov
mov
movsb
out
push
cmp
andl
lock
lret
cmpsl
adc
dec
mov
sbb
ss
and
cmp
adc
inc
mov
lods
shl
addr16
les
pop
jae
fsubl
int
or
out
insl
xor
shll
imul
adc
pop
cli
cld
aam
daa
cmc
add
inc
sbb
and
pushf
add
mov
scas
in
jecxz
inc
aad
jo
loop
mov
mov
push
int3
or
sbb
cmpsl
mov
add
lcall
outsl
ja
push
jo
mov
xor
push
mov
lea
inc
mov
mov
into
push
ret
hlt
jl
enter
je
push
dec
pop
in
push
mov
inc
or
add
icebp
out
test
sub
xor
int3
es
mov
mov
sbb
jne
lods
mov
jmp
sahf
pop
fnstenv
imul
lret
xor
jns
pop
jg
outsb
jbe
les
mov
cld
shr
adc
xor
pop
cmp
cwtl
in
in
in
sahf
lods
subb
xor
jbe
sub
fwait
push
stos
clc
pop
fs
out
xchg
ret
mov
shll
cwtl
movl
mov
mov
popaw
rorl
ret
jmp
lret
scas
outsb
pop
cli
fsubrl
ja
and
addr16
push
sub
cmp
xchg
out
ja
mov
sub
nop
cwtl
inc
mov
sbb
adc
xchg
pop
mov
movsb
call
pop
mov
int3
jmp
test
in
mov
sbb
and
jns
push
inc
mov
push
mov
hlt
cld
pop
and
pminsw
or
popa
adc
lods
cmp
sar
pop
test
adc
mov
rcrl
cmpsb
aas
push
stos
push
or
and
call
outsb
and
data16
push
sarb
in
aam
popa
and
pop
pusha
sbb
mov
xchg
ss
adc
pop
fistps
cmp
jo
popf
cli
lcall
ret
dec
popf
xchg
fs
sub
andl
adc
out
xchg
repz
jno
xchg
sub
sbb
repz
pop
xchg
inc
shll
sbb
dec
pop
pusha
mov
out
adc
jp
sbb
int3
push
fsts
pop
daa
in
adc
scas
xchg
insl
xchg
fs
cmc
cli
jecxz
call
xchg
adc
incl
outsb
vminpd
inc
inc
inc
pop
sbb
mov
imul
cmp
ds
xchg
push
push
xor
or
in
lret
mov
mov
pop
cmp
jp
out
xor
inc
into
xor
jmp
mov
ret
inc
cmp
lret
and
clc
fcomip
and
and
int3
or
mov
into
and
pop
push
test
dec
test
mov
jo
in
jns
les
inc
mov
push
mov
ss
repnz
pop
sti
and
lret
xchg
popa
xchg
ljmp
mov
add
mov
push
dec
pushl
jecxz
or
adc
dec
aad
cwtl
mov
mov
ss
aas
fistpll
sub
fdivrl
popa
pushf
pop
adc
cmpsb
or
adc
cltd
jo
jo
dec
dec
outsl
stos
les
add
shl
popf
sbb
lock
jge
jle
rcrb
pop
adcl
testb
xor
aam
mov
mov
push
std
sahf
cmp
xor
push
adc
outsl
jl
aad
cmp
xchg
mov
sub
jb
ficoml
andl
mull
push
and
leave
or
push
jle
and
push
push
call
adc
std
mov
fldcw
cmpl
cli
lret
push
jbe
and
sub
fimuls
ja
mov
arpl
icebp
movsb
xchg
mov
lret
test
insl
icebp
mov
subl
scas
jae
incb
jnp
push
ret
jns
push
loopne
add
jmp
inc
adc
cmp
xor
dec
ja
les
js
lods
jno
fbld
cwtl
inc
dec
mov
xchg
lret
pop
xor
sarb
ret
push
jg
sbb
lcall
cltd
xor
call
lea
insl
repnz
push
cli
sbb
icebp
mov
ja
mov
xchg
imul
stos
or
dec
jnp
scas
cmc
jne
imulb
xchg
inc
cs
leave
push
fiaddl
xchg
xchg
cmp
roll
fwait
repnz
aad
mov
jl
repz
and
arpl
pop
in
sub
cmp
cmpsl
mov
repnz
inc
inc
fwait
lock
mov
jle
pop
dec
mov
inc
lock
xchg
addr16
jmp
xor
leave
fidivrs
adc
jl
les
outsl
pop
sbb
daa
outsl
add
and
mov
jns
push
mov
lcall
pop
mov
push
or
insb
sbb
or
pusha
or
inc
adc
jae,pt
cmc
das
clc
lret
push
inc
adc
adc
aam
dec
lea
push
cltd
add
outsb
sub
xchg
xchg
sub
arpl
dec
lret
insl
ficoml
sbb
ljmp
dec
xchg
lcall
out
test
inc
push
jl
xorl
mov
pop
in
mov
cmc
pop
inc
in
iret
sub
mov
sub
sbb
cmp
or
jb
dec
add
dec
lret
xor
sarb
inc
push
sub
out
clc
inc
xor
das
pop
movsb
into
arpl
leave
mov
jbe
clc
fcoms
divb
xchg
scas
mov
jnp
xor
push
mov
bound
lret
lock
in
rcr
repnz
xor
stos
bnd
or
xlat
mov
repz
cmc
xor
scas
gs
arpl
fisttps
sbb
jle
and
pop
fistpl
test
xchg
or
mov
es
int
imul
or
test
xor
dec
ds
mov
or
ds
lods
imul
popa
add
sub
sbb
add
or
lds
fwait
or
scas
int3
jmp
lea
outsl
jecxz
out
fsubr
add
test
pop
jg
dec
mov
or
ret
mov
xchg
das
pop
test
adc
and
push
xchg
pop
jmp
sbb
xor
inc
pop
dec
cmpsl
repnz
dec
aad
sahf
adc
scas
mov
imul
loope
mov
inc
mov
movsl
test
loope
add
jp
mov
lods
push
cmp
cmpsl
outsl
jo
test
sub
popa
lods
das
push
mov
inc
test
ficompl
mov
mov
sub
add
out
loopne
and
dec
iret
je
dec
push
sbb
add
adc
arpl
inc
test
cld
cmp
sti
lods
sbb
xchg
ja
repz
sub
mov
out
bound
add
pop
shrb
lret
and
dec
int3
mov
das
or
inc
shll
adcb
mov
bound
inc
xor
jmp
jle
add
les
jg
push
jns
lcall
mov
faddl
sbbl
cmp
iret
and
lret
or
push
les
and
push
je
shr
popf
jbe
pusha
test
adc
fnstenv
popa
sub
inc
dec
aad
lea
adc
and
jbe
ret
das
outsb
les
and
ljmp
cwtl
push
sbb
out
and
fs
cmpb
jecxz
push
and
in
gs
js
dec
mov
adc
test
xchg
repnz
mov
daa
out
mov
xlat
inc
mov
jmp
movl
jbe
ss
in
fwait
in
xor
add
adc
adc
mov
cmp
xchg
repnz
lcall
sbb
dec
push
neg
pop
mov
xlat
pushf
or
add
add
adc
sbb
ss
xchg
lret
cmp
dec
cmp
inc
pop
test
sti
sub
ss
in
hlt
push
xlat
int
aas
nop
adc
cmp
insb
mov
xchg
xchg
sub
subps
mov
mov
fldt
fidivs
cs
jge
mov
add
lret
dec
dec
xlat
mov
sub
mov
cld
mov
push
pusha
js
dec
and
loopne
push
fisubs
bound
sbb
sti
in
xor
loop
xchg
addr16
aas
loope
push
add
pop
sbb
mov
pop
cmpsl
mov
cmp
rorb
addr16
dec
outsb
mov
lcall
fists
scas
adc
jmp
mov
nop
mov
out
sarb
xchg
adc
out
mov
imul
jbe
es
cmpsb
sbb
xor
mov
jae
ljmp
mov
add
hlt
ffree
mov
ss
cmp
dec
mov
inc
aas
ret
mov
pushf
cmc
popf
les
js
lahf
push
les
sarb
call
fistpll
jo
cmpsl
shlb
dec
xor
inc
gs
rcrl
lods
dec
out
or
fcompl
push
inc
out
adc
jp
inc
add
sarl
jp
stc
lahf
stos
enter
mov
dec
mov
packsswb
cmp
cltd
and
inc
inc
into
and
xor
mov
and
jno
or
inc
mov
jecxz
add
xchg
int3
aam
pop
aad
ljmp
stc
jb
popa
int3
cmp
add
mov
adc
js
xchg
shll
mul
pusha
or
sqrtps
movsb
into
xchg
sahf
out
arpl
rcrb
adc
sbb
jb
clc
dec
inc
mov
mov
xor
sub
cmp
fadd
fcom
dec
rcr
adc
mov
inc
inc
rolb
arpl
push
and
cmp
test
add
mov
hlt
sub
js
std
enter
pop
lds
mov
xchg
jmp
sub
mov
pop
ss
sbb
sbb
mov
mov
gs
dec
stc
mov
test
outsb
js
jo
dec
imul
lahf
es
mov
pushf
push
hlt
xchg
jns
mov
push
lret
les
push
or
rolb
scas
scas
hlt
arpl
out
add
in
and
pusha
dec
xor
add
imul
sub
xor
or
ds
rcrb
push
mov
cld
ss
mov
ficomps
movsb
mov
xchg
test
push
mov
pop
xor
inc
incb
inc
into
mov
in
inc
push
push
mulb
rsm
add
or
outsl
xor
sbb
lret
jecxz
mov
andl
popa
scas
movsb
inc
mov
imul
jae
jae
push
out
call
stos
cltd
mov
ss
dec
sub
xor
sub
push
cmp
popf
push
out
or
jne
mov
aad
lods
aam
aas
mov
push
movsl
add
xor
ds
sub
in
insl
shr
xor
aas
in
mov
js
cld
out
out
nop
not
add
adc
iret
rcll
js
mov
test
movsb
pop
icebp
pop
cmp
scas
arpl
comiss
test
outsb
lods
or
sub
pop
mov
xchg
mov
push
or
cltd
fildl
jmp
fs
push
inc
push
ffree
std
aaa
mov
leave
subl
loope
mov
and
adc
mov
jmp
jp
dec
push
push
fcmovnbe
xchg
insl
mov
aas
in
lds
fadds
mov
fwait
or
jbe
mov
xlat
add
add
movsl
scas
cmp
inc
adc
in
push
int
orb
nop
push
jl
outsb
sti
dec
cmp
lea
gs
mov
stos
adc
mov
mov
push
adc
mov
push
out
mov
xlat
test
cli
repz
xchg
cmpsl
jb
jl
js
push
scas
aad
mov
push
test
mov
mov
mov
mov
pop
push
or
out
outsb
ljmp
repnz
inc
mov
sub
push
jle
in
add
adc
frstor
jo
sbb
adc
movsb
pop
pop
imull
popa
data16
push
movsl
sbb
fstl
or
mov
xor
pop
addl
daa
rol
jmp
dec
or
pop
sub
fsubl
lea
push
and
lcall
dec
test
leave
ds
xchg
bound
xchg
inc
add
pop
push
adc
out
or
cmp
xor
mov
outsl
les
insb
int
shrb
daa
jbe
add
dec
lods
and
jecxz
sub
shlb
leave
jmp
ljmp
sbb
add
adc
add
ljmp
or
jle
cwtl
pop
subb
les
sub
jecxz
cmpb
leave
mov
adc
enter
idiv
mov
mov
sub
data16
sbb
push
sti
dec
dec
loope
pop
imul
icebp
shl
clc
jne
outsl
sub
xor
cli
mov
testb
lahf
inc
pop
cld
shrb
es
dec
sub
and
cmp
ret
push
std
inc
sbb
push
test
bound
cmp
scas
cmp
mov
mov
xlat
xchg
mov
adc
dec
jg
mov
add
or
jae
enter
pop
scas
mov
jecxz
add
or
adc
movb
sub
imul
fcoms
sti
lret
dec
movsl
xorb
jb
inc
add
scas
adc
scas
push
add
mov
or
sbb
jbe
lahf
sbb
push
mov
insb
iret
clc
adc
mov
inc
sub
std
sub
cmp
dec
mov
call
mov
cmp
cmc
and
lahf
sahf
lahf
add
pusha
inc
xchg
jne
fwait
cs
dec
cmpsb
sub
mov
mov
pop
test
lahf
adc
shll
aas
int3
test
bound
lahf
loop
mov
int
mov
inc
jecxz
mov
sbb
or
inc
loopne
leave
in
adc
mov
daa
divl
jb
subb
cmp
mov
dec
in
and
jmp
cli
lods
ljmp
sahf
push
dec
aam
shl
cltd
ret
mov
lcall
sub
jae
and
test
mov
js
xchg
lret
and
cmp
dec
pop
orl
lds
in
sub
sbb
push
push
popa
in
call
out
punpckhwd
or
mov
addr16
lret
sub
fwait
adc
out
int3
cmp
inc
call
cmpsb
sbb
xor
cmpsl
mov
aad
dec
inc
out
push
lods
xchg
jp
push
stos
push
push
sub
sti
into
and
mov
aam
dec
je
cmp
rclb
loope
leave
negb
adc
mov
mov
mov
fs
stos
pop
xchg
out
push
xor
dec
repnz
test
pop
out
and
scas
fs
xchg
sub
add
fldl
fstpl
mov
and
fisttps
sarl
lahf
int3
lds
jecxz
daa
cli
or
in
xchg
mov
pop
test
xchg
mov
ja
cmpsl
push
pusha
test
ss
mov
mov
call
testl
mov
dec
cmp
rorl
dec
mov
mov
jge
xchg
cmc
fcoml
cmpb
sti
xchg
movsl
bsr
gs
dec
sub
in
lret
lock
stos
lret
fcompl
aad
clc
jl
test
adc
cmp
imul
mov
jl
adc
and
mov
scas
cmp
lods
cwtl
in
mov
andl
addr16
jbe
call
and
jbe
inc
push
out
loope
dec
mov
mov
daa
ret
int
cmp
je
dec
test
xor
rcrb
test
ja
ljmp
clc
sti
cmp
cs
sub
dec
sub
fnstcw
or
ss
je
sahf
xchg
das
cmp
mov
mov
push
inc
jge
pop
xchg
cmp
inc
pop
ljmp
pop
test
or
inc
jmp
xchg
loop
push
mov
addr16
out
je
shll
notb
fwait
mov
cmc
jae
cmp
mov
adc
jp
xor
push
daa
stos
add
lods
mov
jmp
test
scas
mov
cs
bound
adc
fmuls
xchg
pusha
mov
orb
daa
adc
xchg
add
adc
pusha
add
mov
loop
addr16
pop
inc
out
neg
mov
xor
xchg
cwtl
fistpl
mov
cltd
add
xchg
push
pop
fisubs
jmp
sub
mov
stos
mov
outsl
jmp
or
lahf
and
in
pop
gs
ja
inc
popa
mov
dec
jno
push
push
xchg
push
push
fs
mov
cmp
lock
test
lret
mov
sarl
in
dec
imul
dec
ficomps
fcomp
ja
add
rorl
lahf
flds
fucomp
mov
inc
adc
xchg
xchg
pop
cmpsb
cmp
je
adcl
and
cld
push
stc
test
mov
add
mov
clc
test
int3
call
mov
jle
ficomps
jp
in
imul
and
stos
icebp
jnp
sarl
test
orl
mov
adc
aad
mov
rcll
pop
test
cmp
push
xchg
adc
filds
sbb
icebp
lea
mov
xchg
fwait
jecxz
push
ret
pop
test
hlt
xor
push
fistps
mov
stos
xor
clc
jae
pusha
shlb
enter
push
sbb
or
jg
popa
jmp
out
int
or
lea
in
cmp
enter
jne
xor
cmp
mov
in
and
jb
gs
push
lahf
sahf
negb
jmp
lahf
pop
in
xchg
dec
ficoml
das
mov
aaa
bound
jnp
xchg
mov
repnz
push
push
addr16
out
cli
fisubs
faddl
imul
add
xor
nop
test
pop
adc
lods
movsl
sub
cmp
repz
cmp
iret
lahf
jge
jo
cltd
adcl
dec
arpl
cmp
push
xchg
and
sbb
cmp
or
std
les
ret
or
icebp
or
pop
xor
push
js
inc
dec
shlb
pop
repz
scas
lahf
fistps
mov
inc
mov
clc
xchg
dec
lods
std
mov
stc
push
xchg
sub
mov
cmp
cmp
add
adc
stc
stos
arpl
jmp
ljmp
sub
and
inc
pop
aaa
test
aas
insl
xchg
pop
sub
xchg
test
lahf
and
push
or
rcr
insb
ret
je
test
leave
ret
adcb
and
push
in
mov
inc
jno
adc
loopne
jne
cmp
ret
fwait
repz
and
shlb
cld
mov
inc
mov
loope
fisubrs
dec
cmp
sbb
sbb
cmc
push
std
lahf
inc
dec
cltd
popa
pushf
adc
cwtl
dec
out
add
inc
adc
sub
dec
jo
xchg
inc
lret
adc
xor
push
sbb
in
shll
xchg
vmwrite
jmp
mov
sbb
shll
scas
fwait
sub
or
jo
xor
scas
jmp
adc
jb
hlt
adc
ja
nop
nop
mov
push
call
xor
leave
cmp
pop
shr
or
adc
and
lcall
dec
push
sub
test
mov
add
sub
les
sub
jns
int3
mov
shrl
add
lods
sbb
imul
jl
push
pop
push
pop
and
push
nop
or
jmp
or
into
adc
and
push
sub
lds
push
push
scas
pop
mov
sub
mov
pop
adc
insl
arpl
fucompp
mov
xlat
out
out
out
jp
sub
stc
mov
popf
mov
mov
xor
lret
je
xor
xchg
gs
and
jecxz
movsb
lods
xchg
mov
out
scas
push
sub
ds
dec
or
jns
mov
cmp
in
xchg
xchg
xchg
mov
xchg
sub
pop
arpl
out
fstps
mov
incb
mov
jmp
pop
sar
outsb
cmpsb
mov
and
xchg
jno
sbb
and
or
adc
mov
jno
pop
insl
and
mov
incb
push
mov
adc
and
inc
ret
into
jmp
addr16
pop
jle
pushf
dec
push
xor
mov
ficompl
idivb
jae
je
movsl
mov
xor
outsb
test
and
sahf
std
push
jp
imull
xor
test
jbe
movsb
stos
cmp
insb
dec
outsl
dec
push
pop
lds
jbe
roll
mov
or
clc
fsubrl
test
das
mov
fidivrl
shrl
imul
out
es
cmp
dec
jp
lahf
and
stos
pop
aad
jg
mov
movl
xor
inc
int3
scas
and
adc
hlt
rcrl
sbb
mov
jp
test
shl
sti
push
out
xchg
aas
data16
in
jmp
jecxz
popf
insb
push
aam
mov
jmp
mov
std
inc
jno
mull
mov
xor
mov
sbb
scas
or
mov
and
add
in
sbb
mov
lret
xlat
loop
adc
lods
aam
jns
lahf
orb
push
cmp
mov
outsb
scas
sti
mov
fcmovnb
mov
push
test
xchg
mov
mov
loop
pop
icebp
inc
xchg
daa
jno
divl
scas
lcall
add
aaa
push
inc
mov
push
or
pop
dec
insl
std
cmpb
xor
jnp
add
xor
pop
test
lods
jne
loope
sub
xor
mov
xor
lock
adc
xchg
call
repnz
pop
aas
lds
mov
test
sbb
mov
push
shlb
nop
or
and
nop
outsb
shrl
dec
push
cmp
js
outsb
scas
nop
xchg
cmp
and
push
shrb
sbb
xor
repnz
lock
cmpsb
pushf
pop
mov
enter
mov
mov
je
sbbl
mov
adc
into
insb
cltd
mov
out
into
rol
rolb
pop
pop
cmpsl
hlt
ja
adc
les
lret
lret
jl
sahf
jp
testl
mov
hlt
push
push
mov
inc
into
repnz
and
jle
lds
shll
sahf
pop
lahf
jae
ficompl
sbb
mov
ja
mov
inc
inc
mov
pop
cmp
dec
push
xchg
aam
popa
pop
pop
in
add
push
loop
mov
inc
rorl
jp
push
and
stc
fnstsw
insb
loopne,pt
or
shl
enter
adc
arpl
xchg
mov
out
inc
mov
xor
jbe
push
lcall
add
fs
push
repnz
leave
int
mov
adc
js
sub
iret
jmp
mov
inc
sub
movsl
lods
add
js
lcall
in
popa
add
out
or
mov
xchg
movsb
cmp
int
in
jb
dec
mov
sub
xchg
dec
sub
push
ret
mov
jle
in
dec
jns
hlt
jb
repnz
cmp
jg
sbb
xchg
cld
mov
inc
add
rol
ret
and
jbe
leave
call
jne
mov
cwtl
testl
push
call
inc
pop
addb
adc
iret
movsl
cwtl
push
test
and
pop
push
int3
loope
mov
enter
or
mov
lock
add
out
adc
inc
stos
jne
cli
pop
orb
sbb
sbb
dec
push
mov
test
test
push
pushl
pop
imul
andb
push
cmpsb
or
out
jecxz
call
mov
popl
jns
sahf
fdivs
dec
fwait
jns
xlat
aaa
cmpsb
xchg
lcall
scas
sub
stos
pop
cmc
cmp
adc
pop
jecxz
nop
addb
mov
push
jns
sub
inc
cmp
leave
pop
pusha
cmp
mov
pop
pop
call
fistpll
or
rorl
lahf
sbb
push
jp
add
mov
xor
add
ds
pushf
xor
pop
mov
lret
in
xor
ljmp
push
cltd
mov
repz
mov
stc
data16
push
shrl
xor
subb
inc
jne
scas
mov
or
mov
adc
repz
xor
and
and
jo
fdivrl
mov
lret
push
mov
sbb
cmp
and
push
push
loop
lcall
hlt
enter
dec
pop
dec
pop
xor
out
jp
call
lret
test
cltd
scas
cmp
leave
mov
sbb
mov
push
pop
and
in
sub
out
and
mov
in
inc
sub
pop
push
add
adc
mov
or
mov
notb
xor
mov
ljmp
divb
push
lret
iret
in
insl
jle
pop
lahf
es
mov
imul
push
lock
jmp
push
ljmp
lret
mov
cld
sub
add
adc
jnp
shrl
and
fsubrl
sub
je
push
fisubrl
pushf
add
data16
bnd
stc
test
cmp
add
ret
shr
sarb
lahf
jmp
fistl
xor
xchg
mov
xor
jg
xor
jle
xchg
loop
gs
push
dec
cmpsb
jecxz
xchg
sub
mov
mov
into
adc
leave
das
std
jecxz
xorb
xlat
mov
push
roll
mulb
lcall
dec
jecxz
insl
inc
xor
or
shr
imul
stos
test
and
push
gs
inc
mov
or
cli
std
int
or
in
out
insl
bound
inc
mov
rclb
hlt
cmp
es
inc
xchg
lret
pusha
mov
repz
repz
aad
ljmp
cmp
xchg
jl
pusha
jmp
add
push
std
inc
xor
xlat
cmp
hlt
lcall
out
shlb
cmp
pop
mov
xchg
sbb
mov
jb
enter
fnstcw
aad
xchg
aaa
sbb
leave
nop
xchg
add
mov
shlb
jnp
loop
and
mov
enter
sbb
test
ror
push
adc
mov
inc
mov
dec
call
sub
imul
lcall
sbb
leave
adc
dec
xor
xor
sbb
into
jg
repnz
or
cmp
outsb
push
or
aad
mov
jmp
xchg
andl
movsl
jmp
ljmp
sbb
sbb
sbb
pop
mov
popa
testb
mov
cmp
rcrl
insl
movsb
pop
mov
ret
push
icebp
push
pushl
inc
mov
je
cmp
sub
popf
sub
out
scas
or
insb
push
fstp
dec
stos
pminsw
cmc
jne
pop
lahf
xchg
sbb
into
mov
pop
mov
xchg
xor
ljmp
jge
add
fmuls
mov
divl
shl
and
sbb
xchg
or
pop
and
jo
daa
inc
dec
sahf
insb
sbb
clc
in
sbb
jne
ficompl
sub
jmp
lea
cmp
sbb
fs
lea
mov
in
and
or
aad
imul
nop
xor
and
add
pop
out
jg
jmp
jno
sub
fisubrl
sbb
add
out
xchg
movq
into
addl
cmp
xor
add
das
jnp
jo
repz
jae
xchg
jp
lods
fadds
enter
push
in
pop
pop
loopne
lock
and
popa
xchg
jno
pop
push
mov
test
xchg
or
jg
gs
xchg
test
push
mov
mov
movsl
mov
and
jmp
mov
cwtl
push
test
cmp
and
fucomi
xchg
sbbb
xlat
call
jmp
dec
iret
xchg
cmp
divl
shll
sbb
jne
lahf
mov
and
pop
push
jne
fwait
lret
and
xchg
adc
sbb
gs
sbb
lahf
pop
sbb
lods
or
dec
sub
cmc
ljmp
ds
bndldx
stos
mov
sbb
cs
in
mov
or
aad
jmp
shrl
mov
or
mov
sub
scas
testl
jbe
xchg
outsl
or
es
pop
cmp
push
lock
sub
das
push
sbb
xchg
inc
and
pop
cmpsl
daa
int3
mov
pop
or
gs
xor
and
xchg
std
out
dec
inc
ds
adc
addl
dec
xchg
xor
pop
mov
punpcklbw
cmp
sbb
pop
dec
xor
movsb
out
cmp
sub
dec
pop
add
test
movsl
pop
xor
loop
push
les
sub
dec
bound
adc
add
xchg
sbb
add
cmp
jecxz
sub
jle
js
fiaddl
sbb
mov
mov
mov
mov
inc
daa
or
xchg
fistpl
faddl
nop
mov
sbb
clc
dec
movsb
hlt
dec
or
loop
mov
cld
mov
pushf
pop
icebp
jo
jae
add
clc
pop
mov
sahf
pop
pop
mov
push
call
cmp
push
push
push
fsubs
fs
cmpxchg
cmpsl
int
pop
jmp
lock
out
or
sbb
fildl
xchg
out
dec
fidivl
adc
push
adc
add
ja
or
and
jno
mov
jge
jl
adc
cli
shll
or
mov
incb
fisubl
add
bnd
cwtl
push
adc
loop
fnsave
out
xor
cmp
or
pop
ljmp
xchg
nop
arpl
stc
dec
repz
xchg
imul
in
jbe
mov
or
aad
mov
stos
adc
lret
test
cmpsl
xor
push
push
fs
orl
sbb
sub
cmpsl
and
sub
dec
cmpb
jp
sbb
add
mov
sarl
shll
mov
inc
out
push
and
int
cwtl
adc
pop
std
jns
das
xor
jae
jle
les
push
mov
hlt
jnp
jae
sbb
out
add
sbb
out
aas
lods
dec
div
fildll
adc
jmp
cmpsb
rcrl
dec
push
fadd
mov
pop
rol
sbb
lcall
adc
sub
imul
adc
out
mov
js,pt
cld
pop
sub
sbb
test
jl
in
add
pushf
cmp
mov
aas
and
dec
cmp
mov
das
inc
int
out
pushf
hlt
jl
in
icebp
sbb
mov
pop
cmp
out
push
lock
les
fistl
cmp
mov
mov
testb
int
sub
mov
jnp
addb
push
fsubrs
int3
push
jb
sub
mov
decl
mov
inc
inc
inc
dec
xor
xor
and
pop
sub
sub
jg
mov
and
pop
pop
fbld
jp
lods
sarb
leave
push
sbb
mov
mov
jae
push
adc
pop
dec
sub
sub
in
loopne
and
int
xor
popa
js
jl
jmp
lret
mov
daa
jp
sahf
xor
sahf
pop
loope
orb
inc
inc
addr16
mov
adc
fdivrl
lahf
hlt
dec
pop
in
inc
iret
into
xchg
pop
push
stos
xchg
in
imul
cmpsb
add
fists
lock
js
imul
mov
mov
popf
add
sub
adc
ret
mov
sahf
sbb
push
push
fisubrl
inc
xchg
jp
dec
xchg
mov
mov
mov
les
add
out
lahf
fnstenv
jecxz
pop
lea
lods
movzbl
in
notb
lock
fildll
adc
inc
es
cltd
dec
ret
mov
mov
jp
jns
adc
jle
fisubrs
push
cmp
push
out
inc
cmpsb
fnsave
lock
push
mov
inc
out
scas
pushf
mov
mov
stc
inc
dec
or
std
add
lea
call
push
mov
and
pop
cwtl
or
jge
lds
orb
sahf
pushf
mov
mov
inc
mov
xchg
inc
jns
sarl
inc
mov
rcll
mov
movsl
out
jle
xor
fsubr
add
xchg
in
sub
dec
fsts
pop
mov
mov
aas
in
pushf
pop
stos
xchg
xor
add
or
dec
xlat
add
hlt
sub
aam
ret
jns
sbb
das
add
xchg
orl
ss
inc
daa
jne
imul
dec
fisttpll
idivl
xor
icebp
xor
cwtl
mov
scas
cmp
lret
ficomps
or
andl
jecxz
arpl
or
dec
cmp
fwait
cmp
pop
mov
je
xchg
outsb
lock
pop
lods
cwtl
or
out
cmpsb
adc
cmc
loopne
jecxz
scas
insl
pop
sahf
mov
adc
jbe
lcall
divl
jns
fwait
mov
xchg
pushf
aaa
scas
and
or
iret
push
test
mov
xor
xchg
sub
popa
sbb
xchg
xlat
pusha
adc
push
jno
pop
gs
xor
inc
xchg
int3
or
sarl
sub
mov
xchg
sbb
fisttps
sbb
xchg
test
add
in
fcoms
adc
xchg
xchg
add
inc
xchg
std
dec
jp
pop
push
dec
movsl
sbbl
scas
jp
adc
insb
mov
es
add
lds
test
or
cmp
adc
lret
push
and
mov
sbbl
and
xor
xor
xor
cmpb
movsb
dec
stc
and
xor
mov
imul
lods
pop
xor
xor
cmp
mov
roll
pushf
mov
mov
pop
pop
and
jb
sahf
les
fdivr
je
dec
fidivrl
xor
or
inc
and
mov
add
mov
gs
jnp
stc
mov
pop
cmp
je
jbe
push
fstl
ljmp
jp
sub
rcrl
lcall
out
stos
sbb
loopne
pusha
adc
mov
or
adc
xor
cmp
mov
daa
mov
mov
mov
ss
dec
int3
fiaddl
mov
insb
aas
jg
and
imul
pop
dec
ret
loop
out
adc
clc
int
cmp
dec
popa
shl
mov
jge
sbb
imul
and
aad
stos
jg
jg
pop
in
pop
out
push
ficompl
cmp
lcall
clc
in
jle
cmp
mov
jb
sbb
jae
lds
insl
call
sbb
add
adc
xlat
ja
clc
out
jae
test
mov
out
sbb
or
das
outsb
jbe
leave
push
push
push
pop
add
loop
jae
add
test
orb
data16
fisubl
xor
mov
dec
pop
xchg
fidivl
cmpsb
cs
je
fimull
test
or
jmp
sbb
inc
mov
xchg
jb
scas
stos
push
lcall
fstpt
pop
into
jle
xor
and
mov
imul
call
shrd
lcall
addr16
jns
jle
cmpsl
sub
xor
lods
adc
pushf
and
sti
mov
aas
sets
xchg
in
inc
cmpsb
mov
mov
rcl
adc
ret
ret
add
in
mov
inc
imul
cltd
mov
lcall
out
mov
pop
std
sub
dec
outsl
dec
jb
icebp
fdivp
loop
dec
fnstcw
daa
arpl
iret
cmpsb
movsl
or
dec
sbb
xchg
sbb
rorb
xor
out
fildll
ds
shr
push
xor
sti
inc
jle
scas
fistpl
scas
pusha
jbe
movsl
dec
out
stc
jecxz
addr16
movsb
mov
iret
push
and
jle
sub
stos
jne
xor
dec
in
inc
incl
idivl
adc
sub
xlat
jmp
outsb
push
roll
inc
mov
fs
hlt
pusha
push
xchg
repz
js
insl
ret
cmp
jae
add
test
mov
and
xchg
lahf
cmp
jmp
out
testb
xchg
add
push
dec
jge
idivl
scas
adc
sbb
cmp
int
ja
data16
addr16
push
jmp
dec
sub
das
ret
cmpl
cmp
xor
outsl
jbe
jecxz
adc
push
popa
insl
dec
dec
jno
ret
pop
push
add
xor
ss
push
cmp
add
shlb
mov
sub
mov
jno
and
xor
popf
sbb
jno
clc
cmpsl
movl
shll
adc
test
or
xchg
pop
pop
xchg
push
sbb
cs
ljmp
sub
fisubl
into
xlat
inc
or
leave
push
adc
xchg
outsl
clc
push
adc
inc
inc
out
call
sbb
pusha
mov
insb
mov
inc
outsl
jno
pop
aas
adc
icebp
mov
xlat
sti
sahf
aad
data16
dec
add
dec
insb
jmp
pop
pop
cmp
and
inc
or
shrb
add
scas
test
stos
out
ljmp
lret
ljmp
hlt
mov
pop
pop
pop
jl
mov
jg
mov
sub
arpl
pushf
xchg
mov
test
shl
dec
mov
jmp
inc
rorb
xchg
sbb
setge
pop
jbe
jmp
sbb
ljmp
mov
xchg
leave
stos
outsb
shlb
out
cmp
pop
out
insb
or
inc
sub
loop
pop
loopne
xchg
pop
gs
push
push
sbb
sbb
mov
int
jmp
push
inc
sub
dec
or
adc
sbb
push
cmp
dec
out
test
jg
icebp
lds
lods
stos
push
jnp
mov
scas
imul
imul
cli
jle
lock
es
rclb
xorl
mov
sti
cli
ljmp
mov
lcall
pop
mov
and
inc
pop
testb
lods
shll
stc
add
mov
sub
test
pop
adc
adc
pop
push
cmc
aaa
adc
dec
mov
or
gs
loop
push
or
jae
jg
ss
cmp
push
pop
xchg
sbb
jno
inc
jbe
lea
xor
cmc
lods
hlt
movsb
or
rcrb
adc
test
mov
pop
data16
push
push
adc
mov
push
or
inc
and
mov
inc
clc
xchg
scas
pop
jg
out
pop
in
insb
push
mov
aad
mov
xchg
sub
sbb
pop
mov
ffreep
push
negl
je
xchg
ljmp
sub
inc
mov
cld
adc
int
int3
fidivrs
xor
aaa
rclb
mov
addb
jno
xor
test
sub
sub
ret
jmp
data16
jl
add
or
adc
sbb
out
sub
and
scas
in
pop
mov
insl
sti
outsl
in
mov
mov
fwait
jg
push
enter
and
sub
shll
adc
fidivl
xchg
enter
loope
xchg
int
mov
jnp
mov
xor
mov
cmp
cmp
xchg
add
mov
aam
pop
lcall
xor
fcompl
popf
pop
jb
jl
lcall
clc
aaa
mov
mov
fisttpl
into
lods
stc
or
test
push
pop
sbb
pop
push
loopne
fninit
ss
rorl
inc
jecxz
cltd
inc
mov
xchg
popl
jmp
dec
ds
cld
ret
les
hlt
dec
sbb
sub
movsb
cmp
or
jno
xor
popa
cmp
sahf
out
ds
pop
add
dec
sar
dec
and
xchg
ljmp
lock
jl
lods
mov
push
jmp
mov
repnz
xchg
sub
int
mov
inc
stos
hlt
fmul
jne
int3
aad
pop
mov
push
cli
cwtl
jns
add
lret
int
pushl
daa
dec
xlat
das
sub
inc
cmp
push
adc
mov
insl
push
ret
rcll
subb
jmp
push
mov
mov
jnp
pop
das
repz
cld
dec
add
lea
into
sub
loop
or
out
add
inc
jle
adc
dec
and
dec
adc
sub
mov
in
loopne
dec
cli
subl
je
cmp
pop
fwait
inc
mov
adc
cmp
push
pusha
dec
rolb
ss
sub
aam
sub
scas
addl
mov
jbe
into
mov
or
cs
int3
insl
mov
pop
aas
mov
xchg
push
inc
movsb
fs
lea
cld
loopne
jnp
mov
push
loop
cmp
push
mov
mov
scas
pop
aam
push
xor
nop
cmp
ss
fldcw
roll
push
rcll
les
out
cmp
jbe
xchg
mov
adc
adc
clc
cltd
mov
sbb
rcrl
pop
sbb
icebp
mov
push
cmpsb
mov
mov
fidivrs
pop
imul
pop
lcall
sbb
std
repz
cltd
test
and
jecxz
dec
jno
insl
fnstenv
sbb
push
xor
pop
mov
sbb
rcl
outsb
xchg
add
add
jne
pop
in
push
sub
add
jnp
mov
add
or
lret
je
cwtl
loop
stos
jecxz
mov
or
mov
push
mov
jbe
jne
cli
jb
adc
push
js
insl
int
or
xor
stos
push
gs
clc
xor
xor
and
jns
in
int
mov
pop
add
mov
ret
push
mov
cmp
add
gs
push
and
mov
or
push
insb
leave
es
inc
dec
scas
push
push
jbe
push
jo
pop
ja
add
imul
int
jb
adc
push
dec
jge
inc
out
push
mov
cmp
cwtl
das
xor
pop
push
out
cmp
lods
adc
sub
and
lds
inc
jecxz
push
adc
mov
pop
fstp
xor
and
hlt
sbb
push
jae
lret
scas
xorb
shr
popf
adc
mov
sbb
ss
mov
adc
scas
jbe
arpl
sub
lcall
sub
adc
dec
cmp
mov
mov
outsl
mov
shlb
jg
or
test
loope
adc
mov
mov
mov
sub
pop
jge
imul
outsl
jle
in
ja
or
dec
jno
xchg
outsl
outsb
jb
jb
es
or
pop
and
pop
jg
and
pop
aam
mov
xchg
dec
cmp
inc
sbb
cs
or
out
adc
xchg
jge
mov
std
push
inc
push
add
andb
shl
in
lahf
sbb
mov
pop
pop
fldt
cmp
in
int
jecxz
xor
xchg
lret
dec
ficoms
or
pop
dec
movsl
inc
mov
mov
adc
int3
in
push
and
pop
clc
mov
inc
lock
hlt
out
xor
repz
outsl
stos
inc
fldt
push
ss
xchg
mov
cmpsb
subl
pop
loopne
or
ficompl
cmp
je
scas
or
push
adc
adc
ret
xchg
inc
pop
ljmp
daa
in
adc
jecxz
incb
pop
jl
icebp
ds
loopne
xchg
cmp
cli
inc
jne
adc
cmc
sub
pop
sbb
pop
jne
ss
lcall
sahf
push
xor
adc
stos
cmc
lock
xor
push
in
xlat
shll
inc
mov
ret
in
cmp
push
inc
pop
push
out
ja
lock
add
pop
test
pop
mov
jmp
mov
dec
mov
ja
out
jbe
cmp
repnz
aas
jnp
jne
or
inc
sar
cld
leave
std
orb
out
gs
cltd
clc
or
mov
mov
pop
enter
repz
add
add
cld
imul
imul
mov
dec
std
push
insl
and
in
popl
xor
jb
mov
out
outsb
xor
add
jo
rorb
and
mov
mov
xchg
out
adc
loope
sbb
sbb
aas
cltd
ret
and
add
push
outsl
or
scas
sub
cmp
pop
dec
fistpl
xchg
adc
adc
das
mov
jns
or
dec
jecxz
add
jmp
cmc
jl
fsubs
in
mov
js
add
mov
leave
sbb
js
mov
mov
and
inc
mov
shll
daa
cmp
push
adc
mov
jecxz
popf
mov
aam
sub
xlat
addr16
push
in
or
inc
into
xor
pop
lock
gs
stos
insl
pop
push
scas
out
mov
dec
mov
lods
dec
shrl
mov
push
icebp
ds
fstpl
push
ret
xchg
das
lock
jae
inc
pop
mov
adc
dec
bound
pop
dec
lcall
cmp
mov
in
jmp
inc
cmp
xchg
jb
push
pop
mov
pop
call
adc
jl
fdiv
jns
push
out
je
js
scas
jmp
fs
call
cli
inc
popa
add
pop
mov
pop
imul
xchg
xchg
fildl
call
pop
loop
popa
sbb
mov
jne
idivb
mov
adc
add
imul
cmp
mov
sbb
jl
movsl
lea
mov
cwtl
jle
jae
lahf
pop
dec
out
xor
imul
add
xchg
das
ljmp
pop
xchg
sarb
loop
jge
dec
orl
or
out
shrl
xchg
out
fildl
adcl
mov
loope
sti
clc
lds
into
mov
xor
or
shlb
fimuls
cmp
mov
jae
mov
stc
add
cmp
aam
loop
out
xor
and
fstps
fiaddl
out
fisttpll
out
std
xor
cltd
int3
sbb
mov
xor
icebp
push
add
sbb
sub
inc
addl
sub
mov
data16
cmc
mov
scas
ja
xchg
mov
push
in
or
add
sbb
les
loopne
adc
mov
aam
mov
jnp
mul
and
cmpsl
xchg
iret
lock
jmp
jl
stc
mov
iret
mov
inc
addr16
adc
xor
inc
inc
mov
ds
cld
or
xor
loopw
sbb
push
lcall
and
mov
push
jmp
mov
shrl
dec
fcomi
adc
mov
mov
and
add
rolb
jg
hlt
repnz
push
and
pop
mov
test
cmp
mov
add
adc
sbb
shlb
fisubs
mov
push
push
mov
in
push
jbe
push
inc
outsb
loope
cmp
es
pop
add
subl
xchg
dec
in
repnz
xchg
jbe
std
xor
test
sbb
jae
push
in
sub
mov
sete
test
into
cltd
and
pop
in
mov
mov
outsb
or
cmp
fs
cltd
sub
xchg
sbb
xchg
icebp
push
push
arpl
faddl
or
fs
repz
pop
push
cmp
fisubrl
adc
daa
jp
arpl
cli
jo
stc
push
and
mov
jp
cmp
pop
dec
mov
push
jge
inc
repz
movsl
adc
test
fsubr
std
dec
cmpsl
jo
fs
lock
enter
mov
js
jmp
stos
sbbl
fs
movsl
bound
rolb
scas
xchg
fwait
std
mov
loope
inc
imul
jl
cmp
adc
inc
fdivr
pop
jp
rolb
mov
or
nop
xchg
push
dec
jno
jg
sbb
out
xchg
xchg
mov
cmp
stos
xor
sarb
adc
adc
enter
lret
sub
pusha
int
push
and
popa
mov
dec
js
idivb
inc
xor
cmp
xchg
call
enter
insb
dec
or
call
xor
push
pop
xor
jbe
add
cmp
in
es
cld
negb
xlat
xor
outsl
loope
fidivrs
clc
cmpsl
adc
pop
sub
mov
icebp
pop
add
ss
adc
lock
fstpl
mov
movsb
fldenv
mov
sbb
adc
cmp
lret
inc
xchg
adc
mov
in
xchg
sbb
and
mov
xchg
xor
out
stos
int
pop
dec
lea
mov
mov
pop
mov
and
xor
orb
jbe
and
aad
cmp
fcomi
lahf
pop
jge
data16
xor
sub
clc
out
ss
scas
dec
fwait
aam
rcrl
xor
mov
push
mov
aaa
xor
adc
clc
out
pop
mov
or
pop
fisubl
ljmp
mov
or
movb
xchg
push
xor
xchg
rol
and
cld
lods
in
xchg
arpl
cmp
dec
aaa
int3
out
sub
lahf
pushf
mov
cli
lret
cld
adc
mov
cmp
sub
jle
lcall
dec
repz
jno
sub
and
ret
mov
dec
dec
notb
pusha
adc
cmc
cs
pushf
push
push
inc
cwtl
or
fsubrp
xchg
xchg
mov
xor
repnz
stc
dec
pusha
pop
push
gs
clc
mov
push
sub
dec
in
push
pushf
adc
jge
push
xchg
daa
sbb
out
icebp
push
clc
jge
xor
ret
pop
icebp
fcmovne
aas
or
ljmp
lret
dec
bound
ss
ss
adc
lods
pop
cmp
cmp
in
fstps
in
fisubs
mov
lahf
test
and
popf
sahf
prefetcht1
in
pop
push
adc
mov
stos
push
jge
iret
sbb
xchg
fcmovnu
fdivrp
xor
mov
shlb
pop
mov
sub
js
loopne
push
addb
cmpsl
int3
xor
sub
dec
rcr
in
sbb
mov
je
xchg
mov
aaa
sti
ljmp
ds
nop
xlat
popf
dec
insb
or
and
add
pop
movsb
push
xor
xlat
in
daa
inc
int3
adc
std
mov
pusha
movsl
es
sub
and
lahf
lods
jo
pop
dec
or
pop
jle
cmp
mov
cmp
cmc
enter
mov
sub
es
lcall
mov
insl
and
inc
movsl
mov
lret
pop
ret
mov
dec
cmp
jg
jbe
add
lea
xlat
ja
ret
jmp
fldcw
xlat
mov
jl
in
jg
xor
push
dec
adc
cltd
ja
leave
aam
push
jns
loope
imul
cmp
xor
dec
inc
lret
repnz
movsb
xor
and
scas
aam
fnstenv
aas
hlt
in
int3
cmp
cmpsl
jle
jg
pushf
jne
pop
fldl
in
and
sub
sub
ss
loopne
cmp
add
mov
or
jl
sqrtps
sti
dec
xchg
xor
or
icebp
sub
call
sub
cltd
leave
jge
jo
lahf
sti
loop
repz
xchg
mov
mov
inc
out
and
or
inc
cmp
out
mov
dec
sub
pop
jns
ret
or
mov
out
mov
cmp
cmp
push
push
and
lahf
pop
inc
mov
out
dec
loop
cmc
mov
lods
fadds
jae
test
sahf
lcall
nop
or
cmc
xchg
sub
and
pop
add
out
xor
add
mov
les
in
and
loope
or
sub
xor
mov
jns
incl
scas
xchg
repnz
aas
push
dec
add
mov
daa
stc
sub
fwait
push
daa
cmc
jmp
insb
mov
pop
xchg
aad
jecxz
and
int
sbb
data16
ret
sub
mov
cmp
mov
sahf
nop
push
inc
aam
mov
outsb
adc
mov
dec
jae
dec
jle
int
decb
xchg
int3
aas
and
or
cmp
fistpll
and
sbb
or
or
and
add
cmp
stos
xchg
pop
jecxz
xor
or
or
jae
dec
push
push
pop
xchg
dec
sub
negb
dec
xor
sub
ss
stc
mov
pop
jne
push
ret
call
loop
ret
in
cmp
outsl
stc
jge
imul
cmc
insb
out
test
rcl
dec
add
lods
pop
gs
dec
sub
sub
shrb
lcall
push
lock
push
mov
pop
xchg
jno
stos
adc
push
push
add
mov
sbb
movsb
mov
jbe
pop
imul
iret
out
test
mov
into
sbb
cld
push
outsl
mov
jmp
test
push
push
std
and
and
jmp
mov
or
lea
and
sti
cli
inc
cmpsl
sub
jp
inc
mov
lock
dec
and
cmp
and
jl
jge
lds
jns
shll
jmp
jns
pop
leave
ret
popa
and
and
push
mov
add
jmp
mov
out
repnz
in
inc
push
sbb
dec
out
loopne
cmpxchg
daa
ret
mov
mov
push
loop
push
mov
lods
lsl
fwait
lock
cmp
mov
add
dec
frstor
jle
xor
add
mov
ret
dec
cltd
fstp
or
ljmp
shl
pop
je
scas
adc
mov
cmpb
cmp
stos
push
repz
mov
adc
fwait
mov
dec
jecxz
sub
dec
aas
or
out
dec
and
mov
frstor
sarl
and
sub
pop
aas
xchg
cwtl
push
in
stos
divb
lods
cltd
shrb
cmpsb
orb
stos
popf
pop
int
outsl
jecxz
xor
pop
sub
sub
cmp
test
cmp
xor
sbbl
pop
mov
mov
in
mov
pop
pop
call
sbb
add
adc
sti
cmp
or
dec
inc
movsb
int3
lret
popa
push
loop
mov
push
push
xchg
sbb
jle
inc
and
xchg
xorl
test
push
das
inc
mov
sbb
scas
stos
add
or
mov
adc
push
popf
xchg
lods
mov
sbb
int
lods
or
jns
out
adc
into
mov
in
push
pushf
mov
bound
pusha
insl
add
pop
jle
test
pop
stos
push
rcrl
or
pop
mov
mov
sarl
outsb
xor
pop
jmp
dec
fdivr
lds
ret
push
dec
inc
jl
add
adc
push
andb
loope
int
and
and
inc
add
imul
cmpsb
pop
jecxz
dec
ret
lcall
test
xchg
jle
push
sbb
dec
xor
ret
mov
jae
sub
xchg
lods
pushf
sti
jle
mov
in
inc
inc
out
xchg
xchg
sub
ficomps
push
nop
fcompl
dec
jge
pop
sub
mov
sub
shrb
lods
jmp
loope
iret
mov
test
mov
and
in
or
js
adc
out
sbb
adc
inc
ficomps
ret
addr16
push
or
jle
adc
in
shl
xchg
ficoms
push
pusha
mov
or
outsb
add
adc
or
pop
xchg
add
fwait
xor
lds
outsl
roll
pushf
andl
add
pop
int
or
das
add
adc
sub
aam
ljmp
mov
jae
add
cltd
mov
dec
stos
xchg
movsb
push
in
rcrl
sbb
mul
cmp
mov
popa
or
xor
mov
into
dec
addr16
jnp
xchg
xor
xor
fnsave
pop
outsb
adcl
mov
clc
jo
call
mov
add
cld
je
lods
enter
inc
std
insl
sub
cmp
mov
and
add
cld
movsl
mov
scas
daa
lea
sub
dec
push
pop
inc
push
push
push
sub
mov
mov
sarb
fisttps
daa
mov
sub
mov
andb
cltd
mov
inc
imul
in
movsb
xlat
mov
in
shrl
and
add
aas
outsl
inc
sti
cmp
xor
movsl
xchg
stc
ss
cmp
jae
sbb
sahf
push
inc
dec
jnp
outsb
pop
stc
push
mov
ss
sbb
push
daa
in
add
test
ficoms
addb
push
jae
cwtl
pop
jg,pt
lcall
call
scas
pop
pop
int
pop
dec
pop
pop
loopne
cmp
int
mov
rcll
in
lock
push
mov
fwait
pusha
nop
rcpps
outsb
ret
es
pushf
imul
gs
dec
and
mov
aas
pop
dec
jl
xor
in
bound
icebp
hlt
test
pop
pop
xor
and
repz
mov
cmp
cmp
mov
in
or
jbe
test
mov
outsl
sub
jno
incl
into
sti
or
lahf
loope
dec
jmp
inc
pushl
nop
jae
dec
jne
cmp
add
fsubrl
or
repnz
pop
jmp
in
xchg
lret
xor
xchg
mov
mov
dec
sahf
and
add
cwtl
mov
pop
xchg
inc
xchg
pop
aaa
mov
mov
jb
cltd
pop
mov
cmpsl
adc
popf
insl
push
cs
xor
mov
js
outsl
push
loopne
pop
aam
xor
insb
addb
pop
fidivl
ret
lahf
mov
data16
call
dec
mov
push
jae
or
cltd
push
lahf
and
mov
or
insl
inc
and
xchg
int3
xlat
dec
cwtl
out
dec
imul
mov
addr16
inc
mov
cmp
int3
sub
jle
data16
lret
cmpsl
out
sbb
and
sbb
and
mov
or
lret
loope
xchg
sub
aam
dec
jle
pop
or
jg
or
sbbb
sub
sub
push
pusha
add
rol
movsb
jecxz
push
mov
es
jp
icebp
jbe
and
test
ret
mov
ficoms
mov
or
aam
flds
psubq
jecxz
jle
test
imul
inc
mov
jle
push
cmc
into
pop
popa
jecxz
push
jo
lds
cmp
mov
in
popf
mov
lds
push
cmp
out
fldt
mov
sbb
push
mov
xlat
lret
pop
sarl
pop
inc
aad
subl
stc
nop
inc
xchg
cmp
lahf
push
push
xorb
mov
xor
cmpsl
push
stos
rcrl
cltd
outsb
stc
add
les
in
xlat
jp
pop
leave
fs
fnstenv
and
cwtl
rcr
add
icebp
mov
out
gs
or
data16
stos
ljmp
int
dec
mov
es
out
out
pop
xchg
mov
push
pop
lock
fwait
xor
data16
and
lret
adc
fstpl
dec
adc
inc
aaa
out
pop
add
ja
mov
das
jg
int3
mov
add
pop
lds
scas
repz
push
test
adc
mov
out
outsl
push
xchg
das
cltd
sbb
fwait
call
pop
adc
movsl
xor
pop
jnp
imul
int
and
aam
push
lea
fdivrl
loop
mov
test
push
mov
dec
push
mov
rolb
or
xchg
and
sbb
mov
add
fwait
adc
xchg
xchg
rorl
push
or
aam
and
add
mov
mov
insl
xchg
and
cmp
pop
cld
notb
inc
stos
or
lret
pusha
mov
mov
ds
jg
mov
fwait
and
push
scas
mov
xchg
push
and
cltd
hlt
lods
mov
insb
in
rcrb
popf
pop
pop
xchg
mov
or
sub
jmp
daa
or
fs
fadds
mov
lods
sbb
subb
mov
and
push
mov
xorl
push
and
pop
push
sbb
das
je
ljmp
jle
and
push
xor
int3
mov
mov
pop
pop
mov
cld
test
add
jmp
fimuls
push
mov
xor
adc
pusha
inc
push
pusha
jae
push
aaa
cmp
inc
imul
lcall
mov
xchg
dec
out
and
or
cli
xor
mov
and
pop
popa
shlb
daa
arpl
in
push
push
popa
push
hlt
push
inc
cmp
lods
jae
or
fisubs
jg
cmp
xor
lahf
imul
jb
jecxz
dec
mov
sbbb
out
insl
fsubrl
call
daa
dec
or
push
adc
pop
lods
aas
ret
jl
pop
dec
jne
push
mov
adc
ret
mov
mov
add
enter
push
out
jo
sub
mov
xor
shrl
pop
cmpsb
fstp
psubd
ffree
orb
sub
mov
out
enter
xchg
push
sub
xchg
lcall
or
int
pop
loop
xchg
movsl
xchg
stos
pop
jg
inc
test
push
cmp
inc
jp
sbb
aaa
or
inc
dec
loope
ret
jo
pop
mov
in
jl
repz
hlt
xor
aam
jbe
test
pop
cmpsl
xchg
mov
jl
and
cmpl
push
cmp
loop
popf
mov
test
out
insb
inc
xchg
idivl
or
test
call
pop
aaa
cmp
mov
adc
ret
loope
xlat
lea
leave
imul
and
fdivs
negl
repnz
or
daa
inc
nop
mov
repz
fsubs
dec
cmovb
stos
adc
enter
xchg
arpl
out
inc
negl
in
divb
ret
xchg
add
fstl
repz
sub
pop
aad
xor
add
lds
dec
add
xor
pop
stos
or
sub
outsl
pusha
cmp
fnsave
mov
adc
in
ljmp
cmp
aas
pop
pusha
mov
mov
cmp
or
push
pusha
in
inc
sbb
test
push
jg
push
xchg
lock
mov
jmp
fldl
aaa
or
adcb
out
inc
lock
mov
or
jno
mov
cwtl
shlb
imul
testw
out
cltd
sti
xchg
lock
add
stos
repz
lret
jecxz
jo
adc
mov
mov
xor
adc
outsl
sub
push
and
loope
fs
pusha
mov
repnz
movsb
sub
xchg
aaa
pop
sub
xchg
test
aam
enter
push
push
jae
push
sti
jg
fists
or
dec
xchg
int
xchg
clc
clc
jo
add
dec
sub
mov
faddl
push
mov
adc
or
push
in
pushf
imulb
pop
cli
add
jecxz
aad
mov
out
jg
and
push
outsl
dec
and
mov
mov
dec
push
xchg
pop
mov
gs
rclb
vmaxss
cmpsl
outsb
loopne
push
cmc
xchg
mov
sbb
mov
xor
aas
lods
push
xor
fnstenv
addb
push
repz
xchg
repnz
or
dec
mov
in
and
pop
cmpsb
or
mov
cs
filds
xchg
adc
and
cmp
mov
enter
imul
push
cmp
or
fnstsw
data16
sbb
test
test
aad
jno
in
adc
fnstsw
mov
data16
lcall
xchg
and
adc
or
daa
in
push
daa
addr16
xchg
lds
aam
and
std
test
sub
mov
mov
sbb
loope
sub
pop
push
sahf
fcoml
mov
into
enter
sub
bound
xor
es
or
pop
loope
hlt
pop
fwait
mov
push
and
out
and
addr16
imulb
mov
lea
ljmp
and
add
not
pop
pushf
and
imul
aam
dec
or
adc
scas
out
ljmp
pop
test
pop
daa
jl
fwait
aas
add
loopne
jl
rolb
sub
add
pusha
cmp
movsl
ds
das
xor
sahf
sbb
test
lret
out
int3
and
loop
mov
add
push
gs
std
frstor
lods
jne
xchg
adc
jp
xor
sub
and
jge
fidivrs
out
cmp
xchg
inc
out
in
dec
add
mov
jae
pop
adc
mov
cmpsl
ds
cli
sbb
push
inc
insl
cmp
mulb
in
xchg
test
cmp
in
push
insl
or
mov
stos
mov
dec
push
pop
push
pop
sahf
cmpsl
mov
shl
int3
xchg
dec
sbbb
jo
xor
in
and
int
fisttpll
pop
inc
aas
stc
sub
mov
cmc
repnz
jge
data16
mov
fisttpl
lahf
push
xchg
pop
leave
fs
fadd
fwait
inc
push
cmp
pop
and
cmp
cmc
xchg
jae
or
nop
lret
and
jge
loope
push
fadds
rcr
xor
push
inc
pop
bnd
xor
loopne
add
sub
sbb
bound
dec
out
sbb
std
mov
add
xchg
or
xchg
inc
mov
in
lret
push
fistpll
add
sub
add
mov
sbb
pop
jg
mov
cmp
cli
jno
cmc
sub
inc
fwait
sbb
mov
mov
lods
add
inc
mov
add
inc
cmp
xlat
mov
jmp
push
lods
cmp
pop
ret
or
mov
dec
push
add
sbbl
jp
xchg
sti
mov
imulb
cld
lcall
mov
ret
out
decb
jae
inc
ljmp
push
jp
add
outsl
inc
push
mov
das
xchg
sbb
stos
gs
sarb
pop
add
aad
dec
shrb
xorb
fnstcw
stos
fwait
add
jecxz
pop
mov
js
imul
xor
mov
or
hlt
sbb
push
hlt
lods
adc
mov
ffree
into
jns
mov
lods
sbb
cmp
pop
idivl
mov
stos
inc
lods
and
lea
xor
repnz
xor
call
jno
aad
std
sbb
jae
mov
xchg
scas
sbb
adc
leave
out
test
in
jne
cmpsl
push
ja
jecxz
bound
jmp
xchg
inc
movsl
mov
push
xor
in
sbb
adc
mov
dec
sbb
or
ljmp
sbb
iret
xor
rcrl
std
pop
or
outsl
mov
sbbb
xchg
mov
mov
enter
mov
mov
fldl
int3
sbb
push
pop
mov
js
sarb
push
sub
inc
pusha
psrld
push
in
or
mov
orl
dec
cmp
popf
xor
mov
mov
xorl
in
je
sbb
mov
cmp
inc
mov
shrl
adc
inc
dec
and
imul
adc
js
insb
enter
sbbl
lret
popa
mov
add
push
inc
popf
push
dec
jle
sti
dec
push
fs
jno
cwtl
inc
into
xchg
mov
sub
sub
jo
mov
in
jmp
push
push
stos
ljmp
sub
aam
out
icebp
sbb
sbb
outsl
push
mov
popf
aaa
adc
add
mov
sbb
jmp
ds
sub
xchg
imul
mov
cmp
pusha
dec
gs
sbb
sbb
xchg
dec
jecxz
scas
lods
sbb
je
mov
popa
mov
mov
jne
es
repnz
xor
push
xchg
into
mov
add
xor
jne
jno
mov
inc
push
pushf
or
push
das
cmpb
mov
addr16
fs
pop
adc
or
jb
test
sete
mov
and
daa
push
fidivrl
push
xlat
and
loopne
out
xor
fdivs
iret
sub
inc
inc
into
enter
shl
add
insl
mov
aad
je
jge
fnsave
andl
movsb
cmp
add
inc
push
aam
sub
aas
lods
sub
sti
loope
push
nop
mov
mov
mov
sub
xor
aas
clc
out
xor
pop
lret
sbb
popf
jmp
adc
jns
xor
adc
lods
aaa
ret
xrelease
inc
ss
fdivl
jmp
adc
mov
popa
loopne
cld
test
test
adcb
xor
clc
bound
fsubp
mov
out
leave
sbb
push
mov
aas
sahf
dec
cmp
negb
mov
arpl
jns
push
notb
push
add
sti
mov
or
dec
push
dec
test
jl
ljmp
popf
jp
pop
mov
inc
jno
andl
pop
pop
inc
clc
adc
pop
push
addr16
aaa
repz
loop
or
inc
in
js
jnp
call
or
xchg
mov
sub
fcmovnu
dec
or
jmp
enter
aad
mov
stos
ficoml
daa
cmp
sbb
mov
push
mov
cmpsl
and
or
pop
test
into
jno
outsl
movsl
ret
inc
clc
int
fmuls
ret
aaa
and
lea
outsl
mov
scas
mov
push
mov
dec
jle
jnp
cwtl
add
pand
or
outsl
scas
adc
icebp
outsb
mov
and
fimuls
mulb
cmp
lods
xchg
cmp
push
ret
inc
int
leave
pusha
mov
sahf
mov
lret
leave
outsb
lret
and
incb
xchg
or
adc
cs
stos
outsl
lahf
mov
sti
jne
jg
dec
jg
mov
imul
aam
fisubrl
cmp
mov
pop
and
repz
cvtps2pd
adc
adc
rcr
sub
xlat
pushf
test
push
add
hlt
into
or
out
aas
test
std
mov
mov
int3
xchg
mov
pavgw
and
movsb
push
mov
sub
lahf
push
inc
adc
mov
insl
popf
adc
sarl
int3
pushf
adc
in
jns
push
je
sahf
jecxz
outsl
cmp
int3
and
ljmp
leave
push
rcl
mov
mov
loop
mov
cmpsb
adc
je
xchg
sbb
jae
pusha
xor
int
movsl
jne
js
scas
fsubrl
push
inc
jae
sbb
pop
mull
sbb
cmp
jle
rcll
pop
push
jnp
sub
das
cld
cwtl
inc
inc
xchg
in
jbe
adcl
jne
mov
call
pop
cltd
add
aas
add
das
lods
ljmp
or
cmp
lahf
imul
pop
jne
aad
push
pop
xchg
push
es
aas
pop
call
mov
pop
mov
jge
add
sahf
mov
xchg
sub
call
sub
or
repnz
jle
jno
js
cmp
mov
cmp
cmp
push
xchg
jl
dec
mov
stos
jl
nop
adc
out
aad
scas
pop
daa
xor
jae
test
sub
push
push
pop
fldt
inc
mull
mov
xchg
xchg
add
call
adc
into
inc
movsl
or
xor
arpl
stc
cs
sub
xchg
das
int3
sub
sbb
pusha
sti
test
pop
shlb
ds
sbb
mov
add
out
adc
cmpsb
cmp
inc
je
bound
cltd
xchg
add
jle
cmpsl
repz
lret
je
sub
dec
stos
xchg
and
cmp
outsl
jb
mov
pushf
mov
scas
mulb
int3
shl
jae
jl
pop
mov
stos
pop
pop
cmp
js
mov
push
cmp
shlb
dec
test
ret
sbb
jb
jecxz
or
mov
insl
nop
shrb
mov
adc
sbb
push
test
scas
inc
jbe
mov
loopne
mov
inc
inc
pop
mov
sbb
mov
jg
pop
or
jecxz
push
cmp
and
pop
test
mov
cmc
inc
cli
je
sarl
dec
cld
cwtl
aas
decb
in
enter
leave
and
sbbl
and
data16
push
fisttps
mov
je
pop
cs
scas
and
xchg
push
cmp
aas
sti
test
mov
les
and
sub
xchg
xchg
in
data16
lcall
into
jmp
lret
dec
mov
enter
pop
xchg
ret
rclb
adc
inc
aad
cmp
pop
shlb
testb
mov
movsb
cltd
stos
ficoms
sbb
scas
jnp
push
dec
cmpsb
pop
ret
jg
lods
push
xchg
and
mov
in
or
mov
mov
mov
inc
repz
fwait
push
hlt
dec
shrb
stc
ss
sbbb
ret
xchg
in
or
gs
popa
adc
repnz
fcoms
push
sub
or
inc
mov
lea
int3
mov
xchg
lds
xchg
test
pop
lds
cltd
mov
mov
mov
cmp
std
push
bound
std
insl
mov
cmpl
lds
adc
testl
mov
mov
xchg
sub
stc
push
xor
scas
xchg
adc
lods
mov
ret
pushl
imul
mov
sahf
in
js
xlat
mov
add
xchg
lea
sti
cs
jno
int
outsb
inc
cmp
out
fxch
and
sbb
adc
jbe
jns
std
jns
test
inc
sub
insb
stos
cmpsb
imul
mov
mov
and
xchg
or
inc
lods
lahf
fsubrp
popa
push
ljmp
adc
jnp
int
shlb
jg
pushf
mov
loope
bound
inc
into
rclb
mov
ror
loopne
sbbb
pop
xchg
xchg
into
mov
mov
jne
mov
mov
dec
shlb
dec
mov
out
fsubl
scas
cmp
outsl
adc
mov
stos
jae
cmp
mov
dec
stos
in
xchg
fucomp
mov
push
cli
fbstp
jecxz
ret
std
pop
test
pop
push
adc
insl
sbb
mov
adc
jne
jae
in
jp
lret
jae
xor
or
gs
aas
cmp
data16
add
gs
cmc
mov
pop
loopne
fcompl
push
movsb
mov
loope
mov
inc
fsubs
xchg
jns
adc
popf
adc
jae
jnp
add
bound
mov
mov
jg
xchg
sahf
sbbb
mov
add
push
cmp
test
fs
call
pop
xorb
inc
aaa
insl
pop
mov
dec
in
mov
or
std
cli
repnz
negb
aam
outsl
sahf
sbb
je
xor
iret
pop
out
jno
mov
mov
inc
test
rcl
movsb
mov
mov
aas
inc
jbe
mov
ljmp
movsl
jle
fidivrl
das
pusha
xor
mov
inc
fcomps
xor
cmp
nop
mov
mov
add
or
rol
aaa
sub
or
faddl
daa
mov
les
nop
dec
imul
add
enter
cmpsl
repz
xchg
sbb
lds
test
lods
inc
and
das
jns
ljmp
push
jne
outsl
sub
inc
mov
ret
adc
out
mov
rorl
push
mov
xlat
stc
insb
or
dec
and
stos
sbb
sub
inc
cmpsl
mov
dec
sub
test
mov
imul
rol
dec
sub
adc
jg
pusha
xlat
xchg
cmp
leave
rorl
test
out
push
adc
and
inc
sbb
dec
addr16
ds
xchg
mov
rcll
jg
shr
shrl
dec
mov
shll
lods
or
test
mov
popf
dec
pop
leave
mov
dec
loopne
popf
add
dec
into
into
jecxz
aaa
pop
cmp
popa
lock
mov
loop
sub
in
test
cld
push
inc
pop
jle
jne
jp
adc
adc
in
imul
mov
fidivs
shlb
cmc
and
push
jge
fwait
xchg
icebp
cltd
mov
dec
jl
shl
fcoms
dec
test
mov
inc
sbb
xchg
or
adc
sub
fdivl
pop
icebp
test
jl
lds
xor
or
imul
xor
rolb
sub
pop
add
mov
and
add
repz
pop
push
xchg
jecxz
addr16
int
ret
shl
gs
out
sub
adc
shrl
mov
orl
ja
shll
push
pop
push
pusha
mov
sbb
dec
push
into
call
cwtl
jmp
outsl
mov
stos
rclb
jmp
jns
mov
xchg
pop
loop
or
ret
movl
lea
and
movsl
xchg
push
stc
test
popf
and
xchg
movb
pop
loopne
data16
xchg
lea
test
loope
xor
cmpsb
push
cmp
sbb
iret
adc
inc
hlt
add
and
add
cmp
dec
add
or
sbb
mov
push
xchg
jbe
sti
pop
cmp
add
jae
dec
insb
add
into
lret
scas
inc
enter
lock
push
lahf
and
addr16
iret
jp
ficomps
mov
push
cmp
cld
je
mov
push
and
aam
adc
jbe
outsl
push
insl
and
jnp
out
outsb
stos
sbb
ficomps
or
xchg
bound
add
push
sete
add
lods
fstps
lods
jmp
loop
mov
add
enter
dec
jbe
add
repz
std
aam
jp
cmovs
mov
lret
pop
mov
pop
push
mov
pop
out
and
sets
jae
cwtl
push
shrb
bnd
cs
jl
cmpl
xor
loope
arpl
push
cltd
rcl
mov
xor
adc
sarl
or
test
lods
out
xchg
push
xchg
adc
xchg
sbb
dec
or
xor
sti
ja
pop
rcll
sub
sbb
or
mov
sbb
cmc
pop
jns
sub
jno
fsubrp
adc
sub
dec
popl
lock
das
xchg
push
in
ds
push
add
fs
adc
cltd
lods
add
dec
stos
xor
xchg
sub
sbb
xchg
out
xor
push
out
mov
outsb
mov
and
cmovb
scas
mov
pop
xor
movsb
imul
pop
fwait
xchg
or
ficomps
iret
xchg
dec
je
aas
cltd
call
sahf
or
xchg
push
aad
sar
int3
iret
mov
test
push
pop
fcoml
xor
stos
add
cmpsb
mov
andb
stos
dec
lcall
ret
push
scas
xchg
ja
dec
jl
sub
xchg
sahf
inc
mov
jnp
xchg
push
mov
mov
testb
mov
lds
mull
jle
ret
sahf
lds
enter
push
pop
push
hlt
pop
jnp
lret
inc
mov
or
pop
daa
lock
das
cmpsb
add
xchg
xor
mov
or
mov
or
push
add
movsb
sahf
out
xchg
jmp
fbstp
out
dec
sbb
pop
pop
gs
ds
add
in
and
or
ljmp
pop
jg
adc
sub
cmp
in
std
faddp
cld
sub
xor
jb
and
loope
xchg
stos
cmp
fadds
mull
aam
sbb
push
sbb
mov
imul
mov
add
fiaddl
xor
enter
xchg
jmp
insl
fsubp
lret
or
lds
repnz
mov
pop
addb
call
ret
xchg
adc
pop
mov
and
ja
push
std
fdivl
out
ret
sti
scas
adc
out
dec
pop
xor
movsl
cmp
add
repnz
jle
push
test
pushl
popf
notb
sbb
xchg
jns
cmp
test
pop
add
lods
add
jbe
push
lret
fsubl
lahf
in
push
cmp
stos
pop
dec
mov
sahf
subb
lret
mov
mov
inc
std
lea
stos
add
xor
xorb
ss
xchg
jbe
sub
loope
stos
data16
outsb
aam
lock
jns
scas
pusha
mov
push
incl
cmp
fucomi
cmc
sub
cwtl
mov
nop
and
sub
or
mov
cmc
mov
lcall
inc
bound
add
imul
xchg
mov
fimuls
pop
xchg
jecxz
add
rcll
add
cmpsl
mov
rcl
dec
dec
cwtl
jno
inc
jnp
dec
rorb
out
cmp
jmp
mov
mov
leave
adc
or
xchg
idivb
xchg
dec
pop
cmp
mov
enter
adc
cltd
sbb
push
das
xchg
sub
jbe
insl
mov
adc
ja
and
inc
jns
xchg
xor
push
ret
mov
pop
cmc
cwtl
inc
repz
stos
insl
or
cmp
add
or
xor
stos
mov
mov
insb
stc
cmp
sub
sbb
mov
movsb
scas
das
gs
addr16
ret
sahf
shll
xor
mov
loopne
popf
js
adc
lcallw
in
dec
pop
pop
sbb
fwait
dec
jl
int
jb
dec
cmp
add
js
and
xchg
ljmp
dec
das
nop
xchg
call
pop
inc
sti
outsb
sub
xchg
std
pop
xlat
jae
or
cs
test
in
cmovo
ficoms
mov
jecxz
repz
and
loope
xor
arpl
cld
mov
inc
and
fsubrp
mov
push
pop
adc
and
cltd
fisttpl
and
or
jns
aam
fidivrl
mov
xlat
xchg
dec
lahf
push
ret
mov
out
adc
arpl
sahf
mov
popa
data16
xlat
call
lods
or
mov
ljmp
dec
or
mov
jno
and
and
inc
cmp
pop
xchg
daa
xor
mov
pop
push
subb
arpl
push
mov
push
mov
lods
adc
std
call
fnstcw
add
push
mov
sub
les
jecxz
repz
test
add
aaa
pusha
xchg
scas
loop
pop
daa
jb
mov
decl
sbb
adc
xor
adc
add
imul
jae
pop
mov
jp
mov
sti
xchg
add
in
out
dec
insl
jo
les
dec
mov
push
lock
xchg
or
inc
outsl
jge
xor
xchg
sbb
push
mov
sub
xchg
sahf
movsl
mov
sub
bound
test
lods
add
jbe
sub
out
iret
jle
jne
sarb
shlb
ficoms
mov
xor
cld
scas
loopne
inc
jecxz
jge
inc
rcl
mov
or
mov
jmp
std
repz
test
shll
pop
clc
cmc
lret
adc
jo,pt
dec
sub
in
cmp
dec
or
xor
fxch
lea
jns
add
das
rorb
aam
js
dec
xor
pop
xchg
fstl
lret
sbb
mov
cmp
mov
lock
aaa
loop
mov
sub
push
outsb
jbe
and
in
add
xor
adc
pop
stc
movsb
mov
or
push
cmpsl
ficoml
sahf
and
dec
mov
test
or
pop
adc
dec
enterw
insl
push
mov
xor
rorb
cmc
bound
in
cmpsb
jb
add
xchg
stos
aaa
pop
dec
add
xor
mov
pop
out
stc
pusha
bound
sti
mov
mov
ret
aas
xor
pushf
jg
sub
xchg
js
and
jge
adc
jp
enter
lods
xchg
bound
sahf
pusha
inc
jge
sbb
cmp
mov
or
je
je
stc
gs
lcall
xchg
enter
mov
decl
int3
push
gs
inc
pop
mov
or
sbb
push
sbbb
push
or
push
iret
ljmp
shrl
mov
testl
inc
out
cmpb
inc
js
xor
and
and
les
int
pop
in
adc
repz
or
test
push
add
mov
jg
or
stos
jae
hlt
pop
push
xor
gs
aad
cmp
jae
jmp
mov
fwait
or
mov
and
arpl
dec
into
cmp
popa
add
xchg
arpl
jecxz
pushf
add
loope
push
lcall
call
xlat
pushf
in
jo
andl
xchg
xchg
ficomps
push
mov
andl
xor
in
je
jmp
xchg
andb
data16
mov
mov
aad
add
leave
iret
xchg
mov
sbb
jmp
xchg
or
fnsave
sbb
mov
bound
jbe
ja
subb
xchg
xchg
mov
std
stc
jno
inc
sbbb
push
sbb
and
loopne
jl
cmpb
cmp
adc
push
dec
sarb
jno
pop
fildl
push
xor
sub
popa
jle
sti
push
repnz
addr16
jp
sbb
push
add
mov
xor
stc
jbe
or
sub
loop
lahf
xor
insb
cmc
lret
jmp
hlt
jl
loop
xor
jecxz
pop
test
stc
and
aam
mov
jne
jge
push
fistpll
icebp
inc
cltd
inc
test
andb
add
lret
dec
and
push
mov
cmp
int
cltd
pop
int
xchg
xchg
xor
mov
pop
jae
in
inc
xor
lea
sarb
int
sbb
or
mov
stos
enter
or
sbbb
js
mov
fdivr
cmpsb
sbb
mov
std
add
daa
mov
sbb
stc
stos
sbb
jbe
push
ret
std
or
pop
fisttps
ja
leave
jne
xchg
orl
sub
bnd
and
stos
xchg
mov
jae
or
cld
push
sbb
std
addb
mov
jns
add
lods
test
xchg
into
fdivl
lret
shlb
stc
repz
xchg
and
scas
movsb
mov
and
ja
and
push
insb
bound
jle
pop
aad
loop
nop
add
pop
ret
and
xorb
inc
sub
fwait
ja
pop
mov
mov
iret
repnz
mov
pop
fidivs
int3
addr16
sub
aas
movsb
dec
ljmp
lcall
and
scas
pop
or
stos
test
sub
arpl
cvtps2pd
adc
sbb
int3
xor
mov
mov
out
sbb
lcall
jns
xorl
mov
xchg
push
into
pop
pop
cmp
cs
push
fdivrs
mov
sub
and
xchg
mov
std
jle
adc
pop
or
xlat
repnz
jmp
scas
pushf
mov
cltd
sub
push
mov
int
mov
mov
push
push
outsb
xchg
ret
cmpb
push
dec
or
jns
pop
ret
ss
xor
inc
sti
push
push
stc
xor
imul
pop
cmc
sub
pop
ret
jb
rcll
push
inc
outsb
and
jge
daa
xchg
push
jne
dec
cld
loopne
in
in
xor
stos
icebp
xlat
mov
adc
mov
cwtl
xor
mov
and
lret
fwait
aam
mov
int3
mov
inc
insl
xchg
mov
imul
fists
jle
jo
pop
sbb
push
mov
or
cmp
pop
and
fldenv
clc
shrl
pop
xchg
pushf
imul
mov
mov
test
iret
xor
mov
mov
sbb
in
mov
sbb
mov
call
dec
test
pop
jp
dec
insb
sbb
jle
dec
jo
ja
and
push
cmp
push
cs
lods
xchg
jle
sub
sub
sbb
jbe
or
icebp
lret
xlat
inc
les
add
sahf
jno
mov
sub
adcb
pop
scas
xchg
shll
scas
fcmovnb
imul
pop
pop
out
xor
inc
lock
ficoml
repnz
or
add
cmp
mov
iret
iret
xchg
pop
xorl
int
out
dec
xchg
sub
cmpsl
test
sahf
stc
sub
mov
lods
push
arpl
mov
inc
inc
imul
mov
mov
adc
and
and
scas
mov
sar
pop
imul
dec
pop
pop
je
or
sbb
push
cmp
fimuls
add
add
rclb
mov
cwtl
enter
pop
add
outsl
jae
loopne
xchg
frstor
ret
push
sahf
sub
lods
pop
lods
in
insl
add
xchg
fs
jp
incl
movsb
into
pushf
outsb
pop
lods
push
mov
bound
dec
jecxz
adc
mov
adc
mov
pop
lret
jo
push
push
movsb
int3
ficomps
daa
dec
and
push
dec
loopne
xchg
xchg
lea
adc
adc
inc
sti
mov
popa
xlat
cmpsl
repz
jo
lret
xor
rolb
sub
jnp
arpl
xchg
mov
mov
pop
outsb
mov
xchg
xlat
cmp
xchg
out
xor
mov
aas
adc
js
loope
push
jecxz
shlb
ret
dec
lahf
fwait
sub
pusha
mov
repz
rcrb
push
mov
pop
push
sbb
xchg
jp
inc
stos
mov
dec
lock
push
xchg
and
inc
int
shll
add
jbe
fistpl
jmp
push
xor
cmpl
xor
xchg
cwtl
mov
aam
inc
or
adc
adc
scas
aas
jns
and
repz
or
or
jae
enter
repz
add
dec
in
push
xrelease
negb
mov
out
rol
sbb
dec
or
xlat
mov
add
push
orl
push
roll
mov
aaa
popa
mov
ds
xlat
mov
lds
push
push
xchg
push
jns
cli
hlt
or
xchg
es
or
sbb
or
repz
filds
adc
cmp
inc
cmp
cld
xor
mov
mov
cwtl
movb
jne
mov
pusha
push
lahf
mov
imul
mov
mov
cmc
sub
mov
jb
push
dec
icebp
push
and
inc
dec
ja
divl
xlat
pop
stc
jp
and
jnp
sti
pop
dec
xor
inc
cmp
nop
add
stos
push
add
jns
add
sbb
es
mov
ret
jnp
add
dec
stc
incl
sti
ljmp
int3
jne
pusha
shr
insl
lea
mov
pusha
push
dec
inc
mov
lock
shlb
or
das
sbb
icebp
adc
push
sub
mov
shrl
and
test
pop
ret
and
ret
sbb
inc
mov
or
fnstcw
adc
mov
jo
pop
insb
into
addr16
daa
xchg
inc
jbe
stc
mov
xor
xchg
mov
iret
inc
xchg
insl
push
xor
test
movsl
sub
imul
mov
shll
lea
shlb
add
fdivs
and
mov
xchg
adc
mov
sub
sti
loope
cmp
mov
bound
and
jg
or
mov
imul
inc
xorb
cmc
fildll
jns
ret
scas
mov
pop
mov
cmp
cld
xorb
andb
lret
dec
shrl
pop
xor
adc
pop
push
dec
add
mov
jp
dec
push
add
out
mov
std
jge
xor
pop
add
mov
sbb
or
mov
fxch
adc
jae
int
lock
popa
jbe
sbb
xchg
insb
lret
js
mov
and
iret
lahf
mov
call
into
jle
or
lret
adc
test
subl
sbb
fists
xor
aaa
cmp
int
jnp
ljmp
mov
xor
lea
loop
leave
pusha
icebp
out
ja
inc
or
mov
sahf
test
sub
lret
mov
push
and
dec
aaa
push
inc
sbb
insb
xchg
jp
add
xor
xor
lret
addr16
pop
shrl
or
jge
xchg
and
stos
adc
sahf
mov
adc
stos
addr16
adc
insb
mov
les
sub
or
push
mov
xor
push
loope
xchg
or
pop
adc
jae
cltd
in
cmp
loop,pt
mov
pop
pop
scas
ljmp
arpl
xchg
push
dec
ret
aas
in
out
pop
jecxz
inc
in
fidivl
in
push
int3
mov
xlat
jb
jp
xor
pop
lods
fwait
and
sbb
negb
jbe
mov
daa
ss
and
imul
cmp
cmp
add
shr
sbb
jo
inc
pushf
sbb
clc
mov
test
jne
sbb
lods
xlat
std
xor
loope
je
repnz
out
fs
pop
pop
lret
repz
out
in
pop
int
xor
mov
add
in
adc
push
orb
xchg
jb
xchg
mov
sbb
idivb
or
aad
cmp
or
loope
add
outsl
push
sbb
filds
lret
pop
push
push
pop
jae
or
pop
inc
mov
incl
fwait
push
dec
jns
insl
fs
pop
sub
cmp
jle
enter
push
std
stos
mov
adc
cmp
pop
xchg
or
aas
rclb
mov
mov
sbb
cli
dec
cmp
cmp
aad
pusha
add
cmp
stc
mov
loop
arpl
lods
insb
leave
xchg
dec
outsb
dec
inc
jp
sub
clc
testl
clc
adc
scas
xor
int
loope
cmp
lret
stos
pusha
push
movsb
xlat
xchg
fildl
insl
xor
loope
jecxz
aam
and
mov
xchg
inc
xchg
add
jge
sarb
gs
loopne
shrl
or
lock
xor
int3
stc
ljmp
test
das
mov
jne
cmpb
sub
inc
xor
or
out
shll
mov
pop
or
gs
or
loope
stos
cmp
jge
push
push
adc
jmp
ror
or
add
addr16
hlt
inc
cmc
mov
cwtl
jmp
add
dec
jp
jp
pop
sbb
scas
jb
movsb
inc
sub
add
scas
stc
push
inc
sub
fwait
cmp
jecxz
lea
sub
les
add
ja
cli
ljmp
jl
std
lea
imull
jnp
ja
clc
jecxz
or
inc
sti
pop
sub
pop
or
add
jle
dec
inc
mov
mov
xchg
lds
adc
dec
jge
repnz
add
les
out
fisubl
pop
push
int3
adc
sbb
push
popf
mov
in
xlat
and
jmp
test
cltd
mov
cmc
test
cltd
lahf
and
cmp
cmp
or
pop
sahf
insl
imul
xor
mov
decl
push
addr16
mov
les
sub
xor
ret
xchg
aas
je
xchg
test
addr16
cmp
and
in
or
xor
sti
mov
mov
shl
adc
jns
push
into
nop
fsts
ljmp
sub
add
mov
dec
andl
dec
sti
cld
mov
or
jg
mov
enter
in
jp
xor
pop
inc
aas
mov
decl
jb
and
push
mov
adc
sub
dec
mov
mov
xchg
sahf
inc
pop
out
cmp
fidivs
mov
jmp
and
repnz
cmp
pushf
loope
sti
sub
jbe
push
lock
imull
adc
stc
jne
call
addl
dec
lea
pop
xchg
jo
shlb
lods
xor
stos
push
cmp
adc
push
repnz
mov
push
sbb
fists
sub
mov
push
daa
mov
adc
js
jmp
and
addr16
mov
aam
sub
or
lea
nop
lret
sub
lret
xchg
sub
xchg
sahf
mul
xchg
aad
adc
lret
adc
cld
xchg
mov
push
push
mov
mov
shr
fisttps
push
scas
stos
icebp
dec
bnd
js
jg
dec
mov
mov
gs
test
xor
jge
ret
and
sbb
data16
mov
insb
sub
out
push
or
lods
test
add
mov
fimuls
mov
mov
aam
nop
add
aad
test
or
fsubs
je
pop
mov
cmp
mov
sbb
sub
sub
mov
dec
outsl
adc
repz
push
stos
add
test
mov
jge
mov
or
cmp
repz
push
mov
or
or
loope,pt
inc
mov
add
adc
ja
js
dec
imul
and
dec
aas
and
xchg
loopne
sti
clc
add
ret
fstl
lods
divb
aas
inc
inc
cmp
shrb
pop
inc
xor
or
mov
mov
jae
adc
cmp
cmp
shrl
push
cmpsl
pop
sbb
mov
adc
iret
lret
and
test
pusha
fstpt
mov
scas
and
lods
negb
and
loopne
push
adc
out
dec
icebp
push
jo
loopne
push
cmp
fwait
adc
xchg
dec
xchg
dec
repnz
int3
mov
fimull
add
xor
outsb
push
jo
pop
mov
mov
and
sub
xor
std
ret
xchg
bound
pop
inc
push
mov
aam
jne
call
movsl
cmp
push
ja
inc
pop
sbb
cmpsl
hlt
les
imull
outsl
xchg
sbb
xchg
xchg
mov
mov
imul
cmpsb
test
sub
jp
ret
jl
aad
jnp
lcall
decb
arpl
mov
sbb
inc
or
ja
jl
imul
fwait
sub
imul
xor
push
bound
and
mov
cmp
dec
ds
or
sbb
dec
add
xchg
fs
pusha
insb
pop
sub
rcrb
push
jp
mov
cld
inc
imul
sbb
mov
cmp
and
loope
add
cltd
mov
outsb
jns
or
jg
test
addr16
sbb
andb
mov
dec
xor
push
enter
xor
aas
and
lea
or
inc
push
out
and
mov
aad
inc
mov
fidivs
mov
mov
cmp
cltd
mov
xchg
aas
cmp
add
mov
fwait
arpl
fwait
sub
test
cwtl
or
pop
xor
push
add
loopne
ds
mov
mov
push
sub
or
and
divl
xor
stos
mov
ljmp
lret
mov
inc
xchg
mov
and
addl
je
jg
and
popa
std
xchg
mov
mov
jmp
pop
rorl
rcl
inc
neg
mov
jns
adc
addb
adc
popf
sub
fmull
add
mov
mov
sub
lcall
xlat
and
lea
jbe
push
or
mov
mov
dec
jnp
jmp
out
or
mov
sub
pop
lret
lret
pop
enter
stc
mov
es
xor
sbbl
std
pusha
mov
and
xor
inc
stc
xorl
and
cmpsb
stc
dec
sbb
inc
test
jno
mov
cmpsl
inc
lods
scas
bnd
mov
xor
jmp
in
xchg
inc
adc
xchg
test
cmpsb
in
iret
pop
adc
lret
mov
test
orb
sub
nop
push
ja
sti
popa
fildll
mov
and
lcall
push
scas
xchg
sub
sbb
mov
pop
mov
das
xchg
and
arpl
mov
mov
cmp
shl
addb
arpl
movl
imul
rcl
inc
iret
dec
ficoml
sbb
mov
lods
push
and
push
adc
bound
push
sub
xchg
out
jge
das
sbbl
jle
insl
jecxz
lret
jmpw
ljmp
and
xchg
arpl
mov
pop
arpl
and
push
daa
iret
out
ja
push
jmp
movsl
push
sbb
pop
adc
cmp
loope
lock
cmpsl
cwtl
jl
outsb
sbb
jmp
gs
addr16
dec
push
cwtl
dec
inc
mov
fisttpl
mov
pop
jmp
rcll
ljmp
mov
push
or
ficomps
ret
aas
sub
sbb
push
lret
stos
add
adc
xchg
add
jge
jae
xor
ds
xchg
jbe
bound
jo
jb
fsts
and
shll
cs
sbb
addr16
sarl
pop
mov
loopne
lock
pushf
mov
or
ja
scas
enter
loope
outsl
js
push
mov
outsl
movsl
ret
mov
daa
ds
sbb
movsl
lcall
jl
pop
cli
jns
std
cmp
xchg
fidivrs
nop
test
push
test
and
sbb
movsb
fwait
mov
hlt
or
into
daa
lret
test
es
jp
pusha
add
scas
jns
jnp
test
jbe
aam
lods
pop
xor
xchg
shlb
stos
loopne
cmp
and
mov
fwait
into
inc
xlat
push
pop
push
sbb
push
nop
push
fs
and
inc
clc
iret
fnstenv
adcl
pop
mov
movb
fcmovnbe
test
popa
std
subl
into
fsubrs
orl
popa
ljmp
sub
mov
test
out
idivl
aam
and
cld
lcall
lahf
push
xor
dec
inc
inc
aas
xchg
pop
dec
xchg
or
das
jno
pop
cmpl
stos
xor
inc
mov
sahf
or
stc
test
movsl
mov
aam
add
mov
jmp
jns
sbb
push
push
inc
aaa
inc
je
jmp
push
repnz
mov
pop
fbld
cmp
xchg
jnp
loopne
orl
in
xchg
dec
test
push
lea
xor
adc
lds
es
inc
jl
jecxz
pop
push
lret
inc
into
and
scas
push
aad
jmp
lret
adc
cmpsb
dec
or
and
mov
dec
popa
push
repz
in
mov
fnstsw
dec
movsl
sub
cwtl
push
bound
les
adc
pop
cmp
insl
shlb
daa
push
dec
imulb
lea
cmp
loopne
sbb
enter
xchg
pop
pop
mov
mov
daa
lret
jg
push
test
jns
rorb
cmpsb
mov
inc
jmp
xrelease
call
mov
scas
rcll
xor
cmp
jg
push
xchg
pop
test
xor
jns
adcl
pop
pop
add
xchg
into
ret
rcrl
mov
sbb
adc
mov
or
fchs
jl
leave
shl
aam
mov
loop
bound
push
cmp
fimull
jne
add
dec
and
jp
xor
xchg
movsl
fldenv
loope
add
rclb
sarb
ret
cmp
push
lods
sahf
popa
mov
data16
lods
insb
add
pushf
cmp
mov
leave
inc
out
or
xchg
and
popl
sarb
mov
nop
dec
sub
push
test
dec
aad
xor
add
add
imul
lret
in
xchg
mov
sub
push
pop
stc
sub
popf
cmp
adc
jecxz
scas
das
cmp
inc
movsl
in
fsubs
dec
jle
dec
lea
movsb
pop
aas
or
fs
fstpt
or
inc
push
insl
out
and
xchg
jp
lret
lahf
cmpsl
ljmp
insb
test
jno
jns
movsb
mov
lods
pop
pandn
outsl
stc
dec
outsl
outsb
orl
adcl
and
mov
cli
enter
lret
lods
lahf
cmp
dec
lods
pusha
mull
or
loope
lods
popf
mov
or
neg
adc
adc
lods
cmpps
xchg
xchg
cld
push
pusha
popa
outsl
rcl
fcom
imul
in
add
pop
lret
xor
and
add
loope
aam
adc
xor
bound
iret
add
mov
push
dec
cmp
out
pop
sbb
push
push
imul
mov
sbb
icebp
mov
push
and
test
sub
cmpsb
xchg
sbb
scas
out
cmp
fisttps
fdivrl
outsb
arpl
and
fdivs
mov
in
in
fstpt
ret
and
push
mov
pushf
int
mov
xorl
and
cmovo
push
out
cwtl
imul
dec
lods
push
add
mov
lcall
sbb
shll
cmp
push
mov
sarl
ret
fmul
jbe
or
outsb
jne
add
mov
vpunpckhdq
dec
pop
dec
out
dec
jae
fildll
add
cmp
cmp
gs
cmp
cmp
cmp
add
add
sbb
jmp
adc
mov
pop
add
inc
add
fcomp
dec
add
add
adc
inc
add
add
cmp
jne
repz
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
andl
ret
