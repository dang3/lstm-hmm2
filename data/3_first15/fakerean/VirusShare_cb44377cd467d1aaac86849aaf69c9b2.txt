sbb
add
mov
xchg
dec
or
sub
push
pushf
dec
pop
in
inc
nop
or
das
ret
sub
push
push
orl
xor
lods
dec
sbb
dec
scas
mov
rol
dec
test
adc
push
sub
mov
cmpsl
sbb
fimull
cmc
adc
repz
push
xor
aad
clc
mov
inc
ljmp
and
add
sub
push
sub
cmc
ljmp
mov
jo
repz
lea
in
imul
mov
mov
adc
jle
xchg
cmc
inc
xchg
fistpll
inc
inc
cli
jp
fistpl
cli
rcr
ds
outsl
and
push
and
jno
loop
rcr
aad
mov
dec
mov
sbb
mov
add
dec
iret
lock
scas
repnz
test
xchg
lods
pusha
movsl
subb
mov
daa
xor
inc
into
daa
int3
call
mov
pushl
dec
adc
es
add
inc
and
jg
push
mov
and
pop
insb
mov
std
mov
xlat
xchg
int
mov
fnstsw
mov
push
sahf
adc
xchg
push
scas
addl
inc
lock
mov
aas
fsubs
clc
faddl
dec
into
popa
outsl
dec
xchg
jnp
jnp
fistpl
repz
pusha
push
adc
inc
cmpsl
outsl
loopne
je
lahf
and
and
jge
lods
lcall
es
cmp
sub
inc
mov
mov
nopl
movsl
adc
jmp
push
and
mov
sub
das
call
mov
in
cmp
or
add
dec
std
dec
cs
pop
mov
jp
js
jb
mov
inc
mov
cs
std
xor
scas
pop
arpl
mov
push
ret
icebp
mov
sub
in
or
jmp
cld
scas
xchg
mov
call
jl
fisubs
icebp
in
fsubr
xor
idivb
fisttps
lods
pop
lea
in
mov
jecxz
dec
rol
xchg
cmovnp
test
negb
cwtl
jle
push
add
out
push
js
jle
mov
push
in
imul
push
aas
mov
cmp
xchg
sub
insb
sub
mov
adc
pop
data16
or
push
cli
cmp
cmp
call
sbb
xor
adc
sbb
jne
and
and
add
test
cmpsb
out
sub
push
add
std
xchg
jns
int3
jmp
xor
pop
mov
cltd
add
pop
xchg
xchg
sbb
mov
inc
mov
aad
inc
loop
repz
fwait
outsb
ds
mov
pop
std
inc
mov
jo
fwait
daa
add
aad
rclb
lcall
and
in
xor
subl
sbb
inc
pop
xchg
pop
jae
nop
mov
fstp
push
fidivs
xchg
inc
scas
jno
ljmp
fdivrs
push
jl
das
and
icebp
pop
and
mov
or
test
push
mov
or
jb,pt
leave
jg
mov
scas
pop
cmpsl
stos
clc
cmp
sbb
xor
pop
mov
call
repnz
adc
popl
jl
shrl
test
mov
jnp
movsl
sub
std
mov
dec
jnp
ds
dec
loopne
scas
xchg
test
fildll
popfw
in
mov
shlb
pop
and
inc
scas
lcall
int3
jo
pop
mov
insl
dec
mov
js
dec
cmp
mov
shll
out
add
push
jbe
fwait
jae
lods
fsubp
inc
xor
mov
fucomp
lods
clc
cmpsb
push
push
sbb
shll
in
lcall
js
and
flds
inc
xchg
clc
ret
and
adc
imul
jge
cmp
out
mov
js
cmp
adc
imul
repnz
jge
mov
popf
or
inc
mov
cmp
cmp
cmp
jle
and
or
fcmovnu
xorb
jl
ret
fldl
xor
int3
ljmp
call
jne
cli
ljmp
and
inc
mov
pop
mov
jns
cli
rorb
sub
das
mov
jmp
lahf
mov
inc
imul
shll
arpl
cmpsb
mov
imul
addl
inc
ret
outsl
sti
ficompl
xchg
and
fidivrl
mov
sbb
insb
data16
jge
jne
or
push
add
and
cmp
mov
daa
bound
nop
in
mov
loopne
gs
pop
lock
pop
cmp
or
ret
test
es
cmpl
aad
pop
sbb
add
jnp
inc
cs
xor
scas
lret
cmp
mov
fsubs
push
jmp
mov
movsl
push
jae
sbb
es
outsl
mov
inc
sub
jg
cmp
dec
sub
in
sub
cli
mov
inc
je
push
sarl
popa
cmp
clc
lods
decl
mov
xchg
int3
leave
jp
and
imul
cmp
push
push
mov
mov
test
nop
pop
lds
mov
cmp
ds
mov
imul
popa
xlat
scas
pop
pop
call
clc
js
das
addb
inc
and
add
fnstsw
jbe
repnz
fs
maskmovq
divl
dec
outsl
or
mov
sub
mov
add
adc
mov
inc
into
movb
subl
clc
mov
push
pop
mov
rol
cmp
cltd
test
stc
pop
fimuls
stos
test
ret
sbb
mov
ljmp
aas
pop
mov
mov
loopne
cmpsl
inc
xchg
loope
fmulp
imul
or
loopne
fistps
mov
popf
test
push
jae
pusha
dec
call
add
cmpsb
pop
mov
int
sti
cli
cs
cli
push
adc
lods
cmc
enter
jae
int3
xchg
mulb
inc
das
aas
insl
sbb
ja
popf
dec
test
mov
or
addb
xor
scas
icebp
out
jg
mov
mov
mov
or
add
test
data16
xchg
cmp
dec
fisubl
insb
pop
mov
dec
sub
cmp
pop
pcmpgtd
pop
sub
lods
gs
shlb
mov
scas
stos
sbb
pop
mov
xchg
push
sub
lods
jmp
mov
dec
bound
inc
cmpsb
mov
test
and
push
and
or
push
jl
stos
ja
or
inc
mov
rcl
push
add
nop
shl
pop
cmpb
cmc
xchg
fs
arpl
aas
cmp
pop
rcll
cmp
lock
mov
xchg
pop
xor
cmp
push
decl
xchg
lret
inc
daa
mov
jne
or
and
cmc
mov
cli
fxch
pop
ficompl
ljmp
inc
mov
fldcw
adc
and
sti
rorb
into
mov
xor
fsts
push
out
xor
push
in
sub
xor
jge
popa
shll
dec
pop
xchg
shll
sub
lds
fxch
lcall
mov
mov
cmp
cmp
dec
push
ss
push
sub
xor
cmpsb
cwtl
imul
gs
sbb
jle
lea
mov
das
inc
xchg
mov
scas
pop
inc
pop
mov
rcll
test
je
int3
test
or
adc
adc
sub
imul
fucomip
repz
jg
lock
inc
sub
cltd
das
sti
out
int
cmp
stos
or
fsubs
and
in
popf
mov
xor
mov
push
push
push
scas
int3
ja
mov
inc
pop
pop
popf
cmp
aam
insb
call
into
loop
dec
cld
add
mov
addr16
fwait
in
xchg
mov
mov
jl
cmpsb
clc
es
leave
xchg
pop
add
sub
xor
pop
dec
mov
out
dec
stc
xchg
push
lods
xor
or
ret
sbb
arpl
fs
aam
inc
lret
add
nop
aam
jecxz
stos
daa
mov
mov
and
jb
jge
cmc
lret
xchg
imul
popf
push
mov
insb
mov
lret
fistl
test
stc
mov
fs
inc
test
mov
sbb
inc
cwtl
cmc
ret
das
lods
ss
cs
sub
push
les
dec
data16
add
or
mov
fists
push
rorl
in
sbb
enter
into
ret
fwait
push
clc
lds
in
xor
push
loopne
mov
push
into
daa
inc
pop
push
push
pop
push
stos
leave
outsb
push
jecxz
in
and
xchg
sarl
adc
mov
in
shrl
scas
and
in
shl
adc
pusha
int3
or
push
sub
add
fnstsw
iret
int
sti
cmpsb
or
jecxz
mov
cs
imul
lods
cmp
xchg
in
enter
repnz
xor
xchg
shll
enter
lcall
rclb
into
adc
and
mov
mov
fcoml
clc
sub
ljmp
nop
push
lea
sub
sub
cmpsb
xor
push
inc
xchg
adc
push
add
sub
stc
inc
aas
popf
adc
push
jnp
mov
xchg
push
data16
adc
xchg
xor
jae
xchg
sbb
pop
sbb
dec
int3
aaa
ljmp
into
lods
jg
add
fadds
int
adcb
into
mov
outsl
aam
jecxz
jecxz
mov
dec
test
pop
push
push
call
mov
cmp
dec
aas
int3
push
push
test
mov
fsub
mov
sbb
adc
adc
lock
inc
push
fadd
xchg
fldt
mov
dec
adc
out
leave
jne
loop
mov
aad
adc
xchg
sbb
fcmovb
imul
or
dec
mov
out
into
cmp
cmp
sub
movsl
into
pop
mov
and
add
mov
sub
xchg
aaa
rcrl
adcb
stos
idivl
test
cmc
or
lods
ror
xchg
xor
nop
outsl
jno
mov
sti
xchg
jae
jns
test
xchg
xchg
adc
cmpsb
fmull
lahf
fdivrl
ds
xchg
ja
out
cmpsb
jg
out
fsts
or
sbb
inc
sbb
cmp
subb
mov
loopne
add
iret
adc
test
mov
fisubs
test
data16
mov
xlat
cmpb
mov
mov
ds
cld
shrb
call
out
mov
and
pop
mov
xchg
mov
js
mov
cs
mov
push
jmp
outsl
xor
xor
mov
push
inc
pop
and
shll
aam
and
xor
lcall
mov
lcall
sub
xlat
lods
lahf
and
lahf
mov
bound
rclb
imul
mov
les
mov
repz
inc
mov
daa
test
ja
and
aaa
les
cs
ret
push
push
mov
sub
imul
popf
bound
hlt
lret
mov
or
cmc
cvtps2pd
sahf
imul
cli
dec
fcomps
sub
jp
shlb
jp
adc
int3
push
mov
inc
mov
mov
mov
or
fmulp
ret
ss
fists
popa
mov
pop
je
inc
imul
mov
sbb
stc
rorl
push
xchg
push
jp
pop
dec
cmpsl
ret
cli
pushf
lock
xchg
xor
xchg
clc
xor
jnp
jno
jp
sbb
mov
xchg
dec
push
fstps
dec
ds
push
xor
adc
das
ja
in
lret
xchg
sub
inc
sub
bound
pop
pop
mov
insb
insb
ljmp
or
lea
and
mov
out
lret
pop
lahf
add
mov
jne
mov
dec
loop
lods
inc
cmpsb
jmp
ja
mov
rcr
movsb
das
ffree
sahf
push
lcall
fwait
jnp
pushf
popa
add
push
xchg
or
scas
lods
popf
inc
xor
sbb
std
enter
out
shll
pusha
lock
adc
mov
pop
scas
cmp
pop
rcll
adc
add
mov
sub
xchg
out
or
xchg
sub
daa
adc
imul
pop
sbb
add
out
mov
push
cli
mov
popf
pop
and
jp
mov
pop
jno
test
rcrl
mov
inc
imul
into
xchg
push
cmp
jno
add
add
daa
or
mov
inc
in
fldl
jp
pop
fcomps
les
sub
xchg
cli
js
inc
push
or
sbb
repz
fsubs
repnz
mov
jnp
mov
xchg
mov
rorl
adc
jae
push
xor
mov
add
and
adc
daa
test
mov
dec
pop
dec
mov
push
push
adc
rcrb
mov
nop
and
cmp
mov
push
aas
data16
movsb
dec
inc
cmp
adc
inc
jmp
inc
ja
ljmp
scas
dec
sbb
outsb
out
leave
pop
test
test
mov
push
mov
push
push
out
pop
pop
in
gs
outsl
cltd
inc
add
add
cli
bound
leave
cmpsl
cli
add
dec
cmp
xchg
and
mov
pop
push
lret
add
and
hlt
sti
rorb
inc
test
lcall
jnp
imul
in
mov
jge
leave
repnz
popa
pop
pop
lret
inc
rol
daa
ret
fisubl
dec
movsb
push
jg
add
push
insl
aas
push
fimull
adc
sub
fisubrs
inc
les
mov
xor
in
sahf
push
icebp
push
mov
mov
les
mov
jae
jne
in
pop
push
push
push
flds
mov
leave
repnz
test
imul
mov
decb
or
mov
push
sbb
lea
stos
int3
jge
jle
sub
aas
or
arpl
iret
adc
out
dec
outsb
in
jle
xlat
mov
pop
aam
sub
ds
sbbb
sub
xor
jbe
ss
popa
clc
push
mov
dec
or
mov
or
push
sbb
jae
fwait
add
xchg
xor
clc
cmp
adc
cld
mov
and
std
das
add
or
push
aam
sahf
je
cmpb
es
fs
adc
mov
sbb
testl
sahf
pop
int3
imul
cltd
ja
xchg
pop
or
or
loope
xchg
sbb
jp
mov
call
enter
mov
mov
sbb
jmp
jmp
pop
loope
cmp
popl
mov
mov
sub
ss
outsb
outsb
sub
push
push
stos
repz
mov
mov
mov
xchg
inc
subb
add
pop
push
push
jg
mov
push
jb
cmp
cmp
js
adc
mov
out
mov
dec
xchg
pop
push
xchg
sub
sbb
push
pop
fnstsw
mov
sub
sub
outsl
nop
ret
aas
xchg
xor
mov
fdivrl
out
mov
dec
ds
pop
stos
test
scas
pop
xor
test
mov
sbb
shlb
jbe
xchg
popa
rcr
out
dec
pop
and
das
mov
addb
pop
mov
mov
inc
jno
or
pop
sbb
addr16
cmp
clc
adc
loop
or
push
in
filds
sbb
add
sub
pop
insb
mov
pop
xchg
movsb
aad
push
add
andb
cmpsl
xchg
mov
mov
aas
dec
loop
cmp
sahf
add
insl
xchg
adc
aas
sbb
and
add
cli
pop
xchg
iret
loope
inc
addb
shl
daa
in
xchg
adc
push
jp
clc
mov
cmp
pop
xor
mov
or
bound
push
push
sbb
pop
ficoms
rorb
add
fucomi
cmp
int
popa
and
pusha
xor
dec
pop
inc
mov
loopne
scas
adc
xor
out
mov
insb
mov
ljmp
sub
sub
cmp
subl
push
adc
into
or
mov
inc
push
iret
xor
int3
pop
scas
add
jle
addr16
lahf
fsubl
or
cli
fisubrs
aas
pop
push
adc
aam
cmp
mov
sbb
jmp
pop
push
shrl
adc
push
sbb
sbb
hlt
scas
or
and
cmp
movsl
inc
nop
popa
sarl
adc
mov
fwait
mov
mov
mov
sarb
stos
mov
mov
sbb
jbe
jae
aam
push
dec
mov
jbe
popf
lcall
sbb
xor
inc
dec
int
mov
mov
fmuls
jg
push
int
and
ffreep
push
pop
lds
xor
movsl
jmp
inc
jge
mov
dec
sbb
xorb
adc
aaa
ja
lret
xchg
scas
sbb
lahf
lods
mov
adc
les
into
xor
sahf
rclb
aaa
dec
mov
mov
mov
push
movsb
test
enter
cli
pop
mov
push
in
jae
pop
jno
fsts
ja
ret
into
add
cmpsl
push
and
lods
sub
sbb
hlt
rolb
out
fisubs
mov
js
addr16
pop
push
ss
scas
shl
es
outsb
mov
adc
jo
fdiv
mov
xor
mov
pavgw
ret
int
hlt
pop
ss
notl
pop
outsb
shrb
pop
movsl
and
icebp
cmpsl
jecxz
popf
out
xchg
mov
in
lret
nop
pop
insl
inc
xchg
test
rcrl
cmp
sub
adc
push
in
pusha
shrb
pop
and
insl
or
dec
push
pop
inc
std
and
xchg
pop
lret
daa
jmp
orl
push
ds
mov
mov
push
pop
popa
inc
xlat
loopne
jmp
sbb
mov
jbe
mov
mov
add
sbb
pop
fildll
fdivr
sti
jmp
loope
rol
mov
scas
xor
sbb
std
cmp
stos
cs
or
stos
mov
vxorps
nop
pop
inc
pop
inc
dec
dec
inc
pop
xor
mov
iret
jb
push
dec
mov
sub
mov
sub
sahf
dec
int
stos
sub
adc
pop
pop
xor
push
mov
cli
sbb
cmp
inc
outsl
mov
sbb
xchg
lock
sti
cmp
push
lcall
jo
mov
inc
sti
shlb
mov
jp
lahf
call
ss
push
das
jle
addl
test
scas
les
or
pop
xor
add
dec
pop
std
mov
dec
xor
push
mov
mov
in
push
lcall
jno
sti
xchg
mov
aaa
rcrb
out
out
in
adc
addr16
mov
das
sbbl
int
cld
cmc
sbb
xlat
stos
mov
push
push
sub
add
adc
xorl
gs
hlt
dec
jp
addb
pushl
push
jo
xchg
inc
push
adc
inc
xor
pushf
jp
mov
out
xor
sti
sti
cmp
jg
sbb
and
mov
or
mov
xchg
dec
cmp
xchg
lcall
cmp
loope
dec
or
xor
call
repz
data16
nop
mov
push
pop
add
jge
pop
out
inc
mov
stos
scas
xchg
out
popa
popa
xor
push
xor
dec
mov
dec
xor
inc
push
stc
lock
xor
jb
jae
imul
ljmp
ds
mov
call
adc
test
fistpl
cli
cmpl
idivl
mov
adcl
divb
loopne
sahf
mov
sub
jl
jl
aad
mov
cmp
pop
jb
mov
dec
jb
fcoml
and
mov
mov
xchg
fwait
outsl
pop
and
arpl
pop
cltd
jp
xor
pushf
adc
or
and
mov
pop
pop
imul
xor
cwtl
cmp
call
or
dec
les
daa
int
ds
loop
mov
fidivl
orb
in
add
aam
repnz
sbb
xchg
out
pop
jge
jb
cmpsl
cwtl
stc
lret
cltd
lret
cmp
adcb
and
pop
or
shlb
nop
inc
mov
jg
sub
and
or
mov
pop
sub
in
pop
mov
push
mov
mov
push
and
dec
lods
daa
imul
mov
icebp
pushf
enter
out
mov
jno
fsubp
or
fnsave
repnz
test
jle
jbe
hlt
push
cmp
jp
je
jg
mov
mov
nop
pop
popf
mov
loope
add
cmp
jmp
sti
jge
mov
adc
and
dec
jmp
push
push
mov
enter
mov
dec
inc
jmp
enter
mov
and
cmc
pushf
pop
leave
adc
push
push
js
clc
lret
cmp
mov
fisttpll
mov
jmp
adc
pop
repz
or
cmp
bound
popf
pusha
fnstsw
outsl
or
ds
xchg
mov
mov
adc
xchg
lods
fwait
lea
pushf
inc
cld
rcll
shlb
mov
cmp
int
aaa
mov
xor
inc
xor
mov
jne
mov
lds
cli
adc
mov
xchg
test
stc
test
xor
je
mov
sub
in
repz
cmp
dec
sbb
dec
jecxz
test
jmp
push
nop
ret
outsl
pop
outsb
movsl
xor
shlb
sar
sbb
and
add
bound
leave
push
mov
dec
pusha
sub
mov
adc
aaa
stos
adc
fdivs
add
pop
and
pop
int3
push
adc
cmc
xchg
sub
ds
push
lcall
cmp
push
adc
ss
sbb
add
inc
fwait
push
loop
mov
in
sub
dec
sarb
or
dec
dec
pop
stos
sub
addr16
adc
xchg
fsincos
sbb
inc
push
dec
cli
scas
dec
pop
lret
test
or
lret
sbb
mov
inc
push
out
clc
loop
insb
repz
push
pop
xchg
jb
repnz
divl
movsl
mov
jb
adc
cmp
insl
pop
stos
pop
sub
cmp
es
add
in
outsl
outsl
add
push
lea
pop
push
mov
mov
out
rclb
pusha
shrd
mov
cmpsl
sti
or
test
adc
pop
loope
add
mov
add
and
fists
jge
jecxz
bound
mov
int3
inc
int
jb
outsl
aaa
pop
add
fildll
ds
cmp
mov
aaa
dec
sbb
fisubrs
and
repnz
sub
and
pop
arpl
inc
push
or
je
loopne
loope
test
push
lahf
stos
add
and
inc
cltd
aam
xor
movsl
in
xchg
dec
inc
jle
sub
add
popa
call
sarb
pop
push
cmp
pop
jle
lods
push
inc
js
ss
mov
iret
je
into
add
mov
sbb
ffreep
xorb
adc
or
pop
addr16
js
sbb
jne
or
fsubs
repnz
mov
repnz
lret
jnp
pop
data16
repnz
or
or
push
cmp
lods
test
pop
ret
lea
xchg
inc
mov
dec
je
or
or
xchg
movsl
ret
cmp
test
push
in
repnz
mov
mov
and
in
cli
call
lods
mov
jle
lods
jae
mov
shll
mov
int
ret
jo
shll
dec
push
push
test
xor
mov
movsl
sub
out
or
fmul
sub
mov
test
lods
add
cmpsl
mov
lock
ljmp
inc
add
lahf
shl
fsubr
pop
addl
ljmp
addr16
out
cmp
outsl
and
mov
sbb
out
scas
aad
cld
push
mov
testl
xchg
neg
inc
add
jb
inc
and
movsb
pop
pop
xchg
rolb
rcrb
push
jg
sbb
movsl
xor
push
cli
mov
test
mov
sub
mov
jecxz
test
adc
ret
xor
or
in
sbbl
sub
jne
xchg
jb
jle
add
data16
movsl
lcall
imul
outsl
or
mov
ss
mov
pop
dec
xchg
sbb
aad
xchg
add
mov
mov
sbb
je
dec
jae
aas
cmp
and
mov
add
loop
jnp
mov
sub
in
xchg
ja
push
add
and
cmpsl
aas
outsl
cmp
dec
mov
xchg
in
mov
inc
inc
pushf
xchg
popf
xchg
enter
roll
inc
xor
test
add
mov
add
lods
sahf
out
outsb
pop
cmp
xor
sub
and
test
data16
dec
into
and
ret
enter
cmpsl
jp
insl
push
ljmp
xchg
mov
xchg
mov
adcb
push
frstor
or
sbb
fwait
add
leave
pop
mov
mov
adc
mov
out
cmc
jp
lds
enter
push
pop
ror
xor
inc
mov
test
pusha
out
pop
adc
inc
and
scas
mov
inc
mov
das
push
cmp
jne
cmp
xchg
sub
in
push
jp
mov
xor
pop
lock
jl
or
push
leave
mov
inc
pusha
sub
pop
andl
push
std
xchg
mov
dec
jae
inc
lret
add
jle
xor
loope
sub
push
in
push
repz
mov
sbb
jge
xor
jle
inc
mov
and
mov
dec
daa
cs
imul
out
xchg
adc
loope
jle
test
out
inc
div
loopne
dec
dec
inc
inc
inc
pusha
scas
enter
scas
mov
cli
push
std
out
out
pop
fcomps
shll
jmp
loop
jno
mov
mov
jl
push
lods
jl
in
xchg
pop
popa
push
icebp
jb
insl
jp
cs
and
xor
dec
lds
sub
and
push
inc
xchg
test
jnp
outsb
mov
add
jmp
sub
xchg
dec
mov
inc
sub
pop
push
das
add
jg
lock
mov
pop
dec
outsl
fadds
inc
or
pop
sbb
xor
icebp
lock
popf
add
out
cli
stos
add
repz
outsl
jge
xchg
mov
test
cmp
cs
inc
mov
ret
rcrb
mov
jbe
enter
mov
dec
inc
rcrb
xchg
enter
iret
xor
fdivp
call
loopne
sub
les
mov
sub
mov
aad
imul
mov
xor
xlat
dec
inc
add
sbb
xchg
sbb
std
into
pop
dec
aam
inc
out
stos
mov
push
jae
xchg
pop
xor
or
js
and
negb
aas
jl
subb
adc
mov
loope
cmp
xor
jmp
and
add
aas
mov
cmpsb
cli
xchg
jl
pop
fstpl
incb
fisttpl
dec
mov
dec
movsb
or
insb
lds
cmp
push
add
sbb
fadds
push
rcr
insl
imul
lock
mov
adc
pop
out
clc
xorl
sub
mov
jge
call
mov
jmp
or
pop
fcmovbe
daa
leave
inc
sarb
imul
cmp
mov
ret
or
das
mov
add
loope
mov
arpl
mov
and
popf
jb
cmpl
ficoms
hlt
inc
cli
movsl
xchg
dec
mov
pop
pop
pusha
push
shll
pop
out
je
xchg
xchg
cmp
add
jo
mov
bound
popa
push
aaa
pusha
pop
mov
scas
push
lea
hlt
push
shlb
out
mov
stos
popa
mov
mov
xor
and
jae
jecxz
pop
pushf
push
cmpsb
sbb
loop
mov
jmp
mov
adc
stos
mov
cltd
adc
aas
out
and
mov
cmpsl
xor
aad
dec
mov
push
add
mov
xchg
pop
pop
mov
cwtl
jb
fisttps
scas
mov
inc
sub
std
mov
push
ret
sub
mov
cltd
pop
fwait
rclb
mov
add
icebp
cmp
mov
jg
insl
pop
xchg
lahf
aad
ret
movsb
stc
aas
jns
mov
movl
fisubrs
add
mov
adc
inc
pop
pop
repnz
xlat
push
cmpsb
or
xor
dec
push
lahf
in
faddp
js
inc
inc
sub
sub
sbb
adc
imul
aaa
iret
fists
push
xchg
lods
xchg
cmp
fiadds
jp
dec
gs
push
cmp
daa
and
test
push
icebp
lock
fs
xchg
jmp
rorl
mov
cmp
mov
or
sbb
test
aad
flds
sarb
push
dec
lahf
jmp
inc
bound
in
rcr
push
das
and
jp
xchg
xchg
push
iret
cltd
mov
inc
mov
xchg
cmp
push
push
out
fcompl
inc
xchg
cwtl
dec
jle
arpl
insb
push
ds
mov
iret
adc
rcll
inc
jno
xchg
addl
sbbl
fildl
sti
nop
fistps
or
and
js
cmc
scas
jl
adc
jb
sub
add
adc
sbb
xchg
or
sti
test
dec
int
cmpsb
repz
mov
lods
dec
mov
jmp
cltd
mov
push
jo
ror
lods
mov
ja
aam
jae
mov
and
inc
sub
push
push
cmc
xchg
imul
clc
lcall
in
test
inc
js
jmp
ficompl
lcall
test
imul
pusha
mov
ss
push
add
pop
ss
shlb
sbbb
fucom
movsb
jle
push
and
or
ds
movsl
sahf
pop
sbb
jmp
sub
orb
dec
aad
stos
daa
sub
data16
mov
cmpb
es
aaa
or
out
ret
daa
test
xchg
mov
pop
lds
mov
int
or
mov
fwait
hlt
jmp
jge
fidivl
gs
xor
xchg
call
or
dec
push
cmp
push
or
into
iret
sarb
mov
mov
int
dec
lea
fbld
data16
rorl
jmp
push
mov
mov
mov
int
scas
jno
push
sbb
rclb
pop
mov
pop
daa
jmp
xchg
xor
jmp
and
pop
mov
rclb
add
out
out
fisubl
mov
fwait
inc
scas
ds
decb
fcoml
mov
cmp
mov
mov
scas
push
outsb
mov
ret
fs
lods
push
out
hlt
or
xor
xchg
jb
adc
mov
jecxz
fimull
fstps
stos
jnp
mov
cmpsl
jb
stc
jp
jecxz,pt
test
lret
popa
cmp
adc
jmp
push
xchg
repz
xchg
push
add
pop
cmc
ljmp
push
ja
outsb
out
inc
aaa
ror
pop
leave
dec
popf
push
push
inc
jp
jae
ficompl
xor
mov
bound
fisttpl
adc
imul
arpl
xchg
sbb
mov
jns
push
hlt
adc
nop
jge
xor
fmull
and
dec
popf
add
nop
cli
sbb
scas
push
decb
or
insb
mov
insb
in
out
mov
mov
push
addr16
sahf
and
loop
jecxz
test
hlt
xchg
mov
fsubrl
lods
mov
hlt
lock
orl
add
lret
fs
pop
nop
pop
add
xchg
xor
ja
ds
mov
test
or
sbb
sarb
insl
adc
jmp
inc
jl
aam
test
ss
and
pop
or
lret
addb
shrb
cmp
imul
pop
mov
adc
lahf
push
add
sub
pop
mov
cs
pushf
lods
fs
lods
inc
stos
push
mov
daa
testb
sub
insb
ds
fcmove
ljmp
insl
sbb
in
mov
mov
loopne
scas
arpl
sbb
in
mov
mov
or
jg
or
lds
jle
loope
inc
sbb
push
or
lods
push
dec
lahf
cmp
pop
xchg
sub
cs
sahf
gs
inc
cmpl
xchg
mov
sub
sbb
nop
shll
push
sub
imul
inc
clc
jmp
pop
shll
cwtl
mov
ret
fists
decl
pop
jnp
ret
das
mov
roll
and
rolb
adc
lcallw
jmp
and
test
pusha
lds
ja
mov
cmp
and
pop
jge
fstpl
int
rcl
bound
imul
insb
jae
pop
push
inc
lock
lods
mov
jne
nop
mov
and
jbe
pop
icebp
nop
push
inc
data16
pop
adc
cs
cmp
loope
push
ret
call
xchg
jge
jp
xor
sub
inc
and
idivl
or
cli
sarl
rcll
int3
add
pop
movb
outsl
scas
test
mov
cmp
popf
sub
fsubp
sbb
mov
cmpl
cwtl
sub
or
pusha
cwtl
pop
push
inc
cltd
jo
test
iret
dec
outsl
sahf
pop
cmc
mov
add
mov
and
cmp
mov
xchg
cwtl
repz
dec
inc
dec
in
sahf
mov
jp
pusha
stos
aam
jae
mov
adc
push
mov
push
inc
popf
adc
pop
push
mov
inc
push
mov
adc
and
push
dec
mov
test
push
sbb
push
mov
test
cwtl
cmp
movsb
negb
hlt
xor
and
sti
push
mov
pop
mov
or
jecxz
jnp
xor
dec
and
mov
cmp
in
dec
sub
inc
dec
inc
aas
call
test
push
dec
outsl
xchg
ret
shlb
add
je
arpl
xor
pop
inc
mov
sub
add
mov
cltd
adc
stc
sahf
scas
pop
and
mov
outsb
loope
cmp
scas
pop
setae
or
push
and
adc
rolb
daa
out
sub
stos
jnp
sbb
xor
jmp
ret
insl
pushf
arpl
push
out
or
mov
aas
xor
push
sbb
mov
test
push
inc
fildl
insb
lods
dec
fwait
mov
daa
jne
movsbl
jmp
shlb
movsb
pop
out
stos
cmp
popa
lret
mov
iret
pop
in
je
movsl
aas
fcomps
adc
or
fwait
lahf
add
outsl
sub
add
inc
in
daa
nop
clc
orl
je
pop
or
leave
in
nop
inc
movsl
mov
outsl
xor
lds
mov
js
pop
stc
mov
mov
push
sub
sbb
mov
and
jbe
cld
push
lea
mov
xchg
mov
loopne
jo
pop
dec
xor
and
fisubrs
js
aam
popa
sub
outsl
inc
jp
adc
adcb
or
pop
hlt
add
imul
iret
dec
jae
inc
mov
rorl
imul
sbb
cmpsb
mov
inc
dec
sti
cmp
ja
aam
stos
nop
pop
pop
jmp
mov
mov
subb
sbb
or
mov
adc
mov
loopne
push
mov
outsl
addr16
mov
sbb
and
cmp
mov
insl
lcall
pop
cld
mov
out
jb
mov
pop
je
pop
aam
push
repz
inc
mov
mov
testl
mov
mov
mov
pop
push
pop
xchg
mov
sahf
xor
cs
out
out
jae
lcall
mov
adc
mov
inc
add
aam
mov
xor
aam
adc
out
mov
dec
mov
out
dec
das
leave
je
push
push
out
fcoml
mov
push
fldl
pop
pop
push
jbe
imul
push
pop
mov
xor
ror
fidivrs
fs
lods
and
ljmp
inc
push
orl
jae
fsubs
jae
inc
cmp
daa
incb
test
rorb
lahf
dec
cmp
mov
int3
xor
mov
mov
lods
insl
dec
ss
lret
int
test
or
inc
subb
dec
mov
sub
mov
xchg
push
sbb
pushf
movsl
cwtl
xchg
subb
hlt
add
dec
dec
sbb
jl
lods
mov
call
mov
adc
shll
inc
jns
scas
dec
mov
lcall
mov
mov
nop
sbb
faddl
dec
popf
pusha
movsw
pop
addl
push
ret
pop
mov
push
leave
jae
jle
sub
mov
xchg
sbb
shrl
lcall
adc
inc
jmp
lock
sar
into
mov
sbb
mov
arpl
test
andl
int
test
push
xchg
cmp
push
insb
mov
jns
ror
and
push
sub
scas
aad
out
rcrl
pushf
addr16
repz
ss
popf
sbb
mov
jg
popa
aam
ret
pushf
xor
pop
mov
lahf
loop
xchg
scas
popf
add
xchg
mov
xor
mov
xor
push
std
mov
mov
mov
aam
scas
add
mov
sbb
push
push
or
push
outsb
shrl
xor
xchg
ss
clc
cwtl
addr16
mov
mov
arpl
or
imul
test
cmp
xlat
lods
pop
stos
std
adc
cmc
xchg
inc
std
and
clc
adc
popf
sbb
mov
push
inc
adc
aaa
subl
inc
loopne
hlt
cmp
sub
std
outsb
push
or
hlt
fisttps
xor
outsb
jae
and
movsb
adc
in
jecxz
add
outsl
pop
fistpll
bound
mov
or
inc
mov
mov
aaa
movsb
cld
aaa
xor
xchg
dec
rcll
bound
sar
imul
nop
cltd
add
lods
sub
inc
orb
test
test
lret
sub
sbb
pusha
cmpsb
mov
sahf
dec
or
push
push
add
aaa
mov
lock
popa
add
push
xor
push
out
sarl
jecxz
cmpsb
ret
push
fs
or
sub
mov
pop
repz
sub
jo
lock
xchg
mov
fisttps
xchg
mulb
dec
and
push
sbbb
into
sbb
jmp
jno
mov
jb
add
ret
sbb
dec
cmp
push
lods
js
int3
test
testb
mov
loop
fwait
adc
pop
mov
aas
aam
mov
rcrb
stos
push
mov
inc
push
mov
fcoms
and
cwtl
pop
insl
daa
adc
cltd
lods
adc
repnz
out
dec
jne
dec
jbe
cmp
xchg
mov
mov
mov
dec
outsl
adc
nopl
in
rol
xchg
mov
and
mov
notb
enter
jmp
sqrtps
sub
jb
arpl
cltd
jecxz
xlat
add
or
js
xchg
cmp
cmp
repnz
cmpsb
inc
xor
rcrb
jbe
arpl
jg
cs
xchg
cmp
movsl
in
arpl
push
add
lods
or
outsl
pop
sub
stc
repnz
push
ljmp
ljmp
test
cli
out
ret
rcrb
xchg
clc
clc
jle
ret
inc
daa
fistl
ret
aaa
xchg
ficoms
mov
js
jns
cmp
popf
dec
sbb
or
lds
cwtl
lds
sbb
mov
push
loope
and
bound
shll
mov
in
push
sahf
stc
stos
ret
dec
idiv
push
dec
pop
cmc
fcompl
sub
add
add
sahf
xor
inc
cld
imul
mov
fisubl
lcall
pop
sbb
js
sub
adc
out
jecxz
orb
dec
imul
xchg
out
jl
sbb
jmp
jle
shll
push
test
test
leave
xchg
pop
jne
or
jle
xchg
and
movsl
sbb
andb
mov
adc
jno
jnp
xor
icebp
mov
mov
pop
outsl
mov
add
xchg
shlb
mov
fwait
jle
ja
push
mov
xchg
adc
xchg
sbb
jo
ret
pop
outsl
add
or
dec
arpl
data16
cli
mov
fimull
ljmp
or
mov
cwtl
leave
divb
cli
xchg
jg
sub
adc
out
lret
inc
lea
out
movsl
push
test
adc
push
jno
mov
jmp
mov
pop
jns
aas
int
inc
in
mov
ffreep
jns
test
mov
lea
xor
mov
fstl
les
hlt
dec
leave
es
sahf
mov
mov
fldcw
adc
sbb
cmp
dec
jo
fnstenv
pushl
pop
or
popa
fists
rcrb
push
jae
jae
adc
dec
aam
call
mov
in
sbb
loop
aaa
es
pop
fstpt
mov
pop
sub
jle
mov
sbb
jnp
push
push
rcrb
pop
outsb
sti
mov
ret
je
push
test
popf
leave
or
pop
lcall
and
scas
shrl
and
lea
sbb
and
cmp
mov
xlat
aad
add
dec
push
jno
dec
xchg
adc
xchg
adc
subb
dec
sbb
cmpsl
sbb
sbb
stc
repnz
mov
lcall
mov
cmp
jne
mov
and
lea
cmpsb
lret
mov
sbb
mov
jo
dec
pop
repnz
pushf
lahf
outsl
outsb
ja
inc
popf
sarb
cld
mov
and
and
push
pop
mov
and
adc
leave
orl
loope
ret
pop
xorl
arpl
pop
add
cmp
dec
movsb
adc
push
repz
sbb
aam
jecxz
cmp
rorl
sub
ds
push
mov
jno
push
pop
sub
mov
push
fs
arpl
sbb
or
out
sub
or
jbe
mov
out
jae
movsb
push
out
or
cmpsl
inc
lods
and
lods
jb
fcom
add
outsl
ds
sbb
mov
pop
int3
shl
ja
jmp
stos
adc
xor
push
leave
sbb
add
jl
pop
inc
sub
mov
loope
jne
fistpll
jle
lret
sbb
incl
fsubrl
push
test
and
sub
lret
mov
outsb
xchg
sub
mov
and
fnsave
sbb
out
or
nop
movsl
out
and
insb
cmp
sub
mov
cmc
or
mov
and
pop
or
xor
fisttpll
add
inc
inc
sub
pop
cmp
dec
add
out
dec
dec
nop
jmp
loopne
add
add
cmp
lods
cmp
push
shll
xlat
and
out
mov
pushf
push
sub
scas
adc
fstl
fdivs
outsb
int3
fs
mov
fnstsw
add
in
stos
cmp
sub
popa
inc
pusha
repz
mov
aas
push
xlat
leave
lret
int3
or
sbbl
fwait
jb
fdivrs
lds
test
mov
movsl
cmp
fistl
mov
sbb
jg
mov
xchg
lea
shl
rorb
mov
adc
out
sbb
loopne
pop
mov
mov
imul
in
cmp
iret
dec
adc
mov
sbb
pop
repz
lret
sbb
mov
push
push
lret
clc
jae
mov
stos
lahf
mov
dec
mov
jae
push
mov
inc
xlat
imul
shll
mov
lds
popf
jae
sbb
xor
push
pop
call
mov
in
sub
adc
cs
pop
pop
xor
push
movsl
addr16
dec
nop
sub
repz
adc
lcall
add
int
push
ds
cli
loope
add
pop
out
lahf
in
fildll
xor
fwait
stc
loope
pop
or
xor
movsb
rcr
aad
cmp
fwait
lods
addr16
adc
outsl
and
pop
jp
daa
mov
fsubr
or
mov
push
idivb
stc
sbb
rolb
or
xor
inc
in
shl
mov
int3
add
lods
sar
add
add
cli
dec
push
out
xchg
dec
sub
push
fwait
aas
mov
cmpsl
jmp
mov
mov
mov
test
xchg
jbe
in
sbb
into
mov
pop
stc
in
xchg
sub
mov
enter
fisubrl
inc
sbb
int3
push
and
adc
inc
push
clc
inc
cmc
push
push
push
and
movsb
mov
push
xchg
negl
jo
cltd
jmp
xchg
dec
clc
nop
mov
lret
pop
pop
pop
popf
inc
lret
into
jp
jp
sbb
sbb
test
xchg
mov
mov
push
fwait
and
icebp
and
xorl
cs
pop
outsl
fwait
sbb
or
push
push
inc
sub
inc
nop
push
mov
lds
jae
jecxz
mov
sbb
cmp
add
pop
lret
mov
mov
mov
out
je
mov
sbb
das
inc
shrb
sbb
imul
int3
or
push
mov
jl
bound
ret
cld
imul
dec
loop
loope
mov
lret
int3
dec
pop
lahf
and
lret
xchg
aas
ja
daa
repz
mov
mov
cli
cmp
std
bound
mov
loope
mov
pop
mov
xchg
push
iret
sub
mov
mov
sbb
loope
and
sbb
push
cmp
subl
fldenv
inc
xor
add
inc
and
stos
shlb
mov
inc
cmp
pop
dec
bound
dec
mov
je
ljmp
je
add
cmp
repnz
or
mov
mov
loope
dec
lods
pop
mov
loopne
inc
or
mov
stc
mov
push
repnz
addr16
ret
xor
pushf
or
cmpsb
ret
add
test
mov
add
imul
lcall
mov
jae
xorl
test
hlt
cld
sbbl
sbb
and
ja
out
jle
addr16
dec
mov
aad
or
sub
subb
and
int
mov
adc
inc
push
sub
sbb
mov
mov
repz
stc
jmp
ficoml
inc
mov
shl
nop
ret
xchg
popf
cmp
pop
stc
sarl
mov
sbb
xlat
lcall
cltd
lea
inc
fmuls
pushf
mov
mov
les
add
pop
mov
push
push
nop
sbb
sub
mov
mov
movsb
aas
sub
or
mov
imul
fwait
inc
dec
xchg
or
add
cli
dec
std
cmp
and
cmpsl
cmp
arpl
dec
push
push
cmc
pop
fsubr
pop
je
pop
fmull
rol
mov
adc
mov
push
jns
inc
fs
pop
pop
sbb
enter
out
pop
js
hlt
lcall
pop
xlat
jno
mov
sub
push
lds
and
mov
aam
stc
xchg
xchg
xor
frstor
fsubl
inc
ret
jns
daa
cli
xchg
mov
sub
insb
movsl
insb
and
and
outsb
mov
ret
scas
loope
jmp
inc
decl
pop
sbb
jl
or
inc
mov
cli
shrd
arpl
mov
cmp
sbb
pop
setbe
dec
das
xor
or
mov
jnp
js
imul
ret
adc
mov
aas
push
movl
test
js
jg
scas
loopne
lret
xor
push
adc
sub
dec
jge
pop
mov
adc
or
xor
jge
scas
in
xor
push
ret
cltd
mov
dec
stc
xchg
dec
mov
and
movsb
test
movsb
and
addl
out
jno
jo
jmp
jl
data16
dec
ret
dec
sahf
fmuls
shll
dec
das
push
inc
out
mov
jne
popa
ljmp
cmc
in
cmp
sbb
mov
aas
push
testb
adc
cmp
pshufw
lahf
jecxz
clc
inc
and
dec
in
fstpl
loop
jb
jge
mov
cs
testb
pop
lea
out
dec
cmp
in
xchg
or
pop
lock
rolb
pop
daa
pusha
out
push
and
fdivl
jmp
add
out
fiaddl
scas
sbb
les
fs
mov
pop
std
out
dec
andb
lret
mov
jl
pushf
push
or
mov
xchg
cmp
lahf
mov
mov
imul
shl
ficomps
dec
inc
sbb
xchg
add
push
shrb
cmpsb
ffreep
in
or
fmuls
outsl
test
imul
aaa
mov
dec
imul
push
add
inc
outsb
sub
rcrl
add
sub
push
or
jge
ds
or
loopne
push
lahf
mov
dec
add
mov
or
dec
jg
mov
fwait
ret
push
xchg
adc
xchg
faddl
mov
jmp
mov
sub
mov
movsb
and
popf
cmp
icebp
mov
lcall
inc
cmc
pop
add
xlat
dec
leave
push
rcr
aam
mov
sbb
adc
push
cmp
gs
add
xor
mov
pop
pop
push
pushf
xchg
xchg
lahf
ss
mov
and
mov
iret
mov
imul
adc
das
sub
loopne
stc
add
or
test
daa
shrl
pop
sbb
mov
test
cmpsb
sub
or
jl
or
mov
mov
jmp
call
ficompl
jns
xchg
adc
dec
push
out
decl
push
popf
stos
insl
mov
leave
add
push
enter
movsb
and
ja
decb
lds
hlt
jbe
leave
xchg
rcll
jnp
decl
enter
arpl
pop
jge
dec
adc
push
daa
sahf
mov
mov
repz
dec
xchg
or
cmp
mov
jge
jns
fwait
inc
adc
pop
push
gs
repnz
out
call
in
and
push
dec
fcompl
jg
lock
js
in
lret
fs
stc
inc
or
inc
cld
pop
in
popa
outsl
adc
and
adc
push
jmp
adc
dec
push
mov
push
cmpsl
push
test
addr16
sbb
mov
push
sti
sub
mov
push
aaa
cs
cs
fs
jl
mov
dec
push
fmuls
and
call
cmp
xor
xor
shlb
xchg
clc
sub
xchg
cwtl
in
cmp
dec
add
jg
fadds
xchg
push
mov
inc
fldenv
push
stos
fldt
sbb
ja
pusha
out
mov
loop
imulb
xchg
cmp
push
inc
sbb
iret
lock
pop
adc
loop
cltd
pop
pusha
jge
inc
push
jp
sub
inc
sub
das
aam
aas
push
inc
fs
or
fimull
imull
scas
and
push
mov
mov
cmpsl
loop
cmp
sbb
or
shll
popa
adc
cmp
cmp
es
test
loope
imul
cmc
xchg
mov
adcb
xor
stos
mov
sbb
dec
inc
paddusb
stos
ficomps
jae
mov
adc
sbb
daa
ds
xchg
lds
or
call
mov
stos
sti
fmul
imul
or
jge
dec
gs
aam
mov
jno
ds
and
insl
pop
jle
cs
insl
inc
lods
movsb
cmc
pusha
mov
pop
cmp
mov
dec
mov
adc
cli
sub
jl
cmp
mov
add
mov
mov
and
scas
or
scas
mov
addr16
lods
faddp
cwtl
aas
sbb
mov
scas
rol
xor
jnp
pushf
push
pop
aam
sbb
les
aas
and
test
sbb
movsl
mov
push
shrl
out
into
xchg
xor
add
xchg
cltd
dec
imul
mov
or
cmpsb
pushf
and
pop
dec
fidivrs
push
adc
adc
and
aas
fadds
pop
pop
pop
scas
fldl
mov
mov
dec
or
xchg
cmp
xchg
inc
inc
xor
sub
fidivrl
and
test
sbb
insb
lcall
hlt
jbe
ja
or
dec
fistl
aaa
sub
push
out
pop
pop
fmul
inc
leave
sub
cmp
jo
push
movsl
or
pop
push
mov
movsb
adc
sbb
cmp
xor
ds
or
cmp
sbb
sub
dec
xorl
adc
stos
push
sahf
mov
push
mov
loope
outsl
sub
fwait
add
addr16
fabs
test
dec
inc
and
pushf
or
mov
and
loop
sbb
push
lea
xchg
hlt
ret
inc
or
mov
xchg
and
call
gs
popa
pop
or
jne
add
add
lret
sub
rcrl
lds
sbb
les
mov
mov
dec
jge
pop
adc
jle
add
movb
imul
sarb
mov
sarb
or
push
ficomps
lods
or
and
cltd
sbb
cmp
outsl
lahf
pop
push
cli
lods
imul
jae
ficoms
les
adc
cmp
mov
arpl
ljmp
xchg
xor
jns
jge
js
bound
lret
mov
cmc
jbe
sbb
repz
dec
inc
cmc
dec
loopne
int
mov
xchg
push
int
std
adc
imul
int
mov
icebp
pop
jle
lret
or
mov
adcl
pop
loopne
jbe
jmp
xor
inc
and
test
mov
add
sbb
pusha
xchg
push
shrb
cmp
xchg
decb
mov
adc
jp
icebp
ljmpw
es
mov
icebp
mov
imul
imul
pusha
inc
xorl
push
fs
sti
out
push
lcall
mov
scas
iret
cmp
lods
push
mov
mov
sbb
mov
push
push
popa
out
pop
xchg
add
xchg
or
popl
jp
push
rep
cmp
fstpt
andl
jg
mov
push
push
mov
fwait
je
dec
dec
push
outsl
jle
aaa
bound
ja
or
pushl
loopne
push
push
cmpsl
sub
inc
or
addr16
loop
movaps
addb
sbb
mov
or
arpl
push
sub
pop
mov
jae
inc
pop
mov
stc
inc
sub
pop
subb
scas
mov
lea
pop
dec
cmp
ds
stos
and
cmpsb
xlat
cmpsl
sahf
pop
mov
dec
call
mov
jecxz
adc
lahf
dec
xchg
push
fwait
add
and
in
mov
xor
dec
lods
imul
sbb
adc
lea
pop
repnz
jge
mov
add
push
adc
les
lds
cmp
jns
xor
dec
push
sub
xorl
pop
addb
pop
mov
ja
int
jle
push
mov
mov
mov
mov
xor
fld
pop
aaa
iret
cld
ret
or
cmp
push
in
repz
mov
add
lock
cld
out
dec
adc
cmpsb
stos
mov
fisttpl
jp
mov
movl
out
arpl
pop
ffree
inc
add
leave
and
jno
xor
cmpsl
nop
test
arpl
lret
sub
fsubl
push
xlat
hlt
test
je
mov
sar
dec
xchg
xchg
mov
repz
das
push
jmp
add
inc
lret
lods
sub
jnp
testb
mov
jne
jmp
cmpsl
andl
or
pop
dec
dec
adc
aaa
push
sub
pop
lea
scas
out
sti
jbe
mov
mov
push
loope
mov
xchg
pop
fnstsw
push
adc
test
dec
jp
jmp
inc
pop
push
xchg
push
mov
lock
add
jmp
ja
ljmp
addb
faddl
mov
mov
sbb
test
pop
in
jne
dec
les
dec
outsb
cmp
roll
addl
xchg
icebp
dec
call
repz
xchg
mulb
mov
rorl
aad
add
mov
adc
rcl
lret
pop
enter
icebp
add
cwtl
dec
jbe
subb
and
inc
fwait
test
imul
mov
and
test
dec
or
inc
jg
dec
sarb
and
ja
fbld
xlat
jbe
cs
std
cmp
test
sub
sbb
gs
movsl
pop
jae
cmp
shll
clc
scas
mov
xchg
cmp
sbb
sub
sub
adc
aas
mov
jne
pop
imul
aam
bound
sub
dec
fldt
out
loopne
aad
mov
stc
or
rorb
cmpsl
cmc
js
mov
dec
loopne
xchg
aad
push
popf
push
push
enter
fistpl
ret
ds
pop
fisubl
inc
imul
xchg
xor
sbb
mov
adc
mov
cmpsb
jp
cmc
inc
jecxz
mov
out
push
jmp
and
ja
inc
insl
repz
cltd
cmp
roll
in
push
mov
aam
push
push
int3
jl
es
xchg
push
aaa
pusha
jg
repnz
pop
xchg
dec
nop
and
test
xchg
leave
ret
pop
add
jno
xchg
mov
xchg
popf
loope
cmp
outsb
add
cmp
push
adc
push
ds
mov
push
cli
pop
fstpl
bound
xlat
popa
in
add
ret
out
sub
insb
outsl
ljmp
xchg
aam
ljmp
xor
jge
stc
loopne
dec
inc
pop
push
mov
xchg
hlt
lcall
mov
add
jle
jns
jp
mov
movsl
je
inc
jne
cmp
mov
ja
sbbl
mov
pushf
mov
mov
out
mov
add
repz
lock
xchg
pop
fsubs
cmp
arpl
gs
in
jno
hlt
stos
insl
cmovo
xchg
cmpb
imul
mov
pop
js
jle
pop
fcomps
imulb
iret
fs
xor
push
sub
lret
xchg
in
dec
inc
popf
pop
ret
nop
lahf
inc
sbb
lock
fsubrl
inc
arpl
ret
cli
jae
xchg
cmp
add
adc
call
data16
sbb
clc
mov
and
loop
mov
aam
adc
cmpsb
xchg
xchg
test
imul
inc
mov
mov
jb
int
mov
inc
test
movsl
stc
pop
dec
xchg
movsl
xchg
fs
mov
inc
xchg
lds
mov
es
fstps
push
fstpl
inc
lret
in
cwtl
sar
frstor
mov
cmp
mov
xor
test
pop
fnstsw
dec
mov
aad
lcall
xor
fdivr
jg
jge
mov
scas
aad
or
in
xchg
lods
cmp
sahf
mov
jl
out
or
mov
nop
notl
pop
mov
out
cmpsl
repnz
popf
repz
mov
adc
out
pause
push
pushl
cmp
ret
xchg
pop
push
or
push
popf
movsl
imul
jno
inc
mov
add
ret
inc
in
fs
adc
out
repnz
and
or
xchg
push
pop
jae
inc
mov
adc
mov
lret
idivl
push
or
mov
add
clc
shll
inc
icebp
cltd
pusha
pop
or
dec
xchg
push
cmpsb
fs
xchg
inc
cli
push
push
inc
test
fdivrs
and
inc
icebp
mov
test
lret
pop
push
imul
stos
pop
pop
daa
lods
out
push
arpl
jge
popa
mov
pushf
xchg
cmpsl
push
jp
pop
sub
push
inc
add
lods
xchg
cwtl
jmp
les
adc
in
movl
jnp
sub
mov
jo
push
sub
inc
cmpsl
aaa
sbbb
mov
push
in
cmc
dec
fcmovu
push
and
sub
sahf
fistpl
xor
arpl
cltd
aaa
cs
stos
mov
pop
cmp
repnz
add
test
bnd
scas
dec
pop
fwait
cli
or
jge
mov
je
addr16
adc
mov
or
push
adc
nop
and
pop
jne
fisttpl
insl
cmp
test
out
mov
jae
call
mov
pop
xchg
sbbb
movsl
jnp
dec
lahf
xchg
jo
sub
dec
sbb
aas
pop
mov
ljmp
push
pop
mov
enter
lahf
out
shrb
das
mov
adc
cld
push
xor
lret
xchg
mov
sbb
sbb
outsl
stc
je
push
jb
test
shl
jecxz
insb
cmp
fcomi
jge
mov
fs
dec
sbb
in
dec
and
cmp
adc
insb
imul
push
xor
sub
adc
fsts
movsb
mov
add
not
jl
lea
or
out
and
mov
cmpl
leave
ljmp
mov
arpl
xor
fists
xor
mov
xor
sub
mul
sahf
jo
dec
inc
mov
lods
inc
xor
cmp
add
cmpsb
mov
and
mov
sub
mov
int
jge
fcmovnu
or
add
js
jb
popa
pop
xor
lds
cli
pop
cwtl
movsl
imul
std
mov
and
jg
dec
aad
or
frstor
cmpb
sbbb
lea
call
loop
ja
jp
aas
dec
cmpl
cmp
lret
cmp
mov
movsb
addr16
adc
adc
mov
mov
popf
sti
subb
jbe
and
mov
cld
pop
xchg
mov
into
pusha
mov
daa
lea
mov
cmp
dec
into
mov
xor
xchg
in
scas
xchg
inc
fsts
adc
mov
in
cli
adc
and
fstl
test
in
xor
js
dec
scas
adc
outsb
inc
sarl
rcl
inc
cld
mov
sar
fs
clc
addr16
cmp
jle
or
mov
dec
jg
and
xchg
dec
jge
das
add
in
xlat
xor
mov
enter
scas
pop
mov
inc
dec
mov
jmp
pop
das
sbb
sbb
mov
pop
mov
stc
pop
divl
sbb
dec
pop
aaa
jecxz
inc
mov
shll
xor
daa
sub
lea
fsubs
xor
inc
fimull
popf
or
subl
hlt
xor
inc
jb
cmpl
cmc
mov
adc
or
jbe
ror
or
int3
lcall
and
xchg
adc
mov
cs
add
xor
xor
sub
movl
mov
add
movsb
jge
add
sub
je
pop
fisttpl
sbb
fisubrs
shr
pop
jno
xchg
add
repnz
pop
jo
in
xchg
clc
cld
or
cld
inc
jb
in
jle
add
sub
jp
jg
jns
xorl
and
pop
jae
push
push
data16
aam
sub
mov
popf
es
sub
dec
aam
mov
pop
xchg
stos
fdivr
ret
divb
into
xlat
sti
popf
dec
sarb
les
mov
mov
in
lea
mov
stos
lods
aas
pop
orl
xchg
add
mov
pop
add
xor
pop
jnp
and
jl
pop
das
push
add
inc
xchg
jno
clc
pop
movsl
push
inc
add
cltd
push
xor
xor
xor
rcll
sbb
mov
pop
lret
mov
or
adc
pushf
loopne
je
sub
dec
out
in
pop
into
mov
ss
dec
dec
loop
pop
cmc
insl
jo
out
mov
sub
push
mov
int3
or
dec
adc
out
fs
mov
test
in
xor
popa
lds
aam
clc
cwtl
push
pop
or
fadds
cld
das
xchg
sbbl
imul
push
jle
xor
int
push
xlat
fildll
aad
mov
add
xor
jg
jmp
rcrb
mov
xor
xor
push
jns
cld
push
mov
sbb
das
and
icebp
push
loop
fwait
mov
and
aaa
sub
loope
mov
aaa
pop
ficoml
add
pop
add
mov
in
cmpsl
adc
and
cwtl
inc
stos
cmp
bound
mov
fisttps
adcb
ja
inc
cmp
cmp
and
cmp
js
lcall
dec
pop
jns
lret
std
icebp
lret
cmp
push
jp
jns
lea
push
scas
mov
ja
out
sbb
idivl
je
in
inc
or
ja
xor
idiv
cmp
insl
adc
sar
push
xchg
call
inc
push
cli
dec
ret
popa
jecxz
repz
test
fldl
aad
imul
jno
hlt
adc
stos
jmp
stos
inc
inc
inc
dec
and
test
fwait
hlt
pop
ficoml
push
or
imul
mov
and
add
sahf
jle
lcall
jg
in
or
and
cltd
mov
mov
jmp
shll
cmp
jge
mov
inc
inc
sahf
not
lock
xor
loope
pop
push
fdivrp
fnsave
xchg
ds
jbe
pop
scas
ja
ja
clc
add
in
shll
mov
rorl
aad
fdivr
mov
out
mov
xchg
lea
fdivl
sbb
jbe
mov
adc
mov
mov
mov
xchg
mov
add
cmp
push
das
mov
sub
push
test
adc
push
jg
bound
xchg
mov
sarl
jno
adc
lahf
jmp
aad
ljmp
std
ret
jp
mov
dec
stc
stos
xor
cmp
cld
xchg
mov
sbb
sbb
jo
jg
mov
pop
lock
sub
les
cmp
push
jne
std
insb
adc
loope
sbb
xor
fs
push
nop
pop
inc
or
bound
aam
and
push
pushf
fistps
call
pop
arpl
pusha
sbb
scas
dec
cmc
scas
imul
jno
dec
adc
shl
xorl
add
popa
je
mov
push
leave
out
daa
xorb
sahf
mov
cmpsl
push
push
cmpsl
push
cwtl
jns
xor
jmp
cld
orb
loop
lds
push
cwtl
dec
sbb
mov
jns
js
jl
repz
xor
or
mov
add
pop
push
mov
js
fsubl
xor
mov
push
dec
pop
adc
xchg
add
mull
mov
movsl
jo
push
addl
sahf
outsl
mov
adc
ds
inc
pop
lret
in
mov
cmp
jbe
xchg
jmp
push
int
repz
sahf
push
and
or
clc
push
lods
pushf
mov
test
jne
pop
es
insl
adc
in
aas
test
loop
xchg
repnz
pop
popf
adc
lret
mov
aam
leave
sti
push
add
mov
hlt
mov
adc
pop
das
dec
les
xchg
enterw
push
pop
xlat
sub
outsb
test
popa
mov
es
push
sarl
loopne
pop
cs
leave
mov
icebp
dec
out
and
cli
or
outsb
or
ds
fsubl
bound
jne
jp
mov
mov
inc
icebp
fnstsw
leave
sbb
idivl
cmp
fdivrs
dec
adc
icebp
and
ja
cld
rolb
mov
insb
repnz
les
pop
adc
imul
int3
xchg
push
inc
mov
add
jp
dec
push
test
test
jle
add
in
adc
dec
jp
fwait
jnp
fwait
lds
faddl
push
out
mov
inc
add
es
xor
sub
mov
lea
sbb
xchg
je
sbb
addr16
test
lahf
jmp
and
iret
xor
test
shlb
and
insb
inc
jl
mov
add
imul
movl
jns
adc
cmpb
push
out
cmp
and
leave
bound
adc
lods
out
jmp
outsb
fcmovne
add
popa
jmp
das
adc
sub
fucom
lret
lods
rcl
push
mov
ret
test
jne
ja
in
nop
mov
rclb
pushf
clc
fs
imul
jge
jae
xorb
mov
out
shlb
jae
push
xor
cmc
cmp
aaa
mov
outsl
pop
cld
mov
lock
adcb
arpl
dec
add
or
xchg
ljmp
int
repz
aam
xchg
mov
inc
int3
mov
adc
fisubl
lock
into
jmp
pop
xlat
sub
popf
sub
cltd
shl
pop
push
aad
leave
cmp
popa
mov
je
inc
add
xor
or
enter
in
and
mov
jmp
call
cmp
mov
outsb
push
xchg
in
adc
cmpsb
cmp
pop
imul
push
cmp
stos
mov
mov
sbb
cmpsl
ds
xchg
mov
mov
leave
mov
aam
mov
mov
adc
mov
decb
mov
inc
mov
adc
or
orl
sarl
jle
xor
sbb
in
fs
sahf
lret
insb
lahf
mov
jge
pop
stc
in
dec
mov
enter
test
jnp
hlt
or
jnp
inc
push
adc
or
ret
pop
mov
inc
mov
dec
adc
mov
data16
jecxz
jmp
movsb
stc
out
push
imul
nop
pop
fldt
fwait
std
lock
arpl
icebp
pusha
stos
push
pop
inc
add
fwait
add
and
jecxz,pt
ret
jmp
mov
fcmovnbe
lea
sub
push
orb
scas
sbb
scas
mov
xor
adcb
ljmp
mov
push
cmp
test
lods
sub
test
adc
in
pop
cld
mov
mov
int
sub
xchg
sub
and
mov
mov
leave
cmp
stos
clc
jl
data16
lcall
inc
pop
dec
adc
mov
mov
adc
inc
jno
push
adc
in
add
loopne
arpl
xchg
or
enter
inc
xor
scas
sbb
aam
ja
in
push
lcall
adc
mov
in
cld
mov
lods
out
stos
adc
lahf
repz
stos
ret
mov
pop
xchg
and
into
repnz
clc
inc
xor
fbstp
and
ret
aas
sbb
push
xor
mov
test
jns
push
movl
fucomip
out
cld
outsb
jae
or
inc
out
sbb
jecxz
enter
push
ret
push
enter
je
cmp
mov
xor
or
mov
call
pop
sbb
gs
dec
int3
push
data16
sub
loopne
mov
mov
push
add
bound
insl
out
adc
mov
repz
add
insb
mov
pop
xor
jae
inc
nop
mov
test
movsl
jbe
lds
push
stos
popl
jns
and
cli
scas
roll
sbbl
fwait
mov
ds
nop
inc
dec
aad
xorb
adc
cmpsb
add
arpl
rcrl
lret
data16
xchg
ret
add
adc
mov
outsl
pop
std
mov
scas
jl
and
fwait
mov
test
outsl
lock
stos
scas
xchg
mov
sub
xchg
out
and
push
das
icebp
jge
xchg
push
repnz
loop
clc
test
sub
arpl
gs
jp
jmp
arpl
mov
jo
sbb
and
xor
jl
sub
cmp
xchg
add
xchg
xchg
stos
adc
iret
stc
fsts
popf
jo
jle
inc
jle
lret
or
scas
jne
imul
sbb
mov
les
loope
xchg
cmp
pop
out
repnz
inc
movsb
js
inc
pushf
cmp
add
or
mov
xlat
adc
scas
adc
jno
dec
pop
dec
js
sub
sbbb
ljmp
loop
loopne
aas
pop
loop
mov
adc
sub
pop
cmc
in
leave
psubsb
and
lods
mov
hlt
push
jb
imul
xor
jb
xor
fwait
dec
jg
lock
inc
ja
push
cmc
adc
cld
out
test
pop
dec
mov
push
sbb
popl
xchg
mov
pushf
insb
xchg
popa
hlt
je
jge
ret
insb
pop
xchg
lret
or
push
pop
mov
in
jbe
sub
cltd
mov
cli
xchg
mov
ds
inc
add
and
popf
movsb
lock
bswap
jno
mov
movsb
xor
push
call
lret
inc
dec
mov
data16
xchg
incb
test
sub
sub
sbb
push
push
cmp
insl
mov
pushf
and
mov
scas
nop
push
cmpsb
inc
aad
cltd
xchg
or
rcr
lret
jo
stc
les
add
pusha
mov
ljmp
fildll
loopne
cmpsl
mov
outsl
inc
std
rolb
dec
nop
xor
jge
pop
stc
es
add
jecxz
mov
add
rclb
dec
pop
lcall
lock
push
sub
into
mov
push
push
movsb
push
jle
js
les
cmp
orb
mov
inc
add
rcrl
out
loope
mov
xchg
lret
leave
insl
push
mov
cmp
test
sub
pop
jl
add
gs
sub
aam
into
cwtl
mov
into
cmc
push
addr16
nop
int3
movsb
mov
stos
cmpsb
test
lea
mov
stc
jecxz
or
and
pop
push
sbb
dec
push
mov
std
outsb
mov
mov
adc
or
mov
psubsb
mov
pop
imulb
outsw
mov
sub
fadds
es
cmp
hlt
rcrb
out
inc
adc
push
sub
sub
xor
xor
sub
inc
int3
and
lods
sbb
popf
mov
sbb
imul
lret
movsb
or
sti
jne
outsl
str
fisttpl
add
shll
stos
pop
adc
inc
push
std
sub
cmp
or
sbb
or
scas
pop
add
jecxz
xor
nop
and
add
xor
int3
popa
inc
hlt
xlat
dec
mov
sub
stc
in
stc
or
movsb
sbb
in
push
lea
push
std
popf
cmp
sbb
jge
add
sub
std
addl
jnp
pop
gs
stos
ja
sbb
push
ficoms
xor
xchg
inc
jl
pushf
jmp
dec
cld
insb
pushf
test
addl
mov
aad
mulb
aam
xchg
mov
xor
sahf
outsl
or
jnp
int
pushf
iret
fcoml
in
add
push
je
jo
test
adc
imul
push
sub
pop
int
push
jmp
stc
cmp
and
test
mov
fneni(8087
push
push
pusha
nop
adc
or
fwait
loopne
adc
inc
push
push
xor
push
sub
xchg
clc
lcall
cmp
sbb
clc
cltd
dec
pop
aaa
fs
inc
inc
cmpsl
or
pop
loope
sbb
push
mov
sub
jbe
les
pop
test
ss
out
insl
xor
push
lahf
mov
addl
xchg
inc
mov
lret
jno
and
mov
push
testb
add
xor
rcr
add
sub
int
mov
ljmp
and
dec
aaa
insl
jns
or
mov
xchg
push
xchg
cmpsb
fmull
mov
fsts
pop
movq
sahf
xor
pop
mov
dec
arpl
xchg
sbb
mov
jmp
inc
lahf
jge
cmp
mov
fimull
dec
cmp
aas
cmp
mov
stos
dec
xchg
adc
push
test
notl
shll
scas
shll
sbb
add
pop
gs
jns
jno
int3
push
les
test
mov
and
mov
outsb
addr16
scas
sbb
gs
mov
inc
dec
sub
lock
mov
dec
pop
test
mov
ljmp
lock
in
adc
jns
sub
pop
notl
ficoml
mov
mov
or
iret
push
add
mov
int3
pop
std
push
int
int3
or
xchg
gs
pop
pop
js
adc
pop
dec
lcall
insb
pop
xchg
lock
inc
cld
mov
sub
jae
dec
xchg
mov
pop
push
cmp
loope
mov
lret
or
fnsave
inc
xor
xchg
icebp
lahf
out
xchg
ret
jmp
movsl
int3
mov
cmp
push
daa
push
lock
jnp
aam
add
add
sub
or
repnz
pusha
add
xor
mov
mov
lret
push
dec
sub
cmpsb
stos
xlat
dec
mov
imul
popa
or
cmp
mov
or
inc
ljmp
and
sbb
dec
shll
nop
pop
movsl
test
or
mov
clc
add
arpl
shlb
cmp
lds
sahf
push
ja
cmp
aas
adc
leave
clc
arpl
cmpsb
pop
inc
jl
cmp
popa
dec
mov
fsubl
jb
ficomps
out
mov
push
jl
pop
loope
mov
xor
loope
xchg
lsl
enter
and
xchg
sub
je
sub
xchg
cmpsb
ss
push
and
pusha
stos
je
add
pop
add
fidivs
push
dec
mov
dec
mov
lea
xchg
inc
bound
test
stos
insb
xchg
cmp
orl
xchg
dec
push
call
dec
push
aaa
lcall
lret
sub
jns
js
xchg
roll
cmpsb
cmp
or
xor
xor
ficomps
das
repnz
fwait
sub
jecxz
mov
dec
fs
dec
into
ret
jo
stos
ret
mov
xlat
sub
jnp
adc
or
mov
jmp
push
popf
cs
scas
jl
icebp
stc
and
dec
test
xor
cmc
or
insl
ds
ret
dec
inc
jl
adc
and
jnp
test
loope
sbb
and
pusha
or
sbb
cli
xchg
add
adcb
fwait
lods
sbb
lcall
mov
fsubrp
sub
in
in
sahf
jle
pushf
cmp
ljmp
mov
and
aam
loop
call
dec
xchg
test
mov
pop
push
iret
and
add
dec
dec
popa
cmpl
test
pop
test
sbb
jns
jp
les
jmp
xor
xchg
inc
cmpl
inc
inc
test
cltd
pushf
pop
push
pop
cmp
pop
test
cmp
movl
mov
mov
leave
cmp
mov
mov
cmpb
jb
push
fcoml
les
andl
dec
sbb
jge
ljmp
cltd
je
inc
lea
cld
pop
mov
sbb
and
push
leave
ss
out
sbb
jno
sub
cltd
inc
push
test
sub
mov
sarb
outsb
orb
das
mov
cmp
and
cmpb
jg
add
test
and
adc
fs
inc
loopne
push
mov
wrmsr
ss
ja
mov
dec
pop
mov
or
shrl
cmpsb
xchg
sub
or
jge
push
ja
push
das
xchg
test
scas
push
add
add
pop
loopne
arpl
pop
rol
mov
insb
cmp
add
rcrl
and
pop
xchg
pop
je
or
mov
inc
cwtl
mov
cmp
fcomps
test
leave
add
and
fwait
popf
mov
fucom
lret
xchg
pop
je
jle
or
or
push
xchg
in
dec
fsubs
jecxz
adc
mov
incl
cmpsb
test
mov
aad
les
and
sbb
ret
mov
sbb
xchg
push
int3
and
and
lea
jo
imul
pop
das
jne
push
shlb
jmp
das
or
sahf
mov
mov
push
enter
xchg
push
push
popa
pop
pop
sbb
pushf
sub
jbe
incb
mov
add
pop
rorb
jmp
notb
dec
stos
mov
les
adc
inc
imul
xchg
mov
clc
subl
into
mov
sbb
loop
loopne
shrb
into
cmp
mov
add
fcmovne
fdivl
in
dec
mov
mov
lahf
imul
fstps
xchg
cmp
aaa
xchg
cwtl
inc
outsb
jae
rcr
gs
daa
pop
loop
push
ret
test
iret
sub
push
mov
cmp
xor
gs
mov
push
and
mulb
mov
in
lcall
daa
mov
das
xchg
add
pop
adc
fwait
adc
push
or
data16
adc
pop
mov
push
out
stos
and
sbb
movsl
xchg
or
or
ficompl
ja
dec
pop
clc
movsl
cmp
lds
adc
dec
mov
adc
push
mov
leave
je
test
and
scas
jno
out
fadds
cmc
lcall
cmp
mov
roll
jo
cmp
fidivrs
push
adc
jmp
xchg
add
inc
push
cmpsb
mov
dec
push
inc
je
sub
out
cmpl
and
mov
push
xor
movsl
cli
or
ret
das
ljmp
mov
cmpsb
sar
xchg
inc
dec
addr16
adc
in
push
test
outsb
adc
and
addr16
sti
add
or
push
lahf
xor
shll
ja
xchg
sub
fucom
clc
dec
js
out
lahf
arpl
push
sub
lret
add
loop
and
sub
push
inc
fs
jp
sbb
jae
and
push
cltd
ljmp
dec
push
lods
addr16
pop
shll
ljmp
shlb
xor
inc
jp
push
jbe
push
leave
test
cmp
jmp
lcall
in
sub
enter
outsl
xor
jnp
dec
sti
xor
or
cmpsb
and
lods
xlat
dec
pushf
or
lds
imul
test
shr
fistpl
or
aaa
and
and
and
adc
add
rorl
iret
xor
cmp
in
pop
pop
decb
sub
in
mov
rorb
lcall
in
aas
jns
fildl
mov
pop
and
lock
sub
inc
es
dec
jno
adc
fs
cmp
push
and
icebp
inc
cli
cwtl
lock
mov
popf
sbb
jp
shll
mov
loope
add
sub
cmp
sub
xor
jnp
and
mov
inc
cmpsb
jge
addr16
aad
pop
int
add
les
xor
cmp
and
jge
aas
aad
cld
add
in
scas
sub
fsubrl
mov
es
dec
dec
icebp
dec
mov
pop
xor
mov
in
jbe
jns
fidivrl
lods
adc
loop
aad
and
popf
cld
and
sbb
aad
test
leave
idivl
sub
mov
mov
add
sub
jl
sbb
in
push
push
out
data16
lods
push
mov
jle
pushf
lret
repz
imul
jno
xchg
jb
mov
arpl
fs
pop
aaa
sbb
insb
jge
aam
xchg
cmp
jno
inc
movsb
add
gs
inc
int3
cltd
pop
rorl
mov
iret
mov
pop
lods
es
or
mov
or
push
mov
lods
lods
adc
adc
xor
cmp
adc
xor
xchg
push
cmc
or
adcl
not
dec
rcll
pop
aaa
mov
decb
xor
fildl
adc
jnp
mov
cmp
push
mov
je
mov
mov
xchg
ja
fisubl
mov
mov
sbb
fld
js
data16
sub
jecxz
or
not
or
or
xor
xchg
adc
push
jle
mov
mov
jae
dec
repnz
mov
dec
divb
mov
push
pop
dec
jl
fs
jmp
jb
test
jno
sub
loope
dec
push
fiaddl
adc
nop
jae
mov
sub
in
fsubrs
xchg
xor
fidivs
testl
inc
cs
movsl
aad
sarl
inc
shll
dec
insb
mov
mov
inc
std
idivb
jb
mov
or
push
fcmove
inc
inc
std
sub
cli
jp
enter
and
test
push
pop
notl
xchg
test
in
push
mov
stc
cmp
in
inc
cmp
fs
mov
cmpsl
dec
movsl
pop
aaa
jo
xor
nop
fstl
push
or
sbb
lea
pop
popf
lods
adc
dec
stos
sbb
popf
int
nop
std
or
mov
pop
inc
pop
dec
mov
push
test
cltd
jmp
iret
ljmp
out
adc
lods
test
nop
in
or
push
pop
mov
mov
push
and
sub
sub
ret
mov
mov
leave
sarl
mov
popa
dec
ljmp
adc
addr16
les
push
into
fildl
lods
and
ja
mov
inc
cmp
dec
push
cltd
sub
pop
std
leave
rcrl
lahf
xor
mov
jmp
pushf
mov
and
sbb
lret
popf
mov
mov
sbb
add
cmp
mov
push
jg
xor
sbbb
arpl
jle
xchg
xchg
iret
pushf
xor
insb
xchg
dec
xorl
insb
aam
mov
repz
orb
mov
out
inc
mov
sbb
sub
pop
dec
les
sub
add
xor
out
push
fwait
xchg
push
cwtl
jb
xor
cmp
aaa
dec
cmpsl
mov
insb
arpl
call
mov
sub
test
loopne
or
scas
test
shll
mov
mov
xor
stos
sti
xchg
xchg
xchg
lods
bound
pop
cltd
push
decb
bound
jmp
cmp
movsb
dec
shrl
adc
jl
mov
dec
outsb
testb
jne
and
jle
repnz
lods
rcrb
pop
mov
push
and
sbb
cmpsb
test
dec
test
rcrl
imul
nop
dec
push
add
cwtl
xor
pushf
loop
movsl
lret
add
push
cmc
push
cmp
je
add
cmp
push
pop
out
mov
jg
cld
sub
hlt
push
xchg
or
xlat
sub
faddl
mov
js
je
insb
push
jno
jecxz
push
sub
xchg
fstpt
xchg
mov
lret
pop
xor
add
xor
sub
arpl
repnz
inc
out
and
enter
inc
orb
jo
mov
inc
sbb
std
lds
shlb
pop
dec
jns
mov
pop
xchg
fisubrl
xor
cmpb
xchg
ret
pushf
xlat
imul
push
lea
fsubl
cmp
pop
pop
pushf
jns
mov
pop
scas
mov
cltd
mov
dec
push
addr16
pop
je
jae
lods
sbb
push
dec
outsb
hlt
popa
xlat
or
jns
jnp,pt
add
sahf
in
popf
fistpll
mov
icebp
popa
push
mov
sbb
or
mov
imul
out
and
or
cmp
cmp
sti
add
pop
rolb
inc
repz
add
mov
jecxz
lcall
call
lahf
mov
repnz
push
push
cwtl
adc
mov
inc
cmpl
mov
mov
mov
rcr
inc
mov
and
outsl
ret
or
subb
out
aas
pop
inc
outsl
push
fimull
mov
dec
inc
jnp
insl
xor
popf
outsl
mov
int3
rorb
aad
jno
pop
sti
jnp
lods
xchg
xchg
imul
push
ss
and
lret
mov
imul
popf
test
cli
das
cmp
xor
cmpl
scas
sarl
rolb
jg
push
sub
mov
pusha
and
call
leave
fsubr
mov
movsb
sbb
les
fistpl
mov
mov
enter
lcall
mov
or
cmp
call
gs
cmp
fsubrl
out
pusha
clc
dec
pushl
and
and
ret
imul
xor
aaa
pop
lahf
or
mov
inc
leave
call
push
faddp
cltd
in
pop
cwtl
fistl
jae
sti
test
pushf
cwtl
or
push
ret
pop
pop
xor
cli
add
adc
fwait
cmp
sub
in
clc
dec
jmp
xchg
mov
fstl
mov
aas
lods
inc
sub
fisubrs
or
mov
pop
enter
imul
xchg
xchg
jecxz
and
data16
mov
repnz
xor
adc
mov
std
mov
push
fnsave
dec
adc
pop
imul
mov
das
rolb
push
sub
xchg
add
repz
inc
dec
test
mov
fwait
and
adc
jle
push
inc
and
xchg
sub
pop
lock
adcb
sub
aas
or
scas
movsb
cmc
inc
fmull
mov
mov
mov
xchg
outsl
jb
mov
rcrl
aam
fmull
imul
lods
cvtps2pd
cmp
add
test
fadds
lcall
icebp
fldt
push
ja
jb
pushl
call
pusha
sub
xchg
add
inc
sti
ljmp
mov
rclb
mov
imul
push
outsl
sbb
test
int
push
adcl
imul
test
push
adcl
pusha
dec
shlb
fsubp
arpl
add
adc
jnp
jl
add
inc
cmp
adc
testl
pop
movsb
sub
sbb
fwait
push
mov
xor
ds
xor
jnp
jp
imul
push
fnsave
ss
jne
ret
add
sbb
addr16
aaa
jl
xor
jb
pop
xchg
sub
stc
lods
push
pop
xor
push
rclb
fists
clc
adc
mov
sbbl
sub
fisubs
push
int3
aas
pop
stc
stos
ljmp
inc
fcompl
lods
pop
add
and
in
ja
or
pop
test
int
mov
cli
jecxz
fisttps
popa
loopne
icebp
xlat
xor
das
xchg
mov
jp
and
dec
sahf
add
jge
nop
xchg
outsb
cmp
andl
push
and
pop
pop
pop
adc
cmp
cmp
out
inc
fimuls
mov
add
incl
sub
das
sub
xchg
bound
enter
and
out
sub
mov
call
idiv
jne
negb
aas
or
clc
mov
or
std
shlb
mov
jmp
sbb
and
mov
xor
jbe
ds
loopne
ror
lret
mov
fisttps
sbb
mov
fildl
int
mov
test
mov
les
sbb
sub
jns
popa
inc
mov
fsubrl
mov
mov
mov
cld
addr16
mov
xchg
or
cmp
push
ds
js
cmp
jge,pt
xchg
sub
mov
inc
or
add
mov
fisttpll
cli
out
push
xchg
icebp
outsl
mov
rcr
sarb
mov
popf
push
loopne
mov
add
and
pop
jns
cs
dec
inc
fiaddl
or
xor
fs
dec
adc
push
mov
jbe
pop
or
pop
imul
stc
pop
mov
cmpsb
rcrl
decb
dec
test
adc
icebp
ss
iret
adc
xchg
popf
jb
jmp
lret
mov
cs
dec
mov
mov
mov
add
shll
shr
pop
dec
cmpsl
sbb
jg
clc
roll
outsb
pop
sub
cwtl
mov
icebp
leave
out
xor
iret
push
xlat
jecxz
icebp
rcll
adc
fldenv
fisubs
xchg
aad
push
mov
mov
pop
mov
fistpl
mov
dec
aam
imul
iret
movsb
jbe
push
div
addr16
mov
insb
movsl
mov
mov
inc
fwait
push
movsb
sub
icebp
mov
jbe
and
aas
inc
adc
jg
cwtl
jecxz
push
aaa
sbb
dec
sbb
mov
daa
arpl
sbb
or
clc
or
sub
out
jmp
mov
adc
sub
xor
call
mov
aad
and
jmp
addr16
xchg
lea
and
xor
xor
ss
daa
xchg
and
push
mov
mov
push
sub
dec
enter
sbb
lahf
xchg
pop
in
pop
cmpsb
dec
dec
xchg
sub
sarb
and
test
cmp
mov
xchg
and
imul
mov
fsubrs
mov
pushf
sbb
cmpsb
xchg
std
inc
cmp
cld
sub
or
jge
repz
mov
adc
data16
sbb
arpl
mov
mov
push
cli
test
mov
mov
cld
push
push
shr
test
outsl
sub
mov
pop
mov
cmp
sub
mov
and
or
rcrl
leave
out
imul
stos
sbb
lea
push
pusha
push
cmp
aad
iret
ljmp
rcrb
in
xor
jg
cmp
jl
in
dec
mov
dec
mov
mov
mov
or
pop
mov
enter
sti
stos
out
sti
sarb
pop
mov
sbb
into
xchg
cmc
push
test
cli
jne
or
pop
mov
pop
push
into
lods
sbb
inc
sub
ja
repnz
and
dec
and
cmp
jne
out
dec
inc
ds
sti
arpl
inc
push
or
mov
sub
sub
push
add
fs
mov
xor
loopne
xchg
lcall
scas
idivb
mov
cli
pop
xchg
getsec
out
jns
and
pop
mov
shll
mov
mov
imul
fwait
mov
and
sbb
xchg
jb
enter
and
fstps
mov
inc
popf
cmp
push
pop
or
mov
or
pop
repz
outsb
pushf
pop
fxch
aad
out
and
in
sar
jne
and
inc
mov
jmp
pop
out
repz
adc
mov
popa
js
adc
push
inc
fists
ljmp
and
sub
jp
insl
or
repz
jnp
xchg
fstps
push
and
inc
inc
ret
push
dec
mov
sbb
xor
push
and
pop
cmp
adc
pop
mov
pop
pop
pop
cmp
imul
cmpsb
mov
jbe
in
pop
test
dec
outsl
xchg
sbb
fdiv
test
cmp
or
call
push
sarl
popa
es
ficoms
or
xchg
dec
mov
gs
rcrb
shll
jo
fisubs
inc
sti
fisttps
repz
dec
or
ja
inc
xorb
mov
add
jb
lcall
ds
lcall
mov
les
scas
into
pop
imull
ffreep
nop
out
adc
adc
adc
icebp
pusha
gs
test
jae
loopne
das
js
popa
inc
cmp
jae
sbb
or
jo
je
push
loope
push
rcrb
popf
fsubrp
sub
les
inc
push
add
dec
nop
rcr
mov
aam
adc
lea
lret
push
jl
lock
insl
out
jle
mov
and
stos
outsl
xor
inc
jmp
popf
sbb
bound
sub
jp
lret
mov
scas
lods
xchg
testl
sub
mov
les
cmp
mov
pop
dec
cmc
ljmp
lds
and
jp
out
inc
inc
ja
jne
imul
cmpb
xor
data16
les
cli
fisttps
mov
sub
lods
cmpb
data16
loopne
mov
lret
push
addb
push
and
popf
or
jl
xor
iret
or
push
push
push
sub
lret
orl
lret
scas
fsincos
movsl
mov
xchg
add
in
sbb
std
pop
scas
sarl
mov
or
push
dec
jb
inc
mov
push
movsl
sub
sbb
sub
test
push
add
outsl
int3
sub
in
ljmp
dec
int
inc
mov
or
add
cli
aaa
mov
jae,pt
sub
push
pop
mov
or
leave
dec
divb
ljmp
ret
fucomp
hlt
push
dec
mov
pop
xor
mulb
xchg
int
arpl
addr16
outsl
pop
push
hlt
ds
mov
push
push
jne
and
mov
add
xchg
aam
out
xchg
add
inc
mov
iret
mov
ds
adc
adc
ds
or
rorb
sub
cld
and
xchg
pop
add
jo
sbb
cld
pop
frstor
dec
and
icebp
mov
pop
test
stos
mov
push
xor
and
pop
or
fbstp
test
add
dec
dec
add
in
mov
and
mov
data16
lods
adc
xchg
repnz
dec
mov
mov
sub
mov
cmp
or
mov
jnp
fnstcw
mov
loope
pop
call
jp
in
pop
push
sub
xchg
outsl
jmp
pop
jp
inc
and
shll
mov
outsb
xor
push
loope
mov
inc
and
mov
in
sub
sbb
adc
ds
jle
adc
enter
push
cmpsb
outsb
jbe
gs
lea
lcall
imul
mov
mov
insl
and
test
push
dec
lcall
mov
or
mov
sub
adc
je
fisubrs
dec
ret
xchg
in
scas
sub
loope
and
rclb
cmp
push
sub
mov
popf
mov
dec
jp
jae
mov
pop
rclb
bnd
arpl
aam
and
mov
icebp
lret
pop
ret
mov
es
dec
sahf
mov
aas
adc
pushf
push
into
xlat
sarl
rol
shlb
fldt
xor
subb
dec
mov
add
pushf
stos
add
nop
rorb
xor
push
mov
out
es
adc
cmp
inc
movsl
xlat
test
les
lahf
fcmovnb
pop
pop
dec
mov
pop
mov
sbb
cmc
xlat
add
cmp
lahf
inc
ja
test
cmp
pop
xor
or
sub
jmp
mov
adc
jnp
addr16
dec
cmp
movsl
scas
lods
inc
sub
das
add
fstpl
jne
ret
lock
add
in
sub
mov
inc
cmp
push
jge
add
jns
add
dec
push
out
sub
leave
jb
dec
pushl
int
dec
int3
xorb
and
adc
shll
hlt
pop
pusha
add
fcompl
daa
call
enter
mov
lods
rorb
dec
adcl
push
gs
pop
push
sub
mov
push
gs
mov
rep
mov
aas
outsb
xchg
xor
les
rcrb
adc
jnp
push
adc
sub
cs
sbb
out
push
pop
jmp
lret
jno
jle
sbb
jle
jle
mov
lods
fwait
shrb
call
mov
es
aaa
and
and
cli
sub
xchg
sbb
in
cmp
and
movd
mov
push
xlat
adc
loopne
adc
mov
jbe,pt
cmp
xchg
xchg
rorb
pop
call
jb
loopne
xchg
cmpsb
push
xchg
pop
xor
push
fiadds
pop
sub
mov
in
lret
xor
imul
nop
insb
mov
cmp
dec
cs
test
mov
xor
fcmovbe
dec
jle
push
sub
sbb
or
mov
or
repz
push
jge
aas
add
and
lock
push
stc
jecxz
cmp
add
clc
sub
cwtl
in
outsb
cmp
pop
mov
mov
fmuls
jge
mov
aas
lods
dec
je
pop
mov
mov
iret
loopne
fimuls
or
scas
popa
shll
mov
aam
mov
xchg
nop
mov
sbb
scas
outsl
fistps
imul
or
hlt
cmp
xchg
push
fsubrl
cs
mov
fyl2xp1
jno
mov
fisubrl
iret
jno
iret
mov
inc
movsb
cmc
jne
cmp
mov
enter
idiv
add
xor
int3
pop
cmp
scas
std
dec
jo
jl
jmp
sbb
xchg
mov
out
push
rcrl
add
push
dec
pusha
or
in
outsl
or
repz
negb
cmp
jg
es
ret
pop
jnp
xchg
mov
fidivrl
fstps
jmp
jmp
jbe
or
xchg
insb
jo
mov
and
cmp
fildll
mov
mov
jge
out
push
or
pop
fisubl
dec
cld
jo
flds
icebp
movsb
aam
and
jge
push
lea
or
test
outsl
bnd
and
inc
int
loop
xor
or
sub
test
nop
sbb
dec
mov
dec
cmp
or
sbb
in
cs
psllw
xchg
stos
sub
jo
mov
lret
push
push
je
inc
inc
rcr
in
call
xchg
inc
pop
cli
out
add
adc
jp
mov
push
test
pop
imul
dec
call
add
xchg
jp
push
dec
cmp
insb
es
dec
inc
les
mov
xchg
cwtl
push
fs
loope
sbb
leave
cltd
push
std
mov
dec
mov
rcr
xchg
xchg
jge
lea
push
xchg
out
out
and
cmp
adc
js
xlat
ret
xor
sub
stc
daa
adc
daa
arpl
lods
fcomip
mov
and
les
pop
repz
out
nop
test
mov
adc
cmp
mov
mov
sub
test
jmp
negl
push
mov
imul
data16
fs
mov
ss
cli
mov
test
push
jnp
rorl
pop
stos
lcall
push
lcall
js
lahf
mov
inc
push
pushf
sbb
sub
insl
cld
pushf
imul
jg
fbld
mov
mov
sbb
push
jp
jno
aad
cmp
dec
mov
pop
cs
or
push
stc
xor
cld
jno
sub
scas
mov
je
sti
sub
ret
mov
loope
xchg
aas
mov
imul
xchg
sbb
lods
cmp
cld
sahf
pop
push
lods
rclb
pop
cwtl
clc
inc
flds
push
sub
pop
push
out
or
push
mov
sahf
leave
push
adc
cmp
jmp
mov
mov
cmp
aad
cld
xchg
adc
fdivrl
inc
xor
sbb
dec
idiv
inc
in
push
icebp
lahf
fiaddl
sbb
bound
push
pop
outsl
cmp
mov
and
mov
nop
jl
lahf
push
aas
mov
js,pn
out
xor
testb
aas
mov
mov
add
jp
in
out
icebp
sub
ja
rolb
mov
ljmp
sbb
lahf
push
mov
add
push
inc
outsb
loopne
mov
add
jle
jb
xchg
pop
mov
add
stos
cmpsb
cmpsb
dec
nop
cmpsl
testl
mov
push
into
xor
dec
mov
bound
xorb
insl
imul
clc
and
stos
xchg
sbb
sub
mov
int3
test
xchg
push
ja
jle
add
mov
push
out
add
popf
idiv
xchg
mov
insl
pop
dec
jmp
push
push
andb
stc
pop
lahf
jb
mov
stos
lods
cmp
inc
jo
xchg
mov
cmpsb
push
push
fiaddl
add
push
daa
cli
add
dec
jle
sti
fsubrs
adc
jns
outsl
dec
cmpsl
sub
addb
insl
lea
shll
adc
les
jge
cs
test
xchg
out
mov
test
js
std
popa
out
mov
sysenter
cwtl
inc
mov
call
in
aam
jo
sub
mov
adc
std
in
push
mov
xor
xor
js
mov
and
adc
dec
lret
add
pop
mov
sar
pop
and
add
fwait
or
sub
rorb
mov
cltd
push
mov
lea
inc
mov
cmp
inc
shlb
outsb
gs
mov
jg
cwtl
dec
xchg
lret
out
cmp
aaa
sahf
mov
xor
sub
and
or
jg
add
shl
jle
xchg
or
jl
adc
in
pop
push
lock
cwtl
ror
or
jge
fldl
test
shrl
daa
push
adc
sbb
xorb
sbb
pop
mov
es
cwtl
leave
sub
lea
mov
das
jo
pop
mov
push
pop
dec
arpl
in
or
mov
sub
fnstenv
jp
cmp
out
and
ret
sub
into
pop
xor
arpl
movsl
daa
int
mov
sbb
mov
jno
xor
mov
out
pop
fstl
mov
rcrl
test
xchg
dec
shlb
xor
lea
xchg
stos
jmp
popa
push
sar
push
push
xor
pop
pop
jno
dec
jmp
xchg
mov
out
xchg
outsl
sbb
imul
sbb
adc
jno
out
or
sub
std
inc
fistl
daa
js
sub
ja
mov
inc
icebp
jle
aaa
inc
lods
xor
loopne
call
enter
push
ljmp
ljmp
add
jp
clc
dec
mov
subb
cmp
sahf
cmpsb
push
push
cmc
out
xchg
cmp
mov
xadd
cmp
pop
sub
popf
lds
ja
push
addl
or
add
lret
xor
aad
sbb
or
stos
ja
notb
xor
xor
jle
bound
mov
adc
aam
bound
fs
push
std
repz
js
push
adc
push
in
xchg
sbb
mov
mov
fs
add
cwtl
sub
repz
mov
cmp
daa
adc
inc
stc
cli
icebp
je
add
adc
xlat
push
sbb
add
cwtl
je
mov
sbb
and
in
int
push
ljmp
and
ds
add
movsl
out
pop
adc
call
cli
ss
pop
out
loope
loop
add
and
fistps
cmpl
xchg
mov
popa
in
pop
adc
push
pop
push
das
es
push
mov
lret
sbb
lcallw
and
or
mov
dec
dec
lock
sbb
jmp
inc
pop
aad
push
loopne
ret
and
sub
push
pushf
fisubs
pop
pop
bound
repnz
sub
adc
mov
mov
cmp
sbb
inc
push
cmpsl
dec
dec
cmp
add
xor
mov
and
inc
mov
popa
pop
pop
jmp
mov
icebp
adc
insl
test
rcrl
out
mov
out
rolb
cmp
xchg
mov
or
jmp
rcl
loop
xor
mov
nop
loope
movsb
sub
cmp
idivl
ret
mov
mov
sub
xor
std
insb
idivb
scas
inc
and
mov
rorb
mov
pop
mov
or
test
mov
fadd
imul
mov
std
adc
jo
in
out
arpl
mov
xlat
xchg
pop
sub
in
and
xor
xor
ja
adc
cmpsl
push
data16
add
cs
dec
dec
cmp
mov
sbb
pop
not
and
cld
mov
test
and
pop
inc
shll
xor
pop
push
mov
das
xchg
mov
sbb
xchg
mov
adc
andl
pop
gs
bound
and
call
and
pusha
lahf
xchg
xchg
arpl
test
fimull
daa
out
out
pop
lret
in
add
pop
sbb
dec
imul
or
mov
lock
jge
inc
sub
ja
hlt
dec
pop
jne
add
xchg
fiaddl
add
pop
dec
lahf
repnz
stos
cmp
fwait
and
imul
dec
mov
inc
dec
test
and
add
inc
loope
ret
outsl
rolb
xchg
leave
icebp
gs
clc
adc
inc
mov
leave
mov
inc
and
adc
xor
xchg
push
and
and
mov
shlb
and
pop
lret
inc
xchg
push
jae
mov
mov
lods
inc
movsl
js
movsl
icebp
call
scas
shrb
adc
arpl
push
sub
mov
push
ss
sub
repnz
lods
in
gs
pushf
pusha
push
leave
sbb
xchg
jp
ljmp
push
call
scas
lahf
pop
mov
xlat
xor
sub
pop
js
dec
mov
insl
jnp
addr16
fwait
pop
inc
sbb
shl
push
push
out
push
cmp
cmp
loopne
jle
add
scas
jo
in
sarl
mov
out
and
jo
cwtl
mov
ss
lock
scas
mov
fnstsw
cmp
dec
loopne
push
push
push
adc
shr
cmc
cmp
pop
shll
sub
rclb
out
repnz
mov
pop
xchg
sti
adc
xor
sti
cltd
push
jbe
popl
and
dec
mov
out
ljmp
loope
and
sub
jb
movsl
aad
pop
push
loopw
fstpl
jno
fwait
mov
in
cmc
stc
int3
lea
inc
sbb
jg
adc
sub
sbbl
and
inc
fstpt
out
in
pop
fwait
jbe
std
dec
push
sbb
mov
jno
test
pop
loop
je
add
cld
fsubrl
jle
repz
test
mov
push
sti
mov
jle
pcmpgtd
cmp
mov
lods
fsts
push
ja
sub
lds
adc
lahf
lahf
ss
iretw
loope
cmpb
inc
aad
scas
inc
daa
sbb
and
inc
movsl
push
test
pop
push
fsubs
das
pop
paddsw
cmp
push
repz
xchg
mov
and
cs
sbb
mov
dec
cmp
push
jbe
iret
cmpsb
lods
out
pop
or
out
pop
fmull
add
sub
hlt
icebp
stos
and
in
sub
cmpl
sbb
js
mov
cmpl
stos
add
mov
cld
lret
in
mov
imull
out
push
mov
ds
je
insb
repnz
mov
aam
das
mul
adc
std
movsb
test
movsb
mov
sub
jge
cmp
in
cmp
or
fmuls
xchg
push
pop
mov
cmp
adc
push
or
dec
sbb
pop
jns
andb
test
in
mov
in
lock
xchg
dec
stos
sahf
inc
stc
clc
sbb
jbe
sbb
rorl
loop
inc
subb
sbb
adcl
push
testb
int
aam
add
sti
and
test
mov
mov
mov
bswap
or
movsl
push
aaa
hlt
hlt
pop
xchg
insb
jb
push
sub
fucomp
jp
xchg
push
rcl
sbb
jb
aam
jnp
repz
inc
fisttpll
and
sbb
insb
in
jecxz
jns
cmovb
hlt
fsubl
shlb
iret
mov
ja
insl
xor
push
ds
dec
sbb
dec
cmp
imul
mov
negb
out
jg
sbb
lcall
bound
xor
outsb
mov
dec
pop
repnz
cmp
insl
inc
inc
andl
or
jne
test
enter
sti
xchg
adc
dec
push
xchg
jl
nop
pop
xchg
stc
jbe
dec
mov
adc
and
ficomps
sbb
in
mov
add
fcompl
insb
xchg
inc
xchg
mov
inc
bound
imul
jge
std
int
mov
lret
fchs
or
adc
mov
xor
jae
into
je
std
or
jmp
push
adc
icebp
shll
jmp
imul
frstor
or
imul
or
jae
jge
lds
sub
arpl
sbb
mov
xor
mov
loop
in
out
lods
cmp
sub
xchg
fsubl
sub
int3
lcall
jns
into
push
pop
dec
into
or
or
xchg
rcl
int
loop
ffreep
sbb
inc
push
cmp
pop
adc
icebp
cmp
inc
add
sub
adc
fdivr
in
xchg
dec
mov
ja
pop
add
loope
data16
fimuls
jl
sbb
sub
xor
scas
xor
cmp
test
movsb
cli
scas
lahf
test
jno
shlb
cmp
imul
call
push
cltd
jle
cmp
xchg
fdivp
jle
out
cmp
inc
mov
sbb
das
and
xchg
adcl
sbb
pusha
cmp
lods
aad
aad
pushf
sbb
imul
and
ret
add
cmp
push
push
pop
and
lahf
ss
mov
jle
push
call
rolb
adc
add
dec
rorl
popa
cmp
clc
popa
or
sbb
jns
jne
insb
sti
pop
test
jecxz
sub
xor
imul
cltd
or
bound
jle
jns
in
repnz
or
sahf
xchg
aad
lods
xchg
std
cltd
les
popf
sub
push
inc
daa
push
repz
adc
inc
jns
stos
jo
lock
xor
fdivl
cmp
or
xor
push
sub
leave
sbbb
sbb
out
in
inc
adc
mov
lret
add
xor
aam
and
sub
arpl
fcomip
pop
xchg
or
or
sahf
sarb
lea
inc
imul
loopne
lret
cmpsb
outsl
mov
xchg
dec
repnz
xchg
sbb
subb
mov
inc
fimuls
aad
rcrl
testl
in
mov
jg
int
je
das
insb
stos
sbb
mov
cld
and
xor
fs
mov
test
xlat
or
pop
ja
rcrb
roll
dec
jne
and
ret
aad
data16
sti
mov
scas
xor
adc
cli
xor
fcom
xchg
xor
imul
jno
pop
or
ss
sarl
ret
in
inc
mov
dec
test
adc
js
fildl
std
mov
mov
dec
pushl
aad
jmp
xor
pop
or
pop
mov
mov
lock
cmp
mov
push
jl
pop
xlat
pop
jle
les
pop
cmp
out
push
inc
dec
popa
push
pop
sub
popa
popf
adc
stos
mov
mov
and
push
xor
pop
js
in
mov
mov
outsb
notb
popf
aam
ds
cmp
call
mov
push
mov
aaa
fcoms
xchg
sbb
mov
sti
cmp
xchg
aaa
es
adc
mov
cmp
xchg
mov
lds
jo
mov
in
sbb
outsl
nop
mov
xchg
mov
jmp
mov
fildl
dec
adc
clc
daa
jne
jnp
push
loop
push
fmul
stc
inc
aaa
scas
test
pop
int3
out
popf
push
pusha
scas
loope
push
aas
cmp
lahf
mov
es
test
push
push
sbbl
pop
nop
daa
mov
mov
outsb
shll
lcall
xlat
cs
test
dec
mov
pop
in
mov
push
int
rorl
addr16
xor
dec
and
hlt
push
jge
cmpsb
inc
sbb
out
dec
dec
jg
cmp
push
pop
repz
add
add
enter
add
imul
frstor
fs
pop
clc
and
ljmp
xchg
sbb
or
push
fstpl
sbb
sub
enter
adc
addr16
cmp
out
jne
jmp
pop
push
sbb
pop
xchg
mov
sub
sti
icebp
in
jge
mov
push
xlat
xchg
hlt
scas
mov
cmp
jmp
js
aas
add
mov
jp
jp
repnz
out
cmp
data16
insl
mov
push
lock
push
imul
xor
and
inc
inc
arpl
repnz
mov
lods
mov
sbb
dec
fsubp
mov
mov
shll
pop
je
daa
fdivr
cmc
adc
adc
xchg
insb
imul
cwtl
jmp
inc
inc
ss
add
sub
xor
in
frstor
fs
sub
jmp
sub
push
cmp
loop
ds
sbb
les
movsb
popf
add
cmp
push
rcr
loope
adc
push
xlat
pop
dec
jl
lret
jbe
adcl
dec
stc
push
lods
xor
jp
lods
movsb
xor
cmpsl
inc
xor
pop
fsub
popa
inc
mov
addr16
or
mov
es
mov
cmp
inc
cltd
icebp
incl
sub
les
dec
push
push
cmpsb
mov
arpl
jmp
mov
push
push
jns
mov
loope
mov
cmp
ret
or
sub
jle
ja
xor
add
pushf
enter
xchg
sub
insl
aas
test
xor
inc
jbe
pop
repz
mov
sti
lcall
and
xorl
adc
add
inc
sbb
sbb
inc
push
shl
cmpsl
faddl
cmp
clc
sub
test
pusha
pop
repz
push
arpl
out
ret
sub
dec
xor
pop
stos
mov
xchg
xlat
int
sub
in
sub
shl
fcmovb
data16
inc
fnstcw
xchg
jns
popf
je
xchg
loope
bound
lret
gs
or
imul
cwtl
rorl
iret
scas
adcl
mov
and
or
stos
jne
test
sbb
jg
outsl
push
mov
pop
and
hlt
fildl
mov
xchg
or
int3
xchg
inc
fdivr
jne
push
outsl
and
movsl
jns
add
pop
insl
dec
arpl
mov
out
or
call
inc
and
jp
push
ja
ret
pop
nop
pop
push
fstl
icebp
scas
inc
and
cltd
mov
push
mov
jge
rcrb
sti
test
push
jne
iret
ds
jne
stos
jbe
out
mov
inc
sti
and
adc
inc
xchg
and
popa
lret
jns
lret
xor
stos
lret
enter
or
or
insl
in
or
test
cmp
mov
mov
pushf
pop
jge
jno
mov
mov
xor
lock
cmp
dec
pop
jnp
ret
mov
push
inc
push
push
jl
fwait
jp
lds
mov
ljmp
sub
loop
add
pushf
xor
shrl
jae
push
popf
mov
xchg
fldcw
dec
jo
adc
mov
sub
pop
mov
mov
je
dec
adc
lret
dec
pop
shl
push
jno
xchg
mov
imul
cld
sbb
cmc
adc
rol
rclb
bound
fldcw
jae
mov
xchg
neg
shll
xor
adc
fdivs
pop
nop
ret
stos
xchg
sub
mov
divb
jle
jo
mov
or
rclb
inc
adc
mov
shrl
mov
and
sbb
xchg
push
cli
mov
push
cmc
xor
cmpsb
gs
fwait
add
and
in
mov
mov
push
outsb
adcl
or
add
notl
aaa
nop
mov
adc
cmp
xchg
std
inc
cli
clc
mov
in
imul
orl
sbb
mov
ret
ds
mov
testb
xor
fcomp
bound
pusha
sbb
push
sar
add
cmp
adc
sbb
and
loopne
xchg
stos
cmp
sub
and
loope
enter
and
cltd
mov
cmp
mov
sahf
cmp
mov
xor
je
in
negb
jae
and
cmp
mov
les
jae
xchg
push
mov
or
into
je
jmp
or
cld
mov
jge
int3
in
leave
ja
das
mov
mov
cmp
dec
dec
dec
jo
and
sbb
mov
sub
aam
test
jge
xchg
xor
mov
dec
pop
jb
cli
stc
pop
rcl
inc
lahf
or
dec
out
cld
push
add
cmp
jl
call
pop
mul
pavgb
in
dec
jns
jae
sahf
leave
es
xchg
lahf
mov
adc
push
inc
bound
test
xchg
mov
pop
mov
pop
pop
sub
cmpsb
jge
jb
sbb
aaa
incl
jne
outsb
iret
mov
fcmovbe
aas
and
push
lahf
add
in
loopne
out
xlat
dec
decl
lock
lea
popf
push
add
and
lods
gs
adc
push
in
mov
pusha
dec
mov
ret
mov
fwait
outsb
cmp
mov
or
outsb
inc
push
stc
divb
add
lret
out
inc
out
sbb
cltd
std
push
xchg
ret
es
mov
mov
mov
movsb
test
add
sub
das
test
sub
mov
sub
pop
push
outsb
push
outsl
dec
lahf
pushl
imul
adc
pop
jb
and
hlt
dec
rolb
testb
xchg
add
inc
jmp
dec
mov
aam
push
cmp
adc
adc
lcall
mov
mov
cmp
roll
fildl
and
inc
cmpsl
dec
movsl
cmpl
and
in
xorl
pop
add
pop
ret
in
leave
dec
cmc
les
mov
dec
in
ret
cmpsl
pushf
xorl
cmp
pop
scas
scas
jmp
dec
pop
insb
flds
popf
iret
subb
insl
xchg
in
mov
xchg
or
push
iret
mov
outsb
mov
mov
xchg
and
vpcmpeqb
mov
sbb
cmc
jns
jne
outsl
mov
add
mov
adc
sub
dec
pusha
inc
push
or
in
xchg
cmp
xor
mov
lahf
cltd
adc
and
add
popa
hlt
and
pusha
push
cltd
sub
cmp
xlat
js
or
mov
in
cmp
sub
mov
shll
pop
rclb
mov
movsb
dec
xchg
lock
jge
in
mov
cmp
xlat
int3
call
jp
mov
push
xor
out
ss
xchg
sti
cmp
icebp
and
sub
lock
mov
sbb
push
ja
inc
bswap
fst
cmp
repz
sbb
jp
push
in
jmp
inc
loopne
mov
mov
out
mov
sub
jo
and
aam
mov
push
aas
stos
cli
ljmp
cmp
jae
in
mov
andl
jmp
add
les
scas
ss
ret
adcl
icebp
pushf
jmp
fcoms
insl
fwait
push
xchg
icebp
in
inc
aaa
imul
mov
add
out
insb
jp
pop
cmpsl
inc
sub
add
and
mov
mov
sbbb
in
sbb
mov
add
adc
mov
jecxz
iret
mov
jge
jne
pmaddwd
inc
loope
loope
mov
arpl
cmp
sub
push
mov
pop
outsb
test
cmp
andl
pop
mov
or
mov
shrl
mov
fcoml
fldl
or
cmp
test
icebp
xor
lods
mov
push
hlt
pop
push
addr16
mov
fwait
cmp
lret
push
lock
or
sub
mov
in
repnz
cld
jle
mov
rcll
mov
xor
inc
shlb
iret
cmc
xchg
sub
dec
dec
and
pop
pop
shll
xor
popa
add
fwait
stc
mov
pop
in
mov
dec
cltd
dec
arpl
stos
pop
and
jno
sbb
sub
xchg
mov
mov
pusha
push
jge
out
fstl
and
test
pop
inc
mov
rcll
cmp
call
sub
mov
int3
loope
lock
push
xlat
xchg
movsb
cmp
adc
jmp
sub
insl
adc
repz
loopne
cmp
ret
popf
hlt
arpl
jmp
out
iret
frstor
dec
adc
stos
dec
mov
inc
ja
repz
adc
call
out
mov
pop
pop
xchg
or
xchg
mov
push
cmp
in
imulb
fisubs
out
or
add
push
mov
in
mov
sbb
imul
test
loop
lcall
cld
test
xor
scas
push
out
xchg
lcall
aaa
sub
dec
pop
sahf
cmp
pop
dec
mov
fsts
or
inc
out
xor
sub
jge
daa
in
int
dec
cmp
movl
xor
dec
xchg
int
push
mov
xchg
inc
rorl
inc
mov
xchg
or
fsubl
add
out
jg
xor
xor
das
push
jp
push
sbb
lock
xor
and
leave
or
or
scas
fildl
xor
inc
and
loop
jnp
out
or
jmp
ds
xchg
pop
das
mov
cwtl
arpl
xor
inc
mov
stos
xchg
jp
xchg
dec
adc
loopne
std
adc
mov
fnsave
cld
gs
stc
dec
xor
xor
mov
cmc
cmp
or
or
jmp
sahf
lods
mov
rolb
fadds
xor
pop
or
xchg
ds
fmuls
fwait
and
xchg
insl
std
jecxz
fs
stos
adc
icebp
pop
icebp
leave
adc
sti
jg
mov
mov
adc
les
pop
cmp
in
das
scas
push
xorl
xor
xorl
subl
push
in
lcall
stos
jno
or
xor
popf
ja
mov
cli
push
gs
rcll
push
gs
ret
sbb
cmpsb
pop
mov
test
dec
ljmp
dec
inc
sub
add
push
lahf
jl
lds
ds
sub
out
pop
xrelease
sbb
shll
jl
push
call
pushf
sub
inc
rorb
lea
jg
sti
mov
mov
xchg
aas
sub
lret
cmp
sub
sub
stc
push
inc
xchg
sarl
mov
cmc
jno
stc
mov
out
insl
cmp
mov
cld
push
retw
xchg
add
shl
xor
adcl
cmpsb
faddl
imul
in
aas
stc
xlat
push
fimull
push
cmp
inc
cmp
rcrb
mov
push
imul
cmpsl
daa
int3
lret
outsb
dec
dec
cltd
xchg
xchg
mov
xchg
sbb
mov
addr16
inc
jle
sub
xlat
xchg
aad
nop
lcall
aam
repz
popf
lods
and
adc
xabort
out
cmp
push
push
sar
inc
mov
data16
push
xor
or
xlat
sbb
das
mov
push
adc
aas
mov
enter
xchg
or
jno
ficompl
repz
mov
enter
imul
cmp
add
test
jno
pop
xchg
sub
shl
sbb
movsb
add
cmpsl
mov
adc
pop
adc
mov
sahf
test
mov
or
sahf
adc
pop
fstps
popa
shr
std
fbstp
sti
ja
xchg
enter
pop
cmp
sahf
xor
sub
sub
inc
push
sbb
sbb
adc
gs
sbb
and
jmp
testb
mov
pop
or
xor
sub
scas
movsb
pop
testl
loope
cld
sbb
mov
add
iret
or
or
xor
sub
movsl
dec
mov
std
in
adc
stos
sub
out
pushf
je
movsb
mov
iret
lcall
int
cmp
popa
pop
test
jle
sub
call
mov
sub
adc
je
and
jle
ficomps
jp
popf
out
shlb
out
aaa
loope
sbb
dec
mov
inc
jo
int3
sbb
sub
pushf
jle
jb
sbb
mov
outsb
mov
jge
int3
sbb
faddp
pop
push
pop
and
daa
outsl
jo
mov
test
rcr
out
sti
dec
mov
sub
lret
pop
xorb
data16
xchg
pop
loope
cli
out
xchg
cmp
mov
mov
inc
negb
mov
mov
pop
movsl
and
jp
or
aaa
push
out
je
shr
push
push
icebp
test
into
adc
repnz
loop
sahf
outsl
or
xor
stos
pop
hlt
int
out
cli
mov
xor
cli
mov
and
out
mov
loop
popf
dec
add
xchg
mov
scas
mov
popa
cmp
popf
cmp
mov
mov
shll
aad
push
or
int
sbb
mov
cmp
push
and
mov
xor
dec
arpl
mov
mov
mov
or
imulb
cmp
jo
test
ret
ret
js
cli
pop
add
imul
inc
sub
aam
push
in
cmp
mov
mov
dec
or
loop
cmp
lcall
iret
imul
lcall
inc
xor
inc
push
or
loop
call
ret
mov
into
xchg
sbb
sub
pop
cmpsl
lods
rcl
pusha
or
sbb
std
in
mov
lret
gs
clc
jnp
lahf
test
inc
mov
push
les
lret
push
push
inc
xchg
pop
pop
add
sub
repz
imul
dec
outsb
add
sub
cmp
xor
sbb
repnz
push
mov
mov
add
xchg
cmp
movsl
sbb
or
push
cmc
push
push
push
inc
ret
xorb
cmpsl
rorb
std
scas
inc
mov
cli
es
and
lcall
mov
adc
sbb
loop
cmpsb
fsts
or
lods
lods
mov
fnstcw
jl
je
mov
jnp
movsb
dec
aas
nop
in
mov
cmp
dec
mov
xchg
adc
mov
cmpsb
fwait
sub
mov
sahf
int
inc
popf
test
push
add
repz
and
mov
dec
add
jmp
test
popf
clc
sub
lret
rcrb
enter
inc
sub
frstor
dec
push
xor
stos
arpl
cli
cmp
push
shrb
popf
or
js
repnz
cmp
push
push
mov
xchg
or
push
inc
imul
mov
enter
sub
decl
lock
rclb
cmp
pushf
xor
push
and
ret
loop
sub
sbb
mov
insb
or
pop
sbb
xor
xchg
ret
test
sub
scas
aam
jb
inc
std
mov
mov
sbb
rorb
xchg
pop
dec
adc
xlat
or
into
mov
mov
mov
pop
push
jb
inc
sub
hlt
jbe
mov
fisttpll
sarb
sbb
outsb
mov
call
ret
push
mov
insb
jne
cli
lret
and
lock
push
adc
arpl
pop
pop
cli
cmp
mov
pushf
cli
fildll
mov
fs
arpl
pop
mov
pop
inc
dec
retw
loope
push
lds
mov
push
push
dec
movsl
rorl
xchg
cli
pop
je
nop
and
daa
jbe
mov
inc
cmpsl
cmpsl
into
adc
into
subl
pusha
dec
test
mov
mov
out
mov
fs
ss
jbe
les
lods
xchg
mov
lahf
jl
mov
and
cmp
dec
cld
jne
int3
clc
sar
push
mov
and
add
cmp
aad
xchg
aaa
pop
inc
mov
lods
inc
sbbb
stos
sub
mov
fdiv
adc
xchg
xchg
movsb
inc
adc
jecxz
mov
or
inc
shl
jmp
or
rclb
xor
dec
inc
mov
jmp
lods
insl
add
out
and
dec
in
js
fcoml
mov
shll
xor
jb
mov
sbb
sbb
pop
mov
lds
sub
xor
and
lret
xor
repz
inc
addb
dec
lret
enter
xor
mov
push
pop
xor
shrb
push
aaa
dec
idiv
add
lock
lods
iret
popf
aaa
dec
add
push
cltd
daa
or
out
loope
test
mov
cmp
mov
test
jl
repz
ficompl
push
repnz
fbstp
pop
mov
stos
mov
in
jl
lods
xchg
inc
shll
out
mov
js
xor
mov
pop
xlat
mov
aaa
xchg
sti
xor
cmp
in
popf
jbe
pushf
in
xchg
in
outsl
sub
pop
dec
push
rcll
add
test
aas
imul
insl
xchg
xorb
sub
jmp
outsb
lods
cmc
mov
mov
insl
mov
push
fnstsw
popa
sbb
cmp
cltd
mov
dec
add
in
or
xchg
test
and
out
mov
sbb
sub
ja
dec
push
scas
xor
notl
xchg
sub
sti
into
push
fisubrs
rcrb
clc
in
jp
mov
adc
out
in
cltd
in
push
or
in
mov
dec
lods
lcall
enter
jmp
pop
daa
fdivr
sti
cmp
and
ljmp
out
arpl
hlt
jbe
push
hlt
hlt
popa
push
xchg
add
ljmp
push
ljmp
je
js
pop
aas
call
jbe
leave
test
mov
outsb
sbb
in
jne
jmp
out
add
inc
sar
sub
dec
dec
inc
inc
popa
sub
push
shlb
dec
sti
jg
popf
dec
test
jne
add
mov
ja
xor
jnp
cmpsl
aam
xlat
negb
pop
sbb
sub
stos
shrl
xchg
in
cmp
idivb
lret
sbb
mov
negb
xor
rclb
add
cs
xchg
mov
mov
push
imul
mov
jnp
dec
inc
push
imul
mov
pop
add
scas
out
fisubrl
insl
adc
shl
repz
mov
and
xchg
push
out
mov
sti
xchg
pop
lods
cmp
xor
ss
inc
fcomps
mov
mov
sbb
push
loop
sti
out
mov
pusha
mov
div
add
add
les
ret
cmp
add
inc
inc
push
inc
movsl
sub
cld
out
add
cmp
jb
out
or
ret
adcl
nop
mov
divb
xchg
cmpsl
arpl
sub
icebp
lahf
aas
pop
add
movsb
jnp
and
sbb
nop
ljmp
xor
insl
insl
roll
cwtl
pop
ror
insl
adc
mov
outsb
cmc
mov
loopne
jo
inc
and
mov
test
dec
and
inc
push
sbb
or
mov
jae
add
mov
lods
insb
cmpsl
xchg
jne
mov
imul
rclb
jmp
dec
and
fs
fcompl
mov
adc
mov
dec
popa
pop
jnp
arpl
out
xchg
loope
scas
xchg
adc
movsl
int3
mov
cs
cltd
les
fwait
je
pop
mov
push
jnp
repz
xor
fsts
inc
test
mov
cmpl
lods
mov
cmp
pop
call
xor
dec
ss
ja
subl
lahf
mov
scas
mov
xor
and
push
addb
call
sub
pop
add
mov
fwait
adc
imul
aaa
mov
or
test
or
cli
fstps
jmp
insl
or
test
aam
es
push
jge
in
inc
pop
fisttpl
jg
cld
add
les
dec
test
pop
sub
imul
sbb
mov
das
xor
jne
inc
mov
xchg
mov
dec
mov
js
fstpl
xor
mov
imul
popf
stos
arpl
inc
push
jns
fldl
jae
pop
xchg
lea
mov
cmp
mov
cld
mov
mov
lock
mov
repnz
or
testb
rcl
lock
loop
cmp
mov
sbb
pushf
aam
loop
dec
xchg
in
ja
add
inc
xor
mov
ds
sarl
mov
xchg
or
sub
sbbb
imul
sbb
test
dec
inc
out
push
popa
in
in
in
iret
jns
setge
in
in
outsb
mov
mov
mov
xor
cld
std
or
lock
adc
jg
mov
push
dec
add
lret
add
mov
leave
dec
ret
mov
cmpsb
lods
shll
ret
push
sub
push
add
js
test
inc
cli
jne
clc
sub
into
in
cmp
jb
mov
dec
pop
sti
rcr
shll
imul
iret
jge
scas
pop
push
into
jo
add
dec
mov
jb
movsb
lahf
fs
add
inc
outsb
jnp
mov
pushl
mov
decl
mov
or
or
popf
lods
popf
pop
dec
loope
call
push
ret
jmp
in
rcrl
mov
aas
jne
jmp
lahf
les
in
adc
bound
pop
mov
in
pop
push
data16
mov
inc
mov
lret
loop
aaa
dec
imul
xchg
mov
cmpsb
cmp
mov
jl
movsl
xchg
or
cmp
jo
pop
and
lods
outsb
dec
adc
add
pushf
xorl
xchg
and
les
or
adc
fidivl
outsl
popa
fistpll
aaa
test
out
xchg
sub
aaa
pop
repz
pop
and
mov
es
dec
ljmp
daa
lods
lahf
pop
ds
js
ret
xlat
jno
clc
test
and
mov
sbb
xor
mov
cmp
dec
push
or
sbb
pop
or
cmp
adcl
lcall
xorl
jae
or
shl
pop
xor
rcl
pop
dec
mov
cltd
cmp
jg
pop
or
inc
pop
arpl
hlt
outsb
xor
adc
mov
push
cmp
push
mov
inc
and
les
sbb
pop
xor
cs
fs
xchg
movsb
pop
sub
inc
pop
shr
cwtl
scas
add
dec
rorb
jge
and
ss
jne
inc
in
test
into
scas
stos
into
in
repz
pop
push
jl
sbb
das
shll
lods
lea
aam
rcl
gs
adc
cmpsb
out
scas
aam
test
or
mov
inc
sub
daa
stc
shrb
push
inc
push
jbe
jg
push
mov
in
add
xor
rcr
or
dec
jns
push
lods
mov
mov
cmp
push
daa
loope
adc
cld
jmp
jmp
stos
repnz
jmp
mov
mov
test
fisubrs
test
adc
xchg
mov
push
push
and
sub
xchg
xor
adc
fldcw
sarl
fdiv
les
jae,pt
jno
push
out
mov
sbb
mov
leave
jne
cmp
push
inc
add
cmp
push
or
push
sub
pusha
mov
arpl
jmp
push
into
rcrb
inc
repnz
pushf
cmp
out
outsb
jmp
in
inc
lods
inc
loopne
jae
out
push
dec
xchg
push
bound
cmp
cmp
mov
rorb
xchg
scas
ret
rcr
outsl
fdivrs
ret
shll
and
add
push
dec
or
jmp
fcomi
jns
mov
fisttpl
es
xor
or
jp
pop
mov
lret
sub
or
cmp
ret
mov
rcrl
jmp
notl
loopne
mov
xor
lahf
sub
bound
push
xor
jmp
movsl
inc
adc
sbb
adc
push
sub
adc
loopne
insl
pop
ret
shl
fildl
pop
xor
pop
cli
cmp
mov
fstl
cmpsl
iret
addr16
je
pusha
push
inc
lea
jp
stc
ltr
fucom
xor
and
les
and
rclb
jp
out
and
inc
test
imul
xchg
push
mov
mov
in
or
cmp
jae
imul
cli
imul
mov
mov
jo
jp
inc
xor
jnp
lcall
mov
rorl
out
cmp
lds
test
add
adc
loopne
mov
inc
arpl
scas
add
clc
adc
lds
push
outsb
xchg
lret
sub
mov
cmc
scas
xor
add
mov
int
loope
roll
sbb
fstps
inc
and
pop
gs
adc
cmp
into
inc
das
cmp
in
xchg
lods
arpl
jecxz
and
enter
call
add
decb
add
divw
sbb
push
dec
fdivs
bound
call
add
push
jmp
std
push
test
push
mov
mov
or
mov
mov
in
dec
inc
es
xor
faddl
js
add
pop
sbb
mov
push
mov
mov
mov
or
in
clc
iret
fidivs
xor
loopne
inc
or
sub
sub
mov
sbbb
stc
xchg
push
cmp
loopne
popf
xchg
std
jle
jo
lods
fldl2t
clc
ret
or
icebp
call
mov
pop
and
xchg
jmp
dec
add
add
mov
xchg
xchg
dec
xchg
movsl
inc
push
add
lahf
lea
arpl
incl
into
sbb
pop
bswap
es
imul
in
push
lcall
out
sbb
sub
loop
cli
popa
xchg
cs
aad
ds
cli
cmc
or
dec
imul
sbbl
loop
push
in
aad
cmp
es
aad
mov
sub
fdivrl
jmp
mul
insb
fs
mov
leave
movsb
jb
add
cmp
call
in
jp
jp
mov
pop
out
popa
mov
xor
mov
pop
xor
dec
cmp
and
int
add
mov
sub
mov
jbe
pop
mov
arpl
ds
mov
fwait
mov
mov
push
inc
shll
xchg
jno
daa
mov
mov
stc
xor
out
popa
pop
pop
push
push
enter
fcomi
lock
lods
and
lods
add
ficoml
in
add
aam
xchg
mov
repz
jp
push
mov
leave
outsb
in
xor
aas
cmp
in
mov
mov
xor
jle
mov
push
xor
loop
dec
enter
push
dec
cwtl
or
out
dec
xor
mov
cmpsl
inc
dec
inc
scas
mov
adc
dec
hlt
cld
cltd
into
xor
sbb
mov
les
push
pop
jle
fdivr
pushf
xor
dec
bt
push
xchg
add
out
outsl
xlat
in
xor
mov
push
dec
std
les
popf
sub
and
push
inc
mov
je
sbbb
aaa
xor
push
xor
stc
or
and
ret
xor
sbb
push
adc
loope
xchg
sahf
jecxz
sbb
pop
sbb
mov
adc
in
in
dec
xchg
jg
inc
jp
icebp
jl
inc
les
mov
sbb
call
pop
incb
fisubl
je
sub
mov
mov
jmp
mov
mov
and
push
push
fildll
xchg
pop
xchg
sub
add
pop
sub
adc
pop
fwait
stos
test
pushf
add
iret
in
dec
and
mov
or
loop
ret
test
movsl
fadd
mov
mov
shrb
in
divb
imul
arpl
pop
loop
pushf
add
jmp
or
enter
jp
or
mov
xor
mov
pop
cmpsl
sub
in
js
sub
push
inc
mov
or
adc
cwtl
mov
ss
sbb
sbb
in
mov
sub
xor
lock
sarb
push
shlb
lcall
jne
cli
rolb
dec
loop
and
int3
cs
adc
mov
add
ljmp
jbe
sbb
mov
and
mov
movlps
pop
out
fwait
inc
add
push
test
shrb
cwtl
mov
fs
add
xchg
adc
cmp
je
push
and
or
cmp
mov
mov
iret
inc
out
sahf
mov
sarl
cmp
pop
dec
sub
adc
inc
jbe
adc
pop
push
fcomip
test
aas
sbb
jns
pop
ret
sysenter
dec
mov
add
mov
aas
push
sti
fidivrs
xor
dec
out
out
push
or
mov
cmp
bound
loope
sar
push
add
ret
xor
and
fmulp
fidivrs
push
adc
dec
popa
lea
mov
dec
insl
test
sti
scas
ret
mov
dec
lods
repz
les
mov
xor
xorb
push
cmpsl
mov
xor
loope
into
sbb
jnp
push
xchg
cmpsl
sub
dec
out
data16
stos
jmp
inc
sub
enter
or
dec
cmc
cltd
xchg
mov
in
push
xchg
jb
addb
mov
push
cwtl
rcll
mov
test
xor
lret
xchg
test
out
fldt
xor
jns
std
repz
cmpsl
in
xchg
cwtl
push
fimull
push
mov
add
jecxz
push
mov
pop
movups
out
mov
scas
in
dec
mov
jecxz
aam
adc
xor
cvtpi2ps
fisttps
dec
pop
sbb
jp
dec
stos
scas
wbinvd
mov
lea
adc
dec
mov
add
inc
lcall
fldenv
and
mov
mov
insb
int3
jns
lea
ficoml
mov
cmpl
jnp
jp
aas
addr16
aam
jmp
mov
imul
push
xchg
push
jecxz
fstl
dec
dec
dec
lock
xor
mov
xchg
dec
mov
in
jo
mov
ror
push
outsl
add
pop
clc
lods
xchg
aas
enter
in
sbb
inc
shl
jb
pop
jb
mov
jae
mov
bound
faddp
test
ds
sbb
imul
sbb
fs
in
aaa
pop
jmp
dec
push
sbb
arpl
mov
ljmp
repnz
movsl
rcrb
scas
lds
push
imul
out
aas
mov
add
loopne
xor
and
cmpsl
jb
jmp
mov
iret
adc
add
imul
push
cmp
sub
adc
sub
mov
lock
dec
stos
clc
into
add
or
inc
jae
stos
add
dec
lods
pop
push
popa
scas
lahf
xchg
call
int
add
push
leave
lret
sbb
lods
mov
aas
cmpsl
movsb
test
lret
push
cmpsb
ss
xchg
cmc
arpl
adc
ret
psrlq
lcall
fcmove
dec
add
ja
add
rcrb
lret
or
in
je
pop
adc
cmpl
cmpsl
jg
das
mov
rorb
repnz
jns
push
inc
cli
push
pop
jp
adc
dec
lods
ffreep
mov
rcl
clc
fwait
mov
or
fldcw
cmp
cmp
movsl
cmp
or
jp
inc
idivl
iret
pop
pop
clc
push
adc
repz
pop
dec
iret
fdivr
mov
cmp
mov
roll
jnp
subb
mov
push
das
jmp
jns
adc
xchg
add
cmpb
inc
mov
arpl
sbb
pop
add
hlt
xchg
jb
lds
lcall
ss
jecxz
insb
test
insl
in
push
jb
aas
insl
lahf
into
lret
jo
jmp
mov
mov
add
mov
pop
inc
xor
insl
jecxz
fstp
mov
mov
out
std
add
fcoms
push
mov
js
mov
frstor
fs
imul
and
adc
mov
lods
jp
stos
jp
loop
mov
outsb
fwait
sarb
jge
std
in
outsb
jns
mov
outsb
sub
sahf
sahf
mov
cmp
sbb
push
ds
pop
adc
icebp
pop
or
lods
lret
jno
mov
sub
repz
fldl
mov
ret
inc
shlb
sbb
rorl
jae
dec
cmpsl
push
test
ret
push
cmc
push
clc
cmp
cld
and
lods
iret
or
jbe
xchg
int3
inc
and
repnz
std
inc
mov
sbb
mov
call
add
and
into
fcoms
cs
sub
sti
mov
dec
mov
insb
insl
loope
es
adc
xchg
orb
dec
je
aad
shll
subb
push
push
insl
and
sub
es
int3
push
jp
loope
mov
cmp
test
xchg
icebp
cmp
dec
push
inc
and
mov
iret
xchg
jl
sub
push
out
mov
pushf
aas
std
mov
xchg
lods
fsubl
testl
xchg
adc
pop
adc
ljmp
test
addr16
push
inc
test
push
mov
jo
cmp
xchg
jg
add
lods
andl
shrl
std
cmc
cmp
dec
imul
mov
and
push
addl
dec
xor
mov
dec
or
dec
inc
fnsave
sbb
inc
clc
cmp
xor
mov
cmp
out
mov
nop
int3
stos
xchg
out
mov
insb
xor
lret
push
test
push
enter
inc
push
pop
jmp
std
or
sub
movb
jge
mov
add
test
mov
lcall
xchg
pop
das
stc
ss
jne
je
push
push
adc
sub
clc
push
ret
psubb
adc
mov
sbb
jae
adc
jo
int
outsb
xchg
mov
xor
ss
xlat
arpl
jp
insl
push
aad
loop
stos
cwtl
sub
adc
push
test
imul
sbb
lahf
test
aas
sbb
cmp
aas
cli
fcmovne
pop
fidivl
outsb
mov
pop
stos
push
pop
xor
popa
mov
out
xchg
mov
jb
lods
les
hlt
pop
clc
push
fildll
adc
pop
add
gs
lds
mov
or
fcoml
jns
fs
lret
mov
dec
shl
mov
and
inc
xor
outsw
push
das
mov
push
sub
inc
fs
and
icebp
cmp
dec
mov
push
insb
jge
test
aas
lds
in
cmpsl
or
adc
mov
dec
push
dec
jb
xor
jno
sub
xchg
test
lock
xchg
popa
xchg
cwtl
shll
imul
in
call
mov
push
insl
lret
iret
fdivrp
repnz
clc
rorl
mov
jne
pop
sahf
sbb
jns
loopne
xchg
cmp
dec
sbb
cmc
in
xchg
inc
push
cmc
pushf
mov
mov
jmp
pusha
faddl
push
inc
sahf
stos
or
add
add
test
push
or
cwtl
aas
fnstsw
xor
sbbb
cmc
ficomps
cli
jae
out
ds
push
xor
jbe
pop
jp
js
sbb
jle
in
push
ja
pop
and
aad
je
repz
lea
sbb
fsubrl
xor
xor
fldt
xor
mov
or
stos
adc
movl
mov
or
mov
xchg
xchg
in
push
ss
and
scas
cld
xchg
adc
and
imul
notb
jbe
mov
lock
jns
into
stc
mov
test
or
mov
shll
push
sub
stos
and
aad
mov
mov
loope
int
xchg
enter
add
pop
mov
pop
ja
mov
sti
pop
cs
insb
inc
lock
jnp
pop
inc
xchg
arpl
sub
nop
cli
scas
ficoml
fcompl
inc
sbb
push
cmpb
nop
dec
in
je
adc
adc
sbb
dec
xchg
repz
inc
push
mov
xchg
add
add
dec
sub
push
xorl
fiaddl
insl
push
mov
fs
mov
jmp
negb
les
cmp
stc
stos
cmpsb
cmp
enter
jnp
ds
push
movsb
shll
add
push
lcall
seta
jno
sti
mov
push
rorb
and
jo
and
rcrl
shll
ret
push
and
xchg
int3
fwait
enter
dec
outsb
cmp
rolb
push
xchg
xchg
mov
xlat
pop
mov
and
dec
out
xor
fwait
xor
ret
clc
sub
test
mov
cli
loope
or
or
inc
jno
rcrl
mov
nop
fldl
sbb
cmp
test
lret
data16
and
xor
xchg
clc
push
inc
movsb
xor
outsl
cmp
mov
hlt
dec
push
mov
cltd
inc
icebp
sub
add
mov
jge
pop
jo
inc
out
repnz
ljmp
dec
add
pop
sbb
imul
scas
data16
cwtl
adc
in
orb
lods
and
mov
popf
pushf
in
test
je
push
bound
cmp
int
adc
call
push
xor
dec
pop
rcl
mov
jnp
jnp
fistl
es
cmp
cwtl
hlt
fldl
scas
xchg
jg
lds
jg
cmp
addr16
xor
sub
pop
mov
stos
mov
push
lret
push
xchg
outsb
xchg
pop
mov
sbb
in
dec
dec
jne
addl
bound
cmp
jnp
rolb
xchg
iret
lret
or
push
lret
sbb
fwait
lret
js
movsb
sbb
pop
rcl
adc
mov
ss
mov
insb
add
sub
ret
adc
xor
shr
adc
in
sub
orl
popa
jb
xchg
clc
stos
mov
sarl
je
mov
dec
pushl
iret
test
mov
xlat
and
insl
stos
sub
add
imul
popf
scas
sub
fstps
sahf
mov
lods
and
jmp
cs
aaa
pushf
push
pop
ja
sbb
sub
jle
leave
cmp
jp
sbb
mov
test
into
or
lahf
addl
pop
fwait
sbb
xor
mov
js
sub
pop
jo
fists
js
test
cmpsb
jo
loop,pt
dec
loop
mov
mov
cld
ror
rolb
sub
cmp
xchg
leave
pushf
mov
cmp
cmp
pop
xchg
sub
xchg
mov
or
cltd
jno
je
into
int
inc
aas
adc
push
js
push
sbb
call
shr
cmpsb
or
in
inc
or
in
sbbl
lmsw
nop
mov
lret
js
push
ds
aaa
pushf
je
std
push
lcall
mov
je
shlb
push
scas
jne
push
add
jne
push
and
pop
jb
push
test
sar
frstor
cmp
andb
ljmp
jo
int3
sub
jge
mov
push
lret
clc
sahf
mov
popl
out
sbb
jp
jne
in
inc
arpl
mov
in
mov
cmc
in
cmc
test
cmc
sbb
and
lret
imul
mov
lods
mov
pop
mov
dec
lret
mov
pop
cltd
and
test
clc
repnz
aam
das
in
repnz
icebp
or
and
lret
jne
into
cmp
dec
jbe
mov
mov
add
jo
mov
fs
test
xor
pop
outsb
adc
sbb
sub
shlb
jne
stc
inc
cmp
jl
repz
in
cwtl
push
insb
dec
inc
sbb
imul
sub
ds
mov
rorb
and
stos
push
test
rcr
and
jge
pop
lods
adc
push
outsl
imul
xor
jbe
mov
jo
jecxz
lds
inc
mov
call
add
cmpl
sub
push
mov
test
fxch
sub
aaa
insl
scas
addr16
outsl
test
pop
fistpl
test
or
mov
jle
sar
les
stos
add
cld
push
aad
outsl
fwait
cmp
push
jecxz
in
jb
push
cmp
out
add
mov
ljmp
push
in
cmp
mov
adc
fisubl
cs
cwtl
out
mov
sub
in
outsb
fnstcw
cltd
repnz
stos
sbb
lods
push
and
jb
movsb
cli
pop
stc
fsubs
movsl
jne
int
mov
xor
pop
cmp
les
push
cmp
das
mov
or
into
dec
inc
aas
iret
mov
jg
pop
cmpsb
push
xor
add
adc
cwtl
xor
xchg
outsl
xchg
gs
xchg
dec
inc
jne
sahf
sub
jbe
std
push
jecxz
xchg
imul
sub
adc
data16
jbe
call
inc
mov
or
and
adc
ds
movsl
test
sub
popf
lret
fmuls
push
inc
scas
notl
sarl
and
inc
inc
dec
cmpsb
fists
mov
pusha
and
nop
cmp
iret
test
jecxz
daa
fs
xchg
xchg
mov
faddl
pop
xor
xor
shrb
dec
jmp
cmpsb
push
xor
add
or
pop
sub
mov
xor
xor
mov
rorl
dec
repnz
in
mov
cmp
pop
dec
pop
pushf
jae
clc
mov
stos
jnp
add
pop
jp
cmp
loope
clc
xchg
sub
cltd
icebp
test
inc
data16
mov
cmpsl
cmpsb
lcall
out
int
mov
push
dec
popf
xor
mov
mov
adc
xchg
sub
movsl
push
imul
test
mov
imul
sbb
adc
roll
xor
loop
rorb
sub
dec
xchg
sahf
les
test
dec
repz
xor
outsl
scas
hlt
jno
daa
sbbb
push
or
lret
add
cmp
subl
push
dec
in
xchg
out
xchg
or
jae
adc
repnz
pop
pop
insb
cmp
aam
push
mov
test
movl
xchg
ljmp
in
pop
xchg
sub
xchg
ret
fisubs
fldt
cmp
imul
xorl
loop
pop
popa
jg
jae
hlt
repnz
or
mov
dec
testb
sbb
jnp
mov
jb
mov
push
push
pop
scas
cltd
orb
addl
mov
push
dec
xchg
pop
pop
and
arpl
sbb
bound
lods
jns
std
adc
hlt
daa
dec
daa
mov
dec
lods
movsb
out
jg
shlb
call
mul
push
cli
andl
out
mov
outsl
jns
dec
jns
daa
xchg
mov
mov
ss
cwtl
dec
imul
sbb
loopw
aam
mov
daa
fisubl
mov
xchg
xchg
mov
dec
call
and
leave
pop
ficoms
mov
out
arpl
add
push
movsb
mov
scas
frstor
pop
call
sub
inc
and
icebp
ret
xchg
xchg
daa
dec
nop
jno
clc
fxch
sbb
or
arpl
inc
test
jae
dec
and
cmpsl
mov
into
pop
data16
ret
jne
fistpl
aad
add
dec
inc
dec
loopne
mov
jne
adc
push
shr
or
cmpsb
push
cmpsb
jns
adc
stos
or
inc
pop
sbb
pop
bound
mov
sub
nop
jo
mov
lahf
jno
jle
dec
gs
int3
push
je
pusha
cmp
push
in
imul
pusha
arpl
addr16
mov
fildl
or
lock
leave
jnp
inc
fnstsw
out
dec
xlat
sub
lret
pop
andb
mov
push
roll
cmp
jle
xchg
dec
sbb
inc
in
fmull
mov
add
out
imul
pop
gs
mov
fdivrl
popa
mov
jns
ljmp
xchg
out
dec
push
push
test
loope
cwtl
lods
xlat
enter
sub
les
inc
lods
push
jnp
pop
and
mov
pop
inc
pop
cwtl
add
mov
fs
sub
fsubrl
inc
test
mov
movsb
sub
jnp
and
test
xor
or
out
sbb
arpl
jno
scas
idiv
sub
sahf
test
push
stos
je
loopne
movsb
xchg
xchg
loopne
retw
mov
outsb
popa
repnz
sbb
popf
in
pop
imul
outsb
and
arpl
cld
xchg
and
pop
dec
add
out
jbe
fsubrs
das
jns
adc
jb
pop
lods
fstpl
xchg
imul
lods
loopne
stos
jo
scas
dec
pop
scas
pop
popf
jg
out
xor
pop
inc
stos
cmp
or
enter
test
mov
dec
arpl
scas
pop
cmpsl
sbb
or
jge
sbb
or
es
test
mul
lds
jne
mov
in
add
andl
inc
sbb
xchg
inc
out
loope
xchg
push
jge
pop
test
adc
cmp
jg
or
scas
pop
inc
push
pushf
xchg
inc
push
xchg
mov
inc
loop
into
stos
cmp
cmp
xchg
push
adc
icebp
call
sub
and
test
pop
movsb
addr16
jbe
xor
fisubrs
cmp
outsb
sub
test
cltd
mov
push
call
xor
sbb
icebp
fstps
dec
xchg
jae
mov
dec
cltd
fisttpll
in
mov
push
xchg
jmp
sbb
dec
int3
pop
gs
adc
add
pop
sbb
mov
rcll
stos
in
andb
push
es
sub
cwtl
imul
lret
out
mov
push
sarb
xor
outsl
lea
xchg
aam
cmp
aas
ja
test
subb
shll
push
sub
mov
repz
std
lret
adc
xor
scas
stos
jb
or
mov
mov
fdivs
cwtl
cmc
fs
out
das
pop
lods
test
stc
xchg
mov
push
daa
test
sahf
lret
sbb
xchg
push
cld
mov
and
cmp
adcb
jmp
mov
mov
mov
outsb
mov
push
mov
inc
cmp
and
jne
inc
shr
test
cs
sub
dec
sbb
jmp
xchg
ret
inc
and
fcompl
pop
mov
test
nop
cld
lods
int3
outsb
inc
cmc
dec
clc
or
out
test
pop
sti
dec
test
orl
cltd
fldl
popf
push
jo
sub
xor
jnp
lea
std
dec
ss
clc
lsl
shrb
in
cld
mov
fadd
jl
sub
repnz
stos
js
and
in
fs
push
push
sbb
imul
loopne
int
cwtl
jbe
scas
stos
stos
xchg
fs
cmc
jae
cwtl
pushf
jb
lahf
in
call
imul
divb
imul
cmp
fdivrs
jmp
test
lret
cmp
jns
jmp
sbb
aas
imul
adcl
push
fadds
stc
loop
add
iret
fwait
cmp
xchg
fucomp
dec
es
aad
adc
leave
fucomi
jmp
sbb
xor
fdivs
mov
xchg
mov
jo
mov
cwtl
sbb
leave
sbb
jbe
add
jp
in
mov
inc
jne
jo
push
sub
stos
inc
jmp
xchg
daa
out
xor
cmc
adc
out
aaa
jns
lahf
push
xchg
sbbb
add
or
adc
cmp
xchg
dec
popa
push
pop
mov
je
shr
inc
mov
dec
sarl
les
jo
cli
mov
dec
dec
imul
ljmp
leave
jp
mov
mov
imul
rclb
or
fwait
or
sbb
inc
cld
xor
test
fmull
sbb
jge
mov
flds
sbb
mov
inc
sub
cmp
and
mov
xchg
test
or
sub
test
or
popf
jne
sbb
in
int3
jmp
divb
xchg
out
sbb
xchg
mov
adc
inc
mov
lods
pop
ret
sub
jmp
mov
xchg
aam
pop
shll
data16
and
inc
out
push
out
test
ss
test
mov
loope
xchg
sbb
cmpsb
scas
add
in
sbb
fldcw
repnz
repz
fs
int
sbb
pop
lret
cmp
fistpl
test
or
sub
pop
stos
cwtl
mov
pop
mov
inc
out
dec
icebp
hlt
dec
movsb
add
jle
adc
fcompl
push
lods
leave
out
imul
fbstp
add
sub
mov
sbb
jns
popa
jmp
fwait
push
outsb
lods
sahf
xchg
int3
pushf
pop
nop
out
loop
notl
loope
xor
mov
push
addr16
mov
mov
xlat
adc
scas
addr16
call
wbinvd
dec
mov
adc
jmp
jbe
push
fld1
or
pop
jp
mov
lea
lret
call
mov
push
or
mov
mov
testb
mov
sbbb
mov
jmp
leave
push
sub
jb
je
push
add
sbb
fisttpll
lods
fwait
daa
outsl
xchg
inc
or
ljmp
inc
cli
iret
mov
inc
or
in
xchg
rcll
mov
hlt
leave
xor
test
in
cmpsb
mov
sub
adc
aad
testb
test
cmpsl
mov
push
sbbb
xchg
adc
sbb
cld
xor
cmpsl
inc
jnp
push
sbb
fsubp
xorb
cmp
pop
fstps
js
jno
cmp
xorl
idivl
int3
insl
mov
xchg
inc
cmpsl
sbb
push
popf
xorl
jae
out
data16
inc
loope
clc
jo
xchg
out
push
notl
das
arpl
xlat
pop
cmp
sahf
push
outsl
mov
mov
push
lahf
push
lahf
xlat
lahf
jp
sbb
xor
mov
sub
aas
in
jae
xor
sub
add
adc
inc
xor
adc
aas
das
jno
dec
mov
pop
lea
je
bound
mov
dec
stos
or
in
in
push
dec
stos
lock
flds
outsb
test
xlat
lcall
rclb
jp
pop
add
dec
clc
out
lds
int3
mov
push
subl
fwait
test
out
sub
fs
jle
sbb
lret
cs
repnz
stos
adc
and
in
scas
push
out
adc
mov
mov
leave
push
sub
out
mov
and
dec
les
dec
fs
jno
shlb
inc
mov
dec
dec
jnp
xchg
ss
jbe
mov
cltd
cmpsl
and
inc
mov
or
adc
movsb
mov
pop
test
jbe
sahf
pop
je
jae
xorl
movzwl
add
ret
jb
pop
or
fstpt
decl
mov
xor
scas
shr
inc
push
or
aad
sbb
mov
cmp
stos
pop
outsb
aam
iret
cmpsl
int3
dec
insl
push
xchg
cwtl
aam
bound
push
cli
aam
push
xlat
sar
leave
test
into
mov
push
mov
repz
mov
push
pop
inc
mul
adcb
or
loop
cmp
orl
ja
pushf
mov
cmp
push
xchg
jp
ljmp
sbb
dec
or
or
rcl
inc
xchg
call
das
push
fidivrs
mov
insb
js
pop
ficoms
lods
push
inc
sbb
cltd
mov
repnz
out
sbb
test
push
jb
into
pop
lret
pop
cmp
push
cmpsb
outsb
push
popa
mov
pusha
out
mov
xlat
repnz
ret
int3
and
rcrl
mov
and
push
in
stos
int3
pop
cmp
cmpl
push
inc
iret
push
scas
mov
and
cmpsl
and
lods
scas
pop
xlat
aam
lcall
cmp
into
hlt
pop
cld
lret
or
rcrb
mov
or
adc
insl
push
jge
adc
lcall
push
mov
push
and
stc
jns
scas
cmp
hlt
or
test
cltd
push
and
dec
insb
in
mov
xchg
in
sub
inc
in
les
ja
pop
and
in
aad
mov
out
pushf
pop
hlt
clc
loopne
cmc
insb
mov
icebp
arpl
pop
push
jmp
aas
lods
loop
mov
out
pop
popf
insb
popa
mov
ljmp
xchg
and
xlat
imul
divb
pop
push
or
aam
cmp
xor
jno
mov
xchg
sub
loopne
shlb
inc
repz
add
cmp
push
push
cmp
lea
xor
shl
pop
icebp
inc
adc
add
stos
xorb
cltd
rorl
push
out
xchg
mov
mov
jno
add
hlt
cmp
int
lods
sub
xor
data16
movsb
xor
jg
movnti
cli
fwait
inc
and
lahf
mov
cmpsb
or
push
hlt
lcall
data16
movsb
push
jbe
clc
pushf
sbb
stc
out
dec
mov
aas
scas
adc
mov
pop
stc
cmpsb
adc
inc
jg
out
sarb
into
mov
jo
jnp
pop
ret
out
pop
test
cmp
gs
fucomi
jo
add
and
mov
mov
ljmp
pop
ja
cmp
out
xor
int
ss
add
ss
mov
out
fcomp
lock
int3
aas
es
daa
scas
sbb
dec
mov
fwait
mov
subl
ret
pop
cmp
mov
cltd
out
cs
sbb
push
nop
sub
push
mov
or
repz
cmp
fcomps
pop
fdivs
pop
pop
imul
nop
fstps
jge
mov
xchg
lahf
xor
jbe
sbb
sub
clc
mov
stos
cmp
inc
popf
stos
lahf
xchg
mov
mov
jo
add
push
xor
inc
jmp
or
lahf
sbb
push
fadd
lret
add
aad
or
inc
mov
ds
int3
in
push
dec
nop
lods
mov
mov
mov
push
jb
xchg
add
loop
mov
lret
js
cmc
xor
sbb
popf
cmpsl
loopne
dec
out
out
lods
movsl
out
fcomps
mov
in
sub
mov
adc
and
and
fstps
and
sbb
mov
and
outsb
fmull
insb
sub
int
xchg
cli
mov
mov
call
adc
mov
dec
clc
lds
je
out
pop
and
sbb
test
mov
xchg
das
cmpsb
jge
add
out
lahf
mov
out
sub
dec
adc
inc
cmc
sbb
push
movb
mov
jno
add
pop
jno
fistpll
movsw
add
xchg
outsb
dec
movsl
mov
jne
fldenv
bound
mov
fstps
insl
push
pop
cmp
mov
lods
jge
roll
aas
clc
and
out
pop
clc
or
and
idiv
sbb
insl
mov
sub
sub
repnz
in
jbe
sub
mov
lods
or
fwait
lea
mov
push
xor
lcall
sar
lret
push
pop
lret
inc
adcb
cmp
and
inc
imul
js
cmp
test
jmp
out
push
mov
dec
fwait
pop
adc
xchg
lds
popf
lret
stc
jno
sbb
in
aas
xchg
sub
or
push
or
andl
push
filds
nop
out
add
ja
aaa
nop
icebp
sbb
mov
jnp
adc
sar
rol
pushf
pop
sub
push
dec
jecxz
sub
cmpsl
inc
mov
cmp
pop
aam
adcl
push
mov
je
cwtl
mov
popf
mov
push
cmp
pop
lods
loope
sbb
pusha
pushf
xor
cmpsl
cmp
lea
lahf
inc
jns
jl
mov
lcall
mov
mov
in
rcrb
add
addr16
dec
cld
jb
dec
ss
or
aad
cld
xchg
es
daa
mov
pop
lods
popf
dec
mov
icebp
mov
and
cmp
and
out
aam
xlat
add
ja
movntq
test
or
mov
int
outsl
out
dec
jge
cmpsl
cwtl
loop
leave
repz
cld
scas
mov
jl
ror
out
in
dec
mov
push
int
int
mov
jg
mov
dec
and
ljmp
lcall
mov
dec
hlt
fsetpm(287
mov
jne
mov
mov
mov
mov
rorl
pop
pop
xor
sbb
adc
fsubrs
jb
adcb
js
rcll
dec
je
fsubs
jnp
mov
fs
das
pop
sub
jae
jle
and
push
pop
outsb
pusha
popf
xor
push
fsub
fldenv
dec
jl
lahf
dec
xor
fistpll
or
lret
dec
dec
pop
es
ljmp
addr16
adc
mov
subl
pop
cmp
xor
loop
adc
adc
out
or
daa
mov
mov
je
lahf
sbb
mov
lret
test
stc
push
sbb
mov
mov
or
out
ret
js
sub
jp
sbb
pop
fdiv
mov
push
lcall
xchg
jne
jo
mov
cmpsb
lods
test
test
xchg
mov
sbb
cmc
jo
addl
pushf
and
ljmp
cmp
xchg
sbb
leave
xor
mov
divl
mov
jae
mov
mov
stos
lret
int3
imul
pop
jg
or
mov
shr
xor
push
mov
dec
mov
aas
sub
cmc
push
fildl
cmp
imul
jp
roll
lret
jae
cmpsl
lock
test
or
inc
paddw
rclb
cmpsb
lods
inc
addr16
sbb
cmpsb
stos
xchg
push
cltd
mov
push
into
lcall
insl
pop
dec
adc
call
lods
jmp
and
mov
loop
push
add
daa
mov
inc
pushf
enter
or
sbb
out
loope
cmc
jp
mov
fldl
sbbb
cmp
imul
push
cltd
gs
or
inc
nop/reserved
test
out
cwtl
push
mov
adc
gs
mov
ljmp
ja
add
sbb
push
lcall
add
test
in
jg
or
outsl
xor
ss
in
shlb
leave
xchg
add
in
adc
cmp
rol
mov
inc
stos
add
xchg
into
mov
xchg
call
je
jl
jo
repnz
mov
repz
cmp
push
mov
pop
les
cmp
aas
sbb
mov
ret
gs
dec
out
shll
mov
test
pop
insl
int
xchg
cwtl
or
es
mov
or
mov
sbb
pop
pop
and
sbb
pushf
cltd
xchg
jecxz
test
pusha
imul
inc
lods
gs
test
lcall
add
sbb
and
push
aaa
in
nop
pushf
sahf
jge
ds
leave
jbe
aas
jae
push
pop
sub
scas
in
add
fmull
pop
fcompl
in
and
sarl
or
std
xor
imulb
push
lahf
aas
pushf
ss
dec
scas
roll
add
sub
in
sbb
stos
insl
test
jae
cli
mov
js
sar
xchg
addl
in
and
mov
jns
ret
and
fisttpl
jle
andl
loop
pop
adc
mov
lock
sub
iret
push
fisubl
sbb
arpl
fmuls
rclb
outsb
push
mov
adc
sbb
shrl
pop
and
jbe
xchg
mov
inc
xor
pop
jl
push
ljmp
jmp
js
cmp
push
xor
dec
test
xor
lock
mov
dec
inc
loope
pop
in
jp
xor
push
jae
pop
adc
pushf
fcoms
dec
imul
mov
out
and
scas
fsubp
mov
sub
add
and
mov
outsb
jns
xchg
outsb
sti
pop
loopne
popa
push
adc
inc
adc
inc
cmpsl
pop
imul
add
jnp
call
jl
cs
loopne
movsb
pop
loopne
jne
in
add
pop
dec
mov
shl
das
insl
aas
sarb
cmp
gs
fiaddl
xchg
inc
jle
std
and
imul
xchg
push
adc
js
enter
or
fisubrl
call
andl
push
push
push
push
xlat
push
jmp
movsb
pusha
into
or
mov
pop
sub
push
outsb
mov
mov
sti
leave
adc
cwtl
lret
and
dec
xchg
dec
or
shl
movsb
rcll
hlt
jns
sbb
dec
pop
jmp
ljmp
jne
jg
cmp
inc
jl
into
jb
enter
push
dec
popa
xchg
inc
out
je
lahf
add
xor
js
fs
cmc
cld
aaa
sub
aaa
and
push
or
jmp
loopew
rclb
sbb
xchg
aam
mov
fdivs
pop
cmp
rorb
bound
pop
stos
adc
mov
add
mov
mov
sbb
or
pop
call
jo
mov
xchg
or
dec
push
inc
or
call
pop
xor
xor
mov
push
scas
rclb
sbb
and
xorb
es
sbb
pop
xor
dec
imul
dec
insl
push
popf
stc
movsb
mov
jge
data16
call
test
xlat
rclb
arpl
cmp
es
hlt
xchg
outsl
imul
idivb
mov
fcoms
std
arpl
lret
stos
add
cmpsl
mov
xor
lea
ja
mov
sahf
call
mov
cmc
imul
lds
or
int
jbe
or
xor
aaa
sti
enter
xchg
lcall
dec
mov
and
lock
ret
shll
mov
je
sbb
movsl
dec
push
sbb
adc
sbb
popa
rorb
nop
sub
stc
pop
sub
in
push
or
jnp
mov
repz
cmpsl
add
ret
jg
inc
dec
jne
scas
ret
rol
push
add
iret
inc
mov
xchg
xlat
xor
sbb
push
loope
lcall
ja
les
pop
icebp
xlat
jl
lods
aaa
jle
push
pop
and
or
mov
xor
mov
cmp
scas
dec
or
jle
mov
insl
push
adc
pop
out
roll
push
jns
ljmp
or
call
daa
pop
dec
movsl
out
xchg
stos
rorl
mov
or
out
popa
dec
mov
in
inc
mov
lea
into
loope
fwait
popf
cwtl
jne
mov
pop
push
cltd
inc
xor
mov
and
test
mov
jg
cmpsl
lods
xlat
push
mov
lods
scas
push
push
jb
adc
neg
inc
jecxz
xlat
xor
inc
push
mov
dec
jmp
int
cwtl
cmp
cwtl
addb
js
in
add
testl
or
jecxz,pn
push
in
sub
and
push
add
js
xor
jne
int3
push
push
into
in
jbe
fsubrl
xchg
jmp
inc
inc
fimull
add
push
inc
imul
mov
insl
jle
mov
loop
testl
gs
fcmovb
in
inc
sbb
sbb
xchg
xchg
call
cmp
or
pop
jbe
mov
lret
cmp
mov
dec
ljmp
xor
dec
pop
jp
lahf
adc
dec
out
out
sub
lods
sbb
sub
jmp
rorl
lcall
pop
sbb
hlt
mov
mov
push
fldl
inc
pop
push
inc
loop
xchg
fmuls
xor
push
push
fdivl
jmp
ss
lods
mov
popf
aas
mov
insb
sub
jge
movsb
iret
in
enter
push
js
data16
nop
outsl
fdivs
push
sub
call
add
rorl
sbb
int
sbb
or
mov
jp
and
fs
stos
fidivrs
jp
lret
iret
int3
push
push
stos
add
cs
xlat
xchg
inc
mov
push
and
aad
sbb
or
dec
pop
mov
push
mov
cwtl
ret
popa
push
bswap
pusha
rorb
sbb
sbb
cmp
ds
pop
loop
sub
cltd
ja
pop
imul
xor
cld
lods
jg
or
xchg
and
sbb
push
test
decl
xor
pop
adc
mov
adcl
and
pop
jne
or
fldenv
sbbb
dec
repz
call
add
cmp
cltd
inc
je
subl
xchg
test
sbb
cmp
insb
sti
pop
cltd
inc
adc
xchg
pop
pop
daa
mov
and
mov
out
insb
ljmp
mov
inc
out
js
jmp
push
pop
es
scas
movsl
adc
fmul
ja
movsl
lret
arpl
pushf
insl
clc
cmp
push
sub
inc
jbe
mov
divl
subl
xchg
loope
push
mov
aas
lock
stos
sahf
push
xchg
mov
fcom
fcomps
sub
lret
cmp
icebp
mov
bound
movsl
and
push
cli
dec
rolb
popf
hlt
mov
inc
sub
cwtl
call
shlb
lock
into
hlt
xchg
leave
dec
xchg
test
imul
rcr
in
pop
mov
arpl
gs
clc
dec
stos
data16
or
xchg
jbe
ja
lods
fidivrs
inc
cs
xchg
mov
mov
mov
cmpsl
or
loopne
adc
lock
loope
inc
arpl
inc
add
lcall
or
xor
lods
push
outsb
test
xchg
inc
or
in
repnz
in
push
repz
xchg
jbe
or
sub
aas
lret
insb
xchg
mul
push
out
xlat
repz
mov
clc
test
and
out
sti
jns
xor
pop
bound
mov
shll
jl
es
cmpsb
mov
jle
pop
cmp
xlat
shrl
mov
cmp
xchg
or
pop
les
dec
jb
push
add
cmp
aas
test
lds
add
lea
or
or
ret
fs
cmp
into
stos
dec
sbb
push
aaa
sahf
and
jb
add
jge
lods
icebp
push
pusha
out
inc
adc
movsl
xor
mov
test
push
data16
inc
dec
sbb
outsb
pop
cmpsb
outsl
iret
mov
jmp
std
popa
insb
repz
cs
or
adc
or
scas
and
sbb
sub
mov
and
mov
test
movsl
sbb
mov
pop
out
in
or
hlt
and
pop
nop
rorb
pop
sti
dec
adc
xlat
pop
mov
add
push
xchg
jecxz
je
loop
js
popa
je
lret
dec
sub
pop
push
mov
inc
sahf
push
out
or
sub
std
scas
lods
xor
shll
jge
addr16
out
iret
int3
pop
add
fistps
inc
push
fs
sbb
call
icebp
xor
cli
cmpsb
testb
add
dec
mov
add
push
xchg
aam
inc
mov
push
xor
mov
push
push
dec
push
stc
mov
movsb
decb
cltd
pop
out
call
mov
xchg
scas
mov
push
mov
in
lds
xor
outsl
movsl
loopne
jne
out
cmp
or
loope
mov
xchg
pop
rcrb
out
fisubrl
int3
and
or
xchg
inc
mov
ffreep
addb
pop
in
jbe
std
push
cmp
xor
mov
fimuls
pop
mov
fistps
inc
push
push
repz
mov
sub
jno
es
mov
repz
push
lahf
shlb
push
dec
loope
iret
mov
ds
pop
push
push
or
xor
lret
xor
into
adc
aad
jnp
fstl
aad
sbb
jne
adcl
imul
push
lea
mov
ret
gs
sub
xor
jge
outsb
or
not
xor
cmp
and
mov
mov
outsl
in
pop
mov
cli
movb
jg
jmp
xor
jo
ror
sub
cmpsb
jbe
xor
je
dec
or
testb
pop
and
jp
lret
inc
sub
stos
fisttpl
mov
in
shll
stos
outsb
cs
test
jg
inc
cld
jne
lret
inc
cmp
xchg
icebp
lds
push
cmc
sbb
push
lods
fs
mov
push
repz
cld
cmp
ret
jmp
loop
scas
iret
push
xor
jo
adc
js
cmp
push
jmp
add
lods
push
insb
add
addr16
and
sbb
xor
jne
sub
loopne
jle
mov
cltd
insl
inc
cld
pop
add
cs
gs
jo
adc
sub
cmp
incb
std
mov
jmp
gs
subl
inc
stos
mov
and
scas
loope
mov
sbb
out
push
jb
out
leave
adcl
call
insb
fistpl
xor
xor
nop
fisttps
aam
sti
sbbl
push
adc
daa
xchg
mov
inc
mov
popf
sbb
lret
xchg
adc
push
sti
jb
xor
aas
dec
stc
mov
inc
xor
or
mov
in
lds
push
cli
add
aad
cmp
in
dec
mov
inc
ljmp
popf
push
and
pop
mov
hlt
xchg
cmp
dec
rcl
mov
lea
mov
jmp
pop
cmp
push
mov
add
outsl
sbb
pop
in
mov
lcall
js
pop
xchg
mov
push
push
jnp
inc
enter
rcrl
fwait
not
ficoml
cmp
test
xchg
js
nop
hlt
fnstsw
push
jnp
popf
and
hlt
inc
add
sarl
data16
pop
into
jge
add
mov
jecxz
pop
push
or
jp
pop
outsl
bound
mov
xchg
movsl
std
pop
xor
lods
lret
decb
and
mov
mov
cmp
insl
or
and
lcall
mov
mov
inc
adc
jle
je
pop
or
iret
xchg
hlt
add
rol
repnz
bound
ret
out
and
decb
hlt
push
movsl
adc
xchg
icebp
cmpsb
rolb
push
jmp
iret
bound
cmpsb
mov
mov
dec
sahf
in
cmp
mov
out
ret
xchg
adc
inc
jle
xchg
sub
pusha
dec
shlb
adc
xchg
nop
jge
cmp
popf
mov
mov
mov
ds
or
pop
or
out
mov
jne
adc
mov
push
inc
inc
sub
in
movsb
dec
pusha
addr16
inc
fisttpll
rorl
xchg
and
sahf
adc
cltd
adc
dec
subb
push
sbb
sbb
xor
fcoms
mov
out
cmpsb
insl
pusha
in
adcb
nop
xor
mov
jecxz
adc
sbb
stc
imul
push
xor
icebp
repnz
mov
repz
jmp
push
out
xchg
pop
inc
test
and
mov
mov
cwtl
push
cmp
pop
xchg
into
clc
fcmovu
cmp
cmpsl
lock
cmp
lret
popf
testb
cmp
dec
sbb
jae
mov
mov
dec
adc
shr
push
sub
popa
sub
mov
sub
cmpsl
jnp
dec
test
jg
out
shl
mov
int3
das
fisttpl
cli
ret
mov
aaa
popf
nop
aaa
repz
sub
out
mov
dec
xor
fisubrl
xlat
inc
or
sbb
std
mov
insb
outsl
icebp
inc
adc
adcl
mov
shrl
pop
jmp
sbb
inc
decb
jp
mov
xor
imul
cld
and
gs
pop
adc
hlt
dec
ljmp
and
cmp
cmpsb
pop
dec
loop
inc
cmp
ret
cmpsb
mov
bound
ss
dec
jo
push
xor
xor
sbb
jae
leave
aaa
test
cbtw
jne
and
in
hlt
sbb
js
jnp
jmp
rcrl
outsl
test
and
sbb
iret
sarl
mov
dec
lret
lods
dec
loopne
fisttpl
sub
sar
enter
popf
call
mov
and
add
cmc
test
aas
icebp
mov
popa
cmp
mov
stc
cmp
sbb
or
stos
mov
popa
bsr
mov
pushf
movsl
pop
outsb
pop
inc
mov
and
imulb
pushf
dec
inc
xor
mov
sub
push
iret
lods
fucomip
mov
xor
pop
fmull
push
jecxz
push
cwtl
das
in
push
clc
ss
ja
in
dec
pop
sub
xor
dec
je
jns
mov
xorl
mov
sub
add
outsb
fisttpl
imul
jmp
xchg
popf
jle
scas
add
sbb
fwait
mov
aas
fldenv
f2xm1
data16
push
neg
xchg
out
negb
imul
scas
test
cmp
mov
sub
jbe
fistpll
jno
movsl
inc
hlt
daa
out
push
fisttpll
push
and
bound
cltd
pop
cmp
scas
stos
and
lods
outsb
xchg
mov
lea
je
inc
fsubr
add
add
sbb
sarl
xchg
in
xor
sbb
repnz
inc
pop
popa
out
addl
jge
jne
scas
xor
and
sbbb
xchg
pop
sahf
mov
xchg
and
xchg
jo
jl
popa
sub
out
jp
nop
sbb
lock
pushf
pushf
and
aad
pop
xchg
jbe
addl
cli
inc
lea
adc
daa
adc
imul
sub
lock
inc
pop
xchg
loop
inc
dec
popf
test
or
add
int3
push
out
pop
jnp
stos
in
dec
or
cmp
cmc
cli
ss
adc
or
jmp
dec
fiaddl
or
add
ljmp
or
lea
jae
lock
mov
cmp
scas
xor
rcl
jge
lds
pop
and
sti
sub
test
bound
cwtl
add
pop
fists
sbbb
movb
or
jb
into
sub
sub
pop
mov
stos
lret
mov
push
nop
lcall
mov
mov
xchg
cmpsl
lods
ljmp
add
jecxz
mov
lret
out
inc
test
jo
inc
jle
dec
jae
out
inc
pop
ret
xchg
pop
mov
test
mov
pushf
push
ja
std
mov
jns
mov
stos
movsb
out
mov
cmp
jb
xor
mov
repnz
add
arpl
test
mov
jl
int
xchg
icebp
std
push
insb
push
dec
jg
mov
lods
jns
out
sub
push
adc
sbb
cmp
add
loopne
xor
push
ret
jns
mov
jo
sbb
iret
and
cmp
cmp
jmp
cwtl
mov
inc
cmp
loop
mov
cld
cmp
in
mov
cmp
sub
add
inc
xchg
mov
mov
sbb
rol
inc
roll
inc
popl
ja
lods
pop
ds
push
lock
js
mov
stos
mov
fstps
mov
add
mov
addb
data16
sub
dec
dec
adc
adc
inc
mov
pop
and
shll
inc
cli
fsub
sub
pop
adc
mov
outsb
gs
hlt
mov
into
push
lea
inc
test
cmp
push
or
adc
cmpsl
addr16
scas
stc
loop,pt
inc
mov
cmovp
pop
xorl
mov
pusha
outsl
pusha
mov
and
mov
sbb
pushf
lds
or
pop
stos
pop
adc
pop
pop
in
add
mov
jl
fwait
bound
movsb
mov
jne
ja
fadds
scas
adc
jmp
cmp
and
sbb
enter
daa
movsb
stc
les
insb
sbbl
adc
mov
fsubs
pop
ficoms
cmp
loope
movb
add
cmp
lea
pushf
mov
xchg
adc
insb
mov
mov
xchg
pop
pop
pop
les
jle
or
and
loop
and
mov
movsb
cmpsl
sahf
test
xchg
mov
clc
cmp
daa
lret
in
add
jp
lds
mov
out
ret
pop
lahf
adc
imul
ffree
jecxz
je
adc
shl
les
add
test
xor
outsb
xlat
popf
lret
pop
popf
adc
jecxz
sar
inc
mov
jge
dec
jecxz
int3
adc
dec
push
add
cmp
fcoml
dec
pcmpgtb
xchg
movsl
mov
mov
or
das
push
sar
mov
fmuls
xchg
mov
push
movsl
or
xor
add
out
test
les
xor
les
ret
loop
into
lea
test
pop
push
push
sti
jge
aam
movsb
mov
pop
inc
dec
dec
mov
fdivr
hlt
int3
or
xchg
or
push
fsubrp
mov
lods
xchg
inc
pop
push
mov
aam
xchg
lea
mov
scas
mov
fsubp
jmp
dec
and
andnps
push
pop
and
rcl
fcoms
pop
add
outsl
inc
fimull
jb
xor
add
xor
pop
in
push
jp
or
rolb
rclb
jno
sub
in
fisubrs
js
and
cmpsb
add
test
int3
push
roll
shlb
mov
jno
xchg
lahf
repnz
popa
fnstcw
push
inc
xchg
arpl
xchg
ror
imul
repz
dec
add
cmc
shrb
adc
cmpl
cmp
adc
and
fwait
pop
push
out
popf
fs
lret
fsubl
dec
pusha
addr16
inc
cmpsl
adc
movsl
adc
dec
sub
outsb
and
das
ljmp
stc
push
add
mov
lods
call
add
jmp
inc
or
cmp
popf
jl
add
pushf
lcall
filds
add
insb
add
adc
mov
mov
cli
push
test
gs
xchg
sbb
cmp
pop
in
pop
or
xor
imul
js
xchg
push
add
adcb
jae
xor
jb
sbb
call
add
sbb
pop
cwtl
adc
iret
xor
sbb
push
repz
repz
mov
fisttpl
jbe
outsb
adc
xchg
xchg
add
pop
mov
and
sti
nop
push
xor
adc
inc
dec
xchg
mov
lods
pushf
xlat
jmp
aam
aad
lret
xlat
sbb
mov
inc
push
sti
enter
lock
mov
pop
adc
adcb
add
and
cltd
imulb
pop
subl
subl
nop
loop
cmp
je
int
cs
clc
mov
lar
dec
pop
adc
jb
sub
and
xchg
and
xor
lret
xor
fstpl
sbb
out
sbb
mov
jge
insl
jecxz
arpl
push
sahf
popf
add
dec
loopne
ja
imul
dec
mov
mov
mov
imul
xor
add
pushf
cmp
subb
popf
pusha
and
data16
mov
nop
push
leave
sbb
in
into
inc
xchg
shr
mov
jecxz
je
adc
adc
fcompl
jge
stos
shll
pop
lods
insb
lcall
shl
fisttps
and
or
push
or
jmp
sbb
loope
xchg
loope
imul
rclb
pop
bound
sahf
out
in
cmp
enter
xchg
mov
bound
movsl
pop
insb
mov
mov
and
cwtl
or
push
in
rcrb
lods
adc
fcomps
addr16
and
jnp
aas
daa
or
mov
jp
pop
movsb
cmp
adc
dec
test
andl
mov
fucomi
insl
pop
out
pop
gs
icebp
push
orb
xchg
cmp
xchg
ds
daa
into
inc
dec
loopne
lods
lods
jmp
push
setg
clc
je
jle
repz
push
mov
mov
xchg
xor
xchg
sbb
shll
enter
mov
jno
mov
jns
aaa
cli
inc
js
mov
add
pop
add
iret
roll
xchg
cs
leave
jae
dec
adc
gs
inc
xor
shll
inc
out
into
mov
pop
outsl
clc
movsb
sbb
popa
mov
adc
outsb
adc
jne
mulb
aam
push
xchg
jmp
jbe
int3
xchg
nop
nop
xor
pop
adc
pop
stos
pop
pop
in
jno
cmp
das
xor
insb
cmp
jbe
ficoml
sub
inc
mov
mov
mov
pushf
pop
stos
je
movsl
sub
jge
dec
xor
xchg
inc
add
jne
sahf
pop
into
and
or
xor
or
arpl
test
sub
pop
out
daa
inc
gs
outsl
fadds
cwtl
ficoml
rcr
xor
xor
repnz
out
mov
or
push
inc
lea
sbb
push
clc
push
jmp
jb
mov
repz
enter
loope
jge
inc
dec
fdivrs
add
dec
dec
rcl
lock
push
push
jnp
clc
lret
sub
adc
jo
xor
xchg
xor
or
add
xor
in
sbb
out
cwtl
sub
pop
rcrb
shrl
lret
std
pop
mov
in
jp
pop
xor
loopne
cwtl
sub
pop
and
icebp
xor
stc
and
mov
int
jbe
push
push
ja
das
ja
pop
je
aad
pop
mov
mov
cld
mov
imul
fcoms
ja
fwait
lea
sub
add
gs
mov
jl
fadds
dec
fbld
xor
xchg
das
push
sbb
mov
add
xchg
jno
les
sub
pusha
mov
cmp
into
adcl
jg
hlt
lret
jae
push
mov
jmp
inc
push
push
lret
xor
not
dec
pop
mov
push
stos
xchg
scas
sbb
dec
pop
scas
divb
arpl
std
cli
pop
add
data16
dec
xlat
cwtl
jnp
stos
repz
in
hlt
push
sub
call
pop
stos
lods
stc
dec
push
iret
dec
dec
push
lcall
push
pop
in
sahf
int
sub
or
jl
xor
adc
imul
andl
leave
sbb
outsl
add
sti
cmpsw
jge
repz
shlb
push
outsb
es
adc
es
jg
dec
sarb
cmpsb
sbb
std
outsb
and
stos
adc
aaa
cmp
push
jl
pop
ss
sub
iret
stos
mulb
das
es
fcmovb
inc
inc
pop
inc
sbb
stc
mov
scas
dec
aas
add
mov
out
ss
mov
mov
dec
je
lcall
insl
out
inc
ret
cli
imul
adc
fsts
and
popf
xlat
loope
fisttps
adc
loope
nop
inc
mov
jmp
xchg
mov
or
jnp
push
cmp
push
push
and
dec
adc
add
or
sbb
movsb
aaa
mov
push
xchg
mov
nop
aas
gs
cwtl
jb
cs
pop
mov
push
ficoms
pop
mov
test
push
dec
add
push
lcall
sbb
mov
das
push
fstl
fiaddl
mov
jecxz
movsl
inc
and
fildl
flds
insb
aaa
lea
std
ljmp
adc
gs
gs
sbb
les
imul
xor
add
pop
sub
pop
or
jl
push
jbe
mov
out
mov
mov
dec
es
push
cmc
sbb
jnp
dec
popf
pop
push
test
or
aam
dec
pop
in
out
loope
data16
call
lock
das
out
lret
xlat
add
in
or
and
inc
fidivs
jle
mov
xchg
inc
inc
mov
stc
arpl
jbe
sub
aam
mov
lock
adc
cmp
addr16
cmp
daa
out
jb
mov
jo
and
insl
shlb
xchg
out
fbstp
jmp
xchg
xchg
or
and
mov
je
lret
adc
imul
pop
inc
scas
cmp
mov
and
out
adc
std
xor
and
pusha
sbb
clc
pop
sbb
ror
mov
fs
stos
sub
jo
sbb
xorb
sub
data16
lret
push
cmp
stos
sar
mov
jecxz
mov
pop
pop
and
xor
cld
out
xor
jno
jbe
jb
sti
neg
or
dec
adc
pop
inc
pop
fsub
xor
rcl
loop
and
orl
enter
fistl
and
cmpsl
inc
mov
mov
mov
dec
dec
cmp
enter
je
jo
jno
mov
data16
shl
cmovg
or
mov
or
sub
ss
jo
jmp
and
or
fcoms
mov
or
icebp
push
sbb
inc
add
pop
shll
dec
fcmovnbe
aad
inc
outsl
adc
inc
xor
fdivrl
xor
lock
dec
cltd
sbb
shl
xor
rorb
ja
jp
pop
in
inc
mov
int3
mov
xlat
jnp
xor
xchg
imul
push
add
or
dec
mov
pop
inc
clc
add
sti
xor
lock
mov
dec
pusha
test
int
sub
cmp
dec
mov
sti
out
and
mov
push
push
xor
fcomps
or
xchg
push
aam
xchg
sbb
fs
insb
stc
and
mov
aaa
mov
data16
or
ror
repz
xor
jo
adc
mov
xchg
fistpl
mov
call
stos
in
adc
mov
fdivl
pop
lock
add
add
loope
mov
gs
les
in
in
movsb
add
add
jle
cs
xor
test
jns
mov
in
or
or
test
dec
mov
and
insb
or
leave
pop
pop
cwtl
bound
add
iret
or
stos
fs
push
or
adc
pop
jne
rclb
cmpsl
cmp
xchg
ret
jae
mov
xlat
jno
std
mov
cld
movsb
mov
jecxz
mov
push
jl
test
sbb
xchg
jecxz
aaa
and
repnz
adc
fwait
pop
inc
xchg
push
pop
shlb
in
add
decb
nop
pop
cmp
add
jae
dec
sub
fisubs
repz
pop
jne
lock
loopne
fcmovbe
mov
add
pushf
movsl
dec
mov
orb
das
decl
mov
dec
or
push
ja
fs
jnp
inc
loopne
stos
lods
insl
lds
jb
insl
in
and
mov
pop
das
mov
and
push
out
imull
jle
xor
mov
notl
mov
xlat
mov
pop
adc
add
fsts
jge
lea
dec
stos
pop
mov
adc
roll
pop
adc
xchg
adcl
sbb
xor
rcrl
loop
popf
shl
cmp
loope
out
mov
or
or
sbb
inc
out
rcrl
sbb
imul
push
enter
mov
outsb
jno
push
jae
insb
mov
mov
jae
pop
mov
jo
push
clc
iret
pop
fs
sti
repz
dec
push
cmp
jle
sahf
and
in
bound
xor
inc
in
xchg
movl
dec
and
xor
hlt
sti
add
rcrb
push
leave
shlb
iret
clc
rcr
sub
jle
push
pop
sbb
xchg
push
cmp
scas
pop
cmp
or
scas
outsl
inc
inc
adc
inc
mov
call
jns
notl
bound
mov
int3
cmp
insl
push
add
mov
aas
and
mov
dec
das
sub
dec
mov
mov
dec
ficompl
dec
sbb
dec
cmc
cmp
aas
sbb
jge
les
adc
sub
mov
dec
or
add
lahf
cmp
dec
imul
push
int3
add
pop
pop
lret
cli
movhps
outsl
push
xor
gs
out
add
call
sbb
into
push
xlat
dec
and
dec
je
das
iret
mov
xchg
test
test
sub
sbb
cmp
lret
sbb
hlt
sbb
repz
pop
push
inc
jnp
test
test
jecxz
iret
loope
dec
fsqrt
lret
aad
push
xlat
leave
scas
daa
lcall
mov
xchg
sbb
in
adc
int
mov
cld
imul
es
inc
mov
push
pop
jne
in
out
pop
cs
push
ja
jb
mull
xorb
sub
lret
insb
dec
mov
adcl
lcall
je
rorl
add
dec
inc
mov
loope
sti
loopne
lret
cwtl
stc
pop
neg
inc
into
and
pop
testl
scas
jns
mov
mov
adc
xchg
push
mov
rcrb
sub
lea
inc
cmp
lods
jae
push
in
outsl
movsl
inc
xchg
int3
mov
jle,pn
push
pop
jg
ja
sub
enter
and
pop
stos
iret
mov
bound
adc
sub
movsl
iret
loop
jo
add
xlat
inc
mov
mov
or
mov
dec
pusha
clc
stc
ja
sahf
cmp
pushf
cmpsb
inc
lret
jo
inc
xchg
cmp
jg
pop
pushf
outsl
leave
insb
mov
int3
xchg
je
push
mov
in
push
mov
add
loop
mov
lock
mov
popa
sbb
les
adc
cmc
out
test
mov
lods
and
ljmp
adc
pushf
sub
push
cld
ds
dec
sub
inc
ljmp
pop
xor
and
inc
test
jns
dec
fcompl
sub
cmpsb
icebp
mov
jnp
and
fildl
cmp
sbb
sbbl
pop
ss
inc
add
mov
pushf
mov
push
mov
lods
sub
add
shl
sub
ja
cmp
pushf
sub
fldl
xlat
dec
inc
es
xor
dec
add
mov
mov
push
push
sahf
push
sub
sub
jne
sub
dec
xor
mov
jnp
int3
fstps
and
push
adc
push
test
adc
xor
popf
int3
pushf
or
mov
xchg
jbe
ljmp
lods
sbb
push
cmpsb
or
inc
fisubrl
aam
xor
fdivs
push
sbb
cmp
int3
adc
icebp
and
sub
sub
out
mov
dec
xchg
insl
sahf
mov
mov
jmp
adcl
aam
or
add
and
and
mov
push
jmp
push
lea
mov
cmp
movsb
call
les
mov
fisttpl
mov
iret
testl
mov
sarb
int3
stos
sbb
add
testb
sar
jecxz
pop
jno
xchg
bound
jp,pt
ret
outsl
das
inc
rolb
jecxz
in
subb
mov
cmp
xchg
xor
jmp
fwait
cmp
cmp
mov
sbb
lahf
data16
mov
jb
xchg
push
xorl
mov
dec
lock
xchg
mov
adc
lret
push
pusha
xchg
repnz
xchg
xor
adc
and
xchg
rcr
mov
enter
jns
pop
inc
cmc
pop
sbb
out
inc
stos
push
mov
xor
stc
cmp
lret
mov
xor
bound
xchg
mov
jp
and
or
rorl
fldt
enter
adc
sub
xor
xchg
lds
jle
jmp
xchg
and
scas
cmc
fwait
dec
in
xor
dec
pop
cltd
push
jmp
test
push
mov
cmp
rcll
int
lahf
cmpsb
loopne
jle
or
mov
je
andb
cmp
xchg
outsl
mov
or
mov
call
sub
sbb
lods
xchg
in
sub
icebp
mov
icebp
imul
shl
mov
out
mov
inc
xor
int3
leave
lods
pusha
nop
jo
pop
clc
dec
mov
push
sbb
mov
push
shl
cmp
cmp
jecxz
sub
fdivl
arpl
call
popa
fcompl
cmp
dec
rolb
cmp
pop
push
and
sarb
scas
adc
roll
sub
xor
mov
loop
xor
popf
inc
inc
mov
add
or
lret
ds
push
inc
or
push
jmp
idivb
push
scas
and
mov
scas
fisubl
and
sub
mov
xor
scas
fists
fisubl
inc
shll
aad
push
jb
sahf
jo
xchg
xor
jae
inc
test
inc
mov
jae
sub
inc
js
repz
xchg
nop
and
cmpl
adc
xchg
mov
sbb
movq
mov
push
sub
gs
aad
bound
jb
cltd
or
sub
jecxz
jb
sahf
iret
es
jno
mov
mov
mov
pop
stos
fidivrs
test
xchg
xlat
je
jbe
jge
jge
sbb
mov
adc
cmc
or
jge
xchg
repnz
arpl
pop
data16
mov
mov
ja
xor
cmp
push
and
daa
inc
adc
js
xchg
ja
sub
imul
jb
cmpsl
ja
scas
scas
push
iret
cltd
push
add
jp
adc
add
cwtl
fistps
or
jnp
or
pop
push
cwtl
in
rol
imul
sub
pop
and
xor
repz
scas
or
dec
loopne
fdivrp
leave
outsl
aam
fnsave
aaa
adc
cld
jp
test
jb
adcb
call
lock
iret
cmp
lods
fsubrl
mov
pop
into
mov
dec
mov
or
mov
orl
mov
mov
push
pushf
repz
pusha
in
and
pop
int
adc
xchg
xchg
fdivrp
mov
clc
rep
std
mov
jae
test
std
inc
sub
jle
test
sub
rclb
jl
js
lcall
insl
fisubl
cmpsl
dec
daa
inc
iret
or
cmp
ret
adc
xchg
loope
insl
loope
mov
repnz
fcompp
mov
pusha
test
imul
xchg
jne
sbb
mov
xor
inc
inc
mov
dec
mov
xchg
xchg
inc
aas
fdivs
sub
mov
push
test
out
jmp
fmuls
sarb
cmp
pop
or
fisubs
or
in
movsl
test
xabort
test
shrl
cli
sbbl
test
push
testb
data16
pop
aas
jmp
adc
adc
loopne
fildll
rol
inc
inc
add
pop
ds
in
mov
cmp
subl
push
test
fildll
jg
jne
add
dec
addr16
test
adc
test
stos
inc
cli
cmpsl
sbb
out
lods
mov
mov
push
aam
mov
or
dec
push
mov
mov
sub
movsl
jns
add
insl
insl
ja
call
jb
push
rcrb
xchg
mov
std
rorl
sahf
rol
dec
jmp
cld
out
rcrl
out
push
mov
adc
jns
clc
mov
sahf
addr16
aad
xor
sti
adc
shlb
dec
cli
cmpsb
lea
sub
cmp
cltd
leave
in
or
and
scas
jl
dec
push
loopne
sti
decl
add
pop
addb
rcrb
outsl
dec
scas
or
and
loopne
cli
and
mov
fmull
fiaddl
stc
rcr
shl
dec
call
aas
xor
fwait
shrb
adc
pop
jp
dec
xchg
push
lcall
fdivs
sti
jo
int3
jnp
cmp
sbb
movsb
cmpsl
lock
mov
daa
aaa
ljmp
cmp
mov
mov
cld
pop
cmp
mov
mov
and
jl
adc
and
add
aas
aaa
lods
jmp
in
movntq
out
mov
pop
or
ss
xchg
and
mov
mov
lret
in
push
data16
stos
decb
ljmp
addl
inc
sub
dec
mov
jle
sbb
das
sub
daa
jnp
pop
rcl
orl
or
mov
gs
inc
sbb
pop
xor
popa
fcomps
sbb
in
push
lret
mov
pop
orl
jo
mov
mov
call
imul
outsl
mov
xor
push
add
cmp
notb
pop
mov
test
mov
pop
out
mov
jbe
mov
cmpsl
mov
daa
into
cltd
cmpsl
sub
xchg
xchg
jecxz
into
cltd
inc
push
ja
cwtl
nop
js
push
int
add
cmpsb
popa
call
cmc
add
fwait
divl
adc
adc
int3
xchg
sbb
cwtl
jmp
jo
flds
pop
dec
popa
clc
sbb
loope
sti
std
xchg
jp
aam
addb
je
mov
mov
jp
push
lret
xchg
jns
push
sarl
sub
popf
lods
adc
push
mov
nop
test
lcall
gs
test
mov
xchg
scas
and
fnsave
adc
into
jge
jnp
iret
scas
dec
ljmp
xchg
add
lahf
xor
fs
jbe
aaa
sub
xchg
pusha
in
cmc
or
pop
mov
out
and
xchg
jmp
pop
mov
insl
pop
movsl
enter
in
rcll
jg
inc
test
cmp
sub
jae
xchg
and
gs
xchg
xchg
shrl
fisttpll
sbb
dec
dec
xor
xchg
cmp
lock
pop
shlb
mov
loope
and
adc
test
cmp
idivl
sbb
shlb
lods
xor
adc
push
inc
mov
dec
mov
and
sbb
out
das
pop
push
sbb
cmc
mov
gs
and
dec
std
adc
jns
push
and
clc
iret
push
inc
and
pop
jb
data16
scas
mov
ror
fdivrs
inc
scas
mov
je
cmp
push
mov
mov
cmp
inc
jns
cmp
pop
jbe
sub
adc
pop
scas
pop
nop
or
xchg
ret
sub
rcrb
fstpl
popf
xchg
daa
ja
mov
mov
mov
sahf
pop
xchg
test
xchg
aas
pop
gs
outsb
jns
jnp
push
dec
mov
pop
push
ret
sarb
jno
or
jmp
push
lock
jmp
cli
jnp
jl
inc
leave
push
insl
and
ds
lods
dec
aad
cmpb
cs
lods
mov
mov
rorb
xor
test
arpl
pop
mov
aam
xchg
jb
jo
xor
adc
test
imul
mov
jnp
mov
fcomps
je
inc
bound
xchg
pop
out
xor
call
repnz
inc
int3
xchg
push
mov
fidivrs
adc
fnstsw
in
or
push
subb
adc
cli
rclb
mov
mov
jbe
scas
hlt
fwait
cmp
jmp
inc
imul
stos
stc
push
es
mov
xor
fwait
sub
adc
add
dec
mov
mov
data16
adc
xchg
ljmp
dec
ss
add
jmp
jmp
adc
dec
scas
ja
push
call
sbb
mov
in
pushf
ja
stos
xchg
pop
mov
cmp
mov
push
inc
mov
mov
jb
loop
mov
and
lods
fdivl
loop
mov
jmp
stc
loope
inc
inc
xchg
and
mov
xchg
add
xchg
cmp
int
repz
pop
cltd
mov
dec
arpl
les
xchg
daa
jecxz
stos
adc
hlt
xchg
mov
jnp
add
pusha
dec
in
pop
xlat
pop
mov
xor
imul
scas
fidivl
xor
add
push
mov
data16
pop
mov
jo
push
xlat
cmp
mov
loop
jge
mov
ret
arpl
movsb
std
xor
pop
fisubs
sbb
xchg
or
popf
adc
pop
std
jg
popa
push
fldl
xchg
pop
movsb
ss
and
mull
test
dec
mov
rcrb
test
movsl
sbb
xlat
imul
std
ja
or
mov
out
or
cmp
loope
and
mov
cld
sti
jb
out
xchg
loope
hlt
ret
out
adc
nop
fcmovbe
jno
mov
mov
les
rorb
xchg
xchg
jns
jge
out
add
pop
adc
stc
mov
xchg
adc
sub
push
xchg
lret
adc
add
lcall
or
add
scas
jno
mov
mov
je
bound
push
pop
adc
dec
jb
add
push
pop
cld
sahf
fwait
and
mov
outsl
test
xchg
cli
mov
add
ljmp
mov
loopne
inc
test
mov
fiaddl
pop
mov
xor
pop
lcall
jg
adc
repz
pop
testl
pop
and
adc
pusha
push
data16
mov
imul
pusha
pop
dec
mov
add
and
mov
cmp
sbb
cld
mov
cmp
ret
jge
aaa
int3
aad
mov
es
loop
movsl
lods
pusha
sub
insl
jmp
outsl
out
jl
loope
or
enter
push
sub
les
ja
add
scas
int
push
xchg
mov
and
dec
dec
xchg
fstl
mov
cmp
imul
fsts
dec
dec
and
inc
xor
lret
sahf
push
into
jns
ds
jmp
shrl
pop
test
xorl
sarb
icebp
mov
in
cmpsb
in
adc
std
mov
pop
sub
or
aad
lea
pop
jmp
add
stc
das
sbbl
leave
pop
inc
lods
das
js
mov
insl
or
mov
xchg
adc
arpl
loop
movb
movb
outsb
out
adc
loope
pop
and
xor
jecxz
stc
dec
shlb
cmp
xlat
gs
and
ja
mov
mov
push
fcom
sti
cmpsl
fdiv
dec
inc
scas
jmp
fucomip
or
mov
jb
lahf
daa
lds
repz
dec
arpl
jae
xor
dec
cmpsb
push
call
rolb
pop
and
pop
push
dec
adc
inc
data16
and
sarb
cmpsl
lahf
cmpsb
lock
mov
bound
dec
mov
add
jne
scas
push
jg
out
leave
mov
jmp
mov
adc
add
pop
jb
les
fldt
cmc
cmp
iret
push
loopne
fadd
out
dec
andb
ja
sbb
push
push
fadds
ret
mov
add
popa
xor
pop
push
add
inc
mov
iret
addr16
repnz
rcr
nop
push
add
sub
sub
mov
repnz
repnz
icebp
sbb
out
cli
and
sub
dec
int
cltd
xchg
xchg
xor
mov
sub
dec
add
popf
push
dec
cmp
popa
mov
jmp
hlt
into
cli
sub
lods
daa
ds
test
dec
or
mov
push
cltd
gs
sbb
rorb
iret
adc
sub
pop
movsl
cs
bound
and
or
movsl
push
mov
lds
sbb
icebp
movsb
iret
sti
pop
bound
push
push
fnstcw
mov
xor
std
dec
loop
sub
mov
xchg
mov
push
adc
jnp
cli
fxtract
aad
xor
xchg
das
xor
sti
xchg
aam
sahf
cmpsb
je
mov
imul
or
cmp
pusha
add
mov
and
add
push
lret
pop
push
push
inc
daa
scas
ret
push
and
add
das
cmpxchg
movsl
mov
jmp
push
testl
xor
fincstp
test
xchg
fisttpll
lret
mov
pop
mov
jge
mov
dec
inc
js
repnz
or
inc
fisttpll
mov
testb
rorb
out
dec
jmp
std
vmwrite
lcall
jmp
loope
popa
add
adc
and
adc
in
lret
xchg
enter
add
dec
pushf
es
and
mov
and
test
and
cltd
lahf
lea
loope
mov
jle
push
lods
mov
fcmovne
pushf
imul
jae
nop
sbb
sub
loop
xor
decb
mov
pop
es
push
mov
inc
lret
lcall
je
aaa
stos
cltd
adc
cmc
dec
jno
push
xor
cmpsl
pop
mov
sub
gs
xchg
mov
out
push
es
pushf
jb
fcoml
add
shrl
adc
dec
and
jno
out
mov
jb
movsl
sti
adc
mov
xchg
xchg
xchg
adc
push
sti
enter
cmp
shr
and
int3
jmp
lods
imul
cltd
ja
sub
add
xlat
jg
cmpsl
xchg
adc
outsl
push
movsl
lret
enter
out
lahf
push
addb
pusha
mov
jmp
mov
mov
ljmp
fstl
and
adc
jmp
cmp
sub
pusha
in
cmp
rcll
mov
arpl
xchg
ja
outsb
inc
or
dec
pop
push
subl
inc
loope
adc
lret
and
push
jb
xchg
add
mov
cli
xlat
xchg
sub
sbb
mov
scas
repz
or
xchg
nop
rcll
outsl
das
movsl
cmp
cmpsb
in
lods
ret
cltd
mov
push
lahf
into
sub
out
sbb
xor
cli
addr16
jecxz
push
fildll
rcrb
lods
mov
in
mov
sub
inc
call
mov
mov
jno
imul
mov
mov
pop
rcrb
stos
fstl
xchg
push
cmp
daa
dec
fnsave
or
loope
xchg
scas
dec
movsb
mov
xlat
not
add
mov
test
mov
dec
arpl
add
xor
adc
sbb
cmp
cmpsb
cmp
cmpsb
jmp
and
fwait
mov
jae
insb
push
or
adc
jae
les
jecxz
cmpsl
mov
cmpsl
adc
sbb
lcall
and
in
push
hlt
or
jo
stos
lods
mov
push
aaa
or
movsl
cmc
jle
jns
btc
or
insb
dec
shrl
sti
dec
mov
push
mov
add
jb
jle
push
insb
sub
stos
into
out
sti
add
mov
mov
jle
mov
imul
scas
push
aam
inc
call
jge
in
adc
jo
push
mov
sub
addl
cs
mov
dec
sub
add
mov
mov
fmuls
hlt
ljmp
pop
add
xor
imul
xchg
into
xchg
xor
or
cmc
adcl
adc
mov
jg
and
push
jae
sub
ds
insb
inc
jnp
mov
mov
pop
out
sbb
js
xor
call
jp
fidivl
clc
inc
cmp
cwtl
pop
ljmp
sbb
pop
in
fdivl
scas
jne
cmc
push
outsb
xchg
outsl
in
cwtl
cmp
jmp
mov
ljmp
mov
sub
mov
sarb
shl
int3
pushf
dec
loope
or
jmp
loope
nop
lret
sti
sbbl
in
jp
add
cmpsl
mov
cmp
add
cmp
aaa
adc
jne
loop
fldenv
out
push
cltd
leave
out
mov
repnz
xor
cld
in
scas
mov
mov
stos
inc
pop
inc
inc
aad
inc
js
mov
iret
pop
stc
adc
xor
ljmp
jl
in
adc
loop
sti
cmp
or
sar
pop
push
mov
lea
ret
pop
xchg
xor
int3
inc
rclb
inc
jo
ret
lods
mov
or
push
stc
fisubrs
mov
or
mov
out
dec
xchg
bound
xchg
fcoml
cmp
cmpsl
test
notl
cmp
cmp
scas
mov
andb
es
add
dec
andb
or
mov
leave
rcr
aam
lea
pop
xor
fsubrl
pop
xchg
movsl
cmc
test
inc
pop
mov
aas
data16
inc
test
push
call
sbb
push
add
push
lahf
int
sub
mov
jp
nop
mov
or
cmp
jnp
insl
add
cld
push
mov
sbb
add
jmp
jno
addr16
adc
push
insl
out
insl
pushl
inc
xor
shlb
mov
outsb
jo
pusha
movsb
testl
data16
mov
push
gs
ds
sbb
adc
lahf
mov
and
subb
adc
aam
repz
int
in
pop
ror
mov
cmp
leave
loopne
mov
xchg
sbb
outsl
push
rcll
fsub
scas
xor
imul
inc
push
add
sbb
addr16
lcall
loope
aas
cltd
push
push
data16
rcrb
mov
xchg
fidivrl
push
sbb
push
arpl
mov
movsl
add
mov
popf
sti
jo
xchg
je
sbb
cmpsb
pop
cli
and
hlt
and
cmp
std
dec
sti
jno
mul
pop
in
mov
xor
mov
mov
fldcw
jno
rorl
jg
mov
and
lcall
add
movsl
pop
ret
push
popa
or
add
push
stos
in
pop
enter
lock
shl
gs
inc
xchg
sub
push
loop
rclb
bound
cmpsb
or
adc
lahf
inc
adc
fadds
dec
inc
insl
sarb
test
add
rolb
insb
push
inc
cmp
ret
fs
test
jb
repz
scas
mov
arpl
ror
mov
sub
movsb
sbb
sahf
cltd
and
lods
lods
imul
imul
add
arpl
push
mov
adc
adc
icebp
jg
out
repz
in
loope
mov
clc
int3
imul
push
push
adcb
lcall
ja
xchg
stc
add
sarb
and
aas
test
dec
bound
xor
shlb
jno
inc
enter
subb
jle
and
xchg
loop
or
popa
outsb
test
iret
and
lods
sbb
nop
in
incb
cltd
push
sbb
arpl
jecxz
idivb
stos
add
jg
pop
add
xchg
popa
pop
mov
jns
insb
ja
das
orb
push
pop
adc
cld
sahf
or
pop
inc
lea
test
cmp
loopne
or
inc
jle
lock
sub
dec
pop
adc
or
fdivs
fidivrl
sbb
movsl
test
std
aaa
mov
push
cmpsl
insl
jle
das
cltd
test
jecxz
push
xor
movl
out
jl
and
cmp
cwtl
jnp
jno
icebp
push
out
pop
pushf
ds
lret
mov
repz
lcall
cld
mov
dec
popa
adc
cmp
pop
jne
adc
icebp
cmpsb
sbb
mov
fdiv
icebp
imul
pop
das
jle
dec
push
xor
cmc
pushf
adc
outsl
aad
aad
cli
pop
add
xor
sub
fst
cmp
loope
xrelease
cmp
ret
adcl
out
xor
xchg
mov
xchg
inc
outsl
mov
jg
loop
outsl
outsl
pop
dec
sbb
and
test
add
jl
mov
cmp
jns
cli
push
popa
jl
fisttpll
orl
sub
fstps
add
pop
test
dec
gs
ficompl
dec
xor
jp
or
dec
adc
cmp
orl
testb
or
mov
cmc
mov
inc
test
jae
out
cld
xor
jns
pushw
movsb
rorb
in
or
imulb
gs
movl
mov
std
push
mov
jg
dec
loop
mov
adcb
push
jl
add
push
cmpsl
loop
in
dec
fsubs
cli
adc
repz
xor
push
dec
cmp
mov
loope
nop
cmp
inc
pop
ficoml
mov
inc
test
or
pop
sbb
pop
add
mov
js
loope
sbb
mov
cmpsl
push
jl
jne
xchg
call
sbb
dec
and
mov
enterw
pop
into
jae
cld
loope
into
rolb
sar
adc
mov
mov
jmp
arpl
mov
jp
mov
push
and
cmp
pusha
loop
or
stc
inc
cmc
inc
cmp
ret
divb
test
mov
push
inc
clc
in
inc
pop
das
cmpsb
cwtl
pop
mov
js
jge
xor
mov
js
ret
pop
pop
daa
or
xor
adc
or
js
imul
aad
shll
sbb
jbe
sar
lcall
xor
mov
inc
mov
stos
mov
adc
mov
pusha
ljmp
sub
scas
lcall
call
scas
jp
xchg
mov
gs
mov
lcall
cmp
loope
pop
jne
aam
mov
inc
std
fcompl
jb
shl
jno
xchg
cmp
push
jo
in
aad
dec
inc
mov
jg
push
enter
inc
sbb
jmp
nop
or
lret
repnz
push
sbb
jae
mov
fisubs
pop
filds
int
gs
cwtl
stos
sub
dec
in
popa
std
cmp
jbe
enter
out
sti
sub
in
push
jae
cs
cmc
pop
mov
cmpsb
imul
jmp
inc
jl
dec
pop
push
lods
sti
jns
cmp
data16
jns
xor
ja,pt
pop
pop
divl
mov
stos
icebp
sub
adc
or
mov
xchg
jno
in
cwtl
push
pop
insl
sar
popf
outsl
out
sub
jg
movsl
add
aas
pusha
mov
push
push
subl
inc
push
fs
data16
adc
dec
call
push
rcr
jecxz
mov
lahf
cmp
pop
cmpsb
lret
popf
pop
ss
dec
pop
flds
scas
inc
jg
in
ss
iret
adc
int
dec
jl
outsb
jbe
add
pop
inc
in
mov
stos
iret
push
cmpsb
adc
scas
cmpsl
adc
pop
and
pop
pop
pop
cld
mov
mov
cmp
aaa
aad
mov
add
pop
mov
jbe
bound
jge
call
sbb
mov
cmpsb
lods
pop
ss
push
or
int
in
push
xchg
outsb
adc
push
push
imul
pop
pusha
nop
cwtl
loop
jno
xor
inc
popf
loope
mov
xchg
in
mov
dec
popf
jle
dec
fistpll
cwtl
mov
and
imul
pop
je
or
cmp
dec
cmpsb
push
jge
cmp
inc
adc
cli
ret
ds
dec
and
fadd
loop
pop
xor
fadd
jns
pop
mov
aam
loop
fs
cmp
or
cltd
add
mov
rorb
test
cmpb
icebp
movsb
jmp
hlt
shrl
jne
cli
dec
jae
outsb
pop
repz
pop
mov
or
aam
push
pushf
shll
cli
pop
push
out
ljmp
jmp
jb
sbb
hlt
mov
icebp
int
pop
jg
rorl
mov
ds
inc
insl
repnz
in
cltd
sahf
les
inc
outsb
dec
lret
push
and
in
jo
leave
sbb
mov
and
sbb
dec
adc
loope
shrb
mov
inc
mov
sub
js
push
push
gs
mov
movsb
mov
inc
jo
out
ljmp
add
sti
mov
adc
mov
outsb
mov
pop
paddb
int3
insb
dec
pusha
pop
leave
test
out
adc
push
inc
out
xchg
mov
dec
nop
mov
pop
cmp
daa
sub
mov
xor
cmp
movsl
cld
mov
sbb
cld
dec
push
loopne
enter
jno
into
and
dec
adc
sbb
pop
aaa
pop
mov
push
call
mov
fs
jns
push
js
or
push
xchg
sbb
push
or
arpl
imul
mov
decb
mov
ss
leave
inc
stos
imul
fsubrp
add
loopne
pop
xchg
dec
dec
leave
sbb
aad
clc
sarl
or
pop
pop
fdivr
pop
pop
test
pop
cmp
pop
jecxz
push
in
push
out
and
dec
test
pop
cmp
orb
sbb
jecxz
push
dec
pop
pop
inc
outsb
xchg
sbb
nop
push
mov
pop
push
pop
out
aaa
enter
cmp
rol
popl
iret
push
jae
dec
pop
lcall
adc
inc
and
scas
inc
cmp
in
dec
cmp
nop
clc
jo
and
jbe
and
es
sbb
int
fs
sub
push
mulb
add
xchg
int3
mov
jns
xchg
or
hlt
dec
scas
in
inc
fdivr
and
sarl
jmp
or
inc
add
cmp
jb
iret
je
movsl
pop
push
jmp
mov
outsb
and
in
or
jmp
push
pop
jmp
idivb
or
sub
and
fwait
gs
cmp
cmp
mov
movsl
bound
mov
mov
stos
push
fmuls
std
fmull
imul
push
int
mov
inc
in
xchg
imul
jl
mov
add
dec
xchg
imul
xchg
ljmp
in
ja
inc
adc
mov
push
pop
icebp
xorb
mov
rcr
mov
gs
cld
sti
adc
pop
lret
push
test
cld
lods
jns
lret
gs
test
push
out
push
rolb
clc
cmpsb
sti
nop
cmp
jbe
xchg
cmpsl
adc
adc
jl
shlb
insb
xchg
in
cmpl
daa
scas
repz
pop
pop
pop
mov
mov
mov
nop
add
mov
lods
test
or
shlb
std
loop
outsb
sbb
inc
pop
push
aad
hlt
daa
jbe
sub
xchg
rcll
and
fsubr
cmp
push
mov
call
inc
xchg
inc
or
add
mov
inc
rorb
mov
sub
jg
outsl
das
push
or
popl
test
mov
inc
add
push
push
ret
mov
outsl
and
jne
push
pushf
mov
adc
jp
dec
xchg
xchg
lods
or
mov
fxtract
mov
outsb
dec
dec
sahf
out
and
xchg
add
shll
into
sti
gs
cli
dec
rolb
repz
mov
mov
iret
and
jle
fwait
xchg
pop
sub
cmp
ror
sbb
pusha
aas
scas
aaa
ljmp
outsl
add
push
push
xor
hlt
cmp
xchg
inc
cmp
and
sub
pop
and
adc
jb
gs
dec
push
lods
rorb
aas
shll
test
test
sub
out
dec
inc
pop
and
scas
arpl
rol
inc
jle
xchg
mov
push
adc
xchg
mov
add
fadds
jns
std
and
std
mov
lret
adc
xor
mov
jns
xchg
ss
enter
cmp
xorl
push
push
rolb
jp
xchg
mov
shlb
cmp
mov
js
lock
lret
dec
sub
jae
insb
lahf
dec
ret
int3
scas
lds
sbb
rcrl
ds
ja
cltd
sahf
hlt
push
xor
sub
adc
dec
clc
repz
dec
push
inc
out
pop
add
push
mov
mov
enter
mov
jno
or
pusha
push
cmp
and
pop
fildll
sub
imul
push
jecxz
push
iret
inc
xor
bound
icebp
lds
outsl
push
loop
test
xor
inc
loopne
scas
jl
decl
fcom
sbb
jbe
and
mov
or
and
or
cmpl
jnp
arpl
push
mov
shl
ds
cmpb
mov
adc
pop
dec
mov
xchg
sbb
dec
shrb
cltd
xchg
push
in
imul
loop
sbb
mov
hlt
sahf
in
adc
or
outsb
imul
push
cmp
es
loop
sbb
rcl
lods
sub
add
outsl
lds
mov
scas
in
push
movsb
cmp
js
in
mov
jge
movsbl
scas
jae
adcl
adc
repnz
jno
mov
xor
xor
push
xchg
or
mov
mov
insb
mov
std
cs
jmp
push
scas
dec
jmp
xchg
dec
dec
sub
sarb
imul
pop
xchg
pop
sbbl
push
cli
lret
sub
out
out
pushf
mov
sub
adc
sub
inc
dec
xor
cmp
dec
add
jne
dec
ja
sub
jle
fsubs
leave
arpl
mov
dec
xor
fsts
cltd
xor
aaa
inc
lahf
rol
cmpsl
notb
cs
pop
dec
sbb
mov
adc
arpl
shl
jno
jne
sub
cld
ds
xchg
lahf
pop
jne
orb
dec
or
pushf
lcall
or
mov
or
dec
xlat
rolb
aaa
mov
addb
dec
fdivs
xchg
ret
cmp
jle
or
daa
inc
mov
sahf
and
movsl
loop
lods
jnp
jns
and
or
jecxz
xchg
mov
fcomi
mov
andl
inc
rcr
cltd
mov
lods
das
inc
sbb
nop
xchg
add
and
mov
cmp
fcomip
and
imul
test
int
bound
mov
rol
std
add
je
adc
leave
push
add
shll
aam
cmc
sti
dec
mov
fidivl
adc
imul
ljmp
mov
iret
pop
loop
push
inc
adc
fcoms
arpl
rolb
testl
lahf
push
push
lcall
jle
aad
push
sarl
jmp
mov
filds
cmpsb
mov
and
sub
cli
pusha
jmp
in
lcall
mov
mov
jbe
mov
push
sub
fisttpll
sbb
dec
sbb
int
cld
shll
mov
das
in
cmc
xchg
sub
lahf
cmp
imul
in
cmp
sub
xlat
cmp
mov
dec
jge
shrl
imul
aaa
xchg
test
jg
daa
lock
mov
adc
or
push
mov
in
mov
mov
sbb
dec
outsb
sub
push
stc
jg
xchg
nop
sbb
aas
mov
rol
test
pop
add
aad
sbb
mov
out
push
addr16
pop
xchg
outsb
mov
cmp
ja
fiaddl
cmc
lods
popa
mov
lcall
cli
mov
lock
adc
push
push
sahf
mov
add
sbb
test
lahf
stos
ljmp
push
es
xor
repz
fisttps
inc
lcall
add
mov
push
pop
sbb
gs
jno
add
sub
or
rcrb
loopne
sahf
push
adc
test
mov
dec
dec
cld
mov
aad
xlat
xchg
jnp
push
push
in
jae
mov
xchg
or
sbb
adc
fcompl
push
push
insb
fcompl
mov
sub
sbb
std
arpl
add
cmp
push
mov
loopne
jo
sub
lock
adc
push
mov
je
inc
mov
sti
es
gs
cmp
and
mov
and
cmpsb
mov
movsl
add
rcrb
testl
ljmp
sahf
nopl
aaa
xor
lret
fwait
insb
rcr
ja
mov
mov
jg
rolb
dec
mov
inc
add
imul
lahf
mov
push
lcall
je
scas
iret
add
cmp
xchg
andb
sub
pop
or
sbb
mov
mov
jp
jno
mov
or
cmp
mov
jbe
fbld
xchg
xchg
rorl
push
in
mov
fwait
lcall
push
aas
rorb
push
or
mov
pop
movsl
sbb
in
mov
lods
and
or
adc
int
loopne
or
into
xor
js
insb
jns
jl
add
jmp
cmpsb
and
cmp
jne
pop
jmp
scas
mov
and
xchg
push
or
sbb
pushf
dec
or
rcrl
stos
mov
je
jbe
or
in
cwtl
imul
addr16
ficomps
jae
cli
pusha
and
hlt
mov
jp
lret
add
xor
dec
mov
pusha
enter
sub
pop
arpl
xorb
jbe
fmull
ja
jl
in
cmpsb
popf
pop
out
ds
mov
sub
fs
pop
jg
out
cmp
adc
or
cmp
pminsw
rcrb
enter
sti
mov
stc
mov
pop
jmp
lret
mov
mov
push
push
pop
sub
jp
shrl
xchg
fcom
sahf
ficomps
mov
sbb
mov
pop
lcall
mov
int
cs
inc
stos
jp
mov
lret
fbld
rorb
xor
push
or
notb
fiaddl
imul
out
shlb
out
pop
outsl
mov
mov
mov
adcl
jmp
push
int
pop
xor
daa
in
lds
lcall
data16
xlat
cmp
add
hlt
in
xlat
xor
push
xchg
lods
repnz
lock
sub
sub
mull
ss
je
mov
inc
mov
mov
xchg
push
pop
mov
lsl
lods
and
fucomp
mov
loope
inc
fdivs
setns
xor
stos
pop
push
and
jo
bound
jbe
ss
push
add
loop
cmp
out
jae
stc
jl
inc
fiadds
mov
fdivrs
hlt
push
xlat
fadds
ret
nop
mov
dec
xor
lahf
in
jb
xor
repnz
dec
mov
jg
pop
push
test
or
and
push
lock
lock
je
mov
inc
sbb
test
pop
pop
inc
jge
mov
push
xchg
sti
mov
sub
outsb
iret
stos
cmp
aad
adc
test
in
jnp
cmp
sub
lcall
test
rclb
inc
insb
xchg
mov
dec
xchg
popa
shlb
aad
jo
test
cmp
push
jg
jnp
shlb
jg
cmp
out
shll
push
inc
fldenv
movsl
mov
jge
and
pusha
cli
xor
pusha
filds
fcoms
cld
repnz
cli
xchg
push
adc
lock
rcr
test
push
sbb
hlt
mov
sarl
cmp
mov
xchg
mov
xor
and
mov
out
or
insb
mov
dec
push
mov
inc
push
mov
xchg
pop
add
popa
xchg
dec
sub
les
push
sarl
aam
sbbb
in
dec
adc
in
jnp
or
jo
adc
imul
dec
lcall
mov
cmp
cmpsb
add
jg
ror
out
adc
sbb
insl
out
push
add
push
stos
jne
and
adc
aad
or
aaa
in
repnz
ret
cmpsb
jnp
mov
adc
sbb
cmp
dec
dec
sbb
adc
dec
ret
mov
jno
arpl
idiv
xchg
mov
cwtl
aas
lret
push
lret
std
sar
popa
mov
mov
or
repnz
enter
add
pop
fcomps
lahf
and
aaa
jnp
pop
dec
lahf
lret
jge
cmpsb
popf
jge
jp
ja
jno
ss
mov
push
lret
lds
mov
fisubl
or
xlat
dec
push
mov
sub
frstor
leave
fs
in
ss
or
ss
xor
outsb
mov
sub
popa
movb
jno
cmpsb
pop
cmp
cmp
xchg
sub
mov
cmp
lret
imul
mov
mov
mov
stos
sbb
and
ja
dec
mov
out
decb
sub
test
jmp
fiaddl
pusha
outsl
dec
pop
sbb
cli
arpl
enter
mov
js
push
sbb
loop
dec
jnp
int3
pop
pop
stos
jle
jge
icebp
sti
ret
cltd
sti
lret
push
repz
adc
adc
rorb
pop
gs
push
xchg
jmp
push
pop
inc
pop
or
sub
lret
mov
test
cli
lds
pop
inc
adc
std
pop
jg
adc
inc
xchg
stos
mov
dec
cwtl
sbb
mov
das
adc
aaa
dec
out
in
push
fcmovbe
ds
fsubs
inc
sbb
jp
loop
rcr
jmp
fwait
pop
jns
mov
xchg
mov
cmc
inc
insl
jmp
cld
je
mov
fadds
xchg
cmc
std
cmp
dec
sti
pushf
cld
xchg
adc
lahf
push
es
dec
sbb
or
inc
xor
dec
mov
std
dec
imull
out
out
xchg
jae
mov
popf
push
nop
les
or
clc
pop
movsl
sbb
cli
stos
or
enter
sti
and
loopne
pop
mov
arpl
arpl
sub
jp
cmp
es
nop
lods
or
and
shlb
rclb
mov
pop
test
push
in
sub
cmp
std
adcb
pop
dec
cmp
shrb
or
aaa
cmp
lds
jbe
es
rcrb
push
add
xchg
jns
scas
push
movsb
add
mov
and
mov
xchg
negl
mov
imul
into
dec
pop
sub
lock
cwtl
into
dec
insl
andl
push
out
xchg
xchg
dec
ljmp
mov
adcl
insb
hlt
fs
mov
mov
fdivrs
mov
mov
aam
stos
shr
jmp
mov
inc
fcmovnu
xchg
popf
scas
fs
sbb
xchg
xor
xchg
or
xchg
cmp
mov
movsl
sbbl
mov
and
je
inc
lea
popf
xchg
dec
pop
mov
aas
fstl
and
not
lock
sub
cli
in
inc
shll
jae
rcrb
pop
shlb
dec
aaa
out
jp
int3
cmp
mov
fiaddl
mov
xorb
dec
jecxz
cld
jae
jb
push
outsl
sbbl
mov
data16
bound
mov
xlat
call
adc
fidivl
loope
ret
ds
mov
cld
xor
adc
leave
pop
scas
pop
add
out
pop
clc
ja
addr16
imul
mov
inc
and
mov
es
fwait
adc
mov
xchg
sub
aam
rorl
idivl
out
arpl
and
test
jb
sbb
jp
popf
dec
cltd
lcall
mov
or
sub
arpl
push
pop
iret
mov
pop
xchg
push
lds
mov
out
stos
jae
out
std
cmp
je
or
xchg
aas
inc
je
fcomps
push
fistpl
jmp
fiaddl
cmp
push
adc
pop
adc
std
push
jle
subl
jbe
add
mov
into
lahf
jecxz
push
inc
cmpsl
aas
or
cld
cmp
xlat
and
dec
movsl
sub
cmp
ret
in
ret
fistpll
mov
mov
je
loope
lock
adc
test
sbb
sbb
or
lcall
pop
push
aam
sbb
sub
pop
jno
loopne
imul
lock
movsb
inc
sub
iret
aad
leave
mov
into
xor
jns
nop
sub
mov
jmpw
popa
out
xchg
dec
or
popf
into
dec
lea
ljmp
pop
test
ds
xor
sbb
pop
xchg
mov
outsb
push
push
cmc
pushf
jns
inc
dec
mov
insb
sub
mov
mov
dec
test
sbb
cltd
or
mov
adc
push
rcrl
fwait
outsl
push
add
sub
pop
push
mov
mov
inc
mov
cmp
mov
das
pop
add
dec
xchg
cmp
fwait
iret
inc
mov
jo
add
sbb
cmovge
sbb
xchg
dec
aad
and
and
pop
push
add
in
shlb
mov
adc
xor
jl
cs
int3
adc
cmp
jmp
test
out
fs
pop
sub
test
push
pushf
push
int3
xchg
pop
leave
inc
cmp
cmpsl
add
mov
cli
inc
mov
out
or
sbb
pop
mov
movsb
push
cmpsl
push
out
inc
movsl
cli
test
mov
or
in
pusha
add
cmp
mov
int
xchg
cmpb
mov
int
pop
dec
std
push
and
adc
out
mov
loop
push
mov
pusha
or
ret
pop
out
cmpb
mov
ret
arpl
adc
pop
xchg
and
adc
cltd
leave
adc
lret
cltd
mov
ficomps
icebp
inc
cs
in
and
jne
mov
add
aaa
xor
out
sahf
lahf
movsl
sub
cltd
outsl
aaa
insl
daa
xor
sub
xchg
jmp
leave
or
cwtl
sbb
aaa
popa
sti
insb
add
mov
pop
cs
dec
xchg
int
pop
dec
and
pop
addr16
popf
push
sub
xchg
inc
insl
push
sub
cld
negb
ja
and
jnp
mov
jo
in
icebp
test
cmpsb
pop
lcall
xchg
rcrb
push
int3
add
mov
cmpsl
les
aam
ss
into
aam
mov
jo
movsb
bnd
pushf
ja
inc
push
out
adc
ds
cld
js
lods
cmp
call
cmp
scas
dec
sbb
enterw
stos
jecxz
or
mov
xor
shrl
mov
cmp
cmp
fmuls
push
andb
or
int
aaa
pop
movsl
nop
testl
push
outsb
cs
xchg
mov
lods
out
and
mov
ss
leave
and
not
sub
in
push
xor
subl
js
and
test
lock
sbb
shll
mov
mov
jle
test
je
rep
fcomps
mov
pop
movsb
inc
int
dec
das
es
out
jmp
sub
mov
clc
jae
cmp
movb
scas
add
or
jns
ljmp
into
xchg
lret
jmp
addr16
inc
shlb
mov
aad
out
ljmp
xchg
mov
jge
lea
mov
stos
pop
mov
adc
cmp
dec
push
fcmovbe
leave
adc
shll
lods
mov
out
xchg
sub
rol
mov
popl
push
pusha
fcomp
stos
arpl
fldenv
dec
xchg
xor
popa
sbb
dec
xor
mov
loopne
push
inc
or
mov
lcall
cmp
aam
adc
rolb
arpl
popf
rolb
add
inc
lcall
sub
cmp
rcr
cmp
in
repz
push
icebp
pop
inc
push
xor
mov
lret
xchg
mov
aaa
enter
mulb
or
pop
into
sahf
jmp
and
xchg
scas
mov
and
pop
loope
loop
sbb
pusha
xchg
jb
jb
mov
repz
into
icebp
ds
jno
push
pusha
test
adc
and
and
inc
fldcw
stos
inc
lahf
and
sub
or
pusha
push
sub
xor
out
movsl
adc
hlt
cld
inc
mov
jg
or
test
es
adc
insl
fs
or
xor
into
cmp
jle
jmp
in
mov
pop
push
loop
push
sub
cmp
ficoml
shlb
outsb
jno
cmpsb
rcr
and
push
leave
jnp
dec
call
mov
cmp
in
sbb
leave
push
adc
in
aad
inc
mov
mov
decb
and
mov
in
jnp
sub
push
inc
pop
mov
mov
mov
jno
lods
in
inc
cmp
dec
xlat
out
inc
mov
jnp
sbb
cwtl
in
xchg
sub
mov
pop
stos
jl
rolb
in
sbb
jnp
mov
lods
jecxz
inc
pusha
jl
jmp
adc
ds
mov
cmp
add
or
out
aam
in
push
xchg
add
lock
lret
pop
loop
lods
das
mov
mov
outsl
jo
test
sub
popa
cmp
push
loop
sub
cmp
xchg
pop
icebp
cli
pop
lea
pop
adc
mov
in
popa
fwait
pop
out
and
je
lcall
add
fwait
push
mov
dec
lret
daa
push
stos
test
out
scas
sub
fisttps
das
mov
test
and
stos
mov
nop
push
xlat
pop
insb
xchg
iret
adc
test
lds
lret
je
mov
xor
movsl
scas
fs
aad
add
out
shlb
xlat
mov
test
fdivrl
xchg
gs
in
adc
insb
scas
jns
pop
loope
fstps
sub
enter
mov
ljmp
aad
lea
push
adc
sbb
stos
fidivrl
jge
and
das
pop
ret
cmp
cmp
xchg
cmp
push
adc
loopne
divl
out
lahf
nop
add
sub
das
push
jle
jnp
xlat
mov
sub
cmp
into
adc
pop
pop
dec
pusha
loop
adc
call
jnp
movsl
arpl
fidivrs
inc
repz
add
ret
mov
outsl
repz
cmpsl
andb
les
test
jo
mov
clc
mov
lods
lea
lock
cmp
fcoms
mov
lock
jns
mov
xor
dec
and
mov
cmp
push
adc
sahf
and
add
push
xor
repz
ja
cmpl
push
pop
inc
cmp
inc
sbb
test
in
je
shl
pop
popa
dec
cwtl
xchg
xchg
shlb
icebp
addl
sbb
mov
jecxz
xchg
aam
gs
xor
cmp
insb
mov
loopne
or
sub
mov
lods
adcl
flds
iret
daa
test
stos
mov
loop
jmp
loope
decl
mov
jp
fcmovb
jno
jns
dec
pop
roll
ret
cmpsb
xchg
int
inc
cmp
sbb
scas
dec
sti
test
add
loop
jge
dec
lock
cwtl
xchg
cmp
cli
jp
mov
and
xor
lods
fdiv
cwtl
ljmp
es
xchg
jmp
imul
iret
cmpsl
lcall
jecxz
idivl
mov
scas
cld
inc
in
fbld
xchg
arpl
jns
in
ret
sub
adc
int3
in
pop
pusha
dec
cmp
inc
shlb
aam
and
fidivrs
ja
shr
xor
insb
cwtl
and
mov
pushf
stc
cmp
adc
cmpsl
lods
mov
int3
scas
int
insb
mov
or
mov
mov
add
xor
lcall
in
dec
jo
out
jg
jp
xchg
insb
dec
inc
mov
int3
repz
mov
adc
test
lret
sti
xor
jmp
dec
push
mov
mov
xor
int3
xchg
sar
pusha
testl
and
out
jl
mov
out
sub
mov
xchg
mov
add
scas
sub
mov
dec
mov
int
and
in
lea
repz
inc
cli
mov
into
insl
dec
push
xor
xor
sub
int3
aam
ret
mov
adc
and
arpl
test
push
push
and
loop
jl
mov
xchg
mov
cli
and
push
xchg
jle
xchg
orb
rcrb
lcall
jl
repnz
dec
fcompl
inc
pusha
lret
inc
sbb
inc
mov
out
mov
sub
pop
test
pop
jb
lds
scas
mov
cmpxchg
lds
repnz
ficoml
inc
and
jns
cmp
out
jnp
or
dec
add
in
jg
xor
and
cmpsl
mov
jb
mov
pop
sbbb
sbb
or
repnz
cmpb
inc
pop
and
dec
cmp
adc
xchg
inc
push
sub
xchg
std
mov
insb
pop
test
int
push
sbb
cwtl
stos
loope
jbe
rclb
pop
add
xchg
cmpsb
daa
cli
aam
pop
mov
in
mov
cwtl
fadds
mov
les
scas
push
aam
fsubrl
inc
enter
and
push
or
dec
adc
adc
stc
xor
mov
pushf
push
pop
mov
push
test
mov
je
hlt
je
sbb
pop
pop
pop
jne
xor
rolb
imul
and
mov
pusha
addl
out
xchg
shrb
push
arpl
mull
sar
inc
scas
sub
les
stos
and
sub
add
aam
xor
lds
push
pop
adc
mov
out
jno
jae
movsl
sub
mov
loopne
js
mov
nop
int3
loope
ret
lock
cli
dec
es
stos
sbbb
cmpsl
loope
mov
push
mov
loop
sbb
rcrl
inc
jno
inc
xor
lcall
and
lock
data16
sbb
loop
sbb
cmc
test
test
xchg
divl
lahf
insb
into
adc
or
mov
shlb
xchg
fsubl
ds
sarb
add
dec
mov
inc
push
mov
stos
ja
scas
inc
add
aaa
popa
adc
cmp
mov
incl
pop
shrl
mov
ljmp
jnp
and
outsl
and
jge
repz
pop
pop
adc
repnz
push
stos
mov
xchg
jnp
pop
scas
mov
add
stos
sub
ret
push
adc
xor
ja
jns
jecxz
xor
inc
mov
aam
mov
lods
mov
es
out
and
lret
cltd
adc
add
sbb
ds
push
mov
push
jmp
popf
pop
add
add
jo
jmp
adc
mov
call
popa
addr16
dec
les
leave
jne
jb
scas
xchg
hlt
xor
enter
fistl
mov
jecxz
jp
cmp
aaa
es
imul
aad
jbe
bound
scas
mov
mov
mov
push
lea
mov
mov
or
repz
mov
mov
mov
mov
xchg
pushf
add
dec
jge
les
in
jg
mov
mov
adc
gs
std
lcall
jmp
push
xorl
jle
nop
into
dec
adc
xchg
in
pop
insb
ret
dec
pop
es
push
gs
insb
js
dec
repnz
aaa
lea
mov
inc
inc
and
jo
mov
inc
fbstp
mov
jo
mov
jb
lret
popf
lea
aam
sti
and
packsswb
outsb
scas
into
cli
push
mov
test
fmull
pop
ss
repnz
pop
movsb
mov
xchg
cli
movsb
je
mov
push
adc
adc
mov
arpl
mov
hlt
cmpl
pop
cmp
jns
push
add
push
dec
les
shrl
xor
jp
ret
cmp
mov
or
lret
mov
push
mov
cmpsb
dec
lods
push
xlat
ret
pop
sti
into
js
pop
int
push
push
xor
in
scas
inc
push
jno
and
loop
scas
repnz
test
push
loopne
add
shlb
jmp
sbb
sbb
push
dec
xchg
xor
ficomps
jne
add
pop
jnp
push
dec
cli
lods
jge
nop
push
adc
jl
ljmp
lock
ficoms
out
outsb
stc
rcll
sbb
fs
cs
add
sbb
rolb
shlb
or
popf
ljmp
cmpsb
mov
xor
rcll
movsb
xchg
pop
and
jmp
test
repz
xchg
daa
sbb
cs
lds
adc
out
xchg
push
clc
rorb
pusha
sub
sti
cwtl
jne
aaa
cmpsb
mov
jns
jle
aaa
push
jns
push
fdiv
inc
stos
fcoml
mov
andl
test
xchg
inc
pop
mov
add
sub
les
adc
cltd
inc
aaa
mov
iret
pop
ljmp
movl
scas
popa
and
dec
xor
inc
mov
cmp
imul
sti
mov
cmp
aaa
lahf
adc
mov
sbb
and
loop
dec
push
repz
out
pop
ret
push
push
into
sti
test
dec
lcall
mov
inc
or
lret
jo
xor
push
or
jns
ret
sub
push
mov
and
sub
lret
test
ret
shr
test
mov
cmp
in
jb
aad
jbe
push
pop
sub
jne
xor
xchg
dec
fs
jmp
push
into
shll
cmpsl
cmp
mov
out
xchg
jne
jl
mov
and
test
sub
mov
pusha
fistps
pop
sub
lea
dec
pop
jno
mov
cmp
jl
push
lock
push
adc
neg
dec
pop
aad
fldenv
xor
push
push
inc
into
pop
fstps
cmc
cmp
jl,pn
inc
pop
jnp
sbb
xor
lods
fwait
sbb
stos
in
aas
mov
insl
stc
movsb
in
xor
adc
ficompl
jnp
cmp
jae
shll
scas
adc
out
mov
outsb
popf
and
mov
fildll
adc
fisttpll
inc
lcall
in
push
fnsave
ficompl
inc
xor
pop
scas
cmp
or
fcompl
fwait
insb
int
dec
mov
xchg
call
sbb
sahf
push
fdiv
mov
jb
adc
xchg
mov
add
jns
movsl
xchg
sub
fcmovnb
negb
push
xchg
push
add
fisubrl
mov
nop
scas
bound
fstpt
in
js
xor
incb
pushf
jl
lcall
adc
push
ret
adc
clc
in
jmp
sbb
inc
add
popa
sbb
xchg
sti
movsl
or
gs
lods
mov
cmp
pop
data16
push
outsl
outsl
inc
loopne
or
sbb
inc
push
mov
and
lea
cmp
das
push
push
out
fsubl
xchg
adcl
rcrl
adc
add
sub
or
int
gs
dec
ficoms
push
mov
cmp
jb
in
pop
adcb
test
mov
inc
adc
pop
in
jns
out
mov
cmp
sbb
mulb
push
cltd
das
pop
loop
mov
test
add
lds
fmuls
into
mov
stc
lds
shrl
shrl
pusha
xchg
sub
aam
fsubr
std
out
add
push
or
fwait
sbb
add
jmp
mov
pop
bound
mov
dec
adc
sub
cwtl
push
mov
cmp
push
sbb
pushf
mov
imul
mov
lret
cmp
mov
daa
cmpb
push
cli
mov
pop
sbb
pop
ret
inc
inc
sbbl
mov
lahf
hlt
inc
movsl
je
and
sahf
into
fldl
fists
in
or
jge
mull
pop
sahf
jp
out
inc
dec
add
xlat
mov
sub
sub
inc
stc
xchg
dec
mov
ja
inc
mov
inc
xchg
push
push
insb
or
out
pop
push
enter
inc
fistl
dec
fadds
aas
jp
xor
loopne
scas
dec
mov
jne
adc
orl
lods
out
mov
jle
dec
pop
mov
fcomp
sar
fsub
jns
fsubrl
scas
sub
rep
imul
ss
xchg
jnp
sahf
loopne
iret
push
lods
lods
xor
js
iret
push
jl
pop
inc
dec
cmp
push
arpl
repnz
rorb
imul
or
mov
or
ret
pop
mov
enter
call
sbb
dec
push
jnp
fs
fcomps
insb
mov
sti
xchg
dec
xchg
jl
cmc
jno
push
dec
icebp
ss
push
xor
divl
pop
aad
mov
gs
inc
in
xor
xor
cs
adc
mov
dec
adc
sbb
fs
jne
ja
scas
scas
mov
outsl
mov
adc
inc
es
cmp
fcomps
test
mov
adc
insl
repz
add
fwait
ret
add
inc
push
mov
mov
iret
cs
push
ret
and
push
je
sbb
xlat
in
or
adc
pop
imul
es
subl
mov
mov
mov
fadds
sub
fnstcw
shlb
sarl
fsubrs
pushf
cmp
xor
sbb
add
andl
enter
out
nop
cmc
push
lcall
stc
cli
out
sub
mov
or
add
jns
enter
dec
lea
jo
insl
out
mov
repz
add
cld
sub
dec
mov
inc
fists
popa
mov
xchg
out
addb
dec
les
in
jmp
outsl
in
mov
or
xchg
mov
cmpsl
in
in
pop
movsb
sub
xchg
lods
adc
test
cmpsb
mov
je
adc
inc
xchg
int
fimuls
mov
push
inc
repnz
clc
cmp
scas
inc
scas
jne
xchg
flds
and
les
inc
xchg
mov
push
xchg
push
push
call
clc
sbb
fbstp
out
nop
shrl
into
call
in
inc
and
xchg
repz
aas
shl
call
push
pop
popf
test
shlb
dec
ss
or
mov
pushf
and
add
xchg
push
out
popf
or
push
insl
jmp
and
es
rcrl
inc
pop
rorb
dec
data16
and
aam
inc
push
inc
push
cltd
sti
adc
jp
xchg
out
leave
insb
or
and
icebp
test
lods
dec
lret
jmp
shrb
mov
in
test
add
shll
ja
pop
sub
repnz
add
dec
dec
push
decl
mov
and
mov
outsb
cmpsb
pop
ljmp
sar
outsl
mov
outsb
jecxz
lahf
adc
inc
shlb
ja
pop
push
jge
ds
jmp
data16
aam
mov
adc
jo
inc
outsl
js
out
les
dec
sbb
and
jne
adc
mov
scas
imul
lea
push
faddl
mov
nop
popa
sbb
icebp
add
jno
xchg
repz
lods
xchg
pop
adc
call
dec
push
mov
push
pop
push
adc
iret
das
cwtd
jl
lea
and
mov
fs
mov
lret
xchg
addb
js
das
or
mov
push
jp
push
add
xchg
das
enter
pop
adc
adc
insb
push
mov
adc
ret
push
aam
cld
arpl
dec
mov
mov
movsb
arpl
lods
testl
clc
pop
sub
mov
or
sub
ljmp
jns
pmuludq
inc
and
push
stos
jp
imul
mov
idivl
adc
adc
adc
or
and
lret
cmp
cmp
pop
mov
mov
loopne
rolb
mov
cmpsl
icebp
adc
push
cmp
stos
xchg
xor
and
inc
and
sbb
idiv
sub
jns
pop
or
jae
jmp
or
sub
stos
jne
lret
mov
pop
xor
addl
into
inc
push
sbb
push
popa
stos
andb
push
lods
inc
js
stos
inc
cli
jns
xchg
add
iret
jae
jmp
xlat
cmpsl
mov
push
ret
data16
imul
repz
imul
movsl
ja
jae
mov
xor
adc
and
or
mov
sbb
lods
clc
loop
mov
and
aaa
sub
rcrb
sbbb
imull
hlt
mov
cmp
adc
test
lock
jae
stos
jecxz
push
inc
mov
and
hlt
add
push
ljmp
subl
test
and
sti
cmp
mov
adc
push
pushf
fdivs
lods
shl
cmp
dec
mov
mov
sbb
pop
xor
imul
ss
pop
stc
fiadds
hlt
mov
repz
frstor
lods
repnz
outsl
or
imull
arpl
sub
ljmp
add
sbb
shrl
fisttps
notb
inc
imul
xchg
or
out
xor
loope
dec
aad
rcll
mov
shll
insl
in
cmp
dec
adc
push
repz
inc
jne
lahf
fistpl
js
adcb
shlb
xchg
xchg
mov
pop
test
push
jne
xchg
cmpsl
add
js
sti
and
test
push
ficoml
call
xchg
push
ljmpw
sahf
push
dec
add
pop
ss
jl
sub
sub
mov
adcl
in
les
and
stc
adc
push
pusha
sbb
mov
addb
inc
push
movsl
test
dec
mov
xchg
adc
and
or
dec
ja
in
sbb
push
cmovnp
imull
mov
and
pop
add
xlat
xorb
fcompl
xor
cmpsl
movups
out
bound
mov
mov
jmp
cmp
sbb
sub
pop
pop
ret
mov
sbb
dec
popf
leave
loopne
loopne
nop
cwtl
adc
pop
repnz
mov
gs
ss
lods
stc
popa
leave
insl
push
movsb
in
loop
mov
stos
inc
hlt
sahf
xor
push
imul
movsb
test
mov
inc
add
roll
xchg
add
leave
inc
sbb
and
xchg
aam
mov
pop
mov
hlt
dec
xor
sbb
xlat
mov
inc
mov
jne
sub
pushf
rolb
int3
out
mov
mov
sub
lret
inc
fdiv
imul
jge
add
jmp
test
js
or
adc
aad
daa
pushf
xor
and
rol
out
fdivl
jg
xor
outsb
sub
jg
cmp
imul
jl
adc
mov
pop
push
fldt
xor
das
insl
nop
mov
pop
pop
cltd
test
sbb
and
nop
test
dec
dec
xor
insl
pop
int
mov
movsl
push
ror
enter
xchg
pushf
loop
dec
mov
xchg
pusha
jae
pop
aad
bound
mov
cmpsb
cmp
cltd
adc
push
xlat
mov
jg
push
sbb
mov
test
add
jge
popa
add
sbb
mov
loope
xchg
clc
test
push
inc
dec
lods
push
add
sub
fsts
push
adc
inc
aaa
out
lods
in
mov
pop
imul
pushf
mov
dec
das
sahf
sub
cmp
pop
push
cmpsl
push
test
fwait
mov
jge
popf
or
adc
test
pushf
cmp
adc
in
inc
dec
or
xor
add
in
inc
cmp
mov
jp
push
stos
in
lea
lret
in
ss
stos
lods
testl
loop
push
test
rorb
mov
ljmp
lds
fbstp
dec
mov
mov
mov
pop
xchg
jne
ljmp
pop
sub
call
inc
out
mov
les
les
sbb
cmp
bound
das
mov
push
xchg
cmp
stc
call
les
dec
xchg
movsb
mov
sbbb
popa
mov
jno
loop
loop
xchg
jge
sub
movsb
in
sbb
gs
sbb
jl
dec
icebp
pop
cmpsl
cmp
push
fcompl
inc
mov
push
sbb
es
jno
add
pop
andl
push
cli
ret
push
lods
sub
sbb
ljmp
mov
dec
sti
or
mov
sbb
dec
mov
lahf
and
fidivrl
or
sarb
or
mov
inc
push
xor
mov
mov
or
mov
pop
movsb
ja
add
adc
lea
lahf
push
sub
loopne
aaa
jle
xchg
add
xchg
int
and
lods
xor
push
fiadds
das
cltd
xchg
pop
pop
out
jmp
mov
ljmp
fwait
dec
loope
loop
shll
mov
aad
add
push
xchg
sbbl
sbb
jp
xor
xchg
or
mull
add
lods
fisttps
sbbb
pop
cmpb
fldt
cli
cmpsb
sbb
scas
push
inc
call
lahf
xchg
push
loope
ret
sbb
inc
jmp
pop
popw
sahf
push
out
jne
fs
call
popl
test
mov
inc
es
popf
pop
cli
push
jecxz
pop
enter
jns
loope
or
or
sar
sub
icebp
leave
mov
mov
add
out
inc
push
mov
pop
mov
xor
or
imul
add
pop
dec
lret
in
jp
xchg
movsl
aad
ret
xor
sub
popa
ja
aad
adc
adcl
outsl
and
roll
std
mov
xchg
idivb
xor
daa
cmp
pop
or
arpl
repnz
cs
or
fistpll
punpckhqdq
cmpsl
xor
sti
jbe
imul
cmpsl
orl
pushf
push
dec
inc
mov
scas
sbb
sub
clc
dec
inc
ds
inc
mov
mov
stos
add
shlb
pop
stos
inc
cmp
pop
lock
dec
scas
fnsave
mov
negb
xchg
stc
repz
cld
int
sub
sahf
aad
repz
int3
fwait
aaa
fldt
adc
pop
cmp
ret
pushf
fistpll
shrl
cmp
test
jbe
push
pop
mov
lret
dec
jmp
lds
test
push
pop
fucompp
rorl
insb
popa
jl
repnz
bound
lret
xchg
out
repz
lds
pop
mov
stos
xchg
cmp
idivb
cld
adc
scas
dec
aas
or
jl
xchg
es
mov
pop
mov
adc
and
insl
cmp
inc
imul
fcoms
and
popa
test
std
hlt
lcall
insl
insl
or
mov
inc
js
inc
popf
loop
jp
inc
fiaddl
ds
and
shrb
sbb
ret
or
and
xor
fld1
push
sbb
addr16
rolb
mov
jl
add
dec
fstp
std
and
pusha
jp
fadd
out
xor
cmp
mov
mov
add
std
xchg
je
in
repz
xchg
lods
sti
cli
data16
xchg
xor
sbbl
adcl
xchg
test
cmp
aam
addr16
ficoml
jne
xchg
je
pop
cld
adc
push
cld
inc
shlb
test
push
cld
movsb
mov
shrb
ficompl
scas
scas
jle
ja
fmull
neg
mov
and
jnp
pop
mov
cmp
inc
sbb
loopne,pt
add
xor
test
int
mov
in
mov
adc
fsts
into
imul
insl
adc
sbb
repnz
pop
sub
fstl
push
push
push
mov
cld
cmp
cli
test
repz
mov
sbb
and
mov
cmpsl
jns
push
sahf
ficoms
ret
mov
sbb
xor
pop
jge
mov
arpl
mov
fbld
ds
add
mov
stc
iret
xchg
xor
in
and
xlat
notb
xchg
pop
push
out
dec
repnz
inc
ret
dec
add
pop
mov
jns
and
sbb
roll
dec
cmpsl
add
adc
addb
iret
mov
inc
sub
fdivs
adc
xlat
fs
and
outsl
out
cs
mov
int
mov
sti
addb
sbb
xchg
fistpl
jno
and
cli
stos
pop
pop
mov
mov
movsb
test
cli
fmuls
dec
or
int3
push
pop
aam
adc
adcb
mov
out
sbb
dec
push
push
jb
mov
in
fstl
ds
in
pop
cmc
xor
mov
sahf
popf
hlt
or
pop
jnp
adc
jo
sar
lea
pop
mov
orb
gs
dec
mov
xchg
loop
pop
push
scas
cmc
xor
outsl
adc
fs
es
stos
out
addr16
inc
push
xchg
lret
dec
jge
jns
in
xchg
xchg
xorl
stos
out
orb
fimuls
sbb
push
fisttps
sarb
arpl
pop
lcall
sbbb
scas
xor
adc
jl
push
cwtl
dec
arpl
fiaddl
fists
sbb
divl
add
inc
adc
int
mov
lock
add
cltd
cli
rclb
push
fwait
xor
sahf
test
inc
scas
mov
pop
mov
push
pusha
js
xchg
in
adc
fsubs
xchg
xchg
add
cmp
cmp
jle
sub
leave
ret
imul
loopne
jne
lea
imull
call
xchg
pop
idiv
jns
add
imul
jo
mov
loopne
sbb
cmpsl
push
ds
movsl
add
in
jmp
inc
pop
sub
mov
fbld
dec
dec
cmp
jo
and
sub
xchg
andl
push
imul
in
out
jl
outsb
fdiv
aad
sahf
insl
or
mov
inc
sbb
xor
xchg
sbb
mov
lcall
decl
std
inc
clc
cmpl
xchg
scas
in
aaa
movb
pop
push
mov
sbb
negl
mov
mov
in
fwait
or
test
mov
clc
xchg
sti
xchg
ficomps
mov
or
sbb
std
jle
cli
les
or
mov
pop
cmpb
ret
xchg
sbb
in
cltd
sbb
std
int3
or
push
scas
std
sti
add
push
popa
imulw
xchg
cmp
in
mov
fcomps
push
xchg
push
jbe
mov
xor
push
or
add
loopne
cli
jge
jmp
mov
jbe
push
push
stos
mov
clc
ret
shr
push
push
sbb
scas
push
call
add
into
mov
mov
mov
jecxz
push
in
add
dec
out
icebp
mov
or
cwtl
pop
scas
push
lock
jmp
mov
xchg
fcomps
fistpll
inc
test
cli
aam
daa
sub
jg
push
loope
xor
xor
jns
mov
jo
sti
pop
push
loope
pop
adc
fcoms
aam
clc
jo
stos
mov
and
cmp
push
jge
imul
jge
cwtl
jecxz
cld
add
add
push
mov
lret
jle
adc
jne
mov
add
push
mov
push
pop
out
sbb
fdivl
jo
mov
cmp
mov
or
sbb
and
imul
rcrb
ds
lea
scas
rcrb
mov
xor
mov
in
sub
and
adc
mov
and
mov
pop
dec
inc
aas
jbe
push
push
imul
mov
and
js
into
sti
cmp
sbb
icebp
push
dec
mov
in
push
dec
ds
and
inc
jmp
xchg
stos
cmc
inc
insl
cmc
sarl
out
test
mov
inc
adc
push
das
mov
lods
xor
or
lahf
lahf
scas
nop
pop
rcrb
rcrb
sub
mov
adc
cs
mov
sbb
mov
outsl
out
mov
aaa
push
mov
pop
addr16
push
ror
or
fisttpl
adc
inc
inc
mov
mov
lahf
xor
pop
pop
aam
sbb
xchg
push
cmc
and
xchg
pop
adc
add
add
inc
xchg
cmp
shrb
or
xor
xlat
dec
ljmp
fiadds
mov
mov
jle
push
lahf
jecxz
dec
or
aas
mov
outsl
push
mov
jns
push
mov
sti
inc
sbb
sub
adc
add
scas
cld
in
cld
or
mov
dec
lds
add
repnz
jp
adc
or
pop
addr16
das
popa
mov
dec
mov
mov
jb
lcall
std
mov
out
sbb
stos
in
shlb
xor
mov
cmp
or
xorb
subb
pop
call
add
repz
gs
mov
and
jo
fimuls
pop
jne
mov
sub
mov
cmp
dec
arpl
loop
fmull
imull
and
outsl
inc
push
pop
test
popf
adc
cmp
inc
or
ss
shll
cmp
dec
into
mov
adc
lcall
cmc
push
cmc
call
lock
xchg
test
push
mov
jmp
adc
ret
test
mov
lcall
push
push
out
pusha
push
test
das
fchs
sbb
push
idivl
ss
sbbb
rol
outsl
lret
push
cmp
cs
add
cwtl
loopne
or
adcl
bound
pop
nop
das
sahf
adc
stos
pop
lahf
fwait
sbb
out
pop
add
add
and
pop
jg
push
mov
jle
or
push
push
aaa
es
jl
lods
and
pop
mov
xchg
inc
sbb
push
mov
mov
test
pop
in
push
xchg
in
xchg
aad
shll
aas
and
sarl
jno
in
cmp
xlat
sbb
mov
cmp
in
ljmpw
xchg
imul
jle
fimull
jae
or
sub
fs
enter
in
lds
sub
sbb
arpl
or
movl
cmc
aam
fwait
cmp
loop
xor
stos
xor
cmpsb
jnp
test
add
int3
push
adc
loope
lahf
mov
notl
jmp
hlt
aas
imul
adc
std
mov
lret
jmp
xchg
fwait
dec
pop
and
jae
data16
mov
lock
xchg
int3
xchg
inc
and
ss
push
xchg
cmp
js
sbb
jb
mov
filds
mov
sub
and
shrl
pop
sbb
repnz
mov
inc
adc
xchg
jmp
mov
shrl
jg
and
push
jb
les
rcrl
push
rcrb
pop
inc
inc
pop
mov
or
ss
mov
cmp
xchg
xor
jge
inc
mov
cli
add
sbb
mov
xchg
add
cmpsl
pushfw
int
dec
pop
mov
and
add
lds
out
adc
xchg
push
data16
adc
xchg
into
and
les
jmp
cmpsb
mov
neg
xor
or
vpsubsb
int
or
mov
outsl
jge
enter
lahf
push
out
shlb
pop
popa
dec
andb
pop
mov
dec
notl
add
ret
rclb
jae
ret
xor
jo
jnp
mov
xor
sbb
jno
xchg
mov
gs
and
or
outsb
jp
rcrb
aas
das
mov
adc
jnp
xchg
bound
out
lcall
mov
ret
lods
nop
out
movsb
push
sbb
shrb
sbb
push
loopne
sub
roll
or
ss
ss
mov
jne
js
mov
int
fs
jg
shrb
shlb
test
cmc
jge
xor
and
add
sbb
test
push
lea
fidivs
fwait
pop
fs
leave
xor
adc
jg
dec
push
jp
pop
xor
jg
jno
xchg
mov
adc
sub
mov
pop
insl
hlt
cli
movsb
mov
push
mov
push
mov
test
icebp
cmp
mov
pop
mov
and
lcall
mov
mov
stos
dec
sti
lret
rorl
jp
inc
and
xchg
push
fadd
or
mov
rcrl
aas
addl
xchg
push
call
roll
out
subl
pop
lahf
mov
and
in
aaa
adc
mov
scas
ret
adc
fisttpl
push
outsb
stos
xlat
sbb
jnp
jp
xchg
aas
jb
stos
mov
int3
sbbb
ret
popa
scas
jge
mov
jae
mov
xchg
lds
divb
in
js
cmp
cwtl
sbb
scas
adc
int
fimull
jno
or
imul
js
inc
lcall
mov
arpl
cmpsl
dec
mov
pop
ja
mov
movl
repz
or
pop
pushl
shrl
fnstenv
rclb
stos
not
xor
mov
inc
dec
enter
movsl
fsubrp
mov
pop
cmp
adc
xchg
pop
push
mov
push
fdivr
ret
dec
sub
fisttps
xor
rorl
ret
cmpsl
imul
addr16
stc
jl
call
mov
ljmp
jns
and
test
hlt
cmovs
jno
movsl
cmp
imul
test
and
dec
mov
lods
bound
and
fidivs
jecxz
arpl
fisubrl
mov
mov
leave
out
ficomps
insb
dec
and
pop
sti
dec
in
std
sub
jbe
popa
sbb
stc
repz
adc
loop
dec
loope
iret
shlb
sub
lahf
push
fadds
movsb
sub
adc
push
add
ljmp
rcrb
mov
aas
cmpsl
jbe
push
in
rcr
outsb
dec
aaa
sub
loope
mov
or
subb
daa
subb
xchg
inc
mov
mov
pop
inc
sub
loop
test
push
or
xor
cmc
ds
loop
dec
cltd
adc
pop
outsb
mov
dec
jno
pop
ret
sub
cmp
pop
enter
fmull
pop
xor
mov
add
inc
sbb
sahf
xchg
mov
mov
adcb
in
es
shrb
mov
add
shll
sbb
outsl
test
pop
mov
adc
stc
pop
fcomi
dec
imul
aas
mov
jl
imul
sbbb
fwait
or
lahf
clc
out
cli
xlat
and
stos
imul
jbe
xor
jmp
jmp
call
adc
ret
xor
and
in
std
lds
xor
push
or
mov
pop
cmp
imul
adc
sbb
arpl
jp
shrb
inc
loopne
xchg
out
mov
lods
loope
push
int
mov
cmp
or
pop
add
xchg
mov
in
mov
stos
leave
outsl
sub
add
sub
sbb
or
push
and
leave
ds
sub
aad
int3
addr16
mov
fbld
fdivrs
xor
fimuls
adc
ret
ljmp
fiaddl
pop
push
dec
hlt
mov
mov
sbb
ret
jo
bound
lods
hlt
xlat
push
mov
and
data16
and
lret
mov
das
rcll
imul
pop
xor
dec
das
rclb
jp
test
xor
xchg
out
test
in
or
cmp
xchg
fs
inc
mov
push
pop
pop
cmp
dec
loop
or
jno
fwait
jecxz
xchg
shrl
inc
xchg
inc
jbe
xchg
and
scas
add
dec
add
add
mov
ja
cli
cmp
dec
xorb
leave
ja
loopne
sti
cmp
pop
push
or
les
not
dec
sbb
mov
mov
pop
lea
and
test
add
mov
jecxz
cli
xor
dec
add
inc
xor
jg
add
xorl
cmp
jne
push
fisubs
add
shrl
jns
out
in
pop
sub
insl
cmc
xor
mov
cs
ljmp
clc
inc
in
mov
mov
leave
jne
repnz
adc
inc
jb
dec
inc
push
push
sub
div
xchg
std
ja
idivl
xor
dec
cmp
mov
mov
jnp
push
sahf
roll
iret
loopne
mov
jns
sbb
push
dec
add
or
rclb
dec
ja
sahf
pop
dec
push
cmp
test
incl
in
mov
lods
idivl
stos
cmp
add
int
leave
adc
adc
int3
ja
dec
cmp
sub
daa
packuswb
or
test
mov
loop
push
arpl
add
jg
xor
mov
dec
adc
loope
xor
gs
mov
and
icebp
stc
add
pop
pop
jo
xor
pop
sbb
loopne
mov
push
pop
xchg
mov
leave
sbb
push
sub
or
hlt
addr16
sbb
add
jns
daa
or
xchg
lea
stos
stc
inc
dec
pop
push
lret
shlb
aam
dec
or
jmp
mov
mov
test
xchg
gs
popa
movl
gs
hlt
das
mov
test
xchg
or
mov
cmp
loopne
ret
pop
aam
out
das
xor
fstpt
pop
ret
dec
lods
mov
fwait
cmp
scas
mov
dec
lahf
fdivrp
xor
mov
push
aas
mov
jne
xchg
push
cwtl
ret
inc
outsb
shr
mov
dec
jmp
loopne
stos
pop
push
mov
popa
jnp
xor
iret
and
xor
and
popf
jno
leave
lock
fxch
sbb
gs
sub
dec
xlat
shlb
inc
cmp
lock
xchg
adc
clc
adc
ja
sbb
jmp
repz
aam
bnd
roll
pop
es
in
cmp
push
cmp
lods
lret
lret
stos
cmp
jg
and
shll
xlat
outsl
fcmovne
in
iret
stos
or
xlat
pushf
not
les
mov
mov
lcall
mov
lcall
or
mov
sub
arpl
ss
je
fcompl
push
pop
sub
jno
adc
jo
pop
fsubrp
push
and
mov
mov
mov
out
iret
arpl
sub
shll
inc
xor
pop
inc
addr16
cltd
into
insb
shrb
sbb
sbb
push
ret
jne
adc
mov
out
test
rclb
shl
or
popf
outsl
js
cltd
push
xchg
push
mov
orl
pop
inc
aad
cmp
rcll
cltd
rcrb
xchg
ds
lods
popf
jno
jl
inc
in
out
rcrl
sbb
xlat
jns
shrl
push
sbbb
out
je
outsb
jne
jg
movw
mov
loopne
push
hlt
fidivrl
mov
fs
sti
in
test
es
sbb
jle
push
fcmovnb
sub
sbb
sbb
sbb
das
imul
rcl
push
rclb
mov
sub
outsl
xchg
xchg
fsubrl
cwtl
out
adc
test
lcall
sub
add
jg
rcll
dec
addb
dec
in
pop
add
das
popa
jl
cmpl
shlb
popf
fnsave
inc
push
insb
and
fisubl
lcall
aam
add
fildl
pop
cld
mov
lcall
outsl
mov
or
jp
push
push
popa
stos
pop
sbb
pusha
test
pop
data16
lods
push
jbe
push
xchg
cmp
out
ljmp
jo
leave
outsl
lea
xor
jo
adc
jp
push
stc
rorl
mov
push
cmp
cmc
sbb
cmp
push
or
add
or
push
adc
cmp
cmovo
ret
cltd
dec
rolb
and
aas
cli
stos
pop
add
adc
adc
mov
cmp
mov
pop
sbb
mov
lahf
dec
daa
out
mov
mov
cmpsb
mov
sub
dec
jnp
dec
fwait
data16
clc
leave
cmp
push
stos
ret
cmp
push
xchg
mov
bound
frstor
movlps
pop
shlb
stos
jg
push
aam
add
ss
mov
cs
jl
mov
mov
add
cmp
jbe
arpl
or
sub
movsl
sbb
jne
jl
cmp
inc
test
xchg
int
xor
ret
ret
mov
xor
imul
add
fcmovb
mov
data16
push
jl
arpl
pusha
movsb
repnz
mov
pusha
lock
xchg
and
imul
fldcw
xchg
loopne
lock
and
push
xor
imul
cltd
fcoms
mov
andb
stos
push
sub
and
or
in
push
or
dec
xor
fisubl
pusha
push
fsub
pop
int3
out
xchg
xor
dec
xchg
push
cmp
jg
xchg
jnp
ja
sti
faddl
jae
xor
xor
or
xchg
icebp
arpl
cmp
push
shl
cmp
xlat
cmp
in
xchg
ds
cmp
mov
fisttpl
cmpsb
call
inc
mov
mov
lret
stc
rorb
insl
jl
movsb
rcrb
scas
sbb
dec
call
sbb
in
test
mov
cmp
aas
xchg
movsb
icebp
insl
out
addr16
adc
jo
lret
dec
push
aaa
dec
cwtl
arpl
sbb
adc
adc
and
mov
mov
mov
mov
ds
lcall
or
and
dec
inc
mov
lods
add
movsl
shlb
divb
jle
xlat
test
mov
and
dec
insl
cmpsl
or
sub
hlt
push
fistps
mov
sub
or
fs
xchg
xchg
sbb
xlat
fs
inc
lcall
adc
push
popf
cmp
sbb
mov
mov
mov
mov
jns
loopne
roll
push
or
lds
mov
scas
ja
scas
push
xchg
cmp
into
xor
xor
jne
jb
jnp
jns
mov
pop
gs
xchg
test
lret
rclb
inc
pop
or
ss
test
push
pusha
mov
adc
test
mov
stos
aam
push
xlat
iret
sarl
adc
jmp
shll
out
xor
test
data16
sub
jns
cli
push
andl
sub
or
loope
push
and
or
ret
push
insl
add
cwtl
movl
outsb
mov
dec
int
dec
test
icebp
pop
cmpsb
sub
or
cmp
popa
jbe
pushl
inc
mov
pop
shrb
mov
mov
inc
data16
inc
pop
sbb
out
jmp
jg
shll
inc
dec
or
mov
sub
xor
mov
cmp
lahf
xchg
sub
fs
xor
xchg
and
test
aas
mov
sub
lcall
movsb
pop
xlat
push
xor
cld
jne
aad
les
push
mov
push
pop
lahf
inc
divl
cwtl
sub
gs
ds
lods
and
cmpsl
mov
dec
sbb
sahf
push
mov
loopne
ljmp
inc
lea
mov
xor
add
dec
mov
adc
iret
iret
sti
push
push
clc
cmp
jl
jns
stos
mov
inc
sbb
add
ja
and
jo
mov
inc
mov
in
xchg
clc
mov
xor
mov
or
pop
mov
dec
add
xor
popa
add
or
in
imull
sub
gs
sarb
mov
mov
inc
mov
jne
push
xchg
xor
mov
into
push
jo
jle
aam
es
sub
xlat
test
stc
xchg
jae
push
gs
rcll
mov
jns
cmp
jecxz
adc
bnd
mull
cmc
hlt
inc
in
sbb
xor
cld
cwtl
push
sub
xchg
rcl
mov
and
dec
data16
aam
popf
inc
dec
jb
sbbl
or
out
hlt
add
repnz
sar
out
inc
adcb
out
xchg
fcomps
loope
fmul
fs
and
mov
test
push
ss
pop
insb
inc
push
mov
stos
push
testl
dec
mov
in
push
icebp
popa
test
mov
mov
mov
daa
clc
xlat
dec
in
push
mov
or
push
mov
xchg
mov
push
pushf
xchg
pusha
add
sbb
xchg
jns
xor
jnp
loopne
inc
fwait
test
cmp
mov
icebp
pushf
int3
enter
rcll
jne
cwtl
or
fs
xor
dec
add
xlat
mov
add
fst
cld
fs
xchg
push
xor
pop
in
out
adc
push
sub
add
inc
xor
cwtl
into
in
cmpsl
dec
xchg
or
stos
adc
xor
imul
fidivs
int3
repnz
mov
inc
pop
cltd
cmp
test
or
jp
imul
mov
and
adcb
xchg
aas
jl
adc
test
outsb
test
fcmovnbe
pop
lods
outsb
leave
pop
push
add
dec
in
xor
dec
sub
cltd
dec
shr
inc
dec
push
pop
add
dec
jle
mov
ret
xchg
popf
das
xchg
std
jp
repz
mov
outsl
mov
icebp
pusha
std
pop
ds
les
xchg
andb
adc
in
sbb
scas
cmp
std
aam
adc
pop
out
popa
mov
or
xchg
add
mov
add
ss
cmc
lods
and
shrl
movsb
mov
sub
pop
sub
cmpsb
hlt
lds
inc
dec
push
shll
stos
or
add
repz
jl
mov
pop
mov
movsl
andl
pop
push
jecxz
mov
aas
rcrb
adc
and
cli
addb
pop
cld
xor
into
pop
int3
lcall
loop
xchg
or
jne
subl
jnp
add
fs
sarl
cltd
dec
out
shlb
je
loope
fs
adc
js
int3
sub
lahf
push
in
add
mov
or
test
or
mov
fmuls
dec
push
or
in
and
andb
movsl
shlb
mov
mov
in
or
cwtl
mov
mov
das
push
fwait
mov
dec
leave
jnp
push
subl
sub
imul
adc
int3
push
jbe
ficomps
int
leave
pop
testb
xchg
jno
call
mov
xchg
add
adc
dec
hlt
je
dec
jge
sub
mov
lcall
lcall
mov
jbe
inc
mov
pop
or
xchg
ds
lock
andb
mov
fs
pop
imul
aaa
jb
cs
in
push
cmpsl
push
xor
shll
sbb
mov
insb
adc
dec
das
fdivrp
xor
xor
aas
fmulp
imul
add
sbb
lds
rcrl
lret
sub
test
rclb
lahf
sub
lods
lds
xchg
xor
sub
pop
or
push
pop
sbbl
leave
push
cli
jae
sbb
mov
push
xchg
loopne
adc
push
in
std
add
cs
mov
jle
xchg
insb
ret
cmc
cwtl
in
sub
aam
or
test
sbb
ret
pop
mov
test
int
xor
adc
aam
pop
jecxz
addps
mov
mov
or
xchg
mov
mov
popa
mov
stos
lods
mov
inc
sar
fimull
cmp
shufps
dec
mov
mov
icebp
cmp
js
cmp
adc
jne
jb
vaddpd
xchg
andb
jo
mov
arpl
mov
arpl
add
mov
test
push
dec
cli
xchg
rcr
or
data16
cli
pop
mov
sub
pop
jmp
xlat
add
int
mov
sti
int
into
add
lcall
jnp
data16
cmc
and
cmpsl
imul
and
jnp
pop
xlat
dec
push
and
test
shlb
mov
call
test
loop
mov
push
jbe
jg
jl
jns
hlt
mov
jecxz
iret
shll
dec
std
xchg
pusha
mov
or
and
cmc
sub
scas
insb
and
mov
xchg
fisubrs
mov
push
cmp
in
pop
call
lods
lock
into
pop
stos
dec
lea
out
decb
sub
and
insl
push
push
mov
push
subl
fcompl
jl
inc
adc
mov
cmp
xchg
lret
mov
xorb
mov
mov
mov
les
movsb
sub
cmp
sbb
lods
inc
jnp
mov
test
sahf
and
insb
iret
iret
rorb
ror
add
mov
push
jno
dec
dec
sarl
dec
ss
shlb
mov
rcr
push
xchg
fwait
roll
cmp
jnp
adc
lret
mov
jmp
jg
aas
push
subb
or
xor
jle
sbb
lods
jo
jnp
mov
or
mov
js
daa
popa
mov
loopne
sahf
addr16
cwtl
sbb
mov
movsb
aad
shr
sub
pop
pushf
jmp
out
ja
movsb
mov
cmp
push
movntq
out
sbb
call
stos
sub
rcrl
cmc
dec
inc
arpl
add
mov
push
push
cmc
outsb
mov
pop
sub
xchg
sbb
xchg
jae
and
shl
fisubs
andb
in
xor
int
aad
sbb
mov
cmc
jecxz
inc
mov
xchg
cmp
test
aam
addb
mov
mov
shrl
enter
test
mov
es
insb
push
jbe
dec
call
adc
loope
gs
or
repnz
js
lea
mov
fidivrs
adc
sub
imul
mov
repnz
push
cltd
int3
mov
jnp
jg
iretw
pop
or
push
add
pop
ret
test
movsl
lods
pop
push
push
into
leave
lret
sub
add
pop
sbb
or
sub
dec
pavgb
test
es
fwait
push
inc
push
push
cmc
ficoms
jo
dec
bound
test
iret
shll
iret
sub
cmp
movsb
call
xlat
jns
push
push
adc
adc
xchg
stos
pop
pushf
push
jg
test
push
jns
jg
stc
push
lods
xor
rclb
xor
in
das
push
pop
jecxz
lods
mov
sbb
es
fcmovbe
mov
mov
ffree
lret
bndstx
les
insb
ss
mov
sub
insl
dec
out
neg
inc
bound
mov
mov
test
and
jle
int3
pop
fldt
add
and
loope
int3
pop
jle
cmp
inc
je
push
add
push
popa
test
jmp
xor
in
lds
les
mov
mov
test
loopne
sbb
pusha
cli
or
and
stos
dec
adc
dec
cmc
mov
sub
cmp
mov
imul
bound
xlat
jo
jbe
stc
push
fisubrs
rcll
fprem
arpl
mov
or
dec
lret
xor
dec
lea
mov
fcomp
mov
dec
inc
sarl
lds
inc
mov
and
and
imul
cmpsl
adc
push
mov
je
inc
mov
cmp
les
pop
mov
icebp
jae
lock
jge
mov
hlt
stc
repz
inc
test
into
mov
dec
cmp
popa
pop
xor
scas
jle
sub
cmpsb
push
dec
xchg
pop
mov
ret
stc
imul
dec
sub
jns
test
jge
stc
xlat
inc
add
sbb
das
repz
add
popa
pop
and
xchg
pxor
cmp
jbe
cmp
cmp
lret
mov
lock
add
or
std
lea
insl
and
xor
mov
or
stc
xor
xorb
mov
stos
loop
and
or
out
cltd
dec
push
fistpll
push
in
aaa
loop
push
outsl
jl
fstl
pop
or
add
test
dec
ss
push
add
jb
jne
sub
sahf
mov
mov
test
sub
adc
push
fldcw
adc
lcall
mov
cltd
cmp
outsb
add
in
pusha
ss
inc
xor
mov
dec
imul
movsb
jl
leave
mov
mov
mov
ss
in
out
mov
inc
cmpsl
inc
and
shll
cltd
xchg
fidivrl
inc
add
lahf
inc
sub
ss
cli
aam
jne
stos
cmpb
pop
and
fninit
add
movaps
es
mov
mov
jb
mov
mov
out
add
dec
movb
fwait
lret
and
fdivrl
inc
jecxz
cli
add
pop
insl
vorps
fucom
add
push
scas
repz
lods
imul
js
flds
cs
int3
es
int3
rdtsc
fisubl
mov
jno
xorb
fdivs
add
jne
mov
ret
push
mov
repnz
clc
cmc
sub
sti
add
lock
int3
lods
gs
mov
cmp
xor
sub
ljmp
add
out
add
shrb
dec
test
jne
scas
and
mov
das
inc
shr
jecxz
xor
enter
mov
fiaddl
sub
sti
icebp
cmp
data16
sub
in
push
scas
mov
add
ret
mov
sbb
sarl
js
loopne
cld
push
movsb
and
dec
dec
fst
enter
push
fisubrs
arpl
lods
ret
adc
aad
fadd
jno
cmpsb
cmp
les
push
xor
push
and
add
pop
iret
jle
xor
adc
loope
insl
leave
inc
shrl
sub
dec
dec
movsb
mov
repz
or
and
mov
pop
out
mov
repz
mov
addl
iret
cmp
fmull
test
aas
out
sub
and
cmc
test
repz
jbe
movsb
xorl
stc
pop
iret
ret
jb
adc
test
adc
jp
in
adc
or
fs
push
sbbl
daa
sbb
mov
xorl
pop
xchg
or
jmp
push
add
hlt
inc
push
cmp
or
fisttps
mov
das
sbb
xchg
push
pop
inc
mov
sti
adc
xchg
out
jns
add
test
popa
cmp
push
mov
mov
pop
mov
jle
xor
lods
mov
lock
insb
add
inc
fs
lahf
mov
jl
sbb
dec
mov
mov
sub
js
adc
aam
cmpsb
or
sub
xchg
jo
push
mov
pushf
iret
and
cmp
jmp
jbe
cmp
lea
push
mov
jo
es
sub
in
sahf
lret
push
ljmp
addb
cltd
movsb
sub
arpl
in
sbb
jg
sub
mov
cmp
movsb
pusha
nop
scas
pop
add
fcoms
pop
xchg
dec
mov
lods
addl
insb
mov
add
movsb
clc
inc
or
sarb
fmull
mov
std
stos
iret
sub
xchg
rcrb
add
sbb
pop
aaa
bound
pushf
test
add
stc
fnsetpm(287
mov
aam
ret
cmp
rcrb
and
iret
sbb
add
sbb
adc
jnp
rol
inc
test
adc
adc
nop
mov
outsl
neg
sub
aam
mov
js
push
fcomps
dec
or
test
out
mov
adc
xor
out
jnp
cmpsw
jg
ljmp
std
sbb
ss
cmp
leave
cmpsb
out
pop
imul
nop
xor
repnz
mov
aaa
mov
in
jg
test
int3
sub
mov
sbb
xchg
lock
xchg
ljmp
push
imul
push
mov
inc
pop
jne
mov
sbb
add
ds
jg
pop
imul
scas
sbb
mov
popa
lods
jb
fnstsw
xchg
ret
cmp
ds
lods
push
adc
xchg
xor
sub
xor
inc
ja
jne
pop
into
add
enter
mov
je
js
mov
std
mov
add
int
jmp
mov
cmp
cmp
or
pop
enter
adc
outsl
xchg
and
dec
push
dec
dec
inc
jle
mov
and
sahf
xor
lea
shlb
mov
out
sbb
add
rcrl
xchg
mov
xchg
loop
xorl
fisubl
jge
sbb
mov
jmp
in
mov
mov
fimuls
xor
inc
dec
mov
cmp
iret
xchg
sti
inc
lret
adc
mov
pop
imul
subb
xchg
test
adc
cli
jg
popf
in
push
mov
rcrl
add
cmp
test
xor
leave
inc
ds
or
ljmp
xor
stos
mov
push
and
sub
push
out
mov
in
stos
movsb
mov
fmuls
mov
add
mov
sbb
roll
xchg
mov
jo
push
pop
xacquire
les
add
jb
lods
clc
iret
jnp
jl
ljmp
jo
jle
jg
stos
movsl
inc
pop
iret
out
xchg
repz
xlat
push
mov
jno
pop
pop
inc
pop
mov
jnp
insl
sub
out
out
loop
and
cmpsb
sub
inc
adc
inc
gs
inc
pop
aaa
mov
and
aam
loopne
or
cmp
shrl
push
sub
xchg
clc
dec
sar
movsb
sub
xchg
mov
in
das
xchg
add
xchg
or
fwait
push
xlat
push
bsr
jl
push
stos
movsl
insl
xchg
push
adc
jns
mov
or
imul
movsl
inc
lods
clc
cmp
mov
dec
pop
inc
pop
dec
mov
aaa
je
fs
test
jl
fnstcw
or
mov
mov
cwtl
mov
dec
pop
shl
sub
int
mov
push
xadd
bound
icebp
out
mov
xchg
mov
gs
in
cld
fists
sbb
push
imull
or
ja
add
adc
jecxz
inc
test
enter
add
movsb
jl
inc
and
jno
push
into
mov
mov
insl
stos
mov
mov
jno
stos
aaa
decb
push
dec
fbstp
xchg
push
push
pushf
mov
lret
enter
jge
add
rorl
in
out
add
scas
out
push
mov
test
call
sub
sbb
mov
cltd
lret
push
adc
dec
mov
adc
add
mov
push
in
sti
push
into
mov
notl
sub
push
jge
dec
cwtl
pop
jnp
pop
dec
cmp
insb
jg
in
dec
push
add
movups
ret
sub
sub
out
js
dec
inc
sub
or
cmp
leave
gs
iret
xor
cmp
or
aas
jmp
push
adc
mov
inc
loop
mov
inc
cli
cmc
pop
cmp
mov
ret
imul
lea
popf
vmread
or
mov
leave
pop
xor
jmp
es
aam
xor
mov
imul
jge
xchg
pop
push
sbb
mov
rclb
pop
cmp
inc
adc
sti
es
outsb
icebp
rep
mov
cmp
xchg
adc
lret
dec
repz
inc
add
sbb
das
jb
sbb
xchg
adc
in
jecxz
mov
lds
sbb
lret
push
packuswb
outsl
icebp
mov
add
xchg
mov
dec
bound
fs
mov
or
xchg
push
mov
jb
dec
and
shlb
lds
repnz
lret
and
cld
sti
iret
popa
in
jne
pushf
xor
xchg
push
popf
fidivrs
ret
add
addr16
sbb
cmp
mov
scas
mov
stos
mov
negl
in
mov
jg
sub
xchg
icebp
ja
push
pop
js
and
xor
imul
rolb
ss
sbb
dec
and
cs
cmp
mov
cmp
xor
pop
mov
mov
sub
cld
gs
jmp
inc
cmpsl
popa
fisubrs
mov
hlt
lret
xchg
es
or
fwait
test
aad
sub
lods
mov
xor
stos
lds
lock
and
stc
outsl
js
sarl
push
pop
test
cmp
sub
cmp
mov
pop
push
or
xchg
bound
inc
test
push
mov
lret
xor
lahf
std
fists
mov
xor
cwtl
inc
sbb
mov
mov
push
cmpsl
jmp
push
sar
xchg
leave
add
aaa
inc
fnstcw
mov
loopne
cmp
jle
clc
aam
cmp
daa
cmpsb
test
test
outsl
add
mov
mov
push
out
or
xchg
roll
cwtl
std
pop
repz
lock
or
mov
aaa
xchg
test
push
inc
fs
lahf
imul
popl
shr
cmpsb
or
cmp
pop
ljmp
add
lret
out
fisubrs
int3
ret
mov
or
adc
dec
js
push
and
push
fwait
stc
push
cmc
dec
mov
into
sbbb
fistpll
outsb
jno
xor
xor
xor
push
int
sti
test
js
mov
push
mov
add
inc
xchg
movl
clc
and
dec
xchg
cmpsb
sbb
icebp
lret
or
ja
pop
inc
cld
out
adc
faddp
sahf
sti
mov
in
js
icebp
jg
les
push
aad
jne
pop
iret
add
popf
scas
xchg
paddsb
xor
movsl
mov
sub
jecxz
iret
ja
sub
jo
xchg
shlb
mov
lock
push
flds
outsb
mov
clc
add
inc
inc
adc
pop
imul
ljmp
pop
xor
bnd
ss
adc
ret
jnp
dec
and
lds
xor
fnsave
in
call
hlt
and
add
mov
or
adc
ljmp
loop
cmp
test
ret
cmc
aad
repz
fistpll
stos
add
ret
inc
lods
pop
call
out
cmp
xchg
addl
add
aas
and
jns
scas
or
fnstsw
jno
push
outsl
repz
jp
out
scas
imul
sti
push
xchg
lods
sbb
or
cmp
mov
and
out
enter
xor
fimuls
xor
push
mull
push
in
jmp
ljmp
insb
jge
cmp
jo
mov
stc
push
popa
sbb
push
mov
loope
aam
dec
mov
cmpb
push
dec
jp
dec
xor
mov
inc
mov
loope
jg
push
mov
xchg
sbb
arpl
sbb
inc
pop
cmp
bswap
shrb
mov
or
ja
push
inc
fs
inc
inc
test
mov
outsb
jecxz
loope
packsswb
jnp
push
push
adc
dec
sahf
shll
push
cmp
sub
and
mov
cwtl
mul
sbb
aas
mov
in
insb
daa
out
inc
jne
jp
cmpsb
aaa
jbe
xorb
outsl
aad
and
xchg
cmp
lahf
movsl
call
insb
dec
cmp
lret
shlb
pop
out
adc
push
popf
scas
push
test
pop
ret
xchg
xor
ljmp
sarb
into
das
or
xchg
jg
stos
pop
ret
out
insb
mov
sub
sbb
and
jns
mov
shrl
mov
xor
in
sub
scas
inc
pop
bound
push
cli
stos
adc
sub
jmp
hlt
fdivrs
sub
mov
dec
inc
fldl
gs
and
out
ret
aas
sti
imul
push
or
js
cmpsb
jle
jns
jb
ds
cmp
adc
movl
ljmp
mov
xor
outsb
fwait
sbb
adc
xchg
mov
lods
inc
inc
sub
lret
jne
in
int3
jns
int3
push
mov
xlat
mov
rorb
out
mov
sbb
cmp
adc
aaa
dec
leave
jo
mov
lret
or
mov
cmpsb
shrl
mov
pushf
pop
aad
xlat
cld
cmp
scas
cltd
cmp
sahf
cltd
call
out
std
xor
push
inc
fidivrs
mov
sbbb
mov
ljmp
imull
test
dec
stos
loop
js
jg
add
xor
add
jp
jp
gs
inc
mov
aas
outsl
pop
sub
out
cltd
js
rclb
mov
jl
nop
dec
add
test
inc
sbbl
mov
add
push
in
int
jae
dec
push
jnp
popa
and
int
cld
call
jg
xchg
and
add
xchg
xorb
out
mov
pop
bnd
jmp
push
stc
movsb
cmp
xor
jecxz
fnstsw
mov
push
loope
inc
push
cmp
test
jae
mov
add
sbb
push
js
into
jl
aam
lods
enter
pop
mov
and
sub
lret
imul
lret
pop
sub
add
jno
orb
cmp
and
pop
loop
xor
ljmp
sti
or
cmp
sub
rcll
loopne
xorl
cmp
in
pusha
lahf
push
mov
fstps
dec
lcall
lahf
push
imul
hlt
fs
push
xor
inc
cmp
imul
inc
push
inc
jne
sahf
fcoml
cmpl
or
mov
fildl
iret
sbb
lods
xchg
shl
add
aaa
mov
push
jo
ret
xchg
in
pop
pop
fists
xchg
xor
lahf
lods
inc
stc
stos
fsubrs
popa
inc
pop
loop
shrb
jp
mov
fs
ja
nop
ss
rorb
jae
rcrb
jge
popf
and
cmp
nop
scas
fisttps
call
xchg
scas
imull
aad
pusha
push
sarb
push
adc
sbb
xchg
ljmp
jg
sbb
ljmp
ffree
or
mov
pusha
or
jb
lods
pop
mov
push
push
xor
popf
inc
and
lcall
decb
data16
in
adc
hlt
inc
push
shll
mov
imul
stos
sbb
enter
push
mov
push
mov
xchg
add
into
ret
and
jl
mov
in
sub
push
lcall
mov
mov
mov
popa
jnp
loope
mull
mov
jmp
jne
ljmp
xor
enter
out
insb
aam
in
lret
int
cmp
out
and
and
adc
jle
cmp
jecxz
sbb
cwtl
adc
mov
cmp
push
js
insb
cwtl
mov
pop
pusha
pop
jb
ja
negb
push
imul
loope
repnz
fdivrl
dec
xor
shrl
push
or
into
mov
push
inc
enter
add
test
add
inc
or
mov
lcall
xor
scas
jle
fs
in
adc
mov
lock
test
pop
add
jge
mul
pusha
movsb
push
js
jmp
lds
adc
cmp
stc
aas
inc
lods
shrb
stc
cmp
push
and
mov
ret
add
xchg
fists
shlb
push
mov
popf
mov
inc
lahf
testb
in
or
sahf
cmp
add
mov
gs
jne
xchg
jl
sub
push
lcall
sarb
jmp
ja
repz
mov
pop
shlb
addb
sbb
jp
outsb
ret
mov
aad
jns
inc
lcall
or
mov
jns
add
fst
dec
aaa
push
pop
addr16
or
fnsaves
mov
dec
cmp
out
rclb
mov
test
push
xchg
into
dec
test
cmp
out
lret
fcomip
sub
dec
inc
lret
imul
cmp
popf
sti
fwait
mov
das
pop
mov
jmp
sbb
jmp
fidivl
fstp
jne
push
je
cs
testb
lods
inc
mov
jo
xor
fmull
push
jp
add
mov
cmp
fistpll
cmpsw
mov
xchg
add
jle
pop
addr16
pop
jl
cmc
sbbl
pop
mov
mov
xchg
pop
repz
and
inc
push
ss
add
jle
bound
or
mov
and
rclb
push
mov
mov
xchg
add
movsl
insl
push
xorl
push
cmp
sub
subb
outsb
enter
mov
cmp
push
dec
out
sub
pushf
es
inc
setl
xchg
mov
insb
add
in
pslld
dec
out
jecxz
or
stc
inc
cli
jb
sbb
gs
xorl
jno
fadds
jecxz
das
lods
jns
es
mov
jns
and
pop
mov
cmpsl
cltd
pop
in
cmp
or
dec
pop
add
out
xchg
and
clc
push
jo
or
das
sbb
fs
ss
out
inc
and
repnz
fisubrl
icebp
sub
cmpsl
dec
xchg
testb
fmulp
mov
jbe
gs
push
mov
int3
pusha
add
adc
out
pushw
inc
sbb
jb
pop
imul
std
repnz
out
ret
xor
and
dec
pop
sbb
mov
enter
jg
add
ss
jle
jne
xchg
add
dec
jmp
lret
ret
cmpsl
into
mov
pushf
mov
loop
nop
ljmp
xor
scas
jbe
jae
int
push
xor
sahf
push
fidivrs
es
mov
cmp
mov
sahf
out
fwait
mov
push
pop
sbbl
or
and
movsl
je
loopne
adc
vpmadcsswd
jmp
outsb
mov
stos
xchg
jge
fbld
aaa
movb
mov
aad
push
or
out
cwtl
in
shl
sub
in
mov
jl
xor
sbb
imul
pusha
jne
xor
mov
into
jno
int3
dec
dec
aad
push
int
repz
jnp
or
jle
ja
test
push
jmp
dec
shll
fcomps
dec
data16
stos
ror
mov
pop
rcrl
stc
mov
xor
jg
in
fisubrs
jle
cmp
clc
fsubrl
sti
pop
loope
pop
arpl
rorl
inc
cs
loopne
and
aas
stos
or
xorb
sbb
pop
pop
lds
mov
mov
add
sbb
in
inc
sahf
xor
sbb
sbb
jns
xor
push
xor
repnz
popf
cltd
scas
add
jne
outsb
fnsave
mov
test
sub
adc
inc
hlt
pop
sub
imul
fidivl
sti
sbb
jns
adc
cmp
push
xchg
jbe
jge
pop
js
fiadds
inc
loope
inc
dec
cmpsl
mov
fmulp
test
or
jae
xor
movsb
cmp
sub
repnz
movsb
jp
into
sbb
mov
adc
add
mov
test
xor
gs
xchg
fsubrs
fmuls
aam
cmpsl
pushf
mov
pop
sub
push
adc
mov
and
test
cmp
sub
mov
fdivrs
push
lods
push
in
jb
dec
mov
in
scas
js
xchg
add
mov
lods
ss
fwait
xor
mov
bound
mov
mov
mov
bound
xchg
in
cmp
mov
lds
rol
stc
mov
sbb
lea
sub
lea
push
jae
dec
push
aad
lock
ret
sti
mov
test
aad
subl
mov
adcb
scas
int
clc
outsb
fadd
dec
dec
fcomps
lret
dec
pop
lret
xchg
pop
shl
jb
mov
adc
mov
jp
scas
nop
adc
add
sti
xor
cld
loope
imull
inc
and
fwait
or
jge
adc
push
mov
cli
neg
in
cmc
icebp
and
sub
lock
add
xor
hlt
pop
pushf
ss
sub
or
mov
mov
cmp
mov
or
xchg
or
repnz
adc
xchg
aaa
js
mov
mov
mov
addr16
inc
jae
xor
inc
jp
aas
pop
int
mov
push
lods
or
mov
shl
addr16
subb
push
mov
pop
mov
or
in
loop
pop
lret
jmp
popf
insb
cli
sub
icebp
pushf
xchg
mov
mov
je
inc
pop
and
mov
outsb
out
hlt
mov
ret
nop
mov
js
subl
cmp
ja
adc
ljmp
pop
add
fisubrs
cld
and
jl
sub
inc
pusha
movsl
icebp
mov
sub
add
ficoms
out
dec
data16
mov
testb
mov
rcr
lds
mov
sbb
push
cwtl
push
xor
and
dec
fldcw
mov
push
inc
sbb
xorb
outsl
or
js
inc
mov
mov
dec
mov
xorl
or
fsub
sbb
jne
movsb
sub
sbb
add
cmpl
addr16
test
pusha
lret
lret
mov
pop
lcall
pop
cmp
dec
lea
popa
adc
movsl
push
dec
pop
adc
xchg
fdivp
add
int
lods
lcall
mov
js
add
lcall
aaa
jle
leave
mov
cwtl
sbb
mov
push
notl
pop
subb
add
sub
jno
ss
fwait
push
shl
mov
sbb
aaa
stos
lahf
pop
xor
repnz
xor
arpl
aas
xchg
int3
or
fldenv
icebp
mov
shrl
in
xchg
je
mov
cli
dec
int3
jnp
hlt
add
mov
bound
xor
fsub
sbb
ret
mov
popf
xlat
popa
add
fldcw
scas
and
or
mov
cld
xor
mov
push
lcall
mov
xor
mov
jecxz
mov
loopne
aad
dec
and
jecxz
je
sub
test
out
dec
clc
and
out
add
xchg
adc
shll
push
adc
ret
bswap
jns
cmp
int
ds
addr16
sbb
ds
xchg
fmul
xchg
pusha
or
xor
sbbb
mov
js
stos
std
push
aaa
aaa
arpl
sbb
inc
pop
ja
mov
ficomps
insb
and
stos
in
outsb
push
xor
adc
jecxz
adc
mov
jne
add
inc
int
or
xor
sbb
or
aam
in
cmpsl
push
xor
dec
notl
push
scas
into
xor
imul
add
lods
sub
adc
cmp
ds
push
lahf
pusha
repnz
push
push
jg
jl
inc
test
add
cmp
pop
pop
ficomps
shr
jnp
add
jo
mov
popa
stos
mov
jl
ja
fs
lcall
mov
and
and
icebp
enter
or
xchg
xchg
pusha
lods
push
mov
mov
jg
cmp
sbb
sub
loopne
sub
ret
fwait
mov
mov
fcoms
adc
jecxz
or
ret
nop
jns
int3
xchg
cmp
jno
mov
dec
inc
imul
push
ss
xlat
mov
xchg
mov
sbb
inc
outsl
inc
adc
xchg
ljmp
or
dec
sbb
and
idivl
ficomps
dec
mov
push
int
xchg
xor
or
mov
test
adc
xorb
mov
inc
mov
mov
push
or
push
xorl
fiaddl
aad
and
daa
ret
rolb
sub
arpl
push
inc
mov
idivl
mov
jle
xor
stos
jbe
push
mulb
test
sbb
scas
bound
and
lret
insb
xchg
ffree
pop
frstor
xor
ret
in
jne
jns
and
imul
push
sti
sbb
insb
sti
xchg
push
mov
mov
aaa
push
arpl
inc
sub
add
movsb
xor
inc
and
push
filds
or
out
push
repnz
xchg
sbb
and
inc
xchg
add
inc
std
aad
pop
fists
ret
inc
xchg
inc
or
cli
mov
cmpsl
adc
xchg
xchg
xchg
sbb
push
mov
push
push
xchg
pop
jb
popf
jbe
das
lret
or
xchg
mov
test
fstl
rep
push
xor
xchg
inc
sub
stc
or
lcall
cld
sti
and
push
pushf
and
shlb
fildll
fcoml
sbb
xor
sub
adc
aam
add
inc
lret
fdivrs
iret
sbb
dec
jnp
in
xchg
ljmp
mov
jbe
jg
or
inc
sbb
ret
mov
in
scas
sbb
cmp
shrb
jnp
jns
sbb
push
lods
mov
mov
adc
setg
bound
push
push
adc
lcall
leavew
lahf
mov
repnz
push
ss
aam
cltd
push
sbb
hlt
cmp
aaa
clc
fidivrs
cmpl
stos
rcrl
aam
lret
test
pop
cld
cld
lock
xor
sti
lods
sbb
mulb
outsl
jge
mov
push
testl
mov
outsl
xor
movsb
jle
subb
and
inc
icebp
sbb
xchg
push
scas
cmp
push
sub
xor
sbb
xlat
loopne
cmp
xchg
ret
inc
dec
rcr
lds
jb
aas
clc
int
je
sbbl
xchg
cmc
cld
mov
int3
cmp
xchg
in
mov
nop
out
cltd
sub
adc
or
mov
cld
or
inc
aam
lret
pop
addr16
jp
imul
cld
xchg
test
sub
add
jl
xor
loopne
outsb
mov
jbe
iret
aam
jb
mov
lahf
iret
addr16
ror
cwtl
pusha
mov
movsl
xor
test
insl
jge
fimuls
dec
daa
sub
cmpsl
lods
add
jne,pt
add
adc
cld
rol
mov
push
enter
pop
lds
cmp
mov
jbe
and
sbb
mov
test
push
lods
cmpsb
pop
orl
push
dec
pop
scas
in
insb
sbbb
test
lret
mov
cltd
inc
jno
pushf
fisttpll
es
fdivs
flds
jns
or
or
adc
incb
jno
lret
neg
cmpsl
negb
xchg
mov
push
mov
add
jbe
jo
shrb
jbe
sbb
xor
jne
lcall
pusha
xchg
mov
es
or
mov
lds
lahf
mov
pusha
sub
cld
shrl
imul
inc
xlat
sub
pop
mov
mov
in
arpl
call
roll
stos
out
insl
out
cwtl
rol
mov
imul
fs
mov
iret
das
call
stos
lea
sahf
mov
pop
fisttpl
ss
xlat
test
cld
movsl
test
sub
into
push
insb
lcall
or
ret
test
loope
je
subb
orb
adc
aas
jge
jle
in
lds
lret
imul
insl
cs
sub
add
pop
lret
imul
retw
xchg
mov
or
out
jg
stos
daa
jno
rorb
stc
lcall
add
add
test
sub
out
stos
mov
and
cmp
xchg
int3
mov
jne
or
or
push
dec
xchg
push
and
push
add
inc
nop
jae
dec
lret
fisttpll
lahf
sub
pop
stc
iret
push
cmc
jb
and
test
pop
fnstsw
aam
lahf
sbb
pop
xor
popf
arpl
gs
dec
push
sbb
pusha
pop
ss
and
lcall
lahf
and
repz
mov
cltd
xchg
mov
xchg
sbb
jge
ds
pushf
and
cmp
jo
mov
loope
jnp
xchg
test
jp
fstps
jle
adc
fidivl
push
jp
test
popl
shrb
es
inc
dec
mov
cmpsb
push
sub
jbe
in
pop
in
push
insb
jge
lcall
dec
stos
in
or
mov
lods
and
and
pop
sbb
ljmp
mov
mov
pusha
mov
cmpsl
jl
orl
std
arpl
mov
lea
mov
rolb
xor
les
das
adc
inc
insl
and
mov
cli
lods
rorl
cli
pop
xor
push
lahf
fiadds
insl
jmp
dec
or
vprotw
add
jne
loopne
cmp
orb
jp
loope,pn
repz
jno
jp
and
mov
mov
shll
test
lcallw
dec
or
add
mov
andb
out
adcb
inc
out
xchg
sbb
jg
mov
cmp
mov
test
cmpb
outsb
mov
loop
test
bndldx
add
and
or
push
mov
mov
ret
pop
outsl
inc
test
sahf
repz
outsb
dec
cmp
sub
pop
in
jg
cmp
mov
inc
sar
bound
js
mov
adc
sbb
adc
jne
nop
cmp
je
lds
lea
lahf
adc
pop
jbe
ljmp
ret
in
mov
sub
jno,pn
popf
insb
and
mov
cmc
lcall
ljmp
int3
cmp
lods
dec
push
inc
cmpsl
stc
incl
cmc
stc
fldenv
popfw
or
push
loop
orb
xlat
sbb
ret
push
aaa
sti
repnz
jmp
cwtl
and
clc
jne
push
into
mov
cli
rcrb
notb
iret
xor
mov
mov
shlb
loop
cmpsb
sbb
les
not
cmpb
stos
jg
imul
fistl
mov
aad
mov
aas
sub
stc
mov
fsubs
or
fsubr
pop
push
ja
shr
jl
cmp
sbb
pop
add
notl
and
xchg
lcall
sbb
mov
xchg
mov
pop
mov
push
test
das
jle
pop
loope
int3
int
movl
jns
cwtl
mov
or
sbb
lret
les
inc
mov
ljmp
and
adc
call
push
jle
jle
not
xorl
push
cmpsb
js
popa
push
ret
loope
jl
outsl
pop
or
push
mov
sub
adc
push
imul
xor
fidivrl
arpl
add
data16
adc
dec
jl
pop
push
sbb
jno
test
lea
into
pop
or
aad
test
xchg
add
ljmp
pop
xor
lods
jne
and
shl
cmc
xchg
outsl
adc
mov
fmul
test
aam
dec
xchg
mov
addb
and
shll
bound
cmp
jae
rolb
std
inc
call
clc
jnp
fisttpll
xchg
jle
in
enter
inc
pop
lods
ret
dec
stc
pop
and
lahf
inc
in
jecxz
outsl
mov
cmc
xor
out
in
cmp
mov
clc
jns
mov
mov
lret
mov
fs
push
mov
pop
push
mov
dec
pop
mov
jns
lds
xchg
inc
addr16
mov
or
dec
outsb
in
cmp
xchg
mov
jns
add
mov
js
and
cmp
push
stos
inc
popf
inc
addr16
out
movsb
mov
sahf
mov
insl
mov
dec
addps
xor
addr16
and
ja
cmpsl
aaa
lcall
cmp
and
pushf
adc
outsl
dec
scas
mov
imul
cli
js
mov
mov
mov
std
jp
loope
ficoms
or
popa
or
das
jg
xor
lret
push
gs
sbb
iret
aad
lret
sub
xor
add
dec
lds
pop
mov
adc
sbb
adc
fsts
cmpsl
ja
ret
add
mov
es
imul
cmp
popa
add
push
xor
dec
dec
arpl
or
adc
jae
xchg
cmp
shrl
and
in
cmp
push
int3
mov
in
add
orb
shr
shll
in
sbb
stc
dec
xlat
xor
mov
repnz
out
mov
sbb
inc
rorb
daa
addr16
jbe
test
pusha
sahf
sahf
pop
test
cmp
add
js
dec
scas
and
pop
sarl
out
cld
push
out
in
mov
outsl
pop
ja
mov
orl
mov
test
fnsave
outsb
aas
jmp
mov
jecxz
xchg
and
data16
push
and
dec
adc
int
push
mov
loope
pop
cmpsl
sub
pushf
xor
jp
out
out
xchg
ret
jno,pt
mov
fiaddl
outsb
xchg
lret
loope
fwait
pop
ljmp
lea
gs
jns
sub
cmp
inc
sbb
clc
pop
mov
int
push
stos
ljmp
jge
pushf
rorl
mov
inc
jle
jmp
dec
out
pop
and
and
and
push
mov
xor
xor
out
fists
xchg
cli
push
sarl
test
mov
fldt
fmuls
push
add
xchg
test
pop
adcl
mov
ret
mov
mov
xchg
add
dec
les
mov
sub
mov
repnz
inc
add
stos
or
orb
mov
mov
xlat
movsl
out
sbb
fstp
cwtl
pop
inc
fwait
jg
loop
pushf
jle
imul
loope
push
sub
cmp
xchg
jo
push
out
repnz
add
out
sbb
sahf
mov
les
div
and
sub
sub
mov
sub
movsb
notl
int
js
pop
or
push
xor
outsl
cmp
dec
lods
scas
jbe
inc
lock
adc
sti
shll
sub
dec
fnsave
loop
out
mov
push
push
xchg
inc
sub
inc
mov
jns
push
fs
je
lods
mov
stos
cltd
pop
mov
imul
test
mov
pop
mov
mov
pushf
mov
xchg
and
mov
mov
dec
xchg
pop
cmpsb
popf
shlb
add
nop
sub
in
xchg
sbb
arpl
daa
cltd
pop
sbb
fistpl
pop
test
roll
push
subl
aad
cmp
ds
xor
xorb
dec
mov
aam
sub
dec
or
andl
lds
jbe
or
pop
jno
movsb
mov
jg
add
test
out
add
and
inc
jbe
sub
aam
mov
xor
mov
and
jne
adc
mov
lds
jno
xor
mov
mov
mov
or
inc
push
sub
cmp
inc
mov
xor
xchg
loopne
and
int3
shlb
outsl
lcall
add
outsl
pop
push
add
fwait
addb
xor
push
mov
xor
daa
inc
jmp
xchg
lock
pop
push
stos
dec
lds
dec
outsl
push
cmpsl
sub
mov
jnp
ds
int3
imul
mov
dec
stos
nop
jmp
push
lock
adc
mov
xor
jae
or
cmp
nop
cli
lods
inc
mov
arpl
adc
pop
cwtl
sarl
rolb
cmp
outsb
push
and
loopne
rorl
shl
cmc
orb
out
add
iret
xorl
adc
add
mov
xlat
daa
into
mov
adc
sbb
inc
jnp
js
xchg
cmpsb
mov
xchg
mov
popf
leave
fstp
dec
cs
lods
dec
js
or
mov
sub
in
scas
roll
or
inc
outsb
sub
push
daa
lret
xor
movsb
sub
xor
mov
push
jp
cwtl
and
jne
call
inc
push
xchg
or
mov
jmp
or
in
adc
hlt
sbb
jl
inc
sbb
inc
jl
cltd
mov
mov
adc
das
subb
cmc
or
sbb
push
xor
mov
sbb
aad
push
shl
lahf
cmp
jae
dec
cmp
inc
push
pop
es
push
out
add
sub
mov
inc
xlat
xor
mov
ljmp
pop
fidivs
sahf
aad
mov
inc
hlt
jns
movsb
jge
push
subl
add
cmp
add
sub
dec
std
sub
adc
cmp
sub
popf
fmuls
xor
bound
lret
xor
mov
cmp
aaa
out
lcall
fists
icebp
arpl
jb
out
add
sub
int3
subb
stos
dec
add
mov
hlt
cltd
sbb
jne
loope
in
data16
lock
pushw
scas
rcll
es
mov
mov
mov
mov
mov
test
lahf
fwait
iret
lcall
pushf
jg
push
xorl
orl
int3
mov
jae
fdivs
into
xor
pop
ljmp
cld
add
cmp
fdivr
add
xchg
rorl
push
test
repz
das
addb
sbb
ret
mov
jg
mov
sbb
cmp
mov
or
push
cmpsl
loopne
sti
dec
add
xor
or
lcall
jp
call
sbbl
sbb
scas
sbb
aaa
push
repnz
push
jns
loop
or
addr16
mov
cltd
mov
inc
mov
cli
cwtl
cmp
jbe
lods
xor
fistpll
add
dec
adc
mov
dec
mov
scas
sbb
pop
mov
mov
fstl
jbe
movsb
gs
lret
ret
jae
int3
mov
push
sub
rcll
mov
jno
in
mov
inc
mov
adc
sbb
xor
das
adc
mov
loop
mov
mov
mov
mov
dec
cwtl
adc
cmp
lret
push
add
add
jns
push
or
aam
imul
mov
sahf
adc
mov
mov
call
push
inc
cmp
mov
out
loopne
sbb
fs
sub
pop
sbb
loop
or
xor
xor
leave
adc
addr16
ja
adc
xor
std
ret
sbb
cmc
pop
repz
jl
inc
adc
sub
mov
jne
in
mov
popf
push
insb
add
lea
jbe
cmp
pop
fiaddl
push
lock
lods
adc
add
testl
ficomps
ret
test
rol
xchg
lahf
lret
rcrl
aam
inc
xchg
jne,pt
adc
cmp
repnz
insb
jp
sbb
fcmovb
pop
dec
roll
and
jb
mov
cli
xor
inc
add
lcall
repz
sub
fwait
ds
xchg
out
insb
enter
pushf
scas
add
aas
and
ja
stos
sub
xchg
mov
psubsb
les
dec
lcall
mov
and
xchg
push
or
cmp
jae
repz
push
arpl
push
adc
stos
mov
loope
dec
loopne
inc
loope
loop
cld
dec
jmp
mov
pop
fsubl
in
sarl
in
shrb
sbb
add
jae
lods
mov
fs
xor
inc
jns
xchg
js
or
dec
cwtl
jp
mov
shl
lock
jl
mov
int
je
cltd
leave
leave
xchg
fsts
sub
jo
lahf
jns
push
mov
incb
or
out
jge
iret
and
and
pop
rcrb
xchg
and
push
mov
push
mov
mov
mov
mov
mull
mov
insl
out
add
loopne
xor
or
lret
inc
pop
lea
mov
mov
xor
inc
and
jg
xor
pop
pop
mov
arpl
pusha
mov
xchg
fldl
ja
hlt
push
icebp
pushl
mov
je
sbb
pusha
fsubs
push
out
loop
sbb
inc
push
inc
xchg
aam
leave
adc
push
mov
in
adc
or
push
imul
lds
push
cli
push
and
and
mov
pop
add
nop
xchg
add
sub
mov
leave
fcoms
mov
shr
add
mov
aas
mov
sbb
xor
mov
sahf
in
xchg
cld
and
xor
add
xchg
test
push
lds
pop
ja
xchg
fsts
or
repz
std
xchg
mov
out
inc
mov
push
jle
decl
and
and
insb
ja
xchg
cs
inc
ja
push
inc
iret
adc
or
mov
sub
fstl
and
push
add
insb
jb
pushf
jnp
push
mov
cld
ss
shrl
in
fbld
jl
mov
mov
mov
mov
add
rol
sbb
jmp
lret
jp
mov
fidivrs
lahf
inc
mov
add
data16
jecxz
int3
fwait
push
pop
add
arpl
pop
nop
dec
mov
repz
pop
cli
jns
mov
xor
out
inc
orb
mov
decb
in
pop
mov
insb
adc
dec
ds
jg
data16
xor
push
ret
mov
dec
adc
or
jae
hlt
rolb
scas
pop
push
lock
push
movsl
in
jns
test
mov
xor
jle
mov
or
bound
iret
lcall
test
mov
xchg
pop
in
es
cltd
adc
push
push
jne
inc
push
std
outsl
js
out
sahf
rorl
inc
xor
cmpsb
lods
es
jns
cmp
jecxz
test
inc
ja
pop
inc
out
insl
push
jnp
and
call
pop
test
sbb
jnp
push
inc
repz
movsb
shlb
mov
pop
insb
lret
sub
mov
clc
mov
xor
mov
pop
loope
into
aas
push
cmp
subl
je
cmp
xchg
push
stos
cmp
jle
js
xchg
insl
fisubl
xchg
jmp
adc
movsl
mov
mov
jmp
jl
mov
loop
test
xchg
popa
mov
jge
dec
jb
xchg
push
cmc
jg
negb
and
xchg
pop
stos
push
cmc
lods
inc
cmp
xlat
stos
cs
dec
in
lcall
cmpsb
inc
adc
mov
xchg
lock
mov
loop
ret
jo
popf
mov
mov
push
sti
add
sub
comiss
and
pop
popf
sbb
sbb
ss
ds
and
mov
out
push
jmp
push
test
mov
sbb
dec
ja
movl
jns
dec
inc
or
in
rorb
mov
iret
jb
xor
repz
mov
scas
fcmovnu
pop
aam
jmp
xor
adc
movsl
xchg
adc
dec
xchg
aad
popa
imul
xor
jnp
lahf
xlat
mov
add
jae
lock
pop
cwtl
xor
repz
xor
ret
adc
cli
jo
leave
push
js
or
scas
test
cwtl
test
cli
xor
negb
leave
mov
xor
dec
pop
lret
cmpsl
mov
xacquire
popf
ret
int
je
fdivp
in
jae
xchg
bound
xchg
fwait
cli
fidivl
adc
mov
sti
rcrb
rolb
cmp
adc
shl
xor
dec
add
test
shr
inc
sahf
mov
mov
sub
mov
ret
in
push
stos
dec
jmp
or
or
aas
lods
testl
xchg
into
out
cmpsl
mov
or
and
jne
cwtl
popf
lock
into
cs
rcll
add
inc
xchg
push
jo
insl
adc
adc
icebp
xor
sarb
push
push
popa
ds
jb
jecxz
or
aad
lcall
jg
sbb
inc
mov
or
push
fcomps
push
cmpsb
push
arpl
xor
rorl
pop
fs
lods
idivb
enter
clc
pushf
sbb
jl
out
imul
sti
dec
xor
push
cmp
sub
mov
mov
ret
mov
cwtl
mov
push
lcall
pop
rcrb
pop
and
dec
or
jns
shl
push
cmp
fldt
jl
pusha
xchg
aam
pop
mov
out
bound
fyl2xp1
js
insb
mull
xchg
push
mov
outsb
jecxz
push
negl
lret
les
or
int
imul
movsl
xchg
adcb
push
ja
inc
cmp
push
stc
stos
outsb
add
sbb
mov
cli
jbe
push
cmp
andl
push
sbb
inc
fcoml
insl
jns
dec
es
xchg
jmp
mov
add
lods
cmp
outsb
mov
xor
das
pop
nop
fimuls
xor
cli
loop
movsb
int
outsl
lret
xchg
cs
call
add
je
in
jle
mov
push
add
ret
dec
inc
out
mov
pop
pop
dec
add
pop
xor
scas
rorb
addr16
test
pop
icebp
cmp
sub
imul
xchg
in
arpl
aas
inc
cmp
inc
sbb
inc
push
lock
mov
rorl
aas
add
int
lret
out
jnp
das
outsw
jmp
mov
or
das
xor
je
jnp
xchg
arpl
ror
mov
xlat
push
push
in
enter
sbb
ret
pop
ss
iret
dec
dec
mov
xor
outsb
shrb
xchg
popl
test
imul
jne
push
push
lret
xor
maxps
fildl
push
and
aaa
add
stc
sub
xchg
add
inc
jns
pop
fnsave
stos
cmp
add
mov
addr16
lahf
mov
push
mov
sti
div
aad
repnz
stos
add
adc
jnp
inc
cmp
jno
ret
xchg
dec
imul
push
mov
mov
imul
addr16
inc
sub
sub
or
into
dec
subb
mov
cwtl
cld
test
xor
xlat
insb
pop
daa
mov
fsts
stos
dec
mull
nop
xchg
mov
sbb
testl
popf
inc
hlt
sti
int3
gs
sub
xchg
jnp
je
mov
lods
push
add
mov
xchg
mov
inc
dec
leave
scas
movsb
pop
mov
and
mov
adc
push
and
push
cld
lret
imul
sahf
push
stos
roll
cmp
mul
aad
mov
fstl
jp
fsubs
pop
inc
stos
lcallw
inc
sbbb
stos
int3
andb
lods
push
pop
inc
pop
xor
or
or
jns
jb
loope
and
lods
jle
xchg
test
mov
mov
xchg
mov
jb
scas
out
mov
out
pop
pop
pop
das
dec
mov
int3
add
add
daa
cmp
fdivs
jno
mov
sbb
and
mov
pop
mov
sarl
mov
dec
out
enter
sti
imul
cmp
or
inc
inc
lods
mov
mov
in
fs
stos
insl
adc
addr16
adc
lods
lea
push
sub
mov
jge
es
mov
xor
cs
ret
add
aaa
xorb
shr
jle
inc
fucomi
imul
sub
mov
mov
add
enter
xchg
xchg
inc
mov
lret
insl
jne
fbld
and
insb
jbe
xor
jae
or
je
insl
sub
stc
add
mov
jmp
sub
or
inc
cmc
out
push
dec
jle
or
sti
mov
jl
jnp
dec
mov
scas
nop
insb
jmp
mov
fsubr
rol
das
test
mov
push
rolb
cmpsb
and
jae
rcrb
testb
jecxz
xchg
fcom
adc
stos
mov
jecxz
hlt
jg
push
orb
or
jp
cs
repnz
add
jmp
sub
inc
xchg
add
incb
mov
and
pop
xchg
jle
xchg
push
dec
jno
cmp
lds
pop
xor
mov
sbbb
adc
hlt
pop
stc
notb
mov
pop
enter
mov
cmp
jmp
outsb
or
in
mov
push
loope
mov
xchg
lret
cmp
std
add
or
addr16
push
sbb
data16
test
or
lds
xchg
sbb
les
je
push
loope
bound
inc
pop
xchg
lcall
daa
and
add
inc
push
sub
pop
sub
lea
cwtl
stc
mov
dec
gs
mov
inc
insl
add
imul
nop
ss
inc
pop
pop
int3
cmc
fdivrp
mov
cltd
adc
xor
add
add
out
enter
pop
lea
xor
testl
loopne
or
seta
or
adc
xchg
adc
jo
pushf
aad
jae
and
fisttpl
cmp
inc
icebp
xchg
xchg
hlt
mov
sbb
popf
das
sbb
mov
insl
dec
mov
test
xchg
jp
or
mov
sti
cmp
push
mov
lahf
insb
pop
scas
pushl
mov
lret
movsl
jle
xchg
jge
push
jb
pop
outsb
shll
aaa
aaa
jb
jmp
jp
mov
jge
xchg
aad
pushl
jge
iret
les
mov
mov
mov
pop
cmp
insl
or
xchg
sahf
inc
clc
mov
xor
enter
aad
pop
js
pushf
jae
in
call
js
dec
sbb
aaa
sub
jge
push
pop
inc
inc
outsb
sbb
cmpsb
jmp
call
xchg
lods
fwait
sbb
test
mov
rclb
mov
xorb
push
das
ja
push
shl
iret
xor
addr16
mov
mov
bnd
mov
ds
lret
adc
jne
lods
mov
mov
cmp
xor
sbb
test
add
adc
in
sti
lods
ljmp
scas
nop
dec
lods
test
xchg
loop
xor
and
mov
inc
mov
sbb
mov
xchg
add
push
nop
mov
mov
jle
add
mov
stos
stos
je
mov
repnz
dec
lahf
je
cmp
shr
loopne
fucomip
iret
mov
lock
mov
jmp
movsb
sub
jg
icebp
mov
push
rorb
out
ds
std
push
in
dec
adc
iret
or
cltd
clc
fsts
and
add
insl
xchg
push
rorb
mov
push
and
sbb
and
push
mov
loop
push
sti
lret
cltd
sar
lret
aam
mov
pop
dec
xchg
and
outsb
mov
dec
ficomps
insb
xor
movsl
push
rcr
sub
jb
inc
mov
decl
sub
fsubl
mov
cld
push
xchg
or
sub
jns
cmp
in
xor
lret
gs
add
cli
outsl
jo
inc
in
fnsave
inc
call
push
sbb
cltd
cmp
adc
gs
clc
adc
or
mov
popf
arpl
cmc
xor
mov
mov
or
inc
and
lret
ret
lret
pop
fdivs
test
xchg
addr16
pop
mov
push
ss
imul
int3
push
mov
call
pop
push
ljmp
adc
stc
cmp
loopne
sbb
jo
inc
ficoms
or
xchg
mov
jmp
ret
dec
lods
and
clc
sbb
test
mov
fsts
popa
loope
das
inc
push
sbb
pop
jg
outsl
imul
lret
inc
cmp
sbb
push
loope
xchg
out
out
lret
xor
inc
int3
dec
jp
cmp
in
and
xchg
fwait
jge
jp
mov
jno
loopne
and
pop
fimuls
cmp
stc
sbb
sbb
je
jl
push
sbbl
and
and
stos
in
loope
testb
adc
gs
nop
push
jg
adc
push
dec
aaa
jge
xchg
pop
fwait
gs
scas
jp
insl
ret
push
shlb
cmp
mov
dec
dec
dec
pusha
jno
add
scas
into
push
sbb
subb
js
mov
dec
xchg
pop
and
js
dec
inc
pushl
insb
push
testb
or
jmp
pop
int
sti
mov
adc
jl
jge
in
lods
cli
dec
jne
repz
lea
pop
cmp
inc
sbb
cmpsl
cmc
lods
cmp
je
repz
pop
or
mov
sub
dec
xchg
dec
cld
xchg
push
cmp
push
jp
in
inc
pop
jle
test
test
pop
mov
in
mov
ficoml
cwtl
push
pop
cmp
push
xor
fsubs
lret
sahf
push
or
mov
mov
mov
dec
push
gs
adc
pop
pop
js
imul
fimuls
mov
insl
lcall
hlt
xor
lds
push
iret
jp
rorb
dec
pushf
fildll
leave
cvtps2pd
cs
sub
adc
iret
in
in
inc
jmp
insb
cs
loop
lret
iret
xor
sub
push
stos
mov
arpl
test
mov
pusha
repnz
ds
stos
pushf
cmp
in
or
test
outsl
add
loope
icebp
jge
stos
lcall
imulb
subb
sbb
mov
mov
add
sub
rcll
out
sub
cmp
mov
hlt
je
mov
mov
dec
push
ds
cmp
rolb
movsl
sbb
jb
dec
sub
pop
mov
and
movsb
adc
int
out
xor
aam
cmp
mov
pop
push
loopne
inc
pushf
mov
adc
fdivp
add
cld
addr16
jae
dec
fldcw
push
cmp
push
jbe
loopne
pushw
pushl
dec
and
inc
mov
mov
pop
adc
enter
push
popf
shrl
out
jecxz
lea
dec
gs
adc
or
out
mov
les
mov
icebp
sahf
outsb
push
fdivr
xor
jp
push
mov
repnz
push
dec
mov
notl
mov
pop
cmpsb
imul
cs
cmp
inc
dec
lcall
test
fcoml
sbb
notb
aad
jp
data16
mov
std
inc
fsubr
push
repz
hlt
dec
popa
dec
repnz
ljmp
xor
fst
xchg
and
pop
mov
xchg
outsl
sub
dec
pop
cmpl
jecxz
lods
or
pop
mov
push
xchg
enter
xorl
jbe
scas
divb
fnsave
ret
and
ror
cmpsl
mov
mov
and
or
dec
sbb
add
xchg
mov
pop
inc
mov
imul
filds
mov
lret
fidivs
xchg
sub
push
mov
stc
leave
jns
xchg
in
add
jle
pop
dec
jnp
and
ja
addr16
jne
sub
lcall
imul
subb
popa
push
imul
or
in
dec
inc
test
nop
jl
lods
movsb
repz
jge
jle
scas
iret
daa
and
cmpsl
imul
jbe
lcall
and
std
sub
xchg
pop
mov
adc
test
mov
xchg
or
orb
inc
xor
adc
addr16
mov
xchg
scas
insl
cmc
fs
andb
enter
int3
pop
dec
xlat
xchg
pusha
out
mov
mov
mov
dec
mov
and
cmp
jle
pop
std
push
or
cmp
loop
adc
dec
xor
test
lds
sbb
mov
int
or
xchg
cli
mov
jb
repnz
test
dec
into
into
repnz
enter
push
aam
cld
xor
icebp
adc
add
add
imull
sbb
push
cmp
insl
mov
sahf
arpl
mov
gs
adc
mov
xor
jnp
aam
jne
or
cli
jbe
mov
fwait
cmp
nop
shrb
mov
in
into
xchg
das
shrb
aad
scas
sub
rorb
xchg
xor
adc
fadds
inc
mov
xor
and
sti
cwtl
pop
sahf
cs
lock
aam
js
and
cwtl
dec
push
pcmpeqd
pop
push
jmp
movsl
fisttpll
test
cmp
dec
sub
clc
sbb
stc
add
jne
sub
sahf
push
cmp
jmp
mov
adc
loopne
in
pop
xchg
dec
mov
movl
fmulp
pop
pop
dec
and
add
jecxz
test
adcb
and
int3
mov
sub
xchg
cmp
add
or
leave
stos
adc
es
dec
jb
cmp
out
out
lods
push
xchg
mov
cli
cmpsl
aad
lret
shlb
sub
das
xchg
mov
inc
gs
sub
dec
mov
jge
imul
stos
xchg
xadd
jle
call
lret
dec
std
pop
sub
aad
fdivr
adc
aad
mov
je
scas
outsb
sbb
in
inc
stos
aaa
mov
adc
dec
add
fnstenv
lret
adc
sbbl
cld
xor
cmp
shll
std
xchg
or
sbb
xchg
cwtl
mov
out
jmp
dec
mov
jecxz,pn
cli
cmp
fs
mov
mov
scas
shrb
pop
test
mov
pop
inc
xchg
dec
jae
out
sub
into
mov
add
jge
ficomps
inc
mul
or
loop
movsb
fmul
fists
sbb
sub
mov
jle
cmp
sbb
pop
mov
pop
cs
lret
outsl
shlb
sub
xor
clc
xlat
stc
xor
insl
mov
jae
pop
sub
pop
adc
jnp
dec
mov
repz
lock
enter
push
xchg
repnz
mov
or
das
xchg
addr16
sbb
lea
mov
shlb
scas
jge
fstl
scas
sub
rcll
jns
and
out
xor
push
hlt
jp
out
pop
or
lret
dec
push
fstpl
cmp
repnz
cmova
jmp
mov
jb
pop
repnz
fdivrl
pop
out
fldl
add
out
sti
xorl
mov
cwtl
nop
cmp
mov
iret
cli
lret
jcxz
loopne
sub
pop
add
adc
test
jge
pusha
lods
cmpb
aaa
mov
repz
jae
div
je
rcll
les
jg
xor
pushf
pop
push
sub
notb
xor
mov
hlt
aam
testb
lds
ss
mov
daa
jnp
ffree
test
dec
mov
in
mov
sbb
bnd
sbb
sbb
stos
test
inc
jl
lcall
push
sbbl
sub
mov
cltd
or
xor
data16
aad
ret
sbb
hlt
std
xchg
aad
mov
or
inc
lret
incb
ss
idiv
jge
sub
adc
pop
mov
cmc
jb
xchg
mov
inc
out
imulb
mov
mov
mov
jecxz
inc
popf
fistps
and
cltd
push
cmp
push
jno
inc
and
js
int
jne
mov
push
sub
fmuls
xorb
mov
lea
outsl
je
fbstp
in
sub
add
int
lods
into
lds
mov
mov
or
aas
addr16
push
movsb
clc
xchg
lock
sbb
stc
sbb
in
sbb
je
add
pop
ret
cmpsb
fnstsw
jno
push
and
or
cmp
lods
sbb
xchg
sub
mov
sub
insl
daa
push
pop
and
pop
mov
mov
pop
lods
inc
loop
xchg
mov
or
xor
inc
pop
sbb
adc
push
add
pop
sub
lahf
out
imul
sahf
xchg
sub
fsub
jnp
fisubs
or
shll
add
cmp
scas
and
dec
in
push
and
clc
push
ja
sub
push
aad
ja
xor
notl
mov
lcall
push
pop
xlat
movsb
mov
fmul
loopnew
lret
dec
add
jmp
ss
pop
mov
and
inc
fs
loopne
adc
sbb
push
pop
mov
cltd
mov
inc
xchg
jmp
lret
mov
dec
les
xor
push
fwait
sbb
loope
orl
ljmp
cwtl
add
cmp
clc
and
mov
loop
xchg
daa
mov
mov
lods
insb
pop
sbb
aad
mov
jnp
fistps
xor
out
push
add
jge
mov
mov
cmpsl
mov
test
into
mov
xchg
stc
sbb
or
jbe
cmp
out
test
add
into
xor
addb
sbb
cltd
cwtl
sub
jae
test
shrb
pusha
push
pusha
mov
aaa
sbb
sbb
cmpsb
mov
or
and
mov
xchg
jo
xchg
pop
fnstenv
pop
push
adc
mov
cmp
xor
add
mov
loopne
jmp
je
xchg
push
push
pusha
pop
adc
test
dec
rclb
punpcklbw
sub
clc
push
dec
lcall
sti
sub
lods
stos
rol
inc
push
stos
scas
add
aas
shrb
mov
in
or
leave
push
fs
jne
popa
cmp
jle
cmovne
mov
loope
outsb
fdiv
int
inc
jne
stos
xchg
pop
sub
push
jno
lds
cmpsb
jp
pop
push
cld
lahf
inc
je
jp
add
cmp
add
mov
mov
in
mov
add
mov
add
enter
cli
and
inc
sar
xlat
xchg
xor
std
pop
sbb
dec
dec
cld
or
cmp
sbb
notl
cmpsb
test
cmpsl
xor
and
movsl
mov
fwait
lock
cli
ljmp
jnp
or
loop
test
imul
jl
dec
xor
das
shll
scas
push
paddd
fstpl
jmp
adc
push
xlat
jns
sbb
jecxz
sub
imul
sbb
jo
mov
stc
jmp
sbb
mov
xor
push
or
mov
addr16
ds
fs
mov
lods
jb
addb
jb
cmpl
adc
pop
mov
aas
mov
sarb
movsl
or
lds
imul
pop
mov
jle
test
fstpt
and
in
cmp
and
mov
adc
or
mov
fsubrl
push
and
pushf
insb
mov
jnp
test
into
dec
subb
mull
xor
push
cmp
inc
dec
xor
ljmp
aaa
pop
cmp
sbbb
push
cld
addr16
mov
mov
jl
and
dec
inc
addb
add
stc
jp
subl
jne
pop
les
testl
popf
shll
clc
sub
xor
xor
lds
pop
sub
loop
sbb
sti
cmp
out
cmp
insl
cmc
rclb
das
into
jne
lods
adc
push
lods
mov
add
cmp
ljmp
jg
std
outsb
lods
insb
outsb
sbb
adc
or
pop
loopne
or
dec
mov
or
push
cmp
outsb
rcll
sarb
gs
lea
pop
pop
xchg
lret
mov
jnp
ljmp
cmpb
and
fadds
test
inc
imull
movsb
std
mov
pop
loope
inc
pushf
mov
ja
leave
insb
jle,pn
dec
push
lret
mov
shrb
push
fmulp
into
mov
pop
and
lods
push
mull
mov
mov
jge
inc
sarl
lahf
mov
jbe
adc
pushf
bound
jno
in
jns
push
fdivs
insb
inc
adc
negl
dec
sub
mov
cmp
js
stc
je
insl
jbe
loope
cmp
mov
out
inc
sbb
movsb
push
test
sub
repz
add
cmp
jnp
xchg
mov
mov
mov
test
pop
stos
lods
adc
xor
and
lret
outsb
outsl
lahf
mov
jmp
rcll
add
inc
dec
pop
xchg
jo
mov
sub
jmp
shl
out
adc
or
pop
and
lea
imul
jle
jnp
inc
pushf
mov
mov
cmp
pusha
int
pop
adc
rorl
enter
pop
mov
xchg
rclb
cli
dec
xor
pop
push
aad
loope
sbb
pop
mov
rolb
xchg
pushf
ffreep
adc
shll
mov
rcr
inc
mov
xchg
push
in
mov
mov
pop
sub
xor
xor
xchg
pop
sti
in
jnp
mov
inc
adc
gs
jbe
testb
mov
cmpsb
ret
cmp
jl
fsts
mov
pop
sub
xchg
fnstcw
xchg
or
fsubrs
scas
or
stos
dec
pop
adc
xchg
push
testl
jae
fcoms
sahf
fcmovu
sub
std
add
out
fs
pop
mov
cmpsb
ds
cmpsl
pop
movsb
adc
cmc
adc
data16
cmp
and
and
int
sbb
loopne
je
or
iret
aas
sbb
cli
dec
mov
popa
imul
cmpsl
int3
cld
bound
and
jae
insb
jb
dec
add
imull
cmp
xor
or
pop
test
int
icebp
dec
sub
fisttps
cmpl
sbb
gs
push
pusha
lret
mov
or
jl
mov
cmpsl
das
fcmove
mov
pop
int3
shl
or
jo
jo
ljmp
imul
out
add
cwtl
sbb
jg
pop
cmp
jb
xlat
cld
cmpsl
sahf
sub
cltd
cmp
fildll
lcall
or
loop
std
xor
xor
wrmsr
shl
and
adc
xor
scas
ljmp
dec
dec
inc
test
push
ja
or
dec
mov
pop
xorl
xor
mov
and
in
cwtl
lea
jp
outsb
js
incb
adc
addr16
stos
jg
fnstcw
fsubs
inc
adc
testl
outsl
repnz
pop
adc
xlat
or
lock
cmp
xor
int3
cmp
cmpsb
adc
or
lret
mov
loop
imulb
xchg
sub
xchg
in
lret
pop
and
test
or
mov
lret
negl
clc
mov
iret
add
movsl
sub
jae
push
shrl
jl
fstpl
in
ret
testl
inc
mov
push
std
or
hlt
arpl
int3
fimuls
out
jmp
jle
dec
pop
punpckhdq
pop
dec
push
leave
jnp
jge
mov
or
or
push
cmp
mov
xor
inc
stos
sub
lahf
add
rol
test
sbb
push
cbtw
pop
dec
das
mov
push
cmc
cmc
pop
inc
ss
shrl
insl
fsubrl
movsb
push
adc
into
scas
aas
jnp
jecxz
xchg
imul
js
push
xor
mov
dec
inc
mov
sub
mov
out
mov
and
pop
fxam
shlb
scas
xlat
stc
je
push
mov
outsb
mov
cmp
ja
inc
ret
out
outsl
int3
fildl
push
mov
shrl
bound
pop
jecxz
pop
insb
push
lcall
ljmp
insl
pushf
ja
inc
inc
fistpll
xchg
std
mov
xor
cwtl
loopne
lods
fwait
cld
jmp
mov
mov
push
xchg
subb
rcrb
fidivs
sub
icebp
faddl
imul
mov
jb
negb
fiadds
stos
mov
mov
inc
push
push
jno
fmull
scas
mov
mov
inc
cmp
ljmp
push
fimuls
in
sbb
pop
out
pop
stos
pop
dec
xchg
lods
lea
imul
sub
add
sub
pop
into
ja
add
lcall
jg
cmp
cmp
mov
adc
inc
cld
push
inc
mov
mov
jecxz
push
ds
mov
aad
pop
and
dec
xchg
add
pop
and
rorl
mov
adc
test
and
das
xchg
sti
xchg
in
pop
jle
pop
sahf
add
and
mov
les
dec
pop
or
stos
jnp
daa
xor
mov
filds
sub
mov
push
or
xchg
and
adc
sbb
cmp
adc
and
dec
add
xor
pop
pop
int3
or
mov
in
arpl
ds
cld
and
inc
push
in
adc
call
inc
dec
bswap
or
sbb
arpl
stc
arpl
pop
add
inc
inc
bound
fwait
pop
in
mov
mov
and
fcoms
das
push
je
jl
fpatan
mov
pop
xor
imul
dec
push
fcoml
repz
dec
ja
incb
fdivrs
jmp
pusha
cld
push
call
mov
fidivrs
xchg
xor
dec
push
jo
rcrl
pop
aaa
push
cli
xchg
dec
inc
mov
movsb
pop
mov
mov
es
je
test
jns
mov
leave
and
xchg
sbb
aas
jnp
xchg
and
in
jne
arpl
or
mov
pop
mov
lcall
cmp
pop
add
pop
jns
les
call
pop
xchg
dec
pusha
gs
jp
inc
pop
int
mov
stos
or
inc
fisttpl
jb
xor
stc
add
in
fs
add
lcall
push
bound
pop
rorb
push
adc
or
aad
cwtl
stc
aaa
xor
out
pop
mov
das
std
cmp
fsubl
dec
mov
cmp
aas
pop
sub
clc
mov
dec
in
int3
xchg
pushf
sbb
cmpl
std
sbbb
cmc
mov
leave
mov
xor
add
out
mov
pop
dec
inc
fidivl
fstpl
sub
jnp
xchg
pop
in
ret
testb
sbb
cmpl
mov
jg
xchg
mov
mov
and
test
add
jbe
push
ss
push
adc
movups
ljmp
mov
mov
xchg
scas
stos
lock
sub
dec
aam
push
insb
fwait
or
sub
mov
add
outsl
jecxz
ret
nop
add
gs
or
stos
or
mov
pop
pushf
rcrb
rorl
sub
rclb
cmp
dec
mov
lret
dec
lods
sub
outsl
movsl
cltd
mov
push
ds
rcll
xlat
xor
inc
sarl
sbb
mov
or
dec
mov
lret
test
mov
sbb
mov
fidivs
mov
loop
add
cmp
add
out
jb
imulb
xchg
cs
jmp
adc
repz
addb
cmp
lods
jns
pop
mov
dec
fsubrs
lret
loope
popf
outsl
sarb
out
mov
addr16
or
cmpsb
and
int
out
nop
and
cmpsb
insb
and
xor
popf
aas
daa
out
add
cmp
hlt
lret
imul
xlat
cmp
fstl
jecxz
and
dec
xor
mov
inc
test
leave
and
outsl
loop
push
add
pop
sti
loope
outsl
idivb
or
fistl
ljmp
int
lock
xor
fstl
dec
mov
cmp
cltd
xchg
outsl
sahf
cmpb
movsb
jg
push
aam
rclb
pop
mov
shll
push
enter
pop
daa
mov
dec
mov
mov
adc
iret
sub
testl
in
jnp
ret
das
xchg
jo
test
adc
add
add
mov
jmp
inc
mov
and
inc
mov
arpl
add
push
add
sti
and
and
shrb
jge
addr16
das
dec
sbbl
sub
mov
test
orl
lcall
mov
jmp
call
hlt
push
jmp
mov
in
lods
pushl
cmpsl
or
loopne
out
sub
repnz
mov
jnp
dec
aam
loopne
mull
sahf
outsw
pop
dec
je
jnp
pop
push
fwait
xchg
push
push
lcall
mov
mov
sbb
in
add
pop
mov
leave
test
call
into
jmp
xor
mov
je
mov
cmp
ljmp
fwait
push
mov
sbb
out
and
clc
aas
mov
ja
ja
je
icebp
icebp
out
adc
mov
aam
cmp
gs
imul
push
leave
ret
fsub
imul
sbb
loope
dec
lcall
jns
add
mov
dec
mov
gs
sub
ret
xor
aam
xor
loop
push
pop
pop
stos
mov
dec
push
cli
lret
xchg
sahf
stos
sbb
fistl
pop
sub
and
xchg
leave
dec
cmpsb
cltd
imul
inc
shll
sbb
scas
xor
and
xchg
aas
out
pop
xor
push
add
loope
das
out
xchg
mov
fucomp
scas
cwtl
mov
cmc
fsubp
cmp
sti
lahf
pop
mov
jne
popf
mov
jmp
inc
lret
sub
xchg
stos
xchg
or
or
mov
leave
jno
jo
ja
cltd
sub
and
pusha
in
sti
sbb
ja
lock
mov
xor
xor
adc
clc
outsl
stos
ss
push
mov
pop
stos
xorb
sub
pop
cli
add
mov
mov
repz
cmpsb
push
xchg
sbb
cmc
ficoml
arpl
repnz
stos
sub
jecxz
adc
enter
xlat
popa
inc
mov
push
cwtl
aas
aaa
clc
jns
aad
sbb
push
mov
ja
mov
lods
push
rol
push
inc
into
push
mov
dec
push
daa
jg
shr
repz
out
outsb
test
in
aaa
test
jnp
imul
push
jmp
sbb
mov
xchg
mov
subl
adc
int3
repz
into
pop
sahf
mov
mov
sub
pop
jns
shrl
cs
sbb
pop
and
faddp
jae
and
out
fldt
dec
xlat
mov
add
test
out
cmp
mov
adc
fistpll
add
pop
popf
mov
andb
xchg
xchg
pop
push
stos
lods
cs
out
sarb
add
xor
adc
bnd
repnz
jg
inc
mov
xorb
adc
fnsave
fisubl
mov
out
scas
mov
das
ja
pop
fidivrl
pop
sub
lret
cs
xchg
dec
je
jnp
cmpsl
xlat
mov
xorb
arpl
xlat
test
out
jns
jg
ret
push
mov
test
mov
pop
and
out
jge
inc
inc
call
cwtl
or
fwait
dec
inc
pop
js
fcoml
jg
mov
call
xchg
xchg
or
mov
inc
mov
inc
adc
rcrl
leave
stos
mov
and
push
pop
push
cmp
adc
je
mov
adc
test
daa
or
xchg
sbb
jle
fisubrs
push
lock
imul
pop
jl
scas
das
ss
sbb
dec
std
push
inc
sbb
dec
outsb
imul
jae
dec
adc
lock
je
sub
push
fidivl
xor
add
pop
sarl
jnp
mov
je
add
lods
into
add
mov
sub
repz
pop
rcrl
jge
jle
pop
rcrl
jnp
add
jg
xor
mov
mov
inc
std
mov
mov
push
jl
sti
or
loop
ret
aad
lret
movsb
xchg
addl
lods
mov
fidivrl
jno
nop
inc
enter
loope
imull
cli
pushf
shll
js
jmp
and
dec
push
mov
fs
xor
xorl
mov
sbb
push
shrb
icebp
mov
iret
xchg
mov
and
push
ds
push
xchg
es
out
xchg
mov
fadd
filds
outsl
inc
rcr
push
iret
cmp
aas
fwait
adc
aam
decl
cmp
jns
mov
je
leave
push
cmp
ds
orl
stc
jbe
push
dec
fmull
mov
mov
data16
sahf
imul
pusha
inc
mov
dec
xchg
pushl
xlat
clc
pop
es
pop
or
insl
dec
inc
pop
adc
scas
jg
adc
dec
mov
popf
push
add
stc
insb
clc
out
add
outsb
rcll
mov
in
jge
pop
loopne
rcll
pop
adcl
push
out
into
fs
into
cwtl
je
imul
lods
pop
add
push
cli
jne
je
pusha
lds
mov
or
cmc
scas
inc
call
loop,pt
rcll
push
pop
js
fs
or
xchg
dec
repnz
mov
fistpll
je
sub
lret
jns
js
ljmp
imul
addr16
lcall
test
adc
jb
lea
sub
pop
sti
gs
int
sub
std
dec
and
adc
mov
stos
xor
in
lods
fcmove
stos
movsl
mov
rcrl
pushf
dec
nop
xchg
pop
and
jb
fdivp
lea
dec
jge
jle
mov
call
in
dec
add
and
movsl
push
test
bnd
mov
dec
outsb
or
testb
dec
and
xchg
call
mov
jle
out
mov
mov
call
push
out
arpl
add
repz
xchg
jno
sbb
lret
shl
call
xlat
sbb
enter
push
lds
mov
in
cmpsb
xor
lret
scas
xchg
clc
popf
addr16
roll
cld
stos
pop
mov
jecxz
arpl
dec
push
jb
rol
pushf
rcl
stc
out
sub
test
and
jecxz
addr16
loopw,pn
cwtl
cltd
push
sub
jns
cs
lret
aam
cmpsl
imul
push
stc
mov
stos
pop
jmp
pop
push
xchg
orb
hlt
das
ret
sub
fcomps
ja
leave
push
repnz
add
mov
mov
fmull
sti
test
dec
inc
ret
icebp
inc
insl
addr16
pusha
mov
push
sub
lock
add
repz
adc
and
addl
sub
subb
cmp
jne
push
xchg
cli
mov
dec
xchg
mov
or
in
pop
dec
sbb
rolb
pushf
push
inc
gs
sbb
rorl
insl
mov
mov
mov
lock
inc
dec
xchg
stc
stos
mov
and
mov
aam
test
daa
xor
mov
jecxz
fistl
jmp
sub
clc
mov
jl
sbbl
lcall
out
aas
pop
mov
push
jge
push
jmp
imul
xchg
sti
sti
in
mov
mov
pushf
stos
mov
jg
jle
cmp
push
cmpsl
sub
dec
mov
dec
test
or
mov
mov
ds
bound
ret
cld
std
jae
sti
rcll
dec
adc
mov
repz
push
or
inc
mov
or
loopne
and
filds
sbbl
das
jp
stc
pop
enter
and
lds
or
std
dec
adc
xchg
into
sbb
fisubrl
lock
je
add
or
xor
sbb
mov
dec
lahf
jo
popa
in
adcb
jbe
out
inc
sahf
jle
fdivl
mov
jbe
sbbb
jo
push
fdivl
das
adc
inc
aad
outsl
loopne
dec
sbb
mov
in
push
aad
dec
cltd
pop
sbb
fwait
hlt
mov
mov
js
adc
icebp
mov
ss
or
imul
int3
cld
mov
stos
xor
out
arpl
cwtl
or
jo
dec
lods
mov
icebp
mov
je
mov
jns
test
jno
iret
push
mov
mov
jmp
sub
outsb
jmp
repz
pushf
lock
adc
jne
jecxz
pop
push
hlt
lret
xchg
out
pop
xorb
std
or
hlt
int
or
stc
cltd
les
inc
negl
sbb
xor
mov
or
cmp
dec
rorl
xchg
fsts
inc
sbb
es
enter
bnd
dec
xlat
dec
fsubrp
loop
mov
jne
les
aam
jg
loopne
add
mov
sub
ljmp
xchg
or
cmc
icebp
movsl
mov
sub
mov
test
adc
or
or
inc
aam
cltd
ljmp
mov
loop
cld
movsl
mov
add
lret
in
nop
mov
sub
mov
jo
mov
xor
mov
mov
push
std
negl
cmp
push
imul
insb
jne
pop
pop
icebp
dec
sbb
addr16
in
dec
repz
cwtl
xor
fldl
cmp
pop
jo
fcoms
sub
inc
scas
addr16
inc
lcall
pop
mov
xchg
test
add
mov
rol
aad
jmp
adc
insb
enter
adc
iret
test
fndisi(8087
cmp
pop
flds
in
xor
push
mov
bound
xchg
in
dec
dec
xor
and
ss
push
xor
sbb
clc
inc
mov
adc
out
sub
dec
inc
cmpsb
rorl
clc
cmp
filds
adc
cmp
mov
mov
aaa
rcr
dec
push
bound
outsl
imul
add
stos
add
stos
adc
loope
out
push
aam
sbb
push
std
aam
push
hlt
xlat
or
pop
sbb
cld
sbb
fdivs
push
cli
cmp
stos
sbb
and
cltd
cmpsl
or
and
pop
and
gs
mov
jns
add
std
leave
pusha
test
and
pushf
pop
mov
jge
xchg
sbb
scas
dec
int
inc
pusha
popf
js
adc
dec
inc
imul
inc
or
clc
leave
std
jmp
imul
loopne
push
sbb
add
jg
xchg
lahf
mov
cmp
je
adc
rcrb
imul
imul
ds
std
push
ljmp
andl
cmp
mov
js
add
push
test
add
jecxz
xor
inc
push
inc
outsb
data16
insl
or
cmp
bound
cmp
sbb
pop
lods
jbe
and
lock
insb
adc
jecxz
pop
incl
add
sti
jp
ret
inc
gs
sub
sbb
cmpsl
inc
and
mov
outsb
and
cmp
or
addb
or
xor
and
into
lods
les
inc
loop
mov
mov
jae
dec
movsl
sbbb
or
out
fbld
sti
cmp
add
out
or
jmp
fisubs
data16
mov
sub
in
pop
xchg
test
movsl
cli
int3
pop
sbb
mull
sub
jo
fmuls
mov
jae
adc
or
adc
mov
mov
cmp
mov
nop
fcmovnb
sub
jae
pop
sub
cmp
cmpsb
mov
fiadds
outsl
inc
cwtl
mov
xchg
mov
addr16
sbb
and
test
scas
push
mov
xchg
mov
cmp
imul
mov
pop
scas
call
dec
enter
movsb
fnstsw
cmp
mov
mov
dec
cs
out
adc
sbb
pop
ljmp
dec
int3
scas
mov
add
andb
mov
stc
cmovb
push
lods
cmpsl
add
scas
jl
adc
sub
pop
mov
sarl
xor
sbb
or
jne
psubd
les
xchg
enter
cmp
sbb
cwtl
dec
daa
fnsave
sbb
adc
call
out
lcall
cmp
fists
iret
mov
add
lods
fisttpl
xchg
nop
sbb
mov
mov
cmp
dec
xchg
adc
mov
and
mov
xchg
inc
mov
sbb
mov
mov
rclb
xor
int3
adc
test
movsb
daa
adc
jmp
fucomi
push
push
sbb
xchg
xor
inc
push
xchg
std
outsb
clc
mulb
repnz
push
jecxz
daa
jl
xchg
fs
sub
dec
and
cld
std
shlb
xor
mov
sub
insl
clc
pop
inc
inc
addr16
hlt
and
stos
cli
xor
cmpsb
or
pop
push
mov
lcall
roll
fisubrl
mov
dec
insb
xor
data16
icebp
sbb
inc
std
out
jno
je
test
mov
cmp
mov
dec
stos
gs
push
fimuls
push
pushf
mov
inc
add
mov
faddp
stos
mov
loopne
test
mov
into
cltd
rolb
jae
dec
pop
sahf
mov
cmp
lods
cmpsb
das
je
or
cmpsl
mov
add
dec
out
or
dec
mov
xchg
or
sbb
cmp
arpl
sub
jmp
and
repnz
or
mov
mov
enter
sbb
or
jecxz
add
lahf
fists
jo
dec
pop
lea
xchg
enter
lods
mov
test
fwait
or
push
cwtl
shrl
push
nop
js
inc
jne
sbb
cmc
xchg
mov
push
xchg
in
pusha
or
je
into
push
cmp
adc
push
das
arpl
xchg
mov
mov
push
subb
lea
and
push
sbb
ds
loop
xchg
or
xorl
xchg
adc
xchg
push
stos
adc
div
mov
mov
add
mull
in
pop
cmp
mov
jo
xor
xor
gs
enter
inc
fisubrs
inc
fstpl
sub
jge
mov
inc
out
fs
test
out
mov
mov
mov
mov
mov
cmpsb
aam
mov
and
insb
icebp
xchg
out
jne
mov
std
mov
xchg
outsl
vphaddwq
cmc
push
lret
in
aad
sub
and
xor
bound
adcb
push
lahf
in
mov
popf
mov
in
sahf
andb
and
cmpsb
mov
xchg
sbb
pushf
sarl
push
or
dec
sub
gs
sbb
jle
iret
xchg
pshufw
pop
xchg
jle
out
pop
inc
mov
iret
cmp
sub
iret
stos
push
push
xchg
adc
je
test
jae
stc
push
mov
mov
mov
jp
fstl
iret
stos
push
dec
mov
jno
inc
imul
pop
jo
xor
aaa
push
adc
xor
sbb
jle
stos
adc
aas
pop
xchg
subl
stc
cmp
and
les
jb
and
mov
xor
gs
xchg
jae
sbb
sub
fs
out
iret
test
push
adc
mov
mov
xchg
add
loope
push
clc
mov
cmp
add
inc
xor
xor
pop
mov
push
loop
sbb
dec
xchg
jb
or
test
inc
movsb
cli
cmc
inc
je
xlat
out
mov
cli
in
fbld
lret
clc
sarb
xor
icebp
stc
xchg
lock
dec
mov
inc
scas
cld
lret
stc
pop
nop
int3
mov
aas
push
jo
or
into
mov
mov
test
cmp
data16
ja
or
in
mov
dec
mov
pop
sub
adc
pop
nop
mov
lahf
xchg
mov
cmp
call
pop
sbb
pop
js
sbb
jg
mov
fdivrl
ret
insl
xchg
and
lea
cmpsl
lods
mulb
add
pop
mov
out
push
pop
pop
sub
in
pop
fmuls
aad
test
add
add
jecxz
ret
or
xor
sbb
pop
add
cmpsb
mov
mov
inc
dec
push
xchg
cmp
push
cmp
cmp
push
popa
iret
jnp
jns
or
dec
mov
cmpl
hlt
sbb
and
jl
stos
push
das
xchg
movsl
sub
or
ja
cmp
xchg
or
pushf
stos
shlb
inc
add
pop
mov
or
sbb
gs
push
repz
push
popw
movsl
ret
arpl
shll
lcall
fwait
add
adc
pusha
inc
cmp
inc
sbb
roll
dec
imul
shll
imull
rcrl
jle
xchg
cs
cmp
adc
test
sbb
mov
adc
push
jae
push
mov
scas
out
or
fsub
cmp
jbe
cwtl
mov
add
mov
fwait
nop
jmp
push
pop
movsb
cmp
mov
jnp
cmp
shrb
dec
jmp
cmp
shlb
cmc
pop
add
mov
mov
inc
add
imul
lock
out
test
adc
or
cmp
sti
seta
imul
xchg
test
mov
xchg
stos
cmp
add
fnstsw
push
cmc
testl
div
sbb
aam
mov
mov
mov
push
push
ljmp
xor
fbld
jns
cmpsl
movsl
mov
adc
and
lds
vpunpcklwd
mov
dec
es
or
cmp
fucomip
xlat
pushf
iret
xchg
push
lods
rcll
in
adc
or
test
inc
lods
in
push
mov
movsl
mov
and
adc
into
pop
or
sub
sub
mov
cmp
jg
ficoms
cmp
arpl
mov
mov
mov
mov
mov
xchg
and
mov
shrl
dec
xchg
test
arpl
pop
jge
cltd
and
das
insb
sti
sbb
cwtl
pop
xchg
cmp
stos
in
mov
pop
add
sbbl
lcall
dec
pop
out
pusha
jg
fisubrl
mov
ret
mov
inc
or
jecxz
sub
je
sub
test
add
dec
dec
out
jnp
inc
dec
sbb
and
mov
lret
in
fdiv
repz
mov
lock
rorb
imul
repnz
sarb
mov
js
mov
iret
repz
push
je
shlb
pop
icebp
xchg
xchg
inc
or
rcll
cmp
shrb
lds
or
jmp
test
inc
out
jecxz
rcrb
push
mov
clc
dec
sub
jo
jge
test
inc
and
pop
sub
and
outsb
je
pop
mov
cwtl
mov
sbb
add
add
scas
sbb
mov
call
push
iret
push
inc
pop
sbb
mov
in
or
dec
ljmp
pop
aaa
inc
into
mov
iret
xor
scas
sti
cmp
jmp
mov
lea
movsl
xor
adc
iret
int
or
shr
add
sbb
imul
scas
mov
and
and
stos
mov
mov
xchg
daa
push
test
xchg
sbbl
xchg
jp
fnstenv
mov
das
push
fsubrs
mov
push
jno
mov
dec
mov
fwait
mov
dec
mov
sub
mov
jmp
jns
push
inc
enter
pop
inc
mov
dec
jnp
mov
in
fsubp
xor
dec
lahf
lcall
ficomps
out
notl
iret
clc
jbe
push
and
enter
sub
fidivrs
scas
js
mov
inc
jbe
js
push
cmp
adc
sub
mov
or
jo
pop
cmp
mov
roll
xchg
jae
sbb
jb
addr16
insb
idiv
jne
rcr
jb
inc
xchg
pop
push
adc
and
int
pop
xorb
jmp
adc
rcrb
mov
call
and
fcom
lods
add
call
pop
sbb
mov
lods
sub
mov
xor
sti
and
daa
mov
cmp
arpl
push
iret
jae
pop
mov
xor
pop
outsb
xchg
negl
outsl
in
out
pop
jne
push
in
push
aas
mov
fwait
popa
xor
sub
sub
enter
dec
ret
popf
lds
outsb
pop
jecxz
jmp
cmp
repz
and
adc
and
subb
add
icebp
fsubl
inc
hlt
gs
mov
cli
sbb
sbb
mov
xlat
loope
mov
orl
rcrl
aam
jle
testl
inc
aas
jne
mov
movsl
pushf
jns
in
faddp
cmp
cmp
xchg
mov
ja
cmc
mov
mov
leave
in
cli
sbb
iret
sub
push
or
cmc
dec
inc
out
add
mov
dec
dec
fsubrs
or
loopne
fiaddl
push
mov
mov
std
ds
jmp
cmp
fldl
out
add
push
std
jne
std
sub
sub
jnp
je
add
pop
mov
lret
inc
imul
out
pusha
in
pushf
dec
call
ret
mov
jp
cmp
sbb
mov
loop
mov
outsl
xor
push
add
xor
add
ret
adc
aaa
push
mov
xchg
call
or
filds
sbb
popa
or
shlb
aad
mov
inc
clc
lret
mov
addr16
mov
jmp
and
cli
xchg
subl
xlat
das
cwtl
add
out
inc
adc
fwait
add
push
lds
adc
cmc
loop
jno
insb
cmp
pop
sahf
stc
fdivs
mov
add
mov
sar
loopne
enter
ret
adc
mov
mov
out
mov
mov
jp
push
xlat
ss
sub
push
adc
sti
fldcw
mov
adc
xor
add
in
xchg
cmpsl
stos
jmp
sbb
pop
inc
jmp
test
xlat
iret
or
push
sub
insw
lds
pop
jp
xchg
push
scas
in
and
mov
push
pop
sub
adc
std
add
push
bound
pop
push
sub
rclb
or
hlt
sarb
cmpb
jnp
and
mov
out
clc
mov
xor
push
shlb
jp
push
ret
push
sbb
scas
pop
lods
mov
xlat
shl
mov
subb
shll
loopne
mov
lods
jnp
inc
add
cmp
xor
xchg
xor
dec
xchg
andb
fcoml
jne
mov
mov
pop
add
pushw
insl
mov
jae
iret
or
mov
int
bound
aam
pop
insb
push
push
cmp
sub
and
pop
leave
mov
add
mov
mov
repnz
pop
fistpll
loopne
nop
stos
pop
or
cmp
inc
insl
and
call
dec
mov
xchg
jne
jle
and
xchg
xchg
xchg
leave
add
mov
lcall
rorl
jge
xchg
rcll
ja
mov
ljmp
rolb
in
popf
and
xor
push
test
mov
ljmp
mov
fs
aam
cmp
loop
addr16
dec
sub
pop
jge
mov
outsb
add
sbb
scas
test
xor
pop
sub
int3
das
lahf
dec
jno
shr
fucom
or
add
or
pop
mov
xor
loope
fcomps
jmp
mov
xlat
jle
repz
xor
cmp
cmpl
pushf
cmpsl
jmp
pop
fbstp
inc
push
sub
imul
in
xchg
aam
jg
jo
gs
lods
mov
mov
mov
mov
and
sbb
jnp
out
pop
push
loop
mov
shll
xchg
push
loop
fs
pop
lods
fldt
adc
or
dec
sbb
js
or
icebp
pop
in
cmp
jbe
mov
fs
inc
lds
out
dec
or
outsl
inc
inc
sbb
adc
loope
sbb
pop
xor
adc
and
mov
loopne
shlb
push
jmp
mov
out
jno
dec
push
xchg
call
jmp
cmpsb
mov
int
push
cwtl
sub
sbb
add
addb
imul
dec
dec
out
shll
js
loop
dec
pop
fucom
mov
cmp
pop
mov
andl
pushf
jns
repnz
stos
inc
int3
push
jecxz
pop
dec
xor
cltd
mov
sub
icebp
mov
out
imul
int
stc
int
jmp
pop
mov
fld1
mov
cmp
xor
mov
cmp
mov
test
cmp
dec
adc
or
mov
push
ss
and
rcrb
jmp
daa
enter
mov
sub
js
push
rol
sub
mov
xor
sbb
add
inc
popa
cs
jmp
outsb
adc
cmpsb
fdivrl
fcom
stos
fsts
xchg
mov
dec
daa
out
je
cmp
shlb
xchg
push
add
loopne
pop
or
nop
jae
xchg
xlat
add
aas
inc
cs
pop
xchg
jnp
outsl
dec
xor
sub
cltd
adc
outsb
push
jbe
addr16
and
sbb
sbb
mov
lods
jecxz
enter
out
stos
rorb
and
xor
andb
sub
and
inc
fucomip
adc
mov
andb
leave
push
dec
jae
mov
mov
out
roll
lcall
mov
test
sti
outsb
adc
repnz
push
mov
insl
sti
lods
inc
mov
or
xchg
das
es
cmp
and
popf
add
enter
dec
and
ja
jg
dec
mov
push
inc
lret
fisubl
testb
push
mov
mov
dec
mov
fcomip
push
cwtl
cmpsl
mov
push
pusha
inc
roll
and
xchg
cmp
cwtl
lods
cmc
jg
mov
stos
dec
xor
xchg
lret
arpl
sbb
mov
arpl
ud2
xchg
add
xchg
cltd
rcl
int
ja
mov
call
pop
xchg
inc
shrb
imulb
in
repnz
jno
sub
dec
xchg
jb
idivb
and
aam
pop
insl
sahf
dec
add
cmp
or
jnp
mov
inc
push
add
mov
inc
or
mov
ss
xchg
push
jp
jmp
fs
dec
aaa
or
cs
push
sbb
jb
out
cwtl
fadds
popa
push
outsb
test
push
test
adc
and
mov
fildll
fmuls
dec
loope
sub
push
repz
sub
pop
loop
std
sbb
enter
add
sbb
pushf
cltd
dec
mov
push
stos
inc
movsb
push
inc
dec
mov
jg
leave
inc
std
shll
mov
sbb
adc
inc
xchg
xchg
pop
js
add
repnz
mov
out
mov
sub
fcoms
sbb
inc
test
dec
push
push
fdivs
dec
aam
enter
or
cwtl
mov
out
mov
jno
xchg
lods
xor
push
cmp
out
clc
test
inc
and
push
jmp
push
mov
cmc
lcall
jge
mov
out
push
pop
adc
push
and
enter
inc
xchg
out
cmpsb
jnp
fistpll
lret
mov
and
push
test
jb
and
sub
sub
data16
mov
shrb
push
mov
sub
mov
xchg
and
xchg
inc
arpl
mov
push
or
out
push
or
sbb
or
jp
cld
jle
pop
or
jns
lea
shll
inc
movsl
or
adc
fs
pushf
mov
addr16
stc
push
aaa
pop
and
sub
shrl
shlb
push
xchg
int
dec
jae
mov
jge
test
cmp
fidivs
cltd
add
stc
scas
or
fidivrs
mov
and
or
sbb
cmpsl
cmp
sub
arpl
push
loopne
pop
bound
xchg
cld
lds
pop
cmpsl
dec
into
or
and
xor
dec
mov
loop
movsl
test
jne
inc
std
mov
xor
jns
scas
mov
pop
and
stos
jo
pop
cmpsb
add
mov
pop
imul
xchg
dec
pop
repnz
enter
fildl
fnstcw
mov
outsb
es
leave
imul
outsl
cmp
insl
add
movsb
fistps
sbb
pop
pop
enter
and
out
data16
scas
fadd
or
daa
adc
xor
insl
pop
adc
xlat
sbb
dec
jl,pn
cmpsl
imul
aas
jb
mov
xor
mov
cmp
sbb
addb
filds
les
adc
mov
repnz
mov
in
xorb
in
daa
sub
and
outsl
jp
push
mov
mov
pusha
jp
sarl
test
mov
push
add
test
sub
gs
mov
cmp
sub
repnz
cmp
pushf
jp
sub
mov
or
sbb
rclb
xchg
imul
std
mov
repz
fistl
orl
inc
dec
mov
inc
mov
adc
cmc
addr16
out
inc
jns
pop
loope
mov
fnsave
out
jb
data16
lea
xor
sub
es
jae
loope
dec
push
int3
fwait
adc
fildl
loope
sub
ja
cmc
fwait
adc
xor
xchg
stc
mov
sub
and
or
dec
xor
push
out
dec
cmp
mov
adc
sbb
test
mov
jns
mov
clc
mov
push
push
sbb
cli
stos
add
pop
mov
xchg
sbb
enter
repnz
ret
sti
push
mov
add
push
mov
lea
scas
sbb
cmpsb
hlt
aam
xchg
stos
jp
ss
dec
fsubs
loopne
adc
cmp
sub
out
out
outsl
pop
test
aad
lods
add
scas
jg
mov
repz
repnz
xchg
push
sbb
sti
cmpsl
push
pop
sbb
sub
nop
dec
add
bound
mov
bound
sub
bound
pop
and
jne
xchg
outsb
or
fwait
in
add
lock
and
jnp
add
out
pop
das
mov
dec
cmc
sub
mov
leave
pop
sbb
push
fs
xchg
lcall
adc
lahf
lcall
movsb
lret
pop
sbb
mov
mov
push
test
xchg
aam
mov
and
cmpsl
fcoml
pop
jbe
or
or
rol
scas
pop
xchg
into
icebp
and
in
fnsave
jp
stos
dec
mov
lcall
hlt
icebp
int
add
sbb
pop
cmc
xchg
nop
mov
test
mov
fwait
xor
or
lret
xor
and
movsl
jmp
xor
scas
xchg
bound
push
mov
out
inc
jbe
loop
cmp
mov
push
sahf
hlt
inc
mov
std
ret
xchg
xchg
into
clc
xchg
mov
wrmsr
push
jp
subl
aam
aas
int
mov
mov
imul
mov
pushl
lds
dec
dec
sbb
fucomip
cmp
subl
pop
repz
cmc
and
sbb
lock
rcrb
jecxz
movsl
xor
and
mov
add
mov
dec
mov
insl
xchg
ja
lahf
orb
aas
call
mov
xor
inc
push
cmp
adc
repz
xor
push
bound
dec
xchg
cmp
test
fldl
mov
xor
int
insl
fiaddl
jo
ret
fistl
dec
test
inc
cmp
ljmp
repnz
mov
xor
or
fiaddl
scas
insl
jmp
inc
or
inc
ret
inc
rcl
lock
or
dec
mov
mov
nop
fxch
out
push
movsb
fcomps
push
jecxz
or
xchg
xor
cli
je
sbb
add
push
inc
jecxz
jmp
push
and
push
pop
repnz
push
outsl
lds
inc
pop
push
xor
sbb
pop
adc
jmp
dec
pop
dec
jns
mov
mov
jecxz
jg
les
cmc
push
mov
dec
cs
aad
movb
insb
sti
jg
imul
icebp
aaa
icebp
in
jae
pusha
daa
sub
test
mulb
sub
jmp
pushf
int3
cmp
xor
cmp
add
xchg
push
pop
adc
sar
push
js
push
xchg
pop
xor
ret
ret
pop
add
jg
push
int3
jecxz
pop
adc
arpl
sahf
or
pop
dec
xor
lea
inc
inc
loop
inc
xor
pop
bnd
cld
mov
mov
test
add
lahf
and
jl
jecxz
addb
push
mov
xchg
jbe
sub
jge
sahf
stos
or
ss
push
daa
ss
jmp
in
inc
sbb
test
xchg
mov
pop
negl
jecxz
or
mov
mov
aaa
inc
or
fsubl
shlb
iret
ja
sbb
insb
test
xchg
jl
shlb
aaa
out
sub
popf
and
pop
popf
pop
push
jle
push
cmp
push
adc
jp
popf
cmp
jmp
sti
add
mov
mov
mov
lods
jge
jno
xor
add
jg
mov
and
or
insl
xchg
jl
movsb
push
sbb
sub
push
mov
inc
test
push
lahf
xchg
push
inc
lods
jo
mov
sub
pop
xchg
xor
sarb
aaa
pop
sbbl
add
dec
push
nop
pop
xchg
or
das
aaa
aam
sub
sbb
cmp
les
jb
sub
mov
mov
movsl
and
mov
neg
and
fs
pop
mov
dec
sbbl
and
scas
out
or
pop
pop
loop
das
sbb
cmpsl
scas
sahf
ret
pusha
mov
push
daa
gs
mov
daa
bound
mov
daa
mov
arpl
cmp
inc
mov
adcb
or
push
test
inc
mov
cltd
incb
jnp
mov
sbb
mov
and
pop
jle
mov
mov
dec
call
jecxz
mov
mul
mov
arpl
xchg
cwtl
shl
stc
outsl
mov
je
pop
pop
push
push
imul
adc
in
out
arpl
imul
scas
dec
icebp
dec
loopne
repz
pop
sub
int3
test
mov
jge
mov
scas
pop
movsl
xor
int
mov
jecxz
adc
movsl
xor
mov
and
sub
sarb
mov
push
mov
out
das
aaa
lcall
int
test
push
cs
jge
pop
adc
addl
in
jo
fistpll
dec
xchg
test
orb
push
pop
push
adc
inc
in
push
xor
xchg
push
mov
push
popa
call
pushf
lret
mov
in
cmc
push
pushf
inc
lock
enter
daa
xor
add
mov
push
ss
push
das
loop
arpl
je
ss
pop
cmc
popf
mov
xor
imul
cmp
mov
scas
ljmp
stos
inc
push
sub
fs
out
sub
cmpsl
imul
fwait
sbbl
ror
das
xchg
nop
cs
sbb
cltd
or
insb
pop
pop
leave
imul
outsb
add
push
jg
mov
cld
pop
cwtl
inc
fucom
or
lea
lcall
lds
sub
test
lcall
rcrl
or
sbb
push
push
adc
jle
xchg
adc
dec
jbe
cmp
push
jnp
push
mov
pop
out
or
pop
ret
sarb
ds
ljmp
xchg
lret
pinsrw
outsl
mov
pop
mov
aad
mov
xor
ret
std
dec
imul
mov
lds
xchg
fistps
stc
mov
in
mov
and
push
xchg
push
mov
push
insb
cmp
sub
test
pop
adc
add
mov
fldl
add
loopne
mov
daa
ss
lahf
lret
out
pop
add
inc
xlat
andb
xchg
mov
xchg
icebp
mov
and
sarb
and
repz
mov
sbb
out
jae
xor
jp
repnz
cmp
cmp
mov
xchg
mov
daa
imul
outsb
lock
mov
lret
ja
sub
add
out
jnp
rcrl
les
adc
shll
dec
dec
movsl
in
mov
stos
call
das
jg
scas
xor
arpl
in
repz
imul
leave
xchg
push
mov
cld
mov
mov
fs
ljmp
push
sub
sti
out
movsb
mov
pushf
les
test
mov
mov
dec
ss
fs
xchg
lret
mov
cld
cmc
fcomps
out
xchg
aaa
pop
shll
rcl
xlat
jae
jge
xor
add
xchg
mov
jl
out
push
jge
xorb
xchg
ret
std
les
pushf
inc
imul
push
sbb
sub
cli
jb
loopne
fsubrl
pusha
pop
fdiv
ja
pop
pushl
cmpsb
pop
and
pushf
cmp
xchg
lods
pop
shlb
sbb
sbbl
adc
pop
in
dec
mov
addr16
cltd
lcall
scas
repz
and
or
mov
fldenv
sub
or
fsubs
dec
nop
jecxz
movsl
lock
ja
scas
and
add
cli
aas
into
add
in
xchg
out
insb
scas
cmp
test
sub
std
out
mov
adc
jae
xchg
dec
mov
sbb
sarb
push
adc
out
add
insb
push
jge
add
add
fwait
mov
jg
add
mov
xlat
mov
aas
push
adc
and
arpl
repnz
xchg
mov
lods
pop
cmp
lret
test
cltd
sub
push
and
insl
adc
mov
dec
sub
addr16
jne
jbe
fsubrl
int3
lods
fucomip
dec
lods
loopne
test
cwtl
mov
mov
cmc
adc
mov
aas
cmp
lcall
int
sahf
sub
add
cs
das
xchg
jmp
mov
test
dec
loopne
jp
test
xchg
aad
pop
mov
jp
lock
lock
mov
clc
addb
jnp
jns
sub
ljmp
jnp
push
add
jmp
and
dec
mov
pushf
insl
adc
sbb
inc
or
stc
mov
or
adc
test
pop
inc
xor
jl
add
cmp
iret
mov
test
fcomps
aad
ret
mov
push
mov
fmull
sub
dec
mov
inc
movsl
mov
jecxz
or
sbb
mov
dec
mov
sbb
pop
ds
inc
sbb
sti
pop
in
es
test
test
xlat
mov
mov
sbb
xor
loopne
data16
push
dec
inc
pop
popl
push
pop
out
lahf
sti
test
mov
fildll
aas
add
and
mov
ret
fs
add
xchg
xchg
sbb
jmp
arpl
cmp
fistpll
cmp
je
out
sub
call
jno
push
int
fbld
sub
jne
sub
cltd
movsl
adc
mov
inc
dec
int
ret
mov
cs
adc
xor
jmp
sbb
mov
xchg
mov
pop
lret
jecxz
rorb
jg
popa
jns
mov
push
cmp
mov
inc
push
dec
xor
popf
lea
cmp
pop
mov
inc
in
jno
jno
les
jno
fisttps
add
and
punpckhbw
push
xchg
lret
pop
mov
sbb
movsl
jb
rorb
xchg
repnz
xchg
mov
icebp
xchg
lret
xor
jno
popa
in
addr16
sbb
adc
mov
push
das
dec
jbe
and
mov
fdivrl
int3
sarb
push
fwait
aaa
gs
or
dec
and
fiaddl
cwtl
add
xor
mov
xchg
in
add
scas
push
arpl
push
lods
stc
add
mov
cmp
rcr
ss
mov
cwtl
out
iret
rcll
jnp
xor
xor
or
mov
or
mov
and
cld
mov
sarl
jne
sbb
popa
dec
out
inc
in
iret
xlat
out
or
enter
scas
test
negb
in
addr16
adc
stc
cmp
movsb
cltd
jne
rorl
loope
loop
mov
std
sbb
dec
xor
out
push
xchg
fwait
into
mov
bnd
push
inc
add
sub
fcoml
cmp
dec
mov
push
add
es
outsb
add
and
pop
mov
mov
push
mov
mov
out
cltd
jno
inc
mov
xchg
and
leave
mov
test
xor
xchg
and
mov
adc
scas
adc
add
inc
jmp
in
mov
cmp
pop
aaa
cli
fs
fsubs
sarl
shl
jns
inc
mov
adcl
add
lds
push
or
mulb
jns
push
inc
out
mov
daa
jl
mov
jmp
shll
mov
xchg
mov
xchg
adc
out
decb
stc
mov
fwait
sbb
sbb
cmc
add
jbe
fldcw
xor
and
scas
adc
in
xlat
movsl
push
lret
int3
out
xlat
adc
scas
in
leave
insl
jmp
add
daa
in
jl
jp
push
mov
mov
js
test
decl
pop
mov
pop
arpl
push
jmp
movsb
dec
jl
fwait
cmpsl
or
insb
cmc
das
add
insb
rcrb
gs
testl
into
addr16
add
or
mov
fsubs
mov
fs
mov
push
mov
or
push
mov
and
out
and
push
gs
push
test
mov
push
int
mov
loopne
arpl
and
cmovne
movsl
dec
sub
add
pop
or
push
insb
aad
negl
les
cmpsb
hlt
cmpsl
dec
out
loopne,pt
bound
xor
sti
add
in
pop
mov
mov
sbb
pop
out
or
aam
test
ficomps
loopne
xor
idiv
les
iret
cmp
cli
cld
aad
nop
int3
push
aas
cmp
in
jns
insb
add
ljmp
imul
push
rorl
cmp
cmpsb
xor
xchg
mov
inc
aas
xchg
mov
inc
xor
fsubs
xlat
int
testb
add
enter
rorb
pop
push
push
cmp
imul
mov
mov
jno
call
mov
dec
outsb
in
std
sbb
mov
fcomps
jge
bound
cmc
mov
imul
jl
push
cld
in
push
inc
clc
shll
clc
scas
dec
jle
pop
add
xor
cmpl
aad
mov
mov
movsb
cmp
mov
jg
sarb
or
mov
jnp
sbb
sti
lret
lahf
out
adc
mov
add
insb
jno
jo
int3
test
xchg
lds
lods
cmp
fstpl
pop
sub
clc
cmp
inc
notl
pop
imul
test
push
das
pop
mov
loopne
imul
cmpsb
mov
into
sub
push
aad
cmc
loopne
out
test
or
cmp
pop
mov
push
outsb
xor
mov
mov
add
fucomip
mov
jne
aas
call
aam
mov
xor
mov
sbb
push
jle
xchg
cmp
push
aam
rcrb
mov
repnz
shll
sbb
xchg
cmp
push
pop
movb
mov
xor
xchg
mov
aad
fdivrl
add
add
pop
daa
ror
cs
xorl
test
push
jne
loope
sti
xor
mov
xorl
shlb
mov
fldcw
mov
inc
pop
xor
add
mov
in
cmp
cwtl
mov
lods
push
lcall
mov
sbb
sub
add
jecxz
sub
sub
lea
cld
mov
cmpsb
inc
xor
mov
or
jbe
and
shrb
pusha
in
daa
sbb
pop
mov
xchg
daa
in
enter
push
ret
adc
out
mov
sti
movlps
cli
ljmp
ror
cmp
sub
ja
sbb
aam
and
push
push
das
movb
mov
inc
mov
jae
bound
pop
shll
mov
adc
adc
inc
adc
sbb
jmp
cmp
jbe
enter
fists
pop
sbb
adc
add
adc
mov
lea
stos
int3
ret
push
sbbb
mov
sbb
add
fisubs
dec
push
test
loop
test
call
push
jbe
mov
push
imul
sub
inc
jno
ficompl
adc
add
mov
jb,pt
push
out
pop
xor
add
roll
push
xor
push
js
adc
insb
adc
fstpl
jns
scas
ss
mov
pusha
fcmovb
cmpsl
cmc
shl
adc
rol
xor
mov
or
fists
rorb
nop
in
xchg
sahf
js
cmp
mov
movsb
push
cltd
pop
aaa
or
mov
mov
xchg
dec
push
xor
arpl
into
movl
ret
outsl
cmp
imul
enter
cmp
xchg
jne
mov
mov
loope
cmp
dec
mov
ficoml
neg
subl
ljmp
push
dec
mov
jecxz
in
xchg
adc
popl
adc
xchg
push
push
pmuludq
dec
sbb
out
add
inc
add
ffree
mov
ror
jl
dec
push
outsb
adc
movsl
sbb
mov
clc
popf
or
and
sub
sbb
xor
aad
and
inc
and
push
pop
ja
es
mov
out
leave
lea
ret
mov
popa
test
js
add
add
cmp
sti
imul
insb
idivl
jno
mov
sbb
inc
aaa
xor
and
cmp
jb
clc
dec
rcrl
shrb
and
fisttpll
mov
nop
scas
jp
xor
xor
jp
dec
loopne
aas
sahf
lock
aaa
orb
ret
inc
int3
int
xchg
mov
imul
lods
pusha
pop
cmp
rcrb
stc
cmp
cltd
add
add
or
mov
jb
mov
mov
aas
mov
ss
int
divb
test
inc
jmp
or
xchg
cmpsl
stc
push
fmuls
adc
push
add
lahf
cmp
mov
pushf
andl
and
sub
bound
ss
das
in
jge
adc
adc
or
mov
pushf
adc
stc
inc
shrb
add
js
ret
xchg
inc
sti
pop
jbe
or
fwait
ss
sbb
popa
adc
cld
pop
push
jnp
sbb
mov
fimuls
xchg
xchg
and
mov
fisttps
mov
sub
cmpsb
loope
add
scas
and
inc
sti
add
dec
add
pop
xchg
bound
stos
aad
xchg
insb
in
push
sub
xlat
scas
mov
jne
xchg
ja
mov
mov
and
mov
orl
shlb
adc
movzwl
je
cmp
vcmpss
lods
pop
insb
pop
push
insl
outsb
sub
xlat
mov
xchg
fnstcw
sub
cmp
mov
mov
jno
test
mov
sbb
roll
mov
mov
daa
imul
xor
fdivrl
in
mov
ljmp
dec
in
jg
imul
mov
pushf
daa
pop
mov
cmp
rcrb
jae
data16
testb
xchg
call
xor
cmpl
xchg
inc
mov
cld
xor
lcall
outsb
fadds
sbb
xor
aam
pusha
pop
scas
push
mov
mov
cmp
in
movsb
rcrl
push
or
shll
aaa
pop
cmp
xchg
nop
outsl
cwtl
dec
jl
iret
int3
out
xor
pop
bound
xor
mov
in
int3
push
cltd
js
adc
in
jae
add
mov
mov
mov
pop
sbb
jo
pop
mov
imul
cmp
fisttpl
mov
cmp
iret
jb
pop
scas
inc
popf
xchg
sub
cmp
stos
lfs
fldenv
dec
ficoml
xchg
adc
les
out
jecxz
mov
adc
jle
push
push
sbb
sbb
xchg
loopne
fstl
push
sub
pop
into
dec
sub
cmp
gs
push
and
je
mov
xlat
mov
cmpb
mov
inc
add
mov
aaa
xor
fldl
scas
or
ss
imul
pop
cltd
push
pop
icebp
pop
scas
lds
adc
rolb
mov
aas
sbb
or
push
xor
je
popa
mov
es
cwtl
std
mov
pusha
jb
mov
jg
push
pop
ja
jmp
jae
iret
and
inc
inc
mov
cmp
orl
xlat
or
pop
fwait
mov
stc
hlt
clc
pop
fcompl
or
je
sub
dec
pop
xor
cmp
mov
add
cmc
mov
and
sub
ror
outsl
in
cli
jg
aaa
movb
ret
mov
fwait
push
aam
ficoml
hlt
mov
xor
mov
mov
xor
scas
jae
ljmp
and
mov
cmp
inc
jp
push
jb
imul
inc
xchg
js
repz
cli
cltd
data16
add
jns
int3
dec
push
mov
mov
fidivs
les
inc
ret
int
inc
xchg
sub
lock
out
lcall
adc
adc
push
and
cs
mov
jbe
aam
leave
insb
scas
les
add
sbb
mov
imul
mov
test
subl
iret
inc
test
xchg
roll
cmp
xchg
push
cmp
or
add
pop
adc
cmp
jmp
call
mov
sbb
cld
sub
lock
fldt
filds
cli
push
mov
popa
jp
jmp
mov
fsubs
lods
mov
scas
in
outsb
fcoml
bound
push
sub
fnstenv
lods
sbb
add
sbb
adcl
xchg
ret
je
mov
in
test
pop
sub
jg
adcl
je
bound
push
cmpl
mov
pop
dec
std
popf
pop
imul
enter
int
test
jl
sbb
xchg
add
pop
movsb
repz
jnp
lret
loop
popa
nop
cmpsb
lcall
clc
stc
dec
pusha
xchg
mov
cmp
addl
or
cs
testl
or
add
cmp
adc
sub
dec
rcll
lret
xor
leave
mov
xchg
jno
int3
inc
jl
adc
inc
push
mov
es
or
out
pop
ljmp
scas
and
cwtl
rclb
inc
loop
fbld
dec
push
adc
sub
stc
pusha
cli
xchg
mov
jbe
inc
clc
clc
pop
outsl
jb
adc
xchg
cmp
and
cwtl
aad
shl
mov
insb
sub
cld
into
mov
mov
xlat
cmp
inc
sbb
lret
add
dec
fsubrs
cmp
mov
sub
mov
mov
int
pop
popf
cmc
mov
xor
jo
repnz
sbb
insb
mov
das
jno
outsb
pusha
xchg
cltd
in
jle
outsb
movsb
dec
cmpl
xchg
leave
adc
xor
xchg
dec
popa
or
js
adc
add
popf
cmp
xchg
movsl
and
xor
mov
cwtl
out
hlt
inc
ret
dec
repnz
sbb
sti
out
testl
loop
mov
or
cmc
jno
repz
stc
scas
insb
enter
sbb
push
xor
inc
and
dec
or
out
jb
push
movsl
and
dec
or
sbbl
roll
push
into
into
and
in
fldcw
sbb
mov
cmp
or
sub
push
sbb
pop
sbb
jns
js
xchg
rol
add
cmp
xchg
cwtl
cwtl
cmpsl
addr16
dec
add
stos
stos
pushf
pop
push
or
dec
insb
repz
negb
pop
mov
or
rcrb
mov
inc
push
aad
inc
mov
mov
addr16
mov
repz
push
pop
add
ss
and
insb
pusha
pop
add
sbb
inc
or
pop
pop
js
stos
pop
jno
imul
movsb
inc
sub
pop
mov
lahf
leave
out
bnd
je
cmp
repnz
jbe
push
pushf
push
testb
adc
bound
cmp
movsl
lea
add
jmp
push
and
add
or
xchg
push
add
xor
push
jmp
rclb
mov
xor
out
test
push
out
cmp
stos
jb
xchg
ror
sbb
insl
push
push
mov
and
push
xchg
es
mov
sbb
xchg
scas
imul
push
pushf
into
pop
pushf
xchg
test
cs
dec
sarl
lds
or
mov
xor
scas
dec
cs
pop
sbb
out
nop
push
adc
jecxz
dec
jp
mov
cmp
in
jo
dec
das
mov
cmp
pop
sbb
dec
lahf
pop
push
xor
std
in
mov
shrb
jecxz
jnp
push
xchg
movsl
mov
test
adc
sbb
jl
ja
bound
les
push
movsb
movsb
mov
ljmp
dec
sahf
mov
jl
stos
in
adc
shlb
xor
aad
and
out
pushf
inc
lret
sub
sbb
cld
fsubrs
jg
inc
push
mov
mov
sbb
test
movsb
aam
je
fstpl
xchg
inc
in
xor
in
add
dec
or
int
pushf
ja
clc
inc
lahf
and
leave
mov
popa
xorl
cmp
sub
mov
pop
leave
orl
movsb
cld
or
push
aaa
stc
popf
subb
fsubp
add
xor
jp
int
icebp
lret
lret
dec
stos
or
push
out
in
inc
popf
xchg
mov
or
dec
jmp
cwtl
cmp
sbbb
out
cli
pop
sub
out
push
mov
test
inc
lds
aas
test
push
dec
out
lds
sbb
inc
or
or
sarl
push
aaa
stc
lods
jns
jle
mov
cmp
cmp
jge
push
fldcw
adc
xor
mov
cwtl
xor
cwtl
xor
sub
mov
inc
test
jg
adc
mov
mov
fcomi
enter
mov
fs
xchg
je
inc
sbb
and
mov
lods
bnd
popa
test
jb
int3
ret
mov
cs
jbe
jae
xchg
in
imul
push
cmpb
aam
fiaddl
ljmp
stc
call
daa
outsb
push
pop
or
xor
shll
adc
arpl
and
mov
lods
push
stos
or
lcall
lods
subl
scas
cmp
and
adcl
inc
jns
out
mov
add
mulb
jp
cmp
out
xor
rcr
mov
ret
push
cmp
in
push
outsb
mov
pop
lret
push
mov
xorb
popa
jne
push
mov
push
in
or
lret
jae
leave
je
lahf
add
pop
sbb
add
aad
mov
outsl
cltd
pushf
jne
fwait
lahf
mov
mov
xor
jge
test
pop
push
adc
xchg
pop
mov
cwtl
ljmp
cmp
je
cmp
xchg
shrb
es
arpl
pop
inc
dec
inc
and
sahf
addr16
mov
cmp
gs
call
jge
dec
loop
ret
fldcw
ret
pushf
lahf
loop
fdivrl
pushf
sar
lret
mov
pop
int
mov
add
xchg
sarl
inc
arpl
jno
in
mov
mov
inc
movsl
repnz
adc
repnz
inc
xchg
mov
push
cmp
ds
fbld
jp
inc
xchg
outsl
xor
push
add
xor
orb
in
inc
or
das
data16
add
test
mov
cmp
sub
xor
jns
inc
test
andb
out
sbb
int
adc
ficompl
imull
cmp
mov
outsl
pop
mov
std
test
xor
aam
int
mov
adc
cwtl
xchg
ja
adcl
shld
ret
pop
mov
in
inc
lods
add
nop
sbb
cmp
and
xchg
stos
imul
cwtl
ja
push
lock
ljmp
pop
stc
in
sub
mov
std
adc
popf
clc
xchg
aaa
arpl
or
cmp
out
mov
or
mov
mov
jae
push
pushf
in
add
push
out
scas
imul
cmp
dec
mov
inc
pop
inc
and
cmc
hlt
hlt
insb
push
aas
cmpsl
je
jae
call
popf
cmp
daa
pop
jno
ret
insb
in
in
xchg
jecxz
loop
pop
js
adc
pop
pop
sar
lcall
lcall
or
add
sub
jbe
fisttps
push
out
pop
pop
flds
lcall
sti
repz
adc
outsl
mov
inc
inc
xorl
and
rolb
push
mov
adc
inc
inc
mov
int3
cmp
or
pushf
out
shll
jmp
ret
sbb
mov
incl
cmp
inc
push
mov
insb
or
or
mov
movsl
std
adc
mov
lcall
jl
bound
mov
test
fcmovu
or
sub
mov
stos
push
sub
mov
pushf
mulb
cmpb
insb
movb
inc
cmc
dec
xchg
hlt
cmpsb
jge
jl
cmp
inc
xchg
jg
xchg
repz
rolb
test
push
sub
and
and
jae
lock
rcr
ljmp
xor
xchg
adc
sti
sbb
cs
dec
mov
in
mov
or
daa
daa
nop
and
jmp
lret
shl
movsb
jb
jl
push
pop
test
fs
enter
je
mov
inc
xchg
ds
and
jle
xchg
ret
add
jb
or
aas
jge
out
dec
shlb
shlb
pop
sbb
movaps
pop
cmpsb
push
cld
popa
aas
mov
jo
jbe
aas
jp
xor
sbb
insb
add
out
popf
cmp
scas
fadds
hlt
cmp
les
sbb
adc
pop
cmp
xchg
ja
sahf
jo
test
sub
dec
mov
mov
push
repz
mov
push
add
negl
movb
insb
andb
outsl
imul
sbb
add
outsb
inc
mov
or
stos
cwtl
add
sub
outsb
jb
fdivrs
mov
arpl
cmp
daa
inc
cmc
push
add
repz
jbe
sbb
ja
pop
into
jmp
push
jnp
sbb
sub
and
or
jp
dec
scas
insb
jl
punpckhbw
jno
xchg
gs
or
scas
inc
sub
insl
aad
mov
ror
mov
fisttpll
and
test
inc
or
mov
cs
sbb
hlt
pop
dec
push
mov
xchg
ret
ljmp
cwtl
stos
push
fldenv
cmp
outsb
xchg
adc
sarl
ljmp
test
sub
pop
add
rcll
xor
fs
mov
or
add
notl
in
sbb
adc
push
fs
and
inc
rcl
xchg
ljmp
iret
xor
push
cwtl
movsl
mov
aas
imul
divb
lret
cmpsl
pusha
sub
inc
mov
fiadds
jae
sub
sbb
push
jns
mov
nop
add
insb
mov
sti
sub
outsl
jg
pop
add
xchg
fildl
push
cmp
test
cmp
test
sti
dec
lea
inc
add
insb
inc
andl
lods
cmpsl
mov
dec
in
jp
inc
sbb
cmp
shl
xchg
push
test
pop
xlat
sub
gs
xor
jl
aaa
adc
mov
add
dec
sub
sub
out
xor
adc
call
daa
lea
aam
push
dec
iret
ds
lock
pop
mov
sub
xor
jae
in
inc
add
popa
inc
mov
nop
mov
cmp
mov
aas
aas
inc
je
icebp
add
cmp
dec
fdiv
ficoms
sti
jle
push
and
mov
aam
mov
inc
jb
dec
in
out
mov
bound
lahf
jge
in
xor
cmpsl
roll
pop
xchg
dec
ret
fwait
and
jge
and
in
lock
sub
dec
aam
dec
out
bound
test
xchg
pop
ljmp
mov
xchg
dec
jns
into
addr16
cmp
hlt
push
in
adc
sbb
inc
out
jbe
cld
bound
or
or
jns
jbe
xor
jle
popf
mov
popf
fwait
mov
pop
lods
xchg
mov
jp
pop
cld
daa
lea
scas
mull
pop
shll
xor
std
adc
mov
add
dec
hlt
ja
dec
or
mov
movsb
xor
inc
sarb
fwait
mov
cmp
into
lds
xchg
pusha
xchg
cli
mov
xlat
movsl
sbb
jge
pop
or
leave
aaa
ficomps
loope
xchg
mov
mov
aas
mov
xor
ret
mov
sbb
pop
add
push
or
icebp
fsubrs
or
jo
in
add
mov
mov
jne
adc
pop
es
fnstcw
in
cwtl
pusha
fdivrs
sub
std
scas
push
fistl
adc
push
popf
adc
adc
outsl
and
push
lods
xchg
in
mov
lods
dec
sub
push
inc
gs
pop
dec
pop
and
mov
icebp
aad
out
in
ret
cmp
inc
sbb
inc
mov
test
sbb
stc
mov
cmc
xchg
in
inc
insb
leave
test
jno
repz
inc
inc
lods
or
pop
xor
xlat
sbb
in
dec
or
jle
rorl
psubusw
imul
movsb
xchg
mov
sbb
mov
xchg
pop
xor
cli
rcll
adc
mov
inc
lods
cwtl
dec
or
lods
call
ret
repnz
aad
outsl
nop
jle
cmp
movsb
xlat
lds
movsl
adc
adc
loop
add
mov
xor
cmp
mov
or
pusha
xor
push
stos
sbb
dec
arpl
cli
adc
cmp
js
mov
mov
xlat
fld
xorb
sub
sub
cli
xchg
lds
and
mov
inc
pop
and
sbb
add
popa
adc
add
mov
scas
inc
jl
mov
bound
stc
cmp
inc
stos
xor
push
int
out
test
jmp
mov
push
or
imul
jae
mov
popa
adc
dec
xchg
rclb
loopne
jns
adc
out
pop
iret
add
pop
pop
fwait
inc
out
cmp
rorb
js
jne
bound
adc
icebp
movb
inc
xchg
inc
mov
mov
popa
jecxz,pt
mov
stos
jbe
gs
jg
add
cmp
or
cmpsl
jmp
mov
mov
or
xlat
or
aas
ror
inc
mov
loopne
gs
mov
insl
call
movsb
insb
jo
mov
cwtl
mov
nop
cli
mull
mov
add
addr16
daa
movsb
insl
adc
mov
jbe
mov
int3
inc
stc
inc
mov
xor
add
inc
dec
cmpb
and
inc
mov
fisubrs
ja
mov
lds
adc
fcomps
or
mov
sahf
lcall
add
xor
pop
jne
cmc
pusha
adc
sbb
popa
int
icebp
popf
adc
es
mov
jbe
bound
and
pop
push
ret
xor
cld
adc
xor
inc
sub
aas
iret
js
add
roll
hlt
jnp
jl
jmp
adc
mov
xchg
jnp
insb
int3
cmp
pop
jnp
mov
mov
push
orb
sub
and
cmp
nop
shll
adc
sti
outsb
call
shll
jbe
push
insb
in
ja
and
aas
sub
arpl
adc
lcall
cmp
dec
xchg
and
nop
les
and
mov
lahf
aaa
cmp
fprem1
lcall
ss
in
push
mov
and
sbb
push
js
jne
sbb
fnsave
push
jb
xchg
and
dec
add
pop
stc
sbb
lret
pop
add
or
jb
sbb
lock
jmp
das
push
xchg
aaa
mov
mov
test
push
movsl
fisubrs
push
xchg
pop
icebp
mov
in
push
adc
cwtl
mov
adc
pop
adc
lahf
xlat
pushf
fistpl
shrb
outsl
jmp
addr16
aad
cmp
gs
ja
dec
dec
cmp
dec
mov
jne
jp
and
add
idivl
xor
scas
push
lock
mov
cmp
jp
push
jge
cmp
inc
xchg
movsb
fnsave
xchg
xchg
cmp
mov
add
jns
fstps
mov
adc
push
rcl
mov
outsb
dec
jmp
or
xchg
xchg
popf
pop
ds
xchg
sbb
jae
sarl
inc
add
pop
mov
xor
jne
mov
int
sbb
jp
cmpb
pop
mov
call
and
in
hlt
pop
jne
cmc
outsb
push
popa
lods
push
pop
cli
adc
jmp
pop
mov
lock
addr16
gs
mov
sbb
or
push
sub
dec
xchg
fsubs
add
dec
bound
xchg
xchg
adc
xor
cli
mov
cld
push
dec
sub
cmp
add
pop
testb
ljmp
sub
push
sti
adc
mov
pop
fcmovbe
inc
sti
stc
cltd
fildll
xlat
rcr
and
mov
dec
pushl
sub
jb
cli
cmp
cmpsb
popa
std
mov
rorl
orl
mov
arpl
faddl
cmp
dec
mov
nop
sub
mov
mov
cld
xor
pop
push
std
mov
ficompl
sarb
sbb
pop
lea
push
dec
mov
lods
data16
xor
mov
lret
inc
jns
fbstp
es
clc
addl
mov
bound
mov
push
xor
add
sbb
test
xor
pop
ljmp
push
jb
lea
sar
push
sbb
jb
mov
sar
repz
xchg
xor
dec
cmp
fsubp
test
jg
aas
xchg
mov
xchg
jmp
ja
stos
jo
adc
xchg
stos
fcomps
mov
add
shlb
xor
jae
idivb
call
mov
je
bts
int
lahf
add
cmpsb
fstps
mov
out
sbb
cs
lds
mov
inc
sub
stos
pop
in
fisubs
int3
repnz
dec
je
jae
add
xchg
cli
subb
or
das
jnp
es
mov
mov
cmp
dec
cltd
pop
xchg
sbb
inc
xlat
add
mov
fistps
sbb
cs
cmp
add
aas
dec
outsb
pusha
rcrb
pop
popf
mov
jns
add
xor
movsb
pop
cmp
int
sbb
jp
stos
adc
and
cli
mov
cwtl
insl
or
xor
lahf
pop
popl
inc
scas
iret
pop
pop
mov
jle
and
fmuls
xchg
xchg
stc
into
pop
out
or
jbe
int3
cltd
test
adc
repz
test
cmp
ret
mov
push
lods
lods
add
jp
dec
pop
push
into
mov
into
sti
stc
jmp
es
push
rcrb
sahf
sahf
icebp
addb
shl
mov
jns
lret
add
shlb
in
mov
push
pop
adc
sbb
imul
inc
pop
xor
cmp
cmc
ljmp
int3
imul
xchg
in
jmp
lcall
pop
movsb
dec
inc
inc
push
mov
push
jno
daa
insl
xlat
sub
push
in
jmp
and
ja
ss
jno
push
mov
mov
hlt
movsl
stc
or
mov
aam
int3
les
mov
lea
sub
cs
mov
loopne
pushf
aaa
cmp
mov
mov
sbbb
xchg
incb
push
pop
sub
clc
iret
mov
pop
imul
loope
add
or
pushf
loopne
pop
push
outsl
sub
repz
inc
loop
cltd
int
sarl
adc
lds
fs
les
testl
jo
fidivrl
mov
jnp
add
stos
imul
fisttpll
dec
aas
call
sub
fdivrs
fucom
inc
ljmp
mov
rcll
push
pushf
pop
cmpsl
inc
mov
data16
idivl
xor
ret
sbb
pop
cmpsb
xchg
add
fnstenv
mov
movsb
cmp
adc
popf
push
dec
pop
pop
out
mov
ss
pop
dec
ja
lods
mov
aaa
lods
xlat
nop
sub
cs
inc
loope
mov
sbb
data16
jg
sbb
outsl
cmc
lea
jge
xor
pop
adc
jbe
mov
xor
jno
push
mov
sti
pop
pop
add
lds
lods
in
pusha
push
fwait
ljmp
imul
xor
popw
sbb
add
loop
sti
xchg
sub
addr16
jl
pop
in
in
mov
mov
sti
imul
xor
xchg
mov
addr16
or
cmp
mov
pop
jb
pusha
cmp
mov
scas
iret
mov
xchg
and
sbb
dec
dec
dec
and
dec
nop
cs
paddq
lret
adc
insl
adc
out
sbb
jns
or
pop
and
sub
or
push
cltd
mull
mov
add
inc
rcrl
sar
fistl
dec
inc
fs
mov
stos
repnz
lret
dec
test
cmp
push
dec
add
rol
inc
jg
outsb
or
icebp
sahf
int3
out
aaa
xor
xchg
jne
sub
inc
dec
test
sub
idiv
mov
push
dec
js
xor
cmp
mov
mov
out
call
icebp
dec
mov
aas
loopne
je
insl
xchg
popf
xchg
xchg
or
daa
test
sub
mov
push
sub
push
mov
pop
sub
inc
adc
dec
imul
adc
xor
lret
cmp
dec
in
dec
sbb
lret
jo
or
shrb
nop
inc
sbb
xchg
and
into
cmp
cmp
mov
dec
into
pop
insb
dec
jl
push
add
or
clc
lret
pop
out
mov
mov
add
sub
js
jg
imul
rcr
xor
sbb
mov
mov
jno
cwtl
scas
sbb
pop
popf
loop
mov
xlat
xor
pop
xor
sti
dec
cli
push
mov
sub
or
int3
mov
add
iret
out
mov
repnz
jns
adc
xor
inc
loopne
dec
xor
insb
stos
xchg
orl
pop
inc
jmp
add
mov
xor
mov
fildl
in
repz
std
xchg
jbe
mov
testb
mov
mov
dec
xor
js
xchg
aam
test
hlt
adc
and
repz
fcmovb
scas
loop
leave
lcall
add
jb
add
pop
ja
gs
and
push
add
xlat
pushf
lea
icebp
push
jmp
insb
pop
jecxz
leave
push
mov
dec
fimull
pop
cmp
scas
fmuls
add
jno
adc
test
sbb
scas
xchg
add
lret
sti
add
xchg
mov
pop
insb
jecxz
mov
popf
fildl
mov
sti
stos
or
xor
push
xor
and
xor
mov
push
mov
stos
push
loope
xor
mov
mov
cmp
les
push
in
fwait
or
mov
jb
and
out
push
jbe
pop
outsb
xor
mov
lahf
sub
stos
addb
xor
mov
and
ror
pusha
sbb
or
mov
daa
push
adc
mov
into
aad
fists
pusha
xchg
jnp
int3
lods
faddl
add
sti
cmc
mov
cmp
pop
pop
inc
loop
fcomip
outsl
stc
insb
fidivrl
push
movsb
mov
cmp
fs
or
ficomps
mov
pusha
jl
xor
ljmp
lds
hlt
push
popa
xchg
sarb
stos
sub
sub
mov
push
cmp
adc
fwait
mov
sub
mov
out
test
add
imul
jg
mov
mov
add
mov
lock
outsb
decb
push
imul
jge
sbb
std
xchg
imul
icebp
dec
mov
xlat
stos
lret
push
and
stc
movsb
push
lret
ret
and
mov
stc
loope
pop
fistpll
orb
jmp
int3
pop
adc
xchg
rorb
sbb
xchg
xchg
pushf
sub
js
xchg
mov
scas
enter
cmc
ficomps
dec
mov
hlt
lods
mov
nop
push
sti
and
loope
mov
cmp
je
jae
mov
cmp
push
dec
and
divl
es
mov
push
aam
and
mov
ss
outsl
mov
sbb
jno
pop
dec
push
arpl
test
movsl
mov
mov
repnz
push
mov
les
pop
inc
xor
das
sub
xor
mov
jmp
xlat
nop
jmp
mov
xchg
add
and
mov
jl
lcall
in
sbb
and
xor
dec
jmp
sub
mov
mov
icebp
shlb
lea
test
pop
adc
bound
push
fisttpl
cmp
outsl
iret
sub
push
xor
mov
mov
mov
je
pop
mov
or
mov
lahf
out
addr16
xchg
jbe
shll
jae
and
xor
sbbb
icebp
mov
hlt
stos
lock
xchg
jno
imul
xchg
rol
arpl
clts
int
movsb
in
outsb
jge
pop
mov
notb
aad
xchg
aad
rcll
cltd
repnz
pop
or
test
jl
inc
fsub
pop
inc
iret
and
mov
hlt
inc
popf
xor
jns
pop
sbb
out
loop
cmc
cld
out
arpl
loop
jmp
int3
fildll
insb
fcoms
ret
lahf
repz
stc
in
sub
aad
out
ud2
mov
add
xchg
incl
cs
out
inc
xor
fwait
out
jnp
sbb
dec
sbb
sub
dec
push
addb
popf
jmp
popa
rcrl
fisttpl
ficompl
out
aad
bound
notb
xor
ret
sbb
mov
and
lahf
dec
push
sub
sub
jmp
dec
add
sbb
out
cmp
pop
jle
cmp
fsubl
ret
xchg
or
xchg
fisubrs
mov
lods
mov
xchg
mov
repz
loopne
es
jmp
cltd
pushw
sub
aad
movsl
sub
mov
mov
sahf
loop
mov
xor
xchg
test
push
fdivl
orb
push
jno
pop
fnsave
sbb
adc
lea
add
or
stos
add
addr16
xor
inc
add
stc
out
sbb
int3
cmc
mov
stc
fmull
jge
lret
fnstcw
ja
aam
ficomps
sbb
xchg
add
jo
loope
ret
push
pop
sub
dec
call
outsb
cltd
repnz
dec
jb
mov
push
sbb
mov
jb
iret
clc
sub
jge,pn
in
subb
int
ljmp
add
in
je
ljmp
pop
ljmp
arpl
jge
enter
adc
xor
mov
movsl
sub
and
dec
fisubrl
xchg
fsub
imul
negl
dec
jnp
cltd
dec
leave
mov
cmpsb
sbbb
and
fwait
dec
cwtl
outsb
pop
mov
mov
rcl
rcl
add
andl
repnz
dec
sbb
fsubp
mov
outsl
out
loopne
ljmp
cmp
xor
movsl
dec
and
movsb
orb
ljmp
jmp
jne
xchg
into
ret
shll
enter
insb
clc
cmp
jg
ja
add
pop
mov
imul
and
adc
sub
leave
or
xchg
lcall
into
xchg
mov
cmp
cwtl
add
imul
dec
and
lock
gs
and
fnsave
pop
out
addr16
jl
xchg
icebp
xor
push
pop
xor
stc
ljmp
jbe
mov
cmp
jnp
loopne
je
mov
inc
sbb
shrl
dec
mov
cmp
sub
cwtl
add
out
and
into
xchg
cmp
pop
das
add
mov
or
xchg
and
push
and
or
add
loopne
xor
or
mov
in
adc
je
shr
cmp
call
inc
add
mov
mov
sub
cs
jnp
jle
out
rorl
ds
ffree
inc
ror
fs
add
mov
mov
lds
aas
rclb
shlb
or
adc
mov
into
and
adc
in
lds
sbb
std
add
mov
loope
mov
inc
es
sbb
arpl
test
inc
fisubrl
mov
xor
lret
js
aam
xchg
fadd
pop
repnz
sub
das
mov
mov
lods
cmp
or
ds
into
xor
xchg
ja
adc
inc
xchg
pop
std
out
pop
std
lock
jb
dec
adc
push
clc
and
mov
jns
gs
fcmovne
out
push
pop
jnp
test
orb
int
imul
stos
mov
in
sbb
out
cmpsb
lods
aam
cmp
es
sbb
rcrb
xchg
out
dec
subl
mov
and
sbb
and
cmp
mov
pop
and
mov
popa
xor
mov
cmp
pop
ret
jb
stc
in
xchg
iret
or
pop
int
mov
fs
cmp
adc
mov
dec
push
outsl
cmp
icebp
pop
fdivl
pushf
lret
movsl
sbb
sbb
jae
cli
leave
stos
sub
pop
jg
pop
insl
jno
mov
rcrl
ss
pop
test
cmpsl
outsl
xorl
add
repz
sbb
pop
dec
loop
mov
in
jae
inc
mov
pop
xchg
mov
daa
cmp
orl
push
cli
insb
and
push
and
mulb
adc
enter
mov
stos
lds
xor
sti
leave
adc
mov
sbb
push
int
loop
push
imul
das
sbb
leave
pop
es
cmp
sahf
ds
jg
pop
into
inc
jns
sbb
fs
movd
add
das
insl
imul
inc
adc
icebp
repnz
out
add
xchg
fwait
lret
bsr
inc
mov
int
mov
mov
or
icebp
xor
push
jle
dec
popf
adc
cltd
jnp
mov
adc
and
sub
jle
add
mov
mov
sub
pop
cld
or
pop
mov
arpl
hlt
gs
add
xchg
in
pushf
idivl
fwait
jnp
sub
std
inc
mov
sbb
in
subl
adc
repnz
inc
and
sub
in
push
jo
mov
and
adc
pop
fildl
cmp
add
insb
pop
hlt
fists
stos
je
arpl
mov
test
leave
inc
or
xchg
xor
sbb
repnz
ucomiss
sub
stc
jnp
inc
mov
dec
rcrl
cmp
jns
lods
push
push
jnp
sub
imul
fldenv
cld
sahf
scas
or
push
inc
mov
lret
ds
jge
out
cs
cld
adc
in
mov
lods
mov
sub
mov
pop
fs
repz
mov
or
fdiv
mov
xchg
push
fisubs
mov
dec
xchg
adcb
sete
icebp
int3
dec
mov
xor
jne
lods
cs
mov
adc
lods
leave
mov
ss
sbb
inc
add
out
jge
inc
mov
jp
mov
adc
gs
pop
loope
scas
mov
incl
or
ffreep
outsb
jnp
sub
sbbl
dec
adc
mov
push
mov
sub
xor
xchg
sbb
movaps
iret
aaa
std
or
xor
rol
rcrl
dec
or
and
pushf
aas
xor
jmp
add
stos
in
mov
xchg
jl
xor
inc
xor
daa
xor
test
sbb
jb
mov
scas
mov
jnp
mov
pop
xchg
jmp
jbe
add
cwtl
inc
jae
mov
cmp
test
cmp
cwtl
mov
or
daa
test
lds
mov
xor
mov
add
std
ss
test
lahf
call
ret
mov
aam
mov
xchg
cmc
rcll
jbe
mov
mov
in
imul
gs
dec
dec
fwait
lret
add
cli
int3
mov
dec
pop
cmp
jo
jno
sub
mov
bound
mov
in
cmp
xchg
fsubl
shrb
or
mov
xchg
roll
call
gs
dec
or
push
loope
movsl
dec
pushf
mov
jo
jle
inc
pop
inc
jmp
scas
test
daa
rcrb
push
popa
xor
sbbb
out
cmpsl
lret
cltd
dec
test
jmp
mov
jns
mov
pop
adc
data16
mov
cli
pop
xor
sub
mov
aam
std
mov
aas
xchg
mov
add
movsl
sub
inc
cwtl
add
cli
pop
out
lahf
push
mov
mov
imul
ds
mov
clc
push
loope
dec
mov
jns
sub
ret
fstl
xchg
pop
cmp
push
pop
pop
sbb
test
and
cltd
jb
mov
sub
sub
lods
push
push
pop
loope
lret
test
loope
xor
scas
lret
sar
sub
xchg
sub
repnz
fdivrl
pop
inc
imul
jp
int
inc
adc
sti
dec
loop
loop
dec
jmp
fldcw
jmp
mov
inc
xor
out
jmp
xchg
cld
xchg
pop
ficompl
xor
arpl
cmp
and
out
ljmp
fs
clc
mov
sbb
cltd
loop
add
sbb
in
dec
adc
in
mov
sbb
ds
pop
push
mov
aad
dec
xchg
decl
mov
fcoml
inc
xor
or
mov
pop
clc
jne
addr16
jmp
scas
roll
jns
inc
addr16
in
cmp
add
test
movsl
lret
in
xchg
out
sub
imul
ds
aas
imul
pusha
jecxz
out
out
cmp
iret
es
dec
mov
shlb
push
jno
test
sahf
xor
outsb
and
repz
test
sbb
call
pop
dec
jbe
aas
adc
lcall
sbb
pop
xchg
jl
and
enter
push
push
lcall
std
lods
addr16
inc
push
jle
aad
push
pushf
adc
repnz
fwait
aad
sub
add
sub
cmc
inc
pop
xchg
or
sub
mov
cli
cmp
sbb
push
outsl
pusha
mov
outsb
es
pcmpgtw
jge
mov
mov
jge
sbb
inc
or
into
cld
fdivr
dec
xor
mov
adc
sbb
jbe
adc
mov
and
adc
cmpsl
pop
shll
mov
movsb
fstpl
or
fiaddl
push
loope
mov
jnp
out
xchg
cld
xchg
push
ret
adc
mov
push
arpl
ss
pop
ja
sbb
inc
pop
mov
fdivs
das
popf
mov
lods
test
aaa
xchg
lods
jo
or
shlb
scas
mov
add
decl
add
popa
jns
loop
pop
arpl
jmp
push
push
push
rcrl
je
ror
insl
jns
decl
and
mov
cmp
aas
mov
sub
xor
adc
adc
push
lods
mov
clc
ds
shrl
jnp
xchg
clc
and
xlat
icebp
pop
mov
push
xchg
cmc
sub
shrl
clc
or
adc
int
sub
pop
les
lea
decb
mov
lods
loopne
adc
subl
je
mov
or
sar
psllq
xor
ja
dec
loop
pusha
mov
loop
jg
add
inc
adc
xchg
adc
pusha
cmp
inc
jns
xchg
sbb
ss
cmpsl
mov
aaa
mov
jl
push
addr16
in
pop
cmpsb
fsubrp
pop
and
pushl
out
and
je
test
sbb
jne,pt
call
fwait
ja
xchg
jg
mov
lea
xor
fdivrl
rcrl
stc
add
sub
push
sti
or
lods
les
cmpsb
push
xor
sahf
cmpsb
ss
daa
push
loopne
out
sti
xchg
outsl
push
add
in
sub
mov
sbb
jecxz
pop
push
sbb
jnp
mov
jnp
lock
mov
and
es
push
mov
aaa
mov
in
jp
scas
addb
inc
fst
jo
cmpsb
loope
xchg
pop
jmp
bound
mov
in
clc
cmp
stc
inc
push
decb
mov
and
jl
xor
in
xchg
dec
stc
mov
enter
or
jle
es
push
xor
pop
dec
mov
scas
push
cmp
xchg
push
lds
xorb
lds
shll
sahf
test
outsb
inc
mov
jo
mov
xor
inc
sub
xor
daa
sbb
lcall
xor
sahf
sarb
aad
cmp
js,pt
imul
dec
je
in
xlat
inc
jo
cmp
mov
dec
lret
das
push
adc
pop
shll
in
pop
icebp
popa
cs
dec
push
mov
pop
push
test
popf
xor
sub
ss
popa
xchg
ds
repnz
adc
adcl
jle
mov
mov
mov
cmp
adc
mov
aaa
cmp
pusha
and
aam
test
cmp
xlat
inc
pop
fldenv
jmp
xchg
filds
cmp
sub
clc
jns
dec
addr16
cmp
sub
or
lret
lea
mov
lock
icebp
cmp
jb
insl
cmpsl
loope
imul
lret
insl
fs
adc
fs
dec
adcl
mov
sub
xor
xchg
dec
mov
popf
imul
int3
test
and
and
sub
js
inc
xor
push
adc
push
testl
mov
cmp
hlt
loop
aam
mov
ljmp
dec
mov
shlb
inc
mov
fwait
negb
lret
outsl
pop
xchg
sbb
pop
out
fldcw
xchg
popa
dec
sub
and
jb
jge
stc
pop
icebp
int3
jne
je
add
adc
push
loopne
loope
push
nop
or
jae
scas
adc
loop
cmpb
pop
roll
out
in
push
adc
out
test
xchg
call
addr16
stc
mov
es
jp
push
inc
dec
push
cmpb
inc
fistps
ss
mov
shlb
jecxz
mov
sbb
and
out
in
imul
xchg
xchg
mov
xchg
test
leave
add
dec
daa
in
adc
dec
scas
test
mov
xchg
jge
inc
cmc
loopne
jg
cmc
add
stos
xchg
push
dec
ljmp
jmp
lcall
xchg
mov
lock
cltd
pusha
push
cmp
dec
push
xchg
int3
xchg
iret
add
test
stc
and
or
and
adc
test
in
fisttpl
mov
push
jne
shll
addr16
adc
iret
les
xchg
cmp
pop
lods
mov
repnz
les
je
pushf
test
push
loopne
adc
popf
mov
int3
ds
jns
pop
or
repnz
dec
xor
in
sbb
push
adc
rcr
adc
fdivl
or
sbb
mov
lock
push
sahf
dec
lret
loope
pop
ret
int
pop
adc
jmp
sbb
dec
out
mov
xchg
aas
icebp
push
mov
push
incl
clc
ja
mov
out
mov
adcl
push
popf
fxch
jl
push
sbb
push
xchg
stos
aam
xchg
cltd
push
dec
mov
push
add
pop
push
mov
es
jle
repz
add
add
push
pushf
inc
imul
pop
repnz
xor
fisttpll
std
push
dec
mov
jae
add
daa
pop
in
cmp
subb
add
or
fwait
dec
inc
sub
ds
and
xchg
fwait
xlat
cltd
movsl
push
mov
push
sbb
imul
jno
mov
clc
movsl
inc
mov
aad
cmp
xchg
pushf
dec
add
inc
lea
push
loopne
not
rcl
mov
mov
call
cmp
jb
inc
sahf
dec
and
daa
and
and
je
ss
mov
push
out
push
mov
loop
mov
data16
push
jo
arpl
pop
jo
addr16
sbb
repz
bound
or
dec
sbb
cmp
mov
add
jp
mov
and
mov
pop
and
xor
movzwl
lahf
cltd
cmc
xchg
or
inc
or
jle
mov
dec
outsl
sbb
or
pushf
mov
hlt
sbb
dec
shll
dec
mov
pusha
std
lods
mov
lock
xchg
in
ds
push
sti
push
bound
repz
std
push
pop
insb
jo
fs
pop
jo
cmp
ja
mov
adc
cmp
jecxz
push
cs
mov
shlb
mov
sub
subl
pop
cmp
repnz
mov
test
cmp
cmp
dec
or
stc
mov
xlat
sbb
push
out
adc
push
mov
jb
or
pop
das
cmp
pushf
xor
xor
call
stos
loope
lea
cli
gs
or
inc
lahf
popa
shll
push
sar
pushf
dec
sar
inc
fnstsw
mov
imul
cmp
push
sbb
sub
fcmovnb
popa
iret
inc
aad
sbb
xor
fcomps
push
fimuls
mov
sbb
pop
add
xchg
lods
and
jge
imul
xchg
dec
cmp
xor
data16
jnp
sbb
push
sub
fwait
loope
int
int3
daa
or
xchg
lea
sbb
inc
adc
out
nop
or
xor
sub
pop
xor
test
ljmp
sub
es
stos
pop
cmp
push
std
idivb
or
jecxz
cmpsl
test
jl
sbb
mov
adc
pminub
lret
jns
lcall
cmp
outsb
lock
mov
cwtl
jecxz
aaa
adc
sbbl
sub
adc
adc
popa
dec
loop
lcall
int3
pop
mov
test
lret
mov
shr
push
pop
fincstp
mov
dec
int3
or
in
push
adc
fcmovb
pop
decl
xchg
pop
mov
mov
mov
or
loopne
mov
adcl
and
jbe
xlat
inc
lock
jecxz
movsb
pop
push
inc
ja
imul
cmp
sub
cmc
jb
dec
lds
sbb
jecxz
test
popfw
negl
or
jo
push
mov
int3
mov
jne
std
cmpsl
cmp
dec
jne
cmpsb
sub
sbb
data16
int3
stc
xchg
test
testb
cmpsl
mov
pop
sbb
loope
cs
jge
cmpb
aam
fsubl
mov
int
in
xchg
mov
sub
push
and
xchg
rol
daa
pop
add
stos
fildl
cmp
sub
push
outsb
pop
scas
aas
push
add
rolb
movsl
jnp
push
inc
les
jno
xorb
xchg
xlat
fs
push
pusha
into
push
jne
sub
sub
ja
pusha
mov
in
mov
and
push
pop
stc
xchg
sbb
testb
pop
or
pop
jle
hlt
sbb
push
mov
popa
xchg
sub
xchg
movsb
push
sahf
popf
mov
mov
cmpsb
push
int
fsubl
push
xchg
dec
adc
pop
aas
movsl
cmp
mov
lcall
jb
popf
xchg
cmp
int
and
gs
ja
mov
sbb
or
mov
xchg
xchg
addr16
in
jge
outsb
dec
repnz
or
xlat
or
mov
xor
test
daa
xchg
sbb
sub
mov
xchg
xchg
jmp
push
das
test
cltd
insl
aam
in
test
push
push
frstor
je
rclb
dec
das
aas
cmp
pop
xchg
cmc
pop
int
ret
mov
divl
ljmp
movsb
cmp
gs
xchg
rolb
mov
mov
pop
adc
fwait
pop
js
test
cmc
jp
into
daa
mov
sub
jge
sbb
imul
xchg
sti
push
push
mov
adc
ret
xchg
add
in
jbe
inc
adc
lret
mov
mov
mov
stc
shlb
andps
aad
sub
es
add
scas
popa
adc
inc
jle
push
pusha
sbb
out
movsl
and
cld
push
cltd
or
jecxz
fcmovu
arpl
fs
sub
xchg
std
xor
js
push
pop
aas
mov
mov
mov
cmovnp
jmp
addb
gs
in
push
xor
mov
pop
cmp
push
popf
sbb
push
dec
test
stc
inc
adc
cmp
aad
andb
bound
jle
pop
mov
jecxz
aas
clc
int
sbb
lods
imul
push
xchg
arpl
xacquire
inc
fisttpll
ret
add
dec
xor
xor
sbb
sub
popa
add
lock
add
push
mov
mov
into
push
stos
cmp
aad
call
arpl
fs
loop
sub
dec
pop
aad
push
mov
aaa
aad
inc
jnp
stos
pushf
jge
xor
adc
push
jno
test
inc
xchg
inc
adc
xor
xlat
xchg
add
add
mov
enter
cmp
jmp
fsqrt
cmp
mov
lods
shr
adc
adc
aaa
std
cmp
loop
and
push
iret
xlat
jp
clc
add
xor
mov
pop
push
adc
scas
aam
mov
loop
sbb
lret
cmp
aam
add
mov
push
jnp
xchg
hlt
leave
sarb
dec
push
in
mov
or
push
mov
mov
adc
or
test
aas
push
in
leave
push
dec
loopne
scas
icebp
sbbb
pop
xlat
imul
mov
mov
pop
into
stos
or
fstpt
call
inc
shr
or
xlat
movsb
adc
sbb
insb
rcll
sub
xor
add
xchg
loope
call
dec
or
and
fidivs
shl
adc
setb
sbb
sub
fdivrl
dec
into
add
test
imul
in
adc
mov
xor
push
iret
aad
sub
cmpsb
mov
rol
push
inc
sbb
sub
test
out
lret
ret
sbb
mov
add
pop
pop
clc
insl
jne
inc
scas
daa
rcrb
bound
stos
loop
jns
xor
pop
repz
xor
mov
data16
rcrl
pop
lock
xchg
dec
jle
clc
xor
mov
stc
addr16
mov
movsb
lret
lods
jne
xchg
daa
push
cld
bound
add
xchg
cltd
mov
sub
xor
push
inc
in
cmp
sub
repz
jmp
mov
dec
push
sbb
pop
and
lret
or
push
incl
sub
jecxz
jnp
mov
mov
das
or
xchg
jnp
sub
cs
pop
mov
sbb
push
out
mov
jl
movsb
jne
cmp
xchg
aaa
dec
scas
arpl
ud1
data16
lret
xorb
stc
out
jge
jmp
ljmp
pop
mov
fs
sbb
mov
test
rcll
int3
sub
hlt
icebp
mov
mov
cmp
popa
lret
pop
dec
rolb
jmp
adc
sub
les
xor
and
jne
fs
jb
mov
popf
sbb
in
mov
stos
sbb
mov
pop
pop
test
cmp
pop
sbb
xchg
inc
sub
adc
shl
invd
negl
ss
sarb
bound
dec
lea
decl
and
fnstcw
gs
mov
jne
cmc
jae
test
jge
jns
jb
jge
push
rolb
es
mov
jp
adc
nop
push
lcall
mov
push
jae
out
imulb
stos
shlb
hlt
in
int
sbb
loopne
mov
fs
xor
pop
lret
imulb
stc
das
mov
mov
sbb
in
mov
scas
or
jns
inc
nop
add
xlat
adc
lock
pop
adc
incl
testb
lea
out
scas
mov
insl
push
inc
xchg
lds
sub
ret
stos
mov
cmp
or
jl
cwtl
mov
pop
cmpsl
sbb
cmp
sbb
fsubr
in
fwait
push
loope
shlb
ljmp
mov
xchg
adc
add
push
mov
mov
rol
jo
imul
popf
shl
movsb
xlat
popf
cmc
jns
mov
addb
ja
addb
xchg
js
ss
in
adc
mov
jmp
add
cmp
mov
dec
fldt
lock
sti
jno
fisttps
pop
out
flds
xor
insl
repz
cmc
daa
mov
out
adc
cmp
push
lock
sahf
out
cmp
cwtl
push
lods
jnp
cltd
aas
xor
cli
sub
add
stc
inc
rcrl
dec
hlt
cmp
sbbb
lea
push
or
push
out
ljmp
adcb
mov
inc
dec
sub
aaa
sub
pop
scas
out
mov
jne
gs
bound
int
loope
jge
adc
nop
adc
sbbb
fdivs
dec
mov
jne
lds
mov
mov
push
jg
sahf
loopne
jge
inc
mov
aam
scas
cltd
mov
cmp
adc
repz
arpl
repnz
xorl
inc
inc
jmp
ljmp
out
xchg
out
mov
inc
test
in
pop
imul
push
mov
pushf
pushf
hlt
popa
mov
test
repnz
mov
mov
repz
aas
imul
mov
or
fs
es
pop
int
cmp
mov
sbb
push
or
push
aas
in
movsb
iret
pop
ljmp
xchg
add
xor
dec
movsb
sub
sbb
dec
test
jnp
ss
sub
jne
ja
and
cmc
pushf
in
sub
in
js
mov
dec
or
mov
cli
add
aaa
pusha
addl
sbb
cmp
clc
inc
pop
int3
cs
test
fimuls
adc
js
aaa
outsl
lret
pop
mov
jo
sbb
cmc
cmp
arpl
in
mov
aam
mov
sub
rorb
loope
scas
jp
sbb
jae
lds
mov
int
sbb
lock
xchg
out
inc
xchg
jl
sti
adc
test
fs
mov
sub
fimull
sbb
add
arpl
xchg
adc
addl
mov
test
lret
add
addr16
ss
jecxz
and
in
scas
adc
push
xor
pushf
pop
cli
pusha
add
data16
or
cmpsl
sub
xor
jo
jle
test
xlat
xchg
add
push
lcall
jmp
mov
push
add
ffreep
xor
cmp
dec
cmc
lcall
push
int3
imul
or
jecxz
int
es
push
sti
in
popl
mov
test
lret
stos
dec
push
xchg
dec
mov
sub
xchg
xor
push
and
mov
popf
jecxz
mov
pop
xchg
fldcw
sub
mov
ja
xchg
mov
test
inc
imul
test
bound
aaa
and
push
stc
mov
mov
imul
mov
inc
adc
fwait
inc
jge
cld
or
insl
popw
in
inc
sahf
and
jno
xorl
mov
jo
dec
les
xchg
or
out
lret
jo
push
out
fisubrs
rclb
cld
push
sub
inc
push
mov
int
sub
dec
loope
xchg
bound
cs
mov
fldt
inc
and
sbb
inc
test
adc
test
popa
shl
js
cmp
jnp
mov
mov
scas
add
adc
push
imul
ss
in
push
jmp
mov
test
mov
jae
push
popa
lahf
inc
in
push
or
inc
jne
cmc
sbb
je
mov
sbb
cmp
or
cmp
jne
and
xchg
divl
push
jo
inc
mov
dec
pop
sub
pusha
aaa
seta
pop
lret
sbb
inc
aad
ljmp
jae
sub
lret
jnp
add
push
fsts
and
add
in
adc
mov
pop
imul
mov
scas
push
iret
dec
fidivs
mov
test
dec
lret
stos
loopne
icebp
imul
add
sub
pop
xor
sti
aas
outsb
cli
cmp
xlat
inc
pushl
out
data16
pop
inc
pop
ficompl
inc
mov
pop
xor
lods
adc
lods
xor
mov
xor
xchg
hlt
scas
xlat
int
xchg
mov
pop
out
xor
and
and
mov
jne
movsb
bound
into
frstor
push
lret
cmc
push
push
inc
pushf
xor
fcompl
jne
scas
mov
or
lcall
push
es
pop
inc
jo
dec
mov
or
jns
stc
cmc
aad
mov
in
icebp
jnp
xlat
in
gs
add
pop
sub
arpl
insb
leave
jmp
loopne
out
push
and
ss
mov
cmc
movb
xor
jl
dec
ljmp
and
in
addr16
pushf
gs
jp
lods
ja
daa
jl
pop
and
fisubrl
fcmovbe
push
mov
pushf
movsl
call
test
fisubrs
xor
testl
sbb
cltd
or
out
add
or
aas
and
dec
sub
adc
rolb
xchg
cmp
addr16
lock
out
mov
dec
xchg
cli
push
add
jmp
push
jg
popf
nop
sub
pop
cltd
or
cmp
iret
mov
lods
sub
push
hlt
xor
xchg
inc
mov
ja
int
jo
flds
sar
xchg
push
icebp
movsb
adc
icebp
stos
subb
jmp
sub
pop
mov
xor
lock
int3
inc
pusha
loope
mov
pushf
je
cmp
subl
xor
pop
mov
xchg
stos
jo
scas
js
xlat
frstor
push
sbb
imul
jmp
dec
inc
push
adc
sbb
xchg
inc
mov
or
pop
mov
das
test
das
pop
lret
cmp
into
push
push
in
jb
inc
cmp
jbe
cmpsl
outsb
dec
inc
daa
pop
add
inc
sahf
cmc
push
bswap
sub
cmovl
jl
shrl
mov
aad
mov
inc
fcomi
sub
add
or
insb
sub
loopne
imul
in
cli
je,pn
and
or
xchg
cmc
mov
aam
cmp
outsb
cld
xchg
leave
sti
and
and
fwait
scas
test
lret
add
cmpsb
inc
inc
mov
fstl
out
push
lahf
or
les
repnz
cmc
sbb
xchg
sbb
or
rcrb
inc
rcrl
mov
dec
pop
inc
xor
orb
xchg
mul
and
push
aaa
cmp
mov
mov
stos
lret
xorb
jge
mov
sahf
mov
test
cltd
int3
mov
sub
mov
and
aam
test
cs
rolb
sub
sbb
sbb
pop
int
pushf
lock
fildl
add
je
dec
cmp
mov
std
dec
lahf
inc
ret
mov
jo
lahf
inc
bound
or
add
mov
bound
jns
les
jnp
cltd
shr
push
adc
lcall
pop
mov
jle
jns
lods
push
cmp
out
mov
and
dec
subb
fs
mov
in
jo
dec
pop
ljmp
adc
xchg
aam
push
push
add
js
pop
jle
idivl
ret
push
xor
lds
dec
cld
pop
outsb
ret
jns
outsl
xor
psllq
mov
imul
in
push
mov
popl
sbb
ret
mov
adc
outsl
and
mov
mov
loopne
pop
fs
and
lcall
mov
les
mov
add
std
xchg
imul
add
adc
mov
ret
ja
sub
push
es
dec
cli
push
adc
mov
pop
fwait
mov
ljmp
adc
outsl
add
leave
pop
pop
mov
lods
dec
cmp
imulb
cmc
icebp
dec
sahf
jno
jecxz
pop
and
cmpsb
dec
jecxz
mov
test
xchg
xor
add
sub
dec
mov
or
xor
dec
sbb
and
inc
sbb
mov
push
movb
sti
and
cmp
push
inc
mov
jo
pushl
inc
inc
mov
xor
sub
fs
sub
or
jns
mov
add
in
cmp
push
mov
sub
scas
xor
sub
pop
out
dec
pop
bound
out
js
pusha
pusha
sbb
fisttps
pop
jle
jnp
inc
push
popa
cwtl
insl
cmpsl
imul
pusha
push
outsb
imul
or
pushf
xchg
mov
scas
fiaddl
push
pop
mov
or
pop
mov
dec
mov
aas
jg
aad
xor
sbb
aas
cmc
out
and
test
pushf
xchg
sbb
pop
pop
mov
test
mov
pop
cmc
or
xor
dec
add
cmp
push
inc
iret
repnz
cld
mov
mov
pop
mov
aad
lea
sub
fwait
push
xchg
xor
mov
push
sbb
scas
imul
mov
out
fdivl
inc
mov
imul
xchg
addb
popf
adc
sbb
adc
and
in
mov
dec
pop
xchg
or
nop
fdivp
ja
lds
add
mov
pop
out
jle
jge
lret
sbb
jecxz
lret
mov
sub
mov
insb
andl
pop
aam
dec
movsb
add
mov
jl
xor
nop
test
mov
cli
sbb
push
aaa
ja
fcompl
pop
iret
rclb
rolb
loope
pop
clc
push
pop
call
adc
jp
loope
pop
es
fld
fists
insb
icebp
pop
mov
jns
dec
std
hlt
cmc
jns
sbb
mov
sti
dec
dec
cmp
outsb
cli
mov
push
inc
mov
xchg
sub
cli
int3
test
mov
xchg
lret
or
lret
pushf
mov
ret
xchg
mov
icebp
xchg
xchg
inc
sbb
stos
divl
jnp
in
fimull
mov
loop
push
mov
loopne
jae
mov
xor
xchg
sbb
dec
lods
jle
negl
aad
pop
mov
push
jecxz
lods
fistpl
xchg
or
or
and
mov
mov
and
inc
mov
jge
mov
cmpb
cmp
mov
or
lock
fs
int3
mov
pmaxub
pop
out
daa
push
jp
movsb
jbe
cmp
test
pop
aad
xchg
sub
popf
rorl
pusha
mov
or
jg
or
fmuls
adc
gs
and
inc
push
pop
hlt
jb
pop
scas
lock
loop
add
imul
push
push
cmc
mov
sub
jp
push
test
test
orb
sbb
xor
scas
fwait
cwtl
dec
cmp
and
insl
mov
mov
adc
std
cld
jbe
mov
mov
ffreep
xchg
data16
popa
pop
mov
imul
lods
mov
cmp
sbb
jae
lods
xchg
shl
std
jmp
in
notl
rorb
pop
jl
ret
test
dec
scas
std
and
mov
popf
pop
adc
jmp
shrb
imull
mov
dec
xchg
add
out
sub
or
stos
inc
cmp
mov
mov
cltd
add
scas
divb
mov
or
sub
xchg
lods
mov
je
mov
jg
fidivs
sahf
jp
xor
lds
sbb
mov
dec
out
jnp
add
pop
inc
leave
ret
enter
mov
mov
jne
push
and
pop
insl
sub
mov
inc
rcrb
call
and
and
push
dec
out
or
sub
enter
pop
cwtl
cmpsl
mov
xchg
xor
std
loop
mov
cmp
leave
xchg
jg
add
and
dec
les
insl
out
divb
in
outsl
xlat
lea
xor
add
xchg
test
mov
loopne
into
pop
lds
push
inc
shrb
pop
sbb
xor
pop
insb
add
insb
movsl
subl
out
jns
push
mov
mov
xor
mov
pop
dec
inc
adc
out
loop
sbb
es
stos
sub
mov
pop
into
stc
jo
into
lcall
cwtl
xchg
and
xor
pop
push
xchg
jae
inc
mov
test
dec
sbb
mov
fcomip
mov
out
push
orl
xor
stos
les
mov
fcoml
pop
jne
pop
lcall
xchg
push
stos
loop
mov
mov
fsubl
jp
push
jge
in
fnstcw
lock
jecxz
hlt
outsb
xor
xchg
cli
pop
movsb
leave
dec
cli
jmp
lret
iret
out
out
dec
sub
test
gs
jecxz
cmpsl
das
xorl
mov
or
xor
push
or
push
mov
add
or
repnz
fimull
xchg
pop
adc
in
orl
push
mov
enter
imul
jns
icebp
addl
pop
mov
imul
test
das
and
mov
test
pop
add
jl
mov
or
pop
sub
mov
sbb
sub
nop
mov
or
xchg
inc
add
out
pushf
cmpsb
xlat
enter
xchg
add
into
push
in
ret
mov
or
cmp
sub
mov
xlat
pop
and
dec
jne
push
jmp
jo
inc
cli
iret
loope
insb
xor
sub
shlb
lods
mov
sbb
mov
inc
push
lret
push
xchg
daa
jl
and
pop
xchg
fistl
or
mov
jo
mov
dec
push
fwait
adc
popa
jae
fstps
in
lock
fadd
or
xor
repnz
adc
adc
cld
fwait
lcall
and
lahf
cmp
add
adc
lahf
jae
in
mov
cwtl
jl
and
mov
out
pusha
int3
and
pop
mov
sahf
nop
sbb
add
dec
jb
add
push
sti
xchg
mov
xor
pop
dec
pop
test
xchg
in
enter
or
mov
sbb
xchg
fdivl
push
call
and
mov
lahf
dec
inc
leave
sub
ret
inc
inc
ret
cmp
xor
xchg
stc
adc
mov
jl
dec
jecxz
pop
negl
sbb
jge
iret
mov
pop
pusha
and
mov
out
jp
dec
pop
jmp
cwtl
push
lods
mov
jg
add
sub
jae
add
pop
bound
push
sbb
jnp
loopne
sub
fs
pop
adc
lcall
cmp
mov
into
ror
pop
pop
mov
ds
sti
mov
fwait
call
mov
mov
mov
jae
jne
out
arpl
mov
stos
xchg
sub
pop
cs
or
dec
stos
mov
pop
jl
or
and
ja
jo
lcall
pop
push
xchg
popf
push
daa
nop
cmpb
add
mov
mov
and
into
fucomip
mov
cmp
mov
je
imul
out
and
cltd
lods
popa
fwait
or
sub
and
cli
jmp
aaa
and
mov
fsubrl
jbe
push
xor
fs
in
hlt
aad
mov
jmp
xchg
or
xchg
xchg
shrl
mov
das
adc
cld
lea
call
in
pop
pop
mov
imul
ret
fbld
mov
inc
xchg
pop
lods
out
sub
fidivl
pop
and
out
pusha
xlat
pop
fwait
adc
xor
jl
fdivrl
adcl
pusha
hlt
push
loope
out
xor
ds
bound
pop
adc
pop
popf
pop
sbb
or
shlb
rcrl
stos
push
cmpsl
ds
add
mov
jge
jp
xor
cltd
xchg
mov
mov
mov
je
jge
insl
bound
push
and
repz
test
jo
std
sub
fildll
dec
in
sub
in
icebp
add
add
std
push
push
imul
test
mov
mov
out
lds
push
add
adc
sub
sub
mov
xor
stos
cmp
sbb
jne
fnstcw
sub
lcall
sbb
pop
bound
in
call
xchg
imul
pop
pusha
insl
pop
jae
pop
sbb
lea
lret
cwtl
lock
jns
xor
mov
pop
xor
cmp
lret
push
adc
pop
adc
mov
test
dec
xor
icebp
aas
lcall
int3
imul
mull
pop
push
in
call
dec
jg
push
rorb
out
and
adc
mov
out
jno
rcrb
sbb
inc
bound
cmp
mov
mulb
repz
fidivrs
xchg
adc
inc
adc
xor
sahf
inc
mov
out
push
mov
push
outsb
add
and
pop
mov
push
arpl
jns
mov
jmp
call
jno
fs
cltd
mov
jno
push
mov
in
adc
or
push
addr16
cmc
push
pop
ds
cmc
xor
cmp
fstpl
push
xor
aas
mov
mov
cmp
loope
loope
jmp
sbb
cmp
lahf
pop
aam
dec
test
cld
adc
add
out
mov
add
jo
dec
pop
rcrl
and
mov
test
inc
push
rcr
adc
jl
out
mov
xchg
rolb
fistpll
or
mov
repnz
bound
cli
mov
or
cmp
fsubrs
mov
xor
lret
aad
clc
mov
fsubr
pop
enter
shll
ja
lret
fst
sbb
cltd
jp
ret
pop
fdivrl
inc
leave
mov
pop
mov
sbb
ret
adc
bound
or
fildl
loop
je
jmp
rorb
mov
push
adc
push
mov
dec
inc
ljmp
cwtl
out
push
xor
sub
adc
lcall
nop
mov
enter
xor
adc
aas
popf
mov
mov
xor
jg
mov
cmp
sahf
sub
mov
lret
mov
jbe,pn
lods
loop
aam
cmpsl
sbb
add
hlt
out
cmp
mov
loop
mov
xor
insl
int
movsb
or
rcll
imul
push
xor
data16
push
imul
inc
and
mov
dec
sbb
repz
out
xchg
les
insl
sbb
add
sub
das
pop
loopne
jecxz
inc
sti
mov
xchg
xchg
sbb
mov
and
movsb
push
dec
pop
mov
lahf
inc
sub
aaa
push
divl
jns
cmp
mov
rolb
mov
pop
outsl
imul
cmp
xor
lock
or
loopne
stos
loope
pop
hlt
inc
imul
inc
in
aas
cld
insl
test
lea
icebp
andb
andps
mov
shrb
push
out
ret
lret
or
xchg
mov
cli
jnp
fildl
adc
jge
or
test
es
pop
push
cmpsb
cltd
stos
push
push
int
lds
adc
insb
xchg
mov
imul
mov
addb
mov
insl
sahf
pop
sbb
pop
mov
push
mov
addb
bound
sbbb
es
das
mov
in
loopne
in
or
adc
xchg
sub
jns
and
lods
lock
leave
jne
xor
or
aaa
xchg
jl
cs
hlt
inc
mov
in
pop
in
popf
cld
repnz
aad
add
js
mov
sbb
scas
fwait
shll
xchg
fwait
out
push
mov
negb
xlat
in
push
ss
loope
mov
fstpt
cld
gs
lods
lret
cltd
inc
mov
repz
push
push
int3
cmp
jl
out
outsl
fistpl
and
ret
inc
pop
sbb
add
fstpt
sti
idivl
lcall
lock
push
rcll
sti
push
addb
adc
push
sbb
xchg
mov
add
cs
sub
sbb
stc
ficoml
scas
loop
insl
lahf
dec
fldenv
cmpsb
jae
imull
adc
xor
iret
and
pop
pandn
mov
and
aad
cld
xor
adc
or
xor
out
clc
push
adc
cmp
andl
xor
popf
push
leave
ret
adc
mov
push
sti
xchg
inc
enter
movsb
icebp
pop
add
leave
cltd
or
and
js
adc
imul
dec
dec
in
in
fwait
add
xor
out
mov
push
push
imul
ret
imul
sar
cmp
jo
adc
movsb
outsb
pop
lret
insl
insl
jge
cltd
stos
inc
ljmp
fwait
outsb
or
test
mov
lret
mov
das
adc
arpl
mov
aas
iret
bound
icebp
lahf
mov
pop
imul
mov
jo
lcall
sub
sbb
adc
test
loopne
orl
sub
xor
mov
push
push
shl
int3
or
jecxz
loope
add
adc
pop
cmpsb
pusha
mov
cld
rclb
outsl
adc
mov
push
mov
fisubrs
mov
inc
lds
push
adc
movsl
jbe
ja
imul
int
push
cltd
insl
mov
or
scas
ret
sahf
dec
mov
dec
mov
or
cli
mov
scas
xchg
xchg
fsub
adc
test
xor
dec
mov
test
popa
repz
xchg
push
lcall
lahf
sbb
and
xorl
js
popa
push
and
xor
int
hlt
jnp
inc
insl
cmp
push
pop
or
in
xchg
adc
inc
ret
mov
push
sub
cld
push
jle
arpl
shufps
push
shlb
jae
daa
dec
movsb
jne
or
daa
add
movl
cld
xchg
test
lods
in
jp
add
repnz
dec
dec
fsts
dec
les
cli
ss
inc
outsb
test
inc
xchg
xor
push
outsb
or
lds
cmpsl
mov
mov
es
iret
mov
leave
gs
cmp
std
je
data16
jb
xchg
cmc
lea
into
daa
xor
pop
shlb
popf
aam
addl
and
push
add
fldl
pop
idiv
mov
and
jo
stos
sbb
jp
mov
push
fstl
or
incb
sbb
and
fldl
and
cmpsb
or
add
add
sbb
xchg
jge
pop
jns
das
push
jnp
dec
mov
sub
mov
dec
xchg
xchg
daa
xchg
loop
xor
daa
aas
sub
in
cmpsb
cli
sbb
push
add
addr16
xchg
push
rolb
je
inc
addr16
inc
jb
mov
fsubrp
out
mov
int3
mov
mov
xchg
fbstp
and
xor
leave
shr
mov
xor
loope
adc
in
push
inc
fisubl
scas
pop
jne
mov
pop
jo
cmpsl
push
jnp
sub
sub
ds
sub
mov
push
pop
loopne
mov
jne
cmp
dec
mov
cli
mov
pop
inc
int3
inc
xor
mov
lret
push
out
int3
lea
aam
daa
xor
mov
mov
cmc
mov
dec
lahf
pop
mov
mov
mov
mov
shrl
test
xchg
add
daa
add
sub
jno
div
test
mov
inc
sbb
outsb
int3
push
fisubrs
xchg
in
shr
lcall
sub
or
jp
clc
or
xor
or
adcl
xor
repz
inc
pop
sahf
popa
lahf
sbbb
pop
popf
dec
cltd
adc
insb
pop
stos
stos
test
or
or
mov
lcall
pop
adc
sub
ljmp
loopne
lret
out
in
or
cs
int3
mov
pop
jp
scas
test
movsb
aam
ror
lea
add
popf
inc
cmp
shlb
cmp
pop
push
out
pop
cmp
fsubrp
gs
pusha
out
push
pop
jne
mov
and
dec
aas
mov
adc
push
std
add
and
mov
loope
lock
pop
mov
ja
push
imul
fldenv
out
cmpsb
add
test
push
jge
insb
xor
xor
and
repnz
xlat
jb
xchg
pop
and
pop
mov
pop
cmpsl
ret
dec
cmc
add
mov
fcmovnbe
cmpsl
fstpt
add
pop
xchg
je
mov
add
sub
test
jecxz,pn
les
and
dec
xlat
push
stc
mov
pop
ficoms
mov
out
movsl
loop
dec
add
pop
ret
lret
sbb
or
cmpsl
mov
inc
xor
andb
mov
adc
pop
orb
cmp
in
movsb
mov
into
dec
inc
rorl
aad
jp
xchg
into
popa
push
jae
adc
dec
jns
insb
test
push
fs
int3
out
sbb
and
sti
into
das
cmp
loopne
add
or
subb
sub
and
lret
pop
test
xor
inc
mov
and
out
pop
mov
inc
pop
cmp
add
mov
mov
pop
adc
movsl
mov
mov
out
dec
xor
popf
out
inc
xchg
gs
inc
adc
inc
out
jg
or
insl
cmp
jg
test
pop
cmpsl
and
outsl
dec
mov
dec
aam
xorb
or
shrl
mull
cmp
sbb
push
dec
inc
call
fwait
pop
or
jno
push
xor
jbe
mov
sbb
nop
iret
hlt
cmp
arpl
fistpll
lahf
jecxz
mov
inc
idivb
jg
mov
adc
ja
mov
popa
mov
fildl
xor
shrl
add
adc
leave
and
pop
or
cmpsb
dec
icebp
cmp
repnz
adc
mov
fwait
add
scas
icebp
fadd
and
sub
xor
rolb
adc
add
mov
push
adc
xchg
push
rorl
push
and
push
je
lahf
cwtl
addl
push
nop
dec
pop
pop
pop
popa
fsubs
pop
pushf
mov
mov
xchg
call
mov
outsl
mov
push
and
ja
xor
addr16
lock
roll
cmpsl
or
pop
mov
mov
mov
out
js
jb
bound
cs
sbb
inc
push
push
lds
data16
or
pop
mov
fcomp
fidivrl
jg
sahf
decb
fcom
mov
scas
mov
mov
inc
roll
mov
int
cmp
xor
repz
pop
bound
fs
rorb
fs
add
loope
leave
ja
lcall
mov
pop
outsl
and
sbb
add
dec
mov
xchg
loope
movsl
pop
repz
dec
pop
push
enter
pop
pushf
f2xm1
cwtl
shlb
fnstcw
sti
xor
mov
inc
mov
frstpm(287
inc
cltd
push
sbb
xchg
pop
add
popa
mov
leave
jle
out
andl
mov
adc
dec
pop
fnsave
stos
stos
cmp
sbb
and
fstpl
mov
mov
dec
cmp
stc
lret
dec
loop
xchg
aad
pop
or
push
add
jp
das
inc
scas
mov
push
pop
push
rcl
std
xchg
mov
adc
pop
pop
push
out
push
movsl
outsb
out
imul
sbbl
and
pop
pop
xchg
iret
cmpsl
xchg
mov
fcoms
hlt
mov
mov
gs
mov
les
lea
outsl
dec
push
add
std
add
sti
mov
out
add
sbb
xor
jns
popa
mov
jle
inc
pop
or
pop
push
pusha
adc
test
cmp
fdivrl
jg
fdiv
xchg
sub
inc
pop
and
add
mov
cmp
dec
popl
popf
cmp
in
movsb
sub
dec
enter
enter
add
sbb
shrl
push
and
lods
sub
icebp
jno
nop
movsb
pop
add
filds
aad
leave
test
testl
push
addr16
and
mov
imul
jb
xlat
call
repnz
fwait
sahf
cmpsl
sbb
or
xchg
mov
ret
pop
incl
push
gs
or
sub
or
or
add
arpl
adc
aas
xchg
push
jno
inc
insl
inc
push
cmp
mov
ret
push
and
jge
xchg
inc
mov
inc
rclb
imull
mov
mov
dec
push
dec
fcomip
das
mov
out
jne
push
insl
jl
xchg
mov
ret
and
fdivs
add
jns
jl
int
add
xchg
or
dec
sbb
ja
lcall
aas
add
test
lds
xor
mov
xor
enter
pushf
jb
rorb
sbb
jmp
jae
sahf
loop
dec
lret
insb
fcoml
sbb
ds
stc
dec
xor
arpl
lock
jnp
orb
push
add
fmulp
adc
push
rcll
cli
adc
mov
mov
sub
mov
mov
or
and
or
dec
test
jge
insl
xor
icebp
call
adc
pop
push
in
sbb
popa
dec
in
mov
push
jb
test
mov
mov
pop
ja
adc
and
insl
inc
shll
ds
push
stos
mov
or
aam
mov
insb
push
pushf
outsb
dec
xor
jo
or
jmp
sub
push
adc
inc
inc
aam
or
adc
stos
xor
push
loop
pop
push
popf
les
cltd
dec
flds
mov
rclb
shlb
push
movsb
jle
mov
push
int
push
jae
cmp
mov
and
adc
sbb
push
pop
pop
scas
pop
je
movsl
imul
mov
pop
xchg
push
pop
cs
jbe
sbb
push
or
xchg
xor
pop
cmp
lret
popa
test
out
jge
sbb
test
push
lret
ret
fcmovne
xor
xor
adc
in
add
or
vmovapd
das
sbb
sub
sbb
ja
fwait
xor
fcomp
dec
inc
test
adc
cmp
inc
mov
xor
out
loopne
testb
jne
ljmp
inc
ds
adc
sub
aam
popa
aad
lods
sbb
or
mov
pop
mov
cli
adc
jnp
aam
in
add
mov
cmp
inc
cmpsl
sbb
mov
mov
jno
pop
arpl
in
je
sahf
movsl
rcll
or
sub
sub
add
xor
xor
push
dec
jecxz
or
ja
mov
mov
insl
add
not
adc
scas
shrl
pushf
stos
mov
mov
adc
mov
sbb
repz
mov
sub
jle
or
xor
adc
shl
dec
in
and
into
push
mov
push
cmp
sub
pop
xor
adc
scas
xchg
push
test
pusha
inc
popf
lods
jb
int3
movsb
in
gs
loop
mov
shl
sub
cmp
inc
shrb
sbb
in
mov
xchg
in
cmpsb
test
adc
out
stc
cmp
add
jae
inc
loopne
adcl
pop
outsl
push
pop
pextrw
je
cld
in
pop
imul
push
pop
cmp
mov
and
cltd
into
cld
stos
daa
xor
stos
cmp
lahf
les
jno
cmp
icebp
insb
push
outsl
push
pop
ret
ja
push
inc
fwait
movsl
mov
out
cli
inc
push
mov
scas
leave
xor
mov
cmpsb
movsl
add
out
mov
loop
pop
dec
aad
cmp
sub
daa
pop
mov
or
pop
cmovns
inc
mov
and
xor
sub
in
cmp
pop
roll
sbb
xchg
enter
adc
pop
jge
cmpsb
lock
or
fptan
pop
jne
lret
stos
push
scas
out
loopne
inc
iret
sti
adc
cmp
clc
icebp
cmp
fldenv
jecxz
rolb
std
push
test
cltd
fsts
call
cli
ja
mov
es
pop
out
in
shl
jg
dec
pop
jecxz
and
lret
mov
test
movsb
adc
fsubrs
or
mov
jl
xor
jbe
mov
popf
lods
xor
movsb
lds
cmp
cmp
mov
mov
jno
call
mov
fdivs
addr16
lods
dec
or
xchg
fldcw
push
pop
jnp
das
sub
jge
fnsave
xchg
sti
dec
sub
das
clc
mov
movl
test
into
pop
arpl
roll
mov
lock
mov
cltd
mov
inc
add
inc
push
push
jno
mov
jbe
mov
in
dec
add
in
test
mov
leave
fcomps
orb
fstpl
fistl
mov
adc
mov
bound
mov
int3
lcall
std
pop
or
jns
fcoms
cmp
mov
pop
sahf
adc
or
jae
lret
loopne
lea
sub
pusha
insb
ds
sbb
mov
sub
adc
jnp
aas
xor
aad
loope
pcmpgtb
mov
jge
in
dec
push
pop
xor
cs
jl
clc
cli
xchg
out
loope
sahf
pop
cmpl
mov
fdivr
xchg
add
pusha
ds
inc
sub
dec
push
cmp
pop
imull
cmp
lds
jb
xchg
push
incb
js
mov
pop
xchg
clc
jg
lret
push
push
loop
ljmp
sahf
clc
adc
js
adc
mov
into
arpl
test
dec
and
or
inc
xchg
fstpl
outsl
popf
and
in
pusha
cltd
or
shrl
mov
push
pop
ds
loop
mov
and
sbb
sbb
aad
push
or
mov
lahf
outsb
pop
fwait
or
sbb
push
test
gs
shrl
ret
sti
rcrl
mov
sub
xor
pop
push
xor
adc
mov
jp
push
in
dec
jne
jmp
call
in
add
rcll
jecxz
cltd
mov
inc
into
jecxz
lea
loopne
jns
mov
xor
sarl
pop
cltd
and
mov
ljmp
cmp
jb
loop
mov
lds
fwait
mov
adc
cmp
or
out
add
xchg
xchg
clc
cmp
aaa
adc
imul
mov
cld
es
andb
rcl
cli
xchg
mov
mov
and
add
or
shl
cmp
jge
adc
addr16
test
sbb
cmp
call
out
add
push
xchg
or
mov
add
nop
dec
arpl
inc
xchg
dec
push
lcall
pop
or
mov
sbb
or
iret
jnp
xchg
jb
adc
sub
pop
jb
pushf
in
mov
mov
xchg
mov
in
pop
repnz
xchg
push
add
push
out
xor
mov
jnp
stos
insb
inc
jb
mov
cmp
cmp
fwait
dec
fxch
cli
xor
std
push
andb
iret
ja
or
mov
dec
mov
out
test
sbb
push
hlt
adc
sbb
scas
mov
adc
in
xchg
ljmp
cmpsb
sbb
data16
sub
push
inc
pop
loopne
aaa
add
xor
dec
jbe
xor
gs
jnp
lret
mov
dec
jge
inc
xor
jecxz
jecxz
mov
not
mov
mov
cmpsl
rorl
xchg
pop
pop
sbb
int
cltd
sub
les
imul
outsb
push
dec
jo
dec
fldcw
out
push
xor
aam
js
stos
arpl
popf
jecxz
sbb
jno
mov
ja
sbb
push
stos
jno
xlat
or
inc
loop
cmp
or
in
subb
adc
mov
push
push
and
push
sarl
pop
repz
nop
xchg
cmpsl
cmp
pusha
sub
mov
notl
lock
fsubrs
pop
dec
xor
or
cltd
xchg
add
jg
rcr
out
icebp
pop
scas
ficomps
mov
nop
in
fimull
aad
lock
lret
shl
pop
pop
jae
sahf
js
sahf
sbb
loop
in
sub
scas
icebp
jnp
xor
ljmp
mov
xor
jbe
data16
popa
enter
add
inc
pop
cmp
addl
mov
sbb
ret
popa
jo
lods
test
jns
lds
popf
movsb
xlat
cmc
aas
push
mov
movswl
add
insb
ss
xor
repnz
pushf
mov
popf
repnz
xor
push
clc
adc
mov
sbb
push
dec
imul
pop
out
cltd
test
js
test
lds
or
in
push
jp
test
pop
cmp
ss
fld
inc
movsb
push
inc
mov
mov
jae
cmpsl
inc
shlb
imul
or
cmp
cmp
cli
mov
adc
mov
hlt
cltd
xchg
fisubrs
lds
stos
les
lods
test
xor
loop
adc
in
loop
dec
rcrl
mov
in
inc
jmp
aam
ss
xchg
pop
cmp
push
daa
cli
std
in
jae
dec
out
push
fdivrs
std
aas
fbld
sarl
cmc
xchg
or
mov
push
rcr
push
pusha
fimull
das
mov
and
cmp
sub
ficompl
inc
fptan
std
shll
aaa
pop
sbb
icebp
orl
fdivrs
push
xchg
andb
jns
and
or
or
push
mov
bound
pop
clc
int
inc
add
add
sub
dec
test
imul
dec
fnsave
xchg
ret
cmp
cmp
mov
stos
scas
pop
xchg
hlt
pop
jle
loop
inc
je
mov
inc
or
and
pop
scas
xchg
sbb
outsb
mov
clc
dec
inc
sbb
pop
in
lret
pop
pop
cmp
and
neg
mov
pushf
xor
lock
fisubs
pop
jbe
mov
xor
xlat
sbbb
fs
dec
testl
inc
cmp
insl
or
lret
imul
testl
jns
dec
mov
ljmp
jl
xlat
xor
cmp
daa
add
shrl
xchg
push
cld
icebp
fisttpll
loop
xchg
in
and
pop
lods
or
and
shr
mov
adcb
cmp
xchg
lea
std
fstps
add
fldenv
inc
mov
sbb
or
rclb
lret
pop
in
lret
jl
push
mov
pop
mov
je
pop
loopne
xor
and
in
shrl
inc
ja
addr16
xor
jno
lock
xchg
push
lods
dec
or
movsl
sub
pop
test
pop
dec
icebp
shlb
pop
adc
jecxz
scas
in
aam
pop
jb
adc
aas
das
aaa
mov
sbb
popa
sbb
test
fistl
xchg
mov
dec
das
mov
mov
cmc
pusha
adc
sub
xlat
imul
pop
repnz
popf
push
aam
xchg
and
loopne
push
addr16
scas
dec
push
or
outsl
xchg
jbe
popa
xor
xchg
jo
add
std
mov
cmc
enter
inc
addr16
add
mov
sub
test
into
scas
dec
test
adc
andl
loop
mov
push
xchg
les
mov
test
push
ret
inc
fisubs
add
pop
cwtl
and
lcall
stos
mov
push
je
adc
pop
loop
mov
pop
xor
or
sub
cmpsl
xor
xchg
mov
ficoms
xchg
fdivr
mov
ret
lods
adc
aam
push
inc
mov
shl
daa
inc
aas
leave
dec
push
arpl
sahf
add
mov
inc
loope
shll
pop
fimull
mov
xor
jp
jp
sbb
push
aam
ljmp
push
icebp
imul
scas
lock
and
dec
xchg
jnp
jg
or
mov
push
inc
aas
repz
adc
jl
inc
jl
xor
aad
mov
add
in
cmp
sbb
jmp
mov
rep
lcall
push
orb
xor
mov
cmpsb
cs
das
imul
cmpsb
cmp
mov
xor
mov
ljmp
add
imul
mov
imul
dec
mov
test
sbb
popa
cli
mov
inc
fmull
add
add
negl
dec
imul
inc
clc
xor
iret
fadds
dec
dec
mov
xchg
inc
jbe
mov
mov
test
loope
mov
add
call
pop
mov
enter
mov
subb
out
xor
and
mov
jg
inc
push
stos
fcmovne
pop
push
dec
in
sbb
sub
sti
hlt
or
pop
or
and
lock
xor
sbb
mov
push
movsl
out
push
mov
inc
or
imulb
jmp
jl
loope
xor
enter
cmovo
insb
in
fcoml
repnz
mov
pop
pop
aam
testb
pop
jmp
and
aad
in
jae
les
xchg
inc
pop
jg
mov
xchg
mov
movsl
idivb
aad
push
insb
stos
mov
cmpsw
adc
ja
adc
or
mov
je
jmp
pop
push
sub
push
and
and
test
jb
out
add
mov
out
xor
sub
or
aam
push
mov
inc
inc
in
xor
outsl
loopw
jle
pop
sbb
jmp
dec
inc
and
enter
cmpsl
add
insb
sbb
mov
rcrb
aad
mov
push
std
repnz
add
stos
xchg
mov
cmp
xchg
dec
orl
mov
movsb
mov
pop
mov
jg
push
push
jno
mov
push
frstor
and
stc
fisttpll
int3
std
fwait
aaa
pop
jl
xchg
movb
fst
pop
sbb
mov
lea
dec
adc
cs
shl
fcoms
filds
add
adc
add
push
xchg
push
push
xor
rorl
aaa
inc
out
pop
in
jge
inc
pop
push
es
jo
cld
push
jl
fbld
sbb
imul
xor
mov
xchg
mov
xchg
ret
adc
into
rolb
pop
dec
cs
and
rorb
xor
shll
leave
mov
xor
mov
add
jecxz
mov
lods
xchg
call
nop
xchg
mov
addr16
loope
js
outsl
loope
bswap
dec
int3
repz
mov
jno
ret
jae
jge
pop
pop
add
sbb
mov
repz
lods
pop
daa
xchg
repnz
sbb
add
je
stos
mov
push
pop
push
cmp
es
fwait
cmp
rorl
mov
sub
cmp
mulb
paddb
pcmpgtw
and
cmp
call
into
mov
jecxz
push
orl
pop
fsubrs
xor
inc
fwait
and
das
mov
aam
fwait
insb
sbb
sarw
outsl
aam
pop
jg
stc
lods
cmp
mov
jnp
xchg
ja
pop
rolb
jge
adc
clc
les
cmp
lods
cltd
dec
xorb
or
add
mov
xor
or
les
mov
into
cmp
mov
fsubl
aaa
pop
test
jbe
push
add
push
xchg
out
or
mov
rcl
movsl
lcall
adc
adc
hlt
inc
hlt
sahf
pop
or
adc
or
push
jnp
in
cmp
cmp
testl
test
and
sub
in
pop
and
inc
and
add
inc
popa
mov
cmp
jle
jno
sar
rcrl
fsubr
jns
push
jbe
jle
adcb
adc
mov
push
stos
pop
pop
mov
mov
sahf
xchg
cld
sub
lret
sbb
stc
cli
push
shl
lock
push
and
push
or
rcr
in
aam
inc
call
mov
inc
jg
imulb
data16
and
mulb
xor
bound
or
ja
adc
jnp
xchg
lods
mov
jmp
sub
repnz
scas
into
into
iret
mov
xchg
jne
and
or
cmp
out
xor
mov
popf
loop
sti
aad
jmp
mov
sub
fisubrs
push
lods
inc
cld
pop
movsb
idiv
bound
pop
mov
mov
cmpl
jnp
jle
fldl
or
dec
call
pusha
mov
cmpb
and
clc
daa
sbb
dec
enter
cmp
fidivs
dec
icebp
or
pop
test
aaa
xor
fidivrl
sub
sbbl
test
cmpb
push
outsl
loope
cmp
dec
adc
jnp
adc
insb
xchg
aaa
inc
dec
stos
cmp
cmc
sub
push
dec
or
pop
inc
sbb
jnp,pt
cmpb
mov
repz
in
fadd
and
add
stos
in
mov
ret
push
mov
pusha
fwait
arpl
and
adc
scas
inc
push
jp
sarl
xor
stos
out
jg
in
add
ja
push
ja
mov
xchg
push
mulb
adc
data16
push
stos
lock
int
fnsave
pop
fcompl
test
shl
aam
enter
add
pop
in
das
sub
xchg
mov
icebp
push
gs
ret
outsl
or
lcall
icebp
rolb
sub
mov
jp
add
pop
jns
jp
sbb
or
push
pop
add
push
dec
mov
inc
and
pop
mov
push
adc
sub
cwtl
lods
mov
ret
daa
test
mov
daa
in
and
test
xchg
aas
sub
xor
out
cmp
pushf
push
push
insl
pushf
jne
shll
shlb
pop
cmp
cs
sti
jns
fcoml
mov
pop
aad
sbb
enter
bound
xchg
lea
add
das
test
mov
xchg
ret
and
or
or
or
mov
setne
ja
es
cmp
aad
fstl
sarb
adc
leave
filds
push
pop
pop
fcomip
xchg
push
jl
cs
mov
mov
mov
out
ja
int
shrl
adc
out
or
mov
lock
out
push
insl
subb
std
popa
int3
and
popl
push
ss
jg
icebp
sbb
mov
pop
fsub
shrl
out
cmp
movsl
stc
mov
xchg
dec
out
fwait
sub
imul
mov
pop
mov
xchg
nop
pop
jmp
roll
cmp
cmc
es
cmp
incb
loopne
lea
sbb
xchg
jl
dec
push
les
pop
cmp
jbe
push
jo
push
cmp
or
pop
lods
cmpsb
loopne
xlat
cmpsl
mov
fiaddl
ffree
insb
add
xor
cmp
adc
dec
fiadds
sbbb
hlt
cmp
jo
loopne
rorb
pop
clc
jbe
test
pop
cli
repz
adc
dec
lds
dec
movsl
cmpsl
test
mov
in
inc
fs
aad
fwait
xor
sbb
call
cmp
mov
pop
enter
icebp
mov
jp
clc
mov
jle
jb
aam
jecxz
mov
add
aad
pop
push
ror
pop
mov
test
mov
frstor
jne
pop
add
and
daa
fwait
lret
xchg
adc
jp
add
xor
nop
jge
fistpl
xor
jns
mov
mov
add
jnp
and
mov
xor
jnp
sub
lock
dec
subb
and
aaa
dec
in
jmp
in
sbb
mov
addr16
lret
xchg
shlb
popa
mov
movsb
mov
xor
lret
lahf
sarl
pushf
mov
push
pop
add
enter
fsubs
js
pop
in
mov
cmpsb
loopne
ss
inc
jl
xchg
xor
sbb
outsl
imul
inc
and
cmp
jge
push
jae
mov
lds
lock
insl
or
insb
jle
shrl
xchg
cmp
inc
inc
call
or
in
sbb
stc
add
fwait
jl
jl
ret
pop
addr16
mov
data16
cmp
mov
adc
mov
arpl
mov
ret
cmp
ja
movsl
movsb
shrb
lea
je
cmp
lret
inc
mov
insl
pop
pop
cmpsl
clc
dec
push
cmp
in
and
cmp
loop
je
sbb
lahf
jg
in
mov
add
sbb
push
cmpsl
dec
inc
inc
ret
test
inc
repz
incl
push
nop
adc
jne
jmp
xor
les
dec
sbb
or
xchg
cmpsb
push
or
jmp
lret
loopne
mov
ret
cs
sbb
add
xlat
icebp
adc
jecxz
sub
inc
mov
sbb
push
mov
sub
or
pusha
imul
nop
inc
cld
cld
in
rcrl
xchg
add
adc
shll
adc
adc
dec
or
pop
xor
push
jae
adc
cwtl
xchg
pop
mov
idivl
shrb
sub
in
repnz
jne
mov
imul
inc
shll
cmp
add
mov
shrl
mov
add
mov
xchg
pop
pop
in
hlt
loop
push
leave
mov
out
rcr
mov
pop
int3
xor
jle
push
gs
jle
int
gs
pusha
gs
sbb
outsl
sbb
cmpsb
jno
adc
cmp
fmull
jp
sbb
mov
fdivs
outsb
adc
add
jg
jl
mov
pop
add
and
subb
dec
inc
and
les
repnz
add
push
mov
das
push
sbb
lock
movsb
sub
inc
sti
scas
iret
jg
test
stos
mov
cmp
xor
mov
nop
sbb
pushl
xor
or
ljmp
ret
mov
pop
add
xorb
and
insb
std
call
outsb
pop
push
mov
in
rcll
cmp
mov
mov
or
iret
enter
inc
push
stc
mov
add
ljmp
adcl
dec
into
ss
jbe
dec
ja
inc
jg
aas
xchg
jle
js
sub
xchg
out
cmp
mov
lret
insb
outsl
loop
test
rorl
add
mov
jmp
addb
cmp
leave
pop
in
mov
pusha
in
push
pop
xchg
and
lret
pop
insl
repz
mov
sar
push
iret
test
test
popa
sbb
cmpsl
test
fcoms
pop
pushl
add
ret
add
or
inc
or
inc
jge
dec
cmp
ds
pusha
cmp
aas
inc
cmp
mov
cwtl
jg
call
inc
cs
not
xchg
popa
xchg
jo
in
mov
add
xor
lahf
lock
lea
sarl
std
and
movsb
jno
mov
xchg
cmp
dec
mov
stc
fists
push
testb
jb
jne
insl
mov
or
push
pop
ja
adc
mov
and
add
out
es
jmp
popf
inc
ror
xchg
mov
mov
pop
pop
js
cltd
pop
mov
mov
cli
push
xor
pop
dec
arpl
add
mov
xchg
fxch
scas
or
jbe
lods
jbe
xchg
dec
push
lret
sub
dec
dec
or
jecxz
push
mov
je
or
dec
add
xor
ds
and
sahf
sbb
std
sbb
inc
sbb
adc
pushf
stos
dec
jae
lcall
pop
das
das
in
push
push
push
xlat
add
mov
or
movsl
lret
ret
rcrl
or
or
stos
pushf
xor
pushl
add
pop
ret
mov
mov
lds
xor
fsubr
xchg
gs
enter
aaa
mov
loopne
jnp
mov
sub
hlt
mov
js
cmp
test
sbb
pushf
jb
add
sbb
scas
mov
jle
push
nop
xchg
mov
jecxz
sub
outsb
xchg
add
pop
bound
sub
xchg
pop
popf
andl
test
pop
cmp
sub
inc
mov
mov
dec
popf
mov
sbbl
xor
jl
aad
sub
icebp
bound
fbld
into
xchg
das
xchg
cmp
mov
or
repz
mov
stos
and
notl
sub
loop
adc
fistps
or
adc
or
filds
rol
ret
sbb
gs
sub
sub
xor
sarl
call
icebp
mov
push
in
xlat
pushl
loope
dec
push
cmpsl
xchg
idivl
call
add
xor
and
pop
test
jbe
dec
test
sbb
lock
lcall
push
xchg
lahf
sbb
into
dec
cmp
repnz
xor
push
je
mov
ret
out
sbb
fs
loop
mov
pop
cmp
repnz
pop
fwait
pop
adc
roll
fstpt
mov
xor
or
cmp
popf
xchg
jbe
outsb
xor
mov
repz
sbb
xor
push
nop
rclb
popa
xorb
fildll
pop
je
jl
mov
out
mov
jae
dec
stos
xchg
ljmp
loope
cmpsb
lret
test
sahf
lods
push
add
sub
xor
sti
stos
and
popf
hlt
dec
leave
pop
dec
loope
data16
outsl
sti
adc
jecxz
addl
dec
cld
jnp
shrb
adcb
fldenv
popf
pop
pop
repz
aaa
cmp
or
cs
mov
jp
sahf
stc
add
push
lock
ja
dec
bound
je
pop
push
lods
lret
xchg
and
push
mov
xor
aaa
dec
out
dec
adc
mov
sbb
test
fdivrs
scas
mov
mov
mov
movsb
in
dec
out
jo
dec
push
jmp
test
or
std
pop
insb
push
sub
mov
scas
jne
std
es
testb
lock
adc
sub
sbb
mov
pop
lea
and
stc
call
test
sub
and
push
fs
cld
push
je
inc
idivb
mov
imul
xchg
fcom
sbbl
mov
decb
stc
jb
aas
sbb
scas
cmovo
in
sbb
inc
ljmp
daa
inc
ret
cmp
into
loope
das
sub
cwtl
shl
mov
mov
ret
mov
mov
mov
clc
push
mov
and
jo
mov
cwtl
pusha
loopne
loope
cmp
dec
pop
xchg
stc
push
mov
movsl
sub
mov
test
push
lea
dec
cltd
sub
out
inc
jl
sub
das
lret
push
outsl
pop
push
daa
js
mov
add
mov
mov
fs
sbb
popa
pushf
daa
cmp
cmp
push
inc
cmp
lods
imulb
ss
adc
jns
jo
popa
push
outsl
ror
cmc
arpl
push
and
outsl
xchg
mov
pop
cmp
and
cmp
mov
dec
or
addr16
rcrl
insb
movsb
mov
mov
out
movntps
dec
mov
arpl
js
dec
jg
or
out
outsb
sti
lcall
mov
int
pop
sbb
dec
mov
mov
and
fwait
dec
add
test
add
cmp
in
add
sbb
xor
or
fs
cli
ret
je
loope
loope
xor
cmp
movl
pop
sahf
xchg
decl
dec
dec
jecxz
pop
stos
imull
mov
cmp
cmp
out
xor
shll
outsl
push
adc
sbb
sbb
and
rolb
push
mov
cld
mov
subb
fistps
cmp
enter
xchg
loop
sbb
lds
mov
insl
mov
clc
pop
test
clc
sbb
call
jle
lds
lea
fwait
xor
push
dec
loopne
aas
xor
imul
mov
aad
test
test
adcl
out
mov
adc
jne
test
loop
adc
lret
or
push
add
dec
hlt
and
aam
jp
fisubl
ss
jns
pop
pop
pop
data16
push
fs
in
mov
inc
das
add
mov
ljmp
cld
jne
push
jne
inc
ja
outsl
cmp
adc
sbb
cmp
xchg
xchg
mov
add
mov
mov
pushf
dec
nop
pusha
cld
jnp
mov
push
fnsave
shrb
sbb
mov
pop
insl
fwait
mov
and
test
push
out
inc
add
cli
and
xor
sub
iret
movsl
movsl
out
arpl
loopne
aam
iret
aaa
stos
cmpsb
and
cmp
dec
je
push
jp
andb
lods
sub
jb
and
repnz
ffreep
js
test
or
adc
mov
bound
or
data16
cmpsl
push
inc
test
or
out
and
sub
sub
repz
roll
mov
addr16
popa
movsb
mov
lahf
mov
and
lods
dec
and
dec
pop
push
adcb
jo
ljmp
pop
sub
push
jae
dec
loopne
pop
fsubp
outsl
repnz
data16
jno
ret
call
shlb
cmc
push
pop
enter
fmulp
sbb
inc
call
pushf
xchg
lcall
mov
fsub
inc
sysret
xor
das
sub
dec
test
sbb
add
les
jb
cmp
inc
insb
xlat
popa
movsb
std
pop
pop
jle
leave
adc
lods
daa
ja
ret
rclb
gs
mov
cld
ja
mov
movq
dec
adc
push
aam
add
scas
imul
out
xor
idivb
sti
xchg
movsl
out
shl
push
pop
mov
stos
out
scas
or
jp
out
and
insl
out
xlat
sbb
call
inc
add
push
hlt
mov
inc
jl
jo
jg
push
repz
adc
or
insb
mov
ret
std
lods
cmp
sbb
mov
mov
cld
aas
mov
push
scas
mov
call
js
addr16
push
sahf
inc
fisubs
dec
icebp
inc
pop
push
in
mov
gs
enter
gs
jecxz
cmpsl
push
inc
setge
sub
jns
xchg
or
or
mov
pop
mov
aaa
push
jmp
jns
lock
add
mov
dec
jp
out
cs
mov
addb
out
les
inc
pop
xchg
into
incb
push
push
cmp
dec
or
lret
mov
push
mov
fcomps
or
call
enter
std
cmp
pop
jbe
gs
addl
fiaddl
lock
jp
call
lret
cld
or
fimuls
or
lret
sbb
lds
sub
adc
dec
sbb
mov
mov
adc
mov
orb
jns
jb
maskmovq
idivl
mov
push
loopne
imul
jmp
jmp
out
xor
fsubl
pushf
inc
icebp
mov
ret
fiadds
dec
sarb
pop
cmp
push
arpl
jae
push
sbb
fistps
adc
sahf
lret
dec
jns
xchg
or
adc
dec
jnp
idivl
pop
rcr
xor
xchg
push
fwait
cmp
or
imul
or
lock
push
sub
sahf
fcmovnu
pop
in
stos
gs
push
mov
sbb
je
into
jne
daa
sahf
sbb
cltd
fldenv
mov
hlt
shl
or
in
out
xchg
inc
xchg
sub
pop
mov
shrb
add
xlat
mov
or
ljmp
popa
daa
nop
mov
cmp
clc
fsubs
or
sti
xchg
push
fstpl
dec
sti
ret
ss
pop
test
adc
in
fldt
and
mov
dec
adc
cmc
mov
mov
xchg
rolb
iret
shr
and
pop
and
or
xchg
repnz
fsubr
push
inc
rclb
cmp
fsubrl
pop
cmc
gs
push
in
pop
jb
jae
aam
sbb
jmp
in
cmp
dec
sbb
out
jae
xor
pushf
fmuls
sbb
xor
stc
mov
incl
cmp
xchg
fsts
pop
cmp
push
mov
sbb
jno
cmpsb
in
push
and
aaa
mov
out
lods
lods
adc
xchg
iret
pop
push
pop
js
imul
mov
nop
pop
in
scas
push
inc
cld
repnz
sub
out
cmp
scas
inc
mov
xor
pop
dec
push
mov
enter
jb
out
push
inc
lret
dec
sbbl
xor
scas
xlat
mov
nop
xchg
ja
adc
repnz
dec
and
test
push
ds
xor
mov
jg
and
mov
or
pushl
jae
add
fldenv
std
ffreep
ror
fdivrp
mov
dec
out
pushf
stos
xor
ds
sub
and
outsb
adc
or
push
inc
aaa
mov
in
pop
push
loop
xchg
pop
lcall
sbb
adc
jmp
divb
mov
mov
gs
mov
xor
pop
jne
xchg
sbb
inc
pop
pop
cmpsl
pop
flds
rcrl
mov
popf
xor
insb
mov
stos
mov
rsm
add
scas
fdivl
or
je
sub
loopne
fs
xor
xor
dec
es
mov
dec
jne
pushf
sahf
insb
jno
daa
dec
pop
test
jo
fwait
call
stos
loop
mov
dec
add
stos
jmp
aas
js
aad
pop
ss
enter
negl
sbb
lds
aad
lods
jp
in
and
adcb
dec
arpl
jmp
push
into
arpl
cmpsl
jl
xchg
sahf
jne
jmp
sub
movsl
cld
pop
pusha
cld
pop
int
dec
std
loope
rcll
dec
and
hlt
fisubs
jns
sbb
xor
and
inc
mov
or
out
imulb
andnps
jbe
insb
push
fwait
stos
jo
mov
loop
pop
int3
xchg
mov
and
roll
cmp
jle
movsb
mov
call
pop
movsl
or
std
aaa
fucomi
sub
sbb
pop
mov
inc
jecxz
cmpl
xlat
cmp
jnp
cli
mov
in
outsb
sahf
jne
sub
shlb
out
cmp
pop
outsl
fistpl
out
jbe
daa
fs
dec
pushf
sbb
stos
jmp
scas
sbb
pop
out
popf
cmp
negb
cld
cld
js
aam
into
mov
mov
xchg
cmp
mov
ds
pusha
dec
pusha
ficoml
lcall
mov
es
mov
es
rcrb
movsl
jns
sub
lahf
jmp
xchg
inc
ljmp
in
pop
popf
and
popf
fucomp
lods
cwtl
cmp
mov
inc
stos
sub
aad
orb
das
jnp
ret
fs
filds
dec
pop
jecxz
xchg
je
inc
das
sbbl
packuswb
test
pop
loope
xlat
leave
sub
cmp
xchg
jno
aad
xchg
and
icebp
or
addr16
iret
push
jo
nop
lret
mov
loope,pt
pop
imul
out
add
pop
push
andl
xchg
sub
jae
mov
mov
sbb
add
mov
push
mov
stos
std
dec
adc
nop
lods
sub
mov
xor
movsl
cmp
in
cmpl
adc
gs
add
jne
pop
jbe
repnz
fildl
test
jg
mov
push
xor
out
outsl
mov
idiv
fcoml
mov
mov
mov
pop
sti
xor
andl
shll
cmc
popf
clc
into
xchg
mov
or
rol
icebp
dec
rcr
sub
aad
jmp
ror
add
shr
lret
sbb
arpl
mov
cmp
sahf
jbe
mov
cmpb
jg
inc
push
call
pop
pushw
cld
jecxz
dec
xchg
mov
mov
ljmp
shrb
jnp
cld
lods
mov
lahf
mov
imul
xor
testb
sbb
xchg
icebp
sti
clc
xchg
adc
popa
imul
mov
mov
or
gs
lock
ret
vandnps
bound
xorl
mov
cmc
js
sbb
inc
fisttpl
addr16
sub
loope
into
shll
lcall
xor
jle
xor
mov
jnp
iret
idivb
mov
dec
cmp
ljmp
pop
jl
push
cmpsb
enter
adc
cs
pop
in
mov
xchg
xor
jns
inc
add
xlat
aas
xor
imul
lcall
xchg
sub
lahf
mov
mov
dec
xor
adc
xor
push
dec
enter
je
jae
loope
aas
add
out
movsb
das
cmp
sub
sub
mov
idiv
sbb
sbb
xchg
cwtl
cmp
xchg
pop
xchg
lods
pop
lods
lds
stos
in
add
adcl
mov
loopne
adc
sbb
leave
push
jbe
mov
pop
imul
aad
lcall
xor
insl
lea
and
sbb
shr
repnz
mov
mov
xchg
inc
mov
sub
inc
jae
out
inc
test
popf
mov
dec
cmp
pop
lahf
dec
js
arpl
cmp
push
xchg
es
push
cmp
xchg
fs
in
fnstenv
lret
cmp
adc
mov
push
push
repnz
outsb
push
fdivrl
jge
movsb
neg
xchg
inc
repnz
addr16
mov
or
lahf
fwait
pop
add
push
shll
addr16
adc
negb
jmp
xor
and
cmp
push
ds
mov
inc
jne
das
rclb
lods
mov
ret
push
movsb
stc
add
in
pop
test
fcoml
dec
frstor
mov
leave
ss
dec
push
or
scas
fldlg2
dec
pop
les
push
lret
rcrb
movq
pop
push
mov
lods
call
or
inc
cmc
in
or
out
push
ljmp
out
jbe
xchg
aaa
sub
jp
mov
sub
out
mov
adc
dec
ret
ljmp
js
daa
cmpsb
xchg
push
sbb
sub
mov
mov
sarb
cmp
lahf
add
in
lahf
sub
lret
enter
mov
pop
aas
adc
movsb
mov
mov
pop
out
addl
stc
loopne
and
pushf
pop
mov
gs
mov
dec
fldl
stc
outsl
mov
xchg
inc
mov
jnp
stos
mov
jbe
arpl
mov
and
popa
cmc
out
mov
cltd
push
xchg
sahf
bound
pop
test
dec
jns
adc
pushf
pop
and
fbstp
pop
mov
adc
pop
inc
mov
inc
cmp
sub
jp
xchg
mov
cs
data16
cli
sub
test
add
inc
iret
and
and
xchg
mov
out
pushf
test
sbb
mov
push
icebp
cwtl
jno
pop
test
xchg
jnp
jno
nop
add
add
mov
add
aas
mov
jp
jmp
push
jo
enter
cld
fwait
adc
aam
mov
xchg
and
inc
mov
je
mov
cmp
jl
jl
mov
ljmp
sti
je
jno
repnz
or
mov
xorb
ja
aam
jbe
stos
inc
lock
hlt
pop
loop
inc
jmp
mov
hlt
out
mov
push
add
arpl
cltd
sub
inc
sbb
cmpsl
mov
mov
mov
adc
sbb
test
and
or
sbb
pop
mov
or
xor
mov
push
push
fsts
scas
int3
jmp
sub
fbstp
iret
rolb
out
inc
fucomip
popf
unpckhps
leave
dec
aam
and
push
loope
test
mov
loopne
sub
inc
in
sub
out
dec
out
sub
in
push
leave
sbb
mov
aas
push
sub
cmp
mov
mov
dec
jae
jge
dec
dec
xor
lcall
and
inc
dec
push
nop
imul
mov
pop
mov
jnp
mov
mov
cld
sbb
sahf
and
jmp
lret
int3
in
mov
cmp
insb
push
dec
mov
or
inc
lods
cmpsb
inc
mov
rolb
dec
lret
cmpsl
sahf
cmpsl
fildl
decb
lret
add
xchg
std
pusha
add
jecxz
push
or
adcb
mov
dec
push
fistps
inc
clc
sub
divl
pop
add
mov
ja
leave
dec
imul
jle
rcrl
jmp
xchg
lock
xchg
rcl
mov
iret
push
mov
push
sub
xor
popa
sub
xchg
push
cs
imul
fs
inc
shlb
aam
inc
mov
fstps
mov
add
mov
or
popa
sarb
testl
push
fiaddl
mov
sbb
or
xorl
push
shr
add
in
stos
mov
push
sbb
push
mov
jl
mov
push
add
std
or
ljmp
push
rolb
jle
lahf
pop
iret
nop
fucomp
inc
xor
fs
jbe
add
je
js
mov
mov
sub
daa
pop
sti
sub
ljmp
and
mov
fidivl
loop
mov
mov
xor
jnp
dec
push
int3
in
mov
adc
dec
inc
sub
into
insl
loope
mov
add
mov
add
or
subl
pop
mov
xor
imul
lahf
push
and
mov
sub
dec
mov
and
ret
pop
lock
int3
popf
sbb
cmp
loopne
jge
lret
sbbb
adc
cmpsb
sahf
vmovq
mov
jp
push
mov
andb
xchg
scas
enter
mov
add
cmpsb
adc
int3
leave
addr16
test
and
mov
adc
ffreep
and
insb
leave
sbb
jle
cmp
sbb
call
nop
in
pop
test
les
stos
cwtl
iret
stc
mov
popf
push
inc
ret
xchg
out
inc
mov
repz
lea
push
mov
movl
outsl
rcll
pop
mov
or
and
add
jl
lahf
and
jno
aam
ret
dec
cmc
adc
je
or
imul
pop
ljmp
aad
ret
push
mov
inc
js
in
int3
into
adc
sub
inc
xchg
inc
sti
arpl
xlat
stos
push
enter
aad
sbb
and
jg
lods
xor
and
pop
xorb
or
fwait
mov
aam
loopne
push
or
cmp
fwait
and
xchg
mov
cli
adc
add
jae
lahf
sti
add
cmp
mov
xor
dec
dec
pop
lock
dec
lret
pop
cmp
or
dec
rol
xor
seta
sub
dec
push
mov
negl
xchg
xor
iret
jle
adc
fidivrl
jl
stc
pop
test
popl
in
and
adc
fs
mov
mov
push
dec
lar
xchg
push
xor
cwtl
mov
out
xor
test
xchg
cmpb
leave
hlt
and
sbb
pusha
pop
cmpsb
adc
fs
dec
inc
fcmovbe
notb
out
inc
jb
xor
dec
in
cmpsl
lret
push
xor
rcrl
sti
cs
ret
enter
daa
inc
jge
ret
mov
stos
scas
jne
cmp
inc
xchg
mov
jo
rcrl
data16
adc
pop
mov
ja
add
push
inc
pop
mov
ja
out
xchg
sti
test
inc
jns
daa
aad
inc
and
sbb
push
sub
add
and
std
push
testb
push
sti
jb
xlat
ds
test
cmp
cmp
aaa
ret
rcrl
aas
ds
dec
enter
jmp
fimuls
fbstp
inc
inc
or
xor
cld
leave
or
push
lods
jbe
lahf
jle
cmp
inc
add
std
adc
dec
lcall
mov
je
lods
push
addr16
add
enter
jnp
loopne
mov
call
lods
shll
dec
pop
dec
out
loope
mov
jl
sbb
xor
xchg
clc
leave
add
jns
add
cmp
adc
inc
aas
jnp
cmp
outsl
adc
mov
adc
lock
add
aaa
sub
dec
and
cmc
fcomps
sti
shr
je
push
inc
iret
aad
pop
sub
push
add
sti
aas
inc
clc
out
jp
cwtl
mov
mov
rcrl
adc
jge
mov
mov
pop
sahf
dec
fidivs
pop
sbb
aam
inc
jne
sbb
icebp
out
out
movsb
rolb
and
mov
mov
data16
orb
xchg
and
cs
xchg
int
jo
xor
mov
pop
stc
insb
xor
sbb
ljmp
pop
push
jmp
xchg
mov
cwtl
xchg
cld
dec
and
pop
pop
inc
adc
fisttpl
or
outsb
data16
cltd
rcrb
aas
test
outsl
cld
sbb
imul
xchg
lret
push
mov
adc
mov
cmpsl
add
icebp
decb
ret
mov
dec
ja
xor
xchg
das
mov
xor
ds
jmp
lcall
cmpsl
mov
pop
pop
popa
dec
sbb
jmp
cs
sbb
pop
das
xorb
xchg
repz
pushf
mov
lret
pop
inc
outsb
ret
push
add
push
sub
adc
pop
dec
sbb
jb
mov
add
clc
push
pushf
loopne
jge
mov
xchg
mov
clc
ret
data16
in
jae
in
xor
push
out
ficompl
ja
scas
xor
in
push
ljmp
test
iret
cmp
dec
inc
xor
cs
in
pop
add
fwait
pusha
sub
sbb
fdivrl
pop
lods
xchg
popf
push
jmp
push
jae
rol
jno
pushf
fdivl
xor
lods
xchg
inc
xor
and
mov
cwtl
jne
jl
mov
stc
lds
test
xlat
jp
dec
xchg
jo
push
cmpsb
or
cmpb
scas
mov
xor
in
shlb
sbb
xchg
inc
in
push
addl
xor
mov
shl
and
lret
mov
lret
aad
inc
int3
out
in
pop
call
iret
mov
out
mov
jno
xlat
rorl
jne
and
mov
repz
cmp
mov
mov
jmp
jo
data16
out
push
inc
adcb
mov
push
scas
xchg
ss
lahf
rcll
or
mov
pushf
aas
mov
pop
jmp
aaa
insl
dec
ret
mov
testl
mov
incb
popf
rcrb
sub
xchg
dec
daa
sbb
shlb
fadds
or
add
mov
cld
ja
xor
mov
mov
and
add
mov
enter
push
fsubrs
xor
hlt
push
jno
jg
and
fldenv
mov
inc
push
xchg
daa
mov
daa
ja
adc
leave
mov
sub
rcrb
mov
inc
jmp
mov
sti
movsl
icebp
ret
fwait
adc
gs
lahf
jmp
outsl
sarb
shl
dec
in
cmp
loop
add
lret
ss
xchg
sbb
call
out
xchg
add
addl
orl
sar
jno
jb
in
out
in
mov
cmp
call
js
adc
xchg
or
cmp
push
out
aaa
repnz
mov
push
enter
fldt
xor
inc
sub
xchg
jae
popa
adc
jnp
sub
fiadds
sub
mov
inc
jg
mov
enter
fcmove
jp
pop
pop
xchg
orb
push
xchg
dec
cmp
and
scas
add
jne
pop
sbb
iret
rolb
das
test
je
pop
idivb
mov
popa
lods
jecxz
fildl
pop
mov
mov
out
rol
das
mov
cld
adc
xor
sbb
cmp
in
or
fdiv
shlb
ja
mov
inc
aas
out
in
adc
or
mov
cmp
inc
or
and
push
imul
pop
pop
mov
repz
in
clc
add
xchg
test
push
fcomip
fnstenv
in
out
cmp
mov
push
dec
es
push
jbe
lds
add
mov
cmp
test
xlat
outsb
in
mov
mov
jge
cli
jno
mov
call
pusha
ret
push
incl
cli
std
xchg
xor
inc
dec
jnp
in
leave
push
or
dec
or
jmp
insb
incb
sbb
mov
leave
aam
mov
pop
jmp
push
imul
sbb
mov
mov
pop
addb
aas
sar
scas
and
mov
adc
lods
jmp
daa
int
jmp
leave
jp
push
cli
outsb
cmpsb
or
pop
xchg
loope
xchg
jl
les
dec
arpl
mov
mov
cmp
scas
jle
stos
push
pop
jg
mov
addr16
push
aad
mov
add
pop
mov
push
fistpl
ret
and
in
xchg
xor
mov
incl
in
xchg
sbb
sbb
xchg
call
jns
bound
shrb
out
mov
ds
xchg
sbb
add
mov
mov
push
std
dec
hlt
dec
das
xlat
sbb
push
xchg
js
xchg
sub
cmp
andl
dec
mul
mov
popa
sbb
jne
stc
add
cs
mov
jno
popl
mov
cmp
jge
arpl
aaa
cmpsb
inc
ret
jae
inc
les
dec
push
rcl
mov
in
jnp
push
and
cli
rcll
or
iret
sub
lods
jg
xor
sub
dec
pop
jle
dec
sub
jg
xor
imul
jecxz
das
int
jnp
lods
mov
stos
mov
dec
push
cmp
in
inc
sahf
icebp
sub
daa
lock
les
inc
jno
xor
and
add
out
flds
mov
lahf
loope
repz
aaa
pop
in
mov
lahf
pop
shlb
inc
jg
shlb
sahf
mov
ss
dec
pop
xor
xor
xorl
mov
je
out
out
fildl
popa
sub
jo
jne
jae
inc
mov
pop
fldt
cltd
addr16
leave
aas
sub
sub
cwtl
testl
mov
inc
iret
mov
jmp
mov
inc
inc
pop
mov
mov
and
hlt
subb
mov
xor
add
adc
mov
outsl
enter
ja
jae
adc
ret
rcr
mov
or
xchg
mov
and
cli
mov
aaa
push
movb
sub
push
add
pop
test
push
inc
or
cld
cmp
add
push
hlt
jnp
mov
lods
sub
push
aaa
daa
add
aam
test
xchg
inc
rcr
cmp
cmp
cmp
ret
incb
cwtl
ja
jg
mov
call
addr16
inc
push
movsb
mov
icebp
addb
xor
je
xbegin
xchg
add
test
lcall
popa
xor
clc
js
xchg
dec
push
ja
shl
add
lock
xor
xchg
insb
dec
mov
jae
and
hlt
jge
push
cs
sub
mov
in
and
into
movsb
inc
and
push
mov
stos
popf
lea
sub
xlat
aam
add
inc
and
je
shl
mov
push
xchg
xchg
imul
jge
scas
inc
stos
xor
mov
xchg
loop
dec
lret
adc
sbb
add
in
mov
lods
xor
call
xchg
xchg
xchg
adc
fimuls
aad
inc
pop
mov
je
filds
jge
out
add
aam
test
sub
pop
mov
add
sbbb
pop
popa
in
fcmovu
xor
lret
add
outsb
mov
pop
fsubr
notl
lahf
icebp
or
xor
dec
mov
or
cltd
dec
scas
loop
clc
lea
jle
ret
inc
adc
jle
pop
xchg
popa
adcl
fwait
mov
xchg
ret
int
cwtl
bound
fadds
xchg
fbld
fbld
aam
test
push
lods
push
mov
xor
dec
inc
ret
scas
push
inc
cmc
xor
jg
ds
pop
cltd
push
lahf
cwtl
leave
imul
ljmp
push
ss
loope
push
sbb
inc
js
lods
jmp
les
xchg
addb
lahf
and
in
sub
fwait
cmpsl
pop
cwtl
cli
dec
pop
in
mov
jmp
pushf
pop
dec
cvtps2pi
into
ss
xor
in
push
frstor
nop
je
pop
insb
fsubr
call
ret
cmp
inc
enter
cmpl
jecxz
mov
jecxz
pop
cs
pop
dec
sahf
and
xchg
popf
fsts
pop
xor
stos
subb
mov
or
push
test
imul
push
add
cmpsb
mov
mov
lods
lds
sbb
cmpb
push
add
xor
out
shll
fistps
in
mov
mov
mov
sub
mov
enter
popa
push
sti
aam
sub
pop
mov
and
sbb
addr16
pop
adc
adc
movsl
jp
add
and
mov
push
insb
rorl
xchg
mov
adc
mov
dec
jns
lods
sbb
xor
mov
add
jno
sub
mov
dec
mov
aas
jnp
cld
pop
add
fsincos
push
inc
or
mov
clc
jecxz
aam
cmp
pop
inc
or
cli
test
xchg
pushl
xchg
mov
dec
icebp
and
sub
mov
das
sub
xchg
clc
jmp
loopne
movsb
lods
jmp
mov
aam
cmp
xchg
fildl
add
mov
push
add
xor
jp
aaa
mov
call
test
scas
or
inc
xor
sti
lock
gs
cmp
js
adc
repz
sub
fmuls
daa
lods
testl
push
in
insb
push
out
mov
xchg
dec
fists
inc
cmp
dec
mov
pop
call
pop
out
add
mov
fwait
scas
adc
xchg
adc
jno
cmp
sub
lcall
sbb
cli
and
mov
ret
clc
je
mov
jne
shr
testl
pop
outsb
inc
add
nop
addl
dec
dec
in
lods
dec
jp
test
test
iret
cwtl
xchg
call
test
dec
dec
sbb
stc
mov
inc
adc
mov
mov
add
fldcw
inc
lock
cld
imul
fdivl
jg
test
push
cmp
clc
pop
xor
fisubs
cmp
cmc
shlb
or
push
push
in
xor
xchg
push
fisttpll
dec
lcall
adc
cli
cld
add
xchg
pop
or
sbb
adc
loopne
cmp
inc
dec
stc
in
pop
sub
es
fistl
ret
clc
scas
jge
ss
pop
sub
adc
lods
mov
into
jae
fisubrl
idiv
insl
jne,pn
adc
push
inc
jp
je
lahf
sbb
fs
clc
inc
mov
add
push
pop
dec
or
popf
jge
xor
or
mov
fldcw
cmp
add
fcmovnbe
fldcw
dec
in
ds
mov
sbb
sbb
jecxz
add
rcl
xlat
sub
mov
int3
aad
dec
test
pop
shlb
lock
cmp
xchg
dec
push
sub
pop
cmp
std
loopne
add
pop
dec
out
dec
addr16
js
xor
rcll
scas
lahf
sub
les
loope
enter
mov
or
jmp
out
push
mov
and
mov
jno
mov
aam
mov
in
lret
test
outsl
xchg
loope
add
inc
inc
xor
mov
jbe
lods
sub
pop
lods
arpl
xchg
data16
shll
adc
mov
subl
dec
add
adc
adc
cli
test
sbb
jmp
inc
cmp
dec
mov
std
arpl
dec
loop
pop
test
out
cmpsb
add
in
hlt
pop
outsb
ljmp
lock
inc
cmp
out
ret
push
shll
add
mov
repnz
das
adc
mov
lcall
scas
fwait
xchg
sub
cmp
fwait
mov
or
cltd
xor
mov
out
sub
sub
test
mov
imulb
and
cmpsb
add
cltd
dec
mov
xchg
daa
clc
jg
xor
jnp
cmp
or
jno
xor
fidivrl
imul
xchg
pop
lret
mov
lret
push
test
negl
inc
pop
clc
sbb
inc
inc
xchg
in
sarb
pop
sub
movsl
xor
stc
xor
rcll
add
sub
xchg
or
je
xor
sti
stos
pop
adc
loop
xchg
or
dec
dec
sub
in
in
stc
push
dec
adc
sahf
sub
mov
lock
jnp
or
xchg
cli
icebp
fsubrp
stc
mov
sbb
dec
hlt
cmp
cmpsb
shrl
call
leave
inc
test
fdivp
push
jge
sub
sbb
mov
mov
dec
jns
sub
outsb
ss
jmp
lahf
sbb
aaa
push
clc
out
mov
and
or
jp
iret
es
sbb
or
out
lods
dec
mov
push
iret
pusha
xor
insb
add
clc
aad
xor
scas
add
add
cli
dec
xor
pop
aas
jnp
fwait
lods
int
inc
dec
inc
push
aam
sbb
dec
andb
mov
push
sbb
rorl
ret
addr16
std
jp
js
cmp
repnz
and
sub
jo
or
mov
mov
xchg
sbb
mov
mov
loop
cmp
pop
cmp
and
jg
mov
lods
sbb
cwtl
push
ret
push
xor
outsl
gs
xor
jae
mov
orb
es
ret
sbb
jno
mov
dec
push
cli
rcrl
jmp
pusha
aas
or
scas
arpl
inc
push
aad
jge
arpl
sub
cmp
sbb
jge
fs
rclb
ja
cmpsl
add
or
out
mov
or
and
fcompl
popa
call
mov
sahf
lds
fisubrs
adc
mov
cmp
dec
decb
test
loop
lahf
push
in
cltd
xor
inc
ss
mov
jge
pop
mov
ss
xchg
lahf
repnz
mov
mov
and
push
push
lods
dec
stc
sahf
fs
mov
loopne
inc
stos
movsl
lcall
mov
pushf
daa
pop
das
scas
fstl
test
mov
mov
and
sbb
arpl
lods
pop
test
scas
dec
push
cmp
inc
dec
rol
sahf
aaa
inc
iret
ficoml
jecxz
jne
add
bound
and
outsl
mov
cli
movsl
roll
pop
inc
ss
es
pop
push
aaa
je
stc
outsl
dec
lahf
push
inc
rcrb
cmp
les
rorl
inc
daa
inc
test
xchg
push
inc
addr16
mov
mov
lcall
mov
fsubl
mov
movsl
or
out
and
push
gs
xchg
push
push
cmpsl
imul
addr16
mov
test
lahf
jle
mov
lret
jae
adc
pop
shr
jge
and
jge
jle
xchg
push
scas
xchg
jecxz
pop
iret
cmp
jge
pop
jns
icebp
inc
push
jmp
jmp
dec
popa
pop
xchg
out
add
add
or
add
and
push
push
sub
sub
hlt
out
mov
scas
fcmovu
xor
cltd
xlat
push
inc
pop
jmp
fisttpl
mov
pop
in
or
sub
scas
enter
xor
je
movsl
pop
xor
scas
ljmp
jb
loope
ret
lock
jnp
pop
mov
cmp
mov
adc
mov
pop
jne
adc
cmc
outsl
jns
xor
cli
fbld
movsl
push
push
pop
fsubrs
mov
jns
repnz
out
xor
or
push
dec
and
or
xchg
jle
movsl
mov
test
lea
push
cmp
push
leave
pop
push
sub
shll
outsl
or
cmp
add
mov
mov
cwtl
xchg
push
fs
push
xor
mov
ja
aas
fwait
jecxz
jp
lea
test
jle
cmp
nop
xor
or
adc
cmpsl
xchg
xor
push
cwtl
pop
loopne
cli
es
add
adc
loopne
add
dec
lret
mov
mov
addr16
lcall
jno
pop
and
push
xchg
lcall
mov
andb
mov
push
dec
jmp
xchg
xor
imul
mov
pop
div
mov
xor
mov
fldt
push
imulb
je
and
push
inc
mov
int3
data16
jno
jmp
inc
lret
mov
inc
mov
sub
mov
mov
rcrb
gs
test
arpl
push
test
jbe
push
cwtl
xchg
dec
xor
mov
adc
sti
insb
jg
xchg
imul
jmp
arpl
pop
sbb
or
jnp
adc
movsb
inc
test
lods
xchg
xor
cmp
pop
out
dec
cmp
inc
rorl
mov
mov
sbb
mov
inc
andb
das
int
rorb
add
shll
cwtl
pop
mov
pop
or
sub
fs
sbb
repnz
loop
pop
fsts
xchg
lea
loop
jecxz
xchg
sbb
dec
cmp
enter
mov
repz
push
out
dec
neg
inc
sarb
xor
sbb
inc
cmp
push
xor
sar
hlt
stc
and
add
xchg
cli
pusha
jmp
jge
sti
mov
cmp
dec
jnp
fucomip
inc
mov
sbb
dec
pop
or
das
xor
test
stc
mov
inc
jno
outsb
gs
xchg
ss
sahf
mov
add
xor
jno
sub
call
add
inc
cmp
push
push
fadds
ret
xchg
lds
sarb
lahf
mov
xor
sbb
in
in
dec
push
insb
rep
push
lds
mov
push
lret
inc
in
sbb
pushf
lock
and
xor
and
or
dec
mov
push
das
add
sbb
call
and
gs
jns
lret
lea
les
xor
insl
outsl
imul
dec
fdivr
enter
sbb
loopnew
inc
pop
xchg
sub
jge
xor
sbb
mov
jnp
xchg
mov
ss
jl
test
push
scas
push
addr16
pop
mov
mov
cmc
or
adcl
adc
mov
insb
sub
mov
inc
xlat
cmp
mov
jmp
test
scas
push
subl
ret
bnd
icebp
cmp
scas
cmp
sub
push
sbb
loopne
dec
dec
test
les
in
mov
inc
add
repz
xchg
roll
ja
jl
add
movsl
fisubs
sbb
mov
mov
push
addr16
inc
movsb
ja
int
test
sbb
xor
mov
pop
mov
icebp
lea
and
mov
sbb
push
or
and
aaa
push
ss
lods
or
mov
and
push
adc
ljmp
sti
les
lahf
sahf
lcall
push
xchg
out
inc
jne
seto
into
xchg
into
arpl
mov
lock
test
mov
mov
or
cld
add
into
xor
aam
xor
pop
int3
test
sbb
add
shl
jae
push
push
cltd
js
ds
subl
loop
mov
addr16
or
popa
pop
loopne
dec
push
cmc
and
aaa
push
push
std
or
ds
sbb
mov
cmpsl
fstps
or
mov
scas
jge
incl
push
xchg
jp
mov
add
mov
int
and
cmp
and
loopne
test
add
fs
inc
mov
pop
xor
push
cmp
mov
mov
inc
jne
adc
loope
push
rolb
lods
mov
lret
sarb
outsb
jecxz
js
cltd
add
sub
xor
scas
mov
jle
icebp
mov
xchg
addr16
adc
inc
mov
xchg
out
push
lods
out
jae
sbb
out
aas
mov
loop
es
bound
inc
outsb
in
xor
push
xchg
mov
cmp
cmp
sbb
repz
in
cs
cli
jle
mov
mov
repnz
xorl
pushf
adc
push
pop
lret
mov
lock
aad
mov
aas
lret
adc
idiv
jmp
fistpl
lret
sub
jns
mov
sbb
mov
aas
xchg
repz
adc
pop
ficoml
jle
sti
inc
xchg
xchg
popa
int3
lock
arpl
cmp
les
jae
jmp
in
fldcw
mov
addl
aaa
adc
xchg
test
in
pop
mov
cwtl
sub
in
sub
mov
movsb
sub
mov
push
sbbb
mov
push
jae
pop
pop
rep
ret
lods
repnz
je
clc
in
js
sbb
arpl
loope
scas
jl
cmp
rorb
mov
or
cmp
fs
xor
mov
xchg
rep
fs
lahf
mov
scas
jne
test
dec
test
or
int3
iret
sub
mov
and
sub
xchg
arpl
pop
mov
scas
adc
pop
xor
adc
xchg
mov
lea
dec
and
or
aas
dec
pop
push
cli
sti
push
xor
push
mov
xor
dec
and
cmpsb
stos
push
push
in
sbb
cmp
lahf
iret
adc
pop
bound
nop
sbb
imul
jbe
add
xchg
gs
or
adc
dec
inc
push
mov
mov
mov
in
mov
mov
jmp
fsts
enter
clc
cld
adc
leave
push
insl
enter
sti
stos
popf
mov
pop
dec
fcmove
imul
dec
add
mov
filds
pop
ss
lcall
dec
sbb
mov
xor
pusha
repz
repnz
xor
jge
jbe
sub
loop
addr16
aam
les
aad
outsl
subl
sbb
lods
out
dec
out
arpl
jp
jmp
std
test
push
enter
adc
dec
adc
jno
push
lahf
pop
lock
rcrl
inc
pop
add
sub
ljmp
rolb
dec
push
mov
push
push
lds
sbb
arpl
adc
inc
cltd
and
clc
sbb
cmp
pusha
sahf
xchg
lock
push
ljmp
mov
insb
test
or
jb
data16
mov
mov
int
cmp
call
ja
dec
nop
sar
jb
adcl
imul
je
jmp
aam
mov
push
dec
jg
ds
xchg
xchg
mov
xchg
sbb
and
mov
pushf
test
mov
sub
out
push
stc
cmp
insl
jecxz
fsts
push
fwait
cwtl
mov
mov
jno
adc
jge
or
jmp
and
fisubs
mulb
lcall
dec
cld
sarl
rdtsc
jne
jne
xor
inc
pop
xor
in
jnp
cltd
fisubs
mov
or
in
xchg
daa
sub
jne
dec
pusha
adc
int
in
sbb
or
loop
rorl
mov
fistpll
loop
sub
mov
xor
rcl
inc
lea
scas
add
xor
xchg
jmp
rcll
imul
bswap
and
adc
mov
xchg
jge
dec
jae
cmp
sbb
idivl
sub
lahf
sub
cmpsb
sub
rcl
rorl
xchg
int
push
xor
dec
xor
icebp
lahf
clc
mov
fwait
nop
sub
arpl
scas
jbe
lods
mov
int
sbb
out
ja
or
mov
ret
hlt
jne
lods
jb
into
imulb
mov
sbbl
inc
mov
add
pop
lcall
in
mov
int3
inc
das
mov
pop
jl
pop
jge
sahf
mov
scas
loope
out
pop
or
hlt
mov
mov
sahf
pop
and
jge
arpl
add
fisubl
rdpmc
sub
jl
repnz
mov
mov
in
cmp
pop
push
xor
push
mov
mov
div
fisttpl
inc
add
xchg
loopne
stc
cmp
inc
xchg
insl
jmp
push
fistps
mov
cmc
mov
dec
gs
pop
sbbb
loopne
xchg
mov
fsubrl
lds
mov
insb
xchg
std
inc
xchg
xor
ret
mov
or
lods
inc
push
out
pop
std
shll
or
in
mov
sbb
imul
sbb
aad
jge
in
hlt
xor
add
inc
int3
int3
jle
add
cmc
xor
out
push
outsb
pop
lret
call
sti
xchg
dec
loopne
cmp
fmul
inc
cmp
arpl
andb
test
orl
cmp
add
or
lahf
or
inc
mov
out
iret
mov
push
adc
into
push
addl
jae
add
cltd
sub
mov
xchg
mov
add
push
xchg
sbb
repz
dec
je
adc
xchg
cli
cmp
cmp
jo
loopne
pop
ret
sti
jmp
mov
fwait
rsm
movsl
jae
imul
mov
lret
mov
dec
mov
aam
ret
mov
dec
out
jns
adc
loop
add
leave
mov
pop
jmp
jns
push
popa
mov
ja
fnstsw
cmpsl
mov
and
pushf
push
jo
mov
and
push
dec
loop
ret
int3
mov
aad
fucom
adc
cmc
add
xor
pushf
mov
loope
xchg
ds
xchg
mov
popa
jg
push
mov
lahf
xor
aam
outsb
pop
sbb
add
outsb
fcomps
mov
fwait
aad
orb
cmp
lea
inc
int3
rcrb
ljmp
lret
pusha
gs
sub
or
out
jns
repnz
imulb
stos
repnz
pushf
ja
lods
or
or
dec
xchg
ret
scas
aad
adc
mov
mull
popf
xor
cltd
pop
push
mov
jl
out
lahf
insb
xor
pushf
into
push
lcall
shll
gs
rcl
mov
sti
jmp
cmp
icebp
and
notl
mov
or
push
mov
lods
push
scas
add
cltd
test
ss
jnp
das
movsb
dec
cmp
jg
mov
testl
aad
jb
cld
mov
inc
imul
mov
rorb
sub
mov
aaa
or
aaa
xchg
mov
cmp
mov
push
repz
and
lods
add
int3
adc
andb
andb
ret
or
fstpt
xor
lea
scas
xlat
test
aas
test
mov
jne
loop
jmp
xchg
cmp
sbb
xlat
es
inc
inc
cmpsb
adc
push
xor
pop
jbe
jae
or
cli
dec
icebp
jne
sbb
sbb
cmc
dec
gs
stc
test
mov
dec
into
sahf
xchg
jg
xor
inc
and
mov
orl
push
ljmp
in
xchg
call
scas
ror
push
popf
lods
adc
pop
mov
mov
lods
pop
adc
ret
lods
and
out
rol
cmpsl
or
in
sarl
mov
cmp
jl
mov
adc
mov
popf
cmp
sbb
lret
and
ret
adc
jmp
std
aaa
notb
ss
add
fxch
iret
mov
cmc
sub
jo
cmp
mov
imul
dec
jnp
mov
sub
cmpsb
xchg
ret
outsl
addr16
inc
fists
aam
stc
add
adc
jmp
mov
cli
enter
or
lcall
cld
xchg
add
bound
out
adc
aaa
sub
std
jecxz
daa
inc
sub
test
pop
dec
inc
jp
mov
adc
popf
push
mov
dec
iret
sbb
lcall
cmp
dec
jle
pop
nop
lock
aas
stos
and
or
test
jno
test
add
fsin
xchg
scas
test
imul
inc
mov
push
stos
in
and
push
mov
pusha
and
xor
or
inc
mov
xor
aaa
mov
fs
add
jo
xchg
imul
mov
push
push
mov
mov
mov
js
sub
sahf
cmp
xchg
jle
mov
lahf
adc
xchg
mov
insb
imul
outsl
outsb
lock
and
pop
fstps
mov
inc
or
xor
orb
push
and
out
cld
jae
jae
pop
mov
mov
push
leave
pushf
sub
push
test
and
xor
jbe
arpl
scas
inc
fcmovnu
sub
int3
mov
lcall
xor
pop
jb
push
nop
test
jnp
stc
test
jo
push
cwtl
cmp
mov
je
inc
jmp
subb
xchg
daa
lods
fidivs
lahf
out
push
inc
imul
inc
lods
jo
push
inc
dec
cmc
mov
xchg
adc
aam
sbb
lds
adc
xchg
lret
mov
popl
jmp
imul
xor
js
clc
push
mov
stos
push
jns
iret
add
insb
fcmove
fsts
sbb
subb
mov
xchg
jle
into
fnsave
sbb
push
mov
loope
jecxz
mov
push
add
or
pop
or
vpcomd
or
mul
xor
xor
leave
push
pushf
sahf
sub
test
insb
dec
sbb
cld
xchg
sub
cld
pop
daa
cmc
dec
ja
and
mov
outsb
addb
inc
hlt
add
sbb
jae
aad
xchg
inc
jecxz
inc
aaa
pop
xchg
loop
aaa
leave
push
outsl
mov
inc
xor
xchg
inc
dec
lret
xlat
xchg
in
cmc
lret
xchg
jbe
mov
loop
dec
outsb
sbb
repz
pop
xchg
loope
mov
add
fistps
sub
jp
push
or
popf
mov
mov
adc
jl
cmp
sub
adc
jnp
lret
mov
cmp
cwtl
push
inc
cmp
add
shrl
sbb
and
jo
jns
arpl
push
icebp
pop
push
xchg
scas
mov
test
mov
push
push
or
add
inc
adc
mov
je
inc
outsb
cmc
dec
dec
mov
add
inc
mov
cld
andl
push
sbb
jl
xor
pushf
xor
xchg
cmpsl
jno
repz
push
sub
jp
in
xchg
mov
cmpsb
push
sub
inc
xchg
adc
push
in
lods
loop
subl
stos
and
mov
mov
sbb
push
in
pop
add
repnz
orl
mov
sbb
sti
dec
cld
in
xlat
cmpsl
cmpsl
inc
push
pop
enter
sub
shll
repnz
in
in
xorl
push
mov
mov
in
pop
sar
fwait
cmpl
or
adc
or
sbb
scas
aam
in
cmp
mov
dec
scas
nop
arpl
sbb
les
into
xlat
sarl
mov
ljmp
pop
and
dec
pop
push
jo
les
das
in
push
fistpl
lea
mov
mov
cmpsl
pop
cld
ja
jns
push
popa
pushf
xor
cmp
add
mov
xchg
push
shrb
loopne
test
test
push
xor
cmp
movsb
in
mov
jb
shlb
pop
out
add
stos
inc
stos
push
mov
add
cld
punpckhwd
xor
jo
popf
in
inc
rorb
cmc
test
dec
lock
inc
into
jnp
cmp
pop
add
ja
jl
push
sbb
xchg
jp
jge
stos
je
and
pop
add
xchg
and
pop
jne
movsl
mov
jle
mov
jecxz
shll
lcall
test
scas
push
xor
orl
dec
mov
mov
subb
fxch
jbe
mov
pop
lds
mov
adc
push
int
inc
pop
mov
mov
ja
add
and
out
sub
aas
lds
jno
lea
push
and
lahf
push
cltd
and
and
mov
jno
inc
fwait
cmp
bound
adc
inc
outsl
outsb
xchg
pop
fisubs
cwtl
adc
cmp
mov
test
sarb
sub
add
pop
sbb
xor
add
decb
lcall
in
cmpsl
mov
cwtl
and
insb
repz
jmp
stos
inc
mov
ljmp
ljmp
mov
es
add
pusha
mov
rorb
insl
imul
lds
scas
loope
jb
adc
inc
push
fisttps
or
loop
xchg
mov
add
sbb
adc
push
mov
add
fmull
or
mov
xchg
scas
subl
insl
pushf
and
lods
int
aad
insl
xchg
jecxz
aam
xchg
xchg
stos
nop
fs
mov
jecxz
jae
fwait
movsb
addr16
pop
mov
mov
mov
clc
mov
push
dec
call
adc
and
sub
xor
or
in
ds
imulb
andl
shl
xor
repz
inc
jge
jae
fiaddl
addr16
mov
mov
das
outsl
out
orl
mov
mov
add
das
and
mov
in
adc
scas
mov
push
jmp
push
idivl
mov
lea
mov
mov
pop
jl
pop
mov
pop
push
jg
adc
test
scas
inc
js
adc
arpl
fmuls
push
push
rclb
sahf
mov
cmp
lcall
add
pop
icebp
pop
or
bound
sub
or
jne
cmpsb
mov
mov
inc
and
fsts
add
mov
outsl
insl
clc
test
push
adc
inc
pop
das
add
jb
repnz
dec
loopne
inc
jbe
popa
repz
pop
inc
je
pop
jbe
mov
sub
sbb
jmp
or
icebp
cmp
mov
popa
rcrb
push
cmp
mov
ficoml
jge
jecxz
xchg
dec
movsb
wbinvd
add
bound
push
data16
jbe
xor
insl
mov
xchg
in
inc
mov
or
xchg
jne
mov
pop
inc
push
sbb
cmp
mov
jp
insb
sbb
dec
mov
cmp
and
mov
imul
ror
rcrl
ja,pn
mov
lret
in
cltd
int
out
adc
jb
dec
ds
inc
insb
sbb
jle
pop
pop
out
mov
dec
jo
rcrl
movsl
push
aaa
shl
bound
sbb
imul
mov
daa
std
repnz
rcl
dec
add
add
test
ljmp
scas
mov
adc
shrb
mov
loopne
bound
sbb
fiadds
add
jle
xlat
or
lret
add
das
pop
push
popf
int3
repnz
and
inc
imul
mov
push
mov
bound
pop
fstpl
adc
orb
dec
and
popa
jecxz
dec
pop
push
xchg
xlat
sbb
jb
sbb
xor
mov
cmc
sbb
clc
dec
pop
jl
jae
pop
fsubrs
mov
pop
xchg
jge
ret
lret
in
xchg
pop
cld
dec
sbb
and
jo
dec
clc
jns
roll
push
nop
push
xchg
xchg
inc
cmp
rorb
addb
fidivrl
ss
out
sbb
adc
adcl
cld
fimuls
dec
and
popa
repz
mov
stos
xchg
mov
sub
arpl
mov
scas
add
cltd
mov
repnz
cmp
xor
es
rol
ja
dec
mov
fimuls
insb
mov
sub
mov
push
xchg
cs
jecxz
insb
test
xchg
mov
xor
incb
lahf
cmp
sbb
lods
test
or
mov
jge
cld
fbld
scas
dec
cmpsl
mov
jne
inc
aas
test
cltd
push
cmp
dec
push
mov
cmp
push
aam
test
mov
int3
inc
mov
add
pop
push
jecxz
in
pusha
out
mov
adc
lds
mov
sbb
sub
adc
arpl
inc
frstor
lds
dec
rcll
mov
mov
das
adc
and
popf
js
sbb
push
repz
insb
xchg
cmpsb
into
adc
loopne
int3
pop
cmp
push
imul
mov
daa
pop
std
push
cmp
ljmp
or
mov
lods
mov
sahf
lods
mov
mov
stos
jno
dec
gs
push
mov
stos
add
call
mov
dec
sub
rorb
scas
lahf
icebp
cld
lods
imul
or
int3
inc
rcrl
adc
xchg
mov
sahf
sbb
xor
inc
mov
ffree
out
daa
inc
jne
sarl
add
fisubl
stos
aaa
test
xor
mov
jmp
gs
dec
xchg
sub
jl
insb
movsl
repnz
scas
enter
pop
add
rcrl
mov
add
xchg
cmc
cli
jmp
mov
lods
adcb
sub
testl
or
mov
shll
or
ss
icebp
mov
cld
pop
inc
fnsave
xchg
pop
xchg
lcall
add
mov
inc
jo
ss
aas
or
cmpsb
std
push
mov
xchg
sarl
jae
push
aas
in
mov
or
shrb
test
add
inc
lods
inc
adc
xor
int3
aas
les
cli
push
mov
mov
mov
sbb
inc
lret
outsb
inc
sub
inc
mov
sub
mov
mov
fstpl
and
out
jo
mov
das
enter
jns
mov
add
fidivrl
and
sbb
imul
imul
dec
daa
cwtl
fcomps
and
mov
dec
lret
insb
jp
cltd
stc
insb
lret
sbb
jb
push
ljmp
jecxz
adcl
movsl
push
mov
je
gs
adc
lods
repz
and
and
push
dec
sub
cmp
lock
inc
fiadds
jge
xchg
fisubs
lahf
jne
mov
enter
jnp
repz
das
js
or
adc
and
dec
lret
push
xchg
or
loop
add
mov
jae
aad
and
pop
gs
push
sbb
insl
lret
outsb
mov
sbb
push
cwtl
add
mul
pop
add
jne
gs
or
stos
adc
lret
pop
and
push
pop
dec
pushf
push
sbb
push
fwait
jp
xor
out
add
mov
ret
je
lods
pop
movsl
push
loop
push
in
cs
push
xor
hlt
dec
pop
jae
int
push
popf
lea
jno
pop
clc
sub
lahf
out
jle
roll
fbld
and
aam
sbb
lock
xchg
xor
in
add
cmp
in
jecxz
push
jb
or
pop
cmc
xor
ljmp
xchg
negl
or
adc
mov
xchg
push
das
cmpsl
and
jg
daa
mov
xor
mov
sub
aaa
popf
loop
mov
int3
popa
adc
and
mov
lahf
inc
xchg
mov
dec
pop
in
inc
mov
xor
jmp
jp
imul
test
mov
hlt
rclb
xchg
mov
inc
in
rcrl
fdivrl
mov
xor
xchg
ja
andb
aaa
adc
aaa
arpl
and
sub
sti
lret
lret
push
mov
sub
ja
cmpsb
jbe
or
mov
push
push
jne
sub
sbb
xchg
test
inc
data16
mov
ret
fmull
and
rorl
mov
xchg
mov
dec
sub
xor
bnd
lret
shlb
icebp
jg
push
aaa
jno
icebp
dec
cld
shll
shll
inc
mov
jb
out
leave
dec
and
frstor
xchg
and
ror
cmpsl
dec
mov
mov
imul
cmpsl
int
aas
inc
mov
pushf
cs
imul
mov
dec
addl
and
xor
adc
jle
fwait
mov
pop
movsb
push
xchg
pop
ret
lods
pop
std
mov
aad
or
ds
add
and
adc
xor
out
push
inc
out
lret
orb
mov
push
jb
mov
ss
mov
push
insb
jo
cmpsb
fadd
inc
fisubrs
cltd
push
cmpsb
insl
inc
push
lods
call
clc
jnp
mov
insl
sub
xor
dec
push
fsub
and
pop
pop
pop
jg
repnz
adc
jnp
add
stos
lea
mov
cmp
imul
in
pop
push
clc
mov
push
iret
and
push
pop
mov
out
in
lods
push
jl
mov
aad
mov
mov
sbbb
push
sti
push
jb
addb
xchg
nop
cmpsl
adc
inc
hlt
push
sub
sub
pop
add
xchg
test
fwait
pushf
adc
jmp
xchg
addr16
dec
pop
das
sub
pop
or
fnstenv
mov
add
lds
leave
xchg
add
test
in
in
or
insl
pop
add
stc
or
xchg
cmpsl
mov
sahf
mov
cli
pop
in
jnp
shlb
push
mov
std
push
xlat
icebp
es
adc
xor
pushf
dec
sti
das
icebp
lret
ds
imul
xchg
fs
jecxz
push
xchg
sub
and
inc
xchg
out
mov
cwtl
jno
mov
sti
rcll
ret
icebp
faddl
data16
mov
gs
push
or
cmp
aam
cld
push
cmp
mov
cltd
aas
mov
and
mov
hlt
lea
push
mov
dec
or
iret
push
pop
fdivl
mov
pop
orl
loopne
loope
sub
decl
mov
mov
mov
sbb
jne
mov
or
mov
lahf
cld
fisubs
leave
or
scas
or
sarl
sbb
std
xor
aas
mov
jg
pop
call
into
movb
in
push
mov
stc
sub
incb
or
sbb
or
push
push
das
je
into
add
jne
inc
or
popa
lret
push
mov
push
and
jp
outsl
enter
mov
loope
cmpsl
push
cld
adc
cs
lahf
scas
fcompl
xor
push
xchg
lods
xchg
andl
int3
dec
sub
dec
dec
out
popf
xchg
push
mov
sub
rclb
js
pop
cmp
lea
rcll
repnz
xor
push
add
jg
pop
push
std
xorl
xchg
cmpsl
adc
dec
stos
outsb
cli
mov
xor
or
add
and
inc
push
dec
test
icebp
out
in
mov
lahf
inc
or
xlat
outsl
leave
mov
orb
fildl
enter
lock
es
adc
push
lods
cwtl
js
mov
repz
dec
imull
je
inc
iret
jp
sbb
test
loopne
cmp
pop
js
jns
pushfw
std
push
ljmp
stos
aas
xchg
sub
fisubl
inc
sub
add
into
mov
jne
movsb
ret
inc
push
lcall
nop
jge
cmp
adc
es
rcll
frstor
jo
cltd
push
cmp
out
test
rcl
fstpl
push
cmpsl
xchg
scas
or
fcomip
xchg
movsb
mov
testb
stc
out
fidivrs
dec
push
jne
fdiv
loop
xor
sbb
jecxz
cld
adc
dec
mov
adc
mov
sbb
ljmp
xlat
insl
jne
js
pop
setb
mov
popf
popf
pop
mov
lods
in
cwtl
fisttpl
or
es
cmpsb
push
in
xchg
outsl
in
mov
push
cmp
pop
dec
add
cmp
inc
bound
mov
lret
mov
stc
adc
rcr
jae
jb
notl
mov
hlt
iret
or
xchg
mov
jge
fistpl
and
movsl
jno
aas
std
mov
bound
ds
shll
mov
lret
adc
mov
or
sti
adc
xor
jp
push
imul
sbbb
sahf
es
dec
mov
or
test
inc
jle
popl
pop
xchg
orl
adc
fcmovnu
repz
in
xchg
and
jecxz
ret
mov
inc
dec
ds
and
data16
xchg
pop
scas
push
adc
jb
ja
add
les
and
pop
out
push
add
mov
inc
or
icebp
ret
shll
mov
icebp
jmp
sbb
cwtl
shrb
inc
and
and
int
dec
xchg
data16
pop
iret
int
xchg
adc
xor
pop
xor
jnp
push
mov
fldcw
clc
jg
int3
popf
push
add
jg
xchg
lods
xor
cmpsl
scas
insl
movsl
shrl
mov
dec
dec
stos
mov
aad
xor
adc
jb
inc
lahf
sub
cltd
imul
mov
sbb
adc
aad
fs
jbe
outsb
mov
frstor
pop
leave
mov
adc
movsl
clc
mov
sbb
aad
inc
lds
xchg
xchg
sub
xlat
cmp
mov
cwtl
decl
lods
loopne
fs
mov
adc
xchg
imul
pop
jb
sahf
xchg
test
repnz
sub
mov
int3
mov
push
or
insb
int
push
inc
xor
and
cmp
mov
or
icebp
clc
ror
leave
lretw
and
sub
push
xchg
bound
jbe
push
mov
dec
push
sbb
aam
mov
in
test
cmpsb
pop
int
daa
icebp
ficoms
sbb
jno,pn
mov
aam
js
pushf
xchg
lcall
jge
jecxz
ds
into
push
std
mov
aas
push
add
jb
mov
and
stos
mov
mov
fldcw
in
out
add
push
mov
cmp
push
out
mov
add
cmp
mov
dec
daa
enter
leave
ss
add
leave
sbb
or
add
mov
cmp
movsb
cmp
aaa
fcomps
add
out
jp
adc
jbe
lods
mov
sahf
hlt
sbb
sub
lock
loope
or
mov
push
sub
je
shll
xchg
xlat
mov
cmc
pop
and
mov
ss
ret
fdivl
push
mov
jb
ss
xor
dec
push
pop
add
push
test
repz
inc
dec
out
notl
mov
and
shrl
push
test
popa
and
pop
adc
call
fsubrs
jmp
jns
add
pop
sub
push
mov
iret
push
dec
or
stos
pop
fs
mov
pop
mov
les
addr16
lahf
fdivrs
dec
push
jecxz
xor
lea
in
dec
mov
dec
lahf
clc
inc
and
mov
loopne
jmp
inc
adc
movsb
sbb
xorl
hlt
sub
mov
or
inc
and
push
jbe
sbb
stos
ja
int3
in
adc
andb
int
aas
xchg
jns
cwtl
ss
sub
mov
dec
jecxz
cmpsb
sub
dec
jmp
cltd
dec
pop
jecxz
mov
shl
outsl
ret
mov
jl
clc
bound
movsb
dec
jo
movsb
stos
pop
ficompl
ret
ss
push
inc
jp
dec
repnz
inc
out
pop
pop
loop
mov
cmc
mov
dec
std
fisubl
jge
cmp
ret
scas
insb
xchg
and
mov
pop
and
inc
aas
loope
out
and
jge
push
push
icebp
push
pop
add
xlat
jp
ret
push
cmp
mov
cmp
sub
dec
fwait
repnz
inc
mov
sarb
xchg
les
test
pop
dec
icebp
add
subb
pop
push
fimuls
jp
or
sbbl
mov
jae
je
in
sub
fistl
or
or
cmpl
addr16
jmp
push
dec
ss
or
jns
lcall
xchg
adc
fbld
insb
xchg
loope
add
sub
add
bound
lock
mov
or
test
into
fisubrl
jnp
inc
shl
cmp
sbbl
mov
pushl
pop
add
mov
bnd
or
sbb
fs
sti
sahf
xchg
pop
hlt
jmp
cmpsl
outsb
gs
lcall
mov
dec
jnp
and
add
push
push
rorl
lcall
shl
sbb
mov
enter
cs
ret
call
aad
jne
xor
scas
or
test
pop
gs
addr16
test
dec
stos
dec
out
mov
mov
int3
xor
dec
cmp
sbb
imul
in
xor
push
arpl
cltd
inc
cmp
ret
jne
lds
xor
fwait
aas
sbb
dec
pop
dec
movsl
mov
add
and
pop
out
or
push
lods
pop
lret
popf
sub
add
jmp
cltd
ds
loope
out
je
adc
fidivl
ror
repnz
xchg
cmp
jo
loope
push
and
dec
xor
hlt
adc
inc
push
insb
mov
mov
mov
test
jecxz
bound
xor
je
icebp
cmp
dec
mov
push
inc
pop
dec
xor
stc
loop
mov
sti
jg
mov
in
leave
testb
cltd
and
in
push
mov
ret
jnp
sbb
adc
dec
imul
mov
lods
movsb
jmp
cwtl
pop
test
inc
dec
mov
hlt
adc
adc
sbb
mov
cs
in
add
jno
adc
push
mov
pop
fsub
rolb
fwait
nop
rorl
dec
jle
inc
add
daa
xchg
addr16
lock
out
push
xchg
out
mov
insb
push
ret
and
jbe
test
icebp
push
inc
jle
push
jbe
mov
mov
dec
push
mov
std
outsb
inc
xchg
sahf
into
lods
out
pop
std
pusha
jbe
or
jg
xchg
shll
xor
js
jns
cmpsb
mov
insl
stos
xor
scas
imul
lcall
stc
std
or
ja
mov
xlat
push
inc
cltd
clc
and
add
and
dec
push
lahf
lods
lret
popf
insl
lcall
sbb
insb
iret
sub
sbb
or
sub
cmp
lods
push
cltd
xor
insl
les
popa
add
mov
push
inc
and
cltd
xor
mov
sub
push
popa
stc
fs
out
into
adc
aam
lret
sub
cmpb
add
sub
sahf
mov
in
jle
jmp
inc
mov
pop
je
jecxz
mov
inc
or
and
test
cmpsl
mov
stos
pop
add
int
jmp
adc
aas
pop
sbb
es
int
push
add
add
sbb
out
subl
cmp
in
dec
inc
mov
imul
std
outsl
push
mov
insl
fcmovnb
lock
jbe
rorl
setae
out
pop
pop
arpl
cli
mov
cwtl
fxch
dec
mov
mov
or
ds
jne
call
int3
sahf
dec
jno
and
push
test
cmpsl
push
pop
mov
aam
aam
push
dec
jno
mov
mov
jo
pushf
fbld
mov
test
jle
imul
addr16
jo
jnp
jp
jno
push
push
stos
and
sub
xchg
jo
fcomip
push
ss
fucomi
pop
bound
idivl
xor
loopne
cmp
inc
sahf
xchg
lret
hlt
xchg
fstl
inc
sub
fcomi
aam
ret
ficompl
ljmp
pop
jp
mov
fldl
or
daa
cmp
les
shll
dec
addl
int
push
out
mov
addr16
cmp
fnsave
cmpsl
leave
cs
cmp
fstps
push
inc
out
xor
lcall
inc
enter
dec
dec
sbb
xlat
loopne
mov
jp
fcmovu
push
xor
mov
sti
adc
mov
out
cmc
daa
call
xchg
dec
int
xor
dec
or
imul
sbb
mov
sub
loop
jo
imulb
or
jle
xchg
idivl
cmpb
cltd
fidivrl
ror
add
scas
arpl
add
jno
push
inc
xchg
add
cmp
in
jno
adc
shll
and
lods
and
xchg
dec
push
pop
cld
inc
xchg
out
mov
pop
outsb
mov
divps
js
jmp
ret
cmp
int
rcr
dec
xorl
and
add
sbb
cwtl
popa
mov
or
popa
mov
enter
cld
dec
sbb
xchg
cmp
pop
add
outsb
lea
cmc
sbb
mov
das
jmp
stc
push
add
push
mov
xchg
aaa
rclb
bound
inc
and
test
clc
into
fsubl
add
std
add
nop
push
sub
int3
mov
popa
out
lahf
dec
xor
and
std
sub
daa
cmp
sbb
int
xor
es
add
fisttps
into
call
scas
cmp
or
pop
sti
add
cmp
aad
lds
adc
gs
repz
add
and
dec
mov
dec
xor
test
ljmp
adc
sahf
sbb
jno
cltd
ja
sti
fisttpll
dec
jb
xor
ret
mov
sarl
aad
std
pushf
jae
mov
jno
inc
dec
pop
pop
mov
inc
xor
dec
sysret
add
cmpb
xchg
xchg
jp
cmp
int
jge
imul
inc
push
jecxz
add
loop
or
jbe
pop
mov
scas
and
or
imul
mov
pop
pop
in
in
jp
loope
adc
das
out
sub
jnp
imul
or
clc
punpckhwd
push
fldln2
jle
popa
xchg
xchg
outsl
adc
sarb
es
dec
and
cmp
mov
fildl
xchg
jg
cmp
jl
je
and
ss
xor
negl
jl
xchg
mov
add
nop
mov
fwait
inc
dec
dec
sbb
push
xchg
push
dec
popa
mov
or
add
stos
sti
add
sbb
or
scas
stc
cmp
dec
pushf
cmp
mov
hlt
mov
shrb
fsubrl
gs
int
orl
mov
inc
mov
jmp
int
aaa
mov
xchg
lock
xchg
push
mov
mov
lds
sbbb
mov
mov
nop
rcl
lret
pop
or
and
popa
fs
sar
ret
push
pop
mov
cmpsl
ret
enter
out
movsl
dec
loop
or
and
xorb
add
inc
je
dec
sub
sbb
cmpb
mov
push
sbb
cltd
pop
adcl
icebp
ss
add
jbe
jnp
sub
xchg
cmp
sub
dec
inc
mov
loop
mov
xchg
sub
push
mov
mov
mov
ljmp
fsubrl
clc
sbb
int3
out
movsl
sbb
shrb
out
cld
jbe
push
jne
sar
or
or
popa
add
pusha
aas
icebp
imul
mov
push
or
or
mov
push
xor
pop
aas
mov
xchg
enter
jp
mull
xchg
push
test
cmpsl
sub
xor
pop
cwtl
mov
adc
mov
jnp
in
fdivr
lret
jnp
cmp
rclb
mov
push
mov
bound
push
shl
fsubrs
imul
pop
push
adc
add
pop
sub
dec
or
xor
cmpsl
xchg
enter
fbstp
dec
xchg
pushf
pop
mov
cmp
stc
pushf
pop
repz
push
in
rcll
or
mov
sub
jnp
cmp
jnp
pop
push
int3
and
ljmp
nop
push
lds
cmp
es
icebp
in
and
ljmp
into
shll
cmp
loop
orl
lock
rolb
sub
data16
xor
enter
mov
cmp
loopne
es
cmp
mov
into
mov
push
jmp
daa
or
mov
int3
fs
sar
and
fs
and
outsl
jmp
lret
cmpsb
inc
in
movsl
and
cmpsl
sub
cs
xor
mov
xchg
jae
aam
fistl
add
repz
in
dec
rolb
cmpsl
daa
adc
jg
test
addr16
pushf
xor
movsb
lods
stos
or
pop
inc
push
xchg
sar
pop
in
cs
add
jmp
jae
lods
xchg
fistl
mov
iret
sub
dec
push
in
fs
push
mov
sbb
int
ficoml
in
lret
fcoml
rcll
pop
fisubrl
xchg
mov
and
push
jecxz
or
xorb
inc
and
xor
cli
xchg
aaa
push
out
add
testl
inc
pop
sbbl
push
sbb
nop
enter
movsl
in
inc
mov
push
inc
das
rcrl
test
sub
sub
int3
fisttpl
movb
icebp
out
imul
inc
ret
mov
pop
sbb
stc
fcoml
push
cmp
or
lods
shrb
dec
inc
inc
mov
shrl
mov
ss
pop
lret
xchg
lahf
push
ljmp
mov
sbb
ljmp
fiadds
sbb
push
dec
test
xchg
pushf
fldcw
xor
mov
and
push
test
xor
dec
btr
andl
and
mov
aam
push
pop
ja
push
sub
mov
pop
adc
xchg
inc
call
cli
popf
cmp
jns
into
xchg
mov
xor
or
xor
lds
test
push
insb
inc
out
jg
cmp
cs
lock
bound
cmp
dec
sub
xchg
inc
sbb
and
adc
inc
cld
inc
jo
hlt
pushl
or
add
aad
xor
pop
pop
lods
adc
test
mov
loopne
xor
or
pop
mov
mov
into
loop
add
mov
jbe
jbe
cmp
or
sub
xchg
cmp
in
es
sbb
lea
and
inc
lods
push
pop
pop
xchg
andl
in
dec
and
jb
daa
push
jno
daa
hlt
out
add
push
jbe
enter
adc
inc
mov
insl
scas
or
pop
aas
push
push
enter
push
ret
jno
sbb
lock
mov
fstl
ror
xor
imul
test
into
out
leave
pop
add
shlb
cmp
xor
cli
lods
es
xchg
push
shll
cmp
adc
lret
out
icebp
mov
aam
and
icebp
std
rclb
push
insl
in
push
sahf
cmc
mov
push
pop
pop
call
movsl
jp
in
or
jmp
aaa
cli
cmp
lods
das
xchg
xchg
es
cmp
pop
push
add
test
fs
and
out
mov
mov
loop
pop
call
div
push
xor
xchg
js
pop
sub
rorl
pop
daa
mov
xchg
std
xchg
and
mov
sub
repz
icebp
fmull
jnp
in
or
mov
iret
pop
sahf
mov
jb
sub
sti
or
ljmp
xchg
or
mov
mov
sbb
je
fsub
out
or
in
call
daa
cmp
adc
je
int
jns
lods
jo
mov
jecxz
lock
jb
pop
jle
jae
cmp
push
mov
popf
xchg
arpl
adc
jl
sbb
adc
es
xchg
sbb
add
xchg
push
jge
arpl
orb
add
jge
sbb
bnd
cmp
xor
popf
fmuls
inc
loopne
lahf
sub
ja
inc
dec
call
mov
stos
sub
hlt
call
jbe
fisubl
inc
shr
push
and
xlat
push
xor
jle
rcl
in
addr16
cltd
fiaddl
push
xor
jmp
adc
mov
rclb
aas
aas
push
inc
insb
add
sbb
or
aam
sub
xor
jecxz
sub
jp
mov
pop
fchs
and
xchg
sbb
pop
dec
data16
cmp
jl
cli
cmp
mov
fcmovne
xchg
mov
stos
pop
filds
mov
mov
cmp
clc
mov
add
push
mov
idivb
mov
mov
pop
inc
mov
and
push
fidivl
or
insl
cmp
ljmp
loope
imul
mov
in
lret
shr
add
jmp
push
add
popf
mov
jmp
or
or
test
xchg
les
lret
add
nop
cmpb
outsl
mov
cli
fs
ret
mov
daa
pop
mov
dec
cmp
mov
xlat
fsubr
pushf
aad
jo
adc
adc
xor
sti
cmpsl
cmpsb
test
lds
and
push
cmp
lock
add
mov
jns
jecxz
sbb
push
pushf
shll
pop
pop
test
push
or
push
push
insb
out
lods
push
lods
push
shlb
adc
jae
clc
and
cmp
mov
jg
out
inc
push
push
and
mov
fisttps
xor
out
jle
mov
movsb
lret
imul
popa
xchg
inc
test
cmpsb
lret
addl
jae
call
mov
cwtl
dec
mov
lock
filds
xchg
imul
xchg
xor
push
in
xlat
jl
add
xor
mov
inc
in
andb
hlt
es
pop
in
pop
ret
shll
out
std
mov
cmp
mov
movsb
cmp
xor
icebp
inc
mov
clc
and
inc
nop
cmp
pop
int
ljmp
cmp
jb
insb
cmpsl
fptan
ret
dec
mov
mov
jno
in
in
loope
jnp
cmc
sbb
fcom
aas
cmp
mov
outsl
push
xor
or
and
and
fisttps
addr16
std
pushf
ljmp
or
or
ljmp
mov
ds
cmp
fwait
int
jnp
and
std
sahf
pop
inc
bound
insb
fidivrl
pop
sub
in
out
das
inc
clc
push
out
adc
ds
mov
push
hlt
and
sarb
orb
pop
repnz
aas
lock
cmc
filds
cmpsb
jbe
loope
jecxz,pt
xorb
pusha
jp
lods
arpl
repnz
cld
cs
push
mov
and
lods
cmp
adc
xorb
sbb
push
jp
lcall
adc
push
fildll
inc
out
and
aad
in
pop
andl
cwtl
ret
pop
and
fwait
cltd
outsb
xchg
iret
adc
mov
icebp
mov
mov
sbb
jecxz
aaa
dec
dec
jp
hlt
lods
mov
mov
dec
add
and
aaa
inc
xchg
fisttps
dec
push
mov
test
xchg
add
dec
loopne
cmp
into
fcompl
sbb
add
push
pop
lcall
or
mov
insl
fdivrs
fstl
or
addr16
test
stos
scas
and
add
nop
nop
sbb
sbb
mov
mov
pop
jo
lahf
dec
outsl
insl
outsl
adc
xor
jns
popa
call
and
ret
mov
mov
call
ljmp
cld
jg
pop
fcoml
sti
clc
cs
and
in
cmp
mov
cli
lock
les
jmp
enter
lds
lods
push
popa
cmp
mov
addr16
fmull
lock
add
jge
jno
fstpl
push
loopne
cld
bound
add
inc
test
pop
repnz
push
aam
lock
aad
and
sbb
mov
mov
cwtl
sbbl
repz
lds
mov
into
inc
xor
sbb
stc
fbld
fbstp
inc
and
test
imul
cli
push
and
out
dec
jno
mov
in
addr16
jns
ret
xchg
bound
lahf
adc
loop
sub
stc
xchg
aaa
and
mov
pop
xor
aad
and
xor
popa
fisttpl
mov
cli
push
mov
mov
fcmovne
insl
mov
test
call
add
int
cmp
inc
imul
sub
cld
mov
xor
jl
push
sarb
xchg
jp
jle
cld
les
add
mov
stc
pop
adc
dec
loop
add
jno
jl
lahf
out
scas
cs
and
test
sbb
mov
push
adc
unpckhps
sbb
or
dec
sub
inc
stos
jb
push
push
insb
icebp
push
push
inc
dec
push
sub
xor
adc
ret
fmuls
jge
xchg
xchg
sub
mov
mov
dec
inc
fdivr
out
pop
or
lods
adc
mov
ja
sub
pop
sbb
lcall
jl
clc
imul
xor
ljmp
xchg
mov
daa
lret
pop
sti
jae
daa
clc
jg
mov
ja
lahf
out
push
fld
out
aad
push
movb
jbe
xor
dec
jns
or
lock
sbb
lea
add
clc
in
arpl
jl
movsl
test
jge
pop
xor
and
add
imul
leave
aad
pushl
pushf
leave
cltd
push
orb
xchg
test
jb
pop
decb
movsb
out
xchg
lods
sahf
mov
xchg
pop
cmc
or
jno
push
dec
je
stos
hlt
sbb
jecxz
cmp
sub
lds
mov
subb
rcrl
cmc
je
mov
dec
inc
ss
xchg
pop
jge
test
fildll
rcrl
xchg
jo
sahf
test
and
out
mov
jno
cmp
sub
cld
ror
mov
xchg
mov
mov
pop
pushf
nop
icebp
loop
inc
fwait
add
insb
xor
nop
loopne
sbb
cmp
lret
in
xchg
inc
in
xchg
cmp
je
popf
or
loope
fildl
fcomp
js,pn
xlat
cli
bound
clc
inc
pop
out
frndint
dec
repz
xchg
test
mov
ficoml
mov
inc
mov
push
dec
lcall
into
and
and
pop
cmc
jle
sub
lods
xchg
in
mul
repz
xchg
fistl
add
mov
add
inc
xchg
lods
cmp
xor
and
mov
cmp
into
lea
and
and
xorl
test
push
mov
call
inc
jge
push
xor
addr16
nop
pop
in
cmp
push
stc
adc
std
xchg
dec
add
cli
lret
enter
inc
mov
cmc
test
cmpsb
inc
jge
pand
movlhps
lret
ljmp
cs
dec
cltd
pop
inc
sub
lahf
mov
inc
pop
aam
aas
lods
out
lea
mov
mov
pop
mov
stos
jne
cld
push
bound
sbbl
loop
mov
push
pop
movsb
mov
daa
scas
jecxz
subl
sbb
cmp
in
je
dec
sti
add
mov
mov
xchg
mov
test
mov
outsl
arpl
push
mov
push
xchg
xor
add
mov
cmp
xchg
adc
fadd
inc
mov
xor
clc
cmp
mov
fs
push
sbb
or
cwtl
out
cmp
lock
or
add
jmp
ret
ret
lcall
inc
subb
inc
push
fnsave
das
je
out
sti
loope
outsb
stc
or
rclb
out
add
fwait
add
push
cmpsb
lea
sahf
stc
test
inc
xchg
clc
dec
cs
cs
and
add
lcall
fisttpll
xor
mov
enter
mov
fisubrs
arpl
pop
inc
adc
sahf
lcall
scas
add
ljmp
and
pop
cld
cmpsb
mov
mov
inc
sti
inc
ljmp
fwait
jbe
add
xabort
clc
xchg
les
push
xchg
xor
jb
popa
adcl
jbe
les
push
sbb
cltd
add
shlb
sub
or
push
push
imul
inc
orb
idivb
mov
mov
repnz
imul
cltd
or
adc
or
sarl
add
int
sub
xor
mov
xor
add
xor
shl
add
jle
gs
cmp
or
fldcw
xchg
add
leave
mov
dec
fwait
sbb
jmp
mov
cmp
ss
lods
jmp
mov
xchg
mov
or
xor
test
cli
jecxz
arpl
pop
inc
iret
repnz
test
dec
nop
push
shll
mov
xor
repz
mov
add
xchg
sub
aas
dec
int3
fcoms
xchg
hlt
mov
es
test
xchg
pop
ds
es
and
lcall
sbb
xor
xchg
mov
jle
xchg
lds
lea
adc
imul
mov
pop
test
sbb
jae
adc
in
scas
lods
in
rcll
or
xor
lcall
cmp
xlat
pop
jp
jg
outsb
mov
pop
test
stc
in
adc
push
inc
mov
int
xor
inc
or
adc
mov
xor
dec
mull
cmp
fdivrs
jmp
jne
daa
adc
icebp
outsl
bound
mov
insl
mov
data16
lret
and
xchg
add
xchg
sbb
pusha
cmpsl
incl
popa
lock
lea
cld
mov
pushf
fstps
inc
cltd
and
adc
sbb
push
pop
in
xorb
not
mov
icebp
lods
loop
cmpsl
mov
loop
xor
lcall
call
cmc
add
xchg
xorb
leave
mov
jns
push
inc
fsubrs
imul
loope
mov
jns
jl
sub
pop
addb
scas
xchg
in
or
jecxz
mov
sbb
inc
shlb
ret
add
mov
sbb
test
inc
insl
cmp
add
mov
loopne
sbb
rcl
adc
pop
sub
add
jbe
inc
xor
insl
mov
cld
jae
scas
inc
lock
daa
add
outsb
push
dec
inc
scas
add
mov
and
lods
movl
outsl
mov
fsubl
cmp
ret
cwtd
cmp
mov
popa
in
mov
cmpsl
cmp
inc
outsl
std
loopne
aas
jae
test
dec
shll
hlt
enter
mov
sahf
nop
pusha
into
add
scas
xor
arpl
out
stos
shrb
ljmp
std
mov
lods
fdecstp
or
jmp
adc
sub
mov
ja
in
push
adc
mov
jnp
inc
jnp
add
mov
les
sub
mov
idivl
push
dec
lds
push
pop
test
leave
xor
lahf
and
inc
cmc
jns
pop
push
clc
arpl
shll
loop
inc
push
sub
cmp
decl
mov
lahf
sbbl
in
lret
sbb
aaa
mov
test
inc
or
xchg
mov
push
cwtl
ss
pop
add
xchg
cmp
fbld
sub
or
ds
loopne
push
mov
outsl
xor
shrl
cmp
adc
cmp
dec
xchg
in
out
fdivrs
add
xor
mov
test
xchg
mov
adcl
lea
and
cmp
add
jg
mov
push
xchg
inc
cmpsl
enter
pusha
scas
mov
sub
xchg
ret
imul
jg
dec
lahf
outsb
xchg
fwait
out
fistps
adc
outsl
fwait
inc
lahf
adc
jb
arpl
and
sbb
cmpsb
out
jnp
leave
jge
jmp
sbb
ds
pop
or
jb
or
xor
pusha
dec
xchg
lea
xor
jbe
cmp
push
dec
int3
movsb
popf
fcoms
sbb
adc
push
mov
nop
mov
push
pop
lcall
mov
mov
cmc
les
rcll
adc
mov
loope
call
jo
dec
pop
push
test
sahf
data16
xor
adc
dec
add
das
out
gs
pop
adc
pop
pop
inc
and
stos
loop
sbb
mov
mov
int
bound
movsb
inc
sub
rorb
aam
fs
test
sahf
add
and
pop
cmp
lea
add
or
or
rolb
cli
lahf
jp
fs
xor
cmp
mov
popa
cmpsl
mov
shll
je
ret
ds
loopne
xchg
push
pop
dec
test
lock
aas
jecxz
scas
add
sub
add
lds
jle
bswap
outsb
jge
sub
push
and
adcb
pop
sbb
mov
add
out
mov
jo
cmp
and
and
or
in
rcr
das
ljmp
jl
adc
and
sbb
in
xchg
cmp
xchg
in
out
aas
mov
xor
push
jle
cwtl
test
adc
xchg
call
adc
outsb
scas
add
push
jo
loope
arpl
outsl
movsl
lret
xor
xor
dec
or
hlt
dec
insl
je
je
inc
cld
nop
sbb
xchg
sbb
mov
push
mov
or
int3
int3
xor
xchg
adc
bound
and
fists
sbb
pop
in
dec
inc
add
jnp
adc
pop
add
pop
push
mov
pop
push
add
enter
mov
mov
jb
lock
popf
cmpsl
sti
jmp
sahf
cmc
sbb
adc
loopne
movsl
xor
lcall
in
je
sbb
icebp
mul
push
cmpb
imul
adc
and
repz
sbb
add
jae
adc
sbb
or
aad
adcl
out
push
cmpsb
inc
mov
ds
ds
into
cltd
das
xchg
and
push
xlat
movsb
push
jne
es
lock
stos
inc
jae
mov
dec
sub
xor
je
push
loope
push
dec
push
cmp
ret
cltd
in
and
push
add
add
filds
sbb
pop
ja
repz
sarb
loopne
movb
sub
sub
adc
jecxz
movsl
mov
sub
in
inc
xor
cwtl
cmpxchg
insb
add
icebp
jne
add
jbe
fstpl
xchg
bound
fidivs
fs
mov
xchg
mov
mov
add
adc
mov
push
in
ficompl
xchg
add
add
sbb
fsub
stc
inc
push
aaa
shll
outsl
in
jo
popa
into
dec
mov
or
dec
lods
add
out
lds
add
xor
mov
push
inc
dec
adc
imul
jge,pn
aad
imul
std
push
fsubs
cmp
mov
mov
in
fistpl
cmpsl
jne
pop
lahf
inc
sbb
ja
cmp
shlb
call
cli
or
mov
es
add
push
inc
lock
lock
jl
or
cmp
push
mov
lock
pop
xchg
dec
fnstsw
mov
add
leave
fdiv
add
movl
ficoml
jbe
cmp
and
sub
xchg
pop
xchg
lds
popa
addb
icebp
xor
jb
cmp
and
and
push
pusha
dec
dec
lods
shr
add
sub
arpl
lret
rcrl
pop
xor
mov
fadds
push
aam
xchg
in
call
mov
pop
shll
mov
cld
dec
int
pop
int
ret
dec
subl
repz
je
daa
inc
add
lret
call
xlat
sbb
shlb
sbb
nop
xor
jbe
mov
lea
jae
inc
xchg
in
sub
lods
xor
pop
pop
hlt
decl
int
dec
loopne
les
popf
add
mov
shll
xchg
test
xor
mov
or
outsb
scas
push
and
cmp
movl
sbb
inc
sub
xor
sub
or
adc
or
cmp
cmp
push
xchg
cmp
mov
or
pop
pop
dec
int3
mov
mov
sbb
sbb
call
fcmovnb
ret
pop
push
lret
and
inc
or
les
dec
roll
arpl
insl
sub
int
and
inc
mov
sub
je
pop
mov
mov
aam
icebp
mov
add
mov
pop
clc
inc
call
mov
fdivrs
aad
in
fcomip
dec
xchg
stos
ret
cmp
sub
dec
cmp
fnstsw
test
call
outsb
mov
data16
dec
mov
inc
add
adc
cmpb
cmp
repz
rcrb
jae
sti
insl
aam
int3
int
popf
fdivrs
add
push
aas
dec
cmp
jno
arpl
lock
xchg
xchg
sbbl
in
xor
and
out
insb
jbe
adc
xchg
xlat
push
jne
and
jge
lods
mov
and
pop
push
icebp
in
shll
cmp
push
push
sbbl
cmp
iret
or
shlb
test
jo
inc
dec
sbb
mov
inc
xchg
jo
sub
pop
sbb
sbb
push
stos
or
hlt
adc
or
cmp
arpl
cmp
add
into
outsb
jno,pn
inc
inc
mov
sbb
lcall
sub
shr
sub
mov
and
adc
and
push
sbb
or
dec
in
pop
fs
mov
pop
popf
add
test
cmp
adc
sub
mov
js
pop
xchg
pop
adc
addl
add
ljmp
nop
popa
mov
sahf
or
mov
repnz
mov
bound
scas
pop
pop
add
pop
sbb
aam
push
stos
js
mov
hlt
std
lock
dec
cmp
sub
test
mov
add
inc
sub
push
jnp
jns
ljmp
lahf
mov
cmp
push
sbb
rep
aas
cltd
daa
xor
outsb
andl
shll
inc
xchg
xchg
sbb
imul
inc
jnp
ljmp
aaa
sbb
ret
ja
notl
sub
ret
mov
clc
cmp
sbb
sbb
mov
xchg
jl
lods
push
xchg
cmpl
xchg
sub
cwtl
and
lea
inc
dec
dec
mov
mov
in
dec
int
cltd
bound
dec
test
sbb
xor
jo
sub
push
mov
insl
ja
dec
mov
or
lret
idivl
xchg
fisttpll
dec
jns
push
scas
sti
shrb
xlat
shrw
cmp
xchg
or
or
xchg
mov
and
push
arpl
push
insb
pop
hlt
and
daa
movsl
je
fucom
mov
sahf
adcb
push
pop
pop
pop
hlt
add
pop
iret
mov
xlat
pop
jne
sbb
in
jbe
pop
or
push
mov
mov
jbe
icebp
cld
mov
fbstp
psubusw
lea
xor
fsts
stos
push
xchg
imul
je
sar
jg
incl
call
fsubrl
lahf
pop
mov
xor
stos
xchg
inc
or
dec
das
insb
inc
test
movsb
data16
fs
jno
pop
std
mov
jg
jecxz
dec
inc
inc
insb
mov
pop
out
shr
mov
je
jo
jp
addr16
scas
or
cli
gs
cmpsl
out
adc
ss
ret
or
aas
fsubl
std
xor
pop
mov
je
cmp
pusha
int3
outsl
mov
jl
and
cmp
aaa
mov
cli
push
sub
incl
lret
jmp
lods
push
jb
mov
xchg
sbb
xchg
fcompl
repz
sub
mov
in
pushf
xor
popf
jmp
push
outsl
fldl2e
xor
xor
mov
cld
xor
inc
test
mov
test
inc
ss
jae
add
je
dec
push
sub
mov
outsb
or
gs
lods
enter
xchg
mov
cwtl
add
test
stc
ljmp
dec
aad
jb
int
icebp
addr16
rclb
hlt
pop
fmull
add
adc
idivl
jmp
dec
pop
dec
jbe
jnp
sbb
test
sub
test
pop
stc
std
jmp
mov
or
add
mov
test
test
cld
adc
cmp
lock
pop
nop
cs
mov
pop
lock
movsb
clc
mov
outsl
or
pop
test
push
notl
push
jo
xchg
or
outsl
mov
jecxz
subb
add
outsb
inc
mov
add
jmp
or
rclb
and
dec
inc
je
mov
mov
dec
pushf
lds
in
notb
jmp
fidivrs
inc
sbb
push
jbe,pt
and
fldl
push
jno
xor
and
sub
inc
cltd
jl
in
cmp
fisttpl
push
mov
scas
cmp
dec
pop
sub
dec
test
jns
dec
in
test
mov
xchg
and
inc
and
and
dec
lds
xchg
pushf
out
out
dec
aas
out
mov
mov
in
add
mov
iret
cmp
test
jp
mov
and
je
or
arpl
arpl
dec
ret
push
cltd
adc
in
jb
xchg
inc
cmpsb
rorl
aad
iret
fcompl
mov
sbb
xchg
adc
mov
mov
mov
leave
mov
lret
mov
or
adc
mov
push
fdivrl
jae
fdivs
pop
shll
test
lock
loopne
mov
test
dec
sub
mov
xor
xchg
lock
jg
push
lea
lcall
mov
sbb
adc
inc
cli
sahf
ljmp
stos
mov
mov
mov
adc
push
gs
outsl
stc
push
aam
mov
mov
outsb
push
call
cmpsb
jno
cmp
test
sub
sub
fcoms
push
push
add
jge
jge
lods
clc
jle
pop
dec
shr
loopne
adcl
push
out
cmp
shrb
dec
cmp
mov
push
push
mov
je
pop
fbstp
pop
out
repz
mov
jne
xor
scas
dec
and
loope
insb
jns
and
push
ljmp
add
xchg
sub
xchg
push
loopne
sahf
lods
jge
adc
mov
adc
movsl
mov
push
lods
enter
andl
mov
int
xchg
jmp
push
addr16
and
jne
mov
leave
jle
push
es
mov
jmp
ficoml
ret
jno
cmp
aad
das
sub
jns
fisttps
ds
and
lret
scas
shlb
mov
mov
mov
add
inc
outsb
mulb
dec
aaa
test
test
pusha
mov
in
cmpsl
notb
sti
cmp
jo
or
outsb
push
ffreep
sub
in
aas
cmpsl
cmp
repnz
imull
repnz
js
rol
adc
jg
and
or
roll
lahf
xchg
enter
sbb
sbb
adc
dec
add
mov
mov
into
sub
aad
stc
xor
mov
jo
pop
sti
mov
add
pop
std
mov
mov
fdivrl
sub
mov
inc
mov
cmpsb
push
lahf
loop
add
test
les
jle
inc
and
aam
dec
repz
iret
mov
mov
jmp
push
xchg
mov
pop
mov
icebp
iret
enter
add
and
xchg
pop
sub
or
inc
mov
notl
cmpl
mov
ret
mov
mov
data16
mov
ret
dec
pop
jno
dec
xor
pushf
jle
lea
sbb
adc
push
enter
xchg
dec
push
or
mov
in
cmp
dec
out
dec
add
repz
mov
pop
cwtl
aas
pushf
inc
add
xchg
loop
cwtl
sahf
inc
jp
sub
dec
in
mov
sub
pop
fs
scas
pop
imul
fnstsw
sbb
sub
xor
add
lods
std
or
in
pop
hlt
fstps
pslld
aam
sbb
mov
mov
xor
dec
xchg
mov
fcmovnu
adc
clc
aam
dec
or
or
push
or
das
lea
jo
sbb
sbb
in
subl
push
jmp
xor
lret
dec
mov
sub
push
loop
lods
jo
mov
sbb
rcr
push
dec
mov
icebp
xor
aam
or
test
js
cwtl
sub
sub
scas
rcrb
push
and
je
jl
or
push
dec
shlb
sub
sbb
enter
dec
dec
stos
push
mov
mov
out
mov
dec
mov
repnz
movsb
pushf
xor
xor
loop
inc
out
inc
adc
inc
adc
mov
push
ss
test
jg
cld
shll
mov
xor
repz
in
inc
inc
pop
ret
idivl
pop
outsl
or
adc
xchg
adc
mov
xor
sub
push
inc
sub
sti
push
shrb
mov
je
pop
pop
or
xor
xor
in
fdivl
pop
xor
xor
fidivl
ja
mov
mov
jl
sub
gs
push
lock
mov
scas
nop
cmpsb
fwait
xor
jge
nop
adc
inc
dec
pop
add
cmp
leave
add
fbld
mov
xchg
inc
scas
fucomp
aas
dec
lret
dec
enter
add
pop
dec
loopne
lret
xor
shll
pop
inc
pop
push
inc
emms
cmpsb
sbb
jno
aaa
call
lret
xor
addr16
sub
push
fiadds
or
into
push
jne
mov
je
ds
dec
cs
jbe
rorl
loop
or
sarl
in
pop
xchg
xchg
enter
fidivl
jg
inc
xchg
push
pop
decl
in
or
dec
aam
lcall
pusha
ret
jge
outsb
aam
jbe
loope
rcrb
dec
sub
repz
pop
xor
and
adc
movsb
ja
mov
sbb
fiadds
sahf
mov
mov
and
sbb
xchg
mov
mov
sti
call
mov
adc
movsl
insl
enter
mov
push
jae
push
or
jo
enter
call
dec
nop
cmp
ret
inc
dec
int3
roll
pop
cmp
ret
cmp
std
add
bound
cmp
mov
insl
je
push
inc
gs
or
cltd
out
lret
lds
les
rcll
cmp
insl
sbb
mov
xchg
test
dec
inc
in
imul
psllq
lahf
inc
in
lret
pop
fsubrs
jle
ljmp
xchg
fiaddl
mov
stos
mov
ss
es
jo
push
mov
xor
pushf
mov
and
mov
pop
sub
push
mov
mov
fst
mov
adc
sub
adc
ja
sub
fsubs
push
mov
out
mov
cmp
xor
in
push
jle
scas
xchg
cmpsb
cmp
les
imul
sub
or
sbb
xor
xor
xchg
fld1
add
or
outsl
push
xor
xchg
inc
stc
imul
mov
xchg
xchg
push
or
orb
xlat
sti
aaa
stos
and
cltd
in
orl
mov
test
leave
rorb
sbb
mov
xchg
sbb
inc
std
pushf
inc
xor
and
les
jae
mov
in
addl
inc
sbb
adc
sbb
jmp
mov
cwtl
clc
xor
sub
or
cs
fsubr
hlt
mov
sahf
shll
loope
nop
pop
pop
out
sbb
pop
add
inc
fstl
lods
test
sahf
pop
push
dec
mov
jg
jo
pusha
hlt
xchg
insb
out
out
dec
jp
jne
lcall
rolb
inc
or
ror
inc
mov
mov
aas
jo
in
cs
pop
into
xor
mov
ja
jle
movsl
lcall
push
aam
xchg
lods
jae
ror
rorb
jmp
cmp
add
and
mov
lods
popf
mov
pop
and
push
inc
adc
popf
cwtl
cmp
test
test
sub
push
decb
pop
dec
xor
int3
push
mov
inc
roll
scas
cltd
pop
push
insl
gs
mov
test
movb
adc
sbb
cmp
mov
test
sar
sbb
lds
lcall
nop
test
pusha
mov
push
add
icebp
sbb
xchg
or
lcall
or
push
sbb
jg
cmpsb
add
ljmp
shrb
repnz
sub
movsb
cmp
mov
pop
sub
mov
push
or
xlat
lds
aam
icebp
sub
push
or
iret
lahf
cwtl
dec
out
mov
push
lret
push
cmp
or
pop
mov
jnp
xchg
push
andb
outsl
loop
and
mov
xlat
jle
pusha
pop
stos
cmp
or
jae
shl
xchg
rcrl
fsubl
int
call
call
outsl
add
outsb
test
mov
ds
mov
xor
js
mov
push
jno
or
inc
jge
dec
mov
fidivrl
push
xchg
jnp
nop
decl
out
xchg
sbb
cmp
insb
cltd
ja
test
xchg
pop
or
mov
xor
repnz
test
push
jg
rcll
repz
jae
in
loop
movmskps
cltd
jne
xchg
rolb
int3
lret
popa
inc
daa
aad
fwait
jg
pop
mov
stc
lret
test
dec
pop
cmpb
mov
fisubrs
out
je
gs
xor
add
test
das
push
pop
lea
mov
inc
push
outsl
mov
mov
cmpsl
cmp
adcl
les
pop
scas
mov
adc
outsl
aam
pusha
sub
shll
push
add
fcoml
insl
je
xchg
sbb
dec
and
lret
icebp
xor
cwtl
pop
scas
xchg
adc
or
sbb
sub
and
xchg
jl
inc
jmp
push
adcl
loop
rcll
es
enter
repz
cmpsb
push
int
pop
xor
pop
or
and
xchg
pop
jp
pcmpgtb
push
das
pop
sub
xchg
pop
xchg
mov
pop
std
mov
pop
or
scas
push
or
aam
mov
pop
dec
fcoml
push
clc
sti
sub
push
je
jle
loope
repz
dec
mov
pop
pop
rcr
xlat
mov
clc
imul
stc
lods
sub
pop
cld
push
adc
push
dec
or
rcr
lahf
add
mulb
inc
sub
in
repnz
and
lods
aas
pop
cli
sarb
cmpl
test
sbb
push
sar
jae
clc
and
xor
dec
cmp
dec
push
and
push
ss
adc
jecxz
stos
mov
fnstsw
cmp
cli
jb
adc
push
aaa
mov
test
stc
push
fimull
xchg
popa
loop
call
lock
arpl
stos
jno
daa
cmp
xor
mov
ds
xchg
push
shrb
iret
test
test
or
repnz
or
push
loope
in
or
repnz
movntq
and
push
dec
mov
push
ret
negl
mov
icebp
movsl
mov
aaa
in
and
outsb
les
iret
jbe
fisubs
outsb
or
mov
outsl
imul
xlat
lahf
adc
xchg
cmp
outsb
cmpsl
sub
notl
mov
sbb
jp
and
insl
popa
mov
push
dec
jecxz
ret
and
out
test
lret
or
pop
ficomps
lcall
push
jno
js
in
fisubl
jb
leave
cmpsl
daa
jno
xchg
jp
mov
imul
das
jmp
adc
es
mov
aam
lahf
outsl
js
fbld
in
fsubs
in
and
sti
jb
or
icebp
test
repz
into
cmc
pop
inc
push
mov
stos
int3
adc
and
cs
das
sti
out
or
fs
stc
lret
push
xor
sub
jecxz
or
fsts
mov
xchg
outsl
or
mov
cld
pusha
insl
in
xchg
push
shl
xor
aas
cltd
js
scas
add
pop
out
and
cmp
in
aad
and
pop
sbb
cwtl
push
aas
and
repz
xchg
stc
dec
add
push
push
jmp
test
xlat
pop
inc
mov
fdiv
rorl
stos
lods
mov
sub
xor
and
cli
cmp
mov
jns
cmp
popf
or
ds
setb
jbe
adc
sbbb
cwtl
scas
add
aaa
sbb
test
jecxz
jo
leave
sar
movsl
pop
push
pop
in
bound
jne
pop
jb
callw
ljmp
loope
sub
sub
cmp
roll
adc
cli
shr
in
jo
stos
in
hlt
in
cmpsl
mov
sbb
cmp
sti
pushf
push
mov
jns
sbb
mov
cmp
cli
push
adc
sub
pop
and
incb
mov
cmp
mov
and
xchg
pushf
push
cltd
cmp
fwait
jns
pop
and
lock
xor
xchg
mov
xor
aad
lcall
nop
shll
and
out
xor
lcall
cmc
insl
filds
inc
xorb
in
ret
ljmp
xchg
jne
dec
xlat
mov
xchg
and
call
mov
int
push
in
int3
repnz
mov
loopne
mov
aaa
movntps
xor
jae
fsts
iret
lock
inc
adc
imul
in
shll
stos
repnz
sbb
fbld
and
fldl
sub
inc
and
pushf
pop
push
push
mov
dec
test
enter
adc
xchg
aaa
out
loope
xor
push
xlat
rolb
mov
repnz
mov
jmp
subb
push
pop
lds
xchg
cmc
pusha
adc
ffreep
outsb
jnp
lods
pushf
sbb
mov
mov
pop
repz
test
dec
testl
xor
clc
sbb
aam
jg
pop
in
xor
fisubl
test
or
lret
sub
stc
mov
and
push
fildll
cld
jbe
aas
xor
js
outsl
pop
or
mov
pop
sbb
cmp
mov
mov
mov
dec
insb
daa
icebp
cli
xchg
fs
jg
or
lahf
jbe
repnz
ljmp
cmp
sbb
sbb
fnsave
je
sub
add
iret
push
lcall
rolb
xchg
std
sahf
lods
stos
pop
inc
mov
xor
ss
leave
sub
mov
out
mov
fildll
mov
add
or
ficoml
lcall
mov
sbb
int3
jns
push
dec
scas
pop
test
xor
aad
ja
push
leave
xchg
dec
shrl
aaa
jbe
roll
add
out
inc
sbb
inc
gs
in
mov
jge
nop
ss
adc
push
stc
push
movsl
lock
or
push
or
mov
push
inc
push
orb
sub
push
pop
pop
in
test
into
call
adc
rol
sbb
sub
inc
add
fcmovnu
stc
or
mov
pushf
add
fcoms
jg
cmp
outsl
andl
decb
jns
mov
jecxz
ret
mov
push
sub
push
xor
mov
insb
xchg
xchg
or
loope
stc
mov
add
mov
ja
mov
or
nop
loop
fldenv
inc
mov
aas
xor
shl
adc
loope
in
cmp
inc
sub
out
push
xchg
aam
repnz
and
sbb
or
mov
popa
cmc
lods
push
rcrl
xor
in
gs
xchg
inc
pop
iret
cli
nop
mov
dec
adc
push
outsl
outsb
call
ljmp
rcl
bound
shlb
in
dec
jge
addb
scas
cmpl
fimuls
icebp
or
pusha
dec
cmpsl
int3
sbb
test
adc
adcb
cmpsl
adc
xchg
mov
jno
dec
sbb
sbb
pop
xchg
cld
ret
loop
xchg
mov
gs
inc
jbe
jns
mov
cmp
mov
mov
sub
cwtl
repz
sub
lock
push
mov
std
iret
add
test
aad
insb
dec
pushf
inc
adc
enter
xor
push
dec
or
pushw
adc
inc
cli
cltd
call
iret
lock
mov
push
adc
sarl
or
in
jb
inc
rcrl
push
mov
cmp
push
mov
xor
mov
or
pop
rolb
pop
ret
push
imul
xchg
lcall
ljmp
shl
add
cmp
mov
and
test
dec
testl
push
sbb
call
push
xchg
mov
push
in
lret
bound
dec
mov
mov
hlt
mov
iret
mov
fists
jmp
mov
enter
sti
iret
cli
mov
dec
cmp
aam
cltd
mov
mov
sub
dec
shll
out
clc
cmp
jp
and
pop
call
int3
fidivrl
push
aaa
or
ss
sarb
daa
insb
nop
in
adc
shl
jmp
push
push
xor
lret
fisttpll
add
xor
dec
mov
fwait
ret
mov
fildl
les
stos
mov
adc
sub
mov
mov
inc
xor
and
add
in
into
daa
add
mov
mov
and
xchg
push
outsl
jno
push
xor
mov
push
cmpsb
mov
fdivs
or
jecxz
pop
push
xor
xor
inc
popa
dec
out
cmp
sbb
cmc
jl
inc
popa
aam
clc
aas
iret
imul
xchg
in
cmpsl
cmp
adc
sarb
imul
pusha
push
pop
and
clc
out
jns
or
inc
movsb
push
aaa
aaa
adc
dec
add
or
push
jns
std
cmp
repz
jg
jl
and
mov
jo
push
adc
jle,pn
mov
sbb
orb
jno
stc
inc
pop
and
dec
dec
jle
stc
add
mov
mov
ret
call
mov
in
insl
clc
sub
lods
fisubrl
repnz
inc
mov
lods
loop
pop
lds
mov
lods
fdivr
iret
lret
outsl
aam
mov
int3
sahf
adc
sub
push
movsl
push
sub
adc
sbb
cmpb
or
add
sub
jg
jle
loop
sub
cmp
imul
int3
je
dec
mov
in
fucom
clc
in
inc
out
test
fwait
jbe
sarb
mov
enter
jno
add
or
mov
das
orb
hlt
sbb
test
mov
xor
xor
outsl
inc
pop
ljmp
call
cmp
cs
and
cmp
mov
and
xor
sbb
cmpsb
or
mov
in
ret
bound
cmp
push
add
lods
and
add
pop
test
jmp
movsb
hlt
mov
mov
mov
ljmp
xor
sub
lret
mov
cmp
out
push
jmp
pop
mov
lea
jns
cmp
mov
outsb
pusha
test
jo
jns
cltd
mov
cmpb
and
xchg
js
xor
rorb
mov
iret
push
or
rclb
xchg
mov
loop
out
mov
test
sub
jbe
inc
xchg
lret
daa
dec
pop
into
testl
dec
loope
pushf
scas
mulb
add
mov
pop
pushf
add
hlt
mov
outsl
mov
popf
or
aad
test
roll
add
mov
movsb
jecxz,pn
mov
daa
mov
mov
sub
xchg
dec
mov
xchg
xor
sahf
dec
popf
mov
or
push
and
mov
xor
pop
mov
ljmp
icebp
mov
cmp
fwait
add
mov
in
rcr
mov
jns
out
je
sub
movsb
movsl
dec
jmp
rclb
je
arpl
out
dec
stos
stos
and
mov
push
sub
enter
add
in
jmp
sub
jecxz
ret
mov
das
shlb
mov
and
xchg
xor
int3
push
insb
xchg
jb
mov
jns
inc
or
popa
lret
adcl
lods
or
xor
pushf
mov
shll
out
adc
mov
sbb
cmp
leave
xchg
fstl
bts
jl
out
repz
fcmovb
stos
mov
aaa
sarl
flds
sbb
mov
or
sbb
lcall
or
jp
stos
mov
inc
in
sti
addr16
adc
pusha
dec
and
mov
xchg
ja
ss
lahf
inc
and
or
outsb
in
dec
stos
lods
mov
add
mov
lds
mov
lcall
dec
push
inc
inc
and
and
xchg
mov
lcall
out
and
mov
je
dec
shlb
test
test
adc
push
into
sub
cmp
les
mov
scas
sbb
mov
std
mov
aaa
push
xor
mov
mov
int3
in
xor
xchg
jp
aas
push
jno
sti
test
imul
gs
inc
xor
xor
rcr
js
push
jae
int
or
mov
and
jns
add
iret
add
mov
pop
pushf
add
insb
adc
cmc
dec
or
push
mov
and
in
ljmp
sahf
adc
mov
sti
dec
lcall
outsl
mov
rcrl
std
add
sbb
adc
jmp
pop
les
paddusw
pop
xor
pop
mov
dec
sub
push
das
xchg
stc
lock
in
sbb
sbb
cmp
push
adc
je
xor
xor
and
mov
ljmp
movsl
add
popf
xchg
rorb
push
stos
push
bt
dec
push
push
pop
jecxz
stc
mov
push
gs
fldenv
jp
xchg
pop
loope
push
pop
pusha
fmuls
popf
mov
outsl
mov
nop
push
xlat
out
test
imul
fcomp
or
aam
loopne
pushf
int3
add
jo
ja
dec
pop
popa
stos
rolb
clc
dec
in
cmp
gs
hlt
dec
push
repz
addl
mov
fsubrs
test
ret
in
xchg
fiadds
and
daa
lea
je
nop
testb
jbe
shl
or
push
movsl
mov
cmc
into
push
mov
lret
scas
or
inc
and
mov
pushf
jl
fiadds
mov
mov
xor
jbe
mov
outsb
les
add
pop
push
es
dec
mov
pop
xchg
pop
rcr
mov
iret
mov
jbe
sti
int
scas
or
inc
jl
clc
std
popf
sti
pushf
leave
lret
imul
xchg
inc
lret
das
les
inc
ret
cmp
add
pop
xchg
xchg
mov
cld
js
mov
int
into
int3
mov
or
aam
sbb
mov
xor
xor
mov
lret
jge
imul
test
cmp
movsl
jecxz
mov
pushf
fiaddl
mov
out
int
push
cs
xlat
inc
int
es
int
adc
shll
imul
aam
sbb
outsb
fistpl
daa
jno
shlb
fucompp
add
mov
mov
test
sbb
sbb
mov
addr16
mov
in
addl
jmp
pop
stos
je
inc
xchg
pop
pop
aas
fidivl
mov
mov
dec
inc
adc
loop
icebp
add
jae
fwait
lret
sbb
pop
jecxz
icebp
cwtl
sub
fwait
pop
andl
dec
outsl
fldl
fcoml
jne
jae
insb
jb
ret
push
push
mov
ss
sub
sti
inc
lret
adc
mov
in
xchg
or
lret
add
pop
cmp
popf
jb
mov
dec
into
xor
xor
in
iret
mov
and
or
push
in
xchg
icebp
dec
jb
jmp
scas
adc
cmc
or
xorb
dec
shll
scas
jne
fnsetpm(287
push
fbstp
add
and
xor
xchg
and
xchg
and
xor
insl
addr16
dec
jbe
xchg
dec
sub
lret
xor
xchg
push
shll
repz
jecxz
adc
sub
xchg
sbb
in
out
xchg
jge
xchg
and
or
mov
arpl
pop
dec
test
pop
scas
aam
mov
jne
cmpsb
mov
movl
stc
jmp
dec
popf
push
add
xchg
lea
es
inc
je
dec
lahf
adc
popl
push
jnp
jae
stos
mov
push
in
mov
xchg
cmp
inc
push
aaa
sub
jo
push
shrb
add
add
cwtl
pop
mov
fwait
adcb
fcoms
sbb
jb
inc
negb
repz
mov
jno
lcall
push
mov
cmp
movsb
xorb
jnp
cmp
leave
in
push
xchg
jg
dec
fistpll
jp
aas
into
dec
or
fimull
gs
jns
movsl
ret
aam
push
arpl
pusha
mov
leave
addl
lods
pop
lods
lcall
mov
jb
adc
sbb
fdivl
jmp
insl
lcall
testl
adc
pop
cmp
mov
jle
les
loope
leave
push
and
in
ror
sbbb
ljmp
pop
mov
in
mov
jge
and
mov
sbb
add
imul
add
int
mov
pop
sub
cmpb
mov
xchg
mov
push
mov
mov
lods
xlat
jg
shll
popa
sbb
adc
leave
mov
repnz
push
mov
xchg
push
packsswb
stos
out
testl
jp
or
mov
sahf
dec
and
cwtl
lret
jo
cltd
and
cmc
sub
cmp
shll
mov
dec
lret
call
inc
lret
int3
movsb
xchg
add
inc
das
cmp
gs
mov
pop
lock
lcall
les
popf
data16
inc
sub
dec
mov
test
imul
es
inc
or
das
mov
sbb
add
sub
js
dec
icebp
mov
hlt
push
sub
clc
mov
push
hlt
cmpsb
mov
iret
push
js
les
mov
or
iret
ds
pop
push
pop
mov
sbb
xchg
ds
cwtl
test
or
ljmp
mov
jbe
pop
lret
int3
pop
dec
jne
adc
mov
pop
sub
lcall
adc
mov
add
pop
das
loope
idivl
push
and
aas
rcl
pop
pushf
push
and
outsl
pop
imul
dec
xchg
cmp
sub
insl
ja
adc
and
pop
aas
das
outsb
sub
pop
cmp
mov
lcall
xor
popf
pop
int
adc
lock
mov
mov
sub
sub
xchg
xor
divb
xchg
in
shlb
cvtpi2ps
loope
mov
sbb
outsb
dec
xchg
scas
hlt
cld
push
and
mov
pop
xor
out
inc
cli
and
gs
xchg
add
inc
cmp
mov
cwtl
push
or
sbb
in
xchg
jp
in
adc
std
or
hlt
dec
ficompl
add
jae
lret
xor
lahf
pop
xor
mov
cmp
addl
sahf
or
ret
pushf
mov
es
pop
int3
or
das
aam
fistpll
ljmp
sbbl
sbb
fimull
add
inc
fcmovb
adc
and
mov
out
cmc
pop
es
scas
mov
scas
dec
pop
sub
nop
xor
sahf
or
repnz
and
outsl
push
push
xorb
repz
iret
add
dec
push
xor
mov
lahf
mov
vpslld
add
fdiv
rorb
inc
imul
leave
cwtl
mov
icebp
inc
ret
out
das
jp
rcll
cmp
fwait
xchg
dec
lods
nop
push
cwtl
add
and
mov
addl
sbb
xlat
cmpsb
fimuls
and
stc
loopne
or
push
push
sbb
push
add
sub
enter
inc
xchg
cmc
inc
and
pxor
int
or
lods
inc
and
scas
cmp
dec
sarl
cmp
xchg
mov
xor
in
mov
call
mov
jp
test
movsb
mov
cwtl
mov
mov
lahf
enter
loope
push
inc
inc
ret
cmp
pop
ffreep
push
and
cld
fwait
or
loop
into
icebp
mov
mov
push
mov
pop
fcmovnb
pop
xchg
pop
test
dec
sbb
add
xor
jno
les
iret
mov
fidivs
xlat
adc
xor
rcrb
jmp
push
shlb
jp
mov
xlat
mov
jle
adc
mov
mov
dec
or
and
nop
lods
mov
lret
fstpt
mov
inc
pop
mov
mov
stos
or
sub
sbb
fildl
fcmovnu
mov
mov
pop
xchg
fidivs
jno
data16
sub
mov
lods
adc
ret
xor
mov
inc
cmp
pop
fincstp
push
ficompl
xchg
xchg
es
iret
mov
adc
jmp
mov
fnstcw
loop
xchg
mov
fsubrs
jnp
lret
add
cli
mov
add
pop
sub
ja
xchg
movsb
cmp
or
xor
fcmove
mov
mul
cmp
pop
insb
andb
lea
mov
mov
dec
pop
jmp
xor
loop
mov
pop
lahf
mov
out
cmpsb
inc
test
add
sarl
and
cmp
sbb
xor
push
cmp
leave
enter
cmp
mov
and
in
pop
mov
ret
out
sbb
adcl
inc
sub
leave
and
shlb
xchg
adc
pushf
hlt
mov
fsubs
xchg
rcrb
dec
jnp
mov
lods
xor
push
adc
cld
outsl
cmp
sbb
or
lock
hlt
mov
jae
imul
mov
filds
cs
jle
imul
push
xchg
pop
xchg
lods
fbstp
dec
movsl
mov
lds
scas
loope
inc
cmp
lea
ljmp
cmpsb
xor
mov
shrb
xchg
add
nop
popf
sbb
arpl
xor
or
xor
inc
cmp
mov
orl
movsl
mov
xor
add
aas
ljmp
fwait
jbe
fisttpl
dec
mov
loope
into
mov
mov
ret
push
rorb
sub
je
sti
add
mov
cmc
mov
push
jecxz
lods
popa
sahf
lret
xor
mov
add
push
cltd
fnsave
es
mov
fmuls
stos
dec
cmp
int3
std
mov
stos
or
add
test
lcall
fucomip
jmp
scas
and
mov
sbb
std
enter
cmpsb
add
and
inc
sbb
movsl
sub
cmc
sub
xchg
inc
les
outsb
pop
and
fcmovu
sbb
dec
jge
test
mov
cmp
adc
stc
aas
arpl
dec
stos
testl
mov
sub
fildll
mov
inc
fcmovne
js
js
pop
pop
xor
xchg
enter
imul
imul
rol
xor
xor
fwait
jb
sub
scas
int3
ret
notb
repnz
and
or
leave
subl
mov
hlt
stos
loopne
sub
incl
jecxz
and
nop
popl
fildl
fldt
jle
cmp
and
jbe
fcmovnbe
inc
xorl
mov
and
mov
or
lret
inc
cmp
pop
mov
cmp
cld
adc
rorb
or
mov
jmp
jno
shl
movsl
aaa
fisttpl
pop
mov
adc
xchg
sbb
mov
es
out
sti
jl
int
ss
stos
lds
sub
push
stos
or
ja
sbb
adc
pop
loope
test
inc
push
loope
jne
stos
fdivr
in
or
arpl
push
int
es
aas
out
scas
lret
fcmovnbe
imul
lods
sbbl
clc
push
push
push
in
shll
mov
in
cmp
outsl
test
lret
jg
loope
adc
pop
add
and
int
pop
jno
call
pop
lods
dec
dec
imul
in
add
xchg
mov
push
fs
xor
je
in
jbe
jle
test
xlat
xor
or
repz
add
mov
loope
push
int
xor
inc
stos
cmp
adc
push
or
dec
push
dec
divl
iret
adc
in
stc
mov
and
mov
aaa
mov
nop
sub
inc
lahf
xor
fstpl
repz
push
jbe
test
hlt
sbb
daa
sarl
mov
cmpsl
orl
mov
adc
cltd
mov
xchg
shr
sbb
add
xchg
and
aaa
adc
out
movsb
mov
test
testb
sbb
lret
xor
les
inc
cmpsl
aaa
rcrl
or
outsb
or
xchg
and
dec
cmp
jecxz
shlb
push
aas
jns
adc
cmp
inc
sbb
add
and
mov
add
movsb
sub
test
jae
cld
daa
dec
fmull
dec
nop
cmp
inc
fwait
inc
add
icebp
inc
fcmovb
movsl
test
lds
add
or
orb
and
aaa
lahf
test
outsb
add
adc
pop
or
aad
rcrl
mov
mov
jmp
inc
nop
lods
outsb
sti
xlat
sub
cmc
mov
xor
outsb
fldenv
adc
xor
push
push
pop
dec
jb
jp
mov
push
push
or
testl
sub
fnstcw
cmp
pop
xor
push
dec
xor
dec
adc
scas
cld
andl
stos
or
sti
in
movsb
mov
cld
dec
cs
pop
sub
hlt
push
lods
xor
add
lcall
movsl
loopne
add
sub
dec
cmp
mov
cmp
clc
rclb
add
jecxz
mov
test
sub
jo
xor
les
pop
dec
iret
jl
jecxz
je
jnp
lret
xor
mov
fnstsw
into
pop
mov
addr16
mov
je
push
inc
outsb
adc
fldl
pop
push
jge
imul
xor
std
sub
xlat
or
xchg
cs
stos
rcr
std
pop
fstps
insl
mov
push
dec
enter
sub
mov
add
cs
jmp
adc
adc
jg
fsubr
in
clc
pop
je
faddl
mov
mov
cs
sbb
dec
shl
mov
call
leave
outsb
lods
push
cmpsl
sbbl
push
mov
out
shll
cli
cmp
cmp
sbb
jge
movsb
dec
outsl
xchg
push
push
pop
adc
xchg
or
mov
cmp
xchg
xchg
inc
lahf
or
jbe
aas
lea
cmp
jne
in
testb
push
xchg
pop
divb
mov
inc
add
popf
nop
mov
test
or
lret
mov
dec
int
scas
addr16
test
outsb
xchg
insb
fistl
cmp
xchg
adc
cld
push
dec
aad
fists
pop
xchg
movsb
out
mov
movsb
data16
mov
das
vmread
les
fcoms
je
scas
sti
lret
rdmsr
cmp
add
aaa
in
jp
es
iret
lret
shlb
pop
xor
mov
loope
repz
icebp
ds
mov
adc
daa
daa
std
xchg
shlb
mov
xchg
in
add
sbb
mull
sub
mov
sarl
loope
packsswb
add
pop
xchg
xlat
adc
pusha
fcmovu
mov
lret
xlat
mov
sbb
jae
add
jne
hlt
jmp
dec
negb
out
mov
inc
data16
adc
jno
je
jbe
imul
lret
push
out
into
push
sahf
mov
jmp
adc
fwait
aad
pop
inc
into
aam
cmp
cmp
mov
jmp
mov
pop
xor
cmp
std
sar
mov
dec
xor
sub
imulb
icebp
sbb
lock
xchg
cmp
mov
mov
fwait
in
iret
or
in
jmp
cmp
push
js
fisttpl
mov
and
ret
sub
add
test
pop
insl
mov
push
in
dec
idivl
push
jge
in
jo
out
pop
jo
faddp
add
popf
ljmp
xorb
mov
push
xchg
nop
jbe
andl
add
lahf
je
mov
out
mov
and
fldl
out
inc
aaa
and
lcall
mov
pusha
test
dec
outsl
ret
mov
mov
into
dec
sub
pop
mov
inc
xor
or
test
and
rcr
jb
pop
sti
push
add
xchg
jo
jecxz
ret
jmp
into
pusha
jmp
pop
sbb
sbb
pusha
and
jo
mov
jmp
in
sahf
xchg
dec
pop
xchg
ret
stos
nop
int
in
sbb
and
mov
xor
pushf
call
xor
sbb
aaa
jle
add
cmpsb
mov
cmp
fldl
ja
jp
std
or
lods
mov
in
add
lret
mov
jnp
xchg
rcl
movsb
and
movl
pop
push
bound
push
xchg
lds
sbb
aaa
xchg
push
mov
arpl
rolb
inc
mov
les
jno
mov
sbbb
pop
xchg
arpl
inc
mov
and
in
fisubrl
mov
aad
stc
push
add
sbb
jno,pn
pop
fdivp
scas
imul
pop
inc
outsl
sub
mov
xchg
mov
inc
mov
xchg
stc
sub
testl
lea
fadds
or
leavew
inc
inc
dec
jne
in
divb
push
cwtl
xchg
mov
add
or
dec
call
jne
arpl
pop
mov
ljmp
mov
inc
lahf
aaa
rcrb
cs
sbb
int
xor
mov
pop
mov
add
les
outsb
mov
mov
sub
test
in
jmp
outsb
mov
sti
in
jle
test
push
outsb
or
cmpb
testl
nop
xchg
push
push
dec
hlt
inc
enter
dec
cmp
inc
idivb
mov
lods
repz
popa
add
jbe
sbb
jnp
jnp
cmp
xchg
jg
ljmp
fisubrl
movsl
outsb
in
inc
xchg
lods
das
orb
push
in
aas
jne
push
push
ret
mov
jg
push
push
shlb
xlat
pop
cmpsb
fsubrs
movsl
cmp
pop
push
test
ja
shl
aaa
xor
inc
out
out
push
fcmovnu
xor
lods
xchg
inc
sbb
rdmsr
fwait
cmp
or
out
pop
dec
sub
jbe
das
in
sub
cmpsl
in
jbe
mov
mov
rcrl
jg
jbe
mov
dec
mov
sbb
cli
adc
jle
fs
push
shlb
fildll
push
popf
xchg
out
insb
jmp
mov
aas
in
fsubp
cmp
outsl
into
or
and
cltd
lods
mov
outsl
loopne
and
test
jno
sub
jbe
push
test
pop
imul
inc
dec
scas
cmp
fmuls
lock
adc
mov
push
xchg
fisubs
pop
mov
call
int
jae
iret
mov
xchg
mov
es
fbld
mov
fwait
cmp
or
scas
cld
popf
mov
cmc
xchg
sti
lahf
inc
add
insl
xor
rcr
leave
cs
stos
mov
lcall
add
mov
loop
add
mov
add
jecxz
cmp
adc
mov
sub
dec
jbe
or
pop
sbb
lds
pop
xchg
cmc
pop
inc
cmp
mov
sti
in
clc
iret
sbb
cmp
fldcw
lea
push
mov
fists
xor
push
in
mov
std
cmc
add
std
ljmp
cs
xchg
dec
jmp
push
sbb
lret
enter
xor
shrb
lret
mov
pop
fs
mov
add
repnz
sbb
mov
in
mov
jmp
jb
pop
xchg
cmp
pusha
mov
jge
fisubrs
add
mov
mov
pop
gs
xor
mov
les
fiaddl
or
pushf
fimuls
lock
and
mov
jmp
call
cmp
aaa
dec
jno
mov
fisttpll
fisttps
jae
sti
js
or
sbb
xor
fsubl
inc
mov
popf
mov
xor
bound
cmp
push
dec
popa
test
xor
gs
mov
lret
mov
cltd
fsts
in
mov
pop
je
and
inc
lret
enter
imul
xor
loop
xor
pop
leave
mov
dec
jae
dec
jbe
mov
aas
jg
call
dec
sub
jge
mov
aas
rclb
xor
mov
mov
inc
pusha
ror
into
hlt
mov
mov
pop
pop
mov
sbb
cmp
inc
pop
mov
mov
out
mov
das
adc
mov
inc
cwtl
adc
xchg
cmp
sbb
gs
sub
loop
dec
pop
push
jl
jl
shrl
cmp
push
mov
popa
jecxz
sbb
xchg
mov
fcomi
adc
subl
sub
dec
jp
mov
push
xchg
cmp
je
enter
inc
jecxz
pusha
outsb
shrb
xor
add
in
scas
mov
mov
ret
xchg
xorl
dec
addl
jmp
mov
leave
mov
stos
mov
xor
mov
stos
jnp
in
lods
xchg
lcall
iret
xchg
pop
jnp
dec
sahf
sbb
push
xor
dec
and
out
pop
push
sbb
xchg
ljmp
pop
xorl
pop
cmp
jbe
mov
or
stc
inc
or
pusha
xlat
je
mov
popl
in
xchg
ret
adc
jge
or
lock
or
fmulp
stos
and
sbbl
clc
lret
lds
test
les
movsl
ja
hlt
mov
mov
rcr
idivl
iret
jmp
shlb
xchg
inc
ja
notl
dec
jg
stc
repz
cltd
aas
sbb
adc
mov
mov
mov
inc
sub
inc
loop
repz
jmp
push
insb
cmp
mov
adc
pop
and
lret
test
xor
mov
arpl
push
xor
push
inc
loop
popf
inc
pop
mov
mov
adc
xor
inc
ljmp
jmp
rclb
cmpsl
xor
add
pop
fisubs
decb
or
in
fcomps
aaa
push
adc
xchg
push
or
cmp
adcb
dec
push
aad
aad
push
mov
inc
or
arpl
add
or
inc
inc
fcomps
push
into
mov
rorb
popa
mov
xchg
inc
mov
inc
xchg
fildl
sbb
mov
xchg
adc
leave
adc
jo
xor
mov
push
mov
xor
lret
xchg
push
dec
lret
fsubrl
cmpsb
cmpsl
pop
cmp
mov
paddd
add
sbb
std
mov
dec
push
push
mov
dec
jle
andb
popa
in
cmpsl
lock
fs
pop
sub
mov
repz
cwtl
loop
repz
inc
cs
jl
dec
hlt
in
js
mov
out
push
lods
cwtl
mov
rolb
popl
and
sbb
dec
inc
outsl
dec
lcall
sub
sbb
ret
imul
mov
mov
sahf
mov
dec
int3
mov
dec
pop
in
mov
frstpm(287
es
jge
subl
lock
fisttpll
xor
mov
mov
es
inc
les
and
mov
sbb
loop
push
push
data16
mov
adc
je
push
mov
xor
ret
adc
aam
sarb
dec
adc
mov
js
hlt
dec
jp
mov
cltd
jp
and
mov
pop
fiadds
xor
inc
inc
xor
fs
jl
leave
aam
pop
jns
aad
xchg
lret
test
push
rdtsc
pusha
mov
cmc
fdivs
pusha
aas
dec
add
adc
push
dec
push
ss
lcall
mov
jmp
push
jecxz
xchg
pushf
lods
ljmp
xor
cmp
or
popa
nop
das
mov
stos
les
rorb
mov
mov
cmp
rcr
mov
jne
cmp
out
mov
not
mov
cli
pop
pop
int
lock
jmp
cmpsl
stc
sti
jns
mov
inc
enter
pop
adc
push
pusha
lret
xchg
mov
aam
xor
inc
adc
pop
and
cwtl
and
ja
movsl
cmp
cmp
jnp
out
sub
in
pop
gs
call
pop
sub
int3
push
and
ds
dec
test
fcmovne
pop
jg
icebp
aaa
pop
or
jne
daa
push
leave
stc
or
sbb
xchg
sbb
call
nop
push
mov
inc
ret
sbbb
fildll
add
push
ljmp
ret
jl
sbb
mov
std
aam
lahf
outsl
sub
out
inc
jae
test
push
outsl
jge
pop
in
add
cmpsl
cmpsb
sub
mov
popf
cmp
pop
aas
adc
cmpsb
in
and
mov
sahf
iret
inc
or
cmp
adc
aas
movb
xchg
pop
rcll
sub
in
pop
xchg
add
and
push
mov
sub
inc
mov
enter
inc
mov
jbe
cmp
mov
into
pop
mov
ret
mov
mov
sbb
jne
mov
cmpb
inc
adc
sub
dec
dec
inc
loop
cmp
or
push
popa
shr
sub
addr16
push
push
adc
xor
aas
and
sti
xor
xchg
push
leave
divl
in
pop
mov
adcl
fimull
add
subb
xlat
and
mov
aam
mov
je
pop
push
dec
xchg
popf
xor
or
jecxz
pop
or
xlat
rorl
xchg
push
mov
aad
stos
icebp
or
pop
mov
xor
dec
mov
inc
lret
rcll
mov
ds
push
lds
and
lcall
shrb
outsb
and
clc
icebp
test
add
or
cmpsl
int3
mov
insl
mov
ljmp
imul
movsl
xchg
xorl
sti
mov
fcoml
mov
test
xor
dec
imull
jg
fmuls
js
xor
outsl
dec
ror
pop
sub
mov
push
jbe
shrb
dec
imul
leave
loopne
scas
inc
test
clc
sub
pop
jne
cmp
arpl
mov
add
mov
int3
ja
add
inc
sbb
dec
dec
mov
icebp
pop
lods
inc
pop
jns
jbe
js
sarb
cmp
cmp
mov
cmp
shr
sbb
mov
push
jge
aas
icebp
ret
adc
xchg
push
enter
dec
pop
mov
push
pop
xor
dec
in
test
mov
xor
push
test
int
mov
inc
test
rcl
pushf
adc
orl
mov
jnp
jmp
pop
test
push
mov
clc
jae
fwait
enter
bound
push
or
or
ret
mov
dec
xchg
ss
jl
mov
inc
xor
insb
dec
fwait
pop
cmpsl
sub
test
push
mov
nop
inc
cmp
arpl
and
mov
je
push
fcomi
fisubrl
and
sahf
pop
scas
scas
stc
repnz
xchg
jl
cmp
roll
push
cltd
inc
xchg
pop
sbb
sbb
xor
stos
data16
sub
scas
jb
sub
fnsave
int3
dec
cmp
push
sti
dec
lea
dec
dec
std
and
mov
sub
jb
fildll
pop
popa
je,pt
insb
hlt
mov
loop
fimuls
mov
mov
lods
jp
xchg
inc
andb
fwait
out
pop
mov
add
fcoml
ficomps
push
or
pop
pop
arpl
mov
insb
sub
mov
xchg
sbb
aas
inc
clc
mov
test
sahf
or
push
movsb
mov
xor
push
enter
push
icebp
dec
or
dec
xorl
mov
test
aad
and
lahf
sbb
insl
inc
cmp
fwait
push
push
enter
lret
sub
jp
cmc
push
xorb
mov
test
xor
sub
xor
fildl
pop
mov
push
cmpl
pusha
outsl
mov
jge
sti
mov
mov
fisubl
mov
xor
pop
movsl
mov
xchg
mov
add
dec
jmp
shll
aad
add
jl
lahf
jle
pop
shrl
sub
dec
into
xchg
mov
sbb
lods
jg
mov
adc
inc
cmp
cmpsb
rorb
dec
and
mov
sbb
lcall
into
adc
ja
test
dec
adc
or
rcll
adc
ja
sete
jae
inc
xor
cmpsl
not
cmp
jns
jb
sarl
xchg
sahf
inc
mov
repz
mov
shlb
sub
fwait
pusha
in
inc
sub
lcall
and
and
xor
in
xchg
lods
pop
xchg
add
insb
hlt
pop
outsl
stos
and
cli
inc
push
es
stos
sub
dec
dec
sub
ret
mov
jbe
negl
lea
mov
inc
into
mov
pop
lods
pop
xchg
inc
ficoms
xchg
mov
repnz
stos
rcl
push
lods
data16
inc
outsl
repz
jge
icebp
xor
in
mov
inc
and
mov
ds
cld
sti
lret
push
andl
aas
repz
rcll
lret
fnstcw
push
and
jmp
add
repz
push
adc
popf
push
gs
mov
inc
out
icebp
out
adc
sbb
inc
jecxz
inc
push
xchg
sbb
idiv
aaa
pop
idivb
cmp
mov
and
je
aas
ljmp
cli
add
cmp
stos
cmp
push
insb
xor
mov
lea
xchg
push
je
mov
mov
and
push
cltd
inc
push
sub
lods
adc
push
mulb
aaa
inc
and
mov
mov
insb
hlt
pop
pop
repnz
xor
in
addl
cmp
std
lock
and
js
sbb
push
les
hlt
sub
cmp
pop
adc
mov
pop
das
shrb
mov
jg
mov
mov
cs
xchg
pop
ficompl
ret
pop
insb
out
pop
pop
cmc
push
in
rcll
jle
mov
mov
es
add
xlat
push
aas
int
mov
add
incb
lcall
bound
cltd
mov
aad
jno
int
sbb
adc
pop
into
push
imulb
push
sahf
daa
fistpll
lret
jne
or
fwait
xchg
xchg
ds
dec
mov
popf
lret
outsb
iret
lea
loop
mov
and
out
xor
ss
lret
sub
and
xor
cmpsl
test
sti
mov
jo
lret
lret
inc
test
pop
adcl
or
pop
outsl
xchg
ret
and
add
push
fildll
adc
jge
ljmp
iret
fwait
mov
clc
xor
jle
cltd
ss
pop
xor
mov
push
in
jbe
mov
cmpsl
pop
inc
xor
xor
cmp
cmp
test
jno
fmuls
in
fwait
pop
push
xlat
xchg
jg
in
arpl
cwtl
inc
std
fldt
into
outsl
call
cmp
call
ljmp
and
pushf
xchg
mov
dec
adc
lods
fsubrs
mov
imul
pusha
push
jp
cmp
pop
jg
bound
andl
jnp
repnz
jb
add
adcl
fs
pop
repz
pop
sbb
pop
cmovae
fbstp
addr16
fadds
loop
jbe
mov
pusha
ljmp
mov
jnp
icebp
lret
fbld
lods
xor
and
in
loope
mov
pop
push
cmp
and
mov
jle
mov
adc
jne
clc
mov
stos
mov
cmpsb
sbb
sub
adc
pop
cli
sahf
aaa
fnstsw
cmp
or
xchg
push
popa
push
xor
mov
add
mov
je
mov
xlat
out
xlat
mov
push
mov
cmp
inc
loope
sbb
xchg
jno
mov
mov
mov
insb
movsl
pcmpgtd
addl
cmp
scas
cmp
lret
cmp
dec
sarb
jnp
or
orl
push
jecxz
arpl
and
pop
push
es
pop
jno
adc
cli
jne
clc
bound
cmpsl
or
ja
out
sbb
imul
inc
adc
fisubl
inc
adc
ficoml
nop
mov
and
jecxz
orb
sub
in
jne
icebp
xchg
enter
cmp
stos
cmp
lret
mov
jb
lds
stc
pop
into
mov
dec
sub
lea
sarl
cmp
outsb
cmp
mov
or
add
sub
push
or
xor
cltd
xchg
shlb
in
ja
cld
dec
cmc
dec
pop
xchg
sbb
xor
xor
dec
pop
mov
xlat
test
out
adc
outsl
push
pushf
mov
push
xchg
mov
dec
out
sbb
gs
nop
fwait
lcall
and
dec
std
je
out
sub
popa
ljmp
mov
addb
lcall
repz
push
adc
pop
inc
mov
pop
mov
sub
cmpsl
in
or
imul
int3
xor
xor
sbb
inc
imul
sbb
and
cmp
scas
sahf
inc
sub
push
inc
dec
cvtps2pi
fidivrl
clc
cld
jbe
ds
mov
dec
jbe
outsb
jl
stos
mov
pop
sahf
jecxz
add
xchg
inc
add
adc
xor
mov
icebp
in
pop
daa
push
in
loopne
lock
mov
jmp
or
or
repnz
dec
cmpsb
nop
insl
jmp
pop
je
jae
dec
test
inc
fbstp
jmp
outsl
dec
xchg
jl
sbbb
cmp
xor
scas
inc
es
jp
add
cmpsb
jp
pop
das
subl
sbb
xlat
mov
xor
movsb
iret
cltd
cmp
sbb
call
sbb
not
jnp
jg
or
dec
or
insb
loopne
pop
jae
push
adc
push
stc
or
out
mov
mov
mov
shrl
fs
mov
sti
or
lret
imul
sbb
dec
adc
popa
lods
add
movsl
stos
loop
idivl
je
cmc
repnz
sub
outsl
rorl
rcll
mov
mov
int
jo
sti
sbb
fmuls
stc
add
das
xchg
sbb
inc
loopne
mov
sahf
jb
repnz
fdivl
cli
add
outsl
stc
inc
mov
in
ss
jo
pop
add
add
outsl
cmp
fidivrs
lahf
jmp
in
mov
xchg
push
bound
xchg
mov
popf
add
dec
cltd
scas
pushf
and
fcomps
xchg
mov
cmc
dec
cs
jmp
rol
xchg
add
xchg
mov
ja
dec
sub
insl
sti
dec
xchg
xchg
mov
jg
adc
jno
lods
mov
test
lcall
sub
xchg
aaa
mov
lcall
outsl
and
stos
sub
jle
imul
cmp
cmpb
std
bound
xchg
pop
adc
push
adc
mov
inc
daa
and
lock
push
jle
cmp
ja
rcrl
sti
iret
xor
cmp
cld
mov
sar
fstpl
inc
clc
mov
mov
leave
loope
mov
jns
mov
cld
mov
xor
xchg
inc
sbb
mov
xlat
mov
decb
aad
push
cwtl
movsl
xor
test
mov
aas
pop
jae
add
sbb
sub
and
iret
cs
bound
in
xor
jg
and
ret
add
movsl
repnz
and
lods
hlt
ret
mov
push
inc
inc
add
lods
adc
add
clc
popf
out
int
cmp
fsts
lret
enter
js
jb
sbb
sbb
push
xchg
cwtl
xor
pop
add
or
xchg
jae
pop
int
out
push
stos
sbb
aam
jae
inc
xchg
repz
mov
xor
jb
icebp
xchg
jl
lret
roll
pusha
fnstcw
ja
insb
pop
sarb
sbb
xchg
das
xchg
and
pop
sub
cmp
jno
repnz
ficompl
mov
mov
xchg
sub
lahf
mov
mov
stos
sbb
dec
adc
pop
cmp
xchg
shl
adc
inc
sub
test
daa
fmuls
fcom
out
dec
mov
lret
lods
pop
push
mov
ret
imul
scas
xor
fdivs
lret
lcall
mov
xchg
movsl
lcall
movsl
or
call
jno
xchg
xchg
inc
roll
pop
cli
mov
lret
mov
cmpsb
test
sbb
out
out
pop
sub
scas
mov
cs
xchg
outsl
lds
sub
and
outsb
xchg
clc
aam
mov
and
cltd
pop
push
test
shrl
xchg
mov
in
mov
add
adc
adc
xchg
sahf
pop
cltd
jbe
inc
pop
xor
and
inc
sub
movsb
inc
inc
push
xchg
addr16
sub
loope
cmpb
add
mov
jl
push
sbb
outsl
lcall
cltd
loope
mov
subl
mov
push
xchg
inc
lcall
push
dec
in
mov
mov
dec
ficompl
movsl
cmp
or
and
ret
push
je
rcr
outsb
adc
mov
xchg
mov
xchg
stc
sbb
lret
js
jmp
leave
es
xchg
cltd
push
repnz
add
lods
outsl
in
jecxz
sub
adc
mov
movsb
dec
add
add
xchg
notl
inc
clc
or
or
jp
pop
xor
xor
loope
pop
mov
insl
xor
jne
inc
outsl
fwait
movsb
jg
dec
ret
cld
lahf
sub
aad
lds
xchg
jg
stos
xchg
pop
fdivs
xor
mov
add
dec
add
xor
xchg
enter
add
lods
xchg
mov
js
xor
pop
test
lcall
pop
sbb
das
lcall
cmp
xor
bound
xchg
jae
pop
rclb
je
adc
push
sbb
icebp
icebp
inc
xorb
ds
movsb
ret
sbb
xor
add
ficompl
mov
cwtl
mov
fisttpl
es
sbb
sahf
cmp
jmp
pop
or
sbb
mov
jno
cwtl
orb
inc
or
sub
add
sbb
lods
sbb
pop
mov
mov
inc
in
call
mov
imul
aaa
scas
mov
addb
out
push
sbb
cmpsb
push
cmpl
daa
pop
fcoms
mov
mov
movsl
xchg
cmp
cmpsl
leave
lea
lret
js
imul
pop
xchg
insb
inc
mov
jmp
cmp
sub
pop
mov
int
cmp
sahf
xor
cmp
jmp
sahf
repnz
test
or
jmp
mov
test
cmp
sub
pop
seto
ficoml
add
in
mov
cld
cmp
repnz
in
mov
mov
lret
cmpsb
cmp
mov
adc
jp
addr16
add
fmuls
frstor
push
jns
xchg
push
and
xor
idivl
out
mov
cmovbe
fdivr
div
aam
call
add
sub
pop
xchg
jg
mov
stc
imul
das
sahf
xor
das
outsb
inc
dec
pusha
pop
jg
mov
repz
jbe
cltd
stos
fstp
xchg
adc
jae
push
iret
sarl
ljmp
loope
roll
cwtl
lcall
inc
dec
push
scas
pushw
imulb
shlb
jo
mov
and
jno
hlt
out
fbld
dec
xor
cmpsl
bound
xor
call
mov
mov
imul
fxam
jmp
sub
sarl
push
cwtl
repnz
inc
and
es
arpl
add
in
pop
shlb
jo
gs
add
cmp
ret
mov
and
mov
push
jl
movsl
ljmp
test
adc
lds
dec
fadds
mov
mov
ss
test
pop
mov
popf
pop
pop
pop
sbb
cmp
adc
jl
imul
cld
fistpl
xchg
aaa
adc
cmp
mov
pop
xchg
cmp
fwait
stos
pushf
lods
add
dec
xchg
fsubrs
rcpps
mov
loop
cmpsl
ja
push
mov
in
cmp
add
adc
adc
sub
xor
mov
xchg
sbbb
faddl
sbb
sbb
fildl
jecxz
stos
xchg
mov
movsb
mov
xchg
mov
fbld
fdivrl
add
insl
sub
movsb
xchg
dec
mov
adc
push
mov
mov
lret
testl
push
repnz
push
dec
arpl
pop
loopne
xchg
ljmp
shll
mov
xlat
fisubrl
rol
push
lret
or
push
stos
stos
gs
movsb
mov
jge
dec
mov
test
sub
sub
rcr
xor
sti
push
popf
xor
mov
adc
shlb
test
rclb
and
xor
clc
or
mov
adc
push
cmc
lods
std
sub
lret
dec
mov
testl
loopne
stc
outsb
xchg
popf
icebp
sub
mov
test
or
loopne
aam
cmp
inc
cltd
pop
inc
cs
jns
movb
sbb
inc
lds
aad
fs
and
into
inc
sbb
jmp
idiv
imul
push
scas
sbb
movsl
jl
cmp
inc
aam
pushf
mov
iret
and
enter
add
sub
adc
arpl
push
cltd
fwait
es
fsubl
in
in
push
xchg
iret
adc
pop
xor
xor
gs
jnp
xchg
mov
cmp
pop
sbb
jecxz
jmp
inc
adc
test
cmpsb
lahf
arpl
addr16
gs
stos
inc
cmpl
je
mov
out
mov
loopne
push
iret
sbb
or
fstpt
or
xor
add
and
hlt
pusha
mov
push
loopne
cli
icebp
stos
ljmp
pushf
xchg
je
popf
adc
mov
inc
push
push
cltd
out
roll
inc
rcl
mov
and
out
iret
sub
and
clc
sub
sbb
scas
dec
sub
sbb
ficompl
or
shlb
dec
orl
imul
push
sbbl
add
mov
mov
xchg
sbb
inc
cs
frstor
pop
lret
dec
pop
jle
or
xor
mov
sti
push
mov
mov
dec
jo
hlt
lock
std
roll
cs
test
fwait
push
pop
cmp
aad
movsb
imul
std
adc
or
push
push
jnp
mov
scas
daa
push
jne
repnz
dec
out
mov
push
ss
sarb
xchg
lahf
cmp
fdivrp
sbb
call
sahf
stc
mov
sub
outsb
or
insl
aad
adc
filds
add
pmullw
cmp
cltd
repz
fcoms
pop
clc
inc
cmp
lcall
pop
je
inc
mov
scas
lea
fidivrl
pop
xchg
jecxz
aas
mov
mov
cwtl
cs
imul
subps
push
push
sbb
shrb
loop
jmp
nop
cltd
rolb
xlat
jne
xchg
in
pop
mov
call
rorb
mov
rcl
pushf
push
mov
jmp
shlb
xlat
adc
xchg
movsl
loopne
xchg
or
ljmp
jnp
int3
pop
add
leave
mov
mov
cmp
jae
nop
das
inc
out
jmp
cli
mov
adc
sub
dec
movsl
pushf
mov
dec
orl
pop
fsubs
adc
std
cmp
sbb
sarl
sbb
loope
lahf
xor
loope
sahf
xor
cmp
xor
imul
mov
xor
shll
mov
and
jo
scas
mov
mov
cs
insl
mov
loope
mov
scas
arpl
and
inc
adc
cwtl
icebp
push
subl
push
daa
lock
jne
xchg
cmp
jl
push
push
jnp
data16
ljmp
pop
sbb
sar
lahf
jecxz
and
jle
xor
pop
in
and
pop
insl
mov
xorb
mov
test
ret
scas
mov
inc
mov
jns
loope
jecxz
mov
in
adc
pop
mov
jle
aas
sbb
cltd
dec
in
pop
shlb
jb
mov
mov
cltd
add
nop
mov
xchg
xor
repz
pop
push
daa
lcall
cmp
adc
imul
arpl
scas
ss
xor
dec
cld
push
andl
xor
stc
dec
insb
xchg
xor
adc
shll
sub
pop
roll
out
movsl
and
arpl
dec
daa
or
js
mov
imul
popa
push
outsl
push
es
mov
sbb
sub
push
mov
pop
adc
pop
andl
xor
les
scas
cmpsl
je
orb
or
std
or
aas
mov
inc
cmpb
mov
mov
xor
gs
jbe
ret
ja
push
rorl
dec
push
xchg
imul
filds
xor
popf
jecxz
xor
aaa
adc
adc
aam
mov
sbb
cmc
testb
ds
test
or
and
std
xor
mov
and
ss
inc
xlat
cmpsl
jae
cmp
mov
pop
xor
mov
xor
insb
or
rorl
mov
sbb
or
loope
stos
and
sub
test
lods
pop
or
aad
jnp
rorl
inc
mov
dec
inc
adc
push
fwait
insb
insb
nop
inc
outsl
outsl
daa
pop
pop
dec
pop
pop
cmp
shrl
jno
pushf
cmp
dec
mov
adc
or
in
inc
xor
mov
fs
adc
or
rorb
add
cld
shlb
mov
fdivl
negb
sbb
mov
arpl
arpl
cmp
add
jo
xchg
out
roll
mov
fstps
cmp
fs
cmc
rclb
fwait
push
pop
repz
and
xor
into
xchg
and
out
cmp
inc
jno
pushf
xor
das
rcrb
mov
dec
hlt
pop
cltd
jbe
adc
xchg
cmpsb
dec
adc
fbld
adc
xor
aaa
testb
daa
and
scas
roll
cwtl
mov
test
aas
aam
hlt
rcrb
ss
aas
clc
js
test
inc
orl
sbb
push
lods
sti
jp
xlat
ljmp
loopne
orl
mov
sbb
adc
mov
das
push
sub
cli
testl
jne
ljmp
add
hlt
and
and
inc
inc
xor
cmc
pop
les
mov
pop
xchg
and
int3
ds
ljmp
cld
clc
dec
mov
out
or
pop
hlt
imul
scas
stos
inc
and
add
cld
fidivrs
imul
scas
cmp
lods
mov
fs
add
cld
pop
jne
outsl
pop
shll
iret
and
std
rorb
sub
pushf
lcall
fwait
imul
pusha
dec
dec
mov
test
inc
sub
ss
stc
mov
jp
pop
sbb
cwtl
mov
std
sbb
fstpl
stc
adc
pop
imul
ljmp
cld
out
jg
push
test
jo
xor
lret
xchg
test
sub
cld
scas
jb
outsb
mov
adc
aam
ss
int3
gs
inc
add
xchg
inc
push
sub
shll
lods
push
ljmp
inc
mov
test
arpl
movsb
in
ljmp
ds
push
test
pop
cmc
mov
rorl
frstor
or
cmc
jg
push
push
sti
push
loope
outsl
cmp
in
shrl
xchg
shrl
jg
icebp
lret
and
rclb
adc
rorl
xchg
adc
aad
fcomi
fmull
ret
js
hlt
pop
jbe
enter
out
scas
in
jae
inc
cli
inc
aam
xor
mov
xchg
insl
pop
dec
push
jae
sub
imul
bound
inc
iret
jne
inc
dec
adc
mov
nop
fisubl
jmp
mov
inc
add
data16
fidivl
adc
xor
lea
inc
insb
push
adcl
jecxz
xchg
push
sbbl
rorb
mov
xchg
lret
cmpsl
jmp
ret
push
xchg
pop
std
push
add
dec
add
and
mov
adc
cmp
add
pop
pop
sbb
or
cs
aas
pop
jg
jmp
fwait
and
dec
outsl
adc
sbb
lret
jmp
test
int3
in
dec
sub
add
hlt
lcall
sbb
cmp
jne
inc
cwtl
fmull
xor
push
sbb
std
mov
shlb
xlat
popaw
mov
aaa
and
jns
mov
out
repz
or
mov
lcall
push
or
iret
jmp
mov
call
aaa
sub
es
or
imul
out
fcmovu
shlb
dec
mov
arpl
jge
cmp
mov
aas
xchg
jmp
mov
dec
adc
xor
adc
cmp
sub
push
call
pop
popf
mov
andb
std
movsl
and
xchg
adc
std
cmpsb
orl
lret
int
mov
stc
cwtl
dec
movsl
sti
fcoml
cwtl
xchg
rclb
add
scas
mov
sub
pop
xlat
icebp
call
sbb
loope
dec
xor
negl
cmc
icebp
dec
stos
cmp
xor
or
jge
mov
nop
sub
pop
cltd
add
pop
arpl
lret
ret
xchg
and
or
ret
and
stos
rclb
xchg
and
imul
xchg
inc
call
push
cli
pushl
add
out
in
mov
jmp
je
out
ljmp
sub
or
or
and
arpl
xlat
mov
mov
and
leave
xchg
mov
jbe
inc
shlb
in
clc
leave
or
xchg
fwait
xchg
mov
cmp
cmp
jno
shll
iret
and
scas
repz
xlat
fsubr
outsb
xlat
clc
mov
pop
and
int
cmp
sbb
xchg
in
movsb
int3
addb
sub
pushf
addl
ds
and
or
sub
out
je
in
push
sub
mov
push
and
inc
ljmp
xchg
addr16
enter
testl
loopne
leave
dec
mov
xchg
std
mov
inc
ret
popa
pop
pop
add
sbb
push
xchg
fs
jmp
mov
lock
aam
sbb
adc
lcall
xchg
mov
dec
movsl
mov
das
frstor
xchg
sti
mov
fiaddl
fwait
or
imul
add
xor
out
test
outsb
outsb
mov
jb
xchg
ret
push
scas
sbb
movsl
xor
out
push
pushf
push
push
mov
dec
repz
xchg
adcl
inc
inc
push
outsl
mov
pop
pushf
mov
ja
dec
scas
mov
dec
fstpt
sti
jg
loope
mov
xchg
pop
out
bound
cmpsl
xchg
pop
sbb
in
sub
cwtl
add
test
xor
das
inc
scas
cmp
lret
shll
cld
sbb
push
lret
jp
cmpsb
pop
xlat
arpl
stos
sbb
sarb
stos
and
mov
or
mov
xchg
adc
iret
xchg
xchg
fwait
sahf
cmc
pusha
sub
add
or
xor
ja
jg
and
and
jne
push
hlt
insb
in
test
imul
jmp
cmp
xchg
mov
enter
call
dec
out
ja
cmp
jnp
addr16
test
pop
stos
pushl
mov
flds
outsb
mov
aam
aaa
adcb
push
mov
js
call
jnp
mov
push
sti
gs
xor
lods
adcl
mov
xchg
out
sub
mov
dec
cmp
sbb
jg
jg
jns
mov
call
ret
fwait
test
bound
jae
xor
push
ljmp
lret
push
xchg
xchg
inc
inc
lds
sti
fs
mov
in
sbb
in
stos
leave
jle
repnz
add
fnstcw
mov
aaa
or
fwait
out
outsl
fsub
ja
cmp
movsb
cmpsb
inc
push
xor
push
aas
or
mov
mov
outsb
setno
dec
jp
out
fsubl
aaa
dec
pop
add
xor
callw
data16
cmp
leave
and
cmp
inc
call
mov
sbb
sbb
leave
loop
movsl
out
jecxz
add
xchg
jmp
popa
mov
rcl
jecxz
fnsave
mov
mov
fsubs
pop
and
jno
mov
test
or
fldl
xchg
or
fcmovne
jns
pop
fistl
dec
xchg
sub
ret
pop
inc
outsl
lcall
icebp
ds
cmp
pop
imul
fists
xor
push
ret
jno
out
pop
jl
jo
jp
mov
add
jp
jmp
mov
sti
mov
dec
jl
test
xor
mov
popa
pop
or
sbb
mov
adc
pop
pop
sub
push
lret
adc
adc
adc
pop
jmp
outsl
sub
test
jp
in
lods
hlt
call
xor
push
sub
pop
mov
push
in
repnz
fmul
fistps
mov
adc
lahf
add
mov
mulb
dec
jnp
add
inc
fistps
in
mov
cmp
fisubrs
mov
pop
stos
fistpll
lahf
and
jp
jl
adc
shl
dec
sbb
int
sbb
add
jne
inc
js
xchg
movsb
std
rorl
mov
sub
arpl
mov
ja
jp
dec
sub
push
test
mov
adc
in
xor
negb
punpckhbw
repz
nop
ja
cmc
dec
mov
sub
xor
lock
dec
xlat
sub
push
subb
pop
adc
inc
push
stos
inc
addl
out
xor
loope
fisttpl
fldt
mov
outsl
add
fisubs
and
mov
js
test
cmpsl
mov
jl
fists
adc
cmp
imul
adc
rol
mov
shll
call
je
push
mov
inc
daa
push
dec
add
xlat
mov
lock
push
push
jmp
adc
pop
jne
or
mov
sbb
and
mov
pop
inc
clc
or
out
pop
test
hlt
xor
fwait
or
nop
add
cmp
add
sub
stos
and
popa
cs
inc
jns
lds
sub
or
bound
inc
jae
xlat
aam
xor
adc
pop
and
mov
data16
into
push
inc
fstpt
and
inc
and
mov
xchg
cmpsl
es
std
lods
jecxz
push
inc
mov
xor
mov
int
xchg
in
popf
cmp
cmpsb
fwait
push
add
les
mov
xor
jmp
movsl
call
jae
push
sub
push
lcall
sub
jno
push
push
lea
scas
push
xor
in
fs
push
ret
mov
mov
cltd
sbb
mov
cwtl
sub
icebp
popf
xchg
sti
mov
hlt
cmp
rcl
movsb
imul
push
inc
pusha
inc
fwait
dec
jl
and
dec
mov
mov
je
call
iret
nop
jp
es
iret
jmp
inc
cmpl
mov
ret
out
jecxz
mov
jne
lods
lea
sbb
fists
rcrb
xor
mov
pop
and
icebp
or
inc
add
jp
lea
push
insl
cmp
sahf
into
xchg
testl
xor
inc
xchg
lods
incl
mov
jecxz
enter
fistpl
cli
mov
pop
pop
dec
mov
mov
xorl
mov
dec
adc
dec
push
shlb
insb
loope
lret
out
push
dec
push
jno
sub
cmpsb
pushf
daa
add
rorb
out
dec
je
stc
push
push
mov
xchg
pop
in
out
cltd
shl
sahf
mov
mov
lods
imul
pop
divb
pop
lahf
bound
out
cmpsl
mov
inc
xchg
push
mov
and
jns
lea
cmpsl
jle
insb
jb
es
clc
xchg
push
jmp
lds
aam
test
xor
ljmp
rcl
mov
out
xor
ljmp
pop
fadds
dec
add
sti
outsl
mov
faddp
mov
push
dec
fidivrs
loop
cmpsb
push
jne
jnp
cmp
inc
rcrb
bound
bound
iret
push
lcall
push
rcrb
cmpsl
pop
push
mov
adc
cmp
dec
and
adc
adcw
pop
or
and
cmp
repz
bndldx
xor
in
xchg
imul
adc
and
jp
inc
mov
inc
mov
jp
sbb
push
insl
das
les
xchg
mov
test
push
inc
fdivs
adc
push
arpl
js
sbb
out
movsb
or
jmp
push
int
cmp
pusha
mov
push
loop
outsb
dec
cmp
mov
mov
into
ret
leave
sbb
rcr
fistpl
push
cmc
retw
ret
xchg
int3
daa
and
fmulp
cmp
arpl
dec
dec
aas
or
mov
lahf
dec
dec
cmp
test
pop
mov
mov
inc
cwtl
cmovl
jne
inc
or
sbb
leave
push
jg
fmulp
xchg
xchg
rclb
inc
lahf
mov
dec
rcl
add
icebp
jg
jle
js
adc
cmpsl
adc
adc
dec
sub
pop
dec
adc
sarl
popa
mov
lock
test
icebp
insl
mov
jns
sbb
ret
xor
push
leave
lret
mov
mov
cmpb
inc
clc
or
movsl
fmull
or
lcall
adc
das
rcll
divb
push
inc
mov
sbb
or
dec
nop
mov
adcl
pop
sbb
fucomp
push
lock
pop
inc
aad
imul
imulb
js
cmp
dec
and
jbe
inc
adc
mov
push
add
arpl
lods
testb
pop
loopne
add
mov
push
sbb
out
cmp
notl
mov
inc
jns
mov
adc
mov
add
das
inc
dec
sbb
push
inc
mov
pop
push
xchg
and
lret
jle
iret
nop
leave
in
lcall
xorl
xchg
mov
ljmp
movsl
mov
ret
xchg
mov
adc
adc
inc
std
push
sub
inc
jmp
nop
push
dec
sahf
jecxz
jns
int
xor
mov
lods
and
add
out
dec
lock
jae
sti
add
lea
adc
cli
je
or
ljmp
enter
or
daa
or
iret
sub
cld
jne
pushf
jg
hlt
ret
inc
pop
jecxz
ficoml
shlb
push
arpl
jnp
js
aaa
xchg
cmp
sub
xor
imul
mov
fwait
sbb
insb
mov
lahf
pop
mov
movsl
pop
daa
mov
rcl
push
aad
rol
nop
inc
push
cmp
mov
cmp
subl
dec
in
cmp
mov
fdiv
cmp
pop
push
aaa
add
mov
cld
pop
pop
icebp
or
mov
cmp
and
out
inc
and
pop
pop
pop
andb
inc
inc
test
adc
cmp
push
inc
out
xor
cwtl
int
and
dec
adc
fildl
jmp
push
repnz
testb
mov
mov
repz
push
rolb
mov
cmp
mov
aas
bswap
push
cmpsb
jp
push
sbb
mov
lahf
into
xor
add
aaa
add
add
test
xor
mov
mov
fnsave
es
das
ret
xlat
sahf
cmp
pop
cmp
stos
bound
cmp
adc
daa
insb
sub
mov
in
test
xchg
push
xchg
push
cmp
jl
inc
fwait
and
loopne
cmp
add
and
cmp
fs
lret
jecxz
arpl
outsl
test
std
push
inc
inc
xor
test
push
push
sbb
loop
outsl
pop
add
inc
pushf
dec
pop
mov
adc
xor
dec
sbb
test
push
je
cmp
outsl
inc
fldcw
lock
in
mov
fs
sbb
push
aas
lock
sub
lahf
mov
sti
fucomip
mov
addr16
fmull
movsb
scas
or
scas
lcall
test
adc
dec
imul
mov
jg
mov
adc
lods
xchg
push
mov
inc
jmp
and
jecxz
pusha
repz
mov
add
cltd
hlt
loopne
inc
or
push
shrb
andb
sahf
in
cmp
dec
sbb
inc
or
or
rorl
cmp
push
test
jnp
add
pop
pop
lods
xchg
sarb
fisttps
int3
or
push
push
sub
jg
xor
test
inc
cwtl
xor
mov
lcall
out
push
add
shl
rcr
inc
sbb
lea
out
sbb
push
data16
mov
cmp
jbe
mov
aas
rolb
push
mov
pop
pop
fistpll
jbe
mov
ja
mov
sbb
add
xchg
and
cmpsl
mov
sub
inc
out
sub
pop
jl
mov
adc
test
std
jo
lret
rcll
pusha
pop
xor
add
push
xorl
loop
cmp
inc
sub
aam
pop
leave
adc
imul
fcmovnbe
and
add
pop
jns
sbb
xchg
xchg
jno
and
imulb
ss
pushf
mov
loope
fmull
scas
js
dec
mov
adc
pushf
in
lods
dec
inc
pop
aaa
out
fcmovnbe
int
xchg
adc
loopne
xchg
inc
cmpsb
sbb
test
into
sbb
cmp
pop
mov
mov
loope
bound
fwait
jp
pop
xor
push
sbb
push
scas
cmp
rcrl
cmp
hlt
fldt
adc
movsl
cmpsb
sarl
sbb
mov
outsl
cli
ss
pop
scas
push
movsl
imul
test
and
push
dec
scas
xor
pop
shrl
mov
or
stc
xor
out
or
push
gs
push
fimull
jl
inc
sahf
in
cmp
pop
rcrb
repnz
sbb
pop
mov
pop
arpl
xor
faddl
xchg
aaa
call
insl
sub
call
sbb
shll
xchg
jnp
cmp
jle
xchg
push
jbe
or
enter
lret
loopne
stos
repz
je
sbb
insl
jbe
pop
sub
mov
adc
mov
lahf
xchg
push
test
add
ret
das
lret
rcr
imul
pop
fiaddl
pop
sahf
jae
call
inc
push
dec
imul
push
push
inc
lret
push
fidivrl
loop
fwait
pop
xchg
mov
test
jecxz
dec
push
and
push
ja
repz
cmp
bound
popf
sbb
dec
inc
mov
push
imul
pop
stos
push
scas
or
push
cmp
mov
jb
test
jmp
and
push
stc
repz
jno
add
sbb
mov
add
cmp
add
push
mov
xchg
ds
js
idivl
fwait
cmp
subb
stos
jg
fisttpll
aad
mov
add
pushf
int3
sbb
dec
jbe
ds
fcmovnb
fcompl
sub
pop
popa
pop
lods
aam
popa
pop
xchg
arpl
xchg
push
sbb
aad
movsb
repz
scas
es
fcmovnb
sub
and
in
and
inc
pop
inc
cmp
notl
dec
or
out
lcall
adc
and
les
xchg
sbb
scas
aad
subb
push
les
cltd
xchg
or
and
iret
aam
aaa
cltd
ret
jp
test
aam
aaa
lret
pop
jbe
push
mov
or
cmpb
xchg
jo
inc
jnp
add
xchg
pop
iret
outsb
shlb
into
loop
popf
stos
out
mov
pop
xchg
xorl
pushf
fisttpll
fnsave
lcall
push
sbb
movsl
into
push
pop
xchg
mov
call
sbb
push
repz
mov
in
sbb
push
add
xchg
mov
sti
add
aad
push
sub
rol
addl
shl
xchg
out
jbe
sahf
or
sahf
jae
orb
add
xor
movsb
push
xor
fdivrs
inc
jo
clc
push
das
inc
cli
insl
les
add
sbb
fidivs
js
or
pop
pop
lods
ds
jne
pop
add
jg
scas
and
push
or
adc
add
push
sub
mov
inc
adc
lcall
test
adc
pop
push
lea
loopne
lea
push
in
lock
aam
and
mov
inc
xchg
pop
xchg
sti
jecxz
mov
mulb
jecxz
aam
pop
cmpsb
aas
sub
or
sti
adc
mov
das
inc
in
push
pop
insl
push
aaa
js
add
fcoml
mov
xchg
adc
lret
mov
mov
sar
mov
push
push
adc
in
dec
inc
in
or
or
sbb
mov
mov
jge
xchg
lods
fmul
dec
mov
aas
and
int
faddp
xor
jecxz
adc
or
out
lods
mov
les
xchg
ljmp
loop
xlat
push
push
pusha
iret
leave
sbb
jb
lods
mov
arpl
adc
clc
ds
mov
pcmpeqw
std
faddl
int3
add
sub
xor
xor
loopne
aad
mov
sbb
jae
jnp
ljmp
out
loopne
xor
in
inc
fsubp
in
ljmp
mov
sub
mov
mov
xchg
popf
jp
andl
xchg
ret
cmpsb
sahf
and
cmc
fisttps
cs
repnz
mov
lea
and
mov
adcb
mov
mov
mov
cs
pop
xchg
xor
and
xor
sub
sub
sahf
add
jb
scas
push
aad
in
sahf
stos
xchg
shl
sub
mov
mov
in
iret
repnz
pop
outsb
std
fisttpl
mov
add
xchg
das
dec
lahf
loope
roll
nop
ss
cmc
lods
aaa
or
gs
cli
int3
daa
sub
in
pop
and
in
dec
aam
mov
or
loop
pop
jno
lret
add
int3
mov
daa
ja
dec
sti
pushf
inc
mov
mov
push
or
pop
mov
fisttps
adc
js
jecxz
inc
inc
sbb
pusha
js
dec
subl
jne
xor
mov
dec
cmpsb
lock
inc
add
add
loop
insl
fists
mov
test
or
test
aaa
inc
xor
dec
leave
aas
ljmp
dec
clc
hlt
add
pop
sti
fstpl
dec
lahf
jg
test
lds
jno
popa
imul
filds
sti
gs
divb
iret
pop
dec
sub
dec
sbb
mov
iret
xchg
fs
mov
dec
or
mov
mov
dec
adc
aad
rcr
dec
add
mov
xor
or
lea
pop
sbb
push
sbbb
xchg
cwtl
jecxz
push
mov
mov
insb
das
add
push
lcall
hlt
mov
jne
xchg
fidivrs
rorb
pop
jge
popa
jle
and
rcll
mov
outsb
repnz
dec
rclb
test
push
scas
popa
jae
les
and
inc
xor
rorl
out
pop
sbb
push
jl
push
or
or
subl
or
and
in
push
fwait
dec
test
mov
jle
or
pushf
jno
cs
jnp
push
out
jnp
icebp
cwtl
add
pop
lea
in
mov
outsl
subb
enter
xlat
dec
out
sahf
jb
adc
stos
in
andb
xor
fildl
bound
pop
lret
sbb
mov
inc
mov
add
cmp
lock
push
divl
mov
int3
xlat
pop
lods
adc
andb
shrb
fldenv
rclb
push
fs
popa
xchg
into
mov
sub
add
scas
mov
inc
mov
leave
cli
outsl
stc
inc
jecxz
scas
and
notl
cmp
xor
sbb
loope,pn
test
bound
add
scas
out
imul
sub
imul
adc
jl,pt
xorl
jl
hlt
adc
cs
jne
inc
pop
out
insl
mov
mov
mov
popa
pop
aam
leave
rorl
cltd
sbb
mov
add
hlt
inc
push
test
int
je
cmp
push
pusha
test
fcmove
sub
les
and
xor
fistl
push
test
and
std
sub
cmc
loop
out
jb
movsl
or
pusha
cmp
movsl
shrb
ds
addr16
lret
nop
jle
inc
xor
xchg
sub
mov
test
call
lret
test
aam
fmulp
xchg
or
mov
jmp
jns
jmp
add
cli
es
jbe
das
or
and
cs
insb
fstpl
push
cmp
push
repz
jns
mov
adc
aam
push
shrl
sbb
sahf
jp
mov
jecxz
sbbb
push
popa
pop
dec
dec
sub
xchg
and
xor
out
inc
imul
clc
push
popa
dec
sub
out
je
xorl
cmp
cmp
inc
mov
push
push
mov
pushf
out
add
lds
pop
lret
repz
push
iret
das
add
sbbb
aas
xchg
cmp
cmp
pop
loopne
mov
dec
push
in
mov
pop
lret
inc
dec
test
xchg
jp
push
lods
dec
pop
movsb
rorb
sub
pop
mov
js
cmp
lret
mov
pop
lret
xchg
leave
pop
mov
cmpsb
push
test
out
fsubrs
push
adc
mov
or
and
or
ss
push
sbbb
fs
fdivl
out
hlt
mov
mov
fldcw
in
arpl
orb
xchg
lock
and
jmp
adc
lods
cmp
jns
mov
push
int3
jo
imull
inc
xlat
inc
dec
cs
test
jg
and
lock
cmp
sbb
int
dec
push
inc
and
xchg
adc
dec
pop
stos
jecxz
aas
pop
mov
pusha
sbb
lcall
mov
loopne,pn
daa
mov
sub
add
je
mov
roll
in
movsl
push
cmp
dec
mov
fdivrs
cmp
and
sarb
or
push
sbb
pop
out
inc
xchg
and
in
pusha
testb
cmp
js
shl
ficoms
add
ficoml
adc
ja
lcall
and
and
repnz
fistpll
xor
cwtl
fstpl
push
inc
push
insb
rorl
push
push
jl
test
mov
fistps
popw
cmp
pop
adc
divl
pinsrw
lods
movsb
jo
ds
pop
jl
mov
and
xor
sub
fadds
xchg
adc
add
cmpl
xchg
into
fwait
mov
mov
cmpb
andl
test
mov
cmpsl
adc
movsl
sti
arpl
icebp
mov
mov
dec
rclb
mov
dec
das
xorl
sub
push
ds
hlt
faddl
jae
outsb
jb
ret
push
mov
movsb
xchg
xor
inc
int3
into
push
jbe
inc
fldt
dec
repnz
gs
or
pop
rcr
sahf
dec
das
pop
es
test
daa
adc
test
in
aam
test
int
and
and
jo
movsl
sub
stos
add
pop
jp
rorb
mov
and
hlt
das
movsl
dec
xor
sbb
or
cmpsl
leave
pop
sbb
loope
pop
scas
iret
pop
test
jb
popf
mov
jne
cmp
fwait
test
and
pop
fs
testl
sbb
movsl
xlat
fists
cld
adc
int3
test
add
inc
clc
jp
pop
or
push
mov
repnz
pop
dec
rcll
loope
aad
out
fnstcw
xchg
mov
cmp
sar
and
sub
cmp
and
fnstcw
jle
ss
je
hlt
push
inc
mov
sub
je
in
or
push
into
out
sub
fs
or
pop
xchg
xor
xlat
dec
rcl
sahf
fimuls
xchg
ja
pop
xchg
xchg
inc
xor
xlat
leave
jo
xchg
jg
mov
add
mov
jo
sbb
mov
ja
dec
xchg
jnp
movsb
aam
lahf
add
data16
fimull
adc
lahf
jno
iret
sbb
in
cmpb
es
fsubs
adc
lahf
jg
push
push
add
sarb
xchg
cmp
cld
rclb
mov
jmp
jae
test
jo
cmpsl
test
add
inc
scas
push
cmp
call
fnstenv
add
jecxz
mov
inc
jp
inc
lods
bound
adc
shl
pop
jmp
push
mov
icebp
inc
mov
inc
sbb
mov
outsl
pushf
xor
scas
iret
mov
out
mov
pop
pop
jg
mov
outsl
aas
mov
fcom
lods
scas
std
bound
push
jno
test
mov
dec
scas
dec
jo
call
shlb
enter
andb
insb
das
pop
lcall
xlat
pop
repnz
addr16
push
repz
or
add
imull
pop
rolb
and
in
ret
je
cmpsl
inc
das
or
loopne
jge
cltd
cli
fiaddl
mov
and
adc
lds
into
jo
movsb
adc
test
adc
das
cmp
nop
enter
aaa
xor
lahf
jnp
sbb
mov
pusha
movsb
icebp
adc
hlt
xchg
in
jl
jl
mov
inc
outsl
push
imul
or
cli
xor
xor
pop
inc
dec
mov
cli
cltd
out
sub
push
dec
js
ffreep
pop
jmp
or
jle
inc
insl
in
les
push
fldl
mov
ds
jo
pop
jae
divb
sarl
sbb
cmp
pop
cs
iret
aad
in
adc
pushf
cmp
sub
jle
lds
push
sbb
sbb
stc
xor
jno
aam
lahf
enter
inc
mov
popa
and
movsb
pusha
call
outsb
call
jmp
ret
cs
inc
aad
xchg
xchg
add
mov
jno
sub
push
insb
pop
je
daa
pop
and
std
dec
rol
cmp
lret
pop
outsl
pop
cmp
inc
sub
popa
shr
and
or
sbb
sbb
rorl
or
adc
jmp
cmc
jno
mov
or
push
pushf
nop
or
or
arpl
add
stos
add
mov
fidivs
orl
jb
jle
aas
add
lea
push
push
add
adcl
cmpsl
add
mov
dec
jmp
push
adc
leave
test
idivl
rcrb
mov
jns
jle
push
lods
push
out
jns
sbb
or
test
data16
add
sti
outsb
adcl
cmc
iret
lea
xor
aaa
mov
lret
flds
adc
inc
fists
shrl
sbb
out
bound
xor
out
jae
dec
push
out
jns
and
cld
pop
sbb
and
mov
mov
jbe
jp
xor
js
stos
loope
mov
cmc
xor
sub
out
xchg
mov
jecxz
sbb
loope
shll
pop
icebp
je
adc
jg
adc
push
sbb
enter
sub
dec
or
cltd
push
es
insl
rcrb
test
sbb
push
aaa
ss
orb
repz
add
imul
pop
jmp
push
imul
mov
outsb
and
pop
sub
ds
or
lcall
popl
dec
fsts
adc
sbb
add
and
cmp
sbb
movb
in
jmp
xchg
sbb
bound
jge
xor
int3
ret
lcall
push
leave
test
mov
loope
and
dec
xor
cs
cld
fistps
cmc
xchg
fisubl
push
outsl
push
xchg
leave
test
testb
xchg
jns
ja
stc
pop
sahf
call
cmpsb
xlat
xchg
sub
fwait
sub
mov
rcl
add
arpl
cld
lds
outsl
iret
sub
pushf
lcall
push
mov
lds
enter
and
adc
push
jno
push
mov
jp
repnz
inc
out
xchg
aam
pop
sub
sbb
test
es
add
or
dec
mov
lock
pop
inc
fldenv
inc
inc
pusha
inc
inc
mov
mov
mov
imul
fsubrs
nop
inc
push
fcmovnu
mov
jmp
lods
add
scas
les
movb
mov
xlat
inc
fcoml
sub
cmp
jnp
push
mov
add
adc
xlat
testb
call
sahf
lret
mov
adc
call
push
xlat
pop
outsb
hlt
sub
cmc
dec
andl
pmullw
cmpsb
push
sub
push
lods
imul
dec
mov
xor
ret
jmp
lock
mov
jbe
sub
mov
dec
out
xor
adc
or
sub
cmp
shl
pusha
lea
es
inc
xor
rcll
mov
sbb
mov
xchg
jle
cmp
faddl
enter
int
aas
cmp
mov
inc
pop
lods
aad
je
arpl
add
test
fidivl
icebp
and
xor
xor
frstor
inc
dec
push
xor
push
sbb
cld
cld
lods
add
outsl
sbb
and
sbb
std
adc
push
repnz
adc
imul
adc
sbb
inc
mov
in
jb
aaa
adc
xchg
dec
pop
xor
sub
push
movsl
pop
addl
jo
inc
cmp
and
fstl
fs
push
lods
pusha
sbb
add
ficoml
or
add
mov
data16
xchg
cmp
xchg
lahf
cmp
daa
push
hlt
inc
push
jle
mov
xchg
orb
jne
inc
daa
xor
cmp
cld
push
sub
pop
add
xchg
enter
out
imul
mov
lods
mov
mov
adc
and
mov
cwtl
push
lea
out
imul
mov
fsubrl
cli
sub
inc
pop
or
cmp
push
xor
xchg
jne
repz
stc
movsl
int
inc
outsb
je
enter
and
repz
sub
in
lahf
push
mov
and
jmp
into
sbb
or
dec
xchg
std
into
cmp
loopne
and
adc
imul
imul
or
push
clc
orl
std
jb
int3
fildll
sbbl
rclb
cmc
shll
js
ret
loope
sub
ret
adc
dec
jmp
shrl
jp
or
fwait
shlb
mov
ss
lds
sub
loope
test
xchg
aam
dec
mov
inc
mov
test
mov
adc
sbb
jl
hlt
out
out
pop
dec
ljmp
adc
mov
cmp
or
nop
arpl
lods
inc
sbb
imul
mov
or
gs
jg
pop
hlt
scas
jne
ret
pop
js
adcb
popl
mov
mov
xchg
push
in
int
pop
jp
push
fnsave
popf
push
loopne
fcmovu
notl
push
jb
loopne
push
push
sbbb
arpl
repz
or
stos
ret
cmp
dec
sub
push
and
or
push
nop
push
pop
xor
jns
test
clc
and
add
xor
inc
and
sbb
jg
cld
add
rcr
roll
outsl
cmp
jge
jb
cmp
mov
cmp
mov
pop
sub
xor
xor
pusha
cmp
nop
out
das
loopne
xchg
mulb
or
jmp
lret
mov
int
je
mov
mov
ret
lea
out
cmp
stos
ljmp
pushf
testb
iret
push
lahf
bound
xchg
cmp
loopne
es
push
dec
cmp
push
inc
lret
sub
and
fisubs
xchg
push
fisubs
jnp
xchg
lock
push
inc
and
sbb
mov
cmpsl
lds
rol
push
mov
mov
addr16
mov
xchg
loopne
push
pop
pop
pop
pop
rclb
pop
idivl
lods
push
lcall
cmp
scas
or
inc
jnp
jge
push
pop
fists
sbb
inc
sub
mov
in
cwtl
dec
sti
in
mov
inc
xor
rclb
cmp
xchg
ret
pcmpgtb
pop
fisttpll
jbe
repnz
xor
or
jno
loopne
popf
rolb
jmp
mov
mov
lods
nop
dec
fcoml
stos
mov
or
leave
scas
cmc
xchg
cmp
lock
inc
or
loopne
mov
xchg
pop
add
pushf
nop
xchg
push
or
lods
jb
xlat
or
push
jg
pop
in
ret
mov
clc
mov
add
mov
jl
add
cli
cmp
push
enter
xchg
scas
jne
push
ja
insl
pop
orb
dec
imul
and
push
pop
hlt
in
mov
push
daa
cmp
or
lods
cmp
and
xchg
std
cmp
pop
negb
mov
sbb
xor
pop
fwait
mov
sbb
cmp
pop
cmc
fadd
xor
inc
cmp
lods
push
sahf
xor
or
ret
out
sbb
loopne
inc
mov
out
jbe
dec
push
loop
inc
cld
pushf
pushf
sti
mov
mov
xor
leave
and
enter
fidivrl
sti
xchg
push
jno
rolb
jo
in
jge
ljmp
cmp
fistpll
int
loopne
mov
stos
mov
jecxz
cmpsl
rclb
adc
aaa
cmc
inc
or
push
lret
sbb
sbb
mov
ss
push
push
inc
add
outsb
notb
test
pop
xchg
arpl
jno
jns
shrl
lret
adc
arpl
fsubrs
push
dec
lods
inc
or
movsb
push
sub
cld
dec
jl
test
add
lds
int
mov
xchg
jno
ret
mulb
sub
dec
scas
hlt
xchg
sub
lods
dec
cmpl
test
jle
mov
pop
fnstsw
ds
jg
ljmp
push
jbe
pop
pop
jne
xor
cwtl
xchg
in
in
mov
lods
sub
cmp
add
shlb
testb
dec
xchg
adc
into
xchg
xor
call
cwtl
jno
dec
pusha
mov
insb
mov
xchg
xchg
dec
pop
cmpsb
jb
test
scas
fs
rcll
mov
inc
dec
jmp
push
jno
jle
outsb
ljmp
adcl
imull
imul
aas
ret
jecxz
and
jmp
pop
xchg
cmc
js
mov
add
addr16
mov
loopne
leave
mull
fmul
pop
bnd
loope
lds
sbb
rolb
test
shll
setbe
and
cmp
xchg
lods
enter
dec
fdivrs
mov
mov
adc
inc
xlat
std
adc
sbbb
xchg
leave
sti
fwait
and
popa
sysexit
mov
xchg
mov
icebp
cld
lock
or
outsl
mov
dec
dec
push
adc
scas
cmp
bound
int3
jmp
sbb
mov
fwait
push
pop
popa
sbb
and
ret
sub
mov
adc
xchg
dec
sub
movlhps
add
ficomps
xchg
lods
dec
rcr
fstps
mov
fdivrp
or
and
repz
mov
cmc
jmp
pop
jge
into
scas
enter
mov
addl
mov
movsb
pop
ret
ffree
pop
sbb
scas
mov
xlat
lret
fstpl
and
xor
sub
outsl
fldcw
hlt
int
lock
mov
arpl
mov
pop
xlat
insl
adc
jmp
pop
rcll
iret
push
pusha
arpl
adc
jb
pop
jae
add
inc
xchg
push
test
in
fmull
divb
out
or
adc
add
add
nop
stc
ds
mov
dec
adc
jl
loopne
push
arpl
push
mov
fstps
cmp
and
das
xor
cmp
ljmp
pop
mov
pop
jge
and
adc
lock
mov
jb
fcomi
jo
mov
aad
sarb
sbb
xlat
je
lea
orb
daa
cld
xchg
leave
mov
push
cmp
nop
sti
lods
jno
in
and
push
cmp
stos
xchg
orl
pop
inc
addb
shl
test
jb
lcall
xlat
mov
popa
bound
dec
cmpsb
mov
adc
mov
mov
out
mov
stc
cmp
aas
pop
dec
in
ret
leave
pop
ss
fmull
mov
jg
into
adc
push
jmp
dec
outsb
in
mov
fiadds
mov
cld
stc
sub
mov
mov
push
repnz
jne
cmp
jge
or
inc
rcrl
nop
mov
icebp
lea
jo
mov
sub
push
jl
and
out
mov
lret
cwtl
xor
mov
and
je
add
enter
and
mov
mov
push
add
sbb
sbb
mov
cmp
xchg
push
xor
rcr
ds
mov
mov
add
cmpsl
inc
jbe
mov
rorl
add
rclb
enter
dec
push
or
push
fisubl
adc
sbb
mov
push
push
scas
lods
clc
push
fwait
aaa
mov
ja
jno
jne
mov
jne
adc
pop
pop
jl
jnp
ss
je
and
ljmp
mov
aaa
mov
ss
mov
sub
and
mov
fcomi
pushf
xor
scas
mov
enter
pushf
lahf
adc
mov
inc
stc
sub
testb
ret
shrl
addb
imul
js
je
fldt
add
mov
pop
aam
mov
sbb
repz
add
mov
aaa
pop
mov
imul
repz
push
pushf
and
test
rorl
mov
dec
lret
testl
mov
push
lods
or
sbb
jne
fcoml
or
subb
mov
sbb
xor
mov
aad
cs
jle
xchg
dec
mov
mov
imul
stos
jl
inc
test
out
es
mov
das
jbe
and
inc
jo
inc
scas
pop
dec
sub
mov
jg
imul
and
cmpl
pop
sbb
out
xlat
out
pushf
xchg
test
leave
jge
xchg
jge
dec
stos
mov
test
adc
cmp
xchg
lahf
ss
push
pop
and
call
sub
and
loop
push
sarw
aam
std
xchg
xchg
ds
jge
jno
data16
dec
mov
pop
std
out
push
cmc
mov
ljmp
add
xor
iret
test
sbb
push
or
shrl
popa
lret
insl
ljmp
xlat
mov
fincstp
fstps
jns
inc
and
test
ficompl
add
jno
xor
scas
adc
notb
cmpsl
lods
cmp
adc
inc
clc
xor
fsubrs
mov
pop
dec
iret
jns
aas
xchg
outsl
std
push
shlb
mov
or
data16
ja
ficoms
xchg
iret
inc
jle
sarl
sub
adc
push
sub
xchg
pop
dec
cmc
jb
or
jb
add
push
mov
jge
stos
rclb
addb
andb
mov
mov
xor
push
cmpsl
mov
and
xchg
jg
shlb
pusha
xor
jnp
mov
out
fucom
cld
clc
int
fcomi
les
loop
ds
sarb
dec
add
out
or
jmp
sbbb
outsb
imul
fsubrl
jmp
mov
mov
mov
sbb
pop
loopne
int3
rcr
inc
fcompl
add
rcrl
in
pop
sub
fucomip
out
std
inc
mov
adc
or
popf
leave
adc
loopne
mov
push
mov
adc
add
mov
popf
inc
add
scas
or
outsb
testl
insl
adc
dec
stc
sarl
repz
ror
push
mov
cmp
aaa
xor
int3
loope
aas
sti
fstl
mov
aam
gs
loope
mov
mov
inc
or
in
sub
iret
push
add
bound
or
cmp
sub
bound
mov
outsb
aaa
in
popa
or
mov
movsl
mov
sub
fiadds
dec
test
sahf
sbb
and
cli
scas
in
scas
repz
ljmp
mov
jne
call
adc
aas
mov
stos
add
fadd
or
scas
xchg
push
cs
hlt
and
popa
cmp
xor
int3
sbb
mov
into
push
mov
ret
dec
lret
jnp
popf
mov
pushf
mov
sub
xchg
mov
out
mov
push
push
aaa
jo
mov
cmp
mov
addr16
push
adc
in
sar
cs
int3
das
xchg
adc
iret
call
cmp
or
daa
inc
cmp
fwait
jge
popa
cli
inc
mov
fsub
outsb
sbbl
fmull
lock
ja
add
fwait
dec
mov
jecxz
pop
movsb
jnp
mov
mov
mov
xchg
cli
jnp
int3
and
adc
cltd
adc
lcall
cmp
out
rol
movlps
sbb
mov
pusha
enter
aaa
jmp
jmp
out
bound
jo
outsl
jns
loope
pushf
aad
test
out
adc
iret
xor
push
insb
subl
mov
stos
es
jno
mov
fldcw
aas
insl
push
xchg
mov
out
lcall
push
dec
pop
or
icebp
and
push
or
jae
add
mov
int3
adc
jbe
push
insl
mov
nop
imul
mov
scas
cmpsb
nop
lods
insb
inc
cmpsb
push
jo
insb
xor
mov
pop
fstp
xor
xor
xchg
and
xchg
into
mov
cmp
popa
pop
into
mov
data16
sarb
dec
push
adc
mov
jb
adc
mov
les
mov
cmpsl
nop
subb
cmc
imul
ja
scas
test
pop
cltd
sub
std
cmp
cmp
jl
xchg
add
test
sub
push
jae
cltd
ret
and
push
faddl
cli
and
test
jns
push
ljmp
loopne
mov
ljmp
lods
xchg
lods
cltd
scas
inc
stos
outsb
inc
mov
inc
and
xlat
clc
inc
sti
mov
mov
sub
rcrb
ja
fisubl
jmp
jne
incb
jbe
push
push
cmp
xor
lods
fdiv
add
jne
jle
rcrl
out
jmp
loopne
cmp
xchg
sbb
sub
jb
daa
jge
cld
mov
mov
dec
iret
mov
shlb
pusha
sbb
aas
loope
movsl
in
shlb
jne
leave
pop
loope
lahf
bound
int
jno
pop
jle
imul
arpl
and
xchg
mov
enter
imull
int
adc
leave
jne
scas
scas
push
incb
fistl
cmp
adc
test
scas
pop
jnp
or
rolb
cmp
iret
cmp
ss
daa
adc
push
cmpsl
lock
pop
mov
enter
int
sub
fcmovbe
cmc
mov
or
cmp
scas
mov
jbe
outsb
mov
adc
sbb
push
or
test
lea
lret
cmpsl
cmpsb
inc
or
inc
mov
mov
insl
push
lahf
daa
popa
cltd
in
pop
push
xchg
movsb
rol
xor
cmp
rolb
out
daa
scas
push
xor
add
out
bnd
cmpsl
sbb
fstpt
mov
adc
out
lods
loope
push
sbb
jae
xchg
push
inc
cld
cli
xchg
insl
loope
std
in
xchg
out
and
pop
cmp
nop
stos
sbb
push
std
push
data16
scas
imul
into
xchg
fidivrl
pop
inc
pop
imul
iret
xlat
mov
push
cwtl
fwait
cmp
sub
adc
jle
sahf
jbe
mov
out
iret
or
std
sub
punpckhdq
lahf
lret
lahf
test
add
push
xchg
in
xchg
stc
dec
and
aas
pop
cld
or
shrl
repnz
sbb
jle
xchg
pop
lret
addb
testb
mov
loopne
lods
sub
xchg
stos
lea
add
repz
cmpsl
pusha
loop
pop
shlb
cld
jg
nop
das
fbld
gs
mov
mov
sub
xchg
xor
inc
scas
movsl
jno
cs
sbb
and
ja
jns
test
dec
cmp
push
sbbb
inc
dec
or
icebp
pop
sub
mov
cmc
gs
lea
xchg
jbe
aas
xchg
mov
add
fwait
jmp
mov
pusha
mov
jge
ss
push
clc
and
mov
ja
mov
pushf
cld
xchg
sbb
fidivl
jae
jge
lahf
clc
iret
push
fsubl
fs
xchg
jge
inc
xorl
dec
iret
mov
pop
inc
mov
imul
addr16
jno
mov
xchg
mov
in
fcompl
call
shrl
ds
in
mov
mov
xchg
cmp
and
xor
mull
pop
into
or
mov
hlt
jge
das
popf
sbb
push
pop
je
jecxz
sub
outsl
xor
das
mov
fxch
addr16
mov
add
push
jb
xchg
ljmp
push
pushf
sbb
mov
pop
test
in
jns
negb
mov
insl
leave
mov
dec
cmp
aam
pop
and
mov
out
jecxz
adc
loope
cltd
jl
xchg
loopne
lds
hlt
push
add
mov
fldl
mov
shl
test
pusha
sbbb
xor
imul
fwait
mov
daa
adc
into
push
insb
mov
jb
push
cmp
pushf
adc
pushf
sbb
pop
and
dec
pop
pop
mov
mov
loop
rcll
ss
jp
xchg
push
add
jne
mov
adc
shll
data16
js
pop
cmp
sbb
or
ficomps
andb
negb
nop
loop
les
fcmovbe
mov
js
or
lret
inc
test
rcrl
data16
xor
push
jno
inc
out
xchg
sub
sub
nop
aam
imul
hlt
xor
pop
shrl
nop
xchg
movsb
cmovne
aaa
decb
out
dec
clc
popa
insb
insb
mov
in
cmp
add
dec
popf
xchg
add
xchg
mov
dec
xchg
sbb
add
sbb
mov
xchg
xchg
out
int3
aam
cmp
out
mov
sub
stos
aas
nop
dec
fdivl
imull
add
mov
pushf
je
sbb
add
sbb
int3
cmp
push
xor
add
mov
xchg
or
dec
sti
test
push
mov
adc
stos
sbb
addb
pop
cmp
xchg
andb
jo
cmc
jmp
mov
push
sub
mov
or
sbb
jno
pop
scas
sub
push
adc
add
mov
push
lret
insb
mov
and
add
or
lahf
jecxz
add
test
add
lcall
std
lcall
adc
pop
inc
xor
pop
arpl
jo
aam
cmp
call
loop
adcb
or
cmp
add
imul
mov
push
push
mov
inc
jmp
test
ja
fbstp
jae
pop
pop
adc
adc
add
push
cmp
movsl
push
aaa
xchg
cmp
test
adc
inc
jp
out
out
and
insb
or
xor
andl
ss
mov
loopne
xor
aad
cmp
sub
cmp
cmp
in
cmp
pop
bound
cli
insl
xchg
and
sbb
out
outsl
dec
pushf
jno
mov
shll
mov
jge
push
rcl
sahf
ja
xor
push
lahf
into
mov
imul
add
xor
jns
cli
add
ja
xchg
and
mov
in
aad
sbb
mov
inc
fst
sbb
or
xor
in
stos
add
rorl
inc
sub
mov
mov
nop
addl
xchg
int
fimull
cmp
adc
leave
aaa
pop
stos
stos
push
mov
loope
sbb
fmul
pop
or
mov
lahf
lock
dec
ja
rcrl
xor
fcmovnb
pop
sarb
in
dec
dec
mov
sub
das
sbb
xchg
dec
push
pop
je
pushf
loope
inc
lret
ret
nop
push
dec
fnstenv
nop
lods
xor
stos
loope
pop
ret
sbb
cmp
cltd
fistps
mov
stos
mov
xchg
pop
dec
mov
pop
pop
push
sub
iret
repz
lret
jle
popl
mov
addr16
int3
aas
push
sub
xchg
xchg
push
jp
push
dec
dec
ret
movlhps
ljmp
cld
mov
out
xchg
xor
test
es
stos
jmp
xor
xchg
mov
test
push
into
cmp
dec
cld
imul
lahf
xor
mov
addb
jl
rorl
mov
cmp
sti
dec
insl
push
dec
sti
jns
adcb
adc
cli
inc
lock
pusha
mov
imul
dec
and
lds
lds
loope
lahf
clc
data16
in
mov
rcrb
insl
cmpsl
and
xor
push
mov
jl
mov
mov
cmp
pusha
in
mov
adc
mov
sub
mov
jno
push
mov
push
push
sub
ds
pop
jge
mov
scas
pop
clc
pop
cmpsb
and
lods
push
sbb
rcrl
pop
mov
das
adc
test
pop
sub
ljmp
or
add
inc
adc
outsb
pop
or
sahf
mov
add
mov
std
and
xchg
mov
data16
add
push
outsl
fsubrs
daa
or
and
mov
adc
enter
add
mov
xchg
aad
addb
lea
push
test
lcall
stc
pop
or
adc
and
std
aaa
testb
push
mov
iret
mov
ror
in
iret
rcll
xor
adc
popa
scas
cmp
rol
and
sti
fidivl
insl
inc
and
shl
push
aam
imul
jo
int3
je
dec
test
xchg
pop
sbb
mov
incb
xor
sub
inc
int
cmp
in
adcl
mov
xchg
add
stos
stos
leave
or
or
pop
lds
cmp
jnp
fwait
xchg
daa
dec
xchg
mov
xchg
test
fwait
test
aaa
xchg
and
aad
imul
std
stos
sti
jge
jg
outsl
dec
mov
mov
out
jge
mov
or
repnz
inc
cmp
push
mov
or
mov
inc
xchg
inc
mov
scas
movd
call
std
int3
mov
push
arpl
cmp
clc
xchg
or
adc
das
push
mov
or
push
cmc
push
jge
aas
test
cmp
aad
xchg
pop
sahf
dec
xchg
ss
test
mov
cltd
xchg
dec
mov
loopne
jle
decb
loope
test
xor
and
fdivrs
pop
jne
fstl
ds
xchg
lcall
cmp
push
sub
jg
sbb
leave
or
xchg
and
jnp
jb
out
fs
mov
cmp
aas
adc
mov
dec
inc
fisttpl
adc
int3
pusha
lds
lret
dec
shrl
sub
dec
xchg
mov
popf
xor
jmp
nop
pop
subb
int
dec
lldt
add
xor
mov
movsl
push
xor
lods
inc
push
push
daa
ret
sub
mov
lock
sbb
pushf
scas
xchg
add
xchg
sub
lcall
push
dec
imul
xchg
shll
je
push
push
mov
repnz
addl
xor
adc
adc
push
fucomip
sbb
pop
hlt
outsb
int3
mov
repz
lods
test
mov
xorb
mov
aad
ss
mov
stos
testl
fcmovnb
daa
pop
pop
std
dec
jmp
enter
loope
push
scas
in
dec
fwait
push
cmp
test
xlat
clc
cltd
insw
and
je
sub
xchg
mov
or
pop
lret
push
loope
sahf
ss
aad
mov
orb
cmp
cmc
rcrl
lods
out
xchg
sub
jb
sub
scas
xchg
gs
call
or
test
push
mov
shll
fwait
cli
adc
es
pop
loop
cmp
shlb
movsl
pop
add
push
mov
fdivp
mov
cmp
cltd
dec
sub
mov
mov
jb
subb
fs
fidivl
jnp
pusha
cmpsl
mov
ret
loope
inc
iret
sbb
scas
jae
std
pop
xlat
jge
add
xchg
pop
inc
les
xlat
jl
test
lock
sbb
inc
nop
sub
sbbl
lret
jl
imul
push
and
cmp
pop
dec
pop
inc
xchg
data16
leave
enter
sbb
fnstenv
jb
arpl
sbb
jno
and
test
pop
js
jecxz
and
pop
icebp
cmp
scas
shll
movsb
lret
std
cmpsb
xchg
jno
pushf
dec
fimull
push
icebp
gs
outsl
pop
dec
sub
or
test
and
dec
xchg
cmp
filds
test
cmc
or
xor
pushw
leave
pop
inc
jecxz
xchg
or
sbb
add
fsubl
shlb
or
push
sbb
not
out
pop
inc
or
pop
push
shll
xorb
ret
mov
sub
mov
adc
dec
add
inc
sub
sub
icebp
cmp
popf
push
jbe
stc
jge
leave
jno
xchg
add
inc
ss
and
scas
and
fxch
and
leave
popa
filds
addr16
pop
mov
adc
lret
xor
cs
sbb
lods
and
adc
mov
stc
pop
push
cmpsb
mov
int3
rcrl
ret
cli
repnz
sbb
and
sub
into
pop
ret
fisttpl
movsb
cltd
and
or
adc
add
add
inc
cmp
lea
mov
in
mov
test
idiv
and
es
das
into
arpl
and
shll
iret
int3
xor
test
subl
mov
jno
mov
fistpl
test
leave
sub
into
mov
fs
cli
mov
dec
cmc
les
outsb
xor
fistpll
repnz
stc
pop
scas
sub
add
mov
pop
enter
push
in
lods
pop
push
aam
sti
xor
push
mov
inc
popa
std
pop
iret
inc
movsb
push
stos
mov
or
pop
push
cmp
ds
push
cld
ds
arpl
sbb
mov
scas
sbb
iret
xchg
sub
push
adc
test
jo
shrl
jl
testl
lret
daa
sbb
adc
sub
int
push
loopne
dec
cli
adc
ljmp
and
mov
mov
mov
in
loopne
pushf
ret
cld
mov
and
ljmp
adc
scas
adc
and
push
repnz
loope
xchg
push
hlt
testl
xchg
pop
inc
sub
ror
int
mov
dec
jno
jbe
adc
addr16
ds
ret
into
notb
jge
push
dec
sbb
cwtl
sti
das
jne
lock
ja
inc
dec
dec
cmpsb
shll
je
pop
pop
pusha
pop
or
push
aaa
scas
xor
sub
and
je
icebp
adc
mov
add
testb
mov
push
jg
jae
mov
pop
xor
insb
icebp
std
out
or
sub
push
popf
xor
icebp
jne
fdiv
out
and
ret
repz
pop
sarb
jnp
xor
push
jmp
xchg
lds
loope
loop
test
je
sbb
into
xchg
jmp
fmul
cmp
jge
dec
dec
or
loope
mov
int3
sub
sbb
cld
mov
mov
sub
mov
into
idivl
mov
test
ljmp
leave
adc
adc
fisttpl
push
imul
mov
aaa
in
jecxz
or
imul
aaa
fiadds
outsl
test
stc
dec
icebp
cmpsl
leave
inc
lea
mov
enter
ljmp
inc
ret
movsb
push
test
mov
arpl
ja
iret
adc
push
add
in
add
outsl
pop
push
lahf
lods
cwtl
mov
jne
mov
xchg
jmp
adc
insl
jle
xor
xchg
dec
rclb
repnz
out
add
cli
jmp
inc
lcall
pushf
addl
cli
in
mov
imul
mov
ljmp
pop
aaa
jb
scas
inc
lea
or
add
fiadds
pusha
adc
push
rorb
jno
push
cmp
jmp
sub
mov
fmuls
mov
inc
add
or
or
add
and
jo
mov
push
mov
aaa
inc
jne
lock
sub
xor
and
xchg
movsl
inc
iret
mov
jecxz
mov
dec
in
mov
out
adc
xor
fwait
pop
dec
imul
mov
sub
adc
jl
dec
pop
gs
xlat
mov
aaa
jmp
sub
inc
pop
ljmp
jecxz
mov
cmp
dec
sub
insl
mov
xchg
sub
frstor
sarl
rclb
sahf
rcrb
jne
gs
sbb
add
xchg
cwtl
in
adc
xor
sub
xor
mov
loope
ljmp
inc
stos
jno
push
in
mov
lds
xchg
jmp
addr16
push
into
xchg
sbb
add
adc
aam
mov
je
ret
and
xchg
and
pop
imull
clc
fsubl
xchg
scas
into
jae
insb
cltd
and
mov
xchg
xchg
jmp
push
daa
sub
das
stos
add
mov
fistpl
pop
sahf
into
jo
push
cmp
inc
xor
testl
push
or
push
push
and
inc
mov
aad
sub
push
xlat
stos
inc
inc
add
insb
scas
and
xor
addr16
mov
ss
and
xor
mov
cmpsl
movsl
into
hlt
and
mov
mov
fs
xlat
inc
std
imul
pop
andl
push
hlt
push
stos
lret
aaa
lock
cmpb
pop
and
aas
clc
adc
cld
sbb
xor
pop
cmp
fsubl
mov
lret
mov
lret
mov
add
enter
pop
js
cli
in
in
mov
push
in
imul
mov
inc
mov
je
adc
sub
mov
js
fistl
mov
pop
loopne
adc
iret
add
icebp
jp
imul
push
orb
imul
outsl
lods
xor
stos
mov
and
sub
mov
mov
js
int3
mov
out
pmulhuw
sti
repnz
sub
inc
lods
jae
js
fnstcw
ds
in
adcb
jmp
cmpsb
cmp
jns
outsl
mov
subl
pop
cld
xlat
adc
into
dec
pop
pop
stos
jo
out
jns
outsb
movb
cltd
cmp
lcall
fs
aas
sarl
les
je
mov
dec
mov
movsb
mov
push
iret
ret
insb
lock
cld
mov
xlat
das
inc
inc
js
pop
loopne
add
lret
orb
fsts
xchg
fwait
dec
push
mov
sub
sti
lcall
enter
mov
and
je
test
mov
adcl
aas
sbb
mov
lahf
bound
aas
mov
pop
mov
and
pop
test
lret
movl
pusha
cld
stc
scas
insl
sbb
in
push
fcoms
adc
out
enter
in
sbb
and
out
fs
aad
push
adc
xchg
loopne
pop
insb
jmp
repnz
cli
push
jnp
pop
cmpsl
ja
int3
fmulp
sbb
and
inc
es
inc
ror
ljmp
insb
mov
adc
mov
nop
jmp
inc
outsl
out
adc
mov
add
loope
pop
jmp
push
out
sbb
cmp
ja
mov
shll
pop
aas
and
js
inc
add
testl
or
push
pop
dec
addr16
mov
jp
dec
scas
rcrb
jmp
test
faddp
test
movsl
mov
or
and
repnz
aad
out
movsb
push
push
jns
in
js
es
push
inc
popa
push
and
dec
in
scas
xchg
mov
dec
sub
aas
fwait
xchg
adc
cmp
stos
and
mov
bound
xlat
or
dec
mov
push
and
hlt
mov
sub
inc
mov
push
xchg
pop
pop
inc
loope
pop
cs
jns
arpl
push
jmp
xlat
mov
adc
cmp
outsb
adc
cmp
shlb
orb
or
cli
sarb
jbe
hlt
push
std
fnop
dec
sbb
inc
test
sub
dec
imull
dec
mov
out
test
insl
jp
cmp
faddp
orb
mov
outsl
add
mov
fdivs
int
add
xchg
addl
mov
xlat
mov
ljmp
in
int
cwtl
sti
push
lahf
mov
ret
cmp
sbb
data16
fnstenv
xor
or
xchg
out
adc
sbb
xchg
shll
mov
out
mov
or
mov
xchg
nop
pop
ja
andl
xorl
pop
sbb
push
mov
call
jg
mov
cld
cmp
fucomp
cli
inc
inc
loop
add
sbb
jge
sbb
cmp
mov
adc
push
jb
dec
add
and
pop
movsb
lret
test
jp
data16
ljmp
out
ds
or
inc
sub
cli
mov
out
stos
mov
adc
pop
hlt
add
xor
lahf
adc
nop
jnp
inc
enter
adc
sti
jbe
insb
outsb
das
mov
sub
lea
inc
push
sti
lods
sti
cltd
xor
and
adc
aaa
add
test
cmc
ret
in
stos
mov
jg
aas
rolb
or
ss
jns
test
and
fwait
jg
cmp
loop
scas
mov
les
ret
fidivs
dec
sti
in
cmp
mov
xchg
push
sbb
and
dec
cltd
out
out
cli
mov
lea
and
mov
lods
cmp
pop
add
xchg
das
mov
add
scas
mov
push
jecxz
pop
fildl
mov
js
xchg
imul
xchg
and
xchg
dec
das
fbld
cwtl
popa
aad
jnp
movb
ficoms
addr16
dec
push
add
mov
leave
jno
lret
pop
in
int3
inc
sub
loopne
cmpsb
scas
jmp
and
mov
or
inc
xchg
sub
and
sbb
ret
sbb
stos
popa
xchg
pop
lret
ljmp
sti
fwait
mov
lahf
stos
and
out
clc
ret
push
in
out
icebp
sarl
pop
push
and
inc
sbb
mov
lods
loop
mov
ret
and
mov
movsl
xor
sub
daa
inc
test
or
dec
xor
xlat
cld
fwait
mov
mov
and
movsb
inc
movsl
daa
sbb
cld
adc
mov
sub
leave
arpl
repz
aaa
cmp
pop
shll
orw
and
pop
lock
ljmp
insl
jmp
pop
xchg
clc
pop
rclb
out
jo
mov
cmpsb
xor
lcall
cmp
sbb
and
ja
int
add
or
out
push
sbb
jge
fadds
or
iret
or
test
mov
pop
push
add
xor
les
or
rcr
shrl
movsl
std
lods
int3
enter
mov
repnz
out
or
into
fwait
hlt
pop
iret
out
fisubrs
sti
xor
mov
ret
dec
cmpb
fmull
mov
andl
push
xchg
cmp
int
push
mov
xchg
stc
subl
lret
std
imul
aas
push
int
imulb
icebp
dec
popf
pop
in
mov
sbbb
xlat
enter
mov
lods
ucomiss
insl
xor
xor
pop
hlt
iret
dec
ret
clc
out
clc
cmpb
ljmp
sub
inc
iret
loope
mov
ja
push
push
in
repz
adc
test
and
or
lods
push
div
push
mov
add
xchg
mov
repz
jg
pop
mulps
movsl
imul
out
je
xchg
pop
push
imul
cmpsb
push
xor
add
inc
cmp
rep
dec
stc
aam
lods
mov
xchg
in
arpl
addb
jmp
jge
inc
fucomip
sahf
mov
sub
subl
sarb
das
dec
xchg
jecxz
xchg
xchg
cwtl
mov
aaa
aaa
mov
inc
inc
loope
ds
ret
into
dec
pop
or
mov
and
sub
mov
mov
test
pop
cltd
xlat
cli
sbb
jo
mov
arpl
pop
xor
lahf
lahf
jmp
push
fidivrs
cmp
roll
ror
and
ljmp
shl
xchg
xlat
mov
cwtl
xor
bound
pop
scas
loope
and
clc
int
cmp
jmp
movsl
cmp
in
shlb
daa
hlt
subl
gs
cmp
les
add
pop
sbb
leave
pop
mov
test
pop
icebp
insb
xchg
adc
mov
je
cmp
std
cld
ss
dec
jbe
or
mov
mov
fsubrs
bound
mov
mov
ljmp
sub
xchg
nop
sbb
pop
cmc
lcall
imul
sbb
xor
in
fdivrs
or
pop
jo
lds
xor
and
adc
adc
int
sbb
in
sub
sbb
popf
jns
pop
mov
call
stos
cmc
jno
loop
push
mov
lods
push
scas
sbb
rolb
inc
add
or
mov
pop
rorb
xor
rolb
in
lock
fmull
dec
insl
inc
sub
sbb
or
popa
xor
pop
or
loop
or
std
pop
pop
sub
push
or
lret
xor
mov
push
lret
cltd
repz
sbb
dec
test
and
sbb
test
jno
in
je
ret
xor
xor
push
push
ja
jle
jae
cmp
add
orl
ja
cmp
inc
jb
push
mov
jle
push
mov
mov
test
call
imul
stos
and
push
inc
std
add
mov
push
cli
push
lea
sub
or
stc
test
and
outsl
bound
das
in
sub
ljmp
cmp
push
adc
rolb
cmpsb
aas
sbb
xor
sub
ret
adc
or
sub
fsubrl
or
sbb
cmp
lahf
out
xchg
mov
sub
xlat
int
out
test
push
aad
cmp
jae
add
inc
popf
add
icebp
pop
fimull
dec
adc
fldl
jmp
mov
or
test
dec
mov
data16
sbb
aaa
mov
xchg
fwait
xchg
and
sbb
add
cwtl
nop
dec
ret
decl
neg
popf
xor
dec
data16
int
push
stos
pop
mov
mov
xor
mov
pop
scas
xlat
inc
mov
ss
and
filds
ret
or
js
mov
dec
push
fsts
or
cmpsb
push
mov
lret
cli
sub
call
loopne
aaa
test
xchg
xchg
imul
lds
and
aad
mov
mov
clc
cmp
mov
sti
pop
jge
in
jmp
jecxz
out
sbb
test
push
enter
pop
shlb
test
mov
negb
idivl
dec
int3
cmp
sub
aaa
int
pop
mov
or
xchg
int
and
pop
dec
clc
mov
adc
insl
inc
xchg
fldt
bound
imul
add
cmpsb
sbb
cmp
adc
dec
ret
in
stos
test
imul
popa
movsl
outsb
add
or
inc
cltd
repz
aas
pop
xchg
cmp
fcomip
pop
popa
lahf
jle
pop
repnz
faddp
push
aaa
sbb
sbb
popl
xor
subb
cmp
pop
shl
stos
sbb
insl
inc
ret
aad
mov
stos
xchg
scas
add
mov
imul
mov
int3
test
dec
mov
mov
pop
out
cmp
lds
shl
push
nopl
ljmp
mov
icebp
add
lea
adc
pop
scas
insl
clc
adc
std
jmp
bound
sub
mov
movsb
in
repnz
dec
jecxz
adc
fcmovu
sub
aam
mov
cmp
movsl
pop
lahf
inc
lret
sub
mov
sub
sub
push
lock
and
mov
mov
lahf
out
xchg
mov
inc
faddl
out
mov
mov
xchg
mov
jnp
lret
fstpl
or
jbe
arpl
jle
fcomps
int
xchg
stc
test
aas
push
inc
lcall
jmp
sbb
gs
push
test
xlat
testl
mov
sbb
sub
xchg
or
mov
enter
sub
pop
xchg
pop
mov
mov
pop
fs
fsts
jb
test
sub
es
test
movsb
mov
mov
push
std
cmc
testl
sbb
ja
leave
jnp
jae
es
xchg
insb
push
xor
mov
add
xchg
xor
jl
data16
out
inc
xor
pop
movsl
xor
or
jae
and
dec
shlb
adc
lock
inc
addr16
fistpll
out
cltd
mov
lods
mov
or
push
push
int
mov
loope
jp,pn
jl
dec
cmpsl
jb
lret
mov
orl
and
stos
out
cmc
imul
jge
pop
ficompl
cmc
rorl
add
add
je
dec
movsl
scas
sahf
and
dec
es
cmp
cs
push
iret
or
cmp
xchg
xchg
add
cmp
dec
pusha
ret
jne
movhps
icebp
adc
loope
cwtl
push
jo
adc
fcmove
ficoms
fs
or
lea
cmpb
push
das
jg
mov
in
and
rcl
mov
outsl
cmp
in
stc
xlat
add
pop
mov
daa
lret
fwait
jmp
xchg
mov
rorl
mov
std
pop
popf
loopne
xorb
and
stc
mov
push
enter
mov
mov
push
call
fs
lret
sti
call
cli
mov
add
ja
jge
mov
push
aas
mov
aad
enter
xor
les
cmp
inc
pop
insb
in
push
call
pushf
mov
dec
mov
sarl
sti
das
lahf
daa
sbb
outsb
stos
or
sub
imul
mov
push
mov
xor
fildl
sub
stos
xchg
xorb
pop
jecxz
nop
xchg
adc
jae
sub
dec
jmp
mov
adc
xchg
push
xor
aad
out
out
mov
cld
repnz
inc
sub
iret
les
add
jno
test
xchg
and
add
push
in
lds
mov
test
inc
movsl
push
push
or
lds
lret
jle
pop
and
and
lds
cmpsl
inc
in
lret
mov
mov
cmp
and
ret
sub
stos
cltd
push
testb
fsubl
or
push
daa
in
cmp
call
or
outsb
push
lock
mov
mov
in
sarl
xchg
xchg
xchg
aad
aam
rcr
inc
lock
popa
xor
jnp
inc
fwait
jg
lret
add
push
pop
sub
mov
sbb
and
pop
test
sub
ficompl
push
addr16
xchg
popa
sar
xor
repnz
jecxz
mov
mov
in
ljmp
in
cmp
inc
addb
sbb
push
add
inc
xlat
xchg
shlb
xchg
sbbl
mov
push
jp
jecxz
sti
pop
inc
shll
sbb
sbb
ds
sbb
outsl
push
pop
pop
xor
mulb
addb
mov
mov
push
mov
push
std
pushf
es
daa
shll
pop
jae
and
mov
and
and
arpl
mov
xor
sbb
pushf
ja
push
inc
loop
nop
mov
iret
push
xlat
jg
fisubrl
and
lret
fimull
push
aas
scas
push
sub
adc
jecxz
in
push
dec
imul
lods
cmp
mov
mov
and
gs
lret
dec
clc
ret
jae
shll
xchg
inc
notl
orl
fimull
adc
ja
sbb
jmp
jecxz
mov
add
testb
adc
or
scas
outsl
pop
gs
dec
stos
rcrl
and
bswap
rcrb
xchg
pop
dec
mov
fadds
imul
lods
in
in
push
pop
mov
sub
sub
push
std
call
sbb
add
cld
push
xchg
inc
cmp
inc
push
push
or
scas
or
sub
xchg
sub
stos
fsubrl
lods
cltd
mov
push
cli
and
clc
mov
nop
es
negl
idivb
jmp
in
lock
cwtl
and
mov
out
je
into
icebp
lret
push
insl
into
mov
xor
dec
fldenv
in
mov
jg
sahf
cmp
clc
std
dec
sub
sbb
inc
add
sbb
stc
movsb
cmpsl
sahf
cmpsl
mov
dec
dec
xchg
fwait
int
mov
repz
out
mov
and
lods
push
jle
and
aad
repnz
or
mov
adc
sub
cmp
pusha
push
pop
lcall
jle
stos
jnp
stc
addr16
push
shl
pop
push
popl
scas
push
xor
xchg
mov
out
push
dec
scas
nop
sub
pusha
scas
xchg
sti
insb
notl
mov
inc
mov
push
sbb
jbe
fisttpl
je
cwtl
or
cmpb
loop
je
fists
add
inc
ret
sti
jl
loopne
popl
nop
out
or
insb
push
fs
pop
mov
pop
cwtl
iret
imul
mov
push
das
pop
dec
fnop
fcmovb
cmpsb
pop
mov
test
addr16
pop
xchg
dec
fstl
cmp
adc
popf
jnp
xor
sub
loop
mov
cmp
dec
push
inc
cmp
xlat
mov
dec
icebp
sbb
push
in
stos
xchg
scas
fwait
rorb
fistl
xor
aad
fs
out
mov
repz
or
jnp
int3
out
dec
ret
in
cltd
pop
inc
push
loop
xchg
add
into
iret
pop
pop
xlat
adc
lods
add
cmp
pop
lahf
and
sub
push
jmp
out
lods
rcrl
mov
push
add
pop
lret
loope
hlt
fwait
sarb
das
jge
loop
lcall
arpl
cmp
lret
xor
pop
aas
cmp
pop
add
xor
out
sub
cs
pop
in
stc
xchg
adc
mov
adc
rcrl
mov
loopne
cmp
inc
add
gs
xor
dec
jne
jmp
sarl
sbb
mov
push
aad
mov
pop
jae
pop
cltd
inc
test
pop
fistps
mov
jecxz
ret
in
cltd
inc
sahf
sbb
into
icebp
test
cmp
or
js
and
daa
fidivrl
cs
push
cmp
stos
insl
repz
pop
pop
test
mov
adc
pop
fmull
mov
mov
iret
cltd
jl
jl
addb
jle
jo
xchg
insl
std
mov
das
stc
mov
test
fwait
sbb
pop
in
sub
lds
cmpsl
dec
dec
lock
ret
les
ds
add
adc
sbb
mov
sbb
in
xchg
pop
repz
arpl
jne
pop
xor
and
dec
loopne
cwtl
nop
mov
jle
repz
dec
and
pusha
and
aaa
pop
nop
testl
xchg
adc
enter
jno
sti
aam
xchg
rclb
movsl
lret
popf
shrb
xchg
lret
add
add
lods
xor
sbb
in
xlat
xor
test
hlt
ret
mov
xchg
lods
cmp
pop
inc
push
mov
outsl
jg
sbb
mov
test
dec
mov
bound
lods
gs
pop
push
jmp
adc
jl
xchg
add
enter
cmp
ja
leave
xor
mov
mov
out
aad
xor
jnp
lods
mov
mov
loop
cmp
ss
stc
add
pop
pop
or
xlat
lds
mov
sbb
jbe
ret
iret
xor
jno
cmp
and
xchg
jb
jge
lahf
call
push
pop
cs
sub
mov
popa
mov
das
out
push
jle
les
movsb
cmp
sahf
insb
mov
decl
inc
repz
loop
inc
loope
mov
push
dec
jmp
cwtl
xor
rolb
sbb
lods
cmc
lods
mov
cmp
mov
xchg
loope
and
push
adc
jb
fistpll
stos
roll
sbb
and
jb
call
fs
shlb
popf
shll
inc
sbb
into
fiaddl
adc
adc
mov
filds
inc
rcr
pop
xchg
cmc
cmp
bound
inc
mov
and
test
xor
pop
lcall
icebp
jae
movsb
or
lods
xor
rorl
les
push
scas
aam
popf
push
sti
in
cmp
popf
pop
mov
jg
mov
out
nop
mov
mov
jb
test
lods
pop
lret
jecxz
fidivl
test
call
fsubl
scas
repz
and
add
pop
loopne
and
hlt
movsb
loope
sub
cld
pusha
loopne
add
mov
outsl
pop
movsl
mov
add
addr16
jmp
sbb
repz
pop
shll
adcb
scas
pop
cwtl
and
add
nop
fsubrl
fucomp
xchg
fsubrs
xchg
js
js
ret
lret
lcall
add
jo
addr16
jb
and
std
xchg
lea
in
shl
add
fsubs
pop
orl
inc
aad
in
orb
jno
fnstenv
xor
push
mov
jle
aas
jecxz
dec
insb
xchg
cmpsb
push
hlt
lods
ljmp
push
pop
push
dec
loope
call
and
inc
adc
mov
sub
push
lods
dec
insl
lds
push
fstpt
andl
test
or
shll
gs
fistl
inc
push
jae
ficoms
and
jg
lea
addr16
and
adc
out
dec
lcall
mov
cmpl
add
mov
filds
test
dec
lret
or
je
daa
je
jl
dec
dec
inc
insb
cmpsb
arpl
gs
jbe
ja
sbb
fidivl
push
pop
jle
out
pushf
adc
inc
dec
fwait
mov
aam
add
fldz
add
inc
mov
test
dec
push
std
mov
or
sub
cwtl
cmp
inc
loopne
lds
aaa
shrb
xchg
jns
aas
iret
jns
cmp
inc
sbbl
xchg
sub
ficoms
add
int3
into
in
add
cmp
fimuls
pop
shrl
pop
push
sub
icebp
pusha
xchg
mov
cmpsb
call
in
repz
or
stc
dec
adc
pop
xor
int
xchg
fistps
or
add
or
sbb
sub
adc
std
pop
sbb
ret
mov
adc
ljmp
fiadds
pop
dec
mov
aaa
testl
out
cmp
insb
mov
out
inc
sub
xchg
cmp
stos
jo
cmp
jbe
in
ss
and
hlt
ffree
dec
and
adc
addb
enter
sub
sti
aas
pop
fsubl
add
fsubs
mov
stc
out
xchg
adc
push
mov
int3
popa
popa
notb
loopne
mov
adc
pop
xor
sub
dec
xchg
or
inc
sahf
jp
pop
adc
sbb
and
push
loopne
mov
push
xchg
jl
sub
adc
call
pop
negl
lea
jae
adc
or
cs
mov
xchg
and
jle
mov
inc
dec
popf
sbb
or
loop
cmp
ret
add
sbb
mov
sbb
inc
mov
mov
fsubs
jbe
xor
mov
jp
lret
pop
imul
call
gs
imul
sub
mov
stc
arpl
add
aad
push
add
jo
bound
nop
sub
ficoml
cli
push
shrb
lods
mov
adc
test
dec
cwtl
push
pop
subl
and
sub
fsubr
in
or
nop
push
addl
imul
xchg
pop
push
dec
inc
loope
xchg
pushf
push
ficoml
inc
jl
xchg
in
sub
xchg
in
inc
cmp
push
xor
cmp
sub
lret
popa
adc
lret
cwtl
mov
sbb
cmp
test
xchg
sbb
sbb
mov
and
fdiv
xor
adc
mov
pushf
fldt
mov
fdivrl
dec
stos
sbb
pop
mov
ds
mov
lea
imul
flds
dec
lods
mov
imul
shll
clc
push
faddl
mov
call
pop
insb
mov
outsl
ja
mov
mov
ds
stos
cmpsl
pop
nop
lea
xchg
or
or
aas
js
enter
cmp
mov
mov
je
push
rorl
xchg
dec
push
rclb
out
and
mov
xlat
cmp
ljmp
pop
inc
or
push
out
cld
pop
sub
insb
cs
xchg
mov
sub
mov
leave
pop
inc
cmc
xor
pop
lret
bound
dec
mov
rorl
jle
hlt
stos
and
sub
pop
push
xchg
fwait
enter
sbb
int3
pop
sbbb
into
and
xor
adc
mov
add
jle
movsl
iret
mov
mov
loop
rcr
inc
dec
es
adcl
push
data16
add
inc
sub
in
sbb
ja
rcrl
imul
sub
sbb
fs
sub
sbb
xchg
aam
stc
or
ret
inc
repz
mov
mov
cltd
mov
adc
in
es
dec
js
les
hlt
sbb
pusha
lods
cmp
cmp
aaa
pop
jbe
mov
add
movsl
sar
mov
test
lds
push
aas
or
or
lcall
outsb
mov
aam
and
popa
adc
xchg
out
test
cs
data16
clc
jecxz
mov
pusha
adc
out
sti
hlt
rcrl
jp
rclb
fildl
fbld
inc
mov
mov
sub
mov
push
test
ljmp
sub
testl
jmp
pop
lds
pop
adc
sub
std
mov
outsb
fsubrs
pushf
arpl
add
push
addr16
adc
stos
aas
lcall
adc
inc
push
push
sbb
mov
repnz
test
jecxz
cmc
xor
sbb
and
mov
daa
pop
adc
popa
push
and
out
jae
sub
std
popa
push
dec
add
xchg
fadds
sbb
pushf
mov
mov
mov
pushf
mov
insb
cmp
nop
int3
cltd
mov
jo
leave
sub
inc
add
movsl
jno
cmpsl
push
popf
cwtl
mov
outsb
add
inc
adc
mov
sbb
or
adc
imul
jae
and
pop
push
in
push
in
jo
push
push
cs
dec
scas
leave
in
sbb
in
mov
outsl
mov
sahf
pop
stos
loope
mov
sti
mov
xchg
movsl
jo
xchg
mov
mov
lahf
fsubp
repz
in
jbe
mov
std
and
push
mov
mov
or
or
dec
add
test
dec
insb
sti
dec
xchg
lretw
mov
jmp
mov
adc
mov
js
sub
data16
jno
addr16
lods
ficompl
fadds
cli
out
xchg
adc
clc
xchg
xlat
mov
pop
push
loope
fnstsw
repz
movsb
gs
lahf
xchg
shrb
sub
jae
xlat
xchg
call
xchg
rcrb
sbb
fistps
aad
sbbl
pop
neg
out
cs
dec
push
or
daa
pushf
dec
xchg
out
pop
push
incb
sbb
adc
mov
mov
inc
lcall
mov
fisubrl
sbb
jnp
loop
icebp
mov
sbb
cltd
insl
sub
inc
add
fidivl
pusha
out
pusha
inc
inc
lret
sbb
pushf
and
in
jbe
and
cmc
cmp
jns
jl
fcmovnu
lock
push
shrb
adc
push
and
lods
sub
dec
inc
adc
in
pop
sub
jnp
pop
sub
aad
pop
and
fstl
adc
lods
sub
pusha
lret
out
add
addr16
fiaddl
fldcw
add
jge
lds
int3
cwtl
and
pop
jns
inc
fistpll
ret
sub
fcmovnb
sahf
push
sub
daa
jle
or
sub
mov
jbe
and
mov
inc
test
pop
int3
or
xor
xlat
sbb
sbb
outsb
sarl
and
das
jecxz
mov
call
pop
add
subb
sbb
cmp
push
pop
jl
scas
orb
jae
imul
inc
mov
decl
jg
test
sti
inc
test
insb
inc
adc
cmp
fwait
cmc
test
jmp
and
mov
das
and
jno
sub
fisttpl
mov
mov
xchg
aaa
test
push
repnz
adc
into
iret
push
out
jp
addl
inc
sbb
cmc
sbb
inc
dec
cmp
sbb
stc
adc
dec
in
lret
jecxz
push
movsl
mov
mov
arpl
fld
arpl
rcrl
xlat
scas
xor
repnz
jo
inc
stos
mov
jbe
pop
cs
add
fsubr
mov
push
mov
mov
push
lods
data16
add
popa
cltd
in
lret
xchg
insl
sub
outsb
cmpl
lea
mov
or
lcall
inc
inc
ret
add
jg
testb
cmpsb
int3
jl
dec
arpl
stc
push
jnp
adc
xchg
movsb
sahf
in
mov
out
mov
outsb
divl
pop
push
sub
push
jns
mov
fstps
xchg
xor
iret
stc
mov
fmul
rol
inc
popf
inc
xor
popa
lods
test
out
adc
pop
inc
lods
cs
popf
pop
mov
jecxz
leave
or
stos
movsl
test
mov
repnz
and
stos
rolw
add
gs
sub
mov
popf
add
es
mov
ja
insb
shr
ljmp
fadds
cltd
mov
movsb
cmc
pop
insl
mov
pop
fnstcw
in
add
pop
jns
iret
inc
sbb
hlt
adc
xchg
aad
insb
or
jle
mov
insl
cmp
aaa
enter
inc
pop
test
pop
test
adc
arpl
sub
mov
inc
movsl
cld
push
cmpsl
or
mov
test
in
andl
ljmp
jecxz
and
lds
cmp
mov
and
arpl
pushf
imull
fnstsw
test
cld
pushf
subl
in
push
mov
divb
shll
jle
cmp
mov
insb
mov
mov
fwait
jg
inc
sub
mov
pop
pop
sahf
insl
mov
cmp
imul
push
ret
insl
repnz
jmp
cmp
mov
cmp
mov
ja
jne
inc
sbb
int3
std
jmp
dec
loopne
sub
frstor
lods
sbb
js
loopne
mov
call
outsb
vmovss
pop
iret
add
or
dec
cmp
addr16
inc
test
xor
xchg
in
mov
lahf
mov
jnp
mov
flds
aam
incl
cmc
adc
jge
cmpsl
orb
jg
insb
jmp
jne
push
lock
les
mov
fcom
jl
lret
mov
push
daa
daa
cli
std
cmp
addr16
call
and
mov
xchg
ret
pusha
jmp
adc
push
mov
fwait
shll
sbb
cmp
test
sbb
test
sahf
mov
xchg
cmpsb
int
mov
arpl
dec
push
mov
test
pop
popf
fidivrs
icebp
jle
ret
test
add
hlt
sbb
fisttpll
shrb
inc
mov
jnp
dec
pop
std
lret
push
jg
inc
cmpsl
iret
lea
mov
sbb
xor
pushf
in
jae
pop
fidivs
jmp
xchg
inc
mov
adc
fs
mov
mov
or
jo
sub
inc
add
aaa
fwait
dec
daa
cmp
add
shlb
sbb
adc
mov
inc
pmaxsw
dec
mov
or
pop
addb
aam
mov
adc
call
shl
lods
xchg
aas
sub
cmp
fidivrs
mov
pop
sub
hlt
fcomi
aad
dec
xor
mov
xchg
loop
js
in
mov
mov
rol
sbbb
fisubrs
mov
fistpll
addr16
adc
insb
ja
pop
notb
dec
mov
addr16
cmp
jg
push
cmovle
add
lahf
pop
pop
mov
das
mov
and
inc
aad
mov
lods
fucomip
int
int3
loope
sbbl
repnz
lea
shl
or
and
pushf
cld
shrb
cs
add
loope
imul
pop
in
dec
add
sub
dec
sbb
sub
dec
in
int3
pop
mov
jns
adc
int
movsl
sub
outsb
inc
insb
dec
inc
je
pop
and
shll
pop
xor
sbb
clc
xchg
daa
inc
mov
or
fisubrl
aaa
add
pop
sub
scas
nop
mov
dec
and
ja
push
repz
test
push
repz
sti
mov
jge
es
jge
jns
fstps
cmp
and
insb
jb
popf
push
pop
pop
ljmp
cmp
popa
lods
popa
ja
sub
dec
divl
cmpsl
aad
movsl
inc
xchg
lret
push
movsl
lret
in
push
cwtl
fwait
in
xchg
shlb
cs
sub
mov
fnstenv
add
push
call
aad
mov
push
sub
cs
aas
repnz
jbe
ret
fnstcw
add
cmp
pop
movsb
push
aam
fwait
ret
inc
fdivrl
sbb
mov
push
jge
shrb
sbb
lock
test
xchg
mov
jb
xchg
test
loope
push
lods
push
jle
inc
mov
xchg
add
xlat
andb
jle
ret
inc
fstps
mov
mov
and
pop
cld
adc
xchg
stos
divl
mov
into
into
push
sbb
call
mov
dec
and
mov
push
adc
sbb
inc
aam
add
bound
pop
shl
mov
pop
or
cmp
adc
addb
pop
pop
clc
jbe
rcll
dec
and
sbb
xchg
imul
insb
jbe
hlt
and
mov
mov
push
repz
xor
mov
fsub
push
push
inc
out
stos
stos
push
addl
out
imul
push
outsb
ds
inc
stc
sub
inc
mov
dec
fldenv
sbbl
icebp
mov
ss
fnop
mov
imul
int
addr16
stos
test
adc
push
jge
pushw
sbb
xor
sbb
sbb
std
int
or
loopne
and
fsubrl
inc
mov
gs
mov
mov
xchg
aaa
xlat
sbb
int3
xchg
and
repz
fstp
push
lret
test
mov
aaa
int3
ss
in
xchg
enter
cmc
popa
inc
mov
jnp
mov
jno
and
fistl
cmp
lods
inc
divl
int
push
lret
test
cmp
inc
or
movsl
cmp
das
fdivrl
insl
add
mov
mov
gs
jns
arpl
sub
inc
fabs
cmp
sub
dec
mov
divl
popa
push
ds
pop
decb
mov
hlt
mov
out
xchg
jg
xchg
xchg
in
bound
aaa
cmpsb
xor
ret
push
mov
scas
jno
fstl
cmpsb
jae
xchg
cmp
and
mov
pop
jge
cli
gs
mov
push
scas
or
mov
dec
inc
cmp
mov
cmp
adc
xchg
ret
push
data16
in
xor
dec
cmp
movsb
rcll
adc
xor
in
mov
sub
dec
and
mov
push
and
dec
loop
mov
fistl
xor
sbb
aam
movsl
dec
jmp
lock
xchg
addr16
out
fstpl
dec
push
mov
out
pop
fcomp
and
mov
repz
adc
idivb
push
jge
inc
pusha
mov
mov
mov
xor
addr16
pop
mov
adc
fildl
sbb
push
xchg
or
mov
cmpsl
dec
xor
in
fidivs
fs
sbb
repnz
into
push
mov
sbb
cld
lret
leave
flds
ret
mov
dec
cmp
test
sbbb
rorb
xchg
mov
lret
jp
les
bound
xor
loop
and
jge
lcall
xor
jl
lret
cmp
rorb
cmpsb
nop
mov
mov
and
xchg
adc
test
imul
or
and
rcrb
into
pop
imul
leave
mov
sbb
fwait
inc
std
int
sbb
clc
push
push
and
mov
sahf
arpl
mov
jo
repz
lret
mov
sbb
sub
lock
shl
cmp
sbb
jmp
push
xor
rorb
imul
iret
ret
mov
xchg
out
into
push
jae
sub
negb
dec
inc
and
push
xor
aam
jmp
roll
les
mov
or
test
aaa
mov
pop
fimull
dec
xor
lock
push
cmp
addr16
sbb
inc
mov
xchg
mov
dec
mov
mov
xchg
frstor
inc
mov
out
leave
sbb
in
pop
ds
mov
and
and
dec
shll
mov
dec
xor
aas
jmp
push
dec
and
dec
xchg
mov
arpl
dec
add
cmp
dec
leave
test
das
pop
sbb
adc
jnp
shlb
sub
xchg
inc
add
sub
dec
in
daa
shl
jb
or
mov
insb
das
aaa
push
test
outsb
xchg
les
outsl
stos
xchg
ret
in
arpl
jbe
iret
xchg
push
or
sbb
jo
lea
mov
jp
jg
out
mov
enter
mov
add
inc
sbbl
dec
fwait
inc
cmp
jp
pop
int3
jb
pop
sub
cld
jne
add
into
aas
xlat
sbb
daa
ja
movsl
aad
stc
xchg
mov
gs
and
pushf
adc
notl
inc
leave
lods
lock
repz
mov
cmp
pop
mov
mov
mov
dec
inc
call
or
in
inc
add
lock
test
add
sub
push
dec
mov
adc
cmpsl
test
adc
testl
mov
setae
xchg
ja
xchg
and
pop
inc
fcmovnb
into
mov
jo
push
pushf
jno
and
xor
in
movsl
sub
cmp
xchg
add
into
insl
test
scas
jno
xor
aas
push
out
stos
mov
push
push
inc
lret
jne
pop
ljmp
jbe
and
adc
xchg
bound
cld
cmc
mov
xchg
xchg
cmp
insb
adc
adc
push
ja
inc
cwtl
add
loop
dec
inc
jae
cmpsb
in
aam
loop
repnz
push
pop
outsl
lret
sahf
insb
pop
sbb
xor
incl
jge
stos
xchg
lock
push
inc
adc
int
repz
pop
sbb
idivl
inc
mov
ret
inc
cmp
jmp
xor
push
sub
fmulp
add
mov
into
out
mov
adc
push
cs
mov
fwait
mov
cs
cmpsl
or
xor
pop
inc
ljmp
cltd
xchg
ds
or
dec
arpl
mov
inc
outsb
mov
xchg
pusha
clc
cltd
inc
dec
adc
and
ffree
mov
cwtl
cmp
and
or
and
pop
pop
pop
leave
addb
pop
dec
pop
mov
cs
mov
es
adcb
jmp
mov
xor
icebp
or
pop
dec
int3
dec
mov
push
fdivrl
xchg
orb
jl
std
mov
jae
mov
inc
pop
mov
add
pop
rclb
bound
jbe
dec
mov
and
mov
mov
jp
out
ret
mov
sbb
push
push
xchg
rcl
repz
leave
dec
pop
fnstenv
das
sub
sbbl
andb
sbb
sar
in
mov
dec
pop
cmc
pop
mov
pop
xor
cwtl
pop
pop
into
sbb
into
pop
lret
dec
xor
ret
out
icebp
sub
xchg
jg
or
mov
rcll
stos
xor
aas
insb
adc
rclb
cmp
cld
sbb
addr16
lock
jmp
pop
fldl
sti
fsubl
cmc
repz
cmp
ret
aam
mov
or
sbb
imul
mov
sbb
in
pop
std
push
cmpb
ljmp
shrb
int
loopne
dec
cmp
outsb
mul
mov
xor
cmp
push
xlat
inc
lcall
push
icebp
shlb
loop
push
sti
mov
fcoms
sub
ja
outsb
sub
test
std
cli
push
jno
mov
and
push
aas
aaa
add
sbb
andl
mov
mov
nop
insl
cmp
mov
jmp
or
adc
or
pop
xchg
icebp
jo
cmp
rcl
lret
bound
mov
sub
into
aas
outsl
mov
adc
cwtl
or
aam
cmp
jbe
dec
pushf
std
ret
add
ds
xor
flds
cmp
cli
jb
out
adc
xor
les
rolb
movsb
mov
and
jbe
xchg
mov
mov
fwait
push
mov
lret
lock
das
outsb
add
daa
pop
repz
sbb
pop
mov
push
or
lods
in
std
jl
clc
or
aaa
daa
int
insl
insl
mov
mov
adc
rcll
mov
mov
inc
jp
test
mov
jns
sbb
mov
ljmp
mov
sbb
lock
loop
fidivrl
xchg
xchg
inc
hlt
and
bswap
dec
pop
inc
imul
sbb
inc
xchg
inc
pop
xor
fstpl
fiadds
mov
cmpsl
mov
sar
inc
int
call
dec
fsubs
jne
inc
cmp
mov
adc
in
fwait
call
and
cs
daa
call
dec
cmp
lds
inc
aas
sbb
mov
push
cwtl
cld
mov
movsl
xchg
fwait
repnz
mov
dec
rclb
xchg
js
mov
orl
mov
xchg
test
pop
or
fcomps
je
aaa
fwait
addl
push
xor
mov
scas
jne
dec
xor
sahf
xor
xor
pop
dec
lret
scas
sbb
jb
mov
push
mov
imul
jp
shrl
shrb
dec
pop
data16
mov
pop
push
mov
fdivl
push
add
pop
iret
enter
stos
mov
add
rcrb
mov
mov
xchg
jmp
pop
sbb
xchg
push
mov
inc
gs
and
push
add
ds
stc
lea
jecxz
mov
xor
loopne
add
push
stos
movsl
mov
pop
mov
sbb
and
jns
adc
mov
cmpsb
pop
xor
lds
inc
loopne
xchg
jg
icebp
out
inc
push
and
mov
out
stc
fs
out
push
or
int
daa
fcoms
movsb
mov
dec
push
push
nop
lock
push
jg
call
mov
mov
ds
ret
stos
sub
and
jp
mov
pop
mov
mov
test
insb
jge
mov
pop
adc
pushf
leave
imul
jmp
mov
ror
pop
inc
xlat
pop
js
pusha
dec
ja
outsb
and
xlat
or
add
and
jmp
iret
or
rcrl
xor
or
in
insl
hlt
test
div
mov
jmp
fs
out
cmp
arpl
push
cmp
mov
incl
mov
fmuls
pop
lcall
xor
arpl
insb
sbbb
jge
into
fists
out
and
adc
hlt
outsl
outsl
hlt
hlt
push
aam
imulb
adc
aam
add
xchg
add
xor
dec
jg
jnp
notl
lahf
or
arpl
cmp
push
lea
xor
adc
fistl
push
cli
lock
xor
dec
jecxz
jne
ss
inc
mov
push
ja
and
or
adc
pop
cmp
stos
lea
mov
fs
push
xor
cmp
push
or
cmp
jle
into
les
in
cmp
lahf
sti
push
xor
mov
rcrb
hlt
ficomps
lcall
jnp,pt
lds
lret
xor
inc
insl
sbb
in
mov
jl
scas
push
jge
and
adcl
orb
sbb
xlat
cmc
xor
test
les
mov
xor
cmp
sub
xlat
aam
sarb
inc
lods
cltd
and
inc
out
das
push
and
and
sbb
xchg
fldcw
aaa
movl
pusha
mov
xorl
orb
xchg
into
outsb
aas
setne
jg
or
and
mov
push
jns
repz
lret
shll
push
lods
mov
aad
out
sbb
out
pop
clc
pop
push
sarb
enter
icebp
mov
movsl
test
ds
lock
inc
call
cmp
fs
es
inc
mov
pop
clc
lcall
or
inc
stos
jae
mov
test
pop
xor
loopne
insl
mov
inc
push
cld
ja
pop
jae
popf
sti
xor
add
int3
cmp
loop
sub
insl
lods
adc
lret
mov
sub
jae
xchg
pop
movsl
in
sbb
xorb
subb
cltd
test
sbbl
loop
push
inc
push
into
mov
add
movsl
popf
dec
push
aam
cli
add
in
fs
fstl
mov
or
stc
mov
cwtl
testb
dec
lods
sub
ja
pop
dec
and
nop
jo
jb
clc
out
push
mov
sbb
das
in
pushf
mov
test
xor
test
ljmp
push
inc
adc
loope
pop
aas
shrl
mov
pop
xchg
iret
jnp
fidivl
fcoms
mov
icebp
mov
add
iret
jmp
es
es
out
sub
les
adc
pop
pop
jno
enter
sub
lcall
add
mov
jo
pop
out
in
stos
mov
iret
mov
inc
lcall
lds
pop
sbb
orb
nop
pop
inc
stos
cmp
fbld
mov
in
cmpsb
and
fmull
nop
xor
ret
addl
ljmp
cmpsb
mov
roll
jne
or
add
ds
rep
pop
add
fists
adc
arpl
jnp
sub
and
sbb
dec
daa
or
mov
mov
jo
or
mov
aam
adc
push
pop
inc
test
aad
pop
lods
xlat
sbb
sub
sbb
sub
inc
notb
bound
enter
sbb
xchg
xor
add
stc
push
dec
enter
dec
popa
adc
adc
sarb
mov
push
imul
sbb
fwait
pop
idivl
or
dec
stos
and
mov
push
fs
mov
pop
aam
shlb
pop
pop
jb
jo
jnp
or
mov
adc
call
mov
xor
cltd
out
pop
push
shl
cmp
outsb
test
sub
lods
jo
fnstenv
sbb
add
mov
jmp
outsl
or
inc
sbbb
jne
bound
test
incl
in
push
outsb
or
cli
iret
inc
lcall
addr16
ds
sub
andb
jle
aad
pop
dec
loopne
iret
add
rolb
insb
clc
cmp
mov
or
lret
frstor
xchg
adc
or
outsb
repz
incb
sub
ds
ficompl
mov
test
lcall
push
xchg
pop
lds
mov
sub
decl
cmp
sub
sub
adc
test
mov
leave
call
adc
jecxz
inc
xchg
lret
xlat
outsl
push
jl
rcrl
or
stos
push
cli
sub
stos
jno
out
cmp
clc
push
dec
mov
data16
mov
xor
inc
icebp
or
and
jle
add
es
xor
sbb
push
dec
ljmp
or
orl
shlb
mov
adc
out
pop
pop
or
stc
sub
stos
neg
shrb
pop
loop
push
mov
stos
push
pop
imul
cmp
mov
mov
mov
cmpsl
cmp
ror
xchg
leave
sbb
jecxz
jmp
call
shrl
in
js
hlt
xchg
ds
pop
xchg
mov
mov
dec
mov
or
ljmp
adc
mov
pop
in
push
pop
mov
add
repnz
stc
fcoml
dec
pop
push
xchg
or
outsb
loopne
shl
das
jge
dec
aam
cmp
aaa
loopne
xchg
or
jecxz
sbb
inc
sbb
pop
ret
add
enter
mov
orl
xchg
insl
das
xor
jnp
fsubr
push
ljmp
sarb
testl
adc
xor
ds
rcl
ja
sbb
mov
jns
imul
fdivrs
jns
int3
dec
cltd
mov
ljmp
andb
and
or
test
push
inc
pushf
and
daa
mov
mov
jg
sbb
sti
fcoml
fmul
ret
and
mov
stc
andl
scas
mov
inc
pop
mov
adc
cmp
in
jl
ret
mov
stos
repz
stc
adc
lods
xchg
scas
push
sbb
mov
or
or
xchg
and
mov
cmp
pop
cmp
mov
popf
dec
push
cmpsb
or
fiadds
push
lock
push
xchg
scas
lret
sbb
shll
in
jbe
jmp
pop
pop
jecxz
test
jg,pt
ret
add
movsb
push
add
in
mov
xor
inc
adc
adc
lods
fistpll
cmc
ret
inc
cmpsl
sbb
out
or
popl
aas
repnz
out
push
outsl
repz
das
sahf
add
dec
xor
in
push
xchg
jo
cmp
xchg
jnp
pop
pop
adc
add
pop
pop
das
pop
sbb
xchg
fincstp
shll
lret
insl
xchg
out
loop
fcomp
jb
or
push
mov
jecxz
ljmp
xchg
lods
push
pop
push
pushf
test
push
and
int3
cmp
daa
popf
scas
iret
movsl
mov
mov
mov
ljmp
or
jbe
cwtl
fnstcw
cmpsb
test
arpl
push
cmp
decb
xchg
inc
jb
rol
cltd
mov
inc
mov
and
repnz
lcall
lods
gs
mov
roll
insl
xor
sti
push
inc
lret
pop
pushf
incl
cld
or
sbb
icebp
xchg
dec
jns
xlat
jl
push
gs
dec
les
cmp
jge
mov
rcl
repnz
sub
out
fidivrs
adc
jp
or
mov
sti
ret
mov
cld
sub
pavgw
cli
test
inc
and
push
shlb
lods
imul
pop
or
xor
testb
mov
arpl
xor
xor
clc
push
imul
lds
dec
mov
and
loop
inc
pop
jne
cmp
jnp
test
notb
cmp
addr16
mov
mov
insb
sub
cmpsb
pop
inc
dec
data16
cwtl
fidivl
rcrb
xchg
movsl
pop
pop
stc
mov
pop
pop
lock
inc
xchg
dec
sub
imul
sbb
aas
add
shrl
aas
insl
cmp
test
nop
jno
adc
movsl
add
push
inc
es
hlt
fsubrl
mov
call
cltd
dec
daa
and
cwtl
xchg
or
in
sub
mov
lahf
outsl
xor
mov
adc
aaa
adc
xchg
mov
in
inc
xchg
mov
call
dec
xor
sbb
into
popf
loope
jge
add
repz
in
ds
xchg
dec
sub
pop
insb
mov
pushf
cld
ja
test
pop
jle
mov
xchg
jo
xchg
testl
shr
mov
pcmpgtd
scas
mov
movl
cld
cmpsb
test
pushf
sbb
lret
pop
sbb
sub
and
dec
mov
dec
ljmp
jecxz
add
adc
pushf
shrl
xor
icebp
push
pusha
mov
sbb
and
mov
cli
push
pop
and
stos
jo
xchg
pop
dec
mov
push
pop
pop
and
xor
lahf
sub
fldenv
sahf
test
leave
jno
je
into
pusha
aam
iret
lcall
fiaddl
fstpl
sbb
sbb
fdivrl
nop
cltd
enter
mov
mov
iret
mov
xchg
mov
and
dec
pop
push
xchg
jle
push
repnz
mov
dec
imull
fbstp
out
out
arpl
or
pop
push
seta
mov
push
imul
out
lret
lret
shrb
rcll
add
push
jg
mov
cmc
xchg
ds
sub
push
enter
aam
xchg
imul
xor
cli
add
push
jge
gs
lahf
cltd
cli
pop
addl
jecxz
outsl
dec
pop
dec
cmpsb
mov
sub
imul
mov
inc
or
lcall
hlt
jno
and
and
test
js
push
cld
sub
push
adc
push
lret
adc
cmp
xchg
out
add
or
and
xchg
faddl
dec
data16
jne
mov
or
decl
ret
cli
inc
pop
sahf
add
movsl
mov
rep
mov
lock
inc
addr16
sub
out
xor
sarl
outsb
pop
sbb
jle
repz
mov
mov
push
sub
decb
mov
add
mov
jbe
mov
xchg
lods
sub
sub
inc
mov
retw
inc
jl
sbb
jno
sub
xchg
pop
adc
addb
pop
jnp
jns
sti
test
pop
cmpsb
lcall
xor
adc
push
fcomi
xlat
mov
pop
jmp
lcall
out
jbe
das
adc
mov
stos
mov
dec
push
dec
xor
gs
cmpsb
popf
or
sub
sub
pop
jle
push
hlt
mov
pop
les
mov
xchg
push
enter
movsb
daa
cmp
cld
lret
push
push
xchg
sbb
scas
std
inc
cmp
ret
mov
mov
lret
inc
cmpb
fdivrp
inc
ja
repnz
aad
sub
pop
sub
jmp
mov
jae
movsl
sarb
or
add
inc
dec
cmpsl
lds
in
push
icebp
jg
call
imul
add
adc
push
mov
addr16
addb
cs
push
mov
adc
jne
int3
stc
mov
and
scas
mov
xchg
arpl
and
das
xchg
add
stos
mov
fnstsw
dec
aas
cmp
aad
lds
cmp
pop
pop
in
dec
imul
nop
in
pop
cli
jmp
cmp
insl
mov
stos
stos
pop
dec
add
dec
cmp
push
push
mov
out
and
xor
dec
mov
push
and
mov
hlt
xlat
sub
cwtl
fcomps
inc
jne
sub
lahf
sub
cmp
in
push
adc
in
outsl
aas
cmp
sub
arpl
lods
into
addb
test
arpl
icebp
lods
je
xchg
mov
and
and
cmp
jle
inc
mov
xor
mov
mov
or
xchg
mov
in
xor
sbbb
jmp
inc
jg
jnp
jmp
cltd
jecxz
aas
jae
in
bound
and
cs
cltd
mov
roll
lock
gs
movsb
add
out
cmp
mov
fisubl
sub
scas
jae
dec
push
mov
and
cmp
gs
jecxz
lock
mov
xor
andl
scas
cmp
push
mov
push
andb
xlat
xor
add
mov
add
push
and
es
mov
iret
add
mov
mov
shlb
stos
ljmp
inc
adc
jno
adc
fisubs
mov
push
rclb
ficoms
out
outsl
mov
imul
shl
sub
loope
cmovo
add
mov
insl
mov
std
insb
pop
sti
inc
mov
and
pusha
ret
mov
ret
out
dec
push
ljmp
adc
out
dec
pop
push
xlat
inc
push
xchg
stos
inc
sub
mov
and
lahf
or
mov
fstl
data16
std
cli
iret
or
xchg
stc
add
push
jbe
jnp
jae
ss
cmc
fisttps
push
pop
repz
jp
dec
lds
mov
xchg
xor
add
xlat
dec
xchg
jp
in
jge
xchg
pop
stc
dec
andb
push
loope
dec
pop
mov
xchg
aam
fnstcw
out
mov
rol
inc
cs
dec
out
sbb
ds
mov
movsl
dec
packuswb
iret
cmp
jg
cmp
xchg
or
mov
push
jb
sub
mov
jl
xchg
push
mov
daa
xorl
and
stos
in
in
push
cwtl
push
mov
scas
push
orl
inc
push
inc
add
xchg
stos
xchg
mov
popf
add
pop
xor
mov
ret
sub
mov
aad
shr
out
aaa
jns
jns
jne
repnz
iret
fidivl
aas
cmp
or
xchg
call
fbld
and
insl
push
push
lock
movsb
xor
loop
mov
pusha
lcall
push
in
adc
fsubrl
and
mov
adc
mov
fistpl
mov
jp
aad
lea
insb
xchg
adc
add
adc
ss
popa
xor
pop
mov
and
push
pop
dec
dec
and
dec
fidivrl
push
movsb
pop
dec
mov
jae
mov
pop
push
xchg
mov
and
mov
jg
imul
andb
jmp
or
and
ljmp
into
jne
lret
and
jge
dec
shll
fdivrl
lock
stc
pop
movsb
mov
pop
jb
push
pusha
stc
sub
inc
fisubl
loopne
xchg
dec
aaa
and
sti
push
aam
scas
ja
scas
jecxz
mov
hlt
pop
fsubl
adc
out
fsubrl
adc
push
inc
lock
xor
and
in
add
or
mov
lret
sbb
and
dec
sarb
sub
push
sbb
pop
jnp
insb
sub
cwtl
orl
loop
rcl
xor
inc
jle
mov
repnz
nop
mov
ret
movsb
push
nop
or
xor
fmull
sub
and
xchg
outsl
fcmove
push
clc
fdivr
mov
shr
mov
loop
cld
xor
xchg
and
sub
cmp
push
loop
ja
or
sbb
dec
adc
ret
popa
push
adc
mov
gs
mov
divb
loop
es
xchg
andb
pusha
in
and
jns
aad
jmp
arpl
dec
mov
jb
es
lahf
fsubrs
shr
inc
push
add
or
jg
sbb
mov
insb
push
jp
add
sbb
test
ficomps
pop
xor
gs
mov
rolb
or
xlat
push
push
jge
adc
mov
inc
push
mov
in
in
mov
dec
push
mov
iret
pop
adc
push
test
xor
sbb
inc
cmp
mov
jmp
dec
and
and
ret
pop
cmp
push
xor
movsb
inc
out
mov
jle
inc
in
xchg
add
lret
dec
sbb
fsubs
pop
daa
jns
sbb
jae
dec
loopne
and
mov
push
sahf
clc
inc
and
dec
xor
cmpsb
or
adc
sarb
mov
hlt
sbb
arpl
sarl
mov
adc
or
mov
loopne
movsb
cmp
mov
jo,pn
cltd
mov
sti
pop
jne
inc
hlt
mov
cmp
xchg
jg
push
mov
inc
push
pop
stc
fisttpll
cmp
stos
jae
out
lods
idivb
repnz
add
push
and
dec
lret
in
and
mov
stc
dec
jno
jecxz
dec
jns
test
cmp
adc
mov
jmp
mov
xchg
jb
and
bound
sti
imul
xchg
mov
jne
mov
cmp
insl
cmp
add
pop
aaa
jmp
and
or
inc
mov
mov
mov
mov
sahf
xor
outsb
mov
mov
enter
and
loopne
imul
cwtl
push
ss
psubusw
faddl
sbb
mov
xchg
push
pop
mov
lcall
data16
imul
aas
movsl
pop
xor
adc
js,pt
popa
ja
clc
lods
mov
or
push
mov
data16
das
loopne
xor
rolb
and
lcall
sbb
aas
mov
jne
adcb
aaa
xchg
imul
fcmovnbe
xchg
dec
add
ret
xor
cli
inc
nop
std
inc
in
push
in
fildll
push
es
xchg
aaa
cmp
enter
xchg
push
nop
sbb
lock
insb
loop
int
mov
cmpsb
hlt
adc
lret
in
add
lahf
outsl
shl
ss
loopne
out
sub
inc
shll
clc
or
popf
icebp
je
push
xor
cld
jns
adc
mov
jae
popf
xchg
test
inc
sarl
lahf
iret
jbe
jno
icebp
jo
and
shll
cs
not
jmp
and
push
jl
aam
lahf
adc
xor
sar
mov
and
jno
mov
test
out
sub
mov
mov
or
xor
sub
add
into
loop
push
adc
lods
addr16
cmp
or
mov
lds
movsl
pop
xor
pop
icebp
xchg
xchg
jbe
pop
repnz
sbb
bnd
sbb
pushaw
adc
jno
jb
imul
out
jae
in
es
mov
cwtl
out
addl
shrl
lret
pop
test
xchg
sub
scas
je
push
sarl
imul
or
adc
mov
xchg
dec
jecxz
insb
call
sbb
or
lea
sahf
adc
push
and
add
inc
mov
mov
out
int
fs
xorl
ds
hlt
fildll
sbb
inc
shl
or
aam
gs
xchg
int3
dec
adc
mov
jl
pop
sbb
fwait
stos
arpl
inc
jmp
arpl
mov
inc
movsl
xor
clc
stos
fs
aam
pushf
mov
pusha
sub
xchg
pop
sub
btc
mov
dec
cmpb
or
pop
adc
and
shrb
mov
ja
sti
and
out
cmp
push
sub
push
aaa
inc
stc
lcall
jns
lods
jg
in
inc
or
jbe
jnp
arpl
pop
and
lods
out
adc
cli
nop
push
mov
push
add
sub
stos
add
mov
aaa
out
lods
mov
jmp
cmp
jbe
mov
cld
mov
and
mov
mov
jl
mov
stos
sub
push
std
insl
or
cmp
dec
jge
mov
dec
ja
push
cmp
dec
push
xor
cmp
push
xchg
in
mov
ret
push
or
imull
cmp
test
fildll
nop
jo
mov
mov
out
push
stos
adc
scas
leave
cld
push
sbb
push
push
rep
test
push
xchg
pop
subl
mov
ret
ret
lcall
pusha
mov
mov
push
aaa
stos
or
mov
mov
sbb
call
enter
dec
mov
lods
push
push
arpl
mov
sbb
addr16
lock
shrl
xor
inc
rorl
pop
push
decb
and
cwtl
mov
push
out
cmp
mov
int3
imul
mov
movsb
xchg
mov
cmc
imul
and
lods
push
es
fstps
pop
and
lock
adcb
sub
and
inc
adc
je
lock
jecxz
jo
loopne
rcl
ficomps
dec
inc
sbb
mov
fnstcw
jl
xor
std
xchg
xor
fwait
in
jmp
xor
loopne
gs
rol
ds
pushf
jbe
movsb
add
xchg
inc
repz
and
xor
fwait
cs
xchg
aas
jge
mov
nop
fwait
adc
iret
push
out
mov
mov
int3
lds
sub
lock
jmp
push
outsb
outsb
aad
inc
fxam
in
popf
or
jg
add
and
shlb
in
in
dec
cltd
or
dec
jnp
sbbb
bound
sub
xor
rcll
sbb
leave
ds
fimull
cli
jle
repz
enter
mov
cmp
sub
sar
pop
enter
mov
push
bound
pop
outsl
repz
jg
icebp
sub
mov
dec
fiaddl
and
pop
mov
scas
pop
icebp
pop
jnp
jmp
test
mov
and
insl
movb
stc
lock
icebp
cltd
movsb
insb
dec
and
repz
fs
push
mov
push
aas
das
out
movsb
std
stc
or
adc
sahf
add
mov
dec
adc
inc
mov
sbb
add
fisubl
mov
enter
xor
ljmp
add
push
and
xor
sub
ljmp
and
sbbl
dec
push
rolb
push
pop
cmpsb
icebp
jno
loop
mov
adc
jno
cmpsb
add
mov
mov
sahf
mov
neg
popf
scas
les
pop
pop
xor
sbb
sub
fwait
lea
fcoml
sbb
lds
test
cmp
cmp
xchg
sbb
fcomps
shr
dec
mov
jae
loop
insb
jbe
dec
ds
dec
rcl
jp
jae
leave
add
cli
mov
fs
lret
push
test
mov
mov
bound
addb
mov
dec
out
mov
and
data16
mov
dec
sahf
lock
sub
dec
xor
test
dec
adc
xchg
lret
inc
push
push
cmc
pop
xlat
jbe
sahf
loop
sub
pusha
aas
add
pop
xchg
and
cwtl
jb
jae
and
popf
dec
mov
jg
mov
mov
aas
inc
jne
repnz
push
enter
jno
cmc
push
dec
gs
sbb
sbb
std
inc
aad
pop
cld
mov
lods
cwtl
jg
dec
dec
pop
cwtl
sbb
ret
gs
dec
adc
xor
and
bound
cmp
mov
cltd
popa
aam
cli
imul
sub
jp
adc
nop
jne
mov
aam
orl
mov
and
je
out
fsub
lea
mov
push
xchg
mov
sarb
hlt
push
push
popa
out
jg
fisubs
enter
sbb
in
and
insb
and
fildll
lret
inc
stc
jle
cmpsb
push
lcall
je
scas
jmp
add
and
fsubl
dec
jnp
fdiv
fwait
lcall
mov
and
ds
outsl
icebp
xor
inc
inc
mov
popa
fwait
pop
pop
dec
mov
add
lahf
ds
in
inc
cli
sub
cwtl
dec
or
mov
shlb
mulb
mov
adc
test
or
jecxz
and
jo
mov
push
lcall
or
clc
mov
pop
repz
xchg
cs
gs
in
daa
loope
mov
icebp
fisubrl
stc
push
subl
test
fsubl
subb
popa
push
addr16
jns
je
sti
cmp
insl
cmp
lret
out
push
int
sar
les
mov
out
nop
push
clc
lock
roll
imul
adc
in
mov
je
push
jb
sub
icebp
xchg
pop
divb
sbb
mov
sub
push
mov
inc
jns
in
jns
pop
popa
add
div
leave
fiaddl
imulb
rorb
gs
clc
xchg
out
cmp
icebp
cmp
stos
lds
sbb
cli
repz
push
jp
lea
aad
fcmovne
push
mov
movsb
out
pop
clc
movsb
addr16
sub
test
push
or
pop
lahf
fmull
stos
jno
test
dec
clc
cs
adc
push
icebp
push
das
imulb
in
jne
rcrb
aam
cmp
int
sub
push
xlat
movsb
imul
jbe
jle
aas
movsl
add
jg
enter
in
cltd
popa
and
loope
sub
add
xlat
incb
std
adc
cmp
fnclex
fneni(8087
or
ret
mov
pop
jne
cmp
jl
add
dec
in
cltd
cs
sbb
jo
pop
sub
mov
jecxz
loop
mov
stos
test
add
inc
dec
enter
mov
and
ds
enter
fsubp
bound
push
or
js
test
hlt
xchg
mov
mov
xchg
fwait
jno
add
dec
jnp
mov
ficoml
fsubs
fwait
jne
cs
lds
xor
outsb
push
jb
daa
sbb
sub
or
icebp
and
xor
add
mov
outsb
roll
add
xchg
sbb
popa
jae
xor
into
rcrb
xor
xor
shrl
dec
sbb
mov
mov
xchg
jle
push
in
push
pop
mov
cli
sub
negb
mov
rcrl
push
xchg
lret
ret
sub
dec
dec
mov
xchg
xor
fwait
push
ret
mov
enter
pop
addr16
movsl
cld
sub
in
jge
shrl
push
arpl
push
xlat
cli
ret
sbb
sub
aaa
insb
es
fidivrl
lahf
sub
ss
aad
sub
push
orb
sbb
dec
push
jg
icebp
add
insb
push
sbb
pop
fadd
jbe
mov
sbb
pop
push
and
push
test
inc
pop
add
call
and
fcmovne
out
sbb
test
mov
adc
jne
mov
add
xor
lret
pushf
or
out
dec
sbb
or
filds
pop
loope
fildl
lds
inc
mov
rorb
xor
or
shll
mov
pop
lret
mov
xor
xlat
out
mov
xchg
stos
or
out
inc
in
add
cmp
iret
cmp
mov
je
test
fnstcw
mov
in
and
mov
jae
movsl
jbe
sbb
fsub
or
clc
mov
adcb
jle
loopne
loope
sub
xorb
popa
ljmp
mov
cmp
cmp
mov
adc
fldt
push
cwtl
adc
dec
out
mov
inc
add
ret
mov
loope
jg
cmp
outsl
dec
pop
test
jle
xchg
and
mov
mov
sti
notl
in
out
imul
mov
adc
xor
call
aam
scas
sub
lods
scas
xchg
pusha
dec
pop
cmp
call
mov
pop
adc
mov
js
fwait
dec
notl
dec
adc
outsb
dec
cld
addr16
incl
jl
xchg
rsm
xor
lea
adc
das
and
into
sti
shlb
lret
orl
lds
repz
stc
inc
xor
or
push
push
cmp
ds
dec
repz
jns
adcl
cmp
aam
into
inc
jae
sub
mov
cli
test
jmp
out
fwait
lret
sub
jb
repz
mov
fcomip
adc
xor
and
pop
mov
jge
into
jge
sarb
arpl
xor
xchg
rcl
mov
pop
data16
mov
pop
add
pop
std
into
lcall
mov
add
dec
and
mov
add
push
popa
sbb
push
xor
sti
cmpsb
inc
or
add
pop
js
mov
pop
pop
imul
out
in
add
xchg
imul
mov
mov
inc
push
enter
lea
or
xchg
push
mov
fistpll
add
scas
out
push
cmpsb
sbb
decl
and
dec
sbb
mov
jo
cld
jbe
adc
cld
clc
popf
xchg
mov
loope
push
mov
pop
sarl
pop
adc
lods
xchg
nop
mov
lea
push
sub
mov
cmc
dec
push
xchg
cs
outsl
lret
jnp
jae
out
in
pop
mov
xchg
adc
mov
xchg
jne
push
insl
cli
mov
xchg
mov
mov
inc
shlb
cmp
ja
sbb
push
hlt
faddl
call
jp
rcl
and
pop
aam
lret
or
push
ret
test
mov
lods
popa
je
pop
mov
stc
les
sub
sub
clc
sub
das
jbe
sbb
sbb
mov
aas
pop
xchg
mov
int3
push
pusha
ret
inc
xor
xchg
addr16
test
mov
sbb
std
pop
push
cmp
mov
js
andb
pop
xor
mov
ss
mov
scas
add
xchg
cmpsl
pop
jbe
and
jnp
mov
jns
movb
push
fmull
into
xchg
add
pushf
shrl
loope
popa
push
daa
out
or
pop
mov
shrl
mov
sub
cwtl
inc
out
and
mov
aaa
push
dec
fisubs
jns
pusha
and
xor
mov
push
ja
divb
mov
aas
mov
jp
cmpsb
enter
sbb
cmpsl
repnz
push
inc
mov
or
cmp
enter
and
cmp
push
pushf
lahf
dec
in
cwtl
repz
mov
pop
push
data16
and
inc
cmpb
ljmp
and
stc
ljmp
sbbl
push
dec
sbb
test
pop
lcall
xchg
subl
jge
jnp
das
xor
out
insb
andl
sar
pop
push
mov
aas
inc
mov
sub
pushf
sti
loope
ret
sti
adc
cs
mov
mov
dec
outsl
or
es
aad
jg
popa
insb
cmp
jge
mov
xchg
fwait
xchg
aam
icebp
movsl
lret
sub
mov
je
push
mov
ja
jmp
enter
sbb
and
decl
jb
aam
data16
add
jecxz
adc
adc
mov
lcall
inc
cmp
shl
cmpsl
jb
fwait
mov
ret
mov
shll
mov
iret
jae
mov
ret
mov
jnp
lods
xchg
pop
push
jne
cmp
test
push
popf
pop
pop
xor
and
sub
stc
or
inc
sub
mov
mov
scas
or
adc
mov
repnz
loopne
out
xor
es
dec
or
lcall
iret
lcall
loope
jecxz
ret
sub
adc
inc
mov
out
out
mov
cmp
aam
pop
inc
pop
mov
pop
divb
std
sbb
mov
push
movb
push
lret
shlb
push
push
cmc
cmp
add
ret
sub
rolb
xchg
push
ja
cs
lea
pop
hlt
add
adc
fstps
mov
mov
xchg
pusha
scas
imul
pop
sbb
popf
sub
pop
dec
lahf
mov
cmp
out
push
mov
add
inc
dec
rcll
out
cld
sub
pop
sbb
mov
scas
and
lds
stos
fwait
jmp
fs
movsl
jne
dec
imull
xor
adc
xchg
push
xchg
cmp
jle
imul
in
xchg
push
icebp
arpl
nop
pop
sbb
push
jmp
inc
cmc
lahf
int3
xor
mov
data16
push
dec
cmp
lret
cmc
cmpsl
push
mov
inc
leave
ja
rclb
cmpsl
xor
cs
push
cmp
hlt
sub
jle
dec
mov
in
mov
fwait
jae
pop
imul
aas
call
outsl
xlat
jle
into
insb
sti
shll
and
sbb
ret
lock
add
dec
out
add
mov
inc
adc
adcb
push
push
mov
inc
pop
enter
push
push
repnz
fdivr
fmuls
add
mov
mov
ja,pt
dec
sahf
mov
xor
pop
mov
ja
jge
mov
jae
cmp
add
push
xchg
jmp
xchg
push
inc
inc
jbe
in
test
mov
pop
jno
inc
xor
mov
aad
mov
fsubrs
pusha
aam
int3
das
inc
and
mov
in
cmp
mov
push
arpl
movsl
int
push
mov
jle
mov
pusha
dec
dec
xchg
push
rolb
sti
inc
das
add
fsts
add
push
sub
fdivl
imul
lds
mov
mov
xchg
les
lcall
int3
aaa
fwait
push
xor
mov
addr16
dec
jno
ds
push
lcall
fadd
sub
cld
cmpsb
jl
mov
xor
mov
pop
in
rcrb
and
and
push
mov
dec
push
inc
fucomi
cmpsl
mov
mov
push
aad
dec
dec
add
cmp
mov
test
add
out
mov
lret
push
hlt
ds
jp
outsl
jnp
scas
lret
dec
mov
inc
inc
in
inc
xchg
adc
fs
fcmovbe
cmc
jmp
mov
clc
mov
sub
jae
lea
idivb
mov
inc
or
js
jge
sbb
mov
push
or
jecxz
movsl
leave
imul
in
addr16
das
ds
fwait
jnp
enter
lds
xchg
sub
out
inc
xchg
inc
je
jg
idivb
scas
mov
and
ss
lcall
in
addb
mov
ret
jne
pop
xchg
pushl
xchg
jbe
or
dec
in
repz
shr
dec
ficoms
lea
dec
mov
pushl
mov
stos
mov
dec
imul
jo
lods
adcl
add
xchg
out
inc
ja
fwait
mov
nop
xchg
subl
popa
sbb
fs
movsb
gs
mov
insl
adc
add
mov
pop
and
xchg
es
sub
pop
or
dec
shr
sarl
pop
popa
sub
jmp
mov
int3
pop
outsb
mov
xor
inc
pop
cmp
cmpl
add
out
pop
loope
dec
xlat
aam
mov
cld
test
add
cmp
pop
ret
xor
jno
les
mov
lret
fstl
mov
push
les
addl
test
in
push
pop
negl
sti
rcrl
pushf
movsb
xor
sbb
cmp
gs
pop
add
mov
lret
mov
rorb
das
mov
imul
loop
sub
leave
or
mov
xor
jmp
and
gs
lcall
enter
aam
int
and
and
pop
ret
jns
iret
inc
outsb
adc
js
add
sbb
inc
push
push
mov
inc
mov
fists
ds
xchg
mov
lret
pop
stos
or
jns
xchg
lods
fucom
arpl
or
leave
sbb
xchg
cmp
or
les
movsl
arpl
dec
push
into
sbb
xchg
popa
test
adc
jae
test
push
cmpsl
mov
push
cmc
int3
jecxz
scas
and
in
cs
lret
imul
dec
xchg
sbb
push
aam
test
pop
jnp
sbb
or
cmpsl
or
cld
mov
out
test
push
mov
arpl
pushf
out
pop
lret
dec
mov
sti
rcr
lcall
fldcw
in
cmp
sbb
jmp
and
je
icebp
int
icebp
inc
mov
fisubrl
xor
pop
xor
push
sbb
fbstp
mov
lahf
outsl
cwtl
loopne
out
add
and
in
pop
in
mov
sti
mov
int3
lock
imull
data16
jge
pop
sbb
rcr
clc
sbb
push
loop
icebp
jle
scas
or
sbb
orb
outsb
push
arpl
pop
cltd
aad
imul
dec
sbb
xlat
cmpl
mov
lea
mov
jne
popa
cmc
jmp
cltd
clc
pop
out
aad
mov
xchg
lret
and
imul
in
pop
mov
iret
adc
mov
nop
dec
addb
popf
and
pop
adc
sub
and
cmpsb
lret
insl
int3
or
add
outsb
sub
xor
pop
popa
xchg
clc
push
stc
xchg
add
cmp
cmp
mov
adc
test
lods
das
mov
sahf
pop
jecxz
js
shl
mov
sbb
pop
stos
pop
push
cld
pop
imul
add
out
xor
and
sub
aaa
dec
les
outsl
jg
pop
idivb
pop
bound
test
or
hlt
loopne
fwait
stos
lea
mov
ja
addr16
push
sub
loope
ja
jle
pmaddwd
vrcpps
push
dec
pusha
mov
popf
outsl
xchg
or
xor
mov
pop
cmp
into
nop
cmp
popf
repnz
sub
jle
dec
dec
int
insl
ja
lds
stos
pop
out
sub
test
xchg
incl
lock
add
sub
add
jge
repz
adc
outsb
ret
stc
add
outsb
scas
out
in
cmp
mov
cmp
subl
lds
outsb
rcl
adc
outsb
jecxz
js
pushf
ljmp
lock
fdivr
mov
mov
push
stc
adc
pop
aas
jbe
jae
and
sbb
xchg
push
jg
insl
pop
mov
xchg
mov
xchg
add
push
test
sub
test
add
push
pop
dec
lret
add
mov
xor
in
dec
pop
mov
inc
sub
fisttpll
clc
fists
mov
cmp
sbb
xchg
push
sbb
imul
mov
cmp
pushf
lds
inc
fwait
add
jg
inc
insl
push
adc
sahf
xor
scas
jp
inc
mov
in
pop
xchg
leave
test
jmp
bnd
andb
mov
sbb
out
ret
jbe
adcb
cmpl
jae
int3
and
mov
mov
cltd
stos
push
inc
and
mov
test
stos
sub
scas
inc
jae
ds
fs
and
xor
popa
mov
inc
xor
and
sub
test
xchg
dec
xor
mov
jl
push
adc
sbb
cmc
jg
fisubs
push
popa
insl
mov
cmp
mov
sbbb
addr16
mov
mov
push
lock
ss
sti
xor
mov
pop
inc
lcall
xor
in
pop
out
sarl
and
or
dec
or
cwtl
insl
pop
aas
repnz
ss
pop
mov
aas
push
inc
inc
sub
out
pop
out
push
or
inc
js
mov
sbb
and
pop
into
shrl
movsb
insl
dec
fcmovb
pop
sti
adc
push
gs
mov
push
test
jne
gs
mov
ss
sbb
lods
rolb
and
sbb
mov
xchg
iret
daa
jecxz
rol
mov
cli
rcr
lahf
dec
sbbb
xlat
int3
push
int3
xor
cmpsl
adc
aad
pushf
pop
mov
or
or
daa
pop
pop
push
add
xlat
jns
mov
xor
pop
jae,pn
addl
inc
sub
sub
sbb
lahf
cmc
jle
inc
jp
xchg
push
sbb
pop
and
ret
sti
pop
ret
loop
mov
jmp
mov
sub
sbb
mov
jmp
mov
or
mov
repnz
popf
scas
mov
mov
lods
or
cli
movsl
ja
insb
testl
movb
out
sbb
lds
adc
nop
pusha
scas
ljmp
ss
arpl
adc
mov
pusha
mov
insl
add
mov
mov
into
push
out
xor
jae
jmp
outsb
pop
cli
xor
aam
or
dec
xchg
data16
ret
push
or
sbb
dec
mov
jbe
inc
sbb
and
enter
inc
in
adcb
loope
xor
nop
test
cmp
cmp
and
dec
call
sub
aad
mov
rorb
pusha
and
xchg
pop
and
imul
add
xchg
cli
int
jg
pop
and
xor
pop
inc
pop
fiaddl
push
aad
imul
dec
gs
fwait
mov
dec
loop
dec
sbb
js
add
popa
push
int3
cmpsl
sub
xor
into
lret
data16
pop
pop
stos
push
xlat
add
sub
mov
into
movsb
test
das
outsl
push
push
fdiv
into
call
cmp
fwait
jle
clc
xor
andl
jo
and
mov
xchg
out
pop
mov
mov
sbb
mov
xor
hlt
sub
in
lcall
flds
xchg
lret
lcall
std
push
sahf
cwtl
int3
sub
and
inc
je
rcrl
adc
pushf
fbstp
imull
outsl
loope
xor
sub
fcom
adc
leave
stc
movsw
cmp
aaa
iret
and
dec
dec
cmp
movsl
loope
lods
imul
xchg
out
mov
iret
outsb
sbbb
aad
bound
leave
sbb
outsl
inc
pop
jg
pop
mov
outsl
movsb
pop
add
bound
mov
adc
pushl
ds
scas
pop
jp
sbb
xor
xchg
adc
and
push
popf
mov
rolb
loopne
jae
loopne
mov
xor
pop
adc
dec
jo
mov
pop
mov
cmpsb
adc
sub
out
mov
ljmp
jns
faddl
ljmp
imulb
mov
ja
dec
xchg
repnz
pop
and
shlb
jecxz
in
and
adc
in
out
sbb
adc
jb
mov
je
mov
mov
push
fisubl
fimuls
adc
add
faddl
in
push
shlb
push
lret
dec
enter
pop
jg
add
dec
in
sub
push
cmp
test
cld
enter
mov
addr16
pop
push
icebp
sub
movsb
rcrb
xchg
int3
into
cwtl
sub
sbb
cmpsl
call
clc
xor
sbb
mov
cwtl
sub
pushl
and
xchg
sub
mov
sbb
insb
ret
int
or
out
fiadds
push
adc
cs
lods
xor
cmc
imul
mov
xchg
fdivr
dec
js
aad
mov
sbb
mov
mov
dec
sahf
test
cmpsl
mov
mov
push
xor
addr16
add
int
dec
enter
pop
mov
loopne
leave
push
xor
adc
jge
test
sahf
fucom
sbb
xor
sahf
jecxz
jmp
lret
cli
jecxz
pusha
xchg
inc
test
aas
fsubs
mov
lds
stos
mov
jo
dec
push
out
stos
push
mov
mov
sbbb
xchg
jnp
pop
sahf
imul
sub
int
inc
sahf
or
pop
nop
test
loopne
xchg
sti
and
aaa
filds
jns
adc
xlat
out
sub
push
fimull
push
jg
lock
aam
push
mov
xchg
outsl
aam
movsb
aam
out
cmp
push
loope,pn
mov
mov
je
insb
cmp
dec
xchg
lods
arpl
sbb
inc
out
jmp
bound
mov
lahf
cltd
add
inc
xchg
int3
loop
aas
xchg
jp
xor
iret
mov
cli
ret
cmc
dec
sub
jno
cmp
pop
je
cmpb
rorb
xor
sbb
mov
js
xor
aad
pop
les
or
push
in
xchg
int
xor
icebp
or
cli
arpl
cmp
outsl
xor
fs
out
mov
outsl
add
pop
mov
mov
and
mov
imul
iret
adc
cltd
rcrb
jmp
enter
pop
dec
and
or
or
lret
push
mov
push
push
xor
xchg
sarb
sbb
xchg
sbb
cmpl
cmc
shl
sbb
out
cmpsb
out
mov
mov
sub
xchg
mov
jns
mov
aaa
nop
and
insl
mov
test
jne
mov
in
and
je
ret
repnz
inc
xor
fistps
or
cmpsb
out
ret
mov
adc
sub
pop
cld
int
shll
xchg
sub
sub
cmpsl
mov
pop
jo
xchg
or
jo
inc
lods
inc
call
ficomps
cmp
add
iret
pop
fldenv
cld
jo
daa
dec
out
es
jo
mov
fcmovnb
jle
inc
dec
push
adc
jo
jbe
push
cmp
pusha
mov
xchg
xor
jmp
jns
lret
mov
cs
xchg
jl
adc
loopne,pt
scas
andb
outsb
loope
lock
sbb
stos
aam
lea
mov
mov
add
add
fucom
scas
or
ljmp
out
lods
sbb
rcrb
test
sub
push
pop
scas
repz
inc
sbb
and
and
dec
sub
sub
inc
rcrb
cmc
lods
out
push
sbb
fwait
mov
add
fnstenv
mov
pusha
pop
int
fisubrs
cmp
out
insb
aam
popl
mov
xor
imul
push
fisubs
cmp
popa
int
xchg
arpl
add
and
ror
lea
fwait
cld
push
jecxz
push
inc
pop
ror
scas
fsubrs
lret
jmp
ret
cmp
jmp
mov
mov
cmpsl
imul
lahf
subl
mov
xlat
inc
popa
mov
xor
lods
pop
and
repnz
xor
pop
arpl
xchg
jb
ljmp
add
iret
xchg
xchg
inc
imul
jns
iret
lock
cmp
and
icebp
pop
or
ficoml
push
jecxz
dec
push
push
sbb
jbe
enter
lahf
inc
pop
lods
jb
add
xlat
js
fwait
pop
push
xchg
jb
std
pushf
leave
sub
rcl
bound
ret
xchg
push
pop
jp
inc
ret
xor
pop
xor
das
sub
sub
pop
add
lahf
mov
into
addr16
imul
into
mov
fcmovbe
je
les
arpl
mov
push
adcl
jae
sbb
sbb
mov
cmpsl
ret
sti
ss
cmp
push
outsb
xor
xchg
push
add
pushf
push
add
scas
pop
dec
mov
add
adc
stos
jge
pushf
addl
adc
add
cmpsl
inc
ret
xchg
inc
add
mov
push
in
or
lods
fldenv
jecxz,pn
fdivrp
jb
hlt
lds
jmp
bound
pushf
sub
push
pop
divl
fst
jmp
shlb
loope
mov
out
mov
andl
mov
mov
sbb
shlb
imul
fmuls
mov
mov
pop
mov
sub
repz
aas
mov
loope
jmp
or
push
dec
js
mov
loope
push
dec
scas
daa
xchg
dec
out
test
inc
icebp
out
lea
sub
mov
bound
cmpsb
lock
lret
xor
cltd
push
aaa
cmpsl
xchg
push
jecxz
adc
xchg
sti
jp
xchg
and
inc
cmp
popa
imul
mov
outsl
mov
subl
pusha
pop
rorl
push
leave
in
roll
lds
rcrl
loope
ja
pop
scas
mov
fdivr
dec
enter
or
jne
jbe
lcall
gs
inc
sbb
arpl
insl
mov
jmp
pusha
adc
mov
fwait
cmp
icebp
dec
jl
sbb
cld
test
jnp
inc
out
inc
leave
cmp
test
jecxz
imulb
lods
add
mov
nop
adc
les
cmpsb
hlt
lock
into
add
in
repz
inc
pusha
push
dec
cmpb
test
cs
out
sbb
hlt
push
in
inc
cld
pop
pop
ds
enter
out
mov
test
push
pusha
mov
loope
rcr
push
mov
sbb
pop
mov
sub
mov
or
jno
pop
fwait
pop
dec
shlb
jnp
outsb
addb
pop
es
loop
add
adc
loop
xchg
cmc
shrb
mov
addr16
leave
and
cmp
inc
lahf
sbb
cmpsl
aaa
xor
jecxz
sbb
sbb
ret
notl
mov
xchg
jmp
add
mov
sti
xchg
push
enter
xchg
sub
lret
mov
jle
push
in
mov
les
scas
rcr
xchg
jne
xchg
das
jno
sub
daa
lret
jl
sub
aas
cmc
sub
int3
ljmp
inc
ret
lret
cmp
int3
iret
test
es
push
and
push
std
ret
xchg
mov
je
aam
add
dec
pop
pop
dec
and
inc
mov
int
mov
jne
cmp
movsl
data16
pop
inc
cmpsl
lcall
nop
mov
stos
mov
fiaddl
and
icebp
xor
shrb
js
sub
hlt
ficomps
jb
xor
push
lcall
xchg
int
iret
out
push
test
sbb
lods
adc
dec
jbe
lock
dec
xorb
cltd
dec
add
add
scas
push
les
out
sbb
sar
or
inc
jno
notl
push
sub
xchg
xor
lods
aam
fadds
pop
popf
out
push
ljmp
jp
insb
mov
cmp
cs
out
inc
xor
mov
pusha
xchg
cltd
or
lods
xchg
negb
aas
dec
cwtl
enter
push
cs
gs
pop
pop
mov
rolb
loope
idivl
pop
fiaddl
mov
inc
push
push
push
pop
dec
movsl
jle
fdivs
in
sbb
mov
dec
inc
sub
adc
push
push
cmp
inc
aad
pushw
loope
js
push
push
int3
sub
frstor
push
repz
mov
mov
or
adc
daa
shlb
sub
test
out
pushl
mov
test
mov
inc
fwait
ret
in
dec
or
inc
fistps
inc
xchg
push
sbb
add
mov
stos
xchg
pop
repnz
mov
or
movsl
imul
dec
repnz
out
inc
dec
adc
sub
jne
fistpll
sbb
mov
push
fadd
mov
arpl
xor
fdivrs
addr16
mov
mov
xor
aaa
fbstp
push
fidivs
inc
loope
and
fwait
out
mov
movl
mov
mov
sahf
data16
rcll
pop
outsb
mov
cmp
daa
aaa
mov
imul
stos
sbb
pop
adc
jmp
ss
jne
ficompl
iret
shrb
pop
xchg
sbb
xlat
jno
pop
ficompl
cmc
mov
dec
dec
push
jno
stos
mov
jmp
test
adc
in
xlat
cmp
stos
jnp
mov
je
jge
loop
mov
jns
ret
pop
mov
inc
mov
imul
clc
ss
mov
cmp
mov
insl
test
cld
daa
add
lahf
mov
les
jmp
mov
aad
sub
mov
or
mov
mov
or
push
adc
lock
inc
mov
adc
mov
movsb
and
mov
push
pop
jo
adc
add
jmp
arpl
mov
sbb
sbb
sbb
mul
adc
xor
mov
test
cwtl
aas
fidivrs
enter
xchg
mov
mov
and
xlat
pop
imul
test
ds
js
add
rorb
pop
rol
nop
daa
push
or
add
push
lahf
cmp
fwait
xchg
dec
ds
add
es
test
inc
lahf
push
mov
dec
sbb
add
sub
xor
pop
cmp
repnz
adc
imul
lret
leave
test
jl
fwait
pop
cs
inc
frstor
rclb
add
adc
sahf
pop
je
push
lods
into
popf
hlt
sbb
mov
ljmp
into
sub
push
and
xor
adc
push
out
mov
aam
pop
cld
xchg
xchg
jnp
sbb
adc
cs
sbb
dec
in
insl
push
mov
push
and
cs
inc
pop
sbb
and
hlt
inc
adc
sub
scas
pmuludq
jl
outsl
cmp
adc
je
ret
inc
pop
or
xor
bound
cmp
inc
pop
pop
fisubl
add
shlb
or
mov
pop
lcall
dec
mov
in
jae
insb
mov
imulb
jae
inc
jg
add
loop
push
lods
add
ficomps
out
cli
dec
mov
mov
xchg
les
lcall
out
out
add
std
inc
repnz
add
mov
loopne
rolb
pusha
xchg
adc
inc
ret
bound
incb
addr16
jmp
mov
mov
testb
les
testl
or
and
popa
inc
add
rclb
xor
int
mov
test
push
test
insb
mov
or
mov
mov
xor
int
mov
adc
call
fisubrl
leave
es
mov
or
sbb
movsb
xor
addb
pop
sbb
test
mov
push
fisubrl
subb
mov
mov
jmp
arpl
hlt
pop
lea
movb
sbb
lretw
cltd
les
pop
xchg
lret
addr16
pop
jle
pop
ret
xchg
and
mov
aaa
jle
mov
cltd
jne
push
bound
in
and
fstl
pop
push
cwtl
push
es
jp
xor
ret
add
sbb
pushl
les
rcrb
mov
ret
or
out
movsl
sbb
adc
jo
xchg
outsb
xor
or
int
addr16
xchg
xor
mov
daa
xor
adcb
and
push
into
jno
test
out
stc
inc
je
insb
mov
and
mov
ss
enter
sbb
adc
repz
dec
out
xchg
lahf
dec
sbb
orl
mov
or
add
jbe
add
outsl
add
push
mov
cs
cmp
ret
outsl
xchg
nop
mov
addb
push
shr
mov
sub
jmp
sub
mov
out
sarb
mov
adc
xchg
imul
int3
sub
mov
mov
pop
jecxz
rcrl
mov
je
lcall
pmulhuw
mov
outsb
xchg
pop
dec
popa
dec
in
xor
xorb
sub
loop
sub
mov
pop
std
mov
ljmp
xchg
push
call
out
ja
pushf
imul
push
test
or
std
stos
jo
jo
and
xchg
sbb
mov
out
pushl
dec
enter
jb
pop
ss
sub
inc
inc
add
push
sbb
stc
jnp
test
lret
or
push
sahf
movsl
push
add
xchg
mov
push
dec
push
sar
lahf
clc
xor
fidivrl
outsb
push
add
out
into
pop
in
cli
pop
cmc
in
sarb
clc
mov
js
sahf
push
push
pop
mov
push
xchg
jge
fimuls
adc
pop
cmp
mov
aam
xor
subps
add
sub
mov
or
repnz
idivb
xchg
adc
or
cmp
push
push
inc
fwait
xor
mov
push
jmp
adc
push
mov
jmp
movsb
shlb
movsb
hlt
sub
movsb
fmuls
push
arpl
push
fildl
inc
jbe
xchg
push
push
pusha
mov
xchg
mov
loope
mov
ret
dec
loopne
bound
or
inc
mov
addb
inc
mov
mov
cli
in
fcmovbe
xchg
nop
pop
fwait
adc
mov
mov
mov
cmp
inc
movl
repnz
jo
dec
mov
cmp
lea
lods
mov
dec
adc
push
and
je
mov
xor
rclb
mov
jl
js
aaa
fsubrp
xor
xchg
lret
int
and
cltd
test
add
dec
mov
ja
add
push
adc
xchg
ja
mov
sbb
xor
icebp
enter
in
mov
lock
call
rcr
aam
xor
push
rcl
test
xor
pop
lods
popf
into
nop
stos
idivb
stos
mov
cmpsb
fbld
enter
pushf
rorl
pop
jo
xchg
xchg
sbb
xor
adcb
mov
push
inc
pop
and
int
jbe
test
push
scas
je
and
sub
or
jge
repnz
pop
sbb
and
jne
push
push
iret
scas
jns
dec
aaa
adc
mov
push
sahf
mov
inc
out
xchg
loopne
sahf
jbe
push
pop
lret
adc
or
out
jo
mov
cmp
mov
aaa
adc
or
mov
sbb
sbb
pop
dec
pop
lods
jge
sub
push
sarl
xor
stos
cmp
mov
icebp
add
out
and
lcall
loopne
xor
sub
push
sub
fs
jg
sahf
sbb
jge
mov
push
pop
hlt
xchg
mov
or
fbstp
push
out
cmp
iret
jmp
sti
inc
xor
pop
subb
das
mov
mov
je
dec
mov
lock
mov
scas
adcl
ljmp
and
xlat
mov
xor
mov
fcmovnb
mov
add
mov
andl
rcl
cmp
mov
into
xchg
xor
dec
and
xchg
push
cmp
push
dec
adc
push
mov
clc
sbb
or
pop
sbbl
aaa
mov
mov
lret
int
push
and
mov
outsl
dec
ljmp
movsb
mov
ljmp
xchg
cmc
call
push
mov
jae
dec
xchg
and
adc
xchg
out
add
sbb
insb
jle
divl
push
mov
insb
popl
les
lea
inc
es
lods
push
or
xor
les
cs
enter
addr16
leave
movsb
in
popa
push
out
andb
pop
and
xlat
movsl
lock
xor
outsl
clc
jge
lret
hlt
in
scas
jg
pop
sbb
in
adc
orl
jg
jl
xor
dec
xchg
pop
jle
inc
in
shll
sbb
jp
arpl
inc
ret
in
push
addr16
mov
xor
mov
sti
das
add
scas
dec
xchg
ljmp
mov
mov
inc
mov
iret
lcall
xchg
mov
les
js
sbb
gs
mov
push
std
sub
arpl
mov
lods
fadds
cmc
nop
popa
xor
lock
loopne
jmp
xchg
mov
jns
out
das
arpl
or
sub
or
cltd
test
cltd
fstpt
push
jno
into
lret
shl
sub
scas
int
addb
jns
clc
cmp
xor
setae
mov
dec
adc
mov
cmpl
dec
or
inc
add
mov
jl
ljmp
in
add
pop
les
ljmp
inc
fnstenv
mov
cs
jg
xor
inc
cmp
sbb
insb
mov
stos
fistl
inc
nop
sbb
mull
addr16
rcll
out
inc
adc
jo
loopne
rclb
pop
imul
cmp
out
std
shll
scas
outsl
ret
and
sahf
lret
lds
sub
loope
shl
dec
mov
xchg
out
into
adcl
mov
mov
in
fwait
adcb
cwtl
lods
and
jmp
xor
sbb
rorl
xchg
shl
xor
test
lret
dec
mov
das
push
bound
enter
aaa
jecxz
repnz
push
pop
cli
sub
or
mov
lods
xor
sub
ja
in
frstor
mov
mov
xchg
call
mov
cli
push
fnstcw
pusha
add
loop
xchg
fidivl
daa
jbe
icebp
sub
popa
inc
pop
pop
ljmp
rorb
sub
and
inc
andl
xchg
jnp
jb
test
cmp
shrb
lret
xchg
xchg
cltd
jmp
lret
pop
shlb
adc
dec
dec
lret
mov
dec
jbe
inc
xchg
mov
xchg
pop
fnstcw
les
ds
test
pop
lods
std
add
rcrb
jl
in
and
daa
loopne
dec
xchg
add
pop
ret
jge
or
mov
mov
pop
jl
cmp
outsb
mov
mov
or
cmpl
jo,pn
int3
or
jle
xchg
or
mov
and
mov
sti
icebp
sbb
dec
xchg
push
pop
push
add
hlt
sub
mov
jle
cmp
add
mov
fstpl
lds
xchg
not
jbe
mov
outsl
mov
jecxz
stc
mov
xor
lret
fisubrs
sub
repz
inc
add
popl
cmc
mov
cmp
jns
xchg
xlat
pop
push
mov
xchg
fadd
push
outsl
fildl
jmp
std
mov
xor
cmp
xor
and
add
icebp
std
pusha
clc
fwait
sbb
std
rcll
fadd
les
lret
ss
push
sti
pop
sbb
jbe
xchg
rolb
lods
test
xchg
xor
xchg
sti
or
xchg
fbld
cmp
out
xchg
insb
inc
mov
inc
adc
divl
adc
mov
adc
jle
pushf
not
imul
lods
fwait
xor
cmp
pop
xor
test
sbbb
fcoms
sbbb
add
sub
mov
jl
mov
movsb
js
aaa
and
adc
repnz
stos
std
jge
fdivrs
hlt
aam
pushf
stos
pop
xor
fidivrs
or
or
push
hlt
sbb
pushf
shll
and
ljmp
adc
xchg
mov
decl
sti
inc
mov
mov
scas
pushf
stos
dec
jmp
jg
dec
leave
push
sub
cmp
into
mov
cltd
call
cmp
int3
lods
nop
jp
es
pop
xor
sub
push
jae,pt
dec
in
lret
fwait
leave
jl
es
ds
mov
xchg
mov
adc
dec
adc
lret
movsl
mov
ret
dec
negb
jmp
jns
sbb
pop
adc
inc
das
sbb
sub
outsb
sub
inc
or
addr16
inc
push
sub
testb
fcompl
loop
cmp
or
jle
jp
loope
pop
in
es
les
stos
jnp
outsb
mov
shrl
enter
pop
xchg
test
push
lahf
cmp
ret
cmp
cmc
jmp
sub
cmp
adcl
mov
inc
push
lds
xor
stos
pusha
insl
adc
cmpl
int3
mov
cli
mov
cmp
dec
xor
mov
xor
or
mov
iret
shlb
jno
repz
nop
inc
push
sbb
dec
mov
imul
divl
pop
sbb
int3
lock
mov
ss
inc
xor
mov
sbb
repnz
loope
pushf
push
daa
scas
and
jae
mov
pop
stos
imul
push
addr16
or
cmp
ds
subb
ret
sbb
scas
lock
movd
hlt
xlat
nop
jne
sbb
mov
push
aad
push
sti
nop
call
stc
jb
std
in
adc
movsl
daa
or
mov
rcl
xor
scas
mov
pop
leave
and
into
dec
ds
popa
sti
jl
xor
les
pusha
pop
ljmp
jns
dec
and
xchg
or
cmpb
inc
ret
push
stos
lahf
pusha
cmp
inc
dec
pop
xchg
pop
movsb
insl
pop
add
lea
mov
jmp
sub
test
aad
jp
push
push
xchg
sbb
pop
xchg
fdivl
sti
nop
dec
or
mov
pop
les
adc
sub
mov
int
mov
out
imul
iret
mov
mov
data16
lds
push
ljmp
bound
lea
cld
movl
insl
mov
repnz
lahf
out
inc
addb
das
sbb
inc
sub
fiaddl
lret
sub
xor
xor
inc
andl
cmp
scas
or
cmp
cs
fcmovne
push
push
or
out
adcb
lahf
jo
sbb
inc
addl
xor
jecxz
dec
inc
ja
mov
aas
in
mov
sub
hlt
mov
adc
call
adc
jne
and
and
outsl
aaa
nop
sbb
data16
mov
xchg
inc
clc
ficoms
ljmp
insb
mov
add
mov
cmp
sbb
mov
fs
inc
les
es
push
inc
prefetchwt1
pop
leave
repnz
jl
xchg
sbb
int3
rorb
sbb
mov
jecxz
inc
negb
or
jb
div
mov
imul
inc
mov
ss
psrlq
cmp
imul
xlat
xor
xor
jns
jb
mov
xor
jmp
loope
xor
sti
sbb
into
mov
and
fcomps
popf
into
xor
mov
mov
in
and
addb
rcr
and
out
jo
inc
jmp
lret
repz
sbb
mov
mov
add
jae
leave
mov
or
or
and
xor
push
push
cmc
scas
std
jge
mov
les
xchg
jo
cld
sbb
nop
xchg
pop
bnd
and
mov
shlb
pop
sti
xlat
jns
sbb
dec
out
push
xchg
lock
dec
jnp
rorl
cmp
add
adc
push
in
push
push
jge
rorl
push
shrb
xor
mov
cmp
loope
movsb
sahf
xor
roll
and
push
iret
aam
mov
or
rcll
icebp
ss
insb
paddsw
xor
lret
out
mov
inc
rep
mov
mov
adc
jge
inc
adc
ljmp
push
jl
mov
lods
adc
ljmp
rcll
add
dec
sbb
cmp
out
cmp
popf
popl
xchg
cmpsb
or
in
loop
jae
xchg
icebp
mov
mov
xor
aam
push
or
sbb
repz
push
sahf
xchg
je
leave
inc
dec
mov
movb
imul
cmp
push
inc
dec
stos
enter
test
lds
mov
adc
hlt
sbb
nop
sub
add
mov
js
cmp
xor
arpl
add
retw
pop
in
sbb
mov
sub
mov
lret
xchg
sub
in
push
and
jb
jecxz
cmpl
popf
in
lds
and
cmpsb
push
mov
shll
test
xor
jmp
jg
aad
jg
cmp
popf
jo
pop
daa
add
repz
mov
sbb
xchg
push
dec
pushf
mov
push
mov
jo
inc
and
jle
lods
es
dec
loop
jno
fwait
cs
or
into
xchg
jmp
or
cmc
and
xchg
mulps
call
mov
cmpl
outsl
xor
mov
pop
cmp
fsts
in
push
scas
adc
enter
pop
lret
arpl
push
sub
movsb
jge
loopne
dec
popl
jnp
enter
loopne
imul
ds
lods
jno
and
push
and
pop
xchg
add
popf
push
outsl
jbe
sub
mov
sbb
mov
stos
int
dec
outsb
arpl
jo
mov
ds
sahf
jno
je
push
dec
jbe
faddp
lods
lock
cmp
lods
adc
in
jl
loopne
bound
cmp
pop
mov
lret
imul
out
jecxz
or
mov
xchg
js
loopne
int3
mov
sbb
inc
test
sub
cmp
test
pop
repnz
mov
das
mov
into
and
cmpsb
fwait
scas
movhps
push
pop
jg
cmp
in
add
addr16
daa
arpl
loop
mov
sub
shr
fmuls
cmp
ret
adcl
push
mov
mov
mov
add
xchg
pop
sub
outsb
bound
jecxz
popf
sbb
ljmp
cmp
adc
sub
stc
popl
adc
jns
cmp
es
pop
aaa
movsl
out
mov
test
pop
lds
mov
sub
mov
ds
lods
cmpsl
js
mov
ficoml
mov
enter
mov
add
mov
push
push
xor
cltd
mov
and
mov
xor
cmp
pop
mov
add
stc
mov
rcr
push
in
sahf
jmp
push
pushf
cwtl
movsb
idiv
cmpsl
or
in
sub
xor
push
add
insb
cmp
xchg
add
push
nop
pop
cmpsb
xchg
popa
cmc
mov
dec
int3
fiaddl
aam
out
subb
add
xor
lret
mov
clc
pop
or
sbb
sbb
push
mov
xchg
jecxz
fsubrs
or
pop
cmp
xlat
sti
clc
std
sub
and
sub
ficoms
iret
icebp
imul
mov
jo
fcmovnu
gs
aam
sti
fwait
push
sahf
stc
xor
std
xchg
xchg
pushf
jns
pop
pop
add
jnp
icebp
es
lcall
lahf
imul
addr16
popa
mov
sub
lret
mov
out
lods
xchg
xcrypt-cbc
cmpsl
xchg
cbtw
push
daa
inc
and
inc
outsl
and
je
out
repnz
int3
push
ja
fs
adc
mov
and
jnp
stos
cmp
femms
fbstp
cmp
cwtl
cwtl
add
nop
sbb
fadd
aaa
dec
loopne
xor
mov
dec
inc
mov
add
inc
push
test
imul
cs
sub
sbbb
mov
and
rol
xor
adc
dec
iret
add
loope
dec
call
mov
push
cmpl
test
or
shlb
sub
jmp
push
or
movsl
mov
mov
js
xchg
pop
xor
lret
pop
xchg
mov
arpl
mov
xchg
jb
lcall
or
aas
fiaddl
pop
sub
inc
push
aas
xchg
lcall
icebp
pop
and
test
or
or
into
pop
pop
insl
popa
xchg
pusha
or
mov
xchg
jb
and
pop
in
int3
xlat
cltd
push
clc
push
xchg
inc
push
push
jl
dec
pop
xor
imul
inc
push
mov
and
adc
jecxz
pop
cmp
pop
je
cmp
lods
push
leave
push
ljmp
push
loop
and
xchg
addr16
shrb
adc
out
je
outsl
xchg
push
or
dec
leave
dec
ss
dec
mov
cmp
or
test
cmp
mov
popa
aad
xor
jno
jbe
das
lcall
xor
pop
clc
xor
adc
les
enter
cmp
xchg
xchg
jge
ljmp
pushf
repnz
sub
int3
mov
xor
xchg
mov
inc
mov
cmpsb
mov
lret
in
lods
aas
xchg
lret
idivl
jmp
mov
jge
mov
fiadds
cli
rclb
ljmp
test
rol
pushf
inc
daa
jb
mov
mov
xchg
inc
sbb
cmp
cmp
jne
jmp
mov
mov
mov
rolb
push
pop
lds
loop
insb
xchg
push
js
add
jmp
imul
sbb
push
mov
bnd
jno
cmp
lds
out
call
popf
inc
std
dec
xor
jb
jmp
mov
pop
mov
add
inc
movsb
sbb
adc
mov
ja
mov
lret
or
arpl
pop
xchg
mov
jne
inc
adc
pop
shrb
repz
cltd
lods
out
xor
push
cmp
pop
mov
ljmp
daa
or
enter
in
mov
fisttps
pop
sub
and
iret
xchg
sub
mov
lret
movsb
cmpsl
jmp
or
out
out
scas
int3
push
mov
xchg
jl
inc
adc
cli
and
and
cmp
xchg
inc
xor
pushf
cli
sbb
sub
out
imul
jecxz
out
orl
fisttpll
mov
jle
jmp
into
push
inc
test
andb
xlat
cmc
lcall
inc
push
mov
movsb
es
push
push
clc
mov
sub
or
sbb
fwait
iret
jne
jp
jg
and
inc
xor
mov
sbb
xchg
push
sub
pushf
push
in
repz
inc
jnp
mov
cmc
cmp
xchg
xchg
daa
sbb
push
cmpsl
mov
outsb
pop
es
pop
ss
add
cs
in
bnd
lret
imul
outsl
in
mov
add
iret
pushf
loopne
mov
leave
sbb
icebp
mov
and
sbb
and
mov
pop
jmp
mov
xlat
jno
mov
push
xchg
inc
or
mov
push
mov
loop
adc
or
add
fstl
fsubl
outsb
popf
xlat
adc
inc
mov
movsb
insb
mov
push
stos
mov
fistpl
inc
mov
mov
sbb
pop
nop
add
test
stos
stc
xor
inc
sbb
mov
icebp
bound
adc
push
and
xor
xchg
pop
push
mov
xchg
mov
sbbl
sahf
xor
cmc
inc
sub
pusha
xor
fdivs
cmpsb
shr
inc
push
ret
mov
jle
xchg
xor
ds
testl
dec
cmp
les
and
jnp
jl
ret
ljmp
sub
std
cmp
pop
in
add
outsb
pop
bound
or
sub
push
mov
rorb
outsl
push
sub
leave
insl
xchg
je
jne
stos
inc
lods
ja
je
rcrb
mov
clc
inc
push
test
jge
mov
subl
pop
fs
cmp
xchg
push
mov
mov
mov
out
sub
loope
scas
outsl
sub
cmpsb
pop
outsl
jge,pn
pop
frstpm(287
cwtl
or
stos
cmc
and
jb
stc
dec
in
stos
and
mov
iret
cmp
ret
dec
out
daa
enter
icebp
or
jo
imul
xor
xor
push
dec
or
loopne
jne
ret
inc
dec
jo
faddl
mov
in
fprem
push
clc
add
pop
dec
insl
imul
xor
scas
mov
mov
adc
dec
pop
out
inc
jne
xor
jg
gs
cli
testb
add
cmp
inc
mov
mov
fbld
cmp
icebp
cmp
pop
sbb
mov
aaa
dec
push
movsb
int3
in
inc
subb
inc
stos
lods
mov
cmpsb
and
xchg
xchg
inc
iret
data16
add
arpl
fisubrl
xor
mov
lods
mov
push
push
sbb
xchg
popf
push
mov
outsb
outsb
cmp
out
popa
mov
inc
inc
loope
cmpsb
cmp
ret
cmp
adc
pop
les
mov
xor
in
aam
jns
mov
pop
vpunpckhwd
dec
and
mov
jge
mov
push
or
dec
sarl
in
fstpl
repnz
xor
lds
jne
cld
xor
inc
sub
lds
adc
sub
in
fdivrl
pushf
xor
xchg
and
cmp
mov
adcl
mov
leave
cltd
lock
faddl
loopne
pop
cmc
cmpsl
xchg
jmp
pushf
mov
fmull
jmp
aam
sbb
jmp
cwtl
popa
sti
sbb
pop
cmp
sub
sbbb
and
inc
mov
pop
out
sbb
pop
adc
add
mov
rolb
leave
popf
data16
and
push
mov
push
jne
and
jecxz
movsb
repnz
stos
cltd
mov
inc
jg
xchg
dec
pop
gs
decb
clc
mov
addr16
dec
mov
insl
in
and
lcall
je
lea
rol
mov
stos
arpl
call
inc
addr16
add
popa
sub
aas
out
jne
daa
cwtl
push
jo
sub
or
hlt
xchg
ljmp
lods
and
or
imul
lods
push
mov
cmp
std
imul
jae
adc
in
out
clc
adc
adc
push
add
aad
sub
fcomp
out
add
popf
jg
movsb
or
aas
jns
mov
push
into
js
and
ja
icebp
xchg
jecxz
xchg
push
sbb
ret
xlat
and
mov
test
cmp
sub
mov
pop
xchg
or
cmp
outsl
aam
pop
andb
mov
mov
sub
lods
popf
sbb
ja
push
cli
xchg
leave
pop
popl
movsl
in
mov
inc
das
push
sub
push
dec
cwtl
xchg
or
jge
js
jge
lret
iret
mov
dec
xchg
popf
imul
jne
jp
ss
inc
addr16
pop
repnz
js
out
aam
pop
lret
jl
je
lock
nop
and
outsl
dec
xchg
mov
xor
mov
cmc
out
mov
imul
sti
pop
shlb
push
mov
out
mov
cwtl
xchg
jne
xor
in
or
shll
mov
es
and
out
fisubrs
adc
fiadds
arpl
lea
jp
or
adc
lahf
xlat
mov
lock
test
enter
inc
add
cwtl
mov
inc
lds
ret
je
xchg
jle
mov
lea
pminsw
out
nop
fstpl
ljmp
dec
pop
pop
lret
nop
les
out
test
push
or
cmp
mov
sub
mov
inc
fcmove
push
mov
sub
cwtl
push
jl
cmp
lds
jmp
sbb
popf
bound
mov
sub
mov
lret
inc
xchg
jle
xor
adc
int
mov
hlt
outsl
clc
fs
xchg
xchg
or
gs
out
repz
sbb
orl
pop
fildl
jge
cmp
dec
cmp
lea
pop
xchg
scas
xchg
adc
popf
data16
fdivr
pop
sub
jl
add
pop
and
cmpsb
pop
xor
jge
imul
mov
add
dec
sbb
cmpsl
daa
cmpl
mov
pop
sbb
shr
sbb
push
inc
dec
pushf
inc
pop
call
pop
xchg
pop
insb
jbe
sub
mov
pusha
dec
rolb
stos
cld
fimull
push
pushf
push
xor
mov
pop
push
mov
jbe
or
insb
push
xor
and
scas
cli
push
inc
mov
sbb
fisttpl
lea
jge
shlb
push
cld
jl
sbbb
loopne
lock
popa
aam
inc
jp
cmp
aas
jmp
inc
jmp
mov
sbb
aam
mov
jns
fwait
add
adc
out
iret
push
fdivrs
into
dec
imul
repnz
movsb
insb
mov
loopne
xor
and
jne,pt
pop
sub
and
mov
fsubrl
sub
mov
push
je
lds
pop
sbb
mov
push
sub
adc
push
mov
mov
push
sub
test
out
insl
sti
inc
shlb
stc
sahf
or
cmp
push
jae
lret
enter
les
sub
add
mov
arpl
mov
stc
xchg
push
scas
or
pusha
call
inc
push
add
out
cmpsb
lods
mov
mov
rorl
xor
std
aaa
dec
push
jno
js
cs
pop
sbb
and
pop
cmp
pushf
scas
xchg
imul
add
or
cmpsl
sbb
loop
sub
push
movsl
fcoms
adcl
adc
add
es
dec
or
jecxz
push
cli
or
adcl
xor
xor
dec
ljmp
dec
push
loope
jge
in
ret
test
and
push
lret
xor
jge
adcb
push
push
lods
mov
mov
sahf
sub
mov
fcompl
cwtl
and
push
pop
and
std
not
mov
je
scas
mov
mov
ja
mov
outsl
push
mov
mov
sub
scas
jl
fidivl
lret
mov
repnz
cmpsb
inc
sub
out
mov
adc
push
pop
jle
test
inc
sub
mov
sub
enter
mov
mov
dec
cmp
mov
xchg
in
dec
adc
pop
mov
outsl
jae
fidivrl
add
gs
test
jnp
xor
mov
lcall
sbbl
inc
or
mov
push
sub
mov
sti
imul
xchg
lret
push
shrl
and
cmc
fisubl
jmp
xor
and
sbbb
cmpsl
and
test
mov
pusha
loope
inc
int
std
ja
jno
cmp
arpl
insl
and
les
mov
add
jl
jg
pop
cmp
pop
test
mov
dec
dec
cmc
movsl
popa
icebp
in
daa
xor
lret
push
and
lea
xchg
cmp
sub
inc
add
int
in
test
lahf
fldt
cmp
xor
leave
xchg
pop
sbb
movsb
popf
lret
adcl
aad
xchg
sbb
arpl
js
jmp
mov
pop
stos
inc
push
arpl
pusha
lods
pop
cli
subl
insl
jns
ljmp
add
pop
negb
adc
adc
fdivrs
daa
aaa
pop
dec
stos
xchg
add
std
mov
mov
push
dec
aam
add
mov
mov
call
inc
das
sub
je
pop
or
sub
testl
xor
dec
cld
mov
pop
mov
jp
dec
mul
mov
inc
mov
cmpsb
test
mov
adc
in
mov
loopne
cwtl
xchg
or
nop
pop
std
rcrl
and
lds
pop
push
lds
aaa
inc
pop
iret
movsl
xor
inc
xchg
inc
push
dec
pop
push
jnp
fdivr
inc
in
inc
rclb
rcr
adc
jle
or
sbb
jle
pushf
jmp
shl
cltd
test
adc
sti
pop
test
inc
aaa
jno
test
jl
pop
mov
das
sbb
fdivr
adcb
out
stc
pop
dec
dec
xor
mov
dec
fsts
pop
push
fs
out
or
in
pusha
les
xchg
dec
popa
add
ret
push
adc
test
daa
mov
loop
js
mov
jge
jb
cltd
lcall
push
push
js
imul
loopne
insb
jle
addr16
nop
ljmp
dec
aad
xchg
andb
shlb
pop
jmpw
ds
cmp
out
loope
mov
add
cs
push
cmp
cmp
push
mov
xchg
pushf
sbbb
sbb
cli
xor
jmp
jg
or
bound
xor
lods
mov
pop
leave
insb
iret
aad
test
fwait
loope
call
enter
out
xchg
adc
and
popf
dec
pop
or
paddusb
std
or
shrl
pop
insb
mov
push
rorb
push
faddp
push
push
stos
sti
inc
push
jle
sbb
imul
push
xchg
leave
fdivrp
and
nop
lahf
test
mov
dec
fisubs
movsl
mov
sbb
pop
mov
mov
push
scas
adc
push
add
imul
adc
and
or
jmp
add
shrb
fsubs
orb
outsb
cmp
xchg
int
dec
push
cltd
mov
pop
cli
xorl
cld
or
sbb
test
mov
scas
push
mov
mov
adc
pop
cld
movsb
xchg
pop
and
pusha
push
in
inc
jne
int3
xchg
loop
push
test
cmp
mov
push
xchg
push
movsl
cli
testb
stos
fwait
test
mov
cmp
data16
sbb
insb
sub
int3
sahf
or
addr16
xor
pop
shrl
outsb
lret
jnp
push
mov
cmp
xchg
xchg
dec
enter
cmc
inc
jp
jno
mov
sbb
mov
std
adc
stc
ret
dec
mov
cli
out
and
cmp
or
sahf
pop
repz
push
repz
pop
insl
ds
ret
inc
push
pop
mov
xor
adc
mov
sarl
and
or
add
xchg
push
roll
mov
and
mov
addr16
jnp
enter
push
dec
xlat
add
pop
lea
jmp
data16
xor
out
jp
cmc
pop
xchg
fs
inc
fs
push
movsb
mov
mov
cmp
es
jmp
fcmovu
push
jo
mov
cmpsl
pop
push
mulb
movl
cld
outsb
es
push
mov
es
jmp
aas
notl
out
dec
pushf
outsl
adc
dec
push
jb
mov
push
xchg
rcl
adcb
mov
sahf
cmp
and
rolb
test
mov
fildll
loope
mov
test
out
pop
loopne
mov
cmp
jae
addr16
inc
idiv
into
mov
jmp
das
aaa
nop
inc
fistpll
mov
bound
es
mov
sub
mov
bound
in
lcall
mov
push
scas
mov
push
push
push
scas
ret
mov
testl
mov
jnp
out
roll
fstl
pusha
push
xchg
leave
or
sbb
repnz
mov
js
jbe
mov
fildl
jmp
push
xchg
jb
and
or
mov
fdivs
stc
aad
arpl
rorl
pushw
scas
pop
out
fimull
ret
bnd
dec
sbb
jmp
mov
xor
mov
int3
popa
pop
mov
jns
xchg
mov
jle
aas
fnsave
icebp
ljmp
cli
inc
sarw
daa
int3
test
adc
andl
pop
aam
sbb
int
or
pop
xchg
icebp
jnp
jns
mov
test
mov
mov
enter
sub
jae
adc
adc
adc
xchg
cld
jl
dec
jb
pop
or
rorl
mov
or
jb
or
test
fisubs
add
jmp
inc
pop
sahf
add
mov
cwtl
pop
push
insl
mov
and
je
notb
in
push
pop
imul
fbstp
testl
xchg
push
aaa
sbb
mov
pusha
insl
stos
cmc
sti
lcall
add
inc
loop
js
mov
idivb
adc
shrl
movsl
test
rcl
cmp
sbb
xchg
adc
jmp
js
divb
mov
gs
xor
jg
xor
aaa
leave
testb
cli
int3
xchg
shll
push
std
faddp
inc
enter
and
aas
push
push
or
pop
xorb
loop
fimull
push
es
and
mov
nop
ret
push
jbe
es
iret
adc
push
mov
dec
sti
xchg
aaa
in
mov
pop
push
stc
cltd
mov
fidivrs
mov
outsb
rcll
pop
xor
roll
xlat
sbb
cmpsb
jp
mov
out
jae,pt
pop
imul
shrb
xor
insl
or
sub
mov
xchg
or
out
xchg
fcomps
pop
and
lock
mov
fwait
xchg
sub
push
cmpb
adc
push
fcomip
or
xchg
add
pop
and
fstpl
movsb
xchg
aam
repnz
add
popf
gs
jmp
mov
jge
stc
and
sbb
insb
leave
loope
cmp
jmp
lcall
sbb
popf
pop
les
arpl
dec
aad
and
mov
push
add
jl
outsb
mov
xor
xchg
adc
xchg
pop
pop
sbb
in
icebp
lcall
repz
lods
pcmpgtd
fdivrl
cs
xor
sub
or
pop
jle
out
push
icebp
inc
jp
cmp
add
pop
xchg
xchg
call
mov
xchg
ret
arpl
fists
sub
mov
push
icebp
hlt
lahf
cld
cmp
pop
cwtl
jmp
mov
cmpsb
xor
movsl
shl
pusha
filds
xchg
lahf
aaa
jnp
and
ret
orl
xchg
sbb
lock
repnz
mov
or
packsswb
out
mov
mov
and
out
xchg
out
jo
pop
push
jl
rclb
or
mov
xor
sub
inc
les
or
insl
jle
pop
gs
ja
push
ja
mov
aas
cltd
out
pop
dec
and
push
fnstcw
js
push
imul
out
jp
pop
jbe
cli
test
sahf
loop
inc
lret
outsb
ret
sahf
lds
mov
cmc
ror
add
sti
jbe
and
clc
out
ret
inc
lret
mov
xor
fbld
bound
sysret
mov
inc
sbb
fwait
loop
dec
loopne
inc
sbb
out
cld
je
into
mov
inc
ljmp
fdivs
and
fcmovnu
and
push
jg
push
jb
and
mov
shrb
in
mov
aad
lret
mov
mov
pop
jl
lcall
push
add
in
and
and
aam
mov
mov
ljmp
cmpsl
popa
inc
mov
pop
pop
dec
cmp
dec
popf
xchg
fstpl
jnp
inc
or
imul
loop
jns
adc
stos
fwait
xchg
sub
pop
push
jge
push
aam
loopne
jp
pushl
test
or
push
outsl
cmp
xor
dec
add
pop
mov
xchg
fistpll
push
and
xor
push
notl
pushf
sub
pop
sti
sub
cwtl
xor
movsb
fidivrl
into
leave
pop
and
repnz
cmp
xlat
icebp
pop
mov
push
cwtl
scas
sub
fs
ret
mov
stos
dec
lods
dec
imul
int
mov
pop
adc
adc
imulb
mov
push
pop
lret
outsb
xchg
lods
jle
xor
sub
shl
subl
push
test
enter
add
je
mov
sub
xlat
imul
lret
jne
inc
iret
stos
out
test
loope
pop
test
testb
jbe
lods
pusha
sub
call
and
add
push
xchg
mov
cltd
jns
std
divl
xor
jne
adc
jmp
add
mov
xchg
push
jle
xchg
adc
sbb
mov
imul
push
push
inc
fbstp
jbe
fs
and
jnp
lahf
nop
sub
call
xlat
adc
inc
xchg
mov
ds
mov
jmp
std
in
dec
mov
sahf
cltd
loop
es
mov
lea
or
and
jge
and
dec
aaa
jns
rcrl
rclw
xor
add
mov
aam
mov
cmpb
lds
dec
lret
adc
xchg
cltd
and
insl
in
xor
jb
mov
fisubs
nop
movsb
mov
call
ret
out
push
aas
ja
xchg
pop
push
push
out
or
js
push
das
std
xor
and
push
fldl
int3
add
dec
ret
sub
imul
xchg
sbb
pop
cmp
lock
test
mov
mov
imul
inc
lret
iret
mov
test
xor
inc
loope
push
adc
mov
add
add
adc
pusha
push
mov
mov
cmp
pushf
mulb
jl
sub
adc
rorl
hlt
dec
push
fidivs
or
arpl
dec
ljmp
je
rorl
aas
mov
cld
lret
enter
repnz
inc
cmp
mov
das
fwait
inc
fsubrl
mov
sub
push
into
jne
dec
iret
cmp
inc
ret
daa
push
cltd
outsl
adc
pop
sbb
and
sub
les
fildl
fadd
mov
push
cmc
sbb
rcll
jp
push
inc
daa
sti
js
sahf
das
fnsave
mov
into
lcall
dec
stc
fdivrp
pop
lcall
cmp
call
adc
dec
inc
sub
loope
imul
push
cmp
sti
dec
sbb
rorl
test
xlat
inc
push
push
loope
pop
enter
jp
fidivrl
int3
xchg
or
push
add
xlat
fwait
popa
pop
sub
sbb
repz
in
sarl
inc
and
cmp
xchg
xchg
cli
adc
lock
cmpsl
fstpl
add
xchg
in
loope
in
sub
sbb
pop
adc
lds
adc
inc
fldcw
and
cmp
lds
dec
mov
sub
push
scas
adc
sbb
sub
inc
push
sub
mov
clc
icebp
jmp
icebp
les
pop
sbb
mov
mov
xor
scas
sbb
push
push
lods
and
and
push
pop
test
cmp
dec
mov
in
stc
stos
dec
call
xchg
jmp
add
scas
outsb
adc
sub
lods
idivb
out
and
inc
push
sbb
xor
imul
cmp
imul
or
mov
jne
into
aas
nop
dec
fildll
or
dec
inc
fildll
es
mov
gs
xchg
ret
jmp
insb
add
sbb
sbb
pop
cs
add
jp
cmpl
in
add
insl
dec
mov
leave
xchg
popl
repz
xchg
das
in
mov
jbe
jl
and
leave
mov
out
xor
pop
xor
popa
pop
push
inc
dec
dec
sahf
mov
fnstcw
xor
mov
sbb
test
and
and
pop
mov
sub
jbe
mov
pop
in
jno
xorb
cmp
push
gs
into
int3
mov
push
cltd
or
inc
cld
popa
les
ret
test
pop
cmpsl
mov
fstps
inc
xor
mov
mov
enter
lods
cmp
push
imul
xchg
push
bound
adc
push
data16
shlb
insb
adcl
ud2
lcall
jecxz
cli
iret
mov
imulb
movsl
cld
call
inc
fwait
arpl
push
pop
lea
test
lea
jmp
dec
pop
dec
xchg
fsubs
hlt
fs
sti
loop
jnp
jp
fdivr
mov
cltd
and
jmp
stc
std
jmp
jle
lods
pop
int3
insl
popa
jecxz
insl
add
mov
sub
jecxz
pop
rcr
dec
mov
in
mov
mov
jno
test
xor
mov
in
jp
jns,pt
mov
adc
cli
xor
pcmpeqb
jo
push
test
push
mov
loopne
push
xchg
jno
test
jg
jne
orl
mov
cmpsb
mov
fwait
mov
rolb
and
arpl
pop
jle
pusha
xchg
lahf
sub
icebp
enter
push
jno
pop
lods
paddusb
mov
clc
mov
dec
jbe
ja
sub
addl
sub
lock
pop
push
pop
pop
dec
aas
dec
mov
jb
add
mov
xor
sbb
jae
push
mov
inc
outsl
mov
dec
pop
dec
fbstp
call
test
fistpll
pushf
mov
adc
pop
daa
std
subb
stos
ja
push
movsl
jnp
jp
flds
and
dec
nop
andb
clc
mov
lods
lock
scas
das
icebp
ja
std
int3
mov
add
je
push
sar
cmpsl
repz
imul
sub
into
lea
enter
call
jle
xchg
and
in
shll
or
jecxz
sarl
cwtl
aam
or
fistpl
mulb
ja
aad
xor
mov
mov
xor
lods
adc
mov
xor
stc
jg
cmp
push
pop
popf
pop
mov
sbb
scas
ds
testb
scas
stos
adc
jne
mov
cmp
dec
mov
adc
out
in
pop
inc
xchg
jo
fnstenvs
mov
sbb
mov
cmp
shrb
xchg
test
mov
sti
pop
push
add
xor
sub
lock
outsb
outsb
popa
jns
inc
xor
cmc
push
mov
jo
and
es
mov
jno
push
xchg
shl
iret
gs
sbb
push
call
push
rcrl
test
movsl
scas
jecxz
inc
or
sub
xchg
jmp
pushf
xchg
mov
jb
push
popf
pop
mov
mov
out
movsb
sahf
into
out
jnp
sarl
pop
mov
inc
inc
lock
xor
pop
addr16
decl
mov
in
mov
mov
les
xor
js
or
call
or
push
popa
shrb
in
jb
or
faddl
add
sub
or
sbb
mov
mov
mov
jle
jae
or
mov
dec
mov
inc
rclb
std
inc
adc
cmp
xlat
push
xor
roll
dec
rorb
lahf
inc
jno
outsb
xor
aad
xchg
orb
sbb
cltd
sbbl
out
lock
cmp
jp
lock
dec
pop
mov
pop
je
jge
xor
fldt
push
cmp
mov
gs
lahf
out
in
or
pusha
adc
rcll
inc
arpl
js
lods
jo
adc
mov
fistpl
pop
iret
sub
xlat
fstpl
shlb
inc
js
xor
push
nop
test
cmc
and
dec
mov
mov
jg
cmc
mov
mov
fmull
ret
ror
jo
mov
push
pushf
jnp
mov
and
cs
jne
xor
dec
jbe
push
lret
fldenv
lret
cmc
push
aam
sbb
inc
mov
add
out
cmc
add
mov
push
mov
pop
aaa
jbe
xchg
jb
rcr
and
add
inc
jnp
test
dec
ret
cli
push
jo
adc
cs
std
push
ret
adc
mov
jmp
pushl
xor
aas
in
inc
lahf
rcrb
jl
arpl
out
mov
adc
mov
sarb
sub
add
sbb
push
pop
iret
cltd
dec
std
mov
mov
mov
addr16
inc
aad
push
add
test
xor
push
and
mov
cli
stos
jmp
cmc
pop
loope
sub
sbb
mov
xchg
scas
dec
int3
and
mov
negl
push
bound
mov
xor
pop
daa
push
jnp
mov
or
xor
push
mov
sub
pop
push
jbe
call
xchg
andl
dec
test
arpl
scas
stc
xchg
xor
and
aam
rol
xlat
sti
push
xor
dec
pop
adc
es
cli
fstl
mov
scas
pushf
jg
popf
fisubs
lret
inc
add
adc
xor
xor
imul
fstps
and
lods
adc
loop
jg
repnz
cwtl
fwait
je
leave
mov
or
out
push
sbbl
sahf
dec
cmpsl
jl
sbb
lcall
dec
and
xchg
loopne
xorl
frstor
jg
adc
lahf
or
pop
rorb
fsubs
inc
out
inc
pusha
pop
lods
mov
inc
mov
sti
xchg
decl
xor
sbb
jp
stos
sbb
test
in
cli
mov
push
rcrl
push
fildl
mov
mov
mov
push
das
jg
lock
sbb
xchg
bound
mov
mov
push
and
pushf
icebp
sub
repnz
jl
es
loop
aaa
and
jae
xor
jp
in
ds
push
daa
push
ja
pop
push
cmc
pop
jge
mov
loope
rcrb
jns
fisttpl
fabs
popa
mov
mov
jne
fwait
ret
cmp
out
xor
inc
pusha
sub
inc
sbb
inc
xchg
sub
lret
addb
loopne
mov
mov
adc
push
stc
lret
mov
pop
popl
jp
test
cmp
lods
test
bnd
jmp
inc
jo
test
xor
xchg
bound
jmp
rorl
hlt
shrd
test
subl
es
hlt
mov
clc
int
imul
lret
stos
xor
jb
ret
lods
sub
jns
mov
jae
daa
pop
sti
jmp
cmp
mov
push
sub
int3
add
daa
pop
icebp
mov
adc
call
add
pop
xor
repz
lahf
push
mull
ret
adc
cmp
fisttpl
daa
sub
cli
push
push
lcall
je
aaa
or
enter
jg
and
lcall
pop
dec
and
push
mov
push
xchg
jno
mov
sbb
push
sbb
sbb
xchg
inc
jecxz
out
jl
dec
and
xor
sahf
add
pusha
loope
and
int3
fiadds
lret
or
dec
enter
dec
xchg
enter
testb
ret
fistl
sbb
cmp
aas
xchg
gs
mov
sti
dec
cmp
gs
incb
sub
jl
mov
jo
push
sti
enter
mov
push
jb
mov
or
xor
into
jge
mov
lcall
cmp
insb
mov
insl
popf
ret
in
adc
xchg
inc
cli
push
sub
and
aaa
cmp
rorb
jae
xchg
aaa
movsl
cmp
mov
xor
push
or
stos
or
jnp
loop
stos
sbb
shrb
sub
adc
pop
mov
jo
xor
cwtl
mov
dec
sarl
jge
cmc
mov
or
or
loope
jns
cmp
xlat
out
cltd
push
test
test
xchg
mov
mov
and
push
pushf
add
adc
jb
dec
in
or
das
bound
lret
adc
sub
or
popa
xchg
jg
sub
sbb
xchg
jge
push
lods
dec
mov
xchg
cltd
pop
add
fcoms
xchg
and
orl
je
in
loopne
sbb
loope
cmpsl
imul
outsl
jp
xchg
lret
xor
outsb
test
mov
fildl
pushf
sbb
enter
fdivs
daa
loopne
jp
dec
pop
pop
pop
pop
data16
and
mov
cltd
jae
pop
mov
rcrl
jo
push
xor
loopne
loope
jp
xor
sbb
outsl
mov
jp
cmp
jl
push
mov
test
loope
outsb
mov
cld
ss
cwtl
and
fsts
ficoml
int3
popa
jbe
and
icebp
adc
shl
mov
enter
aam
scas
xchg
xor
dec
pop
lds
test
loope
push
popf
clc
cld
push
push
test
lret
sbb
jl
inc
pop
pop
dec
sbb
lock
xchg
sarl
jp
mov
js
adc
jge
sub
xchg
pop
call
cmpsl
jns
out
jb
dec
push
jbe
jp
jp
mov
mov
inc
add
mov
lahf
jge
int
rcll
orl
test
enter
movb
pop
mov
add
and
cltd
pop
movsb
insb
repz
imul
sahf
sbbl
out
lods
sub
mov
cmpsb
ss
fisubs
inc
mov
jp
scas
stos
jnp
jl
in
add
fisubrs
mov
sub
dec
popf
pushf
fildll
sub
or
loop
cmc
xchg
cs
xor
loopne
out
cli
xor
or
push
adc
push
push
aas
in
sbb
xchg
cmp
jecxz
mov
push
mov
gs
shlb
mov
push
mov
add
adc
jns
inc
shll
std
jne
inc
jbe
mov
push
loope
mov
repz
arpl
lock
sarl
into
mov
push
ljmp
mov
sahf
stc
pop
loopne
loopne
mov
push
addr16
test
push
loopne
adc
mov
inc
mov
cltd
ljmp
insl
xchg
addr16
and
adc
xchg
mov
mov
in
adc
add
or
imul
xorl
roll
pop
pop
sbb
push
lret
mov
mov
inc
and
jg
movsb
or
xchg
adc
mov
lcall
call
in
mov
pop
icebp
or
mov
pop
int
lods
outsl
dec
aas
mov
push
ja
or
cmpsl
sub
fsubrl
movsb
push
gs
or
mov
jecxz
mov
inc
loop
mov
lret
xchg
xchg
hlt
loop
inc
aas
push
mov
sbb
adc
popl
sti
mov
pop
sbbl
xchg
inc
xchg
cli
mov
sbb
jbe
mov
aas
cmp
repz
les
cwtl
idiv
push
mull
and
pushf
rorb
mov
dec
xchg
inc
cwtl
xchg
dec
insl
add
scas
mov
repz
loop
fldenv
cmp
in
inc
loope
cmp
xor
popa
cltd
jb
mov
adc
stos
outsl
jo
out
add
push
movsl
rclb
inc
inc
loop
mov
cmpsl
test
jp
adc
imul
adc
ret
inc
fcom
lock
mov
loopne
adc
push
stc
dec
add
popa
leave
fimuls
or
mov
outsl
mov
lcall
enter
sbb
dec
mov
movsb
ja
dec
outsl
stos
sti
insb
je
lods
xor
ljmp
mov
jns
jg
inc
push
jns
pop
iret
jge
and
pop
dec
imul
add
adc
and
mov
outsl
sbb
sbb
and
notl
mov
mov
push
movsb
imul
sub
lahf
mul
mov
adc
sar
inc
out
cmc
stos
push
jae
adc
or
add
cmpsb
mov
xchg
cmc
pop
cmpsl
xor
cltd
jne
movsb
mov
in
dec
dec
cmp
mov
mov
rorb
andl
loope
jmp
outsb
pop
inc
scas
icebp
xchg
add
sbb
mov
and
pop
dec
iret
mov
orl
push
jecxz
mov
loop
sbbl
inc
bound
lds
push
mov
xchg
add
rclb
dec
popa
push
inc
mov
out
mov
cltd
fsts
mov
push
lcall
ret
cmp
mov
cmp
cmp
insl
push
movsl
add
mov
mov
mov
add
lahf
nop
and
jno
xor
cmp
dec
dec
ficomps
jo
adcb
rcrl
lods
dec
sbb
mov
iret
aad
inc
push
push
pusha
xor
pusha
sbb
fbld
fldenv
ret
cwtl
mov
psrad
and
daa
pop
aam
je
iret
outsb
mov
stos
sti
sarb
aam
adcl
hlt
cmc
or
xor
mov
clc
mov
repz
ret
push
push
push
sbb
cmp
xchg
clc
sbb
imul
mov
mov
add
push
jno
fists
sahf
adc
or
repz
in
sti
lahf
mov
mov
fwait
xchg
sub
sbb
roll
aam
mov
cli
lahf
arpl
fsubrl
jmp
into
xchg
sbb
and
lods
pop
jno
xchg
cltd
push
dec
fstpl
sbb
add
and
inc
mov
jmp
push
mov
pop
dec
add
iret
addl
pop
sub
hlt
cmp
je
jmp
or
enter
sub
cmc
xor
lods
xor
cltd
cmc
cmp
sub
mov
cmp
cmp
xchg
inc
inc
pop
or
cmp
adc
shl
and
mov
or
push
push
mov
test
hlt
push
mov
jmp
mov
lahf
incl
or
decl
out
jb
push
push
cmpl
mov
loop
jl
pop
jae
adc
shll
mov
lcall
lcall
or
repnz
pop
and
mov
in
imul
inc
lock
je
mov
mov
lcall
outsb
cmp
xchg
ret
in
lea
dec
mov
inc
popf
push
bound
out
xchg
mov
sub
ds
pop
push
adc
out
dec
mov
mov
jmp
sbb
in
loop
xor
adc
jge
ja
cmp
subl
mov
test
sub
cmp
ret
sbb
jae
mov
jb
jns
cmpl
negb
hlt
fstpl
dec
mov
jb
lea
inc
adc
jb
add
dec
push
inc
lahf
leave
idivb
mov
jbe
fistpll
cmc
lods
xor
push
push
rcr
mov
mov
pop
adc
mov
call
xchg
or
xchg
and
pusha
jno
or
jno
mov
inc
fcomps
cmpsl
jg
mov
fwait
aad
push
rcl
sub
xor
testb
dec
adc
insb
leave
ficoml
lods
or
adc
push
add
lret
sbb
aam
test
and
and
loope
and
lahf
js
push
pushf
lcall
iret
mull
loop
push
lea
xchg
mov
xchg
xor
dec
addr16
mov
mov
xor
jo
out
jle
push
ror
cmpsl
cmp
pop
das
aas
cmpsb
scas
xchg
jmp
inc
outsb
mov
pop
adc
xor
pop
push
lods
and
or
xor
ja
rcrb
xor
mov
inc
jbe
fdivrp
add
sar
movsl
fidivl
cmp
ja
lds
adc
ds
fwait
outsl
jmp
mov
dec
jne
xchg
test
test
xor
dec
push
test
insb
loop
ret
adc
and
sbb
testl
out
lret
loop
mov
xlat
fidivl
lret
mov
adc
add
push
sub
lock
and
inc
cli
push
mov
arpl
in
leave
out
nop
mov
mov
jle
movsl
cwtl
lods
int
mov
or
cmp
outsl
mov
fst
adc
mov
cmpsl
xchg
and
bnd
jge
jecxz
loop
out
dec
pop
mov
rcrb
imul
jl
cwtl
lds
jne
xchg
mov
cmp
testb
rclb
or
lahf
pop
inc
mov
sahf
lret
add
test
int
xorl
popa
aaa
adc
mov
mov
cmp
adc
pushf
int3
ds
loop
jnp
xchg
dec
dec
andl
adc
das
scas
mov
cwtl
or
xor
imul
mov
pop
insl
imulb
scas
adc
push
sti
xor
adc
cli
push
sti
dec
sti
inc
cs
mov
sarl
jp
mov
cs
cmpb
xchg
sub
jnp
into
jbe
pop
mov
dec
mov
or
xor
add
inc
mov
or
or
stos
pop
jl
xchg
lds
mov
push
je
sbb
push
fcmovbe
pop
jo
add
fsub
mov
lock
pop
rcrb
mov
ja
mov
aaa
insb
repz
std
hlt
lods
sub
and
cmpsb
adc
aaa
out
fcoml
icebp
in
ret
xchg
push
sub
sub
mov
ror
in
arpl
push
dec
pop
cmc
mov
mov
lea
mov
mov
rcrb
mov
scas
mov
adc
cli
lds
add
mov
and
and
sub
cmpsl
pop
mov
pop
jo
cmpsb
cmpl
test
dec
leave
pop
cmc
jecxz
pop
test
aad
vsqrtsd
xchg
push
scas
push
dec
pop
xchg
sarb
sahf
cltd
lret
and
cmpsl
iret
les
fsubs
mov
push
lods
out
mov
cs
in
mov
std
mov
repz
cmpb
mul
pop
or
jae
dec
popf
rol
inc
jg
cld
jae
push
mov
lods
pop
mov
in
jnp
sub
sbb
int3
add
jl
jmp
das
pushf
sarb
cmp
inc
stc
mov
mov
dec
lds
dec
add
jno
ficomps
cmp
mov
pop
int3
popf
jl
je
loopne
dec
mov
pop
imul
or
inc
icebp
in
dec
movsl
cmp
daa
mov
insl
stos
adc
call
outsl
mov
mov
sbb
mov
mov
xchg
add
gs
jecxz
fists
adc
movsl
or
test
rcr
or
nop
xor
mov
pop
jns
jbe
fisubl
xchg
sub
outsl
xor
adc
fisubs
pop
outsl
adc
push
xchg
push
add
jl
movsl
clc
dec
jl
sbb
dec
aam
dec
jle
inc
mov
movsb
push
hlt
mov
inc
xorl
jg
or
mov
cmp
insb
dec
imul
and
cmp
and
sahf
lods
add
loope
jae
jnp
inc
nop
or
mov
dec
mov
sub
adc
fstpt
xchg
or
mov
push
cmp
add
test
pop
cmp
or
jge
jle
outsl
popa
loopne
jne
push
popf
xor
mov
pop
adc
sbb
ja
stc
push
negb
imul
bound
mov
ret
ljmp
push
push
add
fwait
jmp
ljmp
cwtl
dec
test
mov
pop
pop
aaa
sbb
sbb
mov
loope
in
jecxz
jp
mov
iret
adc
cmpsl
sbb
rcrb
imul
neg
adc
fidivrl
rcll
mov
pop
insl
mov
jae
cmc
inc
leave
inc
pushf
mov
push
call
pop
mulb
cmp
inc
add
test
enter
std
inc
scas
mulb
or
outsb
jb
pop
add
pop
hlt
mov
dec
pop
pop
sarl
and
movb
loop
movsb
mov
add
inc
incb
lret
insl
lret
ds
xor
sub
dec
iret
and
and
push
mov
adc
pop
lret
insl
shll
and
mov
xor
jne
out
mov
or
mov
out
pop
pop
pop
push
lock
fidivs
es
pop
imul
js
jnp
pop
mov
push
and
jns
stos
mov
sbb
mov
adc
push
cmp
or
insl
and
pop
pop
jnp
lock
mov
out
mov
repnz
inc
inc
sbb
repnz
mov
dec
pop
test
insl
mov
movsb
add
pop
subb
sub
mov
adc
push
sbb
fwait
pop
or
or
sahf
add
stos
xchg
data16
rorb
daa
mov
jg
xlat
add
push
dec
shrl
jl
mov
pop
mov
and
xor
mov
xchg
mov
push
les
mov
mov
xchg
pop
xor
les
jno
repz
dec
mov
test
mov
jbe
shll
stc
or
aam
mov
add
lock
ja
scas
movsl
clc
jae
mov
adc
and
push
mov
and
jo
sub
cmpsl
sub
push
out
add
mov
push
repz
hlt
aam
neg
inc
push
jb
adc
int
fistpll
add
popf
xor
cs
add
push
fwait
in
sbb
adc
in
cmpsl
pop
pop
loope
inc
inc
sbb
cmc
jge
push
call
scas
pop
sbb
jge
shr
bound
notl
inc
pop
sub
lcall
insb
or
fstps
bound
jb
enter
jle
out
inc
fs
mov
cmp
jo
sbb
insb
add
rcll
mov
sbb
jmp
lahf
xor
orl
mov
lds
lods
add
lret
mov
jb
mov
xchg
sbb
cld
jg
rcl
push
inc
jns
mov
and
hlt
loope
jge
jbe
sub
adc
fldcw
fsubl
cmpsb
or
cmp
jmp
ja
dec
xor
xchg
sub
pusha
out
and
stos
lea
cwtl
loop
sbb
ret
inc
cmp
test
jl
cmpl
pop
pusha
mov
sub
shlb
add
sub
cwtl
xor
les
in
cmpl
fcos
sub
adc
jbe
divb
mov
in
and
imul
sbb
inc
dec
dec
add
inc
cs
lcall
je
rorb
ss
dec
sbb
cld
xor
jge
adc
mov
mov
push
or
push
adc
test
fwait
dec
orb
imul
pop
xchg
ficoms
or
lods
repnz
inc
dec
das
mov
stos
mov
int
pop
xorl
mov
cmp
adc
mov
mov
xchg
gs
dec
jecxz
test
icebp
arpl
dec
pushf
xchg
sub
add
pop
imul
stos
pushf
jno
push
into
inc
xchg
xor
push
out
xor
xchg
outsl
jns
xchg
lods
das
jns
mov
cs
mov
fisttps
test
jmp
scas
dec
pop
cmpsl
mov
std
sub
mov
out
fistps
jne
cmc
inc
jo
adc
add
popa
call
idivb
loop
ret
cld
stos
ret
push
mul
add
movb
stos
mov
inc
push
mov
repnz
dec
jg
test
pop
pop
inc
adc
sahf
push
clc
or
pop
xor
icebp
mov
pushf
jb
xchg
adc
mov
js
in
popf
rclb
fiadds
shll
cmp
jecxz
or
cmp
and
sti
cltd
rcrb
loope
sub
stc
mov
fstps
adc
mov
push
sti
out
mov
or
adc
mov
mov
inc
cwtl
rorb
and
lds
insl
mov
cltd
inc
xchg
adc
int3
mov
adc
xor
and
sub
inc
adc
movsl
rep
push
xchg
xchg
sahf
ja
lds
push
adc
in
call
mov
insl
jge
dec
jp
mov
mov
inc
cs
jae
in
fisubs
pop
imul
inc
pop
arpl
sbb
push
out
cmp
mov
jle
loopne
mov
int3
xor
xchg
mov
aad
ljmp
adc
xchg
xchg
mov
push
or
out
adc
rcr
xor
das
xor
jp
or
daa
pop
cmpsl
dec
cmp
dec
cmp
lds
imul
cld
add
stc
dec
or
push
pop
jl
and
sbb
or
mov
push
or
xchg
repz
clc
pop
fdivr
std
adc
cmp
ss
lahf
ds
imul
jbe
sub
lret
fucomip
lret
jg
ds
lods
lods
push
and
inc
pop
out
fstl
shrb
pop
pop
push
mov
xor
push
dec
rorl
fimuls
aaa
dec
popf
inc
lahf
aaa
sub
popa
lret
rorb
cmp
scas
dec
lret
fldenv
fdivrl
mov
adc
xchg
add
cmp
mov
lcall
in
cmp
pop
std
fnstsw
nop
inc
adc
mov
cwtl
adc
jno
mov
push
mov
aam
sub
sub
shlb
notb
sahf
nop
pop
push
in
mov
dec
xlat
cmp
and
xchg
ss
or
jne
adcl
call
push
mov
mov
faddl
mov
lods
mov
outsl
pop
cltd
jg
pop
cmp
out
negb
ja
jns
sub
scas
adc
popf
xlat
sub
cmc
mov
dec
mov
jg
mov
stos
xor
bound
jle
test
sbb
mov
dec
into
push
rcrl
lahf
push
shll
subl
add
inc
push
pop
jge
xchg
push
push
mov
xor
std
out
mov
ljmp
incl
rcll
dec
lahf
adc
test
xchg
and
inc
loopne
add
sub
inc
daa
mov
notl
mov
jecxz
adc
xchg
aam
sbb
mov
mov
push
hlt
cmp
fwait
xchg
xchg
testb
pushl
push
jl
aam
mov
inc
std
popa
jno
and
cwtl
jns
adc
mov
arpl
adc
mov
lods
xchg
icebp
mov
sbb
test
xchg
jmp
xor
movsb
mov
fildl
insl
inc
mov
movsl
xchg
mov
inc
lds
jge,pt
inc
push
mov
push
jp
shlb
xlat
cli
and
adc
fwait
aad
add
dec
or
ret
repz
sub
or
pop
inc
daa
mov
cmpsl
clc
jle
xor
imull
in
sub
add
scas
or
pop
mov
jp
lock
xor
enter
enter
inc
cmc
push
shll
addl
pop
xor
jp
mov
jecxz
mov
dec
adc
cmp
cmp
and
pop
xor
pushf
test
icebp
rorl
lahf
mov
ljmp
scas
nop
mov
jp
cmp
or
jns
out
in
jmp
xchg
cwtl
pop
cmp
dec
and
test
mov
rorl
es
mov
lret
nop
ret
mov
push
fisttps
dec
mov
dec
out
mov
xchg
xor
outsl
adc
jg
xchg
sub
in
sub
insb
popa
in
xlat
iret
scas
cmp
mov
pop
pop
sti
ret
push
cmp
dec
gs
ss
popa
xchg
push
jo
subl
lret
or
das
shlb
xor
sbb
cmpsl
mov
pop
pop
stos
ja
xchg
repz
sbb
dec
nop
pop
ja
out
fildl
lea
stc
test
notl
in
aad
repnz
mov
daa
jnp
xchg
inc
mov
jmp
lock
lahf
shl
outsl
xorl
lahf
mov
xchg
ss
push
sub
iret
push
xor
xchg
push
rcl
cmc
out
jno
scas
std
jg
movsl
popf
mov
and
lods
out
clc
mov
mov
scas
or
outsl
cmpsb
fistpll
pop
pop
scas
das
scas
xchg
ficomps
mov
lock
mov
adc
data16
push
pusha
push
inc
or
or
rolb
cmp
mov
cmc
adcb
ja
repnz
ljmp
not
mov
out
push
adc
daa
outsb
imul
sahf
fisubrs
xor
out
xor
mov
push
int
cmp
inc
xchg
enter
rcll
dec
jne
sub
adc
xor
subl
xor
jl
fdivrl
fldt
xchg
outsl
pop
push
lcall
push
jle
insb
dec
aas
inc
cli
xor
xchg
sub
pop
cmpsl
mov
inc
mov
mov
insb
adc
mov
mov
and
push
dec
nop
data16
mov
sbb
jge
repnz
jecxz
pop
mov
lahf
insb
jb
adc
das
mov
jo
dec
mov
push
jp
push
insl
cmp
aam
aas
daa
ss
cs
cmp
jb
mov
jmp
and
fwait
out
push
hlt
repnz
jg
rolb
std
sbb
adc
cwtl
iret
imul
idivl
ror
outsb
push
inc
shlb
sub
shrl
ljmp
popa
mov
lea
je
xor
into
outsb
testl
fildll
stos
rolb
loop
mov
xchg
iret
xchg
mov
lock
push
cmp
stc
std
add
lahf
cmc
out
jb
jne
push
call
xchg
fbld
dec
aam
push
jns
insb
cmc
pop
jecxz
stos
push
in
pop
mov
inc
fldenv
enter
ja
outsb
mov
popf
sub
jmp
incl
in
sbb
sbb
jmp
popf
jmp
xchg
xchg
sub
idivb
sti
mov
loopne
loop
dec
mov
cmpsl
dec
push
cmp
in
iret
movsb
adc
xchg
lahf
insl
pop
iret
pushf
add
nop
push
add
mov
test
je
aaa
aad
inc
sbb
in
jge
mov
xchg
adc
cmp
cld
leave
sbb
pop
repnz
ss
dec
int
push
push
cmp
push
repnz
mov
jnp
enter
out
divl
adc
push
pop
sub
rorb
mov
jl
test
pop
lret
incl
fwait
out
cmpsb
jb
mov
adc
and
dec
mov
jb
cmc
fs
outsb
dec
xchg
fdivp
jb
ja
jp
jno
mov
testb
int3
xor
cmc
into
stos
dec
push
in
cwtl
inc
shrb
jge
movsb
fldl
iret
xchg
inc
loope
out
ret
jle
or
dec
test
add
gs
arpl
or
ds
pop
in
mov
in
jnp
push
imul
mov
cmp
lods
stc
inc
cmp
pop
xchg
gs
sbb
test
push
pop
push
inc
add
iret
loopne
popf
into
clc
nop
jns
loop
subb
popf
inc
cmove
je
sub
adc
mov
je
aam
mov
inc
aad
pop
je
cmp
sub
mov
ret
dec
xor
xor
rcrl
outsb
out
iret
adc
iret
push
sub
pop
mov
rcrl
test
aas
sahf
mov
xchg
jb
cmp
rclb
stos
fldcw
shlb
les
cmp
and
stc
mov
jns
clc
inc
cmp
jmp
ja
test
pushf
imul
into
adc
andl
movsb
cmpsb
in
mov
adc
rcl
testb
dec
test
xchg
daa
or
shll
in
jno
dec
mov
push
int
jmp
ret
cld
ret
dec
adc
lcall
jbe
nop
bound
lods
pop
scas
jmp
call
push
jns
lods
cmp
jl
jo
fiadds
sbb
aaa
mov
aas
popl
or
cmpsb
mov
arpl
mov
outsl
push
jmp
mov
pushf
fwait
adc
pop
mov
xchg
or
cltd
add
inc
test
mov
out
xor
test
jns
call
jbe
adc
adc
push
pop
or
dec
jle
in
pop
testl
or
sti
cs
insb
cmpsl
xchg
sahf
push
mov
sbb
mov
nop
cwtl
out
mov
mov
shl
notb
out
lahf
and
adcl
pop
push
dec
mov
adc
incb
movsb
push
ja
add
repz
mov
mov
repz
jp
int
push
add
outsb
sbb
cs
call
inc
test
jge
movsb
pop
xchg
inc
loope
rcrb
loop
mov
pop
pop
push
stos
mov
mov
or
ljmp
scas
pop
mov
ja
xchg
lcall
test
mov
pop
ja
in
pop
jns
mov
ljmp
push
adc
ds
mov
stos
adc
cmpsl
mov
mov
push
inc
pop
xchg
sub
dec
nop
push
cld
jge
cwtl
jg
inc
stos
aas
cltd
bound
adc
pop
daa
add
loope
jl
mov
arpl
inc
xchg
lock
sub
xor
inc
sub
les
or
cmp
sub
push
adc
fbstp
fucom
dec
scas
inc
lods
push
test
fsubrs
xor
icebp
inc
loope
sahf
cmp
out
daa
jae
outsb
cmpsl
jns
mov
mov
lahf
add
aas
inc
jecxz
ds
mov
mov
dec
xor
roll
icebp
push
sbb
push
imul
dec
xor
add
idiv
lcall
imul
add
jae
inc
test
sbb
adc
pop
mov
xchg
shll
mov
push
push
inc
xchg
repnz
iret
out
call
sub
cmpl
leave
xor
inc
repz
je
popf
or
xor
scas
jns
frstor
loop
xor
cmp
jns
pop
cmp
xor
xorl
fs
sub
or
and
call
cs
lds
push
cltd
jl
je
call
insb
adc
dec
jns
stos
fistps
mov
test
and
jo
es
xchg
js
aam
adc
dec
push
repz
cwtl
or
fadds
repnz
fwait
enter
out
lods
inc
rolb
fidivl
ret
jns
jo
pop
lret
stos
dec
cwtl
andl
mov
lods
js
mov
sahf
iret
lea
imul
dec
test
loop
jle
dec
jae
xor
lcall
push
fldt
flds
lret
jne
fdivrp
imull
add
and
clc
cs
ja
pop
pop
mov
inc
mov
sbb
orl
cmc
daa
cmp
test
ret
out
dec
jnp
imul
jb
cli
shlb
xchg
push
enter
ja
fsubs
inc
rcr
mov
mov
lea
nop
test
jl
or
jo
push
and
push
adc
inc
adc
xchg
cmp
pop
mov
jne
into
daa
or
cmp
shrl
jo
imulb
enter
lock
cltd
insb
repnz
jns
bound
add
jle
faddl
and
fnsetpm(287
xor
pop
pop
inc
dec
cwtl
push
xchg
adc
xchg
mov
mov
repnz
testb
adc
pop
mov
xor
mov
jns
jmp
cmp
clc
jns
xorb
push
push
iret
arpl
sbb
xor
add
adc
jle
mov
mov
adc
icebp
andb
cli
lea
mov
or
add
jmp
mov
jecxz
xchg
in
out
mov
add
push
stc
in
adc
jmp
sbb
lds
faddl
test
dec
lret
mov
adc
ficoms
fnsetpm(287
pushf
inc
inc
in
jnp
xor
dec
fwait
in
pop
dec
inc
lock
jl
mov
jbe
fsubs
inc
insl
test
xor
repnz
or
mov
outsb
xor
std
or
fcoms
scas
inc
arpl
mov
xchg
in
nop
jb
push
je
shrl
sahf
stc
fidivl
movl
pop
sarb
arpl
cld
pop
xor
pop
stc
in
sbb
out
rorl
mov
out
mov
xchg
mov
bound
int3
movsb
pop
pop
out
mov
add
or
pushf
test
in
stos
fdivp
loope
data16
sbb
xchg
popa
mov
mulb
and
sub
jl
push
pop
mov
mov
jbe
or
or
xchg
jae
int3
rcrl
dec
aam
je
popl
jnp
mov
jo
test
or
dec
or
pop
add
xchg
cmp
sub
subl
push
test
jns
lret
sbb
sti
sub
movb
inc
pop
add
sbb
dec
jg
jmp
pop
iret
pop
inc
les
jle
cmp
in
cwtl
je
push
cwtl
xchg
lods
sbb
aad
mov
mov
adc
push
xchg
imul
roll
pop
push
aaa
pop
and
fsubl
sub
push
ficompl
arpl
call
or
stos
jp
repnz
incb
in
xchg
out
pop
jg
daa
inc
mov
test
js
inc
cmpsl
mov
mov
stos
push
int3
jns
dec
adc
into
jmp
pop
mov
outsb
jl
push
loop
adc
mov
mov
in
lret
in
pop
mov
cmp
inc
sbb
jbe
mov
cmp
dec
insb
aaa
pop
dec
add
mov
push
idivb
test
insl
jl
ss
or
ja
pop
cmp
and
nop
pop
mov
je
iret
mov
sbbl
data16
lcall
cmp
lods
mov
jp
mov
cwtl
dec
enter
mov
cmpsb
or
rclb
mov
pop
hlt
fsubl
int3
cltd
and
repnz
jae
jecxz
pop
fisttps
mov
popf
adc
and
dec
imul
mov
xchg
sub
cwtl
sub
jmp
les
fists
pop
inc
stc
std
movsb
pusha
mov
das
in
and
and
mov
mov
outsl
mov
and
mov
xchg
test
push
in
push
cltd
out
shll
mov
sahf
xor
xchg
mov
popa
icebp
jns
ja
xchg
push
in
sbb
jmp
pop
dec
cmp
lods
push
mov
ret
lods
cmpsl
add
xchg
imul
mov
adc
aaa
cmc
adc
js
push
pop
cmp
fwait
in
xchg
dec
mov
je
xchg
das
aad
add
push
insl
push
andl
cld
clc
aaa
or
cmpsl
dec
add
and
ja
lods
aas
mov
or
outsb
dec
ret
std
push
test
xchg
adc
das
pop
adc
jb
shl
adc
cmpsl
sbb
mov
push
pop
movsb
jmp
xor
movsb
aam
fistpl
mov
dec
or
test
in
push
dec
jmp
push
mov
inc
fidivl
test
dec
pop
add
repz
or
test
loop
repz
fs
jge
sub
mov
xchg
mov
leave
xlat
std
mov
aas
cmp
jge
loop
xor
adc
mov
xor
movsl
add
or
add
pushf
mov
mov
mov
cmp
xchg
insl
dec
jl
dec
insl
js
and
testb
xchg
aam
leave
out
dec
jl
sub
push
push
pop
lock
inc
lret
inc
fistps
fs
outsb
adc
pop
mov
xor
rclb
ja
stos
jmp
aad
pop
loope
arpl
shll
sbb
leave
fcmove
vandnpd
add
stos
mov
les
std
inc
fs
or
fcomps
cs
rep
rcrl
in
or
fisubrs
mov
ja
mov
outsl
stos
sub
cld
and
mov
mov
test
test
rcl
ljmp
sbb
or
dec
pop
adc
xchg
ljmp
xor
adc
xsha256
cmpsb
push
in
and
out
inc
inc
es
fists
fwait
jecxz
int
jp
mov
sub
out
loopne
xor
sbb
jp
pop
out
sqrtps
jo
push
sub
outsb
roll
pop
sbb
insb
repz
jl,pt
loop
dec
aaa
push
mov
cmpsb
testb
add
jnp
je
dec
ret
ficoms
lahf
sub
inc
dec
daa
loopne
sti
pusha
xlat
add
mov
frstor
fs
mov
cmp
stc
push
add
xor
jecxz
ret
sti
push
mov
mov
cwtl
adc
test
inc
js
fnstcw
lahf
pop
mov
data16
lret
pop
jns
sub
fstp
sti
push
add
icebp
in
sbb
repz
cmp
adc
jp
cmpb
repz
cmp
popl
int
push
fisubrl
mov
sub
jp
jle
xchg
pushf
orl
xchg
movsl
std
mov
xor
add
xor
dec
mov
mov
cmp
fidivs
sub
imul
lret
in
rol
gs
adc
jge
jmpw
dec
dec
insl
jae
inc
rcrl
test
jo
push
inc
and
mov
xor
push
ret
pop
ja
in
clc
jns
jae
sbbl
test
mov
push
jge
clc
mov
pop
cmp
lods
repnz
popa
and
adc
jbe
cmc
xor
test
push
or
testl
jno
or
jmp
in
inc
cli
inc
pop
sbb
shrb
lods
inc
inc
lahf
fsubs
xchg
in
jb,pt
dec
xchg
or
add
dec
fs
daa
in
js
mov
das
cmp
les
xchg
popa
sub
aad
push
scas
test
sub
or
xor
pop
xchg
xchg
mov
nop
xchg
xlat
mov
or
and
pop
cmpsl
mov
leave
div
js
jmp
test
out
inc
jnp
test
dec
sbb
jmp
sti
addb
lcall
shlb
xor
mov
jle
inc
enter
mov
es
sbb
test
pop
lds
push
loope
imul
xor
cs
sti
or
leave
loope
fimuls
xor
repnz
aaa
add
lods
cmp
adc
aam
notl
sbb
pusha
cmc
rol
inc
cltd
xor
cwtl
cmpsb
sbb
pop
adc
sahf
ret
jo
mov
shll
adc
dec
loop
adc
imul
xchg
cmc
push
xchg
dec
pop
add
mov
mov
ljmp
pop
mov
das
fdivs
pushf
imul
add
mov
dec
add
or
add
cmp
hlt
xchg
repz
lods
data16
or
ret
xchg
dec
out
jo
push
ret
jae
imul
sbb
sbb
mov
xchg
or
outsl
dec
in
or
fmull
pushf
out
test
rcrl
gs
test
sub
mov
pop
adc
notb
mov
push
sti
fmul
sub
lods
adc
les
sbb
scas
js
in
jp
or
push
lahf
mov
fstpt
and
jb
jno
scas
repz
add
or
fstps
push
bound
push
ret
cwtl
mov
fwait
addb
rolb
hlt
push
jnp
lahf
mov
clc
les
mov
and
xor
out
icebp
dec
sub
out
sbb
mov
ljmp
pop
dec
lds
mov
lret
dec
xor
gs
inc
cwtl
lret
or
arpl
aam
jb
shlb
mov
adc
sub
loope
xchg
pop
addl
xlat
fildl
sub
xchg
lock
stos
inc
stos
pop
mov
mov
idivb
and
push
and
xchg
and
mov
sub
lods
dec
pop
ljmp
in
pop
mov
movsl
push
cli
adc
je
fimuls
cmp
jo
sahf
pop
add
mov
dec
fiaddl
test
pop
xchg
iret
sbb
pop
shlb
cltd
cmpsb
xor
mov
pop
mov
sub
daa
ret
or
or
out
dec
out
out
mov
pop
insb
mov
xorl
out
movsl
nop
out
inc
nop
mov
into
xor
arpl
enter
sub
push
adc
shll
add
dec
sbb
dec
scas
cld
leave
testl
jge
sbbb
mov
pop
inc
repz
sub
jno
mov
rorb
and
xor
repz
xor
add
mov
pop
cwtl
push
hlt
leave
jp
ss
cli
sbb
push
inc
mov
ret
nop
adc
call
xor
loop
lock
dec
push
push
ret
fdecstp
mov
push
adc
cmp
and
dec
aam
ficompl
jg
jns
lret
les
loope
pop
mov
mov
pop
or
sbb
inc
das
sbb
add
test
mov
xor
add
xor
push
jge
cs
xor
cs
cli
adc
push
sub
sbb
cmp
int
push
push
mov
cmpsb
inc
cmp
and
and
jmp
inc
mov
xchg
in
cmp
inc
je
add
or
inc
pop
xchg
mov
mov
mov
ja
arpl
scas
adc
out
sub
mov
or
adc
jmp
loop
divl
lret
idivl
mov
jp
mov
sbb
dec
jne
daa
mov
into
cmp
add
iret
or
sbb
mov
sbb
inc
inc
mov
pushf
dec
clc
mov
imul
mov
rorl
push
rolb
xchg
jae
loop
xchg
sbb
pop
push
cs
js
shrb
dec
pop
lea
out
in
xlat
and
inc
mov
ret
jo
add
xchg
push
arpl
cwtl
pushw
mov
ja
fnstenv
sbb
in
lcall
int
outsl
lahf
push
into
pusha
or
cmp
push
sbb
jecxz
cmp
mov
fisttpll
inc
inc
jb
mov
or
fnsave
aas
nop
shl
mov
mov
pminsw
leave
sti
jns
cmc
push
repz
jae
sbb
push
int3
mov
cmc
cmp
inc
xor
cwtl
or
test
cmpsb
mov
add
rol
mov
push
out
pusha
xor
push
inc
into
popa
lret
push
and
ds
outsl
xchg
or
fcomi
pop
pop
adc
popa
lods
cmc
lahf
pop
sti
adc
inc
xchg
inc
push
mov
add
out
sub
pushf
mov
sub
jo
int
stc
mov
mull
xor
inc
mov
xor
cmp
jb
inc
sub
mov
xchg
pop
mov
pop
adc
lahf
testl
jo
jne
std
xor
fwait
push
aaa
notb
loope
insl
mov
lods
out
out
fs
scas
xlat
fnstcw
xchg
insl
in
leave
js
sbb
ret
scas
sub
sub
jns
cli
dec
sbb
repnz
add
mov
jns
mov
xor
stc
push
loope
negb
cmp
dec
aad
fistps
pop
and
fildl
in
cmc
sub
or
jmp
mov
lock
dec
cwtl
sti
inc
xorb
sbbb
cmp
xor
cmc
xchg
mov
enter
push
into
loopne
sub
nop
push
adc
data16
adc
out
inc
push
inc
iret
or
in
adc
sar
scas
jnp
stc
cmpl
mov
sub
int3
jle
bound
into
mov
jle
sbb
repz
lret
sbb
mov
or
and
push
jp
adc
fchs
inc
test
rcrb
xor
sahf
push
jne
popa
cmc
cli
sbb
adc
jo
adc
xchg
push
ret
bts
lcall
inc
sub
sbb
dec
scas
push
insb
pushf
pop
shrb
ret
fcoms
clc
imul
enter
ljmp
dec
pop
mov
add
jmp
xor
cmp
xchg
mov
mov
cmp
test
mov
arpl
js
test
stos
inc
sarl
mov
in
jmp
fwait
in
out
cwtl
js
nop
cmp
push
out
scas
stos
cwtl
aam
cmpb
adc
ret
inc
push
mov
dec
pop
por
daa
roll
les
scas
das
mov
out
rcll
mov
icebp
mov
rcrb
mov
mov
int3
xchg
fidivl
fdivrl
lcall
cmpsb
insl
mov
xchg
mov
cmp
pusha
mov
cli
pop
outsb
jge
popa
mov
fcomip
sahf
inc
sbb
lds
cmp
testb
pop
cmp
push
xor
sub
cmp
fwait
push
dec
pop
les
hlt
jo
clc
adc
adc
ret
outsl
push
js
and
and
push
xchg
adc
mov
test
inc
jne
sub
mov
gs
xchg
lahf
fnstenv
mov
iret
andb
xchg
loop
cmp
mov
xchg
xor
or
sbb
cmc
xchg
dec
jg
dec
dec
xchg
xchg
jl
mov
jl
cltd
jp
imul
repnz
in
add
sbb
xchg
sti
and
imul
loopne
xchg
xor
cmp
push
mov
and
enter
xchg
cmpsl
push
aad
mov
cmpsb
inc
mov
daa
or
xchg
xchg
das
ret
repz
adc
lock
fisubrl
and
pop
lock
ds
mov
sti
call
in
sub
je
insl
cltd
mov
sti
pop
mov
inc
adc
add
rcr
sti
jl
stc
adc
loop
ljmp
xor
aad
sub
mov
sub
lods
stos
call
das
mov
sub
and
pop
jge
jno,pn
push
or
test
loope
jmp
cmpsl
pop
ficoms
sbb
test
fnstenv
mov
inc
cmp
add
mov
dec
lahf
sbb
enter
push
and
std
hlt
dec
pop
scas
mov
dec
add
repnz
add
push
enter
sbb
ficompl
ljmp
stc
repz
pop
mov
sbb
mov
cli
mov
repz
dec
jns
lods
out
repnz
adc
and
xor
or
pop
pop
xor
icebp
mov
in
xchg
shlb
shll
ret
sub
or
inc
mov
pop
and
repnz
movsb
xor
fistps
cs
adc
push
adc
or
cmp
cmpsb
mov
loop
iret
sub
dec
mov
fiadds
dec
cmpsb
cwtl
jnp
jbe
cmp
js
mov
mov
jg
incb
push
mov
add
pop
xor
jbe
imul
outsl
repz
leave
xor
cmp
xchg
inc
add
loope
inc
and
fcoml
sub
cwtl
fldcw
nop
shl
cmp
call
xchg
and
pop
roll
imul
out
outsl
rsm
cmp
cmp
insb
pusha
push
cmp
pop
ds
push
xchg
jecxz
test
dec
mov
negl
jbe
adc
repz
jecxz
and
push
pop
pop
insb
inc
fwait
lret
rcll
sub
pop
sub
test
lret
pop
mov
clc
or
leave
mov
add
mov
dec
loopne
pop
test
jle
push
xor
lret
jbe
scas
test
xor
xor
jae
cmp
lahf
sub
cmp
push
test
mov
pop
stos
ljmp
mov
inc
jle
iret
cmpsb
xor
sbbl
xchg
ss
clc
movsb
or
dec
addb
icebp
lcall
cmpsl
out
test
and
push
out
xor
sub
popf
mov
das
aaa
pop
int
test
pop
je
sbb
xchg
movsl
pop
cmp
push
cmp
mov
fisubrs
je
sub
fnstcw
ss
sub
xlat
push
loop
aaa
pop
dec
andw
pop
iret
add
cmp
cmp
push
rcll
movsb
andl
lcall
push
out
xor
dec
push
fwait
cmp
cs
xor
inc
and
sbb
test
adc
outsb
jnp
add
into
call
xor
popf
xchg
sbb
test
shlb
lods
mov
sub
fcmovne
je
jae
cmp
fdivp
xchg
xchg
iret
mov
dec
shll
mov
dec
cmp
sbb
shr
out
test
loop
int
inc
sub
or
andb
mov
pop
adc
mov
mov
dec
mov
insl
roll
pusha
or
out
scas
inc
std
add
or
dec
out
inc
imul
dec
cmp
les
pop
jle
push
repz
mov
mov
adc
mov
arpl
and
pop
mov
es
push
mov
loop
or
cwtl
lds
fs
lds
pop
pop
ss
cs
push
or
lods
out
xor
sbb
mov
fisttps
pop
sbb
dec
sbb
loope
pop
ljmp
hlt
xor
jmp
cmp
mov
pop
xor
add
es
mov
mov
mov
jmp
xor
cs
and
or
les
sarb
push
jge
ret
pop
push
icebp
rclb
pop
into
mov
push
inc
sbb
mov
mov
mov
stc
out
push
jl
jmp
push
sbb
xchg
les
add
call
and
xchg
fistpl
xchg
nop
inc
xchg
mov
sbb
into
imul
inc
lahf
sub
fnstcw
addr16
jns
jae
lods
shll
dec
outsb
add
in
out
mov
pop
sets
mov
mov
xchg
sub
push
pop
sub
ret
add
xchg
mov
pop
pop
xor
sub
lret
or
cmpsl
add
insl
mov
push
ljmp
push
mov
stc
dec
add
fistpl
add
push
imul
dec
popf
aad
or
pop
lock
xchg
lret
pop
fmul
xchg
xlat
lock
sbb
mov
add
sub
sbb
and
mov
mov
aam
ljmp
xchg
cmp
add
aas
pusha
push
sub
dec
inc
jmp
sub
fwait
mov
mov
clc
jge
fstl
push
dec
pop
pop
sbb
subb
mov
and
adc
and
aad
mov
sarb
adc
aas
int
scas
stos
lods
ret
jo
ss
push
das
cmp
rcll
jb
shrl
cs
sub
imul
sbb
in
js
jmp
mov
or
cmp
ljmp
popf
xor
hlt
jle
sub
mov
jns
xchg
dec
adc
js
sarb
ror
pop
ss
lds
js
adc
sbb
call
jl
or
cmc
hlt
popa
cmc
xchg
in
shl
sbb
sar
xor
in
sti
outsb
sbb
push
fidivl
test
dec
cmp
cmp
mov
lods
mov
and
sub
lcall
pop
mov
sub
mov
out
push
cmp
ja
sbb
mov
stos
insl
mov
test
inc
fdivs
out
aam
cs
cmp
and
xor
cmp
fcompl
lods
in
arpl
inc
and
or
mov
jl
pop
cmpps
cmp
push
daa
icebp
inc
jl
inc
popf
test
and
pop
mov
pusha
ljmp
jnp
fdivrs
data16
inc
iret
push
sbb
cmpsl
out
pop
pand
cmpl
daa
inc
mov
stos
iret
mov
pusha
out
jns
xchg
lods
sbb
add
cmpsb
int3
pop
pop
mov
call
into
jbe
orb
jp
xor
int
push
scas
mov
pop
mov
and
adc
jg
out
lock
xor
outsb
pop
mov
hlt
mov
sbb
cmc
inc
fdivrs
push
cs
lahf
aad
mov
mov
je
xchg
testl
popf
xor
jns
fiadds
inc
lret
mov
jb
adc
jne
mov
mov
fs
test
sub
testl
push
cmp
scas
std
bound
dec
pop
lock
sub
mov
call
jne
lods
pop
scas
inc
ja
enter
sub
shlb
cs
mov
jo
pop
dec
pop
add
jb
fs
loopne
lods
or
roll
aas
inc
pushf
sti
dec
repz
aad
fidivrs
std
mov
mov
sbb
jne
data16
xchg
es
lds
cmp
imul
rcll
mov
rorb
mov
lret
and
cmp
shr
fucomip
mov
loop
xorl
add
daa
jae
aad
xchg
aad
dec
or
testl
dec
mov
sub
or
pop
xchg
std
fcmovnb
sahf
xchg
sbb
or
clc
jl
xchg
push
leave
iret
xchg
imul
dec
mov
and
enter
dec
enter
mov
cmp
not
xlat
lods
cmpsl
pop
xor
mov
outsb
insb
or
ja
fcoms
outsb
testl
hlt
mov
repz
stos
imul
pop
push
pop
aas
adc
lods
sbb
aas
inc
mov
out
les
xor
or
xor
outsl
lahf
aaa
into
cwtl
and
jmp
pop
dec
cmp
divl
sbb
push
testb
jne
xchg
in
mov
mov
pop
lcall
adcl
and
dec
arpl
cmpsl
push
or
xor
mov
loope
repz
inc
push
lds
mov
jno
adc
sbb
mov
or
fisubs
lods
push
call
add
mov
rclb
jnp
mov
xor
mov
add
shlb
fisubl
scas
clc
xchg
jge
test
sti
popa
sub
out
add
add
or
movsl
xor
idivb
cwtl
pushf
mov
xchg
or
daa
and
pop
leave
mov
xchg
sub
jne
wrmsr
xchg
fwait
ja
dec
or
adc
test
jl
and
shll
jae
sti
sbb
add
and
inc
xchg
call
xchg
mov
aad
inc
test
push
push
daa
dec
sbb
cmp
mov
sbb
cmpsb
mov
ret
fnstenv
dec
adc
mov
fists
mov
push
push
popa
inc
cmp
cmp
sti
das
fucomi
rorl
lods
test
adc
jne
mov
jns
call
cmp
pop
push
mov
nop
imul
lret
pushf
sahf
sbb
lds
sub
and
and
out
mov
incb
mov
and
vpshab
cmc
xor
outsl
sti
lret
pop
cli
mov
aas
into
xor
mov
jle
dec
push
push
mov
sbb
icebp
gs
aas
adc
cmp
aad
test
and
adc
inc
sbb
and
push
inc
xchg
ljmp
push
inc
insb
das
inc
addr16
lcall
into
cmp
jnp
mov
mov
and
mov
mov
les
loope
repz
js
vsubpd
testb
addr16
idivb
adc
arpl
loopne
add
sub
sub
shrl
pop
outsb
test
cmp
and
cmp
sub
in
or
movsl
leave
flds
es
mov
jb
stc
and
cmp
lcall
mov
mov
jmp
dec
pop
insl
into
lds
inc
xchg
mov
adc
aam
sbb
xchg
mov
push
pop
fs
mov
cwtl
or
hlt
ror
popa
fldt
fldz
jle
push
adc
mov
stc
jae
sbb
and
testb
jnp
jno
jb
mov
xchg
add
out
push
mov
cmp
jmp
sub
lods
pushf
sahf
clc
jmp
jb
pop
sub
imul
sarb
xor
jle
stc
nop
or
stos
and
bound
mov
fistl
adc
or
addr16
cmpsb
es
outsl
xchg
icebp
add
mov
std
mov
push
or
jecxz
jo
dec
loope
ret
sbb
les
stos
cs
or
cmp
jmp
adc
push
jnp
out
adc
dec
or
dec
lret
cmp
push
xchg
xlat
or
jno
ret
nop
sbb
loope
aad
mov
mov
mov
es
hlt
rolb
adc
fnstenv
shll
fidivs
mov
das
or
cmpsl
sub
out
outsl
push
or
sbb
aaa
or
test
lds
enter
andb
xchg
inc
push
adc
loopne
sti
xor
add
fsubs
mov
insl
rorb
ret
dec
or
cmpsb
icebp
sarb
mov
cmp
add
push
lock
xchg
pushf
or
fimull
out
pushf
jae
mov
adc
pop
adc
xor
sbb
fadds
cld
icebp
iret
es
daa
mov
pop
stos
hlt
arpl
mov
pop
sbbb
in
inc
pop
and
jecxz
push
inc
jp
jle
cmp
ret
lahf
cmpsb
in
cmp
inc
pop
test
xchg
cmpsl
mov
fbld
lcall
adc
into
mov
clc
inc
icebp
xchg
fidivs
shlb
orl
mov
push
lds
push
xchg
sub
ficompl
pop
in
push
jmp
mov
pop
mov
into
dec
xor
cs
jmp
leave
dec
imul
addl
or
stc
add
cmpl
pop
jg
mov
cld
mov
outsb
cwtl
fmul
rolb
movsl
push
mov
jl
jae
cmp
loopne
stos
add
jb
sbb
xor
loopne
sub
mov
std
dec
adc
sbb
clc
pop
mov
xor
cli
sub
dec
xchg
mov
shll
inc
int
imul
adc
mov
fidivl
js
mov
mov
decb
and
lcall
dec
mov
mov
data16
cmp
and
out
cli
add
enter
dec
repz
insb
xor
cmpsb
decl
fcom
mov
xor
pusha
sub
andl
aaa
sub
std
sbb
bound
mov
cmp
fcmovnu
fimull
inc
rcr
movsb
add
enter
mov
or
stos
inc
cmpsb
enter
mov
repz
or
xlat
inc
cmp
stos
jle
gs
in
movsl
cmp
and
or
sub
lcall
sub
imul
xchg
adc
pushf
dec
push
fucom
jge
mov
lret
pop
mov
ljmp
cli
enter
cmc
add
mov
adc
or
pushf
aaa
out
repz
ffreep
in
fdivrs
jecxz
mov
les
mov
mov
mov
pop
dec
cwtl
test
mov
mov
mov
mov
push
mov
mov
mov
mov
adc
pop
in
popf
adc
out
jecxz
sub
sub
xor
aad
add
lock
aam
mov
dec
mov
movsb
imul
jns
pop
negb
ds
bound
mov
mov
adc
mov
adc
inc
dec
iret
iret
pop
xor
or
sub
fs
push
aad
cmp
mov
int
inc
shll
jnp
dec
rcl
push
sbb
mov
mov
subl
orl
or
jmp
mov
jmp
repz
fadds
sbb
cwtl
je
jne
loop
daa
cmpsl
xor
movsb
inc
jl
in
sahf
fistps
insl
repnz
add
loope
cwtl
jg
lret
cmpps
popa
xchg
xor
repnz
out
push
dec
mov
std
aad
test
addr16
sbb
movsb
pusha
scas
add
pop
dec
dec
or
test
jl
push
ds
xchg
negb
lret
adc
push
or
pop
xor
cltd
cmc
lret
nop
repz
pusha
pop
jnp
xchg
data16
push
mov
scas
sub
movsl
mov
push
xchg
aaa
faddl
cmpsl
fisttps
mov
or
pop
sbb
or
cld
cmp
je
dec
rclb
fnsave
jno
shl
pop
stos
mov
popa
mov
jp
mov
xorb
les
jne
cmp
xchg
jl
or
movsl
fldcw
cmp
add
adc
adc
ss
insb
aam
and
notl
sahf
xchg
loopne
lock
ficoms
adc
xchg
gs
or
xor
dec
xchg
popa
and
into
inc
sti
mov
dec
push
add
mov
jge
aad
pop
adc
mov
sbb
mov
inc
jne
int3
imul
out
or
aad
mov
xchg
inc
pop
jno
test
faddp
ficoms
pusha
ljmp
inc
mov
cmp
bound
or
mov
sub
mov
sbb
dec
in
push
and
in
in
call
xchg
mov
mov
loop
pop
inc
into
movsb
sarb
fdivl
push
xor
mov
aaa
es
jo
mov
push
testl
cmpsb
push
push
mov
xor
cld
daa
jns
cmp
dec
fdiv
xor
stos
dec
push
es
orb
ret
push
lret
push
cmp
cmpsl
ret
popf
push
mov
out
sub
mov
push
xor
push
push
xor
loopne
je
cmpsl
jae
inc
push
daa
pop
sti
mov
lea
inc
inc
xchg
lcall
jo
or
ficompl
xor
stos
in
dec
test
hlt
clc
push
or
mov
in
mov
fxtract
cmp
aas
test
daa
repnz
pop
imul
negl
repz
jnp
lea
mov
orl
lea
jmp
subb
inc
dec
jge,pn
iret
xchg
jae
cmp
push
dec
es
scas
xchg
or
sbb
mov
cmpsl
lods
jns
xchg
adc
pop
dec
pop
test
mov
mov
inc
dec
pop
nop
jns
cmp
out
mov
adc
stc
scas
andl
jb
push
cli
scas
xor
adc
int3
js
push
sub
sbb
inc
movsl
sbb
mov
fwait
lock
mov
mov
out
aaa
idivl
mov
jae
loopne
loopne
xchg
jb
xchg
mov
sub
cmpsl
inc
jns
fwait
mov
push
cmp
cmc
fisubrs
je
int3
insb
popa
scas
lret
mov
sub
xchg
xchg
das
inc
rcr
pushf
out
mov
sub
fs
ja
std
shlb
in
das
adc
jecxz
shll
xchg
fucomi
jns
ja
aam
cwtl
or
push
test
mov
mov
jns
sbb
into
add
and
popf
decl
gs
push
and
es
std
mov
inc
subl
sbb
es
mov
test
rcll
sub
shld
ret
add
loopne
push
mov
jmp
adc
push
mov
insb
jp
or
stos
dec
xchg
adc
cmp
fisubs
pop
sarb
mov
xlat
popl
push
push
xor
cmpsb
and
push
lock
cmp
mov
pusha
and
vcvtsi2sdl
outsb
loope
cld
xchg
out
je
xchg
xchg
imul
decl
addr16
mov
push
cmc
inc
xor
dec
adc
aaa
lahf
cld
inc
punpcklwd
in
shl
fisubrl
jecxz
mov
push
aad
rcll
mov
mov
imul
adcl
or
mov
and
lret
cmpsb
cmpsl
leave
or
sub
out
nop
dec
repz
jae
sub
xlat
insl
add
es
push
mov
shrl
push
dec
jnp
mov
jl
sbb
and
mov
and
enter
mov
mov
lods
inc
adc
aam
push
out
sub
idivb
fwait
js
or
movsl
fsubs
call
mov
jecxz
push
push
call
int
aas
cmp
jne
rcrb
and
in
xlat
push
push
push
mov
std
push
loop
mov
test
and
loope
out
pop
pop
rolb
jle
mov
std
rcr
jbe
jbe
jnp
fisttpll
cmpl
or
subl
rorb
xchg
pop
pop
mov
mov
mov
mov
xchg
mov
vpminsw
rol
adc
sub
adc
or
dec
push
cs
push
xor
aas
das
rorl
scas
jmp
and
mov
and
es
out
push
mov
dec
repnz
adc
js
les
scas
xchg
push
mov
push
dec
into
es
bound
into
or
push
sbb
cmp
and
pop
daa
scas
pushw
mov
pushf
dec
icebp
mov
pop
dec
imul
cmp
xchg
mov
sbb
imul
xchg
outsb
movsb
add
rcrl
sbb
mov
push
jle
pop
push
push
pop
stc
in
mov
mov
movsl
xchg
inc
jg
sbb
jmp
aam
mov
data16
data16
repz
sbb
mov
mov
xchg
aam
pop
xchg
fildll
jns
enter
movsb
inc
out
out
push
xchg
hlt
cwtl
shll
sub
add
cmp
xor
mov
cmp
bound
ljmp
push
rclb
pop
cmp
rolb
js
pusha
orl
or
mov
jmp
daa
les
or
mov
pop
or
and
dec
fdiv
imul
fstps
dec
ret
xor
and
inc
ret
dec
sub
in
adc
adc
je
fst
mov
jp
leave
in
inc
wbinvd
xorb
enter
jge
cli
add
outsl
rcll
adc
jg
jl
sub
mov
imul
aad
bound
and
cvtdq2ps
test
rcr
fnsave
jp
push
or
cmove
cld
call
push
push
mov
js
cmpsb
mov
inc
test
mov
mov
ds
movb
pop
mov
ret
sub
add
sub
push
mov
or
and
jge
xchg
movsb
push
pop
push
stos
loopne
push
push
cmp
adc
pop
mov
inc
push
arpl
lahf
push
add
lea
cltd
xchg
es
filds
push
loopne
jmp
mov
mov
test
shl
jbe
and
dec
sub
mov
jp
clc
pop
cmp
es
sbb
shll
pop
incb
push
inc
cltd
out
out
mov
xchg
sub
sahf
inc
nop
adc
addb
cltd
sub
push
push
cld
cmp
bound
dec
pop
fsubs
inc
or
iret
ds
add
int3
mulb
leave
sbb
shrb
arpl
xor
xor
mov
rcr
sbb
add
sbb
in
ret
jb
sahf
loopne
mov
leave
les
outsb
pop
push
nopl
xchg
jge,pt
fidivl
adc
cmpl
mov
mov
fs
inc
inc
imul
jbe
mov
cmc
lcall
out
fiadds
cmp
xor
sbb
inc
loopne
add
cmp
pusha
mov
daa
dec
push
xchg
inc
out
dec
pushf
or
les
jg
int3
xorb
insl
fucomip
sarb
movsb
sar
inc
out
push
es
sub
jg
mov
aas
lahf
fildll
shrl
popa
push
dec
sbb
mov
mov
xor
into
add
push
das
and
lds
icebp
inc
or
lock
arpl
mov
cmp
dec
insl
loopne
dec
fmuls
mov
cmp
out
fists
idivb
pop
mov
in
bound
sub
add
xchg
mov
ss
cld
sub
push
cmp
das
testb
inc
inc
jb
xchg
push
and
xor
mov
inc
push
mov
xchg
adc
jbe
inc
cmp
in
test
cmpsl
aaa
idivl
pop
lods
xchg
fsubrs
adc
test
dec
stos
jnp
idiv
sbb
std
and
lret
aaa
sub
mov
dec
sbb
and
sbb
stos
cs
jmp
lahf
ds
adc
shll
repnz
sub
cmp
insl
sub
lods
scas
lcall
inc
and
and
out
or
dec
imul
in
xlat
pop
aas
sbb
imul
shlb
das
xchg
mov
insb
into
dec
xor
jl
rorb
push
push
adc
rorl
fildl
pop
mov
popf
mov
movsl
dec
cld
dec
sub
addl
dec
add
ja
cli
stc
push
cmp
pop
cmp
popa
mov
and
pop
dec
loope
push
or
insl
xchg
test
sbb
or
xor
cs
cmp
sub
jecxz
cmpsl
cmp
mov
in
hlt
js
mov
push
adc
pop
pop
dec
ret
in
les
pop
add
add
test
mov
push
out
xchg
int
into
jns
std
sub
adc
fidivrl
jb
jle
push
adc
xchg
pop
ds
jns
hlt
scas
and
aam
subb
inc
push
fiaddl
xor
jmp
arpl
mov
xchg
xchg
or
sub
mov
cmpsl
pop
ret
loopne
inc
ret
pop
ret
adc
push
out
xlat
call
mov
cmp
pop
jge
mov
xor
dec
pop
ljmp
arpl
cmp
or
ljmp
lahf
xchg
aaa
or
out
imul
xor
clc
jo
add
inc
das
cmpsb
sti
sub
jp
adc
aad
lea
bound
push
jmp
dec
xchg
push
stc
mov
mov
jl
sbb
call
jp
lcall
insb
lret
ss
les
fmull
lock
sahf
pop
adc
pop
pop
xchg
push
xor
xlat
sub
push
sbb
or
in
sub
sahf
pop
mov
sar
stc
pop
pop
and
aas
testl
fisttpll
out
push
insb
dec
add
ja
jno
push
add
pop
data16
or
popa
lcall
jp
neg
cs
addb
sbb
lret
outsb
sti
inc
shrl
rcll
push
cmpl
xchg
ret
fldcw
outsb
test
pop
xor
mov
add
int3
jne
xchg
pop
inc
lahf
outsl
notb
xchg
js
push
aaa
jno
jecxz
cmp
popf
jle
leave
std
hlt
popf
cmp
ss
stos
xorb
sbb
lahf
mov
popf
addb
push
push
out
sbbb
and
aaa
xorb
pushf
popf
data16
out
push
scas
mov
inc
pop
pop
lock
and
jns
lods
sub
and
mov
cmp
pop
cmp
out
sti
scas
mov
loope
add
mov
cmp
cmp
pushf
sahf
daa
leave
add
ljmp
frndint
jl
sbb
xchg
inc
xchg
or
mov
aam
in
in
mov
dec
push
push
mov
push
or
mov
inc
or
testl
testb
or
ret
negb
mov
push
xchg
arpl
aaa
jg
sbb
jg
cltd
xor
data16
pushl
insl
cmp
mov
insl
scas
adc
das
fcomps
popf
jmp
sbb
aas
inc
andb
mov
repnz
mov
fnsave
test
dec
gs
cmp
sbb
stos
dec
inc
mov
fiadds
out
sbb
dec
lds
push
cld
aad
pop
movsl
test
dec
testl
cltd
pop
bound
mov
stos
mov
and
negl
cmp
cmp
lock
and
inc
test
pop
loop
add
xchg
in
inc
lret
add
sbb
aam
cltd
adc
out
outsl
xor
jle
rorl
cs
xchg
adc
sub
lret
arpl
aam
aas
fdivrl
and
imul
call
mov
aad
pop
pop
sbb
mov
push
jmp
cmp
repz
mov
roll
popa
xchg
sub
jle
decl
cmpsb
adc
pusha
inc
pop
fstl
dec
push
mov
fwait
dec
cltd
xchg
in
jmp
push
push
outsb
jbe
adc
xchg
push
jbe
out
jbe
and
jecxz
ds
dec
add
in
cwtl
jle
stos
stos
test
dec
lret
inc
fucomp
fcmove
sub
push
mov
into
leave
les
out
lcall
es
pop
cwtl
shlb
ljmp
push
lds
loopne
in
orb
leave
adc
and
fwait
sahf
and
jecxz
mov
lret
pop
jmp
rcrb
dec
lods
mov
fcompl
je
movsl
call
push
loopne
jne
lahf
pushf
sub
mov
je
adc
pop
sub
hlt
cs
int
pop
mov
cmpsb
dec
shll
cmovbe
out
in
mov
in
je
fldenv
push
mov
dec
test
pop
xchg
lock
push
or
xchg
loope
sub
mov
jo
add
testb
movsb
push
cltd
mov
nop
lods
test
jle
outsw
nop
or
cmp
clc
ret
and
cmp
stc
sbb
cmpsl
stos
popf
sbb
pop
or
lea
xchg
push
data16
rclb
mov
xor
movsl
push
sub
adc
or
add
adc
or
push
add
decb
fidivl
sub
negl
dec
xlat
or
push
pop
push
mov
push
xor
jbe
pop
dec
pushf
sub
push
add
mov
je
bound
sub
scas
test
inc
xchg
pop
add
push
aad
xchg
sti
push
scas
mov
sub
addr16
or
push
sub
pop
les
test
pushf
pop
and
mov
pushf
mov
lcall
mov
adc
adc
imul
repz
stos
and
test
mov
pop
ret
inc
xchg
jns
test
jbe
filds
ljmp
sti
cmp
xchg
mov
or
pop
sti
std
jnp
roll
lea
andb
dec
adc
out
fadds
and
cmp
push
mov
mov
movsl
sbb
std
into
mov
in
daa
clc
fldcw
push
mov
sbb
nop
xchg
popa
out
sbb
cmp
mov
in
test
and
scas
inc
aas
std
jb
hlt
rcrl
sub
bswap
mov
adc
rolb
lret
inc
pop
pop
fisubs
jg
aad
gs
sahf
mov
add
dec
xchg
adc
lock
imul
daa
mov
jg
in
mov
add
jecxz
stos
scas
sub
or
pop
jbe
arpl
aaa
movsl
enter
add
mov
or
mov
xorl
add
push
ret
sbb
nop
fstps
andl
and
mov
push
pop
or
push
cmpsb
mov
adc
push
adc
jnp
dec
lods
cmpsl
xor
push
lds
mov
negb
mov
test
lret
stc
jae
add
xor
xchg
push
aas
xor
es
addr16
ljmp
add
inc
scas
sbb
or
or
stos
xor
mov
jg
bound
or
int3
scas
ds
les
lock
xor
dec
out
push
dec
cmpb
in
pop
rol
fstl
sub
je
push
popa
fisubl
inc
shlb
mov
loop
fldcw
mov
push
in
mov
sahf
test
scas
sahf
arpl
ljmp
shr
mov
lds
or
mov
insl
inc
ror
cmp
mov
add
sahf
or
imul
cmpb
mov
cmp
cmpsl
std
adc
repz
xlat
xchg
and
mov
lods
in
out
push
jbe
les
stc
outsl
imul
cwtl
stos
repz
or
sbb
les
pop
inc
sbb
jbe
jb
inc
addb
pop
lock
mov
imul
xor
outsl
mov
andb
test
ret
cltd
sub
pusha
scas
repz
mov
inc
dec
ror
mov
sbb
leave
inc
pop
push
fdivr
xchg
mov
sbb
jle
js
loopne
paddb
mulb
aam
pop
test
mov
inc
sbb
jno
popa
hlt
std
adc
repz
into
mov
push
ljmp
hlt
rcrb
or
dec
mov
filds
xor
int
into
cmpsl
lds
cli
cwtl
push
into
pop
cld
xor
fidivrl
xchg
or
arpl
cmp
out
mov
xor
sub
outsb
mov
test
push
cmp
es
popf
addr16
dec
add
or
fisubs
sti
inc
push
push
scas
xchg
mov
sar
mov
in
add
mov
pop
lret
pop
clc
int
ret
daa
or
xchg
inc
imul
int3
push
push
lret
jne
mov
mov
cmp
stos
dec
push
xchg
sub
je
jg
push
std
hlt
cmp
or
andb
popf
jecxz
out
lret
lds
sbb
sti
mov
add
cmovl
add
jge
pop
adc
jne
dec
addb
mov
data16
sbb
mov
pop
in
push
mov
movsb
push
xlat
push
jle
stos
push
xchg
inc
setle
dec
xor
sbb
ljmp
ret
add
cmpsb
push
je
out
dec
test
or
xchg
iret
hlt
pop
int3
daa
sub
in
test
push
push
jl
lahf
roll
cmpsb
ss
cmp
daa
adc
lahf
cmpsl
sub
nop
inc
jl
pop
push
data16
insl
pop
bound
add
nop
movsb
cmp
mov
aas
jno
negl
enter
sahf
sbb
gs
lea
movsl
dec
cmpsl
cmc
xor
shll
mov
imul
xchg
jno
mull
dec
dec
test
push
pop
add
ret
mov
int
add
mov
xor
popf
sub
mov
insb
loope
loopne
jae
sub
test
fimull
cmpsb
les
std
insl
sbb
sbb
push
lds
jo
adc
jnp
jnp
mov
add
add
inc
loopne
inc
push
scas
or
ja
and
fwait
test
pop
loope
divl
xchg
add
popf
sbb
push
inc
jmp
movl
push
push
xor
ret
mov
ljmp
adc
xchg
bswap
lret
nop
test
pop
xlat
fisttpl
xchg
xor
mov
pop
mov
dec
push
sub
push
js
xor
jle
pop
dec
cmp
into
stc
sar
into
inc
xchg
fisubl
inc
dec
add
cwtl
jne
pop
pushf
loop
bswap
xchg
xor
rcrb
add
shll
mov
repz
inc
mov
xor
sbb
imul
jne
and
sub
xchg
loope
cwtl
cmp
or
aaa
addr16
movsl
fs
fs
jmp
and
mov
adc
pop
cmp
mov
and
fcomp
push
into
xor
push
pop
sub
sbb
mov
jne
xchg
lds
ss
cmp
hlt
inc
jge
shl
mov
push
xchg
dec
mov
jo
stos
sbb
or
das
lods
inc
mov
in
cmpsl
xor
xchg
dec
enter
adc
arpl
add
fwait
popf
and
pop
insb
ret
in
push
sub
jg
scas
dec
das
cmp
fwait
push
cltd
ljmp
dec
pop
sub
cmc
insb
cld
mov
and
inc
or
mov
mov
subb
hlt
or
jmp
and
mov
test
fs
mov
mov
push
xchg
jae
xchg
test
pop
and
jne
popa
pop
xor
aas
loope
std
add
testb
jae
xor
scas
or
sub
imul
mov
cmpsb
mov
addb
mov
gs
pushl
and
xchg
in
ret
rcrb
adc
inc
lock
into
mov
fcoms
imul
imul
shl
mov
cmp
xor
sbb
sub
sbb
test
add
cmc
cmpsl
test
cwtl
lea
mov
mov
inc
dec
add
aad
or
sti
xchg
dec
mov
out
arpl
mov
pop
insl
fcompl
retw
ja
out
fwait
dec
jbe
xor
loope
xlat
testl
cmp
outsl
adc
mov
mov
loop
cltd
mov
jle
push
mov
adcl
xchg
sbb
xchg
cmpsb
or
fs
lds
cmc
rolb
inc
pop
mov
fisubrl
insl
in
mov
xlat
sub
sub
pop
fldcw
filds
dec
push
enter
push
or
jp
in
mov
mov
pop
or
xchg
clc
lahf
and
addr16
mov
cmp
mov
stos
cld
mov
movsb
adc
dec
adc
jecxz
jns
mov
and
fdivrs
inc
sbb
loop
pop
out
pop
out
rorl
xchg
repnz
sarl
add
xchg
dec
jbe
mov
fucom
push
inc
lock
popf
xor
xchg
jne
int
add
lcall
adc
dec
jnp
repz
mov
ds
xchg
lods
adc
setne
sub
cwtl
les
mov
mov
dec
pop
sbb
cmpb
out
lea
or
add
ret
cmp
xchg
xor
mov
sub
mov
mov
loope
xchg
add
mov
adc
dec
adc
sub
cmpsb
mov
cwtl
rorl
lods
mov
dec
add
mov
pushf
mov
dec
xchg
in
jle
aad
daa
inc
imul
stos
push
or
pop
push
and
stc
daa
jp
jbe
jge
cmc
push
sarb
cmp
sbb
lcall
es
aaa
and
in
adc
mov
ja
lea
push
mov
enter
push
clc
push
xchg
fidivl
mov
or
fs
or
stos
sbb
mov
inc
pusha
mov
fs
cli
sub
inc
ss
clc
out
mov
jp
data16
adc
test
pop
mov
out
cmp
fstpt
pop
jns
lcall
add
fs
sub
fldl
cltd
cld
sub
popf
fs
aaa
xchg
jl
ja
psubb
scas
dec
in
mov
jp
out
dec
cmp
sbb
add
add
ss
mov
ret
inc
in
dec
mov
stos
popf
jge
pop
sub
loopne
and
sti
jle
fistpl
pop
popa
xor
mov
adc
cmp
jae
pop
pop
dec
stos
aam
cmp
lea
ljmp
mov
mov
test
adc
andb
mov
pop
testb
dec
nop
lds
add
add
sahf
or
push
ret
int
mov
iret
jae
rclb
pop
adc
mov
int3
dec
pop
shll
and
push
dec
jnp
lahf
nop
mov
in
mov
popa
dec
cmp
inc
lahf
out
and
rorl
dec
xor
adcl
add
jns
hlt
and
adc
rorl
jnp
pop
or
bound
cmc
in
aad
std
mov
repnz
fistpll
cmpsl
lahf
push
orl
push
ja
rol
xchg
ljmp
out
jmp
cmp
and
stos
out
xor
pop
or
adc
out
add
loop
fcomps
push
mov
mov
sub
loopne
xchg
movsl
testl
loope
rorb
push
sub
insl
dec
and
cmp
lret
arpl
scas
mov
arpl
fisubl
push
mov
mov
cmc
xor
push
int
or
inc
push
inc
fidivs
gs
mov
test
fcoml
or
add
ds
mov
add
dec
shll
or
cmp
inc
add
pop
sub
add
and
scas
shl
lahf
nop
dec
inc
insb
and
dec
jno
cmp
push
mov
mulb
mov
sub
loopne
dec
repz
rol
xor
jns
cltd
dec
scas
out
mov
enter
pop
xor
movsb
int
fisttps
dec
pop
sbb
test
jne
lock
or
or
imul
inc
adc
mov
adc
popf
daa
mov
mov
gs
mov
xchg
adc
xchg
test
push
jecxz
inc
loop
mov
mov
pop
std
adc
fstpl
jns
or
pop
mov
mov
push
push
lock
clc
mov
sbb
xchg
mov
inc
pop
sub
or
in
rcrb
mov
sbb
sbb
sbb
xchg
sbb
outsl
jb
call
xchg
sti
popf
xchg
stc
dec
clc
push
jle
or
leave
add
ss
ja,pt
sub
xchg
cmc
stos
scas
sbb
out
or
fucomp
pop
loop
leave
scas
or
cmp
lods
xchg
das
xor
mov
push
jmp
bound
jecxz
jecxz
jae
jae
mov
insl
jns
xchg
idivb
cli
ljmp
cmpsb
test
push
dec
in
cwtl
dec
hlt
and
outsb
sbb
xor
out
std
push
mov
pop
mov
lret
lcall
pushf
pusha
cmc
pop
sub
clc
movsb
ja
sub
test
js
dec
push
stos
ljmp
mov
or
mov
mov
divb
and
mov
adc
int3
jo
stos
adc
mov
push
xchg
aad
pop
pop
sbb
jo
gs
iretw
mov
jo
insl
nop
call
pop
ret
inc
pushf
in
loopne
call
cmp
xor
pushf
lock
jg
leave
popa
icebp
push
fmull
xor
sbb
sarl
mov
dec
das
xchg
lcall
mov
dec
insb
ja
cmp
or
cli
adc
addr16
lret
push
repz
loop
pop
xlat
movl
ss
cmp
sbb
cmc
lret
sub
and
lret
pop
push
sahf
pop
jb
lahf
in
testb
inc
sub
inc
loopne
pusha
lcall
and
sahf
mov
outsl
fimull
xchg
mov
or
out
icebp
aas
inc
push
xor
and
cmp
aaa
in
mov
inc
cmc
mov
mov
push
ss
pop
mov
xchg
or
add
ret
jle
cltd
and
push
lods
xchg
sbb
jb
xor
pop
or
lahf
es
adc
in
js
cmc
xor
and
xor
push
jae
cmc
shll
jbe
pop
stos
sub
cld
in
lret
orl
es
or
cld
sbb
dec
das
lock
or
dec
mov
ja
fwait
mov
pop
out
lods
inc
test
mov
in
fsts
jl
mov
dec
in
popf
sahf
testl
push
xchg
pop
and
push
jle
imul
xchg
je
and
xchg
cmp
adc
out
and
xchg
dec
mov
mov
dec
fcmovnbe
xchg
popa
push
and
iret
and
daa
int
pushf
lds
adc
push
shrl
sub
out
pushl
jno
lds
mov
xchg
fwait
adc
inc
mov
xchg
shll
adc
imulb
insl
push
xchg
insb
sub
fwait
bnd
lock
push
sbb
lea
ret
mov
adc
arpl
mov
into
push
pop
cld
test
mov
cmp
das
out
add
out
or
in
sti
sub
mov
sbb
test
push
push
xchg
inc
push
jle
mov
addr16
mov
fwait
mov
or
mov
aad
cmpsb
push
rcll
stc
out
xchg
cmp
rorl
cltd
outsl
xorb
mov
popf
mov
pop
push
iret
xor
jg
imul
push
or
lret
mov
mov
adc
pushf
push
fbstp
pop
pushf
nop
inc
jbe
cmp
xor
clc
inc
inc
jo
sub
pop
mov
mov
and
dec
xor
pop
cmp
mov
jae
cmpsl
ds
jo
mov
dec
nop
sub
rcll
dec
dec
xchg
xchg
clc
repz
jno
push
sub
testl
les
and
inc
push
xor
ficoms
in
inc
mov
int
and
mov
push
cmp
cmp
into
cwtl
fisubrl
xchg
iret
sub
rorl
icebp
add
cmp
inc
and
jmp
cltd
jecxz
mul
jmp
jp
aad
les
rolb
jmp
jg
dec
cs
push
ret
or
out
test
daa
hlt
not
adc
mov
test
cmpsb
repnz
cmc
pop
dec
xchg
xchg
mov
add
xchg
shr
addr16
jne
rorb
inc
push
test
add
adc
mov
sub
jne
scas
pop
xlat
jae
cwtl
mov
add
xchg
push
insb
push
aas
aaa
cmpsl
push
stos
iret
inc
in
sub
stos
mov
imul
sarb
or
clc
sub
adc
or
scas
pop
push
xor
dec
mov
outsb
es
dec
mov
cmpsl
out
out
jmp
outsb
cltd
shlb
add
int3
insl
or
jmp
test
mov
shr
les
mov
lods
enter
jmp
fisubl
out
movsl
xor
aas
pop
pop
int
dec
js
and
test
inc
mov
dec
xor
lret
dec
mov
cmp
jle
roll
testl
inc
lret
aaa
pop
mov
dec
pop
pop
inc
sub
icebp
xorl
sti
or
dec
popa
xor
xor
movsb
adc
out
setbe
subl
jl
stos
pop
xlat
xchg
imul
movsl
and
mov
adc
push
jnp
inc
inc
xchg
sub
lds
icebp
mov
push
enter
jo
sub
nop
inc
outsl
pop
xchg
push
mov
sbb
cmc
mov
inc
test
xor
aad
xor
je
loope
loop
ss
push
sub
test
or
aaa
push
loop
rol
push
mov
daa
pop
ds
outsl
repz
adc
ljmp
push
mov
mov
in
insl
dec
jno
xor
lods
cmc
push
mov
ret
or
gs
xchg
add
sbbl
popf
sbb
mov
mov
cmp
and
cmp
jl
dec
test
jle
addl
xchg
or
ror
lock
cld
mov
xchg
jae
jae
mov
aam
pop
pop
jnp
outsb
faddl
outsb
mov
mov
sbb
xchg
mov
xor
in
notl
lods
jne
or
je
or
lods
pop
inc
loopne
cmp
outsb
mov
mov
test
mov
pop
sahf
cltd
inc
push
fcmovu
mov
jl
xchg
or
imul
js
xchg
sti
aaa
pop
xchg
xchg
in
xlat
or
push
push
pop
mov
sub
jecxz
add
sahf
pop
adc
insb
add
and
jb
mov
arpl
lods
fidivs
xchg
inc
mov
jne
mov
in
leave
test
cmp
addl
mov
dec
add
popf
push
xor
cli
addr16
add
call
xor
scas
push
pop
lods
fdiv
movsb
sti
mov
and
ds
fidivl
sbb
lds
sahf
outsb
push
adc
xchg
add
pop
ret
lea
and
dec
data16
stos
jno
xor
shlb
xor
mov
dec
sarb
fwait
inc
pop
add
add
push
test
cmp
xor
addl
pop
mov
xchg
cltd
xor
cs
jmp
stc
lahf
sub
jle
mov
out
fsts
push
cmpsb
movsl
lret
loop
xchg
and
xor
pop
aaa
fadds
scas
insl
dec
imul
mov
xchg
mov
scas
dec
fs
push
orl
ja
cmpsl
cli
cmp
lds
pushf
outsb
cltd
rcll
lret
int
ret
orl
dec
mov
jnp
pusha
adc
adc
in
out
or
jecxz
repz
add
jp
adc
sub
outsb
repz
sub
into
jl
mov
jne
inc
sub
fildll
jmp
jo
cmpsb
ret
leave
mov
mov
lds
jbe
mov
and
pop
ds
cmp
test
cmovb
lret
or
fnstcw
push
or
bnd
jae
cs
sbb
xor
jmp
pop
enter
cli
and
cmp
fbld
das
lods
lcall
repz
push
sbb
add
in
cwtl
mov
test
xchg
fisttpll
and
push
xchg
js
lods
clc
sahf
jle
jae
cmp
inc
adc
and
xor
jb
sbb
mov
out
jbe
jns
cmc
inc
std
call
dec
repnz
sub
ds
in
mov
scas
push
incb
movsl
stc
cli
and
leave
push
push
xchg
mov
sbb
adc
popa
subb
repz
iret
mov
fadd
std
loope
shll
adc
ja
notb
out
push
es
mov
subl
add
and
adc
jl
cmp
adc
cli
dec
pusha
aad
cmp
jns
and
mov
movsb
sub
jmp
cmp
lds
jmp
scas
sub
lahf
psubd
add
call
push
aaa
int
sbb
lcall
lock
cltd
js
icebp
fisttps
mov
in
pushw
pop
addl
xor
dec
dec
jl
leave
and
roll
add
cmovge
cli
sahf
pop
test
sub
lods
movsb
scas
mov
jge
lret
gs
std
add
push
or
xchg
cmp
shl
fdivs
sbb
nop
dec
mov
and
into
js
adc
dec
or
xchg
pop
data16
mov
hlt
clc
test
fiaddl
data16
lds
std
dec
insb
ja
jno
lcall
and
and
push
loope
mov
cmpsb
push
hlt
or
add
rorb
push
jo
mov
inc
fdivl
sbb
pop
cmp
into
or
ffree
and
gs
lret
data16
stc
call
mov
call
cmp
sbb
cmc
test
jge
movsb
popa
xchg
movsl
rcll
nop
push
shlb
lcall
dec
xlat
pop
jl
dec
out
push
sub
mov
or
in
sti
pop
out
movsb
sti
lahf
cmp
stos
cmpsl
xor
cmp
rcl
push
movsl
loope
test
lods
cwtl
addr16
xor
mov
pop
or
push
cwtl
and
stc
or
push
xor
pop
rol
lds
or
mov
std
or
jb
push
and
and
xor
mov
add
sub
lret
inc
lret
xor
sbb
or
inc
outsb
lret
inc
mov
jo
imul
jae
hlt
xor
jns
or
imul
xor
mov
fdivrs
call
and
and
mov
cmp
push
pop
xchg
out
and
leave
subl
xchg
mov
jne
enter
dec
movsl
ret
push
dec
les
add
das
js
rcrl
icebp
incl
cli
inc
xor
inc
sbb
sub
cwtl
xor
roll
pop
xchg
dec
popf
jle
movsb
mov
lahf
or
popa
aas
mov
pushf
mov
ds
sahf
fisttpll
lret
and
dec
and
sbb
mov
fadd
cltd
dec
cmp
roll
movsl
idivb
clc
mov
mov
pushf
nop
into
dec
decl
inc
push
jns
mov
pop
das
pop
or
adc
inc
pop
shl
adc
push
mov
filds
sbbb
outsl
ljmp
jnp
shlb
mov
inc
xchg
jecxz
xor
movsl
dec
aas
lods
dec
adc
push
or
loopne
inc
outsl
js
test
int
xor
and
add
push
mov
jmp
out
roll
icebp
sti
gs
add
lahf
dec
das
xchg
xor
ds
imul
add
adc
pushf
dec
xchg
xchg
mov
lods
jne
jp
push
add
dec
inc
enter
sub
xchg
and
fisubrs
dec
test
xor
fiaddl
mov
cmp
decb
push
pop
daa
push
call
hlt
pop
stos
cmp
hlt
shl
xor
xchg
sub
bsr
fwait
xor
adc
xor
inc
push
stos
cmp
xchg
or
push
mov
or
inc
rcrb
dec
inc
or
inc
icebp
cld
inc
cmp
and
hlt
outsl
adc
divb
add
aas
xor
jecxz
nop
shlb
popf
push
nop
jecxz
or
sti
ret
jge
xor
je
push
pop
cli
push
insb
call
cs
xchg
decb
cwtl
je
imul
fisubrl
je
sub
lods
mov
fmulp
adc
dec
lea
loopne
adc
xchg
data16
xchg
jg
cmp
inc
mov
cltd
or
add
and
aaa
mov
add
into
cltd
add
mov
jae
scas
sbb
jbe
add
aad
fdivrp
or
addr16
xor
and
sbb
dec
fildll
pushf
jle
call
lcall
aad
push
mov
pop
sbb
getsec
int3
scas
mov
clc
jns
stos
pop
daa
xchg
mov
and
repnz
xor
pop
add
mov
mov
mov
sub
subb
enter
inc
stos
mov
aam
adc
and
fiaddl
xchg
mov
cld
mov
pop
xor
mov
in
add
push
dec
hlt
mov
loopne
loope
cmpsb
imull
jge
sub
mov
movsl
stos
sbbb
push
rorl
mov
leave
daa
popa
mov
neg
mov
insb
or
add
sbb
outsl
aam
aam
sti
sahf
and
push
cmc
pop
push
cmp
and
push
or
sti
push
push
aam
cmpsb
shrl
stc
inc
pop
inc
out
roll
cmp
rcrl
jae
sahf
sub
mov
repnz
jl
mov
lds
dec
cld
out
add
je
adc
test
jmp
and
jle
mov
xchg
dec
adcb
pop
push
and
pusha
mov
cmp
xchg
add
push
movsl
arpl
cmp
lods
jbe
pop
inc
jl
in
andps
ja
jo
push
addr16
add
mov
jmp
adc
pop
xchg
push
stc
sbb
loop
sbb
notb
pop
fcomps
aam
rorb
rcll
mov
sub
mov
shll
adc
or
mov
jp
adc
pop
pop
ret
mov
xchg
addb
adc
jl
add
jge
cmp
jmp
aam
ret
pop
fs
scas
mov
nop
in
pushf
mov
lods
pop
rcrl
dec
jle
testb
jbe
xor
xor
inc
dec
mov
addr16
xor
and
xchg
movsb
xlat
xchg
jp
xchg
or
fdivrs
sbb
jne
or
dec
lret
jl
scas
sub
xor
out
lock
sarb
imul
bound
pushf
push
loopne
sub
js
pop
loope
sti
cli
dec
jle
in
std
pop
out
pop
cmp
divl
rcrl
pop
inc
sahf
mov
cltd
push
mov
mov
sbb
enter
mov
and
dec
cmp
cwtl
cltd
pop
xchg
clc
push
sti
fwait
pop
pop
roll
xor
movsl
test
mov
pop
in
iret
xchg
adc
mov
imul
lods
repz
mov
mov
rcl
sub
rcr
sub
mov
dec
addr16
push
cli
mov
dec
adc
push
leave
jno
rcrb
imul
pushf
cmp
pop
movsl
sbb
mov
jle
subl
daa
jno
leave
lock
fwait
sbb
leave
cmp
cmp
idivb
pop
sbb
fwait
test
jae
aam
mov
imul
fnstenv
sbb
or
push
in
pushf
lods
lock
out
test
test
fcomps
jecxz
aaa
les
movsl
adc
push
push
push
mov
sub
or
rcll
or
sbb
shrb
xor
addr16
mov
xchg
push
add
push
adc
adc
dec
adc
shrl
jb
push
dec
scas
jns
push
mov
call
mov
sarb
lods
aad
cmpl
xor
push
jb
mov
mov
insl
sub
xlat
ja
xor
push
sub
aad
adc
mov
mov
dec
cmp
cs
jb
rolb
add
pop
mov
add
xor
and
cmp
mov
pop
push
sbb
fwait
jb
loop
das
fxch
xor
mov
sbb
sbb
xchg
sub
inc
sbb
sarl
jnp
iret
aam
hlt
push
inc
aad
pop
push
push
push
sub
ss
jbe
xchg
xor
xchg
gs
xchg
ljmp
outsb
mov
push
xchg
xchg
inc
mov
lods
xor
daa
xorb
loop
sbb
cmpsb
pop
lcall
pop
mov
lcall
popf
jl
push
data16
or
push
js
scas
jmp
inc
mov
loope
mov
stos
cmp
push
mov
and
inc
xchg
sub
inc
sbb
xor
das
cs
out
inc
stos
and
movsb
mov
dec
bound
mov
lea
mov
daa
lcall
push
notb
cmpsl
sub
xor
pop
xchg
shll
mov
xchg
or
fists
addb
pop
stos
pop
or
inc
fcmove
lea
push
mov
mov
dec
mov
aaa
aam
insl
mov
xchg
cwtl
add
bound
pop
bnd
adc
xchg
add
sbb
pusha
xor
mov
scas
dec
dec
xor
xor
incb
cmp
inc
mov
and
scas
adc
inc
clc
addl
outsb
add
sbb
cmp
sub
mov
arpl
fiaddl
mov
push
out
mov
xlat
xlat
in
xor
push
adc
jns
pop
mov
movsb
adc
cmp
push
std
cmp
mov
cmp
xor
cmp
enter
sbb
je
sbb
out
nop
push
test
adc
aaa
sub
sbb
push
fdivr
push
or
push
fnstcw
adc
xchg
add
aad
repnz
repnz
shr
xor
mov
pop
cmp
adc
cli
adc
mov
jp
dec
fstl
insb
test
sbb
xor
lods
shlb
data16
decl
frstor
or
add
xchg
fsubrs
mov
mov
mov
lahf
orb
dec
das
xor
mov
lret
test
rcll
push
aad
push
jle
mov
pop
add
jle
popf
xchg
in
pop
inc
cmpsb
int3
inc
test
cmpb
jns
add
mov
out
inc
stc
iret
dec
jnp
rorl
xchg
cmpsl
pusha
cmp
cltd
stos
push
sub
ret
jnp
xlat
lret
cmp
in
mov
mov
push
test
adc
push
cwtl
mov
clc
jne
imull
dec
stos
jb
jnp
sub
mov
cmp
xchg
push
stos
call
xchg
xor
jns
xchg
pop
pop
and
mov
jp
sub
sahf
cmpsb
and
sbb
or
and
dec
stos
cwtl
lcall
add
xor
cmpsb
push
addr16
popf
stos
enter
and
loop
inc
mov
and
xchg
xor
addb
jle
mov
pop
add
or
pop
in
or
ret
jae
inc
and
dec
cvtps2pi
lea
dec
xchg
cwtl
jl
xchg
jbe
cmp
nop
or
xchg
cmc
xchg
mov
les
sub
out
in
cmp
or
ret
aad
inc
in
inc
pop
popa
movsb
aad
inc
repnz
out
lcall
shll
cmpsb
push
xor
sti
mov
call
repz
in
adc
out
sub
push
test
loope
push
popf
aas
das
lods
scas
xor
mov
mov
add
xchg
sub
shl
loope
xor
fimuls
and
outsb
adc
nop
movsl
push
repz
js
repnz
ja
sbb
xchg
and
out
nop
lds
push
and
xchg
in
cwtl
mov
mov
mov
or
sbbb
push
jbe
insb
or
adc
mov
lahf
jg
repz
and
pop
sbb
and
std
mov
ror
jle
xchg
cltd
outsb
push
inc
pusha
ds
push
fildll
sarb
xchg
mov
cmpsb
mov
sahf
rolb
ljmp
rclb
mov
jl
mov
loopne
push
lods
imul
jnp
xor
xchg
jge
sbb
fiaddl
xlat
pusha
addr16
lcall
int3
pop
aaa
das
in
dec
mov
and
pop
sub
jae
xchg
imul
aam
in
sbb
out
cmp
add
shll
push
or
out
push
in
in
xchg
xchg
xchg
jle
and
repnz
dec
iret
pusha
stos
pop
sbb
jns
flds
mov
idiv
jnp
add
nop
mov
clc
xchg
nopl
sarb
sbb
jo
mov
add
loope
adc
outsl
xor
neg
mov
add
mov
mov
rcl
clc
sahf
idivb
icebp
cmp
js
aaa
jnp
std
aaa
dec
sahf
jp
scas
movsl
dec
mov
in
loope
cmp
mov
inc
sub
cmp
sbb
in
adc
push
dec
or
sbb
cmc
jnp
jae
mov
pop
inc
push
sti
sub
jmp
in
cmpsl
adc
pop
add
sbb
inc
and
mov
aaa
pop
loope
mov
mov
imul
sarb
cmpsl
cmp
stos
sahf
insb
and
mov
push
scas
xchg
scas
rol
adc
jne
fisubrl
dec
mov
mov
pop
jb
xchg
ficompl
mov
nopl
popa
pushf
xchg
les
mov
push
push
shll
mov
cmp
mov
fnstenv
es
mov
add
stos
push
daa
adc
in
dec
inc
subb
fisttpl
jns
fnstcw
push
icebp
adc
loop
inc
xor
cmpsl
leave
xor
daa
mov
jmp
jge
loop
mulb
mull
hlt
outsb
inc
jp
xor
sub
fmulp
mov
xchg
out
and
xchg
andl
loope
loopne
sahf
fidivrl
pop
mov
sbb
or
inc
push
outsb
jno
pushf
push
xor
das
or
fdivrl
in
imulb
cltd
add
push
ret
push
inc
cmp
mov
out
cmp
sub
in
int3
mov
imul
cmpsb
push
add
push
push
sti
ret
loope
addr16
aad
push
lock
jle
daa
xor
imul
xchg
cmp
aad
ret
dec
bound
shrl
and
xchg
imul
lret
jo
push
aam
dec
hlt
sbb
xor
in
rorb
bound
ret
adc
sub
xchg
fdivl
clc
inc
mov
dec
int
push
jecxz
xchg
mov
js
xchg
in
xchg
push
mov
out
add
int3
and
mov
pop
ret
dec
jp
cmp
jne,pt
dec
xchg
dec
push
sbb
pop
rcll
cs
push
idiv
in
out
iret
inc
leave
test
mov
xlat
jg
je
mov
cltd
in
mov
inc
xchg
int3
jecxz
sub
sbb
test
mov
fs
in
add
cmpxchg
cmp
aad
call
cli
inc
jecxz
add
cli
jp
lahf
popa
jp
out
or
repz
scas
nopl
js
jl
inc
in
and
enter
add
pop
jecxz
out
aas
pop
jmp
clc
mov
mov
dec
mov
xor
jmp
xchg
jmp
int
push
outsb
cmp
jge
ss
popa
fcmove
cmp
cmpsl
adc
xor
inc
mov
das
outsl
aad
test
mov
fdivp
xor
popf
ret
add
les
push
int3
jo
jmp
mov
mov
mov
dec
fs
xchg
or
ret
repz
push
push
hlt
popa
in
ret
addr16
addl
test
adcl
add
sub
jg
push
add
je
mov
sub
testb
cmp
arpl
aaa
leave
or
push
push
mov
shlb
scas
call
mov
loop
jo
stos
lods
jmp
jns
cmp
dec
pushf
inc
push
mov
add
push
fldt
aaa
rorl
push
test
pop
pop
inc
imul
adc
xchg
xlat
ret
inc
ds
jae
mov
aad
inc
pusha
jecxz
mov
je
testb
gs
mov
mov
mov
mov
push
push
loop
add
stos
mov
jle
mov
add
pop
push
lahf
push
aad
outsb
insl
cld
ret
movsb
ret
clc
popf
cmp
in
mov
mov
in
pop
lcall
push
pop
add
dec
pop
jmp
sub
xor
in
or
not
mov
pop
sbb
mov
arpl
sub
fistps
inc
mov
inc
xchg
ret
in
mov
dec
xlat
jmp
inc
xor
repnz
xor
repnz
push
cmc
pushf
faddl
push
hlt
scas
add
mov
mov
dec
lock
lret
pop
int
xor
jb
jne
adc
ljmp
test
inc
push
rorb
test
nop
inc
out
lea
divb
xchg
mov
imul
add
cmc
aam
add
push
loop
xor
lret
xchg
push
add
dec
xchg
shr
into
outsb
repz
scas
push
jl
cmc
jne
cmp
ljmp
mov
sub
ffree
movsb
push
inc
sub
test
daa
lock
repnz
rclb
dec
test
jns
add
dec
lds
adc
adc
xchg
add
lret
int3
mov
leave
pop
gs
pop
adc
mov
cmp
mov
inc
cli
lret
test
in
dec
mov
rolb
mov
pop
adc
in
mov
inc
jbe
mov
mov
mov
es
and
or
adc
aas
fwait
test
pop
jae
cmp
xchg
push
ja
movsl
loop
add
cmovs
fsubrl
mov
xlat
addr16
cld
xor
lods
aam
jb
cmp
cltd
mov
add
negl
sti
pop
mov
outsb
jcxz
xor
nop
insb
jnp
add
inc
ja
imul
rorl
mov
stos
cwtl
mov
dec
mov
push
push
jne
das
lods
insb
cmp
mov
push
rcl
adcl
pusha
mov
or
xchg
inc
cmpsl
pop
push
adc
adc
mov
pusha
orb
mov
add
jge
xchg
sarb
push
sub
push
out
mov
sub
stc
fdivrl
pop
scas
adcl
in
sahf
jmp
into
cli
lea
outsl
loop
mov
adc
jno
xchg
mov
jbe
mov
test
aad
aad
les
ffree
jg
mov
out
jns
xlat
loop
sub
pop
push
mov
and
dec
addr16
cmpb
jae
push
inc
pop
push
xchg
adc
cli
mov
aad
std
pushf
cmpsl
sub
call
jge
dec
iret
pop
fldl
adc
in
inc
call
pop
adc
cmpsb
rorb
nop
mov
and
xlat
push
mov
push
lds
repz
subb
test
das
pop
lcall
gs
pop
mov
xchg
sbb
and
mov
and
dec
icebp
roll
push
mov
and
in
repz
push
cmp
jbe
and
add
mov
sub
push
mov
ror
dec
outsb
xchg
jmp
or
enter
xlat
mov
mov
sti
movsb
in
xor
lret
test
sub
scas
es
das
jb
add
cld
outsl
loopne
mov
clc
lods
inc
sbb
mov
hlt
or
xor
fcmovne
out
sbb
xchg
adc
mov
xor
inc
scas
sub
ja
inc
jne
pop
test
cmp
jge
cmc
loopne
add
mov
int3
push
xchg
repnz
lods
cld
sbb
fcmovne
aaa
nop
fwait
inc
std
mov
icebp
lock
pop
into
mov
mov
sub
shr
xorb
insb
dec
int
movsb
and
xor
movsb
dec
lret
daa
sti
insb
mov
outsl
jl
lods
or
mov
movb
movsb
lds
movsl
lret
lret
lea
sbb
mov
pop
sub
nop
ret
insl
jne
pop
rolb
jno
and
loop
nop
fimuls
xor
push
ss
btc
out
incl
test
xor
cmp
pop
test
outsb
movsb
mov
dec
in
shl
dec
push
cmp
aas
pop
and
sti
fimuls
in
mov
out
in
in
adc
push
sarl
shll
test
outsl
stos
in
bnd
add
mov
lods
push
xchg
cmp
xorl
test
mov
inc
xor
aad
lcall
jecxz
and
cli
rorb
sahf
test
xor
clc
xor
inc
loopne
mov
mov
inc
fwait
cld
negl
test
gs
stos
xor
imul
jecxz
mov
inc
mov
pop
pop
xor
push
mov
dec
mov
add
mov
push
xchg
mov
mov
dec
int3
pop
addr16
mov
cld
adc
cmc
pop
sarb
add
sbb
aad
es
sarl
mov
cmp
leave
pop
pop
lahf
xor
pop
arpl
xchg
xchg
lods
arpl
pop
add
out
bound
enter
loopne
adc
push
iret
cmp
test
je
jp
out
ret
mov
imul
mov
out
lods
push
aam
sub
adc
jne
call
or
insl
aad
cmp
xchg
clc
push
imul
push
testb
sub
cmpsb
jbe
dec
mov
fiaddl
mov
in
xor
movsl
test
push
cmc
rclb
adc
mov
fildl
fsubs
testb
popa
inc
mov
mov
jge
sarb
aaa
aam
mov
lcall
cwtl
mov
xchg
jbe
fistpll
inc
sub
mov
movsb
jp
repnz
xor
lea
bound
inc
popa
cli
out
int3
cmpsl
rclb
lahf
mov
nop
mov
int3
hlt
outsl
push
int3
and
or
fdivs
imul
cmpsb
imul
mov
dec
xchg
outsl
xor
addb
or
jecxz
test
outsb
mov
lods
xchg
push
pop
pushf
push
sub
cmp
jbe
lahf
outsl
mov
rorl
dec
aad
push
cmp
jg
mov
inc
fwait
add
in
notb
lret
lds
xor
je
mov
jae
daa
and
cmp
adc
bound
cmc
addr16
fdivs
or
cltd
mov
test
popf
cmp
mov
xchg
es
in
pop
push
dec
jnp
mov
test
test
enter
xor
pop
cmpsb
repnz
addr16
mov
mov
jns
fistl
mov
inc
lds
xor
xchg
xchg
orb
cmp
add
dec
fs
nop
adcl
mov
cli
push
fiadds
and
or
or
xchg
int
sbb
mov
cltd
jecxz
imul
add
adc
es
frstor
fstpt
mov
loop
aas
mov
arpl
push
repnz
cltd
dec
jbe
and
lcall
push
push
push
mov
int
push
push
jno
push
lret
lcall
imul
cmp
loope
ror
pop
lods
stos
loope
inc
lret
rcll
lods
ja
das
sahf
pusha
clc
call
dec
add
jecxz
rorl
imul
mov
and
xchg
popf
inc
inc
and
leave
sub
lock
out
mov
pusha
inc
test
mov
test
xchg
push
aam
lahf
cld
mov
repnz
mov
out
xchg
enter
sub
jne
pop
and
xchg
rol
push
ss
fisubrl
mov
sti
add
push
fnsave
test
cmpl
popa
add
or
dec
dec
lahf
mov
xchg
aad
xchg
outsl
sub
xor
push
add
mov
inc
cmp
push
cmp
lahf
pop
pusha
mov
test
pop
push
jo
in
stos
insl
nop
pop
mov
inc
in
rcrl
movsb
add
daa
lods
push
sub
icebp
lea
jecxz
inc
movsb
out
lret
cltd
hlt
xchg
or
sbb
xor
mov
or
scas
mov
mov
pusha
pop
inc
fwait
movsb
mov
jno
ret
xchg
pop
aaa
mov
pushf
fldl
inc
xor
inc
cwtl
dec
xchg
mov
cld
das
les
cmp
icebp
fisttpll
xor
lcall
push
je
sub
mov
sti
or
jmp
lret
jmp
pop
sub
cld
int3
mov
or
or
mov
inc
dec
mov
fnstenv
mov
add
das
pop
fs
notl
stc
jmp
sbb
fwait
ret
sahf
push
bound
sub
jmp
popa
cs
in
lds
sahf
mov
pinsrw
sti
fsubp
sub
ljmp
ret
sbb
inc
cld
sub
imul
movsb
adc
mov
xchg
fstps
pop
cmp
mov
add
insb
push
pop
js
jmp
test
jnp
movsl
pop
pop
fisttpll
sbb
jae
jno
les
sbb
push
fsts
negb
lods
outsl
xchg
jge
insb
dec
cmc
pop
cli
inc
push
mov
xor
fcmovb
mov
inc
pop
and
cwtl
fs
std
jge
in
cmp
push
sbb
push
das
adcb
inc
mov
or
mov
ja
jg
add
repnz
sub
jb
aas
pop
fdivrp
inc
rorb
xlat
and
xchg
jo
int
adc
mov
adc
inc
lret
sub
jne
mov
js
scas
mov
dec
cli
cs
sub
cmp
rolb
aaa
das
mov
addr16
mov
push
jne
xor
mov
mov
mov
xchg
stos
sub
dec
adc
or
pop
aam
aam
push
sahf
sub
and
addr16
rcll
mov
popa
sbb
insb
pop
xor
dec
sbb
ficompl
mov
dec
sub
clc
movsb
mov
test
mov
into
loope
cmpsb
out
imul
lock
jmp
imull
loop
out
test
rol
bound
xor
es
inc
idivl
clc
aas
in
scas
loope
jle
cmc
fimuls
mov
push
lahf
cmp
ror
push
mov
fidivs
inc
insl
mov
lcall
lcall
cmp
push
inc
rsm
inc
mov
push
nop
clc
jo
idiv
popa
jmp
lahf
lds
fstps
push
pushf
fisubrl
pop
mov
roll
movsb
pushf
ljmp
jle
lret
mov
adc
or
daa
inc
orl
loop
cltd
fwait
std
fisttpll
les
mov
in
adcb
xchg
jl
outsl
adc
cmpb
or
xchg
dec
mov
and
or
push
adc
adc
sbb
xor
adc
push
mov
sub
int3
lret
xor
xchg
push
test
insb
jge
mov
int
sub
scas
or
adc
mov
daa
adc
cli
dec
jecxz
pop
cmp
dec
cmp
xor
mov
clc
adc
mov
hlt
ret
add
mov
push
push
adc
cmp
in
cmp
xchg
and
dec
inc
lcall
scas
jmp
jge
push
pop
xchg
test
jb
mov
and
cmp
inc
pushf
dec
lods
push
enter
je
aam
mov
push
js
push
fmul
imul
sbb
fs
cmp
out
mov
ds
mov
ljmp
sub
jp
scas
popf
sub
sarl
pop
mov
pop
addl
add
cmp
fistpll
adc
loope
repz
jecxz
jmp
push
mov
test
cld
dec
insb
lock
xchg
aad
das
mov
push
cltd
pop
add
imul
imul
and
add
stos
aaa
mov
lahf
mov
ljmp
xchg
rcrl
push
mov
test
daa
xor
push
mov
push
aas
popl
push
jge
in
cmovle
lock
jo
cmpsl
jmp
outsb
imul
fstl
mov
fnstsw
jmp
cld
aaa
pop
stos
xchg
adc
add
dec
xchg
add
out
add
pushf
test
xlat
mov
or
andb
cltd
rcr
jge
popw
out
jo
int3
stc
cmpsb
push
jg
call
out
sub
sub
jmp
js
add
repnz
test
dec
lret
outsb
adc
xor
ljmp
loope
push
dec
and
faddl
loopne
xchg
add
jo
mov
js
out
push
stc
pop
mov
jge
cmp
test
jnp
jo
jecxz
adc
push
sarl
sti
imul
cwtl
inc
in
xor
pop
jp
aad
outsb
jb
in
fdiv
xchg
sarl
cmp
stc
mov
in
mov
mov
mov
into
call
ret
inc
and
xchg
jnp
aad
repz
mov
xchg
cmp
cmpsb
outsb
test
das
inc
pop
cltd
aas
dec
jb
inc
ljmp
and
jb
insl
testb
or
jg
xor
enter
xchg
jmp
std
add
or
and
out
mov
ret
jb
mov
sbb
sub
fsubrl
lods
inc
test
popa
mov
loopne
mov
ljmp
subb
mov
inc
jl
fbstp
cwtl
subb
add
lret
push
sbb
lahf
cld
pusha
aaa
cmpsl
loopne
inc
sub
iret
ljmp
pop
movsl
cmp
jg
inc
mov
mov
lcall
mov
xchg
stos
inc
push
pop
inc
pushf
cld
xchg
inc
mov
xchg
jmp
dec
cli
ret
das
mov
fwait
cmp
jnp
fadds
loop
sub
sbb
add
int3
movsl
lea
push
out
xchg
cwtl
cmc
jns
or
arpl
iret
mov
int3
mov
mov
pop
movsb
inc
out
clc
rorl
in
shll
and
rcrl
test
push
sub
add
vpcomud
xchg
outsl
loop
and
push
iret
repnz
imul
lods
sti
fisubs
xchg
mov
imul
mov
pushf
and
popf
xchg
cmp
push
arpl
add
pop
and
adc
imul
lahf
stos
cmc
stos
pop
sub
xchg
sbb
dec
jl
adc
adc
popf
mov
lods
mov
das
mov
jl
push
clc
mov
mov
adc
shll
jo
mov
adc
popf
nop
mov
insb
out
rcrb
popa
jle
mov
lcall
mov
dec
lahf
pop
jle
cmpsb
test
scas
push
shlb
xchg
sarl
fidivl
les
pushf
cmpsl
cmp
xor
loope
sarb
mov
mov
push
push
push
push
cmp
xchg
pop
fldt
sbb
and
jno
xor
cmc
push
js
cmp
mov
pop
pop
lods
aaa
stos
adc
mov
fdivrs
adc
pop
outsl
jl
imul
insl
rolb
pop
xor
fisubrl
cmpsl
repz
mov
int3
loopne
cwtl
fimull
fidivl
cld
in
inc
adcb
dec
cltd
je
push
loop
in
xlat
fsts
add
repz
idivb
and
test
mov
mov
cmp
jg
mov
adc
je
jns
ss
iret
fs
mov
push
adc
cs
and
iret
jmp
mov
mov
mov
inc
in
cmp
rcll
out
ret
icebp
shll
lock
cltd
mov
jae
adcl
jge
sti
pushf
jp
add
fwait
or
repnz
in
pop
pop
sub
mov
sbb
jp
sahf
and
mov
mov
rol
mov
cmp
and
popa
jg
repnz
jae
movsb
ret
push
mov
lret
mov
mov
sub
jle
aad
orb
mov
add
mov
add
jecxz
add
jae
bound
or
sbb
icebp
lcall
repz
out
push
mov
push
jle
psubsb
cwtl
dec
rcrb
sbb
mov
fucomi
repnz
inc
leave
pop
dec
call
mov
jns
sub
int
push
or
pop
jne
daa
outsb
jne
mov
mov
push
xchg
les
repz
popa
pop
inc
xor
push
cli
pop
loope
daa
cmp
or
sti
mov
xchg
mov
pop
pusha
jne,pn
out
cmp
cltd
mov
ljmp
xchg
fnstcw
inc
cld
enter
xchg
xor
adc
mov
nop
add
or
dec
cmpl
lock
ret
adc
fwait
in
jno
rol
js
iret
mov
cltd
mov
pop
add
mov
mov
cmp
push
faddl
pop
pop
jmp
sahf
cmpsl
in
sub
inc
jge
arpl
sub
or
call
clc
push
push
pop
sbb
mov
into
xchg
addr16
int
aaa
in
sar
dec
fcmovbe
rclb
aam
ds
dec
jge
insb
movsl
cmp
cmp
push
jmp
mov
hlt
jns
addr16
cmp
in
rcl
dec
jns
addb
test
and
je
fdiv
aad
lock
mov
cli
mov
insl
mov
sahf
aas
jge
cmp
sar
mov
adc
sub
jb
leave
or
lds
or
sbb
je
movsb
lds
popf
push
xor
and
int3
loopne
jne
xor
inc
xor
lock
stc
jecxz
nop
into
pop
hlt
stc
mov
xor
mov
sub
in
push
dec
or
jnp
iret
and
cmp
mov
jg
dec
mov
ljmp
pop
jecxz
lods
ja
pop
cs
cmp
hlt
in
xchg
add
cmp
pop
sahf
add
fcmovnbe
mov
sahf
jge
pop
add
or
pop
popl
test
inc
rcll
jmp
pushf
in
jle
popf
and
jle
aaa
pop
cld
mov
iret
rol
push
in
rolb
mov
inc
popf
xor
fdivl
xchg
shll
jb
fwait
arpl
cmp
sub
fucom
jne
outsl
pop
into
insl
add
pop
jo
pushf
jne
repz
xchg
adc
mov
mov
aaa
sbb
pop
mov
cli
faddl
fcompl
fldcw
or
cmc
int
dec
stc
xchg
nop
push
push
imul
cmp
sbb
sbb
test
mov
popa
fs
lret
sub
cmpsb
in
add
inc
lock
jo
push
adc
mov
outsl
sarb
and
ds
jmp
insl
adc
dec
inc
shl
cld
or
roll
xchg
pop
dec
or
out
push
stos
mov
mov
into
test
jbe
icebp
dec
in
fdivrs
daa
push
stc
mov
pop
push
cmpsl
push
lret
fisubs
push
int3
insl
andl
fdivl
out
and
bound
hlt
jae
mov
ret
cmpsb
push
xor
pop
bswap
xchg
ret
loop
leave
outsb
cmc
push
inc
fwait
adc
xchg
cmp
dec
jbe
scas
faddp
aas
jno,pt
mov
mov
mov
xchg
repz
inc
repz
jl
jle
add
faddl
sbb
cmc
jl
mov
mov
loopne
mov
les
jns
and
pop
or
je
pop
add
xor
hlt
data16
loopne
adc
test
jge
shll
dec
mov
inc
and
mov
push
hlt
push
mov
pushf
xchg
dec
sbbl
inc
pop
push
sbbb
lahf
xchg
test
pop
sub
lret
push
mov
fidivs
rclb
sti
inc
dec
or
cmp
pop
dec
movsl
jbe
lret
into
sbb
adc
dec
fidivrl
adc
pop
jb
cmpsl
repz
pusha
xor
mov
inc
or
repnz
jmp
stos
lret
add
stos
rcrb
and
or
add
push
and
xchg
mov
xor
or
mov
shrw
movsl
mov
in
sahf
fidivl
leave
out
adcb
lret
imul
sbb
mov
lahf
pop
mov
dec
fdivl
add
iret
sub
jge
mov
adc
ficoms
cld
popf
and
push
push
push
xchg
jmp
adc
jb
pop
pop
sbb
loope
das
repz
mov
cmp
imulb
lcall
ljmp
push
adc
dec
lcall
and
cmpsl
je
inc
jbe
xchg
jge
rcrb
cmpl
lea
cltd
jg
jmp
inc
and
popf
and
xor
push
jno
inc
clc
jb
push
js
mov
and
fimull
pop
jmp
call
xchg
loope
aas
mov
fs
stos
or
dec
sub
stos
inc
pop
cmp
in
sbb
xchg
xchg
mov
fsub
adc
out
lret
out
into
test
popa
jne
fisubs
sbb
mov
xchg
std
and
and
mov
dec
sub
popf
push
push
xchg
pusha
cli
stos
je
shll
mov
sub
das
sbb
ficoms
xor
or
or
pusha
dec
dec
in
cmc
pop
mov
cli
push
int3
ret
ror
out
jo
add
jae
into
inc
dec
imul
scas
into
ja
mov
and
daa
push
push
sbb
sbb
outsl
inc
int3
inc
or
popa
xchg
xchg
xchg
jo
push
ss
xchg
pop
inc
xchg
ljmp
pop
cmp
push
pop
into
out
rcl
and
push
xchg
rol
btr
in
xchg
xor
mov
jae
rcl
mov
sbb
pop
add
pop
cmp
and
mov
out
or
ret
sahf
mov
rcr
aam
mov
test
shll
jp
out
je
ret
cld
xchg
and
repnz
and
push
jbe
pop
int3
dec
aad
and
xchg
pop
scas
pop
add
cmp
xchg
inc
je
xchg
push
cltd
es
in
inc
push
ret
push
and
xor
jb
pop
sbb
jge
jnp
adc
sub
mov
pop
inc
pop
and
jl
xor
cmp
mov
mov
pop
leave
xchg
leave
jne
ss
cwtl
push
sbb
inc
jae
xchg
ds
cmp
pop
ljmp
mov
incb
cmp
and
cmp
ja
jno
xrelease
lahf
arpl
adc
xchg
fs
jbe
mov
mov
push
mov
icebp
test
loop
mov
mov
loopne
jno
mov
aaa
je
lea
inc
cmp
jmp
inc
cmpsl
jmpw
cld
int3
out
and
xchg
mov
or
dec
aam
xchg
test
divl
dec
shll
lahf
repz
or
mov
sub
add
out
add
repz
mov
std
jno
scas
aas
mulb
lahf
lock
or
pop
popf
adc
jle
insl
jae
sub
insb
movsl
cmpsl
std
push
mov
inc
jecxz
inc
iret
inc
inc
jno
je
jg
outsb
add
fcmovnu
jle
xor
mov
pop
sahf
mov
fmuls
fnstsw
test
adc
cmpsl
pop
inc
pop
loopne
hlt
into
repnz
mov
dec
jmp
lock
lods
jne
out
in
repz
aas
outsl
push
xorb
inc
xlat
lods
or
lock
mov
movsb
dec
jns
popa
xchg
jp
mov
dec
and
test
jp
inc
cltd
cmp
xor
mov
idiv
jns
movsl
dec
and
popf
or
xor
shrl
mov
dec
lcall
lret
or
push
xor
fs
cltd
imul
lahf
mov
cmpl
inc
addr16
loop
inc
or
imul
scas
js
stc
movsl
in
lods
adc
or
and
inc
std
xlat
and
cmpsb
int3
and
pop
dec
dec
iret
pop
jl
mov
mov
push
jmp
in
pop
pop
xchg
or
add
pop
mov
xchg
mov
mov
inc
adc
cs
enter
dec
cmp
ret
int3
jns
push
xchg
pushf
xchg
or
test
mov
cmp
repz
out
sarl
xlat
fcomps
js
out
aam
pusha
stos
imul
bound
push
sub
xchg
mov
add
jmp
aam
clc
hlt
jnp
xchg
fisubs
dec
dec
stos
inc
rcrl
aaa
sbb
es
push
leave
inc
popl
das
bound
or
or
imul
daa
inc
mov
test
add
pop
mov
push
movsb
cmp
push
lods
push
pop
sub
stc
addr16
outsb
ljmp
mov
jmp
sbb
aaa
mov
out
jge
add
les
pop
icebp
push
push
dec
xorl
xchg
daa
and
outsb
dec
lahf
mov
in
lods
sub
arpl
loop
call
pop
in
fsubrs
xor
lcall
repz
push
mov
cmp
dec
aad
jl
xchg
dec
push
adcb
cmp
insl
jecxz
push
loop
repnz
cltd
jo
rcll
xlat
add
pop
addr16
pop
std
sbb
adc
das
mov
push
sti
cmpl
sub
push
or
lock
movsb
xor
sub
icebp
mov
subl
movsb
adc
in
stc
add
fcoml
sbb
adc
daa
mov
fnstcw
fs
nop
aas
mov
mov
jno
jne
mov
dec
xor
xchg
dec
xor
and
pop
ficoms
aas
rolb
enter
popa
xchg
test
ljmp
xchg
jns
adc
adc
pop
and
fmul
lret
insb
inc
cmpsl
jge
lahf
sub
mov
inc
jbe
adc
inc
fsub
dec
mov
test
hlt
adc
jns
sub
inc
mov
mov
loop
dec
into
jno
sbb
and
imul
sbb
fs
mov
inc
add
popf
sbb
push
lods
std
push
sbb
jns
jp
pop
jbe
mov
adc
and
sub
cmpsl
fbstp
gs
mov
xlat
fidivrs
cwtl
sub
mov
fistpl
in
and
adc
add
xchg
adc
fisttpll
pushl
pop
xchg
xchg
add
sub
cmpsl
rorb
rcll
test
ret
and
jb
sub
stos
push
push
cmpsl
iret
xor
je
int
cwtl
mov
scas
inc
cmpsb
in
movsl
sub
sub
cmp
mov
leave
stos
test
lods
jecxz
test
adc
dec
stc
les
fidivl
or
add
imul
into
pop
jnp
sbb
cmp
and
cmp
test
movsb
loopne
leave
jl
mov
sbb
sub
mov
jecxz
jns
lock
dec
dec
fistpl
mov
fiadds
movsb
rol
mov
and
jnp
sub
cli
iret
movsl
out
inc
outsl
inc
stos
ret
mov
jge
dec
push
ss
push
inc
mov
out
dec
jae
add
add
loope
sti
fidivrl
mov
cmpl
nop
adc
stc
add
aam
pop
dec
mov
mulb
mov
jnp
es
in
inc
xor
xchg
lods
popa
insb
sbb
bnd
in
add
testl
int
dec
arpl
push
test
outsl
push
jg
jbe
test
inc
jb
jmp
loopne
and
outsb
mov
xlat
jo
clc
xchg
pop
xchg
xchg
rcr
xchg
mov
aas
sbb
in
mov
clc
sbb
push
sbb
aaa
outsb
test
xlat
add
mov
andb
xor
xor
or
push
out
xchg
xchg
cwtl
cwtl
jecxz
in
or
fnstsw
in
movsl
cmp
inc
cmp
dec
and
pop
xlat
pop
scas
enter
and
add
stos
cmpsb
clc
scas
rolb
push
push
fdivl
adc
mov
lods
xchg
pop
lock
into
in
mov
shr
out
jle
leave
add
jne
adc
add
loope
imul
adc
and
shlb
incb
mov
sarl
cld
cmp
jl
pop
or
cmp
push
mov
hlt
cmpsl
arpl
lods
cmpl
ret
call
js
push
and
push
mov
into
xchg
movsl
push
push
push
inc
bound
pop
iret
dec
out
jbe
test
push
add
push
push
lea
repz
push
inc
pop
in
add
ljmp
hlt
sarb
xchg
xchg
in
icebp
cmp
in
inc
fs
add
and
pusha
pushf
insb
sub
sbb
push
mov
pop
insl
test
adc
pop
aaa
pop
xlat
and
adc
test
fisubrs
test
inc
inc
add
add
xor
push
add
lret
sti
fbld
stos
scas
mov
pop
jae
in
mov
mov
gs
data16
sarb
and
fs
pop
mov
stos
mov
dec
cmpl
inc
mov
push
push
insl
jo
scas
or
jmp
xchg
xor
jne
push
scas
inc
mov
pop
dec
es
orl
insl
lea
mov
pop
mov
mov
jmp
cwtl
movsl
fsubr
pop
out
push
pushf
sarl
jo
pop
inc
jne
mov
mov
das
adcl
sub
enter
cmp
sub
adc
mov
add
jg
push
lahf
adc
cmp
xor
fistpl
fnstenv
fwait
cs
stos
mov
mov
mov
and
pop
icebp
fbstp
pop
dec
idivl
jb
mov
sub
push
dec
ret
movsb
sbb
pop
push
push
ret
adc
mov
loop
cmp
outsl
push
xor
es
push
or
mov
je
fsts
mov
mov
outsl
sarl
jge
std
jp
cmc
mov
add
ja
repz
pop
push
addb
outsl
or
sbb
outsl
cmpsb
or
iret
cwtl
or
popf
add
es
pusha
out
cmpsl
add
into
inc
loopne
rcrl
pop
scas
nop
andps
cli
jl
pop
loopne
xor
fs
repnz
aam
test
js
aam
dec
js,pn
sub
loop
mov
pop
scas
pop
sbbl
and
stos
and
push
ficompl
adc
cmp
push
testl
incb
ja
xchg
push
and
sbb
xchg
cmpsl
xor
pop
gs
and
push
lds
icebp
cli
mov
loope
mov
adc
sub
sbb
add
sub
push
adc
adc
dec
js
aas
mov
lock
jle
jbe
jge
insl
jae
pop
cmp
jecxz
dec
pop
or
or
mov
cmpsl
mov
test
rcl
stc
xor
xor
xchg
testl
mov
in
pop
sbb
mov
rcrl
in
outsl
movsl
xor
and
xor
mov
cmp
fwait
push
ret
insl
pop
jb
imul
xor
test
xchg
mov
outsl
sub
jmp
das
pusha
mov
push
popa
push
jmp
push
inc
std
bnd
inc
mov
sub
push
push
test
or
push
sub
push
loope
test
jae
adc
adc
cli
sbb
jb
hlt
fcoml
arpl
sbb
dec
pop
mov
mov
mov
push
notb
pop
push
sbb
icebp
mov
lea
mov
sbb
add
test
push
test
or
adc
inc
popf
popf
or
cld
outsb
mov
fldl
and
lock
xchg
cs
ficomps
fsts
shrb
in
das
push
push
xchg
jne
sarb
sbb
repz
inc
dec
inc
dec
push
jo
daa
inc
lcall
push
sub
jmp
push
mov
das
mov
in
out
sbb
shrl
xchg
dec
out
pop
xor
jb
and
add
mov
mov
mov
cmp
inc
sbb
test
bound
jne
jle
fistl
into
sahf
jne
pop
adc
ljmp
jns
and
in
out
dec
out
ds
fsubs
add
mov
inc
cs
sbb
ret
bound
scas
insl
xlat
inc
push
mov
or
inc
and
pop
jle
fcompl
pop
jl
inc
mov
sub
mov
lret
addb
sub
mul
stos
mov
aaa
adc
add
lds
enter
xlat
add
les
std
push
inc
lret
mov
add
ja
xchg
or
aaa
lock
clc
loopne
sbb
sti
orb
xor
lahf
aaa
in
add
nop
sbb
dec
or
xchg
in
mov
dec
dec
xor
clc
insb
xchg
fucom
jb
jmp
cli
and
in
mov
lahf
xchg
notl
jge
data16
sbb
add
push
xchg
adc
dec
jns
imul
sbb
lds
sub
outsl
adc
je
sti
xchg
shlb
mov
insl
adc
out
cmpsl
lret
xchg
mov
jmp
test
pop
pushf
jle
out
mov
and
scas
mov
inc
in
add
adc
iret
or
push
inc
or
mov
pop
fists
dec
or
shr
aas
fadd
mov
movsb
js
arpl
xor
push
rclb
sbb
fimull
fcmovnb
popa
negl
mov
sub
and
mov
xor
scas
and
call
outsl
shl
jnp
pusha
cwtl
xchg
loope
xor
pop
push
insl
add
sbb
jne
sbb
addb
mov
sub
cmp
sbb
loope
push
jo
rorl
in
popa
jge
pushf
mov
jnp
pop
sbbb
mov
mov
popa
test
push
push
dec
xor
pop
or
push
sbb
xchg
fwait
pop
test
mov
dec
rcll
ljmp
loopne
xchg
outsb
mov
sahf
mov
push
mov
sbb
and
pusha
jecxz
sub
xor
and
push
and
jne
xchg
jg
mov
jnp
lods
add
mov
stos
loop
popa
into
cmpl
jp
insb
cmp
cmpsb
in
loope
clc
js
add
adc
cmp
decl
fidivrl
dec
or
xor
std
sbb
pop
aam
dec
ficoms
cmp
subl
out
rorb
and
cmc
mov
add
xor
stos
or
icebp
mov
jne
adc
pop
les
mov
sti
add
jnp
aam
pop
int3
jmp
xchg
lahf
scas
or
int
ja,pn
pop
adc
mov
mov
in
outsb
dec
scas
lock
xor
js
cwtl
pop
cmp
cmp
mov
cmp
imul
adc
daa
mov
stos
fldl
in
mov
fisubrs
mov
fistpl
and
mov
das
cmp
push
out
cmp
cmp
pushf
xor
mov
lods
lock
xchg
and
mov
outsb
inc
mov
bnd
outsb
pop
test
lods
insb
hlt
mov
insb
mov
sub
cmp
in
pop
das
call
xchg
jecxz
fmulp
fs
mov
xorb
and
outsb
test
cmpsl
test
lods
mov
ljmp
les
sbb
sbb
inc
mov
popl
test
xchg
lret
sti
xchg
mov
jbe
fdivs
ja
adc
loope
into
lret
repnz
adc
xchg
inc
pusha
insl
repnz
test
or
xor
sub
test
cwtl
ljmp
mov
cmp
sub
push
add
fsubp
frstor
inc
lret
lcall
test
pop
insb
cmpsb
shrl
test
ljmp
lahf
nop
movsb
fstps
stc
mov
or
sub
mov
andl
bound
push
and
lcall
cmpsb
fists
pop
xabort
test
lods
ret
pop
test
clc
das
mov
fwait
shll
aas
mov
jns
mov
test
jle
in
mov
mov
adc
sti
xchg
int
xlat
inc
out
loope
in
cmp
fdivrl
push
roll
test
ja
aaa
xchg
xor
mov
das
push
ds
xor
stos
pop
mov
lods
ret
sbb
test
arpl
sub
stos
or
scas
fsubrs
shlb
xchg
jge
add
outsl
xorb
lods
mov
addb
or
mov
mov
push
orb
in
jmp
push
mov
or
icebp
push
pop
push
cmp
push
fwait
gs
hlt
jg
sbb
rcll
mov
stc
xchg
xchg
inc
jnp
jg
add
mov
gs
mov
out
cs
push
pop
pop
idivb
test
out
mov
xchg
push
cmp
mov
and
pop
fsubl
sub
mov
sysenter
daa
rorl
sbb
inc
fidivs
or
daa
bound
loope
aas
add
je
mov
mov
ss
xor
out
in
push
push
movnti
mov
lea
sahf
fwait
push
mov
adc
add
jnp
shll
mov
and
mov
xlat
popf
jmp
adc
clc
jle
mov
push
inc
sub
adc
jg
push
and
push
sub
mov
std
fstpl
mov
adc
stos
jge
lcall
pop
cmp
mov
rcll
jbe
mov
std
push
lahf
mov
mov
pop
mov
arpl
jae
cmpsl
mov
xor
adcb
test
cmpsb
mov
aaa
xor
test
enter
push
mov
cmpb
enter
or
cmc
test
jns
fcompl
dec
push
adc
xchg
add
mov
pushf
adc
mov
in
xlat
fstps
clc
jns
loope
sub
pop
lea
pusha
add
push
stos
jne
mov
sub
adc
sbb
mov
cmpsb
in
lea
or
xchg
adc
push
push
test
sbbl
dec
mov
mov
arpl
ss
aam
cmpl
push
scas
inc
jp
dec
js
push
call
dec
das
movsl
stos
lock
xor
cmp
incl
mov
mov
sti
lcall
inc
pop
inc
pop
sahf
into
lret
xor
scas
ja
out
mov
fadd
jge
filds
stc
lea
adc
adc
and
jnp
xchg
andl
jl
je
into
push
je
cs
push
xor
sbb
cmp
orb
shlb
pop
add
pop
mov
sbb
sti
mov
jbe
int3
or
cs
push
jp
dec
add
or
or
inc
nop
mov
out
js
or
or
mov
or
mov
add
lods
and
aas
aam
xor
mov
push
fstpt
shlb
sbb
adc
imulb
movsb
pop
fimull
hlt
push
adc
les
ret
outsb
ljmp
inc
out
bound
pusha
xchg
push
int3
shlb
cwtl
mov
mov
cmpsl
cld
leave
rcr
pop
std
subl
dec
add
sbb
popf
loopne
or
push
or
pinsrw
fdivrs
int
cld
mov
inc
mov
mov
pop
cmc
ret
jnp
lret
test
push
pop
out
sbb
sub
or
std
add
ljmp
add
xchg
mov
lock
cli
cmp
aas
clc
imull
add
sbb
push
dec
in
mov
lahf
cwtl
out
lcall
pop
stc
cwtl
bound
mov
test
stos
mov
dec
xchg
sbbb
mov
lcall
pop
in
xor
xor
test
push
cmpsl
lret
js
jg
cltd
aas
mov
cmp
fcoms
push
pop
jle
mov
lret
movsb
cmp
jg
mov
ror
daa
mov
ss
insb
add
ljmp
mov
cli
mov
push
les
sarl
gs
std
dec
insb
out
pushf
rorl
stc
pop
jbe
enter
sub
fwait
jo
adc
jmp
popf
ud2
aad
inc
sub
sbb
mov
rorl
and
push
mov
lret
leave
jo
push
testb
jbe
popa
iret
repz
sbb
orb
dec
ss
stc
xchg
out
adc
push
rcll
rcrl
loop
hlt
push
int3
pusha
inc
int
in
jo
std
mov
js
and
loop
mov
push
pop
add
push
dec
in
push
cmpsb
push
mov
xchg
movsl
loopne
jno
sub
sub
aaa
mov
add
repnz
add
cmpl
fimull
insb
cld
test
add
sub
mov
ret
sub
mov
fnstsw
or
movsl
pusha
dec
in
push
lds
xchg
or
push
stos
fwait
dec
cwtl
push
outsl
and
rcr
mov
ja
out
adc
fnsave
push
jp
jno
jno
mov
push
add
push
repz
mov
mov
outsl
cmp
jp
jno
or
sbb
mov
jns
adcl
or
sti
ficompl
cs
ds
mov
xchg
jg
jnp
jmp
out
and
pop
lods
enter
das
add
jle
jp
and
mov
nopl
cltd
loope
ret
inc
xor
mov
sti
pop
stc
adc
shrb
rcr
dec
arpl
lcall
pop
shlb
fsubrs
mov
popf
outsl
stos
fidivrs
push
add
aad
add
add
sub
movsb
push
mov
mov
les
cmp
in
fistpl
pop
ret
pop
cmp
mov
test
mov
dec
dec
in
test
leave
lcall
fmuls
push
xchg
int3
sbb
pop
pushf
cmp
mov
lds
hlt
fcom
sbb
cltd
cmp
mov
insb
adc
xor
dec
jp
cmpl
movsl
iret
mov
test
stos
cmp
pause
icebp
sbb
push
jo
mov
cld
mov
out
xchg
mov
lock
fisttps
push
pop
or
dec
loopne
push
xlat
mov
adc
das
les
loope
in
ds
out
icebp
mov
into
xor
lea
xchg
mov
mov
fbstp
arpl
inc
push
out
clc
jecxz
sbbl
mov
push
jge
jg
jle
push
or
mov
mov
mov
cmp
mov
jb
addr16
add
cmp
std
jmp
sahf
stos
mov
jmp
xor
cmp
push
push
pop
scas
inc
mov
xchg
rorl
pop
in
xchg
in
push
mov
aad
movsb
xchg
mov
sub
into
lods
xchg
idivb
adc
aam
movsb
insl
lret
mov
inc
je
dec
mov
ds
repnz
in
repz
mov
sbb
out
mov
out
in
cwtl
lret
pop
rolb
sub
ucomiss
cmc
xchg
fstp
fmuls
fbstp
pop
xor
cmp
cltd
cmp
and
inc
fists
jp
cli
rcl
pop
pop
fisttpl
ja
lcall
mov
sub
or
pop
repnz
adc
sub
pop
pop
pop
mov
dec
dec
in
lret
push
mov
mov
mov
pop
lret
idivl
idivl
test
xchg
xchg
stc
loop
leave
imul
or
outsl
hlt
repz
push
shr
loopne
prefetch
fdisi(8087
pusha
nop
push
or
push
mov
movsl
mov
xchg
lds
fwait
and
mov
out
xchg
inc
mov
shl
cmc
cmpsl
lock
pop
or
jl
outsb
in
xchg
or
sbb
push
and
fistpl
lock
push
divb
ret
pop
inc
pop
cmp
mov
cmp
mov
push
daa
imul
push
in
aas
pop
adc
cmp
pop
rorl
or
hlt
cmp
mov
dec
enter
mov
jg
lock
sbb
call
adc
and
pop
fwait
and
mov
xor
aam
nop
mov
sbb
dec
sti
inc
cld
sbb
inc
outsb
enter
pusha
test
nop
cmc
push
gs
mov
stc
aam
mov
leave
push
test
mov
push
inc
rol
dec
movsb
sub
scas
loopne
outsl
jno
dec
mov
xor
data16
or
add
cltd
inc
push
jbe
lret
sbb
add
in
mov
sub
imul
sbb
dec
pop
daa
add
aaa
into
lcall
mov
add
mov
mov
in
movsl
mov
adc
lret
dec
inc
cmc
fucomp
add
pop
sub
sti
mov
and
orl
imul
arpl
xchg
xchg
xchg
sub
push
sub
sub
adc
sti
dec
and
inc
push
xchg
lods
hlt
add
enter
push
ficomps
adc
xchg
or
out
pop
cmp
jne
imul
xchg
testb
xor
pop
repz
dec
xchg
cmp
aaa
aad
push
stos
inc
xchg
sub
notl
push
scas
push
cmp
cli
cmpsb
xor
mov
das
fldt
mov
adc
cs
enter
sbb
mov
xchg
movsl
cmp
sub
add
push
in
test
mov
ds
add
pushf
mov
sub
sub
sub
mov
sub
pop
insl
jne
in
or
test
mov
daa
call
pop
push
pop
shl
imul
adc
fistpll
imul
or
sbb
cmpsl
pusha
outsl
push
or
in
push
xchg
jo
mov
sahf
dec
in
and
push
sub
jl
inc
mov
xchg
push
inc
dec
cmp
and
int
xor
mov
addr16
adc
imul
into
sub
inc
enter
sub
decb
popf
push
jns
scas
test
and
out
adc
stc
ds
mov
inc
pop
mov
sbb
fwait
and
sarb
dec
xlat
data16
mov
dec
and
inc
mov
std
dec
scas
iret
popf
aam
push
xor
pop
sub
cmpsl
bound
lret
jge
dec
sub
rorb
sub
call
add
xchg
xchg
xchg
fstp
inc
mulb
dec
pop
xchg
mov
ret
cmp
inc
lcall
cmp
or
out
inc
iret
cmp
sti
mov
mov
lret
out
fistl
shll
jmp
jmp
jo
aas
in
addl
mov
add
and
testl
mov
hlt
popf
test
imul
push
xchg
and
cmp
into
ljmp
das
inc
addr16
and
daa
inc
ds
mov
ret
aas
stos
cmp
bound
decb
fwait
mov
dec
rolb
xchg
jns
mov
dec
cmp
xor
xchg
movsb
inc
fstpt
jp
test
mov
jge
outsl
dec
lea
jo
mov
pop
pop
fs
sub
mov
loope
pushf
stos
xchg
push
fildll
adc
loop
jecxz
stos
fdivrs
xor
mov
enter
or
add
mov
je
int3
xchg
popf
mov
pop
mov
sbb
jbe
mov
sti
ljmp
jge
out
sub
dec
add
lea
lcall
add
mov
mov
fsubrs
repnz
adc
ja
cmc
int3
mov
jg
mov
push
inc
daa
xor
pop
jno
arpl
push
lods
rol
add
jg
inc
cmpsb
lret
lret
daa
jne
roll
sub
sub
jmp
sbb
mov
mov
and
xor
mov
iret
add
fmuls
ljmp
mov
sbbb
je
adc
sahf
jl
xlat
ret
sbbb
lahf
pusha
clc
dec
aam
xor
mov
adc
mov
std
pop
jmp
pop
pop
inc
adc
sub
mov
push
std
push
push
xchg
pop
xchg
mov
outsl
lret
add
sub
loop
imul
cltd
sahf
jne
mov
insl
xor
insb
sub
loop
cmpsl
js
xchg
addr16
jae
mov
hlt
mov
lock
mov
xor
jbe
in
ret
push
mov
inc
outsb
out
pop
jno
or
movb
inc
daa
adc
pop
mov
sub
push
inc
shlb
mov
std
push
jns
popa
xlat
xchg
mov
frstor
adc
mov
shll
adc
pop
cmp
imul
popa
daa
push
xchg
push
jnp
or
push
bound
pop
leave
cmp
push
add
adc
xor
dec
dec
addb
insl
lret
mov
mov
int3
repnz
cmp
sahf
mov
xchg
stos
hlt
loop
fcomip
lods
cmp
test
sbb
pop
dec
inc
sbb
xchg
mov
pop
movlps
lods
stos
mov
adc
inc
ja
fisubs
mov
inc
pop
pushw
les
iret
test
inc
xchg
inc
jo
xchg
orl
inc
push
jae
dec
sbb
stos
jge
movl
add
jb
pslld
sahf
mov
loop
xchg
in
dec
push
jle
jb
movaps
test
arpl
add
test
sbb
loopne
add
aam
cmc
loop
jae
cmp
jns
mov
js
rorb
pushl
dec
out
jae
movsb
mov
adc
mov
adc
and
cmpsl
in
sub
stos
adc
fs
pusha
push
inc
shll
jne
cmp
test
aad
mov
jo
fmull
or
fnstenv
adc
in
cmpsb
addr16
sbb
mov
mov
lret
out
mov
jp
and
sub
jmp
and
and
or
and
lret
jae
jecxz
ret
mov
pop
mov
sbb
sahf
jp
xchg
mov
inc
bound
stc
cli
add
fcoms
add
push
stos
mov
sahf
mov
pop
push
ret
aas
xor
dec
xchg
xlat
cmp
add
rolb
jb
adc
push
mov
jge
imul
mov
jbe
cld
and
scas
inc
pop
mov
or
faddl
xchg
jl
dec
insl
add
pop
cmp
aas
cmp
dec
leave
loopne
adc
xorl
int
lcall
mov
jp
mov
aas
push
enter
push
aas
sahf
data16
sub
mov
add
pop
mov
mov
out
lods
lea
test
inc
lcall
jmp
aas
clc
testb
adc
daa
lds
mov
cmc
cmpsl
xchg
cmpsb
adc
xlat
call
pushf
insl
in
lahf
mov
stc
add
in
mov
in
outsb
xacquire
cli
push
jbe
es
and
pop
lcall
insl
das
jae
lret
mov
dec
enter
scas
pop
mov
sbb
mov
pop
out
es
ficoml
xchg
mov
mov
xor
adc
adc
jno
jg
in
rolb
mov
cwtl
sbb
push
jecxz
out
dec
pop
stc
cmp
xor
mov
xor
insl
daa
lcall
sub
ror
out
or
lret
fisubs
xchg
cwtl
mov
cli
call
push
push
jecxz
xor
lds
cmpsb
ljmp
dec
fcompl
inc
andb
fwait
sbb
add
push
xchg
adc
jge
cs
xchg
mov
inc
arpl
add
or
push
shrl
add
lret
pop
mov
lahf
inc
loopne
adcl
mov
pop
cmp
pop
mov
sbb
jge
xchg
imul
divl
or
insb
and
cmpsl
ffreep
push
ja
pop
adc
jmp
sub
test
and
xor
scas
std
and
fnstenv
mov
cmp
inc
js
outsl
adc
jb
xchg
push
add
fidivrl
inc
aad
mov
insb
outsb
sub
xor
mov
or
fdivl
lret
sub
aaa
orl
push
sbb
pop
test
dec
loopne
push
dec
mov
add
aam
xor
sbb
xchg
and
jmp
inc
popf
and
stos
cmp
es
scas
pminub
xchg
icebp
lret
adc
lock
xor
out
mov
out
or
mov
cmp
jae
jmp
lahf
ret
out
lds
or
mov
cmp
cmp
xchg
dec
mov
jb
and
cmpsb
mov
xor
js
inc
es
cmp
xchg
sbb
cmc
test
dec
sub
lds
mov
insl
or
sub
sub
in
inc
jmp
jo
fistpll
or
mov
je
jo
push
or
add
sbb
sbb
and
inc
add
pop
gs
add
mov
jp
insl
or
sbb
movsl
mov
mov
push
dec
aas
sbb
movsb
psraw
push
mov
jg
pushf
pop
sbb
ja
fists
in
xchg
mov
out
fimuls
sbb
lahf
cmpsl
or
inc
imul
xor
mov
mov
cmp
sbb
aaa
mov
imul
jae
add
ss
inc
clc
imul
aam
ficompl
scas
nop
push
sub
pop
jge
and
dec
jp
fstps
adc
es
jne
fisttpll
pushf
push
mov
outsb
jbe
cmp
lcall
cmp
cli
lcall
inc
cmc
mov
dec
stos
push
mov
out
into
or
sbb
xchg
mov
aam
stos
jo
mov
stos
in
xchg
imul
ret
inc
xlat
mov
ja,pn
xor
push
test
or
cs
mov
fldt
iret
mov
out
aaa
mov
orl
arpl
and
into
sub
mov
in
cmp
adc
sbb
cmp
push
lods
sub
sbb
outsb
sbb
test
jns
insl
push
mov
lcall
in
push
outsb
cld
inc
je
and
sbb
push
std
pop
mov
pusha
push
gs
jecxz
mov
hlt
pop
fwait
xchg
repz
mov
loope
je
mov
pop
fistl
pop
mov
jge
push
cltd
cmpsl
loop
es
pusha
push
rcrb
test
xlat
sahf
ljmp
add
jae
std
push
jle
lahf
and
in
sbb
pop
sbb
sub
push
pop
int3
sub
mov
sbb
sub
cwtl
push
mov
mov
in
mov
mov
insl
das
loop
stc
shlb
pop
mov
push
pop
push
loop
dec
xor
into
sbb
mov
paddd
ja
mov
sub
sub
cmp
xor
jne
push
in
inc
call
jecxz
inc
push
jnp
icebp
out
jge
mov
mov
mov
enter
insb
mov
push
pushf
mov
into
push
aaa
xor
daa
cmpl
or
and
mov
scas
gs
mov
jge
in
or
pop
sub
outsb
push
inc
push
ret
sub
dec
loope
ljmp
loopne
aaa
xor
test
shl
arpl
sbbl
imul
popf
hlt
mov
pop
icebp
xlat
pop
adc
clc
bts
js
test
dec
pop
stos
or
loope
sub
mov
data16
and
add
jb
push
mov
or
sub
add
pushf
das
xchg
jmp
inc
mov
dec
add
mov
sbb
iret
cs
add
jmp
lods
push
aam
out
stos
mov
push
ret
out
sbb
push
cwtl
mov
dec
imul
out
sbb
xor
rcll
dec
pop
xchg
in
enter
lea
adc
cli
mov
dec
lret
sbbb
cli
xchg
mov
les
or
or
mov
push
pop
mov
cmp
adc
sbbl
push
nop
cmpsl
fwait
les
or
addr16
cmp
jle
and
hlt
jp
cmc
mov
mov
push
or
ret
jno
pop
xchg
daa
sbbb
dec
fucom
test
or
scas
lds
addb
int
xchg
cmp
out
xchg
jmp
add
stc
mov
loop
je
lock
mov
cs
sti
hlt
in
ja,pn
sub
sbb
popf
mov
adcl
ja
jae
in
mov
fwait
inc
int
sbb
mov
mov
sub
mov
test
lods
mov
ret
lcall
mov
cmp
mov
adc
rcll
push
aam
test
daa
dec
fldt
into
pop
in
pop
fiaddl
rol
sbb
mov
jp
cmpsl
mov
fistps
ror
sub
loopne
jecxz
sub
outsl
ds
bound
jge
filds
lcall
fwait
xchg
scas
pop
lods
insb
add
mov
add
mov
lcallw
mov
and
out
rcrb
sub
sub
inc
mov
repnz
js
rorl
lret
stos
xor
adc
mov
mov
shlb
in
mov
outsl
ss
cwtl
iret
imul
inc
push
add
mov
push
pop
xor
sbb
and
push
daa
dec
and
push
dec
sbb
cltd
sbb
push
push
iret
jg
stos
push
lahf
pop
mov
out
and
and
iret
jnp
and
es
xchg
outsb
inc
lret
in
add
sub
jle
repnz
je
mov
icebp
fs
scas
and
mov
adc
xor
push
fidivs
push
cmp
xchg
or
and
dec
and
pushf
sub
pop
xor
pop
call
daa
dec
dec
lock
jne
jno
xor
mov
stc
add
push
push
aam
or
sub
push
cmp
jbe
aam
dec
or
in
out
pop
sub
and
js
mov
ljmp
lock
mov
popa
and
mov
xlat
test
stos
lods
push
xchg
xor
mov
stc
pop
xlat
lea
push
xchg
call
sbb
mov
push
mov
pop
rclb
xchg
hlt
and
call
jo
sar
jp
push
cmp
fistpll
icebp
ret
push
add
mov
ljmp
xchg
loop
cmpsb
in
cltd
out
subb
pop
je
and
inc
xchg
test
rolb
div
daa
popf
lods
mov
gs
add
scas
lret
shrb
notb
adc
and
mov
sbb
in
rorl
ret
ret
cld
jg
pop
add
repz
jge
jb
dec
push
pop
ja
add
in
es
call
loop
in
test
movsl
jecxz
xlat
test
xchg
jnp
jle
stc
inc
pushf
out
sub
sub
iret
pop
xchg
mov
inc
repz
aad
sbb
cmp
lods
dec
xchg
xchg
jo
pop
fs
inc
movsb
sbbb
wbinvd
mov
lahf
cmp
mov
dec
xchg
popa
lret
pop
mov
sbb
xor
push
insb
out
push
mov
out
cli
mov
xor
dec
mov
mov
popa
nop
jno
xor
or
daa
bound
scas
into
lds
int
pop
stos
and
pop
scas
leavew
int3
mov
rolb
mov
mov
push
xchg
xchg
ret
je
ja
cmc
mov
sbb
jbe
sbb
push
push
js
fistpll
sub
xor
pop
rolb
jmp
mov
cmp
mov
ss
cmp
nop
in
subl
in
push
mov
sub
xorps
es
stc
iret
test
ljmp
aad
pusha
cmp
dec
xor
cmp
cli
fmull
sub
mov
data16
push
dec
and
lret
out
xchg
es
data16
cmpsb
insb
les
daa
sub
cmp
dec
xrelease
dec
jle
pop
shlb
jnp
daa
test
in
fisubl
test
mov
sbb
mov
fsubrs
sbb
mov
or
dec
or
not
enter
bound
mov
mov
leave
aaa
imul
add
xchg
into
xchg
and
xor
fmull
mov
leave
orb
jne
mov
adc
xchg
nop
pop
sub
movsl
loop
cmp
xchg
mov
mov
or
jp
mov
fldpi
enter
pop
les
stc
xchg
sbb
adc
loope
jg
stos
cli
scas
bound
lret
push
pop
inc
xor
inc
push
and
movsl
lea
daa
jge
mov
adc
cmp
jl
pop
push
xchg
sarl
mov
push
mov
xchg
mov
sub
daa
popf
or
mov
jo
je
rcl
push
insb
sbb
pushf
mov
out
jge
adc
inc
pop
push
out
fstp
lahf
xor
pop
fsubrp
push
icebp
xchg
add
stos
xchg
loopne
push
xchg
cmp
pop
sub
ficoms
and
pop
adc
or
sub
jnp
cwtl
sub
int3
adc
aaa
jno
push
push
es
jns
jnp
jne
jmp
loope
hlt
mov
inc
aad
test
push
jge
add
test
cmpsb
cs
inc
xor
test
jp
jno
jecxz
or
mov
add
lret
pop
mov
fbstp
aaa
rcl
dec
xchg
jle
add
incl
je
loopne
xlat
std
add
mov
cli
cmp
jne
bound
ret
fisttpl
inc
cmp
hlt
jbe
xor
aam
and
rolb
jmp
sbb
pop
sub
enter
fcmovnbe
dec
fistpll
xchg
mov
or
jbe
movsl
aad
cmpl
xchg
inc
mov
jecxz
push
popf
clc
int
movsb
xchg
into
aaa
in
mov
lcall
xchg
and
push
mov
comiss
mov
nop
and
das
shlb
sbb
lret
sub
push
push
arpl
mov
mov
lea
adc
xchg
std
test
sbb
push
xchg
cs
shll
sub
imul
mov
lods
jbe
cmpsl
push
adc
mov
cmp
xorb
testb
mov
mov
shlb
popf
jecxz
xchg
add
or
cmp
fwait
xor
xchg
insb
cmp
in
jp
push
call
push
sub
js
mov
lahf
fdivrs
push
mov
mov
test
dec
imul
imul
and
fmull
pop
out
jae
push
les
outsl
pop
test
inc
and
aaa
out
scas
mov
gs
dec
jnp
test
enter
dec
incl
cmp
mov
jae
lcall
imul
xor
sbb
xchg
cmpb
jnp
mov
dec
push
mov
or
shr
jne
cmp
jle
cmpsl
nop
daa
popa
popf
lock
mov
stc
lea
imul
mov
psubusb
push
dec
lcall
idivl
xchg
jae
ficomps
pop
lods
or
sub
sub
rcl
sti
lahf
lea
xchg
push
mov
pop
mov
rcll
and
push
popa
lock
xchg
test
and
mov
test
mov
sub
dec
adc
iret
push
out
jbe
push
movsl
cmp
mov
cmp
insb
data16
imul
mov
imul
adc
ffreep
pop
int3
mov
rcrb
sbbl
mov
enter
es
test
out
xchg
fwait
std
jp
mov
pop
lahf
mov
mov
lods
stos
adc
push
or
mov
enter
jo
dec
popa
repnz
lret
arpl
mov
rolb
lret
das
sbb
add
loop
shr
jns
and
insb
mov
pushf
push
push
popf
stos
or
mov
push
or
jns
dec
pop
mov
das
and
and
dec
sarl
sbb
mov
sbb
push
cmp
mov
xchg
push
adc
push
xor
clc
insb
or
mov
and
fnstcw
cmpsb
int
mov
and
les
push
sbb
cmp
das
push
push
sub
mov
add
or
push
pop
in
gs
bound
cltd
into
gs
jge
cli
jge
ljmp
icebp
cwtl
dec
repnz
loope
lods
and
sbb
push
ret
sub
bound
test
pop
das
fnstcw
call
xchg
ror
repnz
adc
dec
movsl
jge
pop
es
into
test
or
test
rorb
sbb
ds
and
or
inc
or
or
repz
inc
test
jmp
stos
ds
movsb
in
pop
sahf
mov
push
xor
jns
push
adc
push
cs
ficoms
dec
cltd
cwtl
jle
cmpsb
popf
push
jge
sub
push
fldenv
push
or
ljmp
cmc
sub
insl
push
gs
mov
sbb
add
popa
cmp
fisubs
sub
and
data16
stos
in
lea
insb
lods
add
aas
cmp
data16
add
dec
idivb
outsb
cs
add
ljmp
cmp
jecxz
pusha
lock
fiaddl
jecxz
jns
movsb
mov
and
bnd
add
ret
mov
stos
int3
mov
scas
dec
and
mov
aas
icebp
imul
aaa
mov
test
popa
xlat
orb
sti
jge
xor
inc
push
or
nop
push
sbb
and
aam
sub
mov
ret
inc
jl
xor
je
mov
or
insb
and
aas
cmpb
fidivs
or
hlt
bound
aaa
leave
pop
sbbb
lret
mov
sahf
in
cmpsb
mov
ds
loop
push
jl
mov
cmpsl
cwtl
jno
and
jno
cli
pop
mov
inc
xchg
sbb
stos
sub
adc
clc
loop
sub
inc
mov
mov
xchg
add
pop
sbb
jp
or
cmp
push
sub
orb
jb
jno,pt
xor
pop
int3
xor
out
or
stc
int3
dec
in
das
cmp
dec
mov
int
mov
cmp
adc
scas
push
jno
sbb
stos
dec
mov
leave
dec
xor
jae
outsb
loop
pop
or
mov
dec
sub
leave
xchg
jmp
mov
jno
mov
mov
repnz
test
add
sar
dec
sub
jecxz
pop
movsl
sbb
jecxz
hlt
roll
arpl
out
imul
cs
div
movsb
cwtl
andb
sbb
mov
cmpsl
jne
push
clc
and
xorl
inc
dec
dec
into
or
out
into
outsb
fs
pop
iret
jmp
xchg
dec
testb
outsl
outsb
or
in
ret
icebp
cmpsl
lret
inc
sbb
bound
jmp
push
in
jnp
push
cmpb
inc
adc
push
cli
out
pop
xor
and
push
in
add
mov
and
iretw
and
xchg
cmp
xchg
push
insl
mov
cld
sti
daa
sub
lock
xchg
pop
sub
dec
movsl
mov
jecxz
adc
cld
arpl
sbbl
lcall
out
leave
stos
jae
mov
nop
mov
movsl
sbb
adc
int3
ljmp
dec
repz
int
aas
mov
lods
jbe
pop
repz
xor
insl
cmc
adc
scas
add
out
pop
inc
mov
rcrb
je
and
xchg
daa
shlb
and
fidivrs
xchg
test
mov
imul
clc
movsl
inc
aaa
mov
add
mov
dec
mov
pop
lock
arpl
adc
add
xor
mov
ror
mov
test
rorl
pop
fcmovb
and
jae
ror
ret
ret
int3
jne
pushf
mov
xchg
ret
sub
popa
lods
push
leave
mov
stos
sub
in
push
cmp
stc
xor
loop
cmp
jg
sub
addr16
sub
daa
clc
add
xchg
sti
loopne
addb
xor
into
or
mov
mov
dec
inc
mov
push
sbb
int
mov
xor
add
popf
adc
test
or
das
adc
aad
stos
add
das
loop
shlb
or
mov
fcmovnu
call
add
test
mov
push
scas
push
int3
push
mov
adc
push
data16
push
sahf
dec
jb
dec
push
mov
popf
mov
push
cmp
js
add
shr
fiadds
cmc
xchg
mov
ljmp
jmp
out
ss
push
add
cwtl
testl
mov
ljmp
dec
inc
jns
adc
and
cltd
inc
cmpsl
add
test
scas
loop
mov
cmc
mov
cmp
xorb
insb
std
xchg
insl
shrb
fistpl
ret
mov
mov
lea
or
jb
dec
popa
outsb
push
clc
stos
and
mov
xor
inc
xchg
repz
cmp
mov
inc
ror
nop
loope
jno
shll
aaa
mov
std
pop
movb
cmp
cmp
in
repz
outsl
dec
mov
pushf
out
test
mov
idivl
jae
xor
pop
test
jnp
ljmp
fldenv
jbe
add
add
insb
std
popf
in
sub
cmp
cmpsb
jns
scas
push
lahf
outsl
mov
xor
sbb
fdivrs
and
mov
and
sub
repz
sub
ret
fst
ss
pop
lea
xchg
faddl
push
ss
scas
or
lea
hlt
sbb
xchg
enter
pop
sbb
add
lahf
cwtl
movsl
xchg
and
aam
add
push
mov
sti
xlat
inc
mov
out
cmp
cmpsb
fidivrs
mov
cmpsl
dec
stos
int3
adc
movsl
cmp
lahf
fwait
or
add
aaa
imulb
mov
mov
call
and
sub
mov
lret
jnp
mov
pop
xchg
sets
cmp
cli
pop
xchg
ja
outsb
gs
and
movsl
shlb
push
aad
jbe
les
mov
loopne
adc
sub
cld
pusha
cmp
mov
loopne
test
jb
and
xlat
xchg
adc
rcll
ret
frstor
dec
dec
sahf
mov
sbb
out
cmpsb
insb
dec
cmp
in
jg
shl
pop
ss
jle
out
je
xor
xchg
repz
mov
add
and
aam
outsl
pop
or
jecxz
mov
repnz
push
pop
xchg
mov
and
pop
lock
fisttps
or
cmpsl
aas
sbb
gs
outsb
add
sub
pop
push
xor
push
inc
mov
add
lea
mov
loop
pop
jle
mov
rcr
ss
daa
rcl
es
int
dec
mov
cld
xor
sub
cli
jle
test
ds
sub
ss
out
clc
push
mov
pushl
mov
test
lds
int
jns
jle
lahf
mov
xchg
dec
pop
repnz
add
scas
ja
bnd
enter
cmp
xchg
das
iret
test
mov
mov
mov
pop
inc
ret
add
xor
shr
and
pop
iret
imul
xchg
mov
pop
popa
repz
xor
inc
test
ljmp
adc
out
push
mov
xchg
test
leave
int
fdivrs
rolb
pop
sbb
scas
sub
or
fwait
jae
jl
subl
loopne
xchg
sahf
and
sbb
push
icebp
xchg
inc
fiadds
mov
xchg
mov
sbb
push
cmpsl
insl
inc
cmpsb
es
or
addb
mov
xorl
push
cmpsl
sub
xchg
add
add
rorb
shrl
inc
inc
push
dec
xor
jno
jmp
pop
lret
sti
mov
mov
pop
pop
xchg
bound
ss
sbb
jb
outsl
bound
mov
mov
roll
xchg
shlb
jecxz
fildll
xchg
cmp
mov
pop
test
adc
sarb
pop
aam
fucomip
cwtl
inc
outsl
repnz
ds
test
inc
push
divb
pushf
stos
adc
mov
test
cmc
aas
daa
fistl
push
pusha
jecxz
fisttpll
sub
dec
adc
push
and
sbb
rcrl
adc
and
test
cmp
outsl
aaa
ficomps
cltd
jg
cmp
xor
sbb
add
add
adc
jl
jecxz
je
lods
sub
aaa
ljmp
fisttpll
inc
arpl
dec
ficomps
or
das
idiv
dec
sbb
cmp
jmp
adc
mov
mov
inc
cmp
insb
pop
aas
push
out
out
movsl
or
push
movsl
jmp
ftst
int3
pusha
mov
ss
add
fxch
aaa
call
decl
xlat
adc
insl
xchg
lods
pop
dec
lret
stos
sbb
fsubs
scas
faddl
ret
stos
jge
js
repnz
fwait
pop
daa
test
lods
cmp
int3
mov
sub
sbb
loop
loop
fadd
push
or
cmp
loope
dec
or
xchg
mov
dec
aam
push
pushf
sbb
dec
mov
imul
div
jp
push
inc
mov
loopne
adc
sub
cs
into
adcl
into
xor
dec
dec
pop
pop
lea
xor
daa
mov
jg
rcl
pop
sbb
or
cwtl
out
addr16
add
mov
mov
lods
pop
sbb
cwtl
xchg
lds
xchg
test
aas
or
aas
shrl
jge
out
sub
shlb
aas
aad
sbb
push
in
cmc
das
jns
xchg
dec
jl
rcll
mov
daa
xlat
xor
aas
mov
sbb
lret
adc
inc
dec
hlt
fidivl
jecxz
jno
lods
imul
rcr
xchg
push
jne
push
push
rclb
imul
sbb
mov
xchg
lock
cs
and
or
push
and
divl
roll
push
jg
or
xor
mov
rcrb
pop
fstp
pop
arpl
aad
aas
and
mov
push
mov
out
scas
mov
aam
dec
cmc
lcall
cmpb
pushf
int3
cli
repnz
xchg
test
dec
arpl
in
out
cmpsb
sbbl
pop
dec
sbb
imul
sbb
or
xchg
lret
mov
das
dec
seto
jp
in
daa
shrl
push
cwtl
mov
lcall
aas
or
lods
iret
xchg
xchg
neg
fistpl
pop
imul
xor
arpl
jle
movl
push
daa
jae
aam
movsl
or
into
out
rclb
and
xor
cmp
mov
cs
sbbl
in
stc
stos
push
rolb
mov
push
leave
fwait
pop
pop
xchg
lret
and
adc
pop
pop
outsb
or
xchg
sti
pop
aaa
xchg
add
xchg
mov
test
iret
jmp
cmp
ds
jecxz
cmp
push
adc
push
int
dec
pop
outsl
das
xor
in
movsb
loopne
add
outsb
jno
pop
sub
out
jmp
sbb
add
cmp
mov
lcall
lret
mov
inc
inc
gs
and
pusha
test
sub
add
mov
mov
and
inc
out
mov
jb
push
aad
dec
and
push
or
fistpll
push
push
add
dec
mov
fsubrs
mov
rcll
adc
sti
sub
nop
sahf
pop
xchg
mov
jge,pn
fs
dec
in
ljmp
and
jnp
xlat
pusha
aas
pop
mov
arpl
push
mov
lock
imul
cs
mov
movsb
test
repnz
mov
adc
test
add
arpl
fisubs
fstpt
jle
cmp
enter
dec
add
test
repz
cmpsb
and
adc
stos
aad
and
and
pop
loop
jle
sub
dec
in
sbb
into
jg
jg
stc
mov
mov
or
jl
stos
cmc
stos
dec
insl
outsb
xor
mov
in
push
fistpl
cmp
sbb
es
xchg
addb
outsb
adc
lcall
mov
cmpsl
int3
stc
int3
mov
cmp
inc
sub
dec
or
xchg
jbe
fldcw
adc
sbb
jg
adc
cld
xchg
fsubl
sbb
cli
daa
mov
inc
int3
mull
sub
push
mov
mov
jmp
pop
iret
add
orb
or
jo
sub
leave
adc
movsb
sahf
hlt
push
push
jnp
push
stc
test
push
in
shlb
push
sbb
sbb
push
js
js
mov
sbb
aaa
push
or
in
cmpsl
repnz
add
push
mov
in
pop
lahf
xor
sub
and
push
jns
loopne
xor
sub
sar
enter
add
inc
mov
sub
sub
and
mov
mov
lcall
cld
xchg
mov
dec
fisttpl
push
sti
fdivr
cmpsb
xor
xchg
adc
jmp
loope
cmp
push
scas
mov
lret
fidivs
push
bound
jmp
xor
scas
repz
mov
inc
jnp
dec
scas
push
cli
mov
dec
test
xlat
push
jns
push
loop
sub
dec
mov
bound
inc
xor
stos
push
leave
sar
int
iret
cmp
into
loope
add
sbb
and
scas
rcl
push
pusha
arpl
push
pop
adc
xorl
and
sub
addr16
add
mov
mov
xchg
mov
dec
dec
inc
adc
jl
push
dec
xchg
jne
xor
stos
sbbb
testl
and
icebp
pop
pop
push
in
add
mov
pop
push
in
lret
mov
adc
loop
js
sub
and
into
stc
out
pushf
cmp
lock
sub
mov
sti
jnp
andl
shlb
lcall
mov
xor
notl
mov
mov
int
stc
stos
xchg
aaa
mov
hlt
stc
fistpll
xchg
mov
adc
pop
sub
rorb
adc
pop
lcall
enter
jb
mov
pop
dec
or
or
xor
xchg
push
pop
dec
insl
jl
fwait
int
rclb
pop
pop
add
loope
outsl
scas
pop
inc
fldl
mov
or
stos
lcall
es
xchg
test
fmuls
jmp
dec
pop
cwtl
rcll
fwait
sub
dec
xor
cmp
add
out
cmp
in
and
xchg
cmp
and
push
jno
std
inc
mov
ja
sbb
lcall
loope
arpl
lahf
dec
int3
mov
lock
jb
sbb
and
push
push
arpl
mov
sub
in
push
push
mov
stos
lret
cmp
pop
jb
mov
aad
jns
xor
pushl
cltd
add
ss
dec
iret
or
mov
stos
add
rol
loop
out
inc
adc
push
dec
cmp
sahf
inc
dec
ret
das
push
dec
adc
stc
jb
xchg
rcl
adc
insb
shl
fldenv
test
xorb
lods
sti
or
mov
lret
pop
push
inc
rclb
test
enter
pop
pop
aad
adc
das
mov
js
fcoms
mov
mov
imul
mov
pop
sbb
add
sti
push
cmc
mov
insb
mov
push
dec
ljmp
in
cmc
add
sbb
in
push
or
mov
xor
scas
xor
imul
popa
xchg
into
in
cmc
rcr
cmp
xlat
jmp
sbb
cmpsb
dec
hlt
mov
push
mov
mov
and
insl
xchg
lods
fs
pusha
jle
push
fdivrs
sbb
out
xchg
cmpsb
stc
aaa
mov
pushf
cmp
loope
out
sbb
or
pop
add
orl
ja
ss
out
out
gs
sub
and
jbe
push
movsl
hlt
inc
push
mov
jbe
ljmp
movsb
testl
or
test
les
imul
jns
mov
xchg
lods
mov
add
cmp
pushf
mov
jne
add
xchg
ss
sarb
call
cmp
sub
stos
add
xor
pop
mov
in
scas
fs
and
ss
outsb
xchg
outsl
popa
fs
movsb
imul
dec
add
cli
mov
mov
ja
push
out
out
sub
jne
shll
fsubrl
push
decb
popa
pusha
clc
xchg
pushf
fistpll
jae
loope
mov
jmp
repnz
jecxz
xor
ret
test
xchg
negb
push
xor
rcrb
inc
jbe
stc
cmp
add
daa
xor
orl
hlt
fistpll
lods
sub
icebp
add
mov
inc
push
ss
loopne
pop
pushf
cmpsl
lret
xchg
mov
les
push
inc
mov
std
sbb
mov
add
lret
xor
xor
cmp
scas
call
add
mov
jmp
jo
xchg
jo
or
movsb
push
cmc
stos
pop
lods
cwtl
mov
push
stos
sub
ss
pop
stos
mov
inc
push
js
imul
cmpsb
mov
aaa
push
xchg
add
xor
mov
imulb
push
ss
adc
xchg
incl
xor
push
jae
sub
sbb
inc
pop
hlt
lods
fucomp
mov
dec
ljmp
fnsave
jg
xchg
data16
cmpb
or
dec
inc
pop
dec
jl
in
mov
cmpsb
mov
lods
leave
mov
xor
add
cmpsl
call
mov
shl
nop
mov
dec
jb
unpcklps
sbb
mov
xorl
fwait
adc
mov
inc
push
jb
movsb
movsb
loope
mov
dec
cmp
in
test
in
repnz
push
shlb
sub
clc
inc
out
into
jae
movsl
push
push
out
mov
clc
xchg
fisubs
mov
call
jne
leave
sub
sbb
mov
fdivrs
sti
jge
iret
jae
xchg
test
add
aam
movsl
cltd
jmp
in
lock
rdmsr
in
inc
adc
or
repnz
out
pop
cmp
add
mov
push
adc
mov
xor
adc
mov
cmp
jg
jo
stos
or
sbb
xor
scas
jnp
ret
dec
pop
cmpsl
lret
insl
mov
cld
pusha
push
inc
loope
mov
les
lock
xchg
add
das
jae
adc
adc
lret
mov
cmpsb
sub
mov
push
sub
gs
into
icebp
mov
xor
js
in
xchg
add
lock
mov
mov
jle
xor
addr16
std
jae
mov
jbe
aad
inc
or
xchg
movsb
stos
jnp
lods
enter
test
pop
repnz
sti
push
pushf
fildll
or
xlat
mov
cs
insl
xor
in
sbb
fsubs
xor
shlb
xchg
out
cmpb
jb
dec
je
jnp
outsl
pop
cmp
adc
test
mov
xorb
sub
ss
push
imul
icebp
fidivl
lahf
cld
cmp
mov
jae
aam
call
push
sbb
xchg
sub
jle
push
lock
mov
addr16
and
lret
imul
arpl
nop
cmpsb
leave
mov
loopne
push
dec
subb
pop
es
lods
pusha
mov
stos
fdivl
mov
add
aas
ss
rorb
les
stos
inc
jne
cld
inc
decb
fs
jmp
subl
push
jle
xor
into
push
and
push
sbb
mov
push
jp
rcrl
jmp
cs
adc
cmp
adc
xor
inc
int
lcall
int
push
dec
mov
mov
or
and
into
mov
subb
and
pusha
xor
or
test
adc
in
cmpsl
bound
enter
mov
jge
pop
aam
add
cwtl
pop
mov
xchg
jo
scas
dec
ret
sti
les
jb
pop
push
mov
xor
stc
sti
sub
mov
mov
movsb
sbb
pop
sub
mov
dec
das
jne
je
jo
stc
mov
clc
add
and
scas
xchg
jle
sub
cmp
push
mov
jns
inc
mov
outsl
stos
fdivrp
mov
in
pop
inc
data16
xor
xchg
mov
out
cli
popa
mov
leave
mov
cltd
jns
aas
mov
fs
pop
jb
addb
or
sti
mov
and
repz
xchg
cmpsb
xor
hlt
adc
pop
dec
addb
cmp
addr16
outsb
das
xor
into
sub
je
popa
and
xchg
and
jne
dec
cli
jbe
sbb
mov
push
mov
add
test
pop
pop
mov
jl
fnsave
jb
and
or
mov
mov
adc
test
mov
shrb
inc
out
sub
mov
mov
divl
jg
mov
add
dec
mov
ja
xor
in
adcl
cmpsl
mov
xor
in
pop
decl
cmpb
push
ret
repz
jg
mov
jge
mov
bound
rorb
out
add
fwait
mov
mov
pop
mov
cltd
call
popa
mov
enter
push
add
ja
lock
adc
or
popa
pop
sbb
aas
xchg
and
in
and
lret
cwtl
inc
jp
or
clc
cmpb
mov
cmp
mov
hlt
pusha
ljmp
ror
sub
loopne
jb
mov
pop
push
xchg
inc
dec
fwait
cmpl
and
and
outsl
out
sub
jo
and
es
mov
jecxz
test
sub
lds
or
sbb
stos
outsb
pushf
outsl
rcl
sub
in
decb
mov
jb
cs
lods
jp
rolb
lock
ds
pop
push
mov
lods
inc
xor
add
lcall
xor
jbe
test
and
cli
or
add
mov
in
jmp
loopne
loope
add
mov
sbb
scas
test
mov
xchg
aam
stos
into
daa
xor
inc
leave
cmpsl
push
test
and
push
movsb
xor
call
movsb
clc
repz
xlat
std
mov
jne
stos
push
ds
or
jne
lcall
jnp
or
sahf
jmp
push
filds
fisubrl
loopne
pop
call
sub
pushf
dec
cmp
jb
mov
sub
aaa
mov
and
fs
push
xchg
mov
jo
push
xor
orl
in
call
mov
lods
mov
stos
js
xchg
xlat
mov
xchg
mov
mov
sub
xchg
mov
rolb
pop
jl
cmp
lods
or
out
push
jae
pop
push
push
and
jne
dec
sti
adc
ficomps
jns
pop
cmp
dec
mov
loopne
dec
cmp
cmp
mul
stos
ret
mov
clc
pop
shrb
or
dec
push
mov
call
mov
out
and
sarb
xchg
popf
mov
inc
imul
das
mov
or
lahf
cmp
cmp
int3
push
cmpl
xchg
fsubl
push
or
scas
jns
mov
push
pop
cs
cmpsb
push
jp
test
push
mov
or
addb
jae
cmp
lea
pop
add
fwait
movsb
int
cmp
jno
clc
push
adc
pop
or
mov
pop
pop
jmp
adc
fldt
push
fcompl
mov
mov
or
inc
mov
lcall
cmc
hlt
repz
lods
inc
fmuls
scas
shll
jne
jns
mov
jns
or
dec
aaa
icebp
push
mov
dec
add
idivb
nop
insl
cld
lret
ret
jno
push
dec
cmp
stos
shlb
or
rorl
mov
ret
jmp
leave
hlt
adc
shrl
add
outsb
iret
ja
subl
and
sbb
mov
stos
addr16
cli
xchg
pusha
xchg
adc
push
jge
mov
sbb
xchg
dec
out
xlat
data16
push
or
sub
and
cld
nop
hlt
jmp
sub
aaa
es
jp
mov
or
rorb
add
push
imul
mov
inc
push
inc
xchg
icebp
rorb
dec
cmp
clc
mov
mov
pop
mov
mov
fxch
movups
push
jl
dec
aaa
rcrb
les
mov
mov
sub
or
cltd
scas
push
sub
and
jb
push
push
mov
push
in
push
sub
sub
xor
popf
mov
dec
pop
repz
dec
mov
push
scas
inc
xor
jo
mov
xor
fiaddl
jbe
scas
adc
xchg
loope
or
add
testb
xchg
push
dec
sub
lcall
pushf
call
movsl
stos
cmp
sub
ret
fwait
pop
into
xlat
ret
jp
mov
xor
outsl
inc
dec
lds
ja
cltd
mov
and
fisttpl
sbb
idiv
xchg
fcompl
adc
aas
fsubrl
push
ds
cmp
xchg
in
pusha
pop
out
mov
mov
call
mov
cmp
mov
andb
push
pop
sub
fdivr
leave
sbb
lret
cld
jp
data16
or
ficoml
add
jmp
jo
inc
pushf
cmpsl
cmpsb
mov
mov
push
call
sub
cmpsl
inc
jg
and
or
test
ds
incb
mov
sub
in
movsb
pop
mov
pop
enter
pushf
aas
imul
mov
ret
sub
and
lret
inc
sahf
jp
gs
loopne
mov
push
pop
and
cmpsb
or
cld
scas
jo
fincstp
in
adc
ja
ljmp
inc
bound
xchg
call
inc
pop
int3
push
inc
lock
dec
out
and
gs
mov
xor
xor
fcmovnu
xchg
loop
mov
sti
sub
push
cmp
bound
and
andb
outsb
add
jl
fwait
mov
int3
sub
fldt
or
std
and
mov
ja
xchg
iret
push
mov
lahf
push
int
push
movsb
xchg
or
out
jl
inc
xchg
cmpsb
mov
mov
jne
movsl
ljmp
xor
loope
rcrl
cli
mov
mov
push
nop
ret
or
push
mov
insl
mov
stc
jnp
xchg
sti
mov
cmp
mov
and
cmpsb
sarb
sub
and
lret
push
cmp
pop
sbb
pusha
sbbl
movsb
dec
add
jbe
jg
rcrb
sarl
adc
mov
les
test
fdivrs
cmp
mov
sub
sub
sbb
pushf
out
xor
arpl
push
ss
xor
lock
cmpsb
sub
lds
add
lods
inc
pusha
clc
push
add
jg
mov
push
testl
ret
out
add
scas
jmp
xchg
push
and
fcomip
sub
shlw
pop
loopne
jmp
jg
out
xchg
xchg
loope
cmp
adc
lahf
jbe
in
int3
cmc
iret
mov
out
xchg
ret
cmp
push
or
mov
mov
mov
out
fisubrl
mov
or
icebp
test
stos
sub
loop
jae
fisttpl
xor
scas
jb
ret
sahf
mov
mov
dec
stc
enter
inc
adc
push
dec
pushf
xchg
mov
pop
fidivrl
pushf
shll
fildll
repnz
xchg
mov
xchg
adc
andl
pop
xor
cmp
mov
enter
mov
aaa
enter
dec
stc
sahf
repnz
pop
mov
mov
in
cmpsb
jl
xor
and
cmc
incb
call
out
js
mov
test
jno
cmp
fwait
sub
and
xchg
sbb
inc
sub
cmc
rcrl
imul
ja
fstpl
std
mov
jno
fnsave
daa
add
lret
mov
test
fistl
cmc
les
ret
je
out
adc
mov
aad
dec
push
and
sbb
sahf
cmc
cmp
add
nop
inc
rol
bnd
jnp
jns
mov
push
push
cmp
inc
ja
call
stos
ljmp
cmp
dec
ja
fists
or
cmpsb
das
pop
pushf
fwait
mov
mov
adcl
adc
mov
out
imul
push
and
dec
cmpl
dec
lock
or
jl
push
aam
lods
jle
loopne
adc
repz
insl
xchg
pop
aaa
xor
jg
test
push
mov
fisttpll
nop
jmp
inc
mov
repnz
mov
jl
dec
mov
mov
nop
or
mov
or
inc
push
out
andb
pop
mov
dec
jb
cmp
adc
pushf
cli
jmp
popa
and
repz
pusha
insb
mov
cmpsl
xor
fcomp
rcll
frstor
into
sub
repz
mov
xor
test
lods
iret
mov
and
rol
dec
mov
inc
jle
sub
ljmp
cli
in
imul
sbb
sbbl
pop
jns
cwtl
faddl
pusha
rcrl
fwait
sub
mov
add
lcall
test
leave
call
cmp
inc
bound
call
lea
lods
in
lahf
loopne
sbb
hlt
or
fs
stos
insb
dec
mov
sub
jns
fiaddl
pop
popf
sub
xor
add
mov
jnp
ret
adc
jge
movsl
fbstp
les
cmp
inc
mov
test
aad
andl
dec
lods
repz
test
inc
jne
xchg
sbb
adc
push
pop
push
pop
fisubrl
in
jg
lods
cmp
pop
push
fildll
movl
icebp
out
lret
or
push
movsb
cmp
mov
std
dec
pop
mov
lret
clc
xor
lds
popf
das
fstpl
pop
mov
dec
aaa
testb
pop
mov
lock
test
dec
mov
xchg
pusha
mov
pop
xor
push
xchg
fs
pushf
jp
arpl
sub
xor
jns
leave
jge
adc
xor
add
pop
in
xor
sbb
js
je
ds
push
lahf
and
dec
mov
pop
mov
sbb
shl
inc
addb
add
pop
mov
fdivrp
dec
push
insb
stos
dec
sbb
in
cmp
pop
lahf
xchg
enter
pop
aam
jo
out
pushf
or
rolb
push
sbb
in
imul
dec
add
jne
incl
jb
js
fbstp
add
adc
or
cwtl
in
xchg
adc
mov
mov
pop
int3
fdivr
jmp
in
aam
incl
iret
pop
adc
fiadds
jnp
mov
inc
scas
ret
push
sub
and
ljmp
inc
lahf
stos
call
xchg
jno
and
js
add
mov
mov
imul
mov
push
and
or
rcrl
cmp
add
call
dec
adc
sbb
sub
jae
mov
and
outsb
jno
fimull
sbb
cwtl
sub
mov
cltd
lret
xchg
fisubl
stos
adc
push
mov
push
movsl
dec
sbb
sbb
xchg
push
ds
jmp
mov
scas
in
imul
pushf
cmpsb
daa
cmpsl
jae
ret
es
sti
pop
mov
loopne
out
mov
mov
sbb
sub
pop
das
jo
jp
in
push
mov
das
aam
pop
cs
leave
scas
hlt
lea
mov
fsubr
enter
mov
scas
lahf
stos
iret
dec
lds
xchg
dec
add
adc
std
pushf
enter
int
or
jmp
outsl
ret
or
mov
loop
add
xchg
rcll
mov
fadds
popa
sbb
adc
addb
and
stos
mov
mov
loope
dec
stos
inc
imul
mov
and
mov
xor
add
pushf
cmc
pop
push
xor
jle
push
push
int3
ficomps
adc
jb
and
loope
ds
cmp
jbe
fs
mov
pop
push
xchg
push
adc
ja
xlat
push
fdivrs
mov
dec
aad
add
decl
jg
mov
push
das
push
inc
adc
adc
push
jnp
gs
loopne
cmp
clc
and
xchg
loope
jg
movsl
push
data16
insb
or
in
or
sub
cmc
loopne
cmp
pusha
lock
lds
dec
imul
negl
gs
fldcw
aas
in
xor
mov
lcall
clc
push
subl
dec
and
iret
xchg
dec
sbb
jbe
ret
inc
movsl
int
jp
pusha
and
push
repnz
lods
sbbl
cs
push
mov
jl
mov
out
jmp
mov
inc
addr16
iret
sub
insb
and
push
test
adc
mov
fimull
mov
test
jb
clc
mov
xor
push
or
test
movsb
mov
add
rcrb
and
jmp
shr
stos
call
shlb
lret
jp
push
xchg
std
mov
imul
cmpsl
lods
xchg
ret
je
repz
cmp
inc
push
sbb
cmp
cmp
push
jo
outsl
mov
sub
and
adc
stos
or
call
insb
inc
mov
sub
daa
lods
jecxz
in
push
fwait
or
push
mov
adc
cmc
lods
xchg
pop
ss
inc
sti
xor
mul
sbb
inc
inc
push
enter
lock
cwtl
cmp
mov
cmp
je
in
rcll
cltd
cmp
ljmp
dec
push
inc
pop
rorl
mov
shl
andl
aaa
mov
rcr
loop
lcall
xchg
mov
fidivrs
pop
pop
sub
cwtl
jle
or
dec
push
fldt
adc
cmp
xlat
rep
xchg
ficompl
insb
jae
andb
sbb
lcall
sahf
sub
inc
mov
insl
or
push
mov
jno
cltd
dec
inc
sbb
in
frstor
push
pop
sbb
inc
push
or
sbb
das
sbb
bound
fdivrs
push
push
xchg
push
add
push
jge
or
bound
bound
int3
mov
xor
xor
cmp
scas
fs
push
movsl
add
jns
cmpsb
jle
pop
imul
outsl
jb
xchg
into
inc
mov
std
cmp
sti
test
aaa
pop
sbb
sbb
xor
inc
imul
pop
scas
idiv
fmul
xchg
xchg
mov
orl
loope
jnp
mov
push
xchg
push
or
add
movsl
fidivs
stos
sbb
in
sahf
sbb
mov
in
stos
scas
and
outsl
lds
mov
xchg
fwait
lret
in
and
daa
popf
push
rcll
loop
jle
and
xchg
fdiv
mov
lods
stos
add
mov
adc
mov
jae
add
sti
insl
fbstp
inc
and
pop
dec
pop
inc
xchg
jp
dec
into
pop
loope
test
push
mov
sub
jae
inc
mov
bound
mov
andb
pop
add
int3
aam
insb
ljmp
or
cmp
xor
push
xchg
fsubrs
jae
je
sbb
jo
sbb
inc
sahf
mov
xor
ds
cli
jno
jo
xchg
addr16
add
mov
dec
and
insl
pop
jnp
jnp
sub
leave
in
lods
test
add
fcoml
xor
orl
dec
push
ficoml
lret
addr16
push
incl
xchg
lret
daa
push
fxtract
lret
sub
in
cmp
push
xchg
addr16
add
mov
insb
pop
push
fstps
ffree
ljmp
push
mov
fsubrl
adc
je
jns
aas
scas
push
mov
test
js
cwtl
or
test
std
pop
xchg
mov
push
mov
in
and
dec
inc
es
or
add
jg
stc
out
pusha
fcmovu
and
outsl
fwait
dec
or
lea
in
xchg
push
andb
add
int3
mov
dec
adc
adc
lea
jns
retw
adc
dec
lahf
arpl
sbb
pop
inc
dec
adc
cwtl
js
pop
jg
addb
in
iret
stc
push
jnp
pop
cmpsb
sub
out
out
jmp
sbb
imul
inc
sbb
andb
into
jle
in
mov
xchg
shrb
or
jnp
or
out
and
sub
hlt
int3
lret
ret
out
psrlw
adc
nop
mov
mov
lahf
popa
ja
cwtl
outsl
daa
inc
scas
push
fwait
in
jle
pop
mov
mov
pop
inc
xchg
lcall
insb
frstor
shl
imul
arpl
data16
aaa
out
sub
mov
pop
fidivs
movsb
mov
fwait
add
out
loopne
xchg
xchg
rcll
test
or
mov
adc
rcll
cmpsl
fs
pop
jge
xchg
popa
arpl
pusha
repz
fdiv
addl
adc
in
push
mov
lods
xchg
stos
inc
mov
xlat
sbb
dec
xor
fwait
int3
lahf
adc
lods
in
pop
sub
sub
leave
mov
pop
movsl
xor
call
lcall
pop
out
sub
mov
aas
dec
stos
mov
xor
adc
std
dec
inc
xor
jb
dec
mov
push
popa
cmp
mov
in
clc
mov
test
stc
mov
arpl
icebp
jg
sahf
and
mov
lret
sahf
cmpsl
mov
jp
or
mov
rorl
lods
iret
outsb
fsubl
sbb
mov
mov
push
dec
pop
test
xchg
repnz
and
idivb
imul
leave
sub
and
test
push
mov
cs
add
icebp
lret
and
iret
bound
cmc
dec
inc
inc
shl
push
inc
dec
push
add
or
adc
mov
xchg
push
sbb
xor
out
add
mov
dec
xor
push
push
xchg
sub
sbb
and
inc
adc
lods
fs
mov
push
pop
xchg
lahf
cld
addr16
out
inc
lods
push
fdivl
rolb
cld
das
lea
sbb
ja
leave
in
insb
and
js
sbb
or
fcompl
subl
mov
mov
xor
sub
xor
push
and
pusha
out
inc
or
lods
add
mov
outsb
aas
cmp
or
sub
mov
mov
xor
fldt
ja
nop
pop
mov
mov
xor
sbb
out
inc
les
out
enter
or
call
addb
xchg
mov
or
es
out
cmpsb
int3
mov
out
rcll
cmp
icebp
add
ret
stos
sbb
popa
stos
adc
mov
pusha
pop
pop
push
and
or
xchg
inc
jns
shrl
jge
aad
subb
lea
enter
fdivl
dec
inc
pop
subb
ret
scas
mov
cmc
inc
xor
js
std
or
push
sbb
hlt
push
jbe
cmpsl
xchg
jnp
inc
dec
xchg
fldcw
notb
outsb
inc
dec
aam
pop
int3
add
outsb
insl
sub
mov
loope
mov
shll
mov
arpl
out
dec
mov
mov
push
or
xchg
movsb
jecxz
and
lds
xchg
sbb
rcrl
jmp
ja
sub
cmp
dec
jg
adc
int3
imul
xchg
sub
aad
and
sbb
test
fmuls
dec
xchg
nop
pop
daa
or
rcrb
xor
ss
neg
dec
arpl
adc
ljmp
mov
das
sbb
mov
inc
and
pushf
out
pusha
and
adc
inc
sbb
jge
sbb
or
sti
cmp
scas
sub
test
fldl
xor
daa
push
jecxz
inc
insl
mov
loope
sbb
repnz
ss
shlb
inc
inc
jno
sbb
popf
jno
outsb
ds
dec
xor
lds
push
movsl
sub
ljmp
sarl
in
inc
mov
add
idivb
lods
and
or
iret
fwait
and
repnz
out
std
jo
sahf
xor
shlb
aas
stos
mov
enter
xor
dec
xchg
bnd
movsb
or
xor
pop
cmpsb
xor
xchg
inc
std
test
fiadds
fsubl
sbb
or
cmp
jo
insb
fwait
sub
test
iret
pop
dec
xor
pop
pop
sub
and
inc
ror
out
add
xchg
mov
roll
inc
fbstp
and
cmp
add
inc
pop
out
xchg
rclb
or
ds
rolb
mov
cltd
push
sub
data16
repnz
insb
sub
mov
add
clc
sbb
out
xor
pop
cmpsb
fsubrl
pop
lock
fsubrs
pop
inc
cwtl
add
pushf
mov
cmpsb
ljmp
fldt
xor
or
sti
inc
addr16
dec
scas
in
aas
gs
and
or
in
inc
loopne
add
mov
jnp
and
and
dec
cwtl
inc
in
pop
imull
xchg
cmpl
mov
es
sub
push
fisttps
es
les
aam
leave
mov
cmpl
inc
push
pop
mov
ljmp
jecxz
dec
xor
lret
pop
lcall
adc
jecxz
mov
mov
or
fnsave
js
fdivl
sbb
insl
out
leave
and
aas
jl
cmp
ljmp
into
or
push
sti
cmp
fwait
popf
mov
mov
test
or
in
pop
cmc
and
into
dec
cmp
or
jbe
jecxz
mov
fsubrl
in
cmpsb
push
push
lret
sub
adc
adc
int3
ss
sub
hlt
push
jno
jns
fadds
adc
push
xchg
pusha
mov
js
adc
out
into
jl
aaa
push
sub
mov
jecxz
jmp
rorb
xchg
fdivl
or
inc
or
in
cltd
xchg
mov
xchg
cmp
push
nop
push
in
fcompl
test
mov
xchg
and
mov
inc
dec
sti
or
and
cmp
lahf
xchg
xchg
xchg
out
mov
mov
and
repnz
inc
popa
clc
mov
mov
popa
sbb
pop
lret
mov
lea
add
jae
movsl
inc
sub
push
push
xor
outsb
in
dec
iret
ficoml
lcall
popa
cmp
enter
jecxz
mov
pop
dec
loop
clc
lcall
adc
sub
push
xor
sub
aad
pop
lods
jle
mov
pop
adc
adc
push
dec
into
pop
xchg
pop
movsl
jnp
test
pop
mov
sti
mov
and
inc
mov
nop
add
pusha
xor
jmp
sub
repz
xchg
leave
movl
dec
lods
pop
mov
and
aad
and
outsb
push
cmp
call
jge
iret
cmpsl
je
pop
cmpsl
jecxz
shlb
jge
fmull
cmp
fildll
cmp
mov
lcall
aam
stc
add
cli
jp
sbb
fwait
rol
xor
movsb
pop
cmp
popa
cmp
add
mov
rorb
push
out
mov
or
sbb
ljmp
sub
lods
sbb
cmp
cmp
scas
mov
ror
adc
xchg
push
bound
fs
insb
pushf
sbb
cld
cmp
inc
popf
mov
or
push
and
shll
inc
and
sub
jae
shrb
push
xor
nop
sbb
cmp
stos
pop
fdivl
arpl
lods
repz
lea
addb
inc
ret
test
stos
mov
push
cmc
xor
and
dec
out
insl
xchg
imul
outsl
cwtl
mov
jmp
pop
xchg
insl
mov
sbb
jo
sbb
sbb
cmp
sub
and
rcrl
xchg
jl
sbb
pop
ja
xor
dec
push
je
sti
dec
and
sub
sbb
jmp
or
or
je
or
pusha
sub
pop
sub
insb
bsr
sbbl
lods
mov
lods
test
mov
fidivrl
test
mov
mov
fimuls
aas
fcoml
add
dec
adc
add
das
xor
mov
cmp
shrb
insb
jnp
and
and
cli
movhps
jns
sub
push
aas
clc
xchg
jns
xor
push
out
int3
hlt
inc
pop
push
pushf
cli
int3
shrb
and
popa
jno
push
ss
push
or
repnz
or
xor
adc
enter
mull
mov
frstor
movsl
mov
call
rol
clc
enter
shl
stc
mov
adc
dec
nop
aaa
les
xor
data16
sub
cmp
add
jb
insl
and
sbbl
mov
popa
or
test
cmp
add
testl
push
lock
negb
inc
test
loopne
outsb
je
mov
sbb
inc
mov
call
int
xchg
and
rol
jno
movsb
pop
lds
fucom
or
sti
xor
es
pusha
lahf
pop
int
imul
inc
push
or
adc
sar
pushaw
mov
call
jmp
les
mov
cmovns
xor
xchg
mov
xchg
pop
call
pop
sub
ficomps
or
push
mov
or
xor
jns
mov
xchg
ret
lret
sub
mov
cld
sub
mov
aam
insb
sarb
xchg
clc
adc
adc
adc
sub
xlat
push
inc
mov
sbb
mov
sub
fdivrl
imul
insb
fstl
sub
or
iret
mov
dec
lods
enter
aas
pop
adc
fisttpl
mov
outsb
aas
mov
sub
push
inc
addr16
cld
jmp
cwtl
jae
add
xchg
rorl
xchg
xchg
push
sub
mov
stos
jp
adc
jecxz
loopne
cmc
pop
xchg
nop
sbb
xchg
jp
dec
lods
sbb
or
dec
add
add
pop
sub
mov
fisubrl
fstpl
cli
dec
mov
mov
repnz
mov
lods
popf
dec
pop
push
cld
push
add
enter
or
lret
aaa
clc
mov
lods
movsl
mov
inc
decb
jmp
adc
maxps
sbbb
push
js
stc
test
mov
xorl
and
inc
out
mov
mov
hlt
sub
push
out
cmp
lahf
dec
je
pop
test
int
sub
mov
outsl
and
stc
call
daa
dec
cltd
mov
std
inc
adc
pop
je
jne
and
pushw
add
leave
les
out
daa
int
add
inc
sahf
jnp
rol
imul
cmp
js
in
and
cmpb
xor
fwait
dec
out
push
jmp
dec
pop
push
mov
int3
lcall
out
jg
loop
hlt
es
mov
jp
std
in
mov
cmp
xchg
stos
push
leave
sbb
mov
fisubl
insb
jg
ret
fsubp
add
inc
mov
push
jbe
sub
adc
jp
insl
jnp
cmpsb
cmp
mov
jle
adc
dec
sub
cld
mov
or
push
outsl
mov
push
mov
mov
loopne
test
ror
sub
or
mov
xlat
dec
xchg
and
dec
lret
pop
ret
mov
leave
and
dec
cli
xchg
je
pop
shl
add
push
enter
scas
je
sbb
in
mov
jge
push
test
adcl
mov
je
cwtl
out
ret
xchg
inc
dec
mov
mov
call
movsl
stos
mov
jl
insl
cmpsl
test
xchg
test
cmp
popa
cs
inc
aad
jl
loope
lret
xor
mov
push
pop
out
das
fs
sti
ror
js
rcr
mov
shlb
loop
jmp
push
jno
mov
sbb
sub
pop
cmp
stc
aas
pop
adc
and
push
loop
xor
lock
cmp
mov
inc
test
fwait
or
imul
mov
movsb
int3
or
adc
mov
xor
xchg
fldenv
clc
xor
mov
xlat
movsl
cld
dec
jb
dec
xor
enter
mov
ljmp
and
aad
and
xchg
loope
aaa
stos
popa
sub
dec
xchg
jnp
mov
testb
fsubrl
pop
xchg
mov
daa
xchg
ss
or
mov
cmp
mov
repz
cli
mov
or
dec
incb
movsl
sbb
mov
jge
mov
out
repz
dec
push
adc
and
loop
cwtl
movsl
gs
aam
lret
out
cmpsb
test
xchg
cld
cs
fadd
pop
lret
out
data16
add
outsl
jo
lahf
mov
xlat
xchg
dec
outsl
pop
cmpsl
idiv
mov
jno
push
jnp
cld
ja
stc
xchg
push
cmp
adc
in
lock
lret
leave
out
mov
lcall
cmp
sbb
adc
or
aam
jne
movsb
dec
std
sahf
dec
xchg
sbb
out
sbb
cmp
xchg
mov
stc
and
mov
jl
mov
cmp
add
pop
or
lahf
orl
bound
adc
sub
jmp
adc
jnp
stc
or
adc
jmp
out
mulb
shrl
mov
jns
and
das
outsb
imul
addr16
lret
adcb
xchg
pop
push
or
scas
in
sbb
sub
jl
sbb
pop
addr16
cmpsb
sbb
cmc
rorl
push
dec
and
mov
inc
xlat
mov
dec
js
xchg
mov
push
xchg
inc
cmp
imul
inc
mov
inc
outsl
cmc
mov
dec
xor
es
sub
popa
fldcw
lret
and
push
test
aas
dec
es
adc
push
pop
xchg
xchg
les
xchg
add
andb
push
sbb
mov
xor
adc
jl
add
cli
int
loop
addr16
push
cmpsb
arpl
nop
popf
arpl
jb
xchg
xchg
ja
gs
testl
or
jge
movsb
add
test
jno
mov
push
mov
adcb
pushf
insl
dec
add
repz
adc
cmc
jmp
mov
test
test
test
jl
sub
cmp
stos
dec
push
imul
mov
in
adc
ljmp
mov
push
inc
dec
mov
loopne
push
cmp
imul
jo
push
shr
test
sbb
in
push
mov
lsl
mov
sub
lea
fcmovnu
test
adc
mov
lcall
mov
pusha
rolb
popa
adc
inc
popw
lods
call
xchg
cmpl
sub
push
jecxz
and
xchg
push
loopne
push
setno
scas
xchg
ret
xchg
ljmp
and
xor
popa
jecxz
stos
repz
xchg
add
pop
xor
xor
and
sbb
arpl
lds
jne
jo
mov
dec
mov
imul
xchg
inc
fcmovb
push
inc
push
ds
push
or
jmp
sbb
cmpsl
pop
push
out
loope
std
cmp
push
mov
enter
ja
pop
lds
or
rorb
add
dec
movsl
int
stc
mov
mov
rol
outsl
cmp
dec
ds
movsb
or
and
inc
ret
sub
dec
xlat
popl
xchg
ja
pop
int
xor
aam
push
pop
mov
push
pop
test
mov
jnp
or
js
jb
popf
push
or
fsubl
jb
sti
mov
xlat
add
scas
mov
movsb
xlat
pop
into
mov
popf
lret
mov
xor
fdiv
inc
sti
testl
xchg
sbb
pusha
sub
sbb
pop
in
dec
addl
xor
adc
cltd
jg
inc
daa
mov
mov
inc
xor
ss
cmp
sbb
shlb
lret
sbb
mov
xchg
daa
cmp
xor
and
xchg
notl
inc
icebp
lds
lock
jle,pt
adc
dec
mov
jnp
shrl
xchg
jns
dec
jb
mov
mov
pop
sbb
andb
aad
scas
jmp
cmp
out
or
xor
mov
xchg
js
cli
es
je
dec
out
ja
ret
adc
mov
shrb
or
xchg
xlat
in
shrb
adc
popf
or
jbe
movsb
aaa
xor
daa
lods
sub
mov
dec
repz
ja
les
jne
pop
pop
movsb
clc
xchg
outsb
mov
pop
lahf
dec
push
cmp
imul
mov
imul
sub
inc
in
pop
movb
fxch
push
test
shrb
scas
scas
push
lds
fdivrl
or
dec
mov
and
data16
push
sbb
ret
fidivrs
in
out
pop
jge
je
bound
ffree
cmp
jbe
fnsave
add
fmuls
cmp
mov
cmp
fistps
xor
cmp
out
cmpsb
cmc
sbb
dec
imul
cwtl
out
cwtl
fs
shr
xchg
sub
jb
pop
and
sbb
sub
mov
dec
sbb
cmp
hlt
jp
sbb
cli
sti
sahf
into
rolb
mov
cmp
add
test
xchg
push
dec
adc
sahf
xor
adc
loope
fisttpl
cmpsb
dec
sbb
sub
mov
and
mov
xlat
mov
jno
and
inc
bound
aaa
add
cwtl
push
inc
mov
push
insb
movsl
ret
add
cmp
cwtl
dec
xor
sub
cmp
mov
in
sti
mov
scas
jmp
test
and
jns
pop
adcl
movsl
mov
pop
pop
ljmp
out
mov
mov
and
jns
fsubrs
cs
fwait
aas
aam
add
sub
mov
repnz
mov
cmp
xchg
out
repnz
jle
add
daa
stc
dec
in
rorb
clc
data16
jnp
sbb
cmp
cld
mov
sub
push
adc
rcll
sub
rcl
test
lahf
es
mov
or
leave
ss
or
aaa
push
repz
lahf
mov
inc
and
call
call
mov
lock
adc
xchg
jbe
sub
inc
lods
add
xor
int3
xor
inc
fisttpl
sti
push
pop
mov
sub
ret
ljmp
xchg
push
sbb
int
int
push
in
cltd
std
inc
inc
stc
mov
sub
jb
rcrl
clc
outsl
in
pop
in
cmp
or
idiv
cmp
ds
xor
sbb
arpl
test
dec
mov
nop
jl
ja
fstpl
jnp
movsl
fwait
cmpsb
mov
inc
mov
dec
mov
and
jns
jle
push
mov
mov
dec
xor
dec
jo
scas
and
and
fsub
imul
mov
inc
mov
push
xchg
lods
jo
lret
push
lods
inc
icebp
and
cvtps2pd
xor
xchg
inc
popa
inc
sbb
pop
fnstsw
in
cltd
pop
cmp
mov
pop
scas
call
xchg
icebp
aaa
jae
fcompl
clc
sub
xchg
sbb
pusha
es
adc
ds
mov
aad
pop
xchg
jmp
pushf
sub
sub
or
dec
out
sarl
fbld
mov
push
sbb
sbb
mov
mov
mov
inc
std
data16
js
js
shll
subb
jmp
mov
jne
pop
mull
out
shrb
push
pop
or
scas
stos
push
xlat
insl
dec
fisubl
lods
mov
data16
jns
xchg
or
xor
lret
out
xchg
fwait
test
test
dec
shlb
jns
mov
inc
in
scas
scas
or
ja
int
leave
std
lea
xchg
dec
or
out
adc
push
jnp
inc
sahf
pop
and
mov
inc
vdivpd
sbb
imul
dec
jno
cwtl
insb
add
in
scas
push
fsub
fcmove
imul
xor
xor
xor
and
dec
cli
dec
xor
pop
and
mov
orb
sub
sbb
sarb
aam
das
sbb
or
cmpsb
loopne
inc
imul
gs
sub
sub
or
imul
xchg
out
out
mov
or
test
lret
and
mov
inc
push
leave
sahf
mov
xchg
inc
jae
repnz
push
addr16
xor
mov
sbb
cs
lahf
push
fwait
jae
icebp
insb
push
fxch
pop
push
jbe
and
adc
enter
push
add
and
shlb
idivb
sbb
leave
imul
or
imul
push
pop
mov
fmul
cmpsb
call
rol
mov
jno
pushf
jge
fisubs
and
ret
inc
aam
jns
imul
cmc
call
jecxz
xchg
and
cmc
and
dec
pop
sbb
stos
shrb
push
dec
sub
mov
add
arpl
xchg
push
add
dec
and
pushf
xchg
in
ret
icebp
das
pop
xor
cltd
jb
stos
ret
mov
loope
push
jno
lret
out
test
inc
out
addb
mov
and
xchg
cmp
sub
push
or
icebp
ret
push
dec
inc
jp
ud1
cmp
and
mov
lcall
andl
fnstsw
inc
int
pushf
mov
inc
sub
and
loope
test
sub
popf
lahf
xchg
cmp
cmp
dec
push
dec
xchg
pop
mov
movsb
aad
sbb
leave
outsb
dec
shl
push
decb
das
cltd
insl
repnz
adc
es
mov
jmp
int3
mov
lock
mov
xor
scas
sbb
lds
adc
push
jo
sti
es
pop
push
add
inc
sbb
mov
xor
mov
push
and
push
mov
mov
xchg
pushf
ss
ds
and
movsb
rcll
stos
sbb
addr16
add
push
xor
pop
mov
mov
xchg
sti
popa
fdivs
ja
or
push
cmp
xchg
flds
call
push
xlat
lock
dec
push
scas
std
or
push
cld
pop
mov
sub
in
mov
stos
inc
repnz
xchg
inc
es
mov
aad
out
xlat
lock
cvtps2pi
sub
nop
les
xor
pop
sbb
fldz
push
ja
fwait
mov
pop
mov
dec
xchg
pop
jnp
roll
sub
nop
sbb
clc
inc
sbb
fscale
mov
ja
dec
out
pop
leave
push
pop
into
loopne
mov
xchg
jge
mov
sub
jle
lds
hlt
sub
xchg
push
cltd
or
mov
pop
mov
or
icebp
jno
push
inc
mov
pop
fstpt
push
mov
cwtl
push
fcmovbe
or
pop
arpl
jbe
adc
cltd
sar
std
sbb
mov
lods
lret
ljmp
sbb
in
loopne
sub
aad
daa
fdivrl
jae
nop
test
lods
or
outsl
div
cmp
dec
mov
cmp
hlt
push
mov
mov
add
jl
jecxz
cmp
fcomps
or
mov
loopne
in
pop
aaa
cmp
jb
push
push
or
pop
add
sbb
jo
out
test
repz
sbb
xor
push
or
push
fcmovnu
inc
fs
or
hlt
aam
xor
mov
mov
lret
into
or
imul
stos
cs
xor
pop
pop
or
ret
add
ficoms
fiaddl
sbb
and
jg
xchg
xor
sub
cmp
int
mov
mov
test
lea
sarl
adc
sbb
pop
lret
sub
ss
outsl
xor
testl
dec
aad
test
jns
lods
out
adc
mov
push
mov
xor
cli
push
out
hlt
in
push
roll
lock
loopne
mov
jp
hlt
or
pop
jmp
jne
push
xor
orl
mov
push
aad
cmp
lret
scas
out
jno
in
stos
xchg
and
mov
xor
mov
mov
stos
mov
loopne
cmp
mov
sahf
arpl
andl
ss
lcall
mov
jmp
loop
shr
ficomps
jns
sarl
jp
shll
cmp
lcall
in
inc
ja
xlat
pop
mov
ds
push
cmc
cmp
push
and
pop
lods
mov
ret
pop
push
pop
pop
popf
leave
pop
cs
aaa
fbstp
pop
mov
xorl
ds
cmc
push
arpl
cmp
xchg
jne
push
pop
sbb
xchg
imul
jne
sbb
inc
fwait
addb
fcomps
cmpsb
imul
rcll
dec
push
int
adc
add
and
shll
out
insb
jecxz
or
and
and
adc
mov
cmpb
xlat
mov
cmpb
add
lds
sub
xchg
ja
ja
and
and
daa
lcall
mov
into
mov
mov
mov
jmp
mov
call
mov
lcall
aam
push
cwtl
aam
jecxz
cli
gs
sub
xchg
sbb
imul
lret
mov
loope
mov
int
jae
push
outsb
xor
leave
mov
jg
inc
out
sub
mov
test
testl
sub
inc
xchg
movsb
shlb
xchg
adc
scas
fisttps
sbb
sbb
gs
or
fbstp
inc
mov
lret
loop
xor
leave
sti
cmp
arpl
pop
out
lret
mov
pop
dec
pop
jle
ja
mov
fsubs
pop
in
shll
jno
mov
dec
dec
push
mov
jbe
mov
popf
outsb
inc
or
xchg
aaa
cmp
dec
enter
sahf
in
push
fsubrl
sbb
clc
add
sbb
mov
cmp
fisubrl
add
ret
push
call
mov
ja
fwait
xchg
sbb
cmpsb
xchg
faddp
fadd
push
pop
out
shll
lds
push
jb
push
push
adc
mov
inc
add
jb
movsl
sub
add
dec
and
sub
daa
jns
outsl
ja
adc
xor
into
adc
cmp
arpl
mov
mov
iret
inc
jmp
sub
sbb
lret
push
push
and
call
mov
push
xchg
cltd
jno
in
sub
popf
fistps
lods
icebp
pop
pop
js
pusha
add
mov
stos
clc
sbb
inc
hlt
cmpsl
inc
xor
mov
call
clc
jg,pt
frstor
sahf
js
xchg
cmp
into
sub
arpl
xor
fs
or
pop
sbb
out
adc
dec
jmp
add
testb
aad
cltd
or
insl
mov
idivb
mov
dec
out
test
sahf
dec
mov
push
xlat
dec
sub
xchg
pop
les
pushf
aas
sub
dec
addr16
mov
inc
jecxz
rclb
xor
mov
cwtl
mov
sahf
sub
inc
out
aam
mov
pop
mov
pusha
sbb
orl
sub
int
push
sti
std
xor
jg
inc
or
sub
dec
mov
adc
call
popf
movsb
pop
call
arpl
ud0
lret
das
sub
je
pop
aad
mov
sub
sbb
push
sti
je
icebp
xchg
cmpsb
test
pop
fadds
gs
xlat
and
pop
fiadds
xchg
insb
mov
mov
fstps
or
rcrb
mov
in
fnstenv
cmp
xor
mov
imul
cmp
fbstp
adc
inc
insb
and
jmp
push
lea
aaa
cli
movsl
outsl
inc
xchg
mov
mov
adcl
lds
adc
decb
test
sub
loopne
imul
pop
cmpsb
jae
xchg
stos
push
je
mov
leave
mov
push
repz
sub
shlb
xor
pop
sub
cmpsl
sbb
inc
or
testl
js
lea
xchg
pop
insl
dec
xlat
pop
lds
jge
or
pop
add
mov
xchg
mov
push
pop
jecxz
cs
jae
cmp
mov
push
outsl
xlat
or
jmp
fnstenv
push
out
jp
ljmp
cmp
cli
cmp
add
jmp
je
add
cmp
les
sti
imul
out
inc
mov
pop
in
push
test
pop
sub
ret
stc
movsl
out
sub
stos
dec
dec
pop
jno
jle
mov
xchg
into
loope
daa
je
std
idivl
jne
sub
push
es
cmp
or
or
pop
sub
int
or
xchg
xchg
push
xor
push
shlb
xorb
adc
xchg
pop
imul
adc
nop
sub
push
data16
cmovnp
jecxz
and
push
lea
call
in
jnp
mov
jbe,pt
sub
pushf
mov
insb
outsb
clc
into
addr16
mov
fidivrs
fwait
xor
pop
push
jecxz
cltd
push
sahf
or
xchg
jns
adc
inc
addr16
add
pusha
clc
and
cmpsl
push
lods
mov
dec
inc
mov
cmpsb
dec
mov
lcall
push
xor
add
int3
inc
xlat
stos
iret
cmpsb
sti
loop
jle
insl
and
add
mov
push
sub
in
mov
ret
idiv
jnp
js
icebp
aaa
ret
mov
sbb
fwait
ss
xchg
cmp
int
adc
int
adc
js
leave
or
pop
outsb
jb
sub
ret
adc
movb
xchg
dec
inc
mov
mov
pop
cmpsb
mov
pushf
in
fcmovnbe
std
ss
shll
or
fildl
roll
dec
ror
outsl
daa
shl
fdivs
mov
fwait
sub
jnp
ljmp
xchg
pop
push
inc
out
enter
sbb
fstpl
sbb
and
dec
lcall
xchg
mov
popf
mov
lret
in
push
sbb
popa
js
clc
sbb
xor
in
ret
push
pop
sahf
ljmp
mov
jo
xchg
sub
mov
test
mov
mov
les
ss
loopne
aad
div
adc
add
data16
xchg
mov
adc
repnz
fmuls
in
repz
fists
inc
loopne
cld
into
lret
scas
pop
cmp
inc
or
mov
jp
mov
xchg
adcb
aam
sarb
cmp
lcall
mov
dec
ds
add
rcr
jg
and
out
and
outsb
fidivl
fwait
push
or
daa
nop
cs
loope
lea
push
xchg
roll
cmp
aad
popa
sbb
lahf
mov
ss
pushf
sub
std
xor
dec
fs
inc
popf
xchg
add
outsl
mov
gs
jmp
or
shrb
dec
and
mov
addr16
loope
addr16
or
insl
jo
mov
cmpsl
cmpsb
sub
sub
daa
mov
int3
jp
mov
or
pop
or
pop
jnp
sub
repnz
sub
pop
xlat
enter
punpckhbw
je
outsl
push
or
push
pop
and
pushf
push
adcb
mov
into
xchg
jle
not
push
scas
push
lahf
jmp
popf
fwait
inc
test
pop
and
mov
sti
repz
in
sub
pop
mov
scas
cmp
fistps
xchg
add
fwait
xlat
shl
jo
pop
sub
rcrb
pop
push
inc
jbe
icebp
scas
jmp
out
jge
in
jg
enter
stos
loop
dec
faddp
das
mov
adc
dec
test
add
je
or
xchg
mov
lahf
ret
push
test
xchg
jecxz
sbb
mov
stos
sbb
xchg
pop
shll
gs
mov
int3
or
xchg
jns
jl
loop
pop
mov
sarb
jge
movsb
fistps
xor
inc
sbb
jbe
lret
es
pop
fwait
sysexit
xor
aaa
shlb
xchg
inc
pusha
dec
inc
mov
pxor
in
mov
mov
adc
add
mov
xchg
ds
stc
xchg
ja
adc
ja
jl
test
outsb
pop
push
jbe
jne
aas
cmp
pop
xchg
loopne
dec
adcl
add
adc
cmpsb
in
mov
mov
aad
in
mov
movsb
mov
pop
xchg
pop
add
mov
xor
sbb
in
xchg
js
mov
mov
bound
dec
scas
pushf
movsb
int
icebp
cmpsb
out
xchg
pop
into
dec
jl
fistpll
cmp
mov
ds
inc
popa
push
addl
or
mov
test
cmp
push
icebp
psubusb
or
push
push
cli
dec
jb
add
xchg
add
cmp
fiadds
loop
jnp
jg
in
add
lock
xlat
dec
shlb
mov
mov
adc
sbb
push
mov
subl
xlat
adc
scas
inc
lods
jno
mov
cltd
or
xchg
mov
fs
je
popa
cmpsl
in
test
xchg
push
cmp
sbb
cmp
xchg
mov
cmp
inc
pop
movsl
divl
mov
sbb
arpl
sti
les
int
pushl
or
jmp
mov
push
add
cltd
jl
repz
mov
setns
inc
mov
mov
xchg
adc
adc
loop
push
sar
mov
jne
ja
dec
sbb
scas
adc
fisubrs
dec
clc
mov
push
icebp
fs
adc
xchg
cmp
daa
pop
flds
mov
xchg
and
adc
add
daa
pop
mov
mov
inc
sbb
in
xchg
push
aad
sub
cli
xchg
ja
push
orl
jbe
pop
and
daa
and
push
dec
sahf
pop
push
in
dec
out
pshufw
fdiv
sbb
xchg
psubw
xchg
dec
iret
mov
push
movsl
xor
xchg
mov
dec
cmp
and
gs
cmp
mov
xor
bsr
cs
ret
and
inc
mov
addb
cmp
sbb
mov
sbb
cli
and
inc
add
sti
lret
lret
dec
adc
jae
popa
filds
xor
icebp
mov
xchg
lret
ret
push
jg
imul
cli
pusha
fwait
sub
fnsave
xchg
repz
mov
loope
rcrb
inc
jg
sub
lret
push
fldl
mov
andl
ds
pop
stos
ljmp
shufps
test
and
scas
mov
jbe
pushf
adc
cmc
pusha
stos
test
mov
xchg
cmp
mov
das
xor
fcoms
pop
arpl
sahf
lahf
adc
lret
add
and
cli
stos
repz
scas
push
orl
pop
jb
std
mov
push
hlt
push
add
ja
push
push
mov
jl
push
loop
rcrb
fimuls
jnp
xor
jl
or
mov
leave
pop
sub
jp
and
sbb
ficomps
sbbb
jl
scas
movsl
cmp
inc
jns
push
mov
in
or
sti
ja
xchg
xor
mov
mov
lcall
loop
and
jp
xlat
nop
sub
pop
test
mov
xchg
sahf
add
hlt
jg
xchg
pop
or
lea
add
leave
nop
test
in
add
pop
jne
icebp
xchg
shll
scas
sbb
cmc
in
into
xchg
fidivl
xor
in
in
pop
rorl
addl
imul
add
mov
andb
add
mov
sti
adcl
push
push
jecxz
sub
jb
into
mov
lcall
fisttpl
sbb
in
sti
fsts
adc
mov
push
or
cmp
cmp
cmpsl
xchg
push
icebp
cmc
mov
faddl
scas
inc
loop
inc
out
xor
clc
push
push
rcrb
adc
es
gs
push
test
dec
dec
jecxz
cmp
rcl
or
inc
jno
daa
or
mov
and
stos
and
xorb
orb
cli
push
push
movsb
jne
xchg
cltd
push
and
in
out
call
add
mov
popf
inc
orl
add
mov
push
fisubrl
xor
push
popf
les
mov
jecxz
mov
das
lret
adc
ret
xor
dec
sbb
stc
pushf
std
sub
jnp
hlt
imul
mov
lea
das
out
sub
aaa
mov
scas
arpl
push
push
cmp
lea
das
es
popa
pop
pop
dec
xchg
movsb
das
adc
lret
sub
mov
cmp
dec
mov
std
adc
xchg
jmp
and
cs
pushf
pop
inc
push
dec
ret
int
pushl
outsb
mov
jnp
test
or
mov
mov
pop
add
das
movsl
roll
push
push
in
into
outsb
out
adc
xchg
xlat
and
cmp
enter
adc
mov
dec
adc
stos
bound
or
xchg
testb
xchg
sbb
mov
inc
stos
add
xchg
inc
and
jg
add
daa
push
imul
mov
sub
pop
jns
jmp
movsl
and
mov
addr16
sbb
mov
mov
sub
arpl
aam
dec
push
cwtl
dec
mov
push
jo
push
lea
pop
or
jno
mov
das
dec
sbb
jns
cmp
aam
bound
add
cmp
scas
cltd
dec
dec
and
push
cmpsb
pop
call
aaa
dec
cmpsb
push
sbb
jecxz
es
mulb
push
idivl
dec
outsl
aam
xchg
ljmp
stc
sahf
push
cmp
insb
mov
push
lea
in
jl
ficoms
and
loopne
cwtl
xchg
addb
nop
data16
xchg
adc
fists
ror
jg
rcll
push
call
xchg
jmp
sub
stos
adc
add
sbb
es
or
cmp
addr16
dec
outsb
push
ss
call
cmp
fcoml
pop
imull
jnp
fldenv
add
pop
pop
test
fdivrl
aam
ret
xor
fisttpll
stc
lahf
sbb
sbb
aam
aam
mov
cmpsb
int3
xchg
shrl
push
popa
mov
jmp
dec
pushf
andl
jne
or
adc
pop
sarl
fbld
clc
andl
pop
dec
adc
stos
sbb
jb
ret
sub
cmc
inc
push
dec
ds
pop
jnp
mov
stc
loop
pop
mov
mov
pusha
inc
les
cmpsb
out
les
frstor
push
mov
jle
xchg
sub
pop
push
mov
jbe
xor
mov
inc
es
xchg
in
into
outsl
and
mov
test
pop
dec
pop
or
jns
mov
jnp
loop
ljmp
xchg
xor
mov
imul
test
aaa
in
sbb
push
sub
cmp
fiadds
cli
insl
imul
add
ljmp
adc
in
out
dec
test
arpl
mov
push
rcl
mov
cmp
lods
inc
movsb
lret
pop
mov
jl
out
xchg
mov
xchg
mov
shlb
int3
and
jb
fs
out
sahf
mov
xor
stos
and
loope
mov
movsb
lret
cmc
xchg
pop
mov
aaa
mov
into
cli
inc
mov
cmc
mov
mov
add
cmp
sub
aaa
adc
ja
xchg
iret
outsl
jge
mov
xchg
sbb
adc
pop
jno
pop
pop
dec
push
adc
xchg
pushf
mov
jl
dec
xorl
aam
xchg
test
pop
cmpsb
cwtl
rclb
jmp
sub
scas
cli
into
dec
jno
inc
and
into
aaa
inc
jnp
push
pop
cwtl
push
xor
dec
movsb
jl
mov
jns
cmpsl
mov
jne
mov
fldcw
sbbl
mov
addr16
js
sub
les
test
and
movaps
cwtl
enter
ret
mov
lret
mov
cmpb
or
xchg
hlt
sub
sbb
or
shrl
in
sbb
xor
dec
add
mov
push
mov
jae
inc
stos
out
stos
xor
dec
cmp
adc
jle
cmp
push
sbb
sub
dec
mov
dec
leave
insl
imul
movsl
adc
mov
inc
mov
sbb
jge
iret
mov
or
add
insl
daa
mov
bound
or
mov
test
inc
cmp
mov
mov
pop
push
mov
int
and
push
lds
je
or
enter
push
adc
pop
jno
imul
mov
push
in
push
xor
gs
lcall
incl
ret
xchg
jle
xor
call
ljmp
jbe
push
inc
sbb
jb
jmp
sbb
std
push
pop
jmp
cs
sahf
xor
fcmovbe
les
jb
adcb
sub
inc
daa
cmp
mov
ret
mov
les
stos
insl
inc
or
pop
je
jp
adc
insl
mov
xchg
and
jne
stc
jp
in
gs
dec
dec
jnp
das
pop
pop
lods
imul
xchg
cmp
add
jae
lds
mov
mov
insb
sti
xchg
inc
scas
mov
pop
mov
pop
aas
sbb
test
push
lahf
add
mov
xchg
xchg
test
jae
out
or
xchg
mov
idivb
nop
sti
sbb
mov
mov
push
mov
jo
fnsave
popf
xor
xchg
fbld
mov
movsl
test
jl
push
sbb
add
mov
roll
aas
xchg
or
fucomi
pop
mov
xor
test
fs
xchg
lods
test
adc
cmc
mov
jp
fdivrl
inc
fisubs
call
mov
mov
mov
test
rcll
mov
push
pop
loop
rclb
push
cmpsl
shrl
test
cmpsb
or
xchg
cs
pop
lds
and
shrl
shl
xchg
mov
or
pop
outsb
sbb
mov
sbb
jle
add
in
lea
and
enter
xchg
push
or
push
popa
mov
mov
fbld
cmp
pop
in
mov
or
push
add
in
push
out
dec
or
pop
scas
pop
pusha
xchg
pop
dec
xor
mov
test
into
test
pushf
lcall
jecxz
ds
xchg
icebp
test
cmp
add
jb
fildll
or
pusha
lds
popa
outsl
andb
loope
ljmp
mov
les
mov
and
adc
imul
in
and
mov
jnp
std
pop
dec
hlt
xchg
pop
pop
xchg
and
shl
pop
or
xchg
popa
idivl
inc
shl
xor
adc
inc
mov
movb
loopne
scas
inc
sar
rol
seto
iret
aam
ljmp
pusha
addb
mov
adc
btr
add
ljmp
or
mov
call
cli
dec
push
std
hlt
sbb
xor
enter
dec
jne
pusha
lcall
mov
cmc
add
sbb
pop
lahf
or
ss
cld
nop
subb
push
adc
call
xlat
repnz
xchg
jbe
insb
notl
xor
fildll
loop
mov
aam
push
ljmp
jb
jnp
push
push
repnz
inc
frstor
xchg
mov
sbb
mov
pop
xor
add
jbe
pop
and
inc
sub
pop
jne
xor
mov
insb
xor
push
xchg
fwait
sbb
in
addr16
in
and
push
popf
mov
pop
lcall
into
xchg
fidivrl
lahf
rdtsc
cmp
insb
jnp
push
jno
inc
mov
outsb
dec
and
daa
push
ret
inc
sbb
adc
movsb
pop
add
inc
lret
jp
fisttpl
sbb
fisubl
sub
xor
sub
std
stc
out
shrl
xor
sub
xchg
mov
xor
fisttpll
cmp
xor
out
stc
es
mov
add
pop
cs
popf
or
jb
addr16
adc
out
filds
mov
cmp
outsb
xchg
in
inc
mov
add
sbbl
dec
outsb
arpl
addr16
mov
fcmovnu
testb
inc
pop
inc
imul
jge
scas
daa
or
call
mov
xchg
and
pop
adc
push
lods
icebp
hlt
push
cmpsl
aas
mov
inc
cli
xor
sub
in
xchg
cltd
xchg
cmp
jb
das
adcb
sbb
int
mov
mov
push
cmc
arpl
jp
imul
mov
xor
fs
rol
mov
inc
nop
mov
in
movsb
bound
dec
add
std
mov
std
mov
outsb
jb
jb
mov
aad
imul
gs
loop
and
adc
mov
inc
mov
notrack
in
jae
adc
or
jne
mov
test
cmpsl
pop
mov
lret
mov
push
fwait
and
aaa
lahf
mov
xchg
add
jg
push
shlb
and
gs
jg
sbb
push
mov
sbbb
xor
jbe
mov
lcall
testb
jmp
sub
fdivp
mov
mov
scas
lret
in
or
jmp
sbb
mov
fisttpll
ss
out
dec
mov
jmp
loopne
movsl
fisubrl
pop
iret
sbb
rcll
pop
test
fisubrl
pop
int
pop
mov
mov
or
inc
add
jbe
and
cld
fmull
xchg
add
pop
xor
mov
inc
push
bound
push
push
ret
ret
sbb
aam
jo
adc
sub
push
les
gs
mov
xor
cmp
dec
or
adc
scas
arpl
popa
jecxz
mov
xchg
push
jno
fyl2x
leave
add
shll
jae
orb
and
mov
cwtl
and
pop
xchg
pushf
mov
xrelease
cmpsl
adc
cmc
dec
incb
mov
rcrb
gs
dec
lods
iret
fcmove
mov
cmp
dec
nop
push
fistpll
es
and
adc
ficoml
jnp
rclb
scas
pop
xchg
fldcw
lods
mov
inc
pusha
push
orb
cmpsl
imul
repz
je
int
in
add
pcmpgtw
pop
aas
or
andb
fs
mov
jl
sti
bound
xlat
cli
mov
jmp
repnz
pop
out
mov
jbe
pop
add
insb
lds
repz
inc
mov
xlat
jno
rorl
out
and
push
inc
xchg
jnp
inc
sbb
test
mov
lods
mov
mov
clc
stc
lret
subl
and
jecxz
push
in
es
pushf
cmp
dec
pop
incl
jno
and
mov
push
sub
inc
mov
ss
loop
pop
shlb
int
sbb
jno
push
and
call
mov
ret
nop
or
push
push
sbb
aaa
xor
lods
xchg
das
in
cmp
outsl
ds
popf
inc
adc
sbb
xchg
bsf
xchg
push
sbb
mov
xor
cmpb
js
scas
int3
cli
scas
inc
pushf
js
push
add
in
and
call
jno
pop
xchg
or
xchg
adcb
rcrl
pop
ja
repnz
movsb
jns
ljmp
iret
addb
aaa
inc
ja
int
test
adc
or
mov
js
sub
push
xorb
out
imul
adc
jg
repnz
dec
scas
stc
inc
mov
les
clc
mov
cld
shr
adc
cmpsl
orl
cmpsl
popf
push
fldt
int3
xchg
scas
xchg
jecxz
aas
in
int
faddp
push
xlat
inc
sbb
sbb
jmp
es
shll
movsb
stos
call
dec
or
leave
mov
fstpl
jmp
mov
jno
jp
or
into
cwtl
std
cmp
jmp
mov
push
push
cmp
in
push
dec
mov
jl
lock
add
pop
inc
mov
icebp
and
dec
sbb
aam
pop
xlat
shl
fwait
jne
les
daa
jp
jle
cmp
mov
popa
xchg
je
mov
add
loope
cmp
dec
cwtl
mov
mov
jl
push
jmp
cld
jecxz,pt
and
out
int
mov
test
xor
jne
sti
pop
mov
dec
jle
mov
mov
mov
out
xor
fsub
xor
lds
or
xor
das
sub
and
add
cmc
aaa
ja
stc
xchg
sbb
pop
inc
and
push
lock
imul
in
jb
mov
push
mov
cmpb
and
jecxz
fstpt
sbb
push
movsl
gs
stos
lock
ljmp
rcrl
dec
or
int
addl
clc
or
jns
mov
repnz
sub
cmp
scas
push
sbb
sbb
jmp
and
in
inc
jecxz
out
pop
pushf
pop
notb
xchg
lods
iret
sbb
outsb
fstp
sub
je
movsb
fxch
sub
bound
mov
in
jno
cmp
std
pusha
gs
je
ficoms
cmpsb
adc
das
popf
cmp
test
enter
je
xchg
or
sub
mov
push
out
cmp
addr16
ds
push
iret
mov
cmp
pop
pop
repnz
adcb
mov
xlat
pop
scas
inc
lret
es
mov
sbb
repz
pop
inc
push
dec
xor
inc
pop
scas
cmc
imul
push
and
dec
add
arpl
lea
push
mov
outsl
push
and
mov
aam
sub
sub
and
lods
push
add
inc
ds
addb
mov
adc
dec
fldlg2
test
mov
cmpsl
test
push
rcrb
mov
sbb
idivl
mov
out
jnp
pop
dec
popa
cwtl
call
and
pop
inc
add
mov
pop
outsl
cmp
cltd
sahf
iret
cmp
and
pop
cmp
mov
and
mov
push
jge
iret
loope
bnd
xor
stos
je
add
data16
insl
mov
rcll
ret
mov
cli
push
jae
mov
jb
test
adc
mov
sbb
mov
aam
xor
add
iret
subb
fwait
pop
xchg
add
cltd
into
mov
xlat
aad
outsl
pop
daa
mov
mov
pop
mov
and
enter
and
test
xchg
push
add
xchg
mov
in
rcll
add
mov
test
stc
test
cmp
mov
sbb
movswl
mov
fwait
adc
xchg
dec
mov
add
cltd
int3
iret
adc
xor
int3
mov
fs
pop
popf
or
and
mov
jmp
jnp
adc
int
xor
data16
add
cmpsb
mov
fucomip
nop
add
les
fadds
ljmp
pop
sbb
jmp
inc
pusha
decl
mov
mov
lods
jnp
lret
adc
jl
fcompl
addl
push
jp
ds
push
fwait
add
sbb
mov
dec
sbb
or
sub
pop
jp
push
out
and
jnp
dec
out
add
jb
imul
mov
jno
or
loope
cmp
aaa
jmp
out
jnp
mov
mov
push
out
int
aad
sbb
roll
icebp
jno
xchg
cmp
jmp
mov
gs
xchg
mov
fmull
mov
jb
adc
jle
test
cmp
out
push
fdivp
outsl
data16
or
jp
cmpsl
cmp
jne
mov
mov
lea
rcl
mov
loope
pop
loope
pop
arpl
inc
clc
in
imul
ficoml
inc
repz
fs
in
into
rcrl
mov
push
popf
mov
mov
pop
mov
add
daa
or
lods
cmc
adcl
stos
jge
stos
das
leave
repnz
mov
dec
inc
mov
xchg
pop
and
imul
scas
sub
xor
xchg
mov
sub
mov
addb
jb
mov
push
fistps
push
flds
cmp
cmp
inc
dec
loopne
test
mov
sti
jmp
ss
xchg
in
xor
insb
andl
mov
add
out
ret
in
std
xchg
and
push
mov
push
test
aad
pop
mov
sbb
push
or
mov
mov
push
xor
jge
int
shrb
scas
aaa
pop
cmc
sbb
ficompl
shrl
icebp
fstpl
or
push
mov
xchg
xchg
adc
mov
jbe
jle
imul
jecxz
jo
xchg
popf
arpl
insb
mov
mov
mov
lock
popa
xlat
pop
ja
test
or
jne
push
jl
dec
test
sahf
in
jp
test
ja
lcall
shrl
call
push
pusha
sbb
dec
int
xor
aad
sti
pop
stc
cli
add
jge
cwtl
sbb
pop
dec
mov
mov
xor
xor
ja
push
jns
test
dec
cmp
ss
lods
xchg
fwait
cmp
xlat
jnp
les
mov
scas
jo
jmp
fwait
adc
dec
or
cmp
jg
rcll
fidivl
mov
scas
call
popl
sub
fidivl
into
mov
lcall
mov
lahf
push
jb
test
push
or
in
or
jae
push
idivb
adc
stos
or
jne
sbb
call
fldcw
stos
mov
mov
ret
xor
xor
jae
dec
fisubs
and
test
shlb
jmp
cmp
or
popf
aas
pop
stos
adc
in
stos
rclb
inc
hlt
jle
enter
movl
jns
fdivrl
les
mov
int3
lret
add
fwait
std
jle
popa
cmc
lahf
add
lea
fnstenv
sti
scas
fmuls
int3
mov
jp
andb
lahf
mov
xlat
mov
shrl
jecxz
icebp
lahf
add
xchg
icebp
ss
rolb
in
sub
add
add
mov
mov
xchg
mov
dec
repnz
dec
es
jns
jecxz
adc
cld
movsl
jmp
adc
test
stc
xor
in
xchg
or
push
out
les
hlt
mov
add
xchg
andl
cs
stos
inc
mov
push
mov
cld
outsl
fidivl
jmp
xchg
inc
and
xor
call
mov
jae
bound
pop
mov
lods
jb
jbe
stos
sbb
stos
jns
mov
int3
insl
sbb
in
push
in
or
pop
cmp
xchg
in
xchg
mov
push
push
jmp
lahf
stos
sbb
or
xchg
dec
test
or
in
dec
inc
int3
sub
sbb
insl
in
mov
sub
xchg
cmpsb
xchg
cmpsb
insl
push
push
push
mull
cmp
imul
mov
mov
xlat
insb
add
jecxz
lock
imul
lea
sub
xor
loop
dec
sub
int3
xchg
cld
and
clc
push
mov
cmp
ret
mov
and
fdivp
jge
push
sbb
stc
push
dec
or
gs
mov
xor
jno
out
mov
cld
loop
cmp
pop
pop
fbstp
push
and
push
lcall
xor
popf
adc
fisttpl
out
push
mov
clc
and
mov
xlat
mov
and
push
data16
std
push
push
clc
shlb
cmp
loop
loop
fimull
idivb
aam
pushf
dec
add
inc
push
les
lahf
xchg
aas
xchg
xchg
in
and
cmp
sub
mov
repz
lret
pop
into
rcll
jb
jo
push
pusha
dec
stc
mov
adc
dec
call
mov
lds
stc
jns
rcll
addl
gs
cmp
addl
jbe
scas
mov
subb
push
insb
jge
dec
aad
or
lods
add
xlat
fsubrl
in
pop
cmp
xchg
inc
pop
sub
sti
dec
sbb
fnstcw
stc
les
inc
popa
faddp
in
xchg
cmp
rcrb
xor
cmpsl
in
and
or
stc
mov
std
ficompl
fucomi
cmpsl
add
xchg
sub
insb
fcomi
mov
sti
hlt
mov
push
mov
popa
test
mov
cwtl
call
push
sub
jno
xchg
nop
sub
aaa
dec
sbb
sbb
mov
fldl
mov
or
call
stc
cmc
mov
mov
sbb
sarb
fldenv
push
add
jmp
stos
xchg
leave
cltd
sub
mov
dec
or
pusha
sub
int3
fsubrp
mov
cmp
lea
test
int3
in
in
xorb
mov
dec
pusha
cld
fstps
fwait
vpaddsb
mov
scas
mov
in
inc
roll
cmpsl
shlb
mov
lods
dec
ret
imul
mov
jne
mov
ja
push
cmpsb
jg
in
fwait
push
in
mov
dec
cmc
xor
inc
inc
test
or
icebp
pop
sbb
loop
dec
lahf
pusha
mov
sbb
mov
sbb
dec
fdivr
aas
dec
jecxz
jb
push
mov
popf
cmpsl
sahf
repnz
cmp
or
mov
adc
mov
fs
or
and
cmp
sub
addb
pop
cmc
cmpsl
inc
cmp
dec
push
inc
das
dec
mov
mov
push
cmp
sub
lods
mov
stc
pop
xchg
add
cmp
mov
sti
lea
jl
add
fwait
pop
into
sub
ret
and
push
test
cmp
xchg
repnz
enter
bound
aaa
mov
dec
lods
jno
test
call
add
pop
loop
mov
push
inc
fwait
push
and
pop
dec
mov
in
xchg
scas
ret
sbb
movsl
fs
xchg
xor
sbb
jns
push
push
loopne
repz
std
or
repnz
xchg
pop
pop
push
loop
fs
inc
inc
sbb
xchg
or
jbe
scas
fcmovnb
sub
loopne
inc
cmp
inc
jno
pop
xchg
adc
push
or
push
sub
mov
pop
testl
xchg
adc
pop
mov
or
adcb
mov
xchg
repnz
or
nop
leave
xchg
sbb
inc
rorb
lret
jl
ficoms
dec
or
mulb
jle
mov
dec
adc
in
add
mov
xor
aad
jmp
test
cltd
mov
pop
idivl
pop
pop
push
enter
dec
ds
stc
mov
dec
cli
pop
xor
cld
dec
pop
imul
lahf
jmp
lock
clc
fs
lock
shr
mov
lcall
imul
inc
add
call
fstl
or
cmp
inc
cmc
fldl
push
test
fsubl
mov
push
aad
bound
bound
fldcw
jp
lds
sub
inc
sub
test
cmpsb
clc
pop
rcr
addb
mov
adc
mov
fsin
cwtl
add
xlat
or
mov
push
add
ljmp
imulb
and
xchg
stc
call
rol
jns
dec
insl
jge
test
lock
adc
insl
js
dec
fstps
loopne
inc
mov
out
push
pop
adc
hlt
ja
loopne
ja
pop
sbb
lahf
iret
mov
and
mov
pop
inc
hlt
ret
pop
scas
push
test
test
push
add
addr16
inc
mov
lock
mov
movsl
lret
rcr
loop
or
into
push
or
xchg
scas
pop
jg
test
pop
mov
popf
jp
call
push
push
xchg
loope
lods
mov
mov
sub
sub
dec
mov
aas
push
out
xchg
mov
aad
sbb
fnsave
and
int
lds
movsl
sbb
fwait
das
xlat
jge
inc
aas
fcoml
imul
mov
cld
jnp
lods
dec
and
insb
test
stc
add
fnstcw
mov
push
ja,pt
dec
add
aad
push
pop
xor
cmp
in
pop
xor
pop
adc
or
mov
scas
lret
sbb
in
loope
mov
push
inc
shrl
fmul
dec
imul
mov
mov
and
scas
insb
or
pop
adc
jle
xchg
lret
xchg
outsb
scas
rcr
inc
sub
add
lods
rcrl
cli
mov
or
addr16
leave
mov
test
insl
mov
inc
fidivs
mov
movl
mov
rcll
imul
sub
jp
ljmp
dec
aam
mov
adc
dec
arpl
push
addr16
sub
inc
xchg
sbb
les
lock
push
cwtl
mov
add
loopne
rorl
and
sarl
jnp
xchg
mov
jp
iret
xorl
lahf
jg
push
lods
idivb
xchg
es
push
mov
push
repz
int
imul
cmp
lock
bnd
dec
pusha
cmp
inc
jnp
outsb
aas
ret
push
lahf
int3
mov
cmpsb
adc
addb
push
out
loop
mov
inc
lcall
pop
out
jge
or
stc
clc
xorl
js
inc
mov
lret
push
call
aad
cmp
out
aas
xchg
in
push
mov
add
sub
sbb
pop
je
pop
inc
mov
mov
in
dec
lret
inc
aas
and
lret
into
stc
movb
std
xchg
ficoml
fwait
dec
sub
cli
inc
sub
mov
imull
xor
push
pop
les
xor
or
inc
inc
xor
scas
push
ds
xchg
mov
mov
xor
add
dec
mov
xchg
das
mov
daa
push
pop
cld
sub
xchg
pop
xchg
movl
inc
in
push
and
dec
bound
xchg
sub
andb
jo
fs
shl
imul
daa
ljmp
inc
xor
mov
clc
mov
jb
jg
jno
mov
fldt
js
outsl
sub
mov
jp
aas
cs
lock
call
dec
inc
sysret
inc
loop
cmp
jge
jmp
push
dec
jne
testb
fxtract
xchg
shrb
dec
xchg
sahf
xchg
fidivl
call
jp
sti
mov
sub
mov
fmuls
filds
cltd
ja
xchg
shlb
jp
mov
dec
fbld
gs
dec
mov
inc
fdivs
or
subb
jge
xor
pop
sub
gs
jmp
jmp
xor
loope
data16
and
aaa
je
dec
addr16
jp,pt
push
jmp
into
cmpl
jecxz
in
xor
sub
jl
in
or
and
sub
mov
lahf
pop
pop
mov
mov
adc
fucomp
lds
pop
scas
sub
cwtl
roll
into
sbb
xor
negb
repz
xor
or
add
idivb
mov
into
addb
jmp
push
iret
shrb
dec
xor
fimull
shlb
mov
and
xor
jp
dec
cmp
hlt
add
test
mov
adc
mov
fldenv
mov
mov
mov
pushf
mov
cwtl
es
xor
frndint
xchg
int
inc
or
or
shlb
stos
inc
sub
xchg
jae
mov
add
mov
push
sbb
mov
xchg
inc
inc
lea
lods
jns
push
push
popf
outsb
aam
mov
push
fnstsw
mov
jmp
int
enter
xchg
pop
add
ss
or
mov
or
das
or
in
adc
pop
xchg
scas
and
add
sar
mov
sbb
sbb
in
push
jp
mov
jae
jb
fisttpl
and
gs
insl
in
adc
cmpsb
fwait
loop
pop
outsb
mov
leave
testb
inc
mov
int
cmp
mov
fistpl
cmp
or
xlat
or
aam
loope
ds
fidivl
cmpsb
push
fcmovb
jle
dec
add
dec
stc
das
cmp
and
dec
pop
fldenv
sti
mov
fwait
jp
out
in
aaa
in
aaa
iret
cwtl
adc
clc
jp
mov
mov
aas
add
push
pop
mov
rcr
sub
int
in
jo
jb
in
adc
add
push
push
std
pop
cmovbe
add
popf
dec
outsl
popl
pop
xchg
jmp
push
imul
fcompl
imul
sarb
out
mov
out
or
sahf
xchg
jne
imul
ret
bound
movsb
aaa
vmovntps
dec
dec
adc
xchg
mov
mov
fistps
ss
sbb
mov
lcall
jge
movb
repz
jnp
ljmp
fistpl
imull
mov
fsubl
mov
das
mov
and
icebp
jae
dec
js
imul
inc
pop
xor
mov
adc
les
adc
int
bound
negl
dec
cltd
fcom
loopne
pop
ret
mov
mov
xor
into
push
lret
mov
loope
or
mov
movsb
xchg
cmpsl
das
mov
inc
into
inc
push
call
movsb
leave
mov
int3
stos
mov
lahf
lds
adc
mov
in
jno
in
or
cs
dec
fiadds
lods
lea
sbb
xor
pop
sub
fcomps
lcall
dec
dec
mov
rcrb
rcl
xchg
jl
roll
push
xchg
dec
int
sub
push
stos
jnp
pop
aam
rol
dec
sub
xor
pop
xchg
lods
stc
mov
hlt
orb
jp
xchg
mov
inc
push
das
push
mov
jecxz
js
stos
call
jge
mov
in
xor
loop
enter
nop
xchg
loope
ss
lret
jo
insb
jmp
push
sbb
lea
pop
pop
scas
and
lahf
fnstsw
sub
xchg
dec
popa
xchg
fiadds
jb
mov
add
jb
pop
fstl
or
fstl
ret
loop
mov
subl
and
nop
mov
or
stc
gs
aas
cltd
push
jle
loop
lea
add
cltd
inc
nop
sub
sub
xor
inc
in
sbb
cs
std
or
dec
mov
jne
inc
inc
enter
xchg
xchg
idivl
pushf
or
adc
inc
adc
out
pop
es
mov
leave
mov
mov
xor
push
pop
pop
mov
jge
jl
and
jo
or
lahf
pusha
aaa
inc
xor
repnz
mov
ljmp
cs
les
sub
and
iret
arpl
sbb
xchg
test
rcrb
and
pop
sbb
mov
subb
popa
addl
sti
mov
subl
imul
cmp
stc
xor
mov
outsb
and
inc
loop
in
xor
push
push
cmpsl
rcrl
nop
pushf
push
movsb
sbb
clc
mov
jnp
pop
insb
push
icebp
dec
mov
dec
dec
sbb
mov
cmpsl
or
enter
cld
jg
aam
mov
scas
adc
cwtl
xchg
push
movsb
fstl
fiaddl
mov
adc
dec
test
or
movsl
dec
pop
mov
inc
xor
es
out
fst
sbb
cmpsl
xchg
rolb
movsl
jnp
fisttps
push
adc
inc
sub
jecxz
jmp
jg
mov
mov
sbbb
popf
cwtl
jp
in
adcl
lds
fiaddl
lret
add
das
cmp
scas
lahf
es
or
sub
idivl
jbe
stos
fistps
jne
jecxz
xchg
mov
cmpl
jne
ret
mov
cmp
add
push
iret
xchg
ficoms
mov
pop
sub
in
mov
and
mov
pop
popf
cmpsl
outsb
lds
xor
pop
int
in
es
sbb
push
lock
push
popf
xor
dec
sbb
test
sbb
lret
xor
andl
loop
rorl
mulb
xchg
mov
sbb
xor
scas
inc
lahf
inc
add
std
inc
inc
sub
mov
dec
rol
in
cmpsb
fnsave
jae
ret
sub
mov
mov
push
imul
sbb
incl
add
jge
js
pop
insl
das
sub
push
inc
nop
fstp
dec
mov
test
xchg
stc
lret
shl
mov
add
inc
std
jb
or
inc
aad
xchg
lcall
sbb
aam
daa
mov
jo
shr
leave
adc
lcall
fistpll
addr16
fwait
inc
shll
outsl
mov
ss
pop
and
sbb
repz
pop
aaa
out
stc
dec
je
jo
std
incl
xchg
mov
adc
pushf
incl
pop
sbb
lcall
clc
in
dec
sarb
mov
sti
adc
addr16
jp
xchg
dec
xorb
inc
in
enter
push
add
inc
out
test
out
mov
stc
mov
add
jne
mov
test
jl
sub
scas
sub
sub
insb
xor
popf
leave
push
push
cwtl
jne
push
rorb
jecxz
clc
sub
sbb
xor
cltd
into
pushf
ljmp
jne
lods
pop
pop
sahf
pop
sahf
xchg
push
stos
cld
sub
lock
hlt
sub
fsubr
xlat
les
pop
mov
mov
mov
insl
dec
mov
inc
cmp
pop
mov
xchg
dec
cmp
xlat
loope
mov
and
mov
sub
add
sbb
std
xchg
jo
xchg
lahf
xlat
mov
imul
xchg
push
call
pop
cmpsl
icebp
add
xchg
push
imul
sub
push
push
mov
push
xchg
sbb
in
fs
mov
test
in
cmp
aaa
repnz
in
iret
imul
shrl
inc
mov
inc
add
fildll
call
daa
xchg
sub
push
jp
push
repz
pop
jne
in
push
test
jl
sbb
das
pusha
push
adc
shl
adc
enter
sahf
and
pause
pop
fcoml
pop
insl
mov
in
inc
fwait
adc
repz
pop
jbe
push
and
aam
lds
test
std
push
sahf
icebp
jmp
icebp
adc
testl
mov
ret
je
lret
sub
adc
ja
push
scas
push
inc
sub
mov
cmc
nop
sbb
pushf
dec
sarl
cld
sub
ja
fsubr
xchg
out
mulb
push
sub
xor
inc
fistpll
cli
xchg
push
sti
scas
push
push
cmc
iret
repnz
sar
loopne
mov
jnp
pop
mov
sub
sbb
add
sbb
popf
adc
mov
mov
lret
push
inc
stos
xchg
mov
mov
mov
fs
int3
notl
add
pop
pop
sbb
adc
lods
mov
in
movsl
rol
jp
push
pop
lods
sti
lea
mov
xlat
fcomps
push
sarb
stos
push
cmp
mov
push
xchg
pop
jge
lds
lea
ja
shlb
jne
lea
add
add
call
xor
add
pop
movsb
inc
mov
fstps
sbb
mov
dec
push
ret
add
pop
bound
sbb
sarl
rorb
jnp
outsb
arpl
dec
aad
mov
test
int
std
lock
push
sub
pop
jge
xor
popa
mov
mov
int
push
test
clc
dec
jne
xchg
in
sbb
lret
add
mov
add
mov
cmp
mov
sub
fsts
mov
cmpsb
inc
xlat
loope
mov
push
stc
std
sub
addr16
add
and
fnstsw
mov
rclb
mov
mov
gs
add
add
stos
cmc
or
jbe
sbb
mov
lret
mov
cmp
mov
mov
mov
and
or
lods
mov
mov
mov
jp
lock
imul
shl
fwait
xchg
mov
aad
mov
jp
mov
sbb
xchg
add
mov
mov
frstor
mov
cmp
dec
jb
inc
mov
loope
ficompl
xorb
push
insb
lds
lock
xor
push
movsl
add
push
mov
fldt
xchg
xchg
jno
icebp
movsl
fsubrl
daa
rcrb
xor
mov
rolb
call
mov
daa
and
push
or
cmpl
je
bound
aas
cmp
loopne
sbb
cwtl
cmp
es
or
sub
cmpsb
push
mov
imul
imul
mov
loopne
out
mov
or
test
daa
dec
pusha
sbb
push
insb
jmp
dec
shlb
std
enter
push
jl
xlat
pop
sub
aad
inc
xor
mov
test
pop
gs
shrb
push
mov
shlb
mov
aas
repnz
dec
test
pop
sub
push
ffree
xlat
adc
mov
mov
mov
pop
or
mov
rolb
ret
test
repnz
and
adcl
movsl
daa
leave
mov
in
jnp
sub
push
mov
fucomip
mov
xor
mov
jmp
stc
adc
ret
es
cmp
sub
addr16
xor
test
pop
inc
nop
sub
xor
xor
pop
and
mov
jle
mov
dec
xor
push
mov
mov
and
or
or
inc
daa
cli
dec
inc
out
mov
inc
and
test
hlt
stc
jbe
cld
mov
xchg
pusha
push
fldt
xchg
mov
xor
daa
pop
call
lret
mov
shr
lahf
in
sbbb
cld
pop
xlat
jbe
push
sbb
std
enter
mov
or
xchg
push
dec
adc
mov
dec
aas
test
call
andb
push
push
fs
sub
and
and
sbb
cmp
mov
mov
mov
fidivl
adc
mov
add
fisttpl
inc
cmp
aad
es
ret
mov
cmc
call
jmp
xchg
push
mov
mov
add
ja
mov
icebp
aad
rol
mov
scas
mov
xor
scas
cmp
or
aam
xor
hlt
imul
sub
ja
sbb
xchg
fchs
jmp
add
mov
enter
cmp
sub
shl
call
ficompl
cld
mov
psubb
xlat
das
cs
rep
int
xor
push
cltd
adc
sub
inc
mov
dec
mov
adc
jne
test
adc
xchg
decb
jge
mov
frstor
pop
inc
sub
loope
jnp
cld
adc
int3
lods
sbb
pop
std
add
jmp
inc
daa
push
lahf
mov
and
push
aam
lret
das
pop
icebp
jl
outsl
lahf
int
mov
popa
hlt
mov
adc
fsubs
adc
jp
pop
mov
mov
jmp
adc
add
notb
dec
xchg
sub
mov
cmp
pop
rolb
push
lods
sub
ja
cmpsb
pop
scas
add
mov
lea
xchg
aaa
mov
adc
sub
pop
lock
pop
lods
cmpsl
std
add
xlat
push
dec
ss
sub
sbb
cltd
mov
mov
mov
loope
pop
push
mov
lret
xor
mov
xchg
jo
or
jae
inc
lock
mov
gs
mov
lods
sbb
inc
iret
scas
and
push
imul
dec
inc
sbb
sub
pop
clc
sahf
nop
hlt
inc
jmp
fisttps
jmp
ror
mov
in
add
jo
sub
mov
pop
fildl
int3
cmp
imul
mov
adc
nop
mov
call
stc
cld
sbb
mov
dec
in
xor
mull
or
clc
or
sub
fdivrl
push
xchg
negb
aad
push
and
or
push
inc
lahf
stos
scas
adc
insb
push
lods
cmp
mov
clc
xor
repnz
js
jecxz
jae
std
pop
into
xor
adc
mov
orb
stc
dec
mov
ss
notl
test
daa
lret
inc
mov
mov
jae
jp
cld
sti
xchg
mov
xor
push
pop
ljmp
fdivrl
rolb
jl
pop
lret
push
adc
and
stc
and
pusha
jg
adc
sti
ljmp
pop
dec
cltd
add
mov
lret
in
adc
popf
sub
push
gs
sub
sarb
add
sahf
add
pop
or
daa
negl
xor
jne
pop
aaa
push
cmp
cmp
ret
fldenvs
lahf
dec
adc
mov
fisttps
jne
mov
pop
xor
or
stos
push
insl
mov
lods
xorl
adc
jle
pop
sbb
push
sbb
push
jbe
in
xor
shll
fidivs
mov
hlt
mov
inc
shlb
cs
fwait
stos
adc
xchg
arpl
cs
imul
add
or
rcr
xor
mov
mov
ret
mov
cmp
fildll
inc
sti
shll
push
imul
pop
xor
mov
lcall
add
or
data16
in
stos
add
jg
xor
hlt
fyl2x
shl
insl
mov
push
xor
sti
cwtl
fcmove
mov
or
jg
xlat
cs
hlt
jecxz
movsl
xlat
push
cmp
jns
push
mov
loop
mov
lods
popa
mov
out
callw
cmc
out
out
ss
div
sbb
fwait
dec
repz
inc
popl
lock
bound
int
pop
or
or
lock
xlat
inc
sbb
aad
xchg
test
shrl
inc
lods
mov
fldcw
shll
addb
clc
mov
mov
ficomps
sub
jno
xchg
das
add
or
sbb
mov
jecxz
aad
xchg
mov
call
cld
or
loopne
mov
ss
add
sbb
sbb
call
sub
xor
lea
lods
jns
inc
lret
je
test
jp
sub
fbstp
cwtl
jnp
pop
addl
or
inc
inc
mov
fadds
add
dec
movsl
scas
stos
jl
sbb
cmp
icebp
nop
sbb
jnp
lea
mov
mov
push
pop
sub
rcrb
mov
sbb
mov
shll
jae
mov
inc
loop
sub
dec
cmp
jns
arpl
out
inc
scas
stos
jmp
std
sub
push
mov
pop
sti
pop
in
fildll
pusha
xchg
popl
dec
insl
lahf
test
scas
mov
mov
cmc
xchg
sbb
inc
loopne
adc
mov
mov
fiaddl
shlb
outsb
dec
out
ja
sti
js
push
lret
lods
cs
movsb
pop
scas
or
lods
orl
outsl
popf
xor
cmp
pusha
mov
adc
mov
mov
mov
std
mov
sub
sub
std
jae
fsubl
adc
xor
out
faddl
mov
nop
les
scas
leave
roll
push
sub
andb
jmp
dec
cmpsb
bound
int3
sbb
arpl
sub
pop
shll
cwtl
out
inc
in
int
cli
in
outsb
mov
dec
invlpg
push
fisttpll
xchg
sub
mov
pop
aas
add
movsb
das
sbb
add
lods
lret
sbb
fbld
pop
or
inc
mov
mov
inc
fists
daa
inc
scas
in
ja
es
outsb
lret
pop
push
movsl
pop
add
mov
sbb
call
loope
mov
pop
dec
adc
faddl
mov
dec
cmp
or
add
and
xor
mov
test
xor
adc
and
leave
mov
jp
dec
inc
into
mov
or
pop
and
sbb
mov
pusha
jge
or
rolb
mov
fisubl
sub
and
push
mov
xor
xchg
int3
jne
xlat
push
jb
sub
or
sub
add
insb
in
aam
push
cmp
xchg
mov
in
or
inc
push
dec
mov
cmpl
cwtl
sar
punpcklwd
movsl
or
andl
inc
mov
cs
inc
mov
cmc
into
dec
add
xchg
dec
enter
xchg
leave
inc
inc
sbb
push
sbb
jl
insb
or
or
add
in
mov
jo
stc
mov
sbb
cmp
std
adc
xchg
xchg
jo
stos
mov
fldl
hlt
jg
ret
in
dec
adc
add
cwtl
stos
mov
mov
push
clc
pop
push
js
mov
popa
imul
ret
pop
cmp
mov
jg
call
inc
lea
nop
dec
xor
and
xor
adc
or
add
loop
es
fs
ss
je
sar
pop
cmc
mov
ror
mov
add
shrb
test
repz
adc
inc
lods
push
shrb
fnstsw
adc
add
lock
or
mov
xor
sbb
push
xchg
je
pop
jno
cmp
in
ds
popf
aas
movsl
js
cmp
dec
aas
xor
mov
mov
shlb
lcall
rcll
adc
xchg
outsl
ds
imul
add
cmp
aam
popf
jge
jge
mov
jne
call
lcall
jmp
aas
pop
xorb
mov
pop
fcompl
push
ljmp
cwtl
in
cmp
out
push
out
hlt
notb
jne
addr16
lcall
mov
push
lahf
inc
sbb
jg
sbb
lcall
mov
jae
sbb
add
scas
push
mov
mov
rorb
sbb
insb
pop
cmpsb
scas
add
aaa
pop
enter
push
cmpsb
fldl
jne
jge
inc
pop
xor
mov
push
fiadds
mov
jae
daa
les
loopne
cmpsl
adc
cmp
loopew
sbb
mov
out
or
pop
or
add
pop
std
jle
addb
sbb
dec
jbe
xlat
adc
push
nop
inc
sub
mov
das
sahf
ret
scas
imul
jbe
aad
fistps
in
fmuls
or
jmp
push
mov
sbb
sub
mov
movsb
in
lahf
xchg
mov
addr16
int3
fwait
cmp
sti
adc
sbb
call
mov
outsl
cmpsl
xchg
pop
cld
sbb
push
lods
scas
mov
sub
outsl
test
push
cmpsb
pop
stc
lret
call
sti
dec
dec
mov
mov
mov
lret
mov
js
addr16
js
addr16
fcoml
adc
pushf
jnp
inc
sub
clc
out
push
add
sbb
out
jbe
pmulhuw
pop
into
call
std
test
mov
sub
lds
mov
clc
xchg
push
paddusb
push
jbe
enter
nop
leave
fsubl
sahf
subb
adc
ret
push
mov
out
shlb
push
xchg
jno
jp
or
lahf
jmp
mov
jnp
mov
sbb
lods
xchg
xchg
mov
rorl
add
les
dec
cmc
xchg
mov
add
sbb
roll
stos
jb
fnstcw
xchg
mov
insl
add
insl
cmp
or
cld
leave
mov
aam
cld
mov
bound
sub
push
pop
push
add
pop
xor
sbb
repnz
loop
js
popf
add
fimull
mov
test
sbb
sbb
mov
pop
into
push
xor
jl
and
dec
popf
mov
jle
test
mov
iret
movsl
or
adc
and
dec
lret
mov
dec
jne
mov
cwtl
stos
fcmove
rcrl
mov
aas
mov
cmp
js
or
pop
mov
scas
lea
add
pop
ljmp
movsb
dec
fadds
mov
xor
jle
xchg
subl
loopne
pop
aam
aaa
lds
pop
clc
imul
mov
decb
scas
pop
mov
xchg
inc
into
in
push
or
xchg
subb
adc
push
sub
pusha
ds
cs
sub
mov
cmp
or
jbe
test
jne
sub
call
push
outsl
sbb
outsl
insl
leave
lret
inc
test
cmp
ljmp
cmpsl
mov
jle
aaa
pop
sbb
inc
nop
pop
and
addl
or
subl
mov
push
das
push
push
xlat
sarb
mov
jbe
cld
xchg
adc
xchg
sbb
decl
jge
jne
addl
push
mov
aam
or
mov
mov
mov
aaa
aam
hlt
mov
and
sbb
lods
push
insl
jle
inc
fcomp
aad
cwtl
aad
enter
test
adc
fwait
stos
inc
notl
test
out
jnp
pushf
sahf
pushl
aam
jnp
imul
inc
dec
cmc
std
int3
pusha
cmp
mov
push
adc
cs
inc
cmc
cmp
inc
and
fcmovnb
pop
hlt
inc
mov
dec
and
push
out
outsl
xchg
mov
testl
push
arpl
gs
push
pop
fisttpll
out
testl
lahf
sub
sbb
je
sti
pop
mov
out
fdivrl
shll
and
mov
mov
adc
jnp
cld
xchg
cmp
and
stos
rorb
pop
inc
ds
inc
call
mov
cld
xor
ds
or
push
filds
scas
cmp
mov
pop
or
and
jae
pop
sub
in
sahf
and
xlat
cmp
and
and
pusha
repz
movsl
cwtl
bound
fisttpl
icebp
cmp
push
nop
pop
icebp
or
adc
xor
mov
push
pop
fxtract
cmpsl
jne
and
xchg
jg
push
jg
das
cmp
jb
int3
sbb
dec
in
pop
adc
pop
repz
sub
nop
inc
test
jge
mov
subl
adc
or
pusha
pop
out
orl
mov
add
js
or
fsubp
or
dec
imul
add
mov
cmpsb
adc
dec
ljmp
icebp
hlt
xor
sbb
push
cmp
rorb
popf
lods
xchg
or
sbb
mov
cmp
dec
push
movsb
movsb
lods
test
or
mov
ss
dec
xchg
div
pop
std
sbb
fadd
dec
mov
in
arpl
sub
cs
jle
inc
dec
sbb
into
jle
dec
inc
push
pop
test
mov
cmc
push
cmp
jp
mov
leave
shll
cwtl
xor
fs
xchg
inc
das
push
xor
jno
and
sub
lock
mov
bound
jo
adc
dec
testb
sbb
cmp
add
ljmp
push
inc
lods
shrl
mov
aad
mov
pop
stos
imul
addr16
out
leave
add
stos
icebp
mulb
cwtl
dec
add
daa
cld
aas
dec
out
fs
adc
pop
repz
cmc
push
aaa
cwtl
mov
imul
inc
push
ss
mov
mov
pop
or
push
sbb
es
sbb
push
pop
or
jbe
pusha
sub
aaa
or
pop
mov
jp
mov
lcall
push
shll
jae
push
cmp
repnz
loop
pop
loope
lods
fimull
sbb
push
jl
pop
inc
mov
call
jae
jo
stos
scas
repz
sahf
stos
stc
or
frstor
jno
mov
dec
and
lea
mov
shrb
fdivrl
fsubrl
arpl
mov
fdivrl
xor
sbbb
stos
in
int3
leave
xor
xor
xchg
inc
pop
sub
sbbb
imul
push
mov
sbb
into
add
movsl
cmp
out
mov
lods
rcl
mov
xchg
faddl
popf
jge
or
repnz
pop
xchg
inc
out
addb
xchg
xchg
ret
std
add
xor
ja
ja
mov
push
cmp
push
mov
dec
add
push
in
mov
inc
sbb
mov
jp
fs
outsl
fcomps
xchg
cmp
add
hlt
and
hlt
push
xor
daa
sub
imul
cmp
adcb
pop
cmpb
enter
sbb
xor
in
sahf
popf
add
out
pop
sbb
aam
ret
fidivs
mov
or
mov
adc
in
or
dec
push
orl
xchg
or
aaa
xor
dec
xor
js
out
ljmp
lea
iret
in
and
int
adc
and
clc
shrl
and
add
gs
jl
imul
repz
add
pushf
bound
sub
mov
ja
sbb
jae
ret
stos
mov
sub
outsb
js
stos
sbb
xchg
inc
subl
sub
xchg
xchg
dec
les
dec
and
outsb
and
aam
stos
jno
mov
add
lods
sub
inc
mov
push
lcall
cwtl
xchg
inc
out
notb
lret
push
dec
push
add
mov
jns
repnz
popf
das
xlat
and
jg
and
cmp
flds
jmp
clc
and
je
xor
push
rcll
sub
cmp
rcrl
and
clc
stos
ficompl
cmpsb
or
pop
and
insb
push
sub
pushf
iret
cmp
sbb
in
popa
xchg
test
and
hlt
pop
or
mov
sub
scas
cmp
jp
xchg
lods
jmp
xlat
cmp
aas
inc
push
mov
sub
mov
mov
cmp
jge
rorl
mov
mov
in
movsb
out
sbb
lods
std
inc
rorl
xchg
mov
mov
push
sti
mov
xor
or
cld
in
imul
sbb
mov
pop
das
popf
mov
inc
mov
and
mov
int3
mov
frstor
sbb
cmp
xchg
sbb
jne
xchg
cmp
daa
or
sti
enter
adc
mov
insl
int
xchg
test
imul
pushl
mov
stos
addl
sub
jecxz
or
fisttps
cmp
pop
mov
fsubp
jns
push
mov
ja
pusha
aam
and
int3
adc
addr16
mov
outsl
jle
mov
or
leave
repz
scas
adc
mov
add
jae
jge
outsl
push
testl
loop
inc
cmpsl
mov
cmp
push
add
cld
hlt
or
pop
and
push
cmp
push
xor
fists
or
fwait
clc
cmp
arpl
xchg
cmp
jge
ljmp
ds
out
pop
call
jns
xor
cld
sub
inc
mov
jp
sbb
jne
mov
xchg
popa
sbb
data16
out
push
adc
inc
mov
enter
mov
pop
daa
push
adc
inc
out
je
jmp
dec
loope
jns
add
dec
loop
filds
xor
mov
sbbl
mov
jg
mov
cmpl
pop
pop
int3
je
dec
pop
adc
out
mov
test
out
nop
or
adc
loope
jmp
mov
out
leave
mov
push
xor
cmp
out
ret
lret
mov
fsubs
cld
push
mov
enter
xor
clc
mov
adc
push
rolb
test
xchg
mov
and
ret
test
enter
mov
cmp
fmull
cmp
into
movsl
or
fcoml
lret
push
je
in
ret
insb
call
inc
jg
jne
inc
mov
xchg
mov
test
inc
pop
in
dec
xor
push
fiadds
pop
fdivrl
sahf
or
cmc
shlb
jl
aam
inc
dec
stc
add
sti
or
push
jecxz
insb
fs
in
test
aas
adc
push
test
aam
movsb
out
mov
pop
push
dec
dec
testl
pop
xor
and
xchg
pop
push
icebp
loop
movl
loope
arpl
btc
push
jb
sbb
int3
mov
mov
adc
or
sbb
subl
cli
sti
fimull
pop
fwait
mov
roll
add
inc
outsl
int
popf
out
adc
sbb
xor
call
cmpsb
loope
dec
pop
pop
scas
subb
xor
mov
stos
push
or
mov
jne
test
pop
and
cs
lea
ficoml
fucomip
in
add
mov
je
inc
leave
insl
loopne
xchg
mov
inc
jmp
add
mov
push
and
jae
test
xor
mov
adc
jno
repz
jecxz
in
out
push
addr16
aam
adc
cmp
pop
push
pop
out
mov
icebp
fnstcw
sbb
out
xchg
lock
cmpsb
rorl
sbb
or
negb
sbb
rcll
sub
mov
out
push
negl
pop
pop
mov
inc
adc
test
jp
sbb
fstpl
add
xor
fsubl
xchg
mov
pop
loop
jne
adc
push
fs
pop
pop
pusha
adc
mov
jno
mov
adc
pop
adc
mov
cmp
mov
insl
test
out
imul
shl
mov
xchg
rorb
and
dec
pop
or
jnp
scas
ror
cwtl
adc
adc
lret
stc
stos
sbb
jmp
movsl
xchg
push
ljmpw
or
jge
push
jmp
jo
in
jl
sbb
xor
mov
stc
incl
mov
jge
sub
mov
sbb
sarl
lock
arpl
and
testb
pop
dec
pop
pop
pop
out
xchg
jl
push
mov
lret
push
push
mov
or
mov
cwtl
pop
pop
pop
imul
in
outsl
icebp
int3
or
jns
jmp
fadds
fisttps
div
setae
cltd
lahf
pop
aad
add
loope
jge
ljmp
pop
je
lods
imulb
faddl
outsl
and
mov
sub
or
cmp
xor
and
sbb
inc
mov
clc
add
inc
and
jp
or
data16
add
add
add
dec
mov
int3
pop
or
fnstsw
mov
add
orl
in
xor
or
inc
fists
paddusb
sbb
mov
add
lcall
imul
cmpsl
fidivrl
sti
mov
mov
imull
jo
push
fwait
jnp
test
xor
fwait
xchg
outsb
sub
leave
cmp
xor
pop
imul
add
mov
xchg
pop
sahf
push
push
sub
loopne
js
pop
enter
push
jae
jle
jns
leave
sahf
sub
pop
cmp
out
mov
pushf
push
pop
sti
xor
inc
out
hlt
imul
lods
leave
jg
sahf
jne
jb
inc
mov
sbbl
sub
push
mov
movsb
ja
lahf
cli
pop
in
jle
adc
popf
sbb
mov
or
cmp
loope
add
push
and
aad
pushf
mov
ljmp
repz
out
mov
inc
sbb
lods
mov
jnp
mov
cmp
fadds
cld
icebp
movsl
je
lods
sub
lock
movsl
roll
iret
pop
inc
into
sahf
cld
mov
push
lods
sbb
hlt
jp
jno
testb
lock
jb
adc
xchg
mov
aas
sbb
sti
bound
push
ret
pushf
mov
stos
or
sub
dec
call
negb
cli
mov
xchg
mov
xchg
in
jg
sbb
dec
mov
int
shlb
mov
into
sbb
cmp
and
movsb
push
pop
dec
xchg
xchg
in
jno
pop
inc
jae
push
mov
rcrb
out
mov
xorl
clc
sub
cmp
and
dec
sbb
pop
test
dec
lds
shrb
pop
inc
sbb
dec
jg
xchg
lods
sub
pop
mov
cmpsb
repnz
mov
mov
daa
imul
cmp
sbb
loope
xchg
xchg
lods
and
push
call
loopne
cs
inc
push
inc
push
sti
jle
insl
adc
stos
test
jbe
and
push
cmpsl
fists
xchg
lret
addr16
scas
push
xchg
xchg
out
dec
dec
out
push
adc
push
rcrb
xchg
dec
push
xor
mov
xor
cli
and
loope
add
mov
xchg
pop
lock
leave
mov
pushf
push
sub
ret
push
shr
mov
ret
and
sahf
xchg
cmp
xlat
rolb
out
inc
xchg
mov
clc
ljmp
xchg
sub
sub
test
movsb
jb
cltd
push
ficoms
inc
nop
jp
inc
jae
jecxz
lods
add
pop
sbb
imull
push
sbbb
in
test
jbe
cmp
mov
stos
lods
loopne
in
lahf
insb
ss
push
mov
sub
sub
pop
or
dec
mov
movsb
aas
mov
mov
push
cli
loopne
idiv
out
dec
xor
jle
mov
mov
outsb
mov
scas
jl
je
jecxz
cmpb
clc
aaa
xlat
movsb
out
pop
leave
mov
inc
fdivl
dec
fstl
mov
daa
mov
mov
sub
jmp
push
imul
arpl
dec
pop
addr16
push
add
cs
cli
fcoms
and
cmc
pop
xor
aad
hlt
ss
mov
fidivl
loop
fistps
jg
sub
mov
ja
divb
jl
ds
clc
and
mov
nop
adc
lds
xchg
mov
jbe
jmp
leave
test
fdivl
dec
push
or
mov
hlt
hlt
adc
nop
dec
or
shl
notb
ss
sub
or
bound
pop
adc
rcr
mov
jo
mov
fucomp
sub
mov
stos
xchg
shlb
jmp
xchg
mov
clc
jbe
movsb
mov
lret
pop
gs
xor
sbb
xchg
jle
iret
out
out
sbb
and
cwtl
xor
pusha
jg
cwtl
mov
pop
lret
in
pop
xor
lods
test
mov
dec
repz
adc
add
lea
and
divb
imul
int
bnd
sub
pusha
mov
jnp
and
pop
xchg
add
pop
into
mov
rol
sub
push
sbb
outsb
dec
xor
push
mov
insl
cwtl
add
jbe
popf
in
ret
ds
loope
xchg
cmp
mov
jnp
adc
mov
shrb
adc
outsb
pextrw
lea
dec
out
fmulp
pop
lcall
xchg
ret
mov
xlat
repz
push
jmp
pushl
inc
dec
popa
sub
cmc
sbb
in
dec
movsb
shl
mov
pushf
add
imul
pop
popf
jno
mov
and
mov
inc
mov
cld
lcall
in
cmp
dec
leave
in
sub
jae,pt
out
fldt
aad
and
and
mov
xchg
push
and
lock
add
popf
cwtl
and
dec
push
mov
adc
or
sbb
ss
mov
add
outsl
xchg
dec
push
pushf
lahf
ja
mov
pop
xchg
jno
jns
orl
das
and
roll
je
sub
outsl
sub
hlt
lods
jmp
cld
sbb
stos
pop
pop
or
sbb
push
aad
jmp
les
fucom
mov
stc
cmp
std
daa
lcall
repnz
fdivrs
movsl
jecxz
sub
mov
cmpsb
repz
adc
test
cmp
or
mov
push
sbb
outsl
out
movsl
jb
adc
cmc
clc
jbe
push
mov
lret
or
mov
pusha
jp
cmp
inc
adc
jle
sub
icebp
lret
fimuls
push
xchg
loopne
js
mov
cmp
add
dec
dec
das
icebp
jp
pop
sub
and
scas
add
js
adcb
jo
jmp
ret
jle
add
mov
fwait
mov
aam
dec
pop
lcall
pop
int3
lods
lcall
adc
lock
nop
testl
fbstp
movsb
or
shll
mov
fsubl
xor
or
rcrb
add
imul
icebp
lret
adc
int
push
mov
insb
mov
or
arpl
aam
add
cmp
fbld
inc
sbb
sub
push
imul
cmp
sbb
sbb
sub
sub
cltd
or
or
ja
mov
and
pop
test
and
pop
xchg
sub
pop
aaa
mov
icebp
in
lret
mov
push
xchg
pop
cli
pop
add
mov
aaa
xchg
in
and
inc
inc
jae
hlt
xchg
mov
push
push
pushf
jno
gs
idivl
adc
gs
xchg
mov
pop
pushf
xchg
shll
notb
insb
sub
xchg
sbb
push
mov
inc
test
lods
mov
xchg
push
hlt
cmp
and
jecxz
mov
dec
subl
in
je
hlt
negb
push
or
out
loop
pop
inc
add
das
lds
push
inc
out
mov
mov
xchg
enter
sub
fisttpl
dec
in
popa
mov
icebp
cmp
pop
repnz
or
mov
cmovbe
ficompl
adc
clc
call
sbb
rcll
arpl
call
pop
xchg
sub
push
sub
scas
leave
into
or
mov
out
push
pop
add
ja
sbb
shrb
adc
aas
mov
int
sahf
mov
in
cwtl
cs
sub
xchg
adc
pop
cmp
ss
jns
addr16
cmp
and
mov
fs
xchg
inc
and
sbb
repz
push
xor
adc
push
sbb
mov
jle
cmc
xchg
iret
into
xor
test
jne
inc
sarl
adc
cmpsb
xchg
in
sbb
mov
in
dec
xchg
pop
js
jo
sub
adc
fsub
cld
jbe
mov
in
cld
bound
icebp
xchg
jae
dec
xchg
jb
outsb
jnp
xchg
pop
jmp
test
filds
and
mov
lret
ja
and
rcrb
shll
lods
pop
mov
sub
jbe
lret
ja
jns
cld
lea
daa
dec
ficompl
hlt
xchg
cmc
sbb
loope
data16
add
les
mov
mov
jle
sub
push
jnp
push
push
ret
fs
add
aad
popa
lock
xchg
dec
xor
int
and
push
mov
int3
cmp
sbb
and
test
jecxz
in
push
push
repz
test
jp
dec
fstl
mov
int
stc
mov
and
xchg
ss
call
shll
mov
insb
pushf
sub
jnp
inc
fadds
cli
mov
movsl
push
test
inc
stc
popf
adc
and
repz
mov
mov
push
fldlg2
jl
lock
mov
push
inc
lret
icebp
stc
ret
ficomps
insb
jae
sub
add
fucom
and
inc
sarl
push
int3
push
jge
or
std
push
pop
stos
lcall
cmp
xor
hlt
test
dec
dec
std
pop
cld
inc
push
fs
aam
movsb
push
jae
pop
lods
popf
cli
jge
add
add
out
or
dec
sbb
or
clc
mov
pop
fcomi
inc
data16
int
pop
notb
shrl
btr
leave
pushf
test
mov
notb
cmp
mov
xor
or
movsb
cltd
ljmp
mulb
jb
mov
pusha
dec
das
and
shl
aas
add
or
idivb
jo
add
xchg
popf
push
dec
nop
andb
out
int
test
sub
jb
call
out
xchg
dec
fs
in
cwtl
imul
cmc
mov
jno
into
mov
pop
inc
sub
and
adc
fs
iret
push
popa
sbb
les
sbb
loop
jns
mov
sbbl
sub
ja
out
mov
dec
sub
int
sbb
push
hlt
int3
repz
rclb
jge
int
in
mov
add
and
or
xchg
and
and
fisubs
push
mov
or
sbb
loope
mov
pop
jmp
mov
lock
fwait
mov
movsl
das
xor
lods
cmp
push
outsw
js
out
fmull
xchg
dec
stc
and
sbb
pop
sbb
mov
sub
imull
or
out
push
lcall
sbb
rcll
xor
lds
lret
or
jne
dec
jp
ud2
push
adc
test
cmp
insl
mov
leave
push
in
bound
push
repz
fdivs
and
jb
ja
mov
push
jp
into
test
iret
xchg
shr
xlat
inc
mov
stos
add
lret
bound
push
pop
dec
mov
pop
shll
jno
inc
lcall
enter
call
cmovae
add
jmp
pop
or
cmp
mov
mov
loop
lret
push
mov
adc
out
lods
and
repnz
inc
jbe
mov
or
scas
cmpsb
push
jp
push
pusha
adc
mov
push
mov
sahf
insl
mov
inc
cmc
popa
xor
in
jp
xor
mov
mov
addr16
pushf
xor
pop
cmc
fidivl
mov
inc
out
scas
test
and
movl
push
leave
pop
int
xor
xchg
sbb
mov
cmp
jl
mov
add
pushf
mov
inc
fadds
inc
sub
pop
orl
arpl
das
insl
jo
in
shll
or
in
jg
ljmp
push
mov
mov
mov
pop
ficompl
inc
movsl
push
add
xor
lods
aad
lods
jbe
loope
jno
insl
loopne
aad
cwtl
in
xchg
cmp
insl
aaa
ss
push
and
sti
mov
mov
insl
add
xor
into
dec
adc
pop
sbb
loopew
push
xor
xchg
out
inc
sbb
cmp
cmpsb
mov
or
stos
lds
shlb
and
ds
ss
bound
scas
push
sub
js
std
mov
push
push
dec
loope
test
test
pushf
jl
aam
inc
subl
inc
xor
lcall
mov
mov
test
fwait
or
js
push
jmp
shr
stos
mov
outsl
loope
jno
leave
push
xchg
add
ficoms
xchg
ja
rcr
mov
cwtl
inc
mov
push
lahf
lea
push
pop
push
cld
stos
inc
enter
mov
jbe
stc
cwtl
clc
data16
xor
xor
mov
sbb
icebp
jne
gs
ss
push
std
aas
push
mov
jecxz
mov
loope
call
mov
pop
mov
cmpsl
pop
into
add
cld
and
adc
fldenv
iret
sbb
ret
pop
cld
lcall
cmp
loopne
cmpsl
adc
dec
xchg
sbb
dec
cld
push
outsl
decl
push
std
jo
push
jns
push
mov
and
mov
pop
xor
and
mov
add
and
adc
pop
cltd
sub
insl
loope
lods
loope
jmp
scas
mov
sub
movsl
lcall
or
int
pop
aam
jg
call
ret
adcb
arpl
scas
cmp
jmp
mov
fisttpl
and
addl
int3
inc
add
xor
adc
mov
jmp
push
outsb
in
xchg
in
xor
inc
inc
mov
scas
aad
nop
push
pop
mov
or
xor
clc
inc
xor
xchg
pop
je
jbe
xor
lods
jp
xchg
fwait
pop
notl
cmc
lret
jo
or
or
dec
shll
xchg
push
mov
in
mov
cmp
gs
or
pop
shl
mov
les
rcl
loop
inc
sarl
mov
adc
mov
arpl
jecxz
loopne
sti
adc
fsubs
jae
mov
adc
adc
mov
mov
cmp
cmp
xchg
sahf
jo
push
leave
stos
and
stos
and
arpl
ficompl
imul
pop
notb
xor
mov
mov
imul
ja
stos
in
or
lret
cmp
dec
sbb
xor
fldenv
in
push
pop
fst
sub
mov
sbb
jno
add
sub
cmp
mov
rcrb
xchg
cltd
and
sarl
outsl
into
push
push
fmuls
in
test
pop
fsin
xchg
cmpsb
cmp
aam
sbb
jbe
lds
sar
cwtd
sahf
xor
mov
or
jl
jb
das
push
mov
xor
fcoml
add
mov
add
cmp
or
push
je
jp
pushf
aas
xor
data16
popf
sub
adc
fsts
fnstcw
jns
cmpsb
mov
clc
or
outsb
mov
imul
push
pop
jbe
jl
ds
add
cmp
std
mov
addr16
es
jge
clc
scas
and
adc
mov
sub
movsb
fmuls
mov
push
jg
sbb
and
adc
cmc
mov
mov
pushf
jecxz
inc
or
imul
in
lds
lods
out
sub
xor
call
aaa
std
lock
xlat
fstps
xchg
hlt
push
and
xor
cwtl
mov
dec
popa
cli
scas
sbb
out
inc
int
leave
jb
scas
lds
or
dec
xor
push
sub
xchg
xor
add
sub
arpl
xchg
cli
sub
fimull
aad
add
fwait
xchg
sub
or
mov
cmp
inc
aad
push
mov
push
xor
sbb
insb
fldenv
sbb
mov
adc
mov
out
lahf
ljmp
bound
ret
lods
mov
push
pop
and
and
xchg
les
push
dec
mov
in
imul
aas
cmp
outsl
fld
test
push
xchg
xor
xchg
mov
loop
adc
push
testl
loope
push
test
shrb
or
jnp
xor
sbb
xchg
rcll
adc
xchg
loope
xor
cld
mov
sbb
xor
movsb
sahf
mov
jmp
sbb
pushf
inc
mov
repnz
stos
mov
dec
orb
and
aaa
jno
or
xor
push
jecxz
xchg
jno
ljmp
ss
xchg
jl
sub
xchg
push
dec
int3
ds
mov
mov
inc
mov
lret
jecxz
adc
enter
xchg
jno
std
pop
mov
gs
fs
sbb
xchg
jae
repnz
call
or
test
fcmove
sub
incb
loopne
sbb
jl
or
xchg
xlat
pop
rcrb
xlat
addr16
pop
nop
xchg
or
xor
mov
jmp
dec
sbb
adc
pop
test
cwtl
fidivrl
jge
cmp
sbb
fwait
testl
push
scas
repz
ret
mov
shrb
jae
pop
or
ljmp
sub
cmc
fdivrl
stos
inc
repnz
test
and
push
movsb
out
cmp
push
out
cmpsl
sti
cmp
xor
notl
pop
push
cltd
fsubr
ds
and
add
adc
cmp
aam
js
int3
push
in
mov
push
dec
sub
mov
movsb
inc
jb
loopne
pop
or
sub
adcl
xor
mov
movsb
sub
jl
dec
fidivs
lds
popa
xchg
push
jnp
lcall
fs
outsb
into
and
fsubs
xor
les
les
inc
out
xor
dec
inc
dec
push
push
and
or
inc
jnp
push
imul
mov
scas
dec
aad
in
in
jmp
sarb
gs
clc
sbb
fimull
jbe
sub
out
shrl
lods
pop
mov
mov
repz
push
mov
jnp
fucomp
les
push
aad
mov
out
xorl
clc
sti
jno
xor
lea
mov
and
faddp
dec
outsl
cltd
jl
push
fidivs
push
fwait
mov
mov
adc
nop
frstor
push
hlt
into
clc
mov
lcall
and
pop
inc
and
xchg
cmp
sub
pop
fstp
jb
cmpsb
mov
dec
movsl
fidivs
fwait
sub
pushf
mov
cmp
xchg
inc
jns
ficomps
test
jge
sbb
mov
adc
imul
in
pop
dec
and
sbb
pop
cld
xor
js
aam
sub
mov
icebp
sub
inc
ret
enter
cli
clc
lds
es
mov
jl
icebp
xchg
mov
inc
ror
dec
stc
or
jmp
pop
mov
adc
jae
pop
ds
xchg
cmpsl
cmpsb
pusha
jnp
dec
lahf
xor
sbb
xchg
mov
pushf
arpl
in
jne
push
test
ss
mov
mov
mov
jge
lods
sub
pop
sbb
xchg
dec
sub
add
sbb
test
pop
push
gs
in
pop
adc
adc
mov
lock
stc
or
mov
jmp
and
rclb
loopne
pusha
ds
push
cmpsl
ljmp
shlb
sub
inc
scas
inc
test
inc
scas
movsl
mov
or
lahf
cmpsb
arpl
inc
mov
clc
js
and
add
aad
ljmp
jl
sbb
inc
test
out
mov
add
mov
dec
fiaddl
xor
or
loopne
rolb
mov
es
inc
sbb
leave
das
cmpb
jbe
ror
aaa
mov
push
sbb
rolb
jmp
in
fisttpl
xchg
cmp
iret
push
iret
test
mov
cmpsl
gs
sbb
push
fnsave
pop
insb
shlb
mov
into
movsl
cmp
push
xor
arpl
and
repnz
int
mov
lahf
mov
xchg
inc
mov
pop
jge
pop
xor
adc
out
or
movsl
in
push
lock
xchg
cmpsl
popa
mov
jo
into
mov
and
cs
sbb
sbb
sbb
pop
data16
addr16
jecxz
push
aaa
movsb
inc
cld
or
push
aaa
adc
repz
or
sti
call
push
movsl
loopne
jle
fcomps
inc
mov
jg
mov
sbb
je
sbb
sub
mov
cli
leave
loopne
mov
push
data16
ss
mov
ret
inc
pop
rcll
test
xchg
add
fcmovu
xchg
js
inc
jb
sub
dec
int
xchg
xchg
or
pop
jne
stos
xor
pop
imul
test
shrb
push
rorl
ret
mov
mov
jb
push
xor
clc
dec
popa
dec
rclb
shl
and
jle
clc
xchg
dec
lods
movsb
jl
ljmp
pop
fs
fistpll
bound
xchg
pop
repnz
lock
xchg
movsl
mov
ljmp
cmp
jne
and
nop
aam
dec
mov
stos
mov
cs
xchg
lret
pop
push
mov
hlt
pop
cli
popa
pop
lahf
mov
filds
add
popf
cmp
jb
shlb
mov
push
push
into
and
lret
rcrb
lods
mov
outsb
call
divb
out
mov
cli
mov
inc
mov
and
cs
enter
pop
mov
ds
loope
xor
adc
sahf
mov
inc
shl
das
ljmp
xchg
mov
add
dec
sub
jg
or
push
int
or
sbb
addr16
mov
call
mov
lds
and
sarb
xor
mov
xor
lods
jmp
icebp
add
jl
outsb
inc
addr16
int3
jp
or
xor
pop
or
sbbb
and
sar
pop
fildll
stos
jbe
leave
push
out
icebp
fnstsw
cmp
pop
push
cmpsl
data16
sbb
sub
adc
imul
or
fsubl
mov
xchg
mov
clc
in
outsb
fstl
sbb
in
mov
xor
popf
cltd
cmp
fwait
mov
stos
mov
dec
sub
jns
sub
pushf
inc
insb
pop
xchg
idiv
inc
and
aam
outsl
fmull
inc
lock
ss
xlat
or
pop
push
out
jae
and
inc
mov
mov
icebp
push
push
mov
in
iret
sbb
movb
fs
repnz
jle
add
jg
test
push
xchg
lods
sub
in
cmp
xchg
je
cmp
nop
aas
and
xchg
mov
ret
movsb
mov
out
popa
in
imul
jg
mov
push
push
pop
bound
leave
dec
movsl
cmp
pop
cmp
or
lock
sub
daa
sbb
cmpsl
imul
and
adc
stos
xchg
push
shll
add
jp
and
mov
dec
jbe
mov
bound
inc
push
std
jnp
jl
shrb
loop
shrl
insl
mov
jge
ljmp
dec
jp
jg
pop
inc
sub
test
xchg
mov
add
inc
mov
rorl
clc
push
pop
out
in
dec
add
mov
mov
inc
push
mov
addb
push
notb
ret
aad
icebp
xchg
popa
mov
out
jnp
push
cwtl
stos
out
out
cmpsb
dec
cmp
mov
xchg
xor
push
aad
xchg
mov
in
call
rclb
and
xor
outsl
test
sbb
pop
rolb
loopne
jno
std
adc
inc
sarl
iret
push
pop
cmp
mov
mov
imul
outsl
adc
xorb
mov
lea
aam
sbb
sub
add
aam
dec
or
inc
mov
call
push
cmc
sahf
test
inc
in
divl
jmp
into
sub
jl
insl
cmp
xor
aaa
popa
jo
in
movsl
adc
imul
daa
test
dec
pop
ret
xor
sub
push
fsubrs
shl
fwait
das
negl
bound
add
adc
leave
or
sub
clc
xor
subb
aam
xor
xchg
movsl
jno
bound
push
mov
cmp
sub
push
add
aam
pushf
mov
std
inc
hlt
or
jns
sbb
jo
std
or
mov
fsubr
dec
jl
add
daa
sbb
cmc
cmc
sbb
lret
mov
pop
adc
add
mov
xor
cmp
pop
push
jno
mov
out
nop
in
test
cld
call
popf
xor
mov
xchg
push
ret
jmp
mov
inc
mov
xor
aaa
jb
add
jb
push
int
lea
add
out
and
ljmp
xor
enter
das
aaa
inc
adc
sbb
push
testl
shlb
adc
test
loope
aad
dec
test
fildll
and
cli
and
sub
mov
add
jne
xchg
int
sbb
enter
js
push
mov
repnz
pop
cld
sbb
pop
out
js
mov
mov
inc
sub
jne
es
dec
or
add
test
mov
xchg
incl
sbb
xlat
cwtl
test
movsl
mov
push
insl
mov
shl
dec
call
push
xchg
push
mov
push
xor
jp
push
call
xor
in
hlt
fistpl
lahf
dec
mov
and
popa
hlt
push
lret
xor
out
fildll
jb
push
dec
xchg
mov
mov
movsb
jg
fisubl
sbb
stc
dec
adc
mov
cmp
in
ret
pop
mov
cmp
out
out
cs
mov
inc
and
movsb
push
mov
fistpll
push
popf
push
lea
out
hlt
cli
sbb
ljmp
cltd
sbb
sub
cli
sub
into
test
fs
fisubl
sbb
data16
cs
daa
add
xor
pcmpgtd
inc
jmp
sub
xlat
lret
call
pop
sub
cmpsb
mov
imull
je
jg
call
push
stc
sbb
jmp
mov
mov
mov
cmp
adc
jae
int3
mov
inc
and
jns
or
nop
and
cmp
cmpsb
popa
sub
in
and
xchg
adc
int
outsl
and
cmpsb
cs
insb
jg
fsubs
adc
adc
and
jno
insb
sub
xchg
or
dec
cwtl
or
insb
mov
xchg
icebp
xor
mov
cmc
mov
cmpsw
xor
cmp
mov
xlat
gs
les
ret
inc
mov
cmpsl
xchg
pushf
pop
jbe
pop
mov
in
enter
ret
pop
ret
nop
or
lods
pop
ljmp
fwait
stos
je
loopne
std
in
mov
adc
shll
lret
and
dec
push
call
ror
outsb
adc
xlat
push
inc
mov
sbb
mov
add
mov
mov
shll
addr16
enter
sbb
lock
rolb
mov
insl
shl
scas
and
or
sub
loope
mov
orb
inc
call
pusha
movsl
movsb
mov
sub
mov
pop
inc
test
mov
fists
mov
sahf
mov
test
lret
add
test
adc
jp
js
jo
test
mov
mov
cmpsb
lcall
xlat
xor
mov
sti
mov
rcl
adc
aad
repnz
clc
and
mov
testb
xor
aam
sbb
and
mov
push
clc
imul
pop
subl
lods
xchg
add
jmp
sbb
ss
mov
or
sahf
ss
xchg
dec
jo
mov
and
mov
xor
sub
and
cmc
nop
mov
iret
in
dec
cmp
movsb
cld
jge
xchg
pop
mov
push
out
cli
mov
in
add
mov
mov
mov
push
xchg
xor
pusha
shrl
mov
push
into
loopne
mov
adc
loope
scas
dec
jno
cpuid
stc
sub
cmpsb
mov
andl
push
movsl
adc
adc
inc
and
fwait
icebp
pop
popa
sbb
cmp
movsl
idiv
hlt
sbb
cmpsb
jmp
push
sub
leave
xor
mov
xor
mov
nop
add
hlt
ret
pop
or
bnd
in
pushl
pop
movl
adc
out
pop
xorb
outsl
dec
lret
test
mov
pop
loopne
add
cltd
xor
mov
lcall
je
imul
sub
mov
mov
push
lock
sti
fnstcw
and
mov
std
cmp
je
ds
sub
ret
mov
adc
jnp
scas
stos
inc
sbb
shrl
sub
jbe
mov
daa
shll
xchg
ret
sbb
jmp
fcmovnb
push
push
sbb
jge
mov
sub
mov
pop
fcomps
xchg
out
xchg
sbb
xchg
or
sbb
pushf
pop
push
mov
lcall
adc
dec
push
mov
mov
jae
sbb
pop
pop
jg
dec
fs
fiaddl
dec
daa
and
adc
mov
call
mov
insl
out
int3
test
and
or
mov
scas
pop
cwtl
mov
and
sbb
ds
xchg
iret
mov
pop
adc
lret
test
jb
pop
fldcw
mov
dec
lods
add
outsb
cwtl
std
bound
sahf
loopne
mov
fcoms
fcompl
pop
fsubr
packssdw
jmp
push
xor
lahf
mov
jge
setno
jno
popf
notl
cmp
pop
insl
pop
or
lods
ds
cmp
mov
add
jle
mov
mov
pop
mov
cmc
das
call
ret
div
aad
cli
aas
roll
jno
and
cmp
pop
mov
mov
sbb
enter
xchg
add
lret
push
sbb
sbb
mov
ficoms
xchg
xor
ja
movsb
sbb
push
hlt
loopne
aas
ljmp
sbbl
jb
push
lret
fs
cmp
mov
mov
push
jnp
lock
scas
sbb
sarb
std
sbb
inc
pop
lods
fs
sub
imul
pop
outsb
idiv
and
or
sti
sub
sbb
jne
adc
xchg
cltd
rolb
cld
lea
add
cltd
pusha
test
push
ja
aaa
mull
and
mov
push
adc
cwtl
aam
jnp
pop
inc
mov
mov
inc
adcb
fnstcw
lds
popf
add
push
sub
clc
jbe
cli
jecxz
ret
xchg
sbb
outsl
add
or
subb
loope
xor
out
jno
repnz
xchg
insl
mov
pop
inc
push
sub
iret
or
mov
xor
ja
cmpsb
adc
jg
pushf
xlat
or
aad
push
cs
mov
cmp
mov
pop
xchg
xor
jmp
ss
es
mov
notl
jo
jne
fiaddl
jg
push
mov
mov
add
orb
icebp
push
and
fnstcw
ret
lret
mov
enter
mov
notb
mov
adc
addl
push
pop
jg
call
cmp
pop
imul
cmpsl
mov
rorb
push
scas
or
pushf
lret
dec
jo
mov
xchg
sbb
lea
cmc
mov
rolb
or
lcall
es
or
push
in
adc
inc
inc
jo
pop
inc
imul
and
mov
mov
cmpxchg
mov
mov
nop
pusha
addr16
vpunpckhqdq
das
xor
xor
imul
jge
or
fwait
cmp
dec
lock
jne
stos
orl
in
adc
leave
mov
xchg
mov
andl
mov
mov
sub
and
add
or
sub
addr16
jno
push
sbb
fwait
div
and
and
mov
mov
or
add
into
sarl
and
dec
adc
shlb
push
in
ret
push
fldenv
inc
jmp
jbe
ja
insl
jb
adc
leave
imul
negb
dec
out
xor
cmpsb
jns
push
jns
mov
ficomps
out
xlat
and
jns
je
cmp
mov
cmp
aad
add
push
fildl
and
mov
pushf
inc
sbb
add
mov
fists
mov
fstpl
lret
pop
pop
cltd
jns
lods
jae
xchg
nop
pop
sbb
mov
sub
inc
sahf
pop
outsb
cmp
mov
inc
add
insb
xor
xchg
aad
sbb
dec
xchg
iret
mov
mov
jae
mov
xor
loopne
pop
roll
mov
hlt
adc
stos
les
rcrl
jl
fwait
dec
inc
jge
in
lods
mov
inc
lods
lds
aaa
das
outsb
aaa
sbb
jbe
xchg
js
daa
ret
mov
pop
into
sbb
push
jecxz
pop
jbe
and
hlt
jae
sbb
fdivs
aad
cmp
cld
sbb
rclb
push
mov
xor
inc
sub
jno
cmpsb
jmp
notb
push
aad
push
je
jge
mov
cmp
jge
adc
scas
dec
les
push
ret
or
scas
pusha
fbld
repz
fwait
int
shlb
xor
mov
stos
mov
mov
inc
dec
cmpsb
negl
inc
mov
cmp
jae
push
pop
jg
push
aaa
int
imul
jg
xorl
fwait
data16
fwait
in
rorb
icebp
outsb
pop
jb
mov
std
in
sub
loope
into
adc
mov
sbb
sub
outsb
cwtl
daa
add
mov
imulb
stos
sbb
dec
or
cmp
sub
int3
ds
or
mov
cmp
faddl
mov
dec
cmp
das
mov
inc
add
cmp
test
leave
cmp
cltd
inc
out
push
das
in
or
mov
jnp
stos
mov
movsl
mov
mov
mov
cld
hlt
add
shll
iret
jo
lcall
adc
mov
out
cmp
or
dec
mov
outsl
loop
adc
xchg
and
mov
and
fsubrs
dec
jae
adcl
sarl
or
in
pop
pop
loope
test
shrb
rcrb
sbb
push
xor
inc
loop
xor
mov
mov
dec
push
rolb
bnd
iret
push
addb
pop
das
orb
lcall
imul
testl
stos
add
adc
xchg
rcll
or
popa
addr16
insb
arpl
xor
add
fcmove
sub
sbb
jge
clc
mov
fnsave
pop
hlt
xor
adc
sbb
icebp
loop
mov
sbb
scas
stc
add
xchg
movsl
and
movl
es
out
les
or
jge
pop
aas
fistpll
and
cmp
mov
xor
les
inc
ljmp
jo
std
sub
cs
mov
cs
jnp
stos
lret
ret
mov
outsl
mov
ss
icebp
out
mov
pop
das
nop
lahf
jecxz
sbb
in
dec
andl
and
clc
and
mov
pushf
insl
and
lods
sub
mov
bound
xchg
mov
divl
loopne
loopne
jmp
mov
xchg
lds
push
data16
xor
daa
bound
or
iret
sub
inc
in
pop
outsl
push
cmpsl
sub
adcl
es
dec
fcoms
stos
das
mov
mov
aad
dec
inc
ds
cmp
subb
movb
jne
std
stos
inc
ljmp
xor
popf
inc
sub
mov
mov
scas
idivl
xor
leave
cmp
and
sbb
stos
cmp
jae
les
bound
data16
rcrb
dec
movsb
mov
sbb
mov
das
and
insb
cwtl
mov
movsb
fs
jle
adc
out
push
outsb
cmc
jae
mov
add
ja
mov
addr16
mov
push
sub
out
nop
push
pop
mov
and
adc
loopne
mov
xchg
and
jae
push
ficomps
cmp
mov
ret
xor
inc
sub
mov
lods
sbb
xor
mov
adc
cmc
add
in
gs
sbbl
cmp
inc
jne
add
inc
ret
cmp
inc
adc
cmp
cmp
lock
repz
das
loope
sbb
insl
into
ficompl
inc
rcll
mov
notb
pop
xor
xor
push
push
out
pop
jl
ret
aad
pop
cltd
stos
pusha
pop
dec
and
xor
add
out
push
test
adc
jns
cmp
call
and
fst
movsl
arpl
xchg
outsb
test
mov
xor
or
bound
add
in
cmp
sahf
xor
xchg
sbb
insb
pop
rcll
mov
add
cmp
icebp
dec
adc
ret
push
dec
mov
xor
outsl
dec
mov
pop
lcall
testl
fisttpl
js
into
rol
fsts
aaa
add
and
cs
bound
sub
shll
ja
shrl
xor
leave
mov
clc
fwait
inc
dec
rolb
hlt
inc
aad
data16
or
or
sbb
in
arpl
incl
inc
test
fwait
mov
mov
inc
mov
loopne
push
push
ds
xchg
push
negb
jge
mov
xorb
test
dec
das
xor
out
and
adc
lea
aad
js
rcll
sub
scas
cmp
je
pushf
testl
mov
xchg
inc
jns
adc
inc
leave
in
mov
add
push
dec
repnz
push
idiv
enter
leave
jnp
stos
test
add
mov
xor
pop
mov
mov
pop
scas
dec
sub
cmpsb
xor
sbb
bound
mov
and
sti
sub
cmp
mov
or
loop
out
aas
in
pop
mov
mov
jbe
hlt
lods
mov
fdivs
mov
mov
push
cmp
rcr
ja
stos
ret
insb
lock
sub
xor
mov
iret
lea
loope
inc
or
cli
mov
cmpsl
xor
mov
inc
xor
inc
sub
inc
mov
dec
xchg
sti
sbb
sbb
into
and
lds
stos
jmp
bound
lods
mov
xor
js
dec
cltd
out
aam
mov
cmpsl
and
enter
aaa
mov
or
inc
cwtl
lock
int3
pop
outsb
aas
jbe
pop
push
and
jb
call
enter
imul
stc
call
or
iret
je
push
insb
insl
rolb
pop
cltd
pop
sub
in
sub
mov
adc
fimuls
pop
mov
xor
fldl
imul
mov
cmp
dec
fnstsw
daa
cltd
mov
pusha
mul
or
popa
jecxz
sbb
jle
mov
mov
add
jns
cmp
fmuls
and
loopne
jmp
lock
sub
lds
mov
push
pop
popa
imul
xchg
test
mov
ss
and
jns
jbe
movsl
dec
inc
inc
push
xor
pop
push
shrb
sub
mov
cmpsl
test
inc
and
pusha
xor
clc
push
js
sub
inc
pushf
lcall
aam
dec
xchg
push
push
cwtl
es
ret
aam
add
rorb
test
jmp
push
xor
mov
call
mov
insb
daa
xchg
loopne
cmp
test
adc
test
jge
fstl
hlt
xchg
cli
fcomip
cmp
pop
inc
inc
sti
ret
jmp
out
cmp
xchg
mov
pop
sub
test
lock
out
loope
je
outsb
cld
sub
adc
mov
mov
inc
push
mov
icebp
js
out
stc
outsl
inc
hlt
jge
or
fstenv
pop
sti
test
mov
insb
xchg
mov
out
sbb
sbb
jle
lock
in
addr16
jp
imul
aam
je
cmp
adc
ss
pop
xor
sub
out
je
pop
mov
mov
into
inc
scas
test
add
std
and
fucomi
add
cli
sti
lret
je
std
cmp
xor
push
sub
adc
push
pop
fldt
movsl
movsl
sub
or
cmp
dec
jae
imul
mov
lahf
outsl
imul
popa
sahf
sub
adc
sti
ja
sub
mov
and
sub
or
test
pop
mov
adcl
jl
insl
daa
loopne
pop
pop
dec
imul
leave
in
adc
mov
sarl
push
pop
push
das
sub
std
clc
out
sti
pop
xchg
push
and
push
add
pop
adc
shlb
mov
out
stos
mov
mov
sbb
and
mov
dec
fs
xchg
loopne
fisubs
pop
jae
push
fwait
ja
cs
dec
pop
in
rcll
mov
adc
outsl
inc
xchg
pop
ficompl
ficomps
das
out
push
cmp
ss
ret
insb
jmp
loope
mov
out
dec
sub
insl
xor
and
scas
insl
xor
or
jl
ds
cmpsl
jmp
fs
in
push
xchg
int3
fiaddl
push
add
add
jnp
arpl
xchg
push
loopne
mov
mov
mov
fwait
inc
jle
fsub
out
jge
imul
stos
mov
lea
mov
insl
add
stc
fcoml
add
aas
pop
aaa
cmpsb
out
clc
out
cltd
scas
lret
xor
xor
jnp
shl
mov
imul
push
mov
hlt
add
mov
and
mov
adc
test
adc
xor
jbe
icebp
bound
pushl
mov
or
jecxz
sbb
fcomip
out
push
andb
xchg
jbe
push
lods
xchg
mov
lret
adc
xchg
ds
std
mov
and
pop
popa
test
push
add
mov
jp
jns
pop
jp
sbb
push
int3
cld
shll
cli
pushf
mov
xor
adc
mov
fidivrs
or
and
scas
jecxz
push
flds
mov
lret
mov
pop
leave
mov
sbb
das
das
out
insl
lcall
adc
repz
adc
imul
sbb
mov
fsubrs
scas
push
cli
mov
and
fdivp
ljmp
js
arpl
lods
pop
cmp
scas
enter
call
je
push
std
in
mov
and
std
xor
mov
cmp
dec
jb
dec
sbb
sbb
test
inc
int
orl
xor
sahf
incb
mov
cmp
mov
dec
cmp
lcall
jp
xchg
mov
rcrl
pushf
imul
sbb
fdiv
pushf
jmp
cmp
cmp
xchg
sti
loopne
dec
and
push
js
xchg
aad
mov
je
xchg
push
popf
dec
mov
int3
or
mov
dec
outsl
adc
push
or
jmp
inc
and
ds
pop
out
popf
xchg
jno
rcrl
sub
ficoms
repnz
pop
fsubl
outsl
or
add
fimuls
jmp
sar
or
sbb
cmp
jp
in
push
add
hlt
push
pop
pop
jno
iret
mov
mov
cwtl
test
cs
mov
jmp
icebp
push
mov
movsb
xor
xor
cmpsb
or
cmpsb
push
in
repz
mov
subb
cmpsb
inc
movsl
loope
mov
out
and
ja
inc
repz
dec
sbb
ret
jae
dec
int3
test
mov
out
cmp
aas
lcall
iret
stc
push
dec
je
pushf
mov
lret
lds
pop
xchg
repz
push
and
jecxz
jbe
jle
lods
cmpsl
mov
adc
leave
fcoml
mul
loop
lahf
lret
fiaddl
push
mov
into
lcall
xor
fbstp
rcl
jo
push
jecxz
js,pt
pop
mov
mov
xchg
repnz
movl
pop
sub
xchg
or
adc
xor
add
adc
or
push
jg
push
pop
dec
insb
adc
cmp
loopne
and
insl
sub
xor
cs
sahf
and
cmp
in
push
inc
inc
pop
push
cmp
xchg
push
dec
dec
xchg
add
mov
sub
xor
outsl
pop
push
inc
inc
inc
enter
mov
bound
mov
inc
sahf
leave
xor
mov
fcompp
ljmp
mov
out
test
or
ds
mov
std
pusha
mov
mov
xor
inc
xchg
cwtl
bound
and
loope
sahf
test
addr16
or
push
hlt
xor
add
pop
negl
dec
cmp
inc
idivb
shl
loopne
loop
dec
sbb
int3
pop
mov
or
sti
sbb
addr16
icebp
fs
lret
movsl
mov
nop
or
cmp
jmp
sub
les
out
jns
cmp
jne
mov
and
cmp
sbb
sub
scas
xlat
add
loope
inc
push
rclb
dec
pop
xor
jno
outsb
pop
mov
into
xchg
loope
lea
cltd
test
addr16
out
fadd
adc
aas
jecxz
rcrb
sub
and
shlb
shll
insl
push
inc
sahf
mov
xchg
and
iret
push
push
adc
xchg
aam
rolb
inc
addl
mov
fcmovu
outsb
and
insl
dec
lret
sbb
test
loop
fmul
lds
cmpsl
add
push
lret
dec
out
pop
lret
jge
std
xchg
movb
sarl
inc
push
and
lret
loop
cmc
repz
dec
mov
jecxz
aam
cmp
and
pop
mov
pop
sbb
mov
lock
pop
js
xchg
lcall
adcl
mov
mov
and
idivb
push
xlat
fdiv
inc
cli
ror
xchg
mov
addr16
xlat
jbe
inc
dec
mov
jbe
stos
movsl
test
or
mov
sub
lods
add
pop
pop
jmp
mov
cwtl
inc
jp
xor
sub
xor
iret
test
ljmp
in
mov
jg
mov
push
clc
rclb
xchg
inc
jle
mov
nop
test
mov
sbb
idivb
sahf
dec
push
icebp
das
out
mov
adc
ficoms
or
jae
xchg
mov
or
fisttpll
mov
scas
idiv
ljmp
pop
mov
jp
enter
inc
in
fs
jae
sbb
pop
and
sub
mov
and
jp
outsl
in
scas
jno
inc
jp
loop
inc
cmpb
inc
jle
test
jecxz
mov
lds
cmc
js
out
cmpsb
out
inc
add
xor
xchg
jle
adc
hlt
inc
mov
mov
cwtl
hlt
or
int3
fsubl
hlt
lcall
inc
pop
data16
mov
test
jae
and
mov
fucomip
adc
jge
in
mov
adc
add
add
es
xor
add
lods
jo
ljmp
pusha
mov
pushf
shlb
popf
jb
xchg
pusha
sub
sahf
inc
or
ret
pop
ja
rcrl
sbb
inc
sub
jg
jnp
mov
jbe
cmp
and
xchg
push
jecxz
dec
and
push
xor
aas
or
dec
jns
add
pop
clc
pop
subl
jnp
loopne
ret
mov
outsb
gs
or
inc
dec
cmp
mov
loope
outsb
pop
inc
mov
lock
lods
jns
pop
mov
popf
push
cmp
fndisi(8087
push
jne
inc
xchg
sbb
push
ret
psllq
xchg
scas
xlat
popf
or
and
iret
jp
jge
scas
in
aas
clc
cmp
jmp
push
push
hlt
lret
jno
adc
fs
lcall
clc
pop
insb
fcmovbe
iret
out
sub
fdivrl
addr16
dec
adc
sbb
sub
sub
cmp
xor
daa
inc
push
stos
aad
nop
test
dec
scas
stos
ret
aas
aas
in
dec
scas
inc
inc
vpshab
fsubrl
push
std
pop
pop
push
xor
add
cmp
mov
mov
mov
sub
loopne
in
or
pusha
scas
rorb
inc
sub
ss
xchg
adc
ret
mov
pop
mov
scas
or
xchg
cs
sbb
js
dec
sub
mov
iret
into
stos
int
pop
stos
mov
addr16
cmp
adc
out
insb
adc
xchg
int3
xchg
xchg
push
arpl
xchg
push
and
jle
and
mov
stos
pop
lret
jae
insb
xchg
mov
adc
push
xchg
lahf
out
inc
sbb
ljmp
and
add
icebp
call
fwait
das
or
pop
mov
pusha
pop
mov
pop
aad
mov
insl
sub
loopne
lods
cmp
mov
jns
shlb
jge
das
xchg
xchg
dec
sbb
dec
cld
jmp
jle
movsl
xchg
ja
mov
stc
inc
stc
pop
cmpsl
xchg
fildll
mov
into
imul
in
stos
xor
dec
and
in
inc
mov
into
or
lcall
test
jo
rorb
or
jg
inc
push
mov
repz
push
leave
cltd
pushf
sub
pop
xor
dec
pop
pushl
adc
push
dec
dec
and
jo
lret
xchg
in
es
fdivl
mov
and
nop
inc
inc
sub
sub
fwait
mov
stc
bound
sbb
xor
cmpb
sbb
cwtl
mull
movsb
repz
sbb
pop
jle
sub
stos
jnp
icebp
cmp
pop
push
imul
or
mov
in
maxps
sub
fmull
pop
outsl
sub
cmp
pop
mov
xor
jns
and
add
lods
mov
fsubrl
xor
addr16
ret
pop
inc
mov
les
push
aaa
cmpsb
aam
and
mov
mov
or
cltd
mov
mov
hlt
mov
jmp
enter
imul
mov
lods
mov
mov
jle
dec
lea
mov
xchg
mov
mov
je
pop
into
xchg
aam
arpl
inc
inc
test
stc
shrb
addb
test
dec
hlt
sbb
jg
pop
loop
ret
test
mov
or
stc
into
in
mov
imul
test
movsl
dec
mov
xor
lea
cmp
lods
movsb
aam
push
xor
pushf
cli
push
pop
dec
jge
js
cmpsb
sbb
test
fwait
xchg
lock
into
iret
lods
repnz
push
jecxz
hlt
hlt
lcall
or
test
xchg
pop
xchg
pop
dec
sub
arpl
sahf
push
cmc
dec
xchg
sbbl
or
sub
rcrl
lea
ucomiss
pop
xlat
dec
fisubl
cmp
or
enter
cs
scas
sbb
or
push
leave
mov
push
jle
mov
imul
mov
push
sub
xorb
xchg
xorl
xchg
scas
stos
xchg
aaa
sbb
cmc
inc
push
jmp
movl
and
jp
xchg
leave
mov
lret
fs
sub
push
in
ss
shll
icebp
pop
push
lods
and
sub
pushw
dec
movsl
cmpsb
adc
out
xchg
insb
outsb
enter
and
push
testl
subb
jns
cmpsl
das
dec
int
or
jg
outsb
jne
xchg
or
mov
rclb
cmp
push
daa
aam
dec
pop
scas
enter
xchg
sub
jecxz
or
dec
ss
sarb
xchg
int
scas
cwtl
mov
adc
and
pop
dec
faddl
mov
repz
push
xchg
mov
ss
nopl
leave
clc
inc
fwait
arpl
outsl
sub
jae
sub
ret
outsl
push
cli
or
fistpl
in
pushf
pop
push
dec
add
or
pushf
push
xchg
and
sbbl
or
or
xor
jl
lret
les
movsb
jno
outsl
pop
in
adc
inc
lcall
sbb
xchg
xor
lahf
sbb
adc
ljmp
cld
scas
add
pop
cs
out
mov
or
pop
push
fcmove
scas
ss
leave
inc
fsubrl
pop
cs
xlat
in
jo
adc
xchg
xor
out
adc
and
xorl
sbb
xor
mov
push
mov
sub
inc
dec
push
addr16
pop
and
mov
fisubrs
rcrb
stc
mov
xor
test
or
scas
imul
jbe
add
jb
inc
xchg
jno
xor
adc
push
or
pop
fstpl
and
rcll
es
lret
js
aam
xor
iret
orl
mov
fidivl
xor
xchg
addr16
shll
pusha
pop
push
cmpsl
push
or
mov
jmp
xchg
in
jae
imul
xchg
mov
pop
ljmp
std
rol
add
lret
adc
adc
dec
lcall
add
add
adc
call
or
pop
mov
outsb
sbb
mov
popa
add
das
mov
jmp
ret
das
ss
add
push
xchg
insl
sub
lods
push
sbb
fldenv
mov
lods
leave
sub
popf
lahf
test
inc
pop
in
sti
out
int
sbb
xchg
arpl
mov
out
out
mov
and
jmp
mov
lahf
leave
cmp
insb
cmp
mov
push
in
cs
mov
lods
sarb
xor
sbb
adc
lret
fdivl
sub
aas
test
cmp
sbb
jae
insl
sub
add
lods
jnp
push
sti
mov
sarb
push
movsb
lea
add
sti
xchg
enter
ret
add
xor
pop
jno
scas
lods
jbe
loope
mov
mov
xor
lahf
sub
sbb
sarl
unpcklps
push
push
jl
cwtl
stos
mov
lret
pop
loope
fscale
add
cmpsl
pop
incb
lea
push
cmpsb
ss
js
and
inc
gs
adcl
push
fs
lahf
mov
ret
cs
inc
test
insb
jmp
test
mov
arpl
sbb
push
jbe
dec
jg
mov
popf
sbb
pushf
pop
xor
fwait
cmp
ret
xchg
xchg
cmp
pusha
fsubrp
arpl
in
mov
fsubrs
outsl
repnz
mov
xchg
or
scas
add
test
loope
add
jbe
mov
les
jo
sub
stos
pop
jp
xchg
xchg
cmp
mov
fwait
adc
outsb
xor
or
loope
sbb
jmp
add
sahf
movsb
jmp
and
cld
push
cmp
dec
dec
mov
pop
lahf
jecxz
divb
xchg
out
jge
mov
and
cmp
lods
scas
fidivrl
inc
lahf
add
mov
fdiv
in
and
xchg
imul
mov
pop
or
ljmp
fstpl
inc
and
lods
leave
fldenv
push
subb
xor
fnsave
ret
int
ror
and
incb
sub
insl
pusha
leave
mov
fcompl
jl
push
jnp
sub
cmp
push
out
in
cmpsl
cmpsl
in
mov
xchg
add
stos
add
in
out
pushf
dec
in
sub
cltd
mov
mov
pop
sub
mov
push
imul
jge
sti
jae
jmp
add
push
and
add
jp
push
pop
ficompl
cmpsb
dec
cmc
outsb
int
pusha
cmpsb
imul
pop
dec
sti
inc
push
sub
jl
fistpl
test
sarb
lcall
jl
ret
push
jae
and
jp
test
iret
adc
fsubr
repz
bndstx
adc
fcmovb
stc
pop
movsl
popf
fimuls
out
pusha
push
in
push
ds
fidivl
mov
lds
in
push
pop
jns
xchg
pop
cltd
sub
ja
push
push
sbb
push
lcall
jg
sub
lret
int
sbb
shlb
mov
and
cmp
loope
dec
mov
lret
xchg
push
loop
xchg
xchg
push
imul
inc
push
rcrl
fbld
mov
push
cmpsl
dec
jno
or
sbb
in
mov
add
arpl
leave
hlt
xor
or
ret
push
ret
add
test
cmc
push
cmp
push
push
test
cmc
cmp
lods
jmp
repz
inc
inc
cmpsb
push
daa
call
mov
and
shll
mov
push
adc
dec
loope
ja
cwtl
pop
out
in
xchg
cli
ss
cs
sbb
pop
jbe
mov
mov
sub
ret
loopne
scas
mov
or
aaa
test
loopne
xlat
loope
aas
loope
and
fnstcw
popf
xor
pop
add
jae
dec
cs
pop
cli
ds
jmp
add
cmp
mov
sbb
test
or
es
pusha
mov
mov
ljmp
or
aaa
jbe
fcoms
loop
adc
jmp
sbb
jmp
bound
dec
push
xor
imul
and
or
pop
jmp
mov
pusha
cmpsl
cld
clc
aad
jo
imul
cmpsb
aaa
sbb
popa
cs
aad
cltd
mov
pop
ljmp
call
lea
leave
adc
jbe
mov
call
adc
lret
fnstcw
jmp
or
ja
cmp
stc
rorb
pop
outsl
dec
add
mov
sbbb
jp
andl
mov
in
push
xchg
dec
out
arpl
mov
ret
lods
in
ss
jmp
imul
stc
fdiv
stos
fwait
into
sub
pop
je
xchg
mov
es
mov
outsl
pop
adc
push
pop
pop
in
sub
add
adc
xchg
clc
rorl
dec
cwtl
pop
and
idivl
or
mov
js
ficoml
lock
jp
aad
mov
add
shrl
das
sbb
sbb
mov
mov
scas
mov
jae
loope
push
mov
add
jo
xchg
mov
scas
or
rorb
inc
fdivs
xchg
push
iret
cs
lcall
adc
out
mov
and
and
xchg
fmull
int3
push
push
adc
add
add
test
cmp
hlt
jbe
sbb
loopne
push
lahf
mov
mov
and
xor
ret
stos
push
mov
jecxz
jmp
xchg
das
sub
jnp
mov
sub
pop
pop
or
ljmp
xor
roll
push
cmp
sub
imul
bound
push
popf
xor
dec
mov
jo
pushf
mov
lcall
dec
adc
sbb
lret
push
inc
es
enter
cmpsb
pop
jae
loop
lahf
push
sahf
jecxz
push
jns
inc
imul
add
push
lahf
inc
jp
xor
sub
cs
push
icebp
jl
addb
lods
in
mov
out
mov
dec
aad
out
cmp
push
fsubrl
or
jl
loop
jae
mov
mov
popf
les
rcll
push
inc
add
xor
je
cwtl
dec
sub
cld
iret
mov
xor
mov
sbb
dec
xchg
xchg
push
adc
sbb
pushf
rcl
daa
jecxz
in
adc
sub
sbb
enter
out
fcomip
or
fidivl
out
mov
cmp
popf
loopne
sub
subb
pusha
fwait
sub
mov
pop
sbb
sub
dec
inc
mov
xchg
or
fisttps
clc
lcall
repz
dec
xchg
cmpsl
lock
adc
loop
incl
out
dec
xchg
mov
mov
aad
pop
stos
or
add
repz
mov
mov
call
mov
push
pop
dec
js
mov
xor
fsubp
and
mov
test
jle
fadds
loopne
icebp
inc
mov
adc
andl
push
mov
daa
xor
sbb
add
addr16
test
push
subb
in
rcrl
negl
push
jbe
mov
repnz
outsb
and
clc
pop
add
lret
cltd
xor
shll
lods
popf
mov
loop
pop
ret
mov
push
adc
sub
xchg
loope
or
and
inc
jmp
jmp
push
xor
neg
xchg
jmp
jle
xor
in
outsb
out
sahf
dec
fcoml
nop
cmp
xchg
shrl
in
push
or
add
pop
js
xlat
xor
loop
inc
movsb
mov
jge
fst
movsl
jecxz
imul
stc
push
dec
xor
insb
inc
out
shlb
cltd
outsl
nop
or
movsl
add
movsb
xorl
sbb
fisttps
inc
hlt
mov
mov
push
lahf
aad
pop
jb
notb
js
sbb
sahf
adc
or
xchg
cmp
aam
push
mov
fwait
jl
shll
dec
jb
xchg
jns
mov
mov
mov
jmp
insl
xchg
gs
xchg
rclb
jmp
and
or
movsl
mov
addr16
xor
sti
inc
mov
add
inc
xor
push
les
test
mov
inc
fcoml
aaa
shl
dec
in
popf
adc
mov
sbbb
sarl
sub
cmpl
out
sub
and
out
imul
push
es
dec
out
push
xor
fdivr
push
lahf
movsb
scas
xchg
xor
sti
in
movsl
xchg
imul
sti
push
jbe
int
xchg
inc
cmp
sti
scas
xchg
sub
leave
jbe
xchg
cmp
andl
xor
vpmullw
push
add
test
mov
jno
test
push
sbb
inc
add
cmpsb
cmp
lcall
ret
addr16
xchg
pushf
sbb
mov
or
adc
add
fidivrs
loop
cmp
pop
cmp
and
arpl
push
push
ss
push
iret
or
cmp
iret
aam
xor
push
add
xor
cmpsl
jge
aam
std
sbb
xor
loope
cmp
das
sub
int3
dec
xlat
push
cwtl
jnp
ficoml
mov
or
sbb
stc
aas
jg
imul
shll
hlt
inc
push
sub
nop
inc
cwtl
adcl
pushf
inc
mov
sub
loop
or
mov
int
inc
xor
add
fdiv
mov
pop
xchg
pop
xlat
jno
jp
imul
push
into
mull
push
loopne
sahf
mov
mov
js
test
imul
push
pmuludq
mov
xchg
movsb
xor
mov
sub
mov
scas
call
ror
movsl
push
es
ret
shll
push
mov
pop
les
into
mull
mov
out
pop
xor
sar
add
ret
test
xor
call
flds
icebp
ret
enter
or
inc
cmpsb
std
and
mov
and
clc
add
testw
in
push
sub
loopne
jb
push
dec
and
cmpsb
add
sub
sub
xor
push
sbb
pop
xchg
fadds
mov
nop
inc
sub
pop
scas
inc
cmc
into
dec
repz
fdivl
cmp
dec
out
mov
dec
mov
fsubs
pop
mov
xchg
popa
pop
xor
adcl
lea
or
mov
mov
xchg
aaa
push
stos
sub
xchg
xor
addb
mov
ret
not
push
xchg
cmp
pop
cwtl
loopne
mov
mov
adc
jne
add
repnz
and
subl
inc
dec
cmp
sub
dec
cmpsb
pop
xor
xchg
add
js
jge
fnstenv
inc
fistl
or
xchg
iret
out
lods
mov
shl
or
std
cmp
test
mov
in
ds
mov
add
fildll
popa
cli
repz
sbb
aas
dec
cmpsl
in
test
pushf
push
push
xchg
icebp
jne
sbb
subl
pop
fstl
imul
push
lea
outsb
or
mov
das
mov
mov
jno
push
popf
jmp
jecxz
stc
xor
in
and
sbb
arpl
inc
nop
jmp
add
jo
mov
or
cmc
sub
int3
lock
cmp
pushf
gs
jae
mov
rcl
mov
mov
in
push
and
mov
test
pop
fsubl
aas
js
mov
xor
and
sub
xchg
arpl
out
mov
xchg
sbb
rcr
xchg
sbb
enter
stos
addb
clc
mov
or
and
dec
sbb
xchg
mov
mov
pop
orl
fsubrl
sub
fwait
clc
call
mov
sub
int3
mov
insl
hlt
aam
ret
mov
push
mov
pusha
sahf
mov
xlat
aas
sbb
insb
xor
cmpsb
pusha
xchg
in
pop
data16
shlb
iret
pop
xorps
add
hlt
push
testb
xchg
bound
aad
into
lds
mov
stc
es
xor
xor
stc
bound
and
cmp
lret
adc
test
outsb
icebp
xchg
mov
repnz
push
mov
add
push
pop
inc
or
lret
pop
mov
in
fidivl
ljmp
push
fcomps
xor
bound
adc
mov
cmp
inc
lret
mov
dec
inc
or
stos
pop
or
mov
xor
scas
sbb
leave
mov
add
cwtl
pop
rcrb
xchg
fcmovbe
inc
push
sbb
xchg
scas
jae
in
or
into
xor
cmp
mov
or
mov
shl
aad
dec
jg
pusha
push
cmp
dec
pop
sahf
add
push
repz
icebp
mov
sub
mov
call
xor
aam
cmp
pop
xor
dec
or
dec
sub
add
out
fwait
insb
inc
add
pop
inc
jle
dec
ds
push
push
popa
mov
addl
xchg
test
sub
cmc
adc
ss
loopnew
mov
and
into
mov
push
xor
add
pop
aaa
xor
xor
stos
in
jl
scas
outsb
lods
shrl
mov
and
adc
cmp
mov
mull
push
adc
data16
rorl
mov
fs
outsl
and
enter
add
das
and
insb
mov
xlat
mov
clc
hlt
fldl
jl
and
cmp
fadds
pop
ljmp
sub
jge
insb
sti
inc
adc
mov
pop
popf
call
add
or
sti
xchg
test
adc
add
insb
xchg
jno
push
inc
orl
iret
cmp
leave
sbb
outsb
daa
mov
or
call
test
xlat
push
movsl
cli
mov
mov
test
mov
jne
ret
dec
cwtl
mov
insl
jecxz
mov
fisubl
lock
mov
xor
xchg
push
inc
inc
cmc
call
ljmp
jns
inc
cmc
movb
xchg
pop
scas
and
scas
pop
enter
pop
lock
pop
ljmp
adc
out
inc
or
push
pop
sub
test
jp
call
pusha
out
jbe
shlb
push
push
push
fs
cld
testl
mov
xor
aaa
int3
sbb
pop
imul
mov
outsb
enter
cltd
rcl
test
mov
int3
lcall
out
push
notb
out
mov
or
xchg
stos
loope
stos
loopne
cmp
arpl
fwait
cmp
outsb
adc
repz
das
rol
mov
sbb
mov
xor
dec
sahf
xchg
imul
adc
arpl
outsb
sbb
decb
outsl
pop
add
jno
xchg
fstpl
in
mov
in
pop
sbb
and
imul
xor
addr16
push
cmp
or
in
dec
pop
cmp
arpl
sbbl
jp
roll
nop
xlat
into
pusha
into
xor
push
lods
inc
out
rcrb
add
sub
jae
mov
pop
loope
fs
roll
stos
hlt
dec
pop
stos
pop
movsl
loop
jp
cmpsl
icebp
mov
andb
or
adcl
mov
lds
leave
jp
aad
adc
pop
inc
shll
xchg
inc
xchg
pop
mov
out
adc
push
add
sbb
and
xchg
movsb
lock
dec
jo
lret
push
int
and
lods
push
cli
jbe
jl
daa
fstpl
cwtl
out
xchg
jns
jecxz
pushf
push
cmp
aaa
mov
mov
mov
cmpsl
sbb
fcomip
push
xlat
add
imulb
movsb
std
fwait
repz
testl
and
or
fldenv
shlb
in
adc
and
inc
test
inc
pop
out
sbb
and
jg
cmp
xchg
cs
jns
cmpsl
or
fisttpll
repz
mov
sub
jl
cmp
ret
pmaxsw
movsb
push
ret
xlat
inc
xchg
and
pop
xor
dec
in
adc
rol
jg
xchg
aaa
cmc
fdivr
test
gs
sbb
push
mull
leave
add
aad
sub
ja
mov
push
xchg
push
xchg
nop
cmpsl
inc
addb
mov
popa
scas
roll
push
adcb
js
and
aad
mov
adc
push
mov
sbb
stos
jl
lret
jns
pop
js
popf
adc
dec
sahf
lock
mov
into
dec
pop
lret
hlt
jmp
jnp
nop
icebp
add
decl
mov
stos
mov
sbb
xlat
loope
out
add
shll
stos
dec
lret
xor
pop
aaa
inc
lcall
dec
out
push
sbb
shlb
je
jae
fwait
mov
pop
into
sub
sub
xorl
addr16
jge
jle
sahf
xor
data16
cmc
nop
lods
pop
insl
call
rcll
prefetch
push
fstpt
mov
out
mov
mov
xchg
scas
test
mov
mov
mov
roll
xor
shll
sbbb
insl
inc
inc
mov
stos
loop
adc
les
shll
ds
cmp
mov
fsubp
jmp
test
adc
stos
cmpsb
enter
pop
cmp
loopne
movsl
cltd
call
bound
push
cltd
or
xor
paddb
xchg
dec
fcoms
ss
repnz
or
hlt
sub
je
fimull
mov
and
cli
in
lret
push
xor
jmp
or
daa
aaa
ret
orl
push
xor
test
pop
push
negb
add
loop
andl
add
sub
aaa
push
mov
adc
mov
leave
jecxz
add
inc
inc
cmpsb
out
mov
rcll
fld
sarb
cli
mov
sbb
mov
or
iret
out
push
stos
or
or
lret
ret
je
stos
iret
and
dec
sbb
adc
lock
inc
cmp
pop
aaa
gs
push
adc
fdiv
fisttpl
xchg
in
stos
push
test
adc
or
push
shlb
dec
fisttpll
fisubrl
popa
lahf
in
lret
pop
lods
add
mov
xchg
ljmp
xchg
xchg
sbb
pop
pop
add
pop
cmp
cmpb
je
adc
cmp
sbb
fs
jecxz
ret
xlat
pop
jae
push
jnp
mov
enter
pushf
xor
xchg
jnp
cltd
and
and
mull
out
inc
fldl
or
fbstp
sahf
jle
mov
push
int3
xor
lret
pop
lcall
insb
xor
mov
gs
notl
pop
arpl
mov
pop
and
xchg
push
mov
adc
mov
fbld
sahf
jg
push
jbe
xchg
mov
and
fisubrs
cmp
pushf
inc
cmp
enter
sahf
fs
pop
or
testl
jnp
xor
xor
xchg
cmc
push
into
push
pop
ds
imul
in
jecxz
mov
sub
ss
sahf
push
xchg
popa
sti
aam
pop
add
inc
dec
or
push
dec
lds
lods
icebp
mov
mov
jmp
es
cltd
push
lea
mov
mov
divb
stc
inc
jl
dec
mov
stos
xor
inc
lcall
sub
or
cltd
mov
js
dec
adc
fcmovne
sbb
hlt
push
out
adc
hlt
cld
sbb
push
dec
rcrl
add
and
xor
cli
or
sub
jno
addl
out
push
mov
or
sub
sub
pop
adc
enter
popf
jnp
lcall
dec
in
int
mov
lods
in
or
test
lds
clc
std
sti
or
push
popf
xorb
push
ljmp
sbb
dec
adc
add
jg
sti
dec
mov
pop
add
mov
sbb
push
fildll
clc
mov
fildll
mov
mov
jns
push
test
xor
dec
inc
fs
ret
cmp
mov
adc
xchg
ficomps
jle
shll
sbb
fdecstp
add
sar
mov
nop
and
jns
xchg
dec
or
lahf
inc
mov
ljmp
fnstcw
mov
mov
pop
pusha
les
jmp
rorb
mov
cld
cli
xchg
or
or
in
outsb
xor
adc
inc
fcmovu
lock
jmp
int3
fldcw
rclb
ds
in
lds
in
popa
sub
subb
inc
pop
push
aaa
insl
mov
lahf
inc
and
inc
sub
popa
adc
je
xor
mov
rcrb
mov
xlat
mov
add
inc
push
sub
jecxz
and
in
int
imulb
movsb
pop
mov
aad
push
outsb
ror
mov
inc
sbb
mov
push
cmp
imul
out
sbb
jbe
add
insl
outsl
sti
in
fisubs
mov
hlt
js
jle
shlb
sub
or
stc
js
faddl
push
enter
mov
fstps
cmc
leave
mov
xchg
pop
daa
aas
jecxz
push
push
add
sahf
daa
jg
xchg
dec
sbb
cs
xchg
sbb
in
lods
shrl
xchg
test
sub
add
icebp
mov
or
jle
lods
or
cmp
xchg
push
aad
pop
sub
decb
cmpsb
adc
mov
dec
adc
mov
xchg
push
add
push
add
out
cmp
mov
lods
mov
jle
push
inc
push
fwait
inc
mov
lret
ja
sbb
mov
loop
push
js
or
inc
test
cld
aad
std
push
popa
and
imul
mov
jp
and
iret
xlat
cmc
repz
inc
lahf
push
pop
sarb
pop
jge
sub
push
and
jg
repz
cmp
rcll
and
sbb
xor
in
sub
call
sbb
cmc
loop
push
daa
add
sbb
push
xor
stos
outsl
or
incb
sbbb
xchg
jbe
lret
dec
inc
cmp
mov
adc
mov
inc
push
jg
ds
pop
in
dec
add
xchg
insb
adc
jo
mov
cmp
adc
fisubrs
push
jle
mov
xchg
sbb
pop
hlt
out
popa
sub
push
fbstp
lret
lock
xchg
in
aad
roll
shlb
aam
mov
aam
or
fisubrs
xor
push
sub
mov
icebp
cmp
ret
sub
outsb
adc
test
outsl
sub
cmp
mov
push
fldl
mov
mov
out
js
les
mov
and
mov
jae
dec
fisubl
ret
mov
sub
mov
fldenv
inc
aam
orl
lahf
xor
push
popf
loope
iret
sbb
mov
xchg
xchg
xor
add
sbb
sub
stos
jns
cmp
lret
int
ss
pop
sbb
xorb
jecxz
lcall
std
mov
btr
push
scas
sub
pop
mov
and
ja
push
rorl
rcrb
xor
lds
add
mov
mov
movb
lock
lea
cmp
mov
jns
cli
insl
adc
cmp
mov
mov
mov
test
repz
lss
js
inc
cmp
add
cli
xor
or
addr16
cmp
xchg
sub
lret
insl
jecxz
cmp
fs
mov
push
xlat
xchg
sbb
call
xor
mov
jae
lds
loopne
mov
jae
fisubs
sub
sub
xor
fdivs
test
jb
hlt
push
sub
ds
in
cmp
xor
scas
dec
mov
cli
fistpl
xchg
in
pop
stc
inc
cmp
aad
movb
xchg
sub
push
sub
xchg
aaa
sub
inc
imull
loope
push
lods
mov
icebp
pop
icebp
xor
sbb
inc
and
lods
lcall
add
sub
popa
jl
mov
sti
fldt
mov
popf
out
std
inc
mov
sarl
push
add
fcmovne
bnd
shl
sub
add
ds
sahf
xor
jle
jae
pop
shrb
pop
cwtl
lods
dec
hlt
sbb
mov
arpl
lahf
push
out
repz
stc
rcrb
cmc
jo
mov
scas
adc
into
jb
mov
push
xchg
lea
mov
xchg
xor
fmulp
xchg
push
mov
imul
dec
cmp
push
jns
add
stc
data16
mov
scas
daa
ja
dec
xor
cld
fidivrs
sub
mov
mov
je
rolb
jns
loop
pushf
or
orb
fistl
inc
push
lods
mov
sub
or
push
int
mov
inc
scas
insb
xchg
sub
clc
xchg
cmpsb
xor
or
into
adc
in
divb
adc
lret
jl
subb
in
xor
cmpsb
inc
mov
ja
dec
insl
mov
aaa
loop
imul
lods
cmpsb
in
push
inc
dec
jb
push
inc
dec
xchg
inc
mov
and
cltd
or
lea
rorb
mov
sbb
es
mov
xor
lods
and
hlt
scas
sar
leave
rolb
ljmp
pop
out
mov
sbb
adc
adc
lahf
and
mov
jmp
pop
adc
push
movsb
sbb
mov
inc
repnz
lret
lahf
xorb
pop
fstl
inc
cmp
cld
shrl
mov
cmp
pop
test
fs
rcrb
jmp
adc
ljmp
mov
out
push
fistpl
xchg
lcall
mov
popf
lods
mov
in
outsl
xchg
sub
lods
test
stos
sub
pop
xor
inc
mov
mov
xor
push
pop
xchg
fstpt
mov
sub
fcompl
punpckhdq
enter
or
lcall
and
ret
lcall
aaa
hlt
xor
inc
mov
or
sti
daa
xor
ret
mov
fsubrs
lea
imul
xchg
fbld
imul
mov
fs
inc
cmp
xor
mov
jle
cmp
push
pusha
dec
xor
jmp
incl
mov
popa
gs
mov
pop
aaa
mov
lret
or
xor
push
adc
pop
ret
mov
xor
push
int
movsb
or
pop
and
pop
adc
pop
fisubs
xor
imulb
sub
xchg
bound
testl
loop
int
xor
jnp
lods
add
or
inc
or
negb
dec
arpl
je
push
ljmp
sarl
adc
or
je
out
jmp
lahf
sbb
and
push
and
scas
xor
push
mov
lock
enter
cmp
fcomps
or
dec
sub
cld
xchg
push
sub
or
sbb
iret
or
and
jmp
cmp
add
mov
sti
lds
sti
mov
das
push
call
sub
int3
loopne
aaa
call
push
mov
mov
xchg
sbb
dec
pushf
push
sbb
out
sbb
adc
adc
and
cmp
insb
push
dec
arpl
das
jecxz
push
cltd
cmp
inc
sbb
sarb
pop
lahf
xchg
inc
shll
icebp
je
xchg
xchg
jnp
and
insb
out
dec
sub
insl
cmp
mov
ljmp
mov
xchg
add
push
jge
pop
and
adc
lods
sbb
in
outsb
outsl
mov
jo
imul
sub
dec
push
dec
push
stos
dec
aam
outsb
insb
mov
pop
push
es
push
fs
outsl
lods
push
negb
loop
mov
fdivp
xchg
outsl
xchg
dec
imul
or
fstpl
mov
popa
jle
cmp
push
xor
dec
cld
ret
xchg
imul
jns
inc
sbb
fimull
dec
insb
lret
into
dec
push
out
push
sub
les
mov
stc
int
and
xor
inc
mov
push
outsl
fistps
iret
xchg
sbb
ret
int
arpl
push
out
int
cmc
in
dec
sbb
aam
daa
testl
rclb
into
dec
loop
mov
add
lock
scas
pop
fidivl
or
jp
pop
in
sub
test
lcall
or
lea
jg
fimuls
dec
xchg
lea
cmp
mov
adc
popf
add
cmpsl
mov
add
ror
jecxz
mov
push
push
and
loopne
jb
loopne
stc
sub
jnp
push
les
shll
mov
dec
cmp
sahf
or
sub
enter
ret
mov
jmp
xchg
imul
and
popf
pop
fdivl
ds
mov
jbe
out
popa
popa
fwait
mov
pop
fwait
or
add
popf
jle
cld
in
xorl
dec
jecxz
inc
inc
mov
cmp
mov
pop
cmc
lret
jg
push
addl
or
sbbb
jne
adc
and
movsb
adc
push
pop
xchg
cwtl
fdivr
add
mov
mov
leave
and
stos
das
adc
lods
sub
ficoms
add
stc
jae
out
js
leave
fwait
pop
out
cmc
pop
jge
fwait
jge
insl
rclb
rcrb
mov
in
pop
insb
stos
call
cs
push
jbe
les
lds
leave
dec
and
insl
pop
imul
in
fsts
jle
rorb
shlb
enter
lds
loopne
inc
mov
ljmp
mov
cmc
cmp
lds
bnd
dec
push
in
scas
mov
inc
adc
ja
mov
addl
notl
pop
out
mov
mov
xor
add
fidivrs
xchg
pop
sbb
sti
ss
dec
xchg
fadds
cmp
fildl
scas
popf
pop
dec
jmp
dec
fldl
mov
push
lret
mov
pop
mov
xchg
call
push
mov
pop
push
in
dec
inc
leave
pop
xchg
outsb
push
xchg
mov
fisubs
sbb
xor
push
cmpsl
sub
pop
sbb
aas
cmp
cld
push
clc
dec
aad
pushf
cmp
mov
mov
hlt
mov
add
outsb
hlt
mov
or
dec
mov
xchg
adc
test
dec
mov
lret
lods
pop
mov
sub
adc
popa
in
jne
aad
or
inc
cmp
cmp
inc
imul
mov
and
mov
pop
imul
pop
movsl
push
sub
add
fwait
pusha
inc
pop
scas
insl
sbb
shlb
mov
mov
xchg
add
stc
sti
sbb
and
rcll
enter
add
mov
jg
stos
jl
je
test
mov
out
mov
not
mov
ret
aam
jnp
cs
jecxz
jl
pop
adc
or
or
jns
in
int3
rol
aaa
inc
dec
mov
roll
loope
pop
shrl
out
addr16
out
adc
call
pop
cmp
test
jne
push
ret
lcall
outsl
repz
jl
xchg
cmp
adc
ss
sub
les
filds
stc
inc
jl
push
loope
fstps
push
out
push
in
repz
inc
adc
add
pop
stos
daa
loopne
or
in
mov
insl
and
popa
fstps
out
push
insb
and
js
xchg
dec
dec
mov
inc
into
dec
add
mov
mov
mov
in
xchg
push
xchg
jb
clc
insl
push
add
sbb
add
push
push
cld
mov
xchg
mov
adc
mov
test
stos
mov
or
adc
call
mov
or
fiadds
adc
lahf
shlb
push
out
mov
fidivs
sub
push
hlt
jmp
movsb
xor
clc
dec
dec
bound
adcb
cld
dec
outsb
rcrl
mov
jge
iret
sbb
jne
xlat
bnd
call
or
push
sub
sub
into
test
push
adc
in
stc
sbb
dec
pop
push
out
mov
call
cwtl
movsb
pop
or
inc
jnp
jns
add
jo
into
ds
lcall
jns
cld
adc
cmp
xor
xlat
int3
das
mov
push
mov
adcb
jae
pusha
hlt
repz
pop
cmp
test
mov
jo
fistps
sbb
and
xchg
outsl
cwtl
stos
clc
cld
repnz
das
mov
and
std
aas
adc
xchg
sarl
in
pop
cmp
sbb
aam
add
pop
imull
xor
fildll
sbbb
sub
dec
mov
lahf
arpl
punpckldq
xchg
pop
adc
mulb
jbe
cmp
xchg
push
fsubrl
in
lcall
mov
dec
mov
fcoms
sub
jno
dec
sub
push
mov
dec
popa
add
or
jecxz
lods
flds
arpl
jbe
mov
inc
inc
je
mov
call
iret
fdivl
mov
sbb
ret
test
bound
cmpsb
sub
subl
inc
scas
fwait
aad
das
loopne
into
cmp
mov
sti
inc
inc
loope
sarb
push
inc
push
inc
jge
cltd
loope
pushl
into
mov
pusha
push
pop
fwait
and
or
loopne
mov
xor
mov
ljmp
jae
into
mov
and
xchg
arpl
and
fcom
sbb
push
xchg
mov
jne
out
cli
mull
dec
rcrl
push
cmp
pop
mov
mov
and
sti
pop
popa
movsb
imul
loop
mov
in
cmp
lcall
cmp
adc
outsl
add
leave
mov
es
int3
out
sahf
mov
mov
in
pusha
and
fwait
dec
add
adc
pop
jecxz
lods
ss
xchg
clc
loope
xlat
clc
jle
enter
clc
add
dec
mov
mov
adc
clc
repnz
ljmp
mov
push
sbb
outsb
pop
adc
mov
mov
push
shlb
xor
ljmp
jnp
inc
jmp
cmp
mull
cwtl
xor
jbe
dec
shll
imul
dec
mov
test
mov
jmp
ds
push
data16
mov
sub
push
xchg
jecxz
mov
outsl
stos
sbb
mov
mov
cmp
pop
cltd
push
lock
xchg
push
mov
pop
sub
repz
ret
mov
addr16
mov
enter
out
ds
cmp
xlat
lods
xchg
movsb
pop
lods
pop
push
push
mov
mov
push
cli
inc
dec
pop
jge
jecxz
adcb
inc
inc
and
xor
mov
sbb
mov
imul
xor
arpl
rcrl
in
cmp
add
test
popa
pop
hlt
push
jno
push
test
jae
push
in
adc
or
test
fistpll
les
pop
jns
lcall
bound
dec
pusha
push
sub
mov
sub
dec
mov
in
mov
mov
pop
add
mov
ss
jb
ror
push
insb
push
lea
jns
mov
insl
mov
inc
xchg
daa
fwait
inc
cmp
insl
sbb
jmp
dec
jmp
jl
xchg
xchg
scas
std
aas
mov
repz
inc
mov
mov
mov
mov
xchg
inc
popa
iret
test
call
inc
pop
lcall
pop
icebp
xor
and
jg
or
push
sub
ja
mov
xor
loopne
jnp
cwtl
call
test
cwtl
mov
mov
mov
rcrb
xchg
movsb
scas
and
aam
add
stos
pop
jl
ds
bound
mov
loope
fisubs
pushf
xchg
fdivr
call
push
cmp
stos
std
lock
shl
xor
sbb
adc
mov
das
xchg
sti
jmp
push
xor
in
cmp
leave
jl
inc
fsubs
ja
std
mov
push
push
xchg
mov
imul
pop
test
pop
fsubrl
mov
push
adc
push
inc
in
mov
wbinvd
stos
jno
mov
subb
dec
sbb
fbstp
hlt
pop
out
loop
inc
sub
pop
shrl
sub
sub
scas
xorb
stos
jg
pushf
int
jmp
jne
loopne
push
pop
or
pusha
mov
outsl
push
xchg
outsb
stos
incb
and
inc
popf
ret
cmc
data16
adc
mov
setbe
js
stos
dec
sub
xchg
add
push
xchg
hlt
aad
jge
leave
pop
mov
cmp
cmp
into
in
push
inc
daa
insl
mov
cmp
adc
out
mov
fnstenv
and
cld
loopne
aaa
mov
add
test
adc
push
outsl
xor
cltd
xlat
mov
fcmovne
pop
xor
es
lret
sti
push
stos
jo
adc
cmp
sub
mov
mov
cmp
mov
leave
push
jl
repnz
add
jmp
out
fsts
out
movsl
in
jmp
adcb
xchg
fdivrs
xchg
mov
jle
cld
notl
cmp
nop
add
je
mov
add
xor
aam
dec
sbb
repz
in
xchg
popa
lods
stos
sbb
push
push
inc
mov
std
add
jge
push
adc
push
sub
std
xlat
dec
cli
out
loope
xor
inc
add
insb
jl
ret
ret
test
jecxz
and
in
scas
sbb
xchg
mov
add
cmpsl
adc
fcompl
stos
aam
push
xchg
ljmp
cmp
shr
jo
cmc
daa
push
loopne
outsl
test
lods
push
inc
aaa
imul
lods
pushf
mov
loope
push
mov
add
cmpsl
dec
mov
sbb
mov
repz
jmp
pop
jge
fldenv
loop
jmp
or
popa
sub
flds
lret
jbe
mov
jl
cwtl
or
fistl
out
andl
push
je
test
mov
aam
and
mov
lds
out
inc
sub
xlat
aaa
insl
lods
sbbb
inc
aad
mov
test
cwtl
sbb
sti
addl
cmp
push
cmp
add
das
insb
mov
lods
fcmovbe
mov
sub
addb
or
decl
sahf
clc
iret
add
cli
xlat
push
dec
hlt
fwait
xchg
fdiv
loope
clc
cmp
lock
enter
pop
in
dec
cmpsl
int
jge
cmpsb
fs
in
xor
test
jp
dec
inc
lock
add
imull
xchg
add
mov
push
push
jmp
jmp
lods
scas
pushf
je
sub
rolw
mov
ljmp
mov
mov
pop
or
add
jl
push
xlat
mov
fdivrs
cmp
ljmp
shll
sub
or
push
xchg
xchg
test
dec
sahf
stos
test
mov
sub
fwait
pop
and
insb
sti
dec
or
mov
and
jne
cmc
jbe
movsb
mov
imul
mov
call
xor
idivb
movsl
mov
inc
inc
adc
jg
bswap
sti
xchg
add
dec
xor
icebp
out
popf
ficoml
inc
pop
adc
adc
add
jno
xchg
or
inc
pop
or
adc
imul
xchg
mov
out
ja
inc
push
sbb
loope
mov
cmp
sbb
test
push
sbb
roll
fcoml
test
daa
daa
jle
sub
lea
add
les
jle
cs
add
movsb
sub
std
pop
push
cs
mov
hlt
rcl
xlat
repz
shr
scas
imul
push
cmp
sbb
mov
test
jecxz
imull
cmp
and
cmc
inc
icebp
inc
lds
sar
mov
add
xchg
cmp
pusha
mov
add
mov
jb
ljmp
fldl
push
mov
out
fcmovnb
ss
clc
sub
fbld
mov
mov
or
scas
push
inc
iret
daa
push
rcrl
sbb
add
push
movsb
mov
ret
subb
and
sahf
adcl
into
lods
mov
inc
rorl
notl
dec
sbb
ja
xchg
mov
or
push
orb
dec
cmp
test
jle
loop
lret
in
lcall
scas
ja
cs
push
jg
fadds
sarl
daa
pusha
mov
lods
stos
adcl
add
and
cmp
push
xor
in
pop
sub
jne
xchg
shll
movsl
pop
es
cmpsb
rolb
xor
mov
scas
jl
inc
cs
cmp
pop
lahf
lcall
in
out
push
dec
stos
xor
cmp
scas
xor
push
mov
lcall
jle
push
inc
mov
cmc
and
xchg
clc
sub
xchg
and
in
call
xchg
dec
sbb
mov
nopl
lcall
jge
fisubs
jne
mov
test
and
dec
jle
sbb
mov
add
fwait
ret
xchg
das
cmpsl
daa
pop
adc
jmp
pop
pop
pop
cwtl
mov
aad
xchg
mov
test
adc
cmp
push
movsb
add
idiv
xor
push
imul
cli
std
jb
mov
inc
sahf
cmp
sbb
mov
in
dec
xchg
jl
lods
adc
in
mov
out
sahf
mov
mov
loope
jl
lret
fsubrs
inc
mov
arpl
loop
push
pop
pop
mov
pop
test
or
sbb
sbb
mov
push
mov
fisttpll
mov
roll
pop
aad
mov
add
cmp
mov
aad
stc
cmp
notw
mov
psubb
cmp
pop
arpl
dec
jg
sub
jl
jae
push
loope
xor
pushf
roll
fs
adc
xchg
inc
add
lret
push
nopl
bnd
aas
sahf
loopne
bound
sbb
push
push
and
repz
test
mov
pop
mov
les
imul
mul
pop
mov
add
repz
out
push
jge
mov
jge
call
clc
gs
in
je
pop
cwtl
jmp
jle
mov
testb
xchg
adc
inc
mov
fmulp
repnz
add
sbb
fldcw
pop
das
ds
fmull
jns
fcmovnbe
pop
bound
xchg
ss
jns
negb
adc
icebp
sbb
add
inc
aas
cwtl
call
push
stc
dec
enter
loope
cmp
push
mov
test
fsubrp
xor
fs
push
jle
mov
push
lret
fisubs
xchg
mov
mov
cmp
addb
xlat
mov
fwait
push
pusha
testb
orb
jno
mov
stc
int
and
add
arpl
je
xchg
test
pop
pop
repnz
rcrl
push
adc
xor
pop
lock
lret
sti
es
mov
inc
mov
out
ret
sti
dec
lods
or
xlat
mov
shlb
sbb
nop
xadd
adc
adc
movsl
mov
ret
xchg
cmp
push
mov
pop
or
push
cmp
jp
sbb
add
cld
cld
pushf
jo
lahf
mov
mov
dec
push
sub
sti
scas
popa
cmpsb
push
lods
and
and
pusha
ret
lret
add
sub
test
xchg
pushf
cmp
lods
scas
pop
into
xlat
mov
dec
inc
add
cmc
push
inc
sarl
stc
in
pusha
les
fld
lret
dec
dec
mov
insl
lods
add
pusha
sub
outsb
rorl
jge
jl
sub
lock
jno
mov
mov
stc
sbb
xor
ja
cmc
outsb
es
stc
int3
ds
js
mov
jae
inc
lcall
and
and
ja
adc
int
loopne
sub
repnz
adcl
and
out
inc
jle
xlat
add
test
mov
jle
mov
popf
mov
popa
jmp
cwtl
push
andl
mov
es
inc
cmp
cli
imul
add
scas
mov
push
movsb
xchg
scas
ror
cmp
jg
inc
das
orb
icebp
mov
pop
dec
cmp
jnp
mov
mov
scas
push
inc
das
mov
push
xor
dec
in
fisubrl
or
shll
jg
fmulp
mov
shll
sub
aam
mov
sarl
mov
and
adc
mov
aas
adc
pop
push
lahf
adc
xchg
mov
mov
call
fsts
cld
in
mov
hlt
pop
scas
or
cmp
cltd
pusha
xchg
popf
stos
sbb
pop
insl
xchg
inc
inc
sub
adc
out
fst
pop
in
pop
addb
add
inc
gs
push
xorb
pop
push
ss
in
or
add
xor
shlb
hlt
xor
sbb
sub
inc
js
sahf
mov
xchg
mov
dec
inc
jns
jae
sarl
ss
adc
xorb
push
and
dec
aad
arpl
mov
sub
pop
xor
cmp
outsb
sub
cmovno
push
in
dec
pushf
mov
imul
movsl
ret
pop
cmp
sti
negl
imul
cs
lret
jnp
and
sbb
dec
insb
or
pop
test
popa
sub
icebp
inc
jmp
inc
lods
xor
adc
or
pop
push
push
inc
and
loope
loopne
push
stos
and
push
movsl
mov
lods
xchg
sbb
test
sarb
mov
inc
jmp
mov
xor
leave
aaa
push
dec
test
into
xor
cmp
stos
movsb
pop
or
mov
lcall
jge
in
outsb
and
jl
mov
fs
mov
dec
mov
hlt
xor
push
mov
cmc
out
mov
bound
scas
movhlps
mov
repz
test
pop
mov
loop
addr16
add
test
jb
add
xor
repnz
fstps
cli
jb
stos
stos
mov
add
pop
sti
inc
bound
clc
dec
or
mov
fwait
xor
icebp
sbb
movsb
lret
mov
cld
cmp
pop
je
adc
les
lret
in
jns
stc
and
mov
jmp
dec
dec
fistpll
lods
adc
jmp
orb
rorb
pop
es
fists
or
cmp
inc
sbb
clc
ss
out
fxch
push
cld
mov
xchg
out
sbb
dec
adc
ret
push
lcall
dec
jl
jne
mov
into
fbstp
jnp
fsubl
mov
jo
pop
and
bound
push
or
test
stos
dec
inc
sub
les
push
and
dec
pusha
sub
inc
push
lock
mov
xchg
mov
out
or
jo
fsubs
movsb
cs
pop
lea
and
cmp
xor
and
movsb
and
inc
cmp
pop
imul
and
mov
xchg
push
cmpsb
es
mov
insl
loope
sub
icebp
mov
sbb
xadd
aad
cmpsb
sbb
loopne
hlt
insl
inc
inc
cld
loope
aaa
int
mov
rcrl
andl
lcall
lds
or
adc
xchg
sbb
mov
in
insl
out
mov
movsb
sbb
dec
push
adc
das
push
add
aad
repnz
jo
ficoms
out
inc
popa
int
and
mov
mov
cmp
mov
xlat
sbb
nop
sub
mov
repnz
nopl
in
fiadds
mov
loop
test
cmp
adc
push
push
in
test
int3
in
pop
leave
pop
gs
repnz
lret
dec
sti
ret
mov
sbb
cmp
sbb
into
mov
cmp
adc
pop
fnstcw
or
pop
pop
ljmp
mov
ljmp
lret
jmp
jo
enter
dec
cmp
pop
sbb
mov
jb
jo
invd
dec
inc
outsb
ljmp
loopne
xchg
push
dec
cmpsl
mov
insl
orl
jecxz
das
fstpt
idivl
mov
je
xor
out
iret
pushf
out
mov
xchg
jne
jnp
decl
shll
out
in
add
and
jge
rcrl
out
inc
fsubs
dec
in
fcos
inc
lea
sbb
dec
add
or
das
xor
jne
dec
fists
lds
and
out
xchg
pop
mov
enter
xchg
push
mov
cld
push
pop
pop
and
xchg
mull
or
rcr
into
mov
dec
pop
add
push
jne
int3
xchg
std
ds
outsb
cmp
pop
cmp
ja
movsb
mov
pusha
jmp
add
out
jne
loope
jle
setle
ja
pop
and
test
data16
popf
jle
std
lds
lret
adc
movsb
sarb
popf
sub
jo
faddl
cmp
repnz
ja
dec
test
cmp
pop
jge
fsubr
pop
je
jbe
rcr
or
push
repz
or
push
dec
adc
xchg
test
xor
cli
xlat
mov
ret
lcall
je
addr16
insl
std
cli
daa
aad
mov
jb
jmp
adc
jg
ret
jmp
imul
xorb
push
popa
xchg
ficoms
pop
jbe
js
dec
loope
push
push
in
test
xor
adc
lret
push
dec
jno
mov
pop
ret
xchg
push
repz
popa
into
sub
nop
dec
mov
push
das
cs
pop
icebp
lret
aam
add
lea
das
xor
push
stos
jne
pop
jo
jne
mov
ret
cli
jbe
and
in
fwait
sar
fdivrs
jmp
pop
pop
lret
mov
pop
outsb
aam
pop
ret
sbb
fisubs
mov
jle
push
mov
test
sub
mov
xor
aas
jb
testb
stc
inc
loop
dec
xor
mov
aaa
cmc
cld
cld
sbb
int3
and
dec
imul
xchg
test
xchg
fs
pop
inc
push
sahf
shll
movsb
mov
ja
xchg
mov
sbb
enter
jne
ljmp
mov
xchg
xchg
ja
data16
adcb
loop
mov
add
jo
pusha
xchg
lods
add
xchg
and
pop
pop
std
sbb
sahf
add
xchg
or
push
ret
mov
sahf
test
adc
cmp
jmp
dec
mov
sub
cld
push
notb
mov
ljmp
mov
imul
js
pushf
mov
int
cmpsb
or
sub
fcompl
mov
iret
sub
out
inc
aad
adc
pop
stc
xchg
shl
mov
add
xchg
and
inc
xchg
loope
cmp
in
mov
dec
pop
cmp
arpl
sub
sbb
dec
arpl
int3
jnp
enter
les
adc
in
aas
jl
subl
ret
in
addr16
push
push
push
rcrb
push
or
sub
cmpsl
adc
enter
sbbl
xchg
ss
pop
dec
adc
iret
mov
inc
jg
orl
fdivs
push
push
cmp
fs
cmp
bound
or
adc
fnstcw
push
xor
lock
push
es
xchg
mov
pop
adc
clc
inc
or
lock
xchg
loopne
or
mov
popa
sbb
inc
das
sub
aas
mov
daa
aaa
add
xchg
fidivs
push
cmp
push
mov
push
pop
ss
movsl
jmp
add
sarb
xor
xchg
cmp
movsb
sbb
fistps
adc
aam
jmp
jge
xchg
push
mov
mov
cmpsl
mov
add
push
shrl
mull
ffreep
adc
daa
mov
hlt
mov
xchg
xlat
movsl
call
add
rolb
mov
fildl
xchg
ret
cmp
fnsave
clc
shrb
xchg
outsb
adc
mov
into
ret
xchg
movsl
aad
ret
xchg
xor
pop
cmp
push
add
lret
dec
insb
jo
mov
push
xor
into
fpatan
cmp
inc
stos
int
lret
mov
repnz
sub
mov
pop
mov
or
insb
fidivs
out
cmc
data16
jns
inc
aas
jmp
aas
pop
dec
popf
movsl
outsb
adc
pop
clc
adc
imul
adc
push
adc
mov
adc
inc
xchg
in
sub
fbstp
pop
outsl
pop
pop
jge
inc
js
push
xchg
mov
sub
cwtl
das
adc
xor
cmp
mov
xchg
sub
test
pop
adcb
or
movsl
xchg
sbb
cwtl
inc
std
outsl
daa
jno
push
inc
icebp
aas
mov
gs
mov
lcall
and
xchg
dec
sub
pop
lods
daa
lods
pop
sbb
and
jo
stos
mov
add
fcmovb
adc
cs
lahf
lock
test
je
mov
or
pop
addr16
adc
repz
jge
in
in
xor
lret
mov
xchg
or
push
iret
push
mov
xor
fists
dec
jge
jl
idivl
fmul
jbe
pop
jo
xchg
xchg
ljmp
sub
pop
or
pop
fstps
cvtps2pd
adc
mov
pop
les
dec
movsl
loop
pop
add
adc
dec
push
jge
adc
test
mov
lock
xchg
jmp
ljmp
mov
jecxz
mov
jb
xchg
sbbb
pop
aam
inc
rclb
inc
pusha
fsts
jecxz
aas
add
addl
shrl
mov
in
and
xchg
fists
pushf
in
negl
push
mov
pcmpgtd
outsl
sarl
mull
pop
lock
add
jle
mov
jno
pop
and
aam
testb
sbb
enter
popw
inc
pop
push
outsl
addr16
and
cwtl
ja
leave
dec
xlat
sub
inc
lds
mov
cld
stos
pushf
clc
pop
sub
jp
and
lds
stos
push
rclb
jbe
lock
sti
std
dec
dec
push
gs
mov
cltd
out
add
ss
inc
adc
repz
addr16
loop
dec
ret
roll
xor
imul
jne
test
inc
mov
pop
push
push
sbb
roll
call
pop
inc
shrb
dec
stos
xchg
jecxz
jl
and
mov
cmp
sbb
xchg
jge
or
sub
int3
add
in
push
adc
sub
dec
mov
push
cwtl
in
ret
sti
insb
std
shlb
dec
andl
add
pop
scas
xchg
rcrb
or
sub
adc
outsb
jle
cmpsb
jo
mov
gs
cmc
frstor
mov
or
inc
inc
xchg
add
lods
cld
or
mov
mov
arpl
push
loope
lea
add
mov
push
cmp
adc
int3
push
mov
pusha
sub
push
pusha
lret
mov
loopne
fstpt
test
imulb
popa
outsl
stc
jne
call
cs
jbe
push
scas
leave
sbb
xchg
loopne
es
sub
and
push
or
or
jg
mov
cmp
lea
inc
push
scas
jne
adc
jmp
stos
fcoml
rep
jl
in
sbb
mov
popa
adc
into
and
sahf
cmpsb
push
push
adc
mov
fs
decl
sub
icebp
dec
bound
stos
ficoml
sahf
aad
dec
jg
and
jno
adc
xor
jle
pop
sti
enter
outsl
jbe
fdivp
xchg
shlb
mov
dec
sbb
pop
or
popf
test
aad
mov
push
mov
insb
sbb
adc
jnp
jp
dec
xlat
ljmp
ljmp
xor
and
mov
adc
xor
aaa
and
ret
adc
js
cld
mov
mov
mov
loop
pop
shrl
fldt
add
pusha
cmp
cmp
jb
stos
nop
and
mov
xchg
mov
sbb
xor
in
and
and
cmp
movsb
lds
xchg
dec
inc
adc
sub
mov
shl
inc
in
and
xchg
mov
xor
cmpsb
xchg
roll
jle
ds
stos
lds
loope
dec
insl
ds
sti
inc
shll
adc
inc
mov
mov
inc
xor
sbb
repnz
fnstcw
into
add
fsubl
mov
fisttps
adc
pushf
inc
xor
lods
pusha
xchg
mov
hlt
hlt
loopne
ret
inc
pop
inc
pop
mov
std
push
in
inc
dec
adc
shll
pop
add
nop
cmp
in
mov
fcomps
mov
inc
mov
jbe
andl
or
pop
sbb
jb
mov
shrl
pushf
gs
add
add
sahf
mov
stos
xor
sub
scas
dec
cmp
shlb
pop
fwait
iret
or
mul
jo
test
pusha
loope
loope
add
pop
or
stc
push
mov
fstps
mov
movsl
pop
aas
bound
ss
enter
adc
enter
loope
ret
out
jg
xor
rorl
mov
xchg
pause
es
pop
divb
sarb
sbb
out
jecxz
xchg
fnstcw
movsl
or
pop
push
sarl
sahf
shr
inc
lcall
aas
pop
push
mov
clc
lahf
mov
jbe
lret
ficoms
hlt
or
mov
popf
xchg
movsl
add
pusha
push
adc
and
stos
or
cmp
sbb
mov
cmp
notl
add
flds
add
lret
inc
sbb
out
aad
repnz
add
jns
test
pop
lods
fistpl
insb
decb
xchg
testb
movsb
dec
addr16
adc
addl
leave
pop
lea
xchg
sbb
out
mov
or
add
pextrw
inc
lds
mov
popf
in
jnp
add
imul
in
jns
pop
insb
stos
mov
jmp
xchg
lock
xchg
jns
jp
mov
mov
or
daa
adc
call
aaa
and
fcoml
jo
mov
add
fstl
test
repnz
cmp
and
loop
and
call
std
repz
cmpsl
shll
enter
push
xchg
pop
and
pop
jb
ret
or
les
call
std
jo
add
adc
sub
movsb
jge
ret
and
sub
jns
pop
jne
ja
shlb
aas
bound
loop
push
les
flds
aad
adc
nop
xlat
insb
inc
movsl
mov
jb
rolb
adc
aam
dec
sbb
pop
inc
adc
mov
call
das
ljmp
cwtl
push
cmpsl
shlb
inc
enter
mov
jbe
lahf
cmc
cmp
lods
xchg
movsl
jl
fistpll
and
pop
xorl
lea
cld
cmp
fnstsw
lods
stos
in
divl
xchg
in
cmp
je
or
and
inc
cmp
adc
add
cmc
xchg
cmp
jnp
jl
inc
mov
test
push
arpl
scas
sbb
xchg
loopne
mov
mov
mov
jl
inc
or
pop
je
push
bound
pop
jle
jg
aas
mov
lods
test
shl
and
icebp
filds
push
fwait
sbb
inc
sbb
in
data16
push
mov
in
loopne
int
mov
ljmp
cli
dec
cmpl
xchg
scas
ret
adc
cwtl
sti
xlat
clc
incl
xchg
in
cmpl
in
mov
jecxz
orl
push
fwait
lea
aad
sahf
fdivl
out
xor
mov
inc
push
adc
sbb
sub
mov
pop
repnz
out
or
bound
lock
in
xor
sbb
pop
xchg
jns
sub
stos
popf
mov
call
xchg
lods
cmp
ljmp
jmp
and
inc
dec
fdivs
lea
shlb
outsl
addr16
jb
fcomps
mov
mov
cld
jg
aam
push
in
cli
data16
lret
fstl
arpl
sbb
dec
outsl
lods
and
push
bound
jge
nop
sub
and
push
mov
sub
fs
dec
mov
rorl
cmpl
imul
mov
adc
push
and
les
cmpsb
gs
les
sub
lock
scas
mov
in
pop
scas
out
ds
sbb
decl
loope
add
cmc
mov
lock
mov
out
addr16
jmp
in
testb
mov
inc
jbe
ret
sbb
ljmp
sub
or
loopne
and
int3
or
inc
int3
or
adc
mov
stos
js
mov
test
pop
out
sbb
aaa
and
mov
popa
test
xor
dec
sbb
jecxz
or
ficomps
icebp
cmp
in
mov
push
or
fbld
mov
je
sbbl
test
pop
loopne
xchg
flds
out
dec
xchg
add
push
fdiv
adc
pop
sbb
jne
insl
les
jne
xchg
jnp
sbb
or
int
jnp
and
shll
dec
addb
sbb
btr
dec
sahf
inc
fsubrl
leave
fnsave
jge
pop
hlt
das
out
sbb
mov
lods
int3
push
jae
stos
mov
push
sub
jg
imul
shlb
aas
inc
lods
mov
xor
or
or
and
scas
jg
sub
and
test
xor
das
and
sbb
push
dec
rclb
lahf
xor
loopne
sbb
test
sub
inc
adc
mov
and
jl
loope
jmp
inc
mov
out
ficompl
icebp
pushf
ret
sub
scas
xchg
imul
mov
scas
adc
inc
mov
cmp
cltd
cmpsb
aam
fidivrl
pop
and
mov
subl
inc
and
pop
out
jp
stos
ja
lds
jno
je
in
je
sub
cmc
mov
xchg
push
jne
les
mov
cmp
mov
jmp
mov
sti
add
xchg
mov
subl
mov
das
out
jnp
lock
xchg
ljmp
jp
or
sub
push
es
vmwrite
repnz
mov
lcall
dec
mov
xor
xor
pop
cmp
and
gs
cs
repnz
and
xor
push
dec
cmpsl
popf
aam
fs
jl
ja
dec
xor
sti
fsub
inc
push
mov
xchg
mov
jle
and
fcomp
or
jge
je
push
xchg
sub
fdivl
and
sub
cs
mov
lcall
jae
lds
in
xor
leave
test
pushf
mov
or
pop
ret
imul
repnz
and
clts
test
mov
sbb
xchg
dec
pusha
jb
lret
je
xchg
sti
mov
ss
xor
data16
loopne
in
inc
push
mov
push
cmpb
push
jae
inc
dec
movsb
add
and
cmpsb
mov
addr16
and
out
jecxz
dec
enter
sbb
gs
jle
mov
out
movsb
stc
fucomip
or
and
sub
dec
icebp
sbb
sub
sub
mov
iret
pop
cwtl
jnp
or
jbe
inc
mov
outsl
pop
mov
sbbl
es
xlat
stos
das
sti
jecxz
rorb
mov
xchg
int
in
and
sub
cmp
add
add
dec
mov
lahf
fisubrl
popf
inc
inc
add
in
sbb
fstpt
orb
dec
or
mov
daa
mov
aad
mov
ja
jge
add
pop
repnz
xchg
sub
data16
push
stos
sti
jb
in
not
les
push
movsb
dec
push
jno
roll
or
xor
pop
jno
add
movl
mov
mov
les
repz
sarb
xor
sub
pop
adcb
pop
fstps
cmpsb
data16
inc
arpl
into
hlt
addps
or
lret
enter
and
stc
pop
insl
xchg
cmp
xlat
and
xor
test
jo
loop
inc
aas
cltd
push
cs
ret
data16
out
mov
lods
jmp
jl
add
push
nop
fwait
xchg
iret
out
fdivrs
adc
mov
add
xchg
xchg
and
push
or
lret
fsubs
xor
cmp
jo
clc
push
inc
in
gs
jp
clc
in
pop
jno
pushf
iret
push
mov
xor
xchg
mov
and
cmp
lea
scas
xlat
jae
jb
stos
sub
dec
mov
xchg
cmpsl
inc
adc
aas
popf
imul
loop
xchg
cmpb
int
push
dec
cmp
in
pop
popf
testl
loop
jae
inc
sub
mov
jmp
dec
push
mov
movsb
popa
push
sub
xchg
movsb
cmpsl
gs
in
pop
jno
outsl
xor
push
sbb
pop
in
or
inc
mov
add
cmp
stos
and
negl
xchg
mov
mov
sbb
xlat
dec
cmp
xchg
mov
insl
in
stos
fwait
mov
push
and
mov
ficompl
call
fnstcw
xchg
pop
test
les
xchg
push
pop
push
mov
add
into
ja
jecxz
lcall
fadd
xchg
mov
mov
lods
lock
xchg
hlt
lea
jne
jp
cmp
adc
jle
cmpsb
and
inc
or
std
fwait
movsb
loop
out
hlt
xlat
sbb
xchg
xor
enter
das
mov
ja
stos
call
int
mov
sbb
jbe
shr
fldenv
jmp
pop
xchg
mov
jo
pop
xchg
inc
fisubrl
roll
fwait
lods
mov
data16
stc
jb
dec
mov
cmc
arpl
mov
test
mov
call
out
and
lods
stos
and
in
scas
cmp
and
and
cltd
sub
xchg
jb
mov
cmpsb
jmp
popf
xchg
or
xchg
jp,pt
pop
mov
pop
rorb
cmp
or
or
mov
cmp
cmp
shl
loopne
cld
mov
ret
lcall
inc
push
ja
adc
xorl
jnp
adc
insl
pop
sub
cld
test
les
add
sub
mov
fcmovnu
or
hlt
mov
js
inc
or
jb
loop
inc
lock
jle
mov
add
stos
pushf
pop
xor
pop
mov
dec
inc
jne
in
push
mov
test
cmc
lods
int3
mov
mov
daa
leave
lock
repz
in
loopne
sbb
leave
imul
mov
mov
jb
ds
sbb
sbb
in
mov
scas
add
popa
fldenv
adc
sbb
stos
sub
cmp
adc
cltd
popf
out
fldcw
jno
pop
stos
sub
dec
xchg
jbe
xchg
out
es
inc
int3
push
jns
rcrb
sub
lds
das
addb
cld
sbb
mov
ret
mov
imul
pop
push
lret
shl
cmp
hlt
and
xor
scas
mov
or
push
mov
jmp
cmp
push
xchg
adc
push
ret
shlb
pop
lds
adc
ja
xchg
jns
xor
daa
pop
filds
test
pop
clc
inc
push
rclb
xorl
mov
rcrb
lahf
adc
jb
sub
dec
stos
sti
pushf
stc
inc
in
adcb
orl
cmp
lods
stos
insb
sbb
jmp
sbb
sbb
outsl
mov
es
jnp
aad
mov
mov
movsb
inc
push
mov
or
sti
mov
push
pop
stos
adc
mov
test
cmp
movsl
popf
and
jno
lret
imul
dec
cwtl
into
fistps
out
inc
cmpb
insl
adc
xor
test
xor
and
push
rorl
loop
jo
cmp
mov
fnstenv
bound
and
cmp
mov
sti
inc
in
pushf
pop
mov
push
mov
cmp
enter
mov
pop
mov
fdivr
adc
dec
arpl
and
shrl
pop
icebp
and
in
mov
adc
pop
inc
orl
ret
setl
xor
pop
xor
sbb
ds
das
ret
mov
xchg
addr16
xor
es
gs
jns
or
dec
add
xchg
xor
in
call
data16
sbb
dec
mov
or
sti
test
sbb
insb
sarl
cltd
dec
lahf
mov
cvtpi2ps
xchg
cmp
lahf
push
push
ss
js
jbe
and
sbb
or
leave
mov
mov
pop
jbe
ds
ljmp
push
add
iret
dec
or
mov
or
outsb
inc
cltd
fdivrs
xor
push
out
gs
rcr
adc
or
fdivp
jmp
push
jl
cld
adc
sbb
fisttps
pop
jns
enter
outsl
jno
int3
sub
pop
cmp
mov
add
aaa
xchg
and
in
sub
adc
lods
xor
mov
arpl
add
in
adc
test
in
xor
stos
into
lcall
je
les
mov
pmullw
popf
in
sbbb
mov
cmpsl
cmc
push
cli
or
push
loope
pushf
xchg
repz
es
imul
jle
cmc
push
xor
mov
mov
jbe
sub
cld
faddl
fists
mov
xor
test
int3
mov
jge
add
addr16
cmp
enter
mov
mov
pop
lea
jne
hlt
jmp
out
jp
stc
xor
mov
xchg
add
loop
fmul
mov
cmpsb
sbb
cmc
insl
or
hlt
pusha
lcall
ja
jno
iret
test
and
xchg
dec
mov
ds
cmpsb
mov
sbb
sub
xchg
lret
mov
inc
sbb
scas
call
add
xor
sbb
xchg
dec
fcomi
jg
pop
outsl
ja
sub
fisubrl
movsb
xor
cmp
repnz
adc
rorl
ljmp
hlt
mov
cmp
scas
fcoms
xchg
lahf
and
arpl
add
out
imul
fldenv
sub
inc
jl
ja
cmp
xchg
popf
repz
and
adc
sahf
imul
cmp
out
pop
adc
xchg
imul
shll
fbld
xor
push
sahf
mov
sub
sbb
xchg
subb
mov
cmc
out
daa
push
repz
jp
repnz
xor
movsb
cmp
push
sub
cwtl
mov
movsb
or
leave
nop
js
adc
test
shrb
insl
xchg
push
in
cmp
int3
sbb
mov
stos
inc
shl
pop
call
fwait
xchg
data16
out
adc
or
sbb
mov
js
lds
sub
add
hlt
ret
sti
sti
out
mov
in
jae
sbb
inc
sbb
ret
pop
and
xlat
inc
jae
pushf
sbb
into
popa
cltd
xchg
add
test
xlat
mov
movsb
cmp
add
pop
mov
mov
or
inc
and
imul
enter
inc
fwait
in
out
jle
inc
mov
and
push
ss
pop
push
add
mov
mov
jne
cltd
pop
dec
lock
out
sbb
mul
mov
fs
stos
sbb
pop
lcall
cmp
inc
adc
nop
clc
imul
cmp
movb
mov
mov
jnp
cmp
mov
or
insl
rcll
add
push
in
mov
inc
mov
call
mov
pop
insl
push
jne
adc
push
rcll
mov
dec
cmp
dec
mov
xchg
inc
jp
cmp
mov
jno
aas
cmp
pop
sub
sti
fidivrs
shll
or
lds
sahf
leave
in
push
mov
and
jo
mov
push
cmpb
jp
inc
out
cwtl
jne
xchg
cmp
mov
or
add
inc
mov
mov
xorl
fs
dec
adc
xchg
and
jmp
push
iret
jbe
dec
lea
orb
ja
jle
cltd
jl
inc
into
lahf
sub
add
rorl
pop
fsts
cmp
loopne
cmpsb
lods
jno
mov
and
dec
test
int3
push
arpl
sub
add
adc
mov
cli
cmp
movsl
lret
les
ds
push
and
jg
aaa
lcall
test
rorb
std
imul
add
popa
jmp
xchg
mov
mov
repz
or
sub
xlat
mov
jae
pop
scas
xchg
cmpl
in
mov
cwtl
iret
jmp
das
fstpt
sbb
faddp
pop
pop
outsl
xchg
sahf
in
mov
inc
test
mov
cwtl
ror
jecxz
ret
pop
xchg
xchg
cmp
inc
push
inc
sbb
mov
mov
sbb
mov
addl
daa
out
push
cs
rolb
mov
sahf
dec
in
jl
test
test
int3
mov
cli
xchg
dec
cmp
leave
push
mov
mov
js
mov
and
leave
mov
fdivrl
imul
fwait
inc
and
insl
test
pop
pop
lea
mov
pop
jge
les
jecxz
dec
in
mov
mov
pop
insb
std
jecxz
sub
cmp
mov
push
lea
rcrl
inc
in
lock
mov
xor
and
in
es
int3
inc
inc
push
xor
push
pop
jl
iret
leave
hlt
ret
das
push
fistpl
add
cmp
pop
cmp
cltd
popa
mov
jnp
popa
cmp
daa
popa
imul
jmp
ficompl
jmp
push
lods
or
and
push
and
out
mov
mov
and
push
adc
lret
rcll
int3
cmp
stos
push
sbb
cmpsl
add
push
dec
cmp
cld
mov
cmc
or
setns
jecxz
push
push
or
mov
sub
inc
hlt
adc
paddsw
push
aam
fs
movsb
jecxz
dec
mov
repz
movsl
mov
push
int3
out
aas
add
dec
inc
data16
pop
popa
fcmove
xchg
pop
orb
dec
insb
or
dec
pop
or
orl
jp
arpl
hlt
movsb
mov
je
and
dec
add
adc
lock
into
shll
fistpl
roll
nop
movsl
jno
cmp
add
sti
push
in
js
dec
xchg
loopne
adc
mov
rcr
inc
xchg
add
sub
push
movsb
sub
push
pop
cmp
icebp
inc
cmp
shll
pop
mov
test
cmpsl
nop
sarb
fdivl
mov
hlt
aam
loop
dec
cmp
xor
xchg
dec
dec
fbld
jp
mov
sub
sahf
sbb
cmc
and
mov
xchg
lret
xchg
or
jp
cmp
popl
jo
push
nop
push
stos
and
int
decl
data16
cmpsb
push
clc
push
mov
popf
mov
pop
int
xor
movb
add
push
and
mov
pop
aam
sti
dec
cmp
add
out
outsl
imul
jge
repnz
inc
sub
aaa
loopne
jne
flds
test
xor
and
pusha
xchg
dec
mov
xchg
in
insb
pop
aaa
mov
in
ret
pop
pop
cmp
push
sub
adcb
pop
cmpsl
push
daa
inc
xor
js
rcr
lock
xchg
or
mov
or
loopne
adc
cld
fnstsw
add
jae
icebp
xor
outsb
pushf
xchg
mov
or
xchg
inc
dec
or
stos
addb
int
sub
divl
ror
movsl
shrb
adc
mov
xor
mov
test
push
ret
stos
repnz
inc
sahf
ds
pop
add
push
iret
and
loop
fwait
lret
dec
sti
push
aas
mov
into
dec
xchg
push
sbb
pop
std
out
lods
jb
jbe
shrl
pushf
test
push
mov
dec
or
xchg
add
cmp
enter
jp
pop
lods
shrb
sarb
shlb
shrl
insl
test
mov
push
popf
cli
cmp
int3
sub
push
xchg
hlt
cmp
xor
inc
leave
cmp
sbb
iret
pop
addl
and
loope
mov
loope
mov
dec
mov
out
in
mov
mov
cmp
lds
pop
shrb
sbb
les
dec
mov
inc
mov
pop
aad
mov
pop
pop
les
shll
ja
in
outsb
pop
jecxz
and
fisttps
jmp
cmpsl
aam
xchg
dec
imul
xchg
cmp
xabort
dec
nop
mov
aaa
xchg
jns
xchg
or
or
mov
out
into
lahf
push
cmc
jmp
jo
arpl
fsin
nop
js
out
inc
pop
repnz
es
mov
aam
ss
fcoms
subb
mov
pop
mov
fstpl
jo
dec
or
cltd
lds
mov
fsubrs
jnp
pand
cmp
sub
sub
mov
icebp
popa
rolb
imul
gs
cmp
pop
sub
xchg
pusha
pop
add
mov
addr16
mov
outsb
cmp
mov
add
imul
out
fwait
cmp
inc
cmp
sbb
xchg
insb
mov
sbb
jno
pop
pop
popf
jns
cmpsb
popl
cmp
nop
outsb
jge
push
decl
clc
dec
es
pop
repz
pop
lahf
mov
rep
mov
in
ss
icebp
leave
mov
jl
fidivl
jge
mov
rolb
insb
and
lcall
xor
mov
cmpsb
insb
xor
cmp
shr
mov
pushf
imul
pop
scas
fdivs
pop
sti
sbb
xor
jg
aaa
mov
pop
adc
pop
and
ss
ret
push
add
xor
push
add
sub
jmp
jmp
cmpsb
stos
cwtl
test
cltd
pop
xor
mov
stos
int3
js
xor
pushf
cwtl
or
cwtl
jne
pop
pop
inc
sbb
shll
xchg
pop
inc
add
cmp
pop
icebp
pop
add
pusha
addr16
test
divl
jg
arpl
mov
cltd
pop
repnz
jnp
and
es
sub
mov
cmp
scas
jmp
je
mov
add
push
pop
cli
fiaddl
lods
sub
lock
mov
dec
insl
xchg
ret
push
jle
mov
cld
push
scas
mov
mov
xor
leave
mov
mov
push
jp
lret
fidivrl
xchg
and
jnp
sbb
ret
into
in
rcll
in
jle
xchg
cmp
into
xor
out
je
pusha
fwait
jns
adc
and
lock
out
shrb
jle
daa
lods
aam
loop
inc
pop
or
sbb
out
js
push
stos
imul
out
ficoml
mov
push
shrl
jae
cs
push
sti
jmp
out
ret
jle
inc
outsb
jge
push
or
mov
mov
xor
sbb
cwtl
jno
add
inc
test
adc
pop
fisubs
jmp
xor
mov
inc
mov
lahf
imul
jecxz
test
call
cmp
push
inc
stos
nop
out
in
sub
lock
fsubrp
fwait
sbb
data16
or
mov
fdivs
xchg
mov
add
insb
mov
ss
inc
iret
dec
xchg
adc
cmp
mov
pop
movsb
repz
mov
mov
or
inc
stc
in
filds
pushf
loopne
mov
fsubl
movsb
xchg
nop
sub
push
fists
in
loop
out
mov
sahf
ljmp
xchg
test
xchg
cmpsl
insb
into
jp
inc
mov
sub
push
add
and
movsb
dec
sbb
shl
adc
cld
mov
xor
in
inc
daa
lret
ss
adc
fsubr
ljmp
xlat
pop
pop
cmp
aam
imul
ror
sbbl
out
pop
jbe
ja
sbb
dec
cwtl
cmp
scas
push
push
daa
mov
mov
adcb
in
aaa
aam
movsb
jp
mov
ror
jns
ljmp
js
xor
push
dec
jecxz
imul
xor
jle
je
loop
popf
push
es
cs
mov
mov
inc
cmp
leave
mov
shlb
mov
xchg
push
fcom
push
xor
mov
sub
mov
je
mov
movsl
in
or
adc
sbb
cli
sti
test
dec
cltd
sub
fwait
push
cmp
fwait
js
not
inc
cmpsl
and
dec
je
out
cli
jb
sbb
into
cmp
pop
stos
cmp
pop
adc
dec
add
mov
pop
jbe
ss
arpl
sub
mov
gs
fs
mov
xchg
imul
insb
or
xchg
xchg
sub
jo
or
add
sub
cwtl
pop
lock
andb
sbb
jp
push
pop
ret
push
repnz
xchg
cmpsl
bound
mov
imul
pop
movsb
or
cwtl
mov
xchg
jb
dec
test
das
jl
adc
out
es
cmp
dec
popf
mov
lcall
popa
pop
sti
push
insl
push
sbbl
fdiv
sbb
sbb
sub
push
loopne
mov
test
cli
add
in
jg
mov
jo
and
movsb
pusha
scas
movsl
data16
or
mov
fldt
arpl
jecxz
js
adc
mov
xchg
clc
xor
test
repz
push
icebp
gs
out
jb
xor
or
mov
jg
sub
pop
stos
mov
sub
or
push
jnp
mov
int
dec
pop
cltd
inc
pop
test
mov
ja
pop
push
dec
sbb
xor
cmpsb
cmp
sti
jb
loopne
mov
mov
adc
lcall
outsl
aas
push
cmc
mov
sub
jb
icebp
enter
gs
movsl
loope
pop
scas
lahf
nop
mov
push
jmp
jge
rcrl
cmpsl
jecxz
mov
and
mov
mov
and
hlt
aaa
in
jmp
add
or
sub
xchg
lret
js
push
xor
pop
mov
out
mov
into
cmp
inc
das
aad
jl
fwait
cld
jge
lea
call
fwait
int3
mov
jbe
jecxz
cmp
pop
lock
mov
js
cmp
repz
int
fldt
movsb
xor
je
pop
cmc
clc
rep
fcomps
imul
lret
adc
fsubrs
pop
cmpsb
fists
adc
scas
dec
lahf
ret
shll
jle
mov
out
push
adcl
sub
or
roll
mov
sub
sbb
sub
sti
xchg
add
fucomp
sahf
cs
adcb
xchg
pop
push
mov
xor
mov
dec
adc
mov
fstpt
jno
xchg
xchg
cmpsl
ret
aaa
sarl
push
xlat
fwait
push
mov
jno
mov
xor
and
jg
and
iret
push
xor
push
push
mov
inc
jmp
call
fiadds
repnz
jl
int3
stc
notb
dec
add
out
jmp
sbb
sub
sbb
pop
in
sub
fiadds
sub
std
lds
jmp
lock
or
dec
popf
ret
ret
out
add
mov
xor
pop
lret
xchg
mov
test
ret
add
push
dec
and
sar
das
iret
cmpsl
popa
enter
fsts
jo
jae
stos
and
daa
add
test
ret
idivl
cmp
daa
ret
outsb
inc
or
jae
sti
dec
pop
adc
mov
lret
sub
enter
add
dec
nop
push
cltd
and
sub
mov
jg
add
jne
mull
leave
push
insl
push
lock
mov
test
mov
jmp
sarl
add
push
jecxz
lea
jno
push
clc
lcall
outsb
test
lods
xor
inc
mov
call
and
jmp
movsl
popa
and
inc
xchg
shrl
ja
pop
and
cmc
sahf
clc
pop
or
cli
adc
mov
lahf
lea
pusha
sbb
mov
pop
dec
inc
push
mov
lret
fsubs
lock
inc
fisttps
ss
xchg
lock
or
pop
outsb
out
push
stos
leave
fwait
dec
jns
dec
xchg
add
and
jo
lret
je
in
xchg
add
or
sbb
sbb
test
or
pop
mov
rorl
cld
dec
leave
xor
stos
addr16
sbb
lcall
jl
add
add
aas
mov
xor
sarb
fcompl
lods
test
jle
pop
cmpsb
mov
pop
fwait
sub
and
ret
stc
aas
mov
and
aas
xor
sbb
fiaddl
mov
sub
mov
inc
insb
mul
loop
in
push
jge
popf
inc
mov
cld
ror
stc
mov
aad
push
jmp
hlt
xchg
jo
popa
lds
scas
ret
xchg
loop
xchg
daa
adc
add
jae
and
fwait
cmp
in
push
in
fprem
jae
cmp
test
icebp
lea
sbb
popa
bnd
es
jmp
ss
fisubrs
push
shlb
mov
cmc
sti
and
mov
inc
sub
movsl
jmp
mov
test
sbb
not
mov
orl
push
cmp
push
xchg
aaa
jo
fwait
mov
cmp
mov
dec
xchg
dec
fnsave
ret
into
mov
xchg
inc
push
addb
enter
lcall
mov
aam
push
stos
icebp
and
xchg
lret
push
sbbl
pop
jnp,pt
dec
aaa
insl
ret
sbb
add
bound
jmp
xor
lret
stos
mov
andb
xchg
sti
add
mov
xchg
scas
dec
xchg
rorb
inc
push
sbb
xlat
inc
xchg
mov
mov
imul
adc
stos
hlt
ljmpw
out
aad
jo
loope
insl
mov
or
mov
js
adc
les
jne
cld
ret
inc
sbb
stos
jno
add
push
stos
adc
inc
dec
cmpsl
add
rcr
jl
inc
aaa
test
cmpsb
cmpsl
mov
mov
mov
and
lcall
xchg
stos
or
inc
push
ret
cmp
jp
jb
imul
cmpsl
adc
je
das
pop
fcoms
adc
cmp
xor
in
sub
or
jne
cmpsl
shrl
fldl
jbe
int
xor
xor
je
std
sbb
stc
dec
jae
lock
xchg
xchg
out
cmp
aam
xchg
test
insb
rcrb
sbb
or
les
inc
mov
jge
push
jmp
mov
enter
jb
cmc
inc
loopne
in
or
dec
inc
xlat
aaa
arpl
jns
ljmp
cltd
aad
dec
movsl
cmpsb
scas
aas
arpl
cmp
xchg
xchg
lahf
mov
iret
jne
in
pop
lcall
mov
xchg
movsb
xchg
inc
inc
insl
outsl
jle
cmp
xor
out
jl
and
loopne
cwtl
lea
lcall
insb
add
inc
mov
push
fldl
push
lods
inc
js
popf
push
ja
jl
rcl
inc
es
jb
xchg
inc
ret
lret
into
and
xchg
and
fmull
pushf
jg
notl
stos
mov
bound
cmp
dec
and
jo
fidivs
out
xor
int3
ds
cmpsb
mov
test
add
pop
out
cmpsb
pop
mov
xor
repz
pop
stos
mov
push
adc
mov
lds
mov
pop
mov
cmp
dec
loope
mov
int
xchg
sub
push
fcmovu
push
ret
push
aad
ds
xchg
inc
xchg
call
int
fmul
mov
push
ja
mov
out
mov
mov
jmp
mov
addr16
push
into
add
jge
and
mov
sbb
adc
xlat
mov
sub
mov
arpl
inc
mov
ror
call
stc
fcmovne
shll
add
imul
fmuls
xchg
push
or
pop
jbe
lret
int3
xor
out
das
lcall
outsl
push
inc
lods
rorl
in
jg
sub
and
mov
or
sbb
call
mov
enter
sub
call
pop
mov
or
mov
lcall
je
hlt
in
cld
outsb
mov
xchg
or
shrl
push
xchg
add
out
xor
loop
lret
aaa
inc
cmpsl
aam
push
dec
fmuls
movsl
xor
and
in
cmp
sub
aad
lods
aam
call
mov
mov
push
dec
xor
xchg
mov
jmp
sbb
sub
fwait
mov
outsb
mov
sti
sub
shlb
xchg
push
mov
adc
pop
sub
fisubrl
test
int
sub
jecxz
outsl
aad
or
jle
adc
insl
test
in
stos
or
pop
adc
pushf
xorl
xchg
outsl
in
stos
pop
test
mov
inc
mov
orb
add
nop
js
xchg
xor
add
in
and
jns
sbb
sub
push
insl
push
inc
fiaddl
push
daa
arpl
mov
dec
in
sub
dec
pop
push
mov
adc
dec
sti
pop
addr16
imul
addr16
sbb
add
int
pop
sahf
dec
sbb
inc
xchg
mov
jno
jb
sbb
mov
mov
cmp
into
icebp
out
dec
xor
jae
arpl
addr16
out
push
in
aad
call
dec
out
mov
call
les
push
cmp
add
nop
idiv
cmpsl
cmp
insb
sub
lret
xchg
lods
lock
pop
ja
das
pop
out
cld
mov
jp
outsl
in
dec
jb
lret
lods
dec
stos
xchg
sub
and
pop
mov
sbb
aas
aam
add
mov
adc
add
xor
das
mov
je
pop
push
icebp
loopne
cmp
sub
mov
fisttps
iret
mov
aas
frstor
pop
jle
jno
adc
pop
icebp
jcxz
mov
loope
mov
mov
sub
adc
jb
mov
pop
shr
xchg
xor
lret
sbb
push
or
push
cmp
pop
mov
push
aam
mov
in
xchg
into
mov
or
pop
inc
adc
sbb
xchg
orb
push
lock
pushl
sub
stc
sti
ss
dec
dec
icebp
lret
push
push
aas
data16
or
sbb
adc
push
rcrl
cmpsb
ror
aad
cmpsl
sub
int
jge
sub
and
call
out
lock
inc
pushf
dec
push
cwtl
imul
jo
dec
jmp
mov
inc
jbe
or
dec
aas
callw
ret
fcmove
push
mov
and
pop
inc
xor
mov
and
and
xchg
and
aas
adc
inc
loop
dec
mov
mov
xchg
xchg
call
scas
sbb
pop
sbb
fistpll
sbb
in
pop
mov
push
testl
ja
jg
movsl
shrb
push
lock
dec
mov
push
ror
jp
cmpsb
cs
sbb
cmp
mov
movsb
cmpsl
sbb
inc
inc
outsb
sub
and
iret
fisubs
jnp
or
cmpb
filds
pop
jecxz
lods
js
cmc
or
xor
or
mov
pop
or
add
cmp
jns
mov
lahf
bound
inc
loopne
jns
mov
int
lds
movl
xor
orl
loope
fs
call
adcl
popa
add
sbbb
iret
and
movsb
pushf
adc
clc
xor
push
xor
mov
insb
out
xchg
out
in
enter
shll
push
out
leave
dec
ficoml
popa
mov
scas
pop
cmc
int
test
cltd
mov
rcr
outsb
pop
fdivs
js
call
pop
mov
sbb
insb
cmpsb
pcmpgtw
addr16
add
jl
sar
mov
stc
popf
aas
icebp
ss
jae
insb
or
pop
enter
filds
xor
jns
pop
cmpsl
sub
cmpsb
sbb
add
cltd
mov
rolb
fistpl
sub
add
mov
xchg
push
cmp
out
es
dec
das
sub
repnz
call
cmc
cltd
rclb
sbb
and
mov
pop
mov
mov
mov
iret
rclb
xor
cli
mov
sub
push
push
adc
push
scas
call
out
mov
cmp
mov
jle
decb
push
int
popa
movsb
and
mov
mov
into
incl
rcll
pop
pusha
jno
ss
stos
cmp
xor
or
jae
push
repnz
cld
inc
outsl
outsb
loop,pn
fsubrl
out
fdivs
mov
jb
out
lods
sbb
adc
repz
sbb
scas
ljmp
sti
aaa
fcom
xchg
jp
outsl
cmp
mov
shrb
je
cmp
xchg
outsl
xchg
push
jp
jno
fadd
mov
lret
add
mov
daa
stc
lret
cmpsb
jbe
mov
adc
mov
pusha
cs
dec
loopne
pop
xlat
adc
xor
movsl
pop
jl
arpl
or
sbb
cmp
cmp
addr16
repz
sub
mov
xchg
je
inc
arpl
xchg
sub
mov
pop
cld
cmp
xor
pusha
aad
lahf
test
adc
sahf
rolb
test
sbb
add
push
jge
daa
in
in
xlat
mov
sti
and
sahf
call
adc
or
mov
xchg
pop
push
or
jo
xor
leave
inc
shlb
int3
pop
aas
adc
cmp
test
lahf
loopne
mov
sti
ret
adc
add
inc
int
sahf
test
in
dec
xor
sbbl
les
push
mov
popa
jo
jle
hlt
jle
pop
add
jne
xor
out
in
xor
adc
pushf
cmp
test
andb
sub
or
add
or
xchg
dec
cmp
pop
movsb
jl
lods
sbb
sti
rcrl
dec
fwait
pop
fisubl
mov
gs
stc
insl
mov
addr16
js
push
mov
jae
ds
in
rcrb
pushf
and
stos
adc
sarb
and
pop
arpl
mov
mov
dec
sbb
sub
insl
das
and
negl
dec
xor
mov
jns
lock
mov
adc
cmp
mov
popa
jl
push
mov
stos
adc
inc
jne
mov
js
shlb
add
push
xor
sub
mov
mov
jmp
push
jbe
out
xchg
mov
mov
adc
es
clc
in
pop
sub
sub
jno
cmp
xchg
cmpl
sub
leave
cmp
popa
popa
push
fsubl
add
cltd
inc
sbb
fdivr
iret
movsl
sub
or
push
cmp
pop
mov
pop
jmp
inc
push
data16
test
mov
xor
adc
iret
test
aad
repz
loopne
mov
jae
cmp
inc
leave
sbb
out
out
xorl
fs
cwtl
lahf
xchg
test
ficoms
mov
push
cmpsl
jne
mov
pusha
jne
mov
pop
jle
cld
fdiv
pop
sbb
push
sub
mov
xchg
adc
mov
jl
out
add
mov
cmp
popa
dec
imulb
mov
popf
cld
dec
and
scas
lret
jns
mov
push
or
lds
and
jo
daa
mov
data16
sub
add
ffreep
insb
repnz
jno
push
mov
sub
in
xlat
loop
ret
jb
pop
test
int3
sahf
in
das
pusha
sar
mov
in
loopne
add
or
cmp
sub
insl
xor
adc
inc
pop
dec
inc
cmp
cld
xor
or
out
push
in
add
in
dec
mov
xchg
mov
nop
mov
mov
xor
scas
int3
nop
pop
movsb
int3
inc
mov
iret
sbb
mov
test
repz
dec
inc
movsl
ret
mov
sbb
or
fcmovbe
xor
dec
nop
cmpb
in
pop
xor
mov
in
add
inc
dec
mov
inc
imul
dec
inc
in
pop
xlat
pop
mov
enter
shl
cmp
sub
faddp
xlat
sub
xchg
add
mov
mov
push
je
rcr
fnstcw
les
popl
or
cli
insl
mov
mov
sbb
and
in
xorb
xchg
ret
mov
inc
out
fsub
xchg
sub
and
xor
lods
shl
sub
push
sbb
pop
push
push
jg
jns
fistpl
cmp
fcompl
sbb
in
xor
fdiv
stos
mov
movsb
notl
fmull
mov
sbbb
inc
xchg
xchg
cmp
mov
xor
cwtl
push
std
jae
and
mov
or
rolb
jg
fs
mov
ljmp
pop
cld
mov
mov
popf
jae
xchg
pusha
out
mov
mov
insb
loop
mov
push
xchg
cmp
inc
cs
add
mov
fimuls
imul
sub
stc
call
mov
inc
repnz
add
jb
cmpsl
xor
bound
ljmp
dec
test
add
inc
mov
lret
and
sub
pushf
lods
mov
or
jecxz
cmp
cld
push
loope
les
in
add
ja
icebp
pusha
push
xchg
pop
xor
mov
mov
dec
fisttps
pop
into
xchg
pop
aam
and
inc
inc
popa
int3
out
cltd
push
test
loop
lds
pushf
and
inc
xchg
aad
mov
icebp
f2xm1
dec
mov
pop
sti
add
test
pop
push
or
cwtl
lahf
inc
adc
loopne
xchg
aas
js
push
inc
data16
add
and
cwtl
dec
imul
ficoms
sub
invd
or
mov
push
lea
jno
in
mov
test
movsb
or
mov
mov
lock
js
stc
fs
dec
cmpsb
lret
jns
pop
loope
repz
dec
mov
xchg
jg
inc
sbb
push
adc
push
ficompl
loopne
mov
lods
clc
in
jbe
cltd
xor
popf
pop
pop
adc
mulb
push
jg
stc
cmpsb
mov
pop
pop
add
aad
adc
clc
inc
or
sarb
sarl
jge
rep
test
fmuls
and
lods
in
subl
add
jae
cmp
push
mov
es
cmp
mul
clc
popf
pop
mov
pop
or
pop
roll
xorb
mov
test
cmp
aaa
jmp
adc
xchg
iret
and
ret
rcl
test
shll
cmc
pop
daa
clc
clc
push
mov
mov
pop
dec
inc
mov
push
xlat
lock
repnz
inc
mov
sbb
lahf
jne
mov
leave
cmc
push
repnz
in
nop
jle
jnp
xor
xchg
xor
imul
js
inc
jbe
sbb
jecxz
test
pop
inc
ret
clc
outsl
loope
insb
xor
mov
jecxz
sti
test
mov
gs
push
jmp
or
stc
push
jg
in
dec
fstps
aam
sahf
pop
mov
clc
or
repz
jmp
add
add
pushf
mov
sub
mov
scas
pusha
incb
add
mov
and
inc
movsl
jbe
mov
push
nop
enter
les
pop
push
jnp
mov
pop
add
and
psubb
push
incb
out
loop
outsb
sbb
ljmp
push
mov
push
fs
test
js
xchg
adc
mov
jp
jnp
aas
movsb
scas
mov
cltd
into
pop
ret
int3
add
adc
xor
jle
xor
mov
push
mov
movsb
aad
fwait
cmc
stos
imul
int
repnz
out
into
aad
xor
xchg
lock
ja
add
addl
push
jl
xlat
sbb
lret
call
add
rcr
cmp
aas
xor
cmp
mov
cmp
adc
popf
enter
and
pop
jle
mov
cmp
mov
xchg
xor
das
mov
xlat
mov
int
add
cli
test
mov
sti
and
mov
cmc
xchg
xor
add
loopne
xchg
push
cmpsb
mov
ret
dec
addr16
out
mov
data16
mov
orb
neg
jge
aaa
mov
push
inc
push
and
sub
or
add
xor
test
push
btr
dec
cs
inc
adc
xchg
cli
test
pushf
loop
cmp
jno
dec
cltd
dec
aas
push
xchg
adc
mov
push
iret
ja
jp
icebp
adc
in
pop
xchg
jge
shlb
xchg
mov
cmpsb
inc
xchg
movsl
in
mov
sbbb
mov
cmpsb
push
xor
mov
dec
xor
adc
out
mov
rclb
push
sub
sarb
ljmp
sub
cwtl
push
sbb
bound
sbb
icebp
sbb
inc
jb
and
shll
cwtl
or
jb
sub
lods
xor
jle
pop
dec
push
or
xlat
mov
fldt
push
and
pop
arpl
sbb
andl
pop
dec
push
jmp
outsb
test
out
jns
or
sub
imul
js
cmp
jnp
push
negl
shll
add
andl
clc
jbe
outsl
subb
sbb
into
in
jnp
lock
adc
ret
cs
int
adc
xor
test
fiadds
je
fisubrs
xor
inc
pushf
movsl
das
into
std
add
or
cmp
repnz
mov
lret
adc
out
test
mov
outsb
repnz
vmovaps
and
scas
bound
loop
and
inc
mov
sbb
stc
frstor
inc
movsl
push
xchg
imul
cmc
test
xor
and
jnp
jno
jp
mov
cmp
xchg
lret
jl
push
pop
mov
adc
and
mov
and
mov
lretw
in
adc
push
push
ja
insl
iret
arpl
fs
insb
sbb
les
jmp
dec
mov
mov
xchg
call
cmp
add
gs
in
addr16
jge
stos
scas
push
out
inc
out
incb
popf
adc
shrl
xchg
ja
jne
xchg
adc
sub
addr16
sbb
into
imul
repnz
addr16
lea
stc
push
pop
sbb
pushf
mov
popf
cmp
xchg
in
addr16
cmp
inc
inc
stc
fildll
push
test
mov
mov
inc
shrb
std
or
cwtl
lea
push
outsl
ljmp
mov
cwtl
cmp
insl
jae
lock
out
adc
arpl
lret
dec
enter
aas
shl
sub
ds
sti
xor
push
mov
loopne
test
cmc
push
dec
int3
xrelease
loope
movsl
mov
mov
mov
sub
movsl
xor
push
pop
popf
adc
int
sbb
lods
cmp
sub
mov
add
dec
out
les
xor
sub
jae
scas
push
push
ss
int
pop
jge
mov
popf
movsb
dec
dec
arpl
imul
aam
mov
pushf
cmpsb
mov
push
jle
scas
call
stc
lods
lea
jae
lock
fcomi
scas
mov
pushf
cmpsb
or
pop
add
mov
and
notl
jecxz
push
out
cmpsl
jl
jge
test
ss
cmp
test
aad
repnz
mov
cmpsb
and
mov
xchg
stc
lcall
fsin
add
mov
pop
mov
fadds
cmp
cmc
imul
cmp
rcrb
sbb
or
cld
dec
cmp
adc
fmull
mov
inc
add
cmpsl
and
pop
and
mov
jge
orb
inc
into
nop
xor
or
int
xor
push
inc
ljmp
ficomps
popl
mov
test
cld
addr16
popf
sbb
push
hlt
xchg
and
loop
adc
imul
arpl
sbb
jnp
dec
sub
repnz
cmp
scas
pop
mov
push
ljmp
imul
addr16
cmpsb
aaa
jle
mov
jp
mov
test
popf
cli
sbb
subb
out
es
scas
xchg
sub
xor
and
fs
push
mov
lcall
shlb
cmpl
jnp
mov
pusha
adc
popf
enter
push
outsb
xor
leave
lods
cli
jl
or
mov
outsb
cld
xchg
ds
ret
sub
dec
mov
ds
bound
xchg
lods
xchg
stos
xor
cmp
cmp
dec
jb
out
loop
enter
cwtl
aaa
test
fists
pop
and
adc
lret
hlt
cmp
test
add
and
pop
xchg
stc
jp
adc
test
mov
and
adc
jmp
dec
cmp
push
imul
push
sub
xchg
into
and
lret
pop
mov
adc
mov
imul
pop
cmpsb
repnz
cmp
rolb
inc
scas
popf
mov
push
rorl
leave
push
or
dec
ret
sarb
shrb
mov
in
xor
jmp
and
cmp
lods
pop
pushf
or
loopne
iret
ljmp
mov
aaa
mov
out
pop
sbb
mov
inc
imul
add
rcrb
bound
insb
cwtl
shlb
dec
xor
sbb
jnp
jp
or
adc
lock
bound
leave
std
loop
pop
fsubs
arpl
add
add
ror
dec
sarl
cmp
adc
cmpsb
cmp
stc
sub
xchg
sahf
insl
dec
pop
js
cmc
xchg
test
push
rcrl
mov
xor
and
xor
insl
cs
push
lahf
cltd
in
fwait
xchg
add
cmpsb
decb
mov
jg
xor
aam
xchg
push
scas
stos
hlt
in
xor
mov
fisttpl
push
aam
dec
daa
insb
push
and
fdivl
or
push
and
aad
mov
popa
ret
imul
sahf
mov
pop
loop
push
dec
or
mov
sbb
inc
push
mov
mov
jp
icebp
jge
sub
sahf
dec
inc
mov
bound
sahf
xchg
mov
std
cmp
mov
idiv
rcr
mov
fs
jno
sub
test
sbb
daa
test
jnp
adc
sti
nop
mov
mov
xchg
adc
adc
adc
movsl
add
sub
addb
jnp
rcr
push
es
jo
insl
les
mov
xchg
pop
cwtl
jmp
fdivrs
scas
sub
sub
dec
mov
jle
arpl
dec
insb
cmpsb
cmp
adc
stos
mov
xor
aad
and
xlat
mov
ja
frstor
mov
lret
adc
lret
sbb
in
mov
setns
aaa
pop
sub
mov
pop
arpl
gs
das
inc
aad
pushf
mov
adcb
popl
jnp
lock
dec
les
dec
push
add
sub
xchg
hlt
mov
lcall
xchg
in
xchg
enter
filds
out
jg
lods
sbb
pop
push
jae
scas
mov
ja
jns
jmp
bound
ret
xor
mov
mov
xchg
cld
push
ljmp
insl
pop
adc
sub
mov
out
shrb
aam
ss
dec
or
out
sbb
or
enter
pop
and
scas
imul
mul
jl
xchg
shlb
decl
and
push
shl
out
je
adc
sbb
outsl
mov
ret
ja
nop
enter
mov
out
jb
inc
push
lahf
mov
lahf
inc
pop
sbb
add
lds
in
test
dec
push
mov
sub
add
inc
inc
cmp
into
scas
dec
lods
cs
jb
or
sbb
fwait
push
jl
mov
dec
push
sbb
pop
fstl
pop
xchg
in
call
outsb
jle
sub
dec
lahf
push
popa
iret
hlt
out
outsl
clc
inc
inc
pop
add
sub
inc
daa
jg
adc
fwait
loope
cld
pop
andb
jne
sub
add
mov
mov
dec
mov
punpckhwd
adc
into
loope
push
repnz
orb
in
call
push
mov
sub
and
lods
icebp
and
aas
rcr
das
mov
cmp
jne
out
cmp
clc
push
imul
cs
fwait
lea
pop
xorb
clc
or
inc
fiadds
mov
or
jne
bound
xchg
jno
pop
jno
pop
into
jp
mov
testb
pavgw
sbb
test
pusha
stc
pop
bnd
pop
je
cli
out
xlat
sbb
push
pop
push
sbb
arpl
jno
mov
mov
test
pop
sbb
or
jmp
lcall
sbb
adc
out
aam
hlt
dec
pop
bound
push
test
fisubl
push
stc
cmp
xchg
rol
arpl
cmp
cli
jbe
into
testb
aad
es
push
pop
je
lods
js
pusha
mov
mov
cld
sub
pop
cmp
xchg
mov
jnp
xor
jnp
cmp
out
notb
add
lahf
and
movl
mov
push
push
testb
cmp
lret
inc
fistpl
inc
mov
clc
jge
movsl
lsl
repnz
pop
in
inc
adc
movsl
imul
aaa
mov
shr
pop
xlat
xor
cmovne
fucomip
fisubrs
out
scas
push
jge
pop
rorl
inc
xchg
daa
pop
jno
in
push
stos
lds
mov
sbb
mov
jecxz
pop
jno
sti
sbb
movsl
and
push
test
out
subl
push
or
btr
pop
cmp
test
adc
xor
and
std
xlat
popa
mov
add
push
lret
mov
push
rcrb
shrl
test
sub
dec
dec
arpl
fiadds
xchg
mov
dec
leave
mov
jb
int
mov
mov
ficoml
aam
mov
divb
dec
xor
cs
xchg
dec
fs
inc
dec
int
push
lods
es
dec
inc
cmp
stc
lahf
lret
cwtl
fcmovnu
xchg
hlt
mov
add
add
std
dec
cmp
jnp
pop
push
pop
shlb
call
sbbb
sbb
int
lret
fcmovnb
and
add
shll
pop
lods
repnz
sbb
aaa
jecxz
inc
aam
adc
fwait
std
jmp
cld
pop
lahf
jmp
push
dec
and
rcr
jo
add
xorl
push
fs
mov
mov
jns
push
jp
or
cmp
rcr
dec
rcll
pop
mov
pop
push
xchg
fsubrp
jno
es
dec
nop
fidivl
popa
movsb
mov
jmp
fdiv
fidivrl
jnp
out
jae
xchg
popa
add
add
repz
mov
xchg
push
pushf
into
push
adc
pop
int3
sti
adc
nop
aam
int
jnp
cmp
js
mov
jmp
jge
xor
cmp
test
push
ret
xor
not
inc
cwtl
popf
push
call
inc
jbe
fs
pop
sti
ds
movsb
and
movsb
pop
in
sub
pop
nop
aaa
xor
xchg
sti
pop
push
hlt
test
mov
jp
rcll
bound
pop
cmp
dec
and
icebp
push
adc
movsl
aas
clc
mov
push
pop
dec
xor
lea
cld
lods
out
popa
cmpsb
mov
jg
or
jmp
and
jmp
cmpsb
clc
outsl
adc
adc
jne
sbb
sbb
ja
cmpsb
ret
imul
dec
cmp
addw
pop
mov
or
fistps
cmp
cmpsb
xchg
mov
mov
xchg
pop
adcl
out
loope
pop
setbe
cmp
cmpsl
shrb
sahf
dec
mov
pop
repz
jae
lds
push
dec
jb
sbb
xchg
dec
data16
dec
xchg
lods
ljmp
icebp
cmp
pop
out
mov
in
cmp
add
repz
jb
cs
adc
add
inc
cmp
and
data16
push
jo
jp
xor
pop
inc
adc
fwait
scas
vpcmov
aaa
int3
xchg
mov
in
inc
ret
xchg
mov
orl
inc
cwtl
subl
add
fsts
scas
ret
pop
gs
add
inc
cwtl
pop
int3
pop
push
lret
mov
or
jecxz
lock
mov
adc
push
xchg
in
lahf
scas
push
pop
pop
in
out
movsb
leave
xor
leave
and
rorl
pop
shr
and
in
inc
mov
addb
loopne
cmp
sbb
es
cmp
test
add
aad
mov
inc
cmp
rcrb
ss
aaa
jnp
stos
loope
test
lea
cmpsl
cmp
aaa
scas
dec
sub
in
aad
in
mov
mov
xchg
and
dec
or
cld
subl
lcall
lock
rorb
mov
push
mov
adc
mov
imul
jl
jo
cmpb
call
std
test
es
jge
push
push
xorl
icebp
icebp
les
sti
sbb
cmpsb
pop
mov
sbb
bound
mov
aam
addl
and
sbb
push
mov
dec
mov
push
in
sbb
jnp
mov
add
cmp
nop
je
jb
pop
mov
adc
dec
dec
pop
insb
push
jmp
ret
repz
pusha
mov
sbb
push
add
mov
and
push
dec
mov
inc
mov
int3
mov
or
and
dec
hlt
cmp
sub
push
mov
mov
cli
mov
outsb
mov
movsb
out
repz
in
add
test
jecxz
cmp
subl
jp
xchg
mov
sbb
pop
xchg
xchg
cli
pop
scas
mov
std
jbe
hlt
cmp
movsb
jns
movsl
icebp
test
mov
xor
xlat
pop
mov
mov
dec
mov
movsl
push
stos
jge
pop
lods
jl
or
fstpt
cli
sbb
pusha
cmp
push
or
lcallw
scas
scas
mov
int3
in
xlat
dec
jp
sub
testl
mov
daa
xchg
sar
pop
mov
movsl
mov
les
aas
inc
imul
adc
xor
ja
mov
inc
dec
mov
pop
push
cs
fcompl
jae
xor
xor
jmp
leave
xor
adc
rcll
out
int3
frstor
or
lea
decl
sbb
js
idiv
xor
arpl
xor
and
xor
int
add
daa
sbb
fbld
inc
outsb
push
sbb
jmp
inc
nop
pop
add
dec
loope
adc
xchg
dec
add
test
fildll
push
popa
jmp
adc
push
ljmp
mov
add
and
popa
dec
xchg
dec
push
mov
fcmove
cli
push
fnsave
jmp
sub
push
push
mov
jno
out
add
xchg
mov
push
repz
xchg
jp
mov
fsts
sub
out
mov
mov
xchg
jmp
add
dec
test
pop
in
test
xor
jmp
jb
jb
js
dec
cwtl
dec
push
mov
roll
loop
jle
sbb
add
lods
xor
mov
cmp
lret
bound
outsb
and
les
sbb
mov
dec
mov
loop
jge
cmp
bound
or
fiadds
mov
jmp
mulb
jmp
push
stos
fcmovne
jns
push
push
fsubs
imul
xor
es
call
mov
pop
sti
aaa
or
sahf
lahf
arpl
sbb
jecxz
add
das
mov
mov
adc
add
xchg
mov
inc
ffreep
movzwl
or
out
dec
push
lcall
aam
cmp
sub
xchg
pop
jmp
stos
xchg
cmp
xor
cli
movsl
mov
xchg
out
xor
jl
enter
sbb
jl
adc
or
orl
inc
add
shlb
cwtl
fstl
mov
mov
mov
cmp
push
pushl
adcb
mov
hlt
pusha
push
incb
pop
outsb
add
xchg
pop
pop
fnsave
into
lds
arpl
inc
shr
subl
mov
in
push
and
cs
jge
mov
repz
cli
pop
jmp
scas
push
sahf
inc
xor
mov
fld
inc
push
cs
aad
pop
add
xchg
jp
mov
and
scas
adc
push
sub
mov
cmpl
and
lret
or
adc
insl
xor
dec
fwait
mov
fs
inc
mov
popa
lds
push
jmp
aad
dec
imul
xchg
push
dec
shrl
pop
inc
pop
or
aaa
test
fcmovnu
lahf
pop
dec
mov
dec
pop
mov
pop
jno
or
push
fcmovb
mov
cs
mov
and
sub
add
cld
stos
adc
cmpsl
insl
mov
aad
int
cmp
icebp
out
lret
frstor
inc
add
mov
and
xlat
mov
jmp
fistl
lret
lods
iret
xor
jbe
mov
stos
push
stos
cmp
daa
jbe
iret
into
int3
stos
fsts
pop
mov
ljmp
inc
mov
js
ljmp
xor
adc
in
mov
jo
scas
lret
je
jne
rol
mov
jmp
lods
pop
jo
fmuls
mov
ficomps
lret
call
mov
pop
inc
ja
add
hlt
lock
inc
scas
xchg
xchg
imulb
out
rcll
or
lcall
cmp
lock
push
gs
clc
lods
pusha
xchg
adc
je
imul
mov
lods
aas
inc
call
xchg
mov
bswap
dec
pop
sbb
or
jp
inc
out
es
stos
daa
test
movsl
or
jnp
sub
jecxz
sub
add
sbb
sbb
mov
pop
pop
out
pop
jmp
into
sahf
add
mov
or
into
add
cmp
test
ss
push
pop
xor
ret
adc
ret
sbb
jnp
movsl
ficoml
dec
sbb
push
xlat
sbb
sbb
fisubl
and
in
test
inc
push
pushf
addr16
pop
sub
lahf
fnstcw
push
jg
xchg
outsb
mov
loope
fldcw
mov
xlat
ljmp
mov
into
clc
inc
in
push
ss
fcomp
into
cmc
incl
stos
insl
shrb
jmp
cmpsl
inc
adc
inc
rolb
sbb
sub
cmp
loope
pop
jnp
jno
daa
fsubr
xor
hlt
or
ss
fmull
out
in
push
and
in
push
push
cltd
out
stos
pop
in
cmp
ds
xor
or
rcrl
repnz
das
out
pop
aaa
mov
lods
add
mov
cmp
push
loope
xchg
scas
pop
and
sahf
or
inc
pop
jo
ljmp
data16
out
test
mov
jl
daa
cwtl
push
inc
cwtl
xchg
add
and
repnz
or
mov
xchg
cli
mov
xor
mov
xchg
sbb
ss
in
jg
adc
jg
or
cmp
ds
ljmp
mov
sbb
push
or
stc
ret
scas
mov
cmp
jg
mov
loope
push
mov
loopne
mov
out
mov
add
loopne
das
ret
notb
cmp
and
cmpb
mov
sbb
sub
imul
xchg
mov
cmp
in
jbe
mov
lcall
inc
mov
das
popa
ret
mov
mov
mov
add
out
adc
or
mov
mov
mov
pop
xor
xchg
push
hlt
or
adc
xchg
shlb
mov
push
xor
cmpsb
mov
xchg
adc
pop
mov
icebp
xchg
push
scas
lahf
lea
mov
push
sub
scas
pop
lret
push
sbb
into
jno
jl
xlat
mov
xlat
cmp
pop
js
lods
lock
inc
sahf
idivl
cli
aaa
xlat
mov
and
mov
sbb
jns
jns
pop
adc
inc
cmp
jmp
leave
icebp
popf
fldl
cs
xchg
popa
sbb
mov
push
mov
pop
push
xor
les
adc
fdivrl
adc
pop
cmp
cmp
fwait
push
inc
je
mov
mov
mov
sub
sub
gs
sbb
mov
cmpsl
or
pop
in
mov
sub
loop
pop
pop
leave
xchg
dec
lahf
sbb
sbb
mov
aam
sbb
xchg
push
mov
mov
ds
je
orl
dec
adcl
lods
lcall
jns
jnp
aam
ss
loope
popa
mov
mov
dec
sbb
add
roll
adc
mov
notl
ss
xor
sub
xor
leave
shl
in
and
cmpsl
inc
pop
dec
pop
cwtl
loopne
xchg
in
in
pop
pop
frstor
sub
std
loope
lcall
jns
in
sti
ljmp
pop
sub
gs
loopne
adc
mov
cmp
js
xchg
push
mov
push
lods
cmp
nop
inc
and
add
popf
je
es
les
cmp
insb
das
aam
xchg
pushf
popf
push
mov
push
sbb
daa
movsb
add
mov
paddd
enter
ljmp
pop
sub
xchg
add
fldenv
rol
scas
sbb
mov
les
adc
and
lea
jl
lea
aam
xchg
dec
inc
xchg
int3
mov
mov
jae
cmp
or
pop
add
lock
or
fdivr
or
push
out
add
sub
sbb
jo
sti
lea
into
popa
jge
push
mov
aad
nop
mov
fwait
or
mov
cmc
xor
pop
mov
fcmovb
stc
lea
add
imul
daa
cmp
jno
pushf
mov
lock
jmp
mov
int
out
data16
daa
addr16
sahf
cld
push
sbb
push
movsl
inc
aas
sti
mov
cmp
movsl
nop
mov
jno
addr16
fldcw
xor
jne
mov
insl
push
xor
into
and
and
adc
lea
xor
adc
adc
adc
aam
hlt
jns
lahf
stos
or
fwait
jnp
rcrl
sub
dec
inc
xor
sbbl
pop
cmp
loope
adc
adc
movsb
rcrl
inc
inc
les
push
add
test
lcall
mov
jmp
xchg
jae
fucomip
or
pop
inc
cmp
test
stos
push
fsubs
addr16
adc
dec
cmp
mov
pop
mov
mov
repz
mov
lds
adc
dec
dec
mov
out
ljmp
xor
data16
fmul
dec
or
out
pop
adcb
setno
push
xor
xchg
ss
and
lods
inc
sub
xlat
sbb
xchg
sarb
push
aam
mov
add
mov
and
fmull
imul
adc
xchg
cli
cmc
xor
sbb
adc
xchg
and
jne
fsubr
pop
loop
pushf
adc
dec
lret
adc
gs
insl
daa
mov
jne
stc
inc
cmp
enter
lds
int
outsb
xchg
mov
mov
mov
sub
dec
mov
add
sbb
jl
shrl
and
call
leave
inc
sub
mov
pop
add
add
cmpsb
sahf
mov
push
imul
shrl
pushf
insl
mov
aaa
pop
int
adc
fstps
xlat
ret
lret
xchg
pop
jne
in
sbb
ret
sbb
das
std
sarl
popf
inc
pop
cli
sbbb
sahf
mov
fnstenv
jl
es
insl
imul
ljmp
xlat
popl
mov
jno
mov
stos
lahf
outsl
sub
mov
ret
ljmp
outsb
xor
inc
callw
scas
les
cmpsl
test
shr
cmp
mov
push
pop
pop
xchg
mov
pop
and
insb
jp
ljmp
and
lcall
or
outsl
inc
xor
push
lds
popa
dec
mov
xchg
inc
adc
dec
test
xor
adc
push
and
pop
mov
std
xor
test
mov
mov
fldenv
jle
pop
mov
and
jbe
test
sahf
mov
pop
fstps
cld
sbb
neg
mov
mov
xchg
in
into
sahf
xor
adc
add
mov
outsb
fisubrs
inc
mov
xchg
in
repz
shl
ljmp
aam
pop
inc
sub
mov
outsb
sub
jle
call
test
xchg
or
orl
sbbb
jp
xorb
aaa
adc
ret
push
adc
insb
fisttpll
dec
lods
ja
mov
mov
mov
pop
xchg
ds
xchg
or
xchg
fs
jmp
cmp
add
and
aad
out
sub
mov
mov
ret
jns
jp
xchg
test
sbb
push
mov
std
pop
cmp
and
sub
jmp
sahf
xor
popa
cmpsb
push
stc
lret
ja
fsubrs
xor
jno
adc
sar
leave
push
jmp
xor
mov
fisubs
sub
je
xchg
imul
into
push
xor
pop
scas
iret
rcll
mov
int
insl
pop
lock
jge
mov
cmc
jp
ftst
call
ret
mov
ss
leave
dec
cmp
pop
inc
xchg
fld
push
jge
insl
jnp
xchg
inc
and
and
loope
jg
jp
dec
mov
mov
and
out
insb
hlt
in
xlat
mov
roll
jge
jne
dec
dec
rorb
pop
push
inc
xchg
out
es
lds
mov
xchg
mov
mov
sahf
test
push
xchg
lret
push
mov
pusha
outsb
fbstp
stos
fwait
imul
mov
cwtl
outsb
adc
add
and
xchg
sti
stc
js
test
adc
mov
fisubrs
in
inc
aas
pop
sbb
in
push
rolb
xchg
cld
mov
add
inc
inc
loopne
and
mov
lea
cmpb
aas
cmp
inc
inc
bnd
xchg
jmp
rorb
cltd
std
pushf
rcrl
iret
lods
pop
es
xchg
in
out
add
rcll
xorb
cmc
mov
rorl
adc
jns
jle
fldl
repnz
push
lret
outsl
ret
mov
call
mov
push
test
inc
divb
out
pushf
and
mov
dec
or
sahf
daa
pop
ja
cmpsb
cmc
cmp
test
jecxz
repz
ret
loop
sbb
pop
jge
jne
fnstsw
dec
call
ljmp
push
push
lret
dec
repz
adc
and
test
mov
faddl
add
cmc
push
in
xor
leave
adc
inc
scas
dec
mov
and
mov
adc
mov
in
jg
push
cltd
sub
mov
and
aam
pushf
cmp
jae
xlat
or
leave
jmp
and
int3
xor
ds
push
jne
test
mov
iret
loope
push
scas
push
xor
cmp
or
sbb
sub
cmpl
ss
pop
and
arpl
fwait
mov
pop
dec
adc
xor
fwait
xchg
push
and
sar
aad
aas
or
int3
pop
sar
mov
fmul
xchg
std
aas
xchg
dec
icebp
mov
dec
mov
cmpsb
mov
jmp
cmp
push
xor
je
lcall
shlb
mov
cli
and
pop
leave
int
jecxz
pop
out
aaa
iret
xor
fucom
and
fcompl
mov
inc
jg
adc
jmp
enter
into
fcmovu
leave
fldcw
push
repnz
jge
inc
out
cmp
xor
mov
sub
inc
xor
mov
or
dec
out
jge
inc
repnz
adc
pop
lds
fsubrs
ds
fcoms
adc
lahf
mov
in
mov
jbe
lcall
les
outsl
push
enter
pop
dec
inc
or
rclb
mov
cmp
mov
loope
and
daa
dec
adc
pop
lods
int3
int3
sbb
push
lret
or
sbb
aas
xchg
iret
and
insl
repz
pop
cmp
sbb
mov
add
enter
jbe
faddl
dec
sbb
mov
or
aad
sbb
inc
daa
cmp
push
dec
gs
mov
setl
cmp
adc
std
cs
adc
nop
mov
sub
dec
repz
ja
and
in
cltd
ljmp
sbb
movl
mov
daa
xchg
fimull
or
insb
push
in
mov
stos
ret
lahf
aas
sti
dec
or
lea
lds
jmp
or
in
mov
push
rorb
loopew
ret
outsb
sub
cmpsb
xchg
fbstp
nop
in
dec
push
mov
cli
jnp
jmp
cmp
pop
and
test
rcrl
push
and
fists
loop
lds
dec
fcmovbe
jnp
add
jo
push
aas
es
iret
popf
sub
aas
in
xor
pop
adc
in
inc
scas
jecxz
out
sub
push
addb
inc
outsl
sbb
loope
stos
repnz
bound
xlat
imul
xor
ret
or
ret
popf
add
std
cmpsb
sbb
gs
sbb
push
popl
call
out
dec
sub
sarl
sub
aas
cltd
mov
xor
dec
stos
adc
jne
call
test
add
jmp
mov
test
or
pop
sub
clc
test
inc
push
xchg
leave
xor
int3
mov
mov
movsb
cmp
push
push
pop
jl
in
mov
bound
xchg
bound
mov
insb
push
movsl
xchg
mov
idivb
push
push
inc
in
push
fldl
into
sbb
jle
mov
push
repz
rclb
je
push
xor
pushf
test
add
jbe
mov
jl
mov
mov
dec
adc
or
xor
add
jno
xchg
ds
mov
shl
or
cld
sbb
add
cmpsb
pop
mov
cld
out
rolb
inc
sbb
push
fs
aas
bound
dec
jns
mov
and
out
es
push
and
enter
and
add
lods
sub
cmc
jns
fstps
cmpsl
js
fmulp
mov
jge
inc
jge
fisubs
scas
rcrl
ja
loope
lods
xchg
cmpsl
das
adc
sti
push
xchg
ja
loop
rclb
movsl
cmp
enter
adc
pop
pop
mov
stos
test
or
fmuls
cmp
jne
ret
sub
add
and
pop
in
repnz
mov
popa
xor
daa
and
mov
adc
dec
pop
xor
shr
jl
fisubrl
xchg
sbb
sub
mov
mov
adcb
gs
mov
xchg
sbb
insb
push
dec
adc
sub
das
jb
shlb
bound
cltd
mov
out
xchg
add
mov
cmp
mov
test
pop
icebp
adc
mov
sahf
jl
inc
inc
pop
pop
mov
xchg
lock
adc
cmp
ret
imul
inc
push
mov
cld
mov
sbb
outsb
das
das
inc
iret
outsl
push
lods
adc
or
add
lret
mov
imul
sub
dec
jnp
or
cmp
mov
cmc
push
and
popf
stc
jmp
or
out
xchg
push
andb
repnz
daa
fsubs
data16
and
adcb
es
mov
xor
sub
xchg
or
jle
mov
xchg
ret
test
push
in
dec
xchg
lods
shlb
jge
xchg
cmp
jl
mov
data16
loop
je
add
dec
mov
push
pop
test
and
pop
out
jns
lods
jmpw
ds
push
push
fs
mov
data16
jne
sbb
push
in
adc
inc
cmp
in
pop
or
es
clc
xlat
cmp
sahf
cmp
xor
mov
adc
test
imul
pusha
testl
inc
orl
cmp
out
loop
mov
fists
xchg
inc
sub
cs
ja
ja
fidivl
or
dec
lea
cmpsb
shlb
movsl
outsl
arpl
sub
pop
std
push
sbb
and
mov
inc
sbbb
adc
dec
sub
push
in
add
ja
clc
test
xchg
aaa
int
jno
fimull
lea
and
rorl
popf
ret
popa
xor
iret
mov
pop
pop
cld
fidivl
push
mov
repnz
xlat
addl
fsubrl
test
dec
popf
xchg
pop
ss
xor
sub
dec
xchg
test
imul
xor
or
push
pop
and
inc
ljmp
push
sbb
xchg
outsl
mov
adc
bound
ret
jecxz
and
in
popf
cmpb
or
iret
aas
divb
jmp
jnp
mov
cld
or
xchg
lods
lods
cmpsl
xchg
mov
pop
test
test
in
call
cltd
shl
icebp
sbb
rcrb
lahf
cmp
cmpl
and
shrb
ret
cld
leave
cmp
ret
lods
shrb
loopne
jle
iret
scas
loop,pn
repnz
add
data16
cs
test
cmp
sar
add
jge
mov
loope
inc
jo
aas
xor
daa
cmpsl
mov
ds
mov
mov
and
pop
dec
jo
mov
or
jbe
stc
test
adc
ja
movhps
shrl
andb
pushf
lea
daa
sub
inc
or
or
fs
push
and
loopne
push
js
jle
sbb
aad
icebp
mov
mov
repnz
or
jge
cltd
pop
or
dec
xor
clc
or
inc
push
testb
sub
adcl
xchg
xor
mov
mov
movsb
mov
cmp
outsb
std
clc
vpshufhw
xchg
push
std
add
mov
mov
mov
in
test
icebp
mov
cwtl
into
pop
fldl
ret
inc
mov
mov
cmp
insl
roll
xchg
jge
mov
rolb
mov
or
dec
xchg
std
cmp
mov
daa
mov
fiaddl
inc
cmp
pop
mov
std
jp
sti
test
push
and
and
imul
jl
xchg
or
rorb
scas
sub
cltd
inc
shrb
xor
sub
dec
out
cmp
and
sbb
jle
mov
into
sub
pop
je
lahf
outsl
rcrl
aam
xchg
jns
mov
imul
adc
dec
jg
loope
arpl
dec
mov
mov
inc
pop
ror
xchg
and
es
add
xlat
fstl
jns
mov
imul
pop
jb
lock
dec
lahf
les
jecxz
mov
test
cmpsl
adc
cltd
mov
push
scas
pop
mov
or
outsl
xchg
push
lcall
std
push
adc
ds
pop
push
mov
clc
gs
inc
sti
ss
mov
push
lret
out
or
jo
xchg
push
lcall
fnstenv
sahf
sbb
xchg
test
or
and
jns
cwtl
push
hlt
test
inc
inc
push
scas
dec
lods
pop
sub
inc
cltd
daa
jge
pop
arpl
cmp
test
sbb
outsb
dec
mov
xlat
out
scas
or
jne
jle
pusha
sahf
test
mov
js
dec
lret
xor
mov
or
data16
test
popa
pop
scas
repz
aaa
cmpsb
out
xchg
cmp
mov
fnstcw
adc
shrl
jp
fildl
lret
in
mov
pop
frndint
xor
jne
jecxz
mov
inc
incb
in
mov
in
in
pop
loopne
mov
mov
lsl
in
jge
dec
cmp
sahf
adc
cltd
dec
prefetchwt1
scas
push
mov
ret
and
pop
addr16
dec
outsl
addr16
movsb
aaa
lds
ds
sbb
mov
stos
cmp
cmpsb
lahf
dec
call
fisubl
push
xchg
mov
push
dec
or
jge
fcmovnu
mov
add
or
aam
sbb
mov
ret
push
ret
sub
fsts
or
imul
add
daa
or
lcall
pop
repnz
pop
imull
inc
mov
movsb
adc
cwtl
sub
mov
mov
cltd
cmpsl
and
mov
insl
ret
pop
xchg
clc
icebp
cmp
jl
int3
jle
ja
arpl
xor
push
jns
fcmovne
cmp
inc
cmp
popl
adc
xlat
add
push
int3
stos
sahf
xlat
popl
fistpl
cld
aas
ja
int
xchg
sub
fs
lock
inc
adc
jnp
sub
pop
loope
jp
or
adcb
outsl
and
mov
out
mov
stos
js
jp
cmp
leave
xor
xchg
insb
dec
fld1
mov
and
cmp
cld
push
pushl
pop
ljmp
jecxz
dec
mov
or
scas
mov
mov
dec
test
in
push
cmp
push
scas
mov
in
in
daa
mov
repnz
hlt
xchg
std
mov
jno
outsb
mov
sub
pushf
addr16
cmpsl
cmp
test
pop
mov
sub
xor
ss
and
adc
mov
sbb
jb
lods
leave
inc
outsl
ret
ds
inc
imul
es
cmp
dec
jo
sbb
sbb
rep
add
xor
imul
andb
ljmp
pop
pushf
lcall
inc
pop
ljmp
rol
dec
bound
test
movsb
and
dec
out
mov
cwtl
movsl
pop
rolb
dec
movsb
in
mov
lods
test
mov
mov
mov
mov
inc
test
rcrl
rorl
mov
mov
imul
cmp
push
add
sub
lock
sbbb
cmp
test
andl
xchg
pop
adc
adc
outsl
mov
jo
mov
inc
fimull
jb
adc
test
push
lcall
stc
imul
loope
push
xchg
jno
xchg
lods
jmp
test
lea
sbb
pushf
sub
sub
mov
aad
leave
sti
mov
lock
pop
xor
push
inc
lret
sbb
nop
push
ljmp
or
push
int3
mov
inc
ds
xchg
bound
adc
in
lods
mov
mov
jbe
jmp
lret
push
rcll
jne
sub
fs
xchg
faddl
mov
rol
push
adc
insl
xchg
aam
xchg
pop
les
mov
mov
popf
jecxz
nop
mov
mov
sti
imul
loope
sub
add
ss
popf
pop
in
shlb
xchg
cmc
push
pop
mov
hlt
cmp
cmp
mov
lea
cmp
jne
inc
std
adc
mov
and
rclb
push
pop
jns
std
loope
scas
cmp
dec
mov
scas
jge
pushf
std
jb
insb
outsb
daa
mov
lcall
leave
add
or
test
xchg
fs
leave
pop
push
mov
or
or
out
mov
ss
add
cmp
sbb
or
fdivl
cmp
cmp
mov
fmuls
ds
mov
dec
call
sub
mov
adc
jns
adc
or
mov
mov
push
mov
xchg
mov
mov
dec
sub
fidivs
lds
shl
inc
inc
cmc
sbb
out
xor
sub
xor
inc
bound
and
jns
inc
push
xor
shll
repz
sub
push
ds
sti
dec
and
cmpsb
xor
aaa
cmpsb
js
pushf
cltd
dec
xchg
sub
sahf
sbb
imul
and
fcmovnbe
pop
pop
or
mov
dec
inc
out
inc
cmc
jne
mov
and
pop
adc
push
insl
leave
daa
sbb
ret
mov
jne
inc
adc
stc
xor
out
xor
rorb
rcrl
shrl
cltd
add
sti
fdivp
jle
repnz
xlat
mov
and
inc
add
sti
lods
or
and
xor
fstpl
testb
and
lock
push
outsl
arpl
and
arpl
in
xchg
scas
or
mov
mov
inc
push
add
or
cmpl
scas
sahf
cli
inc
sub
adc
jl
cltd
xor
fs
sub
movsb
mov
stc
divl
ficoms
jp
dec
mov
shr
mov
or
pushf
xorl
loopne
stos
pop
test
stos
ret
es
in
dec
fmull
sbb
fmull
and
fcompp
testb
cmp
and
es
loop
dec
daa
stc
sbb
fcoml
imul
push
sbbl
subb
mov
jae
fcoml
ljmp
jbe
pop
jle
sub
jne
inc
pop
movsl
insb
pop
lds
mov
mov
dec
jge
mov
fisubs
arpl
hlt
push
dec
fdivrl
mov
xorl
sub
xchg
jnp
jmp
adc
inc
insl
std
sbb
xchg
jno
mov
addl
pop
dec
cmpsb
and
jg
push
cmp
in
sbb
loopne
fistps
xlat
inc
je
sub
adc
jb
nop
lods
dec
addl
xlat
xchg
push
and
inc
xchg
xlat
sti
jmp
popf
mov
in
xorl
mov
pop
ja
imul
or
xchg
stc
jmp
jecxz
xor
clc
xchg
imul
pop
xor
jno
mov
aaa
adc
rcll
daa
and
idivl
pusha
clc
jno
in
sub
mov
int3
lds
sbb
xchg
rcl
cmp
js
mov
sahf
push
xorb
mov
inc
loopne
loope
ja
sbb
add
out
insl
orl
out
or
jnp
push
or
and
jl
pop
arpl
push
divl
test
daa
call
xchg
stos
lods
repz
xchg
cltd
outsb
iret
or
mov
mov
mov
add
ja
insl
pop
or
add
inc
mov
setge
mov
adc
loop
pop
aaa
xchg
cmpsl
adc
add
xchg
loop
cmc
jb
cltd
in
xchg
aaa
fs
aaa
loope
loop
mov
cld
push
mov
decl
scas
xchg
es
aam
aas
loop
push
mov
jno
sbb
pop
ret
mov
stos
lret
dec
xor
int3
pop
aas
pop
subb
enter
push
mov
aaa
push
insb
mov
xchg
dec
push
loopne
pop
mov
sub
cli
pop
in
dec
ret
push
xchg
cmpsl
insb
cli
rep
hlt
jmp
in
imull
cmpsb
mov
cmpsl
push
push
in
fdiv
sub
test
outsb
mov
mov
lret
xchg
lea
insb
push
or
push
ds
mov
jns
pop
jae
mov
into
sub
mov
ljmp
je
dec
jle
hlt
sub
xchg
gs
arpl
fxch
les
fldcw
out
shrb
jo
ret
or
xor
call
sbb
mov
stos
xor
enter
in
imul
jbe
loope
dec
pop
or
lret
add
xchg
push
xchg
pop
xchg
jp
pop
insb
test
rcrl
call
mov
push
jbe
popa
sti
lea
sub
cmp
push
aam
stos
mov
movsl
pop
jns
dec
jnp
adc
jg
or
out
mov
xor
mov
mov
mov
pop
lods
add
inc
pusha
add
adc
notb
das
mov
or
std
push
sbb
or
test
in
test
and
inc
add
subb
sahf
out
adc
mov
xchg
iret
enter
loop
cmpsb
mov
scas
mov
cwtl
pop
push
or
mov
mov
lods
aaa
out
jo
cli
outsb
mov
lcall
ret
mov
mov
faddl
frstor
fistpll
daa
pusha
mov
xchg
insl
lds
test
or
mov
test
lods
test
jp
aam
or
cli
pushf
and
jle
and
xchg
stc
lods
outsb
adc
ljmp
push
inc
filds
scas
fsubr
jbe
inc
pusha
sbb
int3
jb
sar
es
outsb
cltd
sub
mov
add
das
cmp
fisubl
fwait
int3
pop
out
push
xor
push
sbb
cmp
adc
lds
dec
std
fs
pop
jne
lods
cs
movsl
daa
je
mov
fs
sti
dec
dec
pop
fwait
movnti
in
cwtl
xchg
rcrl
push
sahf
jl
sub
shll
iret
ret
adc
aam
pusha
lods
ljmp
repnz
mov
fucom
or
sbb
ja
lock
aaa
cmp
lret
jne
sub
cmpsb
ds
pop
testb
sub
add
add
movsb
jnp
adc
push
jecxz
sub
xchg
insb
dec
shrb
and
add
iret
xchg
adc
sarb
cli
jge
idivl
les
lock
pop
xor
xlat
push
out
jae
inc
scas
cs
sti
jb
and
insl
jb
insl
iret
movsl
pop
push
mov
and
inc
stos
push
pop
pop
aaa
xor
mov
mov
and
xchg
mov
out
sub
mov
fsubs
movsb
in
inc
pushf
xchg
adc
sub
or
mov
or
in
int
jno
call
push
dec
repnz
std
add
rolb
and
and
mov
mov
inc
popf
dec
ss
iret
jo
idiv
push
shlb
jmp
insl
push
mov
pop
dec
repz
jp
mov
and
adc
sub
mov
pusha
pop
cmp
mov
iret
lock
fwait
mov
adcb
mov
shll
or
in
inc
push
mov
mov
xor
sbb
xchg
jns
scas
bound
scas
dec
push
xchg
dec
daa
inc
push
iret
popa
xor
push
clc
insb
adc
xlat
fcoms
mov
in
aas
pushw
nop
jp
add
stos
cs
pop
nop
add
xor
mov
lcall
scas
aam
lret
filds
push
imul
negb
sub
hlt
repnz
adc
xor
jg
aad
inc
xchg
daa
mov
sbb
pop
mov
push
es
nop
insl
lcall
test
ljmp
addb
daa
add
sub
sbb
lret
jne
arpl
into
jne
sbb
pop
add
scas
aad
pop
jb
and
int3
mov
push
aas
imul
push
lret
dec
sbb
push
sbb
call
jecxz
out
fistps
sbb
daa
insb
outsb
jge
and
push
cli
pop
aaa
xchg
test
fs
das
adc
mov
pop
mov
mov
push
fs
jmp
insb
repz
loope
xchg
sahf
xchg
xchg
pop
rclb
xchg
sbb
push
rolb
mov
jns
jo
test
ja
inc
or
or
orl
xor
ja
int3
out
ljmp
fwait
lea
push
clc
cmpsl
pop
leave
xorb
sbb
out
leave
std
decl
popf
dec
gs
cwtl
dec
sahf
pop
lea
rorl
push
pop
cli
inc
dec
ret
into
jb
mov
mov
xchg
or
call
jbe
pop
and
mov
and
lods
jle
mov
or
lahf
add
ja
dec
mov
rcrl
push
fisubrl
clc
xor
inc
pop
loopne
outsb
cmp
cmpsb
adc
call
or
in
int3
xchg
cld
push
cltd
fdivs
xor
add
fstps
pop
lret
or
out
inc
sub
pop
into
cwtl
nop
loope
test
cmpsb
lods
jbe
cltd
pop
mov
sub
jg
mov
jl
mov
xchg
xor
iret
or
into
cmp
arpl
dec
add
inc
fbld
pop
cmp
jge
fiaddl
mov
and
inc
jmp
jns
fs
jmp
adc
cmp
cmp
xor
pop
xlat
lret
lea
jl
cmp
lret
or
jnp
loop
sub
scas
popa
jo
lock
out
imul
jne
daa
lahf
sbb
pop
je
movsl
cmp
adc
pop
loop
idiv
mov
mov
in
mov
jg
or
push
pop
in
pop
cmp
xchg
jns
lea
clc
cltd
mov
jb
jnp
sub
insl
sbb
sahf
loope
cmp
sbb
mov
xchg
mov
aas
dec
idivl
adc
pusha
push
icebp
in
mov
sbb
sub
in
in
ds
push
in
sarb
pop
xor
ss
push
mov
xchg
xchg
add
fisubrl
subb
and
and
jmp
ret
int3
dec
mov
mov
movsb
nop
cmp
push
pop
sub
adc
xchg
mov
sbb
fbstp
mov
mov
jb
adc
xor
mov
adc
cmp
out
dec
daa
or
mov
cs
push
jp
mov
loope
das
or
add
add
stc
cmp
jne
fdivr
jns
push
shll
out
fistpl
jns
imull
in
rcll
stos
jl
jo
sbb
test
or
les
jp
or
movsl
lea
xor
sub
test
lea
cmpsb
add
comiss
bound
movq
aas
jp
out
or
repnz
add
jmp
mov
fsubrl
dec
pop
lods
daa
jl
lahf
repnz
push
mov
aad
push
mov
aam
ret
lock
mov
mov
push
stos
es
pop
fisubrs
mov
scas
add
jno
jns
mov
ficompl
push
rorb
sbb
push
inc
mov
and
and
popl
jg
pop
cmp
inc
xorl
int3
mov
mov
jecxz
xchg
sbb
mov
adc
add
jge
jmp
movsb
in
sbb
cmpsl
je
lahf
cmpsb
stc
fisubs
inc
mov
pushl
mov
outsb
sub
sbb
in
pop
enter
adc
jae
dec
jmp
mov
sub
jo
aaa
mov
jbe
aaa
jecxz
cmp
call
dec
xchg
mov
je
mov
dec
adc
iret
scas
jae
inc
pop
xor
mov
mov
pusha
add
inc
cmp
jp
das
je
testb
arpl
popf
sti
mov
lahf
fmuls
int3
push
int
shll
adc
inc
loope
adc
jns
xor
sub
lcall
pop
into
shl
ficoml
push
adc
outsl
inc
mov
int
arpl
lock
std
mov
dec
mov
add
xchg
cmpsl
mov
mov
loopne
sub
lods
mov
mov
add
popa
in
jo
rorb
clc
mov
or
bound
push
shlb
adc
mov
aad
insb
cwtl
add
mov
cmc
pop
push
ret
test
dec
sub
aaa
pop
add
leave
push
loop
dec
and
or
mov
jecxz
addb
call
xor
leave
lea
push
mov
addr16
js
inc
mov
mov
sbbb
cld
xchg
inc
mov
test
shl
mov
inc
fstpt
add
inc
stos
and
or
sti
jmp
pop
jge
jmp
push
and
and
push
mov
ss
andl
loopne
insb
fidivrl
imul
xchg
dec
mov
and
cld
mov
movsb
mov
pop
bound
cmp
daa
insb
ljmp
ret
mov
inc
and
ret
clc
in
imul
mov
cld
cld
mov
bnd
clc
jg
mov
nop
jo
fsts
insb
pop
addr16
fs
jmp
xor
imul
repz
iret
mov
jne
jno
and
adc
hlt
mov
loop,pn
out
push
int3
and
push
push
jae
enter
fidivl
fadd
lods
pop
jl
mov
ret
adc
dec
inc
shlb
popl
and
xor
xchg
fnstcw
adc
aas
les
out
push
sub
les
pop
adc
xor
lcall
lret
pop
lret
lret
js
ret
movsl
pop
stos
lock
xchg
insb
mov
push
and
jne
mov
jle
into
adc
jo
push
clc
lods
jg
add
mov
mov
lds
jb
or
gs
sbb
mov
loopne
aas
mov
adc
in
mov
mov
mov
jge
xchg
mov
test
mov
clc
test
cld
pop
lahf
mov
stos
sbb
data16
addl
outsl
aaa
xchg
jg
mov
arpl
lret
push
dec
dec
aas
sbbl
jne
cmpsl
enter
popf
stos
fsubrl
out
push
ss
mov
fldenv
push
mov
jg
aad
mov
mov
inc
arpl
je
test
out
xchg
fcmovb
xchg
inc
or
cmc
inc
lahf
xchg
xchg
jp
xchg
test
xchg
dec
cmp
call
mov
int
negb
inc
ds
dec
adc
int3
pop
popa
add
push
mov
mov
call
jns
mov
addr16
jg
xor
adc
jnp
dec
inc
cmpb
adc
dec
mov
push
jbe
and
mov
jno
fsubrl
pusha
xor
icebp
cs
sbb
xchg
sbb
loopne
movsl
das
adc
jmp
jmp
jp
pusha
out
rol
inc
in
stc
out
dec
and
lods
test
out
inc
sub
jb
js
add
mov
arpl
mov
lock
mov
inc
sar
fcos
jmp
mov
dec
inc
in
mov
sbb
ja
pushf
into
insb
or
dec
mov
ret
stos
negb
aaa
notl
push
dec
inc
jp
insl
adc
jle
mov
out
pop
xchg
push
test
sub
repz
cs
aas
push
shlb
push
pop
jne
mov
mov
dec
sbb
in
jno
push
inc
les
mov
lods
add
xchg
sbb
sbb
add
jg
ror
sbb
xchg
jne
mov
push
fs
nop
dec
aaa
std
mov
js
cmp
inc
mov
mov
sbb
pop
and
ja
mov
sti
sub
mov
pushf
addr16
mov
fwait
inc
adc
leave
outsb
jge
dec
pop
xor
sbb
adc
inc
clc
pop
imull
xchg
push
add
or
dec
cmpsl
push
out
sub
in
or
and
and
adcl
inc
sarb
shll
aam
jle
pop
or
pop
hlt
or
int3
mov
mov
pushf
cwtl
sbb
frstor
in
ljmp
aaa
mov
xchg
cmp
push
es
mov
hlt
pop
es
push
jb
add
loopne
loop
sbb
jnp
mov
adc
mov
ds
jge
ss
sub
sub
lock
push
dec
xchg
mov
push
xchg
aas
xlat
scas
jae
dec
mov
rcr
push
xorb
sbb
add
lret
xchg
es
inc
or
rcl
mov
lods
jge
subl
add
sbb
js
sahf
popa
xor
mov
cmovne
aaa
popf
insl
imul
lods
inc
push
push
lds
and
xor
mov
jne
fstpl
mov
push
sub
inc
aad
dec
sub
scas
loope
push
movsb
cwtl
xchg
xchg
sahf
int
xlat
jp
sahf
xor
push
ror
inc
sarb
pop
outsl
dec
mov
sub
mov
mov
pushf
sbb
pop
fldcw
test
loope
je
or
out
push
pop
cli
je
sub
ss
hlt
mov
lcall
and
ljmp
shlb
jb
ret
push
mov
mov
jecxz
fisubl
adc
dec
or
jo
or
xchg
mov
jle
inc
mov
sar
mov
dec
xchg
les
out
movsb
inc
pop
pop
cltd
xchg
lea
aas
lret
stos
push
dec
jmp
pop
lret
mov
shll
popf
out
xor
mov
data16
insb
je
dec
int
sbb
sbb
mov
or
sub
test
add
jge
sub
ret
cmp
adc
mov
test
dec
mov
or
adc
xchg
mov
xchg
sub
sarl
sbbb
addr16
xchg
pusha
cmp
push
mov
or
stos
les
jp
inc
js
scas
jb
xor
icebp
push
sti
cmpsl
jo
mov
inc
movsl
lahf
push
cwtl
test
xchg
dec
mov
mov
xchg
test
push
add
add
pop
mov
out
or
inc
sbb
push
pop
adc
jecxz
inc
add
push
sbb
sbb
adc
or
shll
arpl
mov
shl
jecxz
lods
test
lds
mov
lret
sub
jae
mov
lahf
ss
and
or
ja
dec
sub
mov
push
adc
or
or
and
hlt
jecxz
lds
push
pushf
bound
ror
lods
fldl
hlt
add
divl
or
xor
push
mov
dec
xchg
cmp
sbb
lock
sub
rcll
mov
aad
sbb
scas
orb
xor
inc
dec
push
and
and
and
sub
repz
mov
lds
repnz
fnstsw
add
cmp
call
jbe
xchg
add
cmp
ds
scas
adc
imul
ja
jae
xchg
and
dec
out
dec
dec
mov
icebp
out
mov
out
push
jecxz
lcall
jnp
js
gs
xor
and
adc
sub
dec
popf
sarl
pop
pop
jp
inc
push
cmp
or
mov
inc
mov
cmp
sub
mov
jbe
jb
ret
call
xchg
push
jne
inc
out
rcrb
lods
xor
mov
dec
in
push
mov
les
sbb
pop
or
push
pop
int
pop
sahf
mov
xor
out
xchg
inc
nop
jo
xchg
jmp
test
scas
movsb
ss
imul
mov
xor
cmp
fimuls
push
sub
mov
lret
daa
scas
mull
dec
jecxz
and
mov
jae
mov
test
fstl
push
popa
sbb
stos
cmp
lea
jmp
jns
mov
test
dec
in
xchg
outsl
cwtl
lret
js
dec
cmp
jmp
flds
int
scas
adc
leave
movsb
aam
fldt
mov
xchg
pushl
aam
shrb
pop
ss
mov
sbb
lahf
es
mov
fs
mov
shrb
add
jg
and
dec
or
push
pop
mov
xor
shrd
pop
lret
nop
pop
lea
add
and
aam
dec
or
cs
stos
and
rcrb
rep
and
aas
dec
jb
xchg
std
and
ds
mov
jno
outsb
add
xor
and
xchg
jns
pop
push
and
cmp
pusha
pop
stos
out
inc
sub
push
cmp
loop
xor
adc
cmp
xchg
aaa
scas
sbb
and
sub
xor
xor
arpl
aaa
xchg
scas
int3
adc
test
test
imul
sbb
mov
shrb
mov
sbb
mov
mov
dec
stos
adc
ffreep
insb
cs
add
xor
jmp
movl
jmp
pop
or
lock
push
mov
xchg
int
dec
dec
dec
mov
dec
push
xchg
pop
dec
and
movsb
pop
bound
in
popa
dec
cmp
xor
fwait
in
xlat
mov
sbb
andl
cltd
lcall
lret
imul
pop
shrl
lods
lahf
or
clc
jmp
adc
mov
xor
or
mov
scas
fldpi
xor
aam
dec
aad
lcall
cmpsl
inc
ror
pop
notl
inc
inc
xchg
fldcw
push
mov
dec
out
and
sarb
pop
xor
cld
xchg
add
stos
jle
idivl
pushf
in
or
xchg
cmp
mov
xchg
sti
mov
jne
cwtl
push
imul
aas
outsb
xchg
jb
jno
mov
inc
inc
mov
stc
push
cmc
aas
lock
adc
dec
add
pop
lahf
lock
or
inc
or
pmuludq
lock
js
into
dec
adc
adcl
shll
pop
and
adc
dec
popa
movsb
sbb
rclb
pop
push
push
loope
inc
dec
and
sub
and
adc
or
xchg
lds
add
arpl
jae
adc
cmp
insl
lock
inc
adc
add
sbb
outsb
mov
lods
test
cmpsl
out
xchg
push
inc
sti
mov
sub
enter
jbe
dec
repnz
dec
inc
and
xlat
mov
je
dec
jne
jns
dec
mov
jle
out
dec
cli
test
subl
add
sbb
cltd
lcall
xor
adc
mov
cmpsl
add
dec
nop
sbb
sub
lods
mov
jmp
mov
pushf
inc
dec
sar
ret
int3
jle
insl
dec
dec
fbld
iret
mov
inc
mov
mov
ret
fnstsw
cmp
xor
flds
loop
sarl
imul
js
xor
and
jae
std
add
xor
push
sbb
push
into
scas
mov
leave
push
ja
mov
faddl
jns
jle
mov
das
in
jo
dec
jae
idivb
pop
fwait
and
adc
and
xchg
and
mov
xor
xchg
lahf
xor
movsb
mov
pusha
cmpsl
pop
xchg
ljmp
mov
fstl
mov
xchg
cmp
lock
xchg
int
or
and
push
insl
add
cli
mov
int
adc
faddl
mov
aaa
rolb
xor
xchg
into
push
int3
test
out
mov
addr16
jnp
sbb
xchg
addr16
xchg
add
adc
jnp
jle
aaa
and
sub
movsb
add
dec
pop
into
push
xchg
xchg
hlt
cmc
pop
cmp
nop
or
jns
out
sbb
iret
data16
sbb
cmpsb
xor
xor
mov
dec
mov
sub
ds
xchg
nop
push
and
cmc
mov
push
out
xchg
or
push
lds
inc
fistl
in
pop
fisubrl
cwtl
repnz
sbb
lods
xor
dec
imul
test
ret
mov
mov
inc
xchg
jno
jne
into
insl
aaa
pop
pop
outsl
add
popa
or
out
cli
sub
adc
incb
movswl
push
test
cmp
fists
lret
adc
nop
out
dec
inc
mov
mov
jns
paddsw
push
dec
sub
mov
push
gs
adc
jle
cmp
mov
rclb
cmp
and
in
imul
arpl
movsl
inc
and
sti
add
jle
ja
aad
and
pop
outsb
mov
xchg
sbb
jne
pop
dec
movsl
aam
sahf
jl
xchg
pop
shrb
jns
mov
mov
loopne
jmp
mov
sub
in
pop
in
jl
je
je
pop
fucompp
fwait
ret
enter
sbb
rcrl
fmull
pop
mov
fidivrs
int3
in
jne
cmpsb
lds
iret
cmp
push
xlat
jno
push
scas
lret
mov
xor
enter
sar
int3
test
and
adc
sbb
daa
pop
imul
cmc
sti
test
fucomi
loop
jl
mov
mov
lahf
popf
int3
mov
iret
dec
pushf
pop
push
pusha
lods
jp
adc
fisubrl
fidivs
push
mov
lret
pusha
pop
ds
mov
loope
or
mov
sbbb
adc
push
mov
rcl
inc
pop
lgs
es
data16
jge
add
loopne
hlt
es
pop
scas
popa
mov
out
nop
movb
out
mov
mov
nop
pop
pop
lods
lods
shlb
sub
enter
or
test
pop
inc
cmpsl
lods
insb
push
rcll
movsl
repz
fs
push
lods
aas
out
pop
push
inc
adc
xchg
testb
repz
in
test
outsl
ja
pusha
push
cld
into
xor
fcmovb
in
sbb
push
cwtl
jge
bound
jp
xchg
test
ds
xlat
fdivs
jno
pop
out
jle
fmull
mov
or
adc
mov
xchg
aam
lods
mov
dec
xchg
pop
push
loop
push
dec
les
sub
and
push
mov
sbb
xchg
pop
out
mov
stos
or
cmp
cmp
adc
sbb
iret
jne
cmp
bound
sbb
mov
mov
std
xor
and
inc
cmp
movsl
mov
jmp
xchg
sbb
fbstp
mov
je
int
jg
outsb
mov
xor
testb
loopne
dec
add
faddl
sbb
pop
rcrb
mov
shlb
inc
lcall
add
cmp
jecxz
scas
and
pop
jle
inc
mov
loop
jge
jg
cs
aam
dec
pop
into
aas
ret
dec
fld
dec
cmp
sub
add
mov
inc
add
lret
fisubl
mov
xchg
in
movsb
or
test
movsb
stc
mov
inc
mov
cli
xchg
repz
in
int3
inc
fisttps
dec
or
std
cli
mov
cmpsl
out
pop
pushf
fldl
cmp
fiaddl
or
mov
mov
mov
ret
mov
ds
mov
jbe
cmpsl
mov
or
add
mov
mov
and
pop
jmp
and
in
test
mov
rolb
add
jmp
imul
hlt
cmpsl
cmp
jae
insl
cmp
iret
adc
adc
xor
mov
cltd
lea
in
imul
xchg
xchg
dec
push
gs
dec
and
andl
pop
mov
stc
jbe
aad
sub
and
cld
das
mov
adc
ret
pusha
and
mov
inc
sti
mov
dec
iret
je
sbb
insl
pop
jecxz
mov
sarl
mov
dec
xchg
pushf
xchg
scas
adc
rclb
inc
stos
clc
inc
leave
mov
insb
cltd
dec
js
dec
inc
imul
aaa
sbbb
add
push
jno
pop
add
out
jge
adcl
sub
hlt
lods
je
sti
mov
pusha
mov
lret
into
sbb
mov
aaa
sbb
xchg
test
mov
lds
lods
push
roll
int
cwtl
pop
into
jecxz
sub
add
movsl
stc
cld
mov
leave
xor
mov
cld
mov
jbe
into
rolb
xchg
scas
xchg
inc
mov
movsb
int3
or
sub
sbb
push
xor
push
sbb
test
push
xchg
mov
lds
cmp
add
xchg
mov
xchg
mov
cwtl
repz
jb
or
dec
sbb
lcall
fsubs
inc
aam
sbb
shrb
add
push
and
daa
add
ud1
popa
insb
in
xchg
pandn
add
xchg
rclb
dec
arpl
loop
scas
push
das
rcrl
cmp
add
inc
ss
fsubl
mov
dec
sbb
rclb
mov
in
mov
cmp
sarb
or
in
and
cmp
fstps
ret
or
xchg
xor
test
jno,pt
test
into
int
push
aam
xchg
movsl
push
call
inc
mov
fadds
mov
lock
sub
jae
dec
push
jmp
push
pop
fwait
gs
pop
in
xorl
mov
mov
mov
stos
out
sub
push
popf
inc
pop
or
cs
leave
dec
shlb
out
jecxz
adc
in
gs
jno
adc
lods
xchg
jl
fisubrl
insb
fdivrs
sbb
mov
ror
cmpsb
inc
mov
xchg
or
sbb
test
std
cltd
inc
lock
jnp
push
lods
pop
sbb
mov
imul
out
cli
push
lret
jne
notl
sbb
pusha
mov
test
pop
rcll
xchg
lcall
jp
les
lds
xor
movl
pop
lcall
dec
inc
and
mov
jne
cmpsb
jg
mov
enter
cltd
cwtl
sub
in
jae
add
dec
or
xchg
fdivr
inc
add
rcrb
xchg
cmpsb
xchg
sub
loopne
sarl
push
adc
enter
jmp
leave
cmp
push
idiv
decb
stos
bound
icebp
sarb
ret
xchg
xor
xchg
jle
dec
ljmp
int
aad
cmp
pop
lcall
js
jno
js
sarl
sub
sbb
rorb
rorb
das
push
das
cltd
sahf
add
clc
cld
add
push
or
pop
out
std
jb
stos
ucomiss
stos
mov
dec
jo
push
xor
mov
lret
mov
sar
add
inc
stos
jmp
jno
push
xchg
ljmp
pop
push
jno
ret
xchg
test
push
sub
xchg
aaa
rcrl
jle
mov
pop
data16
pop
icebp
je
pop
or
in
cmc
inc
mov
xor
add
mov
jne
popf
fucomp
sbb
cmp
imul
pop
sbb
adc
mov
mov
or
jns
mov
mov
int3
cwtl
insb
push
outsl
inc
mov
out
mov
out
dec
inc
xor
outsl
cmpsb
add
sti
insl
sbb
jo
int
mov
shrb
ljmp
imul
jns
inc
inc
jle
mov
push
rcl
push
pop
mov
jb
or
gs
cmp
xchg
outsb
mov
cmp
jne
cwtl
insl
popw
mov
pop
repz
mov
fisubrl
in
or
scas
mov
cmp
push
mov
gs
arpl
and
add
lds
test
test
movsl
push
dec
inc
add
movsb
inc
iret
lods
int
setb
mov
jno
and
mov
xchg
lcall
rolb
jecxz
fcompp
pop
mov
add
in
jle
test
push
adc
lahf
adc
sti
jp
cmpsl
xorl
popa
insb
jae
push
les
sub
pusha
and
push
ds
fbstp
mov
or
xchg
ljmp
je
jmp
lods
mov
clc
adc
add
dec
push
adc
mov
movsb
lock
push
jg
xor
sbb
sub
aad
outsb
mov
loopne
movsl
ret
cmp
jle
and
cli
call
mov
and
out
movsb
int3
cld
aas
fsubl
pop
push
rcrl
cmpsb
and
aad
negl
cmpsl
xchg
inc
xor
pop
sub
jo
lods
sub
sub
xor
adc
cltd
sbb
aas
daa
add
xor
add
pop
inc
je
adc
push
dec
push
push
and
into
test
es
jle
mov
ret
mov
cmp
mov
xor
imul
or
xchg
sahf
xchg
repnz
lret
addr16
add
mov
jae
jbe
and
xlat
cmp
mov
pop
test
jl
test
sar
mov
sbb
arpl
int
aam
push
in
sub
mov
mov
sub
adc
pop
inc
fstl
mov
fdivl
inc
cltd
xchg
addr16
lods
pop
jae
xchg
imul
and
daa
orb
cmp
adc
js
inc
ljmp
data16
cld
jge
lea
flds
vsqrtsd
dec
dec
test
addr16
pop
sarb
roll
adc
xor
pushf
sbb
out
addl
sbb
add
iret
sbb
mov
es
fidivrs
pop
notb
add
add
and
aad
dec
pop
fnstcw
rclb
mov
push
je
sbb
push
xchg
or
adc
fwait
mov
cmp
jecxz
call
pop
aaa
push
xchg
push
lods
sub
ljmp
xchg
lahf
lcall
sbb
stos
loopne
pop
enter
mov
push
inc
xchg
mov
fstpl
add
pop
add
inc
lods
mov
pop
mov
sbb
sbb
movsb
les
xchg
fdivrl
cli
pop
xor
push
leave
sub
jecxz
add
movsl
lret
sahf
or
jle
lcall
and
sub
mov
cmp
clc
daa
cmp
inc
stos
mov
inc
fdivl
jns
aad
and
mov
xchg
dec
in
cmp
shll
mov
repz
cmc
mov
pop
ffreep
lock
repz
push
sbbl
stc
mov
mov
dec
mov
subb
scas
mov
int3
clc
cmpsb
pushf
enter
pop
mov
in
orl
mov
xchg
xchg
and
dec
dec
repnz
and
xchg
inc
add
shrb
push
sub
stc
sub
or
jnp
mov
push
out
in
sub
or
add
hlt
out
cltd
jnp
and
sub
cmp
pusha
inc
sahf
fmull
int
ds
pop
mov
push
dec
sub
and
mov
jo
sarb
mov
movsl
ret
dec
add
clc
mov
les
pop
js
jl
cmp
mov
fwait
xor
jg
or
sarb
mov
iret
mov
xor
xor
inc
cmpsb
test
jo
xor
jmp
push
push
shrb
cmp
inc
icebp
int
jg
xchg
ret
insb
mov
mov
xchg
int
jo
mov
jmp
adc
mov
loopne
ret
push
xor
test
xchg
sbb
or
xor
sub
loopne
inc
mov
call
subb
xor
mov
mov
mov
sbb
in
out
in
sbb
push
insb
and
imulb
movsb
jbe
sub
cmp
inc
jmp
pop
test
mov
lahf
xor
xchg
mov
mov
push
loop
inc
aaa
xchg
and
or
add
mov
daa
push
fnstsw
ljmp
leave
js
in
adc
les
iret
in
lret
pop
push
and
sbb
dec
int
jecxz
sub
clc
movsl
cmpb
xor
fildl
sbb
enter
adc
mov
mov
in
pushf
add
lods
jl
mov
xchg
in
or
dec
and
mov
inc
sbb
xor
scas
ja
sub
scas
ss
cld
mov
push
pop
imul
pop
sti
sahf
xchg
dec
lret
mov
int3
and
insb
addr16
in
fcmovu
xchg
cli
cmp
ss
pusha
xchg
xor
mov
cmpsb
outsl
pop
fldt
mov
loop
gs
xchg
call
cmp
ss
stos
insl
cmp
xchg
negb
inc
scas
xchg
push
shll
mov
cmp
jmp
stc
add
pop
adc
cltd
repnz
xor
cmpsl
int3
scas
sbb
inc
lahf
jnp
lock
leave
mov
add
push
cmp
aas
je
sbb
setns
mov
or
subl
mov
icebp
inc
and
cmp
fnstenv
dec
iret
cld
dec
push
xor
jb
faddl
fiaddl
fisubrl
mov
inc
fidivl
fnsave
hlt
popa
push
cmp
ss
ljmp
sbb
nop
aad
mov
stos
sub
fwait
jle
adc
mov
add
xor
and
fcmovu
lret
sub
jmp
call
dec
jns
jge
sub
addr16
adc
shr
push
popf
or
test
and
adc
cmp
sbb
adc
dec
enter
out
repnz
cmp
scas
test
insl
sub
push
scas
nop
ret
sbb
inc
inc
in
nop
shlb
lds
insb
rcl
jle
jnp
dec
mov
imul
dec
icebp
in
push
mov
mov
scas
lahf
pushf
jbe
lret
inc
xor
adc
mov
insl
push
lret
sbb
lcall
popf
jmp
mov
test
jno
ret
cmp
jle
in
stc
dec
fs
movsb
mov
push
sub
cmp
push
adc
popa
dec
jecxz
dec
pop
and
mov
adc
xchg
imul
stc
ja
pop
inc
repz
fimuls
jb
je
xor
adc
fwait
push
xchg
xchg
push
xchg
adc
xchg
jge
mov
mov
or
test
test
aaa
push
push
aad
cmp
and
mov
lret
sub
in
add
and
jmp
push
adc
nop
lock
loopne
pop
sub
orl
sub
mov
divl
sti
je
mov
outsl
mov
rclb
lret
add
push
cmp
out
push
add
xor
mov
jp
sub
call
mov
push
adc
xlat
aam
fildll
mov
cmp
xchg
movsb
push
push
and
mov
lds
xor
cmp
mov
dec
cmp
xor
jns
sub
int3
cmp
jnp
and
fmull
push
stos
mov
push
xchg
jecxz
dec
mov
and
jge
aam
mov
cmpsl
push
push
aas
outsb
scas
and
lahf
push
bound
mov
mov
sti
bound
pushf
sub
xor
adc
outsb
cld
lret
sbb
sub
adc
test
dec
jno
mov
icebp
aam
mov
xor
fwait
lret
mov
out
mov
sub
scas
jbe
lcall
xchg
data16
xchg
push
and
sub
stos
and
xchg
cltd
push
push
dec
in
leave
mov
dec
jmp
lret
jns
cmp
or
inc
sub
sbb
jae
inc
sti
loopne
mov
std
sbb
pushf
mov
xchg
icebp
enter
mov
ret
gs
iret
adc
push
cmpsl
mov
or
xor
enter
in
push
push
pop
les
dec
jecxz
xchg
scas
incb
sarb
jnp
fwait
or
xor
shlb
jg
shll
cwtl
hlt
insb
mov
dec
push
lcall
in
mov
adc
lds
int
stos
aad
dec
roll
xor
std
outsb
and
inc
mov
add
lcall
xlat
push
mov
rol
stos
popa
sbb
cld
push
xchg
addb
push
cmp
lahf
sub
adc
insb
jle
stc
and
push
inc
xchg
call
minps
pop
mov
or
addr16
ljmp
rol
inc
sbb
sbb
jecxz
retw
repz
mov
ja
push
and
jmp
xchg
mov
scas
mov
cltd
ret
es
adc
push
lods
dec
ds
pop
inc
test
call
or
lock
rorb
push
xchg
repnz
sub
pop
jmp
jecxz
ss
fs
push
and
pop
xor
test
sub
dec
xchg
dec
ja
mov
js
fbstp
sti
pop
shll
xchg
js
repz
das
test
mov
lret
push
lds
pop
add
cli
aaa
xchg
inc
aad
xchg
addr16
sub
push
das
cs
sub
ds
in
loopne
pop
pop
adc
jle
or
fadds
jno
dec
rcr
pushf
sub
push
jb
in
mov
call
mov
test
cmp
data16
push
push
mov
scas
mov
in
iret
sbb
lods
mov
pop
jo
ret
clc
pop
insl
lods
fsubl
mov
imul
mov
xchg
mov
sub
mov
mov
xor
adc
mov
push
hlt
push
stos
mov
lahf
leave
xor
into
xor
xchg
pop
repz
fsub
sbb
and
fsub
das
idivl
imul
addr16
sub
insb
cmpsl
dec
xlat
inc
xchg
nop
repz
shl
sub
mov
pop
shl
lret
out
jbe
dec
stos
jge
mov
shrb
mov
xchg
test
push
mov
pusha
mov
sbb
clc
dec
adc
sub
das
lret
push
push
mov
and
out
sahf
setle
nop
jae
xor
cmp
sub
call
cmpsl
sbbl
es
es
nop
dec
insb
push
sub
das
lea
xchg
fsts
mov
movsb
jb
adcb
outsb
divl
cltd
movsb
imul
pop
jns
xchg
scas
sahf
dec
or
and
fnstcw
inc
pop
fsub
outsb
inc
mov
test
dec
mov
add
push
jmp
loope
idivb
cli
negl
sbb
hlt
push
jno
dec
fyl2xp1
pop
lock
xlat
in
sub
jno
es
dec
push
pop
ret
mov
dec
mov
inc
cmp
push
dec
rcrb
das
std
aad
lods
ret
sti
adc
mov
cltd
xlat
pop
movsb
xchg
out
add
mov
je
jmp
sub
ret
repnz
pop
pop
je
mov
movsl
aaa
shll
jae
out
dec
int3
xchg
mov
mov
push
loopne
test
xlat
jge
mov
jbe
sub
subl
mov
push
push
pop
pop
adc
outsl
pop
loopne
je
dec
add
adc
inc
shl
add
inc
xor
pop
push
xchg
add
in
mov
fbld
push
int3
fdivrl
xchg
xor
data16
fsubrl
dec
idivb
adc
push
daa
inc
mov
aas
sahf
cmp
mov
jb
cmpsb
and
mov
lock
cltd
and
xor
add
inc
sti
and
cmp
and
js
and
xchg
or
jl
popf
imull
inc
popa
aaa
push
stos
push
adc
mov
mov
scas
ljmp
mov
jecxz
and
adc
mov
call
add
in
sub
testb
sub
pop
out
rcrb
sbb
fadd
cmp
ror
lret
sbb
pop
and
dec
sbb
idiv
sub
lock
fwait
outsl
ror
ljmp
lea
mov
aaa
xlat
out
mov
sarl
pop
inc
xchg
fisttpl
mov
sti
lcall
jp
ret
loopne
fwait
lds
in
cmpsb
xchg
test
lcall
push
and
sbb
std
xchg
mov
push
sub
sub
cwtl
xor
hlt
cmp
jne
aaa
scas
and
rcl
jg
dec
xchg
push
or
pop
test
add
in
sbb
aas
inc
dec
add
ds
mov
sbb
popa
pusha
sub
out
ljmp
cmpsb
inc
jae
xchg
jne
mov
xlat
cltd
sbb
fildl
enter
jp
mov
mov
sub
out
cmpl
pusha
sub
iret
fdivl
push
jnp
or
sbb
and
push
add
gs
fwait
add
enter
aam
adc
and
mov
mov
movsb
mov
fcom
inc
stos
icebp
ljmp
leave
xchg
jl
dec
insb
rol
stos
outsb
fdivrp
lods
out
add
or
mov
push
dec
adc
es
jo
add
adcl
cmp
jbe
stos
push
insl
or
mov
pop
pop
jnp
mov
xchg
test
cmp
cmp
adc
ret
iret
jg
jge
jp
jo
xorb
or
jbe
orb
std
or
push
fsubl
sahf
popa
fiadds
out
lds
jg
jl
outsl
inc
shl
sbb
ss
jle
pop
dec
lcall
mov
nop
push
push
xor
sti
jp
lcall
lret
mov
rolb
mov
cltd
leave
arpl
fisubrs
sub
and
inc
xchg
xchg
lret
xchg
or
cmpsb
rorl
jl
leave
in
dec
subb
mov
packuswb
add
add
mov
add
inc
clc
or
and
int3
inc
lret
pop
push
iret
adc
dec
add
imul
test
jnp
sbb
push
int
push
mov
jle
repz
test
adc
idiv
loope
call
jl
sub
mov
sbb
rcll
dec
lods
out
dec
lock
push
sub
jae
dec
hlt
mov
push
mov
dec
out
jb
cmpsl
loop
sahf
pushf
jg
into
xchg
repnz
lret
push
jp
rcrb
jno
hlt
cld
repnz
lods
js
cmp
inc
xchg
repnz
in
rcrb
daa
or
ds
xchg
dec
leave
popf
push
lret
push
dec
mov
bound
xchg
out
jg
or
inc
addr16
mov
iret
cli
neg
outsb
fs
or
lock
cmc
mov
addr16
arpl
jecxz
push
xchg
push
adc
repnz
dec
mov
jecxz
mov
adc
lret
popf
jbe
mov
fistps
cmp
push
add
jbe
outsb
loop
adc
cltd
cs
in
cmp
pop
mov
push
lods
push
ja
cmp
pop
shrb
filds
xchg
add
cmp
mov
xchg
pop
push
xchg
sbb
stos
stos
je
push
out
icebp
mov
jo
adc
mov
sbb
xor
int
shrl
xor
mov
pop
sub
in
aad
pop
mov
and
dec
and
cmp
push
adc
std
fadds
fwait
dec
push
dec
test
mov
aam
inc
cmp
into
cmc
mov
cld
or
xchg
ret
inc
loopne
and
repz
mov
and
inc
jmp
cli
pusha
pushf
ret
adc
jb
aam
imul
pop
mov
xor
inc
fsubrl
lods
in
push
out
sub
xchg
dec
push
pushf
sub
nop
mov
dec
jbe
adc
inc
xor
adc
ljmp
jb
shll
and
add
adc
inc
mov
xor
loopne
mov
out
test
inc
xchg
scas
sti
xor
cli
inc
add
cmp
fs
fsubs
ljmp
adc
cmp
pusha
cmp
fdivrl
xor
push
jne
xchg
push
cmp
mov
ficoms
sbb
in
add
fs
stos
imul
and
and
pop
rcrl
cmp
pop
push
fstpt
in
mov
pop
movaps
pop
inc
xchg
ficompl
insb
add
inc
ja
scas
ljmp
fwait
das
xchg
sub
sbb
and
adc
std
aas
mov
out
push
jne
cmp
lock
test
mov
stc
xchg
daa
mov
test
dec
cltd
pop
ss
cmp
dec
xor
cld
pop
push
dec
adc
insb
pop
sub
push
in
out
pop
jmp
adc
sbb
xchg
fwait
out
mov
push
cmp
fcmovnb
or
aaa
push
push
mov
cmp
jne
daa
cld
push
int
repz
ffree
mov
push
int3
cmpsl
pop
jecxz
dec
cmp
mov
pop
in
xor
mov
jo
into
mov
loope
test
xchg
dec
pop
jmp
outsl
pop
lahf
ljmp
and
jp
pop
aaa
adc
xchg
push
adc
pop
jne
fbstp
ss
mov
scas
jge
fs
push
adc
sub
int
pusha
in
stos
out
push
mov
lret
inc
pop
add
adc
clc
ljmp
xchg
test
jg
adc
mov
add
and
push
sbb
cmp
scas
into
mov
and
sbb
jbe
daa
stc
data16
lret
out
jne
jno
mov
and
cs
mov
ret
mov
push
lods
movsb
mov
mov
dec
leave
pop
lret
stc
xchg
ds
pusha
in
push
aaa
xchg
xchg
incb
mov
add
sarb
data16
pop
mov
pop
pop
icebp
pusha
call
add
test
adc
mov
lea
aad
jnp
ret
in
sbb
repz
jp
push
add
dec
xchg
pop
pop
repnz
xor
mov
add
adc
ss
lret
jge
jl
aad
or
xchg
push
sub
mov
movsb
pop
mov
ja
jmp
out
mov
lea
adc
add
mov
es
mov
xor
ret
clc
push
aad
cmp
pop
push
out
aas
sahf
xchg
in
sarl
mov
sub
imul
cmp
inc
push
stc
outsl
lods
shrb
lods
pop
push
inc
mov
inc
push
aad
xor
or
iret
pop
mov
cmc
dec
imull
das
jb
mulps
push
aas
movsl
imul
mov
mov
in
subl
push
outsb
pushf
jge
adc
test
mov
imul
or
lcall
leave
cld
xchg
add
sub
pop
pop
sbb
ss
icebp
ret
popa
xorb
sub
clc
xchg
outsl
inc
mov
mov
je
outsb
dec
inc
add
pop
mov
mov
inc
imul
repz
adc
in
or
outsb
sbb
lret
or
pop
ljmp
xor
insl
xor
mov
push
lret
mov
shrb
fnsave
out
rcl
push
mov
popf
pop
stc
sub
sub
das
test
sbb
adc
ss
insb
lea
ja
ficoms
or
cmp
inc
mov
sbb
enter
lahf
adc
iret
dec
dec
cli
das
push
ss
mov
clc
push
inc
or
sub
or
or
sub
addr16
pop
icebp
pop
outsb
add
int3
adc
xchg
xchg
cld
mov
mov
push
or
sub
mov
cmp
into
pop
loopne
leave
test
int
dec
xchg
mov
jae
ds
inc
decl
jge
outsl
mov
mov
sbb
mov
sbb
adc
lods
mov
mov
inc
jl
pop
jg
jb
push
aaa
call
movsl
cmpsb
loope
jecxz
mov
aas
sbb
insb
dec
in
mov
lea
int
dec
lea
add
fwait
adc
mov
mov
pop
mov
cli
add
xchg
mov
dec
movsl
dec
jbe
cli
dec
pop
iret
pop
pushf
stos
push
mov
cmc
xchg
mov
mov
insl
add
jno
inc
mov
je
mov
xlat
mov
es
add
dec
mov
jae
xchg
fidivs
mov
lea
fstpl
xchg
pop
pushf
subb
aaa
fs
sub
hlt
jb
xchg
and
mov
jo
mov
in
pop
sbb
and
mov
push
shll
aaa
dec
adc
sbbl
push
arpl
cmp
and
inc
enter
or
enter
mov
pushf
jne
stos
pop
lcall
push
imul
adc
int
add
movsl
aaa
mov
dec
imul
dec
out
idivb
test
jge
mov
shlb
sbbb
adc
test
ret
in
mov
in
int3
dec
into
cmpsb
jo
imul
push
push
push
lea
push
xor
pop
sbb
int3
adc
ds
int3
jl
mov
adc
pushf
adc
jns
arpl
jmp
out
pop
mov
sub
fs
push
inc
and
in
aad
push
push
sub
xlat
cltd
dec
testb
aam
sbb
imul
mov
sub
aaa
mov
cld
mov
sbb
add
xor
and
insb
push
ror
push
jmp
sbb
cmp
call
jnp
cmp
or
mov
push
scas
pop
stos
push
push
loopne
cwtl
and
adc
xor
dec
pop
jns
je
fistpl
rorb
lea
arpl
lcall
and
loopne
into
inc
hlt
adc
ja
outsl
les
std
jge
nop
and
icebp
jo
rcrl
push
aam
sub
imul
sub
xchg
cmp
xchg
jecxz
jno
je
arpl
aam
pop
je
sbb
sub
in
cld
lret
stos
mov
mov
sbb
pop
testl
outsb
fisttpll
fidivs
mov
sbb
pop
sub
and
into
and
cmpl
sbb
imull
mov
fistpl
test
fists
sbb
inc
out
inc
imul
adc
mov
lock
xchg
lcall
std
mov
test
jecxz
dec
pop
cmc
dec
cmpb
mov
out
jbe
and
cwtl
jae
inc
xor
add
sbb
pushf
addr16
dec
inc
and
je
add
mov
inc
jo
xor
aam
mov
and
dec
or
jno
or
jp
mov
push
xchg
xor
sbb
iret
sub
ljmp
sub
decl
sbb
arpl
mov
pop
loope
push
imul
movsl
adc
push
das
adc
dec
or
xchg
lret
call
enter
jno
mov
xchg
sub
push
fs
in
xchg
adc
fsubl
je
push
cmp
scas
xchg
jp
adc
push
movsl
xchg
sub
popa
jg
repnz
or
adc
ss
ficoml
cld
pop
xor
mov
adc
jnp
andl
mov
cmpsb
lds
pop
imul
inc
jl
sub
sar
out
nop
scas
pop
xlat
cmc
jmp
pushf
cmp
add
mov
cs
xchg
js
xor
and
mov
xor
pop
sbbl
xchg
xor
adc
int3
leave
and
test
mov
sti
xchg
outsb
ds
ret
mov
hlt
mov
mov
lcall
inc
dec
cli
mov
pop
icebp
mov
mov
mov
out
fsubl
pop
das
iret
xor
cmpsl
mov
xor
arpl
mov
mov
dec
or
adc
add
imul
and
insl
cmc
addr16
sub
sti
test
cmp
aam
add
pop
push
jnp
dec
sbb
scas
callw
and
inc
mov
and
shlb
cli
loope
dec
jne
aad
mov
inc
cltd
dec
cmpsl
mov
enter
testb
inc
fcompl
cmp
or
cwtl
in
roll
shll
shr
cltd
cmp
adc
and
push
int3
out
add
pushf
sbbb
pop
mov
push
sbb
adc
xchg
jle
iret
add
mov
add
add
arpl
sbb
add
int
mov
push
loop
iret
fdivl
sbb
xor
das
sarl
dec
fcmovb
and
bound
xor
push
mov
lods
and
in
scas
jle
rol
xchg
xchg
mov
je
add
add
pop
scas
inc
pop
rolb
imul
lock
aad
aaa
popa
arpl
or
jmp
push
push
aad
mov
inc
or
outsb
pop
push
sub
inc
lahf
adc
inc
jecxz
fiadds
or
xor
bound
pop
lods
xchg
mov
and
mov
push
in
push
stos
fldt
mov
push
pop
sbb
and
sub
cmp
mov
push
stos
ds
xchg
sbb
push
aad
xor
sbb
xor
xlat
jns
or
loop
repnz
and
sbb
js
inc
cmp
ret
or
pop
xor
push
rcrb
and
jns
xchg
push
repz
insl
in
dec
mov
sub
repnz
mov
mov
subb
ds
shr
xchg
ss
mov
sub
les
push
nop
jle
mov
ljmp
pop
pop
int3
into
insb
sub
push
stos
jge
mov
sub
sahf
cltd
enter
jnp
jnp
and
jno
sub
sarb
pop
jae
ss
cs
imul
jp
add
push
mov
pop
add
jmp
movsl
les
adc
sbb
xchg
or
fucom
push
xor
mov
fst
outsb
ds
add
rolb
sbb
pushf
jmp
arpl
ret
mov
mov
scas
xchg
insl
mov
mov
movsl
mov
lods
pop
cmp
adc
insl
fists
pop
dec
lret
sub
bound
adc
pop
pop
out
inc
cmpsb
dec
pop
mov
xorl
push
jo
xor
xor
mov
cli
loope
out
pop
fidivs
pop
mov
leave
dec
push
cmpsb
mov
inc
insb
and
rol
sti
jge
addr16
xchg
pop
aaa
in
jmp
adc
jl
inc
rcl
or
insb
iret
or
stc
fsubrl
pop
clc
insl
xor
pop
fs
jne
inc
addr16
dec
je
xchg
fldenv
ja
add
jno
rol
mov
in
adc
repnz
fsubrl
fcomps
gs
mov
mov
rorb
fsubl
stc
sbbl
mov
mov
fldcw
shrl
add
insb
pop
or
es
mov
and
loop
and
nop
nop
sbb
jcxz
ret
lcall
enter
repnz
insb
add
xor
cwtl
pop
cmc
xor
adc
pusha
add
dec
dec
jb
xor
int3
in
in
sbb
es
outsb
push
mov
insb
and
call
jno
lret
orb
adc
dec
dec
leave
scas
out
or
and
mov
dec
dec
cli
xor
sbb
test
pushl
imul
aad
test
inc
mov
dec
mov
in
jle
scas
in
xchg
push
fwait
push
fsubrs
sbb
sbb
pop
sbb
xor
fimuls
sub
inc
fs
jecxz
fwait
iret
fildll
mov
js
dec
mov
pop
addr16
into
sti
pop
out
xchg
rclb
xchg
cs
out
and
push
mov
adc
add
fcomip
mov
fstpl
xor
jge
fidivrl
cmp
mov
call
cmp
pushf
xchg
xlat
nop
dec
mov
negb
cwtl
sti
mov
jb
xchg
xor
sub
dec
pop
outsb
pmaxsw
pop
add
pop
sub
fistpll
ret
sbb
mov
jne
popf
dec
fwait
clc
sub
mov
pop
lds
jmp
and
scas
mov
test
sahf
fidivs
cmp
gs
std
fdivs
and
xchg
fwait
jbe
stc
gs
outsl
jnp
ret
shll
xchg
add
xor
daa
daa
adc
fwait
dec
loope
scas
loopne
sub
mov
jbe
icebp
cs
in
xor
scas
push
mov
jae
mov
xchg
mov
pop
in
mov
loop
repz
fcmovu
sub
push
dec
subb
pop
inc
aaa
mov
sub
loope
xchg
push
mov
lahf
sbb
mov
sub
add
cmpsl
in
idivl
fsubl
ret
jnp
loop
push
sub
mov
mov
jne
push
lods
in
pusha
sub
lea
xchg
es
sar
mov
push
movsb
xlat
and
andb
lahf
test
call
call
ret
repnz
jnp
jg
pop
fnstenv
mov
pop
sbb
inc
daa
jmp
jb
mov
jo
xchg
movsl
pop
call
shr
and
and
push
pop
sahf
cwtl
test
and
or
push
jmp
push
scas
mov
adc
faddl
in
data16
inc
nop
test
push
mov
cmp
and
add
fs
rcll
add
outsl
or
pop
push
adc
int3
mov
mov
push
and
or
cmpsb
sbb
push
jecxz
pop
mov
fs
mov
push
or
and
jp
idiv
adc
push
shlb
xor
sbb
adc
sbb
xor
aaa
mov
sub
mov
shrl
shrl
icebp
jno
mov
sbb
data16
sbb
push
add
mov
lock
pushf
hlt
push
in
jae
nop
ss
mov
scas
dec
out
ss
cmp
call
mov
pop
add
push
push
push
insl
push
jae
jmp
sarl
in
in
nop
pop
int
out
xchg
cld
push
cmpsb
dec
push
dec
mov
mov
sub
adc
das
mov
and
cmp
sbb
loopne
stos
in
andb
mov
loopne
push
dec
ret
inc
xchg
cltd
hlt
mov
hlt
gs
lods
xchg
add
in
inc
daa
sub
mov
in
cmp
popf
and
imul
push
lock
mov
or
aad
dec
addl
test
ja
mov
jbe
cs
mov
ficompl
dec
jmp
nop
lret
bound
nop
add
aam
fists
adc
push
jmp
cli
ljmp
xchg
mov
outsb
inc
in
movsl
rolb
mov
ja
dec
adc
in
sub
mov
jge
hlt
mov
xchg
ja
movnti
lods
xchg
outsl
addr16
lret
pop
sbb
repnz
int3
pop
fs
mov
jnp
adc
lea
and
inc
int
dec
and
hlt
pop
mov
mov
push
mov
scas
xlat
dec
sub
popa
jbe
ret
jmp
aaa
dec
iret
add
out
mov
sbb
daa
stos
dec
dec
cs
sub
sbb
movsb
into
cmpsb
lds
sbbl
popf
filds
les
jg
mov
daa
xor
xorl
ljmp
add
jmp
stos
add
sub
push
push
popf
add
pop
jbe
mov
loop
jbe
xchg
leave
mov
jg
xor
inc
pop
out
pop
add
jle
ljmp
divl
xchg
xor
ss
loope
fcompl
add
jno
lahf
loopne
fcompl
fwait
cmp
movsb
popa
push
mov
aam
andb
cmpsl
cmpsb
jg
mov
xor
xor
fiaddl
inc
and
mov
fnstenv
jle
add
sbb
jp
arpl
rcrl
mov
jno
into
push
fnstcw
imull
sub
xcrypt-ofb
cmpsl
imul
je
mov
cld
call
ljmp
aam
sbb
mov
sub
mov
incl
inc
and
int
sbb
ljmp
push
push
movsb
decl
iret
dec
mov
les
outsb
outsb
mov
inc
mov
fldenv
test
mov
es
fisttpl
push
shr
test
add
test
push
adc
jmp
enter
mov
inc
pop
and
ffree
lods
inc
jno
and
or
mov
in
movsl
hlt
iret
ljmp
cmp
jmp
cwtl
sub
es
dec
sbb
fxch
scas
bound
gs
or
dec
test
xchg
dec
popa
int3
push
cmc
jnp
dec
add
mov
adc
movsl
aad
jo
sub
aad
cmc
imul
pop
loop
sub
push
or
xor
fcmovnbe
hlt
insb
lcall
push
cld
add
call
int3
jno
in
push
inc
mov
push
pusha
loop
push
mov
add
mov
pop
dec
stc
mov
insb
jno
cmpsl
xor
scas
stc
and
mov
dec
rcrl
jae
or
mov
adc
add
call
clc
cmpsb
cltd
ljmp
push
test
xlat
pop
std
scas
xchg
mov
adc
push
inc
xchg
xor
or
pop
insb
or
mov
mov
jmp
jne
inc
jne
pusha
popa
or
and
xchg
sub
inc
lahf
mov
into
adc
pushf
add
mov
outsb
mov
enter
mov
fldl
adc
cltd
add
fsubl
ficoml
push
out
mov
aad
add
lret
mov
push
inc
mov
mov
inc
pop
jae
xor
test
pusha
and
push
clc
int3
inc
add
cmp
test
call
addr16
push
adc
inc
mov
and
shll
or
scas
in
xchg
push
sub
cmpsb
xchg
mov
nop
cli
mov
rclb
or
inc
lret
inc
mov
jp
and
jns
add
push
xchg
inc
shll
cmpsb
xchg
add
mov
sbb
ficomps
add
pop
ret
movsb
cmp
mov
dec
xor
add
popf
xor
adc
in
mov
dec
xor
or
mov
rcrb
add
push
cs
and
lods
repz
int
repz
xchg
and
mov
lcall
fmul
jmp
fildl
add
sti
cmp
mov
fmul
dec
dec
cmp
sbbl
sbbl
dec
push
outsb
xchg
pop
xchg
jae
mov
fldenv
jg
sbb
idivl
dec
mov
outsl
inc
imul
pop
mov
loopne
imul
adc
aad
jmp
jbe
sarl
sub
aaa
sbb
fcmove
xchg
pop
inc
leave
inc
mov
rol
scas
scas
sub
mov
adc
incl
addr16
sahf
sbb
mov
outsl
or
jp
ret
ret
jmp
xlat
push
dec
pushl
lea
stos
arpl
fs
loope
lods
clc
adc
inc
loopne
popf
aam
and
shll
lods
loope
dec
cmp
lea
jb
pusha
fwait
add
jne
les
cmp
les
data16
xor
xlat
mov
xor
mov
ret
lret
dec
push
sbb
sub
jbe
fs
fs
sbb
or
pop
arpl
or
add
cmc
imulb
imull
mov
dec
jae
pop
inc
cltd
sbb
mov
xchg
lods
push
add
adc
data16
cli
ret
cmc
cmpsb
jl
push
push
pop
into
and
add
stc
out
or
or
fwait
cmp
push
sub
sbb
mov
cli
sbb
dec
cmp
ds
add
inc
outsl
mov
iret
mov
pop
inc
dec
push
pop
lods
rorb
sub
dec
outsl
and
ret
aaa
mov
and
jmp
scas
mov
and
nop
mov
push
and
in
and
mul
das
sub
ficompl
int
push
clc
mov
mov
sti
mov
pushf
mov
das
movl
adc
or
rolb
in
test
imul
or
cmp
mov
lods
bnd
jnp
scas
cmp
sbb
dec
push
adc
ret
in
dec
rorl
ds
pop
push
clc
bound
lcall
cmc
jbe
cmpsb
jge
lret
jle
andb
cltd
test
jl
inc
pop
mov
jbe
popa
mov
xchg
repnz
mov
and
dec
inc
std
sub
sub
imul
rorl
fsubl
aad
xor
cli
sahf
fwait
sub
mov
mov
nop
lock
mov
mov
sbb
lret
pop
fs
dec
sahf
shl
sub
pop
pop
sarb
jle
xchg
jmp
add
push
add
jmp
ljmp
xor
mov
sbb
ret
and
dec
fcoml
mov
xchg
push
xor
test
dec
jbe
xor
pop
mov
push
pop
fmul
jne
cmp
dec
push
inc
inc
push
and
lds
pusha
mov
dec
icebp
fidivrl
and
sub
shrl
inc
mov
mov
and
dec
pusha
lods
or
lret
js
mov
hlt
jno
icebp
loopne
inc
pop
lock
jmp
or
inc
ret
idivl
clc
and
data16
push
inc
xchg
xchg
mov
push
mov
jbe
test
inc
daa
out
fstpl
add
inc
push
adc
mov
jne
sbb
and
pop
mov
imul
jl
mov
pop
sub
mov
mov
push
scas
jmp
rolb
out
je
rcll
subl
jne
add
repz
pop
jae
sbb
pop
pop
mov
sbb
shll
xlat
lds
xchg
shlb
fwait
inc
mov
mov
push
std
xchg
in
xchg
scas
mov
sbb
mov
add
in
aas
sub
mov
aam
mov
pop
push
or
leave
rorl
dec
in
dec
push
jnp
or
cmpsb
ret
sub
test
mov
xor
inc
inc
stc
xchg
notl
sbb
xchg
mov
cmp
bound
or
test
fs
jp
out
xor
xchg
popa
pop
cmp
cwtl
xor
adc
loopne
mov
in
add
pop
sbb
cwtl
out
out
mov
inc
cli
gs
jg
orl
xchg
gs
xchg
mov
xor
repz
lret
jns
cltd
mov
push
mov
lods
pushf
aad
lahf
sub
inc
stos
jmp
mov
cli
jne
cmp
sbb
ds
add
out
ljmp
pop
jg
xor
in
xor
lahf
and
or
leave
lret
cwtl
push
add
loope
xchg
cmp
mov
imul
pop
sbb
outsb
jp
gs
and
push
sbbb
xchg
mov
test
inc
push
mov
mov
mov
xchg
shlb
cmp
insb
lahf
xor
fstps
stos
pop
jmp
xchg
cmp
push
or
adc
cmp
sub
xor
or
ljmp
mov
mov
daa
movsb
xchg
inc
jp
mov
push
mov
test
xor
cmp
imul
sti
shr
mov
sahf
xchg
fldenv
in
scas
push
push
push
insb
outsl
adc
movsb
mov
inc
and
or
data16
loopne
lcall
pop
sub
fsubrl
jle
adc
cmp
sub
sbb
fwait
dec
xchg
sbb
shlb
xchg
mov
in
sbb
push
or
sti
add
mov
xchg
jno
cltd
scas
imul
sbb
imul
mov
shlb
test
jle,pn
add
mov
push
lcall
add
testl
mov
enter
jecxz
fildll
test
or
mov
fistpll
jp
and
stos
out
push
test
add
inc
es
notb
jb
adc
xor
jnp
jb
test
pop
lods
in
mov
pop
ror
push
cld
dec
outsb
xor
and
movsl
mov
and
push
loope
clc
int
jecxz
cmpsl
test
test
faddp
and
and
pushf
add
xchg
dec
gs
sbb
push
adc
pop
cli
fcomps
mov
dec
mov
inc
sbb
movb
les
pop
jo
mov
xchg
mov
xchg
in
lods
sub
jo
mov
test
and
movsb
sub
ds
nop
push
jnp
cltd
clc
fisubrl
das
std
addr16
pop
adc
push
inc
inc
cmpsl
cmpsl
xchg
hlt
adcl
xchg
clc
stos
dec
lds
add
jp
out
inc
jp
push
xchg
sbb
and
pop
sbb
or
test
lret
jl
adcb
arpl
xor
mov
mov
or
arpl
jae
jl
sub
movsbl
push
pop
cmpsl
cmc
aam
mov
movl
mov
ret
cmp
insb
repnz
push
or
scas
and
mov
out
pop
pop
pushf
and
lods
and
aaa
sbb
mov
mov
das
jmp
pop
enter
dec
dec
mov
mov
jp
icebp
aam
add
stc
js
xchg
fsubrs
icebp
xor
aaa
adc
push
mov
loop
add
fcoms
shll
or
push
lret
int
hlt
mov
mov
push
testl
push
dec
pmaddwd
jns
dec
push
inc
jmp
pop
cmp
jne
jnp
dec
pop
fdivrl
push
es
clc
jae
xor
pop
mov
in
jnp
lea
adc
mov
mov
sbb
lret
inc
out
in
leave
mov
or
or
mov
icebp
sub
pop
cs
mov
call
out
repz
sbb
add
xchg
into
int3
add
and
xor
push
ds
stc
push
xor
or
iret
mov
aam
sbb
adc
mov
sub
or
sbb
movsl
clc
imul
das
and
icebp
loopne
mov
popl
xor
and
icebp
inc
mov
mov
dec
outsb
adc
jge
adc
jmp
cmp
into
lea
xchg
mov
ret
push
sbb
dec
pop
jecxz
pop
insb
stos
sub
pop
outsb
adc
lahf
ljmp
aas
xchg
pop
lahf
in
movb
out
sub
jb
xor
sbb
in
mov
xlat
lods
repnz
mov
sub
and
mov
sbb
and
adc
mov
cmpsl
adc
sti
push
push
lods
mov
and
into
sub
out
jb
test
or
aaa
sbb
cmc
sbb
mov
sbb
mov
out
aas
adc
sbb
adc
lret
stc
sbb
fisubs
in
adc
xor
pop
and
cli
test
hlt
or
and
movsb
fdivrs
aam
xlat
rcrb
pop
int
cltd
mov
sub
jnp
push
incb
test
xor
js
dec
cltd
add
ja
mov
inc
cmp
test
sub
shll
lcall
dec
pop
sub
lods
inc
dec
xchg
outsb
addr16
push
orb
pop
leave
sbb
pop
adc
repnz
test
pop
stc
xor
arpl
mov
movsb
sbbl
pop
mov
cmp
push
pop
cmpl
sub
roll
and
cmp
mov
insl
lcall
jnp
sbb
pop
outsb
inc
subb
cmp
dec
sbb
shrb
nop
ja
xchg
and
dec
push
cmp
or
pushf
cld
cmp
fildll
sbb
adc
test
lock
dec
cmp
in
sub
out
pop
mov
inc
icebp
repz
loopne
imul
sar
mov
add
repnz
mov
cmp
sbb
mov
ficompl
adc
push
jg
insl
mov
dec
ljmp
psubb
pop
mov
cwtl
mov
daa
cmp
stc
xchg
and
insb
rcll
dec
cltd
cld
clc
or
mov
push
xor
add
pop
cmpsb
xor
stc
inc
or
mov
in
pop
sbb
add
ror
mov
mov
ror
data16
cmp
xchg
pop
leave
shl
pushf
mov
insb
subb
enter
dec
cmp
ficoml
mov
xchg
mov
xchg
movsl
push
repz
rorl
ficoml
xor
mov
enter
mov
or
addl
xor
push
loop
pop
sbb
mov
cli
fisttpl
lds
icebp
xor
pop
fdivr
mov
cmpsl
pushl
push
mov
movsl
xor
sub
sbb
xchg
hlt
mov
repz
add
inc
repnz
push
iret
sbb
dec
jp
xlat
pop
aaa
mov
enter
inc
xchg
fcoml
test
cmpsl
and
mov
jb
cmp
adc
sub
icebp
dec
mov
inc
andb
jmp
xor
in
jecxz
in
inc
add
adc
push
jl
int
cmp
pop
sbb
jo
adc
add
dec
out
lret
push
inc
fdivrl
insb
pop
sarb
bound
fists
test
test
sub
adc
fwait
sbb
xor
cmp
arpl
and
jg
cmove
outsb
fnop
int
add
or
inc
in
test
push
cwtl
fsub
xor
xchg
pop
fdiv
in
or
popa
mov
xor
push
and
movsl
outsb
iret
ds
lret
fistl
push
or
loopne
fnstenv
xchg
sbb
xor
dec
vmread
cmp
js
icebp
or
test
push
sahf
pop
cmp
idivb
shrl
dec
add
int3
div
incb
lret
push
inc
add
jbe
jl
mov
lods
and
dec
cmp
jecxz
aas
imul
and
pushf
cmp
or
jmp
mov
adc
arpl
psrlq
int3
cmp
leave
das
sahf
xchg
or
cmp
std
outsb
pop
push
cli
mov
cmp
fwait
push
mov
mov
ds
test
pop
sub
mov
incb
add
fsts
fsts
push
pusha
inc
cltd
daa
cmp
aas
push
stos
and
cmpsl
jge
cltd
sub
and
cmc
lcall
jne
test
adc
xchg
ss
jle
out
sub
lret
fisttps
lds
adc
mov
fdivrs
jbe
aad
push
popa
pop
xor
jae
call
fisttpl
cmpsb
jle
outsl
call
add
xor
jl
cmc
sub
jb
cmp
movsb
and
fdivrp
xchg
add
sub
test
sub
mov
ss
cmp
or
test
push
ret
das
xorb
outsb
out
ret
adc
push
ficomps
adc
sbb
stc
and
pop
sub
cmp
cltd
or
xor
mov
jecxz
iret
add
cmpsb
xor
mov
xor
and
xchg
xor
sub
pop
cmp
jecxz
mov
je
inc
and
cmp
orl
enter
daa
stos
mov
frstor
mov
mov
nop
mov
outsl
iret
fidivrs
cmpsl
in
in
xchg
movsb
mov
dec
ffreep
arpl
lock
lods
shl
std
mov
inc
pop
pop
jno
test
mov
loop
call
pop
jb
add
in
idivl
arpl
mov
and
stos
lds
and
insl
shlb
pop
jp
lcall
mov
lods
adc
jo
dec
shrb
movsb
xchg
cmp
sahf
in
out
add
aam
stos
scas
imul
and
add
jo,pn
fildl
mov
adc
sbb
dec
lcall
jecxz
ja
ret
shlb
cmpsb
movswl
or
sub
pop
adc
xor
push
stc
sbb
fisubl
clc
cmpsb
pop
std
lahf
xor
dec
outsl
xchg
mov
cmp
add
je
mov
fstpt
call
push
or
pushw
push
adc
stos
dec
test
jp
pop
or
dec
xor
pop
xor
mov
call
mov
imul
test
adc
mov
out
mov
addr16
cmp
add
in
fwait
negb
imul
sbb
loop
js
popf
sbb
xor
sbb
xchg
fidivrs
xor
in
xor
ja
cmp
sarl
pop
xlat
repz
cmp
lea
loope
or
xor
jno
ljmp
out
add
rcrb
in
mov
enter
loop
pushf
in
mov
mov
loop
scas
jg
xor
out
in
enter
fadd
nop
and
xchg
adc
dec
push
lds
jo
or
adc
shrl
jae
xor
push
or
push
and
sub
movsb
movsl
jge
cmp
stos
xchg
cmp
jo
repnz
jns
xor
mov
xchg
sbb
je
jae
loop
xchg
jg
sbb
fwait
xchg
pop
shrl
mov
lock
sarb
incb
adc
pop
xchg
mov
cwtl
dec
clc
shll
mov
push
jle
xchg
leave
mov
cmp
add
push
mov
jle
lahf
mov
mov
clc
sub
leave
sahf
bound
lret
popa
jl
into
and
jle
faddp
lods
xor
int3
add
pop
pop
shrb
ja
daa
jmp
xor
push
sbb
mov
mov
jge
pop
cmc
mov
jae
add
and
push
test
and
xchg
jae
mov
mov
or
mov
loop
mov
inc
in
dec
mov
aad
mov
ljmp
sub
cmp
ds
mov
das
stos
je
sti
cld
gs
cmp
scas
outsb
sub
mov
loope
ret
sahf
push
xor
and
pop
fcmovne
test
fs
cmp
and
imul
xor
jne
add
inc
push
add
testl
sub
cmpsl
mov
shr
aas
xlat
pop
fcoml
dec
lcall
push
mov
lret
dec
in
mov
icebp
popf
cmp
lea
cmpb
mov
xchg
adc
in
push
jecxz
cmp
pop
dec
mov
cmp
shrb
jg
and
cmp
imul
mov
add
les
out
imul
hlt
sub
imul
enter
sub
lds
cmp
xor
xor
and
sbb
pop
lods
cmc
aas
mov
dec
stc
push
rol
lods
stc
xchg
xor
cwtl
orb
ljmp
jno
adc
aas
sbb
imull
and
jmp
mov
pop
popf
neg
jno
inc
cmp
mov
lods
push
insl
mulb
cmpsl
sub
push
das
xor
adc
stc
sub
insl
shlb
sbbl
shl
xor
sub
or
test
sbb
int
mov
lods
xor
xor
pop
jne
fldenv
lahf
roll
dec
bound
cmp
popf
inc
or
shll
out
decb
jl
idivl
mov
or
jecxz
bound
dec
enter
jg
jae
jns
cmp
xchg
or
sub
add
incb
pop
fs
fstl
loop
sbb
call
adcb
rolb
pushf
jge
rcrb
cmc
dec
mov
cmp
mov
aad
dec
insl
sbb
jns
adc
adc
ss
repz
cmp
mov
pop
mov
xchg
pop
mov
dec
test
in
push
xchg
push
aad
jnp
imul
cmp
lock
inc
dec
stos
pop
out
pop
pop
sub
lock
jnp
scas
loopne
jle
mov
shl
shll
sbb
mov
adc
iret
in
outsl
push
loopne
push
stos
call
xchg
loope
mov
in
jo
mov
in
imul
push
ret
lcall
inc
add
loopne
sub
jg
mov
dec
imul
jecxz
sub
fsub
out
stos
ja
mov
cmp
and
in
xor
sbb
and
jecxz
out
stos
out
xchg
mov
mov
movsl
in
pop
add
mov
popf
cli
movsl
mulb
cld
dec
xlat
mov
xlat
out
push
pop
les
mov
mov
subb
loopne
js
mov
add
xchg
push
fs
or
mov
or
or
sub
xchg
mov
rol
or
test
not
shrb
sti
stc
out
add
mov
pop
add
fwait
fiadds
and
mov
sbb
xchg
bound
fcomp
push
out
shll
sbb
sbb
sbb
add
add
aas
aad
dec
jb
test
xor
movsb
popa
sub
jg
push
insl
xchg
xchg
cltd
inc
sbb
sbb
xchg
mov
dec
xor
ljmp
shr
mov
es
fwait
sbb
imull
sub
fdivl
add
xchg
jnp
loope
inc
mov
jge
push
fimull
push
lret
loop
and
aaa
dec
sahf
cmpsl
arpl
sarb
sbb
cli
fdivl
xor
fwait
adc
cwtl
js
jo
sahf
sarl
cli
out
or
test
lret
mov
imul
xor
mov
cwtl
mov
dec
cmpsl
enter
xor
mov
mov
lret
inc
fidivs
aad
and
or
sub
aam
pop
fbld
aam
push
and
js
mov
or
cmpsl
xchg
sti
mov
cld
xchg
xor
push
sbb
icebp
mov
jno
xchg
jns
test
lcall
mov
jno
and
add
cli
sub
je
jne
add
or
pop
xchg
data16
push
push
add
push
adc
rorl
out
insl
je
lds
mov
sbb
add
icebp
add
test
mov
push
je
dec
aad
popa
jnp
xor
cmp
lea
fisttpll
pop
cmp
or
imul
xor
cltd
lcall
dec
ficoml
test
pop
out
sti
inc
push
iret
jle
cmp
popa
test
jp
scas
in
hlt
push
xchg
int
mov
lock
in
imul
mov
mov
and
imul
and
icebp
jge
push
adc
push
shl
and
xor
lret
cld
aad
sbb
lcall
push
mov
addl
js
push
out
inc
sbbb
mov
andnps
testl
push
xlat
es
pushf
fisubs
ret
pop
loopne
mov
inc
stos
stos
pop
lcall
insl
imul
push
jnp
ja
cld
xor
push
mov
mov
or
lahf
ds
xor
jp
sbbl
jnp
lock
in
or
cmp
aad
sti
pop
in
jae
xchg
dec
decl
iret
roll
and
scas
and
or
adc
jp
addr16
popa
jno
stos
sti
push
xor
push
cmpsl
shlb
iret
divb
jae
push
xor
iret
outsl
mov
push
mov
je
sbb
mov
sub
jg
es
arpl
pop
mov
das
scas
add
aam
dec
pop
or
jl
jg
jge
icebp
mov
in
adc
mov
test
xor
outsl
cwtl
pop
addb
fimuls
loope
jae
lcall
lods
insb
mov
cmpsl
or
push
idivl
test
lods
cwtl
into
xor
out
ret
push
jge
sub
mov
mov
nop
jecxz
mov
mov
ja
mov
je
insb
inc
aas
add
xor
and
push
cmpsl
mov
leave
inc
fiaddl
js
lock
jg
xlat
ret
mov
xchg
push
fdivrl
or
test
mov
ficoms
mov
add
dec
js
cmovo
mov
in
mov
xchg
call
popf
push
add
dec
fisubrl
scas
dec
iret
cli
mov
loopne
push
and
mov
add
insl
push
leave
cmpsl
or
lret
inc
fcompl
xchg
popa
insl
jecxz
adc
xchg
in
and
lock
daa
mov
call
out
dec
test
es
pop
aad
insb
inc
push
push
mov
mov
add
pop
addr16
movntq
out
jns
mov
mull
fdivrl
xchg
cmpsl
mov
into
push
fdivr
gs
jp
fwait
add
int
mov
pop
pop
ret
popa
sahf
sbb
or
lret
pop
push
call
in
out
popf
out
mov
popa
dec
and
mov
mov
test
sub
dec
and
jns
jnp
rcrb
push
mov
or
sub
clc
ja
in
cmp
jmp
pop
iret
inc
sub
mov
mov
inc
mov
dec
lods
sbb
movsb
lcall
add
in
andl
in
repnz
into
sbb
mov
jecxz
fxch
and
insb
lods
ja
sahf
and
and
and
or
xor
mov
fadd
repnz
sarb
sbb
inc
push
xor
jl
and
repnz
xchg
scas
adc
xor
lahf
sahf
out
xchg
pushl
xlat
cltd
shll
dec
push
int
adcb
push
and
jo
pop
cmpsw
roll
mov
inc
mov
icebp
loope
insl
pop
cmp
pop
or
in
data16
inc
scas
or
dec
jns
cmpsb
mov
xchg
cmp
popa
in
aam
inc
arpl
int
jae
xchg
pop
lret
adc
flds
aam
fcmovnb
jg
push
fcompl
mov
jl
jmp
mov
cli
outsl
sti
cmpsb
xchg
dec
sbb
add
mov
dec
jle
inc
cwtl
je
and
add
repnz
or
int
pop
mov
adc
pop
mov
fistpll
icebp
xchg
fisttpl
stos
rol
shrl
mov
mov
shll
xchg
mov
add
arpl
into
mov
pop
cmp
dec
mov
push
push
sub
or
pusha
ljmp
xor
out
into
pop
jno
jle
push
sbb
pop
fnstsw
pop
out
loope
and
pop
mov
fsubl
sbb
in
sbbl
cmp
ret
daa
xor
mov
aad
in
ljmp
std
mov
pop
mov
mov
xor
jmp
popa
mov
mov
add
mov
lock
or
and
jl
mov
push
loope
xchg
xchg
mov
iret
fwait
int3
shrl
sar
pop
xor
cmp
daa
mov
pop
movsl
cld
out
xlat
mov
dec
cltd
xchg
dec
dec
and
xchg
push
ljmp
sbb
into
mov
or
inc
ss
aas
mov
test
xchg
mov
sbbl
mov
and
popa
mov
push
dec
out
ret
adcl
dec
std
mov
daa
cwtl
push
nop/reserved
sub
mov
push
sahf
movsb
aas
das
pop
sti
or
or
stos
push
adc
notb
mov
repnz
pop
inc
push
ss
es
mov
cmc
jbe
pushl
int3
lods
and
rsm
out
sub
push
es
div
cmp
or
pop
fwait
aas
mov
adc
les
lock
push
ss
arpl
fidivrl
mov
int
ja
popa
mov
es
lret
push
pop
xchg
mov
mov
aad
jbe
fmuls
pusha
outsl
call
inc
cld
je
mov
arpl
out
xor
test
ss
int
shr
loope
movsl
enter
stc
or
push
outsb
bnd
mov
fs
dec
mov
out
xor
xor
mov
gs
inc
jecxz
cmp
imul
jbe
lds
inc
sbb
movsl
pop
cmp
lock
cmp
aaa
pop
in
push
or
lret
push
rcr
stos
mov
push
mov
cmp
mov
lahf
out
int
or
sub
cld
mov
mov
aad
jecxz
lret
in
adc
xlat
adc
gs
cwtl
stos
aas
or
bound
aas
stos
add
ss
fnstenv
icebp
dec
mov
pop
and
bt
jle
into
mov
add
ss
scas
sbb
gs
idivb
cmp
jns
leave
movb
xchg
mov
mov
in
jle
xchg
test
nop
push
shll
in
nop
jo
mov
std
dec
push
adcb
or
mov
push
or
mov
loope
gs
mov
bound
xchg
mov
pop
add
sub
cld
cli
jb
adc
push
mov
mov
in
xor
pop
scas
lds
ja
and
lods
jge
das
in
adc
cmpb
imul
sub
outsb
mov
sbb
mov
pop
mov
fadd
push
pushf
imul
test
jb
cltd
add
mov
cltd
push
lret
ror
dec
pandn
or
jecxz
xchg
sbb
inc
aas
pusha
movsb
je
pop
outsb
fdivrs
mov
jecxz
sbb
dec
mov
sbb
lods
dec
or
addr16
mov
or
jbe
incb
sbb
adc
sub
mov
sub
cld
xchg
aaa
dec
lcall
loope
adc
pop
dec
ljmp
int
inc
lds
mov
and
loop
adc
test
mov
mov
add
in
icebp
jg
test
sbb
cmp
bound
or
stc
cmp
roll
in
out
push
adcb
xchg
xchg
insb
cs
movsb
popf
add
inc
call
adc
sub
sub
movsb
int3
out
mov
or
push
lods
ret
jo
and
sbb
adc
hlt
fs
adcl
pop
inc
fnstenv
xchg
enter
into
leave
inc
pop
lret
push
in
push
mov
jae
lods
jae
sbb
and
dec
test
inc
fcmovu
dec
jno
mov
mov
fs
call
push
sahf
pop
rcr
cmp
jle
movsl
movsl
push
insl
in
sbb
dec
testb
mov
icebp
movups
xor
sti
pop
jo
repz
mov
mov
lods
jmp
sub
lret
push
test
cmp
and
js
cmp
fwait
sbb
jbe
xor
fprem
xor
jecxz
push
out
jmp
fstpl
pop
das
or
mov
jl
cwtl
mov
outsb
mov
or
loop
dec
mov
sbb
imul
cmp
arpl
jecxz
push
or
jb
adc
scas
inc
cmc
xchg
jg
mov
mov
xchg
dec
xor
inc
inc
jmp
hlt
out
das
or
xchg
ret
jno
ret
or
sub
sub
xchg
and
pop
fists
add
adc
xorl
mov
jmp
movsb
inc
into
add
shl
das
out
sbb
jmp
fnstsw
cmp
push
and
mov
ficompl
sbb
dec
pushf
mov
sbb
pop
lret
xlat
mov
das
lds
sub
fdivrl
inc
in
jbe
jmp
pop
xor
add
mov
and
xorb
dec
cmp
in
enter
fwait
in
je
mov
lods
add
inc
fsubs
xchg
jmp
lahf
es
or
add
fcmovne
stos
xor
imul
outsl
je
fstpl
pop
jp,pt
cmpsb
cs
notl
imull
dec
cmp
stc
cltd
push
mov
sbb
mov
lods
dec
adcb
pop
test
mov
push
mov
sahf
jo
cmp
and
add
pop
xor
lret
pop
imul
add
ds
xor
push
push
cs
imul
and
in
xchg
adc
cli
push
addb
xchg
xor
insb
int
out
inc
ds
repz
push
add
dec
lods
addl
mov
sbb
cwtl
pusha
push
imul
loopne
cmpsl
subl
rclb
nop
in
xchg
jb
lret
dec
movsb
xchg
mov
gs
pop
addr16
gs
jno
imul
adcl
lret
sbb
bound
push
test
cmp
out
pop
les
enter
int
movsl
outsb
or
cwtl
popf
push
jbe
test
push
and
clc
or
sub
out
fstpl
jge
sub
and
fisttpl
iret
adc
popf
aad
adc
add
sti
inc
cmp
aaa
mov
sub
inc
ja
sbb
rolb
stc
add
fstpl
das
dec
call
pushf
cwtl
sti
add
insb
mov
xchg
mov
jb
or
push
dec
pop
sub
xchg
shrl
adc
lock
leave
xchg
adc
out
cmp
mov
pop
mov
mov
mov
push
ret
sub
adc
nop
or
cld
mov
jmp
dec
lret
mov
call
push
push
inc
popf
sbbb
rcl
subb
adc
pusha
fwait
xlat
aaa
dec
inc
sub
aad
bound
fisubs
push
mov
imul
cmp
push
fstps
xor
sbb
adc
lea
xchg
aas
push
sbb
cmp
in
in
call
shrb
mov
adc
fidivs
addr16
fwait
sbb
movsl
fsts
push
sbb
enter
xchg
fstpl
pop
sub
pop
or
aad
cmp
test
xchg
out
jp
inc
int3
inc
push
in
sbb
enter
mov
fisttpll
lcallw
jb
lahf
mov
inc
loop
rorl
dec
inc
stos
xor
imul
fidivs
push
loopne
mov
cwtl
loopne
lock
ret
movsl
xchg
xor
inc
loop
and
jb
xchg
je
pop
sub
movsl
je
jne
adc
pushf
dec
push
aam
xor
push
js
jbe
push
je
dec
in
shrl
in
adc
cmp
clc
push
addr16
addr16
cmpl
leave
pop
mov
or
sub
ja
outsb
jge
cmp
lahf
xchg
push
xor
sub
jnp
loopne
push
daa
mov
cmp
int
lahf
ja
insl
xchg
push
or
int3
push
cs
mov
test
mov
rorb
and
movb
stc
leave
loop
mov
sbb
push
and
and
mov
xor
cmc
ja
out
clc
pop
enter
or
hlt
jae
sub
jecxz
das
mov
mov
cmp
pop
orl
shlb
xchg
adc
call
dec
mov
or
jae
push
jns
xchg
fistpll
arpl
add
sbb
jnp
pop
sbbl
or
pusha
arpl
mov
cli
pop
sub
movsb
popf
loopne
add
add
push
mov
enter
daa
pop
cltd
push
mov
loope
les
es
pushf
push
scas
inc
addb
push
insl
sub
cmp
inc
sub
cmp
and
jmp
adc
push
inc
push
xchg
xor
aaa
ret
inc
mov
and
or
dec
add
loop
sub
cmp
stos
push
daa
cmp
clc
push
clc
shlb
sub
loope
shl
ds
fildl
mov
lret
xchg
dec
jmp
arpl
pop
int
xlat
in
fndisi(8087
imul
hlt
dec
push
rol
andb
daa
or
pop
addl
add
push
and
into
jle
out
xchg
loope
movsl
addr16
jmp
rcll
popf
mov
inc
sub
popa
pop
mov
adc
hlt
xor
xchg
lcall
sbb
xor
jbe
outsl
sbb
movsb
cs
or
sub
stos
xor
ret
mov
or
scas
movsl
loope
and
popa
mov
sarl
fisubs
outsb
mov
in
pop
mov
jno
popl
inc
popf
sub
movsl
sub
out
or
mov
divb
add
out
montmul
cmpsb
adc
push
int3
lods
scas
mov
clc
mov
std
js
and
pop
mov
cwtl
stc
push
aad
sbb
gs
mov
das
lds
leave
cld
loope
xor
push
cmpsb
rcrl
xlat
mov
fs
mov
cli
sbb
and
cmp
mov
lods
lcall
xor
imul
fwait
mov
fimuls
pop
cmpsl
mov
jg
movl
loop
scas
push
test
outsb
daa
pop
sti
jg
aad
sbb
add
cmc
shrl
and
cmpl
lods
aad
in
push
fcomi
or
loop
xor
enter
out
cmp
mov
jg
mov
mov
cltd
or
nop
test
in
fistps
xchg
xchg
xor
cmp
dec
cmp
push
cmp
mov
xchg
sbb
xor
xor
divb
mov
push
call
xchg
xor
rcrb
mov
in
pop
mov
or
addl
adc
pop
sub
les
test
movsb
call
movsb
repz
aam
mov
test
dec
ljmp
ret
bound
xor
pop
or
mov
rcrl
push
xchg
sbb
stc
pop
rcrb
outsb
or
jmp
xchg
lods
push
and
cmc
inc
sbb
dec
dec
imul
sub
pop
jecxz
inc
cmp
in
pop
in
xor
lea
scas
xchg
ss
call
aas
out
or
ja
xlat
xor
mov
mov
lods
rolb
adc
inc
jb
push
pop
fisttpll
clc
pushf
loope
sbb
fisttpl
pop
xchg
ret
enter
insl
psubsw
sub
adc
jns
imul
push
inc
push
add
or
pop
dec
cmpsb
fldt
push
mov
pop
popa
cmp
out
jmp
mov
pushl
out
int
pop
fstl
mov
jo
push
sub
cs
adc
add
ret
std
dec
adc
and
push
sub
sub
dec
lds
inc
xor
push
nop
pusha
fs
mov
repz
ja
ret
jbe
adc
ja
jl
aad
pop
outsb
add
sbb
and
jecxz
pop
or
sub
clc
lds
inc
cmpl
xor
xor
and
cmpl
inc
negl
mov
xchg
mov
shlb
in
mov
jmp
fidivs
int
pop
adc
icebp
xchg
fisubl
out
nop
xchg
xchg
sahf
in
mov
imul
rcl
inc
fldt
mov
jns
fs
loop
popa
dec
daa
in
push
inc
jg
jle
sub
movsb
int
aad
int
fldt
jg
sub
into
int3
fstl
sbbl
sub
add
xsavec
inc
bound
pop
lret
mov
push
sub
mov
test
mov
jo
stos
dec
mov
sbb
inc
cmp
subb
vrsqrtss
push
std
cmc
call
jmp
popa
lcall
sbb
mov
scas
mov
lcall
subl
lahf
mov
inc
mov
shrw
dec
sbb
inc
loope
das
inc
jmp
pushl
mov
outsl
or
jo
mov
in
pop
stos
push
xchg
mov
adc
push
cwtl
test
imul
mov
add
lods
fcmovnb
lods
arpl
and
in
aad
dec
loopne
push
adc
sbb
dec
push
lret
sub
and
xor
mov
pop
mov
sub
sbb
push
adc
or
fxam
popa
sub
psubw
incl
xor
adc
push
xor
insl
lds
and
ds
dec
xchg
outsb
mov
push
jl
lahf
push
mov
notb
push
dec
mov
and
loope
xchg
mov
mov
cmp
add
nop
dec
xchg
xor
add
jns
lcall
jns
jl
adc
cwtl
or
pushf
out
cmc
mov
lods
arpl
xor
outsb
or
testb
push
or
scas
cmp
cmp
pop
mov
adc
adc
sbb
jecxz
inc
out
mov
adc
inc
inc
pop
out
imul
add
cmp
jo
mov
jbe
xor
pop
mov
jmp
movsl
pop
fld
test
add
xor
mov
icebp
js
push
xor
add
cld
leave
inc
pop
xor
lock
dec
push
or
cmc
cpuid
adc
or
sbb
enter
mov
sbb
inc
xchg
sar
xchg
int
sub
icebp
inc
sbb
movsl
push
mov
cmp
lods
jnp
xchg
rclb
stos
cmp
icebp
mov
test
rorb
and
ret
in
mov
subb
in
loop
sub
addr16
clc
dec
or
push
jle
or
mov
mov
add
push
jbe
mov
dec
shll
lret
jb
dec
jae
in
pop
mov
cmp
sti
add
mov
adc
aaa
cltd
xor
mov
xchg
xchg
xchg
insb
xor
mov
cmp
add
arpl
faddp
sub
xchg
push
in
jns
pop
pop
sbb
mov
sbb
mov
dec
dec
fs
adc
lock
xor
lods
adc
sub
xor
inc
stc
xchg
es
jb
stos
push
mov
lret
jle
mov
ljmp
xor
fimull
ds
mov
ljmp
arpl
test
inc
pop
push
int
push
das
sti
pop
xorl
push
outsb
mov
lods
mov
cmc
push
int
sbb
mov
pop
movsb
arpl
inc
pop
lret
mov
sti
clc
das
xchg
call
xchg
mov
sbb
cmp
js
push
mov
mov
dec
xchg
cs
xlat
je
and
ja
mov
gs
xchg
cltd
fstps
xor
das
push
enter
push
and
sub
mov
add
mov
cmp
ss
mov
fidivl
pop
call
pop
mov
les
inc
push
incl
shrl
in
cmp
xor
cld
push
jg
stc
insl
xor
into
mov
sub
xor
lret
push
xchg
imul
inc
mov
push
ret
push
setnp
ficompl
icebp
fs
enter
jge
jnp
adc
ret
shll
out
js
jne
in
pop
inc
xor
mov
pop
push
fstps
fsubs
mov
imul
add
lds
jne
in
mov
cmpb
push
jne
or
mov
adc
xor
sbb
rcr
mov
dec
mov
loopne
mov
test
je
jle
lods
xchg
jge
cwtl
shll
inc
fldl
jge
ljmp
push
cmpsl
adc
jns
sar
dec
mov
insb
and
outsl
mov
mov
or
adc
cmc
cmpsb
push
lret
cld
cmpsb
aad
jle
and
and
in
cmpb
sub
sub
mov
push
dec
cs
shlb
xchg
int3
cli
ret
mov
repz
sub
iret
dec
push
stos
sbb
je
adcb
inc
enter
mov
ja
outsb
sub
jmp
push
imul
ds
test
in
fdivs
std
mov
aaa
addl
adc
cmp
jle
es
or
sub
jle
pop
test
icebp
daa
mov
dec
pop
jp
mov
repz
loop
mov
xor
cli
adcl
sbb
loopne
jmp
stc
lock
sbbl
sbb
and
sbb
mov
jp
jge
add
mov
push
cmpb
mov
lea
and
sub
mov
cmpsb
and
clc
mov
aad
mov
clc
iret
in
mov
xchg
inc
lret
or
or
dec
aas
mov
jp
fbld
mov
mov
pushf
cmc
inc
mov
push
mov
mov
pushf
sub
mov
jne
pushf
mov
dec
fistps
rorl
dec
push
push
sub
lcall
mov
aaa
movsl
mov
mov
push
lds
and
jle
addl
pop
mov
aaa
negb
mov
js
inc
orb
jecxz
push
or
sar
push
mov
add
outsb
push
fbld
add
imull
pusha
test
shrl
int
cmp
xor
dec
mov
cmpb
into
fwait
pop
decl
mov
jmp
sub
lock
xor
stc
xor
push
aas
pop
mov
push
jbe
cmp
test
inc
sbb
cmpsb
push
xorb
fnstenv
or
jno
cmp
lret
sbb
cld
pushf
inc
fldt
std
ficoms
xchg
dec
xchg
adc
lods
sbb
xchg
sti
fsubrl
push
sbb
ret
xchg
dec
add
test
cmp
or
jle
subb
push
test
xchg
or
aam
push
in
push
jl
jmp
bound
dec
popf
push
out
xchg
mov
loop
dec
pop
jecxz
mov
scas
jecxz
lret
int
test
push
pop
cs
in
add
imul
mov
das
in
lds
mov
int3
loope
jnp
dec
dec
jns
mov
xchg
cmp
pop
enter
loopne
pop
lahf
push
or
pop
das
pop
mov
xor
inc
add
fsubrl
mov
lds
mov
sysexit
dec
dec
rclb
int
fnstcw
dec
das
inc
xor
lcall
jae,pt
mov
aad
xor
js
pushf
mov
xchg
sti
jmp
scas
pop
sub
out
nop
lret
jge
leave
jb
outsb
inc
cwtl
fwait
and
sbb
sarb
jnp
enter
jge
pandn
sbb
aaa
pusha
add
movsl
cmpsb
popl
push
xorl
test
mov
pmullw
pop
out
push
xchg
movsl
mov
mov
test
fimull
in
jns
gs
inc
addr16
scas
repz
jle
sub
cld
aam
push
add
inc
std
add
int
sbb
xchg
or
idivl
int
testl
xchg
nop
xchg
mov
sub
lods
into
hlt
sub
in
out
push
fstpt
sbb
mov
es
pop
adc
mov
imul
and
mov
mov
dec
mov
lds
or
pop
adc
mov
rcll
pcmpeqd
imul
mov
out
fs
pop
push
inc
filds
clc
mov
ds
lock
mov
js
nop
add
ret
and
and
pop
jns
add
clc
popf
iret
not
adc
sub
push
out
jbe
pop
sbb
xorb
in
mov
inc
jecxz
daa
inc
shrl
shll
div
xlat
aas
cwtl
xor
ret
xchg
sbb
cmp
xorl
ss
vhaddpd
mov
pop
fwait
pop
push
sbb
les
push
cld
mov
mov
insb
xor
movb
dec
add
iret
pop
mov
pop
idivb
and
xchg
sbb
cwtl
scas
popf
scas
add
cmovbe
sbb
dec
xor
sub
lods
ret
sbb
mov
inc
pop
xchg
repnz
mov
shrl
push
cmp
mov
data16
loopne
repz
add
sbb
mov
push
sbb
mov
push
add
jge
outsl
sub
pop
adc
aaa
repz
sti
rcrb
test
outsb
insb
data16
imul
mov
push
lret
in
xchg
cld
xor
xchg
cld
jp
fdivrs
in
pop
dec
lret
push
mov
jg
xchg
mov
in
jmp
push
xor
mov
rcll
adc
sub
popf
fs
scas
cmp
adc
and
cmp
test
aas
cmp
rdmsr
lods
call
out
hlt
push
mov
lods
repz
lods
jle
mov
test
sbb
movsl
aas
cmp
ds
sbb
lock
sahf
cli
orl
out
cmp
or
adc
fdivrl
mov
xchg
pop
rclb
and
and
dec
sti
fistpl
mov
cmp
jb
xchg
icebp
cmpsl
mov
pushf
pop
dec
xchg
insl
sbb
mov
leave
xlat
and
cld
jge
aas
mov
test
scas
cmp
jge
popa
inc
cli
jbe
dec
push
cld
pop
loop
lods
adc
xchg
jmp
lea
mov
cmp
xor
nop
rol
loopne
fwait
mov
xchg
push
sub
lods
jle
jns
std
push
lods
lods
fmulp
jnp
or
mov
cmp
mov
jp
push
add
mov
scas
xchg
and
cmp
mov
jo
push
jle
fistl
ljmp
mov
lods
daa
test
jno
xchg
mov
je
adc
mov
shlb
shll
fdivr
inc
xchg
das
xor
cmp
movsl
mov
into
sti
clc
jns
xchg
outsb
jns
adc
fwait
add
and
push
pop
shrb
daa
rcrb
into
int
add
in
adc
xchg
adc
dec
scas
fdivrl
push
pop
popf
loop
shlb
mov
push
nop
je
adc
cld
fcoml
mov
lock
xchg
pushf
and
stc
push
pushl
movsl
push
pop
inc
push
xchg
ja
sbb
std
push
xor
xchg
mov
push
jnp
cmpsb
out
cmp
int
pshufw
lock
in
sbb
test
xor
mov
mov
jno
push
rorb
push
mov
jbe
cmp
sbb
xchg
xchg
xchg
mov
jns
sbb
nop
push
aaa
lock
loope
les
or
lds
cmpsl
sbb
ud2
sub
dec
jmp
mov
ficoms
ss
sbb
clc
push
adc
mov
push
dec
mov
sub
push
push
pusha
cmpsb
cmp
jnp
adc
pop
stc
push
leave
jae
jecxz
clc
outsl
mov
jno
pop
sub
nop
xrelease
addl
add
jnp
fstpt
pop
xchg
xchg
sbb
inc
and
push
jp
fidivrs
movsl
add
ljmp
mulb
scas
idivl
out
mov
ljmp
jp
mov
xchg
leave
out
loopne
sub
in
xchg
push
ret
mov
cwtl
inc
add
xchg
fsubs
idiv
add
sbb
jge
and
ja
aaa
xorb
ja
and
push
or
repz
jl
add
cmp
and
or
dec
pop
add
inc
push
je
js
nop
xchg
jae
xlat
pop
cmp
push
loope
test
or
pop
xor
cltd
jo
mov
mov
sahf
icebp
ficoms
mov
push
scas
insb
popf
fcoml
lahf
inc
mov
mov
jnp
int
jmp
xor
pop
test
sti
cmpsb
and
cmp
and
call
cmp
insl
inc
sub
cltd
xchg
mov
or
out
jnp
inc
sub
ja
mov
or
imull
pop
xor
dec
push
fiadds
sub
test
fwait
aad
cmp
lret
lahf
inc
lds
cltd
mov
lcall
scas
outsb
jno
lea
jns
scas
imul
in
mov
xchg
gs
out
pop
cld
es
mov
adc
loopne
outsl
outsl
lret
sbb
mov
lock
xchg
jnp
sbb
dec
lahf
or
lahf
add
into
adc
icebp
dec
das
push
jl
xor
stos
scas
xor
stos
add
inc
mov
outsl
imul
cmp
jp
cmp
or
jb
repz
cli
cs
xor
adcl
scas
pop
sahf
jnp
das
mov
mov
test
out
add
aad
xor
jo
cmc
mov
jl
pop
aaa
pop
push
outsb
mov
subb
jge
push
inc
ja
addr16
xor
adc
jmp
adc
inc
xor
push
hlt
mov
stos
lcall
int3
cltd
sub
scas
or
lods
and
mov
inc
push
mov
mov
fisubrl
lret
add
push
aaa
push
mov
jg
dec
jns
lahf
xor
jmp
scas
pop
shl
push
mov
pop
and
scas
aaa
mov
mov
push
cli
mov
sub
cmp
in
pop
push
stc
ret
lret
adc
pop
inc
inc
push
test
or
shl
pusha
dec
and
or
sub
adc
sub
pop
or
pop
pop
sbb
out
getsec
xor
faddl
sbb
scas
cli
and
imul
jle
das
mov
in
jmp
in
test
test
out
clc
ret
push
std
lds
pusha
pop
sti
lods
fwait
adc
mov
sub
dec
push
jno
xchg
jp
pop
cmpsb
cmp
mov
push
push
jnp
das
popa
negb
dec
adc
or
mov
add
aad
lcall
movsb
sbbb
in
push
pop
lods
sar
loop
xchg
insb
adc
pop
lea
inc
rol
rol
cmp
push
jae
repnz
hlt
je
add
in
clc
sahf
repz
notb
ret
xor
out
cs
into
adc
xchg
or
sbb
fsubrl
mov
out
iret
mov
les
jnp
das
adc
mov
xchg
lret
adc
test
jp
cmp
lea
sub
add
loope
mov
push
push
jecxz
ja
es
mov
pop
dec
mov
jbe
inc
js
inc
push
stos
les
dec
leave
sahf
fldenv
insb
xor
xor
sub
std
add
sub
mov
jmp
xlat
call
pusha
mov
andl
jmp
pop
test
pusha
sub
mov
ret
inc
insb
add
into
push
in
mov
in
idivl
sbb
adc
daa
add
add
pop
and
jecxz
sub
rclb
add
pop
xlat
inc
add
sbb
leave
add
js
adc
out
js
jnp
add
cmp
lds
pop
xlat
lods
ss
scas
or
int3
data16
leave
or
push
mov
repz
mov
jns
nop
movsb
fidivrs
je
sbb
lahf
imul
xlat
push
lret
push
inc
imul
sbb
push
test
push
sbb
or
pop
cmp
adc
or
xor
push
cli
int
adc
jae
inc
cmp
sub
push
inc
xor
add
cmpsb
lods
cmp
lea
add
loope
loop
pop
xchg
pop
sarl
scas
mov
ja
in
clc
popf
adc
adc
mov
inc
dec
push
sbb
addr16
xchg
mov
fldenv
push
test
xchg
or
and
cld
lock
dec
jmp
pop
add
or
xor
fnsave
push
in
or
mov
pop
jp
mov
xchg
stos
vpsrld
or
or
mov
loopne
add
test
and
mov
into
fsts
les
mov
sahf
clc
ja
mov
je
sub
das
pop
mov
adc
mov
lock
mov
xor
mov
dec
cmpsl
call
sub
insb
and
lea
cmpsb
or
push
stos
push
xchg
cwtl
sub
fsubs
mov
lods
fwait
xchg
sbb
xchg
das
cmp
cmpsb
adc
outsl
xor
add
outsl
fsubrs
mov
sbb
test
shll
ficompl
pop
fistl
call
icebp
mov
jmp
fwait
dec
and
xlat
sub
push
mov
test
adc
test
cmpsb
add
dec
jo
test
mov
negl
orl
jne
lods
std
mov
mov
and
mov
insl
mov
in
ret
add
test
out
xor
enter
fistl
mov
fisubl
icebp
mov
out
aas
mov
mov
cmp
in
pop
dec
in
push
jge
rcll
inc
xor
and
lret
cmpsl
push
das
dec
aad
lahf
jns
dec
movsb
jbe
cmc
gs
pop
jecxz
or
imul
jne
mov
stc
add
outsl
das
loope
gs
sbb
ja
mov
fucom
pop
pop
or
sbb
repnz
push
aas
xor
insb
pop
xchg
inc
pop
xor
and
adcb
int
aam
or
mov
adc
xor
xlat
mov
leave
mov
mov
mov
lret
and
add
or
aaa
jo
sbb
in
jecxz
sbb
leave
jp
inc
xchg
push
sarl
mov
aad
or
pop
push
inc
push
sub
pushf
xchg
push
movsl
and
mov
cmp
jb
pop
fidivrl
push
add
popa
aaa
popa
or
adc
xchg
hlt
outsl
inc
outsl
mov
xor
xchg
inc
stc
scas
mov
es
pusha
push
inc
jl
sahf
sbb
pop
stc
push
ss
xchg
cmp
mov
jmp
arpl
fcompl
pushf
jns
loop
rol
and
push
xchg
mov
inc
lds
xchg
loop
nopl
pop
shll
das
je
pop
enter
fwait
movsl
enter
add
fnclex
mov
pop
daa
jg
or
popf
sbb
mov
test
mov
mov
sti
mov
repnz
add
test
mov
cmp
mov
mov
sbbb
mulb
ret
iret
aam
imul
xor
movsl
test
lret
cmp
inc
nop
jnp
rol
pushf
sbb
subl
xchg
mov
xchg
add
push
pusha
aaa
inc
or
inc
fs
add
adc
int3
dec
pop
jb
pop
dec
or
jmp
aad
mov
cmp
xchg
icebp
test
jo
movsb
push
mov
sbb
sbb
or
in
add
and
ret
and
mov
sbb
cld
mov
cmpsb
movsb
mul
sub
mov
mov
push
jno
jle
adc
fs
daa
sbb
mov
jmp
loop
rclb
inc
inc
fcmovnb
mov
out
inc
or
inc
js
das
or
div
mov
push
mov
adc
mov
in
clc
popa
inc
push
popf
mov
insl
jae
sbb
movsb
and
mov
ja
adc
lods
mov
outsl
push
push
push
add
sub
sbb
push
in
loopne
dec
mov
mov
in
mov
mov
cli
and
push
rcrb
cmp
jg
rcll
dec
pushf
push
mov
std
xor
rorl
push
xor
mov
adc
fcmovnu
lods
dec
jae
test
mov
push
mov
movsb
jp
sbb
sar
pminub
insb
jb
fstps
pushl
stos
mov
or
dec
jno
in
stc
sbb
and
sarl
pop
pop
icebp
xchg
add
mov
pop
mov
ret
testb
push
dec
mov
mov
jge
rdrand
add
cltd
sub
mov
add
jecxz
enter
cltd
enter
mov
in
mov
popa
incl
pop
mov
das
in
mov
sub
mov
inc
mov
xor
push
push
sub
add
xchg
cmp
bsf
das
fisubs
scas
or
jne
push
aas
and
mov
aad
das
pop
imul
lret
xchg
roll
fildll
cmp
inc
mov
lret
inc
mov
jnp
xchg
imul
sbb
adc
push
mov
dec
mov
mov
sbb
jb
repz
or
xlat
daa
fldt
mov
add
pop
or
jo
pop
jmp
fiaddl
mov
out
fadds
repz
lahf
lcall
daa
movsl
aad
test
jl
cmp
push
fisubrl
bound
mov
jnp
stos
xor
sbb
jmp
loop
sub
int3
mov
mov
sub
sbb
cwtl
icebp
push
out
int
inc
out
lods
cmc
lret
xor
add
aam
lcall
pop
inc
sub
mov
xchg
out
lret
aaa
dec
xor
and
sbb
push
js
or
in
mov
push
pop
jmp
sbb
pop
push
mov
andb
scas
dec
cli
adc
mov
mov
fcmovu
ds
pop
shrb
mov
xor
lea
push
jle
mov
or
mov
jmp
push
jg
dec
cmc
inc
and
sbb
rol
and
adcb
xchg
cltd
outsl
icebp
gs
push
ficomps
dec
sub
or
pop
clc
jbe
mov
stos
mov
dec
sub
jl
cmc
addr16
or
jae
rorl
shl
adc
das
bnd
adcb
pop
cmpsl
push
stos
imul
jnp
xor
addb
lret
pushf
daa
jp
jo
addr16
std
ds
push
inc
pop
aad
xlat
and
ja
or
lods
dec
loope
test
inc
test
mov
cli
add
mov
and
jnp
push
pop
dec
ret
pop
gs
sbb
push
test
jecxz
xchg
stos
add
inc
enter
or
add
push
inc
test
movntps
scas
fsubp
adc
out
sahf
test
xor
adc
xlat
and
mulb
cli
sti
jmp
dec
aas
add
and
lcall
imul
js
int3
push
mov
cltd
jmp
dec
icebp
push
lahf
xchg
jno
adc
inc
sub
cmp
xor
or
push
xor
adc
jnp
or
mov
gs
sub
std
xchg
fstps
mov
push
inc
pop
fwait
inc
dec
add
add
outsl
mov
xchg
lods
xchg
dec
arpl
sub
push
or
mov
adc
in
push
xchg
loope
inc
iret
dec
jae
cmp
loope
outsl
mov
repz
rcrl
sub
pusha
xchg
les
inc
sahf
imul
arpl
push
jg
lret
in
shll
cltd
mov
mov
add
aam
test
xlat
jle
gs
js
outsb
or
addr16
mov
sub
fcomps
xchg
add
mov
pop
repnz
push
inc
mov
sahf
push
cmpsb
jmp
xchg
xor
sahf
jae
and
dec
xor
movsl
insl
jl
lock
push
sub
xchg
fs
push
insl
sbb
bndldx
inc
jns
push
inc
mov
pop
sub
dec
sbb
movsl
mov
test
add
enter
mov
rorb
test
pop
mov
in
dec
add
gs
enter
cwtl
rolb
cli
negl
mov
push
jns
imul
and
pop
mov
pop
scas
adc
xchg
in
add
add
sub
fwait
dec
mov
sbb
mov
xor
test
pop
mov
pop
fdivl
sbb
jle
or
aam
fsubl
test
test
push
lret
cmpsb
push
cld
mov
int3
mov
scas
push
push
jb
ret
xchg
js
xchg
lret
fisttps
fsts
stos
aaa
and
mov
inc
jge
pop
xor
orb
shll
and
inc
xor
pop
sahf
pop
xorb
inc
jb
jge
adcb
mov
or
push
cs
inc
iret
ds
pop
ss
jno
sbb
sbb
mov
ja
or
data16
incl
das
dec
push
shlb
into
mov
jne
pop
mov
rcl
jge
aad
rorl
rol
into
testb
jnp
leave
enter
pop
pushf
adc
mov
cmc
inc
push
jmp
rcll
add
xchg
cmp
test
adc
daa
cmc
in
xchg
add
xchg
adc
popa
adc
sbb
rcrl
popf
outsl
icebp
aaa
inc
ss
stos
sbbl
cmp
xor
xchg
nop
popa
pop
stc
dec
in
inc
popf
push
arpl
mov
flds
jmp
xchg
jl
fstl
add
dec
fiaddl
lock
cld
test
incb
mov
scas
mov
fwait
push
push
call
out
fs
dec
shrb
jb
mov
cmp
fs
mov
vmovapd
es
inc
mov
dec
test
rclb
ss
xchg
sbb
clc
les
cmpsl
mov
sarl
mov
es
adc
xchg
sbb
ja
out
scas
push
xor
cmp
icebp
cmp
and
pop
movsb
dec
dec
pop
dec
push
mov
stos
xor
fidivl
mov
pop
cmp
pop
add
pop
push
cmpsb
repnz
ret
add
sbb
sbb
sarb
jbe
add
iret
imul
test
mov
lock
das
push
ret
inc
inc
fwait
loopne
fisttpll
movsl
int3
xchg
mov
pop
aam
subl
jnp
cmp
mov
insl
adc
loop
add
shl
dec
loop
push
rclb
xor
in
or
gs
pop
xor
arpl
push
insl
std
ss
sbb
fsubl
movsl
push
cmc
loop
mov
and
clc
jmp
xor
pop
fwait
jg
mov
xor
push
into
pop
mov
mov
ret
xor
popa
push
pushf
xor
sti
push
cmpsl
add
jne
sbb
xor
jmp
sub
inc
inc
mov
cmp
mov
add
inc
loop
js
dec
loop
das
iret
xchg
lcall
sbb
rorb
imul
mov
jbe
in
shrb
xor
sahf
jae
mov
and
std
mov
cmp
push
iret
mov
fdivs
mov
push
leave
ror
lods
push
jg
mov
dec
js
and
mov
fwait
jno
iret
pop
mov
xor
mov
rcr
add
pop
cli
mov
divb
in
jns
cwtl
rcrb
mov
imul
xchg
ret
xchg
mov
lcall
sbb
enter
popa
xor
xor
pop
shl
sub
fsts
idivl
mov
xor
outsb
mov
cld
popf
lock
inc
jnp
mov
into
clc
xchg
shlb
inc
and
cwtl
lahf
lahf
xor
mov
xchg
cmp
mov
or
lcall
jno
push
rcrw
lcall
sub
pmaddwd
push
or
into
aam
pop
inc
cmc
fs
pop
imul
popf
push
imulb
lahf
in
lods
subl
jns
pop
inc
std
stos
daa
ret
xlat
pop
imul
xor
in
mov
dec
aaa
cmp
inc
push
xchg
test
sub
jge
adc
and
nop
ds
mov
aaa
repz
push
aas
out
mov
les
outsl
dec
push
xchg
ss
mov
dec
jae
lret
ds
pop
ss
loopne
lcall
imul
xchg
mov
sahf
jmp
mov
jg
cmp
push
mov
testb
daa
mov
ret
lea
mov
or
cmp
ds
lods
mov
enter
push
int
cwtl
push
cmp
cmp
movsl
movsb
dec
cmc
jp
mov
dec
mov
inc
push
push
jbe
sub
xlat
push
fisubl
and
xchg
arpl
xchg
pop
mov
cli
addl
hlt
ret
mov
push
adc
dec
inc
push
dec
pop
fists
jg
and
testb
adc
dec
out
notl
cmp
jno
push
clc
movsl
or
sahf
mov
push
and
xchg
mov
adc
jbe
sub
lods
or
dec
pop
inc
adc
in
mov
popf
and
adc
add
aaa
clc
enter
add
jmp
lret
and
xchg
movsl
shll
ret
push
sbb
sub
into
xor
rolb
adc
dec
std
cmpsl
xor
xchg
mov
das
sarb
adc
lods
bound
pop
addr16
ficoml
in
sub
rolb
outsl
popa
jo
adc
jno
or
cmp
mov
mov
add
js
xchg
mov
or
lahf
add
inc
pop
lds
cmp
imul
out
adc
pop
movsb
aaa
xchg
mov
mov
jne
inc
jmp
jnp
aaa
xchg
outsb
ss
xchg
inc
push
mov
cmp
ljmp
es
sbb
xor
cltd
iret
adc
int
xchg
cmpsb
or
pushl
dec
mov
pop
cltd
sub
test
adc
les
cmpl
push
ret
jl
cwtl
mov
rol
lret
dec
push
xor
push
xorb
jg
cli
mov
adc
inc
adc
pop
adc
dec
xchg
ret
testl
adc
mov
ds
cmp
xchg
enter
mov
xchg
mov
jle
adc
cmpl
fldl2t
and
pushf
jecxz
sbb
das
lods
test
inc
add
jo
sbb
jnp
imul
aad
fstpl
jnp
cwtd
push
test
xchg
addb
in
sub
xchg
aad
shrb
lcall
dec
jle
sub
dec
lahf
gs
icebp
adcl
dec
adc
or
mov
fbld
xor
imul
hlt
adcb
mov
in
adc
in
fsubl
dec
xor
pop
xlat
fidivrs
mov
stc
movsb
dec
mov
enter
jmp
mov
cmp
daa
jmp
notb
jnp
aaa
mov
aas
into
sub
xor
nop
pop
sbb
pop
pop
mov
movsl
ffree
cmp
xlat
mov
mov
loopne
add
cmp
hlt
out
ss
xlat
push
jmp
or
sbb
dec
repnz
mov
xchg
test
testb
push
push
jns
std
popa
call
scas
mov
andb
add
push
int
cmp
repnz
mov
jno
sahf
jns
lock
leave
addl
jl
icebp
adc
popf
outsl
or
sbb
test
xchg
mov
nop
jns
add
ret
sub
xchg
push
mov
mov
movsl
and
mov
mov
mov
push
and
bound
jb
sbb
pusha
cmp
mov
jmp
aad
cmp
mov
cmp
sub
in
mov
lahf
call
rclb
mov
jbe
lds
mov
cmp
clc
pop
movsl
add
dec
scas
sbb
and
out
inc
repz
fdiv
cwtl
sub
iret
xchg
lahf
pop
mov
and
jle
inc
or
decl
pop
les
xorl
push
mov
mov
shl
int
negb
loop
or
leave
rcll
dec
pushf
jnp
inc
jne
dec
xchg
push
fldl
aas
mov
mov
add
mov
dec
xor
in
icebp
inc
mov
pop
out
nop
push
das
int3
cmpsl
adc
push
stos
fdivs
adc
js
fcoml
testl
xchg
outsb
sbb
xchg
xor
clc
pop
pusha
shlb
sbb
aaa
sbb
outsb
imul
outsl
jl
dec
fwait
cmc
or
in
pop
outsl
popa
xchg
sbb
xor
push
test
mov
pop
xor
xor
xor
mov
mov
outsb
push
sbb
mov
inc
lods
shll
mov
adc
sbb
leave
push
jmp
repnz
popl
dec
mov
insb
inc
cmpsb
mov
adc
mov
inc
stc
dec
and
sub
adc
iret
dec
sub
out
mov
mov
dec
sbb
sbb
cmpsl
int
dec
ljmp
pop
shlb
cmp
cmp
sbb
call
shrb
or
jp
jo
xchg
lahf
jno
jecxz
adc
mov
dec
subl
inc
add
fadds
push
aas
dec
scas
pop
sarb
pop
cmpsl
shlb
and
mov
pop
sub
pop
bound
or
xor
test
lds
movsb
icebp
jne
mov
loope
fcoms
jg
test
int
nop
in
jae
pop
sub
pop
ljmp
repz
sahf
xchg
lcall
jae
push
inc
stc
inc
repz
je
jns
pop
js
add
lahf
faddp
pop
push
scas
hlt
xchg
cltd
mov
pop
aas
xchg
les
xchg
mov
cs
adc
cmp
jge
subb
push
mov
mov
ret
jb
sub
sahf
mull
sub
mov
fwait
mov
push
xor
movsl
lds
or
or
jne
dec
sbb
insb
ja
sbb
cmp
pop
push
call
repz
jb
loope
jo
fiadds
mov
push
test
aad
xor
subb
jp
bound
sbbb
mov
mov
push
lret
cltd
pop
sub
mov
mov
out
rorl
xchg
mov
enter
bound
lds
jbe
fxch
idivb
mov
into
lahf
cmp
mov
xchg
jge
notb
or
jl
popa
cmp
adc
xchg
jecxz
pop
mov
es
rcrb
and
and
sub
dec
or
shl
nop
movsl
pop
jne
stos
dec
lods
sub
mov
sbb
int3
lods
mov
cmp
sbb
scas
arpl
jg
pop
push
dec
fadds
xchg
cli
shlb
push
lods
xchg
mov
mov
xorb
lods
cmp
out
test
pop
les
jo
cmpsb
imul
ja
stos
mov
addr16
cs
sbb
dec
cmp
test
jge
ss
int
lock
push
inc
imul
add
pusha
push
test
lahf
xchg
pop
cmp
and
imul
nop
imul
aad
mov
mov
mov
jge
loope
and
xor
xorl
sub
mov
mov
loopne
push
imul
and
push
push
ds
test
ds
mov
push
imul
xor
mov
cs
push
rolb
jnp
sahf
or
pop
inc
fwait
lea
jp
scas
stos
mov
ret
insl
sbb
mov
cmp
jle
sbb
or
insb
xchg
and
xor
adc
xor
pop
mov
outsl
push
dec
or
insl
lea
fstpl
icebp
outsb
inc
pusha
mov
pop
sub
push
inc
and
aas
xchg
call
jle
int
mov
adc
mov
das
cli
clc
adc
cmp
pop
add
mov
cmp
jne
xor
sti
inc
push
push
in
adc
inc
lea
xchg
push
or
jae
pusha
xchg
call
xor
mov
dec
inc
dec
mov
mov
xchg
jns
int
jno
ret
xor
xchg
cmp
adc
lea
loop
mov
inc
pop
pop
and
or
pop
mov
jl
mov
aaa
mov
aam
movsl
sarl
jbe
fnsave
movsb
daa
sbb
mov
sahf
adc
adc
and
cmc
pop
hlt
pop
je
ret
mov
pusha
dec
cmp
stos
jbe
jbe
xor
or
adc
mov
stos
int3
popa
sbb
xchg
jnp
push
cmc
xchg
mov
adc
jmp
out
int3
cld
mov
xchg
and
xchg
inc
pop
push
xchg
inc
repz
mov
jp
mov
imul
test
pop
stos
dec
cltd
stc
call
adc
je
mov
aad
xor
or
dec
loopne
mov
pop
pop
push
gs
pop
pop
jbe
mov
push
mov
js
sti
dec
xchg
xor
jbe
adc
jns
test
scas
imul
adc
lret
adc
xor
mov
mov
lahf
insb
sbb
popf
adc
mov
xchg
cmp
cltd
dec
je
jl
mov
cwtl
sub
xor
fstl
and
sbb
aam
js
into
mov
sub
pop
sub
sbb
dec
pop
dec
mov
or
push
adc
sub
jae
xchg
sahf
lcall
test
out
outsl
ss
add
call
mov
push
les
test
push
xor
movsb
xlat
dec
push
dec
addr16
pop
sub
out
fmull
push
push
aaa
pop
mov
cmp
xlat
or
push
push
mov
pop
or
call
cmc
push
jp
pop
repz
mov
mov
insb
dec
sbb
roll
xchg
in
push
dec
jl
and
push
xor
and
mov
pop
cmpsb
scas
mov
adc
imul
xchg
xor
lcall
dec
lods
add
pop
cmp
into
in
pop
push
neg
jbe
dec
mov
cmp
add
pop
pop
fwait
lcall
int
push
mov
shr
xchg
pop
imul
mov
mov
negl
out
outsb
lret
test
adc
jns
repz
mov
daa
icebp
loope
outsl
fnstcw
mov
xchg
xchg
pop
add
gs
rol
imul
sbb
repz
nop
repz
add
add
clc
and
adc
mov
movb
mov
scas
xor
xor
mov
lds
pop
das
inc
add
push
mov
add
push
roll
shll
rcrl
push
loop
out
pop
xchg
aam
imulb
rcr
fmull
addr16
movsl
scas
mov
inc
int3
xchg
push
sub
icebp
inc
mov
add
pop
or
fdivrs
test
push
push
pop
out
jecxz
shlb
clc
sub
mov
scas
inc
push
cs
and
add
iret
sti
js
and
pop
data16
jle
orb
xorl
dec
cmpsl
js
lahf
lcall
xchg
mov
test
ljmp
jns
push
push
int
lahf
dec
cmc
and
aas
sub
mov
pop
xor
push
in
push
jo
jnp
add
jmp
aas
and
pop
push
sub
dec
nop
cs
fists
mov
stc
loope
xlat
mov
or
sub
mov
xor
fldcw
sub
ret
and
or
adc
push
je
imul
pop
mov
mov
mov
cmc
fadds
mulb
mov
rcrl
dec
xchg
and
sub
mov
pop
in
mov
or
xchg
test
lea
xchg
out
mov
inc
xchg
ds
popf
xorl
cltd
adc
pop
cmc
and
pop
ljmp
or
loopne
cmc
addl
adc
hlt
call
xor
or
add
push
push
and
cltd
xor
pop
xchg
rorb
mov
push
pop
stos
fisttpll
or
test
mov
je
pop
xchg
mov
fcomp
xchg
test
jo
pop
popa
and
dec
cmp
inc
shll
inc
insl
rorl
dec
mov
in
adc
lret
int3
lret
pop
rclb
adc
pop
jne
pushf
xchg
cmpsl
sub
push
popf
cmp
sarl
test
sub
inc
cmc
mov
jl
dec
mov
clc
sbb
mov
ljmp
cmpsl
cmpsl
mov
adc
scas
cmc
push
mov
mov
outsb
mov
rcll
pop
outsb
cmp
xchg
mov
mov
fiadds
sbb
pusha
cmpsb
pop
aas
mov
jg
addr16
push
mov
jbe
sub
scas
out
leave
dec
sbb
lea
pop
jne
push
jp
xchg
fcoms
jo
jge
adc
or
jmp
inc
subl
sahf
cmc
jae
xor
add
cwtl
out
mov
adc
ja
sub
lock
mov
int
jecxz
or
subb
dec
int3
inc
cli
mov
cmpsl
out
xchg
xchg
push
shll
iret
gs
push
adcb
movsl
inc
xor
imul
xchg
fsts
push
fwait
push
outsb
and
lds
push
cmp
icebp
mov
pop
inc
cmc
jp
xchg
adcl
test
out
mov
push
in
push
insl
test
and
fs
in
push
shlb
push
stos
in
mov
pop
or
adc
mov
mov
inc
xchg
sbb
xchg
ficomps
int
enter
push
sub
decl
das
fnstsw
sbb
adc
ja
in
lahf
cmp
movsb
stc
push
jns
push
nop
jne
jne
fsubrl
les
mov
and
adc
pop
inc
mov
ja
mov
ja
loop
pop
ucomiss
mov
jg,pn
add
sbb
xchg
imul
xorb
sbb
mov
imul
mov
and
test
adc
lock
mov
lods
repnz
insb
test
rclb
pop
push
add
das
inc
mov
push
push
out
and
dec
das
lcall
xchg
jecxz
sub
pop
addb
xor
adc
sub
mov
nop
jbe
jge
push
fists
nop
jno
imul
dec
sti
fs
push
fisttpll
adc
in
or
push
and
and
inc
pop
inc
jno
push
dec
enter
cwtl
push
xchg
shlb
int3
imul
mov
inc
dec
xchg
xor
mov
call
xor
nop
insb
xlat
xor
lods
in
xchg
add
inc
pusha
jne
in
add
sbb
js
xchg
add
loop
mov
jbe
cmp
add
inc
mov
push
or
xchg
std
test
inc
arpl
jne
inc
jae
test
dec
pop
xor
fdivl
aas
sbb
lods
mov
inc
pop
sahf
lret
push
stos
or
lock
es
dec
stc
rolb
mov
aad
in
add
stos
imul
mov
push
jecxz
mov
sbb
sbb
adc
pusha
mov
cld
mov
cltd
aas
add
aad
mov
xchg
lret
pusha
xor
xchg
cmp
pop
stos
lret
and
lods
dec
push
inc
inc
mov
inc
mov
or
adc
arpl
sub
movsl
dec
pop
in
out
or
insl
adc
push
sub
mov
sub
rcrb
call
sub
mov
call
lods
call
mov
and
mov
ret
dec
stos
daa
jne
aaa
add
fs
scas
pop
ja
dec
push
inc
mov
sbb
sub
mov
jo
pusha
jl
sbb
inc
xchg
jo
nop
sbb
mov
out
in
push
das
mov
rorb
arpl
push
mov
push
repnz
sub
or
jge
aas
or
fisubrl
mov
movsb
out
or
push
test
jmp
mov
or
lcall
lahf
dec
ljmp
adc
sbb
loop
jl
mov
leave
iret
out
or
add
jnp
les
idivb
or
addr16
gs
and
sub
out
pop
mov
cld
out
xchg
popa
adc
daa
in
dec
xchg
dec
pop
xchg
pop
es
xor
jno
pop
xor
mov
jge
mov
cmc
jmp
push
pop
lahf
pushf
dec
in
inc
loop
ret
sbb
icebp
sbb
test
shlb
inc
sarl
cmpsl
push
popa
imul
pop
mov
mov
mov
lret
and
divl
cmovp
pushf
mov
fwait
sarl
sarl
and
jae
jae
cwtl
cmpl
inc
push
scas
cmp
inc
push
xchg
scas
lea
cmp
fwait
adcl
cmp
push
jno
clc
mov
jns
mov
push
insl
and
rorl
lods
subl
js
faddl
fcom
dec
push
out
in
test
mov
mov
jb
sbb
into
int
push
pop
jns
lea
xchg
xchg
mov
mov
arpl
push
xchg
xchg
cmpsb
jge
dec
stos
sbb
pop
or
jnp
std
outsl
scas
andl
jecxz
push
xor
xchg
movsb
outsb
aas
mov
mov
jns
mov
lods
into
popa
lods
sub
es
xchg
sub
dec
inc
dec
test
xchg
mov
cmp
gs
and
and
es
jecxz
orb
loop
je
repnz
popa
mov
hlt
jg
xchg
mov
fs
add
stc
pop
fisubs
cld
cltd
xchg
out
inc
fwait
jg
js
ljmp
mov
loop
jle
pop
mov
pop
addr16
or
out
push
pop
cli
mull
mov
or
decb
mov
xchg
add
mov
lds
add
fidivl
ret
mov
cmpsb
movsl
mov
mov
stc
and
mov
jecxz
movsb
inc
pushf
incl
out
sbbl
fwait
bound
xor
into
xchg
mov
sub
xchg
sub
pop
sbb
dec
pop
pop
sub
mov
xor
repz
add
push
aam
xchg
int3
negb
sahf
inc
subb
pop
jmp
enter
mov
mov
imull
pop
lods
adc
lahf
sarb
out
jmp
mov
jne,pn
mov
lahf
sahf
push
jns
dec
in
cld
mov
testl
and
pop
push
stos
lahf
add
push
lea
stos
rcrb
jmp
dec
int3
xchg
cmp
outsl
xchg
and
std
push
insb
sahf
cmpsb
jmp
jg
stos
ret
addr16
sub
movl
nop
pop
rcrb
sub
scas
pop
test
decl
inc
mov
call
inc
js
gs
stos
repnz
rcrl
lcall
or
cwtl
push
cmpsb
dec
xor
cmp
out
mov
mov
push
inc
add
aaa
pop
mov
pop
inc
lds
push
dec
sbb
call
cmpsl
ret
push
stc
aas
mov
add
add
add
fldl
cmc
xchg
dec
jl
lahf
mov
mov
stos
rorb
jecxz
pop
aad
push
and
jp
cmp
dec
inc
jecxz
adc
sub
add
scas
pop
push
inc
sub
popa
dec
rclb
cmp
enter
jnp
jecxz
lock
sbb
test
mov
xchg
sti
sbb
cmp
arpl
jo
lret
fcmovu
xchg
data16
cmpsb
notb
jae
mov
test
dec
pop
push
loop,pt
int3
mov
lahf
iret
jae
jno
xchg
and
push
lret
push
out
js
push
aaa
arpl
das
sarb
inc
xor
pop
fwait
sti
scas
adcl
lret
aad
enter
mov
notb
les
pushf
jns
ret
pop
mov
push
inc
or
pop
xchg
mov
sar
xor
push
nop
xchg
mov
dec
in
subl
cs
hlt
cmp
mov
push
sub
imul
and
inc
adc
push
lret
stos
add
inc
stos
lods
and
insb
pop
lods
das
mov
jbe
adcl
rclb
iret
sub
lock
dec
nop
jmp
pop
sub
sarb
cwtl
mov
jb
fs
out
xchg
cmp
adc
divl
mov
inc
loop
into
pop
scas
fwait
sub
mov
and
mov
shrb
scas
lret
sub
test
adc
js
mov
test
cltd
jne
popl
mov
mov
in
shlb
inc
ret
jle
outsb
pop
mov
nop
sbb
setp
adc
cltd
xchg
add
enter
iret
jmp
fldcw
in
mov
pop
call
pop
outsl
add
push
cmp
clc
push
fisubl
outsb
push
and
fldl
xchg
xchg
pop
int
pop
fs
mov
and
hlt
adc
inc
outsb
pusha
sahf
cli
cld
aam
push
xchg
xchg
lock
daa
int3
cmc
fidivrs
std
rolb
das
inc
jg
lods
xchg
mov
dec
mov
fildll
push
mov
les
es
addr16
sti
daa
adcb
mov
cmp
mov
inc
dec
daa
and
pop
popa
inc
leave
inc
aad
push
dec
stc
cltd
cmc
dec
roll
lret
loopne
push
dec
pop
out
lods
mov
xchg
out
fstps
punpckhwd
add
insl
add
aaa
adc
adc
dec
adc
scas
faddp
sti
push
int
mov
mov
stc
mov
ret
cmc
add
stos
adc
mov
out
sub
sub
mov
stos
aas
sbb
push
dec
imull
cli
xchg
pop
les
imul
frstor
loopne
fidivrl
notl
inc
mov
inc
and
clc
or
cli
inc
lcall
jg
fucomip
sbb
jb
sub
lea
gs
jl
dec
mov
sahf
fistl
sub
aad
int3
push
inc
mov
xor
fcmove
arpl
mov
mov
lea
sarl
push
js
dec
add
push
add
mov
xor
mov
mov
movsb
and
push
adc
cli
jne
aas
cmove
jb
popf
mov
test
inc
out
adc
xchg
add
fdivs
cmpsb
inc
add
jecxz
stos
fwait
aam
xlat
lock
sbb
xchg
mov
sti
pop
shll
or
pop
pop
fnsave
bound
mov
cmp
mov
sbb
xchg
xor
mov
push
mov
or
mov
inc
lods
cmc
push
adc
cmc
xchg
shll
dec
sub
mov
test
and
inc
std
arpl
and
sbb
dec
inc
dec
in
in
shll
push
mov
push
sahf
rcl
insl
test
sbb
mov
rcll
mov
push
fcmovne
add
push
cmpsl
pop
dec
mov
sub
test
sub
xchg
or
fnstenv
xlat
cmp
xor
fldenv
imul
imul
jg
push
jne
xchg
cltd
lret
testl
insb
jmp
lods
cmp
mov
roll
rorb
cmp
or
and
jp
test
sbbb
sub
mov
loop
cmp
bound
xchg
es
hlt
cmpsl
xor
xor
dec
aad
out
pop
arpl
movsb
mov
cmpsl
shlb
lret
push
or
popf
xor
enter
std
or
inc
dec
shlb
adc
mov
cmp
cli
inc
add
jecxz
test
imul
mov
add
in
loopne
lahf
mov
ss
jge
mov
jbe
sti
pusha
out
pop
pop
jge
jnp
jae
enter
adc
xlat
push
and
cmc
sub
push
cmp
xchg
fs
mov
loopne
arpl
aam
pop
aaa
cmp
aaa
jb
inc
sub
and
pop
popf
jne
inc
in
pop
sub
fchs
jo
stos
pop
andb
data16
mov
repnz
movsl
mov
clc
movsl
aad
mov
fsubrs
inc
and
out
mov
mov
out
les
fsubr
mov
xchg
jle
jge
ss
fists
sub
fstpl
xlat
mov
lahf
dec
add
mov
dec
or
jecxz
shrl
or
push
jg
imul
out
dec
pop
rcrl
in
push
lods
mov
jne
mov
sbb
imul
add
fs
add
dec
mov
mov
mov
lea
std
cmp
xor
push
hlt
bound
insb
iret
outsb
and
divb
icebp
sbb
pop
push
shrl
xchg
xchg
mov
lea
sti
out
daa
mov
je
in
jmp
push
outsl
gs
stc
outsb
out
fs
gs
inc
call
xor
mov
call
cli
sbb
movb
cmp
add
xor
jecxz
lret
jp
mov
lods
cmp
pop
or
mov
std
rorl
pop
cld
sbb
add
xor
fnstcw
cmp
pop
fwait
or
sbb
mov
mov
cmp
aas
scas
out
cmp
sbb
ficoml
les
cli
mov
mov
dec
out
mov
sub
and
cmp
fistpl
jae
ds
int3
dec
rol
shlb
cs
xor
shr
dec
fcoms
sbb
test
add
fcmovnu
notb
negl
out
mov
das
das
pop
pop
push
adc
ds
pop
push
scas
jb
ss
es
jno
out
dec
stos
xchg
adc
sarl
mov
shlb
xacquire
cs
aad
add
xchg
ret
cmp
fdivl
aam
mov
lret
lea
dec
mov
sahf
lcall
testb
outsl
pushf
mov
push
daa
xchg
push
icebp
xor
cmp
and
jg
repnz
mov
iret
repz
loop
ds
sbb
pop
out
or
into
add
repz
imull
aaa
mov
out
cmp
enter
and
loop
repnz
mov
push
dec
lock
pop
jae
sub
add
dec
inc
out
lret
js
fwait
xchg
add
pop
idivb
adc
scas
lret
jg
xchg
mov
inc
pop
sub
fcmovb
mov
inc
push
push
jns
shrl
call
sbb
cmpsl
push
cmp
or
mov
addl
dec
out
xchg
cmp
flds
jne
shl
push
inc
sub
cs
mov
push
shlb
pop
fisubrs
push
cmp
mov
dec
sbb
jbe
lahf
mov
inc
enter
xor
mov
test
jp
push
sti
popa
arpl
xor
sub
cmpsl
out
movsl
mov
test
loopne
cwtl
adc
add
mov
xor
pop
mulb
xchg
mov
out
mov
int3
je
ja
outsb
xchg
jbe
test
dec
lock
out
aam
test
fsubs
pop
or
lea
mov
and
push
jnp
mov
xor
mov
lret
or
or
pop
gs
push
lret
ja
sub
jl
aas
push
mov
pop
pop
loop
mov
int
lea
cld
dec
push
sbb
mov
dec
jle
in
shll
enter
hlt
add
fidivs
int3
jl
insl
sbb
adc
and
sti
mov
out
loop
std
repz
insl
sbb
outsb
mov
inc
ror
je
cld
adc
adc
push
mov
out
mov
mov
dec
pop
enter
rolb
inc
int
scas
adc
pop
ljmp
mov
loope
inc
add
ror
and
dec
mov
cmc
adc
cmp
ret
mov
sbb
cmpsb
xor
jns
and
cmp
or
sbb
and
xchg
or
or
addr16
into
loop
jle
cmpsl
mov
leave
daa
push
jecxz
mov
cmovne
and
bnd
out
ja
scas
stc
into
push
addl
or
pop
mov
jmp
daa
xchg
mov
mov
push
sbb
iret
sti
dec
mov
cmpsl
cwtl
mov
pop
out
js
inc
adc
inc
jg
ljmp
xor
xlat
inc
sarl
mov
cmpsb
mov
jp
push
pop
popf
in
mov
inc
ljmp
cmp
pop
cmpsl
shl
movl
lret
pop
or
add
pusha
or
stos
push
cs
inc
lret
add
sub
je
imul
stos
addl
pop
jne
jae
iret
pusha
lea
adc
and
jl
cmp
inc
mov
nop
mov
or
and
insl
jp
sub
sbb
lods
push
jno
mov
arpl
and
xchg
les
addr16
push
adcb
out
mov
in
stc
or
insl
jns
jne
push
scas
addr16
pop
daa
outsl
je
xorl
cltd
jno
inc
or
push
mov
pop
arpl
outsl
inc
mov
or
mov
aam
lcall
inc
mov
adc
cmp
dec
mov
fwait
adc
adc
and
ja
sbb
ja
dec
movsb
fistps
xlat
test
add
out
mov
jp
clc
cltd
mov
and
push
inc
enter
jge
xor
arpl
repz
mov
shr
cmp
jp
mov
daa
cmp
xor
mov
cmp
inc
xchg
sub
mov
sub
andl
lods
stc
push
fcmovnbe
stos
sahf
cmp
pusha
inc
mov
in
std
out
pop
movsb
les
push
mov
fcoml
push
sbb
sbb
adc
dec
mov
mov
xor
stos
sub
inc
in
xor
or
shl
and
xchg
outsl
lret
xchg
adc
daa
fwait
mov
cmp
aam
mov
mov
insl
push
push
lock
push
mov
in
repz
lods
pusha
jmp
add
xlat
or
xor
cmp
dec
push
insl
mov
push
mov
idivb
or
push
ficoml
xchg
and
push
cmpsl
test
pop
loop
add
bound
mov
adc
pop
in
test
push
adc
sub
dec
xchg
idiv
lea
nop
xor
movsb
lret
orl
jo
jp
xlat
push
daa
cmp
mov
test
inc
clc
fidivrs
lcall
adc
cmc
ljmp
cmp
aam
xchg
mov
or
inc
push
lret
cmp
adc
pop
fwait
mov
lods
sub
rcrb
mov
pusha
icebp
cmp
je
out
movsl
fisttps
sbb
inc
xor
dec
lock
or
inc
cmc
popa
shll
pop
jnp
bound
sub
lret
shll
in
insl
jge
pop
notl
jb
hlt
das
js
idiv
pop
imul
inc
punpcklbw
stos
xchg
sbb
scas
mov
scas
or
pop
mov
cli
insb
lods
pop
out
lds
mov
xor
xchg
fisubs
sub
jns
out
bnd
ficoml
mov
adc
mov
out
vpunpckhqdq
dec
xchg
andl
in
sub
push
outsb
inc
sub
push
lds
cmp
roll
ret
mov
fsubr
ds
ficompl
fisttpl
jbe
add
add
icebp
lret
mov
inc
rol
clc
pop
lret
jbe
hlt
sti
xor
fadds
scas
cmp
es
adc
out
add
lea
adc
xchg
mov
gs
pop
insb
xor
cmpsb
pop
sbb
ret
cmc
lahf
inc
scas
or
sub
cmp
sub
and
int3
add
stos
sub
push
and
in
adc
jmp
or
mov
jecxz
adc
sbb
decl
aaa
mov
or
insl
push
jns
cmp
jmp
push
mov
mov
sub
add
or
test
mov
int3
loope
or
pop
call
gs
jle
mov
sarb
ljmp
xor
clc
test
jnp
mov
mov
lret
test
gs
ljmp
push
dec
mov
sub
jge
ret
insb
out
adc
and
enter
popa
cmp
shrb
dec
adc
and
mov
insl
or
fldt
les
and
in
ficomps
xchg
test
popa
mov
dec
test
jecxz
adc
cli
pusha
lea
int
faddp
and
mov
jno
aam
add
fidivs
std
je
pop
fdivl
dec
test
sbb
push
cmpsb
add
pop
int
xor
or
inc
lds
inc
pop
sarl
ss
movsb
data16
or
nopl
lret
cmpl
or
rcl
js
insb
loope
es
call
iret
dec
cwtl
rcll
xlat
filds
and
or
push
mov
inc
sbb
mov
mov
repnz
shlb
cwtl
add
jno
adc
test
rol
push
loop
daa
sub
push
subl
pop
stc
movsl
add
xchg
outsl
scas
sbb
scas
cmp
pop
xor
das
dec
add
test
pop
es
cmp
and
imul
dec
cmpsb
inc
movsb
adc
insl
std
xchg
add
fistpl
dec
mov
fucomi
imul
mov
adc
cmp
es
mov
testb
sub
jle
sti
enter
mov
jae
push
loope
leave
or
call
mov
push
clc
mov
ds
cmp
repz
jmp
xlat
xor
lods
icebp
cltd
dec
test
and
inc
push
in
jae
pop
pop
sbb
sbb
lret
sbbb
frstor
cld
xchg
xchg
sbb
push
mov
inc
clc
int3
mov
fnstenv
sbb
test
mov
dec
dec
mov
sub
rcll
out
out
les
das
push
cltd
pusha
into
jmp
rcrb
imulb
dec
cmp
push
xor
xchg
dec
push
cmc
push
xchg
mov
and
jmp
mov
aas
cmp
and
aam
xor
cmpsl
in
mov
add
test
push
cmc
insl
dec
mull
clc
cmp
push
push
mov
sub
aad
mov
mov
divb
jg
jns
adc
push
scas
push
lds
dec
into
arpl
stc
fnstenv
sbb
cmpsb
movsb
daa
test
push
inc
mov
jo
cmp
pop
push
int3
scas
xor
divl
push
mov
dec
cli
enter
cmc
xchg
xor
jns
test
xchg
jb
jo
push
mulb
fstpl
lea
shrb
stos
inc
jge
mov
imul
push
mov
out
dec
cmc
mov
aas
jnp
aas
mov
dec
shr
add
stc
adcb
inc
lahf
mov
out
mov
outsl
rclb
push
outsb
int
in
fs
xchg
into
sti
inc
or
in
jne
ja
jo
mov
cli
add
and
xchg
mov
mov
push
notl
fnsave
jmp
js
stc
sbb
push
sub
ds
push
mov
or
add
jmp
jmp
das
lret
pop
sbb
and
imul
lahf
lds
popa
test
jl
adc
fisubs
push
inc
dec
ror
xor
clc
dec
jmp
inc
jae
insl
xor
mov
jge
xchg
outsb
pop
pushf
movl
jmp
mov
sub
jns
jle
loopne
roll
pop
je
and
call
sahf
mov
jno
push
clc
dec
cmpsb
fistl
inc
sbb
das
and
mov
or
jbe
cmc
jmp
adc
popf
pop
stc
aam
repz
rcr
cwtl
xor
in
aas
cwtl
xor
cmp
xchg
rorl
lods
fdiv
pop
xor
mov
daa
out
shlb
dec
pop
jp
inc
adc
andb
shll
and
sbb
pop
push
enter
xor
jne
call
data16
jae
xor
pop
movsl
and
cmp
pop
imull
inc
mov
jb
aam
rcl
es
shrl
mov
xchg
sub
cli
movsl
pop
dec
and
lcall
or
inc
jbe
mov
shr
push
push
jecxz
adc
xor
inc
gs
jo
orb
sub
ret
mov
fnstsw
cwtl
jmp
xlat
rclb
pop
mov
mov
cld
in
xchg
gs
cmp
aad
inc
pop
inc
arpl
sub
fld
popf
addl
pop
cmp
mov
sbb
xorl
std
js
push
cli
xchg
pushf
pop
jge
mov
das
scas
or
mov
adc
mov
jbe
aas
dec
pushl
and
lods
add
jno
fwait
inc
gs
pop
cld
xchg
dec
mov
outsb
loopne
dec
cmp
inc
fwait
sub
cmpsb
jl
das
cmp
fbstp
shrb
movntps
repz
movsb
je
mov
adc
sub
ljmp
dec
in
push
lcall
jo
add
incl
sub
jb
cmp
lcall
lds
mov
push
sub
push
jae
rclb
pop
js
imul
inc
ret
out
clc
shrl
lret
xchg
imul
xor
cld
nop
stos
pop
inc
mov
test
mov
sbb
xchg
inc
jno
test
push
mov
sub
and
xchg
cmp
jae
pop
mov
dec
mov
mov
hlt
xor
and
pop
fldl
js
imull
xchg
popf
push
xor
mov
mulb
xchg
std
mov
adc
mov
in
jle
adcb
sub
fwait
test
mov
jo
clc
mov
shl
or
imul
das
lahf
cli
push
or
push
or
pushf
mov
add
stos
and
subl
inc
out
cmpsl
out
jle
cs
mov
add
shr
out
fisttpll
sahf
adc
fs
mov
aad
pop
scas
add
xor
fisubrs
das
loope
ftst
jg
add
dec
pop
incl
xor
es
lret
mov
lock
mov
xchg
lods
ljmp
pop
pop
rcrb
and
fisubrs
lret
inc
repnz
jae
xor
pop
mov
push
fisttps
pop
xor
cwtl
add
dec
enter
out
outsl
popa
int3
out
add
ljmp
std
push
aaa
idivl
in
add
inc
or
in
leave
or
xchg
es
popf
adc
or
in
aam
cmp
sti
inc
jae
in
mov
dec
and
dec
mov
lods
shll
gs
enter
xor
pop
jecxz
fiaddl
xor
stos
cs
lcall
push
ja
push
jge
stos
leave
out
test
inc
les
xor
adc
ss
inc
fdivs
mov
dec
mov
jg
sbb
test
test
adc
inc
rcl
xchg
cld
out
mov
push
sub
aam
out
fidivrl
adc
int3
repnz
pop
into
push
aas
sbb
nop
sbbb
sbb
mov
pop
loope
lret
push
test
leave
hlt
inc
adc
scas
lea
fwait
or
ljmp
cld
mov
lcall
imul
in
ret
lcall
test
arpl
mov
inc
mov
mov
dec
ds
loope
loope
ss
loopne
add
scas
jo
xchg
or
xor
mov
js
sbb
sub
mov
test
pop
jge
mov
pop
pop
xlat
fsubrs
push
mov
xchg
out
mov
xchg
cmc
pushf
nop
and
lea
loop
test
mov
jne
in
xor
fmuls
cmpsl
loope
sub
orb
jge
sub
xchg
hlt
packssdw
loopne
test
pop
outsb
cltd
xor
rcll
sbb
inc
cs
add
xchg
test
xor
ret
cmp
popa
roll
mov
icebp
mov
pop
je
add
xorb
in
setno
movsl
mov
daa
cmp
fwait
jns
data16
add
mov
mov
jbe
lea
imul
sbb
loopne
push
jb
addr16
and
jns
xor
test
mov
xchg
mov
mov
mov
rorl
dec
out
pop
push
test
loopne
and
cld
jb
nop
cmp
mov
faddp
outsl
jge
lahf
adcl
mov
stos
mov
mov
or
cmp
and
pop
mov
and
or
imul
jnp
loope
aas
nop
cmp
inc
sbb
add
adc
or
jo
and
gs
sub
cltd
out
outsl
ljmp
jo
mov
xor
repz
imul
push
ret
sbb
mov
add
lret
inc
cmp
cmp
mov
mov
dec
mov
test
push
pop
mov
jl
mov
dec
inc
push
inc
lea
loopne
cmpsb
push
movsb
xor
pop
xchg
scas
ret
bound
sub
in
jns
xlat
push
outsb
mov
stos
test
aam
mov
mov
add
dec
daa
popa
cwtl
mulb
mov
stc
mov
dec
imul
inc
lods
cmp
int3
out
fnstcw
dec
sub
add
jl
lock
mov
in
dec
pusha
sub
test
jg
pushf
data16
adc
out
pop
sti
mov
sbb
mov
mov
inc
lret
mov
rcl
jmp
das
aas
push
mov
test
call
rcrb
into
mov
fldl
sub
mov
mov
pusha
fsubr
mov
roll
push
xchg
pop
jmp
gs
cmp
in
push
inc
into
jbe
push
mov
ficomps
jp,pt
xor
pop
mov
add
ss
xor
push
je
inc
out
and
movsb
lods
inc
xchg
adc
sbb
cltd
sub
or
addr16
mov
inc
push
imul
test
adc
mov
jo
push
mov
ds
cmpsl
adc
push
mov
gs
push
jae
lea
sbb
push
add
add
jno
mov
mov
call
add
sahf
es
and
das
mov
xchg
push
aad
mov
dec
adc
movsb
lret
push
push
cmp
add
inc
movsl
cmpsb
in
call
idiv
loop
mov
mov
rorb
xorb
pop
popf
adc
fildl
inc
sbb
push
loope
dec
movsl
xor
or
mov
jmp
and
adc
mov
mov
fyl2xp1
push
jmp
sbb
push
sbb
xchg
push
insb
aas
jle
fs
fs
lcall
cmp
pop
adc
iret
loopne
adc
test
mul
mov
dec
push
packsswb
imul
fnstenv
push
shlb
sub
xchg
int3
or
sub
mov
xchg
incl
mov
push
dec
pop
shll
shrl
or
inc
arpl
movsl
test
push
lahf
not
out
into
inc
lds
dec
fmuls
lahf
inc
js
test
jns
sbb
scas
gs
mov
clc
inc
into
mov
inc
scas
scas
mov
ja
xchg
push
pop
fcoms
movsl
dec
cwtl
sub
xor
testl
idivl
fs
cwtl
fidivrs
lret
push
data16
inc
lods
push
leave
sbb
pop
mov
or
cltd
divl
lret
insb
inc
xchg
stc
cmp
dec
cmp
in
insl
lea
stos
inc
mov
das
fnstcw
scas
test
and
pop
inc
cs
adc
in
in
fisttps
jo
mov
leave
adc
icebp
popf
hlt
mov
cli
or
jg
outsb
add
lds
push
leave
out
les
mov
jns
adc
xchg
inc
pop
dec
mov
pusha
jmp
into
add
or
inc
or
pop
enter
xor
sar
jno
enter
mov
cmp
divb
orl
sbb
call
mov
pusha
popa
sbb
jno
int
and
push
sub
inc
movsb
pop
adc
or
and
xchg
sbb
pop
sub
sbb
cli
adc
or
imul
mov
ss
mov
push
jecxz
push
mov
pop
cmp
lret
lea
fdivrs
ds
enter
pushf
xchg
pop
jno
mov
jno
push
call
adc
movsl
adc
sbb
cli
mov
xchg
nop
or
and
mov
push
aam
push
inc
or
push
adc
xchg
movsl
xor
xchg
cli
je
pop
and
xchg
xor
mov
push
jle
lea
sbb
es
mov
sarl
mov
mov
mov
leave
cmpsb
push
jb
ret
dec
sub
and
lret
jecxz
inc
adc
cmp
sti
adc
int3
in
pushf
into
pop
add
loopne
mov
jge
pop
or
shl
lods
dec
popf
es
ds
or
xchg
fwait
or
sub
mov
push
popf
xor
push
xor
inc
xor
add
out
push
mov
cmp
movsb
xchg
cmpsl
cmpsl
push
inc
pop
jp
cltd
aam
or
in
and
inc
fildll
and
add
ja
in
sbbb
aad
xchg
mov
ljmp
xor
stos
daa
add
cs
out
mov
xchg
cmpsb
fxsave
pusha
imul
inc
push
add
out
notl
popa
add
sarb
dec
lret
ret
cmp
out
loope
push
xlat
mov
mov
cmp
shlb
xchg
into
and
and
add
fsubrs
mov
pop
push
loope
cmpsl
xchg
loope
in
movsl
pop
iret
shrl
add
mov
mov
and
inc
mov
nop
push
movsl
adc
je
cmp
rcrl
pop
mov
push
sub
andl
mov
xor
mov
dec
pop
mov
lret
mov
push
mov
jmp
inc
jecxz
testl
shlb
cmpsl
mov
inc
gs
daa
sub
dec
test
ss
fimuls
xchg
xchg
xor
xor
cli
les
pop
loop
push
inc
fistps
addr16
cmp
inc
adc
or
adc
push
mov
cmp
aad
mov
and
sbb
mov
mov
cwtl
and
cltd
mov
push
mov
leave
pop
add
pop
dec
in
lds
leave
cwtl
loopne
pusha
xchg
xlat
imul
nop
test
stos
xchg
jle
call
int
mov
xor
inc
jle
js
leave
out
addr16
inc
cltd
inc
repnz
push
mov
lret
pop
mov
je
pop
jl
xchg
xchg
push
pop
and
xchg
fsubrs
gs
fdivrs
cmp
lret
cmp
ret
add
jle
or
fwait
xchg
int
ljmp
xchg
jns
test
or
mov
mov
lcall
pop
divl
push
sub
dec
sti
mov
aas
jns
cs
add
pop
notl
in
out
mov
sbb
add
add
push
mov
out
cltd
push
out
or
xor
clc
inc
rcrl
das
fidivl
mov
ficoms
cmpsb
push
mov
lret
xor
pop
cltd
mov
mov
push
fstp
pop
pop
jecxz
leave
fstp
push
mov
mov
bound
cs
push
inc
mov
call
push
inc
cmp
jge
xchg
jne
out
pop
ret
fidivs
into
adc
mov
pop
xor
ds
mulb
lcall
adc
mov
pop
outsl
or
mov
enter
stos
mov
sbb
xor
repz
or
das
dec
into
jns
jl
fidivrs
and
xchg
lcall
xor
rcr
rclb
cwtl
xchg
mov
pop
jo
mov
mov
out
jno
addl
fwait
sbbb
fbstp
push
cli
or
fisttpll
xor
cmp
cmp
sbb
push
pusha
lcall
test
lds
or
lea
sti
hlt
jne
ds
mov
leave
mov
sbb
ret
in
adc
test
aam
ds
push
icebp
push
fxch
push
mov
ja
pop
jbe
lds
loop
mov
fwait
mov
out
xchg
insb
gs
mov
mov
mov
setg
fcmovnbe
int3
mov
push
lahf
lea
std
std
stos
rorb
xor
cmp
mov
lds
loope
pop
and
pop
mov
dec
sub
popf
cli
mov
scas
fcompl
ljmp
ficomps
mov
sahf
mov
or
sbb
in
add
or
das
mov
adcb
jmp
pop
cwtl
cmp
mov
in
mov
loop
dec
adc
or
pusha
adc
xchg
jae
cmp
xchg
clc
movsl
cmp
adcb
sub
jno
xchg
add
sbb
outsb
pop
testb
add
push
inc
repz
inc
mov
cli
scas
stos
push
loope
push
jb,pn
cwtl
sub
pop
inc
inc
push
push
push
jno
add
imul
jae
pop
es
fwait
mov
dec
mov
leave
je
jns
fiadds
mov
xchg
sub
cmp
fsubl
mov
mov
int3
fwait
or
jbe
frstor
pop
enter
inc
je
sub
movsl
pop
mov
pop
xabort
mov
jmp
push
daa
in
fucom
call
test
lods
or
mov
leave
in
push
inc
jne
fldcw
fmuls
sbb
adc
sbb
daa
add
sub
ret
mov
dec
or
ret
and
roll
sub
mov
repnz
mov
lods
addb
sbb
jmp
push
mov
inc
sub
inc
call
insl
mov
insb
pop
les
cmp
lcall
mull
pop
cmpl
inc
sub
adc
jnp
pop
bound
jne
in
into
cwtl
xor
jnp
ret
loopne
push
push
jmp
pop
mov
pushf
dec
fcomps
jl
imul
inc
test
push
sbb
push
push
ret
lret
into
lea
add
lods
sub
test
dec
into
ficoms
call
xchg
inc
xor
jb
mov
mov
or
mov
outsl
inc
es
mov
in
or
sub
int3
jne
and
adc
xchg
outsl
in
jbe
add
sub
shll
clc
pop
mov
jo
cld
int3
mov
movsl
scas
jbe
lret
je
mov
fs
mov
add
ret
sub
inc
decl
or
sarb
xor
pop
js,pn
mov
push
push
fnstsw
mov
outsb
mov
je
and
nop
out
fsts
inc
mov
aas
lahf
jno
outsb
ds
outsl
jbe
out
adc
ficomps
jbe
test
push
sub
cmp
adc
cmp
cmp
xor
xchg
repnz
addl
xchg
pop
dec
mov
xchg
and
repz
mov
xor
cltd
je
push
adcl
sub
aaa
push
push
cmp
stc
sub
inc
push
std
mov
xor
repz
push
jns
xchg
lret
xchg
outsl
inc
mov
mov
push
pop
loopne
outsl
ret
sar
fcomps
and
test
push
into
loopne
ds
movsl
push
pop
or
movl
push
jae
pop
ficompl
dec
cmpsb
je
jns
pop
jge
out
inc
mov
xorl
lock
fdivr
push
pushl
jae
mov
daa
adc
add
sbb
cmp
ss
lahf
mov
loop
ficoms
int3
data16
mov
ss
sbb
xchg
ret
push
imul
push
imul
les
aad
jmp
and
sbb
xor
inc
xchg
xchg
push
scas
pop
shlb
inc
push
push
cmp
sub
adc
adc
daa
fiaddl
push
lods
cli
pusha
adc
and
fsubrl
jp
roll
rolb
mov
add
or
nop
cld
decl
mov
push
mov
adc
mov
adcb
ficoms
xchg
in
xor
cmp
fs
pushf
in
pop
insb
lods
xor
std
xor
jbe
mov
stos
repnz
inc
sbb
jnp
push
jmp
dec
xchg
xchg
lea
out
push
pusha
and
loopne
cmp
outsb
jl
or
repnz
push
sbb
mov
cmp
outsb
outsb
stc
fcompl
inc
push
les
inc
aas
mov
js
ror
and
and
in
in
sarb
enter
push
and
add
fdivrl
mov
jnp
test
xchg
jb
xor
pop
dec
sbb
addr16
in
push
and
out
pop
push
dec
mov
sbb
xchg
insl
cmpsb
xor
and
ss
adcb
jnp
jne
push
mov
movsl
hlt
filds
in
sbb
es
pushf
bound
out
fdivr
addb
sbb
insb
xchg
leave
mov
test
xor
cmp
xchg
fwait
lret
push
add
pop
repz
movsl
lock
mov
sub
or
lcall
pop
jns
fiaddl
fidivrl
outsl
sbb
enter
mov
jne
fcmovnbe
mov
out
dec
mov
inc
sti
stos
or
scas
mov
mov
mov
sahf
std
pop
jg
fmuls
jo
jle
dec
push
xchg
pop
imul
in
xchg
lds
push
rcl
jns
push
js
fyl2x
cmpsl
mov
movsb
dec
mov
or
dec
push
mov
ret
cmpl
int
push
lods
in
or
lahf
or
stc
mov
fwait
movsl
dec
mov
mov
push
sub
jb
mov
mov
xchg
enter
jp
pop
lock
jne
pop
xchg
mov
inc
movsb
iret
mov
sbb
inc
cmp
mov
push
movsl
lock
mov
iret
in
loope
hlt
int3
dec
int3
pop
ret
inc
adc
jmp
mov
pop
cmp
cld
pmullw
punpckhwd
sub
add
push
in
mov
mov
lahf
jmp
les
cmpsl
sar
xor
aam
inc
cmpsb
push
ret
cmpsb
xlat
mov
cld
pop
lods
xor
out
mov
sub
scas
lcall
xchg
push
jmp
pop
cmp
adc
inc
inc
cmp
sub
ja
mov
dec
pushf
mov
xchg
mov
pop
push
push
pusha
push
test
inc
insl
push
push
pop
adc
mov
jmp
jbe
mov
jbe
mov
cmp
mov
nop
sub
jne
fsin
pushf
jge
ss
cmp
das
stos
arpl
mov
ss
push
dec
pop
test
cmpsb
int3
xchg
mov
es
jp
and
les
fucomi
fs
xor
mov
les
mov
and
mov
mov
push
shll
or
mov
xchg
push
add
mov
and
cltd
mov
out
cmp
popf
pop
jmp
pop
fnstcw
cli
fwait
inc
es
lcall
mov
xlat
add
push
push
insb
add
lods
jg
dec
es
test
jo
or
xor
mov
insl
repz
rcrl
int3
sub
popa
jge
or
lds
add
inc
mov
push
xchg
sahf
cmpsl
pop
fiadds
leave
dec
sbb
or
cmp
add
xor
adc
push
xor
aam
fstpl
aam
sbb
push
jbe
lds
mov
adc
repnz
mov
xor
pop
inc
mov
loope
out
lcall
xchg
jecxz
pop
inc
jle
filds
mov
and
cmp
mov
pop
inc
pop
pushf
dec
mov
subb
cmc
js
imul
rolb
and
adc
in
and
and
lods
je
popf
call
jb
or
sbb
sahf
and
lds
pop
icebp
jb
out
loop
or
scas
add
or
cmpsb
or
mov
xchg
push
aad
dec
sbb
addr16
imull
lds
hlt
mov
mov
cwtl
daa
outsb
push
bound
xor
or
test
test
push
pop
insl
jns
je
stos
xor
inc
insb
or
fsub
sub
inc
decb
sbb
rcll
jno
btr
out
xchg
out
dec
call
into
fisubl
in
pop
mov
fldenv
mov
mov
and
arpl
fucomip
ret
or
shlb
or
push
mov
xor
jg
sub
stos
add
cld
mov
mov
sub
sti
mov
hlt
ds
shrl
sahf
aad
mov
repnz
inc
push
and
jl
imul
jne
pop
cmp
out
add
ja
and
sub
lahf
popa
ret
movsb
iret
cmpsb
pop
lahf
pop
mov
clc
and
shll
fdivrs
data16
arpl
mov
or
xor
icebp
xlat
in
or
xchg
daa
notb
cmpb
test
xchg
out
out
dec
jb
adc
out
xchg
or
xor
cmp
or
push
in
pop
pop
sbb
or
std
nop
cmpsl
dec
ljmp
pop
lods
push
push
aam
mov
nop
or
outsb
push
mov
rcrb
xchg
mov
sub
lods
or
adc
adc
mov
push
pop
sbb
cmpsl
adc
int3
xor
add
add
cmp
cmp
out
fstpt
jp
pop
add
jo
or
dec
ds
stos
ja
ret
inc
pop
imul
inc
and
xlat
enter
in
xchg
imul
rolb
in
sarb
and
insb
scas
push
sub
icebp
dec
rolb
stos
addr16
lods
jb
scas
outsl
mov
dec
xor
call
orb
mov
aam
dec
out
mov
jo
add
into
out
adc
pop
mov
out
fsubr
push
adc
xor
and
cmp
pop
mov
icebp
sbb
scas
mov
mov
add
sbbb
pop
shl
hlt
and
add
mov
mov
mov
add
pop
mov
mov
dec
push
in
pop
out
in
pusha
mov
or
loopne
fs
adc
xor
xchg
sbb
cmpsl
out
cltd
jp
aas
cmp
bound
cs
push
lods
hlt
insb
xchg
xchg
pop
add
lods
imul
xor
iret
gs
push
shrl
sbb
xor
das
scas
mov
cmp
xchg
stc
dec
dec
sub
pop
ret
fistl
push
cwtl
stc
dec
mov
pop
repnz
fistpll
ja
out
jae
fldt
loopne
mov
pop
test
mov
mov
sbb
std
loop
push
into
xchg
push
enter
adc
mov
ret
subb
pushf
inc
pop
daa
push
mov
mov
addr16
and
hlt
roll
mov
add
test
add
jle
std
lock
scas
lods
das
aas
shl
inc
xor
divb
in
test
neg
push
jmp
jo
mov
mov
xlat
fiadds
cmpsb
in
hlt
in
insl
ret
add
jecxz
push
rorb
fidivrl
mov
les
jo
sbb
adc
movsb
lea
xor
test
fstp
mov
dec
xor
popl
lock
push
add
sbb
mov
inc
adc
pushf
or
lods
fwait
xchg
cltd
adc
or
push
pop
and
xor
mov
xchg
mov
sub
testl
push
std
sbb
rcll
ret
nop
mov
xchg
das
scas
cs
inc
xor
ds
push
fcoms
pop
adc
test
dec
ljmp
mov
jge
sahf
mov
inc
daa
xchg
shrl
insl
fstp
imulb
jmp
pop
cmp
xor
mov
cltd
imul
ret
xchg
scas
roll
outsl
push
mov
inc
fimuls
sub
xchg
mov
ds
fiaddl
mov
mov
out
adc
test
xchg
inc
in
lret
ja
jp
shl
cmp
outsl
mov
shlb
pop
jg
testl
rcrl
insb
jmp
xor
and
mov
sbb
jne
dec
pop
imul
das
cltd
lods
xchg
aaa
mov
and
repnz
repnz
sub
ja
insb
data16
add
sbb
xor
push
or
pop
dec
cmpsl
aas
fidivl
dec
sub
sub
icebp
push
mov
or
jae
lea
js
ja
ds
pop
push
push
or
ja
sub
out
popa
jecxz
push
push
iret
out
aas
insb
sar
iret
outsl
cmp
dec
cmp
arpl
loope
aad
push
loopne
cli
xor
xchg
cwtl
insl
push
inc
imul
data16
xchg
adc
dec
adc
sbb
pop
or
aad
xchg
fsubrl
adc
pop
push
arpl
dec
popa
adc
hlt
push
lret
push
and
cwtl
aas
ret
es
call
sub
push
inc
mov
xchg
dec
pop
addr16
pop
sub
cmpsl
aad
aad
notb
in
aaa
nop
xor
adc
jnp
out
mov
and
pop
out
xchg
aam
imull
sub
test
add
inc
push
push
bound
leave
add
sbb
lahf
xchg
jne
xor
faddl
rolb
je
scas
push
ja
mov
mov
mov
fisubrs
arpl
mov
lods
mov
xchg
in
jle
jmp
arpl
fisttpl
jmp
ss
dec
push
and
stos
rcrb
lahf
xchg
leave
xor
int
sub
mov
jb
sub
xor
mov
xor
in
mov
roll
or
xchg
add
loope
out
xchg
ret
cli
xchg
or
cli
mov
stos
xor
popf
fdivr
xchg
pop
pop
or
hlt
pop
inc
js
cld
dec
jl
sbb
popa
imul
loop
out
shlw
into
sub
dec
fld
inc
pop
iret
out
daa
push
pop
inc
mov
iret
pushf
mov
xchg
or
mov
inc
ss
jnp
fldt
push
inc
je
dec
cmpsl
icebp
mov
adc
push
movsl
sub
push
lods
mov
jp
jecxz
pop
popf
ret
and
pop
leave
inc
or
add
cmp
pop
data16
jmp
ja
xchg
adc
mov
mov
test
inc
mov
fstl
xor
addr16
xchg
cmp
mov
dec
cmp
mov
jp
or
ljmp
aaa
ja
ljmp
xor
icebp
hlt
das
fildl
fisttps
out
cli
mov
or
shl
xchg
adc
dec
jmp
lods
lcall
lret
dec
or
fnstsw
xchg
fwait
mov
stc
mov
inc
mov
gs
sub
pop
mov
pop
cmpsb
pop
test
sub
and
sbb
jp
int3
aaa
cmp
sbb
aaa
jne
mov
pop
pop
pop
sub
sbb
hlt
jo
std
aaa
repz
ret
dec
push
test
cwtl
cld
sub
push
out
jb
jo
push
je
jmp
cmc
mov
or
fcoml
ret
mov
pop
sub
dec
in
ret
stos
pushl
add
mov
fs
lahf
pop
not
dec
mov
push
pop
xor
jb
sub
push
push
outsb
leave
das
rcll
mov
test
mov
sub
loop
leave
mov
adc
inc
int3
jl
lret
adc
enter
iret
outsl
mov
push
xchg
lret
gs
repnz
and
sub
pop
icebp
and
inc
or
pop
nop
aad
in
cmc
dec
dec
addr16
mov
je
or
pop
sub
fimuls
mov
pop
fstpt
lods
inc
adc
repnz
pop
push
lods
mov
sub
into
pcmpgtw
aas
lret
push
dec
mov
dec
jl
pop
negb
clc
mov
xor
rclb
sbb
add
pop
and
push
sbb
cmp
inc
xchg
or
mov
mov
rorb
lds
adc
sbb
aad
dec
sbb
or
cmp
aas
jns
inc
sub
pop
loope
cmp
push
jnp
pusha
cwtl
mov
adc
mov
inc
into
mov
lahf
sti
pop
mov
mov
outsb
sti
ret
inc
lret
mov
jae
outsb
mov
cmpb
xchg
push
and
mov
test
fwait
xchg
push
outsl
in
loope
data16
sub
mov
adc
mov
pop
jno
adc
arpl
out
std
cmp
call
loop
jle
shlb
pop
rcr
rcrb
mov
mov
insb
gs
out
jl
test
sub
xrelease
jb
inc
cli
push
clc
pop
mov
clc
inc
clc
push
sub
dec
mov
mov
lcall
and
movl
fadds
stos
test
popa
xlat
add
jle
mov
imul
into
adc
cmc
scas
scas
fcoms
pop
jae
sbb
aam
push
std
sbb
push
mov
sbb
imul
mov
mov
xchg
jle
pop
fcmovnbe
mov
jp
loope
mov
sbb
xchg
add
mov
xor
lock
xchg
test
inc
faddp
dec
fwait
adc
pop
out
ficomps
add
push
aaa
add
mov
mov
lock
mov
subl
aaa
cmp
shl
dec
jnp
jae
in
movsl
push
ljmpw
xchg
andb
sbb
loope
and
and
cli
movsl
xchg
stos
sbb
adc
aaa
test
add
jo
xor
dec
cmpsb
nop
testl
fstpt
mov
insb
or
shrb
les
ss
cmpb
jecxz
adc
jp
es
lcall
fstpt
inc
mov
sbbl
mov
cmp
out
icebp
lret
push
push
push
scas
xchg
fsub
aad
or
and
mov
push
insb
push
iret
fdivrl
sub
and
outsl
sbb
push
test
mov
ret
lret
out
lahf
pop
dec
loop
jge
mov
dec
mov
cmp
jmp
mov
inc
loopne
xchg
mov
add
inc
lret
jp
add
loopne
mov
insl
imul
inc
push
jge,pn
cmp
int
rcl
sub
pop
es
pop
inc
pop
xor
sbb
shll
sub
xchg
ror
xor
repz
outsb
imul
out
test
xor
mov
pop
mov
inc
movsl
testb
xor
mov
aad
std
mov
mov
sub
inc
outsl
add
movsl
push
pop
in
cs
arpl
fmuls
mov
mov
push
add
pop
push
test
cmp
lock
test
sbb
mov
js
push
mov
sbb
xor
test
daa
les
repz
movsl
daa
and
nop
cli
leave
cs
or
mov
cmp
rol
cmp
mov
out
out
xor
loope
imul
int
test
mov
icebp
dec
dec
dec
jmp
dec
cmc
xlat
andb
shll
sbb
adc
in
jp
or
loopne
outsl
divb
pop
dec
jns
ret
push
cmp
sahf
ja
shll
sbb
xchg
push
cmpsl
mov
out
xchg
lods
mov
and
lcall
or
int3
dec
cmpsl
push
xchg
xor
aam
ror
xor
cmp
jl
clc
lret
xorb
mov
cmp
cwtl
adc
jmp
mov
sbb
test
dec
icebp
jp
in
int
stos
repnz
or
jae
dec
repz
test
or
jbe
int3
sbb
inc
push
addr16
jne
rol
xchg
lods
push
xchg
xorl
jmp
pop
dec
lret
lahf
mov
loop
in
push
mov
nop
lret
lods
inc
rcll
jmp
das
test
xchg
sarl
mov
jno
mov
inc
shrl
dec
mov
ljmp
mov
cs
ds
aas
icebp
sbb
cmp
insl
in
dec
pop
out
dec
outsl
and
cmp
mov
pop
sub
add
push
int3
pop
push
fldt
dec
and
arpl
test
push
push
enter
loope
add
aad
xchg
push
cli
into
mov
inc
sar
push
add
mov
lret
loop
dec
jae
lods
jmp
arpl
or
mov
sbb
lods
mov
jno
sub
les
ret
pop
into
fbstp
in
js
in
fidivl
sub
shl
int
push
les
imul
adc
test
fsts
and
xchg
cmp
push
notl
xchg
insl
lcall
cltd
fidivl
incb
xchg
sub
imul
in
arpl
sub
mov
sub
out
aam
add
imul
push
cmc
jne
mov
bound
pop
jmp
insb
clc
int
jl
inc
popf
insl
ret
loop
adc
cli
sub
jo
add
xorl
iret
dec
push
subb
imul
je
jb
repz
cmp
mov
inc
inc
cmp
sbb
imul
and
mov
adc
add
imul
mov
in
push
negb
into
daa
leave
stos
imul
xor
pop
mov
loop
idiv
push
sbb
lret
cld
icebp
mov
pop
mov
or
mov
movsb
mov
xchg
insb
adc
add
inc
mov
push
or
push
push
insb
mov
cmp
popf
fiaddl
jl
or
inc
sub
pop
mov
lea
ficoml
jmp
or
mov
sub
imulb
xchg
testl
xchg
fidivl
cmp
ret
in
es
stc
pop
pop
dec
idivb
popf
idivl
das
push
sbb
arpl
test
mov
sub
dec
jno
andb
dec
popa
pusha
std
dec
inc
adc
addr16
enter
aad
mov
cld
push
les
jge
in
pop
subb
or
aam
push
pusha
adc
mov
dec
pop
pop
insl
stos
movsb
loope
xor
mov
mov
movsl
lods
jnp
xlat
hlt
test
dec
jle
lock
sub
mov
loope
or
movsb
add
push
pusha
cmpsl
xlat
dec
cmp
and
adc
scas
dec
iret
pop
mov
aas
icebp
cmp
mov
sbb
pusha
ficompl
inc
fs
dec
nop
mov
jmp
fsts
daa
xchg
sti
daa
sti
cmp
pop
push
xor
in
cmp
aas
pusha
mov
scas
jg
inc
push
mov
cmpl
mov
rcrb
fsubp
jnp
mov
cld
mov
jl
in
imul
sub
jl
mov
xchg
mov
dec
std
movsb
cmovns
bswap
movsb
mov
in
xor
fnstsw
push
xchg
repz
inc
inc
rol
cmp
test
ss
fdivr
sub
mov
fists
ds
xchg
inc
sahf
call
pusha
xchg
dec
je
mov
cmpb
mov
lds
notb
push
jns
sarl
push
jo
int
mov
arpl
xor
xchg
mov
push
adc
mov
adc
jecxz
jmp
movsb
insl
xchg
test
jo
or
cld
add
enter
sub
xor
bound
adc
dec
mov
roll
scas
xor
pop
mov
sbb
fmull
repnz
push
enter
adc
sahf
pusha
push
lret
movsl
aad
inc
test
lret
test
into
sub
push
push
lods
jge
loope
add
sbb
mov
mul
fwait
mov
adcb
push
cmpsb
push
cwtl
inc
arpl
add
inc
lret
cmpsl
xor
mov
add
loop
fldt
mov
aad
pop
jbe
aad
cmp
pop
in
jns
jl
push
lods
sbb
psadbw
adcl
jl
jp
push
pop
pop
roll
aas
pop
and
and
test
sub
or
test
inc
cmp
fildl
push
pusha
test
imul
jno
jl
xor
sti
dec
stc
mov
sahf
sub
orb
jns
test
iret
cwtl
push
fsts
jmp
int
or
and
arpl
icebp
popa
adc
daa
pushf
mov
push
lock
lahf
lret
jns
pop
add
ficomps
jmp
loop
dec
mov
adc
rcrb
popa
ss
out
mov
xchg
xchg
push
xor
call
data16
ret
push
pop
xchg
push
out
fisubrs
repnz
mov
jo
pop
mov
shll
rolb
xor
mov
push
shll
call
insl
push
in
jne
les
stos
in
movsb
pop
jmp
cmp
jecxz
sbb
movsl
add
jle
loop
rolb
andl
pop
push
push
sbbl
xlat
je
outsb
mov
mov
loope
lea
inc
jno
mov
movsl
fstps
std
jecxz
cwtl
mov
negb
sub
aas
push
sbb
movsb
xlat
dec
test
test
push
pop
mov
push
mov
js
pop
gs
xchg
out
inc
movsb
decb
int3
gs
addr16
test
mov
jmp
mov
lds
addb
pop
xchg
pop
xor
xchg
jmp
pop
data16
lea
mov
xchg
mov
gs
inc
mov
fnstsw
mov
sbb
in
cmp
sbb
dec
test
push
xchg
sbb
insb
mov
adc
gs
adc
lldt
push
xor
mov
xchg
outsl
adc
rep
jnp
xor
outsl
push
loop
hlt
mov
data16
cs
inc
mov
fwait
inc
inc
insl
jo
mov
pop
push
mov
js
jecxz
enter
sbb
fsubrl
insb
out
out
sti
gs
jmp
cmp
ds
leave
out
insb
and
stos
and
es
dec
shrb
sub
movsl
sti
stos
fucomip
ficompl
xor
pop
ds
mov
mov
adc
repz
or
in
fbld
sub
stos
scas
test
sarl
push
cmc
pop
sub
sbb
or
test
push
movsl
xor
test
push
lock
ret
push
cmp
and
xchg
push
lret
lea
enter
mov
add
jnp
movsl
dec
and
outsb
pop
and
or
cmpsb
lods
js
ja
js
push
cmp
push
insl
pusha
idivl
cmp
shl
jp
add
add
decb
mov
adc
or
insl
sub
xchg
xor
addl
sub
jno
push
gs
and
fnstenv
dec
adc
cmp
sar
mov
pop
mov
add
gs
jae
inc
stos
xor
test
insb
inc
stc
cmp
jae
push
cwtl
gs
leave
push
clc
jmp
mov
lret
xor
pop
dec
js
cmc
mov
pop
xor
ja
push
mov
jo
mov
stc
add
punpckldq
les
leave
and
mov
lcall
mov
into
sbb
sub
or
les
jmp
cmp
out
scas
push
push
out
es
les
jg
cmpsl
inc
mov
xor
mov
cmpsl
aaa
jbe
insb
js
inc
iret
js
or
or
xchg
mov
cmp
jmp
inc
xchg
mov
subw
sbb
inc
call
mov
lret
enter
inc
adc
xchg
enter
mov
movsl
mov
int
sbb
jbe
xor
push
out
and
adc
in
add
sbb
mov
loope
pop
loopne
loope
cmc
jle
fucomi
jp
sub
out
mov
test
inc
lret
fdivs
loope
lds
rcr
mov
daa
imul
out
scas
dec
add
iret
sarl
lret
push
sbb
adc
xor
mov
mov
sub
mov
outsb
fisubrs
je
dec
int
xor
rcr
es
pop
mov
lcall
std
cwtl
jns
popa
ss
insl
sti
push
pushf
iret
fists
mov
aam
and
lock
sti
mov
fnstcw
dec
pop
jae
pop
cltd
leave
and
pushf
rorl
ljmp
fnstenv
in
cwtl
jecxz
out
pop
ja
dec
aas
icebp
dec
jle
pushf
lds
insl
jecxz
fmulp
mov
or
sahf
icebp
dec
cs
dec
xchg
inc
push
or
xor
xor
xchg
dec
and
push
imul
rclb
mov
pop
push
push
jno
in
mov
mov
cmp
jb
mov
push
aam
mov
stc
out
out
jne
loope
subl
jg
xchg
fxch
dec
les
add
jno
dec
lret
jg
jl
or
scas
add
imul
mov
mov
cld
fs
in
push
or
add
and
add
insb
pop
divb
and
push
scas
out
les
add
adc
imul
dec
int
xchg
scas
out
out
arpl
in
ret
pop
ds
xchg
clc
dec
cmp
sub
fistpll
sbb
idiv
cmp
mov
mov
fstpl
js
xor
and
lahf
mov
or
sbb
push
inc
adc
js
es
mov
jne
cmpl
pop
add
fs
dec
in
stc
and
fs
inc
inc
sub
and
fdiv
mov
out
cs
dec
loope
out
mov
jge
daa
in
movsl
icebp
mov
lret
cli
fninit
negb
mov
mov
divb
das
mov
test
lret
jns
jno
inc
imul
xchg
xchg
mov
test
outsb
inc
adc
ficoml
mov
mov
jmp
test
das
in
out
add
pop
pop
dec
and
test
enter
inc
or
adc
cld
xor
stos
dec
ljmp
lcall
call
rcrl
jnp
mov
push
repnz
inc
xor
pop
bound
jmp
mov
ss
mov
shll
xchg
pop
popf
jae
mov
sbb
push
test
sub
mov
mov
mov
mov
xchg
in
xlat
popa
std
dec
cmp
stos
jb
ret
jp
mov
filds
mov
inc
pushf
shlb
and
sar
test
inc
adc
packsswb
pusha
mov
dec
lret
aaa
jae
and
in
andl
fidivrs
or
mov
inc
daa
loop
loope
mov
hlt
pop
jle
scas
jnp
fnsave
dec
push
and
arpl
aaa
fistl
push
and
inc
loop
jecxz
pop
and
loopne
xor
rorl
jecxz
push
lahf
inc
inc
insl
fwait
ja
mov
clc
data16
into
std
inc
mov
movsl
test
sub
clc
inc
xor
loop
insb
or
ficoml
jb
add
push
leave
iret
inc
test
mov
inc
sti
cmp
and
and
das
xchg
sbb
stos
fwait
stc
in
xchg
into
insb
pop
push
mov
dec
push
insb
push
scas
int
out
push
or
iret
sbb
mov
push
lock
dec
mov
addl
and
shll
fcmovnbe
fstpl
cmc
int
std
sarb
adc
nop
sbb
or
mov
push
sub
mov
adc
fdivr
fisubl
and
gs
cmp
imul
cli
movaps
sub
sub
mov
movsl
inc
cmpl
leave
aaa
xchg
pop
fisubs
xor
jbe
mov
pushf
call
push
insl
sbb
mov
adcb
inc
aam
mov
or
inc
xlat
jp
movsl
mov
mov
fistpll
adc
fsubr
jle
adc
imul
cmp
lods
cmpb
std
daa
sub
xchg
popa
sbb
jno
int3
mov
or
push
pusha
sti
mov
pop
shl
cmp
insl
xchg
adc
popa
loopne
inc
add
jnp
ret
mov
mov
or
adc
cmpb
scas
leave
insl
lea
pop
lea
std
out
xchg
cs
lock
jnp
ror
dec
adcb
or
jo
push
push
push
fwait
movl
fucom
cmc
lods
sbb
nop
cmp
push
es
adc
dec
icebp
sbbl
xchg
insb
or
in
daa
mov
icebp
ret
sub
fcmovb
or
data16
call
dec
dec
mov
xor
pop
mov
and
xor
xor
lret
test
mov
std
push
sti
inc
lock
scas
ja
or
scas
test
add
xlat
jmp
cmp
test
je
sarb
lods
mov
jo
lods
fcmovnbe
fildll
gs
call
mov
sub
and
cmpsb
mov
flds
cmp
dec
mov
insb
ja
push
enter
jp
add
ret
scas
add
jl
cmp
adc
inc
and
cs
les
mov
inc
stos
out
or
cmpsl
aaa
and
jo
xchg
inc
jae
icebp
sbb
inc
test
jb
fidivrs
xchg
pop
repz
inc
das
lahf
xchg
les
sub
push
xor
out
outsl
xchg
shrb
test
decb
pop
imul
mov
or
sbb
jg
aad
clc
and
sbb
addr16
rclb
pushf
jmp
daa
daa
icebp
adcb
ret
mov
pop
xchg
xor
fiaddl
fcoml
jae
pop
loop
sbb
dec
push
xor
mov
dec
ljmp
pop
sub
insb
out
mov
ret
xlat
xchg
fcomi
push
std
inc
rolb
push
jbe
fcompl
clc
dec
into
push
cltd
sub
jbe
xchg
sub
sub
iret
and
mov
mov
sbb
mov
push
jle
inc
sbb
arpl
mov
cwtl
orl
roll
stos
fsubrl
clc
mov
mov
jecxz
aam
add
sub
ficoml
add
cmp
js
sbb
jg
out
insl
cs
or
sub
cmp
sbb
add
push
fdivrl
addb
xlat
lock
out
lds
mov
xor
jecxz
lds
es
mov
inc
xchg
bound
jge
into
out
mov
test
adc
jae
mov
fisubrs
xchg
or
rcll
outsb
jns
aas
addr16
pop
lahf
and
mov
sub
shrl
mov
cmc
and
cmp
roll
mov
mov
test
push
lahf
xchg
out
adc
add
inc
mov
push
add
imul
or
fwait
nop
mov
shlb
jmp
popf
pushf
cmp
test
clc
push
xor
leave
jne
push
or
xor
pop
mov
into
add
sub
call
inc
sbb
jl
mov
mov
or
cli
popa
inc
xor
push
leave
lahf
mov
cld
pop
add
cmp
int
mov
dec
jae
jmp
fs
mov
push
cmpsb
cmp
inc
sub
scas
jns
sbb
and
or
es
mov
mov
mov
jb
dec
fdivp
mov
add
in
jmp
and
or
jge
ljmp
add
mov
sti
and
cltd
dec
std
das
insl
mov
and
loop
sub
push
push
xor
add
jp
fndisi(8087
stos
int3
ja
push
shlb
xchg
or
pop
ja
adc
cmp
in
pop
push
mov
inc
push
loope
or
and
dec
cwtl
jge
or
mov
rcrb
and
scas
imul
shrb
mov
dec
push
outsl
push
xchg
sbb
mov
dec
sub
fsubs
pop
mov
les
aas
or
es
or
iret
jnp
in
cmp
cs
xchg
jae
xor
sbb
or
lahf
xchg
aas
mov
out
mov
dec
ret
pop
sbb
mov
rorb
arpl
lret
ficomps
dec
sarb
mov
daa
inc
fsubrl
or
jg
dec
ret
sub
xchg
call
mov
xchg
lods
fadd
push
xchg
sub
aam
xor
fiaddl
stc
out
in
imul
idivb
loopne
sbb
leave
and
fiaddl
movsb
lahf
sbb
pushf
lock
xchg
addr16
cmp
das
loopne
in
mov
rcl
mov
push
jb
jae
sub
jecxz
mov
jp
repnz
jbe
scas
data16
adc
stc
outsb
inc
imul
mov
negl
in
test
mov
jne
fistpll
or
jb
lahf
adc
jp
dec
testl
xor
sbb
adc
xchg
ffree
dec
jge
mov
roll
ja
fnstenv
inc
adc
and
sbb
fcmovb
gs
in
cmpsl
cmpsl
xor
mov
cmpsb
add
lds
jp
pop
lahf
imul
insb
add
test
movsl
aaa
gs
sbb
filds
fisttpl
push
insl
es
sarl
mov
pop
mov
scas
jp
roll
push
mov
dec
fwait
inc
push
pop
outsb
shrl
psrlw
aam
xchg
xchg
or
mov
push
inc
or
pusha
push
dec
std
pop
inc
notl
hlt
sub
orl
push
cs
dec
sti
lret
clc
loopne
call
inc
mov
mov
rorl
mov
jge
push
outsl
shll
les
inc
mov
sti
add
add
stos
icebp
mov
test
fucom
mul
push
jp
rcrb
push
sub
mov
lcall
push
or
mov
pop
fwait
and
lods
test
sbb
ljmp
xor
clc
jg
movsb
outsb
or
fldl
popf
jge
out
stos
cmpsl
clc
mov
add
cmpsb
fcmovbe
movsl
jne
out
xchg
adc
aad
jno
push
and
je
sahf
add
adc
shlb
inc
jecxz
rep
mov
aaa
loop
bound
inc
sahf
jg
mov
scas
sbb
mov
icebp
test
lret
or
outsl
sub
out
and
jne
fldt
popa
mov
inc
adcb
mov
aas
cmpsb
push
cmp
mov
mov
je
lods
xchg
call
lahf
cmc
inc
adc
movsl
mov
loope
ret
insb
js
pop
gs
pandn
testl
loope
mov
dec
sbb
subb
adc
inc
mov
ret
xchg
jne
mull
xchg
je
or
or
ret
subl
insl
fcmovnb
mov
jo
iret
xchg
dec
mov
int
xchg
inc
pop
mov
mov
push
mov
fs
sbb
push
out
xor
mov
adc
dec
icebp
or
sbb
dec
lret
gs
pop
fldl2e
dec
xor
mov
jnp
pop
push
fs
xlat
out
lea
pop
test
dec
neg
rorl
ds
iret
ds
popa
insb
mov
stos
daa
into
sbb
repnz
out
aas
in
iret
jns
shl
pop
mov
sbb
inc
mov
lahf
lcall
shr
xchg
mov
bound
mov
aam
stc
les
push
rorl
mov
cmp
jmp
mov
cmpsb
in
or
fcomp
enter
in
mov
mov
mov
pop
sub
fadds
mov
push
mov
lret
imul
enter
inc
or
or
cmpl
loop
jecxz
jge
lcall
sbb
pusha
stos
ja
push
cmp
into
shll
aaa
mov
add
mov
cmpsl
pop
jae
mov
adc
rclb
adc
jb
pop
xchg
jno
cmp
pop
pop
dec
pusha
das
jb
iret
das
call
aas
aad
int
aaa
pop
sbb
mov
int3
push
cmp
add
subb
fwait
and
cmp
std
sub
sbb
data16
loop
or
xchg
ret
cltd
sbb
lods
imull
ret
cmc
add
mull
xchg
mov
les
or
fsubl
fcompl
out
pushf
data16
je
test
jmp
popf
adc
je
cmpsl
push
sbbl
add
jbe
cmp
test
ja
in
inc
int3
and
push
sahf
pop
add
or
inc
pop
add
sbb
and
cmp
mov
mov
and
ss
adc
scas
mov
std
or
pop
in
mov
inc
jno
andl
push
mov
lret
jns
mov
and
movl
mov
push
insb
mov
xchg
pop
mov
mov
sub
dec
js
mov
cmc
jno
das
lds
stos
stos
lock
inc
jmp
mov
loop
adc
xor
lahf
xor
pop
mov
pop
and
push
xchg
dec
iret
and
notl
mov
scas
imul
mov
xor
xchg
mov
mov
mov
filds
cmc
daa
and
sarl
out
mov
inc
movzwl
das
clc
mov
mov
xor
mov
fistps
cmpsl
ss
lret
or
adcb
fldt
fwait
jno
aad
call
ljmp
mov
popf
aas
cmc
adc
or
cltd
xchg
jae
sarl
add
movsb
cmp
shr
jo
cmpsl
sbb
or
sbb
jge
in
movsb
call
sub
sub
arpl
mov
mov
out
adc
sub
clc
test
mov
out
push
add
xchg
lea
outsl
stos
dec
xor
movsl
dec
pop
push
int3
jbe
adc
jno
std
movsl
mov
repz
mov
pop
mov
lds
cmpsb
or
gs
mov
and
repnz
std
adc
cmp
rcrl
int
push
lahf
or
scas
xchg
jmp
nop
pop
mov
jnp
pop
mov
pop
clc
out
jbe
dec
mov
or
cmp
test
adc
xchg
test
sub
faddl
int
jne
mov
in
mov
scas
cli
rolb
push
add
sbb
leave
jnp
roll
outsl
mov
jnp
test
and
popa
dec
pop
es
inc
std
sub
push
mov
js
das
push
jns
jle
dec
mov
adc
rol
mov
dec
lods
jge
sub
add
ja
or
stc
pushl
cmc
or
rcrl
loopne
aas
imul
loope
xchg
aaa
inc
push
aas
mov
clc
pop
ljmp
sbb
dec
mov
push
out
fisttps
test
mov
sbb
int
out
jecxz
cmp
pop
stc
xlat
xchg
push
in
int3
lods
aad
add
je
pop
sub
mov
push
lret
outsb
mov
adc
dec
push
addr16
cmp
fcomip
sbb
loope
lcall
enter
cmp
test
enter
addr16
or
pop
mov
ficoms
stc
lret
jp
pusha
icebp
notb
mov
add
and
mov
pop
mov
out
xchg
mov
loopne
iret
push
xor
in
push
pop
ljmp
pop
dec
jns
pusha
imul
or
pusha
outsl
aaa
adc
imul
xchg
ficoml
cwtl
sub
js
outsb
pusha
xchg
insb
insb
dec
loopne
fstpl
enter
es
push
cmp
test
js
sub
pop
xchg
lret
sti
push
cwtl
inc
imul
outsb
out
lret
clc
xchg
imul
nop
lods
sbb
and
fmulp
imul
lods
sahf
or
dec
sub
mov
pop
pop
jg
mov
mov
jge
jae
jne
daa
rcll
add
mov
imul
out
addr16
push
cs
mov
sbb
dec
adc
popa
add
push
pushf
jl
add
push
ja
bound
xchg
lock
sbb
popa
sbb
adc
and
sahf
outsb
xchg
mov
and
cld
push
ret
mov
pop
jge
lret
fs
and
push
xchg
mov
dec
jp
cmp
xchg
mov
out
cmpsl
lds
hlt
pop
in
jecxz
enter
sbb
xor
ja
pop
outsl
stc
jne
pop
into
jbe
pop
in
push
xchg
push
push
inc
pushl
das
jb
stc
add
loope
xor
cmp
inc
fs
outsb
icebp
push
and
xlat
push
cmpl
inc
sbb
cli
jne
push
cmp
cmp
xor
scas
xchg
lret
mov
inc
dec
cmp
xor
add
mov
dec
or
hlt
das
ds
pop
add
rolb
mov
fisubs
imul
enter
aam
ljmp
idivb
cmp
xor
xchg
aam
out
inc
sbb
inc
mov
test
and
test
or
mov
pop
arpl
pop
pop
imulb
rep
out
xor
push
fidivrs
push
pushf
push
mov
sub
sti
lret
into
shlb
sbb
mov
lods
aad
outsb
and
jo
mov
lods
inc
icebp
mov
pop
xor
sbb
in
dec
jb
stos
jo
add
xlat
jno
lahf
nop
sahf
cmp
faddl
sbb
or
sub
scas
adc
ja
inc
sub
dec
or
pop
sbb
imul
iret
mov
adc
fsubr
ret
jmp
pop
rclb
dec
popf
rclb
and
pop
xor
or
bound
jnp
adc
jo
fildl
into
push
movl
addr16
call
inc
outsb
dec
test
filds
or
mov
mov
shrb
orl
rclb
jb
sahf
pop
xor
lahf
cmc
xchg
aam
pop
adc
mov
subb
push
sbb
je
loopne
clc
into
dec
adc
into
mov
aaa
inc
scas
fidivs
lret
stos
mov
adc
xchg
mov
jl
testl
sbb
or
dec
mov
or
test
mov
pop
stc
sbb
pavgw
repz
arpl
jmp
push
push
lret
lcall
lea
push
sub
insl
inc
cs
mulb
cmp
ja
test
jns
test
loop
push
mov
dec
rcll
pop
aas
das
cwtl
and
rcr
xchg
inc
cmpsl
jg
dec
aas
jl
test
cmp
leave
push
pop
adc
in
sbb
repz
lock
dec
test
nop
js
nop
iret
lods
xor
cmpsl
jp
das
fisttpll
lahf
dec
cld
add
cmp
insl
fwait
sbb
dec
movsl
mov
aad
test
aas
cmpsb
jg
jb
pop
mov
push
xchg
mov
push
sbb
imull
cmp
cwtl
inc
rorl
dec
out
xlat
imul
lret
xchg
inc
pop
shrb
jmp
inc
sti
roll
insb
test
xor
mov
push
or
dec
stos
and
sbb
adc
popf
add
hlt
mov
arpl
inc
sub
mov
lret
mov
pop
pushl
test
or
ljmp
push
xlat
mov
mov
out
add
push
daa
js
shll
push
stos
jmp
in
or
lea
bound
in
stos
adc
lcall
mov
insl
or
insb
out
xlat
jle
jl
sbb
test
sahf
test
popf
inc
mov
incb
in
ja
xor
sub
shrb
and
out
shrl
out
mov
mov
cmp
pop
mov
adcl
mov
inc
inc
inc
inc
loop
ss
lcall
sub
test
mov
mov
inc
js
xor
repnz
push
lret
pop
out
aaa
dec
test
hlt
jns
loopne
push
sub
sbb
dec
test
out
inc
test
lods
mov
pop
mov
adc
mov
iret
arpl
cmp
fwait
sub
int
addr16
and
mov
jns
jmp
in
loope
iret
cmp
mov
fcoml
cmp
loope
and
call
xchg
pushf
push
cmc
inc
or
mov
call
and
xchg
ds
xchg
ficoml
adc
dec
and
xchg
add
or
cmc
xorl
in
or
push
push
scas
or
hlt
mov
sub
xchg
call
aad
mov
lahf
mov
sub
shrl
rcrl
test
dec
arpl
xchg
div
inc
mov
ucomiss
popf
inc
outsl
out
adc
push
mov
nop
mov
lods
repnz
outsb
mov
arpl
push
fiadds
jo
jbe
adc
add
lods
cmpsl
or
push
mov
daa
sub
mov
mov
mov
jnp
negl
enter
cmp
fistpll
lds
xchg
pop
sub
add
push
movsb
pop
lock
mov
push
sub
mov
pop
in
push
loope
xor
add
xorb
fwait
add
mov
fs
hlt
es
mov
xchg
arpl
fdivrl
inc
outsb
add
enter
adc
lahf
jecxz
lock
pop
ds
lret
jns
stc
imul
push
cmp
stos
fdivrs
jl
pop
inc
jae
bnd
lahf
mov
inc
cmpsb
cmpsl
push
push
jb
sub
xchg
sub
dec
pop
out
sbb
ljmp
jp
lret
sub
enter
jno
popf
out
mov
test
inc
cld
xchg
add
sahf
add
mov
pop
repz
clc
sub
push
lods
adc
or
movl
pop
lods
stos
xor
aaa
inc
addr16
mov
pop
jns
out
loop
cmp
and
lds
scas
out
sbb
mov
in
lcall
sbb
jns
inc
mov
icebp
call
mov
shl
jmp
icebp
insb
fcomp
in
aam
or
or
jo
sahf
rolb
mov
bound
pop
cmpsl
movsl
jg
rorl
or
stc
andl
hlt
imul
xchg
mov
stc
inc
std
gs
inc
cltd
test
pusha
jecxz
popf
inc
jnp
mov
push
mov
roll
pop
dec
les
dec
jne
dec
lods
mov
lods
xor
lds
jecxz
dec
popa
jno
inc
adc
outsb
sbb
dec
and
stos
sbb
fstpl
and
sbb
pop
in
lret
les
xor
xchg
loope
pop
fst
aas
or
repnz
shrb
dec
fnsave
aaa
sbb
or
mov
mov
in
ret
xor
out
aam
and
dec
bound
mov
dec
push
pop
and
sarl
imul
int3
adcb
push
or
jbe
xchg
jno
and
das
movsl
mov
inc
test
stos
sub
daa
cltd
sahf
add
dec
jmp
test
xchg
and
sbb
lods
inc
cmp
ret
cwtl
dec
add
mov
jmp
add
je
loope
roll
mov
push
or
or
out
push
fwait
loop
jp
loop
jno
aaa
shlb
push
sti
add
neg
int3
jne
xchg
lahf
mov
int
xor
push
bound
push
mov
inc
stos
bound
sbb
and
loope
xor
push
add
add
repnz
ja
sub
add
cs
sbb
pop
adc
cmpb
out
sahf
aas
pop
out
jl
mov
jp
pushf
add
mov
mov
xchg
adc
fisttpll
pop
mov
stos
jne
dec
fnstcw
inc
dec
mov
stos
loope
js
add
jle
jl
shrl
pop
repnz
inc
jo
push
pop
and
insl
inc
push
jp,pt
add
cmp
mov
ss
pop
outsb
stos
loopne
imul
mov
inc
mov
out
xor
jl
pop
fisubs
or
imul
cmp
sbb
lock
add
mov
outsl
lods
push
in
sub
in
xchg
test
jns
push
add
pop
pop
xor
jge
cmc
addr16
test
pushl
push
inc
and
adc
jg
cmp
rorl
inc
adc
test
mov
add
jp
into
push
pop
adc
dec
ss
cmp
add
rcl
cmp
inc
sbb
int
mov
pop
push
ljmp
int3
ljmp
jmp
loope
xor
cmpsb
add
inc
outsb
cmpsb
repnz
mov
subl
dec
shl
testl
mov
int
adc
bound
in
addr16
jae
mov
sbb
inc
aaa
dec
in
add
add
dec
jb
cmp
clc
jne
outsl
sub
lcall
jle
imul
mov
movsb
mov
mov
pop
push
inc
cs
dec
lods
lods
mov
test
roll
and
cltd
aas
rclb
cmpsl
and
jge
stos
push
mov
std
shl
outsl
lcall
xchg
enter
pop
jmp
jb
js
lcall
add
xchg
loopne
pushf
and
adc
jbe
daa
arpl
cmp
jmp
pop
nop
adc
add
out
lret
push
nop
cmpsl
jmp
popf
inc
cmp
rcl
fistpll
aaa
dec
outsb
in
sub
sub
sbb
xchg
cmc
addb
adc
adc
xchg
in
shrl
shl
movsb
pushf
outsl
pop
xlat
dec
inc
hlt
rcr
sbb
xor
outsl
call
adc
mov
test
aaa
adc
push
add
push
xorl
loope
and
in
mov
ret
ja
loop
xor
rorl
je
xchg
stos
lea
jle
test
aaa
or
addb
mov
or
mov
scas
xlat
mov
div
lahf
test
shl
sahf
and
fcomps
popa
mov
jbe
das
movsl
lds
dec
pop
aas
pop
in
mov
enter
jle
ret
ja
je
or
jle
loop
out
adc
movsb
leave
mov
aaa
lods
dec
iret
inc
fiadds
orl
inc
lcall
std
sub
pusha
jnp
mov
in
shlb
test
leave
inc
dec
out
insb
mov
lds
xchg
dec
fwait
lods
iret
pop
sub
dec
popa
flds
shlb
push
xlat
lret
sbb
pop
rol
dec
negl
mov
stos
jg
pop
pop
test
and
xchg
test
loopne
jb
adcl
cltd
call
inc
adc
or
jge
jae
jl
rcrb
mov
cmp
sbb
clc
sets
arpl
daa
imull
xchg
pop
jg
pushf
test
and
gs
scas
fwait
xor
insl
dec
dec
aad
test
in
add
outsb
cwtl
inc
mov
mov
inc
icebp
pop
mov
outsl
insb
cmp
mov
aaa
push
xlat
mov
rorb
clc
inc
xor
data16
pop
push
add
pop
jb
add
xchg
pusha
xorb
inc
daa
mov
and
dec
pop
jne
mov
fsubr
cmpsl
stos
arpl
sbb
push
sbb
ret
pop
jns
test
xchg
shr
outsl
lcall
jge
test
mov
lahf
mov
mov
test
cs
aad
jp
dec
movsl
mov
lods
push
jl
in
xchg
mov
les
insl
mov
adc
test
js
ficoms
test
decl
add
add
cmp
sub
inc
jg
cmp
adc
test
xor
dec
dec
jns
stc
cmc
xchg
mov
mov
mov
leave
mov
mov
les
jecxz
dec
aam
popf
in
xchg
insb
inc
xchg
xchg
pop
ss
dec
jnp
inc
addr16
lock
and
insb
mov
dec
imul
pop
popf
popf
sahf
mov
jno
xchg
push
xchg
push
dec
into
mov
je
fmull
xor
mov
bound
scas
cmp
sarb
jne
jecxz
jl
mov
cs
lret
and
loope
xchg
pop
test
imul
sbb
lock
mov
xor
sub
lock
mov
mov
mov
xorl
insb
les
mov
jnp
js
idivb
addl
xchg
or
sbb
into
xor
mov
popf
andb
pop
mov
mov
call
stos
xlat
pop
fistpll
xchg
and
mov
cli
js
shrl
or
fimull
leave
enter
dec
in
mov
cmp
pop
lds
gs
outsb
push
xor
out
popf
cmp
or
je
xor
sub
mov
xor
pusha
lahf
pop
mov
dec
xor
push
cs
cmp
cmp
dec
rorb
adc
jo
mov
push
fwait
pop
xlat
popf
pop
dec
sahf
sbb
push
adc
mov
rcrl
movsb
fists
sbb
dec
mov
push
nopl
outsb
cld
ja
out
outsb
aas
popa
lds
xchg
mov
sub
jle
das
mov
repnz
fimuls
xchg
out
dec
mov
push
push
jb
mov
lock
stc
push
lods
mov
mov
or
ljmp
xchg
lods
or
mov
xlat
fistl
jne
push
cmp
cmp
cmp
in
inc
cmp
dec
test
inc
or
jecxz
sub
or
das
xor
adc
fidivrs
bound
outsl
inc
dec
aad
pop
and
cmp
jae
push
icebp
adc
inc
movsb
ss
add
mov
cmc
add
sbb
lea
mov
adc
and
imul
push
fiadds
sbb
sub
xchg
pop
incb
jae
jl
sahf
xor
loop
mov
rolb
pushl
stos
xchg
ljmp
jg
ljmp
arpl
and
dec
adc
xor
das
insb
jne
cwtl
sub
shll
cmpsb
mov
sti
addr16
fwait
and
pop
in
scas
fs
repnz
jns
xchg
xchg
imul
push
push
js
pop
push
push
outsl
inc
mov
outsb
cmp
pop
repnz
pushf
mov
stos
sbb
pop
xor
push
sahf
mov
enter
inc
sbb
cmp
dec
sbb
out
fnstcw
scas
jo
mov
les
shr
sbb
outsb
sub
pop
aad
gs
les
movsl
lock
aad
or
movsl
fists
sbb
dec
insl
mov
pusha
mov
mov
daa
jl
jns
xchg
cmp
cmp
js
push
dec
mov
insb
call
aam
fnstenv
fisubl
frstor
sar
push
test
adc
jns
push
test
push
int
xor
sbb
cmpsl
fsubs
inc
pop
out
mov
xor
call
jnp
fwait
pop
sub
push
sbb
sbb
push
mov
cmc
mov
mov
push
xchg
cmovbe
stos
sub
stos
pushf
pusha
add
push
jo
ljmp
sub
push
inc
jmp
popa
inc
stos
rcll
adc
mov
jge
fistl
pop
lds
cmp
fidivrl
pop
shl
jo
sub
mov
sub
repz
xchg
fcoml
xchg
test
sub
pop
call
jbe
adc
int3
dec
filds
mov
shl
stos
ret
nop
stos
jle
in
mov
sbb
lea
fldcw
outsb
push
cmc
push
sub
hlt
inc
mov
in
fcmovbe
mov
jb
lret
xchg
insl
cwtl
popa
stos
lahf
pop
orl
mov
or
test
sbb
sbb
jne
sti
leave
insb
loopne
dec
pop
test
stc
iret
int3
adc
mov
pop
ja
or
or
inc
push
popa
xchg
mov
and
lods
movsl
sbb
adc
and
mov
rorl
mov
adc
sub
fucomi
mov
outsb
sbb
int
sub
cmp
xor
cld
lods
bound
ss
jle
mov
aas
push
lock
out
cmc
fs
adc
cld
jns
xor
andl
push
les
pop
mov
mov
dec
sbb
sbb
cmp
xchg
pop
inc
cmp
addb
jl
xorl
adcl
push
cwtl
cmp
in
ret
xor
test
mov
rcl
lret
lret
xchg
clc
xor
sti
adc
push
int3
adc
sub
cld
xchg
lea
stos
out
jge
scas
jae
ds
and
ffree
aas
sbb
pop
les
xchg
les
fsub
pop
pop
push
xchg
loop
push
in
or
gs
cli
int
std
aam
subb
fwait
inc
mov
in
sbb
push
and
add
fsts
notb
mov
xor
icebp
sbb
jne
mov
jge
inc
xchg
int
adc
pushf
lea
roll
les
int
cmp
popa
sub
scas
ds
testl
xor
popa
subb
adc
pop
in
pop
adc
fsubrs
jae
std
js
sti
inc
sbb
dec
loope
popl
xchg
fnstsw
js
xor
dec
pop
leave
lods
jb
mov
shrl
scas
enter
or
int3
push
sbb
iret
aam
inc
inc
mov
mov
rorb
cmp
jnp
mov
dec
ss
scas
popa
push
sub
fisubl
cmp
jle
dec
sub
jecxz
jo
mov
testl
mov
xor
push
addr16
adc
cs
or
xchg
pop
loop
test
xchg
fisttpl
dec
sub
sbb
push
pop
std
sahf
outsb
jo
insb
ja
xor
daa
lods
ljmp
std
adcb
xchg
rorb
in
call
dec
arpl
iret
xlat
mov
xchg
sbb
fwait
mov
sbb
xchg
test
push
aaa
add
and
pushf
mov
leave
test
sbb
test
pop
inc
gs
mov
fsubl
pusha
nop
xchg
cmp
into
mov
pop
xchg
repnz
lret
fdivr
jge
mov
xchg
cli
jae,pt
sti
popf
into
jbe
mov
int3
sbb
int3
pmullw
adc
mov
sbbl
push
sub
aaa
adc
jl
mov
mov
cmp
pop
test
sub
nop
fwait
xchg
jo
pop
cli
imul
sub
or
sub
adc
fcmovne
xlat
add
xor
aam
mov
fadd
out
sar
std
adc
jg
popa
push
and
mov
push
and
mov
jle
test
rol
jl
inc
fisttps
xchg
jecxz
mov
mov
cs
scas
push
xchg
or
mov
push
jl
lock
lea
cmc
pop
enter
xchg
arpl
mov
aad
dec
add
int3
lret
ret
cmc
mov
fidivs
inc
cmp
into
push
mov
mov
mov
cmp
cltd
push
push
cwtl
adc
sahf
int
adc
dec
inc
loop
mov
lea
aam
adc
pop
mov
push
cmp
push
out
repnz
sub
add
daa
push
cwtl
rclb
cli
shl
int3
test
pop
mov
scas
dec
scas
data16
dec
fildl
or
sbb
dec
test
adc
xor
rcll
adc
cmp
jne
jae
nop
mov
push
in
dec
addr16
cld
sub
adc
mov
call
loop
mov
pushf
imul
cmc
sahf
lock
outsb
sbb
mov
mov
les
mov
rol
dec
jnp
inc
sbb
or
ficompl
sub
popa
lods
shld
mov
pop
push
or
dec
jl
push
and
cmp
mov
adc
daa
es
and
mov
or
enter
mov
jo
mov
mov
jge
sub
repnz
mov
xchg
rorb
sub
das
inc
mov
iret
shlb
lea
lret
shr
sub
in
cmp
outsl
push
outsl
call
fdivrs
outsl
xchg
sarl
ret
mov
jecxz
sbb
cmp
fisttps
push
add
mov
lcall
xchg
jbe
mov
cmc
xchg
test
nop
mov
jmp
fdivrs
inc
cmp
setge
cmc
push
ljmp
xor
jge
adc
push
je
cmc
jb
aaa
aad
addr16
insb
mov
ja
or
and
into
loopne
leave
ret
repnz
scas
rcrl
std
jbe
dec
jle
add
stos
mov
fadds
cmp
xor
into
sahf
and
shlb
and
pop
mov
mov
jg
push
xchg
je
xchg
push
mov
outsl
inc
adc
mov
mov
jge
and
mov
dec
add
jno
push
repnz
pop
stc
inc
pop
mov
xor
push
dec
sti
lahf
js
int
and
sbb
add
pusha
mov
cmc
lret
js
push
aaa
loop
push
xlat
adc
mov
bound
sahf
lods
testb
xchg
js
pop
pop
dec
push
int3
loope
push
movsl
jmp
sbb
test
rcrl
xchg
jbe
aad
xchg
xchg
loopne
xchg
or
int
sub
mov
or
jno
sbb
xchg
xchg
rol
dec
lahf
imul
addr16
or
daa
mov
test
cli
insb
pop
inc
out
and
imul
mov
push
call
pushf
out
mov
imul
jl
jbe
inc
and
stos
mov
cwtl
mov
inc
hlt
lods
mov
outsb
cmpb
test
dec
jg
or
sbb
pop
jg
mov
cmp
or
pop
stos
mov
lods
mov
mov
mov
jmp
add
pop
adc
xchg
sub
mov
push
cmp
xchg
sti
inc
mov
add
sub
rolb
mov
push
adc
dec
fistl
inc
mov
outsb
mov
in
sbb
jp
addr16
imul
cwtl
cmp
test
xchg
ss
fwait
lahf
add
mov
and
stos
pop
sbb
mov
dec
pop
inc
and
ret
push
cmp
mov
stc
pop
ss
popa
popl
sbb
xchg
pop
arpl
popf
nop
sub
push
sub
pop
movsb
adcb
cmp
outsl
mov
xchg
inc
in
inc
sbb
inc
fwait
and
int3
push
mov
xchg
dec
pusha
loopne
iret
adc
or
fwait
push
pop
fstpl
dec
pop
xchg
pop
popf
push
cmp
imul
loope
lea
jmp
clc
test
mov
jb
mov
inc
xchg
push
xchg
add
cwtl
cmp
cwtl
push
cmp
std
dec
loope
aas
mov
dec
pop
mov
leave
aad
stos
inc
add
pop
push
jmp
dec
xchg
mov
je
scas
mov
andps
mov
scas
test
in
add
cs
fwait
dec
pushf
subb
dec
cmp
inc
xchg
adc
xchg
mov
ljmp
lods
pop
fnsave
xchg
fs
int3
push
and
je
cltd
inc
add
dec
daa
lret
lods
push
iret
test
pop
out
clc
jg
fwait
and
nop
pop
adc
sarb
push
lods
jmp
push
popa
push
test
sbb
mov
fnstcw
stc
mov
icebp
jne
insb
sbb
test
out
adc
inc
mov
es
push
fildl
stos
cld
push
iret
dec
xchg
stc
add
das
cmpsb
lods
xor
aad
ss
push
das
sub
or
fstps
inc
mull
xor
add
mov
mov
arpl
out
sub
add
inc
outsb
xlat
les
xor
mov
ret
in
sub
sbb
lods
je
lcall
add
cmc
push
jo
rolb
rol
sub
mov
adc
jns
test
pop
inc
jl
push
and
inc
pop
in
loopne
or
int3
xlat
mov
and
sahf
aam
push
lcall
es
hlt
sar
iret
repz
sub
push
inc
sahf
cmp
cld
mov
pop
gs
sbb
ret
sti
leave
pop
or
stc
mov
out
rorb
dec
sub
jbe
pop
stc
dec
sahf
pop
rcll
les
test
add
popf
movsl
mov
hlt
cmp
in
jecxz
rorl
dec
push
sbb
jnp
sbb
pop
ffree
sti
stc
sbb
cld
jle
filds
arpl
jne,pt
add
xchg
clc
outsb
in
and
mov
pop
pop
stos
and
xchg
lock
pop
rorb
test
inc
arpl
movsb
and
add
subps
imul
jo
adc
or
jge
adc
xor
push
mov
les
push
lahf
shlb
fcompp
addr16
scas
adc
dec
imul
subl
icebp
cmp
or
loop
push
stos
mov
inc
inc
in
cmpsl
jns
scas
lcall
or
and
jae
mov
ljmp
jae
mov
xchg
and
call
pop
sbb
pop
call
or
sbb
xchg
or
imul
fsubrl
arpl
popa
insb
mov
ret
and
mov
loop
or
push
clc
outsl
std
cmpsl
mov
dec
icebp
mov
adc
mov
int
jl
or
mov
lea
adc
lods
jno
xor
push
test
fs
or
out
cli
and
sbb
ret
pop
test
rol
scas
cmp
lods
adc
clc
pop
fisttpl
fisubrs
pop
stos
outsb
fcmove
ds
inc
jno
fidivrl
loopne
ror
mov
je
mov
xor
cmc
daa
xchg
sub
jecxz
fstl
orb
dec
xchg
aaa
jae
daa
loopne
imul
lret
stos
stos
aas
sbb
insl
xor
sarb
xchg
mov
or
mov
mov
ret
ret
fucomip
push
stos
mov
ret
add
mov
xchg
mov
pop
cmp
xlat
dec
lock
test
mov
sub
stc
xor
adc
loope
hlt
call
std
push
jnp
nop
mov
pop
dec
lods
push
lahf
bound
cmp
test
add
add
mov
xor
es
fidivrs
xor
enter
push
lret
pop
push
popa
aaa
xor
and
scas
push
cmp
fistl
sbb
andl
mov
jmp
or
mov
lods
dec
pop
add
imul
lcall
xlat
lds
imul
pop
mov
sub
aaa
xchg
ds
int3
mov
fcomps
test
fnstsw
xchg
pop
sbb
outsb
loop
roll
or
cmp
sbb
push
stos
mov
inc
in
inc
je
pop
adc
jge
adc
adc
lods
test
xor
test
andl
imul
and
jae
cmp
cli
test
cwtl
mov
and
sarb
and
or
push
je
popl
inc
cmp
lret
fcompp
test
repz
pop
jp
cmp
jle
ss
std
addl
mul
test
xor
loope
jb
ficompl
cmc
dec
and
popa
adc
add
lea
and
jecxz
adc
pop
in
mov
std
adc
dec
mov
inc
sub
xor
pusha
imul
adc
mov
and
push
dec
mov
xlat
fisubrs
cs
and
out
rolb
arpl
stc
cmpsl
notb
sbb
xchg
ss
sbb
addr16
pop
icebp
cmpsb
sbb
xor
out
mov
mov
or
mov
xchg
ds
or
mov
mov
xcrypt-cfb
cmpsl
daa
push
stos
insl
aas
notb
mov
repnz
inc
aam
int
je
or
or
adcb
cmp
and
enter
loope
mov
sbb
add
sub
roll
jo
add
clc
mov
push
add
sub
out
push
push
leave
pop
pop
mov
mov
cmpsl
jbe
leave
movsl
xchg
out
xchg
add
dec
dec
scas
repnz
jmp
sbb
divl
fidivrl
cs
push
push
out
in
movsb
jne
sub
jmp
clc
mov
punpckhbw
cmc
push
mov
int3
adc
test
cmp
xchg
lcall
das
fmuls
lcall
xchg
cmpl
sub
mov
inc
bound
std
andl
sbb
cmp
pop
shll
outsb
mov
cli
adc
mov
jns
sub
jne
mov
or
mov
inc
adc
pop
addr16
aaa
dec
loopne
cmc
sub
ror
dec
adc
cmp
das
movsb
lahf
lgs
and
sub
mov
cmp
and
lods
cltd
lret
dec
xchg
inc
sub
mov
jo
add
mov
loop
into
mov
inc
or
inc
pushf
adc
lea
add
test
mov
jne
cwtl
pop
lea
call
cmp
stos
jae
rsm
pop
fwait
xlat
mov
or
cli
inc
xor
ret
jne
dec
mov
pop
push
cmp
jb
adc
std
pop
jae
stc
xor
data16
stc
lret
jle
mov
or
add
pushf
aam
fcmovnb
ja
jp
repnz
jmp
ja
jmp
jae
ljmp
fwait
inc
jp
push
lock
ds
xor
imul
cmpsb
adc
cmp
pop
pop
lea
stos
dec
mov
lods
jl
stos
into
cmpl
repz
jge
cmp
and
repz
dec
sub
mov
test
xor
sub
sbb
xchg
pop
dec
repnz
cld
push
je
jo
sbb
stos
pop
sub
mov
cmc
aad
dec
xorb
sub
mov
pop
fs
mov
popf
loop
dec
add
jmp
and
loope
push
or
movsb
dec
or
jb
repz
jg
cmc
movsb
lods
adc
daa
xor
shlb
add
inc
pop
aaa
adc
loope
jmp
icebp
ret
pop
inc
push
inc
mov
add
fimuls
es
and
cmc
inc
adc
xor
mov
repz
pop
wrmsr
jl
push
hlt
dec
ss
stos
xchg
inc
jecxz
ljmp
scas
lods
or
fsubrl
push
rol
mov
jmp
fstl
movsl
pushf
out
or
sbb
pop
sub
orl
mov
mov
and
dec
sbb
inc
stc
inc
dec
arpl
adcl
mov
lods
inc
int3
mov
add
fdivrl
stos
out
out
lcall
mov
dec
into
cmp
lret
pop
cmp
outsl
dec
add
cwtl
sar
xchg
fnstsw
rolb
and
dec
jp
cmp
cmc
ds
les
les
and
or
fcoms
and
fimuls
sub
and
jno
adc
int
inc
xor
xchg
jge
push
mov
mov
mov
ret
inc
or
sub
es
mov
dec
push
sbb
leave
lods
lock
xor
mov
popa
and
sub
mov
insb
ss
jmp
out
jo
xor
out
daa
lahf
xchg
stos
mov
mov
das
insb
push
mov
cmp
lret
mov
sbb
mov
nop
and
dec
fidivl
push
notl
or
pop
xchg
out
xor
in
in
lds
xchg
and
test
out
jnp
gs
jg
scas
cmpb
pop
outsb
mov
mov
pop
lods
hlt
popf
imul
andl
xchg
inc
mov
repnz
lock
mov
scas
jmp
addr16
mov
jo
hlt
sbb
cli
dec
or
lods
outsl
xchg
jne
cmp
inc
dec
push
enter
decb
cltd
jno
cld
cmpl
pop
popf
aas
push
in
xchg
adcb
lret
clc
clc
dec
adc
insl
xor
sub
sub
popa
push
scas
out
testb
movsb
mov
out
cmpsl
cmpl
cwtl
nop
or
ja
mov
testl
push
mov
outsb
xchg
xlat
add
adc
cmp
in
icebp
inc
call
cmp
push
lock
jne
adc
jmp
adc
bound
mov
add
pop
dec
ss
xor
int
scas
jns
cld
inc
lret
adc
xor
add
pop
insl
les
testb
mov
sbb
sbb
inc
sarb
xchg
push
dec
scas
mov
std
lods
push
cmpsl
xchg
push
pop
sub
mov
and
lcall
scas
xchg
pushf
bound
and
je
pop
dec
popa
jbe
jne
cmp
arpl
repnz
test
leave
mov
jl
pushf
icebp
arpl
adc
scas
lcall
dec
ss
mov
add
jns
imul
mov
xor
add
subb
sub
shlb
gs
and
inc
pop
iret
test
cltd
mov
xor
jmp
bound
fs
stc
mov
mov
xchg
imul
rolb
stc
notl
cmc
in
cmc
fists
fldenv
jnp
jbe
or
into
mov
mov
xchg
es
into
xchg
stos
rcrb
imul
xchg
mov
movb
aas
pop
popa
sbb
out
fwait
test
adc
sbbl
push
les
stos
sub
rcll
mov
dec
sub
aad
pop
add
ljmp
jp
adc
repz
lret
sub
mov
dec
std
add
jo
loopne
outsl
add
orl
daa
pop
or
jmp
std
in
cli
fdivrl
inc
fistl
sbb
xor
mov
mov
xlat
test
xchg
add
jmp
adc
sub
faddl
cmp
into
and
cmp
aas
cli
mov
ja
jmp
test
dec
mov
stos
lea
ljmp
add
lods
add
enter
jb
addr16
and
test
hlt
add
scas
sub
test
pop
sub
mov
test
loope
repnz
push
push
cmpsb
sbb
jle
outsl
mov
inc
and
lods
ds
scas
stos
push
xchg
mov
pop
add
adc
jmp
or
adc
sbb
or
outsb
or
jle
xchg
xchg
jnp
sbb
pop
inc
movl
mov
mov
rcrl
push
mov
inc
push
push
fiadds
leave
jge
inc
mov
cli
mov
lret
ss
push
cwtl
jo
inc
fs
xchg
loop
std
push
push
cmp
subl
or
xor
das
test
xchg
aam
xor
xchg
enter
icebp
scas
xchg
mov
xchg
lods
sub
cmpsb
aas
dec
push
jae
and
adc
test
int
subl
fimull
rorl
inc
pop
nop
call
clc
inc
pop
gs
pushf
stos
push
pop
jge
test
adc
mov
pop
sbb
adc
in
push
pop
jo
mov
xchg
divb
fcoml
push
adc
fwait
ret
push
cmc
pop
popf
lahf
shl
outsl
sub
sbb
dec
orb
pushf
adc
dec
sub
mov
sub
sbb
cmp
lret
adc
dec
daa
cmp
jle
mov
sub
scas
shr
xchg
sub
push
adcl
in
sarb
push
mov
mov
in
shl
clc
jb
xlat
fdivrl
or
and
out
sbb
addr16
push
push
push
mov
add
push
int
push
cmp
jge
push
fucom
dec
xor
xor
outsb
aaa
sbb
sub
mov
notb
roll
sub
aam
test
adc
fsubrs
pop
sti
repz
lret
nop
jp
jne
ret
loopne
clc
sysexit
jo
cld
subb
clc
mov
dec
call
int3
pop
add
or
push
mov
mov
xor
out
les
je
mov
nop
in
mov
int3
arpl
sub
jle
mov
jmp
jle
cmp
jb
rolb
outsb
repz
push
adc
mov
lret
cmp
in
and
ds
cs
repz
push
sbb
push
sub
dec
jmp
clc
xchg
pcmpgtb
inc
test
mov
cmp
movsl
mov
jne
mov
test
mov
dec
fidivl
mov
mov
xor
ljmp
mov
inc
push
mov
xor
push
das
daa
sub
jo
pop
sub
dec
jbe
or
pushf
jmp
in
cmp
dec
shrl
push
mov
mov
loop
xchg
loop
fwait
loope
arpl
rclb
dec
adc
out
cs
mov
stos
orl
out
cmp
imul
shrl
mov
cltd
add
push
cmp
mov
sbb
ss
xchg
hlt
enter
int
inc
loope
ficomps
sbb
enter
jnp
jnp
cmp
lds
insl
subb
outsb
sbb
xor
fists
out
push
sbb
es
je
mov
imul
pushf
je
jg
ljmp
inc
fiaddl
inc
push
insl
push
repz
pop
adc
leave
inc
lods
mov
push
imul
fnsave
inc
loopne
ffreep
mov
cli
add
sahf
iret
adc
test
mov
mov
cmp
xlat
adc
mov
jl
iret
pop
dec
mov
xchg
fstpt
mov
xchg
push
mov
rorl
mov
sbb
sbb
faddl
test
or
pop
jmp
shrb
pop
mov
add
fwait
dec
out
xchg
inc
insb
jno
scas
mov
push
fwait
jo
sti
xor
sbb
and
sub
dec
xabort
xor
mov
jno
shrb
mov
aaa
or
xchg
mov
jo
cltd
negl
xlat
shlb
xchg
insb
scas
loop
adc
cmp
icebp
pop
ja
mov
sub
adc
fiadds
popf
push
adc
lret
outsb
push
mov
pop
loopne
mov
jns
mov
fsubl
jae
lods
insl
mov
cltd
icebp
pop
push
loope
outsl
fstps
add
test
bound
nop
inc
jnp
xor
ss
int
nop
push
mov
adc
jg
add
out
and
sub
test
xlat
stc
arpl
fstps
lock
jbe
sub
jae
add
xchg
mov
ja
std
lcall
push
pop
push
or
dec
jp
or
pop
push
imul
pop
cvtdq2ps
mov
add
add
lret
mov
add
jbe
jle
mov
xchg
out
sub
test
scas
shl
add
dec
or
rcrb
sbb
mov
fbld
xchg
fsubp
loopne
addr16
lahf
ret
fucomip
mov
iret
xor
orl
mov
in
dec
divl
rcll
jne
es
das
ljmp
out
mov
sbb
adc
mov
add
out
mov
aas
outsb
xor
stos
mov
mov
ficomps
push
sbb
dec
push
xchg
cli
cli
push
sbb
sub
aam
mov
fs
mov
xlat
push
ljmp
push
dec
inc
jmp
dec
clc
pop
fsubrs
jnp
repnz
jbe
sbb
cmc
mov
or
sub
sti
jl
bound
mov
or
cltd
xchg
xor
aaa
and
inc
popf
add
out
nop
sub
cmp
mov
js
es
dec
jle
aas
orl
arpl
sub
ja
rcll
adc
cli
dec
daa
sets
mov
lret
imul
icebp
ret
pop
jmp
xor
scas
inc
sbb
roll
xchg
push
xlat
jecxz
xchg
scas
iret
pop
gs
orb
xor
pop
dec
xor
popa
dec
popa
sti
mov
mov
sub
fcoms
aas
pop
cld
movsl
dec
faddl
jmp
aaa
stos
out
popa
mov
mov
mov
inc
loopne,pn
lret
inc
cld
lret
adcl
scas
xchg
and
lret
jno
out
dec
mov
pushf
inc
shr
xor
inc
lea
out
sub
stos
je
xchg
arpl
lods
cmp
push
lret
roll
into
scas
lahf
outsl
sbb
sbb
mov
bound
inc
repz
ret
dec
mov
cltd
or
into
nop
cmp
jge
into
je
pop
adcl
sub
mov
push
ljmp
sarl
or
mov
loopne
sub
jo
fmuls
lea
fiaddl
adc
jo
push
leave
dec
push
or
mov
loop
dec
enter
add
and
adc
add
sub
pushf
das
mov
mov
mov
pop
mov
or
jle
lahf
notl
testl
shlb
pop
into
sbb
leave
stc
pop
in
pop
push
pop
cli
cmp
insl
jmp
sarb
out
subb
or
lret
ss
dec
sbb
gs
test
push
push
cmp
push
cwtl
lock
movsb
filds
or
aad
push
negl
stos
imul
add
pusha
ds
mov
int
push
push
jmp
push
lea
pusha
bound
sbb
push
pop
call
sub
adc
jle
lret
adc
fldcw
popf
test
lahf
loopne
pushf
out
or
sbb
fs
mov
xor
iret
jp
add
dec
cmc
xchg
or
outsl
mov
and
xlat
inc
jae
mov
fwait
lret
daa
and
aaa
int
mov
or
mov
scas
pop
daa
xchg
dec
in
mov
cltd
fnsave
adc
xchg
cmpl
xor
popl
icebp
test
cltd
in
push
and
inc
mov
stos
loopne
bound
xchg
adc
insb
or
fldcw
and
ja
sbb
mov
or
jbe
arpl
and
in
pop
lods
aad
pop
xor
mulb
dec
pop
xor
xor
jmp
in
test
aaa
fwait
xchg
or
in
repnz
repnz
jae
inc
push
sub
pop
push
cmp
sub
fadds
inc
bnd
aas
or
dec
lock
cmc
xor
dec
ss
cmp
cmpsl
out
je
adc
mov
cs
std
int
pop
mov
jp
add
inc
repnz
mov
cmp
fisubrs
rdpmc
es
enter
bound
leave
pushf
rol
fildl
filds
mov
push
jecxz
out
iret
add
outsl
sub
inc
or
in
sbb
mov
fildll
not
jp
mov
jae
and
inc
jp
adc
push
test
repz
pushf
add
or
es
dec
pop
jno
add
pushf
fadd
into
xchg
pop
out
pop
adc
xchg
and
out
cli
sub
and
clc
sbb
mov
sarl
xchg
int
cs
mov
insl
aaa
test
jmp
and
mov
in
test
add
ljmp
or
mov
dec
outsl
test
adc
dec
ss
add
inc
mov
mov
imul
xchg
cmp
sub
cmp
mov
dec
fldt
sub
or
cmp
jle
sub
xchg
mov
push
jo
push
outsl
or
pushf
ds
dec
sti
dec
sub
add
pop
in
cli
loopne
movsb
pop
stc
repz
xchg
jecxz
ja
or
cmp
push
fiaddl
iret
ret
cmpsb
je
stos
xor
arpl
jo
mov
in
flds
mov
dec
lods
cmp
inc
mov
gs
xchg
dec
mov
mov
jl
fdivrl
lds
dec
dec
mov
xor
cmp
mov
flds
or
aaa
outsl
cmp
fmul
in
cmp
clc
loope
cli
mov
loope
xlat
xchg
ficompl
mov
fwait
in
and
test
ljmp
int
ljmp
sarl
das
mov
sbb
push
scas
push
ljmp
int
sbb
repnz
or
cli
pop
in
adc
or
pop
movsl
cmpsb
icebp
imul
lcall
jo
push
nop
popf
in
inc
jne
xlat
jnp
mov
mov
aaa
sub
xor
nop
ljmp
mov
xor
fstps
sub
leave
rcll
dec
dec
jmp
push
mov
loop
dec
sub
scas
xor
and
mov
lret
jb
pop
je
sti
mov
mov
in
sahf
cmc
push
popf
sub
inc
lea
cmp
mov
mov
enter
out
add
and
add
push
pop
and
cmp
adc
jns
push
push
jge
pusha
cmp
xor
pop
xchg
push
mov
xchg
mov
xchg
fistpl
add
xor
loope
xchg
lret
mov
ja
pushf
es
pusha
call
lea
push
fcoml
mov
mov
call
and
ss
dec
insb
or
and
fwait
clc
xchg
push
gs
and
imul
test
insb
ret
repz
loop
sbb
xor
xor
xor
and
cmp
lret
call
cmp
mov
xchg
dec
clc
cmpsb
out
add
loopne
pop
loop
lcall
stos
dec
xor
jmp
mov
addr16
or
fs
loope
mov
filds
loopne
dec
ss
aas
lret
mov
mov
push
mov
jp
imul
cltd
sub
mov
adc
jnp
lcall
in
int3
pop
push
inc
call
adc
sub
and
jnp
loop
es
insb
out
pop
popa
testl
push
imul
idiv
or
cmp
stc
mov
aam
fmulp
popf
fnstenv
pop
or
or
pop
xchg
push
or
out
mov
movswl
pushf
ljmp
int
subb
mov
movsb
cmc
ret
mov
xor
push
xlat
xchg
mov
dec
add
mov
cmc
add
inc
cmp
mov
sti
daa
xchg
enter
addr16
xor
lahf
mov
bound
ja
or
fstps
outsb
add
loope
addr16
insl
sub
add
out
add
add
notl
mov
sub
testl
mov
test
sub
jecxz
aaa
js
cmp
lds
out
shlb
dec
and
mov
add
aad
fldt
dec
sbb
push
mov
fs
je
or
push
jg
rcr
pop
sbb
shrb
lcall
das
sarb
push
pop
mov
jle
dec
adc
mov
aas
ficomps
cmpsb
sbb
test
psubq
js
xor
push
add
mov
fcoml
outsl
dec
out
mov
ret
cmp
push
inc
stos
imul
faddl
mov
cltd
mov
or
sbb
pushl
movsl
rorl
outsl
mov
mov
dec
shrl
into
mov
cld
adc
jnp
les
adc
cmp
daa
pushf
cmp
aaa
addr16
fwait
push
mov
lock
jne
sbb
push
repz
ret
mov
inc
lea
rcll
cmpsl
ja
addr16
bound
les
in
iret
imul
addr16
movsb
mov
imulb
sti
cmp
xor
jne
or
icebp
enter
imul
inc
jae
lret
and
and
mov
sbbl
sub
and
sbb
xor
pop
mov
dec
cltd
stos
jmp
aaa
mov
sub
mov
push
jmp
aad
xchg
sbb
or
out
push
les
arpl
cmpb
inc
ret
scas
dec
mov
sub
xor
movsl
mov
out
add
int3
sbbl
ret
cmp
push
cltd
push
jne
adc
add
je
movsb
popf
mov
jmp
sub
jae
mov
loope
jge
mov
data16
nop
pop
cwtl
sub
mov
mov
popa
ljmp
into
mov
jl
fstpt
mov
fists
xcrypt-ofb
cmpsl
insb
push
mov
or
cmp
adc
in
xchg
add
js,pn
data16
pop
std
pop
and
sti
adc
mov
mov
cltd
xlat
and
sbb
int3
mov
lret
mov
push
pop
cli
sub
jns
shrb
mov
je
dec
mov
mov
xchg
js
stos
pop
sub
pop
jo
pop
test
iret
add
lret
pop
push
push
xor
inc
repz
push
ret
imul
inc
and
lea
dec
imul
nop
jp
js
popa
out
sub
call
lods
stc
dec
les
in
dec
and
push
cmp
xor
push
adc
clc
scas
xchg
fildl
mov
and
addr16
addr16
pop
out
js
sub
cmpsb
push
ds
ja
xchg
sarl
dec
jecxz
pop
mov
arpl
add
loope
mov
aam
add
push
mov
and
jo
or
adc
push
mov
sti
cmc
sbb
imul
and
sub
jle
adc
mov
stos
mov
loopne
mov
test
cmp
jns
adc
sub
jbe
adcb
mov
sub
outsl
flds
dec
mov
arpl
cmpsl
push
ja
ss
std
cmp
jae
lret
sbb
gs
mov
add
mov
push
lods
sbbb
mov
mov
les
add
mov
sbb
sti
lahf
adc
in
fs
test
pop
inc
cmp
cmp
out
xchg
jmp
cmp
pop
mov
push
mov
inc
push
mov
pusha
cmp
bound
lods
jg
mov
cli
dec
fnsave
lret
imul
mov
stos
add
cld
sub
bound
mov
loop
xor
lods
and
cltd
ja
scas
xchg
icebp
and
rolb
mov
mov
aas
ds
jle
push
imul
xchg
jne
fs
cmc
inc
lahf
in
nop
inc
aad
loope
pop
dec
movsl
push
cmp
mov
jge
xor
dec
daa
xor
jo
scas
push
fisubrs
negb
test
cltd
mov
into
jo
push
outsb
adc
inc
adc
push
or
mov
or
cmpsb
xchg
lahf
xchg
xorl
popf
xchg
dec
lcall
cmp
mov
dec
inc
adc
mov
fsubr
pushf
test
insb
add
gs
xor
sub
or
sti
sub
and
xchg
cmp
jmp
hlt
lahf
adc
clc
enter
stos
in
or
mov
pop
mov
or
mov
mov
je
call
dec
add
jo
into
loopne
insb
xchg
cmp
cmp
pop
icebp
or
fiaddl
testl
xlat
xchg
out
push
test
jecxz
dec
ja
jb
mov
clc
test
ja
jns
push
orl
pop
add
add
push
dec
std
xchg
lods
mov
push
in
cli
fcoml
mov
pop
shll
jmp
sbb
loopne
rcr
insl
mov
out
sub
add
adc
stos
pop
xchg
out
cmp
arpl
fst
mull
push
xchg
test
sub
inc
cwtl
lods
fsubs
in
lods
test
add
fldl
ret
roll
jg
aaa
popl
and
ja
xor
dec
xchg
stc
notb
xlat
notl
dec
mov
pop
cmp
aam
cmp
adc
out
push
test
mov
cmc
ret
stos
sbb
test
jno
fiadds
lret
call
incb
mov
mov
shll
mov
push
leave
mov
das
das
or
imul
ror
mov
loopne
addb
insl
push
cmc
push
leave
outsb
pop
lahf
fisubs
xchg
call
adc
ljmp
movsb
js
inc
pop
cli
mov
inc
jae
std
push
loop
push
lcall
adc
stos
or
xchg
sti
lcall
mov
lahf
jbe
xor
icebp
stos
fcoml
in
out
push
loope
push
adc
je,pn
xchg
fisubrs
xchg
mov
test
push
dec
cwtl
ds
paddd
inc
mov
inc
adc
sub
dec
dec
or
lret
pop
punpckhwd
les
gs
sahf
mov
cwtl
mov
xorb
in
xor
and
mull
push
cmp
jp
fbstp
pop
insl
les
cwtl
test
pop
scas
leave
mov
out
stc
mov
adc
sbb
enter
push
lods
ljmp
hlt
mov
inc
scas
xchg
sub
shll
or
in
push
ss
in
mov
cmp
pop
push
and
fbstp
lret
ret
xchg
or
jbe
push
sub
aad
sti
mov
fistpl
psrld
ds
xor
xchg
andl
subb
mov
push
jp
call
push
hlt
lods
out
divl
sbb
enter
push
dec
mov
daa
loopne
pop
inc
test
outsb
sahf
or
cltd
movsb
sub
and
jmp
xchg
in
inc
jnp
loopne
fistl
add
jno
sbb
mov
repnz
push
push
push
dec
in
jbe
les
or
inc
pop
xchg
in
sbb
xchg
fidivs
xchg
mov
sbb
mov
push
sti
iret
int
std
dec
sub
stc
stc
mov
repz
ja
decb
dec
aad
mov
hlt
lahf
lock
xor
sbb
rclb
sti
mov
mov
xor
cmp
mov
or
sahf
test
std
in
adc
lret
fisubrl
add
jne
push
lds
movsb
mov
cmp
and
lods
aaa
icebp
sub
aad
sbb
test
loope
pop
push
cltd
outsl
mov
lret
inc
faddl
scas
mov
popf
adc
out
imul
icebp
mov
scas
testl
push
movsl
push
insb
data16
cmp
inc
stos
das
sbb
lods
add
loopne
or
pop
xlat
jge
sahf
enter
pop
pop
fcomps
or
push
jecxz
loop
lds
mov
push
push
mov
popa
mov
lret
in
push
add
adc
je
pop
or
call
sahf
mov
decl
push
push
stos
test
lret
add
push
stc
adc
lret
sub
xchg
adcl
nop
jnp
adc
push
xorl
sub
mov
pop
xor
adc
xchg
sarb
jmp
cli
xchg
cld
lcall
mov
inc
cmp
xchg
mov
call
jae
lahf
and
and
add
pop
insb
adc
mov
scas
iret
test
ljmp
xchg
jmp
cld
jno
adc
and
loop
aaa
imul
xacquire
sub
shlb
repz
int
mov
imul
pop
jle
sbb
pop
and
lahf
js
clc
scas
push
push
gs
cwtl
xchg
rorl
mov
pop
sbb
dec
inc
or
fidivl
leave
andb
cli
ss
popf
and
inc
xchg
fwait
outsb
cmp
cmp
subb
cmp
sub
sbb
out
add
xor
je
loopne
inc
mov
mov
cltd
xor
sbb
cmp
lods
sbb
sbb
fbstp
cmp
in
mov
pop
mov
jbe
cli
leave
fisubrs
sub
pop
xor
ds
cmpsl
aas
mov
dec
test
outsl
nop
fimuls
movsl
fnop
cmp
lods
mov
mov
lods
iret
mov
nop
imul
iret
ja
lret
cmpsb
lds
pop
mov
xor
push
daa
xchg
nop
insl
out
xor
pop
jne
dec
sub
jne
shll
sub
jo
bound
mov
fdivs
or
call
mov
sbb
cli
lds
mov
out
xchg
push
insl
scas
sti
test
mov
jb
loop
testl
mov
lds
hlt
inc
lcall
scas
mov
mov
sbb
aam
dec
mov
mov
cmp
adc
mov
into
ret
jbe
add
in
sub
fidivs
lahf
push
jmp
mov
mov
jg
popf
inc
bound
orl
push
cmpsb
das
and
push
pop
pushf
xchg
push
pop
cmp
rol
jmp
das
nop
sbb
cwtl
pop
xchg
icebp
push
and
loopne
sahf
in
stos
inc
jae
jge
outsl
xchg
or
cld
rolb
adc
flds
sub
adc
loop
xor
mov
jnp
cli
in
jle
aaa
dec
lods
jnp
stos
xchg
daa
lcall
push
xchg
lock
ret
dec
push
jae
and
jbe
pop
inc
pop
ret
cmpsb
leave
popf
lods
std
fstpt
imul
loop
push
mov
sub
mov
mov
loop
popf
sbb
subl
nop
repnz
pop
out
ret
loopne
jg
insl
mov
inc
push
push
dec
cld
stos
jb
cs
int
scas
mov
test
movsl
mov
out
test
gs
mov
sub
inc
and
pop
rcll
inc
adc
out
xchg
je
adc
mov
imul
les
push
fcomip
and
aaa
loop
mov
cmp
stos
cmp
add
cwtl
jge
add
dec
int3
lods
stos
mov
leave
scas
into
xchg
adc
push
xchg
add
movsl
xchg
or
fs
shlb
jmp
jae
test
ret
mov
hlt
inc
jno
jecxz
insl
mov
xchg
ss
pusha
jne
push
mov
xor
cli
pushl
mov
cmpsl
fldt
iret
clc
jle
sti
add
nop
loopne
in
dec
mov
xchg
aas
ror
nop
xchg
hlt
fistpll
adc
pop
insl
mov
xchg
lods
jl
push
scas
mov
xchg
inc
push
or
mov
pop
push
push
push
ss
aad
pop
fcmovnb
add
subb
sti
push
sbb
cmc
inc
mov
or
mov
cmpsb
push
gs
mov
and
ss
inc
mov
aaa
outsb
das
sbb
or
mov
fwait
mov
pop
push
icebp
in
shrb
adc
mov
outsl
out
nop
push
lock
or
popf
inc
fidivl
lahf
leave
mov
or
dec
mov
pop
adc
jl
pusha
outsl
sbb
sbb
fwait
lock
jae
and
mov
fldcw
xor
loopne
nop
jns
popa
add
xchg
ret
fs
jns
popa
cmp
push
add
sbb
ja
rolb
popw
mov
repnz
cwtl
cwtl
xchg
sub
inc
cld
jecxz
xor
insl
cmpsb
arpl
jmp
loop
fst
pop
adc
adc
fsts
int
test
cmp
fistpll
ja
jp
ds
jg
jne
test
mov
loopnew
push
jge
insb
dec
pusha
in
es
xchg
push
mov
mov
mov
jnp
mov
in
stos
cli
cmp
addr16
and
add
xor
rclb
or
cmp
stos
lods
mov
fwait
lds
and
mov
cld
call
loopne
cmpsl
mov
call
fsub
std
jne
mov
cmp
pop
jo
sub
scas
shl
in
jl
mov
les
cmp
incl
fisttps
mov
xchg
mov
cmp
lods
pop
cmp
mov
push
dec
addr16
mov
lods
fcmovbe
sbb
fidivl
xor
test
mov
jo
pop
inc
shlb
sti
lret
add
lahf
stos
mov
jge
ret
pop
lods
movsl
mov
fcmovu
es
lods
cwtl
dec
dec
adcl
xchg
repz
repnz
pop
jns
jo
out
inc
stc
mov
in
adc
stos
daa
shll
sub
push
out
or
sbb
rcll
xor
xlat
data16
rolw
iret
inc
pushf
incl
jnp
mov
pop
and
cmc
fnstcw
mov
cld
stc
outsl
mov
xchg
stos
cli
iret
push
ljmp
push
mov
xor
je
hlt
sbb
imul
dec
adc
mov
adc
pop
movsb
mov
xor
iret
sub
pop
je
and
jg
adc
sub
idivl
jg
dec
or
roll
xchg
lcall
sbb
add
lods
push
js
ret
xchg
movsl
sub
inc
sub
lcall
mov
rorb
and
ds
iret
test
add
add
or
inc
push
cmp
or
xchg
mov
pushf
lods
adc
dec
sub
push
fistpll
push
vphadduwd
inc
lock
stos
dec
aaa
sbb
or
xor
dec
mov
rclb
shll
xchg
cs
push
push
sub
rdpmc
decl
decl
add
xchg
xchg
push
cmp
sub
into
inc
scas
ds
add
pop
movsl
mov
sahf
imull
ret
and
shrb
dec
call
orl
call
mov
gs
mov
sbb
repz
xor
ss
ret
fsubrs
das
jle
push
cmc
icebp
mov
rorb
push
pop
add
adcb
imul
push
je
xchg
jne
cld
cmp
add
xor
pop
sub
mov
daa
outsl
inc
ficompl
mov
in
sbb
je
xchg
popa
imulb
orb
cmc
mov
in
or
arpl
mov
lods
rcl
pop
iret
clts
in
arpl
rcr
push
std
sub
pop
lods
movsb
add
pop
out
in
fiaddl
adc
jp
xlat
mov
aad
dec
xchg
lods
pushf
sbb
mov
popf
jnp
test
movsl
dec
xorl
xchg
cmp
into
unpcklps
and
cs
push
jl
cld
cmp
test
mov
mov
test
lock
sbb
movsb
fwait
popa
sbb
mov
or
pop
cwtl
out
xchg
fstps
sub
push
jl
mov
outsb
jno
mov
aaa
xchg
sub
scas
jb
dec
loopne
cmpsb
sbb
cs
pop
ret
add
mov
jbe
decl
mov
pop
lahf
ja
jle
sub
ss
movsl
int3
fwait
ret
mov
pop
shl
fcompl
ficompl
sbb
mov
test
sahf
xor
sarl
mov
unpckhps
mov
cmc
cmc
cmc
mov
jecxz
std
lods
xor
ja
or
or
pop
add
adcl
ret
mov
push
push
in
dec
inc
pop
push
xchg
adc
or
popf
push
push
and
add
fisttpl
mov
cmp
pushf
scas
xor
out
mov
outsb
daa
xchg
jmp
das
mov
mov
in
jnp
bound
sbb
adc
mov
movsl
jg
push
loop
push
pop
jns
or
push
cld
xchg
jg
ljmp
stc
rclb
scas
adcl
push
jl
xchg
pop
jnp
cwtl
leave
cwtl
mov
push
jmp
insl
mov
sub
inc
outsb
arpl
and
mov
add
adc
jno
xchg
sub
or
add
pop
adc
or
push
push
xrelease
jecxz
pop
add
test
mov
mov
mov
mov
cs
fcmovnu
mov
fiadds
mov
hlt
scas
push
jmp
adc
cmpsl
adc
imul
pop
int
push
movsb
sti
push
ficoml
fs
aad
test
xchg
fldenv
or
jnp
int
sub
adc
push
xor
gs
fadd
call
add
or
add
in
aam
add
mov
syscall
jmp
mov
mov
loop
adc
sar
out
xor
ret
cmc
dec
xor
lds
dec
xor
xor
cmpsb
js
rcrl
stos
xchg
push
icebp
rorb
mov
inc
jp
mov
xchg
imul
push
outsl
gs
xchg
enter
adc
mov
mov
sbbb
outsb
movzwl
cs
push
testb
jae
and
dec
pop
mov
xchg
enter
jnp
leave
jnp
in
pop
out
loope
push
or
stos
pop
sbbb
xor
imul
push
in
fisttpll
cmp
and
fwait
xor
loop
clc
add
jbe
test
ss
sbb
adc
loope
jns
outsl
nop
enter
sub
fs
jns
call
cmp
cltd
es
pop
sbb
or
fisubl
ds
lcall
fcmovnu
xor
xor
mov
or
push
xlat
inc
dec
mov
or
clc
pop
adc
and
jl
ret
sbb
mov
inc
adc
sbb
push
cmp
movsb
xchg
add
repz
das
sub
lods
aam
int3
ss
scas
mov
jnp
cmp
xchg
scas
icebp
pushf
in
push
mov
repz
lcall
dec
and
mov
int
in
jne
fidivs
aas
mov
and
repnz
pusha
cmp
mov
jno
add
xor
mov
push
inc
in
out
sub
add
and
dec
push
push
xchg
das
repnz
rcrl
cmp
insl
sub
mov
call
sbb
push
shll
adc
jbe
dec
xchg
imul
xchg
sub
jno
pop
jne
insl
nop
enter
jno
scas
inc
mov
mov
mov
imul
scas
or
pop
mov
xchg
cltd
jbe
xchg
xchg
ret
sub
pop
flds
pop
sub
out
dec
push
in
mov
aaa
pop
inc
icebp
and
insl
mov
cld
mov
stos
out
xor
fbld
sbb
sbb
mov
mov
mov
mov
push
icebp
nop
mov
mov
sar
cld
cmp
and
cwtl
cld
mov
fiaddl
call
gs
das
js
scas
rcrb
adc
mov
xor
js
cmp
mov
data16
out
jmp
xchg
cmp
rolb
sub
cmpsl
lds
cwtl
aam
dec
xchg
xor
xchg
sub
movsl
dec
gs
aaa
aad
jbe
jg
or
lret
push
loop
cmp
jb
add
inc
stos
cmp
xor
ds
dec
xchg
in
cwtl
sbb
push
mov
mov
cmc
and
fadd
add
cmc
aad
jae
cmp
loope
aas
popa
add
jb
rorl
aam
stos
loope
sbb
push
pop
fstps
sub
jge
icebp
in
mov
xor
cli
xchg
add
mov
comiss
lret
add
push
mov
sbb
loop
fsubl
nop
inc
js
cmpsl
push
jl
pop
sbb
push
inc
or
pop
shrl
xchg
imul
lahf
movsb
and
push
fcoml
repnz
sbb
nop
push
out
mov
pop
sahf
fsubrp
or
decl
sbb
push
or
sub
daa
sarl
outsl
sbbb
out
addb
xchg
test
pop
or
in
lock
or
int
and
jo
sbb
sti
rcll
fmulp
imul
jmp
repnz
test
cmp
imul
inc
nop
and
cltd
and
ds
or
test
cmc
stos
iret
push
inc
ret
push
pop
outsl
imul
mov
jo
or
and
pop
mov
xlat
jg
inc
inc
xor
pusha
roll
inc
cmc
push
repnz
iret
in
adc
pop
es
test
fildl
jmp
and
rcr
or
xor
pop
popa
insb
adc
cmp
repz
sub
stc
add
int
aas
sbb
pop
lds
sbb
stos
jne
rcl
pop
jmp
push
shll
cmp
icebp
inc
ljmp
pop
xlat
inc
mov
xlat
in
cmp
sbb
pop
aaa
jmp
test
pop
mov
push
dec
cmp
mov
sbb
adc
xor
mov
fs
mov
movsl
cmp
imul
iret
stos
pop
jmp
jns
sbb
inc
cmp
sti
hlt
dec
out
jecxz
xchg
cmp
cmp
hlt
and
lret
shll
xor
ret
and
mov
or
loope
sbb
shlb
mov
cmp
mov
xchg
add
test
xchg
test
mov
add
jl
push
push
pushf
mov
outsb
js
push
cmpsb
mov
sub
jo
in
int3
sub
xchg
inc
push
cli
testb
inc
fwait
adc
xor
out
jns
pop
aam
pop
xor
adc
rcrl
sbb
mov
inc
and
push
fists
cmp
pushf
xchg
cltd
push
je
call
loopne
mov
ss
std
jb
xchg
stc
fdivs
fwait
jbe
sbb
mov
sbb
dec
xor
arpl
xlat
push
int
fptan
xchg
xchg
je
rorl
pop
push
std
popf
mov
lret
sub
push
rol
mov
and
jae
ret
push
sub
shrb
pop
jge
ja
push
jae
mov
ljmp
ljmp
push
xor
xor
pop
xchg
mov
jmp
cmp
xchg
sbb
hlt
sub
sub
rorl
popa
jge
or
out
mov
push
jno
sbb
cmp
lcall
sub
sbb
lcall
pop
lahf
xchg
sub
adc
in
es
in
les
pop
mov
mov
mov
xchg
xor
lahf
jmp
sahf
sti
xor
mov
fnstsw
adc
push
jae
stc
aas
sbb
sub
dec
pop
enter
xorl
pushl
pop
test
lock
lret
and
out
pushf
je
mov
cmp
ja
cli
lret
cmp
stos
subl
mov
ja
ss
lcall
addr16
and
jnp
and
jge
mov
sub
lods
cmp
adcb
popf
gs
bound
aas
cld
mov
xchg
pop
pop
out
xor
icebp
pusha
inc
xchg
adc
mov
xchg
jo
jl
sub
pop
sub
jbe
lock
sub
sbb
aam
insb
xlat
inc
lret
push
cmp
mov
in
xor
gs
mov
sub
fsubr
in
sub
mov
and
enter
cld
rcrl
dec
ljmp
xchg
es
and
adc
sub
inc
stc
mov
pusha
sub
imul
loopne
icebp
jne
xor
or
dec
mov
aad
pop
mov
push
int
insl
adc
mov
sub
ret
fs
sub
cld
lahf
mov
in
xchg
and
div
movsl
je
call
push
push
loop
mov
xor
mov
add
adc
dec
dec
in
inc
mov
jo
mov
dec
xor
sbb
lcall
clc
mov
ret
lret
inc
cmp
inc
push
push
loop
xchg
mov
addr16
and
mov
mov
aad
out
push
je
xor
adc
jle
outsl
mov
mov
sub
jmp
ret
test
das
jg
pop
jg
push
ret
mov
jno
std
jne
sub
cwtl
jnp
std
jl
jmp
ss
data16
fwait
adc
into
movsb
sti
clc
jne
in
ljmp
sti
lcall
mov
push
mov
mov
or
call
jne
fimull
pop
aaa
push
jbe
mov
les
ss
add
fwait
xchg
fnstenv
call
test
hlt
cmp
sti
xchg
jbe
pop
add
sbb
adc
mov
mov
mov
adc
mov
mov
movsl
mov
cmpsl
add
xor
hlt
arpl
push
ss
mov
mov
loop
pop
in
cli
int3
mov
mov
neg
fisubrs
fs
inc
jne
push
insb
hlt
and
cmpsl
iret
int
cmp
pushl
js
scas
decl
adc
pop
movsb
mov
jne
imul
fnsave
sbb
out
mov
add
fsubrl
repnz
shl
nop
repnz
incl
push
add
mov
repz
loop
mov
andl
rdpmc
loopne
mov
dec
sub
pop
inc
add
push
jmp
aaa
push
inc
mov
mov
mov
jo
vmread
cmp
adc
stos
sub
xor
pushf
push
jo
mov
adc
rorl
xor
dec
mov
mov
jnp
outsb
popf
xchg
adc
lahf
xor
dec
js
movsl
andps
pop
rcll
add
les
jge
sti
and
pushf
shrb
ficoml
les
aas
sbb
pop
push
andl
out
test
xchg
clc
jbe
filds
mov
push
cwtl
sbb
or
fwait
fwait
pusha
shll
jge
insb
lret
out
mov
and
mov
sub
pop
dec
jb
ret
cmp
jae
bound
cld
jl
sahf
sbb
xor
pop
out
sbb
pop
push
push
mov
mov
mov
xchg
pop
push
pop
mov
data16
or
fs
xor
xchg
sti
push
mov
cmpsl
xor
xor
push
ds
xchg
xchg
sbb
lods
es
jl
mov
orl
sub
or
ret
mov
mov
jb
sbb
mov
cmp
pop
xchg
rorb
mov
call
sub
cmp
adc
loope
lret
jne
cli
ss
add
je
jbe
repnz
push
mov
dec
enter
es
arpl
pop
add
rorl
aaa
dec
arpl
push
dec
lds
loopne
out
iret
jae
pop
jae
mov
adc
and
mov
mov
dec
jmp
pop
xchg
cwtl
xchg
xor
fbstp
into
xchg
add
orl
xchg
cli
call
push
loopne
in
or
pop
out
mov
stc
lods
call
cmpsb
ljmp
mov
jle
xchg
int3
popf
daa
push
lock
leave
in
xchg
xlat
jbe
mov
andl
lea
mul
daa
sbb
sub
jp
jmp
dec
fs
pop
xor
dec
lea
orl
cs
rcl
xor
dec
sbb
pop
cs
testl
mov
outsb
jle
jl
mov
push
dec
into
stos
lods
hlt
xchg
and
testb
cmpsl
xor
mov
test
pusha
arpl
pop
js
cwtl
cltd
fstps
dec
arpl
ss
sub
xchg
add
mov
adc
jl
data16
les
sahf
xchg
out
and
xchg
sub
push
cmc
mov
dec
nop
sub
xchg
ljmp
lods
je
sbb
or
mov
push
sub
and
ljmp
shll
xchg
cli
add
dec
mov
xor
jbe
inc
imul
add
lods
cmp
in
sbb
xor
scas
clc
add
pop
stos
cmp
jp
movsb
lret
out
xor
aam
pop
mov
clc
jnp
aam
pop
add
xchg
push
icebp
in
repz
in
leave
call
ret
mov
movq
popf
lret
mov
cmp
inc
xchg
dec
aad
xchg
fdivl
push
cmp
lahf
or
mov
and
xor
bound
orl
insl
add
lods
mov
xor
popl
or
aam
mov
lret
cmp
inc
xchg
shlb
xchg
add
or
imul
jmp
fcom
sub
sbb
jnp
test
sub
dec
cltd
jbe
inc
movsb
jg
mov
roll
pop
pop
or
imul
hlt
daa
add
mov
inc
jmp
cmp
and
mov
pusha
pop
lds
jle
push
or
mov
arpl
push
jl
push
rolb
in
in
aad
stos
mov
add
cltd
jmp
sub
add
xlat
jge
add
negl
adc
xor
mov
xor
mov
int
dec
sbb
stos
mov
sbb
mov
icebp
pop
xchg
orb
call
inc
xor
movsl
lds
js
push
xor
andl
push
mov
jns
testl
lods
rcr
inc
clc
cmp
cmp
gs
into
cwtl
loope
jmp
fnstenv
cli
lds
iret
in
arpl
stc
daa
shl
mov
jle
pop
inc
sti
jl
mov
cmp
mov
es
xchg
dec
stos
les
add
or
mov
fisubrs
push
pop
jne
test
mov
mov
js
jb
imul
and
jle
les
xor
fnstcw
mov
in
jl
cmp
inc
mov
cmp
mov
lret
out
push
sub
movsb
xchg
cs
js
mov
xchg
cmp
loopne
cmp
push
mov
mov
inc
pop
mov
in
sub
push
jae
popa
ja
inc
enter
pushf
inc
popf
xor
sbb
inc
xchg
into
lcall
push
mov
sti
je
ret
or
shl
add
pop
sub
ficoms
or
and
in
sbbb
and
push
mov
fistpll
and
adcl
push
test
push
mull
mov
mov
or
mov
mov
adc
jns
inc
and
es
int3
dec
mov
popf
stos
sbb
sub
imul
fdivs
leave
loopne
scas
iret
out
out
lahf
mov
cmpsb
and
jb
dec
mov
inc
jmp
mov
pop
loopne
lahf
rcll
pop
dec
sub
movb
shl
inc
pop
sbbb
popa
lahf
repz
je
ja
test
aas
subl
fisubrs
pop
cld
pop
adc
mov
jmp
sbb
popa
mov
rorl
inc
and
mov
lret
mov
notb
mov
mov
ret
hlt
add
test
sbbl
testl
or
mov
mov
fwait
pop
nop
insl
aad
cmp
pop
ja
add
pop
enter
loopne
adc
push
neg
loope
sahf
neg
jl
test
mov
jp
push
mov
jmp
and
in
sub
arpl
ret
pop
xchg
or
sbb
inc
rcll
adc
insb
jno
mov
aam
data16
jae
add
aad
gs
bound
mov
inc
dec
shr
jp
clc
jl
out
inc
insl
add
daa
or
shll
jnp
xor
xchg
add
inc
xchg
stc
mov
pushl
je
out
loopne
jg
jb
sbb
das
jnp
rolb
sub
cmp
jge
out
sahf
inc
inc
stc
out
mov
dec
lcall
call
xchg
ds
dec
fistl
in
xchg
fisubs
xchg
adc
pop
lods
and
addb
nop
cmp
pushf
jno
lret
popa
jns
cmp
cli
xor
mov
xor
adc
mov
and
mov
stc
xor
and
push
xor
mov
cmp
shlb
andb
in
lods
sub
aas
into
int3
xor
push
scas
add
xor
loop
in
hlt
aad
clc
adc
aad
aam
mov
cmpsl
push
enter
adc
lods
and
and
sbb
int
stos
xor
movsl
cli
mov
lods
outsl
insl
jnp
add
pop
add
es
testl
in
xchg
jp
pop
xor
popf
ror
cmp
xchg
sbb
xor
cli
out
cwtl
mov
adc
adc
push
jne
ficoms
es
orl
pop
es
pushf
nop
inc
xlat
or
sub
xchg
push
push
cmp
cmpb
outsb
mov
sub
hlt
dec
cmp
push
mov
push
inc
sarl
and
std
pop
add
pop
mov
pop
jp
idivl
pop
mov
mov
idivb
push
sub
xor
inc
loop
cmp
mov
adc
cmpb
test
inc
fadds
or
lahf
xor
fmuls
push
ljmp
sbb
ss
sbb
or
adc
lea
and
and
cwtl
fsubl
sub
sub
sbb
jg
inc
std
dec
xchg
mov
mov
sahf
push
aaa
lret
adc
stos
jb
mov
rorb
push
in
adc
xor
jno
or
lods
in
mov
jb
pop
inc
or
mov
lods
mov
xchg
xor
test
sbb
xchg
adc
imul
adc
ds
xor
fmuls
inc
jbe
cmp
xchg
cli
cmc
sbb
lds
pusha
xorl
add
scas
pop
loopne
fwait
cmp
mov
adc
in
movsl
mov
fs
test
out
jno
mov
rcr
mov
xchg
add
out
rolb
fistpl
xchg
repz
sub
and
sahf
test
in
stc
xchg
movsl
lea
imul
mov
mov
mov
inc
xchg
cmp
lock
cmc
cmpsl
xchg
jecxz
sub
adcl
and
adc
loop
imul
mov
pop
fsubl
adc
fisubs
jne
pusha
arpl
pop
add
testl
add
dec
xchg
mov
repz
scas
js
jns
xchg
dec
dec
mov
insl
cmp
shr
xchg
stos
pop
pop
mov
xor
jns
es
bound
sbb
sbb
jnp
add
loope
cmpb
ret
sub
ret
scas
cmpsb
mov
js
xchg
xchg
addb
aaa
cmp
pop
fildll
dec
xchg
xor
fndisi(8087
inc
adc
xor
stc
movsb
lods
mov
mov
push
inc
cltd
shll
push
das
pop
pop
push
and
movzwl
mov
push
push
and
mov
pop
dec
jecxz
test
fldl
cmpsb
push
jb
and
push
mov
or
out
cwtl
adc
fbld
arpl
mov
nop
iret
and
pop
lds
inc
outsl
mov
punpckhdq
jo
mov
dec
adc
pop
clc
cmp
push
in
push
jnp
mov
stc
ss
incb
out
lds
cmc
in
adc
xchg
iret
arpl
inc
pop
std
jp
xor
mov
push
ss
cmp
adcb
cs
push
leave
xor
and
mov
in
jb
sub
push
cmp
jb
loope,pn
test
xor
dec
xchg
out
inc
cs
pop
or
mov
push
dec
inc
jle
pop
loop
mov
mov
push
or
call
adc
mov
xchg
movsl
cmp
ret
insl
lahf
mov
test
mov
repnz
push
je
ja
idiv
pop
decb
push
lahf
out
jno
fisubs
inc
xchg
xchg
stos
pop
scas
xchg
push
mov
dec
xor
mov
ljmp
aad
int3
push
adc
or
out
pop
pop
comiss
dec
pusha
repz
ret
ret
mov
xor
push
pop
pop
cmc
push
adc
mov
mov
cmpsb
leave
sbb
cli
push
imul
inc
add
movsb
pop
and
adc
insl
fnstsw
or
add
sub
sbb
jp
inc
test
fidivrs
pop
or
fmul
or
leave
or
adc
in
loop
fldenv
daa
mov
adc
adc
mov
andb
jae
fisttpll
movsbl
jbe
push
xchg
cmp
pop
add
imull
int
sbb
sarb
jg
repz
fs
xor
pushf
xor
enter
sub
sub
pcmpeqb
jge
jle
pusha
cld
adc
mov
ja
mov
ds
push
mov
cmp
mov
cs
ret
es
pop
imul
rep
pop
xchg
pusha
repnz
out
fnstsw
or
mov
push
test
fdivrl
pop
cmp
hlt
xor
out
dec
outsb
push
push
dec
arpl
ficoms
mov
into
sub
mov
enter
fs
add
mov
mov
add
sbb
pushf
fmull
das
gs
cmp
enter
jmp
adc
jbe
lds
cmp
fnsave
insb
sbb
fwait
xor
mov
rdpmc
mov
cmpb
pop
push
fisttpl
bound
and
mov
jo
sub
movsl
out
xorl
xor
or
inc
pop
loope
mov
sub
addr16
pop
shr
adc
daa
add
xchg
dec
lcall
pop
adc
mov
push
pushf
das
ret
xchg
push
jnp
cmp
icebp
push
fnstsw
mov
pop
pop
jle
and
sbb
push
cltd
dec
das
stos
cmp
pop
rorl
push
das
pop
loop
push
cs
outsl
popf
dec
jp
sbb
pushw
jns
pushf
or
pop
cvtpi2ps
scas
dec
inc
add
arpl
fwait
mov
xchg
jae
xor
pop
push
mov
or
ret
movsb
ret
dec
pushf
mov
jne
les
dec
dec
fs
or
pop
jb
shrl
sub
cmp
test
sar
popa
jp
adc
test
dec
xor
cmp
xchg
mov
es
popa
and
loopne
adc
mov
imulb
idivb
dec
addr16
dec
or
push
jnp
pushf
xorb
ret
cmp
and
cmpl
xchg
dec
punpcklwd
pop
lcall
jne
and
ljmp
stos
or
movsl
fcoms
or
push
ljmp
push
pop
and
dec
lea
push
data16
xorl
pop
mov
sbb
jno
shll
jp
lahf
xchg
sahf
mov
in
ficomps
mov
pop
mov
push
pop
sub
int3
mov
mov
into
stos
pop
fidivrl
int3
sbb
adc
xor
mov
fs
pop
push
pop
push
imul
or
dec
push
dec
mov
pop
insl
mov
icebp
xor
dec
insl
sahf
lahf
mov
in
push
sub
jae
push
or
fbstp
ss
push
xorl
lret
iret
roll
and
xchg
sbb
aad
test
stc
fs
mov
dec
outsb
aad
pushf
add
jb
popa
std
les
or
test
jb
icebp
leave
imul
push
mov
das
sub
fst
loopne
enter
int
sbb
sbb
sti
mov
ss
sbb
mov
xchg
popa
inc
mov
aas
loope
mov
jno
cltd
adc
mov
call
jb
repnz
or
dec
aad
cwtl
in
mov
add
mov
outsl
xchg
sbb
sub
mov
cwtl
popa
std
mov
dec
pop
loop
jl
outsl
mov
mov
repz
fwait
leave
pop
adc
pop
mov
inc
add
dec
pop
sub
repnz
repz
cwtl
pop
adc
fldenv
in
mov
loopne
mov
sub
fisttps
and
loop
xchg
and
repnz
stc
adc
sub
cltd
xchg
xchg
inc
gs
dec
adc
test
lock
movsl
and
sbb
inc
out
add
addr16
aad
inc
outsb
inc
xchg
lret
insb
sbb
mov
repnz
adc
sar
je
mov
adc
icebp
jecxz
push
pop
xchg
sub
xchg
sub
lods
pop
xchg
dec
adc
sbbl
inc
and
imul
pop
mov
or
mov
sub
das
repnz
imul
inc
jbe
inc
pop
loopne
into
rclb
test
pop
dec
sub
sti
pop
packuswb
jge
push
hlt
sbb
stos
stc
sub
test
cmp
std
sub
adc
or
mov
adc
sub
jno
sbb
pusha
shll
out
imul
mov
xchg
in
sub
or
ja
cmpsl
xor
les
dec
shlb
pop
aam
pop
fiadds
sbb
mov
mov
clc
loope
mov
mov
mov
shlb
stos
inc
or
repz
push
data16
sarl
push
jge
repnz
mov
mov
mov
lods
jnp
adc
jge
sub
sub
mov
enter
sub
mov
hlt
xchg
push
mov
cmp
pop
idivb
adc
clc
or
or
loope
or
icebp
repz
xorb
lret
cltd
test
mov
lahf
cltd
mov
and
pop
sbb
push
add
rcrb
lds
sbb
add
das
mov
mov
sbb
jnp
pop
movsb
adc
mov
jae
lea
aas
cmc
scas
xchg
jge
cmp
pop
aaa
mov
sub
rorl
fsub
mov
sti
lcall
sbb
adc
push
repnz
sbbl
insl
mov
fimull
pop
sub
xor
pop
test
xor
out
inc
and
test
mov
aaa
or
xchg
pop
data16
cs
and
incb
inc
sub
ja
nop
repnz
pop
stos
push
push
addr16
movsb
xchg
ds
aad
sbb
fcomps
rcrb
mov
xor
mov
enter
fprem
nop
pop
add
int3
inc
cmpsl
out
leave
js
dec
mov
sti
fs
ss
repz
pusha
data16
sti
mov
repz
fcomps
add
pop
mov
outsb
ret
out
shll
cmp
sub
xorl
out
mov
mov
dec
mov
in
arpl
sbb
jle
jecxz
jae
adc
int
loop
test
test
jg
push
push
inc
fwait
in
jno
xor
sub
scas
movsb
dec
mov
cmpsl
insl
rolw
sbb
and
into
hlt
jns
orb
jp
adc
adc
ficoms
pop
mov
fdivrs
xor
lret
leave
xor
jbe
mov
push
scas
jae
push
pop
xor
enter
inc
add
adc
add
mov
sbb
xorb
std
sbb
scas
aad
fidivl
jbe
aad
ret
das
in
inc
clc
nop
add
test
fidivl
inc
sarb
call
loope
and
repz
leave
push
inc
mov
xchg
jp
mov
shlb
mov
and
or
hlt
push
push
dec
mov
stc
aam
sub
aaa
test
mov
aaa
sub
mov
mov
jg
xchg
test
mov
hlt
iret
push
xor
scas
lcall
mov
jecxz
cmp
xchg
mov
mov
repz
sbb
push
cli
xor
dec
daa
pusha
stos
inc
lods
lock
mov
and
movsl
and
mov
fldcw
and
icebp
cmp
and
dec
mov
mov
mov
mov
jae
loope,pt
xchg
pop
in
incb
add
sar
fstps
arpl
dec
loope
test
sub
cmc
jle
data16
adc
or
sarb
addb
xchg
add
inc
ficoms
cmp
mov
mov
mov
lock
jp
sbb
movsb
add
ljmp
xchg
sbb
cmp
xchg
in
cwtl
sub
jns
in
std
pop
leave
enter
or
fsubrl
int
and
ret
jne
xor
out
mov
mov
pop
sub
daa
ret
and
lds
cwtl
mov
cli
and
mov
xor
cmpb
ss
and
in
lahf
mov
jae
es
adc
or
pop
into
and
nop
pop
stos
xor
iret
adc
and
xchg
or
mov
or
fdivs
iret
inc
pop
aas
sbb
addb
repz
cmpsl
sbb
loopne
movsb
leave
mov
add
outsb
mov
hlt
mov
imul
jle
and
scas
repz
stos
xor
add
sarl
repz
lahf
fnstsw
inc
dec
sub
dec
in
lret
arpl
outsb
shll
mov
pop
jbe
cmp
mov
jmp
or
sbb
lcall
xchg
sub
frstor
imul
mov
and
dec
vaddpd
push
mov
add
mov
add
lds
jae
mov
and
cmp
mov
subl
lcall
jle
loope
fldenv
push
loopne
mov
rcll
push
out
sub
mov
pop
imul
das
pusha
cmp
xor
stc
jge
pop
int
pop
loopne
mov
in
call
xor
mov
mov
inc
leave
push
mov
jo
push
sbb
xor
cmpsl
pop
rol
pop
sub
icebp
subl
add
test
sub
xchg
sub
out
mov
pop
incb
sbb
aad
push
xor
sub
stos
or
pop
test
imul
xchg
repnz
cmp
add
pusha
cmpsl
xor
cmp
shll
test
aaa
adc
pushw
push
xor
xor
pop
loopne
sub
shlb
and
imul
out
xchg
int
mov
push
dec
scas
dec
pop
cmp
xor
sbb
fisttpll
inc
gs
mov
gs
cmpl
push
or
lret
xor
mov
outsl
test
repnz
popf
fildll
pcmpeqw
fwait
in
sub
push
and
jl
testl
jp
ja
mov
addr16
sahf
or
ja
sbb
test
pop
jb
sbb
in
and
push
sub
sbb
lcall
je
push
inc
repz
call
jnp
mov
jb
dec
dec
jns
cmp
inc
test
test
int3
push
mov
pop
xor
scas
cld
mov
mov
push
cs
jmp
pushf
fnstenv
test
and
cmp
faddl
cmp
dec
push
mov
insl
dec
push
sub
out
jnp
sbb
cld
cmp
mov
int
scas
or
outsb
or
jne
push
add
xchg
push
adc
push
ret
test
mov
mov
faddl
push
xchg
pop
mov
sti
dec
and
mov
xchg
mov
xor
sbb
inc
mov
jbe
sbb
dec
xor
test
outsl
or
xorb
or
mov
loope
daa
in
mov
jp
ljmp
jae
test
test
lock
push
sub
clc
sbb
in
fiadds
pop
icebp
loope
pop
push
gs
jnp
test
mov
xor
lods
fists
std
repnz
std
push
cmp
jp
mov
cmp
punpcklwd
inc
mov
add
out
cwtl
aad
test
cmp
xchg
ficompl
cmc
lret
and
cmp
xorl
mov
outsl
repnz
fildll
pusha
leave
push
sub
push
add
std
push
mov
repnz
icebp
pop
lahf
aam
push
xchg
test
lahf
test
push
icebp
leave
lods
sub
add
clc
add
cmpsl
in
mov
mov
mov
add
mov
out
add
dec
push
lock
nopl
xor
inc
xchg
sub
xchg
inc
jo
arpl
jge
jmp
insl
adc
jb
cs
xor
pop
in
loope
and
fldenv
xlat
fcoml
mov
stos
fbld
push
into
inc
adc
cmpsb
movsl
push
push
pop
cwtl
fdiv
test
cli
xchg
and
das
test
jmp
test
add
int3
out
and
test
jns
hlt
bnd
into
gs
adc
fcoml
cmp
rol
xor
add
mov
stos
in
lea
adc
in
xor
pop
pop
jae
dec
push
jns
sbb
aad
mov
cmpsl
repz
adc
js
rcll
adc
mov
push
aas
push
mov
enter
cmp
lcall
subl
andb
enter
dec
pop
sub
cld
inc
enter
xor
sbb
sbb
scas
fists
and
add
mov
sbb
test
nop
xor
add
lods
addb
add
mov
cli
lods
jnp
pop
andl
jbe
mov
gs
mov
cmpsl
push
sbb
stos
pop
lret
sbb
movsb
mov
cmpsb
mulb
sub
imul
out
cmpsb
add
sub
sbb
xchg
mov
icebp
fistps
flds
lds
cmp
mov
add
inc
scas
cmp
rcl
push
arpl
stos
adc
lods
or
mov
lods
out
push
adc
or
cmp
loopne
enter
dec
arpl
insl
xor
jo
jl
not
add
cmp
ja
decl
cmp
mov
xchg
outsl
dec
mov
jbe
mov
and
stc
rorb
adc
cmp
jb
sub
jl
fldt
jno
ljmp
outsb
test
in
add
pop
test
mov
fsubs
xchg
clc
jae
push
or
xchg
out
xchg
pcmpgtd
dec
dec
pop
mov
fnstcw
ljmp
scas
xchg
arpl
jns
push
push
loope
inc
mov
je
xchg
cmpl
or
pusha
lods
pop
fsubr
mov
and
jecxz
lds
insl
nop
loop
pushf
push
fdivrl
fiadds
mov
or
sub
aad
xlat
cmp
shlb
arpl
pop
imull
aaa
out
mov
jmp
ljmp
fnstsw
ror
lahf
cmp
pop
in
xchg
lods
cmp
int3
mov
arpl
xor
imul
insb
push
dec
jno
pop
add
arpl
out
adc
add
testb
into
lock
movsb
movsl
push
jnp
repz
xchg
or
push
out
dec
fbstp
jns
push
xchg
or
inc
in
mov
test
pop
sub
mov
icebp
inc
mov
mov
lods
dec
faddl
add
xor
push
into
mov
aaa
jns
jo
sub
pusha
ret
push
push
hlt
fcomip
mov
mov
or
mov
jle
mov
into
fisubs
lret
sbb
into
mov
jmp
xor
push
gs
mov
jmp
aad
mov
add
clc
pop
jle
sbb
mov
mov
jbe
mov
in
adc
pop
into
push
xor
mov
mov
hlt
jnp
or
fs
lahf
sub
pop
adc
sub
mov
je
scas
add
faddl
and
dec
cltd
mov
xchg
out
jne
test
inc
or
or
mov
jmp
jl
ja
inc
out
stc
imul
into
scas
lods
inc
push
lcall
inc
xchg
das
testb
pop
movsl
lds
aas
lds
lea
and
xchg
push
out
ljmp
arpl
ret
fwait
sti
jnp
adc
xor
mov
jns
jmp
fs
out
divb
inc
and
les
and
js
pop
adc
pop
repz
and
fistps
jp
jo
jmp
cmp
push
cmp
sub
repz
stos
and
and
pop
inc
jge
jg
ret
mov
add
lahf
sti
dec
sbb
shlb
or
mov
push
insl
mov
fbld
push
fcmovu
xchg
or
add
mov
sbbl
sub
negb
xor
sti
ja
fwait
rcr
xchg
mov
xchg
xchg
or
les
outsl
call
xor
test
xchg
dec
or
not
bound
repnz
dec
dec
mov
ds
orl
inc
cltd
mov
sbbl
lods
sbb
cmpb
pushw
push
pop
fwait
xor
pushf
mov
icebp
imul
sub
ficoms
bound
loop
adc
int
sub
cmp
push
mov
int3
imul
jge
sbb
mov
add
mov
mov
pop
or
mov
mov
or
add
or
pop
add
adc
push
sub
outsb
ljmp
pop
push
test
daa
pop
dec
test
jbe
jl
jnp
shl
int3
push
orl
adc
mov
ffree
cmp
orl
cli
subb
dec
fwait
pushf
repnz
fdivl
push
fwait
mov
and
push
xchg
lods
mov
lea
xchg
lea
shr
rolb
sbb
in
ficoml
cmp
ret
inc
lds
mov
add
gs
inc
loop
jecxz
repz
pop
nop
fadd
popa
adc
insl
jae
lret
bound
pusha
fsubrs
leave
pop
std
pop
add
insl
testb
mov
pop
shll
inc
xor
push
notl
mov
inc
xor
xchg
jbe
stc
pusha
aas
mov
mov
call
or
inc
sub
out
xchg
hlt
das
push
xor
lret
int3
push
push
sub
sti
pop
mov
pop
test
stos
inc
ret
push
xlat
mov
cmp
lret
mov
dec
fiadds
test
xor
sub
jno
push
dec
jb
mov
call
lret
test
push
inc
xchg
and
cmpsl
nop
fistpl
scas
cmp
bound
repnz
lods
notl
inc
ss
int
and
pop
mov
sub
xchg
loope
fistpll
es
cmp
push
mov
push
cmpsl
add
call
repz
insl
xor
scas
icebp
pop
push
rorb
insb
push
pop
imul
cmp
movsb
fs
nop
jmp
mov
and
jmp
pop
mov
data16
bound
rorb
out
insb
lods
mov
lcall
adc
stos
loope
xorb
pop
testb
adc
cmp
lret
ret
inc
stos
push
or
add
shll
mov
cmp
push
dec
out
dec
xor
out
adc
loope
js
xchg
test
mov
stc
sub
scas
mov
mov
fdivrl
decl
mov
call
pop
cltd
scas
jo
jnp
sub
inc
ror
or
dec
leave
scas
sub
pop
pop
jge
xlat
imulb
ret
mov
mov
arpl
rolb
or
lret
loopne
jp
scas
add
jmp
inc
inc
mov
mov
mov
ffreep
testl
push
gs
clc
scas
stos
scas
push
xor
test
outsl
sti
sbb
mov
pop
jno
imul
lahf
jg
mov
cmpsl
loope
cmp
mull
scas
inc
push
sub
pop
mov
xor
mov
cmc
mov
and
aam
dec
push
sti
push
shl
mov
add
repz
push
sbb
int3
adc
jp
int3
push
xor
mov
inc
xor
pop
cmc
and
xchg
imul
jno
adc
shlb
adc
les
out
bound
sbb
loop
adc
pop
mov
test
add
insb
fsubrs
jg
scas
pop
mov
add
jp
in
push
adc
mov
cmp
mov
cmp
popa
subb
add
xchg
fistps
in
cli
cld
push
jle
inc
adc
fs
push
shrb
cmp
add
in
sub
dec
scas
adc
sysenter
xchg
jns
mov
test
inc
mov
incl
push
testl
loope
mov
imul
dec
mov
inc
pushf
mov
pop
cwtl
in
icebp
lods
xchg
xchg
sbb
cmp
rcl
jo
and
fmull
movsb
push
dec
push
cmpsl
lock
ds
xchg
loope
inc
test
mov
js
stos
cs
ds
jo
cld
and
mov
adc
aas
mov
mov
icebp
loopne
xchg
jmp
dec
dec
jge
addb
aas
ja
aam
and
adc
sbb
push
and
test
mov
mov
mov
or
sub
fisubrl
insb
imull
loopne
or
mov
jno
aam
xor
and
adcb
imul
dec
rorl
xlat
inc
fwait
jnp
mov
pop
adc
push
aaa
cmp
je
dec
xchg
dec
jnp
mov
mov
pusha
lock
xchg
jmp
pop
movsb
cmp
jae
std
xchg
filds
into
ss
push
add
pop
in
jnp
cltd
pop
lock
pop
int
jbe
ret
adc
jmp
push
jbe
ret
xchg
in
iret
add
es
stos
cmp
iret
push
adc
lds
loopne
and
jmp
mov
ja
dec
out
lods
inc
mov
jae
fisttps
lcall
add
push
cmc
sub
mov
xor
mov
and
lock
icebp
inc
add
add
icebp
pop
lret
mov
pop
add
or
jg
xchg
lock
pop
aaa
lahf
ficoms
mov
mov
jge
inc
sbb
cmp
jno
movsb
test
push
adc
int
mov
add
jg
fninit
mov
mov
jns
js
shr
cwtl
adc
cmp
fwait
push
imul
cwtl
and
scas
pop
fbstp
lds
inc
aam
dec
sub
lods
rcrb
mov
add
mov
pop
adc
mov
enter
or
xchg
inc
stos
divl
pushf
ss
xor
jmp
fcomps
or
loope
push
xchg
jle
js
jns
or
inc
jno
add
mov
loope
mov
inc
js
jno
mov
and
aaa
sub
loope
dec
ds
mov
sub
sbb
in
ds
xor
idiv
jle
pop
ror
cmp
xchg
jl
sbb
insl
lock
jno
adc
hlt
inc
mov
popf
sbb
dec
rorb
jae
outsb
jno
in
or
sbb
pop
in
mov
rcrl
int3
mov
sbb
sbb
inc
mov
xor
mov
lock
ljmp
test
aaa
into
pop
sub
inc
mov
add
pop
mov
sub
cmp
das
pcmpeqw
in
aad
roll
jle
dec
push
xor
aas
fdivs
sbb
mov
mov
push
push
imul
xchg
inc
out
cltd
add
sub
sbb
lret
push
fwait
lods
xor
inc
mov
pop
xchg
sbb
sbb
fwait
pop
ds
or
shll
adc
pop
test
mov
mov
cmp
pop
ret
mov
pop
jmp
pop
pusha
sub
adc
test
loope
in
cld
pushf
rol
xor
rcrl
scas
mov
call
out
mov
push
jmp
lret
adc
bound
inc
testl
int3
mov
add
mov
cli
sti
adc
mov
jne
cmpsl
stos
lahf
mov
test
and
sub
lret
sahf
enter
pop
push
sbb
xchg
out
xchg
orb
ret
inc
xchg
or
in
pop
jae
ret
pop
sub
jno
mov
test
pushf
repz
insl
ret
ds
rcrl
in
push
in
fnstenv
popa
outsb
jg
sti
lds
jb
and
lock
cmp
cmc
ss
sub
push
fs
scas
adc
cmpsb
sbb
push
fisubl
adc
scas
test
mov
mov
dec
cmp
push
dec
sbb
lods
and
mov
xchg
insl
loope
mov
jp
shll
mov
mov
and
aam
stos
inc
lcall
call
iret
test
inc
mov
clc
clc
cmp
movsb
in
js
or
in
imul
imul
jne
out
inc
out
adc
sub
das
js
fsubr
stos
dec
cmp
arpl
push
lods
push
xchg
testb
lcall
xchg
adc
mov
inc
xchg
mov
jo
xor
push
mov
jmp
jle
mov
sarb
jl
push
in
aad
cmp
sarb
adc
jns
add
cwtl
inc
cmpsb
daa
insl
push
mov
hlt
insb
fildl
mov
std
shlb
pop
cmc
int3
loopne
push
stc
stos
movsb
daa
inc
mov
sahf
loopne
dec
movsl
loope
ror
sarb
in
sbb
push
push
sub
mov
insl
dec
ret
sbb
bound
dec
divb
mov
xchg
sar
cmpsb
pop
imul
pop
dec
sbb
dec
pop
pop
inc
or
leave
push
inc
test
in
push
dec
lods
int
cld
xchg
jl
sub
sbbb
popa
xor
les
divb
test
addl
push
cmovg
mov
fbld
fdivs
push
inc
xchg
inc
stc
pop
mov
insb
out
scas
popf
dec
int3
je
adc
in
add
sbb
aaa
adc
fildll
inc
imul
dec
std
out
rclb
lahf
gs
stos
cs
mov
jle
pop
test
ljmp
fisubl
pop
jns
sub
mov
or
jnp
xor
adc
jge
icebp
pop
dec
stc
ss
mov
lds
repz
movsb
lret
les
xchg
fwait
lcall
dec
insl
add
inc
in
dec
add
test
inc
xor
sbb
rcr
movsb
push
push
test
mov
fcoms
scas
sbb
jns
adc
jp
lcall
movsb
jge
sbb
xchg
hlt
cmp
add
cmp
xchg
rorb
xchg
mov
inc
and
aas
push
pop
dec
sub
sbb
test
jno
push
xchg
insb
fidivl
int
bound
mov
out
mov
jl
fisubrs
pop
xchg
into
add
inc
popa
push
xchg
cmp
jo
and
cmp
cltd
lret
roll
inc
stos
jne
mov
test
out
jno
jno
aaa
fistpl
inc
dec
aam
jo
add
ret
jo
fwait
out
dec
call
and
mov
sbb
je
mov
or
adc
jecxz
scas
sbb
push
xchg
stos
sub
dec
int
jle
test
rorb
and
dec
xchg
mov
je
iret
push
jne
pop
pop
or
xor
mov
dec
daa
popf
lgs
xchg
mov
xchg
imul
in
pop
in
das
cmpsb
mov
jl
dec
vmread
xor
cli
je
jo
mov
push
xchg
mov
push
jmp
cmp
orl
call
cmpb
into
loopne
popa
lahf
dec
fisubrl
add
in
or
scas
ljmp
lea
jmp
pop
cmp
ret
bound
cmpsb
repz
aaa
sti
mov
mov
push
push
dec
mov
and
ljmp
je
jge
je
loop
push
cld
jle
or
xor
ja
push
xlat
loopne
into
movsb
sti
int3
xor
xor
and
mov
mov
push
jge
pop
clc
repz
or
dec
mov
and
xchg
mov
movsl
xor
scas
or
cmp
pop
pusha
shl
jno
pop
push
je
mov
and
in
cld
test
dec
pop
pop
pop
lds
filds
lds
out
cmp
jge
sub
xchg
lret
loopne
cmpsl
stos
push
repz
jae
in
lret
ja
pcmpgtd
or
xor
mov
xlat
push
xor
jbe
xchg
fwait
pop
cwtl
pop
jecxz
sbbb
stc
push
icebp
jb
shl
and
push
cmc
cld
cmp
lret
fwait
iret
sahf
mov
cmpsl
loopne
lock
mov
stc
test
iret
push
xchg
hlt
scas
lret
sub
or
aad
fcoml
sti
in
je
xlat
inc
or
outsl
scas
mov
andl
je
sbb
cmp
lret
sub
fisubrl
xor
jle
mov
frstor
pushf
roll
adc
mov
mov
clc
pop
idiv
lods
movsb
xor
xchg
out
jno
mov
or
jge
mov
xor
lahf
cmp
jbe
add
jo
nop
cmp
roll
pop
mov
fwait
push
jp
mov
mov
xor
mov
daa
rclb
xorb
and
popl
jb
and
rorb
test
out
rcll
mov
add
xchg
insb
jp
push
rol
scas
ljmp
sahf
hlt
into
jns
push
subl
fwait
je
push
mov
lret
adc
into
cmc
xchg
adc
xchg
pop
subl
popf
add
daa
ficoml
adc
push
lock
sahf
sub
out
and
cld
and
hlt
stos
int3
fisubl
std
sub
cld
xor
or
jmp
stc
cwtl
and
inc
xchg
mov
and
addb
cmp
xor
call
or
notb
sti
add
cld
call
pushf
pop
cmp
leave
jg
int
outsl
jecxz
mov
or
and
cmp
xlat
idiv
xor
or
mov
cmp
dec
push
and
mov
sub
dec
leave
xchg
jg
es
fs
xchg
ss
into
movl
lcall
fnstcw
stc
dec
icebp
fwait
inc
adc
rolb
test
jl
pop
push
sub
dec
test
xor
loopne
stos
mov
mov
fstpl
pop
add
outsl
push
jl
dec
fidivrl
pop
pop
inc
jg
xchg
xor
and
sub
xchg
outsl
cld
jmp
pop
pop
cmpsb
mov
pop
test
mov
xor
bound
dec
out
cmp
inc
xchg
and
cli
int
iret
mov
aaa
mov
rcrb
jge
scas
jno
pop
mov
insl
jnp
rorl
inc
mov
push
and
xchg
sub
push
fxch
mov
adc
cmc
das
jne
repz
add
lret
sti
loop
cmp
sub
adc
jg
mov
push
int
xchg
jns
mov
test
or
cmc
push
dec
pop
andb
and
and
pop
loope
enter
sub
mov
mov
notl
daa
arpl
push
in
fldl
pop
scas
mov
push
xor
cltd
inc
ret
pop
call
loopne
scas
push
mov
daa
mov
movsb
pusha
add
aas
stc
sub
pop
dec
jno
push
loopne
jmp
inc
dec
imul
xor
cmpl
and
in
mov
insb
pop
dec
into
mov
cmc
dec
mov
adc
leave
cmc
loopne
std
call
adc
lret
lret
outsb
loope
mov
aam
sub
push
in
imul
cwtl
xor
pop
sub
cmp
leave
sbb
ret
or
lods
and
adc
mov
pop
dec
lods
mov
add
lods
inc
jl
pop
flds
jne
or
insb
or
out
lea
and
shlb
sbb
mov
insl
arpl
push
push
and
pop
sbb
pop
mov
and
xchg
call
mov
and
mov
inc
lret
cs
dec
mov
or
cmp
nop
sbb
jbe
add
xor
cs
lea
push
cmp
dec
cmp
das
fabs
pop
fwait
ds
shl
repz
xchg
enter
ja
imul
jl
sbb
xchg
push
pop
les
push
xchg
or
add
pop
inc
jns
scas
repnz
pop
cmp
push
into
cmpsb
mov
enter
mov
je
push
subb
out
or
cmpsb
add
adc
mov
pop
or
mov
shlb
insl
sub
add
loop
mov
popf
sti
imul
inc
fisubrs
xor
lahf
pop
mov
sarl
cwtl
ret
aas
jmp
fucom
fisubs
mov
test
dec
sbb
fs
or
sbb
mov
daa
xchg
push
ret
mov
pop
cmpsb
mov
xchg
adc
mov
dec
and
mov
lea
stc
adc
sub
dec
jmp
sub
mov
fsqrt
pop
cwtl
or
push
push
push
pop
and
das
mov
out
push
cmp
hlt
xchg
sbb
jae
or
gs
outsl
mov
mov
adc
mov
dec
mov
mov
cld
add
jnp
in
orb
push
loop
call
jecxz
pop
sub
mov
icebp
xor
adc
xchg
inc
jo
test
icebp
mov
inc
insl
adc
mov
into
stos
mov
xchg
xchg
repnz
pop
dec
insb
daa
add
lcall
call
sub
repnz
add
add
mov
pop
mov
inc
sub
movsl
push
loope
shrb
jo
repz
cmp
imul
cld
mov
jmp
fldl
mov
xchg
loopne
gs
movnti
jbe
sbbl
lods
or
push
pop
outsl
push
xor
cltd
xchg
sbb
rep
push
jno
mov
inc
xor
mov
inc
and
sbb
incb
inc
movsb
fwait
das
cmpl
lcall
mov
or
fnstenv
int
pop
ljmp
stos
ja
fidivrs
insl
int3
mov
nop
rcll
int
mov
out
cltd
dec
xor
jb
shll
stos
sbb
inc
in
push
fidivs
and
fdivp
lds
shl
mov
leave
mov
xor
or
inc
in
jo
sub
inc
dec
ficoms
pop
add
mov
push
stos
out
aaa
inc
cwtl
sub
rcr
mov
sahf
push
aam
mov
lret
ret
or
push
pop
pop
outsl
push
cmpsl
dec
or
sbbl
jg
adc
mov
xchg
jne
xor
aad
pop
xchg
bnd
fwait
js
mov
das
xchg
xchg
shl
enter
adc
lret
aam
mov
fstl
lret
aam
out
mov
stos
test
enter
dec
scas
fs
sbb
cmpsb
fimuls
xchg
add
les
pop
cmp
aad
adc
pop
cmp
popf
xchg
add
negb
stos
or
icebp
orb
inc
add
iret
into
nop
mov
insl
jnp
push
mov
stc
pushf
lcall
pop
clc
mov
mov
mov
push
daa
mov
fcmovnb
in
sub
adc
scas
cmpsb
inc
in
fimull
mov
mov
fcompl
in
lret
lods
pop
or
nop
out
inc
jp
ljmp
dec
jbe
xchg
pop
mov
cmp
and
pop
sahf
in
or
jle
movsb
sbb
mov
and
xchg
jmp
xchg
mov
cmp
inc
mov
test
adc
sub
dec
lds
loopne
inc
inc
mov
int
out
mov
loop
mov
inc
mov
in
clc
mov
or
jmp
mov
jmp
push
outsl
cli
xchg
mov
and
movsl
mov
mov
add
out
dec
pop
add
sti
ljmp
mov
jmp
adc
fisubs
xor
pop
adc
nop
in
clc
aaa
cmp
mov
data16
mov
jb
pop
mov
gs
add
mov
xchg
test
pop
lahf
addb
jae
pop
push
xor
adc
ljmp
jl
js
mov
or
and
xor
loopne
cmp
push
fldcw
adc
adc
adc
arpl
adc
rolb
mov
push
adc
sbb
and
dec
in
jnp
mov
dec
gs
fmulp
push
xor
lea
lcall
je
mov
dec
add
outsb
sahf
cwtl
pusha
dec
js
jmp
and
push
cmp
cmp
pop
jg
mov
pop
mov
jg
in
das
add
xchg
aad
movsl
adc
push
jl
div
push
inc
les
jmp
mov
sbbl
and
push
mov
xchg
gs
sbb
sub
mov
mul
fwait
popf
fcmovu
jbe
xlat
in
cmpsb
in
stc
or
test
mov
roll
andb
cmp
cmpb
aas
cmpsb
imul
mov
call
ljmp
add
out
mov
mov
pusha
cmc
loope
je
orl
fisubrs
mov
adc
loope
cltd
mov
inc
dec
mov
ret
xchg
sahf
out
cmp
pop
js
pushf
test
mov
lahf
adc
out
test
call
add
in
addr16
cmpsl
add
push
mov
mov
mov
ja
push
cmp
cmp
jle
outsl
fadd
mov
bound
aad
sub
es
iret
cmc
cld
or
jne
pop
pop
cmpsl
lret
adc
out
out
jae
add
leave
adc
aam
fldl
mov
and
push
loope
mov
pop
pushf
jp
mov
mov
sar
jb
cmp
lcall
fcompl
inc
sarl
mov
mov
mov
imul
mov
inc
fisubrl
sahf
mov
cmc
cmp
stos
add
pop
sub
lret
mov
mov
inc
fidivl
xor
push
dec
repnz
cmpsl
add
shl
mov
lods
mov
sbb
notb
lods
mov
shl
inc
shlb
pop
push
or
sub
loope
push
imul
fwait
or
add
ret
sbb
fxch
clc
cmpsb
les
dec
arpl
jbe
mov
sub
fcoms
adc
cmpsl
lcall
out
pop
pop
movsl
popa
lods
ds
shrl
pop
lahf
ret
pmulhw
sbb
stos
inc
mov
xchg
ss
sub
and
push
mov
cmc
inc
pop
push
jg
repz
xchg
adc
xor
imul
cs
xchg
pop
fimuls
cli
outsl
movsb
mov
inc
sub
adc
xchg
xor
fwait
dec
cmp
test
les
rcpps
mov
cmc
mov
xchg
sti
and
int
frstor
push
ret
fldcw
add
mov
sbb
lods
shrl
bound
mov
popf
pushl
loop
xor
and
mov
dec
call
test
lods
sub
jl
test
arpl
mov
outsl
sahf
dec
into
fisubs
adc
rep
outsl
pop
inc
sarl
inc
mov
js
push
pop
and
roll
insl
push
fs
or
xlat
ss
push
xchg
adc
sub
mov
or
je
lea
addr16
mov
xchg
test
mov
or
pop
pop
adc
outsl
mov
mov
add
test
add
sub
cmp
xchg
gs
mov
ds
jne
lcall
in
add
add
lret
inc
in
push
adc
dec
cs
xor
cmp
push
or
dec
inc
pop
out
dec
lds
shlb
mov
or
push
movsb
jno
mov
pop
aaa
xorb
xor
cli
jnp
ret
fs
outsb
and
fwait
mov
ret
mov
or
mov
push
leave
std
mov
cmp
inc
pop
or
add
pop
jl
sahf
sub
cmp
in
jecxz
test
das
cmp
icebp
push
out
cs
pop
mov
cltd
insb
mov
aas
mov
jne
dec
cmpsl
mov
inc
repz
push
xchg
pop
dec
pop
sahf
inc
xchg
jno
sub
outsl
sub
imul
mov
sub
push
mov
add
fnstcw
cmpsl
sub
xor
sub
adc
pushf
pusha
jnp
push
xchg
inc
pop
lcall
insl
cmp
xchg
fneni(8087
inc
mov
xchg
les
fcompl
mov
push
jo
mov
out
adc
cld
in
or
rolb
mov
cli
rcl
ss
aaa
hlt
stos
pop
sbb
push
jne
sbb
outsb
pop
call
dec
sarl
in
mov
movsb
fsubs
push
push
push
push
lds
cmp
idivl
cmc
push
push
iret
sti
jne
movsb
mov
cmp
insl
pop
fsubr
insl
sbb
cmp
shrl
push
sahf
pop
jo
inc
inc
out
cmp
lea
je
and
pop
cmp
inc
js
adc
cmp
push
lods
xchg
cmpsl
mov
aaa
mov
dec
dec
jge
sub
flds
add
insl
cmpsl
cwtl
imul
mov
lods
cmp
test
loop
lahf
cmpsl
xchg
shlb
pop
pmaxub
sbb
inc
sarl
xchg
add
ds
aad
jg
inc
cmp
js
push
mov
pop
aam
adc
cmp
insb
test
scas
pop
fcoms
xchg
cmpsl
iret
lcall
cmp
fildll
or
insl
adcl
sahf
dec
xor
fwait
sub
aad
imul
jae
sub
nop
push
loope
enter
dec
leave
dec
xchg
push
out
jmp
dec
ss
push
mov
sbb
sub
lods
pop
dec
call
imul
pop
sbbl
iret
es
aad
fidivs
in
sub
add
xchg
dec
lcall
cli
mov
sub
stos
add
inc
movl
mov
and
shlb
cs
jmp
mov
fsubl
pop
sbb
mov
xor
popf
inc
cmp
divl
mov
sbb
pop
stos
ljmp
adc
insl
mov
ljmp
or
mov
dec
aad
jge
jb
fs
aaa
inc
sarl
sbb
xchg
inc
imul
cmp
cmp
xor
cwtl
add
mov
fcoms
mov
leave
dec
inc
inc
enter
jnp
mov
mov
shr
push
test
push
lahf
push
push
imull
adc
les
jmp
jns
fldenv
ficoms
test
mov
pop
xor
push
add
sub
div
rorl
mov
xchg
push
scas
pop
adc
push
cmp
pop
jbe
fdivl
lock
ljmp
and
adc
cli
cmp
shrb
mov
clc
inc
add
test
and
sub
insl
lahf
or
imul
mov
add
insb
sub
scas
jl
je
pop
xlat
sbb
js
jp
stos
or
xor
jbe
mov
xchg
icebp
out
xchg
lds
stos
outsb
xchg
out
push
add
cmp
jns
add
sbb
inc
xchg
into
loope
adc
bound
push
xchg
mov
stos
sbbl
pop
out
jo
lock
ds
scas
flds
push
jp
scas
in
push
pushf
pop
mov
cltd
dec
adc
push
mov
cmp
jno
bound
cli
test
jne
xchg
mov
dec
test
jle
shll
jmp
lret
push
insb
js
dec
out
ror
sub
adcb
negl
outsb
dec
out
jo
popf
lock
adc
inc
push
scas
or
inc
arpl
fcompl
popf
jne
out
push
and
jmp
xchg
out
test
es
push
xchg
je
jmp
push
mov
dec
push
fs
xchg
add
popl
add
test
dec
xor
outsb
fmul
ret
lods
shlb
push
mov
std
ljmp
or
rcll
daa
push
mov
daa
pushf
sarb
inc
mov
cwtl
inc
and
add
and
mov
or
imul
frstor
ja
popa
fsubrp
out
jge
add
inc
je
js
adc
xor
out
lret
mov
test
test
es
popf
data16
cltd
jl
xor
popf
loop
push
ds
out
scas
cmp
mov
pop
mov
scas
jbe
testb
js
cmp
or
mov
nop
in
dec
sti
xor
jle
hlt
mov
imul
repnz
push
outsl
mov
fbld
int
cmp
dec
sub
mov
imul
hlt
addr16
dec
inc
pusha
mov
cli
mov
mov
mov
sbb
dec
lods
cmpsb
xchg
rorl
pop
inc
incl
and
mov
pop
popl
dec
cmp
popa
and
pushf
lock
mov
out
sub
sub
pusha
into
fsubs
stos
mov
cmpsb
adc
sub
push
lret
inc
int3
shlb
pop
dec
push
sahf
pusha
xchg
mov
jb
fstpl
dec
repnz
minps
mov
cltd
cs
into
push
inc
cwtl
dec
xchg
xor
dec
dec
jns
jo
lods
sarl
xor
or
ljmp
adc
push
push
lret
jae
jl
pop
mov
push
js
mov
jmp
stos
sub
insl
insb
int
mov
mov
or
jae
je
inc
imul
and
and
cmp
mov
cmpsb
xchg
stos
dec
pop
cvtps2pd
loope
jbe
movsw
bound
lock
popf
movsb
setae
shl
rolb
mov
ljmp
add
loopne
lods
inc
in
mov
fisubs
jmp
fs
ror
pop
xor
gs
loopne
add
dec
out
movsb
outsl
or
loop
xor
clc
out
mov
fdiv
xchg
xor
lret
dec
frstor
xchg
lods
dec
dec
cli
jge
jmp
mov
mov
scas
aas
dec
xchg
jle
mov
fsubrl
fcomps
mov
pop
cli
dec
and
bound
mov
shlb
pop
inc
sbbl
test
mov
jnp
adc
lea
push
fs
add
mov
dec
mov
fcoml
dec
sti
or
repnz
cs
mov
cs
lretw
call
xor
inc
hlt
loopne
cmp
cwtl
in
movsl
jg
dec
dec
lea
pop
int3
loope
dec
repnz
movsb
xchg
pop
es
addr16
into
adc
pop
fmuls
cli
inc
test
insl
es
imul
imul
es
mov
mov
std
mov
orl
cmpsl
scas
add
push
lret
sub
jo
mov
and
dec
imul
or
cmp
cmp
test
sub
xchg
jle
cmp
or
jp
les
adc
xor
testb
out
cmp
xchg
xor
ret
loopne
and
ljmp
rolb
pop
fidivrl
pop
sbb
cltd
inc
hlt
popa
vmwrite
cld
gs
adc
out
enter
jo
jo
sub
gs
lcall
mov
lret
and
inc
int3
and
addl
xchg
cmc
cmp
xor
aas
or
cmp
mov
lds
or
jb
and
call
push
lea
cmpsl
mov
lods
inc
xchg
int3
mov
scas
jp
jp
sahf
lcall
xlat
jo
or
push
inc
jno
outsl
push
daa
mov
mov
pop
sbb
add
xchg
dec
mov
dec
cmp
outsb
xchg
fdivl
cmp
js
pop
inc
add
mov
mov
mov
ja
sbb
and
loope
sti
jae
jnp
jmp
cld
jb
repz
loopne
fdivl
push
mov
icebp
mov
aaa
or
sub
outsl
xor
mov
push
inc
aaa
outsl
and
sbb
push
fidivrl
push
pop
jecxz
into
ds
inc
xchg
dec
stos
dec
sub
leave
push
mov
rcl
es
ss
movsl
ja
ror
or
sar
mov
test
cmp
lret
in
mov
mov
cmp
imulb
push
daa
inc
xor
inc
daa
pop
das
push
mov
lret
test
out
mov
xchg
out
sarb
aas
rcl
stos
push
aad
add
pop
ja,pn
mov
mov
popa
imul
adc
sub
jg
add
dec
movsb
inc
nop
fcomip
sti
movsb
es
add
jo
lock
pop
loope
jno
addr16
dec
jbe
xor
js
cmp
mov
xor
bound
js
sub
mov
call
in
xlat
cmp
mov
fimuls
fsubl
or
add
pop
sub
jg
les
jle
lock
subl
push
roll
push
in
rcrl
pop
cmp
jno
shrl
test
dec
js
push
mov
stos
es
cwtl
pop
jmp
bound
popf
bound
jge
xlat
inc
dec
mov
test
aaa
fldl
xor
inc
repnz
test
adc
add
scas
mov
dec
jb
jmp
mov
fldt
in
or
push
jmp
mov
xchg
inc
jae
adc
pop
adc
decl
push
repz
jnp,pn
pop
dec
sbb
je
pusha
and
outsb
pop
cld
jmp
loope
adc
adc
adcl
cld
stc
js
inc
mov
xchg
aas
insb
jl
stc
movsb
stc
adc
leave
pop
cmc
lcall
pop
dec
cltd
popf
scas
pop
pop
ja
jle
inc
sbb
clc
adc
xchg
notl
jmp
stos
mov
cld
xor
test
adc
loope
and
enter
inc
loopne
cs
pusha
sbb
ficomps
pusha
out
inc
test
lea
lock
in
in
les
sbb
fldl
lret
insl
xchg
repz
jno
push
mov
les
pop
sti
faddl
popf
outsb
in
and
pushf
jmp
dec
xor
jl
cmp
cs
pop
jmp
loope
push
inc
or
pop
xor
mov
push
push
sbb
and
sub
mov
xor
loop
and
orl
dec
loop
jb
mov
fbstp
sbb
lods
scas
and
mov
and
xchg
jae
into
dec
int3
xor
out
aam
gs
mov
mov
mov
mov
jb
sub
jle,pt
jle
fs
jae
ror
push
sub
scas
stos
aad
sub
cmpsb
test
fs
dec
push
test
std
imul
add
mov
mov
adc
jp
popf
insl
fsubs
adcl
push
sbb
mov
outsl
imull
lcall
lea
nop
jne
sbbb
cli
call
xchg
push
dec
or
xchg
in
sbb
pop
icebp
out
imul
jg
push
xchg
jp
push
mov
insb
push
pop
push
ss
push
or
aam
jbe
and
mov
adc
je
fnstenv
jle
int3
movsb
pop
dec
pop
pop
adc
xor
xor
hlt
aas
imul
pushf
sub
sub
inc
repz
das
mov
adc
add
cmp
mov
test
push
push
in
or
inc
jnp
fisubl
jle
inc
enter
xchg
loopne
ss
or
repz
jmp
mov
cmp
jmp
outsb
std
inc
lods
mov
jno
adc
dec
and
and
push
hlt
xchg
nop
cltd
ss
dec
dec
sub
icebp
jmp
cli
and
test
pop
cld
sahf
js
in
or
pop
cmpl
aaa
adc
in
pop
ret
jbe
push
jae
adc
inc
add
dec
sbb
cwtl
xchg
in
xchg
dec
jmp
pop
int
out
xchg
scas
mov
or
arpl
fwait
and
cmp
dec
inc
sub
add
scas
subl
jp
push
xchg
gs
xchg
pop
inc
cs
mov
imul
sub
jp
and
mov
dec
mov
inc
adc
xchg
lahf
and
add
jmp
lret
lds
push
adcb
mov
and
mov
dec
push
mulw
xchg
or
pop
jae
scas
mov
je
rcrl
ds
and
scas
sbb
jmp
insb
mov
mov
cmp
jl
js
push
jne
fs
ss
pop
cmpsb
mov
mov
and
ja
and
mov
fisubl
pusha
pop
mov
in
out
shrl
popf
and
push
loope
dec
stos
or
ja
cmc
fmul
dec
push
push
dec
ds
cld
mov
clc
scas
popf
adc
and
pop
or
pushf
sbb
negb
pushf
add
int3
gs
mov
call
inc
push
pop
loopne
mov
cmp
add
shll
pop
fcoms
add
aam
xchg
jmp
fmul
rcl
addr16
popa
lcall
mov
mov
fcompl
mov
aaa
mov
std
out
xchg
lcall
imul
repnz
jnp
mov
ja
xor
adc
mov
hlt
scas
pop
ficompl
sbb
in
fs
incl
mov
and
lds
sub
add
ss
outsb
gs
dec
xor
das
dec
test
jb
gs
add
les
add
insb
jge
and
dec
cwtl
pop
push
shlb
lret
mov
xor
int3
int
loopne
inc
out
push
xchg
movsb
xchg
jns
sub
stos
je
jmp
add
or
mov
jne
je
and
call
sub
stos
fs
jne
inc
or
cmp
div
pop
add
xchg
ja
in
mov
cmp
lahf
stos
mov
lahf
insl
clc
push
adc
imul
out
test
mov
js
push
out
lds
addr16
fs
mov
xcrypt-cfb
cmpsl
out
stos
pop
xchg
cmp
or
mov
iret
inc
mov
bound
sbb
xchg
adc
loop
dec
xor
loop
xor
adc
arpl
cmp
pop
jge
in
int3
hlt
mov
arpl
addr16
adc
adc
jne
mov
push
inc
push
and
lock
cltd
or
push
or
clc
or
cmp
push
imull
cs
fisubrs
in
cmp
xchg
into
sbb
aaa
cld
xchg
xchg
cwtl
xchg
mov
mov
inc
mov
ds
adcb
in
add
das
sbb
cmp
and
cmp
jo
add
sub
pop
mov
bound
and
adc
ret
scas
inc
imul
enter
mov
xor
mov
add
add
cmp
inc
scas
jmp
sahf
mov
rclb
pop
cli
dec
cmc
sahf
lods
push
xor
or
add
or
popf
in
or
or
cld
test
jae
inc
bswap
in
xchg
lea
dec
fadds
jbe
cmpsl
test
lods
nop
outsl
ljmp
out
jl
daa
inc
sbb
jae
xor
cmc
pop
inc
fisubrl
sbb
mov
cmp
push
ret
jg
mov
pop
xchg
loopne
orb
push
cltd
mov
xchg
xchg
aaa
lahf
popa
scas
push
push
pop
inc
pusha
pop
jg
xor
inc
xlat
jg
test
push
aaa
js
pusha
sub
sarl
je
sti
fisttps
xchg
mov
lea
mov
jecxz
pop
lret
sub
out
xor
int3
cmp
daa
add
hlt
mov
lds
sbb
add
nop
scas
stos
rol
mov
add
idivl
fists
aad
xchg
xlat
movsb
cld
fwait
dec
mov
xor
cmp
push
stc
aad
test
adc
jbe
sbb
cmpsl
inc
bnd
rcr
hlt
ds
mov
pop
pop
imul
leave
icebp
mov
call
gs
in
popa
movsl
pop
bound
repnz
outsl
imul
pop
push
push
jge
in
push
sbb
cli
jle
divl
gs
pop
cmp
mov
test
rclb
mov
aad
pop
stos
xchg
jb
fwait
jle
sub
outsb
mov
or
ret
bound
scas
lahf
and
jae
xor
lea
jmp
sahf
aas
fstps
stos
mov
xor
fs
inc
dec
jne
mov
pusha
rolb
aad
lret
iret
pop
ds
out
xor
lret
jno
push
jbe
enter
in
jae
push
or
mov
jb
cltd
fimuls
dec
dec
ds
int3
fs
jmp
xor
roll
cld
lods
or
mov
lcall
lea
mov
add
mov
fnstsw
fstl
jnp
scas
out
pop
jne
cmp
lret
dec
cmp
clc
mov
in
jle
cmp
mov
pop
inc
jl
fisubrs
mov
xchg
cmp
enter
push
xor
xor
xor
sub
sbbl
mov
pop
outsl
add
mov
cmpsl
mov
sub
movsb
lds
iret
sbb
lock
lods
cli
xchg
jbe
gs
adc
inc
xor
mov
cmp
stc
push
rcrb
std
std
mov
loop
mov
mov
jle
mov
sub
xlat
jmp
xchg
add
adcl
shll
stos
add
and
sbb
shl
clc
sub
inc
and
xor
jae
int
repnz
insl
or
outsl
cmp
adcl
jno
or
or
mov
sbb
mov
jmp
xchg
cmp
mov
jle
and
jle
cs
cmp
fadds
xchg
jmp
xchg
imul
fsub
cli
lods
ljmp
out
dec
pop
mov
lret
or
dec
imul
jl
jo
jmp
push
inc
push
dec
add
mov
scas
fadd
mov
das
mov
shrb
lahf
or
cmp
xchg
popf
or
leave
mov
and
lods
shrb
and
mov
push
cli
ret
test
dec
lods
pop
push
push
js
lcall
lret
ss
je
inc
outsb
push
mov
mov
xchg
mov
insl
inc
mov
fcmove
roll
mov
or
mov
cmp
cs
hlt
arpl
mov
cmp
pop
loopne
sbb
cmp
mov
cwtl
xor
mov
std
lret
and
xor
out
and
jg
mov
pop
outsl
in
push
jge
jmp
outsb
jne
fistl
cmp
cltd
xchg
xchg
sarl
add
mov
out
dec
or
mov
push
inc
icebp
repnz
inc
mov
xlat
mov
ja
test
add
add
aam
stc
pop
std
inc
fisttps
adc
cmpsb
jmp
jecxz
mov
test
ljmp
loope
ja
fisubl
xadd
imul
jle
and
popa
jno
pop
adc
pushf
cmp
and
lods
ret
repz
mov
mul
inc
add
jmp
mov
les
push
and
mov
jmp
loope
adc
rclb
inc
in
test
test
adc
sub
pop
fstp
and
ljmp
imul
mov
int3
insb
inc
bndstx
lret
repnz
inc
pop
xchg
mov
fs
subb
in
scas
mov
inc
push
and
test
or
push
fstps
mov
and
adc
xor
inc
xchg
pop
addl
cmp
insl
mov
repz
stos
pop
loope
sahf
movsb
ret
popf
call
repz
mov
mov
mov
cs
aad
lods
pop
pop
aad
sub
adc
jo
push
fsubrs
aad
mov
hlt
pop
cmp
add
cmpsb
and
add
loopne,pn
ret
mov
popa
iret
fnstsw
outsl
lret
or
xor
addr16
mov
shrl
imul
cwtd
mov
cwtl
jge
xor
jo
enter
adc
pop
adc
adc
jl
adc
imul
shlb
xchg
pop
add
in
mov
mov
pop
aas
cmp
sarl
les
jecxz
push
test
cli
sbb
decb
cmp
dec
push
push
or
test
dec
pop
cmp
fldt
cld
lods
sbb
cmp
mov
jmp
xor
add
ret
mov
mov
push
xor
dec
jnp
mov
in
inc
cld
lock
jno
ficoml
fisubrl
inc
mov
sbb
cmpsb
scas
mov
pop
cmp
movsb
pusha
cmp
xchg
and
insl
lods
dec
mov
xchg
xchg
test
xchg
outsl
sarl
fsubrs
xlat
xchg
pop
add
movsb
in
pop
xlat
mov
jmp
push
sbb
adc
xor
movsb
mov
xor
bound
xchg
mov
jp
cvttps2pi
push
mov
int3
xchg
mov
sub
xchg
out
std
fs
or
enter
mov
imul
dec
lock
pop
xchg
or
shrl
add
aad
aad
xchg
lea
ret
xor
dec
stos
cli
popf
les
fdivs
jnp
sub
mov
mov
push
mov
mov
cli
sahf
fimull
fldenv
in
pop
xchg
xchg
jb
std
xchg
or
cwtl
bound
push
ss
push
movsb
sub
das
lret
xor
stc
stos
es
rcr
dec
sub
jnp
mov
movsb
cmp
rorb
cmp
loopne
sti
xchg
dec
addl
stos
popa
adc
pop
jno
out
jbe
ret
dec
fwait
pushl
jbe
jge
shl
popl
or
in
adc
sub
jae
ljmp
test
pop
xchg
push
ss
xor
cmp
sub
fwait
scas
loop
dec
pushf
subl
fwait
mov
out
pop
lret
aaa
mov
aas
inc
jbe
sbb
sub
push
rcr
repnz
mov
mov
sub
out
dec
inc
cmp
sub
arpl
cmp
add
cmpsl
outsb
incl
mov
push
cmp
daa
in
mov
movsb
ret
std
jno
add
outsl
enter
sub
scas
and
xlat
jns
adc
push
sub
mov
icebp
test
das
push
pop
dec
mov
cld
push
add
cmp
xor
scas
jge
imul
shrl
loope
xchg
jbe
push
pop
aad
xor
pop
mov
cmp
iret
push
arpl
mov
cltd
outsl
out
mov
mov
jne
mov
inc
imul
xchg
test
xchg
sbb
lahf
insl
jge
call
clc
aaa
mov
add
mov
aas
pushf
cmp
scas
out
lods
aaa
push
sub
pushf
xchg
dec
outsb
pushf
add
cmpsl
jbe
cmp
adc
sub
rol
adc
jae
popf
stc
mov
push
rcl
mov
imul
mov
movsb
mov
popa
push
in
sub
adc
aad
scas
shrl
sti
dec
and
nop
adc
lods
add
stos
jp
adc
add
repz
pop
pop
fs
jo
daa
sbb
fidivs
sahf
cmp
test
jmp
pop
jg
mov
loope
mov
push
push
test
or
shl
dec
shlb
inc
dec
sahf
mov
xchg
sbb
in
test
add
mov
mov
adc
in
adc
mov
ret
inc
arpl
mov
test
sbb
test
add
repnz
outsl
inc
sbb
enter
in
inc
cmp
sub
xchg
pusha
cmp
cmp
xchg
push
dec
jle
inc
pusha
adc
out
shll
lods
lahf
jle
popf
std
add
sbb
pop
or
mov
adc
es
mov
idiv
pop
mov
jbe
add
mov
inc
jg
test
push
add
sub
ret
jecxz
cmovae
sub
es
jle
add
pop
pop
lods
push
sarl
xchg
xchg
jae
imul
dec
fsubr
and
sub
ljmp
bound
add
sti
popf
pop
dec
xor
icebp
and
dec
in
lock
cmpsb
loope
jmp
bound
jmp
sub
std
fwait
aas
mov
dec
aaa
lods
out
je
sub
std
incl
push
repz
negb
movb
insl
insb
add
fs
adc
mov
xor
pop
xchg
ja
sub
jae
cmp
mov
mov
mov
ja
sbb
into
mov
es
call
jb
mov
addr16
inc
mov
test
jne
xchg
sub
inc
repnz
cmp
pop
pushf
mov
scas
rcrl
jae
lds
add
repz
outsb
scas
insl
mov
push
push
ljmp
enter
inc
sarb
enter
popa
push
adc
push
push
adc
jge
test
cltd
aaa
xchg
out
sbb
cmp
mov
in
mov
mov
xchg
repz
lock
js
pop
sub
sub
int
mov
mov
sarb
pop
or
shr
ss
cli
adc
push
fucom
scas
adc
fnstenv
shll
out
fistl
repz
xor
iret
inc
xchg
push
pop
out
loope
fdivs
aam
fsubrs
jg
push
cmp
nop
pop
jns
cmpsb
push
rol
sub
stos
outsl
out
inc
fnsave
dec
out
or
enter
push
mov
rcrb
or
mov
mov
stos
mov
movsb
cltd
shl
mov
push
xor
cmpsl
adc
mov
aas
push
jae
and
cmc
mov
cmc
push
fcomip
pop
xchg
push
loopne
movsl
dec
fwait
jl
pop
dec
pushf
and
cmp
pop
mov
repnz
jp
mov
dec
imulb
jle
in
mov
xchg
add
mov
lods
test
int
or
sbb
and
test
out
fsubl
jae
adc
push
mov
fisubrs
pop
les
enter
and
lock
mov
insl
into
test
notl
jbe
or
adc
dec
icebp
push
call
inc
inc
push
xchg
mov
xchg
arpl
push
loop
sbb
sub
ja
and
mov
lret
fcmovnb
fwait
sbb
and
ja
ljmp
lcall
arpl
ljmp
dec
pushf
push
imul
sbb
movl
dec
or
jno
dec
mov
and
add
cmp
dec
xchg
and
mov
mov
xlat
pushf
lods
leave
xor
movsb
dec
movsl
push
in
fucomi
inc
mov
inc
or
fldcw
fsubrs
add
and
or
mov
dec
mov
ja
sub
pop
rolb
std
hlt
fistl
loopne
mov
ljmp
add
stos
cmpsb
int
js
mov
aad
jb,pt
jg
mov
fld1
add
and
jecxz
sbb
aad
inc
fsts
sbb
test
lret
outsl
popa
fadds
mov
sbb
gs
fsubl
jne
mov
fists
jnp
loopne
stc
xchg
popf
sarl
push
mov
adc
sbb
sbb
pop
es
imul
xchg
pop
aam
ret
pop
inc
mov
lcall
mov
pusha
or
aam
xorl
mov
adc
popa
call
push
in
in
cli
add
rcrb
clc
icebp
inc
mov
fsubl
clc
pop
sub
push
sub
je
out
repz
mov
dec
fisttpl
das
add
aas
cmpsl
or
out
adc
nop
cmp
pushf
out
or
xor
pop
xchg
pushw
jne
movsb
cmpsl
pop
iret
ss
lret
cmpsb
jb
loopne
inc
xor
pop
or
jb
test
sub
sbb
dec
and
sti
insl
xlat
jno
ret
lock
cmpsl
lcall
or
mov
popa
fabs
mov
lods
enter
sub
mov
mov
jo
sbb
mov
out
jnp
and
rcrb
pop
or
xor
sbb
xorb
fldenv
jge
jbe
mov
leave
sub
push
scas
xchg
mov
xchg
popa
cmp
mov
pop
movl
mov
hlt
sub
test
out
scas
leave
pop
add
fwait
int
mov
add
xchg
and
ds
into
adc
mov
ds
cmpsl
mov
xchg
dec
movsb
jb
fcompl
das
into
aad
mov
pop
sbb
mov
push
in
lea
adc
js
and
and
out
jmp
nop
xchg
sti
shlb
cmpb
cmpsb
out
or
repz
jl
sbb
int3
sbb
jmp
or
cltd
mov
mov
movsb
xor
fimull
pushl
xorb
xor
jnp
or
leave
js
cli
pop
divl
xchg
ss
lret
xor
push
or
mov
dec
sub
popa
cmp
les
and
je
ljmp
adc
sbb
xchg
cmovs
push
int
dec
xor
lahf
dec
sub
cld
test
sub
jg
cmp
int3
nop
test
popa
jae
sti
xor
mov
push
subl
pop
popf
jmp
or
fldl
xchg
pop
test
dec
mov
sub
cmp
mov
aam
xchg
pop
adc
cltd
adc
leave
add
ret
xchg
fcompl
cmp
add
xchg
push
xchg
rolb
lret
push
js
repz
mov
aam
clc
orb
loopne
lods
fldcw
lret
stos
xchg
xchg
ja
and
xlat
mov
mov
clc
clc
xchg
ret
data16
adc
sbbb
lock
hlt
aam
add
scas
adc
lcall
lret
pushf
rorb
cmp
pushf
pop
shr
push
push
cmp
aas
shrl
mov
sti
jb
shlb
jp
lcall
push
rorb
pushf
aad
push
mov
ja
punpcklbw
jb
push
clc
xor
out
push
roll
sub
fisttps
pop
aas
sbb
lahf
push
cmc
xchg
nop
jnp
bound
sub
dec
dec
jecxz
jb
pop
mov
orl
aaa
cmc
imul
out
and
lock
dec
xchg
and
push
cmp
call
and
push
xlat
mov
das
mov
scas
stos
cmp
in
xor
xor
rorb
addb
cmp
arpl
adc
dec
pop
inc
dec
jnp
aas
mov
pop
dec
xor
dec
inc
push
sbb
ror
mov
aaa
into
jbe
xor
fs
sub
mov
sar
or
movsl
lahf
cmpsb
and
inc
dec
ss
data16
jmp
loopne
inc
pop
dec
pop
sbb
lods
push
xor
leave
fsubrp
cs
pop
int
mov
or
add
jle
sbb
push
popf
mov
push
mov
stc
dec
test
rorl
es
adc
adc
xchg
xor
out
cmp
mov
jbe
mov
arpl
fnsave
loopne
loope
test
push
test
mov
loop
and
dec
lret
pop
arpl
lret
dec
lock
fidivs
mov
mov
es
test
fstpt
mov
into
sbb
sbb
or
and
xchg
sbb
pop
mov
add
into
push
adc
inc
iret
mov
jno
cmpsl
loopne
xlat
pop
loop
pop
sahf
pop
enter
out
cmp
xchg
mov
std
in
nop
das
fistpll
outsb
fiaddl
stos
dec
ret
cmp
out
sbb
inc
cmp
push
jge
lcall
mov
mov
in
imul
cmp
mov
sbb
dec
mov
add
adc
fidivrs
adc
shlb
push
sbb
fwait
mov
jb
ds
mull
lds
fcomps
mov
iret
cmpsb
lds
sbbb
mov
aas
cld
push
push
popa
and
cld
movsb
jp
xor
cmp
jo
repz
xchg
mov
mov
lock
mov
jmp
add
fwait
jae
outsb
js
cmp
test
and
cwtl
xchg
fistps
fcmovu
sti
dec
pop
add
iret
mov
xchg
lock
in
mov
mov
int3
jbe
mov
icebp
add
sub
mov
add
ljmp
cwtl
dec
push
sbb
mov
xchg
mov
jnp
insb
orl
push
push
sbb
aas
adc
ljmp
fbstp
test
sbb
push
pop
pop
movsl
or
push
xchg
stos
mov
popf
mov
mov
push
cs
dec
jle
bound
es
into
andb
mov
loop
bound
push
dec
fcoml
adc
cwtl
sub
hlt
jno
cld
jge
movsl
xor
sbb
call
push
xchg
cmp
mov
add
cwtl
mov
das
stc
les
jecxz
or
rcll
out
jo
inc
imull
ret
ficompl
add
inc
jg
inc
fmuls
hlt
out
jne
or
aas
mov
lock
movsb
cmp
sbb
inc
mov
enter
repnz
mov
sub
clc
lcall
test
jecxz
cmp
popa
gs
jmp
add
and
push
cwtl
mov
sub
push
add
lea
mov
mov
inc
cmp
icebp
nop
in
inc
popf
insb
int
lock
jne
out
pop
cli
test
mov
in
lahf
nop
out
ret
cmp
scas
cmp
aas
mov
jle
or
sub
sbb
leave
outsb
and
inc
jge
mov
cli
mov
sbb
cmpsl
mov
cwtl
jo
push
dec
mov
add
fwait
push
adc
cs
data16
pop
jno
adc
sub
jg
es
xchg
sbb
add
in
sbb
push
sub
nop
and
out
gs
ja
xchg
fs
mov
push
out
and
stos
loopne
lcallw
mov
jnp
repnz
xlat
xor
or
push
aaa
daa
out
xchg
lcall
cli
cmp
or
sub
imul
aam
and
dec
sbb
ljmp
out
fdivp
push
test
shll
repnz
and
and
cli
xlat
pop
push
xchg
dec
es
fs
movb
fistps
scas
pop
add
or
xor
sahf
shlb
je
pop
js
jb
js
push
sub
jecxz
mov
mov
ja
out
shrb
xor
rcr
push
mov
mov
orb
gs
leave
push
adc
inc
pop
fdivrs
push
nop
inc
mov
jns
mov
mov
mov
sbb
xlat
pop
in
imul
push
shll
in
or
jg
stos
dec
sbb
into
and
and
mov
mov
adc
mov
test
xlat
push
sub
fwait
xor
lock
cmpsl
cmp
cmp
mov
repnz
out
repz
adc
jge
stos
push
ret
jge
xor
test
mov
push
adc
repz
test
in
xor
and
xor
icebp
jne
ds
and
outsl
pop
repz
xchg
ljmp
mov
jb
dec
aad
pop
xchg
out
lds
pop
dec
dec
add
test
iret
int
loope
test
sub
in
mov
or
fidivrl
or
fdivs
pop
js
std
xor
jbe
xor
cmpsl
sti
repnz
jmp
xchg
pushf
out
inc
push
test
xchg
adc
mov
adc
xchg
fxch
imul
cltd
or
test
xor
fdivrl
pop
leave
push
pusha
enter
aas
pop
cmp
lcall
xor
cmp
cmc
cmpl
in
icebp
addr16
adc
shrl
pushf
push
loopne
stos
lcall
inc
push
pushf
jge
xchg
xor
add
cmp
xor
and
jbe
push
mov
aam
test
pop
xchg
push
inc
stc
addl
jle
repnz
push
pop
cmc
arpl
nop
cld
and
int
add
pop
pop
dec
je
mov
mov
xchg
cld
cmp
ss
pop
bsf
out
xor
adc
call
dec
adc
pop
insl
or
mov
ret
jae
ficomps
push
std
xor
popa
enter
cli
repnz
inc
jno
and
adc
mov
sbb
xchg
lock
js
jae
int
jo
mov
aas
sbb
stos
mov
mov
sahf
loop
push
inc
enter
rcl
mov
or
imul
insb
imul
mov
sbb
pop
roll
std
xor
add
xchg
divl
mov
add
in
and
enter
inc
mov
pushf
in
cmp
jge
lcall
js
push
jmp
ja
in
push
leave
hlt
mov
xchg
in
xor
mov
insl
pop
and
rorl
inc
jg
and
sti
pop
lret
add
stos
divb
imul
int3
addl
cmp
fwait
lahf
and
cmp
add
fs
inc
inc
insl
in
sarb
sbb
mov
aas
sub
insl
cs
adc
mov
push
inc
pop
jo
retw
inc
xchg
bound
shr
outsl
push
pop
in
xchg
mov
inc
enter
and
flds
into
mov
addb
dec
mov
fists
dec
scas
push
dec
jae
inc
je
xor
xor
dec
in
sub
xchg
flds
das
sub
aad
adc
jb
or
stos
add
push
push
push
add
sbb
divl
int
lods
and
mov
ss
inc
jne
enter
dec
mov
push
in
adc
push
sbb
add
filds
aas
mov
iret
out
cli
jp
repz
subl
pop
cwtl
test
push
and
cmp
lcall
add
push
pop
push
push
mov
sub
pop
mov
in
ja
in
dec
cltd
pusha
xchg
cmpsl
push
das
rolb
mov
add
jl,pt
lea
sbb
add
xchg
inc
pop
pop
cmc
sahf
jge
and
adc
xor
aad
fs
jae
push
sub
xchg
xor
xchg
adc
and
or
cmp
xchg
add
clc
clc
pop
es
scas
out
cmp
inc
roll
fidivs
mov
insb
push
sbb
fwait
sub
adc
dec
xchg
mov
or
and
add
adc
dec
lret
andb
and
jl
repnz
cwtl
jns
xchg
xor
sbb
repz
rorb
stos
mov
in
or
ret
sti
adc
sub
int3
fiadds
mov
outsb
test
sti
mov
fbstp
mov
add
mov
movsb
xor
lock
sub
push
and
inc
sub
std
jne
ret
test
ret
mov
or
movb
pusha
das
inc
aas
cmpl
mov
loop
lcall
pop
cmp
cltd
test
jl
cmp
or
ja
and
adc
sbb
sti
pop
ret
sub
ret
dec
hlt
leave
fstps
pop
mulb
mov
rcll
iret
dec
adc
ds
and
and
scas
xor
and
sbb
pop
cltd
js
dec
js
pop
mov
imul
lods
jbe
in
xchg
loope
insb
dec
mov
cltd
out
push
or
pop
stos
push
mov
cmp
gs
cli
cld
adc
mov
jle
sub
shl
xchg
pop
dec
add
stc
adc
mov
xchg
pop
clc
call
loopne
mov
add
add
jbe
popa
or
std
in
add
icebp
sbb
inc
cmpsb
mov
xor
xchg
add
push
insb
sbb
fs
pop
call
pop
or
cmpb
xor
ja
es
cmovns
mov
divl
dec
push
pop
dec
dec
cmpsl
pop
pop
push
adc
in
dec
jbe
subb
sub
mov
sub
push
cltd
cmp
push
negl
sbb
arpl
sti
xor
out
bswap
ja
mov
xchg
rorb
push
push
mov
add
scas
mov
adc
sahf
gs
and
lock
and
test
sbb
lahf
sub
loop
mov
pop
stos
ja
rorb
add
mov
in
loope
cwtl
cs
inc
inc
sbb
aam
sub
sti
sbb
inc
pop
jbe
add
mov
ss
fdivrl
pop
leave
push
lcall
inc
bound
test
lahf
lock
movsl
nop
adc
insb
xchg
divb
push
fisttpl
jnp
and
into
push
push
ss
xchg
enter
xor
mov
xor
jns
jb
hlt
sbb
andl
dec
or
pusha
xor
dec
imul
push
pop
mov
sbb
pop
daa
adc
mov
sub
xchg
in
ret
stos
and
xor
xor
mov
ret
xor
sbb
cmpsb
mov
fs
xor
in
stc
sub
in
fwait
pop
in
pop
std
sbb
mov
cmp
pop
aad
jo
test
push
fsubs
out
pop
or
inc
repz
rorl
mov
mov
leave
add
xchg
sahf
push
mov
adc
jno
cmp
stos
repz
int
in
shrb
xor
in
dec
shlb
icebp
push
xchg
ds
jo
stos
push
dec
aas
sbb
icebp
jmp
pusha
insl
sarb
lock
arpl
inc
popf
stc
inc
xor
or
xchg
adc
iret
leave
ss
add
rorl
in
and
adc
mov
scas
pop
stc
divb
xchg
sub
and
jge
scas
into
sbb
add
int
mov
mov
xor
data16
or
std
push
dec
pop
push
jp
push
cld
jecxz
filds
add
shll
adc
or
dec
xor
out
xchg
dec
roll
add
or
aas
jne
popa
jmp
cli
jae
sbbl
mov
pop
out
mov
es
and
xchg
push
push
outsb
jg
shll
jg
fldln2
shlb
in
xchg
imulb
mov
inc
dec
lret
js
pop
sub
pop
jae
mov
inc
movsl
cwtl
ja
add
cmp
gs
add
adc
sub
ret
push
mov
ss
mov
and
out
test
xchg
mov
jecxz
mov
test
aam
inc
loope
jle
pusha
mov
or
gs
lds
jbe
inc
sbb
std
jmp
sub
std
cmp
clc
loopne
addb
mov
loop
icebp
repnz
imul
iret
pop
aad
sub
cwtl
pusha
mov
loop
add
mov
out
jnp
xchg
adc
xor
mov
movl
addr16
fdivl
lock
icebp
mov
sbb
jecxz
lahf
inc
mov
push
mov
adc
sbb
mov
lret
mov
cmp
cmp
fistpll
pop
insl
jg
jb
adc
call
popa
and
dec
enter
push
pop
add
jb
aas
pop
mov
sbb
or
adc
xchg
mov
aaa
pop
add
push
add
subl
in
jns
les
add
cmpsb
add
rcll
xor
ss
mov
insb
daa
xchg
inc
adc
and
mov
andl
hlt
jno
mov
jne
idiv
xchg
cmpb
fsub
pop
mov
cld
jo
in
sbb
stc
or
sub
jg
and
mov
mov
in
cmp
jo
shrl
sti
sbb
mov
adc
popa
lds
in
mov
push
or
jl
mov
jmp
sbb
or
addr16
cli
xor
lret
mov
ret
stc
jbe
sbb
gs
jmp
xchg
lret
pop
addl
jl
dec
aam
adc
scas
out
xchg
xor
shrl
inc
or
inc
sahf
xchg
xlat
inc
lds
sbb
orb
in
fmull
imul
pop
rcrl
out
xchg
jnp
xor
fildl
repz
cmpl
pop
adc
orl
cs
and
xchg
inc
push
mov
mov
push
rolb
mov
or
pop
jmp
and
and
orl
and
lods
icebp
nop
pop
and
push
xchg
add
dec
jns
clc
jecxz
into
imul
sar
inc
int
cmp
adc
inc
je
pop
xchg
aaa
mov
push
ljmp
mov
and
repz
cli
or
pop
and
mov
push
push
dec
pop
sbb
mov
inc
xor
dec
ret
mov
mov
cltd
mull
dec
out
xor
je
out
std
in
or
fwait
int
jno
xchg
movsl
mov
ss
push
add
sarb
subl
ss
or
pminsw
repnz
sahf
ljmp
inc
fldcw
push
add
bound
xor
es
out
insb
in
xchg
in
mov
and
dec
mov
xor
das
and
mov
mov
adc
or
adc
jl
shl
sbb
pushf
aaa
cmp
mov
daa
push
bound
xor
loope,pn
mov
mov
test
test
gs
add
scas
mov
pushf
and
jp
fsubs
test
mov
aas
add
cmp
cmpsb
jb
mov
clc
pop
dec
aad
cmp
ret
jge
pop
xchg
loope
mov
es
xchg
fstps
add
push
fildll
mov
gs
pusha
pop
or
mov
push
clc
xchg
movsb
test
mov
mov
fldcw
xor
jecxz
iret
lods
pop
or
fwait
push
jmp
mov
jp
icebp
mov
ficomps
push
jp
xchg
mov
out
rorl
ret
adc
js
imul
mov
jmp
sbb
call
pop
jb
jmp
pmaxsw
mov
stos
or
dec
in
push
jno
mov
and
lods
dec
test
jmp
pushf
jmp
fstpl
sbb
test
mov
subl
ss
sub
cmp
sbb
movsb
adc
or
repz
aaa
cmpl
shrb
push
pop
loope
and
rolb
xor
mov
mov
and
aam
jno
cld
out
cmp
jecxz
insl
cmp
add
xor
cmpsl
sub
add
jmp
or
jne
bound
rcrb
dec
mov
cs
sub
jo
jne
std
xor
push
movswl
add
mov
adc
mov
loop
inc
xchg
pop
jp
and
jo
lds
mov
mov
popf
and
cmpsb
xchg
cmp
stos
loop
test
mov
sbb
inc
loope
in
inc
in
pusha
ret
push
mov
gs
in
xchg
mov
push
adc
out
ja
lahf
pop
dec
cwtl
fwait
sbb
ret
add
pop
rcrl
adc
jg
movsl
dec
scas
pop
cmp
mov
inc
xor
pop
out
adc
sbb
loope
std
filds
aad
mov
dec
pusha
pusha
subl
in
pop
or
xor
cmpsb
jge
adcl
outsb
nop
dec
push
ds
int
int3
mov
insl
loope
push
pop
mov
insl
mov
pop
mov
xchg
mov
sbb
out
lea
imul
push
dec
imul
xchg
jne
aam
leave
jo
movsl
push
adc
ss
pop
push
mov
cli
aaa
sub
daa
scas
adc
outsb
sub
or
cwtl
mov
fsubr
loopne
cmpsb
iret
nop
xor
and
mov
in
sarl
push
dec
adcb
fistpl
es
dec
push
outsl
ljmp
fistps
jecxz
mov
sbb
inc
fwait
jl
push
aad
outsb
add
iret
into
call
xor
push
pop
idivb
sbb
pop
xchg
cmp
mov
xchg
popf
into
and
jno
mov
int
pop
es
mov
lret
clc
in
stos
push
mov
sbb
dec
insl
cld
and
push
pop
and
cmp
push
jb
repz
pop
or
adc
shl
ds
aas
in
pop
or
shrb
cltd
adc
adc
loope
loop
sahf
lahf
clc
repz
ss
call
mov
std
dec
mov
xorl
leave
jmp
dec
sti
int3
dec
push
mov
fmul
push
int3
xchg
mov
fs
jp
dec
cmp
xor
lods
jo
sub
jno
cli
push
lock
add
loope
adc
insb
aad
mov
inc
stc
and
dec
lods
test
mov
and
into
or
test
roll
sarl
dec
push
iret
jp
je
ds
cltd
inc
mov
pusha
ret
dec
mov
xchg
loopne
mov
cli
dec
push
imul
ds
lea
pop
cld
mov
jne
and
popa
sti
mov
xchg
xchg
or
add
outsb
cs
cmpsl
jb
out
out
lock
cmp
rcrb
test
daa
push
mov
adc
sub
mov
mov
mov
mov
mov
out
test
ja
out
test
fsubrs
xchg
loope
nop
movsb
ret
mov
in
or
inc
in
test
xchg
mov
aam
mov
and
dec
add
loop
ficomps
and
lods
data16
xor
xor
stc
test
popl
mov
mov
hlt
popf
and
inc
test
leave
sbb
mov
xchg
sbb
jecxz
cmpsb
add
xchg
pop
cmpsl
es
push
pop
roll
cmc
sarb
mov
jecxz
mov
rorl
fs
jae
aas
jno
dec
in
jp
push
cmpsb
push
rcr
out
sbb
jns
insl
outsb
inc
jbe
or
flds
xlat
mov
cmpsb
adc
call
push
fnstcw
adc
aas
inc
sbb
mov
jp
les
add
shlb
out
lods
mov
sbb
gs
rorl
daa
push
out
inc
dec
scas
sbb
int
insb
sti
or
sbb
jbe
imul
mov
xchg
cwtl
arpl
xchg
and
cmp
out
int
fwait
adc
cmpb
fisttps
push
stos
cltd
jp
xchg
pop
add
cmp
loope
lea
xor
shlb
mov
ret
pop
fsubrs
es
hlt
dec
adc
sbb
mov
jae
mov
add
sub
and
popf
cmp
dec
fiadds
jmp
and
jge
shrb
push
dec
mov
adc
cmpb
fld
les
push
rorb
and
dec
fldl2e
sub
xor
sbb
sub
movsl
subb
sub
lock
cmp
mov
lret
jmp
fwait
inc
xchg
or
lock
pusha
aaa
jecxz
mov
add
jne
mov
movsb
xor
rcrl
in
mov
pop
rcl
jb
jmp
and
in
sub
sbb
or
jge
push
repz
sbb
pop
in
mov
stos
mov
ret
outsb
lds
sti
ljmp
jae
push
test
stc
sbb
repnz
push
jo
jnp
push
mov
lcall
popf
fcmovu
cwtl
push
push
out
test
sub
pop
movl
stos
daa
xor
xor
inc
mov
int
mov
dec
and
ret
sub
mov
add
push
std
cmpsl
cmp
imul
int
popf
insb
nop
icebp
and
negl
ja
sub
pop
sarb
fnstcw
andl
xchg
dec
hlt
xchg
push
lds
jno,pn
xor
adc
lods
push
cltd
jl
add
push
jb
movsl
sub
lcall
push
leave
daa
cli
dec
aaa
shufps
ret
in
aad
repnz
or
fiadds
test
xlat
dec
inc
aaa
inc
xor
mov
inc
push
push
xor
pop
add
sub
jo
mov
jge
push
sub
cmpsb
mov
xor
aad
cmc
sub
out
inc
mov
loop
roll
js
xchg
push
repnz
fstpl
xor
dec
lea
cli
jnp
xlat
daa
cmp
adc
ss
xor
jbe
lret
scas
mov
and
push
aam
outsl
das
jmp
cwtl
or
xchg
fcmovnb
push
aad
loopne
and
sbb
inc
loope
dec
or
pop
xor
jnp
pop
cmc
inc
cmp
push
cmp
in
push
test
notb
jmp
filds
pusha
or
pop
icebp
rol
into
jae
jmp
lods
fucom
cmp
mov
sbb
repz
icebp
sub
mov
or
inc
es
mov
cmpsb
push
add
or
shll
sub
add
lret
outsb
xchg
ljmp
popf
push
sub
lahf
adc
add
mov
popf
ret
movsl
add
xchg
loope
push
mov
clc
pop
add
inc
sub
out
push
and
fldenv
xchg
ret
mov
mov
pop
mov
jae
subl
cmp
pop
dec
idivb
loopne
mov
push
inc
push
inc
sbb
fs
add
mov
test
imull
fxch
xor
mov
aad
xor
pop
cmpsb
mov
adc
aaa
add
fs
mov
ret
inc
shrl
mov
popw
fst
lcall
push
ja
or
das
fisttpll
pop
adc
push
add
lahf
clc
pop
pop
fcmovbe
jmp
outsl
fists
cmp
xlat
rcl
mov
sarb
mov
repnz
repnz
fcompl
sti
lea
js
mov
int3
push
mov
fildll
mov
adc
pop
call
adc
mov
fnstenv
sub
ret
cmpb
dec
mov
aaa
rcrl
sub
ficomps
popf
fwait
and
mov
push
in
std
mov
in
or
push
loop
mov
popa
sub
and
jo
push
into
insb
jp
jbe
hlt
xor
addr16
ret
dec
pushf
rcl
out
xor
jge
hlt
rorb
lret
inc
dec
cs
push
out
lods
popa
lret
aad
pop
fnstcw
cmp
lock
mov
dec
jmp
cmp
ror
test
pop
add
cmc
pop
dec
and
mov
inc
pop
fsts
jb
pushf
repz
jo
sub
xchg
pushl
fiaddl
fsubp
jmp
xchg
add
pop
ljmp
add
stc
dec
ret
mov
in
xchg
subl
and
arpl
repnz
aaa
dec
addr16
push
imul
scas
and
cmp
xor
cmp
push
out
mov
insb
sbb
dec
stos
inc
sub
mov
arpl
or
and
dec
sub
aas
sub
mov
shrb
imul
dec
sub
push
jae
add
and
mov
or
das
inc
adc
popf
vpunpcklqdq
jns
out
daa
jo
fmull
adc
push
or
or
inc
inc
xchg
scas
add
jl
subl
push
push
push
inc
mov
adc
out
inc
pushf
lods
dec
add
pushfw
fidivs
jbe
adc
xor
imul
fwait
cwtl
push
pop
mov
adc
pop
jmp
pop
mov
inc
insb
repnz
jne
pop
in
enter
aas
addb
pop
pop
shl
and
push
fistpl
stos
sarb
xchg
push
push
push
xchg
sbb
cmp
mov
and
movsb
inc
fisubl
jnp
pop
pop
jmp
imul
ss
ss
xchg
lods
xor
pop
stc
jge
lahf
mov
cmp
pop
xor
inc
jb
sbb
mov
push
out
adc
aas
in
ret
fsubs
lret
out
mov
ret
pop
add
sarb
incl
mov
je
mov
xchg
pop
mov
lcall
sub
sub
stc
iret
push
je
es
faddl
out
mov
ret
fistps
pop
lds
xchg
inc
xorps
xchg
and
iret
lock
pop
cmp
lret
stc
xlat
rol
test
addb
sbb
aad
out
nop
xor
xor
inc
dec
into
repz
psadbw
test
xchg
push
icebp
shrb
test
mov
cmpsl
or
sub
sbb
outsb
daa
cmp
mov
in
push
pop
lcall
fldlg2
shrb
leave
sub
icebp
mov
fistl
mov
jbe
push
in
addr16
cmpb
adc
mov
ds
mov
andl
or
mov
cmp
aad
rcrl
daa
mov
mov
mov
sbb
push
mov
loopne
in
repz
divl
std
sub
add
dec
xchg
pop
orb
aam
mov
and
pop
push
jb
pop
lods
push
insb
inc
mov
fmul
push
mov
jb
ret
push
in
lods
xchg
in
sti
in
aad
mov
pop
lahf
mov
loopne,pn
pusha
mov
mov
movsb
shlb
mov
xor
sbb
jmp
add
das
adcb
xchg
pop
dec
cmp
mov
int
imul
es
fnstenv
aad
or
cmp
stc
ret
in
jns
mov
xor
std
or
or
jge
and
push
test
and
sbb
push
sbb
ds
out
outsb
andb
xchg
xor
xlat
f2xm1
sbb
dec
push
dec
or
push
add
mov
sahf
loope
int3
mov
fisubs
popa
pushl
push
add
loope
dec
push
sti
call
xchg
rclb
or
or
test
fisubrs
int3
nop
aas
and
ficoml
cmc
sbb
stos
mov
mov
lods
push
lahf
icebp
cli
push
and
std
adc
das
inc
ds
push
push
cmpsl
cmpb
popa
ljmp
in
mov
imul
push
add
and
cltd
cmpsl
cs
sbb
adc
sbb
sub
xorl
pop
cld
fildl
fisttps
mov
insb
test
cmp
lcall
mov
mov
inc
mov
fistl
cs
xchg
out
push
enter
mov
dec
cmpl
sub
out
sbb
stos
notb
and
sub
ds
xor
mov
lods
mov
loopne
gs
lods
jo
sub
jge
leave
insb
in
mov
fidivl
pop
js
lahf
stc
sbb
fnstsw
sub
cmp
pop
sbb
fldl
mov
rcl
es
push
add
movsl
mov
scas
cmp
inc
xor
dec
mov
inc
add
loop
shlb
push
jns
sub
scas
xor
inc
aam
mov
sub
int3
stos
xchg
in
xor
mov
dec
or
or
mov
jno
bound
adc
rorl
outsl
dec
jb
jge
sub
test
cmpsb
push
incl
adc
xlat
add
movsl
test
xor
sbb
fsubl
sub
sub
dec
pop
or
popa
mov
ds
test
nop
pusha
xor
hlt
and
adcb
push
nop
or
or
xchg
fs
pop
sbb
mov
std
ljmp
je
ss
mov
cmp
sub
divl
mov
sahf
pushf
jl
mov
add
xor
xor
sbb
cmpsl
lret
cmc
ficompl
cltd
jl
and
call
repz
sub
dec
ret
mov
sti
arpl
cmp
cmpsl
mov
rorl
sub
pop
repnz
adc
enter
lea
xor
push
sbb
mov
jle
scas
in
in
adc
test
rcrb
jecxz
sahf
mov
dec
or
inc
fidivs
adc
mov
and
in
sbb
fsubs
xchg
sbb
cmp
xchg
cmpb
mov
arpl
cmp
mov
imul
ds
xchg
sti
pop
inc
jns
jmp
mov
jg
adc
imul
or
test
adc
mov
jecxz
dec
push
lret
inc
jge
fisttpll
cmc
and
adc
mov
mov
pop
xchg
mov
decb
jp
and
xor
out
push
aad
jge
test
stc
jle
rcl
dec
cmp
push
hlt
push
test
negb
dec
mov
ficompl
sbb
dec
int
push
ret
aam
inc
pop
push
popf
mov
std
push
and
cmpsb
test
cld
push
mov
mull
es
popa
sub
xor
aad
out
adc
out
xchg
jg
pop
mov
jbe
imul
sbb
stos
and
sbb
out
adc
movsl
out
mov
xor
cmp
rolb
dec
das
insb
sbb
lods
data16
mov
les
mov
movsb
adc
jns
jno
fcmovb
ret
xchg
pusha
mov
mov
mov
out
mov
xchg
js
pop
sbb
push
mov
in
and
mov
aam
data16
les
adc
loopne
mov
push
sbb
or
scas
bound
aas
dec
inc
call
push
add
inc
adc
and
loope
jp
add
and
cmp
out
lds
mov
xchg
lods
pushf
std
lock
ja
and
dec
mov
adc
lahf
arpl
lret
pusha
aas
xor
push
mov
push
xchg
and
jno
or
xlat
and
push
pop
pop
push
imul
hlt
jne
inc
inc
scas
in
loope
dec
inc
icebp
jmp
sub
fnstsw
mov
test
or
push
dec
inc
sub
shll
std
push
dec
pop
or
jbe
call
adc
arpl
into
push
xor
scas
sub
or
out
insl
lods
mov
pop
mov
and
and
push
xor
xor
mov
xchg
sbb
sti
loopne
jp
imul
inc
cli
pop
movsb
fisubrs
ret
popa
xlat
test
jno
pop
stc
mov
mov
fwait
adc
xchg
xchg
pop
xchg
in
aas
xor
lock
xor
adc
negl
cltd
sub
jo
pop
mov
inc
frstor
and
mov
lods
sub
xchg
add
in
sbb
add
sbbb
fucomip
adc
xor
rol
fs
enter
cs
adcl
cmpsl
int
scas
ja
pop
push
jne
xchg
pop
fsubl
outsl
or
sub
in
push
adc
int3
pop
cmp
mov
xchg
adc
xor
sbbl
inc
fcomip
and
xlat
imul
ds
fmull
xorb
popf
sub
sub
mov
jbe
add
push
mov
cmp
lods
adc
fldcw
mov
lea
sbb
add
mov
imulb
outsb
mov
mov
test
stos
lods
add
inc
gs
push
nop
mov
mov
nop
mov
and
pop
lea
shl
shrb
stc
or
push
mov
in
fdivl
push
pop
add
cmpl
cmp
ret
xchg
inc
daa
fwait
ja
cmp
ret
xchg
fdivl
sbb
insl
xor
and
push
lcall
push
js
xchg
inc
popa
dec
fnstsw
aad
sub
push
cmpsl
int
test
stos
in
push
sti
push
popa
pop
jle
out
aam
jno
jnp
out
outsb
or
inc
ret
icebp
outsb
sarl
push
or
adc
rolb
or
jecxz
lods
adc
inc
jno
dec
stos
push
and
jle
fwait
or
inc
fistl
xchg
add
fidivs
or
bound
pop
inc
ljmp
sub
sub
ficoms
lock
aad
mov
rcll
loop
sub
ja
adc
fiaddl
fsubr
test
sbb
mov
nop
les
mov
mov
mov
shll
jb
fisttps
bts
jecxz
cltd
sarl
jne
lods
lods
or
sarl
js
rorl
or
sahf
lds
add
jl
jno
jb
jl
or
dec
cmp
push
outsl
dec
pop
cld
faddl
js
pushf
out
int
div
shr
or
cmp
cmc
shlb
inc
ret
sarb
aas
mov
rclb
xchg
push
adc
adc
pcmpeqd
inc
dec
movsb
dec
mov
mov
jle
dec
daa
testl
adc
fwait
push
xchg
jecxz
mov
jo
push
dec
mov
jle
aam
and
xchg
add
pushf
cmpsl
push
movsl
or
and
xor
aaa
inc
jmp
adc
sbb
cli
mov
inc
lret
outsb
push
rcr
fwait
jns
lea
jo
cmpsl
adc
std
inc
jne
pop
xchg
mov
mov
rolb
jae
sub
mov
mov
push
cmp
test
into
je
call
jne
jg
and
lock
mov
lret
inc
sti
dec
pop
ds
push
nop
xchg
iret
sub
sub
sbb
cmp
jge,pt
pop
mov
cmpsb
pushw
ror
lcall
cmpsb
jbe
inc
push
jns
movsl
jge
push
pop
jp
mov
mov
cltd
push
out
sub
xchg
lods
iret
test
cltd
imul
xchg
pop
stos
cmp
shll
dec
fisttps
pop
sub
jle
andb
jnp
mov
repnz
push
adc
jmp
in
sub
std
dec
in
xchg
inc
scas
shl
fldcw
sbb
dec
mov
data16
test
or
inc
lods
loope
inc
ret
mov
int
fs
mov
mov
int3
pusha
sbb
out
stc
stos
inc
mov
test
inc
lods
loop
arpl
xor
push
push
jbe
in
in
mov
scas
jb
and
scas
cmp
scas
pop
repnz
cmp
cmp
aas
pop
shl
push
in
setge
test
loopne
or
xchg
mov
add
xchg
movsl
out
add
push
outsl
jbe
cmp
pop
pop
lods
lods
in
arpl
add
xlat
nop
adc
xchg
jmp
in
jmp
test
mov
push
mov
iret
or
sbb
pop
fnstenv
or
fiadds
jae
sub
movsb
push
stc
mov
dec
pop
int
orl
pop
pop
data16
fstl
movsl
lcall
test
cmp
je
in
push
gs
or
ds
ss
inc
jp
ror
fcmovnbe
testb
xchg
imul
xlat
rcrb
add
iret
movsb
inc
test
sub
dec
lea
repz
lods
push
push
add
push
popf
cmp
outsl
pushf
mov
stos
cmc
jecxz
out
pusha
data16
nop/reserved
outsb
aam
mov
sub
test
cmp
mov
shll
int3
jg
pop
lahf
jae
jmp
xchg
popa
sbb
push
test
push
clc
cwtl
aas
repz
fnop
add
or
lock
adc
jno
push
adc
and
ja
mov
jge
dec
add
nop
inc
jle
imul
add
xchg
stos
sub
mov
add
pop
xchg
cmp
mov
mov
out
jp
test
dec
ljmp
sub
cli
stos
lahf
jnp
fistl
arpl
cltd
imul
inc
dec
jno
and
bound
xor
dec
cmp
mov
xor
inc
nop
into
push
outsl
outsb
in
sar
add
mov
addl
pusha
mov
fcomp
insl
stos
jg
je
push
sti
mov
or
jl
jp
mov
loop
dec
out
xchg
pushf
pop
xchg
jg
cwtl
repnz
or
mov
push
jl
lahf
xchg
or
jecxz
pop
test
jne
inc
push
repz
stos
clc
jno
dec
push
xchg
push
pop
xor
leave
jbe
cmp
rcll
mov
jns
sbb
gs
int
fcmove
dec
stc
hlt
std
sub
fwait
aaa
sub
or
faddl
repz
popf
cmpsl
mov
push
leave
and
dec
xchg
insb
mov
lcall
or
inc
push
repz
in
aad
lcall
fcmovne
mov
jae
fsubrl
push
add
pop
mov
aaa
xchg
jecxz
fs
enter
aaa
push
jne
insl
lock
lods
mov
inc
aaa
iret
jo
loopne
or
rclb
xor
rorl
xor
dec
mov
mov
or
push
xchg
inc
mov
jne
adc
and
xor
lds
les
or
or
add
xor
dec
sbb
push
fnstenv
in
xchg
jmp
cmp
mov
dec
or
sbb
movsl
pop
pop
lcall
push
jmp
add
sub
outsb
push
int
ret
test
hlt
or
inc
fcmovbe
dec
add
popa
mov
xchg
adc
loop
add
xchg
mov
dec
fdivr
js
call
cmpsb
or
xor
and
xchg
test
xor
adc
scas
xchg
jnp
outsl
outsl
pop
cwtl
pop
xchg
dec
pop
push
fwait
inc
sbbl
xchg
xchg
xlat
dec
nop
int3
or
cmp
xchg
notl
xchg
aaa
push
pusha
jl
mov
jecxz
push
jge
cwtl
pop
test
xchg
loope
fidivl
dec
cltd
adc
jmp
inc
fildll
js
or
sbb
mov
stos
cwtl
es
mov
xor
aaa
mov
adc
mov
inc
mov
xlat
into
jnp
test
pop
jbe
adc
mov
in
mov
shl
cmp
jecxz
adc
push
dec
jb
jmp
cmpsb
and
cmpsl
pop
xor
sub
mov
mov
ficoms
mov
test
jno
mov
pop
push
pop
or
xchg
mov
lods
mov
adc
add
in
push
out
inc
lock
outsb
inc
ljmp
cmp
cwtl
aam
or
arpl
and
pop
sti
rolb
das
pop
aam
jne
or
sti
dec
cmpl
pop
sub
lret
mov
inc
sti
mov
pop
pop
xor
pop
push
dec
lret
push
mov
sti
add
pop
or
insb
sub
movsl
jno
mov
mov
movsl
rcr
je
fnstsw
sbb
lock
mov
je
mov
ljmp
mov
pop
insb
jmp
mov
sub
dec
in
xchg
xchg
jg
out
repz
cs
jmp
cmpsl
xorl
xorb
pop
scas
inc
xor
or
mov
sbb
nop
mov
pop
or
mov
aas
dec
imul
xchg
jno
push
xor
lahf
cli
push
mov
loopne
mov
mov
mov
inc
sub
push
inc
pop
dec
imul
mov
cmp
xchg
sub
push
xchg
inc
mov
mov
or
fnstcw
jns
xchg
dec
loopne
jecxz
scas
xor
sti
loop
sub
mov
jg
lret
cmp
adc
and
pop
adc
adc
push
lds
scas
int
push
shrb
and
imul
push
xchg
test
adc
jge
insb
pop
push
fs
fwait
cs
push
in
nop
imul
vcvtdq2ps
xchg
loop
jnp
ficoml
push
mov
pop
lret
mov
mov
mov
js
push
dec
dec
jmp
xchg
add
sbb
sahf
dec
push
in
add
sahf
cltd
jb
aaa
shlb
adc
test
lea
dec
mov
cld
dec
add
movsb
sub
enter
mov
mov
inc
pop
popa
jl
pop
sub
or
cli
out
cli
into
lods
inc
addr16
test
dec
test
and
mov
cld
sbb
rorl
ljmp
inc
push
sub
jle
ret
cmp
sbb
sbb
fbld
clc
mov
mov
ja
mov
insb
mov
js
in
jnp
in
adc
xchg
movsl
insb
add
mov
adc
mov
sub
mov
and
jge
mov
addr16
aaa
xchg
clc
ret
enter
lds
cmp
mov
rcl
or
xor
imul
mov
mov
nop
xor
jg
push
and
xor
jnp
aaa
inc
adc
inc
pusha
mov
lds
add
sbb
fs
sbb
movsb
out
sahf
test
popf
int3
push
inc
mov
inc
mov
and
sub
adc
lret
imulb
jle
scas
and
fcoms
dec
or
js
jae
sahf
iret
add
lret
dec
push
aam
jmp
and
test
test
sbb
repz
cli
out
mov
sbb
jae
xor
dec
outsl
fyl2xp1
xor
mov
xor
mov
loop
mov
mov
push
lods
or
fcompl
xor
xchg
outsb
xor
or
mov
ret
in
ljmp
bound
adc
xchg
fiadds
ljmp
xor
repnz
mov
dec
lret
pop
jbe
and
stc
and
mov
xchg
rclb
mov
jns
icebp
mov
mov
xchg
leave
mov
xchg
fadds
test
cmpsb
jp
xchg
lcall
mov
stos
leave
mov
fadds
or
pop
xchg
aaa
adc
jns
mov
lcall
loope
xchg
inc
sub
out
jae
push
inc
in
outsb
decl
aas
jns
sahf
sbb
cltd
rcrl
fcompl
xor
insl
stc
ficoms
stc
lret
mov
outsl
cs
xorb
and
cmp
and
daa
jmp
jno
in
sbb
rcll
jge
push
ds
xchg
int
mov
lds
loop
sbb
mov
pushf
adc
lcall
mov
pop
insb
arpl
addr16
out
loope
repnz
mov
pop
pop
inc
pop
inc
jne
add
xor
aaa
xor
lock
or
xor
inc
fdivrp
sbb
jg
jmp
cmp
pop
sbb
cmp
pop
insl
push
dec
movsl
std
or
mov
xchg
aas
loop
xchg
xchg
xchg
bsr
pop
jmp
testl
stos
jne
inc
movl
sub
and
mov
call
sub
push
enter
fnstsw
pop
add
add
mov
mov
enter
pop
pop
mov
insl
and
scas
pop
repz
pop
and
mov
jbe
push
aad
jg
test
jg
cmp
add
aas
js
sahf
add
jne
test
xor
scas
enter
imul
xor
scas
mov
adc
scas
inc
sbbb
pop
dec
and
ficomps
cmp
outsb
adc
jno
sub
mov
mov
outsb
dec
inc
iret
xchg
loopne
cwtl
pusha
test
xorl
inc
inc
push
jg
lock
sahf
sub
adc
add
out
mov
ret
sbb
call
adc
xchg
xchg
and
xchg
push
ret
mov
sbb
push
imul
mov
aam
nop
mov
repz
add
test
xlat
and
orb
andb
scas
pop
iret
iret
addl
dec
lods
lret
es
sub
sarl
test
or
in
fdivr
inc
xor
or
jno
push
rorl
jecxz
shrl
mov
mov
decb
dec
das
mov
test
test
sub
loope
stos
push
loopne
fwait
pop
aaa
inc
push
inc
stos
or
mov
inc
divb
outsb
rcll
or
jae
popa
lock
cmp
faddl
jnp
jo
rolb
and
push
push
push
fidivrl
testb
push
xchg
daa
cmp
pop
loope
aad
call
adc
sub
mov
add
jae
fwait
xchg
lcall
push
fidivs
loopne
stc
dec
cltd
push
into
fidivrl
aam
scas
or
jg
sbb
inc
ljmp
jns
es
xor
mov
mov
adc
cmpsl
adc
adc
adc
iret
std
fnstsw
in
cli
sbb
sbbl
test
push
jno
ja
repz
lods
test
mov
ljmp
and
fmuls
push
adc
jmp
insb
scas
jge
push
mov
pop
add
hlt
jge
jno
testl
loop
sar
decl
cwtl
testl
ja
ds
sbb
cwtl
xor
mov
lcall
sub
call
mov
leave
cmp
push
jmp
pusha
pop
or
xchg
in
scas
mov
pop
ds
das
js
pop
push
sbb
out
sar
xchg
aaa
xlat
mov
aad
faddl
and
cli
xor
scas
gs
int3
push
fyl2x
pop
cli
push
cmp
pop
push
xchg
ret
aam
adcl
ja
xor
add
xchg
ret
outsb
fldcw
push
jg
lock
inc
jbe
push
faddl
mov
mov
push
jne
jp
popa
insl
jmp
dec
cmp
mov
inc
inc
jb
das
fstps
and
arpl
push
nop
cmpsl
out
test
adc
es
dec
dec
imul
cmp
pusha
pop
imul
sub
repnz
inc
cmp
pop
sahf
into
xor
mov
pop
out
mov
sub
lret
pop
lcall
inc
in
mov
jl
dec
sbb
push
outsl
rcr
fchs
test
mov
jo
mov
out
lods
fwait
mov
outsb
sbb
loop
jo
lods
mov
dec
pusha
ljmp
jbe
cmp
daa
shll
enter
or
leave
lds
out
sbb
inc
lods
outsb
inc
sub
mov
inc
in
imul
int3
or
inc
mov
call
add
mov
xchg
or
pop
fdivp
jecxz
cmp
in
push
and
sub
rep
cmc
loopne
subb
test
fsubrp
dec
xchg
imul
sub
addr16
sbb
xchg
icebp
adc
lea
xchg
test
sub
sub
mov
dec
pop
and
bndstx
lret
push
xchg
pushf
leave
add
pop
sbb
pop
jo
cli
xchg
add
outsb
and
push
push
clc
out
out
aam
sub
or
out
lea
mov
icebp
data16
jno
out
inc
mov
repz
test
clc
xor
test
call
jne
scas
cmp
sahf
adc
icebp
out
xchg
mov
adc
addr16
in
imul
aas
dec
dec
fs
rclb
xor
sub
out
fildl
push
les
insb
jle,pt
ret
jb
pop
dec
fsubl
fisttps
cmpsb
mov
push
cmpsl
cmpsb
inc
adc
mov
xor
jge
and
std
cwtl
das
fistpl
pop
cmp
jmp
sub
lock
aam
jl
push
push
or
mov
daa
setns
and
sar
fstl
insl
cmpsl
cwtl
xchg
mov
mov
addr16
add
data16
jb
ja
sbb
mov
sub
pop
pop
inc
sbb
outsl
dec
out
aaa
cli
push
lret
fwait
ljmp
imul
push
fldt
mov
and
add
dec
loop
stc
test
mov
fsubs
xchg
jnp
scas
out
jp
mov
std
add
roll
sbb
inc
test
jne
fidivrs
cmp
pushf
bound
pop
cs
mov
lods
movsb
inc
adc
cltd
out
cli
pop
mov
clc
xorb
in
push
fdivl
nop
sbb
enter
out
into
movsl
daa
jb
dec
mov
push
jo
sub
jg
pop
int3
adc
xchg
add
or
sbb
jmp
outsb
movsl
int3
mov
cmp
fbld
js
adc
pop
add
pop
fwait
dec
cwtl
xor
inc
sub
cwtl
jmp
cmp
xor
or
mov
out
insl
sub
adc
pushf
sub
rolb
addr16
rclb
push
stos
push
nop
arpl
outsb
cltd
pop
pop
jle
mov
cwtl
push
sub
sub
sub
or
jge
inc
gs
arpl
stos
sbb
jge
cmp
push
sti
sbb
movsb
cmp
ja
jae
pop
push
clc
arpl
jae
dec
push
adc
sti
ss
in
xchg
jmp
jecxz
jne
imul
lahf
and
dec
into
sarb
loopne
daa
mov
and
scas
sub
insb
sbb
in
jecxz
sbb
popa
call
pusha
in
mov
shll
test
or
sbb
js
enter
outsl
stc
sbb
or
lcall
sub
mov
das
iret
xor
pop
fwait
mov
dec
adc
adc
lods
call
jne
shlb
mov
test
outsb
jne
es
sbb
sbb
adcl
mov
data16
lcall
out
aaa
lds
insb
push
fadd
sbb
in
shrb
jnp,pn
sahf
sti
mov
outsb
or
mov
xor
icebp
pop
push
cli
adc
fs
mov
xchg
loope
inc
leave
pop
sbbl
sbb
xchg
shll
addr16
cmp
xchg
xchg
test
loopne
shlb
add
lea
stc
stos
jl
pop
mov
add
jge
inc
in
sub
cmp
sbb
adc
inc
decl
fildll
stc
fstl
pop
adc
xchg
mov
jl
cltd
add
pop
push
lret
pusha
insb
mov
faddl
lahf
outsb
inc
pop
addr16
mov
mov
push
sti
mov
sahf
xchg
mov
pop
add
aaa
loope
lret
shll
push
cld
xchg
lods
cltd
out
or
dec
push
dec
inc
cmp
pop
jmp
notb
mov
sub
or
pop
les
jno
cwtl
sbb
or
shl
call
sbbb
mov
repnz
pop
out
mov
fcmovnbe
pop
pop
xor
inc
icebp
pop
decl
or
add
test
orl
shlb
and
mov
pop
jge
dec
jle
push
jb
hlt
push
sub
xchg
outsb
lahf
push
xchg
adc
notb
push
add
dec
inc
xlat
nop
mov
ret
cmc
sarl
push
out
je
push
in
and
sub
ss
mov
sub
pop
add
cld
sub
test
hlt
fldcw
loopne
sahf
jl
inc
into
test
mov
cmc
jp
test
add
cwtl
nop
ss
fiaddl
inc
jge
scas
adc
jge
pop
loopne
jnp
add
pop
and
sahf
cs
aam
imul
imul
jnp
sti
lock
popa
push
ret
int3
imul
xchg
xor
movsb
inc
mov
fnsave
shl
ret
loop
in
pusha
jmp
and
sub
pop
inc
jl
scas
sbb
and
and
dec
gs
aam
daa
out
sbb
cmpsl
es
imul
jecxz
subb
and
stc
pop
loop
sub
aas
mov
or
loop
ss
insl
adc
add
insb
xchg
sub
lods
rcrb
sbb
dec
popa
sbb
rorl
aaa
cmp
mov
lock
push
dec
js
aas
loop
hlt
pop
aad
cmp
je
pop
js
imul
dec
sbb
push
shlb
roll
sub
dec
xchg
ret
les
loope
xor
xorl
out
add
lea
sbb
cld
xor
lahf
iret
push
and
pop
pop
push
xchg
popf
and
cld
scas
rcrb
fcmovu
cmpsb
add
add
in
ljmp
repz
fiaddl
xor
xlat
jmp
jg
mov
mov
push
aaa
xchg
mov
cmp
lock
jno
loope
push
dec
fisubs
js
rorb
fwait
aas
bound
and
test
inc
out
mov
mov
in
lcall
stos
cs
push
loope
imul
mov
mov
push
fisubrl
add
ja
fsubl
push
pop
int
add
sahf
test
sbb
push
movsb
lahf
mov
sbb
jae
inc
fwait
pop
dec
mov
jno
jnp
in
fildl
nop
xchg
xchg
add
cmpsl
mov
push
jne,pt
push
fiaddl
xor
and
test
mov
mov
sti
inc
sbb
cmpsb
or
lret
sbb
push
call
push
fidivrs
popa
ret
mov
pop
insb
sub
push
sub
enter
jl
pop
movsl
iret
ja
mov
push
jnp
and
lret
inc
iret
pushf
xchg
push
mov
ret
cld
rclb
add
xchg
xchg
dec
fnstsw
insl
lods
aas
inc
add
popa
sbb
js
xchg
mov
xchg
out
in
aaa
inc
jb
aaa
xor
insl
cmp
out
sti
aam
ds
sub
aas
arpl
or
lretw
in
sbb
lret
add
lret
xchg
mov
mov
cmp
addl
ljmp
lahf
sbb
cs
inc
out
aas
xorl
push
jno
stos
repz
or
push
vdivss
gs
jl
das
push
push
mov
movsb
mov
std
ret
bound
xlat
repnz
cwtl
stc
dec
adc
std
adc
fldt
mov
inc
mov
les
cltd
mov
aad
das
outsb
mov
call
jb
inc
and
inc
shrl
scas
test
xchg
and
ss
lea
mov
mov
lds
push
push
or
stos
mov
sub
sub
add
sub
mov
mov
divb
bound
pusha
adc
das
or
leave
testl
enter
xchg
push
faddp
and
cwtl
test
cltd
or
outsb
xchg
test
mov
in
ficoms
inc
cmp
dec
sbb
test
cmp
loopne
xchg
xor
shlb
cs
inc
push
adc
outsl
movups
jae
jmp
fsubrl
or
dec
icebp
inc
adc
cmp
out
pop
rcr
repz
jmp
inc
pop
jge
cmpsb
jbe
jg
fidivs
xorl
repnz
inc
add
icebp
cmp
test
das
pop
mov
mov
repz
sbb
daa
in
push
push
cmp
insb
push
jg
loopne
or
sub
xchg
xor
and
or
push
pop
jmp
mov
addb
shll
mov
gs
addl
mov
lcall
xchg
bound
fs
add
push
and
roll
xor
mov
aas
in
push
add
xor
mov
sbb
push
jae
out
lret
adc
shll
out
pop
repz
out
in
iret
push
cs
jmp
sti
fcoml
sbb
fsubl
movsb
loopne
cmpsl
std
mov
inc
adc
cmp
jmp
movsl
push
call
mov
mov
cli
push
add
and
push
dec
mov
lcall
mov
add
add
mov
cmp
repz
sub
stos
xchg
pop
in
outsl
in
flds
mov
inc
leave
inc
test
bound
bound
sbb
loop
xchg
adc
pop
sbb
jb
jo
dec
push
lods
loop
jb
outsl
jbe
in
mov
scas
pop
test
sbb
jnp
in
xchg
push
testb
push
cli
stos
cmp
in
cmp
daa
lcall
push
ss
popa
jmp
inc
jb
mov
fistpl
xor
shll
int
scas
adc
pop
cmpsb
jbe,pt
xchg
cmp
push
out
dec
mov
movsb
mov
mov
add
dec
nop
mov
mov
stos
outsl
ret
fwait
add
push
imul
xchg
xchg
add
jp
cmp
xor
stos
mov
das
loop
mov
mov
into
inc
into
xchg
push
push
dec
sbb
sub
inc
push
inc
add
jl
dec
xor
push
push
ret
gs
nop
pushf
stc
mov
push
inc
dec
push
push
push
cltd
mov
mov
add
xor
in
lds
pop
pop
sbb
mov
adc
adc
cmp
gs
pop
and
xchg
fstps
cmp
jg
mov
je
jecxz
xchg
out
add
scas
test
sub
cmp
adc
inc
add
mov
xor
pop
pop
adc
push
das
jmp
pop
test
pop
sub
adc
mov
mov
sahf
jecxz
rolb
sbbb
cmp
std
or
ljmp
addb
outsb
in
lods
out
jo
out
bound
aam
cmpb
test
jl
pop
xor
jmp
fmul
sbb
xor
cltd
xor
xor
pop
jp
sub
fbstp
in
fsts
pop
inc
data16
or
clc
jp
mov
push
xor
push
insb
mov
xchg
lahf
addb
lahf
imul
mov
repnz
aam
fwait
and
cltd
add
push
adc
jecxz
and
dec
rcrl
pushf
test
imul
movsb
movsb
add
xorl
mov
push
adcl
pop
jp
mov
pop
loopne
push
shr
imul
mov
jmp
popf
imul
imul
lea
lret
xor
pop
inc
mov
ljmp
mov
jbe
pop
cmpsl
lcall
aam
mov
cltd
add
test
jo
call
adc
add
sbb
daa
dec
xchg
xchg
movsl
pushf
imul
shl
loop
push
jbe
mov
aas
and
add
mov
imul
push
sub
je
aad
and
stos
pop
push
in
insb
lods
insb
dec
xchg
fwait
test
rcrl
and
cmp
ss
mov
cld
jg
xor
add
lea
mov
sub
sub
push
and
outsb
lret
mov
adc
cmp
sub
outsl
mov
enter
mov
insl
inc
dec
lods
mov
cmp
pop
out
dec
popf
cmp
push
into
jbe
cmp
sbb
or
dec
inc
push
mov
lods
fstps
dec
call
sub
xor
xchg
mov
push
sahf
and
adc
lret
repnz
jge
or
addl
mov
pop
sahf
frstor
mov
and
jo
mov
test
jnp
paddsb
test
enter
iret
inc
adc
add
cli
out
cmp
pop
stos
sbb
push
movsb
xor
xorb
loop
outsl
cli
lock
rcrl
push
cmp
orb
call
fidivrs
cwtl
scas
pop
xor
push
lcall
lret
xchg
sbb
jg
xor
leave
jge
roll
shll
gs
jno
xchg
xor
xor
call
adc
xchg
pop
mov
xchg
jo
das
mov
dec
xchg
cmp
push
sbb
mov
cmpsl
ret
int3
out
mov
add
ret
stos
mov
push
jmp
mov
test
dec
data16
pop
fildll
arpl
cmc
data16
lret
push
mov
mov
popa
imul
dec
push
adc
push
ljmp
xchg
cmpsb
repz
xchg
test
xchg
hlt
ja
test
and
testl
sbb
loopne
lea
mov
dec
dec
lods
shl
out
les
dec
jl
insl
cmpsb
jb
inc
shrb
add
imul
xor
jl
jnp
xor
sbb
lret
dec
jbe
jnp
std
add
mov
adc
dec
mov
pop
pop
xor
nop
mov
hlt
pop
mov
adc
jecxz
push
ret
mull
shl
lahf
popa
sub
dec
sbb
sub
add
cmp
jae
inc
addr16
inc
mov
je
int3
jo
scas
cmp
jb
pop
sub
adc
dec
pushf
push
in
int
ja
add
movb
cmpsb
jne
daa
xor
mov
cmp
sbb
push
divb
outsl
sub
fists
cmpl
jmp
add
mov
incl
push
mov
adc
test
and
stos
clc
mov
jne
pusha
rcrb
mov
dec
lcall
push
lar
xchg
lret
fwait
in
and
inc
cmp
xor
xchg
inc
stc
dec
insb
pop
movsl
aad
loope
or
ds
sbb
inc
loope
imul
and
mov
xor
adc
imul
lret
in
call
pop
push
cmp
pop
inc
inc
mov
cmpsl
lcall
mov
push
pop
stc
pop
pushf
incb
mov
or
and
int
rolb
dec
jecxz
mov
int
pop
fstps
lahf
lahf
nop
loop
aaa
inc
loop
and
mov
into
xor
shll
into
cmp
scas
test
mov
dec
sub
push
dec
clc
inc
adc
jp
jecxz
out
clc
cwtl
ds
fbld
ja
xchg
stos
mov
cmp
repz
aaa
rcrb
pop
mov
std
js
testl
cs
jne
fucomi
pop
mov
xchg
fadds
iret
xchg
scas
sub
sbb
lsl
push
mov
cwtl
aad
mov
push
xor
or
push
les
scas
push
xchg
lock
insb
fidivl
sbb
add
sub
fimull
nop
push
xchg
sub
dec
push
clc
or
xchg
out
loop
add
mov
sbb
xor
fwait
add
or
mov
imulb
data16
fistpl
je
sub
icebp
push
test
mov
mov
sub
mov
cwtl
shl
in
aam
sub
aas
adc
fwait
push
aaa
inc
test
mov
cld
jno
jl
ja
sbb
cli
out
aaa
adc
gs
mov
mov
pusha
stc
sub
nop
cmc
mov
lods
cmp
sub
cmc
dec
cmpl
aam
mov
repz
jb
popf
jl
out
mov
std
add
mov
arpl
scas
jmp
add
jmp
andl
data16
cmc
in
push
cltd
in
movsl
in
inc
xchg
repz
jp
mov
adc
pop
cmp
mov
cld
or
filds
mov
pushf
cmpb
scas
sbb
ljmp
xor
sbbb
jge
sub
mov
pop
sub
fdivr
mov
out
loope
pop
sub
push
push
and
and
mov
jmp
pop
adc
out
iret
icebp
sub
arpl
inc
leave
lock
add
addr16
out
inc
pop
in
imul
enter
sahf
sub
mov
rorb
stc
push
dec
dec
sub
ret
push
or
pushf
mov
adc
push
loopne
xchg
pusha
add
mov
inc
popa
inc
xchg
and
cmp
and
aad
scas
adc
into
std
xchg
leave
iret
outsb
add
ja
add
ds
fwait
cmpsl
std
test
cmp
aaa
push
mov
sub
ljmp
shll
dec
cs
ja
add
lcall
lods
pop
cmp
dec
cmpsl
cld
ss
ljmp
xor
sbbb
icebp
daa
loop
into
lcall
inc
cmp
test
andb
or
imul
aad
daa
pop
and
and
insb
outsb
jno
movsb
inc
int3
sub
pop
ljmp
sbb
mov
hlt
adc
fs
jno
cwtl
call
and
add
leave
inc
add
mov
hlt
lea
mov
pusha
xor
jne
clc
push
xchg
imul
xchg
mov
jp
jne
dec
adc
test
and
cld
repz
aas
mov
xor
mov
xor
leave
mov
in
mov
sbb
sti
xchg
push
je
sahf
rorl
addr16
movsl
mov
jl
cmp
and
rol
sub
or
add
mov
cmpsb
inc
mov
movsl
sbb
push
ds
mov
cmpsl
inc
cmpsl
sub
mov
ss
cmp
aam
mov
mov
and
xchg
sbb
xchg
add
mov
jnp
pusha
push
orl
decb
xchg
jns
xor
inc
gs
xchg
mov
test
and
and
sbbb
cmpsb
stc
mov
push
cmp
lret
adc
sarl
cmp
dec
add
in
ss
sub
mov
mov
pushf
fldt
sahf
out
popa
push
cwtl
dec
or
push
ret
dec
movsb
clc
and
clc
mov
fldt
jle
aaa
in
cmp
ret
aam
lods
jle
insb
pop
mov
dec
add
ficompl
stos
aad
orb
ja
sub
pop
aas
pop
mov
in
mov
add
stos
insb
out
sbb
lcall
jbe
out
mov
fadds
push
out
pop
arpl
movsb
loope
jo
lods
and
scas
lahf
pop
pop
iret
inc
cmc
dec
jnp
mov
aad
or
fcoml
pop
daa
dec
cmp
inc
dec
jl
jg
and
push
mov
shrb
inc
lods
xlat
and
popa
ficoml
rcrl
jne
mov
adc
lods
in
enter
leave
mov
fldcw
or
xchg
mov
mov
mov
dec
xchg
push
lahf
cmc
cmp
mov
arpl
inc
mov
mov
outsl
push
jo
inc
lret
push
mov
imul
cmp
stos
xchg
jb
fimull
data16
cmp
push
out
pop
jns
out
sbb
addr16
mov
mov
xchg
add
in
or
xor
out
jne
icebp
aas
push
or
mov
mov
xor
xchg
ret
mov
xchg
xchg
ss
cmp
mov
addr16
jg
fisubrl
int
shll
insl
sub
pop
outsb
dec
mov
sbb
scas
jg
sub
sub
fcomp
pop
aad
movsb
and
xchg
ffreep
mov
fs
dec
rcrl
xlat
xchg
sub
aam
int3
dec
sub
jmp
out
sub
loope
cmpsl
xchg
push
scas
jle
pop
push
or
or
in
add
lods
xor
cmp
pop
repz
pop
fbstp
mov
xchg
mov
push
leave
adc
cwtl
xor
push
nop
inc
fwait
cmc
test
jmp
out
dec
stc
shr
mov
jb
inc
inc
lods
adc
pop
nop
mov
fsubrl
cwtl
repz
xchg
shll
mov
sub
adc
lret
lcall
sbb
mov
dec
push
xchg
sbb
pushf
orl
mov
mov
and
sbb
jg
mov
jne
lds
test
sbbb
adc
mov
lahf
test
orb
mov
sbb
popl
fs
pop
push
repnz
test
aaa
fsubrl
rorl
inc
pop
xchg
push
mov
xchg
outsb
out
cmp
mov
sub
out
sbb
sub
das
mov
vpmadcswd
cmpsb
outsl
mov
mov
mov
sbb
xor
popf
stos
pop
adc
fucomip
and
pop
in
mov
mov
lock
mov
jae
jle
inc
aam
popf
pop
dec
mov
test
mov
cmp
jne
imul
cltd
xchg
push
jmp
and
call
xchg
xor
mov
popa
scas
aaa
out
pop
mov
jecxz
scas
jnp
lock
cmpsb
sub
sub
jb
xchg
ret
or
adc
loope
fsubrl
adc
inc
popa
pop
adc
lret
sbb
inc
jl
inc
sub
inc
push
aas
imul
mov
rcl
outsb
push
xor
fiadds
and
dec
cmp
gs
div
jge
popa
test
test
pop
lret
mov
cmp
or
pop
xlat
adcw
stos
inc
sub
lods
mov
push
jl
xorb
in
jmp
lahf
inc
call
inc
mov
les
add
fsub
jp
or
pop
aas
fcmovnb
lret
movsb
cs
jnp
sub
sub
inc
xchg
popf
adc
andb
lods
inc
lahf
jle
jl
cmp
outsb
cmpsb
data16
out
idivl
cld
fdivs
mov
pop
cld
ret
ja
stos
lcall
fiadds
ffree
sarb
frstor
and
push
and
adc
and
jg
push
movsl
hlt
lret
test
cmp
lods
push
icebp
test
insb
arpl
cmp
add
cld
adc
lods
aad
jg
icebp
push
jge
sub
outsb
ljmp
push
out
fisubl
lods
lret
lods
cmp
aas
ficoml
sti
xchg
xchg
mov
test
les
jmp
test
arpl
jbe
sbb
es
iret
insb
jbe
neg
sub
fdivr
scas
daa
adc
cmp
lcall
stc
inc
mov
imul
ljmp
out
out
add
inc
inc
in
jmp
into
mov
mov
and
sbb
mov
leave
jo
clc
in
or
bound
inc
jb
xor
in
xor
imul
fnsave
jecxz
gs
les
ljmp
pop
mov
mov
cli
pop
jmp
out
enter
cmp
pop
adc
fadds
stos
sub
movsb
sub
sub
mov
movsl
aas
movsl
and
loop
clc
gs
xor
popa
lahf
shll
mov
mov
pop
cmp
out
mov
ja
and
cmp
dec
push
stc
push
dec
add
in
cli
pop
push
test
lcall
jp
mov
adc
out
aas
or
fldcw
xor
xchg
mov
les
ljmp
scas
lods
dec
in
mov
jb
sub
mov
negb
call
cmp
ret
shr
daa
mov
jg
inc
sub
push
push
add
outsb
mov
sahf
test
dec
inc
aad
aam
xor
pop
icebp
testl
or
cmc
jp
cmp
iret
aaa
mov
xchg
adcb
xor
das
shll
fs
push
mov
arpl
mov
adc
cwtl
sub
fldcw
lds
stc
negb
mov
inc
pop
push
cmc
fbstp
jl
arpl
xchg
jmp
push
xchg
stos
stos
cmp
imul
pop
ret
add
cmpsl
rcrb
fiadds
sbb
popf
dec
ret
addr16
xor
mov
std
adc
sub
inc
out
test
dec
xor
aaa
sbb
pop
loop
aaa
cmp
jmp
pop
sbb
cwtl
mov
notl
pop
or
shlb
fimuls
xor
nop
sub
jecxz
sti
sub
xchg
dec
inc
shr
pop
fwait
pop
movsb
xchg
push
xor
push
shl
sbbl
into
pop
cmp
shr
cmp
vpcomd
jecxz
mov
fucomip
ds
fs
jnp
cmp
mov
push
call
lret
clc
fdivrs
cmp
mov
out
outsl
cmc
enter
daa
out
cmp
addl
jp
jge
fwait
insl
jl
out
ret
mov
sarb
dec
in
xchg
xor
lret
inc
int
outsb
jo
mov
test
mov
adc
sub
popf
outsb
lcallw
call
imul
addr16
xchg
imul
orl
insb
inc
add
mov
and
push
test
stos
pop
imul
and
mov
push
out
pop
mov
mov
inc
or
test
jmp
mov
push
fmul
mov
lock
scas
imul
popf
ficompl
shlb
push
jnp
outsl
movsb
cli
mov
clc
jg
cmp
push
sbb
leave
or
lock
cli
cmp
in
sbb
inc
daa
xlat
jbe
dec
xorl
test
lret
lcall
xchg
dec
adc
pop
sub
dec
inc
push
adc
add
push
loop
mov
sub
xchg
cmc
repnz
mov
call
xorl
mov
jge
mov
insl
and
jnp
in
mov
aad
pop
jg
test
aas
es
and
xor
test
repz
out
jle
adc
aad
sbb
mov
sarb
or
xchg
mov
mov
lods
and
loopne
lea
pushf
shrl
add
in
mov
inc
push
enter
or
fcoms
popa
dec
ror
adc
xlat
gs
imul
inc
sub
cwtl
and
loopne
or
cmp
inc
add
xchg
aas
xchg
fimuls
sbb
mov
dec
and
dec
repz
xchg
jg
add
lds
movsb
or
xor
xor
jl
fcmovne
mov
int
bnd
push
sub
push
mov
and
xor
lods
cmp
icebp
ss
dec
out
hlt
sub
comiss
xor
cmp
pop
ljmp
mov
xchg
mov
cli
fwait
lods
hlt
sbbb
mov
cmp
ja
and
loopne
lahf
call
cmp
les
out
mov
stos
pop
xor
mov
push
xchg
mov
outsb
loop
jmp
mov
inc
mov
mov
scas
outsl
movsb
adc
ret
sbb
sbb
in
jp
mov
lea
xorl
push
jle
sub
mov
sbb
in
dec
push
test
xor
pop
xor
dec
in
xchg
push
add
rcrl
ret
repz
mov
leave
in
or
push
out
pop
push
mov
test
cmp
or
dec
ret
push
sbb
push
outsb
mov
add
shlb
repnz
sarb
iret
int3
lds
pop
icebp
sub
cmp
imulb
cmp
mov
jge
add
pusha
inc
mov
addr16
ja
int
pop
mov
rcr
sbb
imul
stc
lret
js
add
in
sar
xor
pop
push
push
mov
mov
clc
mov
and
sub
pushf
stos
cmp
and
shlb
in
cmp
test
lods
lahf
add
inc
das
fistl
and
outsb
add
loopne
icebp
lods
add
add
add
inc
sahf
orl
out
mov
es
cmpsb
xchg
cmpsb
stc
pop
mov
mov
jae
push
imull
jmp
ficomps
enter
hlt
rcl
fucomi
jns
das
mov
or
repnz
scas
scas
jb
enter
in
sbb
adcb
mov
rolb
out
adc
cmc
loop
mov
mov
dec
popa
jno
push
scas
ss
movups
js
lcall
mov
lods
dec
lds
cwtl
enter
sub
aad
xchg
pop
sbb
xchg
mov
movsb
xchg
in
push
rolb
mov
out
sub
or
lock
pop
rcrb
add
or
mov
incl
lods
notl
fisttpl
sbb
outsb
in
push
pop
out
repz
repnz
inc
mov
lret
dec
xor
in
dec
test
sub
shll
push
jecxz
dec
xchg
push
fs
loop
icebp
sub
sbb
lret
test
mov
jp
mov
cmpb
pop
add
pop
aad
aam
es
xchg
aad
frstor
mov
imul
cli
mov
stos
mov
jbe
xor
pop
xchg
and
ds
loopne,pt
into
xor
add
push
mov
fs
sbb
mov
enter
jp
push
cmp
add
movsl
sahf
cmp
pop
xor
rcll
mov
scas
fstps
je
imulb
in
or
clc
lahf
fwait
int3
cmc
stc
push
sbb
inc
aaa
mov
push
das
sti
lods
sahf
or
push
bound
xchg
and
into
sbb
arpl
push
dec
mov
mov
rcl
in
aaa
leave
bound
jnp
test
adc
js
es
xchg
mov
fwait
xor
lea
lods
add
xor
xchg
decl
loope
jg
hlt
icebp
mov
push
jmp
test
sub
rorb
lods
pop
leave
dec
mov
cmp
fadds
push
dec
icebp
mov
dec
jb
or
fildl
jb
pop
mov
imul
push
insb
mov
mov
sub
dec
xchg
fs
mov
ficoml
pop
test
inc
pusha
in
pop
and
xlat
mov
or
aad
adc
or
iret
int
popa
cmpsl
rcrb
pop
sub
sbb
fs
cwtl
pop
mov
push
popa
xor
cmpsl
xchg
cmp
clc
adc
mov
dec
mov
test
xchg
pop
dec
inc
inc
testl
xlat
outsb
lock
push
dec
sar
jo
je
adc
iret
adc
xor
idiv
mov
or
mov
mov
mov
dec
test
jg
call
pop
mov
fmull
aam
mov
sbb
xchg
std
xchg
and
adc
fisubs
adc
push
adc
pop
notb
in
or
outsb
jnp
out
fsubrl
inc
sub
inc
jns
pop
fsubrl
addr16
push
dec
fsts
or
adc
push
icebp
inc
inc
adc
hlt
movsl
xchg
xor
pusha
jle
cltd
cltd
dec
mov
fs
jle
popl
sub
push
fs
scas
xor
and
nop
popl
and
movsl
mov
mov
notl
loope
mov
adc
push
scas
movsb
mov
out
jle
jne,pt
pop
ret
in
in
ja
add
jge
call
jns
push
data16
fiadds
cltd
or
pop
inc
icebp
aad
sbb
ret
push
xor
xlat
dec
sahf
inc
xchg
imul
xor
pop
into
ret
mov
popa
push
out
sbb
addb
pop
fwait
mov
push
push
lea
mov
mov
push
cs
bound
add
mov
adc
ficoml
push
push
sub
mov
cmpsb
mov
fidivl
mov
roll
testl
jg
sub
mov
leave
inc
out
mov
mov
repz
insl
dec
loopne
and
and
push
and
int
mov
xchg
in
or
or
ret
cmc
in
sbb
mov
pushf
ficompl
cmp
add
push
adc
fwait
je
mov
sbb
mov
jge
dec
xorl
inc
xor
sbb
dec
mov
shll
inc
ret
inc
mov
push
les
xor
roll
sahf
nop
lods
out
int
aam
jbe
fidivrs
in
jnp
jnp
cs
push
mov
imul
fdivrs
adc
ret
inc
adc
and
popf
xchg
sarb
xchg
jg
dec
add
popf
push
pop
xor
xor
mov
adc
adc
es
movsl
sub
movl
cmpsl
pop
push
sbb
or
ja
cmp
mov
jg
inc
mov
push
in
pop
shlb
sub
xor
sbb
rcr
cwtl
enter
loopne
dec
cs
insl
xor
sbb
dec
or
roll
dec
repz
mov
push
sbb
mov
cld
ja
dec
mov
add
cs
aam
mov
popa
jg
imul
or
push
pushf
sbb
xor
xor
dec
enter
xor
aaa
and
insl
nop
dec
filds
call
roll
xchg
xchg
fistpll
aas
mov
pop
push
lahf
mov
fsubrs
mov
adc
cmpsl
test
and
mulb
out
outsb
cmp
inc
jns
jle
jp
movsl
dec
and
adc
and
lea
sahf
mov
call
mov
xchg
ret
daa
jbe
cld
or
test
xchg
mov
or
leave
pop
dec
fstps
mov
rolb
adc
xor
mov
push
add
imul
cltd
pop
sti
lret
int3
scas
jbe
outsl
popa
ficomps
dec
sub
xchg
rorb
fdivrl
xchg
mov
subl
fildl
jae
sbb
out
and
pop
sbb
fisttps
cmpsb
mov
imul
shlb
push
rcrl
cmpsl
je
mov
lea
pop
or
arpl
jnp
dec
xor
shll
inc
test
pop
out
jno
cmp
jp
ret
push
es
loop
ja
and
adc
push
inc
cwtl
inc
or
adc
push
ss
cwtl
das
xchg
pop
leave
push
xor
clc
cmp
inc
sbb
push
pop
outsl
icebp
mov
orb
hlt
retw
jmp
mov
mov
and
pop
test
mov
or
stos
mov
cmp
dec
mov
jmp
sub
inc
iret
xchg
mov
inc
sar
mov
jg
repnz
push
add
push
out
outsl
mov
js
orl
fwait
adc
sti
add
fsubs
fdivrp
jne
outsl
sub
ret
inc
mov
cs
sub
jne
push
cmp
out
sub
sbb
fs
loopne
adc
dec
mov
iret
jb
push
out
jl
loop
sub
lahf
inc
ljmp
fnstcw
jae
ss
pop
xchg
inc
fsubs
outsb
test
out
aas
dec
je
cmpsb
loope
fnstcw
xchg
jbe
and
ret
inc
je
lods
testl
cld
xor
push
ret
btr
jns
xchg
pop
lahf
out
inc
xor
lods
lods
out
push
dec
cltd
test
adc
add
stos
xchg
mov
ja
outsl
xchg
mov
data16
filds
xchg
dec
scas
insl
in
mov
push
jle
mov
cmp
or
mov
call
add
popf
push
fwait
adc
xchg
pop
lods
xchg
dec
out
jmp
mov
inc
jae
jnp
and
mov
in
and
insl
jl
ja
insb
adc
inc
mov
jae
inc
test
repnz
iret
push
sub
pop
test
ljmp
aaa
repz
inc
pushf
add
xor
mov
cs
cmp
mov
inc
sub
xor
or
das
subb
movb
push
sbb
xchg
push
add
outsl
stos
sahf
add
movsl
mov
sub
aaa
xchg
out
in
mov
pop
xor
int
and
lods
dec
rcl
out
and
adc
ss
xlat
xor
pop
mov
lret
jne
loop
sbb
add
add
out
cmp
std
adc
cmp
in
out
and
pop
cmp
and
rcr
mov
cmpsb
pop
fisubrl
lea
jmp
push
call
popa
rcll
mov
or
int3
lcall
sti
jg
cmp
lods
faddl
movsl
or
out
mov
add
es
add
pop
aam
pop
fwait
into
frstor
fisubrs
enter
lods
cli
scas
out
das
inc
les
xor
mov
outsb
test
daa
lcall
lods
cli
push
fldcw
rorb
loop
rcl
push
push
or
mov
push
repnz
and
imulb
outsb
jecxz
jb
xor
std
ror
fsubp
mov
jp
sub
jo
jl
sahf
aam
sbb
jg
jne
xchg
inc
mov
aad
leave
or
mov
sahf
rcr
in
movsl
push
and
lods
pushf
push
insb
mov
pusha
dec
jb
cwtl
push
popf
sbb
cli
sbb
fstl
sub
decl
mov
cmp
clc
adc
stc
xchg
cmp
sub
push
mov
out
sbb
mov
int
or
xor
sub
insb
mov
fmull
ja
xor
sbb
xchg
stos
imul
dec
out
cs
rorb
daa
push
xchg
cmp
in
push
sub
enter
jnp
push
in
sahf
pop
rcrb
cmp
jo
fs
mov
sbb
jno
cmpsl
divb
sbb
sub
in
pop
pop
xor
ret
mov
in
sub
jecxz
and
fadd
sub
repnz
push
and
push
xchg
jne
aad
xor
xchg
js
jb
xor
jp
dec
inc
bound
dec
pop
mov
lock
pop
outsb
loop
and
pop
int
lods
cmpsb
pushf
dec
jmp
mov
or
inc
xorl
ret
inc
hlt
sub
lods
or
jbe
cmp
repz
sti
xchg
mov
sub
jg
fsubl
xchg
jae
in
repnz
sti
fsubl
and
jl
ds
sbb
inc
push
mov
add
mov
inc
test
ficoms
fs
dec
and
mov
lret
mov
add
and
dec
inc
push
enter
jno
pop
aas
lea
cmpsl
mov
inc
clc
out
fdivrp
addr16
sub
sub
jns
or
add
scas
jns
test
pusha
movsb
mov
outsl
or
std
outsl
and
hlt
cwtl
std
adcb
or
mov
addr16
and
iret
iret
les
sbb
lret
in
rclb
pop
orb
pop
xor
inc
ja
xchg
test
imul
lret
xor
and
ret
pop
shrb
mov
dec
test
cli
std
dec
das
and
jge
rcrb
push
xlat
mov
pop
push
mov
mov
imul
xchg
mov
cwtl
cmp
mov
mov
aas
push
add
push
cltd
jns
mov
repnz
pop
stos
pop
movsb
fdivl
jo
rorb
inc
stc
dec
add
ret
dec
stc
dec
mov
cmp
lds
dec
xchg
lahf
rol
sub
aas
arpl
repz
cmpsb
xchg
stc
sbb
das
movsb
mov
inc
cld
lahf
sahf
lea
xor
sahf
mov
or
cmc
push
cmp
loope
cmp
xorl
pop
sbb
mov
cmpsb
push
sbb
dec
cli
pusha
outsl
in
aaa
lock
aam
pop
cmpsb
pop
jp
bound
push
arpl
mov
decb
xchg
push
mov
aaa
adc
inc
inc
pop
push
dec
shl
dec
or
gs
inc
test
cmpsb
pop
add
mov
cld
lods
insl
xor
sbb
sub
aaa
ror
stos
test
repnz
jae
dec
movsb
sbb
mov
sub
mov
or
jnp
adc
pop
int3
push
xchg
cmpsl
ds
sub
in
pop
inc
mov
loopne
jb
in
shrb
jbe
and
push
mov
mov
shll
jne
mov
hlt
loope
icebp
dec
loop
pusha
push
jnp
and
jae
jmp
stos
jae
out
ret
test
mov
push
out
fidivl
inc
adcb
mov
jne
aam
scas
jg
dec
xchg
push
mov
cmc
push
mov
xor
xor
add
jae
push
bound
xchg
cli
es
pop
sbb
push
xchg
ds
or
sbb
call
test
xlat
mov
rcrl
mov
push
addr16
ja
andb
fwait
jnp
push
sbb
pop
jno
mov
fldcw
cmp
test
cltd
inc
xlat
inc
mov
mov
xor
mov
xor
sbb
push
push
jno
fiadds
xor
xchg
and
push
ret
sahf
das
ret
sbb
xabort
adc
ret
inc
incb
mov
js
ja
faddl
cmp
cs
pop
neg
inc
int
fsubs
pcmpgtw
jl,pt
in
movsb
hlt
shlb
cmp
xchg
iret
es
push
arpl
mov
sub
add
inc
mov
aam
fcmovnbe
inc
or
mov
fwait
imul
cmpsb
xchg
push
jle
fstps
push
in
add
and
call
out
jo
faddl
push
pusha
inc
and
xchg
iret
jmp
ss
out
fisttps
mov
shrb
ja
push
mov
insb
jnp
das
pop
push
das
dec
dec
pop
jge
stc
inc
or
sbb
std
xor
js
jge
shll
movsl
cld
adc
pusha
xor
out
hlt
jg
xor
mov
dec
fucomi
jnp
rorl
pop
mov
arpl
dec
mov
mov
lods
clc
stc
dec
rcrb
inc
sahf
out
popa
xor
daa
loopne
jp
inc
scas
ret
pop
and
movsb
call
xchg
jge
aas
dec
jb
insl
movswl
adc
mov
out
mov
jb
dec
cmpsl
adc
imul
ss
call
mov
in
cmp
dec
scas
test
mov
or
ffreep
pushf
aaa
movsb
inc
pusha
xor
das
rcl
stos
and
mov
test
inc
loop
daa
push
loopne
inc
cmpsb
push
adc
cmp
jge
int3
xor
filds
subl
xchg
adc
inc
jb
and
mov
popa
bound
fwait
dec
sarb
jp
jmp
sahf
aaa
adc
adc
mov
cmp
xor
sub
sbb
aas
imul
sub
cmp
adc
dec
fdivrl
jp
aas
cmc
mov
fmull
jecxz
rcrb
mov
cmp
imul
or
mov
repnz
xchg
mov
xor
shrb
dec
sub
fwait
bound
rcll
jo
js
jmp
loopne
or
xor
xor
dec
das
mov
call
daa
scas
orl
or
add
roll
shlb
repnz
daa
jg
outsl
sti
mov
jge
sbb
pusha
fldt
lea
repnz
sub
inc
lret
push
sbb
mov
lcall
add
inc
loop
iret
mov
ljmp
and
dec
push
fs
and
pusha
jmp
sub
sti
lock
jne
bswap
push
cwtl
test
pmulhuw
mov
sub
push
xchg
sub
aaa
inc
push
ss
mov
arpl
lds
pop
icebp
stos
mov
aaa
test
bound
repz
mov
shl
xor
and
enter
lahf
mov
movsl
xor
mov
jne
mov
int3
mov
adc
xchg
jns
out
ret
ja
loop
or
push
sbb
addr16
das
dec
push
pop
dec
sti
lds
dec
inc
shlb
adc
iret
sbb
mov
pop
xchg
sub
cwtl
int
or
std
bound
xor
pop
mov
idivb
lods
push
in
adc
sbb
repnz
cmp
inc
lcall
push
sub
pop
out
or
or
add
jle
push
add
inc
mov
repnz
xchg
fisubrl
lock
popf
sub
fs
mov
and
idivb
daa
jae
fwait
sbb
std
pop
repz
jo
mov
sbb
jns
gs
in
lock
movsb
push
js
sahf
jae
pop
sbb
hlt
arpl
sub
rcrb
mov
mov
jle
mov
je
add
insl
pop
push
mov
mov
sti
mov
aad
xchg
pop
fbstp
sub
adc
push
scas
or
ret
jb
push
adc
pop
xor
mov
enter
std
mov
fwait
xor
ja
test
fisubrs
jmp
xlat
sbb
bound
ss
pop
mov
push
scas
or
mov
arpl
mov
mov
and
mov
push
iret
ljmp
mov
into
push
ljmp
push
jbe
xor
imul
call
sti
fsubl
push
iret
out
repz
xor
mov
stos
aaa
sarl
mov
cmp
xlat
mov
maskmovq
negl
gs
std
jb
aam
pop
jbe
mov
pushf
into
jns
xor
push
pop
repnz
adc
pusha
push
inc
cmc
popa
push
popa
and
pop
lods
gs
mov
stc
andl
cli
or
lret
mov
dec
rclb
pusha
push
mov
cltd
leave
xchg
je
dec
sub
mov
js
xchg
std
jl
mov
push
int3
loope
xchg
mov
or
addb
jecxz
mov
push
es
fisubl
out
sti
cli
imul
mov
jnp
jmp
ds
je
fs
and
mov
insl
add
lds
push
xor
and
ret
test
arpl
ret
sub
add
xor
fs
jne
xor
jmp
outsl
push
cltd
pop
adc
pop
pop
and
xchg
mov
dec
sbb
push
mov
popa
jnp
call
out
js
pop
icebp
iret
dec
cwtl
sbb
xchg
andl
dec
lret
cmpsb
pop
cmc
jno
jns
push
call
mov
cmp
xchg
movsl
cmp
fdivr
jl
cmp
imul
push
fbstp
push
dec
lret
cmpsb
adc
iret
fcomp
pusha
cmp
jae
leave
jecxz
cmp
fldl
sbb
testl
out
inc
ljmp
pop
mov
and
jmp
jg
out
inc
loope
dec
jns
sub
dec
add
fcomi
fadd
mov
les
sbb
ja
shlb
jne
imul
jle
aaa
lahf
jno
lock
ret
cmp
dec
jg
lcall
lods
icebp
add
iret
test
popa
inc
or
lods
insb
out
pop
hlt
mov
inc
aaa
or
js
mov
movsl
ljmp
sbb
jne
stos
push
mov
cmp
std
mov
lret
mov
mov
and
dec
sbb
enter
sub
sub
adc
loope
filds
jno
inc
push
mov
adcb
xor
sbb
imul
enter
mov
loope
test
out
test
jne
mov
push
je
popf
jle
lods
int
cmc
sub
cwtl
push
and
aas
arpl
add
inc
mov
movsl
in
and
cwtl
cli
movsb
fwait
shl
lds
fs
mov
test
inc
stos
jno
daa
iret
lret
mov
add
cld
push
cmp
and
dec
call
cld
in
xchg
jne
cmp
push
insb
sahf
jge
cmpsl
pop
inc
imul
or
push
pop
push
xor
in
mov
call
arpl
ret
jno
lock
dec
pop
popa
push
movl
inc
cs
xchg
out
test
cmpsb
mov
mov
nop
call
and
insl
xchg
and
in
inc
das
sahf
aaa
mov
dec
cmc
mov
mov
outsl
fmull
fidivrs
movsl
push
and
pop
and
sub
ret
xchg
outsl
sahf
mov
adc
movsl
xchg
daa
mov
ja
pushf
xchg
aam
adc
jnp
into
pcmpgtd
mov
mov
mov
outsl
cs
mov
inc
aas
or
mov
mov
dec
lret
stos
aad
aas
mov
imul
arpl
inc
sub
inc
inc
ss
sbb
mov
inc
sbb
negl
into
cmc
inc
mov
sarb
mov
dec
daa
sbb
sbb
sbb
pop
roll
adc
mov
movsb
cld
jp
sbb
adc
dec
push
pusha
movl
call
dec
adc
mov
push
pop
repnz
sbb
shlb
jmp
ja
lods
or
xor
std
inc
push
push
call
rolb
push
or
push
push
daa
mov
xchg
mov
daa
in
jecxz
mov
dec
push
mov
mov
lea
sub
sub
push
jge
in
fiadds
jne
or
push
adc
loop
or
mov
je
sub
outsl
adc
fstl
fstl
sub
xchg
movsl
je
xor
ret
push
mov
pop
or
scas
loop
push
jne
je
push
sahf
shlb
and
mov
jb
bnd
shrl
es
pop
jecxz
push
and
jecxz
aas
int
xchg
test
cmp
mov
js
pop
push
cmp
mov
shlb
mov
scas
cmp
cmc
lock
pop
mov
subb
jmp
mov
adc
adc
sbb
jp
cmpsl
jmp
mov
repz
sbbb
dec
mov
mov
out
gs
pop
mov
xchg
add
lret
gs
in
adc
mov
gs
mov
jge
lret
mov
clc
je
sete
icebp
mov
bound
or
cld
mov
cmp
sbb
hlt
fcoml
addb
mov
xchg
mov
xor
hlt
mov
nop
popf
push
enter
mov
adc
push
inc
decl
clc
daa
cmp
sbb
pop
dec
inc
out
pushl
jno
mov
mov
imul
add
xchg
fistps
gs
dec
dec
fldenv
rcrl
pop
out
outsl
pusha
xchg
mov
sub
xor
or
push
mov
ja
ja
cmp
nop
pop
inc
xchg
rolb
sbb
xchg
fistpll
fmuls
sbb
ret
pushf
push
sbb
mov
cmp
hlt
jb
subl
scas
neg
cs
dec
dec
insl
dec
out
add
cmc
adc
cwtl
insb
inc
dec
sub
in
cmc
outsb
pop
cld
lods
mov
les
cmp
or
sub
loopne
rcrl
popa
fistps
jle
or
push
lcall
push
and
stc
inc
xor
fwait
jmp
enter
mov
xchg
jae
mov
pop
out
jnp
push
andb
cmp
cmp
ret
mov
adc
or
mov
incb
sbb
add
icebp
rorl
aaa
dec
add
or
xchg
xchg
push
dec
adc
mov
out
in
fisttps
pcmpgtd
adcb
sbb
les
cld
jo
leave
sti
lret
repz
mov
jo
push
test
test
ljmp
dec
lret
and
es
aaa
gs
jg
mov
or
das
mov
pop
mov
push
pop
repnz
in
xor
loopne
jb
and
cmp
adc
mov
xchg
ficompl
lret
orl
repnz
xchg
sbb
pop
les
bound
and
fistpll
ja
in
nop
jo
movsl
ss
pop
sub
daa
xchg
dec
mov
sub
xchg
bound
add
push
mov
ret
sub
mov
xor
push
xchg
mov
leave
je
xchg
pushf
and
js
dec
sbb
rcrl
xor
leave
cmc
imul
daa
xor
out
mov
fidivrl
je
scas
adc
xchg
inc
push
cmp
lcall
testl
push
inc
int
outsl
lds
roll
cli
or
repz
jp
js
imulb
fsubrl
mov
cmc
test
xor
clc
mov
sub
in
in
jb
adc
fwait
push
sti
int3
push
jno
pop
lock
cld
and
rorl
push
and
dec
loop
dec
sub
sub
pop
pop
mov
or
push
mov
dec
lods
sbb
push
sbbb
cmp
pop
mov
pop
jo
lahf
mov
js
fcoms
lods
mov
and
stos
and
xchg
and
push
inc
pop
adcl
sti
pop
jae
xchg
test
mov
js
pop
es
sub
fsts
push
movsl
loop
insb
mov
jp
nop
imul
push
call
sbb
mov
push
and
mov
pusha
push
outsl
and
leave
int
xor
ds
cli
jnp
adc
or
cmc
bound
mov
pop
rorl
mov
loop
ret
ret
inc
sbb
push
enter
sbb
xlat
cmp
imul
or
ret
dec
lock
iret
sub
popa
push
and
shl
mov
mov
scas
js
and
mov
jmp
push
in
int3
sbb
mov
pop
pop
jb
push
inc
jns
fdivl
xor
push
subb
ret
sbb
loop
push
dec
stos
gs
outsl
jl
repz
mov
enter
push
and
clc
ljmp
xchg
daa
frstor
in
lods
repz
cmp
fisubl
ss
mov
std
insb
cmp
jns
mov
xorl
ficomps
xor
gs
add
lret
movsl
inc
lahf
inc
mov
aad
mov
and
jnp
cld
cld
inc
adc
sti
repnz
push
repz
jb
loop
xchg
aad
lods
int
cmp
mov
push
dec
sbb
adc
jns
cmpb
in
xor
cmp
js
add
sbbl
movsl
jne
and
stc
aas
scas
and
or
sbb
loop
inc
or
push
dec
mov
daa
dec
mov
xchg
dec
data16
imul
cld
data16
cmp
fs
sub
or
xchg
push
add
xor
inc
outsb
xchg
cmp
jns
mov
ret
std
orb
sbb
dec
into
outsl
jge
jno
imul
js
ret
add
movl
mov
xchg
mov
lods
cmpsl
jmp
shll
mov
stos
mov
pop
std
and
js
push
add
mov
pop
lods
pop
insb
aaa
subl
or
push
loope
jecxz
adcb
inc
mov
movsl
insl
iret
add
lods
add
call
push
adc
or
fdivrs
clc
js
jecxz
mov
pop
and
daa
jmp
push
and
lea
imul
and
inc
mov
shrl
cs
shrb
sbb
push
cmp
orl
sbb
and
lock
jle
dec
lret
pop
or
xchg
pop
mov
stc
cmp
daa
ljmp
lea
movsb
test
call
fsubrl
jb
sub
movsl
scas
push
jmp
pop
mov
and
xchg
fsubrl
imull
jae
ret
adc
pop
aam
into
mov
loop
mov
cmc
fisubrs
xlat
mov
push
jae
add
scas
cmc
inc
cmp
inc
cmc
jo
cmp
stos
rorl
add
enter
ficoms
push
pop
insl
xor
bound
mov
xor
and
cmp
cmp
mov
adc
lcall
fiadds
fldenv
xor
pop
mov
int3
inc
push
ss
sub
push
xchg
clc
loop
mov
inc
xor
mov
jle
stc
outsl
adc
lock
adc
dec
popa
inc
and
jne
out
iret
stos
cmp
push
mov
mov
xchg
or
sub
sub
adc
js
inc
cmpsb
sbb
cmp
jecxz
stos
iret
gs
push
movsb
mov
daa
lock
xchg
pop
mov
pop
xor
movsb
xchg
out
js
sbb
push
cmp
dec
push
mov
int
mov
pop
in
mov
fstps
sbb
push
jge
mov
mov
and
and
jne
vpcmpgtw
cmp
popf
pusha
push
std
stos
xor
test
iret
inc
mov
pop
andb
in
sub
jl
dec
scas
sbb
div
lock
xor
movsl
xchg
stos
jge
and
addr16
ja
push
cmp
cltd
movsl
jmp
add
mov
fcmovb
pushf
mov
push
imul
out
idiv
mov
out
mov
repz
mov
je
movsb
and
out
in
in
mov
or
movsb
cs
int3
push
mov
stos
or
or
leave
pop
cld
and
add
pop
incb
lret
mov
sbb
add
add
and
mov
xchg
cmp
out
loope
mov
aas
into
test
iret
movsl
inc
out
jl
loope
xor
xchg
sbb
fists
jnp
lret
mov
pop
push
xor
jb
repz
lods
adc
sbb
dec
fistpl
shlb
and
int3
fldt
cmp
jb
mov
loopne
dec
int3
pop
sbb
jl
adc
movsl
fsubs
ds
xchg
add
filds
mov
fimull
sahf
push
cmc
sbb
xor
in
inc
das
mov
call
sub
inc
adc
jnp
inc
pushw
jmp
xchg
adc
mov
cmp
mov
or
dec
mov
js
push
sbb
pop
cs
js
sbb
cmp
outsb
test
lcall
dec
jl
mov
mov
mov
fldcw
ljmp
xchg
js
pop
dec
rcl
and
push
jnp
cli
add
xchg
popa
xchg
push
adc
outsb
sbb
mov
daa
mov
in
jmp
insb
rcrl
loope
arpl
int3
mov
fwait
rorb
and
add
arpl
out
ror
ficoml
jg
jecxz
test
pushf
psubb
mov
clc
cmpsl
imul
cmp
sbb
sub
pop
fdivl
xchg
stc
aas
leave
subl
idivb
movsl
xor
add
push
jp
push
repnz
push
mov
adc
sbb
out
pop
int3
mov
jg
repz
aaa
or
mov
hlt
inc
adc
sub
sbb
popf
push
cmp
ljmp
std
mov
movsb
or
xchg
pop
in
add
fmuls
into
xchg
sub
fldcw
loopne
insb
add
lahf
pop
dec
pop
inc
pop
nop
sbb
dec
dec
data16
xchg
push
and
jae
fwait
rcl
or
je
jecxz
mov
cmp
xchg
outsb
sub
lea
je
cwtl
cmp
sbb
jecxz
sub
or
idiv
adcl
inc
adcl
test
add
mov
mov
sbbl
add
leave
ja
sbb
xor
cmp
js
push
das
lods
in
test
fistl
push
cmp
cld
xor
adc
pop
cmp
scas
xor
mov
adc
jnp
les
sbb
sahf
rclb
sbb
sub
inc
push
add
bound
mov
sbb
testl
inc
mov
repnz
dec
lods
inc
scas
outsl
imul
jb
inc
push
cmpsb
or
in
pop
mov
or
adc
lret
or
int3
xlat
orl
sub
rol
adc
adc
test
sub
mov
jo
dec
sbb
xchg
add
cli
in
and
test
jg
ret
cmc
add
fs
xchg
cmc
add
ss
pop
or
mov
pusha
lock
adc
inc
add
dec
out
push
push
jmp
or
ja
mov
ret
jg
push
sub
adc
icebp
sbb
rclb
popa
xchg
dec
into
loop
inc
aaa
outsl
cmp
pop
out
test
sub
xchg
adc
int3
add
addr16
aam
sbb
in
hlt
xchg
jbe
mov
xchg
or
bound
xor
rcr
idivb
iret
mov
fistpll
cwtl
lds
ret
bound
sbb
cmp
data16
js
pop
popf
inc
notb
xchg
jle
mov
loop
pop
icebp
out
test
shr
rorb
inc
aaa
shr
sub
pcmpeqb
adc
push
fildll
sbb
sahf
scas
pushf
shrl
push
popf
xlat
dec
push
outsb
jb
adc
enter
mov
popa
test
sti
cmc
add
jo
fnstcw
mov
dec
loop
adc
ja
mov
sbb
push
sbb
sbb
push
icebp
int
fsub
push
aas
sub
xlat
fcoms
jb
gs
shr
mov
cmpsl
int
mov
and
sub
xor
shll
scas
out
cmp
mov
add
outsl
fnstenv
push
push
fmull
mov
mov
mov
mov
cli
nop
push
adc
lods
jno
imul
ljmp
int
xor
test
out
jge
sub
leave
xor
pop
mov
test
push
call
mov
cwtl
push
pop
lods
ret
je
xor
adc
or
cmp
xchg
add
mov
decl
mov
push
jno
cli
rcrl
adc
push
inc
mov
mov
cmp
lcall
add
jnp
push
pop
fcompl
pop
inc
and
repnz
je
xchg
inc
add
jmp
or
or
mov
mov
in
scas
jecxz
jg
cwtl
jl
lds
loop
les
js
jg
dec
repnz
lods
xchg
jbe
mov
pop
inc
pop
push
or
movb
fldenv
gs
dec
ret
or
js
scas
jl
jecxz
lret
xchg
mov
jno
lock
pop
jnp
movsl
mov
arpl
dec
es
stc
lahf
arpl
add
xor
test
int
mov
std
popa
xchg
mov
jge
daa
xchg
lahf
out
mov
sbb
test
outsb
mov
in
inc
fcom
sbb
sub
xor
insl
std
pushf
test
js
lahf
outsb
pop
push
cli
imul
mov
pusha
mov
aad
adc
cmp
rorb
jmp
out
mov
adc
push
test
nop
mov
cmp
js
scas
loopne
pop
push
aaa
push
mov
and
jecxz
popf
test
icebp
pop
in
sbb
mov
sub
add
add
cmpsl
and
adc
dec
mov
imul
mov
std
icebp
mov
out
sub
imul
inc
ret
fbstp
mov
pop
std
test
xchg
mov
push
sub
sbb
rcl
leave
outsb
xor
aam
xlat
lods
sbb
es
cmc
dec
cmp
adc
arpl
xchg
push
mov
pop
xchg
sahf
and
inc
cwtl
inc
in
mov
fildl
bound
inc
in
test
mov
fsubrs
incl
jmp
and
in
mov
xor
and
inc
jne
sar
dec
pop
rcll
adcb
in
dec
sbb
xor
and
loopne
sbb
jl
sub
adc
mov
pop
pop
inc
ds
das
ret
jge
test
gs
stos
or
rcll
cmpsb
inc
addb
sbb
cmp
jo
xor
and
test
xor
test
add
sbb
cld
inc
mov
pop
iret
mov
or
xchg
push
test
or
loop
sti
fsts
nop
fisubs
addb
ja
adc
adc
int3
out
pop
jne
mov
fwait
mov
cld
aad
mov
pop
inc
and
sbb
pusha
jns
mov
imul
xor
jae
mov
stos
scas
push
or
pop
xchg
xchg
dec
sbb
fisubrl
pop
dec
popa
cmpsb
outsl
test
loop
mov
adc
in
mov
xchg
imul
cltd
jae
lcall
dec
ljmp
adcb
lcall
arpl
mov
mov
mov
add
gs
jp
pop
mov
cs
pop
cltd
mov
insb
push
mov
mov
push
stc
scas
pop
iret
sbb
lods
aam
sub
and
repnz
fnsave
int3
insl
cld
jns
and
or
sbb
mov
or
add
lods
inc
shrb
lock
fdivs
sub
sbb
push
add
dec
aad
subl
jo
add
orl
lcall
sbb
sbb
mov
xchg
shrl
lds
mov
mov
scas
adc
adc
shrb
in
sarb
lret
test
xor
stc
cmp
xor
insb
and
mov
sbb
jns
dec
cmp
or
shlb
mov
push
rorl
and
in
pusha
xor
mov
xchg
cmp
push
adc
popf
jo
inc
mov
dec
sbbb
cltd
test
imul
pop
pushf
in
push
insl
jnp
test
sbb
xchg
fmul
loop
lock
out
sub
sub
xchg
arpl
inc
inc
sub
cmp
add
mov
push
and
fwait
or
insl
pop
xor
adc
jno
jno
shrd
notl
jle
fsub
inc
testl
ss
jne
mov
in
cmp
mov
mov
fnsave
pop
xchg
mov
mov
push
push
inc
cmp
sti
inc
pop
ret
jo
add
imul
es
stc
fcoms
insb
ds
repnz
dec
adc
jne
adc
cmp
and
mov
ja
push
adc
ret
xchg
push
cmp
mov
or
loop
leave
dec
test
aam
jo
das
add
xchg
jns
cltd
sbb
cmp
stc
scas
out
adc
xchg
pusha
sub
insb
xchg
jp
lret
movsl
push
test
unpckhps
jl
cmp
aam
mov
imul
cmp
fisubrl
pusha
adc
loope
addr16
pushf
mov
cs
pop
mov
or
pop
movsb
mov
push
xchg
das
sbb
or
pop
fnsave
mov
aam
dec
aaa
shlb
pop
mov
xor
adc
repnz
adcl
rcrb
rcll
cmp
shlb
or
cwtl
xor
fstl
mov
pop
call
cmp
cmp
and
aaa
xor
cli
sub
inc
movsb
fists
insl
lds
insb
lods
xor
jae
adc
dec
pop
push
or
sbb
mov
fistps
fbld
inc
lea
and
adc
push
cmp
shlb
xchg
pop
out
add
inc
ret
cmpsb
fucomi
or
cmpsb
push
push
inc
sar
inc
xor
cmc
ret
cmpsb
fs
xor
lret
add
repz
cmp
inc
sti
add
jno
inc
stos
jl
jae
jg
repnz
sti
filds
sub
ljmp
pop
faddp
xchg
push
mov
push
pop
jmp
mov
cmp
sbb
fs
push
ljmp
add
repnz
lock
xor
dec
xor
mov
push
pop
inc
inc
jg
data16
scas
cli
stc
clc
sarb
mov
test
mov
aad
outsl
fidivl
jge
push
pop
add
into
inc
add
adc
lods
fidivrs
mov
or
mov
test
jae
jns
mov
pusha
div
mov
outsb
les
pop
mov
push
in
outsb
push
and
loopne
push
into
ficoml
das
push
inc
or
pop
fimull
and
cmp
sub
dec
push
mov
add
enter
pop
cmpsl
popa
xor
lock
xor
test
cmc
add
xchg
push
cmp
inc
cmp
dec
in
sub
or
mov
mov
lds
mov
jecxz
cmp
repnz
add
adc
mov
push
push
xor
mov
push
pop
arpl
mov
fisubrs
mov
sub
push
adc
mov
test
stos
in
mov
cld
fs
mov
repz
lcall
fldl
or
xchg
dec
mov
inc
xorb
imul
hlt
pop
adc
out
in
sbb
pushf
loopne
jp
iret
pushf
sahf
outsb
cwtl
js
jge
mov
shrl
imul
repz
outsl
pop
in
pop
mov
mov
mov
ret
hlt
mov
xchg
scas
push
xorb
fdivl
xchg
repnz
push
gs
adc
enter
xchg
sub
xor
xchg
scas
inc
data16
test
sbb
sbb
adc
add
mov
adc
inc
imul
gs
das
enter
lock
aaa
add
pop
mov
push
jge
mulb
push
loope
fwait
dec
iret
mov
inc
aaa
setae
and
xchg
adc
lret
rolb
jbe
adc
mov
imul
inc
xor
sub
jae
pop
stos
int
mov
fistps
pop
enter
pop
flds
xor
add
mov
loop
sbb
notl
popf
ja
mov
xchg
imul
fcompl
test
icebp
mov
jge
insl
stc
loop
ljmp
rcll
push
sti
and
lods
and
es
cmpsl
xor
sub
pop
testl
pop
insl
lcall
pop
das
adc
pushf
jae
inc
inc
add
sub
ds
cmp
push
or
dec
mov
aas
clc
jno
lock
pop
inc
shlb
pop
mov
pop
or
pop
insb
pop
xchg
mov
or
inc
mov
sbb
add
xlat
cmp
jns
mov
jns
aad
jg
sub
push
ss
aaa
or
imul
xor
sbb
push
push
out
stc
mov
int3
stos
dec
mov
cltd
in
mov
mov
push
mov
rorb
mov
insl
cmpsl
xor
inc
xor
fcomps
je
jp
mov
out
add
mov
push
push
xor
jns
lret
and
and
sub
or
jns
jno
or
jle
cltd
jne
jl
jge
xor
sbb
xor
jmp
mov
xor
imul
jo
hlt
push
or
push
lock
push
or
mov
scas
and
pop
in
insl
insl
leave
stos
stc
aaa
lcall
inc
mov
add
sbb
cmpsl
fisttpll
mov
pop
xor
jl
pop
fadds
add
push
scas
pop
rcrl
test
xchg
insb
gs
jge
not
jg
ret
in
leave
sub
js
movl
and
jmp
jbe
push
inc
outsl
aam
daa
xor
jae
loopne
mov
outsl
jno
out
jbe
arpl
out
adc
int
mov
mov
aad
push
js
out
in
push
test
pop
scas
jmp
xor
test
in
push
int3
subb
loopne
mov
or
sub
add
mov
outsl
into
jp
inc
or
lods
stc
push
adc
adc
jo
fidivrs
repz
cs
out
mov
mov
xchg
ss
push
jmp
dec
icebp
dec
sbbl
ret
out
dec
cmp
push
les
lcall
stos
cli
push
int
and
pop
mov
les
repz
jle
push
pop
in
outsb
add
jno
rorb
jno
xlat
jnp
scas
or
push
pushf
mov
pusha
fldt
push
mov
xor
mov
inc
je
xchg
xchg
jl
aad
test
out
fidivrs
sbb
push
cmp
or
fsubp
dec
shlb
jecxz
mov
cli
iret
sub
jne
outsb
mov
loopne
and
jno
lods
sub
sub
dec
xor
stc
or
add
pop
mov
and
stc
fwait
test
inc
fidivrl
and
aam
imul
lods
add
cmp
pop
stos
jge
jnp
sub
cmp
popa
ss
adcb
lods
test
cs
mov
inc
dec
inc
sub
xchg
xchg
addl
push
and
leave
xchg
es
jb
cwtl
mov
in
fs
xlat
xchg
xor
jge
adc
addr16
sbb
and
inc
push
sub
roll
mov
jo
adc
push
shl
mov
xchg
movsb
popa
jae
jbe
cs
mov
xchg
jp
hlt
inc
xchg
cmp
add
pop
ret
cmpsl
jno
push
or
and
stc
xchg
mov
add
cmp
dec
pop
sahf
fdivl
inc
cwtl
out
sti
negb
dec
pop
sbb
in
int3
jge
adcb
cmp
dec
fisttpl
inc
sub
xchg
or
test
rorl
addr16
fildll
pop
repz
repz
sub
pause
inc
fnstcw
sub
and
mov
push
jmp
pop
push
jae
xchg
mov
xorl
leave
movsl
aas
xchg
sbb
addr16
pop
out
pop
add
aam
mov
imull
sub
mov
fsubrl
filds
add
ljmp
push
xchg
and
lahf
cmc
ljmp
loope
push
lret
cld
jl
lods
in
imul
stos
lahf
xor
jnp
shrb
incb
lret
cmp
stos
imul
mov
inc
mov
push
loopne
adc
stc
call
inc
enter
cmc
xchg
mov
adc
and
je
stc
test
ret
pop
and
jmp
mov
loop
outsb
cmp
sub
jbe
fadds
pop
insl
clc
pushf
mov
decb
test
adc
or
cmc
xorl
dec
xor
out
jmp
push
or
dec
push
gs
fxam
hlt
lds
xchg
lock
cmc
in
add
xchg
mov
xchg
mov
in
mov
pop
shlb
stos
cltd
sti
movntq
mov
cwtl
push
pop
jl
aad
sbb
aas
dec
xchg
add
and
push
mov
insb
lock
adc
cmc
push
xor
pushf
sbb
adc
jmp
lods
xchg
mov
fdivs
add
lahf
mov
je
sub
pop
push
add
scas
dec
push
aad
arpl
faddl
notl
dec
cmpsb
jo
iret
lods
mov
add
hlt
cmp
sbb
push
faddp
xchg
test
lret
sub
imul
insb
inc
sbb
jp
stc
int
xor
rcll
js
xchg
sti
pcmpgtw
mov
or
xor
jb
mov
mov
or
xor
push
clc
sbb
out
pushf
loope
insl
or
xchg
mulb
pop
push
sub
jnp
and
jmp
cmp
shll
movsb
push
shll
xstore-rng
cmpsl
inc
jge
dec
scas
sahf
mov
mov
add
cmpb
in
pop
mov
cmp
xchg
push
mov
dec
stos
test
cmc
mov
sub
addr16
adc
adc
sbb
pop
mov
ror
inc
out
push
mov
andl
repnz
adc
jno
cli
add
sarb
fildl
jnp
sub
sbb
or
jge
inc
mov
ret
mov
mov
outsl
xor
lret
lock
dec
lret
push
jmp
jmp
imul
adc
lret
ja
mov
sub
fwait
mov
cli
xlat
ss
cltd
sbb
rolb
and
dec
lcall
or
jp
ret
adc
test
jno
sub
dec
gs
mov
out
lock
cmp
add
outsb
jno
ficoml
aaa
mov
repz
aad
or
faddl
int
add
mov
sub
clc
leave
int
push
popf
sbb
les
sbb
sbb
out
xchg
mov
fcoms
ds
jp
into
fnsave
loopne
sub
mov
xchg
sahf
mov
movsb
subl
pop
insb
cmpb
ljmp
push
roll
jecxz
scas
int
ficoml
sahf
lods
mov
cwtl
add
lcall
xor
sbb
cmc
mov
sbb
data16
aas
xchg
inc
mov
mov
and
test
and
rcll
sti
adc
repz
adc
aas
ss
negb
cmp
mov
shl
out
in
mov
in
pavgb
dec
or
mov
push
or
adc
sahf
movsb
in
lcall
mov
mov
cmc
cmp
fsubl
fmuls
dec
push
les
fimuls
pop
outsl
bound
leave
adc
jo
push
dec
icebp
xor
xchg
mov
sbb
js
loopne
pop
rcll
jne
mov
dec
das
push
add
pop
or
and
sub
push
std
add
adc
cmp
jg
dec
nop
rclb
ja
mov
push
mov
dec
mov
ja
sbb
test
js
jp
aaa
push
dec
push
sbb
cmp
mov
fdivs
push
popf
imull
sbb
cmp
sbb
jecxz
scas
dec
hlt
mov
jp
out
fisubl
xor
mov
sub
lret
jns
xchg
push
jo
xchg
nop
jg
jecxz
shlb
dec
jne
lods
popf
push
lds
dec
jo
and
or
or
lcall
cmp
clc
xor
jno
inc
popa
mov
or
jg
movsb
test
dec
scas
loope
or
and
xchg
jne
jg
push
in
leave
jl
pop
repnz
cld
lock
xchg
and
push
mov
scas
insb
mov
das
out
sbb
nop
test
pop
in
jge
push
jne
cmp
out
xchg
dec
addb
add
sbb
aas
add
cmp
xlat
stos
inc
xchg
push
es
xchg
call
aad
mov
loopne
and
scas
jnp
mov
icebp
pop
or
pop
cs
std
mov
xor
enter
mov
xchg
xchg
insb
jl
dec
ja
jbe
mov
lock
jle
sub
adc
outsb
inc
loop
lret
cmp
pop
push
dec
add
adc
mov
aaa
pop
mov
dec
loope
out
mov
mulb
insl
nop
cmp
pop
push
jmp
xlat
mov
pusha
ljmp
cmp
scas
insb
into
aas
sub
shrb
das
sub
jo
arpl
enter
xchg
cmpsl
lret
push
push
es
ljmp
mov
xchg
jne
pushf
ret
call
adc
fidivs
jmp
lea
dec
cltd
js
sub
mov
xor
or
add
add
jge
cmp
insb
cmp
pop
je
stc
rcrb
pop
fldt
in
es
sbb
sbb
cmpl
int
mov
push
pop
test
imul
jmp
sti
sbbb
loop
add
mov
mov
and
mov
xchg
xor
mov
inc
mov
sbb
mov
shr
jle
cld
cmpsb
push
ja
sbbl
pop
sbb
xchg
jge
lods
adc
and
les
out
adc
mov
or
lret
ljmp
ja
pusha
iret
imulb
jo
mov
jg
iret
popa
shlb
repnz
repnz
add
and
inc
dec
repnz
xchg
and
imul
lea
mov
cltd
ljmp
lcall
sarl
pop
inc
mov
icebp
dec
fwait
pop
xlat
bound
or
sbb
xchg
sub
orl
out
fldl
or
insb
pop
mov
out
dec
cmp
xchg
mov
bound
lret
repnz
dec
lods
cmc
add
or
fbstp
jp
bound
arpl
and
lods
mov
mov
outsb
cmc
push
sahf
shll
cltd
inc
mov
movsl
xor
jbe
std
and
sbb
repz
fs
jmp
insl
sbb
push
jle
cs
cs
push
ljmp
and
jo
cmpsb
out
ss
mov
lcall
add
add
jg
mov
or
test
jb
cmc
sbb
test
jg
fstl
jecxz
mov
adc
sub
mov
mov
cltd
gs
movsb
out
daa
movsb
jecxz
dec
pop
repnz
lahf
xchg
and
dec
cmp
or
xor
sub
nop
sub
pop
adc
adc
jg
lods
sub
loope
daa
or
cmpsb
in
subb
ret
push
adc
sub
jmp
mov
xor
inc
arpl
in
sbb
mulb
mov
add
cmpsb
xor
jp
arpl
iret
mov
jne
adc
pop
cmp
lcall
and
clc
inc
jns
mov
xchg
or
xchg
shlb
dec
add
scas
push
mov
jo
jmp
lock
xor
cmc
out
adc
jp
push
jge
sub
or
stos
dec
nop
adc
mov
xchg
in
adc
stos
std
rorb
lock
adc
cmpsl
push
xor
sbb
dec
test
cmpsl
rcll
das
mov
pop
imul
add
imul
call
test
jp
sbb
imul
gs
in
call
cmpsb
sbb
leave
inc
dec
mov
mov
aas
xchg
mov
in
and
mov
cmp
pop
fs
ja
imulb
sub
insl
sbb
repz
mov
pusha
pop
daa
into
mov
and
icebp
fs
cmp
pop
gs
out
adc
or
jge
cmpsl
add
dec
xor
addb
icebp
cmp
mov
mov
imul
sbb
ljmp
mov
xchg
dec
ret
gs
mov
fsts
jnp
jecxz
push
lods
rcll
jae
bound
xor
stos
repnz
fstpl
jge
cmp
notb
out
fidivrs
scas
loope
loope
pop
orl
sbb
xor
jno
sbb
aam
and
mov
andb
sub
sbb
mov
arpl
push
inc
mov
cld
mov
cld
adc
into
push
push
xchg
jno
jg
fsts
in
push
sub
sub
sbb
xchg
push
mov
test
sub
popf
cmp
cmp
xor
jl
cltd
lock
dec
jmp
push
aaa
call
push
into
out
es
inc
mov
mov
cltd
aad
rcrb
loope
in
mov
aam
cmpsl
sbb
jae
xor
shlb
ret
and
cmp
cld
push
out
xor
jp
sbb
popa
mov
je
mov
pop
je
ljmp
insb
scas
push
sub
lods
test
dec
sbb
test
popa
loop
jge
mov
bound
outsb
insb
sbb
vminps
push
xor
pop
xlat
cmpsb
fnstenv
lret
js
lret
je
push
loopne
loopne
fucomp
dec
jne
loop
aaa
sbb
dec
outsl
lds
out
inc
sbb
fwait
andb
adc
fidivs
js
mov
or
sub
inc
sub
test
inc
orb
push
push
ja
rcr
push
sti
das
mov
shrl
xchg
push
sti
inc
dec
bound
orb
mov
imul
test
in
popa
lock
mov
or
imul
stc
pop
push
aam
xchg
inc
lret
ret
xlat
add
xor
jb
xchg
movsl
adc
and
inc
or
into
jmp
jecxz
sti
lock
leave
sub
and
mov
pop
cmc
push
mov
jl
adc
inc
cltd
or
jp
and
sub
pop
dec
ss
fs
inc
mov
jmp
fstps
js
xchg
stos
sbb
loopne
mov
push
fdivl
call
dec
or
int3
mov
pop
push
enter
adc
mov
xchg
mov
movsb
mov
sbbl
cmpsl
jg
inc
push
push
add
sub
cmp
fsubrl
loope
cmp
pop
push
or
addr16
loope
pop
lret
cwtl
shl
jnp
or
adc
ss
fiaddl
push
iret
or
cld
lea
outsb
jmp
imul
pop
xchg
xor
cmc
lock
pop
xorl
movsb
xor
lcall
sbb
pop
xchg
test
inc
fsubrl
xorb
out
adc
sar
xor
or
pop
mov
pop
dec
roll
add
add
into
jns
push
mov
cmpsb
out
push
mov
shlb
push
sub
shrl
and
or
ret
adc
pop
jns
pop
jg
inc
sbb
dec
pop
cmp
lock
popf
mov
inc
int3
icebp
mov
repz
sbb
or
push
sar
pusha
jb
xchg
stos
mov
loop
or
adc
cmp
leave
ficoml
push
mov
and
fdivrl
jmp
movsb
sar
mov
test
arpl
fs
pop
push
insb
test
out
push
xor
jl
inc
cmpsb
rcrb
mov
cli
enter
jns
cli
sti
cli
in
aaa
cmp
gs
sti
ja
push
xchg
shll
aaa
je
cli
jecxz
pushw
add
cmc
lea
and
xchg
inc
add
mov
cmpsb
hlt
jnp
ret
jl
gs
fisubrs
std
out
mov
or
mov
frstor
xor
aaa
icebp
mov
or
jmp
push
xchg
pop
mov
xchg
sbb
outsl
sub
loope
rcll
pop
sub
cmc
test
mov
dec
push
adc
hlt
mov
xor
shrb
cltd
shrl
lea
jne
push
stos
mov
jmp
pop
adc
or
jp
fsubs
call
cld
movsl
int
xor
ret
sub
fs
mov
sbb
stc
mov
sbb
sbb
sbbl
aas
and
in
arpl
jp
mov
sub
loop
rorb
mov
lods
jp
sub
adc
pushf
sahf
sub
data16
dec
andb
into
cmp
push
inc
les
int
inc
int
cwtl
mov
push
je
sbb
push
or
push
mov
mov
mov
and
mov
push
imul
fwait
sarb
adc
imul
lods
or
pop
lea
fadd
dec
ds
movsb
mov
fsubrs
pop
nop
push
scas
cmp
insl
out
test
jno
mov
lret
push
loop
adc
cmpsl
push
ficompl
shl
enter
dec
jmp
jmp
rol
mov
pop
or
mov
add
ret
xor
jbe
xchg
es
loop
popl
dec
mull
adc
pop
mov
mov
in
les
adc
push
pusha
call
loopne
mov
cld
push
sbb
cmp
mov
xchg
sbb
gs
cli
pop
loopne
out
push
into
sbb
pop
dec
adc
cmpsl
sbb
mov
xlat
call
aam
stos
cld
mull
frstor
bound
cmp
inc
mulb
cld
fnsave
test
mov
push
mov
test
add
aaa
imul
fwait
loopne
sub
jp
mov
mov
jb
mov
mov
pop
aaa
cltd
mov
mov
pop
sub
jne
scas
ret
or
lds
cmp
loop
jl
and
add
test
movsl
sbb
fcoml
mov
rcrl
fwait
cmp
xchg
pop
cmpsb
and
lret
jl
mov
movsl
out
lds
stc
sub
add
sbb
jae
fisubs
leave
in
cs
lret
xchg
jb
insb
or
pop
mov
shlb
pop
ret
cs
loop
shll
out
lods
mov
xchg
pop
mull
fimull
sbb
aas
lods
and
and
jo
mov
sub
or
movsl
outsl
jl
call
ret
sbb
xor
inc
gs
ja
mov
sbb
lock
push
pop
xor
jecxz
inc
add
js
dec
dec
pop
jp
push
shr
stc
scas
adc
sbb
mov
or
push
mov
xchg
out
cmpsb
adc
enter
jecxz
jecxz
mov
ss
mov
xchg
notb
addr16
movsl
add
pop
xor
cli
rolb
pop
loopne
jecxz
adc
out
jo
pop
jbe
je
movsb
add
dec
popf
mov
inc
adc
adcb
jge
and
jle
mov
push
and
add
popf
scas
ret
inc
scas
push
rorl
aas
ljmp
mov
popa
testl
pop
jbe
xchg
inc
insb
xchg
arpl
shll
sub
test
cwtl
mov
cmpsl
fsts
loopne
fsts
fisttpll
fs
gs
dec
xchg
jae
mov
sub
fsubs
imul
jbe
fistl
sarl
dec
fs
pop
mov
movsl
lds
mov
xor
ficoms
jno
out
pop
jl
mov
out
mov
dec
dec
jnp
decb
cmc
cmp
xor
out
push
xchg
pop
inc
adc
leave
daa
push
mov
cmp
mov
sbb
cmpsl
out
cmp
jp
stos
js
inc
movsl
leave
mov
cs
mov
cld
insb
xchg
xchg
jle
fstpt
stos
mov
and
leave
arpl
sub
push
stos
mov
push
pusha
sti
xor
shlb
aaa
inc
inc
scas
pop
sbb
ljmp
add
xchg
pop
leave
stos
xor
fucomip
and
mov
adc
mov
xlat
stc
add
adc
xlat
push
jmp
roll
movsb
inc
pop
data16
dec
aam
fmul
fs
add
push
and
jge
mov
loopne
arpl
aad
sub
mov
mov
mov
ds
imulb
idivl
push
cli
cmp
xchg
insl
data16
push
rorl
mov
and
call
push
in
xchg
mov
or
adc
dec
pop
ljmp
mov
mov
aad
jg
xchg
or
sti
inc
jmp
loopne
dec
jns
bound
fsubrl
xchg
xchg
xlat
adc
rcrb
lods
mov
pop
fisttpl
xchg
adc
mov
or
movsl
inc
adc
adc
fcompl
mov
mov
push
ss
sbb
fadds
rcrb
cmpsb
xchg
test
cltd
xchg
jbe
rcrb
jmp
mull
dec
mov
jmp
rcll
mov
outsl
mov
pusha
ficompl
jge
aad
int
insl
std
addr16
fisubrs
inc
dec
jmp
enter
std
inc
fisubrl
test
idivl
sbbl
jge
das
dec
adc
mov
adc
pop
push
add
xlat
das
aad
jb
sbb
push
sub
cmpb
fidivrl
cmp
and
xor
sbb
out
cwtl
fists
sti
int3
out
les
jbe
movsb
ret
rorl
inc
in
cmpsb
pop
push
and
gs
aam
mov
adc
lock
jp
sub
push
test
loope
aaa
inc
mov
cmp
push
xchg
bound
jmp
and
xlat
cmp
pop
out
ja
sti
in
mov
cmp
mov
nop
or
jmp
xor
fsubrl
jae
fwait
jne
mov
pushf
sub
imul
out
mov
inc
push
cmp
cwtl
aaa
lds
int
lods
cmp
or
jae
hlt
add
ljmp
jmp
rcl
cs
mov
lock
mov
rcrb
shll
pop
push
jl
stc
mov
shr
xchg
cld
inc
add
xlat
jmp
and
aad
std
rcrl
xor
lock
ja
inc
cmc
fdiv
in
cli
sti
mov
insb
pop
pop
ficoml
in
jmp
pushl
bound
cld
sarl
imul
mov
das
in
loopne
and
push
dec
jbe
and
test
push
test
add
mov
int
pop
and
push
add
jb
movsl
scas
mov
mov
out
or
outsb
addw
or
mov
mov
call
sbb
ret
jle
lahf
test
or
sbb
jp
pop
mov
clc
out
in
push
dec
jl
push
xor
and
dec
pop
mov
data16
inc
push
mov
add
mov
dec
xchg
cmp
rol
jne
cli
fnsave
and
in
fs
negl
xor
pop
mov
gs
popa
adc
in
cmp
sub
pop
daa
lea
pop
xor
popf
loope
xor
pop
mov
repz
sbb
in
sbb
pop
cmp
out
movsl
roll
in
aas
sub
fcmovbe
mov
or
xchg
xchg
jl
test
sbb
lods
aas
xchg
jp
lret
dec
sti
imul
mov
test
fmull
clc
in
or
fst
xchg
xchg
out
pop
lock
lock
jno
adc
in
adc
sarl
sub
adc
and
xchg
enter
xor
mov
and
xchg
aas
add
gs
dec
pop
sbb
jne
jle
jecxz
mov
bound
stc
mov
addr16
mov
das
imul
sbb
sbb
sub
stos
add
pop
data16
decl
lret
push
jnp
les
dec
inc
mov
or
pop
lods
dec
call
pop
jg
push
outsl
jno
out
mov
jae
add
mov
mov
icebp
push
mov
xor
data16
out
into
push
xchg
mov
hlt
popa
lea
xor
rorl
dec
shlb
sub
push
add
sti
inc
pop
movsb
xlat
dec
dec
adcl
test
mov
push
out
pop
pop
jp
unpcklps
add
insl
mov
cmp
inc
xchg
test
sbb
cmp
push
xor
lods
inc
stos
hlt
push
mov
sub
jecxz
dec
stos
jno
call
adc
inc
or
das
add
adc
add
out
sbb
imul
mov
notb
lahf
or
or
les
stos
aam
xchg
adc
pop
add
xor
cmp
or
mov
sti
pop
jecxz
xor
jecxz
in
inc
fimull
ja
mov
ds
mov
jae
lret
stc
push
push
cmp
add
cmpsb
jge
fstl
jnp,pt
jl
in
pop
les
mov
mov
aas
jmp
xchg
jmp
shll
push
loopne
int3
fcomps
mov
leave
mov
or
cmc
and
ja
inc
ret
and
repz
push
or
and
inc
pop
mov
insl
sarl
lcall
scas
sti
aam
ja
or
mov
lret
jb
loope
dec
lahf
jecxz
cltd
fs
sub
sti
pop
cltd
les
outsb
testl
in
pusha
stos
mov
hlt
aam
shl
xchg
addb
fists
in
lret
xlat
in
push
cmp
xchg
adc
in
adc
adc
cli
mov
scas
es
outsl
ss
scas
jl
fst
rorl
mov
cmp
mov
xchg
xchg
cmpsl
pop
ds
dec
icebp
das
adc
or
sbb
jge
adc
sbb
inc
mov
xorl
std
fxtract
test
nop
sbb
cld
sar
push
nop
sub
cmp
add
cmp
jns
mov
int3
push
jbe
jno
push
js
sub
arpl
xor
addl
pop
xor
xchg
cmp
sbb
mov
fcomps
mov
sub
inc
or
cmp
pop
fwait
leave
out
pop
jne
aaa
movsl
fisubrl
inc
and
and
out
pop
cld
mov
es
hlt
inc
or
or
fcoms
push
out
popf
push
in
mov
cmp
adc
ljmp
cmp
ret
mov
push
pop
dec
sar
sbb
and
fildl
push
sbb
lcall
jg
mov
cmpsb
pop
pop
mov
test
sub
jle
repz
stos
mov
shrl
adc
hlt
mov
add
adc
fnstsw
shll
xor
or
pop
repnz
push
and
mov
into
aam
mov
ss
idivb
sahf
or
push
inc
pop
xchg
std
or
ret
inc
sub
xchg
sub
les
int
incb
jecxz
sahf
adc
popa
lret
push
and
pushf
call
mov
dec
or
and
xchg
popf
in
test
sbb
cmpsb
shlb
test
jo
and
xor
or
push
addl
jecxz
xchg
push
push
mov
jnp
and
jle
adc
or
push
push
test
mov
or
xchg
bound
adc
shl
jmp
push
and
sti
popl
frstor
sbb
or
repnz
arpl
dec
jns
ds
dec
pop
test
push
fnstenv
fwait
cld
xchg
rclb
inc
psllq
sbb
aad
jecxz
test
mov
and
mov
dec
ja
mov
int
mov
insl
xchg
movsl
mov
es
mov
push
nop
inc
stos
mov
loopne
mov
ret
es
ret
push
sbb
addb
mov
mov
mov
dec
gs
jo
push
push
jle
mov
shll
movsl
adc
pop
pop
icebp
ds
leave
mov
push
mov
mov
xchg
aam
sbb
notb
insb
inc
divl
xchg
ret
sbb
xchg
add
cmp
or
cmp
add
push
dec
arpl
and
jnp
imul
and
sub
dec
mov
fistl
nopl
xorb
sbb
outsb
adc
or
cmpl
fs
push
fsts
adc
pop
xor
scas
cmpb
cmp
xchg
in
sbb
test
adc
jecxz
stos
xor
faddl
pop
test
idiv
add
scas
inc
popf
and
fwait
jno
mov
ja
cmc
xchg
adc
sahf
pushl
stc
cmp
sti
pop
popf
andl
in
mov
into
or
test
popa
stc
movsl
xchg
mov
out
into
push
jecxz
xor
imul
out
push
xchg
roll
sbb
push
ret
inc
repnz
ja
cmp
jne,pn
icebp
mov
popf
fcoms
xchg
xchg
outsl
rcrb
in
mov
xlat
fldt
pop
xchg
push
add
dec
jbe
sbb
lcall
jp
orb
rcll
fadd
inc
lods
cmp
pusha
ret
je
xorb
or
sbb
xchg
scas
fsub
pop
push
outsl
rcl
shr
aas
push
stos
jb
pop
pop
dec
inc
xchg
cs
icebp
repnz
in
arpl
pop
sbb
fwait
lock
jp
mov
sbb
pop
mov
jne
fdivs
inc
mov
xchg
push
inc
stos
push
call
jo
cwtl
xlat
lods
fst
mov
push
cmp
in
cmp
sub
or
in
jns
mov
cmc
and
test
aad
mov
sub
jne
mov
jp
lea
cmp
fistpl
fidivl
xchg
clc
lret
cltd
push
sbb
mov
dec
aaa
imul
jle
bound
dec
stc
jle
dec
adc
mov
jno
xor
ss
rolb
out
and
outsl
movsl
sub
mov
into
jmp
lock
push
sub
xor
and
add
adcb
test
mov
dec
xlat
imul
inc
cli
lret
rolb
in
data16
repnz
stc
out
mov
inc
or
mov
sahf
insb
push
sti
loopne
xchg
popf
push
ret
sbb
imul
jno
dec
cmpsl
inc
call
es
jnp
or
test
imul
dec
mov
out
fadd
pop
loope
xlat
sub
rcll
lds
dec
jne
movsl
loopne
iret
inc
jae
cmp
xchg
mov
dec
dec
jp
daa
xchg
xchg
pop
sbb
call
cld
xchg
popfw
pop
js
aad
lret
push
jmp
call
divl
scas
bnd
nop
pop
mov
sbb
mov
dec
push
loope
popf
enter
movsl
pop
mov
nop
aaa
jp
dec
jp
push
es
xor
into
loopne
adc
int3
in
jb
push
inc
push
loop,pn
pop
out
sub
mov
pop
jmp
jns
mov
scas
push
sbb
mov
sbb
xor
ja
xchg
sarl
adc
notl
push
into
jp
leave
faddp
push
out
inc
stc
fildl
hlt
pop
or
pop
or
fnstenv
jne
pop
mov
and
popf
lods
jg
jo
xchg
mov
into
mov
push
sub
dec
and
sub
testb
pop
cmp
ja
sub
out
pop
cmp
inc
lea
mov
pusha
pop
push
jle
and
push
cld
or
inc
enter
and
cli
insb
fimull
mov
mov
imul
pop
mov
sbb
adc
cmpsb
dec
inc
aas
enter
push
out
jecxz
notb
sbb
sub
imul
outsl
mov
sarb
cmp
lahf
mov
cmp
inc
enter
lods
sbb
pusha
pop
in
lret
cmpl
rcrl
mov
lahf
add
lock
leave
orps
push
out
jg
mov
adcl
ret
sub
sbb
xchg
inc
mov
adc
mov
sbb
arpl
test
daa
test
sub
cmc
frstor
adc
lcall
aaa
mov
inc
test
dec
mov
fisubl
pop
mov
add
or
sub
insl
enter
mov
outsl
jno
dec
dec
xchg
pop
insb
lcall
cmp
lret
cmpxchg
inc
mov
cmp
and
adc
push
out
scas
dec
cs
aas
sbb
sub
mov
imulb
add
inc
or
fisubrl
pop
xor
mov
ljmp
pusha
out
orb
shrl
in
mov
mov
int3
cli
les
icebp
ret
stos
pop
adc
fadds
aas
sti
rorb
mov
gs
stos
test
xlat
inc
mov
xor
xlat
and
xor
push
int3
out
cltd
int
xor
cmp
jle
mov
cmp
bound
sbb
xor
mov
les
dec
stos
dec
andl
or
clc
shlb
test
mov
lock
mov
ret
xor
xchg
in
int
sbb
daa
push
sub
je
or
mov
iret
outsl
jb
jae
push
mov
imul
loop
les
add
ret
pop
std
add
jmp
mov
fidivl
pop
sbb
in
sub
ficoml
in
inc
fs
fsubrl
cld
mov
mov
stos
lret
out
sbb
jae
loop
mov
cmp
and
rcr
test
lods
pop
out
push
stos
test
adc
adc
mov
xor
inc
push
adc
mov
repz
lret
sub
xlat
out
movsb
loopne
pop
adc
sub
scas
out
add
andl
dec
cltd
mov
mov
jno
std
mov
xchg
loop
sub
in
adc
enter
lea
add
pop
imul
mov
pushf
out
in
sub
pushf
jle
mov
imul
inc
inc
loop
lcall
sahf
push
incl
add
vcvttps2dq
lods
dec
mov
fstl
mov
and
out
xor
inc
fcompl
enter
in
push
add
repnz
ljmp
mov
push
mov
das
mov
adc
push
adc
stc
mov
push
frstor
inc
xchg
sub
mov
xchg
js
scas
xchg
inc
into
aam
stos
xchg
cwtl
xchg
pop
xchg
in
ljmp
movsb
sbb
hlt
dec
mov
or
push
push
sub
cmp
lcall
push
pop
fs
or
incl
adc
push
push
cmp
int3
push
ja
inc
jecxz
pop
mov
das
icebp
rorb
pushf
in
test
out
in
mov
xor
lcall
mov
jle
push
xchg
es
inc
pop
or
repnz
push
xor
test
lods
nop
ss
jne
movsb
push
jecxz
cmpsl
fcmovnbe
ss
fcompl
test
lahf
nop
nop
xor
scas
roll
pop
out
sub
nop
movsl
jnp
cmp
adc
lret
xchg
inc
fisubrl
stos
jecxz
call
outsb
mov
movntq
shr
fistl
mov
push
lods
xchg
ljmp
cltd
andl
or
dec
fldenv
and
sub
es
fdivrl
and
mov
rcll
and
jle
push
inc
push
loopne
lcall
add
sbb
cs
jno
mov
cmp
cmp
lea
push
andb
pushf
jg
add
xor
push
std
lret
lret
out
xchg
pop
mov
sti
push
dec
mov
mov
pop
xchg
movsl
ljmp
adc
pushf
stos
add
pop
or
ror
push
out
out
ljmp
sbb
call
bound
dec
dec
scas
lcall
stc
out
push
rol
or
daa
and
mov
dec
daa
loop
int3
stos
les
mov
xchg
mov
mov
popa
aaa
outsl
mov
pop
add
divb
addl
push
cmpsl
or
notl
inc
iret
add
push
dec
scas
xchg
adc
aam
pushl
jl
nop
xchg
mov
cltd
rorb
mov
and
inc
cmp
push
ret
dec
ja
addl
jle
mov
xchg
jns
push
push
dec
pop
push
stos
mov
push
dec
jo
push
xor
xchg
sub
push
push
jns
leave
xor
add
jnp
mov
out
jbe
int3
pusha
adcl
mov
mov
test
mov
shld
in
sub
or
fdivp
inc
pop
inc
adc
sub
clc
fistl
lea
sbb
cmp
fwait
lret
jl
out
scas
stc
out
push
cwtl
movsb
ror
pop
flds
nop
lea
jle
pusha
xchg
mov
lret
lahf
mov
jp
sbb
scas
lret
jge
and
aas
xchg
loop
test
mov
mov
lea
mov
fisttpll
cltd
adc
xchg
inc
xchg
pushf
mov
mov
es
add
pop
and
ret
test
cmp
sbb
addr16
push
loopne
jp
and
leave
mov
sti
sbb
sti
or
mov
mov
dec
push
jp
or
and
ljmp
sbb
test
sub
add
lock
xlat
rorl
or
rol
sarb
and
lods
pop
js
bnd
mov
and
pop
pop
add
sub
stos
iret
idivb
lret
in
inc
outsb
imul
mov
cmc
sbb
xchg
ljmp
jo
loope
insb
xchg
fsubl
lcall
pop
cmp
test
mov
adc
push
shlb
adc
xchg
lds
mov
fistpl
mov
std
push
pop
imul
mov
lret
jo
xchg
pop
outsb
mov
test
mov
fdivp
ret
popa
adc
mov
lret
push
jns,pt
fsubrl
arpl
fdivrl
ret
iret
sub
mov
test
push
xor
cld
add
xchg
lret
mov
shrl
repnz
insl
jo
push
int
shlb
mov
out
xchg
das
pop
xor
dec
and
aam
sbb
mov
psraw
add
jp
xchg
xchg
std
fisttps
sbb
aad
jae
sbb
jne
in
lcall
xchg
mov
out
sub
scas
adc
test
xchg
out
cltd
or
add
pop
int3
and
add
test
ret
xor
mov
jno
dec
fs
in
in
pop
fnstenv
push
addr16
mov
sbbl
and
aaa
int3
in
adc
fists
jmp
pop
dec
cs
jle
sub
fists
push
imul
cmp
xchg
push
lods
arpl
mov
imul
xchg
and
dec
stc
or
cmp
clc
dec
repnz
mov
outsb
lock
lea
cs
rolb
cmpl
mov
in
mov
jbe
lock
cld
mov
pushf
or
add
out
stos
adc
cmp
sbb
lahf
push
imul
mov
loopne
popa
das
insl
pop
iret
inc
call
repz
stos
test
push
push
cwtl
xchg
jbe
lcall
leave
or
cmc
pop
pop
lret
push
sub
mov
imul
or
aad
dec
insl
cmp
shll
inc
sbb
push
inc
and
out
fldt
movsb
test
jo
mov
jb
lds
rep
mov
cmpsb
add
push
xchg
adc
or
jno
cmp
push
out
inc
push
lahf
inc
push
jp
int
xchg
add
orb
sahf
dec
or
rclb
aas
pushf
cmp
fwait
push
push
mov
cmp
sbb
jne
cmp
sub
push
into
outsl
nop
sti
dec
or
cmp
and
adc
lods
fsubr
jecxz
inc
pop
mov
test
scas
ja
xor
xchg
jp
inc
es
out
and
adc
data16
mov
sbb
dec
gs
iret
imul
andb
jae
mov
mov
mov
push
sub
movsb
movsb
mov
inc
xor
adcl
sub
add
mov
cltd
pop
sti
sbb
inc
outsb
movsl
xor
cmp
addr16
adc
jb
outsb
or
repz
ret
mov
daa
sbb
std
cli
push
es
gs
dec
and
cmp
loopne
pop
cmp
lahf
in
push
or
es
add
adc
cltd
cmp
popa
test
push
sub
jnp
xor
pop
mov
arpl
movsl
cltd
popa
divb
cmp
cmp
mov
stos
pushf
daa
subl
jl
jg
in
add
or
xor
mov
dec
cmp
mov
push
push
mov
outsl
mov
call
outsb
or
loop
jb
inc
hlt
sbb
pop
push
add
invd
clc
es
arpl
ret
aad
testl
shlb
or
inc
inc
les
gs
insb
inc
test
mov
test
enter
cmpsl
outsl
mov
inc
scas
daa
cld
movsb
mov
sub
in
jle
xor
in
out
mov
movsl
dec
mov
jmp
jl
push
mov
inc
xchg
aad
push
aaa
aad
loop
pop
push
rcrb
hlt
push
or
negl
dec
shlb
aad
int
cltd
adc
enter
aas
mov
jnp
lea
into
sbb
dec
dec
out
test
sbb
sub
mov
xor
jge
fs
into
test
mov
cmc
xor
out
add
pop
sub
and
lret
xchg
mov
add
in
jmp
push
xchg
popa
adc
adc
fmull
add
sbb
pusha
add
aad
lret
xor
incb
add
or
pop
xchg
mov
pop
jns
lock
or
sbb
div
insb
or
nop
popf
aaa
jl
xor
mov
jbe
adc
inc
pop
add
pusha
imul
sbbl
xchg
xor
ds
insl
test
mov
and
push
out
or
add
es
dec
lds
dec
sub
xchg
mov
push
aam
shlb
mov
mov
outsb
or
pop
test
adc
arpl
dec
fildl
push
addr16
loop
adc
dec
mov
cmp
insb
rcl
cld
mov
adc
aad
movsl
fdivr
cltd
popa
jg
or
stos
dec
jne
add
xor
xchg
push
lret
cmp
sub
sbb
out
in
jb
shlb
sbb
jge
outsb
or
inc
ss
in
arpl
repz
clc
jmp
xchg
inc
lock
mov
cmp
add
addr16
inc
stos
repnz
mov
push
cli
outsb
jecxz
dec
pop
cmpb
test
popf
inc
test
roll
or
push
hlt
repz
arpl
sub
inc
cltd
add
test
mov
nop
or
lret
lea
add
and
jle
jae
push
gs
inc
add
mov
scas
or
outsl
add
fdivrl
repz
fidivl
inc
and
out
cmp
mov
jle
mov
inc
loopne
cmp
mov
lret
enter
sub
push
call
mov
mov
pop
mov
mov
jns
sbb
cmpsl
mov
mov
xor
ja
cmc
sti
mov
and
cmc
xchg
xchg
xor
and
lds
dec
jbe
mov
lret
mov
sbb
fstl
or
add
xchg
ljmp
mov
jp
adc
fisubrs
shlb
mov
imul
fs
xchg
pushl
xchg
jecxz
and
adc
adc
rcr
jno
leave
dec
dec
mov
aam
sarl
aaa
jnp
dec
cld
pop
test
pop
lods
jmp
mov
mov
dec
les
fdivrs
mov
repz
push
push
or
scas
shrb
mov
mov
jg
das
push
test
sub
imul
dec
pusha
cmp
es
mov
push
loop
inc
add
rol
inc
jno
mov
enter
pop
cs
dec
aad
test
dec
dec
icebp
dec
sbb
repnz
inc
mov
mulb
pop
and
dec
inc
xchg
push
cli
jns
cmc
or
sub
call
je
popa
xchg
negb
jae
das
inc
fwait
stc
clc
xchg
test
aam
cmp
or
mov
lret
fxtract
rolb
bound
or
pop
enter
cltd
jmp
sar
fwait
mov
inc
insl
fdivl
push
clc
and
mov
inc
add
adc
mov
pop
or
scas
cwtl
lods
xchg
jns
mov
ret
mov
cmp
lds
les
in
push
jo
cld
mov
cmp
out
fmull
movsb
mov
jo
or
jle
bound
mov
repnz
mov
arpl
dec
sub
daa
push
inc
or
dec
lods
aaa
test
and
lea
int
call
mov
ss
es
pop
mov
xor
mov
fstpl
sahf
das
fcmovne
pop
in
pop
imul
lea
mov
loop
in
pushf
movb
lcall
pop
push
repz
lock
mov
mov
loopne
xchg
fstl
pushf
sbb
xchg
loopne
outsb
push
pop
movsb
outsl
imul
pusha
mov
data16
sti
dec
cmpsl
xchg
out
aaa
add
and
or
shrb
ljmp
out
lret
rcrl
sbb
out
xor
or
inc
cmp
loope
dec
call
jle
jmp
push
jge
js
fldt
add
into
jmp
jbe
xchg
repz
push
pop
lret
jne
in
daa
mov
lahf
cmp
shr
cmp
and
mov
sbb
cmp
xchg
fwait
pop
rep
and
gs
pop
xor
ja
mov
and
push
sbb
pusha
in
call
pop
cmp
xor
dec
xchg
leave
cmp
imul
in
xor
sbb
jle
addr16
mov
ret
jecxz
loope
outsl
ljmp
das
nop
divl
mov
aas
std
imul
daa
pop
adc
jg
jbe
repz
loope
xor
mov
fwait
lock
aaa
sbb
sbb
fs
mov
jp
out
cwtl
out
pop
push
lahf
std
lcall
rolb
scas
push
xor
aam
xor
mov
outsb
mov
add
inc
sahf
xchg
das
movsb
fwait
stos
sbb
scas
add
mov
outsb
jg
pop
aad
adc
lods
repnz
rolb
inc
pop
cs
adc
enter
arpl
aam
mov
mov
pop
pop
pusha
aam
jge
jne
outsl
data16
in
inc
out
inc
ret
leave
mov
pop
xchg
xor
movsl
xor
stos
xchg
fimull
fnstcw
xchg
cmpsl
jo
dec
mov
insl
push
mov
pop
mov
jmp
sbb
outsb
xchg
cmp
add
std
mov
jg
testb
dec
adc
out
lret
int3
jne
add
rol
sub
inc
cmp
cmp
sub
in
outsb
popa
rclb
mov
or
je
dec
xchg
jnp
inc
fs
std
push
jne
mov
lds
insl
and
lret
xchg
cmp
pop
xchg
and
test
scas
push
test
mov
jmp
adc
sub
cmp
hlt
or
mov
mov
pop
inc
fdivrl
jno
inc
insl
jne
xchg
das
dec
adc
aas
movsb
xor
je
inc
xchg
jecxz
andl
repnz
xchg
push
cmp
mov
mov
mov
xlat
je
lret
dec
xlat
daa
js
xchg
inc
mov
int
out
or
xchg
push
xor
push
lea
ret
mov
in
pop
pop
xor
scas
div
jp
and
push
sub
cltd
int
xchg
loope
push
and
adc
mov
test
ljmp
push
ja
dec
mov
mov
fcomps
je
inc
inc
sub
stc
aam
push
push
pop
jmp
add
jno
sbb
rol
ja
xlat
and
mov
xor
lea
insl
dec
mov
or
icebp
int
fnsave
mov
mov
jno
in
mov
xchg
mov
ja
cmp
or
or
jnp
sbb
jle
dec
jge
cld
iret
clc
inc
repnz
gs
lods
adc
cmp
mov
jecxz
adc
pushf
xor
scas
jle
dec
sub
push
xor
dec
in
mov
out
or
pop
cwtl
push
pushf
scas
aam
sub
and
mov
and
ret
or
cmp
enter
mov
in
jg
xchg
addr16
dec
and
pop
pop
int
xor
dec
repz
lods
sub
nop
adc
dec
push
jno
jp
lcall
in
outsb
aam
pop
cmp
int3
popf
mov
in
dec
inc
mov
aaa
cmpsl
xchg
jo
in
mov
pusha
iret
sub
xorl
or
test
or
mov
sbb
inc
sahf
cmp
mov
and
cmp
jge
and
mov
or
mov
ja
clc
adc
enter
mov
push
xchg
fbld
jge
push
xor
imul
adc
xor
dec
and
sbb
cld
and
in
xor
fbstp
mov
or
addl
dec
les
sbb
lret
test
xchg
inc
roll
aam
jge
lahf
loopne
cld
mov
dec
inc
sbb
fs
aaa
sub
adc
popa
jae
sarl
insb
inc
mov
mov
cmp
cmp
mov
cmp
repz
sbb
lret
mov
adc
add
rep
ja
mov
aam
mov
out
fsts
mov
jecxz
or
lcall
test
js
mov
cmp
lret
popf
jae
aaa
dec
fwait
add
test
push
push
dec
je
fs
jmp
push
rolb
adc
mov
sbb
push
int3
or
das
and
addb
mov
mov
mov
les
push
movsb
mov
inc
lea
xchg
mov
lods
mov
sub
decl
mov
mov
cmpsb
fwait
and
xchg
out
dec
or
mov
push
pop
add
cwtl
mov
int3
xor
sbb
xlat
add
mov
mov
cltd
testl
xor
push
inc
out
xor
sub
xchg
fdivrp
das
int
push
sub
lods
xchg
sub
lods
inc
loope
je
int
fisttpl
imul
inc
icebp
xchg
xchg
add
ret
std
jne
cmp
and
jge
std
mov
repz
adc
sub
pop
sarb
xlat
cld
adc
test
subb
jge
loop
fcompl
push
sbb
repz
or
sub
lret
cmp
jae
adc
inc
jmp
imul
inc
pop
pop
dec
cmp
or
out
adc
sbbb
test
mov
lea
or
or
mov
mov
aas
repnz
pop
xchg
mov
mov
fldenv
mov
aaa
notb
adc
lods
xlat
out
sti
dec
xor
imul
popf
cmp
dec
mov
xchg
clc
sbb
out
inc
mov
pushl
xchg
cli
adc
loopne
movsb
mov
imul
fdivs
add
ljmp
pop
ror
and
dec
or
mov
sub
rclb
pushf
or
push
inc
mov
cmp
jbe
jge
xchg
mov
sub
scas
rcl
dec
xchg
rorl
xlat
call
xor
loop
push
les
mov
loop
and
jno
pusha
and
or
adc
cmp
lahf
jb
cmc
aad
test
mov
jmp
cmp
imul
mov
stc
cmc
mov
mov
cmpl
int3
repz
mov
dec
jb
jo
lahf
dec
and
push
ljmp
mov
jge
xchg
xchg
mov
or
ljmp
xchg
ljmp
rolb
jbe
pusha
mov
jo
pop
leave
test
cs
mov
jle
jg
fiaddl
test
sub
jae
in
dec
es
arpl
jge
or
popf
mov
int
sbb
scas
insl
cli
mov
int3
mov
std
scas
xchg
in
test
sub
scas
cli
and
movsb
iret
mov
in
dec
push
pop
shll
inc
sub
push
pop
in
sbb
mov
adc
sbb
ljmp
inc
mov
adc
cmp
cmc
or
add
aas
dec
push
or
adc
sbb
cwtl
ss
sbb
adc
mov
mov
push
fbld
mov
inc
fnsave
jp
ret
addr16
or
inc
pop
sub
and
jmp
sub
out
fwait
mov
adc
sbb
mov
jecxz
popa
push
leave
dec
lea
into
or
arpl
outsl
jecxz
loope
jmp
mov
loopne
xchg
mov
ljmp
mov
out
scas
jle
jl
fmul
xchg
cld
push
dec
dec
cmp
pusha
xchg
cmp
inc
adc
data16
pop
pop
cs
dec
add
or
push
sbb
xchg
testb
xlat
pusha
xchg
push
push
pop
std
test
popf
arpl
cmpsl
es
test
add
icebp
arpl
cmp
shlb
xor
mov
nop
mov
rcr
and
xchg
or
ss
sbb
xchg
or
mov
std
aad
sub
push
cmpsl
xor
xchg
je
int
pop
and
dec
mov
lret
cmp
testb
ja
xlat
shlb
scas
sub
push
dec
pushf
mov
daa
pop
je
or
out
sub
insl
add
inc
push
or
outsb
imul
imul
jmp
imul
or
imul
fistpl
and
and
in
xor
shll
adc
ljmp
push
bound
cmc
add
int
xor
mov
mov
jle
int
insl
sub
movsl
and
or
daa
inc
mov
orl
mov
pushf
mov
in
push
push
xchg
out
sbb
jb
loope
push
movsl
pop
inc
and
xchg
bound
pop
mov
sbb
xchg
aaa
and
negl
add
fwait
or
mov
cmp
imul
mov
jmp
or
or
rcll
xchg
inc
pop
inc
xor
xor
or
xlat
lcall
je
cmp
roll
test
mov
add
mov
or
movb
inc
cmc
xchg
das
add
lea
xchg
push
sarl
inc
cli
shll
xchg
jne
aaa
mov
ret
pop
pushw
cmc
mov
sub
mov
fistpl
push
cmp
mov
testl
icebp
jmp
jle
xor
ss
xor
js
or
mov
fiaddl
mov
pop
mov
pop
mov
je
rorb
xchg
jne
adcb
cmp
xchg
adc
dec
jb
jge
mov
popf
xor
jns
pop
push
movsb
std
leave
mov
jecxz
aad
jmp
ja
pusha
lds
shlb
cmc
insl
cmp
inc
add
add
ret
mov
cmp
loop
cmp
jmp
lods
and
test
jg
test
popa
or
pop
mov
mov
lock
mov
cmp
xor
repnz
mov
cmpl
lock
sub
push
repz
add
sbb
dec
test
xchg
jbe
pop
jo
push
std
aad
mov
nop
test
mov
mov
lcall
or
push
dec
pop
jl
insb
out
mov
movsb
mov
xchg
lret
mov
jbe
cmpsb
jns
add
rcrb
stos
push
subb
pusha
ficoml
dec
and
dec
mov
mov
push
adc
adc
sar
cmp
dec
std
cmp
jmp
repz
jle
push
lods
cmp
mov
and
out
jbe
mov
sub
cmpsl
dec
mov
adcb
scas
cli
cmpsl
fdivs
mov
dec
xor
inc
inc
jle
out
xchg
xchg
pop
stc
fidivs
xor
xchg
ja
push
cmp
sbb
xchg
add
sbb
je
loope
xor
jo
aas
xchg
pop
jmp
cld
cwtl
pop
lret
and
js
mov
sub
or
mov
mov
dec
imul
das
sub
jbe
sahf
shlb
subl
andl
ret
add
test
xchg
xchg
addr16
rep
xor
imul
and
xor
mov
and
ds
inc
sbb
fmul
sahf
shrb
leave
push
jge
ds
negl
loop
lea
rol
fucomi
push
cmp
sbbb
outsb
push
shlb
sub
inc
bound
dec
sbb
div
cmpsb
movsb
or
inc
add
fisttpl
in
sahf
cltd
jbe
rcrb
and
ss
ret
shlb
cltd
imul
sbb
add
sub
adc
dec
dec
mov
xchg
leave
and
sarb
dec
jae
lret
cmp
push
or
xchg
mov
mov
pop
gs
add
push
cs
aad
call
cmp
ds
sub
xchg
xchg
jge
popf
cmp
xchg
sub
xchg
movsb
jmp
xchg
vcvttsd2si
mov
add
push
pop
rorb
cmp
add
inc
ret
jbe
icebp
imul
lock
jns
rolb
xor
jge
movsb
es
inc
mov
pop
mov
mov
xchg
pop
aas
popf
cld
int
mov
or
add
or
sub
insl
imul
lods
icebp
call
xchg
in
cmp
xor
xchg
lret
nop
ja
mov
inc
stc
mov
mov
ja
rcr
clc
mov
or
mov
lea
jne
daa
adc
add
mov
and
outsb
inc
ss
push
pushf
pushf
jbe
adc
mov
and
add
out
icebp
sbb
dec
and
adc
lods
pop
cmp
adc
mov
adc
gs
adc
pushf
lcall
push
fnsave
sbb
mov
jmp
and
aas
sti
loope
sti
movsl
xlat
dec
lds
cmp
pop
cmp
stos
mov
mov
or
jge
sbb
lds
push
xchg
mov
in
mov
cmp
inc
pop
xorl
pop
ds
mov
rcll
add
fwait
aad
lods
repz
sbb
dec
inc
mov
pushf
cld
cmp
test
pop
or
jae
push
bnd
jbe
cwtl
arpl
pop
jns
insb
mov
adc
mov
pop
or
mov
dec
and
jl
mov
test
push
mov
mov
scas
push
scas
and
shl
add
inc
dec
or
push
call
mov
popf
mov
out
push
push
jbe
fucom
fwait
cltd
aas
test
mov
daa
inc
add
mov
adc
mov
xchg
dec
jle
das
out
lret
mov
pop
loope
add
orb
loop
ficoml
xor
sti
mov
add
push
hlt
leave
testb
cmc
inc
stos
das
push
fwait
nop
mov
sub
dec
aam
or
pop
in
adc
mov
jb
je
cmp
call
cmp
imul
xor
cmpsb
lods
dec
cmpsb
mov
popa
fdivrl
mov
sar
pop
inc
jp
insl
popf
dec
lods
out
in
bound
dec
xor
and
arpl
mov
add
or
andl
cmpsl
mov
mov
stos
ss
sbb
aam
pop
icebp
mov
mov
inc
and
mov
push
dec
cli
xchg
rcl
jbe
mov
ret
loop
mov
push
jecxz
sbb
cmp
stos
push
mov
das
inc
imul
out
xor
lock
push
sti
fldl
xor
sarb
pop
call
xchg
inc
loopne
lods
push
add
cmpsl
or
cs
mov
mov
jnp
arpl
inc
jne
iret
addr16
dec
cmpb
dec
cltd
lea
test
dec
lods
adc
lock
push
insb
gs
jge
repz
adc
sti
add
push
inc
imul
mov
stos
add
mov
test
rcr
test
adc
pop
mov
cmp
or
in
pop
adc
xchg
adc
dec
mov
je
pop
add
aad
lcall
xchg
es
mov
sub
xor
icebp
jl
push
out
ficoml
jp
add
dec
push
lcall
xchg
addr16
mov
cmp
stos
arpl
adc
or
lret
mov
mov
push
jmp
or
out
xchg
xchg
rdpmc
out
sub
cli
mov
out
xor
jae
mov
jo
jbe
mov
mov
je
in
stc
out
xor
adc
outsl
push
xchg
fwait
pop
or
fidivrs
jae
pusha
mov
xor
imul
in
push
mov
mov
xorl
or
mov
movsl
data16
dec
cld
and
cmc
daa
xor
insl
xor
xlat
dec
stos
into
xor
lods
aas
ljmp
mov
out
or
std
push
jo
fstps
sub
lret
jge
mov
lock
or
mov
stos
dec
shl
pop
jno
repz
dec
add
pop
xor
lret
jb
jae
sub
outsl
gs
mov
mov
nop
movsb
lods
in
jle
jle
pop
sub
loope
fcoms
sub
fsub
pop
jne
outsl
mov
jg
into
imul
shll
or
add
ds
in
loope
sbb
cmp
out
ljmp
cltd
jg
pop
push
cmp
call
or
cmp
pop
cmc
sarb
jecxz
fsubrl
add
xor
jmp
rol
cld
imul
jge
and
sti
xlat
rcl
ss
fimull
push
lds
push
shll
scas
add
lret
aas
out
int3
dec
popf
adc
mov
scas
stos
push
inc
lret
or
adc
sbb
out
into
call
inc
mov
add
aaa
fcmovnbe
das
fnstenv
push
cmp
xchg
fisubrl
scas
mov
lods
or
movsb
pop
mov
cli
push
movsb
add
sub
inc
repnz
and
hlt
pop
jl
loopne
addb
mov
loop
ja
or
fsts
mov
mov
mov
push
neg
cmp
ret
cmp
inc
mov
push
cmp
push
xlat
jp
cmp
fisubrs
pushf
aad
nop
adcb
dec
je
int
mov
loope
movsl
inc
frstor
outsb
inc
sbbl
sbb
movb
mov
std
shll
mov
dec
leave
fwait
inc
inc
cli
enter
sub
enter
push
aaa
lret
inc
enter
dec
lods
xchg
imul
jecxz
pop
cs
push
push
and
fnstenv
loopne
pop
movsb
cmp
and
daa
xchg
lds
cli
rolb
push
rcr
mov
cmp
or
shr
mov
test
sti
mov
mov
fs
sbb
test
and
fwait
adc
sub
pushl
push
into
in
iret
or
sbb
aam
movsb
lret
push
sbb
aam
loope
and
inc
lret
jg
fcomps
mov
rcrl
int
push
pop
jo
cmpsl
dec
stos
xor
ljmp
adc
test
pop
lahf
pop
ja
push
fcmovu
xor
jnp
inc
push
pop
sub
insl
mov
adc
mov
in
mov
addr16
or
out
dec
inc
test
popf
leave
mov
repz
ffreep
adc
jp
outsl
and
mov
cmp
mov
xor
dec
call
aaa
inc
sarl
pop
iret
pop
mov
jne
sub
mov
inc
mov
repz
dec
xor
js
in
push
sub
in
or
cs
xlat
mov
or
lds
sub
lret
lea
push
dec
adcb
sbb
pop
add
mov
fdivrs
push
dec
ret
test
jo
icebp
lods
pop
ret
and
jmp
fninit
imull
movsb
jo
dec
jg
sub
xchg
adc
lahf
lock
mov
or
test
dec
or
xchg
xchg
mov
sahf
mov
dec
push
jmp
add
mov
cmp
lea
sbbb
cmpsb
es
cld
cmp
mov
push
cmp
jle
dec
std
inc
mov
sub
mov
adc
or
push
stos
outsb
hlt
mov
insb
inc
in
or
inc
insb
daa
ret
adc
in
mov
iret
jo
mov
fcmove
test
mov
cmp
ljmp
add
inc
inc
fisttps
push
mov
dec
inc
xor
into
cld
sub
mov
ljmp
jecxz
jne
aas
or
mov
or
xchg
movsl
sub
cmpsb
push
jg
jmp
mov
sub
mov
jp
jb
push
addr16
addl
mov
jmp
into
push
xor
fnstsw
add
push
sub
mov
inc
in
shr
clc
mov
into
add
fwait
jl
push
in
push
hlt
sahf
xchg
mov
movsl
repz
adc
in
sti
divl
getsec
into
jl
or
lds
push
js
sbb
into
mov
jb
test
sub
push
add
fldt
adcb
out
sbb
loopne
leave
mov
in
pusha
jg
aaa
xor
lds
jl
mov
aad
pushf
pop
cmc
aas
xchg
inc
and
cmpsl
add
test
pop
out
jb
cmp
mov
adc
lds
bound
cmpsl
ror
mov
outsl
les
jb
cmp
push
dec
push
dec
cld
mov
pop
adcb
sbb
popf
mov
mov
jae
cmpsl
cld
cmpsb
xchg
pop
cmp
jp
lock
lods
scas
sbb
out
or
and
sti
subb
sbb
cmp
xchg
mov
or
xchg
add
rcll
movsl
test
arpl
mov
push
je
and
out
xchg
adc
rcrl
push
pop
dec
cmp
cmpsl
mov
stc
cmpsb
clc
in
popf
arpl
and
sub
mov
jnp
lcall
adc
or
lock
jno
cmp
inc
cmpsb
adc
sti
call
jg
xchg
dec
loope
inc
imul
hlt
push
push
dec
push
insb
mov
test
jge
mov
scas
jl
pop
jmp
insb
in
xlat
faddp
push
in
insb
push
or
jbe
mov
adc
fistl
dec
rorl
cmc
repz
mov
icebp
shl
jbe
jmp
sub
out
push
mov
jnp
rcl
push
cld
mov
orl
into
lret
and
push
mov
cmc
cmp
inc
xchg
mov
lds
ret
pop
jmp
inc
dec
jmp
sub
inc
pop
sbb
pushf
iret
mov
popa
out
push
and
dec
adc
sbb
in
pop
xchg
mov
mov
push
mov
bound
sub
inc
push
adc
add
rcrb
pushf
xchg
lret
aaa
cwtl
loop
mov
push
enter
test
sub
in
xor
insb
aad
loopne
xor
xchg
icebp
xor
and
xor
sarl
mov
jecxz
repnz
mov
stc
sub
sub
dec
mov
add
cmp
loope
test
mov
mov
shrb
pop
nop
jnp
ja
mov
and
or
mov
mov
pop
sbb
cmpsl
jne
int3
sub
arpl
mov
pop
jno
or
fimuls
in
pop
push
mov
cmp
sahf
clc
pop
fistpll
dec
sbb
popa
aas
pop
mov
push
into
cltd
mov
fidivs
cmp
call
sbb
xlat
fs
popl
hlt
mov
pop
mov
cs
not
iret
jecxz
test
cld
add
xor
in
pop
fsubrp
out
pop
xchg
xchg
push
lea
inc
arpl
or
repz
aam
add
push
aam
daa
xor
ja
push
popa
mov
cmp
popa
mov
je
mov
and
addb
jns
pop
push
inc
jp
and
mov
adc
data16
mov
mov
inc
lret
mov
out
inc
mov
push
dec
cmpsb
xchg
xchg
bnd
xor
fldl
adc
adc
lcall
sub
jbe
and
sub
outsl
fsubl
xor
iret
push
mov
outsl
xchg
in
mov
jge
lea
inc
jl
stos
pop
iret
sbbl
test
mov
lock
repnz
popa
or
lods
jno
lods
lcall
ss
dec
ret
je
adc
xor
adc
pop
push
push
mov
lds
mov
mov
or
xchg
mov
mov
rcll
call
call
decb
leave
mov
sbb
xor
jl
je
adc
xchg
push
bound
cmpsb
call
aam
pop
xchg
dec
jnp
pop
mov
enter
aad
rclb
cmp
pop
lods
leave
les
xor
shrl
mov
dec
xor
cmp
cmp
call
insb
cmp
fbstp
addr16
inc
inc
dec
fcompl
cmp
mov
jle
xlat
int
inc
jge
test
mov
and
mov
xchg
outsl
inc
mov
pop
orb
pusha
adc
fwait
ror
pushl
add
xchg
mov
mov
mov
xor
mulb
and
pop
pop
xchg
xlat
sbb
mov
mov
lods
cmp
leave
mov
lahf
xor
out
sub
dec
inc
sbbl
xor
nop
pop
in
lret
popf
add
leave
int3
sarb
jl
sub
mov
popa
out
loope
cld
loope
inc
out
popa
loopne
addl
mov
adc
xchg
hlt
aam
inc
cli
mov
call
cmp
addr16
inc
fsub
sar
aas
add
pop
or
jle
test
add
add
cli
jo
lock
leave
or
xchg
pop
in
inc
xor
aas
dec
mov
and
xor
xchg
lcall
fmuls
inc
jl
shrl
push
icebp
add
mov
sub
inc
imul
sbb
out
popf
and
ret
push
out
mov
sub
shrb
je
call
mov
sub
ror
jecxz
dec
sti
adc
jne
adc
sub
inc
xor
int3
adc
mov
aaa
xlat
jl
pop
gs
cmp
outsl
sbb
out
add
sub
adc
ret
sub
jb
push
cli
iret
xor
adcb
call
push
ficoml
mov
dec
mov
xchg
mov
jns
movsb
mov
ss
add
arpl
mov
arpl
or
cli
aad
je
mov
fdivs
stos
test
sub
jle
js
jae
mov
push
imul
and
bound
rolb
test
movsl
and
jbe
pop
xchg
movsl
xchg
loop
mov
mov
stos
lret
pop
push
lahf
dec
in
jg
sub
pop
add
mov
scas
out
jecxz
push
insb
cmp
xchg
cmp
xchg
roll
out
cmp
ds
ljmp
mov
insl
out
jnp
pop
mov
stos
cwtl
test
or
shrl
pop
inc
push
cmpsl
sub
fwait
lods
dec
hlt
push
out
dec
pop
mov
xlat
lret
call
fcoms
jbe
pop
and
mov
loope
adc
aaa
je
fdiv
and
mov
subb
sub
pop
xchg
loop
imul
push
xor
inc
mov
int
mov
lahf
insl
adc
jae
loop
push
mov
and
ljmp
out
decb
dec
test
sub
sbbl
inc
call
scas
inc
dec
cs
lods
xor
call
and
or
jmp
clc
jnp
mov
out
jbe
mov
icebp
push
pop
mov
outsw
mov
ljmp
pop
sub
inc
add
clc
inc
and
xor
shll
test
cmp
inc
pop
fs
pop
mov
push
pop
push
aad
in
cmpl
push
ret
jae
pushf
mov
inc
or
popf
inc
sbb
push
je
pop
jecxz
mov
fmulp
negb
pop
mov
repz
xchg
inc
sub
inc
movb
pop
mov
mov
fnstsw
jbe
mov
test
ret
cmp
lret
gs
movsb
mov
test
and
jnp
pop
lods
adc
cmp
jle
add
in
cmc
hlt
ss
pop
push
fldt
fwait
add
rcrb
in
sub
jecxz
fsubrs
ds
mov
sub
dec
jge
cmp
xchg
rclb
ret
sbb
int3
sub
andb
iret
dec
xor
mov
outsl
and
addr16
xchg
rorb
cmp
clc
or
or
push
icebp
data16
jo
sarl
repz
sub
dec
insb
dec
rcrl
int3
jp
inc
jl
and
das
mov
gs
data16
inc
fldt
mov
push
jo
jnp
mov
xor
mov
neg
lahf
cmp
fnstcw
and
out
or
xor
into
pusha
dec
push
mov
xchg
repnz
mov
push
add
push
fiadds
hlt
mull
mov
jne
imul
xchg
push
roll
push
fmuls
adc
sub
adc
mov
cmpsb
fisttpll
mov
mov
icebp
mov
popf
dec
cld
or
cmc
subb
cmpsb
mov
mov
les
in
icebp
aam
push
xor
or
add
jnp
or
adc
dec
sbb
pop
adc
fs
and
jecxz
and
xchg
cmp
jg
jb
pop
mov
ret
in
ljmp
sbb
insl
fcoml
data16
mov
push
js
jg
mov
test
jno
scas
xchg
mov
sbb
lods
mov
mov
push
mov
fdivrp
sbb
add
mov
inc
and
sbb
test
add
add
inc
or
xchg
mov
jne
nop
mov
mov
lds
arpl
cmp
icebp
call
fisttpl
jno
rcrl
xorl
outsl
aas
outsl
dec
aam
xor
leave
les
stc
repnz
into
xchg
mov
sbb
push
ss
in
into
inc
jmp
jns
icebp
in
adc
xor
mov
push
das
push
push
or
and
mov
popa
push
inc
cmp
mov
das
ljmp
dec
dec
mov
lcall
faddp
popa
sbb
adc
mov
xchg
repz
sub
je
cli
push
iret
ret
ljmp
jl
xchg
xorb
sbb
jns
lods
xchg
xchg
lds
adc
sbb
add
sub
mov
lret
jg
fnstenv
xchg
popw
jo
scas
xchg
aam
icebp
es
xor
xchg
stc
sbb
divl
and
cmp
mov
jo
mov
insl
test
les
pop
xor
pop
loop
jmp
iret
mov
scas
xchg
aad
mov
leave
sbb
fnstenv
sub
out
stos
add
lea
and
xchg
and
xor
jge
fstpt
aad
hlt
sbb
push
cli
jg
lds
sbbb
rclb
insb
push
push
data16
push
popa
or
adc
cmp
fdecstp
movsl
imul
jle
mov
push
cmp
push
and
outsb
inc
push
test
inc
xlat
sbb
jle
xor
or
lds
cltd
pop
adc
xchg
cmp
sub
lret
or
lock
popf
clc
stc
ja
jbe
cmp
andb
mov
repnz
inc
sbb
xchg
stos
mov
arpl
push
xor
and
addr16
ss
test
aas
ja
dec
add
vmovups
or
outsl
pushf
sbb
jo
lret
outsl
mov
pusha
sbb
stos
in
jecxz
movsb
jecxz
mov
rcll
cltd
cmp
or
xchg
push
inc
cmp
jle
cli
cmpsb
lcall
out
divps
popa
negl
bound
push
fadds
imul
cs
add
or
pop
in
jne
cmpsb
or
mov
aam
mov
out
fisubrs
bound
insl
push
jnp
cmpsl
shlb
leave
neg
jo
cli
jb
das
ljmp
shrb
push
es
add
popa
test
loop
jnp
mov
popa
bound
rcrl
dec
cmpsb
sbb
out
les
aam
jne
push
push
cli
in
ret
mov
mov
and
xor
fistpll
mov
insb
cmp
and
add
or
movsb
jmp
lods
dec
mov
and
cs
pop
sahf
sarl
sub
push
xor
pop
ss
lock
xor
dec
outsl
stos
sub
popf
lock
repz
sbb
repz
dec
pop
sbb
cmp
cltd
scas
mov
aad
sub
lret
das
jne
repnz
mov
xchg
repz
sub
adc
fs
xchg
arpl
rolb
push
or
jl
jg
pushf
cmp
lahf
es
es
dec
dec
cwtl
jecxz
push
ror
fcmovnu
cmp
inc
decb
push
jl,pn
push
jge
xor
sbb
clc
orb
pop
jge
shlb
adc
push
pop
push
dec
mov
push
nop
mov
jp
loop
pop
adc
pop
leave
pop
dec
lret
push
push
fisttpll
jg
scas
js
mov
sub
or
inc
inc
pop
loop
stc
jne
orb
outsb
fidivrs
sub
cmp
les
and
xchg
or
es
sub
imull
mov
or
jae
cmpb
loop
stc
and
leave
cwtl
rcrb
ficomps
mov
imul
xor
into
mov
inc
dec
lock
cmp
push
imul
enter
int3
xor
ror
xor
imul
into
fdivrp
pop
adc
fdivrl
pop
repnz
out
push
movsb
inc
add
adc
cltd
jle
push
sbb
jge
mov
and
add
xchg
das
enter
outsl
jecxz
notl
push
leave
xor
inc
mov
pop
pop
add
jbe
aaa
pop
sub
or
xor
ja
sbb
xor
jge
jo
outsb
inc
sub
cwtl
xchg
sbb
sarb
jle
dec
push
in
mov
fwait
bound
jmp
sub
scas
push
lret
push
xchg
loope
xor
loopne
cmp
sub
orl
fimull
or
xchg
jo
in
sub
xor
stos
lds
inc
jno
iret
shl
xchg
adc
and
and
ja
pop
int
gs
inc
insb
or
sbb
dec
mov
jle
dec
and
loope
scas
shlb
and
dec
sub
outsb
mov
mov
push
cmp
flds
leave
add
cli
or
push
sub
xchg
dec
icebp
lahf
push
jnp
adc
fwait
lret
mov
sub
ds
and
ret
inc
mov
call
mov
xchg
jns
jno
js
xor
add
sti
adc
test
inc
push
test
and
mov
mov
push
add
add
jbe
mov
fucom
data16
dec
xor
jmp
movl
sti
mov
or
flds
aaa
push
loop
inc
mov
repz
ret
or
fists
lret
sub
fsubrl
mov
push
imul
sbb
xchg
adc
aad
mov
mov
pop
jo
ret
mov
sbb
ret
fisttpl
popa
push
lahf
andl
or
cmp
sub
and
inc
iret
cmc
scas
add
std
jb
hlt
xor
std
inc
in
shrb
cmp
ret
dec
jl
clc
in
shlb
and
adc
mov
or
dec
adc
ret
cmpsb
jmp
sub
pop
inc
jo
sub
std
adc
out
dec
adc
pop
xor
out
cli
and
mov
inc
cmpsl
pop
rclb
cmpb
icebp
adc
aad
pop
pop
jmp
jns
iret
les
sub
dec
das
ss
lcall
lahf
xchg
fnstenv
mov
scas
cmp
cmp
scas
jge
adc
and
shrb
test
and
std
inc
loop
cmpsl
enter
dec
adcb
xor
dec
mov
sahf
mov
cmp
pop
clc
iret
out
or
fs
int
daa
adcb
sub
push
push
mov
xor
jecxz
sbb
cmpsb
popa
push
push
push
cmp
and
std
insb
aam
lods
leave
std
insb
push
mov
sbb
lahf
pop
adc
arpl
sub
jns
popa
test
pop
leave
adc
fisubs
shll
out
push
out
sub
sar
outsb
dec
loop
pop
inc
or
cli
pop
lds
sbb
iret
or
rorb
jo
movsb
adc
fistps
mov
dec
pop
mov
inc
mov
xor
mov
push
out
es
mov
stos
rcrl
test
fldenv
dec
repz
inc
imul
xchg
lds
mov
std
mov
or
push
mov
jp
jae
icebp
icebp
into
lret
sub
lcall
sbb
fdivs
or
mov
mov
stos
dec
rol
or
push
pop
pop
fcmovnb
icebp
mov
aam
stos
push
je
mov
xlat
mov
ds
mov
aad
sbb
stos
test
cmpsl
enter
popf
sahf
into
mov
push
sbb
popf
es
inc
and
inc
mov
xchg
movsl
push
jo
push
adc
jmp
jle
jg
xchg
inc
dec
not
xchg
jb
push
ficompl
hlt
leave
pop
and
stos
adc
sub
fcomi
out
mov
pop
xchg
or
lahf
jg
xor
push
pop
inc
lods
sti
mov
jl
scas
aam
loopne
sbb
ljmp
jle
xchg
ret
xchg
or
in
pop
adc
jle
insl
mov
pop
les
lods
dec
aaa
mov
into
sbb
and
mov
cmp
mov
into
dec
lret
adcl
or
or
shlb
popa
cmp
sbb
lock
pushf
mov
insl
xor
pusha
in
jecxz
jnp
inc
fistpl
ret
sub
mov
rolb
insl
jp
std
imul
shlb
popa
dec
scas
movsb
lods
rcrl
sti
xchg
jmp
mov
mov
cmp
stc
ficomps
pushf
sbb
dec
mov
sub
sub
lret
std
and
sbb
popa
or
fstpt
call
xchg
push
bound
cmpsl
test
ret
mov
repz
mov
xchg
and
push
mov
push
adc
xchg
mov
cmp
push
imul
dec
aam
mov
cmp
mov
js
sub
sub
out
mov
push
mov
cmpsl
fisttps
arpl
push
repnz
mov
je
jb
movsl
cld
xor
jae
daa
out
mov
fcoms
into
loopne
jae
sbb
mov
out
hlt
sbbl
mov
movsl
adc
sbb
dec
cmpsl
jg
jmp
fisubrs
fisubl
stos
or
orb
int3
mov
sbb
fld
mov
push
mov
mov
sub
les
lea
dec
mov
xchg
popa
iret
push
inc
inc
pop
mov
test
and
call
lret
rorl
iret
dec
pop
fistps
push
fwait
aaa
push
sub
mov
repz
int3
jnp
lock
jns
loop
cmc
xlat
mov
lods
add
pushf
pusha
inc
mov
bound
mov
push
xor
call
sub
hlt
jnp
fs
sahf
jnp
dec
add
pop
lahf
jns
mov
out
jb
subl
jne
dec
lret
cmpsl
dec
inc
in
mov
popf
add
cmpsl
and
sarl
push
add
jne
and
cmp
out
lahf
xchg
dec
repnz
jb
cmc
dec
jmp
js
ret
in
fwait
popa
out
loope
inc
jecxz
pop
mov
add
arpl
push
movsb
in
sub
mov
rolb
push
popa
test
and
cmpsl
mov
lods
divb
inc
dec
mov
push
xor
push
jmp
es
filds
push
cld
ret
lcall
lahf
mov
add
or
push
jo
inc
scas
push
sub
out
push
daa
lods
sub
or
push
dec
int3
mov
sub
xchg
bound
stos
xchg
mov
adc
dec
push
loopne
stos
orl
sti
faddl
sub
jb
shll
xorl
jecxz
mov
xacquire
sub
aaa
adc
or
int3
notb
cmpsl
adc
icebp
in
jg
mov
std
int3
sahf
or
ljmp
jbe
js
insb
xchg
and
lods
outsb
lea
mov
or
push
leave
js
jle
cli
push
mov
ret
sbb
cmp
cwtl
lahf
lock
cld
popa
bnd
ret
or
mov
ja
ljmp
outsb
xor
push
xchg
mov
stc
xchg
jno
jb
pop
imul
mov
in
pop
sub
cmp
ljmp
mov
sbb
lds
shll
push
push
scas
dec
xchg
lcall
mov
xor
xchg
dec
bound
cli
xchg
push
sub
inc
dec
int
je
lret
sahf
scas
dec
sbb
inc
xchg
or
adc
add
nop
inc
rcll
pop
and
push
sbb
jne
add
imul
les
jns
scas
fistpll
add
arpl
dec
mov
js
stos
bound
rclb
cwtl
ss
ja
rcrl
jbe
pop
jg
mov
sub
fldln2
xor
ret
inc
inc
hlt
and
mov
sub
add
adc
stos
js
lret
xor
cld
dec
mov
es
lock
dec
xchg
addr16
rorl
sbb
mov
and
jle
push
leave
popa
cltd
and
xor
inc
fildll
jo
add
popa
pushf
mov
adc
daa
add
dec
mov
sub
mov
sti
jl
popa
xor
xor
and
in
sub
and
sbb
and
test
xchg
jp
mov
push
dec
xchg
aam
pop
imull
push
jg
pushf
and
js
push
aas
rolb
xor
loopne
push
mov
pop
pop
jg
ds
shlb
xor
push
call
and
pinsrw
rcrl
cmpsl
fnstenv
mov
enter
xchg
call
inc
cld
ds
push
mov
xchg
xchg
push
testb
arpl
jbe
dec
cmp
xchg
and
xchg
ljmp
and
rclb
mov
pop
jbe
mov
pop
call
mov
scas
inc
sbb
cwtl
nop
lods
call
jbe
lock
data16
in
addr16
fs
push
lock
push
mov
dec
and
xor
outsb
mov
enter
and
sub
mov
nop
shlb
jge
lret
dec
loop
icebp
test
cmp
cltd
data16
and
xor
test
adc
mov
les
pushf
mov
mov
out
leave
mov
lahf
shl
xor
inc
mov
xor
mov
add
cmp
push
rolb
pop
insb
sbbb
adc
nop
dec
aad
pop
pop
mov
lcall
sbb
jo
add
or
dec
mov
test
int
fdivs
xchg
leave
mov
push
pop
les
jns
stos
cmp
xchg
popf
sti
push
shlb
add
jb
enter
sub
je
frstor
and
loopne
fsts
repz
mov
jne
add
lret
inc
outsb
dec
lods
adc
xor
cld
xor
pop
mov
inc
cli
ja
dec
sbb
pop
dec
and
je
mov
cld
gs
stos
pop
and
adc
adc
sub
shrb
data16
jb
sub
addr16
inc
sub
xchg
imul
push
sub
xor
pop
lahf
addr16
and
xchg
imul
cltd
inc
ljmp
pop
idivb
data16
bnd
test
lock
pushf
or
and
push
rcll
sahf
aad
add
cmp
nop
into
mov
adcb
repnz
xor
fwait
sub
and
pop
jg
adc
jnp
xlat
je
lods
loopne
xor
mov
add
push
sbb
loop
out
scas
mov
cmp
pop
lock
js
mov
popf
or
test
jg
push
scas
hlt
gs
popa
cs
adc
ret
nop
mov
cltd
sub
inc
mov
push
les
dec
popa
loopne
mov
stos
dec
test
shl
xchg
pop
and
mov
inc
in
loopne
jl
xchg
mov
sub
lret
sub
movsl
and
pop
mov
add
dec
int3
imul
jge
je
adc
dec
mov
and
add
jne
aas
sub
jae
inc
lock
scas
pop
mov
adc
pop
stc
movsb
loop
pop
fiaddl
ja
pusha
ljmp
dec
fldcw
call
fisttps
rorl
cmp
rcrl
or
repnz
in
lea
or
xchg
push
pop
push
data16
push
mov
xchg
jge
repnz
adc
adc
in
rcl
scas
xchg
sub
lods
push
xchg
ror
push
arpl
arpl
adc
iret
addr16
jp
mov
sub
je
jge
ret
pop
add
lahf
cwtl
sbb
mov
lods
or
mov
mov
mov
loopne
xor
js
xchg
into
and
rcrb
pop
push
dec
ljmp
and
addb
mov
sbb
out
jg
sub
mov
inc
add
lods
adc
xchg
sbbl
or
in
inc
stc
add
xchg
idivl
fistpll
rcll
mov
dec
repnz
mov
cmpsl
adc
mov
xchg
aad
or
popa
les
les
loopne
dec
call
les
mov
and
pop
js
dec
xchg
adcl
jbe
loop
inc
mov
mov
mov
mov
sbb
gs
mov
mov
push
cmp
push
das
repnz
xor
dec
in
dec
jb
bound
xchg
xchg
roll
lods
in
pop
lcall
out
ja
repz
shlb
mov
lds
mov
inc
popa
sub
sbb
jge
std
aad
adc
jae
sbb
dec
push
cmp
ljmp
es
mov
or
rorb
divl
sub
out
cmp
push
mov
ljmp
xchg
add
or
mov
xchg
xlat
cmp
cmc
gs
fists
cmp
ja
pop
add
test
mov
sbb
or
stos
lock
insb
pop
xchg
inc
sub
inc
push
repz
cmc
aam
cmp
mov
cmp
imul
mov
sbb
add
test
jmp
xchg
pop
add
movsb
insl
mov
inc
cmp
lcall
stos
xchg
mov
insl
fisttps
lret
aas
cld
sub
jns
movsb
inc
loopne
mov
push
cmpsl
mov
jno
or
push
filds
add
out
loop
and
cmp
sub
xchg
adc
sbbb
pop
dec
call
loopne
xor
movsl
and
cmp
lods
inc
mov
icebp
sbb
adcl
test
or
pop
stos
js
cltd
lret
call
sub
arpl
shll
adc
push
sbb
mov
data16
xor
sbb
xlat
cmp
stc
add
call
shrl
jae
out
add
enter
movzbl
pop
xchg
xor
dec
inc
sbb
les
jnp
cltd
loopne
lret
cmp
cmp
push
mov
or
push
inc
xchg
adc
jg
test
shlb
dec
shlb
mov
call
cmpb
sbb
and
hlt
pop
lods
pushf
mov
xchg
into
xchg
xchg
rorl
cltd
mov
push
test
mov
pop
push
addl
icebp
repnz
pushf
xor
lods
hlt
pop
arpl
xor
push
xor
mov
mov
add
pop
cmc
sbb
into
fwait
popf
jns
jge
pop
test
cltd
lods
imul
sbb
cld
xorl
mov
into
or
mov
lret
repz
scas
out
mov
or
jnp
daa
sbbb
mov
or
adc
and
pop
out
sbb
daa
jmp
jp
or
pop
sub
les
and
rorb
ss
dec
mov
xor
dec
adc
jle
std
mov
movsb
iret
lahf
aas
mov
jo
sahf
fwait
shrb
shrb
inc
or
cmp
and
mov
mov
ljmp
mov
cs
mov
and
jg
dec
sub
out
aad
pop
lcall
or
cs
mov
or
xchg
jge
mov
jle
or
icebp
push
push
jmp
ret
pop
jb
add
xchg
add
in
sub
incl
lock
call
aam
pop
loopne
xor
movsl
shll
and
xchg
nop
xchg
mov
mov
hlt
in
jl
mov
dec
ljmp
in
dec
enter
jmp
cmp
daa
push
mov
mov
add
sub
out
push
lods
int3
std
jno
lods
fwait
arpl
outsl
pop
mov
or
cmp
push
jbe
in
mov
or
lds
xchg
add
xlat
inc
scas
mov
dec
dec
sub
push
stos
mov
mov
add
push
xchg
adc
adc
push
or
pop
xlat
aad
ljmp
mov
test
ljmp
jle
jmp
cli
rcrl
sbb
int
faddl
xor
mov
cmp
xchg
inc
inc
lock
dec
push
or
loopne
cmp
add
dec
adc
hlt
pusha
ds
push
inc
data16
cmp
adc
pusha
and
mov
mov
arpl
pop
adc
adc
test
mov
in
fidivl
in
mov
nopl
xchg
and
cltd
pop
int
out
test
inc
jecxz
mov
jne
jl
cmovle
push
cmpsl
call
pop
loopne
fidivrs
sub
and
and
push
pop
aam
push
call
pop
cmp
lret
jmp
lock
jmp
movsb
or
add
xchg
in
fsubl
clc
push
sub
adc
das
mov
in
xor
jge
hlt
sahf
mov
push
testl
push
add
outsl
cmp
dec
std
popf
lahf
mov
cmp
sbb
jg
lret
cwtl
mov
sbb
xchg
out
lret
jae
or
test
mov
fsub
lret
push
repz
push
cmp
rcl
push
nop
arpl
dec
dec
out
sbb
fisubrs
ds
outsb
pop
add
sbb
dec
and
lods
ja
xchg
xchg
pop
push
aas
sbb
call
pop
and
ds
add
popf
rolb
pop
stos
add
jbe
add
js
scas
les
push
and
mov
push
not
jmp
les
hlt
mov
mov
push
sti
jnp
lods
push
repnz
xchg
mov
sbbb
sbb
cld
fsubrs
test
add
and
lcall
aaa
xchg
jo
sub
pop
aas
cmp
mov
xchg
addr16
cmpsb
stos
mov
outsb
inc
scas
inc
pop
jb
xchg
aaa
dec
jg
lock
in
daa
and
xchg
fwait
pop
jg
xchg
xor
jno
sahf
sub
inc
daa
and
cld
leave
shl
ljmp
xor
adc
clc
push
les
cmp
or
mov
cmp
mov
cmp
jmp
xchg
push
rclb
sbb
dec
aam
xchg
push
addr16
aas
xor
sti
in
gs
xor
lods
filds
mov
or
add
imul
xchg
jnp
mov
int
mov
jp
pop
xor
gs
test
fistpll
addl
outsl
loope
adc
getsec
xorb
jmp
push
loope
cltd
mov
sarl
push
mul
je
leave
cltd
ds
mov
fidivrs
das
sub
pop
mov
add
icebp
adc
mov
cmc
add
cmp
sub
inc
mov
jb
jbe
push
mov
jecxz
jne
sbb
pop
test
push
enter
iret
pop
cmp
push
test
sti
cmp
in
mov
xchg
iret
or
push
sub
test
mov
mov
jl
divb
addb
ds
es
subl
xchg
in
imul
add
cmpsl
lret
and
cmp
fisttps
pusha
int
outsb
adcb
jo
or
aam
movsl
mov
je
or
cmpsl
push
cli
xchg
aas
jg
sbb
mov
mov
rolb
mov
inc
in
pop
bound
add
in
rclb
sbb
push
pop
adc
mov
jl
test
xchg
mov
in
gs
movsb
roll
xchg
pop
cs
sub
adc
xor
inc
outsl
fsub
xlat
mov
test
mov
adc
mov
test
stos
or
add
dec
lea
insl
rorl
and
mov
pop
mov
adc
inc
cmp
push
jae
jl
fs
scas
sbb
repnz
push
adc
and
lcall
mov
subb
cmp
shl
repz
push
jecxz
out
loop
sbb
sti
mov
mov
mov
imul
testl
and
xchg
dec
neg
mov
add
push
and
notb
leave
cmp
aaa
push
or
aaa
inc
and
rcrl
mov
icebp
mov
mov
ret
mov
or
lea
xchg
and
push
adc
rcll
inc
outsb
cmp
mov
lea
xchg
imul
mov
lcall
icebp
pop
ret
mov
test
mov
insl
jp
fwait
js
test
and
xchg
arpl
mov
lods
aad
iret
je
mull
cmp
sti
roll
scas
sbb
insb
in
cmc
enter
dec
xchg
stos
xchg
clc
lret
sub
sub
xchg
xor
add
int
jns
push
push
pop
dec
mov
dec
inc
loope
and
ljmp
adc
cmp
xchg
jmp
in
adc
sbb
push
push
call
jns
ret
gs
rcll
push
pop
sbb
outsl
xor
lret
push
inc
fstpt
xor
aaa
inc
lret
iret
fisttpll
std
imul
stos
int3
outsl
test
imul
jns
mov
pop
cmp
daa
dec
repz
fs
test
mov
cmp
xchg
adc
inc
mov
xchg
fistl
enter
xor
outsb
lds
jl
push
lods
iret
ret
adc
loopne
lret
hlt
leave
in
pop
in
imul
fadds
out
and
scas
adc
test
xchg
mov
gs
lods
pop
fcmovne
adc
inc
xor
aas
jae
sbb
test
cmp
sub
into
call
shl
imulb
or
in
scas
jle
pop
int
faddl
arpl
outsl
int
loop
mov
repz
xor
ljmp
push
sbb
sbb
jno
sub
adc
or
cs
rcr
jecxz
mov
popf
pop
leave
mov
hlt
sbb
and
int
jns
mov
add
lcall
xor
dec
fiaddl
pop
cs
and
je
pusha
loop
and
or
out
int3
xchg
dec
ret
jns
mov
cmp
js
leave
adc
dec
ror
dec
jmp
bound
cmp
in
dec
cli
jmp
inc
scas
daa
imul
outsl
mov
sub
iret
test
jnp
je
hlt
cli
xlat
xchg
push
add
lcall
imul
cmp
cs
shll
dec
ljmp
enter
das
push
hlt
xor
inc
test
cmp
mov
xlat
add
dec
popf
cmp
adc
push
shll
add
jae
test
jbe
cmp
test
or
cli
mov
aaa
aas
add
cmp
mov
xchg
out
out
jle
movsb
fsubrl
sub
test
push
addb
aad
sbb
mov
repz
cltd
sbb
scas
adc
sub
mov
popa
cmp
jnp
jl
push
cmpsl
sbb
subl
mov
sarb
dec
mov
lock
dec
loop
jl
jl
sub
dec
mov
aaa
push
icebp
dec
loopne
and
mov
repnz
jmp
push
and
jne
arpl
xor
out
insl
xchg
lahf
xchg
in
nop
movsl
insl
clc
push
test
pop
out
test
shl
push
enter
ret
push
movsl
mov
mov
loop
mov
into
inc
jmp
push
cmp
mov
jecxz
push
fidivrs
test
lahf
and
adc
xchg
dec
ja
cmpsl
frstor
dec
jl
xchg
pop
movsl
pop
inc
push
fsubr
cmpsl
dec
arpl
mov
sub
cmp
es
pop
inc
fldenv
xlat
cmc
rcrb
lea
ljmp
in
cltd
xor
loope
cli
fistpll
outsl
and
xlat
nop
mov
push
cmc
xor
sub
dec
test
cmp
sbb
sub
push
add
or
sbb
and
faddl
mov
testl
xchg
jne,pn
shll
and
or
or
sarl
add
mov
mov
mov
stc
popa
mov
icebp
ljmp
dec
add
insl
mov
push
jmp
jnp
xlat
lret
movsb
jle
jo
add
int
mov
jg
hlt
dec
inc
imul
cmpsl
and
into
jle
scas
inc
lds
loope
test
repz
mov
pop
daa
int3
sub
cltd
dec
mov
and
fsubrl
cmpsb
mov
lock
cmp
nop
inc
mov
mov
xor
orb
ret
insl
and
insb
push
pop
nop
inc
je
jmp
orl
cmpsl
call
mov
push
push
shlb
xchg
cmc
jp
mov
push
faddl
jae
sti
xor
sub
stc
push
adc
xchg
adc
xlat
or
out
and
js
xor
cmp
pusha
adc
ja
lea
sub
and
jge
fimuls
cld
cltd
mov
sarb
push
shl
jb
cmpl
aaa
mov
mov
sbb
mov
inc
jg
mov
pusha
sbb
add
inc
xchg
push
cmp
pushf
ds
cli
mov
mov
lret
mov
dec
jno
scas
mov
cmp
pop
cmp
jp
cmp
mov
repz
les
and
mov
sub
flds
outsl
add
cmpsl
pusha
or
mov
jno
xchg
inc
xchg
add
faddl
xor
mov
imul
adc
fs
lds
in
sbb
mov
das
movsb
jecxz
xor
pop
dec
popa
aas
sub
xchg
mov
inc
das
insl
iret
mov
loope
pop
inc
sbb
iret
cmp
mov
div
or
and
leave
adc
push
push
xlat
orb
loop
push
mov
xchg
inc
sub
sbb
std
or
sub
fsubr
in
sbb
outsl
imul
xor
pop
and
inc
and
sahf
adc
fnstcw
ss
orl
xlat
in
dec
mov
in
fidivl
lret
ror
sbb
ret
dec
loop
pop
or
movsl
fnsave
inc
push
xchg
jecxz
push
in
data16
or
inc
cmp
mov
out
cs
lock
outsb
into
cli
je
mull
pop
jnp
outsl
pop
jmp
add
dec
add
add
leave
jecxz
stos
dec
andb
loope
xor
repz
cmp
mov
xor
mov
mov
mov
sbbb
mov
ljmp
jmp
pop
in
pop
in
mov
movsl
xor
js
idivb
mov
mov
dec
pop
push
cmc
push
and
lods
xor
jnp
xor
cmpsl
fidivl
dec
lret
clc
xlat
js
dec
nopl
mov
outsl
call
add
sbb
cmp
jnp
pop
sbb
lahf
mov
outsl
mov
sub
adc
imull
shrb
in
push
adc
cmp
das
and
mov
inc
lods
jl
rorl
or
out
push
test
pusha
pop
cmp
and
lock
mov
in
adc
jp
xchg
lret
xlat
gs
stos
add
std
push
push
mov
lret
nop
rclb
mov
addb
std
cs
outsl
cwtl
adc
loope
enter
sahf
xchg
std
in
push
dec
sub
hlt
bound
add
ljmp
sub
loopne
adc
mov
add
jle
mov
int
out
xchg
xchg
and
sub
xor
adc
cli
hlt
imul
out
jge
negb
repz
fimuls
xchg
movsb
rcrb
lahf
adcl
int
aas
imulb
ror
or
sar
pop
stc
stos
jp
push
test
shrb
sub
les
xlat
push
pop
mov
pop
and
fmull
stos
cli
mov
xor
in
repnz
dec
loop
insl
jb
subl
xor
in
xchg
adc
push
xlat
outsl
sub
jb
daa
push
add
clc
and
orl
and
addb
cmpsl
js
scas
mov
mov
pop
fmull
popf
scas
xchg
add
mov
lock
hlt
sbb
and
mov
sbb
mov
jle
add
repnz
aad
sub
jmp
cmp
in
popa
xor
or
xchg
mov
lock
push
leave
xchg
leave
ja
mov
inc
or
lods
frstor
test
or
movsb
lret
jne,pn
inc
or
xchg
mov
rorl
sub
shr
push
mov
mov
sbb
xor
inc
jns
les
out
push
mov
push
outsl
clc
out
shll
stos
imul
cmp
lahf
aas
jg
xchg
dec
inc
inc
adc
pushf
lea
xchg
dec
cmp
les
mov
xor
mov
sbb
cmpsb
jo
movsb
xchg
sti
push
inc
adc
xchg
aaa
rorb
add
mov
and
movl
xchg
sub
add
cli
sti
out
push
sub
push
testb
inc
mov
out
mov
dec
lods
lds
call
aam
sbb
and
lahf
sbb
sub
fisttpl
push
data16
je
and
sub
ds
push
pop
jecxz
dec
or
scas
add
imul
data16
mov
or
lds
das
aad
adc
sbb
outsb
imull
inc
pop
jg
data16
mov
pop
cwtl
xor
rorb
in
jb
or
mov
push
adc
mov
add
cld
xchg
cmovs
jecxz
lcall
and
sbb
cli
cli
leave
add
push
or
repz
lahf
mov
inc
arpl
xor
add
clc
sub
push
dec
ret
icebp
lahf
pop
mov
mov
add
into
mov
push
popa
outsl
fistps
in
ljmp
push
subl
rcl
sbb
cmc
lods
dec
cltd
out
cwtl
pop
sub
and
xchg
pop
stc
mov
insl
sarb
cmp
adc
fcmovb
fwait
xchg
dec
xlat
fs
icebp
fsubrs
leave
cmp
shrb
jp
outsb
repz
push
add
outsl
repz
into
push
das
test
jle
addr16
xor
aas
or
incl
sbb
inc
dec
xor
mov
in
stos
movsl
sub
test
xor
aaa
and
inc
inc
lahf
cmpsb
inc
in
mov
scas
popa
int3
nop
lret
nop
dec
ret
ja
pop
and
xchg
mov
pop
sub
inc
mov
aaa
jbe
dec
data16
movsb
ss
loop
xor
or
jl
cmp
rclb
popa
loope
or
dec
inc
mov
iret
loopne
js
cmp
movsl
mov
push
pop
fimuls
and
pop
add
hlt
fisubs
fsts
mov
xor
cwtl
sahf
inc
xlat
negb
jecxz
in
mov
enter
sub
test
je
pop
jnp
std
lretw
dec
mov
mov
fcompl
jno
or
dec
mul
rcrb
pop
dec
jae
mov
cmp
cmp
dec
leave
int
pop
xchg
add
sbb
mov
mov
mov
push
jge
inc
lods
fisttpll
rorb
sahf
lret
mov
add
pop
fdivrp
dec
push
mov
and
daa
xchg
mov
sbb
xor
and
mov
mov
mov
push
in
mov
xchg
out
cwtl
fwait
sub
lods
sub
mov
and
pop
sub
out
sahf
add
iret
in
mov
stc
lret
icebp
adc
fwait
or
sbb
and
popf
mov
fcmovnbe
enter
mov
aam
fadds
loopne
repnz
sbb
je
adc
inc
ljmp
adc
add
outsl
inc
mov
mov
shrb
insl
fimull
in
stos
fucomi
xchg
inc
loopne
cvtps2pd
adc
icebp
cmp
loop
pop
jmp
iret
mov
mov
lret
xchg
or
nop
outsb
es
bound
or
push
ss
leave
mov
push
inc
fdivrp
stc
cmp
call
mov
dec
and
xor
sub
sbb
arpl
fdivr
repz
mov
add
sub
sub
mov
mov
dec
incl
sti
add
out
and
stos
stc
mov
loopne
jecxz
xchg
lds
inc
inc
outsb
add
inc
sub
dec
inc
sub
sbb
xchg
nop
cmp
pop
insl
cltd
or
inc
jb
fcmovu
movsb
and
test
fbstp
and
lret
into
cmc
cmp
aam
xlat
mov
repnz
daa
hlt
lahf
out
mov
stos
push
les
cwtl
ja
xchg
mov
repz
fiaddl
mov
hlt
add
pminsw
xorb
mov
push
popf
decl
and
add
sub
test
jmp
scas
stc
cmp
aad
cmp
js
sub
and
jb
scas
or
pusha
pop
lret
fcomi
loop
cmp
jl
jno
clc
jg
and
mov
data16
jmp
xchg
xor
cmp
outsb
inc
insl
cmpsb
jecxz
fcoml
jmp
jae
push
test
xchg
adc
rcrl
mov
imul
push
in
push
jnp
fcmovnbe
pushf
popa
sahf
movsl
add
dec
dec
sub
sarl
jns
inc
inc
or
loope
cwtl
sbb
test
sub
es
jb
and
leave
fadd
ds
movb
aas
xchg
dec
mov
ficoml
rcl
fwait
xchg
ret
pop
or
popa
inc
jge
mov
sarb
call
sub
xchg
idiv
out
das
das
sbb
aas
cld
add
adc
push
lods
mov
stc
aam
pop
out
out
mov
mov
cmp
or
lahf
pushf
mov
movsl
aaa
fwait
das
fmull
mov
addb
repnz
loopne
push
jne
xchg
mov
or
mov
hlt
xchg
clc
inc
arpl
fs
adc
adc
movsb
mov
pop
push
test
xchg
mov
int3
ss
jg
dec
mov
jns
int
fldenv
adc
or
jge
mov
xor
cmpsl
dec
adc
adc
test
adc
inc
jae
adc
sbb
cmpsb
in
push
jb
xor
arpl
cmp
pop
cmp
mov
fmul
dec
popa
lahf
lods
lods
mov
iret
pop
dec
lods
adc
xchg
push
adc
shlb
cld
adc
push
cmc
nop
mov
bnd
ja
neg
push
fidivs
pop
pop
push
mov
stos
pop
loopne
and
frstor
cmp
aas
adc
loopne
xor
mov
inc
mov
popa
adc
cmp
xor
aas
jecxz
xor
mov
mov
push
xorl
inc
or
insb
xlat
pushf
add
dec
add
jmp
and
mov
xchg
mov
pusha
mov
lret
gs
lea
inc
popf
les
and
mov
mov
inc
das
and
dec
loope
imul
cmp
int3
es
xchg
jnp
xchg
into
dec
jns
lds
scas
jo
aam
les
dec
cmp
fwait
addb
add
jg
iret
jne
add
or
movsl
cmp
rorb
mov
popa
mov
arpl
lds
dec
xchg
jbe
data16
popf
repz
dec
cmp
jns
aad
push
sub
xor
push
test
lds
addb
movsb
movsb
pop
lock
test
mov
xor
addr16
outsb
loope
rclb
or
mov
adc
cmp
xchg
dec
jo
xchg
dec
xchg
fcomps
cmc
adc
int
bound
gs
jne
xchg
xchg
adc
mov
sbb
les
imul
cld
jecxz
rol
in
mov
lock
imul
fstpl
sbb
mov
data16
rclb
fst
mov
cmpsl
sti
jp
aam
fs
add
mov
dec
lods
je
push
and
and
mov
push
subb
cmp
pop
adc
xor
and
pop
and
fcoms
ss
repz
cld
jne
gs
jmp
xchg
adc
imul
cmp
mov
add
jno
cltd
mov
rclb
and
ja
loop
test
add
pop
out
inc
xor
not
test
sahf
enter
or
shrl
sub
mov
enter
inc
addr16
jmp
stos
shrb
mov
jle
cltd
xchg
pop
movsl
add
mov
sbb
mov
dec
push
insb
or
leave
mov
adc
jno
dec
fistpll
and
adc
scas
arpl
rcrl
pusha
jecxz
sbb
mov
cmp
sub
stc
push
test
test
addr16
adc
outsb
mov
ljmp
xor
mov
rorl
dec
cmp
dec
pop
imul
movsb
mov
mov
xchg
andb
cwtl
or
popf
xchg
add
pop
mov
xor
hlt
mov
mov
jno
iret
xchg
mov
ror
sub
inc
stc
sub
das
ja
ds
movsl
xchg
js
mov
push
push
add
mov
xchg
xor
das
mov
add
and
test
stos
jl
call
mov
push
dec
ja
adc
lock
imul
mov
stos
or
ljmp
into
lret
pusha
push
sub
or
das
nop
cmp
gs
ret
sbb
loopne
out
jb
pop
outsl
sbb
push
sbb
inc
cli
lret
sbb
jns
jnp
nop
and
shlb
in
or
or
setae
out
mov
dec
in
mov
sbb
movsb
aad
lock
cmpl
xchg
push
das
and
fwait
push
in
inc
or
out
sahf
movsb
dec
or
mov
add
out
cmp
mov
push
mov
js
adc
test
aam
push
jne
push
test
aas
sub
imul
mov
js
aaa
xor
sub
fdivs
sub
fsubrp
iret
jecxz
cmp
repz
adc
hlt
pop
fimuls
dec
jne
adc
xchg
int3
lcall
dec
push
xchg
mov
inc
mov
out
add
fcomps
jg
ljmp
lret
and
out
xor
cwtl
out
sub
sub
or
push
les
scas
cmpsl
popa
fistps
aaa
ss
adc
leave
cmpsl
adc
dec
cmp
repnz
outsl
xchg
jne
js
pop
push
cld
gs
pop
xchg
inc
test
iret
jne
mov
shl
je
clc
movsl
cmp
loop
push
lahf
test
mov
insl
push
or
data16
aaa
push
pop
adc
test
cmpl
inc
sarl
ds
mov
aam
push
sbb
cmp
add
out
loopne
bound
mov
pop
sbb
xor
rclb
dec
mov
pop
sub
sti
iret
inc
push
xchg
fdivs
adc
xchg
pop
cmpl
in
out
mov
std
jb
enter
mov
mov
sbb
xchg
dec
movsb
or
pop
jns
outsl
dec
push
sti
int3
rcrb
sbb
cmp
mov
or
cmpsb
jno
out
mov
inc
stos
ror
mov
inc
lcall
pop
inc
js
insb
xchg
mov
sub
jnp
in
mov
cmp
cltd
imul
cld
cli
or
andps
xor
add
out
mov
fstpt
in
fwait
pushw
jl
addl
hlt
mov
rcl
lods
ja
fs
jno
ljmp
stos
les
lods
mov
scas
sbb
in
mov
mov
mov
sbb
sub
mov
stc
repz
test
mov
and
dec
cmp
setnp
data16
push
cltd
sub
in
dec
pop
and
sahf
in
or
add
ja
mov
push
insl
test
jp
and
adc
push
bound
mov
adcl
lods
out
lods
mov
cld
inc
enter
jo
enter
cmp
ret
lds
cmp
pop
pushf
lea
xchg
jo
or
sbb
add
mov
rorl
inc
pop
ret
and
into
sti
jb
xchg
fstl
test
adc
out
dec
mov
inc
fisttps
repnz
cs
out
cs
fidivrs
cli
cld
or
mov
popa
add
hlt
xchg
jge
icebp
sarl
insl
xchg
jg
mov
or
hlt
lahf
sbb
mov
cmp
jle
inc
aam
aas
lds
pop
mov
jmp
incb
xlat
jb
insl
int3
mull
xchg
ret
xor
mov
jle
or
xor
adc
cmp
push
mov
shl
jne
mov
mov
jle
pop
jp
lds
cld
jmp
fs
pop
imul
adc
scas
inc
iret
lahf
stos
arpl
sbb
inc
icebp
cmp
and
mov
sub
cmovno
push
in
pop
arpl
mov
lods
outsb
jg
push
divb
movsb
incl
test
cltd
and
lahf
sbb
jb
pop
push
sub
mov
stc
xor
pop
test
and
xchg
jmp
ljmp
leave
ds
mov
pop
insb
or
mov
push
sbb
inc
cmpl
aad
add
xchg
ficoms
adc
add
ror
sbb
add
fcompl
xchg
sahf
and
adc
xchg
dec
inc
xchg
outsb
jae
mov
pop
xchg
add
inc
mov
adc
sub
cmp
mov
mov
iret
nop
jbe
mov
lret
jns
jg
fs
rorb
dec
fcoms
add
mov
jb
cld
xchg
push
push
add
rclb
fiadds
jb
xchg
mov
test
lcall
or
mov
inc
mov
jb
leave
xchg
cmp
fldl
dec
gs
jp
mov
mov
call
outsb
xchg
pop
dec
xchg
repz
add
mov
sti
in
cmp
mov
mov
jo
fidivrs
out
xchg
in
or
ret
mov
inc
and
xchg
or
rcrl
stos
or
imul
insl
in
test
sub
adc
jae
push
mov
into
pop
lds
xchg
in
and
xchg
xor
insb
jbe
xor
cmp
push
mov
mov
xor
adc
cmp
push
jno
sub
and
adc
in
add
and
mov
cmpsb
repnz
in
xchg
lret
mov
arpl
lods
jb
repnz
test
xchg
sbb
ss
pop
inc
mov
mov
fxch
add
lret
mov
mov
sar
sbb
iret
mov
js
cmp
inc
jecxz
out
push
pop
daa
test
push
mov
jns
xchg
ror
ds
and
pop
xor
inc
lods
subb
imulb
dec
shlb
mov
push
inc
scas
mull
add
es
and
inc
dec
stc
test
mov
mov
xor
pop
mov
add
inc
in
sbb
xor
mov
push
sbb
mov
test
dec
dec
or
jo
imul
insb
ficoms
cmp
inc
and
pop
bound
mov
xor
mov
mov
or
enter
push
push
xchg
dec
add
sbb
jp
movsb
mov
les
and
adc
adc
cmp
xor
icebp
sar
cmc
push
push
dec
pop
push
mov
jge
adc
inc
and
pop
scas
inc
push
ret
adc
jnp
xor
or
stos
outsl
lcall
pop
fstpt
sbb
add
xchg
mov
repnz
mov
jno
lret
fildll
mov
mov
pop
or
outsb
mov
ret
test
mov
pop
fsts
aaa
adc
gs
repz
outsl
lret
mov
sub
xchg
adc
orl
push
test
mov
test
clc
ja
jne
rol
adc
mov
xchg
jp
les
xchg
dec
jnp
popf
pop
jl
bound
adc
jb
mov
std
sub
mov
xchg
icebp
pop
test
ljmp
push
mov
xor
lds
mov
add
xchg
pop
sub
aad
jno
jbe
es
adc
add
sbb
push
mov
jbe
xor
popa
add
adc
loop
xor
adc
mov
je
fidivs
and
mov
test
out
cmp
pop
push
inc
mov
and
push
in
sti
jge
xchg
mov
fnstenv
pop
inc
xchg
inc
stc
pop
repnz
cmpsb
or
pop
dec
xchg
movsb
mov
push
dec
addr16
sub
aam
arpl
outsb
std
jle
ds
dec
mov
dec
ret
add
aaa
sub
jo
pop
cmpl
cmp
or
repz
ja
std
cmp
sbb
push
lods
jp
ret
lock
lods
and
fwait
xchg
sub
mov
in
xor
scas
add
dec
ljmp
cwtl
repnz
aad
mov
scas
clc
push
fcoml
out
xchg
in
aam
cs
dec
sahf
in
imul
push
ljmp
jne
fisubl
leave
add
dec
divb
mov
ret
hlt
mov
lret
imul
decl
adc
xchg
push
xchg
ret
dec
movsl
call
adc
or
insl
mov
adc
mov
or
sbb
push
ss
es
in
mov
push
nop
popf
and
inc
repz
xor
xchg
mov
shll
push
inc
lods
mov
jp
mov
mov
push
outsl
sub
and
cld
gs
mov
xchg
push
sub
loope
mov
sub
jnp
rcrb
sub
inc
nop
test
dec
xor
cmp
pop
push
hlt
repnz
xchg
mov
int3
pop
inc
cmpsl
push
adc
adc
fsubrs
test
jmp
idivl
daa
cs
rorl
mov
roll
and
or
adc
into
popa
lret
sbb
clc
jecxz
xchg
rorl
hlt
popa
dec
sbb
xchg
cmp
cmpsb
sbb
jnp
jecxz
mov
or
jge
inc
add
jg
repz
cmp
std
test
pop
pop
sub
dec
add
lahf
inc
and
adc
dec
mov
pushf
mov
mov
fisttpl
fsubrp
int3
jmp
loope
shl
fstps
add
sbb
test
or
xor
inc
dec
sti
insl
or
jbe
sub
inc
inc
add
push
adcl
ret
test
pop
mov
xchg
jmp
xchg
ja
std
rcrl
test
adc
sbb
repnz
test
xor
int3
push
pop
pop
mov
jns
sbb
mov
loopne
mov
ja
imul
jp
or
les
enter
mov
sub
mov
jmp
ror
jmp
rolb
sbb
pop
jmp
lds
enter
inc
dec
daa
into
jnp
or
sbb
outsl
aaa
lds
sbb
pop
pop
icebp
sub
xorb
test
insb
jp
insb
ucomiss
inc
or
pop
mov
stos
xchg
xor
push
cli
or
mov
jb
fistpl
les
jle
enter
fwait
mov
xchg
pusha
aas
push
mov
mov
jne
fwait
out
cld
icebp
fstps
mov
mov
lahf
jmp
xor
shrl
rcrb
jae
inc
xchg
and
dec
push
xchg
mov
lahf
mov
outsb
outsb
add
sub
fldenv
mov
ret
add
xor
fstpl
aam
pmaddwd
lcall
rcr
mov
inc
in
mov
test
and
mov
or
mov
jl
add
int
aam
pop
loop
fucom
fbld
lods
lock
mov
fs
movsl
orb
pop
faddl
sbb
arpl
mov
adc
mov
jecxz
lods
sbb
pop
adcl
aad
lea
sub
mov
lods
pushf
push
sti
bound
and
lret
nop
mov
push
jl
sub
lds
aaa
mov
sbb
popa
inc
mov
inc
into
mov
arpl
mov
fmul
pushf
mov
cli
mov
pop
int3
mov
iret
in
inc
cmp
sub
jle
aad
mov
addr16
je
push
xchg
cltd
or
pmaddwd
add
push
mov
movsl
jge
mov
cmpsl
pop
testb
mov
pop
and
sbb
and
mov
int
adc
or
jge
sbb
lds
mov
jno
adc
inc
jge
jmp
scas
scas
mov
push
ds
cmp
mov
lahf
xchg
mov
addr16
lahf
jp
push
push
adc
mov
into
lcall
roll
shl
enter
incl
scas
mov
pushf
dec
cli
mov
adc
outsl
pop
iret
jecxz
mov
dec
pop
inc
or
push
test
mov
fisttpl
les
jg
push
shlb
push
adc
pop
adc
mov
inc
loop
jg
adc
cs
fildll
jmp
mov
in
fiadds
dec
mov
xor
ror
xchg
cmpsl
push
mov
pop
leave
ffree
pop
inc
push
call
ss
and
loope
nop
xor
leave
inc
sbb
jge
sbb
cmp
lods
lds
jp
adc
or
sbb
sub
push
outsb
cmpsl
in
out
negb
mov
xchg
popa
call
std
test
push
repz
iret
or
cmp
sub
repz
jp
xor
pop
push
lea
jns
popa
add
ficompl
xchg
stc
mov
inc
cmp
pop
adc
pop
out
and
cmp
js
int
cltd
push
je
sbb
rcll
add
push
repnz
fwait
push
add
repz
pop
sbbb
or
add
fistl
in
or
mov
repnz
pop
bound
dec
and
leave
cmp
in
out
cwtl
mov
leave
testb
push
popa
mov
push
stc
adc
dec
inc
pop
sbb
jns
neg
clc
pushf
cmp
rclb
push
stos
add
cli
pop
xor
shlb
push
jbe
fwait
mov
xor
mov
fstps
push
dec
sub
mov
mov
mov
mov
gs
mov
push
fs
stos
aad
jae
lcall
rorl
orb
aad
pop
or
sbb
mov
mov
cmc
xchg
icebp
jo
filds
repz
jp
out
ret
add
mov
clc
cmc
je
xor
cli
fidivrl
push
mov
xor
shrb
shrb
sbb
sub
loop
cmp
cld
sub
dec
bound
inc
das
popa
sub
dec
add
out
adc
jg
jecxz
and
mov
dec
stc
inc
sti
cli
xchg
add
inc
popa
andb
in
movsb
insl
lods
mov
cmp
ficoms
cmp
mov
dec
out
and
js
inc
mov
stos
cmp
mov
lcall
dec
fistl
mov
les
mov
or
test
cmc
push
add
xchg
es
push
cwtl
cld
sbb
rcll
dec
outsb
jmp
enter
and
das
loope
mov
xchg
mov
push
mov
call
inc
inc
cld
jne
push
xchg
clc
stos
ds
jge,pn
mov
xor
push
sarl
push
das
or
test
xchg
popf
std
mov
mov
pop
jo
aad
sbb
repz
call
jnp
and
subl
ret
pop
test
lcall
mov
or
divb
aas
and
scas
mov
pop
fcmovbe
inc
jle
and
add
push
js
and
shl
repz
dec
lods
dec
mov
ret
movsb
shrb
cmp
ss
ds
adc
xchg
dec
incl
xor
add
inc
mov
and
testb
xchg
jne
loopne
lds
gs
mov
ljmp
and
inc
loope
mov
nop
imul
dec
pop
pop
bound
mov
and
leave
cli
mov
call
cmp
jb
js
aam
stc
jne
jmp
sbb
mov
orw
adc
daa
cmpsl
lods
push
mov
jb
popa
add
push
add
inc
adc
decb
test
inc
dec
sti
and
xor
test
in
mov
out
fstpt
and
xchg
xor
adc
in
xor
push
aas
add
shlb
lahf
addl
scas
pop
arpl
std
repnz
pop
fsubrp
and
pop
aas
sti
or
inc
xchg
scas
pop
jmp
in
cmc
and
adc
adc
cmpsb
fucomip
ja
ret
jbe
scas
bound
popa
pop
fs
enter
lods
adc
dec
mov
sbb
or
xor
int3
dec
ss
mov
test
jbe
cmp
or
sbb
and
xor
enter
in
movsl
popa
and
cmpsb
imul
mov
inc
dec
mov
xchg
and
shll
in
lock
or
lcall
and
or
movsb
rorl
jns
cmp
mov
jno
pop
cmp
and
fiaddl
aas
test
shrb
daa
push
mov
xchg
bound
clc
push
push
xor
incl
dec
add
stos
cld
insb
jno
movsb
sub
mov
fiadds
push
xchg
insb
fisttps
cmp
dec
out
nop
mov
dec
push
and
push
push
sub
push
fmuls
inc
mov
add
and
add
xor
mov
loop
mov
je
aad
jmp
sahf
xchg
and
std
push
mov
xor
xorb
clc
addr16
jns
lahf
sbb
or
loope
push
ret
mov
jle
mov
xchg
push
xor
mov
adcl
push
xlat
jns,pt
insl
and
xor
add
ss
scas
cmp
ljmp
mov
pop
dec
xchg
pop
pop
cmp
xor
cmp
and
test
aas
add
cmp
clc
mov
adc
dec
arpl
mov
lea
adc
scas
les
bound
mov
into
push
pop
daa
jae
insl
incb
push
pop
cmc
insl
pop
into
sbb
xor
push
push
popa
loop
jle
ret
add
xorb
mov
repnz
test
mov
jecxz
sahf
repz
mov
cli
inc
jno
mov
cwtl
fstps
in
or
jle,pn
into
sub
or
push
push
ret
ret
ds
gs
jb
test
push
enter
adc
dec
jne
inc
rorl
inc
mov
fisttps
mov
mov
and
mov
sahf
add
push
xor
mov
arpl
cmp
and
push
lret
mov
movsb
cmp
lds
dec
add
xchg
xor
jb
inc
sub
test
cmp
lret
sbb
xor
xchg
test
or
pop
jne
cmc
pop
jle
xor
xor
pop
sub
sahf
pop
cltd
ljmp
fcompl
cmp
pop
push
push
push
scas
push
cmp
test
fldt
movsl
enter
xor
mov
sti
pop
stos
out
and
lahf
pushf
add
outsl
jae
test
cmpsl
fdivr
push
js
aas
jnp
rclb
mov
xlat
mov
pop
in
mov
jo
clc
add
mov
int
nop
adc
popf
or
push
jns
in
andb
std
movsl
dec
lods
mov
add
out
dec
adc
mov
test
cwtl
shlb
aas
or
sarl
add
stos
pop
mov
mov
mov
add
dec
inc
nop
jne
out
cld
out
setb
xor
push
ljmp
fwait
mov
jl
dec
fcmove
icebp
cmp
cmc
loope
aam
repz
jae
mov
cs
pop
jo
loopne
lahf
fwait
out
xlat
xor
cltd
sbb
js
idiv
jle
mov
roll
xor
movsb
scas
mov
push
cmc
sub
fimuls
pop
ds
cmp
rcll
sarb
cmp
cmp
dec
inc
outsb
shll
cmp
out
clc
mov
sbb
ret
or
mov
sub
sti
jge
mov
pop
lcall
or
mov
add
add
fistps
shlb
and
imul
inc
fxch
jmp
aas
dec
call
xor
sar
ds
push
inc
andl
ret
sub
xchg
cwtl
jmp
pop
push
les
fwait
and
dec
out
mov
data16
scas
dec
jge
cmp
lret
inc
and
bound
in
pop
push
add
into
mov
fadds
ds
jg
add
mov
test
mov
sbb
jne
fsubs
mov
arpl
das
cmp
dec
mov
mov
in
lahf
pushf
cmp
push
pop
andl
lret
jl
and
cmc
mov
push
in
cwtl
mov
xchg
sbb
jp
jae
pop
mov
aas
push
cmc
adc
icebp
faddp
gs
mulb
mov
jle
jmp
stos
mov
sbb
pop
mov
mov
sbb
popf
push
test
icebp
popf
mov
popa
add
or
std
dec
cld
mov
fcomps
int
inc
inc
jecxz
fcmovnbe
push
ljmp
daa
sarl
xor
ss
push
js
or
inc
dec
adc
aam
xor
adc
or
mov
cmp
test
sbb
pop
pop
outsl
into
rolb
std
bound
xchg
add
rcrb
add
cmpsb
aas
jle
adc
fldcw
test
outsl
pop
std
daa
push
and
cmp
cmpsb
pop
cmp
jo
inc
ja
add
fiaddl
adc
mov
xchg
arpl
sbb
outsl
and
sbb
sbb
sub
xor
xor
out
pop
shrl
pop
int3
das
and
inc
ss
jg
push
in
bound
or
jae
test
dec
pop
add
loope
inc
repnz
adcb
rcl
inc
imul
push
mov
push
out
sub
in
out
jb
pusha
sbb
ljmp
jecxz
xor
xor
add
dec
add
sti
scas
dec
dec
out
xchg
out
mov
mov
sbbl
add
push
push
in
push
lret
jg
mov
jle
or
aad
pop
jmp
push
mov
loop
mov
out
sbb
stos
int3
jg
mov
mov
in
xlat
in
icebp
sub
pop
sbb
popf
cmpsb
mov
lahf
cld
jae,pt
arpl
in
inc
cmpsb
dec
test
sbb
cmp
lods
fucomip
adc
adc
shl
push
fwait
stos
fistpll
mov
xor
cwtl
mov
add
pop
jle
inc
add
or
imul
movsl
push
arpl
mov
xchg
fwait
push
mov
ror
ja
mov
xchg
out
pop
adc
fcompl
rolb
movsb
adc
push
lret
sbb
pop
testl
cwtl
stc
das
add
sub
pusha
fisubrl
jns
add
lods
sti
scas
cmp
or
push
test
jns
mov
in
scas
out
aam
aas
je
loop
dec
cmp
xor
jg
push
xchg
and
insb
and
mov
sbb
sub
mov
pop
sub
rolb
pusha
ret
inc
mov
rol
push
jbe
push
cld
je
pavgb
cli
fistl
je
daa
rclb
in
cmp
jns
add
ds
fbstp
ret
lcall
dec
pop
aam
mov
push
sub
das
in
and
xor
add
jecxz
add
xchg
push
js
fxch
roll
imul
mov
popf
or
gs
push
pop
sbb
fbld
add
push
dec
inc
cwtl
cmp
repz
mov
je
imul
ja
lahf
popf
pop
into
inc
add
mov
insb
pushf
cwtl
xlat
aas
jmp
push
lea
adc
and
xchg
test
push
pushf
add
outsl
mov
add
mov
sbb
xor
bound
test
outsb
into
popa
insl
pop
insb
adc
aam
mov
pop
mov
or
mov
sahf
mov
es
lcall
dec
sbb
daa
sbb
push
or
jno
add
cmpsb
pop
sbb
fisttps
add
xchg
dec
lahf
or
sarb
cwtl
fsubs
mov
push
mov
dec
mov
add
or
adc
pop
pop
sub
sub
adc
xor
inc
xchg
dec
cmp
push
inc
popa
insb
dec
add
hlt
xchg
sub
cmp
or
inc
xchg
push
mov
iret
lahf
push
inc
cmpsb
imul
dec
jmp
out
adc
dec
loopne
in
xor
lods
jne
in
std
sub
add
sbb
pop
jle
clc
mov
push
add
ljmp
mov
dec
fcomps
adc
lods
xchg
sbb
sbb
xor
sarl
std
jno
ja
ljmp
xchg
cwtl
pop
cld
sub
test
test
pop
xchg
ds
fucomi
sub
aam
sbbb
ljmp
sbb
cmp
jmp
fnstsw
mov
fs
pop
subl
es
mov
loopne
and
stos
xor
je
out
mov
or
cld
jo
outsb
sub
fwait
fwait
add
pop
shll
cmp
aas
mov
clc
xchg
das
ds
subb
cmpb
xchg
sub
fidivs
into
xor
inc
out
test
fisubl
mov
test
fdivr
inc
dec
std
lea
xor
mov
mov
lods
or
int3
mov
pop
jl
int3
jo
andl
inc
fsubrs
out
outsb
mulb
fwait
outsl
mov
pop
and
scas
lret
cli
add
mov
aam
xchg
jnp
sub
sbb
out
pop
mov
sub
xchg
pop
repz
adc
push
and
push
imul
mov
cmc
hlt
sub
mov
jg
aam
pop
lock
ja
ss
sbb
pop
and
cmpsb
jp
scas
mov
outsb
mov
iret
ja
mov
pop
cld
pop
loope
dec
push
push
mov
fs
mov
cld
dec
into
mov
lea
mov
add
jp
call
pop
rcll
fwait
xchg
loop
imul
ss
lds
mov
or
icebp
and
outsl
jb
jle
jp
cmp
and
lret
xchg
and
and
insl
adc
cmp
fistl
sbbl
dec
lds
jmp
inc
js
xchg
push
push
jo
jle
outsl
test
xlat
jl
repnz
aam
cld
jo
sbb
dec
jp
outsb
mov
lods
out
jl
push
dec
mov
lods
cmp
jge
clts
xchg
ds
xchg
jmp
fcoml
xor
adc
xchg
or
xor
out
test
mov
sub
fwait
out
enter
mov
and
push
popf
insl
adc
lock
lret
jnp
mov
inc
or
jl
mov
enter
jb
and
xorl
inc
fisubrl
mov
cmp
mov
fidivl
lea
clc
mov
ret
imul
push
scas
sbb
mov
add
mov
inc
xchg
call
lret
sti
fsubs
and
insb
sub
test
cld
rep
fstl
fisubs
sahf
call
loopne
into
ss
and
adc
mov
xchg
jo
mov
push
jmp
inc
adc
repz
mov
xlat
xchg
push
lock
cmp
xchg
adc
mov
sbb
pop
insb
xor
or
pop
fdivs
dec
leave
jnp
xchg
dec
cld
adc
ss
mov
nop
and
lods
xchg
fldl
inc
dec
int
or
mov
adc
js
and
jecxz
pusha
sbb
imul
leave
jns
mov
sub
gs
in
jmp
mov
decl
inc
push
xor
dec
mov
cli
sbb
fxch
into
rolb
loopne
aaa
sub
dec
adc
mov
xchg
xchg
mov
ja
push
int3
popa
lea
inc
mov
mov
jnp
outsb
mov
jp
aas
ret
adc
pop
jno
mov
mov
pushf
imul
loop
repz
adc
ds
cmpsb
out
out
adc
adc
int
inc
sbb
sarb
add
jmp
jge
or
adc
vpxor
in
and
pushf
inc
insl
jl
lods
aad
mov
fisubrl
frstor
lds
or
jae
xlat
mov
mov
pop
mov
popa
add
dec
mov
cwtl
outsl
dec
arpl
mov
clc
jnp
lea
inc
cwtl
aas
jmp
nop
pop
fcmovu
jno
enter
popf
lcall
cli
mov
rorb
xchg
xchg
jp
in
mov
jnp
xchg
pop
ret
mov
jp
xor
xchg
daa
add
in
cmpsl
sbb
inc
push
add
xchg
mov
incl
std
pop
push
xchg
push
test
cltd
out
in
push
add
testb
inc
jg
mov
gs
pop
xchg
jnp
popf
mov
jmp
bound
mov
hlt
jge
mov
adc
call
jge
jmp
sti
pop
repnz
mov
and
icebp
outsb
lods
iret
loopne
test
dec
inc
in
sbb
fidivs
add
in
push
ja
jecxz
dec
imul
push
dec
sarl
add
dec
aam
xor
lcall
or
push
mov
pop
adc
sub
jg
xor
xchg
mov
mov
xor
jmp
xchg
sbb
test
into
mov
xchg
jb
jbe
mov
imul
xor
dec
stos
test
sbb
loope
loop
sbb
outsb
xchg
mov
adc
pushl
dec
fwait
add
jns
js
pushf
fdivrs
stos
outsb
orl
je
add
sbb
enter
orl
lods
cmpsb
in
imul
mov
xor
cmc
mov
ret
inc
shrb
inc
shl
cmp
push
dec
fistpll
mov
sbb
cwtl
mov
ljmp
sub
mov
cmp
test
sub
xor
cmpsb
or
orl
ret
cmp
fldcw
lret
pop
icebp
insb
and
jge
push
xor
and
repz
jmp
cmp
or
clc
faddl
jl
out
fcomp
es
das
lahf
jb
fcmovbe
or
popa
adc
mov
pusha
nop
jmp
ds
mov
out
clc
pop
aaa
jo
movsb
mov
xchg
repnz
movsb
xor
not
mov
xor
loope
imul
dec
imul
sub
cmpb
xchg
gs
enter
dec
arpl
in
xchg
fdivs
cwtl
pop
outsl
xor
daa
cmpsb
push
shlb
dec
loope
loope
cs
cli
ret
int3
xchg
and
inc
frstor
arpl
jle
scas
mov
mov
shrb
cmp
sub
add
cmpsl
dec
add
sahf
je
daa
jmp
fmulp
or
pop
pop
fcoms
jae
lods
mov
xchg
cmpsb
js
add
pop
add
or
or
or
or
pop
xchg
divb
inc
imul
aaa
cmpsl
jae
and
inc
mov
push
mov
mov
insb
sub
flds
lahf
andl
repnz
mov
sub
or
movsl
aas
push
add
or
imul
pop
jg
call
dec
out
les
imul
imul
fcmovnu
fs
push
add
jmp
jge
and
cltd
add
and
xor
mov
jnp
rolb
jno
rolb
sbb
or
data16
cmp
aas
push
or
mov
icebp
pop
sbbl
cltd
push
rolb
dec
mov
mov
add
mov
cmp
adc
mov
or
outsb
mov
cmpsb
stc
push
xchg
cmc
dec
test
repnz
jbe
test
mov
rcrb
pop
pop
mov
cmp
rorl
mov
mov
mov
fwait
or
push
mov
cmp
mov
add
iret
sarb
mov
scas
rorb
sub
int3
cltd
es
pop
jnp
leave
and
stos
dec
into
popf
push
cmp
lahf
inc
mov
insl
cmpsb
sub
mov
cmp
push
and
out
popa
loop
int3
dec
mov
xchg
pop
xchg
xlat
jge
inc
jbe
add
xor
sub
mov
in
mov
or
jmp
mov
in
or
mov
mov
fsubl
inc
cmc
dec
lds
jnp
dec
inc
call
inc
mov
mov
shl
sub
iret
out
pop
stos
rcrl
bsr
sbb
sbb
jg
pop
lret
shrl
pop
std
mov
mov
jne
sbb
in
pusha
std
jmp
aaa
adc
and
mov
icebp
push
xchg
cmpsl
cmp
xor
add
pop
dec
out
mov
bnd
or
call
cmpsl
mov
mov
addb
xchg
pusha
das
pop
insl
mov
js
mov
dec
sahf
mov
push
sbb
push
lea
fs
jmp
push
mov
loop
pop
mov
lock
sub
arpl
mov
fdivs
loop
std
mov
nopl
xchg
push
sub
outsl
or
or
dec
pusha
in
call
xor
hlt
stc
jno
add
dec
jmp
int
sub
insl
cltd
mov
mov
lock
sbb
cmp
fsubp
sub
pop
jmp
repnz
cmpl
sbb
jne
cmpsb
or
xchg
cld
stc
xchg
inc
ja
notl
pop
nop
cld
cmp
fiaddl
pop
or
lds
stos
push
add
lret
ret
nop
sarb
ss
out
cld
loopne
clc
aaa
mov
shr
sbb
aad
in
ds
hlt
jno
add
sbb
sbb
int
dec
push
fldpi
lcall
rcrb
sub
push
mov
jmp
push
ret
xchg
jecxz
test
cmp
and
sub
loopne
lret
jne
outsl
out
bound
push
xor
or
sub
jo
pop
inc
loope
xlat
xor
push
data16
xor
sbb
add
stos
nop
loopne
das
xor
mov
inc
jns
outsw
loopne
mov
cmp
daa
bound
or
outsb
into
add
mov
aam
jb
push
movsl
xchg
jecxz
mov
fisubl
jns
icebp
hlt
out
nop
insl
fistpl
xchg
fdivl
fstpl
mov
pop
mov
xchg
js
fnstcw
iret
add
mov
stc
mov
mov
orl
dec
jo
jo
inc
iret
test
inc
xor
outsb
dec
call
out
push
jecxz
sbb
pop
inc
out
aas
mov
mov
sub
dec
adc
arpl
and
fld
stc
insl
sti
sbb
fildl
mov
sbb
fildl
mov
inc
or
inc
sub
mov
jle
js
sbb
repnz
push
test
lahf
test
ds
mov
and
xchg
xchg
aam
fsts
icebp
sti
pop
inc
mov
sbb
push
inc
aad
ja
cwtl
scas
push
repz
ret
std
cwtl
lds
cmpsl
pop
inc
pop
adc
xor
test
in
cltd
push
jae
xchg
popf
in
push
mov
std
and
push
xchg
dec
aaa
popa
cmp
js
idivb
pop
adc
int
jp
dec
popl
pop
jl
add
mov
repnz
daa
ss
cmp
sbb
lcall
push
mov
mov
push
pop
mov
fstpt
mov
xchg
xor
fsubl
rcll
sbb
adc
xor
mov
sub
push
inc
xlat
ja
pop
iret
nop
les
fxch
mov
pushf
mov
mov
xchg
mov
shr
dec
fisubrl
test
mov
test
cmp
inc
and
xor
std
out
or
fisubl
bound
cmc
icebp
insl
fdivs
ja
inc
jno
fdivrl
adc
ret
sahf
ret
movsl
fs
mov
or
add
and
adc
leave
mov
imul
mov
add
push
je
and
jecxz
loopne
imul
sub
mov
push
stos
popa
test
ljmp
mov
cmp
or
cltd
cmp
lret
out
nop
inc
ficoms
movsb
gs
sub
filds
dec
out
pop
cmp
in
nop
out
xchg
dec
mov
xchg
stc
fnsave
lods
jl,pn
in
push
insb
or
icebp
add
mov
loope
sbb
inc
enter
out
out
mov
imul
imul
inc
lods
stc
sbb
int3
fsubrl
mov
adc
jecxz
or
cld
pop
out
mov
mov
lods
inc
movl
cltd
jne
addb
jge
mov
std
cmp
subl
jns
push
inc
pop
pop
xchg
or
dec
insb
lods
and
cmp
repz
dec
enter
dec
mov
sub
bound
data16
repnz
or
jno
sbb
push
mov
push
out
or
fcomp
adc
jg
ret
gs
jnp
lret
pusha
insl
push
into
add
daa
ficomps
mov
and
ret
push
scas
mov
inc
jnp
xchg
ja
idiv
js
in
mov
and
adc
push
sub
dec
inc
imul
mov
sub
xor
test
adc
or
lahf
ss
adc
pop
addb
xchg
sahf
nop
in
sub
aam
xor
jmp
in
dec
loop
inc
pop
push
xor
fcoml
xchg
xor
inc
mov
push
push
sub
loop
or
imul
adc
adc
mov
popa
jne
loopew
aam
jns
stc
add
mov
xor
mov
sub
dec
ljmp
int
bound
in
push
je
aaa
add
movsl
add
lahf
sbb
mov
adc
push
lock
xlat
mov
pusha
and
mov
adc
lret
mov
dec
lods
xchg
mov
pop
mov
pop
test
fsubl
pushf
mov
bound
xorl
xor
dec
push
cmp
cmpsb
mov
stos
mov
dec
push
ljmp
cld
pop
pop
cmp
push
mov
xchg
ror
sub
sbb
dec
add
jns
and
in
dec
fldt
or
or
push
or
daa
xchg
es
mov
adc
test
sub
out
inc
push
sbb
outsb
adc
divb
cmp
sbbl
lcall
or
sbb
jns
xor
and
sub
int
pushf
fildll
sahf
xor
jle
mov
pop
mov
sbb
jns
xor
fwait
xor
and
mov
nop
pusha
add
or
and
pop
push
test
imul
test
jl
mov
call
daa
xor
or
in
cwtl
add
subl
jnp
mov
jle
push
data16
aam
popf
sbb
inc
scas
cli
imul
cli
into
stos
mov
jp
loope
push
aam
pop
cs
dec
inc
test
cli
sbbb
stc
iret
dec
fsubs
jecxz
add
push
in
lods
sub
pushf
jo,pt
push
in
pop
pop
hlt
inc
jl
aas
stc
data16
stc
xlat
inc
lret
stos
pand
rorb
rcl
arpl
bound
cli
sahf
imul
and
sbb
loope
sarb
ljmp
jge
mov
out
dec
pop
sbb
jge
adc
dec
int3
daa
sti
mov
inc
repz
xor
cs
sub
push
imul
mov
mov
stc
ret
inc
mov
and
or
leave
push
mov
mov
lds
movsl
mov
mov
in
xlat
add
ljmp
pop
cs
pop
mov
adc
lahf
mov
mov
xor
imul
int
and
movsb
inc
gs
or
mov
mov
cld
inc
insb
ja
push
fcoml
inc
and
and
dec
adc
movsb
int3
imul
sub
inc
daa
sbbb
int
inc
jbe
loope
push
stos
mov
pop
test
xchg
jb
insb
lock
push
xor
sti
dec
jmp
aad
xchg
mov
nop
sub
cmp
mov
push
ljmp
lock
jl
cmp
scas
pop
in
lret
adcb
mov
sbb
iret
mov
mov
out
cs
imul
pop
divb
xlat
pop
enter
out
adc
lcall
lcall
enter
mov
cmp
dec
xor
stos
sahf
push
jl
or
dec
pop
das
inc
xchg
fcompl
aas
adc
aad
into
leave
icebp
fs
add
dec
fidivrs
jnp
sub
pop
fistpll
rcll
loop
cli
dec
cs
cmc
dec
xchg
push
xor
cmp
add
lods
mov
jge
jge
out
push
movb
jb
jecxz
repnz
pop
xchg
je
scas
movsb
bound
jb
push
mov
test
mov
fdivrs
push
movsl
jl
mov
push
loope
je
popf
iret
jo
xchg
sbb
jae
enter
iret
shr
inc
sbb
xor
stos
popf
out
xor
adc
or
push
mov
repnz
xor
sbb
pop
mov
outsb
adc
lock
cmp
cmpsb
pushf
inc
sti
stos
insl
mov
jno
mov
sti
fs
aaa
mov
movsb
arpl
lods
repnz
mov
fwait
dec
popa
xchg
xor
inc
sti
sbb
xor
jo
push
xchg
je
dec
push
fidivrl
pop
sbb
and
push
mov
pop
add
inc
stos
mov
and
out
inc
xchg
dec
xor
or
adc
sbb
mov
outsl
sbbb
cmp
rclb
cmp
cmp
stos
inc
fstpl
sbb
lock
cmpsb
xchg
xchg
push
pop
movsb
int3
push
mov
gs
ror
cli
fs
test
mov
mov
insw
in
pcmpgtd
rolb
jb
xor
cwtl
fs
mov
ret
jl
mov
or
push
sub
shlb
dec
jo
dec
pop
pop
iret
out
jae
mov
or
xchg
push
ss
sahf
push
cmp
test
push
cmp
jne
lods
int3
int3
and
and
outsb
scas
add
mov
mov
lret
mov
out
and
sub
fcmovnbe
aaa
inc
dec
cld
sbb
in
xchg
mov
xchg
fcmove
arpl
jge
mov
mov
mov
in
out
cmpsl
inc
cmp
mov
mov
lahf
sbb
lock
fcoms
mov
xor
mov
sub
clc
in
stc
or
xchg
cmp
cmc
push
jb
push
dec
arpl
subb
movaps
inc
pop
jnp,pt
stos
adc
sbb
mov
sub
loopne
jmp
test
cli
shlb
mov
imul
cmpsl
jge
cmpsb
ret
cltd
hlt
lea
mov
ljmp
push
sub
lcall
xor
sub
pop
call
bound
sbb
adc
faddl
mov
mov
or
adc
mov
jb
rorb
dec
js
popf
add
lret
sbb
mov
sbb
lahf
aas
sbb
push
and
or
outsl
lods
xorw
hlt
ficomps
fdivr
das
popa
cmc
dec
cmp
and
mov
mov
xor
inc
sbb
int3
in
lock
mov
push
mov
xor
adc
mov
sub
enter
in
pop
sbb
ret
scas
mov
mov
ret
dec
loop
inc
and
add
sbb
mov
mov
jl
adc
lock
mov
lcall
das
lea
scas
mov
sbbb
jle
sub
fucomi
cmp
push
mov
cmc
push
adc
sub
repnz
pop
mov
mov
xor
and
outsl
leave
rcr
leave
fldt
mov
daa
loopne
js
pop
dec
test
adc
fwait
inc
ljmp
dec
sbb
xchg
sbb
imulb
stc
rorb
notb
jmp
lret
shlb
iret
imul
inc
dec
and
loop
dec
ja
adc
daa
fbstp
add
sbb
out
stos
lock
inc
xor
add
inc
adc
repz
or
or
and
mov
push
xchg
push
in
dec
sbb
or
mov
sub
mov
push
filds
sbb
mov
loope
inc
inc
insb
adc
pop
insb
data16
iret
push
dec
pop
sbb
sbb
add
dec
lods
arpl
add
lret
in
pop
cld
je
push
inc
int
xlat
inc
imul
xor
jmp
cld
je
or
sbb
stc
jno,pn
sub
adcb
andl
stos
sub
mov
fcmove
ss
adcl
int
xchg
add
sahf
dec
mov
pop
dec
mov
ljmp
jge
jb
mov
sub
mov
scas
in
jae
jbe
inc
pop
xchg
xor
sub
xchg
fisubrl
push
xchg
fdivrl
xchg
in
fs
pop
pushf
jp
stc
jmp
dec
sub
call
lods
push
insl
mov
data16
mov
xchg
sbb
inc
jno
pusha
mov
loopne
and
sahf
adc
imul
dec
shll
imul
sti
sub
outsl
jl
lret
and
inc
add
into
fs
pop
jp,pt
lahf
or
imul
stos
and
loope
mov
add
stc
test
push
mov
popf
in
imul
jecxz
cmp
cwtl
add
sub
shll
cmp
sbb
fiaddl
das
int3
test
pop
adc
push
arpl
cli
adc
add
fnstenv
sub
inc
jnp
cmp
cli
mov
aaa
push
adc
sbb
dec
clc
mov
mov
rcl
jns
inc
lods
push
cmp
and
push
sbb
sbb
data16
fs
fldcw
jle
lcall
push
mov
xchg
push
dec
push
aam
aas
imul
add
add
addr16
bound
iret
adcl
in
jns
push
add
decb
ret
pop
inc
cmp
sbb
repnz
lret
sub
xchg
aas
ja
fcomps
ja
push
sbb
mov
icebp
aad
arpl
inc
lods
fistpl
fsubs
stos
mov
mov
shll
out
sbb
aam
fidivl
or
into
into
push
ja
dec
adc
xchg
not
sbbl
pop
xchg
ss
call
ss
lahf
xor
xchg
test
jmp
pop
mov
loopne
cltd
or
lods
lea
cmpsl
lods
sub
jne
sti
cmp
mov
data16
test
dec
in
push
mov
popf
xchg
fmull
mov
dec
nop
movsb
fldt
outsb
push
rolb
aad
and
or
test
clc
adc
pop
in
and
inc
or
popf
or
data16
into
jle
add
movsl
pop
add
adc
mov
bound
call
call
loopne
clc
inc
mov
lret
cmp
push
inc
call
insl
xchg
out
es
es
jmp
push
mov
std
mov
clc
add
aaa
andb
sahf
lods
ret
fld
lds
add
pop
fsub
jp
ret
jle
cmpsb
cmp
pop
adcl
loop
mov
inc
ss
out
lods
pop
dec
test
pop
ss
in
sub
stc
sbb
sahf
xchg
jge
xor
sahf
fistpll
clc
jge
push
lcall
dec
add
jl
out
mov
jne
mov
inc
popa
or
shlb
jmp
into
aad
sahf
mov
arpl
and
xor
cmpsb
mov
repz
bound
xor
leave
mov
js
push
imul
gs
pop
xchg
mov
lock
ret
outsb
outsb
out
mov
outsl
call
sbb
aam
divl
mov
lea
lcall
aaa
movsl
cltd
push
sti
test
ffreep
decl
add
test
sbb
enter
or
repnz
mov
iret
xor
push
inc
scas
jge
mov
cmc
inc
ds
push
cmp
fldcw
adc
cmp
push
lahf
mov
inc
outsb
sub
mov
rorl
inc
bound
or
add
xchg
loopne
aas
add
dec
inc
ja
inc
and
cs
rcll
arpl
sub
rcll
out
xor
gs
mov
pop
movsb
mov
add
adc
mov
or
imulb
or
push
jecxz
push
ds
dec
dec
mov
mov
les
cltd
pop
jns
cltd
test
jecxz
shlb
daa
and
sbb
sub
ret
cld
fildl
xor
xorl
arpl
dec
test
mov
iret
xor
fnstenv
insb
mov
fildll
add
adc
or
cwtl
dec
dec
xor
push
pop
gs
enter
test
inc
test
add
int
or
enter
push
inc
adc
mov
add
mov
cmpsb
bound
cmpsl
pop
repz
fidivl
imul
loopne
imul
jp
cwtl
pop
and
sub
jg
mov
inc
in
add
xchg
stos
jmp
xchg
lock
cwtl
xchg
and
xchg
inc
mov
xor
sbb
pop
cmp
cmp
or
cmpl
and
cmp
cld
pop
xchg
ret
je
rcl
je
mov
fwait
pop
cmp
clc
rcrl
pushf
insl
repz
int3
cmp
jo
jle
arpl
insl
dec
xchg
loope
adc
mov
addr16
cmp
cmpl
insb
and
or
push
popa
call
imulb
in
inc
mov
adc
hlt
push
cmp
mov
xor
mulb
xchg
xor
jl
xor
icebp
push
cmpsl
sbb
xchg
fwait
roll
test
in
stos
test
sub
dec
pop
pop
scas
lods
decl
adc
pusha
mov
sub
or
xchg
cmpsb
adc
sbb
xchg
loopne
das
repnz
lea
fs
repnz
push
hlt
ficoms
stc
lods
xchg
stc
mov
stos
xor
f2xm1
dec
dec
dec
fidivrl
mov
xor
cltd
mov
pmullw
mov
dec
incl
add
setns
loopne
ja
adc
adc
lahf
pop
fists
dec
mov
and
inc
adc
out
ret
stos
rcll
stos
lret
or
dec
pop
add
je
add
sub
je
ror
jmp
into
je
in
inc
lahf
fcoml
outsl
add
mov
aad
lcall
sti
xor
push
inc
xor
loope
cli
sbb
rcl
bound
enter
mov
adc
pop
popf
adc
add
cmp
insl
mov
call
or
or
mov
sbb
mov
add
cltd
mov
in
cmp
push
sbb
frstor
xchg
pop
and
pop
dec
cs
push
pop
imul
mov
sbb
lret
push
out
xor
pop
insb
mov
repnz
shlb
icebp
push
xchg
dec
mov
xchg
loope
xor
pop
xchg
xor
fcoms
sub
shrl
dec
mov
in
adc
loopne
sub
add
xchg
gs
mov
fists
pop
pushl
push
roll
lea
jg
cwtl
sub
arpl
ret
fisubrs
and
das
cmc
outsb
jl
dec
inc
inc
imul
jae
outsl
ret
inc
adc
fistpl
jmp
mov
add
fadds
in
xlat
iret
test
mov
sahf
int
sbb
mov
test
ja
cmpsb
jnp
mov
fsubs
cmp
sub
test
fcomp
aaa
mov
jne
das
jne
dec
fsubl
mov
insl
xchg
outsb
insl
jle
dec
mov
loopne
stos
fldl
jp
ret
pop
push
mov
pop
and
xor
mov
jno
xchg
adc
sahf
push
pop
sub
imulb
lret
fs
in
adc
mov
je
inc
cmp
push
inc
dec
sahf
aam
call
pop
js
enter
push
jno
dec
repz
xor
movsl
inc
add
daa
cmp
push
jl
out
ja
and
outsl
lods
shrl
popa
fldcw
push
ret
jle
sar
fwait
cli
pop
into
push
dec
addr16
aaa
jmp
adc
cmp
pop
cmp
mov
xchg
es
push
push
int3
icebp
in
leave
push
mov
cltd
adc
js
dec
push
repz
filds
xor
lea
xor
inc
dec
stos
shr
jmp
sbb
sahf
and
inc
dec
clc
inc
jp
pop
mov
mov
adc
mov
mov
shrb
lret
mov
mov
cld
nop
and
lahf
jbe
cwtl
mov
icebp
push
cmp
sti
jmp
aam
mov
insb
in
inc
push
jbe
les
mov
jge
cwtl
inc
and
add
movsb
mov
stos
cmp
fdiv
mov
jno
mov
adc
int3
mov
sbb
sbb
popa
add
sub
pop
mov
cmp
xor
xor
mov
mov
cmp
aas
imul
mov
cmp
outsb
inc
add
stc
cmp
add
shl
cmp
push
mov
xchg
jbe
mov
pushf
mov
pop
inc
fmull
add
imul
sbb
mov
mov
jge
iret
xorb
and
sub
mov
xchg
push
hlt
push
fcmovu
dec
dec
cmp
or
jecxz
sti
mov
jg
in
stc
mov
mov
ljmp
loope
dec
cmpsb
adc
mov
mov
shll
lret
testl
xchg
fildll
dec
adc
and
push
xor
pop
mov
lods
xor
mov
sbb
cmpsl
and
andl
pop
jns
or
inc
lea
out
into
pop
jl
lods
fdivr
imul
sbb
or
jns
pop
cmp
out
jo
push
jb
neg
clc
jmp
xchg
movl
rorb
xor
loopne
sbb
inc
xor
xor
cmp
adc
sbb
shll
xchg
insb
fwait
inc
xchg
cmp
or
mov
push
cmp
pop
aad
ljmp
sbb
pop
out
push
in
pop
aad
aaa
popa
sub
dec
sub
pop
mov
cld
movd
data16
dec
daa
jb
roll
and
out
sub
ret
pop
jmp
mov
ret
xchg
push
push
leave
adc
mov
xchg
mov
dec
cmp
mov
or
cltd
icebp
fndisi(8087
jae
mov
sub
popf
ss
loop
mov
mulb
rorb
jae
and
popf
daa
pop
nop
cmp
out
mov
mov
xchg
ret
je
pop
inc
notb
insl
lahf
lods
imul
or
mov
icebp
bound
inc
xor
or
or
xchg
pop
cltd
jecxz
xor
scas
iret
cmc
jge
sbb
icebp
stc
cwtl
insb
call
mov
cmp
and
cmp
sub
adc
lds
scas
inc
pop
mov
sarb
and
rorb
sub
jp
xor
sbbl
shll
jbe
xchg
daa
xlat
mov
nop
cmp
sub
std
inc
pusha
decl
hlt
or
xrelease
out
lock
jmp
jne
push
rcrl
pop
add
js
jl
and
aas
stc
sbb
stc
jmp
fsubrl
jne
dec
or
cmp
pop
sub
int3
fnstenv
and
mov
pop
mov
in
fimuls
dec
or
jmp
sub
ficomps
fimull
push
jge
or
incl
cmp
pop
outsb
push
inc
test
loope
ret
aam
lcall
push
push
test
aam
sahf
test
cmpsb
cmpsb
mov
cmpsb
pushf
xorl
pop
and
jns
xor
adc
xor
movl
aad
mov
js
js
insl
jmp
test
in
mov
mov
pushf
test
add
shlb
pop
lcall
mov
sub
sahf
mov
aad
lahf
xchg
adc
sahf
sbb
adc
hlt
or
aas
add
sub
ret
mov
mov
xorb
pushf
sub
es
loopne
daa
add
insl
mov
pop
enter
testb
pop
fwait
inc
bound
xchg
inc
add
adc
mov
and
lret
adc
enter
fnsave
out
xchg
cmp
jns
ljmp
mov
in
idivl
in
mov
push
enter
sbb
mov
xchg
or
push
clc
repnz
push
lds
push
ret
add
mov
daa
stc
fmull
insb
fimull
scas
testb
mov
das
cmp
ret
jmp
inc
nop
pop
test
addr16
push
mov
pusha
push
out
jne
jnp
fwait
out
ret
mov
popl
adc
incb
inc
cmpsl
pop
push
fidivrl
add
and
sub
lds
in
outsb
in
or
mov
pop
xchg
dec
fstpl
pop
push
nop
cltd
mov
and
sbb
fdivrl
dec
mov
lcall
rcl
imul
enter
mov
in
clc
dec
mov
cmpsl
fisttpll
iret
dec
xor
mov
add
test
leave
mov
lock
jp
or
aas
push
and
lds
mov
push
pop
stos
jae
push
and
mov
rolb
int3
fnsave
cmp
mov
jne
xlat
pop
dec
cmp
mov
and
sub
dec
notl
test
std
jo
cli
lds
mov
mov
cwtl
loop
fstp
or
scas
mov
xchg
mov
repz
push
cmp
inc
xor
inc
lret
sti
lock
cmp
lods
outsb
jns
in
fists
sub
cs
xchg
adcb
in
icebp
xchg
and
xor
or
mov
push
ja
cmp
add
dec
or
cmp
sbb
lret
ja
ljmp
hlt
pop
sahf
inc
cltd
jecxz
push
cld
lea
adc
jecxz
jo
or
fdivs
pop
push
xor
orl
outsb
sub
iret
adc
add
adc
mov
xchg
ficomps
fldenv
inc
or
push
daa
mov
mov
int
mov
mov
sub
inc
popl
fsubrs
adc
bound
insb
pop
mov
dec
mov
loope
and
nop
mov
ret
cmpsb
push
idivl
mov
mov
mov
adcl
inc
icebp
andl
cmp
dec
fildll
jo
arpl
sbb
adcb
ja
mov
mov
mov
jl
movsb
mov
and
ss
imul
sbb
push
mov
cmp
push
test
fstpl
test
adc
mov
shll
idivb
sub
popa
dec
and
cwtl
add
mull
shr
mov
push
mov
cmpsl
and
imul
and
mov
jg
jb
push
jle
out
mov
adc
cmp
ret
fildll
mov
mov
jns
xlat
and
and
cmpsb
and
or
leave
push
adc
adc
rorb
add
subl
aad
les
je
xchg
mov
movb
insb
mov
xor
and
cmp
jbe
and
add
aad
xor
mov
add
xchg
push
push
popa
aam
movsl
or
inc
scas
sbb
lcall
mov
leave
int3
lds
mov
pop
mov
cmpsl
js
aas
outsb
imul
xor
into
inc
sub
jae
cmp
push
les
jle
mov
andb
cltd
lods
icebp
movsl
pop
mov
push
aad
and
inc
lods
sbb
aaa
and
mov
add
add
out
and
or
fnsetpm(287
sbb
imul
call
push
mov
data16
stos
or
lahf
push
nop
xchg
aaa
mov
fldcw
movsb
pop
call
fmuls
add
ljmp
lds
push
imul
mov
mov
cwtl
sti
movsl
addr16
mov
inc
pop
inc
into
clc
sbb
jmpw
les
mov
repnz
lcall
int
sbb
sbbb
ljmp
clc
mov
pushf
and
fs
jle
sar
jo
jae
or
cmp
outsl
imul
or
scas
sub
dec
int3
rclb
pusha
lods
loopne
push
sub
aas
mov
scas
stc
adcb
adc
rorb
or
xchg
lret
notb
jmp
dec
add
insl
dec
mov
jb
addr16
repz
ret
sbb
adc
mov
stos
adc
in
push
dec
push
push
out
sti
cltd
rcrl
sbb
sbb
push
mov
sar
out
push
fidivrl
in
imull
shll
mov
mov
scas
xlat
lds
push
mov
rcll
dec
pusha
jo
nop
sub
or
pop
inc
roll
cli
fstpl
mov
or
aam
sbb
fcompl
rcrb
hlt
and
ds
xchg
insl
into
or
inc
cmp
jb,pn
lea
mov
insb
ss
or
notl
mov
lods
shl
mov
adc
sbb
ret
imul
je
sbb
sub
xlat
roll
popa
pop
push
mov
xor
aaa
sbb
rcrl
daa
popf
lods
ret
dec
in
push
mov
push
pop
nop
mov
and
call
jne
xor
ficompl
lea
iret
xlat
dec
push
ds
popf
or
sbb
or
cmpsl
xor
fcmove
xchg
out
mov
data16
aam
bound
daa
xor
mov
push
aam
jmp
test
mov
pop
lret
xchg
in
pop
cltd
into
test
jecxz
add
jnp
gs
cwtl
popf
jg
jae
es
imul
movsb
cmp
es
out
sbb
inc
inc
or
cmpsb
xor
in
adc
addb
fbstp
jno
imul
fnstcw
sub
ljmp
jae
aas
pop
inc
cmp
pop
int
sahf
push
jb
movsl
inc
mov
cmc
insl
pop
popa
cmpsb
test
in
movsb
icebp
adc
add
mov
pop
cld
pop
sub
cmpb
lret
loop
ja
sbb
mov
test
addr16
repnz
jmp
aaa
negb
push
sub
pop
sbb
cmp
jecxz
adc
clc
iret
push
cli
dec
icebp
mov
mov
mov
mov
xchg
ret
sub
add
cld
mov
push
dec
pop
shrl
mov
clc
push
xor
lock
daa
pop
or
and
mov
std
pop
dec
jno
aaa
sti
std
jg
mov
or
mov
sbb
into
mov
mov
dec
movsb
subl
movsb
mov
ret
cld
push
int3
xor
insl
push
push
test
sub
in
jp
adc
scas
imul
js
push
mov
arpl
fiadds
cmp
mov
inc
xchg
insl
fidivl
clc
push
xorps
xchg
and
out
das
adc
repz
ret
inc
fs
dec
adc
mov
fdivrl
pop
inc
mov
mov
and
pop
jo
pop
add
pop
js
xor
push
pop
xor
sti
insl
push
sbb
cs
pop
scas
out
push
adc
or
xor
push
pop
sub
lcall
pop
in
push
mov
fistps
dec
movsl
adc
and
mov
dec
popf
adc
pop
xchg
pop
into
xchg
cwtl
mov
xchg
and
jno
cmp
push
rcr
stc
jl
in
jl
leave
xchg
shll
push
sub
mov
xchg
pop
imull
clc
push
xchg
sti
sub
fcmovu
mov
incl
inc
cmp
mov
mov
pop
xlat
cmp
sti
outsl
loopne
cmp
fwait
lods
sbb
or
adc
xchg
orb
xchg
jnp
sahf
push
or
jge
mov
mov
and
stc
mov
cwtl
mov
pop
icebp
clc
insl
mov
push
add
ror
jl
mov
iret
negl
cwtl
sti
push
rolb
movsl
out
xor
insb
sbb
outsl
cmp
lahf
adc
cmp
inc
in
leave
int
sbb
add
addb
lcall
in
dec
add
and
pop
mov
push
gs
dec
stc
int
cli
test
data16
mov
cs
not
arpl
ljmp
mov
mov
dec
test
sarl
mov
xlat
pushf
cld
mov
loopne
data16
lods
xchg
xchg
in
sub
mov
push
push
je
aaa
incb
cmc
test
cmpsl
cmpl
mov
xor
stos
fisttpll
push
jl
in
cmp
jno
dec
push
pop
xor
ljmp
push
lods
or
movsb
aam
pushf
cmp
xchg
ss
clc
xlat
adc
dec
mov
cmp
lods
adc
nop
pop
add
nop
sbb
mov
xor
jg
cmpsb
popf
clc
lods
shlb
loop
sbb
push
sub
fisubl
xchg
jns
cmpsb
outsl
ss
dec
pop
scas
dec
adc
dec
pop
mov
jl
sub
and
inc
adc
cmp
dec
out
insb
rorl
outsl
mov
adc
xor
mov
stos
jg
test
adc
dec
lret
xor
loop
popa
aaa
push
pop
xor
dec
test
or
dec
hlt
mov
test
jl
xor
and
add
daa
int
flds
ret
cmpsb
rol
popf
iret
or
mov
mov
mov
loop
dec
hlt
daa
insb
cli
adc
movd
dec
inc
data16
inc
cli
lods
adc
sub
adcb
xor
lock
mov
repnz
gs
adc
insl
mov
je
sub
mov
cmc
ljmp
mov
sub
cmp
push
mov
popf
cmp
dec
pushf
dec
sbb
mov
insl
inc
mov
xlat
pop
xchg
inc
push
jo
sbb
imul
and
and
out
in
rcr
repnz
insl
es
jo
in
scas
mov
out
ret
pop
or
loop
sbb
outsl
shlb
adc
call
mov
jecxz
or
dec
subl
mov
mov
out
aad
idiv
imul
mov
dec
push
lea
inc
ret
cmp
dec
mov
sbb
or
push
push
aas
mov
jae
pop
or
jno
fiaddl
pop
dec
jp
jbe
ret
mov
sti
int
int3
mov
imul
jl
cmpb
mov
ss
lret
pop
cmp
lea
jns
cli
mov
loop
push
in
adc
repnz
lock
pusha
xchg
mov
fisubs
sbb
mov
in
in
push
lods
pop
jno
adc
idivb
roll
sysexit
sbb
ja
daa
hlt
push
imul
cs
stos
or
mov
pop
outsb
in
jle
insl
xchg
bound
ljmp
rorl
xlat
icebp
add
push
mov
out
sub
outsl
mov
pop
jne
push
add
outsl
xchg
adc
adc
dec
or
test
and
push
sub
rorb
js
int3
pop
addl
outsl
xchg
xchg
gs
cmp
jge
mov
sub
stos
sub
pop
mov
dec
cs
bound
and
xor
mov
out
pop
out
sar
ss
subl
push
or
fs
mov
and
rorl
mov
push
jge
adc
and
jnp
jmp
pusha
jecxz
iret
ljmp
and
adc
mov
lock
repz
pop
pop
mov
add
cmp
in
cmc
xor
repz
test
push
gs
add
ljmp
popf
push
xchg
in
pop
out
test
daa
dec
in
pop
das
jno
cmpsl
fsts
sbb
mov
bound
iret
add
xchg
orb
mov
inc
xor
sahf
out
ss
out
cmc
scas
pop
fisttpl
ss
icebp
dec
popa
test
movsl
cltd
scas
sbb
nop
sbb
and
popa
hlt
lcall
add
push
ret
pavgw
fcoms
popa
mov
mov
pushf
subl
jmp
lods
int
dec
sub
mov
mov
jge
cmpsb
jecxz
push
xor
mov
aad
sahf
mov
repnz
test
and
repnz
jle
jae
push
pop
dec
and
mov
or
dec
sub
fcmovnbe
or
cmpsl
mov
pop
je
pop
sbb
icebp
push
push
daa
addr16
insb
popa
dec
mov
aam
sub
mov
popf
popa
inc
push
add
bound
lea
pop
and
xor
pcmpgtd
gs
lret
out
adc
or
rcr
repnz
dec
push
adc
push
test
imul
ret
ja
xchg
aas
push
std
or
js
xor
and
test
push
pop
cmp
nop
scas
adc
sub
jmp
sub
data16
push
out
shrb
mov
scas
add
movsl
mov
xor
sti
mov
xor
fldt
sub
pop
std
ret
cmpsb
adc
sti
in
shrl
mov
jbe
daa
xorb
test
xor
xchg
xor
fistpll
ret
bound
jne
lock
inc
stos
out
jno
into
rolb
sbb
loope
int
je
sub
cmp
pop
mov
cmp
testl
arpl
xor
jge
xor
cmp
add
add
sahf
out
dec
push
mov
adc
adc
inc
pop
fdivrs
or
mov
mov
daa
movsb
mov
sbb
arpl
inc
dec
pusha
inc
loope
xchg
cmp
mov
pop
push
ret
je
cmp
imul
aaa
je
inc
push
movsl
and
shrb
pop
js
lods
push
or
jo,pt
shlb
daa
aam
call
lock
sbb
xchg
daa
nop
sub
adc
test
jmp
sahf
in
addr16
inc
push
test
lea
test
mov
adc
ret
cwtl
lret
cmp
arpl
or
jne
xor
ret
inc
cmp
push
cmp
push
in
out
and
movsl
fs
jne
cmp
out
and
mov
jl
test
fnstsw
and
or
adc
push
jbe
pop
and
sbb
mov
pop
popf
push
xchg
mov
jmp
subl
pop
cmc
fidivrl
ja
add
dec
out
or
push
sbb
jo
pop
dec
add
inc
push
mov
inc
fiadds
push
dec
lret
das
ret
push
or
mov
pop
mov
test
push
push
std
mov
jbe
pop
gs
jecxz
or
pop
insb
cltd
sbb
nop
adc
cs
pop
popf
xchg
out
sbb
data16
call
pop
out
adc
xchg
push
mov
movsl
hlt
std
sub
loope
fs
push
xor
shll
shl
mov
shrb
ja
sub
test
mov
addr16
mov
mov
inc
mov
sbb
int3
mov
enter
dec
lds
adc
rclb
or
sub
aad
outsb
jno
sub
jne,pt
loope
aaa
cld
mov
pop
bound
shlb
nop
sti
mov
fildl
jl
stos
mov
clc
mov
nop
xlat
pop
push
or
push
call
inc
mov
add
sub
add
adc
push
lahf
jne
dec
loope
in
rcrb
cmpsl
xor
stos
lods
jne
out
sub
pop
in
sbb
sbb
jnp
loope
test
or
cwtl
jg
mov
pop
cmpsl
pop
mul
pop
cmpsl
sarb
loop
cmp
add
int
stos
fadds
or
ljmp
dec
lods
mov
test
adc
mov
mov
out
outsb
push
lds
push
push
xchg
dec
mov
mov
jle
call
xor
inc
or
xor
cld
mov
imul
leave
test
push
and
jae
lods
pop
sbb
call
fdivrl
aam
or
lret
outsl
push
mov
popf
std
mov
std
push
ss
or
push
test
daa
roll
stc
inc
mov
js
ficompl
adc
xchg
mov
pop
scas
adc
xorb
inc
jno
cmp
lods
in
mov
fmull
lods
sub
pushf
adc
or
imul
cmp
push
inc
es
rcrl
mov
jl
sti
cmp
or
mov
je
out
leave
mov
or
jg
das
ss
nop
push
das
push
pop
sahf
cmp
add
nop
inc
jbe
cs
lret
stos
xchg
sbb
jle
gs
arpl
jmp
jg
push
xchg
xchg
push
lret
fwait
pop
outsl
popa
pop
adc
movzbl
cwtl
stos
mov
xor
or
cmp
mov
subl
popf
jne
jge
lock
jnp
mov
xchg
int3
imul
in
jae
hlt
inc
lret
sbb
push
fistpl
mov
rcll
arpl
cmc
sahf
inc
mov
pushf
mov
pop
xor
jae
jno
jg
xchg
push
mov
xchg
fsubrl
add
pushf
dec
aas
lret
cmp
aas
adc
stos
and
popf
or
es
xchg
scas
or
add
jbe
pop
jge
out
xor
xor
fnstenv
push
call
imul
jle
pop
adc
pushf
fadd
mov
fidivrl
loopne
inc
inc
int
mov
insl
mov
add
dec
cld
bound
mov
xchg
adc
or
data16
pop
aaa
dec
into
pop
add
fsubrl
mov
xchg
bound
dec
loop
jge
cmp
xor
fsubrp
sahf
lods
enter
mov
mov
or
or
stos
xchg
or
es
imul
into
andl
push
jmp
notl
jae
xor
test
or
or
or
das
sbb
rorb
sbb
adc
sbb
adc
pop
push
dec
sbb
call
push
sub
jmp
pusha
cld
loop
scas
aaa
xchg
add
iret
rcl
dec
xor
je
mov
sbb
xchg
mov
jmp
outsb
aas
fstp
gs
fptan
mov
jb
mov
push
pop
mov
rol
ja
dec
in
pushf
rcr
pushf
adc
pop
or
add
jns
mov
dec
orl
das
pop
sub
fstl
stc
cmp
jl
xchg
mov
mov
sarl
mov
cwtl
dec
lods
xchg
push
sub
adc
pop
pop
mov
scas
lods
and
vmovapd
and
insb
pop
ss
ficoms
or
into
xor
dec
fidivs
and
or
out
mov
repnz
dec
xchg
pop
repz
cmp
stos
ficompl
sbb
or
test
lods
pop
xchg
fwait
push
sbb
dec
and
adc
push
sbb
add
pop
cmp
push
mov
jmp
push
wrmsr
mov
rcl
fldt
sahf
into
mov
fwait
push
imul
pop
inc
fmuls
in
movl
push
add
loop
hlt
push
cmp
dec
in
cld
ja
cmp
sbb
sti
add
insl
cmp
add
aad
cld
sbb
out
add
adc
les
repnz
and
das
ret
cmp
mov
ret
xlat
mov
mov
xor
insl
ror
in
aam
sub
xor
pop
popa
mov
fdivrl
add
lds
ret
adc
movsl
out
cmc
sti
cmp
jp
pop
or
push
add
daa
inc
mov
addr16
fwait
xchg
xchg
cmp
push
lcall
mov
push
cmp
daa
xchg
mov
stc
jb
sub
add
jns
faddl
sub
push
add
paddusb
icebp
movsl
fsts
mov
jle
in
mov
test
out
mov
xorl
sarl
xor
inc
jnp
aas
call
into
andl
mov
scas
fxch
lods
xchg
jp
fists
mov
lea
adc
xchg
jp
rcr
sbb
xchg
dec
ljmp
dec
test
into
inc
mov
dec
int3
popa
or
mov
or
dec
incl
xor
imul
mov
rcl
dec
inc
cwtl
mov
pop
stc
or
xor
mov
or
push
mov
mov
jb
daa
sub
fcom
mov
pop
add
jecxz
pop
xchg
ds
out
mov
xchg
pop
pushf
cmp
push
aad
jg
jmp
mov
xor
das
outsb
jns
pop
pop
dec
pop
call
lods
push
jns
cmp
ljmp
inc
pop
movsb
lods
cmp
sarb
sub
mov
pop
pop
add
jbe
lahf
lret
addr16
push
sub
repz
xchg
push
vsubpd
push
out
jle
mov
mov
xchg
hlt
in
jbe
rcll
shlb
imul
cld
ficompl
sti
imul
nop
sub
addr16
mov
push
ja
push
loop
push
pop
push
data16
mov
push
hlt
pop
xor
mov
push
lret
fwait
and
push
prefetch
or
loopne
cmp
xor
scas
and
cmp
mov
ja
dec
add
js
outsl
in
sub
pop
outsl
jmp
mov
pop
mov
int3
pop
out
fwait
add
ficompl
push
push
sarb
xchg
push
mov
ret
dec
jecxz
cmc
scas
imul
test
mov
std
call
scas
sub
inc
and
cs
loopne
pop
shl
loop
sbb
sub
es
jb
add
paddb
mov
mov
cmp
aas
pop
dec
xchg
mov
add
inc
jne
out
aam
daa
mov
scas
sub
fwait
xchg
add
push
pop
mov
jns
fwait
pop
lods
cmp
push
into
fnstcw
dec
adc
ffreep
and
outsl
push
repz
sarl
mov
clc
xor
aas
cld
addr16
and
nop
mov
dec
pop
add
repnz
andb
add
sub
pusha
sti
add
pushf
mov
xchg
lcall
popa
mov
add
enter
out
mov
ss
fs
jnp
cmp
push
stos
clc
test
xchg
mov
pusha
push
out
fs
push
mov
xor
fimuls
std
xor
pop
std
or
push
mov
pop
dec
popl
mov
lds
repz
mov
add
jg
mov
mov
dec
or
psrlq
sbb
or
je
xor
lods
mov
push
loopne
xor
inc
loop
ds
mov
push
push
jmp
mov
mov
test
sbb
mov
pushf
add
xchg
mov
mov
jle
sbb
pop
adc
daa
inc
xor
ljmp
xchg
xchg
mov
push
lods
push
test
cmp
int3
sub
adcl
loopne
lods
xor
sti
fdivr
aas
jge
adc
cmp
stos
insl
xor
not
aad
shr
shrb
push
sub
push
or
adc
and
orb
repnz
iret
frstor
iret
shlb
mov
out
movsb
cmp
adc
fisubl
dec
add
mov
sbb
in
aam
mov
fisubrl
data16
icebp
sub
lds
inc
lret
popa
cltd
and
push
jae
fisubs
test
ljmp
pop
cmp
push
jmp
xor
mov
and
mov
shrb
rcrb
shrl
das
scas
xchg
mov
pop
jae
aad
xor
fcmovb
js
xor
mov
jmp
mov
or
push
jbe
lcall
inc
mov
sbb
xchg
dec
xor
cwtl
pushf
or
and
and
popf
inc
fsts
cs
pushf
and
mov
jmp
or
mov
scas
xor
cltd
jge
dec
push
sahf
into
aam
addl
lcall
push
xor
mov
xchg
repnz
call
jno
insl
xor
inc
ret
push
out
icebp
lret
sub
ret
xor
icebp
icebp
in
xchg
push
add
leave
jo
mov
push
add
sbb
bound
and
cmp
fisubrs
mov
dec
adc
or
dec
lahf
jbe
pop
jge
notb
inc
push
cmpsl
lahf
insl
pop
jg
lret
mov
mov
push
mov
dec
add
sbb
xchg
fstps
push
push
pop
or
scas
and
push
push
std
adc
aad
cmp
paddd
inc
push
pop
int3
mov
xchg
jmp
repz
sti
cmp
gs
sub
into
mov
mov
mov
mov
fisttpl
andb
int
add
out
cmp
push
push
adc
mov
cmp
movsl
mov
loopne
push
movsl
pop
xor
push
scas
push
addr16
int3
sarb
cmp
addl
and
mov
or
scas
mov
dec
rcll
stc
sub
inc
adc
iret
pop
and
adc
cs
fs
mov
xchg
das
in
xor
repz
jmp
xlat
rol
xor
xchg
pop
and
inc
jg
pop
dec
xchg
and
adc
popa
loop
sub
jg
sbb
push
jb
outsl
dec
sub
gs
push
mov
push
or
insb
popf
leave
sbb
push
push
cmp
mov
cmpsb
xor
mov
adc
sub
divb
enter
push
std
xchg
mov
sub
sub
inc
cmp
sbb
cli
dec
xchg
pop
hlt
mov
cmp
enter
aad
mov
jae
mov
loopne
or
sbb
jecxz
rcll
adc
imul
sbb
dec
sub
popa
negb
cmpsb
cli
xchg
sbb
cmp
je
mov
fwait
mov
insb
push
imul
jecxz
cmpsl
aam
jb
dec
sub
sub
jnp
pushf
jle
mov
mov
pop
sbb
sti
daa
sbb
das
mov
test
test
jmp
scas
sbb
cld
fs
movsb
flds
mov
jp
xor
cmp
sarb
loope
fwait
stc
xchg
push
bextr
xor
ficoml
inc
jge
gs
cwtl
into
ljmp
outsb
cmpb
mov
leave
push
movsb
sbb
notl
push
loope
sub
xor
sbb
mov
sbb
add
mul
mov
sbb
movsb
push
in
negl
xlat
jnp
rorb
inc
scas
and
or
out
dec
xor
imul
bound
xchg
movsl
mov
or
mov
jno
aaa
nop
push
xchg
cltd
into
fwait
pop
ss
jg
sub
adc
stos
outsl
inc
sbb
rolb
repnz
sarl
sbb
push
arpl
cmpsb
xor
mov
jnp
xor
jns
mov
push
sbb
xchg
ljmp
mov
push
and
and
mov
mov
int
xorl
adc
pop
dec
arpl
ss
dec
mov
mov
add
scas
outsb
jl
or
popa
roll
mov
jge
jb
gs
mov
stc
cltd
sbb
adc
xlat
cmpsl
jg
mov
mov
push
fcompl
ret
mov
sub
neg
mov
leave
add
repnz
scas
ljmp
mov
add
adc
pop
jp
sbb
xchg
pop
sub
cmp
nop
outsl
mov
inc
leave
jp
data16
add
fwait
pop
and
dec
lcallw
leave
cmp
inc
add
push
stc
adc
adc
shr
push
xchg
jmp
jne
pop
pop
out
jecxz
or
idivl
fwait
popa
add
fcmovb
rcrb
loop
lret
aad
lret
mov
mov
and
iret
xor
xchg
dec
push
lock
mov
add
jle
mov
fs
es
sbb
std
int3
popf
cmpb
in
adc
inc
test
shlb
jmp
mov
jp
push
xor
cmp
mov
cli
test
dec
mov
dec
in
mov
or
jg
jno
sub
and
or
gs
cli
cld
jle
xchg
daa
stos
imul
bound
mov
in
dec
cs
add
outsb
aam
jnp
icebp
test
cmp
adc
mov
mov
xchg
mov
inc
scas
jnp
sbb
dec
lahf
xchg
adc
nop
stos
sub
and
aad
addr16
es
dec
sub
loope
jge
aaa
sarb
mov
jae
adc
lea
cwtl
mov
push
orb
out
or
xchg
repz
inc
iret
xchg
pop
and
inc
or
adc
jg
push
test
fmuls
repz
imul
test
mov
test
pushf
pop
push
pop
sub
or
bnd
daa
xor
int
xlat
xchg
jne
test
shll
popa
ror
repnz
in
dec
adc
push
mov
mov
stc
inc
ljmp
js
sub
cwtl
jne
js
mov
out
lods
add
cmpsb
shll
cmpsb
loope
imul
and
je
es
test
faddl
mov
aas
xchg
insl
and
sub
cmc
insb
mov
mov
fadds
movsl
insl
shll
jb
insl
rorl
adc
dec
or
fldcw
pusha
dec
mov
rcrb
jmp
sbb
call
mov
std
mov
sbb
push
outsl
aam
js
repz
lahf
aaa
popf
inc
mov
ljmp
cmp
xor
pop
fiadds
mov
iret
adc
lods
outsb
js
and
cmp
enter
mov
mov
mov
rclb
or
jmp
lcall
or
cmpsb
cmc
mov
dec
push
out
sub
dec
lds
stos
adc
jae
fildll
cltd
push
les
cmp
or
cltd
jle
xor
sbb
xor
jmp
ret
mov
gs
stos
aaa
mov
out
addb
cwtl
sbb
cwtl
cmc
dec
and
push
mov
into
test
sbb
cmc
mov
cld
lds
sub
jno
lods
push
sub
xchg
mov
jbe
rorl
push
icebp
clc
push
ss
or
in
pusha
jle
pop
loope
jle
movsl
lods
xchg
jbe
in
add
pop
sbb
jnp
enter
sbb
scas
pop
mov
or
roll
test
loope
sbb
sbb
popf
repz
jl
test
inc
rcl
je
fucomp
fidivrl
fisubrs
test
xor
lcall
dec
sbb
insl
dec
xorl
inc
ret
jb
jbe
in
pop
inc
pop
jns
call
sub
lds
push
js
jl
xor
test
fcoms
movsb
xchg
pop
add
mov
add
inc
inc
sbb
je
push
push
or
mulb
xlat
enter
subb
std
xchg
scas
notl
repnz
jecxz
insb
cmpsl
mov
insl
mov
leave
add
inc
lds
adc
fadds
pop
push
jnp
int
je
out
movsl
mov
sbb
push
je
dec
in
daa
sbb
and
sbb
xor
mov
mov
out
arpl
imul
dec
shll
xchg
ljmp
in
and
sub
hlt
call
pusha
mov
push
lahf
insb
mov
mov
neg
inc
jecxz
icebp
into
cmp
sbb
out
and
movhps
pop
aaa
dec
mov
push
fs
mov
ret
lret
inc
dec
mov
jnp
sub
outsb
jmp
ljmp
int
xor
js
inc
ror
cs
sbb
and
jbe
sbb
jg
pop
xor
pop
pop
push
shll
jl
xor
dec
mov
mov
fsubs
or
dec
mov
out
lods
ja
test
pop
cs
sub
dec
mov
dec
out
enter
mov
outsl
aas
hlt
sbb
sub
sti
xorb
sbb
movsl
test
pop
stos
repnz
call
fnstsw
cmp
repz
jnp
jp
fwait
or
pop
cmp
sub
shlb
or
add
negb
fnsave
mov
cmp
in
pusha
mov
jo
testb
sub
in
xor
and
push
cmp
sbb
cwtl
cmp
loopne
rclb
pop
lea
sub
lahf
pop
out
jb
dec
pop
ja
test
jo
push
mov
pop
xchg
sbb
push
mov
subb
sbb
adc
mov
icebp
fldcw
push
fmul
add
stos
daa
inc
aam
data16
repz
sbb
or
stc
in
pop
adc
out
aam
iret
loop
ja
xor
mov
add
push
jno
pop
int
lods
or
mov
sbb
fisubl
stos
loop
jecxz
jge
sbb
in
in
xchg
icebp
push
addr16
mov
movsb
xchg
inc
rcr
scas
sub
lock
movsl
push
xchg
shr
dec
add
iret
xchg
sbb
pop
xchg
sbb
and
pop
frstor
cltd
jno
pop
lock
xor
aaa
sarb
sbbb
fucomi
nop
xlat
in
add
mov
out
jmp
ret
lea
or
inc
and
int3
inc
mov
jl
dec
shll
popf
ret
out
in
fcomps
ret
xchg
push
loop
std
jb
mov
xchg
push
enter
int
inc
enter
jmp
cmp
rorb
mov
xchg
mov
xlat
mov
in
scas
incl
mov
or
or
ss
fwait
idiv
fdivs
lahf
dec
roll
push
arpl
inc
aaa
vpacksswb
stos
push
enter
pop
roll
xchg
scas
jo
dec
xor
xlat
lea
or
push
into
xchg
cmp
xor
mov
dec
lods
pop
inc
pop
mov
movb
cmp
mov
jno
and
lahf
pop
push
popa
lea
push
add
pop
adc
inc
fwait
hlt
xchg
pop
pop
scas
rclb
and
pusha
inc
cs
flds
mov
mov
inc
pop
jle
add
mov
loope
fnstenv
pop
movl
pop
pop
arpl
xchg
mov
cmpsl
and
inc
vcvtdq2pd
aaa
inc
in
lret
jo
sbb
in
sub
pop
arpl
xorb
and
pop
or
fdivl
inc
loope
cmp
xchg
adc
mov
xorb
cmp
pusha
cli
sub
pop
ret
mov
ror
dec
add
test
or
sbb
adc
loope
ss
jo
movsb
push
shrb
add
dec
adc
add
cli
lahf
fimuls
sub
xchg
test
xchg
ljmp
pop
mov
sub
jge
popf
insl
rcrl
and
add
jge
movsl
mov
sub
std
cmp
int3
xlat
enter
repz
cmp
loopne
orb
add
dec
inc
or
aaa
dec
push
and
cmp
js
push
into
sbb
int
jp
or
js
ljmp
sarl
add
cmc
dec
mov
popa
or
xor
pusha
mov
mov
pop
cmpsb
mov
inc
dec
test
andb
sahf
cmp
jbe
sbb
mov
mov
gs
adc
xlat
lods
cs
push
jecxz
and
pop
xchg
into
cmpsb
push
mov
jecxz
je
test
adc
test
jle
test
adc
out
loop
mov
lods
push
ljmp
pop
cmp
lds
cmpsb
xor
in
nop
mov
and
in
sbb
xor
dec
je
stos
push
lcall
imul
hlt
jmp
scas
sbb
dec
or
sbb
into
add
ret
imul
mov
mov
das
xchg
lea
xor
mov
call
xchg
and
leave
gs
aas
insb
sub
jge
into
pop
sbb
push
mov
not
mov
lods
xor
mov
cmpb
ret
cmp
sbb
push
leave
in
cld
push
fimull
mov
push
cmp
dec
sub
cmpsb
test
adc
in
ret
ss
mov
inc
xchg
mov
icebp
into
push
cmp
pop
mov
lods
mov
mov
lcall
xchg
push
cltd
pop
call
inc
xchg
xor
ja
rcrl
cmpsb
neg
cmpsl
mov
jecxz
mov
push
mov
test
or
enter
add
jecxz
xor
xchg
fadd
add
mov
fcompl
mov
push
push
inc
fstpt
outsl
cmp
test
and
ja
bound
adc
dec
cmp
pop
sahf
lods
cltd
imul
or
stc
fprem1
out
push
scas
and
test
xor
or
fs
and
inc
pop
jp
jbe
mov
out
fdivl
adc
xor
test
fists
inc
add
cmovs
xchg
xchg
jge
push
jg
or
dec
aaa
push
jo
or
rclb
xchg
pop
popa
mov
push
inc
push
loop
mov
add
adc
int3
push
jbe
pop
mov
jp
inc
lods
adc
cmp
ror
cld
mov
cld
js
jb
scas
cmpsb
adc
sbb
jns
ljmp
aaa
xchg
xchg
inc
push
push
fwait
ds
iret
xchg
dec
fcoms
xchg
xor
stos
into
pop
inc
mov
sub
push
rol
sbb
mov
pop
es
xor
mull
shlb
cmc
cmpsb
lea
adc
xor
mov
gs
adc
in
lcall
or
roll
cmc
sbb
jmp
jns
popf
dec
xlat
out
popf
cmpsl
dec
inc
pop
pop
loop
mov
iret
idiv
and
push
pop
rep
shrb
pop
xchg
inc
adc
fs
pushf
int3
mov
mov
clc
jmp
pop
icebp
neg
jp
scas
inc
adc
xor
mov
imul
push
rorl
fcmove
adc
xchg
les
sbb
inc
stos
lock
insl
xor
stos
lret
sbb
call
loopne
enter
shll
leave
and
sbb
leave
hlt
movsb
add
not
xor
mov
ds
push
stc
cmp
jbe
inc
repz
in
cmc
and
fcompl
ror
mov
mov
mov
dec
and
xchg
lret
enter
cmp
jns
icebp
rol
iret
ret
mulb
dec
ret
xchg
fists
dec
jno
mov
sete
outsb
ljmp
xchg
cmp
ret
inc
mov
leave
inc
inc
jno,pn
iret
cmp
mov
repnz
inc
jo
sub
call
rcrb
fs
in
lret
mov
cmp
or
add
pop
push
inc
js
xchg
push
dec
movsb
scas
add
and
push
jmp
inc
xor
pop
jo
pop
push
or
mov
ss
jae
jle
mov
add
or
lods
fnsave
xor
pop
mov
incb
cmp
inc
shll
movsb
out
pop
aas
jecxz
lret
das
jnp
scas
inc
outsl
nop
mov
cwtl
adc
cmpsl
pop
or
inc
mov
jl
mov
and
loop
jns
push
jbe
rep
push
add
icebp
in
dec
and
loopw
mov
pop
ficomps
sbb
incb
add
scas
mov
adc
lock
lret
sbb
push
je
push
jns
xchg
fimull
adc
scas
mov
cmp
mov
mov
ret
cmp
or
lds
sub
aaa
std
fucom
loopne
mov
dec
mov
sub
outsb
inc
jge
ror
push
outsb
insb
xchg
shrl
lods
jmp
adc
sbbl
and
push
out
pop
movsb
outsl
lret
xchg
mov
outsb
inc
insb
repnz
ljmp
jnp
clc
adc
mov
fcoml
fs
fstp
dec
push
push
xor
mov
dec
inc
jge
mov
add
in
aad
int3
add
hlt
xlat
or
pop
loopne
xor
push
sub
sbb
adc
inc
add
stc
mov
xor
push
out
sub
pop
add
sbb
mov
test
lea
add
and
or
xor
push
out
fisubrl
pop
adc
out
ljmp
popa
mov
fbstp
in
inc
jno
push
mov
xor
dec
mov
or
push
ret
fldcw
xchg
ds
scas
mov
into
sbb
sahf
push
sbb
mov
in
lcall
dec
loop
push
mov
int3
daa
into
fnstenv
lock
push
inc
ret
pop
cmp
mov
sti
mov
adc
mov
out
popa
testb
dec
je
bnd
xor
xor
jae
inc
jecxz
and
mov
and
cltd
dec
mov
cld
add
jno
sbb
and
sarl
repnz
mov
or
pop
test
inc
sub
rolb
xor
outsb
push
sub
mov
xor
inc
push
jb
lds
daa
popa
mov
mov
fmull
ror
push
or
cmc
push
or
mov
pop
mov
adc
gs
inc
ss
push
xor
mov
dec
jbe,pn
popl
cwtl
mov
inc
xchg
pop
jne
iret
sbb
pushf
cwtl
or
bnd
out
daa
loope
cmp
incl
fwait
sub
or
cmpsl
sbb
pcmpgtw
rolb
sbb
addr16
jp
ds
adc
test
mov
incb
cmp
xor
mov
int
mov
icebp
xchg
jge
push
add
jnp
in
repnz
jae
xchg
movl
out
mov
jl
jae
and
and
push
nopl
iret
mov
inc
mov
and
aam
sub
out
cmp
es
jp
icebp
loopne
dec
mov
adc
lock
loop
imull
frstor
mov
jmp
fisttpll
sarl
dec
dec
xor
pop
xchg
xor
movsb
push
adc
jle
mov
add
jne
cltd
xchg
test
test
push
adc
push
inc
popa
add
pop
insl
mov
xor
test
xor
push
xor
pop
lret
dec
fsub
ja
cmpsl
fnsave
fcmove
sbb
or
rcrl
lahf
jmp
dec
stos
data16
xor
lea
hlt
movsl
push
cmpb
inc
fwait
sub
mulb
jne
lock
mov
in
inc
in
xor
inc
cli
cmpsb
int3
aam
cmpl
mov
push
jge
xchg
or
cmp
pusha
in
loop
daa
xor
loopne
add
shl
adc
push
idiv
fistpll
clc
or
int3
roll
clc
imul
mov
clc
filds
fisubrl
icebp
xchg
test
stos
adc
and
cmp
adcl
pusha
fiaddl
adc
lds
iret
fimuls
sub
cmp
loopne
enter
and
enter
sbb
jo
jp
xchg
sarb
cmp
push
sbb
xchg
nop
inc
je
pop
pop
mov
ljmp
inc
mov
mov
xor
orl
in
cmp
hlt
popf
mov
ret
je
and
imul
mov
xchg
mov
or
jmp
or
mov
sbb
pop
insl
push
jns
in
mov
fidivl
xchg
mov
in
dec
dec
xor
insl
mov
pop
les
lods
dec
daa
push
adc
in
fimuls
out
ss
dec
mov
hlt
jecxz
ret
mov
and
mov
sub
test
xor
fs
movsl
fadds
inc
xchg
or
mov
dec
push
jl
pop
mov
pop
cmc
loop
xchg
mov
pop
pop
jo
std
xor
mov
xlat
pop
adc
orl
fs
shl
cmp
outsb
push
dec
mov
popf
pusha
loop
xchg
shl
or
js
push
or
dec
mov
xchg
and
ljmp
pop
bound
mov
push
dec
fsubl
jge,pt
pushf
ss
cmpsl
stos
pop
xor
cmp
ficoml
out
aaa
adc
imul
imulb
and
push
mov
aas
mov
inc
add
repz
subl
pop
out
pusha
mov
fistpll
pop
int
lret
test
fnstenv
jmp
aad
push
xchg
mov
sub
insl
mov
into
rcr
jmp
movsb
call
inc
xchg
sub
dec
mov
ja
ljmp
arpl
loopne
xor
inc
jns
int
out
call
fldt
push
xor
jne
push
lock
sub
inc
push
xor
mov
loopne
aas
add
add
xor
jg
inc
pop
popa
and
gs
sahf
dec
sti
in
xchg
push
mov
and
fcompl
daa
subb
in
iret
aaa
jg
xchg
pop
push
nop
cs
cmpsb
pusha
enter
fnstenv
xchg
lahf
push
mov
push
shrl
outsl
mov
addr16
negl
js
test
inc
scas
pop
push
out
hlt
xchg
pusha
lcall
ret
call
testb
add
imul
insl
inc
pop
ret
push
or
imull
ja
fdivl
cmc
jge
mov
push
cmp
gs
adc
push
xchg
out
ret
push
dec
enter
mov
cltd
sub
cmp
jg
arpl
daa
and
aas
and
xchg
ret
sub
call
arpl
aam
mov
aas
mov
mov
loopne
test
movsl
testl
dec
mov
cwtl
imul
or
mov
pop
das
xchg
fwait
xchg
push
mov
xchg
mov
shrb
jbe
xorl
cmpsl
std
pop
mov
aas
dec
and
imul
xchg
sub
dec
insb
jge
repz
call
je
movsb
fcomps
out
out
mov
testb
ljmp
dec
xchg
adcb
pop
cmp
add
es
enter
es
mov
loopne
dec
xchg
or
test
adc
shll
xor
and
mov
cmp
ret
or
imul
pop
cld
pop
arpl
nop
lret
xor
shlb
fisubs
outsb
lods
dec
push
cltd
xchg
xor
ss
or
sub
rcl
jnp
lock
les
sti
lea
inc
arpl
mov
mov
dec
adc
xchg
cld
popf
dec
jl
adc
pop
iret
ljmp
ret
mov
popa
xchg
cmp
sbb
adc
pushl
mov
stos
mov
aas
and
mov
lret
xor
ds
pop
cmpl
inc
add
outsl
mov
mov
test
mov
je
and
arpl
ljmp
cmp
xchg
or
push
mov
mov
movsl
mov
shll
insl
and
clc
popf
lret
fwait
xchg
stc
push
repnz
mov
sub
fdiv
fwait
xchg
sub
sub
lods
mov
add
jmp
in
push
ds
testl
outsl
inc
call
ret
lret
and
xchg
mov
pop
jb
cmp
leave
je
sbb
sub
xchg
pop
fs
fnsave
jl
dec
lods
jbe
sbb
push
pop
aaa
in
lret
fsub
test
jmp
imul
je
push
das
add
loopne
int3
mov
aad
inc
jle
jae
lret
push
push
cmp
push
adc
xchg
push
push
in
xor
and
inc
pop
fsts
xor
pop
mov
movsl
insl
push
ror
in
gs
mov
mov
jp
pop
fld
inc
fdivrl
insl
jbe
xchg
popa
sbb
addr16
test
pop
sbb
shll
hlt
push
cs
adc
mov
mov
add
or
mulb
rolb
repz
fwait
or
mov
arpl
rcrb
lahf
adc
shll
mov
std
icebp
jl
in
fmuls
les
ret
mov
and
rcr
cmp
push
fs
lods
out
jl
jns
mov
out
cmp
aaa
jge
mov
movsb
cld
mov
mov
sbb
xchg
jnp
sbb
or
cmp
call
repz
loop
insb
fstl
subl
mov
lds
mov
sbb
mov
xchg
xchg
repz
scas
and
test
cwtl
adc
jle
insl
clc
jge
or
mov
nop
pop
dec
daa
movsl
pop
jp
jb
js
inc
aaa
mov
xchg
pop
ljmp
lret
fisubl
adc
inc
jns
not
dec
push
pop
jae
mov
sti
je
adc
sarl
icebp
repz
adc
push
imul
mov
and
lret
pop
xor
mov
cmp
adc
mov
pop
mov
fldt
insl
adc
jg
fmuls
adc
fimull
push
das
add
popa
jg
mov
push
and
subl
ret
out
add
push
push
imul
imul
cmpb
xchg
leave
scas
add
sahf
inc
xor
call
xchg
jge
cltd
inc
leave
fiadds
fimull
insl
enter
imul
imul
mov
aas
push
inc
out
shl
jno
pop
cwtl
and
imul
in
xchg
popa
push
push
cmp
cmp
jnp
bound
jae
popa
pop
dec
dec
fbld
push
lods
test
outsb
out
push
xor
dec
cld
push
imul
lea
or
call
sbb
push
pop
data16
icebp
push
sbb
xchg
shrb
mov
inc
fsubl
data16
push
dec
popl
mov
call
sub
or
shll
popf
and
enter
jg
dec
ficoms
jns
mov
imul
out
xlat
stc
inc
cltd
in
inc
test
repnz
idivb
movsb
xchg
pop
add
cmpsl
jmp
or
xchg
xor
cwtl
enter
bound
pusha
scas
jb
jl
cmpl
popf
fldcw
xor
inc
ds
or
add
sahf
sub
adcb
adc
xchg
loopne
sub
call
flds
jmp
pop
inc
incl
jp
movsl
loope
sbb
test
js
jnp
xor
out
ret
jne
rcrb
jge
in
mov
insb
movsb
in
notl
push
incl
cmc
shlb
loopne
push
jne
mov
pop
inc
sub
pop
out
and
adc
mov
sub
jne
js
rol
lea
mov
pop
inc
in
push
push
mov
xor
pop
cmc
fs
mov
repnz
cmp
xor
mov
cmp
mov
fcoms
jae
adc
icebp
xchg
lods
test
xor
jno
popf
nop
test
jecxz
and
push
bound
push
pop
dec
jns
int
lahf
sbb
sbb
adc
and
mov
mov
out
pop
loop
cmp
dec
push
ss
mov
sbb
insl
sahf
scas
iret
js
mov
repz
pop
sahf
pop
test
mov
pop
mov
xchg
mov
push
add
imul
cld
xchg
into
pop
sbb
clc
jns
sbb
addr16
imul
inc
and
mov
hlt
cld
fcmovb
int3
xchg
out
loope
les
adc
mov
mov
gs
fs
gs
add
inc
in
movsl
js
cmp
int3
inc
or
outsb
int3
test
pop
dec
mov
ficompl
sbb
jge
or
jmp
xchg
push
adc
sbb
jle
xchg
int3
clc
add
add
dec
adc
or
mov
mov
pushf
pop
test
xchg
std
filds
adc
add
xchg
addr16
sbb
shl
sahf
out
cmp
and
adc
sub
cmpsl
xchg
push
out
jge
pop
xor
fisubl
push
bound
xchg
out
push
insl
xchg
jg
xchg
push
push
pop
or
xor
aam
cmpb
lods
rclb
pop
inc
cmp
les
lds
imul
sub
inc
push
mov
pop
xlat
data16
jb
out
call
xchg
cmp
mov
push
out
sarb
push
iret
lods
inc
mov
loop
push
inc
cmovl
sbb
scas
iret
scas
mov
rclb
inc
xor
xchg
dec
es
adc
jnp
xchg
ja
inc
cld
into
adc
fisubrl
push
cs
mov
push
push
xchg
jecxz
in
icebp
insl
in
or
pusha
mov
ds
pop
pop
and
mov
push
cmpsb
jno
daa
jbe
ret
push
inc
in
mov
lods
enter
jp
sar
cmpsb
fsubs
lods
ret
pop
mov
ret
cmpsb
jecxz
pop
outsl
mov
add
je
movsl
dec
in
cmc
sarl
jbe
adc
bound
cmp
lret
push
inc
outsb
jno
inc
sub
scas
sub
movsl
xchg
xchg
jb
movlps
lcall
ja
xchg
std
push
int3
jns
movsb
popl
xor
mov
addr16
sbb
xchg
sub
dec
xor
int3
in
loope
dec
loop
lret
jmp
aad
xor
rorb
sub
xchg
outsl
outsl
add
jno
insb
pushf
jno
push
dec
repz
sti
xor
lcall
js
nop
cmp
rol
mov
cmp
lods
les
push
test
or
test
push
add
and
mov
pop
rorb
jl
jge
mov
ficomps
mov
mov
js
xchg
jge
iret
push
pop
les
int3
mov
enter
cmp
jbe
gs
xchg
xor
dec
xchg
xchg
mov
rcrb
push
and
mov
jmp
ja
xchg
push
repnz
lcall
jno
xlat
cwtl
or
in
sub
stos
jne
mov
and
mov
std
xor
arpl
inc
stc
lods
insb
adc
sub
in
ja
sahf
push
into
cmp
mov
dec
popf
mov
push
daa
aaa
push
dec
adcb
pop
push
mov
sub
movsb
clc
out
xchg
add
adc
jecxz
cwtl
push
xchg
loop
jno
jns
loope
adc
add
nop
adc
add
cmp
test
mov
sbb
dec
imul
lret
leave
xchg
enter
and
xor
sahf
jmp
sbb
movb
xchg
div
or
xor
pop
cmp
lret
xchg
lahf
xchg
dec
in
orl
jp
mulb
mov
jmp
into
fcmovb
rcrb
push
inc
inc
or
or
clc
je
and
sub
clc
cmc
jne
mov
dec
inc
add
mov
subl
pushf
inc
mov
pop
or
adc
inc
dec
mov
nop
cmpsl
push
sbb
fninit
mov
jp
sub
adc
push
shlb
sub
rolb
lret
hlt
insb
inc
call
roll
insl
ljmp
stc
mov
pushf
mov
cmp
ds
fildl
fwait
gs
bound
je
mov
out
daa
mov
or
cld
wbinvd
dec
pushf
loope
push
pushf
jg
fmull
ljmp
push
lea
rorb
mov
sub
push
stos
xor
xchg
or
xor
and
lret
leave
daa
push
pushf
icebp
clc
repnz
mov
xchg
jnp
or
js
andb
outsb
mov
adc
mov
and
jnp
in
sahf
movb
test
sbb
add
jno
das
mov
in
adc
add
sbb
or
rcll
rcl
test
rcll
and
mov
adc
push
lret
xchg
adc
outsb
into
xchg
ficompl
sub
push
aad
mov
lret
aaa
jnp
js
aad
jnp
stc
dec
inc
pushf
dec
test
pop
and
and
outsb
fsubp
shrl
fucom
movsb
adc
push
loope
fdiv
push
lods
mov
stos
loop
pop
sti
inc
mov
nop
int3
mov
jo
push
adc
lret
es
nop
nop
scas
je
ss
sub
mov
es
mov
out
cmp
scas
sbb
jmp
aas
stos
jl
scas
out
mov
dec
fiadds
rcrb
jl
mov
outsl
jae
push
xlat
mov
fwait
cld
lret
pusha
in
adc
mov
xchg
pusha
lret
adc
ret
stos
dec
lds
jae
std
fists
movsb
mov
imul
mov
loopne
testb
xchg
mov
pop
push
es
add
and
cmpsl
sub
lahf
lock
xchg
shll
xor
ret
js
pop
dec
fimull
xor
sbb
add
mov
sub
mov
add
push
inc
pop
fnstenv
mov
xor
add
push
jne
outsb
cmpsl
push
lcall
push
fisubrs
fsubl
dec
xabort
jmp
scas
or
in
popa
sub
shll
sub
push
lock
test
inc
pop
push
and
loopne
sbb
sbb
movsl
and
jmp
fwait
mov
mov
out
lret
mov
loope
sub
aam
and
jae
dec
movsl
imull
push
cmp
jecxz
xchg
or
adc
repnz
aad
or
push
mov
dec
dec
aad
cmp
lret
jnp
dec
pop
es
shlb
sub
mov
out
cmpsl
or
and
xchg
cmpsb
call
in
add
lods
or
adc
mov
and
dec
lds
jbe
inc
test
lahf
gs
in
xchg
testb
test
jns
pop
xchg
jp
lahf
jmp
fistpl
cld
ja
xor
mov
dec
fidivl
sbbb
and
cmp
xor
xlat
movsb
pop
daa
hlt
and
fwait
pop
fsubr
scas
dec
aaa
insl
jae
sbb
std
stos
and
jge
in
insl
pop
or
ljmp
mov
dec
push
xchg
or
stos
jl
jnp
cmp
jno
mov
out
or
lcall
mov
stos
mov
jle
xor
movsl
cmp
insb
aad
cwtl
notl
sub
data16
outsl
cwtl
js
aam
mov
int
insb
mov
ja
gs
popa
scas
in
popa
ret
outsl
pop
clc
sub
pushl
xchg
or
xor
scas
gs
iret
fcmovnbe
mov
push
in
mov
clc
pop
imulb
insl
lret
mov
mov
push
inc
push
idivl
sysenter
xchg
sub
push
into
add
lds
sub
mov
movsb
cli
jmp
bound
push
cmp
out
and
mov
pop
sub
sub
sub
repz
sbb
lahf
jle
das
shll
mov
inc
lods
sub
cmp
dec
vrcpss
mov
mov
je
sub
shll
cmp
mov
stos
pop
aaa
push
sub
mov
lcall
fwait
mov
jnp
out
pop
mov
xor
push
mov
jne
sbb
jmp
lds
and
dec
stos
lods
xor
hlt
pop
and
xchg
dec
pop
cmp
cmp
jg
lods
push
fs
dec
push
pop
stos
jns
inc
mov
call
nop
insb
sub
jo
fnstcw
or
rorl
subl
fcoms
cmc
add
outsb
popf
pop
sub
out
xor
bound
fcomp
jecxz
repz
int3
das
ret
xlat
fwait
shll
jl
mov
outsb
subb
out
js
mov
movsl
inc
mov
xor
lret
or
add
pop
inc
sbb
out
insb
btsl
jns
ss
xchg
rcr
adc
mov
stos
cmpsb
imul
or
imul
rcll
aam
cmp
push
jnp
lcall
and
sbb
jne
fs
fimull
sbb
mov
pop
adc
les
leave
movsb
cmp
pop
out
into
fmulp
jle
test
shll
push
mov
mov
inc
or
movsb
push
dec
call
leave
sub
in
stc
fidivrs
out
ret
je
imul
gs
loope
jnp
fnstsw
nop
fst
mov
add
add
xchg
daa
sub
jp
dec
inc
xchg
push
lret
call
out
mov
pop
addr16
fldenv
mov
pop
sbb
out
in
stc
mov
pop
pop
mov
ss
popa
ja
icebp
adc
pop
loopne
mov
in
outsb
pop
inc
xchg
adc
pop
sbb
xchg
ss
inc
push
out
insl
fsts
insl
aam
stc
std
test
and
loop
mov
pop
and
je
leave
mov
cmp
pop
int
imul
iret
push
sub
hlt
in
scas
adc
pop
imul
pop
int
xor
or
inc
dec
push
lret
scas
xlat
fmul
cmpsb
ja
dec
enter
add
jecxz
mov
adc
cmp
leave
lods
je
in
icebp
push
push
mov
xor
test
mov
sub
mov
lods
jle
dec
sbb
xchg
or
add
xor
mov
cmp
push
inc
dec
divb
in
clc
rcrl
insb
loop
insb
push
mov
test
hlt
fmuls
jmp
out
movsb
fisttps
sbb
cmp
inc
push
enter
mov
negl
add
add
mov
push
xchg
leave
inc
data16
pop
or
sbb
lock
stc
daa
fmuls
sbb
fistl
push
mov
outsl
cmpsl
xor
out
leave
les
push
cmp
push
xchg
dec
xchg
fistl
outsb
pushf
jle
mov
jb
xchg
or
mov
icebp
pop
lret
mov
pop
and
jmp
inc
nop
gs
adc
mov
push
mov
test
or
lcall
inc
fnsetpm(287
das
inc
mov
js
test
jae
sub
movsb
stos
or
and
outsb
in
in
call
pop
sub
pop
mov
sbb
mov
icebp
and
popa
bound
inc
aam
jg
jbe
sub
cmp
outsl
dec
stc
or
subl
jae
stc
pusha
pusha
imul
jge
jg
aam
pop
lcall
aas
cwtl
sbb
loop
sbb
mov
lods
pop
push
lret
pop
push
mov
jbe
push
push
gs
mov
mov
push
jg
nop
jae
in
add
in
dec
xchg
daa
jbe
cmp
orb
jmp
lds
daa
ljmp
loop
or
ljmp
pushf
aas
lds
insw
rep
mov
jl
imul
and
stc
incl
incl
fmulp
mov
push
stc
jmp
xchg
adc
and
sub
mov
rol
int3
in
das
jecxz
xchg
sbb
inc
in
imul
pop
jmp
lea
inc
rcll
insb
inc
xchg
xor
mov
fbld
sub
and
dec
add
mov
aaa
mov
or
leave
fcompl
xchg
push
pop
xor
lret
loope
sbb
aaa
cmp
jnp
pop
cmp
mov
repz
or
xchg
dec
addl
aam
xor
mov
addr16
pop
xor
lret
int
inc
addb
sbbl
pop
add
jo
aas
dec
aam
push
adc
sub
shll
cs
sub
xor
ds
imul
clc
jae
pop
sbb
pop
pop
stos
and
lret
push
add
or
jg
hlt
push
mov
in
mov
xchg
ljmp
mov
dec
cmp
push
jle
outsl
pushf
scas
out
in
andl
jae
out
popa
mov
sub
mov
sbb
jae
int
bound
das
adc
stc
dec
data16
dec
sub
inc
pop
into
shll
clc
out
mov
or
jne
jbe
leave
xor
inc
mov
lea
xchg
lcall
mov
ret
jo
orb
or
pusha
dec
jecxz
dec
xor
scas
out
or
rolb
dec
addl
sub
and
popf
fadds
rcrb
mov
and
xchg
jbe
and
int3
fcoml
jg
fidivrs
dec
push
inc
clc
pop
ljmp
fisubl
lret
or
jge
test
or
subl
in
inc
cmp
cmp
xor
mov
cmp
push
cli
add
stos
xor
mov
xlat
ja
and
pusha
jg
xlat
jne
xchg
inc
not
jne
cwtl
push
mov
ljmp
out
push
mov
imul
fsubrs
sbb
imul
cltd
pop
les
push
imul
es
lds
mov
mov
mov
int
push
inc
and
adc
xor
and
aaa
in
jo
out
arpl
pop
cwtl
cmp
outsl
pop
shrl
mov
mov
xlat
test
andl
outsb
addr16
not
je
shrb
jae
xchg
lods
sbb
xchg
es
lret
sub
in
test
jecxz
or
int3
nop
adc
jp
xor
sub
flds
cli
arpl
xchg
mov
xchg
mov
cmpsb
loop
adc
mov
push
or
in
mov
repnz
sub
inc
dec
inc
push
and
or
mov
inc
mov
jae
inc
ds
lret
in
pop
and
cltd
add
pusha
add
cwtl
push
inc
add
push
inc
sbb
and
test
sbb
xor
dec
pop
in
xor
insb
lret
aas
lcall
sbb
xor
mov
nop
popa
call
mov
pop
xor
jl
jg
scas
add
jge
xchg
in
enter
shlb
push
cmp
movsb
pusha
mov
cmp
insl
andb
ja
push
push
add
push
add
mov
inc
cltd
xorl
cltd
xlat
inc
xchg
add
stc
add
inc
in
insb
inc
xchg
jle
movsl
and
loop
sahf
sub
lods
cmpsl
or
mov
adc
test
insb
and
and
pop
push
mov
fldcw
inc
pusha
js
adc
ljmp
adc
insb
cmpb
mov
sub
sti
shlb
addl
cmp
sub
or
xchg
sarb
lret
insb
scas
mov
push
sahf
les
mov
add
inc
mov
cmp
or
data16
cmp
sbbb
aas
cwtl
pop
mov
pop
xlat
stc
ss
pushf
cmp
pop
cld
lock
or
xlat
out
loop
push
pmaxub
push
or
xchg
sarb
mov
inc
nop
cmp
or
ret
inc
in
ficoms
repnz
and
jae
mov
adc
popa
pushf
pop
scas
test
out
mov
xchg
mov
and
test
xchg
jge
mov
pop
lock
cltd
out
inc
adc
mov
lock
in
jnp
in
xor
cltd
or
mov
or
cmp
rolb
pop
hlt
jne
mov
add
gs
mov
add
dec
push
lods
push
jbe
or
or
out
and
movzbl
sahf
int3
mov
mov
jae
rolb
push
and
fldl
push
out
test
sub
and
inc
mov
inc
leave
adc
sbb
test
xor
mov
orb
mov
adc
aad
aaa
out
jmp
mov
jmp
push
mov
xchg
repnz
jne
leave
lret
sub
cmc
adcb
dec
push
mov
dec
dec
push
loop
fistps
jo
sbb
mov
icebp
addr16
ja
jp
clc
aas
stos
mov
cs
mov
cwtl
fucomi
std
test
outsb
rcrl
inc
test
testl
mov
int3
cmp
fiadds
sub
out
push
jge
add
jl
and
jle
jp
sub
jmp
andb
addb
shlb
stc
jo
out
cltd
and
int
push
xorb
in
in
sbb
lcall
mov
js
adc
push
mov
or
daa
test
popa
push
dec
push
sub
jns
inc
ljmp
push
dec
sbb
es
cld
mov
repz
xchg
or
cmp
js
inc
mov
mov
mov
js
push
fwait
mov
je
jae
inc
sbb
jbe
les
inc
mov
adc
jo
dec
repz
cmp
lcall
or
and
pop
lret
sub
dec
data16
imul
xorb
mov
and
lret
popa
mov
subb
mov
xor
insb
push
lds
push
hlt
add
cmp
inc
arpl
mov
movsb
push
ljmp
fldt
sub
xor
mov
push
inc
mov
inc
adc
pop
into
jbe
decb
and
repnz
xchg
add
test
and
mov
gs
out
out
push
nop
xor
inc
ret
int3
dec
pop
sbb
jge
pop
xor
push
mov
je
addr16
scas
dec
pop
sbb
test
sti
adc
mov
pushf
pusha
stos
lea
scas
inc
push
sub
data16
inc
lods
cmp
repz
adc
sar
pushf
lock
sub
add
sahf
mov
cld
sbb
and
pop
popf
clc
leave
dec
xor
inc
call
cmpsl
sbb
ljmp
xor
dec
mov
or
shll
dec
das
mov
xor
fsubs
xchg
clc
je
inc
or
decl
add
xchg
repz
push
int
mov
jge
xchg
mov
add
jmp
fnstsw
fnstsw
and
notl
shll
push
insb
outsl
pop
sub
test
cmp
push
sahf
lods
call
add
pop
test
fcmovnbe
push
int
imul
divb
int3
dec
lods
push
lods
cmpsl
jecxz
aas
aad
inc
sti
aam
movsl
cmp
mov
mov
push
dec
jns
loop
sahf
jle
imul
out
jge
and
sbb
mov
pop
ds
stos
sub
dec
and
es
dec
push
dec
das
daa
testb
shrl
dec
scas
adcb
mov
mov
lds
lods
push
jp
mov
push
inc
dec
xchg
loope
xchg
ror
leave
imul
fldenv
pop
xlat
pushf
and
xlat
cmp
mov
add
mov
subb
xor
cmp
fmulp
mov
mov
cmp
outsl
or
fildl
popa
push
add
ss
cmp
negl
inc
iret
test
in
lods
sbb
xchg
pop
subl
cli
cltd
cmpsb
cmp
mov
dec
inc
sbb
movsl
lods
stc
fwait
mov
stos
jb
pop
int3
leave
lret
dec
arpl
adcl
aad
pop
aam
adc
shrb
imull
das
push
xor
cmpsl
sbb
add
cmpsb
xchg
and
aad
and
iret
add
push
cmp
and
add
adcb
or
mov
mov
rcrl
dec
gs
dec
jnp
ljmp
int3
add
outsl
cmpsb
xor
mov
ss
inc
ret
or
adc
dec
std
outsb
mov
clc
cmp
cmp
scas
movsb
notb
addl
cmpsl
stos
subb
insl
mov
gs
setg
sahf
mov
ljmp
inc
cld
out
mov
das
sahf
scas
nop
ja
xor
sbb
sub
jp
mov
cmp
pop
movsb
or
outsb
or
movsb
mov
mov
mov
xchg
in
in
push
fs
data16
mov
aad
xchg
cmpsl
fwait
mov
pop
sub
les
mov
out
daa
sbb
sub
inc
pop
test
inc
sub
mov
push
sub
pushf
aaa
out
mov
jbe
mov
sub
and
add
test
cmp
sti
sub
mov
xchg
hlt
fstps
xor
in
cwtl
xchg
dec
iret
mov
and
in
push
stos
inc
icebp
pop
xor
xchg
fsubrl
mov
pop
sbb
push
scas
mov
lret
shrb
pop
dec
dec
test
add
js
mov
mov
out
push
cs
xor
xor
sbb
outsl
out
scas
cli
movsl
or
add
test
andl
test
lods
popl
sti
imul
mov
fisttpll
sahf
jne
mov
int
shl
notb
push
xchg
mov
dec
jb
pop
xchg
or
push
mov
pop
pushf
jmp
gs
xchg
cmp
rclb
stos
lods
xor
icebp
cli
test
jno
mov
popf
outsl
mov
mov
pop
xor
ficompl
xlat
jecxz
fisttps
leave
xor
push
or
inc
or
rcrb
and
adc
add
pusha
jle
mov
push
mov
aas
adc
inc
jp
data16
sbb
dec
xor
adc
inc
mov
loop
cwtl
movsb
sbb
or
adc
insb
mov
lods
ja
jecxz
jmp
ss
pusha
pop
mov
jbe
mov
aad
lahf
pop
stc
sub
xchg
fucom
iret
repnz
or
cld
mov
in
stc
pop
lods
mov
add
int
enter
mov
add
xlat
fldcw
lret
mov
imul
mov
sub
daa
clc
pusha
dec
jmp
lahf
mov
adc
insb
mov
sahf
fwait
pop
or
dec
cmp
push
or
lea
ds
fldcw
ja
jb
pop
lock
jo
sbb
js
aam
xchg
xchg
dec
orb
ret
cmp
ljmp
inc
jnp
sub
mov
in
test
add
mov
xor
ljmp
mov
rsqrtps
pop
adc
lret
and
adc
cmp
xchg
testl
dec
inc
pop
mov
aaa
fwait
hlt
dec
jg
mov
out
cmp
dec
pop
imul
push
sti
ja
sti
pop
xor
adc
bound
fcomp
cli
je
mov
mov
pop
in
dec
mov
sarl
xchg
inc
daa
mov
ret
dec
sub
pop
add
in
jmp
jmp
adc
icebp
sub
lods
rcr
ja,pn
jge
movsl
push
fidivrs
cmpsb
jp
shrl
je
sbb
vaddsd
loop
shr
or
xchg
or
cmp
aas
cmp
mov
int
adcb
jnp
mov
mov
mov
test
call
mov
xor
inc
xchg
ja
push
jbe
xor
pop
pop
cmp
pop
inc
out
imul
xor
pop
xor
dec
pop
mov
adc
jnp
popf
xlat
cltd
test
lcall
cmp
test
int
out
mov
lds
test
enter
sbb
pop
sub
mov
inc
ret
pop
cli
shlb
inc
shl
sti
and
shll
adc
xchg
nop
mov
rol
imul
adc
stos
adc
pop
leave
mov
cs
int3
pop
inc
ret
and
and
cli
adc
aam
push
or
pop
pop
adc
add
mov
test
and
mov
addr16
add
mov
int
fs
or
pop
cmp
movsl
xchg
icebp
adc
cmp
cld
push
cwtl
cmp
pop
cmpsb
popa
sti
dec
in
add
fdivrl
sbb
les
inc
jns
cmp
pop
scas
adc
repnz
xchg
test
add
xchg
sbb
jbe
xor
mov
stos
push
cvtpi2ps
nop
ss
std
aas
jae
sub
dec
mov
add
jo
mov
sbb
add
xchg
push
shl
testl
dec
icebp
arpl
das
pop
rol
adc
stc
jmp
xor
or
adc
inc
xor
cmp
sti
adc
sbb
test
inc
or
pop
test
test
pushf
dec
adc
cmp
sarb
lock
popl
cmp
imul
pop
mov
in
mov
inc
icebp
or
dec
sarb
ss
mov
in
mov
push
jne
sub
sub
xor
xchg
jns
xor
mov
aaa
in
shl
push
sub
test
int
imul
inc
jle
pop
out
lds
adc
out
xchg
xor
adc
fnsave
mov
add
popf
insb
pop
mov
pop
xchg
out
push
pushf
xchg
aas
jb
xchg
xchg
mov
lret
inc
cmp
scas
mov
dec
repnz
inc
imul
inc
jo
insb
jnp
and
data16
dec
je
lcall
cltd
in
fdivr
enter
lret
cmp
jg
xor
incl
fidivrl
xor
push
stos
lds
cmp
sub
movsb
daa
fstpt
scas
inc
out
aas
mov
dec
push
mov
pop
or
repnz
jp
xchg
mov
pusha
loopne
pop
mov
xor
mov
shrb
bswap
fucomi
jno
push
mov
scas
adc
and
call
je
shlb
cwtl
and
mov
fists
add
roll
call
dec
jns
dec
dec
xor
dec
sqrtps
or
test
jns
inc
mov
test
repnz
mov
jge
mov
nop
or
add
sub
idiv
rorb
jo
mov
mov
adc
or
push
lcall
inc
push
loop
vmwrite
xchg
pop
pop
mov
les
fidivl
mov
mov
fwait
cmpb
mov
push
popa
add
push
syscall
pop
pop
mov
jns
push
lret
notb
sub
out
neg
inc
imul
lods
fwait
jne
imul
iret
lret
add
notl
inc
les
push
inc
ja
push
add
xchg
xor
jne
sub
dec
insl
push
call
clc
fnstcw
and
or
push
ljmp
fneni(8087
movsl
in
ja
push
cmc
mov
inc
sahf
mull
fistl
cmp
std
sub
test
push
fistpl
addr16
enter
ret
test
xlat
movsl
jp
lods
adc
imul
cmp
pop
ffree
mov
mov
inc
call
adc
ret
in
ss
es
or
add
fwait
or
clc
push
loop
inc
jbe
popa
loope
imull
aam
cmp
xchg
push
outsl
mov
test
adc
leave
push
pop
addr16
dec
xchg
loope
iret
fxch
shr
xchg
fstpl
add
or
mov
pop
test
sti
mov
mov
cmpsb
xchg
fwait
dec
and
jl
arpl
mov
lods
sbb
xor
clc
clc
xor
adc
jp
jp
dec
and
dec
xchg
inc
push
les
icebp
pop
mov
mov
outsb
xor
test
das
dec
fists
and
insb
shlb
stc
pushf
inc
jno
mov
push
cmp
mov
rorl
sub
ret
fdivp
shrl
out
andb
push
lret
insb
test
sub
gs
push
mov
loop
inc
mov
add
push
test
shl
cmpsb
xlat
inc
push
sbb
cmp
xor
sub
lcall
push
inc
push
in
jp
jg
xchg
sub
push
mov
int3
test
cmpb
xchg
push
outsb
push
adc
adc
and
pushf
or
adc
jbe
lret
xchg
fwait
mov
add
repnz
movsb
popa
xor
bnd
pushf
push
fsubrp
inc
fsubs
xchg
push
cmp
jge
in
ret
int
mov
cltd
lahf
mov
mov
sub
pop
jno
add
sbb
scas
pop
ret
mov
iret
dec
mov
idivl
push
inc
mov
jmp
enter
inc
je
mov
lods
mov
stos
mov
inc
mov
mov
int3
jbe
adc
adc
pop
push
and
aam
scas
mov
sahf
xor
cltd
cltd
jnp
ret
fstp
pop
dec
add
pop
add
mov
mov
pop
push
jo
sbb
cmp
push
jno
xor
outsl
aas
xchg
xchg
add
push
inc
lock
add
cmpsl
inc
push
adc
pop
pop
hlt
pop
dec
hlt
xchg
cmp
mov
cmc
inc
scas
aad
inc
pop
sub
pop
scas
xchg
adc
loopne
lcall
and
add
inc
sbb
sbb
aaa
into
stos
pop
leave
jae
bound
lods
mov
mov
push
xor
aam
cmp
int
aaa
lock
sti
push
icebp
fstpt
xor
xchg
mov
adc
xor
push
mov
mov
inc
outsl
sub
std
inc
jecxz
dec
imul
rolb
movsl
int3
sarb
icebp
ret
hlt
mov
pop
lea
and
shr
orl
pop
xor
stc
in
jg
adc
hlt
leave
lcall
pop
addl
popf
pop
mov
mov
push
leave
fisubs
mov
add
mov
push
inc
outsb
mov
das
push
in
pop
and
sub
loope
mov
mov
out
xlat
and
mov
mov
jae
inc
sub
mov
dec
lods
mov
and
mov
jmp
xor
scas
insl
and
in
cmp
push
push
mov
mov
mov
je
loop
mov
adc
mov
xor
cs
sub
enter
or
sbb
repnz
sbb
hlt
lea
mov
push
sbbb
adc
fmul
mov
orb
les
xchg
or
mov
add
sti
decl
stos
push
in
xchg
loopne
inc
xor
sarl
jne
pushf
insb
adc
or
rcr
adc
cmc
or
xlat
push
outsl
mov
push
fwait
or
ret
movsb
or
or
sbb
lds
cltd
loope
icebp
aas
inc
das
shrl
xor
and
xor
es
iret
iret
stos
sbb
mov
mov
pop
sbbl
gs
inc
fcomps
dec
out
rcrl
push
lret
and
test
pop
adc
fsts
xchg
mov
scas
jge
xchg
cltd
pop
fstpl
je
inc
fsubl
mov
xchg
nop
rcr
jns
fwait
adc
into
pop
mov
jns
jl
push
sbb
jno
in
dec
inc
and
aas
mov
pop
paddd
orb
movsb
data16
sahf
jo
add
pop
rorb
mov
add
jns
scas
pusha
sub
inc
mov
popa
push
shrb
inc
imul
aad
fistl
cmpl
dec
push
xor
iret
fildl
mov
add
add
inc
sub
and
shrl
xchg
lahf
fwait
push
sbb
pop
jle
sub
fpatan
cmp
test
push
pop
ficoms
xchg
jae
cmpl
mov
and
mov
dec
aam
adc
jecxz
push
cmc
cli
inc
jl
or
nop
lock
jle
cmc
popf
and
scas
rolb
xchg
mov
insl
mov
sarl
mov
pop
int3
push
mov
inc
in
fst
push
sub
add
sub
int3
pop
fwait
iret
mov
mov
inc
ss
lds
out
into
xchg
daa
in
or
call
test
ja
sahf
push
daa
mov
and
jne
shll
pusha
or
jmp
in
decb
mov
repz
aaa
lds
es
mov
aaa
popa
mov
or
add
int3
mov
lods
int3
cs
mov
sbb
jl
out
adcb
and
lock
inc
and
jo
shlb
sbb
inc
cwtl
dec
mov
and
xor
lock
movsb
arpl
jl
cli
lods
sbb
jno
out
mov
mov
jmp
sbb
adc
shl
jb
dec
mov
call
inc
pushf
or
pushf
xor
adc
daa
je
sub
imul
test
mov
jmp
aad
ss
faddl
cmp
cmp
mov
fmull
insb
add
sub
dec
jmp
mov
test
mov
mov
push
mov
outsb
popa
push
adc
or
adc
ss
mov
ja
aas
js
rcr
imul
ds
cltd
sub
mov
push
aam
mov
inc
inc
fidivrs
add
mov
insl
int3
mov
or
sbb
xchg
es
mov
mov
lock
push
dec
dec
jge
cli
ret
xor
cmc
add
mov
ret
push
add
mov
scas
out
xchg
les
xorb
add
in
call
xor
and
out
shll
jno
dec
inc
add
cmc
push
mov
aaa
adc
jmp
mov
inc
sbb
and
dec
mov
stc
cmp
cmp
adc
and
mov
test
push
dec
mov
stc
pop
sub
movl
jb
icebp
jne
xchg
or
sub
inc
andl
nop
push
mov
jmp
or
pop
jb
addr16
shll
mov
daa
in
push
stc
std
call
jb
bound
add
mov
lea
cltd
insb
outsb
push
outsb
shrb
xchg
dec
in
aam
mov
jge
out
mov
cmpsb
sahf
jno
xor
jbe
cld
xchg
push
into
in
mov
movsl
push
je
cld
cs
jmp
adc
scas
add
scas
cs
sbb
jbe
in
cmc
and
pop
scas
jl
loop
test
mov
popf
stos
push
push
stc
dec
les
mull
sub
das
mov
jge
or
inc
push
lret
insl
push
pop
pop
pop
dec
addb
fcoms
or
push
loopne
xchg
test
das
adc
and
out
dec
xchg
cltd
or
sti
push
mov
mov
inc
lock
subb
fbstp
or
adcb
js
mov
adc
and
in
cmp
inc
xlat
add
or
aaa
push
inc
lret
push
and
mov
adc
lret
leave
movsl
in
lret
je
sub
dec
inc
stos
xchg
addb
inc
mov
movsb
xchg
addl
jne
adc
and
pop
pop
adc
rorb
push
repnz
push
lret
push
stc
mov
xchg
clc
mov
js
imul
jns
iret
jle
xor
and
mov
mov
mov
pop
xor
shl
negl
out
fimull
enter
cmpsb
sub
ret
jge
dec
add
mov
ficoml
and
xchg
mov
mov
scas
mov
xor
lret
pop
scas
xor
jns
pusha
push
hlt
inc
or
outsl
xchg
imul
sarb
jb
ret
jno
mov
xor
jg
add
ds
pop
jns
pop
sub
aas
call
add
cmp
adc
add
out
xchg
js
mov
inc
fcmovnbe
jle
bound
shlb
icebp
outsl
imul
rcll
push
or
and
int3
clc
out
adc
imul
lahf
cmp
ret
xor
pusha
insb
rcl
imul
js
dec
aas
in
mov
pop
mov
inc
mov
mov
and
inc
call
or
inc
gs
int3
pop
mov
cmp
push
shrb
cmp
ljmp
std
insl
cltd
adc
fs
popa
and
sbb
mov
pop
andb
fxtract
pop
xchg
mov
je
cltd
jns
fistl
cld
in
adc
arpl
pop
or
mov
jecxz
popf
incl
out
inc
repnz
xor
cs
mov
mov
mov
xor
push
loop
daa
or
test
ss
mov
pop
inc
pop
xor
int3
les
fwait
cwtl
and
test
lret
jnp
fcompl
pop
or
push
fnstcw
dec
ret
std
test
xor
inc
cmpsb
rclb
rorl
push
cmp
dec
lcall
jne
shlb
out
dec
xchg
adc
gs
fmuls
xchg
mov
shl
or
dec
dec
out
cltd
jno
adc
ficoml
mov
xor
push
stc
inc
push
mov
push
pop
xchg
aad
xchg
aam
sbb
push
out
mov
dec
mov
cwtl
test
repz
rclb
lcall
popa
push
mov
lods
mov
outsl
lret
mov
add
rclb
inc
or
pop
ds
push
mov
cmp
mov
sub
add
xchg
rclb
sahf
xor
pop
mov
add
pop
xchg
and
add
test
pop
ljmp
and
pop
cmp
and
jns
mov
adc
dec
rcll
inc
xor
mov
jl
int
push
jb
or
cmpl
scas
nop
xchg
push
jo
ja
iret
mov
je
dec
out
mov
pop
sbb
stos
cli
dec
outsb
rcrl
shlb
and
popa
inc
cmc
cmp
pop
sub
mov
mov
cmp
inc
mov
xor
inc
push
sub
jnp
mov
je
in
mov
mov
jg
jb
jge
mov
cmp
shlb
out
pop
cmp
sub
ja
sbb
push
push
iret
cmc
lahf
sub
dec
xor
into
dec
sub
cmp
jge
ljmp
movsb
cs
pop
xchg
xor
cmp
aas
int
imul
jne
stc
lods
repz
push
pusha
in
out
mov
mov
xor
cmp
cmp
mov
ja
adc
cmp
leave
fstpl
das
dec
in
dec
xlat
push
lods
testb
inc
arpl
lahf
cmp
sarb
pop
xchg
cmp
fisubrl
mov
push
mov
cmp
imul
aad
movsl
movsb
dec
cmpsb
in
lds
sub
fs
and
or
lahf
pop
jne
imul
out
add
add
popf
xchg
ret
shrl
push
jle
xchg
ljmp
ja
sbb
xchg
or
mov
jecxz
imul
xor
sub
dec
sbb
pop
ret
lea
fisubrs
ret
xchg
dec
repnz
outsl
pushf
xchg
cmp
sbb
or
mov
pop
add
inc
mov
fmuls
and
adc
iret
dec
mov
add
jbe
into
mov
pop
pop
mov
xor
fsubs
mov
shr
mov
outsb
leave
movsl
jmp
mov
cmp
cmpsb
shld
pop
fs
adc
cs
jb
push
push
mov
mov
mov
inc
inc
insb
cmc
in
addr16
jo
cs
inc
adc
jp
ror
mov
pop
lcall
add
aaa
in
add
lds
adcl
das
pop
fdivrl
repz
rorb
dec
movsl
add
mov
out
adc
pushf
loop
cmp
xchg
mov
push
mov
lods
jmp
jmp
lcall
testl
push
mov
cld
lret
aaa
rcrl
out
jbe
inc
imul
rcr
test
jb
cmp
push
or
cmpsb
cmp
pop
mov
xorl
pop
push
push
aad
ljmp
mov
jo
push
xchg
dec
xor
adc
leave
outsb
or
pop
pop
xor
out
int
lea
andl
mov
shll
adc
add
sbb
imul
or
mov
push
inc
cmp
add
jge
inc
dec
jge
in
sub
lods
das
or
ret
fsubrl
cwtl
sub
movsl
gs
nop
and
imul
jge
mov
cmp
std
ret
push
icebp
or
lea
int
fdivrl
pop
xor
xlat
ljmp
imul
jnp
fcoml
test
ret
mov
call
pop
loopne
roll
lea
xchg
mov
repnz
xor
inc
push
ja
fucomip
pop
aad
mov
lods
or
cs
add
jbe
xchg
stc
nop
sahf
xor
xchg
mov
lods
push
movsb
ja
mov
and
jne
lods
dec
rol
jp
jo
add
in
add
pop
inc
cmp
xchg
pop
popf
push
jb
mov
das
lods
add
dec
xor
ss
lods
inc
cltd
mov
adc
pop
xorl
xchg
fwait
sbb
or
fidivrs
imul
movsl
divl
mov
cmp
mov
ljmp
sarb
jne
outsb
mov
push
outsb
andl
rolb
lahf
fsts
sub
std
aam
mov
or
push
sub
or
mov
sti
fiadds
test
jne
pop
and
lods
in
mov
cmp
test
sub
cld
fsqrt
xchg
and
xor
mov
sahf
fs
mov
inc
jnp
push
pop
addr16
insb
mov
sub
dec
add
mov
fbstp
arpl
jnp
jo
mov
jnp
aaa
mov
jp
mov
and
stc
pop
arpl
daa
ss
insb
jbe
in
mov
fs
lods
mov
cs
mov
fs
daa
pop
adc
fdivs
rcrb
pop
or
sbb
out
je
jle
sbb
stc
add
stc
mov
mov
push
sahf
mov
mov
xor
jecxz
pop
rcll
adc
pop
sbb
inc
movsb
lods
jno
mov
sub
js
roll
sbb
jnp
dec
mov
inc
aad
push
ja
int
and
std
adc
jno
add
loope
jbe
jnp
js
mov
inc
arpl
loopne
add
pusha
sbb
xor
sbb
add
jb
movl
loop
mov
lods
aad
and
lock
mov
outsb
pop
mov
popa
jp
rorl
add
xor
pop
imul
fadds
add
lret
mov
adc
adc
mov
xor
cmpl
les
fsts
add
push
in
jle
movq
sbb
loop
cmp
or
push
fs
ds
test
fstps
bound
add
stc
add
fucom
jbe
cmp
lea
scas
loopne
mov
dec
cmpb
outsb
clc
fcomip
cmpsl
inc
divl
lods
mov
xor
and
xor
cwtl
jnp
outsl
les
aas
jbe
iret
and
pop
jno
mov
sub
iret
dec
jecxz
and
mov
sbbb
mov
insb
jo
imul
out
cmp
jecxz
and
loope
and
test
dec
test
lds
cmc
in
dec
fsubrp
mov
rclw
dec
xor
fidivrs
cmp
or
mov
nop
xor
aad
stos
into
adc
lock
cmp
inc
sub
insl
push
push
pop
jne
inc
jne
ret
lea
loop
out
push
jle
fldcw
push
jb
cmpsb
or
pop
mov
sub
aas
xor
pop
jns
pop
cs
outsb
push
in
ds
mov
ficoms
les
addr16
dec
dec
pop
loop
test
rcrb
inc
in
dec
fistpll
leave
fistpl
or
leave
loop
loop
loopne
push
fcmovu
clc
inc
push
pop
inc
imul
and
arpl
lock
shrl
xor
xor
rcr
mov
not
outsb
jne
lock
and
jno
shrb
or
jge
aad
push
and
fwait
jg
mov
and
adc
xchg
jo
mov
xchg
cmpsl
je
pop
imull
dec
js
testl
outsb
clc
out
mov
push
pushf
mov
dec
or
mov
pushf
pop
mov
or
lret
push
lods
mov
cmp
in
mov
fsubrs
and
mov
dec
or
inc
dec
aam
cmp
mov
out
push
pop
dec
insl
hlt
das
xchg
push
xor
pop
lods
scas
cmovnp
movsb
lret
add
xor
fisubs
and
mov
and
mov
cltd
sbb
insl
subl
mov
cmp
xchg
sub
pushf
mov
push
jl
popf
lea
add
mov
and
inc
xchg
cmc
and
sub
js
test
and
fnstsw
sahf
cmpsb
xchg
mov
sub
adc
mov
mov
out
jmp
cltd
mov
push
pop
arpl
jo
push
or
scas
and
test
repnz
das
mov
push
pop
jge
jae
test
lcall
push
mov
sbb
repz
je
pop
lds
loop
ss
outsb
push
jo
call
clc
xchg
cmpsl
add
daa
pop
lods
push
cmpsl
ja
in
lcall
roll
mov
pop
lret
xchg
lods
push
pop
cmp
inc
loope
aaa
adc
imul
sbb
scas
adc
stos
jbe
mov
mov
cwtl
packssdw
lods
push
repz
pop
sub
push
imul
jo
daa
in
xchg
dec
movsl
inc
jbe
movsb
imul
sbb
jmp
and
icebp
sbb
fwait
loop
mov
into
int
jp
or
dec
in
xchg
add
test
xchg
jbe
hlt
inc
mov
icebp
ja
push
mov
pop
add
mov
mov
lahf
iret
addr16
xchg
movsb
popl
pop
std
bound
mov
sub
hlt
mov
mov
enterw
xchg
cmp
cmp
xor
cmc
add
sub
xor
adc
push
fcmovnb
mov
xchg
jl
sub
test
ficoms
cmp
mov
jbe
mov
mov
pop
aad
pop
mov
push
or
lret
push
pushf
rcrl
mov
fldt
fdecstp
int
out
pop
lods
push
stos
not
into
pop
scas
jno
jb
sub
or
push
sub
mov
jge
fisubl
addr16
jle
lea
xchg
ret
adc
xchg
sub
stos
imul
adc
lret
test
in
lcall
mov
sub
push
test
insb
ret
mov
out
push
outsb
mov
push
aad
cmp
and
repz
mov
rcll
loop
xlat
std
jp
movd
sbb
roll
rcrb
or
cmp
pop
int
mov
push
test
pop
jnp
test
fbstp
pop
cli
cmp
pop
lret
insb
xchg
std
jns
pop
fs
dec
adc
cmp
sub
leave
lret
add
in
pop
jo
and
stos
mov
mov
ret
cld
xchg
sbb
mov
dec
loop
add
scas
xchg
or
in
aaa
shll
push
pop
mov
add
into
or
fnsave
in
in
jmp
sahf
jl
cmp
jle
mov
mov
es
mov
mov
mov
aaa
mov
fwait
cmp
fcmovnu
cmp
xor
or
xor
movsb
test
fstpl
sub
adc
jnp
mov
aad
popl
in
xor
dec
jne
lcall
cmc
loope
cmpsl
pop
fwait
rcrl
leave
jno
in
mov
cs
mov
cld
rcr
test
and
inc
and
mov
jb
subl
sbb
mov
push
imul
cmp
or
pmullw
sbb
xchg
and
pusha
icebp
aam
out
xorl
mov
add
push
push
add
test
cmc
jae
xchg
pop
mov
insl
mov
rclw
xor
stos
sbb
mov
fcoml
mov
sbb
mov
jle
sbb
xlat
push
inc
push
mov
ds
push
mov
in
and
ljmp
sbb
xchg
movsl
xchg
inc
mov
lahf
pop
adc
and
and
mov
dec
out
movsb
lcall
pop
mov
cs
stc
in
xchg
xchg
xchg
fwait
dec
and
repnz
sahf
and
mov
inc
ss
push
sub
int3
test
jnp
stos
test
jne
pop
roll
xor
xchg
xchg
fildl
shl
popa
idivl
xor
cmc
int
repnz
ljmp
jbe
cmpsb
aas
and
cmpsb
xchg
lcall
inc
fnstcw
mov
mov
outsl
sbb
sub
xchg
mov
sbb
imull
mov
pusha
ja
push
fcmovu
or
lret
pop
adc
add
clc
jle
inc
pusha
jnp
sub
shll
mov
sub
inc
orl
push
ret
xorb
push
pop
and
sbb
stos
dec
aam
xor
adc
int3
loope
aam
jnp
js
xor
xchg
or
cmp
scas
pop
adc
stc
and
mov
gs
or
int
lret
jnp
xor
adc
faddl
das
mov
inc
xchg
cmc
lcall
pop
mov
idivb
loopne
aad
dec
inc
pop
lahf
shrb
test
insb
inc
imul
rcl
cli
rclb
cli
push
stc
mov
push
xor
lods
mov
xor
adc
jne
int3
ret
outsl
mov
or
sub
push
cmpsb
mov
mov
jbe
stos
lock
xlat
xchg
idivl
mov
cld
pop
mov
imul
jl
or
xchg
mov
pop
jp
pop
leave
fbld
mov
mov
and
out
imul
xchg
adc
fnstenv
sbb
pop
repz
and
or
outsb
add
mov
add
mov
sbb
int
push
or
pop
mov
ds
stos
out
mov
clc
pop
lock
sti
pop
adc
ja
shl
add
in
jbe
test
sub
pop
jne
cmpsl
cmc
mov
mov
push
or
add
mov
push
lahf
sahf
push
mov
sbb
add
mov
fwait
and
mov
popf
jle
inc
fiadds
mov
push
jmp
pop
lods
imul
jle
cltd
mov
roll
es
lcall
adc
or
jl
xchg
jno
lcall
xor
bound
sbb
push
cmp
sahf
sub
xor
or
fwait
arpl
divl
imul
cli
cmp
pop
insb
push
push
roll
enter
push
inc
leave
push
fwait
pop
xchg
sub
movsb
cld
inc
addr16
mov
shlb
cmpsb
jns,pt
ficoms
push
mov
clc
fcmovnb
xchg
stos
and
sbb
mov
call
push
jg
les
and
lret
jge
dec
xorl
out
and
mov
nop
xchg
push
imulb
mov
test
ud0
popf
push
loopne
push
pop
mov
rcll
out
and
xchg
or
test
sub
test
rep
adc
aas
dec
cmp
outsl
sbb
out
mov
jmp
fwait
js
mov
add
lds
pop
add
stc
mov
ljmp
cmp
int3
push
mov
xchg
out
xchg
jne
das
pushf
jl
imul
push
inc
and
imul
and
mov
cmc
or
jb
push
cltd
rcr
shlb
test
fcmovnbe
popf
scas
xchg
mov
mov
mov
jmp
outsb
pushf
sbb
je
icebp
mov
xor
bound
add
lahf
jge
vsubps
loope
and
stc
xchg
xchg
fs
xchg
mov
les
mov
or
sub
in
and
xorb
pop
jb
bound
xor
inc
push
movsl
adc
stc
or
adc
dec
or
rcrl
sub
rorb
xchg
call
cmp
out
dec
adc
push
clc
xchg
inc
ret
add
push
adc
adc
rolb
rcl
sub
sbb
test
cmp
mov
lcall
push
leave
fwait
ss
rcrl
cld
cli
push
push
ficoml
mov
jns
lahf
xchg
or
xlat
out
das
push
sub
sti
addb
ret
mov
fldenv
rorl
imul
fidivrl
pop
mov
jo
cmp
dec
ss
mov
fisttpll
mov
xchg
in
mov
cs
mov
jl
js
out
xchg
pop
push
icebp
or
std
and
rol
orl
rcll
sub
cmp
xor
stos
fnstsw
mov
push
dec
bound
test
repnz
sbb
jno
cli
cmpb
in
xor
sahf
xor
pop
mov
dec
add
sub
movsl
orl
or
cmp
stos
xchg
out
enter
outsb
xor
inc
cwtl
xchg
add
push
loope
or
jmp
inc
movsb
cmp
mov
outsb
rolb
hlt
and
cmpsb
dec
aad
clc
mov
push
sbb
mov
push
sbb
xchg
hlt
into
cwtl
shrb
outsb
cltd
js
jo
cwtl
es
pop
or
call
sbb
int3
or
fs
fs
dec
pop
jmp
movsl
mov
sub
ret
xor
addr16
adc
sbb
xor
sub
xchg
icebp
mov
xchg
inc
pop
dec
jne
popf
popa
cwtl
jo
pop
imul
stos
mov
xor
push
out
add
mov
pop
ds
sub
inc
dec
mov
pop
fidivs
jbe
jmp
or
or
push
leave
add
cwtl
loope
sub
outsb
in
dec
push
das
outsb
dec
add
test
insl
and
and
adc
add
gs
aad
aam
repz
sub
add
inc
arpl
sbb
sbb
inc
iret
fldenv
mov
sub
jb
xchg
dec
jns
movsl
sub
mov
push
icebp
insb
daa
fistl
mov
bound
lret
ja
xchg
inc
inc
mov
es
ret
lods
mov
adc
pop
out
outsb
loopne
jl
push
mov
adc
mov
adc
mov
es
add
and
inc
mov
ret
lret
sbb
cmp
insl
push
outsb
rcll
cmc
lret
es
hlt
pushf
and
rolb
daa
mov
xchg
popf
and
push
cmp
xor
push
sub
mov
push
out
xchg
dec
fstpl
add
pusha
jbe
lcall
addr16
in
mov
loop
movsl
xchg
jle
pop
je
ss
mov
in
push
jecxz
ljmp
push
mov
cld
and
xchg
mov
cltd
js
inc
push
inc
mov
inc
fs
enter
jno
pop
sub
dec
pop
std
inc
push
sar
insl
inc
lea
sahf
sbb
mov
mov
clc
pop
add
inc
mov
cmp
aas
jb
inc
insl
mov
push
push
ret
pop
arpl
cmpsl
ret
in
add
faddl
push
adc
adc
mov
int
sub
faddl
and
push
mov
pop
inc
push
jno
outsl
fs
aam
inc
out
fwait
repz
dec
cmpsl
ror
fmuls
aad
sti
jmp
and
jno
imul
sub
test
adc
adc
mov
int3
cmp
jmp
test
cmp
cmp
aam
out
ret
lods
mov
hlt
jl
jmp
pop
roll
fnstcw
and
mov
pop
jp
aad
insl
jnp
push
mov
inc
adc
mov
je
negl
xor
icebp
cwtl
cmc
leave
icebp
or
int
cmpsb
xchg
jg
xor
loop
push
inc
push
iret
push
repnz
outsl
aam
ret
loop
add
or
stc
adc
jbe
adc
fs
test
inc
lods
shr
pop
cmp
or
add
es
in
iret
and
jne
int
sbb
mov
paddusb
or
fadd
push
leave
push
stc
pop
xchg
stc
push
sub
push
and
test
loope
mov
cmp
lahf
std
mov
call
stos
adc
mov
adc
scas
lea
loope
and
mov
jp
stos
sub
insl
inc
sub
xchg
ficoms
sti
arpl
mov
sbb
jmp
rol
lods
cmp
sub
adc
clc
dec
adc
scas
jp
xchg
inc
ret
mov
xlat
mov
lods
jmp
cld
mov
adc
daa
rcrl
dec
jno
in
sub
clc
shrb
jle
orb
stc
sbb
int
push
xor
xor
addl
fcomp
aaa
mov
movsb
test
gs
push
bound
push
mov
lea
pop
inc
cmpsl
in
out
sbb
pop
and
xchg
jb
test
sub
mov
mov
movsl
add
pop
push
sub
xchg
testl
pusha
ror
outsb
inc
out
popf
inc
ficompl
lret
jecxz
add
jl
and
sbb
bound
jecxz
cmc
mov
sbb
or
jnp
mov
jns
inc
dec
sbb
push
das
hlt
mov
cmp
mov
shll
lea
pop
out
lods
mov
mov
add
enter
loop
scas
and
clc
or
lods
mov
rcl
es
add
test
push
xor
dec
xor
jnp
scas
fidivrl
push
push
test
pop
addr16
rcr
lahf
jne
out
or
stos
mov
leave
test
outsb
lock
jle
dec
inc
icebp
pop
rcrl
inc
movsb
test
sti
dec
jp
scas
sti
pop
mov
jge
nop
push
fcoms
sub
movsl
pop
or
mov
pop
inc
mov
loopew
je
sarl
aam
arpl
mov
cmp
push
je
jno
mov
mov
movsb
or
and
or
adc
mov
or
xchg
scas
or
stos
repnz
iret
fists
dec
clc
mov
das
divl
or
mov
jne
push
shll
mov
into
push
pop
pop
adc
scas
mov
aad
push
pusha
mov
push
sub
movsb
dec
gs
loop
lods
cmpsb
fdivrl
adc
jne
inc
jns
lret
cwtl
lret
mov
adc
jae
cmp
insl
cmpsl
scas
iret
outsb
push
loopne
or
inc
dec
fistl
lods
mov
mov
sub
jle
shr
sub
std
cli
mov
int3
repnz
fcmovu
sub
cmp
lock
mov
and
push
loop
adc
mov
js
std
out
mov
mov
imul
dec
cmp
push
lret
enter
test
jbe
jmp
neg
add
pop
pop
dec
xchg
jne
mov
dec
pop
jl
mov
fstps
xchg
push
dec
push
pop
xchg
daa
xchg
aaa
xor
or
adc
sysexit
sbb
pop
out
in
cltd
xchg
inc
and
aam
lahf
outsb
mov
stos
sub
cwtl
sbbb
ror
cs
ret
pusha
sbb
push
add
push
and
test
and
adc
test
mov
inc
push
out
rcrb
pusha
push
arpl
pop
or
scas
or
jne
pushf
es
fisttpl
sub
pop
dec
inc
ljmp
pop
cmpsl
pop
test
rcll
out
adc
cmpb
jo
aad
les
add
dec
jl
loopne
jno
pop
lds
subb
scas
clc
and
stos
add
daa
clc
mov
jecxz
shll
adc
ja
or
dec
pop
pop
daa
cmp
push
pop
sarl
test
push
push
adc
jmp
push
cmp
div
daa
cmp
lods
call
imul
pop
out
mov
mov
dec
dec
mov
jbe
das
or
mov
mov
xor
mov
push
xor
xlat
xor
sub
jns
sbb
enter
inc
pop
sahf
cmp
push
lea
xchg
cmp
jmp
iret
pushf
test
das
cmpsb
mov
add
xor
lret
daa
cmc
sub
mov
lods
je
push
xchg
lcall
les
lock
out
pop
insl
cmp
dec
inc
xchg
out
pop
mov
inc
or
repnz
lods
mov
jae
pop
push
mov
mov
push
in
xor
xor
loop
sbb
cmc
lahf
ljmp
push
cmovge
lds
iret
outsb
pusha
mov
dec
push
addl
adc
cs
cmp
ret
into
and
xchg
int
test
pop
jle
add
test
ret
sub
adc
jnp
adc
pop
fdivrs
and
testl
mov
stc
popf
xchg
add
push
arpl
inc
ljmp
jno
adc
lret
sub
in
pop
sbb
ja
xlat
sti
stos
out
call
scas
xchg
mov
test
ret
ffreep
xchg
inc
shrb
out
std
adc
push
ljmp
stc
mov
mov
inc
inc
gs
lock
int3
sbbl
stos
push
push
sub
xchg
pop
mov
pop
sbb
nop
or
mov
imul
sarb
mov
mov
cld
icebp
dec
das
addl
aam
sub
mov
inc
mov
stc
addr16
sub
jne
cmp
or
mov
lods
inc
lahf
pop
insb
or
pop
es
cld
dec
cmp
cmpsb
scas
cmpsb
das
add
loopne
aaa
idiv
or
jnp
pop
shrb
shrb
pop
mov
mov
dec
or
xchg
jp
adc
out
out
nop
fstpt
les
mov
sti
into
lods
out
jg
or
ret
sbb
roll
pop
gs
std
cli
ja
dec
in
add
jecxz
repz
xor
insl
lea
cmp
divb
push
pop
pop
int
in
adcl
ljmp
cmp
mov
nop
in
lods
stos
jne
mov
sub
sub
jo
add
cmp
jecxz
nop
ds
aas
fidivs
adc
pop
fisttpl
and
inc
iret
bound
mov
mov
in
cmp
loop
push
ret
stc
pop
cmp
flds
mov
sti
fisubrs
repnz
push
mov
fmulp
fildl
jno
cmp
pop
test
arpl
lret
inc
jmp
shrl
addb
movsb
fstl
dec
add
adc
cmp
jne
and
insb
lcall
dec
push
dec
sbb
imul
xor
cmp
dec
mov
rorb
fcmovne
sbb
or
push
icebp
jl
mov
mov
sub
sub
and
pop
fldl
popa
cwtl
xor
mov
dec
and
div
test
jl
arpl
inc
sub
lock
inc
lcall
mov
mov
insb
mov
sbb
mov
lods
fists
lea
iret
dec
cmp
and
mov
lret
hlt
mov
icebp
xor
scas
jecxz
sbb
mov
aam
ss
or
es
add
inc
ss
loopne
rorl
mov
xor
mov
jmp
lods
adcb
scas
adcl
sarb
mov
cmp
xor
jb
js
in
scas
dec
cmp
mov
adcl
repz
jecxz
pop
jmp
ja
addr16
lds
and
clc
orl
inc
sub
mov
cmp
inc
into
je
mov
aaa
mov
aad
inc
and
sti
sub
jb
mov
xlat
int
xchg
adc
jge
pusha
movsb
jle
add
dec
sub
jo
cmpsl
xchg
cmp
sub
mov
movsb
loop
pop
pushf
inc
jmp
lds
and
imul
mov
xor
sar
xchg
xchg
test
iret
ja
std
sub
test
pop
clc
xchg
cld
or
adc
inc
arpl
mov
addr16
jb
xor
movsl
push
push
mov
pop
outsb
pop
sbb
das
pop
fs
repnz
sub
mov
leave
loope
icebp
mov
repnz
or
push
cmc
xor
int3
jle
fmuls
mov
mov
inc
repz
and
gs
adc
mov
cmp
fcoms
push
sbb
xchg
and
push
fcmovnb
cmp
xchg
je
std
aad
xchg
stc
sbb
subl
mull
dec
ret
in
xor
mov
and
xchg
inc
cmp
addb
sbb
push
stos
xchg
mov
movsb
insb
dec
jg
xorb
scas
test
sbb
jo
jle
lock
and
push
push
lds
js
outsb
xchg
addr16
mov
iret
addb
movsb
or
in
jl
das
push
sbbb
mov
andl
xor
out
mov
dec
jmp
scas
loopne
mov
adc
mov
push
xchg
cmp
add
sub
dec
dec
pop
call
xor
fisubl
fnstenv
repnz
shrl
out
lcall
jl
lret
mov
je
xor
push
loop
rcl
mov
and
ja
jmp
movsl
mov
cwtl
or
push
fsubrl
mov
shl
aaa
sar
push
stos
arpl
dec
or
xchg
repz
or
sbb
lock
dec
pop
int
xor
mov
pop
inc
add
mov
addr16
in
and
dec
adc
pop
fdivs
or
jg
push
pop
test
int3
outsb
inc
jg
shlb
fwait
or
enter
mov
jo
xlat
es
arpl
fs
outsl
jmp
iret
jg
clc
mov
jb
lds
adc
xchg
xor
adc
adc
xchg
xor
clc
out
in
lcall
dec
pop
test
push
cmc
stos
push
ljmp
or
loope
ja
inc
test
int
sbb
sahf
mov
je
pop
sbbl
subl
scas
or
xchg
scas
adc
testl
mov
in
cmc
and
in
mov
push
lcall
jecxz
and
test
lods
lcall
pop
ja
pop
xchg
xorb
jmp
or
movsb
ficompl
and
cmp
aam
xor
sarl
xchg
out
xor
out
ja
in
lea
sbb
sbb
dec
fmuls
jne
or
jle
jmp
lods
lcall
push
dec
adc
mov
mov
jp
data16
sahf
inc
test
jp
sarb
xchg
insl
mov
push
mov
mov
aad
inc
insb
sbb
mov
cs
mov
jp
xchg
pop
cmp
fs
lods
int
dec
adc
pop
sarb
push
out
cmp
inc
gs
jge
jp
stos
jg
js
inc
lcall
pop
mov
push
cmp
fildl
push
and
fistl
dec
dec
or
je
dec
sub
jecxz
push
xchg
pushf
sub
mov
mov
repz
cmp
push
int3
ret
lea
sbb
repz
mov
sub
pop
mov
lea
repnz
mov
push
loopne
outsl
pop
jbe
inc
mov
cwtl
xchg
ljmp
mov
lahf
aam
cmp
mov
mov
in
fcompl
pop
cmc
test
aam
xor
pop
fst
icebp
addr16
in
xor
mov
inc
sbb
rorl
in
sahf
cmpb
loopne
ret
jle
jge
sub
dec
xor
movsl
cmp
dec
mov
stos
mov
adc
mov
in
sub
mov
imul
les
loope
mov
xchg
xchg
hlt
jmp
add
das
ljmp
xchg
xchg
imul
inc
lock
enter
xchg
add
loop
mov
mov
mov
push
jo
mov
push
aad
or
and
mov
lods
cmp
cmpl
or
mov
mov
jne
movsl
jg
mulb
jle
jp
fcompl
dec
pusha
xor
movsb
aas
fwait
or
std
rol
je
xchg
xchg
mov
es
jmp
cwtl
sbb
je
add
add
inc
out
sub
sbb
iret
outsb
cmc
mov
dec
jle
insl
es
mov
pop
fisubl
sbbl
or
test
decb
inc
dec
cmp
push
loop
mov
push
push
push
push
mov
jb
xor
fists
popf
lret
sarb
dec
mov
mov
data16
clc
jmp
push
iret
sbb
mov
jg
push
jle
adc
sub
ja
mov
pop
xchg
jp
add
jp
arpl
rorb
add
pop
jno
movsl
adc
aam
pop
arpl
pop
cmc
or
rclb
push
out
dec
push
jmp
add
sbb
lods
cmpsb
hlt
in
xchg
cli
xor
aas
sbb
mov
adcb
rcrb
cmp
add
push
dec
insl
ja
sub
mov
cmp
jmp
mov
xchg
mov
xorl
push
inc
xchg
adc
xchg
push
jae
inc
pop
pop
push
pop
loopne
stc
and
in
stos
push
hlt
mov
daa
xchg
test
filds
fidivrs
loopne
ds
out
push
xor
sbb
sub
push
sbb
xor
loop
addb
in
iret
mov
jmp
xor
pop
inc
mov
out
jns
lcall
jbe
stos
int3
aas
negl
imul
push
pop
xchg
xchg
push
out
mov
sbb
and
lds
leave
es
mov
sarl
aad
test
push
call
dec
dec
sti
insl
es
mov
push
cld
mov
add
ret
ds
imul
and
pop
imul
subl
test
pop
and
ja
in
mov
aam
aas
mov
pop
xor
repz
movsb
sbb
pop
in
or
mov
adc
push
cmc
xlat
inc
lock
sti
xor
sbbb
add
jb
rcll
inc
add
hlt
jle
fadds
jg
fincstp
and
push
aad
enter
jmp
movsl
cmp
lret
mov
jecxz
inc
cmp
inc
xor
cmpsb
push
aam
rol
sbb
or
push
jmp
or
sbb
jno
sub
mov
mov
in
dec
adc
pop
xchg
scas
xor
out
mov
inc
test
dec
sub
shll
jge
dec
dec
and
push
dec
lcall
cmp
shr
dec
insl
outsb
cmp
in
dec
lahf
xchg
imull
fistl
test
jmp
pop
repnz
nop
out
adc
jbe
jae
popa
fisttpll
inc
mov
pop
cmp
push
xor
cs
jnp
sbb
dec
sub
xor
inc
in
loop
loope
add
insl
jmp
adc
cs
pop
jp
stos
dec
or
js
cs
es
cmp
jns
iret
aas
dec
inc
mov
xor
outsb
cli
mov
mov
and
fistpl
insl
lahf
and
push
push
cmp
push
and
fnstcw
mov
pop
mov
or
mov
jnp
icebp
mov
or
pop
cmp
sbb
dec
sub
aas
xchg
addb
notb
mov
pop
jno
in
add
mov
fwait
aaa
cmp
shr
lods
pusha
outsl
lea
nop
es
cmpsb
fidivrl
push
aad
ds
das
daa
adc
xchg
sbb
fmull
mov
push
sbb
adc
rorl
iret
sub
cs
mov
pusha
xor
xchg
jnp
xor
popa
fldl
shrb
push
mov
jne
data16
add
in
adc
fs
mov
jno
jg
jmp
push
mov
jg
repnz
leave
iret
jmp
mov
lret
fs
sbb
in
fisttps
and
add
test
sub
aam
sbb
movsl
push
lea
repnz
shr
test
adc
fcmovb
insl
adc
loope
fsubrp
loope
xchg
out
rorb
out
xor
pop
je
add
cwtl
jmp
pop
mov
dec
pmulhw
pop
idivl
push
insl
test
popa
mov
fs
and
popf
in
push
inc
cmpxchg
jno
js
cmp
ljmp
dec
imul
sub
jmp
ljmp
pop
out
and
in
mov
shlb
mov
add
push
push
sub
arpl
lcall
push
and
mov
std
xlat
sub
loop
lret
fsubs
push
mov
push
pop
inc
pop
jl
xor
push
daa
xlat
sbb
jg
cvtps2pd
dec
mov
mov
out
xor
daa
insb
lea
xchg
adc
add
xchg
mov
outsl
outsl
jl
std
jbe
pop
in
dec
push
outsb
lcall
imul
push
es
or
cld
je
arpl
or
xorl
jae
scas
xor
cmp
sub
dec
push
mov
xlat
mov
imul
push
fsubrs
sub
or
mov
jo
pop
aad
mov
es
lret
xor
sbb
cmp
cs
xchg
bound
inc
pop
push
sub
add
cltd
lret
jmpw
adc
pop
gs
hlt
sti
dec
imul
mov
andl
add
ss
jmp
sbb
test
add
mov
xchg
lds
or
dec
mov
int
pop
xchg
jg
icebp
shl
pop
popa
hlt
cmpsl
aad
and
jo
fincstp
fnsave
jl
jmp
xor
mov
and
ret
adc
cld
or
fdivl
in
nop
insl
push
ja
inc
mov
mov
enter
rorb
xor
pop
or
mov
pop
inc
jno
fcompl
fwait
push
shr
stc
adc
mov
and
mov
jp
imul
sbb
lret
dec
dec
aaa
inc
das
xor
pop
ljmp
or
movups
fimull
jle
xchg
cli
inc
pop
cli
mov
jmp
mov
push
popa
pop
cmp
mov
sbb
or
cs
popa
mov
aam
bound
ret
cmp
fcomps
out
mov
or
out
cmc
xchg
cmpsl
sub
xchg
xchg
inc
and
pop
sbb
in
xchg
jge
inc
lock
pop
mov
ss
xor
rorb
sbb
je
dec
imulb
addl
mul
lds
jo
cmpsb
aaa
mov
xchg
pop
push
scas
leave
xor
data16
mov
xor
mov
mov
inc
movsl
bound
movsl
loop
mov
jle
dec
mov
and
aas
scas
inc
hlt
push
xor
sub
mov
test
mov
sbb
out
mov
ljmp
jp
in
movsb
mov
inc
and
fidivl
cmp
cli
jmp
jg
int
or
dec
xchg
bound
pop
inc
rclb
dec
lea
adc
push
ret
cmp
jb
leave
in
pop
ljmp
outsb
testb
sbb
scas
mov
or
fnstsw
jae
call
faddl
je
cmp
lods
mov
lret
xor
sbb
inc
or
sub
lods
jae
and
xor
pop
subb
test
xchg
inc
xor
push
je
adc
insl
mov
mov
xchg
shl
cli
js
lcall
push
mov
out
jl
sub
or
imul
sar
add
orl
cmp
test
pop
add
out
jmp
imul
enter
push
xorb
out
add
jle
mov
inc
test
and
push
cmp
clc
fdecstp
jne
xchg
inc
push
cli
jns
add
iret
lock
aaa
push
mov
out
fcmovb
cmp
xchg
lret
jmp
xchg
ret
inc
ret
xchg
xchg
xor
icebp
jg
dec
movb
lea
bound
mov
pop
inc
outsb
imul
ret
push
pushl
adc
arpl
stc
push
mov
std
idivb
adc
and
es
dec
test
inc
add
push
and
icebp
ret
cmpsb
lock
sub
cmpsl
and
in
add
mov
push
xor
das
pop
dec
inc
lods
test
div
cli
and
call
and
and
dec
pop
dec
adc
pop
icebp
cwtl
pslld
jns
test
iret
mov
mov
aam
inc
mov
pop
int3
xor
lret
out
jl
push
mov
arpl
fbstp
jmp
and
jbe
sub
jl
mov
cmp
mov
push
pop
ljmp
jno
test
xor
inc
cmp
rclb
sub
clc
cmp
add
jecxz
fidivrl
test
xlat
mov
xor
xchg
inc
jp
xorl
sbb
ficoml
add
xlat
in
loop
sub
in
xor
push
fcomps
pop
add
pop
push
mov
out
mov
pop
orb
scas
jl
in
ja
sub
and
scas
pop
les
inc
mov
xchg
addl
sbb
dec
pushf
shr
mov
out
jge
enter
ljmp
ficompl
lcall
out
and
cmp
pop
sbb
std
mov
mov
jne
test
cmc
cli
nop
cmp
lret
clc
pusha
cli
mov
lret
imul
pop
jle
inc
out
xchg
mov
aaa
push
xchg
add
fidivl
pop
push
xor
into
xchg
dec
into
mov
xor
jno
cmpsl
into
mov
in
xchg
inc
cmovge
cmpsl
add
or
ja
out
les
jmp
mov
push
in
popf
jb
arpl
out
lcall
jne
pop
pop
and
dec
insb
jge
push
xchg
arpl
cltd
or
mov
pop
es
jmp
lods
sbb
imul
dec
push
pop
pop
fcmovnbe
jns
divb
xorb
mov
mov
and
imul
mov
xor
lds
lret
jae
xchg
scas
mov
fistpll
push
mov
jbe
fistpl
testb
xchg
test
cmp
iret
enter
and
pop
push
test
rcl
movsl
or
ss
jmp
insb
ficoms
decb
cmp
dec
cmpsl
dec
pop
mov
sti
test
test
mov
cld
add
mov
divl
sbb
lock
fstpl
jmp
push
mov
cmpsl
loop
fs
jge
xchg
adc
jle
es
arpl
xchg
mov
jno
sub
cmp
push
jge
jnp
dec
test
adc
xchg
faddl
mov
leave
pop
aaa
and
mov
jo
sub
repnz
aas
add
pop
test
js
rorl
xor
outsl
lret
je
jg
clc
in
dec
and
mov
pop
push
sub
loope
pop
insb
sbb
cmp
jnp
fcoml
cmp
popf
jae
pushf
xlat
dec
repz
sub
mov
pop
or
ja
ja
adc
and
jno
push
ljmp
xor
pop
ret
push
pop
push
push
lea
enter
stc
pusha
cmp
jb
sti
cmp
mov
adc
or
mov
lea
ja
inc
jp
mov
hlt
je
popa
fcmovne
dec
repnz
test
cmpsl
sub
mov
add
cld
mov
add
xor
mov
pop
adc
or
mov
iret
dec
xchg
lret
aam
jmp
and
addr16
bound
mov
insb
les
add
test
cmp
enter
adc
test
cmp
je
outsl
stc
arpl
rcrb
fisubrs
insb
shrl
enter
outsl
in
in
push
mov
inc
cli
mov
cmp
sbb
inc
dec
jns
and
mov
clc
and
mov
sub
sbb
stos
xchg
lods
adc
ja
inc
lret
cmp
adc
stc
sbb
cmp
xchg
leave
push
pop
insl
nop
adc
icebp
mov
in
outsl
insb
aad
ljmp
and
and
cmp
in
lret
lret
pusha
pushf
clc
mov
jg
xchg
lret
xchg
pop
orl
jmp
jb
aaa
add
es
repz
push
and
inc
add
pop
sub
insl
dec
stc
je
xor
es
shlb
jmp
ljmp
xor
popl
cld
mov
sbb
jb
arpl
push
jmp
jne
test
gs
sbb
lods
mov
or
xor
xchg
dec
popf
pushf
and
dec
cwtl
mov
rol
cwtl
xchg
out
add
ds
repz
jnp
xchg
sub
push
repz
scas
and
les
out
out
fistps
push
enter
jmp
add
lock
push
fwait
aam
call
dec
mov
dec
xchg
mov
icebp
fmul
out
sbb
or
pop
mov
mov
repnz
scas
psraw
add
sti
inc
dec
cmp
jnp
out
pop
or
add
push
loopne
aam
test
or
scas
and
add
push
pop
xchg
out
adc
dec
mov
cs
adc
pop
jnp
adc
subl
add
data16
add
xorb
fisubrl
push
jmp
outsb
xchg
outsl
inc
sbb
in
xchg
cmpsb
das
imul
cmp
cmp
fildl
pop
dec
pushf
lea
add
or
mov
test
cmp
xchg
out
mov
test
neg
dec
sbb
enter
clc
xchg
and
mov
in
dec
mov
js
pop
inc
jmp
leave
add
imul
subb
xchg
mov
mov
lcall
movsb
insl
add
cli
js
pop
test
addr16
in
push
jae
cmp
mov
push
mov
std
and
je
mov
mov
xchg
daa
sub
stos
fistps
add
shll
pop
add
add
fsubrs
mov
pushf
jno
aas
jle
scas
adc
push
push
jl
lcall
mov
ror
mov
mov
sti
dec
in
jno
aam
sbb
rcll
out
lret
mov
push
mov
sub
or
cmp
sub
mov
mov
xchg
int3
hlt
outsw
xchg
js
test
inc
adc
dec
and
ljmp
and
jbe
push
pop
add
or
adc
lret
mov
das
mov
roll
std
icebp
lret
stc
add
fidivl
enter
movsl
pusha
jmp
mov
cmp
push
scas
mov
adc
adc
nop
or
sti
shll
add
xlat
pop
insb
sahf
sbb
xchg
and
gs
das
loop
adc
mov
or
pusha
pop
stc
pop
and
or
ja
mov
inc
movsb
jl
je
clc
push
or
cld
xchg
sub
mov
sahf
adc
push
scas
cmpsl
sub
pop
and
pop
std
les
sbb
inc
jns
jmp
mov
adc
shll
add
mul
punpcklwd
dec
pop
xchg
push
arpl
cmpsl
cs
iret
icebp
sar
sub
mov
in
je
aas
add
int3
ffree
mov
mov
stos
inc
lcall
mov
sub
xchg
dec
inc
xor
bound
out
cmpsb
xchg
add
pop
adc
nop
or
shlb
sbb
sti
cld
sbb
sub
out
dec
test
push
stos
cmpsb
add
or
push
mov
test
out
mov
ja
mov
outsl
and
cli
aad
out
mov
popf
cwtl
loop
xchg
inc
popa
insl
push
iret
or
leave
xor
lcall
mov
clc
or
in
dec
cmpsl
cmp
sbb
data16
pop
dec
push
fsubrl
xchg
dec
dec
adc
mov
sahf
into
dec
loopne
sub
test
cmpsb
fsubs
jg
cmpsb
dec
int3
push
mov
dec
inc
shrl
ds
lods
cltd
jle
and
nop
ja
lret
jg
mov
ds
outsl
push
insl
into
sbb
or
adc
mov
adc
or
sub
xchg
aas
aad
aaa
mov
sub
dec
dec
insl
lcall
adc
sahf
push
sahf
pop
ss
push
insb
mov
in
das
push
inc
sbb
add
dec
int
xchg
test
mov
xchg
xor
dec
outsb
jo
or
inc
cmp
daa
push
pushf
bound
xor
mov
jne
push
add
cld
inc
lods
orb
sarb
lods
adcb
enter
stos
enter
xchg
inc
cmc
push
leave
scas
jns
pop
xchg
push
jp
pop
adc
imulb
in
adc
fadds
mov
rclb
push
sub
cmp
outsl
minps
lock
mov
addr16
pop
mov
aas
mov
add
movsb
xlat
mov
and
xchg
daa
and
das
mov
and
aaa
mov
mov
mov
xorl
nop
sub
pop
mov
push
inc
mov
cmp
call
in
imul
push
inc
pop
xchg
ja
jecxz
popa
cwtl
sbb
sub
add
lret
fxtract
push
jbe
jb
lret
xchg
sarb
testl
pusha
jae
mov
mov
enter
movups
popa
xor
je
push
cltd
mov
shl
clc
rcr
lds
xor
fstp
shlb
loopne
and
mov
into
dec
mov
sti
xchg
xchg
mov
jg
jns
arpl
adc
mov
push
mov
lahf
cmp
mov
cld
push
rcrl
pop
pop
push
adcl
dec
popf
push
test
inc
shrb
pushf
or
iret
popf
and
push
xor
cmp
mov
cmp
jb
push
or
cmp
out
mov
mov
lret
sbb
sub
movsl
mov
dec
popa
xchg
add
js
rcrl
ret
jno
jecxz
add
pushl
mov
bound
lods
call
or
cmpsb
add
shlb
xor
adc
scas
sbb
mov
inc
lahf
in
xor
ret
inc
out
mov
push
cmp
sbb
fwait
gs
pop
jge
mov
cld
jne
cmp
ficomps
inc
fwait
subl
mov
dec
dec
lret
pop
repnz
mov
adc
leave
adcl
lock
push
mov
fistl
cmpsl
cmp
lret
into
or
mov
fdivl
movsl
pop
xor
pop
cmp
notl
shrl
sar
or
lds
mov
out
adc
loopne
adc
leave
or
sbb
jge,pn
mov
rcrl
jp
push
mov
ret
jnp
cmp
push
dec
pop
or
imul
sub
jle
jmp
xchg
and
or
cmc
adc
fnstsw
jecxz
xchg
enter
int
lahf
fbld
int
cmp
es
push
fldt
cmp
jb
bswap
loopne
push
outsb
push
sbb
fiadds
fdivrl
repnz
cs
stos
shl
scas
pop
mov
in
hlt
pop
in
push
inc
repnz
loope
test
sahf
xor
mov
cmp
iret
add
adc
jbe
push
push
cmpsl
imul
jl
xor
repnz
lea
out
xchg
cmp
lods
xor
out
push
adc
add
add
sti
iret
data16
daa
mov
pop
push
dec
mull
sub
mov
lcall
out
sbb
fisubrs
fcoms
jecxz
cltd
xor
push
shll
mov
in
call
ljmp
arpl
xor
mov
cwtl
dec
nop
adc
pusha
lods
cmp
inc
mov
jle
xchg
rolb
or
dec
int3
pop
sub
les
sti
push
cmpsl
cli
add
into
ficoms
push
rcrb
push
cmp
test
push
inc
iret
push
sarb
xor
fstps
outsb
mov
jo
push
and
rcll
mov
ss
inc
jmp
sub
cmp
xchg
call
cwtl
stc
loope
movsb
mov
inc
negl
inc
lods
je
mov
cmp
xchg
jnp
hlt
sbb
cmp
movsl
jmp
fwait
in
fwait
sti
out
movsl
xchg
aam
rcll
fisttps
cmp
loope
xchg
jmp
cmp
dec
dec
add
cmpsb
fs
push
in
lds
cmp
sbb
xchg
adc
mov
mov
add
out
push
xchg
fcmovnb
insl
add
stos
pop
mov
les
jge
add
or
in
js
out
mov
push
push
push
mov
jbe
lea
popa
dec
adc
sbb
sub
xor
in
mov
or
push
dec
xchg
mov
xchg
push
ret
nop
jmp
push
mov
fistpl
jmp
in
loope
aam
loope
ret
mov
mov
push
lods
push
fldenv
push
stos
cli
pop
out
add
pop
dec
push
pop
je
xchg
call
cli
aad
in
mov
popa
and
sub
push
mov
jo
and
jle
and
and
out
lock
fdivs
push
cmpsl
mov
jns
sbb
inc
es
ficompl
adc
mov
imul
sarb
and
jle
mov
aam
xchg
xchg
lcall
in
data16
insb
jg
roll
ja
dec
add
mov
hlt
xor
inc
andl
fwait
ret
mov
cltd
adc
das
inc
hlt
fidivl
add
push
jbe
adc
mov
fmull
test
mov
mov
xlat
pop
sti
cmp
jecxz
iret
adc
loop
jnp
movsb
scas
popf
xchg
mov
leave
dec
int
ret
dec
inc
repnz
test
dec
ja
bound
ljmp
inc
dec
aam
mov
or
scas
cmpsl
mov
xor
push
shrl
jno
sbb
insl
xor
dec
fiadds
or
clc
or
adc
add
jl
mov
jns
xor
cmp
imul
and
pop
divb
jp
int
push
js
test
je
ljmp
or
jo
lret
out
mov
ljmp
test
loopne
out
dec
adc
mov
fidivrl
xor
adcb
jecxz
daa
scas
and
popf
pusha
insb
adc
adc
rolb
addr16
mov
js
sub
cld
fidivl
int
int
aaa
pop
ljmp
inc
cmpsl
in
pop
pusha
sahf
sub
sub
sub
fwait
pop
inc
mov
cld
cltd
das
mov
lret
shlb
sub
sbb
fstps
and
lock
xchg
jo
xorl
mull
out
faddl
popa
and
pop
push
xorb
fsubl
clc
dec
ja
ret
push
mov
mov
inc
xor
scas
sub
xchg
mov
xlat
adc
mul
iret
clc
jns
xor
ret
movsb
stos
adc
sub
in
lahf
or
mov
aad
adc
in
scas
test
jns
lret
push
add
test
test
jg
push
adc
imulb
xlat
push
loop
lods
out
sbbb
std
xchg
mov
test
jo
sub
xchg
into
sbb
insl
mov
loope
sub
sbb
std
fiadds
mov
ds
and
mov
cwtl
sub
popf
mov
mov
fsubs
jbe
sbb
adc
jb
pop
lahf
dec
cwtl
lods
xlat
and
insl
std
or
stc
loopne
jecxz,pn
mov
js
mov
cld
repnz
mov
cmp
mov
call
mov
jnp
push
cmp
notl
and
jmp
add
inc
call
or
cli
add
add
add
rorb
pushf
and
xor
dec
inc
dec
scas
jge
sbb
fsubp
mov
fwait
sti
imull
push
and
dec
add
sub
pushf
and
dec
je
push
das
test
test
es
fists
jb
lahf
xchg
mov
mov
enter
int
shr
add
add
dec
xchg
pop
cltd
mov
roll
inc
add
movsl
shll
dec
int
mov
movlps
and
sub
outsb
pop
jmp
stos
dec
adc
jo
les
rol
xchg
inc
sbb
mov
push
fwait
xlat
in
xchg
fadds
enter
cmovno
xchg
mov
loope
xchg
pop
incl
out
jne
ss
push
xchg
stc
gs
movsl
jnp
mov
mov
lret
pop
outsb
movsb
leave
dec
or
add
ljmp
fsubr
stos
or
cltd
in
fimuls
pop
stc
mov
std
dec
add
mov
xor
cltd
push
xlat
jne
adc
loope
cmp
es
dec
stos
dec
loop
dec
mov
mov
scas
sti
and
mov
adc
je
fwait
and
sub
out
aaa
ret
scas
shrl
aaa
cmp
mov
mov
ficomps
or
push
push
mov
fisubs
and
shll
mov
mov
jmp
mov
shrl
push
push
xchg
lock
push
push
mov
xlat
push
shrl
pop
push
xchg
xchg
lds
ret
xor
jno
add
mov
repz
mov
mov
nop
popf
mov
outsb
shrl
ja
stos
jnp
xor
push
insb
xor
cmp
lock
xchg
jl
push
fwait
jg
mov
fsubs
push
pusha
xchg
ljmp
out
inc
dec
mov
xchg
mov
icebp
nop
int3
leave
nop
cld
shl
daa
xor
jge
dec
mov
jecxz
in
rcrb
in
pop
nop
std
mov
insb
sub
sub
popa
adc
popf
dec
fs
fsubrs
mov
in
and
leave
into
mov
mov
add
pop
jno
or
pop
sarl
xchg
jo
jg
add
es
ljmp
lods
ss
mov
and
push
roll
add
add
in
lock
loope
es
es
pop
into
mov
repnz
push
or
jns
jae
add
lock
fsqrt
mov
mull
dec
pop
inc
lret
xchg
rcrl
pop
jbe
loopne
mov
inc
sbb
and
mov
inc
push
icebp
outsl
js
div
insl
sbb
gs
mov
fadds
pop
data16
xchg
jle
dec
jg
push
rcrl
jg
sbb
cmp
in
shlb
push
jmp
int
movsb
adc
adc
loopne
dec
jno
clc
es
in
pop
jo
jb
clc
jge
mov
pusha
data16
cmpsb
or
mov
movsl
stos
decl
test
cmc
mov
push
movsb
mov
test
fwait
cli
aas
pop
negb
in
push
sti
leave
es
aad
les
and
adc
call
mov
test
clc
daa
jg
int
dec
jbe
mov
mov
shll
jmp
bound
mov
ds
cld
dec
and
int
mov
in
cmp
imul
add
and
cmp
in
jb
inc
mov
jae
jns
pop
call
adc
dec
in
pop
icebp
out
or
mov
stos
loope
les
push
call
xor
cmp
mov
insl
incl
es
push
lds
adc
xchg
jns
stos
dec
sbbb
and
test
out
outsb
jae
and
mov
cmpsl
lcall
adc
mov
enter
pop
jle
ljmp
jp
inc
jg
and
call
les
scas
cmpsl
outsb
jno
jne
cwtl
ljmp
sub
sahf
ss
inc
push
roll
in
ljmp
mov
pushf
lret
in
outsb
gs
int3
cmp
int3
xchg
out
mov
shlb
jnp
sbb
cli
lock
mov
push
pop
ss
pop
ds
lds
daa
sti
fiaddl
pop
lock
ret
repnz
lea
mov
pop
mov
xchg
es
hlt
jno
mov
in
cmp
cli
cmp
psubsb
outsl
leave
push
sbb
pop
clc
pop
ret
mov
adc
imul
data16
and
out
pop
mov
enter
mov
stc
jge
fwait
inc
shrl
icebp
or
mov
mov
or
and
ja
jae
dec
fidivl
iret
repz
aas
test
jecxz
push
mov
test
mov
xchg
shlb
xchg
int
dec
cltd
fwait
adc
mov
xor
cmp
xchg
xor
mov
mov
push
cmp
pop
mov
imul
mov
add
pop
mov
gs
xor
lret
test
jno
lds
pop
jno
pushw
mov
repnz
insb
xor
aas
jne
mov
inc
add
or
ficoml
add
sub
mov
cmp
jns
insb
stos
leave
iret
repz
outsb
jge
jecxz
pop
out
hlt
xor
push
stos
je
adc
loop
jae
sub
aas
pop
daa
sahf
dec
imul
mov
and
mov
out
xchg
inc
xchg
icebp
mov
loopne
jne
and
shrl
stos
push
dec
decb
inc
stos
lods
dec
addr16
push
xor
lcall
enter
sbb
ljmp
mov
mov
adc
daa
sbb
sbb
cmp
inc
int
in
jnp
test
nop
gs
iret
jbe
add
add
inc
divb
insb
pop
bound
lret
adc
imul
push
push
fbld
mov
jae
shlb
xchg
js
mov
fcmovbe
repnz
cmp
insl
dec
push
mov
cmp
jp
dec
in
jp
xchg
stc
xchg
cltd
cld
inc
inc
mov
mov
jmp
pop
mov
mov
pusha
fidivrs
fsubs
cmp
int
bound
inc
mov
int3
mov
ss
mov
aam
adc
add
sbb
add
in
ret
cmp
loop
push
xchg
cmp
ljmp
pop
cmp
sbb
push
mov
scas
mov
sub
lcall
jnp
pop
enter
insl
jmp
das
rorb
imul
mov
sbb
pop
sub
fdivrs
mov
add
add
into
arpl
adc
sbb
stos
clc
inc
and
push
or
outsl
cmp
leave
outsl
cmp
cld
addr16
push
data16
out
hlt
test
aas
lret
push
jg
test
cmp
pop
movsl
or
push
inc
pop
jecxz
cmp
into
jle
mov
lret
or
clc
lds
movsl
dec
adc
pushw
lret
jne
lea
popf
dec
dec
je
fs
ljmp
jb
push
sbb
sbb
popf
cmp
push
xor
push
leave
ret
jne
or
lea
imul
mov
addb
jp
gs
lds
jo
cwtl
loopne
dec
jl
jne
repz
decb
jle
scas
mov
imul
movsb
sbb
inc
push
pop
xor
mov
pop
push
cmpsl
insl
xlat
in
and
inc
movsb
adc
sbb
fstp
lcall
mov
in
mov
outsl
xchg
xchg
xor
daa
outsl
ljmp
cli
or
imul
xchg
and
and
fimull
aad
xor
aam
lods
mov
push
pushf
lods
or
jb
shr
sub
pop
loopne
mov
push
jp
mov
inc
ficompl
test
dec
mov
pusha
out
out
ss
pop
adc
pop
push
mov
add
arpl
mov
sub
xor
pop
jecxz
sbb
push
in
and
popf
xchg
es
imul
cld
movsl
sbb
add
jp
xchg
ja
adc
out
inc
cltd
insl
neg
iret
pop
cmp
int3
and
shl
mov
mov
lahf
and
mov
insb
ds
cmc
mov
jge
sub
push
insl
sbb
xchg
push
sub
sub
sbb
add
insl
ja
jge
je
and
fdivrs
jns
and
pop
push
inc
lea
inc
sarb
xor
lret
lahf
into
xchg
inc
enter
or
test
sti
outsb
icebp
loope
pop
adc
or
dec
sub
xlat
stc
shrb
mov
push
lea
stos
push
scas
sar
jns
popa
test
test
out
ficomps
adc
and
or
scas
je
pop
pop
push
cmp
inc
add
iret
cld
shll
ret
std
adc
loope
imul
mov
cmp
mov
mov
dec
add
pop
repz
mov
pop
cmp
repnz
pop
rcrl
loop
movsb
or
jle
fsubr
leave
mov
xchg
sbb
mov
push
cmc
neg
pusha
push
vmovups
repz
xchg
dec
adc
addl
lahf
or
lds
mov
jmp
xchg
xchg
ljmp
cmp
mov
lods
jno
add
aad
pop
push
insb
lahf
sub
daa
lahf
scas
icebp
sbb
jp
mov
stos
adc
sbb
fpatan
in
push
inc
jle
pop
out
mov
aas
jmp
arpl
hlt
lods
mov
xchg
jl
adc
mov
fwait
jle
sbb
adc
jle
add
sti
insb
jge
xchg
mov
fnstenv
outsl
popf
gs
jne
pop
jns
fiadds
fwait
mov
push
test
outsb
inc
ljmp
pop
loop
std
fcompl
lret
add
shlb
je
sub
pushf
add
daa
push
cmp
jb
jle
add
add
cmp
and
inc
subl
mov
jmp
xor
jo
xor
or
imul
inc
or
adc
rol
xor
rcll
es
idivb
dec
fs
lcall
fcmovne
sub
int3
dec
push
mov
pop
ds
push
cmpsb
and
push
outsl
cltd
pop
pusha
jle
xchg
push
fs
cmp
or
test
lcall
dec
cmpsl
xchg
mov
fs
rclb
fildl
xor
jecxz
rcrl
rclb
pop
lret
cmp
pusha
cmpsb
pop
cmpsb
pushf
aas
testb
insl
xor
mov
cmc
lea
adc
std
lea
imul
notb
cmp
jp
mov
dec
les
xchg
leave
out
pop
pop
les
das
xchg
pop
xchg
insb
icebp
mov
testb
inc
pop
inc
jmp
insl
push
movsb
sahf
aad
xchg
je
aaa
push
mov
push
mov
adc
inc
inc
popf
mull
push
jae
cwtl
pop
stos
cmp
insb
aaa
ja
xlat
sbb
mov
lret
mov
fldcw
mov
das
or
xor
mov
mov
xchg
or
dec
push
push
movsl
aam
scas
jnp
sub
out
xchg
mov
and
xchg
push
sub
cmp
call
mov
rorl
lds
popf
fnop
std
add
pusha
xchg
push
out
negl
cld
daa
repz
rclb
dec
insl
das
pop
ffreep
aad
enter
push
xor
fisttpll
stos
sarl
sub
repz
fwait
adc
loop
xor
mov
mov
and
decl
add
jl
loop
repnz
jnp
or
ret
mov
mov
in
jnp
cmp
mov
repz
jecxz
cwtl
pop
nop
and
push
pop
mov
mov
cwtl
mov
push
andl
cld
sbbb
push
hlt
and
mov
pushf
cmp
sbb
inc
sub
xchg
xchg
call
pop
xor
sub
sbb
adc
xor
jns
pop
adc
jecxz
call
dec
arpl
call
mov
out
mov
int
inc
sar
ret
push
or
repz
vcmppd
fsts
vpshufhw
repnz
mov
xor
lret
out
cmpsl
sti
out
inc
mov
pushf
fwait
cmpsl
sub
pop
arpl
in
clc
aaa
jno
adc
mov
nop
inc
pop
pushf
dec
mov
push
scas
fcompl
int3
jns
inc
xor
mov
sbb
mov
push
lods
dec
shrl
shl
bound
flds
or
lret
jnp
mov
fs
jmp
xor
cmpsb
push
call
jge
mov
test
sbb
jg
push
xchg
push
lret
scas
mov
xchg
rcll
dec
scas
cmp
adc
lea
andb
push
pop
dec
scas
jl
mov
dec
popa
adc
push
mov
stc
xchg
pop
xor
jo
sbb
hlt
jbe
call
pop
jp
and
ds
cmp
mov
iret
jp
fstps
idivb
add
arpl
das
fcmove
ficompl
lock
inc
push
pop
push
int3
xchg
ret
ja
fdivrl
dec
xor
dec
sub
jbe
imul
jns
lret
call
mov
sti
jo
mov
popa
shlb
imul
inc
cmp
jns
xchg
test
std
ficoml
xchg
mov
xorl
push
sbb
pinsrw
imul
sarb
mov
test
dec
sbb
and
lret
or
jmp
stos
cmp
test
imul
das
sbb
cwtl
and
mov
mov
pop
pop
add
loope
mov
dec
fstl
mov
mov
jne
xor
xor
lss
push
mov
fstl
or
imul
clc
stos
fnstcw
fcmovnbe
outsb
jo
gs
push
es
fs
sub
frstor
dec
xor
sahf
sbb
sarl
jbe
pop
mov
and
stc
aad
adc
bound
inc
test
xor
inc
xchg
data16
cmp
in
aam
pop
pushf
shlb
xchg
andb
stc
lcall
and
dec
bound
hlt
pop
sbb
cmc
hlt
push
adc
dec
div
stos
xchg
ds
cmp
es
jb
dec
insb
sbb
mov
movsl
jecxz
loop
outsl
fs
add
sub
scas
sbb
push
mov
repz
cmp
call
jmp
push
movups
add
shlb
lods
mov
lret
add
pop
xor
out
fstps
lds
add
lock
stc
cs
mov
cmp
pop
mov
cmp
in
cmp
push
xor
mov
bound
cmp
jbe
pop
sub
cmp
test
out
jg
sub
mov
shrl
in
pushf
imul
inc
movsl
and
push
mov
push
dec
out
sbb
out
pop
mov
push
mov
and
add
imul
cli
mov
cmpsb
push
jge
movsb
xcrypt-ecb
cmpsl
mov
ret
adc
mov
fwait
and
dec
shr
pop
add
fdivp
sti
sahf
mov
in
cmp
pop
dec
scas
mov
jo
jmp
or
and
jo
mov
adc
sbb
je
or
mov
xor
xlat
or
xor
aas
jp
mov
mov
ja
inc
dec
push
xchg
enter
fs
dec
out
mov
cmp
inc
lods
roll
push
loopne
mov
pop
enter
pop
sbb
nop
jnp
orl
dec
es
fcom
push
xchg
arpl
clc
addr16
loopne
jp
data16
test
loop
dec
outsl
push
out
lock
or
fcmovnb
fs
hlt
jnp
push
inc
lods
mov
jmp
cmp
into
repz
mov
mov
adc
cwtl
sub
dec
out
mov
jg
and
xor
iret
sbb
jne
push
add
enter
stos
sbb
idivb
push
push
inc
or
fidivrs
in
push
fsts
mov
test
sub
mov
call
rorl
hlt
lods
aaa
cli
pop
idiv
push
mov
jne
std
push
add
pop
xchg
dec
push
or
cmp
pop
stc
leave
sbb
sub
ljmp
ror
inc
pop
pop
sub
ret
xor
adc
pop
pusha
int
in
cli
lahf
mov
imul
xchg
pop
xchg
or
sbb
ficompl
or
imul
dec
mov
stos
je
out
and
sub
xchg
stc
rorb
dec
subb
push
and
testl
inc
push
leave
jge
push
xor
das
daa
xor
pushf
insb
mov
and
stos
fxch
and
jge
popf
cltd
ds
dec
sub
cmpsl
in
fdivs
ss
into
jmp
and
mov
mov
xlat
or
lods
jle
push
in
shrl
dec
fstpt
xchg
and
inc
cltd
in
std
mov
popf
pop
dec
es
xorl
jecxz
xor
sbbb
sbb
call
jecxz
lea
imul
dec
cmpsl
cmp
pop
hlt
push
inc
xchg
mov
sahf
daa
ljmp
ror
movsl
in
dec
cs
clc
cli
add
shll
pop
add
xchg
sub
test
bound
lret
pusha
es
adc
fsubl
adc
xor
fisubrs
je
push
lret
lea
lds
fwait
push
push
addr16
ret
xor
add
clc
mov
push
push
fadds
add
mov
sub
and
push
and
and
jbe
sbbl
sahf
movsl
sbb
enter
jbe
jo
pop
mov
jns
cld
fidivs
sbb
xchg
pushf
xchg
lods
cltd
movsb
lods
xchg
or
shl
stc
mov
sub
jp
xor
mov
mov
fs
in
les
scas
pushf
loope
cmp
aam
mov
dec
ret
inc
mov
jecxz
dec
push
test
and
lahf
leave
add
add
jmp
cmp
push
cltd
sti
mov
sbb
sbb
je
sbb
cmc
xchg
jne
sub
dec
out
xchg
adc
aaa
int3
aaa
sub
popa
scas
add
pop
jecxz
add
movsl
jne
mov
aaa
call
xchg
add
loop
outsb
fstpt
adc
or
into
cmp
xchg
loop
sti
out
pop
fisttps
and
jl
filds
sti
xchg
or
fimull
jg
inc
nop
sub
mov
xor
or
mov
push
popa
mov
aas
push
in
arpl
xchg
push
pop
mov
adc
mov
icebp
or
jo
xchg
rorb
push
xchg
fadd
adc
cmpb
scas
jns
adc
pop
or
sbb
mov
lea
adcl
daa
test
ljmp
leave
js
mov
xor
mov
shrb
and
pop
mov
mov
outsb
les
inc
sahf
cmp
mov
mov
inc
push
xlat
ja
push
lcall
xor
cltd
push
xchg
dec
imul
xchg
icebp
imul
faddl
negb
mov
std
cli
or
lds
lahf
mov
loope
xorl
dec
pop
push
jno
daa
xlat
aas
cmp
push
cmp
movl
aas
test
inc
loope
xchg
cmc
mov
cmp
add
insl
jl
dec
pop
mov
out
lret
pop
insl
sbb
scas
adcl
xor
or
and
insb
aam
mov
push
lret
mov
cwtl
jmp
jle
cwtl
bswap
cmp
ss
enter
int3
push
inc
adc
gs
cmp
in
mov
cmp
bound
xor
nop
pop
cmp
mov
sbb
imul
inc
and
dec
push
ds
dec
cli
clc
xorl
sbb
and
outsl
xchg
sarb
pop
rcr
sbb
inc
inc
decb
pop
loop
lods
xchg
push
test
sub
adc
jb
cmp
outsb
popf
sub
lods
and
sbb
insl
push
dec
sub
dec
dec
out
call
push
mov
mov
repz
jno
pop
jne
js
insb
pop
and
xor
repz
mov
imul
pop
stos
push
imul
test
mov
imul
iret
call
jb
loop
lret
in
sub
pop
cmp
mov
mov
fdivrl
int
pop
mov
mov
hlt
mov
add
sbb
mov
mov
adc
fisttpl
notl
dec
cmc
inc
fistpll
mov
fcoml
mulb
scas
ficomps
daa
in
pop
popa
adc
inc
push
jp
leave
roll
add
add
mov
push
add
mov
dec
in
decl
lret
lods
sub
sub
idiv
lea
adc
xchg
or
jge
in
insl
std
and
or
outsl
cmp
jmp
ficoms
rcll
jmp
ja
jge
in
push
push
mov
adcl
jno
mov
test
das
sub
add
cmp
add
rcr
xor
push
push
mov
popa
inc
repz
in
or
lea
sqrtps
pop
pop
xor
sbb
push
popf
cmp
sub
scas
pusha
fimull
fstl
fwait
in
lcall
ret
mov
dec
lahf
call
push
sub
lcall
repnz
mov
bsr
adc
mov
fnstcw
test
xchg
inc
test
pop
icebp
mov
les
jno
hlt
lods
cli
push
fs
pop
dec
dec
stos
test
jge
pop
scas
fisubrl
das
mov
pop
dec
imul
dec
adc
stos
or
dec
arpl
jle
das
mov
pop
in
sbb
cmp
out
out
and
ljmp
adc
lahf
jl
int
inc
xor
cmp
test
cmp
ds
ljmp
mov
pop
imull
popf
xor
jl
call
mov
and
mov
mov
ljmp
mov
pop
aas
jle
aaa
nop
jns
repz
cmp
ljmp
aas
ret
and
fwait
push
pop
idivb
cwtl
sbb
fcmovbe
cmp
xchg
test
cmp
jecxz
dec
jns
popf
mov
movsl
ret
arpl
and
out
and
inc
lcall
je
fsubrl
nop
and
or
iret
add
jecxz
fdivrp
andl
imul
mov
dec
jge
out
xchg
mov
pop
enter
xchg
adc
loop
pop
and
cld
jae
mov
cmp
leave
jle
cli
sub
fldt
out
inc
rorb
test
mov
cmp
adc
ss
xchg
jp
cmp
dec
sbb
arpl
mov
arpl
mov
and
movsb
fwait
loopne
jg
dec
lods
je
shlb
xchg
xchg
push
inc
mov
add
ficoml
mull
add
outsb
xchg
mov
xor
sub
cmp
rorb
add
int
mov
popa
pop
sbb
pop
and
cmp
pop
arpl
mov
mov
xor
movsl
cmp
mov
cli
or
mov
nop
cmpsl
adc
insb
xchg
mov
int3
loopne
ja
dec
sub
icebp
xor
pop
push
inc
cmp
out
mulb
das
sbb
inc
and
mov
outsb
sti
enter
fisttpl
pop
mov
enter
add
cmp
mov
xor
pop
jb
rcrl
xchg
lcall
mov
pop
jno
sbb
pop
and
arpl
ret
test
ss
mov
inc
xor
je
imul
rcr
cmpsb
mov
ss
cmp
lret
popa
rclb
mov
lret
inc
pusha
push
setle
cmc
jns
pop
leave
fwait
push
mov
push
aas
enter
xorb
out
rcrl
mov
fsubr
sub
mov
jnp
sub
push
int3
sub
and
popf
out
orb
popa
jecxz
jns
test
imul
daa
mov
dec
or
je
push
jns
fnsave
and
scas
aas
mov
pop
cmpsl
lcall
or
push
cld
jo
sar
jnp
add
xchg
mov
ret
cmpsb
pop
xlat
cmp
outsb
pop
xor
jge
bound
pop
es
ds
movsl
sbb
dec
fildll
stc
bound
adc
daa
inc
mov
jae
loop
or
pushl
sbb
and
fistpll
cmpsl
add
pop
adc
or
inc
call
or
xor
call
add
outsb
mov
mov
jnp
ret
inc
jns
aaa
outsl
clc
push
xor
mov
leave
repnz
out
outsl
shl
leave
xchg
push
lea
adc
pusha
testb
xor
aam
ja
cltd
out
inc
cmp
arpl
faddl
sahf
pusha
mov
imul
in
lcall
fisttps
popf
add
fildll
into
inc
mov
sarl
or
stos
sbb
add
call
push
shrl
dec
xor
jbe
mov
mov
mov
add
fldcw
scas
sbb
cwtl
jnp
int3
mov
push
lods
mov
mov
dec
mov
in
pushf
mov
lock
dec
stos
sub
test
repnz
dec
jbe
out
jae
xor
push
dec
neg
push
mov
or
xchg
pop
in
testl
icebp
adc
insl
into
push
pop
xchg
inc
pminub
or
pop
adc
hlt
mov
test
out
aad
xchg
xlat
sub
orl
jp
lahf
mov
add
pop
fwait
mov
dec
out
inc
pop
fidivl
test
pop
out
jno
fistpl
xchg
mov
ljmp
in
pop
addr16
pop
mov
rorl
cmp
xlat
scas
xchg
std
sahf
out
aam
mov
aas
jb
mov
loop
rcrl
rcr
imulb
lcall
lret
mov
add
mov
lret
loop
pop
xchg
imull
fadd
mov
imul
imul
rclb
arpl
add
push
bound
int3
mov
jns
pop
push
mov
gs
in
cmp
or
inc
mov
jge
mov
aad
ret
add
sti
insl
movsl
lret
jmp
pop
sbb
popa
jns
sbb
dec
and
sbbl
and
inc
je
sub
adc
xor
xchg
or
stc
daa
xor
xor
fidivs
jnp
mov
dec
aad
daa
in
rolb
test
pop
jle
inc
cld
shl
mov
cmpsl
movsl
test
addl
mov
pop
mov
sbb
inc
daa
sub
test
movsb
pop
sbb
repnz
aam
scas
repz
pop
adc
xchg
sub
inc
out
jl
out
push
or
inc
fidivs
shrb
repz
out
rolb
cld
subb
pop
out
pop
test
lahf
outsl
lods
bound
mov
out
int
or
mov
stos
xchg
out
popf
mov
inc
inc
xor
enter
lds
ljmp
pop
movsb
out
mov
and
or
inc
lods
xlat
mov
cwtl
pusha
pop
pop
movsl
mov
inc
mov
leave
aad
adc
aad
in
xor
aas
cmc
inc
dec
sbb
adc
cmp
inc
dec
inc
add
icebp
ljmp
push
ret
repnz
sub
sub
repz
stc
addr16
std
and
addr16
stos
repnz
mov
push
fldt
jle
outsl
mov
imul
fs
lret
into
cwtl
dec
cmc
test
cmc
add
loope
out
xchg
mov
fcoms
insb
push
sub
mov
jb
sbb
lock
test
cmp
mov
sbb
pop
inc
push
mov
std
dec
stc
aaa
fimull
cld
test
pop
sahf
js
mov
outsb
xor
xchg
div
push
dec
push
test
xorl
and
stos
cltd
sub
xlat
push
jl
jno
sti
loop
arpl
xor
lea
jmp
hlt
adc
mov
add
pop
and
push
out
aam
sub
arpl
lds
cmpsl
nop
ja
hlt
or
roll
sub
mov
pushf
scas
jo
loopne
add
daa
jge
xchg
add
jp
mov
jge
jge
fwait
int
ljmp
test
data16
jg
lahf
rcrb
xor
fildl
jle
and
fisttpll
das
or
test
into
cmp
inc
scas
cli
movsl
movsb
ja
das
mov
cld
jno
enter
mov
sub
mov
gs
shl
lock
sub
dec
in
inc
push
daa
mov
xchg
dec
std
ss
add
sbbb
push
push
dec
mov
cmpsl
jmp
pusha
mov
fcmovu
dec
ljmp
push
jg
lcall
ljmp
xchg
shl
lods
shrb
cli
sbbl
lret
xchg
int
sar
int
xor
mov
and
jmp
in
outsb
stos
stos
mov
notl
fmul
push
and
int3
outsl
adc
dec
mov
and
xor
scas
test
jge
loope
sub
insb
mov
pushf
bound
inc
les
lahf
dec
aad
pop
outsl
push
mov
jns
outsb
sub
sbb
sbb
cmpsl
loopne
aas
sbb
movsl
fstl
mov
mov
rorb
sbb
inc
inc
xchg
jns
mov
lock
push
mov
in
xchg
lds
stos
push
ret
xchg
test
ja
aaa
push
loopne
in
rolb
enter
cli
jg
push
stos
fistl
and
pusha
inc
xchg
repnz
test
loope
movsb
mov
cmp
inc
sbb
add
cltd
shlb
push
movsb
cmc
mov
mov
pop
icebp
mull
dec
or
or
shlb
fwait
js
out
aam
mov
pop
add
lret
push
das
mov
out
inc
or
mov
lret
fimuls
pop
lahf
xor
sub
push
leave
mov
sub
jle
bswap
mov
sahf
or
sbb
test
icebp
shlb
mov
js
es
or
cwtl
jecxz
cmp
sti
jb
out
mov
fs
pop
test
scas
sub
insb
add
mov
mov
inc
cmp
lock
jp
xor
jnp
es
lods
dec
iret
out
into
fcmovne
mov
int
test
in
lds
xchg
stos
cltd
shrl
dec
ds
scas
add
pop
sub
movsb
fidivrl
mov
mov
lods
popf
jne
popa
fwait
push
mov
repnz
sbb
xor
pusha
insl
test
pop
add
mov
cs
jmp
popf
jae
mov
mov
shl
sarb
xchg
loopne
mov
js
cltd
add
out
outsl
icebp
bswap
out
shrb
and
cmp
adc
push
imul
clc
cmc
adc
pop
in
lahf
imul
jge
mov
inc
insl
jno
cld
movsb
push
adcb
test
imul
data16
or
inc
lds
cmpsl
cmp
add
xchg
lret
test
push
sub
scas
pop
pusha
push
jl
ret
jb
std
cmp
inc
faddl
test
test
xchg
inc
dec
pop
pop
mov
loopne
sbb
cltd
push
je
daa
fistl
sub
mov
rolb
fldenv
xor
jne
pop
jno
sarb
repnz
inc
jbe
jl
lds
ljmp
or
pop
sub
push
mov
lods
enter
dec
in
int
add
xor
lea
loop
js
roll
pop
xor
jne
dec
inc
popf
orl
push
pusha
loopne
add
or
sbbb
outsb
mov
xor
loopne
lds
add
repnz
or
cmpsl
js
stos
in
cmp
cmc
test
jmp
dec
lock
and
sbb
pop
pop
xor
test
push
sbb
mov
lret
loop
adc
cwtl
inc
pop
adc
mov
or
cwtl
mov
popf
xor
shll
cmp
inc
add
fsub
out
shll
addl
or
aas
sub
sahf
je
mov
cltd
inc
jae
pop
inc
test
movsb
push
add
pop
sbb
addb
loopne
jp
lds
pop
push
out
in
xchg
push
mov
xchg
into
push
cld
xchg
mov
push
jno
decl
adc
push
xchg
into
test
xlat
pop
xchg
cmp
into
in
test
adc
nop
sub
ds
jmp
adcl
pop
and
xor
xchg
pop
jns
repnz
ljmp
push
movsb
mov
ljmp
fdiv
xchg
pop
inc
add
xlat
or
out
repz
mov
add
sarb
cmpsw
addl
pop
add
jne
call
xor
jge
out
or
and
add
movsb
mov
and
pop
mov
jle
out
sub
sti
sti
stos
push
rcrb
mov
jb
vunpckhps
fistps
sbb
mov
push
or
cmp
imul
mov
outsl
sbb
mov
loope
in
dec
pusha
mov
pop
fcomip
push
sub
cmc
roll
lret
add
jno
out
stc
imul
inc
pop
xchg
push
les
fstps
and
xchg
fcoml
mov
adc
inc
nop
test
pop
pusha
mov
sub
or
and
stos
ljmp
fadds
ljmp
cli
cltd
int
add
cmp
push
or
cmp
iret
mov
pextrw
mov
lock
mov
pushl
jp
nop
out
call
push
mov
xchg
mov
and
jmp
mov
add
push
icebp
stc
pop
jl
lcall
mov
mov
dec
push
mov
out
aas
sbb
idivl
aad
mov
cmpsb
repz
cwtl
cmp
mov
push
and
stos
pop
dec
and
lret
jbe
movsl
hlt
mov
fwait
dec
or
sub
mov
and
shrb
stc
dec
xchg
xchg
scas
shll
xchg
std
sub
jns
lods
cs
and
ret
xchg
mov
or
or
jae
mov
movsl
dec
cmpsl
cli
inc
sti
loop
insb
iret
jne
xor
je
mov
mov
push
sbb
pop
clc
nop
mov
idivl
repnz
dec
pop
nop
mov
push
cmpsl
cmp
mov
lods
in
aas
ret
mov
xlat
adc
aam
stc
dec
test
inc
jg
outsb
loopne
loopne
gs
pop
iret
mov
xor
cmpb
xchg
jb
mov
inc
flds
pop
push
add
push
cmp
or
inc
mov
push
add
je
gs
lcall
addl
inc
pop
cmp
pop
fnstenv
cld
mov
pop
dec
dec
les
rcll
rcrl
pop
sub
sbb
lds
int3
jecxz
mov
data16
clc
jbe
xor
adc
shl
cmp
into
mov
out
sarb
push
jecxz
shrl
inc
fcoms
fsubrl
ret
test
inc
dec
adc
pop
cmpsb
push
icebp
mov
in
sub
xchg
xchg
sub
inc
xor
jnp
call
out
scas
scas
adc
mov
jns
mov
sahf
jns
fwait
je
adc
push
movsl
fistl
push
sub
inc
loopne
aaa
mov
dec
das
out
sbb
fisubrl
loopne
xchg
out
nop
jle
test
mov
or
inc
or
popf
insl
clc
add
rcrb
cld
ss
mov
push
add
dec
sbb
insb
pop
fldl2t
sti
pop
cmp
bnd
test
in
sub
imul
loope
call
cmp
inc
fwait
xorl
mov
push
out
mov
mov
movsb
sub
xlat
inc
jl
in
and
cmp
das
into
setg
test
mov
mov
jle
xchg
sub
add
pop
les
and
lea
les
and
xchg
jbe
jb
mov
lcall
or
mov
inc
fnstenv
ds
pop
or
pop
mov
dec
arpl
pop
mov
fdivrs
inc
lret
pushf
xchg
mov
dec
jo
mov
data16
bnd
bnd
out
mov
out
mov
ret
insb
jle
aas
sbb
jo
mov
shl
cltd
mov
push
mov
mov
inc
push
in
jb
imul
aaa
test
in
adc
sbb
pop
scas
mov
fs
fwait
push
lcall
mov
jns
xor
leave
out
cmovnp
nop
dec
dec
pushf
gs
push
pop
jp
pushf
lret
sbb
pop
shrb
addr16
fs
stos
push
shl
pop
and
inc
dec
ret
fidivrs
pop
mov
or
imul
mov
mov
xor
fs
add
lea
out
mov
psrlq
cmpsl
test
and
sbb
mulb
call
das
adc
adc
xor
pop
add
jle
aad
sti
lcall
jp
pop
mov
inc
sbb
shl
fwait
push
mov
jl
or
sbb
sub
je
popa
sub
jmp
sarb
mov
or
pop
dec
xchg
sub
loop
js
or
hlt
je
mov
push
xor
shlb
mov
roll
js
adc
in
cmc
xchg
xchg
jnp
test
inc
stos
xchg
aam
mov
xor
or
push
out
xor
out
fsubs
addr16
xchg
cmp
data16
mov
push
or
jmp
mov
popf
jmp
cmp
mov
sbb
and
call
nop
cmc
movsb
mov
sub
sbb
xchg
movsl
lea
aad
call
or
xchg
je
xchg
dec
mov
loopne
cmpsb
cmpsl
shlb
pop
bnd
ss
and
push
sarb
test
movd
cmp
pop
or
mov
cli
add
jl
inc
jg
fucomp
push
or
lret
shll
mov
fdivr
dec
in
add
movsl
jb
fucomip
xor
jg
jmp
jmp
std
arpl
sarl
lcall
inc
jb
mov
jecxz
lahf
idivb
xchg
insl
cmp
sbb
sti
push
aam
and
push
pop
mov
dec
hlt
loop
cmpsb
cld
push
dec
neg
xchg
cmp
adc
jmp
test
xchg
pop
or
repz
pop
fistpll
out
daa
add
into
std
ds
pushf
pop
outsb
inc
xchg
cmp
xor
inc
aam
in
pop
repz
push
fwait
dec
movsl
xchg
outsb
sbb
scas
push
mov
loope
add
lods
cld
xchg
fiaddl
imul
pop
arpl
dec
ret
sbb
mov
rorl
mov
test
outsl
cmpsl
out
shlb
mov
adc
mov
mov
dec
add
fstpl
pushf
push
adc
mov
pop
mov
popa
mov
leave
sub
xchg
test
xchg
lcall
cmp
push
jno
rolb
push
xor
fdivp
cmpsb
ret
fstl
mov
jns
sarb
or
int
test
or
adc
mov
push
mov
sbb
imul
mov
rolb
adc
jo
mov
test
cmpl
dec
cmp
fldt
nop
adc
inc
and
in
push
cmpsl
test
dec
xor
arpl
fistpll
popf
push
sbb
rcl
adc
loop
add
stc
mov
adc
shlb
cld
pop
not
in
cld
clc
test
out
pop
pop
jge
aad
xchg
fwait
and
ret
cmc
push
aam
outsl
jb
test
pop
adc
ret
mov
add
dec
add
fisttpl
shr
push
or
xchg
pop
orl
or
jge
out
and
ret
push
mov
orb
add
in
cmc
or
scas
test
dec
loope
out
adc
dec
sub
loop
mov
and
mov
mov
push
xorb
pop
adc
push
in
and
insl
push
fwait
push
dec
lea
sbb
jl
imul
xchg
cmp
je
in
js
cmp
mov
out
inc
mov
fidivrl
inc
cmpsl
pop
out
lret
mov
in
bound
and
pusha
inc
lret
push
xor
cmp
in
das
mov
rorl
stc
out
lcall
lock
jg
std
roll
jecxz
mov
lods
lret
mov
imul
add
aam
out
cmovge
imul
int3
js
push
inc
cwtl
outsl
scas
popf
ja
add
mov
aam
add
sbb
pop
push
repz
pop
loop
mov
cmp
scas
or
test
mov
fs
xchg
lea
or
pop
cmp
flds
in
mov
mov
dec
fcmovnbe
jl
xor
pop
push
pusha
mov
mov
outsb
pop
loop
add
shrl
pusha
mov
inc
pop
or
dec
scas
hlt
jp
outsb
aaa
xchg
jo
adc
cmp
bound
mov
mov
ret
ret
in
je
adc
mov
sahf
arpl
and
cmpsl
xchg
mov
push
mov
std
jbe
xchg
adc
dec
inc
sbb
mov
cmp
adc
cmc
call
jo
inc
pop
push
xor
out
dec
dec
addr16
push
mov
insl
xor
jae
cmp
fldenv
sbb
cmp
dec
sbb
xchg
cmp
push
lahf
in
jp
iret
iret
je
mov
fcomip
aaa
dec
rcrl
xchg
mov
popa
pop
adc
dec
aam
daa
add
pop
fldl
sub
loopne
movsl
je
add
ffree
xchg
testl
fidivs
adc
std
es
leave
mov
inc
cmp
leave
cmp
shlb
orl
xor
xchg
push
sub
imul
and
sbb
jmpw
add
flds
stos
adc
jl
pop
sti
mov
les
cmp
dec
addr16
fldcw
mov
pop
out
sub
dec
sbb
pop
xchg
push
jecxz
xlat
imul
xchg
push
int
xor
call
ds
imull
push
mov
inc
popa
fisttpl
mov
repnz
xor
inc
call
sbb
xchg
mov
popf
pop
mov
and
mov
dec
inc
jo
inc
shl
jl
into
or
insb
xor
xchg
ja
adc
gs
push
sub
push
push
popf
mov
mov
cmc
mov
divl
add
out
or
xor
cwtl
shlb
lock
inc
or
xchg
xchg
jo
stos
mov
xchg
push
aas
jb
mov
out
loopne
xor
cmc
and
and
repz
xor
je
mov
cmp
xor
loop
jle
insl
lock
loopne
mov
js
dec
loop
cmp
cmp
mov
pop
push
js
mov
jmp
push
clc
jne
test
pusha
sub
cmpsb
mov
jecxz
gs
shrb
xchg
sbb
ljmp
jmp
inc
aaa
hlt
pop
pop
push
aas
ror
mov
xchg
loop
arpl
sbb
repz
and
mov
incb
lea
inc
push
mov
fwait
lods
into
cmp
jg
outsl
out
jnp
push
test
stos
sub
loop
cmc
push
inc
jns
mov
xchg
adc
shlb
rclb
xchg
out
jno
mov
sbb
in
add
mov
sbb
xchg
pop
and
dec
mov
les
movsl
cmp
xchg
mov
mov
ja
mov
or
mov
cmp
or
xchg
fwait
dec
fmuls
ret
js
pop
pop
repz
pop
mov
xchg
dec
and
and
lods
icebp
lcall
mov
xchg
mov
jle
jb
mov
jg
icebp
mov
hlt
sub
sbb
cmpsb
push
cld
cmpb
cltd
jecxz
push
or
data16
mov
jnp
xor
fistps
aam
cmpb
inc
mov
mov
dec
mov
and
mov
add
neg
push
aaa
jmp
cmp
xchg
bound
pop
mov
stc
mov
lret
lods
cmp
cmp
push
jbe
insl
aam
mov
rcll
mov
jl
repnz
sbb
xchg
cmc
gs
or
call
inc
fs
mov
xchg
int3
mov
jle
dec
imul
adc
sbb
push
pop
lea
outsb
stos
fimull
xor
jecxz
xchg
inc
pop
enter
clc
pop
and
pop
and
arpl
dec
aam
jl
inc
repnz
sbb
xor
sub
mov
inc
outsb
mov
sbb
sub
cmp
cld
pop
dec
push
aaa
testl
or
loop
inc
xlat
les
fnstcw
mov
dec
jl
mov
mov
jle
addb
dec
movsl
lds
and
into
andl
lods
mov
add
push
bound
imul
enter
pop
xchg
inc
mov
call
jns
jl
sbb
pop
or
jae
jl
add
xchg
int3
mov
xor
adc
ja
lods
popf
cld
or
icebp
and
push
mov
jg
test
scas
outsl
std
ret
cmp
repnz
xor
clc
sahf
cld
pop
xchg
mulb
aas
cmp
inc
sub
push
push
jmp
shrb
cmp
push
xchg
div
insb
or
fsts
pop
adc
sub
push
imul
cmp
aad
pop
pop
add
stc
das
xor
xchg
movsl
mov
inc
test
add
xchg
and
push
cmp
in
scas
sbb
fisttpll
add
mov
or
lods
rol
pushf
xor
stc
cltd
pusha
pop
fimull
inc
sub
pavgw
add
push
out
xor
popa
xor
inc
addr16
xor
data16
mov
push
dec
adc
sbb
test
cli
arpl
and
out
icebp
leave
sub
mov
dec
int
sbb
or
std
rcr
xor
enter
lret
cld
int3
shll
repnz
repz
inc
and
and
loope
cmpsb
cmp
push
xchg
sbb
test
sbb
adcl
inc
pop
pop
lcall
jl
js
pop
ficoms
or
add
and
mov
jmp
and
xchg
jne
popf
inc
mov
dec
jl
sbb
pop
cmp
int
fcmovu
std
or
test
sbb
pusha
sub
fstps
insb
mov
mov
fsubrl
sbbl
fisttpll
inc
jmp
jno
aaa
daa
mov
addl
inc
into
mov
mov
lret
dec
mov
mov
sub
out
std
adc
call
sbb
adc
iret
ror
repnz
shrl
scas
sub
mov
test
cmpsl
sub
mov
push
push
cmp
push
cli
inc
or
xchg
mov
mov
adc
inc
pop
pop
push
adc
jle
push
xor
push
movsb
mov
fbld
pop
mov
mov
mov
in
cld
shlb
adc
adc
mov
ret
data16
mov
aad
inc
sbb
dec
sahf
addr16
push
scas
ficoml
xchg
stc
pusha
jmp
cmpb
jae
cmc
enter
adc
out
xor
in
or
jg
xchg
popa
mov
aad
xor
xchg
or
outsl
rorb
sub
hlt
mov
inc
xchg
xor
jl
jno
clflush
outsb
hlt
push
inc
push
lods
mov
push
pushf
add
or
sbb
fs
stc
mov
jo
shlb
mov
shrl
addr16
or
adc
hlt
jmp
lods
add
pop
cmpb
add
jmp
adc
push
lret
cs
cld
add
dec
cmp
test
adc
and
fistl
xchg
pop
cmp
jns
mov
jne
outsb
cmp
xor
or
sub
xor
xchg
mov
or
cwtl
push
push
jl
sub
in
in
xchg
sub
sbb
push
repz
andb
leave
push
mov
jns
inc
loop
inc
cmc
daa
dec
pop
loop
lcall
lds
xchg
mov
jecxz
ja
lcall
push
out
cwtl
lea
scas
arpl
xor
push
into
jle
sbbb
dec
mov
and
add
mov
push
or
test
jnp
mov
decl
clc
mov
push
cmp
ja
fisubs
in
adc
xchg
lock
mov
out
clc
movsb
clc
push
pop
les
mov
pop
fsubp
xor
mov
push
adc
cmp
push
inc
jecxz
adc
ror
or
dec
dec
dec
ret
add
pop
enter
sub
or
adc
sub
rcr
icebp
mov
xrelease
dec
or
mov
arpl
inc
pop
mov
cltd
push
mov
inc
or
sub
in
popf
push
cmpsb
dec
call
fwait
in
inc
xor
out
andb
or
fadds
loopne
loope
and
lret
xchg
cmp
pop
in
xor
inc
sbb
mov
dec
aas
fs
push
mov
out
rcrl
ljmp
lcall
notb
lahf
lahf
and
cmc
test
popf
arpl
in
test
pop
and
idivb
inc
mov
cld
lods
mov
xor
jg
sub
cmpsb
adc
aas
cld
push
add
cmp
push
scas
sub
pop
cmp
loopne
sub
movsb
dec
das
enter
and
pop
fmull
lret
inc
fstl
cmpsb
rcrb
negl
mov
scas
shrl
shll
fists
mov
test
ds
lea
adc
adc
in
cmp
cld
lods
call
in
ret
mov
add
sbb
or
lret
cmp
rcr
xor
add
inc
arpl
mov
push
movsl
cmp
fimuls
dec
dec
cld
cmp
inc
xchg
mov
mov
in
outsl
or
dec
xchg
and
leave
inc
adc
cmc
mov
mov
mov
mov
inc
and
dec
mov
jecxz
xchg
pop
ss
cmpl
inc
movsb
iret
mov
push
inc
xchg
mov
xor
cwtl
sbb
xor
es
adc
enter
insb
sahf
inc
jle
out
cli
cmc
push
cmp
jge
dec
out
lret
mov
dec
jbe
mov
je
jle
jmp
insb
add
mull
jbe
cltd
or
inc
mov
push
xchg
dec
addb
fiadds
mov
add
xchg
test
movsl
shlb
sbb
jb
adcb
lods
movsl
fistpl
xorw
aas
sub
pusha
fucom
data16
add
add
lahf
sub
adc
and
leave
loop
xor
pushf
mov
pop
xchg
shrb
scas
cmp
out
xchg
mov
repz
std
shl
add
dec
filds
cli
jo
and
movsl
dec
pop
pop
sbb
xchg
nop
pop
pop
sbb
ds
fdivrl
pushf
outsb
cmp
addb
cs
mov
setnp
mov
xor
pop
popa
popa
sub
cli
stc
int3
int
sti
orl
fcos
sbb
push
fsubrs
xlat
mov
pop
mov
lods
adc
aam
sbbl
daa
mov
inc
xchg
loop
sbb
cmp
jbe
sub
sub
sub
je
fs
insb
inc
and
andl
mov
movsb
cli
push
stc
pop
pop
repnz
dec
fimull
mov
sbb
neg
ds
or
xchg
ss
imul
mov
fcoml
or
push
stos
movsb
pop
aad
jne
mov
or
mov
pop
aad
push
xor
hlt
and
iret
pop
or
mov
xchg
and
pushf
pop
adc
cwtl
lcall
lea
or
leave
pop
out
add
rcrl
sbb
push
aad
inc
imul
stos
cmp
pop
adc
stc
and
mov
add
or
popf
ret
and
inc
cltd
call
loope
cmp
arpl
call
mov
xchg
mov
inc
jge
test
push
or
push
imul
loop
push
addr16
xorb
test
ss
xchg
lret
sahf
mov
push
bound
mov
or
insb
negb
mov
pusha
and
lcall
mov
add
push
mov
outsb
outsl
or
mov
jne
pop
xchg
push
leave
jnp
pusha
out
cwtl
mov
faddl
fs
sbb
lock
jl
shl
in
sbb
loope
ror
out
xlat
adcb
xchg
fbstp
movsb
movb
sbb
pop
divb
daa
lods
sbbl
xchg
clc
mov
mov
decl
rorl
loope
fnsave
jl
adc
es
pop
mov
es
pop
lcall
xchg
dec
inc
adc
enter
pop
mov
nop
sbb
aas
adc
push
sar
cmpl
or
pop
push
lret
hlt
stos
lret
mov
or
test
fucomp
xchg
repz
xor
mov
pop
aaa
lea
adc
daa
lods
cs
mov
sti
int3
dec
pop
mov
mov
sbb
push
clc
mov
movl
dec
sbb
popa
test
sbb
push
dec
fdivl
test
push
js
fmuls
inc
sub
shll
fs
rcrb
xchg
dec
repnz
push
xchg
cmp
sub
add
sahf
xchg
inc
cmp
sub
jecxz
lds
loope
and
add
rorl
inc
ljmp
idivl
imul
pop
inc
sub
mov
lods
in
in
sub
push
inc
in
push
cmp
xor
pushl
loop
or
icebp
xor
mov
mov
cwtl
push
test
loope
mov
mov
lods
push
lret
enter
clc
in
xor
xor
sub
jo
sub
ret
mov
test
cmp
cli
mov
mov
adc
ljmp
ds
adc
dec
int
insb
adc
test
mov
in
fisubrs
jo
in
xchg
mull
inc
mov
push
and
cmp
shrl
icebp
and
push
pop
pop
fidivs
jle
in
ficoml
sbbl
out
sbb
adc
neg
lret
cmp
div
and
out
mov
leave
ficoml
in
add
lret
fsts
test
daa
mov
lods
sub
imul
test
rclb
push
aas
mov
daa
dec
rorb
jne
data16
out
dec
movsb
dec
sbb
push
fwait
icebp
mov
pop
fwait
and
sub
fstl
lcall
mov
adc
mov
lret
in
fucom
cmp
cmp
outsl
xor
in
incb
xchg
inc
pop
mov
fistpll
push
add
xchg
cmpsl
fcomps
repz
add
xor
jecxz
ja
dec
cltd
xor
lret
mov
nop
sbb
outsb
push
rcl
cmpb
inc
les
in
inc
sub
sbb
push
jg
sbb
rcr
pop
jl
sbb
push
movsl
shrl
andb
or
cmp
fildl
xchg
add
jbe
pusha
mov
shll
test
add
mov
jge
cltd
and
lods
dec
loopw
push
sti
xchg
fwait
lds
loopne
scas
pop
pushf
push
pop
push
ja
pop
cmpsb
cli
push
adc
rclb
iret
fldcw
jno
pop
mov
inc
in
les
pusha
out
or
fdivrl
outsl
cwtl
adc
imul
arpl
xchg
int3
or
mov
dec
imul
inc
imul
xchg
push
pop
push
adc
push
xor
xchg
out
sbb
mov
addl
in
or
cmp
scas
insl
and
and
gs
adc
in
xlat
jae
test
pop
movsl
loop
and
divl
pop
enter
xor
sub
popa
jno
in
test
cmp
sub
int3
dec
pop
dec
xchg
cs
xchg
jmp
inc
xchg
sub
pop
int
mov
cmp
jle
mov
push
mov
outsb
push
adc
jns
sbb
scas
scas
adc
jecxz
insl
pop
jnp
xchg
pop
mov
or
sbb
test
data16
inc
out
inc
sbb
mov
ss
inc
xchg
jmp
leave
sahf
push
roll
pop
es
mov
lahf
inc
pop
dec
sub
xor
je
dec
pop
enter
sub
pushf
popf
add
pop
dec
push
cltd
add
inc
sbb
add
jb
and
xchg
idiv
stos
push
test
add
mov
add
and
into
push
ret
ret
repz
add
dec
sub
mov
jns
dec
cmpsl
jp
xchg
mov
xor
or
mov
int
jb
jbe
push
dec
mov
shr
jb
outsb
adc
jecxz
pop
sbb
mov
ljmp
sbb
cli
mov
xorl
les
push
stos
andb
xchg
add
jecxz
jge
mov
jmp
and
dec
iret
pop
inc
xor
mov
xor
adc
imul
fcomp
or
mov
nop
inc
arpl
xor
sbb
xchg
xchg
xchg
rolb
sbb
jnp
mov
pop
mov
dec
pusha
mov
dec
lret
fldt
pmullw
jo
out
cmp
sbb
add
call
lret
push
repnz
or
jle
ljmp
jl
shrl
pop
test
test
mov
xor
ficomps
imul
and
loopne
xchg
dec
int
lock
mov
inc
xor
clc
aaa
aad
pop
enter
dec
pop
out
shl
jp
mov
inc
loopne
rolb
fwait
xchg
mov
loope
stos
aas
jge
ss
cli
or
fwait
cs
pusha
push
in
leave
icebp
das
mov
fstpt
add
loop
std
mov
xor
mov
negb
out
ret
movd
mov
adc
mov
xchg
mov
jnp
mov
popf
loopne
repz
repnz
mov
shl
sub
fldl
das
es
popa
sti
sbb
lods
add
shlb
aam
xchg
div
sarl
jbe
push
imul
call
int
xchg
pop
add
test
mov
inc
xor
imul
jle
pop
pop
fcoml
inc
push
xor
mov
cltd
add
fs
data16
pop
or
push
insb
mov
xchg
lahf
ja
aas
int3
je
add
push
add
orl
add
pop
lock
pop
aad
adc
outsl
call
push
fwait
push
stos
mov
sbb
sarl
pusha
xchg
sbb
sbb
in
or
movsb
jg
jmp
cmp
push
cmp
sub
pop
add
jo
pop
fcoml
insb
jne
mov
gs
mov
and
cmp
aaa
xor
jnp
aas
inc
and
jbe
sbb
aaa
repnz
adc
into
pop
je
and
daa
and
popa
loope
mov
xchg
das
jle
mov
adc
pop
xor
pop
imul
push
mov
frstor
loop
sub
loope
pop
inc
add
inc
dec
jp
fwait
xor
dec
andl
inc
or
loopne
cmpsl
xchg
cmp
fisubs
rorl
add
jns
enter
ds
inc
das
insb
fimuls
lcall
sbb
add
adc
mov
cmp
fisubrs
jo
int
movsl
pop
shll
cmc
out
or
out
inc
or
cmpsl
xchg
stos
out
inc
pushf
imul
push
cld
add
push
inc
xorl
iret
arpl
add
subb
fisubrl
ljmp
or
inc
lods
call
mov
dec
lret
adc
jb
mov
push
push
daa
jmp
push
xor
inc
in
mov
and
push
add
stos
lret
mov
sub
dec
cmp
push
dec
jbe
sbb
inc
ret
pop
in
jecxz
mov
cmp
fstps
mov
das
out
mov
test
cmp
cltd
cmp
shlb
jne
out
jge
fwait
js
xor
sbb
movsl
outsl
mov
popa
mov
out
int3
leave
stc
lods
xchg
in
in
loope
test
mov
mov
dec
xor
pop
lods
pop
adc
je
fbstp
add
cmp
mov
dec
cmp
adc
call
mov
outsl
xchg
and
jle
loop
int
pusha
stc
cmp
add
mov
inc
mov
cmp
xchg
daa
rorl
je
std
pop
outsb
xor
cwtl
push
sub
add
into
adcb
pushf
sub
adc
int
out
inc
punpcklwd
imul
xor
mov
cmpxchg
fistpll
cmp
dec
pop
cmp
pusha
cmpsb
js
sarb
cmp
xchg
jg
aam
call
add
pop
in
sub
jmp
clc
das
xor
in
bound
push
mov
cmp
loop,pn
andl
sub
and
push
pop
mov
mov
popa
xor
dec
or
jb
iret
jnp
jg
adc
test
push
scas
add
mov
pop
int
pop
sub
loop
sbb
cmp
repz
aam
mov
mov
add
test
ret
xchg
gs
add
push
scas
cmc
xchg
inc
int
loop
and
mov
mov
adc
xor
es
cmpsl
pop
gs
mov
das
cmpsl
test
cwtl
testl
mov
and
sbb
dec
jbe
jecxz
sub
lock
shr
icebp
add
xchg
mov
daa
test
cmc
push
mov
mov
ret
xorl
jge
jb
out
and
mov
and
jl
in
out
sbb
loopne
xchg
leave
mov
cmp
loop
mov
imul
sub
mov
es
pushf
jo
pusha
flds
dec
sahf
lcall
mov
stc
cmp
icebp
lods
mov
jle
fidivs
or
icebp
in
jns
fsubr
sub
mov
push
int3
jne
jne
mov
sbb
mov
test
iret
adc
mov
popl
test
mov
cmp
xchg
sub
pop
xchg
std
jecxz
out
ja
cmp
sti
aas
mov
addl
stos
sbb
shll
adc
push
enter
outsl
and
mov
sub
mov
mov
xor
sbb
cmpsb
cmp
and
cltd
in
pushaw
ret
jb
inc
mov
push
test
fildl
add
xlat
mov
call
push
in
popa
popf
test
or
mov
cmpsl
jmp
and
cli
data16
in
and
sub
mov
mov
cmpb
xlat
mov
out
call
incl
cmp
dec
bound
test
jp
enter
cltd
push
clc
add
inc
sbb
iret
jmp
or
loopne
int3
jo
mov
mov
jp
sti
nop
inc
sbb
pop
push
cmpsl
lcall
sbbl
pushf
xor
cltd
xchg
jae
mov
fmuls
cmp
loop
cmp
and
mov
in
xlat
lfs
add
bound
inc
das
adc
cmp
fwait
inc
mov
adc
xor
cmp
mov
insl
shrb
data16
sti
cmp
push
dec
fldcw
xchg
cwtl
imul
pop
sbb
std
pop
lcall
sub
aaa
cmp
mov
cmp
dec
jmp
inc
cltd
gs
les
and
push
testb
fstl
lahf
scas
jo
push
mov
dec
sbb
pusha
xor
sbb
hlt
push
or
adc
fsubs
mov
stos
add
out
cs
push
mov
into
fsubrs
sub
ficomps
cltd
xor
inc
std
movsb
mov
into
xchg
inc
stc
dec
pop
or
das
cmp
idiv
add
aad
xor
adc
call
lds
iret
cltd
mov
jmp
rcl
ja
aam
push
cmpsl
stos
mov
adc
ja
les
mov
and
xor
pusha
add
cmp
cmp
sub
and
cmp
inc
mov
cltd
outsb
popa
push
cmp
adc
movsl
lcall
daa
sub
mov
daa
adc
aad
xor
jno
sbb
cwtl
jae
xchg
jnp
jmp
mov
pop
daa
dec
int
push
mov
mov
jbe
xchg
inc
aam
mov
pop
jg
pop
mov
push
sub
insb
fmulp
mov
jle
jle
cmp
and
xor
sahf
xchg
lret
xchg
pusha
xchg
sbb
movl
or
ljmp
ds
ret
dec
adcl
in
cmp
jmp
inc
fstpl
mov
xchg
sub
dec
sub
dec
test
aad
cmp
nop
cltd
add
push
push
xor
pop
test
test
aad
sbb
mov
cmp
les
mov
mov
popa
sbbl
pushw
arpl
or
ret
fmull
outsl
and
out
inc
lock
enter
insl
mov
adc
mov
jle
jbe
cmpsb
sqrtps
jno
repnz
gs
test
xchg
mov
sub
mov
sarb
aaa
mov
loope
stos
mov
lods
repz
aad
sub
js
adc
jg
adc
push
in
popf
lret
add
sbb
mov
or
out
pusha
pop
rolb
dec
xchg
cmpsb
jmp
jmp
into
sahf
mov
cmp
mov
sub
mov
or
mov
pop
jnp
ds
movsb
adc
or
iret
les
mov
add
jp,pn
fstp
scas
pop
push
shrb
jle
gs
pop
fcmovnbe
xor
loop
dec
adc
out
outsb
push
dec
xchg
dec
divb
inc
jle
mov
cmpsb
xchg
and
cmp
mov
pop
cmpsb
pushf
in
sub
mov
mov
and
inc
sbb
mov
or
cwtl
xchg
fs
jmp
dec
out
test
fimuls
jnp
cmc
xchg
mov
addr16
and
test
test
pop
into
and
xchg
test
mov
sub
cmpsl
add
iret
xchg
test
sbb
and
xchg
sbb
dec
push
out
jae
loope
xorl
fwait
mov
aaa
dec
and
daa
sbb
fdivrl
sarl
cmpsb
aas
dec
ficomps
les
lds
lret
mov
outsl
mov
fwait
popa
xchg
mov
and
mov
test
sub
mov
pop
ret
mov
incl
push
nop
rcrb
or
cmp
testl
js
call
jne
inc
jns
push
mull
out
lret
mov
cltd
arpl
push
sub
daa
das
inc
dec
add
leave
orl
fbld
push
stos
add
shll
and
mov
fwait
out
stos
int3
xchg
sub
popa
loope
dec
adc
enter
lret
dec
mov
fnstcw
shlb
jb
out
mov
sbb
dec
jp
jae
pop
add
sub
add
push
jnp
and
adc
mov
out
repnz
push
int3
mov
int
xchg
jg
fcom
push
sub
ret
mov
xchg
pop
pushl
adc
mov
mov
ljmp
out
daa
add
int3
jb
fiadds
in
adc
lret
insb
hlt
loope
jnp
daa
test
sbb
lods
xor
insl
cmpsl
xchg
xchg
jnp
out
movsb
sahf
cmp
daa
or
out
cmc
popa
lods
popa
movsl
ret
jns
mov
enter
cmp
add
adc
mov
jnp
xor
enter
fistps
mov
mov
sti
xor
hlt
out
test
rcl
inc
pcmpeqw
out
mov
jne
mov
push
bound
les
cld
inc
adc
outsl
sub
xor
pop
push
pop
cmc
or
fisubrl
mov
popf
push
pop
cmp
cmpl
scas
adc
and
sahf
inc
push
jns
sub
and
mov
mov
xor
push
dec
enter
inc
mov
or
out
adc
insb
mov
jecxz
add
popf
jb
sbb
cmpsb
xchg
sbbl
ja
ss
mov
fwait
mov
movsb
dec
inc
in
push
mov
sub
je
pop
dec
call
dec
mov
add
pop
mov
pop
pop
or
into
lds
mov
or
or
xchg
pop
mov
inc
jo
pusha
je
aas
das
add
cmpsl
xchg
add
int3
fldt
je
loope
repz
cmpsl
xchg
dec
in
loope
sbb
mov
jmp
inc
and
in
or
mov
mov
test
bound
inc
sahf
jge
loop
pop
add
mov
push
inc
ss
jmp
out
lahf
insb
cld
jge
int3
pop
inc
and
jg
jl
pop
and
jmp
xchg
push
enter
mov
cld
ds
push
mov
jns
xchg
add
fisubl
jno
cmp
xchg
test
rol
mov
subb
cli
pop
out
xor
or
add
ljmp
bound
aam
aam
addr16
ss
pop
push
cmp
into
jne
and
sbb
adc
ds
push
ret
aaa
push
das
push
imul
jecxz
aad
es
shll
jo
scas
rolb
pop
divb
gs
orb
mov
nop
jp
ljmp
and
inc
sbb
clc
inc
jl
jecxz
subb
call
subl
mov
adc
jle
add
lods
push
add
sub
lds
cmc
push
push
in
mov
into
xchg
jne
inc
jp
loop
movsb
je
mov
sarb
jge
mov
sbb
test
cmc
mov
vmread
pusha
fs
sbb
cmp
daa
dec
inc
sbb
mov
push
or
stc
test
cmp
dec
and
adc
out
bnd
jge
pusha
xchg
sub
and
stos
into
xlat
lret
dec
mov
mov
int
dec
fistps
sub
sahf
push
mov
pop
pop
mov
add
mov
push
or
out
arpl
pushf
mov
nop
out
jmp
movsl
stc
mov
lds
idivw
shl
movsb
xchg
adc
mov
ror
add
or
adc
add
sub
fists
dec
jg
pop
dec
sub
push
push
inc
and
clc
push
xor
push
dec
push
push
inc
push
push
dec
jle
shll
daa
jmp
jecxz
pop
je
movsl
sarl
daa
loopne
xor
and
mov
cmp
mov
jmp
jbe
mov
adc
sbb
in
pop
ret
mov
fisubrs
push
sub
cmp
fwait
jmp
sub
mov
addl
mov
xor
push
imul
stc
dec
lock
xchg
push
insl
jno
jbe
push
add
xchg
in
arpl
inc
cs
out
das
popa
loopne
sti
dec
test
jnp
dec
add
jo
mov
data16
inc
mov
jne
lret
scas
pop
or
lret
sti
jmp
sbb
mov
shr
in
shll
pop
pop
pop
cmp
int3
pop
fsub
inc
xchg
testb
sbb
xor
jecxz
fimuls
push
nop
sbb
outsb
test
adc
dec
xor
xchg
adc
mov
lahf
out
dec
stos
int3
cmpsb
sub
test
and
pop
cmp
add
rolb
and
stc
lret
xchg
jb
rcrb
imul
mov
cmpb
out
std
imul
dec
out
std
or
movsb
and
inc
cltd
out
sbb
neg
loopne
pop
add
cmp
pop
xor
mov
ret
jle
fwait
bound
or
push
pop
cmp
and
push
stos
cmp
mov
add
or
lods
jp
add
stos
mov
dec
jecxz
das
add
dec
out
sarb
into
push
sub
loope
inc
adc
movsb
push
sub
sub
inc
lcall
outsl
ret
ret
stos
mov
pop
es
cmc
cmpsl
push
push
xchg
insb
adc
insl
jmp
cld
and
mov
loopne
testb
sti
pop
sti
inc
movsb
cmp
js
lods
push
incl
mov
popf
mov
lcall
call
notb
dec
pop
sbb
clc
push
gs
inc
mov
mov
sub
sub
xor
gs
lock
jns
push
jo
popf
aam
sahf
inc
fucomip
jecxz
in
psubq
int3
imul
adc
pop
and
mov
and
mov
push
inc
add
and
mov
sbb
adc
fisubl
imul
adc
sbb
push
pop
lds
cli
mov
imul
fadds
mov
iret
mov
sti
arpl
dec
test
push
stc
call
lret
rcll
or
cmp
and
imul
xchg
mov
dec
pushf
mov
test
ljmp
and
test
lcall
or
lcall
inc
mov
xchg
xchg
subl
push
sarl
mov
mov
nop
dec
mov
dec
icebp
dec
bound
fwait
popa
inc
mov
pop
in
adc
ret
insl
mull
iret
ds
sbb
inc
fs
jge
shrb
in
jbe
push
add
jns
add
mov
jg
aaa
xor
and
inc
push
in
and
mov
xor
mov
jecxz
aam
xchg
dec
repz
adc
int
or
mov
jmp
inc
fbld
xorl
add
mov
test
pop
push
add
aad
inc
pushf
inc
xor
mov
xor
cli
js
daa
sub
dec
xor
loopne
subl
ss
pop
mov
pop
imul
sub
bound
xchg
inc
das
cmp
sbb
cmp
mov
xor
and
fs
or
shlb
std
dec
sbb
mov
sti
and
adc
xor
loop
mov
mov
out
adc
repnz
ja
mov
lret
hlt
push
out
lods
pop
mov
xchg
addr16
jo
xchg
adc
mov
bndldx
call
inc
pop
mov
cmp
or
shl
sbb
lods
sbb
cmp
ret
push
xchg
adc
jle,pn
xlat
dec
push
xchg
jns
xor
mov
or
cltd
mov
cwtl
dec
sbb
mov
push
mov
add
mov
lcall
lock
imul
jbe
ja
scas
stc
push
dec
lret
and
pop
or
xchg
sub
or
inc
inc
bound
xor
fcomps
call
in
or
sbb
pop
dec
and
bswap
cmp
call
shlb
or
daa
je
dec
popf
jne
mov
cmpb
fidivrl
fsubr
leave
nop
mov
push
or
pop
jnp
hlt
stc
mov
pushf
xchg
mov
xor
dec
xor
jnp
sub
in
aaa
xchg
outsl
push
out
shl
lds
inc
mov
or
push
push
dec
push
loope
test
lods
add
jle
gs
push
imul
jl
sbb
test
push
push
shll
xor
daa
or
and
push
in
push
push
aad
xchg
sbb
test
ja
sub
and
in
pop
sub
dec
icebp
push
sbbb
adc
sub
push
je
adc
add
inc
pusha
aas
jmp
jns
aam
js
icebp
dec
and
insl
cmpsl
js
imul
pop
icebp
decb
xor
xchg
into
jns
xchg
mov
enter
lret
xlat
loope
out
pop
iret
cmc
out
add
xor
sub
push
fwait
es
push
shl
pushf
ret
xchg
cmp
dec
or
pop
aas
mov
cmc
aas
repz
arpl
mov
add
dec
and
ret
cmpb
xchg
xchg
sbb
push
cmpsl
or
mov
or
and
enter
dec
out
repz
repz
ljmp
popf
pop
lret
dec
fnstsw
xchg
jb
mov
into
mov
mov
push
push
orl
rorl
jb
imul
pusha
sbb
mov
xlat
fidivrs
aam
dec
lcall
pop
jle
fst
sbb
popf
pop
or
adc
arpl
push
sarl
data16
and
pop
mov
fstps
jle
lcall
xchg
xchg
shrb
cmp
add
adc
loop
pop
and
sbb
cs
in
rcrb
iret
xor
dec
divb
subl
dec
jge
ja
shlb
sbb
pop
add
test
add
js
arpl
mov
and
push
out
pusha
pop
imul
jecxz
add
xchg
sbb
pop
pop
ret
mov
mov
dec
aaa
or
test
pop
dec
cmpsb
sahf
cmp
out
mov
xchg
insl
or
cmp
test
cld
mov
repz
ffree
iret
jns
jo
mov
push
add
xchg
lea
mov
aam
leave
incl
add
push
test
cmc
lock
test
lds
xchg
outsb
or
rol
inc
scas
stos
fdiv
outsb
std
jl
xchg
jmp
sarb
sbb
jle
lcall
mov
sbb
sti
cmc
fcmovnu
lahf
hlt
add
shlb
mov
add
lea
push
ss
cmpsb
ja
into
out
sbb
push
lods
or
mov
lret
xor
test
js
jecxz
sbbb
ljmp
mov
dec
dec
xchg
pop
jno
test
mov
lds
leave
aad
insl
inc
mov
or
pop
sub
shlb
jb
jo
jle
loop
mov
mov
mov
aaa
leave
nop
cmp
pmaxub
adc
dec
xlat
arpl
das
movb
out
pop
lcall
stos
stc
ret
xcrypt-ctr
cmpsl
sbb
jp
pop
testb
cmpsl
aam
sahf
xchg
adc
cmp
sub
addr16
cli
cmp
adc
dec
pop
and
daa
aaa
pop
cmp
ljmp
add
cmp
stc
ret
dec
dec
push
xchg
inc
dec
jle
movsl
pop
push
ja
inc
lds
cmp
mov
mov
mov
mov
mov
bound
jmp
push
mov
cmp
outsl
xchg
or
stos
insl
mov
rorl
imul
sub
jecxz
int3
div
push
aas
das
ss
test
andl
aad
fistpll
aaa
dec
pop
sub
mov
jg
push
push
adc
sti
ret
shll
jmp
jmp
pushf
fiaddl
xchg
cmp
loop
cmpsl
in
subb
jno
pop
mov
lods
movsb
mov
stos
or
inc
scas
cltd
jp
lock
fwait
cmc
fsubr
test
imul
push
xor
adc
lcall
lods
int3
divl
mov
ss
loope
sbb
enter
xchg
inc
sub
sbb
jp
xor
xchg
push
aas
lods
adc
int3
push
fxch
ljmp
xor
lahf
or
cmc
cmp
sub
push
pop
lea
pop
loope
cmp
insb
lret
ss
lcall
fcmovbe
fcmovnbe
pop
push
loopne
filds
outsl
stos
fs
imul
insl
in
inc
adc
test
pop
dec
add
pop
and
jecxz
mov
cmp
xchg
mov
xchg
ja
cwtl
mov
mov
mov
add
insl
push
push
lock
jbe
push
pop
adc
dec
push
fidivrl
stos
test
test
cltd
icebp
sti
add
sbb
lahf
inc
push
movsl
add
jge
loop
or
xor
push
adc
sub
sub
ss
rcrb
mov
pop
ja
inc
faddl
jl
jo
fidivs
pop
and
and
es
mov
cmp
or
jp
ja
inc
pop
dec
fsubrs
dec
mov
cmp
ds
stos
lcall
dec
imul
sarb
insb
dec
sbb
sahf
inc
jmp
push
bound
cltd
or
mov
js
dec
imul
and
orl
movl
lcall
add
or
sahf
dec
shll
fstl
sbb
and
lods
push
adc
mov
add
pop
rolb
clc
or
mov
dec
jp
insl
add
adc
ljmp
dec
cmovge
pusha
mov
outsb
ret
push
cmpsb
xchg
call
lcall
mov
rorb
mov
add
lret
cld
cmpl
sbb
mov
inc
mov
mov
stc
jo
jle
cmp
shrl
incl
cmc
mov
into
jle
and
mov
push
cmpsb
add
inc
xor
sub
jae
and
enter
jnp
data16
shl
ds
xchg
jmp
add
scas
inc
repnz
test
xchg
stos
jbe
mov
jno
daa
fcoms
test
test
mov
mov
inc
pop
xor
push
cmpsb
lds
mov
push
fsubs
in
es
add
test
stos
xor
cmc
into
int3
and
imul
lock
mov
imul
lock
pop
scas
sbb
lret
pop
push
popf
inc
push
inc
sbb
push
inc
or
sbb
test
cmp
mov
pop
sbb
sbb
pop
or
inc
and
and
lcall
xor
xor
stos
dec
xchg
icebp
popa
and
cld
test
ficomps
sub
fs
sbb
scas
xchg
addr16
cwtl
add
jmp
mov
cmp
cltd
mov
push
fucom
addl
mov
pop
scas
add
cltd
in
bound
adcl
xor
outsb
sbb
fcmovnu
das
pushf
and
lds
insl
repz
pop
push
add
xchg
outsb
das
es
mov
dec
popa
pushf
sbb
mov
xchg
add
sub
push
out
sbb
add
xchg
clc
pop
pusha
or
aad
cmp
sub
std
sbb
loope
dec
mov
stos
shll
loopne
inc
or
data16
adc
adc
mov
mov
mov
lahf
cmpsl
cwtl
scas
jle
jo
pop
add
test
gs
cmp
dec
xor
xor
test
rcl
xor
outsl
into
call
adc
in
fwait
xor
fwait
inc
out
push
loope
or
dec
xor
rcr
nop
or
xchg
cmc
adc
repnz
push
movb
fwait
ret
push
push
bound
shl
mov
clc
test
xchg
cmpsb
push
xchg
ds
mov
jo
ret
cmp
mov
add
std
xchg
ss
cmp
inc
scas
inc
mov
iret
mov
xlat
add
call
fwait
lcall
jnp
fsubrs
fldcw
sub
cmpsb
pop
cmp
movsb
out
mov
repnz
fsubrl
stos
cltd
pusha
out
sbb
push
xchg
xchg
mov
fmuls
rcrl
push
paddd
sbb
out
call
stc
add
aas
fadd
jbe
dec
out
or
pop
inc
and
sub
push
enter
dec
pop
sub
loope
or
rcrl
or
test
lret
dec
dec
sbb
cmp
jno
js
loope
jecxz
sbb
out
addr16
cmpsl
cmpsb
jl
ret
lods
sbb
and
dec
jp
mov
rcrb
xchg
cmp
and
dec
lahf
test
pop
and
cmp
lods
add
mov
jne
addb
dec
fidivs
dec
incl
mov
sub
sub
aaa
and
fcomp
mov
sub
rcrb
pop
iret
dec
shrb
and
pop
cwtl
shl
adc
addr16
push
dec
ja
push
test
arpl
adc
push
rorb
xchg
stos
add
xchg
fwait
nop
jge
sbb
dec
push
cmp
test
cmpb
pushl
pop
add
arpl
clc
adc
cmp
push
mov
or
cld
iret
aaa
mov
cmp
lcall
sub
ret
mov
mov
adc
cwtl
roll
out
sub
stc
or
mov
push
leave
ds
mov
and
push
jmp
adc
cmp
adc
pop
fisubrl
mov
enter
sub
les
cmp
add
xor
ret
out
imul
in
sub
xor
fs
stos
mov
xchg
mov
add
lcall
popa
inc
ret
and
and
cltd
incl
cmp
sbb
push
subb
pusha
pop
pop
cmp
test
add
push
dec
or
mov
adc
std
out
mov
jmp
mov
insb
adc
mov
pop
gs
pusha
mov
add
fistpll
xchg
jg
jmp
cmp
push
repz
aas
mov
stc
insl
push
or
int
iret
pop
sub
xchg
aas
aad
adc
mov
mov
jns
adc
aaa
popa
sbb
dec
lock
push
ja
out
dec
lds
popf
mov
jl
les
jp
or
inc
idivb
lock
cmc
mov
mov
std
fstpt
pop
cli
loope
pop
xchg
add
cltd
dec
pop
cmpsb
sbb
and
ja
dec
inc
jecxz
xchg
mov
rorl
ret
bound
pop
jo
iret
in
loopne,pt
push
xchg
xchg
push
pop
out
mov
lahf
cmp
icebp
xchg
mov
sbb
add
rolb
cmp
pop
gs
pop
popf
add
mov
idiv
jb
mov
jl
mov
lods
or
imul
out
insb
jae
stos
jo
dec
sub
incb
rorl
cmp
insl
dec
std
cmp
aaa
xor
test
les
inc
outsb
das
cli
cmpsl
inc
inc
fdivrs
cwtl
mov
push
dec
rolb
stc
mov
lea
es
xchg
xchg
sarb
jge
fdivr
ss
push
clc
inc
jl
mov
js
mov
push
in
push
pop
fisttpll
adcb
pop
lret
mov
into
hlt
xor
sub
add
xchg
loop
lret
push
add
cmp
pop
push
push
insb
push
push
test
gs
mov
mov
jge
mov
add
in
arpl
or
or
or
jnp
cli
int
pop
push
pop
adc
mov
fwait
xor
es
mov
cld
inc
jnp
pop
adc
movsb
or
nop
aad
mov
movsl
test
mov
or
cmp
pop
jmp
mov
xor
sbb
scas
sbb
ss
call
enter
nop
sbb
rdpmc
clc
push
js
out
push
int
negl
or
rcrb
mov
nop
xlat
pop
outsb
js
popa
aam
cwtl
lds
push
mov
pop
lret
fs
das
cmp
sub
fstpl
mov
pop
pop
add
cmpsb
popa
adc
cmp
mov
pop
imul
mov
mov
pop
adc
roll
das
test
insl
adc
inc
xor
fstpt
sbb
adc
loop
stos
rorl
data16
lret
ja
inc
testl
push
loop
adc
das
test
dec
xor
in
xor
ds
je
repnz
pop
jns
fbld
jae
test
lods
push
imul
xor
cmp
stc
mov
cmp
mov
rcll
dec
dec
lret
sahf
xor
jl
sbb
sbb
jbe
mov
dec
lods
pop
das
lock
cmp
lock
cltd
pop
jns
and
pop
pop
jl
cmc
jmp
sub
cmp
stc
dec
movsl
cmc
xor
mov
daa
jno
mov
xor
in
insb
cmp
jnp
stos
icebp
movsl
fs
popa
add
jo
xlat
fisttpll
sub
sar
xor
xchg
mov
repnz
mov
repnz
mov
outsl
inc
and
ds
mov
add
mov
loope
or
push
push
push
popa
mov
in
out
shlb
adc
pop
push
mov
sbb
adc
xor
cmp
sub
or
push
mov
leave
into
outsb
xor
cmp
pop
clc
cwtl
stc
decb
addr16
fstps
fisttpl
fdivs
jg
scas
cmp
pop
mov
pop
ss
sbb
cli
adc
xchg
mov
es
cmpsl
dec
cmpb
aas
dec
fs
pop
or
sub
loop
lods
rcll
and
lahf
push
fcompl
popa
xchg
mov
push
xorl
mov
lret
pop
lods
and
pop
repz
testl
mov
or
ja
or
insl
insb
mov
push
jl
mov
stos
gs
mov
insl
test
cmp
les
xor
lret
inc
lret
pop
adc
push
mov
mov
cmp
mov
dec
mov
or
cmp
mov
jo
xor
cs
pop
pop
int3
in
scas
ja
mov
add
pop
pop
clc
mov
faddl
push
mov
adc
pslld
in
imull
roll
in
imul
loope
mov
mov
inc
sub
fwait
stc
lret
sub
sbb
xor
mov
stc
js
push
jno
pop
xorb
ret
repz
push
lret
push
sub
scas
xchg
nop
aas
into
jno
sbb
lods
in
xchg
clc
push
dec
push
xchg
xor
push
adc
lock
je
fs
fbstp
lahf
or
pop
xlat
mov
pop
aad
cvtdq2ps
sub
stos
sbb
fldenv
pop
movsl
inc
loopne
jl
imul
cwtl
iret
inc
popa
adc
add
ret
jle
xchg
lea
daa
std
xor
adc
sub
iret
loope
loope
adc
xor
push
cltd
xchg
rcl
jns
mov
inc
daa
xchg
xchg
mov
rolb
es
movl
jno
stc
out
cmp
xchg
mov
rcrb
scas
mov
jae
xchg
mov
into
mov
mov
or
pop
iret
xor
sub
movsl
movsb
inc
gs
jp
insl
stos
xchg
jns
pop
out
sbb
hlt
or
jg
test
mov
cmpsl
mov
out
jle
stos
adc
inc
insl
cmpsb
sbb
and
xorb
adc
pop
sti
mov
nop
add
mov
je
or
xor
pop
sbb
inc
dec
inc
popf
test
xchg
addr16
icebp
mov
push
mov
sub
jp
mov
fadd
dec
mov
sti
jmp
and
xchg
into
popa
lds
pop
int3
xor
jge
ret
jne
ret
mov
inc
jno
dec
sbb
xchg
mov
xor
sbb
in
inc
out
mov
mov
int3
add
fldl
dec
sub
adc
pop
div
xor
test
pop
sbb
out
or
push
testl
scas
movsl
rclb
data16
push
adc
jb
jb
jge
dec
addr16
imul
int3
jecxz
xor
sti
jo
leave
scas
push
jb
addb
push
add
nop
jae
int3
in
cs
push
dec
mov
or
or
daa
sub
cmp
inc
lods
rcll
push
xchg
outsb
and
ljmp
fimuls
sbb
fstps
xor
push
repnz
adc
std
test
pop
push
pop
pop
test
cmp
mov
test
or
fmull
push
inc
leave
sti
nop
or
loop
and
fptan
pop
ja
sbb
xor
sub
jb,pn
shlb
out
mov
or
bound
mov
out
cltd
sbb
bound
pop
push
daa
cld
push
out
out
push
jmp
push
and
push
leave
xchg
nop
cli
out
icebp
push
mov
mov
data16
dec
leave
and
push
pop
lds
dec
add
inc
and
jns
xchg
jae
popa
notb
inc
jle
mov
out
loope
in
mov
mov
fldt
clc
push
xchg
and
rorl
daa
cltd
pop
sub
daa
cld
pop
push
loop
out
loopne
into
sub
test
jae
scas
xchg
mov
outsb
push
popf
aam
jns
test
xor
jae
arpl
adc
fsubrs
mov
aad
jge
shrl
mov
fnsave
xlat
xor
push
mov
ret
cmp
mov
sbb
cmp
int3
xchg
insl
mov
aad
fs
xchg
mov
sbb
cld
adcb
aas
shll
in
sub
lahf
inc
fisubl
xchg
arpl
pop
loope
sbb
mov
lea
mov
or
popf
mov
mov
icebp
lds
cmp
xchg
cld
cmc
push
jno
out
mov
mov
stos
xor
stc
push
shll
dec
cmpsb
addr16
je
push
mov
dec
pushf
ret
mov
pop
js
aaa
call
pop
xchg
movl
sub
aad
cld
les
nop
sbb
inc
mov
and
lods
xchg
loop
rcrl
repz
lahf
jecxz
loopne
mov
jecxz
aam
xor
inc
xchg
mov
es
loope
mov
aaa
sub
lcall
add
movsb
mov
insl
fcmovnu
dec
repnz
out
push
or
sti
mov
push
push
and
add
sahf
jmp
jno
jae
adc
decb
xchg
aas
leave
ss
mov
adc
int3
and
es
imul
cmp
adc
mov
aad
push
ds
test
or
xorb
xor
jle
test
pushf
and
scas
pusha
divl
pop
sub
clc
jle
fwait
enter
pusha
jb
lds
in
mov
cli
and
pop
sbb
jns
pop
xchg
imul
dec
push
or
mov
jb
xchg
pop
mov
hlt
mov
xchg
sbb
jl
sub
cmp
cmc
push
sbb
cltd
xor
xchg
mov
mov
xchg
cmpb
and
xchg
repnz
adc
sahf
scas
adc
xor
lds
mov
cmpsl
mov
fs
sbb
xchg
sbb
scas
jnp
xchg
stc
cmp
mov
sbb
jno
aam
mov
repz
push
and
xor
call
out
negl
cmp
push
pop
movsb
dec
sub
mov
fwait
pop
dec
jbe
xor
cmp
shlb
lods
sbb
add
data16
stos
push
or
dec
adc
sub
pop
sub
sbb
or
push
inc
push
or
repz
aad
std
es
jl
test
ljmp
mov
sub
into
mov
inc
les
pop
nop
jg
mov
mov
and
pop
push
sbb
popa
sbb
mov
lods
fcmovnu
push
cld
xor
sti
push
jp
cwtl
push
xor
test
push
addl
in
inc
jbe
scas
pop
xchg
pop
pop
jo
jae
sbb
sub
xor
in
jnp
in
add
das
cmc
inc
out
mov
sub
xchg
arpl
cld
cmp
iret
adc
fcmovu
mov
cli
bnd
enter
stc
sbbb
inc
jo
ficoms
outsl
call
and
adc
rorb
jns
xlat
in
iret
lahf
or
push
lods
sub
scas
push
sub
jmp
iret
add
mov
fcomps
lahf
fisubrl
xor
xor
cmp
enter
jge
dec
cmp
mov
xor
dec
push
aad
push
int3
aaa
repnz
dec
popa
dec
xor
xor
mov
push
push
aas
xchg
test
push
mov
jg
loop
jbe
sub
ret
pop
mov
stc
fcoms
push
mov
shll
jecxz
sub
popa
jno
lret
in
es
test
adc
sbb
mov
ret
pop
inc
cmp
iret
inc
pop
cmp
and
mov
or
adc
out
fdivr
and
test
stos
sub
mov
push
add
andb
pop
dec
xor
mov
cmp
or
sbbb
fistpll
pop
jnp
cmp
inc
dec
dec
mov
es
mov
into
jmp
inc
ss
mov
cmp
xchg
inc
mov
lds
ljmp
mov
in
shrb
das
ja
or
add
stc
out
faddl
sub
mov
sahf
jmp
out
xlat
jnp
in
inc
int3
jmp
mov
or
cmp
mov
sbb
cli
sbb
jbe
sbb
dec
in
repnz
cmp
cmp
push
and
mov
push
push
popf
mov
push
fsubp
testb
and
mov
cltd
dec
mov
sbb
inc
xor
sub
jb
dec
sbb
out
mov
and
and
inc
movsb
stos
stc
mov
and
xchg
cs
add
mov
xchg
push
pop
lret
movsb
push
mov
dec
push
jl
xchg
xlat
mov
mov
push
sbb
and
or
xor
mov
jg
add
fwait
ret
shlb
bound
cld
int
sar
cmpsb
and
sub
cmpsl
add
inc
adc
cmp
dec
lock
pop
ret
jns
ret
out
testl
popf
jb
pop
in
or
iret
push
arpl
pop
mov
scas
ljmp
jnp
inc
iret
femms
inc
pop
sti
push
cmp
jbe
in
add
pop
cltd
scas
or
sbb
push
cmp
out
insb
xchg
adc
lret
aas
out
pushl
adc
and
mov
jns
mov
loope
nop
mov
insb
jecxz
pushl
mov
andb
movsb
out
addr16
ret
xchg
push
add
enter
cltd
jp
jmp
out
loope
lret
je
rclb
sub
cmp
adc
mov
cmpsb
into
and
mov
loope
roll
cmp
das
test
adc
popa
push
jecxz
int3
sarb
adc
cmp
loop
jae
loopne,pt
shl
mov
loop
lcall
shrl
mov
sub
dec
mov
scas
xchg
sbb
jb
test
add
repz
std
inc
lahf
push
add
outsl
push
cltd
xor
adc
cli
shlb
shl
ja
or
push
aaa
adc
mov
fs
movsl
lahf
sub
fmuls
dec
es
into
mov
das
mov
daa
mov
jmp
dec
mov
jns
mov
lods
das
clc
and
fcompl
loopne
mov
adc
orl
aas
repnz
sbb
add
xor
cmp
mov
xor
mov
mov
jnp
add
cmpsl
aaa
lea
pop
enter
or
sub
add
movsb
cmpsl
jl
jne
ja
mov
cmp
jge
push
pop
xor
jbe
push
adc
stc
cmp
and
repz
xchg
aaa
jae
sbb
bnd
sub
mov
pop
testb
mov
mov
and
lock
jbe
pop
fwait
xchg
mov
mov
pop
push
jo
clc
gs
roll
pop
clc
mov
rcrl
ljmp
sbb
lret
bound
mov
xchg
in
lea
aaa
ret
inc
mov
rorb
stos
jne
mov
inc
test
mov
sbb
jb
mov
sub
ds
pop
dec
addr16
jg
mov
push
pop
lods
dec
out
or
mulb
push
out
rorb
push
dec
inc
in
or
jecxz
jp
sub
lods
lret
mov
ljmp
hlt
push
adc
gs
inc
pop
sbb
rcl
das
xor
inc
jl
pop
stc
pop
gs
jp
push
sarb
adc
cwtl
popf
rorl
incb
movsb
jg
sub
sbb
bnd
and
shrb
icebp
out
icebp
sub
dec
xlat
jae
pop
das
mov
aad
test
xchg
xchg
push
sbb
aad
xor
and
movsb
aaa
and
or
mov
xor
push
or
lea
push
lods
push
push
or
cmp
iret
dec
movsl
mov
mov
push
xor
lea
push
ja
loopne
pop
pop
faddl
pop
push
test
loop
rol
push
out
int3
dec
pop
das
adc
jecxz
mov
movsl
or
clc
jle
mov
loope
adc
inc
imul
leave
stos
jmp
inc
mov
mov
and
rorl
jg
iret
rorl
or
data16
ds
mov
xchg
aas
in
stos
xchg
rol
je
push
out
aas
pop
sbb
insl
nop
xor
out
jg,pt
jo
cmpsb
into
rclb
mov
push
hlt
adc
cmp
popa
lds
mov
or
adc
or
mov
adc
mov
cwtl
inc
mov
outsl
pop
es
rcr
fdivp
inc
ljmp
xor
dec
sub
xor
repnz
sub
loopne
mov
and
ljmp
lret
xor
loop
cmp
cmp
mov
push
mov
mov
and
pop
out
pushf
cmpsb
jp
mov
popa
test
cmp
das
dec
and
jns
or
inc
jp
push
and
mov
fwait
sub
es
cwtl
enter
adc
inc
mov
in
mov
fldenv
fs
leave
shrb
fstps
inc
pop
xchg
cmp
frstor
scas
jmp
aaa
or
stos
outsl
jne
fisubl
push
fisubl
icebp
xlat
pop
testb
mov
int3
sbb
sbb
xor
pop
mov
adc
push
mov
mov
inc
add
imul
fnsave
and
int3
xchg
jbe
rorb
insl
cltd
ljmp
pop
mov
jns
xchg
inc
cld
js
jmp
and
loop
xchg
push
sbb
jae
sbb
adc
cmp
push
dec
sbb
iret
mov
fsts
dec
sub
lea
and
or
jns
call
bound
adc
xchg
pop
ret
add
mov
ss
mov
sarb
adc
iret
and
popa
out
add
mov
push
adc
lock
adc
push
call
sahf
xor
pushf
cmpsl
cmp
or
jecxz
add
shlb
sar
sti
inc
xor
cmp
mov
adc
fimuls
aam
push
jno
xor
xchg
fsubs
jbe
lahf
pop
adcb
gs
xchg
cltd
and
fnstenv
repz
and
and
mov
adc
in
ss
jne
dec
pop
std
push
xchg
lret
inc
mov
and
mul
inc
and
out
pop
adc
add
movsl
push
fistpl
mov
dec
jae
xchg
ficoms
xchg
xor
push
push
popa
movsb
fistpl
pop
dec
stc
add
fbstp
push
das
or
cwtl
dec
cmp
xor
mov
in
xchg
sub
add
inc
divps
dec
cmpsb
ret
pop
insl
cmp
xor
lock
cmp
cmpsb
ljmp
push
mov
dec
mov
test
push
push
jp
cmpb
test
test
mov
in
pop
jne
int3
dec
scas
mov
push
popa
es
imul
sub
lods
lds
xor
or
leave
pop
ret
test
adc
cmpsb
xorb
inc
mov
xor
sbb
sbb
into
fdivrl
dec
in
daa
scas
mov
pushf
jecxz
xor
push
inc
movsl
scas
add
imul
clc
push
cmp
adc
and
mov
fcmovnbe
jne
and
lds
out
cld
pop
mov
push
test
mov
push
into
xchg
fdivrs
repz
xchg
mov
pop
mov
push
lods
adc
inc
out
aad
mov
mov
cmp
lods
add
jg
jg
cltd
inc
pusha
push
cmovnp
xchg
mov
xor
addr16
cmp
shll
jbe
bound
push
pop
aad
jnp
jge
rcrb
jl
imul
ss
hlt
jnp
cli
movsb
lret
shlb
movsl
lcall
sub
pop
std
cmpb
ds
mov
ljmp
jb
popf
push
and
jns
cmp
fnstsw
jb
pop
lods
out
mov
mov
push
test
jb
lcall
repnz
punpckldq
shll
jae
das
cwtl
sub
jbe
stc
cmc
cmp
mov
les
bound
cmp
mov
iret
setno
test
fs
xchg
mov
mov
icebp
and
js
imul
imul
push
ret
and
push
outsb
or
inc
sbb
or
decl
add
sbb
idivb
add
inc
lret
lret
cpuid
inc
dec
pop
fadds
in
lods
into
insl
jnp
jle
fdivrs
fiadds
sub
lahf
gs
jo,pn
imul
mov
fnstsw
aas
inc
int3
jg
mov
cmp
cmp
sbb
push
sub
inc
jge
icebp
xchg
je
push
lcall
in
push
cmp
repz
inc
xorb
or
lret
push
or
adc
xor
pop
gs
cltd
add
lahf
jp
xchg
test
cmp
or
je
inc
pop
adc
push
fistpl
dec
add
dec
lret
mov
pop
popa
sbb
mov
loope
sbb
clc
mov
enter
fcoml
ror
or
cs
call
adc
dec
bnd
mov
sub
add
fcoml
cmp
cmc
or
sub
nop
sub
jmp
pop
sbbl
loop
or
xchg
lea
mov
data16
cmp
in
enter
std
jae
cli
add
mov
mov
jnp
jbe
xlat
lock
outsl
push
cld
out
mov
adc
pop
cld
sahf
mov
jecxz
mov
daa
sbb
outsb
pop
inc
pop
sarb
loop
imul
inc
xchg
jns
push
jb
xor
sbb
stc
sbb
xchg
stos
shrb
cmc
add
pop
loope
mov
pusha
arpl
push
inc
popa
adc
add
mov
jae
xor
in
mov
imul
push
int
flds
es
mov
lods
rcll
fwait
loopne
push
or
push
adc
adc
mov
jae
mov
mov
fsubrl
sbb
push
jno
mov
jge
dec
shrl
lods
pop
or
es
in
lods
fwait
imul
imull
rcrb
push
mov
stos
jmp
dec
jo
adc
jp
mov
rcll
cltd
push
or
xorb
repz
cmp
push
rclb
push
xchg
test
xchg
add
sub
add
arpl
and
es
in
xor
fdivs
les
shll
pop
sbb
rcll
adc
jb
test
fadds
adc
or
inc
jl
dec
dec
push
push
pop
jg
pop
dec
cmp
bswap
clc
insb
in
mov
fidivrs
sub
pop
mov
addr16
xlat
enter
adc
xchg
or
je
adc
clc
sbb
add
and
xor
mov
int3
jecxz
mov
sbb
add
inc
push
pop
cmp
lcall
je
mov
cltd
addr16
dec
mov
push
div
push
adc
push
int
pushl
xor
push
xchg
cmp
xor
inc
daa
shrb
in
sahf
dec
in
cmp
into
jo
cmc
and
pop
aaa
jle
inc
or
movsl
pusha
cmc
aas
xchg
loop
hlt
mov
lds
mov
hlt
jp
lret
mov
adc
xchg
jo
outsl
push
sub
jmp
add
imul
push
or
pop
add
cmp
mov
xchg
shll
lods
nop
orb
inc
sub
jno
scas
inc
push
shll
fwait
shrb
mov
lods
dec
sbb
jecxz
push
cltd
js
jmp
lock
xor
test
stos
mov
add
inc
imul
lcall
add
mov
aaa
push
stos
out
push
or
mov
inc
scas
pop
cmpsl
cmc
cltd
cmp
movsb
jp
add
test
dec
mov
mov
pop
into
sub
xchg
or
shrb
gs
leave
std
mov
jecxz
adc
jnp
sbb
adc
arpl
movsb
cmpb
cmpsb
rorl
test
inc
mov
push
ret
aas
mov
jb
aad
mov
int3
xor
add
movsb
mov
xor
push
mov
add
out
xchg
cmp
push
mov
dec
das
test
stos
cs
jb
mov
cmpsb
xor
rorb
push
fsubrs
inc
int3
mov
pop
jne
cltd
mov
insb
out
popl
push
lcall
jne
sti
negl
les
dec
popf
sub
sub
and
inc
mulb
add
sub
ja
test
out
jge
sti
or
call
and
jne
insb
popf
sub
push
aas
xchg
jne
ret
mov
ljmp
insl
popf
dec
jo
mov
clc
add
ja
ja
scas
sbb
popf
jp
fisttpl
sub
jle
cmpsb
popa
imul
push
or
mov
mov
imul
or
fadds
sbb
push
aad
mov
lret
addr16
lret
mov
pushf
xchg
xchg
jl
pop
cmpsl
inc
push
int3
pop
shrl
push
mov
add
push
shrl
cmpsl
mov
dec
cli
or
cwtl
aad
aad
xor
stc
or
jl
jno
dec
imul
js
mov
pusha
dec
mov
cmpl
lds
mov
nop
rolb
movsl
cmp
test
mov
mov
sbb
fld
xor
pop
lods
push
pop
jle
sbb
nop
sahf
and
out
sbb
jle
sbb
je
int
sub
xchg
mov
loopne
test
or
int
ficoms
xor
lret
lahf
jp
faddl
xchg
mov
fs
jge
push
add
jno
mov
jno
pop
dec
jae
dec
or
fyl2xp1
jnp
lret
and
xor
push
je
sbb
rcrl
jecxz
push
xorb
fxch
dec
aaa
movsl
daa
sbbb
sbb
insb
in
push
gs
call
jl
out
in
pop
lahf
mov
cmp
ds
ret
data16
std
cmp
sub
lret
pusha
adc
mov
aad
loop
pop
popf
push
pop
push
fwait
inc
pop
lret
cmp
mov
loope
sub
xor
mov
rcll
push
jmp
js
mov
fmull
inc
mov
adc
test
sbb
int3
test
jp
add
mov
xor
test
scas
xlat
test
mov
add
loop
mov
cs
lcall
and
in
lret
popf
int3
push
mov
dec
loop,pn
pop
mov
or
enter
and
xor
data16
jmp
dec
cmp
pop
xchg
mov
cmc
rcl
fcomip
push
mov
xchg
imul
mov
stc
xor
cmp
pusha
sarb
aam
imul
repnz
bnd
push
movsl
inc
add
sbb
in
bound
add
jae
mov
pop
jb
adcl
out
aad
notl
add
aas
push
orl
push
lcall
mov
or
loope
out
fcoml
bound
mov
lock
movsl
mov
mov
outsl
or
cmp
lods
cmp
lret
xchg
xchg
fwait
stos
pop
jp
jg
push
pop
das
cmp
cld
in
fiadds
mov
lret
dec
arpl
mov
push
pop
mov
sub
inc
xchg
aas
nop
mov
icebp
ljmp
push
mov
mov
insl
sti
mov
pop
movsl
sbbl
dec
orl
test
push
cmc
sub
clc
pop
mov
test
xor
jo
mov
ljmp
jb
mov
repz
addr16
icebp
dec
cmp
out
pop
test
rorb
push
imul
add
mov
addr16
mov
mov
inc
add
push
push
mov
adc
or
or
jno
movsl
out
fwait
adc
xchg
leave
inc
mov
jg
iret
pop
xchg
inc
mov
into
mov
xchg
mov
dec
jo
xchg
pop
and
add
cmc
mov
stos
mov
ds
sub
adc
mov
aaa
add
lret
shll
mov
jecxz
or
clc
mov
test
and
ss
je
jle
adc
xchg
dec
inc
xlat
les
sub
and
inc
arpl
push
dec
mov
and
xchg
mov
xchg
mov
icebp
js
pop
dec
jecxz
testl
push
sbb
push
les
inc
push
outsb
lods
sub
jle
nop
movl
push
loope
mov
push
pop
pop
cmp
jecxz
test
pushf
ljmp
mov
pop
inc
std
mov
push
mov
xlat
sbb
push
fucom
out
mov
jecxz
sahf
dec
xchg
xlat
sahf
enter
sti
fnsave
sub
fildl
xchg
sahf
js
adcl
xchg
scas
fcoml
dec
adc
lcall
fidivl
sbb
cltd
xchg
out
pop
mov
je
xor
jp
lret
je
inc
sti
cli
ret
pusha
add
mov
andb
xchg
cmpsb
mov
sbb
pop
and
mov
xor
xchg
outsb
pop
lods
jnp
jno
jg
jg
mov
sub
xor
mov
leave
popfw
xor
fdivl
int3
sarb
in
pop
xchg
fdiv
inc
in
outsb
mov
push
fimull
daa
fs
stos
jmp
loop
pop
xchg
xlat
cli
sar
mov
ss
mov
int
fists
adc
add
or
pop
cs
aaa
in
fdivrp
xor
xor
iret
xchg
xchg
pop
mulb
dec
mov
cmp
in
adc
jg
pop
ret
mov
inc
popa
push
jle
pop
xchg
fs
fld
int3
pop
lret
test
push
mov
sti
stos
sub
jmp
and
mov
outsl
icebp
xchg
sub
sub
push
pop
addl
arpl
movsb
push
xchg
dec
test
dec
xchg
pop
inc
mov
pop
or
divl
fisubs
daa
cmpsb
sub
adcb
gs
int3
adc
lret
es
aas
inc
sbb
xchg
shll
and
aam
idivb
stos
shl
cmp
ficoms
dec
repnz
sbb
jge
stc
dec
frstor
xchg
mov
push
jp
sub
ja
cmp
rorl
lods
in
movsl
and
pop
jo
and
mov
mov
test
xchg
xor
sti
out
or
xor
push
mov
mov
dec
ja
les
popf
loope
mov
mov
adc
push
lcall
xor
addr16
xlat
fxch
das
test
aas
xchg
test
faddl
push
sub
or
inc
nop
xchg
movb
mov
notb
pop
in
jmp
lods
pushf
int
sahf
and
int3
jae
mov
das
imull
ret
hlt
fists
stc
inc
mov
add
mov
scas
movsb
sbb
movb
jge
jge
add
pop
or
ds
lahf
mov
mov
xchg
cmp
out
add
jno
pop
push
push
dec
aas
and
std
and
cmpsb
loop
pop
cmc
scas
lods
iret
mov
fstpl
add
push
pop
cltd
jecxz
mov
gs
inc
scas
pop
cmpb
popa
add
xor
icebp
std
mov
repz
dec
mov
stos
data16
push
pop
jl,pn
cmp
out
push
dec
insb
test
imul
jnp
sbb
les
sbb
push
test
mov
add
call
push
push
add
mov
mov
into
push
out
rsm
push
cmc
mov
jge
sbb
rorl
jge
sti
push
out
fs
mov
and
loopne
aad
mov
sbbl
mov
outsl
inc
dec
adc
imul
fisttps
cmpsl
adc
adc
dec
stos
xchg
inc
sub
cli
mov
pop
ja
sahf
mov
mov
enter
dec
addr16
push
decl
mov
xchg
mov
dec
adc
sti
dec
push
not
mov
add
pop
add
inc
jle
lahf
inc
adc
sbb
jp
js
lods
stos
dec
fbstp
fisttps
dec
negb
mov
fistl
lock
fsubrl
mov
fsub
mov
xor
jge
test
push
inc
pop
jmp
out
dec
icebp
cli
aas
call
repz
je
arpl
and
jae
ds
mov
cli
add
mov
sbb
sub
loopne
out
mov
jns
dec
lret
pop
and
ljmp
insl
clc
push
scas
sbb
xor
aas
dec
daa
add
add
mov
push
call
cmp
popf
scas
test
insl
cmpsb
mov
xchg
orl
and
pusha
ja
rorl
inc
add
lods
pop
mov
inc
sarl
ss
mov
iret
shlb
mov
lock
sahf
jno
pushf
cmpsb
push
gs
push
xor
adc
scas
fwait
add
xchg
or
push
test
and
lret
scas
add
mov
lret
push
xchg
mov
lahf
call
in
mov
loopne
rclb
cmp
adc
dec
xchg
in
adc
or
pop
dec
daa
test
lods
sti
add
mov
lods
add
xchg
xor
xchg
jmp
popa
pop
jns
test
mov
mov
mov
mov
inc
xchg
and
es
test
inc
cmp
loopne
inc
xchg
mov
lret
sti
add
jae
xchg
or
ljmp
imul
repnz
mov
cmp
push
out
jnp
inc
dec
int
inc
cwtl
cmpsb
stos
fisttpl
adc
js
je
dec
insl
inc
jnp
push
push
stos
mov
repz
add
daa
es
cmp
cs
and
ss
fiadds
mov
sub
mov
mov
jns
or
adc
cmpsl
cmp
pop
cmp
test
xchg
stos
cmp
and
insl
or
push
lret
jle
repnz
jp
pop
mov
add
jmp
fs
fnstsw
jno
mov
xchg
leave
fistpll
mov
bound
jnp
out
mov
mov
dec
int
test
mov
dec
nop
mov
cmpsl
mov
rcl
or
mov
pop
jmp
mov
cwtl
jno
gs
cmc
xchg
jb
das
insl
mov
jp
fnstenv
or
popa
pop
test
aad
mov
push
sub
mov
xchg
test
add
hlt
pop
mov
fidivrl
sub
sub
out
inc
or
idivl
loopne,pn
xor
push
sub
iret
out
fadds
inc
pop
xchg
add
or
stos
fdivrs
hlt
lcall
fidivs
sbb
or
mulb
popf
mov
jp
ficoms
mov
mov
insl
stos
outsl
loope
dec
pusha
jae
sbb
in
loopne
scas
scas
mov
xchg
lods
cmp
in
enter
pop
hlt
out
popf
insl
int
and
mov
test
sbb
lods
cmp
sbb
cld
cmp
adc
jp
icebp
mov
in
repnz
insl
stc
mov
xchg
xchg
or
outsl
cmp
test
push
insb
cmp
cmp
scas
xlat
jg
and
lret
out
xchg
ja
movsb
in
push
cmpb
cltd
enter
sbb
out
mov
sub
pushf
mov
in
sbb
jbe
or
aam
movsb
adc
adc
negl
inc
lods
sub
sahf
shl
adc
sarb
add
fsubrs
std
pop
stos
or
or
dec
xor
push
sbb
je
push
jl
xor
jge
test
repnz
imul
call
pop
test
sti
test
mov
gs
repz
les
push
adc
fiaddl
jbe
pushf
fisubrs
dec
shl
arpl
mov
cmpsb
mov
push
cmpsl
gs
xor
or
dec
and
dec
in
cli
es
scas
out
out
pop
hlt
adc
int
push
cli
lods
push
jnp
dec
push
iret
mov
fs
or
popa
xchg
js
cmp
and
iret
adc
movsl
adc
clc
push
dec
pop
jmp
scas
popa
ds
int3
popa
std
sub
inc
pop
ss
add
lods
xchg
jo
sarl
mov
inc
into
inc
cmpsl
add
repnz
jge
hlt
loop
jg
test
leave
and
or
xchg
xchg
scas
in
aas
pop
insl
mov
mov
mov
bound
xchg
loope
push
push
adc
jle
lods
dec
scas
popf
mov
cmp
mov
rcll
xchg
or
pcmpgtd
cmp
sbb
clc
xor
push
xor
movsl
mov
fwait
mov
jne
xor
fsubrl
mov
clc
fld
inc
cld
enter
fwait
sbb
mov
test
daa
iret
ss
sbb
inc
inc
stos
insb
dec
xor
sbb
xchg
sub
mov
push
das
jo
scas
mov
or
mov
loop
jns
mov
lods
daa
mov
pusha
adc
jns
xchg
inc
movsb
out
jb
int
cli
xor
mov
push
out
mov
or
les
and
hlt
sub
mov
or
mov
mov
dec
sbb
and
inc
lcall
xchg
xchg
imul
or
mov
sbbw
in
lea
push
ja
sub
cmp
xor
jae
jno
xor
outsb
cltd
fsts
cwtl
ja
cmpsb
fidivs
dec
or
adc
pusha
inc
inc
ret
inc
sub
addl
adc
push
repnz
xchg
aad
icebp
sub
stc
leave
push
in
pusha
mov
mov
add
adc
lods
sbbb
pop
jnp
out
push
mov
xor
dec
stc
mov
mov
jle
push
ljmp
enter
incl
mov
and
dec
inc
xchg
outsb
lahf
mov
and
loop
pop
cltd
in
iret
cs
mov
xchg
ret
stos
mov
inc
push
lcall
aam
xchg
shrl
sub
and
xchg
fstpl
push
adc
xlat
pushf
inc
or
and
repz
xchg
xchg
mov
xchg
add
inc
sbb
dec
mov
add
xchg
cmp
idiv
fcomip
sahf
decl
pop
adc
add
mov
stos
xchg
add
in
adc
and
jno
push
sub
mulb
fidivrl
pop
imul
rcl
leave
mov
ret
outsb
jmp
test
or
mov
mov
mov
add
jne
out
mov
in
negl
sbb
shrl
daa
arpl
test
jl
popa
pop
and
pop
dec
das
ret
push
pushf
mov
push
cmpsb
repz
and
pop
push
mov
sbb
mov
cmc
adc
mov
stc
adc
pop
outsb
rorl
pushf
cltd
bound
stos
loopne
mov
fistl
loope
aad
jmp
enter
jo
push
sbb
je
add
popa
mov
adc
ljmp
movl
into
xchg
sub
dec
dec
pusha
aam
pop
stos
inc
loopne
mov
or
out
mov
and
sub
leave
mov
outsl
test
xchg
stc
dec
insb
dec
pop
mov
jmp
inc
mov
leave
out
jae
shl
push
push
scas
lret
dec
loopne
cmpsl
jmp
pop
rorl
fiaddl
into
cmpsl
popa
cs
cli
outsl
data16
pop
sbb
aam
or
repnz
fwait
fwait
inc
fstps
add
sub
xor
stc
sub
mul
sti
dec
mov
arpl
out
inc
aas
movl
dec
cmp
pop
jg
push
pop
shlb
jge
test
int3
out
mov
xchg
loope
pop
jmp
mov
xor
int3
repz
xchg
inc
inc
mov
push
int3
out
and
loop
lock
jle
movsl
lods
mov
jbe
iret
push
loop
in
mov
rorb
add
jmp
vxorps
sub
adc
imul
fmul
pop
test
test
mov
push
inc
sbb
movl
inc
popa
cmc
movsl
push
fdivl
add
add
ret
mov
dec
push
cmp
mov
xchg
mov
jp
ret
pop
pop
cmc
int
lcall
js
xchg
std
cmpsb
popa
fiaddl
push
xchg
inc
loope
outsl
inc
loop
enter
xchg
movsl
jmp
stos
dec
or
scas
mov
pusha
add
sub
jno
mov
or
xchg
adc
sbb
xchg
lret
jnp
pop
cmp
out
lock
inc
stc
stos
outsw
cwtl
inc
adc
xorb
rcll
lock
jns
jb
mov
sbb
xchg
xor
mov
lcall
xchg
dec
sub
clc
push
icebp
ds
push
mov
fnstcw
push
cs
pop
or
sub
imul
fstpt
lret
sbb
sbb
mov
movsl
xchg
add
lahf
add
xor
or
inc
dec
dec
pop
pop
pop
lods
xchg
add
fs
dec
in
jmp
ficomps
ret
fadd
add
lahf
pop
popf
mov
mov
ret
jae
sti
test
mov
inc
jo
add
push
sub
shll
xor
test
pop
pop
mull
cld
jmp
lods
ss
pop
pop
xlat
addr16
jle
popf
push
sbb
pusha
mov
push
sbb
and
mov
sub
mov
call
popa
mov
subb
sti
mov
es
xor
jl
push
push
xlat
xchg
test
jne
inc
scas
sbb
or
ds
out
stos
aam
inc
mov
pop
cmp
stos
push
fildll
scas
and
cmpb
dec
pop
inc
xchg
data16
mov
lds
test
fadd
sbb
in
dec
jecxz
iret
mov
xchg
sbb
push
jbe
xchg
add
mov
out
and
int
mov
imul
and
in
movsb
xor
test
in
arpl
add
jecxz
xor
ret
loop
adc
sarb
les
fnstenv
pop
jge
adc
sahf
dec
or
clc
icebp
mov
ljmp
xchg
push
jl
rolb
lods
out
in
push
mov
sarb
lods
or
xchg
lcall
loope
or
dec
rcrl
cmp
out
insl
out
lock
mov
mov
dec
mov
dec
aam
sub
movsl
movsb
test
out
cmp
and
hlt
or
repnz
mov
aad
fildll
mov
hlt
sub
pop
mov
repnz
mov
jo
das
xor
out
mov
fcomps
mov
lea
pop
push
cs
aaa
push
loopne
dec
add
cmp
pop
pusha
jmp
outsb
daa
inc
adc
jge
jne
cld
cltd
mov
sbb
lret
leave
or
gs
sbb
jno
mov
in
pusha
dec
pop
sbb
aas
or
sbb
lea
adc
stc
in
fwait
push
mov
pop
shlb
pop
mov
pop
sub
sahf
outsl
movsb
xchg
dec
fdivp
xchg
sub
dec
je
shlb
test
sar
pop
das
mov
mov
stos
mov
roll
test
push
push
sbb
test
bound
sub
jbe
pop
daa
dec
sbb
xor
inc
xor
mov
add
pop
add
popf
insl
std
pop
dec
lcall
sti
mov
pop
mov
lods
nop
cmc
xor
xor
aaa
cmpsb
and
lcall
shlb
icebp
pop
ret
cwtl
pop
mov
test
mov
inc
in
test
inc
cmp
xchg
adc
loopne
pop
xchg
or
xchg
sub
aas
push
jae
loop
jno
orb
repnz
dec
jl
sarl
les
cmp
push
mov
mov
lods
stos
sbb
jmp
inc
cmp
dec
and
ret
cmp
fcmovbe
pop
fwait
push
adc
xchg
push
mov
dec
cmp
iret
out
rcll
enter
pop
pop
sub
ds
adc
jmp
xor
out
lret
sbb
test
fisubs
xchg
int
ljmp
inc
or
mov
pushl
xor
dec
pop
aaa
mov
fdivl
sub
pop
adc
call
cld
mov
std
push
test
jns
das
sub
scas
imul
lret
test
daa
mov
jg
push
je
mov
fwait
stc
lret
shll
imul
fsubr
sbb
xchg
test
jne
sub
push
pop
adc
mov
sub
cmp
cmp
mov
dec
rcll
adc
hlt
pop
insb
inc
cwtl
mov
inc
xchg
sbb
and
divl
cmc
and
push
test
jbe
call
lcall
jg
sti
xor
loop
pop
addr16
jne
jle
dec
cmp
jns
leave
cli
and
ja
leave
ret
push
pop
sbb
push
fidivrs
sahf
or
stos
xor
adc
pop
inc
sub
sarl
icebp
cmp
pop
lock
xor
hlt
and
sbb
cmpsl
add
sbb
out
std
std
ja
xor
sub
jp
addb
xor
adc
test
je
in
sbb
les
push
cli
aaa
mov
mov
mull
ljmp
cmp
jb
scas
test
roll
aaa
jns
mov
mov
nop
in
or
inc
int
mov
repz
das
add
fdivs
adc
adc
add
xchg
or
jmp
ret
jae
dec
jae
adc
or
xchg
jmp
movl
lret
fistpl
test
adc
in
std
adc
cmc
adc
dec
sbb
movsl
mov
scas
mov
add
jae
pop
push
mov
ret
icebp
test
mov
mov
cmpsl
adc
cmp
or
xlat
jp
xchg
imul
cli
call
mov
aad
bound
hlt
daa
xchg
cmp
pushf
push
mov
in
popa
ja
movsb
add
mov
int3
sbb
jl
push
xor
insl
jge
mov
fcmovnu
mov
outsb
pop
xchg
in
mov
dec
fcomp
add
jg
sahf
mov
cli
fsubl
cltd
loope
push
jno
mov
push
repz
xor
sbb
ja
sarb
enter
adc
mov
inc
leave
lods
sub
fwait
in
nop
xorl
pop
mov
ds
cltd
cmp
test
xor
xchg
imul
sub
or
jge
inc
psubsw
call
loop
mov
xchg
or
xchg
fs
adc
cwtl
fs
lods
es
xlat
mov
aam
sub
mov
dec
fiaddl
mov
aam
sbb
lcall
pop
popa
and
pop
gs
lods
rcl
daa
adc
lods
fcompl
add
push
pop
imulb
push
into
and
mov
add
cmp
sbb
mov
iret
test
outsb
ret
insl
jmp
xchg
fldcw
call
adc
int
add
pop
rolb
push
pop
pushf
xor
call
loop
popw
scas
in
ret
jmp
cli
pop
outsb
mov
mov
cmp
sbb
stc
jp
andb
add
mov
or
mov
jp
or
xchg
pop
push
cli
xchg
sub
push
mov
imull
repnz
or
add
mov
dec
mov
movsl
push
nop
std
or
mov
inc
cmp
addl
nop
lea
dec
out
loop
into
mov
pop
ja
push
imull
push
inc
aas
fisubs
shll
notb
add
inc
lahf
orb
push
mov
hlt
cmpl
xchg
push
mov
das
push
pop
in
ss
pop
gs
ret
pop
push
repz
out
push
or
sbb
out
int
cmp
cmp
pop
out
cmpsl
repnz
xchg
arpl
xchg
mov
push
std
pop
cmpsb
pop
movsl
jg
cmp
pop
dec
mov
push
jecxz
loop
sub
inc
sub
sub
and
sub
dec
xor
add
xchg
lock
push
out
je
push
cld
jg
shlb
sti
cmp
ja
mov
xchg
cltd
mov
in
call
pushf
fcomps
sbb
jb
lds
mov
push
cmp
fistl
into
pop
imul
pop
mov
sbb
dec
jecxz
int
jo
mov
lcall
test
int3
push
cmp
or
insl
or
or
fdivrl
mov
push
pop
pop
xchg
cli
repz
jle
ja
ds
or
sub
sub
lods
jno
jns
pushl
inc
ret
cmc
loop
mov
or
mov
test
xchg
lahf
clc
dec
pop
mov
mov
rcll
cmp
pop
cmpsb
cltd
mov
pushl
mov
xchg
lea
insl
jl
and
aas
cli
aas
adc
inc
int3
stc
xor
mov
jl
pop
in
add
fcoml
test
aad
add
testb
pop
dec
xchg
mov
gs
popl
ds
ljmp
insb
jmp
xchg
xchg
xlat
cmp
xlat
rcll
sbbb
or
add
and
and
in
pop
mov
fndisi(8087
stos
roll
fidivs
xchg
cmp
xor
adc
xchg
in
inc
iret
shrl
cs
xchg
inc
popa
je
inc
add
addr16
inc
mov
jae
xor
dec
popa
dec
inc
insl
insl
sarb
push
jns
and
iret
lea
js
shl
std
clc
adc
mov
mov
inc
lret
fimull
adc
call
repnz
js
add
pop
bound
xchg
cmp
daa
loopne
cmp
inc
cmp
xchg
stc
xchg
std
mov
clc
pusha
test
mov
imul
rolb
test
cmp
xchg
jge
pop
pop
popa
setne
inc
cwtl
aad
in
push
push
adc
push
add
mov
push
jecxz
stos
pushf
scas
lcall
mov
mov
mov
je
add
ds
or
push
dec
mov
or
pop
and
outsl
xchg
mov
and
jl
adc
fs
scas
inc
int3
andl
dec
jne
fwait
lea
push
test
xor
scas
push
xchg
stc
and
mov
nop
adc
fwait
leave
lods
mov
stc
mov
xor
add
pop
dec
mov
jnp
fdivrs
das
fadd
inc
lcall
leave
test
arpl
adc
lock
shrl
inc
push
js
dec
xchg
out
push
cli
enter
jae
bound
out
jl
dec
cmp
mov
add
sar
imul
lcall
daa
jmp
dec
mov
sbb
pop
sahf
rorl
aaa
outsl
ret
shufps
scas
sbb
call
jno
enter
mov
fcoml
sub
inc
stos
mov
and
push
and
dec
pop
lret
pop
dec
gs
in
pop
push
mov
and
xchg
xlat
jnp
dec
push
es
xlat
xor
out
or
xlat
test
push
sbb
sbb
or
mov
out
fwait
fwait
jmp
lods
jl
jns
xor
insb
subl
dec
cmp
out
add
inc
subb
xabort
or
dec
popf
lret
cmc
adc
jecxz
add
or
stc
lea
test
lods
std
daa
or
xchg
out
in
sub
flds
sbb
fwait
mull
pushf
mov
pop
mov
jne
dec
cmc
sub
jb
xor
pop
std
ja
push
inc
xor
pushf
inc
push
insb
dec
fisttpl
stos
xorb
stc
dec
xchg
jecxz
clc
pusha
push
sarb
mov
cld
pop
pop
ds
nop
mov
push
aad
lea
es
scas
dec
jne
pop
aaa
inc
cld
decl
jge
nop
fistl
cmpsb
fmuls
out
push
mov
gs
cltd
push
fisubs
mov
ffree
push
loop
out
cmc
xor
cmc
in
in
jne
int3
jp
and
add
adcb
lock
sub
inc
loop
lds
cli
sbb
rorb
loope
fs
fldcw
es
sbbl
sub
push
stc
xorb
lret
mov
lret
mov
enter
js
mov
jp
mov
leave
jbe
or
pop
push
mov
call
dec
xchg
xlat
sub
fstps
test
sub
cmp
pop
add
cmpsl
mov
dec
mov
insb
sbb
femms
fcomi
and
loopne
sahf
sub
mov
ljmp
jo
push
test
adc
ret
lods
push
cld
pop
mov
fiadds
rcrb
mov
aas
addr16
arpl
les
je
sub
pusha
sub
inc
pusha
cld
mov
jmp
mov
push
jg
jg
leave
sub
pop
cmp
jg
xchg
sbb
leave
hlt
add
lods
pusha
bound
sbb
shll
popa
fs
out
inc
repnz
sbb
fs
in
or
clc
shlb
mov
daa
shl
mov
je
fiadds
notl
xchg
aas
ret
test
xchg
adc
les
outsl
out
repnz
lahf
sahf
fsubs
push
adc
in
js
xlat
pop
rolb
push
push
fwait
cwtl
or
in
xchg
and
pop
bound
sub
mov
pop
push
out
test
pop
and
push
test
std
sub
jo
and
adc
jge
shll
adc
ljmp
popa
sub
fnsave
inc
pop
or
popf
sub
mov
insb
fsubrl
out
cmpsb
dec
bound
pop
cmp
push
arpl
insl
in
aaa
mov
cld
add
dec
adc
dec
in
push
xor
or
xor
rclb
adc
ret
inc
mov
adc
lods
lret
inc
into
cmp
dec
icebp
movl
add
loopne
xor
add
or
test
jbe
mov
aaa
and
negl
sbbb
fstpl
aaa
jmp
or
stc
mov
mov
dec
xor
cld
adc
lea
mov
cmpsb
xor
std
mov
cmp
dec
xchg
gs
fcmovnb
and
rcrb
cs
call
mov
cld
or
mov
mov
xor
and
popa
subl
into
aad
sahf
gs
push
push
shll
loope
pop
push
xor
popa
xorl
mov
mov
into
loop
std
add
sub
xor
std
or
ss
lret
fdivr
sti
cli
mov
inc
stos
mov
ficoms
les
scas
sub
rol
jl
add
testb
jno
in
push
cli
cli
repnz
xor
sbb
pop
xor
cmpsb
xchg
cwtl
mov
das
fstpl
jns
sub
movsl
push
cmc
mov
mov
and
pop
fs
into
out
cmp
add
add
xchg
cmp
jge
aam
dec
and
movsl
sbb
mov
sbb
mov
or
inc
inc
stc
sub
pop
sbb
jecxz
jl
sbbb
xor
sub
and
icebp
jno
xchg
fs
push
js
xchg
repz
iret
inc
std
mov
sbb
mov
push
ljmp
cmp
jg
mov
and
mov
mov
jecxz
iret
jmp
push
bound
js
jno
into
clc
dec
jbe
lods
scas
lret
aaa
lea
pop
lret
in
ja
in
and
sbb
mov
cmp
xlat
jne
lahf
mov
inc
lock
mov
jmp
mov
fnsave
pcmpgtw
adc
xor
pop
sub
mov
mov
in
dec
imul
jle
in
ficoms
pop
stc
lcall
mov
lea
cmp
fistl
inc
ljmp
loopne
push
cli
jno
test
pop
adc
add
int3
sarl
pop
inc
mov
push
cmp
imul
fnstcw
or
les
popf
lahf
jp
pop
in
cld
push
jecxz
test
insb
xor
testb
sbb
lahf
sti
add
mov
dec
adc
jmp
rcr
push
cmp
mov
test
mov
xchg
cmp
adc
test
jae
pop
icebp
jnp
lahf
enter
inc
and
jp
sbb
xchg
xor
iret
push
lahf
fisubs
push
or
add
insl
ljmp
jnp
call
pop
xchg
inc
inc
daa
lock
sbb
add
dec
ljmp
jae
jp
mov
in
or
and
flds
cld
cmp
data16
push
cwtl
push
sub
ret
jl
push
loopne
sbb
add
dec
test
bound
arpl
push
cmpsb
ficomps
mov
mov
inc
and
test
in
aaa
push
cld
xchg
pop
push
repz
push
call
data16
push
out
push
mov
push
movsl
jp
or
mov
test
popa
xchg
nop
pop
daa
or
mov
jmp
pop
lret
ljmp
pop
popw
insb
lock
roll
jl
cmp
push
movsl
jbe
test
pop
jmp
inc
test
sbb
cs
cmpb
cmpl
mov
push
pop
xchg
mov
lods
and
or
sub
out
fmuls
stos
aaa
out
cmpsl
out
and
jl
pop
repz
sub
pop
stos
pushf
test
mov
and
push
mov
mov
fnstsw
jmp
mov
movsb
jns
test
dec
cmp
xchg
mov
mov
call
xor
js
and
loopne
fwait
mov
in
repz
xor
rcll
mov
mov
repz
jo
outsb
adc
pop
movsl
imul
popa
add
fisubrs
xor
cmp
mov
insl
xlat
sub
jnp
sti
inc
loopne
push
xor
inc
fsub
cmp
mov
mov
das
xor
insb
sbb
fucomp
mov
mov
jb
pop
mov
adc
in
xor
addr16
xchg
and
je
mov
int
in
enter
cmp
aam
sub
lock
sub
dec
dec
add
call
or
loopne
dec
sbb
jns
cmpsb
cmpsb
loopne
dec
es
shrl
add
sub
push
pop
pop
into
inc
xor
lea
testb
or
cwtl
fmuls
jo
cld
fstpl
out
and
movb
repz
scas
push
xchg
push
sub
lea
cld
dec
loop
call
xorl
rcrl
cld
sbb
sbb
pop
fucomi
jp
lods
sbb
sbb
xor
and
mov
testl
xchg
mov
cmp
mov
mov
xchg
sub
loop
push
je
inc
shll
push
cmpsb
xchg
scas
jo
inc
push
lods
cmpsb
fcmovnu
jne
les
lods
je
xchg
mov
mov
test
lds
cmpsl
sub
xchg
mov
fxtract
xchg
dec
sbb
cltd
xchg
xor
xchg
push
adc
mov
icebp
mov
clc
sbb
ljmp
xchg
daa
mov
jae
fstpl
sbb
ja
mul
pop
inc
fisubrl
fnstenv
aad
cwtl
mov
leave
lods
jb
int
and
xorl
pop
cmc
repz
dec
loopne
cmpsl
sbb
negl
repz
and
adc
into
ret
xor
jno
sub
push
pop
das
imul
adc
loopne
std
stc
out
jnp
movsl
cltd
mov
inc
and
sahf
xor
leave
lods
jno
push
sub
sahf
lret
pop
stos
jle
addr16
mov
hlt
cs
test
aad
or
cs
jmp
out
or
mov
xchg
sbb
rolb
cs
lds
sbb
adc
push
fdivs
inc
shll
aas
jne,pt
shr
fwait
sub
or
sub
add
push
inc
mov
or
mov
jle
cmc
aas
push
jmp
loopne
sbb
ss
or
dec
int
sbb
repz
scas
mov
ret
mov
aam
in
xchg
stos
mov
popa
mov
and
pop
data16
mov
mov
loopne
adc
outsb
loop
sbb
daa
add
push
negl
lea
cmp
sub
push
push
icebp
jle
and
jb
lods
or
jbe
jbe
push
add
mov
dec
cmp
cmp
cs
sbb
dec
std
sbb
out
lods
icebp
cli
sub
repz
insb
xor
push
mov
xchg
sbb
negl
movsb
mov
jne
mov
int3
mov
xor
out
mov
in
jge
cli
pop
mov
mov
outsl
call
jnp
pushf
adcb
ret
mov
sbb
jns
daa
loop
mov
and
xor
xchg
mov
notl
and
and
xchg
pushl
stos
jns
jnp
jecxz
decl
jmp
adc
mov
cltd
ds
pusha
cmpb
push
mov
nop
stc
lret
mov
xor
stc
stos
push
into
pop
xchg
sub
jg
bswap
mov
adc
adc
fnstcw
stos
and
nop
mov
sbb
das
in
jp
and
ljmp
sbb
and
stc
mov
sarl
jmp
mov
addr16
push
or
adc
mov
clc
mov
lods
daa
movl
in
jno
or
jo
xor
mov
ret
pop
inc
dec
pusha
aam
cmpsl
clc
jno
int
inc
rcrb
fsubrs
add
jmp
inc
xchg
orb
test
pop
adc
stos
cmp
jmp
lea
xor
dec
stc
push
jo
bound
cmpsl
sti
cmpsl
and
inc
adc
and
push
fisubl
jo
jmp
psubsw
out
mov
ret
sbb
rcll
cwtl
iret
inc
insl
ja
xor
idivl
pop
push
cmp
mov
push
and
or
shl
cs
enter
dec
orl
inc
xchg
enter
mov
sub
mov
adc
push
inc
ret
roll
xchg
daa
sahf
dec
insl
lock
popf
jnp
jecxz
sbb
pop
mov
sbb
pusha
mov
movsb
lret
push
in
pop
notb
lcall
and
or
and
lods
outsb
int3
sub
hlt
cmp
push
fbstp
add
cmp
add
lock
dec
and
mov
imulb
cld
cwtl
mov
in
xor
jle
test
sbb
add
xor
bound
dec
lahf
lods
and
xorl
jns
sbb
add
sub
repz
ss
mov
scas
cs
pop
outsb
xor
cmpb
sub
jp
ret
pop
push
push
lahf
aad
mov
fwait
mov
cmp
testb
or
rcrb
cmp
adc
pop
mov
scas
add
cld
inc
mov
scas
jno
cwtl
mov
jno
pop
add
aaa
rolb
out
dec
xorl
mov
nop
pop
or
movsl
mov
and
sbb
sbb
sub
arpl
mov
xchg
fsubrp
decb
xor
mov
dec
cli
shl
cwtl
daa
cmpsl
call
js
mov
pop
pop
jecxz
outsl
ss
sub
or
or
sub
arpl
adc
xchg
es
mov
dec
pop
insl
inc
jp
popa
iret
inc
loopne
sarb
push
scas
mov
adcl
shll
pop
cmp
aaa
iret
js
push
jle
xor
mov
and
add
jmp
fistps
popl
and
or
mov
sbb
inc
mov
add
and
dec
sub
lahf
jg
sbb
ret
mov
outsb
or
cmpsl
lret
push
push
fidivs
xchg
xor
insb
jmp
cmp
mov
xchg
lahf
pop
imul
data16
negl
adc
pop
dec
xor
lret
jbe
in
xadd
cmp
mov
aas
mov
js
cli
iret
outsb
jmp
das
xor
dec
xor
mov
sub
mov
sub
daa
adc
fimuls
lret
jno
enter
popa
xchg
sbb
lahf
out
pop
xchg
dec
push
push
test
jmp
int
mov
xor
cmc
xor
push
data16
sbb
xchg
mov
stc
test
cltd
and
jmp
mov
cmpl
push
loope
jns
cmpsl
mov
xor
pop
icebp
sub
jae
dec
push
out
push
xor
xchg
adc
xlat
mov
cwtl
fmull
pop
sub
sbb
in
push
and
mov
out
xchg
aas
pop
mov
pop
je
push
and
push
ret
out
nop
sbb
jge
aam
cmp
cli
popa
scas
out
je
pop
popf
mov
inc
mov
jl
xchg
xchg
adc
and
and
xlat
mov
or
sub
ljmp
adc
retw
pop
jmp
jge
testl
out
mov
aas
sbb
mov
jl
pop
jne
cmp
test
lods
xor
mov
mov
xlat
and
fistl
in
sub
shrl
imull
rcrb
adc
mov
loop
cs
mov
lcall
and
aas
mov
xchg
cld
ss
pop
adc
mov
cld
or
into
sub
arpl
repz
mov
fs
cld
pop
out
xor
pop
scas
ja
insl
outsb
jnp
adc
pop
cld
push
negl
das
negb
lret
aad
push
add
pushf
jle
mov
adcl
cwtl
stc
popf
mov
pop
out
add
and
repz
mov
stos
ficompl
xchg
pop
push
pushf
scas
rorl
out
cli
fsubrs
xchg
out
jae
push
dec
aad
cltd
in
xchg
ret
mov
filds
int3
fdivrs
sbb
jnp
lahf
je
std
loopne
icebp
scas
mov
in
andb
bound
cmp
imul
adc
push
je
mov
cmp
push
je
mov
cltd
mov
jno
inc
stc
sti
xor
and
lret
pop
sub
jl
mov
jbe
std
stos
cli
xor
sbb
outsl
dec
imul
push
dec
sub
shlb
lds
push
pusha
repnz
push
insb
lahf
sub
dec
popf
aaa
lret
dec
mov
push
inc
jnp
sti
mov
lahf
pop
jl
adc
pop
jle
cmp
xchg
fldcw
inc
cmpsl
icebp
pop
mov
ja
or
jge
inc
test
mov
mov
leave
pop
sbb
mov
mov
jbe
mov
jo
div
jae
es
push
lods
pusha
arpl
ret
push
sti
sub
xchg
test
daa
lcall
sub
push
test
sahf
aad
mov
add
dec
push
movsl
sbb
lcall
pop
and
lret
out
dec
js
mov
popa
cmc
ret
sbb
adc
jl
dec
pop
xor
cmp
es
mov
fldenv
cmp
or
fcoms
inc
movsl
mov
sub
sbb
movsl
mov
xchg
inc
add
or
and
test
dec
xor
mov
adc
pop
gs
out
rcll
aad
repnz
test
sarb
mov
je
imul
in
pop
mov
cmp
test
jge
inc
sub
push
cmpsb
xchg
push
dec
dec
sbb
mov
out
es
cwtl
test
js
dec
imul
and
call
sub
mov
fst
and
pop
arpl
mov
push
sbb
shrl
loope
cmpsl
setb
test
aad
out
push
adc
ja
subl
ljmp
cli
pop
xchg
push
jmp
fisubrs
dec
orl
push
xor
xor
scas
and
push
je
aas
mov
pop
push
lcall
adc
jns
pop
dec
pop
dec
xchg
mov
sub
lcall
gs
xchg
jle
es
sbb
push
push
add
dec
mov
cmpsl
or
outsl
stos
lods
in
push
dec
ljmp
dec
jno
xchg
dec
pushf
test
vcmpps
sahf
out
in
sbb
adc
daa
popf
mov
lret
mov
jae
fs
cs
jg
shlb
in
lret
fmuls
test
sbb
xor
repnz
xor
cmp
mov
inc
in
add
in
and
sbbb
inc
mov
cli
cld
push
pushf
xor
mov
pop
pop
adc
dec
add
faddp
outsb
xchg
stc
out
dec
gs
mov
int3
and
xchg
pop
rorl
gs
and
xchg
push
xchg
mov
outsl
roll
xchg
ret
push
and
adc
stos
cs
clc
lods
push
pop
stos
xor
scas
pop
stc
dec
xchg
scas
jp
inc
subl
mov
loop
pop
sub
sbb
pop
stc
ss
out
push
pop
fnstenv
cmp
out
mov
mov
cmp
fwait
addr16
mov
mov
clc
dec
sarb
rorb
pop
jns
or
fstpl
imul
mov
mov
cltd
bound
sub
jecxz
adc
sbb
add
cltd
scas
fildll
fmuls
push
mov
js
imul
xor
add
sbb
fldenv
jecxz
incb
push
bound
xchg
pop
cmp
dec
repnz
movsb
mov
call
cmp
mov
push
mov
mov
push
stos
adc
adc
xchg
xchg
loop
ds
push
in
stos
ds
jo
sbbl
jb
add
in
jl
scas
add
cmp
icebp
xchg
mov
aaa
sahf
out
mov
test
push
xchg
sub
pop
jl
dec
lds
aad
sbb
xorb
mov
sbb
test
add
dec
fs
rolb
cli
std
scas
out
repnz
mov
and
xor
mov
shll
ja
adc
loope
inc
xchg
lock
xchg
insb
cmp
xor
sti
ljmp
shrb
mov
xchg
inc
inc
jne
les
or
xlat
push
and
dec
mov
push
pop
pop
cmp
andl
mov
pop
push
xor
or
loop
mov
fwait
lret
dec
cmp
icebp
fsubrl
jne
decl
leave
sbb
xchg
lea
aad
outsl
xchg
addb
sbb
add
jp
add
push
pusha
aam
mov
mov
pop
mov
sbb
jne
mov
xor
popf
hlt
shrl
rcrb
jmp
add
aas
stos
jl
or
mov
sbb
mov
ljmp
or
jns
jno
fsubr
push
and
push
test
jle
adc
into
test
repz
lock
sbb
imul
or
fs
xlat
ljmp
ljmp
ja
cmpsb
orb
sbb
jns
xchg
xchg
mov
roll
xor
pop
push
add
lahf
scas
inc
imul
rclb
push
pop
jmp
cld
sarl
pop
xor
shll
lret
fsubrl
sbb
idivl
xor
mov
aaa
mov
pop
loopne
lods
outsl
cli
mov
cmp
sarb
add
into
adc
lcall
dec
inc
mov
out
in
xor
pop
cmp
jns
loopne
call
shrd
jbe
xchg
adc
adc
xchg
xor
sbb
jl
inc
add
popa
cmp
lret
push
cmp
pushf
push
fmuls
arpl
mov
xchg
test
imul
imul
loopne
out
ret
push
mov
sub
adc
adc
adc
xor
fisubrs
lods
fisttpl
push
and
fcom
pop
lahf
cmpl
imul
sbb
xchg
pop
pop
sbb
test
push
stos
mov
dec
inc
push
fisubl
call
sbb
fcoms
mov
jge
stos
ss
adc
pop
push
mov
xchg
xor
jbe
insl
xlat
mov
rcrl
push
lock
mov
mov
cmp
in
inc
jnp
mov
enter
bound
lret
test
shll
mov
add
mov
mov
int
xor
daa
pop
sub
cmp
pop
stc
repnz
fistpl
adc
jbe
sub
out
cmpsl
cmp
scas
cld
xchg
mov
xlat
or
and
in
mov
xor
push
mov
loop
cmp
and
jno
or
cmpsl
dec
imul
add
pop
shlb
icebp
adc
ds
mov
arpl
lea
mov
divb
xor
in
aas
jecxz
and
mov
mov
and
arpl
shll
insl
outsb
es
pop
iret
aad
add
mov
inc
push
fwait
inc
or
es
jmp
jne
push
out
inc
push
loop
pop
xchg
mov
in
jae
sbb
or
out
push
pop
xchg
sub
stos
dec
push
adc
repnz
jns
xchg
jb
adc
icebp
pop
sbb
lret
lcall
dec
push
pop
movl
mov
and
sbb
popa
xchg
add
mov
inc
imull
cmpsl
sbb
or
out
mov
es
mov
pop
icebp
sub
fsubrl
inc
ja
into
push
dec
xor
ret
arpl
sub
lock
jno
jnp
lods
cmp
mov
das
lods
fidivl
gs
jmp
or
sub
shlb
stos
mov
cmpsb
mov
out
fcmovnb
arpl
pusha
push
insb
shlb
lahf
mov
lock
in
call
inc
cmpsl
mov
mov
and
add
and
stos
aaa
in
lea
repnz
and
ljmp
cmpsb
shrb
sub
push
lods
sti
hlt
mov
je
xchg
cmp
sbb
loopne
mov
and
mov
adc
sarl
lods
cmp
std
jbe
scas
mov
hlt
cli
add
cld
cs
rolb
push
pop
jns
xor
pusha
stc
clc
mov
and
or
out
pop
testb
fimuls
jl
outsl
jp
aam
mov
sbb
adc
inc
jns
dec
mov
sub
ds
stos
jmp
push
push
jae
sahf
mov
sbb
xchg
aam
les
insl
push
cmp
dec
imul
pop
fstp
sub
test
pop
cmp
pusha
test
shlb
xchg
or
push
xor
xchg
ds
xor
rcll
mov
xchg
add
dec
sbb
xchg
lahf
repz
loope
or
stc
outsb
mov
mov
iret
cmp
cmp
inc
adc
pop
loopne
or
and
adc
push
sbb
xchg
dec
mov
mov
ret
jne
pop
push
lods
aas
jae
pop
ss
adcb
outsb
icebp
push
mov
cs
cmp
ss
cmp
jae
or
into
aam
adc
xchg
cmp
xorl
fisubrl
fldpi
adc
out
push
jno
inc
push
outsl
or
sahf
xor
sbb
sub
mov
lret
test
or
fldlg2
in
fisubl
loopne
and
cmp
fbstp
and
mov
sbb
push
push
aam
loope
mov
push
cmp
mov
bound
divl
fs
call
sbb
adc
or
cmp
xor
arpl
rorb
pop
movsb
cmp
scas
cmc
arpl
aam
push
xlat
jge
mov
mov
xchg
and
push
mov
pop
mov
xchg
in
mov
repz
stos
enter
or
jecxz
out
lds
lods
ret
rorl
in
cltd
mov
lcall
int3
pop
scas
fiadds
push
add
pop
sti
cli
insl
xor
push
pushf
cmc
xchg
add
lret
jecxz
push
loope
adc
sar
lods
test
jne
add
addr16
push
pushf
and
lods
dec
loope
xchg
loop
mov
push
sub
inc
mov
icebp
aam
inc
jecxz
mov
imul
aam
loop
sub
push
cmp
cmp
or
inc
gs
pushf
sbb
js
stos
inc
jle
arpl
sbb
iret
dec
aas
and
add
or
pusha
xor
out
and
scas
xchg
inc
sbb
stos
or
fistpl
lods
xchg
leave
mov
js
pop
add
mov
insb
pop
ss
adc
sbb
cmpsb
cmp
or
test
movb
and
push
pushf
out
dec
xchg
stos
sti
cmp
jle
jg
enter
sbb
ret
test
mov
add
adc
das
ds
push
cmp
nop
leave
or
jb
pop
dec
mov
cltd
pop
cmpsb
hlt
movsb
add
in
lret
push
mulb
fadds
dec
add
xlat
push
mov
mov
call
push
lret
adc
js
sub
pop
int3
out
mov
repnz
fists
popa
out
les
push
lcall
sarb
push
in
rcl
mov
out
cwtl
inc
jno
scas
dec
mov
outsl
and
vpshlw
stos
cmpsb
fstps
loop
cwtl
cmp
dec
xor
sbb
out
sub
rclb
iret
into
adc
mov
inc
icebp
lret
cli
and
cmpl
xlat
and
aaa
jp
rorb
in
pop
fldl
pop
adc
push
in
dec
jns
aad
repnz
packssdw
pop
je
xchg
fsubrp
mov
lret
pop
push
sbb
insb
cwtl
shll
cmc
rcrb
imul
jg
sub
sarl
mov
fistpll
pop
std
hlt
push
loopne
jns
outsb
sub
pop
jbe
inc
mov
loope
inc
pop
fs
sbb
loope
sti
lods
push
addr16
mov
mov
lahf
xor
inc
cmp
das
push
mov
add
iret
dec
pusha
scas
push
and
mull
inc
mov
pop
pop
jb
dec
add
mov
adc
dec
adc
mov
gs
decb
jae
ljmp
mov
and
sub
sahf
gs
cli
jl
fimull
sahf
xchg
lock
xchg
push
jg
cltd
dec
fldcw
imul
ffreep
inc
rclb
mov
inc
imul
inc
mov
xchg
push
jns
in
xor
xor
mov
shlb
addr16
mov
xchg
cmp
in
std
jnp
jae
out
je
inc
stc
xchg
mov
rcrl
popa
jae
add
mov
add
nop
pop
jmp
xor
mov
mov
or
dec
loopne
sbb
fistl
data16
inc
leave
or
pop
cmp
test
pop
bound
movsb
rol
aaa
mov
jae
xchg
sbb
sbb
jl
insb
mov
cmp
mov
ret
mov
mov
mov
add
push
mov
in
cmpsl
add
sbb
fimuls
dec
imul
xchg
xchg
sbb
hlt
lret
ret
and
in
rcrb
sbb
mov
mov
aaa
mov
negl
mov
mov
in
jo
leave
lock
mov
aad
mov
stc
and
xchg
lods
fincstp
dec
push
decl
nop
mov
and
cmp
xor
inc
insb
inc
mov
cli
fdivl
scas
stos
xlat
mov
fistpl
outsl
pop
push
sbb
js
push
cmpsl
in
sub
cs
pop
std
add
test
mov
mov
ljmp
sahf
fcoms
in
sub
sbb
sub
mov
out
mov
jg
pop
dec
sub
cld
mov
jno
das
jo
sub
cmpsb
cmp
jmp
fs
adc
cltd
cmpsl
inc
jmp
push
stos
and
nop
ljmp
fst
test
add
mov
cmp
jbe
stos
scas
cmp
push
jbe
mov
xor
mov
test
scas
push
inc
iret
out
loop
sub
mov
fstpt
xor
push
mov
cmp
cld
cmp
jecxz
cli
cld
add
aad
jbe
xor
test
jb
and
add
dec
in
mov
ror
sarl
inc
sbb
test
stos
mov
xchg
daa
icebp
push
dec
mov
imul
jnp
nop
add
scas
jl
push
sub
dec
and
insb
mov
mov
mov
cli
ficoml
mov
mov
xchg
dec
mov
cmp
and
repz
mov
inc
mov
add
xlat
hlt
add
mov
test
hlt
mov
add
pushl
adcb
push
cmpsl
inc
jmp
test
mov
stc
inc
lret
push
pop
add
push
jg
mov
sbb
add
jp
gs
dec
ja
lahf
lret
in
aaa
jbe
sbbl
lahf
repz
jecxz
mov
cwtl
or
pop
inc
fdivrs
repz
dec
mov
xchg
mov
push
icebp
sub
and
shr
addr16
jo
xchg
xchg
cmpsl
in
xchg
adc
push
mov
lahf
stos
mov
mov
adc
add
iret
sub
jge
push
pop
adcl
inc
repz
nop
hlt
dec
dec
push
jecxz
jp
hlt
mov
inc
push
add
mov
je
pop
mov
add
das
ja
imul
fincstp
pop
push
iret
mov
pushf
pop
cwtl
rolb
sbb
lds
in
lods
fcmovnbe
test
mov
cs
int
outsb
stos
xor
arpl
xchg
addr16
push
dec
fstps
mov
jle
xchg
add
popa
js
pop
pop
pop
jmp
pushf
sbb
je
cltd
xchg
addl
xor
push
rorb
sbb
mov
fstp
arpl
mov
mov
mov
dec
inc
jno
or
mov
xlat
xor
pop
mov
std
jp
std
sub
xchg
xchg
and
leave
mov
dec
mov
jae
pop
push
in
cmp
daa
mov
add
sbb
cmp
shlb
and
jl
loope
pushf
lods
or
sbb
scas
ret
sarl
sbb
imul
ret
repz
lods
or
mov
cmpsl
jns
inc
hlt
stos
push
stc
xchg
outsl
pushf
cmp
xlat
mov
out
insl
mov
xchg
xchg
insl
lret
test
jne
sbb
ret
imul
mov
enter
imul
cwtl
nop
sub
leave
aam
outsb
xchg
shlb
jns
jg
or
pop
jno
ror
mov
lods
stc
dec
mull
or
jne
aad
push
or
xor
dec
loopne
sub
ds
loopne
mov
loope
jnp
sub
inc
pop
mov
inc
jge
cltd
imul
xchg
int3
popa
cld
jo
pop
or
and
cmc
sbb
stos
inc
xchg
xchg
rcll
mov
addb
fs
fdivr
sbb
xor
mov
in
sbb
dec
fdiv
ds
lods
pushf
cmpsl
push
mov
jl
jp
fimull
push
xor
movsl
sub
push
ja
mov
stos
mov
pop
sbb
xlat
shl
sarl
pop
jle
pop
xchg
out
xchg
or
ljmp
cmp
mov
xor
jge
xor
arpl
pop
push
decb
xor
xchg
data16
dec
dec
cmpsb
ja
je
ja
jns
push
loope
cmpsb
push
cmp
jecxz
fdivl
int3
mov
xchg
cltd
mov
stc
or
mov
stos
sti
lock
std
push
sbb
call
rcrb
nop
pop
andb
adc
daa
xchg
and
orb
fcmovnbe
pop
adc
loop
or
cmp
cld
test
lods
add
lcall
loopne
bt
mov
je
enter
add
xchg
mov
lock
xchg
es
mov
push
std
sub
jns
aas
lds
mov
sub
sbb
inc
popa
sbb
add
std
out
and
test
dec
lds
pop
sahf
mov
pop
add
es
out
fstps
shl
insl
aaa
gs
and
and
inc
inc
push
jecxz
mov
fldt
shll
cmp
jle
fcomi
mov
add
adc
mov
add
add
orl
and
xor
rorl
mov
sub
lods
inc
pop
test
or
mov
enter
addr16
cmpsb
mov
add
mov
into
pop
mov
jnp
stos
ficompl
or
repnz
xor
aad
jmp
jmp
and
sbbb
sahf
mov
adc
in
sbb
mov
sub
mov
std
fistl
in
icebp
xchg
call
ja
pop
dec
clc
stos
iret
sbb
xchg
int3
movsl
adc
fmuls
jp
clc
clc
mov
xchg
push
xchg
aaa
js
jl
mov
cmp
arpl
adc
jnp
xchg
test
ret
int3
aad
pop
stc
pop
lret
insb
cmp
out
add
shl
fs
fldt
insl
orb
add
jne
pop
push
dec
sbb
cmp
and
dec
dec
icebp
mov
jmp
push
test
inc
scas
adc
shlb
inc
sub
loop
les
js
outsb
icebp
dec
enter
jne
inc
scas
imul
pop
pop
push
xchg
mov
mov
popf
push
out
sbb
jle
xor
xor
shrl
sub
fxch
dec
ds
aad
mov
bound
cmp
xchg
jl
imul
and
rcrb
cmp
jae
cld
int
fcompl
push
movsl
gs
icebp
lea
imul
or
adc
loope
mov
ja
out
xchg
xor
inc
pushf
mov
mov
xor
pop
pop
scas
adc
out
lods
sti
sbb
outsl
pushf
and
cmpsb
std
inc
stos
mov
dec
test
adc
jne
pop
mov
mov
mov
dec
das
repz
div
pop
stos
loopne
xlat
insb
stos
out
push
loop
mov
xchg
ror
mov
dec
mov
pop
icebp
rcr
lods
mov
testl
adc
xchg
jp
insb
movsb
pop
in
lcall
sbb
outsl
dec
mov
mov
bound
and
adc
mov
pop
add
pop
adc
cmp
es
clc
sub
test
add
add
bound
cmp
dec
imul
in
push
out
dec
cmp
adc
mov
mov
sarb
sti
fs
cltd
push
pop
xchg
add
inc
fwait
test
rcrb
inc
dec
test
cs
push
mov
sbb
xor
xchg
ja
xchg
pop
adc
cmpsb
fnstsw
add
mov
scas
mov
push
dec
jno
movsb
scas
in
pop
jns
mov
fdivs
nop
sti
dec
cmc
jo
xchg
outsb
jnp
mov
nop
leave
dec
popa
hlt
xchg
mov
mov
xlat
add
inc
dec
mov
push
fistpl
pop
std
inc
xor
jmp
xchg
je
cli
fsubrl
stos
cmp
add
repnz
push
stos
fsub
fbld
pushf
xor
mov
repz
sbb
lahf
loopne
xchg
xchg
or
daa
or
inc
xchg
mov
fsubr
fs
xchg
loop
mov
inc
jbe
mov
mov
add
nop
cmp
inc
sahf
pop
pop
mov
add
rorl
fdivl
cmpsl
xchg
push
xchg
js
mov
pusha
inc
jo
loop
rclb
jmp
ret
sbb
stos
dec
push
test
push
adc
inc
sbb
shrl
cmp
inc
das
into
movsb
adc
xor
pop
adc
movsl
push
pop
jp
imul
fmull
mov
xchg
loop
add
pop
xchg
shr
mov
jno
push
push
add
mov
std
xor
and
and
leave
dec
fisttpl
cmpsl
aam
mov
out
dec
jecxz
cmpsb
pusha
dec
adc
xor
cs
cmc
inc
adc
fucomip
sbb
outsb
orb
fimuls
stos
popf
push
xlat
dec
cmpsl
sbb
das
mov
mov
sub
cmc
ds
lahf
jp
jl
sub
push
call
add
push
xchg
std
pop
ficomps
int3
pop
cmp
inc
es
sbb
jle
mov
push
inc
call
xchg
sarl
jne
lea
movsl
mov
sbb
dec
shr
jbe
shlb
lods
shlb
shll
cwtl
xchg
jmp
jae
inc
dec
out
in
popf
pushf
pop
lods
inc
pop
inc
sub
stc
es
mov
sti
jne
sbb
popf
out
add
sahf
shl
xlat
popa
test
sbb
pop
addr16
push
add
jnp
mov
notb
mov
and
adc
adc
rcll
shl
push
movsb
outsl
xchg
fsubrl
push
mov
pop
adc
insb
push
es
repz
dec
sar
mull
xor
add
in
sbb
aad
lock
sti
and
ljmp
daa
jge
add
test
dec
push
mov
in
enter
fbstp
pop
cmc
sub
mov
sti
loope
ja
faddp
test
inc
push
sbb
in
push
pop
in
xchg
inc
sbb
and
cwtl
in
std
sarb
jns
pushw
insb
or
out
pushl
insb
dec
cmp
nop
or
sub
into
add
jl
or
ss
out
jbe
cmp
inc
punpckhdq
mov
xchg
leave
mov
cmpsl
pushf
pop
sub
enter
in
push
xchg
push
xor
les
push
mov
or
test
pop
divb
dec
popf
inc
rcll
pop
mov
xor
ret
aad
orl
arpl
xor
inc
pop
push
nop
repz
sbb
or
pushf
jb
jne
shll
xchg
mov
mov
jnp
dec
or
arpl
push
add
mov
pop
sbb
cli
sub
pop
mov
ja
push
mov
cltd
cmpsb
jo
cmp
mov
pop
dec
test
pop
inc
in
push
inc
push
or
loope
rcl
out
jp
cmp
sub
cmpb
inc
addr16
fdivrs
xor
add
push
xor
out
popa
loop
xor
mov
or
cmpsb
ret
push
test
arpl
jge
lret
bound
mov
add
jns
fildl
cmpsl
mov
push
sbb
or
test
mov
adc
mov
mov
xor
mov
mov
jge
notb
fildll
adc
imul
repnz
test
pop
mov
mov
pusha
jge
mov
es
jle
test
mov
daa
mov
in
mov
mov
push
fcompl
outsb
adc
mov
std
push
ds
pop
dec
push
jecxz
std
mov
jne
add
cltd
mov
add
push
ret
movl
pop
or
mov
sarl
cmp
stos
mov
cmp
dec
xor
inc
sub
test
push
xchg
adc
sbb
jno
jne
out
jne
jg
mov
loop
push
mov
icebp
dec
mov
add
fnstcw
inc
testl
lea
fdivr
pop
push
imul
out
insl
sub
int3
into
cwtl
pop
inc
xorl
fsub
push
pop
out
jne
incb
pushf
dec
push
jle
dec
dec
lods
jbe
adc
inc
in
add
enter
or
xor
in
jb
jl
and
add
sub
mov
cmp
add
lcall
push
lcall
push
repnz
in
sub
imull
mov
mov
das
shlb
inc
cwtl
aad
jns
mov
jg
adc
cmp
popf
in
out
mov
xchg
popa
or
xchg
or
xor
outsb
fnstcw
mov
mov
mov
js
sub
jl
ror
mov
out
mov
dec
xchg
ficomps
xor
or
insb
pushl
leave
cltd
cli
orl
cmp
jo
into
lcall
adc
dec
pop
fwait
and
or
fdivrs
adc
ficompl
xor
mov
scas
sub
xorl
dec
inc
mov
mov
movsl
sub
mov
bound
push
pop
je
inc
or
jmp
aam
pop
xor
cmc
adc
in
ret
stos
adc
adc
lods
les
sub
fcom
popa
inc
testb
push
lea
ljmp
xchg
pop
push
xor
dec
or
mov
ret
cmpsl
ret
push
jle
aaa
imul
cwtl
lods
cmp
mov
cmp
es
cmc
mov
mov
fmull
dec
pop
shlb
pop
dec
mov
mov
adcl
jl
cmc
mov
jmp
loop
lea
pop
loope
das
shlb
adc
sbb
cltd
in
cmp
es
push
cs
lods
push
add
cmp
popf
ds
mov
addr16
imul
ja
push
rol
inc
jns
fstl
xchg
adc
add
int
loopne
addr16
jo
fmul
cwtl
cmc
ret
xor
shl
add
popf
sub
repz
adc
pop
sbb
and
push
out
mov
or
cld
cmp
xchg
jb
sbb
jg
imul
xchg
jne
into
pop
lahf
sbb
jmp
lods
mov
cmp
ret
scas
mov
push
fwait
sahf
mov
shrb
mov
jbe
sub
cld
xor
lock
mov
jl
adc
xor
mov
or
pushf
scas
xchg
dec
sbb
aam
pop
adc
rcrl
xchg
push
mov
jns
and
cli
and
and
call
enter
call
js
xor
xchg
call
pop
sub
adc
pop
sub
test
test
gs
dec
sarl
fucomp
adc
pop
repz
outsl
scas
out
and
testb
mov
stc
inc
das
jmp
inc
xlat
and
xchg
cmp
mov
pop
push
icebp
popa
mov
lods
mov
mov
sar
and
adc
jle
stc
test
lds
or
jae
push
and
sahf
jge
arpl
daa
ja
mov
pop
jo
arpl
call
dec
js
dec
push
xor
stos
or
sbb
mov
imul
sub
pop
lds
sysexit
lret
shll
jecxz
or
cmpb
sub
popa
adc
mov
or
pop
cltd
int3
stc
insb
adc
shll
or
gs
mov
cli
xchg
sub
pop
outsl
pop
dec
mov
inc
and
jl
bound
frstor
in
arpl
lcall
mov
adc
dec
push
inc
pop
mov
test
mov
ljmp
pop
push
call
mov
cs
loopne
in
gs
dec
xor
lea
pop
sti
xor
mov
inc
inc
fiaddl
popa
in
cmpsl
mov
xchg
mov
lea
push
pusha
addr16
ss
jbe
add
sbb
pop
imul
mov
push
stos
jp
jle
sbb
out
jae
dec
push
sbb
in
fwait
pop
daa
xchg
je
or
lret
push
mov
mov
push
ror
pop
dec
in
mov
outsb
mov
xchg
sbbb
mov
cmp
push
ljmp
lahf
lds
pop
mov
movsb
imul
sub
in
dec
hlt
mov
dec
add
mov
das
xchg
mov
inc
pand
adc
push
add
push
dec
dec
sarb
inc
lret
xor
fdivrl
add
push
dec
imul
add
or
mov
out
fnstsw
xor
call
fldt
ds
mov
into
lods
cmp
inc
inc
push
imul
cmp
cmpsb
add
xchg
or
inc
xchg
adc
imul
aas
mov
dec
sbb
gs
xchg
or
lock
inc
pop
sti
inc
and
cmp
or
jecxz
sbb
sbb
fstpl
aam
xor
mov
lea
movsb
fcmovne
loopne
ret
dec
sbb
cmp
sbb
mov
leave
inc
mov
mov
xchg
das
das
or
in
mov
cmpl
out
sbb
and
je
adc
cwtl
es
pop
jecxz
adc
push
push
negl
xchg
mov
sbb
mov
cli
adc
xchg
insb
sub
lods
and
push
pop
sbb
pop
into
dec
inc
in
ljmp
inc
mov
loop
lods
mov
test
in
aaa
lcall
push
mov
or
movsb
imul
lret
cli
sahf
pop
test
repz
cmp
dec
shll
pop
xchg
cli
ret
cmp
cmp
sbb
stos
mov
sub
and
or
lcall
mov
add
xor
sbb
pop
cmp
ljmp
ret
mov
fstps
push
mov
nop
xor
xchg
inc
lret
push
das
jecxz
cmp
rclb
pop
jb
adc
jno
fsts
mov
sbb
pop
sar
and
stos
stos
in
or
out
xor
add
loope
sub
ret
div
fldl
leave
insb
xlat
and
push
mov
imul
xor
xor
std
movsb
sbb
inc
outsl
ja
push
ja
adc
mov
push
fisttpll
pop
sub
addr16
adc
push
insl
hlt
aas
enter
add
cs
pop
call
cmc
sti
fildl
mov
sub
int
cmp
fldenv
push
mov
hlt
xor
push
mov
rorb
subb
or
and
add
fwait
loop
add
aaa
lcall
sarl
sub
stos
push
das
enter
mov
mov
cmpsb
test
adc
and
xchg
decb
jno
adc
jecxz
adc
lods
cmpsb
adc
pop
adc
jle
or
sbb
jnp
ds
faddl
cmp
add
cmpl
sub
push
xchg
testb
push
mov
les
lock
or
into
popa
mov
pop
stos
fwait
xchg
movsb
fcoml
pop
xchg
jbe
mov
inc
aad
addr16
dec
mov
cs
adc
mov
sub
mov
call
sub
scas
iret
cmp
xchg
jle
in
test
popa
xchg
add
je
mov
lcall
mov
mov
rcl
inc
repz
adc
fs
idiv
insb
pop
andl
sub
mov
fbstp
les
or
out
cmp
ds
cli
mov
mov
pop
iret
lret
fsubr
jne
imul
loope
add
cmp
outsb
or
or
ret
shlb
mov
cli
sub
iret
lcall
shlb
or
jecxz
aaa
sti
sarl
xor
jnp
aam
or
xlat
jnp
in
pushf
roll
pushf
mov
and
scas
xor
adc
mov
ljmp
sub
xor
push
push
iret
xor
arpl
lret
lret
mov
cmpsl
dec
data16
test
push
repnz
cmp
xchg
add
pop
lock
cld
mov
je
cmpb
imul
imul
adc
add
sbb
pop
stos
int3
mov
js
mov
add
movsl
and
mov
inc
fldenv
mov
mov
mov
fldl
adc
xor
or
mov
and
loope
scas
pop
pop
mov
jge
ror
inc
jg
or
ds
pop
jb
addr16
shll
iret
push
leave
push
mov
cmc
mov
shl
push
inc
dec
jb
pxor
sub
fcmovu
dec
loop
pop
aam
or
imul
nop
scas
jb
lods
xchg
jmp
xchg
rcl
mov
insl
or
sbb
scas
or
mov
mov
enter
icebp
inc
pop
sub
pusha
insl
ret
mov
or
ret
hlt
loopne
or
or
add
cmp
pop
call
aaa
or
and
cld
icebp
movl
mov
int3
cs
sbb
in
lock
negl
out
in
mov
jp
add
test
xor
mov
inc
mov
add
add
scas
mov
ret
int3
js
test
ret
xchg
shr
cmp
xor
in
iret
cmc
daa
sbb
pusha
mov
mul
hlt
add
rcrb
pop
lods
lods
dec
cmp
jne
cmp
loopne
out
or
js
mov
int3
ficoml
test
jp
dec
jbe
mov
push
out
push
shrl
dec
or
xchg
das
mov
lret
cmp
leave
lret
xor
out
xor
sbb
push
imul
sbb
imul
mov
jge
xor
add
movsl
les
jb
test
xchg
in
pushf
pop
test
enter
mov
mov
push
sub
push
repz
push
jl
sti
inc
mov
pop
outsb
es
loope
mov
test
sbb
out
jle
push
push
scas
inc
jge
test
jge
roll
out
pushl
loop
pop
stos
divb
xchg
push
popa
dec
cmp
hlt
mov
clc
jbe
shl
dec
mov
stc
outsl
and
ret
xchg
dec
lret
pop
mov
out
cmpb
xor
sar
xlat
outsl
int3
and
mov
sbb
insl
jge
cwtl
ret
adc
pop
dec
pop
test
inc
jno
or
xlat
xchg
loopne
fwait
stos
jo
dec
push
lea
inc
mov
xlat
mov
lret
lods
pop
test
xor
inc
rcrl
mov
fcomp
xchg
addl
mov
xrelease
cmp
int
aam
cmovb
add
cld
mov
std
add
roll
and
jmp
in
fwait
mov
sbb
push
dec
rcrb
rcll
cmpsb
xor
stc
fs
xchg
adc
stos
lret
test
lock
stos
add
add
imul
push
dec
or
sub
mov
or
mull
cmpsb
loopne
mov
mov
mov
pushl
and
cmpsl
stc
xchg
in
xor
dec
je
test
xchg
outsb
dec
and
movsb
adc
fwait
int
out
call
cwtl
pushf
lods
mov
sbb
xorl
xor
xor
mov
inc
pop
xchg
jbe
or
jo
cmpsl
rep
ss
pop
js
inc
scas
outsl
out
arpl
add
outsb
in
sub
lahf
inc
xor
inc
mov
add
dec
inc
cmp
mov
adc
push
cmpsb
enter
sarb
pushf
aaa
loop
and
xchg
jnp
inc
inc
mov
xchg
push
out
lret
mov
pop
rcrl
lods
push
mov
clc
inc
or
sub
and
xor
das
mov
mov
sbb
xor
inc
aam
push
xor
mov
jp
add
scas
cmpsl
daa
sub
daa
mov
scas
and
xlat
scas
ret
add
out
std
subb
mov
xchg
inc
aaa
xor
lea
mov
sub
dec
xor
subb
ret
popa
mov
add
fiaddl
xchg
jg
test
scas
xor
test
adc
lea
add
ficompl
inc
fists
jae
data16
shrl
xchg
lods
push
imul
cmpsl
pop
and
loop
ja
dec
std
and
out
outsl
movsl
xorl
ds
push
push
adc
syscall
pop
push
hlt
cmpsl
cmc
mov
lock
pop
into
dec
icebp
cmpsb
jg
ret
sub
imul
mov
cmp
sbb
lock
ljmp
loop
pop
cli
sub
fcmove
popa
shll
cltd
mov
sbb
mov
leave
les
push
push
loop
ficompl
fisttpl
and
pop
xor
jle
out
mov
cmc
push
mov
sbb
ljmp
int3
lret
pop
mov
add
or
and
pop
inc
lahf
lea
imul
mov
das
leave
push
xor
movsb
gs
mov
int
subb
add
inc
cmp
nop
call
mov
test
enter
sbb
jecxz
lcall
clc
sti
xchg
push
mov
xlat
or
imul
mov
push
dec
std
ja
sbb
xchg
mov
and
cwtl
fwait
outsb
sbb
icebp
or
mov
push
jb
sub
xorl
xor
pop
fistl
sbb
xor
ret
xlat
scas
and
mov
in
dec
push
mov
in
cmp
adc
loopne
lods
mov
rcr
mov
add
xchg
stos
lods
cltd
and
xchg
mov
add
jb
push
ret
mov
pop
fmull
popf
mov
call
in
mov
push
fmull
movsl
clc
lods
push
jbe
mov
ds
fidivl
aam
jge
jb
cmp
mov
aam
push
rclb
pushf
mov
add
jns
sar
jle
mov
js
stos
or
mov
dec
push
shlb
mov
fists
push
add
orb
rcll
and
flds
pop
arpl
add
lcall
jmp
test
inc
cmp
fsubrl
out
cs
mov
push
or
mov
sbb
lahf
xchg
dec
mov
loopne
cmpsb
push
adc
xor
sahf
mov
or
fldl
sahf
je
or
pop
insb
jne
jp
ret
jne
inc
mov
cltd
mov
xor
mov
push
push
arpl
adc
cmp
ja
mov
icebp
scas
push
scas
fistpl
jl
dec
and
and
jl
pop
in
leave
cwtl
xchg
iret
sub
mov
shl
lods
addb
cmpsl
jbe
push
hlt
sbb
outsl
mov
sbb
fsubrl
jl
icebp
mov
call
mov
pop
push
or
pop
pop
push
pop
outsl
insb
aad
es
pop
add
mov
aad
inc
pushf
cmp
sbb
sbbb
dec
out
mov
add
fisubrl
and
cli
mov
nop
sub
icebp
stos
jb
mov
adc
iret
cmp
inc
pop
cli
dec
rclb
fnstsw
stos
js
xchg
push
ret
mov
add
aam
aaa
rcrb
stc
into
or
jnp
int
add
inc
dec
ja
xchg
pop
dec
cmpsl
push
pop
mov
jbe
insl
mov
or
into
out
xchg
sti
push
dec
aad
movsb
mov
xchg
aas
inc
dec
in
out
adc
and
mov
mov
mov
cli
es
loop
push
push
add
dec
adc
mov
sbb
jns
sub
push
test
push
and
idiv
push
cmpsl
addr16
inc
ljmp
insl
cmp
pop
test
inc
add
jl
add
dec
ror
movl
mov
repz
enter
jg
cmp
and
sub
cltd
hlt
jp
in
xchg
mov
or
xor
push
loopne
enter
adc
push
push
gs
cwtl
clc
xor
and
jg
inc
shrl
push
lahf
mov
mov
cli
aad
cld
aad
inc
hlt
xchg
shl
in
rdtsc
movsb
andl
and
test
out
sbb
sar
mov
rorl
sbb
lods
daa
fs
lret
dec
push
shrl
xchg
movsl
add
es
cmpl
fs
xchg
roll
gs
pop
test
pop
pop
pop
imul
mov
addb
ret
sub
rcl
mov
push
pop
mov
push
je
int3
and
or
add
or
lcall
cmp
adc
mov
pushl
and
stc
test
repz
jmp
popf
fs
test
cld
xor
mov
addb
fsubl
mov
mov
mov
dec
jns
sarb
jl
jbe,pt
jae
cld
addr16
aad
test
insb
in
shll
scas
sub
jl
data16
lea
cltd
push
enter
jb
inc
cmp
loope
push
lcall
sti
sbb
outsb
fistpll
jl
and
jp
cmpsl
xchg
in
sbb
jl
dec
dec
aad
pop
mov
jp
fucom
push
push
incb
nop
shll
sub
ljmp
into
lcall
jg
adc
cltd
pop
and
leave
add
fucomi
gs
in
incl
xchg
dec
dec
dec
nop
adc
imul
roll
fdivs
filds
lods
inc
jecxz
and
jecxz
mov
pop
frstor
sub
arpl
fisttpl
or
mov
aam
add
xchg
xor
shrb
xchg
xchg
jecxz
aad
mov
shrb
jmp
xchg
add
out
sub
out
cmp
sub
mov
jns
mov
jae
xchg
outsb
insl
cmp
jb
pop
xchg
push
xchg
popf
fmull
movsl
mov
mov
std
jns
scas
add
loop
mov
add
sub
pop
mov
les
jo
popf
adc
mov
sbb
daa
jmp
push
in
cltd
adc
negb
xrelease
lret
cmp
test
mov
xor
out
add
lret
pop
mov
mov
xor
cmp
add
imul
inc
dec
cmpsb
int3
fidivs
pop
xor
add
stc
aad
adcl
shll
push
dec
push
jecxz
mov
int3
push
in
into
mov
lahf
push
pop
push
lock
fcoms
movsb
mov
xchg
jno
inc
cmp
mov
mov
gs
xor
mov
or
stc
add
xor
ljmp
pop
mov
and
inc
jg
push
adc
mov
inc
mov
ja
cmp
out
das
xchg
pusha
nop
insl
mov
das
pop
mov
arpl
mov
xor
shl
loope
mov
sub
inc
or
into
test
pop
leave
inc
sub
lahf
cs
dec
ret
stos
xor
sbb
or
mov
gs
out
jecxz
loopne
int
leave
pop
push
in
push
mov
repnz
cmp
push
xor
xchg
orb
rol
pop
cmp
or
rcrb
in
jp
push
leave
mov
hlt
jb
push
incb
sti
xchg
enter
in
stc
cmpsl
scas
cmp
movsl
sub
mov
add
xchg
lods
push
movsl
idiv
cltd
lods
dec
sub
cmc
jl
sbb
cmp
and
loopne
sbb
aaa
xchg
sub
jne
adc
and
stc
xor
sub
in
pop
mov
cmpsb
test
jo
movsb
cmp
push
addr16
or
test
mov
into
and
sahf
sbb
jne
jg
in
pop
cmp
sub
jmp
xor
lock
jb
or
movsb
fsubr
push
mov
int
add
sbb
repnz
decb
mov
in
pop
jle
add
lea
imul
leave
es
pop
mov
lods
out
add
lods
adc
inc
mov
test
aaa
sbb
jp
add
sbbl
jno
and
push
mov
push
dec
jg
dec
call
movsb
gs
lret
out
mov
popf
aaa
sub
push
test
stc
pop
sub
data16
jg
mov
mov
dec
mov
test
aas
or
test
dec
add
rol
arpl
add
aaa
inc
outsl
cmpsb
std
mov
ret
das
aad
movsl
inc
mov
jns
fidivrl
xchg
jl
hlt
sbbl
fs
push
mov
or
push
mov
mov
ret
in
scas
mov
popf
ficompl
ja
push
dec
cld
repz
orb
cs
inc
sub
pop
lret
dec
shl
adc
dec
inc
push
icebp
sarl
repz
dec
cmp
inc
push
mov
aam
mov
sub
test
push
push
rcr
sub
jp
and
rcrb
mov
pop
and
pop
dec
mov
xor
inc
jne
lods
push
add
loope
jle
loopne
xorl
les
pop
push
dec
add
dec
cmp
shll
lahf
js
jae
and
mov
xor
out
xchg
xchg
das
pop
and
stc
jns
pop
movsl
push
or
notb
mov
inc
shlb
pop
xchg
dec
stc
ljmp
test
popa
push
fucomi
fildll
inc
decl
sbb
xchg
push
popa
jo
outsl
pusha
mov
insb
inc
or
cmc
sbb
cs
std
arpl
pop
jne
call
and
mov
mov
xchg
ficompl
daa
insb
pop
jecxz
stos
sbb
pop
stos
cmp
into
pop
cmp
sbb
sub
sbb
ret
test
push
imulb
mov
sub
outsl
fs
mov
idivl
and
std
inc
insl
mov
dec
fs
loopne
xchg
push
orb
sar
imul
insl
mov
or
outsl
leave
fildl
pop
ret
mov
mov
stc
mov
outsl
mov
nop
scas
sti
ss
iret
dec
dec
out
ret
push
rcl
in
mov
lock
push
mov
mov
cld
jp
ds
mov
pop
dec
sub
push
mov
cmc
push
push
scas
cmp
mov
push
mov
add
push
mov
fdecstp
and
repz
cld
sbb
and
stos
jns
jl
cltd
out
sub
das
movsb
xchg
jg
jg
inc
shll
push
inc
cmp
xor
dec
cmpsb
arpl
push
sub
mov
dec
or
push
jbe
mov
lcall
mov
les
mov
pop
add
or
or
sub
out
je
cli
cmp
inc
fdivl
push
inc
xor
repz
or
rcrb
jb
leave
sub
add
dec
xchg
ds
negb
add
push
xchg
push
and
stos
cli
cmp
fsubrs
rcrl
jne
xchg
outsb
pop
add
adc
loopne
mov
inc
ret
repnz
sub
dec
add
xor
cmpsl
adc
push
or
in
cs
mov
inc
and
int3
xchg
mov
iret
xor
mov
clc
push
nop
out
movsl
push
sub
dec
inc
push
xchg
shlb
mov
mov
cmc
repnz
repz
je
dec
ljmp
fisttpl
mov
jns
dec
scas
xchg
xchg
test
int3
std
adc
jmp
lret
imul
loop
dec
int3
std
push
in
clc
jl
shlb
push
jne
cld
sub
pop
lcall
sbb
jecxz
lods
outsl
movsb
xor
in
sbb
jmp
mov
call
pop
add
adc
add
stc
inc
sub
dec
out
sahf
fucomi
in
dec
add
lods
xchg
leave
xor
lret
mov
mov
xchg
pop
sub
add
inc
push
jecxz
adc
int
push
adc
mov
mov
push
pop
add
int3
imul
adc
and
in
xor
push
lds
jnp
sbbb
aaa
or
mov
lds
shlb
xlat
clc
cld
adc
es
out
mov
mov
add
mov
xchg
sbb
inc
sbb
popa
mov
xor
cmpsl
imul
mov
push
adc
cmp
out
mov
push
lods
je
jno
xchg
out
repnz
dec
hlt
test
inc
add
test
xor
mov
pop
leave
outsl
movsb
jnp
pop
xchg
xchg
in
mov
cmc
add
stos
or
fisttpl
outsb
imul
test
ja
mov
push
and
mov
pusha
mov
div
cmp
sub
xor
fwait
pop
mov
xlat
mov
and
inc
jae
xchg
ret
test
gs
inc
aam
scas
xchg
gs
mov
iret
xor
sub
dec
icebp
cmp
frstor
xor
sub
xchg
pusha
addr16
aam
inc
mov
inc
cmpsb
sbb
xlat
jne
popf
mov
inc
pop
negb
mov
jns
sti
dec
push
lret
mov
cmp
pusha
dec
enter
fisubrs
dec
mov
xlat
adc
mov
sub
inc
lds
push
out
into
icebp
outsb
push
repnz
pop
nop
cli
xchg
push
int3
hlt
dec
xchg
push
mov
sbb
lahf
test
mov
push
pop
sbb
jmp
push
jne
mov
dec
bound
in
mov
sub
int
cld
jle
pop
or
scas
mov
inc
aam
shl
hlt
xor
lock
xor
pop
xchg
incb
dec
jne
test
sbb
dec
and
jg
lcall
ror
imul
mov
xchg
push
shr
shlb
push
insb
push
int3
jno
add
push
xorl
mov
stos
ret
sbb
gs
mov
dec
dec
popaw
shrl
insl
pop
enter
sbb
mov
push
in
mov
popl
andl
jl
push
mov
int3
add
xchg
aaa
out
push
sarb
xchg
fistpl
cvtps2pi
lcall
cmc
addr16
adc
adc
cmovae
negl
jb
ret
xor
push
cld
jmp
pop
mov
pushf
or
fwait
sub
in
sti
dec
push
adc
sbb
test
and
shlb
or
jns
ja
popl
lods
jmp
xchg
add
call
push
in
mov
sbb
imul
movsl
and
push
jo
mov
lret
daa
shlb
mov
je
fistpll
adc
sbb
daa
xchg
out
or
stc
aas
sub
imul
das
in
popf
or
scas
std
add
jl
das
mov
cmp
in
std
scas
dec
xchg
call
lds
jbe
sahf
pusha
gs
sub
fcmovb
or
inc
push
xchg
pop
imull
call
push
cs
inc
dec
cmp
mov
test
mov
xchg
add
daa
scas
clc
push
cmpsl
aaa
popf
or
stos
xor
das
pop
flds
fadds
pop
adc
push
mov
fsub
sbb
imul
ds
out
dec
push
stos
arpl
push
loope
cmp
sahf
pop
je
xor
rorb
les
push
rcrl
sbb
rdpmc
pusha
les
into
dec
cmp
pop
imul
imul
push
ds
rclb
and
in
cmp
inc
fs
sub
out
in
out
std
sbb
adc
xchg
xchg
incl
sub
int
cmc
adc
push
es
pop
push
jmp
dec
mov
lock
mov
xor
xchg
imul
shlb
imul
dec
sbb
pop
xchg
movsl
std
lret
insl
inc
xor
icebp
push
push
lea
or
sahf
in
sbbl
inc
cmp
mov
adc
rcll
adc
mov
fs
push
rcrl
cmpsl
movsl
stos
xchg
mov
pop
lcall
xchg
xlat
jg
cmp
dec
pop
ret
int3
shrl
dec
jns
xlat
mov
arpl
mov
aad
roll
pop
cwtl
into
fcmovnbe
pop
scas
sbb
mov
les
lcall
leave
sarb
xor
push
push
and
outsl
sub
aam
cmp
int
jg
push
or
add
in
inc
mov
scas
hlt
in
push
xchg
sbb
dec
in
iret
test
xor
out
jge
mov
inc
lret
jg
fdivl
adc
in
popa
bound
sub
adc
push
pop
xchg
sub
pop
mov
jns
cmc
xchg
daa
jl
mov
pop
jno
mov
and
mov
shll
mov
jo
xchg
lods
fs
xchg
or
clc
cmp
or
cwtl
jmp
lods
das
push
je
sub
arpl
leave
pop
mov
pop
nop
inc
lcall
xchg
cmp
and
xchg
xor
aam
mov
cwtl
or
xchg
repz
sub
lret
ret
fs
jl
jge
cmp
lcall
stos
jo
iret
cltd
xchg
in
iret
jnp
rcrb
xchg
pop
mov
add
mov
push
mov
jbe
xor
lock
lcall
bound
cld
mov
mov
fs
call
aaa
insl
inc
clc
in
jecxz
nop
mov
cld
cltd
and
mov
and
mov
and
xchg
or
inc
inc
push
popa
mov
test
xor
fsub
ljmp
xchg
pop
push
mov
xchg
push
mov
mov
mov
pushf
mov
xchg
rcl
sub
imulb
popa
jnp
adc
insl
addl
mov
popf
mov
cmp
sbb
mov
call
cmc
jns
or
xchg
jne
dec
ds
test
daa
insl
vpor
fs
mov
push
xchg
jo
sbb
jb
xchg
int3
repz
in
lea
iret
sub
popf
or
and
sbb
je
out
mov
pop
xor
xlat
int
fsubrs
xor
shll
jnp
test
out
jg
jnp
dec
int
repnz
fidivl
mov
sub
lock
cmc
loopne
cwtl
mov
or
orb
in
stos
cli
and
data16
sub
jp
add
adc
xor
cmc
cmp
push
dec
repnz
fimull
push
mov
int3
adc
fnstenv
aam
dec
hlt
movsb
sbb
orl
cmp
rol
mov
ljmp
mov
stos
mov
or
int3
mov
pop
cmp
xchg
les
cmp
and
lods
xchg
hlt
call
xchg
sbb
hlt
push
dec
push
bound
adc
in
cltd
cltd
xchg
scas
or
mov
xor
dec
enter
aam
cmp
mov
fs
rol
xor
in
ucomiss
and
dec
push
or
sub
loop
cmp
pop
and
lock
sahf
sub
mov
cltd
in
mov
sbb
jle
lret
jle
in
fwait
stc
std
dec
push
lret
aaa
lcall
clc
popf
and
jecxz
pop
and
repz
rcll
sub
or
push
push
mov
mov
notb
pushf
sbb
out
fisubrl
dec
mov
adc
in
scas
ds
and
push
hlt
divl
mov
add
scas
movsb
je
jge
lcall
and
pop
arpl
ds
push
out
cltd
in
das
mov
hlt
mov
push
cmp
push
sbbl
sahf
push
lcall
push
xor
mov
mov
in
stos
jb
or
cmp
mov
inc
sub
pop
gs
hlt
in
js
xchg
gs
xchg
adc
dec
outsb
or
das
dec
lods
inc
ja
test
shl
pop
inc
lcall
nop
xor
cltd
shlb
mov
pop
mov
adc
arpl
sbb
and
cltd
jl
xor
mov
sub
test
outsl
rorb
sub
test
adc
stos
push
insb
call
mov
pop
sbb
inc
lret
inc
imul
push
pop
jp
rolb
lret
sbb
jl
fidivs
xor
cmp
jnp
inc
and
dec
fwait
cmp
flds
push
out
jecxz
or
ljmp
dec
rclb
pandn
mov
cmp
adc
cld
xchg
out
bts
sbb
fucom
rclb
lret
lods
mov
ljmp
sarl
leave
and
into
and
movsl
bound
inc
xchg
jmp
pushf
sbb
and
inc
and
in
cmp
sbb
mov
imul
outsb
push
aas
adc
pop
cwtl
fisttpl
mov
push
push
and
cmpb
or
test
lahf
sarl
scas
test
cmp
insb
adc
mov
push
cmpsl
inc
outsb
pusha
pop
cmp
sub
or
cmp
sbb
jmp
cmp
pop
xor
cltd
inc
mov
cld
js
xchg
mov
inc
into
push
sub
pop
add
in
shlb
sbb
push
test
out
and
leave
adcb
in
push
ljmp
pop
pushf
es
pop
loopne
mov
mov
sub
dec
add
or
add
cmp
jnp
cmp
pop
lods
mov
pop
out
mov
icebp
push
mov
cmp
pop
out
jl
mov
xchg
mov
cmp
cmp
add
outsb
in
adc
adc
inc
cmp
and
add
popf
add
lret
and
and
jb
rcr
push
ja
push
rol
mul
fs
lret
dec
cli
push
adc
lahf
es
or
pop
call
push
jbe
pop
xchg
scas
push
mov
or
shrl
leave
pop
cmpsl
mov
pop
outsb
stc
sbb
data16
std
inc
pop
and
aaa
jb
xor
mov
fwait
aas
orb
ss
xchg
sbbl
xchg
and
mov
mov
cs
in
movsl
cmp
dec
es
lea
adc
sbb
ret
ss
lds
dec
push
fmuls
fadd
xchg
leave
xchg
shl
cmp
and
loop
mov
dec
lahf
outsl
data16
and
std
dec
or
into
jl
push
cwtl
sbb
push
dec
cmp
xor
scas
inc
sub
mov
fisubrs
pop
inc
insl
in
jne
fimuls
cmp
gs
pop
mov
mov
mov
lods
xchg
popa
mov
and
leave
xchg
push
push
out
cs
mov
jne
mov
cld
mov
inc
inc
adc
in
mov
lret
clc
xchg
cmpsb
and
subl
sbb
rcrl
xchg
das
jmp
push
xchg
outsl
inc
xor
imul
stc
push
scas
xchg
pop
lods
sbb
dec
dec
xchg
inc
shr
pop
push
pop
xchg
mov
push
loopne
inc
mov
mov
mov
mov
inc
xchg
pop
ret
imul
dec
mov
inc
pop
add
into
dec
cmc
jp,pt
pop
cmp
jo
jg
dec
sbb
movsl
pushf
fwait
pop
add
lcall
movsl
add
popa
ret
sbb
daa
xor
push
add
dec
loope
xor
mov
cli
dec
mov
inc
ss
jo
lahf
sub
sub
dec
mov
push
cmp
imulb
jb
popf
popa
sbb
lods
jle
aaa
aam
dec
aaa
fdivr
out
daa
pop
sub
popa
rorl
mov
cmp
jecxz
repnz
jmp
dec
add
aam
mov
jns
in
xchg
inc
xor
sub
dec
std
test
xor
or
loop
mov
pop
ret
aas
sbb
in
mov
test
xchg
rclb
mov
push
jne
nop
mov
xor
add
mov
out
or
pop
or
jmp
xchg
lret
xchg
xchg
sbb
rcrl
mov
push
cld
add
xchg
addb
je
push
sbb
les
adc
daa
outsb
lock
add
cmpl
adcb
or
imul
inc
mov
fsubrs
xor
movsl
pushf
sbb
hlt
ficoml
adc
in
inc
stos
inc
mov
xor
mov
call
mov
mov
into
mov
outsb
or
sbb
incl
pop
scas
mov
shrl
lds
inc
or
mov
aas
sub
repnz
in
insl
or
pop
das
lea
push
daa
pop
or
inc
inc
ss
cmp
inc
push
sub
sbb
test
imul
mov
pop
inc
and
jbe
xchg
dec
inc
shl
xchg
movsl
fisubl
xchg
rolb
mov
push
sbbb
fwait
test
mov
mov
jge
pop
sbb
sbb
imul
rorl
clc
aas
push
std
sub
nop
sub
movsb
lahf
xor
and
jp
cmp
inc
or
jb
aas
mov
ss
push
frstor
xor
enter
mov
push
out
mov
add
push
sti
mov
jno
pop
dec
mov
mov
les
mov
dec
test
jmp
lea
loop
popa
jo
jbe
cmp
xor
aam
jp
mov
imul
aam
dec
sbb
in
push
and
ss
fmull
sbb
push
push
stos
push
rcrl
jmp
nop
pop
mov
out
in
cmpsl
and
push
mov
jo
fiadds
cmp
imul
and
and
pusha
jp
mov
lock
insb
xchg
inc
inc
pop
mulb
jecxz
and
push
mov
mov
sarb
and
and
push
jg
rorb
pop
adc
or
lret
jg
lret
bound
or
clc
cltd
cmp
jle
decl
push
mov
xor
std
out
mov
xchg
xchg
cwtl
mov
pop
push
test
push
negl
sbb
icebp
push
shrl
mov
mov
sbb
ljmp
movsl
jge
xchg
mov
mov
bound
jne
mov
push
jns
inc
lret
cmp
push
jne
dec
leave
pop
xor
pusha
cmp
test
mov
jnp
jge
and
call
pop
inc
je
push
lcall
sub
shrb
jo
lret
cmp
mov
aam
in
aam
mov
rorb
loop
inc
lods
mov
mov
or
sbb
jbe
sbb
cmp
sbb
aad
cmc
jb
popa
pop
cmp
mov
cmp
test
sbb
lea
jo
push
into
push
jae
call
sub
push
pop
into
fsubs
push
aam
push
sbb
shl
jmp
push
and
popa
addb
aaa
shlb
xchg
ljmp
cmp
add
sub
and
outsb
repz
xor
int
loop
cmp
sub
push
mov
pop
sub
std
sub
adc
mov
mov
push
fists
push
adc
mov
pop
xchg
je
xor
les
je
jns
xor
sti
mov
xchg
jp
in
in
imul
push
cs
add
sti
sbb
cmp
clc
adc
pop
aas
inc
and
jae
sub
push
lahf
es
insl
icebp
mov
sub
das
sub
repz
mov
add
sbb
and
dec
lcall
xor
jae
adc
bswap
cmp
xlat
insl
in
andb
fs
arpl
sub
scas
jg
sbb
imul
lods
cwtl
cmpb
outsl
mov
ds
xor
cs
testl
cmc
sbb
cmp
stos
adc
in
ret
fisubs
shl
fisttpl
xor
mov
mov
push
shrl
jge
mov
repnz
pop
pop
fldenv
loope
sub
push
into
mov
or
loop
lret
jno
and
cli
mov
outsl
fmull
sub
cmp
mov
sbb
sbb
pop
or
push
scas
jp
cmp
jns
test
xorl
push
enter
cmp
push
sbb
push
xchg
adc
xor
mov
lds
cmc
lcall
mov
dec
mov
call
mov
dec
dec
mov
xchg
cli
imul
fidivl
xor
xchg
inc
sbb
push
iret
lods
push
sbb
push
enter
hlt
scas
mov
fcompl
or
div
jg
fadd
aam
insb
stos
xor
inc
adc
cmpsl
rolb
xchg
pop
pop
in
xor
mov
scas
xor
dec
push
push
mov
cmp
sahf
fldl
sub
movsb
push
sub
aaa
jp
fisttpl
pusha
jne
in
ret
test
movsb
inc
pop
cmp
movsl
inc
scas
shll
and
addl
pmullw
addl
cmp
adc
push
loop
std
repz
push
andb
aas
push
cmp
les
cwtl
mov
outsb
dec
mov
sbb
into
add
cmpsb
lods
enter
sub
jp
jns
sbb
dec
fisubl
and
xchg
nop
lcall
std
jl
jge
shlb
mov
pop
fidivrs
cmp
gs
flds
out
add
push
inc
stc
out
aaa
mov
sbb
out
sti
push
and
xchg
jnp
xlat
cmp
sub
mov
insl
pop
xchg
lock
rep
repnz
dec
fsubl
and
ret
call
or
dec
cs
jbe
mov
sti
xchg
stos
jnp
pop
adcb
xorl
outsb
xchg
xchg
cmp
pop
scas
add
enter
inc
xchg
push
sub
mov
sti
mov
aas
bound
mov
scas
jmp
sbb
fdivr
mov
jmp
pushf
shll
stc
mov
xor
push
add
inc
or
pop
daa
sti
dec
test
adc
adc
arpl
or
push
data16
ret
mov
dec
lret
mov
es
hlt
mov
inc
mov
loopne
mul
lret
cmpsb
push
lret
rclb
mov
add
ljmp
idiv
adc
pop
push
sbb
std
pop
cmp
fiadds
pop
loope
repz
inc
fstps
mov
sub
or
mov
out
mov
dec
mov
sbb
add
sbb
sbb
mov
and
scas
fwait
and
and
pusha
pop
nop
push
mov
subb
mov
out
inc
mov
cmp
sub
jp
xchg
xchg
jg
fcoms
jmp
push
jecxz
dec
jle
push
and
inc
or
add
mov
mov
mov
jb
and
jge
jl
test
fwait
xor
pop
mov
mov
frstpm(287
in
add
int
mov
cmp
xor
mov
stc
fisubl
js
push
call
out
aas
push
adc
inc
lock
insb
aaa
aam
fmuls
aad
orl
outsl
andb
test
xchg
jge
inc
pop
mov
adc
xchg
sub
dec
call
mov
jo
pop
mov
ftst
adc
sbb
stos
aam
cmpsl
test
aad
test
pop
out
mov
and
loopne
andl
ret
in
push
xchg
movsb
mov
fnstcw
mov
mov
xchg
xor
xchg
imul
cmp
cmpsb
rcrl
push
data16
xchg
push
xchg
xorl
mov
push
xchg
popf
in
aas
sbb
mov
cmpsb
add
adc
jge
jb
hlt
insl
mov
ss
fwait
lock
fsubl
daa
jl
xchg
or
ss
imul
repz
scas
pop
les
sbb
pop
dec
loop
sub
jne
jmp
imul
addb
push
dec
sbb
push
cs
mov
aaa
nop
pop
cmp
xor
notl
and
clc
xlat
adc
in
lds
pop
out
stc
fistpl
outsb
xchg
shl
pushl
inc
aam
mov
sbb
push
shlb
sbb
sti
dec
or
and
shl
arpl
faddl
cld
xchg
sub
cli
sub
flds
xchg
xchg
cld
mov
dec
scas
jle
outsl
jb,pn
dec
add
xchg
dec
fcompl
ret
xchg
dec
inc
cs
loopne
xchg
mov
push
jnp
dec
sub
push
mov
mov
push
add
xchg
jp
sbb
cs
xor
lahf
stos
leave
mov
movsb
xchg
cltd
mov
push
insb
or
jbe
mov
loopne
in
jecxz
out
mov
lods
cmp
stos
push
sub
push
pop
test
loope
jmp
adc
add
lds
and
jae
stos
xchg
fwait
xchg
shl
push
pop
testb
icebp
mov
fdivr
push
movsl
cwtl
inc
cmp
out
xor
loope
mov
sahf
mov
dec
sub
cld
xchg
push
sub
pusha
pop
sbb
and
cmp
cmp
add
out
movb
add
lcall
mov
adc
out
repnz
or
mov
xor
imul
cmc
in
lock
mov
dec
mov
aad
nop
mov
lods
clc
adc
jl
adc
loope
xchg
out
lahf
jo
jg
pop
adc
test
arpl
push
das
jno
movswl
adc
push
xor
bswap
sysret
jbe
movsl
scas
push
divb
dec
fsubrl
cmp
mov
enter
leave
xor
ljmp
je
cmp
insl
push
pop
sbb
cmp
mov
sub
xchg
jo
mov
stos
fnsave
dec
mov
insl
shll
lahf
add
movsb
add
jno
inc
rcll
pop
rol
xor
push
fistpl
fwait
mov
daa
xchg
cmp
in
cltd
aas
xlat
lods
sub
in
fcomps
popf
mov
in
icebp
faddl
mov
xchg
sbb
sahf
mov
push
stos
push
fdivl
xchg
xchg
dec
cwtl
mov
pop
shlb
push
mov
aas
xor
add
jp
xor
pop
adc
adc
push
test
pop
inc
les
loopne
xor
mov
pop
fld
aad
xchg
cmp
dec
inc
imul
mov
pop
stos
fwait
dec
leave
lcall
stos
sub
and
loop
lcall
pushl
sbb
adc
loopne
dec
orl
addb
loope
xor
arpl
adc
adc
orb
cmp
cmpsl
out
adc
int3
sbb
das
lret
push
in
sti
popf
mov
adc
jb
and
mov
cmp
cmp
dec
pushf
into
sub
dec
jns
mov
inc
test
push
jmp
orb
xchg
push
mov
orb
inc
pop
pop
jle
into
movsl
mov
cmp
jp
jne
insl
daa
addr16
int
fldenv
dec
jge
mov
jbe
fbld
add
lods
out
mov
push
or
xor
xchg
jb
mov
int
inc
jmp
fwait
movsl
cltd
mov
enter
outsl
out
stc
bound
jp
subb
imul
scas
xlat
std
jmp
ljmp
leave
push
or
aaa
xchg
ret
out
decl
sbbl
mov
pop
fbld
imul
push
ljmp
in
stos
mov
rorl
sbb
adcl
add
inc
cmp
push
push
enter
add
push
mov
hlt
nop
push
jl
imul
mov
fcompl
sarl
push
notb
xorl
cli
out
mov
or
out
and
jae
adc
or
pop
mov
xor
aam
flds
sbb
lods
sub
mov
stc
and
pop
mov
std
pop
jmp
fcmovu
cmpsl
rorl
add
mov
xchg
enter
mov
xor
sarb
push
adc
or
fs
js
xorb
pop
aam
lret
mov
push
mov
mov
movsl
int
adcl
xor
mov
cmpsb
push
aaa
inc
sub
mov
dec
xchg
aaa
jo
mov
mov
dec
pop
xchg
inc
mov
stos
cmp
sub
mov
sub
sub
sbb
adc
and
pop
cmp
pop
mov
inc
cmp
dec
lds
jno
and
enter
push
mov
fsubrl
out
push
or
cmp
and
add
adc
inc
mov
push
add
shr
mov
add
jo
xchg
push
xchg
push
js
jns
xchg
lock
in
mov
arpl
push
addb
xchg
xlat
sbb
sub
outsb
ret
mov
sbb
dec
into
cmc
mov
add
jno
test
adc
shrb
jbe
push
pop
jo
pop
repnz
jg
enter
push
loopne
rcrb
fildll
push
es
inc
movsl
and
xor
subl
cwtl
aaa
and
adc
sub
cs
add
gs
inc
pop
jns
out
pop
mov
mov
pop
hlt
inc
mov
lret
in
mov
xor
jmp
das
pop
mov
jmp
xchg
or
iret
mov
mov
pop
xor
sub
lret
inc
stos
sbb
fnstsw
dec
jg
jbe
ljmp
jmp
jmp
fs
add
jmp
push
lret
fst
inc
or
lea
lcall
or
movsl
int
mov
pop
dec
popa
leave
inc
mov
mov
pushf
cmc
mov
out
outsb
jnp
dec
dec
gs
pushf
push
mov
in
cmpxchg
mov
xchg
int
arpl
in
push
jb
aas
mov
xchg
add
dec
cmp
dec
jp
jns
shrl
lahf
cmp
subl
push
jg
xor
cltd
stos
es
and
or
and
andl
push
add
imul
mov
insl
rorb
adc
fists
stc
cmp
scas
jge
add
inc
push
xor
mov
xchg
dec
testb
ds
adc
pop
fldenv
aaa
xchg
loop
in
ja
add
clc
jg
jge
fs
sub
xor
inc
outsl
inc
xor
sti
mov
rclb
fildl
fsubs
lret
add
jmpw
or
sbb
or
std
sub
cwtl
jnp
sar
testb
mov
sub
jp
mov
jl
push
into
push
imul
loope
xlat
or
adc
cmp
cmpsl
cwtl
sub
and
addl
dec
adc
cld
push
and
jnp
mov
jae
sbb
dec
arpl
jo
sti
cmp
mov
stos
adc
in
xor
cmp
mov
add
mov
cmp
out
and
cmpsl
addl
inc
push
or
jno
les
lret
movsl
in
lret
push
mov
in
sub
fcoms
in
jnp,pn
addb
nop
cmp
lea
test
in
insl
mov
xlat
cltd
pop
fs
sub
sub
stc
xor
cmp
out
sbb
or
xor
mov
push
mov
js
int3
lock
insl
dec
in
add
sbb
dec
sbb
add
ror
jns
add
gs
dec
ds
cmp
push
ret
insb
pusha
lea
add
pop
add
lea
mov
jo
xor
leave
leave
aaa
or
sbb
push
xchg
je
test
ds
out
push
add
dec
ja
add
xchg
fcmovnbe
fbld
add
and
xor
cld
push
cmp
xchg
rorl
aaa
iret
lea
mov
jo
repz
insb
xor
cmpsb
fmulp
add
cmp
fdivrl
imul
shll
inc
shrb
push
mov
sub
cmp
adc
push
frstor
cs
xchg
push
add
test
mov
pop
and
or
mov
popf
sarl
add
jnp
and
lcall
cmp
fstpl
xor
stos
fcomps
mov
dec
into
inc
mov
adc
mov
jno
pop
dec
and
inc
stos
mov
aaa
dec
in
or
loop
mov
mov
stc
cmc
inc
xchg
ret
mov
ror
stos
mov
mov
stos
cmc
scas
sti
lock
pop
push
cmc
pop
jae
jge
push
pop
pop
sbb
bound
in
test
sti
cli
xchg
cli
push
outsb
dec
inc
aam
and
jnp
xor
dec
mov
sti
xor
mov
scas
xor
mov
sbb
rcrl
xor
pop
mov
xor
cltd
dec
cs
cld
or
adc
xlat
loope
mov
mov
fistpl
bound
cmpl
andl
mov
cpuid
pop
aaa
dec
cmp
add
out
sahf
mov
lock
rcrl
pop
jp
mov
cld
aam
loopne
cmp
mov
jecxz
gs
sub
push
fcmove
mov
cltd
call
sub
sbb
cmp
and
cmpsl
or
push
pushf
dec
stc
jmp
mov
loopne
jge
adcb
pop
fdivrl
push
add
mov
xor
push
xchg
ds
shrb
sbb
mov
in
dec
dec
mov
dec
jmp
push
jne
mov
ja
or
or
mov
outsl
xor
xchg
mov
push
add
daa
in
lahf
mov
push
jle
rcrb
pop
dec
xor
in
movsb
or
repnz
jmp
sbb
adc
adc
cwtl
pop
mov
ds
xchg
in
jno
sbb
int3
pop
imul
imul
push
ficomps
je
int
jo
jb
inc
cmp
dec
add
insl
xchg
jge
ss
jp
and
ret
out
es
fldt
and
sub
in
push
mov
mov
cmp
or
shlb
mov
int
sbb
add
sub
xchg
dec
and
popa
insl
arpl
xlat
jne
ljmp
adc
inc
icebp
and
call
sbb
addb
dec
push
and
fndisi(8087
test
inc
push
and
icebp
gs
aaa
inc
sub
jb
mov
stos
out
jmp
daa
in
or
out
mov
leave
test
lods
xor
mov
fcoml
dec
mov
xchg
add
push
dec
pop
xchg
jne
es
mov
shll
mov
sub
stos
inc
insl
cltd
inc
fsubs
add
cs
stos
shr
fmull
pandn
fisubrl
int
das
and
jge
outsl
lds
mull
mov
add
xchg
mov
push
icebp
sbb
in
mov
and
aas
adc
mov
faddl
shr
aaa
mov
stos
and
dec
mov
loopne
sub
sub
xchg
adc
or
dec
ljmp
cmp
adc
insb
rcrl
out
cltd
cs
pop
mov
add
lcall
leave
loop
push
gs
push
sub
mov
test
mov
push
mov
fmull
jle
and
mov
test
imul
out
ljmp
or
push
mov
or
les
push
jmp
xchg
jne
jns
or
insl
and
jno
nop
xor
mov
jae
mov
cs
push
sbb
mov
bnd
test
ljmp
pusha
jo
dec
inc
push
dec
mov
push
ficoms
insb
and
mov
push
pop
into
dec
mov
movsb
lea
jns
or
fidivs
popa
push
xor
fidivrl
jge
jl
cltd
adc
push
shrd
push
pop
add
shr
jle
mov
jp
dec
sbb
hlt
ss
mov
inc
imul
ret
pop
pop
pop
or
mov
gs
mov
adc
sbb
mov
mov
movsb
inc
mov
fnsetpm(287
cmpsb
sbb
mov
inc
inc
mov
mov
sarl
imul
js
inc
jo
scas
push
pushf
dec
and
icebp
mov
or
cmp
sub
pop
outsl
icebp
fcmovnu
inc
ljmp
dec
es
jmp
cmp
mov
fnsave
mov
push
xor
jge
add
push
lret
push
inc
add
pop
push
lret
rcll
and
mov
mov
pop
rorb
aas
scas
mov
xor
or
pop
mov
popf
adc
sub
xor
and
xchg
cmpsb
cmc
xor
sbb
inc
scas
sub
test
and
dec
add
pop
in
cli
jno
adc
lcall
fsts
or
mov
jecxz
rorb
and
fs
cwtl
das
push
and
sahf
inc
sbb
pushf
inc
mov
mov
lods
adc
mov
pusha
jb
je
and
lods
repnz
outsl
sahf
inc
dec
or
adc
sbb
cmc
aaa
sbb
mov
add
jmp
sub
popa
mov
cmpsb
shlb
jmp
shlb
test
loop
lea
pushf
push
sub
sbb
ror
dec
jl
das
fisubrs
aaa
mov
xor
insl
mov
rclb
rcll
nop
jo
mov
sbb
fistl
jne
mov
jo
das
xor
stos
shrb
ds
push
aad
push
sub
push
call
and
int3
insl
int
xor
call
std
in
xchg
fldenv
arpl
dec
mov
jp
adc
in
popf
jmp
es
out
xchg
ds
fistpl
into
sbb
lret
test
aas
push
jno
cli
wrmsr
sbb
jmp
xchg
lahf
test
retw
or
fwait
aaa
or
clc
insb
or
pusha
hlt
movsb
test
xchg
xor
mov
ja
daa
enter
dec
in
andb
movsb
cmp
mov
rdtsc
mov
inc
stos
lods
arpl
dec
test
mov
test
insl
mov
aad
aad
jns
std
xchg
inc
into
les
dec
out
xchg
sbb
call
dec
or
or
in
je
std
xor
test
mov
fldt
popf
adc
mov
lods
sub
jmp
inc
arpl
push
jnp
mov
mov
lea
add
mov
lods
call
jns
jb
sub
add
jnp
xchg
out
gs
lea
push
mov
sbb
enter
sbb
mov
lahf
mov
mov
fadd
rcpps
jne
inc
adc
inc
lea
jno
inc
dec
cmp
mov
adc
mov
test
or
adc
and
inc
loopne
pop
lcall
push
daa
pop
cli
lock
xchg
cltd
cmc
fwait
out
scas
nop
inc
mov
jnp
fisubl
jns
testb
lds
stos
or
ljmp
lret
imul
mov
xchg
popf
pop
es
mov
pop
aad
outsl
imull
jo
gs
dec
dec
fdivl
xchg
or
add
addr16
sub
jmp
nop
push
idivl
add
cmp
and
outsl
cltd
xchg
inc
jb
aam
stos
fisubs
cld
pop
rorl
inc
out
push
inc
adc
fdivrp
ret
pop
cmp
mov
and
cmpb
out
movsl
add
and
ficomps
jmp
hlt
or
mov
fistpl
fisttpll
int3
pushf
adc
scas
cmc
push
or
jmp
or
cltd
pop
fnstsw
pop
bound
jb
jl
inc
pop
sub
add
stc
insl
jne
inc
mov
pushf
push
in
cmp
xor
sbb
mov
out
push
cmpl
nop
xchg
add
loopne
decb
stc
imul
mov
test
push
fidivrl
sarl
sti
mov
mov
outsb
insl
adc
std
push
adcl
add
adc
enter
fdivs
inc
or
xorb
cmp
leave
adc
mov
mov
and
pop
out
cmc
add
xor
sarb
std
mov
jns
lahf
mov
stc
imulb
push
xor
fdivr
roll
pop
movsl
and
dec
jg
or
rclb
notb
fwait
lahf
jns
ds
sbb
dec
shll
sub
xor
push
fwait
push
cmp
js
jo
bound
addr16
or
repnz
popf
leave
mov
mov
cmpsl
xchg
sbb
fwait
add
in
xchg
imul
insb
push
mov
stc
ds
iret
adc
ret
mov
xor
dec
ja
aad
sahf
jnp
xor
ljmp
and
sbb
jbe
add
inc
push
jle
dec
popa
inc
mov
rorl
in
cmc
mov
xor
jbe
int3
xor
mov
lds
sub
and
test
in
or
mov
rcrl
notb
and
or
or
adc
jmp
scas
int
xor
popf
fcomps
jno
or
lret
push
xor
cmpsb
scas
mov
in
out
fs
out
cmpb
mov
jle
test
pop
sahf
xor
das
sbb
scas
rclb
jnp
nop
cld
repnz
fldlg2
aas
adc
inc
adc
add
push
or
add
mov
dec
mov
lret
or
mov
jmp
mov
inc
cmp
aad
data16
or
fidivl
cmp
or
sarl
repz
fmul
bound
aam
data16
mov
jle
jns
sub
test
scas
jecxz
bswap
pop
push
push
fstps
push
out
bound
mov
nop
or
imul
in
push
std
out
fidivl
outsl
cs
imul
icebp
dec
xlat
out
pop
insb
mov
lahf
lret
push
and
rolb
lahf
add
fwait
ja
xchg
jl
and
test
add
stos
or
insl
sbb
inc
std
imul
mov
icebp
pop
divl
mov
dec
inc
cmp
rorl
dec
outsl
cmp
aas
out
pop
and
repz
dec
stos
outsl
push
or
aaa
imulb
inc
jb
or
adc
stos
bound
pushf
dec
movsl
repnz
mov
xchg
inc
cmp
outsb
jae
add
repz
dec
ds
out
push
adc
test
adc
xchg
dec
cld
mov
lods
cli
inc
xlat
pushf
pop
jmp
shlb
xchg
movsb
cwtl
pushf
outsl
jp
xor
adc
aas
flds
mov
jmp
pop
push
ss
lds
cmp
mov
movsb
xorl
sub
fildl
in
in
nop
jmp
xchg
push
jg
lods
mov
out
cs
lods
aad
cltd
out
lahf
lahf
inc
jno
jno
iret
lret
inc
inc
cs
fwait
jp
xor
iret
inc
ret
and
or
scas
cwtl
jb
inc
adc
cmc
cs
cltd
cltd
inc
movsb
loop
mov
aaa
sarb
adc
daa
pop
mov
andl
cmp
cmp
js
sarb
inc
int
and
sbb
pop
mov
int
pop
jge
jne
in
and
pop
push
adc
scas
fstps
bound
iret
adc
dec
jle
pop
cmpsb
push
or
inc
mov
pop
and
es
push
divb
gs
bound
jb
cmpsb
and
test
and
rorl
adc
add
mov
into
lcall
add
testb
mov
stos
jmp
or
shl
xor
cltd
cmc
jmp
stos
arpl
std
xchg
test
sti
jae
xchg
js
sti
into
daa
clc
je
ret
cs
xor
sbb
sti
inc
sar
xorb
inc
push
aad
mov
inc
lahf
jecxz
stos
add
iret
adc
mov
call
lds
adc
jbe
pushf
lcall
iret
repz
jne
pop
aaa
cwtl
cltd
shl
sti
jmp
adc
adc
arpl
mulb
jecxz
adc
dec
push
scas
mov
cwtl
jbe
mov
daa
inc
mov
xorb
jmp
sbb
cmp
push
jo
mov
xchg
xor
fdivr
int
jne
insb
stos
cmpsb
arpl
cli
mov
movsb
adc
mov
repnz
add
mov
adc
imul
sarl
daa
aas
jno
dec
or
jecxz
sub
add
sub
dec
cmovge
ljmp
subl
cs
xorl
mov
test
lcall
roll
or
ss
inc
adc
test
fisubrl
inc
lods
sbb
jecxz
clc
mov
xchg
inc
xorb
xchg
push
outsl
pushl
sbb
lcall
daa
out
popf
mov
inc
shrl
inc
and
xchg
xlat
out
mov
icebp
mov
push
or
in
lods
ds
xchg
dec
push
inc
data16
outsl
cld
mov
loope
mov
shlb
push
inc
xorb
xor
orb
pop
dec
sahf
xor
je
mov
insb
call
mov
add
xchg
movsl
jbe
mov
ja
add
xchg
mov
in
dec
lock
pop
cmp
hlt
out
aas
mov
stos
adc
clc
movsl
cmc
cmpsl
mov
jbe
or
ret
arpl
lock
jbe
inc
push
push
or
mov
push
nop
lods
std
ja
mov
add
cmp
xchg
leave
cmpsl
add
pop
adcl
xchg
cltd
les
dec
mov
or
xchg
xor
movsb
aam
stos
lahf
aas
fs
mov
push
mov
shll
hlt
inc
add
jp
add
pop
jns
in
mov
cwtl
psadbw
push
aad
cwtl
xor
sub
xchg
fmul
movsl
sti
nop
enter
dec
pop
xor
mov
sbb
or
cmc
push
test
test
test
shrb
add
ljmp
xor
stc
push
test
jo
aaa
jge
add
mov
int3
xlat
jl
pmullw
xor
push
adc
lods
pop
fsubs
jo
mov
xor
fwait
decb
xchg
push
cmp
pop
mov
ret
shl
adc
sub
scas
hlt
stos
shl
cmc
push
sub
adc
ljmp
das
popa
jbe
mov
out
sub
pop
pop
cmp
pop
xchg
sahf
push
dec
int3
adc
roll
das
pop
mov
or
xchg
fisubs
fwait
dec
ljmp
out
dec
jne
or
imul
mov
xor
fwait
stos
sub
adcb
mov
cwtl
mov
and
rorb
sub
int3
gs
test
push
jne
adc
inc
aas
inc
out
sbb
add
push
std
or
into
push
inc
daa
nop
add
push
notl
scas
cmp
pop
mov
sub
mov
xchg
rclb
and
cmpl
mov
bound
imul
inc
stos
push
jne
pushf
jnp
xor
aas
push
and
adcl
scas
fwait
inc
cmp
sbb
xchg
int
pop
in
es
xchg
nop
push
jae
and
andb
ljmp
jae
inc
push
jmp
cmc
mov
lret
lcall
xchg
push
mov
fistl
push
scas
add
xlat
mov
dec
xchg
dec
lcall
xor
sbb
inc
cli
cmpl
pop
sbb
push
hlt
bound
fwait
sub
cwtl
dec
les
mov
inc
rorb
xchg
cmp
jno
clc
sbbb
sub
inc
mov
or
stos
call
jae
fsubl
dec
xchg
xchg
mov
dec
mov
dec
add
fidivl
push
mov
jp
movsb
jmp
daa
in
outsl
xchg
dec
int
cmpb
iret
add
pmaxub
push
push
push
scas
and
stos
inc
push
repz
divl
add
fwait
jne
fisubl
sbb
push
pop
pop
loope
pop
mov
imul
stos
js
lds
xchg
cmp
adc
hlt
imul
fistpl
mov
pushf
dec
insl
aad
bound
cmp
sub
xchg
jp
pop
add
cmp
adcl
push
adc
nop
mov
imulb
xor
sbb
sbbl
and
leave
mov
gs
jb
data16
add
jmp
mov
push
dec
mov
lcall
xor
add
addr16
jge
fildl
mov
push
shll
cli
nop
cld
sub
call
add
pop
jae
mov
mov
nop
add
pop
push
loop
dec
inc
inc
in
subb
popa
daa
ret
mov
lock
rolb
cmp
stc
sub
shlb
out
sbbb
dec
mov
mov
xchg
je
aad
or
jae
mov
push
subb
xor
in
pop
push
xchg
insl
jae
call
shrb
sbb
int3
push
push
sub
mov
dec
shll
jmp
cli
push
push
dec
lods
scas
adc
ret
sti
sbb
outsl
sbb
or
jae
lea
repnz
jo
cltd
add
pop
and
mov
cmp
jbe
repnz
mov
out
adc
shll
xchg
xor
xlat
and
dec
inc
cmc
fsub
mov
xor
cwtl
pop
add
loopne
popa
jle
cmp
mov
cpuid
pop
insb
sti
push
push
add
mov
std
jo
sbb
cltd
add
xorb
pop
lds
in
mov
add
pop
xchg
add
loope
aas
faddp
enter
add
pop
ss
fs
pop
push
sbb
xor
mov
lret
push
mov
arpl
lea
ja
and
sti
dec
aad
push
arpl
xchg
fsubrl
push
cmp
jl
pop
lea
movsl
mov
movsl
out
leave
fucom
aam
fstpt
sub
loop
xor
adc
stos
push
and
mov
and
std
shrl
pusha
lret
mov
adc
and
les
jl
js
or
and
test
or
icebp
test
movsb
xor
jl
lcall
leave
je
push
nop
sbb
daa
lock
daa
push
cmp
rorl
inc
addl
pop
enter
popf
lret
add
dec
popf
sbb
nop
push
jmp
rolb
ror
xor
add
les
inc
add
inc
dec
out
shl
out
mov
cmpsl
fcomps
aaa
xchg
cmp
ret
rcrl
mull
push
movb
sbb
pop
bound
or
inc
add
inc
icebp
test
loope
jo
test
jae
sar
sub
xchg
call
ljmp
nop
fstpt
mov
mov
xor
xchg
ficompl
lds
ret
ds
mov
pop
ja
xchg
int3
jl
jecxz
pop
dec
pop
daa
test
mov
loopne
out
out
movsl
lret
movsb
add
pop
sbb
into
in
orl
mov
xor
jns
adc
dec
or
idivb
or
jnp
xchg
or
shlb
gs
lock
cwtl
cmp
jne
sbb
cmc
test
lods
imul
dec
aaa
jg
mov
imul
jbe
inc
or
push
dec
std
pop
andl
sbb
cmp
mov
sub
ret
lea
xchg
pushf
rcrb
xchg
test
js
cmp
jo
jns
repz
lret
in
mov
loop
mov
cmp
pop
adcb
leave
add
stos
pop
or
pop
sbb
sbb
adc
into
rcrl
popa
scas
jp
stos
push
int3
push
jg
stos
test
sbb
push
xor
sbb
enter
push
movsl
aas
cmp
adc
push
aas
and
ljmp
cmp
mov
out
cmp
mov
push
or
lods
cmp
sub
addr16
mov
ljmp
mov
jo
stos
mov
pusha
mov
pushf
jo
xchg
fndisi(8087
jno
xchg
xor
arpl
push
mov
popa
insl
pop
aam
aaa
dec
loopne
xchg
mov
cmp
push
lods
dec
pop
jns
push
outsl
int
cld
loop
inc
clc
scas
dec
mov
jmp
adc
xor
fsts
cltd
add
adc
mov
shr
leave
inc
cmp
mov
fsubp
dec
xchg
subl
imul
test
call
xchg
dec
add
test
mov
jg
jb
mov
xchg
or
sbb
enter
jecxz
adc
cmp
pop
xchg
xchg
jae
jp
ss
loopne
imul
daa
push
mov
in
cmp
sbb
jno
inc
cmp
fisubl
faddl
das
shrb
inc
icebp
or
pop
xchg
movsl
mov
and
sbb
arpl
pop
pop
loop
or
or
xchg
jmp
pop
xchg
popf
pushf
out
std
mov
mov
pop
push
add
arpl
fnstcw
scas
aas
adc
mov
out
out
mov
out
sub
add
jmp
sub
cwtl
jno
movsb
mov
pop
pop
scas
sub
je
cwtl
sbb
pop
roll
aad
lock
or
cmp
or
aad
jecxz
icebp
ja
jne
inc
pop
adcl
ret
fisttpl
xor
push
and
mov
dec
in
cld
push
or
xchg
jne
xchg
dec
mov
xor
add
cmc
aaa
clc
sub
loope
test
popf
dec
lods
movsl
cltd
inc
push
mov
cmp
push
mov
add
add
les
sahf
mov
pop
jb
xor
mov
push
fwait
jge
lret
mov
shrl
pop
lea
call
insl
dec
mov
inc
sbb
mov
jae
and
mov
inc
inc
leave
xchg
push
in
or
cmp
fsubrp
data16
lds
inc
lcall
xchg
out
mov
js
dec
imul
daa
stos
jns
lahf
shlb
jg
mov
cmp
sbb
add
xlat
pop
cmp
add
stos
sbb
scas
and
ret
imul
mov
sub
inc
adc
xor
mov
int
jnp
cmpsb
call
test
or
mov
enter
adc
out
xor
js
cmp
push
jecxz
fs
lret
stos
mull
test
pop
into
sbb
adc
cltd
test
cltd
jmp
sub
mov
mov
dec
mov
loope
imul
dec
mov
pop
mov
ljmp
xchg
out
mov
mov
das
jge
xlat
imul
mov
pusha
add
dec
adc
call
mov
xor
rorb
inc
jb
pusha
stc
in
mov
aaa
or
aaa
and
or
mov
sub
mov
mov
addr16
and
jp
mov
test
or
mov
adc
sub
xchg
subl
mov
push
cld
decb
aam
gs
adc
and
insl
cmp
iret
shr
in
pop
ljmp
add
add
cmp
dec
fisubl
arpl
cld
add
and
into
mov
inc
jmp
add
addr16
cmpsb
sbb
xor
add
mov
xchg
pop
inc
jmp
xor
jnp
fstl
inc
add
xchg
jg
sbb
pop
or
into
addr16
enter
xor
add
jns
call
sub
add
ret
fwait
mov
mov
cmpsb
mov
xchg
bound
xchg
xchg
push
in
xorl
shlb
cmpsb
inc
cmc
mov
adcl
dec
out
nop
and
mov
jb
aad
into
ds
subb
jle
std
fcoms
ljmp
adc
in
aas
dec
adc
add
pop
adc
sub
jl
out
cmc
and
push
fbstp
mov
xchg
dec
sahf
out
xor
movsb
leave
subb
out
mov
divl
xlat
dec
inc
sub
xor
xlat
fcompl
lods
sub
divb
sti
pop
push
fldt
loop
divl
adc
and
jecxz
cmp
or
jne
div
cld
mov
jge
aad
inc
jmp
xchg
adc
or
ss
cld
add
xchg
nop
mov
int3
cltd
mov
push
enter
test
cwtl
and
mov
shrl
sbb
pop
sub
sub
or
ljmp
adc
pop
jae
inc
dec
bnd
pop
push
dec
sub
adc
pop
sub
adc
je
fnstenv
cli
sbb
fisttpl
or
xchg
dec
ret
ja
clc
outsl
pop
cltd
mov
or
mov
scas
in
scas
pop
adc
xchg
xchg
in
jmp
pop
fucomi
add
stos
push
mov
in
jb
and
fdiv
jbe
sti
inc
fidivrs
js
and
das
test
sahf
jae
mov
pop
push
pop
mov
sbb
inc
adc
mov
jbe
inc
js
push
push
and
jne
push
imul
arpl
fwait
jbe
lods
lock
mov
rolb
adc
xor
daa
mov
inc
leave
scas
gs
jecxz
js
out
outsl
xchg
stos
lcall
cli
insl
out
mov
jns
ja
push
fwait
idiv
xchg
mov
iret
int
into
cmp
cmp
and
fnstenv
mov
lds
push
fistps
and
mov
dec
push
jnp
aad
ja
or
jecxz
adc
ljmp
loop
popf
mov
mov
jno
xlat
data16
push
adc
mov
xorb
std
jecxz
divl
xor
xlat
dec
or
mov
and
stos
test
test
jge
sbb
fidivl
mov
out
mov
cmpsb
jp
js
push
ljmp
mov
mov
mov
mov
xchg
pop
stc
or
aas
into
fisttpl
lgs
jo
inc
push
add
lock
push
nop
mov
inc
inc
mov
dec
mov
xor
jl
leave
lret
jecxz
movsb
cmc
fidivl
into
fidivrs
loopw
out
jnp
jecxz
mov
add
sbb
mov
mov
pushf
subb
xchg
in
pop
in
fists
adc
or
out
push
enter
sbbl
push
pusha
pop
xor
dec
xor
or
add
inc
ja
jp
and
sbb
xchg
outsl
roll
push
xchg
sub
xchg
mov
add
in
jmp
xchg
sbb
jbe
negl
adc
xchg
jmp
jb
inc
jecxz
aaa
or
cmpsb
enter
fisubrl
xor
xor
test
xor
or
gs
dec
cld
in
sbb
les
and
or
inc
outsb
movsb
push
aam
pop
xchg
test
jns
repz
pop
and
jnp
mov
mov
mov
inc
lcall
jae
dec
pop
pop
push
mov
cmc
outsb
add
mov
inc
aaa
insb
out
pop
lods
mov
push
jns
sbb
test
push
icebp
test
in
dec
je
or
inc
imul
in
inc
and
into
push
fistl
mov
ficoms
enter
xchg
lret
movsl
jae
js
add
int
dec
jo
dec
sub
adc
or
mov
gs
std
lret
jb
sub
subb
and
adc
dec
pop
jno
xchg
or
xchg
sarb
cmp
lds
or
insl
js
outsb
sarl
mov
adc
movsl
jns
ds
xchg
je
rol
and
js
icebp
push
mov
add
scas
or
les
push
xor
bts
or
mov
jmp
test
int3
sub
scas
stos
jge,pt
xor
and
shl
fwait
stos
fidivrs
fistpll
loopne
emms
imul
repz
mov
ljmp
stos
jmp
cmp
movsl
data16
sbb
aas
jbe
lret
sub
jmp
mov
xor
in
rclb
cmc
sbb
in
jmp
lods
adcb
dec
fs
add
xchg
add
sbb
and
imul
hlt
mov
add
dec
mov
rorb
arpl
push
mov
xor
cmpsl
push
int3
enter
and
mov
sub
lret
dec
cmp
loope
inc
inc
sbb
inc
mov
aam
push
cmp
pusha
es
das
imul
shlb
stos
in
xor
pop
pop
cmc
neg
mov
sub
xor
sti
out
dec
ljmp
enter
add
dec
inc
add
pop
cld
mov
mov
inc
dec
sub
popf
mov
loope
inc
wrmsr
fisubrl
ret
icebp
addr16
and
lds
xor
hlt
stos
sub
insb
adc
rol
lea
jae
clc
mov
std
dec
repz
aas
push
mov
jmp
xchg
and
sahf
cmp
adc
imul
fwait
xor
ja
movsb
movsb
inc
sbb
xchg
mov
dec
pop
add
shrb
jecxz
stc
adc
fnstsw
jecxz
and
push
adc
in
leave
aad
inc
std
test
lds
pop
or
mov
add
jbe
pushf
jmp
xor
pop
pusha
inc
lds
pop
cmpxchg
fwait
stos
mov
dec
push
mov
jle
andb
daa
scas
jne
mov
in
pop
xor
mov
pop
mov
cli
testl
sbb
xchg
xlat
int
mov
test
pop
or
outsl
lods
popa
add
stos
rorb
mov
das
imul
lahf
pop
repz
lods
addr16
cmp
sub
int
inc
and
and
ljmp
add
dec
mov
jbe
xor
std
test
adc
xchg
std
sbb
fdivs
and
sub
lds
das
sub
pop
ja,pt
xchg
and
sbbl
test
sbb
dec
leave
icebp
lahf
push
mov
and
in
aas
push
add
out
enter
sbb
mov
cmp
jns
outsb
or
jno
mov
lock
shlb
fdivs
mov
mov
adc
adc
add
jmp
sub
in
sbb
jae
dec
xor
jnp
rcl
ret
mov
nop
xor
or
cwtl
xor
or
push
ljmp
jne
jb
mov
xor
sub
repz
fistl
popf
pop
xchg
adc
in
pop
inc
push
add
jl
cmp
sbb
mov
fnstenv
lds
aad
sahf
xchg
dec
jbe
mov
rclb
jae
push
jnp
out
cs
js
jmp
mov
push
shrb
icebp
and
scas
stos
pop
mov
push
cld
rorb
loopne
adc
lea
or
cs
sbb
dec
stos
push
int
or
xchg
icebp
test
bound
mov
in
std
pop
pop
pop
add
cmp
movsl
inc
ret
pop
insl
fstl
mov
popa
add
cltd
jg
pop
cmp
fwait
scas
cmpsl
cltd
and
popf
pop
fadds
jg
dec
xchg
adc
adc
cwtl
mov
imul
ljmp
push
xor
mov
or
sub
lds
pop
pop
add
outsl
lahf
push
fcmovu
iret
pop
mov
out
adc
mov
mov
fsubrl
out
cmp
js
and
repnz
dec
mov
outsl
cmpsb
jge
cmp
pop
cs
je
xchg
push
pop
xor
stc
jbe
adc
lods
test
pop
push
xchg
ficoms
std
lret
push
pusha
addr16
fdivl
in
push
mov
inc
xchg
push
aad
cvtps2pi
aaa
sbb
mov
xchg
int
enter
mov
mov
or
mov
push
aam
xchg
dec
scas
mov
ret
mov
mov
adc
add
sbb
insb
outsl
testb
lock
jmp
inc
dec
lret
jg
pop
popf
xor
and
inc
sub
jno
and
int
outsb
add
hlt
dec
lock
inc
nop
fs
rorb
mov
sbb
pop
cwtl
mov
iret
mov
sub
xor
mov
jge
pop
jg
test
sbb
push
jmp
outsl
xchg
mov
jno
stc
mov
sahf
jl
inc
jo
je
mov
mov
int
imul
mov
xor
xor
bound
xlat
out
adc
adc
imul
icebp
in
lcall
sahf
and
test
inc
sbb
and
inc
mov
add
adc
scas
jle
or
cmp
mov
shrl
sub
clc
js
into
out
bound
into
mov
cli
jp
push
jno
dec
loope
sub
repnz
pop
inc
es
ret
xchg
lods
cmp
push
repz
sbb
dec
loope
shll
ss
jb
or
dec
and
jle
aam
adc
call
ljmp
mov
push
mov
and
cs
add
or
cmp
push
dec
dec
push
cmpps
jae
inc
xchg
fwait
out
inc
scas
mov
pop
cld
xchg
adcl
es
lea
in
push
mov
sub
stos
outsb
adc
hlt
scas
outsl
aam
shll
mov
jle
movsb
mov
and
insb
xor
loopne
adc
in
addb
push
sbb
sbb
pop
sbb
testb
nop
cmp
jmp
test
inc
repnz
mov
sub
sti
cmpb
pop
pop
or
ljmp
or
lret
add
andb
add
pop
pop
scas
jbe
or
xchg
jmp
in
xchg
sahf
dec
xchg
fucom
fdivrl
push
cmc
test
jecxz
jb
in
mov
in
mov
cltd
imul
jb
cltd
sti
ja
sub
push
incl
push
or
mov
pop
int3
cmp
inc
shl
push
outsb
sub
or
outsl
pop
fidivs
mov
sbb
ja
mov
push
ja
or
loop
popa
loopne
adc
outsl
add
push
xlat
push
repz
pop
inc
daa
sub
notl
xchg
push
aas
xor
pop
pop
mov
mov
std
or
test
add
ds
insl
cmp
xchg
xchg
cmp
cld
pop
cwtl
jmp
pop
jecxz
rcrl
push
jmp
out
jge
push
daa
xchg
stos
cmp
dec
sbb
mov
mov
jle
mov
mov
lret
dec
enter
dec
pop
cmp
push
adc
push
push
fidivs
js
pop
fimuls
inc
dec
inc
cltd
ret
mov
dec
popf
cltd
inc
mov
lcall
dec
je
add
fists
fs
jnp
push
call
adc
test
sub
inc
pop
jbe
xchg
fisubl
cmp
leave
lcall
dec
daa
cmp
je
push
mov
sarl
lock
sbb
stos
jg
push
sub
sbb
add
or
or
and
mov
fcmovb
call
sti
xchg
lfs
ds
shr
aam
sbb
add
pop
cmp
clc
clc
xchg
and
in
dec
adc
or
dec
push
mov
mov
cmp
cmpsb
sub
inc
in
sarl
add
add
cmpxchg
push
test
ss
repnz
jmp
rcrl
sbb
jp
mov
pop
test
xor
mov
inc
fmuls
sbb
sub
je
push
xchg
and
cmp
scas
pusha
ljmp
inc
sub
ja
aam
or
xchg
inc
add
mov
lock
aaa
fistps
sarb
inc
lods
ret
imul
push
sbb
iret
std
int3
pop
inc
imul
fistl
out
adc
lcall
fnstenv
jae
movsb
les
aaa
fstpt
sbb
leave
rorb
cmpsl
xor
inc
xchg
push
and
push
pop
mull
dec
bswap
imul
arpl
jns
je
sub
clc
push
clc
popf
push
outsb
cmc
idivb
dec
ss
mov
lret
popf
cmc
jge
out
imul
rorl
pop
add
mov
dec
cmp
dec
orb
in
les
sbb
nop
movsl
pop
scas
jge
popf
dec
push
roll
repz
cmp
dec
mov
mov
aad
or
jnp
mov
sub
and
mov
in
in
jno
sub
mov
sbb
loop
jp
pop
mov
mov
lods
loopne
pop
lock
test
int3
out
and
stos
mov
mov
out
push
sub
out
or
jb
dec
adc
shl
and
sti
ljmp
or
add
mov
flds
sbb
jb
in
jns
call
dec
mov
ret
sub
mov
mov
xchg
or
xchg
out
jge
std
es
test
dec
jge
and
int3
data16
inc
lahf
sarw
cli
cwtl
mov
popa
cmpsl
mov
les
inc
push
roll
mov
ret
inc
add
call
gs
xor
imul
shlb
pop
pop
sbb
cmp
fists
addb
icebp
jle
in
cwtl
outsl
fwait
pop
pop
sbb
mov
addr16
into
mov
lods
arpl
add
mov
int3
aaa
sub
pusha
je
push
xchg
fnstenv
in
sbb
mov
stos
cmp
orb
es
jb
jg
mov
insl
sbb
pop
aaa
mov
mulb
xchg
hlt
inc
or
leave
and
push
jo
ss
insl
sti
in
pavgw
mov
subl
outsl
jb
addr16
jle
xor
movsb
inc
aas
cwtl
xor
test
ljmp
sbb
test
aaa
sbb
sbb
stos
ret
jl
packuswb
push
js
loope
int
jbe
jecxz
call
fcom
mov
xor
frstor
into
loopne
into
jbe
hlt
ret
loop
roll
or
pop
dec
leave
cmp
mov
aad
mov
aam
xchg
push
or
lods
and
pushf
leave
mov
shr
shll
sbb
add
jno
in
cmpsl
std
fiaddl
or
daa
jecxz
loopne
sub
fildl
shr
aaa
je
push
icebp
xchg
cmc
push
add
push
jnp
jb
xor
lea
or
pop
xor
or
ljmp
inc
jecxz
push
cmp
ficoml
lds
imul
dec
ljmp
mov
sub
push
or
add
mov
stos
testb
mov
or
inc
in
pop
sbb
pop
rol
in
lahf
xchg
lods
lahf
mov
mov
inc
cltd
or
mov
mov
sti
ss
and
je
inc
xchg
cmpsl
sbb
mov
jns
or
sahf
imul
mov
aad
jp
push
push
shlb
gs
inc
mov
jb
scas
mov
popa
sub
inc
jns
and
decl
or
xchg
mov
add
or
ficoml
in
int3
aad
int3
stos
jge
adc
mov
xchg
pop
adc
mov
and
or
stos
lea
mov
test
inc
pop
insl
jne
jo
adc
mov
xchg
mov
jo
xorl
mov
rol
jnp
sub
lods
pop
add
or
mov
aad
icebp
pop
sahf
jecxz
push
out
push
scas
js
jge
js
dec
mov
rolb
adc
movsb
lret
out
mov
aas
std
sbb
add
clc
repz
arpl
stc
xchg
fists
sub
inc
int3
pop
mov
mov
dec
loope
xchg
pop
loop
dec
nop
cmp
push
adc
or
xor
or
shrl
mov
out
test
mov
inc
inc
xchg
inc
mov
mov
into
add
sub
mov
mov
ljmp
push
jb
dec
cmc
inc
cld
push
in
sti
cmp
mov
daa
fnstenv
stc
dec
dec
mov
mov
imul
ss
adc
pop
mov
jo
xorb
ds
sbb
arpl
insb
or
pop
sub
adc
bound
xor
dec
test
movsl
aad
aaa
ds
or
xchg
sbb
and
jnp
push
enter
stos
enter
push
fwait
pop
mov
popl
and
pusha
cmpsb
xor
popf
hlt
xor
cs
sbbl
xor
mov
lea
insl
stos
fnstcw
out
jge
hlt
enter
int
cmpsl
sbb
push
fdivrs
aam
out
adc
testl
les
jno
push
cmpsl
mov
movsl
aad
js
sub
notl
aas
sahf
addr16
ds
loop
or
test
or
cmpsb
mov
xor
int
fs
insb
cmc
push
pop
mov
cli
push
mov
jbe
pop
arpl
or
dec
in
imul
mov
shr
mov
pusha
shlb
lods
fcomps
xchg
test
xchg
adc
cmpl
test
dec
daa
out
xchg
sbb
add
inc
xchg
sbb
ficompl
imulb
xchg
pop
mov
or
iret
out
ret
lods
push
sahf
sbb
pop
inc
imul
sub
sti
adc
inc
jl
outsb
sub
addr16
adc
jns
cltd
pop
and
sbb
sbb
or
cli
push
inc
out
sbb
xchg
jp
pop
out
test
outsb
and
and
imul
ljmp
stc
ljmp
aam
loopne
mov
xor
adc
sbb
xchg
shll
and
dec
loope
mov
in
fnsave
shll
mov
mov
xor
bound
jg
push
mov
push
or
mov
dec
lods
sub
xor
outsl
ret
cmp
inc
pop
push
enter
and
js
or
xchg
lods
dec
ja
pushf
jg
loopne
pusha
sbb
xor
jno
sbb
mov
pop
xor
repnz
imul
pop
hlt
outsb
xor
xlat
xchg
arpl
bound
imul
enter
mov
cmp
pop
inc
test
rcrb
cltd
frstor
dec
cmovno
in
das
xchg
mov
shrl
cmp
push
pop
test
fs
adc
loop
push
sti
imul
scas
lret
cmpl
add
std
addb
add
scas
je
in
sub
sub
ret
xor
and
push
mov
out
mov
in
mov
and
in
int
add
xlat
ds
pop
adc
clc
test
inc
dec
int3
and
ret
inc
std
xchg
xchg
ljmp
in
cmp
mov
pop
dec
pop
das
mov
and
ret
decb
js
dec
aad
aaa
scas
imul
add
sub
cli
jo
dec
mov
add
std
movsl
idivl
mov
xor
jle
std
in
insb
aas
pop
add
jge
xchg
jge
mov
lods
cld
pushf
push
les
xlat
mov
xor
xchg
lods
mov
fstpt
dec
xlat
divb
aam
push
xlat
xor
lahf
fcompl
ret
imul
bound
mov
int
nop
adc
leave
popf
cmp
mov
jl
xor
pop
daa
adc
into
popf
out
je
cmpsl
add
inc
sbb
xchg
jno
or
pop
or
dec
push
and
cmp
mov
jg
sarb
adc
lret
imulb
subl
loope
push
sarl
imul
ljmp
les
adc
and
push
sub
outsb
xchg
lods
sbb
and
pop
mov
pop
iret
insb
jae
pop
push
ja
mov
cmpsb
sbb
jl
and
in
jg
imul
fisubl
inc
and
push
pop
or
mov
adc
rol
sbb
add
inc
inc
addr16
nop
mov
or
cli
movsb
adc
mov
adc
repz
add
xor
rolb
mov
lret
push
sub
pop
or
ret
jae
jne
and
mov
loop
pop
jno
add
pushf
insb
push
cli
mov
clc
addl
xor
mov
cmp
mov
pusha
out
or
out
xor
and
add
outsb
sbb
jg
cmp
arpl
cmpsb
cltd
imul
mov
in
sbb
scas
test
movsl
fcomi
xchg
xchg
ds
jne
add
cmp
xor
imul
bound
shll
add
mov
mov
aaa
stos
mov
hlt
cwtl
push
xor
sub
adc
push
aam
mov
in
push
icebp
mov
test
cltd
xchg
outsb
xor
fwait
jecxz
ficomps
sub
rolb
popa
and
iret
and
loopne
inc
push
inc
ds
lcall
pop
push
cmpsl
in
mov
ficoml
push
adc
outsb
mov
mov
icebp
dec
pop
jp
insb
inc
mov
lods
out
dec
in
in
or
sub
xlat
mov
fstl
bound
movsb
mov
aad
fbld
insl
insb
es
or
or
int
lods
and
jo
daa
aad
mov
or
stos
pop
notb
mov
push
and
test
shll
loopne
out
sbb
cmp
movsl
hlt
jmp
hlt
out
mov
pop
add
xchg
mov
ds
xorb
arpl
jo
test
stc
subl
in
xchg
cmpsb
fsts
iret
dec
pop
mov
pop
aam
xchg
popf
pop
push
scas
mov
push
ret
inc
in
xor
pop
iret
leave
inc
or
and
loopne
mov
adc
add
xor
adc
btrl
icebp
mov
jb
jl
scas
in
aad
loopne
cmpsl
dec
cld
testb
add
stos
in
negl
dec
rcrb
clc
orb
cmpsl
mov
stc
andl
js
inc
mov
imul
aad
inc
add
outsb
mov
jecxz
cmc
lret
iret
adc
add
nop
aas
scas
dec
cmp
or
sarl
out
cwtl
loop
movsl
cs
xor
sbb
pusha
lock
out
ss
and
or
push
idivb
inc
mov
pop
mov
xchg
sahf
int
xor
neg
enter
sar
xor
fldcw
jno
adc
les
jne
mov
jg
cltd
adc
and
xor
pop
pop
adc
sbb
push
insl
in
int
mov
repnz
cmpsb
pusha
cmp
inc
jo
mov
pop
mov
add
jp
mov
mov
loop
std
jge
jb,pt
xchg
pop
negb
and
jo
repnz
mov
sbb
lods
rorl
jne,pn
dec
insl
in
popl
test
and
pop
mov
fldpi
jo
or
xor
out
loopne
mov
lret
xchg
mov
pop
jge
cltd
xlat
es
das
addr16
fmul
in
add
sti
jmp
bnd
xchg
int3
inc
leave
push
minps
cmp
xlat
mov
cmp
sti
mov
push
outsb
out
lcall
jmp
sub
mov
jmp
push
push
fistpl
mov
andb
decb
loopne
jno
mov
mov
lahf
jne
lret
sbb
inc
mov
jbe
or
fprem1
add
jge
inc
movsb
dec
lret
repz
xchg
xlat
fidivs
ja
ret
jnp
fsubrs
dec
aaa
pop
orl
or
mov
in
enter
jg
jmp
mov
notl
pop
lods
push
and
fwait
subl
sbb
shll
adc
dec
out
stos
daa
jae
les
in
push
es
mov
in
je
xchg
xchg
scas
inc
pop
or
mov
cmp
pop
xchg
test
mov
or
pop
dec
mov
sbb
dec
icebp
repz
mov
out
fidivrl
pop
mov
sub
test
mov
sbb
in
cli
pop
jle
add
sub
cmp
adc
or
lret
pop
mov
jmp
in
xor
into
into
add
jmp
or
jb
mov
xchg
jb
xor
pop
das
mov
add
or
jno
adc
es
imul
cld
lcall
cmpsl
inc
gs
add
xor
shrb
sti
aad
mov
shlb
aam
icebp
leave
cmp
xor
inc
pop
or
or
xor
out
cmpsl
xchg
ret
mov
aam
in
lods
fidivrl
loopne
mov
fcompl
jge
fldl
mov
in
lods
lret
fistps
sbbb
mov
sti
test
test
mov
iret
sti
dec
and
or
jmp
shrl
shlb
popl
outsl
test
fidivl
cli
fsubs
adcl
xchg
push
int3
shrb
xor
addr16
push
xlat
stos
lahf
je
insl
mov
mov
inc
sbb
sti
cwtl
iret
push
cmp
fimuls
andl
andb
mov
sbb
leave
jg
pop
imul
es
imul
mov
notl
daa
push
ja
mov
push
cmpsb
inc
pop
outsl
jne
loope
pop
adc
pop
dec
inc
loope
jno
ja
test
lds
fwait
mov
test
lods
int
out
lret
enter
xchg
mulps
out
stc
aam
ja
jecxz
movsb
xchg
clc
lret
adc
adc
std
popa
mov
shll
mov
push
push
mov
out
pop
iret
and
pop
inc
sti
push
sub
mov
push
imul
add
sub
and
pop
aas
loope
jb
adc
insb
cmp
dec
cmpl
push
test
ds
cs
ret
push
add
out
mov
cmpsb
out
jle
bound
shr
mov
arpl
test
aas
test
jae
sbb
in
sbb
xor
cmp
mov
icebp
mov
negb
dec
imul
in
push
pop
jb
fisubrs
push
fnsave
ljmp
divb
cmp
mov
jmp
xchg
inc
cmp
xchg
cli
icebp
lahf
iret
mov
dec
cmp
out
outsl
add
fisttpll
add
shr
push
fsubr
ret
mov
xlat
lcall
das
popa
pushf
push
pop
stos
jno
mov
mov
leave
es
or
cmpsb
clc
mov
sahf
jbe
daa
movsb
out
sub
sub
mov
or
shrl
pop
shrb
repz
cmp
adc
push
or
or
xor
lcall
call
repz
scas
outsl
nop
ja
inc
ret
leave
orl
hlt
mov
inc
cld
adc
sbb
les
dec
or
rclb
adc
fidivrl
lcall
daa
or
adc
push
cld
aaa
cmp
and
arpl
push
xchg
dec
loop
mov
cmpsl
lods
jmp
test
or
mov
cwtl
out
repz
or
insb
js
in
shlb
ret
fsts
outsl
push
mov
sbb
pop
out
divb
and
sahf
out
in
repnz
pop
addr16
inc
sbb
lea
add
xor
hlt
add
cmp
dec
xchg
inc
mov
pop
ret
cwtl
mov
fbstp
jl
or
into
scas
hlt
out
push
cmp
aam
push
scas
mov
movsl
stos
pop
data16
jl
rcr
sbb
outsb
lahf
repz
dec
jp
lods
cltd
aad
sub
jp
pushf
loope
int
imul
ss
mov
add
scas
fs
push
pop
jle
clc
fs
add
sub
sti
aas
jmp
adcl
mov
mov
aad
mov
or
in
sti
pop
jae
mov
fistps
popf
jle
and
ljmpw
push
sub
jp
dec
fmull
xor
in
cmc
fadd
mov
push
pop
mov
repnz
repnz
mov
out
scas
cmp
mov
adc
and
mov
repnz
push
je
out
jb
add
shl
je
mov
int3
xchg
je
jnp
or
or
fists
sbb
jnp
lods
jno
scas
xchg
mov
push
dec
outsl
jae
or
inc
stc
ss
mov
sub
negb
js
adc
mov
in
test
int
out
inc
ret
adc
jbe
shr
lock
lahf
in
in
pop
jae
pushf
xchg
cmp
dec
loopne
jge
xlat
imul
xor
ss
pop
lret
xchg
loope
test
outsb
mov
out
fcoms
pop
fwait
cld
jecxz
fcmovnbe
lea
dec
jbe
mov
jno
int3
cmp
push
pop
xlat
das
sti
mov
pop
pop
push
add
mov
add
rcl
out
fldcw
mov
adcl
xchg
das
cmp
cltd
loope
and
xor
loopne
subl
test
enter
jecxz
aas
push
mov
add
push
mov
push
lret
lcall
fmull
jmp
sti
mov
iret
mov
roll
mov
inc
in
cmp
and
mov
pushf
dec
mov
or
popf
imul
lcall
ljmp
cli
outsl
repnz
cmp
mov
sbb
dec
mov
xor
out
aaa
sbb
pop
divl
gs
es
mov
jmp
mov
adc
push
pop
mov
mov
mov
mov
outsl
and
and
xor
mov
cltd
ret
push
negl
xor
sbb
xchg
push
fnstcw
inc
fmull
and
mov
push
jno
inc
loope
test
mov
or
clc
cmp
jo
ljmp
movsb
aad
imul
sub
jo
push
cmpb
inc
dec
sub
push
push
xchg
cmp
mov
pop
xor
scas
add
sti
cmp
push
insl
mov
testl
inc
int
sbb
mov
in
and
inc
pop
lds
movsl
cmp
jne
cltd
daa
roll
je
je
add
testb
jmp
mov
jno
shl
call
jecxz
mov
ljmp
xchg
pop
cmp
cli
push
fcoml
movsl
pop
mov
in
imul
icebp
and
and
insb
push
and
jecxz
das
sub
and
leave
subb
mov
je
fstpl
arpl
jo
pushf
out
popf
out
hlt
jl
pop
ljmp
mov
and
shlb
or
movsb
xchg
fisttpll
fwait
into
fistpll
scas
stc
sub
cwtl
test
fstl
inc
pop
rcr
cmp
add
xor
int
mov
mov
jecxz
pop
test
cmpsl
addr16
cs
mov
out
xchg
mov
xor
ret
leave
xor
sbb
sub
ja
inc
sbb
daa
mov
jge
int
or
out
sub
fisttps
hlt
xchg
mov
shl
fs
pop
or
push
push
popf
cli
loopne
push
push
fldt
inc
mov
js
push
sbb
mov
testl
pop
dec
enter
sub
cmp
and
jb
in
dec
fwait
cmp
lea
xchg
ja
fmuls
and
iret
hlt
cmp
xor
cmp
bound
dec
sub
cli
inc
or
mov
into
mov
mov
or
push
scas
pop
in
xor
mov
adc
and
frstor
cs
or
in
mov
pop
shrl
sarl
inc
mov
cmpsl
in
inc
fisubs
dec
and
ds
jns
fs
imul
shlb
sbb
ret
push
mov
data16
roll
cmp
mov
addl
pop
sbb
fsubrl
inc
outsb
inc
cmp
push
mov
inc
sti
sub
shlb
maxps
xor
jmp
mov
jae
pop
xor
sbb
ljmp
fcomps
sar
int
sbb
jae
xchg
push
test
popa
mov
sub
mov
or
jae
pop
idiv
popf
addr16
mov
scas
lods
sbb
add
stos
cmp
sbb
ret
jb
rcrl
data16
mov
jnp
insb
lret
sbb
inc
repnz
adc
movsb
push
lcall
cmpsb
xchg
sbb
lock
ds
aad
xor
jno
daa
mov
pop
push
xchg
and
lret
in
out
mov
mov
shll
movsb
int3
mov
insl
fs
cmpsl
sub
inc
mov
sbb
pop
test
adc
shlb
lea
addr16
and
in
icebp
pop
push
xchg
icebp
dec
lahf
add
aas
mov
lods
mov
jns
mov
push
outsb
dec
movsb
mov
fcoms
sbb
in
movsl
lods
stos
xor
inc
fwait
add
int
push
push
int
add
mov
pop
insb
shl
andl
mov
mov
in
js
imul
mov
push
inc
daa
inc
rorb
jo
out
dec
inc
out
jp
insl
jb
fcmovb
lahf
addr16
aas
mov
xchg
repnz
mov
mov
insl
arpl
test
repz
mov
mov
into
inc
stos
inc
or
add
sbb
adc
mov
mov
test
sub
out
bound
and
aad
xor
lcall
and
and
mov
add
xlat
and
xor
mov
adc
mov
add
xor
xchg
adc
ret
mov
jnp
mov
xchg
mov
in
cmp
rcll
mov
fstl
icebp
mov
mov
imul
mov
inc
xor
mov
mov
add
in
ss
test
mov
stc
inc
fildl
push
sub
push
sti
xor
dec
fimuls
xchg
pop
inc
cmp
push
adc
and
add
jmp
bound
push
data16
jecxz
mov
sub
das
push
gs
int
pop
ja
or
popa
dec
xlat
enter
mov
sbb
inc
pop
add
mov
inc
ds
xchg
mov
iret
outsb
sahf
arpl
sbb
movsb
in
sub
jecxz
ror
dec
das
lods
arpl
aaa
out
sbb
lods
mov
xchg
lock
jno
aas
xor
in
ror
dec
cmp
jne
xor
xor
mov
cmp
mov
or
or
jbe
inc
repz
ja
inc
xor
in
mov
mov
sub
add
ficoml
mov
inc
mov
loope
lods
jg
mov
sbb
insb
mov
rclb
dec
inc
gs
iret
xchg
inc
mov
cmpsl
or
adc
xor
in
cltd
sahf
fisubrl
mov
outsl
dec
hlt
cmpsl
out
arpl
test
sub
fsubl
push
sub
repnz
hlt
sub
fwait
vpshufhw
dec
enter
movsb
cmpsl
andb
mov
sub
popa
test
pop
xchg
imul
sub
scas
mov
mov
adc
dec
add
mov
xchg
test
loop
xchg
mov
sarb
aas
push
lock
inc
insl
inc
adc
pop
es
mov
hlt
cld
daa
pusha
sbb
lods
jo
pusha
roll
add
push
es
icebp
pop
iret
mov
adc
test
adc
repz
dec
pop
jl
dec
xchg
xchg
lods
iret
call
push
and
jge
incb
arpl
push
cmp
dec
aas
cmpsb
lds
cmp
mov
push
sub
cmp
mov
dec
popa
dec
xchg
dec
or
mov
inc
in
arpl
pop
dec
jl
jnp
push
inc
xor
idivl
xlat
dec
ds
xorl
repz
mov
adc
cmp
mov
lsl
pop
sbb
cmpsb
imul
inc
dec
jmp
cmc
sbb
add
lcall
insb
sbb
fwait
and
mov
test
mov
ret
mov
and
icebp
jl
ror
sub
and
xchg
mov
jno
pushf
add
inc
xorb
scas
cmp
repnz
in
fisttpl
jge
ret
jecxz
add
stc
push
testl
cli
jne
rolb
mov
xor
imul
adc
cmp
repz
stos
mov
hlt
adc
loope
adc
push
cmpsl
aam
and
mov
jo
leave
fadd
inc
mov
mov
movsl
ret
mov
pop
loop
xor
xor
push
xor
pushf
sub
jae
mov
sub
in
fwait
fs
cmp
repnz
mov
mov
stos
mov
mov
daa
or
or
lea
cmp
ds
js
dec
ficomps
push
or
sbb
pop
out
pop
icebp
popa
cmpl
scas
mov
adc
jns
dec
fnstsw
xchg
sbbb
enter
mov
pusha
mov
test
rol
aam
ljmp
mov
inc
pop
dec
stc
jle
sub
sub
dec
or
sbb
and
jmp
mov
nop
insb
rcr
xchg
pop
dec
cmp
push
push
int
mov
jo
shl
popf
jg
mov
xchg
cmpsb
xchg
addr16
add
adc
cmpsl
out
sti
sub
stos
push
repz
out
and
push
xchg
mov
adc
fsubrs
int
fs
jne
sub
jne
dec
adc
inc
je
sub
movsl
xchg
leave
stos
sub
xchg
arpl
lcall
xor
scas
orl
sub
ja
lret
aas
mov
cs
pop
mov
out
xchg
loop
fs
lret
cmp
and
sub
push
mov
push
cwtl
orb
pop
dec
andl
xor
aam
sub
dec
arpl
jmp
jmp
test
cmpsl
sub
loope
clc
push
out
xor
pushf
push
mov
add
sbb
lret
insl
push
out
jl
xlat
cmp
scas
sarb
inc
push
notb
adc
cmpsl
shr
push
loope
arpl
mov
jg
cmpsb
inc
mov
dec
sahf
ret
fbstp
cmp
movb
push
xchg
add
inc
add
scas
sub
xchg
xorl
das
into
sti
iret
xchg
addl
xchg
or
mov
sub
dec
pop
divb
mov
sbb
sub
adc
jnp
leave
and
jmp
pop
dec
cs
lret
cmp
sub
or
cmp
js
cli
and
push
fnstenv
mov
dec
lcall
ja
flds
jle
cltd
mov
iret
enter
subb
mov
dec
sub
mov
xchg
xorl
mov
xor
flds
test
cmpsb
xor
push
jge
enter
pop
aaa
neg
pop
push
out
adc
ljmp
stos
lea
movsl
test
das
loop
lret
jns
xor
adc
int
jb
pusha
sub
xchg
call
mov
or
std
xchg
push
push
add
ds
lea
jp
fs
cmp
rcl
mov
fcmovne
or
cli
jle
out
js
dec
lods
leave
push
call
mul
dec
pop
imul
std
pop
cltd
loopne
rcrl
xchg
add
mov
cli
enter
xor
sub
fadd
mov
pushf
mov
fsubrs
add
arpl
fiaddl
adc
cmp
mov
xor
mov
ret
push
lahf
rcrb
xor
inc
in
dec
lea
cmp
icebp
dec
mov
xor
hlt
sub
je
stc
pop
jle
pop
jmp
repz
das
or
push
sahf
sbb
ds
enter
xchg
sub
stc
cwtl
push
lret
shlb
add
add
lret
sub
adc
mov
xor
pop
int
cmpsb
stc
shrb
push
adc
jp
hlt
outsb
leave
push
or
mov
iret
mov
fsubrl
psubw
adc
or
addl
aad
test
add
rcl
push
and
clc
inc
jne
push
pop
push
test
dec
mov
cmp
sbb
outsl
cmpsb
sub
xor
notb
das
pop
loope
jo
push
insb
or
mov
adc
add
iret
lds
leave
and
jbe
mov
push
sub
push
lret
mov
movsl
lea
mov
mov
add
sbb
sbb
fstps
add
insb
push
enter
and
mov
sbb
mov
cmc
pop
stos
aas
sub
xchg
and
sub
add
xchg
push
cwtl
and
mov
jge
mov
lcall
ret
inc
out
push
roll
insb
sbb
divl
jmp
loopne
mov
inc
cmp
js
arpl
add
mov
push
inc
mov
mov
aam
push
int
addr16
dec
xor
stos
mov
test
cmp
or
ds
inc
dec
enter
les
mov
push
or
dec
sub
imul
stc
mov
cwtl
test
stos
ljmp
mov
mull
cwtl
mov
std
cmpl
mov
mov
jg
loop
pop
mov
lret
dec
testb
imul
in
ret
xor
mov
cmp
add
pop
data16
notb
ret
ds
jl
cmpsl
cmp
adc
cmp
mov
jle
imul
mov
xchg
cvtpi2ps
stos
scas
pop
mov
nop
inc
aad
iret
cmp
sub
sbb
pushf
mov
imul
stos
cmp
out
jb
or
pop
xor
cmove
je
out
and
stos
mov
into
push
fcmovb
or
pop
mov
cmpsb
pop
xor
and
mov
cwtl
mov
xchg
ljmp
xchg
shlb
add
push
lret
lcall
ja
xchg
clc
int3
xchg
sbb
sbb
dec
xor
dec
test
icebp
xorb
insl
aaa
insl
jae
sub
mov
enter
mov
lret
test
xor
shlb
js
sbbl
push
pop
mov
xor
or
lock
mov
xlat
inc
adc
and
sub
jp
add
movsl
idivl
mov
ljmp
mov
pop
cmp
fildl
in
mov
add
mov
or
out
test
fidivl
lds
mov
inc
push
mov
scas
adc
jecxz
jae
adc
or
insl
dec
movsl
loop
dec
push
in
rclb
cs
fcompl
pop
scas
les
mov
add
pop
fsubp
sub
imul
je
fistpll
pop
iret
push
cmp
loop
pop
fwait
lods
daa
cmp
push
add
jnp
add
xor
iret
fs
outsl
mov
incb
arpl
mov
je
mov
shl
in
adc
push
xor
mov
add
adc
sbb
jle
xchg
movsb
ja
leave
inc
scas
pop
int3
ja
xchg
das
lods
jmp
loop
fiadds
stos
or
mov
cmc
hlt
xchg
movsl
push
push
cltd
jmp
and
inc
jge
dec
stc
push
xchg
repnz
lret
js
xor
fsubl
arpl
mov
dec
lret
pusha
outsb
fidivs
xchg
mov
or
dec
stos
aam
or
sub
add
push
inc
mov
jl
leave
mov
dec
dec
lods
jbe
xchg
stos
test
lock
rcrl
sbb
xchg
and
adc
aaa
lret
xchg
loopne
popa
pushf
dec
mov
add
mov
in
mov
in
inc
sbb
mov
lock
lock
push
xchg
popf
aaa
scas
mov
mov
rcll
add
rcrb
daa
mov
add
cmp
mov
mov
xchg
add
mov
out
shl
out
cmp
sbb
test
or
inc
mov
cmp
push
dec
pop
bound
fnstsw
fiaddl
testl
loop
arpl
pop
jbe
sbb
jno
pop
scas
push
inc
int
cmpb
mov
leave
cmp
adc
test
xor
lock
mov
sti
mov
repnz
pop
mov
adc
mov
cmp
mov
dec
adc
mov
jno
enter
je
stos
es
jno
imul
jb
call
stos
repnz
pop
xor
ret
inc
loope
ss
ds
enter
sub
leave
sbb
pop
mov
jmp
or
cmp
test
insl
xor
push
dec
pusha
lret
daa
fcoms
ljmp
outsb
nop
cli
movsl
imul
out
sti
cmp
shlb
or
adc
mov
mov
dec
adc
iret
mov
or
and
mov
jl
sub
out
adc
je
xchg
push
and
push
and
pushf
mul
idivb
dec
lods
xchg
ss
lret
push
or
out
pop
out
loopne
lahf
add
add
adc
or
and
fstpl
int
lcall
xchg
sahf
push
out
dec
leave
dec
lock
push
jnp
insl
and
hlt
les
push
out
cld
movsl
jle
stc
and
dec
fcompl
div
add
pop
sub
mov
sbb
clc
cli
hlt
adc
jge
mov
add
mov
pop
imul
nop
xchg
aas
inc
jp
cmp
dec
cltd
inc
mov
xbegin
mov
in
xchg
pusha
daa
xchg
add
outsb
jnp
mov
std
lock
cltd
xor
push
lods
mov
dec
jg
in
movsb
jne
lods
xchg
rcl
push
push
pop
out
das
test
pop
xor
iret
out
shlb
lods
adc
fs
add
mov
ja
inc
xchg
ret
xor
or
nop
fcoml
push
ljmp
or
push
xor
pop
xchg
aas
pop
je
stc
mov
movsb
cmpsb
jne
bound
and
bound
pop
lret
ftst
clc
sbb
inc
ret
pop
jnp
push
movb
sbb
push
ret
popl
sbb
sbb
push
xor
ds
adc
mov
je
nop
in
add
xor
scas
cmc
inc
fwait
push
jle
sbb
jo
daa
insl
in
xchg
pop
jbe
fxch
xchg
pop
mov
sub
jb
call
mov
in
sbb
mov
test
inc
lds
adc
mov
jp
mov
daa
lods
mov
mov
in
cwtl
mov
jo
jbe
push
inc
pop
out
fnstenv
movmskps
lea
cmpb
sub
iret
outsb
andl
jae
lret
sub
data16
arpl
sub
jbe
sti
dec
inc
inc
inc
push
jg
add
adc
out
mov
fs
mov
cmp
shr
fucomi
inc
pop
push
jg
mov
inc
insb
addb
sub
ret
movsl
or
push
cmpsb
negb
mov
stos
rorb
mov
fnstsw
sub
ret
fdivr
mov
fimuls
mov
mov
fsub
cmp
adc
gs
negl
adc
les
xor
pop
lods
lods
pop
fadds
negl
sbb
aas
sub
jo
rcll
jae
sub
jle
mov
ja
imull
inc
lea
mov
dec
push
bound
fiaddl
cs
jp
stos
dec
inc
aad
push
xchg
inc
jno
inc
pop
scas
or
mov
iret
cmp
jae
test
and
dec
dec
jg
xchg
leave
xchg
xor
lret
xor
idivb
pop
and
and
xchg
xor
cmp
pop
pushf
mov
fisttpl
mov
sub
xlat
int
mov
and
stos
xchg
inc
pop
or
pop
je
jge
lock
daa
adc
cld
js
out
mov
push
and
mov
xchg
hlt
cmp
out
in
int
fsub
add
adc
lods
mov
push
movsl
or
nop
roll
enter
lods
jecxz
jae
jns
or
inc
sbb
out
jecxz
sti
sub
in
scas
and
mov
rclb
cmpb
pop
jb
sbb
pop
ret
jmp
fwait
idivb
lahf
mov
jne
imul
lahf
scas
sahf
ljmp
sub
pop
popa
or
and
mov
js
mov
or
cmp
into
or
outsl
lods
clc
xor
mov
and
sub
pop
inc
in
add
pop
mov
pop
popa
cwtl
adc
inc
std
sbb
movsb
scas
repz
jo
test
cwtl
mov
jo
test
arpl
cmp
sub
imul
mov
divl
imull
mov
inc
rorl
repnz
dec
ret
jae
and
xor
mov
scas
adc
leave
jb
lds
inc
and
inc
dec
pop
push
xor
jg
sub
dec
stc
inc
pop
add
dec
imul
sub
jns
jge
ficomps
dec
test
repz
xor
inc
adc
mov
adc
dec
ret
jnp
pop
xlat
fisubl
xchg
dec
jmp
outsb
jo
jl
rorl
and
insl
xor
sbb
add
jno
rol
aaa
xchg
insl
add
push
incb
or
fwait
inc
enter
into
push
loop
aas
xor
xor
aam
inc
and
sub
xchg
adc
jb
test
and
add
rcr
lds
pop
jns
xchg
or
mov
lods
rorb
in
and
mov
xor
lcall
popa
stc
iret
xchg
push
xchg
and
subl
movsb
lea
aad
mov
mov
xor
gs
mov
mov
adc
dec
push
cli
loope
jae
push
aam
stos
loop
idivb
mov
push
mov
jge
mov
std
and
mov
ficompl
inc
faddl
js
loopne
lret
push
data16
add
jge
jle
push
xchg
popf
adc
push
in
jmp
leave
add
pop
jne
loope
sub
sbb
dec
inc
jecxz
out
out
push
push
popa
and
imul
out
jne
sbb
inc
fldt
mov
scas
and
addr16
pop
sbb
fs
push
test
cmp
mov
mov
push
test
add
mov
imul
push
sub
daa
dec
sub
xchg
mov
adc
jmp
hlt
cmc
vmovapd
imul
outsl
sbb
jg
mov
mov
jo
test
int3
cli
adc
pop
push
scas
lock
test
push
ljmp
pop
je
push
sub
lods
sti
lock
fcomip
jne
lock
cmpl
sub
movsb
adc
je
ja
shl
and
imul
xchg
mov
scas
das
pop
push
push
fsubl
stos
sti
jno
call
out
inc
mov
xchg
cmc
aaa
loope
out
lods
cli
aas
push
mov
aad
in
inc
mov
xchg
testl
outsb
pop
lret
and
push
ljmp
fs
pop
stc
sub
sti
inc
cld
jne
ficomps
hlt
scas
add
and
addr16
stos
or
leave
dec
jnp
push
ss
cmp
insb
pop
lock
testl
mov
sub
clc
mov
imul
cli
cmp
int3
lret
movl
mov
lret
ficomps
xchg
and
push
pop
mov
xor
pop
sbb
jnp
and
call
inc
jge
dec
xchg
mov
andl
and
xchg
sbb
jecxz
adc
sub
sbb
sbb
jno
inc
test
add
jbe
mov
cmp
push
add
into
iret
addb
adc
repz
pop
pushf
out
and
sub
cmc
jecxz
push
aaa
fdivrl
stc
cmp
push
xor
arpl
lea
pop
xor
pop
adc
push
xor
mov
and
fnstcw
xorb
ss
les
int
decl
rorl
rorb
dec
sub
and
jnp
cmp
adc
hlt
sub
das
sub
pushf
test
push
aaa
or
inc
imul
aam
push
push
push
dec
xor
jae
ret
xor
mov
pop
jo
and
xchg
mov
in
hlt
test
fpatan
mov
push
jl
cmpsl
int3
call
mov
xor
test
lods
cmp
enter
bound
mov
into
inc
incb
enter
cmp
xchg
or
and
add
adc
jmp
push
jmp
out
push
cmpl
and
je
fists
jl
in
ror
insl
jnp
mov
mov
and
stos
js
sbb
lods
adc
cmp
test
in
mov
int3
or
fcmovbe
push
xchg
and
repnz
loop
xlat
out
ret
push
das
cmc
rcl
test
fwait
cld
rorb
jmp
cmp
stc
fists
mov
repz
pop
adc
int3
add
mull
daa
js
dec
mov
jmp
dec
mov
test
inc
pop
xor
push
es
inc
sti
je
enter
adc
lds
ret
mov
push
and
ljmp
inc
sbb
xchg
cmp
inc
push
iret
and
xchg
fdivrl
pop
out
lods
clc
mov
pop
cmpsb
pop
fmuls
imul
frstor
cli
xchg
mov
inc
repz
hlt
lock
xchg
pop
xchg
in
fmul
shrl
sub
std
fbld
loopne
fisubl
xor
jne
pop
dec
inc
cmp
mov
insb
lods
lcall
adc
not
data16
pusha
push
sub
cmp
mov
popf
push
xor
push
pop
or
xchg
bound
gs
add
inc
cmc
or
cmp
mov
mov
aas
mov
cmpsb
adc
inc
mov
icebp
addr16
cmp
loopne
pop
push
shlb
sbb
push
jg
jmp
sbb
popl
mov
adc
mov
call
shl
bound
sub
ds
inc
cmpsb
inc
cmpsb
int
data16
stc
into
pushl
sub
adc
cwtl
in
insl
jo
jns
lds
xchg
mov
xchg
push
bound
mov
ret
mov
mov
pop
aas
xor
fs
jg
es
mov
lds
aam
inc
mov
test
adc
xchg
mov
sbb
cmpsl
add
out
int3
sub
sub
cwtl
in
or
xor
and
aad
xor
mov
mov
xchg
enter
mov
mov
mov
or
test
push
push
dec
cmp
mov
pop
fistl
add
xchg
pop
iret
imul
mov
mov
in
xchg
dec
add
adc
arpl
inc
insb
inc
push
test
sahf
xor
mov
add
shll
push
adc
jmp
inc
xchg
clc
inc
mov
call
dec
imulb
pop
adc
popf
arpl
mov
push
mov
push
aaa
and
xchg
cmp
xchg
or
loopne
push
mov
divb
sub
lods
cmp
scas
stc
movsb
xchg
pop
clc
pop
fimull
or
decl
cltd
mov
leave
out
mov
clc
adc
es
repz
pop
adc
push
dec
add
add
rclb
cmpsl
push
ret
fstps
int3
push
sbb
pop
lahf
add
addr16
dec
std
inc
pop
cmpsl
sbb
lahf
repnz
arpl
push
push
movsl
stos
inc
pop
xlat
shll
inc
rolb
lret
fsubs
adc
xor
js
sub
jg
mov
cmpsb
sub
fidivl
je
shl
les
mov
ss
sub
xchg
call
loope
sbb
das
sub
lahf
jne
sub
cmpsl
dec
and
in
dec
sub
les
adc
es
mov
push
filds
hlt
out
mov
ficompl
push
mov
test
jbe
inc
lret
loop
imul
cwtl
xchg
sub
sbb
iret
pop
sbb
insl
mov
sub
fst
pop
sbb
ret
push
lret
stos
ret
xchg
cmp
mov
xor
fstps
in
iret
fisttpl
scas
or
push
mov
sbb
int
cmp
insl
push
xor
xchg
in
sbb
lds
mov
hlt
xchg
mov
adc
dec
mov
mov
pushf
bound
hlt
loope
dec
mov
mov
jle
xor
inc
rcll
push
adc
lahf
inc
sub
jg
invd
imul
cmp
loopne
cmc
lock
jl
lods
dec
inc
lods
stos
cwtl
or
gs
jns
push
xchg
xorb
int
jbe
test
push
mov
sbb
or
movsb
mov
in
iret
add
mov
out
rcr
shrb
pop
mov
push
cmp
xchg
lahf
and
outsl
movsb
jo
lods
icebp
add
jl
adcl
push
rclb
or
push
add
fwait
sbb
arpl
outsb
xor
add
dec
por
sahf
out
int3
divb
mov
aam
cmp
adc
pop
fs
pushf
inc
popf
ret
push
int
push
repz
cwtl
test
jg
std
sub
inc
jbe
push
cmpsb
int3
stc
cltd
out
jecxz
inc
negl
aas
leave
jp
sti
sbb
imul
scas
xchg
jge
cmp
mov
mov
in
insb
mov
push
xor
mov
dec
pop
out
and
inc
arpl
mov
and
movsl
fcmovnu
push
inc
push
outsl
push
or
inc
testb
outsl
pusha
adc
or
sub
mov
jae
pop
lods
int
pop
test
adcb
dec
cmpsb
add
lock
jno
cltd
push
push
adc
cmp
test
test
push
arpl
jg
jo
xor
stc
call
cmpsl
in
and
fs
cmp
mov
sbb
inc
pop
lret
xchg
sub
outsl
cmp
pop
push
or
cmp
cmc
and
lahf
in
aas
adc
pop
cmp
shl
icebp
mov
pop
int3
iret
lods
pop
pop
popf
add
push
fidivrs
mov
aad
mov
sub
jle
call
sub
or
mov
push
sti
mov
cmpsb
xchg
cs
jno
sbb
stos
inc
mov
push
mov
cmpsl
mov
int
ss
divw
sbb
test
add
or
xchg
stos
movsb
loope
lret
and
cld
test
fisubrl
adc
fldt
or
mov
mov
add
adc
push
call
sbb
xchg
jg
sbb
adc
jecxz
out
std
fdivrs
mov
imul
jg
movsb
cld
xor
mov
jne
mov
adc
lret
imul
cli
or
push
popf
mov
movsl
mov
in
xchg
into
sbb
mov
cltd
cmp
mov
dec
mov
test
push
loop
sti
out
mov
jae
mov
shrb
arpl
cmc
scas
cmpsb
pop
xchg
mov
std
aad
lods
adc
xor
mov
orl
jge
jns
sub
mov
cmp
xchg
cmp
mov
mov
das
inc
adc
mov
mov
jmp
stc
cmp
nop
test
xchg
inc
mov
loopne
icebp
push
pop
gs
fxch
mov
or
shrl
cmpsb
daa
pop
ja
aad
sbb
lods
jne
in
jb
movsl
xor
lods
sub
push
mov
stos
jge
ljmp
lock
jnp
fisttps
sub
ret
add
in
into
ret
orb
scas
pusha
mov
stos
jb
pusha
jg
iret
ficoml
outsl
xchg
adc
movsb
cmp
fstl
mov
enter
adc
shl
out
jle
push
mov
popf
jecxz
daa
movsl
jmp
stc
clc
shll
push
mov
shrb
dec
adc
daa
pop
cmpsl
mov
scas
adc
push
adc
mov
dec
ret
xor
dec
pop
dec
push
insl
xchg
cmp
dec
popl
xchg
jno
les
aas
dec
xchg
out
jecxz
les
or
data16
jnp
imul
cli
pop
stc
shrl
mov
adcl
fmuls
mov
pop
cmp
cwtl
inc
lret
hlt
sti
iret
dec
jle
loope
jle
sub
into
lret
dec
sub
mov
int3
insl
sub
enter
insb
or
into
mov
jecxz
test
inc
add
ljmp
lods
in
mov
mov
movsb
lods
xorl
sahf
jecxz
or
xchg
push
movsb
jmp
push
test
imul
adc
xor
push
repz
sub
add
cmp
icebp
jne
jbe
xor
sbb
xchg
mov
xchg
cmp
leave
xchg
pop
loope,pn
lcall
das
xchg
mov
test
xchg
pcmpeqd
xchg
lret
pop
sbb
shrl
aad
push
shlb
xchg
ljmp
add
adc
sbb
shlb
mov
push
loopne
push
mov
pop
in
push
stos
lods
push
push
and
mov
dec
mov
cmp
xchg
mov
imul
xor
dec
das
fst
mov
cli
clc
jns
xchg
pop
scas
jge
loopne
lock
jo
adc
iret
pushf
push
jnp
in
andb
mov
sub
mov
imul
ljmp
pop
sti
in
push
shll
sbb
pop
mov
pop
or
cmp
jmp
xlat
jbe
cmp
sbb
jl
jne
adc
cmp
add
mov
nop
rolb
mov
in
lea
cmpsb
icebp
jl
fwait
aam
pusha
roll
iret
mov
push
stc
sub
scas
sahf
in
push
mov
insl
push
in
enter
jae
pop
lahf
mov
scas
xchg
mov
shrb
iret
in
shll
jbe
dec
sub
jg
dec
mov
sub
test
mov
call
push
sbb
mov
jmp
adc
sti
mov
mov
inc
fsts
dec
sbb
bound
xor
andb
cmp
inc
ret
iret
inc
sbb
push
sbb
mov
test
je
adc
mov
dec
enter
rorb
adc
adc
frstor
test
pop
sbb
mov
ljmp
insb
les
fmull
shll
pop
mov
jp
xor
fwait
jno
mov
push
pushf
cmp
std
mov
popf
mov
scas
adc
outsl
dec
outsl
shrl
test
push
push
xor
xor
test
mov
or
mov
cwtl
daa
jg
cmp
jmp
cmpsb
mov
imul
push
popa
shlb
aad
pop
mov
and
pop
cmpsl
icebp
sub
enter
sub
mov
scas
or
cmpsl
pshufw
or
push
push
out
and
adc
aad
loope
imul
ljmp
sbb
inc
or
popa
cmpb
add
mov
hlt
xchg
xchg
mov
mov
pop
mov
pop
lock
push
jo
adc
inc
push
test
roll
repnz
mov
clc
sti
and
or
jmp
icebp
in
mov
mov
pop
cmp
popa
subl
mov
push
mov
xchg
inc
push
xchg
or
stc
jb
aam
test
jle
mov
fildl
mov
sti
imulb
insl
lret
roll
add
xchg
sbb
sti
jbe
cmpsb
add
sbb
lods
cmp
push
xor
and
ret
clc
mov
je
fsub
mov
cli
aaa
mov
adcb
orl
dec
cmpsl
cs
dec
icebp
sub
inc
sub
ljmp
imul
aad
in
orb
loope
pop
pop
fcmovu
lcall
cmp
cmp
sub
jge
cltd
pop
inc
dec
hlt
adc
cwtl
ds
mov
lret
fcoms
dec
sub
xor
xor
mov
int
push
clc
mov
jmp
ret
sbb
or
popa
inc
and
pop
stos
adc
shlb
fcmove
loop
xlat
jmp
inc
addl
or
lahf
add
rclb
iret
iret
dec
sub
popf
sbb
xchg
xor
adc
shlb
and
pushf
inc
loop
mov
xchg
aaa
adc
pop
and
push
ret
adc
adc
test
sub
dec
lcall
adc
dec
ret
pop
mov
sbb
outsb
push
push
cld
sahf
std
jle
xor
and
add
lds
sbb
push
mov
inc
aas
fwait
mov
add
js
in
fdiv
loop
repz
out
pop
mov
mov
pop
cmp
pop
in
jg
push
inc
add
out
adc
in
jbe
loopne
cmpsb
pop
imul
push
test
mov
lcall
pop
inc
lret
mov
mov
jo
add
call
iret
mov
scas
sub
fisttps
mov
imul
mov
mov
pop
xchg
cld
jno
sub
lods
add
jmp
ffree
adc
and
mov
cmpsb
push
in
mov
push
push
mov
and
cmp
fcompl
out
int
inc
inc
aad
dec
dec
dec
push
repnz
lods
dec
je
jl
xchg
sub
fidivrs
sub
xchg
ja
mov
stos
rcr
push
sarl
fisubrl
mov
cs
ss
sbb
pop
bound
loope
cld
insl
data16
inc
je
sub
mov
push
cmp
xor
movsl
test
jecxz
add
pop
std
imul
and
imul
dec
and
das
fldcw
pop
mov
das
cli
fidivs
cmp
or
lods
or
sub
repz
add
cmpsb
mov
and
ficompl
mov
sub
or
jnp
insb
add
mov
popa
imul
jg
push
ret
xlat
hlt
out
push
aam
lcall
adc
ds
lcall
bnd
outsb
fnsave
sub
jo
xchg
aam
jle
out
sub
inc
in
sbb
cmc
xchg
pop
out
pop
jns
out
imul
jge
cwtl
cmp
mov
dec
test
in
sbb
sub
dec
out
jmp
rclb
pop
outsl
sbb
push
cmpl
fs
hlt
fidivrs
push
je
lds
repz
xorl
push
call
aam
out
repnz
rcr
ja
into
ror
jge
loopne
int
push
daa
mov
clc
ja
jecxz
mov
jecxz
xor
xchg
and
shrl
jge
repz
sbb
dec
inc
popf
cwtl
pop
ds
xlat
inc
xor
loope
pop
outsb
int3
jp
sbb
dec
cmpsl
clc
les
imul
sbb
sbb
scas
cmp
out
cwtl
fnsaves
dec
pusha
arpl
movsb
fsubs
lret
bound
out
out
loop
loop
int3
es
push
mov
inc
push
cltd
in
lock
sub
jno
and
xor
inc
cwtl
aas
jae
sbb
cwtl
insl
mov
ficoml
jno
inc
fmull
fwait
dec
or
jg
push
aaa
or
mov
loope
pop
lret
adc
aas
pop
push
test
pushf
cmpsl
shlb
rcrb
inc
pop
and
pusha
loopne
dec
lock
lret
sahf
rol
or
stos
xlat
movsb
jg,pt
testb
stc
jb
daa
sbb
dec
mov
scas
outsl
adc
cmp
push
call
loop
fldt
push
ljmp
sub
or
dec
pop
inc
daa
fisubrl
push
ja
dec
in
mov
add
subb
test
into
ret
enter
pslld
jne
jns
shl
scas
scas
mov
out
imul
lahf
jl
xchg
inc
jg
lahf
out
inc
and
adc
std
divb
rcl
dec
std
lahf
movsl
out
scas
mov
jge
js
jns
cmp
std
testb
adc
int
outsl
sub
mov
mov
roll
xchg
push
mov
clc
ret
push
scas
popf
xchg
xor
fldt
jnp
cwtl
nop
cmp
mov
add
rclb
inc
xor
ljmp
loop
movsl
data16
pop
out
fsts
gs
loop
adc
or
and
jmp
insl
fdivl
xor
pop
out
iret
lds
inc
bound
fsubrl
lahf
mov
or
lret
mov
insl
std
pop
or
fcmovnb
sbb
sar
out
test
lock
pusha
add
cmp
fsubrs
int
and
mov
sbb
sbb
notb
mov
mov
add
loope
xchg
add
push
jns
mov
xchg
adc
in
pop
popf
adc
mov
push
enter
repnz
push
sarb
or
dec
pop
sbb
adc
cmp
lods
sub
mov
mov
xchg
adc
arpl
cmpsb
adc
jne
je
or
xchg
jns
movsb
mov
lcall
xchg
sti
lahf
mov
or
ss
shll
daa
mov
inc
loope
sub
leave
pop
mov
xlat
jle
adc
mov
jb
mov
aad
int3
inc
push
test
mov
mov
int
cmp
int
dec
mov
push
loop
push
cwtl
insb
out
jp
lsl
mov
sub
fcmovb
lcall
lods
sub
insb
cmpsb
mov
xor
xor
dec
divl
or
or
adc
outsb
pop
hlt
push
pop
mov
das
test
das
xchg
shrl
mov
ja
inc
ret
fsubl
scas
and
mov
add
push
fmuls
fcmovu
addr16
daa
jbe
or
pop
sub
std
sub
popf
test
pop
scas
dec
mov
jbe
and
out
mov
cmp
inc
xorl
and
xchg
std
push
and
aaa
mov
cld
or
lcall
jo
gs
mov
jmp
xor
jg
sub
add
in
jb
imul
sbbb
rorb
sbb
xlat
jb
xchg
stos
jo
sub
mull
lret
decb
or
xchg
push
mov
mov
add
lods
mov
inc
js
adcl
push
push
sub
push
sbb
or
sbbb
out
dec
adc
add
sbb
loopne
mov
mov
xor
jmp
mov
cmp
pusha
cmp
scas
dec
push
push
pop
inc
nop
add
iret
sub
push
cmp
cmp
fcomps
add
daa
dec
pop
aam
sub
ljmp
mov
dec
pop
ret
xchg
rcl
dec
sahf
mov
flds
jns
fnstcw
jge
inc
cld
ret
inc
pop
testb
pop
jo
push
jmp
pop
mov
stos
loopne
jl
inc
push
imul
mov
int
test
sahf
out
sbb
ljmp
pushf
cltd
push
sub
call
mov
mov
jno
xor
mov
mov
add
jp
daa
sti
lock
push
sbb
out
jg
ds
push
push
sub
xchg
cmp
cmp
xor
sub
fisttpl
insl
pop
or
aad
stc
or
insb
das
mov
lods
lret
int
popf
loopne
inc
popf
lods
dec
inc
and
jp
jae
cmc
dec
pop
idiv
jno
dec
shlb
adc
mov
movsl
cli
gs
mov
and
dec
cmp
mov
out
push
xchg
dec
lcall
inc
dec
imul
pop
mov
xchg
ficoms
sub
aaa
xorb
ficoms
rep
test
xchg
jecxz
repz
pop
lods
sub
cmpsb
jmp
ljmp
xor
mov
mov
cmp
pop
push
push
scas
fisttpll
mov
cmp
mov
push
push
mov
cmp
pop
mov
jl
cpuid
pop
sbb
dec
std
xchg
dec
adc
adc
sbb
lods
sahf
push
jecxz
jge
cmpsb
cmp
lret
idivl
or
pop
cli
cmp
push
sbb
pop
jle
scas
mov
add
sbb
das
sahf
and
sar
pop
repz
fcompl
icebp
stos
xchg
dec
sub
mov
rcrl
xchg
sub
dec
les
xchg
jp
ljmp
daa
enter
fdivrl
lret
arpl
sbb
pop
test
mov
sub
shlb
jnp
sub
inc
mov
aaa
repz
xchg
mov
or
mov
jl
inc
test
adc
sbb
jbe
cmpsb
lock
popf
mov
xor
dec
insb
pop
pop
iret
daa
sub
push
xor
or
mov
iret
xor
mov
xchg
je
xor
jp
xor
dec
xor
dec
mov
mov
cmp
ja
and
in
sbbl
roll
loope
mov
cltd
ljmp
cmpsb
mov
cmp
test
dec
rep
lcall
jo
pop
outsb
add
push
adc
mov
mov
and
popa
test
test
pushf
notb
cmp
xchg
jae
push
push
pop
jecxz
ret
inc
xor
mov
inc
add
repz
xor
mov
ss
cmovle
dec
dec
mov
aaa
mov
loopne
push
arpl
sub
push
fiaddl
rol
xchg
xchg
jl
jge
nop
xlat
stos
sbbb
ret
incb
movsb
es
scas
xchg
aas
push
test
push
or
mov
movsb
cmpsl
adc
inc
xchg
scas
inc
aad
xor
dec
out
xchg
sar
sub
pop
mov
in
rolb
pop
leave
push
cld
aad
mov
out
sti
add
insb
call
icebp
stos
fldcw
arpl
mov
bound
pop
int
xor
sub
mov
sbbb
idivl
sub
mov
aaa
and
inc
mov
dec
outsl
in
or
jae
dec
movsb
dec
sbb
stos
jne
imul
and
cs
adc
xor
ficompl
mov
aam
stos
lret
hlt
mov
lret
mov
dec
test
ljmp
stos
cmp
mov
or
nop
push
gs
negl
pop
mov
ja
repz
hlt
or
js
jl
add
nop
jge
add
mov
popa
dec
lcall
jno
mov
cld
ss
pop
jb
push
jae
andl
fildl
sbb
call
jle
jbe
xchg
mov
div
mov
ds
or
das
xchg
and
mov
cs
hlt
popa
jmp
xor
insb
scas
std
xchg
je
jle
stos
dec
add
or
out
jnp
mov
sub
rorb
and
pop
add
pop
cld
mov
loope
adc
or
aad
or
fidivrs
mov
adc
idiv
mov
das
bound
cmp
push
in
or
sbbb
fwait
mov
adc
xchg
adc
leave
test
std
pop
pop
out
xlat
add
in
xor
mov
push
ljmp
stc
cli
adc
or
pusha
dec
push
jp
xchg
clc
cmp
adc
jmp
notb
out
xchg
jl
fsubrs
or
push
push
xchg
je
pop
sbb
and
loop
dec
ret
adc
cmp
pop
scas
add
xchg
lret
stos
lods
daa
xlat
sbb
dec
sub
and
and
xor
in
sarb
out
lret
sub
dec
and
inc
add
enter
fisttps
inc
out
jns
loop
add
sti
dec
cmp
push
fmuls
mov
xchg
adc
loope
leave
dec
jmp
icebp
mov
sub
dec
pop
cmp
or
mov
xorl
aaa
lods
sbb
lcall
and
cmova
cmp
popa
movsl
repnz
add
test
cli
adc
fidivl
cmp
test
or
icebp
movsl
add
enter
inc
lea
test
adc
pop
loope
push
jmp
sbb
sbb
and
shl
loopne
mov
js
sahf
sub
jo
lcall
das
fdivs
mov
mov
mov
xor
jae
adc
aaa
fs
xorl
push
pop
test
andl
lock
mov
inc
add
xor
adc
jl
movl
xor
dec
fwait
xchg
inc
add
sbb
dec
xchg
lock
and
add
add
cs
test
xchg
pop
orl
orl
jb
jno
inc
pop
fidivrl
cmpsb
mov
cmp
inc
sub
mov
jmp
sub
xchg
cmp
push
cmp
mov
inc
dec
je
sbb
cmp
pop
inc
mov
xlat
test
cmc
mov
sbb
sub
xlat
addb
cmp
pop
rolb
xor
cltd
sbb
lock
xchg
jmp
stc
xchg
mov
xchg
test
bound
xchg
jecxz
cmpsl
loopne
scas
sbb
sub
mov
or
in
loope
fs
sub
ja
aad
lret
xchg
in
jle
outsl
scas
cmp
add
mov
data16
pop
sub
cmp
lds
push
mov
jae
adc
fsincos
int
dec
unpckhps
lods
push
or
test
outsl
dec
sbb
cmp
add
fiadds
pop
and
cmp
mov
fs
int3
add
clc
ds
sub
repz
andl
and
push
fmuls
sbb
test
pop
sub
adc
and
mov
add
cmp
fidivrl
aam
add
jo
iret
out
in
in
and
leave
outsl
pop
adc
ret
ret
pop
jns
mov
in
test
push
sub
push
ficompl
sbb
ret
jae
push
and
aam
add
out
ds
pusha
or
and
adc
ret
pushaw
testb
jb
dec
cli
mov
int
lds
enter
cwtl
dec
bnd
loopne
rcl
inc
jnp
sbb
push
addr16
fwait
pusha
stos
fisubs
jl
fs
mov
stos
push
lea
imul
aad
js
adc
push
in
test
xchg
sbb
mov
inc
jne
test
in
clc
dec
pop
jae
mov
or
lock
sahf
inc
lea
and
cli
mov
sahf
movsl
mov
push
clc
in
in
jle
mov
pushf
mov
stc
in
out
lock
mov
in
pushf
mov
add
imull
cmpsl
insl
gs
lock
fildl
mov
pop
jmp
dec
es
out
cld
sbb
or
jl
std
loope
flds
bound
leave
cmp
adc
jne
xchg
gs
aaa
mov
scas
lds
outsb
xchg
inc
nop
ret
std
rcrb
dec
mov
nop
rorb
rcr
dec
lea
dec
mov
cmc
pop
sbb
jne
pop
sub
cld
mov
js
pop
cmpsb
mov
in
sub
lock
mov
outsl
sub
movsb
dec
mov
jbe
push
loope
push
outsl
divl
and
push
pop
and
stc
mov
sahf
ficompl
inc
cs
pop
or
cmpsl
into
rcll
jae
mov
repnz
adcb
xor
add
stc
xchg
into
lds
addr16
fdivl
cmpsl
or
jmp
xchg
sub
fwait
and
lods
ret
mov
ja
mov
lods
jae
mov
out
add
or
push
aas
icebp
mov
sbb
push
push
ret
push
insb
xor
bound
jge
sub
cmp
gs
add
xor
push
cmp
xor
mov
jbe
sbb
std
das
fldl
jne
ja
pop
jbe
pop
stc
dec
jno
add
lock
xchg
mov
ljmp
xor
iret
lea
sti
sbb
push
mov
sbb
cmpsb
jnp
sub
xor
inc
pop
in
in
adc
push
sub
inc
movsb
cmp
mov
in
sbb
lret
cmc
rcl
lea
jo
loopne
dec
into
inc
push
push
or
and
push
inc
sarl
xor
pop
lock
and
out
cmpsl
out
dec
aaa
dec
jp
cmpsb
cld
cs
loopne
lret
lahf
cwtl
cld
and
int3
sub
ret
mov
mov
or
sub
in
sub
insl
fmuls
and
xsavec
repnz
cld
insb
push
daa
xchg
sub
adc
push
insb
mov
das
test
sbb
cmp
or
andl
adc
aas
stos
fcomi
mov
aad
or
in
cmpb
call
push
out
cltd
addl
pop
out
aaa
lods
push
leave
aaa
adc
jmp
loopne
test
cmp
popf
mov
fdivl
sbb
rolb
pop
jmp
sub
fs
inc
les
push
jae
inc
sub
shl
inc
scas
fildl
out
aad
hlt
cwtl
push
jb
jns
jle
jl
je
cmp
push
inc
mov
stc
fsubl
fisttpl
push
mov
test
or
or
dec
adc
adcb
and
insb
fdivl
int3
jo
cmp
dec
or
xorl
jle
xchg
testl
jns
or
and
and
mov
pop
mov
stos
test
jp
fimuls
mov
mov
das
lds
cltd
push
push
les
in
lcall
push
dec
stos
neg
into
lock
hlt
lcall
lahf
xchg
cltd
push
mov
mov
pop
push
ja
mov
adc
mov
je
dec
ret
outsl
shlb
insb
pop
and
push
sbbb
outsl
inc
jne
gs
inc
sbb
dec
add
or
sbb
push
dec
dec
in
xor
sahf
push
out
sbb
mov
and
adc
jl
xchg
sbb
jb
mov
cmp
dec
lcall
ds
cmpsb
add
xchg
fwait
ss
inc
dec
add
imul
mulb
sahf
nop
inc
arpl
add
jae
mov
leave
sarb
add
dec
add
stc
dec
mov
lcall
scas
imul
ret
dec
aam
lds
dec
add
cld
push
or
or
ss
push
in
cmp
movsb
lahf
xor
jmp
pop
or
pop
xchg
mov
or
inc
add
ret
out
mov
cltd
cmpsl
cmp
mov
rcrl
outsb
popf
or
aam
repnz
insb
mov
xor
push
add
pop
jl
mov
aam
jle
lea
jne
pop
mov
loopne
test
jge
mov
xor
xor
dec
dec
iret
addr16
pushf
fprem
lret
mov
pop
aaa
add
pop
ret
mov
roll
push
add
adc
add
fildll
outsl
fiaddl
sbb
lahf
xchg
xchg
ret
push
push
inc
in
xor
dec
add
jge
lahf
xor
sub
outsb
sub
add
nop
add
mov
gs
jno
test
or
push
fbstp
mov
arpl
lock
bound
xlat
inc
pop
mov
arpl
fisubrs
filds
cmc
lods
les
ljmp
xor
mov
lahf
hlt
mov
fsub
push
gs
xor
out
and
sbb
pop
add
xchg
inc
cld
mov
cltd
sub
cmc
pop
popl
shl
push
mov
lahf
cmp
xchg
outsb
cld
push
into
and
adc
push
push
sbb
and
mov
sti
xchg
rcll
outsl
pop
out
insl
lock
pop
add
int3
aad
cmpsl
mov
ss
push
popf
bound
fwait
lret
mov
out
or
xchg
ds
pop
repnz
xor
notb
pop
sbb
popa
mov
ja
movsl
stc
or
inc
push
pop
and
shll
imul
into
inc
arpl
shrl
decb
mov
add
cmp
add
stos
repz
popf
xchg
frstor
lods
das
incl
inc
or
lahf
cmpsl
ficoms
jl
xor
ret
sub
push
push
rcrb
es
ds
in
gs
mov
mov
movsb
sbb
mov
pop
into
inc
fisubrl
fisubrl
mov
aas
stos
adc
pop
repz
mov
clc
push
mov
es
xor
jnp
cmp
fisttpll
dec
xchg
testl
inc
outsb
shlb
jo
mov
test
int3
sbb
or
in
test
roll
add
inc
cmp
outsb
sbb
xor
pop
cmp
incb
dec
insl
pop
test
adc
xchg
fcoml
pop
movsl
leave
scas
call
repnz
sti
xor
jns
out
and
pop
mov
add
add
test
cmc
sahf
mov
aad
adc
adc
jae
xchg
je
jo
popf
jbe
addb
ficoml
or
dec
or
cmp
bound
gs
lock
ret
mov
icebp
in
jg
imul
xor
fwait
push
mov
daa
fsubr
jb
sbb
icebp
or
push
or
in
add
sbb
adc
dec
cmpsb
mov
iret
aam
jg
or
cmp
jmp
push
sbb
sbb
or
cmp
adc
shlb
jecxz
adc
jb
addl
add
popa
mov
out
pushf
cmp
imul
xor
out
test
lock
call
add
cmp
jl
push
faddl
gs
sbb
pop
xor
dec
lcall
push
jns
jns
int
jl
jne
mov
xor
dec
dec
jp
es
push
adc
lds
jnp
adc
add
cltd
jb
push
mov
fbld
or
mov
xor
xor
test
mov
adcb
int3
mov
mov
adcb
pusha
pop
adc
add
inc
cmp
inc
js
mov
ret
adc
orb
popa
or
int
mov
jl
es
sbb
repz
outsb
mov
stos
mov
jp
or
movsb
lds
out
cmpsb
and
xor
push
insb
or
and
pop
aad
dec
fdivrs
and
add
or
or
sbb
add
rcll
pop
movsl
push
mov
divb
or
aad
adc
jne
and
aaa
sbbb
imul
outsb
lds
loop
adc
imul
sub
into
xor
loopne
cltd
lcall
dec
ret
inc
notl
data16
jp
mov
push
mov
sub
xchg
push
xor
xchg
insb
test
push
jecxz
inc
lea
aas
sub
or
pop
nop
stc
pop
popw
in
push
xor
mov
vpsrld
sbb
pop
add
inc
insl
push
aaa
mov
out
rcrl
cmp
nop
cmc
push
and
jle
scas
jo
add
aad
xchg
sub
cmpsl
das
fisubl
daa
loop
test
xchg
xor
int3
fdivrs
lea
push
add
in
push
mov
shl
sub
jnp
and
or
jge
shl
ss
mov
test
mov
adc
jmp
mov
jne
out
adc
loope
lcall
pushf
lret
or
xor
test
in
jle
jb
lods
push
push
cli
xchg
orl
aaa
add
mov
mov
pop
in
repnz
lock
cmp
xchg
push
inc
mov
not
or
adc
push
pop
ja
fxch
xchg
pop
inc
in
loopne
xchg
ud1
rol
bound
push
dec
sub
dec
mov
inc
dec
push
dec
cmp
cmp
ss
insl
jb
inc
hlt
stos
cmpsl
clc
or
repnz
fbld
int3
std
inc
cmpsb
jnp
sbb
nop
or
bound
sahf
daa
inc
repz
stos
add
cltd
mov
lea
fdivrs
jae
pop
add
test
and
ficoms
push
inc
je
daa
loop
or
pop
popa
icebp
jb
je
fwait
push
movsl
dec
xor
out
pop
dec
mov
rclb
mov
das
mov
cmp
lcall
jmp
bt
xor
mov
ss
fs
sbb
pop
rol
cmp
jns
xchg
dec
and
outsb
inc
test
mov
dec
movsb
cmp
pop
or
data16
xchg
std
imul
mov
icebp
pop
int3
int3
lea
lods
cli
lds
cmp
sbb
in
and
shll
push
jmp
ss
fsubs
pushf
ret
mov
and
sbb
fldl
cld
mov
xchg
cmpsl
jbe
pop
cmpsb
fisttps
jp
mov
outsl
sub
adc
sub
pop
enter
mov
cld
gs
ljmp
ja
inc
dec
mov
gs
add
or
fnstsw
push
push
dec
clc
adc
dec
ljmp
adc
push
adc
jmp
mov
pusha
jp
xor
push
sbb
fnstcw
cltd
pop
mov
sub
int3
imul
shl
jns
mov
push
xchg
xor
popf
and
and
iret
push
sahf
enter
fstpt
scas
gs
lods
mov
sbb
popa
xlat
movsb
into
push
dec
mov
push
mov
dec
mov
add
xchg
sub
cld
sub
idivb
lea
sbb
movsb
mov
clc
int
xor
push
jp
mov
cld
dec
and
adc
popl
ja
stos
push
xor
cmp
pushf
push
push
fmuls
js
ljmp
pop
mov
aad
pop
push
fwait
icebp
pop
je
rcll
aaa
loope
fadds
sub
mov
jbe
in
add
xlat
enter
sarl
sarl
mov
ret
mov
inc
pop
addl
pop
cmpsl
pop
fisubrl
xchg
xor
pushl
movsb
jmp
fmull
lock
mov
xchg
rorb
push
fidivrl
mov
xchg
and
push
cmp
jmp
pop
lods
cltd
dec
push
push
pop
mov
mov
mov
lret
add
dec
jge
fstpl
xor
xlat
dec
adc
adc
icebp
and
fwait
data16
jp
push
mov
into
cmpb
cmpsb
shll
adc
aaa
popf
mov
jge
lcall
mov
es
or
movsl
pusha
lock
fidivl
xor
and
sbb
aas
push
lret
xchg
push
loopne
sub
xchg
std
rorl
inc
xor
cmc
pop
out
out
fimuls
jne
push
insl
dec
jge
inc
sbbb
scas
inc
jo
mov
cs
ja
pop
pop
xchg
lret
scas
pop
ret
shrb
int3
mov
dec
adc
cmp
lahf
cltd
imul
and
pop
jb
in
lds
push
lcall
add
mov
mov
xor
pusha
add
mov
pop
jl
les
stos
jbe
aad
sbb
ss
mov
in
test
xchg
rclb
or
daa
mov
mov
out
rcll
gs
lret
mov
test
sbb
cmp
out
pop
int
aaa
call
outsb
ficoms
add
sub
test
daa
insl
lea
pop
lahf
enter
xchg
out
sbb
xchg
push
or
aaa
lds
cmp
xchg
jp
adc
call
jb
outsl
adc
in
aad
in
in
jnp
xor
lea
pop
fwait
mov
xchg
ret
jae
ret
into
ja
push
dec
insl
jne
sub
fcoml
fdivs
jo
es
pop
fwait
push
push
cmp
mov
outsb
aam
lea
js
sbb
add
push
scas
cmp
daa
sub
and
mov
dec
mov
mov
mov
rorl
xchg
enter
je
loope
lods
dec
xchg
jle
sti
repnz
dec
popf
into
cmpsl
mov
pop
jns
jge
jne
leave
xlat
mov
repz
out
push
jmp
cwtl
cld
push
xor
popa
mov
mov
fldcw
in
add
or
and
scas
cmc
inc
in
add
dec
mov
push
fnstcw
ds
jno
jg
repnz
roll
xor
jle
ret
lods
rcl
push
jmp
dec
mov
push
imul
or
inc
inc
sub
das
and
outsl
xchg
sti
movsl
push
addb
pop
xchg
pop
xchg
jnp
push
call
sbb
sbb
xchg
int3
sbb
test
sti
xchg
scas
bound
stc
sub
icebp
dec
mov
rcr
lret
xor
mov
dec
inc
cli
xlat
notb
push
mov
lds
fimuls
sub
adc
jecxz
mov
addr16
jp
daa
ret
out
lcall
xchg
imul
xor
mov
andb
fs
pushf
cs
or
data16
pop
pop
imul
add
mov
xchg
stos
xchg
cltd
fsts
test
rcrl
push
fisttpl
xor
scas
push
sbb
add
push
and
js
add
inc
jg
xor
and
and
push
and
sti
out
gs
push
popl
add
stos
aam
jmp
add
xor
mov
inc
lahf
cld
int3
mov
dec
push
gs
ret
add
icebp
xor
icebp
pop
xchg
ret
pop
jae
cs
dec
or
and
int3
inc
push
dec
pusha
sub
sbb
ja
popf
jne
je
insl
mov
pop
ja
mov
data16
lods
mov
push
and
out
pop
insb
cmp
push
and
pop
jl
cs
cmc
inc
pop
mov
cmp
add
cmpsl
add
pop
mov
je
or
mov
mov
cmp
lds
cmpl
insb
sbb
jecxz
xchg
dec
pop
xchg
cmp
out
pop
in
and
jge
sbb
or
dec
and
xchg
idivb
andl
scas
jnp
jecxz
aad
xor
and
repz
sti
in
adc
jecxz
repz
pop
sbb
dec
ret
movsl
jb
jo
aad
movsl
movsl
in
pop
sbb
adc
insb
in
mov
imul
bound
sub
pop
cwtl
fdivl
sbb
mov
xchg
hlt
pop
imul
in
std
popf
dec
adc
inc
mov
stc
and
lock
ja
jo
xor
sub
adc
mov
jge
adcl
sub
push
addr16
rclb
sbb
push
mov
dec
lret
daa
mov
mov
outsb
loope
adc
shrl
sbbb
sbb
subb
mov
cmp
orb
mov
sbb
sbb
out
mov
frstor
leave
imul
fwait
rorb
popf
jp
or
xchg
xor
fisttpll
data16
mov
cmp
and
inc
aam
jae
add
pop
cmp
icebp
into
arpl
jno
lea
xor
test
leave
add
jne
pop
xchg
inc
jecxz
jb
mov
xor
add
cltd
insb
mov
int3
fwait
adc
in
sbb
cmp
sbb
mov
mov
mov
ja
cli
pusha
mov
imulb
cmc
sahf
fdecstp
cmpsb
xchg
in
jge
outsb
jl
jge
mov
sbb
mov
imul
jns
mov
add
mov
jns
out
ret
jbe
lods
dec
jns
pushf
xchg
shll
pop
add
mov
sbb
outsb
test
push
imul
pop
cmp
cmp
fnstenv
inc
pop
mov
and
jbe
jmp
icebp
notl
lea
xchg
mov
add
test
data16
mov
lock
jp
and
pop
mov
inc
mov
inc
ficoms
inc
pause
ljmp
aas
icebp
jle
jecxz
into
mov
and
cmpsl
mov
mov
fiaddl
lods
pop
jns
jge
lock
cmp
setle
repnz
mov
xchg
ljmp
dec
pushf
movsb
shll
jl
mov
aaa
lock
and
xchg
fistps
xor
jecxz
out
lds
or
sbb
lea
out
mov
mov
stc
push
fistps
or
adc
xchg
jp
jecxz
fstps
movsl
push
and
out
loop
push
popf
daa
mov
sti
cmp
jne
iret
and
xor
sub
push
repz
sbb
loope
enter
mov
or
inc
xchg
cmpsl
fcmovb
jecxz
inc
dec
fdivrl
sbb
ss
push
or
jl
cmpl
inc
adc
or
das
mov
xchg
or
into
test
lcall
add
adc
lock
in
jge
xor
or
mov
sahf
arpl
and
cmpsb
adc
in
add
jg
fwait
ret
data16
test
dec
lret
and
or
imul
test
fdivl
sub
decl
cmp
push
ret
and
xchg
add
jo
test
outsl
ja
out
loopne
int
inc
notl
rcrb
mov
xlat
ds
pusha
add
psubsb
ret
pause
test
cmp
ret
jbe
out
dec
pop
mov
lods
push
fldt
dec
mov
popa
jns
mov
aaa
ret
jle
in
iret
mov
cmpsb
mov
push
leave
test
pop
inc
jo
jns
incb
cmp
jg
mov
cmp
test
cltd
stos
dec
adc
je
push
loopne
mov
push
in
cmp
pop
stos
mov
sbb
and
call
out
jp
mov
and
daa
leave
lods
out
aam
mov
out
mov
pop
dec
mov
mov
mov
cmp
adc
fsts
mov
cmc
data16
adc
add
loop
push
sti
push
xchg
jl
cs
lock
shrl
lods
and
orb
mov
sbb
rclb
inc
in
xchg
cs
add
int3
mov
vsubsd
movsb
ss
cmpsl
gs
xor
or
and
jecxz
sbb
jl
sbb
mov
sub
pop
lret
lret
xlat
dec
shlb
scas
or
or
cmp
decl
imul
insl
into
insl
mov
imul
test
cltd
shr
ja
repnz
enter
mov
add
xor
data16
pop
sbbb
cltd
les
or
sahf
sbb
and
pop
add
mov
dec
dec
aam
jl
lods
add
cltd
dec
test
push
rol
out
and
loop
lds
dec
cmp
add
jns
xchg
fildll
movntps
hlt
insb
int3
or
shl
daa
scas
ds
lret
mov
cmp
push
in
std
push
add
cmp
sub
jns
aam
mov
cmp
dec
mov
xchg
sub
add
pop
jnp
cltd
jecxz
xor
adc
or
push
outsb
inc
ja
push
shll
fnsave
in
xor
lds
adc
sub
call
cmpsb
subb
aas
xlat
jg
repz
xor
jne
jecxz
cmp
jg
movb
jae
xor
sbb
adc
xchg
mov
pop
mov
or
push
dec
pop
lea
mov
js
jge
or
cli
jno
sub
inc
mov
in
sub
cmp
aaa
mov
xchg
aas
imul
ss
pushf
mov
sbb
outsl
stos
push
push
outsl
jp
aaa
sub
mov
pop
sbb
xchg
pop
roll
clc
pop
ss
pop
fimull
dec
cltd
xchg
lahf
pop
xorb
mov
sbb
leave
std
xor
pop
scas
cltd
cmp
icebp
mov
push
sub
lahf
jg
push
pop
xchg
push
arpl
mov
dec
hlt
movsb
dec
cltd
fildll
mov
and
fisttpll
xchg
xor
mov
in
cmpl
jp
jo
dec
push
adc
sbb
fcoml
ja
dec
call
movsb
sub
dec
sbb
lods
cmpsb
inc
hlt
or
movsb
int
push
movsb
lret
lock
mov
das
data16
jge
and
and
jo
mov
nop
scas
dec
and
or
inc
lret
mov
dec
jnp
jns
fcomps
scas
call
and
lods
adc
adc
sahf
je
pusha
dec
shll
push
js
and
sbb
sti
adc
je
cwtl
out
cmp
test
jl
xor
cmp
lcall
pop
jle
lahf
push
test
loope
ljmp
cwtl
and
sbb
sbb
test
and
into
xchg
sub
sub
xor
popf
out
fsubl
xchg
test
ret
pop
adc
pushf
sbb
jns
int
ficoml
stos
fs
push
pop
call
xorb
pop
in
sub
push
xchg
sub
pop
shl
cmpsl
enter
rcrb
mov
jae
push
decb
sub
mov
fadds
loopne
xchg
mov
loope
in
xorl
push
mov
aaa
lahf
dec
xchg
sub
ss
lea
sarl
notb
jmp
int
add
std
mov
loope
push
jl
rorl
shrl
xchg
inc
xchg
aas
popf
loope
fsubl
xor
icebp
jl
sahf
mov
fldt
cli
mov
loope
cmp
pop
push
icebp
rclb
subb
xchg
stos
leave
dec
lods
cmpsb
js
adc
mov
fidivrs
dec
mov
pop
fbld
fwait
or
mov
lcall
add
fwait
sbb
mov
push
xor
and
jg
mov
aam
sub
insl
scas
xorb
std
sub
xchg
lcall
jb
je
int
xchg
test
push
filds
xor
inc
add
ret
push
je
jnp
movl
lds
lret
data16
pop
cmc
pop
cwtl
ficoms
add
lret
push
lods
je
xchg
pop
pop
and
stos
call
outsb
sub
xor
jns
mov
inc
lret
outsb
es
jle
cmp
pop
jle
dec
push
stos
cwtl
push
cmp
cmpsl
mov
imul
cmp
adc
cmp
aas
lahf
dec
mov
sbb
sub
sub
lret
les
cwtl
fcmovnb
das
cmpsb
mov
and
add
cmp
sub
push
or
add
push
or
dec
aam
shr
push
xor
dec
jo
cmc
push
fbstp
add
sti
sbbl
sbb
divb
test
dec
push
sahf
fstps
aaa
push
xchg
pop
outsb
cmpsl
push
out
cmc
add
data16
imul
outsl
pop
xchg
out
nop
fsubs
cmpsl
mov
mov
cmp
mov
pop
and
jp
fwait
cmp
mov
fisttpll
mov
pop
sbbb
mov
idivl
shlb
pushf
dec
add
push
ret
in
add
jne
inc
mov
fildl
sub
cmp
add
jnp
pushf
jne
jae
aas
sbb
shlb
jge
or
adc
test
inc
sbb
popa
cmc
stos
in
xor
adc
push
in
test
mov
pop
data16
ljmp
gs
inc
add
pusha
push
fwait
roll
int3
sbb
xor
push
jb
les
mov
fxsave
fs
popf
sbb
sub
dec
aad
mov
push
outsl
inc
out
arpl
push
fucomi
pop
inc
mov
icebp
call
push
flds
outsb
repnz
fwait
in
adc
xchg
aaa
add
addr16
and
inc
movsb
xchg
icebp
push
addr16
push
adc
lahf
es
aaa
pop
push
call
ret
pop
aad
scas
jmp
mov
cmp
add
push
lret
in
mov
jmp
pop
pop
fnstcw
cwtl
call
mov
adc
sub
lret
dec
cld
test
sbb
push
addb
cmc
mov
mov
push
mov
adc
sahf
int3
js
or
mov
and
mov
and
jae
pop
sbb
cmp
add
insb
xchg
mov
repnz
jp
js
in
mov
pushf
and
or
mov
push
leave
loopne
mov
xor
pusha
arpl
pop
rcrl
dec
cmc
cmp
push
inc
push
std
push
sbb
stos
std
and
sub
fcoms
bound
daa
in
bound
inc
sbb
dec
jmp
rcl
hlt
cs
jns
push
loope
iret
in
sbb
sbb
cmpsb
sub
rolb
pminub
mov
sbb
dec
pop
jl
and
pop
push
dec
mov
jne,pt
sti
jnp
es
push
popa
ja
stos
clc
xor
fidivs
jns
mov
in
fdivr
cmp
mov
lods
fists
mov
cmp
lods
cltd
cmp
incl
sub
push
enter
lea
in
out
call
lods
movsl
arpl
xchg
lret
outsl
test
xchg
popa
int
xor
jo
je
cmp
negb
xchg
mov
out
mov
pop
add
jmp
push
jne
mov
mov
scas
rcl
fwait
adc
sub
adc
inc
dec
std
and
pop
cmp
enter
lods
or
fisubl
nop
lea
mov
cs
push
sahf
cmp
fs
lret
sbbl
lahf
pop
push
lock
cmp
jae
ficoml
call
jp
and
loope
mov
int3
inc
jno
fidivs
adc
imul
es
jmp
cmc
lods
ljmp
outsb
fwait
mov
inc
cltd
and
xor
sub
test
push
inc
mov
in
cmp
or
test
enter
test
mov
mov
xchg
js
inc
fcmovne
cmp
arpl
addr16
jl
int
dec
and
cld
sbb
imul
jp
jbe
mov
in
mov
mov
icebp
mov
cli
jg
movsb
test
icebp
cmpsb
lret
sbb
sbb
gs
mov
insb
push
jle
jmp
jmp
jne
dec
pop
mov
jae
pushf
lea
rclb
test
ds
fwait
js
inc
out
call
cld
gs
loope
ret
mov
int3
inc
pop
mov
movsb
xchg
mov
insb
sbb
pop
mov
ljmp
std
mov
xor
jl
inc
test
ds
inc
add
bound
mov
outsl
mov
mov
js
ret
test
mov
and
push
xchg
insl
rcll
mov
jle
mov
ret
arpl
sbb
mov
mov
sbb
add
jg
idiv
sbb
pop
or
cmp
leave
mov
test
xor
out
insl
mov
ss
out
addl
pop
js
sarb
jecxz
sub
xchg
sub
stos
jl
inc
js
xchg
sbb
mov
xchg
aas
dec
adc
mov
mov
das
cmpsb
mov
sti
sub
iret
lea
shll
xchg
test
mov
or
pop
pop
divl
das
iret
mov
sub
fcomp
sub
mov
xlat
fisttpl
fldl
cmp
mov
xlat
outsl
es
xchg
push
out
aas
jp
cmpsl
sarb
fmuls
cmp
faddl
in
pop
mov
sub
add
and
push
inc
aaa
sbb
jg
sub
jl
adc
inc
out
dec
push
push
negb
mov
mov
dec
ss
test
xlat
dec
das
shll
sbb
psllq
lods
insl
fucom
pop
loop
bound
clc
adc
cmp
das
sub
in
gs
push
pminsw
and
pop
jb
dec
push
jl
addr16
inc
inc
imul
shlb
push
pop
push
push
cmp
les
repnz
and
cli
pop
pop
jae
xor
mov
cs
std
mov
insb
cli
fdivl
pop
mov
dec
xchg
out
imul
cmp
testb
pop
shlb
mov
push
push
mov
or
dec
mov
movsl
xor
add
mov
loope
push
adc
pop
dec
rorb
and
add
add
or
lea
sub
sub
xchg
or
dec
repz
jge
or
jmp
stos
push
cmp
add
into
les
repz
push
lea
nop
outsl
pop
fs
lods
pop
or
jno
ja
adc
add
push
icebp
int
mov
mov
mov
cmp
pushf
loope
add
scas
adc
fsubr
mov
add
mov
mov
adc
mov
test
test
jp
xchg
pop
mov
sbb
stc
mov
js
xlat
xchg
sub
pop
les
stos
cmp
fnstenv
inc
add
pusha
push
adc
or
ret
pop
int
mov
push
xor
and
sahf
xor
add
inc
inc
ret
in
loope
and
pop
outsb
cli
repz
addr16
jnp,pt
xchg
jo
outsl
int3
loopne
stos
lea
in
mov
pop
push
mov
sbbb
mov
add
mov
orl
lods
push
xchg
xor
insl
pop
orb
or
fdivp
loope
sbb
lock
adc
fmuls
inc
sub
push
mov
lds
pop
inc
dec
fistpll
arpl
mov
js
sub
mov
push
and
cli
sub
add
lock
andl
mov
and
inc
cmp
stc
addr16
jb
lock
cltd
lds
test
mov
add
mov
fldl
dec
les
or
outsb
rcl
push
scas
pop
inc
adc
xor
into
cmp
cltd
out
outsl
hlt
movsl
or
ret
push
in
shlb
fistps
cmp
cmp
pushw
mov
mov
jb
jbe
push
out
add
xor
mov
gs
cmp
sar
aad
lahf
xchg
adc
mov
pop
jecxz
inc
scas
push
mov
sbb
sbb
repnz
xchg
scas
scas
push
cmp
nop
mov
jecxz
xchg
je
sbb
add
mov
adc
andb
lret
and
pushf
enter
shr
xchg
mov
mov
lds
push
cli
lds
mov
or
push
or
sbb
cmpsl
stc
jae
adc
sub
xchg
xchg
rcrl
push
adc
ds
movsb
je
adc
ljmp
mov
lods
jo
inc
arpl
cmp
mov
sub
push
outsl
lods
dec
jecxz
cwtl
xchg
negl
sub
sub
insl
cltd
lods
sub
mov
subl
jae
jmp
add
in
test
mov
pusha
or
test
fidivrs
das
enter
sub
jecxz
mov
add
pop
pusha
push
jecxz
jns
jb
jmp
pop
cmp
xlat
mov
jb
jmp
sub
and
ljmp
loopne
mov
out
sbb
iret
jns
or
mov
xchg
inc
jge
mov
cwtl
call
arpl
mov
sub
sbb
xchg
cmp
mov
pushl
jmp
test
mov
pop
push
das
mov
lock
int
jecxz
push
dec
inc
or
pop
or
mov
xor
scas
sub
and
fisttpll
ja
pop
cltd
dec
or
test
cmp
dec
or
xchg
dec
in
sahf
sbb
adc
pop
div
xchg
sbb
cmpsl
add
ds
pop
lods
push
std
xor
jns
insb
mov
icebp
pop
ss
mov
mulb
sbb
dec
jnp
movsl
jbe
inc
ss
sbb
fcoms
test
mov
clc
rcrb
call
jne
mov
imul
xchg
out
or
xchg
icebp
out
push
dec
dec
out
sbb
push
stc
addr16
push
ja
pushl
sbbb
aaa
loop
je
push
xchg
lds
loop
ret
cmc
mov
dec
scas
inc
add
aad
sub
add
loop
stc
add
sbbl
cli
cmp
lods
enter
pop
cmp
out
jmp
ret
mov
mov
dec
mov
adcb
cmp
out
jmp
xchg
xchg
xor
sbb
inc
add
insl
inc
mov
lds
push
mov
jns
inc
jmp
insb
pop
repz
out
enter
les
stc
xchg
leave
lock
nop
cmp
mov
and
sbb
jmp
enter
rclb
orl
cmp
sti
daa
cltd
xor
enter
adc
jmp
and
mov
inc
adc
scas
aad
shlb
push
mov
aam
lahf
sub
mov
sbb
cmp
enter
pop
mov
cmp
xlat
inc
add
inc
push
and
inc
adc
outsl
and
push
xorb
mov
int3
jg
fimull
adc
lcall
sbb
ljmp
push
push
or
mov
adc
rcl
addr16
xchg
adc
insb
mov
mov
jge
inc
push
and
or
jne
test
dec
inc
dec
scas
push
fcompl
cwtl
je
or
or
int
jno
xchg
repnz
xchg
sub
rep
mov
insb
or
mov
data16
add
inc
push
jae
popf
iret
push
adc
cmp
leave
lcall
jnp
nop
in
test
frstor
mov
ret
mov
fcmove
insb
push
icebp
mov
out
xor
xor
mov
add
adc
cmp
or
mov
mov
and
add
xchg
jp
pop
fwait
jns
jo
aas
cs
and
les
xchg
and
jo
scas
lock
call
cmp
mov
dec
out
and
xor
add
mov
pusha
cmpsb
and
out
addr16
mov
in
inc
loope
ljmp
repnz
shlb
out
dec
into
adc
test
roll
lcall
std
or
dec
xchg
lods
and
jl
cmpsl
ret
cmp
addr16
push
sbb
jo
push
cmpsb
or
add
adc
push
outsb
push
arpl
jecxz
mov
adc
xor
getsec
adc
testl
adc
imul
loopne
push
mov
mov
mov
push
xchg
cmp
shll
inc
sub
in
push
fwait
in
fwait
cmp
dec
mov
lods
lds
xchg
roll
daa
mov
mov
cmp
mov
clc
js
cmpsb
inc
sbb
or
mov
daa
icebp
mov
dec
repnz
jo
test
int
sub
mov
add
adc
xlat
arpl
cli
std
xchg
shlb
adc
add
dec
lods
imul
push
mov
dec
movsl
insl
rcrl
out
leave
sub
inc
fisubrl
hlt
lcall
mov
add
test
pop
jl
pop
and
or
ljmp
int
orb
inc
inc
or
sbb
shll
rclb
subl
inc
lods
push
mov
inc
cmp
enter
out
jl
mov
cmc
mov
fldt
outsb
add
mov
mov
mov
fldt
and
fbstp
cld
sub
cmc
inc
xchg
mov
mov
cmp
adcb
imul
lret
lcall
ds
test
inc
subl
test
insl
fisubs
mov
lcall
je
xor
adc
inc
jg
pop
enter
mov
push
xor
shlb
or
mov
mov
cmp
cmp
int
loopne
ds
jle
adc
sub
cmc
scas
xchg
xor
loopnew
sub
push
mov
leave
cmp
add
sub
mov
jp
movsb
push
bound
mov
and
mov
popf
pop
xchg
inc
pop
test
jecxz
inc
lods
mov
loopne
idiv
push
pushf
mov
mov
arpl
mov
ret
mov
inc
add
insb
cmpb
lret
ret
lds
pop
lret
outsb
pop
je
movsl
movsb
shlb
hlt
mov
loop
imul
mov
inc
jge
adc
sub
insl
jl
mov
imul
or
cmp
int3
ficoml
xor
cmp
hlt
lret
mov
mov
dec
popa
xlat
xchg
mov
jmp
xchg
mov
xor
fldl
push
jbe
test
je
shlb
fcmovu
gs
xor
in
sub
mov
or
inc
ja
mov
icebp
jp
leave
adc
dec
mov
dec
inc
clc
clc
pop
pop
push
jbe
sarb
mov
jg
std
adc
cmc
fs
xor
or
fs
lret
hlt
mov
xchg
orl
mov
mov
mov
sub
lock
cltd
dec
pop
adc
push
mov
adc
movl
and
pop
and
sub
sub
popa
cs
out
mov
in
lcall
cmpsb
in
pop
addr16
cmpsl
add
xchg
sub
loop
inc
lea
test
fcmove
add
mov
aaa
mov
es
inc
ret
push
insl
in
or
aam
fwait
lods
cmp
cmp
and
cmp
dec
repnz
cmp
push
dec
mov
cmp
js
push
or
or
bound
addr16
call
aad
mov
es
dec
in
jp
roll
push
push
pop
xchg
mov
and
sbb
out
pop
dec
je
sbb
mov
scas
adc
jle
jecxz
ljmp
dec
insl
mov
hlt
pushf
addr16
inc
or
mov
cmpsl
sbb
insl
pop
xor
stos
and
add
call
ret
dec
and
cmp
test
shll
lods
xor
insl
clc
jbe
pushl
in
and
sti
movsl
cmpsb
loop
and
inc
inc
in
addr16
mov
hlt
sbb
loope
lret
in
fiaddl
jbe
lret
insl
loop
roll
xor
mov
push
inc
notl
sbb
and
or
xor
lret
jecxz
dec
pop
dec
mov
fisubs
lock
mov
test
or
and
cmpsl
or
in
sub
jmp
pop
aaa
sbb
mov
add
or
mov
out
push
loope
fs
xchg
jle
popf
dec
loopne
push
notb
movsb
inc
adc
hlt
xchg
cmpl
mov
sbb
pusha
mov
test
fdivs
shll
sub
cmpsl
aam
mov
mov
aaa
sub
or
dec
xor
pop
mov
int3
fsubr
sbb
push
fcomp
xor
sub
loopne
push
cmp
xor
push
pop
ja
in
iret
push
cmp
std
ds
mov
cmpsl
decl
push
pop
leave
cmc
sbb
enterw
lret
or
dec
jbe
mov
aaa
cmp
fdivrs
jge
inc
gs
imul
add
pushf
shll
enter
sub
daa
pop
xor
inc
sbb
push
test
mov
push
inc
sub
mov
or
lock
mov
or
xchg
sub
sbb
stc
jne
lcall
and
lods
mov
and
mov
inc
push
enter
pop
in
push
out
push
mov
mov
dec
jge
xchg
lock
push
fsubrl
jp
test
inc
jae
mov
sub
mov
out
or
inc
popf
mov
in
add
shlb
add
out
pop
dec
ja
dec
push
sub
lcall
and
fcomp
xor
or
aad
sbb
in
out
mov
stos
mov
sbb
pop
aaa
cmpl
cmpsl
cmp
and
mov
lea
das
mov
xchg
xchg
or
xchg
bound
sbb
inc
divl
mov
dec
pop
iret
xor
xchg
or
fldenv
cmp
push
jle
stos
pop
nop
jns
jmp
adcb
sbb
add
gs
sti
jb
push
stc
rolb
sub
mov
xchg
and
and
test
and
hlt
sbb
dec
mov
popw
xchg
jg
mov
jns
fldcw
icebp
cmp
mov
pop
mov
xor
add
and
pop
and
sbb
cmp
mov
pusha
lret
mov
loopne,pt
out
inc
movsb
jns
sbb
sahf
mov
out
pop
cld
loopne
sti
popf
mov
mov
push
lea
push
imul
or
js
stos
inc
mov
xchg
jge
push
scas
or
xchg
mov
sbb
pop
pmaxsw
cmp
add
sti
push
int
cwtl
subl
push
imul
cmp
mov
or
or
test
adc
rcrb
pop
xor
test
orb
cld
inc
jg
xchg
mov
cmp
mov
xchg
in
cltd
lods
fsubl
xor
into
testb
in
xlat
js
sahf
outsl
pusha
imul
imul
inc
cs
xor
add
mov
adc
dec
hlt
sbb
fidivs
call
adc
outsl
shl
adc
push
and
imul
lahf
movd
jb
cmpb
leave
dec
ucomiss
addr16
cli
jmp
pop
shlb
outsl
jl
fisubrs
data16
out
inc
cmp
xchg
or
mov
addr16
leave
ljmp
mov
fcoml
mov
leave
mov
dec
inc
push
pushf
adc
push
sub
adc
adc
int3
push
adc
push
inc
shll
movsb
inc
push
lahf
mov
add
out
mov
sub
icebp
sub
pusha
in
jno
test
into
scas
stos
push
push
enter
movsl
sub
loopne
inc
push
test
ja
cli
jb
cli
jp
push
leave
pusha
xlat
cmp
outsb
pop
jge
sahf
jg
movsl
adc
iret
sub
nop
clc
adc
cld
xchg
xor
mov
ss
add
or
jle
or
mov
popa
shrl
idivl
or
int
dec
test
in
int3
or
pop
ficoms
jg
xchg
or
pop
movsl
out
mov
je
add
inc
mov
xor
adc
push
push
jb
dec
inc
cmp
dec
aam
dec
insl
in
int
push
nop
sub
cmpsb
and
fcmovne
sbb
out
mov
add
inc
loope
data16
sahf
daa
mov
inc
fwait
test
mov
ror
dec
push
mov
mov
pop
or
jl
xor
lea
std
pop
xor
mov
fbld
repz
js
jnp
cld
sub
jno
scas
sarb
mov
test
jmp
data16
int
xchg
repz
les
xchg
mov
in
sub
adc
das
mov
icebp
pop
jne
mov
fs
aad
pop
mov
pushf
outsl
cmp
add
pop
or
and
aas
cli
cli
sbb
inc
pop
notb
sub
sti
fwait
adc
aad
mov
std
adc
pop
mov
dec
inc
mov
std
cs
sub
xchg
cmp
add
ret
into
sub
push
mov
inc
xchg
in
lcall
dec
push
sub
shrb
addr16
mov
movsl
push
mov
sbb
dec
icebp
jle
add
xor
jbe
js
add
inc
push
cs
dec
jecxz
sbbb
int
sub
nop
push
int3
stc
cwtl
pop
push
sub
mov
dec
xchg
push
fnsave
cmp
or
mov
cltd
movd
adc
jle
mov
add
ss
rcrb
cs
pusha
enter
addl
xor
shll
xchg
clc
or
sub
adc
adc
mov
mov
mov
dec
push
mov
push
jne
imul
mov
andl
rolb
daa
popf
in
mov
rolb
lcall
shl
pop
push
mov
ljmp
loopne
out
cmpsl
xchg
test
outsl
xchg
popf
or
xchg
push
out
mov
hlt
and
mov
aaa
ljmp
pop
add
lret
mov
lods
mov
fstpl
popf
jne
xchg
xor
pushf
dec
mov
cld
stos
stc
scas
mov
aam
xchg
pop
cmpsl
repnz
add
jecxz
push
mov
pop
sub
test
and
fisubs
fimuls
jmp
xlat
adc
sbb
stos
dec
out
loopne
sub
push
mov
repz
sbb
mov
mov
pop
divb
scas
outsl
ljmp
jns
mov
loop
cmp
movsl
sbb
jmp
aas
adc
in
push
mov
push
xchg
sarl
push
adc
fwait
cmpb
sub
cld
lea
mov
lret
jl
push
hlt
mov
imul
mov
clc
or
out
dec
jmp
fdiv
mov
pop
inc
test
scas
movsb
sub
imul
jmp
int3
jg
pop
test
xor
insb
js
sti
mov
add
push
jge
lret
cld
or
sbb
sbb
dec
xor
add
insb
mov
dec
and
adc
aad
mov
loop
or
loope
xchg
sahf
repz
popf
cmp
in
xchg
fisttpl
push
push
repz
mov
insb
aaa
dec
cld
inc
aam
ret
mov
rcrb
imul
into
dec
xor
push
gs
outsl
sahf
and
in
mov
sahf
push
push
fwait
pop
push
cmp
dec
pop
fnstenv
push
add
div
pushf
pop
mov
adc
stos
cmp
sahf
mov
test
int3
jp
xor
xlat
add
xchg
outsl
lods
and
dec
in
fdivrl
jmp
mov
or
pop
mov
sar
out
inc
pop
or
dec
pop
inc
and
xchg
incb
pop
xchg
cmp
std
mov
sbb
xor
loopne
in
jno
jp
inc
xchg
ja
and
shll
mov
xchg
out
outsl
mov
inc
add
sub
lret
add
ret
mov
mov
adcb
pop
fwait
and
adc
shll
frstor
push
push
shlb
imul
jle
adc
insl
sub
icebp
clc
popf
push
cmp
les
adc
iret
and
mov
aam
les
addr16
sub
jo
inc
cmp
mov
into
and
dec
jmp
xchg
fwait
sub
and
jb
sbb
rcrb
mov
pop
dec
cltd
and
lods
cmp
cmpsl
stc
cwtl
cs
imul
sbb
test
add
int3
insl
stos
mov
sub
cmc
std
in
pop
popf
int
inc
pop
in
sbb
pop
addr16
mov
xor
inc
test
insl
js
lods
sahf
out
shlb
add
add
fstpl
cmpsl
or
call
add
jae
adc
repnz
cmc
pop
dec
inc
xchg
dec
cmp
mov
jg
jae
in
lahf
add
out
cwtl
cmc
lret
mov
xor
cltd
sub
mov
or
test
xor
outsl
insl
mov
jge
pop
cmpsb
push
and
mov
xor
push
ja
mov
jno
add
ror
cmp
stos
mov
arpl
xor
rolb
jle
mov
xchg
shl
jl
lods
scas
out
movntq
stc
ficoml
dec
jo
mov
or
pop
sub
jle
dec
sub
fstl
pop
jge
and
out
repnz
inc
jbe
xchg
lret
ja
sahf
mov
cmp
into
int3
sbb
or
mov
loope
push
xlat
mov
pop
sbb
mov
push
jg
loop
rcr
lahf
lahf
movsb
call
xchg
aas
adc
mulb
push
lret
xor
or
xor
add
test
xchg
ret
cmp
push
push
into
mov
ret
adc
aas
loope
sbb
repnz
jo
inc
xchg
fidivl
jp
or
mov
fsts
mov
inc
fs
movsl
push
push
sbb
jbe
lret
dec
idivl
out
add
fildl
icebp
loopne
xchg
or
loop
inc
adc
dec
dec
sarl
push
mov
jmp
call
sub
mov
gs
jecxz
mov
add
and
scas
pop
int
dec
xchg
push
sbb
fisubs
push
lock
inc
sub
aaa
pop
fcmovnu
fcompl
test
and
jbe
sub
push
mov
cld
push
mov
test
fcmovb
mov
aad
push
or
mov
cs
hlt
cld
mov
ret
call
xacquire
jno
in
push
jge
aam
and
adc
popa
shl
ljmp
mov
decl
mov
rol
negl
mov
mov
pop
arpl
jnp
cmpsb
ret
repnz
repz
sub
xchg
insb
mov
adc
xor
pop
xchg
inc
sbb
fadds
outsl
aas
add
ja
sahf
and
mov
mov
je
ds
inc
addl
mov
popl
jg
pop
mov
push
ljmp
sub
call
ja
push
lahf
sbb
or
pop
xlat
ljmp
lock
out
subb
inc
fwait
or
cmp
xchg
pop
adc
pop
out
call
inc
xchg
cs
arpl
je
fcmove
pop
xchg
lcall
add
jl
jnp
test
add
xor
mov
adc
cmp
ljmp
pusha
xor
and
sbb
in
cmp
ljmp
or
adc
xor
lahf
rorl
dec
add
jbe
les
lea
out
mov
nop
mov
cmp
pop
xchg
ret
adc
and
ds
pop
push
inc
or
xor
aas
das
adcb
sbb
inc
push
nop
imul
ret
popa
clc
pushf
cmp
inc
push
dec
hlt
push
stc
push
sbb
mov
jmp
sub
mov
js
xchg
insb
daa
leave
imul
pop
outsb
dec
iret
pop
jnp
out
nop
add
xchg
mov
lods
dec
mov
lret
pop
xchg
pop
pusha
cmpsb
lret
inc
out
test
fwait
pop
fbstp
cmp
fsubrs
xlat
cwtl
dec
fs
cmp
xsaveopt
push
push
repz
mov
repz
jb
cli
lcall
ja
pop
movsl
repz
imul
mov
sub
out
push
fadds
xor
jbe
sti
push
js
rcrl
call
mov
dec
fmull
lods
mov
outsl
test
lahf
mov
push
mov
dec
and
or
mov
rorl
imul
dec
cmp
xor
nop
sub
scas
out
jb
mov
mov
mov
lcall
xor
sbb
aam
cmp
xchg
fstpt
into
sbb
adc
stc
jge
sub
cld
mov
fwait
mov
ljmp
das
cld
jle
aad
or
and
or
addr16
xchg
push
adc
hlt
test
lods
insb
daa
jns
icebp
addr16
push
fcoms
push
invd
adc
xchg
jae
inc
aad
mov
in
into
mov
mov
ja
xor
mov
sbb
ljmp
adc
lods
mov
lea
cld
lea
movb
mov
rcrb
cmp
fidivl
sti
mov
mov
push
push
add
popf
fnstsw
aad
mov
pop
push
imul
fimull
jno
lcall
scas
pop
add
ja
add
shr
rcll
push
enter
dec
call
lock
dec
jmp
aam
lds
retw
fisubl
mov
repnz
xor
mov
arpl
add
jecxz
fldt
sbb
outsl
insb
into
mov
es
mov
mov
jo
inc
test
int3
jnp
jno
daa
cmpsl
loope
into
adc
int
xor
mov
es
gs
xor
andb
mov
sbb
jnp
addb
xor
rorl
fcmovbe
sbb
mov
inc
lret
aaa
sbb
testb
jl,pn
push
shll
jb
in
fs
sbb
sbb
cmp
cmp
pusha
add
inc
xlat
add
cmp
sti
and
stos
rorb
or
js
cmp
shll
sub
add
enter
ss
mov
jmp
pop
mov
testb
xchg
cmp
iret
ljmp
xchg
nop
mov
and
daa
xor
lea
xchg
sbb
mov
enter
dec
popa
aam
adc
add
xchg
pop
inc
pop
lahf
das
aam
aas
mov
clc
or
repz
push
mov
inc
mov
adc
mov
fwait
push
mov
mov
mov
jg
fs
cmpsb
shlb
xchg
mov
xchg
mov
and
mov
clc
jno
dec
in
jns
sub
mov
and
sbbl
popf
cmc
push
mov
psubb
fcomps
sub
pop
jns
cmpl
mov
add
in
stos
divl
push
pop
out
xor
into
mov
mov
push
inc
mov
into
pushf
and
push
loop
lret
or
movsl
in
pop
pop
jp
push
jmp
push
arpl
adc
mov
mov
mov
lock
jb
xchg
out
shr
gs
and
xor
hlt
xor
inc
aad
mov
out
fidivs
roll
add
push
out
xor
xchg
sbb
out
das
repnz
movsl
or
or
xor
pop
pop
sub
dec
loop
rcrb
jp
and
adc
scas
loopne
int3
sub
imul
nop
gs
in
inc
pop
dec
dec
xchg
cmp
out
push
xorl
mov
pop
push
pop
popf
dec
add
cwtl
shlb
daa
and
popf
cmp
lahf
fiadds
cmp
int3
xor
push
mov
movsl
inc
mov
sarl
shl
movsb
push
push
and
adc
test
aas
stc
mov
mov
cwtl
sbb
push
shll
mov
cmp
test
mov
xchg
jle
aas
sbb
cmp
xchg
mov
mov
cli
xor
jo
fsubl
rorb
sbb
lock
loopne
xchg
inc
aam
repz
sbb
pushf
aam
sbb
lods
imul
inc
out
dec
or
iret
mov
push
dec
pop
jnp
or
xchg
pmaddwd
cwtl
repz
std
mov
sbb
sahf
fldcw
push
stos
and
jmp
push
fadds
out
outsl
mov
xchg
push
rcrb
in
xchg
adc
dec
adc
sbb
loopne
mov
rcrb
pop
mov
stos
stos
dec
mov
ljmp
push
mov
lret
pop
mov
mov
lods
mov
andl
xchg
mov
aad
mov
pop
push
xchg
les
ds
push
adc
int3
loop
mov
push
rcrl
xchg
inc
mov
inc
daa
hlt
in
mov
subb
push
xchg
pop
les
mov
outsb
fidivrl
in
ja
push
mov
push
jmp
out
fwait
sbb
cmpsl
mov
stos
push
xchg
jb
fcomip
clc
nop
mov
cmp
pop
and
mov
sub
jge
lret
mov
sub
arpl
inc
xchg
and
cmc
sahf
outsl
stc
xor
stos
cmp
adc
cmpsb
mov
adc
enter
cmc
mov
inc
aad
inc
in
insb
or
inc
out
pop
imul
sub
jno
cmp
bound
incb
ret
xchg
shl
xchg
or
iret
xor
dec
and
popa
in
incl
inc
insb
or
jecxz
mov
mov
das
clc
jle
xor
push
mov
int3
int3
dec
shrb
fs
inc
cli
jmp
or
mov
ljmp
wbinvd
js
cmc
mov
sbb
mov
int
aad
dec
les
sub
scas
es
dec
xor
inc
lods
lods
nop
jno
jmp
push
adc
aad
adc
shl
xor
and
mov
bound
push
mov
adc
jl
in
lret
ja
mov
icebp
aad
jle
xor
jnp
ror
leave
stos
adc
mov
push
mov
mov
xchg
jb
jecxz
sub
fcoml
fldl
out
fadd
ljmp
mov
cli
add
subb
xor
dec
clc
cmp
cltd
ljmp
push
sub
gs
lret
arpl
fisubrs
jb
inc
aam
dec
ret
cmpsb
lcall
cmpsl
ljmp
das
fs
xchg
lcall
mov
and
leave
lret
sbb
xor
sbb
in
jns
pop
push
cmc
xor
sbb
rorb
int
nop
cmp
push
push
int
jb
or
xor
mov
imul
das
push
sub
xchg
insb
out
stc
or
ret
xchg
lock
push
dec
add
dec
mov
popf
mov
dec
dec
subb
or
fld
test
xor
mov
xchg
sbb
cwtl
stos
sub
movsb
loope
mov
mov
pop
add
ljmp
and
fdivs
xor
loopnew
js
push
inc
int
nop
pop
add
lods
mov
addr16
sub
mov
ljmp
and
add
lret
fistpl
lret
xor
xor
xchg
testb
mov
arpl
fbld
cmp
adc
sahf
stos
cld
adcl
in
in
cmp
cwtl
mov
jne
and
mov
int
cmp
fadd
push
lods
mov
aaa
shrb
fcompl
inc
fsubrs
pop
insb
and
push
fdivrs
scas
and
jae
xchg
push
add
inc
lret
fimull
les
push
andl
in
xor
push
adcb
adc
push
mov
dec
adc
out
sbbl
scas
bound
imul
push
lcall
or
js
push
jle
pop
mov
repnz
cmp
jecxz
dec
pop
mov
or
xlat
push
lea
mov
xchg
rcrl
pushf
cs
call
pop
add
ljmp
in
rol
xor
cs
sbb
inc
ror
add
xchg
pop
sub
mov
sub
xor
inc
lret
push
mov
popa
cmp
pop
repz
test
filds
sub
pusha
sahf
shl
loop
push
xchg
icebp
adc
in
pop
arpl
and
scas
or
or
xor
add
sub
mov
int3
jae
mov
push
sub
adc
test
jle
push
cmp
mov
in
jmp
clc
or
sbb
xchg
pop
addr16
xlat
sub
test
jmp
mov
adc
sub
cmc
je
xchg
aad
scas
and
inc
pop
cmp
mov
mov
aas
and
inc
sarb
into
xchg
mov
or
mov
testb
mov
shll
clc
rcrl
lock
andb
push
testb
jl
push
imul
idivb
repz
adc
push
lods
push
pop
cwtl
clc
loopne
insl
adc
push
pop
sub
xchg
inc
test
loop
sbb
or
das
mov
sbb
inc
fcompl
psrad
inc
sti
int3
cmp
fimuls
jge
push
subb
les
xchg
cmpsb
sub
fbld
push
xor
insl
pop
push
and
dec
xchg
pop
push
insb
lret
xchg
pop
cmpsl
cmpsl
fcmovbe
jle
cwtl
ljmp
inc
cmp
sti
lret
fidivrl
jo
fs
or
mov
rorb
mov
sbb
fcoms
cs
into
inc
out
adc
mov
jne
push
xor
push
push
sbb
sti
add
dec
aas
pop
mov
jne
pop
repnz
mov
sub
mov
stos
or
mov
cltd
fnstsw
jg
sub
bound
pop
pop
mov
cmpsb
cli
dec
repz
sti
sub
mov
mov
cmp
cmpsl
lret
pop
pop
std
mov
pop
mov
lods
lods
sbb
insb
pop
gs
and
sbb
lahf
add
rcl
adc
dec
or
or
mov
xchg
andb
xor
push
sub
jg
jg
mov
jnp
fdivs
push
mov
ret
mov
or
movsl
mov
add
pushf
rcrb
sbb
repz
stc
push
fidivl
repnz
scas
push
and
scas
xchg
jno
test
xchg
pop
mov
pop
inc
das
sbb
jo
dec
or
stos
lcall
add
mov
pop
mov
dec
push
xchg
xor
dec
mov
add
cs
inc
outsb
mul
aaa
pop
fldl
out
push
mov
inc
pop
aas
or
repz
in
scas
fldl
jp
pop
and
mov
cmpb
push
mov
cmp
lret
xchg
dec
adc
xor
dec
lcall
jnp
mov
lds
xchg
and
jo
and
and
push
xor
lds
mov
sub
dec
test
and
fldl2t
jge
push
loopne
dec
xchg
add
fwait
xlat
and
push
imul
fidivs
fdivr
xor
lahf
push
sarb
mov
je
sub
hlt
ret
inc
pop
cmp
jecxz
rcrb
push
fsubrl
aam
sub
xor
add
call
lahf
jns
ljmp
sbb
or
dec
mov
xor
sbb
lahf
xchg
push
paddd
push
and
mov
mov
mov
pop
jmp
pop
sub
jl
dec
sub
push
ret
popf
mov
ficompl
mov
les
mov
xor
mov
mulb
cli
in
push
cmp
fsubrl
imull
add
iret
adc
stc
sahf
dec
inc
rorl
add
fidivs
inc
inc
inc
out
gs
je
and
fprem
cmp
mov
sub
jg
orl
push
sbb
outsb
mov
push
test
bnd
or
add
nop
sahf
or
test
or
add
jb
mov
aaa
or
cmp
adc
mov
gs
and
sub
lret
pushf
cwtl
fs
pop
es
mov
lret
outsb
nop
aam
js
in
mov
loopne
lret
outsb
mov
fnsave
cmp
pushf
xchg
push
xor
imul
push
test
lret
cwtl
pop
mov
pop
cmp
add
jmp
mov
aas
popf
adc
out
lahf
dec
xor
sbb
dec
pop
cmp
ret
xor
aad
stos
jecxz
mov
sub
jbe
lahf
outsl
outsl
add
adc
rclb
loop
lds
mov
pusha
enter
mov
or
add
cmp
mov
out
out
insb
pop
xorb
pop
sahf
in
xchg
fisubrl
pop
mov
sbb
jecxz
lcall
mov
fwait
ret
sub
sahf
xor
iret
leave
dec
stos
pop
xabort
inc
flds
pop
adc
push
hlt
sub
xor
push
xchg
repnz
shll
xor
xor
cmc
lea
rorb
jb
jns
adc
mov
mov
cmp
in
push
cld
ret
jb
ljmp
sbb
call
std
ret
mov
popf
mov
test
add
cmp
xor
rcrb
cmp
mov
shrb
mov
mov
orb
adc
clc
xchg
xor
add
and
nop
js
and
inc
stos
jecxz
add
leave
stos
cmp
and
fcoms
inc
scas
insl
mov
mov
or
out
ror
scas
jnp
insl
mov
lret
cwtl
xchg
test
jmp
or
mov
mov
out
sbb
or
xor
or
sbb
pop
dec
stos
mov
add
fwait
add
jecxz
aaa
push
stos
mov
cmpsb
xchg
sar
xchg
lock
jecxz
ja
pop
movsl
lcall
and
dec
lock
xchg
ljmp
int3
mov
cmpsb
aad
pop
pop
cmpsl
test
cmp
jge,pt
or
push
push
xchg
inc
and
jle
mov
push
rorl
into
sti
std
aad
icebp
imul
xchg
adc
push
jge
push
sbb
sarl
pop
gs
inc
mov
push
scas
out
xchg
jae
or
mov
lahf
imul
dec
add
push
inc
ljmp
popa
jnp
mov
in
adc
lock
mov
adc
call
cmp
mov
xor
aad
and
mov
pop
lcall
lods
loope
ficoms
jb
lcall
mov
sarl
jo
mov
jg
lods
push
xchg
and
push
xchg
pop
jge
xchg
pop
std
xchg
imul
ds
jp
in
cmpl
stos
lods
jnp
xchg
inc
inc
js
addr16
push
in
test
cmpsb
dec
dec
inc
mov
jecxz
sub
stos
mov
xor
icebp
repnz
fildll
cmp
mov
mov
test
sub
fwait
mov
cmpsl
cltd
sbb
sbb
xchg
xchg
ficompl
push
pop
inc
js
mov
hlt
movsb
fnstsw
inc
rcl
sbb
xchg
or
stos
ret
inc
cmp
scas
push
je
sbb
pop
pop
dec
out
cmp
test
insl
push
inc
sarl
sbb
sub
gs
iret
ret
stos
mov
push
add
xchg
adc
out
lds
int3
push
cli
in
cmp
mov
inc
popa
mov
cmp
xlat
fdivs
flds
mov
xchg
inc
sbb
jae
loop
out
sub
iret
in
imull
pop
faddl
insl
add
push
mov
dec
pop
mov
callw
push
sub
adc
jo
test
cs
inc
add
sbb
jp
cmp
xlat
push
xor
add
in
xor
mov
mov
jge
sub
inc
xchg
mov
sub
sub
lock
mov
aad
mov
or
xor
jne
adc
imul
xchg
sahf
jl
or
pop
mov
jle
imull
xor
popa
jne
mov
pusha
adc
test
outsl
xor
dec
loopne
sub
lods
mov
add
mov
ret
jle
cmp
daa
dec
xchg
in
cmp
aad
mov
inc
sub
add
dec
mov
je
iret
cmc
xchg
lods
inc
dec
dec
icebp
mov
mov
cs
jb
jl
adc
push
pop
ljmp
or
mov
cmp
in
bound
aam
aaa
addr16
mov
mov
jge
inc
rorb
lahf
sub
adc
fsubrs
xlat
mov
add
sub
loope
les
pop
push
lret
fidivs
sub
jle
lock
adc
inc
enter
bound
jge
out
fldl
dec
push
jmp
lods
fidivs
mov
jns
test
imul
or
xchg
xchg
or
add
das
add
push
jl
adc
jne
xchg
mov
insb
mov
or
cld
pop
add
inc
stos
fs
mov
fcoms
lea
push
stc
jmp
int3
jecxz
outsl
and
adc
aas
cwtl
inc
movsl
mov
setle
cli
dec
aad
cmpb
test
ficompl
jecxz
or
in
rorl
add
xor
out
push
jge
mov
xchg
pop
je
fstps
cltd
mov
cmpl
in
mov
mov
mov
mov
sbbb
jmp
xchg
es
mov
mov
or
push
cmp
xchg
setb
in
ljmp
jle
adc
sbb
sub
dec
into
push
adc
inc
out
aam
scas
add
mov
sbb
ss
cmpsb
mov
lahf
mov
or
and
sbbb
mov
adc
pop
test
adc
mov
lret
jae
sub
push
repz
test
or
adc
dec
mov
mov
cltd
fsubl
sbb
dec
mov
fmul
mov
xlat
frstor
xor
pop
cwtl
cmp
int3
xchg
mov
rorl
mov
xchg
dec
aaa
arpl
xor
xchg
pop
ficomps
fildl
pop
mov
xchg
adc
lock
adc
jmp
lahf
out
cmp
pop
leave
add
and
mov
mov
icebp
loope
mov
xchg
inc
cmp
dec
cwtl
bound
xor
scas
push
jae
jb
dec
mov
jle
mov
push
inc
ljmp
in
sub
xlat
fnstsw
rcrl
add
adc
jae
out
mov
cmp
jge
mov
or
cmpsb
pop
sbb
daa
psrlq
jnp
sub
shlb
inc
sub
jmp
mov
xlat
jp
jle
cmp
lea
jno
sub
cwtl
inc
aad
pop
cmp
add
sahf
cmp
gs
mov
push
and
mov
mov
sub
mov
stc
inc
ja
xor
out
in
mov
push
fwait
cmp
jle
sub
inc
sbb
mov
cli
mov
js
xchg
cmp
stos
pop
repz
pop
jne
cmp
out
cs
inc
cmpsb
cwtl
cmp
xchg
and
sbb
xchg
adc
mov
mov
fprem
insb
adc
into
push
xchg
xchg
outsl
mov
mov
mov
xchg
sub
fcmovnb
push
test
jle
out
sarb
dec
int
pop
jge
test
leave
mov
push
lds
sbb
push
sbb
or
sbb
imul
xor
xchg
sub
push
insl
icebp
dec
mov
aaa
pusha
pop
mov
add
fwait
jp
pushf
aad
repz
push
sub
mov
inc
fwait
pop
pop
popa
pop
mov
xchg
arpl
and
and
sub
pushf
ljmp
out
fwait
push
hlt
dec
iret
push
jle
pop
push
jne
dec
xchg
cld
inc
icebp
xlat
dec
lea
or
xor
jb
push
ret
cld
jmp
inc
mov
in
or
mov
push
sub
fsubrs
movsl
cmp
imul
stos
sahf
lcall
inc
cmp
mov
les
jo
test
jmp
add
adc
pop
lock
sub
pop
sub
cwtl
push
jl
mov
inc
xchg
or
sti
ss
mov
cltd
lods
shl
xor
fsubs
sbb
pop
mov
repz
push
sub
mov
lods
shr
inc
dec
mov
movsl
mov
sub
adc
push
xor
mov
sub
push
jnp
xlat
sub
adc
bnd
jae
mov
les
cwtl
in
mov
popf
jl
mov
daa
dec
xchg
cwtl
leave
sbb
xor
cmp
mov
mov
and
sbb
ret
les
or
ret
outsl
sbb
int
xor
loop
add
mov
cmp
mov
loope
and
loopne
mov
push
mov
inc
outsb
ror
rorb
push
xor
scas
mov
lods
sub
scas
jo
gs
cmpsl
ficompl
pop
stos
add
insb
sbb
sub
adc
mov
outsb
call
mov
test
cmp
outsl
stc
push
mov
mov
cmovs
mov
lret
sub
icebp
lret
lret
pushf
fisubl
mov
and
loopne
sub
mov
arpl
imul
int
aas
and
enter
inc
push
push
xchg
mov
ljmp
ja
push
add
repnz
imul
mov
cmp
sbb
cmp
ret
fwait
pushf
fwait
mov
and
xchg
mov
pushf
pop
push
filds
and
movsl
push
shll
cmpb
movb
mov
add
fcomps
pushf
mov
mov
mov
in
mov
int
scas
sub
in
xchg
push
lea
popa
cmp
xchg
adc
or
pop
xchg
outsb
jle
and
push
test
jp
add
pushf
test
push
lock
mov
mov
push
push
lods
add
fiadds
or
repnz
sbb
out
mov
adc
into
enter
xlat
scas
lret
add
out
std
push
fdivp
pop
adc
inc
subb
out
iret
pop
rol
mov
js
cs
push
cld
mov
add
loopne
mov
pop
icebp
popa
push
jns
adc
pusha
xor
mov
mov
dec
mov
mov
dec
mov
jae
inc
lcall
cmp
clc
test
loopne
sub
jo
and
or
sbb
xacquire
das
mov
sub
or
dec
aam
into
hlt
lea
lret
and
aaa
lock
mov
or
and
inc
xor
pop
mov
sub
fmuls
adc
push
mov
push
popf
add
mov
mov
jo
mov
int
sub
scas
push
adcb
adc
dec
fldl
cmp
call
jbe
sbb
mov
iret
xor
scas
pop
mov
add
jecxz
push
jno
daa
aas
sub
mov
hlt
jo
pop
bound
scas
rol
and
lods
xlat
mov
enter
nop
aas
imul
ret
stos
cmpsl
add
dec
mov
sarb
decl
flds
insl
stc
std
andl
test
or
jg
mov
mov
gs
xor
mov
sub
and
test
mov
adc
movsl
jae
add
jl
xor
iret
mov
adc
jmp
mov
outsb
fmul
inc
xor
add
xchg
in
pop
fdivr
push
mov
es
repz
xchg
push
jp
mov
dec
fs
push
add
js
hlt
add
xor
xor
ficoml
or
stos
out
out
fisubrs
sbb
mov
xchg
mov
mov
repz
in
dec
inc
pop
pop
mov
sahf
sti
arpl
mov
lret
and
test
hlt
clc
push
clc
cmp
xor
stc
mov
xor
js
aas
std
loop
hlt
jge
outsl
mov
arpl
push
mov
jl
cwtl
pop
mov
loop
and
inc
cmp
jle
inc
ret
pop
cmp
cmp
xchg
xor
icebp
stc
cwtl
xor
xchg
cmp
mov
or
add
out
scas
sub
enter
es
mov
imul
cmp
test
dec
popa
mov
mov
rol
pop
cmp
sbb
arpl
ss
mov
sbb
or
lods
bswap
push
fdivl
jae
pop
icebp
sbb
out
punpckhbw
dec
cmp
xor
push
fidivs
mov
out
int
movb
negl
sub
xchg
imul
cmp
out
in
fcoml
or
aaa
push
mov
add
mov
filds
in
loopne
fs
add
es
push
dec
pushf
fwait
mov
mov
mov
int3
jle
push
jo
mov
mov
dec
cmovbe
adc
or
pop
mov
es
pop
stc
xor
adc
dec
pop
stc
adc
outsl
add
adc
adc
mov
sahf
and
inc
ficomps
or
sub
dec
fldcw
ds
add
jle
incb
fs
jb
sub
pop
int
adc
fsubp
and
out
xor
data16
leave
dec
jge
imul
repnz
aam
mov
andl
and
lret
xchg
mov
mov
and
xchg
xor
jne
mov
push
pop
imul
mov
jg
daa
mov
or
pushf
cmp
rcrb
xchg
pop
add
sbb
scas
mov
lret
adc
inc
clc
push
inc
sbb
jae
mov
mov
daa
mov
cmp
cwtl
xchg
mov
repnz
pop
adc
adc
xor
aaa
out
xchg
cli
adc
movsb
xor
mov
and
fs
adc
icebp
fs
sub
xchg
jnp
sub
out
lcall
sbb
test
ret
fsubl
je
lret
and
fs
or
cmpsb
and
insl
dec
cmp
inc
dec
out
mov
inc
pop
iret
sbb
push
popf
pop
xor
cmp
or
aam
xlat
sbb
adcl
cli
scas
adcb
inc
cmp
or
lcall
xor
arpl
bound
fstp
jp
test
cmp
mov
lcall
subl
xchg
nop
push
dec
xor
and
hlt
mov
inc
das
fstps
cmpsl
cmpb
rorl
addr16
mov
int
pop
sub
clc
mov
and
xor
fidivrl
pusha
js
dec
jno
mov
and
outsl
cs
dec
inc
rolb
mov
inc
stos
out
int3
sbb
inc
sub
pop
jg
or
repnz
mov
out
sub
lahf
or
push
push
xchg
movsb
fsubrl
pop
cld
cmp
sub
mov
int3
push
cli
popf
out
repz
add
cmp
test
inc
jl
dec
fwait
or
jmp
pop
movsl
jg
add
ror
insb
push
arpl
push
xchg
data16
sbb
shll
mov
push
and
cmp
add
adcl
inc
and
popl
add
sbbb
xor
mov
jg
adc
mov
sbb
repnz
lock
dec
sub
xchg
or
scas
push
clc
stos
adcl
arpl
mov
and
fildl
push
dec
add
mov
dec
ret
cmp
push
cs
cltd
sbb
jge
add
addr16
addb
pop
rclb
push
pop
cmpsb
jae
xor
mov
shlb
jmp
into
je
push
shlb
cmpsb
dec
lods
repnz
test
cwtl
sbb
das
movsl
out
jb
mov
cld
std
and
jge
dec
ret
push
mov
loop
scas
rcll
call
rcrl
push
fbld
lcall
out
jo
fcoml
test
push
pop
inc
ret
pop
fxch
addr16
cmp
daa
cmp
and
je
testb
sahf
and
jecxz
repz
iret
movsl
aam
jbe
out
test
push
mov
das
xor
sbb
sub
inc
out
stc
or
sbb
inc
adc
loop
mov
les
dec
out
dec
sbb
inc
call
mov
dec
push
inc
add
adc
jge
xlat
lahf
call
xor
fisubrl
mov
loope
cwtl
fbstp
dec
ret
and
clc
jnp
xlat
cmp
adc
in
inc
test
insl
mov
push
xchg
pop
scas
addl
jl
xchg
gs
sti
cmp
js
rcll
mov
xchg
sub
ja
enter
push
pop
dec
cli
movl
insb
pcmpgtd
jle
fwait
outsb
lds
xchg
out
mov
mov
sub
sarb
mov
enter
or
out
jecxz
das
je
js
dec
cmp
scas
lahf
or
imul
nop
mov
cmp
push
jno
lahf
mov
xor
xchg
mov
cmp
sub
adc
iret
dec
mov
ja
stos
ss
rorb
cwtl
pop
lds
sub
inc
adc
cmp
mov
ret
inc
push
mov
test
jns
rolb
adc
adc
inc
sahf
sbb
sbb
mov
loop
dec
int
or
push
insb
mov
xor
out
jae
ret
clc
add
cmp
xor
loope
xor
out
lcall
pop
cmp
aaa
mov
cmpl
insb
inc
add
xchg
mov
mov
loope
js
in
push
pushf
dec
fs
xor
inc
cmpsl
and
ret
decl
aam
rcrl
sbb
xorl
push
lret
inc
nop
in
mov
popa
pop
insl
xor
pop
jge
fldt
stc
push
cmpsb
xor
push
icebp
icebp
pop
sbb
and
xor
pop
inc
subb
xchg
jmp
jl
fincstp
sub
dec
shr
out
lcall
adc
sbb
mov
into
insl
add
jbe
push
cmp
add
mov
je
pop
jg
imul
das
push
mov
hlt
nop
jno
ja
dec
ss
imul
mov
in
add
outsb
xor
xchg
push
mov
push
mov
cs
cmp
sbb
ds
punpckhdq
mov
inc
cmpsl
mov
mov
movsb
negl
mov
dec
insl
cs
pop
mov
cli
insb
pop
fdivrs
arpl
jnp
mov
mov
loope
imul
lds
mov
xchg
cld
imul
mov
pop
push
sub
jg
cld
mov
mov
inc
les
jmp
dec
jp
fidivl
mov
sub
in
cmc
or
mov
cld
movsl
sub
into
mov
and
sbb
test
out
mov
mov
fwait
clc
dec
into
jg
sar
xchg
xchg
mov
out
jle
int
cmp
mov
test
xor
fwait
or
dec
pop
scas
ljmp
xor
ficomps
lods
iret
in
add
push
mov
popf
push
inc
subb
mov
jns
scas
inc
jp
sbb
inc
ret
jno
fwait
sub
jp
lods
sbb
adc
xchg
std
loopne
int3
add
xor
shrl
or
insl
xchg
out
sub
shrb
xor
push
cld
fstpl
sub
or
mov
rcrl
adc
mov
fwait
add
mov
loope
jo
push
mov
add
cmp
mov
cmp
rclb
push
adc
inc
movsl
mov
jmp
push
or
in
xchg
ss
negl
scas
out
push
fstpt
roll
scas
mov
add
stos
cmp
jmp
in
pop
mov
movsb
pop
dec
or
int3
stc
xor
pop
and
mov
adc
ret
stos
in
ret
mov
nop
push
inc
loope
das
sub
xchg
iret
push
call
jno
iret
insb
dec
ret
lcall
sub
mov
cs
jns
fldt
fimull
fs
rorb
out
sbb
mov
pop
lahf
push
cmp
add
mov
pop
cli
inc
test
add
pop
pop
pop
scas
sub
je
and
cmpsl
pop
sbb
lods
les
mov
inc
xor
enter
aaa
pop
and
sub
rorb
mov
pushf
iret
clc
adc
in
sub
sbb
push
repnz
mov
xchg
inc
lods
in
data16
das
aas
sbb
xor
fists
xchg
xchg
popa
pushf
mov
dec
insl
xchg
ss
push
xchg
xor
scas
sub
lret
inc
and
push
push
rorl
adc
stos
sahf
jp
scas
or
aas
jne
fs
aam
jbe
inc
push
xorb
in
mov
cmp
in
sbb
dec
loope
imull
jne
cld
lds
iret
leave
pop
pushf
ljmp
sbb
inc
dec
shrb
dec
pushf
hlt
xchg
in
int
pushw
sub
ficoms
das
jae
jle
lcall
push
dec
dec
out
or
paddusb
out
jo
and
outsl
mov
icebp
mov
sbb
inc
insb
andb
fs
fisubs
xor
iret
divb
add
leave
jg
scas
cli
sub
out
aaa
xchg
and
adc
fstpt
sbbl
cmp
xchg
push
jbe
stc
sbb
aaa
test
cmpsb
outsl
or
cltd
cltd
out
xchg
dec
pushf
sub
pop
and
mov
cwtl
fadds
inc
mov
aam
jl
dec
push
push
or
jmp
xchg
inc
dec
sahf
or
xor
adc
out
lret
xchg
mov
mov
jmp
sahf
test
lods
xor
pop
lret
icebp
dec
mov
sbb
push
les
pop
jnp
scas
push
cli
inc
xchg
in
jp
mov
push
add
xchg
shll
add
mov
or
and
jns
rcrl
add
int
xchg
pop
xor
repnz
sub
decl
in
pop
cmp
stos
pop
adc
sahf
cmpsl
push
pop
jge
int
pop
mov
or
jnp
mov
push
mov
movsl
pusha
fs
movsl
orb
sbbl
call
jge
lods
sbb
imul
pop
repz
fwait
xor
dec
js,pn
add
popf
jp
dec
inc
xchg
sti
push
or
test
leave
jmp
push
jne
orl
sub
add
int
xor
add
mov
shl
push
mov
inc
jl
outsb
sbb
mov
jmp
push
mov
std
mov
push
jp
adc
xchg
jbe
enter
push
xchg
in
add
cmp
dec
jne
or
test
mov
pop
pop
cli
pop
mov
pop
push
jns
cmp
pushf
nop
pop
add
iret
or
xor
dec
sbb
std
mov
mov
or
jmp
push
push
ja
bound
vpshufhw
cmp
or
and
pop
jns
pop
cli
jp
mov
pusha
sahf
and
ficoml
pop
jne
repz
enter
xchg
lcall
add
lods
inc
into
pusha
inc
cmp
push
mov
int3
pop
mov
inc
xchg
in
sti
jbe
add
pop
push
arpl
test
aad
push
push
xor
xor
dec
push
mov
xor
jmp
out
sahf
das
sbb
lods
pushl
mov
testb
adc
mov
ja
insl
xchg
lods
sbb
push
adc
into
jmp
shr
dec
and
dec
cltd
loop
lret
ficompl
or
iret
push
fsubp
and
cmp
shll
cmc
fnstsw
mov
inc
icebp
push
pop
aad
ret
jne
pop
cmpsl
pop
jae
jbe
lea
mov
data16
bswap
cmpsl
filds
adc
mov
lret
pop
fsub
out
sbb
sti
fwait
inc
sbb
sub
loopne
insb
imul
pushf
add
mov
inc
sbb
arpl
scas
cmp
sti
push
ret
push
mov
mov
leave
pop
das
sbb
popa
stos
inc
xlat
into
subb
or
enter
sub
arpl
sbb
pop
mov
pop
xlat
adc
fiaddl
jg
mov
pop
loopne
push
cli
mov
jmp
sbb
dec
adc
ror
sub
fsubs
jmp
loop
adc
andb
fcomi
popf
sub
in
fdivrl
test
inc
imul
mov
or
imul
or
stos
cltd
mov
mov
cs
mov
adc
sbb
rcrb
mov
in
jo
out
aam
insl
mov
sahf
adc
sbbb
bound
xchg
mov
ret
dec
inc
xchg
sbb
addr16
mov
fidivl
pop
mov
sub
sti
inc
mov
mov
jge
mov
mov
pop
insl
js
int3
xchg
cmp
xchg
ret
lods
xor
stos
inc
dec
shlb
int
stos
ds
das
mov
push
ds
out
das
adc
loop
lods
fisttpl
pop
mov
mov
int
sbb
and
cmp
or
xor
inc
push
out
and
push
push
test
stos
gs
leave
jne
push
adc
mov
test
mov
data16
add
jecxz
out
xlat
or
nop
hlt
movsb
add
cltd
outsb
inc
xchg
cmp
inc
or
cld
mov
cld
jb
xor
mov
and
rorb
push
jne
sbb
push
adc
cs
and
cmp
dec
scas
inc
out
fbld
pop
fisttpll
repz
adc
sbb
push
jp
xchg
rcl
or
xchg
lahf
jbe
xchg
sub
adc
cmp
repnz
cwtl
add
cmp
stos
push
aas
xchg
xlat
cltd
cwtl
mov
xor
dec
mov
xlat
pop
test
jno
roll
inc
mov
jne
add
cmp
fstps
icebp
lcall
push
sbbl
fwait
scas
jno
js
push
lods
cmp
xor
jp
mov
scas
mov
and
jbe
fwait
lds
pop
push
je
jo
sbb
sbb
push
stos
jmp
arpl
inc
iret
dec
dec
imul
sahf
inc
repz
or
mov
js
or
cmpsl
mov
add
dec
push
and
sbb
jge
lret
adc
pop
mov
xor
in
lret
in
and
adc
xchg
pop
add
jns
stos
pop
push
cld
cmp
les
push
dec
xor
je
movsb
push
rolb
sti
repnz
jne
sub
stos
shlb
fistl
adcb
addl
repnz
out
dec
xor
cmpb
and
sub
jp
xchg
dec
aam
pop
lret
mov
scas
rorl
fcomi
or
aaa
outsl
xorb
jmp
or
dec
sub
ss
mov
inc
sbb
push
jo
daa
sub
sub
fsubs
jbe
jae
mov
push
mov
std
cwtl
stc
push
loop
push
mov
sbb
subl
in
cmpsl
dec
test
sbb
pop
mov
loopne
mov
jne
movsb
bound
testb
popa
dec
dec
enter
and
xor
push
popa
cmpsl
and
jle
mov
inc
sub
mov
in
push
sbb
or
cmp
ljmp
fisubrl
test
jbe
and
xlat
push
fmull
popa
mov
xchg
enter
adc
pop
mov
cmp
cmp
nop
sbb
in
mov
test
aam
cmp
add
push
call
sbb
dec
out
rorb
ds
call
int3
jae
xchg
icebp
scas
sbb
aad
loope
add
mov
les
mov
repnz
fs
dec
fimull
sub
cwtl
xor
cmpsl
cltd
repz
in
inc
mov
dec
sub
pop
mov
cli
or
xchg
push
mov
push
adc
push
cwtl
rcr
xor
inc
clc
mov
fcomps
addr16
jle
mov
in
je
adc
int3
fdiv
dec
js
xor
daa
push
pop
shl
hlt
xchg
stos
push
fcomps
push
sbb
dec
mov
mov
cmpsb
jp
or
ss
das
mov
lcall
ss
mov
dec
mov
movsl
lret
lods
mov
or
mov
dec
add
sti
cmp
inc
push
pushf
test
movsl
fdivrs
mov
mov
xorb
icebp
push
sbb
loop
insb
fwait
mov
mov
sbb
lahf
cmp
cltd
movsb
stos
xor
js,pn
pushf
mov
mov
cwtl
sti
imul
lret
lods
lea
leave
mov
dec
push
xchg
sbb
ds
and
mov
and
lcall
mov
in
aas
add
movsl
mov
sarl
loope
fcoml
or
or
lahf
jbe
hlt
daa
cwtl
rcll
int
inc
pop
or
push
cmpsb
call
and
or
xchg
fdivl
outsb
mov
xorb
fcomi
flds
stos
cmpsl
jns
test
jp
lods
inc
xor
scas
jns
sbb
lods
mov
aaa
and
or
pop
out
or
outsb
dec
mov
iretw
push
push
and
subl
mov
ret
ret
out
stos
into
lcall
imul
add
fs
popf
popf
dec
add
mov
out
inc
adc
in
fwait
jg
mov
arpl
inc
and
aaa
dec
cmp
test
mov
cmp
je
dec
xchg
jne
fwait
mov
and
add
fs
sbb
gs
push
test
xchg
jae
orl
push
push
imul
and
adc
xchg
mov
push
aas
dec
mov
mov
loope
stc
add
push
cmp
mov
testb
jle
leave
scas
push
push
add
dec
push
lret
insl
aaa
add
push
mov
inc
pop
jae
into
inc
add
add
andb
iret
ficoms
cmp
add
cmpsb
mov
sbb
outsl
je
inc
std
mov
jno
pop
addl
adc
mov
stos
int
loop
adc
shrl
mov
add
lret
imul
add
popl
adc
pop
fs
or
inc
jo
rol
decl
in
dec
fdivrs
aaa
arpl
mov
imul
outsb
push
xlat
xchg
sti
or
rcr
loopne
je
sar
iret
out
shll
test
lret
xor
mov
sbb
sub
mov
testb
sbb
cltd
xchg
mov
xor
dec
and
push
sub
mov
adcb
mov
fnstenv
in
add
mov
fsubr
and
xchg
mov
cmc
mov
add
jne
push
movsl
dec
cmp
xlat
das
stc
test
mov
iret
or
add
cltd
popf
rcrl
ja
ror
in
xchg
mov
inc
mov
jl
aam
daa
je
xchg
lret
mov
jo
int3
or
in
jno
in
xor
dec
inc
out
dec
stos
push
xchg
negl
fwait
cmpb
aad
xor
nop
enter
pop
sti
push
push
stc
cwtl
add
or
fld
push
jmp
mov
add
mov
mov
or
cwtl
dec
push
dec
sbb
movsl
cmp
push
pop
mov
xor
std
inc
sub
ss
sbbb
dec
sahf
or
and
inc
xchg
cltd
mov
cmp
movsb
lret
aad
push
xchg
mov
inc
lods
out
orb
mov
cmpb
fsubl
lods
ss
xor
in
mov
cmpsb
bound
lock
lock
xchg
lea
dec
push
lds
push
or
inc
or
and
scas
jno
rolb
cs
jnp
aad
sbb
sbb
enter
mov
mov
adc
jp
sub
clc
and
and
pop
jge
xlat
inc
test
mov
fs
pusha
inc
pop
dec
out
popw
mov
aaa
ja
sbb
lcall
loop
mov
pop
shll
sbb
insb
or
push
add
xchg
adc
cmpsl
pusha
jo
and
mov
jbe
outsl
push
cltd
leave
mov
mov
inc
repnz
fwait
int3
mov
sbb
jnp
and
mov
jno
cs
xchg
sbb
aad
adc
jno
push
jmp
cwtl
jge
nop
inc
dec
sub
rorb
movsl
repz
pop
mov
xor
or
or
dec
jb
mov
or
pop
nop
in
nop
push
outsl
int
push
inc
leave
lret
and
adc
iret
push
scas
adc
inc
or
jecxz
mov
xor
add
push
scas
mov
sahf
mov
jnp
and
adc
add
xchg
push
out
mov
das
mov
xlat
mov
fildll
xchg
sbb
je
pop
enter
test
jg
mov
add
cmpl
dec
insb
test
xchg
lret
incl
paddb
arpl
add
push
push
bound
stc
sahf
andl
push
test
inc
aam
es
pop
outsl
dec
pusha
out
mov
mov
cmp
fimull
push
out
fwait
adc
cmp
push
and
fs
xchg
jmp
fcoml
push
fsubrs
sub
imul
jnp
and
jbe
xchg
in
les
aaa
jp
push
test
jg
inc
sbb
mov
mov
stc
pushf
inc
les
mov
inc
cld
je
adc
pop
push
aas
jbe
call
xchg
mov
cmp
pop
aam
mov
out
xor
pop
ljmp
lcall
dec
push
adc
push
stos
adc
in
std
add
in
out
lret
xchg
add
jne
sub
and
jb
push
xorl
mov
hlt
rcrb
fstpt
cld
fldt
into
cwtl
les
lock
sub
aam
repz
sbb
adc
cmpsl
mov
lret
or
jp
mov
lahf
jle
flds
shrl
repnz
push
dec
repnz
loop
lods
pusha
xchg
rol
adc
jge
jae
test
popa
sbb
dec
movsl
loopne
ret
fsub
mov
int3
les
ret
imul
push
cmp
and
mov
testl
movsl
jbe
mov
add
jl
loop
lods
dec
movsb
int3
xchg
pop
pusha
jecxz
mov
mov
xlat
imul
push
test
insl
mov
aaa
dec
loop
pop
jle
mov
js
push
jns
inc
and
pop
shll
xchg
mov
ja
push
in
lods
push
aam
sbb
das
lock
cmp
and
notb
out
push
out
rcll
popa
shll
sbb
jnp
movsb
jno
icebp
and
dec
daa
push
sub
mov
mov
inc
fistpll
lods
add
insb
mov
std
push
in
cmp
xorb
jnp
call
push
les
and
jp
mov
xlat
test
push
jl
nop
xchg
push
dec
ror
call
lods
mov
jl
and
cmp
xorb
mov
xchg
jb
jmp
sti
movsb
je
aam
mov
std
fidivrl
sbb
push
and
in
jecxz
cmp
adc
push
test
cmp
inc
hlt
in
hlt
xorb
and
int
scas
movsl
jecxz
inc
scas
sbb
mov
arpl
add
jns
xchg
daa
xor
les
dec
test
mov
rcrb
pop
xchg
fs
stos
push
nop
push
clc
mov
and
dec
mov
ret
mov
xor
loopne
push
sub
jg
sbb
xor
inc
gs
insl
fwait
jae
test
cmp
repz
xor
dec
xchg
jmp
or
mov
push
mov
ja
sbb
mov
sbb
mov
ficoms
loop
lahf
dec
addr16
popa
fildll
push
mov
sbb
jmp
mov
inc
mov
cwtl
dec
inc
out
dec
mov
xor
fmul
pop
jl
test
jno
fwait
stos
rorl
cmc
movsl
cmpsb
mov
pop
loop
push
sub
jno
and
pop
rcll
ja
push
loope
cmp
push
mov
int3
mov
xchg
cs
popf
or
xor
cmpsb
inc
lods
hlt
fucomp
pop
pop
or
stos
movsb
mov
je
cmp
pop
daa
in
daa
add
mov
in
and
mov
mov
dec
jp
cli
aaa
jno
stc
xchg
scas
popf
dec
sbb
jnp
push
cmp
es
insb
push
popa
lret
stos
cmp
fdivs
shll
adc
scas
mov
int
push
lods
mov
enter
sahf
inc
or
sahf
cmp
mov
inc
call
xchg
in
sbb
pop
jns
sbb
sbb
cs
push
shll
ja
dec
pop
cmc
and
mov
add
and
call
fs
call
jge
xchg
jae
xchg
mov
out
insl
jp
adc
mov
cld
outsl
adc
pop
and
cmp
cvtps2pd
inc
std
test
shlb
js
es
aaa
sbbb
repz
xchg
subl
push
test
test
mov
pop
mov
xor
test
xor
int3
adc
inc
xor
insl
xchg
fmulp
cmp
cmpsl
inc
pop
notl
rorb
cmpsl
cs
arpl
push
and
sahf
adc
push
add
jg
mov
cltd
xor
clc
cltd
repz
xor
pop
add
jp
mov
or
pop
push
push
jnp
in
in
fidivrl
add
pop
xor
sub
xor
outsl
loope
cmp
or
addr16
out
cmp
popf
adc
sbb
push
iret
jnp
test
cmpsl
mov
jmp
xchg
imul
mov
sbb
lahf
gs
push
test
testl
or
fs
and
or
lahf
jl
decb
jb
loop
pshufw
push
repnz
das
cmc
repnz
mov
popl
pushf
cmc
jbe
into
mov
dec
add
sbb
out
popa
negb
scas
test
nop
fimull
out
pop
je
shlb
push
loopne
mov
jo
pop
gs
fstpl
adc
inc
adc
fs
loop
nop
movsb
and
les
jae
adc
xor
xor
or
mov
jne
loop
jge
push
inc
sbb
loop
or
inc
xor
into
movsb
imul
pop
fcomps
sub
insb
add
and
ljmp
pop
mov
das
andb
and
jmp
mov
rcrb
rorb
std
adc
das
adc
xchg
push
cs
and
mov
jae
ja
fmul
mov
inc
add
inc
add
lcall
ret
add
mov
cltd
adcl
jl
dec
mov
sub
mov
sti
jge
in
jp
cmp
push
xchg
imul
dec
es
popf
mov
ss
jo
pop
cmp
xor
xchg
dec
inc
xchg
inc
cmpsl
bound
cmpsl
xor
cld
jecxz
mov
in
scas
in
lods
out
cmp
mov
cmp
imul
pop
sahf
push
push
enter
cmp
mov
jns
sbb
inc
bound
ja
ret
xorl
mov
lret
in
dec
push
inc
insb
and
imul
sarl
popa
jp
add
mov
sbb
stc
loop
mov
inc
clc
fwait
roll
out
rcrb
test
mov
int3
imul
mov
push
rcrb
cmp
push
imul
sbb
push
xchg
dec
jo
in
popf
repz
xlat
and
mov
dec
adc
test
nop
add
cmp
imul
mov
xlat
push
inc
jno
jge
movsl
fisubs
mov
jae
test
pop
aas
cltd
cmp
xlat
jmp
mov
shl
or
mov
lret
fs
sub
add
bound
cmc
loopne
inc
sbb
cli
mov
stos
add
jno
inc
aam
xchg
fcomi
push
add
adc
jbe
or
orl
xor
xchg
fdivrs
je
lock
mov
xor
xlat
mov
fbld
sahf
xlat
lahf
sub
cmp
jg
stos
cmovo
push
fwait
ss
fnstenv
das
mov
fldt
sbb
xchg
popa
in
dec
fucomi
mov
outsl
or
repnz
out
nop
inc
jns
nop
pop
add
addl
mov
sbb
dec
pop
cmpb
xor
in
shlb
xchg
and
and
inc
sbb
lahf
leave
cmpsb
xchg
or
cmp
inc
in
xor
xor
aam
mov
jmp
test
mov
adc
roll
mov
add
fidivs
pop
mov
sbbb
dec
daa
test
loopne
and
push
cmpsl
adc
and
sbb
jbe
mov
aas
dec
cmp
ja
pop
xor
lods
cltd
mov
andl
jns
or
mov
lahf
dec
es
sbb
test
outsl
dec
es
xlat
test
push
ljmp
lea
scas
jg
push
popa
sahf
movsb
xchg
call
nop
ret
lret
es
push
in
jno
fwait
arpl
or
add
repz
sbb
in
and
xor
push
popl
push
fisttpl
and
sbb
loopne
jp
jp
lods
xor
mov
aam
xchg
push
rorl
sbb
mov
jg
lea
std
mov
push
xor
mov
popa
lret
popa
pop
mov
and
rorb
ret
xchg
iret
int3
sahf
popf
xor
stc
push
rclb
mov
mov
push
andb
xchg
inc
loopne
pop
mov
jns
add
dec
int
aas
stos
push
xchg
ds
mov
lret
push
in
sti
es
dec
lret
cltd
jl
add
sbb
scas
push
mov
pop
cmp
dec
pop
aaa
scas
out
fidivrs
sbb
or
mov
jmp
pusha
mov
xor
jb
and
jns
cmpsb
fists
pop
push
rorl
popf
sti
adc
jg
cld
inc
sahf
adc
dec
stos
push
sub
or
fwait
out
sub
sbb
mov
loope
fiadds
jae
lds
call
mov
fs
popf
mov
pop
mov
mov
fcomp
jecxz
push
cmp
jmp
mov
sub
cmp
adc
mov
fsubp
add
jmp
and
mov
hlt
mov
imul
rorl
xor
inc
inc
add
inc
dec
jnp
mov
push
adc
xor
inc
mov
imulb
aad
jo
pusha
stc
pusha
popa
andl
call
icebp
adc
xor
xor
push
scas
out
mov
cmc
test
dec
shl
sub
ljmp
push
scas
inc
push
dec
adc
pushf
mov
in
cmp
sub
push
push
push
imul
lods
rclb
adc
fcmovu
loope
inc
xchg
pusha
push
out
sbb
popf
jno
ret
lahf
lds
sbb
jno
and
nop
orb
xchg
cmpsl
add
add
and
xchg
sbb
sbb
inc
or
fcmove
mov
xor
hlt
mov
sbb
fs
pop
mov
mov
pop
lret
mov
inc
push
pop
test
ror
int3
pop
addr16
and
lret
jo
dec
cs
imul
adc
lock
or
jmp
loop
movsb
std
mov
repnz
repz
xor
test
mull
cmpsb
lds
div
push
aam
jp
and
lea
xor
and
jmp
adc
or
adcl
push
inc
jmp
in
dec
push
push
idivb
int3
out
addr16
push
fistpll
cmp
push
mov
mov
dec
in
jg
fs
mov
mov
sti
mov
dec
dec
icebp
inc
ret
pop
sub
jp
in
mov
pop
xlat
inc
icebp
hlt
cltd
mov
sbb
ss
jbe
jns
lods
int3
mov
hlt
or
lahf
cmc
lcall
ret
and
cltd
pop
faddl
insl
and
mov
cmp
cmc
stc
adcb
dec
sbb
aas
ret
repnz
mov
inc
mov
inc
mov
popf
sbb
xor
sbb
daa
push
repnz
nop
sbb
nopl
xchg
mov
sub
idivb
repnz
shll
and
push
out
divl
add
xorl
lock
pop
sub
daa
adc
gs
mov
adc
mov
push
andl
cs
pop
xchg
pop
lcall
or
inc
sub
pop
out
mov
mov
cmpsl
or
pop
xor
jp
pop
pop
call
mov
es
xchg
aas
pop
pop
xor
pop
push
lods
inc
sub
cmpsb
sbb
jno
inc
inc
fstps
into
cmp
in
shll
adcb
mov
push
inc
pop
ja
xchg
cmp
insb
sub
jmp
sub
jl
movsl
sub
jns
inc
mov
mov
fstpl
in
inc
sti
adc
out
out
cmp
lock
and
cmp
cmp
or
add
xchg
cmpb
rcl
div
shr
je
andb
jb
idivb
adc
add
and
bound
mov
push
mov
hlt
scas
inc
sub
jg
notl
pop
xor
add
pop
lds
xor
sub
xchg
movsb
int
adc
lods
adc
lock
xchg
sti
aad
jl
and
addb
cmpsb
lock
mov
dec
pop
push
jmp
xchg
in
push
jno
shlb
push
aas
aaa
mov
test
int3
loope
adc
mov
add
cltd
xlat
cli
xchg
cmp
shr
fwait
addr16
push
outsb
push
cmp
stos
icebp
dec
mov
mov
adc
imul
sti
iret
je
push
int3
mov
imul
push
movsb
data16
cld
dec
dec
or
or
push
mov
imul
mov
cmpb
mov
test
mov
mov
fcmove
mov
std
xchg
push
jl
out
push
sarl
mulb
inc
xor
xchg
ficoms
mov
sbb
sbb
lock
bound
pop
out
out
enter
jl
sahf
pop
fsub
mov
loope
and
nop
add
mov
mov
fs
and
add
sub
call
pop
outsl
pop
push
xchg
repz
mov
jae
or
rcll
mov
nop
dec
lret
inc
vandnpd
call
and
je
mov
iret
scas
sarb
sub
aaa
jmp
mov
mov
xor
movsb
push
cmp
xor
jbe
jle
sub
aad
pop
mov
xchg
mov
rcrb
dec
add
dec
loopne
loop
push
daa
mov
mov
jnp
inc
jmp
fwait
jne
sbb
xor
daa
aad
jge
js
cltd
xchg
mov
mov
or
mov
sub
movsb
mov
insb
mov
stos
push
or
sahf
mov
cmc
mov
sub
sbb
pushf
out
sbb
rorl
mov
or
sub
fisubrl
jo
push
cmpsb
pop
ja
or
sub
xor
jg
imul
xor
mov
xor
add
popf
icebp
sub
rolb
mov
pop
pop
andl
cmpsl
xlat
mov
xchg
daa
aas
cmc
xor
push
pushf
mov
push
xor
mov
cmp
mov
mov
push
nop
shll
enter
arpl
lock
int
mov
sti
mov
inc
xchg
push
adc
int3
mov
dec
ljmp
loopne
pop
xor
daa
scas
cltd
and
popf
test
in
adc
inc
rcrl
loope
mov
mov
testb
andl
mov
dec
xor
addr16
fwait
mov
jnp
sahf
jecxz
mov
xor
mov
ret
sub
xchg
test
jmp
jge
aad
xchg
ja
jge
int3
add
push
xchg
out
push
and
xchg
fadd
ljmp
and
sti
clc
cwtl
loopne
xchg
ret
add
xchg
adc
lods
mov
dec
mov
push
fcompp
or
push
mov
mov
bswap
add
imul
movsb
popf
aam
pmaxub
lock
movsb
out
leave
pop
xchg
cs
mov
cmp
jnp
or
dec
sahf
or
mov
addr16
cmp
int3
icebp
imulb
pop
js
mov
dec
loopne
adc
sbb
add
cmpsb
mov
sbb
cs
or
mov
mov
inc
push
mov
nop
popa
mov
movb
or
inc
lea
test
jns
fisttpll
push
cmp
xor
cmc
fmuls
mov
test
mov
cld
enter
insl
nop
call
jbe
and
or
cs
and
mov
dec
inc
repnz
insl
and
inc
fwait
mov
movsl
fs
ja
movsb
dec
hlt
cmpsl
out
addl
into
fsubs
shll
xchg
cmp
mov
xchg
mov
in
jae
insl
je
and
aas
xchg
in
repz
int3
lcall
mov
cmp
fmuls
repz
push
dec
sub
sub
pop
lcall
ljmp
popf
movsb
aas
pop
dec
out
je
repnz
lahf
jl
cmp
adc
mov
dec
ss
aam
xchg
mov
aam
xchg
call
lret
and
xchg
ss
and
jo
adc
push
jmp
in
dec
mov
fisttps
popf
aad
pop
add
adc
repz
or
or
jbe
mov
call
cwtl
pop
add
mov
push
cmp
js
and
push
push
pop
dec
lahf
mov
cmpb
dec
fdivrl
mov
xchg
mov
jno
xchg
data16
in
pop
xor
lcall
cmpb
aaa
or
mov
mov
fstl
in
cmc
inc
into
test
jne
mov
dec
adc
leave
and
repz
or
inc
xor
imul
jle,pn
aam
mov
cmp
inc
int3
aad
sub
mov
pop
sbbb
pop
and
jno
int3
push
jno
xchg
ja
mov
push
cld
pop
cli
imul
cmp
scas
xchg
mov
daa
lcall
jp
jne
mov
outsl
lock
popa
sbb
loope
mov
ss
sub
test
inc
repz
push
incb
or
pop
fisubrl
adc
mov
test
in
cmpsl
outsl
xorl
cmpb
shl
lahf
aam
movsb
cmp
adc
cmc
xchg
ljmp
xchg
lret
cltd
pop
aad
xchg
mov
pop
jno
push
inc
movsb
sbb
pop
iret
lret
ret
int3
push
xchg
cmpsl
sbb
faddl
cli
movsb
pop
movsl
icebp
mov
sti
lock
fildll
jp
pop
jno
jmp
push
mov
btc
mov
pop
add
bound
test
clc
wbinvd
push
scas
fisubrs
mov
popa
mov
mov
inc
sub
ret
rcl
sub
arpl
dec
mov
mov
movsl
xchg
js
daa
fidivl
and
int3
mov
pop
cmp
test
push
ret
jecxz
or
jnp
push
int
adcb
ret
inc
imul
mov
jle
in
stc
fnstcw
mov
fcomi
pop
std
lcall
bound
shlb
mov
cmpl
mov
add
outsl
in
or
in
push
xchg
mov
xchg
sub
sub
lea
std
mov
out
dec
in
scas
add
popf
lods
push
lock
xor
addr16
or
push
call
fidivrl
mov
and
pop
sbb
adc
cltd
and
inc
sti
gs
jg
adc
fnstenv
leave
dec
scas
outsl
or
jge
and
outsl
mov
iret
sub
fs
ss
insb
aad
sbb
adc
and
in
iret
dec
pop
pop
dec
nop
pusha
push
lods
mov
add
mov
xor
ja
mov
or
pop
fucomi
sub
mov
push
or
shrb
sub
addl
inc
push
push
out
into
fs
fnstcw
shll
fs
scas
xchg
sti
push
loope
sbb
sbb
and
add
jne
xchg
fcompl
es
jne
cs
lahf
dec
or
jne
outsl
mov
sbb
cwtl
outsl
sub
mov
xchg
xorl
pop
in
and
mov
loop
mov
xor
fdiv
insb
push
sub
mov
sbb
adc
jecxz
cmp
icebp
lods
mov
mov
mov
in
or
jp
mov
xlat
stos
neg
mov
mov
fsubrl
test
add
jns
inc
shll
pop
lods
pop
sub
push
inc
xor
jge
push
and
test
lods
xchg
jns
push
mov
pushf
mov
lahf
sbb
pop
xlat
jle
scas
mov
push
andb
in
fwait
push
mov
dec
fucom
and
mov
aas
push
into
inc
repz
push
ret
call
lret
ficoml
inc
adc
lea
sub
enter
xchg
jne
and
pusha
in
xor
push
xchg
test
mov
pop
sub
xor
lock
inc
jp
jns
cwtl
xchg
dec
fwait
rolb
jns
adc
mov
insb
push
add
cmpsl
jnp
push
mov
pusha
popa
lcall
xchg
dec
mov
sahf
test
xchg
int3
and
lgs
arpl
sbb
hlt
push
jb
dec
add
cmp
ficoms
stc
subb
xchg
xor
fisubrs
cltd
addr16
mov
add
adc
or
lods
inc
add
js
es
mull
imul
test
add
rorl
ss
in
sahf
mov
daa
call
push
mov
pusha
mov
clc
xchg
jae
les
insl
lods
movsb
in
xchg
xchg
scas
add
enter
ss
stos
fsubl
out
dec
xor
push
pop
mov
push
testl
int3
or
addr16
lods
mov
sub
xor
shlb
xchg
loop
xchg
push
push
daa
inc
dec
sti
orb
sub
xchg
mov
jle
clc
add
push
loop
cmpsb
mov
std
sbb
mov
dec
pop
and
lret
fdivrl
jmp
aam
sub
sub
sbb
pop
stos
jbe
icebp
mov
mov
pop
mov
outsb
cmc
sbb
imul
daa
mov
fdivrl
pop
cmp
sbb
mov
mov
dec
popf
mov
movb
outsb
test
shlb
arpl
xchg
je
outsl
xor
jp
je
stos
in
in
dec
shlb
jns
mov
xchg
or
addl
inc
cwtl
adc
xchg
mov
lock
sbb
rcr
lods
mov
imul
lret
mov
sbbl
adc
call
adc
add
xor
in
cld
fimuls
cmp
int3
stos
or
jno,pn
pand
int3
jne
sbb
pop
js
push
xor
loope
mov
mov
loopne,pn
mov
pop
mov
clc
inc
xor
rcll
insl
xor
adc
aam
cmp
dec
movsb
sahf
jne
gs
jge
imul
int
mov
ljmp
dec
jg
stos
movsl
loopne
mov
data16
add
sbb
in
fs
xor
lret
xchg
fnsave
mov
fcompl
inc
dec
gs
popf
stc
outsb
std
mov
xor
inc
dec
addl
aam
xor
push
negb
dec
inc
sub
push
fsubl
mov
es
bound
or
xor
lret
iret
fdivl
mov
gs
hlt
out
fisubs
xor
loop
scas
mov
test
in
mov
inc
imul
lds
pop
sbb
mov
outsb
jb
sti
scas
xor
daa
fdivs
rcll
dec
rorl
xor
pop
addr16
push
xchg
outsl
rorb
cmp
movsb
icebp
aaa
ret
add
inc
decb
xchg
in
add
fistl
outsl
loopne
int
movsl
sbb
pop
les
or
adc
mov
adc
int
inc
shll
fwait
inc
mov
lds
les
je
outsl
pusha
clc
xchg
mov
mov
push
out
add
scas
outsl
out
inc
out
rorl
mov
push
out
or
mov
push
sub
shlb
sub
cli
push
xor
mov
mov
lahf
mov
sub
pop
xchg
xchg
cmc
inc
adc
aaa
clc
cltd
or
xchg
and
fsubrl
scas
pop
orb
das
mov
into
pop
incb
lods
inc
outsb
aam
pop
lock
jb
aaa
mov
aam
lahf
shlb
lret
test
jb
mov
push
xchg
adc
mov
sahf
jecxz
mov
cmpl
sub
cmp
fsubrs
jns
cltd
rcl
jl
bound
dec
pop
fcompl
leave
push
mov
cmpsl
dec
xchg
inc
mov
push
stc
imul
and
mov
orb
xor
push
andl
jl
je
push
jge
jnp
and
insl
pusha
xor
lcall
ss
and
push
xor
cmp
or
adc
hlt
pop
xor
es
call
fsubl
aaa
mov
cmp
cmp
sbb
mov
in
test
repz
push
adc
xor
pop
adc
xchg
insb
and
es
xchg
insl
push
and
idiv
add
shrb
xchg
inc
xchg
sub
jecxz
cmp
stc
shrl
push
call
dec
cmpb
vpmacswd
mov
or
and
or
test
in
lahf
pop
sbb
and
imul
xchg
push
subb
push
push
mov
pop
dec
test
xor
out
bnd
jno
and
adc
push
inc
out
lods
jb
fnstcw
jnp
add
sahf
in
rcrl
andl
xchg
sub
fdivrp
jbe
xor
in
test
imull
pop
adc
push
mov
sub
enter
enter
sub
xor
orl
xlat
mov
sbb
mov
jg
mov
mov
or
daa
arpl
mov
add
adc
or
lock
outsl
cs
mov
stos
mov
mov
leave
and
inc
fsubl
adc
arpl
dec
mov
leave
dec
movsb
subl
cmc
fwait
in
je
sbb
mov
stos
std
sahf
fcompl
or
add
call
cmpsl
adc
adc
inc
mov
sarl
pop
jae
mov
sub
nop
enter
std
and
gs
push
cmp
fstps
paddsb
jno
add
roll
outsb
and
xor
arpl
out
lret
cmp
cmp
cli
push
dec
add
mov
and
xchg
pop
mov
repnz
push
adc
test
xor
clc
add
pop
sub
sub
push
dec
mov
cmp
fld
enter
or
pop
pop
mov
roll
push
mov
test
jbe
sub
loop
jecxz
loop
roll
test
mov
add
xchg
jb
mov
out
icebp
mov
shlb
push
arpl
push
mov
jmp
loopne
sbb
sbb
rol
hlt
scas
dec
and
test
negl
add
repnz
dec
xor
or
mov
rolb
add
jns
rcll
dec
adc
xchg
shlb
test
fbld
cltd
jne
xchg
mov
imul
cmovle
stos
adc
mov
popa
dec
js
or
aas
cwtl
add
mov
or
or
jnp
rorl
inc
ds
cmp
inc
das
dec
pop
xchg
jge
sub
sub
ja
lcall
movsb
add
fs
cmp
sub
push
pop
sbb
add
rcr
inc
mov
or
stos
push
movsl
mov
or
dec
lea
je
out
pop
fucom
mov
dec
cmp
jnp
aas
xchg
inc
xchg
fs
push
mov
push
mov
fisubrs
add
cmp
add
hlt
mov
or
cmp
mov
dec
inc
sub
int3
inc
lock
ss
scas
xor
mov
dec
and
push
scas
dec
mov
jnp
fs
push
or
into
mov
pop
in
push
sar
or
data16
mov
sub
adc
loop
push
fstpt
dec
jne
ss
repnz
adc
fsubrs
je
xor
pop
into
add
imul
out
cs
xchg
movsb
bound
repnz
cs
cmp
dec
jne
mov
add
mov
adc
int3
adcl
jne
imul
jbe
pop
sbb
xchg
sahf
lds
mov
cmp
jmp
cmp
iret
loop
cmp
mov
or
or
push
out
test
push
xchg
arpl
ds
aas
sbb
mov
outsb
repnz
fs
xchg
sbb
sbb
pushf
push
push
cmp
es
and
xchg
cltd
pushf
dec
stos
or
dec
call
insb
and
rcrl
cwtl
in
push
push
mov
add
mov
fsubr
ret
cmp
into
sbb
leave
mov
in
incb
test
cwtl
stos
jp
mov
xchg
dec
xor
pop
iret
dec
js
jl
fidivrs
xor
insb
mov
push
mov
push
jnp
roll
dec
lods
mov
dec
outsb
pushf
push
shl
mov
sub
adc
nop
pop
adc
data16
push
dec
lret
shl
mov
cmp
inc
inc
xor
xchg
push
inc
dec
call
mov
pop
mov
mov
cli
in
into
pop
jbe
jns
cmp
int3
rolb
in
scas
cmp
leave
xor
insl
mov
lods
dec
sti
cwtl
dec
xchg
pop
pushf
inc
std
and
ss
sbb
outsb
mov
test
sbbb
or
int
in
inc
incb
fwait
popw
jbe
test
xchg
add
mov
xor
inc
pop
in
iret
mov
les
shll
or
xor
xchg
ljmp
fimull
sbbb
bound
push
mov
hlt
shrl
inc
jbe
xorb
ja
fsts
mov
imul
adc
cmpsl
sbbl
pop
xchg
dec
xchg
inc
bound
out
hlt
pop
mov
dec
jns
adc
hlt
lret
in
dec
test
test
sub
mov
hlt
fiaddl
and
sub
dec
or
or
xchg
mov
add
adc
and
pop
test
lea
test
std
pushf
popf
scas
add
and
lret
pop
cmp
jo,pt
aas
mov
insl
mov
sub
xchg
cli
lret
dec
bound
popf
nop
xchg
iret
inc
jg
mov
jl
dec
or
mov
push
mov
scas
stos
aam
adc
fsubs
orl
xchg
orb
sbb
jae
gs
mov
push
in
jecxz
loopne
inc
rcl
dec
inc
dec
addr16
mov
pop
orl
mov
out
imull
sub
jl
jmp
adc
outsb
fidivrl
inc
add
xchg
mov
stos
cmp
aad
fmul
rcrb
je
mov
daa
in
es
adc
ficoms
ljmp
lods
call
popa
enter
sub
or
jmp
cltd
in
imull
je
mov
arpl
sub
dec
or
push
sbb
add
mov
out
insl
cli
aas
int
mov
and
pop
push
mov
cmp
outsb
cmpsl
dec
mov
sub
rcr
mov
push
rcrb
mov
das
push
mov
pushf
dec
pop
movsl
pop
jo
and
jle
aam
fnstsw
in
fwait
sub
imul
or
xor
bound
sub
les
scas
mov
loop
arpl
xor
xor
sub
outsl
push
popf
mov
lods
xor
sahf
push
pop
cld
and
call
or
outsl
cmp
pusha
fstl
jmp
mov
cld
loop
jp
aaa
or
cld
xchg
push
decl
call
iret
notb
stc
adc
jnp
popa
clc
add
fimull
dec
aad
scas
push
and
ficomps
je
mov
lods
stc
movsl
ficomps
shrb
jmp
test
adc
push
mov
or
bound
sub
nop
pushf
pop
add
addl
sub
lcall
ss
fiadds
insb
cli
data16
addr16
enter
ja
ja
out
addl
add
fbld
fwait
arpl
cmp
or
xor
fcompl
imul
test
jae
adc
xor
push
xchg
sub
xor
testl
ljmp
jno
mov
enter
fdivrs
jl
jne
add
and
mov
adc
push
daa
cltd
adc
mov
sbb
es
mov
xchg
inc
sbbb
cmc
add
ret
mov
sbb
cmp
xchg
scas
fs
xchg
std
lods
sbb
cli
lcall
call
fnstcw
pop
jle
add
insb
sbb
lock
add
cmp
iret
cmp
fsubrl
inc
aaa
jp
mov
sub
and
dec
xchg
mov
pop
cmp
add
or
in
pop
adc
sti
js
fiaddl
lea
lahf
loope
cld
cmpb
and
cwtl
lret
mov
lock
inc
sbb
sbb
inc
adc
test
and
sub
jo
rcrl
aam
or
dec
daa
mov
hlt
sub
or
xchg
mov
cpuid
mov
push
mov
out
pop
and
mov
sub
ja
imul
shlb
fidivl
aad
inc
push
dec
adc
inc
add
push
clc
popf
out
push
xchg
shl
push
clc
push
test
in
xor
mov
rcr
hlt
mov
cld
jmp
shrb
into
outsb
out
sbb
push
imul
les
push
test
lret
mov
into
sbb
movsl
in
int3
cmp
das
and
inc
test
inc
fs
ret
add
daa
addl
adc
adc
out
mov
push
inc
rol
xor
lret
xor
mov
sbb
cmp
out
adc
mov
in
sbb
jbe
aas
push
jno
fcmovb
mov
ja
push
pop
mov
in
jno
movsb
or
dec
mov
push
test
loopne
push
pop
cmpsb
int
testb
xor
sbb
aad
cmpsb
into
jl
shll
mov
or
sbb
fwait
rorb
addb
leave
inc
push
ret
test
mov
push
cmp
lods
enter
jae
je
movl
cli
push
inc
lret
or
test
sbbl
push
or
or
jne
adc
fstpl
adc
sub
aas
pop
stos
dec
jg
js
lea
jle
xor
andb
pop
roll
xor
and
lods
cmp
cli
call
xor
aad
mov
shrb
les
imul
imul
bound
adcl
or
sbb
jb
xchg
decb
pop
sbb
push
rolb
inc
aam
loopne
sub
cwtl
cmp
dec
lret
je
stc
clc
lret
push
or
je
pushf
mov
sub
jno
imul
lcall
sub
push
fstps
lods
and
xor
and
inc
lahf
cli
jmp
repz
lea
lea
ficoms
jae
pop
mov
xor
dec
sub
xchg
aaa
mov
push
push
xor
mov
fldt
xor
xor
out
dec
mov
test
fcmovnbe
xlat
push
and
ljmp
out
mov
or
addr16
jne
add
mov
out
pop
or
int3
mov
sbb
mov
xor
pop
pop
mov
mov
cmpsl
shrl
push
push
mov
fiaddl
mov
ljmp
in
out
mov
std
cmp
push
dec
test
int
jle
or
mov
push
jnp
hlt
out
in
add
stos
add
adc
addr16
cmpsl
mov
mov
das
nop
xor
adc
sub
testb
cmpsl
sub
pop
xor
jp
sbb
mov
lods
nop
bound
inc
xchg
mov
add
and
lds
push
je
cltd
in
dec
add
sahf
int3
jns
sti
adc
mov
fisubs
gs
lea
test
mov
and
inc
mov
inc
in
and
cltd
xchg
or
std
add
lock
mov
enter
dec
pop
pop
adc
inc
ret
fiadds
sub
loope
lock
jno
pop
add
pop
cmp
sub
shlb
data16
jmp
je
jle
jo
lods
pop
mov
dec
mov
pushf
sbb
in
sar
inc
push
or
popl
je
pop
popa
fdivrs
lcall
and
push
jb
clc
mov
push
add
pop
inc
adc
and
out
adc
sbb
or
add
in
outsb
and
sub
decb
dec
ds
mov
vpxor
sub
sbb
push
jge
loope
lret
push
mov
ja
ret
fsubrs
or
ret
add
and
and
std
mov
push
adc
mov
mov
mov
jecxz
movsl
jge
nop
jns
and
pop
xor
cmc
and
push
mov
cmp
daa
push
pop
push
int
bound
cmp
outsb
add
scas
in
mov
jmp
or
mov
sti
in
mov
cmp
or
lret
add
stos
jae
push
and
enter
sub
test
pop
inc
mov
mov
mov
cmp
notl
outsl
xor
ret
mov
pop
mov
test
dec
clc
ss
fmuls
leave
pop
test
jecxz
call
jecxz
loopne
rcrl
adc
cwtl
sub
and
cwtl
jg
fsubs
out
mov
dec
or
je
jecxz
icebp
stos
add
mov
add
enter
push
fs
pop
arpl
or
inc
scas
test
sbb
sbb
push
hlt
ljmp
pop
mov
xchg
jno
sbb
scas
hlt
test
loopne
sbb
fistps
cli
xor
jo
dec
negb
test
mov
ret
out
xchg
push
lahf
mov
outsl
out
aad
push
stc
cs
pop
add
nop
rol
bound
dec
push
shlb
fimuls
push
ja
xchg
cmp
imul
popa
jno
out
std
sub
sub
cmc
rcrl
ret
sahf
aam
or
pop
ja
inc
sub
cmp
arpl
xchg
and
dec
in
push
mov
xor
test
fcomip
xor
inc
jnp
stc
fdivs
jmp
stos
scas
xor
jb
inc
dec
xchg
jnp
sti
cmp
push
pop
popa
out
mov
roll
stc
jo
scas
insl
add
xor
xor
xchg
mov
nop
cli
imul
rorb
je
dec
fisubs
out
pop
dec
add
inc
push
xchg
call
stos
fisubl
stos
pop
sar
dec
jne
jl
loope
int
in
add
push
movups
mov
ja
roll
and
sub
decl
jmp
nop
stc
mov
pop
pop
push
rol
lret
sarb
insl
icebp
out
fldcw
jbe
call
shll
sbb
cmp
mov
sbb
lods
imul
outsl
inc
and
jns
sub
inc
mov
mov
faddl
into
mov
adc
mov
js
push
sbb
adc
rcll
sub
dec
push
in
jp
fwait
cld
cmp
adc
pop
inc
addr16
xchg
mov
mov
and
fmuls
xor
and
cmpsb
js
adc
in
sub
adc
jae
sub
push
mov
or
push
sbb
inc
push
adc
xor
out
xor
jne
sbb
std
sbb
insb
out
mov
pop
sub
pop
addr16
xchg
dec
nop
sbb
xchg
lahf
insb
shlb
or
jle
outsb
sbb
push
adc
test
mov
xor
cmp
cli
out
cmp
imul
mov
popf
dec
inc
mov
leave
rcr
jae
adc
ret
imul
xchg
mov
insb
xchg
pop
xchg
jno
sbb
frstor
push
shlb
push
cmp
lods
test
jne
jae
stos
ljmp
clc
and
enter
mov
mov
insl
test
dec
lods
pusha
xchg
or
cmp
fcoms
dec
pusha
sub
repz
pop
iret
or
or
mov
mov
arpl
pop
pop
cmpsb
cmp
ret
dec
adc
pop
testb
icebp
xor
cli
pop
fs
insb
fistpl
adcb
stc
addr16
xchg
lret
mov
pop
lahf
xchg
mov
rcrb
push
dec
lcall
pop
jge
sbb
xor
jecxz
repnz
pushf
inc
ds
mov
nop
pop
aaa
dec
mov
outsl
xchg
sub
lods
jo
repz
clc
cmc
lods
jmp
adc
and
lcall
lock
iret
xor
xchg
mov
cmpsb
xchg
ljmp
out
test
adc
push
cs
cmp
fs
sbb
outsb
pop
insl
xchg
jge
nop
xor
or
fisubl
inc
mov
idiv
in
inc
mul
lock
mov
mov
mov
mov
int3
std
jae
orl
push
mov
test
xor
push
and
in
out
inc
gs
sarb
dec
inc
mov
mov
enter
pop
out
adc
cmc
enter
loopne
mov
imul
clc
jno
sbb
inc
jg
or
xchg
push
imul
mov
cmp
inc
ds
stc
dec
xor
fucomp
fwait
mov
pop
mov
adc
xchg
shlb
ja
lahf
movsb
shlb
cmpsl
cwtl
fildll
pop
add
add
push
mov
pop
jecxz
mov
sahf
xchg
rorb
cmc
sbb
scas
sub
addb
loope
and
fwait
ret
rcl
scas
sbb
cmp
mov
or
mov
jecxz
cmp
loop
mov
xchg
ds
mov
test
push
jmp
das
nop
or
push
hlt
xchg
dec
push
adc
push
cmp
cmp
mov
rcrl
dec
jbe
adcb
mov
std
push
dec
add
popf
sbb
rcr
jno
mov
std
xchg
sub
push
mov
aam
or
sub
adc
arpl
insl
rolb
mov
iret
fwait
sbb
lods
lret
cli
inc
dec
lods
sub
cmpsb
jae
stos
insl
fnstenv
jmp
outsl
xchg
push
inc
mov
dec
lret
xchg
sub
xor
mov
pop
rcr
xchg
nop
mov
mov
push
faddl
cld
fwait
mov
rcrb
cmp
adcl
pop
shll
mov
push
mov
imulb
cwtl
adc
push
jp
cs
rcrb
outsl
mov
push
cmpsb
daa
aaa
iret
fmull
movsb
inc
xlat
inc
and
bound
mov
jle
xor
fsts
test
inc
cltd
das
pop
outsl
sbb
push
das
add
out
cmc
mov
or
popf
xchg
xchg
ss
gs
add
lret
push
sbb
mov
mov
sub
or
test
mov
xor
in
mov
dec
ror
aad
call
out
xor
pop
dec
pop
fs
xor
ror
cmp
mov
mov
insb
add
mov
sbbb
jns
xor
xchg
sub
cmp
fstl
mov
outsb
into
rorb
mul
sub
cmpb
cmc
xchg
xor
movsb
mov
inc
icebp
mov
xlat
inc
popa
pop
xchg
fldt
sahf
out
jnp
or
sarb
push
or
shrb
xor
jo
mov
sub
movsb
nop
jns
sbb
lods
adc
add
fimuls
pusha
pop
in
push
pop
rol
hlt
loopne
dec
adc
lods
stos
fwait
call
push
or
popl
lahf
lock
sarb
xor
and
inc
dec
xor
rolb
int3
lcall
mov
inc
out
xor
dec
cmp
adc
jns
add
push
js
push
cmp
mov
mov
int
sub
xchg
andl
outsb
enter
stos
inc
ss
bound
cmp
xor
sub
xchg
pop
ret
shll
sbb
stos
cmpsl
cmc
xchg
push
dec
sub
iret
rcl
pushf
mov
add
cld
jno
iret
loope
push
pop
sub
xor
fnsave
and
insl
stos
ret
insl
xor
xorl
mov
imul
cld
push
and
mov
leave
scas
arpl
fisttpl
bound
xchg
loopne
xor
adc
adc
xor
enter
jle
xor
ja
shlb
out
outsb
adc
sub
insb
rcrb
adc
orb
add
lret
std
mov
sub
dec
or
pop
pop
mov
sub
sahf
daa
push
mov
xchg
popa
adc
xorl
adc
and
or
div
in
mov
sub
call
xor
pop
or
mov
nop
sbb
pop
enter
arpl
fildl
cmc
pop
gs
bound
push
cwtl
jno
xor
and
inc
and
cmpsb
sub
sub
jae
stos
and
xor
jecxz
dec
in
and
mov
xchg
sbb
sbb
mov
subl
fistpll
dec
in
or
out
dec
jp
mov
or
add
and
out
insb
sbb
mov
push
dec
sbb
popf
fidivrs
mov
jmp
jne
pop
ret
ja
sbb
adc
jns
fisubrl
add
dec
cmc
add
push
or
aam
cmp
jge
movsb
jae
cmp
push
jg
cli
dec
adc
fsubrs
sub
push
mov
jne
imul
pop
mov
ss
stos
push
sti
xchg
mov
rcr
dec
push
lahf
jb
mov
ficoms
test
fisttpll
mov
subb
int
or
xor
lahf
mov
fmul
insb
test
and
aad
add
mov
out
cwtl
cmpsb
pusha
rorb
int
lahf
test
test
ds
inc
pop
out
je
lds
jmp
in
hlt
jge
push
pop
sti
out
pop
hlt
lds
cmc
mov
nop
sub
adc
mov
mov
popa
das
aam
mov
scas
mov
add
xchg
adc
inc
ret
bound
mov
hlt
mov
fwait
in
dec
sbb
and
int
xchg
mov
mov
or
sti
cmp
jg
mov
mov
sub
mov
cmp
xlat
in
push
in
scas
test
adc
nop
adc
daa
testb
push
cld
subl
push
test
int
xchg
push
test
test
jnp
mov
js
int3
pop
insb
add
es
popa
xor
xor
imul
fimull
xor
pop
sub
cmpb
push
rcr
lret
inc
jbe
insb
rorb
inc
mov
icebp
icebp
int
inc
push
arpl
cmp
dec
fiadds
pop
adc
pop
adc
jae
mov
pop
lea
sti
mov
mov
pop
push
mov
xchg
jge
pushl
aas
into
dec
sub
sub
fldenv
mov
cmp
movb
add
adc
insb
cmpsb
lds
adc
stc
pop
into
int3
mov
in
rcr
je
and
jmp
scas
movsl
pushf
pushf
pop
ret
incl
push
xor
cli
adc
outsl
ja
fs
or
mov
mov
mov
dec
dec
mov
dec
dec
adc
lods
dec
mov
daa
orw
out
mov
in
jns
hlt
mov
mov
xchg
mov
xor
call
ss
lock
push
cmpl
fnstcw
pusha
loope
es
fwait
push
cmp
test
fxch
das
test
lods
in
cmp
push
mov
xor
jbe
jge
mov
dec
imul
jl
shrl
add
in
pop
popa
mulb
dec
fisttps
es
mov
int
icebp
lods
mov
mov
rorl
inc
inc
or
les
aad
mov
dec
jge
pop
adc
sub
and
dec
lahf
ret
fxtract
mov
out
pop
adc
stc
mov
out
clc
jae
xchg
lock
test
les
pop
ja
in
pop
fmuls
push
xor
pop
in
stos
ja
add
xlat
pop
jne
adc
mov
pop
adc
insl
or
xor
rcrl
inc
or
sub
push
push
or
inc
negb
push
and
xchg
cld
inc
mov
jmp
test
out
aas
mov
arpl
xorl
gs
fs
mov
nop
int3
xor
inc
and
xchg
adc
mov
in
push
leave
push
push
clc
divl
inc
data16
and
xor
pop
pop
pop
xchg
pushf
cs
iret
icebp
sbb
pop
lahf
fs
mov
jae
lods
movsl
dec
out
pop
mov
mov
out
push
xchg
mov
sarl
shl
inc
shlb
insb
and
mov
jo
xchg
or
push
or
jbe
das
cmp
cmc
cmp
shll
push
negl
mov
jne
clc
sbb
out
mov
push
push
in
imul
xchg
adc
or
je
sbbl
mov
fadds
loopne
mov
sarb
out
sbb
jnp
ljmp
push
outsl
lret
pop
sub
popf
test
std
subl
sbb
cmp
and
adc
mov
sub
mov
adc
adc
mov
cmp
inc
sub
dec
arpl
jecxz
jecxz
mov
incb
push
ret
push
bound
mov
pop
mov
dec
lods
inc
add
sbb
xchg
ljmp
mov
test
inc
shrl
sub
dec
add
dec
call
lods
cmp
xchg
add
pop
subl
pop
mov
sub
push
inc
stos
mov
jmp
xchg
cwtl
jecxz
out
jecxz
inc
and
jp
adc
inc
shr
jb
scas
cwtl
lods
std
and
test
sti
outsb
fwait
test
adc
adc
shrb
imul
scas
add
mov
sbb
adc
cmc
std
and
inc
xor
test
pushf
jno
jb
push
cmp
cmp
rcl
into
jns
pushf
mov
push
or
sahf
xchg
mov
aad
fsts
in
add
sbb
movsb
lods
lods
jbe
cmp
dec
pop
lods
int3
xchg
in
mov
cmp
dec
and
adc
les
inc
mov
bound
push
xor
ljmp
sbb
sbb
add
add
arpl
enter
jns
push
jmp
aam
idivl
cli
adc
inc
xor
ficoms
xor
fiadds
fbld
mov
adc
cmpsb
xor
icebp
popf
xchg
adc
loop
mov
scas
xchg
scas
data16
sar
cmp
in
cmp
xor
add
mov
inc
jle
outsb
ror
sub
fnstenv
aam
inc
mov
mov
jmp
inc
jo
sbb
mov
inc
sub
mov
and
testl
mov
sti
test
test
sbb
xchg
adc
inc
cmp
test
movsl
or
push
mov
movq
jge
daa
xchg
ljmp
es
cmp
cmpl
ret
out
mov
comiss
lods
inc
aad
xor
mov
inc
jp
dec
fiaddl
and
in
arpl
jmp
xor
into
add
outsl
outsb
aad
add
mov
mov
and
inc
pop
push
mov
xlat
mov
mov
and
shrb
cmpsb
pop
sub
aad
sub
or
aad
xchg
sub
outsb
cmpsb
add
movsl
mov
frstor
pop
dec
outsl
adc
daa
mov
dec
push
mov
and
adc
ljmp
das
sbb
cli
jl
leave
sbb
inc
sub
scas
xor
sbb
jnp
and
mov
cmp
mov
dec
or
sbb
pushf
add
adc
jle
jbe
xchg
test
or
cmpsl
jmp
adc
pushf
lret
sub
add
stos
addb
outsb
out
sbb
mov
or
jle
mov
fdivs
ret
and
leave
and
jge
cmpsb
aas
leave
ljmp
mov
cmp
in
out
mov
movsb
sahf
je
insb
cmp
dec
repnz
insl
idivb
sub
into
pop
inc
sub
push
sbb
hlt
rcrl
js
mov
gs
jg
xor
mov
mov
repz
bound
arpl
enter
pop
mov
mov
jnp
mov
lock
mov
jno
sahf
subb
adc
jnp
cmp
lods
sub
push
ss
pop
ret
pop
roll
es
fldt
xor
dec
pop
rolb
outsb
lods
shrl
push
cmp
js
cmpsl
mov
add
push
or
nop
rcrl
dec
icebp
fcoml
mov
les
cltd
fucom
pop
aas
faddl
aam
and
and
nop
adc
mov
push
lock
movsb
xor
xchg
imul
cmp
push
push
jmp
inc
mov
jmp
sub
in
adc
lahf
dec
mov
sti
sub
dec
icebp
divb
mov
or
scas
repnz
dec
cmp
hlt
jp
xchg
ja
popa
mov
imul
std
adc
sbb
cmc
sub
mov
out
lods
push
lods
lcall
push
mov
xor
push
mov
jmp
sub
in
vfmadd213ss
push
imul
loopne
inc
and
lea
jo
jle
pop
call
cmpsl
call
imul
les
test
sbb
xchg
xchg
lret
pushf
popa
dec
je
imul
ljmp
gs
loope
arpl
addr16
mov
mov
daa
loopne
xor
and
xor
ds
jecxz
fcoml
jmp
repz
jbe
jnp
xor
cmp
jecxz
mov
ret
popf
or
mov
mov
stos
fstl
das
stc
jl
dec
pop
xor
test
xor
or
outsb
rcrl
orb
notb
bound
outsb
xor
sub
sbb
inc
icebp
pop
imul
shrl
shrb
jb
pop
gs
out
in
adc
push
push
faddl
adc
adc
inc
push
adc
push
andl
xor
cs
and
and
xchg
mov
sub
jp
gs
cmp
stos
dec
clc
insl
es
lret
loop
cmp
outsb
pusha
lock
mov
push
jg
popa
lds
into
pop
or
clc
cmpsl
xchg
in
mov
cmp
fldcw
inc
mov
test
ret
adc
ja
pushf
sbb
mov
cltd
loope
jge
mov
std
loope
inc
ds
fidivl
add
or
fstl
cmp
lahf
and
in
lods
dec
xor
mov
mov
cmc
mov
pop
push
xor
mov
es
dec
scas
lret
add
ret
rcrb
imul
xor
loop
imul
movsl
idivl
xor
inc
out
es
push
sub
jns
inc
sub
mov
shr
stos
aad
dec
les
sub
mov
out
clc
cmp
mov
ret
add
mov
push
sub
cmp
or
dec
inc
pop
sub
mov
sbb
mov
imul
mov
mov
test
inc
jnp
pushf
cltd
iret
adc
daa
rcrb
popf
pop
sbb
fimuls
aad
cs
mov
mov
jns
dec
jle
enter
je
and
std
mov
push
enter
hlt
popa
mov
out
sti
jge
sar
jl
inc
mov
jmp
rcrb
jno
aas
inc
jmp
mov
aad
int3
stos
inc
dec
nop
mov
mov
cs
dec
mov
jge
push
cmp
iret
sbb
mov
shll
test
aaa
loope
pop
adc
mov
add
adc
pop
and
push
dec
jns
call
mov
xor
jns
push
js
call
cwtl
inc
jmp
ret
adc
lock
fists
out
ss
mov
popa
inc
hlt
popa
mov
ret
andl
sub
jne
scas
mov
into
inc
push
popf
push
cli
test
cmc
mov
inc
mov
dec
nop
fmull
shlb
mov
rcll
notl
icebp
jmp
mov
lcall
popa
cmp
ficoms
xchg
xchg
push
in
fdivr
dec
and
bound
or
scas
push
frstor
lcall
fwait
repnz
xlat
dec
pop
push
mov
add
add
call
jp
sub
dec
shll
dec
insb
ret
adc
lcall
cmp
xor
into
aam
and
mov
fbstp
fnstenv
ret
fwait
adc
inc
in
je
cmpsl
nop
jb
mov
mov
popf
lcall
mov
scas
xor
and
cmc
sub
inc
xor
mov
or
pop
clc
or
ffreep
mov
popf
sub
push
addr16
nop
push
lahf
dec
stc
mov
pop
addr16
add
mov
scas
add
clc
sbb
push
sbb
pop
cmovb
push
pop
pop
xchg
xor
adc
je
pop
in
scas
mov
add
adc
push
fisubrl
mov
dec
scas
push
sbb
insb
or
fnstcw
cmp
stos
add
mov
or
cmp
push
prefetchw
dec
sbb
bound
add
pop
mov
add
loop
insb
rolb
pop
test
sbb
mov
in
pusha
and
xor
fidivrl
or
add
pushf
fiaddl
sbb
test
lret
arpl
sbb
mov
jbe
call
xchg
mov
imul
pushf
mov
inc
psadbw
mov
inc
fnstcw
xchg
in
pop
cmpsl
mov
push
xorl
inc
int3
movsl
inc
push
add
sahf
outsl
jecxz
in
push
or
cld
inc
rcrl
mov
cmp
and
mov
mov
cli
mov
outsl
push
cltd
xor
movsl
ds
push
rcr
xchg
imul
xchg
mov
add
push
sub
xchg
jecxz
movsl
dec
mov
and
int
movsl
pop
imul
js
jle
ljmp
cld
push
stos
aaa
jmp
jl
out
sub
scas
dec
sub
scas
js
sahf
mov
push
mov
xchg
aaa
int
in
ss
fsubrp
pop
inc
pop
es
hlt
divl
pop
push
lods
dec
xchg
sahf
sub
inc
xchg
xor
out
outsb
addr16
mov
push
add
sub
push
dec
mov
add
add
mov
pop
pop
cwtl
stos
pop
ret
mov
sbb
subl
pop
cmc
adcb
arpl
sbb
inc
out
sub
and
inc
ds
movsl
iret
pop
lahf
dec
pop
or
jle
mov
adc
jo
repnz
jmp
iret
pushf
sbb
out
aam
jp
lods
sub
scas
push
pop
cmp
lock
mov
mov
adc
push
aaa
mov
adc
xor
add
jno
adc
rolb
adc
inc
add
add
adc
and
loope
xchg
adc
sbb
sbb
lods
outsl
movsl
sub
cmpsl
sbb
ret
imul
cltd
shl
je
mov
xchg
out
jbe
das
icebp
icebp
fwait
xlat
adc
jmp
xor
dec
cmp
mov
sub
mov
ja
xor
mov
pop
sbb
mov
xchg
inc
or
out
xchg
pop
mov
imul
daa
nop
out
lods
aad
insb
cmp
out
mov
jb
mov
repnz
sahf
adc
jmp
mul
hlt
cmp
repz
or
push
push
cmpb
push
int3
cli
pop
gs
test
dec
jmp
cmp
jb
mov
stos
mov
push
push
pop
lea
pop
fstpt
or
inc
mov
jno
lret
movsb
mov
jl
enter
fstl
stos
jecxz
icebp
mov
mov
cli
and
or
mov
jge
stc
push
loopne
mov
cmp
daa
test
das
bound
push
stc
sbb
int3
in
or
sub
cli
jo
or
sbb
jne
pop
and
divb
mov
aam
ret
jno
pusha
enter
inc
rcrl
les
mov
sub
pushf
sub
mov
pushf
arpl
cmp
xor
push
loop
aam
ret
push
sbb
pop
xchg
sti
ljmp
add
jp
sahf
stos
sbb
inc
test
cmpl
cmc
sub
aad
add
ret
jmp
inc
mov
bound
xchg
out
mov
and
mov
xor
pop
into
sub
sub
sti
outsb
xchg
mov
shrb
dec
push
call
rolb
adc
sti
push
push
inc
inc
xor
mov
lahf
mov
pusha
mov
mov
inc
jno
jmp
sub
jns
or
fiaddl
push
lcall
and
repnz
sub
lods
jae
mov
fmull
lcall
push
mov
cmpsb
pop
push
addr16
push
sbb
xor
push
or
fists
clc
or
add
xchg
and
rolb
xor
nop
xchg
push
push
test
sbb
cwtl
pop
loopne
mov
scas
lahf
rolb
sbbl
mov
add
das
sub
loopne
cltd
out
sub
pop
cmpsb
fdivs
popf
fcompp
les
ss
pop
jb
adc
and
mov
in
add
dec
inc
aaa
pop
mov
orb
shll
xchg
orb
or
outsb
lods
cmp
add
inc
cmp
mov
cmpsb
bnd
adc
ds
test
mov
aam
inc
lods
shll
push
out
fstpt
fwait
cmp
les
dec
xor
add
out
pushf
mov
fsubr
fiaddl
lea
cwtl
lods
jo
adc
jo
mov
das
xchg
mov
cmp
ficompl
mov
test
ret
inc
or
insl
test
xchg
ret
dec
or
pop
xchg
rol
movsl
pop
push
roll
data16
imul
in
stos
jl
filds
pop
pop
fidivrl
loope
sbb
push
mov
mov
cmp
mov
shlb
xor
out
pushf
insb
loope
xor
pop
mov
pushf
sub
fnstsw
aad
popf
dec
fists
das
shlb
enter
fiadds
mov
leave
sarb
cltd
nop
mov
lcall
fmuls
cmp
pop
fwait
aaa
sti
mov
fs
fsubrs
ss
imul
mov
xor
jb
inc
es
cltd
data16
cmc
insl
jp
jge
scas
stos
sub
inc
sbb
xchg
movsb
in
lcall
mov
jb
imul
dec
cmc
insb
cld
fldt
inc
mov
dec
iret
movsl
fldl
mov
jmp
mov
push
xchg
push
nop
movhps
sbb
stos
xor
jmp
sbb
cmpsl
push
mov
popf
orb
xor
push
stos
fwait
push
xor
adc
test
pusha
add
lcall
add
inc
mov
data16
mov
and
pop
stc
mov
jg
rcrb
jp
dec
sub
test
sbb
fisubrl
jb
pop
jg
shrl
xlat
gs
xor
xchg
sti
sub
int
xchg
push
scas
ja
mov
jns
test
pop
dec
cmpsb
test
mov
popf
mov
lock
fs
push
mov
enter
xor
gs
fs
rorl
popa
sub
cmc
insb
arpl
ss
jno
scas
fdivrs
sub
mov
jmp
xchg
fdivl
movsl
int3
outsb
or
insl
out
or
cli
push
mov
insb
aad
cmp
sub
insl
jmp
int
je
or
popa
jo
add
outsb
hlt
jg
inc
ret
pusha
insl
xchg
call
mov
aam
rol
dec
mov
addr16
out
adc
pop
jae
mov
push
inc
or
inc
outsb
mov
ds
mov
fstp
gs
and
pop
push
sahf
int3
in
stos
xchg
inc
sbbl
sub
cmpsl
clc
dec
xor
mov
adc
out
and
mov
loopne
jl
push
xor
dec
out
sbb
dec
jne
and
stos
data16
push
sbb
lods
daa
orb
insb
shlb
loope
cmp
jnp
repz
pop
test
mov
cli
jmpw
xchg
pop
jmp
into
test
pop
sbb
adc
aas
es
ja
adc
add
lock
mov
pop
xor
loop
pusha
mov
pop
mov
jp
inc
add
out
dec
push
lcall
xor
cwtl
cmp
mov
push
mov
xor
shr
or
adc
dec
mov
pushf
lea
adc
paddd
and
adc
add
testb
sub
dec
or
outsb
pop
pop
in
call
lahf
mov
add
cmp
or
les
andb
sbb
mov
jne
fisttps
push
lret
jnp
xchg
loopne
inc
std
mov
mov
push
mov
daa
xlat
aam
aas
mov
inc
je
dec
and
into
dec
and
ljmp
fisubs
jae
mov
cltd
es
es
pushf
push
pop
ljmp
lock
xor
dec
sub
push
in
pop
push
imul
push
ljmp
in
jg
dec
xchg
test
int3
stos
decb
int3
gs
or
pop
pop
dec
int3
push
aad
mov
nop
and
add
movsl
into
out
repnz
adc
push
cmp
nop
mov
test
outsb
aaa
mov
adc
xchg
shr
inc
mov
data16
pop
icebp
jg
fidivl
imul
dec
fildll
mov
mov
outsl
filds
push
fists
lds
es
push
lret
arpl
lret
fcom
adc
aam
std
ds
mov
add
xor
testl
push
fistps
in
repz
push
adc
sbb
orb
daa
sbb
add
or
sub
paddusb
jb
cmp
loopne
and
jns
jb
cmp
stos
outsl
out
in
je
push
cmpsb
sahf
adc
subb
dec
adc
add
cli
fsts
arpl
sbb
sbb
sub
in
jl
adc
adc
adc
mov
jecxz
cmp
cmc
push
xchg
sbb
mov
adc
fstpt
inc
mov
lret
inc
sbb
xor
mov
jp
push
iret
dec
int3
popf
testl
sbb
push
mov
or
pusha
insl
push
lcall
push
jnp
or
mov
inc
aad
sub
fcmovb
leave
or
int3
mov
enter
clc
xor
test
data16
nop
add
ret
daa
and
mov
xchg
mov
jecxz
pop
scas
dec
ficoml
push
decb
pop
dec
fwait
call
pop
fnstenv
aad
sub
or
andl
popf
mov
subb
out
add
lea
lock
or
xchg
push
in
sub
cmp
imul
je
jge
jp
sbb
lahf
and
adc
mov
in
pop
in
mov
sbb
inc
icebp
inc
jo
pop
mov
cmp
sbb
jbe
movsl
rcll
dec
aaa
mov
add
pushf
mov
repnz
dec
in
xchg
lcall
or
mov
lock
inc
and
sti
sti
cmp
ja
xchg
pop
fldcw
jmp
ljmp
out
rorb
sti
jecxz
mov
pop
es
pop
cs
js
pusha
xchg
sub
lahf
add
xor
cmp
jge
ficoms
pushf
jno
das
loop
xor
int3
dec
je
fsubr
pop
sbb
adc
out
int3
pushf
mov
sub
jbe
int
xchg
fstpt
ret
in
and
sbb
ret
js
divl
loope
xchg
subb
movsl
pushf
pusha
mov
push
gs
pop
push
cltd
mov
inc
clc
cmpb
aas
cmp
mov
mov
inc
into
jb
pop
shrl
inc
jno
jge
sbb
and
and
lods
xchg
push
inc
sub
push
stos
loop
jmp
in
ja
push
popf
mov
inc
pop
out
and
sub
nop
int
ret
enter
imul
push
scas
les
imul
or
orb
push
jp
das
or
loopne
push
jp
cmc
sbb
or
lds
call
shrb
xlat
shl
hlt
push
push
in
movsb
dec
ja
dec
sbb
in
adc
mov
std
inc
add
cmpsb
lea
int3
sbb
arpl
cmp
push
dec
or
add
decl
lds
pop
aas
xchg
fsubs
xchg
fiadds
cli
sbb
mov
jl
lcall
fldcw
inc
push
daa
sbb
int
adc
mov
push
add
pop
dec
xchg
pop
add
jno
jmp
pop
mov
sub
mov
roll
jge
movsb
cmp
inc
and
push
cwtl
daa
push
xor
lods
jmp
insb
or
xlat
ljmp
xchg
push
mov
pop
and
cmpsb
into
roll
pop
mov
mov
mov
arpl
ds
fpatan
sub
nop
pop
jno
push
cli
jp
sub
push
sub
add
jns
ss
cmc
push
jo
mov
push
in
in
sbb
cmp
cs
mov
or
dec
mov
push
imul
aam
in
arpl
icebp
cmp
ljmp
push
jle
dec
lcall
or
mov
adc
xlat
insb
or
pop
add
movsl
shrb
stos
or
inc
xchg
xlat
enter
aaa
sub
pop
je
pop
lret
mov
pusha
jae
cmp
pop
jae,pt
mov
in
adc
out
lea
push
mov
mov
dec
add
dec
ss
xor
mov
ret
mov
mov
add
mov
dec
xchg
xchg
insb
incl
in
xchg
push
mov
xchg
inc
adc
in
mov
les
out
sub
push
cmp
scas
adc
cmpsl
stos
jo
jnp
std
repnz
lods
mov
inc
loopne
and
push
and
loop
out
aad
orl
jge
adc
mov
sbb
lcall
push
lcall
mov
inc
call
fmul
js
mov
mov
push
mov
fisubs
push
aaa
mov
aam
rolb
nop
or
push
scas
outsl
mov
test
cmc
lods
fwait
dec
push
fsubrs
mov
or
add
fnstenv
shr
rorl
es
pop
mov
sub
pop
in
addr16
jae
and
pop
repnz
cmp
xchg
fs
adc
sbb
dec
add
push
in
jg
shlb
sbb
adc
pusha
js
repnz
jo
mov
out
or
hlt
push
pop
and
cmpsb
hlt
xchg
ds
sbb
test
hlt
jge
rcrb
cld
sahf
cmp
mov
js
pop
sahf
pop
jae
fxch
fdivrs
cmp
add
shrl
mov
lret
sbb
popf
scas
shlb
jmp
jo
or
sahf
cwtl
mov
jp
xchg
push
out
sbb
out
push
mov
jle
add
cmp
dec
sbb
jg
loop
and
icebp
jge
cltd
xchg
adcl
add
pop
inc
dec
mov
and
mov
jle
inc
push
and
and
lcall
scas
ret
sbb
std
adc
jb
and
mov
insb
push
jle
repz
inc
mov
pusha
xlat
cmpsb
inc
in
jo
ret
out
inc
jle
clc
decl
and
pop
jno
aam
stos
fldenv
sub
jo
pop
mov
ja
call
outsb
jnp
mov
pop
not
jae
dec
jg
addl
lret
jnp
ljmp
lds
stos
mov
iret
xlat
cld
dec
rolb
cmp
xchg
xchg
mov
loop
fdivrl
sbb
lds
fucomi
ret
ja
in
mov
mov
js
in
add
imul
mov
inc
in
dec
adc
stos
out
mov
ja
cwtl
xchg
pop
jae
mov
repnz
fstpt
out
xlat
cmpsl
adc
ljmp
aas
pop
xchg
pop
add
cmp
mov
jle
dec
sub
add
fistpl
adc
test
data16
sbb
push
ja
outsl
cwtl
mov
inc
mov
dec
les
mov
mov
lods
mov
jge
lahf
cmp
cltd
lret
push
out
or
movsb
and
sarb
ret
pop
push
or
in
pop
adc
pop
sar
sti
stos
pop
add
sbb
dec
outsl
adc
push
test
or
push
dec
mov
jns
or
idiv
mov
pop
lcall
fcmovne
mov
add
aaa
aaa
lea
repz
xchg
aas
add
int3
iret
mov
mov
test
pop
jg
dec
jl
mov
jge
push
call
lods
and
imul
sub
je
sahf
and
mov
push
fbstp
mov
stos
cmp
popf
loopne
repz
and
or
or
lea
out
xchg
test
dec
adcl
push
inc
mul
mov
sub
jmp
push
sar
cld
sbb
inc
mov
push
rorb
aam
cmpsl
jae
lret
popf
ret
xlat
test
inc
fdivrl
insl
sahf
jge
xor
jbe
movsl
sbb
push
push
jp
push
icebp
aas
enter
push
jmp
pop
in
insb
subl
iret
mov
sub
pop
enter
mov
adc
fwait
insb
jle
ret
and
or
mov
es
mov
cmp
xchg
and
fildll
inc
jmp
sbb
cmp
scas
and
bound
sub
adc
mov
dec
and
stos
ror
jge
lahf
jge
adc
pop
es
adcb
ret
dec
mov
mov
adc
mov
fbstp
sub
add
fdivs
sub
xchg
jg
mov
into
loop
add
jb
enter
popf
loopne
mov
mov
gs
jmp
popf
pop
pop
push
adc
andl
mov
sub
dec
xchg
pop
inc
pop
push
lret
lods
xor
mov
jb
in
add
mov
dec
icebp
faddl
jo
mov
mov
adc
pop
stos
push
or
data16
jecxz
mov
fstpt
push
mov
sbb
jecxz
mov
in
scas
lcall
test
fsts
or
fidivl
rcrb
movsl
pop
mov
mov
push
rorb
dec
ljmp
pop
jle
xchg
out
out
sub
push
es
mov
mov
xchg
pop
and
and
gs
cmp
jns
shll
loope
stos
jl
sub
loopne
jg
jecxz
out
out
mov
mov
out
push
fs
out
aad
fnstsw
rclb
mov
into
mov
shlb
sub
adc
bound
test
sub
push
enter
mov
dec
ja
aas
cmpb
pop
lret
jp
cltd
ljmp
ret
or
xor
movl
dec
xchg
in
and
mov
imul
mov
lods
cmpsl
sub
dec
scas
rolb
mov
adc
cmp
or
pop
rcl
xor
mov
jecxz
cltd
addr16
mov
fwait
ret
das
mov
arpl
push
jp
xor
push
add
daa
mov
mov
jbe
mov
fistl
mov
jp
lea
or
and
dec
xor
cmp
pop
out
inc
ljmp
dec
lea
or
push
jle
jbe
outsl
jns
xchg
inc
adc
in
pop
xchg
xchg
roll
popf
std
mov
pop
mov
push
lods
out
fistpll
jnp
inc
push
mov
cs
ret
lret
adc
cli
in
sub
imul
sbb
cwtl
ja
push
dec
cmp
cs
fucom
inc
push
aaa
stos
lret
aas
and
jle
pusha
push
cmp
sbb
mov
and
push
imul
les
or
fdivrs
mov
adc
pop
xchg
faddl
mov
jecxz
and
sub
adc
lods
and
inc
mov
lds
xchg
mov
mov
jle
pop
pop
push
xchg
stos
sti
jo
jns
cltd
stc
cli
sarl
bound
fdivrs
out
rcrb
jno
sbb
jg
and
out
mov
mov
inc
rorl
mov
xchg
pop
xchg
adc
lods
mov
fisubrl
xchg
in
dec
and
mov
ds
mov
dec
shlb
mov
mov
bound
push
push
xchg
mov
test
stos
mov
mov
push
and
fdivrp
xor
inc
pushf
sbb
test
shl
and
movsl
lret
jg
inc
push
test
xchg
cmp
push
scas
cmc
mov
xchg
cltd
cltd
das
out
ss
rorb
and
loop
clc
js
sbb
ret
and
jno
or
icebp
test
inc
fnstenv
test
js
pop
add
cmp
addr16
xchg
pushf
or
mov
or
and
cli
pushf
jo
dec
push
adc
adc
cmp
push
adc
mov
iret
insb
cmp
in
mov
adc
mov
jecxz
xchg
movsb
mov
scas
pop
fistpll
enter
imul
cmp
hlt
dec
adc
data16
mov
xlat
int
cmp
mov
jnp
sbb
stc
sbb
mov
mov
mov
dec
cmpsb
sbb
inc
loopne
sahf
int3
pop
cmp
jae
fisubrl
and
xorl
addr16
mov
ror
js
and
dec
sbb
mov
push
daa
addl
int3
inc
pop
outsb
mov
insl
nop
loope
les
cmp
push
push
andl
cs
test
jbe
inc
repnz
rol
pop
jbe
pop
ret
add
aaa
mov
xlat
in
add
inc
dec
adc
shrb
imul
popa
test
jle
pop
mov
mov
push
push
push
stos
cld
mov
jne
mov
jmp
les
mov
nop
and
pop
jmp
sti
lods
mov
lds
cwtl
pusha
call
sarb
xor
dec
stos
fs
imulb
inc
imul
and
jle
test
xor
adcb
adc
out
inc
dec
ljmp
test
lahf
mov
inc
mov
lea
jg
in
into
fadd
loop
in
jns
pop
mov
jmp
stc
js
mov
cmp
or
mov
jno
fiadds
dec
test
gs
ret
cltd
aam
nop
mov
xor
ljmp
inc
outsl
pop
les
fistpll
jae
jns
out
shr
mov
jg
ret
test
mov
out
dec
and
icebp
lds
sub
xor
mov
ljmp
push
test
push
outsl
inc
or
das
mov
movsl
cltd
stos
lret
mov
and
arpl
cmc
test
div
and
arpl
iret
pushf
or
pop
in
mov
hlt
subb
and
cs
xchg
outsl
loopne
push
sbb
xor
lods
std
adcl
jno
push
repz
sbb
aaa
mov
jns
stos
mov
lahf
and
rcl
add
push
test
cmp
ret
or
rcrl
outsl
sarb
xchg
mov
inc
jg
mov
mov
roll
bound
sub
movsb
mov
mov
fnsave
into
mov
pop
jo
cmp
leave
pop
test
jg
cmpsl
xchg
jg
jge
cmp
adc
xor
lret
push
adc
enter
mov
movsl
jmp
stos
cmp
fists
sahf
hlt
and
scas
cmp
iret
hlt
lock
bound
lret
push
ds
fnsave
pop
sbb
push
sti
icebp
popa
fldenv
sbbb
jne
std
pop
in
ds
int3
stos
lods
aaa
ss
xor
dec
inc
frndint
leave
and
xchg
inc
fiaddl
mov
push
xchg
fistps
push
jae
stos
mov
std
adc
pop
aaa
ret
inc
das
pop
jge
cmpsl
cmp
ret
mov
jg
or
cmc
mov
and
inc
or
add
int3
adc
push
rcl
cmp
mov
stos
stc
hlt
xchg
iret
add
cmp
adc
push
test
push
jl
fcompl
mov
sti
aas
push
xchg
jns
dec
fcompl
int
fs
mov
jns
and
aas
jno
push
sub
in
call
sahf
pop
mov
push
xchg
fadds
ljmp
xchg
and
xchg
xchg
sti
jnp
push
insb
add
in
addr16
pop
enter
pop
and
sub
inc
scas
cmp
in
mov
sub
std
xor
stc
loopne
push
loopne
loop
imul
xchg
scas
dec
sub
lret
mov
mov
add
xor
lret
pop
stos
int
iret
sub
cmc
ret
pop
push
xor
lock
frstor
rorl
jno
or
mov
pop
in
mov
xchg
enter
cmp
mov
pop
fxch
sub
popa
dec
lods
inc
in
mov
por
inc
pop
push
outsb
cmpsl
sbb
test
xlat
out
fwait
pop
mov
insl
scas
push
das
sbb
xchg
and
add
lods
rcl
inc
insl
xor
rolb
rorb
inc
stc
daa
dec
dec
xor
das
leave
cmpsb
xor
repz
mov
scas
or
cmpsl
mov
std
fcomps
xor
fwait
nop
orb
popa
ljmp
mov
roll
popa
sub
cmp
fnstsw
in
add
test
ja
lock
cmp
push
nop
scas
jp
fisubrs
cmc
out
out
push
imul
cmpl
dec
adc
mov
int
cmp
sub
add
lock
arpl
mov
data16
jnp
popf
pop
sarb
rcrb
xor
call
pop
out
jbe
outsb
movsl
fwait
mov
xchg
sub
inc
and
push
sarl
andb
mov
inc
fstl
cwtl
dec
dec
sub
mov
addl
sbb
ljmp
aas
ret
ljmp
mov
mov
pop
and
loop
mov
xlat
sbb
jo
out
xor
pop
xor
adc
cmp
xor
lea
mov
test
xchg
out
out
xchg
leave
push
push
gs
stos
out
xor
daa
mov
lret
stos
out
lds
repnz
scas
popa
adc
ret
mov
addb
icebp
add
sbbl
daa
fdivp
fdivs
shrb
test
dec
dec
out
mov
sbb
mov
shrl
movsb
or
movsb
xchg
push
mov
ret
xchg
add
ds
cmc
dec
test
cmpsl
bound
sub
push
sbb
mov
pop
xchg
mov
aaa
jle
lods
js
sub
cmpsl
dec
pusha
jae
cmc
in
push
fstl
mov
jae
daa
mov
test
cli
adc
int
les
xor
xchg
aad
or
pop
sub
mov
adc
insl
cmpxchg
pop
mov
in
or
mov
xchg
xor
dec
fsubl
mov
mov
sub
xchg
adc
addr16
iret
std
mov
push
inc
mov
out
or
fcmovb
loop
inc
or
ljmp
idivl
and
enter
pop
cs
fstps
iret
push
in
mov
movsl
mov
pop
out
adc
cmp
cmp
jmp
jbe
cmp
mov
mov
stos
ret
hlt
jne
out
dec
pop
test
movsb
mov
or
scas
xor
lea
inc
inc
orb
test
rcll
sub
subb
out
leave
arpl
mov
sahf
scas
add
fistpll
pop
fisttpl
fstp
lret
jns
mov
cmp
popf
xor
into
sbb
xor
in
inc
test
and
gs
sub
and
bound
dec
mov
mov
and
mov
sahf
inc
dec
orl
mov
int
add
or
adcb
xchg
mov
push
mov
rcrl
cmpsb
inc
mov
jecxz
push
dec
mov
pop
cli
mov
mov
mov
jbe
mov
stos
fsts
jbe
sub
xor
adc
push
sarb
popa
sub
aam
push
ret
xor
lret
bswap
mov
fisubrs
mov
and
xchg
and
lcall
lock
fwait
lds
stos
fstpl
stc
pop
push
ljmp
push
mov
loop
mov
inc
test
jl
lods
or
popa
out
pushf
out
inc
pop
mov
mov
adc
mov
pusha
cmovno
inc
rcl
jbe
popf
ja
cmc
lret
fsubrs
xchg
ds
cmp
lods
pop
and
ret
sub
adc
ja
ljmp
clc
in
pop
cmpsl
arpl
and
xor
mov
cli
inc
push
rorb
or
lcall
add
pop
push
lds
cmpsb
je
fidivs
cld
or
das
inc
pushf
je
sub
insb
xchg
dec
in
repnz
or
cmp
xor
or
fidivl
or
lcall
or
call
jb
mov
xchg
or
sahf
shrb
add
mulb
ja
mov
add
insl
xor
pop
xchg
pop
pop
js
xor
push
lret
gs
xor
xor
roll
arpl
ja
inc
cmp
fisubs
dec
divl
jbe
mov
add
xchg
pop
into
jne
scas
std
in
hlt
lods
jne
mov
mov
fidivl
adc
inc
push
mov
pushf
hlt
pop
divb
mov
xor
loopne
cmc
and
int3
into
daa
jg
loop
mov
jl
cltd
and
and
cmp
into
mov
jecxz
imul
cmp
aaa
addr16
add
addl
adc
fwait
ret
test
xor
ret
cmpsb
xchg
call
test
imul
outsb
lret
data16
push
rcrl
daa
or
mov
pop
fsubrs
xor
mov
xchg
lock
roll
out
movsb
data16
movl
js
pushf
xchg
jnp
push
call
out
pushf
enter
pop
inc
cmp
imul
sub
shll
cmp
adc
insl
cs
pushf
xor
push
push
add
fistpll
sbb
imul
leave
dec
test
push
push
fsubl
mov
push
rclb
imul
and
int3
test
jp
divb
in
mov
loopne
scas
outsl
test
push
repnz
ljmp
xchg
xor
xor
in
mov
sub
mov
fnstcw
aas
test
imul
fimull
data16
lea
or
enter
repnz
mov
into
icebp
addr16
inc
inc
ljmp
in
bound
lods
and
mov
xor
jmp
add
add
cld
arpl
ds
push
pop
test
arpl
sbb
pusha
fwait
incl
fcomps
cmpb
adc
mov
push
mov
xchg
out
mov
jb
sub
test
push
lds
jle
dec
mov
cmp
flds
inc
or
inc
xlat
mov
or
out
cmp
imul
ss
cmp
mov
and
ljmp
pop
jmp
fcompl
add
mov
mov
incl
lock
xor
repz
or
ljmp
fbstp
cld
push
scas
add
inc
leave
out
mov
gs
xchg
nop
icebp
lods
in
cmpb
stc
inc
jecxz
cmove
xchg
push
xor
pop
xor
addb
sbb
arpl
sub
xchg
pop
gs
cmp
cmp
test
xor
scas
pop
das
cmp
fisubs
lahf
mov
sbb
into
jo
cmp
loop
fwait
inc
aas
cmp
cmovo
or
sub
ss
push
cmpsl
sbb
mov
rcrl
dec
inc
fidivrs
push
fstps
jp
add
push
push
cs
out
sub
xor
negb
inc
adc
pop
xchg
stos
mov
and
pop
ss
pop
in
jge
mov
or
lods
rol
push
ja
jp
cmp
lea
push
xor
and
shrb
lret
pop
xor
push
or
out
lret
insl
push
mov
sbb
adcl
xchg
and
stc
cmpsb
mov
inc
cmp
push
fcmovbe
adc
std
pop
popf
rcll
xor
addr16
push
outsl
mov
jmp
mov
sbb
sarb
push
lds
test
jbe
icebp
mov
mov
out
push
adc
out
sbb
std
popa
adc
pop
or
mov
shrl
mov
push
lret
xchg
loopne
xor
mov
jbe
mov
dec
or
cmp
addb
xor
loope
cmp
pop
icebp
iret
fs
push
cli
push
mov
stc
pop
mov
jg
fs
jge
xchg
mov
adc
cmp
jmp
jne
dec
sahf
jo
out
jnp
xor
scas
mov
imul
push
cmp
repz
cmp
insl
stc
pop
out
pop
fimull
cs
pop
jne
imul
sbb
popa
xlat
jb
repnz
mov
mov
fsub
push
test
add
add
add
and
or
fsubl
jns
sbb
sbb
stos
aad
cmp
ret
jb
lods
add
repnz
mov
xlat
add
xchg
jl
pop
ret
incb
mov
xchg
das
pop
push
xlat
sbb
sub
jmp
xchg
stos
cli
push
test
clc
sub
push
ds
lret
aas
fsubs
popf
mov
mov
push
xchg
repz
xor
sub
fwait
inc
mov
mov
cmpsb
cmp
mov
push
cmp
dec
mov
jne
inc
popf
or
sahf
jge
jne
mov
imul
addr16
lret
mov
xor
fstpt
jle
lock
cltd
inc
sbb
xor
push
lret
xchg
aam
inc
bound
rorb
or
mov
rorb
icebp
xchg
jb
jbe
pop
cltd
aam
lahf
hlt
add
ret
cmp
leave
leave
sub
popf
push
stos
cmp
push
adc
popf
popf
xchg
ficoml
sub
or
xor
stos
gs
les
and
sbb
cmc
xorl
in
cs
pop
fnsave
or
hlt
rclb
lret
adc
dec
xchg
out
mov
ds
cmc
mov
dec
outsl
int3
pop
bnd
xchg
adcl
dec
cld
nop
cmp
cmp
loopne
pop
xchg
out
sbb
subl
ss
ss
test
adcl
stc
push
adc
jle
sti
xor
cmp
les
je
mov
xor
mov
mov
fdivl
enter
cli
rol
jno
pop
pop
sub
cmp
or
xchg
jne
inc
movsl
mov
cmpsb
xor
pop
adcl
adc
lret
fidivl
movsl
jp
sbb
addr16
cs
push
fstpt
js
and
fwait
mov
aas
loopne
imul
daa
ror
mov
xchg
out
adc
mov
mov
add
mov
cmp
and
pushf
and
lahf
mov
jle
sti
out
test
aad
push
bound
ret
leave
adc
pop
mov
repnz
xor
or
jae
mov
push
popa
fdivl
test
test
sub
push
mov
mov
pop
push
jno
mov
jns
enter
push
pop
pop
stos
jmp
jge
xor
dec
push
sbb
fldl2e
cvtpi2ps
mov
test
adc
jae
cwtl
inc
dec
add
fstp
mov
mov
stos
push
pusha
pop
dec
movsb
cmp
mov
xchg
pop
jle
jmp
xchg
in
cmc
ficomps
ss
pop
inc
jecxz
je
movsl
sbb
lods
in
ficoms
mov
outsb
add
add
les
adcl
repz
aaa
insl
mov
repnz
and
idiv
pushf
fstpl
test
fsubrp
adc
sbb
mov
jno
xchg
sti
repnz
dec
testl
and
pushf
sub
push
lret
adc
aam
pop
nop
arpl
dec
adc
pop
jl
dec
jae
or
lods
xor
out
fimull
repz
xchg
mov
rclb
in
cmp
lret
fmull
pop
imul
outsl
dec
jl
es
popa
adc
cmp
ffree
add
leave
mov
jg
push
jg
jbe
insb
and
mov
loopne
mov
sub
jl
icebp
mov
inc
adc
inc
aas
mov
mov
add
or
fldt
jg
mov
ja
cmp
inc
das
mov
or
test
pusha
mov
push
mov
push
cmc
repz
and
pop
call
xor
repz
mov
and
jnp
or
imul
sbb
clc
js
stos
mov
push
sbb
notl
fwait
not
test
dec
xor
sub
add
popf
add
arpl
test
or
or
mov
out
sub
ffreep
fsubrl
sbb
movsl
dec
or
in
add
aam
movsl
inc
cwtl
inc
xchg
mov
lret
movsl
pop
jmp
subl
outsl
leave
dec
jbe
sarb
in
std
fwait
ja
mov
jns
fdivrs
ficoms
add
xchg
mov
or
imull
cmpsb
cmp
sub
hlt
hlt
or
inc
scas
inc
loopne
and
fwait
movsl
push
mov
in
divb
mov
cmp
mov
adc
in
mov
sub
adc
rcrl
sbb
repnz
dec
sbb
ret
pop
adc
dec
lahf
pop
cld
pop
sbb
adc
imul
mov
jmp
sbb
dec
idivb
pop
lret
adc
pop
outsb
mov
testb
lret
sbb
jo
cmp
xchg
dec
cmp
sahf
ja
ljmp
fistl
lcall
leave
iret
jg
mov
mov
roll
push
mov
es
xor
stc
outsb
es
sub
push
movsb
outsl
push
or
loop
les
sub
mov
xchg
movsb
add
ret
addr16
push
adc
mov
add
cmp
dec
xchg
lock
xlat
lea
jge
push
ljmp
nop
cmp
mov
popf
popf
iret
cmp
pop
negb
addr16
outsb
inc
lcall
or
and
das
mov
stos
push
mov
xchg
out
jnp
rcr
xor
out
cmp
pop
fmuls
sbb
or
sti
fisttps
jb
enter
aam
mov
cwtl
or
adc
scas
pop
mov
iret
jbe
decl
orl
out
stos
sub
fwait
rcrl
sti
mov
or
ss
pop
sub
data16
inc
loope
push
test
call
addr16
dec
push
cmp
and
stc
mov
cmp
or
xor
xchg
fnsave
xor
dec
add
sbb
mov
in
push
xor
movsb
mov
jae
jecxz
xchg
lahf
loopne
fs
xor
lods
not
jmp
shl
dec
insb
js
adc
imul
mov
push
fimuls
xchg
lds
push
insb
ljmp
push
mov
dec
mov
pop
push
scas
push
pop
js
lods
imul
sbb
shll
or
xchg
mov
lea
mov
stc
sub
mov
out
leave
xchg
push
pop
and
jae
mov
repz
aam
cmp
dec
pop
out
cmp
gs
lcall
push
ja
fimuls
cmpsl
mov
out
pop
repnz
and
lds
fwait
int
lcall
jmp
push
fdivl
mov
arpl
jle
xor
cli
inc
xchg
aaa
rorl
imul
push
in
xlat
aam
loope
into
call
or
aaa
fs
into
lret
sti
push
xchg
jae
sbb
xor
repz
or
lods
push
in
mov
pop
add
stos
loop
or
and
loope
js
sub
sbb
scas
aas
aam
jmp
popa
dec
dec
add
mov
mov
xchg
daa
insb
xor
and
lcall
pop
sbb
inc
loope
or
daa
mov
or
dec
and
fildl
out
cmpsb
xor
and
ss
xor
xchg
icebp
fmul
in
das
aaa
cmpsl
lea
jp
iret
mov
imul
cwtl
and
test
sti
hlt
pop
sub
movsl
cmp
testb
fbld
inc
jnp
sbb
cmp
lret
enter
imul
jmp
test
es
add
out
xchg
lock
popaw
iret
mov
call
sub
cmp
and
xchg
adc
pop
nop
icebp
cli
jb
insb
xchg
mov
push
mov
push
sahf
pusha
out
and
adc
add
sbb
cwtl
sbb
scas
popa
mov
inc
lcall
mov
test
aad
les
ret
lcall
jecxz
int
adc
stos
ficoms
jno
aad
cltd
lods
and
stos
cmpsl
xor
mov
les
cmc
sub
loopne
loope
pushf
lea
xchg
mov
cli
sub
mov
sub
dec
mov
pop
mov
cmp
dec
ret
lahf
testb
push
add
adc
mov
sub
scas
cmp
mov
rorl
sbb
xor
mov
pop
add
fistl
jg
push
push
pop
mov
inc
pop
repz
adc
push
int3
pop
cmc
repz
lret
ficompl
popf
cld
inc
jnp
lods
mov
idiv
addr16
lods
int3
mov
xchg
xchg
jp
repnz
mov
in
int3
hlt
jg
ljmp
mov
xor
bound
insb
sub
pop
lahf
xor
ja
sub
jo
xchg
enter
jp
stos
std
dec
xor
outsl
ds
test
les
call
dec
stos
inc
ror
ss
xor
fisttpll
clc
push
fs
inc
xchg
fmuls
cmc
cld
adc
xchg
enter
mov
outsl
lods
jp
sbb
push
add
lcall
popa
sbb
lods
lret
push
stos
test
ret
pop
mov
movsl
push
adc
mov
fisttpll
adc
mov
mov
and
jecxz
or
sub
rol
push
cwtl
adc
outsb
sbb
addr16
scas
push
inc
ljmp
imul
sub
data16
or
dec
mov
lret
pop
cmp
imul
inc
jecxz
sbbb
jne
clc
mov
xor
adc
nop
xor
adc
ja
jp
fnstcw
pop
mov
stc
ljmp
mov
mov
mov
inc
dec
in
mov
mov
pop
notl
cltd
movsb
ret
out
cmp
int
out
lock
jns
lods
mov
ret
add
push
sahf
jnp
mov
mov
stos
ficompl
pushf
in
push
jae
jecxz
or
ss
lock
bnd
fwait
in
scas
xlat
and
aas
cwtl
orb
gs
jnp
add
push
or
movsb
mov
es
into
aam
push
fistps
das
push
jbe
jns
or
cmp
or
or
addr16
mov
in
cmp
test
mov
push
pop
mov
jle
sub
adc
shll
jae
aas
fcmovne
outsb
push
sub
roll
jns
rcr
adc
inc
js
bound
scas
int
cli
and
jmp
or
sahf
lods
sub
xchg
add
es
push
jae
dec
or
leave
idivl
dec
and
pop
inc
ja
xchg
pop
and
dec
jae
mov
aas
xchg
inc
in
mov
sbb
inc
jb
movsb
js
das
ret
int
mov
jbe
or
jbe
adc
std
loopne
sbb
mov
fmul
xchg
xchg
cwtl
insb
mov
xchg
mov
loopne
pop
mov
fs
ds
xor
fistl
mov
xor
mov
repnz
call
test
mov
andl
jge
cmp
pop
push
enter
dec
scas
add
adc
pop
ret
xor
xor
in
push
dec
pop
jo
addl
add
inc
and
mov
push
cs
add
enter
xor
pop
aas
xchg
daa
mov
jb
jae
push
push
lcall
mov
dec
int
sub
sarl
test
mov
or
mov
sub
jmp
in
fld
rcll
mov
outsl
pop
cmp
ja
cmpsl
mov
rcl
mov
jns
mov
sub
add
sbb
pop
cmp
add
int
inc
mov
ds
and
sub
push
xor
out
data16
pusha
inc
inc
mov
scas
js
add
mov
pop
dec
and
mov
xchg
aad
jo
sub
mov
insl
jo
pop
popf
adc
cmp
lea
imul
jno
lret
jns
frstor
add
cli
inc
scas
hlt
cmpl
fistl
jl
test
sbb
fisubrs
mov
adc
faddl
jl
stc
xchg
popf
sahf
sbb
mov
cwtl
inc
inc
popa
mov
stc
and
push
sbb
pop
ss
stos
popa
mov
push
pop
sbb
adcb
lahf
sbb
aaa
jnp
sbb
in
add
and
push
adc
dec
mov
pop
mov
inc
lods
aas
js
push
int3
inc
out
je
adc
das
and
cmp
cmp
adc
and
pop
shlb
add
push
movsl
add
xor
rol
scas
rol
xor
push
mov
aam
mov
and
outsl
sarl
aas
sar
xchg
jg
ret
jbe
sbb
aad
scas
push
jl
iret
call
mov
data16
jne
mov
mov
lods
popa
into
daa
popa
sarl
mov
sbb
pop
inc
jge
lret
data16
test
test
mov
sarb
out
andl
xchg
and
cmp
push
cmp
cmp
shrb
ret
ja
shl
cld
in
jl
inc
lock
xchg
add
xchg
inc
daa
sbb
cld
ds
push
mov
jl
enter
in
push
jne
xor
sub
mov
jnp
int3
mov
clc
mov
enter
or
aaa
push
addb
orl
pcmpeqb
cmc
xchg
xor
xor
inc
dec
dec
dec
clc
and
xor
xor
xchg
jecxz
sub
loopne
cmpsb
das
mov
mov
sub
jns
test
cmp
inc
push
pop
cmp
push
popf
fcomi
adc
cmpb
adc
movsb
repnz
cmpsb
mov
orb
xor
dec
inc
push
sbb
push
adc
add
pushf
xchg
sbb
xchg
mov
mov
and
sbb
push
cs
xlat
scas
clc
cs
stos
insl
or
enter
cmp
in
ret
fs
fwait
imul
cltd
mov
mov
lods
fcmove
jg
or
stc
maxps
fidivrl
jb
sti
push
aas
mov
push
xchg
xor
mov
xchg
cmpsb
decl
push
in
in
mov
cmpsl
sub
inc
and
adc
mov
mov
notl
pusha
aad
es
ret
mov
hlt
lods
pushf
pop
inc
incl
add
out
movsl
add
add
andb
movswl
push
jge
jne
push
dec
mov
adc
pop
into
jne
imul
sub
dec
cmp
test
inc
cmp
add
mov
jnp
repnz
das
fmull
cld
outsb
into
jno
repz
jmp
inc
sbb
into
push
xor
and
or
imul
push
jbe
loopne
ficoms
xor
imul
cmp
lds
mov
bound
mov
imul
sub
fstl
insb
or
stc
out
in
ljmp
lods
pop
push
addr16
push
pop
sahf
and
stos
cmp
fmuls
nop
sub
mov
push
mov
jecxz
mov
mov
aas
popa
gs
stos
rcr
divl
cmpsb
cmp
mov
inc
outsb
xchg
call
repz
jge
sar
ss
jae
into
call
fdivrs
jnp
cld
in
mov
mov
or
jnp
sub
icebp
xorb
loop
inc
sti
fdivl
dec
repz
popa
push
inc
pop
or
sbb
xor
ljmp
imul
lret
bound
add
inc
ficoml
cmp
xchg
cltd
cltd
xor
inc
gs
aas
fsubs
leave
rcrb
jecxz
cmp
pop
cmp
sbb
rcrl
cmc
and
adc
sbb
push
or
or
cwtl
insl
xor
dec
xor
pop
mov
jbe
or
enter
mov
cli
jp
cs
shlb
push
hlt
fwait
jnp
xor
and
fcoms
jne
pop
pop
leave
dec
ljmp
cmp
dec
outsl
in
testb
mov
loopne
push
pop
and
push
addr16
std
mov
test
sbb
cmc
cmp
mov
lret
mov
in
or
bound
cmpsb
adc
push
add
rcrl
xchg
daa
push
push
sbb
inc
out
mov
cmc
sarl
aas
stos
mov
jp
mov
sub
testl
ret
dec
test
les
rol
pop
insl
sbb
push
dec
out
add
mov
dec
popf
sarl
mov
shlb
mov
push
int
push
add
push
ja
sahf
mov
es
pop
lea
pusha
cmp
add
cmp
and
shlb
xor
xchg
enter
jmp
imul
mov
cmp
inc
dec
nop
insl
or
stc
in
dec
fucomp
add
loope
mov
mov
jp
fnstcw
xchg
inc
cmp
add
bound
xor
dec
fimuls
jg
xor
call
or
jmp
ja
mov
dec
pop
push
not
adc
and
call
insb
push
scas
push
or
cs
push
arpl
push
push
push
rorl
dec
push
inc
iret
mov
sbb
imul
and
std
mov
xorb
dec
cltd
mov
or
pop
fbstp
jb
or
push
lods
mov
cmp
adcl
and
out
add
sub
iret
fs
mov
pop
xor
jle
xor
movaps
test
and
ja
outsb
pop
sub
test
sub
inc
out
mov
loope
je
dec
cmp
push
dec
adcb
call
out
clc
daa
test
dec
shl
push
pop
mov
push
fidivl
movsb
incl
out
xchg
sbb
loopne
fsubrl
mov
and
push
pop
lahf
dec
cmp
dec
adc
sbb
mov
out
or
push
repz
call
js
shlb
adc
dec
and
xorb
gs
jbe
ret
cmpsl
xchg
ret
pop
adc
imul
dec
or
filds
aam
faddp
les
push
lret
jbe
les
es
add
push
ret
aas
dec
decb
test
mov
xchg
and
and
decl
test
mov
cmp
pop
aam
cmp
lea
or
mov
out
jle
popl
pushf
inc
jmp
lock
cltd
adc
jb
fwait
js
arpl
pop
mov
fninit
adc
jae
pop
push
outsb
dec
fwait
dec
mov
inc
nop
sbb
dec
add
mov
push
push
aad
fcompl
gs
jne
dec
das
stos
push
push
jp
shlb
sub
cmp
fistpll
jle
outsl
pop
stos
repz
sub
inc
into
adc
popa
sub
cmpsl
mov
jecxz
out
sub
fwait
outsb
shlb
xorb
inc
pop
sub
pop
test
add
inc
sbb
scas
movsb
pushf
loope
mov
pushf
xchg
jge
aaa
inc
sbb
push
sub
mov
fwait
jmp
dec
scas
push
sti
int3
push
jle,pt
adc
gs
out
scas
shlb
loope
mov
xchg
gs
pop
or
mov
push
or
gs
je
sub
sbb
rcl
ljmp
fildl
std
iret
lret
insb
jmp
mov
sbb
cli
mov
dec
js
mov
out
std
cld
mov
and
fcmovbe
push
jns
sub
and
es
leave
fcmovne
fwait
pop
call
inc
aad
sub
lock
fcoms
sbb
push
cmc
js
push
call
mov
test
out
scas
dec
lods
mov
pop
js
add
mov
push
pusha
mov
cli
inc
dec
repnz
sub
dec
push
sarl
jg
add
rorb
xchg
inc
daa
fcoml
sub
xor
lds
cmpl
fdiv
or
sbb
insl
cmp
and
mov
adc
cmp
rorl
pop
sub
jo
hlt
xor
cmc
pop
aaa
push
jmp
mov
push
enter
adc
rorl
or
or
cmp
or
push
push
stos
add
pop
inc
rolb
call
adc
jae
and
push
shrl
xor
std
fistpll
cmp
dec
or
inc
xchg
roll
cltd
xchg
fsubl
cmp
movsb
sub
cwtl
std
mov
ds
imul
or
mov
popa
xor
addr16
pop
add
push
jno
inc
jbe
sbb
xlat
cmp
dec
les
movsl
jle
sbb
xchg
adc
or
in
loope
jle
pop
adc
popa
adc
add
xchg
dec
mov
cmpsl
mov
mov
lcall
movsl
mov
push
or
push
xchg
cmc
xlat
mov
sbb
xchg
aas
mov
jo
pop
clc
cmp
fsubr
pop
push
mov
push
leave
push
int3
sbb
cmp
std
mov
je
jecxz
sarb
xorb
sbb
out
jno
cmp
dec
dec
jno
out
rolb
adc
jae
sbb
and
sbb
mov
insl
bound
jmp
sbb
subl
and
popa
xchg
imul
mov
push
push
xor
je
test
and
test
push
test
mov
sub
add
jecxz
test
inc
jl
insl
or
adc
jge
testb
xchg
fucomip
push
and
fimull
xor
adcb
mov
test
adc
push
data16
mov
xor
popa
xchg
enter
inc
lea
imull
lret
or
ficoml
dec
adc
aaa
mov
mov
sbb
subb
push
inc
cmc
mov
xchg
mov
lahf
xor
sub
out
xchg
xchg
imul
mov
es
jo
cmc
inc
pop
adcl
pop
out
rcll
int3
mov
or
pop
pop
dec
add
cli
scas
idivb
sahf
add
xchg
fisttpl
mov
out
sub
jns
dec
leave
icebp
xor
pop
popf
out
imul
sub
cli
sbb
iret
xlat
adc
stos
sbb
sub
lret
xchg
loop
adc
sub
dec
xchg
fsubs
pop
pop
mov
hlt
mov
cmp
push
lea
ja
adc
out
lea
jp
sub
aad
fists
into
and
stos
push
out
xchg
xor
cli
dec
mov
mov
fimuls
rcrb
inc
or
aam
jle
fisubs
sub
xchg
push
adc
jbe
mov
cmp
jmp
scas
repz
or
ds
cmp
mov
push
jnp
jecxz
mov
mov
mov
cmp
pop
adcl
jae,pt
sub
pop
in
mov
sub
mov
lods
pusha
das
mov
rorl
dec
dec
inc
dec
mov
enter
pop
mov
lock
add
outsl
popf
lds
jmp
out
pavgw
pop
xchg
in
stc
inc
shl
repz
dec
pusha
ja
scas
fistpll
push
lods
mov
jae
loope
and
mov
add
mov
adc
je
je
cpuid
and
mov
sahf
pop
lods
je
dec
int3
inc
inc
leave
pop
and
cmp
adc
xchg
xchg
and
stc
cwtl
lea
pop
das
aas
push
rol
ja
repnz
xor
sarl
ss
outsl
ja
dec
setne
cli
jmp
mov
mov
mov
xor
cmpb
fstpl
sub
pusha
jb
dec
nop
fildl
pop
in
enter
in
jae
bound
daa
mov
sub
xor
add
sbb
mov
mov
cs
mov
pop
cmc
adc
rcrl
mov
mov
or
addb
add
sub
fdivr
stos
call
pop
sub
inc
jecxz
push
rclw
aas
fdivrl
sub
xor
lret
mov
or
sar
push
inc
mov
mov
cmpsb
and
fdivr
or
xchg
int
inc
mov
in
mov
jecxz
mov
inc
or
ja
mov
adc
jecxz
xchg
mov
sbb
lret
sub
adc
mov
idiv
mov
popa
ja
push
jl
in
and
cmpsl
scas
in
in
jne
inc
insb
scas
int3
imul
jne
and
cmpsb
inc
test
mov
cmp
mov
andb
imul
mov
bound
mov
lcall
sub
std
lret
or
out
mov
ja
data16
cltd
and
xor
lea
jp
cmp
mov
or
jno
iret
push
pop
dec
orl
add
cltd
ja
mov
lahf
mov
fidivs
jmp
cmp
in
jo
add
lret
sbb
imul
cltd
int3
imul
pop
add
pop
or
push
stc
pop
bound
push
or
rolb
ds
cmp
movsb
push
lret
fcmovne
mov
add
inc
orb
mov
icebp
xor
incb
outsl
movsl
xchg
dec
repnz
or
or
js
jb
cmp
xchg
sbb
clc
cmp
mov
sub
or
jo
pop
je
pushf
and
lods
xchg
sbb
out
movd
sbb
mov
jb
lret
lock
pop
xchg
pop
leave
movsl
daa
cmp
inc
fwait
lea
test
lea
sbb
loopne
push
mov
xchg
icebp
out
or
es
xchg
pop
rcrb
add
shrb
cmpsb
push
fstl
jb
loop
call
in
lock
scas
rorl
xor
lods
xchg
lds
sti
inc
xchg
or
arpl
jle
jne
adc
mov
push
dec
in
out
cwtl
pop
outsl
mov
xor
incb
iret
adc
sub
subb
cmp
push
mov
inc
mov
sbbb
outsb
fdivr
cmpsl
inc
std
adc
mov
add
or
pop
mov
arpl
je
cmp
cmp
shll
into
and
ss
test
xchg
push
negl
in
cmp
fstpt
sub
push
xor
and
pop
xor
aam
dec
popl
push
or
jns
rorl
push
fxam
sub
call
adc
mov
xchg
pushf
popl
jno
cmp
or
loop
push
adc
jo
dec
bound
call
testb
pop
sti
add
ret
sub
xchg
add
cmp
ficompl
xor
and
rorl
stos
imul
loop
aas
cmp
mov
and
push
fdivl
dec
xor
stos
daa
mov
aas
adc
xor
sub
jno
pop
mov
adc
inc
mov
pop
hlt
inc
sbb
lahf
int3
cmp
stos
push
add
adc
cmpsl
xor
aad
cmp
mov
outsl
pop
cmpb
arpl
into
pop
outsl
addb
arpl
jno
fsubl
jl
fwait
mov
sahf
pop
in
push
push
cld
ret
jecxz
shrl
lds
adcl
cmc
push
inc
adc
xchg
stc
xchg
jl
jg
popl
loope
out
push
stc
aas
jo
jge
or
pop
mov
rcll
jno
and
mov
xor
rclb
push
jg
rorb
imul
imul
rorl
inc
ret
fldl
mov
inc
xor
popf
mov
push
pop
lds
repz
mov
jle
pusha
icebp
mov
add
xchg
je
or
nop
or
test
jecxz
or
mov
stc
xchg
outsl
outsl
int3
ret
int3
jl
popa
mov
mov
or
dec
les
cmp
xchg
cli
jnp
vldmxcsr
rcrl
add
and
sbb
loop
int
mov
xchg
insb
xor
data16
imul
jge
sub
pop
inc
lret
xchg
add
pop
add
mov
shl
sti
loop
pop
and
lock
pop
jp
ljmp
stc
mov
jae
inc
sub
mov
out
out
add
adc
mov
pop
stos
mov
or
pop
jle
leave
repz
xor
push
adc
ljmp
into
lcall
push
adc
sbb
pop
cli
ds
stos
mov
fcmovu
ret
sub
sbb
inc
dec
sbb
adc
add
sbb
xchg
mov
ret
push
imul
jns
enter
sbb
aas
ja
gs
pop
cld
pop
xorl
fwait
mov
sti
xchg
sub
mov
or
sti
pop
iret
loope
aas
add
out
jle
cmp
inc
sbb
push
popf
mov
or
cmp
pop
and
lret
push
cmp
pop
nopl
push
hlt
repz
rorl
and
lods
inc
into
es
mov
ret
mov
push
sub
sbb
sub
push
shll
sbb
decb
mov
repnz
or
fimuls
pop
movsb
lret
jle
mov
ljmp
int3
cmp
sahf
and
sub
xchg
sbb
aaa
mov
nop
mov
roll
cltd
int
mov
iret
test
sub
in
scas
testl
mov
dec
rolb
fbstp
mov
testl
xchg
aas
mov
daa
add
and
push
mul
repnz
xchg
loop
xor
mov
pop
fdivl
fmull
xor
loope
stos
sbb
mov
addr16
and
mov
and
loopne
test
fimuls
mov
sbb
inc
lret
push
add
leave
jno
sti
inc
sub
jg
jmp
mov
adc
pusha
push
jl
out
pushf
imul
jno
shll
push
add
jo
pop
addl
insl
clc
pop
dec
iret
or
mov
push
in
lcall
inc
sahf
stos
pop
scas
iret
push
out
cld
push
stos
jo
mov
or
sub
inc
mov
out
int3
loop
jle
movb
ret
imul
mov
xor
int3
fmuls
cmp
ret
lea
out
pop
sbb
shlb
stos
and
mov
fmuls
lret
lods
repnz
pushf
es
sti
jnp
xchg
cmpsb
xor
mov
aas
mov
movhps
adc
sbb
sarb
lods
imul
adc
pushl
cmp
xchg
jo
jecxz
jb
add
lods
cmp
ss
mov
push
xor
mov
nop
mov
fsts
add
dec
mov
adc
bound
andl
cld
sub
out
loopne
sbb
dec
call
sub
lods
jbe,pn
push
add
mov
div
fcmovnu
xchg
jnp
lcall
les
addl
mov
std
js
aas
push
sahf
push
ret
cmc
into
aaa
int
xor
pop
mov
and
push
js
inc
jns
and
xchg
mov
push
stc
cwtl
imul
xchg
mov
ss
xor
dec
and
adc
fidivrl
orps
ret
mov
pop
jmp
outsb
les
pusha
inc
outsb
mov
out
bnd
inc
cmp
cmp
and
mov
fisubs
sbb
mov
std
xor
ja
jno
mov
jl
cltd
xor
jb
cmp
xchg
or
out
ret
sbb
pusha
dec
push
fldl
fistl
dec
mov
insb
or
test
xchg
lods
setp
ret
mov
ja
jl
xchg
xchg
mov
sti
insl
aaa
xchg
pop
mov
jge
aaa
inc
push
insl
push
cs
mov
mov
xchg
adc
adc
jns
pop
xchg
scas
mov
mov
pop
or
jae
popf
inc
push
shll
xchg
and
jg
add
insb
cmove
xchg
loopne
icebp
cltd
jnp
mov
push
xor
lea
sub
fwait
jle
arpl
in
mov
push
and
outsl
mov
out
mov
jb
xchg
and
and
js
icebp
pushf
daa
xor
cli
xor
jmp
cli
clc
addr16
push
fisttpll
jbe
mov
mov
aam
sbb
lea
sub
xor
in
push
xlat
cs
lea
rorl
pop
mov
dec
jg
dec
xchg
xlat
ss
pop
pop
test
out
lret
xchg
cmp
addr16
sbb
test
sub
ret
out
mov
lsl
roll
sbb
mov
xor
cltd
fldenv
and
mov
js
xor
mov
sbb
add
adc
and
inc
fstpl
ds
testl
and
jge
xchg
addr16
paddd
iret
fnsave
jge
bound
enter
aam
pop
rcll
or
scas
mov
mov
inc
add
xchg
fs
out
or
lea
popa
and
inc
xchg
popa
cmpsb
and
mov
iret
insl
jmp
in
mov
push
arpl
mov
insb
cmpsb
loopne,pn
lret
lock
lods
xchg
adc
xchg
push
mov
mov
pop
enter
pop
mov
inc
add
icebp
jb
lcall
xchg
fstpl
mov
loop
popa
jl
popf
fsubrs
pop
add
into
sub
sub
pop
mov
dec
test
les
call
adc
shrb
mov
mov
shll
scas
pop
nop
jae
mov
dec
std
pop
ja
fyl2xp1
inc
or
es
pop
xchg
pop
stos
inc
cmp
xchg
pushf
iret
push
gs
in
pop
imul
lcall
push
sub
insb
push
outsb
cmp
fistps
pop
pop
cli
cmp
pop
dec
and
sbb
ds
jns
pop
into
lds
jo
add
out
jmp
jno
fstpl
push
xlat
pop
adcb
xchg
call
push
test
scas
add
stos
pop
mov
xchg
addr16
imul
and
adc
cs
xchg
mov
inc
insl
cmpsl
fcomi
in
daa
cmp
or
ret
rorb
jle
pop
aam
scas
negl
pop
test
popf
icebp
mov
inc
sub
std
push
in
insl
cmp
scas
and
fistps
push
movsb
mov
rcrl
fwait
cs
in
mov
lock
xlat
mov
dec
xor
jl
shr
roll
orl
mov
sbb
mov
jg
loope
mov
push
sbb
idiv
into
push
jge
adc
loopne
jo
aam
in
add
dec
dec
pop
mov
sub
js
adc
sbb
ret
dec
cmc
adc
push
jno
adc
sub
add
or
addr16
mov
inc
or
std
fsub
xchg
sbb
addr16
xor
pop
ss
cwtl
mov
and
leave
pop
nop
jge
je
mov
movl
loopne
jmp
jo
popa
es
and
xor
xchg
cmp
ficompl
lret
movsl
push
add
bound
jb
test
mov
test
cmp
ret
mov
xor
inc
out
movsl
xor
out
shll
cmp
jb
and
adc
add
inc
js
shll
jbe
push
inc
mov
sbb
mov
cwtl
stos
xchg
out
test
addl
mov
pop
call
test
fldt
lods
pop
testl
sub
add
jg
or
sub
outsl
mulb
pop
leave
mov
and
std
dec
push
mov
int
icebp
incb
adc
lock
daa
adc
jne
xchg
xor
popf
sub
mov
je
imul
dec
addr16
cmpsl
jg
sarb
cmp
pop
mov
dec
testb
lret
or
add
fcomps
scas
mov
les
pop
sar
cmp
mov
movsl
push
pop
sbb
inc
xchg
test
pop
jl
mov
inc
in
xor
sub
jae
pop
sub
fisttps
mov
push
sbb
dec
xor
cmp
cwtl
mov
shl
push
jne
add
cmp
mov
sbbl
cmp
pop
or
pushl
mov
je
pop
and
lret
or
mov
cwtl
aaa
das
es
loopne
dec
outsl
aaa
repnz
mov
push
fisttpl
test
push
insl
fdivrl
push
and
pop
and
pop
inc
fsubp
lods
add
cmp
sub
mov
negb
popl
xchg
and
mov
loopne
les
addr16
leave
icebp
and
adc
sahf
in
xor
push
movsb
mov
ljmp
jg
or
sahf
or
cmpl
sub
add
idivl
mov
cwtl
adc
cld
push
push
jg
in
ds
and
fst
popf
neg
dec
hlt
and
stc
add
into
adc
inc
jns
add
mov
push
sub
mov
insl
sbb
int
pushf
mov
add
add
sub
call
das
mov
cmc
lods
xchg
ds
xchg
or
fdivl
push
repz
xchg
jle
mov
ret
js
sub
mov
dec
xchg
std
adc
in
call
and
int
sub
jno
fldenv
sub
push
insb
push
inc
push
dec
add
scas
arpl
fwait
adc
xchg
shrl
call
mov
or
xor
test
loop
or
icebp
jb
test
mov
and
mov
or
test
jecxz
aas
add
cmp
mov
loopne
xchg
leave
int3
mov
out
push
notl
dec
call
inc
inc
push
and
loop
test
sub
lock
xchg
mov
ffree
add
sub
mov
and
inc
push
test
xchg
js
fdivrs
jg
mov
mov
loop
test
mov
out
or
subb
and
push
psraw
fmul
pushf
clc
test
popf
push
insl
sbb
sti
adcb
jno
xchg
and
fistpll
out
and
sbb
lds
adc
icebp
push
xchg
clc
popa
ret
leave
loop
mov
ficompl
sbb
pop
mov
lds
mov
roll
mov
or
rorb
ret
int3
cmp
into
jnp
popa
sahf
push
jb
inc
fbld
dec
or
sti
or
lcall
mov
lds
jg
les
xlat
pop
outsb
adc
adc
push
movsb
aaa
pop
sarb
out
push
push
lods
dec
inc
mov
jecxz
test
or
rcl
adc
movsb
in
mov
rcr
inc
mov
xor
lret
leave
add
sti
data16
or
ljmp
dec
mov
xor
fildl
stos
cmpl
mov
xor
mov
aaa
dec
adc
xchg
xor
pop
mov
xlat
xchg
ret
xorb
mov
push
fs
xor
xchg
std
loopne
hlt
cmc
mov
inc
push
push
adc
sarl
sbb
inc
jge
cmp
push
popa
sahf
mov
shll
mov
xchg
push
mov
loope
aad
mov
jb
js
stos
adc
movsl
pop
aam
dec
sbb
lds
cmp
fstpl
sbb
in
ss
or
cltd
les
shll
into
scas
dec
mov
ljmp
fisubrs
sbb
push
int3
push
aaa
push
pop
inc
ljmp
push
sub
cltd
les
sub
ja
ret
pop
loopne
ret
in
jb
mov
bound
sbb
dec
inc
jo
cmp
push
adc
stos
clc
push
jp
add
dec
mov
mov
xor
aam
inc
out
dec
fnstsw
mov
addr16
push
daa
sbb
orb
fwait
dec
js
xchg
mov
jne
sub
cmpsl
mov
xchg
ljmp
jle,pn
outsl
push
push
dec
out
cmp
in
xor
push
xchg
out
aas
ds
xor
sbb
sub
loope
inc
add
jl
cmpsb
loop
sub
xchg
pop
shl
daa
pop
inc
loop
inc
mov
adc
lods
cmpsl
lret
shll
jbe
sarl
sbb
jg
jge
push
xor
fldl
arpl
push
jne
mov
andb
repnz
outsl
stc
xor
fdiv
pop
mov
ficomps
fidivs
sub
jne
sub
push
lret
or
stos
xor
faddl
fnstenv
call
mov
pop
sbb
daa
cmpl
fsubrs
jmp
outsb
orl
sbb
fcomp
rcrb
inc
mov
cwtl
notl
cmp
repnz
negl
xchg
push
arpl
cmpsb
cmc
mov
adc
mov
mov
loopne
not
in
push
mov
lret
inc
test
icebp
jb
pop
insb
lods
movnti
xor
hlt
out
and
shll
or
lret
xchg
sub
xchg
clc
push
xchg
fimuls
negb
sub
popl
inc
or
mov
fs
nop
dec
repz
xchg
cmp
xorl
jbe
cltd
inc
lds
mov
enter
lods
sarl
stos
push
and
xchg
cmp
movsl
add
xchg
fwait
int
sti
lcall
fwait
xlat
pop
sbb
sub
fnstcw
push
mov
jmp
cmp
fstpt
jmp
cmp
cwtl
sub
fisttpll
dec
cmc
xor
xchg
push
js
repnz
or
in
addl
lock
rclb
dec
sahf
push
and
push
mov
stc
or
repnz
ret
mov
jmp
dec
add
pop
mov
cmp
dec
bswap
arpl
cwtl
jb
cwtl
pushf
add
dec
cltd
leave
add
sarl
adc
and
test
aas
lret
cli
call
negb
or
ret
jb
cmp
in
add
jp
cmc
pop
or
push
xor
clc
and
cmp
cs
jo
add
xchg
or
xor
rcrb
pop
dec
subl
sub
rcl
sahf
add
loope
int3
in
sbb
inc
mov
push
adc
enter
inc
adc
lock
aaa
test
lahf
mov
and
js
mov
test
xor
jle
cmc
es
pop
lods
ds
add
pop
into
insb
loop
push
pop
repz
and
cmp
cmp
mov
pop
gs
lcall
jns
inc
mov
mov
mov
gs
mov
pushf
push
mov
into
dec
outsb
xchg
outsb
dec
les
adc
in
addr16
adc
lret
ljmp
ret
in
push
sub
jmp
nop
sub
jp
push
stos
jl
movsl
sbb
int3
mov
jmp
adc
xor
mov
sbb
sub
jne
sbbl
stos
and
mov
insb
imulb
sbb
mov
jg
imul
in
jo
adc
cmp
mov
jnp
addb
mov
mov
popf
fimull
lock
imul
cmp
aaa
scas
cmp
push
lret
jno
mov
cmp
jbe
sub
mov
pop
adc
call
dec
out
scas
cltd
sbb
jno
imul
push
pop
cmpsl
inc
in
es
fs
inc
add
jnp
decl
cmp
and
push
out
mov
cmp
iret
sahf
mov
dec
or
and
mov
movsb
push
cmp
ret
imul
jo
testb
pop
jl
inc
mov
movb
movsl
fidivs
call
daa
test
mov
inc
mov
scas
push
push
test
mov
xlat
cmp
sbb
pushf
ret
push
popaw
daa
xor
fidivl
into
or
xor
push
and
xchg
imulb
cli
mov
movb
outsl
idivb
cld
and
or
dec
shll
leave
sub
push
add
nop
shll
arpl
movsl
inc
pusha
inc
lods
lock
push
xchg
xlat
and
or
mov
pop
sahf
pushf
push
add
xchg
push
outsl
jle
push
jbe
adc
adcl
add
sbb
mov
arpl
addl
out
sbb
pop
shll
stc
test
testb
and
or
psubb
nop
stos
mov
shll
inc
jns
mov
dec
lcall
jbe
pushf
push
mov
fdivs
sub
shrl
sub
clc
lea
movsl
sbb
mov
inc
mov
xchg
jl
daa
in
pop
pusha
outsl
mov
ret
or
jecxz
sbb
insb
jne
inc
int
jno
inc
inc
sti
pop
and
aam
jecxz
call
cmp
adc
mov
add
stc
adc
int
xorb
lock
jo
inc
jae
repz
jmp
jecxz
outsl
fnstsw
fwait
aam
mov
int3
aas
pop
mov
dec
pop
ja
sbb
mov
inc
mov
push
and
or
cmp
loope
aad
jbe
aad
adc
mov
loopne
ljmp
lea
jecxz
outsl
sub
mov
jbe
lcall
mov
pop
fimuls
aaa
cmc
outsl
mov
cld
dec
jmp
les
xchg
add
sbb
imul
ret
mov
mov
jle
inc
loopne
sub
jg
jle
imul
xlat
mov
push
leave
stos
imul
push
push
xor
xor
enter
mov
out
push
jg
clc
pop
jle
pushf
inc
mov
testl
or
ret
ds
pop
or
fidivrs
stc
jno
sbb
adc
nop
fcmove
adc
test
xor
lods
mov
jnp
and
cs
pop
rclb
repnz
addr16
mov
fsubrl
cs
lahf
mov
test
push
insl
sub
or
cltd
mov
sbb
cld
inc
mov
fbld
mov
lret
inc
xor
sub
or
gs
cs
stos
fisttpl
mov
mov
or
mul
push
xor
sahf
sbb
pop
dec
stos
sti
mov
icebp
xchg
cwtl
das
scas
add
mov
into
test
test
mov
or
and
mov
shrb
inc
lods
xor
outsb
stc
scas
sar
push
xchg
sbb
in
ljmp
cmpl
call
aam
testl
dec
dec
xor
pop
dec
or
stos
mov
fcmovnbe
movsl
dec
jg
xor
out
sbb
mov
and
jge
das
enter
sbb
jns
mov
pop
add
bnd
push
xlat
push
push
jge
movsb
jne
movsb
dec
xchg
in
xor
or
pop
and
xchg
bound
lea
mov
sbb
leave
fsubrl
fildl
inc
mov
das
inc
adc
sub
dec
pop
les
rclb
in
clc
aaa
dec
jo
mov
ret
lods
mov
fs
mov
imul
xchg
es
bound
pop
fcoml
lret
int3
fs
mov
add
lods
pop
repnz
daa
pop
or
push
test
outsl
in
xor
inc
addr16
xchg
inc
inc
jg
jmp
iret
or
pop
dec
cli
int3
mov
cmp
je
andb
push
scas
sbb
mov
xchg
cld
or
ret
pop
xor
sahf
cltd
push
enter
jns
test
xor
dec
mov
mov
add
rcrb
add
aad
pop
jo
push
pop
jne
rdpmc
xlat
mov
push
jecxz
add
int3
push
mov
test
xchg
xor
stos
cmp
mov
lea
mov
div
push
mov
loopne
cmpsb
cmpb
movsb
push
push
fiadds
es
pop
jae
sub
sbbb
test
lcall
add
sub
aam
xchg
xor
ret
movsl
out
lret
dec
inc
sub
xor
and
andb
scas
mov
push
mov
mov
and
mov
jg
add
out
push
inc
call
push
mov
cwtl
enter
mov
and
loopne
xlat
xchg
test
stos
push
sub
pop
cmpsl
ret
adc
aas
movsl
mov
push
mov
int3
xor
inc
xor
jmp
cwtl
and
shll
ljmp
lret
ss
sbb
int3
and
mov
popf
testl
outsb
dec
jnp
sub
sub
test
inc
jno
mov
movsl
addr16
pop
in
inc
mov
out
lea
push
jg
dec
jmp
add
fistl
loop
push
stos
fstl
xor
arpl
adc
xchg
mov
ljmp
jg
jmp
pop
xor
or
and
pop
inc
aad
mov
jns
scas
cmp
je
ret
pop
jmp
in
sub
rorl
push
mov
in
sti
vcvtpd2psx
adc
jl
dec
mov
jno
sub
ret
test
pop
sbb
jg
jno
inc
fcmove
rolb
clc
and
pop
jp
int
mov
pop
sbb
std
jns
sahf
xchg
fnstcw
mov
add
mov
jge
cmp
cmp
lods
cmc
adc
in
add
mov
arpl
gs
shr
fsubrs
xchg
cmp
andb
xor
push
call
push
outsl
pop
jecxz
adc
mov
adc
dec
test
cmpsl
jns
sbb
jmp
pop
jl
icebp
ficoml
adc
sub
sbbl
xlat
nop
imul
loopne
mov
mov
lret
mov
mov
out
cmp
mov
jae
stos
stc
pop
fcoms
scas
push
or
and
pop
inc
fiadds
pusha
mov
ret
xchg
mov
popa
push
sbb
fisttpll
jecxz
ss
pop
mov
cmp
xorl
jl
in
xor
jmp
movsl
cmp
jne
mov
cmpsl
aaa
xchg
dec
push
pop
and
cmc
dec
dec
add
mov
aad
mov
lea
fidivrl
inc
xchg
lahf
ds
inc
cli
mov
mov
xchg
mov
lret
js
adc
push
movsb
or
jmp
and
daa
and
hlt
into
std
lret
xor
dec
mov
xor
fldt
bound
push
addb
xor
insb
shrl
cld
dec
out
inc
xchg
and
sub
cmp
adc
mov
in
mov
mov
mov
sbb
negl
fidivrl
xor
and
cmpsb
imull
scas
push
pusha
cmp
or
lea
sub
pop
dec
inc
push
mov
test
mov
lahf
call
icebp
aaa
mov
mov
sub
pop
fwait
daa
and
mov
jnp
fwait
jae
and
xchg
inc
pop
inc
das
loop
mov
shr
mov
dec
xchg
scas
mov
jg
push
test
sub
std
mov
add
push
jp
mov
ds
lds
mov
lock
enter
push
mov
addl
loope
cmpsl
sbb
xchg
hlt
daa
inc
jbe
ss
mov
lods
xchg
sbb
pop
arpl
jno
dec
pop
mov
mov
scas
xor
outsl
lods
call
loop
sub
leave
inc
das
lcall
fisttps
inc
and
push
out
ret
imul
aaa
add
scas
jb
outsl
cmpsb
dec
idiv
mov
pop
mov
loopne
out
cmpsb
xor
incb
notb
cmp
or
std
cmpl
push
movsl
jmp
push
in
jb
nop
cld
divb
cmp
sbb
aaa
jecxz
push
cltd
cs
dec
fs
adc
sub
test
sahf
es
aad
stos
pop
push
inc
or
rcr
sti
push
js
ja
mov
push
das
inc
insb
ja
or
rclb
push
push
scas
dec
add
sub
xchg
cmc
in
leave
in
xchg
dec
out
int
ljmp
xchg
aas
aad
push
gs
fstp
int
aad
cmp
out
add
fdivr
mov
shrl
push
and
cmpsl
pop
lods
xor
jge
lahf
insl
push
mov
int3
sub
int3
popf
xor
stos
xchg
leave
mov
push
stc
mov
bound
dec
leave
shlb
movsb
push
jle,pt
mov
ret
ret
je
shr
push
or
xchg
test
fistpl
add
mov
movsb
sub
inc
or
dec
mov
mov
insl
loope
int
stos
mov
and
mov
les
into
push
cmp
int
adc
push
paddusb
insl
mov
in
xlat
scas
ljmp
in
in
add
or
or
stc
jle
pusha
pop
xlat
adc
jp
rorb
dec
adc
push
adc
or
fwait
insb
xchg
cmp
xor
in
int3
test
lahf
xor
loop
shl
jnp
idivb
xchg
aaa
out
or
sub
jne
add
and
pop
div
mov
leave
int
les
mov
inc
arpl
gs
mov
pop
js
pop
xchg
shlb
and
or
or
adc
inc
mov
add
and
scas
mov
inc
jo
das
popf
xchg
inc
adc
gs
das
mov
pop
or
inc
xchg
test
inc
or
ljmp
inc
cmp
int3
je
adc
cmp
mov
outsl
lret
sub
fldt
loop
adc
repnz
bound
pop
cmovp
jg
mov
scas
cmc
cmp
xor
sbb
das
cmp
xor
add
cmpsb
cmp
sahf
pop
xor
jbe
xchg
and
loope
mov
cltd
outsl
cmp
loope
sub
cwtl
andb
mov
out
rolb
cli
fwait
pop
add
adc
and
pop
or
pop
repz
pop
jae
scas
rorl
inc
mov
out
loop
test
adc
mov
test
sub
or
mov
or
push
test
nop
inc
push
scas
xchg
ret
inc
sahf
lahf
cmp
rolb
stc
mov
fdiv
push
push
inc
notl
jg
mov
ficoml
ret
push
int
lods
mov
lahf
xchg
push
das
push
movsl
outsl
jecxz,pt
xchg
insl
lock
ss
sbb
mov
test
loope
jne
test
mov
inc
rcrl
sbb
and
xor
adc
sahf
cmp
pushf
and
pop
xchg
sub
mov
out
xchg
hlt
add
push
out
aaa
add
mov
jge
cmp
add
icebp
gs
push
sahf
data16
mov
fldcw
addr16
fadd
sbb
fsubr
xorb
es
repz
jg
xor
dec
jl
daa
outsl
es
lahf
inc
cmpsb
inc
aaa
push
daa
std
enter
repnz
sbb
xchg
decl
jnp
cmp
jnp
mov
leave
lock
fiadds
out
movsl
jecxz
mov
mov
cmpsb
xchg
outsl
hlt
test
mov
negb
stc
add
cmc
fwait
push
mov
nop
mov
xchg
jno
push
adc
or
sbb
in
pop
and
sbb
fs
or
mov
jbe
test
inc
in
push
push
jbe
mov
xor
repnz
or
or
leave
ss
xchg
mov
ret
jg
js
arpl
imul
loope
icebp
mov
cmp
adc
xchg
xchg
push
fwait
call
xchg
pop
les
fistpll
push
push
push
mov
aaa
add
ficomps
pop
add
loop
add
clc
dec
cmovne
mov
push
fcom
fisttps
es
in
enter
fidivl
dec
pop
sbb
into
mov
fcmovne
and
jae
fwait
inc
fldl
dec
out
sbb
pop
cmc
test
cmp
jge
mov
cmpl
xlat
mov
xchg
and
sbb
test
adc
mov
dec
mov
sub
lret
les
insl
add
xor
jne
sti
adc
mov
jno
push
subb
cli
lret
sub
dec
xchg
ja
dec
pop
and
cmpsl
lods
ljmp
hlt
jns
call
cmp
dec
bound
sahf
jp
test
push
mov
sbb
rol
mov
push
cs
pop
xchg
jae
fcom
cmpsl
cld
sahf
icebp
pop
dec
loopne
fwait
addr16
or
les
int
ljmp
dec
movsl
cld
lods
js
sub
push
ljmp
popa
xchg
scas
pushf
and
ret
sbb
les
out
cmp
fld
js
sti
aas
lods
inc
clc
fwait
add
ja
or
stc
icebp
mov
sarl
cmpl
out
cmp
add
or
arpl
sbb
cltd
rcrb
xchg
lods
inc
jne
insl
repz
decl
popf
jle
enter
mov
push
push
cmp
and
js
dec
ret
in
or
pop
sahf
push
xor
inc
push
mov
adc
mov
movsb
call
ret
mov
adc
call
jmp
in
and
addl
sbb
adcb
jp
jns
cld
jne
cmpb
aad
xor
mov
imul
mul
jmp
add
subl
xor
bound
hlt
sub
mov
mov
inc
mov
pop
sbb
aam
sbb
sub
dec
inc
jp
inc
or
jns
sub
mov
pop
and
mov
mov
ja
adc
mov
cmp
popa
fcompl
in
ret
sub
dec
icebp
sub
pop
inc
cmc
jae
ljmp
xchg
pop
jne
push
jbe
jno
jge
idivb
aas
je
lds
mov
movsb
lahf
mov
mov
or
ljmp
incl
pop
dec
test
sbb
mov
dec
cmp
pop
lock
push
fsubrl
or
sbb
leave
pop
shlb
js
adc
lcall
cwtl
jno
lcall
mov
dec
mov
cmpsb
std
jp
sbb
xchg
repz
and
jae
popa
or
aas
or
cs
cmpsl
push
ds
mov
pop
xor
imul
lcall
pop
dec
dec
data16
clc
sbb
or
jbe
push
pop
pop
mov
repnz
rcrb
add
dec
scas
lods
div
imul
mov
adc
fidivrl
jmp
and
ja
push
in
and
jae
dec
in
sti
out
loope
mov
jne
mov
outsb
xor
es
mov
lds
jae
push
mov
stos
loope
or
insb
mov
push
mov
xchg
pop
repz
sub
jne
jb
imul
push
xor
rcrl
mov
mov
lods
jb
push
mov
dec
xlat
ljmp
mov
in
notl
xchg
lea
dec
dec
inc
mov
js
inc
loope
and
xor
loope
hlt
sti
bnd
and
int
in
pop
ss
cltd
pop
sub
mov
in
lods
out
dec
and
push
sub
pop
and
or
icebp
xchg
in
mov
push
mov
out
lret
jl
mov
fsubrl
inc
out
jo
mov
mov
xor
mov
or
adc
xor
cmc
cmc
ss
dec
mov
adcl
cmp
lds
push
push
mov
adc
jnp
jb
pop
rorl
xchg
std
or
loopne
xchg
sbb
mov
and
ret
popf
in
mov
lods
andl
jae
push
mov
cltd
or
mov
into
int3
outsb
rcrb
shlb
pop
or
push
push
arpl
ret
jecxz
stos
movsb
cld
push
in
aad
call
inc
mov
push
fwait
ds
sbb
pop
cmp
scas
call
loope
aas
mov
mov
jno
push
push
in
cmc
jae
adcl
ja
mov
and
push
imul
in
mov
fstpt
pop
fisttpl
mov
sti
js
cmp
xchg
lock
movsl
fsubs
pop
jmp
mov
insl
xor
ja,pn
mov
movsl
dec
stos
inc
lods
sub
mov
imulb
outsb
xchg
sub
adc
negl
xlat
mul
sbb
int
ret
inc
js
cmpsb
push
lock
push
repz
xchg
pusha
dec
sub
cmpsb
loop
jge
push
in
clc
xchg
and
push
jne
in
xor
jp
cld
inc
pop
jne
fidivs
push
and
cli
mov
mov
shll
and
xchg
sbb
inc
movsl
sti
push
cmpsb
or
je
and
cmp
or
iret
mov
mov
push
and
shl
push
pushf
mov
nop
sub
ljmp
ljmp
add
push
push
dec
sub
mov
icebp
sbb
jns
mov
cmp
ss
dec
sbb
mov
mov
sbb
ljmp
orb
test
xchg
push
push
add
xor
and
sub
mov
dec
adc
addr16
jne
jae
add
fbld
jmp
adc
ss
aaa
pop
cltd
push
iret
push
in
inc
cmpsl
lcall
xor
mov
movsl
cmpsl
imul
ds
jmp
mov
addr16
jnp
sahf
insb
cmp
repz
push
push
aam
gs
mov
fdivrs
pop
push
xor
xlat
std
mov
add
xchg
and
mov
lods
leave
iret
ds
jno
cmc
hlt
movl
and
mov
in
fs
jecxz
pop
pop
pop
mov
xchg
loop
in
lea
jo
fwait
stos
ret
cmp
enter
cmp
jecxz
adc
mov
lret
scas
xor
push
fisttpl
out
ret
sub
cmp
mov
pop
test
gs
sub
pop
fdivs
nop
push
lods
jno
aam
and
mov
and
dec
sub
dec
ljmp
loope
pop
orb
xchg
bound
popa
fs
sar
icebp
mov
pop
push
dec
sbb
pop
fisubl
jmp
lods
jge
adc
sti
dec
sub
int3
pop
cwtl
xor
jbe
sbb
jns
and
jne
mov
push
gs
adcl
dec
enter
mov
cmp
in
hlt
xor
jg
adc
and
pop
negb
test
in
inc
adc
xor
adc
dec
stos
push
imul
fnstsw
cmp
adc
mov
push
or
xchg
pushf
and
rorl
or
add
scas
daa
add
dec
scas
iret
pop
mov
aas
scas
in
fistps
mov
adc
cmp
pop
movsl
fisubs
enter
or
adc
addr16
dec
out
shlb
dec
jb
lea
lods
sti
adc
iret
loopne
insb
loopne
int
ret
call
jns
bound
mov
xchg
aaa
lcall
clc
and
or
fisubs
jo
in
loop
ret
mov
jg
testb
roll
icebp
test
rolb
int3
push
call
sti
dec
xlat
jns
in
dec
addb
int
xor
mov
aad
add
xchg
xlat
jae
add
adc
mov
inc
jle
sti
adc
add
xor
push
sarb
jne
add
mov
adc
adc
or
inc
jae
cmp
fcompl
stc
mov
cltd
or
je
stos
jns
xchg
and
or
loop
aaa
mov
xchg
mov
mov
jno
stos
rorb
fisubrl
cld
adc
gs
mov
hlt
iret
cs
shll
in
xlat
in
lea
mov
test
inc
mull
lret
repz
ja
lahf
cmp
jge
iret
mov
xchg
dec
int
mov
dec
sbb
xchg
es
jbe
loopne
mov
lods
addr16
aad
xchg
sarl
in
loop
mov
and
lea
xchg
lahf
pop
pushf
pop
xor
not
ret
call
xor
test
shl
test
js
push
lock
inc
mov
test
jp
push
lret
in
mov
cmp
lcall
rorb
cwtl
scas
jns
dec
adc
mov
mov
incl
pop
clc
cltd
sarb
cli
pop
sbb
cmp
clc
jle
rclb
xchg
xchg
push
out
jbe
xor
sbb
sti
adc
movsl
pusha
push
jns
es
pop
nop
or
aad
sub
test
cld
scas
je
clc
xchg
iret
pop
mov
xchg
das
xchg
add
bnd
je
out
pop
add
sbb
mov
enter
scas
mov
add
dec
dec
repnz
je
sbb
into
lret
roll
testl
jmp
out
ret
jge
movsb
and
cmp
push
jge
lods
icebp
inc
jbe
dec
mov
mov
mov
cltd
pop
and
cmp
cs
inc
pushf
mov
cltd
ret
inc
xor
loop
jle
test
enter
sbb
push
inc
jmp
jecxz
cld
xchg
dec
nop
cmp
add
scas
ljmp
push
stos
movsb
loope
inc
lods
mov
pop
pop
add
loopne
cmp
sub
sub
call
jg
repnz
test
aas
xchg
mov
mov
test
mov
in
cli
pop
lahf
lahf
pop
shlb
sbb
hlt
leave
xor
sahf
das
and
inc
sbb
and
dec
add
or
shll
or
jno
dec
les
stos
dec
outsb
test
cmp
jle
lods
loop
mov
xor
mov
mov
xchg
jo
ficoml
mov
push
mov
cmc
mov
push
jno
push
pusha
dec
mov
mov
fistpll
dec
sbb
push
pop
lods
push
xchg
fstp
pushf
mov
xor
cmp
int3
jmp
push
sbb
std
andl
out
scas
push
imul
fxch
lahf
mov
cmp
in
sbb
jle
xchg
fisttpll
and
add
xchg
xlat
sub
mov
popa
push
xchg
xchg
lds
adc
xor
mov
pop
xor
xchg
jge
ja
aam
and
in
jecxz
fs
cmc
pop
bound
sbb
push
sarl
jl
out
pop
cli
xchg
test
dec
or
and
orl
popa
and
pop
popa
push
xor
aaa
sub
add
sub
adc
mov
lahf
xor
jge
movsl
sub
daa
repnz
ss
cwtl
ds
xchg
jns
mov
sbb
loopne
pop
mov
cltd
lahf
mov
and
notb
pop
jnp
std
xchg
sbb
cli
push
inc
jmp
xor
pop
and
aaa
lea
in
and
add
dec
pop
out
and
pop
aam
test
jno
push
jnp
cmp
lods
movsl
loopne
in
clc
movsl
jbe
outsb
ret
jb
jbe
or
mov
and
lret
mov
lods
mov
xor
dec
sbb
mov
push
mov
int
in
add
cmp
sub
cmp
and
lahf
andb
mov
lret
loopne
test
fsubrp
pop
and
fidivrl
mov
or
and
mov
js
xor
cmp
inc
stos
movsl
pop
das
push
ljmp
jns
in
cs
pop
cmpsl
inc
pop
pushf
xchg
loope
sub
mov
sub
and
aad
mov
enter
fs
shll
or
xchg
or
scas
mov
outsb
call
xchg
sbb
pop
cmpb
lods
mov
sub
xor
fdivrp
adc
int3
add
gs
sub
sub
mov
aas
jge
sti
imul
fidivrs
add
daa
fstpt
cmc
fstl
inc
cmpsl
pop
pushw
mov
mov
data16
xchg
in
cmpsl
out
jl
dec
add
push
enter
add
dec
and
cmp
idivb
fisttpl
sbb
or
loopne
mov
jbe
roll
xchg
sub
fnstenv
pop
adc
sbb
sti
jo
jl
pop
mov
scas
dec
inc
movsb
repz
mov
sbbl
dec
jno
sbb
inc
xchg
inc
cwtl
sbb
push
jmp
push
and
sub
jbe
add
aas
hlt
lahf
pop
stos
pop
test
mov
xor
cmp
arpl
inc
and
fdivs
outsb
dec
mov
addr16
xchg
gs
jb
mov
out
sbb
add
fimull
inc
mov
enter
push
sarb
mov
mov
sbb
enter
jns
out
sub
scas
in
xchg
divl
fisttpl
imul
call
cs
popf
repnz
push
andb
inc
movzwl
inc
add
mov
dec
sbb
cmpsb
popf
sub
xchg
pop
xorl
rclb
mov
inc
jl
inc
fidivs
gs
in
cmp
jecxz
call
pop
push
shl
jp
out
pop
mov
or
or
mov
rclb
or
mov
xchg
insb
in
jp
mov
fucomip
filds
push
xchg
outsb
xlat
sub
push
call
dec
pop
leave
sub
in
and
sub
cmpsl
daa
loop
ljmp
sbb
push
fidivrl
repz
sbb
lret
cld
sbb
pop
orl
or
nop
dec
icebp
xor
repnz
and
adcb
xor
lahf
aam
in
mov
clc
fnsave
aaa
jae
in
push
or
mov
xchg
stc
into
or
push
mov
mov
cmpsb
repnz
pop
aas
add
sub
testl
mov
aam
or
imul
and
enter
aam
pop
or
push
dec
sarl
dec
ljmp
jne
imul
subl
pop
aad
pop
ljmp
or
push
dec
cmp
daa
addr16
faddl
imul
fs
pop
mov
adc
fldt
mov
mov
dec
int3
pop
mov
leave
daa
popf
sub
mov
inc
push
dec
inc
outsb
sub
test
and
xlat
pop
mov
jae
rcrl
ret
jb
lret
adc
cs
push
pop
mov
dec
les
pop
jo
mov
jo
out
cld
fwait
lea
lods
sub
mov
lea
sub
xchg
pusha
ret
mov
insb
sti
sbb
jp
xor
xor
sbb
sub
pop
lods
pop
add
sub
rcll
dec
shl
mov
divb
xchg
pop
rcrl
jae
lods
lds
add
jbe
not
push
xchg
mov
out
ret
xchg
cltd
jp
adc
mov
sahf
xor
call
mov
xchg
mov
dec
xchg
jecxz
mov
inc
push
loopne
rorb
addl
ljmp
pop
and
cwtl
pop
sbb
test
sets
ret
xor
jmp
divb
test
pusha
sbb
push
ss
sbb
add
lock
leave
xchg
dec
mov
or
inc
fsubl
and
push
std
das
xchg
jo
cld
insl
lods
jp
sbb
mov
adc
push
push
movsl
add
pushf
outsb
sub
andl
jl
xchg
cmc
and
xor
test
insb
dec
mov
cmpsb
or
inc
xor
inc
and
push
out
leave
inc
lret
jecxz
push
repz
and
xchg
js
pop
inc
dec
insl
pop
xor
xchg
xchg
in
mov
dec
or
je
test
mov
pop
movsb
push
shlb
mov
ss
mov
or
mov
iret
bound
mov
and
psubb
test
test
xchg
outsl
sub
dec
sbb
xchg
sub
adc
sbb
les
sub
mov
xor
pushf
incb
int
imul
jmp
jecxz
les
cmp
mov
cmc
dec
daa
mov
sysenter
mov
or
sbb
push
popa
lret
imul
mov
jo
imul
and
aad
pop
pop
movsl
sbb
cs
in
dec
lcall
xchg
mov
sbb
and
repnz
cmp
loop
push
fisttpl
ficoms
mov
mov
pop
fsubp
jg
sahf
out
mov
popa
rclb
pop
push
pop
lret
sbb
sub
movsl
add
adc
or
cmp
jl
movsl
add
push
mov
push
icebp
mov
clc
leave
ljmp
mov
mov
orl
aad
sti
cltd
lahf
sahf
jge
jae
push
add
pop
mov
movsl
repz
cltd
dec
mov
jno
adc
or
mov
pop
jl
or
popf
mov
pop
icebp
test
or
push
adc
dec
xchg
insb
aad
inc
repz
push
mov
or
or
cmp
dec
test
aas
push
xchg
icebp
adc
jp
ret
mov
or
aaa
sbb
out
xor
jns
pop
es
bsr
xchg
pop
hlt
test
in
repz
lret
or
inc
into
loop
mov
cmp
cmp
jecxz
inc
std
shll
popa
out
inc
aas
jb
mov
test
rcr
in
mov
mov
push
cmp
push
mov
dec
addr16
aas
scas
push
loop
push
pop
inc
xchg
ds
je
inc
sbb
repnz
or
imul
loope
arpl
adcl
mov
outsb
rcl
jp
ds
bound
pop
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
sti
shlb
cli
movsb
movsb
sbb
ss
pop
iret
ss
and
push
dec
push
movsl
shrl
das
ja
lods
push
xchg
movsb
inc
cmp
lahf
imul
daa
inc
ja
lret
rorb
in
jne
xlat
xchg
dec
and
loop
out
adc
movsl
jecxz
int3
out
out
sbb
mov
push
or
in
fldl
mov
dec
ds
js
mov
jp
sbb
repnz
js
mov
and
pop
lods
mov
aaa
push
mov
sub
mov
mov
pop
adc
sbb
lods
ds
pop
cmp
orl
jl
mov
xchg
cltd
insb
mov
aas
cmc
inc
in
cmp
in
inc
dec
xchg
or
sbb
adc
adc
adc
out
es
dec
ret
lods
cmp
ja
add
or
cmp
push
jb
movb
mov
and
add
mov
in
add
test
cmp
fnsave
sbb
inc
push
sub
lcall
and
icebp
lret
pop
insl
jge
and
and
mov
mov
movsl
cvttps2pi
inc
sbb
repz
mov
cmp
mull
lods
pop
sub
xlat
addb
fwait
sti
sar
mov
push
mov
lret
pop
pop
out
ss
test
sbb
jns
jnp
addr16
inc
movsl
mov
sbb
in
or
aaa
and
pop
push
inc
mov
xor
ficomps
out
xchg
in
mov
push
out
ret
or
and
push
lds
mov
and
cmpsb
xchg
mov
sbb
pop
rolb
inc
loop
cmc
jmp
dec
xor
mov
outsl
aad
pop
test
mov
push
insb
fwait
sti
dec
pop
adc
cmp
dec
xchg
aam
mov
pop
shrl
dec
les
cmp
ds
fcoml
xchg
pop
pop
je
popa
in
push
jnp
out
push
outsb
push
cmpb
jae
movsb
ja
fsubrs
push
xor
mov
arpl
clc
popw
push
pop
in
push
cld
mov
xor
pop
add
mov
mov
enter
scas
or
cmp
dec
or
or
adc
pop
cmpsl
cmp
mov
test
cmpsl
xchg
cmc
push
fsubs
mov
cmc
out
andb
sbb
repnz
rclb
or
mov
in
int3
xor
cmpsl
sub
int
stos
mov
je
addr16
jne
cltd
cli
xchg
in
notb
pop
sbb
xchg
xchg
mov
ret
fistl
add
les
dec
push
cmp
out
mov
adc
jno
xor
adc
mov
or
sbb
call
ror
xchg
jp
mov
inc
dec
fnstsw
loop
movsl
loop
addl
fs
std
test
sub
push
dec
lods
push
lds
mov
or
cpuid
aaa
movsl
cli
push
jbe
iret
test
push
jg
addl
adc
push
stos
cmpsl
sub
loop
mov
mov
outsb
or
xor
cwtl
push
loopne
push
mov
test
ljmp
push
pop
mov
aam
xor
jae
test
int
scas
pop
cmp
pop
pop
mov
lock
jbe
mov
mov
cli
outsb
add
pop
mov
jae
sbb
jg
fs
sbb
iret
mov
pop
cmp
sbb
push
and
mov
fimull
jae
mov
jnp
bound
sbb
stos
dec
adc
in
pushf
lahf
sbb
testl
add
jp
insl
sub
sub
mov
xor
mov
sub
hlt
jns
int
add
iret
mov
fs
int3
mov
nop
sbb
push
mov
cltd
push
data16
dec
lea
jne
dec
fnsave
inc
dec
xor
fdivrl
pop
scas
add
add
add
lahf
xchg
jbe
dec
addr16
outsl
enter
shlb
bound
or
lods
in
jle
dec
xchg
push
lahf
push
push
and
pop
add
dec
pop
or
loop
jb
addl
xchg
enter
xchg
insl
nop
jge
add
and
and
push
loope
inc
jb
inc
mov
rclb
ficompl
lods
push
sub
mov
in
paddusw
xchg
nop
ss
lret
ljmp
mov
out
jno
jbe
pusha
mov
xchg
sub
ficoms
insb
sbb
in
inc
nop
int
sbb
int3
or
dec
pop
outsl
pop
clc
pop
data16
fxch
adc
adc
push
pop
mov
and
mov
sbb
mov
push
xlat
call
ss
and
push
cmp
insb
jmp
xchg
xlat
adcb
bound
bound
pop
lea
mov
mov
xor
mov
getsec
int3
xorl
test
out
scas
jle
pop
mov
mov
fcomip
sbbb
subb
mov
cmp
mov
cmpsb
aaa
lret
ret
xchg
arpl
pop
pop
cs
mov
inc
dec
xchg
stc
xor
lret
pop
mov
or
pop
jne
in
inc
xchg
inc
xchg
pop
xchg
sub
push
lock
mov
jl
mov
fldenv
out
pop
cld
sub
ljmp
daa
add
jne
cmpsb
jae
add
mov
mov
jns
add
xor
push
push
adc
aam
sub
popf
sahf
out
sbb
inc
sub
sub
inc
xchg
out
sbb
xlat
sbb
sbb
lret
pop
mov
cmp
pushf
fs
inc
jae
and
loop
xchg
icebp
cmp
stc
or
mov
aam
xchg
jle
out
sub
daa
add
lock
test
inc
decl
add
movsb
inc
push
rcrb
in
lods
xor
jecxz
gs
push
ficompl
aas
cwtl
sub
ficoml
ficompl
and
les
fistps
scas
push
ja
push
lds
xlat
xchg
mov
es
dec
pop
jns
mov
rcrb
cs
mov
or
fs
imul
subl
les
stc
aad
xchg
je
cmp
and
sbb
bound
xor
rolb
inc
adc
jp
call
pusha
jmp
pop
jmp
outsb
addb
imul
cmc
ds
jnp
add
jecxz
mov
mov
mov
shl
cmp
cmp
xchg
sbb
add
jmp
adc
xchg
loop
call
cmpb
sbb
adc
cmp
in
push
push
dec
mov
xor
or
rclb
repnz
push
fdivs
cmp
xor
jmp
mov
int3
test
insb
inc
pop
xchg
or
movsl
push
lods
pop
jae
popa
push
stc
div
push
shlb
stos
and
pop
xchg
dec
gs
jb
dec
jmp
adc
pop
adc
out
xchg
push
cmp
dec
inc
mov
jmp
imul
popa
ss
lods
lret
subb
mov
cltd
mov
fldz
pop
add
in
dec
push
into
push
adc
faddl
outsl
std
sets
lods
int
xchg
inc
dec
pop
out
cmp
pop
cmpsb
dec
lock
adc
lret
sub
or
int
out
adc
adc
popa
pop
dec
cmpsl
and
mov
fsubrl
or
lret
arpl
mov
ret
das
cltd
ret
shrb
into
or
ljmp
shlb
cmp
push
andnps
sub
or
bound
out
sti
push
push
rcll
pop
ss
pop
mov
push
popf
sbb
je
mov
test
lds
xor
mov
xor
jb
lcall
mov
or
add
rcr
mov
into
iret
sbb
repnz
or
pop
add
icebp
and
mov
stc
out
push
adc
push
and
pop
fdivs
push
xorb
icebp
jle
stc
cmp
push
das
les
outsb
xchg
insb
and
popa
sbb
cmpsb
fsubrl
adc
mov
test
mov
idivl
int3
outsb
add
or
enter
push
test
fwait
test
iret
pop
inc
movsl
jge
frstor
mov
pop
push
in
cmc
mov
jb
aam
jns
mov
cmpl
push
xor
aaa
or
addb
daa
filds
jbe
xorl
out
test
xor
std
pop
sbb
mov
mov
imul
or
andl
mov
pusha
jl
and
je
ljmp
aas
dec
arpl
fcmovnbe
lods
pop
fneni(8087
sub
andb
fwait
enter
sbb
int
gs
arpl
bound
inc
xchg
jnp
popf
and
aam
jb
fisubl
xchg
mov
or
lahf
mov
or
pop
js
insb
sbb
outsl
and
mov
xchg
ljmp
mov
lds
mov
cmp
hlt
call
lahf
int3
sbb
sbb
test
push
push
xor
scas
neg
cmpsl
leave
into
test
mov
mov
pushw
cmp
cmp
ss
inc
shlb
jne
sbb
cmpsb
repz
adc
fisttpl
std
mov
adc
lahf
xlat
xchg
mov
or
adc
jl
adc
mov
insl
iret
add
mov
out
adc
cmc
sbb
faddl
mov
mov
push
or
mov
xchg
out
sbb
jbe
mov
hlt
loop
fucom
mov
pop
cmc
xlat
cmp
std
xchg
mov
ja
pop
stos
inc
call
or
pop
dec
push
adc
xchg
enter
das
mov
clc
mov
dec
cmc
jmp
mov
jmp
push
push
inc
leave
sub
aad
test
cmp
scas
je
das
movsb
outsb
mov
or
ret
fbstp
hlt
aaa
cld
jo
xchg
pusha
hlt
sbb
push
sar
xchg
lods
sub
cltd
adc
out
push
mov
jmp
sbb
leave
pusha
mov
ds
movsb
ret
push
xchg
push
push
cmpsl
cmp
in
mov
push
movsb
out
xor
pushf
test
in
inc
leave
movsl
xchg
incl
icebp
ret
ja
imul
sub
adc
xor
popa
cmp
xor
xlat
mov
xlat
jnp
push
cmc
loope
xlat
xchg
jb
jmp
cmpsl
xor
jns
loope
test
scas
or
leave
xor
scas
push
pop
adc
sbb
xchg
lods
repnz
je
repnz
adcb
cmpsb
test
jb
inc
and
add
out
pop
pop
mov
and
fdivl
rorb
lods
fucomip
pop
aad
sub
hlt
jle
mov
mov
in
xor
xorl
ficoms
rclb
rclb
push
std
mov
jle
mov
xorl
adc
dec
inc
dec
jmp
xor
fcmovnb
dec
push
ss
fimull
cld
in
and
add
clc
notl
mov
ret
pop
int3
pop
push
test
ficoml
and
scas
lea
mov
ds
gs
jo
inc
sbb
mov
or
jg
mov
mov
orb
dec
lret
cli
out
inc
ds
cmp
xchg
jle
jns
cli
or
jne
mov
xor
repnz
loopne
dec
lret
loop
jo
xor
or
fcoms
mov
insl
arpl
mov
add
push
sbb
mov
int3
xor
fidivl
push
js
mov
lock
ror
add
sub
daa
mov
sub
sbb
fiaddl
jo
add
push
xchg
sahf
popa
ret
popa
test
addr16
xlat
ds
scas
repz
pusha
jae
cmp
rorb
and
movsb
xor
sbb
fwait
out
pop
lret
xchg
into
into
ja
dec
xchg
out
and
clc
and
mov
jmp
xchg
inc
outsb
sarl
add
mov
pusha
push
das
rorb
jl
inc
or
mov
push
pop
fnsave
pop
adc
sahf
mov
sar
pop
xor
push
and
mov
sub
jb
loopne
inc
shlb
dec
inc
dec
push
or
insb
mov
xchg
sbb
xchg
ds
idiv
jb
mov
std
inc
pop
jle
out
bound
jno
sti
outsl
mov
lods
jo
jbe
hlt
add
testb
sbb
mov
and
in
fbld
shlb
or
and
xchg
mov
arpl
out
adc
and
outsb
fldenv
movsb
jno
enter
mov
mov
sarl
cmpsb
add
push
mov
and
hlt
add
mov
push
negb
test
sub
cltd
xchg
or
inc
cwtl
imul
mov
std
pop
dec
pop
test
imul
pop
inc
dec
cmp
cmp
js
adc
in
dec
push
inc
ss
push
aas
addl
sbb
repnz
jae
sbb
fidivs
scas
dec
popa
push
repz
sti
in
push
fcomip
or
out
insb
in
popl
or
lret
xor
std
push
jmp
in
mov
out
jg
shl
popa
inc
add
xchg
pop
sub
in
pop
mov
testl
jae
pusha
nop
repnz
std
push
js
pop
nop
pop
dec
stos
push
and
imul
lods
add
add
inc
pop
dec
pop
inc
mov
cli
hlt
cltd
lds
mov
or
mov
clc
push
inc
xlat
cmpsl
mov
sbb
imul
xor
hlt
mov
pushf
fwait
adc
imul
push
fisubs
jo
push
rclb
shrb
pop
cmp
sbb
mov
or
ljmp
out
cltd
push
jecxz
sub
sub
add
lds
mov
clc
dec
das
stos
xchg
imul
dec
and
lods
add
stos
push
jns
les
sub
jp
pusha
in
hlt
dec
mov
xorb
dec
push
sub
sbb
lds
cwtl
cmpsb
call
movsb
sbb
out
test
dec
sub
mov
adc
sbb
pop
fcoml
sbb
sbb
mov
mov
mov
mov
xchg
aas
cmpps
pop
sub
popa
sub
push
jns
or
add
out
loop
xor
or
and
xchg
sarb
pop
push
push
and
inc
aaa
pop
push
test
mull
arpl
daa
in
dec
subl
mov
lret
mov
sbb
xor
in
pminub
mov
sub
test
push
loop
notb
push
cltd
push
mov
lea
xchg
bswap
xchg
mov
dec
push
adc
out
outsb
adc
jbe
mov
sub
into
or
ja
mov
out
xor
lods
add
cwtl
dec
loope
sub
ret
filds
clc
xchg
jge
add
xor
lea
sub
mov
test
inc
fs
fildl
xor
mov
sub
aas
sub
xor
es
pusha
and
xor
mov
out
sbb
pusha
jno
cmp
icebp
in
cwtl
out
push
or
sbb
dec
dec
jbe
loop
into
xchg
jl
xor
popf
int
mov
xchg
dec
add
data16
sub
lock
imul
xchg
ljmp
xor
or
loop
cmpsl
mov
xchg
outsb
out
stos
fdivs
pop
mov
aad
mov
xchg
cs
mov
push
push
out
rcll
test
jnp
fists
xchg
lock
inc
jl
and
std
fcmovu
repz
dec
dec
mov
rclb
insl
orb
movsl
mov
pop
jle
cmp
fwait
stos
imul
cmp
jle
in
das
lock
jne
repnz
les
inc
in
arpl
insl
jns
pop
mov
push
lock
sbb
mov
outsl
inc
add
and
inc
fidivrs
mov
testb
insl
jle
ds
ret
fists
cltd
xchg
xchg
scas
cmpsb
lods
xchg
dec
xor
mov
lods
inc
sti
mov
mov
or
insl
pop
push
dec
mov
pop
in
bnd
cltd
movntps
mov
hlt
bound
imul
and
mov
jmp
inc
sub
nop
pop
mov
lcall
jp
dec
insb
leave
repz
fwait
call
icebp
and
jns
clc
in
pop
fisubrl
mov
mov
mov
sti
inc
cmp
loop
paddsw
push
xchg
sbb
repnz
or
push
pop
inc
jno
adcl
pop
cmpsl
sbb
mov
daa
sbb
andl
roll
stc
dec
xor
push
lret
pusha
mov
mov
adc
lods
insb
repz
or
js
mov
xchg
xor
xchg
movsl
pop
sbb
shrl
inc
xor
daa
daa
movsl
into
fwait
and
mov
mul
ret
lea
jns
sub
test
mov
pop
fidivs
es
xor
movsb
and
mov
mov
ret
aad
add
and
xor
out
nop
push
prefetcht0
add
adc
ds
dec
cmp
sti
ljmp
clc
fbld
xchg
int
stc
sbb
pop
push
lret
cmp
push
pop
xor
mov
dec
ljmp
push
xor
mov
jmp
mov
push
scas
ficoms
popf
popf
hlt
fs
shlb
fistl
pop
mov
dec
imul
mov
cmp
xchg
jae
nop
dec
and
lock
call
adc
std
sub
xor
xchg
push
push
in
cmpsl
mov
mov
stos
mov
pushf
negl
jge
lcall
cli
jno
lret
or
or
insl
les
mov
adc
inc
out
sar
frstor
mov
into
sub
aam
xor
aad
pop
adc
sub
sarb
shrb
and
cmp
or
pop
mov
sub
lods
in
and
or
mov
dec
cmp
jno
cld
jbe
pop
jbe
out
and
adc
enter
scas
imul
stos
daa
cmc
xor
mov
and
mov
pop
or
insl
clc
mov
xor
fstl
pop
lcall
add
lds
idivb
ret
lods
rcrb
sub
sub
test
into
mov
sbb
test
fwait
jmp
popf
in
mov
lods
mov
sbb
jne
sbb
push
push
out
mov
int
cmp
adc
stos
push
fmull
lods
sbb
call
lock
shr
jmp
or
into
push
inc
mov
mov
mov
pop
dec
pop
xchg
popa
bound
mov
fs
add
dec
ss
xor
sbb
xor
sarl
add
or
push
sbb
adc
data16
aam
inc
dec
fists
test
jbe
sahf
pop
addr16
ja
push
xchg
cmp
int3
cmpsb
mov
das
in
jbe
iret
data16
xchg
mov
add
jno
shll
add
or
insl
or
sub
pushf
sbb
jnp
movsl
cmp
dec
out
xchg
stos
sub
les
lds
gs
lea
das
fstpl
mov
das
pop
cwtl
dec
xchg
mov
jge
loope
icebp
push
rcl
nop
stos
jo
dec
add
test
arpl
adc
mov
mov
xchg
sbb
cli
sub
xlat
xchg
rcrl
lret
pusha
jg
pop
mov
andl
xorb
jae
pop
jb
in
mov
dec
push
test
cmpsb
and
rcr
xchg
mov
ja
sbb
outsb
fildl
mov
mov
adc
or
xor
mov
fnsave
pop
loope
adc
fidivrs
mov
inc
iret
ljmp
imul
in
xor
adc
mov
aad
push
push
imul
add
push
repz
xor
pop
cmpsb
int3
stos
jmp
cmpl
add
stos
mov
dec
adc
dec
aam
cmpsl
in
cmp
push
xor
sti
testl
data16
cmpsb
push
fstpt
adc
mov
inc
loop
mov
ret
testl
lret
rcrb
and
sarl
out
fnsave
ret
es
mov
mov
sbb
and
daa
dec
into
or
and
in
xchg
mov
cs
cmpsb
or
ljmp
dec
xchg
das
xor
xlat
dec
sbb
sbb
xchg
pop
fcoms
iret
and
pop
sbb
sub
mov
jl
loope
stos
push
jno
pop
aas
imul
rclb
pop
jl
add
mov
push
fcompl
inc
sets
add
jne
nop
push
or
xor
mov
push
jnp
push
add
dec
out
cltd
imul
int
xor
clc
loope
cmp
mov
rorb
cmp
aaa
xor
push
adc
leave
int3
jnp
adc
mov
loop
sbb
xchg
adc
mov
push
sub
xchg
sbb
xchg
pop
jl
data16
push
mov
fsubr
jp
inc
sarl
sub
popa
ficoms
dec
in
mov
xor
xchg
ljmp
cmp
mov
xor
mov
in
push
xchg
add
fidivs
loop
out
inc
inc
fistps
jmp
cmp
cmp
dec
inc
mov
arpl
shll
stc
jle
pop
xchg
repnz
jge
add
adc
ja
rolb
cli
and
filds
xchg
leave
lock
add
sub
js
or
jmp
aam
in
lret
cltd
les
xor
push
adc
fnstenv
mov
and
nop
add
call
fadds
and
ljmp
rcll
ret
jg
movsl
arpl
xchg
mov
pop
jl
xchg
jecxz
mov
subl
push
mov
stos
and
xchg
xchg
jns
loope
xor
cli
jo
mov
xchg
movsb
stos
add
jl
int
movsb
mov
and
je
fstl
cwtl
xchg
xchg
adc
inc
mov
and
mov
repz
mov
pusha
xchg
dec
fisubrl
stos
sbb
mov
scas
push
pop
and
xor
ljmp
sti
or
xchg
adc
mov
test
xchg
dec
frstor
fsqrt
ljmp
mov
sbb
mov
repnz
loopne
sub
cli
lods
xor
arpl
xchg
mov
loope
je
pop
in
xor
fbld
or
pusha
push
aam
cmpsl
mov
jp
test
mov
mov
push
rcll
jns
stos
pop
inc
outsb
pop
push
lcall
sbb
adc
iret
add
mov
cmpsl
mov
popa
outsb
push
fsubrs
cmp
jae
in
lahf
pop
sarl
ds
outsl
movsl
ret
inc
and
push
add
adc
sub
inc
add
pop
mov
sub
lret
jb
push
sbb
or
jp
lahf
rcl
int
in
movsb
mov
outsb
mov
push
dec
or
and
xchg
jo
cld
push
and
push
jmp
jle
pop
lods
jae
lods
outsl
add
popa
scas
arpl
imul
cwtl
push
les
cmp
jo
inc
inc
xor
xor
cmp
sub
mov
jb
adc
ficoml
push
in
inc
sub
sbb
rcll
cmpsb
push
mov
lcall
xor
aas
push
and
pop
lock
ficompl
insl
scas
xor
fimull
and
push
adc
sbb
stos
lods
cltd
push
pop
repz
clc
pop
insb
out
or
push
xchg
outsb
into
lahf
pop
inc
rorb
test
ja
aam
or
pop
fucomip
and
lahf
cmpl
fimull
clc
jg
in
enter
sub
and
jno
lock
xchg
decb
ljmp
leave
jo
xchg
jno
test
pop
mov
or
xor
jp
fucomi
or
adc
cmp
mov
stc
hlt
dec
test
push
jne
decb
sbb
popa
mov
push
jge
shlb
into
cmpsl
ret
mov
add
cmpsl
mov
mov
hlt
xchg
mov
test
jo
jns
mov
add
cmpsl
bnd
sub
or
divb
and
pop
sbb
pop
imul
stc
mov
movsl
gs
mov
sub
sti
pop
test
push
aad
xchg
add
xchg
movsb
xchg
xchg
pop
or
jbe
sti
cmc
fwait
sbb
add
xchg
and
popa
jae
mull
fs
dec
outsb
out
xchg
xchg
sti
fs
popf
dec
into
push
fisttpl
xlat
cli
pop
aaa
jno
test
iret
filds
mov
andl
xchg
cld
inc
outsb
subl
pop
popf
xchg
cwtl
mov
loopne
cmp
imul
jo
sub
mov
sub
mov
inc
pop
pusha
mov
loope
fistpll
mov
pop
push
outsl
inc
movsb
lret
mov
push
outsb
fs
addr16
adc
mov
or
mov
sub
movsl
xchg
xor
out
cmc
mov
mov
subb
mov
arpl
push
cmp
jb
mov
push
xor
sbb
shll
sbb
jnp
push
push
jb
dec
outsl
test
lock
push
jl
out
dec
mov
xchg
into
xlat
lds
cltd
and
jbe
mov
xor
mov
push
mov
pop
ds
movsb
ret
fldenv
fldenv
in
jmp
loop
shll
fisubrl
clc
inc
dec
rcr
sbb
mov
add
and
in
pop
scas
inc
inc
test
aad
fnstsw
jbe
pop
jmp
ret
pop
and
push
add
cmpsb
cmp
shll
sbb
add
jge
vpcmpgtb
jnp
adc
sbb
fs
mov
pop
je
mov
or
sbb
mov
and
mov
movsb
fcmovb
sbb
mov
jbe
fsub
dec
outsb
mov
mov
mov
iret
push
fidivrs
sbb
xor
dec
inc
jmp
xor
mov
mov
mov
cld
out
jecxz
dec
leave
lahf
or
push
jp
stos
stc
cs
js
dec
rorl
sbb
mov
addr16
imul
adc
pusha
jl
repz
cmp
sbb
iret
in
mov
pusha
dec
mov
push
inc
dec
cs
pop
mov
dec
inc
cmp
jo
or
or
imul
push
mov
sbb
aas
xor
dec
outsl
mov
clc
fimull
or
sub
enter
mov
jle
adc
adc
dec
and
jle
aas
lea
or
jo
cwtl
mov
xchg
iret
sti
cwtl
popf
out
dec
adc
xchg
mov
inc
jo
sahf
dec
mov
xchg
lock
bnd
jp
ljmp
iret
jl
cmpl
sti
test
mov
test
add
push
cli
mov
scas
adc
loopne
iret
push
shl
test
or
or
andl
push
inc
cmp
call
fadd
loopne
shrl
adc
in
xchg
call
sbb
xchg
aam
push
and
mov
popa
sub
int
stos
cmc
jbe
loope
adc
push
test
mov
test
test
pop
gs
pop
sub
push
cmpsl
popa
call
sbb
rcrl
mov
mov
dec
dec
cmp
jae
jp
push
lea
mulb
inc
or
jno
das
xchg
sbb
and
dec
mov
mov
inc
lcall
lods
imul
ja
sub
jbe
shll
ljmp
and
mov
adc
dec
fnsave
sub
xor
sub
push
adc
vmovdqu
push
xor
adc
sub
aas
jl
xor
pusha
idivl
pop
mov
or
jae
mov
inc
pop
push
lcall
lods
dec
inc
jne
imul
jnp
jnp
mov
and
addr16
mov
lret
jle
scas
push
imul
pop
jno
fnstcw
ss
and
cmp
adc
xchg
xchg
mov
pusha
xchg
mov
cmpsb
inc
icebp
jae
jo
daa
add
xchg
stos
or
loopne
adc
fnstsw
aas
js
into
mov
jo
lds
xor
dec
daa
mov
rcrl
push
cwtl
or
jno
mov
mov
add
jns
lock
jmp
sbb
orl
xchg
outsb
ret
inc
mov
mov
mov
fistpl
adc
xor
test
iret
icebp
dec
enter
dec
in
movsl
inc
mov
xchg
or
lds
inc
cmp
pop
and
cli
dec
cwtl
push
mov
add
popl
sub
mov
mov
test
xchg
inc
lods
and
in
jo
pop
nop
nop
sbb
or
scas
add
and
push
xchg
xchg
push
jbe
dec
cmpsl
bound
mov
movsl
in
ss
cwtl
in
dec
pushl
or
sub
xchg
xor
push
mov
cmp
cmpsb
fadds
or
pop
fwait
pop
test
fcomps
outsl
pop
push
es
sbb
push
mov
or
les
push
sti
pop
stos
xor
std
cmp
imul
dec
scas
arpl
sbb
push
and
adc
pop
inc
cmp
in
loop
push
add
imul
fs
push
or
cs
lods
sbbl
insb
cmp
add
aas
hlt
mov
in
je
mov
push
movsl
insl
and
insl
gs
cwtl
imul
cs
xchg
xchg
push
roll
into
into
repnz
in
pop
aam
xor
mov
xor
es
in
mov
divb
lret
cmp
sahf
mov
push
mov
mov
mov
outsb
in
jae
stos
out
adc
lock
les
sub
lea
sbb
fistl
pop
stc
jge
into
push
es
stos
shlb
lods
lcall
icebp
mov
push
imul
rclb
inc
sub
orb
ror
push
dec
mov
push
xor
notb
mov
clc
mov
adc
mov
outsb
mov
call
insl
mov
imul
bnd
mov
adc
clc
shl
xchg
or
clc
je
jmp
les
out
aam
dec
inc
lcall
mov
and
in
imul
andl
imul
or
popa
cmp
push
dec
sub
int
push
sbb
or
test
adc
jecxz
xorl
sub
jno
int
lods
mov
fs
pop
loope
jle
dec
xorb
or
rorl
aad
sub
stos
adc
mov
or
call
cmp
popf
mov
mov
or
xor
shl
inc
pop
sbbl
outsb
cmp
imul
loopne
push
leave
mov
sub
adcb
insb
dec
stos
xchg
push
sub
aas
fsub
xchg
scas
xlat
push
scas
nop
xlat
pop
pop
mov
lret
sbb
add
rcrl
pushf
scas
nop
push
push
adc
outsl
loope
pusha
jmp
je
mov
inc
aaa
je
push
jns
iret
sti
fs
lock
sub
inc
lar
shrl
pop
mov
enter
ljmp
mov
mov
add
fcomip
nop
push
cs
or
mov
add
add
add
add
inc
xchg
pop
pusha
add
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
add
pop
mov
