cmp
inc
or
lea
push
mov
movl
push
xor
mov
movl
call
mov
mov
lea
lea
mov
add
call
mov
push
mov
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
lea
call
lea
call
mov
test
je
cmp
je
mov
test
movl
je
call
mov
mov
cmp
mov
jbe
mov
mov
mov
lea
mov
add
call
mov
xor
mov
lea
mov
mov
movl
call
mov
mov
mov
mov
mov
lea
call
cmp
jae
mov
add
cmp
mov
je
mov
mov
mov
lea
mov
lea
add
call
mov
push
lea
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
mov
mov
cmpl
jne
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
xor
jmp
mov
test
mov
je
addl
mov
mov
test
mov
mov
je
call
mov
lea
call
mov
test
je
cmp
jne
mov
test
je
call
mov
test
je
mov
movl
call
mov
mov
addl
test
je
mov
call
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
test
push
mov
jne
mov
call
mov
mov
mov
mov
xor
pop
call
add
leave
ret
andl
mov
mov
mov
lea
mov
lea
mov
push
lea
movl
call
mov
lea
call
mov
mov
push
mov
call
pop
lea
call
lea
call
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
lea
mov
mov
test
jne
push
xor
cmp
je
push
mov
push
lea
mov
call
mov
mov
cmp
mov
je
mov
push
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
test
mov
js
cmp
jne
lea
call
xor
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
mov
mov
push
call
xor
jmp
mov
jmp
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
mov
andl
mov
cmp
mov
jne
push
lea
mov
mov
mov
call
mov
lea
push
call
mov
lea
mov
mov
movl
movl
mov
mov
mov
add
cmp
jne
mov
mov
lea
push
push
mov
call
fildl
fmull
fmull
fstps
flds
fadd
faddl
fistpl
mov
sar
cmp
mov
movl
jl
lea
fildl
mov
fmull
fstps
flds
fadd
faddl
fistpl
mov
mov
sar
mov
mov
add
mov
mov
add
mov
mov
mov
test
jne
test
jne
lea
call
mov
pop
pop
pop
xor
call
mov
pop
ret
test
je
cmp
jbe
push
lea
mov
call
mov
mov
mov
lea
push
push
mov
call
mov
mov
mov
mov
push
push
call
mov
mov
push
push
push
call
mov
mov
add
mov
mov
mov
add
add
push
push
mov
call
jmp
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
xor
lea
sub
jmp
lea
mov
cmp
jne
cmp
jb
mov
cmp
jne
add
add
add
cmp
jl
pop
mov
pop
ret
pop
xor
pop
ret
mov
movl
xor
ret
push
mov
sub
push
mov
cmpl
push
push
mov
je
andl
xor
inc
testb
movl
mov
je
mov
mov
mov
mov
mov
orl
mov
push
mov
mov
mov
call
mov
pop
lea
push
mov
call
test
jne
pushl
lea
push
mov
call
cmpl
mov
je
testb
movl
jne
testb
jne
xor
pop
pop
pop
leave
ret
push
call
test
pop
je
push
mov
push
push
pop
call
xor
movl
mov
mov
movl
mov
push
push
mov
call
pop
pop
jmp
xor
jmp
cmpl
je
pushl
mov
mov
push
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
test
je
add
mov
or
ret
lea
jmp
cmpb
jne
xor
ret
mov
push
call
mov
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
movl
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
mov
lea
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
mov
push
call
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
call
mov
push
call
mov
push
call
add
pop
pop
movl
pop
add
ret
movzbl
and
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
mov
call
test
jne
mov
mov
call
test
je
mov
test
je
lea
test
je
mov
push
call
xor
mov
mov
jmp
xor
jmp
push
mov
push
movl
call
mov
mov
test
je
push
call
add
mov
mov
mov
mov
test
je
mov
mov
test
je
push
call
add
testb
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
push
mov
or
lock
dec
pop
je
ret
movl
mov
mov
push
call
xor
ret
push
mov
mov
sub
push
mov
push
xor
mov
push
mov
call
pushl
push
call
mov
mov
push
push
pushl
lea
call
xor
cmp
jne
lea
mov
mov
mov
push
lea
add
call
mov
push
call
mov
lea
mov
test
je
andl
mov
push
mov
mov
push
lea
push
call
lea
push
call
mov
call
mov
cmp
mov
jne
cmpb
je
mov
call
testb
mov
mov
mov
mov
mov
movb
mov
mov
je
pushl
lea
lea
call
mov
mov
mov
cmp
je
cmp
je
cmpb
mov
je
mov
mov
push
mov
mov
push
call
cmp
je
mov
mov
call
mov
xor
cmp
je
andl
mov
orl
cmp
mov
je
push
mov
mov
mov
mov
call
mov
push
lea
push
lea
push
pushl
mov
push
push
lea
call
push
pushl
push
push
call
mov
test
js
mov
test
je
mov
mov
mov
xor
mov
mov
lea
push
lea
push
pushl
mov
mov
push
call
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
lea
push
call
lea
call
lea
push
call
xor
pop
pop
pop
leave
ret
call
cmp
je
mov
mov
mov
mov
mov
lea
push
lea
push
push
pushl
mov
pushl
mov
pushl
push
call
test
js
cmp
je
mov
mov
pushl
mov
call
mov
cmp
jne
lea
call
jmp
pushl
mov
call
cmp
pop
je
push
mov
push
push
pushl
lea
pushl
mov
push
call
mov
mov
movl
jmp
push
push
lea
push
push
push
pushl
lea
pushl
mov
push
mov
mov
call
mov
lea
push
push
push
call
jmp
int3
push
mov
xor
test
je
push
lea
mov
test
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
cmp
jne
mov
ret
cmp
jne
push
mov
test
je
mov
push
xor
test
lea
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
mov
pop
ret
jmp
xor
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
push
xor
cmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
push
call
cmp
mov
mov
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
je
mov
mov
mov
call
mov
mov
mov
pop
mov
pop
ret
mov
call
mov
call
test
je
jmp
push
mov
sub
mov
xor
mov
andl
andw
push
mov
lea
push
mov
mov
mov
push
lea
movl
movl
call
pop
push
call
mov
pop
lea
push
call
pop
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
xor
pop
call
leave
ret
push
mov
sub
push
xor
cmp
je
lea
mov
mov
mov
lea
mov
lea
push
add
push
push
mov
movl
call
mov
mov
mov
add
lea
mov
call
mov
pop
leave
ret
pushl
pushl
call
mov
jmp
push
mov
and
sub
cmpl
push
push
je
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
test
jne
push
lea
push
pushl
push
call
pop
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
mov
mov
movzbl
mov
call
andl
test
jne
push
push
mov
mov
mov
mov
lea
mov
push
push
call
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
cmp
jne
mov
mov
push
push
push
call
add
test
jne
inc
ret
xor
ret
mov
push
push
mov
push
pushl
or
push
call
mov
push
push
push
mov
call
test
je
mov
movb
mov
mov
push
pushl
push
call
push
push
pushl
call
movzbl
sub
je
dec
dec
jne
push
push
pushl
call
push
push
pushl
call
pushl
mov
push
call
pop
pop
ret
mov
mov
test
je
pushl
mov
push
call
xor
ret
push
lea
sub
mov
xor
mov
mov
push
push
mov
mov
push
mov
mov
xor
mov
push
lea
lea
mov
movl
mov
mov
mov
call
lea
push
mov
mov
pop
lea
mov
push
mov
mov
mov
mov
call
test
pop
js
mov
push
lea
mov
call
lea
mov
mov
lea
push
pushl
mov
mov
mov
mov
call
push
pushl
lea
pushl
push
lea
push
call
add
testb
mov
jne
testb
jne
cmp
je
mov
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
pushl
call
cmp
pop
pop
je
pushl
call
cmp
pop
je
mov
mov
mov
call
test
jne
cmp
jne
cmp
jne
xor
push
pushl
mov
call
lea
mov
call
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
cmp
je
mov
push
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
xor
inc
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
mov
cmpl
push
je
mov
mov
test
mov
je
mov
mov
call
mov
mov
orl
testl
jne
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
lea
push
push
push
mov
call
mov
add
cmp
mov
jg
mov
push
lea
push
call
mov
test
jle
mov
xor
lea
movzwl
cmp
jae
cmp
jae
add
add
cmp
jl
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
cmp
ja
jmp
lea
push
call
mov
add
lea
add
push
push
mov
call
mov
mov
push
mov
call
mov
mov
push
lea
push
lea
push
push
call
mov
cmp
jle
mov
push
call
test
je
movl
mov
mov
push
push
call
add
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
push
push
push
call
jmp
mov
mov
ret
mov
mov
jmp
push
mov
push
push
mov
mov
mov
push
mov
mov
call
test
jne
mov
push
mov
call
mov
push
lea
push
pushl
pushl
push
call
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
call
cmp
jge
mov
mov
mov
test
mov
movl
jne
mov
test
jbe
mov
cmp
ja
mov
test
je
mov
mov
mov
push
push
lea
push
push
push
call
mov
mov
test
js
mov
add
sub
mov
lea
jne
xor
pop
pop
pop
pop
ret
mov
test
je
mov
jmp
xor
inc
ret
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
add
call
mov
test
je
mov
push
call
mov
mov
xor
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
add
cmpb
jne
cmpl
push
lea
je
mov
mov
push
call
add
mov
pop
ret
push
mov
call
push
push
call
test
jns
jmp
int3
int3
mov
test
push
mov
je
mov
cmp
je
mov
push
push
push
call
add
cmpl
jne
mov
test
jne
push
push
push
push
mov
push
call
add
movl
pop
ret
mov
cmpl
jne
mov
pop
ret
mov
jmp
mov
lea
cmp
je
mov
cmpl
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
cmpl
jne
push
push
mov
add
cmp
push
push
je
mov
mov
cmp
jae
mov
test
mov
lea
js
movsbl
cmp
mov
jae
mov
add
cmp
jne
mov
mov
pop
pop
pop
pop
add
ret
mov
lea
push
push
lea
lea
movl
call
add
test
je
mov
test
mov
je
lea
add
lea
cmp
je
movzbl
mov
and
sub
sub
cmp
jne
and
mov
shl
add
or
test
mov
jne
cmp
jb
cmp
jae
mov
mov
jmp
push
mov
mov
andl
sub
push
push
mov
mov
cmp
jb
movl
xor
jmp
mov
mov
inc
call
test
je
movsbl
mov
jmp
andl
push
lea
push
pushl
lea
lea
call
test
pop
pop
pop
jne
mov
jmp
mov
jmp
dec
cmp
je
mov
mov
lea
push
push
pushl
inc
call
add
test
je
test
jne
mov
cmp
jb
cmp
jb
cmp
jbe
cmp
jb
mov
mov
mov
pop
pop
leave
ret
not
movzbl
shr
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
test
push
je
test
je
mov
lea
mov
movl
lea
mov
mov
mov
movl
movl
movl
mov
movb
call
test
js
mov
cmpl
jbe
xor
xor
nop
mov
push
call
mov
add
cmp
je
mov
mov
add
add
cmp
jb
mov
test
jne
test
jne
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
push
push
call
add
test
jne
jmp
push
mov
sub
push
push
lea
lea
movsl
movsl
movsl
movsl
call
test
je
mov
mov
xor
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
push
call
pop
pop
leave
ret
push
mov
and
sub
push
push
mov
push
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
lea
mov
call
test
je
xor
pop
pop
pop
mov
pop
ret
cmpl
je
mov
test
je
lea
push
mov
call
mov
mov
push
push
push
mov
call
cmpl
mov
mov
mov
je
push
push
push
lea
call
lea
push
mov
call
mov
lea
push
push
push
lea
call
xor
pop
pop
pop
mov
pop
ret
push
push
push
push
call
mov
push
lea
push
push
push
call
xor
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
mov
call
pop
pop
xor
pop
mov
pop
ret
test
je
testl
jne
call
testl
jne
mov
mov
push
pushl
push
push
call
ret
push
mov
push
push
mov
push
mov
push
push
call
test
js
push
lea
call
mov
mov
neg
sbb
and
add
test
mov
js
andl
push
lea
call
mov
mov
mov
lea
push
push
push
call
test
js
mov
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
mov
call
lea
call
mov
pop
pop
leave
ret
mov
cmp
je
mov
mov
lea
test
jl
cltd
idivl
mov
mov
mov
incl
mov
ret
call
test
jne
jmp
mov
test
je
incl
push
push
lea
call
xor
pop
ret
push
mov
push
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
add
test
je
mov
cmp
mov
jge
mov
call
test
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
incl
mov
lea
pop
pop
pop
leave
ret
cmp
jge
flds
fstps
jmp
push
mov
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
andl
push
mov
movl
movl
call
addl
add
cmp
jne
mov
incl
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
sub
xor
push
mov
mov
mov
cmp
jne
xor
mov
mov
movzwl
movzwl
cmp
ja
cmp
jbe
xor
mov
mov
test
jne
xor
mov
mov
movzwl
movzwl
lea
cmp
jl
shr
push
movzwl
test
push
push
jbe
movzwl
lea
lea
xor
mov
mov
mov
mov
jmp
lea
mov
movzwl
add
xor
mov
xor
mov
mov
mov
xor
mov
mov
movzwl
cmp
mov
movzwl
movzwl
mov
jbe
cmp
ja
test
movzwl
mov
movzwl
jne
mov
movzwl
push
push
push
call
add
cmp
jb
mov
push
call
xor
pop
pop
pop
pop
add
ret
movzwl
cmp
ja
mov
mov
mov
jmp
lea
mov
cmp
je
movzwl
shr
sub
movzwl
add
add
lea
cmp
jbe
mov
add
cmp
jae
cmpw
je
mov
mov
mov
mov
shr
cmp
jae
mov
mov
test
lea
je
mov
shr
and
add
mov
and
mov
shl
or
mov
mov
add
cmp
jbe
jmp
mov
sub
add
mov
call
test
mov
mov
je
mov
jmp
push
call
add
test
je
push
mov
push
push
call
mov
mov
mov
add
push
mov
call
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
push
mov
shr
push
shr
cmp
push
jae
cmp
mov
ja
mov
mov
shl
lea
mov
mov
test
mov
mov
je
cmp
jbe
mov
sub
mov
sub
cmp
jae
cmp
ja
mov
shr
lea
mov
and
mov
shl
add
or
cmp
jbe
mov
mov
mov
add
cmp
jbe
pop
pop
pop
pop
add
ret
mov
sub
add
mov
call
test
je
mov
jmp
cmp
movl
jbe
push
call
add
test
je
cmpl
mov
jne
xor
movzbl
push
push
push
call
mov
mov
mov
add
push
mov
call
add
cmpl
jne
mov
jmp
mov
jmp
lea
cmp
jb
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
test
mov
mov
lea
jbe
mov
mov
test
je
movl
add
sub
jne
mov
add
ret
xor
ret
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
mov
xor
lea
push
mov
mov
mov
movl
movl
mov
mov
call
test
je
mov
movzwl
cmp
mov
mov
ja
movzbl
jmp
lea
push
mov
call
push
call
pop
pop
test
jne
lea
push
pushl
call
testb
jne
testb
jne
xor
mov
pop
pop
xor
pop
call
add
leave
ret
fildl
push
push
lea
fdivl
fstps
flds
fstpl
push
push
call
add
lea
push
pushl
or
lea
call
push
pushl
push
pop
call
jmp
push
pushl
lea
pushl
xor
push
call
jmp
flds
push
push
fstpl
push
lea
call
jmp
mov
mov
cmp
jmp
push
adc
cmp
test
cmp
shrl
cmp
das
scas
push
adc
cmp
lcall
adc
add
add
add
add
add
add
or
push
mov
and
mov
sub
cmpl
push
push
mov
push
mov
jge
mov
xor
cmp
mov
je
mov
lea
push
push
push
call
test
js
cmp
jne
mov
movl
mov
test
je
push
call
pop
movl
cmpl
je
mov
mov
lea
call
mov
xor
push
lea
lea
movl
mov
mov
call
cmp
je
cmp
je
push
call
pop
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
lea
push
call
mov
pop
mov
cmp
mov
jne
push
push
push
lea
call
lea
mov
call
lea
call
lea
call
pop
mov
pop
pop
mov
pop
ret
xor
jmp
push
mov
push
test
je
mov
push
push
mov
call
test
jne
mov
pop
leave
ret
push
mov
sub
testb
push
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
pushl
mov
pushl
call
test
pop
je
lea
mov
mov
ret
push
mov
push
mov
mov
imul
push
xor
cmp
je
mov
cmp
jne
xor
cmp
jne
push
push
pushl
call
cmp
mov
jne
cmp
jne
mov
xor
inc
mov
shl
test
jne
imul
cmp
je
mov
cmp
jne
xor
cmp
jne
mov
mov
mov
dec
dec
je
sub
je
dec
je
dec
jne
push
call
cmp
je
pushl
push
call
mov
test
je
mov
push
push
call
mov
xor
inc
shl
not
and
mov
pop
leave
ret
mov
jmp
push
mov
and
sub
mov
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
mov
cmp
je
inc
mov
cmp
jne
call
call
test
mov
jne
mov
mov
push
push
call
test
je
mov
call
pushl
movl
movl
movl
lea
mov
movl
movl
movl
movl
call
mov
push
push
xor
push
pushl
mov
pushl
pushl
call
push
mov
call
pop
lea
push
push
push
pushl
pushl
push
call
mov
pushl
mov
mov
mov
pushl
lea
push
call
test
mov
je
mov
lea
push
push
push
call
mov
lea
mov
call
mov
pop
pop
pop
mov
pop
ret
pushl
pushl
call
pop
pop
mov
jmp
push
mov
mov
test
jne
test
jne
cmpl
je
push
push
push
mov
mov
xor
mov
call
push
lea
call
mov
push
lea
call
mov
push
lea
call
mov
mov
and
shl
xor
and
xor
mov
mov
shr
and
add
shr
xor
and
and
shl
xor
xor
and
xor
test
mov
jne
cmp
jne
or
xor
pop
pop
pop
pop
ret
shr
and
mov
push
call
test
je
jmp
mov
incl
mov
add
adc
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
test
push
lea
mov
movl
je
mov
sub
js
push
lea
mov
test
je
cmp
jae
mov
test
je
testb
jne
mov
sub
sub
test
jge
pop
push
call
mov
test
pop
pop
pop
je
mov
mov
push
mov
push
push
call
lea
call
add
ret
mov
push
lea
lea
movl
mov
movl
call
mov
test
je
mov
mov
push
mov
push
mov
push
push
mov
call
jmp
int3
int3
int3
int3
sub
push
push
call
mov
add
test
je
push
push
push
call
mov
add
mov
xor
pop
add
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
andl
push
push
lea
call
mov
lea
add
mov
push
push
call
pushl
andl
mov
lea
mov
call
mov
test
je
pushl
mov
push
call
mov
lea
call
lea
call
mov
pop
leave
ret
mov
mov
ret
push
mov
push
xor
movl
mov
call
push
push
push
mov
mov
push
mov
mov
push
mov
mov
push
pushl
mov
mov
pushl
mov
mov
push
mov
mov
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
mov
mov
testb
jne
push
lea
push
call
test
je
andb
cmp
je
lea
xor
cmp
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
push
call
add
test
jne
lea
push
call
test
je
push
mov
mov
call
test
je
mov
push
push
lea
push
lea
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
lea
push
call
push
call
test
jne
jmp
movzbl
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
xor
cmp
je
cmpb
je
mov
mov
mov
call
test
je
push
call
add
test
jne
mov
mov
mov
call
cmp
je
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
test
je
mov
call
cmp
je
mov
mov
mov
call
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
jne
push
mov
lea
mov
call
mov
cmp
je
lea
push
lea
movl
movl
movl
mov
mov
push
push
call
mov
test
jne
test
jne
cmp
jne
lea
call
mov
cmp
je
cmp
jne
push
mov
lea
mov
call
mov
mov
mov
push
push
mov
call
cmpb
mov
jne
mov
mov
mov
mov
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
mov
cmp
jne
push
call
add
cmp
je
mov
mov
push
mov
call
mov
test
je
mov
mov
push
call
test
mov
je
mov
mov
movb
movb
mov
mov
lea
call
mov
mov
cmpl
je
mov
test
je
cmp
jne
call
test
je
push
mov
call
lea
mov
call
mov
mov
push
call
lea
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
push
lea
call
push
lea
lea
call
lea
push
push
push
call
test
js
mov
test
je
xor
lea
call
test
je
mov
mov
push
lea
lea
call
lea
push
push
lea
push
call
test
jns
cmp
jne
mov
mov
push
push
call
add
cmp
jne
push
lea
lea
call
lea
push
push
lea
push
call
test
mov
jns
cmp
jne
mov
push
push
call
add
mov
mov
push
push
call
add
lea
call
xor
jmp
mov
add
call
jmp
push
mov
push
push
call
test
pop
je
andl
mov
movl
mov
test
mov
je
mov
push
call
push
pushl
call
lea
call
leave
ret
xor
jmp
push
mov
push
push
mov
mov
push
mov
push
push
lea
call
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
andl
push
pop
mov
test
jne
cmp
jl
andl
push
pop
mov
test
je
mov
cmp
jl
andl
push
pop
mov
test
jne
cmp
mov
jl
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
pop
xor
pop
pop
ret
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
mov
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
int3
int3
sub
push
mov
xor
mov
call
call
movb
flds
fimull
call
flds
fstps
mov
mov
mov
flds
fadd
faddl
fistpl
flds
mov
fstps
sar
mov
movb
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
sub
mov
xor
mov
push
mov
mov
push
xor
push
mov
mov
mov
mov
mov
call
cmp
je
push
push
mov
mov
mov
cmp
je
mov
mov
lea
lea
push
mov
mov
mov
push
push
mov
mov
movl
movl
mov
call
mov
cmp
je
cmp
je
mov
mov
test
je
mov
add
push
call
add
test
je
mov
cmp
jne
pop
pop
mov
pop
pop
xor
call
add
ret
mov
mov
cmp
jne
mov
jmp
test
je
jmp
mov
push
mov
call
add
test
jne
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
push
mov
mov
test
je
mov
test
jbe
andl
push
pop
mov
mov
test
je
pushl
mov
pushl
push
call
test
jns
incl
add
cmp
jb
mov
pop
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
test
je
push
push
push
mov
test
je
mov
mov
push
call
cmp
mov
je
cmp
je
cmp
je
mov
lea
call
test
jne
pop
pop
pop
pop
add
ret
mov
mov
mov
add
mov
mov
test
mov
je
mov
xor
test
mov
jle
mov
mov
add
mov
cmp
jne
cmp
jne
mov
cmp
jne
mov
mov
cmp
je
test
je
lea
push
lea
mov
call
jmp
mov
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
test
jne
push
push
mov
call
test
je
mov
mov
push
call
test
je
mov
mov
push
mov
call
jmp
xor
jmp
xor
jmp
addl
mov
add
cmp
jl
mov
jmp
mov
jmp
push
lea
sub
mov
xor
mov
push
mov
push
mov
push
call
test
je
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
push
push
mov
lea
movl
movl
movl
call
mov
test
mov
je
mov
push
lea
push
push
call
mov
xor
cmp
je
push
call
mov
mov
push
push
push
push
call
cmpl
mov
jne
push
call
andl
pop
xor
mov
cmp
jne
lea
call
lea
call
mov
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
movl
jne
pop
pop
pop
leave
ret
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
push
push
push
push
lea
movzwl
test
jle
mov
mov
mov
mov
lea
push
push
call
and
neg
sbb
not
and
mov
cmp
je
decl
add
cmpl
jg
xor
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
xor
push
mov
lea
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
je
pushl
pushl
call
test
pop
pop
je
push
lea
mov
call
push
lea
push
lea
push
push
push
pushl
pushl
pushl
call
add
test
js
cmp
push
mov
pop
mov
mov
movl
je
mov
mov
push
pushl
pushl
push
push
push
push
pushl
pushl
call
add
test
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
push
pushl
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
andl
test
je
mov
push
call
lea
mov
andl
test
jne
lea
mov
andl
test
jne
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
mov
push
call
jmp
push
mov
push
xor
cmp
je
push
mov
add
jmp
mov
add
cmp
jne
push
call
cmp
pop
je
mov
mov
mov
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
movl
mov
movl
je
push
mov
mov
cmp
je
movzwl
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
lea
push
call
mov
cmp
mov
je
mov
lea
push
push
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
movzwl
movzwl
push
pushl
or
push
lea
push
push
call
lea
call
lea
call
lea
call
movzwl
lea
xor
call
mov
inc
and
lea
mov
call
jmp
cmp
jne
testb
jne
testb
jne
pop
pop
leave
ret
mov
add
call
jmp
push
mov
sub
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
push
lea
call
mov
lea
push
push
call
pushl
xor
pushl
pushl
push
pushl
push
call
add
test
js
pushl
mov
lea
call
mov
xor
inc
cmp
jne
mov
push
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
push
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
pushl
call
pop
pop
pushl
mov
lea
mov
call
mov
cmp
je
pushl
mov
push
call
mov
pushl
mov
push
call
lea
call
jmp
test
jne
push
mov
pop
push
push
call
jmp
push
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
mov
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
movl
mov
test
jns
push
push
push
call
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
xor
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
push
mov
sub
push
mov
cmp
je
push
mov
cmpl
jne
cmpl
jne
pop
pop
leave
ret
push
mov
lea
push
push
call
cmpl
jne
test
jne
pop
jmp
lea
push
push
push
push
push
mov
mov
call
test
je
mov
mov
mov
call
cmp
jge
mov
mov
mov
add
pushl
mov
mov
call
mov
push
mov
call
pushl
mov
pushl
call
incl
mov
incl
cmp
jge
jmp
mov
mov
call
cmp
jge
mov
mov
push
push
push
mov
call
push
push
push
call
inc
cmp
jge
jmp
push
mov
mov
sub
push
mov
push
push
mov
mov
call
lea
push
pushl
pushl
push
lea
push
push
call
xor
cmp
je
mov
call
mov
mov
mov
call
mov
push
push
push
push
push
pushl
mov
lea
lea
call
mov
mov
cmp
je
cmp
je
xor
inc
mov
cmp
je
cmp
je
cmp
je
andl
cmp
je
cmp
je
andl
pushl
fldl
lea
fstpl
push
push
lea
mov
call
xor
add
cmp
mov
jne
cmp
mov
jne
mov
mov
cmp
ja
mov
jb
mov
mov
cmp
jbe
mov
lea
push
mov
sub
push
pushl
call
fstps
flds
push
fstps
call
mov
pop
mov
cmp
mov
je
cmp
je
add
cmp
jg
mov
cmpl
mov
je
push
pushl
lea
pushl
pushl
call
add
cmp
je
lea
push
mov
sub
push
mov
push
call
fstps
flds
push
fstps
call
pop
mov
mov
xor
cmp
jne
cmp
jne
mov
inc
cmp
mov
jbe
cmp
jae
push
dec
push
lea
call
mov
sub
mov
mov
call
mov
lea
call
pop
pop
pop
leave
ret
cmp
je
mov
testb
mov
je
movzbl
cmp
movl
je
mov
cmp
je
mov
testb
mov
je
movzbl
cmp
movl
je
mov
cmp
jne
cmp
je
jmp
andl
xor
inc
jmp
mov
jmp
mov
jmp
mov
jmp
andl
jmp
mov
mov
push
push
mov
shr
and
jne
movzbl
movzwl
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
je
xor
pop
pop
ret
call
neg
sbb
inc
jmp
mov
cmp
je
cmp
je
test
jne
xor
inc
jmp
call
jmp
push
mov
push
push
push
push
mov
mov
xor
cmp
push
jne
mov
cmp
jne
mov
cmp
mov
jne
lea
movl
lea
push
push
push
movl
mov
call
push
push
push
call
add
add
decl
jne
lea
mov
cmp
jne
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
cmpl
je
mov
cmp
jge
xor
xor
cmpb
jne
add
add
cmp
jb
mov
ret
cmp
jne
jmp
mov
sub
je
sub
je
sub
jne
jmp
mov
push
call
jmp
push
mov
sub
push
mov
push
mov
push
push
pushl
call
test
jns
push
xor
cmp
ja
movzbl
mov
jmp
movl
jmp
push
lea
push
push
push
movl
call
movzbl
and
mov
mov
pop
pop
pop
leave
ret
movl
jmp
mov
movl
jmp
call
jmp
mov
jmp
mov
movl
jmp
movl
jmp
call
neg
sbb
inc
jmp
push
mov
call
test
jns
jmp
mov
jmp
mov
jmp
push
call
pop
jmp
lea
xor
push
adc
roll
adc
roll
adc
aaa
aas
adc
aaa
aas
adc
rolb
adc
push
adc
aaa
aas
adc
aas
adc
aaa
aas
adc
aas
adc
push
adc
push
adc
push
adc
push
adc
roll
adc
aas
adc
aaa
aas
adc
rolb
adc
push
adc
roll
adc
add
add
add
pop
add
or
or
movups
adc
adc
inc
and
mov
mov
test
je
mov
call
test
je
pushl
mov
push
push
call
ret
xor
jmp
push
push
mov
mov
mov
mov
call
test
je
cmpb
jne
mov
mov
call
cmp
je
pop
pop
ret
push
mov
push
push
push
mov
push
push
mov
lea
mov
call
mov
lea
call
mov
mov
mov
mov
movb
movb
fildl
xor
cmp
fidivl
push
setne
mov
fstpl
call
test
pop
je
flds
lea
push
lea
push
movzbl
push
push
movzbl
push
push
fstps
pushl
fldl
push
push
movzwl
fstpl
push
movzwl
push
movzbl
push
mov
call
pushl
mov
push
mov
mov
push
call
test
je
incl
mov
test
mov
jne
mov
mov
call
cmp
pop
sbb
pop
and
pop
leave
ret
push
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
flds
lea
fstps
push
lea
push
call
add
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
push
mov
movl
jne
mov
push
call
add
testb
movl
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
xor
cmp
je
mov
mov
cmp
jne
cmpl
push
mov
movl
jne
mov
push
call
add
push
movl
call
add
pop
mov
mov
pop
pop
pop
ret
push
mov
call
mov
mov
pop
pop
pop
ret
push
mov
mov
test
movl
je
mov
push
call
andl
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
xor
sub
cmp
je
cmp
je
push
mov
cmp
je
mov
cmp
mov
jne
mov
mov
push
lea
lea
movl
mov
call
mov
pushl
mov
mov
push
pushl
push
call
lea
mov
call
mov
pop
leave
ret
push
mov
mov
sub
test
je
andl
push
push
push
mov
mov
mov
test
jbe
andl
movl
mov
mov
mov
test
je
andl
push
lea
call
mov
test
mov
je
mov
push
call
mov
lea
push
pushl
push
call
cmpl
jne
lea
call
incl
addl
cmp
jb
pop
pop
xor
pop
leave
ret
mov
mov
mov
push
call
lea
call
jmp
push
mov
sub
push
mov
orb
xor
cmpl
push
sete
andl
push
push
push
mov
mov
mov
lea
push
call
test
jne
lea
call
jmp
mov
call
test
jne
push
inc
mov
call
test
je
push
call
test
pop
je
cmp
add
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
hlt
add
jge
call
andb
xor
inc
pop
pop
pop
leave
ret
push
mov
mov
test
je
mov
cmp
jne
mov
mov
mov
xor
pop
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
add
lock
xchg
mov
enter
add
js
add
add
mov
add
lods
lods
aad
enter
pop
rcrb
add
loope
mov
add
xchg
hlt
iret
cltd
les
jnp
add
jae
sti
mov
add
hlt
push
mov
add
push
push
push
push
push
push
push
push
push
call
add
push
pusha
iret
in
pop
mov
add
add
popa
push
loope
add
add
xchg
add
add
add
hlt
je
add
add
pop
lds
inc
in
push
push
push
push
push
push
push
lea
push
lea
push
push
call
enter
cli
add
mov
add
stc
ja
in
popl
add
add
cli
jo
cwtl
push
push
fstpl
mov
pop
in
add
call
lcall
push
push
push
push
push
push
push
push
push
push
call
add
add
insb
add
push
jne
lock
push
xchg
push
add
add
cli
add
incb
add
add
add
add
cltd
add
subb
mov
add
jp
in
fdivr
lcall
push
push
push
push
call
add
mov
add
add
mov
pop
pop
add
add
in
add
clc
mov
pop
movsb
add
scas
sahf
add
add
add
aam
insb
add
add
add
cltd
ljmp
out
fadds
mov
add
sub
pop
push
push
push
push
push
push
push
push
lea
push
push
push
call
add
xchg
add
fs
add
mov
stos
imul
jo
push
xchg
int3
add
out
xchg
add
iret
jge
add
lcall
int3
add
add
sqrtps
push
push
call
mov
out
sahf
int
add
pop
mov
jl
add
mov
xchg
mov
add
lock
in
add
loope
out
sub
pop
push
call
push
push
push
call
add
add
mov
jnp
jge
sti
xchg
popa
out
add
add
enter
icebp
mov
add
add
bound
mov
pop
stos
add
jne
fdiv
add
mov
add
loopne
flds
add
add
popa
add
mov
push
mov
add
add
xchg
add
fistpll
hlt
pop
jmp
ret
push
lea
push
lea
push
lea
push
push
push
call
add
add
mov
add
mov
sti
add
jae
frstpm(287
je
xchg
add
mov
add
imul
add
jae
push
scas
push
add
incb
mov
mov
add
sub
pop
mov
push
lea
push
call
popf
add
add
fwait
std
arpl
add
mov
mov
pop
rolb
mov
add
add
add
pop
mov
push
jns
icebp
add
add
add
in
clc
pop
mov
push
push
push
push
push
push
call
add
int3
add
add
hlt
push
fildl
add
repnz
jb
add
jmp
test
pop
outsl
add
add
lods
mov
add
add
jb
add
roll
cli
mov
mov
mov
add
scas
pop
add
add
call
add
add
push
push
push
call
dec
jmp
add
sahf
add
xlat
xlat
xchg
je
in
add
mov
push
mov
xchg
add
add
lret
jmp
in
hlt
pop
add
push
push
lea
push
lea
push
lea
push
push
call
xchg
add
add
mov
add
jns
in
lahf
in
add
pop
jecxz
add
add
add
push
pushf
push
lock
add
add
sub
pop
mov
push
push
push
push
push
lea
push
push
push
push
call
data16
add
cmpsl
mov
add
mov
add
push
push
pop
jns
add
mov
mov
add
add
mov
mov
cmpsb
add
in
loopne
xor
push
push
lea
push
push
lea
push
push
push
call
cmpb
addb
jb
mov
add
mov
push
mov
data16
xchg
add
jne
add
add
add
pop
into
test
pusha
arpl
aad
mov
in
in
add
push
push
add
sub
shr
push
and
add
lea
sub
sub
pop
rol
pop
push
push
push
call
add
scas
nop
lret
add
push
add
cmc
cmpsl
in
loope
cmpsl
rcr
add
add
aad
add
push
roll
add
shlb
lds
addr16
jmp
imul
add
mov
fsubrl
add
pushl
call
push
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
add
test
add
add
adcb
js
fnstsw
xchg
add
add
std
call
add
sahf
add
jl
mov
mov
leave
add
cli
add
lds
loopne
add
fiadds
mov
pop
loopne
movsl
cli
in
pusha
add
add
lret
data16
shll
stos
pop
sub
pop
mov
push
push
push
call
lret
add
int
loop
scas
xchg
xchg
mov
lret
jmp
add
fildl
mov
add
push
add
add
xchg
add
test
clc
stos
int3
shlb
add
leave
add
fwait
jne
fsubrl
xchg
lcall
inc
call
push
push
call
add
mov
cmpsb
add
mov
add
divl
flds
jp
leave
sti
add
rolb
add
add
add
out
mov
in
pop
rcll
add
sub
pop
lea
push
lea
push
push
push
push
push
push
push
push
call
roll
je
add
scas
add
cld
js
add
pop
mov
mov
add
in
std
out
add
mov
add
aad
add
jnp
add
add
push
addb
add
lcall
push
lea
push
push
push
push
push
push
push
call
fidivrl
add
add
mov
sahf
add
add
mov
add
add
test
mov
add
add
scas
add
lcall
jne
push
push
lea
push
push
push
lea
push
push
push
push
push
call
xchg
mov
rolb
push
mov
push
stos
add
push
add
push
loop
add
push
addl
movsb
jbe
add
iret
add
jb
sub
pop
pushl
push
push
lea
push
push
call
loope
add
jae
add
push
out
mov
add
lcall
mov
add
popf
arpl
jbe
add
add
add
fisubl
add
push
push
call
add
add
out
mov
add
mov
xchg
xlat
add
add
in
out
mov
add
jb
faddl
out
jne
imul
in
clc
pop
pushl
push
lea
push
push
push
push
lea
push
lea
push
call
pushf
add
pop
cld
xchg
std
add
add
add
icebp
add
add
add
jne
push
push
lea
push
push
push
push
call
mov
rclb
jns
aad
add
xchg
call
jnp
pop
add
data16
add
fwait
add
jns
lods
add
cmc
jo
mov
add
add
xchg
add
add
xchg
add
sub
pop
call
push
push
push
and
add
shl
lea
sub
add
add
rol
pop
sub
rol
pop
push
push
push
call
cld
lret
push
in
add
pop
into
mov
xlat
add
pop
jecxz
jmp
xchg
add
out
mov
add
cltd
out
std
cmpl
in
hlt
lcall
jne
push
push
push
push
push
push
lea
push
lea
push
call
loop
repnz
jmp
xchg
gs
add
add
jmp
lods
add
jle
add
fs
testb
mov
mov
in
loopne
call
push
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
fs
jo
imul
xchg
add
xchg
add
jge
test
add
xlat
add
lock
add
add
add
pushf
sahf
mov
mov
add
in
fcompl
inc
push
push
shl
shl
dec
dec
push
or
not
add
lea
rol
dec
sub
add
ror
inc
pop
xor
sub
pop
push
push
call
xlat
xchg
push
add
outsl
mov
hlt
into
pop
mov
outsl
pop
pusha
add
nop
add
lret
test
shlb
add
popf
add
xchg
repnz
add
jecxz
shlb
stc
xchg
add
pop
mov
scas
mov
scas
fucomi
add
add
je
add
movb
pop
push
push
push
push
push
push
lea
push
call
add
xchg
insb
lock
pop
mov
add
test
add
mov
add
mov
xchg
add
push
add
scas
add
add
pop
mov
add
add
mov
add
push
aad
add
add
cmpsb
icebp
sub
pop
call
mov
push
push
lea
push
call
xchg
add
add
mov
rol
test
pop
add
add
add
addb
add
add
pusha
shlb
add
sub
pop
push
push
push
push
push
push
push
call
cwtl
jne
add
push
mov
add
fmul
ret
add
clc
add
push
outsl
mov
add
add
push
loopne
mov
push
fsubs
in
add
add
add
add
jno
addr16
add
in
pop
icebp
add
imul
cld
sub
pop
mov
add
push
push
push
push
push
push
push
push
push
push
call
in
xchg
lahf
in
xchg
add
les
pusha
add
mov
out
sti
add
add
add
add
jns
add
cltd
popl
lcall
ret
add
add
push
push
call
mov
nop
fcmovnbe
add
mov
int
je
add
roll
lret
icebp
bound
ljmp
std
lahf
lret
mov
push
add
jl
add
push
add
add
add
add
rolb
arpl
push
push
call
add
mov
add
mov
mov
add
cmpsl
into
je
mov
add
mov
imul
add
mov
add
xchg
xor
jno
adc
dec
push
push
lea
push
lea
push
push
call
pop
pushf
jns
add
cli
loope
not
rcl
xchg
add
add
mov
xlat
add
push
add
add
add
icebp
sub
pop
xor
push
lea
push
call
outsl
mov
add
pop
add
add
movsb
test
xchg
cmpsb
int3
call
notb
mov
test
sub
pop
add
push
lea
push
lea
push
push
push
push
push
push
push
push
call
int3
out
cltd
test
iret
add
add
add
mov
lods
push
xchg
add
add
movb
add
enter
xlat
add
mov
add
add
add
mov
add
js
aam
add
add
mov
testl
aam
sub
pop
add
push
push
push
push
push
push
lea
push
push
call
mov
add
add
add
add
add
add
mov
add
add
cmpsb
js
pushf
out
xchg
add
int3
mov
add
repnz
xchg
add
add
jno
push
jmp
fwait
arpl
pushf
add
add
add
cmpsl
stos
add
mov
movsl
add
mov
xor
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
jbe
pop
imul
cmpsl
aad
fiadds
jb
testl
add
add
stos
add
sbb
bound
add
add
add
add
in
loopne
lcall
lock
push
push
lea
push
push
call
negl
cltd
ffreep
ret
mov
add
add
add
pusha
add
int
add
movsb
lcall
in
add
ret
mov
sub
pop
pop
push
push
push
lea
push
push
call
add
fisubs
testb
rcl
fwait
xchg
add
loop
xchg
ror
add
fldl
push
add
rolb
pop
cwtl
pop
inc
push
into
add
scas
jnp
test
xchg
insb
std
lret
mov
add
add
jmp
jecxz
mov
add
pop
out
popa
lods
jmp
pop
mov
push
push
lea
push
push
push
push
lea
push
lea
push
call
pop
mov
add
ja
add
add
mov
arpl
ret
test
xchg
ja
add
add
mov
fidivrs
data16
xchg
add
fdivs
add
mov
mov
xchg
ljmp
in
in
lcall
or
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
jae
std
add
add
arpl
mov
mov
xchg
mov
xchg
add
add
add
mov
add
mov
mov
out
xchg
movsl
add
add
lret
addl
mov
jecxz
js
call
test
sub
pop
add
push
lea
push
lea
push
push
push
push
push
lea
push
push
push
call
fbld
movb
insb
les
imul
mov
jne
clc
jmp
in
jb
mov
add
jne
add
add
mov
jno
lds
mov
add
lcall
push
push
call
add
ret
add
lret
add
add
arpl
jb
jo
cmpl
jno
out
fisttps
mov
in
aam
in
clc
pop
mov
xor
push
push
push
push
lea
push
push
push
push
lea
push
push
call
movl
push
popa
loop
add
std
cmpsl
add
lock
add
jmp
add
add
sub
push
push
push
call
push
xchg
loopne
mov
add
mov
lret
fwait
add
shl
stos
ja
lahf
add
add
jns
stos
pushf
add
insb
add
loopne
fildl
add
mov
rol
lea
in
hlt
pop
pop
push
push
push
lea
push
call
lret
xchg
testl
add
pop
pop
mov
outsl
add
test
fcmove
rolb
popl
add
jmp
flds
test
mov
pop
int3
mov
addl
push
mov
test
pop
mov
add
add
add
add
xchg
xchg
add
add
add
add
pop
sub
pop
rep
pop
push
lea
push
push
lea
push
lea
push
lea
push
call
mov
leave
clc
mov
add
add
pop
mov
popa
lret
xchg
lahf
add
add
add
push
ja
add
mov
add
jns
xchg
lods
mov
add
mov
mov
add
mov
out
mov
movb
aad
add
mov
test
faddl
sub
pop
mov
add
push
push
push
push
lea
push
call
in
lret
add
add
pop
add
add
add
add
add
add
cmpsl
add
loopne
xchg
add
mov
add
mov
xchg
cmpsl
les
cmpsb
add
cmc
lcall
pop
add
add
push
push
call
add
pop
push
mov
sarb
add
mov
sti
loopne
add
sahf
add
loopne
fwait
add
add
lods
popa
mov
add
insb
add
add
fiadds
lcall
inc
and
jno
adc
mov
mov
push
push
push
push
push
call
fiadds
testl
lret
mov
fwait
rcl
call
loopne
jecxz
flds
jmp
mov
add
add
ret
mov
mov
add
faddl
add
in
cmpsb
imul
pop
xor
push
push
lea
push
lea
push
push
push
call
xchg
fistl
add
fnstsw
add
loope
mov
orb
add
jge
call
add
popa
add
testb
in
call
add
push
push
call
add
xor
roll
jmp
loope
sti
mov
pop
into
mov
lret
mov
pop
xchg
mov
sub
pop
mov
push
push
push
lea
push
push
push
push
push
call
jno
into
aad
push
stos
mov
mov
shll
ljmp
add
add
add
int3
mov
lods
xchg
mov
sbbb
add
je
in
xchg
sub
pop
xor
push
push
push
lea
push
push
push
push
push
push
call
fsubs
jmp
lock
add
cwtl
rolb
xchg
add
push
add
add
movsl
mov
mov
add
xchg
add
add
add
add
add
roll
add
cli
lods
cwtl
add
rcr
add
add
add
push
sub
pop
add
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
add
movsl
aad
in
xchg
add
add
ja
add
mov
rcrb
add
flds
add
add
sahf
lea
add
add
add
into
stos
add
pop
add
fdiv
je
in
fcomps
dec
sub
adc
pop
push
push
lea
push
lea
push
push
lea
push
push
push
push
lea
push
call
xchg
add
loopnew
add
add
mov
add
int3
sahf
ja
out
lods
add
cld
push
add
data16
add
xchg
add
addr16
mov
add
cmpsl
add
in
fdivr
lcall
ret
ss
call
push
jo
mov
scas
add
repnz
popf
add
add
in
stc
mov
add
add
jae
mull
pop
add
mov
mov
add
in
hlt
pop
add
push
lea
push
push
push
call
cmpsl
shlb
add
pushf
add
imul
ljmp
add
enter
cld
rcr
jmp
scas
xchg
ja
add
push
add
add
add
les
add
push
add
in
sub
pop
mov
push
push
add
add
inc
push
xor
add
rol
sub
sub
sub
sub
xor
pop
sub
pop
push
push
call
jl
pop
add
add
add
fwait
add
push
mov
mov
lret
add
frstor
aad
pop
pusha
mov
int
int
add
add
jns
add
add
mov
add
jge
loop
add
out
shll
loop
int3
sub
pop
pushl
call
push
push
call
mov
xchg
add
push
pop
add
add
fstps
add
jno
mov
fsubs
addl
sub
pop
push
push
push
shr
push
and
add
dec
add
sub
sub
shr
pop
pop
push
push
push
push
push
lea
push
push
push
call
mov
test
add
add
testl
loop
jbe
add
andl
mov
out
add
add
add
mov
pop
add
mov
lock
mov
pop
sti
mov
mov
add
les
add
test
sub
pop
push
push
push
push
call
jns
push
mov
shrb
testb
filds
repnz
add
pop
mov
add
add
pop
mov
jo
add
aad
fiadds
icebp
rolb
add
add
add
les
add
cmpsl
add
stos
je
imul
xchg
mov
rorb
push
lea
push
push
push
push
lea
push
push
call
add
scas
decb
mov
add
roll
mov
rolb
pusha
jmp
into
add
stc
lea
add
aad
cmpsl
mov
jo
sahf
mov
fildl
movl
xchg
call
lcall
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
add
add
leave
mov
jmp
push
pop
add
mov
add
add
mov
lea
add
jmp
test
jae
add
add
imul
outsl
mov
fucomi
out
lds
add
in
stos
pushf
movsb
lea
lcall
push
lea
push
push
push
lea
push
push
call
add
jnp
rolb
add
mov
divl
add
in
jmp
popa
bound
add
jp
lahf
push
iret
arpl
iret
rolb
test
mov
mov
add
add
in
scas
repnz
cmc
fs
add
push
fadds
idivb
out
add
add
flds
add
sub
pop
mov
add
push
push
push
call
lock
pop
pop
mov
add
clc
add
mov
add
jmp
push
jns
xchg
lcall
add
sub
pop
add
push
push
lea
push
push
push
lea
push
lea
push
push
call
stos
iret
leave
jbe
add
add
push
add
add
add
push
ljmp
mov
mov
add
popf
imul
jae
xchg
lea
add
ret
arpl
mov
xor
push
push
push
push
push
push
push
push
push
call
call
in
outsl
fcmovnb
add
int
jnp
lret
lock
add
aam
mov
add
mov
roll
rolb
ficomps
ja
movl
shlb
add
fdivr
lcall
jne
push
push
push
push
push
lea
push
push
push
push
lea
push
call
add
add
lahf
add
add
add
test
aam
lret
jmp
ljmp
add
call
popa
add
add
add
gs
pop
add
in
add
add
add
sub
pop
mov
push
push
push
push
push
push
push
push
call
out
call
out
xchg
js
jecxz
filds
add
gs
mov
mov
add
add
cli
stos
shll
add
movsl
lock
add
movsb
mov
sub
pop
xor
push
push
push
lea
push
push
call
xchg
imul
mov
add
add
fmuls
add
add
xchg
add
xchg
add
sub
pop
add
push
push
push
lea
push
push
lea
push
call
push
lret
movsl
lret
shlb
test
mov
arpl
mov
xchg
add
add
loope
xchg
movsb
add
xchg
push
in
popa
add
cmc
cmpsl
lret
xchg
fidivs
xchg
test
pop
notl
pop
add
push
push
call
add
out
add
add
add
add
stos
sti
push
add
mov
add
nop
add
add
push
jae
xchg
add
add
cltd
call
mov
stos
jge
push
add
jmp
out
imul
add
test
add
jecxz
mov
test
arpl
jnp
mov
lods
lret
add
clc
pop
pop
push
push
push
push
call
add
push
add
add
add
clc
fwait
add
add
add
fwait
push
add
push
pop
stos
mov
mov
add
add
add
add
xchg
loopne
add
std
add
aad
add
sub
pop
mov
xor
push
push
push
push
call
add
push
fiadds
pop
add
clc
jnp
add
add
add
aam
std
loope
int
cli
push
fimuls
add
add
lcall
movsb
add
sahf
mov
mov
loop
aad
hlt
add
mov
in
lock
lcall
movsb
push
lea
push
push
call
pop
add
mov
mov
push
popa
fiadds
int
add
xchg
jge
add
fcmovnb
stc
cltd
jb
fdivl
xchg
mov
out
je
sub
pop
mov
xor
push
push
push
call
jmp
push
sahf
in
push
add
add
jp
incb
add
xchg
add
out
add
add
mov
xchg
out
add
add
lcall
leave
je
push
push
call
add
jae
ja
add
icebp
pop
lds
xchg
andl
mov
out
cmpb
rol
add
add
add
mov
pusha
mov
std
xchg
push
loop
add
jecxz
cmpb
clc
lcall
xor
jno
adc
orb
into
push
push
push
lea
push
push
push
push
push
call
add
add
add
add
jmp
add
mov
loope
test
cli
pop
add
lea
nop
int
push
jae
mov
stos
js
in
bound
out
push
cwtl
mov
add
mov
jne
in
mov
sahf
mov
sub
pop
xor
push
push
push
push
push
push
call
xlat
out
outsl
add
add
roll
nop
movsb
out
add
lret
jno
lahf
aam
popa
lock
add
fsts
ret
jne
add
lret
xchg
lahf
add
jecxz
add
add
add
add
movsb
xlat
mov
in
call
add
push
push
lea
push
push
push
call
pop
jle
shrb
cld
add
push
add
add
pop
sahf
imul
mov
movsb
gs
mov
jne
sub
pop
mov
xor
push
push
push
push
push
call
pop
add
rcll
add
roll
fcmovnb
add
lock
cld
add
jno
neg
jo
flds
mov
test
add
mov
sahf
andb
test
sub
pop
add
push
lea
push
push
lea
push
push
call
movb
add
stc
add
lock
aam
out
cmc
add
ffreep
xchg
jp
mov
lret
loopne
add
jne
fldl
add
mov
add
into
sub
pop
add
push
lea
push
lea
push
lea
push
lea
push
push
push
call
fcomps
mov
mov
in
bound
add
add
add
stos
js
add
add
fistpl
ret
add
mov
add
fldl
nop
gs
cmpsb
jo
add
add
xchg
mov
xchg
sar
test
popa
std
add
add
mov
je
add
push
not
not
pop
mov
xor
push
dec
pop
add
pop
push
push
push
lea
push
push
call
and
add
in
in
add
mov
add
int3
mov
add
add
fildl
add
add
lods
add
rep
mov
xor
push
push
push
lea
push
push
push
push
push
call
outsl
add
mov
out
add
add
mov
in
lock
push
add
jno
add
push
add
add
add
insb
mov
mov
mov
xchg
mov
add
rorl
jb
shl
jbe
lods
xchg
fst
add
cld
add
add
add
add
rcl
in
loopne
or
je
mov
push
push
push
push
push
push
lea
push
call
add
mov
pop
add
add
lods
in
add
pop
add
add
add
add
add
pop
add
bound
add
loop
out
mov
mov
add
cltd
movsl
add
add
enter
add
add
in
sub
pop
add
add
push
dec
inc
pop
rep
push
lea
add
pop
pop
push
push
shr
xor
shl
push
and
add
rol
sub
sub
not
add
add
pop
ror
pop
push
dec
xor
not
pop
pop
push
rol
inc
shr
pop
mov
mov
push
add
pop
mov
jmp
push
push
lea
push
lea
push
push
push
push
push
push
push
call
add
fcmove
insb
fildl
out
add
add
add
lods
fnstcw
je
push
lret
pushf
add
mov
add
cltd
pushf
add
bound
sub
pop
push
push
dec
pop
mov
push
ror
add
pop
add
push
shr
pop
push
push
shr
add
rol
pop
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
xchg
add
add
add
add
jo
les
rcl
push
pop
add
je
in
iret
sahf
xchg
lret
add
add
mov
add
pop
push
push
rol
pop
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
fucomi
add
in
jne
add
add
addl
pop
out
add
lret
add
out
frstor
pop
popa
add
add
in
fidivl
mov
add
add
je
add
flds
cli
add
add
add
out
push
movl
sub
pop
mov
push
rol
pop
pop
push
push
lea
push
push
push
push
lea
push
push
push
push
call
pushf
mov
test
add
add
divb
mov
xchg
stos
xchg
add
dec
int
add
add
xchg
popf
lods
add
add
add
popl
mov
lds
cmpsl
addr16
add
mov
test
push
add
add
out
jne
push
push
cmc
add
lcall
push
dec
sub
pop
pop
push
rol
sub
pop
pop
push
rol
pop
leave
push
lea
ror
not
pop
ret
push
push
xor
lea
add
pop
mov
add
push
lea
push
push
push
push
push
push
push
call
pop
movb
add
mov
mov
in
jne
pop
add
aam
ja
add
add
popa
mov
out
lahf
add
movsb
add
mov
lds
leave
add
add
mov
pusha
add
add
pop
mov
in
aam
jns
in
push
add
in
loopne
lcall
push
rol
pop
push
push
lea
push
push
push
push
push
push
lea
push
call
mov
mov
jle
add
call
pop
add
pushf
aam
add
add
shl
xchg
ljmp
imull
xchg
mov
filds
in
add
nop
call
pop
push
push
push
dec
add
xor
ror
pop
movl
addl
push
push
call
add
out
pop
stc
add
movsb
rolb
fcoml
out
lock
hlt
add
add
fiadds
mov
xchg
mull
add
add
jns
add
add
aam
add
rorb
cltd
add
add
pushf
lea
push
lea
push
push
push
lea
push
push
call
mov
add
xlat
pop
add
add
xchg
add
pop
add
icebp
outsl
out
add
repnz
add
add
fs
pop
add
jl
cmp
add
xchg
add
mov
in
loopne
mov
push
push
push
push
push
push
push
push
call
pusha
sahf
cwtl
xor
test
add
add
add
iret
arpl
add
add
add
lea
pop
pop
pop
push
xor
xor
not
pop
pop
push
push
push
push
lea
push
call
bound
add
add
add
test
imul
clc
add
std
jmp
lods
add
add
add
add
pop
add
mov
add
lahf
add
popa
fmul
addb
add
add
mov
aad
xlat
add
in
in
lcall
push
lea
push
call
jo
add
add
add
movsl
test
add
add
std
shll
leave
add
pop
shll
add
fwait
jmp
rcrb
sub
pop
leave
push
push
push
push
push
push
call
add
add
add
pop
loope
mov
add
add
add
std
add
jnp
add
in
add
jnp
add
add
in
push
add
jbe
add
cmpsl
add
lcall
add
push
push
push
call
mov
add
mov
xchg
stos
add
cld
xchg
add
add
in
roll
mov
add
mov
add
mov
lahf
lea
int
push
test
mov
in
hlt
pop
push
push
push
push
push
push
push
call
add
roll
roll
add
add
add
shl
add
add
mov
push
add
insb
add
bound
xchg
out
add
mulb
sub
pop
mov
push
xor
pop
add
push
inc
pop
push
push
push
push
push
push
call
fcmovnu
add
lcall
into
lock
cwtl
add
add
ret
fadd
push
movb
add
loop
add
shrb
stos
add
add
mov
out
lods
lods
ljmp
ret
pop
jns
add
faddl
lcall
push
sub
inc
pop
push
push
lea
push
push
push
call
add
add
xchg
pop
add
jne
mov
add
outsl
add
outsl
pushf
iret
mov
call
add
mov
popa
mov
fs
push
add
add
push
shl
ljmp
add
jno
shll
add
add
push
in
lock
lcall
testl
push
sub
pop
addl
push
push
add
pop
call
push
lea
push
push
push
push
push
lea
push
call
add
fsts
add
add
add
add
add
add
stos
push
add
add
add
int
add
ja
roll
lret
in
lcall
inc
cld
pushl
push
push
push
push
call
sahf
add
out
mov
aad
add
mov
test
mov
add
std
jae
add
add
add
cmpsb
repnz
outsl
add
add
add
stos
addb
add
mov
xchg
xchg
add
cli
jno
arpl
testb
lcall
call
ljmp
push
push
push
call
add
repnz
mov
jnp
mov
mov
roll
imul
push
pop
test
mov
scas
repnz
jnp
insb
test
mov
movsb
add
add
lcall
push
clc
call
sti
lea
pop
cmpl
jne
push
push
push
push
push
push
push
push
push
push
call
test
scas
mov
pop
fiaddl
add
imul
jecxz
add
mov
int
add
sti
movsl
add
sub
pop
pop
pop
push
lea
push
push
call
add
mov
addb
std
add
popa
popa
add
mov
add
add
add
add
add
add
sahf
add
add
add
add
mov
hlt
lcall
pop
push
push
push
push
lea
push
call
add
clc
add
cmpl
jo
xchg
lea
stos
jle
mov
arpl
add
mov
xchg
add
mov
xchg
add
mov
add
std
loopne
jno
lods
add
cmpsb
add
ret
push
inc
shl
pop
push
push
not
sub
not
pop
mov
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
add
popa
mov
test
add
push
jno
add
iret
add
add
addl
in
fdivr
lcall
cld
push
not
inc
pop
push
push
push
push
push
lea
push
push
push
call
add
pop
jb
add
idivl
mov
xchg
cmpsl
in
add
lea
xchg
add
add
add
pop
flds
xchg
add
data16
add
add
add
mov
fwait
jo
add
add
aam
sub
pop
push
push
push
push
lea
push
push
push
call
push
add
mov
add
nop
sti
lcall
lahf
add
add
mov
pusha
pushf
lds
mov
sub
pop
push
push
push
shr
xor
pop
movl
push
pop
push
call
push
sub
inc
dec
pop
push
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
mov
mov
pop
add
mov
data16
fsub
mov
aad
xlat
add
xlat
add
add
enter
sub
pop
call
push
shr
shl
lea
pop
subl
push
push
push
push
lea
push
call
add
add
in
add
shrb
add
add
pop
fsts
iret
out
fcmovbe
stos
push
add
mov
test
test
add
arpl
add
cld
scas
shll
mov
jecxz
push
add
add
popa
lock
out
in
in
pop
cmpl
jne
push
not
pop
pop
push
not
sub
pop
pop
pop
push
sub
pop
pop
leave
push
pop
ret
push
push
push
push
call
ja
add
pop
add
lods
stc
data16
mov
into
add
add
add
popl
add
in
sahf
add
test
jno
mov
in
lock
lcall
mov
push
shl
xor
add
pop
add
push
push
push
lea
push
push
push
push
call
mov
add
mov
add
mov
test
add
rolb
add
add
pop
add
cwtl
mov
add
add
sub
pop
push
push
lea
push
push
lea
push
push
push
push
push
push
call
insb
lret
mov
fiaddl
lahf
jns
mov
mov
fidivs
add
movsb
cmpsl
add
imul
xlat
addl
mov
sub
pop
push
push
dec
not
pop
push
push
not
shl
dec
pop
push
mov
push
sub
pop
lea
sub
push
dec
shl
shr
pop
mov
push
push
push
call
fnsave
xchg
add
add
add
add
mov
popl
jo
fnstcw
mov
add
add
fildl
je
jl
imul
in
mov
sub
pop
shr
push
shl
sub
shl
pop
add
push
shl
rol
not
sub
pop
mov
push
push
push
lea
push
push
push
call
fistpl
add
fildl
pop
xchg
add
fildl
mov
add
insb
add
add
xchg
jmp
fldl
lcall
andb
rol
pop
add
push
sub
sub
not
pop
add
push
push
push
push
push
push
lea
push
lea
push
push
call
add
add
push
add
call
add
pop
jge
jb
popf
add
add
test
leave
scas
fstl
fs
xchg
add
test
xchg
jmp
fdivr
lcall
inc
add
add
xorb
xor
sbb
add
fiadds
xchg
add
jge
add
popl
mov
lret
pop
push
add
iret
add
push
add
in
add
add
mov
add
push
out
in
les
mov
add
add
mov
sti
pop
add
out
add
add
lcall
nop
nop
nop
nop
push
dec
sub
dec
ror
pop
cmp
jne
cmp
jne
push
sub
sub
add
pop
mov
push
push
lea
push
push
push
call
add
add
add
add
add
mov
jae
jne
add
les
add
add
add
push
add
cltd
xchg
data16
out
aad
add
lcall
add
add
add
loop
sub
pop
jmp
push
xor
shr
pop
mov
mov
push
not
lea
pop
sub
jne
push
push
lea
push
call
add
add
mov
fildll
aad
hlt
pop
mov
popf
fwait
add
add
mov
add
sti
add
add
add
rcrl
add
pusha
scas
mov
cli
in
push
add
add
fidivrs
pop
add
ja
lcall
rolb
sub
pop
mov
movl
push
sub
sub
lea
add
pop
jmp
push
shr
add
ror
pop
mov
push
push
push
push
lea
push
push
call
rol
add
mov
nop
add
loopne
add
mov
add
jge
cmc
add
bound
mov
sahf
mov
add
add
add
out
repnz
push
add
xchg
add
rcrb
mov
int3
test
add
outsl
test
push
aad
add
testb
in
call
add
add
pop
add
add
cmp
call
pop
push
add
add
repnz
rcrb
add
add
jne
add
xchg
jno
add
gs
mov
filds
jbe
add
inc
adc
add
add
add
shr
not
pop
jmp
push
not
xor
sub
sub
pop
mov
push
lea
push
push
push
push
lea
push
call
ret
add
int3
mov
add
sar
add
in
add
pusha
add
add
add
add
stos
sub
pop
cmpw
jne
mov
push
push
push
push
lea
push
push
push
push
call
mov
add
fldl
fiaddl
add
push
add
add
mov
mov
xchg
add
fs
test
addb
add
data16
add
pop
movl
push
sub
dec
pop
jmp
push
inc
xor
rol
pop
pushl
pop
push
xor
pop
mov
push
not
inc
pop
mov
push
lea
inc
shl
pop
mov
push
push
not
add
push
and
add
rol
xor
sub
xor
pop
inc
pop
push
rol
pop
push
push
pop
call
cmpl
je
push
push
xor
inc
push
and
add
not
sub
not
pop
shl
shl
pop
push
push
push
call
data16
fldl
addl
scas
add
jo
xlat
movsl
jbe
js
xlat
push
nop
aam
add
ret
icebp
add
int
add
les
add
je
xchg
in
jns
shr
pop
xchg
mov
popf
in
add
pushf
mov
pop
push
push
sub
pop
call
push
push
lea
push
push
call
mov
shlb
fwait
out
leave
movsl
lods
lods
shr
add
int3
mov
mov
mov
add
add
lods
std
mov
jns
je
loop
add
lcall
js
int3
fldz
ret
pop
or
add
stos
mov
inc
xor
xor
push
or
not
add
rol
add
dec
shr
sub
lea
lea
dec
pop
ror
add
pop
push
push
call
xchg
add
add
lods
pusha
add
add
mov
add
mov
test
jo
sahf
add
gs
mov
pop
mov
test
mov
add
popf
iret
mov
push
add
outsl
push
mov
add
add
in
clc
pop
push
push
push
push
push
push
call
add
pop
xchg
add
outsl
pop
push
mov
jno
add
add
add
lcall
ret
xor
add
cmpl
je
push
push
sub
sub
inc
push
and
add
ror
add
dec
shr
sub
ror
pop
dec
inc
shr
sub
pop
push
xor
pop
push
call
push
push
push
push
push
call
add
jno
add
add
iret
pop
jbe
lock
loope
add
popa
iret
test
add
lods
add
add
int
lahf
jb
add
mov
add
out
add
sub
pop
cmpl
je
push
push
add
push
or
not
add
rol
rol
inc
add
sub
inc
inc
pop
shr
shr
add
inc
pop
push
push
push
push
push
lea
push
push
push
push
call
pushf
add
add
data16
les
add
mov
add
add
movl
jl
jecxz
popf
rolb
xchg
fldcw
add
popf
add
add
mov
push
in
fcompl
call
push
push
push
push
call
aam
add
add
scas
add
mov
add
add
xchg
jecxz
in
add
lock
add
xchg
jno
add
add
loopne
add
add
jge
jmp
mov
lds
iret
add
loopne
mov
mov
lcall
cmp
rol
je
push
push
add
push
push
pop
add
xor
sub
ror
pop
inc
rol
pop
push
dec
pop
push
push
push
push
push
push
lea
push
push
call
push
add
add
add
mov
add
add
add
jo
pop
iret
push
add
cmpb
out
mov
leave
fs
fists
lcall
jge
add
push
add
inc
add
pop
cmpl
je
push
push
inc
shl
push
or
inc
add
add
ror
sub
add
pop
add
rol
pop
push
lea
push
lea
push
push
push
call
mov
xchg
popf
fiadds
insb
mov
stos
roll
add
jecxz
imul
lea
jle
scas
add
push
into
imul
lret
add
pop
xchg
out
loop
shlb
pop
jne
xchg
sti
xchg
andl
lcall
push
push
push
lea
push
push
push
push
push
push
call
add
in
add
add
pop
outsl
add
add
out
movsb
addr16
insb
lods
add
add
stos
in
add
add
mov
add
add
pop
mov
sub
pop
call
cmpl
je
push
push
push
or
inc
add
not
shr
not
shl
sub
add
rol
pop
not
pop
push
xor
inc
pop
push
push
shr
lea
sub
pop
call
push
ror
add
rol
pop
cmpl
je
push
push
not
add
sub
push
or
not
add
xor
sub
sub
pop
inc
xor
shl
shl
pop
push
shl
pop
push
push
push
push
push
push
push
lea
push
lea
push
push
call
pop
xlat
jae
add
imul
mov
jecxz
clc
add
push
add
roll
add
add
add
fcoml
add
add
fsts
add
mov
xchg
in
add
lcall
inc
das
add
push
push
lea
push
push
push
lea
push
push
call
addb
nop
sti
mov
add
imul
add
mov
mov
add
add
loope
cltd
push
add
push
test
lcall
mov
mov
xchg
add
in
roll
sub
pop
cmpl
je
push
push
dec
push
and
add
rol
lea
sub
shl
sub
xor
dec
pop
inc
not
pop
push
shr
pop
push
push
push
call
mov
insb
into
push
pop
add
add
popf
mov
add
add
roll
mov
movsl
stos
mov
add
fildl
enter
lahf
in
add
mov
jbe
test
add
cltd
add
add
hlt
xchg
sub
pop
call
push
push
push
push
push
push
push
lea
push
push
call
fldcw
add
xchg
loope
clc
add
add
arpl
add
mov
mov
lcall
divb
mov
jmp
sub
pop
cmpl
je
push
push
add
dec
add
push
or
inc
add
add
lea
sub
rol
pop
xor
sub
shl
lea
pop
push
push
push
push
lea
push
lea
push
lea
push
call
bound
scas
add
call
aad
add
push
add
add
out
xchg
call
add
mov
add
loopne
fwait
jno
stos
add
add
sub
pop
push
call
push
push
push
push
push
call
add
addl
fcomps
lahf
shl
test
testb
pop
arpl
add
cld
data16
add
rol
push
mov
movsl
add
in
in
lcall
js
xor
ret
test
add
push
push
add
rol
push
and
add
shl
add
sub
rol
xor
sub
pop
ror
pop
push
ror
pop
push
push
not
pop
call
cmpl
je
push
push
inc
ror
push
push
pop
add
add
not
sub
pop
dec
add
sub
pop
push
not
shr
pop
push
push
lea
push
lea
push
push
call
mov
mov
mov
insb
add
mov
add
jl
loop
ret
mov
out
scas
mov
test
rcrl
leave
add
arpl
add
ficoms
nop
add
add
filds
xchg
lock
lcall
add
add
pop
ret
mov
push
push
push
push
push
push
push
push
push
call
add
add
fmull
push
mov
add
add
mov
jge
mov
div
addl
enter
add
sahf
add
push
add
fs
pop
mov
push
add
sub
inc
add
pop
movl
jmp
push
push
push
lea
push
push
push
call
add
repnz
sahf
out
repnz
pop
xchg
pop
add
insb
aad
push
add
add
out
test
push
add
pop
add
lret
jnp
sub
pop
xor
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
out
add
add
jne
test
jl
xchg
push
add
jp
std
cmc
roll
xchg
add
add
stc
rorl
add
fildl
mov
add
add
les
iret
lret
fwait
lods
loopne
stos
pop
les
xlat
add
add
test
add
pop
add
fcompl
push
lea
pop
pop
push
add
ror
sub
dec
pop
pop
pop
push
push
call
mov
in
add
jns
add
loopne
add
pop
xchg
add
popf
add
jns
add
add
shll
jne
add
add
rolb
add
add
xchg
test
add
pop
leave
push
ror
pop
ret
push
push
push
push
lea
push
push
push
push
call
add
out
add
nop
movsl
cld
test
notl
int
mov
add
add
hlt
add
push
add
scas
clc
in
add
add
sub
pop
mov
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
call
add
out
sahf
shl
pop
lds
add
xorl
add
leave
call
add
out
out
mov
sub
pop
add
cmpl
jne
push
push
shr
shr
inc
rol
push
sub
add
dec
shr
add
ror
sub
not
pop
add
shl
pop
push
push
lea
push
push
call
xchg
js
mov
jp
lea
mov
faddl
pop
into
add
call
mov
add
fld1
imulb
imul
xchg
add
jge
mov
add
test
add
js
add
jns
cmpsb
cld
add
add
scas
sub
pop
pushl
call
push
shl
add
not
pop
push
push
not
pop
call
push
lea
push
lea
push
push
lea
push
push
call
jp
jns
lods
xchg
stos
mov
xchg
add
fbstp
data16
add
fildl
add
add
in
add
enter
jmp
mull
sub
pop
jmp
push
sub
not
rol
pop
cmpl
je
push
shr
pop
cmpl
jne
push
sub
inc
shl
sub
pop
mov
push
ror
shl
xor
pop
call
ret
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
roll
jl
mov
add
mov
cltd
pop
add
stc
add
leave
add
add
mov
cld
add
add
add
mov
push
mov
mov
add
pushf
add
add
lcall
in
add
push
push
call
mov
lcall
int
mov
loop
jne
mov
sti
add
add
add
mov
leave
mov
push
jmp
push
push
mov
icebp
into
add
add
cmc
jbe
mov
push
xchg
jmp
mov
add
imul
or
jne
push
push
push
or
not
add
inc
inc
lea
sub
xor
shl
pop
pop
push
push
push
call
mov
xchg
shlb
nop
add
add
jne
insb
testl
ret
xchg
hlt
add
add
pop
xchg
adc
outsl
mov
jnp
add
cmpsl
add
add
hlt
mov
add
add
cwtl
add
jns
mov
lcall
jne
push
push
push
push
lea
push
lea
push
call
add
sti
add
inc
mov
iret
push
mov
add
mov
add
mov
add
add
add
mov
add
gs
pop
call
push
push
push
call
clc
push
arpl
jns
frstor
add
add
popa
jns
add
movl
mov
in
mov
insb
insb
add
jge
add
add
sti
add
out
add
add
sub
pop
push
push
lea
push
push
lea
push
lea
push
call
fs
add
xchg
insb
add
jnp
jmp
lahf
clc
add
add
lcall
addb
cmpsb
add
mov
mov
aad
pop
cli
mov
xchg
jle
mov
add
pop
xchg
shlb
add
xchg
push
add
test
lods
cmpsb
add
bound
push
add
sub
pop
call
push
pop
jmp
cmpl
jne
push
push
lea
push
push
call
scas
add
add
add
mov
mov
lea
test
iret
add
pusha
xchg
out
xchg
in
cmpsb
imul
jnp
fwait
add
jnp
pop
add
mov
clc
jl
add
leave
les
in
test
add
lock
bound
add
add
push
not
sub
sub
rol
pop
mov
push
push
push
sub
push
and
add
rol
xor
sub
shr
shr
shl
rol
pop
shl
xor
shr
add
pop
push
push
lea
push
lea
push
call
add
pusha
push
cmpsb
rolb
mov
add
nop
mov
mov
mov
add
add
push
jne
add
add
arpl
add
add
add
xchg
add
lock
pushl
push
lea
push
push
push
push
push
lea
push
push
push
call
add
add
pop
scas
popl
add
pushf
imul
add
sti
add
xchg
ljmp
mov
mov
in
fdivr
lcall
sbb
add
call
push
push
dec
dec
push
xor
add
rol
sub
shr
pop
not
sub
shl
pop
push
lea
push
push
push
push
push
push
lea
push
call
add
push
add
add
add
rolb
pusha
aad
jno
out
lods
xchg
sti
push
cli
add
into
mov
add
add
movb
add
add
addr16
cwtl
add
lods
add
add
jne
push
shl
sub
not
pop
call
call
push
push
shl
push
and
add
lea
inc
dec
sub
sub
xor
add
sub
sub
pop
xor
pop
push
sub
xor
pop
pushl
call
push
push
lea
push
lea
push
lea
push
push
push
push
call
stc
bound
call
add
sbbl
call
xchg
jne
pop
add
push
fcmovne
int3
mov
imul
imul
lcall
shrb
jle
dec
push
ror
shr
lea
ror
push
or
not
add
dec
sub
dec
inc
pop
ror
pop
push
shl
lea
shr
pop
pushl
push
push
push
push
push
push
push
lea
push
call
in
push
pop
stc
shrb
add
mov
add
push
mov
add
add
in
in
mov
add
add
mov
into
loope
mov
cltd
std
add
add
mov
data16
add
push
cwtl
pop
add
test
call
jl
out
add
subb
sub
pop
call
push
lea
push
lea
push
push
push
push
push
push
push
call
add
add
imul
add
push
mov
add
outsl
add
lods
add
push
add
imul
test
push
fcoms
pop
add
push
add
fwait
add
push
pop
loop
add
xor
jo
aad
add
sub
pop
call
push
push
add
add
shr
push
or
inc
add
rol
rol
ror
ror
sub
xor
pop
rol
add
pop
push
shl
shr
not
rol
pop
pushl
call
push
shr
pop
call
push
push
rol
push
sub
add
add
sub
sub
sub
add
pop
dec
rol
add
inc
pop
push
push
push
lea
push
push
push
call
add
data16
add
icebp
stos
jo
add
add
add
add
push
iret
shrl
out
jae
add
add
pop
add
add
call
pushl
push
add
pop
call
push
push
push
lea
push
push
lea
push
push
push
call
sti
pusha
rol
add
add
add
add
rolb
roll
mov
jle
add
jecxz
add
bound
hlt
add
lcall
add
jo
shll
sti
out
mov
in
loopne
lcall
shrb
sbb
push
dec
add
add
push
push
pop
add
not
shl
sub
add
shl
pop
shl
sub
pop
push
push
push
call
add
add
fldt
data16
out
add
add
scas
imul
add
push
pop
enter
cld
xchg
add
fdivrs
add
cmpsl
popl
mov
add
add
add
sub
pop
pushl
push
dec
pop
call
push
pop
call
push
push
sub
not
push
xor
add
inc
not
lea
sub
rol
pop
xor
rol
pop
push
lea
push
push
lea
push
call
in
mov
lds
add
mov
add
jge
movsb
xlat
xchg
push
add
movsb
push
pop
stos
test
jno
add
add
hlt
imul
mov
mov
mov
jp
add
cld
js
xchg
stos
jl
add
lock
add
scas
scas
mov
sub
pop
pushl
push
push
call
imul
pop
push
add
mov
add
rclb
in
add
lock
add
out
add
mov
add
add
mov
add
mov
add
arpl
in
clc
lcall
fstps
add
push
push
call
pop
mov
shrl
add
add
add
insb
add
mov
sbbl
xchg
add
add
mov
add
pop
sub
pop
call
push
push
shl
dec
push
sub
add
shl
sub
sub
sub
ror
not
pop
shl
not
add
pop
push
not
ror
lea
not
pop
pushl
push
shl
pop
call
push
xor
pop
call
push
push
xor
inc
push
sub
add
xor
sub
sub
xor
pop
lea
sub
lea
pop
push
sub
dec
pop
pushl
push
sub
ror
pop
call
lea
push
inc
shr
dec
shr
pop
push
call
push
push
add
push
xor
add
shr
sub
add
pop
sub
shr
pop
push
sub
sub
pop
pushl
call
push
add
not
pop
call
push
push
dec
rol
push
and
add
xor
sub
shr
pop
sub
ror
sub
pop
push
shl
pop
pushl
call
push
sub
shr
add
pop
call
push
push
inc
inc
push
sub
add
add
rol
not
ror
sub
add
lea
pop
lea
sub
add
sub
pop
push
dec
not
pop
pushl
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
add
add
add
outsl
roll
mov
in
out
gs
push
nop
call
add
testl
in
xchg
add
add
ja
lahf
add
push
xchg
mov
push
sbb
mov
popf
add
xchg
add
lret
add
ret
test
fstpl
shrb
in
pop
push
xor
shr
push
and
add
add
add
dec
lea
sub
xor
add
ror
pop
add
sub
xor
pop
push
push
push
call
repnz
mov
mov
shrb
xchg
mov
lods
add
test
mov
imul
hlt
icebp
out
xchg
bound
push
add
bound
iret
cmpsl
stc
add
in
hlt
lcall
jne
call
push
push
rol
not
inc
sub
push
and
add
shr
shr
sub
xor
pop
pop
push
push
dec
add
shl
sub
push
xor
add
add
sub
dec
sub
xor
pop
add
add
pop
push
rol
not
sub
not
pop
call
push
shr
pop
pop
dec
jne
push
push
lea
push
push
push
push
push
push
lea
push
call
insb
add
testl
mov
add
mov
add
add
cld
js
mov
mov
add
idiv
add
add
add
in
xchg
push
addl
add
add
jae
xorb
pop
call
push
push
lea
shr
not
dec
push
push
pop
add
shl
not
sub
sub
shl
not
pop
dec
add
ror
dec
pop
push
push
lea
push
push
call
out
push
pop
loopne
fiaddl
in
test
popa
jb
mov
add
lahf
mov
mov
lods
pop
xchg
testb
mov
out
scas
add
outsl
xchg
add
add
pop
add
jo
lahf
icebp
in
add
xchg
xchg
add
cmc
pop
add
mov
lock
pushl
call
push
push
push
push
push
push
push
push
push
call
add
push
fstl
imul
pop
cmpsl
pusha
add
add
pop
add
add
xlat
add
add
in
rcll
fwait
cli
sub
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
not
scas
push
add
add
cwtl
popa
jnp
add
enter
add
pop
mov
enter
addr16
or
mov
out
xorb
add
add
add
add
jo
jecxz
stc
je
jo
xchg
scas
cli
pop
js
rcrl
fcmovnb
mov
jno
sub
pop
call
push
sub
ror
pop
mov
push
push
add
lea
shr
push
xor
add
sub
rol
sub
ror
sub
add
add
rol
pop
shr
add
pop
push
add
lea
inc
pop
pushl
push
lea
push
push
lea
push
push
push
lea
push
call
cmpsl
mov
add
push
scas
add
add
mov
add
pushf
add
in
add
jbe
les
icebp
fimull
ja
notb
add
subl
flds
into
and
jl
pop
add
and
add
push
inc
shl
pop
lea
push
ror
ror
xor
pop
push
push
lea
push
lea
push
call
lret
xchg
mulb
faddl
xchg
add
add
add
add
jecxz
popl
roll
add
add
mov
add
out
lahf
mov
add
mov
lcall
add
rol
ljmp
ja
sti
sbb
lret
add
pop
loopne
push
push
call
int3
add
pop
jae
add
shl
flds
mov
lods
mov
add
push
lds
mov
jo
mov
add
push
add
add
test
add
add
loope
add
add
add
mov
int3
xchg
test
jno
sahf
movsb
arpl
add
pop
in
call
pop
push
call
push
add
inc
pop
lea
push
push
rol
sub
push
xor
add
lea
sub
pop
shr
shr
ror
pop
push
push
push
call
lret
add
add
mov
push
in
fistpll
add
mov
mov
hlt
add
mov
xchg
test
cld
mov
lea
add
cli
sub
pop
pushl
call
push
add
lea
not
pop
push
call
push
push
lea
push
or
not
add
add
sub
rol
sub
add
pop
lea
inc
sub
pop
push
lea
push
push
call
add
add
mov
add
mov
rolb
jae
cld
movsb
add
add
add
add
xchg
pop
mov
mov
add
aad
mov
mov
addl
mov
fiadds
jne
push
pop
call
call
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
mov
mov
add
je
add
add
add
xorb
add
xchg
bound
pop
push
add
stc
in
xchg
roll
jae
add
roll
push
add
ret
add
mov
add
sub
pop
mov
push
push
push
push
push
call
add
push
jo
aam
pop
add
test
movsl
movsb
js
sti
je
add
add
xchg
jmp
mov
movl
in
pop
lea
push
push
add
shl
xor
ror
push
sub
add
ror
sub
dec
pop
ror
pop
push
dec
dec
pop
pushl
push
push
push
push
lea
push
push
push
push
call
mov
loope
lret
xchg
jnp
gs
fildll
jae
add
add
in
ret
gs
add
add
add
add
sti
ja
popa
add
add
cmc
pop
stos
pop
mov
imul
loopne
call
lea
push
push
lea
push
lea
push
push
lea
push
call
cmc
mov
in
add
cmp
cmpsb
add
add
enter
int3
jb
stos
push
mov
add
fs
cli
push
add
sub
pop
push
push
push
push
push
push
push
push
push
push
call
add
mov
add
lock
xchg
lahf
out
jo
xchg
vsqrtsd
scas
push
mov
mov
add
add
mov
fimull
in
loopne
push
push
lea
pop
pushl
push
push
add
push
sub
add
shl
sub
xor
add
dec
pop
sub
add
sub
xor
pop
push
push
push
push
push
call
xchg
add
add
xchg
fildl
add
ja
add
jecxz
add
add
lret
pop
add
aam
in
in
pop
push
call
push
push
inc
sub
add
shl
push
sub
add
lea
sub
add
pop
inc
pop
push
push
call
add
jmp
out
add
add
add
cmpsl
add
mov
mov
push
fiadds
roll
mov
ffreep
add
jne
push
push
push
push
push
call
add
ja
cmc
add
mov
shll
scas
stc
test
add
xlat
mov
movsb
add
add
add
popl
add
add
pop
sub
pop
call
push
push
lea
push
push
push
call
pop
mov
movb
mov
out
add
add
je
xchg
xlat
shrl
roll
movsl
test
scas
mov
add
jbe
hlt
add
hlt
push
arpl
add
pushf
movsb
roll
mov
add
in
lock
lcall
shrb
jge
lea
or
inc
add
sub
add
shl
sub
not
sub
pop
dec
add
pop
push
push
push
push
push
push
push
call
add
xchg
add
add
add
add
cwtl
rol
pushf
mov
into
out
push
lea
add
mov
add
add
roll
mov
xchg
add
add
xchg
pop
add
addb
xchg
add
in
stc
add
add
lds
lcall
jne
push
push
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
call
add
add
ja
add
jns
insb
fidivrl
enter
add
mov
in
add
fdivs
mov
shlb
add
add
jne
add
loopne
nop
into
add
movsl
add
mov
add
out
in
fcomps
adc
add
push
inc
pop
call
push
dec
pop
jmp
push
push
call
add
mov
int3
sahf
add
mov
iret
out
add
imul
add
cwtl
push
add
jae
mov
add
mov
xchg
fldt
add
call
pop
jae
add
xchg
add
stc
add
pushl
push
shl
rol
add
pop
mov
jmp
push
push
add
rol
push
or
not
add
add
sub
sub
sub
add
pop
sub
add
add
dec
pop
push
push
push
push
push
push
push
lea
push
push
call
xchg
gs
add
add
rolb
add
add
test
add
hlt
testb
add
jns
fwait
pop
add
add
fistl
add
int3
mov
fcomip
add
fisubrl
xchg
mov
fcoms
add
rolb
mov
fistpl
add
sub
pop
pushl
call
push
lea
push
lea
push
lea
push
push
lea
push
push
push
lea
push
call
add
add
jl
int
mov
add
mov
in
add
add
jne
push
xchg
add
add
pop
int3
fildl
add
mov
mov
add
add
push
data16
add
lret
add
push
push
lea
sub
rol
not
pop
call
push
push
xor
sub
sub
xor
push
xor
add
ror
not
sub
ror
pop
dec
inc
pop
push
push
push
push
push
call
pop
add
jno
ret
loop
lret
add
in
and
scas
mov
imull
fcomip
cld
add
jno
mov
in
in
lcall
jne
call
push
push
lea
push
lea
push
lea
push
push
push
push
call
test
add
add
add
stos
add
fmul
add
add
mov
sarl
add
push
add
jmp
add
adcb
lods
push
pushf
loope
xorl
movsb
shll
scas
in
bound
add
add
scas
fbstp
add
addr16
pop
push
call
push
lea
push
call
pusha
out
insb
jmp
addr16
mov
fsubrs
add
aad
add
fsubrp
mov
loopne
lahf
mov
push
add
incb
sub
pop
leave
push
push
push
push
push
lea
push
push
call
jmp
add
add
add
add
enter
mov
add
add
add
add
lea
shrl
cmc
add
clc
add
in
lcall
les
push
shl
sub
shl
pop
pop
pop
push
lea
push
push
push
push
lea
push
call
add
mov
add
add
cwtl
mov
add
out
mov
add
mov
fmul
add
add
popa
add
push
add
fiadds
in
call
push
shl
ror
add
add
pop
inc
push
add
pop
ret
push
push
push
lea
push
push
push
lea
push
push
push
call
add
mov
ja
stc
clc
add
add
ror
pop
clc
add
icebp
scas
scas
pop
jne
out
pop
lret
les
mov
insb
roll
add
add
cli
scas
lods
add
add
add
lcall
ret
push
push
lea
push
push
push
push
push
push
push
call
add
xchg
add
scas
insb
scas
add
in
xchg
pushf
pop
push
test
popf
xchg
mov
jbe
add
shrl
xchg
mov
add
add
add
roll
add
rolb
push
lea
xor
sub
pop
mov
push
dec
shr
pop
cmpl
jne
mov
push
pop
jmp
push
dec
shl
dec
add
pop
mov
and
push
xor
pop
xor
push
sub
lea
not
pop
xor
push
push
push
call
test
jle
add
add
jne
into
add
test
lcall
add
add
add
addr16
jns
add
add
add
add
mov
leave
jmp
pop
jb
mov
jecxz
pusha
add
testb
add
bnd
fiadds
rolb
lea
push
push
call
jns
add
add
add
clc
add
test
mov
add
stc
add
add
cli
add
fildl
lock
shll
add
roll
iret
add
cli
ljmp
pop
xor
push
pop
dec
push
push
lea
push
call
add
out
push
add
jl
subl
mov
add
mov
mov
add
add
mov
xchg
mov
mov
add
sub
pop
sub
jmp
push
add
ror
pop
sub
pushl
push
push
push
push
lea
push
push
call
imul
add
subl
mov
add
in
aad
cli
xchg
mov
pop
test
add
add
int
lret
mov
lcall
sub
push
add
pop
cmp
jne
push
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
mov
xchg
fmulp
add
movl
xchg
add
xchg
add
mov
add
addl
add
movsl
je
add
add
add
add
subb
jno
push
movsl
fadds
push
add
add
out
test
jbe
add
jmp
add
xlat
sub
pop
mov
lea
push
add
sub
pop
sub
push
push
call
leave
imul
mov
mov
add
mov
clc
out
insb
in
cli
loopne
repnz
leave
mul
jp
mov
mov
jb
pop
notb
in
clc
lcall
or
jmp
inc
not
lea
add
pop
add
sub
push
ror
pop
pushl
pop
push
lea
push
push
push
push
push
lea
push
push
push
push
call
iret
clc
mov
lcall
add
lds
add
movsl
mov
add
test
add
add
popa
mov
pop
add
loop
in
cltd
add
mov
fldpi
add
hlt
rolb
insb
add
xchg
jo
add
cmpsl
iret
mov
add
add
lcall
jmp
push
call
add
out
hlt
jl
ficompl
xorb
js
repnz
aad
fiadds
jmp
test
mov
add
mov
pop
add
add
add
hlt
pop
and
sub
push
push
push
call
add
testb
ror
in
ret
pop
add
add
push
add
mov
add
jge
fsubl
add
lods
add
test
out
mov
mov
ljmp
in
add
add
out
add
cmpsl
add
add
add
add
outsl
mov
lcall
stc
sbb
test
cld
dec
push
lea
rol
shr
pop
ret
push
push
lea
push
push
push
push
push
push
push
push
call
mov
in
add
add
stos
popa
mov
cmpl
add
addb
test
add
add
add
add
add
add
mov
cwtl
cmpsb
pop
add
add
movsl
testl
push
lea
push
push
lea
push
lea
push
push
push
call
movsl
add
out
xchg
lahf
add
push
add
mov
pop
push
stc
jne
out
pop
cltd
add
imul
in
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
testb
add
lods
xchg
sahf
pop
xchg
je
gs
push
add
add
cmp
nop
cmc
movsl
call
imul
add
in
andl
roll
add
add
out
gs
leave
test
mov
cmpsl
pop
push
add
je
out
sub
pop
push
push
push
lea
push
push
push
call
movsb
add
cmc
rolb
enter
xchg
add
je
lcall
ror
add
xchg
add
add
fst
xchg
jp
enter
add
enter
in
in
lcall
push
push
push
lea
push
push
push
call
push
sti
jno
add
mov
add
add
roll
add
jmp
pop
sti
add
cltd
lahf
in
lret
add
aad
lahf
add
add
push
loope
js
add
or
sarb
fiaddl
lcall
mov
add
add
add
add
sub
pop
push
push
push
call
insb
jecxz
add
fwait
mov
add
ja
scas
xlat
add
add
addl
xchg
add
int3
add
jb
add
mov
add
add
xchg
hlt
add
pop
add
push
stc
push
add
cld
int
push
add
ja
loop
jno
in
clc
pop
push
mov
push
add
pop
lea
sub
push
dec
rol
sub
pop
mov
push
push
push
push
call
add
into
fdiv
add
add
mov
add
jl
imul
fdivrp
add
xchg
repnz
mov
enter
add
sub
pop
shr
add
push
add
sub
pop
mov
push
dec
pop
add
push
not
sub
shr
pop
mov
push
push
push
push
lea
push
call
add
arpl
add
add
fwait
mov
add
jmp
imul
mov
jp
add
add
mov
add
mov
gs
pop
test
add
ficoms
ret
mov
les
push
add
xlat
add
data16
add
lret
shl
jecxz
mov
lcall
in
lcall
jge
xor
push
pop
mov
push
push
push
push
push
call
add
mov
gs
popa
xlat
push
std
add
test
xlat
ja
add
imul
cmc
in
add
jecxz
mov
add
cld
add
addl
pop
and
push
dec
pop
rol
push
shr
add
shr
ror
pop
rol
push
ror
shl
add
pop
xor
inc
push
rol
shr
shl
pop
cmpb
jne
add
push
push
push
lea
push
push
lea
push
push
push
call
out
mov
jae
lods
add
mov
fildl
mov
add
jle
ja
fsubr
add
add
mov
add
add
cmp
je
add
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
push
add
cld
add
add
out
xlat
mov
incb
xchg
xchg
add
mov
loope
mov
add
ret
add
popf
pop
cli
jns
out
mov
popl
rcrb
lret
add
fiadds
add
add
add
add
mov
not
add
mov
lcall
jnp
add
test
rclb
ror
add
pop
pop
push
push
lea
push
call
insb
jne
add
out
fucomi
loope
mov
loopne
add
cmc
add
mov
nop
push
push
pop
add
push
ret
aad
add
je
push
lcall
lea
pop
add
add
add
stc
add
cmpsl
roll
jmp
jbe
mov
fs
add
lcall
push
push
push
lea
push
push
call
pop
xlat
jns
mov
mov
popf
out
fisubs
add
add
xchg
test
mov
add
jae
add
aam
filds
ret
add
push
loop
mov
mov
shl
frstor
in
in
pop
pop
push
lea
push
push
push
push
push
push
push
call
xchg
ja
in
add
addl
add
add
data16
sahf
pop
in
push
mov
lods
pop
rolb
fildl
jp
cmc
add
add
xchg
add
mov
mov
jbe
rolb
rorl
mov
scas
add
add
hlt
add
cmpsl
fsubr
add
lcall
push
push
push
call
add
ret
add
add
add
lds
pop
cmc
imulb
add
mov
fs
add
add
test
jb
add
cmpsl
mov
cltd
add
sar
add
out
add
push
xorb
push
jae
add
add
add
lcall
leave
push
rol
pop
ret
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
aam
fidivl
mov
pop
test
pop
movsb
scas
mov
aad
insb
add
add
add
in
add
add
fdivr
lcall
push
adc
je
faddl
hlt
push
lea
push
call
out
add
add
add
add
out
imulb
insb
mov
jne
lcall
cmpsb
add
loope
rcll
add
add
cltd
mov
lock
lcall
push
or
repz
mov
push
sub
sub
pop
push
push
shr
rol
inc
pop
mulb
push
not
pop
pop
call
push
rol
pop
push
call
push
push
call
addb
js
call
sahf
out
mov
ja
add
lret
add
pushf
popf
aad
add
add
gs
lock
mov
add
push
enter
jle
out
hlt
stos
test
add
out
popa
add
roll
pop
int
ja
jmp
add
rorb
add
add
lcall
xor
pop
push
push
push
push
push
push
push
lea
push
push
call
mov
add
loop
clc
pusha
roll
add
xlat
out
add
rolb
clc
fiadds
push
jo
add
mov
mov
add
add
add
add
mov
je
les
add
mov
movsl
call
add
jle
cmpsb
int
in
fdivr
lcall
pop
push
rol
ror
rol
shl
pop
pop
pop
push
push
push
push
call
add
mov
add
add
push
jnp
fadds
loopne
add
pusha
bound
jmp
push
fisubs
mov
leave
stos
cmpsl
add
in
xchg
arpl
jnp
add
mov
xchg
fs
mov
out
out
sub
pop
leave
ret
push
push
lea
push
call
add
mov
jbe
jl
add
imulb
push
hlt
add
mov
leave
jb
add
add
add
in
hlt
lcall
push
xor
inc
not
pop
mov
add
push
push
push
push
push
push
call
lcall
pop
int
fdiv
cld
fldlg2
cmpsl
fadds
fbstp
add
pop
add
push
add
push
add
add
jmp
add
add
test
add
add
add
add
mov
sub
pop
push
push
lea
sub
pop
push
push
add
xor
pop
push
push
push
lea
push
push
lea
push
push
push
push
push
call
add
fwait
add
push
jecxz
cmpsb
je
add
add
fcomp
jnp
mov
test
filds
int
push
mov
test
add
push
push
inc
dec
dec
pop
mov
push
lea
push
push
lea
push
push
push
call
out
stos
add
add
xchg
add
add
add
fs
jo
mov
jl
add
add
add
insb
pop
add
add
aad
add
add
add
jge
cli
pop
clc
add
sub
pop
push
push
add
ror
sub
pop
pop
push
push
push
push
push
lea
push
call
add
add
into
cli
sahf
add
add
xchg
add
fiadds
addl
mov
mov
add
add
mov
xchg
scas
add
add
sarl
movsl
add
mov
lods
sub
pop
lea
sub
push
shr
rol
shl
pop
mov
push
rol
pop
shr
add
push
lea
push
push
push
lea
push
push
call
mov
push
push
xchg
jbe
enter
faddl
call
lahf
add
cmpsl
add
mov
cwtl
addl
jns
mov
shll
into
addb
add
sbbl
mov
jno
xchg
je
sbbl
pop
mov
sub
pop
mov
push
lea
push
push
push
call
jl
add
test
add
jnp
add
add
lcall
jmp
lret
add
rcr
ljmp
add
lcall
fcos
jae
push
add
pop
popl
mov
push
push
push
push
push
call
mov
jne
add
fisubs
jge
mov
jne
add
aad
hlt
rcrl
add
mov
in
add
mov
clc
icebp
fwait
push
jae
mov
in
lcall
stc
xor
push
push
call
mul
loope
repnz
scas
cmpsb
mov
fabs
gs
add
mull
jbe
xlat
iret
stc
js
jl
out
pushf
jmp
add
loop
in
out
push
movsb
pop
add
int
loope
add
fadds
movb
mov
mov
xchg
add
mov
data16
sahf
jb
lret
popf
add
sub
pop
lea
push
xor
add
pop
mov
push
push
push
call
lret
cli
add
gs
sti
rolb
incb
loope
add
popa
xchg
cmpsb
int
push
add
add
mov
add
jnp
add
nop
add
add
add
in
hlt
pop
add
push
shr
add
pop
xor
push
rol
sub
lea
sub
pop
rol
nop
push
push
push
call
insb
add
pushf
add
in
cmp
add
cld
add
add
movb
add
shlb
add
add
add
mov
push
jmp
add
add
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
sti
add
scas
call
add
mov
pop
add
add
cmpl
lret
loopne
call
in
bound
jecxz
mov
push
add
gs
add
addl
jo
xchg
sub
pop
xor
push
push
push
push
push
push
push
call
stc
stc
mov
add
sahf
cmpsb
add
add
jb
pushf
lods
add
movb
fsubp
add
shr
add
jne
add
imul
xchg
add
add
cwtl
xor
add
mov
in
nop
push
lea
pop
nop
push
shl
ror
pop
inc
push
pop
nop
push
rol
pop
nop
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
loop
leave
add
bound
pop
pop
out
add
mulb
popf
add
jmp
add
add
jge
add
scas
add
lods
mov
add
stos
add
popl
add
mov
pop
mov
imul
loope
nop
add
add
push
loope
add
add
sub
pop
cmpb
jne
add
push
shr
sub
shl
sub
pop
nop
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
push
call
mov
std
mov
add
add
test
add
add
addl
add
enter
lahf
fildl
add
mov
add
add
pop
mov
lret
out
out
stc
movsb
add
hlt
loopw
mov
sub
pop
nop
cmp
je
push
push
push
push
push
push
lea
push
call
add
movsb
add
loop
in
add
add
add
mov
mov
jns
add
add
jne
add
scas
pop
loopne
add
mov
nop
add
add
xchg
test
add
add
add
lcall
push
ror
pop
nop
push
ror
add
pop
inc
push
push
push
push
push
push
push
push
call
add
int
add
pop
cmc
fnstenv
add
negl
movl
cli
test
mov
add
cli
lret
imul
mov
movsl
lods
sub
pop
nop
push
sub
ror
pop
nop
push
sub
pop
cmp
jb
xor
push
lea
push
push
push
push
call
mov
push
add
add
add
cwtl
pop
add
test
xchg
add
mov
flds
add
add
add
add
add
rolb
lods
add
fstps
jge
add
and
add
mov
add
cwtl
sub
pop
jmp
mov
push
add
shl
add
pop
add
movzwl
push
push
push
lea
push
push
lea
push
push
push
push
call
scas
jge
int
add
add
popa
mov
add
lods
lahf
bound
roll
stos
add
fxam
aad
je
lcall
jp
test
mov
fildl
inc
sbb
lea
push
push
push
push
push
push
push
push
call
add
iret
fisubs
mov
add
add
add
add
add
mov
add
add
xor
cltd
add
loop
add
mov
add
xchg
imul
add
add
les
sub
pop
add
mov
push
add
add
pop
xor
push
lea
push
push
lea
push
lea
push
push
lea
push
call
aad
pushf
test
add
mov
cld
jno
pop
cmc
cltd
fstl
add
add
add
add
fisttpl
ljmp
cwtl
pop
cmc
in
out
lahf
jnp
pop
jno
add
push
cwtl
mov
add
jecxz
add
add
sub
pop
xor
push
shr
add
pop
shl
push
pop
xor
push
push
push
push
push
call
add
push
add
fldl
loope
jo
popf
push
test
jno
add
mov
add
movsb
add
nop
add
add
in
mov
addb
add
add
add
add
add
in
jmp
xchg
sub
pop
shl
push
inc
pop
xor
push
lea
push
push
push
push
lea
push
call
fs
add
in
add
faddl
iret
in
push
add
push
add
jl
add
loope
lods
fadds
mov
jp
clc
pop
mov
push
pop
jae
jp
add
sub
pop
shl
xor
push
push
push
lea
push
call
add
lret
mov
lea
cwtl
add
mov
in
mov
add
lcall
cmpsl
add
push
cld
add
push
add
push
out
hlt
add
add
mov
pop
add
ja
xchg
jns
sub
pop
mov
push
lea
push
push
push
push
push
lea
push
call
popa
jcxz
add
add
cld
sarb
xchg
add
add
add
pop
loopne
std
add
add
add
clc
pop
in
insb
jns
test
flds
add
jne
add
inc
hlt
push
sub
pop
pop
pop
push
push
push
lea
push
push
lea
push
call
mov
add
add
add
push
xchg
add
add
add
add
add
add
popf
pop
add
cmpsb
add
data16
stos
js
in
add
push
add
into
popf
pop
mov
call
lcall
push
lea
push
push
push
push
push
call
in
push
pusha
data16
pop
xchg
addr16
cli
data16
aam
add
loopne
popa
add
add
jbe
xchg
leave
jnp
add
faddl
add
xlat
add
ret
add
add
sti
jge
add
xlat
add
xchg
add
out
jae
lcall
pop
push
pop
leave
push
pop
ret
push
push
push
push
push
lea
push
push
push
push
lea
push
call
jne
lea
jns
add
rclb
add
mov
bound
add
mov
pop
add
jne
je
cmc
add
jae
lods
lret
add
add
mov
push
hlt
arpl
subb
fcompl
in
push
ror
pop
push
push
add
rol
pop
push
push
push
lea
push
push
lea
push
push
push
push
push
call
out
add
test
int
add
in
add
addl
bound
mov
add
pop
mov
ja
add
lcall
push
push
sub
add
pop
mov
mov
push
push
push
call
pop
insb
sar
int
mov
mov
int
add
add
mov
test
add
stos
popa
test
push
add
fnsave
pop
mov
jmp
push
xchg
add
lret
ja
mov
nop
cmpsl
mov
scas
add
loope
mov
insb
add
test
pop
cltd
add
fwait
icebp
add
pop
mov
test
je
push
lea
push
push
push
push
push
push
call
add
mov
add
lea
rcrl
out
mov
add
add
xchg
add
into
xchg
mov
add
je
mov
add
in
mov
push
shr
add
pop
test
je
push
add
ror
sub
pop
mov
mov
push
push
push
push
lea
push
push
push
push
push
call
cwtl
push
popf
rcrl
ljmp
cli
int3
add
add
rolb
add
shl
movl
icebp
mov
push
mov
out
cli
mov
insb
add
test
pop
mov
jnp
fiadds
add
gs
movsb
jnp
mov
add
xchg
sahf
add
lea
int3
jmp
in
fcompl
pop
push
push
push
lea
push
call
into
xchg
stos
movsb
add
add
add
xchg
add
clc
xchg
stc
ja
mov
fnstenvs
push
mov
sub
pop
inc
cmp
je
push
ror
pop
test
je
mov
push
dec
xor
pop
inc
push
push
lea
push
push
lea
push
push
push
push
push
call
add
xchg
lea
mov
les
add
add
xchg
mov
nop
push
notb
test
mov
add
add
sub
pop
cmp
je
test
jne
push
lea
pop
xor
pop
push
push
push
lea
push
push
push
call
orb
stc
pop
jno
mov
lret
loopne
add
add
xchg
xchg
add
lret
data16
add
push
aad
lret
popa
mov
add
sub
pop
pop
push
lea
push
lea
push
push
call
jbe
xchg
jp
mov
add
mov
jle
mov
orb
imul
push
icebp
mov
add
pop
flds
outsl
clc
add
mov
jl
xchg
cltd
roll
push
pop
ljmp
rolb
push
push
lea
push
lea
push
call
shl
add
mov
sar
ja
add
xchg
test
mov
add
iret
add
add
mov
pop
bnd
add
add
mov
add
fldl
add
add
je
rcrb
enter
push
aam
test
add
jmp
add
lock
lcall
leave
push
xor
shr
pop
ret
push
rol
pop
mov
push
not
add
lea
pop
inc
push
dec
sub
shl
add
pop
cmp
jne
lea
push
lea
pop
mov
push
inc
pop
test
je
push
add
pop
mov
push
lea
pop
add
push
ror
dec
pop
cmp
jne
mov
push
rol
pop
test
je
push
push
push
push
push
push
push
push
push
lea
push
call
scas
enter
add
add
xchg
add
data16
pusha
add
test
enter
jne
add
imul
lcall
callw
push
pop
xchg
pop
add
push
push
push
push
call
add
imul
insb
mov
mov
arpl
add
lea
outsl
cli
into
xchg
cmpsb
jge
xchg
mov
add
jb
imul
out
scas
add
sub
pop
cmp
je
push
push
push
push
call
xchg
add
cld
in
add
xchg
hlt
in
scas
ljmp
pop
in
pop
out
add
lea
add
add
icebp
pop
add
push
fxch
xchg
mov
in
into
in
rolb
jle
add
add
xchg
mov
lcall
out
call
fstpl
rclb
jo
cmp
call
pop
push
lea
push
push
call
in
add
bound
fidivrs
popa
js
xlat
popa
add
add
icebp
cmc
iret
add
push
add
jp
movsl
add
out
roll
pop
push
not
shr
add
pop
pop
push
push
push
push
call
add
add
test
add
iret
testb
subl
add
add
add
xchg
add
push
add
add
test
jmp
iret
add
add
div
jmp
add
in
lock
lcall
leave
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
add
test
add
icebp
fbld
jo
jnp
loop
cmpsb
mov
add
pop
out
add
push
add
add
add
add
fdivr
lcall
or
lea
push
add
add
inc
pop
pop
push
ror
inc
shl
pop
pop
push
lea
push
lea
push
push
push
call
popf
lcall
test
mov
add
add
add
test
flds
fmul
add
test
add
add
cmc
add
push
loope
test
pop
pop
push
lea
push
push
push
call
add
add
out
mov
push
xchg
mov
sahf
jb
ret
jns
add
shrb
add
push
push
mov
add
push
popf
mov
add
mov
xchg
add
mov
lret
pushf
add
mov
add
push
stc
add
lcall
push
push
push
call
jmp
mov
add
add
fisubs
lea
mov
clc
aad
cmpsl
add
std
pop
add
leave
add
mov
bound
push
ljmp
cmpsl
test
xchg
lods
testl
cld
add
mov
add
add
in
hlt
pop
leave
ret
push
shl
pop
mov
pop
push
push
push
push
push
push
lea
push
push
push
push
call
add
jecxz
pop
fldenv
pop
jb
cmpsl
add
add
xchg
pop
add
add
add
add
lods
jp
add
imul
popa
add
jecxz
xchg
mov
add
leave
xchg
test
add
add
int3
pop
sub
pop
pop
push
dec
pop
pop
push
push
push
push
call
add
push
scas
mov
shlb
jle
gs
add
lods
iret
mov
mov
lods
mov
mov
xchg
add
sub
pop
pop
leave
push
shr
rol
pop
ret
xor
cmp
outsb
xor
adc
and
adc
inc
cmp
scas
push
cmp
cli
icebp
cmp
xor
adc
jb
adc
mov
add
or
stos
je
inc
pop
popf
jg
aas
cmp
sbb
lea
lret
jno
iret
mov
cld
cmpsl
jb
jb
pop
push
xchg
cmp
cmp
outsb
mov
add
hlt
fisubl
mov
sub
nop
mov
ss
arpl
mov
scas
mov
sub
imul
jo
mov
push
das
rcl
decl
dec
xor
nop
ds
jecxz
jp
fadds
cmp
fwait
pop
loopnew
xor
xor
mov
cli
ret
es
aaa
insb
or
hlt
pop
into
push
add
mov
and
dec
outsb
stos
add
push
lods
xor
addb
pop
dec
mov
out
in
ss
or
cmp
loope
les
or
pushf
fcomip
mov
lods
js
cmpsb
xorl
sbb
scas
mov
negb
push
mov
in
xor
pushl
xchg
cmp
fs
pop
rolb
dec
push
stos
and
subb
push
nop
push
and
das
mov
push
and
sbb
adc
add
ret
lahf
mov
push
jo
sbb
movsb
movsl
arpl
divb
push
aas
outsl
pop
outsb
sbb
cmc
sub
cmpsl
or
jge
aam
push
adc
push
bound
jno,pn
push
add
add
lcall
mov
idivl
push
rcll
sub
mov
stos
sbb
std
fldl
pop
rol
and
adc
lret
xchg
imul
lret
in
ret
xlat
push
pop
cli
dec
push
je
cmp
aad
lret
cltd
aam
loopne
cltd
adc
fistpl
popf
sbb
int3
jge
push
mov
and
cmp
outsl
inc
add
je
mov
sbb
jae
inc
lods
call
inc
or
aad
jne
std
cs
xchg
repz
xchg
inc
stos
adc
inc
cmp
imul
stos
pop
push
add
dec
mov
rcll
cmp
iret
insl
rcll
inc
hlt
xchg
ret
ret
cmp
lds
jno
cmp
jns
or
sub
cmp
cmp
jno
fdivs
jmp
fs
sbb
cltd
add
jbe
or
mov
cltd
adc
pmaxub
sbb
mov
mov
cwtl
stos
testl
mov
stos
mov
iret
ja
hlt
adc
popa
dec
pop
mov
add
das
test
jl
push
orb
stos
ror
shl
push
dec
pop
js
in
lock
adcb
sbb
mov
xchg
sbb
aaa
test
call
dec
cmp
arpl
push
mov
popa
push
jno
into
paddsw
stos
or
inc
jb
dec
push
xchg
push
jp
xorb
cmp
aas
test
pop
cmpsl
test
loop
inc
pop
sub
mov
movsb
push
mov
movsl
out
insl
mov
fsubr
in
into
or
or
add
pop
fs
scas
cs
in
int3
mov
sub
xor
mov
mov
in
xchg
je
mov
xorl
sbb
mov
sub
sarb
xorb
jmp
pop
aam
inc
scas
push
dec
or
xor
add
lea
xor
cmpsb
repnz
scas
or
popa
xor
lea
incl
dec
xor
shll
les
jle
pop
stc
pusha
scas
dec
sbbb
jbe
icebp
shr
pushl
mov
into
dec
cli
jl
push
or
inc
push
cmp
sbb
int
test
lcall
mov
jmp
push
jmp
gs
stos
jl
pop
mov
jmp
lahf
popa
test
sub
or
dec
mov
cmp
test
mov
popa
sarb
gs
mov
xor
nop
xchg
lods
adc
pusha
addb
push
mov
push
mov
or
std
les
repz
cwtl
subb
xor
mov
popf
lret
sti
sub
je
ret
mov
cli
sub
or
cs
push
xlat
repnz
or
int
ret
xchg
leave
pop
mov
sub
pop
cltd
adc
clc
fistl
outsl
sbb
loopne
sbb
sub
cli
jnp
dec
mov
sub
lahf
mov
inc
fdivrp
js
ljmp
cmp
shll
jmp
pop
mul
sarl
jae
vmaxpd
gs
and
xor
inc
jmp
ja
inc
xchg
imul
sahf
outsb
adc
pop
lret
pop
push
sub
mov
stos
push
das
pop
fsts
imul
dec
lcall
xor
cmp
xor
sahf
cmp
xor
pop
cmp
pop
rcll
test
jge
pop
mov
xor
mov
fwait
pop
inc
outsb
jle
call
cmp
les
and
jae
inc
lcall
inc
lods
xchg
sbb
or
jmp
in
in
mov
hlt
insb
or
jecxz
movsb
inc
pop
xchg
sbb
lret
mov
mov
mov
push
sbb
cmp
cltd
sub
lret
inc
popa
push
pop
mov
mov
xor
push
repnz
and
xchg
lods
ljmp
mov
mov
stos
jne
jb
rorl
popa
clc
pusha
jg
out
inc
imulb
loop
call
sbb
push
arpl
aam
pop
dec
adc
mov
and
hlt
xchg
xor
int3
add
jmp
jle
sbb
xchg
sub
or
lahf
test
mov
cmpsl
pop
lret
push
push
stc
jle
mov
dec
test
inc
pusha
push
das
sbb
pushf
inc
dec
pop
xchg
lret
xor
rcr
xchg
xchg
push
pop
or
inc
inc
test
xchg
int
push
xchg
imul
inc
pop
xchg
cmp
js
popf
add
mov
xor
in
inc
xor
xor
cwtl
mov
and
xor
lret
mov
cmp
repz
int3
pop
mov
cmc
out
sub
mov
add
push
mov
pop
fwait
mov
lea
movb
repz
dec
stos
jo
jg
xchg
scas
testb
cmc
std
repnz
add
cld
jmp
jmp
dec
and
pop
cltd
or
ss
xor
jl
pop
je
shlb
ljmp
pop
mov
je
je
shr
dec
xor
and
add
or
rorb
loope
mov
mov
pop
xchg
call
loop
in
aad
and
inc
add
jbe
insb
xchg
mov
scas
scas
cs
dec
pop
and
push
in
es
ret
call
sub
cs
ja
push
int
scas
pop
clc
xchg
cld
inc
mov
fcomps
dec
loopne
jno
xorl
nop
dec
out
sub
das
in
or
pusha
aad
and
scas
adc
or
mov
inc
int3
pop
fisubrl
clc
mov
pop
cmp
jle
xchg
push
cmpsb
push
mov
mov
mov
mov
fistl
xor
lds
popa
jmp
pop
push
stos
sbb
cwtl
inc
arpl
and
lret
movsb
mov
leave
int
jmp
mov
push
add
lcall
mov
sbb
jmp
std
jge
sbb
or
aad
lods
jne
out
dec
pop
jo
int
add
xor
dec
out
shlb
sti
dec
sbb
in
int3
push
sub
jecxz
inc
cmp
inc
gs
int
mov
mov
mov
mov
cmp
jecxz
es
mov
into
xchg
stc
push
mov
push
iret
outsl
lds
hlt
or
scas
out
ljmp
pop
pop
repnz
pop
fldt
mov
push
lods
jge
cmp
adc
pop
pop
lods
jb
pop
mov
sub
xchg
loopne
fucomi
je
xchg
inc
push
dec
bound
add
pop
inc
test
jns
pop
pusha
cs
insb
mov
push
cmp
clc
je
mov
jb
imul
jae
xchg
outsl
movb
sahf
sti
sarb
or
adc
cmpsw
sbb
sbb
cmp
lods
lret
insl
xor
jae
fsts
call
mov
fs
mov
stos
call
inc
or
mov
es
imul
mov
es
test
pop
test
dec
fadds
andl
ljmp
sbb
outsb
and
bound
stos
jg
cmpsb
std
mov
inc
cmp
addb
mov
nop
mov
xor
inc
adc
xchg
jge
xlat
imul
sbb
jnp
jns
ret
sarl
sbb
cmp
rcrb
pusha
mov
push
ja
pop
xchg
aaa
or
mov
adc
cltd
lahf
push
sbb
cld
in
scas
mov
xor
or
push
jl,pn
mov
mov
cmpsb
fidivs
xor
inc
add
cmpsb
push
mov
dec
cmp
lcall
adc
dec
bnd
rol
ja
mov
push
or
push
push
adc
inc
and
fistpll
jbe
xchg
adc
lds
mov
dec
out
adc
sti
mov
sub
mov
adc
adc
push
add
pop
push
xor
movsb
adc
xor
and
hlt
std
fdivrl
sbbb
out
cmp
cwtl
movsb
jae
insl
xchg
xor
dec
enter
stos
add
mov
int3
jmp
movsl
ret
ljmp
test
inc
mov
sbb
sub
int3
pop
sbb
loopne
test
xchg
xchg
test
xchg
pop
sbb
sbb
test
xchg
stc
or
test
sbb
testb
leave
jae
into
stos
cld
pop
pop
push
mov
in
cwtl
mov
cmp
jno
sti
push
imul
pop
jo
sbb
sub
mov
mov
out
adc
call
pop
pop
mov
arpl
test
scas
mov
add
mov
mov
cmp
lds
adc
or
lret
popa
cmp
pop
stos
xor
shrb
test
movsb
sbb
mov
in
test
rolb
leave
aas
add
cmpsb
out
push
sti
repz
mov
fs
add
sbb
sahf
rcrl
sbb
push
dec
xor
roll
push
mov
pop
les
stos
fs
lods
bound
pop
cmp
inc
push
mov
mov
fnstsw
aam
cli
jbe
ret
adc
iret
std
mov
pop
test
pop
cmpb
jns
mov
mov
xchg
lds
insb
and
mov
sbb
and
pop
aam
lods
add
outsb
sub
inc
jb
aam
imull
mov
pop
push
ja
aaa
imull
or
jg
cmpsb
adc
outsb
std
or
or
mov
test
js
mov
scas
pop
pop
or
or
mov
pop
sub
push
shll
and
in
aaa
inc
and
hlt
inc
ret
jmp
popf
ja
rcll
mov
cmpsl
es
jno
or
jmp
jp
xchg
mov
and
dec
movsl
pop
daa
xor
jno
xlat
sbb
enter
lret
adc
dec
popl
call
adc
int3
ds
inc
pop
adcb
cmp
shlb
ja
pop
leave
aam
cli
pop
mov
cmpl
rclb
fidivl
xor
push
inc
jae
pop
add
inc
or
adc
mov
sbb
je
and
lock
inc
filds
imulb
xchg
movsl
adc
outsb
mov
cli
fwait
incl
or
pop
push
outsb
pop
cmp
outsl
popa
aad
in
push
inc
sub
rcll
xchg
mov
jmp
inc
out
fisubrl
add
ja
iret
jo
movsb
mov
stos
pop
add
adc
jne
aaa
ljmp
arpl
sub
fdivp
push
xchg
mov
stc
frstor
clc
jne
stc
fiadds
xchg
mov
outsl
push
enter
sbb
stos
dec
loopne
push
sahf
nop
adc
lods
dec
mov
dec
lcall
cmc
xchg
or
mov
jl
xchg
adcl
mov
jb
cs
sub
pop
or
add
inc
push
jmp
xchg
lcall
adc
inc
enter
jo
test
pop
ja
add
jae
loop
js
mov
adc
mov
bound
repz
sbbb
mov
sbb
push
lds
insb
sbb
leave
fisttps
pop
adc
sarl
push
cmc
mov
aam
fwait
int3
iret
je
dec
pop
sbb
jbe
test
hlt
dec
inc
inc
ss
sbb
pop
and
or
fs
add
js
stos
dec
out
push
mov
popf
inc
inc
out
loopne
jne
mov
dec
in
inc
xchg
insl
pop
and
cmpsb
xlat
scas
mov
cld
or
pmaddwd
stos
pushf
shll
inc
dec
arpl
sbb
dec
popf
pop
sub
push
gs
push
outsb
sbb
push
mov
cmp
mov
test
aaa
rcl
cmp
cmp
cld
mov
inc
sub
or
cmc
call
std
xor
rcrl
movsl
xor
insl
lods
inc
repz
xchg
jno,pt
sti
nop
cwtl
inc
nop
xchg
sub
les
inc
imul
sbb
loopne
cmpsb
ficoml
mov
jns
mov
cltd
cmp
pop
sub
sbb
mov
sarl
push
push
dec
jo
out
ret
inc
mov
insb
mov
sahf
inc
sub
cltd
add
dec
mov
push
insl
sub
fildl
fldcw
sahf
pop
xchg
setle
inc
cli
es
push
ljmp
testl
lea
movsl
mov
in
fmul
popf
ds
adc
xchg
push
stos
ja
pop
pop
add
add
data16
fwait
test
dec
arpl
jle
jle
mov
lock
jb
int
data16
jae
mov
in
mov
or
dec
ret
cmc
cmpsb
stos
iret
sti
mov
mov
jne
nop
jg
imul
adc
pop
push
movsl
push
outsl
mov
and
inc
adc
loope
pusha
mov
fnstcw
es
xchg
push
push
std
arpl
xchg
pusha
aaa
adc
lods
je
fcomps
push
outsb
adc
push
insb
add
or
jb
adc
xorl
cld
in
cs
inc
adc
mov
mov
hlt
sub
push
shlb
sbb
inc
fsubrl
rorl
pop
and
jo
ret
cltd
aaa
stos
jmp
or
or
push
enter
mov
mov
decl
lock
insb
into
imulb
inc
xchg
popa
lds
out
int
jbe
outsb
in
cltd
mov
imul
jecxz
divl
test
test
add
ffree
dec
and
mov
xor
xchg
out
fdivl
jmp
jno
pop
fwait
repz
leave
scas
popf
out
into
ja
push
adc
jo
inc
pop
add
lods
mov
mov
pop
add
xor
loopne
sub
std
psllq
mov
inc
mov
sahf
pop
std
xor
enter
popa
fidivrs
or
stc
cmp
adc
cmpsb
xchg
xchg
or
push
mov
jne
mov
xchg
into
int3
stos
lods
lret
repnz
sub
mov
call
inc
sbb
lods
jl
xchg
fnsave
dec
stc
pop
pop
jmp
ret
mov
sub
pop
in
in
sbb
in
xchg
mov
mov
add
and
push
test
ret
in
add
adc
adc
push
jno
add
sbb
filds
pop
xor
sub
sub
dec
popf
xchg
pop
adc
jle
inc
add
fcmovbe
icebp
data16
sub
sahf
and
addr16
xchg
jnp
xor
adc
aad
pop
push
popa
lcall
pop
xor
cmp
leave
inc
arpl
mov
and
int
rorl
rcll
sbb
jecxz
ret
fbstp
stos
mov
ds
push
loop
dec
loope
and
mov
ds
sub
fisubl
jae
insl
mov
inc
push
pop
cmpsb
lock
and
xor
sbb
das
pop
inc
pusha
lods
in
daa
jb
les
ljmp
insl
pop
sarl
inc
jge
add
xchg
in
jnp
fisubrs
adc
dec
jle
pop
in
xchg
mov
int3
mov
or
stos
scas
pop
inc
xorl
push
dec
mov
rcpps
lock
addr16
testl
xchg
aad
pop
and
mov
push
ret
cmpsl
jno
std
add
jmp
xchg
sbb
xor
xlat
adc
jno
cs
inc
add
jl
js
mov
scas
pop
mov
aaa
bound
xchg
movsb
and
inc
xor
mov
ret
aaa
xchg
inc
mov
lcall
shl
ficoms
stc
xor
xchg
repnz
iret
shll
int3
xlat
push
xchg
stos
push
inc
jecxz
inc
arpl
xchg
sbb
adc
andb
cmp
push
jnp
or
inc
mov
inc
lds
add
xchg
push
mov
test
dec
xor
shrb
into
aam
jmp
test
sbb
ljmp
add
mov
push
xchg
sarl
add
dec
push
xor
xchg
adc
or
cmpsb
inc
out
dec
out
jmp
dec
sub
movsb
jo
mov
cmp
es
divb
fsubs
xchg
push
es
xchg
pushf
inc
lahf
int3
mov
push
sub
dec
dec
aas
sbb
enter
push
fs
imul
xchg
in
insl
pop
mov
mov
lahf
push
rcr
bound
imul
xchg
and
mov
adc
es
dec
xor
inc
inc
push
inc
icebp
sub
dec
lock
test
mov
insb
pop
lods
adc
in
js
shll
test
loopne
mov
mov
into
sti
sub
cmp
cmpl
fadd
jns
push
sbb
and
mov
mov
mov
loope
lahf
mov
inc
pop
in
push
xor
xchg
repnz
iret
leave
aas
mov
aaa
in
les
jo
push
das
imul
in
and
cmpsl
scas
mov
je
imull
cwtl
push
js
imul
inc
aaa
or
mov
scas
dec
xchg
lahf
shll
pmullw
mov
popf
lea
mov
or
xchg
insb
inc
out
fmul
mov
jp
dec
iret
rcll
nop
cwtl
cmp
xchg
stos
sbb
sbb
ret
fwait
inc
rcl
idivl
adc
mov
dec
and
pop
outsl
sti
repz
stc
dec
push
adc
inc
adc
shrl
aad
or
testl
mov
sti
ss
test
dec
andb
pop
insl
rcrb
insl
lods
inc
sti
mov
mov
mov
enter
insb
add
cwtl
cmp
or
xchg
adc
xchg
in
inc
push
add
cmpsb
xor
out
sub
sbb
mov
jge
sahf
nop
rcll
inc
std
dec
in
pop
push
mov
pushf
mov
push
fsubl
mov
sbb
pop
mulb
push
leave
fs
jae
inc
scas
mov
std
xor
mov
cmpsb
stc
popa
fs
std
cli
and
rclb
sbb
pop
and
sti
add
mov
push
jmp
push
icebp
dec
xor
mov
dec
mov
test
or
dec
out
dec
xchg
sbb
cs
repz
leave
cmp
jbe
scas
popl
pusha
dec
lcall
in
es
movsl
jmp
jge
mov
loopne
jge
dec
cmp
mov
push
fsts
test
jae
test
jge
and
mov
data16
and
sti
subb
or
adc
jecxz
inc
orb
int3
jecxz
and
push
lret
and
push
fmul
test
repnz
jg
gs
cmp
xchg
test
adc
data16
mov
sbb
ja
dec
add
inc
dec
and
mov
jnp
sbb
cmp
arpl
rolb
fsub
iret
sbb
sbb
push
mov
nop
sub
dec
std
xor
mov
xchg
cmp
xchg
lahf
call
lahf
add
push
out
xchg
insb
jbe
or
add
sub
mov
adc
mov
adc
or
sub
jb
das
jge
outsl
push
int
dec
aad
sbb
mov
arpl
sub
mov
pop
outsl
dec
dec
sub
out
sub
sub
inc
mov
cli
xchg
dec
push
xlat
sbb
mov
xor
pop
dec
mov
ljmp
xchg
es
in
leave
call
cwtl
push
rclb
out
inc
lods
fisubs
xchg
xchg
push
mov
fcoms
mov
push
stos
shlb
or
and
sti
cmp
jns
in
loop
push
aad
fs
je
pop
xor
aad
cltd
or
sbb
sub
jo
push
mov
dec
jmp
les
dec
mov
ret
mov
nop
jns
test
ljmp
rclb
lret
sysret
loope
shl
cltd
dec
mov
test
sbb
sub
les
cwtl
imul
xchg
sbbb
cmpb
out
loopne
fadds
mov
push
xchg
lahf
xor
pop
or
pop
jecxz
in
nop
xchg
or
push
cmc
push
cmc
inc
and
mov
scas
pop
push
leave
push
ret
imul
ftst
fstps
xchg
rcll
test
popl
imul
xchg
push
sbb
dec
lds
sub
int
fildll
hlt
cli
jl
insb
xor
repz
aam
sbb
leave
cmp
subb
push
mov
in
popf
movsb
push
sbb
sbbb
jo
sahf
cmp
or
xor
cmpb
aas
jecxz
mov
fucomi
cld
call
dec
jecxz
aad
ficompl
and
sbb
sarl
cmp
loope
push
repnz
mov
sbb
in
leave
pop
fwait
test
fs
fbld
inc
int3
jbe
es
cmp
push
jge
in
pop
and
mov
add
fst
arpl
pop
mov
pop
xchg
jmp
cmp
adc
add
testb
repnz
or
adc
cltd
xchg
arpl
mov
adc
xor
push
fdivrp
cltd
xor
mov
push
inc
push
shr
sahf
add
ret
filds
test
dec
mov
std
push
ss
cmp
fildll
xchg
jecxz
or
jecxz
mov
mov
adc
add
mov
mov
pop
arpl
out
mov
cmp
dec
jbe
lret
popa
sti
std
outsl
add
mov
mov
sub
inc
stc
mov
shlb
mov
pop
rclb
insb
shl
sub
pop
push
cmp
and
mov
enter
jbe
pop
push
pop
or
xchg
shll
or
fwait
nop
test
pop
in
orb
and
jg
lret
dec
adc
xchg
fsubrs
mov
fcoml
and
sbb
stos
jno
cltd
inc
lock
adc
xor
inc
mov
test
cmp
sub
add
stc
mov
leave
sahf
out
cmp
arpl
mov
test
and
iret
call
cmp
cmp
jb
mov
out
and
stos
iret
clc
repnz
mov
sub
pop
add
aad
in
sub
adc
jge
pop
add
lret
cli
das
adc
icebp
sbb
xchg
orb
jmp
mov
test
xorl
pop
jg
insl
psrld
mov
cs
roll
lret
push
push
mov
mov
add
or
daa
cmp
fsubp
xlat
add
mov
stos
je
mov
jl
add
shl
xchg
pop
imul
imulb
aaa
mov
jae
sub
inc
adc
rcll
in
mov
testb
jo
mov
inc
icebp
pop
jg
out
or
add
shrb
es
outsb
mov
sub
fsubp
mov
sub
and
popf
cmp
hlt
aaa
adcl
fistps
icebp
scas
sbb
outsl
fistpl
mov
mov
xchg
pusha
aad
incb
xchg
insb
xchg
jns
adc
mov
das
and
xchg
add
aaa
test
add
and
fldcw
sub
cmp
cmpb
adc
call
xchg
mov
cmc
mov
xchg
lret
dec
add
shl
inc
xchg
mov
shll
test
adc
mov
mov
push
adc
gs
adc
scas
call
das
push
das
iret
add
dec
ror
insl
xchg
push
sub
and
jnp
xor
lock
sbb
cld
aad
xor
push
add
stc
movsl
and
cmp
xor
loop
pop
or
sahf
fidivrs
mov
data16
mov
mov
stos
jae
xchg
mov
cmpl
repnz
mov
pusha
je
lret
xor
les
ja
or
out
sub
loopne
mov
stc
xchg
mov
lahf
xchg
out
mov
sahf
or
add
aam
add
jns
add
inc
lea
or
pop
arpl
pusha
enter
enter
out
push
push
test
xchg
dec
pop
in
xchg
dec
hlt
cmp
xor
aaa
test
inc
adc
pop
nop
sbb
movsl
iret
and
shr
jg
push
push
and
hlt
xchg
cmp
adc
enter
loop
stc
into
mov
loopne
sti
cmp
add
mov
in
das
xchg
leave
or
daa
fmull
mov
inc
xchg
scas
pinsrw
orl
ror
test
rcrb
fistpl
lock
inc
addl
daa
in
lret
adcl
and
push
adc
aam
mov
push
loopne
in
mov
add
push
subps
js
mov
ja
enter
mov
fldt
or
xchg
or
je
mov
xorb
out
aam
popf
out
outsl
enter
and
inc
add
mov
sbb
lret
dec
cld
inc
ja
sbb
cmc
push
stc
int
cmpsl
outsb
in
fs
or
dec
fcomp
insl
adc
dec
cmpsl
rorl
jno
sub
inc
test
fimull
pop
fistpl
push
stos
test
daa
loope
inc
stos
lcall
dec
jno
push
mov
inc
std
pop
sarl
mov
pushf
jmp
leave
or
imul
sub
fnsave
je
std
or
fadds
in
jae
push
in
icebp
and
xchg
push
repz
int3
or
loope
mul
lock
sti
sahf
hlt
cwtl
add
xchg
mov
lcall
dec
jb
mov
adc
int
call
mov
xor
leave
mov
mov
iret
stos
and
hlt
insl
or
push
cmp
jne
stos
inc
xchg
pop
xor
insl
mov
xor
fstps
lret
into
ds
leave
mov
push
or
aad
xor
rorb
addl
pop
inc
in
les
and
pop
lods
loop
loope
jnp
out
push
sahf
add
sbb
xchg
mov
sahf
rcrb
and
in
sahf
mov
outsb
inc
popa
adc
mov
cmp
scas
icebp
aam
in
adc
nop
icebp
in
andb
notl
aas
dec
mov
imul
pop
sbb
pop
adc
stos
jp
sbb
and
cmc
mov
ficoml
mov
test
std
int
jo
negl
fldl
sbb
sbb
add
sbb
lret
cmp
test
or
rep
mov
test
push
jmp
int
lds
dec
push
enter
dec
cmpsl
push
mov
rclb
test
ds
sti
xor
mov
jg
ret
pop
adc
cwtl
or
popa
pusha
cmp
pop
xlat
lock
les
int3
push
fs
sti
in
test
sbb
xchg
dec
shl
mov
push
sub
test
pop
cwtl
push
pop
mov
jp
inc
pop
jg
xchg
repz
outsl
or
lret
pop
or
lock
or
mov
je
pop
arpl
das
mov
lods
fisubl
mov
fdivrl
jg
scas
jne
mov
repz
or
pop
dec
test
pop
cld
push
and
repz
in
nop
fistl
out
dec
jge
sub
pusha
jb
push
imul
add
xchg
xchg
jb
jecxz
pop
fldt
cmp
pop
sub
xchg
adc
or
mov
mov
sub
dec
dec
cmp
sub
aad
pop
push
stos
xchg
repnz
fldenv
jg
xchg
dec
icebp
stos
test
aaa
push
roll
shrl
adc
ds
clc
idivb
bound
xchg
xchg
xchg
pop
dec
jne
in
mov
in
out
dec
or
mov
cld
je
inc
xor
or
sbb
shlb
add
shll
push
mov
frstpm(287
or
ss
jmp
cld
add
je
xor
cmp
mov
mov
pop
xchg
lods
fucomi
jp
sti
out
sbb
push
repnz
xchg
dec
in
jge
inc
jb
gs
sbb
sub
leave
fidivs
ret
mov
sub
and
aam
adc
jp
add
adc
shrb
fldcw
jmp
mov
inc
out
pop
stc
pushl
xchg
scas
cmpsb
xorl
popf
lea
sub
out
sub
mov
rorb
pop
cld
jmp
pop
sub
fstps
add
fcoms
ret
and
mov
jle
and
mov
pushf
dec
jo
mov
hlt
das
dec
add
push
movsl
dec
push
pop
lds
adc
or
subb
insl
xchg
xor
shll
clc
xchg
dec
imul
jp
jge
or
in
pop
pop
out
mov
mov
popa
or
addb
mov
cwtl
fstp
or
sarb
mov
push
pop
and
and
andl
sbb
adc
cmp
aas
das
or
and
negb
aam
cmp
out
int3
idivl
fldcw
fisubrs
adc
rolb
inc
in
pop
ds
inc
lock
test
call
repz
dec
xchg
out
inc
mov
negl
fcompl
adc
jne
sbb
call
pop
scas
fistpll
in
mov
jnp
mov
xor
arpl
cltd
imul
fisubrl
cmpsl
leave
push
loop
push
call
mov
and
inc
push
pop
adc
cwtl
pavgw
mov
add
es
push
adc
jno
or
seta
push
push
pusha
sbb
pop
aas
movsl
add
lds
dec
mov
pop
dec
mov
sub
sbb
dec
lods
aaa
int
imul
jbe
xchg
mov
aas
adc
inc
fnstsw
dec
lds
gs
and
test
or
nop
ds
add
or
add
aas
add
lods
data16
outsb
icebp
push
das
add
pop
mov
aaa
xchg
js
test
jbe
loopne
mov
cltd
jno
mov
or
gs
add
add
loope
mov
mov
inc
enter
mov
cmc
inc
xchg
ds
adc
out
daa
scas
or
call
aaa
push
or
sub
lahf
pushw
mov
addr16
fcomp
push
adc
iret
or
and
popa
stos
cmpsl
pop
je
scas
insb
inc
xor
mov
push
lods
add
and
in
xchg
test
and
test
outsb
mov
jl
subl
xor
add
dec
and
ss
mov
mov
sbb
dec
cs
lds
fsubrp
stos
aas
jb
jmp
inc
loope
xchg
jns
mov
mov
lods
hlt
in
dec
mov
lods
mov
mov
mov
mov
jae
shlb
sub
sbb
pop
repnz
cld
sub
cmpb
mov
lods
lods
test
push
jl
in
test
xor
imul
jae
pop
incb
lcall
sbb
mov
enter
dec
jmp
cli
or
movsl
adc
stc
arpl
test
xorl
jo
ljmp
insb
sbb
jmp
inc
fistps
shll
fwait
stos
sar
add
sti
push
mov
mov
sahf
out
cmc
cmp
mov
pop
mov
daa
or
inc
decl
xorl
inc
inc
lock
mov
push
inc
cmp
mov
mov
push
lock
sbb
xor
rolb
pop
adc
sbb
dec
mov
xchg
push
xor
sub
int
orb
adc
lds
xlat
cwtl
mov
adc
lcall
sub
push
jecxz
and
fsubr
bound
hlt
repz
or
ror
fidivrl
popf
call
inc
xor
rcll
mov
nop
pop
ret
mov
jae
inc
outsl
sub
xchg
les
xchg
push
xor
pop
clc
mov
test
mov
clc
shlb
mov
xchg
cmp
pop
jnp
xlat
xchg
add
negl
sbb
imul
mov
lahf
rcl
hlt
mov
cmp
push
or
in
jp
pop
mov
into
mov
xchg
xorb
xlat
sbbl
add
insb
mov
stc
icebp
jne
dec
out
xor
add
jmp
lock
sub
jnp
idiv
rclb
xchg
or
andb
out
sti
fidivs
mov
xor
push
mov
pop
rsm
jnp
into
imul
or
sbb
int3
imul
sub
ja
inc
jb
xchg
bound
xchg
jmp
andl
es
aas
add
ds
xchg
shlb
sub
push
dec
xchg
xor
adc
inc
push
inc
cld
lret
fimull
subb
xchg
inc
js
mov
aad
in
adc
xchg
jp
sbb
or
lret
lods
add
sarl
jecxz
jg
adc
or
push
mov
xchg
cs
fisubrl
repz
lret
and
ret
xchg
nop
lret
leave
push
leave
add
mov
ret
jp
and
xchg
dec
mov
jp
repnz
daa
lret
in
push
add
rcrl
cltd
inc
sahf
mov
repnz
add
insl
xchg
fisubrl
and
orl
cmpsb
fnstenv
std
insl
unpckhps
pop
xchg
cmp
jns
std
rorb
mov
imul
mov
lahf
sbb
adc
inc
mov
or
leave
and
js
mov
sbb
fs
sub
gs
mov
pushf
loope
fwait
stos
cmp
js
and
sarb
dec
lock
scas
movhps
mov
std
push
mov
mov
and
mov
fldcw
jle
subl
pop
mov
clc
push
rolb
fisttpl
pop
popf
cltd
sub
cmpsb
inc
pop
lods
in
pop
push
inc
and
cld
mull
and
insb
das
jno
popa
cli
xchg
jbe
scas
xor
inc
sbb
add
ds
cmp
lcall
jnp
jecxz
popf
mov
cld
lods
mul
xor
pop
ret
stc
xchg
stc
fcoms
push
popf
cmp
call
mov
xchg
mov
jne
xchg
dec
xchg
fildl
or
int3
and
push
adc
dec
dec
push
xchg
pop
jae
fcompl
push
stos
movsb
loope
jmp
ret
data16
xor
test
out
mov
lds
scas
jmp
xorb
cmp
imul
or
movsl
outsl
aam
adc
or
jb
cmp
stos
shr
or
std
into
cmp
add
rcll
sarl
push
cwtl
sub
xor
inc
pop
shrl
mov
je
xor
jno
and
cmp
lcall
mov
stc
sub
pushf
adc
popf
add
mov
inc
pusha
and
imulb
hlt
cmc
gs
xchg
nop
arpl
arpl
bswap
cmpsl
sbb
shr
decl
sub
stos
or
rorl
pop
pop
out
pushf
jp
sbb
lods
cmp
or
cs
ret
out
pop
test
sbb
imulb
mov
inc
sbb
sbb
out
dec
in
popf
in
push
aam
cmp
cmp
movsl
adc
dec
push
adc
adc
xorl
fcoms
mov
dec
test
sbb
adc
adc
das
cmp
sub
inc
jne
xor
mov
xchg
in
xchg
fwait
sbb
sbb
sbb
add
jns
inc
addr16
out
xchg
cmc
push
inc
repz
mov
filds
repz
call
dec
inc
jmp
stc
inc
cld
out
daa
add
inc
in
mov
adc
in
xor
xchg
imul
xchg
test
dec
xor
inc
mov
fstl
adc
or
fsubrs
fidivrl
popa
push
mov
test
mov
mov
outsb
dec
fadd
xchg
or
stc
add
lcall
pop
sub
xor
mov
cmc
inc
fisubrs
fcoml
pop
out
neg
sti
xchg
stos
cmp
int
mov
jle
jle
sti
inc
pushf
cmp
sbb
loop
and
pop
or
icebp
cmp
std
pop
lds
and
iret
sbb
int
lret
je
shld
outsl
mov
xor
fstl
test
scas
xor
daa
add
push
imul
insb
ss
sub
jno
sbb
rorb
sbbb
pop
jb
jg
cmp
cmp
inc
add
sbb
mov
cli
push
cmp
jge
pusha
cmp
jb
fcmovu
and
fnstenv
xor
and
sbbl
out
adc
sub
lea
dec
jbe
aad
loope
inc
mov
cmp
cmpl
movsb
sub
in
cmpsl
movsb
adc
jo
jg
mov
adc
inc
xor
jmp
repnz
lcall
jg
push
sbb
xor
repnz
dec
hlt
dec
push
aaa
push
in
aam
movsl
dec
test
fbld
xor
dec
movsl
mov
inc
xor
iret
stos
xor
out
nop
insl
shrl
sbb
push
sub
data16
stos
or
jp
rorb
pop
dec
ret
out
iret
dec
adc
push
or
sahf
dec
mov
addr16
push
push
sti
ss
ret
mov
pop
leave
leave
insb
dec
mov
rcll
out
inc
enter
mov
mov
xchg
hlt
jp
hlt
cs
cmp
scas
cs
or
dec
test
pop
icebp
cs
adc
dec
loopne
or
mov
je
inc
xchg
pop
lock
pop
mov
shlb
jbe
add
xchg
hlt
xchg
mov
incb
cwtl
jecxz
bound
ss
idivb
pop
sub
xchg
popa
and
ret
stos
es
lret
pop
imul
mulb
fstl
neg
inc
add
lret
out
adc
sahf
jbe
lock
inc
cmp
mov
cmp
movsl
lods
sub
add
add
jno
call
in
jb
int
divl
jo
leave
out
add
jecxz
test
dec
xor
mov
cmc
cmpsb
andl
lcall
imul
pop
sahf
push
sub
xchg
adc
ss
bound
xor
mov
mov
popf
insb
insl
mov
lretw
in
fstps
arpl
sub
minps
pusha
lods
rcrl
jl
pushf
inc
and
push
out
xor
pop
mov
push
mov
arpl
dec
cmp
outsb
mov
or
jae
jne
iret
mov
loopne
inc
dec
xorb
adc
mov
adc
mov
addr16
cmpsl
sub
adc
adc
icebp
jp
jmp
xchg
pusha
in
loop
cmp
and
cmpsb
mov
stos
and
sahf
mov
iret
inc
daa
stc
aam
inc
and
fdivrp
xor
shlb
out
shlb
mov
pop
and
cmc
js
push
stos
sbb
or
cli
shl
mov
xor
pop
out
cltd
push
clc
xchg
pop
sbb
pop
sub
adc
pusha
shl
addr16
sub
lret
xlat
adc
jge
std
xchg
iret
adc
sub
push
inc
pop
push
fsubrs
cli
mov
push
in
mov
xchg
cmpsl
test
mov
subb
or
es
xchg
les
push
xor
icebp
sub
pop
daa
inc
jge
jmp
add
jmp
fisubl
mov
mov
cmp
fcoml
nop
push
inc
je
lahf
sbb
scas
lret
in
push
int
inc
or
pop
mov
sbbb
in
xor
addr16
cs
sbb
xor
and
out
cmpsl
iret
jmp
dec
movsl
sbb
jle
insb
icebp
stos
adc
pop
inc
cld
sti
fwait
jp
stos
dec
sbb
add
popa
push
mov
loope
mov
or
sub
fwait
outsl
adc
cmpsb
mov
mov
imul
dec
movsb
rorl
or
inc
xchg
ret
subl
and
stos
pop
dec
mov
leave
push
adc
add
lds
xchg
mov
cmp
gs
pop
pop
add
das
fdivl
or
jbe
mov
loope
inc
je
fs
leave
inc
pop
pushf
fcmovb
into
xchg
add
in
pop
aaa
or
push
or
add
leave
lods
dec
sbb
aaa
adc
incb
les
ret
in
pop
adc
outsl
and
pop
cmp
mov
lods
fdivl
cmpsl
add
stos
scas
cmp
jg
mov
sub
xchg
mov
syscall
out
daa
addl
or
add
int3
in
lods
testb
jle
cld
add
mov
inc
cmp
outsb
out
dec
fs
lds
fildll
xor
mov
sbb
fcomps
loopne
mov
inc
lahf
jo
xchg
pushf
and
sbb
sarl
mov
sub
loope
push
jne
mov
out
sub
in
and
insb
shll
cli
adc
xchg
std
data16
iret
xchg
ret
adc
rcrb
push
aaa
mov
hlt
rcrl
push
aas
push
test
js
mov
into
and
lods
shll
fcmovnbe
lret
mov
push
sub
push
cmp
cmpsb
pop
sbb
inc
xchg
adc
aam
mov
fistpll
push
rcll
pop
pop
dec
xchg
lahf
mov
mov
jecxz
mov
mov
adc
and
dec
jb
andl
fucomp
cmpsb
movsl
push
loopne
sbb
pop
cmc
hlt
jno
mov
pop
add
dec
aad
cmp
daa
dec
pop
mov
mov
jno
divl
lods
inc
nop
and
xorl
xor
adc
mov
mov
addr16
cmp
aad
pop
add
mov
add
xlat
sar
test
scas
cld
data16
cmp
mov
jg
repnz
pushf
ds
pushf
in
stos
repz
aas
push
adcl
stos
xor
jecxz
insl
inc
dec
imul
les
sub
cli
lret
fistpl
inc
sub
cmp
inc
inc
jne
lahf
pop
das
mov
pop
pop
jge
lret
out
jg
pop
cld
or
subl
xchg
jge
enter
dec
push
cmp
popf
mov
mov
push
sbbb
loope
xchg
andl
pop
mov
or
push
nop
xor
adc
dec
mov
push
cmp
enter
mov
repz
lods
mov
shlb
js
aam
inc
pop
shll
dec
mov
add
cwtl
pushf
pop
xchg
adcl
jbe
or
sar
push
sarb
dec
jo
sub
jbe
xor
xchg
dec
lock
add
jecxz
sar
imul
test
dec
mov
jb
xor
xchg
out
push
cld
sub
pop
and
fwait
push
jne
inc
or
or
stos
pop
or
lods
in
enter
mov
out
cmpb
cwtl
fimull
fcomip
pushf
repz
and
push
fcomp
scas
or
adc
or
repnz
nop
add
xor
mov
mov
frstor
xchg
pop
inc
sbb
jno
pop
iret
push
int3
and
and
add
adc
add
xorl
adc
mov
inc
push
gs
sti
xchg
sbb
cli
jb
les
inc
inc
add
and
fxch
mov
and
insb
lahf
jb
jl
cwtl
popa
cmp
std
mov
dec
add
xor
ljmp
mov
ja
arpl
mov
scas
sbb
popf
inc
xor
std
jg
cmp
movsl
mov
in
inc
xchg
cltd
jnp
mov
mov
xor
push
xchg
mov
movsl
ljmp
mov
sub
pop
decl
jo
or
popa
cmp
loope
shl
mov
jp
cmp
mov
xor
es
rep
jno
xchg
fwait
lret
sub
add
add
out
lock
repz
sbb
or
insl
idivb
ret
sbb
adc
jl
mov
insb
adc
xor
shlb
test
xlat
jns
and
outsb
dec
aam
int
popl
je
js
fbstp
out
push
test
aam
mov
jae
test
loop
in
xchg
sub
xchg
dec
dec
stos
xchg
std
lret
xchg
lea
push
js
cmc
gs
mov
scas
push
adc
loopne
mov
ss
fcmovb
push
adc
push
pushf
mov
daa
aam
call
xor
vshufpd
loopew
or
sub
mov
arpl
or
push
out
filds
sbb
stc
sarb
pusha
add
stc
sbb
add
stos
jp
int3
jp
shlb
pop
add
add
cld
es
mov
xchg
test
pop
pop
pop
xor
cmpsl
cmp
lret
into
in
jns
addb
mov
add
stc
loope
shlb
clc
sbb
jl
push
popf
xor
xchg
es
clc
xor
add
pop
ret
push
mov
mov
mov
jnp
std
js
mov
icebp
dec
pushf
cmp
fucomip
arpl
push
fildll
sbb
xlat
push
addr16
fs
sbb
pushf
mov
inc
jl
inc
test
jbe
lods
fbstp
cmc
and
pop
aaa
ss
fstpt
xchg
mov
mov
stos
es
push
jae
inc
movsl
mov
mov
stos
adc
ficompl
sbb
pop
pop
mov
add
mov
clc
imul
mov
dec
sub
adc
ljmp
pop
or
mov
shlb
outsl
lds
or
dec
push
pop
xchg
insb
cmp
mov
lock
dec
out
push
stos
cmc
mov
cmpsl
jp
std
xchg
ljmp
mov
call
mov
ljmp
repz
mov
nop
mov
scas
mov
das
aam
call
nop
mov
or
insl
sbb
int3
out
loope
xor
shrb
cmpsl
test
sarb
push
jl
sbb
orb
scas
mov
bts
adc
pop
and
mov
inc
insl
cltd
bound
sbb
int3
or
jb
fimuls
push
sub
sub
adc
test
insl
adc
xor
ret
sub
in
mov
push
jge
lods
fcoms
and
or
loope
mov
sarb
arpl
imul
call
push
lret
jmp
leave
xchg
xor
testl
inc
movsl
sbb
pop
mov
data16
repz
jae
add
and
imul
inc
mov
aam
int3
inc
icebp
ds
and
sbb
push
cmp
icebp
lods
into
mov
xor
jl
std
xchg
pop
push
dec
jns
les
popa
leave
aas
add
adc
pop
dec
les
add
mov
push
cs
jl
add
or
and
sub
shrb
xor
push
jo
sbb
adcl
fcompl
push
jae
popf
and
add
mov
cltd
xor
shlb
mov
nop
and
xchg
int
sbb
loopne
jne
pop
mov
push
xchg
stc
fsts
lret
lock
jno
dec
xor
pop
out
push
xchg
sahf
push
imul
xchg
jne
lods
fldcw
mov
nop
out
add
push
xor
and
and
fildll
pop
ret
cltd
fistl
bound
add
sub
mov
cmp
filds
and
xor
sub
inc
sbb
cwtl
lcall
pop
jmp
sub
push
mov
fs
xchg
test
sbb
movsl
xor
in
cli
stc
add
movsl
jnp
mov
mov
notb
int
or
xchg
data16
pop
roll
pop
mov
cltd
addr16
xchg
and
xchg
add
das
test
jmp
xor
call
inc
jno
push
data16
sbb
jne
push
mov
inc
xchg
sub
xchg
inc
dec
xchg
popf
pop
stos
aad
shrb
cmp
jmp
gs
hlt
mov
push
call
sub
test
push
xchg
jp
dec
fwait
mov
test
bound
sub
stos
iret
or
push
jmp
pop
push
pop
push
movsb
addr16
cmp
add
push
inc
movl
ficompl
mov
idivb
stc
jl
xor
loop
inc
js
lock
mov
nop
sahf
lea
out
loop
rdtsc
cmp
mov
data16
popa
mov
adc
shl
adc
xchg
adc
stc
out
leave
sahf
jp
push
adc
jbe
mov
fs
stos
xor
pop
inc
ss
bnd
pusha
int
imul
inc
pop
fistl
int3
nop
mov
push
or
mov
bound
pop
sub
jno
je
adc
lcall
mov
mov
sub
ljmp
cmp
stos
xchg
scas
sub
sub
xor
sub
xor
push
lret
fisttpl
mov
fwait
ja
aas
xchg
and
push
frstor
shlb
jg
push
adc
sbb
inc
inc
adc
cmp
add
jl
dec
jno
mov
pusha
sysenter
dec
fstpt
mov
stmxcsr
in
in
fsubrs
insb
mov
inc
fwait
clc
lock
arpl
ljmp
adc
mov
push
pop
jns
outsl
fucom
and
xchg
in
mov
fwait
pop
and
stos
pop
in
adc
mov
addb
fdivrp
sbb
push
and
xor
dec
sub
jmp
jmp
enter
push
inc
out
lds
mov
stos
or
or
loopne
test
cs
jns
mov
test
sub
cmpsl
outsb
dec
and
out
jecxz
in
mov
adc
mov
adc
gs
add
or
jmp
add
addr16
lods
pop
sub
shlb
loope
mov
out
sbb
leave
inc
cwtl
enter
repnz
jecxz
arpl
xchg
icebp
cld
sarb
push
push
adc
mov
inc
pushf
push
ljmp
ret
nop
ss
mov
push
rcrb
aaa
cmp
in
cmp
mov
and
cmpsb
outsl
xorb
inc
pop
inc
leave
mov
mov
pusha
inc
and
cltd
loope
dec
gs
jae
iret
adc
mov
leave
sub
outsb
repz
fwait
sbb
sbbl
insb
jns
ror
inc
test
shll
xchg
cltd
mov
xchg
bound
mov
mov
cmpsl
pop
sarb
ja
mov
mov
or
inc
sub
and
outsb
fnsave
sahf
outsl
fisubrs
ss
call
add
and
xor
and
cmp
xchg
andl
test
inc
mov
popa
fildl
faddl
repnz
mov
xchg
imul
cmp
sbb
adc
hlt
inc
sub
xlat
popa
clc
pop
enter
jnp
jae
sti
inc
pop
inc
sub
jg
pop
push
push
gs
lods
cmp
sahf
mov
pop
arpl
in
ds
int3
nop
repz
pushw
popa
mov
cltd
push
sub
pop
lahf
lret
lods
sub
addr16
sub
insl
je
xchg
jno
xlat
add
inc
pop
sbb
cwtl
jl
mov
nop
in
test
mov
aam
inc
addb
pop
subl
call
or
je
add
xchg
in
imul
push
mov
outsl
fisubrl
loope
aaa
ds
cmc
je
lods
out
out
dec
jo
daa
jo
scas
mov
cmpsb
pushf
das
or
stc
shlb
xchg
out
adcb
cmp
aaa
pop
inc
imul
jb
xchg
imul
push
dec
mov
push
mov
or
aad
dec
popf
gs
dec
sub
mov
fimull
pop
lock
push
xchg
out
stc
fcmovnb
inc
jno
mov
je
pop
lahf
gs
xchg
int
or
fstps
jp
pushf
clc
cmp
cmpsl
inc
push
mov
mov
sbb
ret
in
ds
ja
mov
jecxz
out
lahf
sbb
adc
stos
sub
or
in
fdivl
test
ret
cmp
xor
outsb
jmp
movsl
test
mov
adcl
inc
es
add
addr16
xor
fs
out
adc
and
daa
fs
scas
dec
xor
mov
cmpsb
stos
icebp
fidivs
cmp
dec
std
call
pushf
daa
inc
int
jp
sbb
xchg
add
xor
cmpsl
mov
clc
sbb
and
adc
call
jo
rolb
sbb
out
movsb
sub
push
movsb
dec
adc
jg
adc
pop
ret
fsubrp
pushf
test
jo
inc
fisttpl
xchg
mov
cmp
xor
jmp
xor
mov
xor
and
mov
mov
push
insb
popa
or
out
ja
jno
repnz
scas
mov
pop
cmp
and
adc
and
out
iret
mov
xor
sbb
sti
jmp
jns
dec
jecxz
add
outsb
push
das
jl
mov
repz
arpl
jge
jae
xchg
int3
sbb
inc
add
rorb
sahf
int
or
dec
fimuls
pop
icebp
lds
xor
stos
dec
testb
mov
or
mov
jae
pop
dec
sbb
sbb
and
mov
lea
cmp
push
scas
je
inc
dec
jne
lds
sbb
adc
lock
pop
into
sub
xor
loopne
clc
pop
dec
xchg
stc
jo
pavgw
outsb
cmp
mov
lret
lret
lods
imul
push
enter
or
mov
pop
negl
test
sarb
lret
or
aad
dec
inc
add
xlat
pop
push
xchg
outsb
icebp
sbb
push
mov
mov
mov
push
mov
mov
nop
aaa
pop
jg
inc
xor
inc
add
popf
xorl
mov
std
lahf
dec
pop
xor
cli
bnd
lds
lock
sub
cli
push
rcl
mov
lea
fbstp
insb
ficoml
pushf
popf
rclb
mov
mov
mov
in
mov
call
xchg
or
add
in
test
lods
push
adc
mov
aaa
sbb
or
js
aam
into
mov
mov
mov
call
cs
lcall
xorl
sub
mov
pop
push
xchg
mov
sbb
ss
mov
loopne,pn
jp
lods
cmp
lods
imul
mov
xchg
mov
lahf
push
lock
cli
icebp
cwtl
insl
push
jns
xchg
jne
mov
xchg
add
test
pusha
movsb
xchg
xorl
in
push
mov
mov
push
dec
xchg
mov
movsl
xor
fisubrs
test
mov
or
sub
imul
lock
adc
ret
hlt
fsubl
insb
mov
inc
gs
mov
mov
dec
dec
outsb
lock
ljmp
arpl
out
adc
mov
test
mov
mov
cmp
sub
test
pop
adc
mov
ljmp
add
mov
pop
in
loope
push
or
mov
jbe
aad
push
xchg
or
cmpsb
add
popa
dec
aas
xchg
mov
addl
pop
lcall
or
mov
js
lds
cwtl
addb
push
mov
ja
aam
mov
shrl
or
daa
or
dec
rorb
fidivrl
lock
mov
push
lods
inc
sahf
adc
xchg
pop
jnp
out
add
jl
mov
inc
sbb
inc
jp
mov
sar
je
mov
jns
mov
push
je
xchg
sbb
pusha
cmp
or
icebp
mov
cltd
into
pop
daa
cmc
mov
int3
push
les
movsl
xchg
ret
sbb
mov
insl
pop
pop
push
addr16
ljmp
popa
mov
xor
mov
mov
mov
sub
pop
sbb
sbb
or
pop
dec
iret
push
pop
cmp
addr16
lcall
sahf
ss
cmp
xor
xchg
ss
clc
in
addps
xchg
fildl
add
leave
xor
pop
ret
push
lahf
sub
test
stos
mov
rcrl
cmp
sub
fdivrl
shl
aam
dec
sarb
cltd
xchg
dec
adc
mov
cltd
loop
or
mov
push
aas
add
clc
call
jl
daa
xchg
pop
pop
adc
stc
cld
mov
lret
add
xor
add
inc
mov
movsb
outsl
mov
cltd
stos
test
push
inc
push
jb
dec
add
stos
and
ds
das
movsl
cmp
scas
and
rorl
je
pop
arpl
mov
lcall
lahf
je
loop
lods
jp
fbld
idiv
xchg
inc
dec
leave
jns
aas
insl
sbb
in
mov
iret
std
int3
inc
xchg
jb
cmp
enter
ljmp
mov
xor
ret
adc
mov
or
in
pop
and
shrb
or
loope
lods
adc
mov
enter
adc
stc
data16
push
js
orb
sbb
fwait
es
repz
into
push
jge
mov
jbe
rdtsc
ja
jne
push
idiv
addr16
add
mov
test
push
jg
out
psubd
mov
fiadds
adc
adc
adc
jae
ds
or
mov
cmpl
jmp
test
mov
mov
insl
int3
cli
lret
cltd
and
push
cwtl
lcall
and
push
xor
loopne
add
pop
mov
int3
sub
jo
mull
mov
pop
fcom
repz
iret
int
jmp
shr
jnp
mov
or
aaa
addr16
inc
cltd
add
mov
cli
std
xchg
sarb
xchg
movsb
jne
xchg
stos
lods
cmp
mov
nop
mov
xor
std
xlat
inc
lods
imul
adc
xor
aaa
cmp
xor
cmpsl
jnp
add
sbb
inc
adc
pop
mov
movsb
inc
push
fisttpl
test
mov
push
pop
fs
stc
jmp
xor
adc
dec
sub
sub
push
imulb
mov
push
sub
popf
int3
xor
bound
imul
inc
mov
mov
popf
sbb
or
inc
mov
sub
mov
repz
das
jp
sbb
dec
and
cmpl
jge
push
pop
push
int3
cmpsb
mov
or
push
dec
xchg
jnp
fs
rorb
inc
sbb
das
xchg
cwtl
mov
test
notl
sbb
xor
dec
or
cmc
jbe
pop
data16
int3
inc
sub
push
mov
roll
pop
ss
insl
push
pop
stos
dec
addb
test
cmpsb
cmp
inc
and
pusha
sbb
mov
jmp
outsb
outsb
adc
and
pop
sub
push
icebp
and
pop
mov
ja
in
mov
pop
int
and
mov
je
fstpl
stos
xchg
jmp
test
jl
push
xor
pop
cwtl
adc
mov
jg
jle
sti
sub
stos
notb
cmp
or
repz
aas
jne
insl
insb
mov
or
jp
lods
xor
dec
mov
adc
push
adc
xorb
mov
and
xchg
shll
fldcw
adc
in
mov
int
mov
imul
mov
addr16
in
or
xor
shl
xor
lods
jno
or
loop
fmull
lret
and
sub
push
clc
out
ljmp
mov
js
daa
inc
sub
cmpb
xor
movsb
ret
pop
dec
imul
mull
cld
outsl
inc
daa
lcall
and
shll
xor
jp
dec
sub
xchg
push
aaa
lods
pop
lret
add
insl
mov
add
sarb
pop
jp
push
insb
in
cmp
sbb
xchg
insb
adc
sbb
jbe
jecxz
outsb
push
aas
mov
popf
sub
in
outsl
cltd
sub
rclb
mov
mov
jno
cmp
push
mov
shr
and
enter
mov
ds
push
cwtl
iret
mov
xor
or
mov
stc
test
push
jl
add
xor
sbb
or
int
inc
push
pop
sar
enter
xchg
cmp
jecxz
mov
xor
addr16
in
sbb
nop
pop
pusha
and
inc
pop
xor
repz
cmp
mov
inc
push
fcomp
ds
sub
in
mov
jb
movsb
jle
int3
mov
je
outsb
sub
fisubs
sbb
ret
lcall
push
inc
adc
les
inc
and
sbb
mov
xchg
scas
into
add
xor
push
xor
mov
nop
xchg
and
nop
add
jo
ret
arpl
fisttps
push
xchg
mov
andb
lcall
les
sub
movsb
inc
popf
testl
sub
mov
mov
cltd
adc
shrb
sbb
lock
rorl
jnp
dec
cmp
push
jge
push
adc
movsb
imul
fwait
imul
movsb
sbb
lret
je
ret
jae
andl
push
mov
and
rcll
mov
mov
scas
insl
popa
push
push
shll
enter
pop
xor
and
add
inc
fnstsw
jno
into
aas
scas
lcall
adc
in
shll
enter
fwait
cmp
shlb
icebp
mov
sbb
clc
std
repz
push
in
adc
and
mov
outsl
xchg
dec
adcb
lods
outsl
pop
push
loope
rcrl
test
outsl
push
leave
xor
sub
in
lcall
lret
cmp
repnz
mov
cmp
cltd
lret
and
pop
popf
lock
dec
mov
pop
adc
pop
add
and
xchg
cmp
movsl
stos
pop
jne
into
lea
dec
inc
push
pop
xchg
sarl
xor
jecxz
das
js
add
cmpsl
pop
mov
das
loopne
ja
mov
mov
call
aas
adc
pusha
mov
aas
out
and
dec
pushf
and
xchg
mov
test
aaa
stos
mov
pop
inc
outsl
sbb
dec
adc
repz
sbb
pop
fdivrl
xchg
jno
inc
adc
nop
mov
stos
sub
mov
flds
push
sbb
push
pop
and
lods
push
xor
or
scas
pop
mov
sub
sub
pusha
pop
sbb
rcrb
call
orb
or
xchg
mov
jns
jno
jle
in
movsl
je
pop
jno
pop
je
pop
clc
xchg
sahf
test
pop
shl
inc
mov
push
addb
out
mov
xor
mov
aaa
lods
add
or
inc
shrb
jmp
mov
inc
inc
jecxz
sbb
mov
or
or
push
enter
stos
pusha
insb
push
cmp
sbb
cld
fcmovne
nop
xchg
fwait
mov
sbb
pop
inc
cli
mov
clc
mov
xor
cmp
mov
fidivs
int3
xor
incb
sub
jl
xchg
lods
pop
sti
mov
pop
nop
inc
ljmp
pop
inc
in
in
push
push
dec
and
pop
dec
sub
xchg
inc
jle
or
jns
sbb
fcmovb
xor
dec
insl
push
roll
aam
stc
movsl
leave
nop
mov
pusha
or
jbe
mov
cmc
ss
fsubrs
je
jle
subb
in
inc
jne
sbb
dec
fdivs
adc
jne
sub
mov
ret
dec
inc
mov
inc
push
lods
jge
inc
mov
mov
xor
lods
mov
push
das
add
sub
call
sub
fdivrs
fsubs
shrb
gs
adc
arpl
scas
mov
xor
out
add
lock
xchg
nop
int
xchg
jae
or
mov
jnp
or
add
sbb
jmpw
xor
cwtl
loope
int3
mov
test
push
pop
lret
jp
xor
jmp
dec
ret
mov
cld
xchg
or
ljmp
clc
imul
xor
or
cmp
pop
shlb
sahf
jge
jl
pop
and
iret
add
inc
subb
pop
pop
shlb
aam
xchg
cmp
or
daa
push
mov
mov
sbb
cmp
mov
adc
xlat
xchg
push
xlat
mov
adc
sbb
sub
imulb
ret
add
ljmp
mov
add
bswap
loopne
jb
in
dec
mov
push
jl
movsl
pop
push
xchg
pusha
jp
push
xor
sub
bound
add
imul
test
mov
imul
mov
fildll
adc
pushf
ljmp
xchg
jae,pn
push
jmp
adc
adc
mov
mov
jecxz
pop
lahf
and
scas
push
push
push
push
loopne
and
sbb
pop
bound
xchg
pop
jnp
addl
shlb
dec
out
jb
stos
xchg
mov
movsb
adc
inc
movsb
in
bound
pop
bound
jbe
jne
jp
imul
fstl
js
fistpl
stos
pop
sub
xchg
mov
cwtl
mov
inc
cli
out
leave
jno
and
mov
inc
fwait
xchg
adc
mov
std
loope
lods
orb
ljmp
xchg
orb
mov
push
test
add
cmp
mov
lea
mov
mov
mov
pop
jne
cmp
push
mov
stos
pop
jmp
add
lods
sbb
sbb
jb
movsl
jl
dec
mov
or
add
sbb
ret
cmp
sub
repnz
mov
movsl
fwait
mov
or
cmp
or
sub
cmp
test
mov
out
cmp
xor
sbb
dec
repz
pusha
add
fidivl
add
rcr
adc
sarl
push
cli
dec
xchg
jmp
jecxz
jl
sub
pop
push
jo
scas
fldl
mov
call
idivl
push
pop
sub
cmc
jge
loope
pop
sbb
xor
mov
insl
in
and
rol
xchg
popa
inc
mov
push
fistpll
jg
mov
adc
aam
xchg
push
movsl
inc
call
push
mov
cmp
imul
in
scas
fistps
inc
mov
mov
mov
ret
lods
sbb
imul
sub
shll
fists
inc
add
sbb
fstl
push
int3
shrl
addr16
outsb
sbbb
pop
jae
adc
jle
stc
imul
xchg
popa
in
jmp
fidivs
enter
leave
lods
loop
mov
sbb
xor
jnp
xchg
and
pusha
leave
stos
sbb
mov
pop
div
stos
lcall
out
push
xlat
or
jge
pop
je
cltd
hlt
fnstsw
imul
push
lret
pop
or
or
mov
loopne
add
les
dec
popf
xor
mov
lahf
and
loopne
rclb
jge
roll
pop
push
xor
loop
pop
scas
lret
daa
xor
push
lahf
shll
ss
testb
xor
std
mul
cmp
mov
push
pop
mov
cltd
jle
dec
cmp
mov
mov
mov
dec
lock
xchg
mov
and
and
push
popa
mov
ror
pop
fadds
add
leave
cwtl
mov
fbld
push
jecxz
jne
test
inc
pop
inc
sbb
xchg
dec
mov
daa
lea
aam
pop
fldenv
or
mov
jae
stc
lret
jl
repz
pushf
fcmovb
or
adc
notb
cmp
xchg
sbb
out
mov
ret
sti
mov
stos
mov
lret
push
sub
lret
add
stos
cmpsb
add
xchg
test
mov
mov
addl
push
sub
or
cmpsb
outsl
pop
jns
xchg
xchg
iret
in
shr
test
sti
inc
cmpsb
mov
xchg
jecxz
and
or
or
add
cmp
out
ljmp
sub
imul
enter
xchg
xchg
ds
jmp
adc
in
aad
xchg
fsts
mov
add
mov
push
lret
dec
mov
imul
orl
outsb
out
xchg
push
sbb
lods
or
enter
xchg
cld
mov
roll
push
cmc
pop
sub
icebp
adc
ds
sahf
cmc
mov
push
sub
scas
add
mov
pop
cmp
mov
xchg
subb
adc
out
mov
test
lcall
mov
stos
lret
ret
push
push
push
cmc
fwait
push
lock
dec
cli
and
sbb
xchg
push
cld
out
stos
aam
mov
shll
sti
jns
mov
adc
pushf
jns
sarb
inc
push
add
sbb
mov
pushf
push
rorl
test
test
and
clc
aad
inc
les
vprotw
sub
cltd
sub
mov
ret
pop
jae
xor
cld
dec
add
lcall
sbb
sar
push
orl
or
fadds
push
mov
mov
or
xchg
lds
pop
dec
and
mov
test
int
add
lcall
cmp
cmp
adc
jo
add
mov
stos
dec
fdivp
movsb
mov
imul
lahf
idivb
movsb
leave
in
subps
mov
sub
dec
and
xchg
push
outsb
pop
mov
adc
pop
jmp
rcrl
dec
aam
add
ja
fwait
cmp
fwait
stc
lods
adc
pushl
sub
addl
fcmovnbe
mov
divl
nop
inc
lods
bound
aam
jo
aam
sub
mov
lods
mov
rcll
pop
iret
jmp
xchg
inc
add
mov
adc
lea
xchg
mov
clc
out
in
rcll
adc
imul
pop
jne
fmull
cli
sub
cmc
dec
es
dec
or
jo
cld
cli
lds
mov
jle
cmc
enter
push
mov
cmc
aaa
inc
ret
out
call
pop
pop
lcall
mov
adc
dec
lods
cmpsl
icebp
push
inc
jb
loope
push
ja
test
add
insl
and
lds
cmp
mov
test
cmp
push
and
ss
out
dec
dec
dec
sub
xor
jl
aas
sub
xchg
push
shlb
cmpb
aas
inc
lods
add
outsb
add
shrl
pushf
cld
jmp
pop
cmp
cmp
jns
jae
inc
jo
xlat
jns
addr16
stos
jno
jp
cli
jge
xorb
hlt
xor
adc
push
jp
loope
sahf
pop
mov
fcmovb
in
cmp
fisubrl
mov
and
hlt
sbb
imul
pop
jmp
imul
outsb
or
xchg
scas
pop
push
pusha
or
fwait
adcb
pop
mov
lods
hlt
inc
bound
test
es
mov
shl
pop
arpl
xor
or
mov
cmpsb
push
or
sahf
ret
pop
sbb
mov
out
insl
mov
mov
scas
mov
les
std
ljmp
das
popa
stos
mov
xchg
xchg
in
xchg
stos
or
lcall
test
sub
jo
pop
das
pop
sarl
cs
push
outsl
loopne
repz
call
fstl
or
stos
in
sbb
daa
es
or
cs
pop
mov
outsl
insl
repnz
loope
xchg
stos
stc
les
or
ss
add
push
into
jnp
loope
das
mov
adc
mov
dec
adcl
xorl
imul
fistpl
mov
jno
mov
cmp
jge
cmp
and
jbe
inc
rcrl
inc
push
or
add
mov
vandps
sbbl
popa
and
lods
xor
adc
mov
enter
lea
add
fcomps
stc
push
jle
or
mov
jl
pop
sbb
mov
xor
movsl
iret
rclb
cmpsl
je
out
mov
and
mov
sub
mov
push
sbb
leave
mov
out
jecxz
es
aam
enter
outsb
movsb
adc
jbe
mov
cmc
dec
cmp
inc
cmp
dec
movsb
test
mov
and
repnz
aaa
int
fnstenv
sub
imul
push
lahf
xchg
sbb
ljmp
jecxz
loope
jnp
mov
push
pshufb
out
mov
pop
dec
ret
xor
dec
rorl
mov
mov
adc
push
adc
lock
pop
pop
cli
pop
pusha
xor
es
jmp
scas
mov
mov
notl
pop
add
and
outsb
add
xchg
sti
mov
test
mov
push
jne
lock
cmpl
mov
test
xor
pushf
or
sbb
push
or
mov
ret
mov
lock
ficoml
xchg
loopne
lods
xchg
sub
cmp
icebp
sub
pop
jbe
mov
adc
fninit
pop
inc
mov
es
les
adc
arpl
movb
not
lcall
jo
lcall
mov
jns
sub
or
sub
outsb
jnp
mov
push
xor
adc
sahf
subb
imul
jecxz
out
lret
pop
push
fstps
sub
inc
cmp
push
xchg
and
mov
pop
xchg
cmp
js
addl
lret
fimull
add
and
dec
popa
mov
jmp
aas
and
inc
ficomps
nop
jp
inc
jb
mov
fisubl
enter
jl
js
enter
pop
xor
lahf
fsubs
adc
pop
jle
push
cmpsl
fildll
in
add
insb
push
stc
jg
popa
lea
and
inc
sbb
push
xchg
outsl
aad
push
mov
xchg
or
and
pop
out
sub
fisubrl
data16
and
sub
stos
stos
mov
push
popf
in
inc
in
inc
mov
cwtl
outsb
jmp
testl
fwait
aad
push
in
jb
movb
xor
out
hlt
mov
push
std
jbe
test
jns
bound
scas
lret
inc
lret
sbb
cmp
daa
inc
cltd
out
mov
divl
movq
cmp
jne
mov
mov
lret
push
fsubrs
sub
negb
sarl
repnz
shr
push
or
cmp
lods
push
std
xchg
add
sub
into
call
push
int
out
insl
ljmp
xor
js
jp
mov
sbb
mull
dec
sahf
or
xchg
fs
add
xchg
clc
pop
pop
imul
mov
shll
mov
clc
mov
std
pop
inc
imul
mov
pop
lock
mov
dec
fprem1
std
mov
ljmp
rcl
push
jge
inc
push
pop
out
int3
inc
cmovge
faddl
insl
dec
push
cli
lahf
fnstenv
jno
add
sti
mov
ljmp
sbb
mov
sub
mov
xchg
enter
cwtl
nop
mov
loope
jp
jmp
jbe
bound
mov
aad
xor
dec
cmp
loope
adcb
dec
jle
mov
mov
push
mov
adc
adc
ror
hlt
lret
out
cmp
sbb
cmp
movb
cli
push
push
loope
daa
jle
aam
xchg
lock
cmp
loop
push
int3
addr16
cld
sbb
xlat
push
sbb
ret
and
out
pop
in
stos
pop
mov
outsb
xor
xlat
shr
mov
cmp
sbb
sbb
push
mov
dec
adcb
clc
xchg
push
push
xor
mov
mov
shlb
dec
lret
and
hlt
test
inc
push
shrl
xchg
inc
pop
and
pop
jecxz
jns
fisubrl
out
loope,pn
jae
jno
repz
cwtl
ret
or
push
icebp
xor
imul
mov
inc
pushf
sbb
xchg
addb
and
or
cmp
and
call
lock
scas
inc
int3
shrb
lods
pushf
faddl
aas
in
sahf
clc
jge
repz
dec
adcl
lret
fldcw
xchg
ljmp
mov
js
jnp
rcrl
sbb
dec
mov
add
or
add
pop
fnstcw
adc
add
xor
sub
pop
sub
fldt
outsb
sbb
and
cwtl
jno
shll
or
inc
pop
cmpsb
rcrl
ds
inc
sub
call
adc
cwtl
outsl
pop
mov
mov
jnp
xchg
push
add
in
xchg
rorb
mov
in
add
pop
or
sub
psrlw
leave
pop
inc
adc
daa
orl
xchg
add
repz
pop
mov
lret
or
lret
fs
and
add
in
in
scas
loop
dec
xchg
sahf
call
adc
pop
mov
jb
mov
pop
imul
jbe
mov
insl
inc
pop
xchg
lds
mov
shlb
shll
es
lret
scas
out
mov
jg
or
cs
rolb
arpl
iret
js
xlat
xchg
jmp
repnz
add
xchg
pusha
dec
jb
mov
xor
xor
pop
loopne
cld
in
cmpsb
pushf
add
sbb
mov
into
shl
sbb
dec
lods
lahf
dec
jmp
inc
mov
sub
add
push
dec
sbb
insb
cwtl
push
nop
xchg
jnp
stos
pop
sub
fcmovnu
sub
lea
mov
lcall
pop
sar
cmp
ds
pop
or
lods
rorl
insb
test
addr16
pop
insl
in
insl
fs
add
jbe
sub
mov
pop
push
ficompl
push
or
mov
ljmp
add
xchg
div
mov
insb
push
stos
mov
pop
fisubrl
adc
dec
add
rcll
loope
push
add
call
add
incb
sar
sub
push
push
aaa
out
xor
test
add
les
adc
ret
pop
call
cmp
adc
xor
movb
mov
pusha
mov
mov
mov
sub
pop
inc
pop
mov
or
mov
push
and
lea
lods
mov
jp
aad
gs
mov
ret
scas
mov
cmp
xchg
call
cmpsb
inc
cld
mov
xor
repz
adc
cmp
xor
mov
adc
sub
and
test
adc
sbb
lods
pop
mov
scas
or
enter
push
jmp
adc
sub
imul
in
movsb
rcrb
jmp
push
inc
mov
dec
sub
and
mov
ret
push
lock
into
sti
xchg
movsl
test
ret
inc
push
popf
sbb
call
lock
dec
cmpsl
int3
sub
push
gs
shrl
inc
xor
push
pop
testl
aam
outsl
mov
jecxz
sbb
inc
mov
lcall
mov
sub
pop
add
test
add
test
sub
adcl
adc
mov
mov
out
dec
inc
pop
test
cld
push
leave
aas
imul
mov
fnstenv
and
int3
xor
add
mov
xor
sub
rcll
jecxz
bnd
lcall
mov
pop
jge
adc
idivb
xor
sbb
sub
xor
push
fs
lcall
jl
test
sbb
sbb
and
int
xor
xchg
xchg
popa
lcall
sbb
dec
jg
dec
or
jb
push
add
int
mov
jg
cmp
push
cmp
int3
jmp
jecxz
jo
lret
xor
mov
xor
das
stos
or
dec
mov
rorl
push
or
test
fidivrs
rcr
aas
jbe
xchg
aaa
mov
fildll
xchg
inc
or
fcomps
movsl
add
pop
mov
push
rcrl
mov
mov
inc
ret
xlat
lret
es
add
jl
mov
push
shr
cwtl
js
add
and
mov
loop
adc
cmp
sarl
out
push
xchg
lea
insl
xchg
xor
sbb
xchg
mov
push
mov
bound
addr16
mov
popl
jbe
lock
loopne
dec
clc
lods
jle
pusha
imul
dec
div
into
lahf
scas
sub
test
outsl
push
fimuls
push
mov
pop
jle
add
mov
fsubs
test
inc
push
inc
xchg
les
add
cmp
int
loope
jl
je
addl
in
fs
popf
mov
int3
repz
mov
repz
dec
push
pop
cmp
test
or
push
xchg
rcrb
pop
fsubl
pop
mov
enter
dec
lret
rorb
fs
popa
sub
fcomps
add
lahf
and
lods
push
add
jae
scas
ljmp
dec
into
dec
repnz
jae
jg
loopne
cmp
jecxz
mov
fdivrl
movsl
push
fisubl
cmp
sahf
push
out
movl
sub
xor
mov
int3
fildl
scas
ljmp
push
mov
test
scas
xchg
mov
rorb
test
fdivrl
xchg
ret
pop
movsl
invd
jnp
mov
xchg
pop
fidivl
fwait
inc
test
jbe
pop
mov
mov
imul
jmp
gs
out
sub
movsl
inc
stos
jg
jbe
jne
or
jge
add
push
aam
enter
xchg
stos
or
pop
mov
mov
outsl
movsb
das
daa
in
xchg
inc
arpl
imul
adc
sbb
idivb
pop
popf
fisubrs
popa
pop
push
out
repz
aad
add
xchg
pop
orl
dec
mov
daa
sti
or
jnp
mov
loop
push
push
or
loop
push
std
xchg
mov
ret
push
push
jecxz
fimuls
imul
bound
xchg
mov
cmpsb
fistpll
xor
add
iret
mov
jmp
aam
rorb
out
xor
pop
xchg
scas
call
aas
nop
mov
in
mov
xchg
pop
jbe
pop
dec
jecxz
jmpw
fiadds
sub
je
iret
lea
cwtl
rcll
xchg
lea
lock
cmp
mov
daa
add
cmp
movsl
sub
popa
cld
cld
ss
aas
add
add
adc
mov
pop
cli
sub
aam
push
cli
sub
rol
outsb
jb
pop
sbb
fwait
movsl
push
cltd
loop
pop
repnz
push
jb
fstpl
and
or
dec
xorb
lret
sarl
ss
push
sub
cli
enter
rcrl
xlat
adc
sbb
and
cmc
icebp
subl
xor
out
incl
adc
inc
push
fisubl
repnz
mov
mov
xchg
push
jb
in
inc
xor
push
push
sbb
xchg
mov
out
or
iret
push
iret
xor
lret
pop
mull
mov
in
mov
leave
xchg
stos
mov
loopne
mov
adc
inc
ja
cmpsb
or
imul
add
pop
sbb
mov
int3
inc
insb
cmpsl
sbb
arpl
subl
mov
into
inc
popf
dec
pop
mov
clc
cmp
je
lret
pop
jl
popa
repz
pop
fwait
mov
xchg
mov
sub
sbb
sub
into
xor
push
fld
stos
scas
cwtl
pop
stc
sbb
mov
das
mov
dec
rcl
js
addr16
insl
popf
xchg
stos
dec
dec
out
sub
aas
inc
xlat
subl
js
sti
out
in
movsl
cltd
xchg
mov
leave
mov
inc
adc
ja
xorb
mov
push
inc
insb
inc
int
adc
movsb
xor
mov
clc
mov
dec
dec
pop
lahf
loope
xchg
sub
xchg
inc
je
shrl
jg
xchg
cmpsl
mov
aaa
inc
loop
cwtl
sti
clc
mov
dec
scas
int
mov
into
mov
cwtl
jmp
iret
loop
or
mov
aaa
lret
lcall
dec
int
dec
sbb
xorb
out
sahf
push
sub
addr16
sub
sub
or
mov
sbb
ja
mov
sub
test
push
dec
adc
push
cmp
arpl
shll
enter
pop
sti
sub
mov
xchg
leave
mov
xchg
or
push
push
in
fiadds
cmp
sahf
pop
pop
pop
in
mov
jl
ds
int3
ret
mov
ljmp
movsb
fnstsw
and
rcl
or
sbb
stos
mov
sub
int
mov
sbb
or
roll
sub
fcoms
addr16
dec
insb
icebp
insl
inc
fldenv
out
xor
iret
dec
ret
or
ja
xchg
js
insb
push
loop
mov
out
cmpb
cmp
sub
sbb
pushf
lds
sbb
mov
xlat
mov
rcrl
divl
hlt
pop
ret
cmp
pop
cmp
test
sub
ja
mov
call
inc
dec
mov
mov
mov
or
jmp
and
int
cmpsl
dec
cs
sub
mov
cmp
andl
jp
repz
pop
mov
lret
inc
sbb
sbb
mov
jb
andb
xor
inc
loope
dec
xor
adc
aam
popa
out
mov
test
xchg
pop
imul
insb
ret
mov
daa
push
stos
mov
shrb
and
leave
cmp
push
addr16
or
ret
imul
and
in
repz
sbb
adc
sub
mov
ret
cld
in
xorl
push
enter
jp
and
mov
jnp
inc
xchg
test
movsb
cli
add
les
mov
adc
cmp
in
setb
jmp
push
sbb
xchg
bound
lcall
iret
xchg
mov
add
adc
xchg
stos
xchg
aam
out
adc
les
lock
and
test
adc
mov
pop
cmp
lods
xchg
push
mov
jmp
rorb
in
jp
arpl
decb
mov
in
movl
mov
fists
bound
sub
fistpl
inc
add
mov
lret
and
jo
xchg
sbb
adc
jp
push
or
xor
mov
xchg
mov
cmp
inc
in
es
xor
movsl
mov
je
out
imul
dec
test
sbb
iret
loopne
push
or
xor
cmpsb
jae
int3
jp
shl
rorl
sahf
stc
mov
aam
adc
mov
lock
cmpsb
mov
sbb
pop
add
mov
arpl
mov
pusha
adc
pop
sbb
inc
sbb
out
leave
or
xchg
shlb
arpl
cmpsb
mov
sarb
idivl
mov
cld
lcall
fucomi
fwait
hlt
jb
xchg
cltd
ds
mov
push
scas
sbb
stos
incl
cli
pop
cmp
jg
popa
or
xchg
in
and
bound
adc
stos
dec
insl
push
adc
xchg
clc
pop
in
in
addb
aam
clc
stc
movsb
das
or
mov
or
jno
ret
mov
clc
repnz
pop
jno
sub
inc
fistps
sbb
ds
push
in
mov
outsb
push
int3
xlat
dec
or
aad
lret
ja
jmp
out
mov
dec
mov
sbb
movsl
adc
jp
or
aaa
fwait
dec
xchg
dec
lahf
fstpl
das
jae
aad
lret
inc
push
inc
xorb
dec
insl
xor
shr
jae
push
jns
or
mov
mov
daa
or
insl
in
xor
mov
xor
sbbb
mov
popf
arpl
adc
sbb
mov
inc
into
pushf
sarl
xchg
hlt
cs
mov
hlt
mov
sbb
inc
out
inc
jno
xlat
gs
mov
jo
mov
pop
inc
movsl
push
lcall
push
clc
pusha
nop
jae
xor
pop
orl
xchg
and
mov
rcrl
lahf
xchg
das
cmc
out
pop
inc
cmp
stos
push
push
fnstcw
mov
adc
dec
pop
jnp
in
not
and
mov
sahf
push
jo
mov
pop
pop
cld
out
orb
mov
out
xchg
mov
mov
fsubrl
and
cli
add
test
pusha
mov
xchg
xchg
out
add
clc
dec
ficoms
movb
clc
and
mov
mov
in
dec
rolb
outsb
jne
lods
das
mov
adc
jno
imul
xor
imul
jno
adc
dec
lock
mov
mov
push
sbb
iret
adc
mov
lock
xchg
invd
cld
add
test
mov
adc
xor
and
and
pop
adcb
aam
ret
sub
jno
xlat
adc
scas
out
je
ss
mov
and
or
pop
lret
inc
sub
or
lcall
add
inc
adc
push
enter
mov
fucomp
frstor
stc
fiaddl
fs
dec
cwtl
xchg
sub
sbb
int
cmp
aas
into
fmulp
in
sbbl
sbb
xor
cli
mov
push
out
test
sub
push
adc
jg
data16
out
mov
movsl
cmpsl
mov
lea
popf
jae
lods
out
movsb
mov
cmp
fdivrl
insb
outsb
sahf
dec
dec
ds
add
shll
push
cld
lods
fidivl
dec
mov
cmp
jmp
std
insl
dec
jnp
fwait
inc
mov
outsl
or
and
mov
mov
clc
dec
sarl
jbe
aam
inc
fmull
push
sbb
jle
outsb
insl
inc
fs
aas
and
repnz
push
xchg
xlat
xchg
add
and
pop
lea
dec
mov
pop
loopne
xchg
popa
jecxz
mov
or
cmpsb
sub
push
inc
shlb
out
sbb
mov
cmp
jmp
insl
sahf
dec
sub
test
and
or
fwait
sahf
ds
pop
es
mov
jo
iret
cld
ljmp
cltd
adc
int
pop
test
xor
lret
pushaw
adc
jmp
xchg
cmpsb
mov
repz
jns
ds
loope
xchg
push
cmpsl
pusha
sub
sahf
mov
nop
cld
aas
adc
dec
and
stos
popf
mov
jle
adc
jl
pop
cs
das
push
outsb
mov
repz
dec
add
sbb
cmp
pop
fildl
inc
repz
shl
and
std
jmp
rcll
sbb
and
push
mov
dec
rcr
scas
daa
aad
dec
dec
cli
push
dec
xchg
lcall
xchg
inc
jo
lret
test
rcrb
cs
sub
add
push
jns
movsl
outsl
test
lock
push
add
icebp
outsl
sbb
gs
iret
sbb
outsb
addl
push
adc
in
fidivl
in
js
cmc
mov
scas
mov
xor
adc
mov
jno
dec
add
cmp
mov
pop
ficomps
mov
or
dec
jb
pop
and
mov
inc
stos
std
mov
jo
out
cmpsl
pop
push
push
push
pop
andl
aaa
loope
mov
fstps
scas
push
sbb
xor
notb
popf
jl
and
stos
pop
vpmuludq
mov
dec
pop
sarb
lret
cmpsb
insl
cmp
or
lods
out
ljmp
clc
xor
mov
mov
mov
sbb
mov
or
and
mov
ds
jne
in
loop
out
mov
in
cmp
sbb
clc
out
jmp
shr
js
imul
div
inc
dec
insl
xchg
adc
aam
push
nop
and
push
rcll
sub
stos
cmc
adc
push
mov
cmp
sbbb
hlt
test
int3
inc
pop
pusha
push
mov
inc
and
jle
jns
add
inc
mov
or
mov
insb
scas
xchg
pusha
jle
xor
scas
iret
aaa
sub
pop
add
pushf
cmp
and
je
mov
lret
inc
out
pop
sti
int3
mov
mov
xchg
sbb
aas
idivl
mov
mov
shrb
adc
mul
fldl
pushf
imul
out
push
shl
negl
rorb
sti
cmp
repnz
mov
in
cmp
or
pop
out
or
cmc
mov
mov
std
gs
push
inc
sub
nop
adc
jecxz
sub
rolb
rcll
stos
push
inc
add
fcmovbe
and
cmp
mov
cmp
add
mov
push
add
sbb
movsb
std
ja
rcrb
pop
fistps
add
mov
sar
je
sub
test
jno
mov
push
outsl
jae
xchg
test
testl
adc
cld
sub
inc
cwtl
icebp
arpl
test
out
mov
arpl
lret
insl
xor
inc
and
test
and
sub
les
movsl
mov
fdiv
dec
mov
aam
push
lods
pop
mov
xchg
mov
cmp
and
xor
push
cmpsl
push
aad
sub
cmpsb
rolb
pop
arpl
shrl
int3
cwtl
sub
mov
adc
scas
lret
jo
loope
loope
xchg
arpl
cmc
jecxz
jns
pop
dec
pop
mov
dec
xchg
mov
cmp
orl
cmp
loope
les
or
ficoms
pop
std
mov
mov
fsubrp
adc
sbb
xchg
inc
jl
sbb
gs
das
pop
insb
xor
push
push
cmp
xchg
xor
ljmp
mov
fildl
push
shrl
pop
and
addr16
popa
test
inc
int
mov
pushf
and
fildl
inc
push
in
subl
mov
je
push
xor
lret
in
inc
lcall
movl
pop
and
push
dec
rclb
outsb
lds
cltd
adc
cld
and
jmp
xchg
xor
sbb
push
mov
out
jmp
mov
pop
xchg
sbb
cmp
push
addr16
pop
out
or
pop
pop
bound
fbld
popa
or
movsl
dec
push
and
and
fcmovb
ja
sahf
adc
lahf
movsl
xor
movsb
jnp
sub
xchg
adc
aad
xor
cld
les
jp
xchg
pop
cmp
inc
es
std
dec
mov
shrb
xor
lds
insl
int
xorb
pop
pop
xchg
jne
test
push
jns
cs
jg
dec
mov
mov
mov
dec
jmp
mov
aad
ror
mov
adc
sbb
outsb
pop
push
cmp
inc
popa
xor
push
mov
idiv
mov
mov
xchg
fadds
inc
push
shlb
addr16
cmpsb
les
test
mov
daa
mov
repnz
pop
sbbl
rcrl
insb
scas
loope
cmpsl
dec
fistl
icebp
mov
in
stc
mov
mov
push
xchg
pusha
xor
cld
xor
in
dec
jns
xchg
pop
incb
loop
pusha
mov
std
ljmp
adc
mov
mov
repz
cmp
pop
or
pop
cld
mov
cmp
ret
int3
jbe
jecxz
ss
cmpsl
cmpsl
test
rclb
ret
add
movsb
aam
push
pusha
xor
mov
ja
pop
mov
bound
mov
xor
jg
les
adc
cltd
or
fistps
mov
ucomiss
sti
mov
fstpl
jno
addr16
imul
adc
mov
fdivs
mov
ret
lcall
push
xor
fnstsw
cmpsl
jmp
xchg
sahf
push
imul
es
sbb
insl
jecxz
dec
cld
mov
sarb
adc
jmp
dec
pop
mov
aas
or
inc
imul
imul
ret
in
pop
pop
mov
or
dec
mov
mov
pop
test
xchg
adc
add
jae
mov
xor
aas
xor
dec
add
lret
lods
adc
inc
rolb
inc
bound
adc
and
add
sbb
mov
rclb
lahf
ret
mov
sbb
cmc
int
and
xlat
sbb
hlt
fbld
and
mov
xchg
sahf
cmp
xor
xlat
or
add
pop
cmp
pop
in
fldcw
adc
cmp
adc
push
ret
and
aam
cmp
sub
sub
adc
add
test
sub
pusha
push
xlat
imul
xchg
push
sbb
addr16
xor
aam
inc
std
addb
pop
fists
out
add
cwtl
adc
ds
push
mov
or
sub
xor
pusha
popa
xor
xchg
pushf
xchg
mov
cmp
sbb
leave
sbb
negb
jle
cmp
int
xor
fstps
out
xchg
inc
into
xchg
insb
xor
add
in
jle
shll
cltd
xchg
jle
push
out
sahf
mov
add
sub
and
addr16
mov
xchg
popf
mov
mov
imul
popf
insl
faddl
sbb
jecxz
clc
mov
dec
insl
mov
add
sbb
inc
imul
aam
cwtl
xor
bound
and
fucomip
pop
push
repz
pop
fnsave
inc
sbb
push
add
cli
pop
push
dec
dec
cld
adc
inc
mov
lods
mov
and
fs
dec
inc
pop
out
dec
call
push
cmp
jns
rorl
and
lret
sbb
inc
xchg
repz
rolb
je
sub
adc
mov
push
out
push
pop
jp
lahf
mov
into
dec
test
cmp
insl
lods
dec
test
cmpsb
pop
mov
xchg
pop
cmpsl
mov
cltd
sub
mov
mov
ja
sub
pop
mov
jb
jg
xlat
xor
sub
fsub
push
shll
inc
outsb
adc
dec
ja
mov
orb
inc
outsl
push
sbb
mov
cmp
cmc
into
outsb
pop
insl
adc
popa
push
jg
lea
dec
pop
subb
aad
lcall
stos
incb
push
enter
mov
inc
cmp
outsl
cltd
adc
or
pop
test
mov
or
mov
dec
cmp
fsubrl
sbb
and
add
sbb
ret
inc
fisubl
mov
cmp
inc
orb
les
sub
test
outsl
jb
cmp
sub
ret
in
loop
mov
cmpb
or
pop
lea
dec
fildl
jno
icebp
ds
mov
mov
test
ret
stc
sbb
fistpl
insl
inc
int3
pop
mov
cmp
rolb
xor
loopne
adc
adc
pop
mov
cld
pop
int
pop
dec
or
cwtl
clc
test
enter
int
xchg
pop
or
pop
sahf
das
test
repnz
fstpl
jno
or
stos
aas
inc
sahf
add
ficoml
sbb
mov
lock
inc
lea
call
sbb
adc
stos
dec
scas
sub
xor
xor
sbb
rorb
enter
dec
push
push
or
xor
xor
adc
mov
cltd
addr16
addr16
mov
test
inc
cmp
jl
dec
xchg
push
mov
and
xchg
repnz
int
insb
mov
in
rcll
fnstcw
in
dec
mov
arpl
jecxz
cs
xor
push
jl
outsl
mov
ds
mov
loopne
popf
and
sub
cmpsl
dec
inc
jmp
jl
outsl
and
sahf
mov
pop
das
push
xchg
mov
rcr
out
imul
cmpsl
cmpsb
pcmpgtd
scas
loopne
pop
xchg
iret
test
lds
push
ret
inc
xor
mov
pop
pop
aam
addl
and
sar
jno
lret
daa
jo
aam
test
ss
mov
or
pop
fsubp
inc
xchg
movsl
and
dec
addl
xchg
ljmp
mov
mov
negl
pop
lret
or
push
mov
xchg
lods
mov
mov
mov
jnp
mov
pop
mov
jns
clc
xchg
rorb
xor
mov
loop
xchg
leave
test
push
adc
or
sbb
inc
fistpll
prefetcht1
push
aad
mov
fnstenv
clc
or
mov
in
sub
in
hlt
push
out
sarb
push
outsb
mov
inc
xor
pop
clc
pop
fsubs
fiaddl
or
orl
jge
jl
addr16
push
movsb
dec
inc
movsb
adc
inc
adc
in
neg
xchg
jle
jnp
push
arpl
dec
stos
xchg
in
push
enter
xorl
loop
out
cmp
xchg
add
jle
dec
nop
mov
jg
ret
stos
cltd
inc
cli
movsl
sbb
sbb
mov
call
and
or
push
inc
jge
sub
mov
add
mov
inc
scas
lea
into
rcl
into
fwait
leave
pop
icebp
dec
das
mov
push
loop
dec
pusha
insb
aam
xchg
nop
popf
loopne
push
in
dec
xor
pop
cmc
dec
push
inc
adc
mov
mov
fldcw
jb
push
ret
dec
enter
inc
fmull
push
cs
mov
dec
inc
adc
sub
xchg
das
rcrb
jmp
jo
cmp
insb
repz
es
mov
cs
ds
sahf
pop
xchg
push
mov
std
rcrb
dec
add
and
jecxz
cmpsl
in
nop
push
repnz
es
lods
icebp
cmp
mov
scas
xor
add
inc
and
ljmp
or
cmp
mov
es
jne
jnp
pop
push
jmp
adc
insb
outsb
cmp
into
lcall
mov
test
lret
icebp
fadds
pop
xor
adc
dec
push
rorb
sahf
mov
xor
enter
pop
addr16
sbb
int3
and
mov
addl
in
cmp
pusha
jg
int
cwtl
sbb
adc
fs
ficompl
mov
push
outsl
push
fisubl
or
int3
arpl
sub
arpl
cmp
ficompl
adc
push
in
adc
cmp
lods
jl
xchg
loop
lahf
loop
inc
dec
int3
and
test
sbb
fidivs
movsb
jbe
mov
inc
call
jnp
movl
cltd
pop
lods
cmpl
fldt
pop
adc
inc
xchg
add
jle
bound
pop
add
orb
es
mov
push
test
xchg
inc
aam
add
out
mov
aad
sub
pop
es
jle
mov
aaa
xor
pop
in
sbbl
gs
mov
aad
sbb
xor
lock
je
aas
inc
out
sahf
push
add
mov
dec
mov
mov
sub
push
sbb
popf
cmp
insb
jmp
aad
pop
sarl
sub
xor
or
mov
push
in
add
movsl
mov
ds
in
stos
push
fs
sbb
jne
outsl
bound
pop
or
mov
sbb
rcrb
into
testl
incl
sbb
mov
or
psllw
jmp
int
flds
mov
push
test
hlt
mov
push
or
mov
shrb
jno
adc
push
sub
cwtl
lret
imul
orb
rcrb
rcrl
add
stos
aaa
push
cwtl
fists
pop
and
xchg
test
inc
or
movsl
xor
push
and
jle
or
faddl
mov
iret
dec
leave
push
rorl
pop
call
popf
test
mov
cmp
mov
stos
mov
popl
adc
rorl
mov
lods
jl
mov
fistl
cmpsb
or
mov
adc
sub
xlat
ss
adc
aam
cmc
xor
popf
push
enter
out
or
mov
and
pop
mov
rolb
xchg
dec
int
imulb
imull
inc
cwtl
lret
jp
cmc
jae
insb
ljmp
mov
pop
out
repnz
mov
sarl
adcl
scas
add
xor
insl
push
jo
loop
pop
pushf
sub
cmp
adc
pop
push
ja
sbb
xchg
xchg
and
mov
repnz
inc
mov
in
xchg
push
dec
xorb
xor
add
sub
inc
xchg
mov
outsl
sub
push
adc
push
push
testl
xchg
xorl
and
lret
push
jg
lea
imull
and
bound
add
mov
stos
je
dec
adc
or
insl
and
subb
movsb
jp
pop
out
imul
gs
roll
lods
lea
lahf
or
jbe
mov
iret
mov
cltd
mov
cmp
pushf
rolb
das
cltd
cltd
jne
outsb
pop
push
leave
sub
pusha
sbb
clc
jne
pop
push
lock
or
lret
fwait
or
ret
adc
outsb
fs
add
ja
push
pusha
sahf
daa
shll
jle
js
push
aaa
jbe
stc
push
lock
xorl
xchg
rcrl
xlat
pop
cmp
pop
mov
xor
xchg
fildl
add
cwtl
mov
call
pop
dec
daa
in
sub
les
mov
mov
jle
mov
stos
lret
jb
lods
stc
xchg
mov
sbb
jb
push
fwait
inc
dec
je
std
pop
ret
add
mov
lods
test
xor
rol
lret
xor
addr16
xchg
rorb
cmp
cltd
pop
jb
fisubl
sbb
lock
scas
mov
lret
shr
sarb
cmc
lahf
cmpsl
insb
mov
mov
jmp
jle
cmp
pop
mov
lret
je
mov
pop
mov
leave
fmulp
mov
xchg
clc
lods
ss
sub
fmuls
inc
xlat
outsl
cli
and
adc
jo
pop
js
outsb
out
mov
imul
sbb
outsl
adc
pop
xor
xor
ds
add
jmp
imul
popf
nop
les
insl
sbb
jno
and
pop
dec
sub
mov
mov
mov
add
cmp
subb
mov
xlat
in
sub
cld
rcl
mov
pop
sahf
push
xorb
das
xor
push
sbb
test
xchg
lds
ljmp
mov
adc
out
mov
aam
sbb
push
cmp
aaa
lds
aaa
arpl
mov
ret
out
aas
es
fldcw
test
sahf
push
pop
sti
adc
ret
fs
add
fcoml
test
test
mov
add
call
adc
js
mov
push
movsl
bound
pop
xchg
mov
adc
dec
mov
movsb
rcl
pusha
jmp
pusha
jl
mov
pop
mov
inc
xchg
push
test
push
and
sbb
paddb
in
lret
push
mov
scas
dec
jae
jl
int
push
or
xorb
or
push
shll
testb
push
testb
cmp
movsb
rclb
xchg
fcmovnbe
cmp
in
xlat
std
sbb
add
mov
jl
popa
jle
insb
sarb
xor
lret
adc
xchg
adc
es
gs
out
stc
jbe
xchg
jns
mov
xor
repnz
pop
mov
aaa
in
pop
cmpsb
mov
cmp
cld
inc
hlt
mov
sbb
in
cmp
js
xchg
leave
pop
mov
mov
xchg
sbb
xor
cmp
dec
inc
fmul
pop
sbb
lahf
jbe
data16
mov
lcall
mov
div
mov
push
into
cmpsl
lock
pusha
jmp
add
and
icebp
nop
pusha
loope
in
mov
fsub
loop
jno
es
xchg
jae
daa
mov
jo
dec
jmp
cmpsl
jmp
push
repnz
cmp
inc
rorb
lock
js
stos
and
aad
shrl
push
xchg
les
inc
inc
sbb
pop
das
or
mov
pop
fstl
inc
or
push
outsl
xchg
loopne
in
lds
push
jbe
and
sti
add
pop
push
mov
maskmovq
mull
cmp
inc
js
lds
cmc
test
les
push
pop
pushf
jo
cli
test
rcrl
aam
add
in
nop
dec
scas
inc
and
ds
fs
sbb
mov
xchg
jne
cld
in
faddp
insb
inc
dec
imul
idivl
pop
das
push
xor
aad
dec
fdivrs
clc
push
add
test
test
ljmp
stos
adc
jl
jge
or
push
mov
cli
sbb
cmp
or
in
cbtw
mov
data16
movsl
add
test
in
mov
adc
out
xor
and
insl
xor
in
mov
rorl
in
or
pop
cwtl
rol
cs
inc
add
cmp
outsb
pop
pop
push
outsl
lods
repnz
pop
pop
mov
rcll
dec
add
push
push
jno
mov
insl
xchg
cmc
pop
mov
lahf
xchg
jl
add
sbb
mov
push
cld
int3
cmp
test
call
out
cmpsb
mov
fsubrs
pusha
arpl
jmp
imul
les
add
aad
movsb
add
or
cmp
aam
lret
daa
dec
sbb
rcll
aad
push
dec
mov
sbb
insl
xchg
into
ds
movsb
add
lock
jp
xor
outsl
je
sbb
scas
inc
xchg
repnz
insb
and
inc
xor
stos
fimuls
xor
cs
sub
cs
popf
test
cmp
add
fsubs
and
and
inc
mov
iret
mov
jns
xorl
sarl
mov
sub
mov
mov
xor
mov
mov
movsb
push
mov
mov
xor
sahf
jae
cmp
push
call
repz
mov
fwait
int3
push
fdivl
movsb
adc
jno
ja
pop
fdivp
inc
push
std
ds
inc
jo
pop
mov
bound
xor
inc
test
mov
clc
test
jo
pop
xor
fcoms
in
les
outsl
fs
jle
mov
cld
mov
in
push
sti
xor
cmp
xor
xor
sub
push
repnz
mov
pop
jns
pop
push
popa
ffree
xchg
jg
insb
mov
ret
bound
and
mov
push
adc
lea
jle
ss
push
or
aam
pusha
cmp
sbb
pop
pusha
inc
or
pop
out
fwait
push
mov
icebp
and
ljmp
test
jno
test
fidivrs
les
adc
bound
aaa
pop
fsts
addb
sahf
push
mov
loopne
and
cs
iret
jecxz
xchg
dec
jl
jp
fdivr
xchg
ja
test
and
mov
nop
cmpsl
cmp
jmp
sub
sbb
inc
adc
or
sub
dec
push
mov
inc
push
pop
lret
je
rclb
lods
fsubrp
lods
jnp
sub
inc
pusha
fadd
xchg
ret
repnz
rcr
mov
push
fcmove
mov
aas
mov
push
push
dec
es
pop
inc
faddl
lret
andb
lea
mov
pop
cmpsl
mov
sub
sbb
js
das
sar
cmp
or
cmp
into
sub
sarl
int
xchg
cs
test
ja
dec
and
andb
inc
and
sbb
out
xchg
aad
push
xor
inc
add
ljmp
adc
jmp
lds
es
push
test
mov
inc
enter
clc
xlat
push
clc
and
dec
out
imul
sub
rclb
xchg
push
dec
movsl
mov
dec
ljmp
sub
mulb
pop
dec
fiadds
xchg
sbb
ret
sub
mov
sbbl
out
pop
imul
fcomps
or
fwait
pop
iret
scas
test
imul
sahf
ror
pop
cmpsb
scas
out
daa
and
adc
rclb
inc
push
aas
mov
sbb
push
xchg
pop
popf
pushf
jle
dec
ss
loopne
inc
dec
ss
das
lods
bound
push
mov
or
repz
scas
inc
mov
nop
push
pop
repz
outsl
sbb
repz
insl
aas
add
repz
xchg
lahf
inc
jle
loop
jl
ljmp
sub
popa
mov
mov
sub
inc
stos
mov
hlt
orb
movsl
sahf
push
pushf
in
test
cmp
jbe
rcrb
lret
sbb
mov
clc
push
lock
xchg
pop
sbb
je
out
stos
sbb
into
fildll
in
xchg
fisttpl
xor
pushf
inc
mov
aas
xchg
mov
in
pop
mov
lods
out
add
mov
mov
mov
mov
xor
inc
dec
enter
ja
jecxz
ficoms
fsubs
repz
outsb
ds
data16
mov
ljmp
jne
sbb
cmp
fs
mov
lahf
jecxz
xchg
cmp
fucom
push
fimull
sti
xchg
xchg
xchg
xchg
pop
inc
inc
xchg
jge
add
iret
jae
popf
cmp
pushf
pop
call
mov
rcrl
lea
push
stc
add
aaa
or
test
add
mov
shll
test
adc
push
movsb
push
movl
xchg
in
sti
orb
aas
aaa
xchg
bswap
mov
add
push
and
or
sti
and
inc
insb
pop
sahf
dec
mov
adc
jg
lret
in
out
jnp
push
push
mov
jnp
jbe
mov
gs
rclb
repz
jnp
repz
scas
scas
test
int
stos
ret
xchg
ret
xchg
pop
push
pusha
mov
cmp
xor
mov
pushf
cmpl
jne
mov
fwait
sti
dec
out
adc
jge
inc
movsl
int
mov
dec
loope
out
scas
ret
sti
fistpl
jae
adc
movsl
cmp
decl
les
or
jnp
mov
or
aad
arpl
push
jae
ljmp
movsl
mov
hlt
dec
xor
xchg
stos
inc
xchg
loopne
popa
loop
or
mov
cmp
les
add
fwait
push
push
adc
scas
test
pop
ss
push
inc
cmp
push
mov
mov
push
stos
mov
xchg
and
idivl
jecxz
xor
dec
cwtl
lods
pop
dec
imul
xor
lahf
cmp
adc
jg
mov
sub
pop
adc
cmp
inc
lods
push
popf
mov
lcall
pusha
test
inc
sub
insb
lods
add
mov
mov
push
jl
mov
add
test
dec
ret
mov
pop
pop
repz
lahf
jae
std
inc
js
cmc
add
and
mov
add
mov
sub
mov
icebp
jae,pn
push
mov
push
mov
inc
xorl
iret
dec
jmp
pop
insb
push
inc
test
push
pop
and
in
sbb
ja
mov
or
movsb
jmp
mov
popf
sub
lahf
xchg
insl
cmc
enter
inc
loope
mov
inc
mov
lret
pushf
orb
insb
loope
mov
jmp
adc
inc
dec
leave
xchg
testl
or
fs
xor
les
into
shlb
xor
or
clc
push
xor
and
and
stos
mov
push
daa
js
je
scas
inc
jbe
add
lret
or
xor
and
outsb
fcoms
pusha
out
lods
adc
push
jo
sbb
das
idivl
rcr
dec
sub
ficompl
pushf
or
jg
stos
mov
cmp
shrb
xor
mov
test
enter
fcmovnb
push
push
and
ss
mov
dec
inc
aad
and
fisubl
cmp
sahf
icebp
test
jno
or
stos
mov
imul
mov
mov
imul
in
jmp
dec
mov
int
ljmp
lods
ret
or
scas
pop
pop
lcall
cmp
int
imul
notb
push
push
cmpsb
imul
mov
dec
cmp
testb
divl
inc
and
lea
jne
out
sbb
xor
mov
xor
mov
pop
lock
mov
je
xchg
xchg
fistpll
divb
adc
or
jl
sub
cmp
or
jns
lahf
jg
cmpsl
out
adc
aaa
cmpsb
scas
sbb
add
or
addr16
iret
mov
in
arpl
inc
cmpb
jnp
cld
adc
mov
adc
aas
xchg
cli
testl
insl
xchg
and
mov
sub
mov
cli
rep
push
mov
jno
std
outsl
stos
pop
add
xchg
daa
mov
xchg
or
mov
lds
push
sbb
in
testl
cmp
ja
or
and
out
enter
push
mov
xchg
sti
imul
test
fisttpll
loopne
pop
cwtl
or
test
test
pop
jns
enter
roll
lahf
aam
aaa
mov
ja
push
cmp
leave
dec
sarl
cmp
sub
cld
jo
dec
insl
movsb
mov
xchg
inc
sbb
loop
cs
xchg
adc
movsb
jno
add
fidivrs
dec
pop
pop
mov
fidivl
loop
pop
sbb
jmp
xchg
aam
xlat
cwtl
mov
xorb
adc
js
mov
mov
sahf
dec
data16
cwtl
inc
mov
scas
xor
ds
mov
xor
cmp
lea
imulb
shll
xchg
mov
inc
call
add
jns
lds
mov
ljmp
adc
mov
lahf
cld
int3
outsb
sub
xchg
add
pop
push
inc
xchg
adc
and
stc
push
sarl
pop
or
or
jns
add
push
xor
gs
fimull
xchg
sub
jecxz
dec
addb
scas
adcb
push
pop
cmp
call
imul
jge
push
adc
into
xchg
xlat
xchg
mov
sbb
enter
mov
rorb
adc
jl
dec
jg
mov
repz
bound
scas
mov
popa
dec
sbb
insl
out
xchg
lret
scas
lods
scas
shl
adc
jl
ja
insb
fwait
jp
aad
mov
cmp
mov
icebp
into
cwtl
xchg
push
fwait
ja
sbb
test
and
pop
in
jmp
addb
or
out
fmuls
sbb
insb
xchg
shrb
sub
fs
mov
dec
nopl
sub
stos
int
cmc
and
jns
pusha
movsb
xor
jnp
lahf
sbb
jecxz
adc
ljmp
nop
sub
es
mov
psubq
push
mov
in
sub
push
daa
loop
pusha
cmp
out
xor
aas
adc
pop
mov
and
push
and
or
sbb
fists
mov
inc
lds
mov
das
cwtl
jg
imul
jb
cmp
fdivr
ret
lret
enter
pop
dec
xchg
popf
sti
mov
jmp
in
lods
int3
lds
xor
imul
pop
scas
ljmp
or
mov
jg
adcb
fldl
cmp
mov
cmpsb
dec
lock
jo
outsb
ret
fsubrl
xor
mov
js
push
push
enter
nop
sbb
int
idivl
jle
lock
imul
cmp
push
mov
out
out
dec
inc
xchg
ss
rclb
clc
cmp
out
inc
push
pop
rcrb
push
rol
mov
jg
lahf
mov
ljmp
mulb
add
jp
push
fists
test
stos
xchg
cmovs
add
jge
adc
cwtl
test
sbb
mov
inc
ljmp
call
and
xchg
cwtl
pop
andl
imul
mov
pop
xchg
cmp
mov
pop
and
mov
adc
not
in
dec
lcall
jge
lret
jmp
nop
xchg
push
lret
daa
xchg
sti
cmp
mov
cld
rcrl
add
in
mov
sahf
mov
and
inc
add
xchg
mov
sbb
insl
pop
testl
lret
sub
sbb
sub
push
hlt
push
loop
es
fcompl
arpl
push
data16
cld
add
mov
push
lcall
aad
stos
enter
sti
shr
in
fdivr
inc
mov
inc
cmp
inc
fwait
out
pop
decb
mov
sub
pop
xchg
call
push
jge
pop
sbb
push
or
fwait
pop
cmpb
mov
mov
pop
mov
cmpsb
out
fwait
sub
fcmovnb
cltd
lods
outsb
sahf
inc
iret
jne
mov
mov
jl
popa
jg
mov
push
jns
inc
ljmp
push
aad
push
dec
iret
and
sbb
repnz
repz
adc
push
data16
and
mov
jns
dec
and
jne
xchg
and
fistps
js
pop
jp
sub
pop
adc
sub
or
xchg
mov
xchg
call
lcall
fcomps
into
popa
aas
xor
mov
mov
lcall
es
push
test
jb
jae
test
dec
iret
mov
inc
or
std
js
nop
lds
in
movsb
les
fldenv
mov
pop
xor
insb
push
push
cmp
inc
cmp
mov
adc
push
xchg
bnd
outsb
icebp
push
stos
jge
cmp
adc
fs
inc
js
insb
test
push
dec
aam
int
inc
leave
ds
shl
cmp
lds
rorb
arpl
sbb
push
sub
pop
inc
cmp
loope
test
cld
sub
jl
dec
mov
jb
out
mov
pop
xchg
xchg
push
in
mov
rcl
cmp
scas
es
jg
xchg
xchg
lcall
inc
test
mov
sub
icebp
jmp
mov
popa
lea
je
or
std
lods
fcmove
fs
hlt
enter
sub
push
xchg
outsb
push
out
cwtl
int
cmc
push
les
je
pusha
imul
dec
outsl
dec
enter
ljmp
lret
lret
xchg
cmp
into
dec
ja
popf
lods
aas
or
mov
push
shrl
add
shlb
add
addl
lea
test
ret
mov
pushf
loopne
xchg
xor
aad
pop
lea
iret
push
sbb
push
movd
mov
cwtl
cmp
out
dec
insb
sbb
out
fs
ja
adc
fildll
adc
adc
xor
jbe
mov
jmp
test
adc
fs
test
jp
push
movsl
and
sub
test
fbld
cmp
shlb
movsl
pop
les
mov
sbb
mov
cs
dec
mov
lods
push
fmull
xchg
mov
add
sbb
dec
ja
ljmp
std
int3
clc
cmc
pop
pusha
push
or
out
test
movsb
mov
mov
jo
sub
jns
clc
push
mov
loopne
pop
xchg
iret
cwtl
and
ss
sarl
mov
fmul
fs
stc
addr16
pop
adc
cmp
ljmp
repnz
js
pusha
mov
repnz
scas
js
dec
cmpsb
int
cs
pop
inc
pop
sbb
stos
sub
inc
nop
test
fs
mov
loop
aam
mov
popa
push
push
jecxz
movsl
mov
fneni(8087
cmp
pop
in
ds
inc
sbb
pop
fwait
sarb
bound
xchg
xchg
mov
dec
sbb
pop
adc
loope
iret
mov
jmp
int3
imul
jne
push
push
fnstcw
mov
mulb
pop
imul
mov
push
xchg
int
push
dec
ss
imul
and
mov
mov
fs
fcoml
pop
sub
push
lods
call
mov
sbb
or
jno
lds
push
ljmp
sti
insl
dec
jge
jp
outsb
rorb
adc
ljmp
sbb
inc
arpl
hlt
push
mov
mov
cmc
ljmp
pop
lcall
inc
add
pop
arpl
mov
pusha
cmp
test
xchg
pop
and
aam
xchg
popa
adc
stos
cmpsb
jmp
jle
or
jae
ss
dec
mov
hlt
add
loop
mov
fisubs
dec
aas
inc
scas
fs
mov
lcall
roll
xor
repz
mov
lods
jne
sub
mov
in
lahf
int
sub
outsl
insb
jo
sbb
shll
xor
jmp
mov
jp
outsb
cld
loopne
pushf
leave
ret
mov
sarb
sub
dec
shrl
lret
add
or
rcrl
or
lcall
cmp
jo
sbbb
adcl
dec
push
jecxz
sti
cwtl
push
jmp
loopne
insb
adc
int
xchg
mov
cmc
fidivrl
jb
pop
dec
or
sub
xchg
test
out
xor
jecxz
sarb
xchg
popf
cmp
cmp
icebp
pop
loope
movsb
sbb
imul
in
mov
cmp
jp
iret
jmp
add
repnz
mov
adc
negl
or
repz
jecxz
push
xor
lock
daa
mov
jge
insb
adc
push
and
scas
aam
inc
push
in
aaa
bnd
mov
jecxz
push
int3
push
adcl
mov
ret
or
pop
jno
push
add
jno
ret
popf
icebp
jg
adc
adc
std
int3
push
cli
inc
add
pop
and
inc
fmull
fst
movsl
fsubs
test
push
icebp
or
push
gs
lods
dec
dec
popf
out
push
xchg
add
les
dec
pop
jecxz
data16
add
idivl
fcmovb
ficoml
dec
jg
repz
into
mov
push
divb
or
cmp
and
leave
push
mov
jg
mov
or
arpl
pushf
push
jge
xor
sub
and
fimull
mov
adc
xchg
inc
push
add
out
mov
sbb
rclb
mov
outsb
sbb
popf
inc
jg
shr
sahf
imul
fwait
test
jmp
pop
sub
cs
cmp
fs
addb
xor
and
dec
add
outsb
mov
push
jne
inc
in
cmp
xchg
cmp
push
inc
test
shlb
mov
add
pop
testb
cmp
ja
add
js
xbegin
xor
test
or
adc
jmp
cmp
ret
les
pop
jle
inc
jecxz
inc
jno
cmc
dec
and
loop
dec
and
popf
vpcmpeqb
push
fsubrl
sbb
in
mov
out
or
rol
aas
jo
cmpsb
mov
pop
cmp
testb
mov
icebp
fisubs
lcall
dec
mov
mov
lock
xor
loopne
fcoml
leave
leave
pop
jne
mov
jmp
mov
pop
jnp
cltd
dec
lock
clc
mov
xor
cli
loope
mov
mov
sub
subb
and
pop
je
mov
xchg
out
adc
stc
mov
inc
cmpsb
or
mov
pop
addr16
jecxz
movsl
mov
inc
ss
lret
in
mov
ret
ljmp
inc
dec
scas
ret
ds
jge
addr16
loopne
stos
push
out
and
add
pop
pop
int3
test
inc
jo
cmpsb
push
pop
cmpl
jmp
xor
int3
push
push
loopne
cli
dec
cmp
stc
xor
sub
xchg
mov
adc
xor
dec
jl
pop
jbe
lods
adcb
movsb
mov
pop
testb
xor
fyl2x
dec
push
mov
pop
or
outsl
cwtl
insl
xchg
sbb
mov
or
lds
dec
ljmp
mov
scas
jle
jp
mov
cld
dec
xchg
xchg
mov
cltd
insb
xchg
js
cltd
popa
ja
and
stos
xor
jle
xchg
dec
pop
xchg
mov
pop
dec
mov
imul
jae
add
mov
sub
sbb
sub
out
jns
mov
ljmp
pop
mov
adc
add
leave
roll
cmp
orb
push
iret
xor
imul
lret
out
sahf
sbb
inc
sahf
imul
fst
inc
push
inc
add
ret
shld
je
or
pushf
sbb
cwtl
push
in
dec
lods
push
lcall
inc
imul
jo
fs
push
adc
and
lret
cmp
aam
mov
movsl
inc
pop
sub
je
fisttps
insl
or
popa
inc
mov
insb
pop
or
or
repz
loopne
add
ret
sbbl
mov
es
daa
insl
js
mov
jbe
mov
or
and
mov
sbb
ja
pop
cmp
in
test
insl
inc
fwait
push
mov
loopne
mov
jns
outsl
lods
sbb
adcb
jecxz
jg
out
mov
and
sub
jmp
ffree
lea
xor
inc
add
xchg
pop
mov
and
dec
push
mov
jge
call
xlat
insb
sahf
pop
mov
xorb
scas
jb
ret
test
xchg
scas
je
dec
jb
push
adc
insb
mov
pushf
insl
cld
movsl
cltd
xchg
hlt
xor
xchg
push
dec
into
push
mov
mov
imul
jecxz
mov
stc
mov
shlb
push
pusha
outsb
mov
das
dec
fadds
xchg
shrl
jo
ja
mov
push
loop
push
outsl
out
aaa
add
mov
pop
ret
ss
add
inc
movsl
repz
psubq
ror
fwait
and
push
scas
mov
jns
dec
inc
cmpsb
enter
xchg
std
cltd
outsl
xchg
std
je
in
inc
lret
pop
sbb
imul
xchg
vmovaps
mov
insb
jns
ficoml
jmp
or
xor
lods
jge
push
shrb
outsl
cwtl
pusha
bound
sbb
in
mov
fs
out
andb
mov
leave
inc
cmpsl
dec
sub
mov
push
mov
push
xchg
fidivrl
cmp
dec
fcoml
pop
mov
jg
arpl
dec
lock
push
rorl
mov
xor
push
mov
sub
mov
cli
and
lods
jge
pop
hlt
mov
cmpsl
xchg
fadds
sbb
fistps
dec
movsl
mov
cmp
pop
lret
mov
push
lret
jmp
ficoms
mov
fiadds
adcl
and
mov
xchg
shrl
push
xchg
mov
repnz
inc
leave
pushl
cmp
push
popa
into
jb
cmc
aad
mov
xor
xchg
mov
pop
fisttpl
add
push
or
in
xchg
mov
xor
test
push
jg
data16
pop
push
cmp
cli
fidivl
xchg
jne
dec
mov
jb
loopne
mov
mov
add
mov
jns
and
js
xrelease
pop
addr16
mov
mov
lods
push
adc
and
add
jp
jp
nop
hlt
cmpsb
ficoms
mov
add
rorl
push
jnp
fnstsw
xchg
mulb
hlt
sub
pushf
shl
mov
daa
or
xchg
test
sub
mov
pop
push
and
imul
test
frstor
add
adc
addr16
out
rorb
pop
sub
xchg
xchg
cmp
mov
inc
lret
mov
mov
lea
repnz
sbb
pushf
shll
arpl
test
icebp
xor
dec
xchg
inc
and
jmp
add
inc
cli
xor
jnp
jge
and
inc
fisubrs
or
jmp
xchg
jbe
cwtl
mov
je
mov
fwait
imul
ljmp
lret
sub
sbb
popf
xchg
das
popa
xorb
or
sub
mov
subb
mov
pop
lahf
ss
clc
notb
cld
data16
xchg
imul
adc
or
jno
sub
dec
dec
pop
mov
gs
pop
xchg
pusha
ds
mov
pop
icebp
mov
cmpsb
das
adc
popa
lcall
adc
fnstsw
xchg
jae
incb
xchg
mov
add
ds
mov
pushf
fisubrl
adcl
int
popf
shlb
adc
nop
mov
push
push
inc
mov
movsb
data16
jae
cmc
call
xor
xor
shll
mov
fidivrl
pop
fcmovbe
in
dec
stc
add
push
je
xchg
cli
fld
add
mov
rclb
in
jo
sbb
arpl
jae
rcrl
ds
sub
or
jecxz
test
jle
dec
push
mov
xor
fimull
adc
test
jo
stos
stos
movsb
pop
mov
jecxz
push
pop
adc
hlt
cmp
sarl
xchg
scas
in
movsl
mov
subb
push
fldcw
mov
inc
jb
push
cli
push
jmp
scas
cmp
add
cld
jae
hlt
lret
mov
shlb
sahf
jle
and
enter
and
or
or
fs
lahf
test
cmp
ss
jmp
mov
inc
cmp
movsb
mov
jbe
jecxz
pushf
leave
clc
sbb
scas
jg
xor
hlt
in
repz
daa
mov
xchg
jne
imul
sbb
frstor
push
lds
mov
sarl
xor
pop
iret
xchg
enter
pop
lret
adc
push
add
lods
int
subl
nop
out
mov
fcomp
xorl
jae
xor
adc
jnp,pt
xchg
pushf
push
out
mov
push
add
sub
or
push
rcrb
loop
dec
lcall
xchg
sbb
and
popa
pushl
add
sbb
rcrb
inc
xor
and
movsl
adc
jns
and
rcrb
mov
mov
jo
cmp
inc
fs
sbb
xor
nop
stc
lret
std
inc
xchg
cmp
add
out
lock
out
fs
dec
or
shl
dec
into
out
outsb
stos
push
push
jo
daa
dec
lods
mov
shr
loopne
inc
mov
sub
cmp
mov
nop
insl
and
inc
xor
sbb
push
fcmovnbe
clc
sub
pop
fsubrp
mov
jae
inc
sahf
xchg
adcb
in
aaa
dec
sub
sub
cmpsb
lcall
mov
bound
std
inc
add
insl
jecxz
inc
add
adc
jne
lock
cmp
int
shlb
inc
pop
dec
out
xor
into
mov
inc
mov
jle
mov
adc
cmpsl
push
and
mov
loop
dec
outsl
and
imul
lcall
std
jl
addr16
ficomps
pop
jecxz
push
or
xchg
movb
ret
push
repnz
pop
popa
dec
out
mov
addl
mov
xchg
ret
xor
xchg
ret
inc
jmp
cmp
iret
scas
pushf
out
lcall
fnsave
mov
enter
xor
jecxz
movsb
outsl
jns
and
inc
gs
inc
mov
imul
pop
cmp
jle
mov
cmpsb
ficomps
in
rorb
sub
inc
cs
mov
pop
in
int
jecxz
aas
sub
inc
cmp
or
mov
dec
mov
xlat
popf
icebp
orb
mov
xchg
std
pop
xor
cs
dec
out
insb
cmpsb
or
test
push
jae
xchg
je
jecxz
mov
jnp
mov
inc
mov
mov
jne
push
sbb
add
pusha
jno
or
lods
int
mov
stc
ficoml
xor
aaa
pop
adc
jecxz
push
outsl
dec
clc
ret
rcrb
sbb
xlat
roll
jg
sub
jecxz
cmp
mov
or
and
out
mov
test
xchg
hlt
rcrl
mov
ret
push
mov
fwait
xchg
xchg
fsub
leave
push
mov
mov
test
clc
fistpll
mov
pop
mov
sub
push
in
push
movl
mov
movsb
mov
xorl
sbb
rolb
jp
frstor
push
mov
push
mov
mov
aaa
popf
xchg
out
pop
dec
add
int
mov
mov
mov
jo
jmp
aaa
addr16
cmpsb
cwtl
repz
jg
xchg
mov
enter
mov
cmp
mov
adcb
pop
inc
and
or
out
adc
mov
mov
cmp
arpl
filds
or
push
ja
dec
call
out
adc
shlb
fistl
rorb
mov
daa
xchg
jmp
mov
push
xor
sub
dec
xor
dec
xor
sbb
ss
or
inc
mov
ds
test
jbe
mov
push
cwtl
jno
sub
inc
push
dec
arpl
and
or
dec
cmp
int
or
adc
add
aaa
roll
push
stos
add
arpl
sti
rcrl
popa
fcoms
xchg
inc
jl
jle
mov
sti
jae
fwait
mov
je
jle
inc
sti
insl
insl
pop
sbb
pop
xchg
xchg
and
cmp
paddsw
sbbb
xchg
loope
popf
fisubrl
pop
mov
mov
fs
hlt
jb
sub
in
aaa
jge
jns
xor
inc
into
pop
xchg
mov
dec
out
mov
or
sbb
lahf
fsin
out
scas
ss
jmp
popa
push
cld
movsl
shlb
mov
out
cwtl
mov
add
push
lods
and
dec
in
sbb
xchg
mov
aaa
jge
imul
test
or
dec
inc
testl
jno
aam
dec
push
mov
clc
xor
jno
inc
add
iret
dec
push
int3
xor
icebp
pop
add
popf
push
xchg
xor
jl
mov
aam
cli
outsl
xchg
push
add
cmpsb
fs
fcomi
sarl
dec
inc
pop
mov
xor
add
adc
insb
push
repnz
mov
es
loopne
mov
jge
lods
imul
dec
dec
cmc
pop
lods
pop
jne
and
xor
cs
daa
cmp
sarl
add
cmp
insl
and
inc
sub
ret
dec
test
ja
adc
fsub
dec
jmp
mov
js
outsb
addr16
xor
sub
jecxz
push
popa
push
push
jns
popa
pop
mov
mov
scas
scas
dec
xlat
pop
adc
mov
jecxz
cmp
icebp
in
push
cmpb
cmp
repnz
pusha
add
sub
scas
mov
sbb
mov
add
out
psrlw
cmp
or
sbb
adc
adc
dec
mov
je
sub
add
sbb
hlt
dec
jle
ljmp
mov
mov
js
in
dec
ja
scas
xlat
scas
stos
and
push
pop
mov
loop,pn
xchg
push
adc
aad
pop
jbe
ljmp
popa
imul
scas
jb
repz
mov
pop
lret
cmp
add
sub
and
push
jecxz
jp
sbb
push
cmp
dec
xor
ret
jnp
lcall
fnstsw
pop
inc
inc
scas
test
fdivs
xor
lds
mov
inc
into
inc
adcl
adc
movsl
sub
loop
sbbb
hlt
mov
hlt
roll
sbb
push
movsl
pop
or
mov
dec
jecxz
fldenv
add
shrb
rclb
mov
or
xchg
dec
mov
add
lods
jo
addl
inc
sbb
lret
add
xor
daa
mov
dec
mov
ss
shl
in
push
push
xor
xorb
aam
jnp
pop
add
insl
inc
jmp
xor
adcb
add
fwait
mov
imul
insb
lds
cmp
cltd
addr16
aaa
int
std
testb
out
and
enter
or
das
fs
sahf
mov
dec
add
push
movsl
cld
or
into
lods
inc
xchg
and
mov
jmp
xchg
xlat
test
hlt
or
mov
fisttpll
adc
movsl
loop
pop
mov
or
push
sbb
addr16
daa
out
fldcw
pushf
sub
das
push
out
jbe
in
cmp
ljmp
add
cmpsb
mov
shrb
lret
mov
lock
lret
arpl
xchg
ret
das
test
jg
jge
or
jle
mov
fs
jp
insb
cs
jle
outsl
sarl
cltd
push
cmpsb
xor
imul
mov
xor
out
movsl
jno
popa
decb
stc
jp
mov
mov
add
repz
cmp
inc
movsb
inc
clc
jno
cld
out
cmp
xor
inc
mov
push
adc
mov
int3
jne
imul
mov
call
int3
and
icebp
imul
hlt
fsts
jbe
jno
stc
dec
out
in
xchg
push
mov
aad
and
stos
jg
sbb
xchg
jg
call
ds
xchg
scas
pop
mov
jno
cmp
pop
mov
mov
aam
je
cltd
test
adc
test
xchg
jmp
sub
dec
and
push
cltd
iret
out
dec
xor
pop
rcl
sahf
mov
and
in
xchg
xor
pop
inc
loope
mov
jb
sbb
or
mov
lahf
or
pop
inc
and
pop
add
push
push
mov
xor
adc
popa
bound
cltd
mov
pop
rcll
dec
mov
je
inc
mov
ret
scas
ret
dec
jo
out
int3
sub
decb
test
fnsave
test
test
jne
fcoml
js
hlt
jg
xchg
sbb
and
ds
add
push
bound
push
dec
sub
sahf
add
add
and
push
pop
and
pop
xor
add
or
mov
cmc
and
jno
push
pop
sbb
or
jae
movsb
cltd
lock
out
inc
sub
ds
dec
mov
test
jno
out
push
mov
jns
rcll
mov
inc
sahf
out
fs
pop
sub
clc
pop
enter
int3
and
arpl
push
cmp
sti
xchg
es
push
xor
mov
mov
cmp
sub
push
pop
test
test
add
cmp
xor
push
imul
outsb
in
jl
mov
cmc
scas
dec
rcr
outsb
sub
push
xchg
sbb
xor
or
and
cmp
mov
data16
rcrb
lock
arpl
add
dec
movl
mov
add
scas
subl
pop
ja,pt
xchg
xlat
loope
test
mov
jge
adc
push
xchg
mov
jl
cli
mov
pop
cmp
les
xchg
jno
notb
mov
or
je
sbb
push
lods
les
idivl
push
adc
push
sub
ror
mov
mov
popf
lea
dec
pop
xor
ficompl
mov
add
cmc
out
cmp
rcl
adc
mov
gs
xchg
xchg
adc
dec
mov
scas
cmp
cmp
lret
xor
fnsave
cltd
sub
into
cmc
cmpsl
add
popf
fdiv
xor
imul
fcomp
push
fs
mov
sbb
mov
repz
cmp
and
addb
in
leave
or
or
pop
into
enter
jmp
rcrl
cmpsb
js
imul
cmc
fstps
popa
orl
inc
xchg
and
cmc
pop
xor
loope
faddp
pop
outsb
mov
out
mov
pusha
sbb
inc
lea
mov
stos
xorl
dec
out
filds
push
mov
popa
push
inc
cmc
jp
lods
outsb
rcr
shll
mov
sbb
cmp
lds
jnp
fwait
jle
out
inc
sbbl
push
and
mov
adc
xor
jne
jmp
sahf
pop
pop
imul
and
push
mov
lods
es
pop
push
dec
ret
in
out
push
jo
xor
ss
pushf
ds
shrl
je
repnz
jae
rcll
sbb
push
and
hlt
insb
or
pop
lods
rcrb
xor
push
push
sub
in
sbb
mov
in
test
jmp
sub
pop
stos
test
mov
sub
push
add
sbb
in
cld
mov
jno
fcmovne
pop
xchg
dec
push
xchg
stos
iret
outsb
push
mov
scas
pop
aad
jge
mov
add
dec
in
cmp
push
push
movsb
pop
inc
inc
adc
clc
sub
dec
jmp
imul
int
and
or
xor
pop
mov
cmp
fwait
mov
clc
push
and
stc
or
fsubl
push
or
pop
gs
sti
inc
sti
ficoml
xchg
and
mov
jecxz
jno
movlps
iret
push
gs
add
out
out
mov
push
mov
jmp
mov
sbb
lea
adc
out
and
mov
orl
sbb
aas
push
push
xchg
sub
hlt
addr16
in
and
lret
jno
mov
push
xor
cmp
lods
scas
repz
xchg
sub
lods
xchg
cltd
setae
je
sarb
push
incb
add
cli
or
sub
les
lods
lahf
aam
aad
adc
jg
mov
cmp
mov
adc
jecxz
push
cmpl
ds
subb
jne
pusha
ret
xchg
xchg
or
scas
in
jnp
imul
int3
adc
jp
stos
sub
in
adc
adc
sbb
aad
rol
pushf
sub
dec
std
mov
push
aas
lock
cmpsl
mov
and
pushf
repz
mov
test
fildll
jae
sub
je
call
xchg
cld
cmp
pop
push
test
lea
andl
insl
lock
and
jecxz
sahf
mov
imul
loope
dec
pop
push
inc
popa
mov
dec
push
inc
fwait
mov
scas
clc
scas
pop
ss
out
mov
aam
jns
inc
xchg
gs
mov
jg
mov
lcall
sbb
sbb
les
mov
daa
jle
mov
push
mov
inc
test
mov
adc
repz
xlat
cmc
sahf
popf
ljmp
jle
jmp
clc
adc
push
fsubl
imul
lock
mov
mov
cltd
loope
sti
fs
xor
cs
cmpl
test
int3
jno
cmp
sbb
jo
jnp
cwtl
in
mov
call
mov
lods
sbb
insl
cld
cmp
shlb
sahf
out
push
pop
pop
sub
xor
mov
sti
mov
mulb
inc
dec
testl
mov
jecxz
jg
pop
mov
adc
fidivrl
jbe,pt
int3
cld
lahf
pop
push
push
and
repz
stc
imul
jno
mov
jg
pop
cltd
push
js
ja
cwtl
fs
mov
ja
imul
push
push
sahf
lcall
lcall
sbb
push
sub
jmp
unpcklps
dec
test
dec
sbb
jbe
int
jb
jge
fsubs
mov
popa
push
or
rcl
std
jge
sbb
daa
cmp
clc
test
into
repnz
mov
clc
jmp
je
lds
mov
inc
push
dec
mov
call
and
pop
out
test
dec
lock
mov
mov
shll
mov
dec
jns
fistpll
or
pop
movsl
jg
cmpsl
pop
dec
sub
or
pop
cmp
mov
sbb
ficoms
lret
mov
and
leave
test
xchg
rcll
pop
pop
push
fiaddl
jb
push
xchg
lcall
jb
push
inc
sti
sub
push
aam
mov
sbb
enter
icebp
lock
cmp
jne
test
mov
sbb
adc
push
fbstp
xchg
loopne
fcomps
push
xor
cmp
dec
daa
push
pop
and
push
negb
cmp
mov
cmp
movsl
jl
and
test
inc
jns
gs
mov
add
testb
jmp
lret
rcrb
mov
repz
pop
mov
cmc
dec
in
mov
jae
lret
sub
repz
outsl
adcl
inc
xor
dec
rcrl
ljmp
jae
xchg
pop
sbb
std
sti
push
popf
xchg
jge
push
popf
xchg
fmull
sub
mov
xorl
adc
sahf
cmp
jmp
in
adc
jbe
fsubl
jns
sti
pop
sub
dec
out
scas
in
jmp
fiaddl
sub
test
jmp
pop
xor
sbb
ss
and
shl
or
loope
push
inc
mov
push
cmp
or
fbld
add
mov
and
dec
and
or
roll
pop
addr16
mov
sub
push
stc
jae
repz
ret
dec
cmpsl
mov
and
push
pushf
sub
or
jbe
in
jne
insl
mov
cmp
aas
jbe
jg
mov
cmpb
in
push
adc
jp
fistps
movb
mov
mov
movl
push
cwtl
lret
cmp
sbb
and
fldcw
jge
pop
les
fisubrs
inc
fcmovbe
jle
scas
mov
dec
in
out
sub
lea
jle
cwtl
mov
mov
jae
loop
cmc
test
push
or
sar
stos
rcl
repz
imul
sbb
push
ffreep
and
lcall
ljmp
xchg
inc
jp
scas
pop
pop
lods
ljmp
pushw
dec
imul
shrl
imul
test
jnp
test
ss
mov
shld
mov
repz
adc
pop
xchg
mov
outsl
add
xor
les
lcall
inc
shlb
aas
inc
pop
push
call
ret
pop
push
ljmp
xchg
or
fs
dec
test
je
mov
jl
loope
and
mov
pushf
sarb
sar
aad
pop
add
leave
pop
in
out
sbbl
add
mov
inc
rcr
sub
push
lret
scas
aas
nop
dec
mov
jmp
imul
pop
fstps
fucomp
adc
sub
movl
mov
loopne
pop
lds
popf
insl
repz
fbld
inc
dec
sub
popf
ds
sub
aad
mov
imul
and
fwait
add
cltd
rcll
lods
mov
inc
push
jmp
rolb
pop
pop
test
push
cmpsb
xchg
mov
add
cmp
dec
sti
addr16
xor
ret
rolb
xchg
push
fcmove
xor
cmpsb
dec
xlat
push
int3
lret
or
push
xor
rcrb
push
pusha
xchg
mov
out
mov
add
sti
test
dec
insb
das
mov
mov
xchg
add
sub
xchg
pop
repnz
in
xchg
jbe
dec
adc
add
fisubrl
xchg
inc
pop
inc
xorl
and
mov
loopne
lods
jg
cmp
add
add
aad
cld
pop
call
lea
add
push
inc
or
adc
pop
iret
ficoms
scas
xor
mov
fnsave
pushf
and
adc
call
loopne
fdivrp
fucomi
lcall
dec
sub
loop
mov
daa
xor
mov
shrl
lea
mov
pop
jmp
mov
push
cmp
movsb
in
je
dec
xchg
shrb
mov
mov
sub
mov
cwtl
orl
in
xlat
fmuls
sub
add
inc
push
pop
push
orl
or
movsl
mov
ds
fnstsw
loop
fmul
repz
insl
stc
adc
inc
add
add
pop
xor
add
mov
in
pop
scas
je
sbb
aad
mov
ljmp
leave
scas
ss
and
dec
stc
or
xchg
int3
pop
jne
hlt
mov
jecxz
rclb
int
jno
icebp
and
or
scas
sub
lock
push
rorl
pusha
lods
jge
inc
add
inc
mov
inc
outsb
mov
scas
outsl
repz
out
sbb
add
mov
dec
xchg
outsl
rorb
sub
push
pop
fstpl
inc
lods
lahf
xchg
xchg
pop
std
jb
xchg
fsubs
mov
loopne
icebp
shr
add
mov
je
xchg
xchg
pop
jne
std
push
cmpsb
cmp
pop
mov
push
out
push
and
pop
cmp
adc
xchg
ljmp
and
shr
jno
loopne
and
and
pushf
ror
test
sbb
lret
test
mov
jno
xor
in
pop
cmpsb
xchg
sbb
roll
lods
sbb
adc
sahf
aas
imul
inc
int3
ss
mov
mov
test
jg
xor
sbb
or
lret
mov
push
jg
fwait
in
out
fmuls
movsb
outsl
cs
or
fwait
pop
mov
jbe
or
inc
push
pop
mov
add
in
push
jnp
subb
cmp
out
jg
sbb
ss
cmp
dec
negl
je
jns
sub
inc
subl
repz
dec
loope
mov
ja
out
push
and
mov
rcrb
jl
lock
lods
xor
lds
lods
dec
sarl
inc
subl
inc
jne
add
aad
mov
mov
scas
hlt
xchg
xchg
pop
in
bound
aas
push
fs
push
inc
dec
fistl
pop
cmp
lret
or
pop
fwait
cmp
add
sub
fimuls
and
dec
push
mov
inc
add
cld
je
adc
push
mov
div
pop
dec
cmp
mov
lret
fdivrs
or
dec
pop
inc
stc
roll
leave
sub
jno
mov
sub
dec
cs
stos
gs
mov
xchg
mov
lret
mov
pushf
inc
xlat
stc
rolb
push
mulb
adc
or
sbb
ret
jp
addl
jge
scas
push
es
and
push
and
ss
arpl
and
mov
pop
pop
scas
and
push
mov
push
xchg
jnp
imulb
or
pop
push
sti
rorb
add
xchg
lret
pop
and
push
xor
sub
sahf
ficompl
mov
sbb
std
push
loopne
pop
xchg
inc
in
cmp
lea
dec
outsb
xor
daa
push
xor
ja
int3
pusha
mov
dec
das
enter
and
cltd
sub
stc
sti
outsb
adc
lret
sub
jo
cltd
mov
stc
aaa
dec
fbstp
xchg
lret
insl
fmuls
cltd
hlt
cmp
fidivrs
mov
or
pop
cwtl
mov
sub
xor
outsb
pop
pop
rcrb
xor
pushf
lcall
popf
mov
pushf
mov
cmp
mov
dec
xlat
out
popa
or
shrl
loop
jl
out
pop
sub
dec
sub
imul
mov
mov
dec
mov
fmull
insl
mov
ljmp
out
cmp
mov
sub
lcall
jmp
fucomi
pop
push
cmp
addl
shrl
aas
pop
xor
push
xchg
imul
push
mov
scas
das
sbb
and
scas
xor
call
xchg
xor
lahf
pusha
push
repz
xchg
jmp
leave
mov
mov
sarl
test
notl
jne
jae
in
pop
out
and
adc
loop
xor
roll
mov
nop
sub
sbbb
sahf
xchg
mov
sub
mov
mov
aas
test
add
pop
lahf
stos
outsl
xchg
or
jp
inc
ret
sub
dec
lcall
or
add
out
inc
jae
jge
xor
mov
adc
sub
or
incl
call
rcll
lcall
mov
or
cmp
ja
out
test
mov
test
dec
add
lock
iret
push
xchg
pop
mov
or
iret
pop
jmp
jo
cmp
mov
sbb
mov
push
test
cmp
xor
out
jge
jb
ljmp
mov
fidivl
or
ljmp
jbe
cltd
cwtl
sub
xor
mov
sarb
push
sbb
ds
mov
test
push
out
mov
rcr
jle
fwait
dec
pusha
insb
cmp
or
fstpl
dec
pop
or
sti
inc
mov
or
jg
fcoml
xor
push
adc
mov
cwtl
pusha
mov
cmp
xchg
or
inc
adc
jnp
andl
insl
mov
and
cmp
mov
mov
mov
mov
imul
lahf
in
pop
mov
or
sub
jge
or
movsl
ja
fbstp
call
mov
xor
mov
fcmovbe
inc
add
add
je
fwait
xchg
fwait
dec
lret
fldenv
in
xor
bound
into
cli
pop
jnp
daa
adc
in
rolb
lret
sbb
pop
lock
cs
in
in
xor
movsl
das
sub
push
xchg
data16
xchg
jmp
sbb
sub
and
fdivrp
fimuls
push
adc
jo
cld
les
dec
sbbb
insb
and
fwait
pop
aam
xchg
ret
andl
xchg
call
filds
and
icebp
xchg
add
jle
mov
clc
leave
test
test
mov
jnp
sbb
push
pop
xchg
jo
in
sarl
mov
mov
fs
lcall
dec
sub
push
test
push
out
mov
test
or
das
jmp
std
adc
xchg
test
xlat
push
and
adc
ds
lret
lea
repnz
and
cmc
in
test
push
out
aad
arpl
test
outsb
mov
jp
repnz
mov
pop
pop
cltd
lods
mov
mov
dec
inc
inc
scas
xlat
imul
and
scas
sbb
adc
sbb
add
xchg
and
or
and
loopne
inc
pop
mov
push
mov
je
pop
push
in
inc
jns
enter
jmp
mov
arpl
out
pop
shl
push
ret
scas
icebp
sub
mov
adc
nop
fisubl
dec
mov
test
test
cmp
data16
xlat
sub
mov
jmp
out
mov
pop
push
inc
xor
mov
cld
inc
inc
mov
mov
jnp
pop
inc
ljmp
gs
int
insl
inc
and
popf
fistl
jmp
hlt
data16
xchg
loop
sub
test
inc
lea
sbb
adc
fwait
rol
xchg
ret
push
mov
ljmp
inc
btrl
sbb
mov
gs
xchg
lahf
and
mov
push
and
pop
lahf
lret
jmp
in
add
xchg
pop
in
sub
mov
mov
bound
jg
cli
loope
idivl
sbb
dec
cmp
rol
sbb
sbb
cltd
jb
movsl
stc
sub
repnz
sbb
int3
cwtl
push
aas
outsb
ja
cmp
popa
jg
nop
loope
test
jg
ret
push
xor
lret
mov
aad
jb
cmpl
xor
push
lods
xor
cwtl
xor
dec
fcmovnb
inc
pop
loopne
jbe
jge
jno
int3
insl
cmp
mov
add
push
jae
xchg
cmpsb
dec
lret
push
xor
push
je
jl
roll
je
bound
jge
aaa
aam
or
fsts
push
loopne
cld
scas
push
scas
outsb
xchg
je,pt
lret
adc
fucom
inc
push
jmp
pop
dec
pop
add
add
ds
jmp
sti
nop
push
int3
mov
sbb
add
xchg
sbb
sub
cltd
adc
fdiv
inc
mov
lahf
push
std
xor
dec
andb
imul
jb
cmp
cmpsb
adc
cmpsb
int3
xchg
stos
push
orl
push
lock
or
nop
mov
scas
pop
enter
jne
sbb
rcrb
mov
inc
pusha
test
and
mov
lds
mov
repnz
repz
in
fistpll
cmp
bnd
movb
add
add
in
mov
lcall
rol
pushf
cwtl
call
stos
shlb
cmp
mov
ja
mov
dec
inc
ss
fs
sbb
lcall
loope
cmp
mov
stos
rol
cld
mov
loop
insb
stos
rcl
add
pslld
push
cmp
orb
mov
pop
jl
mov
insl
adc
or
nop
icebp
push
xchg
push
cmp
sub
mov
bound
into
iret
fwait
sub
pop
sbb
addb
inc
cwtl
dec
rclb
mov
cmpsb
in
orl
mov
movsl
in
fisubs
mov
leave
jns
test
cltd
js
mov
lock
test
sub
mov
daa
neg
mov
xchg
and
or
mov
mov
sbb
aaa
mov
lret
loopne
pop
xchg
add
push
push
imul
mov
dec
je
in
xchg
cmp
mov
add
int
sbbl
stos
lcall
jmp
jne
pushf
and
cmc
xchg
lods
stc
insl
inc
lock
adc
xlat
jnp
daa
lea
dec
mov
xchg
mov
xchg
lds
adc
cmp
data16
xor
cld
ds
arpl
mov
sti
lcall
xchg
cltd
cmp
and
push
sub
enter
mov
outsb
ret
outsl
outsb
into
sahf
xchg
stos
add
inc
ljmp
or
mulps
aas
mov
mov
outsb
or
pop
test
stos
out
mov
sub
cltd
movsl
out
subl
sbb
in
and
mov
fdivrp
jnp
or
stos
inc
insl
push
push
sarl
sbb
pop
mov
shrb
and
sub
or
rclb
mov
daa
adc
ret
pop
rcrl
push
or
loop
gs
aam
xor
cmpsl
lods
andl
fdivrs
mov
sarl
lods
xor
mov
frstor
gs
cmp
movsl
jle
sbbb
push
mov
xchg
ss
push
pop
dec
in
adc
leave
stos
cmovle
lods
mov
cmp
loopne
repz
and
and
jb
add
dec
outsb
cs
je
adc
les
xor
xchg
subl
lahf
mov
arpl
fsubs
cmpsl
scas
jnp
pop
out
adc
fwait
push
lret
loop
fisttpl
mov
jbe
push
bswap
insb
cmovne
loopne
or
cmp
push
daa
sub
das
jecxz
jae
sbb
or
inc
jno
jnp
fucomi
lods
mov
fwait
inc
jle
divl
xchg
xor
jb
jmp
mov
xor
mov
mov
cmp
jne
gs
dec
out
stc
jge
sahf
pop
adc
mov
repnz
sub
aad
sbb
cli
cmp
xchg
inc
adc
int3
xchg
fstl
rorb
test
or
inc
push
mov
or
pop
jle
sbbl
pop
or
fwait
clc
adc
test
notl
cmpsb
loope
or
mov
dec
mov
fiadds
imul
int
cmpsb
dec
cmc
cmp
lods
jmp
jmp
cmp
xlat
into
aas
push
and
add
add
subl
mov
sub
or
aas
xchg
push
in
jnp
pushf
jnp
jne
xor
sub
test
cmp
pop
sbbb
sub
cli
dec
and
pop
sbb
loop
add
pop
sub
rcrl
pop
mov
filds
sahf
stos
test
sbb
sbb
add
cs
sbb
xor
fbld
outsl
xorb
mull
dec
nop
sub
cmp
popf
mov
jecxz
stc
lcall
int
lret
add
rcl
cwtl
dec
dec
sbb
xchg
cmp
xchg
testb
adc
jge
cmpsl
fcoms
adc
lods
mov
or
data16
mov
movsb
inc
push
mov
mov
out
subb
jnp
pop
scas
clc
std
fnstcw
ljmp
inc
push
ret
movsb
mov
ds
mov
push
fsubp
and
push
sahf
mov
or
ret
scas
push
aad
jo
inc
add
and
lea
ja
daa
jo
pop
jle
mov
dec
repz
pusha
fsubl
aam
loop
jmp
out
push
push
lods
lret
jl
rorb
xor
lret
fwait
test
mov
sbb
aam
adc
enter
push
pop
fisubl
aam
cmp
fmuls
fcoms
cmp
nop
or
jmp
aas
mov
shrb
ret
jge
jge
jle
xor
jle
aad
mov
xchg
ss
xchg
ror
mov
sbb
movsb
mov
clc
or
out
jecxz
mov
sbb
inc
push
cmpsb
shrl
stos
iret
jmp
loopne
pop
lock
mov
push
ds
sub
or
jo
popa
xchg
xlat
xchg
dec
xchg
mov
movsb
sbb
loopne
es
sub
in
mov
dec
adc
push
jp
pop
mov
dec
mov
mov
cmp
fcomip
and
mov
jecxz
push
out
nop
jno
dec
push
sbb
push
inc
subl
test
rcrb
xor
lds
xchg
andl
sbb
mov
sbb
cmp
sub
jge
add
sub
int3
fcompl
dec
in
mov
jmp
lods
insl
ret
jle
push
sub
ss
jbe
mov
jb
test
adc
push
dec
mov
push
mov
mov
aas
add
dec
cmc
xor
and
jl
repnz
mov
adc
adc
mov
and
mov
sbb
mov
loopne
jb
cwtl
outsb
pop
cmp
into
sbb
add
sbbb
or
mov
dec
jle
mov
ljmp
mov
fcomps
sti
cmp
lock
rolb
pop
push
jecxz
push
shll
pop
inc
inc
sahf
mov
fdivs
std
ficoms
iret
movsl
dec
push
cltd
lods
add
cltd
repz
pop
cmp
mov
clc
and
jg
xor
ret
data16
sub
mov
dec
cmp
je
mov
lcall
xchg
call
mov
repz
adc
jbe
mulb
sub
daa
jle
and
push
je
sub
call
rcrb
fs
pop
int
push
cmp
adc
and
inc
fnstsw
mov
xchg
cmp
mov
cmpsb
inc
fisttpl
inc
xchg
inc
sub
out
nop
inc
das
mov
mov
in
stc
mov
mov
inc
jg
sbb
aas
hlt
idivl
xchg
fdivl
popa
aas
jbe
cmpsl
fwait
xchg
int3
add
int3
scas
xor
das
cmpb
loopne
pushf
shl
jo
sarb
xor
dec
cmp
sub
out
pop
mov
xor
pusha
inc
mov
cwtl
pop
or
dec
or
push
inc
adc
ret
mov
movsb
je
mov
cmp
pop
shl
cld
mov
xchg
in
sti
aaa
inc
call
and
insl
sub
out
fwait
lods
cmpsb
aas
cmc
jmp
cmpsb
pop
das
push
in
push
cmp
lods
stos
or
jle
mov
sub
rcr
add
iret
cmp
int
in
outsl
arpl
mov
jge
stos
lret
push
jg,pt
sbb
jbe
pop
mov
stos
cli
and
xchg
xchg
dec
inc
test
rcll
andl
push
inc
aam
jns
stos
les
pop
push
in
out
and
mov
pop
pop
sub
push
xchg
lret
mov
mov
xchg
cld
call
js
mov
cmp
xor
inc
iret
movsl
cmp
add
lods
sahf
xchg
andb
push
jno
gs
sub
cld
es
pop
xchg
push
ficompl
gs
cmp
jb
enter
out
xchg
add
sahf
mov
es
push
or
jo
ss
or
stc
xorb
jmp
and
and
inc
mov
dec
mov
jb
fnsave
nop
repnz
add
pop
xchg
inc
loope
cmp
es
sbb
mov
sahf
and
and
xor
mull
int
mov
xlat
inc
movsl
cmpsl
xor
into
ja
xor
jecxz
rcrb
aam
xchg
mov
fisubl
stos
repz
int3
lods
inc
pop
xor
mov
mov
mov
movsl
out
jp
cmp
pop
int3
fstps
icebp
std
push
push
dec
subb
mov
xchg
arpl
addr16
mov
push
mov
in
inc
jg
dec
inc
jge
mov
pop
js
shr
jo
pop
stos
sub
cltd
pop
xor
pop
mov
adc
xorl
inc
test
jb
stos
xchg
push
push
aaa
add
xor
mov
movsl
out
mov
addr16
nop
out
ja
mov
lods
lret
push
iret
xchg
in
sub
push
daa
dec
and
in
mov
lea
push
mov
out
xchg
push
xor
xlat
fsubrs
mov
lock
scas
mov
scas
push
sub
fdivs
leave
sti
jo
cmp
jno
add
add
into
jae
and
test
gs
and
int3
popf
sbb
scas
add
push
cmp
ret
test
or
mov
mov
sbb
sbb
jo
pusha
xchg
es
pushf
mov
outsb
and
and
das
push
mov
mov
jmp
lret
ja
call
pop
cwtl
dec
jae
fadd
push
aaa
jge
add
jne
and
push
idivl
repz
mov
fs
fildl
out
mov
inc
pop
addr16
into
push
clc
and
jno
dec
xchg
xchg
xchg
stos
pop
sub
les
or
lret
cmp
rclb
sbb
mov
gs
nop
mov
adc
jnp
sbb
dec
sti
dec
stos
xchg
push
pop
loopne
mov
or
mov
xor
jo
imul
add
push
pop
and
je
filds
add
pop
xlat
fimull
mov
cmc
ret
stos
adc
mov
xchg
add
nop
cmp
jl
int3
inc
in
xor
mov
and
pusha
ds
test
mov
movsl
test
insl
dec
bound
ret
cmp
cmpsb
std
mov
out
scas
mov
xchg
and
xor
sar
in
mov
or
xchg
pop
jp
add
outsl
inc
ljmp
movsb
jo
lret
aad
push
inc
or
or
push
inc
mov
push
mov
ljmp
mov
dec
cmp
push
push
or
adc
cmc
sub
jnp
lods
dec
icebp
stos
jo
pop
dec
mov
jae
pop
lea
push
dec
mov
je
pop
bnd
cmpb
pop
cmp
or
mov
xchg
dec
aad
mov
xchg
in
jmp
flds
jbe
leave
sahf
push
cltd
cmc
pop
mov
jle
shlb
outsb
es
sub
aad
test
rolb
aas
sarl
mov
leave
mov
push
ljmp
cmp
cwtl
add
pop
outsb
sub
imul
in
or
pop
divb
jmp
rorb
and
pop
fwait
add
ljmp
fildl
mov
xchg
cmp
push
mov
mov
cmc
push
movsl
xor
push
test
hlt
jl
adc
insb
xchg
aam
test
ljmp
dec
jg
pop
xor
adc
lcall
adc
sbb
das
ret
aam
fisubl
and
ret
test
mov
repz
daa
or
test
aam
in
jecxz
stos
cld
adc
push
jp
pop
sub
push
dec
js
repz
sbb
jg
lods
popf
inc
xor
ret
mov
jecxz
mov
addr16
aad
lock
pop
loope
adc
jg
mov
dec
addr16
movsb
sahf
and
fidivs
or
dec
cmc
xor
pop
stc
movsl
adc
push
inc
popf
pop
mov
inc
divb
jae
mov
rolb
cmpsb
int
out
pop
popf
jae
sbb
sbb
test
mov
dec
sbb
xor
popf
mov
adc
adc
add
repnz
iret
mov
mov
jmp
in
js
mov
lea
rcl
adc
iret
mov
adc
pop
jmp
fldenv
inc
int
aaa
inc
lahf
cwtl
xor
out
stos
mov
lds
pop
stc
frstor
mov
jg
jo
xor
lods
add
and
or
stos
adc
movsb
xchg
repz
shl
sbb
in
rorl
imul
cli
aam
mov
icebp
or
sti
mov
sbb
mov
mov
outsb
ret
xchg
std
test
add
dec
xor
icebp
insb
pop
cmc
push
fnsave
fisubrl
loopne
mov
jbe
push
cwtl
mov
loop
and
std
dec
loopne
mul
mov
jl
arpl
addr16
sub
mov
call
mov
push
rolb
mov
mov
daa
jmp
rcrb
orb
mov
and
dec
js
test
addb
mov
cmpsl
repnz
or
adc
roll
jne
mov
sub
clc
push
jp
mov
sub
xor
aam
stc
adc
adc
aam
lret
pop
mov
pop
add
js
add
xchg
mov
push
mov
pop
daa
push
call
xor
jne
inc
or
mov
hlt
fwait
mov
xchg
xlat
nop
les
push
or
mov
repnz
rclb
and
jl
imul
mov
dec
and
fcoml
xchg
push
ljmp
insl
dec
or
ret
adc
xor
adc
and
test
mov
jle
and
pop
call
bnd
out
pusha
and
mov
inc
and
xchg
mov
and
pop
inc
xchg
inc
repz
jge
fs
jno
int
cs
aas
sti
mov
inc
xchg
sbbl
inc
sub
repnz
rcll
sbb
pop
addr16
cli
outsb
pop
mov
imul
out
and
fnstcw
je
or
xor
enter
sub
pop
jbe
sahf
xor
sub
xlat
inc
mov
cs
sbb
mov
pusha
in
cmp
xor
fimull
stos
test
pop
pop
mov
pusha
jns
insl
jns
xchg
dec
adc
jl
jl
sub
insl
imul
data16
out
aam
mov
fadds
mov
or
fidivs
in
je
dec
pushl
mov
mov
inc
and
test
adc
jmp
aad
mov
jb
sub
es
mov
and
jae
ja
icebp
xchg
xor
add
shl
inc
sahf
js
js
fsubrs
sti
jle
addl
stos
addb
loop
aad
data16
jecxz
into
pop
cmpsl
loope
add
inc
ficompl
out
dec
pop
push
inc
js
push
cmpsl
popa
cmp
out
mov
je
cmpsb
mov
aam
mov
or
std
ja
xchg
xor
ds
jmp
adc
push
push
mov
sti
pcmpeqd
jnp
data16
fcoms
mov
mov
push
sbb
sub
and
mov
aaa
jge
inc
in
js
sub
aaa
push
mov
push
sahf
out
xchg
mov
xor
mov
dec
fiaddl
inc
sub
repz
popa
insl
mov
xlat
jmp
xchg
mov
out
rorl
leave
pusha
or
dec
add
dec
adc
je
cwtl
jmp
sahf
inc
push
mov
mov
pop
mov
sub
sbbl
push
jns
mov
jg
xchg
in
or
sub
subl
into
sub
and
aam
xlat
ds
ds
mov
call
addr16
pop
pop
scas
imul
std
cs
pusha
popa
pop
movb
call
xlat
in
mov
pushf
cmpsb
mov
lock
dec
xchg
rcrb
jbe
clc
lods
loop
outsb
cld
fstps
cld
pop
jecxz
inc
inc
or
cmpsl
dec
cmpsl
cmpsl
imul
jp
push
and
mov
jge
push
push
shl
push
ja
push
push
xor
stos
mov
pop
cld
mov
sub
jno
inc
movsl
and
in
lret
add
shrb
cmp
jecxz
sub
call
shl
pushf
and
cwtl
cmp
inc
and
outsl
jno
dec
test
imul
xor
push
mov
sub
sbb
test
or
lods
xchg
ret
lret
cmpsl
icebp
int3
pop
lahf
push
add
and
xchg
jbe
repnz
sbb
adc
push
cmp
jge
jp
insb
inc
push
testb
test
test
movsl
ret
pop
mov
pop
mov
popf
mov
cmp
roll
repz
sub
sub
push
int3
cwtl
cmp
cmp
lds
stos
ret
cwtl
xchg
cmpsl
lds
mov
icebp
adc
movb
out
sti
cmp
push
test
jnp
hlt
shlb
mov
dec
xchg
stc
dec
iret
mov
jl
sub
lods
ja
add
push
xchg
jg
mov
cli
cmp
jnp
es
and
ljmp
xchg
push
jl
in
jns
movsb
mull
add
ss
ja
push
shll
sbb
into
movsl
xchg
cltd
cmp
mov
inc
mov
mov
outsl
out
das
xchg
adc
jns
sub
inc
adc
es
jecxz
fisubl
jns
xlat
int3
test
movsb
aam
stos
mov
jnp
jmp
lds
aad
into
sub
cmpsl
das
cmp
adc
jle
call
xchg
pop
add
pushf
sub
enter
pop
decb
sub
cmpl
push
lock
ret
cmpsb
mov
cmp
or
loope
gs
pop
or
adc
dec
dec
lods
leave
ja
xchg
jge
int3
mov
pop
xchg
popa
hlt
add
xchg
mov
ja
xchg
and
add
sub
lods
pop
shl
loope
push
sub
repz
mov
subb
cli
rcrl
xor
in
dec
mov
inc
nop
xchg
jg
sub
sub
popa
outsl
in
out
cltd
lcall
popa
jmp
push
lds
int
xchg
lret
scas
push
pop
rorb
popf
and
mov
push
stos
mov
cmpsb
gs
mov
add
call
cld
mov
sbb
bound
jne
jl
push
movsl
out
pop
mov
add
insb
pop
je
lahf
movsb
lods
sbb
xor
les
popa
jge
fsubrs
jae
mov
lahf
mov
mov
sub
pop
mov
dec
int3
je
adc
call
dec
adc
xor
jp
and
mov
xlat
inc
rclb
or
pop
sbb
mov
push
test
dec
pop
xchg
std
xor
shrl
fbstp
jmp
mov
stos
sbb
jb
loopne
mov
fs
test
xor
data16
mov
push
jecxz
or
mov
dec
mov
pop
sarb
add
push
xchg
pop
mov
lods
push
movsb
mov
push
mov
sub
pop
imul
lcall
push
inc
out
mov
hlt
mov
inc
clc
fldcw
xor
push
cli
sbbb
fst
sbb
fsub
push
ljmp
jecxz
dec
jmp
mov
lahf
push
lods
push
lahf
lret
mov
test
push
push
mov
int3
rolb
sbb
mov
rolb
lret
gs
cli
sub
out
in
lock
sub
and
push
sub
ljmp
call
adc
push
jp
and
xor
sbb
leave
std
ficoms
scas
jnp
jl
insb
and
cmp
sbb
std
mov
pop
test
leave
jnp
aam
jae
or
xchg
push
loopne
rorb
or
push
sbb
pop
jge
mov
push
xchg
push
mov
testb
xor
inc
js
fs
and
xchg
fwait
mov
sub
lods
dec
jae
repz
dec
fmuls
lock
ret
dec
out
pop
pop
pop
lret
inc
push
stos
dec
mov
cmp
lahf
pop
into
xlat
nop
js
sti
rolb
cmp
jl
pop
fmuls
push
push
sub
or
and
test
mov
cmp
mov
dec
pop
inc
mov
push
stos
pop
movsl
aaa
js
test
mov
xchg
call
cmpsl
inc
cmpsb
adc
sti
ret
cmp
lcall
test
cmpsl
jecxz
pop
sub
rorb
xor
jbe
push
push
out
lahf
fistpll
in
mov
popf
pop
repz
or
negl
outsl
std
aaa
and
lea
in
lods
push
mov
jne
outsl
mov
decl
shrb
xchg
scas
clc
dec
xor
cmpsb
imul
jmp
sbb
stc
sbb
stc
mov
cmpsb
fstp
ror
ss
adc
cmp
mov
mov
adc
daa
mov
fwait
mov
mov
dec
aam
rorb
sbb
scas
int
push
sub
sub
shlb
sub
xchg
inc
push
pop
imul
mov
ja
mov
insl
jno
fidivrl
xor
or
xchg
push
sar
lods
fsubrs
pop
or
mov
sub
dec
nop
push
lds
mov
aam
lock
add
cmpsl
arpl
fs
ret
dec
xor
mov
pop
push
in
mov
mov
out
sbb
jno
daa
dec
xchg
cmp
scas
scas
repnz
fstps
pushf
jmp
ret
add
mov
and
stc
add
movsl
out
and
cwtl
ds
and
xchg
add
dec
sti
mov
cs
andl
adc
enter
enter
sub
jnp
dec
pop
xchg
jmp
jb
sbbb
and
jge
sti
mov
pop
dec
inc
call
movsb
imulb
mov
and
xchg
or
iret
adc
ds
cltd
mov
push
sub
mov
adc
cmpsb
mov
xchg
call
cmc
cmpsb
call
notb
cli
imul
pop
xchg
add
xorb
scas
cmpl
cvttps2pi
xor
add
movsl
data16
cwtl
rclb
pop
pop
stos
add
cmp
sub
or
jno
pop
push
dec
push
dec
jecxz
push
int3
mov
and
gs
or
out
push
out
gs
mov
sbb
fwait
adc
cwtl
push
ss
ja
ja
frstpm(287
ds
loopne
cmp
mov
jmp
adc
adc
sbb
mov
icebp
ficomps
push
sbb
adc
adc
fisubrl
imul
aaa
aam
pop
inc
out
loopne
ret
add
sub
cmp
add
sbb
add
mov
ds
xchg
mov
adc
dec
mov
cmc
push
into
adc
adc
mov
or
push
xchg
rorb
mov
mov
movsl
ss
mov
stc
mov
cli
mov
test
sbb
rorl
sbb
inc
xchg
stos
add
popa
cmp
mov
test
out
ja
mov
fldl2e
push
int
sub
cmp
lock
js
mov
dec
pushf
icebp
add
call
out
push
pop
jp
or
push
jbe
ss
add
cmc
test
lea
push
jle
pop
pop
shll
sub
decb
shlb
ljmp
pop
add
lods
repnz
mov
imul
inc
mov
aaa
mov
and
inc
mov
imulb
adcl
daa
jo
shrl
hlt
inc
aad
push
ja
push
jecxz
sub
in
mov
shl
inc
shl
push
xchg
sbb
movsb
xor
es
aas
scas
int3
mov
dec
jno
dec
bswap
jl
pop
aas
fnstcw
popa
mov
xor
sarb
inc
add
sbb
pop
mov
stos
adc
mov
outsb
loope
leave
and
mov
push
das
mov
loopne
push
aaa
xor
adc
xor
xor
push
push
outsl
fisttpll
mov
adc
nop
sbb
jbe
cltd
push
dec
loop
aam
std
fsubl
pushf
leave
cmp
roll
jae
outsb
fldl
xchg
cmpsb
xchg
rclb
les
jae
int
shl
xchg
inc
shll
mov
out
nop
jnp
shl
cmpb
push
daa
sbb
mov
jb
rcll
xor
xchg
sbb
lahf
js
inc
jbe
fwait
dec
inc
rclb
jbe
cltd
pop
mov
insl
push
jns
adc
pop
add
insb
icebp
test
or
orl
sbb
cmp
lds
or
neg
pop
rcll
or
fisttpll
add
cmp
push
jne
jg
nop
add
pusha
inc
fnsave
int
sarl
mov
lods
adc
outsb
adc
sbb
int3
cltd
jg
or
aam
or
add
je
rcrl
mov
dec
les
jg
fisubrs
xlat
je
cli
cmp
jns
cwtl
mov
and
shlb
mov
andl
std
aam
xor
sbb
sub
mov
loop
popa
call
aam
sub
je
movb
enter
pop
xchg
mov
xor
sbb
or
xchg
dec
addr16
vshufps
sub
push
notb
jns
fs
or
mov
mov
or
idivb
adc
ret
push
popa
aaa
lahf
lods
sub
adc
inc
or
ss
in
jle
stc
fldcw
shr
mov
int
add
enter
push
mov
push
shlb
loop
mov
dec
jl
jae
or
sub
mov
push
into
sub
repnz
andl
hlt
mov
pop
or
dec
stos
mov
and
add
push
scas
fucomi
movsl
pop
jg
adc
sub
xor
enter
dec
xchg
shlb
shll
pop
sbb
jo
dec
fwait
lahf
lds
inc
jb
mov
movb
or
push
jae
nop
in
shrl
aaa
cmp
mov
pop
push
mov
sti
inc
adc
scas
lea
fcomps
mov
sub
xor
stc
pop
pop
mov
jnp
mov
cmp
xchg
out
iret
dec
mov
mov
mov
arpl
sub
jmp
les
xlat
push
cwtl
xlat
call
mov
cmp
adc
adc
leave
xchg
inc
imul
sahf
xor
xor
mov
sbb
fucomp
fwait
or
sahf
shl
cmp
jecxz
mov
in
sbb
xchg
aad
jmp
imul
sarl
xor
mov
pop
xchg
js
mov
lcall
xchg
push
clc
fisubrs
jg
push
cmpb
loope
mov
sbb
adcl
or
mov
inc
outsb
ss
jns
push
push
out
mov
add
imul
int
pop
call
imul
sbb
jle
fists
mov
xor
rol
pushf
sub
nop
stc
icebp
push
pop
adc
rcll
rorl
inc
jne
loope
gs
pop
push
scas
outsb
pop
je
pop
mov
and
inc
sub
mov
mov
mov
push
mov
xor
cli
push
sbb
lds
inc
sub
xor
inc
xor
outsl
mov
dec
cmc
aaa
repnz
stc
mov
lcall
addr16
aas
jno
jle
lret
push
daa
pop
cmp
push
inc
addr16
push
inc
and
idivl
pop
push
imul
jbe
test
test
cs
mov
and
adc
cltd
jmp
js
mov
dec
inc
push
mov
xor
movsb
nop
loop
ficomps
mov
int3
push
add
ljmp
call
rclb
or
push
sbb
pop
xlat
sar
sub
cmpsb
aam
pushf
sarb
mov
lods
aam
add
loopne
lcall
xor
xchg
jne
xchg
xchg
mov
je
pop
sbb
popf
or
div
arpl
jl
xor
ss
in
mov
mov
or
sti
pushf
jo
out
stos
push
sub
jnp
mov
dec
fnstsw
std
mov
into
in
or
scas
sti
jno
sbbl
cld
jne
jno
cmp
ss
mov
pop
shlb
ds
xor
sahf
jae
push
ss
jg
stc
or
out
sti
dec
iret
notl
add
popa
ret
or
add
js
inc
mov
xorb
push
cmp
jns
xchg
pop
aaa
push
jne
xor
jnp
pop
mov
inc
xchg
and
pop
sti
sahf
or
mov
jp
inc
mov
insb
shrl
data16
leave
pop
dec
in
gs
dec
subl
dec
push
inc
adc
insl
add
pushf
enter
push
cmp
adc
lret
es
dec
movsb
push
dec
repz
repnz
add
add
xor
pop
sub
neg
gs
jmp
jo
inc
mov
jmp
fnstenv
lret
inc
push
inc
dec
imul
fidivl
lahf
in
cmp
cmp
mov
xlat
jp
inc
pop
and
and
inc
lea
sub
push
add
push
cmp
xor
inc
pop
mov
cs
dec
sub
imul
sar
mov
lods
aaa
mov
or
daa
mov
pop
fwait
addl
or
mov
dec
loopne
pop
rol
pop
xlat
loope
sahf
adc
jb
sbb
push
test
xor
adc
pushf
lret
mov
sub
inc
lret
imul
enter
insl
sub
jl
inc
cmpsl
push
ficoml
and
mov
cwtl
es
inc
lret
add
leave
test
js
cltd
hlt
das
stos
imul
stos
push
ret
xorb
mov
push
arpl
ja
push
add
dec
xor
xchg
lods
cwtl
sbb
jb
sbb
or
out
pcmpgtw
and
call
mov
xchg
mov
imulb
mulb
push
rcll
mov
fadds
cltd
pop
rorb
cmpsl
push
pop
popf
mov
push
pop
jne
jbe
mov
mov
clc
mov
es
mov
cmp
andl
mov
cs
enter
inc
in
inc
mov
push
data16
jno
add
mov
cmc
mov
xchg
inc
mov
dec
sub
xor
das
out
clc
xor
nop
popf
xor
pusha
and
cmp
aas
sub
sub
dec
sbbb
and
loope
outsl
xor
or
push
add
sti
dec
and
jbe
inc
je
pop
data16
lcall
jo
insl
inc
imull
push
sub
notl
cmp
xor
xor
aas
jo
aam
fldt
push
arpl
xchg
sbb
xlat
andb
hlt
dec
push
add
mov
pop
loope,pt
sbb
mov
mov
push
cli
mov
mov
dec
repz
mov
dec
pop
faddl
mov
call
daa
gs
sbb
sbb
je
add
mov
test
rorl
mov
or
inc
in
imul
insb
inc
dec
shlb
xor
insb
out
inc
jb
out
or
lret
jb
mov
ds
or
mov
dec
loop
inc
mov
cltd
rcl
fisubrl
mov
add
lods
xchg
movsb
insl
jns
add
ret
je
dec
into
pop
sahf
lret
inc
in
out
lcall
outsl
rorb
pop
lods
xchg
lods
std
or
sub
cmpsb
je
adc
cmp
scas
loopne
mov
lret
and
test
nop
dec
outsl
shr
pop
lret
popa
faddl
and
and
cmp
rcl
movsb
xor
in
call
inc
jl
push
and
or
lret
mov
add
neg
mov
mov
push
cmp
push
cmpsl
pop
lret
pop
stos
sahf
mov
int3
push
dec
sbb
xor
pop
and
out
and
in
sub
sub
cld
mov
lods
movsb
or
push
mov
inc
add
dec
lock
cmp
jecxz
and
sahf
fisubs
sbb
jmp
and
js
fwait
lds
test
call
mov
roll
and
idivl
fwait
popa
xor
mov
dec
and
xchg
test
dec
or
push
out
lods
fstpl
push
inc
sub
repz
sub
and
xorl
test
pop
cmp
cli
jno
dec
clc
mov
mov
or
push
shlb
bound
pop
cmpsb
lds
mov
or
cmp
xchg
mov
jecxz
test
leave
mov
or
lret
dec
int3
call
xor
dec
mov
inc
fimuls
mov
jmp
push
imull
push
pop
push
cmp
int3
in
stos
int
jo
or
add
pop
add
ss
sbb
push
fcomps
or
sbb
xchg
xchg
ret
pop
adc
fsubrs
out
jb
cmp
in
inc
xsaveopt
sar
xlat
pop
neg
int3
dec
xchg
sub
mov
test
lds
mov
scas
daa
jnp
cmp
mov
cmp
dec
or
pusha
push
mov
loopne
aad
scas
test
jne
xor
inc
dec
and
lret
aam
js
jo
mov
mov
adc
cmp
loope
sub
mov
jecxz
insl
sub
in
imul
inc
sbb
mov
mov
dec
push
push
xor
gs
lods
cmpsl
xor
xor
mov
les
cmp
mov
xchg
or
imul
mov
inc
push
pop
and
fidivrs
pop
push
push
repz
loopne
stos
data16
les
adc
add
pop
jg
jae
cmc
adc
xchg
inc
and
adc
jnp
mov
mov
clc
jecxz,pt
adc
shlb
mov
jo
pop
sub
mov
stos
dec
rcrb
lods
repnz
mov
pop
outsl
jp
push
mov
jnp
and
jecxz
fldt
addl
in
push
add
xlat
scas
cltd
adc
xor
or
jo
sti
loop
sarl
daa
call
decb
loopne
lods
in
sbb
dec
xchg
pushf
cli
xor
add
out
lahf
xchg
addr16
outsb
addb
push
dec
and
je
jbe
lea
test
push
sub
jecxz
xchg
movsb
js
push
mov
push
xchg
test
js
sub
cmpsl
mov
aas
cs
enter
push
mov
ret
pop
in
orl
adc
imul
rorb
shll
jl
push
fidivl
pop
aad
push
repnz
xor
fisttps
pop
mov
and
movsb
fildl
lds
cmp
mov
mov
xchg
imul
int
push
out
aaa
or
adc
mov
insl
xchg
aam
pop
sarb
imul
les
mov
movsl
inc
mov
mov
xor
adc
fsts
into
loope
loopne
mov
ss
movzwl
mov
je
and
outsl
xchg
xor
mov
pop
jb
mov
stc
dec
xorb
mov
repnz
xor
icebp
mov
mov
loope
mov
sub
cmp
and
mov
mov
stos
and
mov
ss
jecxz
daa
dec
push
jnp
push
out
dec
push
or
mov
icebp
add
jno
mov
adc
mov
rclb
xchg
or
lods
inc
pop
scas
xor
gs
stc
add
mov
pop
jecxz
nop
xor
xlat
push
call
ss
addpd
add
ja
xor
fisubrs
mov
movsb
ss
cld
push
sub
in
mov
aam
xor
xchg
cmp
cld
test
push
in
cmc
xchg
xor
push
xchg
sbbl
jae
stc
arpl
and
mov
cmc
or
add
sbb
mov
push
jbe
pop
adc
mov
mov
inc
sbb
inc
aaa
xor
arpl
imul
adc
xchg
aam
xor
ret
push
dec
dec
jge
andw
sbb
xor
inc
stos
or
push
jo
aas
pop
imul
add
and
inc
fidivl
cs
mov
orb
cmpsl
aas
dec
shl
and
mov
sarb
pop
jns
and
adc
dec
fs
lcall
movsl
fcmovne
rclb
andl
dec
test
adc
fldt
fwait
sub
lods
repz
iret
inc
mov
jnp
loop
ss
leave
out
in
out
xor
cmp
push
inc
mov
loopne
and
fdiv
lea
cmc
ljmp
scas
mov
jnp
testb
pop
subb
jae
fldt
je
aam
xlat
aas
inc
test
jle
mov
insb
xor
loope
fidivl
inc
rcrl
mov
fdivr
arpl
cmp
outsb
test
into
pop
lods
or
out
mov
imul
push
mov
test
or
clc
add
cmp
fimull
adc
pop
jb
loop
int3
sbbb
ret
or
dec
push
mov
testb
int3
adc
hlt
push
fidivl
iret
and
jl
inc
cmpsl
cmp
inc
adc
jns
scas
jns
mov
icebp
imul
ds
inc
daa
pop
fisttps
enter
xor
outsl
ret
leave
repz
jbe
xchg
stos
xchg
dec
fs
jo
test
pop
pop
inc
lods
ret
rorb
dec
jle
pop
js
aas
or
mov
and
sbb
push
rcrb
loop
arpl
mov
in
cmp
add
loope
out
sub
out
cmp
mov
sbb
mov
mov
mov
and
sbb
add
pop
cmp
je
inc
ret
pop
shlb
call
enter
pop
ss
pop
out
in
cs
add
out
repz
lds
adc
iret
adc
out
and
add
sub
xchg
movsb
sbb
lods
pop
imul
or
xor
fdiv
cmp
adc
pop
scas
fidivrl
add
push
and
popa
mov
sbb
xchg
iret
xlat
aad
scas
lds
sub
cld
dec
xchg
popa
xor
cmp
inc
jb
xchg
pop
lods
and
dec
call
xlat
mov
push
stc
ja
js
jo
pop
scas
inc
popf
popf
imul
enter
test
fldpi
adc
add
daa
xor
cmp
inc
mov
hlt
out
std
mov
mov
xor
int
scas
push
mov
xchg
add
jns
cld
jl
mov
lcall
pop
cmp
stos
fcmovbe
pop
dec
cmp
add
aaa
inc
imul
adc
push
mov
fwait
and
into
push
push
lcall
sbb
fbld
jno
sub
inc
ret
dec
xchg
xchg
fldt
pop
xor
mov
cmp
dec
inc
scas
xlat
dec
enter
mov
pop
imul
lret
es
or
mov
and
fwait
sbb
mov
inc
add
test
fs
and
dec
xchg
fsubl
jbe
jle
bound
dec
add
mov
mov
jg
jns
sub
cld
adc
add
mov
xlat
push
pop
out
lea
ljmp
sbb
cwtl
dec
and
pop
outsl
adc
add
cwtl
mov
sub
or
or
mov
pop
push
push
sub
cmp
push
out
xchg
inc
adc
fcomi
mov
or
inc
lock
push
push
fcomps
or
dec
les
jb
daa
cmpsl
lcall
pop
mov
cmpsl
das
jns
adc
daa
dec
hlt
loope
ds
int
repz
fisubrl
cwtl
mov
in
sbbb
mov
jbe
and
cmp
xor
pop
js
sbb
fsubl
fstp
arpl
rcrb
lahf
into
dec
in
jge
jle
je
add
lret
adc
sub
sub
adc
sbb
ds
xorb
hlt
jecxz
inc
or
push
xlat
arpl
sti
cmp
sarw
cmp
jl
imul
ret
jns
scas
ja
into
fxch
jae
add
and
je
adc
in
jno
sbb
lea
leave
insb
mov
lods
maxps
popf
pop
in
notb
pop
data16
sbb
mov
in
xchg
sti
sbb
cmp
sti
sahf
mov
xlat
mov
test
add
sti
add
call
mov
xor
mov
andl
lods
mov
mov
pop
mov
sbb
in
sbb
fsubrs
lock
lcall
cmpl
int
jo
ficoml
sahf
jg
mov
movsb
fimull
ret
push
sbb
and
jge
data16
xor
iret
sahf
leave
push
dec
push
loop
lret
push
aam
xchg
mov
cmp
jnp
xor
mov
cmc
hlt
loope
stc
xorl
cli
adc
bound
sub
sbb
shl
jnp
mov
or
jo
loopne
testl
lret
fadds
sub
sbb
lock
stc
mov
jae
mov
jecxz
push
push
imull
int3
or
jmp
test
adc
clc
into
out
push
pusha
mov
cmp
mov
mov
mov
push
lret
incb
sub
rorl
hlt
mul
scas
fcomp
mov
daa
addr16
aad
andb
out
jmp
adc
mov
sbb
imul
mov
insb
inc
enter
fwait
or
rorl
mov
jg
loop
adc
and
pop
ffree
orl
add
cmp
inc
cmp
addr16
mov
push
cli
sahf
lret
cmp
iret
scas
sub
push
push
loopne
xchg
mov
js
xchg
mov
movsb
fmull
sbb
cmp
inc
stos
in
mov
pop
dec
mov
in
mov
pop
jmp
in
shl
xlat
cmp
lahf
fistpl
leave
pop
mov
push
loope
fdiv
push
movsl
outsb
sub
ss
xchg
inc
push
jae
or
clc
ss
mov
cmp
push
hlt
jb
jne
divb
cmpsb
push
hlt
ficomps
push
fcomps
or
xor
mov
fdivp
mov
and
mov
push
int
push
arpl
jge
dec
mov
xor
sub
pusha
sub
dec
repz
mov
clc
sub
sub
test
and
mov
lods
sub
nop
lcall
sbb
mov
call
gs
mov
das
fiadds
ja
xchg
or
test
mov
insl
inc
flds
loope
dec
mov
or
test
mov
and
or
shll
xchg
pop
call
idivl
mov
push
pop
mov
sbb
inc
enter
mov
jbe
xchg
sub
lret
hlt
or
or
xlat
push
cmp
imul
fcmovbe
and
fcompl
aaa
fstpt
jl
mov
pop
inc
imul
add
jns
push
add
ds
jecxz
adc
insb
mov
mov
and
jae
jle
sbb
daa
ds
xor
mov
mov
sub
mov
xchg
orl
and
nop
push
bound
iret
jmp
test
inc
imul
push
mov
enter
dec
das
cmc
push
push
test
pushf
xchg
mov
fisubl
and
lds
outsl
mov
inc
loope,pn
enter
xchg
pop
mov
dec
pop
repnz
pop
mov
xchg
dec
or
mov
bound
or
mov
sbb
pop
pop
mov
add
cmc
mov
push
in
add
test
xchg
sbb
imul
lock
mov
adc
pop
mov
lock
xchg
cs
gs
cltd
mov
fdivrs
int
pop
xor
mov
mov
jo
sub
xchg
mov
inc
xor
aad
or
and
mov
xchg
insl
cld
stos
xchg
fsubl
xchg
inc
sar
and
insl
scas
inc
sub
mov
repz
aas
lret
inc
fbld
pop
or
xchg
inc
test
popa
stos
xor
leave
jnp
outsb
push
lds
mov
stos
movsb
push
and
sbb
push
js
in
rcll
fstps
push
pop
hlt
test
mov
dec
cmp
dec
cmc
rclb
sahf
lahf
filds
xchg
dec
push
sub
add
mov
loopne
je
xchg
xor
sbb
xchg
pop
rclb
sub
adc
sbb
dec
mov
mov
add
add
xor
mov
mov
or
insb
je
pop
jns
ja
loope
adc
lock
ds
push
pop
mov
cmp
in
pushf
jb
cmpsb
push
add
mov
sbb
fwait
and
lea
lea
push
mov
push
adc
mov
lcall
xchg
movl
ret
pop
cmp
sub
mov
out
inc
jo
adcb
inc
adc
cmp
mov
out
sbb
pop
inc
jle
mov
mov
sti
leave
jg
pop
int3
sub
mov
jecxz
cmp
ds
cmp
cltd
mov
mov
mov
int3
es
jno
mov
cwtl
push
xchg
sub
mov
cmpsb
pop
add
mov
push
jle
sub
dec
lcall
fidivrs
sbb
out
sub
stc
repnz
jae
jge
mov
jl
mov
mov
or
in
and
lea
and
pop
imul
mov
pop
push
outsl
and
fadds
out
imul
bound
adc
push
ret
dec
mov
pop
pop
ljmp
xor
push
push
mov
movsb
sarb
fisubs
dec
jl
sbb
and
dec
xchg
sub
push
dec
and
pop
sub
mov
sub
pop
dec
pop
mov
fisttpl
loope
lret
jns
hlt
sub
push
mov
data16
xor
lret
pop
lea
jbe
push
dec
adc
xchg
pop
lock
jnp
cmp
mov
mov
insb
int3
ljmp
add
in
mov
lock
lahf
lds
xor
test
rcrl
or
lea
mov
in
ja
andb
jecxz
cmp
enter
pop
fisubrl
sbb
cmp
or
test
lret
mov
ror
jno
sub
outsl
mov
test
testl
std
pop
rcr
pop
fwait
jmp
popf
mov
cli
testl
push
addr16
sub
mov
stc
mov
lds
div
jnp
push
xor
pop
pop
push
out
dec
adc
stos
sbb
pop
repz
jmp
sahf
add
enter
push
sbb
stos
sbb
mov
jb
lods
xor
daa
jb
mov
out
lret
and
jmp
sbb
mov
add
xor
hlt
stos
xchg
ret
sbb
inc
imul
daa
mov
adc
sub
fstl
js
jecxz
or
jo
popa
out
dec
adc
sbb
es
ja
sti
push
scas
xchg
sbbl
in
out
arpl
pop
or
out
mov
stos
cmp
pop
es
jecxz
out
fdivrl
dec
xor
mov
in
fistpll
lock
cwtl
rcr
adc
mov
leave
xor
push
inc
addr16
ficompl
and
jg
insb
popf
mov
jge
mov
xor
cmp
push
mov
cltd
add
cli
jno
pop
aam
shrl
xchg
sbb
or
mov
imul
sub
add
ljmp
loopne
stc
mov
shlb
dec
mov
test
and
or
sti
pop
xchg
dec
dec
inc
ds
test
cli
insl
enter
ljmp
data16
sub
pop
xchg
popa
and
mov
daa
mov
fildl
mov
insl
loopne
or
mov
xchg
lods
andb
push
jmp
fs
push
or
adc
fidivrl
shll
fs
xchg
push
loope
jle
test
out
mov
lret
jle
jp
ret
dec
cld
outsl
dec
loop
loop
out
xor
fisubrl
jle
cmpsl
ss
inc
shll
inc
pop
pusha
pop
sbb
fsubrs
cld
or
lret
inc
adc
cltd
and
or
lcall
mov
jo
lods
dec
insb
add
inc
dec
sti
sbb
inc
test
cld
sahf
mov
jp
xchg
in
adc
xchg
sub
fcompl
fisttpll
je
inc
lods
iret
xchg
xchg
add
dec
das
outsl
scas
lods
ret
iret
les
fisttpl
movsl
ja
dec
sub
pop
mov
loopw
or
mov
jbe
mov
mov
cmp
and
inc
ret
cmpsl
adc
mov
sbb
push
xor
sarb
pusha
cmp
push
popa
fs
pop
and
fdivr
into
dec
jo
xor
outsl
push
std
dec
je
sbb
push
dec
loope
add
imul
jnp
mov
pop
iret
shrl
jns
mov
jbe
xor
push
pop
loopne
jg
fnstenv
les
push
sbb
in
jl
cmp
xorb
push
ja
add
fldenv
movsl
incl
lea
pushf
cltd
jne
mov
adc
jb
std
mov
cmc
push
inc
jns
xlat
movsl
adc
lret
jge
xchg
sarl
and
pop
test
inc
sub
arpl
xor
sub
sub
das
in
js
ret
dec
sub
movsl
push
push
dec
and
scas
sbb
int3
pushf
pop
adc
fs
push
pushf
jb
xor
push
scas
and
lcall
inc
pushl
mov
jno
xor
insl
sbbb
adc
ret
mov
shll
imul
icebp
inc
lret
cmp
out
test
mov
adc
cmc
fldcw
or
jmp
out
sbb
lods
mov
shl
dec
outsb
dec
cs
les
int3
jg
shr
daa
stos
ja
cwtl
mov
fs
sbb
push
clc
cmpl
jbe
mov
rclb
stos
cmp
js
xlat
jns
inc
cld
jle
mov
adc
mulb
pop
call
cltd
xchg
fsubr
in
xchg
push
adcl
shlb
cs
lahf
mov
and
sahf
ljmp
mov
in
ss
cmp
pop
or
adc
mov
jecxz
mov
jmp
lahf
out
jp
fisubs
inc
jb
push
xchg
in
test
sahf
repnz
jae
ss
push
lods
jo
adc
inc
arpl
enter
sbb
stos
out
cmp
jp
hlt
sbb
ret
iret
test
jnp
push
ret
ret
rcl
sbb
jo
mov
outsl
or
xor
in
jnp
dec
or
inc
dec
test
add
es
popf
mov
xchg
sarb
sbb
mov
shll
mov
loope
inc
rolb
shlb
repnz
dec
int3
add
bnd
test
mov
xchg
cld
arpl
inc
and
cld
shrl
jecxz
daa
push
add
loope
fwait
push
xchg
adc
fwait
lcall
icebp
fisubs
ret
mov
lock
sub
lea
or
scas
dec
int
dec
jne
pop
jecxz
and
xor
into
pop
mov
pushf
test
mov
xor
movsl
xchg
test
jne
lock
xor
adc
bound
dec
mov
sub
pusha
aas
out
ja
and
sbb
in
pop
dec
push
idivb
mov
inc
cmc
xor
das
inc
out
inc
and
dec
and
jl
pop
sub
pop
lahf
xorl
out
jmp
sbb
ljmp
dec
jmp
das
pop
or
xchg
or
mov
adc
les
sbb
lds
sbb
out
mov
mov
lret
out
fs
and
pop
push
add
adc
fcmovb
das
inc
or
sub
mov
in
inc
pop
inc
dec
mov
mov
dec
cmp
stc
cmp
jg
pusha
ds
sub
jecxz
and
xorb
enter
inc
jg
out
dec
push
es
stos
sub
sahf
cmp
xchg
adc
call
je
repnz
jno
jo
popa
hlt
cmc
lahf
or
pusha
jnp
aas
das
sbb
or
push
mov
pop
add
and
and
and
sbb
clc
push
imul
jae
xchg
pusha
jae
daa
in
pop
in
xchg
ja
dec
push
mov
xor
ficompl
mov
gs
inc
lods
xor
fbld
shll
sub
and
push
cmp
push
pop
test
sbb
ds
mov
jle
bound
pop
lods
jae
xor
sub
push
insb
addr16
pop
cmc
in
mov
push
addr16
aam
sahf
popf
xor
push
push
jp
sbb
mov
adc
pop
cmp
mov
mov
pop
imul
out
aad
in
mov
or
hlt
adc
pop
je
fisubs
popa
repnz
daa
dec
and
xor
movb
lods
inc
cmpb
or
xor
lock
dec
stos
pop
dec
lea
inc
imul
in
lock
xor
out
push
jno
enter
mov
mov
stos
das
pop
cmp
call
inc
or
inc
aad
adc
pop
div
xchg
incb
dec
loope
xor
mov
cld
and
sbb
test
xchg
loop
data16
ja
stos
sbb
lods
clc
hlt
and
sti
or
ficoms
cmp
xlat
sub
ror
add
and
jmp
dec
cwtl
and
dec
out
mov
cld
cltd
orl
or
sysret
in
cmp
xchg
repz
fists
je
bound
cli
fcoms
push
lea
insl
cmp
mov
ljmp
pop
pop
movsl
xlat
scas
mov
in
dec
sub
mov
rclb
adc
js
mov
insb
loopne
xor
mov
rcr
nop
div
call
sub
icebp
icebp
add
add
adcl
movsl
mov
pop
pop
sub
fistps
test
lcall
sub
fdivrp
movsl
mov
mov
jge
mov
and
loope
mov
inc
xlat
fmull
insl
inc
outsl
lret
mov
cmp
fdivrs
push
sarb
or
cltd
mov
sub
outsl
xchg
mov
out
pop
xchg
xchg
sub
jne
or
jle
rorl
or
into
mull
push
push
sub
pop
frstor
das
cmp
test
sbb
inc
sbb
test
and
fcom
insl
testb
jns
inc
pushf
insb
xor
inc
push
frstor
push
mov
stos
in
sbb
arpl
mov
push
fisubrs
push
mov
jno
add
mov
adc
iret
movsb
push
cld
scas
repnz
adc
lahf
mov
jl
or
inc
dec
mov
in
pop
int3
push
adc
pop
iret
mov
sahf
push
or
lcall
popa
fisubs
jne
out
xchg
ss
incl
push
and
xor
aas
sbb
and
adcl
jge
sub
out
xor
repz
cltd
mov
jle
pop
out
xchg
dec
lret
rorb
outsl
push
les
push
js
cld
scas
jg
push
sub
shll
xchg
mov
ficoml
out
scas
sbb
xchg
hlt
xchg
dec
dec
imul
adc
test
dec
fbstp
and
dec
or
cwtl
add
mov
lock
movsb
flds
or
ficoml
and
inc
and
loopne
ret
data16
mov
addr16
jo
or
jg
and
push
cmp
jo
repz
lock
lock
cld
iret
xchg
arpl
mov
sbb
adc
jo
jno
lcall
fldt
jp
add
sbb
pop
ror
outsl
mov
ljmp
add
mov
rclb
pop
jbe
lods
ret
push
fbld
sub
in
pop
mov
insl
stos
mov
inc
cs
add
and
lock
xor
mov
test
es
psrlw
inc
fstpl
jno
cs
dec
fstl
das
popf
xor
into
xor
jmp
pop
mov
pop
or
pop
out
fwait
addr16
dec
push
andl
aam
sbb
and
lods
test
pop
outsl
push
add
mov
daa
gs
cmpsb
push
js
mov
jecxz
movsb
cwtl
mov
ret
ds
cmp
mov
jno
dec
cli
data16
int
push
ss
movsb
ja
jbe
jl
cltd
aaa
jns
adc
mov
call
adc
popf
mov
jg
adcb
lret
ljmp
push
fisubrs
ret
aaa
dec
aaa
int
cmp
in
mov
arpl
mov
xchg
pop
and
sbb
in
cmp
push
idiv
stos
jbe
jb
insl
mov
dec
movsl
push
inc
lcall
cmp
int
sub
test
inc
js
sub
stos
push
sub
ret
or
sub
sarl
pop
cmp
lahf
sbbb
jmp
test
shrb
pushf
nop
adc
cmp
das
push
xchg
ja
std
out
int3
sub
push
in
fidivrl
out
pop
arpl
sbb
mov
and
mov
iret
mov
ret
cmpsb
out
clc
jo
pop
pop
mov
mov
fwait
jmp
arpl
sub
jp
lret
in
mov
fnstenv
mov
popa
fucomip
adc
inc
repz
jne
and
aam
aas
xchg
fisubs
into
pop
sbb
imul
mov
scas
xorb
pop
jg
fldenv
add
adc
sub
push
clc
pop
dec
in
add
push
mov
testl
stos
and
stos
addl
scas
jp
inc
aam
push
add
xchg
sbb
test
push
rcl
add
add
sar
jnp
add
fstps
outsb
hlt
jbe
test
daa
sbb
push
fcoms
cmc
daa
add
mov
mov
cmp
and
out
lret
add
xchg
jmp
jl
mov
loopne
loop
movb
jg
push
or
sub
fisubrl
scas
xor
jle
pop
out
push
movsl
cmpsl
inc
and
jns
aas
lock
lcall
mov
repz
sub
ret
add
sti
mov
out
pop
pushf
add
sbb
mov
aas
push
pop
out
cmp
jae
into
sub
test
insl
jb
cmp
xor
mov
call
les
scas
flds
loope
mov
fstpt
push
sub
jecxz
mov
sub
sub
dec
sub
jno
push
mov
test
and
add
cmp
pop
fnstsw
cwtl
and
loop
xor
cmc
out
aad
xchg
mov
push
adc
in
and
outsl
int3
dec
cmp
decb
cwtl
cmp
addr16
dec
sbb
cmc
stos
sbb
add
aas
jne
jb
xchg
dec
pop
jmp
sub
sub
cmpsb
or
nop
rcrb
add
xchg
sti
adc
clc
pushl
fdivrl
push
aad
and
in
es
push
mov
cmp
rorb
xchg
xchg
scas
inc
dec
jbe
gs
mov
dec
pushf
xor
or
xor
cs
outsb
cmp
ljmp
jae
xchg
or
lcall
push
cmp
mov
stc
push
int
push
int
jae
out
lea
lea
test
cmp
jecxz
imul
stos
jo
jbe
push
clc
mov
les
bound
jmp
inc
and
dec
xor
mov
shlb
dec
test
in
push
fmul
scas
inc
mov
lods
ja
mov
or
add
jmp
adc
inc
mov
lret
inc
aas
mov
std
pop
nop
repz
jae
jl
pop
sub
sbb
cmovns
sbbl
and
cmp
arpl
xor
stos
fcomps
imul
sti
inc
push
daa
mov
fisubrs
icebp
fadds
mov
les
pop
add
adc
or
stc
jne
in
loop
pop
sub
std
cmovnp
addr16
notb
aad
inc
xchg
aam
ja
packuswb
in
hlt
jb
xchg
sub
cmp
repz
lret
pop
lret
and
xchg
xchg
push
ret
jbe
imul
mov
pop
adc
loopne
xor
mov
mov
daa
push
jge
mov
mov
adcl
mov
pop
ret
addr16
xchg
xor
mov
add
push
xchg
dec
int3
pop
movsl
in
nop
test
fwait
arpl
scas
add
cld
repz
test
cmpsl
or
loopne
jnp
pop
pushf
push
and
sar
lret
jmp
imul
pmulhuw
dec
adc
adcl
jp
mov
pusha
mov
movsl
outsl
cmp
inc
or
repnz
dec
push
test
dec
cmc
mov
popa
mov
outsl
add
sbb
pushfw
stos
inc
inc
es
mov
int
ja
cmovns
in
shrl
xchg
test
fdivs
mov
aad
repz
and
push
jl
popf
sub
pop
xorb
test
adc
movsl
inc
enter
jl
out
pop
mov
repnz
push
lods
jmp
pop
mov
jb
movsl
push
xor
sub
cmp
lret
fidivl
scas
into
adc
mov
mov
je
sbb
stos
add
sahf
sbb
gs
pop
stos
and
scas
sahf
arpl
adc
mov
mov
xor
sarb
mov
pop
cmp
out
push
shlb
add
xchg
fwait
data16
mov
rclb
mov
dec
sbb
mov
rolb
pushf
daa
leave
sub
mov
add
popf
je
inc
sbbl
or
js
sbb
xchg
or
pop
or
mov
gs
xor
scas
leave
out
aas
movsb
aaa
sti
dec
out
cld
add
cmp
shlb
adc
jno
addr16
popa
mov
testb
ret
stc
int3
cltd
jne
cwtl
jmp
xchg
rep
icebp
aad
into
or
mov
push
imul
add
mov
ret
icebp
out
mov
pop
fisttpll
xor
cmpsb
xchg
repnz
divb
ret
sub
outsb
xchg
shll
hlt
fstl
clc
add
sub
int
leave
xor
xor
sti
aad
push
jb
fdivp
mov
mov
mov
sbb
mov
mov
cld
scas
pop
pop
rolb
rorb
sub
xor
out
test
xor
dec
shrl
adc
inc
push
fcompl
scas
push
int3
leave
int3
adc
cmp
adc
call
adc
adc
push
cmp
adc
nop
mov
nop
cli
xchg
imul
call
pop
enter
pop
ud1
rol
insb
mov
cmp
addr16
push
out
and
shll
and
imul
arpl
ss
dec
outsl
hlt
outsb
pop
bound
cmp
lods
dec
xlat
icebp
outsl
rcrb
idivl
adc
lahf
mov
rcl
jmp
and
inc
js
cmp
loope
call
aad
pop
inc
jg
in
push
and
lcall
push
or
sbb
jp
ljmp
fmull
jg
or
dec
rcrb
lahf
adc
xchg
cwtl
dec
and
inc
xchg
mov
push
icebp
es
hlt
stc
push
inc
xchg
stos
cmp
jo
adc
stc
push
stos
add
adc
add
fdivrs
fnstsw
or
insl
mov
jae
xchg
adc
mov
mov
mov
sarl
loop
sbb
loop
mov
xchg
cmp
ret
jne
xor
icebp
dec
sarl
mov
out
jecxz
aas
into
jmp
mov
in
loopne
push
jns
fbld
sbb
popa
add
cmp
outsb
and
fimull
dec
in
call
sbb
pop
je
out
lods
iret
call
dec
push
jge
data16
call
mov
arpl
sbb
imul
sbb
ja
inc
mov
sti
fnsave
inc
pop
aaa
ret
mov
ds
xchg
cmpb
stos
lea
pop
cmp
andl
push
fstpl
mov
in
jbe
add
mov
push
repnz
cmp
sbb
adc
jg
sub
push
pushf
call
js
jno
repz
shl
sub
jbe
loope
enter
je
gs
addr16
adcl
testb
jle
dec
sarl
xorb
enter
pop
sahf
mov
das
mov
push
mov
mov
addb
jo
or
xchg
dec
fstl
test
inc
dec
cwtl
ds
insl
mov
xor
adc
pushf
adc
inc
cmp
fs
je
ja
and
cmp
xchg
popa
pop
sti
rep
subb
rolb
mov
mov
mov
sbb
in
push
sti
mov
mov
push
mov
ds
xchg
jmpw
and
dec
mov
fisttps
pop
rcl
lret
ret
mul
rolb
dec
call
cmpsl
dec
jl
xchg
ja
pop
loope
loope
imul
xchg
outsb
pop
imul
pop
jno
inc
or
inc
mov
push
xor
cmp
jmp
mov
sub
adc
xor
outsb
or
call
icebp
sbb
xchg
ss
or
xchg
aam
pop
push
sahf
scas
mov
jbe
xor
fldt
loop
pop
mov
pop
sub
loope
loope
ja
pop
cmp
mov
xor
push
stc
xchg
leave
pop
mov
mov
ficomps
xor
insb
mov
shll
sub
aad
fucomi
push
stc
add
js
lds
dec
popa
ret
adc
push
xor
xchg
fdivl
cltd
jle
xchg
adc
out
sbb
and
push
mov
cwtl
add
mov
or
sbb
adc
rcrl
add
dec
notb
cmpl
fs
fiadds
push
inc
loop
push
jge
pusha
ret
roll
adc
sti
dec
std
fidivrs
fistl
int
mov
mov
mov
stos
fwait
push
mov
sbb
mov
add
add
in
int
or
mov
xor
add
orb
mov
xchg
jmp
pop
inc
xchg
in
daa
loop
lret
pop
push
je
sti
xor
inc
daa
loopne
cmp
jbe
clc
mov
data16
xor
lock
xor
aaa
inc
les
or
leave
repz
mov
movsb
sbb
mov
push
mov
sub
lock
dec
and
cmpsl
or
shl
dec
repz
sub
inc
dec
cvtpi2ps
dec
mov
mov
ds
add
out
xchg
dec
mov
cld
jp
or
popa
mov
jge
mov
push
aaa
jo
shlb
lcall
movsb
push
pop
cmp
fcoms
popa
adc
loope
arpl
inc
cmpsl
stc
lcall
and
stos
imul
pop
lock
sbb
mov
mov
mov
or
or
mov
mov
mov
xchg
ret
stos
sahf
xchg
pop
aam
mov
fucomi
data16
jbe,pn
aas
jae
xlat
sahf
jl
test
stos
dec
lahf
testl
or
rcrl
adc
adc
push
jb
pop
push
loop
loope
sub
inc
aaa
mov
pop
popa
sub
push
rcrb
cmpsb
mov
xor
outsb
push
jbe
cmp
aaa
pop
out
daa
sbb
fists
mov
cld
sbb
pushf
pop
inc
movsl
shll
mov
mov
xor
mov
xor
jmp
cmp
jbe
cmc
cmp
sbb
mull
repnz
cmpsl
jg
push
push
mov
test
in
and
arpl
push
push
test
outsb
mov
int3
lods
inc
daa
sub
in
mov
jg
pop
shll
cwtl
movsl
pop
cwtl
cmp
lret
cmp
jle
add
xor
cld
push
inc
jnp
jb
loop
inc
cmp
mov
fwait
or
mov
aas
outsb
inc
ret
mov
lock
lahf
lods
push
xlat
loopne
fimuls
into
mov
jge
add
jmp
ss
sbbb
jns
cmp
cs
jnp
sti
cmpsl
lock
in
mov
loope
adc
lds
out
int
cmpsb
sahf
loopne
add
jg
popa
inc
jg
addl
aam
jg
jp
adc
xor
sbb
mov
mov
pushf
push
mov
jge
iret
xchg
xlat
lods
mov
adc
and
cmpl
enter
xchg
jo
pop
push
jnp
js
shrb
mov
ret
sub
mov
mov
fwait
inc
fwait
sub
addr16
xor
cmp
fs
addr16
mov
jnp
dec
bound
pushf
dec
mov
cld
dec
push
or
adc
aad
or
and
xchg
ret
repz
enter
dec
das
pushf
inc
xor
sarb
sbb
test
shll
sbb
mov
jbe
sub
sarb
insl
jo
scas
mov
bound
cmpsb
cld
sub
sbb
and
jns
in
mov
sub
adc
int3
mov
mov
xor
cmpb
inc
mov
test
out
cmpsl
pop
cmp
push
xchg
addl
sub
dec
xchg
and
inc
ret
sub
repz
hlt
in
test
repz
es
xlat
pop
xchg
stc
push
imulb
and
cmp
aaa
ss
inc
cmpsb
rclb
jnp
js
idiv
ja
dec
out
shrl
pushf
and
dec
push
dec
lret
push
add
xlat
stos
adc
loope
pop
inc
popa
or
outsb
test
mov
inc
hlt
daa
dec
movsb
pop
push
xchg
shrl
pop
push
mov
sbb
mov
pop
sbb
out
enter
sbb
or
pop
xchg
push
cmp
fistpl
loop
or
sbb
xor
push
daa
lock
imul
cmp
or
pop
inc
fs
pushf
xchg
std
fs
in
push
mov
pop
cmp
sub
jmp
cli
add
mov
daa
push
rclb
outsb
dec
or
aam
mov
mov
int3
sbb
sub
scas
test
cmp
and
aad
out
jae
fisubs
jb
mov
fcoml
pop
hlt
test
cmp
jle
pop
in
dec
insb
int
inc
xchg
mov
popa
adc
mov
mov
data16
and
ret
jl
mov
pop
push
jnp
into
in
shrb
mov
dec
mov
fs
pop
subl
pop
mov
call
mov
push
or
and
in
cwtl
mov
sub
xor
into
loope
aas
das
jns
fildll
fdivl
fcmovbe
sub
out
add
push
idivb
cmovb
inc
xor
or
mov
mov
xor
mov
jno
xor
and
mov
insb
mov
push
sbb
adc
mov
imul
cmp
cvtpi2ps
hlt
outsb
jmp
mov
test
fidivl
insb
js
call
sbb
inc
lret
fcoms
idivb
cs
iret
dec
lds
mov
pusha
shll
notb
adc
xor
lahf
loope
out
jg
test
popf
dec
ljmp
mov
or
sahf
lods
fldt
outsb
and
dec
dec
push
jnp
sti
clc
orb
jge
insb
jns
aaa
stos
rorl
insl
mov
pop
jge
mov
sbb
mov
int3
sbb
mov
adc
fwait
mov
test
ret
sbb
cli
stc
inc
mov
bnd
mov
adc
lahf
icebp
adc
jae
lock
pop
xchg
adc
mov
mulb
outsl
nop
jmp
or
xor
inc
adc
pop
and
insb
in
inc
cmpsl
leave
push
arpl
or
push
push
xchg
sub
dec
and
cli
inc
rcll
scas
insl
xchg
movsl
push
jl
faddl
shll
mov
add
lret
sub
rol
out
fldl
adcb
xor
sub
dec
aad
sbb
mov
sti
ds
adc
imul
out
shll
adc
andb
or
jmp
ss
mov
insl
sbb
xchg
in
cmp
lret
imul
xchg
push
sbb
mov
dec
inc
mov
cmp
fstpl
in
jno
ds
stos
xchg
in
insb
inc
cld
fisubs
pop
dec
cmp
lds
inc
push
mov
sbbl
mov
inc
xor
or
dec
xor
sbb
std
ljmp
repnz
cmc
pop
loopne
inc
push
push
jbe
js
lds
mov
cmp
enter
push
pop
outsl
bound
xor
mov
jns
outsl
leave
mov
inc
shl
aaa
mov
adc
repz
out
jae
outsb
outsl
scas
aaa
mov
mov
sub
popa
pop
fcoml
sbb
xchg
sahf
repz
mov
mov
xchg
divl
adc
mov
mov
sub
shll
stos
jae
or
pop
sbb
fidivrl
loope
dec
pusha
push
mov
xor
out
lods
xchg
in
mov
mov
or
cmp
pop
dec
pop
or
or
cmpsl
orb
add
lods
hlt
adc
inc
jbe
xor
mov
add
pop
imul
shr
cmovo
lock
adc
popf
adc
or
sbb
sub
fdivrs
xor
lods
fisttpll
adc
cmpsb
outsb
mov
sbb
aad
movsl
jne
xchg
outsl
rclb
pushf
ljmp
sbb
mov
inc
or
ss
and
gs
cltd
shll
pop
mov
cmp
movsb
test
pop
jns
jle
clc
mov
xor
sti
dec
hlt
ret
xchg
call
fs
sub
sbbl
push
movsb
sub
xor
ds
and
add
pushf
loop
std
cmpsl
inc
adcl
jle
sub
inc
inc
je
lret
and
addr16
imul
sbb
leave
dec
mov
fadds
xor
stc
jge
or
add
sbb
fmuls
leave
push
div
mov
inc
dec
lahf
pop
dec
push
push
insb
aad
inc
mov
scas
outsb
dec
fildl
aas
xchg
mov
sbb
mov
in
lret
pop
push
cmpsb
mov
mov
fsubrs
ss
mov
jp
mov
pop
lods
sub
leave
push
test
cmp
mov
pop
out
js
sbb
mov
mov
test
fldt
ret
lods
pusha
pop
xor
adcb
and
jnp
and
leave
dec
pushf
movsb
test
sub
vpmacsdd
sub
sub
cmc
xchg
mov
push
ret
int3
ss
lock
loope
mov
lcall
loopne
mov
iret
loope
jbe
loopne
mov
mov
aas
je
xor
rclb
pop
add
jmp
in
dec
mov
mov
addr16
cmpsl
ja
jle
push
sub
sub
dec
and
scas
mov
imulb
xchg
stos
aam
jbe
pop
pop
xchg
adc
arpl
test
mov
or
push
xchg
fisttpl
pop
fcomip
out
jg
mov
enter
mov
or
mov
aad
enter
pop
xchg
xor
and
lods
sti
imulb
sub
test
pop
jae
lret
pop
inc
sub
cmp
insl
mov
push
cmp
adc
aam
inc
inc
imull
xorb
das
push
xor
pand
mov
push
dec
add
xor
pop
pop
sub
es
mov
inc
adcb
pop
sub
test
inc
pop
or
mov
rcrb
xchg
xor
in
ret
lods
mov
jo
data16
mov
or
daa
std
dec
dec
xor
les
jno
mov
cld
push
dec
or
rorl
scas
clc
sub
not
notl
loop
jae
and
out
sub
and
jo
or
inc
push
push
test
or
push
xor
add
inc
lret
loope
cmp
cmp
test
and
divb
adc
ljmp
and
dec
test
push
loope
or
loope
jl
xchg
xchg
fwait
call
cvtps2pi
and
mov
dec
push
mov
xchg
add
aad
adc
push
cmp
lret
pop
xchg
jae
rcrb
cld
shrl
mov
and
or
int3
push
test
aam
sarw
fdivrs
sbb
jne
das
push
and
cmpsl
cld
sub
pop
mov
and
and
or
xor
inc
lods
add
pop
cmp
loope
cmpb
insw
sbb
cli
cmp
and
fistl
enter
fnstenv
jl
inc
xlat
pop
sub
push
outsb
push
mov
adc
cmpsb
pop
fistps
pop
pop
sub
mov
jne
insb
add
fsubrp
fildl
in
lock
cmp
lock
ret
add
push
stc
icebp
inc
sub
mov
lock
outsl
push
jno
inc
dec
pop
or
nop
movsb
rcrl
mov
cmp
into
add
sbb
push
push
add
int
gs
pop
adc
pop
inc
mov
xchg
into
addl
cltd
leave
int3
incb
dec
pop
lcall
dec
iret
push
aas
cwtl
pop
scas
movsb
shrb
stos
stos
sar
cs
push
test
in
mov
mov
enter
sub
nop
lods
and
cmp
cmp
mov
and
scas
or
pop
jns
pop
leave
cwtl
call
jge
or
sbb
jne
lret
cmc
aad
xchg
pop
lcall
lods
rcrb
and
cmc
sub
dec
jecxz
pop
add
jle
leave
mov
pop
std
push
mov
pushf
inc
add
out
push
lea
mov
cmp
shll
mov
xor
jg
cwtl
and
popa
sub
mov
push
int
idivl
loopne
inc
adc
cmpl
mov
clc
pop
ds
sbb
inc
jle
pop
int
test
mov
lods
push
cmp
push
gs
and
icebp
jle
icebp
push
pop
sub
leave
fwait
pop
xlat
or
pop
inc
sbb
sub
mov
sub
push
adc
adc
cwtl
mov
fcmove
dec
mov
sub
out
lds
iret
lods
leave
imul
pop
inc
jno
add
int
aad
jg
out
mov
mov
inc
daa
incb
fnstsw
mov
stc
add
repnz
add
vunpcklpd
mov
push
fwait
inc
xchg
dec
mov
sbb
push
sub
push
pop
loopne
dec
cwtl
pop
lcall
push
lea
mov
or
ljmp
xor
mov
mov
in
ss
mov
mov
lods
jecxz
jmp
hlt
in
mov
loopne
arpl
dec
xchg
mov
sbb
mulps
adc
jl
push
jno
imul
mov
mov
inc
xchg
les
xchg
or
bound
fs
jns
fisubl
inc
in
sub
insl
or
in
es
loopne
mov
pop
aas
enter
or
mov
dec
andl
std
ss
sub
or
out
loopne
xor
lret
mov
sbb
das
jle
sbb
mov
stos
ds
sub
pop
mov
cld
mov
jbe
and
xchg
adc
pop
dec
insb
shrb
add
jmp
aas
lds
dec
movsl
cmp
inc
sub
std
pop
and
sub
inc
adc
and
push
js
sarb
and
ret
xchg
sub
cmp
lret
xor
mov
jl
sbb
add
xor
xor
aaa
push
jg
pop
sbb
mov
pop
mov
sarb
ret
inc
pop
cltd
int
repz
andb
mov
lds
xchg
pop
loope
and
push
and
sbb
lock
mov
mov
inc
mov
push
jge
or
mov
in
popa
jmp
adc
xchg
sahf
xchg
daa
or
repnz
push
add
cmpsl
cld
les
inc
gs
dec
or
shlb
adc
mov
popf
lock
dec
or
enter
test
jno
sarl
pop
sahf
scas
test
ficoms
sub
shll
sbb
mov
into
lret
mov
cli
roll
or
mov
add
xor
cmp
addl
pop
xchg
xchg
sbb
fs
adc
add
stc
dec
mov
lds
xor
xlat
mov
cmp
xchg
fists
neg
cld
in
jb
sbb
adc
int
mov
push
cwtl
inc
pop
and
repnz
rcrb
xchg
rcrl
xor
push
add
jns
add
jne
xchg
cld
mov
scas
mov
dec
cmpsl
lahf
pop
jne
cmp
add
dec
std
mov
mov
add
dec
lret
stos
sbb
les
add
out
ret
cmp
sub
outsl
inc
fsubs
jge
add
cli
adc
out
cmp
pop
in
xor
jae
pop
shrb
cmp
mov
jne
call
mov
add
jae
mov
push
std
sbb
fwait
adc
cmp
push
rcll
sti
testl
xchg
mov
dec
mov
repnz
jmp
sbb
iret
dec
mov
fidivrs
mov
iret
jae
dec
out
push
xor
out
sarb
push
hlt
roll
pop
inc
scas
jge
and
icebp
in
inc
sub
lock
dec
xchg
addb
and
or
cmp
pushf
shlb
xchg
stc
in
add
dec
or
out
les
xor
clc
js
imull
cli
add
fcompl
mov
xchg
lahf
sub
nop
mov
pop
aam
aaa
lds
xchg
ret
out
cmc
lods
mov
sahf
lahf
mov
int3
jp
pop
pop
data16
pushf
movsl
jmp
jno
movsl
adc
fcmovnu
inc
dec
leave
sub
push
ljmp
decl
mov
or
rcrl
sub
xchg
ljmp
or
mov
mov
lock
enter
push
pop
lahf
loope
pushf
sub
sti
lds
sahf
adc
sbb
mov
push
and
cmpsl
pop
popf
stc
jns
push
cmp
xor
bound
add
mov
mov
loop
xchg
push
mov
xchg
clc
lea
jno
jb
push
jmp
push
add
jnp
cwtl
mov
push
inc
and
sbb
jmp
cld
dec
stos
lock
or
je
addb
xor
push
lahf
push
mov
and
mov
into
xor
mov
sahf
mov
mov
inc
les
fsubrs
or
push
or
pop
adcl
repz
push
int3
movb
rcr
dec
cmp
stos
fidivl
decl
pop
rep
dec
xor
push
mov
mov
sub
adc
fcompl
pop
sbb
and
mov
popa
fidivrs
cmpsb
jne
xor
push
pop
rcr
lret
jne
cs
xor
push
cwtl
cmp
inc
sarb
xchg
and
mov
add
clc
lea
mul
push
push
xchg
fnstcw
stc
cld
repnz
fistpll
mov
inc
in
pop
xor
mov
mov
inc
popa
sbb
dec
adc
paddsb
mov
jb,pt
xchg
lods
andl
push
mov
out
ret
lcall
hlt
shl
ds
lahf
clc
les
pop
add
addr16
mov
mov
xor
xchg
js
jge
sub
lret
sbb
or
out
lcall
imul
cmpl
mov
push
jo
lcall
or
sbb
ret
std
push
inc
stos
fidivs
aaa
mov
iret
mov
push
jmp
addr16
sub
adc
mov
sbb
cli
xchg
add
sahf
jge
call
xor
cmpsl
or
lds
jle
push
adc
xchg
sbb
dec
int
jmp
cmp
fimull
adc
inc
jmp
xor
mov
adc
bound
addr16
dec
mov
movsb
push
adc
xor
sti
adc
leave
add
aas
push
test
cmp
sti
int3
push
add
cmpsb
int
insb
push
ljmp
inc
inc
lcall
popa
fcomps
popf
xor
inc
or
sbb
cmp
addr16
enter
hlt
ss
xchg
pop
push
or
je
jmp
inc
or
cmpb
mov
popa
adc
aad
lods
lds
lds
sub
aam
dec
out
ret
hlt
int
pop
call
addl
fadds
div
fnstsw
clc
dec
stc
jo
lds
mov
outsl
xchg
lret
inc
sbb
sbb
push
jne
xor
sahf
inc
out
shlw
ret
ret
arpl
mov
imul
xchg
dec
nop
add
xor
or
pop
adc
pop
test
lds
jo
and
adc
test
inc
mov
cmpsl
xchg
jnp
jge
je
sbb
outsl
push
lret
les
imul
rcl
mov
xorb
mov
das
stos
cli
daa
pop
into
dec
shlb
dec
dec
cmpsb
xchg
push
clc
xorl
jns
imul
xor
xchg
sbb
cli
dec
roll
ret
bound
mov
outsb
or
cmpl
mov
adc
std
scas
dec
sub
or
in
inc
dec
xorb
iret
fiadds
mov
int
or
cmp
jg
push
push
xchg
mov
fwait
out
push
xlat
jp
xchg
pop
loop
push
test
dec
popa
jge
arpl
sbb
test
es
pop
pushf
dec
cs
add
rolb
pop
sbb
inc
sahf
stc
sub
push
out
addl
jle
push
or
push
jecxz
dec
out
jo
das
add
jae
je
scas
mov
xlat
adc
repnz
repz
dec
stos
cmp
inc
sbb
fistps
dec
cld
jecxz
aam
add
into
cmp
outsb
xchg
push
and
rolb
mov
sub
jmp
jecxz
inc
outsl
fs
xchg
mov
pop
movsl
mov
lock
sahf
lock
or
insb
pushf
add
js
inc
push
mov
and
aam
push
and
mov
dec
jnp
daa
cs
sti
stos
or
xor
mov
sub
in
fdivrl
dec
push
ss
loop
jno
or
aaa
push
add
clc
or
adc
lea
aam
cmp
enter
inc
icebp
or
insl
lock
ficomps
inc
mov
xor
push
xchg
out
mov
loope
sbb
scas
mov
or
mov
lahf
icebp
mov
cmp
dec
repz
sbb
fwait
push
push
lret
xor
push
repz
push
or
xor
icebp
mov
mov
dec
or
mov
pushf
test
dec
in
daa
jecxz
push
stos
insb
dec
sub
sbbb
sbb
test
xchg
pop
mov
inc
push
cltd
jns
loope
hlt
movsl
jg
ret
lods
xor
inc
jo
data16
push
xor
das
lods
dec
aam
xchg
dec
adc
loop
xor
lods
arpl
icebp
push
jg
or
inc
test
scas
push
int
dec
mov
test
sahf
inc
mov
scas
add
movsb
mov
jmp
sbbl
adc
in
adc
mov
enter
int
insl
cmp
scas
pop
sbb
jbe
push
fwait
jo
nop
fbld
dec
out
test
sub
fcompl
and
dec
mov
sub
stos
fs
mov
mov
aaa
mov
and
mov
push
cmpsl
cmp
mov
sub
add
pusha
aad
lods
xor
test
addl
shrl
mov
repz
push
push
jmp
loope
mov
mov
inc
mov
dec
lods
int
pop
push
push
pop
pop
jmp
test
sbb
dec
jl
mov
jnp,pt
loopne
test
xchg
cmp
enter
adc
push
xor
pop
fstp
xchg
fs
ljmp
out
mov
pop
sub
fcompl
popa
adc
movsb
gs
jecxz
add
repz
scas
xchg
inc
int3
xchg
adc
ret
repnz
xchg
cmp
insb
pop
ficomps
stc
aad
pop
and
aas
pusha
dec
fs
xor
mov
jo
xor
dec
test
sar
insl
mov
test
mov
mov
cmc
mov
into
in
jl
cmc
out
adc
repnz
gs
roll
ret
inc
inc
loop
andl
int3
bnd
stos
mov
mov
push
cmp
xor
ret
xchg
les
in
and
or
jp
daa
and
rclb
xlat
data16
sbb
jae
insl
ret
notl
pop
inc
addr16
and
and
loopne
xor
push
dec
out
ret
lcall
movsb
leave
mov
dec
or
cmpsb
aad
add
pusha
jne
xchg
inc
pop
incb
jne
xor
lods
xor
xchg
mov
mov
daa
sbb
scas
roll
repnz
cltd
inc
lret
inc
dec
push
fiaddl
cmp
std
xchg
outsl
loopne
lds
sbb
sbb
xor
adc
aam
outsb
outsl
test
lock
mov
sbb
xor
mov
cs
dec
push
sbb
or
mov
xlat
int3
ret
mov
mov
das
mov
sbb
scas
push
dec
sbb
cmpsl
xor
inc
pop
sub
sub
inc
dec
xchg
add
mov
dec
push
decl
fisttpll
icebp
add
dec
into
pop
dec
xor
pushf
and
xor
lcall
popf
repz
fisttps
iret
jmp
ds
rcll
cltd
test
and
pop
ss
xchg
inc
lahf
cs
sub
or
nop
jb
mov
push
sbb
cmc
jp
pushf
xor
or
jp
popf
push
jle
mov
mov
and
sbb
repz
movl
imul
jecxz
cmp
gs
fs
dec
hlt
jo
inc
sub
or
scas
xor
fstps
in
cmpsl
cmpsl
incl
add
call
loop
insb
roll
iret
js
mov
xor
xchg
pop
push
dec
stc
dec
stc
insb
rolb
jns
dec
lods
pop
adc
xchg
pop
pop
shlb
es
mov
inc
dec
dec
jbe
dec
jecxz
mov
mov
mov
sub
call
pop
and
cmp
clc
pop
mov
add
mov
frstor
movsl
imul
inc
add
dec
xor
test
pop
mov
mov
cmp
scas
ficoms
hlt
push
insl
ret
xchg
add
lock
or
add
jno
and
sbb
ret
inc
pop
aam
xchg
insb
clc
add
cmp
ljmp
aaa
cmp
push
adc
insl
push
fdivl
data16
scas
pop
sti
ret
stc
cmc
fsts
icebp
push
sub
jns
mov
bnd
xchg
out
push
and
lds
sahf
push
mov
aaa
jmp
pushf
int3
mov
mull
lods
pop
les
jg
mov
adc
ret
xchg
fstps
xlat
in
dec
fnstenv
sarl
pop
int
loopne
and
mov
mov
pop
mov
lock
inc
sbb
or
add
mov
mov
dec
push
cmpl
into
xchg
cmpsb
cs
jecxz
and
jl
add
add
stos
fnstenv
shll
stc
xchg
add
je
push
push
in
pop
out
je
jle
lcall
pop
rcrb
sub
sbb
rcrb
xor
pop
sbb
xchg
cmp
testb
movb
popa
pusha
nop
cli
mov
mov
enter
mov
cwtl
leave
or
inc
push
mov
decl
sub
cltd
je
dec
sbb
push
add
sbb
mov
add
push
add
mov
pop
dec
jnp
push
addr16
lcall
sti
std
repz
add
sahf
push
data16
push
jg
in
xchg
pop
sbb
cmp
mov
xchg
adc
jg
rolb
push
inc
cmp
into
int
dec
dec
xchg
lcall
das
out
or
arpl
loope
pop
out
push
js
fisubl
in
xlat
fstl
inc
mov
xor
mov
pop
insb
mov
sbb
aad
mov
dec
and
out
fs
mov
out
push
add
inc
sbb
adc
icebp
js
lahf
xchg
add
and
int3
pop
les
insb
mov
cmpsb
rolb
push
lock
inc
mov
stos
out
testb
xor
ficoms
dec
lahf
std
fldcw
xchg
jg
xchg
jl
and
icebp
mov
jg
sub
cs
cltd
cld
test
ds
rcr
adc
jecxz
stos
lcall
subb
out
test
aad
movsl
cmp
pop
and
lret
cli
iret
das
divb
jmp
pop
mov
ds
mov
in
in
sar
xchg
dec
out
popf
bound
cli
jnp
dec
push
mov
dec
lock
dec
push
out
xor
adc
in
enter
inc
and
shll
and
xchg
fwait
push
mov
imul
pop
std
mov
or
mov
test
in
push
into
sub
push
push
cmp
fdivr
insl
fdivrs
inc
jnp
ss
add
mov
out
sub
pop
xor
push
insl
lret
jne
xchg
ja
loope
xor
sub
icebp
ds
add
jbe
mov
xlat
loope
cmp
shrl
sahf
in
sahf
dec
outsl
dec
and
inc
xor
mov
nop
fs
mov
lea
dec
pop
xadd
sbb
lods
icebp
sub
shl
push
dec
int3
jnp
les
xchg
push
je
ja
or
xchg
jp
aas
scas
popf
movsb
jl
arpl
cmp
aam
push
mov
in
shll
fmuls
and
pop
and
and
adc
dec
rcrl
or
and
cmpsb
sub
fiaddl
fdivrl
inc
negl
out
mov
popa
inc
subl
repz
dec
cld
sub
je
repz
push
sub
xor
clc
jae
cmp
pop
xlat
xor
xor
sar
jl
fwait
in
lcall
push
filds
cmp
push
inc
test
add
fimuls
sbb
mov
mov
pop
fadds
incb
inc
pushf
fsubp
lock
mov
cld
pusha
inc
gs
test
ret
aad
arpl
push
push
jg
jne
sahf
rclb
je
dec
fbld
push
fidivl
std
gs
cmc
insb
popa
jg
jecxz
aas
push
sub
cltd
dec
add
xor
mov
sub
pop
ret
jns
outsl
in
repnz
and
gs
mov
out
mov
test
xor
imul
hlt
push
add
sub
ss
mov
insl
push
push
mov
fstpl
lcall
xchg
jbe
lcall
dec
push
mov
cmp
push
in
mov
jo
sbb
and
cmpl
push
mov
push
in
fwait
lcall
jns
jp
test
lods
mov
xor
push
inc
mov
ljmp
pop
out
lds
mov
call
scas
mov
movsb
sbbl
xlat
xchg
test
fmul
cmp
int3
les
jl
rorb
mov
mov
push
xor
pop
or
xor
call
mov
pop
cs
decl
int3
inc
in
push
xorl
dec
fstl
cli
xchg
jbe
sub
and
out
dec
jne
notl
mov
sub
mov
cs
cmp
ljmp
pop
xchg
inc
mov
daa
in
lds
js
push
mov
daa
addl
or
fisubrl
negl
popl
ljmp
mov
mov
sahf
or
pop
adc
mov
adc
icebp
fidivs
popa
and
cmp
ds
push
add
dec
xchg
dec
xor
ret
inc
inc
sbb
imul
sbb
sbb
cld
call
fucomip
xlat
mov
out
add
sti
xor
jns
popa
jmp
ss
mov
inc
lods
xchg
jg
sbb
aad
fadds
sub
mov
dec
jae
and
fs
mull
mov
inc
int
daa
cld
int3
and
inc
roll
pop
and
dec
or
add
xor
insl
lea
cmp
cmp
in
inc
lds
ja
push
pop
outsl
fistpll
sbbb
ss
mov
adc
sub
xor
adc
stc
stos
pop
xchg
test
je
std
sbb
insb
inc
mov
mov
lahf
sbb
std
sahf
cltd
inc
push
divb
loopne
insl
mov
jae
jl
lcall
es
int
inc
xchg
and
imul
xor
push
out
adc
mov
mov
push
mov
sub
mov
lock
dec
pop
sub
cwtl
xorb
jle
xchg
test
mov
repz
mov
and
dec
subl
loopne
xchg
ja
mov
into
stc
sbb
push
sbb
adc
lcall
xor
jmp
lods
cs
repz
test
pop
cmp
aas
test
addr16
or
sub
rol
lock
out
dec
rcrb
int
add
cmp
ljmp
leave
out
test
lods
sub
adc
in
fldl
fs
out
dec
mov
divl
out
jbe
cmp
adc
cli
dec
imull
dec
test
sahf
cld
dec
loopne
int3
mov
cmpb
dec
es
insl
sbb
int3
xchg
roll
mov
cmp
repnz
pushf
outsb
decb
lret
push
pushf
rep
push
push
jecxz
xchg
mov
xor
stos
inc
andl
aas
and
in
sbb
or
xchg
rolb
xor
sub
clc
int
pusha
push
mov
sub
mov
sub
push
cs
sbb
outsb
scas
xor
adc
sbb
pop
jnp
into
adc
loopne
aam
imul
inc
sar
lods
xchg
aas
cmp
sti
or
inc
ret
mov
in
xor
aam
scas
and
push
dec
pop
fwait
cli
add
mov
mov
movsb
loope
lea
add
push
pop
xchg
and
loope
mov
shl
inc
cmpsl
pop
push
xchg
xchg
cmc
clc
imul
clc
retw
xor
das
movsl
jns
push
int3
idivl
int3
or
dec
sub
and
call
mov
mov
sbb
in
jne
imul
xchg
xlat
push
pop
xchg
lahf
outsl
inc
aaa
lret
push
mov
notb
insl
xor
jno
imul
inc
insl
cmp
cmp
sbb
mov
clc
jge
add
cli
xchg
jae
mov
fsubl
jmp
popa
int
arpl
inc
pop
cmp
testl
xor
popf
nop
pop
cwtl
dec
sbb
mov
push
cmp
mov
arpl
sahf
std
dec
xchg
out
icebp
outsb
cmpsl
jno
sbb
pop
enter
xor
scas
mov
cmp
xchg
in
popa
cltd
push
xor
sub
push
push
icebp
movsb
or
arpl
dec
inc
ja
cltd
adcb
cmc
dec
fstpl
in
mov
mov
icebp
aaa
xchg
jnp
mov
cltd
jmp
popf
aam
arpl
and
mov
push
sub
in
pop
push
jge
and
movsb
and
sbb
hlt
lods
leave
arpl
cs
inc
adc
stos
test
cmp
cs
sbb
push
ljmp
pop
sub
jecxz
push
sbb
fndisi(8087
aam
inc
fldenv
add
aad
sub
push
jae
sbbb
repnz
adc
pop
mov
hlt
clc
inc
movsb
mov
loop
in
adc
lock
push
pop
stc
fbstp
mov
xor
jae
adc
inc
and
ret
jo
inc
pusha
pushf
js
dec
dec
mov
testl
and
dec
ljmp
insb
arpl
fistpll
ja
cltd
insl
in
movsl
add
xor
pusha
dec
push
daa
xlat
int3
sbb
scas
ds
adc
out
fbld
stos
jecxz
leave
push
js
lcall
push
mov
and
xor
adc
inc
out
into
and
arpl
xchg
cmpb
das
mov
loop
inc
call
push
pop
xchg
test
jnp
inc
dec
loope
leave
data16
sbb
mov
mov
xor
dec
dec
mov
cmc
xchg
jae
dec
test
cs
pop
and
xchg
or
pop
jle,pn
push
in
push
cmp
in
pop
pop
inc
ret
inc
push
fsubl
add
test
add
inc
inc
pusha
or
gs
andb
stos
les
push
adc
mov
bound
add
and
js
mov
gs
xlat
add
call
test
outsl
imul
and
jnp
sbb
int
mov
ss
fisttps
out
cmp
xchg
push
inc
sarb
sub
subb
push
add
adc
mov
fistl
loope
and
pop
and
dec
push
xchg
jge
mov
jmp
adc
es
xor
mov
jp
or
mov
pop
ret
rcrl
out
scas
inc
mov
push
stos
or
xlat
push
cmp
push
adc
mov
iret
xorl
test
dec
sub
sub
push
insl
adc
dec
or
in
jp
call
dec
adc
pop
clc
out
test
loopne
loope
inc
addr16
mov
jmp
mov
in
setge
les
jmp
shll
es
test
mov
add
ljmp
ds
movsl
pop
insb
xchg
and
enter
cmp
and
mov
cmp
lahf
push
notl
sbb
xlat
out
sbb
jbe
fwait
clc
or
dec
insl
and
inc
insb
add
mov
sbb
jg
les
dec
inc
fnsave
lods
out
add
insl
jecxz
pop
xchg
lds
movsl
gs
pop
inc
sbb
cmp
loopne
data16
pop
fld
mov
jmp
movsl
add
aas
clc
loopne
adc
lods
insl
loope
cld
cmp
rolb
inc
jae
jo
add
pop
dec
xchg
mov
sbb
into
add
push
enter
push
out
fidivrl
mov
jge
xor
xchg
lret
movsl
add
pop
sub
inc
push
movsl
mov
mov
insl
jae
int3
dec
je
and
dec
shlb
xchg
adc
push
pop
pop
pop
jge
jo
mov
out
push
lds
jmp
jmp
loop
fstps
outsl
loope
aaa
xor
pop
mov
arpl
imul
jno
in
jo
pop
aas
sub
inc
fnstsw
faddl
push
jge
dec
roll
jl
notl
es
xchg
sub
arpl
mov
mov
push
and
adc
xchg
xor
add
nop
ss
xor
in
fnstenv
or
fs
bound
dec
adc
aaa
daa
lahf
mov
andl
mov
adc
lret
push
daa
jo
and
faddl
popf
pusha
test
and
mov
xor
add
adc
jle
dec
sbb
mov
lock
scas
or
and
or
mov
out
jne
or
mov
pop
loopne
insl
cmpsb
add
js
push
std
int
inc
xchg
push
insb
addr16
pop
mov
stc
call
sbb
sbb
nop
pop
unpckhps
pop
shrl
pop
xlat
xchg
hlt
adc
out
mov
in
popl
out
lds
clc
jmp
lret
mov
xor
or
lret
popa
aam
lcall
sti
das
cmc
xchg
xchg
sub
sbb
scas
pop
sub
roll
jae
push
int
xchg
mov
test
orl
xchg
xlat
xor
push
xchg
outsb
mov
cmp
gs
inc
inc
jo
or
xchg
inc
ljmp
shr
cmp
in
inc
xchg
pop
pop
das
sub
inc
mov
push
hlt
inc
and
sbb
xor
jae
sbb
sub
dec
xor
inc
lock
xor
dec
mov
sub
cld
mov
ret
mov
or
hlt
into
xchg
ucomiss
and
or
repnz
pop
loope
cmpb
fldl
mov
rclb
insl
xlat
jae
push
jo
icebp
pusha
xchg
dec
popf
adc
adc
out
and
mov
pop
repz
add
mov
cmp
out
aam
lret
fbld
mov
ficompl
or
and
sbb
iret
pop
pop
push
out
jecxz
repnz
in
pop
pop
dec
mov
mov
or
test
jl
cmp
lea
push
add
dec
pop
jae
pop
dec
outsb
mov
mov
pop
pop
fwait
mov
iret
sbb
in
dec
jle
mov
dec
sbb
outsl
pop
mov
xor
push
ja
sbb
pop
in
pop
cmc
cs
lea
repz
inc
sub
mov
lods
test
add
adc
ljmp
cmpsb
out
cmpl
insb
xchg
cs
xor
rorl
mov
ret
ljmp
leave
push
mov
pop
test
push
hlt
out
cld
lahf
out
xchg
rorl
xor
mov
mov
addr16
or
push
dec
test
ja
jb
lret
mov
out
push
call
sub
fsts
movsb
jl
loop
das
dec
test
insl
sti
or
addr16
fbld
lods
mov
insb
xlat
cld
mov
ja
iret
aad
insl
unpcklps
inc
cltd
int3
jne
jo
out
data16
mov
imul
loopne
adc
pop
das
fiadds
pop
push
xchg
mov
push
mov
scas
and
push
xor
out
xchg
jmp
add
je
pop
aas
dec
jbe
jmp
orb
repz
popf
fwait
bound
aaa
mov
ds
push
dec
clc
sbb
add
jmp
xor
pop
lahf
or
in
jge
xor
dec
fsubrs
mov
rorb
add
inc
jmp
pop
call
sub
repnz
test
inc
sub
loopne
lods
testl
add
push
inc
ficomps
out
dec
out
icebp
dec
cmp
repnz
cmc
adc
xchg
test
cmc
dec
fdivrl
pop
cmp
jp
adc
sub
xor
adc
add
pop
xor
mov
push
lretw
pop
cmp
mov
add
lret
push
aas
cmpsb
xchg
and
inc
push
xchg
mov
rclb
repz
sbb
stc
jo
add
mov
out
push
fmull
pop
dec
data16
test
bound
mov
negb
push
dec
cmp
cmp
repnz
insb
es
xor
jp
jnp
call
sti
subl
negl
pop
clc
push
idivb
outsb
dec
mov
js
loopne
out
pushf
cmp
cltd
scas
ljmp
cmp
sbb
sub
shll
pop
sub
mov
ret
cs
jge
mov
ds
sub
jge
ret
jns
xorl
insl
pop
in
mov
xchg
movsb
lcall
add
mov
push
out
cld
out
test
bound
jae
jb
popa
cmp
out
jmp
push
rcll
jmp
push
fistps
jae
dec
enter
js
loopne
test
and
mov
push
cmp
les
scas
cmp
mov
lea
shlb
dec
mov
aaa
inc
push
andb
inc
in
push
push
sub
xchg
lds
inc
sub
pop
xchg
in
add
sub
dec
mov
std
int
xchg
sbb
lret
cmp
and
push
or
shrb
fisubrs
out
andb
pop
sbb
pop
pop
call
cli
daa
cmp
adc
negb
adc
js
dec
cli
loopne
inc
inc
lock
adc
js
shll
jp
inc
daa
gs
pop
shr
fidivrl
dec
add
ja
mov
add
mov
cmp
jl
push
sti
or
inc
pop
imul
mov
mov
and
sbb
sub
ficompl
sub
or
mov
adc
xor
movb
push
mov
popa
repz
ljmp
inc
jecxz
push
pop
adc
dec
sub
ljmp
push
fidivl
inc
leave
jmp
ljmp
sub
mov
pop
shll
and
and
mov
pop
jecxz
mov
mov
fsubrl
pop
ret
sbb
shr
leave
push
sbb
stc
imul
hlt
pop
adc
push
imul
std
mov
inc
out
arpl
dec
cld
push
inc
nop
cmpsb
pusha
dec
mov
or
cmp
or
cli
neg
dec
adc
ljmp
add
cld
lahf
xlat
cmp
ret
pop
cmp
adcb
mov
test
adc
xlat
aas
pop
lret
cmpsl
xor
cli
inc
dec
jmp
adc
loopne,pn
imul
scas
rcll
outsl
aaa
dec
push
aad
fstl
jbe
push
sub
xchg
fstps
imul
scas
sar
clc
sub
xchg
jecxz
fstl
adc
loop
lret
dec
dec
mov
lods
je
ja,pt
jno
out
xchg
xchg
mov
push
fwait
push
ret
adc
cmpl
sub
cmc
in
or
pop
fistpl
pop
sbb
ficoms
scas
pop
adc
inc
shll
pop
enter
lea
or
iret
rclb
jge
push
imul
push
sub
jb
rcll
mov
stc
mov
sti
je
imul
xchg
or
cld
sub
rorb
daa
aad
xor
mov
fldcw
stc
sub
mov
dec
outsb
cmc
stc
leave
jno
dec
addl
lods
into
fcoml
adc
addr16
fstps
add
cmc
cmp
fcomp
mov
or
dec
sbb
dec
dec
cmpsl
inc
out
pop
push
mov
xor
leave
add
jle
int
jg
movsl
nop
push
add
daa
aad
add
jb
lahf
rclb
xlat
hlt
pop
add
ljmp
push
dec
or
or
adc
jb
imul
dec
xchg
xchg
xchg
popa
xor
outsb
and
addr16
jo
das
pop
pop
sbb
aas
sbb
jl
push
mov
frstor
pop
in
sarl
leave
incb
les
xchg
xor
sub
or
hlt
mov
adc
std
jl
mov
fptan
dec
ljmp
mov
or
push
xlat
mov
mov
insb
cltd
ljmp
aaa
or
adcb
jbe
pop
jnp
or
jae
jmp
fcomp
sahf
repnz
enter
ss
pop
cmp
or
mov
or
out
mov
cld
addr16
add
sub
pop
scas
aad
std
data16
mov
lahf
in
xchg
mov
push
inc
aaa
gs
inc
cmc
jb
jno
in
mov
out
mov
dec
repnz
fwait
imul
and
push
lea
lcall
pop
fldcw
sub
cmp
mov
sub
imul
push
lret
movsl
mov
imul
repz
adc
sbbb
xor
cwtl
in
jmp
sub
insl
insl
cmp
dec
push
jne
icebp
gs
sub
cmp
arpl
push
and
jp
clc
psrlq
daa
inc
mov
mov
cmpsb
or
ficoms
or
adc
insb
ljmp
pop
cli
jae
lds
insb
fstps
sti
fisubs
addr16
push
out
sbb
lcall
mov
jmp
and
push
adc
loope
add
aaa
sbb
mov
stc
movsl
xor
aas
hlt
or
sbb
fsubp
movsl
pusha
add
cmc
sub
lret
loopne
js
sarb
cltd
test
mov
lods
add
pop
movl
xchg
mov
mov
xchg
mov
pop
mov
shlb
mov
js
pop
mov
and
push
cmp
insl
xor
xor
shll
or
test
je
cmp
sti
rcrl
shrb
movsb
adc
les
hlt
mov
rcrl
xchg
inc
in
push
mov
lcall
jb
pop
cld
xor
cmp
adc
int
sbb
insl
les
sahf
cltd
cmc
out
push
xor
iret
addr16
sbb
cli
shlb
mov
pop
das
cmp
stos
loopne
mov
xor
dec
mov
inc
inc
or
fcomi
xor
shll
sub
mov
aaa
add
ret
jns
call
xor
sub
jg,pn
out
in
sbb
xchg
faddl
jmp
inc
add
mov
inc
ss
jo
notb
mov
iret
out
jns
int
inc
imul
jo
mov
xchg
je
outsl
popf
clc
movsl
xor
lea
xor
xchg
push
lret
pop
imul
cmc
mov
cwtl
add
jno
add
push
imul
lahf
xor
mov
jp
pop
in
or
rorl
mov
adc
sub
push
adc
sti
test
cmp
das
ljmp
xlat
adc
ret
mov
roll
bound
cmp
les
cmp
pop
sbb
fsubl
push
fwait
dec
adc
cwtl
adc
jge
xchg
push
jle
outsl
test
test
dec
shrl
mov
jmp
push
lret
mov
lods
fimull
and
push
mov
shll
enter
fnstsw
insb
movntps
mov
mov
sub
lret
cmpsl
or
cs
sbb
jne
pop
push
dec
xor
pop
add
sub
or
imul
mov
push
aam
sbb
dec
mov
ret
lea
add
test
addb
mov
int
pop
or
inc
adc
cmpsb
and
jnp
cmp
pushl
xchg
and
es
push
sub
je
mov
push
cli
inc
stos
dec
sub
repnz
cmc
outsl
or
movsl
fdivs
xor
mov
ja
divl
pusha
daa
pop
mov
pop
sub
stc
sti
push
and
inc
jle
or
pop
sub
jmp
mov
mov
cmp
mov
push
outsb
or
or
imul
insl
xchg
fs
frstor
and
fisttpl
divb
lcall
shrl
cmc
scas
cmpsb
adc
out
imul
xor
sbb
sub
cmp
jmp
mov
cmc
adc
adcl
jno
ljmp
mov
push
cmp
lea
sbb
scas
mov
sub
add
ja
mov
iret
loop
add
repz
mov
jg
aas
rcll
lock
xchg
lahf
inc
adc
mov
mov
cmp
add
xor
sarl
rclb
xchg
dec
lea
imul
test
fwait
gs
popa
lods
aad
aam
scas
jge
mov
push
mov
mov
xchg
iret
push
insl
sbb
lods
jmp
icebp
idivb
popf
and
nop
leave
adc
xchg
sbb
js
mov
lcall
inc
sub
add
iret
dec
int
and
inc
push
pop
sbb
aas
insb
jo
lock
add
adc
pop
iret
bound
cmp
pop
pop
sub
xlat
push
mov
loope
sahf
mov
sbb
frstor
scas
clc
stos
lea
aad
sbb
filds
xchg
pop
dec
or
push
aas
sub
stos
inc
push
cmpsl
std
and
xchg
sarl
lcall
adc
xchg
aas
jl
int3
lahf
cmpsl
xor
cld
inc
mov
add
addr16
push
in
sbb
or
cli
imul
pop
mov
fs
pop
loop
xchg
nop
cmpsb
adc
fidivrs
in
inc
dec
int
into
jbe
or
inc
xor
rcrb
mov
cmc
loope
mov
inc
stos
add
addb
xor
xor
dec
and
jmp
jmp
popa
repz
lea
arpl
jb
sahf
cmpsb
not
cmpsl
mov
lret
into
out
cmp
push
je
mov
stc
sarl
lods
popf
mov
dec
out
sbb
adc
sub
adc
dec
imul
push
sahf
cmp
mov
rcll
mov
pop
shlb
adc
shll
test
mov
jno
fnstcw
adc
mov
hlt
out
sub
mov
jae
into
and
pushf
scas
insb
inc
sub
sahf
fcoms
sarb
movsl
push
loop
mov
cmp
es
cmpsl
js
pop
ljmp
cli
add
mov
cmp
cmp
mov
stos
fs
ss
pop
mov
inc
and
repz
mov
call
jns
mov
fs
sbb
mov
push
cmp
and
fucomp
fs
test
xor
cmp
xor
cmp
and
lret
outsb
addr16
pusha
xor
mov
push
xchg
test
hlt
push
sub
leave
and
mov
icebp
rcr
push
jecxz
mov
in
push
sub
mov
int3
ret
int
dec
jbe
jmp
push
nop
cli
mov
out
adc
mov
repz
push
push
push
loope
dec
je
mov
sub
cmovl
arpl
ds
test
pushf
xor
adcb
mov
movsb
pop
jnp
ret
cltd
adc
mov
push
or
pop
pushf
xor
and
insl
arpl
mov
stos
push
aam
push
ret
pushf
fwait
cwtl
add
gs
sub
cld
push
adc
cmp
fnstcw
stc
add
jge
add
mov
or
pop
dec
scas
inc
loope
pop
inc
inc
subb
mov
test
aad
arpl
mov
dec
mov
int
out
cmp
arpl
and
push
clc
lock
mov
sub
mov
pop
in
nop
sbb
pushf
inc
nop
dec
jg
pop
inc
lret
mov
fsubr
arpl
xchg
sub
sahf
push
sub
fiaddl
inc
fmuls
pop
lahf
call
lret
inc
mov
cmc
xchg
test
lahf
jae
sub
dec
out
adc
push
sub
cmpsb
jl
dec
push
data16
loope
inc
cmp
cmp
sarl
outsl
stos
adc
xchg
push
xor
scas
dec
inc
xchg
mov
dec
mov
in
sbb
movsb
push
out
dec
and
lcall
jg
dec
imul
or
out
push
mov
es
mov
popa
push
push
add
cmc
arpl
mov
movsl
ja
aas
sbb
dec
cmpsb
sub
add
and
popf
xchg
dec
push
xor
and
imul
ret
mov
clc
roll
xor
out
lcall
dec
mov
cs
or
lret
fsubrs
mov
ret
addr16
xchg
cld
jb
shrl
xor
xor
jg
sbb
fcomi
mov
jbe
stc
sbb
or
add
mov
outsb
sub
ja
inc
icebp
dec
inc
push
xchg
add
add
ror
push
xchg
pop
ss
push
pop
int3
clc
test
mov
ret
xchg
mov
lret
stc
pop
testb
or
xchg
sbb
cmp
sbb
mov
pop
ja
jno
sbb
inc
mov
aaa
jmp
adc
out
mov
add
jmp
cltd
dec
mov
push
xor
mov
fadds
sbb
movsl
sub
push
mov
cmp
js
subb
into
sub
sahf
push
popa
xor
jl
lret
sub
push
add
sbb
cmpsl
dec
fcoms
loop
jecxz
mov
mov
aaa
sub
insb
adc
adc
rol
mov
ficoms
popa
dec
test
cld
daa
std
xchg
mov
push
cmp
sbb
jge
enter
adc
dec
mov
dec
mov
out
mov
jecxz
ja
inc
out
mov
imul
cmp
jnp
fbld
outsb
push
dec
data16
cmp
jp
in
repz
cmp
add
sub
cmpsb
stos
sti
and
cld
pop
cmpsb
rclb
jp
inc
sbb
nop
cs
cmpsb
inc
mov
mov
jbe
rcrb
sub
cmpl
xlat
adc
dec
pop
lods
xchg
xchg
lods
dec
into
loopne
dec
jmp
jne
gs
cli
sahf
or
push
dec
fstps
mov
cmp
jnp
mov
dec
mov
pop
xchg
pop
in
sub
pop
lcall
mov
xchg
mov
fdivr
dec
or
inc
sub
xchg
add
and
mov
or
mov
add
mov
imul
aas
jns
sub
cltd
icebp
inc
in
adc
shl
add
popf
mov
data16
imul
iret
cmp
pop
insb
ja
jl
jle
mov
xlat
sahf
inc
repz
std
sub
je
aas
mov
test
dec
dec
sub
neg
mov
adc
xor
arpl
cltd
mov
mov
mov
sub
hlt
pop
ret
push
arpl
addps
sbbb
mov
int
insb
sub
pop
lock
cli
and
or
rol
mov
pop
mov
push
out
gs
sbb
mov
add
ljmp
cmp
sbb
aaa
inc
std
cmp
mov
cmp
mov
sti
xchg
ds
shll
xorb
jb
icebp
in
and
xlat
test
and
adc
mov
ss
std
and
pop
in
sbb
sub
push
in
push
inc
das
cmp
addr16
popf
cmp
mov
push
loopne
mov
inc
in
daa
push
lods
cmp
inc
in
xchg
sbb
mov
xchg
xchg
je
mov
fnstcw
maskmovq
adc
hlt
imul
cmp
shrb
pop
out
push
inc
rolb
lods
pop
add
pusha
xor
push
lods
mov
dec
add
jge
out
insl
shrb
pop
pusha
out
data16
loopne
adc
out
cli
stos
dec
fwait
push
stos
mov
in
adc
nop
xlat
cmp
cwtl
push
leave
ret
mov
dec
inc
push
bound
pop
stc
add
loopne
test
pop
lret
sbb
sti
or
mov
scas
push
sub
add
out
rol
xchg
xor
or
loope
pop
pop
sbb
push
jae
dec
mov
outsl
fbld
lods
jl
fdivs
scas
lock
sub
mov
pop
cwtl
fistl
addr16
enter
mov
mov
gs
mov
inc
arpl
push
push
ror
or
pop
mov
xor
imul
mov
cmp
mov
pop
and
pop
fmull
jb
inc
fmull
cmp
jo
dec
movsb
das
mov
cs
inc
lret
push
sub
test
add
or
aas
int3
add
and
imul
in
je
aad
mov
or
lock
out
das
mov
push
push
outsl
enter
add
in
cli
out
inc
adc
lahf
pop
sahf
dec
fucom
push
mov
add
pop
lret
xor
add
lods
callw
xor
int3
icebp
pop
or
pusha
cmp
out
dec
lcall
xchg
loop
xor
add
test
add
inc
xor
adc
test
xchg
cwtl
popf
ficomps
roll
imull
mov
sahf
xchg
loope
aaa
jg
std
or
je
imul
jne
in
stos
aaa
fwait
sub
mov
inc
das
inc
sbb
jl
fldl
fnsave
rolb
push
scas
cmp
mov
test
mov
in
std
fcoml
push
jae
lds
out
jmp
call
add
mov
cmpsl
out
jno
push
pop
lock
ret
in
mov
lcall
sub
or
fadds
cmpsb
xor
push
js
xor
arpl
cmp
jae
jge
or
hlt
cmp
sbb
sbb
cmpsl
movsb
xchg
fsubs
jo
add
xorb
lahf
fildll
add
orl
pop
mov
pop
pop
pop
inc
fdiv
lahf
aad
dec
xor
pop
push
mov
in
mov
mov
in
aad
dec
jbe
and
mov
jbe
cmc
adc
xchg
add
pop
or
rol
test
and
popa
mov
mov
pop
adc
xchg
mov
xchg
sub
jle
loope
movsl
mov
pop
sti
ret
push
push
sbb
jns
lret
enter
add
mov
mov
fisubl
sbb
xor
push
imul
inc
ljmp
stc
xchg
mov
jne
mov
out
addl
sub
pop
lea
push
repnz
icebp
jbe
jge
sbb
adc
test
lods
mov
push
or
je
jbe
xorl
cmp
push
lret
dec
jecxz
idiv
pop
xchg
sub
pop
inc
push
cltd
cltd
insb
sbb
test
mov
or
pop
shrb
test
pop
iret
test
imul
mov
and
mov
push
cli
hlt
into
test
daa
dec
push
repnz
imul
fsub
push
pusha
js
icebp
arpl
push
jmp
inc
mov
rorl
ds
pop
lret
and
xor
xchg
adc
adc
and
stc
and
push
mov
mov
adc
adc
fs
and
cli
out
nop
xor
cmc
mov
lret
or
inc
jg
lea
aam
push
mov
pop
sub
pop
sarl
inc
inc
cmp
lcall
pusha
mov
push
cmpsb
inc
lahf
frstor
add
outsb
pop
sahf
jae
sbb
xchg
rcr
push
jmp
mov
xchg
jg
aad
test
push
into
je
pop
mov
daa
out
lea
xchg
dec
pop
out
mov
mov
jge
cmpl
loop
insl
or
sti
aad
gs
int3
loopne
jmp
loop
push
jae
rclb
push
and
in
fnsave
leave
mov
dec
ret
nop
jb
cmpsb
cmp
mov
outsb
fxch
and
movsl
loopne
cmpsl
mov
out
xchg
into
or
pop
popf
pop
pop
xor
popl
mov
mov
cltd
cld
mov
movl
mov
jo
leave
loope
js
pop
or
fidivs
jecxz
mov
loope
add
in
sahf
les
sbb
push
push
mov
mov
leave
jl
dec
push
mov
leave
push
jmp
lds
jg
push
call
xchg
pop
sbb
push
lods
repnz
push
mov
ss
sbb
loop
icebp
js
out
into
jmp
cmp
insb
or
push
pop
xchg
in
cmp
mov
repz
push
dec
or
leave
rorl
jl
orl
mov
in
rcll
cwtl
dec
leave
xor
aad
fsubp
int
cmc
push
jne
xchg
repz
lods
xor
js
insl
jecxz
push
popa
cmpsl
addr16
push
sbb
mov
addb
sub
sbb
mov
xchg
mov
les
cld
out
dec
jae
jne
push
repnz
ret
or
repz
adc
stc
push
add
testb
mov
enter
cld
push
dec
inc
adc
sub
push
mov
jno
adcb
xor
sub
clc
mov
inc
fcomps
xor
or
push
xchg
or
and
push
xor
pop
lods
push
and
std
pop
outsb
addb
movsb
clc
dec
lods
sub
mov
rolb
int
fnstenv
ja
lea
dec
lret
cs
das
sbb
inc
dec
ret
sbb
and
hlt
push
and
xchg
add
push
xchg
in
les
mov
sub
pop
xchg
sub
pop
xchg
gs
out
xor
inc
cs
shlb
xor
jb
mov
bound
cmp
ja
pop
loop
aaa
int3
stc
jae
je
sbb
arpl
std
cmp
je
subl
ret
push
test
shll
xor
shl
cmpsl
xchg
ss
lcall
sbb
ret
mov
aas
lds
push
jno
test
mov
and
cs
add
fwait
and
mov
mov
leave
jge
and
or
outsl
je
mov
iret
popa
cmp
pop
sbb
and
ret
sub
adc
dec
dec
mov
enter
cmp
lret
push
insl
shrb
inc
mov
lods
stos
inc
jge
sub
inc
ss
pop
mov
mov
sub
daa
jmp
nop
inc
xchg
xchg
mov
adc
jl
push
xchg
out
sti
cmpsl
scas
int
out
subl
and
loop
pop
fimuls
dec
arpl
mov
outsl
cs
mov
inc
push
and
mov
pop
adc
and
test
insl
scas
imul
or
into
sbb
dec
mov
outsl
rcrl
or
pop
xchg
jo
xor
dec
cs
stos
lock
fcompl
int
dec
lret
mov
stos
bound
dec
nop
or
nop
xor
or
push
inc
or
or
push
pop
negl
call
sahf
repnz
add
arpl
inc
scas
push
xchg
sub
mov
call
ss
pop
pop
mov
and
jns
pop
inc
shl
sub
jae
ret
imul
in
xor
das
in
xor
sbb
mov
in
addr16
mov
inc
vmread
pop
mov
sub
imul
pop
push
inc
sbb
add
inc
adcb
jbe
test
iret
mov
cmp
js
mov
jcxz
stc
in
xchg
dec
pushf
and
cmp
adc
mov
xorl
gs
mov
jo
sti
and
xor
push
std
in
popl
arpl
mov
test
sbb
push
pusha
mov
lock
mov
lds
daa
mov
insl
inc
jg
daa
mov
dec
test
mov
push
shrl
out
cld
fiadds
pop
add
inc
pop
xchg
push
roll
mov
xchg
gs
aaa
add
and
jns
mov
mov
jle
push
dec
jg
xchg
fdivs
jge
push
jge
mov
xor
or
into
cli
lock
aas
test
sar
xor
int
jb
lods
add
dec
push
cmp
imulb
fs
adc
ret
and
lock
jo
inc
sub
cwtl
add
add
cld
aam
jae
cld
rorb
mov
out
dec
outsl
jo
inc
sbb
ror
roll
and
push
sub
mov
test
loopne
iret
mov
xchg
loop
stos
pop
cli
pop
das
aas
or
insl
push
mov
bound
sub
dec
dec
mov
mov
jo
xor
shlb
add
push
adc
inc
mov
out
mov
pop
insl
cmpsb
xor
xor
and
adc
addr16
mov
sub
pop
mov
mov
into
add
sbb
inc
pop
leave
test
lret
insl
jge,pn
shrl
sub
mov
sub
xchg
add
xchg
aaa
and
xchg
or
loope
lcall
ret
jl
pop
imull
or
push
pop
jl
pop
sbb
scas
jo
push
les
fisttpl
cmpsl
fildll
cmp
cld
pop
adc
inc
and
mov
push
cwtl
inc
mov
inc
pusha
inc
ret
xor
fisubs
mov
pop
aaa
dec
sub
dec
push
lea
mov
cltd
xchg
jge
jp
es
fidivrs
add
out
xor
push
pop
and
aas
mov
addl
fisttps
sub
lcall
std
pop
imul
or
insl
mov
dec
push
aas
sahf
ficoml
gs
jp
insl
ds
lret
xlat
adc
sub
test
pushf
mov
pusha
sbb
mov
in
pushf
movsb
cmp
adc
jno
sbb
orb
icebp
dec
call
aam
outsb
inc
cmp
loope
repnz
add
inc
mov
dec
ss
dec
sbb
setp
ror
out
movsl
ret
sub
lea
fdivl
in
stos
mov
mov
addl
xlat
inc
enter
mov
mov
loope
mov
mov
nop
dec
dec
loope
and
sub
xor
dec
ds
rcrb
lahf
xchg
mov
mov
and
pop
push
mov
push
shlb
push
rol
sbbl
push
adc
push
and
mov
inc
add
xchg
push
and
cmp
lret
mov
sbb
addr16
sbb
add
mov
mov
popf
out
les
orl
push
pop
es
mov
mov
push
pop
dec
movsb
pop
mov
lcall
aas
cmc
cmpsb
pop
jg
mov
jge
jbe
inc
pusha
cld
in
pop
jbe
mov
and
fistpl
push
cld
xchg
fistps
decb
fwait
aas
imul
popa
sub
adc
bound
adc
iret
or
mov
jb
pop
insl
add
inc
fcoms
mov
call
xchg
out
cmp
or
mul
loop
and
sub
std
les
cmp
xchg
jns
clc
dec
mov
sub
mov
dec
out
rolb
or
push
fcom
dec
adcb
dec
aaa
test
fwait
hlt
mov
loopne
cmp
pop
mov
add
inc
mov
clc
inc
mov
inc
hlt
inc
mov
jne
mov
inc
scas
or
sub
inc
lret
add
jp
test
dec
ret
test
mov
sub
mov
inc
jae
xor
in
inc
mov
gs
and
sbb
aas
movsl
repnz
das
add
out
push
sbb
int
push
stos
outsb
addr16
and
stc
test
cmp
out
pop
jno
dec
test
inc
clc
ja
out
xchg
lcall
sbb
ja
popf
fldcw
cwtl
dec
aaa
or
xor
mov
mov
add
inc
fwait
insb
movsb
mov
testl
mov
stc
dec
jnp
lea
pop
enter
fisubl
loop
ja
xor
hlt
and
xchg
popf
cld
jnp
push
jl
insb
xor
mov
fimull
ret
mov
lock
sub
push
insl
lods
cli
mov
jb
repnz
jp
sbb
fadds
dec
cmp
adc
leave
inc
rcrl
out
lods
test
out
shlb
mov
imul
adc
mov
dec
pop
daa
lock
cli
das
pop
add
inc
push
fdivs
popa
cwtl
fldenv
movsl
and
inc
mov
into
add
subl
xchg
jns
call
mov
xchg
rcrl
in
inc
mov
call
inc
or
sti
outsb
repz
dec
cld
leave
adc
jbe
out
imul
pop
fs
into
mov
add
adc
jecxz
jns
lret
mov
sub
mov
push
xor
fcomip
inc
lods
popf
xor
in
pop
jp
out
rcrl
aad
add
push
push
repnz
xor
adc
sub
subb
cwtl
insl
test
sub
pushl
jecxz
lcall
outsl
lahf
icebp
jae
cmp
jmp
cmp
stos
test
or
je
sub
loope
pop
dec
cmp
push
adc
fdivrs
insb
and
and
and
sbb
mov
daa
and
addb
cli
add
repz
scas
mov
mov
push
into
cmp
cmpb
pop
fistl
sbb
dec
lods
add
jle
gs
mov
mov
or
or
push
inc
das
out
mov
scas
cmp
incb
out
scas
int3
sub
in
jge
ss
shl
pop
out
outsb
iret
loop
mov
push
ljmp
in
dec
fisttps
cmp
mov
into
pushf
xor
jle
stc
jmp
push
jne
mov
test
bswap
mov
xchg
dec
jb
clc
push
loope
sbb
dec
lret
jae
mov
out
shrb
sarb
outsb
mov
pop
mov
clc
cli
mov
add
sub
aaa
fdivp
mov
push
xor
push
les
test
lea
sub
adc
mov
fwait
into
js
pop
add
nop
lods
jl
add
mov
jo
and
fdivs
mov
fsubrl
jbe
shlb
imul
lret
jg
and
pusha
repnz
push
xor
cmpsb
leave
popf
sub
sbb
pushf
nop
leave
das
insl
cltd
in
push
sahf
orb
mov
mov
fsub
into
push
ficompl
les
or
xor
out
fwait
popa
in
dec
std
adc
dec
mov
dec
iret
sbb
popf
js
test
fwait
xchg
xchg
insl
jmp
pop
xchg
lods
addb
inc
add
mov
dec
cmp
mov
sbb
push
ja
lahf
xchg
adc
pushf
pop
and
sbb
out
fiaddl
mov
jp
popf
sub
jg
clc
push
cwtl
jp
sub
pop
and
shl
sbb
stos
lahf
and
in
test
mov
mov
fistl
mov
flds
int3
ja
push
adc
pop
jbe
popa
movsb
mov
cmp
mov
sub
mov
sbb
jne
lods
push
fxtract
subl
and
shrl
shlb
push
dec
ja
adc
iret
mov
mov
roll
push
arpl
out
testl
dec
sbb
mov
inc
pop
pop
imul
sbb
int
pop
outsb
fmuls
pop
or
pop
cmp
repz
ds
jp
pop
sub
std
mov
into
sarl
or
cmp
das
pop
andl
out
inc
adc
ret
sbb
pop
mov
cmp
or
daa
lret
fsubrp
pusha
pop
popa
dec
push
ja
mov
mov
adc
negb
shrl
adc
mov
negb
sbb
fcomps
mov
repz
adc
bound
imul
or
mov
adc
ljmp
add
xchg
jbe
rolb
stc
imul
lods
fdivs
inc
sbb
or
test
fiadds
add
push
pop
push
inc
sub
mov
stos
dec
pop
jg
push
mov
js
push
aas
or
cmp
jecxz
xor
je
rcrb
push
push
mov
ljmp
push
repz
icebp
and
sub
pusha
shrl
push
mov
or
data16
inc
repz
ljmp
adc
popa
adc
lcall
stos
outsb
idiv
mov
push
adc
loopne
movsl
pop
mov
jmp
inc
add
clc
pop
push
hlt
pusha
dec
mov
cmpsb
sbb
inc
adc
outsl
xchg
jo
shll
dec
fcmovb
out
aaa
jo
sub
into
push
ret
test
fxch
data16
sub
mov
sub
stos
out
push
xor
add
enter
fcompl
xlat
xchg
xchg
mov
pop
sbb
add
mov
inc
push
xchg
lcall
movsl
in
mov
mov
ret
dec
js
adc
jo
cltd
es
sti
xor
pop
js
sbb
mov
and
shll
add
push
fcmovne
pushl
loopne
push
scas
inc
inc
pop
ss
and
scas
mov
or
outsb
addr16
orb
jno
xchg
ss
jne
std
pop
hlt
dec
push
jg
sub
inc
jb
push
sub
adc
shlb
ficompl
shrl
xchg
and
scas
imul
sbb
push
test
ja
and
int
pop
mov
incb
mov
leave
cwtl
add
jno
jge
arpl
mov
xchg
pop
fidivrs
pusha
dec
cltd
sub
cmp
cmp
sbb
and
mov
ficoms
les
sahf
fsubr
test
scas
mov
cs
fnstcw
scas
xchg
adc
ljmp
add
cmp
push
in
sbb
push
stos
loopne
sub
push
dec
movsl
cs
shrl
andb
push
jbe
test
js
inc
mov
fs
movsl
test
clc
arpl
or
das
out
mov
repz
sub
movsb
roll
fwait
dec
repz
hlt
das
xchg
inc
hlt
xchg
pop
or
pop
push
push
adc
sbb
push
dec
jne
jmp
shl
outsb
imul
loopne
mov
loope
pop
daa
mov
cmc
xchg
rolb
jle
jns
fnsave
mov
in
xchg
xor
iret
xchg
je
add
adc
push
push
mov
xchg
mov
movsb
nop
mov
call
jl
neg
faddp
cmpsl
jns
aaa
or
fstl
dec
jg
inc
mov
and
mov
xor
pushf
adc
arpl
jo
call
lret
jl
outsl
mov
jns
pop
mov
jb
pushf
cmp
out
mov
pop
pop
cltd
data16
out
dec
nop
aad
out
in
xor
out
lods
jmp
mov
cltd
and
inc
in
cmpsl
lds
jp
loop
mov
enter
insl
dec
pop
xchg
inc
wrmsr
inc
cltd
cli
das
imul
bound
and
movntq
mov
ljmp
mov
jg
imull
xchg
mov
repz
nop
loop
xchg
stc
sbb
in
mov
cli
xchg
gs
sar
sahf
mov
fldl
lock
loope
shrl
aas
push
data16
imul
dec
insl
inc
aam
pop
inc
jbe
push
out
cld
cmp
push
fstpl
pop
enter
pop
push
in
ret
or
xor
stc
cmp
xor
xchg
xor
lea
pop
mov
and
jge
fcmovnbe
lcall
outsl
mov
ja
xlat
shlb
sub
cs
or
loop
mov
sub
adc
rcrb
imul
cltd
arpl
sub
fisubrl
pop
sbb
inc
adc
mov
mov
pop
je
sbb
mov
lea
aas
inc
test
mov
je
mov
fildl
jnp
int3
je
cmpsb
sbb
cmp
dec
cmpsb
dec
fisubrl
in
sbb
stc
mov
ljmp
sbb
movlps
test
bound
cmp
sub
imul
mov
dec
cmpsb
mov
fwait
andl
int
shlb
xor
cmp
es
mov
outsb
outsb
imul
mov
subb
je
cmp
inc
sub
fwait
adc
dec
sbb
mov
jae
int3
cmp
pop
mov
rcll
fs
movsl
jno
cmp
hlt
sub
hlt
lret
mov
and
cmp
adc
sbb
xchg
mov
sbb
dec
ljmp
aaa
mov
mov
clc
and
mull
add
mov
stc
lcall
jae
inc
test
mov
bound
std
pop
js
inc
imul
imull
test
xor
add
sbb
shll
fxch
cmp
xor
and
add
xlat
js
or
sub
mov
mov
sahf
aas
mov
push
inc
popa
and
aam
out
mov
or
jae
out
das
sbb
mov
ds
lods
and
jns
mov
xchg
test
loop
icebp
popa
xchg
sbb
cmp
push
xchg
mov
cli
fsubrs
pop
pop
jp
mov
movsl
lret
stc
movsb
aam
js
test
adc
aas
jae
lcall
dec
jno
clc
lock
add
push
mov
mulb
push
addr16
leave
bound
enter
add
adc
inc
xor
mov
fsubl
nop
mov
into
addr16
xchg
shlb
cmp
mov
cmp
mov
or
push
jbe
sub
mov
cld
adc
inc
mov
inc
inc
cltd
popf
jb
cmc
push
int
leave
jnp
lock
mov
outsl
sub
aaa
out
fmull
lcall
ret
add
mov
mov
add
testl
test
shll
imul
call
repnz
pop
mov
add
dec
lahf
adc
ja
fucomi
daa
repz
adc
sbb
aaa
loopne
push
shrl
scas
insb
xor
inc
repnz
and
cmp
cld
mov
xorb
jae
out
dec
sub
in
dec
repnz
mov
sub
inc
sub
or
ret
into
xchg
movsb
mov
test
jp
jge
and
xchg
cs
jb
outsl
mul
sub
and
jmp
inc
loope
clc
mov
push
sub
or
sub
jmp
repz
outsb
ljmp
test
ror
mov
stos
out
fsts
pop
fcmovnu
inc
imul
cmp
dec
sbb
psrad
pop
hlt
cld
loope
mov
push
xor
adc
rcrl
adc
mov
addr16
cmpsl
in
fs
cltd
lock
jo
xor
lods
push
push
jg
mov
fstl
movsl
sub
aaa
sub
ljmp
movsl
pop
orl
setl
xchg
aad
test
mov
sub
mov
sti
push
adc
mov
cmp
loope
outsb
outsb
mov
movsb
or
add
int
lock
cmpsl
add
repnz
loop
mov
jecxz
fsubr
das
jb
js
in
push
pop
cld
mov
adc
sub
xchg
les
stos
xchg
and
inc
je
mov
cli
insb
mov
add
dec
loope
cmp
es
fwait
sbb
es
jns
call
fadds
aad
insb
or
add
sub
xor
je
push
pop
test
stc
and
mov
jle
sbb
sub
push
pop
clc
mov
loop
mov
or
aas
mov
enterw
clc
pop
push
sbb
jmp
out
insl
add
rolb
or
add
or
lods
inc
add
mov
out
mov
cmp
cmc
or
lret
outsb
push
sub
or
jp
mov
shl
lcall
sub
scas
mov
imul
xchg
pop
gs
push
push
popa
inc
cmpsl
sbb
push
sti
jmp
int
dec
ljmp
popa
pop
mov
lea
xchg
in
xor
ljmp
xor
lods
mov
mov
cmp
jp
pop
mov
aad
xchg
push
lea
push
stc
das
inc
and
cli
push
mov
cmpsl
movhps
inc
imul
pop
movsb
push
jno
insl
incb
or
push
mov
xchg
mov
lods
mov
inc
jbe
hlt
outsb
shl
xor
jecxz
mov
cmp
cmp
repz
fistpll
xchg
cli
cmp
scas
into
into
inc
aad
dec
icebp
insl
mov
jge
scas
jge
clc
jb
wbinvd
shll
mov
in
sub
cmp
xchg
inc
cmp
js
flds
pop
jp
icebp
rcl
pusha
push
ret
mov
push
iret
push
dec
pop
in
fidivrs
push
pop
out
lds
outsl
inc
mov
popf
ret
inc
fidivrl
loopne
fwait
lret
inc
subl
cli
cmp
xor
cmp
lock
add
lods
aad
dec
adc
and
cmp
in
hlt
ret
cs
add
in
dec
cmp
mov
mov
clc
jns
mov
push
jmp
sub
mov
das
outsb
and
sbbb
movsl
adc
ja
jns
rcrl
xor
mov
jne
mov
stos
inc
lcall
in
imul
repnz
cmp
mov
push
mov
sub
std
shrl
repnz
daa
icebp
mov
mov
add
lret
cs
fcmovne
ds
jbe
or
sahf
mov
pop
cmp
cmp
mov
mov
jo
mov
mov
inc
mov
popf
add
push
mov
inc
mov
and
call
add
es
add
sub
loop
loop
add
popf
lret
insl
mov
fdivl
dec
push
lds
in
xchg
xchg
into
je
addr16
push
pop
xchg
pop
jb
jo
mull
pusha
pop
cmp
cmpsb
dec
xchg
stc
dec
xchg
inc
sbb
sahf
cmp
mov
sbb
out
stos
inc
cmp
aam
jno
pop
mov
hlt
adc
adcb
cmp
jb
and
push
push
mov
cwtl
iret
xor
sub
fnstsw
clc
adc
jae
mov
les
nop
cmp
test
xchg
out
mov
and
outsw
jmp
xor
pushf
add
xor
lcall
or
and
add
pop
mov
in
out
sbb
imul
sub
xor
sub
sbb
inc
ja
lahf
mov
test
inc
fdivrl
inc
mov
and
adc
arpl
cmp
cmp
fbstp
sub
sbb
repnz
sub
loope
add
mov
shrl
dec
repnz
mov
push
push
mov
aaa
jo
dec
push
mov
or
cmpsb
pop
jae
ftst
and
loopne
mov
dec
sbb
and
into
inc
mov
add
adc
jle
fistpll
movsb
faddl
cmc
lods
es
lret
cmpsb
pop
dec
push
mov
js
aaa
stos
addr16
loopne
sub
repz
dec
lds
daa
lods
xchg
adc
stc
nop
and
in
in
pop
mov
mov
mov
mov
or
shr
imul
ljmp
inc
movsl
push
fnstenv
xchg
xor
jecxz
xchg
jno
lea
test
scas
stc
xchg
xchg
fnstcw
dec
enter
outsb
push
in
inc
sub
pop
ror
sbb
out
cli
sub
adc
jb
je
sbbl
leave
cs
dec
sar
ret
dec
xchg
jo
inc
push
jno
outsb
lret
adc
or
sbb
and
cmpsb
sahf
mov
pop
popa
mov
or
mov
xchg
fs
sbb
pop
repz
xor
xchg
mov
cmp
sub
cltd
sarb
bound
add
or
ss
stc
cmp
insb
push
js
sahf
pushl
outsb
mov
in
mov
sub
aaa
inc
xchg
inc
inc
or
adc
jbe
test
sbb
jge
sbb
xor
sub
cmp
mov
popa
mov
adc
mov
cltd
add
xchg
inc
jns
and
stos
push
xor
aam
imul
xor
or
imul
jge
cmp
fidivl
aas
sahf
jmp
push
loop
hlt
adc
shrb
jmp
xchg
cmpsl
add
inc
cmp
dec
scas
sbb
inc
mov
std
pop
sti
sub
xchg
xchg
xchg
cld
es
sbb
mov
sub
dec
fidivs
out
dec
mov
adc
icebp
loope
push
loopne
ljmp
stos
in
add
pop
xor
mov
clc
std
sbb
insl
out
lds
lock
push
adc
imul
and
push
dec
push
push
fcmovnu
pop
shrl
add
xchg
inc
pop
imul
sub
jno
dec
data16
pusha
mov
dec
mov
in
add
pushf
sub
and
inc
mov
push
dec
inc
js
imul
idivl
push
dec
mov
dec
dec
jg
push
pop
cmp
lock
fcmovu
cmp
inc
dec
push
jnp
rolb
pop
test
shlb
fs
in
xlat
subl
lods
rorb
dec
ret
bound
add
in
mov
and
sbb
jmp
push
sbb
xor
add
sub
push
mov
popa
in
xchg
sbb
inc
in
xchg
inc
mov
movsb
mov
imul
repnz
push
jno
mov
mov
sbb
adc
lods
fsubrp
or
cmp
mov
mov
cli
movsb
mov
scas
lea
and
fidivl
or
test
sub
pop
hlt
popf
ds
pop
movsb
mov
ret
sub
jb
dec
jle
dec
daa
push
dec
nop
sub
shrl
xor
out
dec
mov
ret
xlat
mov
cli
push
push
xchg
add
xchg
adc
cmc
cmp
scas
pop
add
inc
mov
mov
or
popa
add
bound
mov
push
dec
add
adc
sub
in
movsb
cs
icebp
sbb
mov
stc
mov
fxtract
add
lcall
fbld
dec
ss
cmp
aam
je
or
mov
lret
popf
test
sbb
mov
dec
test
adc
inc
cld
sarl
sub
sub
xor
inc
out
bswap
subb
cmpl
mov
adc
mov
pop
inc
hlt
mov
dec
jns
jecxz
loop
or
call
xlat
popa
xor
mov
sub
je
pop
mov
mov
daa
jne
inc
push
push
arpl
adc
add
ret
sub
ficompl
addb
je
bound
lds
xchg
ficompl
add
div
adc
test
rcl
andb
mov
test
aad
lcall
push
nop
jmp
jae
pop
pop
jno
inc
or
cmpsb
mov
iret
and
mov
out
adc
mov
cmp
es
sub
aas
nop
or
call
bound
cmp
push
test
pop
mov
xor
aam
arpl
sub
xchg
outsl
fstpt
or
mov
call
cmp
mov
fs
subb
push
add
sahf
stc
int3
inc
cmp
xchg
outsl
push
daa
leave
shll
test
xor
xor
shll
pop
not
addb
mov
imul
xor
cmpsb
loopne
lcall
les
mov
scas
stos
fs
pop
aas
fsts
cs
rcl
lods
inc
xchg
pop
mov
scas
jb
xor
clc
loop
repnz
std
jo
cmp
sarb
adc
add
mov
or
aam
negb
data16
ja
inc
pop
mov
pushl
mov
sub
in
testb
ljmp
add
incl
add
fldt
sbb
call
in
add
jb
xchg
mov
pop
and
loopne
inc
cs
imul
adc
xchg
cmpsb
xchg
xchg
sub
aam
fadds
std
add
andb
or
xchg
daa
mov
sti
mov
imul
xchg
sarb
add
lcall
fcompl
inc
xchg
add
inc
lock
pop
fucom
cltd
xchg
push
sbb
test
or
pushf
cwtl
cmp
insb
mov
out
xchg
xor
dec
adc
jns
xchg
faddl
das
mov
push
xchg
icebp
lds
out
lods
push
roll
or
sti
mov
sub
xor
enter
push
inc
or
into
jne
dec
popa
adc
add
mov
mov
xor
stos
add
and
sub
ja
push
pop
and
invd
mov
inc
std
jmp
xchg
inc
fildll
push
decb
xchg
pop
test
imul
add
pop
pusha
dec
mov
jecxz
or
xor
jmp
mov
notb
sahf
loope
test
fs
sbb
sbb
sbb
lods
xlat
mov
adc
lods
xchg
andb
xchg
jno
add
or
stos
or
push
push
insl
fsubr
into
sub
lcall
aam
push
popa
int3
out
mov
sar
mov
pusha
jp
orl
mov
jnp
xchg
ljmp
ret
jecxz
in
test
aam
sub
das
dec
mov
cmp
mov
es
add
xor
mov
sbb
mov
jno
inc
xchg
loope
aaa
into
clc
js
inc
mov
lcall
mov
in
mov
sub
cmpsb
sbb
shr
cmpsl
cs
cmp
les
inc
ror
insb
and
stos
xor
pusha
mov
inc
jnp
mov
or
loop
stc
xchg
dec
imul
movsb
or
jne
incb
ficoml
sbb
mov
shll
xor
sti
xchg
mov
pop
xor
pop
jp
push
scas
lods
aas
pop
out
in
sub
seto
cmp
mov
push
fwait
dec
ja
gs
mov
push
and
mov
mov
jae
stos
cmp
mov
aad
and
mov
inc
dec
cmpl
fnstcw
mov
inc
idivb
mov
notl
jo
and
mov
sti
mov
loopne
lret
cs
xchg
pop
adc
mov
movsb
outsl
xchg
add
icebp
xchg
jl
or
test
jns
pop
mov
loop
sahf
aad
xchg
test
jp
arpl
mov
or
stos
and
xor
mulb
shll
and
sbb
scas
add
push
mov
sarl
cmc
shll
push
inc
das
adcb
mov
shll
ret
xor
in
dec
xchg
dec
push
xlat
push
loopne
xchg
mov
xor
xchg
das
pop
xchg
sbb
decl
cmp
and
push
jo
jb
add
imul
push
or
mov
dec
add
movsb
jmp
and
or
add
add
incl
dec
pop
sarb
in
jle
int
popl
mov
out
inc
icebp
rcrb
cmpsb
shll
mov
dec
add
jl
or
jge
and
and
into
or
out
adc
xor
inc
mov
subl
or
fistpl
mov
lock
xchg
into
insb
add
add
gs
push
test
fldenv
mov
test
add
inc
jnp
cmp
xchg
sbb
gs
loopne
ret
adc
pop
in
push
jae
cmp
push
shll
pushl
adc
out
jno
dec
mov
int
add
push
lret
ss
mov
xchg
pop
push
push
xlat
jne
and
inc
scas
jmp
std
shl
pusha
adc
aam
lahf
stos
fnstenv
stos
cmp
pop
test
nop
cwtl
add
or
inc
pop
frstor
scas
movsl
loopne
jle
pop
or
les
fwait
js
cwtl
adc
out
xchg
xchg
xchg
mov
pop
imul
sbb
ja
mov
add
cld
lods
sbb
sub
dec
jne
rclb
subb
rol
or
nop
cwtl
sti
incb
adc
loopne
movsl
pop
into
or
negb
in
cmp
sahf
inc
int3
scas
push
loope
pop
jb
pop
mov
xchg
daa
add
adc
mov
scas
pop
inc
enter
insl
or
inc
mov
mov
xchg
addr16
cs
mov
pop
mov
lods
fldl
cwtl
pop
lcall
insl
pop
aaa
fwait
add
cltd
sub
lret
int
jbe,pt
out
push
inc
xchg
jnp
or
jno
mov
dec
dec
pop
jo
push
or
movsl
cmpsl
test
inc
add
sub
pop
push
mov
jp
dec
mov
mov
outsl
pop
sub
fstl
jnp
movsl
fldl
xor
push
rcrl
push
outsb
ss
sbb
rclb
mov
mov
mov
in
out
cs
adc
fldl
ret
loop
and
testl
mov
jne
lock
out
add
cwtl
push
and
fwait
jmp
aas
cmp
aam
sahf
pop
test
or
inc
cmp
fcmovnbe
pop
sub
lahf
pop
pop
scas
in
lret
add
lret
push
pop
pop
mov
xor
loopne
in
mov
adc
ret
incb
fdivrs
and
outsl
cmp
aam
sub
sub
xchg
aam
or
jb
repz
dec
or
lahf
cld
dec
sub
ljmp
pop
and
notb
mov
pop
leave
test
loop
stos
ror
je
lock
cli
nop
outsl
add
mov
lea
jae
mov
test
jmp
push
dec
bound
repnz
and
cmp
or
sub
imul
xor
inc
stos
inc
sbbb
sti
sub
mov
lret
jno
mov
pop
push
bound
std
or
pushf
lret
cmp
dec
and
mov
outsb
stos
sub
inc
fimuls
shrl
push
rclb
mov
pop
xor
shrb
adc
push
popa
scas
xor
scas
cwtl
adc
inc
daa
or
ja
push
popf
aas
sub
mov
lret
in
into
outsb
lock
pusha
push
aad
push
loopne
sub
gs
jge
mov
into
shlw
push
push
push
ficoms
popa
xchg
xchg
fnclex
add
pop
cmpsl
insl
es
clc
add
mov
out
mov
sqrtps
xor
mov
addr16
mov
jl
cmp
loopne
jb
pop
cmpsl
lods
sbb
xchg
sbb
xchg
and
pop
cs
dec
mov
jp
xchg
mov
fsub
iret
mov
jmp
cli
pop
lea
lahf
lds
xchg
push
lds
mov
mov
lods
sahf
mov
xchg
xor
sub
mov
mov
mov
mov
andl
sbb
iret
push
adc
cmp
mov
jmp
fnstcw
sahf
out
push
lret
test
mov
push
mov
lds
inc
pop
cwtl
inc
es
sub
or
cmp
jb
in
imul
inc
pop
movsl
mov
add
adcb
cmpsb
xlat
scas
pop
jp
mov
sbb
mov
pop
clc
cwtl
mov
in
in
movsb
aas
sub
loope
rorb
xchg
ror
cmp
sub
sbb
daa
pop
pop
sahf
roll
adc
das
jmp
gs
popa
and
out
add
sub
testb
adc
sbb
repnz
es
dec
cmc
add
ret
aaa
lcall
adc
imul
jbe
repz
mov
stos
addr16
sub
dec
rorb
fwait
jge
leave
out
sarb
pop
stc
push
mov
adc
stos
loope
lea
mov
dec
pop
cmc
sbb
xchg
lods
cmp
lret
cmpsb
jbe
cld
or
iret
inc
nop
movsb
lahf
lahf
call
mov
mov
icebp
xor
andl
mov
dec
dec
aad
mov
mov
mov
mov
lret
mov
and
and
test
cld
test
call
lock
sbb
mov
mov
mov
dec
mov
or
sub
movsb
jmp
and
add
push
out
popa
es
xchg
jne
int3
ss
jnp
xchg
mov
push
scas
iret
mov
pop
jno
inc
mov
ss
mov
jb
xor
xor
lods
out
mov
cld
aaa
pop
ljmp
xlat
inc
test
lahf
repz
stos
in
pop
enter
les
sbb
xchg
mov
xor
mov
and
outsl
jmp
rcll
outsb
xrelease
loop
loopne
in
push
pop
add
sti
cmpsb
mov
sbb
push
push
repnz
add
subb
push
sub
scas
mov
jecxz
mov
push
out
ja
xor
jns
xchg
lds
mov
adc
or
cmpsb
sti
mov
subl
call
test
xchg
shrl
stc
les
loopne
and
xor
shr
add
mov
or
push
sbb
rcll
mov
mov
repz
xlat
scas
xor
xchg
psubw
sahf
pop
mov
cmp
in
loop
cmp
push
or
pop
mov
mov
sarb
test
mov
or
lcall
fimuls
or
add
test
leave
add
cmovs
push
mov
mov
jg
push
in
sub
cmp
insl
push
icebp
add
adc
and
mov
jle
scas
sbb
inc
clc
mov
mov
sahf
mov
stc
adcl
adc
in
pop
xor
dec
push
sub
mov
pop
lcall
cmpsl
push
call
sub
push
mov
jmp
and
fmul
cmp
aas
or
sub
fdivrs
cli
aad
imul
inc
cmovbe
mov
sub
andl
pop
mov
das
stos
enter
insl
lcall
jae
pop
repnz
je
lock
push
push
pop
adc
jmp
adcb
jmp
xorl
mov
int3
adc
push
ljmp
sbb
jl
push
je
lcall
or
mov
pop
fsubs
loope
in
shl
mov
jb
outsl
ret
cmp
xor
lods
bound
icebp
sbb
push
stos
into
lret
cmovb
aad
sbb
and
test
lss
and
int3
sbb
xchg
cmpsl
out
sub
and
jbe
in
js
outsl
pop
push
fldenv
mov
push
cmp
xchg
mov
sub
int
movsb
push
jne
cmp
lahf
or
sub
ljmp
mov
jmp
push
and
repz
adc
xchg
mov
mov
addr16
ret
cmc
stos
xor
sub
arpl
notl
dec
insl
mov
cld
loope
fsubs
inc
clc
daa
mov
adc
out
inc
sub
shrb
mov
mov
mov
push
sub
mov
add
in
std
insl
lahf
pop
ret
push
xorb
ficompl
jo
addb
xor
xchg
mov
fimuls
cmpsl
into
fsubr
adc
int
decb
ja
fsts
push
icebp
pushw
xchg
and
into
mov
movsl
loop
iret
ljmp
push
lret
push
in
mov
mov
ret
pop
int
sti
cltd
mov
ror
mov
fbstp
sbb
aad
sahf
or
std
int
xchg
xchg
repnz
mov
in
mov
je
push
mov
mov
ss
pop
jge
aam
in
adc
das
notb
and
call
clc
add
xor
sbb
scas
cmp
pop
lret
cltd
dec
sub
xchg
rol
arpl
aaa
sub
cmc
mov
movsb
je
int
jae
dec
add
jns
divl
cmc
mov
mov
lea
jo
scas
les
push
inc
dec
lahf
je
sbb
mov
sbb
cmpsl
xchg
cs
mov
rclb
andps
sahf
test
popf
cmp
shrb
lahf
pop
repnz
icebp
repz
mov
into
imul
xchg
das
daa
or
pop
and
test
pop
dec
xchg
fcompl
call
xchg
cltd
adc
fadds
and
adc
xchg
jns
lea
jmp
push
les
or
test
push
push
cmp
sbb
or
loop
ds
ss
or
inc
shll
je
cld
pop
shl
and
lahf
frstor
lods
xor
inc
mov
pushf
icebp
jge
aaa
ret
stc
push
mov
ja
or
or
mov
cmpb
cmp
shl
pop
sarb
inc
inc
adc
pusha
stc
push
inc
test
clc
pop
sahf
jp
dec
xchg
mov
iret
orb
and
or
pop
cmp
add
test
sub
js
test
inc
inc
sub
adc
push
pop
in
lock
rorb
nop
xor
pop
sbb
std
push
cmpsb
loope
daa
aam
dec
cltd
mov
es
sbbl
add
jge
mov
push
cmp
push
inc
outsl
sahf
mov
mov
pop
mov
jns
and
inc
mov
jle
sub
sub
ds
js
fcomip
inc
cli
sbb
pop
daa
fsubs
inc
sbb
movsb
out
movsl
mov
mov
jl
cli
pop
xor
popa
out
js
dec
div
iret
inc
sarb
out
sbb
stc
or
out
xlat
lods
scas
xlat
xchg
pusha
jnp
sub
jo
mov
dec
loopne
pop
test
out
mov
lods
in
iret
fadd
lret
jmp
mov
out
add
aas
scas
cmp
dec
inc
mov
outsl
insb
xchg
dec
fadd
mov
adc
sbb
xchg
outsb
insl
inc
push
dec
js
cmc
gs
dec
stc
sbb
inc
cmp
xor
cmp
sub
add
mov
ret
sbb
xlat
add
and
push
xor
lock
insb
pop
mov
movsb
inc
sub
mov
xchg
rolb
jecxz
aaa
stos
lods
jbe
lods
and
mov
inc
push
sub
rcr
cli
lock
inc
push
xchg
mov
icebp
loop
enter
add
test
loopne
push
imul
dec
adc
aad
lret
jl
sbb
push
cmp
adc
ja
jae
std
pop
mov
push
lret
jmp
stos
and
int3
jp
add
push
mov
arpl
push
xlat
cmp
dec
inc
cmp
sbb
sub
pop
jae
int
data16
mov
lret
daa
push
lds
cld
push
pop
xchg
sti
fstl
in
push
sub
je
sub
orl
in
iret
mov
pop
test
mov
pusha
sahf
push
lea
arpl
fwait
xchg
xchg
push
ret
btc
add
sbb
lods
inc
mov
or
mov
leave
repnz
call
xchg
xlat
aaa
push
lahf
dec
testb
and
sub
std
sub
jb
xor
daa
fstps
push
iret
push
adc
out
mov
incb
mov
out
dec
fstps
rorb
inc
rcrb
cmpsl
dec
push
les
add
pop
pop
orb
jno
pop
loope
stc
lods
imul
cwtl
int
pop
jnp
and
les
xor
test
je
jbe
mov
xchg
iret
lcall
popa
lods
lock
inc
cltd
xor
mov
rcr
fwait
adc
ss
cs
hlt
movsl
sub
jp
pop
cmpsl
fbstp
mov
mov
xor
adc
loop
dec
jg
xchg
arpl
mov
dec
aam
mov
xor
bound
inc
outsb
xchg
xor
mov
subl
mov
loope
cmc
xchg
mov
push
mov
push
add
test
mov
fcmovne
outsl
cmpsb
or
mov
jle
dec
sti
mov
fidivs
dec
ret
cmp
inc
hlt
push
mov
into
popf
push
in
testb
loopne
dec
xor
or
mov
gs
xchg
in
jp
xchg
bound
lds
cmpsb
hlt
les
enter
ljmp
xchg
pop
and
daa
adc
mov
adc
fwait
jmp
cmp
fsubrs
adc
push
xor
sbb
xchg
jne
or
cmp
jmp
xor
mov
ljmp
lahf
pop
std
nop
lret
cltd
push
mov
or
fcoms
push
sbb
xchg
shll
dec
stos
dec
cmpsb
adc
ljmp
hlt
and
dec
xchg
and
fldcw
dec
mov
in
dec
loope
add
loopne
push
push
movsl
mov
adc
divl
aas
enter
dec
stos
or
cmp
pop
shrl
fisttpll
in
sub
mov
mov
mov
sub
fidivrs
lea
sbb
icebp
push
cmpsl
xor
mov
xorb
mov
jnp
mov
nop
insl
test
xchg
stos
jmp
pop
sub
inc
jbe
dec
jecxz
cmp
jmp
repnz
cmp
movsb
xlat
sub
fcompl
mov
adc
bound
inc
push
add
sub
xchg
push
loopne
fld1
mov
adc
test
push
call
xor
xchg
jp
cli
or
pop
jmp
xchg
int
test
jle
daa
xor
ds
sub
inc
cmpsl
mov
jnp
repnz
gs
add
or
or
gs
jnp
cmp
test
jb
mov
lods
mov
sub
mov
or
xchg
or
cmc
ss
les
mov
cmp
loope
sub
stos
mov
rcrb
push
sti
subl
daa
shll
sbb
mov
and
mov
sub
movsl
jmp
or
pop
pop
je
dec
mov
dec
dec
sbb
adc
lret
mov
jp
and
mov
cld
sub
popa
ljmp
cmpsb
ljmp
cltd
jecxz
jbe
jmp
mov
mov
test
push
pop
pop
mov
popf
sbb
cmp
xor
cmp
rcrl
aam
out
ss
adcl
rclb
cmc
or
negb
mov
adcb
add
dec
andl
jg
cmp
and
inc
pop
inc
pop
aad
sbb
cmp
inc
cltd
outsb
mov
in
shlb
mov
cmp
sub
push
xor
cmp
xchg
jle
xchg
mov
push
pop
sbb
pusha
es
fs
fsubs
imull
mov
dec
gs
in
jmp
cmp
ss
push
stc
rolb
enter
adcl
cmc
xchg
call
out
pop
jecxz
jmp
push
adc
in
ss
nop
jno
or
aad
lods
scas
push
adc
out
add
cmp
mov
jne
rcrb
dec
push
pusha
sub
ret
jae
nop
cmp
jns
cs
push
sar
mov
inc
icebp
lret
mov
jo
push
sub
adc
cmp
sahf
sub
sbb
imul
sub
xchg
ret
jl
add
push
jno
jns
sti
sub
addl
inc
loopne
subl
mov
inc
xchg
iret
jge
fwait
cmp
xchg
shl
aaa
push
movsb
pop
xor
aas
add
dec
lock
sub
stos
pop
jae
add
in
push
cmpsb
stc
ret
imul
push
loope
cmp
jge
push
mov
loope
inc
pop
lods
out
pushf
repnz
mov
loopne
jge
loop
sub
sbb
js
je
mov
rorl
push
popa
adc
out
and
xor
xor
mov
insb
repz
mov
push
lahf
fcmovnb
les
sahf
sub
fcom
in
dec
cmp
clc
imul
sbb
lcall
and
jg
out
pop
inc
data16
add
pusha
repz
test
jg
negl
pop
mov
or
mov
gs
add
stos
xor
dec
mov
adcb
ret
test
and
sbb
out
adc
push
dec
mov
jns
pop
int3
sbb
gs
xlat
push
mov
pop
mov
adc
les
pusha
fs
test
call
adc
xor
sub
and
popf
fdivs
xchg
lahf
fwait
psubsw
fcoml
in
pmulhw
sub
mov
ret
add
aad
xor
xor
dec
adc
xchg
dec
pop
cmp
xchg
mov
aam
insb
outsl
pushf
dec
inc
adc
hlt
jno
xchg
lods
adc
push
call
pop
sub
subl
dec
dec
rcll
data16
je
in
mov
test
sub
and
mov
cltd
mov
shll
inc
mov
adc
lahf
icebp
push
fiaddl
xchg
jo
jmp
stos
gs
dec
jbe
xchg
popa
jge
aam
js
pop
adc
push
push
aad
stos
pushf
or
push
xor
mov
test
jnp
in
mov
call
out
aad
sbb
lds
or
add
mov
aas
push
loope,pn
arpl
cli
mov
pushf
push
test
gs
fcomps
sti
cli
movsb
jge
push
cmp
enter
leave
loope
aaa
out
fidivs
das
dec
dec
shll
lahf
push
lcall
xor
inc
sbb
out
mov
push
and
pop
mov
mov
mov
movsl
in
cmp
lds
cwtl
das
scas
inc
xchg
mov
mov
mov
test
inc
rorb
lock
pop
jecxz
adc
dec
inc
jg
into
jb
pop
cmp
xchg
dec
xchg
and
in
add
xchg
out
iret
stos
xor
ret
push
jns
insl
fidivs
cltd
mov
mov
xor
mov
jp
xor
or
xor
xorb
nop
and
ror
fcoml
movsb
sub
popa
cmp
dec
repnz
ss
pushf
cs
and
and
add
shll
push
push
movb
mov
outsl
iret
insb
sub
sbb
imul
sbb
lret
insl
dec
enter
imul
push
cmp
ss
es
dec
push
jno
dec
cmp
sbb
out
xchg
cmp
aad
mov
inc
mov
xchg
and
pop
mov
enter
out
aas
ljmp
xorb
push
xor
push
shll
inc
mov
push
mov
pop
add
mov
sub
leave
mov
imul
adc
mov
dec
neg
fstpl
rorl
cmpsb
pop
pop
push
or
push
into
mov
aaa
xor
mov
hlt
sti
pop
stos
ret
dec
scas
lods
in
add
movsb
fsubr
xchg
fildl
idivl
jl
push
btc
mov
js
inc
aas
notb
roll
loopne
dec
cli
or
ja
in
sbb
iret
cmp
mov
pushw
jns
popf
ret
fisttpl
pop
dec
mov
mov
out
mov
sbb
cltd
pop
pop
cltd
out
cmp
lds
icebp
fld1
ss
imul
push
push
push
test
pusha
fcmovnbe
jnp
fcmovu
jne
mov
scas
xor
fcompl
inc
mov
imulb
cmp
test
jo
adc
mov
mov
adc
xchg
inc
scas
pop
lods
negb
mov
mov
pop
ror
xorb
lods
jecxz
int
scas
in
dec
fidivrs
or
cmp
insb
pop
dec
inc
mov
lods
insl
xchg
sub
fmull
leave
sub
jnp
sub
sub
out
stc
nop
mov
mov
cmp
inc
mov
pusha
mov
sub
jmp
xor
les
push
fisubrs
ltr
rclb
es
sbb
xchg
jo
dec
push
ds
or
movsl
sub
in
mov
les
pavgb
ret
xchg
gs
setns
dec
xor
and
fsubrp
jne
loop
xlat
mov
sbb
sub
xor
mov
insl
pop
loop
jns
stos
mov
sub
pusha
jecxz
dec
sbb
fcomp
push
repz
xchg
inc
pop
incl
mov
cmp
cmc
sbb
sti
inc
lret
ljmp
out
push
loop
notb
inc
rorl
cmpsb
movsl
push
dec
icebp
adc
mov
mov
or
aad
inc
pop
mov
mov
cmp
dec
insb
ljmp
adc
data16
fucom
sbb
push
push
fadd
xchg
lock
mov
push
es
jmp
push
pushf
mov
sbb
test
rolb
sub
popf
mov
scas
clc
imul
arpl
mov
adc
xor
xlat
xor
or
in
jo
pop
loope
subl
out
lret
jbe
in
mov
xor
loope
pop
push
mov
xchg
jg
lret
out
xchg
pop
lret
mov
ss
outsb
jecxz
pushf
sahf
and
push
mov
leave
and
xlat
pusha
jb
mov
inc
cmpsb
in
cli
or
push
cld
lods
dec
inc
and
jp
aaa
jecxz
sub
jae
imul
subl
push
mov
jl
insb
adc
mov
inc
and
pop
addr16
clc
push
aaa
inc
aad
or
sub
dec
test
pusha
xor
icebp
pusha
or
lret
idiv
dec
mov
ficomps
int3
cmp
nop
fdivs
icebp
test
jnp
xchg
sbb
push
aad
xlat
sbbl
fisubrl
adc
pushf
sub
push
jne
ret
std
mov
pop
mov
push
jne
mov
fwait
mov
sbb
jle
std
jnp
add
scas
dec
inc
or
sti
movsb
mov
jmp
roll
cmp
or
sti
in
lret
inc
dec
pop
mov
ret
jb
inc
pushf
cmp
mov
push
sub
cmpb
xchg
aam
add
lcall
popf
lcall
iret
les
mov
imul
int3
and
or
jge
js
mov
mov
stos
xchg
shlb
lods
push
cld
lret
dec
sub
mov
test
loopne
mov
xor
jb
ret
fisttpl
sub
fs
cmpb
test
push
inc
in
or
pop
ret
lock
sarb
or
mov
pop
or
mov
jle
push
arpl
sti
xor
arpl
aam
and
mov
dec
sub
sbb
enter
out
shll
xor
xacquire
aas
sub
jne
popa
je
scas
cmp
sbb
cmc
andl
int3
dec
push
int3
imul
rclb
pop
aad
jbe
adc
mov
add
inc
outsb
fnstcw
filds
lock
in
jne
push
sahf
inc
jmp
fnstcw
pushf
movsb
inc
mov
mov
sub
mov
jle
inc
push
or
arpl
inc
xchg
js
jnp
jp
push
pop
popa
mov
dec
fdiv
xchg
out
jle
inc
inc
cmp
adc
pop
add
add
rorb
add
xchg
add
stc
inc
or
xlat
int
xchg
stos
jge
lods
movsl
xchg
fwait
xor
push
in
dec
cmp
dec
cmp
cli
add
sbb
hlt
out
jecxz
sbb
push
scas
sahf
imul
jge
cmp
jge
adc
dec
lahf
loope
nop
aaa
push
fsubs
dec
stc
mov
fucomip
dec
jno
dec
sti
or
or
lea
es
push
cmp
fisttps
add
mov
push
cmp
ficoml
jp
add
pop
pushf
mov
in
jmp
sarb
aam
push
jmp
adc
aaa
arpl
lret
sti
daa
icebp
add
mov
mov
jg
aas
std
aas
shl
daa
xchg
in
adc
sub
push
loopne
xor
add
and
cmp
pusha
lock
pop
hlt
enter
sbb
cli
pusha
dec
addr16
cmc
or
push
mov
mov
jbe
leave
pop
mov
mov
inc
aad
push
into
push
mov
ret
gs
inc
jns
mov
in
xor
pop
testb
mov
mov
add
adc
stos
rol
and
clc
inc
sti
and
adc
adc
rcr
lods
jl
roll
xchg
cs
or
jge
or
sub
stc
jnp
lahf
sub
call
mulb
xor
repnz
cs
pop
arpl
mov
mov
or
xor
pop
xchg
out
test
sub
cmp
test
mov
std
aas
clc
dec
scas
add
gs
mov
cltd
mov
inc
sub
cmp
inc
test
adc
mov
push
push
jns
or
dec
inc
adcl
aam
in
mov
xchg
out
xchg
movsb
pushf
fdivrl
mov
pop
xchg
pop
imul
call
add
test
mov
pushf
jle
and
addb
or
xchg
jge
push
xchg
in
pop
adc
movsb
xor
js
dec
hlt
mov
cli
test
outsb
xor
push
sar
xor
adc
push
pop
cmc
mov
jl
test
mov
orb
test
xchg
cmpsb
shll
and
push
pop
mov
cmp
data16
xchg
cmpsb
xchg
daa
lret
aaa
lods
loopne
lods
dec
jno
call
test
into
add
adc
xlat
mov
jle
out
ss
dec
xor
test
clc
insl
sbb
iret
dec
fdivrs
hlt
arpl
xchg
out
mov
inc
mov
int
add
in
cmp
or
jge
pop
xchg
jno
mov
cmp
aam
dec
mull
sbb
inc
jo
sarl
callw
popa
loope
sub
inc
xor
jecxz
jae
mov
lahf
jne
jae
push
daa
out
aas
sbb
outsb
sahf
mov
push
arpl
out
scas
pop
mov
imul
pop
adc
bound
dec
mov
dec
sub
pop
sub
aam
jle
and
lds
out
daa
sbb
loopne
mov
gs
shll
dec
data16
pop
test
ljmp
and
in
out
cmpsl
mov
push
sub
xchg
pop
push
clc
sti
int3
ret
in
push
jmp
shll
ret
mov
sbb
xlat
cltd
inc
xchg
cltd
loope
jne
dec
inc
jge
fldenv
or
insb
fsub
adc
jmp
mov
adc
arpl
adc
cli
out
sub
test
ds
xchg
dec
sar
or
push
addr16
xor
dec
mov
mov
lahf
xchg
adc
xor
cmp
shrl
mov
lcall
test
xchg
sbb
mov
cs
mov
adc
dec
inc
cltd
inc
add
jnp
push
in
mov
lods
adc
jg
nop
fstl
mov
testl
mov
jns
cmp
jb
xor
lock
add
xorl
inc
shl
sti
mov
mov
and
lret
insb
cmpsl
xor
repnz
xor
dec
sub
jp
aad
movsb
lea
mov
xor
in
daa
mov
js
mov
shrl
dec
loop
pop
adc
push
bound
lcall
mov
push
xlat
out
xchg
sbb
faddl
or
cwtl
fs
push
jno
loopne
sbb
orb
adc
and
in
mov
rclb
sbb
xorb
sub
adc
jmp
add
xchg
sbb
aad
testl
sub
jns
add
sbb
xor
shrl
adc
int
xor
jae
mov
scas
push
push
fwait
mov
loopne
add
jecxz
test
add
or
in
mov
mov
dec
and
mov
lret
jmp
jmp
and
insl
push
cmp
pop
and
mov
adc
pop
xor
jl
loopne
das
insl
cmp
jbe
pop
daa
into
pop
xlat
xchg
es
aas
sub
jg
xchg
test
lahf
or
dec
stos
jmp
xor
test
jl
mov
cmp
ljmp
pop
and
test
lock
push
cltd
arpl
mov
cs
add
cmp
inc
or
aam
push
adc
into
dec
jnp
jp
movsl
rcll
cmpsb
aaa
cwtl
ljmp
fimull
jge
popw
xchg
ret
sub
add
jecxz
ss
pop
jmp
lds
movl
and
pop
xchg
inc
add
cli
mov
dec
movswl
dec
clc
es
mov
push
btr
inc
adc
rolb
shr
lods
mov
xchg
jbe
push
inc
shll
jb
mov
push
dec
scas
sbb
jns
xchg
mov
mov
jge
mov
push
jp
inc
push
lods
jge
scas
outsl
xlat
punpckldq
pop
in
mov
mov
sbb
sahf
jl
rorb
and
sub
mov
xor
out
mov
xlat
mov
arpl
adc
incl
xchg
dec
sti
jle
xchg
xor
insb
loope
lods
outsb
cmp
into
sbb
jae
mov
lret
pop
xlat
cwtl
in
ss
movsl
sub
push
jo
arpl
push
adc
cmp
push
mov
adc
fsubp
out
jb
mov
mov
mov
lods
push
push
inc
loope
pop
icebp
push
xchg
sub
mov
lcall
xorl
mov
jo
sub
sbbl
xchg
ret
aas
in
and
ret
push
pop
sbb
fcos
jl
in
lahf
sbb
mov
pop
lds
mov
inc
sub
ret
cli
js
mov
xchg
jne
jmp
or
jge
je
jb
std
xchg
add
dec
rcrl
repz
adc
mov
mov
je
mov
out
lods
mov
dec
mov
xchg
in
add
in
into
jnp
mov
push
inc
dec
mov
sub
cwtl
int
inc
mov
mov
ja
mov
dec
in
pop
mov
lods
cmp
jo
sub
scas
inc
stc
pop
sbbb
push
xchg
mov
lret
ror
loop
push
mov
mov
in
cs
in
imul
pushf
fimuls
pop
sub
jg
out
mov
and
push
push
lods
fiaddl
push
in
mov
mov
fsubp
jnp
cmp
mov
jbe
jns
mov
movsl
cmp
xchg
sub
aam
enter
hlt
dec
mov
shr
repz
sbb
iret
ret
pop
pcmpeqb
popf
dec
xchg
sub
cmc
leave
loope
inc
mov
inc
xchg
mov
std
daa
sbb
fs
push
xor
mov
push
pop
cmp
mov
test
push
subb
jl
idivb
inc
mov
dec
sub
pop
mov
or
fsub
and
out
loop
mov
inc
mov
sbb
add
mov
aaa
gs
lock
xchg
imulb
mov
push
imul
adc
mov
cmpsb
lods
push
shll
mov
xchg
cmc
lret
push
cmpsl
push
xchg
cmp
pop
loopne
mov
add
in
fimuls
mov
out
ss
div
sub
mov
mov
lods
inc
mov
das
cmpsl
push
xor
lods
cmpl
incb
sbb
repnz
xorl
or
and
mov
das
jb
je
int
fdivrs
jecxz
pop
cmp
dec
pop
inc
or
repnz
sub
pop
ds
cmp
aaa
stos
push
mov
stos
imul
movsb
jg
popf
pop
xlat
std
ljmp
sti
shll
inc
pop
cmp
add
inc
andl
test
mov
mov
sahf
pop
dec
cmp
push
or
or
inc
aas
inc
add
jae
pop
sti
test
stos
or
adc
mov
jnp
insl
scas
jnp
aam
mov
nop
rorb
aaa
movhlps
addl
or
clc
and
and
sbb
imul
pop
mov
mov
or
adc
push
stos
add
push
xchg
push
fisubl
push
pop
cmp
cmp
xor
pop
jle
repnz
pop
das
or
inc
aaa
push
cmp
arpl
lret
in
jmp
bound
int3
mov
push
fdivs
es
stc
idivb
movsl
add
xor
inc
test
roll
rol
inc
push
or
mov
adc
scas
xor
int
xor
mov
inc
stos
and
and
in
sub
push
pop
enter
and
aas
sar
mov
adcl
dec
outsl
xor
fisttps
dec
cmp
mov
repz
jle
clc
inc
outsl
lods
aad
cmp
jmp
fidivrs
sbb
xor
push
lds
pop
mov
sub
and
push
cmp
add
push
sub
lock
sub
jo
mov
xchg
popf
jo
mov
mov
inc
insl
imul
jae
and
into
movsl
test
call
sbb
xchg
dec
pop
rcrb
out
mov
rcrl
out
inc
xor
add
xor
push
xchg
push
mov
fistpll
jp
or
call
push
ss
dec
jecxz
in
hlt
jne
scas
mov
mov
shlb
sbb
mov
sbb
cmp
fiaddl
rcrb
xor
add
subl
in
adc
adc
mov
xchg
add
jbe
das
push
cltd
inc
mov
xchg
push
dec
dec
ret
loope
rorl
jae
sahf
xor
pop
or
xchg
pushf
mov
icebp
push
in
stos
jno
or
xor
push
pop
mov
adc
jle
sub
push
push
push
jge
outsl
movsb
sbb
std
jno
leave
pop
test
sbb
mov
pop
in
jne
shrl
add
loopne
jno
mov
mov
mov
fstl
pop
mov
and
xor
cmpsb
int
or
popa
rcrb
out
imul
inc
fwait
stos
xor
xchg
popl
jbe
stc
imul
movsb
jb
push
cs
aam
fimuls
stos
push
jb
addr16
insl
scas
call
jne
fsubp
in
mov
and
jecxz
or
sbb
dec
jp
jmp
pop
jle
ja
bound
jae
cmpsl
jge
dec
int3
dec
fildl
dec
imul
xchg
lods
outsb
iret
aas
aam
imul
mov
mov
mov
cs
andb
bound
jl
dec
pop
inc
std
sets
xor
mov
lahf
mov
test
jecxz
mov
pop
sub
into
push
aas
or
lcall
mov
fsub
sbb
loopne
mov
jl
mov
sbb
jno
dec
lods
lcall
sti
adc
inc
cmpb
je
sbb
xchg
idiv
hlt
in
scas
cmp
sbbb
mov
lahf
pop
sbb
shll
pop
addr16
jecxz
lds
cmpsb
push
mov
adc
jle
xor
mov
and
roll
push
daa
push
push
inc
dec
adc
jnp
jnp
ss
test
mov
xchg
adc
hlt
mov
stc
bound
stos
adc
dec
jl
sbb
pop
xor
mov
mov
pop
loopne
cmp
fsin
pusha
push
or
xchg
adc
xor
je
in
data16
cmp
mov
or
int3
pop
jbe
int
nop
adc
arpl
pop
in
xor
sub
pushf
and
jae
inc
into
jge
adc
aaa
mov
sbb
sub
mov
aad
pop
xor
in
or
pushf
sub
add
jecxz
subb
repz
xchg
fidivs
sti
xor
and
cmp
add
std
jp
shlb
or
rorl
daa
in
adc
nop
xor
loopne
das
mov
sub
sub
bound
movb
add
inc
dec
adc
popf
outsl
ds
or
lock
inc
mov
into
clc
fstpl
sarl
imul
scas
scas
jbe
mov
loop
cmp
xchg
jmp
mov
fsubs
dec
push
and
sub
mov
and
add
xlat
dec
dec
repnz
push
clc
push
push
mov
sub
stos
push
js
int
dec
lods
xchg
add
mov
ss
repz
mov
jle
jbe
or
fcomps
sbb
imul
addr16
ror
in
movsl
sbb
xor
xor
inc
shll
push
xchg
outsb
cld
push
js
ret
xchg
pop
mov
sti
icebp
jle
dec
sub
or
nop
js
std
mov
leave
aad
cmp
push
pop
mov
cltd
sub
lea
xchg
push
in
cwtl
data16
daa
xor
mov
jnp
inc
add
clc
or
dec
ja
sti
in
xor
pusha
insl
sarb
mov
pop
push
lret
ja
adc
sbb
or
loope
in
adc
and
arpl
dec
mov
pop
popa
sbb
or
test
aam
mov
mov
sub
xor
sub
lcall
mul
jp
js
ds
and
aam
add
xchg
xchg
add
jge
out
movsb
in
pop
stos
xor
pop
clc
sbb
daa
dec
movsl
fsubrs
dec
in
scas
cmp
add
pop
sbb
fidivrl
clc
sbb
in
jo
ret
sti
mov
pop
in
loopne
gs
shll
cld
sub
out
into
mov
cmc
push
popa
mov
xchg
test
sbb
mov
bound
xlat
dec
mov
out
stos
or
imulb
loop
xor
mov
outsl
push
gs
push
cmp
ficoms
push
andl
stos
ja
push
pop
cmp
rcrl
cmp
and
xor
cmp
mov
cmp
jge
sti
les
das
movsl
push
mov
sar
mov
inc
jmp
push
xchg
icebp
aaa
pop
add
rcll
mov
jl
mov
sub
cmp
mov
movsl
sarb
arpl
iret
jnp
mov
dec
mov
aam
jge
mov
sbb
roll
mov
cmc
xor
fdivs
or
sub
lock
adc
addb
mov
or
mov
jae
xchg
outsb
loopne
cmp
xchg
pop
lock
push
shll
idiv
sbb
sub
dec
jl
jbe
std
cmpsl
in
pop
lds
repz
pop
arpl
imul
test
in
mov
test
out
adc
shlb
dec
xor
inc
icebp
push
fidivs
mov
call
pop
leave
cmc
push
in
lock
push
or
movsb
or
adc
add
inc
outsl
adc
jecxz
gs
popa
mov
adc
imul
jmp
loope
bound
vmulps
push
xor
pop
lods
xor
add
sub
xchg
out
mov
add
mov
push
not
rorb
sub
xor
jno
mov
fbld
cmc
push
adc
test
aas
push
xlat
imul
and
imull
mov
imul
arpl
jne
ja
xor
xchg
and
jae
in
ret
jmp
mov
repz
hlt
mov
repnz
cmp
sbb
xchg
adc
push
pop
xchg
pusha
lods
mov
push
outsb
dec
or
out
cmpsl
ds
ftst
pop
ret
add
mov
mov
push
jbe
mov
sbb
orb
fisttpll
inc
addr16
pop
outsl
repz
adcl
lahf
adcb
push
jmp
add
stos
and
xchg
dec
xchg
sub
jne
loop
dec
lcall
mov
lret
jmp
mov
mov
repnz
jno
inc
loopne
inc
xchg
or
mov
xor
out
orb
popf
movsb
or
aas
data16
xor
pop
dec
cld
in
nop
mov
push
movsl
mov
scas
mov
ret
cld
popa
inc
aam
test
je
and
xchg
int3
stc
dec
stos
in
jo
cmpsl
add
repnz
stos
ljmp
shl
lds
xchg
xor
sti
pop
dec
dec
adc
fdivrl
push
mov
mov
call
subl
sarl
mov
xor
in
out
gs
int3
fidivs
fidivrs
mov
xor
ret
nop
ret
std
mov
scas
and
mov
dec
mov
jb
fucomi
adc
push
adc
add
fmull
jecxz
dec
or
les
cld
std
popf
xlat
sub
std
lret
dec
sbb
push
cmc
mov
pop
sbb
rcll
into
add
lea
add
pop
or
mov
mov
jg
leave
ljmp
enter
mov
mov
xchg
dec
pop
xchg
xor
inc
clc
sub
jnp
das
loope
cmp
xor
les
pop
add
stos
mov
aas
mov
push
mov
repz
mov
sbbl
in
out
mov
dec
outsb
nop
mov
inc
cmc
jb
fistps
inc
and
xchg
sti
push
inc
mov
add
jp
shll
insl
std
xchg
pop
cmc
out
faddl
scas
push
push
loopne
gs
pop
fildll
sub
in
es
scas
dec
in
cmpl
mov
fadds
mov
imul
pop
movsb
push
loopne
loop
inc
hlt
cmp
sub
sub
daa
inc
sub
andl
cmc
jle
sahf
aaa
adcb
cli
cmp
and
int3
sarl
pop
pop
mov
leave
xchg
mov
mov
xchg
lea
out
or
int
lret
ss
clc
out
pop
push
push
dec
or
xchg
mov
test
repnz
fs
stos
out
cmc
pop
aas
pop
jno,pn
add
imul
mov
lock
mov
outsl
push
popa
std
enter
push
in
out
cmp
sub
sub
cwtl
dec
hlt
add
pop
pop
mov
loope
add
jno
loopne
lock
outsb
sarl
lds
sbb
xor
bound
lret
inc
lds
pop
and
push
mov
pop
data16
divl
pop
lret
cmp
ss
xlat
lret
iret
mov
jle
jecxz
data16
add
sub
rclb
mov
popa
addr16
gs
std
ds
dec
dec
cmp
insb
bnd
fistps
fidivl
xor
nop
xchg
dec
sarb
sub
fbld
lods
test
jg
lods
clc
pusha
mov
arpl
xchg
dec
out
mov
add
cmc
jae
repnz
add
sbb
imul
sub
out
xchg
inc
adc
mov
xchg
repz
or
xor
or
ja
decb
shlb
fs
rcrl
mov
imul
dec
sbb
sub
push
add
mov
pop
mov
lods
or
ljmp
lahf
mov
pop
nop
add
sub
xchg
loope
or
sub
lcall
js
inc
stos
jo
inc
push
push
cld
mov
mov
pop
mov
cmpsl
fisubrl
imul
fs
xchg
lods
mov
xlat
mov
xor
jecxz
popa
bnd
xor
inc
pop
lea
add
lds
xor
out
xchg
jae
lds
repnz
dec
xchg
icebp
test
or
adc
out
movsl
sub
andl
cmp
mov
mov
inc
push
stos
sar
pop
or
push
in
xchg
xor
shrb
cmpsb
adc
cmc
cmp
jno
cmp
and
cld
pop
lods
fisttpl
push
insl
push
dec
sbb
xchg
enter
or
arpl
pop
lods
cmp
aam
fdivr
cmp
or
outsb
aam
in
or
jne
mov
cmp
mov
xchg
mov
daa
inc
fstps
lahf
call
pusha
mov
mov
ds
movsl
fisttpl
dec
ljmp
into
out
push
sub
adc
dec
pop
mov
cmp
cmp
into
xor
clc
push
idivl
adc
pop
xor
rcrb
clc
outsl
xchg
das
rcrl
sahf
xor
push
pushf
jle
lods
cld
jne
data16
test
int3
sub
xor
outsl
mov
aam
mov
pop
stos
rorb
pushf
pop
sbb
pop
and
adc
test
xchg
inc
cmpsl
bound
dec
je
sbb
sub
push
mov
cmp
xor
mov
adc
mov
loopne
movsb
out
push
cmp
out
sub
shlb
mov
mov
push
in
das
dec
outsb
add
xchg
stos
or
push
xor
jg
xchg
lock
pop
das
outsl
aaa
aaa
xchg
mov
aas
fwait
in
push
mov
shl
ja
lds
subl
orb
call
fs
movsl
iret
jnp
jbe
push
pusha
roll
xchg
adc
lock
aad
push
shr
or
mov
jns
call
lock
pop
sub
add
lcall
lahf
lods
mov
jno
jne
xchg
pop
mov
mov
push
xor
lret
push
mov
add
mov
lods
xlat
adc
or
lock
mov
sbb
stos
fnsave
test
jmp
xchg
jns
cltd
cmpsl
cmpsl
add
outsl
and
scas
push
insb
or
aas
orl
out
or
fmuls
jl
mov
sub
push
push
add
sub
pop
sbb
andl
leave
or
je
aaa
inc
ja
lods
repnz
in
jg
adc
stos
mov
or
cld
sbb
mov
xor
xor
push
pop
test
adc
sbb
jl
imull
mov
addb
sub
mov
int
in
jg
xor
daa
cmp
jns
mov
int
mov
inc
jo
out
dec
outsl
mov
cli
aad
fnsave
js
mov
lea
sub
or
xor
jecxz
hlt
stos
out
jl
das
add
add
pop
sub
or
inc
mov
mov
mov
sarb
stc
or
rcll
jp
xchg
repnz
adc
cltd
je
xchg
mov
xchg
or
mov
sar
out
xor
inc
jecxz
scas
push
daa
xchg
sub
js
adc
rcrl
icebp
leave
mov
dec
and
lods
lods
mov
loopne
add
sub
enter
fwait
and
adc
nop
ljmp
stos
cmpsl
jb
shll
cmp
ljmp
nop
mov
ror
shr
cltd
cld
and
mov
ss
mov
cmp
xchg
sub
lret
ret
ss
mov
shll
into
add
test
rorl
lea
jle
stos
mov
sti
fwait
bound
mov
stos
test
push
popf
inc
sub
mov
dec
insb
sbb
iret
cmp
dec
mov
jo
mov
adc
sub
xorb
cmp
test
pop
dec
cli
int3
cwtl
std
jo
xor
xchg
call
mov
or
fcomip
jns
xor
push
pop
pop
out
ja
mov
pop
fcmovb
jns
cmp
test
xlat
push
xlat
movsb
push
loope
push
inc
stos
popa
dec
jecxz
pop
lahf
and
inc
inc
rorb
mov
sub
push
mov
or
add
test
adc
into
dec
or
mov
sub
out
aad
outsb
movsb
push
mov
mov
fildl
fldz
clc
and
mov
pop
nop
test
sbb
test
adc
jo
cmp
mov
cmp
pop
cmpsb
cli
ret
leave
les
push
andb
push
pusha
inc
jo
xor
out
orb
jle
pop
imul
mov
adc
push
dec
xor
fsubr
data16
enter
lods
jle
jge
fldt
xchg
sbb
lret
xchg
scas
push
push
add
int
push
sub
andl
loopne
test
fisubl
inc
or
cmp
or
ljmp
je
mov
imull
add
jnp
sub
movsb
fdivr
les
cmp
stc
lret
fsubl
add
jmp
inc
jecxz
mov
adc
popa
xor
xchg
adc
test
lret
add
stos
mov
sbb
cmp
pop
shll
xor
aad
sbb
popf
and
jbe
sahf
xchg
jp
mov
gs
push
pop
push
add
mov
loope
js
lods
push
inc
daa
mov
add
rcll
in
push
mov
mov
aad
mov
cmp
lahf
mov
mov
lcall
pop
mov
push
dec
call
fmull
nop
xor
idiv
sub
mov
inc
cwtl
stc
pop
inc
sub
jne
cmp
xchg
repz
xor
sub
ret
fwait
shrl
repz
xchg
arpl
push
cmc
mov
inc
out
iret
sarl
icebp
lahf
pushl
fcmovu
test
addr16
mov
into
add
xchg
aad
ds
mov
cmpsl
cltd
pop
popf
push
aam
sub
bound
popl
jns
add
addl
inc
add
push
inc
aad
sub
bound
dec
cltd
cmp
push
leave
dec
xchg
sbb
outsb
sub
in
test
cmpsb
arpl
lret
xorl
adc
repnz
stos
loop
pop
inc
push
mov
mov
ds
push
stos
add
sbb
xor
sub
xchg
jl
mov
rol
push
sbb
mov
dec
sub
jns
xchg
xchg
push
xchg
leave
cmp
jo
xchg
mov
ljmp
out
mov
test
lret
cs
mov
inc
push
loopne
add
cmp
xchg
pop
mov
jne
dec
mov
mov
sbb
xchg
jo
inc
sub
loopne
int3
mov
mov
xchg
jp
ss
adc
push
pop
adc
jmp
lret
repnz
fstpl
xchg
aas
ret
leave
or
and
punpckhbw
xchg
mov
js
mov
movsl
sub
rcrl
inc
inc
lods
xchg
push
mov
sbb
cmpsl
mov
add
cltd
bsf
xchg
xchg
cmpsl
in
jp
outsl
jp
icebp
ljmp
add
cmp
subb
fwait
imul
clc
xor
ror
jbe
lock
xchg
dec
push
mov
or
push
test
lcall
mov
xor
movsb
cmp
aaa
fdivrs
call
xchg
test
jae
cmp
mov
fwait
cmp
add
adc
push
add
mov
adcb
jge
aad
cmp
push
inc
sarb
xchg
bnd
xchg
cld
in
insl
sub
and
inc
lock
mov
cld
jnp
jne
test
inc
popf
sti
mov
je
jmp
cld
dec
or
push
push
into
inc
lret
mov
push
xchg
idiv
adc
push
and
xlat
adc
fildl
enter
and
ja
cmp
and
bound
test
add
inc
or
xchg
cmc
lock
in
dec
lahf
pop
inc
insb
rcrl
fs
inc
lret
xchg
lret
aam
ja
dec
popf
test
icebp
xor
addb
cmpsb
sub
pop
ja
cld
jmp
or
mov
std
testb
jmp
jns
xchg
mov
and
mov
jb
push
dec
dec
jno
push
cmc
mov
mov
repz
xchg
out
rcrb
sarl
add
push
pop
mov
gs
sar
dec
xchg
sbb
sub
in
or
cmp
test
scas
add
daa
mov
test
jge
leave
sbb
es
das
push
in
sub
jnp
inc
mov
dec
push
jns
push
mov
dec
mov
push
jl
scas
mov
cmc
mov
in
cltd
loopne
data16
xchg
push
outsl
jns
gs
inc
js
mov
sub
dec
rcll
xor
xor
cmc
lcall
jbe
and
or
gs
adc
rcrb
icebp
jle
insl
cmp
adc
arpl
nop
xchg
cwtl
jl
mov
pushf
sub
jo
fisubrl
sahf
dec
stos
or
cmp
or
jecxz
fmull
or
fdivs
push
inc
loopne
mov
sub
bound
mov
fists
adc
rcll
lods
xor
dec
dec
push
mov
fstpt
stos
push
sbb
or
mov
rcr
mov
or
adc
loopne
pop
xchg
idivl
mov
mov
inc
inc
xchg
ljmp
addr16
clc
cwtl
sahf
add
in
test
fsubrl
jb
inc
mov
mov
or
mov
or
call
jl
add
dec
out
je
lret
out
repz
outsb
dec
push
cli
mov
dec
jnp
das
dec
jmp
stos
sbb
xchg
pop
mov
add
mov
out
pop
add
loope
pop
adc
xchg
cmp
call
mov
cmp
mov
sarl
or
fists
xchg
aas
enter
out
mov
popf
dec
jnp
into
inc
xor
dec
nop
aaa
or
neg
push
sbb
out
pushl
rclb
xchg
test
jb
jg
pop
shlb
nop
mov
and
push
sub
sbb
jmp
rol
fistpll
call
inc
ljmp
xchg
adc
ret
cli
cmp
sbb
es
pop
xchg
and
mov
mov
fnstenv
xor
bnd
outsl
and
xchg
outsl
xchg
js
xchg
jmp
ja
adcb
stos
add
andl
adc
mov
jle
pop
push
dec
xchg
pop
add
ret
nop
mov
sub
les
jmp
and
push
pushf
dec
test
icebp
pop
sbb
fucom
jp
fwait
mov
cmp
or
pop
cmp
lcall
js
or
mov
add
orb
jns
in
push
popa
movsl
lahf
hlt
sbb
dec
adc
pop
or
adc
push
push
jecxz
imul
cmp
repnz
xor
xchg
jnp
pop
jl
daa
jnp
sub
cmp
add
mov
cwtl
sub
imul
inc
sbb
sahf
pop
mov
adc
rclb
mov
cmp
xor
aad
push
insl
and
rcrb
mov
add
sub
inc
inc
jmp
xchg
cmp
in
dec
mov
mov
ss
shll
test
jae
and
enter
cmp
jge
adc
pop
jb
pop
ror
aas
mov
shll
test
int
insb
pushf
rcrl
sbbl
mov
mov
addr16
mov
in
in
jnp
pop
insl
in
xor
sbb
lahf
ret
push
into
arpl
scas
cmp
push
cmp
inc
mov
add
xor
cli
xor
pusha
aaa
and
pop
and
and
daa
add
xchg
mov
lock
movsl
sbb
or
jmp
sub
jmp
out
push
push
xchg
imul
mov
or
and
ds
pop
fidivl
lods
lods
in
test
mov
jle
cmpsb
sub
daa
out
movsl
lods
mov
dec
pusha
fidivl
jbe
jne
test
adc
pushf
mov
stos
xor
push
and
addb
push
push
orb
inc
jl
sarl
enter
call
or
loop
loop
ljmp
pop
jbe
sbb
movsb
xchg
inc
mov
adc
pop
test
mov
sub
dec
into
mov
jmp
scas
dec
dec
and
pop
test
mov
sub
stos
cmp
and
lret
sub
outsb
mov
out
jl
out
mov
mov
insl
dec
or
add
jbe
jb
jg,pn
xorl
pop
inc
ret
fists
xchg
sub
test
aam
xor
outsb
push
int
dec
cmc
and
dec
inc
out
pop
stos
jae
xor
push
loopne
out
mov
icebp
mov
lret
fstl
pop
cmp
pusha
sbb
in
jmp
mov
enter
xor
and
push
push
pop
rcr
sub
xor
mov
sub
nop
test
push
fimuls
xchg
fisttpll
cmpsl
je
js
inc
fdivr
and
lcall
pop
cmp
ja
jle
lret
test
fildl
and
ja
int
xor
inc
jns
sub
popf
mov
jne
cmpsb
jne
and
popa
cmpsl
loop
adc
push
pop
mov
or
adc
mov
xor
repz
sub
mov
jg
xchg
sbb
cld
sbb
int
mov
cmp
aad
scas
pusha
lods
push
cmpsb
inc
sbb
cli
mov
xchg
sbb
push
pop
push
jo
pop
cli
rorb
in
jo
jae
mov
inc
jne
sub
xor
aad
lea
pusha
fsubs
movsl
lock
scas
insb
pop
pop
in
xor
add
out
jmp
cltd
mov
inc
mov
vpackuswb
xchg
loope
dec
ljmp
insl
cmp
adc
mov
inc
dec
jle
push
int3
mov
xor
fwait
sarb
push
push
shrb
bnd
popa
dec
loop
sub
repz
jnp
push
inc
scas
aam
jo
cmp
pop
xchg
fmuls
pop
aaa
cmc
push
aaa
imul
mov
fldcw
cmp
mull
pushf
insb
push
push
add
mov
jmp
movsl
mov
mov
cld
scas
dec
lds
das
sbb
popf
mov
repnz
js
adc
sbb
adc
bound
push
ja
and
mov
sub
sbb
fdivp
das
sub
mov
or
and
xor
insb
lods
cmp
mov
scas
xchg
in
push
andl
inc
enter
rorl
jecxz
popa
insb
fdivl
or
jmp
in
inc
inc
add
pop
cmpsl
out
adc
cld
cmp
jno
call
rcr
jmp
pop
dec
sbbb
stos
orb
mov
lds
sbb
or
lcall
ret
and
xchg
aad
inc
cmp
lds
fwait
jmp
mov
sub
lds
mov
push
xor
push
lods
cmpb
mov
in
je
mov
pop
ss
sti
adc
out
outsb
fstp
sbb
daa
in
les
pop
pop
xor
sbb
or
cmp
dec
sahf
and
xchg
and
stos
cmp
sbb
mov
addr16
push
ja
addl
je
add
out
ljmp
jmp
push
clc
dec
jecxz
test
mov
cpuid
mov
cmp
or
cwtl
leave
int3
fmuls
test
lahf
imul
mov
pop
mov
and
enter
lcall
xor
sub
mov
testb
or
cltd
push
stos
mov
xchg
enter
bound
or
or
notl
add
insl
es
test
lea
iret
adc
incl
and
cs
mov
add
adc
xorl
xchg
or
test
pop
xchg
in
je
inc
inc
rcll
hlt
pusha
push
jnp
dec
mov
sbbl
lea
xchg
dec
ljmp
rol
dec
out
pop
mov
jae
mov
and
in
shr
adc
sub
and
xlat
lret
hlt
jne
mov
js
adc
bound
cmpsb
adc
sbb
jo
lock
test
insb
or
cmp
jne
adc
cld
jns
inc
ret
mov
dec
insl
int
pop
push
fcmovnbe
insl
inc
add
rolb
lea
xchg
cwtl
mov
fisubs
shll
mov
and
push
or
lods
daa
in
ja
add
pop
popa
mov
jge
int3
cli
repnz
notl
fisubl
jnp
add
push
cmc
xor
pop
xor
adc
cmpsl
je
push
xchg
call
sub
in
xor
ds
ret
mov
xchg
loopne
sub
xor
std
xchg
fadd
add
lea
push
je
cmp
inc
add
into
mov
mov
or
loop
sub
in
pop
add
jg
xchg
xor
adc
push
push
stc
mov
dec
int
xchg
add
cmp
or
mov
iret
sbbl
addr16
jmp
mov
jnp
pusha
out
nop
ljmp
mov
push
jp
mov
ljmp
mov
dec
xchg
inc
or
ret
iret
ret
cmp
jmp
scas
jle
or
ficoms
xor
and
xchg
jae
sbb
daa
pushf
out
push
arpl
pop
movsl
xor
movsl
sarl
ss
xchg
fildl
shr
scas
imulb
es
imul
mov
lods
ret
inc
stc
mov
jbe
lock
cmp
jle
nop
pop
cmp
ja
cmp
fldcw
inc
out
mov
test
cmpsb
add
jb
in
adc
shll
pop
subb
lea
popf
nop
add
jl
lcall
and
cmp
mov
nop
jmp
fsubp
ret
cltd
repnz
mov
call
mov
jno
cmp
mov
push
jbe
pop
ss
lds
js
outsb
fists
pop
popf
push
xor
add
ret
int
xchg
imul
push
pop
jle
out
pop
fnstcw
add
adc
and
sti
sub
test
sub
add
add
out
loop
mov
and
imulb
jbe
test
add
fcoml
inc
push
or
pop
fisubl
out
push
push
dec
xchg
jb
rorb
push
jno
sub
sti
jmp
dec
fimuls
and
dec
out
outsl
add
xchg
push
jmp
movsl
jb
int3
xchg
jnp
jns
sbb
mov
pusha
sbb
sbb
dec
lahf
movsl
sub
icebp
mov
pop
push
cli
and
mov
scas
es
inc
sbb
xorl
fs
cmp
icebp
js
lret
mov
insb
pusha
push
jl
xor
xor
mov
pop
mov
add
pop
mov
fimuls
mov
xor
and
clc
adc
movsb
cmp
pop
scas
lcall
fsub
std
int
fwait
or
mov
sub
popf
xor
lcall
call
ljmp
push
add
xlat
out
mov
mov
mull
dec
xor
mov
xchg
inc
cmp
incb
xchg
jle
call
adc
sub
arpl
cmc
stos
inc
fwait
insl
dec
je
incb
xor
fs
cmpsb
arpl
or
test
push
adc
inc
lock
push
aaa
xlat
pop
loop
std
mov
jnp
andb
or
push
push
imul
inc
xor
stos
in
or
sub
and
jns
or
cwtl
mov
mov
out
push
imul
call
femms
and
lahf
add
ljmp
pop
lret
rcrl
adcb
dec
add
test
add
bound
xor
dec
sahf
jnp
data16
imul
insb
movsl
shll
mov
icebp
xor
aad
sub
pop
cld
xor
stos
mov
xchg
stos
mov
cmp
sub
je
cmpl
mov
hlt
dec
nop
inc
int3
cmc
sti
mov
je
sub
jl
inc
xchg
xor
scas
jl
pop
cmpsb
and
dec
nop
dec
loop,pn
insb
cmp
adc
xchg
cmpsl
nop
xor
stos
mov
pushf
sbb
mov
xchg
test
outsb
or
inc
dec
inc
mov
sbb
mov
out
jbe
xchg
daa
subb
es
aad
lock
fisttpll
hlt
dec
push
pusha
filds
out
fiaddl
pop
cmp
call
adc
rcrb
inc
inc
out
faddp
xor
cmp
ret
jg
cmp
sbbl
push
pop
adc
out
cmp
scas
mov
lcall
dec
arpl
test
lcall
hlt
cmp
rcrb
pop
es
lret
adc
ror
sub
pop
or
bound
mov
lods
jnp
rclb
ljmp
inc
push
loop
jge
pop
inc
mov
rol
out
cmc
xor
stc
ret
inc
lret
je
ljmp
sub
rcrb
shlb
ds
pop
xchg
aad
dec
icebp
or
or
jno
into
and
dec
and
popa
sub
xor
jge
dec
sbbb
addr16
sub
xchg
ljmp
enter
es
xchg
aas
add
mov
cmp
adc
adc
jmp
jbe
inc
mov
les
inc
mov
lret
mov
loope
dec
test
xchg
adc
mov
rclb
xlat
jns
pop
dec
push
out
lret
fiadds
add
loopne
mov
popa
pop
ds
fisubs
jne
fsubrs
sbb
mov
loope
push
xor
ret
and
ret
ss
jmp
cmp
les
cmp
aam
or
push
sbb
cmpsl
push
fsubr
mov
xor
pusha
jg
pop
jb
jecxz
mov
mov
outsb
addr16
sub
xchg
dec
gs
scas
push
pop
jne
jp
daa
int
mov
ror
subb
pop
rcrl
sbb
in
sub
xchg
ljmp
mov
mov
out
jnp
lds
xchg
dec
pop
outsl
rcll
pop
mov
jmp
jne
or
loop
dec
xchg
add
cmpsb
push
cmp
call
frstor
stos
lcall
mov
nop
ffree
hlt
push
cmp
lods
cld
mov
push
addb
mov
aas
out
imulb
aas
fs
scas
repnz
xchg
inc
or
ja
mov
jp
mov
movsl
call
adc
dec
jle
xchg
test
mov
aad
adc
xlat
push
push
push
jge
push
mov
jg
das
inc
popa
cmpsb
and
jle
aas
out
jmp
aas
lea
addl
jnp
dec
sbb
jge
scas
mov
les
dec
xor
push
sahf
mov
sub
outsb
pop
scas
das
cmp
or
daa
xchg
pop
add
jae
inc
sahf
inc
mov
mov
scas
or
or
loope
xchg
mov
test
aas
jmp
cld
cmp
sub
inc
sbb
xor
mov
je
sub
outsl
in
push
xlat
or
push
psubusb
jb
mov
sbb
jmp
imul
pop
negb
mov
scas
mov
jbe
push
mov
shrb
pusha
xchg
push
xchg
rol
mov
xlat
fs
lahf
cmp
and
mov
xor
out
les
nop
xor
out
bound
in
mov
data16
loopne
or
and
pop
sub
jl
push
xchg
sub
jbe
hlt
pop
aam
dec
int3
gs
aas
sbbb
xor
sarl
int
sbb
lret
add
imul
outsb
push
test
hlt
push
mov
push
call
xor
cmp
je
mov
dec
mov
push
mov
lock
out
sub
jo
mov
lcall
bound
je
pop
push
loopne
flds
mov
dec
xchg
mov
pop
loope
push
or
jnp
fnstenv
aaa
sub
mov
aaa
sti
call
repnz
cmp
sub
fbld
add
rcr
mov
arpl
dec
xlat
ja
test
adc
addr16
stc
jns
movsl
jle
pop
in
into
leave
mov
out
mov
leave
inc
jge
cmpl
xlat
cmp
outsb
jmp
jo
push
xchg
or
sbb
add
int
adc
cmp
cmp
xor
pushf
jae
imul
ss
xor
ss
iret
out
mov
andb
dec
int
cmp
xchg
sub
test
lcall
inc
je
sub
dec
in
popf
sbb
mov
ds
mov
ljmp
push
or
in
sub
jmp
test
decl
jmp
cli
cli
out
or
repz
xor
js
mov
push
sub
mov
xchg
mov
inc
pushf
xchg
pop
sbb
sbb
mov
jne
sub
scas
aaa
and
ljmp
lret
mov
jno
jg
cmc
ja
fldl
jp
lcall
in
push
mov
roll
pop
adc
mov
mov
xchg
jo
or
adc
popf
arpl
lcall
iret
mov
mov
push
lods
push
xor
xor
scas
jae
ljmp
mov
bound
jbe
jl
imul
jl
mov
ja
adc
aad
adcb
mov
sahf
push
adc
sahf
arpl
ds
icebp
xchg
dec
popf
icebp
mov
clc
insl
lock
push
inc
negb
mov
jg
leave
sub
out
enter
scas
jne
mov
push
test
sbb
clc
mov
pop
pop
cmp
test
xchg
push
pushf
jnp
sub
pop
xor
enter
pop
xor
push
test
dec
sbb
jl
jmp
fisttpl
push
mov
jo
jle
xor
les
sub
xor
rcr
cmpsl
push
dec
insl
lods
add
out
lock
mov
imul
mov
push
jnp
adc
mov
outsb
pop
leave
xchg
in
enter
cmp
jmp
mov
outsl
mov
xchg
dec
mov
jnp
push
lcall
cld
adc
sub
push
sub
or
int3
fisubrl
dec
repnz
rorb
adc
out
xor
xor
xchg
xor
rcrl
les
jnp
rol
xchg
jg
lret
cli
stc
xchg
mov
sub
add
jle
int3
or
dec
pop
push
ret
test
popa
jmp
pop
add
adc
bound
stos
cli
mov
loopne
rorl
mov
and
dec
lahf
nop
scas
data16
inc
mov
sti
sbb
int3
jns
cmp
clc
bound
or
mov
mov
push
mov
jg
test
aad
push
cmp
das
test
cmp
fstps
enter
sbb
ret
push
aam
jle
inc
in
mov
cmpsl
inc
lock
mov
sbb
sbb
dec
sbb
je
add
loope
jns
lds
xchg
mov
stos
test
pop
out
loop
rolb
fwait
stos
aas
mov
pop
call
stc
push
xor
imul
gs
xchg
push
test
movsb
imul
ds
inc
test
loope
outsl
jb
pop
jle
jae
cmp
sub
int
movsb
pop
leave
pop
out
mov
push
mov
rcrl
add
mov
xchg
or
sbb
and
adc
stos
and
xor
push
int3
test
enter
xchg
xor
dec
pop
xlat
or
jle
xor
jecxz
xchg
testb
popa
test
mov
adc
int3
orb
adc
cli
xlat
cmp
and
add
orl
mov
ss
xchg
adc
pop
mov
std
and
mov
sbb
xchg
lods
xchg
icebp
sbb
pushf
jb
xchg
lcall
xchg
loopne
push
arpl
fmul
dec
xchg
in
push
xchg
shll
clc
shlb
add
push
shlb
adc
ja,pn
sbb
and
and
cmp
sarb
lods
sub
jb
call
mov
or
cmpsb
aad
mov
xchg
cmpl
aam
mov
cli
mov
mul
mov
stos
pop
mov
jl
pop
in
inc
sub
jp
out
les
mov
mov
ja
sub
cmp
mov
pop
sbb
pop
jge
mov
sub
in
jns
dec
inc
cmp
insb
dec
pusha
xchg
sbbb
lret
bound
popa
in
insb
adc
push
add
shll
insl
push
pop
inc
pop
decb
sbb
sub
leave
imul
pusha
cltd
pop
aaa
push
push
pop
adc
add
inc
push
lods
mov
jno
sbb
pop
in
sub
ss
adcb
cmp
lock
test
add
imul
mov
jg
fwait
lea
cmp
ret
int3
xor
pop
outsb
clc
cmp
or
shr
ret
inc
cmp
pop
ror
cli
or
mov
pop
mov
leave
mov
jb
faddl
push
cld
cmp
inc
inc
sahf
js
dec
aas
xorb
cmp
jle
aas
arpl
or
fldt
and
mov
mov
mov
fwait
push
adc
loope
mov
xor
cmp
mov
xchg
mov
loop
bound
fwait
push
in
adc
mov
inc
std
gs
jb
aam
mov
iret
shr
fdivrs
popa
movsl
stc
je
pop
push
incb
push
ja
lret
shll
inc
add
aam
cld
xor
test
shll
test
jl
mov
imul
sbb
dec
xchg
pop
jmp
mov
pop
cmp
jae
je
jmp
pusha
mov
cmp
pop
cmp
jne
mov
je
fdivrl
imul
sbb
jno
mov
inc
fistl
mov
add
movsl
and
adc
push
sbb
and
cs
nop
xor
push
or
lret
test
push
addr16
inc
add
repnz
lock
inc
mov
das
mov
rol
stos
jg
ljmp
xor
or
or
xchg
and
inc
inc
scas
adc
mov
jbe
mov
cli
jmp
ljmp
cmp
ret
outsw
jo
pop
jne
adc
push
sti
mul
pop
mov
pop
xchg
mov
xor
mov
push
cmp
popa
add
nop
pusha
fnsave
xchg
shll
jns
cmp
dec
test
sbb
sub
cmpsl
dec
loopne
jns
sub
aad
fisttpl
subl
in
int
shll
test
mov
dec
inc
and
mov
ss
sbb
push
adc
cmc
xor
bound
add
cld
seta
sub
jns
push
imul
cmp
popf
inc
ficoml
out
nop
cmp
mov
add
hlt
jb
sbb
stos
xor
cmpsl
fwait
push
lahf
mov
or
sub
xchg
cmp
je
mov
add
test
int
dec
jb
jmp
cmp
sub
pop
fisubrs
xchg
mov
mov
fs
scas
bound
test
imul
ror
push
out
test
mov
xchg
std
je
mov
into
flds
adc
mov
and
enter
hlt
or
sub
je
jp
call
daa
dec
or
push
outsb
fdivl
mov
jle
lret
adc
add
adc
dec
cmp
cmp
into
cmp
add
decl
pushf
inc
pop
pop
out
js
hlt
cmpsb
mov
mov
dec
repnz
pop
ret
xchg
out
insb
sahf
dec
mov
jbe
xlat
sub
inc
push
stos
leave
int
hlt
xchg
xchg
imul
add
rcll
and
mov
sub
or
mov
mov
mov
decb
sub
jne
movsl
push
sub
mov
pusha
repnz
mov
jae
push
mov
jno
rolb
cmc
push
mov
js
mov
xor
cmp
pop
and
mov
mov
aas
outsb
jnp
mov
leave
push
imul
fldenv
pop
aaa
lea
xor
imul
ret
mov
jecxz
out
rcrb
imul
sti
in
shlb
fbld
je
jle
clc
shrl
iret
dec
jg
daa
mov
add
dec
or
cmpsb
adc
mov
push
aas
pop
adc
xchg
jnp
stos
inc
adc
xor
and
dec
push
xor
cmp
mov
xchg
mov
mov
ret
movsb
mov
fwait
cmp
iret
dec
jo
jmp
ret
mov
mov
xlat
inc
mov
fisubs
roll
int
decl
hlt
mov
sbb
cmc
mov
or
in
xor
xchg
inc
jb
call
inc
xchg
push
es
sarb
repz
aam
sub
add
xor
repz
fbld
in
cld
call
push
push
das
fsubrs
push
lret
daa
push
mov
and
loope
aas
jl
jne
jb
sbb
adc
insl
cmp
mov
sbb
jmp
push
outsb
mov
sbb
bswap
sbb
push
cmp
jge
rcrb
inc
arpl
lahf
inc
mov
repz
pop
inc
movsb
clc
je
push
cmp
insb
mov
adc
dec
aas
imul
add
jecxz
dec
jle
ja
enter
cmpsl
rclb
insb
cmp
loope
jle
popf
jae
and
cmp
lcall
or
mov
adc
insl
xor
dec
outsb
test
cmp
jb
or
mov
inc
outsb
pop
cmp
push
into
dec
fistpl
or
enter
cmp
pop
ljmp
dec
ret
js
jae
mov
ja
ret
test
pop
cs
ss
cli
xrelease
mov
fidivrl
and
daa
ds
push
add
scas
insl
sbbb
xor
mov
cmc
push
aad
clc
jne
aad
sbb
popa
sti
shll
push
cmp
aas
ret
inc
jmp
xchg
xchg
test
inc
stos
test
inc
or
xchg
and
mov
sub
adc
push
fidivrl
stos
or
test
ja
sbb
ret
inc
pop
mov
mov
cwtl
jae
inc
pop
loopne
add
xchg
pop
fcmovnbe
iret
int3
int3
cmpsb
mov
sti
ret
arpl
testb
imul
inc
das
lcall
mov
or
mov
mov
inc
ret
dec
or
imul
cmpsb
lds
and
inc
add
repz
jg
mov
lods
clc
inc
shll
push
popa
aaa
sbb
cli
xchg
bnd
dec
jnp
fsubs
adc
push
int3
call
orl
rcrb
icebp
push
push
stos
push
test
cli
push
or
jae
mov
ljmp
out
dec
iret
push
push
xchg
mov
std
mov
mov
sahf
mov
add
adc
mov
ret
add
into
out
ffreep
mov
stc
jle
push
ret
sbb
loope
repnz
or
in
add
xchg
das
cmp
or
add
sahf
jb
inc
cli
stc
mov
mov
adcb
lds
inc
mov
mov
in
adc
jnp
jb
or
insb
mov
call
test
xchg
push
call
mov
lret
mov
fcoms
incl
mov
dec
test
rcll
xlat
or
dec
pop
and
aas
mov
js
pop
insl
inc
mov
or
sbb
scas
push
std
sub
jg
fbld
push
or
repz
aad
push
es
dec
rcrl
cmp
xchg
add
add
add
sbb
pusha
jo
push
mov
fiaddl
movsb
test
adc
mov
jbe
out
scas
mov
xor
shr
dec
out
or
adc
pop
mov
pushf
mov
push
mov
call
dec
mov
out
stc
dec
pop
rcll
frstor
imul
and
cmp
pop
mov
gs
and
pop
xor
fucomp
dec
push
in
movsb
das
int
mov
cmp
mov
cmp
repnz
aaa
jl
rorb
adc
stos
jge
addb
popa
adc
fldenv
pop
jbe
jp
pop
mov
inc
pop
xlat
mov
mov
scas
lret
pop
jle
add
push
adc
inc
push
int
ret
sub
sti
into
jecxz
cmpsl
in
lods
negb
repnz
xchg
scas
loop
loopne
repz
dec
ja
daa
fcoml
js
and
std
test
dec
xchg
mov
ss
dec
xor
mov
adc
lds
jmp
xchg
ja
cmpsl
or
and
popf
mov
loop
dec
or
arpl
fwait
jbe
sbb
jg
fldenv
fistl
mov
cmpb
xor
test
pusha
jnp
ja
sbb
mov
repz
stc
enter
and
add
cmpsb
sysexit
lods
test
jbe
xchg
cmp
adc
xchg
mov
lret
std
xchg
xchg
add
jno
aad
ss
addb
add
les
mov
loopne
or
scas
bound
loopne
sub
xchg
lret
push
stc
mov
add
popa
insb
jbe
adc
inc
mov
jbe
arpl
pop
fdivr
mov
push
inc
mov
inc
mov
sbb
shl
dec
jnp
inc
pop
cmpsb
jo
stos
push
cltd
dec
sbb
lret
andb
mov
and
push
sub
push
mov
xchg
jle
mov
dec
fwait
xchg
sub
ficomps
pop
jbe
repz
dec
mov
jnp
rclb
jmp
loop
pop
fs
shlb
orl
lahf
add
jmp
shll
push
mov
addr16
push
lahf
in
mov
lds
add
mov
mov
push
inc
xor
push
inc
into
ret
mov
popa
out
lods
push
in
sub
push
leave
mov
mov
mov
stos
mov
in
dec
and
arpl
push
stos
inc
xchg
adc
sub
mov
jbe
addr16
mov
xor
jo
ds
adc
out
add
xchg
cs
push
in
and
xorl
inc
imul
sbb
ja
dec
adc
add
dec
fdivrl
xorl
ret
xchg
cld
cli
mov
mov
lret
jo
xor
xlat
loopne
inc
mov
mov
sete
inc
xor
enter
dec
shr
push
out
mov
inc
inc
or
aam
mov
lock
pop
sub
lcall
lcall
nop
mov
cmpsl
inc
nop
cmp
data16
mov
jmp
push
inc
in
mov
pushf
mov
test
adc
rcrl
lock
or
xor
cmp
jl
push
or
imul
push
fnstsw
pop
or
pop
and
into
add
call
or
cli
inc
dec
call
bswap
stc
notl
dec
mov
jge
aad
mov
cmp
sub
sub
xor
out
dec
jg
and
insb
push
rclb
push
ss
inc
mov
daa
xchg
mov
mov
fnstcw
in
pushf
xchg
xchg
sbb
xchg
js
inc
cmp
sub
xor
mov
sbbl
enter
stos
xchg
xchg
sub
mov
out
cmp
das
dec
xchg
lds
push
cmp
dec
jmp
test
enter
lcall
mov
arpl
mov
pop
test
add
ja
scas
mov
imul
cmc
clc
and
subb
or
push
pop
jmp
cmpsl
push
jne
cmc
testb
lods
into
repz
test
movsb
out
push
into
push
movb
or
loope
sbb
adcb
sbb
and
inc
ds
jb
cld
mov
and
push
int3
adc
mov
mov
lock
add
mov
push
push
push
adc
jle
popa
fldcw
push
hlt
adc
sub
cmp
icebp
or
or
add
pop
xor
fdivl
add
add
rcll
negl
xchg
mov
or
out
jae
cmc
cmp
mov
bound
pop
mov
jecxz
dec
xchg
hlt
enter
addr16
scas
ret
jne
fsubrs
lcall
or
int3
ja
arpl
xchg
inc
test
sbb
ret
adc
sub
std
repz
dec
mov
xchg
pop
addr16
in
les
loop
xor
adc
ljmp
test
mov
cwtl
loopne
push
dec
data16
sub
movsb
dec
mov
sbb
inc
into
out
sarl
jbe
scas
test
and
ud1
nop
insb
mov
jbe
dec
mov
jmp
pxor
mov
popa
cmp
mov
pop
push
mov
ljmp
xor
xor
push
dec
je
push
lock
and
cvtps2pi
pusha
inc
call
xchg
push
mov
inc
imul
in
mov
push
mov
int3
lcall
sahf
push
push
xchg
loop
dec
lods
repz
mov
mov
scas
clc
mov
mov
mov
adc
inc
or
jmp
dec
je
jnp
testl
sbb
cmpsb
mov
push
outsb
or
aad
inc
mov
mov
dec
sub
and
push
jns
mov
sub
fbld
push
int3
jmp
movsl
sbb
inc
push
pop
dec
dec
xchg
hlt
sub
push
sub
aaa
mov
in
gs
stos
mov
fmul
or
testl
testl
fdivs
cmp
push
inc
daa
xchg
mul
mov
adc
inc
adc
loope
pop
cmp
jbe
loop
popa
mov
int3
scas
adc
addr16
test
adc
xor
ds
in
pop
cmp
jb
or
repnz
jge
ret
mov
adc
out
and
shll
repnz
add
add
xchg
or
xchg
xchg
aam
jnp
sahf
loop
mov
dec
mov
fucomi
inc
repnz
jl
loope
and
testb
sbb
sahf
bnd
add
pop
mov
scas
sahf
add
js
xchg
xchg
call
mov
mov
pop
add
rcrl
jle
lods
stos
pop
pop
cmc
shlb
xor
jb
or
push
mov
arpl
popa
sub
repnz
test
dec
mov
mov
out
addb
jbe
test
sub
cmpsl
jnp
cmp
leave
std
leave
movsb
fldenv
idivb
and
movsl
mov
mov
pop
push
push
fwait
imulb
xor
sahf
sub
ljmp
iret
lahf
jp
in
cmp
sbb
cld
add
test
loopne
nop
sub
out
aad
or
cmpsl
or
jmp
movsb
add
ljmp
imul
add
std
mov
sbb
pop
mov
inc
scas
stos
jmp
test
fldl
jl
mov
sbb
push
orb
nop
in
sbb
dec
xor
fcmovnbe
imul
ret
or
jne
inc
std
insl
fidivrl
mov
jmp
gs
pop
dec
sbb
sahf
or
xor
adc
inc
cs
pop
mov
pop
and
dec
cmpb
scas
dec
in
sub
push
sbb
jl
jle
hlt
jno
pusha
in
outsb
pop
fsubs
sbb
icebp
lret
adc
pop
into
inc
push
es
mov
loopne
into
int
pop
xchg
rcr
in
mov
out
aaa
pop
lods
adc
mov
dec
xor
adc
mov
and
xchg
movsb
outsl
xchg
ss
cwtl
push
je
jg
stos
mov
and
iret
sub
dec
ret
test
mov
sub
mov
dec
fbld
adc
cmpsl
notb
stc
dec
insb
xor
push
push
mov
scas
ss
inc
fwait
mov
add
mov
js
jae
aam
jo
xorl
add
cmpsl
outsl
jne
mov
xor
jg
mov
and
sti
mov
sbb
add
or
addr16
stc
cmp
sub
sbb
mov
loop
sbb
popa
jge
stos
xorl
lods
out
push
xchg
arpl
xor
inc
jnp
out
jmp
test
cs
jnp
repnz
ret
fwait
std
bound
test
or
push
pop
mov
arpl
adc
icebp
imul
enter
out
xchg
lcall
popf
call
rorl
or
inc
call
repnz
sbb
xchg
mov
scas
out
out
xchg
scas
mov
jp
pop
loopne
sbb
add
ret
into
hlt
jne
outsb
scas
call
lcall
stos
add
dec
sbb
enter
cmp
rolb
stos
aam
aam
push
insl
mov
divl
lret
push
out
pop
inc
lds
inc
xlat
mov
and
xchg
xorb
clc
int3
push
cmp
mov
mov
fs
clc
negl
cmp
popa
pop
mov
dec
pop
sbb
jns
mov
and
push
xor
shrl
stos
lahf
mov
lret
lret
add
cmp
cmpsb
lods
push
lock
decl
orl
rcrl
pop
dec
mov
dec
jg
mov
fmul
or
test
and
ret
sbb
adc
adc
xchg
call
sbb
push
out
in
push
mov
push
mov
xchg
xor
scas
js
push
push
sub
bound
scas
mov
loopne
inc
lods
jl
jl
jl
mov
cmp
push
shr
hlt
repnz
xchg
sub
cmp
xchg
out
clc
lea
bound
xor
mov
sub
xchg
out
sti
aam
pop
scas
cmp
xchg
adc
cmp
les
shl
test
sbb
sahf
fcmovbe
mov
mov
lods
jnp
imul
sbb
add
xchg
mov
mov
loope
and
ss
cli
jb
push
scas
daa
xor
sub
test
pop
ds
sub
push
push
cmp
stos
sub
and
loopne
adc
mov
xchg
jns
mov
lahf
stos
popa
sub
push
sbb
pop
aad
popl
clc
fsubs
dec
mov
inc
add
in
ret
xor
xor
sbb
xor
fs
dec
xchg
roll
xor
call
adcl
lock
arpl
mov
addr16
fcoml
mov
sub
xchg
mov
push
stc
xor
inc
adc
pushf
rorb
mov
fcoml
or
aaa
in
inc
adc
hlt
pusha
sar
nop
mov
xchg
rorl
pop
jl
sbb
mov
stc
sub
pop
xlat
inc
push
mov
mov
leave
ds
adc
and
push
outsb
popa
orb
or
or
nop
mov
sarl
lcall
int
mov
add
pop
pop
ret
mov
mov
inc
cmp
mov
mov
bound
sub
jmp
xchg
fldcw
xchg
movsb
loopne
andb
jmp
jl
xchg
mulps
ret
push
cmc
fwait
lret
jge
push
shlb
cmp
shr
ljmp
leave
fdivr
enter
sub
mov
jne
enter
adc
icebp
out
outsl
sub
xchg
mov
push
out
adc
mov
xlat
or
xor
or
adc
and
xchg
jge
fwait
push
xor
and
lret
imul
ret
and
pop
insb
mov
mov
mov
add
push
shlb
sub
and
popa
add
cmp
add
mov
mov
loope
js
cwtl
pop
pop
cmp
cmp
call
jp
fimull
mov
xlat
jmp
or
out
into
mov
mov
insb
popf
out
lahf
pushf
cld
addr16
ljmp
xchg
subl
mov
dec
ficoml
inc
mov
psubd
rcrl
dec
and
mov
scas
and
mov
test
pop
or
ljmp
add
jg
mov
adc
repz
testb
repnz
or
mov
mov
repz
repz
sahf
imul
mov
stc
repz
cltd
mov
sub
mov
xor
xor
adc
sbb
sub
mov
add
push
xlat
cmp
test
and
sub
das
xlat
jge
or
jo
pusha
loop
push
inc
sub
gs
mov
frstor
push
pusha
xchg
xchg
cltd
dec
stc
sbb
inc
jne
sbb
xor
xchg
inc
imul
push
repnz
mov
lods
outsb
cltd
les
fdivrp
outsl
incb
xor
mov
test
xchg
cltd
add
cmp
jne
and
mov
fs
lret
ljmp
lods
sub
popf
xor
fdivrs
test
scas
enter
lock
pushf
out
mov
push
adc
xchg
mov
sbb
daa
out
in
pop
imul
mov
cli
js
mov
outsl
out
mov
cld
rcr
lods
or
ret
cwtl
push
mull
cli
in
fiaddl
enter
jae
data16
ljmp
pop
cld
xor
sbb
jmp
outsb
icebp
subb
inc
xor
lahf
insb
dec
add
addb
aad
icebp
jno
mov
push
xchg
or
push
jbe
lock
cld
cli
adc
lret
jno
dec
cmp
sbb
xor
cmp
dec
addr16
mov
test
outsb
adc
pop
sub
mov
sbb
push
pop
pop
orb
outsl
idivl
sbb
and
icebp
pop
subb
pusha
andb
out
ret
sub
jns
fstps
loop
stos
adc
int
repz
or
ret
mov
pop
bound
enter
push
mov
or
cltd
xchg
mov
in
gs
mov
aaa
out
icebp
pop
mov
xchg
cmp
adc
std
add
idivb
leave
jb
into
cmc
dec
fwait
cld
and
inc
or
popf
dec
aas
inc
xor
call
push
cmpsb
rorb
pushf
add
inc
addr16
or
mov
cmc
fistps
iret
sbb
push
enter
mov
and
fs
das
ror
push
loop
cwtl
mov
scas
fidivrs
jecxz
cmpsl
mov
mov
or
lahf
sub
xlat
mov
cwtl
fcmovu
rolb
sub
jne
add
inc
xor
mov
xor
ret
hlt
scas
pop
insl
nop
repz
sub
insl
cmp
cli
ja
and
mov
and
mov
test
mov
adc
cmp
xchg
xchg
or
subl
or
cmp
xchg
add
sahf
adc
dec
out
xchg
out
sbb
cld
aas
dec
hlt
or
fldenv
pushf
push
and
mov
cld
pop
pusha
adc
jl
fcoms
fisubl
or
jp
inc
jg
es
dec
pop
cmpsl
sbb
mov
mov
ret
insb
enter
pop
sbb
jge
and
sahf
lahf
dec
cltd
inc
dec
mov
imul
mov
arpl
call
out
mov
sub
imulb
pop
or
ret
pop
addl
ss
mov
pop
push
adc
jl
orb
arpl
push
push
adc
outsl
push
cmp
outsb
and
add
aad
imul
notl
imul
pop
enter
addr16
pusha
jb
jl
mov
jle
xor
jae
outsl
jle
subb
jb
sub
test
or
xchg
mov
jns
xor
xchg
or
aas
cli
push
es
xchg
and
les
mov
lock
push
xor
fdivrl
in
jne
cmp
inc
movsb
ljmp
jge
daa
imul
call
sbbl
xchg
mov
das
inc
or
pop
testb
dec
test
xor
out
adc
in
call
inc
cmp
inc
icebp
stos
mov
or
cmpsb
mov
dec
push
adc
mov
mov
mov
shll
shl
cltd
mov
and
movsl
xor
and
mov
jl
fwait
jb
push
mov
xchg
push
je
call
orl
out
sub
neg
xchg
push
testl
xor
inc
mov
outsl
jnp
loope
xor
cmp
loope
inc
repnz
cmp
ja
test
test
xchg
and
clc
cs
push
nop
inc
push
fsub
or
iret
xchg
movsb
mov
mov
add
fwait
push
jb
loopne
mov
mov
and
jmp
sbb
adc
test
out
sbb
mov
pop
idivb
in
mov
outsb
popf
inc
dec
icebp
mov
aaa
int
pop
mov
iret
stos
fs
pop
in
and
xchg
pop
lds
pop
and
mov
xor
mov
lds
in
daa
or
fucomi
arpl
stos
cmp
inc
mov
rorl
and
lods
in
mov
daa
outsl
imul
add
jle
pop
sbb
cmp
pop
xchg
pop
sbb
jmp
mov
imul
ds
pop
test
scas
adc
mov
adc
test
lock
mov
push
mov
fwait
inc
arpl
out
mov
lods
push
and
andl
pop
icebp
push
pop
mov
out
add
mov
xchg
and
pop
push
xor
imull
pop
jmp
hlt
out
jmp
mov
lock
xchg
xchg
mov
and
mov
inc
ds
cmp
out
pop
xchg
in
dec
mov
sahf
mov
xor
and
jg
mov
aad
aad
test
mov
cmpsb
jmp
js
sbb
pusha
mov
push
leave
int3
divl
ret
cmp
lods
ret
pushf
mov
dec
jle
jns
jle
adc
and
push
js
test
mov
mov
push
test
jbe
test
es
icebp
jl
pushf
popa
cmc
ljmp
mov
lcall
sub
sbb
or
fwait
inc
pop
pop
jmp
shl
cmp
push
sub
fildl
push
add
xor
scas
xorl
sub
cmpsb
mov
pop
hlt
inc
jp
and
and
push
jecxz
dec
inc
data16
push
subb
xchg
jle
and
mov
movsb
pop
mov
stc
sbb
jno
or
insb
mov
jbe
add
lahf
inc
adc
dec
loopne
push
insl
or
pop
icebp
pop
mov
test
mov
je
xor
in
mov
push
ds
sbb
pusha
fidivrs
cmpsl
mov
mov
arpl
xchg
adc
add
push
pop
dec
mov
loopne
jecxz
movsb
push
inc
mov
cmpsl
mov
fucomip
jle
sub
sbb
add
jbe
fildll
fiadds
out
mov
push
push
xchg
icebp
push
add
mov
std
movsl
aas
into
shrb
add
call
cwtl
sub
push
cmp
adc
mov
jbe
push
mov
jp
es
pop
faddp
mov
sbb
pushf
sbb
xchg
sub
jge
push
insb
jo
mov
cli
in
imul
test
fcmovb
outsb
fcmovb
addl
add
push
lret
xor
scas
sbb
add
call
sub
mov
jne
iret
int3
sub
dec
call
repz
jmp
adc
dec
lea
sub
les
xor
out
ficoms
adc
jo
outsl
push
adc
shrl
dec
sahf
ficomps
add
inc
xorb
jge
out
jnp
xor
inc
je
xchg
nop
mov
nop
fwait
iret
sbb
ds
dec
shlb
or
adc
jmp
sub
xlat
push
xchg
pop
scas
push
repz
ss
dec
stc
popf
ficomps
lret
add
shlb
aam
outsl
mov
fsubs
decl
mov
dec
fwait
add
mov
inc
fistl
inc
xchg
fstpt
push
xor
cltd
push
mov
out
imul
call
sub
xchg
jecxz
push
out
sbb
sbb
cmp
cmp
clc
orb
mov
decb
je
inc
mov
jmp
subb
enter
dec
dec
lods
lds
call
jmp
xchg
or
adc
inc
mov
add
aam
test
sub
cmp
ja
lds
sbb
test
and
mov
mov
jle
cmp
cmpl
dec
pop
cmp
shl
xchg
xchg
inc
mov
cld
add
sbbb
sub
stos
mov
pop
push
fwait
je
imul
push
sbb
jb
call
jecxz
mov
sub
add
cmp
daa
adc
out
sub
popa
loope
pop
xchg
arpl
xchg
mov
adc
xor
rcr
cmp
cmp
cs
mov
xchg
dec
arpl
or
loope
dec
jne
mov
jae
std
les
sub
jo
data16
pop
dec
pop
jecxz
das
mov
pusha
shlb
xor
inc
loopne
fstl
adc
inc
lods
inc
jge
pop
insb
add
cmp
lret
pusha
jne
xchg
idivl
adc
ss
or
xor
cmpsl
aad
xchg
mov
ficoml
int
sub
sbb
cmpsl
popa
mov
in
icebp
loopne
pusha
jo
xchg
ret
fcmovnu
roll
pushf
lret
imul
xchg
aaa
pop
inc
inc
stos
inc
lahf
push
subb
ds
fistl
ret
and
jge
gs
cmpsl
test
test
hlt
mov
stos
shlb
sbb
dec
jmp
dec
sbb
sub
xchg
cld
jp
out
in
int3
or
adc
ljmp
sbb
bswap
push
jb
pop
jb
lcall
pushf
les
lock
add
loop
cmp
push
fisubs
rolb
dec
mov
jp
jmp
insb
inc
fsubs
push
ret
loopne
in
mov
sub
jae
out
mov
inc
insb
mov
or
aad
sbb
add
add
scas
out
mov
int3
mov
rol
mov
nop
xor
sub
xchg
lcall
mov
xchg
xor
pushf
pop
subl
mov
or
pop
into
lcall
rcrb
adc
insl
out
pop
out
push
mov
imul
lea
dec
push
mov
call
movhps
imul
sti
popaw
fs
xchg
adc
movb
shl
jmp
cld
cmp
imul
xlat
out
dec
arpl
pusha
pop
dec
cmpl
or
dec
push
sti
adc
adc
or
movsl
stos
pop
repnz
xor
inc
lods
dec
iret
and
jns
lret
add
mov
sbb
gs
xor
lcall
test
adc
jle
mov
jle
popf
data16
mov
popa
mov
sbb
popf
movups
loope
ds
ja
inc
mov
pmaxub
mov
sbb
jg
jle
mov
xor
std
lods
xor
xor
pop
dec
iret
mov
mov
mov
es
mov
mov
xor
cld
lretw
mov
fcomp
mov
mov
push
mov
rol
sbb
xor
test
ss
or
xchg
mul
movsb
rcrb
xchg
xchg
repz
dec
std
or
mov
cs
out
daa
loop
clc
cmpl
fdivr
sub
sub
cmp
daa
lock
call
jnp
jmp
push
xor
jno
fldl
pop
and
stos
and
filds
inc
outsb
mov
xor
shlb
outsb
xor
adc
cmc
cmp
cmp
loopne
lret
and
sub
in
sbb
clc
adc
jge
sbb
push
mov
gs
lods
push
scas
femms
add
mov
data16
jns
notl
rorb
adc
dec
arpl
div
add
sbb
rolb
leave
aaa
iret
jl
mov
add
or
gs
scas
xlat
in
and
or
pop
add
mov
or
mov
cmp
mov
cmp
add
popa
lock
lds
xorl
out
je
ror
jge
add
jnp
test
xor
dec
popf
xchg
mov
into
sbb
push
mov
fisttpll
stos
test
aam
divb
dec
push
adc
dec
outsl
adc
mov
mov
pusha
adc
inc
loope
inc
and
lea
test
push
clc
pop
add
jp
lds
shll
fdivl
mov
cmc
js
lods
andl
add
inc
inc
ljmp
pop
call
mov
adc
cmp
ret
adc
cli
mov
inc
sahf
mov
cmc
scas
push
sub
mov
push
stos
mov
xchg
es
mov
xor
icebp
shll
mov
pop
jp
mov
dec
fidivs
push
rclb
enter
enter
cld
aaa
cmp
ljmp
or
fcomip
xchg
stc
inc
inc
mov
pop
out
mov
mov
push
int
cmpl
insl
clc
xchg
mov
adc
repnz
leavew
sub
sti
insl
in
add
sub
in
lea
push
jns
push
arpl
sub
stc
add
fcompl
sub
mov
xchg
and
xor
push
test
push
push
add
jno
outsl
mov
xchg
dec
and
mov
loop
pop
rcrl
cmp
mov
and
clc
sub
hlt
jp
mull
push
mov
mov
jo
lret
repz
lret
hlt
mov
mov
ret
lret
inc
push
or
call
addr16
pusha
ds
xor
in
mov
jge
ret
inc
xor
xchg
dec
pop
mov
add
std
mov
push
cltd
in
pop
sarb
and
movsl
int
push
sbbb
push
mov
vpsubd
pop
insb
scas
inc
imulb
js
inc
ret
les
mov
or
jp
push
imul
fildl
and
add
imul
cwtl
lahf
iret
cmp
pop
frstpm(287
xchg
dec
js
cs
jae
loope
inc
sub
lds
push
lods
stos
idiv
push
outsl
aam
sbb
inc
mov
bound
pusha
scas
adc
or
push
notl
gs
xor
lock
inc
sbb
fnstcw
fists
mov
fwait
out
or
stos
lret
movsb
hlt
jmp
xchg
daa
push
insl
sahf
and
push
inc
cmc
pop
aad
sbb
pop
cwtl
ds
xchg
test
lds
stos
jge
mov
test
jne
test
jae
and
negl
mov
mov
push
cld
cmp
mov
jo
in
in
jno
scas
sar
stos
ss
in
repnz
bound
pop
xchg
in
dec
mov
dec
incl
sbb
push
scas
int3
xchg
or
lcall
out
jl
xchg
jae
xlat
add
cli
das
ficoms
aaa
mov
shlb
pop
sbb
mov
sbb
pushf
std
hlt
in
aad
mov
inc
les
mov
insl
and
jmp
cmp
das
rolb
mov
mov
inc
or
sbb
pop
in
fildl
pop
sti
mov
pop
sbb
repnz
imulb
cmp
psllw
lahf
ss
aam
xchg
pushf
pop
or
pop
pushf
add
flds
cmp
lret
inc
xchg
cs
fs
adc
xor
stos
jae
jp
out
jae
shl
mov
mov
push
test
pop
adc
cli
ljmp
std
out
mov
jmp
iret
xchg
lock
pop
push
and
cmpsl
imul
adc
enter
sub
ret
inc
pop
stc
mov
gs
fcoms
push
rorb
cmp
pusha
mov
mov
dec
sub
sbb
jb
jle
xor
push
adc
andb
adc
iret
outsb
jne
sub
add
les
test
andl
call
jge
fwait
loopne
mov
rcr
xchg
lret
test
dec
push
sbb
xchg
adc
cmpsl
subb
mov
adc
daa
cmpsb
pop
mov
dec
stc
sbbb
xor
mov
popf
negl
jno
inc
aad
in
imul
aad
int
insl
std
dec
jecxz
and
mov
or
mov
jge
adc
cmc
decl
mov
scas
cmp
cmp
sub
lahf
gs
cmp
dec
out
push
daa
out
loop
adc
mov
sub
inc
xorb
jp
jp
or
stos
cmp
orl
xchg
enter
in
out
out
push
js
cli
scas
ss
xor
stc
cld
xchg
dec
add
data16
std
mov
mov
or
in
mov
push
sbb
mull
rorl
push
in
inc
mov
scas
scas
out
fnsave
push
mov
rcrl
sbb
xchg
dec
lcall
push
lods
cltd
ret
xor
icebp
scas
and
subb
mov
inc
add
xlat
xchg
mov
jmp
enter
fsubs
jmp
pushw
andps
aam
and
inc
imul
test
dec
mov
or
push
sbb
aam
jle
mov
orl
scas
enter
andb
cmpsl
aas
pop
cmp
cmp
repz
cld
add
or
fs
js
cs
mov
bound
mov
xrelease
xchg
sti
push
imul
in
fsub
pop
sub
ret
outsl
data16
fwait
and
outsl
into
pushf
dec
mov
fisttpl
ja
dec
push
push
lret
sbb
mov
shl
pushf
out
adcl
and
xor
gs
inc
int
fidivrl
push
xchg
ds
rcr
lds
mov
popf
pop
fwait
xor
cltd
divl
outsb
mov
lock
mov
das
js
xchg
or
hlt
xor
and
and
jecxz
push
push
pop
jge
fsubs
inc
pop
ljmp
jo
out
jmp
fcomp
and
cld
inc
jne
testl
jne
pop
fnsave
vpandn
pop
shll
mov
rcrl
adc
add
orb
pop
hlt
stos
adc
add
bound
fbstp
lds
mov
cltd
scas
pop
sub
jne
dec
aas
sub
jmp
xor
enter
sbb
lods
lahf
xor
test
xchg
loopne,pn
dec
repnz
aad
jl
jae
push
aam
xor
cmp
pop
inc
xchg
pop
cli
dec
outsl
es
add
xchg
or
sub
add
adc
push
xacquire
shl
rol
dec
hlt
lock
and
imul
test
adc
fidivs
int
gs
ss
das
push
inc
int3
push
je
mov
mov
xchg
movsl
fcmovnb
xchg
test
hlt
pop
sbb
scas
lret
pop
std
jo
lock
push
repz
add
dec
xchg
pop
jmp
rorl
jg
mov
xor
xchg
in
sbb
addb
arpl
sarl
fstl
roll
ljmp
cmp
jp
negl
push
movsb
imul
xorb
and
sbb
sarl
arpl
ds
sub
push
hlt
ljmp
je
xchg
test
out
aad
js
ret
xchg
in
mov
pop
out
pop
ficoms
aaa
pop
mov
in
les
xchg
aam
and
or
or
pusha
pop
clc
hlt
je
cmpsl
bound
mul
outsb
sbb
push
jl
mov
jo
std
jmp
imul
ja
jb,pn
cmc
sbb
sub
mov
imul
push
jg
or
std
mov
dec
mov
mov
dec
jnp
xchg
adc
sub
lods
mov
mov
mov
outsl
cmc
cmp
jb
ficoml
inc
jge
add
push
lods
jge
push
add
jp
notb
push
in
xchg
mov
stos
sub
lea
fbstp
add
push
rorl
mov
movsl
lds
aaa
cmpsb
insl
fcomps
and
sbb
mov
in
sub
arpl
pushw
aaa
jmp
push
dec
or
pop
or
mov
loop
sbb
fwait
movsb
or
imul
pop
mov
gs
mov
lret
cld
andl
add
loop
jno
aad
mov
xchg
insb
mov
mov
rcrb
lea
xchg
mov
stc
adc
dec
clc
lcall
dec
push
cmp
inc
mov
jmp
aaa
cmp
fcmovnu
nop
lret
push
lods
icebp
ficomps
vaddps
test
xchg
call
loope
push
int
daa
mov
mov
sbb
aam
pusha
daa
dec
mov
mov
aad
mov
loopne
jne
mov
xor
push
das
dec
push
stc
shll
dec
popf
fisttps
push
adc
sbb
mov
or
add
test
pop
hlt
and
cmp
out
jb
sar
jg
sbb
sbb
dec
push
das
pushf
test
pop
lods
leave
data16
cmp
jecxz
mov
mov
notl
inc
add
pop
mov
jbe
in
pop
xchg
stos
shl
daa
int
arpl
mov
sbb
push
icebp
lods
fildll
cmc
loop
dec
or
dec
adc
jb
int
shrl
add
pop
push
icebp
test
mov
test
movb
sub
add
inc
jmp
jmp
inc
into
mov
std
imul
icebp
out
in
sub
xchg
inc
sbb
rcrb
jge
pop
jp
fwait
add
mov
and
mov
jecxz
imul
add
cwtl
in
cld
xchg
lahf
jo
jns
iret
sahf
fldt
sbb
mov
test
rorb
and
js
lahf
into
push
mov
inc
add
idiv
mov
test
loop
pop
push
icebp
or
or
hlt
jae
xchg
mov
adc
scas
idiv
mov
or
lods
push
into
mov
inc
mov
nop
lahf
lret
mov
mov
data16
pop
mov
dec
or
pop
ja
dec
filds
loope
into
ret
sub
jl
xor
fs
popl
dec
fisubrl
sub
rorl
cld
xchg
or
xor
inc
jbe
and
insb
adc
push
je
test
iret
pop
xchg
inc
jbe
jge
pushf
movsb
pop
xor
mov
enter
ja
jmp
aaa
pop
call
inc
xor
hlt
in
push
mov
adc
pop
dec
ret
mov
test
shll
int
add
xor
cmp
sbb
cmp
push
add
stos
pusha
dec
iret
mov
push
sub
push
inc
lret
adc
xor
and
es
test
fcmove
sbb
mov
imul
dec
inc
js
inc
add
loop
rolb
lods
xlat
mov
and
pop
or
xor
scas
push
mov
push
xchg
shll
ds
shlb
mov
loope
ret
xchg
cmp
jle
dec
shr
pushf
xchg
testl
jbe
scas
outsb
addr16
scas
pop
movsb
in
jns
add
pop
lds
sub
je
bound
cs
cmpsb
subb
sarl
pop
fldl
add
dec
push
call
fistpl
mov
jbe
jle
stos
pop
mov
and
dec
outsb
mov
loop
inc
mov
jbe
imul
and
lock
or
inc
aaa
mov
push
push
int
in
fstps
sbb
xchg
mov
cmp
sbb
movl
sbb
ja
test
aas
es
daa
rcrl
int
lret
ret
push
mov
push
mov
add
mov
aaa
push
add
mov
cmp
push
pop
add
test
movsb
shlb
mov
cmc
jns
nop
out
jmp
idivb
mov
or
ja
shlb
mov
decb
mov
adc
das
outsb
out
jne
ret
out
scas
and
ljmp
jg
mov
push
xor
inc
jle
mov
stos
leave
rolb
dec
pushf
mov
repz
add
add
mov
cmc
jmp
icebp
xchg
jg
push
xchg
aad
dec
jo
lret
dec
or
into
dec
addb
add
push
lea
popa
add
cmp
mov
ret
std
aaa
dec
leave
or
xchg
in
mov
stos
fistps
jp
jbe
mov
xchg
out
cmp
and
mov
mov
fadds
adc
or
popf
mov
jp
fadd
divl
xchg
push
enter
push
inc
xchg
dec
jno
notl
insb
cmp
or
enter
mov
fistl
in
push
es
rolb
mov
mov
das
cmp
negl
in
rolb
std
mov
cli
xchg
aad
loop
inc
dec
std
es
xchg
mov
jnp
and
shl
adc
out
xchg
aad
jmp
das
mov
sub
mov
aas
int
cmp
and
jo
les
mov
xchg
mov
btc
jbe
push
mov
outsl
test
stos
faddl
fwait
sub
inc
inc
and
dec
mov
mov
xchg
push
inc
shlb
inc
in
jnp
pop
mov
mov
xor
iret
mov
fucomp
lcall
popf
nop
cmp
ds
push
fisubs
xchg
add
sub
xchg
mov
lret
inc
call
loope
test
aam
lock
sbb
icebp
nop
jo
jl
out
sub
js
fwait
dec
xor
adc
dec
nop
jnp
test
enter
dec
jg
jle
idivl
ljmp
por
xchg
leave
add
gs
addr16
jp
sbb
leave
fadds
xor
repz
xor
cld
sub
ret
shlb
icebp
push
pop
push
pop
dec
in
loopne
mov
rcl
jge
loope
js
test
mov
xchg
rcll
gs
inc
pop
jmp
mov
mov
loope
sub
mov
dec
enter
xchg
inc
rcrb
in
sbb
jmp
push
cmpsl
mov
adc
mov
out
push
jecxz
push
pop
jbe
das
jno,pn
xor
cwtl
inc
imul
sbb
xor
mov
sahf
xor
sub
ret
xchg
push
pusha
std
jnp
cs
xlat
xor
rcrb
push
cmp
ds
call
adc
stc
mov
cmp
das
push
xor
rcl
es
insb
dec
xor
fcomps
jns
or
clc
imul
mov
add
cmp
test
cld
adc
mov
mov
sub
loop
sub
push
test
mov
mov
and
inc
pusha
test
lret
call
stos
rol
cld
in
lods
bound
inc
notb
das
loop
add
cltd
andl
mov
jns
repnz
cmp
xchg
sbb
scas
stos
and
ss
jle
outsb
repnz
jo
sub
sbb
test
pop
divl
push
jecxz
jne
jmp
test
sti
jl
xlat
loopne
lret
push
iret
mov
pop
in
les
lods
lock
loopne
xchg
jecxz
pop
leave
adc
fildl
xor
dec
push
cli
xor
push
loope
cmp
in
push
ret
sub
xchg
leave
filds
lods
js
mov
cmc
add
mov
xchg
xor
xlat
adc
mov
jb
adc
cmp
dec
das
jp
mov
push
add
pop
inc
adc
lret
ljmp
dec
call
test
ja
call
out
testl
cmpsl
clc
xchg
and
in
in
testb
mov
dec
lret
aas
dec
adc
in
cmp
call
adc
ss
inc
push
xor
pop
icebp
repnz
lea
roll
mov
and
or
repnz
jnp
mov
fistpl
adc
cmp
icebp
lahf
call
aad
fcomp
test
jl
cmpl
sbb
negb
sbb
push
mov
lock
push
pop
adc
cld
dec
sub
das
inc
fldl
pop
lahf
xor
push
pop
sahf
xor
and
scas
dec
push
sbb
rcll
sub
mov
or
pop
jbe
out
pop
cmp
inc
jne
imul
or
and
cwtl
push
jl
mov
push
mov
mov
adc
out
mov
jmp
xchg
mov
dec
call
stos
or
xchg
hlt
movsl
fs
nop
popa
push
test
mov
mov
xchg
mov
nop
xchg
mov
dec
mov
data16
hlt
pop
dec
inc
dec
pmuludq
sub
or
and
mov
jae
aam
jl
jnp
xchg
inc
add
sti
jge
inc
das
xlat
call
or
mov
xlat
adc
xchg
push
mov
in
cmp
jg
and
xchg
dec
fcmovnu
ljmp
xchg
cs
push
in
mov
sbb
hlt
pop
adc
stos
mov
inc
adc
xor
je
cs
pop
push
push
out
insb
aam
cmp
into
mov
push
addr16
stos
je
ljmp
int
inc
out
nop
mov
cli
lods
inc
sub
cmpsb
sub
xchg
push
in
test
lret
dec
dec
mov
xchg
fnstsw
jg
hlt
jmp
dec
and
or
aas
je
orl
pushf
rorb
out
aad
mov
js
nop
cwtl
cs
mov
out
daa
dec
fidivl
dec
iret
inc
xchg
ret
and
ja
cmpsl
mov
in
into
mov
and
dec
mov
leave
xor
xor
ret
fs
adcl
jl
jg
dec
push
xlat
test
aaa
leave
and
push
sbb
std
xlat
outsb
adc
jnp
stos
call
pop
mov
push
int3
xchg
mov
repnz
stos
mov
sbb
mov
sbb
push
cmc
mov
shl
or
sub
shlb
push
adc
cmc
xchg
scas
or
test
mov
outsb
inc
inc
sbb
xor
into
push
mov
sbb
cmp
cmp
cmc
jg
rclb
adc
dec
imul
leave
les
cmpsb
push
dec
xchg
and
out
aad
outsl
movsb
mov
pop
sbbb
test
movsb
shrl
or
sub
mov
sbb
inc
push
cltd
iret
xchg
ljmp
cltd
and
mov
push
cmp
imulb
pop
adc
xchg
test
push
divb
pop
mov
pop
in
jno
fsubrs
cmp
loop
subb
les
sub
xchg
mov
jne
mov
adc
out
sub
dec
aaa
or
push
xchg
xchg
jmp
daa
jb
rolb
nop
jno
dec
stc
add
scas
adc
xor
mov
mov
xchg
nop
sbb
add
imul
push
adc
mov
notb
aaa
or
jno
dec
cmc
cmpsb
xchg
sub
sahf
cltd
cmp
lea
jo
call
dec
jl
jecxz
inc
nop
mov
pop
push
imul
jno
jns
ss
shlb
sub
jne
lret
lret
loope
sub
sti
mov
lods
xor
and
mov
insl
inc
shll
jmp
data16
addb
je
and
lods
xorb
push
and
je
jmp
sub
out
pcmpgtd
and
fwait
adc
mov
cli
sarl
inc
outsl
inc
hlt
in
call
or
dec
dec
in
out
pop
xlat
fistpl
or
push
push
adc
fsubs
lods
mov
cmp
fwait
mov
scas
jne
arpl
or
mov
push
dec
stos
loope
mov
sbb
add
repnz
cmc
pop
clc
push
jno
and
dec
cmp
xchg
js
adc
sahf
inc
dec
and
jg
inc
xor
add
cltd
mov
scas
mov
lcall
xchg
dec
jge
shl
or
push
cmc
pushf
pop
test
cmpsl
out
mov
dec
or
mov
add
inc
aaa
sub
movsl
pop
lds
adc
std
test
jno
into
inc
push
mov
daa
icebp
rep
push
sbb
pop
mov
jmp
jle
cli
dec
push
xor
and
cmp
popa
in
mov
cmpsl
and
clc
in
pop
xchg
xor
pop
cmp
lods
xor
xchg
popf
mov
mov
xchg
fisttps
adc
test
and
andb
cmp
pop
loopne
add
cli
shlb
mov
hlt
inc
scas
push
add
xor
into
add
or
inc
movl
shll
xor
scas
filds
popl
push
mov
addr16
out
pop
and
stc
cmc
stos
bound
sahf
cmpsl
push
sbbl
cltd
test
xor
push
mov
sub
pop
aaa
pop
lods
pop
lock
jg
lods
inc
imul
pop
lahf
sub
sbb
jmp
out
lods
or
outsb
outsb
sahf
adc
orl
js
enter
jb
push
mov
mov
adc
sub
or
gs
mov
sti
in
fisubrl
mov
fwait
push
dec
pop
testl
mov
xchg
popa
jns
dec
push
inc
shlb
mov
add
incb
pop
or
cmp
cltd
movsl
xchg
out
adc
pop
cltd
sbb
jle
sarl
mov
js
pop
xchg
test
pusha
push
es
mov
movsb
xchg
push
inc
mov
xor
push
aad
test
mov
fnstcw
pop
pop
xor
fxch
addb
jl
lods
shrl
push
adc
scas
mov
rorb
jge
imul
push
in
and
out
sti
jno
js
lcall
mov
dec
xchg
loopne
repnz
mov
mov
jno
clc
jns
adc
and
xor
lcall
pop
rol
or
sub
in
xchg
shl
ss
or
imul
test
pop
add
adc
add
sub
hlt
stos
jecxz
adc
mov
loopne
outsl
sbb
das
shl
or
xchg
and
scas
out
pop
nop
push
pop
pop
adc
loopne
or
addr16
scas
jns
shl
loop
cmpb
in
sub
int
dec
or
mov
iret
iret
outsl
shrl
mov
mov
push
mov
adc
pop
sahf
ret
sbb
xchg
std
mov
sub
jnp
jb
dec
pop
mov
pop
lahf
shll
xchg
fists
das
scas
xlat
stos
mov
dec
stos
dec
pmullw
add
pop
outsl
sbb
lahf
lods
lods
js
add
inc
lahf
adc
adc
or
pop
jle
jecxz
test
xchg
xchg
dec
fcmovb
jns
test
cmp
cmc
movsb
mov
fxam
dec
stc
das
shrl
cmp
cld
pop
sti
popf
test
fimuls
lds
enter
sub
mov
je
pop
inc
ds
xor
pop
pop
insl
or
adc
inc
add
in
leave
aam
jb
sbb
insl
xor
adc
jns
out
addr16
mov
sub
dec
lods
imul
add
test
sahf
cmp
push
mov
xchg
sar
fsubl
adcl
sbb
cs
and
lret
sbb
mov
mov
add
jno
popa
inc
test
mov
ja
jecxz
andl
cmp
xor
jbe
arpl
cmp
es
out
push
sbb
jle
shlb
iret
gs
lods
mov
subb
mov
inc
cmp
mov
push
sub
lods
cmp
sti
sti
clc
cmp
jl
aas
pop
inc
test
je
cmp
and
push
mov
xchg
mov
add
xchg
xchg
fdivrl
push
aam
leave
fldt
xor
daa
int
jb
push
stos
push
add
xchg
addl
fcompl
scas
sbb
sbb
test
mov
dec
xchg
adc
jns
push
mov
mov
dec
into
rclb
lods
mov
xor
loopne
je
xor
xor
sub
daa
pop
or
jg
jmp
mov
and
fcmovb
rolb
mov
in
sub
enter
das
addb
hlt
aad
xor
je
das
repnz
shll
dec
stc
loop
inc
push
fstpt
pop
xchg
ja
push
pushf
inc
ljmp
out
mov
cli
pop
pop
jle
call
jmp
pop
dec
mov
scas
mov
fcmovu
jae
stos
dec
pop
sbb
dec
outsb
mov
out
or
push
mov
lea
mov
adc
or
rorl
cmc
push
fsts
lock
cmp
pop
arpl
cmp
and
cmp
jae
sub
xchg
loopne
pop
cltd
mov
xchg
daa
mov
cli
or
push
push
pop
cmp
inc
pop
jecxz
xor
mov
push
pop
in
ret
scas
dec
movsl
insb
pusha
adc
mov
fsts
std
ret
dec
mov
mov
jae
xchg
mov
stc
gs
mov
pop
cmp
xchg
aam
add
lret
pop
jge
dec
lcall
xchg
jns
sub
mov
sbb
imul
std
imul
ret
xlat
icebp
fildll
mov
mov
ja
xor
ljmp
pusha
ret
jnp
ror
stc
call
pop
into
mov
iret
js
enter
clc
dec
cld
xor
imul
jne
sbb
lcall
mov
pop
arpl
stos
ret
inc
aam
cmp
clc
outsb
test
xchg
ds
and
jg
ffree
jne
mov
xor
std
add
cmp
cld
push
scas
push
sbb
sub
rol
cmp
mov
stos
mov
pop
shll
ljmp
cld
popa
stos
add
push
fs
insb
push
ja
and
ds
fucom
mov
leave
je
jno
arpl
mov
gs
cwtl
cmp
inc
push
incl
sub
sub
push
test
xor
sbb
push
cmp
mov
negl
outsl
xchg
test
les
adc
lret
outsl
or
mov
shlb
ret
mov
xchg
push
mov
cs
cmp
jne
xchg
pop
in
lret
mov
adc
sti
shrb
ficoms
call
sub
sub
lahf
and
mov
out
mov
inc
mov
pavgw
pop
scas
and
pop
xchg
movsb
xchg
sub
sbb
jle
xrelease
std
leave
adc
test
js
or
fdivp
jl
and
xlat
js
out
dec
add
jge
mov
xor
cmp
out
cmpsb
xchg
data16
ljmp
xchg
in
mov
stos
dec
adc
cltd
cmpsb
movsb
xchg
mov
cmp
mov
adc
lods
jb
inc
mov
cld
in
into
fimull
in
data16
in
sti
scas
call
sbbb
fsub
and
mov
ret
mov
ljmp
sub
jmp
pop
sbb
mov
xor
ss
sbb
and
aad
adc
mov
xchg
and
fs
fstl
adc
xchg
and
or
and
repnz
out
sub
xchg
jo
nop
clc
arpl
int3
daa
sbb
sarl
lds
lea
push
pop
dec
xchg
inc
xor
mov
pop
mov
addb
adc
push
mov
inc
mov
test
pop
jno
fdivs
out
dec
scas
test
fimull
daa
or
mov
pusha
shrb
push
std
mov
push
lods
pop
out
mov
pop
insb
mov
mov
icebp
test
daa
inc
adc
push
pop
fldt
lock
sbb
cld
add
adc
shrl
call
rcrb
inc
adc
mov
and
shll
inc
pop
scas
mov
rcrb
adc
lret
pop
test
inc
dec
dec
dec
mov
pop
xchg
push
cmp
sahf
xchg
outsb
cmp
rclb
jnp
jp
mov
jle
add
jmp
call
sbb
mov
test
pop
push
fsubrs
mov
pusha
ja
outsb
in
mov
xchg
arpl
pop
into
adc
mov
sub
out
jmp
fdivrl
or
sub
in
dec
cwtl
pushf
fisubl
gs
pop
dec
push
jl
xor
out
lock
add
stos
adc
pop
imul
dec
mov
shll
fbld
push
jbe
inc
mov
jb
std
fistpll
push
fstpl
les
push
fistpll
pop
lcall
enter
fildll
inc
pop
mov
inc
lret
xor
xlat
push
in
sbb
sbb
sbb
je
mull
or
or
mov
ds
lock
push
cmp
mov
test
hlt
fmuls
aad
dec
push
movsl
incb
out
sbb
mov
mov
jb
jge
movsl
mov
mov
mov
mov
push
arpl
or
pop
insb
in
insl
pop
sbb
fstps
xchg
inc
sbb
inc
sbb
aas
adc
and
lock
jbe
jecxz
js
inc
sbb
loope
cmpsl
adc
bound
adc
dec
out
into
in
push
push
sahf
das
dec
in
ds
popa
mov
cmp
ds
sub
dec
dec
xchg
outsb
dec
scas
aam
enter
dec
addr16
mov
sub
sub
icebp
lret
mov
aas
lret
xchg
sbb
or
and
enter
dec
mov
dec
ds
dec
loope
enter
je
dec
mov
aas
test
imul
lahf
std
sub
jle
xchg
mov
xorb
and
sbb
mov
insl
cwtl
jb
je
test
ja
cmp
mov
jb
lods
out
sbb
pop
arpl
pop
sbb
je
xor
mov
mov
mov
add
inc
fucomp
inc
bound
jne
jno
jo
popa
or
sub
xchg
dec
pop
fs
add
mov
jbe
pop
out
inc
ljmp
pop
int3
shlb
hlt
cmp
jmp
sahf
loop
or
and
scas
and
xchg
aad
imul
int
mov
push
test
mov
sbb
rcr
push
int
pop
mov
leave
int
cmp
jmp
mov
lret
push
push
inc
lods
jp
in
cld
jae
mov
imul
sbb
cmp
std
push
and
cmp
fbstp
ljmp
cmp
push
mov
ret
xor
sbb
xor
push
mov
sub
and
daa
imul
adc
pop
lds
scas
scas
sub
insb
or
cmc
jns
and
je
mov
stos
sub
add
push
shlb
into
inc
jns
enter
jge
hlt
mov
int
cmp
aad
dec
mov
jge
lods
adc
sahf
push
sbb
or
stc
in
fadd
sbb
adc
sub
scas
stos
out
mov
adc
mov
fstl
adc
das
cmp
jae
cmp
adc
lret
push
insb
cmp
outsl
lds
arpl
mov
cmp
popa
and
mov
aam
aaa
add
cs
aaa
mov
loope
iret
mov
inc
stos
ja
sub
int3
xacquire
iret
xchg
push
dec
cli
loope
sbb
mov
lea
jle
xchg
popf
arpl
lods
fmuls
jp
iret
adc
stos
imul
dec
sbb
pushl
mov
fadd
int
insl
data16
addr16
stos
gs
jmp
push
mov
sub
mov
cmpsl
les
sbb
add
out
iret
movsl
andl
es
pop
and
add
push
setnp
cwtl
and
arpl
dec
lahf
mull
imulb
in
mov
fidivrl
add
out
bound
sarl
mov
push
into
fldenv
loope
xchg
sbb
gs
mov
mov
mov
outsl
fs
dec
sbb
in
pop
int
int
push
xor
movsl
out
add
outsl
sbb
mov
mov
inc
push
ljmp
mov
mov
outsb
mov
xor
call
xchg
imul
inc
popf
pop
in
xchg
leave
xchg
pop
adc
dec
ss
test
jp
sub
ja
fcompl
push
inc
aam
pushf
cmp
lock
popa
adc
test
mov
lds
jns
xchg
int
cwtl
jno
cmp
dec
sti
sahf
outsl
inc
mov
sbb
lret
sub
scas
and
cmpsl
out
and
dec
sbb
popa
mov
inc
xor
sbb
xor
xor
subb
sbb
add
push
int
repnz
mov
pop
rcrb
movsb
outsl
pop
imul
dec
insb
push
test
add
fwait
dec
or
pusha
push
stc
add
add
mov
jno
sub
mov
mov
rol
in
inc
mov
xor
or
and
repnz
fnsetpm(287
clc
cmp
jle
mov
push
stos
inc
and
cwtl
sbb
and
into
sbb
jecxz
sub
xchg
jp
gs
dec
test
popf
and
mov
packssdw
call
dec
jno
xor
or
das
aas
pop
loop
fwait
shlb
mov
clc
or
stc
cmc
loope
les
pop
or
in
out
cld
popf
sub
inc
and
jno
cmp
or
or
and
xchg
add
mov
mov
cld
cmp
and
roll
mov
popa
jno
xor
mov
mov
mov
outsw
in
fs
movsl
mov
lret
pop
dec
mov
mov
bound
or
dec
out
jns
inc
xchg
stc
xlat
jo
and
std
fwait
sbb
testl
ss
and
mov
inc
je
add
sbb
push
sbb
and
jo
push
and
push
cmp
and
sub
outsb
add
push
insb
and
lret
cmpsl
pop
inc
sub
out
std
mov
pop
je
shrl
jbe
dec
imulb
mov
inc
outsl
adc
cs
popa
into
pop
jecxz
test
test
dec
pushf
or
or
xchg
push
pop
dec
jo
fs
and
lds
cmp
iret
inc
fiadds
mov
sbb
ss
andb
push
mov
scas
jno
enter
pop
test
mov
es
push
jecxz
ja
mov
fstl
cs
mov
es
out
jmp
or
cmp
cmp
cmp
lret
out
filds
jno
adc
sbb
adc
mov
mov
pushf
mov
mov
sub
insb
out
loopne
add
or
dec
mov
sbb
sti
mov
adc
je
aad
xchg
push
out
dec
outsl
das
cwtl
scas
sbb
jno
addr16
sar
aaa
movsb
outsb
sbb
enter
pop
mov
sub
mov
mov
xchg
xor
outsl
and
dec
pushf
sbb
pop
nop
sub
cmpsl
sbb
loop
int3
testl
test
sbb
js
xchg
imul
lcall
scas
push
jmp
sbb
call
jp
xchg
imul
adc
adc
jmp
movsb
cmpsb
test
mov
lret
dec
scas
mov
or
pop
mov
push
xchg
inc
adc
in
xchg
es
shll
sub
dec
dec
mov
int3
adc
mov
or
roll
sub
mov
mov
mov
xchg
data16
out
outsb
add
inc
mov
popf
movsb
adc
addb
push
jnp
cmpsl
sbb
outsb
push
lcall
jle
roll
mov
dec
scas
xchg
pop
pop
sti
out
mov
mov
xor
int
inc
xor
fidivrl
fdivl
cmp
out
pop
in
sub
mov
test
push
in
inc
stc
mov
aaa
and
fcompl
cld
test
xor
add
xor
cmp
lret
sub
xchg
mov
jae
aas
mov
mov
xor
xor
sub
mov
iret
cmp
adcl
pushf
xor
aas
jle
xchg
int
psllq
cmpsb
cld
sbb
and
repnz
lret
dec
inc
ret
xchg
mov
push
out
inc
add
xor
scas
gs
sub
cmp
cld
mov
push
pop
ja
dec
pop
xchg
in
cmp
and
popf
dec
loop
sub
mov
lea
xchg
sahf
push
in
rcrl
arpl
and
aad
jecxz
stos
pop
imul
xchg
mov
fnstcw
pop
enter
push
insl
add
popf
inc
inc
ficoml
in
aaa
loope
mul
sub
add
mov
jle
rorb
outsl
aam
stos
add
mov
insb
mov
jle
push
insb
shll
jl
fstpt
out
mov
adcl
stc
mov
xchg
test
sbb
enter
xor
test
gs
xchg
stc
popf
dec
dec
xchg
add
mov
and
jne
dec
mov
jnp
andl
aad
and
mov
sbb
pop
adc
adc
scas
loopne
push
rcr
out
add
outsb
mov
xor
xor
add
movsl
orl
popa
add
cmpsl
hlt
repnz
fisttpll
aad
add
push
push
jno
into
stc
fwait
dec
roll
divb
sbb
xor
mov
sahf
test
fnstcw
dec
inc
adc
mov
in
scas
pop
insb
fmulp
jne
push
orb
sbb
fnstenv
xor
and
call
test
in
jmp
jne
lock
xchg
sbb
test
or
or
ljmp
mov
mov
jg
scas
push
pop
add
mov
inc
jecxz
ljmp
out
lods
shlb
or
lea
test
add
jne
jo
leave
out
mov
mov
imul
inc
mov
xchg
cmp
rcrl
mov
rorb
insl
movsl
adc
xor
cmpsb
jns
sbb
mov
and
shlb
dec
pop
or
enter
cwtl
out
lods
sub
mov
and
add
test
andl
xchg
aad
jb
push
imul
sti
fsubrl
mov
mov
push
pop
dec
sub
lret
cmp
sub
mov
fstpt
pop
pop
fistl
dec
mov
jecxz
mov
out
mov
pop
imul
mov
push
push
mov
mov
stos
sub
push
add
push
add
repnz
nop
fsubrs
mov
sub
je
fidivs
insl
add
test
data16
pop
daa
in
negb
aad
or
jns
in
add
icebp
iret
mov
inc
adc
std
int3
or
mov
imul
not
outsb
lahf
mov
cli
insl
call
insb
push
or
outsb
inc
push
pop
mov
sub
xchg
sbb
mov
ss
sarb
data16
repz
insb
dec
xchg
int3
jnp
sbb
xchg
ret
mov
addr16
push
cmp
and
push
add
rcrl
pop
lcall
pop
jo
cmp
mov
dec
mov
pop
stc
jbe
mov
sub
fwait
jecxz
push
hlt
dec
adcl
sub
imul
push
add
jmp
mov
xchg
pop
cmp
dec
gs
pop
fstp
nop
jl
mov
int3
outsb
lods
or
lret
mov
mov
sbb
inc
push
gs
pop
sbb
cmp
jns
push
insl
insl
ficoml
pop
fnsave
cmp
loope
adc
iret
aam
test
pop
lods
and
add
ja
pop
mov
fdivrl
mov
pop
cmp
sbb
push
imul
jae
mov
sub
pop
cmp
cld
in
jb
dec
imull
movsl
inc
cmpsb
push
inc
nop
sti
mov
cmpl
add
hlt
clc
stc
sahf
add
mov
pop
jge
es
ja
daa
pop
inc
sbb
inc
pop
ret
enter
addr16
jp
mov
push
jns
rorb
mov
push
adc
lods
test
xchg
xchg
inc
fs
je
scas
mov
xchg
call
add
xchg
or
cmpsl
sbb
adc
icebp
sti
jns
mov
scas
push
pop
jno
fwait
insb
pop
pop
fs
push
pop
test
gs
js
testb
adcb
pop
pop
inc
pusha
decl
cmp
aaa
sti
cmp
js
jb
add
push
jl
mov
notl
inc
pop
inc
dec
lcall
jmp
xor
stc
aam
dec
addr16
adc
xor
cmp
int
out
sub
ja
push
stos
inc
sub
inc
cltd
xor
aaa
repnz
cltd
sbbb
fdivs
ds
repnz
shll
fdivrp
jae
fdivl
jbe
mov
fcomip
gs
dec
jne
test
loope
xchg
ljmp
xchg
sub
xchg
pop
push
lret
faddp
jl
call
clc
pop
and
mov
push
outsl
jle
mov
dec
inc
xchg
bound
ret
xor
lahf
daa
in
jae
iret
pop
pop
fcmovnbe
mov
mov
sbb
enter
xor
adc
mov
pop
movsl
cmpsb
jno
and
in
rcl
ds
orl
sub
in
hlt
mov
jnp
pop
inc
aam
call
in
pusha
pop
arpl
and
lret
repnz
mov
js
lock
pop
push
int
int3
test
or
mov
xchg
js
push
mov
adc
jb
and
ljmp
xlat
jmp
rep
push
scas
lods
aaa
stos
push
fmul
adc
mov
mov
inc
ret
ss
mov
ljmp
jo
pop
call
jb
sbb
js
nop
arpl
sbb
add
out
sbb
pop
inc
mov
xchg
subl
mov
pop
cmp
sahf
mov
adc
push
mov
pop
sbbl
jg
shll
jne
in
sub
ret
and
fs
push
pop
sahf
xchg
and
pop
xchg
std
rclb
daa
cmp
stc
mov
stc
fdivs
shlb
divl
push
das
mov
xor
ss
subb
xor
hlt
pop
inc
fistps
loope
loop
dec
mov
inc
ds
and
pop
or
xchg
inc
or
pop
test
push
xlat
sarl
mov
jmp
sub
rcrb
inc
mov
mov
cmc
sbb
cmp
inc
push
fadds
test
bound
data16
popa
sub
fnsetpm(287
in
mov
into
add
add
leave
push
mov
mov
mov
sti
jle
mov
fdivr
jns
or
push
pop
cmpsl
adc
xor
loop
insb
fcomip
mov
mov
cwtl
outsl
jne
divb
rcl
jecxz
adcl
inc
mov
ss
cmc
xor
xchg
push
xchg
arpl
jge
stc
add
xchg
sbb
xchg
mov
pop
push
out
jg
lcall
sub
loopne
cmp
xor
adc
cmp
or
hlt
stos
nop
or
fistpll
sub
icebp
scas
cmc
ljmp
mov
adc
dec
cmpl
and
cli
jns
jne
sbb
in
in
cmp
stos
and
or
loop
iret
andb
das
shr
mov
pop
and
xor
in
in
or
push
xchg
or
dec
jbe
aaa
sbb
stos
shl
ja
or
jne
stos
jbe
mov
das
dec
push
adc
out
sbb
shl
mov
cld
mov
into
jle
stos
mov
jecxz
xor
mov
sti
pop
add
cmp
xchg
shrl
popl
clc
adc
add
fdivl
movsl
repnz
add
xchg
ret
jecxz
out
mov
xchg
dec
inc
or
adc
sarl
pop
aad
ds
es
pop
insl
push
jge
mov
push
mov
jno
jb
sub
xorl
cmpsl
or
mov
or
lret
orl
ret
ret
jo
dec
fadds
xor
jae
fwait
push
sahf
pusha
pop
int3
xchg
inc
addr16
fidivrl
xchg
popf
jb
cltd
inc
dec
mov
pop
or
mov
lds
int
cmp
outsb
aam
and
mov
inc
ljmp
fs
cld
and
sub
mov
jne
or
dec
cld
mov
jecxz
add
adc
lahf
cmpsl
fidivrs
adc
ficoml
push
dec
mov
push
mov
sbb
aas
sbb
gs
adc
jnp
icebp
test
mov
inc
pop
test
das
imul
push
push
dec
and
pop
or
fs
sbb
xor
in
or
mov
cmpsl
or
or
pop
test
or
mov
jg
call
mov
and
dec
aaa
sahf
sub
mov
ss
fisttpl
loop
dec
test
add
in
pop
pop
inc
mov
dec
push
mov
daa
xor
xor
mov
dec
fwait
movsl
int
push
outsb
popf
in
cltd
jmp
adc
push
in
xor
in
sbb
mov
es
test
jno
shrl
adc
test
shr
testl
arpl
dec
ret
jno
xchg
pop
cmpsb
jg
pushf
add
sbb
icebp
les
jnp
or
push
add
jne
fsts
insb
jp
pushl
sarb
mov
popa
inc
mov
inc
or
movsl
in
sahf
adc
jp
push
dec
out
andnps
stos
xor
push
xor
scas
jge
mov
sub
mov
mov
push
clc
rorb
inc
pop
jmp
loopne
cwtl
mov
ja
sarl
cltd
or
leave
sbb
jno
xor
inc
sarb
jl
cld
fadds
inc
aas
repz
xchg
loope
add
fdivr
scas
imul
sub
jecxz
rcl
je
pop
jne
adc
mov
xchg
mov
inc
push
jns
data16
sub
mov
jle
xchg
dec
iret
dec
sub
mov
xchg
xchg
xchg
popf
lock
lods
mov
loope
mov
fcomi
push
daa
or
pop
jmp
dec
xlat
cwtl
arpl
inc
xor
or
dec
pushf
jno
mov
sahf
xor
mov
xchg
mov
in
pop
sub
and
popa
pop
inc
add
push
jbe
or
lahf
dec
je
add
rolb
or
jecxz
sbb
add
or
add
inc
or
add
pop
fsubrs
mov
outsb
sub
add
or
sub
sahf
lret
enter
dec
jb
lds
dec
divl
lods
hlt
stos
mov
sub
jbe
jbe
psrld
imul
pusha
adc
test
inc
inc
sub
adc
lea
test
ror
xlat
xor
lods
push
and
jns
imul
cmp
pop
mov
fistl
loop
jmp
add
dec
bts
and
dec
sbb
xchg
adc
lea
fiaddl
and
mov
jecxz
sub
lret
xor
aam
stc
dec
inc
mov
sub
xor
repz
loope
ja
dec
call
xor
jo
xchg
xor
cmpsb
imul
pushl
aaa
sahf
add
cmc
loopne
scas
adc
outsb
sbb
add
pop
notb
inc
dec
xor
xchg
cld
insb
xchg
insl
push
xor
and
cmp
jp
dec
sub
push
shl
cmp
ss
mov
or
jbe
inc
jmp
jg
inc
mov
shl
or
orb
test
in
je
pushf
mov
divb
ret
in
imul
aam
mov
pop
cmp
hlt
sti
jle
ret
loopne
jmp
mov
in
enter
aas
loopne
cpuid
outsl
fdivrs
or
out
divb
cmp
push
mov
push
sbb
xchg
sbb
jnp
add
adc
pusha
sarb
mov
cld
leave
or
dec
mov
mov
mov
or
push
mov
icebp
push
jno
or
cmp
inc
jmp
push
cmp
dec
add
out
fisttpl
lods
xor
shlb
rol
xor
sbb
test
sub
or
cmp
adc
pop
lea
mov
mov
sub
rorl
shrl
leave
sub
outsb
jbe
fld
lcall
and
cmp
je
or
lods
mov
in
sub
add
or
loopne
subb
inc
lods
bound
sbb
adc
inc
imulb
inc
cmp
push
adc
int
mov
adc
lahf
mov
gs
fstps
adc
xchg
sub
cs
out
adc
out
loopne
mov
pop
insb
mov
sti
out
test
rorl
mov
push
pop
dec
adc
into
jmp
push
or
test
xchg
dec
bound
mov
jmp
and
shlb
mov
cmp
sub
cli
mov
add
sbb
dec
popf
outsb
inc
and
push
shrl
mov
lahf
xchg
lods
or
mov
push
cmpsl
pusha
cmc
or
fidivl
je
and
stc
fwait
adc
pop
add
movsl
aaa
aaa
cmp
orl
lock
mov
outsl
dec
adc
nop
shlb
aad
sahf
je
push
pusha
and
xchg
pop
out
sub
or
outsb
fisubl
mov
xor
mov
nop
xor
add
mov
mov
jecxz
lods
push
aam
movsl
push
pop
push
fnstcw
lods
imul
imul
jp
lock
ret
sahf
ss
cltd
dec
push
or
hlt
or
pop
call
xor
push
push
daa
or
mov
inc
xchg
dec
adc
pop
ret
push
pushl
leave
movsb
jne
dec
cmp
cmc
testl
shll
aaa
fldl2e
dec
mov
add
cmp
hlt
inc
and
push
in
jge
aaa
cld
xchg
int
and
xor
mov
test
leave
jae
sti
sub
std
sbb
mov
aaa
or
mov
or
xor
add
dec
adc
xor
or
dec
xor
fidivl
daa
sub
xor
add
xlat
icebp
xchg
bound
xor
sub
add
arpl
xchg
in
movsb
lods
inc
dec
push
dec
mov
int3
jae
divl
arpl
xchg
jg
stos
divb
shl
mov
pop
sbb
stos
push
push
inc
aad
sahf
push
pop
fwait
or
popa
mov
jnp
adcb
clc
dec
pop
push
aam
xchg
xchg
jo
aad
jmp
xor
iret
popf
cmp
mov
adc
mov
leave
cld
imul
test
sbb
sub
and
adc
data16
push
in
ret
xchg
push
and
vpaddw
mov
fldl
sbb
ret
sbb
mov
fsts
xchg
jg
int3
ret
test
jp
or
test
daa
ret
xor
xor
mov
in
pusha
not
push
fimuls
jmp
dec
sarb
inc
das
out
cs
sbb
fs
add
out
gs
add
push
ds
fwait
push
add
movsl
adc
push
stos
jns
imul
inc
push
aad
push
xor
xchg
sub
mov
insl
jbe
orl
movsl
ret
add
sub
xchg
out
cmp
cmp
mov
movsb
fstpt
adc
repz
push
or
or
clc
int3
add
imul
or
in
sbb
or
test
pop
mov
jae
and
mov
adc
jbe
ljmp
inc
cwtl
jne
mov
dec
xchg
push
scas
test
pop
into
inc
cld
adc
mov
add
shrl
aad
ret
pop
pop
add
movsb
push
lods
pminub
fsubl
xchg
lods
jle
inc
mov
jb
xor
cmp
dec
pop
outsl
lds
push
mov
xor
inc
fwait
mov
dec
jae
into
push
testb
inc
pop
cmp
mov
sbb
fwait
aaa
push
lahf
popw
outsb
add
and
mov
mov
fsts
fsubl
lea
aam
mov
lahf
jmp
adc
dec
adc
call
call
adc
xchg
cmp
aaa
jo
sub
xchg
int
leave
fwait
pop
addr16
mov
sbbl
or
pop
pop
addl
mov
loop
in
sbb
shrb
xchg
xor
popa
adc
pop
rol
dec
incl
xchg
dec
or
sbb
sub
cmc
xchg
adc
and
int3
xchg
sub
js
int3
jo
dec
dec
adc
pusha
mov
les
xchg
popf
icebp
sti
mov
mov
stos
pop
daa
stc
stos
cmp
imul
imul
std
lods
push
nop
push
jecxz
and
inc
add
dec
mov
inc
or
and
fidivrs
push
mov
ds
imul
js
fmull
mov
lea
dec
add
and
add
xchg
mov
pusha
andb
inc
iret
mov
jle
inc
inc
pop
xor
data16
mov
inc
or
ret
mov
inc
inc
out
push
mov
jmp
ficoml
xchg
insb
lea
adc
push
jo
sbb
cmp
jb
dec
dec
xor
xchg
cli
mov
shll
or
filds
and
mov
cmpsl
push
mov
push
iret
daa
pop
push
mov
fsts
leave
lahf
imul
dec
cmc
mulb
orl
mov
mov
fsubrs
arpl
push
fadds
jg
je
out
pop
mov
aam
push
mov
in
push
push
pop
fndisi(8087
or
popa
adc
and
loopne
sbb
add
stc
insl
adcl
jecxz
adc
idivb
stos
aas
iret
pusha
stos
cltd
cmp
divb
out
aam
lea
in
shl
push
dec
divl
cmp
add
cmp
inc
into
loopw
adc
push
out
pusha
mov
sub
bound
dec
sahf
pop
sbb
pop
in
adc
push
add
or
mov
adc
vcvtss2sd
or
cmp
jae
test
rcrb
call
orb
loop
or
fildll
mov
mov
mov
sub
push
inc
addr16
loope
cmc
xchg
loop
add
push
ret
xchg
iret
push
mov
sub
fisubrl
xor
call
push
inc
test
mov
int3
pusha
repnz
sub
jns
inc
adc
push
pushf
add
leave
test
and
and
dec
aam
push
dec
mov
cmp
dec
and
jo
cmp
jae
lock
push
filds
sub
loop
fwait
lods
cmpsl
xor
mov
mov
mov
lcall
mov
inc
sub
rorl
cmp
test
mov
imul
dec
add
lock
push
data16
imull
xchg
pop
jns
stos
stos
into
push
mov
outsl
daa
imul
mov
test
ljmp
shr
shrb
gs
sbb
stos
add
cmp
sbb
xor
push
mov
in
jge
stc
dec
push
loopne
push
inc
int
sub
dec
add
dec
lods
in
ret
fbld
adc
test
fildl
pop
and
rorb
pop
mov
fprem
adc
sub
stc
pop
addr16
sub
jae
xchg
pop
outsl
add
xor
enter
es
pop
stos
stos
lahf
add
cmpsb
test
sbb
fisttps
insl
lods
dec
jae
adc
push
push
mov
inc
xorl
das
push
and
adc
bound
popf
xchg
sbb
jnp
cmp
jb
es
mov
or
fcmove
fnstsw
neg
lcall
stos
pushf
mov
call
out
scas
adc
ds
inc
popa
mov
inc
cmp
adc
mov
mov
cmpl
mov
lods
outsb
and
push
add
jne
jmp
sbb
push
fimull
and
mov
mov
and
sub
fisttps
xchg
push
pop
sub
scas
repnz
mov
push
or
add
arpl
movsl
sbb
shl
enter
xlat
inc
les
jl
push
outsb
mov
sahf
rcrb
mov
xor
push
in
arpl
push
jmp
push
jnp
sbb
sbb
xorb
mov
setl
jno
cld
mov
xor
in
repz
shl
ret
pop
bound
mov
add
pop
and
add
insb
sub
mov
bound
xchg
and
xchg
pop
sbbl
rol
ffreep
xchg
push
mov
cmp
sbb
ficoms
insb
iret
cmp
test
sbbl
jo
es
pop
inc
ja
cld
dec
push
outsl
sbb
ret
addr16
aas
or
lods
sbb
je
jg
aas
cmp
popf
cmp
notl
pop
and
mov
mov
mov
sbb
test
call
fs
mov
or
loope
push
xchg
in
jecxz
xor
dec
push
or
or
scas
test
sub
mov
mov
pop
jbe
popw
jno
cltd
les
adc
xchg
cmp
sbb
rorb
sbb
cld
loopne
mov
ljmp
xor
popf
testl
fmull
rcll
in
mov
adcb
sbb
cltd
jge
mov
mov
jle
mov
repz
leave
ror
or
shll
sahf
mov
jns
mov
call
mov
faddl
mov
cmp
xchg
call
dec
addb
xchg
lahf
loopne
cmp
jg
cmp
gs
adc
and
mov
or
mov
push
imul
and
or
xor
jmp
in
fsubs
push
sub
fstpt
pusha
popf
ja
sub
inc
xlat
adc
lea
pop
mov
cmpsl
scas
out
bswap
aas
fucomp
mov
mov
outsb
iret
or
jmp
repz
test
xor
rcl
cltd
push
jne
or
inc
push
jecxz
mov
popl
repz
out
mov
add
je
or
shrl
ss
jns
loopne
xor
sub
dec
rorl
jns
dec
fnstcw
cmc
testb
fisttpl
cli
pop
pop
jl
mov
repnz
push
cwtl
xor
int3
ret
mov
aas
inc
loope
push
sub
lret
jns
rcl
jmp
pop
popf
sahf
lret
sahf
dec
sub
push
push
andb
scas
dec
mov
sbb
jne
adc
push
fsubrs
cltd
jl
data16
test
add
sti
pop
cmpl
mov
fstpt
pop
add
aam
insb
mov
rcrb
cld
lret
pop
shlb
lcall
cmpsl
push
lahf
or
or
inc
push
jmp
sub
les
jne
scas
out
xor
fiadds
fiaddl
adc
mov
push
lret
mov
in
std
cmp
lods
xor
ja
dec
cmc
mov
jb
inc
fdivr
push
popa
dec
and
pop
adc
sub
cmp
out
test
push
inc
ret
jmp
les
ja
adc
or
mov
lea
imul
xor
mov
scas
pop
daa
aas
adc
je
xor
stos
mov
sbb
mov
or
popf
call
sub
fcmovnb
fmuls
pop
pop
fiadds
adc
test
mov
ffree
pusha
mov
ret
mov
cli
lret
inc
sbbl
pusha
mov
mov
int3
xchg
popa
fst
push
addr16
cmc
in
mov
pop
xor
lock
sbb
movsb
call
ds
leave
shll
dec
inc
ljmp
mov
mov
ds
in
imul
scas
xlat
mov
jp
dec
add
adc
lret
cs
xor
les
cwtl
lea
push
aas
and
rclb
push
out
xchg
int
mov
xchg
xchg
lea
int3
and
sub
jmp
pop
mov
and
cmp
addr16
test
jno
push
rorb
cmpsb
mov
out
cmpsb
or
fxch
jl
xorl
mov
std
jmp
sub
rolb
mov
ret
mov
add
mov
test
lahf
enter
cld
pushf
xlat
xor
sub
aas
push
sub
lret
repz
xchg
dec
in
xchg
xor
cltd
xchg
iret
ljmp
outsb
jle
test
push
inc
inc
sub
dec
adc
dec
in
aas
cli
std
or
push
pop
cmpsl
rcll
enter
jl
mov
int
push
call
dec
pusha
mov
movsb
aaa
mov
cld
add
cmpsb
dec
sub
hlt
dec
in
shrl
xchg
lds
xchg
sbb
dec
mov
sub
and
xor
inc
in
mov
xchg
in
test
into
dec
popa
loopne
repz
mov
into
push
cmp
add
mov
mov
inc
sbb
mov
lcall
add
es
mul
or
je
add
outsl
mull
lds
mov
es
insb
out
sbb
in
sbb
add
cltd
inc
sbb
xor
mov
dec
xor
addb
in
dec
pop
mov
xchg
pushf
push
jb
movsb
das
cmp
sbb
aad
jge
dec
add
xchg
ss
add
stos
jns
push
loopne
repz
mov
insb
scas
roll
call
testb
adc
add
push
fwait
jl
push
cmp
add
jbe
cmp
ss
dec
movsb
dec
cmp
jle
pop
ret
inc
mov
fidivs
sub
pop
iret
xchg
mov
aaa
ss
fwait
ljmp
cld
sarl
pop
jae
sbb
xor
lock
add
inc
not
fsts
hlt
scas
cmc
in
or
cmp
xchg
lods
out
call
push
jecxz
push
xchg
repz
mov
inc
mov
push
test
or
adc
sahf
stos
pop
cmp
ret
and
push
cmp
xor
mov
mov
nop
sbb
mov
dec
xor
stos
xor
cmp
ret
add
inc
add
adc
pop
and
mov
pop
sahf
inc
cmpsb
mov
xchg
sbb
mov
dec
jg
orb
movsl
test
rep
hlt
mov
pop
es
and
xor
je
jb
ds
mov
mov
adc
fs
jecxz
add
data16
dec
adc
pop
cmp
or
or
mov
adc
cltd
inc
arpl
ret
gs
lds
sub
mov
lahf
pop
dec
int
mov
jo
jmp
inc
aam
mov
call
scas
jmp
fsts
arpl
outsl
scas
sbb
inc
and
loop
mov
pop
fdivrl
repz
xchg
inc
lds
arpl
fucomi
cmp
and
mov
pop
fdivl
xor
aam
movb
inc
inc
and
xchg
aaa
push
inc
je
and
push
add
shll
sbb
pop
adc
divb
mov
dec
xchg
xchg
popa
lea
ud0
pop
mov
scas
xor
jg
or
push
or
outsl
aam
sub
fmul
shr
call
mov
jnp
mov
inc
xchg
aam
gs
xor
sub
xchg
jne
sub
pop
incb
adc
sub
in
pop
mov
insb
xchg
push
cmp
jne
in
pop
mov
adc
or
xorl
ret
pop
test
pusha
inc
cld
dec
out
cmp
in
lods
push
jo
cmp
fs
push
imul
cs
imul
lea
pop
push
cmpsb
or
adc
loop
xor
aaa
push
lcall
fmull
add
adc
sbb
insl
testl
mov
dec
imul
loopne
jge
inc
dec
dec
outsb
lret
mov
sub
outsb
xor
mov
jmp
and
xchg
jae
push
insb
jmp
pop
out
xchg
xchg
dec
arpl
rorb
pop
add
cltd
add
mov
inc
jp
inc
les
je
xor
xchg
subl
inc
test
popa
or
xchg
rcl
scas
repnz
or
pop
push
jb
in
inc
xchg
dec
fcmovu
jnp
sti
bound
call
adcb
push
mov
add
sub
push
mov
mov
mov
cmpsb
insl
cmp
jnp
fcmovnb
fwait
dec
loopne
test
cmp
jb
inc
mov
jg
loopne
insl
pop
cmpl
mov
popa
add
fisttpl
adc
les
push
sarb
jnp
rcll
sub
iret
mov
shrb
insl
push
int
in
fcmovnu
fidivs
push
mov
lock
pop
imul
iret
xor
js
int3
das
pop
push
inc
js
in
pusha
cli
dec
pop
insl
aaa
jno
mov
pop
int3
push
fs
adc
pop
repnz
and
test
lock
loop
push
mov
sbb
cmp
mov
cmpsl
adc
stos
lods
and
inc
jns
pop
lahf
rclb
pop
mov
lds
cmc
in
dec
adc
cs
fcoms
cs
icebp
pop
popf
bound
mov
testb
movsb
cmp
ret
pop
xor
ss
sbb
push
mov
mov
jmp
leave
pop
sbb
push
jle
pop
pop
ja
sub
mov
cmp
xor
xor
lret
popa
adc
push
cmp
cli
movb
jecxz
ror
push
mov
pop
addr16
sbb
scas
mov
dec
cmpsb
jo
adc
inc
push
fbld
and
push
inc
pop
pop
xor
arpl
jl
sbb
call
pop
jecxz
ficoml
lods
inc
fnstenv
sub
adc
or
cmp
push
scas
stos
jns
sar
stc
movb
das
or
lahf
push
sub
dec
das
push
sti
cwtl
fs
test
sbb
sbbb
loope
add
or
fdivrl
adc
bound
stos
fcoms
sub
fbld
pop
fdivrs
push
cmpsb
or
pop
cmp
push
enter
mull
cmpsb
rorl
call
or
jae
scas
pop
lret
and
mov
test
mov
in
aas
inc
out
fiaddl
aam
cli
push
pavgb
repnz
out
and
ffreep
std
ficoml
sub
or
push
aaa
mov
jmp
imul
cmp
in
imul
cld
movsl
daa
cwtl
ljmp
pushf
jnp
popf
push
mov
enter
jg
xchg
pop
dec
cmp
xor
xor
sub
xchg
cltd
ss
xor
jmp
jb
sbb
test
daa
dec
out
cmpsb
xchg
cwtl
push
loopne
sbb
arpl
fwait
add
pop
test
loopne
pop
shlb
sbbl
test
lret
mov
and
lret
push
stc
adc
and
jecxz
sub
jge
push
adc
or
gs
xor
aad
push
sub
inc
dec
scas
mov
or
push
pop
adc
das
pop
int
neg
aaa
pop
xchg
sub
add
nop
cs
xchg
and
dec
jg
sub
in
mov
and
montmul
cmpsb
xchg
lahf
lea
mov
sahf
stc
std
cmp
sahf
filds
xchg
push
fistps
mov
xor
lods
in
or
push
lods
std
leave
rcll
addr16
loope
out
or
pop
clc
push
je
pop
sbb
outsb
icebp
mov
punpckhbw
shrl
daa
mov
in
dec
out
mov
jl
inc
mov
outsl
in
and
pop
mov
lret
pop
mov
jge
push
add
xlat
pop
std
xchg
mov
arpl
cld
add
sbb
lds
shrb
scas
jbe
sbb
jmp
adc
icebp
mov
inc
adc
test
dec
push
shl
inc
jae
jns
xor
mov
loope
into
push
add
ds
rcr
daa
in
sbb
push
iret
jp
inc
or
jl
ljmp
enter
test
ds
stc
lock
insb
add
mov
cltd
add
mov
ss
mov
xchg
jns
sub
jmp
dec
push
cmp
cmc
and
es
sbb
popa
adc
test
or
or
jnp
push
cli
lock
dec
aad
push
mov
xor
mov
xchg
adc
add
std
mov
push
shlb
xchg
xchg
or
jo
dec
inc
mov
xchg
stos
orl
cmp
inc
and
outsb
push
dec
icebp
test
mov
psrlw
xchg
imul
mov
in
inc
enter
data16
xchg
das
xor
mov
mov
fldcw
popa
imul
push
fidivrl
mov
cld
rorl
inc
je
push
dec
cwtl
cs
adc
mov
xor
jb
sbb
xor
cmpsb
ds
pop
shll
mov
out
push
movsl
jns
daa
adc
dec
push
add
adc
push
inc
xchg
dec
add
inc
xchg
out
xor
dec
adc
xchg
xchg
sahf
aam
and
add
cs
cmp
outsl
xchg
sbb
sti
cmpsl
mov
bound
xor
subl
rclb
lods
cmp
mov
negl
clc
mov
dec
inc
sti
inc
outsb
push
fimuls
sub
mov
xchg
stos
out
inc
jecxz
jnp
popa
repnz
dec
xor
xchg
inc
aaa
ret
js
pushf
pop
mov
push
adc
mov
loop
cmp
push
pushf
sbb
iret
xlat
bound
mov
pop
mov
test
lds
out
or
bound
mov
add
enter
inc
add
add
push
lds
les
cmp
pop
mov
mov
lds
or
add
dec
push
sub
inc
xor
or
aas
cmp
mov
cld
inc
cmpsl
mov
adcb
mov
inc
jb
movl
test
adc
inc
cmc
xchg
mov
fiadds
xchg
mov
aas
mov
add
jo
xchg
fucomi
sbb
aad
shr
in
adc
or
or
push
sti
aas
pop
jb
pop
xchg
lock
cmc
jge
loopne
xor
or
icebp
outsb
enter
in
enter
js
lods
jecxz
xchg
in
fcompl
into
adc
jns
jno
lcall
adc
mov
add
int
inc
mull
and
xor
cmpb
sbb
int3
repnz
in
xchg
lcall
dec
lds
fcmovbe
popa
xchg
mov
jmp
add
loope
arpl
mov
xor
test
mov
inc
jnp
bound
push
adc
jle
out
jg
inc
or
push
iret
or
sub
sbbl
negb
cs
ror
es
popa
pop
xchg
mov
mov
push
call
sahf
fldenvs
cltd
lcall
jle
in
mov
sbb
cmpl
out
adc
push
jge
xchg
fsubrs
jge
pop
movsb
dec
dec
fiadds
test
cmp
sbb
test
out
dec
jl
decb
movsb
sub
add
aad
lds
fs
popa
mov
and
fsubrl
imul
ds
ss
lea
and
mov
leave
lock
push
or
mov
mov
mov
scas
mov
xchg
sub
out
fs
xlat
imul
sti
mov
and
das
lcall
push
scas
xchg
popf
push
js
test
xor
cli
adc
adc
and
inc
mov
mov
jno
cmp
lds
sub
cltd
cmp
fucomip
cmp
mov
aam
xor
adc
push
call
fs
or
or
test
jle
push
out
mov
cmp
imul
cltd
adc
nop
xorl
aam
jb
lds
cmp
and
insb
pop
mov
mov
aad
stc
mov
enter
pop
xor
push
testl
loopne
jno
xor
test
push
ss
dec
rcll
inc
es
dec
lods
sbb
js
sub
sti
das
mov
and
icebp
ljmp
mov
out
push
ja
push
inc
xchg
xchg
push
jl
jecxz
pop
or
orb
into
rclb
cltd
fidivrs
hlt
pop
mov
mov
shrb
adc
xor
leave
inc
inc
pop
shr
das
xchg
sub
push
out
dec
cmp
push
jne
shl
adcl
add
inc
repz
jmp
mov
aam
fdivr
fnstenv
test
mov
pop
addr16
pushl
fistpll
push
es
xor
adc
sub
out
sbb
das
std
imul
rcr
or
xor
mov
mov
mov
mov
add
xchg
clc
imul
rcl
inc
and
insl
es
xor
fildl
clc
cmc
xchg
cli
in
jg
rolb
scas
jl
enter
jno
inc
dec
xchg
pushf
repz
scas
push
stos
std
inc
dec
sbb
sbb
and
inc
andb
pop
pop
rorl
xor
mov
xchg
dec
pusha
cltd
std
dec
fmulp
mov
jl
stos
or
rep
rorl
xorl
pop
cmpsb
pop
jae
mov
sub
and
sub
mov
push
push
das
shr
inc
jl
into
pusha
mov
stos
test
cmp
dec
sbb
xchg
pop
dec
ljmp
xchg
push
lahf
xchg
xchg
repnz
neg
add
ret
dec
or
cmp
mov
mov
mov
or
mov
jnp
mov
sub
xchg
sub
fldenv
jne
pop
and
cmpsl
and
mov
outsb
add
leave
or
testb
call
inc
fs
xchg
sub
icebp
xchg
daa
pop
into
fs
push
jle
sbb
arpl
mov
sahf
and
xor
addl
lods
mov
mov
shlb
ss
stos
lods
mov
mov
loope
in
or
outsl
xchg
push
sti
jne
xor
jge
popf
inc
jge
std
hlt
mov
lock
icebp
mov
out
sti
filds
js
jle
dec
in
fld
add
push
cmp
icebp
fdivs
mov
cmpsl
ret
in
jb
fistpl
repnz
fstpl
and
cmp
cmp
cwtl
xor
insl
sbb
ficomps
xchg
adc
xchg
sub
mov
adc
in
cmp
roll
add
mov
fsts
andl
sub
data16
sti
enter
in
sbb
mov
inc
sub
push
jno
out
xor
dec
pop
push
sbb
or
sbb
clc
pusha
xchg
push
pushf
xchg
fists
xchg
in
push
or
mov
jmp
pushf
dec
push
pop
jbe
lock
stos
in
movl
nop
sti
and
lret
out
mov
push
mov
aam
pusha
sbb
nop
vsubpd
das
jmp
xor
mov
mov
mov
xchg
add
xlat
xor
aam
lret
in
arpl
mov
test
lods
push
push
mov
in
xchg
into
addr16
jb
dec
out
dec
mov
add
lods
adc
xor
outsb
xor
cmpsb
push
and
xor
xchg
jle
loopne
test
mov
dec
cmp
fnstcw
xchg
rolb
sbb
adc
mov
ss
fldl
xor
mov
jnp
std
xor
push
jmp
mov
add
pop
and
mov
sbb
inc
cmpsb
add
cwtl
push
jecxz
clc
add
adc
scas
repz
inc
jmp
andl
mov
fcompl
es
push
rcr
clc
bound
and
push
pop
insb
mov
xor
and
push
sbb
xchg
lcall
es
sub
mov
popf
in
push
outsb
pop
ret
or
lahf
pop
nop
je
adcb
outsb
test
push
and
jl
adc
leave
cmp
sub
adc
adc
mov
xchg
fisttpl
mov
pop
test
rorl
rclb
and
outsb
test
insl
mov
in
push
inc
ret
and
or
fs
xchg
dec
pushf
addb
push
jae
pop
add
lret
lcall
and
mov
add
adc
es
mov
clc
cmp
push
call
push
sar
mov
push
das
jl
mov
aaa
dec
or
jae
sub
in
outsb
mov
dec
test
test
pop
repnz
es
push
cmp
push
cmp
or
xor
mov
push
mov
cmp
mov
fs
push
call
and
outsl
push
and
imul
xchg
jo
out
mov
lds
mov
lret
dec
adc
leave
test
outsb
lea
push
sti
test
dec
push
out
iret
pop
pop
mov
icebp
mov
mov
jl
sub
or
mov
sbb
sbb
mov
xchg
scas
popa
repnz
jo
pop
sub
push
movsb
sahf
dec
add
push
cmp
rcrb
das
adc
sbb
shlb
ror
insl
rcrb
cmpsl
sarb
lods
sbb
xchg
xor
jb
dec
jl
jp
inc
sarb
icebp
es
inc
cld
mov
or
call
pextrw
daa
icebp
cmp
stos
xlat
movsb
addr16
jecxz
mov
loop
cmp
pop
stos
and
push
jecxz
push
cmp
test
lret
mov
fwait
mov
fists
mov
xchg
popf
stos
or
mov
add
roll
movsb
repnz
ret
std
xchg
sub
in
sub
inc
sbb
mov
addr16
cmp
mov
xor
push
and
ljmp
fsubrs
notl
pop
sbb
jbe
push
ja
mov
shrl
pop
sbb
mov
stos
es
lods
fsubl
jmp
mov
pushl
loope
stos
ds
xor
lret
or
lods
insb
test
inc
xchg
xor
push
data16
dec
add
mov
fistps
xor
add
clc
or
inc
adc
cmp
adc
pop
sub
push
sbb
cmpb
test
out
stc
stos
sbb
cmc
das
cmpsl
pop
stos
or
out
mov
lods
mov
es
or
pop
enter
dec
insb
repnz
stc
fiaddl
cmpl
and
sbb
xchg
aam
stos
ja
ret
cld
mov
pop
adcl
ret
cmc
in
dec
push
outsl
ds
imul
jmp
xchg
push
shrl
xchg
repz
out
jmp
mov
jmp
cmpsl
rolb
pop
lret
xchg
outsl
add
inc
push
pusha
add
or
out
jns
adc
mov
lods
out
cmp
stos
mov
into
divl
cld
inc
xchg
jecxz
jmp
or
icebp
lds
sub
or
jns
mov
jp
lcall
out
dec
lods
lcall
and
cs
shll
push
insb
loopne
dec
fisttpl
in
nop
pop
setne
pop
int
mov
cli
lcall
dec
leave
dec
cmp
mov
scas
call
daa
test
dec
cli
fistpll
incl
pop
enter
std
lods
ficoms
cld
ror
mov
cmpsl
xor
movsl
xor
or
dec
insl
pushf
test
cmp
jno
xchg
xchg
sbb
mov
test
push
fstl
testl
and
or
xor
js
jle
sbb
sub
and
fistpll
pop
adc
das
cmp
add
sub
mov
mov
xor
xor
adc
and
mov
or
es
pop
mov
add
adc
inc
or
jno
mov
or
jbe
sub
jg
ret
cmpb
jno
mov
stos
push
adc
jg
mov
pop
jno
jmp
fsubrs
cmpsb
rcr
mov
sarb
cmc
lret
test
adc
aaa
jge
xor
jg
lret
outsb
inc
iret
ret
pxor
rcrb
shrl
gs
adc
lds
dec
inc
inc
jecxz
sub
sub
mov
jns
xor
pusha
in
add
or
cmpsl
mov
jge
in
lcall
hlt
outsb
aad
push
in
pop
mov
ds
shlb
fistpl
into
addb
lock
hlt
push
cli
andb
sbb
pop
test
or
jno
push
sahf
pushf
jbe
or
inc
mov
cli
movsl
xchg
scas
mull
sbb
adc
incl
jae
push
cli
aas
and
dec
adc
data16
das
or
cmc
ljmp
stos
adc
ret
or
aad
mov
js
loop
dec
xor
adcb
fidivl
mov
bound
push
sti
pusha
mov
fsubs
out
push
repz
lods
and
jmp
lds
testl
sahf
orb
cmp
fdivs
xchg
scas
lret
adc
mov
sbbb
push
enter
mov
fisubrl
jb
ljmp
movsl
jo
push
sbb
dec
and
mov
jp
sarb
seto
cs
push
adc
popf
imul
inc
adc
add
mov
mov
and
mulb
lahf
mov
fcomp
adc
hlt
add
lock
push
mov
mov
xor
mov
jo
adc
or
shr
popf
add
pop
aam
mov
test
mov
mov
data16
xor
inc
and
and
sbb
cmp
jge
test
mov
or
cmp
pop
test
lret
and
cmpsl
lods
not
mov
movl
sbb
mov
cmp
pop
ret
pop
or
lret
scas
mov
aam
call
jmp
mov
cld
fnsave
dec
out
je
xchg
bound
sub
mov
stos
mov
xor
test
idivb
push
cmp
pop
shlb
pusha
rorl
mov
xlat
jmp
push
std
xor
jbe
int
mov
pop
and
pop
sbb
sbb
sbb
addr16
movsb
mov
mov
cmp
repnz
mov
test
xchg
icebp
push
mov
sbb
pushl
jp
dec
aad
dec
orb
mov
xor
cmp
lcall
sbb
std
call
mov
jnp
pop
push
cmp
add
lds
jle
push
outsl
pop
roll
mov
lods
loop
add
pop
pop
dec
je
push
push
cld
pusha
fmuls
push
popl
sub
incl
jg
jae
jmp
dec
and
inc
sbb
xor
ja
dec
ret
aam
push
dec
leave
sbb
dec
push
jb
push
push
dec
popa
mov
mov
daa
es
repnz
sbb
xchg
test
mov
push
int
jno
std
lcall
lock
mov
or
push
cld
insl
arpl
pop
xchg
fidivrs
fs
cli
out
loopne
leave
xor
into
adcl
int3
adc
push
mov
call
sbb
mov
jecxz
xchg
sti
jno
loopne
mov
lods
lahf
pop
and
rcl
movsb
dec
push
outsb
pop
sbb
mov
pushf
mov
mov
fwait
and
xchg
sti
xchg
outsb
lods
or
lods
enter
in
pop
add
stc
push
lret
add
inc
inc
cli
adc
imul
push
xor
pop
fistpl
insb
fisubl
das
dec
push
pop
cwtl
mov
popf
mov
dec
js
cmp
sub
std
loopne
rcrb
divb
maskmovq
negl
sbb
fldl
andl
and
nop
ja
cmc
push
dec
push
push
aas
gs
test
jecxz
mov
cli
push
je
inc
sbb
jnp
or
mov
pop
orl
clc
mov
pop
mov
mov
pop
and
cmp
or
ljmp
pop
filds
out
or
push
fnstenv
or
push
iret
repnz
pop
es
lret
push
aaa
insl
es
sti
scas
in
daa
mov
test
jbe
jecxz
xchg
loop
test
xlat
jmp
sarl
mov
pop
mov
pop
fistl
xchg
sbb
lock
fidivrs
mov
adc
scas
xor
aad
and
mov
dec
sub
jle
mov
fidivrl
mov
adc
loop
mov
sarl
cs
ret
mov
sub
pop
fsub
movsl
jnp
stos
shl
jb
sar
pop
xchg
test
sbb
and
cmp
adc
xchg
data16
test
es
and
aaa
mov
mov
ds
std
jecxz
pushl
sub
out
lret
test
pusha
jge
testl
push
or
jle,pn
fnsave
mov
stos
imul
and
dec
xchg
inc
push
notl
sbb
cli
pop
dec
cmp
xlat
mov
dec
and
into
or
cmp
cmc
je
testl
insl
xchg
into
inc
jmp
add
and
inc
pop
loop
or
dec
push
push
add
dec
cmpsl
sbbl
ficoms
cmpsb
xlat
jbe
mov
test
jno
test
aam
les
inc
insl
sahf
jmp
sub
push
enter
mov
dec
mov
sub
jns
dec
loope
xor
pop
lret
repz
and
push
mov
into
pop
xchg
inc
mov
adc
adc
orb
push
into
mov
push
lods
sub
jb
mov
dec
push
in
adc
xchg
fcoms
pop
in
sbb
test
cltd
mov
movb
in
push
xchg
or
sbb
imul
mov
rcrl
xor
repz
cmp
cmp
mov
repnz
out
shlb
out
inc
rcrl
add
aas
mov
jle
mov
mov
insb
out
je
dec
mov
sub
sub
xor
insb
fidivs
add
or
mov
push
popf
popf
and
mov
outsb
rcrb
outsb
ljmp
push
nop
xchg
das
mov
dec
add
enter
jle
inc
fdivp
mov
outsl
test
mov
sub
mov
icebp
int
dec
mov
mov
test
push
into
jmp
add
jns
addr16
aam
imul
mov
daa
xor
int
push
test
outsl
int
add
imul
fisubrl
scas
lahf
push
mov
push
lea
sbb
fisttpll
loope
not
inc
adc
rolb
ss
add
jno
jb
popf
mov
xchg
sbb
mov
clc
sub
sti
aas
aaa
jns
pop
scas
in
movb
dec
xchg
cmp
clc
outsl
dec
mov
scas
xchg
add
adc
pushf
int
push
add
jne
das
les
lods
add
xor
movsl
iret
ret
loopne
jbe
mov
int3
inc
pop
dec
cmp
or
and
insl
mov
and
rclb
fs
pushl
rcrl
push
mov
cli
movsb
sbb
xor
lahf
pop
mov
sbb
repz
aaa
jns
leave
inc
jmp
mov
adc
repnz
mov
inc
sub
imul
mov
inc
pop
mov
jle
insb
in
in
mov
fstpl
inc
push
loop
mov
nop
iret
sub
shll
push
or
dec
sbb
shll
pop
push
out
sbb
addr16
ds
out
and
js
test
repnz
push
cltd
leave
xchg
fistpl
mov
push
lret
push
cli
cmc
or
sbb
inc
je
sub
push
loop
jp
fucomp
add
inc
pop
cmpsb
add
xor
test
adc
mov
cmc
xchg
push
out
in
lods
push
add
push
lcall
leave
popa
jl
jge
jecxz
mov
aad
and
cmpsl
inc
mov
and
adc
std
cmpsl
in
sbb
int
repnz
lods
inc
mov
nop
sub
idivl
stc
pop
pop
int3
dec
andb
dec
pop
test
outsb
xor
in
mov
cmp
inc
mov
inc
xchg
fdivrs
fucomi
mov
jge
cmc
fisttpl
es
jnp
xchg
pop
jg
subl
rcrl
add
mov
enter
daa
outsb
pop
xor
es
pusha
imull
sbb
xchg
push
arpl
in
outsb
push
pop
dec
pusha
fidivs
inc
int3
cmpsl
and
out
sbb
or
test
sbb
jmp
loop
enter
pop
push
fistps
repnz
and
outsl
hlt
cmpsl
push
lret
push
sub
jbe
ficoml
xlat
xchg
jg
fadd
mov
mov
addr16
les
dec
outsb
add
out
add
out
ret
inc
aas
fcoms
pop
push
xor
roll
jge
pop
fisubl
sbbl
push
ds
mov
lds
adc
pop
rol
adc
aaa
out
repz
sub
loop
sbb
or
in
inc
sbb
sbb
jb
mov
loope
pop
add
jmp
mov
rcrb
mov
cli
out
xchg
jge
mov
push
arpl
call
das
push
es
sub
mov
pop
shrl
sbb
cs
das
mov
adc
pusha
movsb
push
data16
in
add
mov
pop
inc
fdivr
hlt
mov
xor
and
cmp
andb
addr16
jmp
pmulhw
aad
sub
bound
and
stc
cmp
cmp
fidivrs
lock
popa
ds
int3
mov
mov
neg
frstor
stc
rorl
iret
xchg
dec
add
xchg
adc
dec
fnstenv
lret
mov
jb
adc
fsts
inc
aad
cs
jo
outsb
out
or
mov
jl
push
lret
mov
daa
sbb
shrl
cltd
pushf
add
sub
jno
sbb
push
int
jbe
dec
xorb
jle
testl
push
shll
loop
movsl
sub
jecxz
in
push
sahf
cmpsl
adc
pop
into
adc
fldt
rcr
loopne
pop
bound
mov
loopne
dec
pop
xchg
mov
addl
paddusb
and
movsb
cmpsl
lods
add
lods
pop
jle
outsl
ds
lret
push
cltd
aad
jae
loop
xor
sarb
cld
mov
pushf
popl
mov
and
xchg
pushf
in
inc
loope
xlat
jmp
and
sti
cmpsl
in
fwait
adc
xchg
mov
test
hlt
test
stos
jecxz
scas
xchg
aas
repnz
pop
nop
sub
or
xor
cmp
test
sub
pop
mov
mov
pop
mov
sahf
mov
aas
mov
xor
fcomps
loop
loop
inc
xor
lods
fistpll
nop
cs
ret
or
sub
pop
lahf
das
inc
pop
push
std
adc
xchg
push
mov
add
push
movsl
push
add
xor
pop
mov
add
and
mov
pop
cmc
xor
adc
cmp
aaa
sti
ret
pop
cmpsl
fwait
dec
push
ljmp
jmp
in
jl,pn
sbb
fwait
inc
jmp
jmp
jmp
rdtsc
add
ljmp
icebp
mov
mov
xchg
or
cmpb
jae
pop
dec
std
es
ds
arpl
xor
pop
lods
mov
fidivrs
out
nopl
cmp
cli
cld
scas
in
sub
mov
dec
adc
cmp
add
push
lea
dec
shll
push
push
pop
add
sub
and
push
shlb
popa
jne
mov
mov
pop
cmpl
pop
in
jns
and
sub
sbbl
cmp
arpl
or
inc
mov
pop
or
test
sahf
lds
arpl
mov
sub
divb
sbb
or
xor
repz
out
loop
xor
icebp
ret
ret
adc
shll
insl
movsl
dec
filds
push
sarb
dec
push
pop
rclb
in
stc
jl
mov
xchg
mov
or
mov
fidivrs
xchg
fcompl
mov
mov
cmp
inc
pop
mov
popf
test
sbb
bnd
call
loop
call
adc
inc
outsl
push
or
xor
cmp
or
dec
jle
lock
lret
xchg
lahf
sub
dec
or
inc
xor
aas
sbb
jno
mov
into
dec
pop
popa
inc
pop
test
pop
in
jne
mov
inc
jecxz
fsubl
insl
mov
cmpsb
xchg
fidivl
jp
sbb
dec
insb
fdivrl
xor
adc
mov
lea
aad
push
jne
dec
lahf
inc
popf
jne
pop
shll
jmp
out
pusha
xor
mov
in
aad
sub
mov
pop
add
cmp
leave
jge
out
je
xor
adc
add
mov
add
xchg
int
lret
std
and
negb
imul
sbbb
sbb
pop
mov
sti
sbb
push
lret
cmpsb
aaa
in
sub
lds
mov
sub
mov
bound
xchg
xchg
stc
xchg
mov
mov
pop
xlat
xor
sbb
and
mov
stos
gs
iret
hlt
test
shll
pop
push
xchg
jbe
mov
ds
or
cmp
popa
sbb
mov
jg
outsb
mov
das
fsts
dec
ficomps
daa
sub
test
sub
aad
pusha
fldcw
pusha
rclb
inc
xchg
sbb
in
xchg
dec
xor
in
or
cmp
push
mov
lret
inc
dec
in
jl
cmp
push
lock
xchg
adc
subb
xor
ret
cmp
sbb
addr16
js
cs
imul
xchg
adc
pop
rcr
call
leave
xchg
and
inc
add
shll
jbe
mul
cmp
dec
mov
dec
daa
and
adc
loopne
call
das
imul
cli
lahf
xchg
add
rol
pusha
mov
repz
test
inc
int3
mov
push
movsl
test
mov
lahf
imul
je
push
or
shlb
sbb
imul
pop
leave
inc
sub
cli
andb
into
dec
xchg
inc
insl
xor
xor
ficoms
and
push
xor
or
data16
xchg
jle
and
jecxz
fcoms
mov
add
mov
push
in
jnp
or
or
jno
loop
dec
or
fildl
sbb
cmp
fsts
mov
push
push
icebp
mov
enter
call
mov
aaa
mov
push
pop
int3
add
leave
push
or
cmc
clc
int
lret
sub
add
out
imul
pushf
cmp
add
sahf
enter
xchg
inc
adc
xor
adc
jle
xor
push
ficoml
cli
jae
push
pushl
adcb
mov
mov
sahf
push
xor
mov
pushf
sbb
xchg
rolb
arpl
in
and
push
loop
or
jbe
outsb
sti
not
negl
cwtl
cltd
lods
sbb
xchg
sbbl
scas
mov
dec
mov
aam
js
in
dec
mov
in
pop
mov
dec
rorb
mov
or
pop
inc
mov
inc
cmp
jns
mov
dec
push
lret
test
mov
and
dec
adc
ss
popf
pop
out
sbb
rolb
pop
push
popa
add
pushf
jmp
popf
aas
and
push
mov
and
bound
out
out
jge
sub
lods
nop
add
xchg
xchg
inc
mull
inc
loopne
jns
jle
inc
ljmp
xchg
push
xchg
cmc
aas
inc
shl
sti
testl
pop
dec
lock
mov
ret
decl
jo
push
push
mov
sbb
call
xor
cmp
shlb
shrl
inc
adc
shlb
loop
ret
pop
insl
mov
popf
mov
aad
fcoms
dec
add
or
and
or
popf
push
lret
ss
push
pop
or
loopne
sahf
insl
jp
mov
addr16
mov
pusha
lods
add
adc
lcall
iret
ljmp
mov
cmp
in
sbb
stc
push
mov
xor
pusha
xor
loope
xorb
push
lods
pop
sbbl
jle
lret
shrl
xchg
in
loop
cltd
sub
mov
or
inc
jne
and
cmpb
adc
jecxz
insl
inc
test
shl
ss
pop
cmp
fiadds
dec
jns
xor
insb
push
aam
inc
ja
in
fs
xorl
int
outsb
sbb
clc
repnz
push
adc
lret
xchg
sarl
or
pop
jb
push
jbe
das
pop
mov
scas
push
imul
push
aad
test
and
adc
call
sbb
subb
jbe
loop
ret
test
cli
xor
mov
and
push
ds
add
sar
imul
ds
sarb
mov
andb
cmp
ret
adc
push
xchg
dec
add
mov
lea
pop
inc
push
xchg
mov
jecxz
sbb
imul
dec
shl
mov
push
ror
push
adc
push
testl
dec
fidivrs
cs
addr16
cmpsb
and
pushf
mov
icebp
aas
mov
dec
jge
mov
sub
jmp
push
push
out
add
out
sub
cli
loope
insl
push
cmc
lahf
fisubrs
cmpsl
scas
inc
xor
repz
sti
pop
mov
icebp
das
test
fidivl
into
or
pop
inc
xor
lds
add
loope
out
or
in
ja
push
push
mov
hlt
pop
fcomps
and
sbb
lahf
jae
int3
sub
popf
mov
or
push
out
and
imull
into
mov
mov
sbb
or
ja
aam
rclb
loop
add
fisttpl
jns
jo
jb
gs
test
add
sub
insl
in
loope
push
repz
push
lret
sub
outsb
push
out
mov
mov
sbb
mov
sub
fs
or
scas
push
pop
addb
fisubrs
ja
aas
xchg
push
inc
jp
lcall
pop
sub
lds
repz
aaa
les
or
lods
sti
adc
rcr
sbbb
xchg
or
lods
xor
aaa
in
cmc
mov
and
sbb
dec
in
aad
imul
lods
jns
xchg
scas
jg
and
xor
shlb
insb
inc
stos
shlb
add
xchg
js
sub
popf
rcrb
push
sub
inc
add
ret
add
pop
adc
shl
xchg
stos
fldenv
and
sbb
loop
dec
jb
out
test
shrb
lea
repnz
imul
rolb
mov
stos
addb
pushf
lret
stos
dec
dec
bound
xor
cmp
xchg
add
adc
leave
in
mov
fisubs
fbld
rcll
mov
xlat
mov
jb
loope
jns
sarb
sbbl
rcrl
jne
cld
or
push
rolb
pushf
into
inc
hlt
jnp
sub
fldl
stc
nop
ja
or
xchg
mov
loope
mov
js
cmp
jo
scas
xor
shrl
mov
inc
cmp
jge
clc
ss
pop
imul
and
and
pop
xchg
shl
cmp
fcompl
xchg
push
mov
cltd
insl
loopne
or
push
cltd
add
push
sbb
pop
shrb
adc
ljmp
popa
int
pushl
cmpl
pushf
in
repz
mov
inc
insb
fcomip
imul
mov
adc
ds
int
mov
push
and
repnz
or
lret
add
dec
inc
ss
divl
enter
fisubrl
inc
dec
cmp
cli
adc
or
lea
cmp
xor
push
daa
or
mov
aam
sbb
stc
test
int3
fistl
int3
lcall
push
dec
jns
iret
adc
scas
imull
dec
lcall
adc
lds
pop
xchg
mov
lahf
push
sub
fisubrs
popa
push
pop
jmp
add
jb
sub
or
pusha
jecxz
push
mov
push
sarl
or
push
pop
jecxz
mov
push
rcrb
mov
nop
out
js
jmp
push
jl,pt
lea
test
daa
mov
cwtl
imul
jl
mov
lea
in
leave
sahf
hlt
stos
mov
jnp
mov
test
and
adc
movsl
sti
add
divb
pop
mov
and
mov
dec
lcall
jmp
sub
add
mov
push
sahf
mov
push
popf
xor
outsb
es
xchg
movsl
pushf
hlt
jno
mov
dec
mov
outsl
xchg
push
and
popa
adc
ret
inc
popa
mov
outsb
push
push
and
mov
mov
sbb
je
cli
in
out
xchg
daa
fmul
sti
mulb
push
sti
aad
push
dec
fildl
mov
leave
sub
sbb
and
aas
cli
mov
jp
in
sahf
lahf
pop
bound
stc
mov
adc
movl
add
imul
pop
cmp
fnstcw
aad
and
and
cmp
pop
mov
jo
mov
xor
stos
ret
dec
cli
or
cli
add
lea
mov
push
inc
in
testb
sbb
fnstenv
xchg
sbb
jne
mov
leave
mov
arpl
sbb
les
sub
shrl
filds
addb
xorb
std
imul
xchg
dec
mov
scas
mov
xor
test
dec
call
mov
adc
and
jge
inc
icebp
jmp
imul
xor
or
in
daa
cmp
xchg
adc
inc
or
outsl
outsl
mov
testb
mov
aam
fdivrl
cmp
test
inc
cmp
test
pushf
dec
outsb
mov
mov
dec
out
loop
cli
cltd
arpl
cs
mov
pop
xchg
xlat
insl
cmp
nop
imul
fcos
neg
addr16
testb
dec
lahf
jge
sbb
in
push
sub
jae
add
pop
lahf
imul
and
push
ljmp
hlt
inc
jl
jg
push
in
scas
jg
shrb
jae
push
imul
adc
out
push
inc
daa
fwait
push
incl
pop
shrl
es
mov
xchg
xor
xchg
cmpsb
cs
fs
faddl
sarl
shr
fs
mov
bound
add
shll
pop
xor
adc
dec
leave
mov
rol
lods
aaa
paddw
xchg
push
rcrl
and
push
outsl
int3
movsb
mov
sub
imul
or
or
mov
test
outsb
call
inc
and
or
icebp
shll
shll
mov
je
movsb
jecxz
jne
mov
jo
xor
out
sbbl
hlt
scas
ret
in
jne
xlat
iret
jecxz
lret
mov
ja
inc
cmp
frstor
push
mov
xchg
dec
lock
mov
mov
mov
inc
scas
jg
into
clc
sub
and
nop
jmp
ficoml
add
push
xor
lea
enter
loop
fs
mov
in
nop
jnp
cltd
lahf
adc
iret
and
fcom
add
imull
imul
jae
or
mov
add
out
in
ret
addr16
jmp
push
adc
mov
mov
bound
in
nop
xchg
dec
outsl
dec
leave
push
or
sbb
jo
mov
and
cmp
push
call
test
imul
aas
mov
mov
pusha
dec
push
bound
pop
out
cmc
or
add
pop
xorb
into
out
scas
fcmovu
out
sub
xchg
adc
adcb
ljmp
or
decl
fninit
fiadds
lods
pushf
mov
jbe
jae
scas
icebp
inc
adc
jo
lea
and
divb
mov
lcall
mov
xchg
push
and
jbe
push
jae,pt
test
jp
inc
sub
pop
pop
pop
mov
add
nop
in
cld
ret
dec
xchg
push
push
mov
lods
lds
mov
sbb
sbb
aas
pop
xor
leave
xor
jl
add
mov
push
mov
or
and
pop
lret
mov
fistps
jnp
dec
dec
dec
les
and
inc
call
cli
shrl
test
mov
int3
ret
cmc
inc
sbb
dec
cmp
gs
inc
cld
pop
out
xchg
push
cmp
sbb
lahf
mov
push
xchg
add
xor
in
into
add
jbe
ret
and
mov
dec
or
xchg
or
pop
ficoms
add
sbb
push
or
hlt
or
clc
lret
mov
and
dec
mov
dec
fisttpl
and
repz
popa
shl
out
push
out
xchg
enter
popf
sub
add
movsb
sti
mov
in
jmp
clc
inc
inc
lds
pop
push
stos
loope
popa
addr16
hlt
mov
pusha
pop
inc
cmp
mov
adc
sub
cwtl
negl
hlt
jge
dec
nop
lds
mov
sar
popf
inc
gs
jb
fwait
pop
lahf
pop
cs
dec
pop
out
and
add
mov
iret
dec
jno
inc
out
lds
rclb
into
shr
out
call
je
push
cmp
mov
lds
sbb
stc
popa
es
cmp
lods
dec
scas
mull
out
adc
roll
scas
in
cmc
test
sbb
sbb
jg
out
mov
mov
test
movsl
pop
daa
loope
sub
iret
pusha
xor
xor
mov
or
rcrl
adc
dec
xchg
cmp
out
scas
dec
ret
xchg
xchg
add
out
fimull
movsb
repnz
leave
sbb
sbb
jbe
fdivr
jp
andl
shll
and
aaa
inc
mov
das
in
mov
dec
fdivr
mov
cwtl
fimull
mov
int3
sub
rorl
jmp
in
cmp
into
sahf
dec
and
cmp
push
xchg
dec
pop
or
hlt
xor
cmp
xchg
in
mov
dec
and
into
pop
sbb
andl
cmpsl
push
sbb
es
xor
nop
sbb
cmpsb
pop
sub
fisttpll
testb
jle
scas
cmp
cmpsl
pop
pop
push
aad
lcall
mov
mov
cmpsl
sbb
mov
jle
mov
xor
test
clts
xor
xchg
mov
pop
pushf
mov
jg
call
std
push
jb
inc
adc
cmpsl
repnz
mov
dec
jns
mov
push
pop
jbe
adc
lds
int3
imul
jnp
test
inc
mul
pushf
lret
vmread
dec
ds
adc
fisubrs
mov
jg
outsb
jp
in
adc
ljmp
lret
mov
push
call
test
lret
jl
arpl
dec
adc
xor
or
add
into
and
adc
loop
filds
rorl
call
inc
lock
jo
in
andl
pop
mov
sti
fs
addl
test
fisttpl
dec
sar
mov
das
das
mov
inc
push
xor
mov
test
movsb
xorl
ret
inc
xchg
ds
test
das
out
mov
ss
leave
icebp
cmpsl
leave
ret
cwtl
mov
loopne
fstpl
lods
test
mov
scas
cmp
push
insl
and
xor
cmpl
fimull
stos
dec
pop
fstps
xor
lds
sub
ret
scas
or
inc
maskmovq
inc
lret
fistpll
lcall
pop
mov
jae
mov
cltd
push
mov
add
xchg
push
insl
xchg
xchg
push
ds
adc
cmc
mov
lds
fistps
in
pop
lods
adc
in
xor
inc
push
adc
push
mov
add
imul
outsl
pop
cmp
and
lea
adc
jns
addr16
jns
push
js
fnstcw
je
cmpsb
push
xchg
and
shlb
adc
mov
add
lods
and
gs
mov
or
movb
cmp
jnp
rol
fdivs
add
mov
cmp
aad
or
out
inc
xchg
sub
jae
xchg
mov
adc
outsb
pop
sbb
cmp
nop
pop
out
mov
sbbl
test
dec
dec
mov
push
notb
xor
and
hlt
fwait
or
adc
mov
push
mov
mov
stos
loope
movsb
inc
mov
lret
negl
stos
dec
jbe
mov
hlt
insl
jo
cmp
out
stos
imul
aas
out
and
sahf
cwtl
jmp
repz
adc
jae
jbe
dec
adc
push
xor
jb
stc
sub
nop
dec
xor
mov
bound
jmp
sarb
call
adc
xlat
jno
aad
mov
dec
fimull
jle
aaa
mov
hlt
fldl
cld
lds
pop
cwtl
sti
xlat
inc
mov
rclb
int
and
cltd
pop
aad
cltd
cld
xchg
insl
mov
fimull
lea
jp
add
sbb
pop
andb
mov
cmp
lods
test
jl
mov
cltd
cmp
xor
push
stos
fs
lcall
movsb
loopne
std
rcrl
fsubs
adc
lret
loope
pop
movsl
jbe
gs
jno
movsl
sub
shlb
xchg
test
gs
mov
jl
push
mov
ficoms
cmpsb
in
popf
or
or
and
aas
outsl
sbb
loope
xor
xchg
mov
adc
stc
icebp
dec
jl
jb
arpl
imul
fwait
call
mov
std
dec
jge
icebp
pop
mov
insl
in
es
jp
mov
push
fsubrl
aas
mov
push
cmp
or
mov
push
test
hlt
jp
test
sbb
test
dec
mov
fimull
dec
sbb
in
inc
pop
push
add
push
and
test
rcrl
or
add
cwtl
imul
fsubs
outsb
stos
push
and
pop
dec
mov
pop
shrl
inc
sbb
mov
fidivs
xor
push
add
and
cli
ret
fdivs
icebp
shr
arpl
mov
mov
aad
or
scas
jp
mov
push
idivl
push
in
es
loop
xor
mov
xlat
aad
mov
sbb
or
lods
jmp
jmp
aas
adc
leave
sbb
mov
popl
add
jmp
jae
scas
cmp
js
sbb
push
dec
xor
in
mov
cltd
cld
mov
or
mov
or
lods
clc
cmp
dec
dec
inc
mov
xchg
xchg
sub
sbb
mov
outsl
add
mov
add
daa
cs
push
jns
les
sub
pushf
adc
xchg
test
mov
jl
and
mov
shlb
push
test
mov
stos
cmc
sbb
cwtl
cs
sbb
mov
push
mov
pop
jbe,pn
adc
cmp
outsl
mov
pop
jnp
or
push
xchg
mov
adc
xchg
and
mov
push
xor
jb
xor
sub
js
push
stos
jl
dec
movsl
mov
jb
push
jne
hlt
nop
push
sahf
into
je
dec
mov
push
lahf
add
jns
dec
ret
cmp
outsb
xor
mov
stc
fisttps
sbb
test
add
cld
and
movsl
pop
lret
cmp
insl
jnp
jne
loopne
or
xor
lcall
fcoms
xor
xor
lock
jmp
xchg
inc
cld
movsb
jg
int
mov
mov
lret
lret
mov
push
xor
jnp
nop
ficomps
out
jge
or
add
jecxz
rclb
lds
or
jl
mov
cmpsl
in
int3
jle
sub
push
pop
inc
jb
and
fwait
push
orl
xor
dec
enter
jb
stc
sbb
mov
push
arpl
adc
push
xchg
add
mov
cmp
inc
jecxz
pop
pop
cmp
rorl
inc
and
popa
popa
imul
cmp
dec
rcll
lret
adc
xor
cmpsl
into
inc
mov
mov
lods
jge
mov
push
push
push
push
ret
push
icebp
out
xor
xchg
jo
xchg
jmp
fnstcw
mov
jb
lods
hlt
mov
out
add
sbb
sub
pop
pop
and
cld
repnz
cmp
pop
mov
test
cs
xchg
mov
bound
mov
std
adc
loope
adc
mov
adc
sahf
lods
pop
sbb
incl
inc
in
jnp
xchg
sahf
bswap
xchg
js
shrb
inc
dec
addr16
daa
repnz
or
inc
in
decl
je
les
push
xor
insb
inc
jns
subl
add
cwtl
in
loop
jg
fnsave
rcrl
lds
and
add
inc
or
inc
fadd
dec
in
xor
jo
pop
cmc
inc
xlat
xchg
inc
jb
std
sub
sub
out
mov
jge
sub
and
xlat
dec
jecxz
xchg
lods
sub
rcrb
dec
push
push
mov
inc
mov
inc
mov
or
push
push
sbb
dec
sbb
xor
push
sbb
gs
adc
cmp
rclb
mov
mov
fbld
mov
sti
fcmovnb
dec
inc
pop
cmp
dec
test
movups
mov
sub
lret
cmpsl
outsl
lds
dec
fistps
int3
xor
sbb
adc
nop
push
jnp
popa
aas
out
mov
aaa
pusha
lret
scas
jnp
pop
mov
dec
repz
movsb
dec
mov
nop
aaa
adc
add
outsl
fdivrs
hlt
jns
js
loope
dec
shlb
and
rorb
mov
out
mov
roll
loopne
mov
adc
movsb
cmpsl
sbb
pop
setg
dec
cli
jl
or
sbb
pop
or
insb
xchg
clc
mov
dec
int
icebp
and
xorb
cmp
ljmp
imul
mov
xor
jl
stc
adc
dec
xor
inc
mov
xchg
pop
imul
scas
test
pusha
rcrb
or
xor
pop
and
or
xchg
sbb
cmpsl
cmc
div
popf
arpl
loop
xorb
push
add
cmpsb
in
lret
and
ja
leave
sub
jle
cmp
pop
or
mov
addr16
fsubs
hlt
std
pusha
jno
stos
fmulp
inc
call
pushf
mov
jg
sbb
or
xchg
movl
and
pop
sub
out
sahf
cltd
clc
movsb
aam
aad
inc
sahf
clc
popf
hlt
or
stos
and
add
and
lret
xor
sbb
int3
mov
fadds
scas
push
inc
dec
or
shl
call
scas
jmp
inc
mov
xchg
outsb
sub
test
ficoml
insl
mul
jl
jnp
mov
rcrb
outsl
movsb
mov
test
and
dec
mov
movntps
jecxz
adc
sarb
xchg
sbb
push
or
push
push
xchg
cs
xchg
ljmp
inc
out
lock
test
add
xchg
testb
iret
psubusw
aam
pushf
mov
ret
push
das
mov
add
push
aad
or
cmpsb
pop
addr16
idiv
negl
sub
dec
mov
clc
lods
std
inc
push
test
xchg
cmp
mov
or
out
leave
jge
test
dec
push
stos
out
push
test
mov
cmp
sub
pop
test
mov
movsb
jg
or
lock
jg
add
mov
pop
aas
in
addl
adc
inc
lea
jp
inc
into
ss
es
mov
sbb
cmp
xor
adc
dec
adc
dec
pop
cmpsb
fs
nop
int3
hlt
or
mov
xor
daa
leave
movq
lcall
push
push
xchg
pop
xor
test
mov
add
es
call
gs
repnz
or
dec
cmp
and
inc
pusha
add
sub
add
add
jno
jecxz
cs
and
sbb
cmp
aam
data16
nop
es
add
ret
es
cmpl
mov
ja
pop
and
mov
gs
sub
inc
cmp
pop
jl
jl
aas
or
push
jmp
push
sub
sbb
sbb
jne
cmc
cwtl
mov
aaa
jnp
and
mov
add
add
inc
movsl
ds
pop
push
pop
mov
hlt
push
or
mov
jno
fs
ss
rcll
inc
xchg
mov
roll
dec
mov
test
daa
add
xchg
movsl
pop
or
ljmp
mov
jl
push
in
cld
cs
je
xor
insl
xor
cld
adc
xor
scas
mov
xor
cmp
mov
cmp
mov
out
ficompl
mov
or
xlat
jnp
hlt
mov
jl
sbb
jb
xor
shll
dec
mov
jb
cmp
mov
and
cwtl
test
mov
mov
fnstsw
in
test
out
rcll
ret
mov
nop
sub
lahf
fcoms
movsl
in
das
adc
cmpsb
cli
cmp
cmc
sub
into
in
dec
bound
jg
sbb
push
ljmp
inc
add
dec
sahf
rorl
outsl
inc
adc
fidivl
testl
mov
push
dec
orps
in
xor
into
out
xchg
cmp
ror
dec
fbstp
bound
ss
out
mov
add
xor
jb
jl
jge
fmul
out
outsl
fsubr
shrl
and
ret
xor
mov
fsub
rorl
xor
mov
mov
lcall
addr16
add
fidivl
mov
lret
jl
cld
nop
cli
jp
jle
movsb
jmp
cmc
js
xchg
pop
xor
mov
jge
inc
js
lea
ljmp
xchg
lahf
sub
push
repnz
sub
mov
jge
aas
add
mov
in
sbb
or
pop
or
push
sub
cmpsb
add
pop
imul
or
mov
idivl
fmull
sbb
test
ret
jmp
cwtl
aam
sub
mov
mov
shlb
push
jns
aas
scas
dec
inc
inc
popf
pop
dec
push
mov
lods
xchg
sub
add
push
aas
jne
decb
subl
lret
sbb
shlb
insl
dec
xchg
push
or
jbe
xchg
sub
repnz
or
ret
mov
pop
mov
mov
test
iret
cmc
lods
in
sbb
out
mov
dec
xchg
shrb
add
lods
jb
mov
mov
ds
lret
fimuls
xor
sbb
scas
adc
mov
in
xorb
add
adcb
cmpsl
stos
test
push
scas
cli
lret
pushl
inc
xor
divl
inc
xchg
push
jmp
scas
mov
aaa
stos
and
and
push
insl
sbb
mov
dec
repz
shll
adc
imul
push
or
xchg
cs
push
sbb
mov
mov
mov
cmp
xchg
popl
lods
or
arpl
sub
xor
jle
sbb
sub
dec
mov
inc
fildl
cmp
shrl
lds
mov
mov
lea
idivl
clc
add
adc
sahf
je
adc
push
mov
pop
lcall
clc
stos
xchg
xchg
mov
mov
icebp
repnz
jb
cli
cmp
pop
push
cmp
outsl
mov
loope
lock
fs
xor
test
sub
mov
pop
testb
jge
jp
gs
jb
lds
add
push
leave
mov
aad
hlt
or
xor
and
pop
push
jmp
sbb
cltd
push
mov
int3
jp
mov
push
or
in
ret
inc
ret
int
sbb
xor
jmp
pop
pop
test
push
sub
fisubs
xchg
sub
sbb
sub
jb
sahf
jecxz
subb
cmp
xor
and
stc
rol
mov
fninit
sahf
inc
mov
loop
sub
cmpsb
aad
fistpll
pop
fs
inc
push
pop
mov
and
stos
jmp
inc
mov
sbb
or
push
leave
dec
mov
mov
pop
mov
lods
and
clc
dec
daa
aas
mov
inc
imul
loop
add
nop
inc
stos
add
push
lahf
shrl
inc
jmp
adc
pop
in
sub
dec
stos
jo
mov
int3
stos
pop
les
push
out
jnp
push
cld
adc
rcll
mov
cmpsb
jb
aam
lea
inc
dec
scas
sbb
das
fists
hlt
xor
mov
sbb
addl
loop
std
dec
ror
in
cmp
mov
mov
int3
sbbb
ror
es
lea
lods
sahf
incl
push
test
inc
bnd
pop
into
in
decl
inc
mov
adc
mov
jp
fisubl
call
lea
aam
ljmp
push
cmc
movsb
mov
push
sub
jo
cmpsl
or
lods
fdiv
vmovups
ficomps
inc
sti
adc
dec
pusha
push
push
jg
lea
loopne
jno
outsl
pop
mov
mov
leave
fcmovb
xor
xor
or
leave
cmp
loope
push
mov
mov
push
mov
pop
shlb
lods
cmp
cmp
jge
dec
in
repz
imul
inc
xchg
xor
inc
call
jp
or
ss
xor
sub
and
xchg
and
or
sbb
sbb
hlt
add
inc
lock
add
stc
call
cmpsb
sti
mov
push
je
cmp
mov
cmp
inc
ss
cmp
cmpsb
shlb
nop
xor
push
or
or
sub
scas
pop
test
pop
in
mov
jnp
push
sub
xor
pop
jp
out
stos
mov
jae
int
rorl
add
repnz
insl
or
push
sbb
push
inc
aam
jl
int
lods
pop
fiaddl
aas
and
mov
outsl
imul
cmpsb
mov
test
push
test
popf
add
jns
inc
int
jg
push
inc
xchg
cmp
pop
int
jmp
mov
test
sbb
dec
pop
cmp
leave
loope
and
mov
pop
mov
jbe
ja
outsl
daa
and
mov
cmp
xchg
stos
mov
jmp
in
movsb
and
adc
dec
ret
sub
lret
je
jmp
pop
imul
pusha
mov
lret
fwait
aaa
push
es
fwait
dec
push
pop
and
lcall
add
pop
in
sub
mov
rcrl
addr16
xchg
pusha
cmp
sbb
mov
call
bound
inc
mov
push
test
test
sub
aad
fcmovu
cwtl
dec
dec
aaa
mov
xchg
cli
fbstp
test
int
xor
mov
sahf
sub
jo
push
sub
iret
popa
adc
mov
imul
bound
mov
aaa
lahf
inc
outsb
dec
rcr
leave
adc
pop
shlb
out
pop
fs
or
push
dec
dec
ret
fucomip
das
mov
iret
movl
xchg
jecxz
pushf
cmc
nop
sbb
xchg
fdivr
push
dec
sub
test
pop
and
adc
pushf
ret
jb
clc
inc
pop
push
mov
mov
sahf
and
ds
mov
cmpsl
push
stos
sti
sub
pop
faddp
shrb
xchg
adc
push
shl
cld
dec
addr16
mov
repnz
mov
hlt
ja
iret
stos
ljmp
ret
test
sub
xacquire
inc
and
ds
mov
dec
jp
xchg
pop
aaa
mov
xchg
add
loopne
gs
movsb
add
add
dec
jb
jmp
cmc
stos
jae
lea
cmp
inc
clc
bound
sbb
push
sub
and
mov
addl
pop
inc
push
and
iret
or
repz
cmp
js
aaa
and
popf
cmp
mov
adc
pop
xchg
cwtl
ds
push
loop
sbb
sar
in
int
cmp
lcall
sahf
add
pop
popf
cmp
std
cmp
lret
lret
adc
fwait
adc
stos
lret
pop
loopne
jb
setge
sbb
lea
loop
ss
jnp
dec
dec
lret
les
mov
cmp
push
xor
dec
jno
pop
sbb
mov
cwtl
push
je
push
lret
push
sarb
scas
sub
mov
scas
gs
push
scas
in
or
push
jge
movsl
mov
jmp
pop
test
adc
sbb
jge
inc
xchg
mov
cmp
insb
clc
sbb
pushf
dec
cmpsl
cmp
test
inc
incb
mov
xchg
push
cli
imul
and
repnz
mov
adc
leave
outsb
inc
enter
pushf
in
mov
and
push
xorb
sub
addl
rorb
and
mov
cmp
jne
lahf
sub
les
daa
jl
push
popf
xor
dec
out
bswap
dec
cmp
pop
cwtl
mov
les
fndisi(8087
push
dec
cmp
push
pop
xchg
outsl
inc
shlb
push
xchg
push
mov
mov
push
mov
int
mov
xor
jmp
sbb
fstl
and
fadd
fs
jbe
pop
test
cs
add
sub
mov
or
mov
es
adc
add
addr16
fisubrl
adc
push
jmp
cmp
jle
inc
nop
jbe
out
fisttpll
sbbb
out
mov
xor
ret
mov
sahf
movsb
add
cli
sub
shlb
cmpsb
dec
insb
cmp
dec
out
stos
sbb
mov
and
cmp
push
and
test
je
inc
shrl
cmp
and
stos
mov
xchg
icebp
inc
cmp
cld
adc
pop
mov
jmp
mov
rolb
or
cld
das
push
jmp
cli
jle
lods
jno
cmp
mov
fwait
push
fimull
adc
dec
lds
sti
shll
sub
aam
addl
push
sbb
push
xor
or
mov
fsts
push
dec
clc
pop
cmp
sub
sub
gs
and
call
sub
and
dec
xor
fcmove
ljmp
dec
lods
xchg
lahf
sub
popa
mov
mov
pop
push
sub
shrl
lock
nop
fwait
xchg
scas
xchg
or
cmp
fisttpl
dec
jp
mov
inc
negl
cmp
pop
jns
or
mov
sbb
pop
adc
adc
xor
and
add
mov
cmpsb
test
rcrl
xchg
and
fistps
dec
addr16
jg
icebp
in
lcall
aam
push
iret
adc
jbe
adc
movsb
xor
les
push
lods
stos
push
ljmp
hlt
xchg
ficompl
dec
jb
ret
sub
ljmp
das
push
sub
xor
inc
stos
sub
mov
push
xor
stos
and
sub
mov
dec
cltd
dec
dec
dec
jnp
lods
daa
cli
lock
rcll
subl
adc
js
sbb
inc
and
or
add
pop
add
ds
adc
inc
xor
and
add
imul
out
jbe
outsb
and
scas
sub
jno
adc
notl
movq
cli
xlat
pop
dec
mov
push
fmull
push
mov
and
cli
xchg
mov
shll
sub
mov
outsb
mov
sub
dec
rol
push
and
out
inc
inc
sar
jp
lds
ss
jg
out
pushf
loopne
das
fwait
pop
push
scas
or
jle
pusha
iret
dec
xchg
pop
cmp
mov
das
dec
add
add
in
mov
jl
lret
sti
into
int3
and
cld
xor
insl
ja
imulb
adc
and
sbb
dec
sbb
and
mov
jmp
lret
add
inc
push
fs
daa
lret
pop
js
pop
gs
and
xchg
push
jae
add
mov
enter
xor
adc
rcll
aaa
fwait
sub
pop
frstor
add
adc
hlt
jnp
arpl
es
pusha
jo
add
pop
clc
lods
jno
arpl
cs
sbb
dec
stos
xchg
and
aaa
inc
push
mov
data16
pop
fcmovne
push
jns
inc
out
test
in
cmc
ds
pop
ss
or
sbb
jg
mov
sbb
pop
call
das
scas
dec
sbb
mov
in
pop
cmp
lret
mov
or
jl
cmp
adc
push
popa
cmp
sarl
clc
jo
imul
pop
fisubrs
mov
rcrl
lods
dec
xlat
cltd
dec
lret
lds
dec
in
and
aam
push
ss
fisttpll
scas
mov
jl
xor
pop
dec
fiaddl
mov
sub
icebp
imull
inc
mov
mov
mov
mov
dec
adc
adc
sub
xchg
lods
or
mov
int3
dec
push
shr
jbe
jnp
jecxz
sbb
jno
rorl
icebp
push
lret
cmp
lds
sbb
aad
popa
xchg
loope
nop
adc
xchg
stos
or
lods
movsl
xchg
fcmovnb
jp
jl
sbb
inc
add
sbb
test
xchg
das
aaa
jo
ficoms
outsl
pop
fmul
sbb
not
hlt
lea
pop
and
mov
lcall
mov
sbb
jmp
or
aam
and
jb
les
sbb
cmp
mov
and
out
imul
cmpsl
insb
push
test
rol
adc
sbb
and
sbb
arpl
xlat
xchg
movl
jl
add
sub
cmpsb
out
dec
inc
adc
scas
lret
arpl
sub
push
add
jl
dec
lock
loope
pop
hlt
clc
jl
pop
inc
sbb
xor
pop
aam
je
jge
add
sub
cli
pop
xchg
mov
pop
daa
mov
xchg
fmul
pop
cmpb
jnp
sub
jo
sub
ret
fs
and
cmpl
jne
mov
lea
cwtl
or
aad
sbb
mov
jne
mov
xor
lcall
inc
pop
dec
stos
lods
insl
pop
lret
jge,pt
sbb
push
dec
filds
insl
pop
testl
dec
js
int
fwait
stos
mov
int
cmp
cmp
das
das
fimull
cld
das
and
fists
aam
xchg
mov
stc
push
dec
dec
mov
lea
mov
gs
xlat
add
push
sub
insl
xor
push
ds
jne
addl
outsb
in
xor
jecxz
jg
aad
jne
and
repz
repz
outsb
fadds
pusha
xor
jnp
jo
aam
imul
cmp
lds
mov
enter
aas
gs
into
movsb
pusha
xchg
jne
pop
adc
fdivrp
adc
into
leave
inc
ds
loopne
push
stos
jecxz
dec
pop
testb
mov
jg
mov
mov
xchg
jmp
dec
arpl
repz
push
mov
std
sbb
lock
rorl
adc
mov
xchg
popf
lock
movsb
jp
xlat
pop
xchg
out
mov
and
out
out
popa
cmc
ret
push
add
lret
pusha
sbb
push
xor
mov
sub
xchg
mov
sarb
push
fnstsw
pop
loop
cld
popa
cmpsl
add
mov
arpl
push
and
xor
inc
fidivs
ljmp
out
in
jae
push
mov
bound
stos
ficoms
fdivl
adc
add
lods
insb
in
mov
data16
scas
dec
int
sbb
push
mov
fstpt
jbe
shll
mov
mov
xor
idivb
pop
pushf
push
add
jecxz
cld
ss
adcb
stc
jnp
jbe
aas
lods
xchg
jno
ds
mov
cwtl
sahf
scas
in
add
pop
icebp
push
sub
push
lds
test
cmp
dec
aas
shll
push
sbb
push
jo
lods
sub
jg
and
outsb
aaa
pusha
push
lods
inc
xchg
das
dec
fnstsw
dec
xor
lods
push
jb
test
xchg
pop
xlat
sub
aam
out
and
lahf
push
pop
aad
mov
mov
lret
push
mov
cltd
scas
sarb
aam
fstpt
xchg
out
mov
jmp
in
jmp
in
xor
loope
adc
gs
or
sahf
xchg
add
xor
pop
ds
or
mov
cld
fldt
int
aaa
push
scas
xor
pop
mov
mov
cwtl
mov
mov
fstl
push
inc
call
mov
cmpsb
repnz
js
sbb
jle
mov
jmp
sbb
cmc
sbb
lds
addr16
jo
jg
lds
push
mov
imul
xchg
orb
daa
sbb
clts
push
and
repnz
fdivp
call
in
mov
rcrb
adc
and
jbe
shll
rclb
xchg
inc
cmc
inc
mov
jne
fcomps
jp
gs
sub
inc
jnp
fadds
pop
outsb
mov
jl
fnstenv
cmpsl
mov
or
cmp
scas
test
cli
out
and
into
iret
iret
inc
test
in
xlat
xchg
stc
test
push
sub
xor
pop
test
mov
enter
jge
pushf
push
adc
dec
adc
in
movsb
les
movsb
sub
add
ja
adc
aas
pop
aam
icebp
cmp
mov
dec
cmp
cmp
scas
fwait
adc
imul
gs
iret
dec
pop
cmp
mov
addb
xlat
cmpl
int
pop
sbb
push
mov
cmp
push
or
out
xor
ljmp
xchg
ret
sbb
xor
mov
dec
cld
mov
jp
mov
dec
or
sbb
in
sub
lret
fwait
push
dec
xor
add
adc
or
fdivp
movsb
and
sbb
mov
cmp
aaa
loop
jl
out
sbb
sub
adcb
dec
and
lock
jecxz
adc
movsb
or
dec
jge
addr16
dec
fadds
pop
xchg
fcoms
imul
adc
mov
mov
pusha
std
loopne
adc
sarl
es
gs
push
int
sub
cmp
out
xor
or
pop
and
sub
int
push
hlt
in
test
pusha
xor
pop
or
int
cmc
xchg
hlt
fnsave
xor
ljmp
adc
or
adc
cmp
shr
iret
xor
cmp
movsl
mov
daa
mov
shl
sbb
pop
sbb
push
jecxz
mov
sbb
out
cli
sarb
lret
sub
xchg
cmp
lret
inc
xor
test
sbb
xchg
xchg
jnp
enter
fisttps
cwtl
movb
int3
push
js
rcll
fcmovne
loope
fs
xchg
inc
imul
jns
icebp
add
sbb
call
or
daa
and
inc
out
ret
xchg
fwait
pushf
and
sarb
inc
xchg
test
orl
shl
out
pusha
imulb
iret
and
scas
loop
push
or
sub
ret
fnstsw
jecxz
push
dec
iret
lds
call
or
ficoms
or
jnp
and
xchg
movsl
dec
sub
pushf
sbb
les
fcmovnb
ss
lcall
insb
jl
pop
mov
dec
addr16
sub
xchg
repz
repz
rolb
out
push
leave
loope
jae
push
into
ljmp
adc
push
jns
pop
push
sbb
call
lret
add
mov
inc
cmp
and
iret
add
cld
das
pop
mov
jmp
mov
add
fs
sbb
sub
mov
mov
and
mov
mov
sub
dec
icebp
mov
scas
imul
push
cmp
sub
popf
sub
cmp
adc
push
sub
mov
sbb
ret
xlat
lods
push
aam
ret
mov
dec
sbb
shrl
aam
jo
jl
sub
cwtl
cmp
mov
andl
pusha
cli
insb
mov
dec
movsb
repz
add
dec
inc
sub
sub
xchg
jne
cmp
jl
sbb
jae
mov
lret
xor
loop
cli
add
jne
jl
test
jae
ret
mov
sub
int3
adc
je
jo
enter
mov
jnp
es
aaa
adc
and
aam
lods
sub
mov
xor
mov
fists
je
clc
pop
pusha
mov
fstps
sbb
or
and
imul
dec
jns
mov
and
jne
sbb
shll
lods
jmp
lods
jg
inc
loope
out
jne
into
sbb
cmpl
adc
loopne
mov
add
test
rcl
cmp
fisubrs
sub
stc
dec
std
imul
fwait
das
in
imul
xchg
fsubrs
sub
fsubr
ret
loop
lahf
or
pop
sbb
popa
xor
gs
lods
sbb
mov
test
nop
xchg
sbb
push
sub
adc
sbb
loope
pop
xchg
adc
idivb
sub
adc
pusha
inc
pop
pop
mov
and
fidivl
dec
fwait
adc
ja
out
sbb
into
ss
xchg
and
jmp
adc
test
push
repnz
out
dec
testl
pop
push
aad
jno
imul
mov
loopne
out
int
push
inc
mov
inc
or
lea
sub
sub
sub
ficomps
or
rorl
cmp
jecxz
inc
jae
js
cmp
les
and
adc
and
mov
sub
lods
test
jp
push
repz
xchg
jne
xor
mov
cmc
fidivrs
call
xor
mov
jno
clc
daa
mov
cmp
movsb
mov
xor
sbb
out
dec
andl
push
jb
bound
leave
mov
pop
sub
imul
pop
xor
dec
and
mov
adc
dec
xchg
in
inc
xor
push
les
orl
rcrl
insb
xchg
icebp
mov
adc
or
dec
jae
scas
mov
fimuls
das
ss
dec
inc
fwait
gs
mov
pop
scas
popa
mov
add
and
push
test
push
fs
shl
rcr
sub
rclb
lret
mov
aad
aad
scas
mov
jbe
mov
fwait
aas
call
cmpsb
inc
jae
push
mov
xchg
xchg
sub
xorl
loope
sbb
sbb
mov
push
push
mov
and
bound
adc
push
sbb
mov
test
out
push
pop
xor
mul
add
imul
aaa
insl
mov
mov
mov
cmp
xchg
out
je
push
rolb
mov
mov
test
cmc
dec
jae
cmp
sub
add
sub
sahf
fldl
xchg
ds
gs
push
outsb
imul
push
shrl
mov
sub
adc
scas
icebp
repz
xlat
pminsw
enter
fs
scas
icebp
jae
mov
je
mov
pop
pop
and
mov
mov
aas
es
sahf
test
inc
mov
orb
in
movsb
xlat
fucom
and
out
xchg
bound
out
jne
repnz
jnp
dec
and
xor
mov
push
mov
mov
js
push
push
push
push
outsb
push
mov
jl
dec
ret
dec
sub
mov
cld
push
xor
mov
inc
pop
xor
and
cmpsl
sarl
pusha
or
imul
jno
xlat
mov
mov
push
sti
dec
push
jo
test
mov
fwait
mov
scas
mov
lahf
pop
jl
xchg
int
push
sti
and
cmp
movsb
adc
or
test
popf
loope
fmulp
xchg
cmpsl
imul
mov
add
or
mov
xchg
push
dec
test
cs
mov
cmp
insb
sbb
arpl
cmp
int
fwait
rcrb
jno
popa
loope
add
xor
stc
in
std
inc
jo
and
loope
jbe
xchg
jmp
xor
stos
mov
sti
pop
ret
rcl
mov
or
mov
mov
dec
ja
mov
aas
int
aaa
cmp
jp
jecxz
jmp
ret
xchg
aaa
push
ss
push
outsl
cmpb
in
mov
rcrb
pop
daa
adc
in
xor
pop
popa
mov
xor
insl
mov
cmp
cmp
lahf
pusha
push
jb
adc
xor
gs
add
push
icebp
daa
das
out
int3
iret
test
xor
xchg
stos
lret
clc
and
lret
addr16
adc
push
sbb
mov
jp
daa
outsw
hlt
xor
and
mov
push
scas
cmp
mov
sub
aad
dec
mov
dec
cmc
nop
or
icebp
inc
pop
in
push
dec
sbb
add
mov
movsl
inc
add
push
inc
inc
push
jbe
lret
jmp
in
std
adc
mov
jnp
push
push
fwait
mov
in
out
outsl
and
add
mov
add
sahf
std
repz
test
call
and
fcompl
fnstenv
out
fbld
mov
repnz
jb
xchg
int3
out
inc
add
adc
xchg
stos
lock
jp
ret
push
pop
xor
sub
add
loopne
leave
jmp
and
aaa
std
push
sub
mov
lea
sub
dec
adc
ret
sarb
jnp
mov
cmp
push
shlb
add
inc
xor
std
cmpsl
jge
jecxz
jle
and
sub
fmuls
cmp
popa
jmp
sub
fcomp
xchg
push
addb
shlb
push
lods
repnz
data16
add
push
scas
sub
mov
ljmp
icebp
lret
lret
and
mov
test
push
cwtl
call
sbb
sbb
fs
pushf
xor
mov
inc
dec
aaa
int3
or
pop
insl
outsb
imul
out
lods
dec
test
cmp
mov
add
mov
rolb
ja
mov
nop
in
andl
or
sub
sbb
out
adc
jnp
add
xor
fs
push
jae
out
xchg
stos
idiv
mov
fcoml
inc
adcl
and
aad
popf
dec
mov
addr16
add
mul
shl
mov
sub
popa
insb
lods
mov
jns
xor
and
mov
imul
cmp
ret
and
push
pop
inc
orb
repnz
test
jns
jae
sub
xchg
fildl
bound
cmp
jle
jbe
mov
insl
sub
shlb
lds
fbstp
cmp
jb
adc
ret
in
sbb
inc
movsb
out
mov
aaa
jns
inc
cltd
xchg
push
inc
outsb
movsl
mov
cltd
icebp
add
cltd
nop
vpshab
sbb
cmp
adc
mov
inc
adc
xor
pop
add
repz
dec
fiaddl
add
sbb
sbb
outsl
fcomp
mul
mov
push
out
cmp
push
cmp
inc
add
into
lret
push
mov
xlat
out
xor
stos
popa
add
out
add
in
inc
not
push
mov
sbbl
pop
jecxz
cltd
mov
fisttpl
lea
jecxz
mov
imul
jnp
inc
jl
rcrl
lret
cs
stc
mov
or
push
movq
mov
outsb
sbb
jno
pusha
imul
sub
or
and
adc
or
mov
push
fdivl
xor
push
popf
pop
pop
shrl
add
mov
xor
aad
add
sbb
in
stos
es
lret
imul
xor
icebp
add
push
shl
adc
lock
inc
test
enter
xchg
xchg
add
mov
dec
mov
or
add
cmp
leave
call
gs
ret
stos
push
or
mov
cltd
ss
negb
dec
les
imul
aaa
int
into
or
inc
jno
insb
ds
ffree
sbb
mov
js
xor
shll
in
subl
jge
and
mov
add
sub
cmp
sub
or
cmpsl
ja
adc
repnz
aas
xchg
decb
adc
in
stos
or
push
inc
lods
fldt
fs
and
insl
push
jle
lahf
sti
addr16
adcl
and
ja
fldt
push
sarb
hlt
dec
fldenv
inc
mul
dec
enter
pop
pushf
outsl
cmc
or
mov
out
adc
repnz
mov
cmp
daa
lahf
sbb
int
test
andb
movsb
add
cmp
or
mov
ret
jns
push
xchg
xchg
xor
sar
sahf
adc
push
jmp
inc
pop
lods
mov
and
pop
sbb
push
add
inc
inc
xor
dec
inc
rcrl
sub
scas
and
cmpb
xor
xor
jl
push
inc
xchg
mov
aad
gs
xlat
push
xor
repz
push
pop
xchg
push
rclb
bound
inc
and
pushf
and
ret
ljmp
lcall
dec
sub
cld
mov
sahf
mov
js
cli
push
cmp
insb
mov
or
loope
inc
in
push
mov
stos
lret
push
cmp
sbb
inc
nop
cmp
jl
sub
nop
shlb
pop
test
shlb
mov
or
clc
cmp
popf
data16
inc
mov
out
loope
mulb
jp
mov
scas
cs
or
negb
inc
ljmp
icebp
cld
dec
test
jb
fnstsw
jle
pop
or
dec
ret
fidivrs
andl
pop
or
jno
ret
jge
andb
mov
and
lods
or
push
mov
cmp
mov
jb
lock
in
fcomps
dec
fcoms
pop
or
jmp
push
mov
lret
cmp
push
ja
xchg
rolb
sarb
xor
mov
fnstsw
push
ss
dec
dec
adc
pusha
xor
loopne
mov
dec
jo
sbb
aas
mov
dec
push
mov
test
inc
adc
repz
push
jne
outsb
sbb
and
xchg
or
jne
mov
sub
push
pop
stos
dec
mov
push
pop
mov
scas
stos
out
lds
insl
add
ficoml
addl
into
pop
cmp
cmp
sub
and
push
xor
push
dec
push
mov
and
loopne
scas
imul
icebp
shll
pop
xchg
nop
xor
fisubrl
mov
jle
movb
rcr
js,pn
stos
add
imul
and
fdiv
insl
test
jo
aaa
rorl
jp
test
insb
test
iret
call
scas
loopne
aad
mov
imul
mov
cmp
dec
xchg
fisttps
hlt
xchg
cli
sti
out
pop
cmp
push
rorl
inc
xor
sbb
loope
loope
pop
lods
repz
pop
jp
clc
mov
jg
imul
lcall
lahf
jg
ljmp
mov
mov
addr16
xor
add
sub
cmp
arpl
jne
popf
in
sbb
push
ret
jmp
faddl
iret
pop
or
mov
add
sti
or
sti
inc
cli
fs
dec
xor
loopne
mov
inc
jae
inc
push
stos
lods
xchg
ficoml
gs
push
dec
in
push
sub
dec
aas
int
push
notl
imul
pop
lods
mov
add
stos
pop
test
cmp
jp
inc
cmc
jo
test
insb
add
scas
jg
inc
enter
sbb
jno
decl
jp
jle
pop
ret
xchg
xchg
adc
insl
movsl
xchg
pop
aas
or
fsubs
aad
and
outsb
jp
add
push
fistpll
mov
rorl
pop
andb
aaa
dec
mov
sbb
dec
out
or
adc
movsl
mov
lret
pop
outsb
push
push
jecxz
mov
xor
test
mov
bound
addb
sbb
iret
mov
sbb
pop
jno
push
test
inc
fistpll
cwtl
xchg
andb
dec
enter
movsl
pop
mov
add
sub
mov
add
xor
ds
mov
ds
ds
arpl
mov
int
sbb
ja
enter
arpl
pushf
sbb
jp
sub
iret
push
adc
in
popa
and
push
mov
jecxz
jo
inc
imul
sub
shl
pop
jp
sti
cmp
ret
xchg
pop
in
loopne
fildl
sarl
mov
std
add
insl
ja
fnstsw
adcb
inc
adcl
pop
pop
pop
lds
lods
ret
and
lods
mov
mov
xor
add
jno
sub
shll
dec
push
or
jecxz
sbb
pop
xor
fsts
iret
and
sbb
cs
rolb
inc
popa
cmpsb
sbb
push
mov
push
dec
lcall
int3
cs
repz
or
daa
jnp
fstpt
stos
mov
fs
and
add
ja
fsubs
lea
movsb
xchg
lahf
push
and
mov
insb
add
rcrb
jbe
and
sub
or
inc
xlat
int3
in
sti
iret
lock
push
or
or
movsl
mov
mov
shlb
rcrb
pusha
add
subb
aas
loop
cwtl
jns
int
mov
or
mov
inc
mov
sbb
xchg
pop
add
push
jge
mov
push
aas
js
sub
jecxz
fldcw
loopne
jbe
mov
dec
push
mov
dec
mov
jg
in
loopne
push
outsb
scas
add
cli
enter
and
hlt
in
adc
fldt
gs
xchg
push
dec
jb
sub
mov
sbb
test
pop
les
test
icebp
mov
and
fdivrs
pop
pop
test
gs
fwait
and
out
test
test
cmp
mov
ret
rcll
sbb
aam
mov
and
std
and
fsub
lds
dec
mov
incb
lods
jb
jge
repz
pop
popa
loop
mov
imul
cli
or
push
iret
mov
jl
mov
jnp
fimull
push
mov
xlat
stc
pop
movsb
arpl
inc
jecxz
insl
loop
jmp
push
and
stc
int3
popa
loop
jbe
add
and
call
ds
arpl
out
xchg
int3
xlat
mov
sub
jge
leave
pop
add
lds
iret
ror
ret
pop
and
scas
ret
pusha
jp
shrl
xchg
jnp
aad
pop
repnz
mov
ss
xchg
jge
xchg
and
cmp
pop
movsb
scas
sub
jge
xchg
addr16
and
bnd
lret
dec
in
test
dec
ret
push
mov
ret
pop
xchg
inc
mov
mov
fsubrl
icebp
fdivrl
jg
inc
dec
out
mov
ja
pop
insl
pusha
jmp
mov
and
pop
cmc
pop
shrb
mov
lcall
push
jb
mov
fwait
lock
repnz
es
push
test
pop
dec
xor
xchg
pop
mov
ret
adc
mov
mov
idivb
add
test
fdivl
in
mov
pushf
xchg
mov
sub
mov
cmp
mov
ljmp
repnz
in
js
inc
nop
sub
aaa
outsl
add
mov
imul
sbb
popa
push
shlb
outsl
xlat
mov
pop
nop
push
shlb
aas
outsb
jmp
pop
cmc
mov
mov
jl
out
hlt
push
testl
jnp
cmp
fistpll
aam
lods
aas
jbe
stos
xor
mov
test
jb
jb
pop
add
pop
push
push
mov
jp
orb
imul
add
cmp
adc
pusha
loop
test
mov
dec
pushf
mov
mov
push
mov
outsb
adc
xor
inc
fisttpll
pop
sub
lcall
jo
push
add
test
jnp
mov
mov
push
outsb
xor
inc
pop
sbb
in
mov
aas
push
add
shrb
mov
lods
and
imul
ja
pushf
inc
cmp
fs
inc
das
repnz
and
mov
push
sahf
fsubrl
loop
sub
cmp
insb
cmp
push
clc
and
sbb
inc
adc
mov
sub
push
mov
pop
test
inc
aas
mov
sahf
adc
cwtl
inc
cmp
sub
repnz
scas
mov
movsl
ficompl
sbb
stos
cwtl
cmp
fnsave
pop
push
movsl
mov
inc
jae
and
lods
jmp
lods
and
jb
sbb
mov
mov
sti
push
jecxz
je
and
mov
mov
icebp
lret
test
jnp
mov
adc
mov
lods
and
incb
mov
iret
add
cmc
mov
insl
outsb
rcll
or
loope
outsl
adcl
daa
daa
mov
and
xchg
pop
xor
movsb
aad
aam
sub
or
cwtl
mov
cmpsb
xchg
xor
adc
ja
and
push
mov
mov
out
mov
pop
jae,pt
lods
pop
out
bound
mov
mov
and
outsb
sub
imul
mov
push
nop
scas
mov
dec
xchg
cmp
movsb
fisttps
arpl
cli
jmp
ret
dec
add
dec
jg
add
leave
and
xor
sti
adc
jns
mov
popf
or
mov
jnp
xchg
jae
lea
or
outsl
enter
jmp
hlt
push
jp
and
mov
lea
fincstp
loopne
jmp
cmpsl
movsb
outsb
fmuls
add
xor
lcall
cmp
cmp
mov
push
jecxz
fnsave
in
xor
ljmp
mov
mov
xor
lahf
xor
jge
shll
add
xchg
mov
mov
je
les
inc
or
shl
out
xor
cs
sbb
js
cmp
std
bound
sahf
sub
mov
dec
sarl
lahf
mov
mov
xchg
aad
lods
jbe
xchg
dec
jp
arpl
mov
pop
mov
sbb
call
andl
movsb
add
mov
cwtl
bound
fnstenv
lea
je
je
aad
fs
push
dec
xchg
shl
data16
xchg
popa
cmpsb
jb
push
mov
dec
fstps
lret
mov
push
fdiv
xchg
mov
mov
push
pop
idivl
jns
fidivl
call
push
out
sbb
dec
cmpsb
mov
pop
mov
xor
or
das
mov
addb
popf
inc
xor
imul
fistpl
dec
jge
lret
aaa
ljmp
and
dec
idivl
imul
dec
scas
das
dec
scas
int
sub
adc
push
fisubrs
decl
push
clc
mov
ficompl
jp
hlt
sub
pop
pop
adc
lods
es
into
push
fs
inc
push
int
mov
xlat
aaa
cmp
adc
push
loope
push
pop
das
pop
xor
int3
jns
mov
fisttpl
cmpsb
mov
push
stc
repnz
cmovg
insl
sbb
add
scas
mov
in
loop
sub
xor
and
gs
xlat
mov
pop
mov
mov
dec
arpl
les
icebp
cmc
mov
cmpsb
xor
out
dec
pushfw
cmp
sarl
jo
pop
testl
fmuls
inc
cmp
adc
ja
dec
mov
dec
lods
sbb
iret
push
in
jo
vpaddq
in
filds
divb
mov
fwait
push
push
push
or
dec
sahf
mov
sahf
mov
or
sub
in
repnz
or
mov
scas
iret
cmp
or
shlb
mov
sbb
pop
push
lock
je
insl
iret
or
or
pop
nop
xchg
xchg
mov
mov
mov
adc
mov
mov
xchg
push
xchg
lcall
cmp
xchg
insb
mov
jb
or
test
adc
ja
or
add
or
jl
adc
dec
mov
movl
out
inc
aas
cli
mov
test
add
loopne
push
add
sarl
ja
mov
mov
sub
jbe
ret
jmp
jbe
mov
call
out
xor
jno
mov
mov
jecxz
lret
inc
lods
test
or
sbb
dec
jno
push
fstps
xchg
adc
jb
push
and
cmp
or
fwait
nop
or
and
inc
addr16
test
push
mov
mov
push
in
jmp
andl
xchg
pop
mov
cs
mov
int
xchg
pop
sti
arpl
mov
sbb
mov
pop
mov
lea
adc
movsl
jo
add
mov
repz
or
enter
and
stos
pushf
xchg
mov
aaa
cmc
iret
hlt
adc
sub
mov
mov
mov
daa
rcll
sub
pop
insb
mov
fwait
inc
loop
dec
and
mov
xchg
loopne
out
add
sbbb
roll
scas
or
loopne
pop
orb
loopne
ficoms
xor
adc
or
aas
out
and
jae
sbb
loopne
cli
test
and
in
push
xchg
movsl
mov
popa
rorl
or
les
sar
jmp
cmpsb
sub
sarl
insb
pusha
cmp
aas
inc
jo
push
pop
ljmp
xchg
sahf
dec
std
ficompl
cmp
addr16
popf
in
data16
in
aas
sub
ja
mov
cmp
push
mov
push
mov
pusha
invlpg
sbb
and
jnp
sub
mov
sbb
mov
mov
int3
push
push
outsb
pop
mov
rclb
mov
shll
dec
fldl
mov
inc
popf
gs
movsl
xchg
cmpsb
or
or
iret
inc
mov
jmp
or
and
popa
daa
js
idivl
aad
xlat
xor
nop
ja
imul
or
dec
stc
xor
lret
or
movsb
jae
inc
xor
cmc
mov
cld
mov
insb
mov
jbe
in
popa
inc
mov
inc
cmpsl
es
cmp
test
pop
inc
sbb
test
stos
lods
xchg
xlat
mov
dec
and
int3
pop
dec
jle
aad
daa
sbb
or
mov
mov
loope
stos
imul
adc
cmc
js
nop
cmovnp
push
int3
aas
int3
fs
inc
inc
xchg
pusha
ja
pusha
cld
and
popa
mov
lock
scas
cltd
mov
es
lods
mov
inc
cmp
lds
hlt
push
loopne
pop
scas
addr16
iret
ror
jne
cmp
js
inc
mov
shl
add
jo
jnp
cld
cmp
jb
cltd
mov
xor
jo
mov
sub
xor
cmpl
daa
repz
mov
stos
int
fwait
vsubss
cmp
scas
test
xor
lret
cmpsb
mov
int
jle
adc
jne
or
rclb
outsl
lods
jmp
scas
fcmove
sarb
outsl
cltd
mov
insb
pop
dec
xor
aas
data16
das
ret
ret
pop
arpl
cmp
call
and
decb
iret
ljmp
sub
aaa
cmp
inc
push
mov
sub
and
xor
repnz
mov
xchg
xchg
add
xor
sbb
xchg
mov
addr16
in
or
ljmp
add
roll
imul
mov
pop
mov
inc
pop
dec
mov
lods
daa
out
insb
push
inc
mov
adc
or
lods
out
arpl
mov
call
push
add
jp
in
dec
jns
stc
lds
mov
dec
cltd
adc
xchg
dec
outsl
lea
clc
mov
sti
adcb
add
cmp
fidivs
cmpsb
sub
ret
scas
mov
int3
lea
push
mov
clc
stc
adc
fsts
jns
mov
sbb
aas
inc
push
sub
rorb
and
mov
test
push
push
pop
push
dec
jmp
xchg
pushf
pop
mov
bound
cmp
xchg
stos
ja
and
add
sahf
mov
test
enter
movsl
inc
sub
clc
mov
pop
fs
rcr
outsb
adc
push
mov
jp
cld
mov
mov
shrb
int
aaa
add
xlat
adc
mov
clc
sbb
xchg
into
hlt
fildll
or
cmp
or
cld
inc
mov
icebp
pop
rcrb
or
fmul
or
and
punpckhdq
dec
xchg
mov
jae
cmp
ja
adc
mov
cmp
shlb
jmp
gs
divb
movl
jne
sub
repz
push
repz
adc
jb
rol
adc
lock
inc
dec
mov
pop
sbb
inc
xor
ret
mov
popa
dec
js
loop
dec
xor
sub
mov
mov
lcall
pop
dec
push
sub
dec
cmpsl
adcl
and
cltd
xor
in
mov
dec
lret
mov
fwait
out
cmpsl
int
sahf
sbb
mov
std
mov
mov
decb
mov
leave
or
jp
jae
mov
xor
mov
xchg
aam
cmp
pop
fldenv
or
mov
jbe
cltd
xchg
xor
mov
mov
sahf
in
scas
adc
vcvtsi2sd
test
out
shlb
inc
mov
addl
fistpl
and
bound
cmpsl
mov
or
out
adc
dec
cltd
or
out
xor
gs
notl
call
mov
pop
dec
inc
mov
fidivl
ljmp
das
xor
outsb
mov
fdivrs
test
xchg
ja
jge
int
mov
loope
xor
rorb
mov
adc
nop
jecxz
xor
shrb
lret
inc
inc
nop
cwtl
dec
int3
int3
inc
rolb
lret
shlb
sbb
sahf
mov
jno
jl
imul
shrb
insl
or
fnstsw
test
out
add
pusha
sub
clc
push
sarb
nop
mov
arpl
cmp
out
pop
cmp
aam
cmp
jno
pop
mov
sub
outsl
jle
leave
ljmp
in
xchg
pop
mov
push
mov
pop
inc
dec
inc
popf
mov
mov
cmp
push
lock
xor
insl
popa
out
call
outsl
dec
xchg
mov
cmpsl
xchg
cmp
loopne
test
adc
icebp
ret
addb
xchg
mov
pop
pop
sahf
cmp
shl
fistl
imul
or
ds
ret
lods
imul
cvtdq2ps
add
dec
sarb
icebp
jmp
xor
es
movsb
rclb
popa
and
cli
inc
popf
mov
mov
mov
cmp
fs
mov
movsb
ljmp
repz
rcrb
mov
outsl
stos
mov
outsb
sub
push
jle
popf
cmp
popa
push
aad
cs
sbb
inc
fcomps
rorl
sbb
shrl
mov
popa
sbb
push
test
or
cld
jecxz
repnz
push
mov
hlt
push
out
push
fnsave
sub
dec
pop
xor
and
mov
das
lea
hlt
push
fdivrl
mov
cmp
repnz
cli
mov
jnp
cmovge
cmpsl
std
movsb
xor
ficoml
and
ljmp
test
lret
imul
or
fisttps
les
lock
add
push
int3
lcall
push
xchg
shlb
dec
add
mov
vpaddb
adc
inc
push
jl
sub
fs
nop
mov
out
or
adc
repz
or
mov
mov
dec
lcall
or
dec
aam
fsts
sbb
or
loopne
scas
cmp
test
xchg
fildll
lods
inc
adc
or
sub
into
mov
adc
das
popa
int3
mov
data16
leave
stc
lods
push
xchg
pop
sbb
cmpb
pop
out
jecxz
inc
pop
adc
out
inc
sbb
ja
fs
mov
scas
or
jge
addr16
adcb
int
jmp
cwtl
jb
xchg
xor
cmp
sbb
sub
out
lods
jne
testb
loope
jo
mov
cwtl
adc
jl
dec
cmpsb
dec
sbb
sbb
ss
pop
aas
mul
jo
xor
and
popa
add
dec
int
js
add
fiaddl
sbb
sub
ret
add
jg
xor
pop
jbe
sbb
test
or
ljmp
aaa
insl
inc
push
jp
xor
dec
mov
xor
call
test
and
aas
pop
insb
add
sub
lret
mov
xchg
mov
push
xchg
cmpsb
xorb
sbb
mov
in
xchg
xor
clc
xor
loop
incl
leave
fldl
cmp
repz
xchg
in
rolb
mov
adc
shlb
enter
pop
out
push
push
mov
scas
cmp
push
mov
in
push
inc
xor
jg
nop
loop,pn
sahf
mov
adc
xchg
int3
mov
sbb
mov
xchg
shl
inc
insb
fs
fs
xor
mov
vaddsubps
jle
jmp
rcll
xor
lea
mov
jnp
mov
out
stos
pop
sar
push
inc
xchg
icebp
test
stc
add
sub
in
adc
dec
sar
xor
iret
pop
xchg
hlt
ljmp
test
cmpl
dec
add
cmp
jecxz
pushf
push
psubd
push
jnp
lcall
xchg
mov
jns
cmp
mov
xchg
mov
ja
push
or
aam
or
sub
mov
pop
sbb
and
mov
cmp
int3
push
xchg
inc
mov
sti
rorb
mov
lods
es
repnz
sbb
xor
mov
inc
enter
mov
icebp
push
rorb
adc
push
mov
pop
add
pop
imul
lea
movsl
jbe
out
ljmp
movsl
lret
adc
sar
or
mov
and
cmovbe
xchg
sbb
stc
ja
jae
jbe
adc
movsb
aaa
stc
cwtl
xlat
sbb
dec
fidivrs
js
mov
inc
call
test
leave
fs
jns
imul
aam
fxch
pop
inc
inc
aam
jg
scas
push
lret
mov
repnz
repz
inc
lea
imul
pop
shrl
mov
imul
adc
call
pop
add
xchg
add
mov
xlat
inc
pop
pop
lock
mov
test
out
mov
aaa
and
sbb
mov
mov
inc
xor
aam
es
pop
inc
xchg
cltd
out
sahf
xlat
push
out
ds
sub
ss
add
cwtl
incl
and
hlt
imul
dec
nop
aam
mov
fwait
std
xchg
mov
stos
cmp
scas
sbb
outsb
xor
pop
dec
mov
popa
mov
clc
cmpsb
sti
xor
inc
mov
mov
cmpsl
pop
fistps
sub
xor
nop
push
jne
cli
add
jno
fisubs
cmp
cld
xchg
sbb
xor
inc
arpl
pusha
ds
xor
xor
jg
loopne
in
mov
aam
xchg
out
arpl
jg
pushf
adc
or
mov
iret
adc
shrb
mov
insl
popf
repz
jbe
mov
cmp
xor
imul
and
ja
les
sbbl
pop
xor
push
popa
mov
mov
mov
mov
adc
dec
ret
xchg
sbb
sub
mov
das
lea
cmc
movsl
cltd
add
in
xor
xchg
insb
addr16
fcmovnbe
mov
mov
cmp
sub
sahf
shrl
sbb
and
jnp
pushf
mov
test
outsb
test
sbbl
mov
xor
jns
sbb
jns
mov
stos
xor
inc
jle
rorb
fildll
ss
pop
and
stos
dec
outsb
inc
adc
and
jbe
ss
movsb
and
aad
fisubs
lock
fdivl
push
out
ja
testb
sti
mov
mov
lahf
jbe
mov
xlat
fwait
dec
lahf
ret
inc
stc
sbb
push
fwait
jno
xchg
lcall
stos
xchg
jns
xchg
pusha
mov
pop
popf
std
pop
pop
cmpsb
xchg
pop
jge
mov
and
sbb
sahf
divb
cmp
loop
xchg
jae
pop
push
sbb
inc
and
ficoml
ret
pushl
and
jecxz
and
loop
shl
mov
stc
stos
push
mov
inc
in
dec
jp
scas
push
loop
push
xchg
add
cld
mov
push
dec
mov
pop
xchg
pop
pop
xchg
xchg
cmpsl
and
fimull
es
repnz
inc
cld
enter
xor
cmpsb
push
mov
test
insl
jbe
xor
enter
push
pop
mov
xchg
add
shr
add
mov
lods
mov
and
mov
inc
mov
loopne
add
dec
jno
in
or
imul
stos
out
fiaddl
mov
xor
out
in
or
push
jo
inc
mov
js
xchg
sub
test
lea
push
mov
xor
ficompl
xchg
add
cmp
punpckldq
shrb
mov
test
fisttps
data16
pusha
movsl
cmpb
push
inc
addl
pop
mov
push
mov
and
jmp
or
stc
aas
call
adc
xor
dec
lret
xchg
xor
lcall
ss
aas
push
rcrb
sbb
mov
int
insl
stos
loopne
leave
ds
push
hlt
or
mov
jae
xor
test
add
sbb
imull
pop
jge
mov
or
mov
ret
inc
fnstenv
leave
xlat
mov
push
adc
pop
sub
das
and
push
stc
jl
xor
movsb
cmp
mov
jle
lahf
push
jp
adc
sbb
inc
push
es
sbb
das
stos
jo
addl
int
aas
inc
sub
cmp
mov
or
sbb
je
sub
out
adc
mov
int3
icebp
orl
inc
jns
fwait
sahf
or
das
jae
mov
icebp
fiaddl
pop
ret
mov
punpckhdq
push
xorb
xchg
jo
sti
mov
cmp
adc
or
call
cli
pop
cmp
not
ret
or
std
in
adc
insl
and
cmp
pushf
xor
outsl
clc
add
cmpsb
lret
fs
fdivl
mov
adc
add
fdivp
jae
imul
or
sbb
inc
mov
fstpl
subb
cwtl
stos
dec
mov
stos
rol
fs
push
mov
pop
ds
cwtl
mov
dec
movsl
mov
push
js
jg
outsl
lock
les
sbb
xchg
and
and
jns
daa
fdivr
out
fwait
sbb
dec
pop
ficomps
stc
cmpsb
pop
jns
jmp
cltd
sarl
ss
loope
sub
sub
nop
mov
iret
aad
mov
out
std
fdivrs
lahf
sbb
dec
jns
stos
mov
sub
or
adc
jne
leave
movsl
repz
lret
mov
pop
pop
cld
lcall
js
jmp
stc
rcrb
dec
sub
adc
pop
or
inc
add
add
add
pop
add
enter
loope
xchg
loope
mov
lods
into
imul
les
fdivr
lods
jbe
stos
jp
cmp
mov
insl
shrb
mov
fmull
pop
out
ficomps
roll
mov
adc
push
mov
push
rcll
idiv
lret
movsb
std
ds
leave
add
imul
sbb
pop
sub
cmpb
sub
arpl
dec
insl
xchg
into
sti
jne
mov
nop
pop
pusha
ss
test
mov
sbb
test
out
pusha
mull
xchg
ffree
jno
adcl
cmp
and
mov
fwait
ret
xor
pop
xor
repz
imull
bound
add
movsl
or
sbb
fisubrs
scas
sbb
lret
daa
xor
sbb
mov
pop
pop
fsubrl
lock
dec
dec
lret
mov
lock
inc
fcomi
push
sub
xlat
cmp
cmpsl
fdiv
or
daa
aam
push
incb
insb
push
push
cmp
fisttpl
and
inc
ja
dec
fwait
scas
lret
andl
and
iret
movsb
push
xchg
int3
xchg
cli
int
loope
mov
dec
and
lods
pop
sub
jle
test
and
jle
dec
ljmp
dec
scas
aam
adc
inc
hlt
cmp
mov
cs
int3
js
in
mov
sub
ljmp
push
loop
mov
popa
es
pop
push
jb
jmp
fwait
mov
addr16
scas
imul
and
cmpxchg
xor
adc
and
lret
jg
lahf
fstp
mov
outsb
sbb
test
loope
aaa
ffree
int3
call
sbb
pop
js
stc
jmp
adc
sbb
pop
test
outsb
pop
negb
addb
ds
lret
movsl
in
xchg
ds
stos
mov
cmp
repz
hlt
jns
push
gs
out
mov
scas
stos
addr16
cmp
inc
in
or
add
mov
dec
outsl
fidivrs
loop
add
mov
in
nop
out
cs
mov
jle
ds
sub
mov
sbb
xor
mov
xchg
jmp
fnstcw
std
dec
subl
fadds
dec
out
test
lret
mov
pop
sahf
mov
xchg
leave
rorb
jp
xchg
jp
std
test
inc
push
dec
clc
icebp
inc
aaa
gs
xor
xchg
and
shrl
sub
loopne
shl
jno
pushf
imul
fnsave
fldt
xor
addl
popf
scas
loopne
sbb
insb
cwtl
aad
jmp
and
mov
sbb
jbe
xchg
in
insl
add
fcomps
xchg
leave
in
xor
xor
adc
mov
aaa
pop
adc
rorl
mov
cmp
xor
test
mov
stos
dec
push
out
test
xchg
ret
cmpsb
daa
or
lahf
and
call
std
popa
xchg
push
sbb
dec
dec
lahf
lock
and
out
push
sbb
daa
cld
sarl
ds
adc
incb
cmp
enter
inc
xchg
sub
cmp
repz
sbb
dec
inc
adc
insl
pop
adc
pop
iret
adcb
fs
out
add
pop
sahf
cmp
les
in
shlb
ds
test
dec
out
fcoml
shll
call
jne
add
pop
nop
and
fdivl
jecxz
sbb
stos
aam
mov
inc
jge
mov
jmp
es
push
or
inc
ficompl
lea
es
lret
and
inc
cltd
scas
repz
test
jns
xor
daa
xlat
testl
outsl
leave
xchg
sbb
call
dec
sbbb
sar
xor
pop
test
xchg
aaa
inc
popf
scas
cltd
pop
mov
xchg
or
stos
mov
leave
add
js
pop
mov
loop
iret
lahf
and
dec
inc
aad
or
push
data16
mov
loopne
inc
cmp
or
movb
pusha
call
fstpl
and
add
fsubr
pop
lods
mov
int3
cmp
push
xchg
inc
clc
jne
lods
xor
xlat
adcl
pop
adc
inc
jno
sub
sub
and
pop
in
jne
lcall
fisubl
int
scas
stc
jge
fs
loopne
inc
pop
lods
push
dec
cmpsb
mov
fistpl
inc
xor
jmp
rclb
icebp
stos
ret
fcmovbe
and
and
xor
mov
cmp
xor
into
rcrb
in
idivb
mov
xor
add
into
inc
int
mov
cmp
ret
or
movsb
or
mov
xchg
push
insl
shlb
insl
xor
repz
mov
int3
xchg
rep
out
adc
ds
ret
jg
sarb
mov
mov
inc
xchg
adc
int
aaa
js
fildl
rorl
fstp
js
cmp
movsb
lret
stos
adc
gs
and
fnstenv
xchg
into
xchg
xor
mov
inc
jecxz
bound
and
dec
pop
and
dec
xchg
cmpl
mov
adc
sahf
sbb
call
inc
shr
clc
mov
and
sbb
sbb
pop
or
into
sbb
shrl
lds
dec
out
lds
push
arpl
jl
push
test
xchg
repz
sub
std
jns
add
mov
inc
mov
mov
pop
mov
dec
add
adc
sti
mov
sub
mov
xor
in
in
mov
jne
pop
xor
imul
leave
dec
lret
cmp
das
je
mov
clc
jge
daa
pop
decb
mov
cmp
mov
mov
or
or
sbb
arpl
sti
and
xlat
adc
sbb
jmp
jbe
mov
es
mov
sub
addb
in
inc
lods
push
push
xchg
outsl
mov
clc
push
test
sbbl
jae
setb
sub
dec
call
fucomi
xor
sub
mov
lods
add
popf
jbe
addr16
mov
xchg
cmp
xor
mov
scas
mov
dec
sub
jbe
jl
sub
pop
or
add
aam
out
and
push
inc
dec
mov
push
pop
sub
stos
mov
js
sub
mov
clc
test
pop
fwait
inc
xor
popf
xchg
mov
fnstenvs
movsl
in
testb
mov
test
pop
ret
les
stc
inc
das
fs
icebp
push
push
push
pop
mov
adc
cli
xchg
loop
cld
out
std
addl
and
mov
pop
test
adc
add
ret
ds
xor
loope
cmp
repz
sub
xchg
xor
gs
daa
sahf
fwait
push
xchg
out
add
or
loopne
aam
pop
mov
scas
stc
xor
lret
pusha
cmc
or
rorl
mov
push
mov
jno
pop
pop
mov
adc
mov
sub
jg
fnsave
push
mov
inc
nop
sub
in
xchg
dec
js
jge
int
push
jecxz
mov
inc
loope
in
cli
xor
pusha
push
pop
xchg
pusha
pop
or
cwtl
xchg
jecxz
pop
jb
div
xchg
sub
mov
in
dec
sti
subl
mov
mov
pop
or
cli
sbb
inc
data16
js
mov
pushf
popf
jecxz
jmp
mov
out
cmpsl
jg
and
pop
das
push
push
or
jp
nop
stc
lcall
ljmp
mov
loopne
cs
mov
cmp
lret
out
jecxz
icebp
dec
sahf
int
imul
ret
adc
or
sbb
fsubrs
das
cmp
add
and
lea
lea
xchg
movsb
mov
and
sbb
mov
sysenter
or
test
lret
sahf
or
rclb
jo
rcll
lods
sub
pop
fdivrl
in
inc
stc
add
mov
repz
mov
sub
int
ficomps
loop
repnz
aas
cltd
add
je
js
push
ja
ljmp
jbe
xor
xlat
mov
cmpl
sub
xchg
movsl
insb
les
lahf
lcall
not
push
aam
pop
out
fcomps
xchg
fdiv
ds
arpl
outsb
mov
and
clc
repz
mov
or
sti
mov
push
nop
dec
sbb
movsb
test
cwtl
dec
fdivl
xchg
mov
ljmp
negl
mov
jecxz
mov
dec
vcmpfalse_ossd
ret
xor
cwtl
xor
mov
inc
je
into
stos
and
shrb
call
pop
rcl
lock
aaa
mov
jnp
lods
add
enter
das
sub
mov
cmp
mov
cmp
mov
into
jle
mov
in
into
repz
cmp
xor
inc
push
mov
icebp
sub
icebp
pop
cmpb
popf
mov
nop
jp
leave
daa
dec
jle
movsl
sbb
jl
sub
lahf
loopne
inc
sbb
xor
in
add
push
fsubl
jl
adc
add
xchg
or
mov
sub
jne
cmp
xor
mov
pop
sub
xor
cmp
or
std
cmp
adc
addr16
movsb
in
cs
outsl
fildll
cmp
adc
mov
out
ljmp
jnp
fdivr
or
sub
hlt
popa
and
cmp
mov
push
cmp
popf
shll
jo
sub
and
fistpl
push
out
mov
fwait
jno
test
outsl
sti
cmp
aas
mov
lods
mov
sub
sub
mov
push
mov
push
cmp
rol
pop
ss
push
push
push
sbb
sub
add
sub
mov
fdivrl
mov
dec
out
pushf
rolb
aam
pxor
lea
dec
pusha
sbb
fcomp
mov
ret
xor
cltd
mov
lds
xchg
and
gs
ret
test
dec
and
shl
mov
adc
jb
mov
mov
repz
ljmp
xlat
out
es
xchg
xchg
mov
aas
les
nop
jg
stc
in
mov
lds
or
push
stc
popf
adc
in
cmp
outsl
std
aam
xchg
or
push
in
cmp
adc
adc
pop
jns
cmp
xchg
mov
sbb
sbb
pop
mov
mov
jecxz
inc
xchg
lods
mov
je
cmp
mov
lock
aam
stc
mov
and
xor
pop
hlt
and
loop
out
mov
add
mov
mov
