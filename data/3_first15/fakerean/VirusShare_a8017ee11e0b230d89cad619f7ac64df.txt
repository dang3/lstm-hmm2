sbb
add
mov
cmpsb
popf
test
fnstcw
push
lret
add
dec
jb
push
lcall
test
lods
jmp
jmp
xchg
jae
adc
imul
stos
into
or
out
add
jns
jecxz
mov
jl
into
xor
push
xor
adc
jg
jne
int3
mov
adc
test
je
mov
in
inc
jae
mov
sub
clc
mov
les
jmp
inc
push
pop
pop
inc
es
mov
inc
cmp
insb
jb
mov
les
aad
std
in
imul
in
lds
jne
movsb
or
mov
xchg
repz
jno
fldl
cmp
push
shl
cmp
xchg
push
jg
cmc
add
addr16
xchg
xchg
mov
testl
cmpsl
jg
std
out
aad
cwtl
mov
in
pusha
and
fists
lret
fdivrl
test
inc
sbb
cli
add
cmp
fwait
das
insb
push
clc
dec
fsts
js
mov
in
and
dec
add
adc
rcr
mov
loope
cmp
jae
cmpb
sti
add
xchg
push
push
pop
nop
lea
jnp
aaa
adc
orb
stos
jne
push
out
cmp
xchg
cli
lock
jp
adc
lods
adc
push
mov
shlb
xor
mov
sahf
and
paddb
jmp
or
mov
cmpsb
decb
xchg
push
scas
add
aad
jno
out
call
jnp
or
dec
xchg
xor
xchg
fiadds
xor
mov
and
in
cltd
jmp
jecxz
pop
sub
jb
adc
data16
lahf
outsb
adc
cmp
fsubrl
aam
pop
int3
cmpsl
add
popa
mov
mov
ss
popa
adc
sub
mov
insl
cltd
scas
shrl
fisubrl
cmp
int
mov
dec
add
fadds
nop
pushf
jbe
arpl
sub
rorb
repz
cmp
outsb
nop
fs
outsb
and
sub
xchg
adc
mov
jnp
mov
or
iret
and
lods
dec
cs
clc
add
sbbl
pop
ret
outsl
movl
lds
push
imul
in
xchg
inc
xchg
cmpsl
adc
sbb
je
add
xor
sub
test
out
sbb
adc
fwait
push
loope
neg
fadd
mov
hlt
cltd
mov
push
xor
add
jecxz
call
out
test
push
andb
inc
mov
add
cltd
jb
xchg
int3
or
jmp
lea
mov
outsl
push
and
nop
sbb
mov
aad
test
pop
aas
mov
flds
push
inc
loop
sub
rcl
cmpsl
es
jmp
aas
insb
push
sub
mov
xchg
xor
outsb
out
dec
stos
call
push
lods
xor
adc
adc
frstor
push
rcr
xchg
mov
cmp
xlat
shrl
les
ds
or
aam
push
xchg
clc
push
rcrl
jp
les
fdivrl
push
inc
sahf
nop
sub
or
mov
jmp
add
cmc
loop
inc
mov
inc
pop
sub
enter
jbe
mov
dec
in
sub
mov
cwtl
insl
xchg
orl
pop
test
cmpsl
or
dec
mov
xor
push
mull
cmp
pop
je
test
mov
push
mov
mov
sbb
stc
and
bound
mov
scas
push
jne
and
jle
pushf
ficomps
std
sbb
daa
pop
in
mov
hlt
aaa
or
mov
adc
jbe
nop
test
add
cmp
mov
loop
sbb
mov
imul
sub
insl
ret
sbb
jecxz
cmpsl
mov
movsl
pop
ret
and
mov
push
loopne
mov
mov
add
push
pop
mov
int
or
mov
dec
cltd
dec
aas
pop
mov
aad
cwtl
xchg
or
push
sub
xchg
mov
movsb
sub
movsb
add
xchg
lds
out
pop
or
imul
inc
mov
dec
sbb
iret
mov
jmp
rorl
inc
sub
aas
sbb
mov
jl
scas
dec
fdivrs
mov
mov
and
and
lock
je
jmp
incl
add
aaa
push
cmp
sahf
jl
xchg
push
xchg
mov
cmp
dec
mov
mov
cmpsl
cmp
sub
cmp
jns
mov
mov
dec
cmpsl
xchg
cmp
lret
or
mov
jae
xchg
mov
frstor
mov
xchg
xor
ret
call
nop
stos
fldenv
lds
xchg
mov
sbbb
enter
jp
add
cmpsb
mov
in
jl
test
lret
data16
imul
pop
xchg
ret
pop
cli
dec
dec
or
in
rclb
push
pop
sub
cs
xchg
in
sahf
mov
adc
daa
pushf
mov
pop
adc
std
pop
adc
in
xchg
fidivs
stos
adc
cmc
jl
mov
addb
mov
and
sbb
scas
insb
stos
jnp
mov
fidivl
push
rcrl
sub
pop
push
jl
jne
imul
jns
ficoms
lahf
popa
stos
pop
and
je
loop
je
arpl
mov
mov
dec
mov
mov
cltd
push
cmp
fwait
dec
add
imul
jp
mov
pop
cmp
jo
lods
shl
out
movl
mov
mov
iret
into
in
es
xchg
mov
jle
shlb
xor
pop
push
lds
pop
fcomi
push
xor
hlt
push
scas
outsb
int3
arpl
scas
push
cmovle
js
or
pop
mov
add
fiadds
scas
in
daa
shlb
les
inc
aaa
test
pop
push
fdivrl
cmp
mov
sub
mov
jmp
insl
es
loop
in
int3
cmp
xor
xchg
inc
jo
xlat
jnp
mov
xor
pop
pop
les
inc
and
xor
inc
fsubr
and
inc
test
and
mov
lret
dec
clc
adc
dec
xchg
mov
mov
dec
js
in
cmc
push
jle
xor
fsubr
pop
and
daa
cli
and
outsb
xchg
mov
insl
jecxz
inc
rcrl
xor
mov
sarl
push
mov
mov
repnz
pop
pop
mov
std
sub
cmc
xor
or
add
mov
pop
fcoms
and
pop
inc
inc
jnp
cli
jl
add
fildl
cmp
paddsw
in
in
movsl
pushf
popf
inc
sbb
or
pop
adc
mov
test
cmp
cmpsl
les
pushf
cmpl
lea
push
ljmp
in
in
mov
sbb
dec
mov
mov
mov
ret
sub
xchg
pop
mov
out
out
dec
in
pop
icebp
or
xchg
sub
and
out
add
out
loopne
or
fs
sbb
lods
xlat
nop
aad
bound
aas
or
jl
xchg
cwtl
xchg
cmp
mov
push
push
and
jp
in
cmp
dec
pop
dec
sarb
fiadds
xchg
adc
push
sub
pop
hlt
push
add
cwtl
jmp
lods
sahf
xchg
xchg
ficomps
xchg
dec
shrb
add
push
insl
imul
stos
xor
aas
das
bound
cmp
push
or
cmpsl
xchg
lahf
sub
xchg
leave
xchg
or
popf
movsl
bound
cmp
repz
cli
loop
out
add
mov
cmp
popf
mov
nop
and
pop
cwtl
data16
xchg
or
hlt
shll
cmp
into
rcl
or
movsb
shrl
data16
mov
pop
in
sub
bound
jne
inc
mov
push
lcall
cmpsb
inc
xchg
movups
rorl
add
sbb
insl
inc
or
jle
pop
mov
add
mov
stos
dec
fstl
or
cmp
or
add
test
jmp
pop
fwait
push
lcall
push
mov
jbe
outsl
dec
es
insl
es
aas
mov
push
mov
sub
ffreep
or
outsb
sbb
mov
aam
xchg
or
xchg
adc
das
subb
mov
xchg
cmp
pop
std
pop
mov
dec
pop
xor
xchg
mov
mov
movsb
dec
repz
test
push
jecxz
push
aaa
lock
out
lret
aas
mov
mov
mov
dec
repz
sub
push
xchg
and
fstpt
scas
fldcw
fwait
xor
mov
mov
xor
add
adc
sub
mov
jle
cmpsl
in
imul
call
sbb
ret
and
adc
pop
repz
in
cmp
jne
jp
fs
test
js
adc
sbb
cltd
lret
cmp
icebp
jne
jns
mov
xchg
xchg
push
xchg
mov
int3
test
add
in
push
outsb
inc
lods
shlb
push
inc
mov
mov
mov
adc
bound
and
das
adc
int
mov
jb
imul
lret
ret
out
stos
pop
in
popf
loopne
sbb
movsl
call
or
mov
xchg
cmpsl
imul
insb
push
std
arpl
jp
cmp
fnsave
lret
sub
sub
adc
jl
imul
out
inc
and
cmp
inc
pop
sbb
movsl
mov
test
jne
stc
sub
or
loop
fiadds
test
dec
mov
and
movl
jbe
subb
pusha
push
push
aas
sbb
aam
inc
and
xor
add
inc
mov
ds
inc
jb
imul
sbb
jge
xor
jno
test
mov
lret
fsubs
inc
cld
mov
fwait
push
lcall
adc
mov
movb
inc
sahf
and
lcall
mov
fisubrl
inc
push
mov
movsb
jl
sub
shll
movsl
ss
mov
in
insl
xchg
and
stos
in
mov
ljmp
cmp
push
or
jle
pop
push
and
adc
jp
out
push
sub
mov
jmp
xchg
sub
adc
je
xor
or
aaa
shlb
dec
mov
subb
int
cmpl
push
mov
sbb
cmp
xchg
lds
mov
push
push
and
fstpt
add
pop
test
lret
mov
and
outsb
mov
inc
lcall
mov
cmp
icebp
xlat
sbb
sbb
fs
iret
and
push
mov
pusha
jno
arpl
dec
xor
xor
imul
or
cltd
rcrl
ret
jl
jmp
cld
rcl
addb
in
data16
xchg
jecxz
cmp
xor
incl
test
daa
pop
mov
ljmp
pop
cmp
xchg
xchg
jnp
pop
ljmp
add
fisubs
jo
cmp
xchg
and
shrl
loop
fcoml
out
xor
or
pop
fsubrl
or
int
push
add
inc
inc
push
mov
adc
clc
inc
lods
cmpsb
lahf
xchg
mov
inc
pop
cltd
mull
xchg
or
and
inc
outsl
lahf
cmp
repz
xor
ljmp
insb
add
push
sbb
push
sbb
sahf
push
mov
test
sbb
push
or
and
fisubl
nop
push
jecxz
cmp
inc
cmp
cmp
or
lock
jecxz
mov
or
and
mov
out
sbb
adcl
loopne
mov
pop
mov
sbbb
adc
adc
subl
clc
imul
fsub
xchg
ja
nop
push
cmp
fldenv
leave
xchg
xchg
icebp
jae
and
push
js
cmp
jmp
into
add
add
xlat
popa
lahf
or
int3
das
pusha
dec
jle
aas
sti
rolb
push
out
sbb
jns
fcmovb
iret
add
dec
out
gs
lret
cmp
inc
jns
add
test
div
popf
pop
push
sub
fnstcw
pop
mov
notl
fs
mov
insl
inc
jnp
rorl
test
fwait
push
repz
push
pop
pop
ud1
xchg
ljmp
bound
mov
cmpsb
icebp
repz
mov
fldl
mov
imul
sbb
sti
add
sub
aad
out
aam
stos
mov
jecxz
xlat
and
pop
lcall
push
out
pop
xchg
adc
mov
movsb
sub
dec
cmp
aas
push
or
sub
ds
cmc
outsb
cld
push
lahf
dec
sub
aas
addr16
push
mov
dec
mov
hlt
push
pusha
sub
cmpsl
push
push
add
cmp
fistpll
iret
dec
pop
je
lods
or
insb
rclb
push
push
xor
inc
fsubs
lock
add
or
push
sbb
pusha
xor
cld
rcll
cmp
mov
leave
and
mov
or
mov
cmpsb
push
mov
mov
popf
insl
push
imul
add
sbb
push
dec
jns
xchg
aad
sbb
outsb
and
popf
and
ss
jg
and
stos
adc
xchg
out
andl
or
and
inc
add
shll
sti
sbb
jmp
xchg
scas
pushf
pop
call
clc
cmp
lahf
mov
pop
push
push
mov
ja
or
gs
sahf
sbb
mov
jnp
roll
and
vmaskmovdqu
loope
mov
lahf
jg
stc
cmp
push
jmp
cmp
and
cli
repz
andb
sbb
sbb
mov
mov
popf
add
iret
aas
ljmp
push
push
or
call
adc
inc
cmp
iret
mov
and
xor
jmp
cltd
mov
ljmp
adc
mov
inc
mov
loop
cmpsb
mov
out
out
push
lock
std
scas
push
in
push
gs
ds
and
push
idivb
lea
xorb
and
dec
pop
ss
loopne
lds
jno
into
das
sub
mov
divl
pusha
test
sub
pop
call
push
xor
fdiv
cmc
imul
inc
insb
jge
hlt
lcall
cmp
mov
dec
adc
es
in
cmp
in
leave
sub
cmp
lods
inc
into
push
push
ljmp
add
lahf
insl
out
mov
divb
es
pop
rorb
cmp
add
jnp
sbb
das
pop
jl
add
clc
popf
fistps
cmp
out
inc
in
xchg
mulb
aam
pushf
aas
jle
popl
xor
push
loop
stos
dec
mov
call
in
cmp
popf
jg
loop
movsb
faddl
cs
jb
mov
ret
cli
test
jmp
push
xor
cli
das
jnp
test
fsts
es
push
add
hlt
and
sti
je
mov
subl
xorb
dec
cmp
sbb
out
pop
fists
mov
mov
mov
ljmp
jmp
inc
cmp
sti
push
cli
not
lahf
inc
pusha
aam
shlb
aad
mov
dec
push
mov
add
in
enter
mov
mov
push
mov
mov
jbe
int3
in
ret
dec
mov
es
or
lcall
aas
js
popf
movsb
jl
or
inc
lcall
aad
mov
jp
pop
sub
cmp
call
add
xchg
imul
imulb
shll
cli
add
pop
pop
add
cmp
sub
inc
sbb
xchg
lea
lds
and
shlb
out
pop
arpl
inc
in
jns
in
dec
in
imul
add
or
orb
out
jl
cmc
mov
enter
sbb
sbb
mov
sub
fwait
lods
fnstcw
fstpt
push
sarb
imul
jnp
and
xor
mov
js
mul
dec
inc
push
inc
das
sub
rdpmc
test
jo
add
inc
in
scas
fisubl
loope
inc
push
cmp
movsb
lret
aam
sub
sbbb
scas
add
add
outsl
shrb
imul
negb
adc
lcall
sbb
sbb
rcrl
push
cld
cli
add
loop
call
leave
stos
andb
lahf
adc
pop
xchg
int
jg
add
add
mov
bound
adc
push
sub
cld
insl
addb
fcoml
ljmp
inc
jp
ret
lock
xchg
imul
inc
xor
les
shrb
adc
cmc
cmpsl
pop
out
sbb
bnd
mov
xchg
imulb
or
push
xor
mov
dec
xor
jl
fnstenv
mov
mov
and
pop
popf
popa
ret
lods
loop
std
and
rolb
mov
mov
loope
faddl
jne
mov
cmp
fisttps
iret
outsl
out
jl
mov
add
dec
aad
sub
rorb
shrb
ja
xor
inc
daa
mov
mov
les
xchg
and
add
jmp
and
sbb
xchg
sub
out
shrl
fisttps
xor
cli
mov
xor
ds
xchg
or
inc
dec
aam
out
insl
push
outsb
ret
adc
out
out
addr16
xchg
fnstcw
cmc
xchg
rolb
jle
or
je
fdivrs
push
leave
jno
cltd
shll
dec
jmp
or
ja
fnstcw
rorb
aaa
xor
shll
xchg
int
out
pop
sbb
pop
inc
ds
outsb
inc
mov
jo
and
outsl
lret
push
out
sub
xchg
push
enter
or
sahf
in
inc
arpl
jb
jnp
mov
or
jmp
mov
aaa
adc
outsb
mov
inc
mov
jmp
in
jbe
inc
cmp
pop
xchg
lock
fwait
les
mov
and
pushl
xor
fdivl
mov
inc
xlat
push
xchg
or
ret
jns
adc
imul
jne
sub
loop
insl
fdivp
fs
jno
mov
std
mov
pusha
or
mov
inc
pop
in
xor
dec
outsb
pop
fstl
mov
pop
sbb
sbb
dec
pop
enter
push
push
hlt
shrl
ja
mov
xchg
rorl
mov
push
mov
push
aam
dec
sahf
inc
out
cwtl
insl
clc
push
sub
sti
aam
cmp
push
inc
pop
lret
dec
or
sub
mov
in
aas
sbb
hlt
frstor
test
jnp
pusha
dec
cmp
and
jle
jp
pusha
sbbl
sub
sub
dec
inc
cs
stc
call
lea
stc
or
or
and
cmc
xlat
mov
jo
xchg
nop
test
xor
out
in
aam
rolb
xrelease
push
mov
add
sub
cmovge
stos
pop
xor
repnz
lret
dec
enter
dec
stc
mov
mov
pop
push
fsubs
shlb
hlt
push
shl
pop
das
xchg
or
pop
xor
mov
dec
push
clc
sub
clc
add
out
cmp
dec
mov
jle
cmp
mov
sbb
or
sar
push
inc
and
add
xor
or
popa
xor
xchg
je
push
and
shll
jne
es
rolb
adc
inc
jp
lods
enter
fwait
push
ret
lcall
mov
add
push
pop
dec
popa
ss
repz
scas
push
sar
loope
jge
mov
jmp
mov
xchg
mov
cmp
xchg
mov
pushf
add
sahf
jge
mov
sahf
push
push
rcll
adc
in
jecxz
movb
push
stos
push
mov
adcl
sub
dec
push
ret
sbb
sti
add
dec
out
mov
sbb
dec
cmp
mov
ds
push
call
fildll
mov
sub
jno
and
insl
mov
and
roll
mov
xchg
mov
jmp
and
add
in
das
mov
mov
cmp
xor
addl
ja
push
xor
inc
test
adc
lods
mov
mov
fdivrl
out
orb
nop
push
cmp
and
mov
ss
xor
push
sub
mov
scas
xchg
rcll
xchg
rol
lock
jl
js
jns
push
inc
rorb
cmp
mov
lret
ret
fadd
jmp
lahf
cmpsb
in
sti
mov
mov
cmp
cltd
add
cmpsl
fistps
insb
pop
cld
cltd
movsb
mov
mov
lret
mov
fs
xlat
or
xchg
aas
push
dec
fs
add
mov
dec
je
or
mov
sub
jae
enter
repnz
inc
insl
call
inc
nop
mov
arpl
test
sbb
incb
hlt
loope
cmc
lods
or
or
sub
adcl
leave
scas
jl
jl
pop
pop
push
bnd
insb
out
into
fwait
mov
mov
jne
ss
inc
sub
cmp
cs
mov
cmpsb
cld
pop
je
scas
jle
push
jne
int
in
adc
sub
add
pop
clc
js
add
loopne
es
aaa
cmp
imull
enter
cmp
outsb
xlat
nop
sbb
flds
jp
jecxz
cld
mov
add
jl
and
push
pop
push
push
std
cwtl
adc
or
adc
sbb
xchg
and
mov
sarl
mov
pop
rorb
sbb
mov
mov
loope
inc
mov
jnp
lds
mov
sub
rorb
sub
movsb
add
in
sub
call
outsl
xchg
add
xor
arpl
lods
and
inc
mov
jge
ljmp
jl
and
inc
push
mov
mov
nop
jo
adc
jno
lret
xchg
mov
hlt
jmp
mov
mov
jecxz
in
test
xor
and
xchg
inc
lret
push
fmuls
pop
and
push
sub
test
out
cwtl
clc
movsb
mov
sbb
mov
dec
mov
xor
mov
fmulp
pop
stos
sahf
insb
pop
rolb
aaa
mov
inc
mov
pop
mov
pusha
mov
lea
test
cmpsb
pop
das
aad
fistpll
movsb
ss
in
in
in
and
cwtl
mov
mov
ds
mov
insl
add
icebp
push
add
mov
jbe
push
test
in
popf
cmp
mov
shufps
xchg
sub
lods
dec
bound
dec
push
xor
push
push
mov
das
mov
jecxz
ja
std
test
mov
and
jne
jbe
jecxz
mov
fldl
xor
gs
es
insl
jmp
arpl
dec
cli
dec
xchg
push
jnp
std
sarl
inc
cs
push
inc
lds
add
pushf
jecxz
mov
xchg
aad
xchg
sub
mov
pop
jo
push
sub
inc
pop
leave
ss
mov
mov
mov
cs
ja
data16
mov
jne
pop
test
insb
jg
pop
cmpsb
lret
aam
rorl
or
loope
cmpsb
bound
add
adc
xor
imul
loop
jnp
or
cmp
icebp
and
subl
xchg
xor
popf
rorb
mov
jnp
dec
sahf
mov
and
push
outsl
pop
movsb
cmp
dec
dec
aaa
vsqrtpd
push
js
xor
cmpsb
and
xchg
test
pop
icebp
ss
movsl
cld
sub
orl
sbb
clc
arpl
sbb
lea
loopne
mov
es
nop
push
pop
insb
inc
push
add
cmp
xchg
adc
adc
sbb
testb
and
jmp
out
leave
shll
fstpt
add
xchg
test
aaa
or
adc
lret
lret
mov
int3
mov
rolb
and
sub
add
cmc
fistl
mov
outsb
push
xor
mov
jg
aas
pop
mov
dec
popa
jnp,pt
pop
inc
mov
mov
leave
jle
out
jle
test
mov
push
push
jl
test
mov
jns
je
lcall
jmp
jl
push
xor
in
fdiv
mov
cmpsb
repz
xchg
xor
mov
mov
sahf
adc
xchg
sub
shlb
imul
packuswb
xchg
enter
jp
mov
xchg
fnstenv
hlt
imul
pusha
stos
push
cmp
push
or
andl
pushf
hlt
movsb
cltd
shr
dec
sbb
aaa
adc
push
or
popf
dec
push
xor
and
pop
adc
inc
addl
scas
pusha
repnz
pop
adc
ljmp
lcall
dec
mov
mov
test
inc
nop
fucomi
inc
mov
xor
sti
int
mov
mov
add
cmp
int3
pop
icebp
push
inc
adc
or
inc
pop
rcrb
rolb
sub
test
popf
inc
or
inc
xchg
inc
push
outsl
bnd
xor
pop
aas
popf
arpl
ljmp
aam
push
addl
dec
not
mov
push
push
movsl
enter
cs
lret
xchg
mov
inc
stos
cmpsb
bound
adc
test
pop
sbb
or
xchg
and
mov
daa
data16
mov
sti
xchg
loope
xlat
cmpsb
std
aas
dec
lds
push
adc
mov
and
dec
lock
out
mov
fsubrs
faddl
aad
pop
pop
adc
mov
pop
xor
sbb
lahf
pop
cmpsl
mov
lock
jl
lret
push
sbb
fstps
daa
inc
data16
and
and
idivl
mov
frstor
leave
aam
fsubp
xchg
dec
add
fincstp
add
pop
push
das
inc
mov
loop
inc
pop
mov
andb
lcall
inc
lock
sub
ljmp
fnsetpm(287
jg
pop
xchg
cmp
mov
inc
mov
test
jne
and
and
lea
pop
xchg
call
div
sub
mov
inc
xchg
ja
mov
or
test
xchg
pop
ljmp
pop
lods
out
test
jbe
adc
into
es
xchg
rolb
aam
xchg
and
push
add
mov
insl
es
or
stc
popa
loope
xchg
sti
imul
lcall
pop
push
sbb
mov
xchg
push
mov
lods
push
cmp
and
in
popa
adc
fists
mov
aam
fildll
sbb
and
dec
pop
mov
mov
das
out
jle
push
pop
push
mov
lods
mov
shrb
repz
jmp
mov
adc
fcomps
pop
movsb
hlt
cmp
xor
add
push
pusha
enter
mov
sub
jp
xor
adc
sub
xchg
mov
xor
mov
jp
lds
ja
xlat
nop
in
pop
sub
mov
inc
sbb
fwait
out
add
scas
mov
clc
sub
mov
mov
or
fnstsw
popa
or
or
cmpb
fcmovbe
xor
int3
sub
xor
push
jecxz
fstp
popf
jp
loope
push
xchg
push
popa
push
xor
rcll
leave
sub
inc
out
adc
imul
jae
jl
lods
shlb
mov
loop
or
add
mov
sbb
subl
mov
sbb
outsl
dec
mov
and
mov
mov
add
data16
data16
imul
or
sbb
mov
or
mov
jns
push
lea
test
mov
cmp
mov
jmp
out
jg
in
sub
cwtl
popa
cwtl
gs
aam
mulb
mov
cmp
adc
pop
push
push
mov
sbb
ss
mov
mov
xchg
bound
fs
cs
ja
popa
pop
push
lds
loopne
pop
fidivrl
sbb
mov
sahf
ds
xchg
jnp
push
or
jp
xchg
adc
mov
int3
aam
inc
mov
outsb
in
jnp
clc
ret
fucomip
mul
xchg
in
mov
adc
iret
or
repnz
pop
jecxz
cld
fistpll
rolb
incl
pop
movsl
rorl
mov
test
in
insl
mov
xchg
dec
ret
mov
das
push
shll
xor
cmp
mov
mov
jo
xor
sub
sub
outsl
je
xchg
into
ret
insb
daa
lcall
push
adc
push
xor
push
bound
lods
aam
sbb
add
pop
xchg
aaa
js
jmp
adc
xchg
shlb
inc
sbb
repnz
add
ljmp
popf
int
inc
mov
add
or
xor
sbb
xchg
lock
push
std
gs
idivb
xor
pop
mov
call
std
ror
xor
repz
cli
xorb
out
xorb
jmp
pop
pop
iret
out
pushf
lock
daa
sbb
lahf
into
lock
icebp
cmp
test
aaa
add
jae
divl
std
mov
out
pop
or
adc
xor
test
mov
mov
cli
mov
add
movl
out
mov
loope
adc
aam
adc
inc
inc
arpl
fs
pop
sti
and
sbb
das
outsb
xor
mov
adc
sub
push
popf
xchg
mov
mov
pop
push
xchg
shrl
aad
sahf
sub
lret
pop
cmp
mov
std
addl
fnstcw
xchg
sub
fidivrl
test
test
adc
ljmp
dec
outsl
dec
nop
jmp
aam
adc
sub
cli
nop
mov
int3
dec
mov
push
repz
mov
dec
js
inc
xor
dec
inc
sub
xor
enter
nop
int
stc
sub
and
outsl
dec
movsl
aam
jae
push
cmc
mov
call
inc
fcmovne
or
dec
jne
fs
mov
push
test
loopne
fucomp
mov
pop
in
jle
rcrl
jmp
cmpsl
sbb
jecxz
imul
push
push
loopne
lahf
imul
ljmp
mov
incl
and
test
hlt
sbb
push
pop
mov
nop
adc
jo
imul
add
adc
cmp
add
or
xor
xchg
lds
jnp
cmpsl
or
pop
add
bound
ja
adc
aaa
orl
add
dec
push
inc
pop
mov
imul
ret
push
cld
dec
mov
xchg
test
inc
lods
fmul
xchg
daa
inc
xlat
add
movsb
sub
aas
or
jl
or
movsb
pop
ljmp
cmp
aaa
cmpsb
xchg
dec
inc
lret
sbbb
cmp
pushf
ret
mov
nop
push
push
mov
ds
insb
ret
out
cmovg
dec
dec
cld
push
inc
mov
popf
push
xchg
lcall
lret
roll
inc
sbb
ds
mov
cmp
test
popa
jbe
inc
es
fnsave
cmp
xor
nop
jg
cmpsl
cmpsb
ss
inc
roll
ja
aaa
int
out
add
dec
mov
cmc
js
xrelease
sbb
pop
fs
popf
mov
adc
ljmp
push
add
shlb
push
out
popa
cmp
mov
sbb
fldt
mov
mov
mov
cli
inc
pop
xchg
cmp
jge
inc
lea
add
lods
mov
sub
push
dec
nop
xor
cmpsb
mov
pop
mov
add
pop
test
insb
dec
frstor
mov
mov
xchg
mov
and
xor
lds
es
dec
mov
adcb
lock
pop
icebp
jne
sbb
and
ficompl
pushf
dec
std
adc
xchg
xchg
sub
sarb
xchg
fdiv
in
mov
icebp
popf
xor
fstpt
push
push
cltd
jl
fucom
add
sbb
pusha
pop
or
push
aaa
sub
mov
dec
ucomiss
xlat
aad
sti
lahf
sub
jns
ds
scas
sbb
aad
jne
jp
mov
mulb
xchg
xchg
cli
dec
div
inc
and
mov
inc
test
mull
xchg
je
mov
pop
loope
out
mov
push
stc
cmp
dec
add
roll
sbb
push
inc
adc
dec
xorb
dec
fistpll
pop
cmp
std
push
push
xor
ds
ds
add
insl
sub
imul
xor
testb
adc
or
or
push
fists
dec
and
push
pop
pop
mov
out
dec
cmovno
cmp
leave
insl
addr16
pop
add
dec
fstps
cli
loop
mov
ror
mov
enter
fildll
inc
sbb
aas
int3
ss
adc
hlt
call
stc
lahf
adc
cmp
mov
inc
xor
lea
inc
icebp
push
int3
out
xor
jle
out
mov
push
dec
imul
lods
mov
nop
jg
inc
arpl
cmp
jg
nop
adc
fidivrl
insb
stos
sub
xorl
scas
repnz
xchg
sar
lcall
jg
inc
outsl
std
repz
pushf
push
call
faddl
mov
cld
fcomps
add
mov
mov
cli
jecxz
or
mov
loopne
or
sub
adc
out
inc
rcll
dec
fmuls
lahf
push
andl
repz
cltd
jns
mov
es
inc
sub
das
adc
fnsave
in
mov
push
cmpsb
test
xchg
movsl
add
vpaddw
pop
ja
es
pop
dec
jno
xchg
aam
icebp
fwait
jb
and
or
or
add
ljmp
inc
shrb
sbb
xor
out
lcall
xchg
in
lret
cmpsl
mov
ret
call
push
mov
mov
lahf
pop
arpl
fs
sub
sbb
dec
out
jnp
mov
jb
call
popa
pop
add
cmp
clc
imul
into
add
and
shl
sbb
incl
cmp
cmc
aad
lret
out
incl
mov
push
mov
inc
les
cld
pop
in
lret
into
ficoms
scas
mov
leave
call
push
jg
jb
out
mov
lahf
in
test
and
push
xchg
stos
in
jle
adc
fmul
cmp
jb
aaa
leave
nop
add
dec
iret
push
in
mov
test
pop
sahf
dec
ret
lea
addr16
call
jnp
pop
lods
jne
out
test
popf
sbb
loop
sub
in
mov
fisubrs
dec
sub
rclb
sub
fisubs
push
lcall
fs
pop
cmpl
mov
mov
xchg
cli
pop
pop
cwtl
imul
out
push
arpl
nop
mov
xchg
enter
call
cmpsb
aam
and
shrl
adc
bound
std
test
imul
fstps
lock
add
andb
or
add
adc
icebp
sub
pop
push
sbb
sbb
inc
mov
insb
jl
dec
imul
mov
dec
enter
adc
dec
idivb
mov
sbb
popf
cmp
cmp
es
mov
int3
or
push
mov
std
das
imul
in
xchg
fildl
mov
lahf
push
sbb
push
push
inc
aad
ss
mov
xchg
aad
shll
add
pop
cmc
push
fdivl
push
pop
xchg
mov
push
sbb
dec
fsubs
or
dec
and
stos
adc
clc
fs
sub
movsl
xlat
pop
subl
int3
iret
in
ja
rorl
mov
xchg
test
mov
sbb
adc
jmp
inc
add
scas
lahf
loope
and
cmpb
pop
xorl
cmc
repnz
ss
add
and
push
dec
stos
cmp
pop
add
xor
lret
push
mov
test
testl
mov
mov
in
cli
loop
add
jnp
dec
inc
enter
inc
xchg
fsubl
xor
xchg
cli
mov
sbb
sbb
out
mov
mov
cld
xchg
or
jle
push
insb
sub
hlt
fdivr
loopne
test
mov
pushf
jmp
lods
xor
lods
adc
clc
add
push
int3
scas
into
mov
mov
push
stos
inc
out
pop
andl
push
arpl
inc
inc
xor
lret
push
lret
fisttpll
xorb
push
cmp
jmp
mov
rcrb
jo
test
ja
mov
rcrl
fisttps
add
mov
pop
imull
pop
ret
clc
ja
mov
mov
jb
mov
call
or
push
cmpsb
repz
scas
mov
xor
arpl
shl
lcall
sbb
sub
andl
lods
pop
mov
cmp
inc
mov
xor
mov
aaa
mov
lret
push
iret
in
dec
push
fisttps
or
iret
out
in
push
sahf
setle
sahf
or
cmpsb
xchg
into
pop
cwtl
cmpsl
lahf
xchg
or
push
repz
and
cs
push
jbe
mov
xor
dec
mov
cmp
push
loop
jb
cmp
movsb
pop
push
fimull
push
in
movsb
orb
adc
arpl
test
xor
movsl
pushf
incl
js
aaa
test
add
js
sbb
xchg
mov
xchg
pusha
mov
dec
or
mov
je
andb
cmp
sti
sbbb
jb
out
cli
xchg
sbb
jo
ficoms
loop
push
div
push
std
mov
sub
jnp
sti
aad
sub
test
xor
mov
sub
loopne
xchg
mov
sar
xor
dec
dec
out
mov
jnp
mov
hlt
mov
fmull
fldcw
adc
add
pop
pop
lea
stos
push
sbb
dec
xor
or
sbb
mov
lods
bound
out
jge
mov
into
cltd
lret
or
int3
ror
fmul
cltd
mov
jno
dec
rcl
mov
into
out
xchg
xchg
lock
inc
push
cmpsb
add
enter
dec
mov
add
push
aaa
imul
mov
pusha
adc
inc
inc
scas
js
in
xlat
arpl
mov
dec
push
mov
lcall
sbb
out
cmp
jbe
paddw
xlat
in
mov
aad
xlat
dec
adc
es
mov
push
mov
insl
push
pop
dec
movsb
out
lea
inc
cmp
sbb
pushf
xor
pop
rclb
mov
mov
xchg
pushf
xor
popa
pop
pop
push
jl
mov
inc
push
pop
push
addb
jmp
cmp
jmp
lods
sbb
jle
push
mov
rolb
pop
pop
push
icebp
shlb
and
mov
push
adc
mov
arpl
dec
dec
or
call
ret
mov
fisubs
jp
and
inc
addr16
sbb
imul
pop
mull
mov
or
pusha
in
cld
pop
pop
push
fs
jae
out
int3
cld
lock
jl
cmp
pop
mov
into
dec
aas
aaa
jmp
xchg
outsb
pop
scas
mov
test
hlt
pop
loopne
lcall
jnp
adc
dec
sbb
mov
pop
rcrl
test
pop
add
push
lret
mov
or
inc
insb
orb
loop
push
xchg
mov
lahf
jp
out
testl
inc
push
mov
in
sub
jge
mov
lahf
sbb
pxor
xor
test
mov
push
add
lret
fildl
sbb
inc
cltd
push
jmp
jno
ljmp
cltd
mov
cmc
dec
pop
cmc
xchg
mov
xor
fisubs
sahf
sbb
pop
les
adc
add
shll
sbb
inc
push
dec
ficomps
xor
and
sub
jbe
xor
push
pop
mov
fistpl
cmp
sarb
jo
jge
add
pusha
cmpsb
and
sub
dec
cmp
jge
test
aaa
test
adc
mov
and
adc
cmpsb
push
dec
xchg
dec
mov
mov
push
push
adc
and
or
dec
jg
icebp
cmp
mov
pop
xchg
pop
pop
mov
sub
outsw
add
jmp
testl
xchg
mov
data16
pop
mov
ljmp
lret
das
ret
mov
push
mov
loope
mov
daa
cli
fs
add
fnstsw
sbb
arpl
out
iret
adc
into
xor
xor
push
xchg
in
mov
and
inc
repz
ja
fisubrs
insb
inc
mov
cltd
mov
or
jbe
or
fwait
dec
xchg
fistpll
and
aam
jg
mov
pop
pop
stc
gs
jge
int3
lcall
notl
xchg
ds
mov
mov
and
sub
mov
push
mov
cs
dec
mov
xchg
mov
faddl
popa
fwait
imul
insl
xchg
or
and
jmp
xor
cmp
add
mov
imul
aad
into
adc
js
es
sbb
or
dec
mov
pop
outsl
rorb
fwait
jae
ljmp
cmp
dec
sbb
add
jg
adc
mov
ret
out
sub
or
lcall
or
incl
cld
rolb
lock
movsb
cmp
mov
loopne
call
mov
dec
sub
insb
cmp
push
mov
or
cmpsl
lret
inc
mov
push
pop
sarl
pop
popf
fists
ja
mov
mov
push
out
enter
js
mov
push
add
mov
sub
or
mov
fucomp
aam
sbb
or
data16
sbb
icebp
ja
subl
mov
shll
sbb
mov
mov
cmp
sbb
aam
movsl
and
push
mov
jge
inc
pop
cmp
sbb
lea
lret
lock
push
sarl
dec
adc
and
mov
mov
rcrl
cltd
aaa
sub
dec
aam
int3
cmp
jne
adc
cmp
sbb
inc
psllw
or
std
fbstp
and
cmpsb
stos
xor
js
pop
into
inc
adc
jo
repz
xchg
cli
orb
cmp
jecxz
scas
push
mov
adc
add
mov
jmp
neg
or
inc
xor
pushf
push
aad
dec
push
leave
rolb
sub
and
out
jecxz
dec
jle
adc
mov
mov
xor
jbe
shl
jbe
cltd
inc
mov
cmp
mov
nop
jno
sti
cld
js
aaa
iret
xor
adc
dec
adc
dec
add
mov
loop
pop
or
std
jg
outsl
stc
outsb
ret
aad
mov
dec
xor
aas
and
cld
pop
loope
stos
pusha
jbe
cmpsb
or
mov
push
in
mov
fldenv
adc
je
sub
stc
sti
pushf
loopne
in
in
mov
cwtl
push
lahf
mov
cmpl
mov
fwait
push
sti
fmuls
enter
push
add
push
pop
ret
add
adc
ljmp
sbb
xchg
sarl
mov
jo
sbb
rolb
and
mov
std
in
cmpsb
int3
jg
xor
hlt
iret
mov
insl
cwtl
or
push
imul
xor
jb
sub
fldenv
inc
insl
js
push
ffreep
je
jmp
lret
and
mov
test
or
jl
mov
pop
cld
sub
data16
pop
fsubl
adc
pusha
sub
add
push
test
sti
jne
idivl
mov
add
pushf
mov
pop
pusha
gs
jne
xchg
shrl
or
jnp
pop
push
sub
scas
pop
out
xchg
addr16
xchg
gs
loopne
lods
push
movsb
stos
gs
movsb
inc
stc
and
jo
mov
mov
fldpi
stc
popa
push
cmp
sti
sahf
js
fistl
cli
sbb
loopne
call
inc
fdivrl
push
popf
fcoms
push
inc
hlt
lds
cmp
ss
ja
add
mov
ret
in
jmp
enter
jge
sbb
loop
mov
rorb
or
mov
lea
mov
leave
inc
xor
mov
clc
sbb
out
inc
push
repnz
imul
bound
and
dec
sbb
push
mov
jmp
mov
fwait
out
push
icebp
jbe
fstps
cltd
out
mov
and
aad
lret
sbb
or
sti
add
call
in
in
sbb
int
fdivrs
xchg
cltd
add
inc
pop
or
pop
addl
and
push
pop
repz
out
daa
in
popf
mov
add
or
mov
mov
dec
dec
into
sahf
sub
jne
bound
pop
mov
pop
sbb
fcomps
ds
mov
mov
mov
sub
fcompl
jge
std
mov
out
bound
xorb
ror
dec
and
js
push
pop
push
fsubrs
cmp
stc
xchg
mov
sub
daa
repnz
mov
int3
push
cmp
aas
rcll
push
movsl
add
aad
xchg
popf
add
test
or
or
sti
shlb
push
fidivl
cli
jno
subl
push
jnp
sbb
mull
lods
aaa
inc
cmp
dec
jmp
out
fldenv
or
mov
xor
and
mov
imul
fs
mov
into
add
add
fidivrl
rol
jbe
lods
fcmovnbe
imul
scas
loopne
add
mov
dec
addr16
mov
and
dec
jo
jns
cs
fistpl
fimull
fcompl
out
movl
lcall
stos
and
rcrb
xlat
js
inc
out
xor
test
lock
test
xchg
mull
leave
test
ds
lods
lods
or
and
sbb
test
jp
test
and
lock
xchg
outsl
push
daa
sar
insb
lret
lods
add
pop
into
lcall
in
loope
ror
popa
jae
scas
shlb
dec
pop
jmp
xor
pushf
cmc
sahf
icebp
in
mov
mov
in
shl
mov
ljmp
ds
mov
push
sub
imul
sub
mov
stos
dec
call
cmpsb
jnp
rol
cmp
test
or
or
add
ja
lods
stos
and
loopne
rol
and
ret
int
ss
xor
dec
std
icebp
dec
push
scas
lret
sbb
push
or
sbb
mov
add
push
dec
adc
xor
cli
rorb
hlt
jnp
out
test
aad
mov
sub
sbb
adc
inc
push
scas
ffreep
rorb
rcrl
inc
cmp
xchg
addr16
lock
bswap
sbb
mov
or
jne
loopne
inc
dec
sub
pop
testb
push
mov
jp
pushf
sbb
les
mov
aas
int3
jnp
repz
pop
mov
or
or
jg
std
popf
mov
shlb
aam
sbb
cmc
jl
je
aas
push
stc
add
pop
and
dec
jcxz
jb
insb
mov
push
fstl
sub
pop
lock
ret
pop
jbe
mov
inc
hlt
enter
mov
leave
addr16
orl
es
adc
outsb
mov
je
or
nop
lods
andb
dec
mov
mov
xchg
cwtl
sahf
jmp
lods
data16
mov
popa
call
mov
lds
arpl
push
mov
ss
mov
lret
jae
mov
jmp
stc
mov
sti
xchg
jno
stc
jne
inc
adc
cmc
aaa
mov
rclb
rolb
jcxz
or
sub
mov
sbb
jmp
fsubp
push
cli
mov
nop
pop
cmpsl
insl
dec
js
mov
dec
add
icebp
int3
mov
adc
ds
mov
fdivrl
neg
mov
test
pop
or
push
xor
scas
cld
xlat
in
lods
cld
fnsave
lfs
mov
aad
xchg
jns
mov
subb
out
mov
dec
out
mov
sbb
mov
push
repz
cmpsb
add
mov
cmp
sbb
imul
stos
inc
ja
in
out
imul
rclb
mov
in
int
and
fstps
int3
add
aas
inc
push
xlat
scas
fstp
pop
into
push
sub
sbb
int
insb
xlat
sub
fwait
add
mov
jp
leave
stc
pop
push
fcomps
scas
mov
mov
cmp
loop
ja
or
int
xchg
adc
xor
jl
pop
pusha
jbe
movsl
dec
or
mov
leave
mov
xor
cmp
ds
int
punpcklwd
mov
in
out
cld
sbb
lcall
sbb
pop
aam
pop
scas
scas
cmp
enter
out
push
mov
xchg
sahf
dec
out
loop
mov
bound
push
mov
stos
or
jge
mov
imul
and
mov
nop
ja
test
add
adc
fnstsw
pop
xchg
cmp
lods
test
xlat
lret
into
xchg
clc
push
mov
jl
repnz
aas
aaa
je
sub
dec
jp
fisubs
fnsave
sbb
addl
mov
fmuls
cmp
mov
andl
inc
sbb
dec
data16
call
cmpsl
ret
fs
hlt
push
xor
and
add
pop
lock
ret
aaa
jbe
xchg
jl
insb
push
out
pop
and
mov
cmp
jns
add
movsb
and
popa
lock
out
push
test
mov
mov
xchg
add
mov
sub
ret
xchg
jbe
or
sub
add
int3
adc
push
ja
jl
mov
fidivs
jne
daa
fistps
sub
mov
mov
sbb
sub
xor
mov
bound
loopne
icebp
sub
imul
push
add
push
lahf
inc
inc
dec
and
inc
mov
iret
pusha
jl
shlb
into
push
in
cs
out
mov
push
out
popa
sahf
bound
movsl
es
add
inc
loope
mov
cmp
ja
and
lods
imul
mov
movl
pop
and
and
addl
sti
push
in
jb
mov
or
or
push
xchg
fldt
arpl
stos
and
arpl
dec
mov
adc
inc
scas
push
pop
mov
cmp
jb
js
xchg
dec
int3
movsl
fwait
or
xchg
loopne
cwtl
mov
pop
mov
push
add
mov
pop
movsl
pop
inc
out
push
pop
mov
jle
into
mov
and
mov
fimull
fidivs
adc
lahf
add
rcl
out
or
dec
mulb
aas
in
adc
aam
mov
add
adcl
xchg
mov
add
int
out
dec
mov
pop
add
out
in
arpl
fiaddl
mov
add
cmp
mov
or
pop
adc
push
ret
push
sub
push
or
inc
xchg
out
push
je
jnp
aad
ret
mov
fdivrs
mov
jmp
adc
pop
mov
mov
out
movsl
or
hlt
das
call
jmp
jg
jg
popa
cmc
call
fisttps
imul
imul
call
scas
shr
fcomps
push
movsl
adc
out
negl
fwait
push
je
pop
xor
je
mov
pop
jp
jae
jp
mov
iret
push
mov
mov
and
pop
sbb
push
inc
mov
xchg
in
xor
xchg
mov
addr16
pop
movsl
movsb
sbb
pushf
outsb
lock
fmul
xor
push
lods
inc
xor
lock
xor
mov
push
mov
mov
push
jne
into
mov
std
and
std
cmp
in
mov
icebp
pushf
fildll
mov
xlat
leave
dec
in
xchg
pushf
inc
push
sbb
popf
jmp
mov
in
xor
jno
push
push
sbb
aas
jecxz
sti
ss
or
lret
pop
ljmp
lods
and
lock
or
adc
aas
daa
inc
sbb
int3
aad
loop
push
sub
and
inc
jmp
ja
xor
lods
insb
xchg
cltd
ds
push
xchg
imul
das
adc
push
push
xchg
outsb
es
les
jle
inc
push
adc
mov
inc
cli
bound
mov
push
cmpsl
pop
movsl
sbb
aam
jb
mov
movsl
outsl
or
push
daa
xchg
fbld
addr16
sar
dec
aam
rcrl
lods
sub
sbb
mov
sub
mov
add
mov
xchg
add
lret
subb
mov
add
sub
call
and
and
stos
lea
xlat
sbb
rcll
fistpl
jle
psllq
jo
mov
les
lret
mov
sub
sbbl
and
mov
scas
or
and
xchg
push
inc
jge
jb
push
adc
lods
das
cmp
cli
adcl
aam
inc
inc
cltd
dec
jne
mov
jl
inc
add
mov
add
and
cld
fnstsw
sbbl
cld
fstl
mov
cwtl
pop
sbb
dec
dec
pop
mov
sbb
mov
push
test
rcrb
pop
and
shr
fsubrl
inc
mov
shlb
jnp
test
push
sbb
ret
enter
or
rcl
jge
mov
mov
sub
pop
sub
cmpl
test
pop
sub
mov
mov
xlat
es
popa
sub
lods
fstps
mov
test
push
dec
add
inc
add
pop
xchg
push
mov
add
pushf
insb
sub
dec
out
inc
fsubs
push
add
push
inc
das
es
cltd
outsb
jnp
loopne
in
scas
sbb
les
fidivrs
sub
stos
inc
push
in
mov
add
out
lock
and
out
lock
mov
pop
mov
push
into
andl
pop
push
cmp
jmp
stc
xchg
cwtl
and
stos
push
loop
jns
fisubl
lods
ljmp
cmp
add
xor
bound
mov
fisubl
scas
xchg
gs
mov
std
dec
mov
xchg
adc
xor
out
dec
test
cld
mov
daa
outsb
loopne
imul
xorl
fistps
shl
test
sub
dec
mov
cli
nop
shl
in
xor
mov
jae
sti
leave
push
xor
pusha
cmp
xchg
in
add
push
add
pop
mov
movsb
and
cs
in
scas
or
rcrb
mov
cmp
cmp
pop
scas
in
loop
lods
jp
sub
outsb
cs
jno
cmp
scas
jae
rcll
pop
mov
or
sbb
pop
and
lcall
int3
sub
int3
mov
pop
or
je
mov
jae
inc
xor
pop
jmp
jge
cmpsb
dec
lcall
mov
pop
sub
in
jg
lock
test
push
sub
cmp
jle
mov
jnp
push
or
pusha
mov
data16
pop
out
sti
mov
leave
out
test
std
xor
adc
das
sti
mov
jae
xchg
xor
pop
push
cmp
xchg
pusha
sub
lea
xchg
lods
stc
loope
xchg
ss
outsb
xchg
or
xchg
push
cmp
push
in
sub
xchg
jbe
mov
fidivs
aam
or
imul
das
ret
xchg
pop
sbbl
cld
dec
hlt
out
fcmovu
bound
testl
cld
imul
mov
and
dec
negl
test
jmp
push
iret
fsubrp
add
cmp
data16
fwait
js
jo
push
sbb
int3
arpl
cmp
push
xchg
jne
jmp
out
sbb
jmp
inc
pop
cli
nop
scas
sub
stos
ljmp
xchg
mov
mov
mov
fsts
repz
inc
and
mov
or
mov
fistpll
dec
sbb
sub
jle
fs
pop
daa
and
test
inc
add
mov
jmp
push
es
xchg
imul
fistpl
mov
pop
out
lret
sbb
mov
or
fsubl
push
hlt
stos
ljmp
ret
imull
sbb
mov
sub
sub
fiadds
leave
pop
adc
loope
cmp
daa
dec
cmpl
xor
adc
or
mov
ret
cli
pusha
lahf
iret
mov
xor
or
imul
jmp
in
push
cld
loopne
lret
pop
pop
inc
lcall
jno
in
xchg
popf
imul
cmpsb
inc
out
add
andb
lahf
jne
mov
inc
mov
iret
lret
jp
icebp
scas
daa
xchg
mov
sub
pop
jmp
dec
andl
les
loopne
adc
xorb
adcl
sbb
arpl
nop
leave
lret
inc
lods
sub
pop
sub
fistl
std
mov
mov
sub
jl
add
lods
push
fsubrl
rcll
addr16
xor
fisubs
dec
in
jo
int3
adcl
pop
in
jp
call
mov
lods
and
popf
loop
in
inc
mov
mov
fistps
cmp
adcl
repnz
call
cli
out
pop
xor
aas
movsb
fs
or
xchg
loopne
jecxz
sbb
in
sub
nop
jp
xchg
fwait
lock
dec
imul
jo
ja
jmp
jns,pt
subl
cmp
add
push
faddp
xchg
aad
sub
adc
aad
xor
stos
aas
add
lods
push
pop
or
xchg
sub
repz
mov
aas
xlat
jle
add
sub
or
add
and
xchg
xchg
or
or
je
std
test
mov
cmp
ffree
fnstsw
mov
mov
test
xchg
das
or
sub
rcll
ldmxcsr
mov
jle
xchg
pushf
loop
mov
dec
jmp
loope
or
and
movsl
shll
mov
pop
or
dec
ds
push
sarb
iret
sub
sbb
pop
aaa
cmpsb
sbb
or
leave
pop
xor
xor
in
xchg
jp
xor
push
and
negb
or
jb
in
push
lcall
imul
out
pop
pop
dec
pop
dec
xchg
ret
pop
push
cltd
addr16
adc
int3
movsl
sbb
inc
xchg
dec
sub
pop
mov
fdivrl
inc
or
js
movsl
inc
pop
fists
ret
mov
je
adc
movsb
add
mov
xchg
mov
aaa
in
icebp
rorl
scas
cmp
aas
mov
push
or
inc
in
icebp
cs
or
xchg
arpl
xchg
cmp
dec
lock
aad
stc
sbb
adc
popf
xchg
jl
pop
sub
aas
add
or
test
push
pop
mov
push
jne
mov
add
insl
cltd
out
push
stos
sub
lret
aam
sbbb
aas
pop
ret
sub
mov
jnp
fcmovu
shr
mov
push
pop
mov
les
mov
push
iret
adc
or
mov
xchg
add
fcom
and
xchg
test
mov
out
xor
xchg
mov
and
xchg
cltd
lock
adc
dec
sub
xor
repnz
int
lods
fbstp
cmc
lret
inc
jmp
loopne
fsub
sub
cmpsl
ss
jb
mov
cmp
mov
rcrb
ljmp
insl
out
mov
pop
push
loopne
mov
cltd
mov
dec
lcall
adcl
lods
or
inc
jnp
loop
jg
inc
push
xchg
int3
cmp
dec
mov
jl
adc
aam
cli
fildl
fs
push
mov
xchg
inc
stos
add
out
and
imul
push
pop
dec
int3
scas
mov
lea
outsb
adcl
mov
add
pop
push
lods
lds
stos
out
adc
jg
sub
shrb
fnsave
sbb
push
jb
ljmp
mov
addb
xchg
ret
cmp
popf
dec
rclb
imul
cmp
mov
dec
nop
add
xchg
add
mov
loope
cwtl
stos
cmp
and
cmc
and
and
clc
mov
sbb
xchg
addr16
out
mov
jmp
cld
aad
xchg
or
arpl
pusha
xor
jnp
punpckhwd
add
sbb
fisubrs
stos
inc
imul
clc
in
adc
adc
adc
or
inc
hlt
sub
pop
ja
pop
pop
pop
imulb
rorl
inc
dec
and
ret
loop
sbb
push
out
mov
sbb
dec
xor
inc
fcomp
jns
cltd
cli
dec
sub
mov
jl
mov
mov
sbb
ljmp
repnz
jecxz
jb
mov
jo
jmp
inc
push
pusha
test
aas
mov
dec
cmp
pushl
enter
xor
push
outsl
jo
in
mov
jb
and
pop
and
outsl
dec
ficomps
aaa
les
lahf
mov
ret
sbb
adc
mov
es
in
in
mov
popf
fldl
inc
lds
mov
imul
popf
es
hlt
adc
test
dec
dec
cmpsb
shlb
movsb
out
leave
xchg
xchg
adc
sub
in
cmpl
jmp
push
mov
jp
dec
pop
sub
in
ljmp
pop
or
add
adc
repz
in
xchg
jo
xor
fldl
sti
add
jns
cmp
pusha
insb
jecxz
mov
xchg
jne
imul
xchg
sahf
ret
loop
push
push
add
dec
xchg
pusha
xchg
pop
aam
jbe
sbb
pop
bound
and
lcall
dec
movsl
aad
mov
cmp
xchg
fcomp
xor
pop
pop
jmp
jns
mov
mov
pop
lock
add
mov
push
mov
gs
jnp
sbbb
pop
pop
inc
or
inc
sbb
cli
push
jecxz
mov
push
insb
loopne
cmp
nop
adc
frstor
mov
aas
sarb
jle
insb
mov
ja
jp
out
into
inc
mov
xchg
adc
iret
mov
js
sbb
out
dec
imull
dec
movsb
or
push
imul
xchg
sarb
movsl
in
pop
dec
aam
mov
popf
mov
push
ud2
dec
fwait
pop
aaa
insl
mov
fmuls
mov
rcrb
jg
add
jne
inc
loopne
std
shlb
stos
jo
icebp
inc
add
add
jo
mov
test
out
cmc
popa
sub
hlt
out
mov
dec
popf
cmp
stc
jno
test
mov
fadd
ljmp
test
jae
pop
dec
mov
loop
push
inc
cmp
cmc
push
aas
std
aam
mov
int3
leave
cmp
cwtl
push
adc
fmull
addb
jle
sub
jns
lret
gs
stos
je
xlat
xchg
jne
xchg
mov
scas
sbb
dec
sub
addr16
cmp
cwtl
mov
sti
rclb
cmpsl
cmp
sbb
aas
js
sbb
or
mov
xchg
push
sahf
shll
push
inc
inc
int
cwtl
mov
movsl
xchg
call
in
loopne
stc
test
rol
icebp
jp
adc
mov
js
jecxz
or
sub
sub
pop
das
rorb
movdqa
in
xor
or
push
stos
pop
adc
xorl
or
inc
jne
incl
jecxz
mov
rcl
add
and
inc
xlat
push
lret
out
test
jo
andl
pop
ja
mov
aaa
lock
pop
and
pop
stos
jl
pop
sbb
mov
nop
ret
insl
roll
pop
imull
adc
mov
jb
lret
xor
fwait
jns
add
inc
xchg
cwtl
jp
push
dec
xor
enter
fdivr
jno
scas
sbb
aas
rcll
inc
jbe
pop
pop
push
repnz
stos
insb
mov
dec
test
mul
and
pop
mov
mul
fstl
xor
cld
mov
cmpsl
dec
pop
add
mov
push
xchg
push
orb
mov
loopne
cwtl
lret
inc
dec
dec
mov
rclb
xor
adc
stc
lret
mov
cmp
es
push
sbb
iret
push
aaa
mov
les
pop
out
scas
push
jno
mov
push
arpl
popf
outsb
cmpsl
je
mov
pop
iret
cmp
xchg
pop
call
pop
insl
dec
dec
stos
mov
lcall
scas
inc
popf
sbb
mov
or
lea
sub
dec
mov
pop
cmp
sbb
push
cmp
lret
subb
xchg
dec
mov
lds
popa
push
push
inc
leave
adc
cmpsb
mov
outsl
pop
mov
mov
xchg
call
xchg
sub
popf
push
scas
rorb
jno
fisubrs
adcl
out
test
dec
subl
fwait
mov
pop
pop
setae
or
enter
outsb
mov
icebp
inc
jnp
push
into
cwtl
iret
divb
ja
js
sahf
add
in
mov
adc
xor
ja
push
mov
fs
sub
inc
lods
jmp
fsubrs
bound
mov
xchg
cmp
stos
mov
fprem
mov
push
test
push
push
adc
mov
add
aad
inc
cmp
cmpl
shl
ret
movzbl
mov
cmp
mov
mov
xlat
and
sti
lret
mov
xchg
mov
dec
ljmp
leave
cld
xor
scas
aam
mov
xchg
xor
cmpl
nop
pop
dec
femms
inc
mov
inc
push
mov
inc
jae
test
ret
or
adc
or
imul
add
call
xlat
lret
lret
leave
or
cmp
inc
mov
xchg
push
inc
jmp
sahf
fidivs
into
out
cwtl
push
dec
movsl
sub
jns
jae
sbb
dec
sub
push
inc
ss
rcll
aas
push
es
sbb
sbb
into
adc
std
out
and
in
enter
movsb
imul
daa
xchg
and
jle
sbb
add
in
pusha
push
iret
and
insb
out
push
xchg
mov
out
sub
lcall
pop
test
imul
mov
xor
sub
insb
gs
xor
push
dec
lock
imul
addr16
imul
and
pop
sbb
sbb
scas
fidivs
lret
stos
dec
lret
jb
mov
lds
add
dec
mov
rorb
aad
inc
adc
xchg
fcoms
leave
bound
mov
jne
cmp
jmp
clc
xor
int
negl
or
insl
es
adc
cmp
push
cwtl
add
aas
adc
or
iret
push
jnp
mov
test
xchg
jae
lcall
pop
inc
mov
test
mov
pop
jmp
jo
push
adc
mov
into
xor
inc
dec
mov
out
pop
std
mov
pop
loopne
sbb
mov
dec
jnp
mov
mov
cmp
xchg
int
or
stos
ret
pop
cmc
loopne
pop
aad
push
mov
xor
push
lret
das
and
sbbl
aad
mov
jo
movsb
xor
fnstcw
jno
imul
push
xchg
pop
hlt
mov
fcom
lahf
sub
ja
out
shlb
insb
roll
out
or
and
mov
pop
xchg
fadd
mov
mov
adc
adc
dec
jl
sub
mov
mov
insb
push
mov
lret
push
push
sti
loop
sbb
sub
iret
jae
mov
in
push
dec
mov
add
stos
sbb
jbe
outsl
cwtl
adc
and
aas
popa
adc
repnz
jge
clc
lods
pop
lds
pop
lds
sub
in
jae
sbb
leave
mov
sub
pop
enter
repz
inc
adc
fsubp
sbb
mov
jmp
pop
push
mov
lret
nop
add
sti
testb
popa
add
sti
fisttpll
scas
mov
mov
mov
sahf
add
test
mov
pushf
push
rcl
mov
mov
subb
and
sarl
shll
and
imul
fwait
cmp
ds
cmp
mov
mov
dec
jmp
stc
ret
cltd
iret
pop
sbb
movsb
push
add
push
mov
and
or
outsl
ja
push
or
repz
test
add
je
cli
sti
inc
add
xor
jg
addr16
outsb
mov
in
imull
dec
mov
dec
push
imul
loop
notb
xchg
jl
mov
or
bound
in
rcl
pusha
add
jb
sbb
cld
enter
jg
xor
xchg
in
jnp
xchg
inc
test
mov
stos
cs
sub
mov
lods
mov
fwait
push
xchg
adc
ret
pop
inc
repnz
movsb
int
movsl
mov
and
mov
jns
sti
loop
xchg
sub
insb
mov
js
mov
jbe
mov
push
add
xchg
add
inc
ret
out
adc
shl
push
cmp
sub
cmp
xchg
add
mov
inc
nop
xchg
bnd
imul
mov
mov
rcll
mov
xchg
mov
cmp
lock
jmp
aad
ficompl
mov
stc
xchg
push
mov
ficompl
pushf
lods
rcl
idiv
icebp
rcll
dec
and
or
ja
mov
cmpsl
jno
adc
or
sbb
mov
imul
nop
mov
gs
jge
stos
loop
mov
cmp
dec
lock
subl
pop
movsl
jl
fs
xor
cmpsb
adc
test
xlat
push
xchg
cmp
cs
lds
mov
xchg
and
push
or
aad
fcoml
push
mov
repnz
xor
push
in
loopne
out
push
push
movsl
addr16
fs
and
imul
or
das
xchg
inc
dec
out
cmp
and
nop
flds
cwtl
xor
mov
jecxz
test
bound
jb
es
dec
nop
push
xchg
scas
pop
faddl
lahf
mov
jp
jg
jp
mul
xchg
or
es
xchg
adc
pop
push
arpl
rorb
into
pop
pushf
incb
mov
out
jo
dec
push
lods
jno
ja
mov
out
xor
int3
fldl
jae
add
xchg
scas
xchg
nop
ds
js
inc
pop
mov
fdivr
rorb
jg
aam
inc
dec
mov
push
fistps
out
inc
mov
loope
adc
int
scas
ja
xor
mov
cs
pop
js
jp
push
xchg
faddl
mov
xor
call
mov
mov
aas
xchg
jg
mov
adc
sar
loop
aas
mov
stos
arpl
into
dec
mov
mov
jmp
pop
out
push
fldt
popa
psrld
pop
idiv
xor
or
movsl
fstp
sbb
lret
push
xor
cld
or
lods
jmp
rcrl
push
cmp
jo
in
mov
push
inc
imul
lret
pusha
add
or
pop
lret
xor
jnp
adc
pop
test
add
in
stc
push
fsts
mov
jecxz
not
pop
inc
inc
push
data16
call
push
stos
jl
sub
test
add
ret
cmp
mov
cmp
xchg
adc
inc
add
inc
pusha
push
mull
pushf
sub
push
mov
in
xchg
dec
scas
aaa
jbe
sbb
dec
xlat
ja
jmp
jnp
jl
or
fs
push
in
pop
sub
cmp
or
data16
test
inc
dec
cs
out
rclb
in
mov
jmp
lds
cmpsl
outsb
push
cwtl
leave
adc
jno
popa
aam
xor
pop
jb
out
pop
mov
or
in
icebp
mov
ficoml
movsb
mov
sub
inc
cmpsb
xchg
aas
cmp
mov
test
fcomi
adc
mov
pop
mov
push
sahf
lahf
ljmp
daa
jne
rorl
mov
shr
out
fcmovnb
jo
xor
mov
aad
adc
pop
imul
lcall
pop
inc
or
pop
loope
test
xchg
cli
adc
int
add
lods
jecxz
test
pop
cmp
cmp
pop
out
test
mov
call
add
jb
pop
in
out
mov
fwait
sbb
imul
or
adc
aaa
orl
mov
xor
jge
mov
rolb
mov
xor
call
mov
bound
push
adc
xchg
cmp
jne
sbb
lea
sub
cltd
addl
cmp
sahf
push
add
cwtl
jae
or
ds
jmp
lea
jno
popa
jns
outsl
jmp
jno
ror
iret
cmpsb
enter
jnp
mov
sub
imul
enter
mov
sti
cs
or
fwait
aad
pusha
xchg
loop
ljmp
and
in
cmp
aam
arpl
push
jnp
mov
cmp
mov
mov
bound
or
leave
out
jecxz
js
fistpll
es
pop
jns
mov
dec
flds
mov
mov
jle
cmc
or
fsubl
mov
ja
fnstsw
dec
roll
addl
sub
sbb
dec
push
divb
mov
and
in
jbe
mov
out
mov
mov
dec
fs
adcl
data16
loope
fmuls
in
rep
cltd
outsb
xor
adc
pop
push
je
inc
add
mov
jecxz
push
stos
insl
xchg
test
pop
mov
adc
sub
jne
push
sub
mov
inc
push
and
xor
pop
xor
push
dec
push
cld
fdivrs
xor
sahf
xchg
push
iret
xor
div
scas
lods
test
mov
repz
int3
xor
lahf
push
and
cmp
add
jb
testl
jbe
pop
jns
out
inc
inc
mov
jae
sti
dec
add
movsl
shll
sahf
jb
test
xchg
lds
pusha
sbb
je
xchg
mov
mov
add
lods
push
push
and
xlat
hlt
imul
inc
int3
mov
rcrl
push
ja
cmp
xchg
ficomps
inc
xchg
popa
shl
cmp
scas
or
dec
push
dec
xchg
xor
dec
iret
jg
xchg
cmp
jbe
pop
popa
pop
aad
sti
dec
push
sub
xchg
test
sub
adc
loopne
mov
push
lds
dec
xorb
jbe
or
inc
sub
jl
fcoml
fnstsw
jl
push
xorb
out
test
pop
sahf
ret
sub
pusha
rorl
fsts
shrl
pusha
xorl
movsl
sarl
push
repnz
inc
popf
pop
mov
cmp
inc
mov
idivb
int3
mov
and
addl
push
and
popf
cmp
fisttpl
xchg
cmp
jecxz
adc
sbb
push
nop
shll
loope
lcall
mov
das
push
or
fs
scas
out
dec
shll
jb
ficoml
fdivr
mov
imull
andb
sub
out
ss
stos
add
cmp
sbb
lds
or
adc
inc
mul
imul
jb
xchg
and
pop
fisttpl
sub
rcl
push
cmp
in
sbb
mov
xchg
ja
pop
rol
xchg
sbb
jl
lret
ret
scas
notb
ss
pop
xchg
mov
xchg
loop
mov
enter
in
int
cmp
mov
aaa
and
mov
std
cwtl
out
jae
mov
inc
ja
xchg
dec
jl
inc
adc
leave
pop
inc
cltd
pushl
test
std
mov
test
jle
xchg
outsb
adc
mov
pop
dec
push
inc
mov
or
or
mov
jmp
sbb
jns
cmp
aas
fisubrs
outsb
nop
mov
rolb
dec
xchg
lods
shr
push
sahf
ret
mov
mov
clc
cmp
push
xchg
or
mov
add
data16
fcompl
fchs
adc
dec
sbb
jbe
cmpsb
xchg
ret
mov
cli
jae
out
mov
int3
cmp
repnz
xor
fmulp
mov
push
add
rolb
rolb
adc
aam
enter
jb
ss
in
add
rcll
mov
sub
mov
lcall
out
push
jl
mov
lea
lods
mov
or
ja
pop
mov
out
insl
nop
inc
dec
cld
jbe
dec
inc
mov
xchg
icebp
cmpsb
dec
sub
mov
sahf
push
mov
shrb
testl
rorl
movsl
xor
lods
inc
adc
xchg
pusha
cltd
xchg
push
adc
jae
into
fstpl
ret
cmp
jp
pop
cmp
xor
push
jb
pop
pushf
sub
mov
sarl
addps
js
nop
sub
ja
popa
adc
pop
test
lock
hlt
pop
stc
and
shlb
cmc
std
loopne
push
les
mov
js,pn
jecxz
stc
dec
dec
xchg
xchg
jp
add
cwtl
and
push
and
mov
in
loopne
out
or
jecxz
push
movsl
cmpsb
or
loop
mov
lret
push
push
std
outsl
xor
cmp
inc
rcll
clc
rorw
add
xchg
push
dec
dec
shl
es
test
xor
pop
mov
ja
inc
adc
lods
and
xor
or
andb
mov
fmuls
gs
imul
mov
add
and
data16
sbb
sbb
int3
mov
icebp
inc
nop
imul
sub
das
repz
leave
push
inc
mov
adc
ljmp
pop
popf
inc
mov
out
push
insb
mov
jno
test
test
pop
push
gs
loopne
push
popa
sbb
imul
cltd
stos
enter
cltd
and
fistl
jge
lcall
sub
mov
jle
push
push
adc
pop
pop
test
movsb
adc
fimull
mov
push
xchg
lock
jmp
jle
cwtl
mov
pop
cltd
and
xchg
mov
cmp
jae
lock
adc
pop
push
ret
dec
mov
into
sub
mov
pushf
sti
ficompl
mov
mov
shl
cwtl
test
nop
dec
and
test
aad
sarb
mov
lea
xor
pushf
or
xor
lahf
leave
call
stos
andl
sub
mov
mov
pop
pop
jg
mov
mov
dec
in
adc
fsubp
hlt
mov
sbb
mov
fistps
sbb
dec
mov
or
cmp
hlt
mov
lret
cmpsb
jb
xchg
call
decb
cld
push
mov
imul
mov
or
stos
pop
mov
jae
loopne
pop
push
pop
pop
in
outsb
orb
cmp
mov
ret
push
inc
jp
xor
jge
aaa
sbb
repnz
mov
test
sub
mov
sbb
dec
sub
fs
cmp
pusha
mov
not
push
jno
inc
jl
leave
enter
ret
mov
aas
xchg
lret
cmpsb
loopne
cmp
popa
pop
jge
or
les
arpl
negb
pop
test
testb
mov
inc
jae
xchg
dec
pop
clc
lahf
and
movl
and
fistl
sbb
push
andb
inc
arpl
imull
or
sub
int3
repnz
mov
fs
pop
mov
enter
fisubl
fisubrl
flds
or
aam
jno
and
dec
xchg
sub
testl
fmuls
out
je
sbb
xor
mov
popa
ds
rorl
jmp
push
pslld
push
and
cli
and
dec
mov
movsl
fs
clc
stos
nop
hlt
sbb
push
xchg
or
ret
push
into
popf
push
xacquire
jg
scas
stos
in
jp
movsb
out
int
subl
or
movsl
in
nop
popa
repz
and
int3
negl
sbb
pop
nop
jne
jns
xchg
mov
xor
mov
fisubs
repnz
xor
mov
push
sbb
outsl
lret
imul
test
in
in
mov
dec
out
lea
jg
push
lret
loope
or
jle
dec
out
mov
and
add
bound
push
outsb
lods
aad
fdivrs
lahf
sub
mov
mov
push
stc
pop
adc
jle
jb
xchg
cmp
out
sbb
inc
xlat
cmpsb
sub
dec
in
pop
add
fcompl
loop
pop
insb
and
es
mov
out
fs
xor
dec
lds
dec
mov
dec
xor
enter
lds
and
jno
push
sbb
cld
cmp
mov
xchg
mov
jge
lcall
mov
push
xor
inc
dec
lret
inc
pop
mov
lret
xchg
jae,pn
sub
popf
loope
scas
aad
xor
cmp
sub
dec
aam
shlb
cmpsb
push
fidivrs
ret
push
stos
or
in
jnp
and
test
outsl
dec
insl
aad
sub
pop
jnp
out
mov
cli
and
and
xor
dec
inc
jle
sbb
cmp
pop
sub
sbb
push
push
lods
pop
cwtl
jge
movsl
push
pusha
inc
pop
pop
cltd
ja
faddl
xchg
hlt
pop
icebp
fwait
dec
push
repnz
mov
mov
test
xor
dec
fs
xchg
inc
sub
movsb
push
insb
pop
add
pop
lret
mov
push
push
pop
sub
fldcw
jns
scas
mov
insl
lds
and
loope
cmp
ljmp
test
in
out
test
cmp
add
pop
lods
sbb
and
gs
sbb
push
mov
in
push
std
iret
test
mov
mov
out
cli
lret
insb
mov
sbb
int
xor
fbstp
mov
outsl
jl
ror
xor
aam
loope
sbbb
xorl
sbb
push
dec
clc
inc
lret
and
push
jecxz
pushf
ljmp
sti
push
fcmovbe
das
and
cmc
gs
jge
push
sahf
fstps
lock
xchg
fs
mov
fmuls
pop
fdivrs
mov
cmp
je
mov
lahf
out
sahf
mov
mov
jp
pop
xor
jp
mov
loope
shr
rcrl
add
cmp
and
je
sub
dec
sub
add
pop
lret
adcb
ljmp
add
mov
dec
dec
daa
mov
mov
inc
fcomps
push
je
pop
ss
xor
stc
sbb
dec
jne
dec
inc
xchg
sub
push
cmpsl
fimull
mov
sahf
inc
ss
shll
jae
cmp
mov
lea
adc
gs
adc
es
push
std
dec
in
scas
je
clc
xchg
xchg
scas
jne
inc
or
adc
mov
sbb
mov
adc
add
mov
pop
clc
dec
mov
and
sahf
pop
aas
add
add
adc
fiaddl
mov
sbb
mov
sub
push
dec
sbb
mov
insb
xlat
fwait
pop
jp
scas
inc
je
mov
push
or
lret
push
jne
jmp
jl
jmp
imul
or
xchg
aaa
in
ret
lea
lret
js
jecxz
sub
adc
rol
or
pop
mov
or
xchg
push
mov
fidivrl
outsb
aad
subb
stos
in
push
inc
xor
pop
cmp
ja
jne
outsl
pop
xchg
ret
inc
jns
nop
sub
and
cmc
clc
test
stos
test
dec
xlat
inc
outsb
pop
popf
mov
mov
xchg
adc
scas
cmp
imul
pop
aaa
stc
pop
repz
cmp
dec
movsl
enter
out
and
lret
dec
xor
stos
dec
loope
inc
shll
sarl
pop
fisubl
and
jl
test
mov
enter
faddl
aas
fistl
fs
in
idivl
or
test
mov
sub
mov
sti
or
ret
push
sub
adc
mov
sbb
in
inc
mov
aad
sbb
push
insb
mov
hlt
add
mov
bound
inc
mov
jo
into
sub
jg
sub
sbb
into
das
jl
pop
outsl
mov
cmc
adc
outsl
mov
add
cmp
gs
mov
adc
shll
jo
scas
xor
mov
add
xor
loopne
scas
add
movsl
lcall
or
addr16
mov
xchg
jbe
mov
push
fs
sub
xor
mov
aad
ljmp
lds
push
and
sub
ror
jmp
call
ja
stos
repnz
push
adc
mov
dec
mov
mov
mov
mov
data16
ss
cmp
adc
sti
xchg
scas
ss
mov
or
xchg
mov
call
testb
movl
fldt
fistl
call
ret
mov
aaa
pop
jbe
clc
out
xchg
lahf
sub
cmp
out
in
xlat
fmuls
mov
or
popf
cmp
pop
inc
shlb
bound
xchg
cmp
push
stc
loope
add
test
jae
aad
xchg
notb
test
sbb
in
adc
dec
jp
mov
bnd
fimull
inc
sub
loop
mov
movsl
mov
rcrl
push
rclb
loop
lret
test
push
mov
ret
test
xchg
fldcw
roll
mov
lock
ss
adc
jp
xchg
je
out
and
cmp
popa
jne
jl
in
xor
test
jl
mov
cmp
jo
mov
rorl
push
mov
pop
sti
lods
sbb
dec
push
les
movsb
imul
xchg
push
inc
sbb
pop
mov
bound
jae
mov
aam
cmp
mov
jp
movsb
sub
pop
das
fisubrs
xor
ds
daa
int
call
jmp
jb
lea
cmpsb
push
mov
push
adc
and
inc
mov
rolb
jl
push
out
jno
mov
mov
sbb
or
pushf
sub
mov
jmp
pop
inc
clc
and
dec
and
push
push
fisttpl
xor
aaa
inc
stos
out
popa
pop
xchg
add
test
mov
lret
pop
es
sub
sub
mov
jg
add
imul
loop,pn
inc
andl
dec
add
enter
xor
imul
mov
cmp
mov
sbb
xchg
cmc
out
cmp
xchg
pop
imulb
sti
subl
xor
sbb
mov
test
cmovge
lods
lds
push
aam
jno
cmp
push
rclb
loope
in
sub
push
outsl
push
ret
pop
pop
jecxz
xor
out
xchg
cmp
mov
or
sbb
inc
psadbw
xchg
mov
test
dec
mov
and
mov
enter
inc
lods
cmpsb
inc
jge
inc
sbb
out
xor
lock
xor
xchg
xchg
loopne
in
xor
int
xchg
mov
js
sbb
repnz
vsqrtsd
adcl
cli
mov
adc
xchg
cmpsb
add
iret
imul
cmp
ret
push
push
inc
inc
outsl
jo
mov
fmulp
push
xchg
outsb
inc
dec
pop
dec
xlat
push
in
sbb
cmp
ja
or
push
inc
cmp
jmp
dec
xor
xchg
popf
mov
repnz
test
mov
add
adc
lock
icebp
std
leave
cwtl
outsl
xchg
mov
nop
lea
jl
pushf
inc
mov
push
mov
out
xor
test
cld
or
insb
imulb
xchg
lcall
aas
push
xchg
incl
push
clc
lea
mov
sub
jl
cmpsb
adc
imul
fsub
sbb
repnz
sub
pop
sub
in
sub
adc
fdivl
jmp
jnp
cmp
push
push
sub
push
mov
pop
dec
mov
pop
xor
sbb
or
addr16
lahf
sbb
xor
repz
leave
jae
add
aam
cli
mov
cmp
int
pop
out
and
dec
push
out
add
sbb
cmp
das
es
xchg
and
sbb
push
popa
sahf
or
mov
cmpsb
xchg
fdivrl
xor
push
lret
and
push
das
push
dec
mov
call
aas
inc
test
call
mov
mov
lods
imul
sbbb
in
mov
movsl
sub
cmp
push
fs
loope
stos
mov
cld
and
insb
test
sbb
mov
jno
push
cmp
mov
and
xor
gs
or
mov
fs
ror
addr16
mov
loopne
imul
mov
ds
and
pop
sub
jae
push
mov
popf
push
inc
or
pop
xlat
jg
lahf
in
aam
daa
cwtl
cmc
movsb
cmpsl
dec
sub
push
stos
ljmp
arpl
ret
xchg
mov
xor
std
pop
cwtl
push
fs
jno
mov
dec
hlt
addb
lahf
inc
dec
cmpsl
pavgb
stos
jo
pop
roll
xor
sti
mov
xor
sub
insl
clc
std
fs
or
das
mov
mov
testb
jge
jo
jp
out
jle
popf
cmp
and
pushf
add
xor
fs
stos
xor
leave
ljmp
insl
fwait
xchg
sub
cld
mov
pop
cmp
loop
cwtl
jp
cld
and
inc
into
or
jecxz
adc
imul
out
jns
lods
sahf
add
adc
jno
cmp
cmp
push
cmp
add
int
sbb
aaa
xor
cmp
mov
leave
repnz
mov
mov
int
dec
test
sub
mov
stc
xchg
push
ret
aam
mov
fistps
jne
shrl
iret
js
adc
sub
jle
push
xor
jmp
adc
ljmp
addr16
jle
loope
cmpsl
xor
cld
decl
cmp
pop
dec
or
int
aam
dec
scas
mov
das
push
inc
push
dec
aad
adcb
lret
popf
pop
xchg
mov
je
inc
je
pop
pop
stc
faddl
mov
js
push
clc
add
or
pop
push
ja
mov
sub
mov
sub
xor
push
jnp
outsl
idivl
pop
sbb
xor
lds
jmp
fcoms
xor
arpl
outsl
xchg
push
decb
loop
sbb
popf
les
insb
movsb
cmp
xchg
mov
imul
mov
cmp
sub
scas
out
popa
push
mov
enter
mov
and
sub
pop
xor
or
sbb
ret
xchg
rcrb
sbb
mov
fisubrs
jmp
movsb
jnp
clc
ljmp
je
xchg
xor
repz
mov
or
sbb
pop
mov
jle
repnz
mov
mov
pop
lahf
sahf
cmc
jle
popf
aad
jmp
icebp
mov
dec
sub
mov
notb
dec
mov
scas
push
lahf
popa
cs
test
push
adc
adc
inc
stc
addl
jp
mov
movsl
jo
cmp
xchg
lret
insb
adcb
push
jg
and
mov
leave
push
inc
dec
xor
mov
jp
mov
shrb
cmpsb
cmpsb
jp
je
or
in
popf
daa
ja
inc
loopne
sbb
in
iret
roll
cld
lods
lahf
push
aam
int3
xor
push
dec
mov
mov
ret
je
jno
add
push
fsubrs
xchg
sub
dec
sahf
movsl
pop
mov
les
lret
aas
mov
jge
call
xor
mov
lock
xchg
sbb
icebp
inc
fstpt
aas
adc
test
fstl
out
add
cmp
test
adc
test
fwait
mov
sub
push
mov
cwtl
mov
test
dec
das
jl
cltd
jb
mov
jne
daa
rorb
mov
xchg
push
in
xor
inc
mov
dec
add
add
cmp
sub
push
jl
push
jecxz
lea
int
fs
ret
ficomps
fmulp
fs
and
push
cmpsl
xor
jecxz
stc
dec
in
jge
inc
xchg
push
mov
lahf
aad
add
pusha
ret
stc
test
daa
xlat
fstl
loopne
test
fsubs
sbb
sub
or
push
cmp
jmp
cwtl
cmpsb
xchg
in
xchg
lds
jae
sub
sbb
adc
cmp
cwtl
int
bound
add
push
xchg
sbb
aam
cmp
inc
fucomi
add
loopne
daa
negb
fsub
std
mov
sahf
adc
or
mov
xchg
xchg
ret
push
pop
mov
loop
and
xor
jo
mov
mov
daa
test
pop
sub
sti
jb
add
mov
mov
sbb
cmpsl
and
frstor
mov
push
scas
push
pop
jge
push
lret
loope
sbb
addr16
dec
jecxz
jmp
adc
pop
push
pop
pop
dec
push
ljmp
imul
nop
mov
js
es
cmp
mov
mov
jo
loop
loope
add
mov
sub
cmp
mov
lahf
jl
fstpt
out
in
inc
push
repnz
xchg
data16
fidivl
out
adc
scas
shll
dec
mov
mov
and
jae
mov
mov
daa
xor
xchg
lock
fiadds
iret
xchg
inc
ret
cmpsl
hlt
xor
cmp
pushf
sub
loopw
jp
sahf
push
popa
mov
and
mov
jg
aas
mov
orb
lcall
aaa
dec
xchg
mov
jo
test
sub
xor
adc
popl
and
jle
cld
dec
cmpl
ret
add
xchg
push
add
sbb
ret
sub
push
xchg
ret
xor
sahf
sbb
inc
ficomps
dec
popa
cmpsb
mov
arpl
sbb
mulb
xor
loop
push
cmp
jns
adc
loope
jne
xchg
dec
cmc
push
lock
mov
dec
int3
pushf
ljmp
push
enter
sbb
push
je
negb
jae
rcl
inc
cwtl
pop
test
ss
jnp
inc
push
pop
xchg
ljmp
lret
les
mov
and
dec
cmc
inc
std
or
pop
mov
icebp
pop
daa
sub
jo
imul
loopne
pop
js
sahf
inc
fistpll
iret
sub
adc
push
imul
sbb
movsb
cmp
insl
dec
lods
or
mov
not
sahf
aaa
pop
lea
pop
sub
cmpsl
mov
in
jo
inc
les
test
cmpsb
cmp
xlat
and
mov
iret
pusha
lea
jae
inc
add
test
lds
xchg
int3
mov
sbb
imul
inc
dec
jg
mov
jge
testl
fisubs
jb
sbb
dec
push
adc
rcll
or
pusha
loop
mov
pop
in
pop
adc
sarl
inc
push
dec
imul
adc
ljmp
pop
clc
repz
xchg
xchg
std
scas
lea
xchg
dec
popf
mov
js
xchg
aaa
push
pusha
fildl
mov
cwtl
xchg
and
xchg
sub
orb
jae
enter
add
push
jge
fnstcw
cld
adc
and
ljmp
inc
sub
lods
xchg
cmpsb
pusha
pop
adc
shl
or
cmp
mov
test
lods
sbb
test
mov
fwait
jge
nop
pop
push
mov
sub
fisttpl
mov
stc
cmp
xchg
jb
imul
out
sbb
dec
dec
mov
mov
and
or
sub
outsl
pop
cmpsb
scas
mov
test
xor
pop
arpl
popa
outsb
pop
jp
sub
and
add
inc
popf
insl
mov
insl
mov
push
jg
aam
cld
push
fcoml
movsl
outsl
sub
mov
xor
test
ja
das
pusha
sahf
jl
lds
xchg
cmc
clc
mov
xor
xchg
inc
or
dec
push
addb
aaa
push
in
bound
icebp
hlt
leave
movsb
mov
repnz
sbb
jns
shll
cmp
rcrb
out
xchg
out
dec
icebp
and
lret
inc
mov
pop
cltd
xor
jge
cli
lret
inc
and
lods
or
pop
lea
mov
loop
sub
dec
arpl
xchg
int3
sti
adc
mov
inc
xchg
ds
or
adc
ja
aas
lret
cmp
loope
mov
jo
cltd
jp
and
or
sub
clc
leave
mov
mov
pop
xchg
mov
sbbb
xor
xor
cmp
jp
cld
dec
jo
push
cmp
out
mov
ret
aas
arpl
add
jl
insl
cmc
lea
jle
sti
frstor
or
js
sbb
or
sub
push
cmp
mov
pushf
js
cmp
bound
in
scas
int3
ret
mov
insb
sbb
sti
lcall
andb
lret
push
loopne
xor
lock
add
mov
and
inc
cmpsb
mov
call
mov
ljmp
dec
cmp
repnz
cmp
cld
ljmp
in
ds
jge
dec
loop
js
test
or
sub
dec
pop
sub
cwtl
out
mov
pop
fiadds
pop
lods
loopne
add
cmp
subl
xchg
cs
cmp
movsl
cmp
push
jo
sub
fs
bswap
push
cmp
mov
pop
cmp
clc
hlt
je
js
sbb
outsb
test
mov
or
mov
push
push
icebp
sbb
daa
mov
xor
cwtl
sub
jns
shl
jno
dec
sbb
in
sub
popa
outsl
sti
and
addr16
outsl
call
cli
push
pop
lds
xchg
and
fcompl
pop
sbb
sbb
lods
dec
and
or
jge
in
cmp
pop
jmp
das
or
popa
movsb
addb
jns
xchg
pop
addr16
inc
adc
in
and
fisttpl
mov
xor
int
lea
cmp
inc
test
and
jp
ds
lea
nop
pop
shrl
ror
push
std
into
loope
inc
and
sahf
sarb
sub
xorl
xor
adc
or
xor
xor
mov
push
imul
int3
rep
xor
pop
pop
repnz
inc
fs
inc
mov
xchg
jp
sbb
imul
cld
aam
sub
test
fnsave
add
movsb
adc
in
push
into
es
mov
fnstcw
enter
fisttpl
and
adc
in
mov
cmp
pop
into
dec
leave
adc
pop
movsl
movsl
movsb
stc
push
popa
xor
pop
jg
movsl
repz
fs
inc
adc
sub
imul
fcomps
insl
sub
push
scas
jp
fwait
lret
in
add
in
mov
pop
push
cmp
aaa
addr16
loopne
xchg
mov
xorb
xlat
mov
mov
and
or
scas
sbbb
jo
int3
mov
out
int
rcll
cmpb
mov
inc
mov
xor
outsb
data16
jnp
mov
add
sbb
mov
sti
add
or
add
mov
dec
loop
or
lock
sbb
add
dec
fsubrs
dec
incb
pop
arpl
cli
sbb
inc
add
jb
push
and
out
adc
fisubs
cmp
pop
mov
pop
jl
cltd
in
jmp
insw
ja
add
nop
xchg
bound
scas
mov
xor
sbb
mov
in
push
out
jecxz
adc
mov
mov
lea
dec
out
test
in
iret
dec
mov
scas
out
add
movl
inc
or
push
add
fnsave
pop
aad
add
bound
movsb
ret
in
out
add
pop
jae
test
pushf
mov
dec
pop
mov
icebp
mov
daa
inc
mov
jmp
cmp
das
cmp
pushf
xchg
dec
mov
xor
jbe
sub
cwtl
cmc
cmp
mov
jnp
movsl
dec
pop
xchg
pushf
adc
push
cmpsb
push
scas
fistps
jo
cmpsl
gs
mov
push
push
fwait
notl
xchg
jmp
fisttps
das
cmp
jbe
or
sub
push
mov
fs
mov
andl
pusha
lds
mov
push
pop
out
sbb
ljmp
popa
mov
pop
call
dec
mov
addr16
adc
mov
xchg
push
inc
xor
sahf
or
cwtl
popf
insb
and
mov
inc
stc
or
ret
leave
fsub
nop
push
sahf
sbb
mov
inc
xchg
push
add
inc
insl
push
push
bound
push
test
adc
lods
jnp
mov
mov
add
fcmovnb
in
xchg
repz
js
push
mov
xchg
mov
pop
sbb
stos
inc
les
out
fwait
push
popf
out
push
icebp
mov
and
out
ja
jo
jno
add
stos
lods
push
ljmp
jnp
fsubrl
jp
mov
insl
lock
sub
xchg
pop
xchg
rorl
mov
mov
add
test
in
push
mov
xor
dec
dec
mov
out
jno
pop
push
jns
je
lock
or
sbb
into
push
out
add
call
loopne
iret
test
pop
sbb
xor
int3
and
inc
lahf
pop
das
sbb
push
or
test
sub
aam
xchg
mov
inc
scas
icebp
xor
cmpl
push
xchg
sahf
ret
add
jle
xchg
cmpsl
pop
fcomps
pop
pop
mov
in
inc
mov
cmp
or
add
out
mov
xor
scas
xor
pop
mov
jecxz
loop
test
mov
subl
subb
mov
sub
lahf
inc
outsl
mov
icebp
or
sub
jmp
loopne
jmp
shr
mov
ss
outsb
pushf
int3
loopne
in
in
and
inc
dec
movsl
cmp
inc
xor
int
mov
rol
and
ret
les
xor
xchg
mov
xchg
adc
scas
and
add
test
xor
fisttpl
dec
adc
sub
cmp
ret
mov
and
pop
jbe
and
mov
adc
inc
lret
cmp
frstor
inc
test
sub
mov
test
cmpsb
aad
rorl
sbb
aaa
jo
cmp
jo
push
lds
enter
jl
sbb
shll
sub
sub
pop
xchg
cmpsl
adc
jecxz
icebp
int
xchg
and
cmpsb
jge
xor
mov
hlt
aas
sub
dec
daa
out
push
out
push
adc
call
inc
lret
pop
rolb
push
xor
mov
cltd
adc
adc
pop
or
fdivl
mov
mov
mov
andl
cmc
fldenv
dec
lods
jg
dec
fs
test
sbb
orl
cmpb
push
lock
xor
mov
dec
add
inc
push
push
outsl
push
out
and
xchg
sub
repz
addb
jbe
dec
sbb
mov
enter
lcall
sbb
push
imul
scas
add
js
adc
cmp
jl
orl
rcl
daa
sub
push
fwait
dec
mov
xor
inc
xor
gs
or
and
mov
mov
push
leave
lahf
lret
addr16
popf
jo
mov
movsl
cmpsb
pand
jo
pop
popa
test
arpl
das
mov
mov
out
and
mov
shll
sub
aad
imul
or
adc
aam
test
sahf
lds
jmp
aam
outsl
sub
cwtl
divl
outsl
and
in
xchg
fimuls
cld
mov
movsb
fsub
rorl
mov
mov
jl
aad
sahf
scas
subb
adc
in
repz
addr16
lret
dec
push
xor
mov
ljmp
sub
push
and
push
imul
sbb
fsubrl
test
mov
loopne
out
cwtl
sbb
mov
pop
add
xchg
dec
mov
fcompl
je
push
loopne
aam
flds
push
xchg
fdecstp
mov
in
xor
xchg
dec
pop
fs
cmpsb
mov
cmp
cmp
movsb
sti
shll
stc
push
sub
cmp
fistps
inc
repz
add
pop
shrl
cmp
xor
fcoms
adc
inc
inc
fildll
mov
xor
rcrl
insb
dec
insb
mov
fstpl
push
fucomip
hlt
stos
sahf
xlat
in
sbb
jmp
xlat
int
in
cli
and
sahf
inc
pop
pop
int3
or
in
call
ds
aam
aas
fcmovb
cmp
cwtl
sbb
add
int3
enter
test
jecxz
push
xor
test
sahf
cmpsb
shrl
mov
daa
aaa
cld
addr16
andl
aam
add
scas
les
les
xor
xor
outsl
pop
xchg
jns
add
gs
fdiv
loopne
gs
inc
mov
rcll
push
cs
pop
rcl
test
enter
mov
and
fwait
jecxz
call
cld
das
out
sti
cmp
ss
push
jbe
movl
icebp
pop
mov
xor
add
dec
adc
push
add
cmpl
inc
pop
sbb
adc
pop
andl
enter
jp
cltd
pusha
pop
cmp
imul
adc
scas
and
aaa
fidivl
mov
std
adc
rol
cwtl
xchg
pop
mov
sti
pop
js
cmpsb
xrelease
and
decb
inc
push
mov
sbb
adc
fisttpll
sbb
stos
fimull
mov
icebp
pop
fadd
push
or
mov
xlat
cwtl
jns
icebp
sbb
loope
jecxz
mov
cmp
cmp
push
inc
out
fbld
mov
lret
adc
loope
mov
int3
inc
je
jge
pop
inc
fisubrl
jecxz
daa
sbb
fisubl
lds
out
imul
in
cmc
insl
and
iret
mov
out
cmp
adc
loopne
cld
push
inc
shrl
cmp
fisubrs
mov
scas
out
lahf
insl
jmp
push
xor
call
lods
out
and
or
xchg
xchg
sbb
aaa
jno
mov
dec
das
sub
jge
shrb
or
repnz
sbb
add
and
cld
inc
fcompl
pop
mov
sarb
ret
das
mov
add
cltd
dec
push
cs
dec
mov
mov
bnd
xchg
mov
stc
mov
add
cmp
testb
adc
test
outsl
add
inc
loopne
inc
mov
imul
cmp
and
popa
push
int3
bound
adc
cmpb
and
out
and
insb
scas
shlb
nop
pop
pop
iret
ljmp
pusha
cmp
jae
cmc
sub
push
mov
push
aad
xor
inc
dec
inc
lods
shlb
pop
inc
out
das
popa
scas
sub
cltd
jecxz
pusha
pop
dec
mov
movsb
cmp
stos
xchg
cmp
mov
ss
push
inc
js
or
push
stos
cmp
pushf
icebp
lret
jmp
movsl
sub
pop
lock
push
loopne
inc
xchg
sbb
in
adc
leave
xlat
inc
es
scas
jo
loopne
and
repz
lcall
jecxz
jg
push
pop
out
aam
stos
and
mov
jmp
jne
cmpb
xchg
hlt
popf
pop
cmp
mov
mov
rcl
fucomip
repnz
mov
cmovle
outsb
mov
sbb
rolb
call
mov
pop
aas
mov
js
mov
movsl
mov
in
pop
inc
cmp
dec
shrb
push
jbe
mov
movsb
lock
clc
ds
pop
shrb
sub
lret
mov
sbb
iret
popw
ljmp
clc
jbe
inc
adc
out
mov
add
aas
mov
cmp
mov
sub
movsb
ficoml
adc
sub
aaa
int3
mov
pop
test
and
mov
stos
dec
loopne
mov
test
js
mov
cld
or
imul
pop
lea
mov
mov
imul
iret
push
dec
out
mov
jl
in
inc
scas
outsb
xchg
loope
cld
dec
dec
repnz
test
jne
or
sbb
and
push
xor
dec
inc
jae
push
inc
sbbl
dec
and
sti
imul
insb
jl
push
testb
dec
push
mov
ja
movsb
fneni(8087
imul
mov
loopne
push
adc
sub
push
xlat
adc
ljmp
sti
rclb
mov
mov
mov
movsl
cltd
jo
cld
jo
mov
pop
mov
lret
sub
sub
jb
ss
aaa
cli
add
pop
shlb
outsb
ss
xchg
push
xchg
mov
dec
movsl
mov
mov
stc
shlb
lock
pop
roll
adc
or
arpl
mov
push
cld
pop
xchg
and
mov
jno
aaa
and
xor
mov
pop
pop
mov
cs
mov
fnstenv
mov
shl
imul
inc
cmp
pushf
sub
outsb
nop
xchg
mov
add
xchg
xchg
xchg
dec
and
in
jge
adc
mov
mov
sub
inc
sahf
popf
iret
pop
les
inc
out
sub
jne
mov
int
xchg
dec
jo
jne
xor
stos
cmp
xchg
xchg
in
adc
push
fsubr
or
mov
mov
repnz
add
xchg
mov
mov
inc
loope
insb
cwtl
push
js
pusha
rcrl
mov
jbe
subb
loopne
jmp
test
mov
fists
jle
movsb
inc
push
iret
or
xchg
mov
loop
lock
lret
mov
js
push
push
mov
push
aas
faddl
dec
cmp
xchg
stos
mov
mov
push
xchg
jg
loop
xchg
in
imulb
fwait
loope
xor
lods
push
enter
xchg
mov
xor
daa
dec
aaa
add
pop
or
or
sbb
adc
mov
pop
out
add
xchg
shll
push
cs
xor
mov
push
scas
aas
add
dec
das
jne
jecxz
mov
jp
adc
cwtl
sbb
mov
and
in
outsl
pop
jae
sbb
rorl
shll
rcrb
cli
shl
fsubrl
arpl
push
in
loop
push
add
imul
arpl
out
adc
lret
adc
out
push
data16
je
jmp
add
add
clc
ret
cmp
mov
inc
cli
outsb
sub
jbe
xchg
cmp
mov
cmp
inc
ret
sub
sub
sub
scas
push
int3
fwait
out
cmc
mov
mov
fldcw
ljmp
fwait
lds
pop
cmp
dec
sub
test
imull
xchg
lea
stc
inc
dec
rorb
xchg
enter
sub
imulb
fistps
and
sbb
adc
mov
test
dec
inc
push
sub
das
lea
popa
in
mov
dec
add
mov
adc
jge
jnp
sbbl
pop
mov
bound
mov
or
sbb
push
adc
stos
xchg
cli
lret
aam
dec
and
adc
adc
jmp
aaa
mov
es
imul
mov
mov
aaa
xor
mov
in
mov
xor
jns
jle
push
mov
inc
rol
and
sbb
lea
push
testb
mov
adc
jae
xchg
cmp
cltd
insl
mov
and
xchg
testb
push
jecxz
jns
testl
test
mov
in
rcrb
sbb
out
mov
in
adc
cmp
mov
in
mov
add
and
xchg
adc
adc
xor
sbb
aaa
pushw
mov
sbb
mov
inc
dec
cmpsb
test
dec
cmp
or
rol
das
dec
in
mov
fidivl
jecxz
jns
cmp
pop
jmp
arpl
cmc
flds
gs
dec
aam
repz
xchg
into
and
sbb
stos
in
inc
outsb
movsl
std
pop
insb
leave
scas
cltd
mov
shlb
repnz
rcrl
clc
sbb
mov
pusha
mov
aas
adc
adc
inc
xor
add
or
and
push
pop
bound
outsl
cwtl
cmpsl
dec
out
dec
mov
test
shll
inc
lds
xchg
popf
popa
rolb
stc
cwtl
add
push
mov
jo
imull
mov
mov
sub
mov
or
hlt
mov
or
dec
hlt
mov
jae
push
out
movsl
repnz
movsb
dec
mov
nop
mov
add
fmulp
jbe
mov
xlat
xlat
and
std
pop
jmp
cs
or
cmp
dec
roll
jg
push
aad
or
cmp
pop
es
push
lret
xlat
nop
jmp
sub
mov
negl
pop
bound
lahf
xchg
cmp
aaa
and
mov
sub
cltd
dec
cmp
in
cmp
dec
mov
push
in
push
pop
test
lods
mov
add
pop
mov
or
loop
icebp
mov
dec
mov
hlt
punpcklqdq
xor
hlt
cmp
sarb
adc
call
adc
mov
and
incl
and
jecxz
pop
xor
arpl
push
test
mov
inc
hlt
enter
movsb
sub
xchg
add
mov
addb
iret
cmp
jg
inc
mov
jo,pt
fiaddl
outsb
mov
dec
cmp
or
les
bnd
jmp
push
xchg
xchg
dec
lea
mov
xchg
aaa
call
cmpsl
adc
push
add
and
mov
daa
dec
mov
pusha
cltd
mov
mov
adc
cli
inc
or
lods
iret
std
rol
lret
dec
and
orb
fldcw
mov
mov
add
xchg
cmp
pop
xor
enter
daa
push
cli
mov
jp
inc
cmp
sbb
xlat
mov
int3
dec
outsl
or
aam
jbe
repnz
out
test
in
mov
pop
nop
add
inc
dec
mov
xor
in
movsl
sbb
shl
cli
cmpsb
js
or
lods
cmc
pop
jecxz
imul
ret
test
sub
add
aas
clc
loopne
jns,pn
push
add
push
cs
sahf
fstps
add
cmp
xchg
or
lea
fadds
jl
loop
imul
ljmp
and
adc
icebp
enter
pop
xchg
jne
bound
mov
add
lret
jb
jmp
sub
lods
aad
ljmp
daa
sbb
cmp
or
shll
sub
leave
sahf
push
cmp
cmc
add
shl
lea
out
loop
xchg
out
dec
jo
sbb
pop
ljmp
and
jo
das
and
cmp
mov
in
push
lret
jg
mov
out
insl
fwait
add
jp
mov
iret
push
and
and
movhps
lea
or
cmp
jmp
inc
push
jp
decb
jle
sti
mov
mov
mov
xchg
sub
dec
movsb
push
lea
mov
insb
test
pushf
xor
in
ds
push
into
add
xchg
das
mov
mov
sbbl
jno
mov
cmp
or
leave
sbb
jb
sbbl
shlb
lret
outsb
xchg
mov
xchg
leave
pop
les
test
dec
insl
ja
xlat
adc
pop
dec
out
aaa
mov
mov
and
icebp
and
adc
fidivs
ljmp
push
inc
xor
dec
mov
adc
jg
cmp
push
cmp
loop
pop
in
cmc
aad
xor
outsl
je
mov
cmp
push
mov
imul
mov
leave
jp
add
loop
lret
mov
rolb
or
xchg
dec
call
xchg
call
cmc
jecxz
addr16
shlb
dec
dec
dec
addr16
imul
mov
sti
stc
ret
adc
adcl
scas
jno
inc
lret
xchg
jns
dec
nop
xor
loope
ljmp
loope
sub
and
fdivs
aad
subb
andl
in
lcall
iret
mov
pop
cmpsb
mov
jo
mov
std
or
xchg
jecxz
adc
mov
add
pushf
popa
cmp
push
aaa
mov
add
js
jne
je
outsl
mov
or
fisttpll
cltd
pusha
gs
lret
in
or
push
fxch
aaa
pop
push
mov
inc
pop
add
mov
jg
adc
enter
test
inc
add
adc
repnz
jo
cmp
jne
insb
outsb
sbb
movntps
push
jne
xchg
out
clc
jle
pop
in
sbb
sbb
xor
aam
test
add
clc
jge
mov
pop
xor
add
cld
movsb
jecxz
inc
rcrb
jns
inc
mov
lret
into
xchg
cmp
int3
jmp
cld
mov
inc
and
add
xchg
lahf
aad
mov
xor
stos
enter
xchg
sub
mov
or
mov
arpl
out
xchg
iret
mov
pop
enter
cs
jno
add
xchg
cmp
inc
dec
adcb
fcomps
mov
mov
fildl
test
pop
jle
mov
andl
fmulp
loope
xchg
aaa
or
cmp
jbe
mov
imul
ljmpw
or
stc
stos
sub
push
or
sbb
les
repnz
add
insl
iret
test
jne
out
cld
out
inc
jmp
dec
and
sub
stc
cmc
cmpsl
xchg
pop
xorl
mov
pop
mov
in
xor
sub
inc
fdivl
fdivs
or
xor
pusha
and
enter
test
sub
push
push
mov
dec
mov
sub
arpl
jnp
mov
xor
cmp
lahf
push
mov
iret
stc
fwait
push
scas
aad
mov
test
pop
cmc
not
dec
sbb
mov
icebp
es
rolb
int3
imul
outsl
mov
adc
call
aam
xor
ret
xlat
jp
mov
mov
xchg
cmp
inc
loop
js
pusha
mov
icebp
negl
ficoml
or
push
jo
mov
in
sahf
adc
add
scas
movsl
loop
push
mov
arpl
xchg
ljmp
pop
repz
pop
mov
mov
or
xor
xor
test
orl
sbb
mov
test
lea
cli
mov
and
or
push
mov
iret
or
pop
out
or
outsb
popf
dec
mov
mov
dec
fiadds
aaa
rol
mov
pop
fs
into
repnz
adc
scas
cmc
mov
dec
jbe
push
out
cmp
push
dec
push
gs
loope
lds
ja
jb
aam
xorb
xchg
fsqrt
adc
aaa
aas
insb
scas
std
inc
imul
sub
out
fcomip
xchg
mov
sbb
js
xchg
cld
enter
lcall
xchg
pop
push
jo
add
stc
push
xchg
push
int
pusha
mov
das
xchg
lods
mov
mov
stos
je
xchg
mov
repnz
pop
lret
jmp
cmp
or
in
mov
sbb
jl
shl
pop
pop
xor
outsb
int3
sub
icebp
enter
call
sub
sbb
adc
aaa
lret
test
psubq
or
add
js
dec
gs
aad
enter
out
dec
jmp
lea
cmpsb
cmpsb
cltd
push
iret
fmul
mov
push
push
mov
out
xchg
cld
xor
push
or
push
rorb
lahf
mov
dec
inc
cld
mov
adc
rcl
loope
jle
add
xor
pusha
cmp
sbb
inc
cmp
and
xchg
mov
leave
fs
lods
mov
pop
fs
das
negl
sbb
mov
mov
sub
setne
imul
push
fnstcw
pushf
mov
cmp
mov
push
cmc
jl
jecxz
das
popa
fsubs
daa
pop
insl
inc
sub
and
mul
cmp
enter
fstps
clc
jno
inc
pop
iret
mov
sbbb
sbb
xor
jae
mov
push
cmc
pop
sbb
inc
mov
lcall
lock
sahf
mov
xor
or
pop
lret
shr
loop
xchg
ja
es
pop
pop
xchg
xchg
push
shlb
cmpsb
and
pushf
mov
insb
flds
mov
sti
aad
cmp
push
fcoml
out
mov
dec
sub
push
idiv
shlb
jnp
xor
pop
les
call
mov
cmp
inc
pop
mov
cmc
cmp
out
bound
add
xor
outsl
lds
xchg
sbb
testl
xorb
jo
dec
mov
inc
xchg
jmp
xchg
and
adc
dec
stos
iret
in
mov
repnz
fisubs
movsb
dec
gs
mov
sbb
jnp
ss
daa
je
ds
ss
sbb
and
dec
add
lds
int3
outsl
inc
mov
sbb
mov
fadds
push
iret
push
or
pop
push
pop
insb
inc
outsl
mov
adc
pop
jns
dec
jns
mov
mov
or
pop
jge
lret
or
cmp
loop
mov
loop
jo
xlat
xor
arpl
push
outsl
sbb
push
add
adc
sub
psubq
pop
mov
mov
jl
push
rorb
popf
dec
mov
xor
jb
xchg
push
and
sti
jmp
les
fistpl
in
sub
pop
push
push
sub
into
cli
jecxz
mov
repz
je
adc
add
fstpt
sbb
xorb
and
pop
lods
jbe
mov
loope
pop
jmp
es
pop
lcall
leave
xchg
jae
jge
mov
mov
stos
jae
jp
aad
cmp
loopne
jo
stc
fmul
aam
divl
shlb
xchg
xlat
mov
or
dec
adc
test
cld
inc
jl
xchg
data16
loopne
fmul
outsb
fdivl
add
fnstcw
mov
mov
cwtl
adc
jg
pop
insl
js
push
sbb
sbb
cltd
aaa
fucom
mov
repnz
push
mov
and
test
push
scas
sub
adc
cmp
movl
jle
loope
mov
insb
add
ret
js
xor
cmp
push
add
push
mull
pop
cmc
fcomps
mov
les
sarl
adc
cmp
mov
lahf
mov
mov
gs
or
inc
nop
inc
fisubrl
out
imul
in
sbb
xchg
cmc
and
cli
iret
mov
mov
fisubrs
aaa
leave
test
ja
ret
dec
jo
push
dec
pop
sbb
jp
enter
jnp
stc
mov
in
sbb
push
jecxz
push
pusha
fidivs
jno
and
sbb
push
cs
mov
mov
sti
jno
adc
or
lock
inc
ds
cmp
lret
daa
cmp
aam
push
rcrl
and
dec
sbb
adc
sub
cld
mov
dec
loopne
add
out
shll
jae
loopne
frstor
lock
dec
sbb
icebp
or
lret
imul
dec
test
test
dec
call
push
aaa
and
add
dec
popa
pop
jg
push
xchg
and
sbb
push
and
fisubrs
cmp
push
pop
enter
mov
fbld
test
jns
cmpsb
dec
pop
loope
jbe
pop
and
mov
xor
cwtl
je
mov
jne
sbb
jmp
adc
push
and
loopne
mov
and
lods
sub
push
sbb
or
mov
lcall
and
sbb
repz
sbb
aam
ss
aam
jnp
adc
adc
jns
jno
inc
outsl
outsl
jns
leave
cltd
ret
jns
push
xchg
mov
mov
mov
ret
inc
cmc
cmp
jmp
and
cwtl
push
inc
dec
mov
or
ror
enter
insl
imul
sbb
pop
sbb
xchg
mov
out
push
pop
adc
stc
sbb
sub
or
cmp
cltd
iret
dec
xchg
inc
xchg
cmc
lret
pusha
pop
cwtl
subl
add
lods
scas
sbb
pop
mov
jge
loop
sub
cmp
negb
xlat
mov
fbstp
aam
mov
add
adc
adc
mov
or
sbb
scas
adc
xor
mov
ljmp
imull
sti
adc
sbb
xor
subl
sub
arpl
inc
adc
or
mov
mov
scas
xor
push
mov
push
stos
rorl
xor
or
lock
stos
shll
ret
or
inc
xchg
adc
pop
mov
pushw
aaa
into
mov
mov
mov
lea
xchg
into
fisubrl
adc
test
popa
pop
sahf
popf
ljmp
iret
daa
ret
data16
adc
mov
mov
mov
pop
cmpsl
es
test
ret
fcmove
lods
jp
js
dec
push
push
push
pop
sahf
sub
fs
imul
testb
cmpsl
neg
sahf
cmp
add
pop
cmpl
mov
ret
sbb
movsl
loope
mov
and
xor
mov
or
push
lods
insl
sub
aad
fcomps
xchg
pop
inc
test
jg
popl
aam
dec
and
cmpsl
inc
ret
flds
test
stc
adc
adc
dec
or
mov
push
outsl
xchg
inc
xor
cmpsb
dec
enter
in
cmovle
and
pushf
pop
cli
clc
sbb
add
dec
xchg
data16
and
gs
mov
dec
inc
fwait
mov
inc
cmp
inc
push
out
js
inc
cmp
loope
xlat
fcoml
pop
mov
dec
ret
mov
jae
pop
mov
sub
add
push
loopne
jmp
pop
add
push
and
jns
js
insb
dec
lcall
dec
daa
sti
jp
in
or
inc
add
leave
lock
ficompl
shll
xor
shr
push
jae
pop
cmp
int
loopne
mov
xchg
push
xor
mov
sti
movsl
sub
nop
pop
shr
sub
add
outsl
imulb
fnstsw
shlb
in
fildll
push
in
or
mov
mov
jns
or
stos
sbb
jb
aas
mov
mov
mov
mov
and
sbb
je
mov
test
insl
ja
mov
sbb
xor
mov
and
xor
jp
dec
mov
lock
stc
cmp
jp
jmp
pop
push
add
jecxz
aas
rorb
int
std
mov
inc
inc
or
inc
xor
iret
ret
aad
inc
push
sbbl
mov
je
cmc
insb
stos
out
xchg
mov
es
or
je
inc
inc
in
cmp
mov
or
stos
jge
repz
nop
inc
jle
loopne
mov
movsl
push
enter
incl
clc
lods
out
xchg
sub
fimuls
fcomps
out
ret
mov
aad
jp
loope
add
mov
sub
es
adc
mov
add
ret
add
pop
in
add
push
mov
inc
or
push
imul
loopne
adc
dec
dec
out
mov
addb
xchg
sbb
mov
pop
xchg
push
ds
adc
sub
sahf
test
lahf
fsubs
jbe
addr16
push
mov
mov
fcoml
add
test
clc
test
and
mov
push
pop
lock
xor
punpcklwd
cmp
cmp
xchg
jp
fbld
mov
xor
and
ret
add
xchg
push
cs
xchg
pusha
add
adc
pop
call
xchg
rcll
std
sbb
push
mulb
out
mov
xor
inc
fistl
out
xchg
sbb
or
xchg
mov
repz
scas
fwait
sub
mov
into
pushf
add
stos
mov
dec
loope
dec
arpl
inc
les
push
in
mov
shlb
inc
lock
jnp
sbb
ja
or
and
xor
in
int3
dec
ret
out
cli
mov
xchg
mov
ja
jl
jb
add
pop
add
out
aaa
in
and
xchg
clc
sub
sub
stc
or
leave
jle
lret
test
jnp
lods
dec
pop
stos
sub
mov
jmp
mov
xor
repz
xor
je
out
xchg
int3
repz
xor
enter
test
movb
lds
int3
push
jnp
mov
dec
jnp
pop
add
out
negb
pop
xchg
xchg
jp
pop
lds
in
ljmp
sbb
push
adc
xor
insb
clc
xchg
jbe
push
and
cmp
pop
mov
add
scas
inc
pop
leave
add
push
mov
mov
sahf
roll
and
lahf
pop
clc
loope
xchg
push
movsb
and
jle
repnz
mov
pop
pop
ds
loope
xchg
add
mov
out
and
push
lret
sbb
adc
ret
push
push
dec
lret
jns
mov
movsb
sub
push
iret
dec
ret
test
out
icebp
cltd
mov
inc
shrl
jnp
xor
sbb
add
push
mov
jbe
sub
fsts
inc
lret
xor
stc
pop
stc
jg
and
data16
int
shl
pop
sti
cmp
scas
mov
sahf
mov
inc
sbb
mov
push
add
or
pop
cmp
adc
push
jle
pop
xor
add
fiaddl
in
bound
mov
movsb
cmp
insb
jns
mov
mov
push
xor
jne
mov
aam
in
or
push
inc
fisubl
inc
xor
push
mov
or
cli
repz
mov
xlat
das
js
mov
sahf
imul
fwait
sub
inc
fistpl
xor
add
outsl
xchg
orl
sbb
into
imul
jle
pop
orl
and
dec
scas
sbb
mov
pop
xchg
mov
mov
xchg
call
cmp
in
pop
mov
icebp
jno
fs
add
vmwrite
test
insl
inc
nop
int
rcrl
dec
aam
outsl
push
xlat
faddl
cmc
daa
push
mov
jno
adc
pop
repz
adcb
das
mov
sbb
inc
repz
popa
fildll
dec
pop
jns
loope
dec
add
push
sbb
xor
fnsave
in
mov
js
xchg
push
jae
mov
adc
addb
loope
sbb
pop
aaa
mov
ret
clc
mov
dec
call
in
les
ret
jnp
ss
sbb
xchg
lock
or
aam
jmp
jg
rcl
sbb
das
arpl
and
aam
mov
jnp
cmp
jmp
orb
inc
mov
sub
fsubs
pop
mov
cmp
or
dec
cld
mov
dec
fwait
aam
movsb
aad
stos
add
ljmp
or
stc
mov
ss
fdivs
popa
inc
addb
rorb
sti
adc
je
mov
out
fcoml
pop
sub
fsubl
mov
ret
mov
jb
test
mov
outsb
mov
ja
sub
sbb
rcll
jmp
pop
int3
pop
push
and
jg
mov
ljmp
pop
pop
cwtl
push
cltd
sub
push
mov
mov
xchg
push
imul
lods
aam
mov
mov
lock
popf
or
out
push
sbb
push
cli
pop
fldl
repz
inc
pop
gs
jbe
repnz
or
lea
push
into
sub
in
xor
mov
fldt
push
stos
push
mov
add
lcall
push
jno
stos
loope
aaa
into
push
lods
ds
shr
add
mov
jg
or
subb
sbb
jno
xchg
mov
test
sub
adc
rcrb
jae
out
outsl
xchg
js
cmc
orl
xchg
xor
loope
xor
fwait
lcall
in
xlat
ret
inc
pop
outsb
es
loope
mov
leave
out
and
inc
lods
inc
dec
in
xchg
adc
mov
fs
popa
popf
cmp
cmpsl
mov
movsb
pop
push
push
pop
pop
movsb
stos
inc
loop
loopne
mov
add
mov
sbb
mov
nop
and
lahf
aam
xchg
jl
pop
jge
sbb
push
loopne
cmp
push
or
popf
lea
pop
movsl
mov
adc
jnp
jne
scas
jne
push
inc
adc
popa
cmp
jecxz
in
daa
lods
or
rol
inc
setp
out
push
xchg
hlt
sub
push
mov
iret
fistps
addr16
das
sbb
stos
xor
mov
enter
cmp
imul
repz
in
mov
std
ss
fsubrs
jp
jge
push
add
stc
hlt
mov
cmp
mov
loope
in
popa
movsl
aas
fcmovbe
notb
mov
in
aaa
xor
or
sbb
sbb
lcall
or
loopne
jle
in
xlat
cmp
mov
rcll
ds
push
nop
les
fisttpll
dec
mov
loope
pop
gs
in
int
into
aad
roll
ret
jle
cli
aam
dec
xchg
imull
clc
les
je
popa
push
or
scas
in
insb
adc
iret
xchg
mov
and
inc
testl
xor
xor
jp
inc
cmpsl
push
cmp
jb
xor
jl
and
cmpsb
jns
sbb
xchg
mov
mov
loop
mov
inc
outsl
adc
pop
xchg
aaa
sub
mov
subl
popa
loop
sub
iret
dec
add
stos
lcall
test
stos
sbb
cmp
out
test
pop
nop
test
rcr
lcall
fst
lea
lret
jbe
sub
cli
or
fsubrs
fldl2e
adc
adcl
jae
ficoml
notl
mov
popf
repnz
out
cmp
jecxz
aas
and
outsb
orl
dec
stc
and
push
je
fisttps
scas
in
push
or
lret
inc
mov
sbb
dec
pop
outsb
push
rol
push
push
inc
imul
push
or
ljmp
pop
sbb
pop
inc
lahf
pop
aad
mov
stos
mov
clc
int
ss
jle
xlat
imull
rcrb
sbbb
push
inc
cld
jae
xchg
fs
cwtl
mov
mov
push
jns
lea
enter
adc
mov
adc
xchg
sub
jge
fcom
iret
rorb
test
add
fdivr
cmp
xchg
adc
hlt
mov
out
pop
out
cltd
jne
cmp
jne
xchg
iret
es
lcall
int
sub
push
jmp
aas
cmp
xchg
into
jge
sub
xchg
mov
add
and
mov
mov
adc
mov
cmp
jae
pop
in
pop
mov
push
push
lret
mov
xor
sbb
sub
aam
dec
je
rol
push
pop
jecxz
cltd
imul
and
out
sbb
mov
pop
call
inc
xorl
cmp
std
imul
aaa
daa
sbb
xor
lods
xor
push
cmp
ja
fcoms
das
lods
cltd
daa
sub
shlb
loope
cmp
push
add
and
aam
and
add
mov
lds
and
insl
int3
and
scas
push
xor
mov
and
pusha
lock
xor
mov
cld
outsl
add
add
pop
pusha
lds
nopl
adc
icebp
dec
adc
dec
jns
adc
fcom
push
and
push
jmp
mov
mov
inc
in
inc
es
sub
cmp
cmp
scas
std
mov
addr16
in
sbb
mov
jo
xor
inc
int3
pop
and
in
sahf
stos
sub
xor
ljmp
cld
push
mov
inc
add
cmp
cmp
sahf
imul
jb
dec
add
stos
jl
cmp
cmp
movsb
mov
sub
fcomps
leave
mov
add
add
fldcw
adc
jb
or
inc
lret
stos
and
mov
js
dec
jmp
fisubl
mov
mov
enter
jnp
loopne
xor
cmovge
in
les
xchg
in
cld
sti
ffreep
lahf
out
mov
leave
adc
clc
fcompl
or
bound
mov
in
mov
and
push
inc
cmpsb
pop
push
popa
jb
ficompl
or
jge
sbb
cmpb
xor
lock
aad
and
pop
jnp
sahf
sub
or
sahf
cltd
xchg
filds
stos
dec
xchg
test
adc
bound
notb
icebp
into
mov
xchg
in
inc
xchg
mov
loope
cmp
mov
lods
dec
imul
lahf
pop
pop
data16
mov
dec
cwtl
add
xor
movsl
movsl
xchg
movsb
dec
das
push
sbb
pop
add
inc
pop
jnp
daa
insl
and
mov
jo
in
rorl
mov
pop
mov
aas
push
mov
dec
jge
test
xchg
mov
loope
mov
adc
add
mov
lcall
call
icebp
jne
lret
xchg
movl
rolb
xor
insb
jbe
add
ds
inc
out
adc
push
into
mov
mov
lea
insb
and
xchg
mov
sbb
ds
cli
aad
lcall
les
jmp
xor
imul
aad
addr16
enter
jle
add
adc
sbb
jecxz
add
into
xor
jnp
cli
xchg
fwait
dec
aam
jns
stos
push
pop
divl
cli
xor
cmp
imul
addr16
stc
xchg
das
out
xchg
loop
imul
cs
adc
xor
js
cmp
es
cmp
ret
ljmp
jl
sbb
jge
sahf
sar
add
add
dec
mov
cmpsl
adc
repz
sbb
jae
xor
hlt
add
pop
sahf
imul
in
xor
push
mov
cltd
jne
mov
and
out
xor
lcall
jle
push
lods
and
arpl
mov
jp
inc
insl
and
push
repnz
xor
lahf
movsb
test
sub
fsubrl
add
ss
pusha
xchg
addr16
pop
in
sbb
jecxz
dec
cmp
sub
cvtps2pi
push
add
pop
cmpsb
call
mov
mov
cmp
push
iret
jl
lds
and
lahf
dec
or
lea
pop
int
sub
xor
fidivl
hlt
fistpl
sbb
mov
sub
rcll
pop
pop
xchg
addr16
pop
int3
outsb
jmp
sbb
sub
sarl
sbb
in
popf
sbb
push
push
mov
add
testl
and
pop
dec
test
jle
cmp
ljmp
jecxz
sbb
xor
push
cs
scas
scas
lods
dec
mov
sbb
clc
push
pop
cmpsl
xor
mov
out
outsl
je
xchg
inc
icebp
add
out
stos
mov
repz
cmpsb
lcall
mov
jecxz,pt
loopne
jne
shr
inc
lock
pop
sub
fwait
outsl
mov
and
adc
je
js
enter
sub
mov
jge
push
cwtl
sub
jl
and
fstl
xchg
sbbl
lods
addr16
in
sti
xchg
int3
add
sbb
or
cmpsb
cmp
fmuls
jbe
loope
mov
aaa
fistpll
addb
std
xor
and
jne
inc
imul
sbb
stc
jl
aad
dec
inc
call
push
movl
jg
pop
mov
xlat
shrb
test
pop
jg
lds
xor
xchg
test
pop
cmp
int
xchg
mov
pusha
mov
lds
insb
push
xchg
lods
lcall
mov
sti
mov
xchg
inc
mov
push
in
nop
mov
mov
jo
add
and
das
or
mov
xlat
cmp
mov
or
loop
mov
test
outsl
movsl
bound
sbb
jne
out
dec
xchg
push
addl
sub
ret
movb
ja
pop
lcall
jno
iret
mov
imulb
or
cmp
fnstsw
jns
test
dec
pop
dec
jg
add
or
dec
inc
sahf
sbb
xor
mov
pusha
scas
xor
icebp
call
sub
mov
mov
xchg
sbb
rcrb
pop
int3
sbb
leave
ja
je
dec
inc
jp
repnz
jae
xchg
pop
mov
mov
push
loop
andl
xchg
mov
push
jmp
xor
fwait
repz
movsl
dec
arpl
mov
aas
push
xor
xchg
cmp
cmp
dec
clc
dec
and
neg
xchg
pop
jp
mov
cmp
jne
imul
push
xchg
add
jl
dec
lea
add
ret
leave
xchg
jae
in
pop
lods
daa
addl
mov
fistl
lods
ja
jle
mov
xor
fsts
sbb
inc
aam
dec
imul
sbbb
lods
bound
movsl
mov
das
repz
add
repz
or
cmc
es
jecxz
fiadds
jbe
mov
popf
lods
iret
aaa
lcall
leave
inc
pop
test
fisubs
jno
mov
sub
adc
jp
pop
lret
adc
jecxz
ds
popa
lods
imul
cmp
cmp
fistpll
mov
dec
loopne
pop
xor
inc
push
nop
repnz
adc
and
push
and
fsubl
loope
mov
cmp
movsl
cli
jb
lods
adc
fsubs
sti
xor
vsubps
insb
and
stos
icebp
and
mov
push
out
cmpsb
xchg
mov
mov
loop
sub
cli
into
hlt
sbb
in
in
xor
roll
fdivrs
inc
xor
stos
outsl
cmp
or
fs
mov
dec
xchg
std
leave
jb
or
add
movsl
mov
sbb
test
fstps
pop
jbe
inc
mov
std
into
insl
inc
and
push
sub
inc
jae
mov
repz
mov
adcl
in
cltd
ret
popf
jecxz
rorb
cmp
bound
mov
pop
inc
inc
xlat
push
cmp
pop
repnz
fisubrs
jmp
lods
xor
jg
cli
scas
and
lock
xchg
rcrb
repz
inc
jae
xchg
sub
cmc
daa
dec
jp
fwait
inc
mov
js
jns
pusha
lods
subb
stos
mov
cmpl
and
push
mov
pop
sbbl
mov
adc
in
ja
cmp
inc
loopne
cmc
addr16
xor
outsl
into
push
pop
das
cmp
mov
or
aad
cmp
loope
clc
xlat
arpl
cmpsl
adc
sbb
shlb
lcall
les
mov
int3
fmull
or
into
cmc
mov
xchg
scas
pop
aas
clc
lods
pop
mov
insl
jbe
pop
jecxz
testl
outsb
push
or
mov
out
lret
push
stos
adc
mov
bound
imul
sahf
loopne
xor
mov
and
movsb
mov
flds
xor
mov
mov
and
xchg
gs
jmp
sbb
fs
add
pop
ljmp
dec
mov
push
push
or
sbb
fwait
cmpb
sub
mov
and
movsl
icebp
insb
dec
arpl
test
fwait
mov
lods
lock
lods
fwait
mov
in
xlat
in
pop
add
jle
call
dec
lods
cs
inc
dec
mov
jl
mov
or
repnz
jl
call
mov
sub
or
es
and
cmc
fsubrs
cld
cmp
add
xchg
push
out
in
push
ret
cs
out
les
gs
imul
pop
shrl
jmp
insb
add
sub
pop
ds
lret
fstps
popf
loope
lds
js
mov
dec
andb
or
rol
mov
sub
mov
xchg
outsl
xor
out
cmp
pop
cmc
mov
xor
push
or
pop
pop
sub
xor
jo
and
aas
mov
cs
pop
gs
out
repnz
pushf
jp
xchg
enter
add
cmp
xchg
cmp
mov
icebp
jmp
cmp
push
sbb
pop
jg
jnp
popf
lock
repz
pop
xchg
lcall
out
cmp
es
lea
cmp
lock
fwait
fs
cltd
jmp
sbb
xchg
outsl
test
lcall
cmpsl
pop
andb
or
pop
movsl
lock
xchg
lahf
orb
repnz
or
int
inc
and
iret
aas
or
xor
dec
push
mov
xchg
mov
loope
out
dec
andl
xchg
fisttpll
mov
mov
in
sbb
jp
leave
jne
cs
push
dec
xor
das
or
ret
aam
xchg
mov
jbe
int
pop
dec
sbb
and
xchg
iret
xor
fsubr
jl
cmp
sub
adc
leave
sbb
lods
out
shl
aad
adc
insb
adc
mov
jne
mov
outsb
mov
out
ret
sbb
jge
shl
pop
add
push
sahf
test
xlat
repz
fldcw
push
div
rol
insb
jne
push
jp
fcoms
jl
loopne
sub
push
mov
nop
push
fwait
jge
cmpsl
test
lret
dec
push
movsb
push
ret
mov
push
sbb
lods
sub
mov
hlt
repz
or
insl
cmp
add
sub
les
cs
sub
jno
or
xor
rorl
jne
test
je
mov
enter
dec
pop
jl
popa
hlt
xchg
pushl
shll
cmpsl
cmpsl
pusha
roll
shrl
lcall
in
inc
xor
or
addl
mov
ss
push
in
loopne
dec
outsb
cmp
loope
xlat
xchg
pop
stos
lods
cli
jne
in
push
cmc
mov
cmpsl
dec
test
cmp
repz
imul
scas
sbb
mov
out
aas
sub
fiadds
xlat
sbb
push
inc
les
hlt
shlb
push
leave
inc
js
aad
push
inc
mov
ljmp
inc
sub
nop
mov
xchg
pop
mov
repnz
nop
cmp
or
shlb
cmp
dec
mov
movsb
cmp
hlt
xchg
xchg
sub
and
aam
pop
lods
mov
inc
inc
jl
clc
mov
add
sub
jo
jmp
xor
sbb
inc
adc
fsubr
jbe
pop
outsb
aad
mov
mov
push
lahf
sub
cmpsl
pop
xor
jl
cmp
gs
jp
cld
add
orl
mov
test
pop
aas
and
adc
out
inc
fstl
xchg
cmpsl
outsb
or
test
mov
or
mov
jl
into
jle
xorb
push
out
int
out
and
arpl
adc
pop
xlat
addl
decb
jmp
jbe
xor
cmp
xor
scas
stos
imul
add
or
jg
in
mov
adc
mov
fistl
shrl
ror
test
sbb
stos
mov
sbb
xlat
mov
xlat
lods
rcl
rclb
test
and
fwait
movsl
lods
loope
cltd
cmp
testl
add
das
mov
fwait
sbb
xchg
mov
pushf
lock
ret
in
xor
rcl
movsl
andb
mov
mov
icebp
rcrl
mov
das
lret
pop
test
mov
add
or
leave
ss
or
push
jg
adc
sti
push
ljmp
daa
mov
arpl
lret
pop
xor
cltd
jns
stos
mov
mov
pushf
les
inc
or
inc
pop
cmpsb
sar
mov
imul
or
das
repnz
sbb
out
movsb
movsl
jb
nop
mov
push
pop
mov
gs
mov
ds
cmp
in
xor
pop
mov
pop
stos
pop
push
xchg
inc
aas
lock
pop
mov
mov
or
nop
loope
xor
outsl
or
jle
lret
push
popf
lret
or
not
inc
lret
out
push
adc
pop
es
xchg
cwtl
div
inc
out
js
pop
xor
pop
lcall
sbb
inc
jp
scas
jne
out
sub
or
fdivl
jno
xchg
mov
jo
cmp
popa
push
scas
lea
and
or
mov
das
xchg
jecxz
cli
fnstcw
cli
shl
or
mov
xor
and
sahf
fsubl
aam
adc
pop
cmp
jbe
inc
mov
fsubs
hlt
outsl
mov
xchg
mov
in
out
pop
dec
test
pop
cmpsl
pop
movsl
adc
add
out
add
aam
cwtl
hlt
sub
lods
xor
pushf
ss
rcll
xchg
mov
xchg
subb
inc
inc
je
fimuls
rol
out
pop
xor
lock
xorb
adc
daa
mov
pusha
aaa
inc
dec
adc
lds
hlt
repnz
es
nop
mov
mov
enter
adc
or
pop
stos
filds
pop
pop
gs
cs
sub
gs
pop
xchg
sbb
jo
in
cmp
jb
dec
lret
lea
stos
and
sahf
fstl
mov
add
int3
addr16
fs
push
and
mov
xor
or
sbb
xchg
xor
outsb
push
cmpsl
test
test
inc
mov
sbb
fmuls
inc
jo
mov
dec
int3
lock
sbb
sub
cmp
xchg
sbb
out
lea
jne
xchg
inc
mul
pop
subl
mov
imul
jp
pushf
sbb
call
mov
orb
gs
imul
and
mov
xchg
mov
nop
jl
out
jno
cltd
shll
lcall
jb
mov
sbb
jmp
push
out
test
xchg
aas
xor
sahf
cwtl
xlat
test
aam
cmpsl
sub
das
and
xor
xor
clc
xchg
ficomps
add
into
cmp
daa
popf
push
mov
xchg
cs
and
outsl
mov
lret
mov
cmp
push
aaa
xor
ja
or
add
cli
sub
ljmp
push
add
push
popa
pop
or
cltd
pop
push
sub
mov
and
test
push
fdivl
mov
dec
mov
rorb
cld
dec
sub
outsl
lahf
loopne
in
insl
stos
mov
out
inc
sti
js
stos
mov
xchg
orps
jns
sbb
and
loope
pusha
test
adc
outsl
sahf
out
mov
or
xor
push
mov
fstpl
in
and
fbld
ja
dec
add
and
pop
out
pop
mov
idivl
push
cwtl
mov
lret
sbb
cli
mov
push
loope
jno
icebp
outsl
jp
imul
gs
xchg
jle
insb
pop
sahf
and
cmp
jmp
xor
jle
rcll
sub
popf
frstor
data16
pop
lcall
ss
sbb
and
in
dec
cmc
jle
jp
adc
pslld
lock
into
cmc
adcl
movsb
fldcw
pushf
add
push
ret
addr16
imull
hlt
popf
or
push
mov
and
and
and
arpl
pop
ja
adc
stos
and
mov
fcmove
fsin
nop
rorl
jmp
testb
orb
jp
popa
scas
js
std
ss
dec
mov
lock
leave
call
bound
data16
mov
out
out
nop
or
daa
sbb
adc
xchg
pop
scas
sub
xchg
arpl
aas
sub
push
xchg
sub
bound
push
adc
adc
mov
cld
cli
loop
pop
loop
inc
fwait
fs
frstor
jle
cmpsb
stos
jl
mov
inc
inc
sahf
dec
jp
mov
inc
paddusb
push
dec
inc
mov
mov
pop
pop
lret
arpl
cmp
loop
mov
mov
aas
mov
push
jno
adc
popa
and
rorb
mov
andb
mov
mov
sub
inc
add
aas
cli
arpl
add
pop
fs
adc
imul
ret
dec
orb
or
rcl
xor
jb
ljmp
inc
stos
rcll
js
daa
addr16
push
imul
ss
icebp
xchg
das
cwtl
jo
addr16
mov
lret
sbb
in
in
push
push
push
inc
stos
mov
jecxz
mov
mov
or
adc
dec
call
jnp
data16
in
call
add
fcoml
jae
test
cmp
mov
fs
inc
sbb
int
test
cmp
mov
loopne
add
mov
rorl
decb
ja
xor
cli
test
push
xor
iret
bnd
pop
rclb
or
pop
mov
fisttps
jns
and
ljmp
push
sbb
cs
mov
and
jle
imul
push
shrb
fmull
jg
shlb
mov
fstp
sub
jl
mov
jle
mov
and
ret
out
and
adc
add
stos
cmpsl
or
add
push
test
js
enter
mov
sarl
testl
jno
std
cmp
jo
cmp
xor
les
in
cmp
push
xchg
sub
imul
jg
inc
jmp
lcall
cs
mov
test
sti
inc
add
es
push
inc
add
insl
mov
movb
pushf
nop
es
cs
or
loope
lods
sti
push
jmp
inc
aam
aam
add
inc
int3
scas
mov
push
adc
mov
mov
add
inc
subb
call
int
in
push
push
dec
sub
xor
pop
lahf
mov
or
push
scas
into
mov
jns
and
pop
inc
sbb
mov
fbstp
dec
push
cvtps2pd
mov
xchg
clc
pushf
jle
outsl
pop
push
repnz
mov
jns
or
mov
je
hlt
xchg
loop
jp
jecxz
mov
je
test
xor
dec
jmp
push
pop
push
dec
jle
or
add
gs
repz
lds
fwait
or
or
xor
mov
sbb
and
adc
inc
jns
add
imul
mov
mov
xor
mov
pminub
sbb
nop
xor
das
jecxz
minps
dec
or
int
cmp
in
jg
in
sub
loop
loope
dec
arpl
xchg
mov
pop
fimuls
mov
int3
and
dec
and
cld
jl
inc
ds
ja
xor
and
mov
jmp
xor
xlat
dec
das
mov
pushf
jne
jno
pop
rclb
push
xchg
sarl
lock
mov
dec
les
nop
int3
in
pusha
xor
lahf
push
hlt
movsb
mov
ja
inc
popf
and
insl
inc
imul
pop
dec
pushf
fisttpll
dec
adc
ret
hlt
imul
xchg
jae
push
inc
repnz
rol
cmp
shll
xor
inc
lods
adcl
out
mov
xchg
js
stc
dec
scas
mov
pop
loop
add
push
sbb
imul
xlat
mov
fildl
and
pop
push
inc
adc
stos
mov
inc
push
and
and
or
or
fbld
pop
in
xchg
shl
cmpsl
cmp
mov
shrb
mov
push
mov
xor
push
scas
push
shl
push
jne
and
aaa
cmp
or
xchg
push
sahf
gs
dec
xchg
mov
inc
je
dec
fisttpll
pop
lods
mov
mov
mov
pop
push
mov
aam
pmuludq
mov
xchg
testb
mov
jns
push
dec
aas
fdivrl
mov
stc
pop
add
outsl
dec
or
stos
insl
push
mov
cmpsb
xor
jl
push
insb
lock
jp
add
mov
inc
mov
jg
xor
pop
sbb
add
dec
add
fidivrl
sbb
into
cmp
inc
and
lock
aaa
dec
andl
imul
scas
jne
cmpl
cmp
push
js
adc
xor
aad
fnstenv
cmp
dec
or
outsb
mov
std
and
scas
ret
repnz
shr
mov
ja
mov
out
loope
jmp
stc
les
jp
movsl
or
cmp
cmp
jbe
movsl
stos
lea
dec
jns
sbb
fisttpll
je
push
in
icebp
lds
movsb
jns
aad
cwtl
adc
jg
lods
loopne
mov
xchg
jle
insl
mov
pusha
mov
es
sub
icebp
jo
jp
push
lds
repnz
and
mov
call
or
frstor
ret
mov
lods
aaa
mov
repz
loop
orb
pop
cmp
adcl
les
out
mov
jle
and
push
popa
sub
mov
repz
lods
and
xor
insb
ds
dec
iret
mov
cltd
cmpsb
pop
sbb
into
aas
cmp
mov
jl
sbb
add
xchg
out
test
xor
gs
mov
movsb
sub
inc
xor
icebp
out
test
push
cmp
fstps
imul
mov
dec
adc
in
dec
or
cwtl
ret
aam
std
jbe
fs
mov
inc
cmp
dec
add
push
std
adc
in
mov
inc
imul
mov
cld
pop
push
ja
dec
bsr
aaa
cld
imull
in
mov
pop
or
popf
pop
inc
js
and
imul
pusha
xchg
xchg
push
jo
shll
jl
push
sub
cmp
notl
cmc
testb
dec
adc
incl
cltd
adc
fwait
es
mov
les
dec
fwait
stc
rcrl
insl
sahf
ss
out
jecxz
add
jnp
into
jp
xchg
jge
push
leave
and
or
movsl
mov
push
fimull
dec
jl
data16
cmp
fldl
lds
shrl
push
sbb
js
rolb
faddl
jl
or
inc
xchg
test
lcall
push
mov
sbb
fiadds
cmp
push
inc
fstpl
sbb
xchg
fs
push
ret
aas
xor
push
push
outsl
je
sub
int3
rclb
stc
mov
jmp
push
and
fwait
test
cltd
mov
test
jo
sbb
xchg
pushl
mov
enter
sbb
pop
xchg
out
pop
mov
sbb
mov
cmp
and
fsubl
fdivrl
dec
in
push
dec
testl
lods
inc
mov
cld
pop
cmovg
sbb
pop
adc
outsb
adc
mov
add
cli
call
bound
out
xchg
jo
das
pop
ret
or
push
push
jmp
mov
jl
cmpsb
inc
aaa
jbe
lret
add
add
push
shlb
xchg
js
xchg
testl
and
test
fcmovnbe
jno
dec
pop
dec
adc
xchg
shlb
xor
sarl
adc
sbb
sub
push
lret
xchg
imul
das
sbb
popf
xchg
stc
es
or
adc
jp
sub
ret
mov
mov
sahf
cmp
ja
scas
lock
in
jle
sub
pop
aaa
loop
jge
cmpsb
aas
loopne
xor
push
insl
inc
sub
fdivr
adc
sbb
imul
jo
inc
adc
sti
insb
imull
rolb
stc
xorl
sbb
out
cltd
add
push
dec
cli
xor
cli
adc
ljmp
lea
test
and
aaa
pushf
hlt
aam
push
leave
jae
test
ficoml
movsl
or
test
nop
push
out
mov
xor
add
sub
dec
dec
subb
and
mov
xchg
sahf
div
jnp
push
outsl
dec
xor
dec
cmp
je
inc
add
inc
mov
in
dec
jnp
push
inc
mov
leave
or
in
sub
rol
fisttps
fstpl
bnd
xchg
jno
cmp
je
mov
sbbl
inc
out
lds
out
jmp
scas
out
xchg
popl
cmp
xor
add
insb
cmpsl
jne
jle
pop
fs
aaa
xor
movsl
outsb
aaa
scas
sar
stos
fsubrp
into
push
sarb
imul
push
adc
mov
fstl
andl
movsl
dec
mov
js
test
add
cli
cmpsl
lds
xchg
fwait
nop
adc
xchg
or
shlb
ljmp
mov
cmp
adc
stos
xor
and
jecxz
cmpsl
or
mov
mov
lahf
and
pop
jno
mov
dec
mov
ss
dec
popl
cld
xor
pop
xchg
pop
mov
push
mov
fdivl
fs
push
clc
mov
aad
cwtl
aad
sete
loope
mov
xchg
pop
inc
out
outsl
cwtl
rep
jmp
dec
out
orl
jo
inc
outsb
or
lret
sbb
xor
push
adc
mov
inc
fidivrl
xchg
xor
nop
in
inc
inc
enter
insb
pop
push
lahf
jge
test
rcl
daa
push
jbe
jle
andl
pop
jb
push
in
int3
jae
dec
push
push
xor
push
movsb
jge
mov
and
mov
jg
sub
mov
and
push
imul
pop
mov
insb
push
aad
sbb
in
cmp
xor
lret
jecxz
pop
es
jne
add
push
push
and
jnp
add
mov
or
sbb
jecxz
imul
jge
shl
mov
cli
add
mov
and
mov
push
lcall
mov
cltd
fs
roll
mov
and
xchg
icebp
cmp
inc
negb
pop
shlb
ss
dec
push
xor
push
popf
sub
lahf
fsubrs
sub
mov
fwait
push
fsubr
sarl
mov
fisubs
loopne
add
int
insl
sbb
push
jp
xchg
sti
jb
loopne
mov
rcrb
mov
repz
jle
mov
inc
mov
cwtl
sub
or
or
push
fistps
push
adc
adc
xchg
fdivs
jg
add
xchg
lods
push
mov
notb
inc
xlat
loope
arpl
stos
hlt
inc
bnd
ficoms
xchg
insl
rcrb
insl
sarb
popf
mov
sub
mov
or
cld
cmp
je
cmp
test
adc
mov
cmp
scas
pop
or
aam
stos
jo
lods
push
shl
stos
cmp
test
xchg
das
fcmovnu
pop
pop
jle
cmp
jnp
imul
test
push
mov
and
add
int
mov
stos
pop
inc
bound
jg
cli
in
jns
and
xchg
fstpl
imul
sbb
sbb
push
push
fcompl
adc
xor
jecxz
test
aaa
int3
sbb
ds
iret
repnz
jge
or
mov
xchg
and
mov
xor
cmpsl
sbb
jb
jge
hlt
cmp
pusha
add
push
leave
xchg
sbb
leave
push
call
mov
aaa
pop
movsb
sub
loopne
mov
stos
cli
nop
sbb
adc
mov
sbb
add
ret
loope
sbb
add
negb
xchg
push
call
fsubs
aaa
fldl
repnz
mov
dec
sbbb
push
ja
and
lods
mov
add
sbb
insl
pop
sub
lock
mov
xlat
movsb
xchg
iret
pop
shll
pop
pop
sbb
mov
jo
loope
popf
mov
addb
sbb
push
push
insb
rcrb
push
nop
aaa
mov
or
movsb
adc
sarl
mov
cltd
and
add
mov
pop
push
repz
sahf
push
and
jb
sbb
push
fsubrl
aam
orl
ret
add
mov
mov
cmpsl
test
test
push
mov
cmpsb
ss
xorl
ret
cmc
inc
fmull
cmp
jge
jno
jmp
std
call
fdivrs
call
pushw
lea
in
fcmove
imul
ljmp
mov
movsb
xor
cmp
xlat
test
xchg
cmpsb
sbb
sub
inc
repnz
les
ds
mov
das
mov
aad
add
sub
xlat
or
inc
push
xchg
andb
or
dec
ret
push
std
inc
fxam
test
sub
push
jne
and
les
nop
data16
leave
shlb
negl
fdivrs
jno
sbb
inc
inc
popa
add
lahf
push
mov
aam
fnstcw
xor
jne
fcoml
jo
or
mov
sub
insl
add
repz
mov
push
cmp
dec
xchg
dec
vdivps
jbe
movsb
fbstp
adc
push
xchg
loopne
test
fs
loopne
lock
sbb
inc
push
push
pop
jp
ss
or
mov
and
xchg
stc
xchg
jp
cli
test
sub
cwtl
loopne
test
notl
insb
pushf
fidivrl
push
sub
sbb
lock
and
cmp
jecxz
push
mov
rorl
scas
adc
pop
fwait
lea
das
fmuls
inc
ret
test
jns
pop
inc
jge
sarb
pop
scas
clc
push
xchg
fsubrs
icebp
mov
or
lret
sub
aas
cmp
popa
sti
fdivrl
and
arpl
sbb
sbb
mov
inc
inc
out
hlt
loopne
test
cli
test
mov
popf
xchg
gs
sbb
outsl
xchg
push
mov
cmp
push
sub
subb
rcrl
imul
int
cmpsl
add
enter
inc
dec
cmovb
mov
or
loopne
cmpsb
jge
mov
mov
ret
mov
sub
mov
adc
out
push
in
mov
mov
pop
in
outsl
fxch
push
cwtl
dec
mov
jle
icebp
jge
repnz
mov
mov
pop
aaa
mov
mov
mov
repz
in
xor
gs
jne
and
aas
loope
dec
xor
pop
ljmp
sub
call
daa
jle
aam
insb
sahf
bound
cmp
sub
je
jb
cmpsb
adc
ficomps
lcall
xor
xor
sbb
popf
out
xchg
mov
aam
lahf
xor
fnstenv
pushf
xor
mov
cmp
pop
das
es
aas
lods
jmp
xor
fiadds
jecxz
mov
mov
imul
jge
push
enter
leave
outsb
addb
xor
into
and
test
jp
jno
enter
mov
clc
repz
lahf
xchg
add
cmp
cld
or
pop
inc
es
xchg
inc
xor
mov
inc
fwait
or
cwtl
dec
sti
dec
cli
cmpsl
jb
ret
cmpsl
bound
inc
add
xchg
ret
lds
notb
add
push
fptan
xchg
lret
inc
push
push
js
testl
sti
pop
jmp
fcmovnb
cwtl
or
aas
push
lcall
inc
shlb
adc
rcll
movsb
dec
lret
cmp
inc
dec
ljmp
and
or
aam
cltd
xor
xor
nop
push
inc
jg
jo
xor
mov
dec
jge
adc
lret
ljmp
js
or
jle
lock
pop
aaa
dec
cmpsl
jmp
out
addr16
sahf
cmpsl
cli
cmp
sub
sbb
jo
xor
xor
inc
insb
mov
xchg
in
cltd
aaa
push
clc
xchg
xchg
xor
jp
xchg
pop
cwtl
and
insl
cltd
push
outsl
adc
cmp
iret
inc
fisubl
sbb
pop
rcrb
mov
jno
sub
pop
mov
iret
dec
jmp
inc
push
movsb
jnp
testl
adc
test
rorl
add
lret
mov
cmp
sbb
cmpsl
cmpsb
push
fsubrs
and
cli
iret
pop
push
dec
add
movsl
mov
pop
loopne
pop
dec
xchg
xlat
push
pop
pop
outsb
rcrb
dec
mov
pop
push
dec
sub
lea
or
pop
xchg
adc
lods
sbb
fidivl
dec
call
ret
jns
insb
xlat
leave
pop
or
shl
xchg
inc
adc
pop
popl
mov
dec
fdivs
shrl
xchg
adc
xchg
pop
pop
fildll
addr16
mov
test
call
addr16
int
popf
enter
xchg
sbb
in
mov
adc
jecxz
mov
jns
or
inc
or
xor
js
movsl
rcrb
inc
sbb
jo
mov
cmp
jne
orb
cmp
lcall
push
inc
mov
in
mov
sbb
add
cmpsb
lea
mov
nop
nop
xor
inc
popa
adc
stos
mov
shrl
sbbl
pop
adc
dec
mov
cli
sub
fistps
push
scas
lods
mov
std
sbb
dec
mov
flds
jl
lahf
mov
or
shr
stos
mov
dec
popa
int
jg
jg
add
mov
pop
into
ror
cld
cmp
cmpsb
add
pop
repnz
imul
iret
jge
cs
mov
xor
ffreep
cmp
hlt
sahf
inc
push
xchg
dec
cli
mov
lods
cmp
xchg
mov
or
test
movsl
jmp
jo
insl
icebp
adc
aad
jg
xchg
adc
js
movsb
cmp
mov
sti
push
jae
xor
fisttps
inc
arpl
mov
mov
inc
and
pop
mov
cmpsl
jl
pop
fnstcw
cwtl
mov
int3
stos
pop
dec
cmc
mov
dec
add
cmp
mov
sbb
and
cltd
push
and
ret
dec
popa
cmpsl
cmc
insl
sahf
add
scas
jmp
enter
cltd
cs
cmp
stos
fadds
push
cltd
sahf
cmp
cli
or
add
mov
cld
scas
and
jb
dec
ljmp
popa
stos
or
xchg
in
pop
or
cwtl
xchg
pop
pusha
mov
inc
leave
xchg
mov
mov
mov
lahf
or
mov
xlat
jecxz
add
leave
test
mov
push
inc
mov
lahf
jo
push
jge
outsb
out
xor
mov
inc
iret
sar
and
mov
in
lcall
xchg
inc
pop
pop
xor
les
fisubs
xlat
cmpsb
pusha
out
xor
jo
das
inc
pop
push
jbe
mov
test
mov
das
es
push
shlb
stos
or
adc
jno
sbb
dec
lahf
inc
adc
xchg
push
mov
dec
orb
gs
cmc
or
out
fadds
mov
lcall
stc
rcr
lret
or
push
loope
scas
jae
cltd
push
out
xchg
sarb
mov
mov
pop
mov
fs
push
push
and
je
fsts
jmp
cmp
sti
and
fs
dec
or
loope
fldenv
mov
jno
xchg
cltd
gs
sbb
and
pop
jle
jecxz
mov
mov
mov
test
stos
negb
popa
movaps
xor
inc
popa
push
inc
pop
adc
or
scas
lods
cmc
outsb
xchg
les
jo
pop
popa
jmp
sub
mul
fisttpl
xchg
inc
subb
dec
sbb
gs
stos
mov
inc
and
mov
xor
push
mov
subl
test
aam
adc
pop
out
sbb
shll
mov
and
iret
mov
sub
cmp
push
add
jl
lods
xchg
sbb
jo
aas
mov
das
loope
rcll
xor
jnp
jmp
push
jae
movsl
pop
mov
xor
shr
test
or
mov
jno
test
xchg
nop
mov
xchg
fst
mov
insl
mov
clc
xor
dec
pop
rorl
mov
jle
shr
mov
xchg
sbbl
fstpl
aas
xchg
lret
fcomp
cmp
pop
jno
jl
cmpb
inc
test
jb
lcall
outsb
popf
dec
mov
jno
cmc
out
pop
cmp
mov
mov
test
fistps
push
lods
or
lea
int3
xor
or
lods
push
dec
stc
std
fwait
mov
inc
lcall
pop
mov
or
mov
adc
add
stos
pop
push
inc
or
btr
icebp
in
arpl
push
sub
fnstenv
test
jmp
mov
inc
add
xor
imul
subb
mov
pusha
add
das
push
inc
inc
loop
sub
push
mov
fadd
xchg
jle
int3
cmp
cld
rclb
sbb
dec
pop
push
je
mov
pushf
dec
add
cwtl
ss
les
xchg
pop
dec
gs
nop
adc
mov
lods
cld
sub
and
addl
xor
or
popf
jmp
insl
enter
popf
mov
fsts
fld
loop
mov
fdivs
jmp
push
push
push
mov
int
sub
addr16
push
or
mov
push
mov
jecxz
xor
mov
push
cmpsb
cmp
repnz
pop
not
xchg
jno
and
and
xor
pop
mov
pop
adc
icebp
cwtl
shl
sub
sbb
xor
push
cmpsb
push
sub
loop
movsl
mov
in
imul
mov
scas
mov
insl
mov
addb
mov
fs
add
mov
or
lock
sbb
lret
xchg
lods
loop
rclb
mov
jbe
jecxz
cmpsb
int3
inc
movsl
mov
jl
xchg
xchg
mov
add
mov
mov
add
es
sbb
pusha
out
jb
jbe
popf
add
mov
cmp
fldl
jmp
je
xchg
sub
sbb
add
mov
cmp
icebp
push
mov
sub
sahf
pop
or
sarb
jmp
hlt
call
and
sbb
xchg
clc
pop
add
adc
push
aas
lcall
test
insb
pop
mov
in
repnz
gs
sbb
call
in
sbb
mov
mov
mov
fistl
and
cmp
cltd
pusha
and
push
sbb
jae
arpl
xchg
outsl
ds
mov
test
decb
scas
dec
cmpsb
lds
add
out
imul
mov
and
or
sarl
sbb
sarl
mov
stc
lret
jb
xor
popa
push
or
jae,pt
je
ljmp
adc
xchg
lods
dec
insl
insl
mov
pop
outsb
cmp
mov
je
imul
adc
mov
hlt
mov
xchg
add
jp
jl
mov
push
inc
cmp
mov
sbb
sbb
enter
sbb
movsl
mov
mov
inc
bound
push
xchg
out
repz
sub
push
cli
inc
or
add
pop
cmp
shl
addb
cmp
and
and
fisttpll
rol
mov
into
add
fldl
adc
jne
jo
leave
call
jae
sbb
pop
cmpsl
inc
fnstcw
dec
js
lea
mov
mov
dec
sbb
daa
jnp
add
sbb
pop
negb
imul
push
fidivs
push
xchg
lock
icebp
leave
call
xlat
push
xor
xlat
sarb
push
mov
mov
xchg
stos
stos
jae
je
hlt
leave
xchg
dec
popa
sub
mov
mov
cmpsb
pop
negl
xchg
lahf
les
js
mov
es
pop
mov
mov
lock
lret
or
or
push
push
inc
lods
sub
pop
ret
xchg
mov
fistps
jae
in
insl
sub
inc
push
sbb
pop
sub
jo
out
sbb
icebp
sbb
les
lock
mov
imul
shll
lea
push
cmc
rorb
add
xchg
loop
sar
sub
mov
rorl
push
xor
std
fisttpll
sub
fisubrs
imul
cmp
mov
in
fldpi
sbb
mov
sbb
adc
push
rolb
cli
aaa
iret
imull
cltd
xchg
sahf
rolb
rorl
clc
pop
adcb
add
push
shrl
jb
repz
mov
dec
dec
sub
test
or
push
push
adc
inc
ss
fldl
push
ficomps
into
daa
shrl
out
addl
test
mov
jne
int
mov
pusha
popf
or
mov
mov
inc
aam
lret
and
bound
adc
fcompl
notb
jg
cmp
ficoml
mov
aad
jnp
or
aas
sbb
ret
xchg
mov
pop
mov
jnp
js
mov
pusha
dec
repz
mov
add
dec
mov
imul
push
lret
in
jo
bswap
out
aas
pop
push
cmp
loop
repz
popf
add
inc
sbb
movsb
or
add
mov
leave
decb
sbb
mov
ficoms
mov
imul
fisubs
add
adc
pop
push
out
dec
cmp
test
andl
and
cmp
sub
xchg
mov
or
jmp
jp
cmp
arpl
mov
or
add
mov
ss
add
bound
add
cmpsl
and
jns
lods
jmp
pop
pop
cmp
divb
in
lods
add
insl
jmp
mov
fucomi
sub
pop
movsb
and
int
jge
jne
or
dec
mov
out
or
adc
push
nop
inc
or
xchg
xchg
stos
add
call
mov
stos
repnz
ds
fsubs
es
xchg
pop
jno
movsl
in
dec
ret
cmp
sbb
jns
je
bound
lret
addr16
push
mov
shlb
mov
xchg
mov
mov
gs
mov
jecxz
cmc
cmp
jg
push
dec
mov
adc
vmovaps
lds
out
mov
pop
mov
push
into
jg
out
movsl
int
out
add
sbb
sbb
xlat
cmc
jg
out
icebp
mov
mul
pop
jecxz
fs
jb
mov
jge
xchg
xorb
out
popf
clc
push
out
popa
push
iret
pop
and
fdivrl
fadds
fbld
aad
xchg
jmp
jg,pn
imul
mull
std
cli
mov
out
and
inc
mov
add
mov
push
fistpl
lods
imul
and
jns
data16
inc
pop
xchg
dec
jno
xor
shll
cmp
aad
adc
or
push
subb
inc
add
push
shll
adc
outsl
jae
shrl
adc
dec
and
sahf
icebp
ficompl
adc
insb
repz
cmpsb
add
pushf
lods
loopne
mov
xchg
and
scas
jg
mov
dec
call
imul
jb
dec
pop
addr16
fs
test
xor
xchg
add
mov
jmp
imul
mov
xchg
mov
mov
fcomps
adc
cld
jbe
pop
daa
imul
je
inc
mov
insb
pop
clc
and
sub
inc
dec
jnp
push
repz
vmulss
mov
pop
push
jns
cmp
ret
int
jns
mov
movsb
adc
cld
shll
test
inc
xor
cmp
mov
xchg
dec
pop
push
test
pop
xchg
cmp
adc
xchg
iret
or
adc
outsl
pop
dec
sbb
rcrl
in
pop
and
nop
in
ficoml
ja
int3
sahf
out
ljmp
mov
ficoms
std
popf
xchg
sbb
insb
push
push
cmp
add
push
jg
mov
in
add
insb
addr16
cmp
in
push
ljmp
mov
mov
jecxz
push
out
add
movsb
adc
fsubrs
xchg
mov
lret
sub
xchg
bnd
xlat
insb
imul
fwait
or
mov
cmpb
mov
jmp
outsl
push
inc
das
cmpb
cli
add
push
stos
xchg
ds
add
push
mov
pop
jecxz
jl
xchg
not
or
sub
jns
dec
stc
pushf
movsl
push
sub
sarl
sub
rorb
push
xchg
dec
repz
mov
cmp
je
or
sti
sarl
cmp
xor
cmp
lds
fsub
mov
push
test
fmulp
subl
and
jns
mov
sub
jge
lret
jp
xlat
aad
xchg
pop
mov
add
fs
mov
js
insl
lahf
and
jns
leave
lock
out
fidivrs
test
dec
cmp
pushf
fldlg2
push
adc
jnp
push
push
inc
in
iret
pop
mov
gs
fldcw
sbb
rolb
pushl
call
in
inc
push
jbe
and
pop
pop
push
xor
incl
clc
dec
lds
mov
push
paddsb
xor
mov
cli
cltd
xchg
lods
pop
cmp
adc
les
mov
xchg
push
shll
pusha
call
out
jnp
mov
mov
loopne
test
lahf
add
ror
sbb
std
pop
cmpsl
cwtl
rcll
mov
lock
cmp
cmc
scas
add
jo
out
imul
xchg
and
adc
adc
ds
sarl
and
dec
xor
aas
cs
test
jbe
push
and
mov
inc
fcmovne
test
test
adc
push
iret
or
cltd
or
mov
hlt
adc
fistpll
je
mov
bound
mov
jae
pop
pop
mov
jb
std
and
lods
dec
pop
icebp
in
pushf
add
cwtl
fidivrs
int
xchg
adc
pop
inc
pop
dec
xchg
and
sub
aas
rcl
dec
jmp
cmp
and
test
or
or
add
sbb
int
icebp
xor
fdiv
push
jae
sbb
pop
mov
lea
cmp
jl
sub
push
xor
mov
stos
mov
adc
lcall
out
mov
nop
jae
cmp
lahf
sub
fildll
adc
xchg
fsubs
inc
adc
fistpl
cmp
pusha
adc
loopne
les
jne
dec
insb
pop
add
cmpsl
insl
xchg
lcall
mov
mov
cwtl
or
mov
pusha
out
and
jne
add
push
add
pop
nop
cmp
push
push
das
mov
jmp
push
adc
shl
aaa
scas
scas
and
xchg
movsl
xor
add
int
sub
mov
nop
xor
stc
push
decb
test
lock
cmc
arpl
add
imul
jnp
bound
test
dec
aaa
push
out
mov
pop
mov
mov
cmp
adc
enter
aam
adc
sub
pop
fiadds
jecxz
lods
pop
in
pop
cmp
or
add
mov
dec
shrb
mov
pop
push
push
xchg
jns
add
cli
pusha
nop
adc
mov
xor
sbbl
iret
imull
sub
leave
je
pop
adc
std
push
xchg
nop
insl
mov
call
push
addr16
xchg
rcrb
sbb
cmpb
pop
dec
jecxz
les
outsl
inc
pop
cmpsl
enter
in
jl
fistpll
and
or
add
iret
push
adc
hlt
out
call
sahf
fcmovne
int3
mov
mov
mov
icebp
out
inc
scas
mov
add
cwtl
sub
std
movl
sbb
jle
fistl
int
mov
loope
in
sbbb
push
nop
sub
out
or
mov
xchg
repz
dec
mov
sbb
lods
add
test
dec
push
mov
sti
xchg
sub
sub
jne
push
xchg
and
pop
aas
xor
inc
jbe
scas
lods
jb
fs
pop
push
or
ret
out
popl
js
or
xor
fwait
cmpsb
jnp
lds
mov
out
pop
fdivrs
std
sti
sbb
nop
in
jmp
mov
push
sub
orb
call
insl
cmp
aad
iret
int
xchg
push
rorb
cmp
into
nop
imul
out
cmp
or
push
push
pand
mov
inc
mov
mov
or
mov
push
inc
push
cmp
jns
ljmp
cmp
mov
xor
fwait
int3
mov
xchg
mov
xor
adc
into
xchg
jbe
xor
int
test
filds
cltd
int
add
test
xor
sbb
xor
icebp
pop
xchg
sub
sbb
mov
and
jp
mov
xchg
xchg
scas
ret
lea
xlat
popf
push
lahf
lds
sub
inc
dec
popf
dec
mov
xchg
int
xchg
out
jecxz
adc
dec
fs
rcl
arpl
loop
shlb
mov
sub
sub
dec
out
es
cwtl
out
negb
sbb
outsl
xor
dec
push
lcall
cmpsb
rclb
ljmp
enter
insl
fcompl
xchg
into
scas
aas
pop
mov
push
push
mov
jns
std
or
test
inc
clc
xchg
pop
push
popa
pop
lods
fistps
dec
and
hlt
mov
jbe
pop
cwtl
xor
cmpsl
lds
lahf
push
insb
push
lret
push
pop
sbb
mov
mov
push
std
sbb
mov
push
sub
or
dec
loop
mov
xor
into
int3
inc
mov
loope
aam
outsb
or
jp
clc
dec
mov
jnp
stos
inc
pop
fistps
xor
lds
js
xchg
repnz
mov
iret
inc
xchg
add
insb
nop
dec
adc
jl
cmp
xorl
mov
pop
jg
mov
fwait
adcb
jmp
sub
orb
cwtl
outsb
imul
lcall
std
or
mov
stos
jo
addr16
lcall
jp
sub
sar
ss
and
or
repnz
jp
mulb
jl
shlb
int3
out
xchg
pop
mov
cmp
lock
mov
mov
mov
xor
orl
cmp
jo
jmp
pushl
test
je
pop
xor
loopne
sbb
lret
and
xchg
dec
mov
mov
les
iret
dec
cmp
stos
adc
jae
and
or
popa
subl
gs
jge
out
fistps
pop
insb
cmc
repnz
xor
push
mov
adc
xchg
lds
jnp
mov
int3
test
jecxz
popf
pop
imul
cmp
lret
cs
int
in
sbbb
pop
or
cld
push
push
mov
fisubrs
inc
jg
and
out
push
icebp
call
pop
popa
addr16
gs
cmpsb
insb
inc
filds
xor
rcrl
roll
int
sub
scas
lds
and
addr16
and
aaa
lods
push
aad
test
shll
pop
nop
cmp
jb
pop
pop
adc
in
cmpsl
test
idiv
gs
mov
loope
jbe
bound
lret
xor
aas
leave
loop
jle
pop
pop
xchg
jne
lods
pop
add
icebp
int3
loopw
mov
nop
call
mov
ret
rorl
push
repz
mov
jg
aad
push
lret
ds
pop
cmpsl
loopne
sbb
scas
fidivs
fs
cmp
xor
gs
mov
add
mov
testl
popf
mov
loope
push
sub
es
xchg
in
sar
test
dec
sub
mov
or
sbb
sbb
cmpsb
pop
fndisi(8087
ljmp
outsl
es
out
test
subl
ljmp
push
lods
sbb
mov
out
and
shll
mov
mov
dec
lcall
inc
loope
lret
add
lahf
pop
jl
jmp
icebp
ljmp
out
cltd
pop
shlb
aas
mov
mov
pusha
jmp
xor
xchg
mov
mov
jmp
or
imul
xor
mov
rcrl
aas
and
mov
and
inc
loope
sub
cld
movsl
jnp
loope
stos
ljmp
rsqrtps
in
addr16
inc
xor
mov
setno
add
jecxz
adc
mov
mov
fwait
cmp
jb
mov
jb
mov
imul
cld
jecxz
xchg
lcall
xlat
dec
ret
jg
arpl
sti
sbb
pop
lcall
fiadds
aam
fisubrl
imul
jb
xchg
jae
fwait
inc
ret
fisubl
ror
xor
inc
cmc
adc
paddsw
mov
mov
sbb
push
fcmovnb
imulb
outsl
mov
adc
fldt
imul
xor
pop
mov
cmpb
jl
mov
test
adc
xchg
or
push
ret
xchg
push
in
sbb
mov
xor
js
pop
arpl
push
in
ljmp
mov
jns
pop
mov
push
dec
inc
sarb
pop
faddl
push
cmp
xor
nop
daa
and
adc
pop
imul
xorb
mov
movsl
inc
or
sbb
jns
stc
xchg
add
cmp
test
lds
dec
test
sbb
sbb
sahf
mov
stos
sub
fdivs
mull
jmp
lea
and
pop
mulb
addl
sub
rolb
int
pop
lock
push
repz
inc
lret
cmc
out
out
pop
jmp
sub
aaa
cmp
pop
xchg
adc
pop
pop
enter
test
outsb
inc
push
jns
adc
sub
iret
incb
mov
int
xchg
adc
out
loopne
rorb
inc
mov
and
cli
cmp
pusha
push
je
xorb
fistpll
int3
sub
popa
mov
cmp
mov
jno
sub
dec
mov
sub
mov
and
cmc
aas
sbb
adcb
js
mov
scas
cmp
out
subb
decb
js
popa
test
sub
iret
inc
mov
pop
pop
push
cmpsl
xchg
or
icebp
test
pop
mov
mov
in
cmpsl
mov
sti
in
fwait
addr16
out
add
push
and
test
sbb
mov
outsb
and
sbb
cmp
int
cltd
das
mov
loop
sub
or
add
push
cmp
mov
xchg
inc
ret
das
and
or
insb
add
xchg
add
jae
push
movsl
jmp
and
jne
mov
inc
ss
imul
add
cs
xchg
xchg
push
enter
movsb
jb
mov
outsl
jo
fucomi
enter
je
mov
xchg
dec
insb
loopne
pop
xchg
aaa
ficompl
imul
pusha
or
enter
sub
cmpsb
jmp
scas
jmp
ds
int3
lds
sbb
clc
jmp
mov
push
or
test
inc
cli
andb
pop
cs
mov
ror
mov
out
jg
popa
inc
mull
dec
cmpsl
mov
add
sub
fists
pusha
imul
in
jb
dec
add
mov
inc
outsb
pop
add
rolb
pop
xor
mov
jmp
rorl
test
test
imul
and
jne
outsb
in
or
push
adc
cmc
fsubp
cwtl
mov
pop
pop
sub
pop
cmp
push
mov
mov
sbb
mov
addr16
mov
xchg
test
push
nop
outsb
fcoml
add
cwtl
mov
sub
jne
fisttps
push
popa
pop
dec
xor
enter
cmp
adc
mov
sub
icebp
sbb
ret
jnp
push
int3
test
push
cmp
jns
adcl
add
mov
cmpsb
ds
mov
or
lods
loop
sti
mov
xchg
add
xor
lret
in
jg
jo
push
pusha
dec
cltd
addr16
mov
fs
outsb
jns
loop
sub
adc
leave
xorl
shl
xor
mov
lahf
push
inc
dec
pop
sbb
movsb
xor
ret
popf
inc
mov
xor
test
mov
push
lea
jae
xlat
das
cld
mov
inc
addr16
pop
jb
pop
scas
jno
adc
adc
insl
scas
cmpl
push
cmp
jbe
push
cmp
inc
mov
push
enter
mov
sub
test
inc
push
jmp
shrb
gs
loop
out
mov
push
je
sbb
xor
sahf
popa
fs
xor
std
xchg
xchg
xor
push
xor
rorl
dec
test
jb
push
mov
jl
jns
sbb
leave
pop
pop
mov
inc
xor
inc
or
sbb
inc
in
and
int
enter
aam
push
mov
stos
ret
cmp
cmpsb
mov
fstpt
push
enter
test
in
cltd
inc
push
pop
push
int
enter
mov
jmp
push
xor
and
add
lret
lahf
in
fisubs
jl
mov
adc
sti
int3
jae
jo
mov
gs
bsf
push
sbb
movsb
xchg
xor
cli
pop
mov
inc
test
xchg
ret
jae
nop
sbb
clc
push
out
lahf
in
lock
cltd
inc
and
jmp
xchg
es
inc
jmp
or
sahf
mov
subl
pop
mov
xor
mov
xor
call
cltd
idivb
xchg
jle
xor
mov
xchg
jb
test
out
xor
mov
bound
lcall
roll
cmp
add
cmp
mov
outsl
fsubl
sbb
rorb
jge
outsl
inc
xchg
fldcw
mov
dec
dec
pusha
ss
jge
movsl
inc
inc
ficoms
repz
inc
mov
dec
sub
push
pop
into
insl
rolb
adc
cmpl
aaa
push
adc
inc
int
in
ror
sub
push
int
icebp
cs
stos
xchg
add
mov
add
sahf
insb
cmpl
int
mov
inc
xor
lods
rcrl
cld
into
fwait
aad
add
pop
mov
mov
push
inc
mov
aaa
shrl
pop
pop
cmp
insl
ljmp
mov
sbb
mov
push
dec
hlt
fwait
stos
dec
jmp
xchg
dec
fdivs
test
loope
pop
sti
aaa
pop
or
imul
lods
xchg
add
test
adcl
xor
out
or
or
or
mov
in
pop
adc
push
fstl
sub
xor
enter
mov
cs
cmp
xor
je,pt
mov
ret
push
lds
out
push
mov
sub
adc
repz
adc
jbe
add
shll
fstps
cwtl
fmul
dec
out
testb
fcomps
clc
xor
add
daa
sub
scas
ljmp
movsl
mov
loopne
aam
jmp
cmpb
mov
into
icebp
sbb
insb
divb
jecxz
xchg
outsl
fwait
lret
leave
imul
or
sbb
loope
icebp
clc
std
jno
xchg
sub
push
movsl
push
mov
lds
and
mov
sahf
testb
cmp
pop
dec
mov
cmp
jle
testl
sbb
mov
mov
in
or
lods
outsl
dec
lret
lahf
dec
mov
sub
lock
xor
push
jecxz
scas
out
or
or
mov
inc
mov
dec
mov
mov
inc
into
sbb
out
inc
daa
test
dec
xor
cs
sbb
add
sub
stos
ror
popa
shrl
inc
sbb
mov
dec
sub
inc
loop
scas
mov
arpl
cmp
int
outsl
mov
cmp
pushf
fisttpl
int
cmc
add
cs
repz
clc
ret
mov
jb
test
and
pop
mov
jno
xchg
mov
lret
mov
sub
fnstsw
xchg
leave
add
test
mov
push
loope
add
icebp
shll
jne
into
mov
mov
ljmp
int
push
cmpsb
fldt
sahf
dec
stos
push
mull
movsl
push
pop
aas
fwait
inc
lods
jnp
add
push
mulb
add
movsl
fistpll
addr16
add
ret
test
xor
hlt
cwtl
xor
and
out
push
std
test
test
frstor
cli
cmp
add
movsb
mov
add
inc
mov
add
pop
dec
nop
pusha
xchg
imul
cmp
inc
xor
dec
daa
xchg
fldcw
pop
lods
das
cmp
or
call
addr16
inc
test
insl
sub
jne
popa
lret
mov
sub
push
or
lds
jg
shll
test
mov
dec
mov
in
lahf
rclb
mov
jp
scas
mov
xchg
cmp
jae
lahf
les
repz
nop
xchg
xor
pop
scas
xchg
nop
xor
out
pop
add
xlat
out
jnp
push
cmp
xchg
push
pop
js
repnz
flds
xchg
pushf
adc
lret
mov
push
xor
jmp
adc
push
xor
js
inc
shlb
es
outsb
xchg
js
es
mov
aaa
loopne
cwtl
das
cmp
cmp
pusha
test
sub
fidivrs
cmpsl
scas
repnz
add
fadds
pusha
movsb
or
inc
rorb
test
js
daa
scas
mov
sbb
mov
pushf
sbb
mov
inc
shl
pop
and
xchg
mov
mov
popf
pushf
jo
mov
push
outsb
test
outsb
inc
xor
imul
mov
loopne
mov
jp
mov
jmp
int3
sub
stos
inc
adc
jecxz
aaa
push
cmpsl
in
hlt
push
add
sbb
sbb
shlb
mov
and
ss
cmp
ds
sahf
pushf
cmp
ds
mov
mov
xchg
xchg
outsb
mov
pop
or
repnz
mov
xchg
add
divb
pop
dec
imul
fisttps
jns
push
test
or
dec
mov
in
out
in
sbb
pop
or
fcompl
ficompl
iret
adc
movsb
into
cmp
jae
inc
leave
scas
jne
adc
dec
push
les
lds
xor
add
push
cld
sbb
out
in
imul
xor
dec
cld
inc
data16
lods
divb
movq
inc
adc
sbb
testb
mov
out
mov
dec
push
mov
mov
jns
cmp
cmp
xchg
lods
inc
gs
or
and
jg
mov
insl
bound
dec
jns
add
jno
pop
pop
jb
or
mov
test
and
stos
pop
inc
and
mov
or
clc
mov
lret
jp
shlb
daa
sahf
gs
pushf
adc
adc
add
cmp
dec
aam
mov
aas
sbb
or
sub
lahf
hlt
push
xchg
xchg
icebp
pop
mov
push
data16
pop
out
mov
inc
test
sahf
pop
fadd
mov
daa
cmpsb
pushf
inc
cmp
xor
jp
push
jmp
add
arpl
push
aas
mov
pusha
out
out
mov
gs
nop
loop
add
aas
push
pop
add
adc
dec
jne
or
fistps
jnp
xchg
lcall
sub
fisubrs
cltd
xchg
mov
loopne
jo
push
dec
and
mov
imul
je
sar
in
imul
sar
push
jo
cwtl
mov
mov
ret
icebp
push
jo
sub
out
popa
dec
ret
lock
testl
jl
cld
aam
test
cmc
fsts
or
pushf
mov
cmp
sub
aaa
insb
gs
lret
cmc
push
mov
imul
lcall
add
out
fucomi
sbb
mov
ffree
jo
movsl
jmp
sahf
outsb
xor
mov
sbb
dec
mov
call
fiadds
sub
mov
mov
shlb
pop
jmp
pop
icebp
hlt
orl
add
sub
inc
fdivrl
leave
pop
leave
rolb
add
int
lods
xchg
sahf
cmp
inc
and
ja
xchg
bound
sbbb
jo
jb
mov
inc
dec
xchg
sar
pop
movsl
sub
std
outsl
mov
xchg
ret
loopne
ja
stos
adc
inc
and
and
lods
push
pop
jecxz
mov
or
pop
mov
daa
pop
add
sbb
dec
in
testl
mov
sub
popa
lret
mov
sbb
cmp
cmp
cmp
mov
mov
mov
cmp
out
sti
jecxz
push
adc
lahf
dec
bound
xor
sbb
clc
push
addr16
jns
lods
lcall
cmp
or
cld
or
into
sub
xlat
loope
push
jno
lock
adc
sub
inc
dec
adc
and
out
daa
into
sub
adc
jae
js
jl
mov
push
pusha
mov
test
jle
sub
pop
bound
push
push
mov
inc
scas
push
hlt
ror
fldl
xchg
adc
and
mov
mov
mov
fcoml
fwait
adc
xchg
sub
xchg
js
dec
leave
jnp
loope
sub
sub
and
mov
add
dec
outsl
xchg
ja
aad
aas
jno
sbb
xchg
jg
and
lcall
mov
xlat
mov
cmp
out
or
in
jl
fnsave
xorl
sbb
out
dec
jb
jecxz
xor
push
imul
insl
ljmp
push
aaa
lea
push
fsqrt
jg
add
cmp
sub
iret
lods
jg
js
mov
inc
scas
scas
xorb
incb
inc
js
movsl
cmp
push
cmp
lds
out
pop
mov
rorl
mov
jae
push
xor
sbb
push
lock
out
mov
or
xorl
and
orb
cmp
scas
test
std
jo
lds
dec
mov
jmp
cmp
xchg
xor
add
ja
xchg
in
ss
test
pop
xchg
fstpt
je
xchg
inc
push
popf
xor
jo
leave
xor
jecxz
lock
filds
daa
adc
cs
mov
out
push
inc
popl
mov
popf
sbb
loop
cli
mov
mov
outsl
loopne
dec
mov
int3
rolb
jmp
add
mov
xchg
dec
inc
imul
test
out
sahf
popf
push
xchg
test
inc
and
xchg
pop
rcl
fwait
shlb
lcall
pop
das
mov
pop
and
xchg
pop
dec
ss
inc
mov
sbb
imull
xorb
mov
aas
xchg
loopne
loop
jecxz
xor
push
ret
pop
cli
push
jno
mov
add
sub
scas
leave
jle
das
sarb
mov
push
cmc
notb
test
push
fstps
dec
jb
cmpsl
xchg
lahf
mov
dec
call
cmp
pusha
inc
cmp
or
popa
adc
ret
insl
repz
xchg
movaps
and
dec
jnp
add
inc
divl
sub
push
xchg
xchg
mov
cltd
xor
lds
dec
xorl
in
rorb
xchg
ds
xor
inc
pop
mov
pop
aam
mov
jne
jne
dec
mov
mov
dec
xchg
loope
jnp
aaa
cltd
inc
je
add
inc
je
adc
in
sub
sbb
jnp
xchg
dec
outsl
adc
adc
cs
lcall
and
xor
jp
test
orl
das
popf
insl
pushw
xchg
sahf
mov
call
xorb
sub
pop
imul
xor
mov
pop
jno
adc
push
aas
jecxz
cmp
adc
imul
pop
insb
orb
jne
mov
into
lock
push
cmp
xor
out
dec
fdivrl
xchg
or
xchg
lahf
xor
pop
mov
pop
add
jnp
sbb
cmp
clc
push
imul
ret
dec
dec
mov
sub
mov
insl
out
sbb
pop
mov
push
or
ds
push
cmp
and
sub
iret
sbb
xchg
pushf
pop
jecxz
loopne
fisubs
js
mov
jne
enter
sbb
fildl
dec
js
jg
cmc
in
xchg
mov
add
fldt
in
mov
bound
ja
xchg
mov
insb
pop
mov
jl
pop
outsb
fists
xor
fs
repnz
sbb
inc
enter
mov
dec
imul
and
mov
ret
mov
in
xor
lods
pop
sarb
dec
lret
jnp
dec
pop
jge
push
insb
clc
and
ja
dec
pushf
rcr
xadd
sbb
out
or
dec
mov
in
cmpsb
pop
dec
and
inc
pop
adc
xor
ds
shrb
jge,pn
out
mov
xor
cld
adc
jnp
push
jns
dec
xlat
push
cmpl
aad
pop
pop
movsb
xchg
add
fwait
pop
push
cmp
imul
pop
jnp
subb
int
mov
or
sub
or
insb
cmpsb
or
ret
dec
push
sbb
test
mov
repnz
inc
popa
shll
cwtl
ja
pop
push
pop
sbb
dec
jb
movsl
dec
test
xor
push
push
out
sbbb
sbb
in
jmp
dec
pop
rcrl
add
mov
in
int
scas
shl
jecxz
lock
scas
aad
les
testb
dec
push
dec
push
shll
out
ds
outsb
pop
jmp
or
xor
jp
mov
cmpsl
and
addb
das
pop
testb
stos
cmp
inc
and
das
scas
sahf
scas
aad
jp
mov
mov
dec
cmc
aam
push
gs
in
rcrb
lods
lcall
outsb
pop
push
insl
out
mov
mov
mov
fwait
mov
das
orb
and
hlt
mov
sbb
movsb
mov
cmp
fstpl
sub
jge
and
pop
subb
filds
std
pop
mov
outsl
sub
push
dec
in
and
subl
movq
pop
mov
dec
and
jno
push
dec
fiaddl
push
and
jb
shll
pop
shlb
pop
or
or
addb
dec
outsl
sbb
ret
sub
addr16
addr16
dec
fmull
inc
add
shld
loopne
das
and
dec
mov
lret
mov
adc
fyl2x
dec
xchg
mov
sbb
xor
sub
mov
sar
dec
pop
jecxz
inc
sbb
sub
outsl
in
test
and
lret
dec
push
ljmp
addl
gs
mov
arpl
push
jns
aaa
cmc
cwtl
loope
mov
icebp
lcall
pop
mov
mov
push
cltd
test
imul
cmc
sub
das
in
add
mov
nop
or
add
pop
out
scas
mov
sbb
dec
cmp
cmp
adc
and
xorl
mov
dec
movsl
pusha
stos
xor
out
stc
lcall
cmp
cli
rcrb
mov
push
out
inc
pop
push
cld
mov
mov
xchg
inc
fisttpll
push
adcl
jae
mov
out
ljmp
dec
int3
mov
and
in
push
cld
and
jno
jg
es
shlb
lock
push
lock
orl
in
push
cwtl
inc
lock
mov
sub
cmp
fst
mov
mov
or
pop
dec
rolb
test
insl
test
jne
push
jle
fcmovb
inc
sub
push
add
std
ljmp
cli
jo
fsub
or
ja
lret
lret
das
mov
sub
dec
js
lret
repz
jg
sub
sbb
sbb
mov
jl
sar
test
mov
sbb
in
insb
sbb
movsl
stos
inc
mov
imul
jnp
addr16
out
mov
mov
push
out
push
mov
dec
xchg
rorb
nop
and
xchg
dec
adc
incl
sar
mov
sbb
popf
add
mov
ret
iret
pop
push
mov
and
cmpsb
add
sbb
decb
lret
mov
flds
adc
pop
into
data16
leave
andl
jl
stc
js
fmull
iret
mov
inc
and
or
or
cmp
mov
out
dec
test
push
fdivp
das
push
inc
mov
in
sbb
push
mov
inc
lahf
mov
xchg
pop
push
lods
adc
outsb
lcall
mov
unpckhps
push
stc
xchg
popf
sub
push
adc
bound
xchg
xor
sbb
sub
push
nopl
inc
clc
sar
push
out
adcl
mov
mov
mov
xor
inc
cmp
or
jp
sbb
out
fmull
push
pop
cmpsb
xchg
mov
test
stc
jo
leave
or
jae
ret
shrl
dec
pop
pushf
loopne
jp
cmp
std
cmp
mov
push
push
mov
mov
mov
or
or
roll
in
jge
insb
in
dec
jnp
and
add
xlat
mov
push
arpl
cli
jg
outsl
inc
or
movsb
push
fisttpl
test
mov
bound
dec
hlt
add
ret
mov
test
jle
imul
lods
mov
sub
sub
bound
mov
pushw
lcall
adc
stos
pop
jo
adcb
lea
adc
pop
mov
fsts
je
std
imul
sub
shll
mov
in
cmpsl
mov
jl
cmc
pop
push
pop
filds
jbe
jp
lds
push
pop
loope
cwtl
sub
div
push
mov
jo
sbb
or
rcll
push
push
xor
mov
addb
jmp
mov
mov
sub
or
cmp
and
mov
cmpsb
out
pop
and
aad
mov
subl
pop
mov
xchg
cmp
lcall
or
fistpl
ds
das
shrl
test
in
aad
xchg
fdivrp
inc
outsb
pop
add
add
inc
xor
sub
shr
ficomps
les
cmpsl
adc
push
aam
dec
fiadds
push
push
adc
mov
xchg
and
call
lods
arpl
xchg
mov
adc
sub
mov
pop
and
into
lds
xor
adc
mov
sbb
test
xor
inc
out
mov
pop
imul
cwtl
fisubl
or
adc
xor
and
inc
jae
jo
jns
ret
add
iret
xchg
mov
dec
jg
and
add
jnp
cltd
daa
mov
and
cmc
xor
dec
aam
jae
push
jns
xlat
sbb
in
pop
outsb
arpl
div
or
and
in
push
sahf
sbb
push
jb
in
je
in
fnstsw
xor
into
mov
push
insb
call
shld
shll
sbb
lcall
pop
stos
stc
jge
cmpsl
inc
adc
mov
int3
pop
push
xchg
loop
jmp
loop
xchg
int3
stos
mov
fwait
in
dec
adc
xchg
push
pop
das
push
cmpsb
pusha
mov
pop
sub
sahf
push
in
mov
mov
mov
dec
jo
out
sub
dec
xlat
jo
pop
inc
inc
jl
xor
sub
push
js
ja
dec
sbb
fldl
loop
out
lods
push
xor
xchg
and
adc
inc
shll
enter
xor
push
xor
mov
pop
cld
arpl
lret
pop
mov
fiaddl
iret
mov
shrb
dec
jb
data16
pop
jnp
xchg
jns
jno
sbb
fscale
xchg
xlat
dec
in
out
cs
inc
lock
hlt
int3
jb
addr16
ret
int
popf
ja
ljmp
push
std
inc
fbld
aam
shrl
sub
mov
mov
dec
js
mov
inc
lock
mov
andb
cmp
mov
roll
fptan
cmpsb
mov
sbb
mov
popa
mov
mov
cld
fisubrl
xchg
mov
xor
jp
pop
inc
mov
or
fidivrs
mov
rcll
mov
adc
adc
scas
xchg
jmp
cmpsl
mov
pop
lock
imull
jo
jl
push
push
cli
mov
and
rcll
pop
cs
rclb
test
ret
dec
movsb
adc
xchg
sub
stos
jg
hlt
cli
inc
cli
adc
cltd
xchg
pop
pop
jp
mov
cld
aas
jecxz
ljmp
sbb
sbb
mov
gs
mov
ret
or
movsb
sub
xchg
rcrb
mov
loopne
fnstsw
push
dec
pop
cmp
insl
bound
sub
xchg
pop
fdivr
into
cli
insb
jbe
sub
popf
add
imul
aaa
jb
xchg
cmp
lods
or
out
push
xor
sti
and
arpl
pop
sub
inc
xchg
nop
test
jle
clc
bound
lods
aas
ficompl
stc
sub
or
cli
push
loop
cmpsb
dec
sub
shrl
dec
xchg
lods
and
xor
addl
imul
pop
jne
dec
jo
ss
in
and
mov
mov
push
inc
mov
fldcw
mov
inc
pop
push
movsb
scas
cwtl
shll
mov
pusha
xchg
movsl
xchg
lock
push
jb
fcmove
fucom
xchg
sbb
xor
lret
lret
insb
rol
pop
fnstcw
loopne
cmp
adc
xorl
clc
sbb
push
jae
sbb
in
pop
pushf
sarl
cmpsb
ret
cltd
imul
sbb
stc
jp
xchg
mov
dec
xor
pop
pop
popf
int
clc
fmuls
dec
sub
jmp
push
arpl
jo
adcl
fdivs
lret
cmp
pause
cmpsl
ljmp
rol
nop
pop
add
xor
rorl
aaa
rolb
and
popf
adc
imul
test
test
sahf
gs
push
fwait
mov
and
andb
push
inc
out
fwait
addr16
daa
les
cmp
pop
cmp
les
fadds
subb
and
inc
or
loop
add
jne
lock
lret
jg
push
inc
xchg
jp
cmpsb
inc
mov
push
mov
call
adcb
dec
imul
leave
sub
aad
mov
aam
movsb
inc
negl
push
sbb
sbb
jl
into
aas
xor
mov
mov
sbb
imul
xchg
test
pop
xorb
aam
push
je
cmpsl
notb
sbb
subl
mov
rcrl
mov
insl
movsl
nop
sbb
jae
ret
stos
sub
xchg
xchg
popa
cmp
inc
dec
push
mov
in
imul
icebp
js
fmuls
dec
jge
aaa
push
mov
adc
pop
cmp
sbb
adc
cmpsb
ds
fisubs
xor
and
push
je
int
pop
or
mov
rolb
xor
adc
stos
sub
mov
jb
mov
xchg
insb
or
inc
jne
das
cli
dec
fucomip
fadds
mov
add
inc
sbb
ja
mov
adc
sub
sub
out
rcl
inc
add
or
mov
sub
xlat
mov
cmpl
int3
and
jmp
inc
xchg
adc
mov
mov
xlat
mov
mov
inc
shl
sahf
mov
mov
movsb
in
mov
and
lcall
mov
and
repz
push
bound
int
add
jno
cmp
dec
cmp
hlt
xor
icebp
push
stos
lods
sbb
inc
stos
jle
out
les
inc
push
aas
or
sub
jl
repz
cmp
push
dec
addr16
pop
sbb
inc
fucomi
adc
pop
sbb
aaa
imul
push
pop
cmc
sti
xchg
sub
addb
xor
dec
or
fwait
test
xchg
test
dec
xchg
int3
in
adc
add
das
cmp
pop
jp
or
lock
xor
push
or
mov
mov
aas
imul
push
insl
ret
dec
lods
sbb
sti
dec
pop
xchg
add
xor
or
xor
ret
outsl
mov
or
sti
test
imul
shll
push
je
push
xchg
movsb
pop
dec
js
sub
cs
add
push
jae
or
add
pop
ljmp
ljmp
mov
jnp
jae
and
add
push
data16
bound
aam
push
sub
shll
out
out
mov
push
cmpsb
test
insb
inc
pop
push
loope
mov
int3
mov
or
jno
pop
mov
adc
lods
popa
fldenv
add
mov
cltd
jnp
sub
mov
pop
jecxz
inc
shll
imul
mov
sbb
and
roll
movb
test
fldl
lret
jmp
push
mov
ds
das
icebp
enter
sub
push
loop
add
dec
pop
mov
sbb
loop
dec
sarl
and
or
ljmp
stos
xchg
push
jmp
addr16
out
loop
imul
out
inc
fidivrs
adc
and
mov
lock
push
leave
lret
push
mov
jbe
xor
imul
gs
dec
movsb
inc
sub
cs
imul
jnp
test
add
push
pop
push
cmpsb
fistpl
into
mov
sbb
lcall
xor
pop
xor
bound
sti
mov
lds
nop
shl
jmp
push
pop
inc
cmpsl
pop
dec
imul
mov
stos
dec
insb
ljmp
std
fstps
adc
adc
int3
push
xchg
hlt
and
ret
inc
cmc
iret
push
inc
push
dec
sbb
mov
pop
mov
into
jecxz
jno
jnp
pushl
add
inc
fsubr
mov
xor
pop
mov
mov
gs
les
push
push
lea
pop
cmc
mov
pop
fsubrl
in
iret
inc
outsl
ret
enter
push
xchg
mov
xchg
xor
xor
rcrb
adc
gs
data16
jle
imul
mov
or
mov
pushf
test
add
cmp
sbb
and
ds
enter
popf
push
xchg
xchg
mov
insb
mov
cmc
jl
pop
aam
aam
out
adc
loopne
fisttps
and
cmp
ret
add
add
add
mov
jns
pop
repz
cmp
cld
xchg
dec
push
push
dec
js
jp
and
push
add
in
loope
mov
sahf
pop
test
inc
sbb
push
mov
sub
in
pushf
enter
cmp
jge
in
jmp
test
arpl
and
inc
jecxz
jb
mov
dec
movsl
push
xor
adc
or
aad
sub
jmp
cmp
mov
adc
hlt
insl
mov
lock
pop
jbe
xchg
mov
mov
xor
cmp
mov
shlb
test
in
or
inc
sbb
add
jne
dec
adc
or
cltd
popf
mov
push
xor
push
out
add
lea
xor
push
jl
push
pop
imul
push
sbb
lahf
pushf
adc
loop
mov
insb
sub
into
add
jle
aas
rcl
out
dec
and
stos
push
imull
int3
pop
in
mov
daa
mov
inc
arpl
cmp
mov
shr
mov
lods
out
inc
les
inc
hlt
in
sub
fbld
jae
pushf
mov
push
ds
mov
testl
call
insb
sbb
adc
js
pop
mov
ds
fwait
stos
xchg
scas
rclb
ja
int
test
pop
jb
dec
aas
into
das
iret
out
lret
sub
lahf
outsb
ljmp
mov
in
cmp
inc
pop
in
and
xchg
jecxz
mov
data16
jmp
inc
out
push
or
inc
popf
add
xchg
pushf
hlt
cmp
xchg
imul
out
ljmp
shl
cmpsl
scas
push
jo
ss
dec
out
sub
popa
cs
loope,pn
call
hlt
ss
jno
inc
add
scas
xor
add
scas
cmp
lret
push
shll
dec
sbbl
inc
jmp
inc
jg
xor
push
mov
ljmp
cs
dec
push
xchg
aas
cltd
or
push
in
cmpsl
dec
jne
rolb
je
xchg
addr16
sbbl
sbb
das
and
scas
fistpl
jnp
mov
push
push
inc
subb
push
mov
mov
push
clc
fsts
cmp
sarl
mov
int
sbb
lods
mov
push
mov
xor
cmp
jo
ret
stos
cmpsb
test
and
mov
adc
xlat
mov
iret
data16
inc
jne
clc
adc
loope
ret
movsb
mov
push
mov
imul
inc
loope
sti
popa
pop
hlt
mov
mov
cmpsb
jl
mov
and
mov
mov
mov
int3
and
xchg
lea
add
adc
dec
cmova
mov
cwtl
cmp
pushf
sub
pushf
movl
push
andl
cmc
or
xchg
stc
insb
aas
icebp
sub
in
adc
test
addl
fs
push
adc
push
mov
movsb
jne
sub
add
sbb
jne
push
adc
cld
insl
jns
inc
ljmp
inc
lea
and
imul
sub
inc
cmp
loope,pn
mov
sub
inc
rcrb
push
jbe
movsl
dec
jbe
push
sub
adc
mov
or
mov
push
pop
outsl
imul
repnz
out
add
sub
mov
xor
pop
xlat
push
cld
push
pop
lret
daa
imul
mov
aaa
mov
jge
test
jp
adc
in
movsb
loopne
in
pop
rcll
xor
xor
ss
add
mov
stos
into
xchg
xchg
pusha
pop
lcall
add
xlat
jecxz
cwtl
dec
es
popf
add
in
shld
hlt
inc
mov
xchg
shlb
push
je
es
out
mov
add
cli
pop
push
subb
add
mov
bound
sbb
xchg
lock
pop
bound
fisubrl
pop
pop
or
xlat
dec
fistl
das
movsb
cmp
mov
sub
add
add
or
int
iret
cmc
test
xor
cld
out
sub
or
mov
adc
mov
dec
xchg
int
test
push
pop
pusha
int
mov
cmp
sbb
sub
sti
jno
das
out
call
add
icebp
xchg
in
faddp
stc
jge
mov
sub
sub
repnz
adc
mov
adc
mov
and
sarb
rcr
or
fstps
fiadds
iret
push
scas
test
lock
das
adc
into
movsb
frstor
cld
imul
sbb
in
or
push
pop
mov
inc
jo
sub
cmc
mov
inc
inc
add
xchg
loope
dec
jmp
not
add
addb
cltd
dec
sbb
sbb
daa
repz
test
call
clc
neg
mov
dec
in
pop
add
insb
sysenter
pusha
ss
and
inc
sbb
cmovle
divb
mov
push
cmp
xor
lret
mov
dec
jnp
fwait
or
mov
test
mov
mov
inc
or
pop
inc
mov
sub
hlt
fidivl
int3
or
pop
push
push
mov
dec
mov
mov
jge
in
add
fsubrl
cmpl
js
pop
jbe
cmp
fldln2
arpl
lods
faddl
jbe
call
push
xor
dec
jl
ret
xchg
xor
mov
cs
lret
ret
xchg
xor
jge
out
or
bound
sub
mull
xor
lahf
jae
mov
cmp
mov
dec
cli
sbb
sar
loop
mov
mov
push
addb
pusha
fmull
cs
add
jno
jae
fisttpll
push
int
call
dec
aas
into
push
into
xor
cmpsl
jp
cmp
std
roll
fidivrs
lea
add
stos
push
movsb
lret
push
jle
icebp
roll
scas
clc
dec
iret
mov
in
repnz
mov
mov
mov
push
sub
inc
mov
icebp
leave
std
lret
nop
dec
or
and
push
icebp
je
ret
xor
sbb
dec
cmc
cmp
cmpsl
push
in
ss
or
dec
lds
les
fldl
test
lea
scas
std
push
or
loopne
addr16
test
xchg
rcrl
sub
pushf
push
es
roll
js
out
mov
ret
stos
repnz
rcll
jns
popa
or
fcoml
stos
and
cmpl
test
mov
iret
or
pop
aas
enter
movsl
cmp
adc
pop
xchg
addb
adc
cmp
inc
cmpsl
push
jae
popa
jb
addr16
rcrb
add
pop
aaa
jge
pop
aas
push
mov
sub
inc
lahf
mov
sbb
cmc
inc
jbe
dec
out
mov
inc
sbb
mov
mov
orl
xchg
adc
leave
jo
push
mov
xchg
mov
dec
inc
fldl
push
jge
cmp
lea
out
mov
and
cld
ret
fucomip
adc
insl
repnz
adc
xor
cmp
or
lret
das
push
test
insb
or
sub
cs
jns
xchg
adc
std
mov
push
loopne
jl
jmp
int3
or
rclb
out
mov
xor
mov
xchg
push
clc
dec
dec
imul
daa
push
popf
add
mov
cmp
outsl
mov
pop
pusha
sub
push
xchg
and
into
lahf
jne
push
jno
adcb
negl
aad
push
inc
div
push
and
cmp
imul
mov
push
xchg
xchg
dec
repnz
sbb
addr16
pop
fs
push
inc
inc
jno
sbb
push
hlt
shl
lods
mov
test
sub
inc
sub
mov
or
push
mov
bound
int
shrl
cmp
sbb
shl
mov
xchg
adc
mov
loope
imul
lret
loop
sahf
mov
inc
and
mov
push
jno
subb
jns
mov
cmp
push
in
loopne
mov
mov
and
out
push
test
repz
push
cmpsb
call
dec
mov
and
fcoms
xchg
mov
ss
xor
int
lds
scas
cld
jp
sub
test
lock
push
lret
shl
adc
push
loopne
jle
js
pusha
jns
movsl
mov
xor
xor
xor
jmp
repz
sub
fstpl
dec
xor
mov
fisubrs
cs
mov
lret
lods
fs
fstl
adc
mov
dec
xor
push
fs
mov
or
pop
xor
mov
cmp
inc
mulb
loopne
rclb
cltd
xchg
jo
dec
dec
push
adc
mov
enter
clc
daa
sub
nop
sbb
insb
mov
cmpsl
mov
aad
sbb
xor
das
cld
jb
hlt
sbb
mov
push
aas
cli
dec
mov
add
out
adc
clc
jecxz
insl
cmp
inc
sbb
or
pop
hlt
inc
rcl
jp
xor
inc
xchg
sbb
pop
ret
movsl
pop
divb
mov
fs
shrb
xchg
xchg
fidivrl
mov
jae
out
inc
push
xor
mov
sbb
xchg
fnstcw
les
lret
stos
in
push
mov
mov
test
hlt
bt
popa
les
mov
ret
xchg
aam
pop
mov
rcll
xchg
ret
add
sub
js
loope
push
jo
sub
into
pop
lods
lret
adc
or
inc
dec
mov
daa
inc
out
push
jbe
pop
jp
fwait
into
pusha
outsl
cmp
pop
xor
mov
sub
cmp
mov
and
cwtl
test
out
jmp
sbb
jl
jle
rcrl
jg
inc
cbtw
fs
pop
cmpsl
out
add
int
fs
cmc
jge
xor
jle
decl
lods
sti
xchg
jl
push
mov
test
xchg
xor
adc
jmp
pop
cmp
jbe
das
or
sarl
hlt
mov
jne
cmp
dec
pop
lds
popf
xlat
pop
sbbb
add
cmp
in
fldenv
sub
divb
data16
mov
mov
inc
shlb
push
cli
sub
push
or
fidivl
push
sub
sub
addr16
mov
imull
adc
add
sbbl
test
lods
xchg
pop
fs
mov
pop
idiv
rorl
or
or
add
mov
push
int
lcall
xor
jnp
jecxz
xchg
add
inc
jns
mov
or
aam
inc
add
xlat
fisttpl
push
aaa
sbb
mov
gs
sbb
enter
push
les
adc
out
mov
sub
idivl
cmpsb
add
xor
dec
out
mov
mov
lods
arpl
lret
lods
int
sbb
xor
sub
lods
mov
fldcw
test
rcr
arpl
test
push
push
ret
scas
dec
ds
cmp
or
insl
clc
gs
jbe
es
xchg
xor
add
in
cmpsb
sub
in
jge
or
xchg
sbb
ret
js
xor
lods
out
pop
dec
icebp
sarb
pop
jl
loopne
mov
dec
or
pop
add
dec
push
icebp
stos
inc
jmp
test
push
addr16
lret
pop
aaa
or
add
and
fistps
daa
lahf
dec
cmc
popa
xchg
push
cmpsl
pop
mov
pop
xor
sbb
ret
jp
insb
jbe
loope
gs
jne
cmp
xor
push
xorb
fldenv
icebp
dec
fsubr
push
test
pop
push
idivb
cmp
xchg
dec
sbb
jmp
sbb
rcrb
mov
aas
cmp
jl
mov
sbb
mov
pop
inc
mov
cld
jne
push
pop
and
sbb
iret
adc
mov
and
cmp
jmp
sub
jne
sub
je
mov
in
dec
mov
fiaddl
out
popa
push
mov
mov
push
push
clc
sub
dec
pop
and
stos
lods
dec
and
ss
lods
repz
lea
push
xchg
lret
dec
cmc
inc
jnp
fucom
popa
adcb
dec
js
cmc
cmp
fwait
in
nop
pop
ds
mov
and
add
ja
in
repz
add
in
and
sbb
inc
ret
and
mov
push
xor
jae
lret
jno
cmpsb
outsb
loopne
mov
adc
mov
lds
daa
repz
xchg
ret
fwait
hlt
mov
lahf
push
nop
andl
rclb
notl
daa
pop
sbb
or
xor
mov
push
sahf
and
or
je
mov
rcrb
out
cmp
or
adc
mov
pop
pop
lret
sub
add
jecxz
pop
adc
sbb
imul
leave
adc
pop
lea
or
pop
dec
mov
and
iret
jae
add
adc
roll
scas
xchg
shr
mov
push
mov
ljmp
int3
fdivs
push
stos
and
setns
push
sbb
lret
lahf
icebp
getsec
sub
stc
jb
inc
pxor
movsb
rorb
in
daa
pop
rorl
cld
std
pop
and
push
in
pop
mov
call
cli
adcb
add
sbb
add
mov
inc
das
adc
xchg
flds
scas
xchg
cmp
add
push
aam
sbb
movsl
xor
gs
or
in
mov
or
sahf
add
loopne
rclb
push
cmp
inc
and
adc
test
push
lods
insb
inc
clc
int
cmpsb
xchg
or
xor
pop
inc
shl
sub
mov
cmc
int3
jae
xchg
xchg
sub
movsb
jne
xor
rcll
mov
inc
pop
sbb
jbe
add
test
cmc
insl
rorl
test
and
in
daa
out
jbe
mov
repz
cmp
std
dec
inc
idivb
shll
xlat
rcll
xchg
dec
dec
negb
adc
jne
sub
or
sti
or
sub
out
add
adc
push
mov
ljmp
dec
paddsw
mov
mov
xor
sahf
push
push
je
ror
pop
sti
inc
ljmp
movsb
lock
insb
cltd
aad
or
sub
stos
cwtl
loop
xchg
sbb
ljmp
jae
mov
insb
inc
push
repz
cmp
mov
xchg
insb
mov
pop
mov
mov
bound
xchg
fcoml
lea
imul
test
jecxz
leave
xchg
cwtl
mov
pop
shll
mov
lret
mov
cmp
cmp
push
filds
outsl
es
cmpsb
dec
sbb
cmp
insl
adc
rcl
stos
mov
sub
sti
xchg
add
loop
and
lock
pop
leave
mov
scas
sbb
pushf
mov
stc
insb
inc
ret
jbe
out
push
mov
xor
pushf
push
jle
popf
idivb
and
mov
ret
cwtl
push
aad
or
repnz
pop
adc
push
call
or
insl
sti
or
loope
dec
xchg
cmp
jge
dec
ror
pop
scas
ja
and
xor
mov
xchg
mov
mov
lcall
xchg
repnz
jb
cmpsb
fisubs
gs
dec
dec
sbb
or
aaa
jmp
pop
pushf
outsb
sub
es
push
xchg
push
pop
negl
sub
repnz
cli
stos
push
sahf
inc
sahf
push
xlat
ror
stos
xchg
cmp
dec
pop
shrb
mov
mulb
int
mov
jns
pop
mov
pusha
popa
dec
ja
xchg
out
div
jno
and
rcl
cmp
insl
ret
pop
insb
pop
xchg
or
in
dec
lret
cmpsb
adc
in
leave
xchg
xorl
dec
pop
mov
dec
mov
aas
mov
scas
shlb
and
rclb
pop
movsb
loopne
iret
jne
pop
and
insl
mov
loopne
hlt
insl
mov
iret
mov
push
push
mov
in
fsubs
push
add
push
adc
daa
in
inc
hlt
in
adc
fldenv
push
hlt
sub
or
mov
rcr
addr16
adc
ds
adc
inc
lahf
xor
int3
fidivs
pop
cmp
or
xor
movsb
sub
fcmovnbe
and
ljmp
push
pop
adc
push
or
push
test
mov
add
xor
ret
repnz
rcll
int
mov
cmp
ja
xor
push
cmp
inc
aad
int
xchg
shufps
lcall
sub
sub
cltd
rcll
lds
bound
in
pop
bound
out
lock
cmc
push
push
cltd
mov
mov
pushw
sub
push
out
dec
rcrb
push
dec
mov
mov
pop
push
into
jne
pop
out
enter
fildll
xor
dec
and
mov
lret
adc
mov
lds
cmp
insl
ret
ficomps
lock
add
jnp
jo
xor
mov
dec
clc
loope
fcomp
pusha
inc
fldcw
movsb
les
fldl
push
daa
push
xor
mov
or
dec
aam
fldcw
adc
mov
add
add
cmp
pop
cmp
fstps
cmp
xchg
sub
sub
adc
out
mov
out
or
xchg
lret
fldenv
mov
cltd
addr16
rcr
inc
xor
mov
xchg
push
inc
test
cmc
les
enter
jp
and
daa
jl
ret
mov
dec
xor
pop
cwtl
jge
mov
xchg
adc
inc
sbb
inc
jg
out
pop
out
mov
add
mov
and
mov
push
pushf
xchg
push
pop
mov
jnp
lret
or
pxor
jns
adc
imul
pop
and
sahf
in
jge
lret
f2xm1
adc
push
lds
fstpt
cs
xchg
js
inc
nop
test
push
sub
adc
jp
or
repnz
int
jecxz
lods
loope
int3
cmp
add
inc
sbb
add
xor
inc
pop
xor
movsl
popf
movsl
xchg
mov
and
sbb
mov
xchg
stos
inc
std
pop
jno
add
and
imul
cli
jns
sahf
push
xchg
aaa
push
add
and
jg
ja
cmp
jne
pop
push
fstp
fadds
arpl
in
hlt
adc
ja
mov
rclb
cli
add
cltd
mov
and
pop
test
pop
scas
cmc
fiadds
shll
vcvtps2pd
and
pop
inc
arpl
add
and
cmp
xchg
rclb
jmp
lahf
add
push
mov
xchg
fdivl
daa
cmpsb
lret
mov
mov
pushf
test
and
push
stc
dec
shl
cmp
or
jnp
inc
test
xchg
xor
in
dec
mov
xchg
cmpl
fldt
loope
mov
ret
push
outsl
mov
pop
cmp
in
xchg
sub
jae
out
testb
push
ret
mov
lods
jbe
xor
cltd
sbb
add
pop
sbb
mov
in
jo
sbb
arpl
push
mov
jno
outsl
mov
jbe
lock
mov
xchg
xor
or
addr16
xchg
pop
mov
dec
mov
and
fbstp
or
outsl
mov
mov
outsb
enter
scas
dec
lea
mov
int
scas
mov
sbb
mov
fwait
int3
jecxz
pop
dec
out
pop
lcall
jb
sbb
lahf
sbb
das
xchg
and
or
and
add
mov
pusha
or
cld
xor
sbb
or
mov
sbb
cmc
adc
iret
ds
ljmp
adc
sti
pop
je
inc
jl
icebp
cmp
negl
repz
and
sub
lahf
movsb
inc
sbb
push
in
dec
push
inc
mov
lods
adcl
lret
sbb
in
test
dec
sub
add
adc
mov
jo
mul
xchg
cmp
cltd
in
adc
pop
rorl
xchg
dec
in
cmp
adc
insb
adc
inc
mov
lods
xor
adc
hlt
loop
mov
fwait
mov
int3
insb
and
cmp
inc
pop
or
push
iret
pop
cs
pop
mov
dec
push
clc
das
movsl
sub
dec
js
add
aaa
ss
sub
fstps
push
arpl
jecxz
mov
popa
xchg
rcll
xchg
and
flds
adc
xchg
lret
jg
mov
mov
dec
xchg
inc
in
and
into
imul
pop
cmp
push
sub
or
mov
insl
nop
in
mov
xchg
pop
or
aam
dec
leave
das
popa
scas
add
stc
inc
ret
rclb
lret
pop
outsb
and
mov
and
test
mov
mov
outsb
mov
mov
cld
out
leave
xor
xor
and
jle
mov
mov
addr16
sahf
push
dec
imul
jne
sbb
inc
or
incb
jge
rorb
adc
xor
push
push
jp
dec
out
aad
adc
xor
lds
lret
cmpsl
mov
xlat
faddl
xchg
pop
pusha
mov
test
mov
ja
add
pop
mov
jno
cmp
ret
imul
mov
cmp
inc
out
sub
pop
out
adc
ljmp
mov
leave
jge
cmp
daa
xchg
ja
mov
outsb
push
cltd
lods
outsl
pop
rolb
jg
scas
mov
xchg
shr
mov
sahf
and
mov
inc
adc
pop
inc
pop
push
ss
lahf
inc
push
xor
inc
jo
inc
mov
jno
sub
pop
push
into
mov
ja
out
inc
je
jecxz
and
imul
and
xchg
outsb
cld
outsl
mov
arpl
jns
add
out
xchg
rcr
mov
adc
pop
std
mov
xchg
sub
inc
int
xchg
push
or
data16
inc
mov
xlat
lret
mov
inc
std
jne
xor
rorl
fnsave
pop
xchg
cmp
push
jns
in
aad
inc
inc
pop
dec
jnp
nop
repnz
out
pop
ljmp
xchg
popa
addr16
out
jb
insl
or
outsb
ret
push
jno
pop
mov
test
adc
fwait
inc
aam
leave
dec
bound
pusha
pop
mov
adc
inc
lea
out
add
test
int
or
rolb
adcl
dec
add
push
sbb
movsl
push
jnp
dec
loopne
lods
push
test
cmpsb
mov
ffree
jno
mov
sub
jno
push
insb
pop
cmp
inc
dec
pop
dec
imul
cmp
push
and
xlat
xchg
stos
psubb
xor
sub
mov
test
pop
xor
cmp
xchg
in
test
pop
push
cmp
mov
popf
xchg
jg
mov
hlt
dec
lcall
hlt
repz
jg
js
popf
and
mov
adc
enter
pop
mov
fcomps
cltd
mov
cmp
into
dec
xor
mov
cmpsl
cmp
popa
dec
insb
sbb
or
ss
mov
inc
in
rcll
mov
mov
sti
cli
cmpb
insb
jbe
cwtl
sbb
mov
pusha
adc
xor
xor
mov
pop
pop
mov
inc
cmp
lret
rclb
dec
cli
mov
lea
xchg
mov
sub
aam
xor
pop
in
pop
movsl
jns
aad
mov
sbb
clc
mov
inc
aad
add
mov
test
xor
sbb
dec
jl
sbb
pop
jns,pn
jnp
fwait
jecxz
add
fbstp
cltd
jmp
shlb
fists
xchg
shlb
imul
pop
dec
hlt
bound
mov
mov
inc
jp
ljmp
mov
dec
xchg
loopne
adc
dec
xchg
jg
mov
pop
sub
bound
test
mov
sbb
sbb
fsubrl
cmp
shlb
sti
rclb
fstl
shrl
and
lods
inc
and
add
icebp
push
mov
sbb
jne
mov
mov
outsl
sub
inc
mov
mov
ret
adc
rcll
jmp
insl
xchg
es
pop
or
addr16
xor
cmpsb
sub
push
adc
cmp
stos
mov
stc
lahf
ss
loope
sbb
push
jl
xchg
push
mov
pop
cmpsl
inc
and
adc
mov
or
sbb
iret
sbb
fildll
sub
stos
sbb
lahf
bound
popf
cs
jle
fisubrl
loope
xor
lret
sub
and
leave
xchg
outsl
scas
push
jg
pop
jg
push
fisubs
mov
mov
sub
inc
rolb
cmp
lahf
nop
and
fwait
adc
mov
outsb
lods
cmp
sub
or
pushf
push
fmull
in
inc
inc
pop
out
sub
mov
push
cmp
dec
repnz
sub
in
imul
pop
leave
insb
aas
push
mov
dec
inc
aaa
mov
stos
lret
clc
push
call
jb
mov
and
mov
sbb
mov
mov
lret
sub
xchg
fsub
mov
and
sub
ss
ds
jp
and
push
test
lret
push
imul
and
adc
jno
jns
push
push
lods
out
add
pop
lods
sub
rcrb
fadds
jecxz
sbb
and
subl
lock
int3
loopne
xchg
jne
lahf
out
pop
or
aaa
adc
mov
rclb
dec
cli
pushf
jle
mov
inc
jne
and
inc
push
in
push
pop
cmc
adc
push
out
push
sub
fs
pop
jbe
xor
out
mov
cli
mov
ljmp
es
push
data16
cwtl
shl
add
pop
mov
sbb
scas
adc
pop
dec
xchg
cmpsl
push
sub
push
imul
test
repnz
loope
sbb
scas
lock
je
adc
clc
in
sub
jle
imul
add
leave
cld
push
test
pop
popa
mov
fmull
push
push
cmp
and
das
fwait
add
cmovae
sub
cmp
ds
mov
movsl
notl
sub
aaa
mov
dec
cmp
lea
out
mov
push
dec
sub
xor
dec
sbb
xor
push
pop
mov
ja
lds
movsb
adc
push
addr16
ret
sbb
pop
stos
and
and
push
icebp
mov
je
ljmp
mov
adc
xor
xor
pop
insb
aaa
mov
sub
xlat
sbb
jb
scas
in
push
scas
mov
test
mov
test
cmp
mov
in
mov
and
jbe
sbb
mov
inc
in
mov
mov
xchg
sbbb
mov
inc
imul
adc
jbe
cli
insb
and
add
inc
and
pop
orb
push
js
int3
negl
push
stos
pusha
jle
pop
into
mov
sub
ljmp
jmp
xchg
lcall
test
or
and
pop
fnstsw
test
cmc
pop
mov
mov
dec
popf
loop
daa
fsubl
push
scas
test
lods
test
outsw
cmp
mov
sahf
ljmp
rclb
and
inc
fadd
es
mov
add
mov
subl
mov
fstps
filds
inc
push
imul
fcomp
cmpsl
sub
xchg
int
mov
imul
imul
jp
pop
xchg
aaa
or
cmp
dec
sbb
testb
mov
or
test
pushf
imul
mov
xchg
imul
js
mov
or
scas
arpl
adcl
cmc
lods
test
out
sbb
push
mov
loopne
mov
movsl
cmp
and
movsl
lds
in
inc
repnz
popa
dec
cmp
cmpsb
sbb
jg
out
fildl
xchg
xchg
mov
outsl
sahf
iret
addr16
push
and
imul
add
push
jp
add
or
dec
movsl
popa
test
in
cltd
fisttpl
pop
es
or
add
data16
add
cmc
stos
std
add
rorl
or
cmc
adc
jl
pop
pushl
mov
mov
aas
imul
pop
nop
loop
aam
pop
push
stos
sub
mov
fcomip
sar
sbb
jae
sbb
dec
into
add
cmpsb
and
and
dec
xchg
inc
mov
mov
or
push
dec
js
rcrb
jle
mov
fidivs
mov
lods
xchg
push
loopne
pop
inc
test
push
pop
insl
aad
in
or
cmp
xchg
push
xor
sarb
jnp
cmc
and
cmp
jno
clc
and
push
and
xchg
cli
js
or
xor
imul
dec
aad
not
jo
je
jb
xor
push
and
aaa
sarb
or
hlt
loop
mov
insl
ficomps
mov
jo
jmp
jmp
pop
stc
enter
stos
popa
push
jne
xchg
mov
pop
frstor
cmp
pop
shl
fwait
jle
fdivrp
jae
ljmp
xor
shrl
cmp
mov
or
jmp
dec
mov
xchg
jns
std
mov
es
enter
inc
nop
mov
shr
mov
sub
pop
imul
xchg
inc
push
sbb
ficompl
inc
dec
mov
ret
into
lret
popa
jge
and
sbb
lock
shl
fs
icebp
push
scas
push
or
and
pop
add
in
sbb
jno
cmp
loop
inc
jecxz
lock
jo
nop
jns
std
dec
or
dec
fcmovu
loope
or
mov
inc
lods
in
out
lret
sahf
mov
enter
mov
and
mov
xchg
stos
jl
inc
inc
cmpsb
incb
sbb
jl
dec
test
adc
and
sub
lcall
js
mov
imul
and
js
fisubrl
mov
aaa
int
js
roll
inc
sti
sub
dec
sbb
fs
movsl
mov
test
mov
or
fistpl
cltd
xchg
jo
movsl
dec
push
add
wbinvd
fisttpl
pminsw
mov
test
bnd
shl
scas
inc
inc
arpl
xchg
inc
adc
push
ficoms
pop
push
inc
mov
ljmp
xchg
in
dec
mov
jnp
cmpsl
add
fwait
or
insb
dec
in
jp
imul
fsubrs
mov
or
jo
test
divl
add
shll
pop
int3
push
xor
mov
adc
js
int
fimull
lods
cmp
cmpb
jg
dec
adc
push
popf
outsb
popa
mov
call
cltd
jno
jge
xchg
inc
pop
xchg
out
push
pushf
push
pusha
out
jb
ds
in
insb
adc
mov
rolb
das
aas
mov
subb
iret
lock
cmp
jno
sub
insb
ret
into
jbe
xlat
inc
popa
mov
inc
cld
jl
loop
xchg
aas
inc
inc
mov
mov
and
rcll
xchg
rorb
add
ss
pop
pop
lock
pop
jmp
cltd
inc
idivl
ljmp
test
xchg
or
lea
pusha
mov
jns
and
sub
sub
mov
inc
dec
jns
pop
clc
inc
xchg
cmp
pop
out
lods
pop
popf
pop
pop
mov
dec
or
sbb
and
pop
lds
aas
sbb
inc
or
leave
fidivs
nop
adc
std
or
lods
mov
shlb
ficoml
cmp
out
inc
mov
loop
pop
cmc
jmp
insl
fdivrs
or
lock
fidivrl
sub
dec
negl
nop
imul
cmp
jne
jae
lods
fstl
mov
inc
jp
or
xor
push
in
test
sub
or
and
cmpsb
lea
sbb
data16
pop
fistpll
lds
loopne
addl
push
pop
lahf
loopne
mov
xor
imul
add
jnp
ljmp
inc
fwait
push
mov
push
or
movsb
into
pushf
inc
sbb
mov
inc
scas
sub
mov
pop
mov
inc
movsl
add
negb
and
push
rolb
cld
lret
or
clc
je
dec
xchg
add
icebp
and
cmp
jo
ret
lods
pop
imul
sbb
jns
cli
xor
lret
je
jb
lcall
xlat
jbe
push
icebp
jno
mov
int3
gs
push
cmc
xor
cmp
std
dec
xorl
lods
outsl
ret
int3
in
pop
fcomi
addl
cmp
jae
in
xor
jb
stos
or
and
push
pusha
push
cltd
iret
and
xor
mov
mov
lods
enter
or
jge
sub
sub
add
fs
xchg
int
fists
mov
pop
aam
in
mov
shlb
loop
mov
mov
mov
cmp
and
btc
test
xchg
imul
xchg
jbe
push
xor
push
rcll
fcoml
sahf
or
cld
xchg
and
divb
push
inc
xor
insb
jnp
in
in
push
fcmovb
loop
mov
in
pop
sarb
mov
rcrb
lcall
cld
inc
imul
lods
dec
jbe
dec
enter
mov
rcll
jg
or
xchg
mov
popa
jae
fwait
jo
lahf
lock
jno
jb
jp
mov
or
mov
in
xor
loope
or
dec
inc
cmp
cld
jbe
insl
push
and
imul
int
and
sbb
loop
mov
xlat
mov
cmpsb
lods
push
push
xchg
gs
out
xchg
pop
stos
cmp
dec
pop
or
xchg
scas
jmp
outsb
sbb
stos
cmp
inc
dec
inc
mov
shr
mov
mov
clc
pop
and
shlb
repnz
pop
sbb
enter
jo
lret
or
sbb
or
sub
pop
mov
dec
aaa
push
and
pushf
imul
or
jl
cmp
imul
adc
cs
mov
push
bound
jns
inc
subb
inc
punpcklwd
int3
jo
aad
xor
mov
imul
lahf
or
and
imul
add
fbld
insb
xor
sub
add
imul
movq
fcoms
or
je
cmp
lods
cmp
adc
jle
add
jo
sbb
dec
xchg
adc
and
fcomps
and
push
pop
and
mov
out
lcall
test
and
insl
icebp
inc
xchg
aam
adc
jne
cli
adc
call
xchg
mov
sbb
cs
dec
fs
jb
push
mov
adc
add
dec
xchg
pop
mov
cmp
cmp
bound
mov
xor
sbb
movsl
insl
cwtl
popa
dec
leave
push
movsl
dec
popa
popf
xor
or
cli
lret
dec
ja
je
push
lahf
jno
cmp
xchg
mov
into
jmp
mov
or
insl
ret
fs
outsb
add
or
sbb
hlt
mov
push
movsb
cld
mov
loopne
lret
imul
ja
jo
dec
outsl
rorl
stos
mov
lods
jge
jl
insb
sub
movl
xchg
imul
cmpsl
xchg
or
mov
mov
xchg
cmc
nop
xor
mov
xchg
hlt
mov
aaa
shrl
adc
fcompl
xchg
mov
jg
push
dec
jmp
ds
jl
orl
ljmp
or
outsb
push
fmuls
jae
in
bound
lret
and
mov
push
pop
enter
imul
mov
popa
arpl
mov
pop
out
sbb
inc
loop
outsl
pop
sub
mov
ret
or
popa
jne
sub
lds
ljmp
push
arpl
jne
ds
out
fisubrl
std
cmp
and
in
roll
lds
dec
daa
repnz
idivl
push
outsl
loopne
inc
imul
rolb
pop
push
pop
sbb
stos
negl
mov
inc
ja
in
ss
dec
dec
xchg
shrl
sti
test
pop
push
sub
pushf
cmp
rcr
sub
inc
adc
ja
adc
xor
push
cmpsb
inc
or
mov
jae
mov
xchg
mov
xorb
ret
or
stc
test
mov
scas
cmc
and
mov
ss
addb
mov
mov
mov
push
repz
adc
in
clc
addb
lahf
xchg
jmp
fnsave
arpl
aas
push
cmpsb
xchg
inc
call
xchg
add
dec
popf
and
xorb
jnp
add
push
nop
cmp
xor
repnz
cmp
ds
mov
inc
scas
mov
xor
mov
mov
outsb
dec
xor
fs
jno
jecxz
into
cmp
push
pop
xor
test
mov
jmp
jmp
in
jle
cmp
imul
jns
and
js
add
jo
fneni(8087
addr16
jo
bound
pop
inc
sbb
pusha
in
test
pop
sub
mov
push
rorl
jl
std
rol
scas
int
sbb
adc
jae
imul
jno
push
push
and
xchg
fucomip
push
add
or
orb
orb
jg
enter
rep
movntps
dec
sub
fistps
fucomp
icebp
scas
rclb
pop
jg
mov
ret
scas
sub
cld
and
sub
icebp
jae
mov
adc
xchg
add
inc
fimull
insl
pop
aad
push
jae
mov
mov
test
cmp
or
adc
sbb
mov
xor
sub
paddd
outsl
lahf
cmp
sbb
icebp
push
outsl
jecxz
mov
push
lods
repz
leave
jle
jp
daa
test
inc
mov
pop
div
xlat
jl
fpatan
mov
imul
mov
xchg
pop
xchg
push
or
iret
sub
mov
shll
or
icebp
gs
and
inc
dec
or
fnsetpm(287
mov
rcl
stc
xchg
cmp
adc
negb
jae
ja
repnz
and
mov
cld
inc
sub
call
mov
clc
cmpl
sbb
rcrb
cmpsl
mov
shr
sbb
mov
xchg
imul
push
addb
es
sbb
mov
adc
cmpl
lahf
stc
jns
int
mov
int
shl
or
pop
xor
and
rorb
negb
rcll
add
mov
out
dec
jp
push
mov
push
jae
std
test
bound
test
es
lods
and
shrb
imul
mov
sahf
sbb
pop
idivb
leave
mov
jne
jg
dec
pop
out
jmp
or
sti
add
pop
inc
cmp
mov
repnz
or
jmp
iret
jnp
lock
cmp
xor
ret
and
call
fimuls
stc
jb
aam
cld
push
cmpsb
fidivs
lods
and
dec
gs
ds
and
and
mull
mov
mov
cmp
sub
inc
sbbl
arpl
faddl
xchg
adc
icebp
ja
push
and
dec
xchg
jns
cwtl
xor
negb
xchg
les
jl
xchg
mov
dec
mov
loope
aad
loopne
dec
xchg
mov
cmp
std
stos
pop
mov
pop
in
cmp
out
stc
incl
out
adc
and
test
imul
jne
sbb
testl
and
mov
and
dec
xchg
les
lret
cld
loopne
in
mov
fdiv
mov
daa
sub
lret
lods
outsb
jecxz
sbb
or
pop
adc
mov
fstps
dec
scas
out
xor
fadd
sti
mov
popa
jbe
test
push
inc
clc
pop
int3
xor
sub
sbb
xor
and
inc
aam
pop
in
push
xchg
stc
adc
aad
andl
sbb
loop
popa
cmp
clc
mov
stos
sbb
mov
inc
lea
pop
fstl
mov
push
test
adc
lret
pop
mov
pop
sbb
icebp
mov
insl
std
dec
mov
movsb
jmp
data16
fiadds
sbb
xchg
xchg
icebp
push
inc
mov
cmp
jno
add
push
mov
or
daa
mov
mov
adc
pop
es
and
lds
sti
or
out
pop
test
cmp
xchg
add
jg
xchg
rol
dec
pushf
movsb
subb
mov
dec
arpl
jg
out
xchg
hlt
loope
int
add
into
gs
push
push
and
push
inc
push
pusha
dec
nop
mov
xlat
test
push
sub
or
or
jmp
jnp
jnp,pt
sub
and
and
fisttpl
icebp
jmp
gs
aas
or
idiv
mov
inc
push
add
movsl
sar
inc
cmc
repnz
or
and
pminub
cmp
loop
call
test
jg
add
outsl
jmp
jmp
sti
lret
stos
loop
xlat
jge
insl
repz
cmc
gs
xchg
cwtl
and
test
arpl
enter
add
xlat
xchg
push
fs
sbb
mov
xchg
xor
out
and
jb
loope
out
dec
sbb
nopl
jecxz
jmp
and
mov
dec
out
jns
js
pop
mov
testb
jl
fdivl
xchg
xor
jmp
fnsave
mov
fists
pop
pop
out
push
shrl
lea
cwtl
lret
pop
repnz
sbb
hlt
imul
add
and
cmpsb
mov
icebp
cmp
add
mov
mov
and
scas
mov
adc
sbb
cmp
add
or
repz
pop
sahf
inc
xchg
pop
mov
xor
adc
mov
loope
and
push
shrl
test
jmp
cmp
and
push
xor
loopne
sbb
add
insl
xor
adc
push
push
push
cmp
pop
sbb
ds
dec
jmp
inc
ds
push
mov
or
test
into
or
popf
sbb
movsl
or
aam
inc
test
in
call
pop
mulb
or
rorb
mov
ss
mov
pop
mov
shrl
leave
add
notl
xchg
aam
sub
push
fstpt
mov
push
leave
sub
mov
mov
push
dec
aad
in
arpl
cmp
and
cmp
xor
sub
test
outsb
pop
cli
imul
inc
mov
or
push
sub
add
repz
bound
out
pop
jmp
lahf
inc
dec
enter
arpl
dec
fwait
sti
pop
aam
cmp
clc
out
sti
cltd
inc
out
movswl
fstl
movsb
shrl
fistpl
and
in
js
je
mov
lcall
pop
out
mov
imul
shll
add
imul
cltd
popf
mov
adc
cmc
incl
xchg
mov
xchg
jl
pop
fisubl
stos
pop
pop
mov
mov
imul
push
mov
jne
add
fimuls
cmp
mov
push
and
inc
inc
push
and
or
push
inc
ds
cli
jecxz
jge
gs
mov
mov
aaa
sub
mov
cmp
int
push
es
cmp
mov
call
rclb
enter
loopne
dec
add
jae,pn
adcb
pop
mov
addl
xor
ret
jp
arpl
sbb
and
cmp
jmp
imul
adc
daa
or
repnz
mov
rorl
jg
jae
lcall
adc
outsl
lret
xor
xor
inc
lds
xchg
cmp
adcl
loopne
into
ficomps
outsl
filds
push
hlt
add
incb
fnstenv
inc
xchg
cwtl
insl
cmp
scas
cmp
test
add
cld
test
lret
xchg
es
dec
negb
rcl
stos
jmp
das
roll
shlb
jae
dec
sbb
inc
loope
test
adc
sbb
mov
cmp
outsb
sbb
jl
pop
clc
push
sbb
push
fistpl
testl
testl
scas
or
xchg
jmp
push
scas
mov
mov
dec
pop
xchg
xor
imul
pop
push
mov
jge
ret
add
xlat
xor
adc
push
data16
push
push
clc
cmp
scas
xchg
f2xm1
or
inc
lea
sub
pop
jl
into
das
jnp
sbbb
mov
aam
xlat
cmpsb
pushf
mov
adc
loopne
or
fnstsw
faddl
mov
pop
filds
sub
sub
jge
popf
rcrl
xchg
mov
cltd
ds
push
daa
jno
jno
iret
cmpsl
jecxz
adc
in
mov
mov
xchg
sub
inc
push
push
mov
outsl
adc
incb
out
lods
movsl
jae
mov
pop
mov
push
insl
pop
fcmovnb
mov
cli
and
loopne
fucomi
es
xchg
add
adc
push
sub
arpl
lahf
out
add
dec
shlb
sub
push
push
xchg
cmp
lock
mov
adc
inc
pop
lods
jne
dec
pop
cmp
pop
shlb
test
aaa
pop
cmp
mov
inc
test
sahf
jo
fld
lahf
inc
adc
mov
fidivrs
mov
sub
and
push
in
in
or
aaa
loope
xchg
lahf
ja
int
outsl
movsb
push
xor
xlat
jno
dec
or
mov
std
and
lret
pop
and
data16
add
jle
sahf
mov
ss
or
call
mov
xchg
sti
inc
add
mov
adc
xchg
jecxz
jnp
push
push
mov
mov
xchg
pop
mov
and
mov
add
int
jae
cmpl
jb
xor
xchg
pushf
inc
jl
sbb
fisttpll
imul
pop
fs
fisubrl
into
jo
mov
imul
iret
push
sub
jo
into
sbb
out
sub
jp
push
cmpsb
push
push
sub
jbe
sbb
stc
xlat
pop
test
dec
rcrl
jb
aam
movsb
pop
mov
sub
lret
lods
outsb
in
sbb
xor
and
dec
sbbl
ficompl
imul
in
sbb
mov
imul
rcl
outsb
xor
xchg
in
jle
ss
outsl
mov
clc
dec
xor
adc
xchg
inc
inc
pop
dec
ss
int
fwait
jl
fsubrl
stc
inc
cmp
js
test
inc
or
push
add
mov
mov
mov
pshufw
int
or
shr
push
test
dec
pop
fs
cmc
fildll
cwtl
loop
pop
aad
inc
rorl
mov
mov
andl
xor
mov
mov
or
movsl
flds
mov
dec
fmuls
data16
rcll
inc
sub
dec
mov
cmp
and
inc
dec
dec
jo
or
lret
ljmp
sub
xor
mov
setge
rcll
xchg
jl
mov
or
xlat
mov
mov
ror
mov
aam
xchg
daa
dec
push
sbb
nop
mov
out
cmp
push
mov
aas
mov
scas
repnz
dec
push
clc
out
movsl
insl
repnz
lahf
popf
out
cmc
cmpsl
mov
inc
mov
imul
mov
xchg
aaa
leave
jno
push
bound
js
mov
mov
jnp
outsb
rorl
fisttps
test
fs
lret
iret
ss
mov
xchg
mov
std
cmp
xor
in
or
xchg
mov
dec
in
sub
clc
jbe
incl
or
imul
rcr
xchg
or
xchg
iret
mov
fiadds
mov
xchg
test
fwait
jmp
jno
xor
mov
shll
push
hlt
lock
pop
subb
aad
in
sbb
cs
jbe
movl
xor
lea
jle
je
fwait
movsl
out
inc
clc
mov
sbb
push
dec
xor
inc
lret
mov
mov
xchg
pop
jae
xchg
fildll
mov
xchg
xor
clc
xchg
mov
sub
cmpsb
dec
or
adc
insl
mov
jg
xchg
dec
cmc
xor
stos
xchg
repz
movsb
dec
popa
sub
mov
out
push
push
dec
out
mov
sub
jno
push
xor
leave
dec
push
or
fcmove
sbb
inc
stc
bound
scas
mov
xor
subl
and
mov
popa
sbb
addl
scas
ljmp
sub
push
and
cmp
pushf
bound
mov
iret
jl
dec
pop
stos
fs
sub
xchg
pop
or
scas
enter
rcll
or
neg
ljmp
mov
aam
jecxz
push
xor
fdivrs
cmp
shlb
movlps
loopne
dec
test
push
mov
xchg
pop
xchg
lods
jmp
or
fs
push
ficomps
mov
inc
cmp
xchg
cmp
test
aas
cwtl
stos
insb
mov
loopne
cmp
nop
or
mov
sbb
fcmovnbe
orb
js
or
sbb
das
aaa
popf
fimuls
inc
shlb
mov
loopne
in
push
push
fdivrl
mov
ficomps
push
mov
pop
mov
mov
sbb
sub
fs
xorb
adc
out
jg
pop
dec
cmp
rorb
jmp
fmull
pushf
jl
lock
sbb
xor
pop
sbb
xor
cli
insl
cli
inc
cmpb
repnz
lds
fldt
and
loop
sbb
imul
xchg
xchg
in
pop
ds
out
xchg
sub
pop
mov
test
sti
inc
out
je
mov
xchg
bound
cmovs
xchg
adc
jne
inc
vmovd
in
outsl
imul
lret
add
out
rclb
mov
sub
sahf
fsubl
mov
movsl
ljmp
lahf
out
das
cmp
inc
dec
push
popf
bound
mov
jge
and
cmc
and
jo
push
xor
test
sbb
les
or
xchg
jns
adc
xchg
xor
mov
xor
fwait
mov
fwait
or
jg
jecxz
fcoml
push
sbb
in
jbe
insl
push
mov
pop
xchg
aas
sub
stc
dec
fldcw
mov
loope
icebp
fnstenv
lods
divl
in
xchg
mov
mov
addb
subb
mov
aam
out
ja
cmpsl
call
cmpl
gs
mov
or
cmc
xor
xchg
or
adc
jae,pt
insb
sub
imul
jl
xor
mov
cli
lahf
sbb
mov
jle
sbbl
ljmp
push
es
bound
push
icebp
cmpsb
shll
add
push
dec
cmp
pushw
loop
mov
inc
aam
and
mov
enter
clc
enter
lds
test
mov
mov
and
add
in
pop
mov
adc
cltd
test
fcoms
push
leave
imul
dec
jl
mov
push
xor
push
loopne
mov
add
cmp
rol
inc
add
push
cld
js
dec
ljmp
in
jne
jecxz
outsb
in
rcrb
mov
mov
daa
xlat
inc
scas
xor
mov
leave
in
jge
mov
adc
and
scas
mov
loope
lock
addr16
insl
inc
xor
fists
shll
mov
xchg
sbb
fldl
and
inc
inc
add
sub
pop
fcmovbe
add
pop
aas
inc
sbb
jns
std
jno
stos
ret
ja
int3
imul
push
and
fnsave
and
sbb
loopne
pop
es
arpl
aaa
popa
outsl
sbb
test
lcall
or
add
imulb
stc
inc
sub
xchg
popf
push
push
pushf
inc
lods
pop
rcr
out
or
mov
inc
xor
and
daa
ljmp
int3
aad
mov
mov
and
es
scas
aas
cwtl
sub
icebp
iret
test
lahf
mov
je
dec
lods
loop
push
fwait
jecxz
inc
dec
xchg
xor
mov
xchg
call
pop
pop
fwait
insb
xchg
and
jnp
xor
lock
outsb
sahf
dec
xor
scas
adc
pop
jmp
mov
mov
out
outsl
and
xor
lahf
mov
mov
addb
or
into
in
sbb
or
data16
fstl
enter
or
mov
jnp
lret
std
fs
pop
daa
test
xchg
pusha
push
lds
jns
lock
xchg
push
push
mov
push
sbb
lods
sarb
and
push
cmp
cmp
push
outsb
ds
aas
jg
leave
aam
iret
ljmp
sub
sub
or
sub
lretw
inc
ljmp
ja
in
push
cmp
mov
inc
add
adc
jae
xchg
cmp
loop
mov
sbb
fs
ss
xchg
int3
xchg
xor
xor
out
es
xor
mov
inc
jle
rcrl
out
cmp
pop
loope
popf
jb
int
pop
pop
xchg
js
pop
mov
mov
repz
xlat
cmpsl
mov
push
pop
mov
cmp
outsl
and
shl
lret
and
dec
data16
fsub
pop
test
adc
push
jl
lahf
adc
mov
adc
aas
in
es
mov
movb
dec
shlb
js
mov
inc
adc
push
test
movsl
mov
aas
arpl
or
or
adc
ficomps
sbb
inc
leave
sbb
js
cmp
repz
lods
sbb
and
fwait
leave
xlat
adcb
push
ds
jo
stos
cmp
cmp
iret
xchg
lahf
addb
stc
clc
push
add
dec
add
jmp
jo
es
mov
arpl
push
int3
and
adc
add
jae
shlb
ret
dec
popf
mov
fucomip
cmpsb
clc
mov
adc
inc
sub
gs
mov
inc
xor
arpl
sub
mov
jne
inc
test
adc
inc
mov
lock
push
hlt
data16
pop
aaa
sub
roll
push
pushf
mov
adc
mov
lds
add
dec
rcr
out
ret
mov
mov
mov
mov
loop
xlat
mov
adc
xchg
pop
and
add
sbb
cmp
jmpw
mov
push
sbb
pop
pop
sub
pop
pop
mov
push
jae
mov
adc
pop
push
repz
mov
insl
loope
lods
or
or
stc
imul
sub
lea
pop
dec
or
jg
mov
lock
xor
scas
sub
mov
es
fwait
inc
div
sbb
add
lret
jae
les
pop
add
sbb
das
or
mov
sarb
repz
test
lret
push
lcall
je
lods
out
out
xor
outsl
loopne
fstl
lret
out
push
add
xor
pop
or
leave
les
orb
add
jno
mov
ljmp
mov
pop
movsb
in
in
xchg
in
xchg
xchg
or
xchg
mov
dec
data16
pop
push
xor
add
push
mov
xchg
loope
inc
push
loop
dec
dec
mov
pop
ss
xchg
mov
xchg
lock
dec
or
ja
sub
push
aam
sbb
jns
jle
cli
outsw
jl
stos
clc
shl
lret
fcomps
push
jmp
dec
dec
mov
mov
movsb
dec
xorl
in
or
pop
fcoms
mov
jg
fucomi
inc
dec
pop
cmp
insl
sarb
xlat
pop
xorl
stos
sbb
andb
sub
xchg
arpl
setg
div
sub
xlat
and
out
ds
mov
outsl
js
movsl
cmp
sbb
nop
popf
xor
push
xor
xchg
adc
insb
and
scas
enter
cmpsl
jnp
movsl
or
sub
divb
test
cmc
adc
in
mov
cmp
rolb
fwait
in
or
xor
into
pop
cli
jmp
mov
push
or
cmp
pop
sbb
mov
sbb
jp
add
mov
dec
fmulp
push
sarb
mov
jne
dec
jmp
pop
push
or
mov
mov
pushf
repz
testb
aam
rolb
shll
lods
pop
lcall
rorb
mov
cmp
outsl
mov
iret
add
xchg
icebp
mov
nop
mov
push
aaa
sbb
or
stc
mov
aam
jmp
xor
sub
js
jl
add
les
mov
aas
sbb
pop
mov
in
rolb
in
mov
lds
andl
fnsave
mov
or
push
loopne
sbb
jae
cs
cmpsb
leave
mov
insb
inc
jge
sbb
push
cmc
xchg
imul
xlat
sbb
xchg
xchg
inc
pop
repz
add
or
dec
mov
shlb
test
insb
pop
push
pop
fists
fisubs
js
mov
xchg
pop
jp
adc
sti
or
mov
or
add
andb
lds
push
flds
int
add
ror
js
je
mov
dec
repnz
imull
stc
repnz
inc
dec
or
adc
loope
dec
xchg
push
jns
and
push
dec
in
add
aam
dec
push
cmpsl
outsb
jae
inc
lea
add
push
pop
cmp
jnp
ljmp
add
add
incb
mov
fcompl
cmc
in
add
sub
aaa
xor
scas
iret
cmpsl
jae
mulb
popa
xchg
fnstcw
mov
in
loop
rorl
ret
mov
mov
or
sti
adc
lods
sbb
arpl
enter
inc
movl
inc
subl
ret
xor
cmpb
mov
and
cmc
adc
fdivrl
lret
jo
ret
shrb
data16
mov
lock
cwtl
push
sbb
xchg
inc
mov
dec
add
add
cmc
inc
lods
adc
mov
stc
adc
add
inc
pop
in
xorb
jbe
push
jge
mov
or
mov
das
aaa
jne
sub
inc
sub
cmpsl
test
cmc
add
es
scas
push
lods
push
arpl
pop
insb
inc
or
push
stos
jl
push
or
and
in
dec
adc
fmulp
pop
sub
int
in
test
xor
or
rcll
push
mov
in
pop
and
adc
xorl
mov
mov
sub
and
popa
sbb
out
and
ljmp
in
cmp
arpl
icebp
into
cltd
test
add
daa
sbb
mov
inc
insb
push
scas
or
sbb
push
mov
dec
mov
je
add
xchg
xchg
dec
fildl
jg
and
cmpsb
mov
inc
imul
imul
mov
push
add
xor
or
fsubrl
xor
jmp
push
js
into
fdivp
xchg
test
arpl
and
sub
pusha
adc
inc
xchg
fcomi
push
add
mov
cwtl
addr16
out
xor
mov
add
jo
jns
push
cmp
jae
shll
pop
push
es
arpl
sbb
and
inc
push
mov
enter
mov
or
stc
mov
mov
leave
add
mov
jmp
mov
cmp
shrl
dec
mov
das
add
push
cmpsl
cmpsl
jne
inc
in
xchg
push
jbe
push
int3
sub
and
xor
incb
xchg
sarl
mov
add
fstps
das
cmp
das
dec
sbb
test
inc
xchg
movsl
cmpsb
jg
pop
sarl
jmp
mov
cmp
jmp
ds
pop
jg
and
jbe
cli
outsl
fisubl
in
sub
in
lea
fmull
loop
xchg
scas
int3
add
sbb
movsb
jo
and
cmp
ljmp
mov
pop
fwait
scas
adc
pop
cmp
aad
dec
out
js
or
mov
jg
or
xor
in
insb
fistps
ret
push
pop
dec
or
push
andb
ss
or
lods
mov
stos
hlt
push
pop
xchg
test
ljmp
rcll
inc
cmc
sahf
pushf
adc
jp
sti
dec
xor
sub
gs
xor
ret
out
xchg
push
xor
xlat
xor
mov
shlb
enter
or
fldt
jmp
es
add
inc
popf
mov
pop
push
ss
sbb
jl
pop
push
ja
mov
dec
jbe
sbb
rcrl
in
inc
or
lcall
das
fstp
scas
mov
adc
jle
sti
mov
pop
xlat
sti
mov
mov
out
scas
xchg
mov
fiaddl
lods
inc
adc
in
and
push
or
mov
xlat
inc
push
inc
jno
xlat
pusha
fldenv
inc
push
jo
scas
xor
mov
stos
mov
test
jnp
jle
jge
rcll
adc
test
int3
int
mov
dec
xor
and
in
xchg
lea
hlt
mulb
push
std
scas
or
sub
push
xor
mov
and
mov
mov
gs
test
cmp
sbb
int3
mov
xlat
in
xchg
push
fcmovnu
lcall
js
repz
cmp
mov
iret
mov
jg
xor
fcom
xchg
mov
dec
lods
mov
mov
and
div
dec
mov
repnz
mov
mov
pop
repnz
add
nop
cld
lret
and
cltd
into
mov
shrb
das
repz
pop
fst
inc
or
jg
mov
xchg
lods
aas
ljmp
push
mov
repz
or
daa
mov
fwait
jp
orl
cmp
mov
xor
pop
bound
sbb
stos
add
sbb
mov
cmp
loopne
arpl
and
add
icebp
fxch
popf
incb
jge
mov
xchg
ffreep
bound
test
pop
and
jge
leave
jno
stos
xor
stos
sub
and
cmp
leave
fcompl
sahf
daa
pop
stc
cld
icebp
inc
cmovl
and
aas
inc
repnz
inc
test
sbb
and
cmp
mov
fadds
sarb
subb
adc
out
sahf
adc
fwait
inc
mov
sbb
mov
jns
dec
xchg
fisubs
lret
lret
xlat
mov
jl
lcall
ds
or
pop
cmp
cmp
xchg
mov
add
push
lret
mov
add
popa
sub
jl
mov
sbb
in
and
jecxz
test
and
mov
aad
les
fs
in
ds
mov
add
mov
jo
xchg
cld
daa
popa
add
jg
ss
mov
push
cwtl
adcb
dec
in
dec
dec
xlat
popf
push
dec
and
pushf
mov
lock
ja
mov
lock
nopl
nop
or
mov
in
nop
pop
and
jo
arpl
mov
ret
inc
pop
lcall
mov
scas
daa
jp
stos
sti
leave
pop
ljmp
pop
xchg
xchg
das
adc
sti
jecxz
enter
mov
in
or
adc
sti
fs
mov
fiaddl
insb
sbb
pusha
dec
adcl
sbb
jae
jnp
push
adc
movsb
sbb
enter
xorb
cmpsb
xlat
and
xor
movsb
sbb
stc
mov
insb
add
loope
out
lods
dec
adc
add
mov
gs
nop
ss
push
clc
mov
aas
js
or
pop
add
push
mov
shl
and
fnstsw
xor
mov
push
arpl
sbb
lds
das
jg
jl
rorb
idivb
test
lahf
test
push
mov
cli
mov
lds
cmp
rorb
push
cltd
adc
fdivs
inc
xor
iret
jecxz
adc
push
stc
pop
or
pop
mov
mov
dec
xchg
movsb
dec
jnp
adc
mov
dec
mov
add
cmp
cmpsl
mov
sub
f2xm1
mov
jp
arpl
loopne
push
or
or
shl
or
mov
mov
mov
pop
divb
dec
adc
nop
pop
idivb
cmpsb
pop
add
pop
sbb
aaa
jne
push
out
repnz
ds
dec
xchg
fucom
mov
sbb
cwtl
push
mov
sahf
push
and
js
or
test
outsl
test
push
mov
jl
push
dec
out
or
pop
mov
clc
jbe
addl
adc
pop
sub
fwait
xor
mov
xchg
add
jb
outsb
jb
xorl
loope
das
add
ljmp
rcll
jno
ret
jns
mov
mov
add
xor
add
pop
repnz
adc
add
pusha
imull
ret
add
inc
push
mov
xchg
add
pop
inc
add
jae
mov
mov
inc
xchg
aam
mov
sub
sub
arpl
add
cwtl
mov
test
aam
mov
pop
aad
stc
in
dec
mov
push
dec
in
pushf
in
xchg
mov
rcrb
lds
rcl
cmp
shll
sti
jne
adc
movq
push
fldcw
adc
nop
mov
xor
je
jge
notb
sbb
pop
adc
pop
fsubrl
clc
lret
mov
jl
sbb
jae
adc
imul
adc
inc
sti
push
cpuid
lcall
int
xor
cwtl
shll
sti
lock
popa
lods
push
mov
dec
xchg
sbb
loopne
dec
shll
pop
jg
in
hlt
pop
pop
mov
sub
jnp
pop
int
mov
cmp
sbb
mov
cli
jo
loope
lret
push
js
aad
sub
outsb
fmull
divb
in
xor
stos
cmp
sub
aad
stos
movsb
inc
inc
jp
std
aas
outsl
dec
ja
insb
jmp
lea
mov
sbb
jecxz
push
add
xchg
dec
mov
cmp
aas
mul
sub
xchg
jmp
fcomip
aad
and
sub
jmp
add
pop
jb
dec
adc
clc
repz
jmp
aaa
rorb
pop
imul
push
pop
xchg
stc
lds
leave
repz
push
imull
jmp
mov
movsb
loopne
into
test
and
mov
lcall
xor
or
and
out
push
addl
pop
mov
sbb
push
mov
loop
sub
cmpsl
loop
adc
add
cld
pop
ljmp
xor
vcvttpd2dqx
jno
pusha
into
push
outsl
popf
es
pop
mov
inc
icebp
pop
mov
sbb
add
fwait
cli
lahf
sbb
ret
mov
mov
aas
or
mov
out
ret
js
and
and
mov
pop
cs
dec
push
sahf
arpl
aaa
stos
addr16
lret
inc
fnsave
daa
mov
jo
push
dec
addr16
lcall
sarl
pop
inc
ss
gs
loopne
xchg
test
push
pushf
xchg
pop
and
dec
xor
cmpsl
mov
jge
xor
js,pt
aas
sub
xor
or
or
loopne
les
aad
aaa
dec
fisttpl
mov
test
movsb
out
jecxz
lods
fildl
mov
lahf
push
pop
push
les
aas
iret
pop
pop
and
fninit
mov
jecxz
decb
and
iret
push
sub
imul
xchg
decb
add
or
sbb
pop
testl
ficompl
das
in
lock
sub
orl
sbb
xorb
push
jl
and
sbb
in
nop
lds
in
insl
adc
sub
in
xchg
cmp
mov
and
dec
lret
dec
push
mov
mov
add
dec
ret
pop
jae
into
adc
js
jno
or
ficompl
jle
jge
cmc
dec
out
out
sahf
out
pop
xchg
ret
xchg
lods
mov
pop
or
cli
addr16
dec
shrl
jno
mov
push
subl
or
xchg
pushf
aad
mov
movsb
mov
lret
popa
les
mov
mov
xor
jbe
sbb
fisubrs
lahf
lcall
aaa
aaa
jbe
pop
das
mov
mulb
jbe
mov
xchg
dec
jnp
popa
ficoms
push
outsl
lods
mov
rclb
rorl
pop
stos
or
mov
int3
stc
cmpb
into
nop
loope
call
add
hlt
addr16
pop
adc
mov
and
popa
int3
sti
mov
lret
testb
add
aaa
cld
leave
adc
test
push
add
insl
adc
inc
pop
jnp
push
dec
test
mov
push
jnp
jae
mov
std
jle
inc
and
loopne
std
xchg
sub
pop
xor
shlb
scas
lcall
data16
daa
jno
and
movsl
stc
fldcw
jne
jns
add
pop
sub
test
adc
cld
pusha
jp
ja
loop
mov
push
les
sub
inc
dec
mov
adc
scas
push
or
mov
or
iret
ficoml
inc
jle
into
xor
sbb
adc
mov
movb
push
cld
test
xor
ja
mov
mov
das
test
xlat
in
push
or
inc
push
mov
dec
arpl
sub
pop
inc
inc
xor
test
adc
aad
cmpsb
test
das
insl
and
repz
dec
xlat
mov
cs
dec
xchg
pop
pop
xchg
testl
mov
andb
ret
loopne
scas
adc
dec
or
mov
xor
repnz
push
pusha
repz
test
pop
push
sbbb
fst
sbb
fidivs
mov
cs
scas
ret
dec
hlt
and
andl
jb
jns
fidivl
sti
xchg
add
and
decb
cmpsl
stos
test
hlt
testb
mov
ss
add
fisubrs
arpl
pop
stc
sbb
outsb
decb
jp
lcall
mov
mov
sub
push
push
inc
or
shll
push
ja
adc
insb
int
mov
rcrb
xchg
cmp
outsb
mov
mov
cltd
sub
lock
pop
clc
stc
adc
pushf
adc
lock
xchg
aas
cltd
imul
cld
iret
lds
mov
cmpsl
test
mov
jl
cmp
inc
lods
or
loope
addl
sbb
push
repz
movsl
pop
mov
xor
mov
stos
lea
shll
fisubrl
sub
cli
clc
stc
and
jo
scas
push
bnd
xchg
ret
movsl
imul
xor
jbe
cmpsb
shl
cltd
and
cs
dec
sbb
push
in
in
dec
inc
loop
addr16
loope
sub
mov
je
xor
xor
in
push
sub
mull
add
mov
cmp
les
loope
fldcw
mov
mov
dec
std
cmp
pop
enter
cmp
lods
jmp
popf
mov
pop
sbbl
lea
test
in
test
push
mov
fmull
mov
pushf
cmp
xor
and
shll
iret
dec
std
mov
or
insb
scas
bts
add
or
jge
xchg
mov
xor
cld
adc
stos
pop
pcmpeqb
push
pshufw
xor
ja
repz
es
xor
cvttps2pi
jg
dec
rdtsc
scas
int
shrb
inc
fsubl
mov
dec
ljmp
sahf
push
je
fwait
in
dec
out
es
adc
ja
jp
leave
xlat
mov
stc
fmull
sub
out
pop
xchg
pop
sbb
sbb
inc
cmp
dec
sahf
pushf
or
jmp
lock
testb
add
sub
fsub
pop
mov
aam
popf
mov
or
or
xor
mov
pushf
dec
int
fisubrl
test
mov
lea
insl
xlat
jb
addr16
jg
adc
adc
insb
mov
and
mov
push
xchg
or
cmp
loope
lods
mov
repnz
or
adc
jg
mov
mov
les
cmp
pop
aam
and
cmp
test
arpl
dec
adc
pop
mov
xchg
push
lahf
push
stos
dec
pop
rcr
mov
add
mov
fs
aaa
mov
xor
mov
mov
lods
sbb
jbe
movsl
imul
mov
jle
sub
jne
pop
mov
cmc
mov
lahf
or
loop
or
jnp
xor
push
push
xchg
ffree
cwtl
test
shr
sub
add
sbb
repz
xchg
aas
xor
nop
mov
pushf
ja
ret
lret
mov
adc
lea
cmpsb
insl
out
sbb
fsts
mov
int3
adc
xor
imull
arpl
inc
sbb
mov
cmpsl
and
push
inc
and
xor
stc
das
pop
xchg
cmp
or
pop
jle
add
xchg
add
xchg
xchg
je
or
mov
adc
add
sub
mov
mov
pushl
mov
jp
sti
nop
pop
popa
rolb
mov
jge
xor
sub
adc
jno
movups
and
decb
mov
add
flds
jmp
out
hlt
mov
lret
add
cmp
xchg
sbb
in
lcall
cld
and
pop
adc
cmp
dec
ss
in
mov
aad
or
in
popa
lock
mov
pop
xor
sub
or
aaa
pushf
scas
mov
in
mov
aam
push
out
cmp
mov
push
jp,pn
adcl
insb
cmp
mov
or
push
jnp
es
jp
lret
cltd
das
mov
scas
cltd
mov
push
lcall
lea
push
cltd
clc
add
jb
cmc
mov
sub
sub
or
dec
add
push
sbb
in
lock
jbe
mov
push
pop
shrl
or
inc
push
cmp
cmpl
or
pop
cltd
sub
std
ja
lret
jg
jns
pop
stos
xor
in
inc
test
fstp
fwait
arpl
addr16
mov
loop
loop
push
test
sbb
jp
inc
and
lea
push
push
xchg
pop
cmp
dec
add
out
js
daa
xor
sbb
out
sbb
xor
in
icebp
adc
inc
jecxz
cmp
lcall
sbb
out
mov
imul
xor
sbb
sbb
inc
cmpsb
sbb
xor
push
test
aam
xlat
sarl
imul
or
outsb
or
lods
mov
cmp
and
add
xchg
push
aas
jae
cmp
xchg
jmp
push
add
add
jbe
add
mov
xchg
imul
movsb
lcall
mov
scas
movsb
sub
cmp
cmpsb
cmc
sarb
shlb
push
in
mov
dec
loope
incl
push
pop
cld
ret
pop
inc
pop
rorl
sahf
cmpsl
add
push
ds
push
bound
xor
add
cltd
push
rcrl
stc
cmpsb
add
les
lret
inc
loopne
je
jae
sub
sbbl
aas
jl
pop
add
ret
lods
test
mov
call
clc
adc
loopne
das
sub
bound
jmp
dec
nop
lcall
mov
push
in
es
xor
loopne
lea
out
cs
push
ljmp
push
mov
adc
outsb
inc
paddsb
dec
mov
push
cmc
in
mov
ret
mov
mov
shlb
pop
push
mov
and
mov
mov
fisubl
out
jp
and
stos
xor
or
mov
addb
sbb
push
cs
pmaxsw
mov
and
lahf
rcrb
jle
jae
inc
ss
add
rcrl
out
gs
jg
mov
fwait
js
in
sub
sub
or
cmp
jecxz
pusha
addb
in
fadd
lds
xor
in
hlt
jnp
leave
ret
int3
and
inc
jb
addr16
sbb
sbb
inc
lret
loop
push
sbb
xor
outsl
nop
xor
push
mov
incl
es
imul
xor
mov
jge
and
or
imul
pop
outsl
lcall
xchg
mov
mov
iret
push
movsl
sub
sub
xor
call
jo
jp
mov
cs
hlt
pop
enter
pop
rcr
add
add
jge
or
into
add
fst
fcoml
dec
mov
fstp
fisubrl
and
jmp
stos
mov
fadds
movsb
sbb
das
jmp
xchg
mov
sub
ja
mov
out
cmp
inc
outsb
mov
cmpsl
aad
xor
push
lret
call
subl
pop
sbb
xor
test
add
mov
mov
xchg
gs
ds
sub
inc
mov
jo
dec
add
popa
and
or
js
push
ret
lds
dec
insl
cli
inc
push
mov
or
push
xorl
adc
mov
mov
iret
mov
outsl
cmp
lods
jg
lock
lahf
cmp
rclb
mov
mov
cmpsb
jb
lret
loope
addr16
jmp
pushf
lods
sub
test
and
cmp
cmp
jae
fistpll
fiadds
xor
test
sub
mov
insb
scas
stc
inc
scas
test
es
repnz
cli
mov
cmp
pushf
int
and
inc
add
loop
mov
add
mov
js
adc
dec
add
pop
shl
adcb
lret
andl
mov
xor
or
aas
dec
inc
addr16
cmp
jp
sub
dec
incb
dec
test
das
mov
fcmove
mov
std
jg
or
fchs
movsl
test
dec
mov
push
aam
add
dec
xchg
xor
mov
sbb
mov
push
pop
packsswb
or
pop
cmp
insb
fisubl
andl
and
negl
pop
das
or
dec
cld
xchg
add
ja
cmp
dec
stos
daa
pop
push
mov
in
out
int3
push
inc
mov
fsubrs
jmp
in
dec
lret
xchg
dec
in
mov
cltd
ficompl
mov
fisubrs
dec
int3
adc
ss
arpl
adc
cmpsl
push
fldt
mov
xchg
dec
pop
sub
push
xor
mov
mov
adc
das
sub
loope
lret
push
jo
xor
xchg
mov
lea
cmpsl
test
mov
outsl
out
sbb
adc
stos
sbb
ret
insl
cmpl
hlt
test
cmc
lahf
cmp
xor
dec
gs
dec
add
xchg
push
incl
cmpsb
mov
test
pop
xchg
pop
xchg
mulb
cmp
sbb
pop
popa
sahf
cmp
fdivs
test
xchg
adcb
or
xchg
movsl
in
mov
mov
xchg
mov
jp
add
jecxz
fs
mov
pop
pop
addr16
jecxz
fcompl
mov
push
jb
mov
jp
sub
orb
scas
push
in
mov
xor
sbb
inc
fdivrs
xor
ret
stos
ds
dec
add
adc
adc
aam
cltd
inc
mov
cmp
pop
test
and
mov
adcl
sbb
dec
mov
dec
ret
push
mov
pop
popa
pop
imul
stos
adc
mov
or
in
shrb
cmpsb
popl
or
jp
adc
mov
sbb
roll
sub
icebp
ja
fsts
bswap
pop
in
xchg
dec
adc
cmp
mov
mov
xchg
loopne
inc
jg
pop
bound
push
mov
cmp
dec
pop
inc
jne
lds
mov
dec
lods
inc
rclb
cmpsl
add
xor
lds
adc
push
inc
add
rcll
out
cmpsb
xor
xchg
cltd
dec
dec
aam
cmpsb
into
dec
fisubrl
or
enter
insb
sahf
rorl
icebp
js
inc
lds
frstor
insl
insl
xor
lahf
stos
mov
in
test
xor
fcmovnu
das
mov
addr16
pop
jmp
jne
jg
add
fisubrs
mov
mov
push
mov
aaa
xchg
scas
and
mov
fld
cs
clc
faddp
jbe
imul
sub
divb
icebp
cmp
cmp
pop
xor
push
mov
mov
les
imul
sub
xor
dec
repz
cmp
push
out
movsb
mov
sub
mov
mov
or
jle
loopne
xchg
popf
mov
hlt
mov
lahf
xchg
push
push
mov
mov
les
and
cmp
or
in
outsl
test
fiadds
js
loopne
pop
arpl
cmp
xchg
in
inc
mov
sub
xor
call
xchg
cmpsb
mov
ficompl
lds
pop
data16
sbb
call
mov
cmp
fwait
xchg
movsl
in
sti
pop
pop
test
mov
jmp
hlt
hlt
sub
rcrb
bound
lods
xor
ljmp
sub
dec
cmp
pop
call
mov
scas
add
sarb
dec
call
xor
mov
in
ljmp
repz
push
or
fs
sub
js
dec
xchg
push
sub
loopne
sub
add
xchg
push
scas
in
sti
lock
xchg
leave
leave
fistps
outsb
mov
dec
fadds
mul
ret
mov
jnp
loope
xor
sar
in
sbb
mov
pop
xor
int3
scas
mov
push
inc
jge
aaa
sub
sub
in
lods
dec
ror
sbb
pop
pop
fwait
ret
rcll
dec
cmpsl
movsl
test
sub
and
cmp
fidivl
mov
cwtl
push
push
and
or
mov
mov
mov
in
mov
add
out
push
and
sbb
push
or
dec
ret
pop
aad
aaa
dec
jl
les
pop
clc
rcll
rcrl
dec
adc
sbb
or
rclb
leave
inc
or
rcl
clc
gs
ljmp
push
mov
xchg
mov
or
add
inc
cltd
test
mov
sub
negb
dec
mov
in
popa
sbb
sbb
js
rcrb
dec
push
xor
xor
adc
rolb
divb
sbb
rcrb
jecxz
mov
loope
lcall
ret
sub
cmpl
iret
ja
in
sub
cmp
pop
int
pusha
mov
lods
adc
jne
adc
add
stos
enter
adc
sub
out
add
pop
loopne
out
ja
mov
pop
add
stos
nop
adc
scas
rol
andl
adc
lock
push
and
mulb
mov
mov
jmp
mov
ljmp
jb
pop
stos
lea
or
inc
xor
sub
outsl
or
ja
and
cmpsl
dec
dec
ror
scas
inc
sub
mov
xchg
sub
add
in
mov
daa
push
test
rolb
pop
popa
test
push
jbe
rclb
lods
pop
call
imul
push
adc
cltd
jmp
iret
push
mov
mov
insb
push
inc
dec
inc
or
mov
imul
push
mov
inc
ret
jbe
in
ret
add
inc
repnz
mov
jns
andl
and
push
mov
jnp
out
clc
adc
xchg
sbb
pop
cmp
jo
fnstsw
adc
mov
ljmp
orl
ds
adc
dec
cli
sub
inc
push
mov
add
int3
cli
mov
shrl
out
sub
ja
dec
repz
mov
and
push
shll
adc
ss
ss
sbb
pop
cmp
cmp
jo,pn
subb
call
out
cmp
aas
aaa
movsb
xchg
inc
xor
mov
add
adc
pop
stos
fs
out
icebp
xlat
push
jbe
cld
add
cmp
sub
mov
fdivrs
and
ss
or
jp
out
jno
aas
and
mov
or
ret
sar
fiaddl
sub
sub
sub
popf
mov
pusha
mov
out
and
fs
fldcw
lret
jmp
lods
push
insl
iret
jns
bound
dec
inc
xor
movsl
xor
jnp
hlt
adcb
xchg
sub
insl
mov
iret
mov
pop
sub
call
jno
inc
push
xchg
mov
stc
or
pop
or
cmp
fldcw
and
push
jecxz
daa
sub
stos
orb
dec
cmp
cmp
pop
xor
jno
push
rorb
test
or
sub
xchg
add
and
outsl
int3
testb
mov
pop
mov
imul
lahf
fstpl
leave
inc
push
fs
sti
adc
sub
cmc
jge
repnz
inc
jmp
push
ljmp
ret
push
out
and
xor
or
mov
aam
xchg
cltd
mov
rcll
scas
aam
mov
repnz
xorb
dec
sbb
lea
pusha
jp
push
xor
lods
cmp
mov
xchg
repz
loopne
xchg
adc
popf
dec
mov
inc
pusha
in
aam
frstor
sarl
gs
shl
mov
int
mov
and
aad
jne
lcall
jne
or
sub
jecxz
xchg
mov
jecxz
int
mov
clc
cwtl
pop
mull
imul
test
mov
cmpsb
lods
xor
cmp
xchg
mov
jns
push
int
xchg
pop
or
sti
dec
mov
mov
xchg
insb
int3
std
ror
push
sbb
shrl
mov
mov
or
enter
pusha
shrl
sahf
jmp
adc
pop
orb
or
pop
ja
pop
aaa
repz
ja
adc
sbb
sub
sbb
shrl
pop
jbe
pop
mov
cmp
sub
test
addr16
inc
call
or
pop
add
loope
lock
in
lods
sub
dec
dec
add
in
dec
call
sub
gs
sarl
test
xchg
out
adcl
aaa
lret
xorl
or
cmp
mulb
and
sub
inc
sahf
outsb
inc
jp
adc
loope
xor
aaa
mov
cmpsb
cmc
std
lock
add
scas
and
inc
cmpsl
std
out
xor
int3
mov
mov
adc
loop
loope
pop
fidivrl
xor
in
out
pop
jbe
mov
into
mov
push
mov
imul
aas
aas
push
enter
mov
popa
jb
adc
ror
popf
adc
outsl
aas
inc
adc
mov
xor
bound
mov
fldt
pop
mov
mov
lods
jg
hlt
sbbb
push
and
push
sbb
pop
jo
popf
in
enter
pop
push
and
in
bound
lret
loop
push
push
dec
and
scas
popf
test
hlt
mov
xor
ret
in
in
lea
push
mov
xchg
ror
xchg
das
push
mov
fwait
mov
neg
cmp
or
push
mov
popa
in
xchg
jecxz
and
add
fcmovbe
jo
fstpl
rcl
pop
jae
jp
mov
lds
ss
dec
arpl
je
jge
adc
push
add
lods
adc
pop
gs
push
sub
out
les
mov
es
lods
pop
pop
js
pop
mov
pop
movsl
and
cmpsl
sbb
leave
cmpsb
ljmp
push
adc
sub
sbb
je
cmp
shll
int3
push
push
xchg
imul
fs
fidivrl
cmp
lcall
hlt
lcall
jb
sub
sub
outsl
cmp
sahf
stos
xor
cmp
test
xchg
iret
adc
insl
sbb
int3
inc
lods
add
pop
dec
scas
cwtl
xor
dec
ret
gs
cmp
test
sahf
ficoml
pop
pop
dec
push
pusha
push
add
add
icebp
out
dec
jno
imul
call
sbb
mov
add
push
pxor
or
out
xor
int3
rorl
mov
inc
mov
addr16
xor
push
add
jp
mov
rdpmc
ficomps
push
xorb
pop
imul
xor
sahf
pop
pusha
adc
addr16
movsb
jp
push
push
test
push
pop
cmp
xchg
orl
pusha
cmp
pop
inc
sti
hlt
mov
hlt
jb
xlat
sbb
and
int
aaa
and
push
inc
call
int3
pop
notl
fdivs
sbb
add
dec
imul
movsl
fcoms
push
loopne
xchg
fldt
sbb
or
test
mov
insb
xlat
cs
in
add
das
add
mov
out
loop
xchg
inc
push
or
mov
cmpsl
add
mov
lock
or
sbb
sub
jmp
push
dec
in
incb
icebp
call
subb
add
add
jg
sub
stc
jns
dec
sti
cmp
mov
push
and
cs
aas
popf
inc
nop
mov
es
and
nop
jle
setp
xchg
inc
mov
dec
sub
xor
mov
cmpsl
push
icebp
jle
and
aad
xchg
push
js
push
pop
pushf
mov
imul
dec
sbb
shrw
mov
sub
stos
jne
pop
ss
sub
jne
ret
pop
dec
inc
adc
cmp
xchg
or
mov
pop
lahf
jp
jl
cmp
mov
xor
pop
lods
pop
dec
push
lock
rolb
jae
addb
jo
repnz
test
and
dec
mov
out
stos
add
testb
andb
loopne
push
in
rcl
jmp
fidivrl
outsl
push
dec
or
sub
hlt
add
cli
daa
fcmove
arpl
xchg
shl
dec
sub
setne
add
mov
dec
cmp
sahf
mov
incl
sbb
add
ss
jns
in
dec
xchg
push
outsb
mov
pop
fnsave
gs
dec
lret
aaa
mov
sbb
mov
mov
inc
mov
push
in
jg
pushw
jge
test
idivl
lock
lret
jg
push
cmp
lds
addr16
push
rcll
jbe
or
es
adc
aaa
out
xchg
mov
imul
cmpsb
mov
adc
xlat
lock
sbb
or
inc
and
stos
bnd
aad
xchg
imul
adc
loope
inc
sub
sub
test
xor
js
pop
leave
jne
sub
xchg
or
jg
insl
popa
out
jmp
loope
push
pop
jo
loopne
mov
sbbl
mulb
int3
pushl
fs
inc
xchg
lods
sbb
fistps
add
mov
and
push
out
rcll
sbb
pop
or
mov
movl
mov
cmp
mov
and
ret
fsubr
mov
lods
icebp
mov
xor
push
and
mov
jmp
pop
push
or
sarb
test
les
fbstp
aas
scas
cld
jp
int3
ss
jecxz
ja
andb
mov
pop
ret
int3
xlat
pop
push
setnp
imul
orb
pop
sarl
fwait
ljmp
pop
shlb
push
mov
repz
cmp
in
test
pop
pop
fimull
cmp
in
int3
cltd
stc
mov
adc
push
ja
cmpsl
movsl
jg
xchg
not
out
in
sub
cmc
mov
stos
xlat
fdivrs
fidivl
icebp
inc
pop
lahf
push
cltd
frstor
xchg
pop
sub
ljmp
int3
lea
xchg
loop
mov
aaa
sub
cwtl
sub
sbbl
pop
xor
push
pop
push
repz
dec
xlat
lea
test
and
jne
inc
ret
dec
cmp
dec
rorb
loope
je
pop
sub
push
mov
test
subb
sub
mov
pop
mov
mov
inc
js
mov
jne
dec
aaa
push
call
sub
fmul
pop
adc
push
jmp
pop
daa
and
push
mov
or
adc
sub
adc
bound
dec
adc
sti
pusha
cmp
inc
popa
cmpsb
and
orb
andb
movsl
mov
push
scas
pop
push
or
lret
enter
adc
mov
roll
and
pusha
add
dec
mov
mov
cmp
pop
enter
popa
dec
mov
scas
and
rolb
push
rol
adc
or
sub
and
dec
mov
pop
push
jno
ja
xchg
xor
lret
add
ds
xor
psraw
lods
push
mov
lcall
pop
jmp
cli
lock
xchg
addr16
push
pop
rorl
xchg
lock
dec
lods
outsl
setg
sbb
xchg
mov
inc
or
sbb
shrl
push
adc
cltd
mov
ret
stos
fwait
aas
mov
mov
mov
cmc
adc
fstpl
je
fwait
sub
aas
inc
push
popf
or
data16
lods
pop
inc
mov
fsts
out
into
jne
jne
push
into
lods
rclb
jge
pop
enter
xor
add
sub
cld
shl
add
xor
fstl
cld
data16
cmc
sub
ja
test
jmp
pop
js
add
add
sbb
push
mov
mov
and
pop
jne
dec
icebp
mov
addps
xor
mov
cmp
leave
pop
or
pop
int3
add
pushf
addr16
xor
lods
pop
lret
les
lahf
pop
and
push
insl
pop
lds
test
pop
shrb
mov
inc
jbe
xchg
sbb
notb
and
ficomps
insb
sbb
lahf
js
stc
aas
inc
sub
sub
push
out
aad
movsb
xor
ret
sahf
push
and
cld
lcall
inc
test
push
push
subb
adc
test
mov
inc
sbbl
jbe
jnp
cmp
mov
imul
inc
jg
in
ficompl
xor
leave
lock
cmpsl
mov
or
into
hlt
out
pop
test
enter
fimull
inc
stos
loop
or
sti
jb
xchg
loop
adc
cbtw
cs
inc
repnz
rcrl
xchg
push
loope
xchg
cli
xchg
out
jle
mov
and
hlt
aad
mov
dec
lcall
mov
repnz
sarb
xchg
mov
loope
fists
ret
lahf
jp
mov
dec
int
xchg
int
sub
pop
jecxz
repnz
lret
inc
enter
jecxz
mov
pop
testl
enter
sub
lea
and
adc
popf
sub
mov
jmpw
inc
out
xchg
cld
dec
mov
xchg
push
and
shr
ss
add
nop
scas
sub
cmpsb
test
daa
gs
test
insb
mov
mulb
idivb
outsl
cs
stc
daa
mov
xchg
push
ja
mov
push
and
aas
pushf
xor
jmp
sub
mov
jmp
fbld
inc
insb
pop
adcb
mov
jo
cld
pop
popf
xchg
jne
rclb
loope
mov
pop
lret
xchg
inc
jno
leave
mov
popf
fwait
cmp
pop
test
xchg
mov
dec
xchg
stc
mov
fidivrl
sub
pushw
jl
test
pop
mov
test
or
sbb
pop
push
xor
mov
mov
jbe
lds
dec
jmp
dec
imul
repz
imul
fcoms
xchg
adc
and
mov
mov
fisttps
xor
arpl
inc
test
xchg
pop
inc
inc
movsb
pop
and
fsubl
xchg
inc
cwtl
jo
les
incb
in
add
sar
jl
cmp
mov
dec
in
inc
data16
pop
ljmp
lea
call
mov
loop
andb
add
movsb
push
test
jno
nop
add
imul
push
mov
fnstenv
out
fs
xchg
stc
or
push
inc
ret
stc
gs
ret
mov
lock
int
lahf
enter
mov
jge
int
mov
mov
imul
lret
jmp
out
ja
pop
rcrl
or
jecxz
or
adc
outsb
cmp
mov
mov
sets
or
out
jnp
cmpb
andb
inc
jp
cmpsb
push
inc
push
in
sub
js
fsubl
mov
mov
ret
inc
sub
mov
mov
lea
xchg
out
and
mov
outsl
sub
loope
movsl
outsb
fidivrs
inc
notb
inc
or
aad
std
enter
rcrl
mov
repnz
test
into
pop
add
fistpll
push
xchg
in
push
pop
or
data16
or
pop
out
outsl
add
or
inc
xchg
es
into
ljmp
lret
jb
adc
jl
fsubrl
andl
loopne
lret
imul
xchg
mov
ljmp
andl
mov
int
in
filds
js
cmp
scas
jae
test
adc
jecxz
popa
cmp
ja
or
popa
movsb
cmpsl
jmp
scas
pop
mov
cmp
pop
mov
or
test
push
lahf
sarl
out
std
add
sub
imul
push
lods
outsl
call
jle
sbb
test
cld
jno
jg
xchg
mov
mov
leave
icebp
lea
ja
and
sbb
jno
push
dec
and
aas
jle
add
mov
aad
mov
sub
mov
rorb
jge
xchg
insb
ds
jp
ret
cmp
push
jmp
iret
cld
mov
movsb
adc
add
adcb
gs
jl
nop
jo
cld
inc
jg
rorl
mov
je
mov
sbb
pop
js
les
push
hlt
in
pushl
shrl
cmc
jmp
cmp
or
jecxz
sub
sub
cs
push
add
jbe
leave
adc
enter
push
ror
mov
aam
pop
lret
jne
out
dec
roll
pop
mov
jecxz
dec
or
xchg
imul
js
jmp
outsl
lahf
mov
inc
jl
inc
adc
gs
fcoml
pop
and
cmp
pushf
fimuls
popf
rcll
aaa
mov
push
repz
dec
mov
push
movzbl
fnsave
push
dec
or
js
ror
add
jg
lahf
jmp
xor
sub
daa
xlat
mov
xchg
call
push
xor
sbb
jae
cmp
shll
sti
add
sub
or
rcr
js
jnp
xor
cmp
sub
jl
lods
cld
jnp
adc
sbb
or
jge
data16
mov
xchg
cli
add
mov
ljmp
shll
inc
jnp
rclb
fidivl
pop
or
lods
push
outsl
xchg
aas
bound
cmpsl
mov
sbb
dec
imul
xlat
and
lea
cwtl
pop
sub
repz
add
and
mov
cmp
mov
pop
adc
mov
outsl
lcall
xchg
loopne
push
add
fs
jae
inc
sub
push
dec
mov
lret
lahf
sub
aam
enter
push
sub
aam
xor
cmpsl
mov
pop
js
and
mov
outsl
sahf
push
push
sbb
pop
sbb
mov
inc
xchg
loopne
mov
push
mov
lcall
daa
adc
push
std
cmp
jae
out
inc
mov
repnz
mov
push
aam
mov
out
adc
je
out
push
sub
andl
divb
inc
xchg
push
pop
sbbl
push
jmp
inc
push
push
adc
mov
cmp
jb
sbb
testl
mov
jb
dec
inc
stos
loope
ret
adc
xchg
cmp
and
push
aad
nop
and
clc
and
stos
inc
je
icebp
adc
hlt
mov
iret
push
xor
xchg
popa
mov
inc
xchg
pop
mov
scas
test
push
fsubl
cmp
popf
cld
inc
mov
test
or
test
test
jge
add
push
sbb
inc
sbb
into
pop
in
or
jns
xlat
sub
mov
mov
xor
mov
pshufw
std
das
loopne
cwtl
jae
or
jnp
cmp
loop
inc
jo
xor
js
inc
into
jne
mov
xlat
loopne
mov
mov
out
jae
add
mov
stc
mov
jecxz
divl
jmp
push
and
iret
popf
push
lcall
pop
outsl
int
nop
mov
sbb
sbb
fbstp
push
sub
jo
add
bound
enter
pusha
iret
lret
jecxz
gs
pop
push
sub
cmc
mov
sub
jmp
je
mov
and
js
dec
mov
push
or
inc
mov
or
push
mov
xlat
imul
js
add
in
add
clc
cs
sub
push
jecxz
mov
push
fnstcw
pop
push
aaa
cmpsb
add
test
mov
cmp
nop
stc
pusha
or
pushl
fcoml
mov
loope
mov
adc
popf
sbb
in
into
stc
pop
sbb
xor
adc
std
test
cmp
dec
int
arpl
mov
shrb
roll
rorb
leave
add
mov
ds
pop
inc
sub
jecxz
mov
movsb
inc
push
gs
mov
test
cmp
mov
mov
and
lock
jg
cs
xchg
and
std
push
mov
xchg
stos
decl
push
jg
fildl
stos
sub
pop
jb
mov
sub
in
in
aad
mov
mov
rcll
imul
pop
mov
test
mov
iret
into
mov
fxch
cmpsb
call
shr
xchg
call
leave
hlt
mov
cmc
out
mov
mov
adc
jmp
rorl
xchg
jecxz
xor
std
pusha
jp
fstps
mov
fs
push
push
dec
aam
mov
dec
fld1
in
add
ljmp
dec
push
pushf
push
mov
xchg
ds
xor
jmp
dec
add
popf
jb
imul
stos
or
rcll
or
imul
cmp
mov
mov
je
jg
sub
or
lahf
mov
pop
js
sti
jb
in
daa
rcr
adc
fwait
call
inc
push
sbb
cmpsl
ficoms
push
jl
aaa
je
fistpll
out
or
aaa
push
dec
test
pop
mov
or
inc
rolb
outsb
inc
call
inc
mov
xor
loop
loop
shrb
repnz
int
xor
mov
insl
in
test
add
jecxz
clc
test
mov
in
in
stc
mov
jg
es
inc
sbb
xchg
pop
push
pop
and
xlat
jp
xlat
rcll
or
jp
int
and
dec
clc
lock
xor
dec
cld
rorb
mov
gs
mov
and
cltd
adc
aaa
sub
out
mov
mov
pop
inc
add
rolb
jbe,pt
out
sarl
mov
dec
mov
mov
push
cmpsb
out
sub
pop
push
and
rorl
or
mov
pop
call
push
out
negb
xchg
ljmp
xor
sub
sub
pop
test
ret
xor
pop
jge
test
jb
pusha
repz
scas
pop
jnp
outsl
test
ja
rcl
rolb
add
repnz
xchg
adcl
xchg
dec
xchg
push
mov
int
ja
out
jp
cmp
je
push
dec
pop
add
ss
and
inc
cmc
mov
jl
mov
dec
xlat
js
and
pop
lea
or
inc
imul
inc
mov
push
mov
add
in
pop
in
rcll
cmp
les
bound
inc
aad
sbb
and
xchg
cmc
mov
addr16
hlt
jns
xor
mov
enter
xor
sub
outsb
les
dec
aad
pop
xor
mov
cmp
fildll
rclb
dec
adc
adc
mov
pop
shll
push
orl
xchg
inc
jno
add
clc
mov
pop
test
mov
push
fdiv
push
push
ss
jle
mov
sbbb
test
mov
lret
jnp
dec
nop
sti
pop
mov
icebp
mov
pop
rorb
pop
js
out
adc
notb
xor
cli
pop
lds
sub
mov
dec
popa
gs
insl
ret
lock
enter
imul
cmp
bnd
cmp
or
xchg
sbb
cmp
lret
xchg
push
out
pop
pushf
jae
and
orb
fcmovnb
xor
mov
dec
fwait
ljmp
js
cltd
sbb
jae
xchg
in
inc
cmp
mov
sub
jmp
xchg
stc
lds
pop
loopne
mov
mov
loope
push
push
adc
adc
xchg
call
js
cmpl
lcall
sti
add
mov
mov
les
add
fs
sub
or
dec
stc
sub
push
aaa
outsb
inc
inc
aad
inc
lret
cs
addr16
negl
movb
shlb
cmpsb
es
lds
orl
inc
mov
dec
int
sbb
push
mov
cmp
repz
dec
or
xor
jae
out
insl
std
aaa
fs
inc
mov
jnp
mov
mov
or
and
in
dec
mov
add
outsb
sbb
cmpsl
mov
push
adc
outsl
or
adc
ds
push
fcom
jae
mov
pop
inc
sbb
xlat
mov
outsl
lea
pop
xchg
sbb
leave
and
nop
les
fmulp
rolb
pop
test
push
dec
jne
pop
xorl
rolb
xchg
push
stc
and
jno
notl
pop
cmp
mov
testb
pop
push
lock
sete
jge
mov
xor
inc
lods
call
sbb
mov
sub
jp
rol
and
sbb
lds
dec
sbb
dec
lcall
push
sub
movb
jmp
push
lahf
mov
sub
push
pop
popf
in
test
pop
cmp
xchg
pop
dec
sub
add
lcall
imul
int
add
push
mov
jmp
fdivrl
ud2
add
mov
sbb
hlt
loop
mov
mov
jmp
inc
xchg
hlt
in
cwtl
data16
adcb
sbb
test
pop
or
ret
scas
xchg
mov
aas
sbb
jp
int
gs
mov
adc
pusha
cmp
in
ljmp
jge
es
outsl
mov
cmp
scas
mov
inc
cmp
bnd
movsl
push
nop
mov
mov
cmp
mov
test
mov
sbb
loop
gs
mov
sub
mov
mov
lods
lods
rol
mov
add
loop
push
mov
mov
sub
and
pop
mov
lahf
push
gs
int
push
xor
jge
add
out
leave
jnp
mov
push
in
xchg
cli
mov
ficoml
dec
sub
mov
cs
rorb
outsb
das
and
adc
int
mov
push
and
lock
or
test
mov
out
xchg
jbe
pop
repz
xchg
das
nop
push
and
fwait
xchg
or
jp
dec
sub
lret
push
pop
insl
cmp
in
dec
jae
stc
jge
rorb
push
frstor
lods
fsubs
jb
insb
out
movb
xchg
and
cmp
sbb
js
fisubl
nop
loopne
mov
and
pop
mov
adcb
sbb
mov
pushf
inc
shl
xchg
add
inc
ljmp
add
imul
xchg
cmc
fimull
clc
push
imul
mov
jbe
neg
iret
pop
test
scas
pop
cmp
std
enter
lods
inc
pop
sbb
xor
xor
xchg
aaa
mov
sub
xchg
push
jg
pop
dec
lea
hlt
xor
test
cli
fbld
das
mov
ljmp
inc
push
stos
rcll
insl
pop
es
add
cmpb
out
adc
ja
dec
loopne
pop
jnp
mov
add
mov
dec
add
fcoms
iret
stc
adc
pop
adc
mov
xorb
dec
lahf
cmp
imul
mov
cmp
xor
inc
jno
or
frstor
mov
aaa
mov
inc
or
andl
adc
push
jmp
add
mov
popf
aaa
es
mov
jo
jp
jae
movhps
jp
testl
cmpsb
push
pop
xor
push
push
jns
lcall
push
daa
jg
iret
sub
jb
inc
add
in
nop
push
jb
repnz
fcoml
out
and
add
rcr
gs
sti
xchg
push
or
push
je
jno
sti
mov
mov
popa
movsl
inc
shll
and
enter
push
addr16
mov
xchg
cs
aas
aam
out
pop
jns
ret
repz
mov
mov
jns
mov
insl
call
cmp
pushf
push
dec
cmpsb
mov
jno
std
enter
sub
je
sbb
loop
iret
loop
imul
imul
and
test
repnz
adc
iret
jp
jbe
mov
sbb
imul
or
push
lret
fiaddl
and
adc
pop
cmpsl
repz
scas
idivl
xor
add
out
sbb
mov
or
jp
dec
mov
pop
dec
push
xchg
out
fidivrl
iret
and
rcrl
pusha
sub
subb
dec
pop
lret
xchg
addr16
incb
xor
mov
testb
ss
inc
test
fisubl
cmpl
xchg
mov
scas
xchg
loopne
mov
xchg
fidivrs
xchg
or
push
pop
xor
jg
mov
cmp
mov
xor
xchg
fisubrl
int3
jmp
inc
jl
cmp
notl
stc
mov
enter
push
cld
push
sbb
xchg
dec
mov
push
push
add
lret
pop
push
stos
and
adc
xchg
cmp
xchg
sbb
and
lds
aas
push
mov
jp
aad
push
jne
xchg
shll
mov
jns
mov
xor
inc
icebp
lods
movsb
and
scas
out
adc
jl
lcall
xchg
mov
stos
dec
push
popa
pop
inc
pop
xchg
jns
push
loope
in
inc
cmp
jg
mov
jmp
cltd
lea
mov
push
push
iret
inc
lods
and
arpl
hlt
jb
repnz
movsb
aaa
and
cltd
dec
cmpsb
icebp
sti
scas
mov
mov
cmp
in
shll
rcl
jmp
push
sub
cwtl
cmpl
push
sbb
iret
mov
push
bound
arpl
roll
jae
push
out
mov
or
and
cmp
pop
repz
js
sub
or
shlb
xor
dec
dec
dec
outsb
pop
fnsave
lcall
mov
js
dec
cltd
xchg
inc
cmp
cs
sub
test
mov
sub
sub
pop
push
pop
pop
and
or
dec
cmp
in
pop
ljmp
imul
shrl
adc
insl
mov
or
sub
fs
sub
lock
xchg
jge
cmp
daa
xorb
test
push
mov
mov
push
cmp
adc
popaw
dec
int
pop
das
cmp
xchg
or
or
aaa
and
inc
xchg
and
pop
lock
lds
sti
popf
and
fwait
pushf
out
mov
or
imul
out
loope
mov
cmp
stc
pop
dec
mov
fnstsw
outsl
icebp
xchg
mov
dec
shll
xor
aad
aam
out
dec
dec
mov
or
dec
int3
call
cltd
loope
ja
mov
push
add
add
subb
test
mov
jmp
sbb
xchg
jb
jns
mov
adc
aam
or
xchg
mov
iret
scas
stos
cmp
dec
dec
out
iret
pop
aaa
push
xor
mul
mov
add
and
cmpsl
or
mov
addr16
bound
sub
sub
xlat
orl
ret
and
and
rcrl
aad
aaa
cmp
rorb
dec
and
ret
sub
sahf
lock
aad
sub
shlb
subb
cmp
subb
jecxz
mov
ret
mov
xor
mov
xor
std
cld
std
je
out
mov
cmp
mov
sub
push
test
shll
imul
lcall
stc
arpl
scas
sub
fisttps
and
add
lret
mov
or
add
test
pusha
inc
jge
sbb
fistpl
push
cmpsb
dec
lods
mov
xor
or
in
xor
pop
dec
gs
scas
sub
pop
or
pushf
and
add
popa
cmpsb
nop
or
mov
xor
nop
jmp
nop
mov
mov
cmpsb
mov
test
mov
push
rcrl
add
jge
sarb
pop
loopne
cwtl
sti
cmc
inc
or
fdivrs
enter
pop
cmpsb
sahf
fiadds
mov
xlat
mov
cwtl
xor
mov
std
mov
add
ljmp
test
stos
in
out
cmp
mov
out
mov
xchg
pop
lea
iret
push
out
cltd
aad
test
adc
es
xor
dec
bound
data16
and
push
add
and
ja
cs
jg
mov
leave
dec
mov
mov
inc
add
jecxz
aad
jo
repnz
jno
sub
ficoms
cmp
std
pop
loop
mov
jae
cld
ja
mov
inc
lcall
add
int3
sbb
push
repz
sub
or
mov
push
int
adc
xchg
pop
xor
int3
mov
inc
js
lods
lods
fmuls
inc
ds
dec
adc
xchg
mov
ret
add
aam
mov
or
cmp
and
jmp
andl
xchg
sbb
dec
loopne
jle
stc
mov
fcompl
push
insl
pop
loope
inc
stos
int
push
into
add
in
pop
imul
hlt
jae
pop
es
sbb
push
sub
fmuls
mov
icebp
pop
sti
neg
jno
lret
mov
roll
fnsave
jb
out
adcb
dec
or
cltd
push
mov
adc
out
sahf
cmpsb
xchg
xor
mov
mov
mov
lret
jno
xor
ficoml
mov
mov
push
rolb
test
jnp
and
sbb
cmp
jnp
add
mov
push
xor
fnstsw
push
fdivrs
popa
push
int3
push
loope
aas
dec
push
imul
jae
pusha
js
sbb
jmp
sub
cmovb
cmp
adc
adc
dec
adc
inc
jnp
inc
loopne
push
mov
dec
adc
lods
in
add
and
test
mov
add
imul
and
popf
js
movsl
mov
addl
push
xor
lods
shll
test
and
xlat
or
sarl
shrb
jno
add
push
xor
mov
popa
and
aad
test
pop
inc
mov
adc
cmpsb
xor
pop
mov
pop
int
cmpsl
pop
ja
jae
mov
mov
frstor
sub
add
xlat
les
ret
and
ficoml
xchg
push
outsl
imul
or
arpl
lea
jno
int3
push
mov
jle
push
xchg
lret
mov
andl
pop
push
cltd
jl
mov
mov
and
xor
shrl
inc
and
xor
dec
sub
mov
fs
pusha
lods
aaa
popf
lock
and
fsubr
push
out
lret
pop
mov
pop
gs
daa
aaa
xchg
jg
ss
mov
rcrb
mov
sub
push
inc
lods
cmpl
xchg
push
add
sub
mov
mov
cmp
cmp
mov
pop
cltd
stos
cld
jg
xchg
scas
loopne
cltd
adc
stos
push
cmp
jnp
sbb
leave
out
pop
xor
ret
and
stos
in
and
test
mov
mov
pushf
out
sub
out
in
sbb
add
push
mov
push
add
insb
cli
sbb
add
mov
sbb
adc
add
fmuls
or
xchg
sub
sbb
ror
popf
push
push
dec
sbb
xchg
dec
push
ljmp
sbb
pop
pop
adc
das
pop
mov
inc
pop
rcr
sub
hlt
pop
jle
jns
xor
lret
inc
pop
test
in
push
imul
aam
mov
in
or
pop
je
jge
xchg
jl
test
adc
pop
xchg
repz
mov
addr16
mov
pop
push
nop
pop
outsb
movsl
daa
mov
mov
inc
cli
dec
test
arpl
mov
repnz
test
inc
pusha
pop
and
push
adc
xchg
les
jge
sahf
and
js
cmpxchg
pop
scas
mov
stos
sbb
sub
sbbl
xor
xchg
adc
pop
imul
xchg
xor
jo
dec
adc
jl
cld
xchg
inc
addl
pusha
divl
loope
popa
xor
movsb
aaa
mov
push
loope
add
mov
out
mov
cmpsb
inc
andps
mov
sbb
insb
cmp
cmp
lea
inc
repz
fcomps
hlt
js
iret
daa
aad
lods
adc
in
sbb
pop
loopne
cwtl
fidivl
fs
inc
pop
jnp
add
out
js
sbb
adc
mov
jae
cmc
mov
add
in
jp
add
xorl
add
dec
insl
mov
stos
out
push
or
mov
imul
jae
xor
pop
fcompl
xadd
mov
lcall
mov
adc
mov
arpl
add
mov
loope
out
loop
xchg
in
das
xchg
jg
arpl
inc
fcoml
mov
lret
cwtl
adc
add
push
mov
daa
and
cwtl
cmp
push
lods
andb
out
or
iret
fldcw
adc
repnz
mov
orb
or
inc
push
jnp
notb
int
jl
aad
dec
rcr
pop
mov
sbb
test
mov
stc
icebp
sbb
in
or
sub
test
sar
cltd
jne
sti
clc
stos
stos
dec
arpl
push
mov
aam
xor
popl
sub
sbb
pushf
scas
lods
push
repnz
stc
imul
popf
mov
lods
jl
clc
das
loopne
daa
jmp
imulb
cmp
test
sbb
fists
push
and
sub
ds
dec
cmp
into
out
xchg
dec
push
imulb
jmp
mov
jg
jb
js
mov
mov
jl
lods
je
mov
outsl
mov
inc
inc
xchg
jecxz
in
mov
dec
mov
pop
das
cmp
mov
cmp
pop
inc
inc
mov
push
adc
mov
xor
sub
icebp
or
in
cmp
push
pop
cmpsb
jnp
sbb
mov
pusha
mov
dec
leave
sbb
insl
dec
xchg
mov
xor
into
pop
loopne
loope
dec
adc
test
shrd
inc
mov
ds
inc
inc
push
imul
xorb
popf
adc
inc
mov
and
aad
in
dec
lods
add
pusha
sbb
mov
inc
sbbl
test
repz
test
push
jo
sub
nop
cmp
in
sbb
jle
cwtl
jg
jne
lret
push
dec
adc
add
mov
in
and
in
or
mov
das
lret
push
in
out
je
mov
sbb
popa
lods
pop
js
xor
sub
inc
add
xchg
js
das
lret
dec
cmp
mov
ret
mov
inc
movsl
fcmovne
inc
cmpsl
ret
mov
push
sub
mov
lods
jnp
adc
pop
xor
movsl
rcr
movsb
std
loopne
xor
call
jecxz
mov
xorl
adc
sbb
sbb
movsl
sbb
fsubp
pop
repnz
mov
jecxz
or
sbb
and
push
jg
rcll
popa
roll
pop
add
jg
mov
mov
xor
inc
stos
xor
pop
dec
sub
testb
pop
sbb
add
in
lods
test
stc
add
jle
mov
inc
and
out
adc
mov
arpl
sbb
dec
lcall
cmp
jecxz
sbb
mov
sub
enter
mov
push
jne
push
loope
rcr
out
jp
stos
mov
nop
mov
incl
or
cmp
jmp
imul
bound
int3
sub
sbb
pop
ljmp
out
or
pop
sbb
sub
dec
push
push
insl
jno
movsb
scas
xlat
inc
mov
lret
aad
movsb
inc
fiadds
add
cs
pop
push
dec
mov
sbb
adc
test
dec
push
arpl
mov
fs
ja
push
or
add
dec
dec
sahf
out
sbb
mov
fs
es
ret
fistpl
cmp
xor
add
push
pushf
movsl
cmp
push
add
pop
push
xchg
xor
int3
aam
sbb
or
or
fwait
and
lret
mov
scas
into
gs
adc
mov
add
xchg
fcoms
or
test
jbe
sbb
mov
push
mov
mov
mov
pop
dec
hlt
add
or
std
jmp
or
pop
cmpsl
jge
repnz
push
cmp
sub
mov
xlat
pop
movsl
pop
xchg
xor
in
xchg
dec
stc
push
movsb
call
jnp
cmpb
mov
addb
addr16
mov
push
hlt
mov
loopne
repz
daa
or
lods
mov
jg
inc
xor
lds
iret
repnz
add
imul
pmaddwd
fisubl
and
imul
push
mov
xchg
add
xchg
sbb
icebp
stos
dec
aas
iret
mov
out
push
testb
js
sbb
sub
jp
push
mov
loopne
pop
adc
xlat
push
rolb
les
jecxz
fldt
and
inc
imul
push
enter
insl
js
ja
sbbw
int3
sub
jns
cmp
xor
xorl
test
xchg
jge
negb
movsl
pop
pop
adc
leave
std
mov
pushf
fcomps
xchg
pop
mov
leave
jnp
adc
xor
and
gs
cmpsl
pop
aad
stos
jns
push
js
mov
test
sbb
and
mov
dec
icebp
pop
lds
fcom
jbe
sub
mov
out
sti
out
pusha
fwait
repnz
inc
mov
imul
enter
add
popf
xor
and
lcall
lret
aas
mov
aam
lcall
outsb
push
loop
lret
pop
lret
pop
jmp
mov
xor
cmpsl
nop
out
cld
mov
inc
leave
pop
test
xchg
js
ljmp
jno
fstl
jecxz
lock
xor
inc
dec
repz
pop
into
push
leave
xor
push
ret
gs
ja
orb
int3
movl
pushf
inc
pop
lcall
pushf
scas
popf
sub
push
xchg
xor
ret
jmp
data16
sub
incl
xchg
jmp
dec
pop
cmp
sbb
mov
mov
jnp
cli
cld
aas
xor
int3
mov
push
jecxz
mov
sti
cwtl
sbb
out
lret
push
call
mov
add
sbb
pop
inc
aaa
jns
punpckhdq
mov
mov
popa
cmp
or
addb
mov
jno
movsb
ds
adc
outsl
sarl
imul
sub
stc
fcompl
jne
pop
ss
fucomp
push
push
add
aas
test
nop
mov
sahf
loope
mov
out
cmpl
jno
cmpsl
test
fs
or
mov
lods
mov
jb
mov
inc
jecxz
xor
cmp
push
push
jnp
in
xchg
or
fnsave
ret
cli
movsl
jecxz
in
jp
ljmp
in
gs
test
idivb
xchg
push
pop
cltd
push
aas
lret
or
in
fcompl
out
jns
gs
lds
xor
fs
inc
insl
int3
pop
xchg
jno
inc
cltd
fs
mov
jecxz
sub
cmp
fnstcw
rclb
sub
ds
and
mov
xor
mov
jmp
inc
cmp
mov
push
and
ret
movsb
loope
shl
push
add
das
mov
aaa
dec
adc
stc
mov
pop
xor
test
lret
into
test
push
mov
cmp
shll
pop
inc
xor
xor
jmp
scas
fmull
aaa
lret
clc
xchg
jne
stos
out
loope
pop
dec
jg
ja
in
enter
and
mov
adc
and
sub
dec
xlat
push
fsubl
lcall
sub
mov
push
xchg
shlb
out
fdivr
adc
mov
in
dec
jb
jp
out
mov
mov
jp
pop
inc
mov
not
ret
adc
leave
or
mov
lods
stc
dec
pop
sbb
es
out
jns
jb
jo
jmp
insl
pop
inc
cmp
jg
sti
cli
jo
pop
cmp
mov
pop
popf
hlt
push
add
js
or
add
lret
aaa
lret
mov
popa
stos
inc
jno
dec
repnz
adc
nop
or
pop
pushf
int3
add
out
loop
mov
icebp
sub
lea
cmpsb
aad
pop
les
test
pop
test
sbb
xchg
jge
push
iret
out
jmp
arpl
rol
pop
gs
fnstenv
in
push
mov
movsl
lods
pop
add
adc
data16
jge
jo
imul
sbb
jge
pop
mov
xchg
pusha
les
push
fcompl
aam
imul
es
xchg
rcrb
xchg
cli
aad
xchg
add
in
mov
pusha
insl
imul
negl
outsb
addb
adcb
lock
lea
inc
add
pop
jge
sahf
loope
andb
pop
bound
sub
xchg
jl
lcall
lea
fs
fsubl
mov
testl
adc
sub
int3
repnz
xchg
movsb
xor
int
loopne
fwait
popf
mov
or
loop
cmp
cli
xchg
aad
jl
lock
jge
cltd
cmp
bound
cmp
scas
cmp
and
test
sahf
lods
dec
test
mov
sub
jne
icebp
push
xchg
ret
pop
scas
adc
cmc
cmp
and
jge
push
push
push
mov
rcrb
lock
mov
jne
loope
cmpsl
test
lcall
dec
fdivl
hlt
xchg
hlt
inc
clc
sarl
ret
add
fldl
xchg
xor
mov
fst
icebp
cmp
cmovbe
hlt
mov
pop
cmp
out
std
scas
out
sub
cvtps2pd
jbe
push
cmp
pushf
popf
or
push
xchg
mov
sub
stos
std
sub
xor
lock
int
stos
cmpsb
jg
ret
stos
rcrl
int3
mov
scas
xchg
push
dec
addb
insl
dec
sarb
add
push
and
call
or
jae
aam
push
imull
in
stc
pop
adc
push
jno
and
out
add
out
clc
lahf
sbb
rol
das
add
mov
mov
push
es
pop
fldt
mov
jne
mov
hlt
shr
adc
sub
out
push
mov
push
xchg
dec
mov
sbb
ss
mov
mov
pop
xor
add
and
imul
scas
lret
jne
or
dec
cmpsb
sarb
hlt
sub
mov
ds
fisubrs
ficompl
loop
nop
inc
sbb
xor
enter
dec
and
mov
dec
sbb
sahf
lahf
mov
idivl
push
adc
movsl
jno
shlb
sbb
fsubs
pop
cmp
fcomps
nop
test
out
fimuls
arpl
loopne
out
mov
ja
adc
add
jb
popa
push
fisttps
pusha
mov
jb
cmp
pop
xor
loope
lea
mov
stos
fldcw
xor
jl
lahf
mov
pusha
mov
orl
mov
push
das
or
mov
test
cmp
stos
ror
lret
js
imul
jo
aam
psrlw
cmpsb
xor
mov
cvtps2pi
sahf
dec
cltd
adc
sti
andl
pop
dec
aam
es
nop
sub
das
dec
lock
mov
cmovbe
dec
mov
and
add
gs
push
dec
repz
xchg
lds
mov
sarb
pushf
cld
ljmp
stos
stos
and
xor
sti
cmp
mov
and
add
cmp
mov
jbe
movsl
push
inc
dec
add
fstpl
inc
int3
fsubr
enter
hlt
inc
dec
sbb
push
jns
enter
push
mov
push
in
repz
aad
pop
sbb
ret
push
xchg
fdiv
test
mov
shrb
lret
xchg
or
xor
pop
pop
cmc
or
dec
push
cltd
out
xchg
lret
xchg
test
add
adc
push
xor
lods
out
push
adc
mov
jae
addl
push
rolb
dec
mov
ljmp
mov
push
add
sub
pop
sti
sbb
fstpl
aaa
xchg
add
jg
cmp
mov
ljmp
xor
popl
stos
mov
shrl
push
fistps
sbb
js
in
add
inc
inc
push
dec
xor
test
mov
outsb
and
adc
nop
test
mov
aas
mov
loopne
sbb
daa
adc
jne
and
aas
adc
shlb
mov
lods
sbb
int3
inc
jnp
sub
jmp
repnz
mov
test
and
mov
push
movl
add
dec
sub
push
pop
adc
jge
push
out
std
xor
adc
bound
andl
cmp
pop
xchg
bound
jl
mov
sbb
popf
sbbl
sbb
xlat
mov
mov
int3
sub
imul
je
jo
movsb
pop
bnd
mov
lods
lods
fiadds
sti
or
enter
jl
fidivs
sbb
addb
mov
inc
pop
inc
dec
aam
out
sbb
nop
ja
xchg
or
push
and
not
shrb
adc
es
je
in
je
and
pop
in
xchg
mov
mov
mov
push
ret
fiadds
mov
add
dec
icebp
xor
ret
pop
xchg
popa
aas
divl
xchg
movsb
push
pop
jno
adc
data16
shlb
cmp
lods
or
cmp
jle
jmp
mov
mov
inc
inc
aaa
pop
repnz
daa
mov
ss
imul
adc
adcb
sahf
out
xor
adc
and
das
or
pop
cmc
dec
dec
pop
dec
jge
xor
mov
mov
mov
dec
popa
imul
jne
inc
xor
xchg
adc
cli
shl
pushf
adc
add
aaa
and
push
xchg
data16
rclb
shrb
inc
test
popa
sbb
push
cltd
subb
mov
inc
mov
shll
cmp
cli
hlt
adc
or
adc
inc
test
stos
pushf
jbe
lcall
ficoms
fimuls
inc
sub
add
inc
fildll
andb
loop
and
aam
rolb
push
mov
lea
ljmp
push
cli
lret
sti
pop
push
push
sub
es
lock
inc
cmp
dec
add
nop
xlat
pop
add
in
out
insb
ret
cmc
cmp
sahf
cmpsb
aam
push
lret
jno
outsl
mov
adc
icebp
inc
xor
xor
rorb
test
add
insb
dec
fcmovnb
movups
js
cmp
lret
push
mov
mov
mov
stos
dec
lcall
inc
or
mov
popf
pushf
push
push
fnstenv
adc
outsb
pop
in
xchg
lret
pop
jno
mov
ljmp
sbb
pop
jl
jmp
or
repnz
ret
adc
mov
imul
dec
jg
loop
ljmp
ljmp
mov
into
mov
rol
xlat
push
and
in
les
mov
movsl
pop
sbb
inc
push
xor
int
jge
imul
xchg
les
cwtl
jb
xchg
or
aam
cmp
sti
sbb
mov
jmp
or
mov
mov
adc
jae
jge
push
rcr
mov
sub
fiadds
hlt
mov
sub
popf
and
ret
in
mov
in
lcall
out
pushf
add
insb
das
pop
push
jb
xor
or
gs
inc
push
pop
mov
sbb
aad
cmp
imul
push
cmc
fcmovu
jne
fsubrl
fnstcw
in
iret
pop
jno
mov
push
adc
lahf
jmp
jmp
push
lods
das
add
pop
mov
jae
or
mov
adc
mov
pop
subl
bound
std
or
test
insl
in
in
mov
es
or
das
mov
stos
push
loope
inc
inc
fdivrl
daa
insl
mov
rcr
add
pop
add
lret
mov
adc
aam
xor
cmp
xchg
mov
insl
pop
dec
cwtl
orl
cmc
inc
jae
in
pop
jne,pn
shrl
jl
mov
mov
insb
loop
dec
pop
negl
pop
pop
push
fmuls
lcall
xchg
mov
loope
push
mov
or
sub
aad
xchg
xchg
xchg
add
insb
push
adc
ret
fnsave
inc
stos
mov
xchg
out
mov
jo
cmc
stc
imul
andl
mov
fildll
and
cmp
pop
movsl
xchg
inc
fstpl
xchg
shlb
adc
dec
add
testl
add
jle
iret
fisttps
inc
pop
mov
jo
lahf
fisttps
ret
in
mov
popa
mov
fnstcw
add
pop
mov
adc
orb
ret
xchg
dec
or
test
std
rcrl
inc
jnp
pop
rcrb
je
xchg
lea
xchg
es
stos
in
ja
or
loope
imull
xor
sbb
bound
inc
nop
mov
js
or
jp
cwtl
sbb
mov
cli
loope
dec
bound
loopne
int
notl
mov
jl
xlat
xor
fdivrl
stc
lea
inc
out
aam
les
push
xlat
mov
pop
out
and
and
jo
jp
inc
sbbb
jbe
xchg
std
mov
sbb
xchg
cmp
sbb
aas
fstpl
inc
pop
sbb
aad
popa
mov
add
shrb
shrl
push
mov
in
mov
xchg
mov
stos
cmc
cmpsl
std
sbb
daa
push
orb
fimull
adc
xor
fldt
mov
les
mov
sub
sbb
das
pop
mov
popa
mov
insb
adc
sahf
cmp
es
outsl
sbb
into
jmp
iret
mov
mov
sub
ret
jmp
mov
fadd
cmp
inc
pushf
lret
pop
and
hlt
pop
addr16
xor
cwtl
add
and
add
dec
fdivs
inc
push
out
mov
and
pushf
mov
and
xor
pop
and
cmp
es
popf
add
jge
inc
lock
arpl
imul
ljmp
add
aaa
sbb
inc
sbb
jg
dec
dec
mov
test
mov
fnstenv
or
push
dec
mov
bound
mov
sti
sbb
push
pop
inc
and
outsl
dec
stos
jle
lods
jo
adc
clc
add
daa
sub
fwait
jge
mov
daa
arpl
push
test
mov
push
lahf
or
pushl
sbbl
cmp
imul
das
out
outsb
mov
sbb
aaa
pop
cli
jo
sub
inc
pop
cmp
pop
test
mov
sub
in
dec
clc
scas
int
clc
push
mov
loopne
test
repz
sbbb
int
cltd
and
outsb
or
cmc
stos
xchg
ficomps
push
scas
inc
addr16
cwtl
xchg
push
fnstsw
adcl
xchg
add
push
stos
cmc
mov
jae
xchg
test
leave
out
mov
out
rcll
lea
pop
int3
inc
jmp
pop
inc
xlat
and
mov
sub
call
pop
mov
clc
pop
jne
xor
mov
push
mov
das
inc
les
jle
test
xchg
mov
jo
cmp
ja
ss
dec
cltd
aam
sbb
dec
repz
xchg
in
shll
cmp
out
fdivrl
cmp
test
adc
ss
out
add
jmp
divl
mov
xor
pop
push
fistpl
cld
inc
loope
push
jg
pop
lods
pushf
outsl
mov
jge
push
sbb
orb
ret
add
icebp
mov
out
cmp
ret
scas
and
pop
jae
mov
xor
cld
mov
jmp
or
add
mov
pop
mov
rorl
jo
outsb
sbb
les
out
les
call
mov
js
mov
nop
mov
dec
cwtl
je
loope
clc
pop
inc
movsl
or
outsb
stos
shll
stc
subl
adc
insl
inc
adc
mov
ljmp
and
sub
pushf
pushf
adc
test
pop
hlt
mov
pop
mov
pop
pop
adc
out
xlat
enter
mov
cld
in
pop
loope
mov
mov
mulb
xchg
mov
xchg
insb
mov
pop
lret
lret
fcomi
xor
cmpsb
dec
push
jne
sub
stos
fisubl
xchg
loope
je
scas
mov
dec
cmp
lds
fldt
leave
dec
inc
cmc
daa
dec
or
out
aam
das
jmp
mov
jne
push
jg
fstpt
ds
and
add
jg
and
push
mov
pushf
lret
imul
mov
jp
jb
push
jecxz
insl
pop
sub
mov
popf
cli
jnp
sub
data16
fnstsw
cmpl
dec
inc
std
inc
push
fwait
hlt
dec
es
dec
or
stos
std
adc
aad
push
xchg
cmp
push
mov
mov
xchg
mov
aaa
inc
jne
aam
jl
or
push
pop
or
lcall
jg
sub
adc
mov
aas
dec
push
add
jge
jae
fisttps
dec
pop
ds
dec
bound
jo
dec
imul
ret
push
std
pushf
mov
sub
and
and
add
cmp
adc
test
adc
pop
xor
push
arpl
mov
rorl
test
dec
push
sub
cmp
aaa
lods
mov
jle
daa
push
adcb
and
data16
pop
shl
mov
pop
dec
xchg
mov
or
fcomip
push
mov
icebp
hlt
popf
rorb
pop
test
xchg
jge
test
lds
loope
mov
sub
dec
mov
mov
mov
mov
sti
cmp
add
pushf
aaa
stos
mov
mov
mov
adc
mov
aam
cmp
lahf
sub
testl
inc
int
test
or
rcrb
cmpsl
in
and
pop
in
outsb
in
mov
mov
lods
sahf
xor
loopne
cmp
fisubs
lods
xchg
dec
cmp
fimull
push
out
xchg
ljmp
mov
jmp
in
mov
imul
mov
sbb
xchg
xchg
adc
push
sarl
sbb
sub
sbb
subl
push
ss
fstpt
stc
test
sbb
push
frstor
popl
cmp
outsl
fwait
je
or
mov
cmc
lea
sti
shl
ds
or
insl
sbb
sbb
rclb
xor
pop
test
push
fiaddl
mov
cmp
cmpsl
neg
push
in
mov
lcall
jp
xlat
mov
cmp
adc
in
scas
dec
cmp
xchg
or
jle
faddl
out
add
sub
mov
das
sub
arpl
cmp
das
ret
mov
mov
je
pop
lret
xchg
and
jp
pop
sti
ret
test
sub
fildl
push
and
mov
inc
enter
es
jmp
jmp
cltd
repz
dec
sub
cmp
enter
int
mov
jg
fidivl
sub
pop
adc
mov
clc
xchg
arpl
or
mov
ja
scas
push
cmp
insl
cwtl
in
sub
jns
inc
xchg
xlat
lock
mov
fsts
sbb
jne
mov
cmc
add
jecxz
xor
test
repnz
loope
sbb
in
jb
and
popf
dec
mov
xor
sbb
cmp
subl
stos
ja
add
xlat
jae
inc
xchg
dec
mov
cmp
pop
fcoms
cmp
ja
jne
mov
lds
stos
pop
sbb
ja
movsl
test
lods
fnstsw
test
orl
repnz
xlat
inc
into
fwait
stc
dec
lcall
loop
test
cwtl
bound
sbb
loopne
aaa
fdivrs
ja
mov
pusha
std
mov
mov
push
jmp
push
push
inc
rcl
inc
push
pop
jb
sub
xchg
daa
adc
lds
mov
and
int3
cmova
push
sub
fsubs
and
lret
push
pop
add
in
ds
adc
scas
push
push
inc
mov
mov
mov
les
insl
mov
ret
xchg
mov
cmpsl
push
cmp
xor
jno
test
orl
in
mov
add
pop
test
mov
fimull
inc
test
inc
int3
adc
pop
call
push
in
xor
xor
loope
xor
push
fidivrl
arpl
push
aas
push
add
ss
mov
es
xchg
cltd
sub
mov
loop
in
xlat
mov
pusha
lods
cmp
sub
test
mov
adc
in
fildll
mov
imul
fs
ss
in
xor
data16
idivb
gs
xchg
in
rclb
test
js
arpl
shll
mov
add
fldenv
mov
xchg
enter
jecxz
iret
xor
jg
xor
call
mov
lock
mov
inc
add
inc
push
mull
pushf
jno
popa
inc
dec
aaa
mov
cmp
movsb
push
popf
rcll
call
mov
mov
hlt
push
cmp
push
popa
fnsave
fistpl
scas
ja
mov
sbb
aas
popf
dec
cli
popf
pusha
sbb
pop
cmp
nop
pop
push
lea
pushf
cs
ret
cltd
daa
inc
add
out
icebp
jmp
xor
or
mov
mov
sub
sub
add
xchg
into
sbb
adc
sbb
shlb
movsl
test
or
mov
push
jecxz
sbb
hlt
push
test
sti
adc
arpl
lret
cmp
mov
jne
insl
in
xchg
dec
mov
into
sub
push
outsb
clc
es
and
repnz
or
or
jl
imul
and
in
adc
add
lcall
je
enter
add
call
pop
inc
adc
mov
mov
test
in
test
and
lahf
mov
jg
push
push
add
lods
mov
stc
cmp
add
pop
ljmp
mov
shl
idiv
jle
mov
cs
push
into
push
fdiv
mov
cwtl
xlat
pop
insl
mov
cli
push
mov
cmp
and
jp
fstpl
inc
lea
sub
cli
ret
fmuls
insb
int
add
add
mov
ljmp
dec
lock
add
adc
inc
cmp
mov
xor
xchg
test
je
mov
mov
sub
stc
insb
push
outsb
and
jns
push
push
mov
fsts
push
push
sub
ja
pop
jmp
data16
cmp
xchg
ret
int
fstps
add
inc
xor
das
inc
xchg
in
ror
sbb
add
push
bound
mov
test
and
adc
aad
jle
addb
push
jns
dec
dec
dec
mov
popf
jns
cld
push
psubb
sub
daa
add
js
adc
popa
sti
pop
xchg
jl
in
mov
aam
lea
and
mov
mov
data16
or
testl
mov
add
sbb
jns
add
pop
dec
sub
sbb
pop
inc
outsb
sbbb
iret
mov
push
lock
frstor
dec
mov
iret
fs
push
insl
xchg
jbe
outsl
inc
cs
xlat
sbbb
jns
in
enter
mov
sub
add
pop
fwait
movsl
mov
ds
cltd
xor
add
sub
push
cltd
hlt
out
inc
mov
call
aam
mov
lds
cli
pop
add
xchg
pop
or
adc
xor
aaa
jg
push
in
mov
mov
in
adc
inc
or
jmp
push
add
fsubrp
mov
xchg
push
push
imul
aaa
inc
ss
into
push
rorl
das
imul
out
sarl
sbb
jle
ficoms
mov
fstps
test
mov
push
inc
push
sbb
loopne
inc
icebp
lock
rcrl
insl
add
mov
daa
stc
mov
add
ljmp
mov
or
iret
repnz
push
lds
out
sbb
adc
int3
xchg
and
mov
xor
sub
mov
mov
pop
mov
imul
sbb
mov
shll
jo
adc
push
cmpsl
mov
lcall
shlb
enter
xchg
fcompl
outsb
je
cmp
mov
inc
mov
lods
sbb
xor
xchg
cld
sbb
sbb
mov
mov
xchg
or
add
pushf
xor
fstpl
xchg
mov
incb
lcall
into
orl
jle
popf
int3
adc
ret
pop
rcl
mov
mov
mov
jno
ss
imul
test
and
inc
push
daa
push
cmpb
cmpsb
mov
xor
out
ja
movsb
rol
mov
sub
clc
in
push
ror
jp
bound
imul
sub
inc
notb
sub
leave
aaa
mov
inc
lods
xor
loop
pop
lock
add
push
add
pop
shll
mov
scas
sub
ss
popf
icebp
outsl
sbb
fildll
stc
jmp
pop
fimuls
dec
xchg
sbb
or
adcl
push
stos
in
ljmp
dec
out
xchg
les
aam
fwait
shlb
xor
xchg
je
cs
ficoms
jmp
aam
or
test
lahf
pushl
jecxz
xchg
push
out
popf
xor
fists
enter
push
outsl
mov
add
test
adc
mov
xor
pop
push
cmp
sbb
sbb
cs
dec
clc
rorb
stos
les
jmp
mov
xlat
in
add
inc
lods
push
xor
arpl
ja
pop
or
pop
movsb
in
popf
fisubrs
dec
repnz
or
out
sbb
xor
dec
and
repz
mov
dec
stc
mov
in
sbb
pop
xchg
xor
stos
sub
jl
mov
fisttps
inc
pop
and
jbe
inc
mov
ret
pop
arpl
xor
cmp
cltd
dec
mov
movsb
or
xchg
jae
popa
mov
mov
scas
pop
jne
mov
loop
mov
out
push
mov
xchg
pusha
lahf
icebp
dec
and
rcrb
fisubs
dec
xor
in
mov
pop
ds
into
cwtl
cmpsb
push
lods
lds
cs
pop
fwait
mov
xor
xchg
outsl
cmpsl
cmp
push
add
mov
mov
push
mov
mov
cli
push
sub
rolb
out
adc
xlat
mov
pop
insb
xchg
insl
add
cmpsl
insl
sti
sbb
push
cltd
shr
clc
rclb
adc
or
sbb
lods
into
shlb
inc
das
cmp
pop
pop
and
std
push
jmp
adc
pop
xchg
in
lcall
psubw
imulb
cmpsl
mov
or
inc
inc
inc
roll
xchg
mov
mov
dec
lea
lcall
fidivs
ret
pop
ss
call
mov
fldenv
jno
jecxz
or
fdivrs
pop
dec
or
sub
jecxz
sbb
rcll
cmc
cmp
ds
or
loop
lret
push
movsb
push
sub
sbb
lock
xchg
lea
mov
sub
cmpb
adc
push
mov
sub
es
mov
dec
mov
sbb
jne
mov
push
adc
std
je
jns
test
scas
mov
sbb
xchg
std
rcl
addr16
testl
fmull
xor
enter
or
sbb
pusha
je
sbb
test
imul
aad
psraw
pop
push
or
scas
and
mov
fcmovu
mov
leave
xor
in
or
push
sbb
cmpsb
movsb
outsb
adc
test
jno
lret
cltd
in
sbb
fdivs
adc
xchg
sub
add
fmull
push
iret
incb
scas
xor
mov
ja
pop
and
and
mov
add
xchg
out
inc
xchg
xchg
jmp
cmp
adc
mov
xchg
scas
cmpsb
cmc
mov
hlt
cmpsl
xchg
pop
hlt
das
xor
or
mov
pop
shll
ljmp
stos
inc
jmp
shlb
cmp
dec
lcall
sbb
xor
sti
jb
xchg
inc
es
loope
xchg
inc
mov
mov
xchg
outsl
adcb
fiadds
and
shrb
push
adc
adc
insb
lods
cs
rol
xchg
dec
dec
mov
mov
cs
je
mov
cmp
daa
sbb
xchg
mov
icebp
xchg
addr16
pop
inc
mov
int3
jbe
xor
jne
add
hlt
adc
and
in
lret
psrlq
test
inc
dec
cmc
cmpsb
dec
jg
es
fisttps
insl
shrb
jne
mov
jne
mov
jns
or
push
pop
sub
sbb
sub
xchg
add
aad
xchg
pop
pop
mov
push
shrl
es
out
cli
call
mov
and
outsl
lods
out
les
xor
dec
add
hlt
lahf
or
push
cwtl
dec
aaa
xchg
sub
test
sub
mov
ds
negl
or
jno
pop
jne
loopne
iret
loop
es
cmpsb
and
stos
sbb
sbb
fdivrl
idivl
repnz
decl
lods
mov
popf
std
mov
push
or
int3
mull
das
xchg
inc
hlt
xchg
test
pushf
mov
and
jge
push
sbb
mov
add
pop
add
adc
lea
and
jmp
xchg
andl
cmp
lcall
xor
fbld
cmpsb
or
jmp
xchg
add
xchg
dec
mov
aad
mov
pop
iret
mov
fbld
pusha
push
loopne
mov
cwtl
shrb
sbbl
and
shlb
xchg
mov
mov
daa
mov
sbb
loop
mov
mov
push
inc
in
add
leave
mull
iret
add
lret
daa
sahf
gs
cmp
ss
mov
lock
in
push
pop
push
mov
jb
or
xchg
orl
out
je
jno
fprem
shl
dec
cltd
adc
mov
mov
cmp
jge
mov
loope
fistpl
ret
divb
in
mov
subb
mov
xchg
mov
xlat
sahf
xchg
inc
inc
cmc
pop
adc
or
cmp
mov
outsb
and
dec
push
cmpsb
leave
xchg
into
pop
fs
pop
pop
jnp
and
repz
lea
inc
outsl
jb
pop
das
arpl
inc
pop
lahf
pusha
xlat
cmp
dec
push
xchg
rcrb
icebp
or
xor
mov
jle
xlat
mov
and
ds
mov
jecxz
cmp
loopw
cmp
fdiv
cmp
fs
cmc
verr
pop
sbb
in
jne
or
dec
loop
insb
dec
add
jns
stc
scas
fs
and
ret
sbb
push
shlb
mov
cmpb
outsb
in
xchg
mov
mov
or
ja
push
xchg
test
pop
push
gs
daa
arpl
repnz
daa
enter
mov
pop
lods
push
lret
xor
xor
inc
cmp
clc
inc
fmuls
adc
sub
and
rcll
mov
jae
jns
ds
inc
or
sysenter
aas
test
rclb
loopne
shr
cmpsl
sub
imul
cmp
rclb
push
cmp
jge
pop
xchg
pusha
push
adc
xchg
inc
add
mov
adcl
lcall
fsts
sbb
cli
or
sti
add
packssdw
add
xchg
out
pop
and
jmp
imul
mov
sbb
pop
jne
pop
shrl
ja
mov
fmul
xchg
fmul
sbb
jnp
jb
rcrb
mov
cmp
mov
pop
mov
jmp
es
inc
out
fsubr
scas
jp
addr16
push
cli
jnp
outsb
sbb
xor
movsl
pusha
out
and
push
push
stos
out
scas
lcall
cmp
xor
ds
jbe
push
xchg
adc
or
adc
fnstsw
stc
and
jl
dec
sub
shlb
rorb
lods
cmc
fmull
pop
in
mov
jo
add
aam
mov
mov
insl
test
xchg
aad
pop
jg
and
lret
repz
insl
int
lds
adc
push
les
jle
sahf
xchg
hlt
pusha
lds
cltd
xlat
enter
xchg
iret
outsl
int3
sarl
inc
xorl
cmp
lock
outsb
ljmp
jge
pop
test
test
lds
adc
ficompl
xor
clc
movsl
loop
or
js
aaa
testb
xlat
xchg
js
divl
push
inc
sbb
into
pop
push
adc
cmpsl
aaa
ljmp
inc
and
mov
push
andb
mov
negl
cmp
mov
cltd
xchg
mov
aas
fnstsw
cmc
pusha
xor
sub
jae
xor
or
loopne
in
inc
jnp
je
cs
mov
fadds
inc
test
cmp
shrb
out
pop
sbb
inc
mov
xchg
fcmovbe
cld
jae
in
add
xor
outsl
jns
mov
lds
ret
clc
je
and
mov
sarl
dec
sbb
dec
mov
stos
cld
rorl
lods
call
cmp
sub
ja
nop
xchg
and
inc
lret
push
stos
pushf
or
cld
add
mov
and
test
push
cmp
pop
cmp
mov
xor
mov
xor
test
ret
cmc
xchg
jb
mov
or
insb
xchg
adc
add
mov
and
push
dec
lea
xor
jmp
pop
xor
add
popf
push
jmp
rclb
mov
inc
neg
inc
or
add
leave
jno
mov
sbb
shll
fcoms
xchg
mov
iret
mov
and
jbe
sbb
clc
lcall
jge
test
cltd
and
imul
xor
pop
mov
or
test
xor
test
add
enter
scas
cmp
jge
sbb
and
cmp
push
out
or
mov
dec
and
inc
jmp
fs
lret
out
mov
jnp
sub
lock
mov
pusha
inc
mov
fs
jb
ljmp
cmp
das
adc
mov
je
jge
or
xchg
dec
xor
mov
in
cmp
cmp
fistl
jb
test
fistpl
je
add
cmp
or
mov
lcall
shrb
movsb
jecxz
inc
sub
jo
cld
mov
inc
inc
lods
subb
mov
sbb
mov
inc
add
xchg
out
sarl
cmpsb
fs
add
repz
fwait
mov
dec
repnz
xor
ret
cltd
loope
add
mov
mov
push
test
shlb
mov
dec
aaa
jae
xchg
adc
out
testb
or
pop
aad
dec
jmp
cmp
fisttpll
add
dec
test
lods
dec
jle
inc
test
jnp
adc
fdivrs
hlt
stos
imul
xchg
fistpl
push
negl
test
lahf
fistpl
hlt
aam
mov
sbb
cmp
mov
pushf
jl
add
scas
dec
ja
pop
adc
mov
add
add
cli
xchg
jmp
mov
imul
mov
add
push
into
push
ss
or
aas
jge
ret
dec
es
push
cs
in
push
rcrl
std
jg
or
jns
jle
xchg
cmp
fnstenv
mov
sbb
xor
push
cli
mov
pop
mov
mov
push
and
xorb
push
shl
mov
cs
jp
ss
push
mov
ror
sbb
ljmp
xchg
rcrb
sbb
mov
loopne
lods
jbe
fisubl
fcoms
loope
repz
out
addr16
clc
xchg
mov
pop
rcrb
dec
xchg
adc
pop
icebp
mov
jo
sub
mov
push
mov
sbb
push
dec
gs
iret
mov
jno
cmp
cmp
imul
leave
fcom
lahf
pop
subl
add
jg
dec
xchg
jbe
add
ror
fptan
data16
mov
mov
dec
arpl
xchg
mov
jp
lcall
daa
push
es
in
add
jbe
subl
andl
push
pop
jns
jecxz
es
lcall
xor
sbb
test
loope
aam
dec
movsl
lods
sbb
fdivs
sbb
xor
call
in
les
mov
cmpsb
or
movsl
cli
mov
das
cmpsb
or
xor
jb
jp
int3
fisubrs
pop
push
xor
dec
int3
flds
std
mov
in
add
pusha
add
in
jno
sub
stos
inc
data16
mov
fcmovnb
test
pop
stos
mov
push
dec
lcall
out
es
inc
or
jae
xchg
outsb
dec
stos
ja
pushf
and
cld
fwait
sub
int
int
stos
mov
loop
and
fcomi
mov
aam
mov
jmp
orl
or
fs
loopne
jp
pop
and
mov
in
mov
or
jb
xchg
fldl
cld
or
andl
mov
ret
or
jg
mov
mov
push
mov
and
out
pop
ss
adcl
fildll
xchg
xlat
xchg
outsl
fimuls
adc
lahf
sbb
push
gs
popa
inc
rolb
repz
divb
and
in
adc
xor
pop
imul
popf
mov
out
inc
lock
jb
push
cs
jecxz
in
enter
aad
xor
dec
pop
rcll
enter
cs
and
xchg
in
lea
push
ds
jbe
test
mov
pop
sbb
jp
dec
mov
xor
add
stos
mov
add
xor
pop
outsl
loopne
dec
mov
push
inc
lcall
daa
xor
and
sahf
ja
or
xchg
adc
rol
fldcw
add
movsl
pop
xor
add
test
push
mov
mov
pushf
pop
adc
cmp
mov
push
or
jge
in
xlat
mov
sbb
into
push
cmp
popa
into
inc
sub
cmpsl
scas
testb
inc
daa
stos
push
rolb
mov
xchg
out
hlt
mov
arpl
mov
cmp
mov
add
xchg
popa
or
loope
bound
fs
mov
in
mov
push
jecxz
loope
fsubrp
jmp
je
js
lods
dec
popl
adc
add
jge
push
cmpsb
jg
sti
je
adc
rcrl
movsb
out
dec
sub
pushf
jno
or
and
xor
push
push
and
cmp
add
jae
and
shl
and
adc
dec
int3
rcr
xlat
sbb
pop
pop
add
mov
imul
pop
arpl
fsubrl
mov
cmovs
out
cmp
mov
ret
orb
popa
inc
fdivrs
stos
fs
dec
dec
mov
mov
inc
jge
and
dec
cmp
and
loope
adc
or
inc
adc
xchg
mov
jl
pop
insb
add
mov
fwait
lds
jp
and
pop
sub
movsl
mov
xorb
not
icebp
aam
xchg
lods
pop
cwtl
mov
fmull
insl
mov
xchg
dec
and
pop
ffreep
subb
cmp
nop
and
roll
adc
and
pop
adc
cmp
imul
cmp
mov
xchg
xor
ret
scas
cmp
loopw
in
xorb
fs
sub
sub
xor
push
inc
add
xor
cmp
outsl
mov
xor
mov
pop
int
adc
jp
enter
jge
int3
jg
adcb
enter
jle
in
hlt
mov
push
cmp
fmull
mov
iret
jae
test
xor
pop
add
repz
lret
movsl
outsl
sti
mull
push
imul
push
and
sub
lds
movsl
data16
pop
insl
sbb
and
mov
sub
or
stc
insl
ret
inc
stos
jbe
cmp
xchg
cld
and
icebp
push
insl
arpl
aaa
inc
xor
xchg
aaa
sbb
push
mov
mov
mov
fs
mov
mov
rorl
mov
jge
xor
jg
mov
insb
sbb
imul
dec
and
pop
divl
sbb
negb
roll
test
pop
adc
push
xchg
ret
leave
cmp
push
push
sbb
loopne
cmp
imul
mov
or
push
xor
dec
sar
nop
sub
push
dec
outsl
cmp
loopne
jmp
jmp
jmp
mov
shll
scas
xchg
add
and
mov
aam
lcall
fcmovnu
pop
popf
mov
or
inc
cmp
cmp
and
mov
das
jo
xchg
jmp
andl
inc
lcall
lods
and
fistpll
jle
push
mov
std
iret
adc
lret
icebp
sbb
xlat
arpl
hlt
in
sub
mov
xchg
and
dec
in
jno
out
xor
lret
testb
fistl
mov
adc
mov
adc
insb
dec
add
das
mov
cwtl
inc
dec
dec
fisttpl
xchg
push
pushf
mov
imul
pop
push
mov
out
daa
jo
or
leave
pop
ja
sbb
jno
xor
rolb
sbb
stos
inc
push
cmp
push
push
or
std
adcl
push
xchg
test
lcall
flds
daa
add
int3
sarb
out
lret
or
jb
inc
fidivs
es
xchg
pop
dec
fwait
jmp
dec
test
mov
fistpl
adc
loop
lret
lock
mov
nop
or
subl
adc
in
psubsw
pop
lods
call
xchg
ja
and
jmp
scas
jg
push
call
adc
add
push
jo
push
fs
addr16
js
and
daa
jns
adc
sbb
pusha
shlb
ljmp
mov
push
retw
push
leave
push
xchg
insb
adc
int3
or
incl
inc
in
and
mov
jg
es
cli
scas
push
addr16
lahf
or
sbb
cmp
sbb
add
mov
cmp
or
add
dec
mov
test
sub
arpl
stos
pop
xchg
mov
mov
sbb
or
mov
and
pop
sub
inc
mov
in
inc
mov
imul
push
nop
mov
mov
mov
xchg
addr16
mov
push
jmp
call
mov
inc
jge
ljmp
adc
enter
ljmp
mov
cmp
nop
mov
jl
rcll
loopne
pop
push
mov
jae
jp
mov
out
xchg
and
jg
push
inc
pusha
jnp
cwtl
enter
cmpsl
fisttps
dec
imul
push
add
xchg
inc
sub
movsl
ljmp
dec
xor
es
bound
popa
nop
repnz
xor
push
inc
cmp
in
adcb
jns
sahf
mov
push
sbb
sbb
push
fisttpll
or
ret
outsb
xchg
popf
push
arpl
ja
cmp
xor
scas
addr16
addr16
push
mov
mov
adc
push
xor
jae
mov
jo
dec
cmp
pop
xchg
jns
inc
xchg
xor
test
or
xor
add
call
sub
push
and
xor
pusha
add
jle
xor
jmp
and
mov
std
jo
rcrb
js
add
xor
mov
sub
ss
push
dec
int3
movsl
cmp
xor
pop
cmp
jp
or
scas
cmp
mov
js
push
add
lock
lret
cltd
aaa
into
or
pop
rcl
push
push
cwtl
sbb
test
cltd
sahf
jns
test
mov
shrl
adc
scas
xchg
or
and
pop
sbb
xor
inc
incb
sbb
mov
mov
xchg
lods
dec
pop
pop
imul
or
mov
mov
je
pop
cmpsl
mov
cmp
add
stc
fwait
jp
sbb
pusha
inc
pop
jmp
clc
popl
ljmp
mov
popf
dec
pushf
cwtl
stc
leave
sub
xlat
pusha
int3
adc
add
stos
jo
stos
xchg
popa
and
cmp
cmpsb
dec
rcrl
jo
test
daa
pop
mov
nop
jle
loop
call
mov
cmp
jle
jo
imul
pop
andl
add
fidivl
push
mov
into
bts
aas
sub
mov
loop
lret
and
mov
cmp
cmpsb
mov
sarb
inc
stos
arpl
jge
aam
xor
sti
jecxz
jo
adc
mov
fs
lcall
test
cmp
clc
lods
mov
cmp
les
imul
cld
dec
das
dec
je
nop
mov
lock
cld
mov
dec
fstps
fstps
pop
test
sub
mov
push
xor
sarl
xor
mov
cmpsl
pop
in
lret
dec
lods
dec
pop
inc
push
pop
xchg
mov
movsl
pop
ret
test
fisttps
arpl
jl
clc
int3
xor
out
ret
out
adc
int
in
adc
push
imul
mov
nop
xchg
mov
jae
pop
mov
call
dec
mov
mov
dec
es
aam
call
pop
sbb
mov
out
and
iret
cmpsl
pop
sub
lret
fsubrl
push
pusha
and
pop
sbb
popa
pop
scas
call
dec
pop
xchg
shrl
sbbb
dec
dec
lret
cmp
jb
aam
xor
inc
xchg
and
cbtw
mov
or
sbb
mov
jge
scas
movsb
cmp
jns
imull
int3
leave
mov
cmp
jecxz
fidivs
or
and
fadds
push
cld
jb
xchg
fnstsw
outsb
pop
pop
xchg
mov
lods
loop
fistpl
mov
jo
daa
dec
pop
lock
adc
shlb
pop
xchg
es
lods
repnz
ss
xchg
inc
mov
jo
stos
cmp
adc
sahf
dec
loopne
add
mov
subb
sub
xor
mov
add
sbb
imul
adc
lods
lds
pop
xchg
sbb
imul
fidivl
dec
adc
call
iret
sarl
xchg
xchg
push
call
jl
push
mov
jecxz
popa
inc
xchg
add
sarb
outsl
imul
repnz
and
hlt
pop
xor
fstl
cmp
pop
cmpsl
xchg
sahf
mov
jbe
sbb
mov
and
mov
cmp
je
add
lock
add
cmp
jns
dec
rorb
sub
leave
pop
fnstsw
push
xchg
mov
pop
cmp
std
sub
in
fimull
sub
dec
mov
iret
push
dec
mov
mov
xchg
mov
loopne
sub
pop
jnp
mov
xor
ss
mov
sti
dec
cmpsb
jle
in
mov
add
movsb
push
shrl
mov
mov
jp
ljmp
sbb
cmpsl
add
outsl
and
popf
push
jne
sbb
pushl
and
data16
xchg
mov
test
cmpsb
mov
out
xchg
sarb
add
mov
add
xor
push
arpl
jl
in
jl
jl
stos
add
mov
or
mov
adc
in
add
xor
or
pusha
dec
ss
lods
cmp
loop
movsb
pop
push
pop
adc
cmp
pusha
inc
aaa
ss
pop
std
pop
pop
into
inc
aad
call
popaw
pusha
mov
push
dec
add
loop
outsb
adc
fisttpll
pop
pushf
dec
shrb
loope
cmc
lcall
roll
idiv
in
or
xlat
jb
nop
jge
sub
jbe
insb
dec
es
arpl
pop
dec
insl
lcall
repz
or
push
push
sbb
cli
outsb
mov
pushf
vrcpps
mov
push
cmp
and
imul
movsl
in
push
incb
cmp
fldenv
clc
stos
and
xchg
xor
fwait
into
imul
cmpb
rorl
inc
add
fdivrl
shr
adc
mov
in
imulb
and
ficoml
hlt
pop
jg
mov
xor
roll
iret
imul
cmpb
cmp
daa
pop
pop
fnstcw
add
adc
sbb
les
decl
jg
xor
sbb
cmpsl
loopne
gs
add
cmc
or
push
dec
mov
jecxz
mov
mov
mov
push
cmc
cmp
xor
jne
lahf
ficoms
lret
push
adc
leave
mov
mov
pusha
in
inc
cmp
jns
inc
clc
adc
loopne
sarl
xorb
inc
cmpsb
clc
or
jno
xchg
ret
sbb
je
mov
outsb
and
js
or
sub
push
or
mov
sti
rcrb
sahf
lcall
xor
out
adc
xor
add
mov
lret
int3
ret
lods
mov
sbb
xor
lret
inc
js
in
add
adc
jmp
cmp
ret
jp
sti
mov
xor
add
pop
fbstp
test
xor
add
jecxz
ret
pop
xchg
inc
cmp
fldl
inc
outsl
fs
cld
test
push
insl
dec
and
ror
push
scas
mov
adc
scas
mov
mov
mov
pop
push
sub
lret
inc
call
popa
xor
jle
imul
lods
push
test
sbb
sub
mov
into
add
xor
inc
xor
push
push
xchg
shrl
xor
sub
jp
insb
pop
aam
xor
sahf
test
stos
xchg
dec
in
pop
xchg
pop
scas
clc
lahf
arpl
stc
and
or
and
scas
pop
push
out
pop
mov
dec
mov
pop
addr16
mov
lods
sub
push
cmp
add
insl
call
sbb
andl
call
int
jo
lret
shlb
out
aas
mov
ds
in
jae
add
addr16
subb
lret
addl
ret
inc
jo
lods
pop
shrl
inc
clc
xlat
in
inc
pop
aas
xchg
xchg
stos
aaa
outsl
cld
mov
out
jnp
aaa
mov
jmp
int
cmp
mov
xor
and
mov
cmc
jo
ret
out
imul
in
mov
sub
inc
jl
outsb
xchg
xor
push
xor
inc
pop
lea
aam
xchg
mov
pop
mov
rcrl
out
idivb
roll
xor
fildl
faddl
and
test
movsb
lods
adc
inc
leave
je
movsb
lahf
clc
lret
pop
daa
imul
pop
push
lret
push
xor
sub
sub
nop
out
cmc
je
dec
add
in
hlt
cmc
xchg
cmp
mov
cltd
mov
xor
xor
arpl
arpl
jecxz
ret
xchg
bound
or
or
insl
mov
xchg
adc
mov
rcrb
xchg
xchg
xor
jns
cmc
xchg
stos
pop
sbb
sub
cmp
popf
popa
mov
shll
inc
in
dec
and
sbb
pop
jge
jg
cmpsl
dec
xchg
je
insb
xchg
add
inc
hlt
adc
jo
add
xchg
push
mov
stc
push
add
inc
xor
or
out
push
cmp
ret
mov
sub
lock
mov
loopne
inc
in
rolb
jg
mov
cmp
or
es
mov
sub
imul
neg
out
aam
mov
sub
ja
inc
push
mov
inc
fadds
jb
or
mov
xor
push
daa
mov
xchg
mov
inc
xchg
add
push
imul
mov
jae
and
or
xlat
jno
jo
jle
sub
jl
loop
pop
xchg
arpl
pop
fstpl
decb
fldt
sub
cmp
outsl
and
les
adcl
mov
push
pushf
test
test
push
xor
test
mov
adc
testl
push
sti
popa
jecxz
jae
test
movsb
and
push
inc
add
mull
cltd
or
ss
sub
jmp
and
into
mov
stc
jmp
push
test
jo
push
inc
repz
xchg
pop
cmp
lahf
stc
dec
push
mov
jno
adc
aaa
sbb
bnd
push
sahf
mov
sti
mov
cltd
fs
cltd
daa
xor
inc
mov
das
jg
dec
ljmp
pop
mov
cmp
inc
and
or
ja
or
pop
into
push
pop
xchg
pop
sbb
push
sub
enter
push
pop
in
lcall
jnp
cmp
outsl
or
loope
lods
add
mov
mov
cmpsl
loopne
push
jl
dec
jns
leave
dec
test
aad
rclb
cwtl
out
aaa
fwait
xor
ret
addr16
fdivrl
out
mov
aam
into
int
sbb
jnp
test
lods
testb
iret
cwtl
pop
dec
outsl
idivb
sti
pop
lock
loop
repz
mov
les
xor
add
mov
jecxz
push
mov
mov
pop
mov
or
jp
or
lahf
jnp
into
jns
mov
mov
jle
pop
pop
pop
sub
icebp
add
bound
dec
mov
das
gs
adc
xchg
add
divl
add
or
inc
mov
scas
pusha
test
out
or
adc
and
les
test
fcomi
mov
dec
add
sub
jle
jecxz
mov
pop
pop
popa
aad
xchg
test
add
loope
pop
jecxz
into
cltd
push
loope
fwait
ds
movsb
jns
push
and
rorb
pushf
dec
test
ret
fildll
subl
mov
cmp
xor
repnz
sbb
dec
jg
sub
out
movb
in
jmp
sbb
pop
scas
adc
movsb
mov
cltd
rcrb
js
ja
aas
clc
mov
xor
je
and
out
xor
and
sub
adc
aas
xor
pusha
mov
arpl
and
iret
rcrb
push
adc
aam
lret
adc
mov
jo
in
pop
dec
sahf
mov
mov
enter
scas
pop
jns
ss
mov
or
out
mov
add
mov
mov
aaa
and
rclb
inc
jge
sub
idivb
les
stc
jns
add
push
and
sbb
pop
decl
mov
fsubs
jmp
je
mov
fs
inc
cs
or
loopne
or
fs
gs
lret
popf
imul
stos
adcl
dec
stos
adc
sub
test
xor
and
cmp
dec
fmuls
sub
and
les
psubw
test
push
push
pop
inc
push
lret
lock
dec
cli
add
xchg
jecxz
fldln2
mov
adc
add
jns
into
add
cmp
lds
loop
jmp
adc
stos
pushf
repz
pop
inc
popf
jl
popf
aaa
mov
testb
gs
push
pop
jecxz
nop
aam
mov
incb
or
es
xor
sub
xchg
in
cwtl
jl
js
sbb
rol
push
movsl
jns
xchg
mov
mov
je
mov
rclb
add
cmp
shlb
mov
loope
lods
jecxz
bound
loope
pusha
and
lock
xorl
mov
movsl
adc
fimull
mov
cli
pop
test
jp
pop
jo
xor
jne
loopne
fistps
ret
sbb
shll
outsb
cmp
iret
sbb
in
push
jae
fsubr
adcb
lods
lret
cmpl
xor
sar
icebp
push
imul
lock
hlt
add
lods
xor
andl
lock
cmp
pop
adc
loope
aaa
xor
out
pushf
push
jb
and
add
sub
pop
stos
fisttpll
mov
sbb
test
into
ret
inc
dec
dec
pop
pop
cmp
pop
hlt
imul
ret
cmp
xlat
cli
sub
mov
push
daa
push
incb
sbb
dec
lock
repz
stos
popf
pop
sbbb
fadd
mull
xor
mov
jns
jl
push
adc
push
in
mov
imul
cmpsb
sub
inc
mov
cmc
rcll
clc
xchg
add
push
pop
cltd
aaa
xchg
mov
cmp
lret
and
out
lea
lret
call
jb
jo
xor
mov
jns
mov
add
mov
push
mov
inc
xchg
mov
cmp
pusha
int
xchg
sbb
lods
mov
mov
sti
jnp
gs
testl
cmpsb
nop
xchg
mov
and
xlat
and
inc
pop
pop
dec
mov
inc
imul
mov
mov
daa
or
xor
lds
fisttps
xor
xchg
rorb
shlb
pop
into
loope
fucom
mov
out
out
jns
jo
adc
dec
or
inc
sbb
jmp
fsubl
or
pop
roll
jo
aam
in
mov
imul
pop
sub
insb
ja
jno
mov
les
popl
dec
inc
pop
je
mov
out
push
sti
inc
mov
outsb
stos
mov
cltd
lret
jne
push
push
iret
sbb
adcl
in
jl
daa
pushf
pusha
ret
cmp
cld
jb
push
push
xchg
imul
add
pop
pop
mov
dec
pop
int
arpl
insb
mov
cmp
dec
push
fwait
aas
mov
push
xor
sbb
dec
repnz
jecxz
jno
jl
fstl
xchg
add
inc
pop
mov
push
fstpt
and
repz
inc
scas
adc
ret
push
pop
sbb
adc
jmp
inc
push
repnz
lods
sub
je
lock
xchg
mov
push
dec
add
cmp
nop
incl
inc
fisubrs
insb
jb
inc
mull
out
push
adc
mov
lret
scas
and
out
pushf
adc
jle
xchg
sub
or
subl
das
rclb
cmp
outsb
stc
xor
out
movsb
int3
mov
ret
xchg
fs
jae
jb
out
sub
repnz
xchg
fiadds
xchg
out
mov
int3
and
sub
jl
ljmp
mov
flds
mov
test
cmpsb
cmpsb
inc
mov
adc
in
loopne
xchg
cmpsl
mov
enter
test
arpl
mov
inc
cmp
imul
mov
xchg
add
mov
das
leave
inc
fwait
stc
lods
call
movsb
lretw
loopne
stos
jg
cs
movsb
pop
dec
fidivs
popa
test
fwait
cmp
aam
pop
aam
pop
jge
popa
jl
pop
or
repnz
add
scas
mov
cmp
std
lahf
icebp
push
mov
ss
xchg
outsl
or
push
inc
jge
loop
lahf
mov
dec
push
shl
lock
pop
popa
jmp
mov
push
sti
jmp
int3
adc
dec
inc
push
js
jle
pop
push
addl
push
mov
pop
aas
int
mov
or
ss
pop
ds
shll
lock
sbb
xor
test
push
fdivs
push
jle
pop
stos
sbb
cmp
addl
stc
pavgw
mov
out
push
data16
ja
scas
jb
sub
mov
and
mov
xchg
sub
cs
lret
mov
sub
xchg
xchg
hlt
xchg
aaa
daa
sub
lds
jnp
jo
pop
popa
sti
mov
daa
adcl
into
xchg
xchg
sub
sbb
pop
rcrb
push
dec
xor
rcr
ret
cmp
in
cmpsb
out
xchg
jae
sbb
and
lea
fcomi
lahf
int3
fcoml
imul
repz
xchg
pop
mov
leave
movsb
or
dec
jecxz
test
test
inc
jno
cmpsl
scas
jle
aas
xor
lret
adc
into
aad
leave
cs
lcall
sbb
jae
int
lds
pop
cli
cmp
cmp
enter
fdivl
scas
mov
push
sbb
jae
idivb
ds
loop
aad
and
ret
pop
mov
mov
pslld
aad
int
pop
add
sub
into
test
stos
inc
rol
icebp
test
das
sub
addr16
cmpsb
cmp
or
or
inc
imul
xchg
sbb
stos
jl
jecxz
into
or
pop
xchg
mov
mov
push
outsb
mov
imul
in
mov
and
mov
cmpsl
fdivrp
cmp
cmpsl
jne
xor
mov
std
ss
dec
adc
insl
inc
movsl
mov
mov
mov
jbe
test
movsl
dec
sbb
in
fcompl
cmp
dec
movsl
loopne
inc
dec
js
lods
inc
or
pushf
or
ror
test
test
sbb
jbe
dec
mov
cmpsl
or
sbbb
adc
push
ja
dec
scas
pop
scas
enter
push
nop
or
int3
aaa
push
xchg
stc
mov
adc
mov
and
inc
xor
mov
insb
or
scas
inc
adc
add
int3
sahf
insb
pop
popa
cmp
call
add
lret
cmp
mov
shlb
out
dec
mov
test
pop
and
call
pop
or
xor
mov
fildl
cmpsb
push
stos
fstpt
xor
dec
es
fimull
enter
xor
dec
sar
movsl
testl
into
mov
push
mov
push
cmc
and
ret
dec
jle
mov
push
cmp
ret
movaps
inc
or
mov
cmp
outsl
jle
sbb
lods
sbb
ljmp
add
sbb
cmp
sahf
mov
inc
jno
jle
lods
jg
mov
les
pop
mov
arpl
or
mov
jmp
ret
adc
lret
leave
mov
jp
push
sbb
cmc
pop
pop
xor
subb
add
ds
idivb
dec
cmpb
mov
dec
pop
popf
push
hlt
pop
outsl
sahf
in
popa
in
push
xor
out
xor
or
xorb
roll
enter
iret
fsub
cwtl
xor
xor
cmp
outsl
fwait
ss
xlat
or
js
sub
mov
mov
shl
mov
mov
popf
test
ffree
testl
mov
xchg
sub
imul
jge
add
sar
jnp
repz
pop
and
xorb
aam
jne
lods
and
jnp
pshufw
pop
add
ss
dec
adc
dec
mov
repz
ret
jne
aad
pop
mov
lret
enter
aaa
shrl
and
mov
push
icebp
jno
jns
push
gs
push
loope
mov
jae
bound
mov
sbb
and
clc
jbe
aaa
arpl
lret
cmp
fiadds
or
mov
mov
fimull
mov
lods
pop
or
xor
push
fbstp
ljmp
lods
sub
fsts
test
in
jae
popl
mov
xchg
insl
out
je
or
xor
jns
sub
xchg
fsubrs
sbb
sub
inc
mov
adc
xor
out
cltd
and
sub
popl
jbe
pop
lock
jmp
lcall
ret
adc
popf
je
and
mov
mov
inc
repz
xchg
pop
das
ret
test
sets
and
mov
addr16
and
mov
dec
insl
jp
jo
cld
js
scas
cli
pushf
and
mov
cltd
pusha
add
add
out
pusha
inc
test
adc
add
in
fdivl
pop
rol
pop
faddl
fsubrp
mov
fisubs
lods
ficoml
shlb
xchg
lock
sahf
ficompl
in
push
mov
movsb
fcoml
dec
arpl
add
addr16
into
jae
mov
fcompl
js
xchg
mov
mov
pusha
out
aam
stc
and
scas
sub
adc
insl
ss
adc
adcl
aam
xor
pushf
or
inc
int3
and
sti
inc
div
dec
push
js
rclb
ljmp
sub
lock
pop
testl
cmp
pusha
inc
xchg
or
out
icebp
enter
jl
mov
adc
or
sub
add
in
cld
xorb
and
enter
add
and
popf
out
dec
inc
xchg
jae
jbe
dec
cmp
dec
rclb
xor
lods
nop
fwait
jl
lahf
xchg
lahf
sbb
sub
jmp
or
inc
mov
nop
dec
add
xlat
loop
adc
xor
mov
xchg
sbb
and
cmp
push
test
pop
fsubrl
xchg
push
in
test
stc
test
jnp
testb
gs
cld
lea
movsl
xchg
mov
lret
adc
mov
sub
mov
sub
in
or
jbe
cmp
pop
ret
or
dec
filds
mov
out
fwait
sbb
xlat
adc
test
ja
mov
addr16
push
arpl
pop
ret
pop
xlat
or
test
or
add
shrb
push
mov
mov
push
test
sbb
pop
xor
cmp
ljmp
adc
out
xchg
cmp
xlat
les
xchg
fcmovnbe
xor
cmp
mov
sub
xor
adc
push
das
insb
mov
fadd
dec
or
xor
mov
movsb
int
adc
pop
ret
push
add
pop
or
jns
loop
adc
xchg
sub
arpl
cmp
std
flds
push
jb
inc
testl
mov
lds
inc
stc
shrb
lods
sbb
scas
in
sahf
xchg
mov
cli
sbb
pop
mov
iret
test
push
out
test
cmp
pop
xchg
or
rcr
rcll
std
shrl
push
fstl
call
mov
sbb
xor
icebp
add
sbb
or
jp
scas
outsb
bound
sub
mov
cld
rolb
popf
stos
mov
and
lret
enter
pop
mov
mov
mov
repz
mov
mov
gs
imul
loopne
sub
add
daa
sti
mov
inc
nop
xchg
or
add
call
movsl
xor
jge
lahf
push
mov
add
inc
stos
fbstp
push
jecxz
cmp
sub
mov
enter
stc
popa
xor
and
lcall
and
pushf
mov
call
cwtl
imul
outsb
out
aad
or
pop
jo
aam
pop
hlt
sahf
dec
xor
fstpt
js
pusha
mov
push
shlb
lock
jp
sub
push
mov
mov
ljmp
dec
out
adc
mov
add
add
or
daa
inc
push
jmp
cmp
cltd
or
gs
push
mov
stc
scas
xor
cmp
mov
fnstsw
aas
test
pop
mov
mov
jae
xlat
jmp
xchg
cs
push
bound
divb
outsl
or
pop
push
or
mov
iret
dec
arpl
ficoml
adc
xor
loop
pop
jg
push
inc
xor
xchg
std
call
aad
aaa
fdivrl
add
das
sbb
sbb
xchg
pop
call
mov
lods
fldenv
xchg
xor
push
repz
mov
hlt
inc
jle,pn
fsubrs
ljmp
push
fdivrp
gs
xchg
cltd
movsl
es
mov
dec
push
shrb
xlat
shr
shlb
repnz
mov
pop
loopne
push
insb
inc
adc
jb
dec
lret
jecxz
inc
orl
mov
sahf
mov
mov
add
in
arpl
or
push
loopne
mov
rcrl
shl
xor
xor
imulb
push
sete
cmp
mov
setnp
push
sbb
sbb
xchg
cmpsb
pop
push
pusha
pushf
push
bound
push
aaa
jmp
std
repnz
push
in
in
repz
jae
cltd
lret
cmp
add
fwait
cmovg
cmc
mov
xchg
out
mov
jo
pop
inc
fildll
sbb
lods
sbb
xor
shrb
test
mov
and
mov
aas
dec
in
leave
adc
jmp
scas
nop
outsb
mov
cmp
mov
mov
adc
in
loope
adc
pop
lods
dec
add
dec
pusha
and
sub
mov
xchg
push
ss
hlt
js
js
inc
dec
lea
mov
pop
jae
push
xor
and
dec
mov
sbb
jp
inc
out
popa
xor
push
mov
ds
mov
xor
lock
test
hlt
jg
push
lods
push
inc
pop
movsb
inc
xor
rcll
dec
cvtps2pd
sbb
jne
lahf
dec
into
jne
lods
jle
inc
cmp
mov
and
pop
push
aaa
lahf
mov
stos
jp
xchg
pop
dec
movsl
and
sbb
and
rclb
scas
in
sbb
pop
nop
push
pop
mov
xchg
hlt
popa
mov
cmp
mov
push
jno
add
sub
sahf
mov
mov
push
out
mov
ja
outsb
repz
test
test
mov
sub
and
cwtl
popa
sbb
mov
jl
arpl
sub
dec
addr16
fisubrl
popf
fimuls
cmp
jne
jo
insb
add
popa
mov
xchg
lahf
sbb
jno
lahf
inc
in
in
out
dec
mov
pop
adc
fs
mov
cwtl
xchg
sub
dec
bound
jp
add
pop
daa
or
in
dec
or
sbb
in
jnp
das
out
aad
xchg
xchg
jg
dec
pop
addr16
push
mov
shll
rolb
push
sbb
push
gs
insb
sub
arpl
xchg
jae
pop
push
fcmovnbe
mov
fdivrl
jmp
movsl
jle
pop
mov
push
out
aad
pusha
test
mov
add
nop
lds
pusha
xchg
sbb
out
pop
es
push
outsb
xchg
scas
cmp
adc
jle
std
call
mov
popf
into
cmp
cwtl
testl
mov
xor
popf
lret
sbb
mov
int
inc
push
lea
mov
push
stos
repz
out
xor
mov
xchg
jae
test
mov
mov
add
mov
aaa
sub
nop
push
aam
negl
pop
decb
es
gs
push
cwtl
sbb
pop
insl
imul
mov
push
push
mov
sub
cmp
xchg
lret
out
push
adc
test
mov
addr16
xchg
stos
dec
jne
xchg
idivl
in
sahf
lret
mul
int
sbb
xor
lret
fiaddl
add
mov
imul
jge
sub
adc
mov
xor
and
mov
aad
and
ds
adc
mov
mov
scas
or
adc
std
pop
sbb
dec
jb
out
insl
cmp
js
dec
xor
add
adc
inc
jnp
mov
mov
jne
mov
sbb
ss
inc
add
add
dec
xchg
mov
push
lock
push
mov
mov
je
leave
pop
jo
test
jp
stos
sbb
es
push
adcl
pushl
dec
ret
cmp
pop
jo
mov
std
and
and
pop
psubusb
movsb
cmp
lcall
jp
inc
lods
cmp
or
cmp
xchg
stc
cld
aaa
fnstsw
loopne
pop
or
fst
xor
add
or
mov
pop
push
call
loopne
clc
add
xor
xchg
sti
sbb
cmp
pop
push
cmpsl
popa
scas
int3
mov
pop
fwait
in
xchg
sbb
xchg
mov
lock
and
call
movsl
adc
mov
lret
adc
repz
jnp
push
mov
xor
mov
mov
push
test
mov
mov
ja,pn
lret
sbb
and
push
or
mov
dec
ss
dec
pop
mov
cltd
inc
fbstp
inc
fdivs
and
test
out
add
sbb
pusha
mov
iret
mov
mov
je
jns
add
dec
lods
pushl
jmp
push
test
cmc
lahf
dec
jb
pop
sti
cltd
icebp
fcmove
jbe
aaa
cld
add
mov
divb
xlat
lea
xchg
lea
pop
rorb
dec
or
xchg
mov
xor
cwtl
mov
add
pop
lahf
push
jo
inc
add
sbb
adc
inc
arpl
mov
iret
call
jle
cmp
xchg
fucomi
imul
stos
or
ljmp
test
or
jo
add
mov
stos
push
pop
dec
fwait
pop
inc
push
lock
xor
idiv
mov
sub
femms
testl
outsl
add
push
mov
sbb
pop
mov
loopne
repz
pop
mov
jge
pop
push
or
repnz
push
xor
push
mov
popf
mov
iret
out
fdivr
lret
adc
lret
dec
testb
std
shll
xor
insb
inc
mov
jecxz
sub
inc
gs
fcomps
call
push
push
mov
xor
mov
jne
shl
or
mov
inc
mov
aam
xchg
lods
inc
xchg
stos
mov
jmp
adc
rcrl
xor
sub
xor
and
out
cmpsb
daa
jmp
cmpsl
jbe
ljmp
dec
fs
sarb
sti
popa
sub
rcrl
inc
sbb
add
mov
pushf
shlb
mov
add
and
push
test
mov
insb
lock
mov
mov
xchg
pop
es
pop
push
pop
aas
in
popa
pushf
int
cmp
jl
adc
dec
and
adc
push
mov
cld
sbb
mov
enter
adc
and
popa
pushf
popf
mov
pop
pusha
or
dec
adc
inc
jbe
arpl
sahf
outsb
adc
jp
cltd
mov
push
lods
jbe
loope
out
add
pop
nop
adc
adc
gs
sub
push
scas
jno
fistps
roll
sub
ja
mov
pop
and
lcall
fldl
cs
bound
cmp
insb
clc
add
push
cmp
into
arpl
or
mov
sbb
nop
insb
jno
leave
imul
gs
rorb
push
jmp
mov
push
xor
out
inc
pusha
lods
sub
jno
push
mov
jl
fistl
enter
inc
cmpsl
push
add
out
jl
movlps
sbb
push
cs
adc
imul
loope
sub
cmp
push
xorb
cmp
jle
mov
dec
push
movsl
xchg
jl,pt
pop
xor
mov
stc
jae
shll
xlat
adc
pop
sbb
dec
lahf
das
or
cwtl
pop
loop
cmpsb
in
divl
xor
and
ret
pop
mov
lds
mov
dec
sbb
and
push
mov
repz
sbb
adc
jmp
jp
repz
loop
lock
add
or
lods
int
mov
cmp
xchg
jne
dec
cwtl
mov
adc
sahf
call
rcrl
xor
clc
es
xchg
dec
push
cmpsb
jp
fldenv
mov
pop
sub
fldcw
push
test
mov
mull
sub
out
cltd
fidivrl
stos
or
sub
and
jo
add
inc
daa
add
and
inc
push
xchg
mov
roll
aas
fdiv
xchg
cld
test
pop
push
leave
cs
leave
fisttps
pop
jp
add
rcll
lea
pop
and
into
pop
mov
nop
mov
xor
or
scas
cli
or
test
test
mov
adc
popf
xchg
fdiv
pop
pop
adc
mov
ret
inc
cmp
jbe
cmpsb
fiaddl
adc
aaa
js
nop
aad
cmpsb
dec
xchg
and
rclb
sbb
mov
int
sub
lahf
or
movsb
outsb
in
cmpsl
or
xchg
mov
push
dec
pushl
sti
ljmp
pop
inc
xchg
inc
les
sbbl
jb
jae
mov
mov
mov
inc
mov
fs
jl
jg
xor
cs
ret
jp
dec
shlb
fimull
into
push
icebp
scas
xchg
mov
movsl
fldenv
fsubrp
jno
enter
add
cmp
mov
ficompl
hlt
roll
mov
fsts
data16
or
js
pop
inc
sbb
push
bound
gs
aas
add
mov
push
or
and
pop
xchg
pusha
xchg
test
mov
cmp
push
dec
adc
lock
xor
ds
mov
pushl
mov
das
mov
adc
xor
mov
cmp
pop
pop
mov
enter
out
rcrl
ss
insb
int3
mov
push
int
jg
mov
cmp
add
call
jmp
cs
jg
dec
sub
push
enter
sbb
sub
inc
pop
jnp
int
sahf
sbb
es
loop
cld
out
add
sbb
push
or
call
inc
popf
sbb
adc
dec
fisubrl
ss
imul
out
lds
mulb
mov
sbbb
mov
jns
fs
into
xor
stos
dec
dec
mov
mov
adc
icebp
out
lahf
adc
pushf
leave
and
xchg
cmp
ljmp
pop
mov
sbbl
inc
je
pop
or
lret
shll
add
stos
mov
jg
push
jno
push
sbb
dec
mov
iret
mov
fiaddl
sbb
xchg
mov
andb
jno
in
xorps
adc
mov
add
jne
mov
ffreep
inc
outsb
aaa
inc
mov
mov
pop
mov
inc
xlat
push
xor
xchg
pop
jnp
je
mov
jecxz
imul
xchg
fstpt
movsl
cltd
cld
int
jmp
inc
mov
gs
lahf
int
fwait
outsb
push
fimull
sbb
pop
fsubr
sahf
hlt
je
shlb
jp
or
lds
cli
xchg
dec
insb
bnd
sbb
xlat
test
lds
mov
inc
and
cmp
sub
push
movsl
pusha
movsl
xchg
adc
fs
popf
xchg
fs
mov
je
jmp
xor
and
and
dec
lods
xchg
lcall
push
leave
sub
lahf
aam
lret
shrb
sub
push
lock
inc
shll
in
int
fildll
mov
push
data16
das
and
xchg
and
rorl
shlb
shrl
fcomps
xchg
push
outsb
sti
pushf
cmp
or
cld
mov
cmp
pop
ret
dec
mov
or
mov
int3
out
mov
xchg
mov
insb
jg
dec
test
dec
ret
jno
jecxz
test
jp
fmuls
push
jmp
cld
mov
aaa
mov
addr16
or
mov
mov
aas
fildll
push
mov
insb
cmp
ja
data16
xchg
push
xlat
jne
adc
or
ljmp
fucomip
je
push
mov
pop
mov
loopne
int
aas
or
call
inc
je
popf
cmp
imul
cmp
sti
mov
push
call
nop
bound
xor
jg
out
inc
push
or
ja
aad
int3
cmp
sbb
test
and
dec
cli
clc
inc
xchg
movsl
scas
out
in
pushf
fldt
js
jle
cmc
pop
inc
xor
pop
int
sub
ror
xchg
in
shr
pop
imul
or
mov
sbb
cmp
or
arpl
cmc
gs
mov
cmp
dec
push
sub
or
movsb
scas
out
in
dec
push
add
in
fcoml
fildll
lahf
jns
xchg
jmp
addb
xor
sub
pushl
xor
lret
push
add
iret
inc
and
push
xchg
cmp
dec
and
sub
call
pop
cmpsb
hlt
call
sub
pop
pop
std
dec
repz
aaa
inc
add
jmp
sti
mov
lahf
xchg
pop
mov
mov
cmp
xorl
mov
pop
or
mov
enter
mov
out
or
negb
sti
stos
xor
fidivrs
xlat
mov
adc
jmp
popf
shl
fistpll
pop
dec
push
ret
and
das
push
pop
stos
mov
sti
mov
sahf
fdivs
out
in
fists
xchg
repz
movsb
fs
cmpsl
jmp
xchg
hlt
and
inc
cmp
into
in
cmpb
jo
inc
lcall
cmp
push
movsb
sbb
push
icebp
aaa
fistps
xlat
repnz
lods
imul
je
mov
jmp
add
and
xlat
jbe
mov
jne
xor
insb
cmp
pop
xchg
adc
pop
sbb
into
jg
push
xchg
mov
xchg
jle
push
jecxz
cmc
add
jl
cmp
cmp
in
mov
xor
or
xchg
fdivl
sub
cltd
lret
rclb
push
cmpsl
cmp
stc
faddl
in
divb
add
and
sub
dec
mov
push
mov
outsl
xor
into
mov
sub
out
jp
adc
sbb
mov
xchg
mov
mov
and
xor
sti
push
pop
lea
ficompl
stos
xchg
pop
push
push
loope
sbb
jmp
pop
imul
ret
insb
cld
data16
fdivl
xchg
add
rcrl
out
sbb
pop
stos
dec
xchg
pop
xchg
sti
mov
dec
mov
ss
sbbb
fists
sub
push
push
iret
dec
cmp
iret
frstor
inc
lods
fcmove
and
sub
push
mov
cmp
popf
mov
dec
fimull
cwtl
movb
test
mov
sub
popf
outsl
adc
popf
out
adc
push
insl
sbbl
sub
xchg
sbb
sub
adcb
in
call
das
lahf
xor
mov
imulb
xor
push
cmpsl
push
rorl
rcll
in
popf
dec
fs
mov
cmc
dec
daa
sub
movsl
fiaddl
popa
fnstsw
aad
mov
mov
cs
jb
push
stos
aad
cmpl
loopne
lock
popa
inc
and
arpl
shl
repnz
imul
sbb
mov
adc
outsl
aas
int3
cmc
sahf
mov
push
push
push
lds
add
test
addr16
fbld
clc
mov
orb
rolb
jmp
lock
leave
testl
ss
test
inc
mov
dec
mov
or
add
cmc
inc
mov
stc
jmp
jo
push
jno
aad
pop
dec
std
ljmp
jl
inc
or
sbb
shrl
popa
aam
pop
cwtl
push
ss
push
dec
outsb
fcmovu
bswap
inc
and
sbb
sti
mov
mov
test
test
stc
arpl
shlb
push
xlat
outsl
xchg
push
outsl
or
push
enter
rol
popf
push
add
repz
push
xchg
jns
mov
mov
or
xor
mov
arpl
and
inc
loop
push
out
out
mov
insb
inc
add
imull
cwtl
out
outsb
xchg
js
pop
lock
movsb
subb
stos
or
xchg
jns
in
mov
sub
lds
ljmp
js
push
mov
or
mov
sub
mov
loopne
add
pop
cmpsb
es
stos
mov
inc
add
mov
sbb
iret
jle
imul
cmp
sbb
cmp
mov
inc
sub
push
mov
mov
pop
sarl
imul
mov
cltd
xchg
shll
push
pop
call
jmp
and
jmp
jmp
mov
mov
in
push
in
or
test
inc
ss
imul
out
sub
sub
push
push
inc
fsubr
shll
add
lcall
sub
cld
adc
aas
cld
cld
clc
mov
pop
add
jl
icebp
bswap
inc
jp
mov
inc
or
xor
add
popaw
stc
lret
loope
daa
sub
adc
clc
dec
and
dec
dec
adc
cmpb
rcll
fwait
ss
pop
jl
or
cmp
or
loopne
mov
lds
and
mov
xchg
loop
mov
add
cmp
xor
sti
jne
jge
int3
cld
andl
repz
dec
std
add
loopne
pop
enter
add
cmp
bound
and
cmp
test
aad
shlb
std
sarl
push
movsb
mov
test
outsl
xchg
add
jl
xchg
mov
lods
in
adc
adc
jne
and
int3
xor
mov
jge
mov
pop
mov
and
push
dec
jb
iret
cmp
pop
inc
jnp
pop
xchg
loope
das
sarl
cmc
dec
dec
in
push
in
lock
pop
sub
inc
lods
pop
inc
movsl
mov
sti
out
pop
stos
lahf
sbb
leave
cmpsb
out
scas
iret
punpckhbw
jbe
sbb
cmp
insl
repz
dec
cs
xchg
inc
outsl
sbb
leave
movsl
call
test
insb
xchg
mov
dec
iret
pop
dec
dec
fsts
stos
popa
adc
mov
jmp
sbb
lret
outsb
out
xor
cmpsl
add
cmp
sbb
pop
cmp
mov
imul
icebp
jp
fisubrs
ss
push
and
adc
xor
cmc
addr16
clc
lahf
imul
mov
xor
je
fcoml
pop
pop
gs
hlt
xor
pop
sub
inc
gs
inc
clc
call
out
cmp
test
addb
dec
icebp
divb
rcrl
add
mov
je
pop
lods
mov
incl
inc
add
repz
push
vpsubw
in
sub
dec
leave
xorl
lea
xorb
shrl
pop
dec
or
sub
mov
lock
iret
pop
jge
push
pusha
fiadds
repnz
lods
push
mov
test
imul
loopne
cs
cmp
sarl
sub
mov
iret
mov
cmp
inc
pop
pop
hlt
jae
loopne
mov
into
mov
pop
push
enter
lcall
into
xchg
inc
sbb
mov
add
test
insl
push
sub
sub
push
inc
jo
out
addr16
sarb
loop
lds
out
xor
test
pop
xor
fdivr
clc
fwait
inc
dec
jg
sbb
jo
or
add
stos
inc
add
or
lahf
mov
dec
inc
xchg
addr16
fs
ret
stos
pop
daa
in
ror
pusha
bound
jge
mov
adc
fstpl
sbb
cmp
enter
jecxz
mov
sub
push
sbb
sbb
out
xor
rcr
pop
imul
int3
into
xorl
add
dec
and
push
orl
std
out
pop
pop
inc
mov
shl
popf
lret
jo
pop
cmp
test
or
mov
push
mov
jle
insl
jmp
inc
mov
sub
mov
cltd
or
subb
dec
add
push
adc
or
int
push
pusha
fmull
clc
int3
ljmp
lcall
fs
xor
je
lretw
mov
push
xchg
fnstcw
inc
idivb
xlat
jmp
ljmp
xchg
push
in
xchg
hlt
std
dec
insl
sbb
iret
inc
fisubrs
mov
mov
push
pop
aad
ret
sbb
cmp
jnp
lock
and
sub
xchg
int
push
mov
add
je
push
iret
int3
mov
lcall
xor
shrb
pop
or
lret
pop
mov
scas
inc
dec
xorb
jb
sbb
mov
dec
pop
rcl
lahf
mov
rcrl
pop
fisttpl
rcrl
ljmp
push
inc
adc
sbb
push
pop
push
and
vpmovzxdq
sub
jp
and
cmp
inc
pop
jg
mov
in
mov
shlb
insb
fwait
iret
push
cmp
xchg
mov
mov
into
pushf
in
lahf
and
mov
push
mov
pusha
adc
loopne
pop
faddl
push
repnz
xchg
ljmp
sub
scas
mov
in
inc
mov
xchg
sbb
xor
mov
sbb
push
inc
mov
adc
pop
jo
sarl
ss
aad
jg
int
lcall
mov
jmp
out
pushf
fidivs
daa
popa
psrlw
inc
push
xlat
icebp
or
mov
fisubl
fstpt
jns
mov
jl
adc
stos
mov
data16
lds
mov
aam
insl
sub
test
sbb
cmp
dec
sbb
roll
out
push
sbb
push
lahf
aad
mov
lds
push
cwtl
xor
or
sub
js
mov
fldcw
or
push
std
sti
cmp
lods
push
cmpl
add
and
fwait
gs
push
les
adc
cmpsb
sub
loop
loope
cmpsb
jmp
dec
std
jns
xchg
lock
jecxz
mov
adc
scas
and
sbb
loopne
cmpsb
xchg
mov
or
faddl
xchg
out
test
xor
cmpsl
cmp
ljmp
sbb
mov
jp
push
daa
push
fadd
jle
lret
pop
das
sbb
fneni(8087
adc
ss
pop
loopne
add
in
pushf
inc
stos
iret
std
or
pop
mov
jne
push
sbb
iret
out
orl
pop
pop
les
or
stos
ljmp
test
icebp
add
outsl
out
pop
test
push
and
cmp
aas
lret
cmp
inc
and
popa
pop
scas
in
jns
and
mov
jge
sbb
dec
ret
popl
je
mov
mov
repz
and
imul
enter
cmpsl
mov
cmpsl
fwait
pop
imul
dec
cmp
fs
dec
and
scas
test
movsl
add
jno
cmpb
out
stos
jo
push
or
out
push
mov
mov
rcrb
push
jnp
jp
adc
rol
mov
mov
pop
outsl
adc
xor
xchg
ja
pop
outsl
aas
popa
outsl
lds
adc
pop
pop
cmpsl
in
sbb
add
cltd
mov
push
or
cmp
psubw
test
test
xor
jb
xor
shrb
xchg
dec
mov
pop
ljmp
jns
movsb
add
mov
les
rcll
mull
orl
xor
stos
jns
sbb
or
popa
outsb
push
adc
nop
pop
adc
fildl
je
cld
es
xor
pop
adc
loopne
adc
in
jp
xchg
mov
jne
mov
and
adc
and
mov
xchg
push
mov
or
ds
bound
xchg
push
push
lahf
fstl
xchg
lods
xor
jo
jg
outsb
xchg
pop
add
pop
sar
push
fidivs
sbb
xchg
mov
jmp
mov
out
lcall
out
cmpsb
mov
jp
and
cs
sbb
jbe
pushf
pop
nop
push
out
sbbl
jbe
leave
rorb
mov
out
pop
pop
fildl
sar
mov
push
sbb
int
mov
sbbb
mov
mov
sbb
fwait
push
mov
push
mov
or
fisttpl
or
cs
fsubrp
cmpsb
mov
cmp
sti
pop
pop
push
stos
mov
addl
jle
pop
mov
sbbl
mov
outsl
loop
fs
xor
sub
pop
sub
lret
in
fxch
pop
out
je
push
and
out
fcompl
pop
les
add
int3
xor
inc
jns
ds
pop
stos
sahf
out
sbb
sbb
int
into
jp
rorb
push
int
mov
pop
xchg
clc
repnz
add
aas
mov
pop
popf
xor
les
mov
std
sub
lods
xor
jae
cli
sbb
xchg
jb
inc
aad
add
sti
scas
cmp
fs
in
push
and
mov
mov
mov
ja
xor
sub
leave
loopne
cmpsl
test
out
sbb
xchg
mov
push
inc
hlt
jae
and
popa
jge
into
jl
outsb
loopne
call
xchg
nop
mov
repnz
in
enter
pusha
jecxz
push
mov
notl
mov
xor
or
cmpsb
xchg
sbb
ficoms
jo
push
cmc
mov
lcall
imul
jbe
xchg
shlb
and
cmp
add
mov
test
leave
or
insl
cs
jmp
xchg
xchg
sarl
lret
and
push
jp
or
insb
pushf
les
xor
rcrb
sub
ror
adc
inc
in
xchg
xor
adc
scas
pusha
mov
cmp
pop
inc
loope
int
stos
fdivl
cwtl
shll
outsb
jae
cli
in
sbb
les
lahf
cmp
adc
push
enter
call
into
sbb
mov
mov
ffree
inc
shlb
je
inc
out
push
pushf
aad
scas
rorl
cmp
and
frstor
xchg
dec
jno
icebp
dec
sbb
in
and
sahf
xchg
fildl
cs
int
rorl
lock
repz
std
notl
and
movsl
jb
push
std
dec
push
xor
pop
mov
int3
out
sbb
setg
stos
in
adc
or
rol
fisubs
ror
xchg
movsl
pop
jg
sahf
dec
lods
jmp
jge
xor
movsb
pop
add
xchg
cmp
push
lea
lods
inc
push
test
cwtd
mov
mov
dec
mov
mov
xchg
cmp
mov
lock
cmpsl
mov
mov
sub
or
jge
iret
iret
aad
fsub
or
mov
bt
cli
cmp
repz
das
aaa
mov
or
xor
xor
daa
cmp
adc
addr16
shlb
and
ret
sub
dec
aam
xchg
jge
push
xor
cwtl
iret
call
jb
das
int
jle
imull
jae
insl
fnsave
pop
adc
xchg
jne
pusha
pop
mov
mov
mov
fs
clc
std
cld
fisubrs
nop
sub
gs
sbb
dec
repz
jle
dec
roll
popfw
into
adc
cs
mov
and
xor
cmp
out
push
dec
iret
scas
mov
cmp
mov
je
pop
mov
inc
int3
fstpt
fisttps
adc
inc
mov
xor
lret
cli
sbb
insb
jo
xchg
cmp
daa
jg
int
jb
pusha
sub
cmp
mov
sbb
out
xor
inc
cmp
pop
dec
mov
jbe
into
adc
jb
sub
push
jp
push
hlt
mov
insl
mov
in
inc
mov
jle
adc
fldenv
jmp
cmp
mov
mov
test
xchg
jnp
inc
dec
daa
in
cmp
shrb
outsb
xchg
adc
mov
lock
cmpsb
push
jmp
sti
shlb
pop
mov
mov
mov
into
pop
loope
cli
lahf
pop
pop
cmp
cltd
ljmp
adc
adcl
int
xor
mov
ja
jge
cmc
ds
clc
dec
add
fsubrs
cmp
add
repz
lods
lret
pop
mov
pop
jmp
adcb
fucomp
pop
subl
add
jnp
pop
or
mov
pop
pushf
adc
add
pop
cmp
stos
adcb
xchg
mov
mov
mov
divl
xchg
lods
popaw
rol
xor
ja
rcrl
imul
sub
pop
inc
and
rcl
leave
repnz
bound
mov
add
cli
lahf
inc
aaa
cltd
out
xchg
xlat
mov
cltd
mov
lahf
ret
aam
stos
jmp
call
or
clc
adc
jbe
push
add
jg
pop
and
loope
bound
cmp
mov
push
jne
cmp
sbb
cmpsl
cmpl
dec
iret
mov
mov
ja
inc
jmp
shlb
add
xchg
push
ret
sub
pop
cmp
mov
cmp
dec
idivb
push
fcomi
jbe
sub
dec
bound
daa
adc
or
sbbb
mov
jl
sub
mov
int3
sub
add
xor
jnp
aaa
jg
les
jb
rcll
push
jno
inc
dec
pop
pop
inc
montmul
cmpsb
sbb
mov
xor
sbb
fwait
js
mov
xor
and
loop
xor
shll
xor
jae
cmp
ss
sti
sub
sahf
repz
push
sti
sti
jg
nop
push
xchg
mov
or
mov
jns
pusha
mov
add
subb
jbe
int3
popf
negl
mov
stos
or
mov
push
in
out
clc
fistpll
adc
leave
test
sub
xchg
lods
fldenv
je
test
push
popa
bnd
stos
lds
mov
xor
int3
mov
cmp
adc
xchg
mov
mov
loopne
stc
loope
ret
pop
push
adc
ficoml
mov
into
mov
into
xor
add
inc
and
shlb
scas
out
jns
pop
xchg
ret
pop
dec
ja
cwtl
sub
adc
loope
add
xchg
add
pop
out
es
aad
jnp
mov
adc
cmp
add
aad
je
ret
xor
mov
xchg
sbb
add
sbb
sarl
or
inc
cmp
inc
mov
mov
pop
cmp
sbb
fs
mov
or
jg
dec
mov
in
or
mov
lods
into
and
fnstcw
cld
hlt
xchg
dec
fnstenv
sub
aaa
loopne
aam
mov
dec
mov
sub
dec
push
ja
cmp
mov
inc
enter
xor
sbb
popf
pop
dec
sub
dec
addb
ud2
je
cmpsb
mov
roll
stos
nop
movsb
sub
mov
cmp
mov
nop
pushf
cmc
xchg
scas
xchg
hlt
into
dec
xor
xor
sbb
jno
icebp
or
popf
sahf
int
imul
mov
xchg
mov
jnp
inc
movsb
sub
mov
mov
xchg
add
ffreep
inc
movsl
mov
movb
stos
aad
inc
shll
jb
lahf
sub
jge
jne
inc
push
sbb
into
mov
jns
lods
mov
jae
js
rorb
push
cmpsb
cmp
lds
testb
cmp
repz
pop
mov
xchg
sti
xchg
push
or
adc
inc
ret
push
mov
sub
lods
mov
aaa
jne
push
outsb
imul
mov
mov
nop
shrl
pusha
es
adc
dec
loopne
inc
ficoms
pop
push
jbe
pop
mov
das
jno
mov
js
pusha
jae
stos
add
xchg
mov
inc
mov
xor
pusha
pop
xchg
add
dec
std
or
insb
xor
jo
inc
rcrl
mov
jne
mov
lret
jecxz
mov
je
sub
std
mov
pop
mov
cmp
icebp
lock
pop
cmp
xchg
ret
hlt
ficoml
xlat
out
test
js
repz
in
cmc
jg
xor
stos
inc
xchg
sbb
xor
fiaddl
xor
pop
leave
mov
xlat
adc
mov
dec
call
loopne
sahf
sarb
mov
add
ret
int3
out
mov
push
mov
cmp
mov
out
or
mov
inc
dec
push
lock
stc
js
ficoml
arpl
inc
and
or
jo
and
icebp
faddl
mov
dec
fdivs
and
push
lcall
and
cmp
movsl
add
xor
xor
sub
dec
dec
mov
xor
loop
pusha
std
out
fnsave
add
negl
inc
adc
or
aad
or
imul
test
scas
dec
cmpsl
mov
cmpsb
imul
pop
xor
jae
test
sbb
mov
cmp
cs
xor
out
in
mov
repz
xor
xchg
jae
sub
or
clc
pop
lds
mov
adc
mov
scas
cld
pushf
sub
outsb
lcall
shrl
inc
shl
cli
and
jecxz
icebp
adc
fcmovnb
xchg
das
cltd
pop
movsl
pop
add
sub
jns
sub
lock
xchg
hlt
movsl
insl
mov
mov
xor
push
add
rorl
adc
addr16
loopne
inc
and
rol
lods
xor
ret
fmul
clc
shrl
lds
mov
les
jb
mov
and
mov
pop
mov
jecxz
inc
aam
push
mov
test
inc
int3
sbb
test
scas
mov
pop
mov
inc
shrb
dec
cmpb
arpl
mov
sbb
lea
dec
cmp
daa
scas
mov
mov
imul
sbbl
pushf
jmp
outsb
push
add
xchg
mov
add
and
add
or
mov
jo
jge
fdivp
enter
aaa
outsl
push
out
and
jecxz
xchg
xchg
fimuls
fldt
jmp
xchg
xor
sub
js
add
push
sbb
pop
mov
orl
aaa
shrl
sub
divb
das
xchg
pop
cli
jno
xor
inc
xchg
cld
mov
scas
push
or
dec
movsl
jae
adc
lret
ret
imull
arpl
pop
stos
sbb
mov
stc
sbb
pop
and
jnp
dec
ds
push
xor
cmp
mov
lahf
setge
or
scas
hlt
sub
adc
hlt
nop
xchg
cmp
mov
jecxz
jle
push
sub
mov
ljmpw
test
out
sbb
xor
add
les
xchg
insl
imul
shlb
xor
fdiv
inc
cmpsl
loop
mov
xchg
mov
sbbl
mov
pop
movsb
mov
test
aam
xor
mov
mov
lret
into
arpl
mov
cmpsb
sahf
inc
mov
in
clc
les
pop
repz
or
testb
scas
test
data16
lock
ret
adc
daa
pop
jge
enter
cmp
pop
sub
sub
mov
ds
pop
out
imul
dec
lahf
mov
out
and
xchg
test
dec
xchg
inc
add
stc
shl
js
xchg
loop
out
aaa
or
add
loope
sti
das
mov
jo
dec
mov
push
push
in
fchs
repnz
mov
jle
sbb
jl
pop
outsl
dec
push
cld
int
xor
stos
pop
lds
insl
adc
in
or
pop
mov
dec
imul
jo
daa
inc
loop
outsl
pop
jns
mov
push
out
addr16
push
cld
cmp
popf
dec
inc
inc
push
add
out
not
gs
push
cmp
int
lahf
lret
xor
add
push
cmp
adc
and
imul
stc
ja
call
dec
sub
sub
cmp
mov
cmpsb
test
inc
test
jnp
in
stos
shrb
mov
pop
sbb
stc
insb
out
shll
pop
pop
arpl
adc
and
inc
adcl
add
das
test
xor
fwait
cmc
mov
shll
enter
xchg
arpl
pop
mov
jno
leave
jmp
push
sbb
test
push
mov
dec
lret
mov
dec
jb
repz
mov
sub
fnsave
pop
push
in
mov
xor
test
mov
lods
fcomps
xchg
fs
movsb
shl
mov
shrl
daa
aam
or
add
popf
ret
arpl
pop
jnp
mov
dec
jbe
xchg
push
outsl
pop
lahf
stc
and
cld
dec
and
arpl
fwait
lods
sub
test
lods
loopne
js,pt
xchg
mov
inc
pop
cltd
jecxz
sahf
data16
hlt
les
sub
dec
jecxz
pop
cli
test
xor
jns
cmpsb
adc
and
stos
movsl
cmpsl
jno
xchg
setbe
xlat
or
jo
or
fisubs
test
xor
dec
mov
jno
mov
jbe
push
mov
ja
ret
loope
add
mov
adc
jle
pop
sbb
dec
lea
jbe
sub
in
sbb
mov
sbb
sti
sub
popf
repz
jg
mov
sub
xor
aad
pop
mov
sahf
lods
mov
cmp
fdivrs
or
and
push
sarl
stos
xchg
jne
mov
jbe
imul
movsl
and
loope
jl
mov
into
inc
inc
sahf
add
loopne
inc
jae
and
adc
ljmp
insb
jnp
aas
jmp
insb
sahf
mov
insb
cmc
subb
mov
xor
js
jge
or
jge
lret
push
xchg
fabs
sbb
push
add
cmc
mov
xlat
pop
xchg
outsb
in
into
mov
mov
jne
inc
sub
inc
addr16
push
adc
xor
sub
jmp
mov
aas
or
ds
into
sarb
fadd
arpl
sarl
jb
cmp
inc
sbb
sbb
ds
mov
push
cli
or
sbb
in
xor
addr16
aas
imul
out
add
cltd
and
mov
xor
aas
std
or
xor
imul
and
xchg
repz
dec
jmp
xchg
rclb
pop
daa
lret
sbb
fsts
sbb
xchg
pop
mov
dec
insb
into
jae
insl
inc
fstl
and
add
push
stos
jns
cmp
clc
std
cmp
adc
std
sub
out
mov
pop
or
jbe
adc
mov
dec
cmp
pop
jg
data16
ja
push
dec
pop
lock
xchg
imul
jg
jae
push
jp
add
lods
xchg
inc
stc
shl
and
push
in
xchg
jp
and
iret
jo
or
add
loope
call
cmp
dec
and
mov
sarl
test
enter
dec
inc
out
cmp
mov
mov
xchg
mov
dec
stos
lcall
or
jns
out
pop
push
pop
mov
shl
pusha
adc
jnp
sarl
jmp
pop
test
std
ja
ds
jbe
mov
outsl
pop
fs
xor
mov
in
gs
repz
fisubl
push
js
bswap
sbbb
sbb
ret
popa
mov
jl
jnp
in
out
and
sbb
popa
bound
cmpsb
jns
fwait
xor
and
or
jb
ret
mov
out
xor
jp
test
aam
dec
xor
cltd
sti
sbb
rcrb
mov
lock
test
loop
stos
jl
cli
add
inc
or
mov
push
sbb
call
daa
mov
call
sbb
out
mov
jle
lods
xor
call
in
shll
adcb
out
shrl
mov
shrb
bsf
stos
cmp
ljmp
add
iret
pop
jge
push
mov
sahf
and
jge
lods
aaa
dec
jge
sbb
add
sbbl
mov
xchg
or
mov
fisttpl
sti
fistpll
mov
xor
jo
push
pop
je
movsb
jmp
popa
jae
push
aaa
dec
inc
out
mov
and
xchg
into
mov
jl
dec
adc
mov
rcr
cmpsb
movl
inc
lret
xorb
call
cmp
jp
push
lret
mov
pop
jbe
stos
mov
fildll
xchg
rolb
adc
pop
xchg
popf
movsl
sbbl
ds
repnz
es
scas
subb
lods
sub
imul
fmul
adc
out
sbb
and
add
sbb
dec
int3
aad
jecxz
sahf
jns
adc
cwtl
inc
stos
loop
xor
repnz
mov
cs
stc
cmp
bound
adc
xchg
mov
xchg
cld
adc
push
cmp
ret
addr16
test
gs
cmpsl
push
das
icebp
and
sar
jmp
lods
cmp
arpl
repz
and
inc
test
mov
enter
or
ffree
loop
shr
push
push
stc
insb
call
jmp
lods
ret
filds
popf
rcrb
lcall
insl
pushf
divb
inc
pusha
or
ss
or
subb
scas
jns
push
ja
add
or
roll
adc
xchg
cs
daa
or
cmp
out
movsl
enter
sbb
push
xor
or
pop
mov
mov
ss
mov
int
repz
scas
outsb
pop
push
addr16
xor
xor
cltd
fildl
sub
pop
inc
fstp
pop
into
jle
movsl
daa
jl
ja
push
jno
dec
add
test
sbb
xor
dec
cmp
adc
fs
sar
jp
mov
cmp
ret
xchg
in
aad
subb
das
jae
mov
fisttpll
cmp
fcompp
sub
int
pop
push
xchg
mov
gs
jmp
clc
cmp
xchg
adc
js
mov
jl
gs
loope
mov
add
jae
mov
dec
sahf
xchg
stc
test
mov
mov
cmp
and
jno
jp
and
sbb
into
fbld
enter
ss
push
fiaddl
mov
scas
push
dec
jno
sbb
aas
pop
icebp
mov
notb
dec
xchg
mov
and
movsl
jo
add
out
pop
pop
sub
sbb
fcomps
pushw
cmp
push
ret
sarb
mov
push
jg
or
decb
dec
jno
dec
out
inc
ss
jge
mov
jg
cmp
imulb
sbb
or
push
sub
inc
sub
push
call
push
xchg
xchg
loope
loopne
mov
shlb
xchg
adc
imul
lea
jnp
outsl
pop
mov
cmp
xor
mov
lock
les
jg
testl
test
stc
xchg
and
adc
xchg
outsl
imul
idivl
mov
arpl
push
loop
enter
pop
jo
jbe
sub
cli
in
jae
adc
mov
jge
xchg
into
pop
insl
iret
cli
and
lea
popl
sbb
pop
daa
cwtl
stos
jne
movsl
push
mov
leave
jbe
nop
fidivrs
fninit
mov
mov
xchg
xchg
mov
daa
and
data16
inc
test
test
mov
pop
mov
pushf
or
dec
cs
in
sahf
add
xchg
mov
cmp
sub
into
mov
daa
movsb
mov
pop
mov
push
dec
cmp
les
pop
test
jno
and
imulb
push
push
enter
nop
adcb
push
lock
xlat
lods
ret
mov
imul
mov
imul
mov
gs
sub
lahf
int3
popf
fnstcw
test
jbe
out
or
mov
mov
fsubs
shl
and
sbb
mov
inc
add
fidivs
xor
and
xor
jo
lods
xor
mov
fldt
and
cmp
dec
loop
add
fisubrs
dec
push
adc
mov
rorb
xor
or
nop
pop
jecxz
test
push
or
fldl
xor
and
mov
add
sub
add
mov
mov
in
pop
pop
or
enter
pop
push
jo
data16
or
rcll
pop
xchg
add
dec
cmpsl
mov
pop
jecxz
sub
sbb
jae
sub
jmp
outsb
sbb
jae
outsb
test
movsl
jg
rorb
out
or
popf
push
das
jmp
inc
cmpsb
stos
mov
cmp
lds
data16
aaa
jmp
int
mov
cmp
fidivrs
mov
mov
mov
out
adc
push
push
lret
lock
shlb
addl
push
cmp
push
sub
lock
rolb
aam
sbb
mov
pop
xchg
or
out
insb
push
loopne
add
mov
insb
iret
jno
jo
sub
xchg
xlat
clc
into
shr
xlat
cmp
inc
stc
xor
adc
stc
scas
filds
enter
push
aaa
popa
cmpsb
add
adc
daa
mov
push
and
inc
lds
inc
orb
push
pop
mov
push
cmp
or
jl
push
fisubrl
into
xchg
mov
ficomps
mov
ret
cmp
lret
jae
mov
daa
add
out
sub
add
mov
mov
pop
xor
jg
fldcw
xlat
dec
and
mov
stos
pop
and
mov
leave
push
xorb
add
inc
lods
ficomps
mov
ljmp
jp
jnp
in
imul
jne
rcrb
xor
mov
push
les
or
or
cmp
mov
push
or
movsb
fisttpll
idivl
xchg
roll
add
inc
movsb
or
arpl
jb
jl
testl
jmp
add
lods
push
lods
pop
mov
lahf
mov
jle
sub
stos
mov
cmp
sahf
push
push
or
movsb
mov
inc
pusha
cmp
out
dec
fs
push
sbb
jns
pop
insb
cltd
or
add
mov
xchg
push
add
int3
les
mov
pop
jmp
dec
pushf
xor
jge
cmpsb
js
pop
aas
push
add
test
add
mov
test
push
inc
in
test
lock
enter
punpckhbw
xchg
mov
in
lock
mov
fwait
dec
xchg
repz
adc
xor
mov
loope
xchg
push
jmp
dec
sub
mov
mov
and
xchg
push
pop
nop
arpl
hlt
pop
or
pop
lret
xchg
lahf
pushf
fildl
call
inc
mov
lret
or
in
mov
xchg
mov
imulb
push
push
rcll
add
roll
out
mov
or
out
and
xchg
int
cmp
fistps
testb
pop
inc
mov
mov
and
lods
jp
fsubl
or
cmp
push
mov
lret
cmpb
adc
test
push
or
xlat
xor
aam
dec
jg
push
mov
loop
inc
sbb
test
lods
nop
push
fadds
lret
add
jle
addr16
add
or
arpl
in
sub
add
ss
lods
dec
ja
dec
dec
mov
adc
push
cmp
imul
sbb
pop
loope
popa
lea
adc
mov
stos
mov
xor
out
aam
imul
cld
jp
popl
pop
cmpsb
xchg
jae
ja
mov
pop
dec
fistpl
imul
mov
push
out
rcrl
fwait
lock
outsb
or
lea
shlb
lret
or
cmp
adc
mov
ret
mov
mov
xor
push
mov
mov
dec
insl
and
jns
push
aam
stc
jl
add
cmp
cmp
push
xlat
dec
push
dec
xlat
rorl
mov
lret
aam
mov
loopne
add
xor
sbbb
xor
sub
ljmp
or
ret
adc
add
adc
daa
bound
ja
push
mov
push
fwait
lahf
cld
mov
sub
jbe
sbb
in
cmp
push
jmp
mov
outsl
and
mov
mov
lcall
or
sub
daa
stc
in
xchg
mov
sub
icebp
push
xchg
int3
leave
outsb
mulb
mov
loopne
int
cmp
push
cmpl
add
fisubl
ljmp
push
push
push
cmp
repz
fdivrl
add
test
jp
and
or
pop
and
repnz
mov
adc
les
fistpll
xor
hlt
xor
xchg
stc
insb
cmp
and
rol
jl
sub
test
test
pop
push
rorb
jg
sti
push
push
sbb
sub
sti
mov
cmp
stos
xor
int3
cltd
imul
loop
or
xor
std
mov
fxch
add
mov
inc
lret
insb
push
test
lcall
xchg
stc
in
jno
xchg
add
mov
movsl
imul
cwtl
jge
out
add
sub
xchg
je
sub
roll
sarb
es
rcrl
sahf
push
adc
filds
ljmp
movsb
jp
add
mov
pop
inc
lea
in
add
je
in
sarb
or
inc
bnd
mov
lret
imul
sub
mov
or
mov
neg
test
inc
nop
in
jmp
and
flds
fnsave
adc
bound
mov
xchg
add
and
mov
push
mov
xor
icebp
dec
lea
test
sbb
xchg
and
adcl
sub
lds
mov
push
psllq
cmp
mov
cmp
add
fldl
fimuls
lock
mov
dec
mov
cmpsb
ret
pop
pop
mov
enter
jb
adc
inc
outsl
adc
sbb
fwait
cmp
das
push
pop
sti
enter
jns,pt
cmpsb
sbb
stc
mov
cltd
in
stos
cs
mov
pop
inc
int
std
push
add
or
mov
int3
dec
mov
icebp
push
insl
inc
xchg
and
out
mov
in
mov
push
cmp
scas
call
pop
test
adcb
mov
out
inc
and
fs
add
push
push
dec
cmpsb
sbb
mov
imul
sti
xchg
push
or
orb
jo
lcall
pop
and
jno
dec
pop
add
out
in
pop
xchg
xlat
lods
dec
mov
adc
adc
or
icebp
cmpsb
outsl
cmpsl
lods
cmp
es
es
test
dec
int3
mov
not
adc
in
mov
and
aaa
push
fs
repz
dec
popf
xor
adc
lret
mov
push
lds
jnp
mov
enter
jnp
shrb
xchg
and
push
xchg
sbb
lcall
out
jg
xchg
sub
lret
pop
jle
adc
jbe
mov
aad
xchg
and
dec
call
mov
fs
in
adc
scas
aam
sub
je
rcll
add
xchg
lret
jno
arpl
gs
imul
insb
lods
iret
rep
or
cltd
lret
mov
xorb
cmp
jns
jmp
or
leave
jo
int3
mov
sub
push
sbb
pop
outsl
fs
dec
mov
test
in
incb
cmp
adc
inc
outsb
push
imul
push
gs
rclb
adc
sbb
cmp
or
add
sbb
sub
dec
mulb
push
imul
stc
cmp
pop
cmpb
adc
mov
daa
mov
push
push
stos
pop
out
ficoml
dec
or
sbb
xchg
push
cld
xor
sti
bound
jns
lcall
cmc
xchg
outsb
enter
imul
das
jo
sti
add
cmp
cmp
add
decl
outsl
dec
push
imul
inc
and
adc
xchg
xor
int
clc
flds
imul
movsl
arpl
push
dec
out
frstor
scas
mov
xor
stos
sbb
jge
cld
mov
xor
dec
lods
inc
dec
inc
das
stc
jge
stos
jb
bound
fdivrs
push
int
scas
enter
sbb
push
adc
out
leave
xchg
mov
mov
xchg
push
inc
nop
or
jno
das
adc
cld
fcomp
sub
mov
negb
add
mov
cmpsb
adc
shlb
jecxz
mov
mov
fsin
fbld
mov
js
push
imul
bound
cmp
and
xchg
or
push
xor
out
mov
xor
popf
outsb
dec
pop
mov
fdivp
pushf
mov
mov
sbb
dec
scas
push
mov
inc
inc
daa
jl
add
xor
pusha
in
push
sbb
fcmovbe
jb
or
add
xchg
lea
lds
or
mov
mov
push
out
jg
hlt
scas
mov
add
adc
mov
sub
xchg
sbb
dec
fisubs
push
loop
cwtl
mov
jecxz
mov
and
cmpsl
mov
cld
and
push
repnz
and
mov
aaa
jle
imul
or
mov
xorb
xchg
inc
xchg
push
mov
fwait
dec
xor
mov
call
leave
jp
and
out
xchg
mov
aam
mov
fsubs
in
mov
dec
cli
dec
popa
popa
fnstenv
leave
ret
xchg
mov
push
into
pop
aad
arpl
fisttpl
fists
fsubrl
scas
mov
lret
enter
lods
adc
push
out
sub
jne
enter
adc
scas
lods
test
dec
inc
and
dec
mov
mov
push
pop
jp
fildll
adc
add
jnp
sbb
loopne
insb
adc
jp
cmp
add
adc
and
jmp
insb
fiaddl
mov
es
je
out
mov
mov
push
add
inc
mov
fnstenv
mov
jo
sbb
je
in
cs
imul
call
stos
or
into
stos
movsb
je
or
mov
outsb
div
hlt
push
lret
decl
pop
mov
fstps
outsb
stos
cmp
ror
movsl
loopne
mov
sti
xchg
pop
and
gs
and
ficoms
ds
aaa
test
or
test
jecxz
scas
add
es
out
hlt
add
imul
mull
in
xchg
adc
andl
repnz
xchg
mov
ds
bound
cmpsl
icebp
push
push
insl
in
add
lock
ret
push
mov
mov
dec
cmp
push
filds
mov
in
add
ss
xlat
dec
pushf
cmp
jge
in
pop
ss
adcb
pop
mov
lds
xor
jo
jp
mov
cmp
in
add
cwtl
adc
jg
pop
addr16
push
pop
pop
imull
mov
adc
jge
cmpsl
nop
dec
xlat
imul
adc
mulb
and
xchg
aas
fidivrl
and
add
and
pusha
pusha
sub
cmpsl
movsl
mov
adc
mov
xor
popf
lods
stos
std
sub
pop
js
aaa
push
mov
es
pushf
sbb
add
aas
push
xor
lea
or
mov
inc
jp
outsl
dec
jbe
mov
outsb
or
mov
add
and
daa
arpl
cs
fucomip
shll
jmp
ficoms
jge
fistl
xor
or
mov
sub
out
inc
adc
mov
rcrb
or
imul
cmp
lea
js
stc
xchg
mov
sbb
loope
adcb
dec
mov
stos
jecxz
dec
stos
push
movsl
dec
sti
cltd
rorb
vsqrtps
mov
xchg
fadds
mov
clc
jg
pop
cmp
fnstenv
orb
repnz
pop
pop
inc
xchg
adc
push
hlt
pushf
lds
jl
movsb
dec
sub
or
inc
add
out
mov
xor
lahf
lret
jg
call
jb
dec
xchg
cmp
cmp
scas
arpl
outsb
jb
and
pop
enter
jecxz
fdivrs
lret
sub
jo
rcr
sub
cli
jecxz
jno
pop
andb
fnstenv
mov
mov
pop
call
clc
mov
dec
jne
mov
pop
fwait
jl
stos
and
pop
jne
lcall
jecxz
xchg
add
cmp
lea
jle
push
outsb
roll
mov
popf
mov
cli
arpl
or
xchg
outsb
sub
and
mov
rcrl
subb
lret
inc
stos
xor
inc
mov
pop
movsb
xchg
enter
std
pusha
push
push
mov
das
rclb
inc
sub
jae
adcl
shr
cmp
adc
ret
add
jnp
lods
xchg
jbe
xchg
sub
out
cld
jno
jge
pop
or
repnz
xchg
out
pop
jge
test
negb
adc
add
sub
jo
fisttpl
jl
pop
shll
cmp
dec
out
aas
in
scas
sbb
or
push
divl
adc
mov
pop
cmp
cmp
fidivrl
aam
pop
fiaddl
sub
arpl
mov
stos
mov
and
loope
and
out
xchg
pop
out
loopne
dec
das
xor
mov
add
xor
pop
and
jg
inc
sbbl
les
stc
and
pop
cmp
cmpsl
aas
pop
mov
add
cld
pop
pop
xchg
lret
jle
stos
lods
pushf
cmp
mov
jae
cmpsl
loope
or
mov
std
or
jl
dec
jne
sbb
test
rcr
mov
mov
pop
xchg
cmp
das
std
test
dec
and
jns
cmpsb
test
mov
mov
sbb
pop
mov
cli
dec
std
jge
xor
mov
stc
pop
adc
cwtl
sarb
pop
jmp
inc
xchg
cmpsl
sub
dec
mov
mov
sub
dec
cmp
xor
notl
scas
adc
add
lcallw
sub
push
bound
int3
daa
push
inc
or
cmpl
or
jae
mov
jmp
xchg
dec
repnz
push
adc
sbb
sbb
std
xor
pop
jne
push
push
pop
or
mov
inc
inc
fs
rcrb
sbb
mov
push
mov
adcb
mov
mov
cmp
daa
out
xor
sub
arpl
push
push
dec
daa
add
xor
add
push
stos
ljmp
icebp
add
xor
dec
xchg
or
and
les
cmc
mov
loopne
dec
push
xchg
jge
jecxz
sbb
push
repnz
jge
cmc
adc
push
add
mov
jmp
inc
test
imul
xchg
loope
and
push
les
jg
dec
push
rcr
jbe
and
xor
push
mov
cmpl
pop
sub
mov
cmp
fadd
sbb
xor
and
imul
add
push
in
adc
sbb
pushf
fwait
cmp
sub
dec
jne,pt
fucomi
mov
out
loopne
lret
and
jmp
add
mov
daa
sub
fdivs
xor
add
jmp
push
sbbb
imul
aam
pop
mov
push
sbbl
loop
sub
push
dec
lret
jb
dec
sub
add
in
push
cs
sub
sub
test
cs
daa
jle
fists
cld
fs
data16
ss
cmpsl
or
and
mov
outsb
shll
add
sbb
sub
push
pop
les
pop
sub
jmp
xor
mov
inc
adc
add
data16
sarb
adc
ljmp
jmp
hlt
hlt
pop
mov
imul
dec
aam
jb
add
xor
sub
mov
inc
inc
in
dec
or
je
jp
lea
xor
in
jmp
je
jle
frstor
psraw
outsl
add
ss
mov
pusha
sbb
xchg
adc
enter
pop
inc
xor
mov
and
cmp
xor
repz
lahf
cwtl
mov
sub
xor
xchg
into
fsubl
lahf
fstl
cwtl
adc
pop
adc
pushf
ret
push
sub
cmpsb
jno
repz
mov
push
fldl
mov
push
jae
pop
and
sub
xor
xorl
push
sub
nop
sub
pusha
test
cmpsl
push
mov
pop
push
xor
inc
mov
idivl
dec
outsl
or
mov
test
insl
gs
adc
lods
mov
jno
jp
xchg
scas
int3
add
je
leave
jecxz
jno
pop
dec
in
dec
pop
xlat
and
cmp
or
in
sti
jo
jnp
jg
push
mov
adc
insl
pop
aas
popa
pushf
dec
jno
movsb
cmpsb
cmp
add
xchg
adc
jmp
test
rolb
rcrb
push
jg
lret
hlt
inc
fidivrs
leave
mov
sub
inc
sbb
les
add
fdivr
icebp
cmpl
mov
mov
xchg
cmp
in
call
pop
jb
aad
scas
push
fiaddl
mov
fsubs
jp
adc
clc
add
bound
xchg
sahf
loopne
pop
adc
jmp
in
ss
sub
addr16
mov
stos
popa
mov
mov
cmp
hlt
into
cld
jl
lret
push
push
xor
xor
add
sbb
push
and
mov
fisttpl
pop
mov
data16
add
inc
or
aas
shll
inc
xor
aaa
pop
sbb
cmp
push
push
add
mov
stos
lea
sbb
rcll
jecxz
inc
jno
add
cld
sar
cmp
bound
bound
jo
out
jge
arpl
fs
inc
in
bound
es
cmpsb
adc
aam
mov
and
dec
lods
jns
fwait
sub
lret
push
test
loopne
imul
cli
fldt
sub
adc
jbe
ljmp
mov
mov
and
pusha
pop
loope
mov
or
adc
pop
push
shrb
ret
filds
mov
test
lcall
or
iret
cmp
cltd
out
sub
mov
lcall
dec
call
sbb
pop
repz
mov
sbb
cmc
data16
jge
les
das
pop
jo
das
inc
dec
xor
jg
jae
push
adc
orl
imul
inc
testb
mov
sbb
xchg
and
in
mov
in
mov
imul
dec
dec
fldcw
sub
clc
or
pop
cmpsl
pop
cmpsl
fs
stc
fucomip
mov
add
ret
test
pop
and
xchg
mov
mov
andl
cmpsl
xor
das
cmpsl
mov
in
ficomps
stc
fnstcw
mov
popf
int
repz
or
or
fldenv
pop
xchg
das
pop
rcll
jo
jb
xor
flds
push
inc
aam
xlat
jnp
sti
pop
sbb
std
nop
or
jo
lods
or
imul
adc
push
cmpl
push
adc
and
cld
pushf
daa
lahf
leave
dec
sahf
and
test
xchg
cmpsl
fs
out
outsb
add
pop
push
or
jl
xor
jmp
popa
imul
rclb
test
pop
inc
fdivrl
jae
xor
scas
inc
mov
fldl
in
cmp
sub
xchg
mov
mov
dec
into
inc
div
pop
cmp
cltd
lods
or
mov
or
stos
mov
aad
mov
dec
sub
or
dec
mov
xor
sub
data16
in
mov
decl
movups
pop
sub
pop
push
push
xchg
je
scas
pop
popa
jp
inc
pop
test
or
loopne
test
push
mov
fstps
xor
test
outsl
bound
mov
cmp
xchg
ret
leave
add
sbb
data16
push
mov
daa
pop
icebp
jae
lods
aam
sbb
andl
subl
xchg
icebp
cmp
push
out
stc
sbb
xchg
cmp
fs
sbb
test
lea
repz
daa
dec
ret
in
pop
pop
xchg
iret
fwait
cs
push
push
js
adc
sbb
nop
fwait
inc
call
pusha
dec
pop
add
imul
mov
mov
sub
lds
cmc
jl
jp
xchg
inc
jle
push
pop
mov
pop
cmovle
mov
inc
pop
or
inc
mov
out
test
xchg
cmp
inc
pop
cld
fiadds
sub
rolb
push
mov
cmp
outsb
cmc
int3
fstps
leave
adcb
jne
mov
stc
inc
jns
jl
rolb
push
ss
es
leave
xor
xchg
ficoms
fwait
and
or
pop
in
mov
mov
je
ds
mov
sub
push
push
dec
fists
adc
cli
inc
push
xchg
fildl
adc
adc
popf
sub
jmp
add
stc
ljmp
or
ret
stc
leave
xor
pop
pop
cmp
cli
xchg
std
pop
mov
outsb
and
lret
jne
in
sbb
sahf
sbb
xchg
in
dec
mov
xchg
cmp
or
xorb
stc
inc
push
push
or
push
out
out
repz
aad
fildl
aas
sbbl
inc
sub
push
dec
sbb
daa
mov
and
jns
scas
sarl
out
xchg
std
rolb
loope
outsb
jmp
js
and
dec
jae
fs
arpl
pop
mov
xchg
ja
cmp
pop
lea
dec
leave
mov
cmp
fldenv
mov
int3
lcall
mov
imul
ret
dec
push
pop
push
or
pop
nopl
sbb
cld
loope
and
mov
xlat
adc
sub
cmp
sbb
movsl
fcmovb
sub
stc
sti
stos
sbb
roll
jb
mov
into
daa
icebp
inc
and
je
add
out
mov
into
sub
push
xlat
in
dec
mov
mov
sbb
mov
inc
test
pop
add
insl
or
mov
adc
cmp
in
pop
cmp
inc
loopne
cmp
loopne
test
leave
scas
out
or
dec
lcall
and
adc
test
ljmp
jbe
or
or
fcmovu
cmp
xchg
icebp
push
sbb
xor
shlb
int
ret
and
jno
adc
mov
jge
or
jbe
jl
fsubs
pop
nop
imul
sbb
movsb
fldl
lret
iret
outsl
pop
test
imull
xor
insb
gs
icebp
push
rorl
add
dec
jecxz
jns
mov
pop
cmpl
jns
out
xchg
push
jne
cmpsb
loop
sbb
shrl
aad
repnz
jb
ds
outsb
push
push
mov
or
pop
cmpsb
clc
out
popa
xorb
loopne
and
ds
mov
mov
sti
test
sbb
repz
pop
es
rdmsr
cmp
mov
outsl
cltd
movsb
mov
repnz
popa
rolb
es
adc
jo
or
add
mov
lds
xor
int3
std
dec
pop
xchg
bound
fld
or
adc
xchg
rcrl
adc
and
inc
add
into
mov
push
push
out
jae
cwtl
mov
and
out
jmp
nopl
and
push
int
fwait
leave
push
lret
xor
imulb
cmc
aaa
jae
dec
jmp
pop
fsubs
dec
dec
pop
or
cmp
lock
and
cmpl
mov
jb
inc
aaa
mov
call
xor
mov
and
les
fnstenv
jns
dec
popa
dec
fs
xor
xchg
std
inc
cld
adc
jo
cli
stc
lods
lods
mov
pop
enter
sub
mov
out
inc
andl
push
pop
cltd
aad
mov
das
pop
mov
mov
or
jb
std
adc
adc
icebp
mov
nop
mov
add
jp
arpl
dec
and
inc
sbb
dec
inc
fmull
push
mov
mov
mov
test
push
push
popf
sbb
fistl
lods
call
add
or
in
push
and
ret
pop
xchg
adc
cmc
in
lret
mov
jle
cmp
cmp
mov
mov
dec
aam
sbb
in
mov
out
in
stos
lea
daa
sub
sahf
pop
jo
das
sub
mov
or
xchg
add
mov
popf
adc
lcall
lret
add
mov
mov
mov
shll
nop
mov
leave
mov
or
sbb
mov
addb
scas
imul
nop
jae
inc
scas
cmp
add
int
cmp
xchg
and
in
jge
cmp
loope
scas
push
jno
sbb
popw
pop
dec
and
mov
in
inc
stos
adc
lea
popf
cmpsl
inc
data16
mov
sbb
xchg
pop
push
or
push
test
add
inc
fcoms
fisttps
jne
addb
jmp
jnp
xor
cmpsl
ret
mov
mov
pop
out
mov
sbb
xor
jnp
cmp
mov
mov
pop
cmp
data16
js
out
inc
mov
ds
sbb
lock
xor
sbb
rorb
jno
je
fidivrs
aas
iret
outsl
les
pop
out
fldcw
mov
dec
test
das
sti
cmp
cwtl
jecxz
inc
inc
dec
cmp
pushf
sub
xchg
jmp
shrb
fwait
ja
lret
xchg
or
mov
pop
ds
lret
xchg
dec
cmp
xor
das
clc
ljmp
pop
call
inc
jl
cmp
shrl
sahf
imul
adc
and
ret
inc
fcmovnb
clc
mov
mov
outsl
xchg
pop
xchg
stos
jno
jecxz
push
jecxz
fdivs
xlat
cmp
jp
xchg
push
adc
repz
je
mov
int3
and
xchg
popa
fs
push
adc
fsts
xchg
sbb
add
cmpsl
mov
std
xchg
out
mov
popf
push
inc
lret
mov
mov
pop
sbb
adc
push
movsl
pop
mov
in
out
xor
pop
lock
lret
movsb
mov
adc
call
sub
lret
or
xchg
mov
js
leave
push
and
addr16
add
fisubrl
mov
cltd
lcall
or
fisubs
addl
lods
jbe
dec
lret
cld
nop
push
cwtl
inc
fsubs
and
fldpi
std
out
adc
insb
cmpsl
mov
and
das
push
or
cmp
negl
lods
lock
mov
mov
push
je
inc
add
mov
jns
lds
push
cld
sbb
add
jl
mov
jne
shrl
xlat
cmp
in
and
xchg
test
mov
filds
ss
push
inc
sbb
xor
sbb
adc
push
imul
add
lock
outsb
sub
fisubs
lahf
icebp
or
sub
ret
test
in
lea
xchg
or
or
jns
mov
mov
jmp
mov
jne
add
stc
pop
push
das
leave
fsubs
sbb
rcrl
jne
aas
loopne
loope
icebp
pop
hlt
xchg
popa
inc
push
scas
stos
fsubrl
mov
sbb
sti
iret
int
addr16
test
or
jno
pusha
in
mov
jle
imul
js
pusha
pop
sub
popf
popf
shll
js
pushf
sbb
cmp
inc
jne
xor
sbbl
popa
xchg
push
or
cmp
scas
decl
mov
jecxz
or
push
out
jno
sbb
adc
das
in
add
pop
out
outsb
cmp
and
jne
outsb
push
xor
and
repnz
popf
mov
test
add
and
cs
and
or
sub
cmc
pop
pop
mov
mov
leave
and
aam
daa
push
and
mov
addr16
int
inc
jl
out
mov
and
imul
movsl
ffreep
ss
insl
iret
ret
add
mov
std
mov
cmp
mov
adc
sub
imul
push
jle
repz
sub
dec
mov
cltd
mov
es
sbb
push
sub
cmp
jecxz
ficompl
imulb
inc
ret
stc
insl
mov
pop
outsl
jle
stc
sbb
and
fs
stc
push
sub
lea
js
inc
or
cwtl
das
sti
aaa
xor
xchg
adc
sbb
xlat
dec
jecxz
or
in
push
add
inc
xchg
mov
cmp
push
mov
mov
stos
movb
xlat
mov
dec
cmc
ficoms
add
cmc
cmpsb
repnz
out
and
mov
movsl
jg
mov
out
mov
icebp
mov
testb
cmp
stos
jg
jae
sbb
cli
insl
mov
add
pop
pop
xchg
cltd
popa
xchg
test
mov
dec
xchg
hlt
imul
lods
jne
repz
mov
sub
adc
sbb
dec
or
fistps
std
adc
or
shl
mov
or
addr16
jp
push
fsts
pop
or
rorl
adc
cltd
adc
scas
inc
push
push
xchg
movsl
and
or
js
lea
push
out
or
dec
aam
into
addb
imul
dec
push
cli
int
adc
cmp
loope
addr16
mov
add
pop
push
cmpsb
mov
dec
repz
cmp
xchg
push
divl
mov
push
dec
or
pop
aas
push
xor
mov
xchg
mov
mov
jae
dec
jge
cmpsl
mov
sbb
adc
xchg
pusha
xchg
adc
ret
das
pop
fsubl
leave
lret
mov
mov
push
shl
lea
add
jae
aam
xor
test
and
pushf
sub
cmp
out
push
pop
and
jnp
lret
mov
testl
mov
pusha
insb
cs
out
aas
in
jp
and
cmpl
mov
or
bound
mov
add
xchg
push
adc
jae
std
insl
sub
inc
mov
leave
loop
mov
aaa
lock
sbb
cmp
xchg
xchg
int
pop
adc
repz
pop
data16
or
addr16
mov
inc
sbb
rcr
fisubl
adc
dec
xchg
mov
fwait
mov
lahf
int
out
jne
push
ret
pop
mov
insl
sub
das
ja
shll
and
stc
pop
cld
xchg
jbe
jge
call
mov
negb
and
popf
and
into
into
pusha
xchg
js
xor
lcall
outsb
iret
adc
xor
push
stos
int
cmp
adcl
outsb
lea
adc
clc
pop
inc
test
mov
cltd
push
out
sti
fistps
inc
ja
adc
pop
jnp
xor
mov
mov
xchg
adc
or
popl
push
jp
cmp
or
push
inc
pop
pop
subb
cmp
ret
jnp
js
ret
add
inc
mov
adc
repz
popa
fdivs
adc
addl
loop
cmp
sahf
push
int
pop
jp
loop
into
imul
inc
and
inc
mov
int
in
sub
lods
inc
jns
leave
sbbb
mov
push
fs
stos
cmp
xchg
call
ja
arpl
ja
in
not
pop
stos
movsl
sbb
mov
cmp
mov
js
pop
inc
mov
aas
movb
sti
rcrl
fwait
mov
test
push
cmpsb
std
mov
mov
or
mov
test
in
iret
pop
mov
hlt
and
inc
test
xchg
mov
cltd
movsl
push
mov
repnz
jl
insl
pop
cltd
mov
cmpsl
lods
sbb
les
mov
or
int3
rcll
gs
les
insb
xchg
pop
sub
dec
mov
and
sti
dec
xchg
pop
hlt
cld
push
fildl
ljmp
mov
add
in
ja
push
movsl
and
and
call
pop
push
ret
leave
add
mov
jno
clc
jge
sbb
dec
stos
mov
xchg
pop
jl
cmp
xchg
push
movsl
inc
and
jns
enter
mov
jns
out
or
push
les
sbb
sbb
xor
dec
push
pop
or
mov
mov
out
pop
pop
or
lods
test
cmp
cmpl
imul
cmc
mov
adc
stos
sbb
out
cmpl
sub
aam
adc
popf
inc
stos
or
scas
and
int
shl
jl
insb
adc
outsl
pop
sbb
nop
and
insl
push
dec
imulb
inc
scas
in
cmpsl
lcall
jmp
cmp
mov
pop
mov
push
push
xchg
mov
add
das
xor
mov
push
dec
cltd
leave
lahf
fdivrl
or
cmc
add
cs
xor
sub
lret
xlat
pop
jb
push
and
fidivl
cmpxchg
xor
mov
movsl
push
test
adc
adc
adcb
adc
sbbl
jae
aas
mov
inc
inc
jle
dec
cmp
das
mov
pop
mov
arpl
sbb
adc
lea
lock
movsb
xor
jnp
xor
xor
enter
pop
out
inc
jno
xor
test
out
cmpsl
js
imul
mov
or
sub
lock
vmwrite
jl
xchg
pop
sarb
push
xchg
ret
les
mov
or
in
int3
cwtl
mov
clc
mov
fldl
or
jle
imul
adc
cwtl
dec
enter
fst
lcall
aaa
loope
and
sar
or
xchg
mov
loop
lea
in
sub
push
les
enter
cmp
inc
jmp
and
mov
lods
push
pop
cmp
cmp
cmp
xor
enter
pop
scas
cmp
add
lea
dec
test
std
mov
arpl
repz
aaa
das
sbb
in
cli
bound
adcb
sub
xlat
inc
pusha
mov
imul
inc
sub
daa
ss
das
inc
pushf
imul
test
mov
loope
mov
mov
ljmp
mov
cmp
and
xor
add
xor
xchg
inc
sub
jp
iret
mov
sbb
imul
pop
or
cli
sbbb
sub
cmp
inc
jb
sub
sqrtps
mov
cmp
or
lea
in
in
cmp
push
int3
push
fisubrl
add
push
mov
pop
cmpsb
and
lret
sti
mov
push
sbb
xor
aas
jb
push
pushf
pop
sahf
ret
mov
mov
add
push
xchg
push
push
jae
aad
mov
mov
lods
dec
divl
push
sahf
cmpl
mov
adc
mov
leave
jp
mov
testl
mov
jmp
stos
xchg
jo
movsb
xor
dec
out
inc
jmp
adc
or
jle
gs
add
icebp
daa
outsb
js
es
cs
and
push
or
mov
sbb
cmp
ret
xor
pop
adc
repnz
mov
jo
lds
sub
xchg
test
or
jecxz
xor
movsb
pop
mov
mov
sbb
nop
sub
dec
cmp
xchg
sahf
filds
cltd
jne
mov
push
lock
push
addb
mull
add
sbb
add
mov
jns
sbb
and
loopne
adc
adc
jb
inc
mov
add
push
jo
loop
add
mov
bound
sbb
lahf
inc
ror
stc
int
mov
xor
loopne
or
stc
dec
and
mov
mov
loopne
sbb
imul
jns
fwait
outsb
push
rorl
xchg
mov
push
push
fistpll
and
or
gs
pop
outsb
mov
cwtl
in
push
sub
cmpsl
cmp
cmp
mov
insl
movsl
cmp
push
daa
jo
mov
push
mov
lahf
inc
fcompl
or
adc
stc
sbb
dec
cmp
cli
movsl
imul
cld
xchg
mov
insl
ss
mov
ret
std
pop
sahf
pop
jae
push
aam
adc
gs
add
xchg
mov
shr
ret
add
movsl
mov
imul
outsb
add
push
xor
add
sarb
pop
or
xchg
xchg
rcrl
fistpll
jg
movsb
cltd
push
les
outsl
js
add
lret
xor
movsl
sbb
inc
cs
aam
xor
push
sub
or
addb
mov
push
push
dec
mov
pop
adc
mov
cld
pop
mov
mov
scas
or
push
test
cmp
adc
cwtl
push
adc
xchg
addr16
pop
aas
or
lock
out
hlt
mulb
lods
iret
jmp
or
jg
loop
test
inc
dec
mov
add
in
cwtl
push
test
xor
insb
cmp
mov
or
ja
push
rorl
bnd
pop
fs
mov
add
mov
jl
sti
jecxz
or
or
add
cmpsl
push
fidivl
test
sub
setnp
push
loop
mov
sub
stc
cs
sub
adc
jbe
les
add
jnp
pop
or
xor
jecxz
inc
sub
xlat
add
fs
call
sahf
dec
call
rclb
neg
imul
call
movsb
subl
cmp
sub
cs
sub
xchg
stos
out
xchg
push
lds
fs
pop
dec
pusha
popa
loope
pop
dec
fsts
adc
test
cwtl
lds
dec
mov
nop
in
push
enter
add
ss
cmpsb
cli
ror
add
roll
sti
push
fstl
mov
mov
inc
addr16
mov
lds
dec
xchg
movsb
aaa
fld
push
dec
add
cwtl
xchg
loope
inc
fsubrs
ss
arpl
ds
mov
add
lds
sbb
sbb
cs
repnz
push
hlt
movsb
sub
and
hlt
cltd
in
mov
xor
hlt
in
mov
adc
pop
jb
mov
dec
inc
and
add
fs
add
test
xchg
cmpsb
sub
test
sub
inc
xlat
push
das
lfs
imul
out
jns
imul
fwait
dec
in
aad
jg
xrelease
pop
leave
rorl
stos
lret
and
jg
mov
pusha
out
scas
jmp
push
pushf
add
shl
mov
mov
xchg
lahf
movsl
sbb
aad
mov
fst
inc
mov
or
sbb
lea
imul
and
fcomi
mov
sbbl
inc
sub
stos
cmp
xchg
jnp
jns
mov
rclb
mov
in
test
dec
addr16
clc
in
movsb
repz
adc
int3
xchg
or
xor
adc
sub
pop
stos
cmpsb
jl
out
cmpsl
push
rcrl
test
jno
sub
or
rcll
je
and
sbb
mov
mov
int
punpcklbw
pop
xor
mov
and
pop
and
in
std
jnp
in
fwait
nop
xor
dec
add
iret
jnp
cld
jmp
push
push
jmp
ss
jle
aam
out
xchg
xor
stc
jge
sub
jmp
sub
xchg
js
sbb
pop
in
lods
stos
scas
rorb
push
loop
xchg
xor
lock
pop
out
ficoms
pop
mov
xchg
pop
inc
cmpb
jb
push
adc
jge
outsb
ss
sti
orl
xchg
into
data16
jecxz
dec
loope
push
cmpsb
addl
jns
repz
in
jle
cltd
cmp
sbb
mov
jecxz
stos
jle
test
jne
jo
lret
and
gs
aad
ljmp
ffreep
aam
mov
add
outsb
in
jne
push
jl
push
stos
imul
lret
in
and
add
mov
cwtl
add
dec
int3
sarb
cmp
pop
cmp
sub
arpl
lock
out
incb
add
pop
xchg
dec
imull
bound
jae
cmpsb
sbb
cld
mov
sbb
jo
adc
ds
mov
sub
sbbl
dec
push
je
and
xor
jno
mov
pop
push
repz
loopne
lahf
dec
add
in
int3
dec
cmp
je
push
jge
fdivrs
lret
fisubrl
pushl
stc
movsl
jbe
pushf
repnz
mov
push
lret
ds
lret
aas
int3
sbb
mov
popa
lcall
xchg
sub
jb
jmp
sti
cmpsb
xlat
push
mov
pop
push
outsl
inc
sbb
dec
test
or
cmp
sti
and
xorb
call
cli
insl
xorb
inc
arpl
lret
push
popf
pop
aam
test
jl
sahf
dec
nop
outsl
lea
xchg
jmp
inc
pop
nop
psubq
stos
movsb
gs
pop
loopne
in
dec
adc
aam
mov
cmpsl
adc
das
add
xor
or
adc
inc
inc
and
xchg
ja
cmp
loope
out
mov
mov
inc
push
jle
test
out
dec
in
rcrb
movsl
adc
pop
push
imulb
mov
loopne
sbb
adc
push
cmp
mov
mov
fcmovne
loopne
jo
lods
scas
xor
bound
hlt
das
or
xchg
inc
xchg
sbb
insl
lahf
icebp
pop
stc
mov
inc
fcoms
shlb
push
mov
or
mov
dec
sub
jb
jp
loopne
xor
sbb
jae
or
jne
ljmp
mov
mov
sbb
push
daa
cltd
mov
push
cli
jns
mov
cmpb
stos
orl
mov
test
repz
mov
lods
dec
xchg
ret
cmp
dec
inc
or
jmp
in
out
in
out
es
repz
lahf
fcomi
call
ljmp
jecxz
js,pn
insb
es
push
je
int3
fnstenv
mov
test
mov
jo
icebp
xlat
xchg
mov
push
sub
jae
enter
or
jne
call
xchg
aas
xor
inc
cmp
sub
sbb
bnd
xchg
mov
dec
sbb
in
gs
mov
into
add
push
scas
call
rcll
sbb
xorb
add
dec
xorl
mov
insb
xor
add
ficompl
pop
jg
cmp
lods
pushf
iret
inc
push
jnp
pop
jmp
scas
cmp
mov
leave
push
in
cli
stc
jb
mov
sahf
mov
sub
sub
sbb
nop
inc
and
popf
lea
inc
lahf
sub
cmp
pushf
cmpsb
xadd
frstor
repnz
mov
or
pop
gs
fs
sbb
push
inc
ja
movsl
mov
xlat
inc
inc
cmp
xchg
divl
loop
mov
inc
inc
mov
fwait
mov
aaa
call
popa
pop
or
sub
jp
jb
add
jae
inc
mov
mov
inc
sbb
sub
je
sti
lret
mov
jne
shl
lret
inc
sbb
inc
pop
stos
test
movb
shr
sbb
inc
cmp
aam
sub
loop
push
sbb
data16
and
mov
add
mov
jns
add
mov
bound
icebp
sub
pop
inc
pusha
xchg
lods
sbb
inc
and
xor
or
gs
or
adc
xchg
xchg
popf
adc
repz
mov
sbb
xor
test
mov
and
dec
xor
xor
lcall
pop
pop
ret
pop
ss
test
lahf
inc
mov
lods
jle
nop
jp
dec
or
inc
or
mov
and
mov
fstpt
sub
das
xor
mov
adc
adc
xchg
ror
xor
push
push
jae
stc
loopne
push
sub
mov
xor
xor
jno
adcb
ds
adc
xrelease
data16
not
mov
sub
jge
add
mov
jae
daa
push
cld
jmp
jbe
loope
ljmp
mov
int
fistps
dec
and
cmc
cmpsb
sub
pop
push
xchg
mov
pushf
push
mov
jg
loope
mov
mov
dec
test
fdiv
push
pop
scas
cmp
daa
push
ds
fnstcw
dec
xor
aad
test
cmp
jl
pop
dec
mov
lock
or
aam
push
mov
jb
in
dec
mov
shrl
xchg
mov
inc
scas
cmpsl
scas
pop
mov
and
add
test
mov
mov
push
push
imul
negl
push
mov
jnp
xorb
orl
addl
fimull
sub
mov
dec
mov
xchg
sub
stos
stc
stos
dec
fwait
jmp
stos
ficompl
test
jge
mov
sub
arpl
push
mov
jne
cld
pusha
shll
mov
mov
and
loop
insl
and
push
sub
jne
mov
dec
mov
in
imul
inc
loop
jno
pop
jp
and
out
js
or
cmp
daa
fdivl
jmp
jns
aaa
jp
sbb
inc
aam
xor
and
lods
inc
jnp
sbb
roll
shl
xchg
dec
int3
stos
push
and
sub
xchg
addb
inc
fcoml
icebp
fcmovu
jg
jge
sti
out
lret
std
push
pop
jae
sbb
rolb
push
adc
in
mov
jae
aam
fcomps
arpl
sahf
or
nop
addb
mov
fidivl
mov
into
movsb
outsb
or
lcall
sub
mov
fnstsw
and
cwtl
pop
mov
or
insw
movb
sub
rorl
mov
pop
add
ret
cli
inc
imul
xor
xchg
add
adc
andb
mov
jns
outsb
mov
in
inc
repz
insb
ljmp
ds
stc
pop
stos
fwait
sub
loopne
sbb
xchg
aas
xlat
bound
sbb
mov
lds
cld
enter
es
sub
xor
cmpl
fmul
jecxz
scas
test
mov
cmp
push
lret
fwait
sbb
shr
lds
lea
aaa
lret
lods
push
lods
pop
cmp
fcompl
or
push
push
sbb
mov
and
and
adc
xor
lcall
out
mov
mov
jne
cmp
adc
mov
or
cmp
bound
fs
and
mov
mov
scas
mov
cmp
jmp
cmp
and
repz
xchg
fisttps
add
xor
lods
popa
js
lods
mov
jae
mov
sub
xor
push
in
mov
test
or
mov
cld
faddl
add
aam
fisubs
data16
xor
stos
sub
ret
xor
cmpsb
lret
clc
mov
mov
pop
push
pop
or
stc
or
inc
loop
push
leave
cmp
addr16
enter
adc
lret
or
jp
aas
dec
enter
idivb
push
add
mov
and
adcl
dec
je
out
std
adc
fdivs
jl
mov
sbb
mov
jns
dec
std
pop
in
adc
repz
lahf
mov
dec
rorl
mov
sub
fadds
or
loope
sarb
cmc
pop
shr
iret
scas
jl
sub
mov
push
leave
push
cmp
mov
mov
stos
cmpsl
mov
and
pop
jmp
lods
icebp
pop
in
lds
lock
jbe
in
mov
repz
inc
or
push
dec
cmp
mov
fistpl
mov
ja
push
fimuls
imul
aad
pusha
popa
insb
pop
sahf
dec
cmp
lds
xor
into
xorb
aad
scas
inc
pop
jle
and
jg
sbb
sbb
popf
scas
xchg
in
mov
or
aam
jnp
je
into
test
out
adc
add
in
and
inc
and
out
fst
mov
pop
pop
or
xor
and
leave
dec
and
sbb
cmpsb
cld
add
mov
cmpsl
fidivs
mov
ret
pop
inc
std
jmp
inc
idiv
push
jbe
je
mov
test
sti
add
in
aaa
lcall
imul
mov
push
push
or
iret
sbb
jg
xchg
pop
fsubs
pushf
mov
into
ss
repnz
inc
inc
pop
in
or
jae
push
push
mov
push
mov
sbb
into
mov
mov
adc
repz
gs
in
popaw
cwtl
pushf
sbb
leave
mov
inc
mov
cmp
cmp
es
scas
xchg
xor
sub
ja
xor
xor
loop
inc
out
sub
xor
loope
imul
call
jo
jmp
sarb
mov
popa
and
inc
jbe
add
stc
jecxz
and
xchg
rolb
jno
fwait
test
aad
repz
mov
addr16
dec
test
sub
cmc
in
out
rol
outsl
cmpl
jmp
push
iret
dec
dec
and
adc
fmuls
mov
jge
pop
pop
fwait
push
xor
pushf
mov
mov
add
mov
mov
xchg
popaw
outsb
jge
sub
xchg
add
pop
ss
xor
movsb
sub
cwtl
lods
fwait
mov
mov
mov
push
lods
jne
mov
adc
into
sar
cmp
adc
sub
iret
mov
popf
or
or
or
add
jne
ret
aam
and
xchg
fnstcw
scas
sub
pop
ljmp
or
inc
jb
inc
sbb
sti
jle
adc
push
mov
xor
sarb
mov
xorl
mov
jns
add
cwtl
pop
pop
out
lret
pop
jmp
loopne
shll
into
push
idivb
or
sub
sub
pop
or
push
sbbl
jae
cmovs
push
int3
jnp
mov
push
xlat
jae
aam
sub
sbb
lods
lret
aad
mov
sbb
filds
enter
sahf
and
or
push
jg
mov
shrl
aam
fwait
pop
push
mov
xchg
and
push
movsb
ss
push
dec
sub
ljmp
es
dec
cmp
fldl
xchg
daa
sub
xor
pop
or
fimuls
jne
outsb
xor
cmp
jge
push
bound
and
xchg
mov
pop
mov
cmpsb
fiadds
mov
divb
push
jp
or
aam
jg
fdiv
out
jae
xchg
cmp
dec
adc
cmp
std
jnp
mov
fistpll
inc
sub
or
fs
iret
pop
stos
mov
xor
lds
mov
decl
scas
out
push
add
xchg
aad
mov
pop
or
and
insb
pusha
outsl
xchg
es
rcrb
or
aad
imul
pop
inc
arpl
xchg
dec
es
out
lcall
pop
jae
ja
subb
add
cmp
adc
xor
out
mov
test
test
in
icebp
xchg
cmp
pop
cs
mov
push
repnz
mov
sahf
mov
push
aaa
mov
cmp
xor
mov
and
fnstcw
pop
cmp
lret
inc
insl
je
ficoms
stos
popa
lea
dec
fidivrl
int
sbb
mov
jb
sub
inc
and
call
arpl
add
or
enter
outsb
mov
in
xor
adc
popl
push
daa
aas
in
aaa
popf
push
sub
fs
pop
cmp
push
fcomi
mov
int
or
out
lock
fnstenv
faddl
pop
mov
cmp
mov
ret
lea
cs
mov
loopne
cmp
fs
pushf
fisubs
insb
push
adc
ret
aad
lods
push
daa
ljmp
mov
fcmovnbe
cmp
dec
pop
insb
shlb
sahf
xchg
mov
nop
mov
std
jg
jle
int3
mov
subl
scas
out
div
cmp
cmc
mov
hlt
or
pop
or
fists
shrb
push
jnp
mov
jecxz
xchg
add
mov
xor
lods
fwait
dec
stos
add
inc
test
jle
jbe
sub
cmc
mov
outsl
push
pop
jnp
mov
in
push
add
mov
inc
cmp
lds
push
xlat
sub
in
mov
inc
mov
mov
movsl
mov
add
call
dec
stos
in
stc
sub
cmpsl
ljmp
push
ret
jl
sbb
clc
aam
popf
push
fcomp
mov
push
lahf
std
fwait
test
add
sub
inc
xor
push
cmp
xchg
in
jg
outsb
xchg
fistl
movsl
pop
iret
cmovbe
mov
nop
xor
repnz
inc
adc
dec
cmc
jns
enter
fcomps
movsb
cs
lcall
int3
int3
mov
add
test
pop
jnp
mov
inc
lds
push
push
gs
enter
movb
lahf
fwait
xor
mov
sbb
inc
add
dec
inc
outsl
cltd
fisubrs
popf
inc
dec
pop
pop
pop
les
and
ds
xor
insl
lcall
fcmovnbe
xchg
scas
rcrl
in
xchg
xor
jg
cltd
clc
fldenv
les
xor
mov
add
call
cmp
outsb
addl
bound
lock
stos
les
orb
aaa
sub
push
xchg
fbstp
cmp
add
xor
imul
cmp
dec
das
fstpl
out
mov
shlb
lods
ja
das
leave
xchg
in
and
mov
xor
bound
xchg
mov
aam
push
fisubl
inc
lret
shr
cwtl
incl
ss
xor
ret
sbb
sti
adcb
je
call
inc
inc
push
and
xchg
call
in
dec
sbb
sti
divl
mov
test
xor
and
out
xor
aad
ret
and
sbb
mov
lea
inc
or
std
leave
loop
mov
adc
lcall
mov
pop
lea
jns
sbb
cmpsl
out
xchg
adc
fisubs
insb
mov
jle
dec
ret
lods
pop
push
mov
rcll
pop
jne
lret
out
repz
call
mov
cmpsl
or
imul
js
addb
outsl
jp
pop
jl
sub
mov
adc
push
das
mov
aas
aaa
jl
in
addb
pushf
pop
mov
mov
test
lahf
popl
ss
daa
push
sbb
push
or
shrl
pushf
je
popf
daa
nop
test
or
mov
jns
std
adc
test
mov
jmp
sub
mov
in
fildl
mov
push
push
sbb
sbb
gs
jmpw
inc
daa
push
sub
imul
pop
xchg
cmp
xchg
repz
inc
xlat
add
bound
cmp
inc
fwait
cwtl
and
dec
ret
xor
jb
sbbl
sti
pop
pop
test
push
jge
adc
imul
test
jmp
and
and
or
mov
sti
mov
pop
rcrl
and
icebp
test
mov
daa
xlat
fldenv
fimuls
cltd
add
adc
imul
inc
xorl
imul
ss
jg
fsubrl
iret
adc
inc
test
inc
inc
add
pop
insl
and
aam
pop
cmpsl
shll
daa
popf
test
sub
icebp
sub
pop
and
jg
xchg
cmp
cwtl
jb
dec
sbb
jne
bt
call
jmp
mov
fsubr
test
jo
xor
jo
shl
stos
mov
pop
outsl
insl
jnp
lahf
lcall
push
or
mov
ljmp
ficomps
push
in
dec
sub
push
gs
fnstsw
jb
ret
sbb
jg
movsb
jle
loopne
dec
mov
lret
push
pop
jge
inc
xchg
push
sbb
jecxz
push
xorb
imul
shr
mov
sbb
test
icebp
or
fcoml
lock
stc
repnz
sbb
push
add
push
xchg
fmull
ret
pop
cmp
icebp
adc
adc
pop
jmp
jbe
cmc
leave
cmp
jnp
sahf
imul
ret
lret
jb
stos
xchg
test
stos
test
mov
xchg
xchg
add
inc
push
inc
aas
push
out
insb
sar
stos
lock
and
daa
movsl
fisttps
push
popa
push
cmp
jmp
or
loope
sarl
fimuls
mov
lret
fidivl
xor
imul
shr
js
xorb
pop
ja
sti
push
sti
dec
popf
mov
and
andb
iret
pop
fwait
cwtl
andb
fcmovne
jb
fdivrp
jae
outsb
xchg
repnz
fs
int3
lret
pop
and
je
sub
xchg
xchg
xor
out
mov
or
out
popf
sbb
adc
mov
xchg
mov
stos
into
mov
sarb
mov
stos
xchg
xchg
xor
nop
clc
mov
scas
test
mov
insl
insl
mov
not
shlb
add
push
pop
sub
mov
mov
leave
pop
cmp
mov
sub
cmp
pop
rorl
mov
arpl
dec
stc
dec
jmp
out
mov
mov
jne
xor
xor
icebp
inc
cmp
sub
out
js
mov
loop
or
sbbl
icebp
scas
xchg
or
cmpsl
inc
repz
test
pop
xlat
lret
shll
scas
xor
fs
insl
mov
stos
mov
roll
pushf
or
inc
enter
shl
mov
or
test
out
jae
das
in
adc
cmc
sti
xor
xor
fdivl
cmpl
and
xor
cld
xor
jb
pop
insl
es
xchg
bound
fcoms
sarl
jp
in
cmp
jno
xorb
loopne
bnd
ss
mov
pop
mov
xlat
push
js
inc
push
mov
fidivs
push
adc
mov
mov
adc
or
mov
int3
shl
sbb
lods
jl
mov
cld
pop
inc
pop
or
mov
sbb
add
icebp
inc
je
jo
and
leave
jno
lock
int
mov
orl
lds
add
imul
lods
push
mov
fwait
mov
scas
or
jmp
add
inc
sub
sbb
mov
and
ljmp
mov
jmp
add
mov
sbb
fildll
popa
scas
jle
push
or
add
xchg
into
adc
lds
sarl
fdiv
jno
decb
mov
ljmp
js
in
adc
mov
rclb
adc
add
insl
ret
jg
inc
mov
pop
fnstcw
bound
xchg
or
mov
mov
pop
adc
add
aad
std
lods
cmc
fwait
js
out
xchg
aaa
and
pop
push
sub
retw
add
pop
stos
mov
testb
dec
cld
and
cmp
in
sub
dec
inc
pushf
and
xchg
mov
or
push
xor
jl
lret
jns
mov
xchg
dec
sbb
xor
mov
push
add
mov
rorl
jp
repnz
int3
ficompl
and
in
dec
sbb
xchg
jo
out
jp
jbe
mov
and
jg
lock
ret
push
pop
rcll
cmc
pop
lods
call
test
jg
pop
in
sub
and
xor
sub
jae
mov
xor
pusha
dec
mov
pop
jmp
cmp
sub
jecxz
stos
add
shl
xchg
shrb
notl
xchg
inc
sbb
icebp
dec
cld
xchg
popl
pop
aaa
sub
jle
lods
addr16
cmp
mov
cs
movsl
stc
bound
into
mov
fstps
and
ds
jb
pop
mov
add
mov
dec
inc
jno
loope
sbb
hlt
popf
mov
jle
scas
jno
adc
or
mov
das
inc
xchg
add
mov
and
addl
fdivr
jecxz
jns
fildll
xor
into
je
outsl
mov
data16
sbb
popf
gs
stos
cmp
xor
daa
in
in
push
ja
mov
and
test
xchg
testl
inc
lret
xor
cmp
pop
insb
push
push
sbb
push
into
cmp
adc
dec
push
gs
xchg
mov
cmpsb
test
adc
mov
ljmp
mov
lahf
test
mov
negb
arpl
mov
inc
rcrb
rorb
cltd
push
push
mov
mov
jmp
add
lods
adc
adc
add
sbb
hlt
push
mov
icebp
jge
and
int3
decb
cwtl
xchg
lea
mov
push
std
sub
sub
adc
jle
shlb
mov
xchg
cmpsb
inc
sub
gs
mov
iret
and
nop
xchg
mov
jne
mov
lret
dec
imul
lahf
ljmp
inc
cld
outsl
xchg
idivl
imul
andl
dec
and
xchg
fwait
inc
xor
dec
xlat
xchg
and
insl
push
adc
jae
dec
xchg
fmul
int3
bound
add
or
add
dec
mov
test
lcall
icebp
mull
cmp
lods
stos
outsl
enter
jns
xor
xor
popa
lahf
rcl
imul
pop
imul
xchg
stos
sahf
inc
shr
cwtl
jg
mov
sbb
pop
dec
pop
inc
fwait
ret
adc
repz
rcrb
push
mov
lret
repnz
jmp
jno
pushf
xlat
and
mov
scas
call
and
cmpb
out
adc
sbb
jbe
cltd
test
fbld
mov
xor
js
lods
rclb
mov
jge
inc
push
adc
adc
mov
lock
adc
mov
adc
jns
cmp
cmp
pop
orb
cmp
xchg
pop
popf
push
xor
xor
fcomps
mov
outsl
sub
cmp
mov
rdmsr
rcrl
outsl
ret
sub
fs
mov
pop
fmuls
pop
sub
jecxz
sahf
pop
shll
or
cmp
push
pop
je
push
ja
xchg
mov
outsb
cs
std
clc
pop
in
xor
lahf
cmp
stos
out
jl
sbb
data16
dec
lcall
hlt
and
mov
scas
jecxz
push
mov
lea
sub
mov
mov
adc
xchg
pop
cwtl
cmp
test
int
movsb
fnstsw
lret
mov
add
and
lcall
add
andb
xchg
fistps
xchg
aam
adc
pop
jecxz
out
call
jnp
inc
lahf
inc
inc
std
mov
arpl
or
jle
pop
scas
add
add
lock
xchg
push
mov
fistl
imul
gs
addl
add
insl
js
into
sub
or
adc
les
inc
imul
dec
fcomps
aaa
fsubr
mov
push
pop
jecxz
imull
imull
lret
movsl
out
inc
in
loopne
shrb
out
in
es
mov
cmp
sub
movsl
xchg
xor
or
add
add
cmp
repnz
adcb
mov
popl
inc
and
int3
aad
std
shll
in
test
andb
mov
cli
in
jne
aaa
lods
or
jmp
sub
ds
lahf
jge
or
into
xchg
aad
call
es
xor
dec
pop
fcoms
cli
cmp
fists
push
in
subb
popf
lods
mul
ss
push
js
sbb
pusha
insb
jns
and
addr16
add
push
jg
mov
je
sbb
xchg
in
adc
movsb
jmp
in
mov
jnp
aaa
adc
jae
pop
pop
stc
add
xchg
and
std
fisttpll
cmpb
lret
add
sub
movsl
dec
imul
sbb
cmpsl
cli
in
sbb
mov
call
or
dec
adc
adc
dec
mov
mov
idiv
clc
mov
cmp
xchg
push
add
sti
and
add
in
repnz
cmp
leave
mov
cmp
insl
dec
js
or
jle
subb
jg
mov
into
fnstenv
lock
cld
push
iret
sub
cmp
sub
in
pop
or
jnp
mov
ret
out
xchg
fcomps
insl
or
sahf
add
ljmp
dec
int
or
mov
mov
and
mov
cld
ljmp
out
call
sub
cmpsl
jp
sti
and
aas
mov
fwait
test
add
test
aas
push
mov
add
push
jp
xchg
jp
ret
sub
dec
es
jl
pop
mov
lret
dec
rolb
divl
push
jle
cwtl
mov
adc
jo
mov
and
test
out
mov
mov
out
and
push
cwtl
add
addb
mov
xchg
jecxz
sarb
loop
std
adc
add
aaa
in
ret
popa
push
lret
xor
dec
jmp
fwait
scas
sub
movsl
test
movsl
aaa
adc
pop
subb
rcrl
sub
mov
call
cmpl
dec
pshufw
sbb
out
xchg
xlat
adc
js
xchg
xchg
mov
jge
or
or
in
jbe
negl
dec
push
pop
or
in
mov
push
outsl
aaa
xlat
inc
mov
adc
and
or
inc
cli
dec
leave
das
scas
int
or
mov
pop
mov
inc
dec
mov
add
or
xor
repnz
mov
or
cwtl
shrb
loopne
cwtl
push
pop
pop
insb
loopne
jp
std
and
adc
or
or
mov
push
adc
push
sub
add
fwait
scas
fcomi
shl
dec
jge
add
add
push
jno
xchg
in
cmpsb
test
or
mov
arpl
pusha
lret
jmp
stos
es
adc
das
sub
or
test
sub
push
ret
imul
mov
cmp
mov
mov
jnp
icebp
inc
adc
pop
cmp
int
xor
scas
jo
inc
into
cmpl
hlt
jmp
faddl
mov
repnz
loope
repz
and
sub
addr16
popa
iret
rclb
dec
push
enter
ficoms
dec
enter
movsl
scas
push
hlt
lea
mov
mov
imull
fs
scas
imul
jp
or
or
inc
xor
ret
jecxz
adc
jb
fistps
fsubr
sub
inc
sub
xor
je
sub
mov
add
pop
adc
imull
ja
cmp
mov
sbb
lcall
int3
movsb
dec
jmp
int3
mov
or
or
push
loopne
and
push
scas
rcrb
pop
shlb
mulb
dec
in
dec
lahf
mov
dec
cmp
sahf
adc
mov
jnp
xchg
or
f2xm1
mov
push
pop
jne
jge
iret
pop
sbb
and
dec
fstpl
mov
or
in
sub
adc
push
xlat
lcall
mov
stos
outsb
sub
fisubl
cmp
lods
adc
xor
cmp
cmpsl
or
fisttpll
and
mov
fldcw
mov
frstpm(287
sbb
orb
dec
ficoml
mov
pop
xor
mov
mov
jg
ja
les
aad
loope
mov
jb
adc
jg
fucomip
sbb
aad
mov
scas
ja
inc
add
and
pop
cmp
stos
es
dec
mov
sub
in
adc
dec
inc
ret
cmc
std
hlt
add
ret
jae
lcall
mov
sbb
std
add
iret
imul
push
xchg
pop
push
rcrb
jbe
into
pushf
and
adc
inc
shll
and
fstpt
jbe
xchg
xor
cmpsb
int3
sbb
popf
fsubr
or
mov
mov
jmp
cmp
mov
pop
mov
sub
xchg
xchg
enter
mov
sbb
int
xor
mov
imul
test
push
nop
mov
jle
cwtl
imul
ljmp
subb
in
cwtl
dec
add
pop
outsl
ffree
loope
mov
ss
xor
int3
pop
inc
mov
jbe
hlt
psubsb
adc
hlt
push
repnz
sbb
pop
dec
push
pop
or
jo
in
scas
rep
xor
sub
ficomps
jno
sti
sbb
js
outsb
lfs
sub
mov
cld
xor
adc
scas
ljmp
popa
pop
das
les
test
dec
jp
jnp
aam
xchg
fimuls
xor
jmp
mov
push
ret
cmc
add
inc
data16
aaa
mov
lcall
or
xchg
lock
mov
enter
or
xchg
or
outsb
push
outsl
in
push
loope
or
out
xor
pop
incb
pop
dec
mov
or
shld
xchg
cwtl
jae
pop
xor
ja
stc
cmp
sub
dec
pop
ja
add
std
sbb
cmp
mov
mov
fdivrs
insb
fadds
lds
and
mov
sub
adc
jnp
dec
adc
dec
adc
sub
mov
shr
mov
enter
push
sarl
mov
inc
aad
mov
mov
stos
add
fsubrs
add
mov
jp
jecxz
lods
fs
aaa
and
push
add
xchg
xchg
imul
aad
pushf
pop
xlat
mov
jle
scas
adc
add
ja
fdivl
ficompl
iret
mov
and
enter
lods
adc
mov
jg
jge
mov
inc
in
les
loope
add
data16
jns
cmpsl
mov
xchg
test
lahf
movsb
out
xchg
and
adc
dec
mov
sbb
mov
pop
popa
mov
cmp
cli
xchg
data16
cs
push
ficoms
add
icebp
orl
mov
dec
cltd
sub
push
fsubrs
pop
cltd
inc
pop
cli
in
lcall
push
aaa
call
gs
leave
pop
xchg
gs
xchg
mov
cmpb
mov
jnp
aas
jns
mov
jno
in
je
dec
pop
jmp
pop
dec
lods
cli
jg
mov
add
xchg
out
je
aad
in
inc
rorl
hlt
rcl
jmp
add
push
pushf
shll
mov
pop
aad
add
daa
mov
push
test
shrl
mov
scas
int3
jmp
inc
jno
push
mov
clc
lods
mov
mov
push
or
xchg
js
mov
popa
xchg
fisttpl
cmc
test
daa
adc
and
aas
dec
adc
and
cmp
aaa
jbe
sub
lahf
aad
aas
or
push
dec
cli
shlb
sbb
push
xchg
add
jno
fistpll
push
icebp
leave
into
pop
pushf
mov
scas
mov
or
adc
cwtl
or
aas
lret
mov
lods
leave
inc
das
and
adc
imul
sbb
and
dec
lahf
mov
and
jnp
pop
scas
fdivrs
stos
sahf
or
dec
outsb
in
push
xor
fisubl
hlt
lea
into
das
xor
adcl
mov
rol
push
pusha
arpl
and
dec
push
inc
shl
cmpsl
icebp
movsl
push
pop
loop
dec
adc
fnstsw
mov
jecxz
lock
out
dec
mov
pop
dec
loop
cmp
sbb
sub
mov
repz
test
ret
xchg
ljmp
add
adc
jae
push
lods
inc
loope
sub
or
jbe
jbe
les
sub
jb
mov
lods
sbb
cmp
cltd
out
mov
xchg
sahf
pop
or
arpl
sbb
enter
dec
ds
cmpsl
movsb
xchg
push
imul
jmp
pop
adc
movsl
adc
or
push
dec
sub
cmp
in
push
jno
or
pusha
jb
mov
cmp
adc
adc
out
out
js
add
cwtl
js
cltd
mov
sbb
ljmp
sbb
div
jecxz
shll
fcoml
jl
inc
aam
arpl
mov
xor
inc
jl
or
or
fimuls
sar
stos
mov
lret
faddp
movaps
dec
xor
pop
mov
and
testb
std
ud1
push
addr16
test
pop
nop
and
fwait
loopne
cwtl
fbld
mov
inc
mov
mov
inc
mov
mov
rolb
loope
aas
jp
pop
clc
push
mov
call
imul
lahf
fs
jbe
aam
cmp
mov
xchg
mov
test
jge
daa
aas
mov
rorl
jecxz
xchg
cmpsb
jmp
adc
lods
out
mov
mov
mov
push
enter
imul
mov
insb
es
popf
cmpsl
and
cmc
inc
mov
push
sub
js
pop
cmp
shll
pop
not
mov
sbb
add
xor
adc
rolb
popa
pop
repz
push
js
xor
pop
mov
stos
clc
lahf
test
push
imul
mov
xor
cmp
ret
mov
xchg
xor
or
loopne
enter
sbb
in
insl
pushf
add
mov
cmpsb
outsl
gs
cli
arpl
pop
aaa
sbb
aam
cmc
mov
jge
pop
mov
push
jno
andl
jp
pop
sti
aaa
sbb
addl
ret
lea
sarb
mov
mov
push
cltd
xor
cli
or
fidivrs
cli
mov
dec
push
lret
xchg
rorl
stos
push
push
dec
loope
lods
or
sbb
mov
lock
cld
cmpsb
sub
sbb
loope
fsubr
lcall
push
sbb
loopne
and
dec
and
add
in
sbb
xchg
adcl
test
das
fldcw
bound
das
push
xor
mov
mov
inc
call
push
jne
pop
js
data16
repz
loopne
inc
xchg
add
inc
mov
bound
in
insb
lods
sub
jmp
mov
test
ret
inc
sbb
je
push
and
test
pop
mov
cmp
sti
and
sub
sbb
mov
pop
jmp
push
in
dec
adc
aad
pop
mov
push
xor
cmp
addr16
xchg
inc
sub
push
jb
lcall
stc
push
lea
call
imul
xor
sbb
xor
ror
push
loopne
xor
mov
adc
in
mov
mov
cmp
cld
and
jle
adc
test
sub
pop
out
gs
rclb
nop
aad
mov
jae
mov
mov
inc
ds
shll
ret
inc
pop
add
stc
int
pop
add
pushf
mov
test
jno
aam
mov
push
jle
movsl
cmp
jns
xchg
mov
inc
loope
adc
or
movsb
iret
fistps
jg
push
fldt
lods
jnp
jl
aad
jnp
inc
cld
call
arpl
arpl
mov
jmp
sbb
nop
sub
jae
and
push
push
mull
add
lods
mov
jne
xchg
dec
jns
outsb
arpl
sbb
scas
lds
into
negl
sub
not
xchg
mov
loope
in
or
andl
xlat
mov
aam
cmp
cmc
cmovo
xor
outsl
out
lret
inc
roll
pop
clc
test
cmp
mov
pop
insl
in
adc
cli
data16
es
cld
jno
loop
mov
cmp
add
push
jecxz
adc
into
test
xchg
mov
out
mov
xor
sahf
lret
and
in
xchg
aaa
pop
pop
inc
lods
dec
call
adc
insl
xor
pop
xchg
rorl
rolb
filds
mov
xchg
jecxz
loop
scas
jno
or
or
push
fwait
cmc
adc
jle
xor
cmp
fldln2
insl
add
imul
push
ret
add
dec
pop
cmc
fcomi
dec
add
scas
clc
and
andb
jno
les
into
push
dec
in
jecxz
push
ficompl
xchg
imul
out
sbb
dec
test
lret
mov
dec
pop
call
scas
xchg
movsl
insb
inc
sbb
adc
or
cs
fwait
and
cmc
push
xchg
mov
mov
pop
imul
or
xor
cld
lcall
sbb
dec
cmp
mov
add
imul
mov
bound
add
sub
aam
mov
aaa
fcompl
enter
outsb
xchg
cmp
xor
jne
sub
cmp
aam
adcl
stos
mov
adc
dec
dec
pop
push
jae
mov
aas
fistps
int3
jle
orl
push
sub
mov
movsl
xor
push
imul
and
testl
or
pop
push
es
jmp
call
sub
or
lods
popf
mov
repz
cltd
cmp
jp
or
xchg
pop
outsb
dec
imul
sub
or
pop
xor
lods
loopne
rcll
cmpsl
mov
aam
insl
push
leave
rorb
clc
lods
xor
loope
adc
pushf
jae
stos
stc
inc
fldenv
sub
int3
adc
push
cmp
and
sub
xchg
hlt
pop
loop
push
adc
gs
lods
cld
jmp
sub
sahf
pop
hlt
cmp
push
pop
jle,pt
jns
sbb
mov
sub
xor
cmp
ficompl
ja
xchg
sbb
lods
inc
fwait
movl
ljmp
js
pop
ds
repz
or
adc
lcall
sub
in
mov
repz
icebp
push
push
sub
add
pop
std
popa
sbb
frndint
inc
mov
leave
push
mov
add
rol
mov
pop
dec
dec
das
adc
push
pop
xchg
xchg
lcall
sub
arpl
aas
das
ja
push
mov
sub
add
shlb
fld
jbe
dec
mov
out
ret
push
jbe
push
rolb
dec
cld
into
jp
aaa
decb
clc
dec
inc
jbe
mov
jl
cli
lock
int
mov
jp
jno
loope
add
ljmp
pop
dec
xchg
imul
dec
xor
cmp
rclb
sub
icebp
cmpsl
call
push
test
mov
pop
adc
aad
jp
sub
mov
xor
push
mov
dec
sub
std
cmp
les
adc
xchg
adcl
enter
jns
je
cli
ja
mov
call
adc
sbb
mov
aam
xor
jbe
ret
pop
orb
icebp
and
loop
call
add
mov
aas
mov
imul
hlt
movsl
sub
pop
dec
sarb
push
sub
jmp
mov
inc
mov
lods
mov
stc
cltd
movsb
mov
pusha
cvtps2pi
pop
dec
in
or
fidivrs
mov
ss
pop
or
fnsave
pop
sub
in
pop
mov
dec
lret
add
xchg
push
add
dec
and
pop
insl
push
ja
jne
pop
fldt
loopne
lea
mov
ss
test
mov
lea
adc
sti
sub
or
push
inc
shr
lods
mov
adc
jp
jb
clc
adc
sbb
repnz
fwait
ss
or
push
or
lds
sti
dec
aaa
mov
ret
cmp
xchg
pop
jo
add
pop
mov
rcr
mov
jo
xor
pusha
fimuls
push
jmp
mov
mov
fdiv
mov
stc
mov
outsb
dec
xchg
repnz
inc
dec
mov
frstor
testb
rclb
lret
int
push
rclb
ja
sbb
ja
push
lock
mov
jbe
inc
jg
sbb
jp
mov
xor
mov
repz
out
mov
cmc
es
into
jge
push
lds
lahf
xchg
mov
or
inc
inc
jge
ret
pop
add
and
sarl
cmpsb
insb
shll
in
lods
mov
and
inc
orl
scas
jbe
insb
push
mov
test
punpckldq
or
xchg
xchg
pop
std
mov
jns
xchg
sti
mov
push
ret
jmp
lsl
pushf
fwait
pushf
fsubl
inc
sub
jmp
jns
sahf
adc
inc
rorb
jp
rcll
mov
in
fcompl
jmp
ja
popa
icebp
test
and
pop
lds
aad
and
sbbb
fs
lock
inc
fistpll
inc
push
ss
daa
cmp
lea
test
dec
fldcw
or
mov
or
adc
int3
popa
add
icebp
repnz
pop
jbe
jp
add
sub
fsubrs
js
push
lock
sub
xor
push
push
add
cmp
lods
testb
enter
cmpsb
popa
mov
sbb
pushf
rclb
mov
and
cmp
ret
insl
jle
out
into
fsubrs
xchg
sbb
add
lds
sub
mov
ja
dec
add
lahf
nop
test
inc
and
jp
mov
sub
fwait
addr16
loope
mov
pop
pop
icebp
mov
mov
loopne
jecxz
add
push
cmp
xchg
mov
bound
cmpsb
nop
cmp
bnd
mov
cld
bound
lods
mov
cmpb
cmp
jmp
add
jg
in
sbb
mov
movsl
lret
mov
jle
frstor
push
mov
lods
scas
cmp
insb
rcrl
cmc
push
add
lock
push
je
lods
xchg
sbb
out
data16
or
xchg
jl
mov
dec
les
fcmovnbe
fcmovbe
mov
repz
push
cld
cmp
mov
test
mov
inc
adc
mov
subl
push
stos
jne
push
movsl
jnp
or
adc
or
inc
sbb
mov
test
insb
mov
int3
fsts
jno
sub
mov
rol
ja
xchg
xchg
xchg
pop
rol
sti
add
sahf
repz
adc
cmp
rclb
add
sub
dec
push
xchg
out
or
and
xor
fstps
mov
cmc
js
and
jmp
push
imul
out
mov
jl
pop
cmpsb
mov
xor
lock
xor
lock
pusha
in
push
ret
cmp
cmp
out
std
xchg
push
in
adc
icebp
inc
stos
xchg
jge
outsb
bnd
pop
inc
idivl
dec
add
mov
jecxz
mov
or
out
sub
les
mov
pop
push
aam
jns
popf
adc
xchg
cmp
cld
call
in
subl
mov
push
ret
xchg
push
xchg
incl
outsl
fnsave
sub
push
sub
test
insl
and
call
fcoms
push
fildl
fildll
pmaddwd
daa
xchg
loope
mov
and
pusha
clc
sub
shlb
movsl
jne
add
push
push
or
mov
daa
mov
fwait
lcall
gs
das
pop
xchg
jl
aas
ljmp
mov
outsl
loop
inc
and
sarl
les
lock
dec
jp
mov
mov
arpl
in
push
es
scas
mov
mov
xchg
jne
les
aad
scas
cmp
xor
pcmpgtw
shlb
outsl
jg
or
fidivrl
cwtl
add
jae
push
stos
in
or
mov
push
rclb
loope
sbb
cwtl
pop
mov
scas
femms
adc
lcall
into
aaa
imul
orl
jnp
roll
adc
cmpb
pusha
gs
jns
cmpsb
mov
sbb
jbe
movsb
mov
jb
mov
sbb
jnp
je
les
push
jae
out
pop
pop
cwtl
mov
or
cmp
jb
stos
xor
orb
movb
scas
mov
divb
mov
pop
sbbl
xor
cmc
dec
xor
mov
in
data16
pop
loopne
push
adc
orl
rolb
adc
sub
cs
mov
pop
sub
fcompl
incb
fidivrs
cmpsl
jae
popa
movsb
in
aas
and
jge
btc
cmp
jnp
cmp
cltd
stos
int3
xchg
xchg
jae
int3
imul
adc
inc
adc
stos
sub
dec
sti
insb
cmp
fmul
xor
sbb
dec
clc
xchg
repz
ljmp
fcoms
loop
xlat
in
aad
or
aas
inc
icebp
outsl
sbb
aas
xchg
xor
std
add
fnsave
add
sub
lock
lea
inc
test
dec
cmc
jmp
ffreep
call
adc
lods
movsb
pusha
add
mov
popf
int
jns
dec
xchg
pop
mov
mov
push
in
adc
or
sub
repz
test
xchg
xchg
inc
sub
or
jg
pushf
jg
adc
rcl
add
gs
ljmp
loopne
push
dec
dec
out
cltd
ljmp
lea
and
test
test
es
push
push
and
adc
and
lea
mov
loop
fwait
or
add
dec
movsl
sar
mov
sahf
mov
into
mov
mov
insl
dec
pop
cmp
mov
jne
pop
jb
rcrl
scas
push
and
je
sti
dec
cmp
dec
push
cmp
lret
sbb
pop
and
inc
jns
mov
sbb
mov
mov
inc
add
lcall
cmc
inc
mov
insb
scas
outsl
inc
aam
ja
mov
aaa
popa
ds
inc
pop
xchg
sbb
cmp
lea
aaa
mov
adc
add
add
jmp
dec
cmp
out
jmp
adc
mov
adc
pusha
enter
out
popf
cltd
pop
cmc
jge
inc
movb
movsb
lea
lods
outsb
add
movsl
xchg
popa
nop
out
enter
rolb
neg
cmc
mov
stos
aas
and
cmpsb
jge
inc
and
jae
sub
hlt
jbe
notl
mov
add
mov
mov
jmp
movsb
pushf
xchg
rorl
rcl
stos
ficoml
or
jl
inc
jo
mov
sbb
jbe
mov
int
xchg
insl
inc
int3
xchg
xchg
fldenv
jbe
xlat
popa
push
test
add
and
dec
adc
pop
movsb
cmp
test
ljmp
jge
jae
sbb
xor
pop
lcall
dec
sbb
jp
in
pop
xchg
ljmp
cmc
addr16
daa
pop
sub
cmp
xor
inc
dec
fwait
repnz
es
cltd
xor
aaa
iret
cmp
popf
push
mov
add
rorl
lcall
les
scas
add
and
lret
dec
clc
pop
mov
fwait
adc
adc
orl
dec
stos
inc
add
es
dec
flds
mov
mov
dec
ss
adc
js
xchg
addr16
inc
repnz
jo
clc
and
lahf
mov
popa
data16
or
aad
inc
aaa
popa
sub
stc
pop
mov
in
ljmp
rcll
mov
sbb
nop
push
cmp
lcall
jb
add
and
inc
sbb
cmc
imul
imul
lret
mov
rolb
rcr
addb
inc
imul
xor
std
pushf
push
aaa
scas
stos
pusha
outsl
ficompl
or
repnz
sbb
out
pop
sbb
enter
es
outsl
push
push
sbb
sub
push
decb
sarb
push
mov
xor
sbb
pop
ljmp
sarb
push
xchg
mov
xchg
mull
adc
ret
fdivrs
in
sbb
cmp
push
cli
mov
adc
sti
cmc
cld
jmp
mov
push
flds
sub
ljmp
outsb
sub
mov
test
test
pusha
mov
fcoml
shrb
repz
mov
push
aaa
stmxcsr
inc
xchg
or
out
je
jp
or
jmp
xor
scas
xchg
into
sub
pop
adc
in
lds
dec
outsb
push
les
jae
enter
lods
repnz
out
ljmp
js
mov
jmp
scas
push
inc
push
jns
xchg
sub
pop
rcll
and
push
push
mov
push
adc
adc
or
testl
int
leave
pop
add
push
dec
and
push
imul
clc
in
inc
mov
mov
xchg
in
mov
push
xchg
int
pop
push
xor
dec
insl
sbb
mov
or
pop
imul
mov
fucomip
fdivrp
testl
adcl
pop
ret
and
int3
mov
or
in
sub
push
add
jno
xchg
or
or
repnz
cmp
add
fidivs
outsb
dec
fists
movsbl
or
das
in
pop
mov
call
or
lods
lea
or
xchg
lods
lea
or
sbbb
inc
arpl
push
mov
cli
sub
xchg
mov
xchg
je
fistps
out
clc
out
clc
add
jno
push
rol
stos
cmpsl
addr16
xlat
popf
xor
idivl
cmpb
mov
push
ret
cmpsl
sbb
mov
insb
pop
pop
movsl
adc
icebp
or
sub
jl,pn
leave
pop
enter
sbb
lahf
push
or
test
outsb
popa
inc
lret
sbb
repz
push
out
test
mov
bound
dec
ss
fcompl
sbb
mov
shl
enter
aam
cmpsb
sbb
adc
in
xchg
jbe
test
arpl
inc
push
sub
ds
fwait
in
pop
or
fnstenv
sub
mov
test
mov
cmp
add
mov
mov
ljmp
pusha
jo
call
divb
cmpsl
mov
cltd
jg
inc
jbe
bound
data16
loop
pop
mov
test
mov
pop
xor
sub
xlat
xchg
mov
loopne
fistl
std
push
adc
jns
pop
bound
adcb
jb
mov
mov
inc
inc
fwait
loop
pop
sbb
sarl
sub
pop
fadd
cld
into
cltd
dec
mov
fcomp
mov
pop
sbb
insl
or
data16
inc
test
subb
adcl
icebp
push
and
mov
mov
push
and
jle
push
das
dec
ljmp
into
inc
push
inc
ljmp
mov
jae
dec
lods
jns
ds
dec
inc
xchg
je
enter
test
mov
fisttps
lods
test
or
call
pop
dec
ss
ljmp
push
dec
mov
es
xor
in
pop
loopne
push
cltd
inc
cmp
adc
jmp
repnz
hlt
in
mov
inc
push
ss
sub
std
mov
ss
cmp
jae
sub
mov
lods
jmp
pusha
aad
gs
or
fucomp
pusha
iret
push
addl
and
into
mov
lahf
pop
pushl
fsub
mov
and
xorb
nop
push
push
or
rcl
dec
cs
push
jae
imul
sahf
mov
mov
cltd
clc
sub
xchg
pushf
lea
cwtl
dec
cmp
inc
stos
cmpl
fildl
mov
sbb
insl
jge
aaa
lea
aas
testb
inc
das
jp
lods
add
xchg
pop
arpl
fisttpll
shlb
mov
push
repnz
mov
xor
inc
sti
aaa
lahf
iret
add
mov
xlat
rcll
push
push
push
ficoml
jecxz
mov
inc
shll
mov
popf
pop
cmc
jp
mov
and
jo
clc
out
cwtl
mov
adc
aam
mov
movsb
add
sbb
mov
push
jmp
fsubrl
mov
push
jmp
sub
xor
shlb
incl
or
push
fs
js
cmc
mov
mov
mov
in
mov
push
pop
dec
outsb
pop
pop
test
xor
and
dec
jmp
inc
into
xor
or
xor
test
rclb
mov
lret
jmp
push
in
add
or
divb
push
mov
mov
jle
in
scas
jge
sbb
mov
lods
insl
out
xor
mov
fistpll
adc
imulb
jge
aaa
xor
adc
cmp
aad
sbb
add
insb
or
aaa
sbb
cmp
out
xor
add
inc
mov
test
pusha
mov
stc
pusha
testb
inc
cld
add
mov
inc
mov
dec
adc
push
jl
adcl
xchg
mov
jne
xchg
ss
adcl
cmpsl
xchg
lock
imul
dec
inc
in
pop
inc
push
std
push
shlb
push
inc
test
mov
jge
mov
outsl
or
sub
repnz
add
cmp
popf
int3
sub
jge
out
repnz
fidivrl
mov
pop
and
lret
and
dec
sub
dec
xchg
or
daa
aad
fildl
pop
mov
sbb
movsl
ret
sbb
leave
mov
shll
ljmp
lea
into
sbb
xorb
fdiv
je
cmpsb
push
sbb
inc
xlat
cmpsl
loop
mov
je
push
xor
movsl
gs
scas
pusha
cmp
jbe
test
fimuls
cmpsl
xor
mov
das
cmpsb
xor
and
bound
aad
jae
mov
mov
lret
adc
or
ds
cmp
arpl
aam
pop
icebp
or
inc
sahf
mov
or
jb
mov
mov
cli
movsb
lods
xchg
sbb
inc
inc
add
xor
add
test
cwtl
add
xor
ret
dec
dec
stos
mov
pop
mov
jne
and
or
ret
insl
sbb
js
mov
aas
adc
in
sbb
cmp
fiaddl
lods
mov
mov
jge
loopne
inc
mov
out
iret
gs
adc
mov
cmp
cli
lcall
inc
dec
dec
mov
pop
jp
hlt
inc
xchg
xchg
shr
movsb
fdivp
fsqrt
fistpll
das
popa
mov
jg
cmpb
pushl
outsb
mov
testb
or
pop
inc
out
mov
dec
push
pop
fs
dec
lods
mov
jns
in
fstl
sbb
je
dec
pop
mov
jb
aad
xchg
jne
ret
jge
popa
movsb
xor
sub
enter
xchg
jne
push
icebp
xchg
xchg
and
or
aad
fistl
dec
add
adc
push
fldenv
cltd
mov
or
fcmove
mov
and
into
inc
dec
ljmp
pop
cmp
shll
cmc
dec
xchg
mov
in
push
adc
repnz
add
dec
loop
inc
sbb
jecxz
inc
jne
and
int3
testb
mov
fiaddl
push
xchg
addr16
in
ret
inc
cmp
adc
pop
daa
aad
test
out
sub
mov
call
aas
or
hlt
cmp
pushw
jno
jno
xchg
sub
and
add
sbb
fwait
xor
or
stc
inc
pop
dec
stos
jmp
mov
cli
das
pop
mov
add
icebp
inc
cmp
sbb
loopne
clts
or
les
xor
xlat
cmp
test
dec
inc
mov
adc
popl
push
xor
mov
jge
lahf
jns
adc
fcompl
jp
fstpt
mov
xchg
add
imul
ds
jo
push
ja
clc
and
sub
push
push
or
lea
out
xchg
movsb
loope
call
push
in
imul
sbb
sub
sub
popf
push
add
movsl
xchg
hlt
in
jmp
and
les
sub
gs
ljmp
jge
pop
cmp
dec
jbe
mov
sub
nop
imul
aam
jnp
or
push
push
pop
repz
test
loop
sub
dec
mov
mov
sub
sbb
lret
mov
fs
mov
shlb
sbb
add
into
and
xchg
mov
shll
fsubrs
loope
test
fisubl
mov
mov
ficoml
xchg
jp
imul
in
dec
test
jge
arpl
and
into
dec
adc
inc
data16
out
ss
enter
xor
adc
jge
popf
jbe,pt
sbb
filds
in
inc
cwtl
xor
pop
sahf
mov
cmp
or
inc
adc
dec
incl
adc
rcrl
cmpsb
fistl
imul
testl
idivb
mov
icebp
pop
add
sti
in
xchg
ret
or
fists
mov
or
fnstenv
iret
jg
mov
cld
dec
and
xchg
mov
xchg
adc
xor
aam
pushf
mov
mov
fldenv
jle
ss
repz
fldl
movsl
and
mov
scas
lds
add
mov
inc
xor
ja
popa
sbb
mov
mov
jmp
mov
mov
mov
jge
sub
mov
push
jg
jo
and
dec
pop
cs
mov
scas
add
cmp
xchg
adc
arpl
dec
jb
sti
insl
sbb
mov
add
daa
jl
jge
dec
cmp
adc
js
push
into
cmp
loopne
or
rcll
xor
syscall
loopne
xchg
scas
fs
outsb
lock
movsl
in
xchg
andb
icebp
icebp
and
test
jo
adc
ja
pop
lret
ror
rcl
xor
cmp
xchg
lcall
pop
and
adc
scas
push
xchg
mov
add
add
je
add
mull
jge
sarb
pop
rcrl
pusha
adc
dec
leave
sbb
inc
dec
das
inc
leave
inc
push
es
gs
ljmp
ss
pop
xchg
std
hlt
stos
xchg
jne
jecxz
subl
int3
adc
pushf
or
js
out
push
xchg
pop
inc
rcr
sarb
popf
rcr
add
dec
mov
mov
pop
leave
pop
push
les
jnp
movsl
jo
or
lret
cltd
or
pusha
mov
jg
mov
or
cwtl
int3
sub
pop
sub
mov
push
xor
mov
push
xchg
push
push
fdivrs
test
loopne
jge
inc
xor
add
mov
out
jns
mov
mov
mov
fsubrl
sbb
adc
jo
cli
jle
fwait
inc
adc
xor
add
cmpsl
repz
mov
lcall
scas
ret
subl
inc
or
cmp
jno
inc
push
loop
sub
cmp
leave
pop
lret
adc
stos
imul
shl
jle
mov
lods
outsb
daa
outsb
sub
ret
data16
push
push
and
pop
cld
xchg
jge
xor
ret
clc
addl
or
fildll
std
and
xchg
or
sub
cld
incl
mov
inc
incl
or
cwtl
add
cld
in
jp
xchg
sarb
jp
je
mov
outsl
or
dec
mov
add
test
jns
pop
insb
shll
cmpsl
popa
mov
add
mov
or
ljmp
xchg
sarl
and
jg
dec
outsb
popa
mov
mov
cmp
stos
leave
hlt
jp
adc
mov
mov
outsb
jb
mov
addr16
push
push
push
pop
jmp
sub
mov
ja
movb
sub
stos
call
icebp
cld
jg
fstl
cmpl
push
iret
js
sbb
dec
out
push
xchg
clc
jb
add
xchg
push
je
adcb
push
jg
rep
fstps
loopne
mov
scas
mov
dec
pop
insl
add
pop
jbe
ja
hlt
out
ljmp
call
in
mov
add
lcall
adc
xlat
and
je
and
lods
push
pusha
pusha
dec
rcrl
xlat
jge
mov
mov
scas
inc
and
enter
icebp
sahf
out
push
or
mov
push
mov
jl
int3
ja
dec
pop
repnz
dec
fbld
arpl
sbbb
mov
jno
sarb
inc
shlb
jecxz
jl
test
sub
jmp
les
inc
sti
out
jp
lods
sbb
repnz
mov
adc
sbb
push
sub
cmp
push
test
cmpsb
lcall
les
and
js
out
pop
movsl
pop
inc
mov
xchg
and
jecxz
sbb
out
fimuls
call
scas
xchg
mov
inc
mov
addl
pop
aas
sub
xchg
fimull
pop
movsl
movsl
test
xchg
test
inc
xor
sbb
mov
push
stos
aad
mov
subb
xchg
add
fnstenv
pop
push
adc
jb
jg
lret
pop
arpl
mov
xchg
mov
movsb
pop
and
pop
lock
adc
sbb
inc
inc
adc
sbbb
sbb
inc
mov
inc
popa
repz
lcall
push
jp
push
inc
fisubrs
enter
jg
cmp
into
xchg
xor
adc
pop
jb
test
mov
mov
fs
and
loopne
insb
arpl
pop
mov
sahf
jns
das
hlt
movsb
pop
mov
mov
sbb
xchg
je
aad
loopne
movsl
movsb
or
ret
adc
xlat
cmp
insl
pop
rcr
mov
in
sub
arpl
push
fsubr
les
mov
imulb
scas
lcall
push
sbb
test
shrl
cld
xchg
ljmp
ret
jnp
jmp
pop
std
rcrb
mov
push
in
shll
pop
push
mov
or
jno
arpl
fincstp
sbb
es
mov
pop
cmpsl
mov
adc
adc
in
std
jmp
pop
sahf
xchg
jne
xor
hlt
xor
in
imul
out
mov
in
and
and
insl
dec
sub
loope
mov
scas
jo
ja
fnstenv
sbb
movsb
pusha
push
inc
aam
xchg
sbb
xor
shlb
mov
adcb
xlat
sub
inc
stc
xlat
sbb
mov
cmpsb
out
inc
mov
iret
cmp
add
mov
xor
ror
sub
hlt
mov
cmc
push
jl
dec
sub
test
cmp
mov
dec
mov
pop
sub
fnstenv
mov
scas
js
lea
movsb
add
add
nop
sarb
ljmp
fdivs
sub
and
push
add
sub
cmp
fidivrs
stos
jecxz
lahf
pop
cmpsl
outsb
push
add
imul
mov
cmp
arpl
mov
adc
sbb
inc
scas
or
aad
ret
std
or
lahf
lahf
lods
outsb
lahf
jae
addr16
or
mov
ret
cmp
push
adc
cmp
or
jnp
ret
fcompl
mov
gs
imul
pop
test
aam
nop
mov
lock
cld
inc
push
jno
aaa
sbb
jl
sub
cmp
test
imul
pop
mov
punpcklwd
adc
sbb
xor
pop
js
sbb
add
les
loopne
inc
mov
mov
mov
ret
dec
sbb
repnz
lds
xlat
xchg
xor
xchg
pop
negb
movsb
lods
sahf
ret
and
push
cwtl
add
jb
inc
clc
cmp
mov
stos
cmp
xor
pop
adc
push
cmp
call
xchg
xor
fldt
xchg
sbb
and
ljmp
pop
add
loope
push
daa
mov
or
xor
sbb
inc
mov
outsl
or
fcom
scas
jmp
in
mov
js
lock
xchg
push
lock
or
sub
gs
mov
js
dec
dec
imul
sub
dec
jp
cltd
and
mov
mov
rcl
push
ret
xchg
mov
cmp
and
arpl
pop
and
push
jae
mov
rorb
mov
cltd
push
pop
mov
ja
mov
dec
jg
sub
xchg
cwtl
in
ret
adc
lods
call
xchg
sub
pop
cmp
rolb
adc
dec
imul
js
xor
lcall
or
and
gs
popf
and
fdivl
es
subb
stc
cmp
push
jb
mov
out
and
in
lea
cltd
xchg
ret
cmp
aam
cmc
dec
adc
imulb
sub
pop
insb
in
pop
mov
sbb
ficompl
jecxz
jae
imul
cmpsl
inc
mov
fdivs
xchg
dec
mov
and
test
subb
pop
inc
stos
rcrb
addr16
add
and
jl
enter
popa
lock
xor
add
cmp
mov
and
sub
test
sti
ret
mov
xorb
sbb
xchg
add
rcrb
adc
pop
inc
sub
add
dec
sbb
lahf
pop
bound
cmp
cltd
xor
fidivrs
mov
out
sbb
out
mov
push
and
sub
push
xor
xlat
out
sub
cmpsl
inc
insl
scas
add
pop
fmull
jb
jno
and
mov
cmp
inc
rcll
adc
mov
orl
mov
xor
push
pushf
orl
pop
inc
iret
inc
sbbl
adc
pop
mov
testb
add
sub
inc
stc
mov
dec
push
mov
out
xlat
sbb
in
lcall
jb
cli
addr16
ret
sbb
xchg
mov
xchg
testl
inc
mov
out
js
xchg
add
bound
cmpsl
mov
gs
xchg
test
mov
ss
jno
cmp
or
xchg
adc
repz
jle
in
sub
or
mov
mov
add
jb
jb
add
add
into
jge
dec
je
xor
push
sub
mov
inc
iret
and
fbstp
insb
pop
inc
push
jb
arpl
out
nop
or
loope
cwtl
mov
nop
mov
fwait
inc
add
addr16
push
or
scas
and
mov
mov
and
pop
pop
leave
gs
std
dec
mov
add
int3
mov
lods
sahf
aam
xchg
mov
push
sub
jge
inc
leave
cmpsl
rcll
mov
orb
arpl
insb
pushf
inc
fsubrp
adc
jb
int3
cltd
cmp
out
imul
fs
sbb
dec
notb
mov
mov
shlb
sti
test
fs
mov
outsb
sarb
xchg
cmp
and
cltd
cmc
mov
or
pop
xor
pop
push
idivb
push
push
adc
pushf
fwait
lcall
into
ja
mov
sbb
pop
pop
mov
js,pt
inc
in
sbb
out
mov
xchg
adc
cli
lods
pop
cmp
repnz
push
popf
fists
in
jbe
pop
fidivrs
lock
lds
xchg
xchg
pop
movsl
jmp
mov
and
rolb
lcall
sbb
gs
fisttps
ja
lods
outsb
hlt
lret
xor
inc
inc
adc
sbb
pop
insb
xor
pop
inc
roll
and
jo
imul
mov
ror
idivl
das
xchg
stc
sbb
cmp
inc
inc
inc
xor
xchg
int
xor
xchg
pushf
sub
out
cld
loopne
push
mov
fucom
xor
dec
cs
lods
mov
adc
and
mov
faddl
dec
pop
popf
or
mov
xchg
push
adc
fwait
dec
push
dec
movl
and
lods
cmpsl
mov
jae
cs
push
loop
aad
dec
xchg
out
js
je
in
xchg
out
inc
in
add
loope
pop
loope
mov
sbb
out
pop
ja
jno
andb
sub
sub
sbb
cmp
pop
out
xor
dec
mov
and
out
mov
lods
leave
xor
inc
inc
fcmovb
adc
mov
pop
cmp
push
lds
cmp
mov
push
fnsave
xchg
adc
repnz
adc
adc
shll
rclb
cs
popa
fdivs
fsubr
sub
xorl
call
pop
lahf
adc
inc
andb
push
xor
rclb
cld
repnz
stos
out
mov
jle
adc
mov
fisubl
jo
ja
sbb
shrb
aad
dec
jb
cmp
mov
cmp
cli
xor
shrl
test
aad
popf
call
iret
ja
into
fbstp
xor
dec
push
test
test
xor
divb
gs
call
test
ret
pop
pop
lods
or
in
adc
aad
imul
dec
out
aas
xor
dec
lea
push
hlt
cmp
lea
std
ja
rcrl
decl
jo
push
or
mov
pop
imul
mov
subb
cltd
test
cmc
mov
fidivrs
sbb
adc
into
pop
add
add
lea
stos
negb
cs
cmp
fwait
je
push
mov
enter
push
add
add
bound
jg
sbb
test
add
loopne
arpl
popa
mov
loopne
fists
into
dec
jae
push
hlt
cmpl
inc
push
inc
stos
sarl
cmp
jmp
push
cmp
pusha
test
out
call
inc
push
push
je
cltd
adc
bound
mov
and
cmp
mov
inc
add
mov
jmp
jp
cmpsl
cmp
jae
jno
call
pop
pop
idivl
popf
and
inc
and
enter
xor
mov
aam
xorl
sahf
and
lods
sahf
cltd
ja
pop
and
lahf
cmp
arpl
repnz
rolb
xchg
adc
sahf
mov
sbb
cwtl
adc
movb
xor
movsb
mov
sbb
and
inc
add
cmp
js
pop
cmpsl
jle
cmpsb
mov
sarb
fldl
sub
dec
sti
out
scas
mov
add
decb
flds
xchg
bound
xchg
dec
jg
inc
vmwrite
inc
in
fdivrl
int
push
cmpsb
sbb
xlat
ret
insb
push
jmp
push
mov
and
leave
ficoml
ret
inc
lods
sub
mov
xchg
sbbb
imul
aas
arpl
push
mov
shr
call
mov
loope
fsubrl
aad
dec
iret
sbb
scas
fstl
scas
fyl2xp1
xchg
sti
movsb
popa
movsl
or
xchg
lods
enter
push
mov
iret
jge
js
ds
sub
jl
jle
ds
xchg
fcomps
inc
lret
inc
pop
sahf
out
filds
and
in
es
jo
mov
sbb
inc
dec
ja
int
jb
int
mov
sub
sarl
xlat
xlat
lea
jb
loop
paddusw
sti
icebp
cmp
popa
sbb
jns
jno
mov
scas
jmp
test
pop
mov
addr16
std
lods
sti
cs
loope
sahf
dec
aas
shrb
in
fdivs
inc
jns
ficompl
push
add
addl
adc
repnz
and
lock
lahf
es
mov
pop
fsubl
idivb
insl
shrl
jle
cld
outsb
dec
les
jno
fmull
mov
outsb
mov
outsl
test
inc
xor
cmp
or
pop
cmpsl
xchg
fcompl
in
rcrl
dec
mov
pop
push
mov
push
push
dec
cmp
or
dec
or
xor
mov
shrl
xchg
cmc
mov
adc
or
test
data16
inc
push
mov
cld
jp
lcall
jp
lods
jp
sub
adc
or
in
mov
lret
arpl
mov
mov
inc
stos
cmp
lret
movsl
cmp
add
xorl
pop
mov
push
mov
add
nop
and
or
lock
push
in
int3
mov
ds
loop
cmp
push
mov
jp
fidivrl
shrb
insb
xor
test
mov
sarl
mov
sub
lret
inc
popf
push
iret
pop
jmp
add
dec
mov
adc
lcall
test
push
or
xor
lahf
nop
fadd
adc
iret
push
xchg
mov
fidivl
dec
cmp
pop
xchg
fstps
mov
lock
push
adc
sahf
movb
xor
movsl
js
pop
gs
repnz
xlat
icebp
insl
adc
in
jg
jg
je
test
ret
mov
int3
or
jns
push
add
lock
sbb
dec
jp
pop
scas
adc
inc
push
xchg
jg
or
pushf
or
mov
add
inc
aas
xchg
mov
or
ds
test
sub
sbb
loop
cmp
stos
xor
xor
mov
or
push
loopne
jmp
adc
mov
sub
nop
push
pop
mov
addr16
mov
ret
loopne
divl
pop
mov
xchg
test
mov
jnp
sub
stc
outsl
out
jge
ljmp
ret
dec
js
pop
push
xor
ret
int
mov
or
jp
xchg
stos
or
xchg
into
lcall
lock
mov
arpl
push
adc
lods
out
inc
push
sub
imul
clc
dec
jle
arpl
cli
int3
loop
ja
dec
xchg
mov
sarl
mov
jge
push
jmp
xor
xor
imul
pusha
scas
dec
rclb
mov
outsl
mov
fucomp
mov
popa
jnp
add
repnz
mov
iret
shl
mov
sub
xorb
add
add
test
or
fbld
adc
sub
pusha
cmpsb
aad
scas
pop
sub
adc
pop
mov
rclb
loop
mov
adc
outsb
pop
jmp
fninit
std
mov
or
mov
sbb
sub
imulb
shrl
mov
or
lret
mov
out
stos
xor
mov
repz
out
xchg
les
adc
loop
fwait
mov
pop
cmpsb
aad
les
in
scas
xlat
test
and
mov
and
int3
fnstenv
gs
icebp
xchg
in
xchg
imul
lret
lret
stc
add
mov
nop
pop
data16
pop
das
movsl
pop
repnz
mov
and
sub
mov
xchg
in
cwtl
or
mov
mov
or
int
dec
push
dec
mov
popa
jae
stc
aaa
sti
fs
xlat
pop
adcl
or
push
mov
rcrl
cmp
fxch
out
mov
xor
cmp
or
sbb
mov
xchg
in
dec
rol
and
scas
xchg
outsb
movsl
subb
xor
jl
push
cmpsl
cltd
ss
cmp
cmc
scas
outsb
ret
mov
inc
pusha
aaa
ret
sbb
enter
rcrb
jb
cli
mov
xchg
pop
pop
mov
push
push
adc
adcl
fmull
fcompl
lret
lods
outsb
dec
lcall
in
imul
mull
out
mov
mov
outsl
sub
jecxz
jo
icebp
jge
jle
mov
das
xchg
out
fsubrl
jge
sbb
out
scas
clc
cmp
ljmp
cltd
inc
addl
push
insl
pop
in
dec
aas
lret
xchg
daa
cmpsl
jle
daa
and
pop
lea
lock
xchg
pop
cmp
leave
imul
fstpl
pop
sti
lock
jnp
add
sbb
into
add
inc
push
pop
arpl
out
dec
inc
stc
popf
pop
loop
sub
lods
popf
mov
and
push
xchg
push
pop
popa
pop
mov
inc
cmp
sub
mov
aaa
mov
cmpl
cmpsb
mov
mov
test
xchg
int3
xchg
fwait
xchg
insb
or
cmpl
or
xchg
mov
int
shlb
cld
mov
in
and
mov
fcmovne
jle
data16
aam
dec
std
add
lods
into
movb
mov
push
add
adc
xor
shrl
jecxz
or
lock
pop
xor
outsl
pop
out
pcmpgtb
int
and
and
je
xchg
subb
dec
sahf
scas
shr
jp
mov
pop
sbb
or
and
movsl
push
mov
imul
jbe
mov
dec
test
cmp
xchg
ja
fistl
insl
dec
fwait
ror
test
or
stos
sahf
adc
hlt
cli
lahf
jl
sub
or
rclb
fiadds
add
in
dec
xchg
jecxz
xchg
inc
cs
cmpsb
xlat
push
xor
pop
lea
add
adc
call
frstor
push
xor
mov
out
cmc
or
and
or
lds
lods
idivb
fndisi(8087
inc
dec
xchg
lods
mov
out
xor
leave
mov
dec
sti
cmp
jg
rorl
mov
lds
jl
jbe
jl
dec
jns
xor
cld
clc
out
bswap
dec
cmpsb
sti
lcall
cmp
mov
cwtl
mov
shrb
lahf
jl
imul
mov
push
stos
xchg
or
enter
ret
out
aam
push
push
fidivl
hlt
push
push
out
mov
fcoms
fsub
cmc
or
or
mov
xchg
outsb
cmp
dec
fmuls
and
and
cmp
cmp
sbb
push
rcll
clc
sahf
lret
pop
or
hlt
shll
cmc
icebp
inc
cwtl
outsl
dec
sub
or
or
push
jle
ret
jl
test
jge
dec
xor
jp
testl
mov
lods
imul
outsl
push
pop
imul
out
jp
mov
sbb
mov
mov
push
outsl
out
xchg
sbb
stos
cmp
cltd
aam
xor
out
push
or
in
pop
adc
lods
ds
ja
sub
lods
dec
fiadds
xchg
lret
lods
pusha
or
sub
or
sub
leave
inc
popf
mulb
pushf
inc
push
or
dec
test
jb
test
jns
cmp
ret
sub
mov
sti
xchg
mov
faddp
adc
in
push
rorl
lret
adc
sub
dec
hlt
daa
push
sub
loopne
push
mov
push
shll
mov
dec
ret
movsl
cltd
cmp
sub
and
xchg
cmp
pop
lret
test
xchg
cmp
test
mov
rorb
or
inc
xchg
subb
ds
int
test
daa
lea
mov
in
repnz
pusha
mov
add
cmpsl
and
push
test
cs
test
mov
cmp
and
mov
cmp
push
rolb
daa
jecxz
imul
mov
cmpl
pop
cwtl
sbb
repz
xchg
pop
xchg
mov
add
enter
sbb
add
cwtl
mov
int3
scas
xchg
cmpsb
xor
add
jmp
mov
lea
sbb
outsl
xbegin
mov
xor
rcrl
sub
mov
lock
daa
mov
pop
into
sahf
gs
mov
jg
popl
test
jnp
jecxz
outsl
arpl
rorl
notl
fs
pop
xchg
out
push
inc
adc
xorl
jl
mov
or
addr16
mov
cmp
in
fistpll
mov
lcall
sub
call
loope
or
popf
fs
xchg
jbe
std
jns
imul
cs
sti
dec
incb
outsl
dec
mov
xor
sub
mov
je
adc
rclb
fildll
jmp
movsl
xchg
mov
bnd
jae
out
sbb
popf
les
or
les
ds
scas
pop
test
fcoml
add
int3
push
mov
jge
add
sbb
ffree
add
xor
or
mov
neg
ret
imul
ficoms
je
xlat
aam
ret
dec
mov
gs
xchg
repnz
adc
pusha
fs
in
mov
jns
data16
sbb
jmp
or
mov
sti
cmp
mov
imul
pop
jmp
sub
pushf
les
int3
cli
jo
mov
dec
test
add
xchg
in
mov
xor
jmp
mov
jo
jg
stos
jnp
fstl
dec
or
cmp
imul
jae
loopne
out
sbb
lcall
and
pop
ret
adc
aaa
cmp
push
leave
adc
cmp
lret
mov
sbb
cmp
loope
in
ds
sbb
arpl
shlb
push
pop
data16
enter
std
mov
xchg
repz
adc
or
mov
dec
ficoml
subl
mov
lahf
fxch
jnp
lret
or
sub
sbb
outsl
jecxz
popf
cmp
xchg
pop
sbb
and
adc
push
jne
repz
out
lds
rcrl
test
jbe
xchg
add
scas
daa
popf
cld
jb
mov
cltd
pusha
outsb
inc
pop
push
ja
loopne
xor
loope
inc
popl
xor
cmc
cmp
nop
adc
pushf
adc
xor
dec
clc
adc
pop
push
pop
dec
insl
rcl
addr16
fldl
jp
mov
jne
sbb
mov
jg
xchg
pop
cs
and
jnp
xor
pop
xchg
cmpsb
int
xchg
mov
fistl
icebp
mov
mov
lret
gs
sub
cli
loopne
je
jle
fs
pop
push
out
call
test
mov
roll
scas
xchg
jmp
cli
test
fcmovnu
lahf
push
andl
imul
pop
xchg
pop
stos
or
jl
je
outsl
jl
pop
popa
and
lea
push
addb
mov
cmpsl
stos
jbe
popl
std
movq
lods
movsl
sub
fimull
hlt
jmp
nop
andl
addr16
pop
adc
test
repnz
fmul
into
imulb
dec
in
in
bound
xor
jb
sbb
pop
hlt
mov
ljmp
jbe
xlat
fcmovnu
xchg
inc
lods
jno
pop
sbb
inc
jmp
mov
pusha
lock
je
cld
jp
or
add
mov
cltd
imul
out
cmp
jmp
push
push
lret
pop
dec
jl
pop
inc
jbe
pop
outsb
shll
outsl
in
pop
cmpsl
dec
push
dec
movsl
jne
jmp
push
mov
xchg
mov
xor
xor
cmp
sahf
aad
mov
cmpsl
shlb
mov
push
pop
popa
imul
push
cmp
inc
adc
push
mov
mov
out
bound
or
cmp
lcallw
sbb
cli
test
movsb
pusha
rcrb
or
pop
push
pop
rcrb
imull
outsb
sbb
jmp
aad
mov
jne
mov
sti
jecxz
mov
mov
adc
mov
or
jae
xchg
lods
sub
std
mov
dec
add
mov
jle
adc
mov
mov
dec
inc
mov
fdiv
adc
xchg
shlb
cmpl
leave
data16
popa
movsl
cmc
xor
mov
push
add
push
scas
test
in
pop
call
xlat
repz
sbb
out
xchg
out
out
xchg
cmp
and
stc
cmp
mov
mov
mov
jmp
xchg
cmp
jl
scas
fcompl
sbb
outsl
pushf
jle
xchg
jg
pop
add
mov
dec
inc
fmul
outsl
hlt
or
add
sbb
push
shll
cmpsb
int3
sub
ss
push
mov
movsl
addb
add
dec
call
sbb
jb
pop
ret
jno
inc
inc
shll
aas
adc
std
dec
sti
jns
pop
sub
jle
aad
pop
fiadds
sbb
xchg
fld
mov
pop
imul
mov
sbb
and
jne
mov
or
mov
clc
jl
in
rcl
cmp
mov
lods
int
add
mov
push
flds
cli
lahf
or
insb
arpl
add
xchg
push
inc
ss
insl
adc
and
mov
scas
gs
xchg
sub
sub
cmpsl
cmp
mov
cmc
pop
or
mov
jnp
xorl
ljmp
sbb
cmpsb
data16
aas
sbb
push
inc
add
and
push
js
or
loop
cmp
xor
push
sub
jle
add
insb
jo
scas
mov
xor
das
pop
std
jle
fildl
jne
jns,pn
je
xchg
jle
pop
test
stos
xchg
sbb
cmc
jmp
sbb
aad
call
outsb
sub
mov
pushf
icebp
daa
in
fisttpll
mov
loope
adc
and
loopne
dec
loopne
stc
or
push
sub
loopne
push
mul
rclb
jge
jne
dec
loopne
mov
insb
sub
xor
sbb
aaa
xchg
jno
push
add
mov
mov
xchg
mov
xchg
ficoms
pop
clc
icebp
aam
inc
xchg
sbb
es
scas
mov
xchg
or
xor
das
int
bound
push
pop
cmp
xlat
cmpsl
imul
jb
or
mov
pop
add
push
sbbb
data16
movl
in
sbb
cmp
push
movsb
pop
mov
daa
int3
cmp
outsb
enter
dec
scas
shlb
adc
mov
xor
ds
mov
or
xor
test
loope
bound
pop
or
adc
out
rcrl
in
cltd
inc
jl,pn
lea
jbe
hlt
orb
test
xchg
and
xor
call
ficoms
das
mov
fs
adc
dec
cmpsl
cmp
sbb
divb
xchg
int3
xor
and
aaa
adc
repnz
sbb
and
push
outsb
fcomps
rcrl
adc
jge
push
push
ficoms
enter
cmp
cmp
jno
dec
mov
xchg
sbb
mov
pop
sub
add
add
stos
dec
xchg
dec
dec
wrmsr
cld
add
cmpsl
lahf
mov
imul
mov
add
mov
jne
jecxz
add
out
cwtl
daa
sahf
mov
movsl
cs
in
sub
push
call
mov
or
xchg
jno
jae
mov
imul
sbb
push
cmp
xchg
fdivs
sahf
mov
cltd
in
cmp
mov
mov
cmp
jno
push
xor
mull
jl
mov
aam
pop
mov
xchg
fwait
in
mov
xchg
std
mov
or
xor
daa
push
mov
dec
sbb
dec
and
int3
add
push
sbb
lds
cmp
mov
ficomps
sub
inc
sub
in
ret
fs
fwait
repz
pop
fbstp
add
aas
idivl
cmpsl
jmp
xor
mov
pop
jo
in
cmpsb
mov
sub
les
inc
pop
push
sub
and
int3
pusha
inc
pop
and
sar
xorl
jge
fidivrs
enter
push
lods
dec
fbstp
jle
or
test
les
outsl
pop
imul
fmul
and
mov
or
aam
dec
dec
sbb
jle
xor
cltd
mov
ss
mov
rcrl
inc
mov
cmp
xchg
xor
rcll
sbb
enter
clc
xchg
jb
fistl
fstl
jns
jns
jae
mov
jae
sbb
outsb
push
jmp
ret
sub
sub
mov
or
fildl
xor
in
fildl
mov
je
jl
sbb
clc
adc
in
pusha
lds
cmc
push
andb
sbb
push
mov
push
fmull
loopne
dec
addr16
hlt
inc
arpl
je
rcl
inc
push
neg
movsl
movsl
jbe
bound
xchg
sarl
mov
aaa
insb
or
movsb
inc
ret
stos
ljmp
fnstcw
mov
js
stos
adcb
aaa
dec
jae
mov
or
pop
sub
add
adc
adc
sarl
insb
add
insl
mov
and
repz
cmp
hlt
and
inc
loop
cmp
mov
push
mov
push
mov
pop
add
mov
cmp
test
jmp
scas
mov
es
push
les
cmpsb
lret
dec
stc
leave
jg
jae
roll
insl
xchg
mov
outsb
xor
lcall
cmpsb
adc
test
adc
fst
lods
inc
mov
test
add
arpl
cmp
outsb
int3
mov
rorl
cmp
int3
mov
cmp
xor
sub
pusha
add
lret
insb
xchg
mov
lea
or
mov
dec
inc
les
push
jbe
sub
mov
mov
loope
or
adc
test
sbb
daa
push
sbb
pop
mov
mov
into
aaa
add
in
popa
ljmp
insb
push
sahf
xchg
mov
add
rcrb
pop
cs
mov
xchg
ret
inc
jg
sub
jne
xor
dec
lods
cmp
scas
hlt
xchg
js
inc
inc
testb
or
dec
icebp
push
mov
jg
lds
lods
push
jns
xor
mov
pop
fwait
cmpsl
push
add
ss
sti
add
dec
dec
xor
xchg
push
jle
ret
and
scas
sub
jb
or
inc
push
sbb
mov
lea
xchg
xor
sti
push
adc
dec
sbb
xor
aam
ja
pusha
popf
xchg
testl
mov
mov
ret
in
xchg
xchg
sub
fld
test
popa
outsl
icebp
cmp
add
fidivrs
sbb
mov
cmp
inc
sti
dec
sub
adc
inc
cli
push
rclb
mov
mov
dec
mov
add
pop
add
push
pop
insb
sbb
fisttpll
jo
pop
xor
nop
dec
and
aam
loop
fidivl
jecxz
dec
stc
xchg
repz
movsb
outsl
push
in
push
adc
xor
xchg
out
jne
pop
in
outsb
shl
push
dec
sub
push
mov
pop
lret
lret
xor
xchg
xor
cmp
sbb
mov
cmpsl
xor
mov
divb
cmpsb
mov
dec
push
sub
mov
sub
xchg
loope
mov
and
les
mov
mov
inc
cmc
and
sub
jae
mov
mov
std
mov
inc
mov
add
into
out
jno
out
scas
std
sbbb
cmp
int
xor
dec
jmp
inc
adc
es
rclb
shlb
pop
pop
adc
test
mov
mov
enter
leave
into
xor
lcall
cwtd
leave
mov
jl
sarl
test
imul
mov
jno
scas
xchg
movsl
cmp
fnstsw
iret
dec
ljmp
in
mov
lahf
jno
jne
aaa
cmp
dec
pop
inc
and
adc
addr16
das
jg
cmp
rcll
sub
and
jae
pop
lret
cmpsl
shrb
sub
pop
popa
or
push
insb
repnz
jecxz
iret
jecxz
push
jb
add
pop
ja
or
lea
and
cwtl
int3
insb
aad
xchg
pop
or
dec
ret
div
jge
push
aam
ljmp
in
mov
test
adc
sub
xchg
and
ds
dec
and
cmp
push
in
add
push
mov
mov
popf
pop
cmp
xor
ret
add
orl
in
add
jnp
mov
xchg
aad
in
stc
fldl
das
inc
and
sbb
das
fisttpl
sbbl
in
inc
sub
push
stc
ja
popf
data16
mov
adc
adc
vpmaxsw
bound
push
lods
push
shlb
push
nop
popa
mov
out
pushf
mov
adc
sahf
push
pop
mov
jmp
inc
mov
js
ss
or
fsts
cmpsl
mov
ficompl
scas
cwtl
push
out
bound
lea
outsb
mov
or
mov
pop
sti
sbb
jle
popf
mov
aaa
daa
cmpsb
push
pop
mov
push
sti
notl
mov
mov
xchg
cmp
push
ficompl
fistpll
sbb
adc
aas
aaa
xchg
rclb
out
add
ret
divl
mov
mov
test
xchg
mov
cmp
test
add
popf
gs
outsl
lods
call
add
xor
shll
sub
es
fisttpl
lret
arpl
push
inc
ja
xlat
lods
sbb
jg
xchg
cmp
mov
push
loope
mov
mov
clc
test
add
test
hlt
sub
js
fimull
xor
addl
movsl
mov
lcall
cmpsb
add
add
scas
push
add
lret
push
dec
dec
je
mov
fs
xchg
div
adc
pop
insl
out
sbb
mov
mov
loope
jge
scas
mov
pop
cmp
ficoml
or
adc
jp
enter
dec
or
das
adc
loopne
cld
inc
aad
cmp
cmp
jb
or
cltd
push
fdivs
nop
cmpsl
xor
lahf
loopne
shrb
cwtl
out
fs
sahf
xor
or
lret
push
out
loop
gs
incl
push
into
push
push
lods
and
and
lods
mov
stos
ss
es
popf
ja
iret
int3
je
leave
inc
dec
add
dec
push
sub
fstps
xor
jmp
aaa
gs
pop
lret
dec
popa
push
mov
fildll
cmp
pop
lret
pop
sbb
mov
loope
fisubrs
cmpsb
sbb
sub
cmp
jmp
inc
out
std
push
je
inc
inc
call
test
js
mov
jle
pop
in
or
dec
add
mov
repz
lods
mov
push
std
aas
imul
xor
pop
cld
andl
bound
dec
std
dec
cmp
push
cmp
pushf
lahf
pop
test
fcomps
mov
mov
mov
adc
das
sub
or
cli
out
mov
sbb
enter
xchg
xchg
adcb
xchg
xchg
pop
xor
dec
push
pop
xchg
popf
push
call
in
push
cmpsl
int3
sbb
pop
arpl
leave
inc
or
jbe
cmp
push
or
aam
pop
and
test
lcall
xchg
gs
dec
fwait
iret
fisubs
aam
das
in
push
mov
lcall
insl
mov
cli
sub
and
mov
popf
enter
inc
or
stos
mov
into
cs
xchg
xor
add
sbb
negl
push
or
adc
pop
pop
loope
fdivrs
mov
insb
inc
loopne
aas
imul
in
adc
daa
pusha
sub
cltd
xor
xchg
and
andl
test
lock
push
jns
cmp
les
jle
je
mov
sbb
ret
stos
or
sub
xchg
push
mov
into
daa
scas
je
pop
ss
mov
pop
fs
mov
fdivs
repz
or
sbb
jmp
add
push
dec
mov
adc
or
leave
test
jge
insb
idiv
insl
pop
mov
pop
mov
cmp
movsl
inc
lret
or
inc
pushf
nop
rcll
lcall
inc
sub
jp
lds
push
inc
pop
mov
jbe
or
ret
out
iret
inc
mov
sub
lock
js,pn
xchg
adc
rclb
clc
sti
sahf
dec
aas
dec
sbb
sub
jne
ds
mov
aaa
sub
mov
pop
loopnew
mov
bound
or
lret
call
and
push
data16
mov
or
fwait
adc
out
inc
ss
cwtl
jle
shl
out
or
aam
stos
lret
in
jns
rcl
stos
adc
xchg
push
mov
imul
mov
push
call
push
es
stos
push
int
mov
jae
jge
mov
dec
int3
pop
cmp
push
nop
push
mov
movsl
sub
xchg
nop
sub
ss
pshufw
push
jb
iret
arpl
xchg
jno
sub
lcall
xchg
or
inc
mov
orb
mov
out
and
cmp
fildll
insb
std
add
das
cmp
cmp
push
scas
in
es
push
loop
mov
shlb
add
icebp
lds
mov
out
push
fistpll
lahf
lods
test
arpl
mov
or
cli
popf
sbb
out
out
aam
ss
aaa
cs
fsubs
lock
adc
cmp
jo
fidivl
mov
fimull
dec
bound
cs
add
leave
jns,pt
incb
sbbl
xor
dec
mov
dec
mov
fs
int3
mov
mov
push
ja
cmp
jae
aas
jecxz
add
dec
inc
dec
ja
inc
in
int3
mov
pop
and
jl
jmp
stc
cmpsb
and
push
imul
fldt
nop
xor
lahf
sbbb
fbstp
loop
imul
in
aad
dec
mov
jecxz
stc
cwtl
inc
and
push
insl
stos
lea
xor
pusha
int3
notb
mov
and
mov
lcall
or
movsb
mov
out
test
test
inc
push
jns
inc
clc
push
aaa
scas
push
aaa
jmp
xchg
cmp
and
inc
xchg
jge
pop
jmp
mov
pop
scas
cmpsl
push
aad
cwtl
in
arpl
ss
cmpsb
xor
adc
add
jbe
pop
pop
aad
mov
push
insl
dec
push
push
xor
mov
push
cltd
int
movsb
repnz
adc
das
sbb
sahf
pusha
jg
mov
aaa
push
es
fldl2e
adc
xor
mov
sbb
adc
sub
mov
fldcw
hlt
sub
cmp
xchg
sub
or
sbbl
inc
inc
icebp
jecxz
outsb
xchg
pop
cltd
sbb
fisubrs
xchg
and
push
pcmpgtw
xlat
hlt
adc
lods
add
cmp
test
sub
mov
cmpsb
imul
sub
es
data16
movsl
lods
or
pop
push
loope
and
pop
aad
insb
mov
cmp
movsl
out
xor
lahf
xchg
outsl
lods
jno
jb
decb
mov
mov
and
mov
out
cmp
cmp
or
mov
pop
add
and
cmp
mov
lcall
push
loop
lock
mov
fs
out
cmp
xchg
and
aas
adc
jo
mov
test
push
mov
cld
aad
aam
dec
rcrl
std
in
inc
inc
lcall
fwait
mov
xchg
fisubl
pop
psubq
adc
aam
push
xor
mov
xchg
sahf
mov
cmp
mov
lods
add
stc
xlat
push
push
in
xchg
aad
mov
in
clc
movl
lds
mov
jecxz
bound
mov
inc
sbb
mov
xorb
push
ret
mov
push
cmpsb
jo
lret
sbb
and
pop
inc
cmp
dec
adc
aad
or
scas
jne
ljmp
in
aad
pop
aad
cmp
xchg
mov
pop
add
adc
stc
adc
imul
add
push
xor
fcmovnbe
mov
or
fcomip
push
testb
adc
sub
filds
pop
ret
adc
repz
rorb
cmp
inc
cmp
push
aaa
jns
sub
lods
aad
shl
test
mov
fnstsw
pop
nop
int3
imul
ds
dec
sub
addr16
and
sbb
pop
adc
xchg
ret
push
jp
movsl
xchg
flds
push
mov
cmp
inc
inc
dec
mov
lret
aad
or
pushf
mov
xchg
sub
mov
push
adc
std
xchg
aas
pop
xor
in
sbb
push
pop
shrl
cmp
mov
cli
push
insl
jl
add
inc
jo
pop
jns
xchg
aas
or
in
rcll
data16
negb
cs
adc
dec
je
ja
push
sub
fisttpl
add
out
pop
xchg
xor
es
loopne
mov
icebp
lods
xchg
jle
jle
push
cmpsb
and
popf
push
add
jne
mov
lret
jmp
mov
into
add
sbb
xor
enter
sbb
sbb
or
or
incl
fdivr
cmc
loope
pusha
push
pop
cmp
insl
or
pop
das
push
mov
add
inc
fs
push
loop
inc
outsl
arpl
sbb
out
aaa
mov
data16
fistl
xchg
inc
lret
xor
shll
in
dec
loope
adc
adc
sbb
mov
push
cmp
enter
jl
mov
imul
daa
dec
jbe
jno
jle
sti
jmp
mov
daa
pop
mov
out
mov
and
imul
inc
jns
daa
pop
imul
lods
ds
cmp
jl
push
mov
mov
test
fbstp
or
lahf
pop
or
or
test
mov
sbb
xchg
xor
xchg
out
fistpll
mov
adc
xor
push
mov
inc
mov
js
pop
mov
dec
hlt
dec
mov
dec
or
int
mov
pop
mov
testb
xchg
fdivs
mov
fistpl
aas
push
push
aas
out
mov
inc
fucom
adc
pop
push
jae
dec
jns
testb
adcb
in
fbld
and
sbb
sbb
cmp
dec
pop
lds
mov
sub
push
add
add
jb
cld
add
out
into
scas
imul
daa
addb
inc
pop
cmpsl
mov
stos
stos
pushf
mov
outsb
aas
adc
xor
sbb
repnz
ss
jno
in
popf
in
add
mov
hlt
and
push
lea
jb
fisttpl
es
or
rorl
arpl
loopne
sahf
rcr
int
push
ss
mov
test
adc
jbe
imul
rcrb
sub
jg
daa
or
xor
call
test
pop
xor
jnp
sub
push
iret
or
mov
xchg
or
mov
lods
ret
mov
imul
enter
sub
in
push
jne
nop
and
movsl
mov
daa
xor
fistpl
push
jns
scas
cs
out
sub
push
insb
sub
pop
jnp
xor
movsl
andl
push
test
insb
ds
pop
inc
sbb
sbb
mov
xchg
inc
xchg
inc
fs
or
iret
lea
xor
call
in
xor
pushf
mov
push
shrl
aam
sbbl
pop
bound
mov
cmp
mov
js
leave
jns
repz
xchg
rcll
sbb
cld
mov
push
add
mov
dec
mov
repz
sbb
je
sub
jmp
jg
push
subb
pop
es
sahf
repnz
fdivrp
mov
jns
stos
dec
cs
xlat
push
mov
mov
adc
or
incl
stos
push
lahf
fnstenv
mov
ljmp
push
popa
pop
and
test
dec
data16
inc
rclb
mov
push
leave
mov
shll
lock
cmp
ret
mov
cmc
mov
mov
jl
and
mov
rclb
xchg
jnp
gs
popa
flds
aam
popa
lcall
loope
mov
mov
cs
fcoml
sub
dec
stos
lock
pop
add
sbbl
shrl
mov
mov
xchg
jns
dec
sbb
and
cwtl
push
sti
outsl
xor
add
das
out
dec
push
mov
jb
mov
jmp
mov
rorb
pop
ja
pop
jmp
fmull
aas
push
fldl
shll
jp
sub
das
cmpsl
test
insl
aaa
mov
ficoml
dec
lds
addr16
sarb
pop
enter
fldt
and
inc
inc
sub
add
dec
into
pop
inc
mov
das
cmpsb
jae
jb
jge
rorl
mov
mov
xchg
movsb
inc
scas
jl
mov
iret
jo
mov
inc
shrb
jmp
xorb
mov
cmp
cmpb
aam
inc
jmp
adc
inc
mull
jg
popf
pop
iret
sub
lea
addl
xchg
pop
insb
imul
les
lret
mov
pop
into
cli
cmpsl
arpl
outsb
sbb
inc
clc
sbb
cld
xor
rorb
out
sar
mov
ficompl
fidivrs
mov
test
pop
fwait
jg
fxch
lret
scas
shlb
and
sbb
addb
daa
out
ficomps
xor
inc
shll
pop
xor
mov
add
xchg
pop
and
rorb
mov
pop
daa
clc
cmpsl
loopne
lock
inc
gs
push
mov
icebp
mov
mov
mov
fdivs
push
adc
sub
add
lea
ss
sbb
addr16
dec
shrl
scas
inc
sti
rorl
xchg
mov
repz
inc
and
cmc
adc
adc
push
outsb
cmpsb
jmp
fs
sub
daa
mov
loopne
out
xor
dec
xchg
mov
icebp
mov
mov
mov
jns
arpl
pushf
decb
cs
pop
sbb
sub
dec
xchg
jo
fistpll
mov
nop
out
sub
test
popa
sbb
xchg
out
push
mov
dec
ja
outsl
call
dec
xor
or
sub
mov
je
adc
mov
int
mov
mov
int3
mov
mov
movsb
sub
push
shl
sbb
pushf
andl
pop
and
lahf
outsb
push
scas
mov
in
sub
std
das
roll
jp
mov
sti
dec
pop
call
jns
and
cmp
jbe
mov
sbb
ret
test
test
enter
lahf
cmpb
test
es
jbe
andl
jmp
push
out
adc
test
jnp
fdivp
fildl
aad
mov
movsl
jo
cli
jl
lea
inc
and
mov
xlat
sub
je
lds
mov
xor
push
ja
pop
and
or
rol
in
mov
mov
sbb
cmp
movsl
imul
fwait
mov
cltd
filds
in
stos
mov
mov
xor
clc
lea
jae
add
or
divl
std
pushf
adc
push
gs
push
pop
enter
or
aam
or
add
and
jo
popa
lret
pmuludq
dec
ficomps
scas
xchg
mov
lcall
push
add
adc
jecxz
movsb
sbb
jns
sub
mov
icebp
das
sbb
bound
sub
cwtl
sti
jmp
aas
add
push
pop
adc
stos
add
xor
outsb
sbb
imul
mov
and
pop
jmp
inc
mov
mov
inc
jnp
xchg
mov
push
sti
sbb
aam
sarl
mov
or
jns
xor
shrl
cmpsb
and
imul
pop
or
arpl
into
push
aas
fists
cmp
sbb
mov
dec
xchg
into
mov
push
or
leave
int
es
inc
addl
lret
into
fildl
aas
ds
mov
out
sub
and
sub
ret
push
inc
orl
dec
mov
ficoms
or
add
cmp
jnp
sbb
out
loopne
pop
scas
aas
sub
sub
mov
xchg
or
insl
lret
inc
enter
gs
jo
stos
xor
xor
cmp
sbb
pop
and
pop
jecxz
out
mov
cli
xchg
dec
pop
pop
fdivrs
add
add
push
xor
iret
out
or
xor
push
ror
clc
mov
mov
cmpb
push
dec
push
ljmp
popa
popf
popf
inc
sub
std
dec
push
je,pn
push
push
sbb
xchg
ja
dec
jno
adc
jnp
out
inc
nop
pop
sbb
and
pop
jno
iret
call
mov
sbb
dec
inc
mov
sub
xor
fwait
cmp
xlat
pop
iret
pop
outsl
ss
xor
sti
mov
xchg
test
inc
cmp
daa
mov
push
xor
sbb
pop
mov
stc
add
add
hlt
pusha
and
push
cmpsb
shlb
cmc
mov
xchg
int
icebp
les
rcrb
lahf
mov
jle
or
lods
and
and
push
or
movsb
and
das
stos
in
lock
inc
cli
into
dec
xor
mov
enter
movsb
cmpsl
cmp
jbe
loop
fsubs
cwtl
shl
sahf
sbb
xor
popf
mov
sub
dec
roll
dec
loop
shrb
and
mov
jl
jnp
pusha
mov
xor
cltd
movsb
mov
add
jp
incl
dec
pop
fiaddl
into
cmp
inc
xchg
jo
inc
popf
or
jno
mov
dec
pop
arpl
cmp
dec
mov
clc
cmp
adc
pop
inc
cmp
clc
in
jb
mov
lea
dec
or
scas
jg
pop
jg
sub
das
imull
mov
aaa
or
cmpsb
xor
lcall
hlt
lahf
xor
sub
inc
xchg
xchg
ficoms
iret
bnd
pop
inc
dec
sub
fcmovb
repz
divb
xorl
push
lcall
xchg
mov
jns
push
xchg
inc
pop
or
fdivrl
test
mov
scas
adc
dec
push
hlt
cwtl
or
insl
xorb
pop
xchg
push
sbb
in
fcoml
int
pusha
mov
or
out
int
mov
daa
outsl
xorl
mov
cs
pop
jb
cwtl
xor
inc
lcall
scas
and
out
xor
loopne
and
mov
jl
cld
or
jb
in
dec
or
scas
notb
dec
arpl
aam
cmp
test
imulb
or
mov
outsl
jnp
cmpsb
add
mov
adc
xchg
jge
hlt
mov
xchg
jae
jp
lods
lahf
arpl
pop
inc
mov
mov
sub
adc
fstpl
js
pop
fmuls
mov
mov
aas
or
xlat
and
mov
push
add
mov
xchg
mov
mov
sub
imul
cld
cwtl
lahf
cmp
jno
inc
or
add
ret
add
sahf
fistl
sub
sbb
inc
icebp
jp
sbbb
sbbb
add
xor
jbe
jg
into
mov
mov
sub
push
pusha
xchg
xor
imul
adc
mov
es
xchg
repnz
push
in
mov
xorl
xor
xor
xchg
loopne
xchg
stos
sub
or
adc
ljmp
clc
mov
push
call
mov
icebp
mov
icebp
iret
loopne
popa
fs
std
imul
mov
in
daa
outsl
loope
xchg
repz
out
outsl
insl
push
bound
push
in
inc
je
mov
scas
dec
xorb
push
mov
in
inc
stos
xchg
jo
adc
xchg
mov
fucom
test
stos
out
aad
data16
pop
insb
dec
js
into
sbb
sti
mov
mov
test
dec
inc
xor
in
or
mov
movsb
jp
cli
ss
mov
mov
lea
mov
dec
sub
or
mov
insl
stos
das
shlb
imul
iret
ud1
iret
scas
imul
cld
mov
fisttpll
pop
mov
fidivl
mov
repz
loope
xchg
fimull
scas
test
push
lock
and
loop
shrl
mov
insl
movsl
mov
or
mov
dec
adc
sbb
jns
insb
and
cmp
or
je
sbb
mov
dec
call
stc
add
inc
out
sbb
cld
in
mov
rcrb
xor
leave
jno
xlat
and
jae
or
jbe
push
sahf
jb
and
or
dec
cmpsb
push
dec
les
jb
ja
flds
xchg
or
lods
in
negl
xor
mov
movsl
notb
cld
cmp
enter
inc
jg
mov
rcrb
cmpsb
fcomps
insb
daa
jno
pop
arpl
xchg
jp
mov
jmp
repz
fisttpll
lret
xchg
cli
push
dec
sub
stos
push
push
cs
xchg
cwtl
in
xor
addr16
inc
or
xor
add
xor
es
test
push
push
arpl
lret
mov
outsl
xor
into
outsl
sub
mov
stos
aaa
in
mov
jb
push
sahf
cltd
add
ret
mov
pushf
repz
xor
add
cltd
outsb
lcall
notl
jp
jo
outsl
rsqrtps
movl
cltd
lds
pusha
mov
push
outsl
shrb
and
add
fdivp
jmp
mov
sbb
iret
scas
mov
shlb
push
inc
insb
sbb
jmp
gs
test
pop
lret
cmp
push
pop
xlat
je
xor
dec
dec
sub
cltd
lcall
dec
sahf
sub
mov
in
adc
dec
popa
cmpsl
cmp
mulb
mov
iret
lcall
pop
lds
clc
jle
call
push
pushf
ljmp
mov
dec
mov
jp
in
aam
out
xor
cmpsb
movsl
lcall
mov
adc
dec
xor
ss
jp
xor
inc
mov
xchg
rolb
sub
pop
ror
icebp
sub
cmp
and
outsb
cli
and
adc
xchg
sbb
push
cmp
sahf
popa
jl
out
stc
aam
inc
fsts
mov
in
popa
xchg
insl
or
stos
fwait
mov
mov
push
int3
aad
cmp
ds
pop
sub
cmp
shlb
mov
jbe
ficompl
movsb
jne
pop
aad
movsl
cli
mov
lods
in
cmp
jg
js
mov
push
add
inc
push
dec
xor
or
xor
fmuls
popa
ds
mov
repnz
stc
push
xlat
data16
in
dec
out
xchg
mov
mov
subl
dec
and
push
movl
xchg
mov
cmp
push
and
call
cmc
pop
mov
or
and
ficomps
push
pop
mov
mov
mov
mov
idivl
and
rcrl
rolb
mov
insb
shrl
lods
mov
cmp
out
lods
cmp
enter
push
mov
aas
lods
xchg
jb
pop
or
push
lret
sbb
cmp
jb
push
loopne
jge
inc
rol
sbbl
mov
adcl
js
mov
sbb
add
adc
test
cmp
xor
sub
xchg
jle
mov
inc
mov
dec
lods
sbb
out
and
imul
fs
in
lock
inc
mov
cli
loope
and
aas
addr16
insl
mov
fs
fcoml
mov
je
and
dec
push
push
in
pusha
fmull
movsl
shll
bound
sub
nop
lahf
adc
mov
xchg
in
outsl
in
xchg
popa
pop
idivb
popa
cwtl
in
adc
mov
test
dec
aad
mov
adc
out
mov
test
stos
xchg
sar
in
mov
or
dec
pop
imul
or
and
in
jo
pop
insb
iret
inc
fcomip
or
mov
sub
sbb
lret
xchg
int
enter
lret
iret
movl
pop
xor
pop
or
insb
bound
leave
add
addr16
xlat
mov
pop
rcrb
sbbb
mov
loope
mov
fdivrl
pop
call
out
arpl
pusha
fld
dec
ss
push
push
pop
pop
sbb
add
test
cli
add
cwtl
pop
xchg
imul
add
mov
mov
or
je
jmp
pop
mov
cmp
dec
clc
mov
or
mov
or
adc
ficompl
xchg
mov
push
and
dec
mov
rolb
inc
gs
and
loop
repnz
aam
cmpsb
or
adc
shrb
push
lods
add
inc
mov
adc
mov
or
ds
xor
pop
jae
sbb
popl
mov
repz
xchg
mov
xor
mov
fs
pop
jge
ficompl
cmp
fbstp
mov
inc
add
lds
sbb
js
leave
es
loopne
addr16
mov
mov
dec
inc
imul
addr16
imul
test
inc
ficompl
jnp
or
adc
mov
pop
adc
mov
incb
insb
aad
lret
inc
ljmp
jno
imul
lods
sbb
mov
push
into
popf
ds
aas
ret
fisubrs
sbb
and
jbe
ljmp
xchg
mov
ret
mov
xchg
loope
insb
test
imul
or
rcl
rorl
ret
int
push
in
inc
and
jg
inc
push
add
add
mov
sub
stc
in
cwtl
dec
push
dec
test
into
inc
cmpsb
jmp
jge
fs
in
stos
icebp
adc
into
add
nop
scas
inc
dec
inc
into
int3
mov
nop
shrb
shll
jo
imul
fwait
ret
jnp
xchg
push
test
sbb
mov
pop
lret
mov
inc
pop
loopne
cmp
xor
and
pushf
jns
lods
scas
mov
mov
cmpl
or
xorl
setbe
xchg
push
and
and
sub
fdivr
movzbl
push
rcrb
jl
pop
stc
insb
out
mov
inc
mov
jns
sbb
lods
ret
fwait
rorb
mov
cld
movsl
negb
loopne
push
arpl
or
mov
loop
js
fidivl
mov
in
popa
and
popf
out
mov
jns
inc
sub
inc
push
mov
mov
movsl
push
int3
push
ds
jmp
cmpsl
mov
pop
loop
out
and
xchg
push
dec
add
stos
loop
push
iret
mov
jbe
and
cmp
cmp
sarl
or
jl
jmp
lods
mov
mov
out
loopne
jg
cmp
xorb
cmp
inc
xchg
lds
sub
mov
jl
test
adc
mov
dec
pop
jmp
lea
xor
push
pop
mov
xor
mov
lret
lock
lock
sar
icebp
lcall
pop
push
fdivrl
push
mov
sub
cmpsl
es
mov
or
lret
pop
and
add
fdivp
cmpsl
pop
imul
jo
mov
xchg
sbb
in
xchg
push
rcll
jb
push
cmp
sbb
in
fcmovu
shrb
fdivs
cmp
dec
xchg
mov
mov
push
scas
jne
mov
sbbl
stos
mov
inc
mov
daa
or
sub
cmp
mov
or
push
dec
movsb
pop
rcl
adc
add
fistl
or
dec
arpl
inc
xchg
ret
push
movsl
int3
pop
pop
dec
fldpi
mov
in
push
inc
cmp
sub
jnp
mov
adc
and
aam
fbstp
pusha
sbb
push
hlt
test
mov
movsl
sub
frstor
and
in
test
stos
bound
dec
pop
mov
xchg
ss
fldenv
ret
icebp
inc
loop
mov
lret
mov
add
inc
sub
aaa
dec
push
mov
adc
sti
pop
push
mov
dec
mov
cmp
cwtl
stc
rcrl
jo
and
push
lret
cld
add
and
daa
shr
inc
add
xchg
mov
xchg
arpl
scas
xor
pop
add
movsb
xor
movsl
add
pop
std
dec
fsub
ss
sub
or
dec
out
loope
sbb
test
imull
push
xor
jl
outsb
mov
xlat
rorl
mov
aas
xchg
add
mov
sbb
fucomp
mov
call
push
xor
or
pushf
and
leave
int
mov
fdivr
leave
xchg
mov
dec
xor
mov
dec
inc
in
rcrl
js
jns
in
test
ret
pop
adc
jecxz
mov
pop
fcomps
pop
aas
das
push
hlt
mov
call
leave
sahf
cmc
dec
xchg
icebp
dec
mov
in
loop
or
mov
jmp
in
out
mov
push
fldenv
ja
cs
insb
arpl
mov
iret
mov
push
xor
mov
imul
adc
stc
test
in
ror
stos
cwtl
inc
es
jne
xchg
xlat
cli
jb
or
adc
mov
cmp
adc
pop
lea
cwtl
aas
call
stc
xor
inc
enter
dec
call
push
stc
movl
mov
add
jnp
mov
xchg
sbb
sub
push
push
push
arpl
jle
lds
mov
add
mov
or
cli
fdivrl
popf
mov
mov
cwtl
rol
into
mov
les
adc
cld
inc
in
popf
push
lods
jb
mov
loope
jge
xchg
mov
pop
mov
test
lea
inc
adc
xchg
pop
mov
popf
mov
adc
xor
sub
movsb
jns
pop
addb
mov
sub
adc
mov
pop
xchg
inc
divb
out
loope
sub
and
mov
push
pop
inc
jp
fidivl
int
nop
mov
push
push
push
adc
adc
lods
js
cmc
mov
mov
add
mov
sbb
sub
stc
in
pop
mov
add
mov
and
push
mov
push
iretw
popf
addb
cmp
push
dec
clc
pushf
push
out
cmp
inc
mov
xchg
test
mov
cmpsb
addr16
mov
jbe
cmc
or
push
push
jno
ret
dec
fcmove
test
sbb
adc
push
js
pop
pop
inc
cli
inc
sbb
or
andnps
adc
mov
sbb
ds
fwait
add
daa
jb
fsts
sub
jge
jns
adc
btr
popa
mov
xchg
mov
mov
rcrb
adc
addr16
scas
or
mov
loope
jae
sub
pop
shlb
mov
xchg
jge
mov
pop
mov
push
add
mov
jge
rolb
sub
push
add
dec
mov
mov
mov
mov
into
neg
adc
in
push
inc
daa
cmc
cmp
mov
mov
out
sbb
scas
mov
add
and
jno
pop
mov
call
mov
cmp
add
dec
xor
mov
inc
repz
add
jns
mov
leave
adc
mov
cmp
mov
cmc
push
je
loope
cwtl
repnz
pop
mov
int
cmp
nop
push
js
loopne
es
push
pushf
shlb
xchg
les
sub
cmp
clc
inc
aam
inc
pushl
test
cmpsl
mov
push
push
popf
cltd
cld
mov
inc
in
ja
lcall
sub
dec
xchg
push
outsb
dec
cmpsl
push
sbb
fs
in
lods
js
or
or
addr16
xchg
testb
lds
mov
jmp
push
stc
xor
arpl
or
inc
xor
ds
xor
insl
jle
lds
cmp
or
mov
jae
movl
clc
mov
or
je
and
push
or
cmp
and
leave
xor
pop
shlb
scas
mov
jl
ret
cmovg
subb
jae
int
arpl
push
cmp
sbb
stos
lock
mov
xchg
in
sub
je
inc
or
pop
jecxz
jnp
xor
fcoms
mov
dec
adc
xor
test
inc
jo
mov
pop
jnp
dec
add
push
cmc
inc
cmp
out
add
jmp
repnz
repz
cmp
cmp
lcall
jmp
or
subb
mov
inc
mov
jbe,pn
out
cli
xchg
fldcw
lcall
push
pop
inc
mov
mov
xor
negb
mov
pop
add
das
cli
sbb
push
cli
add
popa
xor
xor
or
test
sbb
or
in
mov
filds
xor
test
jo
icebp
sub
arpl
inc
push
add
sbb
lods
mov
gs
mov
inc
sbb
cmp
cltd
inc
aad
lds
push
clc
sbb
dec
lahf
adc
les
cmc
adc
dec
scas
sbb
add
aad
andl
icebp
fnstcw
dec
jecxz
adc
mov
add
mov
dec
sbb
je
loop
mov
xor
lcall
and
test
add
dec
xchg
add
inc
mov
sbb
jns
push
pop
xchg
jge
sarl
aas
mov
stc
mov
scas
jge
sub
inc
mov
loope
sub
jg
sbb
das
jp
xor
push
jmp
jmp
dec
add
xchg
das
add
scas
stos
cmp
mov
xor
scas
dec
in
leave
adc
add
pop
ss
movhps
test
sbb
je
addb
pop
jo
dec
aas
mov
lods
ds
pop
testl
mov
sarl
jecxz
sbb
jo
enter
pop
repnz
out
ficoms
cmp
inc
cmc
push
jecxz
data16
jne
xor
scas
or
stos
test
subl
push
outsb
xor
sti
popa
sbb
jbe
jmp
outsb
mov
mov
jge
sarb
aam
mov
pop
shl
cmp
add
and
adc
imul
push
test
inc
outsl
and
aam
dec
mov
adcb
pop
lds
sarb
dec
mov
jl
mov
jmp
or
cmp
mov
andl
insb
inc
jne
and
pop
mov
lods
mov
inc
or
mov
pushf
je
mov
inc
popa
xor
inc
mov
imul
sbb
pop
pop
push
ret
and
movsl
lcall
jno
pop
std
mov
and
mov
pop
mov
insl
mov
cmp
pop
lea
or
or
imul
rorl
in
nop
hlt
jne,pt
jecxz
js
push
insb
inc
cltd
cmp
mov
repz
dec
dec
les
or
lds
or
les
rorl
ss
notl
jns
and
loop
mov
pop
lret
lret
ss
cs
xchg
aad
cmp
into
push
shrl
mov
lahf
pop
mul
cmc
dec
or
sti
cmp
sbb
pop
pop
xor
leave
xor
xchg
push
mov
js
stos
call
dec
xor
push
mov
push
pusha
or
pop
and
in
add
mov
ret
cli
rcl
sbb
xchg
or
movsb
stc
les
lahf
push
test
mov
shr
sbb
push
mov
nop
jne
mov
cmc
es
jno
lahf
xor
and
mov
aas
inc
mov
sub
sub
xchg
push
ja
ss
xor
inc
jmp
cmp
insl
jae
mov
dec
mov
dec
lahf
in
cli
mov
add
into
cli
test
dec
fnstenv
pushf
pop
jns
jbe
test
pop
cld
xorl
pop
xchg
mov
cmc
pop
inc
es
ss
jne
mov
push
and
dec
jecxz
xor
xchg
fs
fdiv
loop
push
jnp
outsb
sbb
cmp
lock
jae
sub
jae
rcl
rcll
cmpsb
xchg
cmpsb
mov
dec
in
push
mov
pop
xor
inc
jecxz
jmp
xlat
xchg
test
inc
movsl
push
sub
dec
push
add
mov
xchg
repnz
jmp
xchg
andb
sbb
jb
cli
or
out
lcall
sbb
lods
jae
aaa
sbb
repz
bound
pusha
insb
popf
cli
xorl
pop
cmp
lods
push
lock
mov
pop
push
inc
sbb
add
adc
lods
jo
mov
or
jae
mov
push
fmull
popf
jne
dec
icebp
cmpb
jae
xchg
movsb
cmpsl
jp
cmp
rcrl
inc
mov
inc
imul
jle
xchg
xchg
push
adc
pop
mov
lea
sbb
sahf
and
xor
jnp
mov
jae
or
lods
add
jo
sub
xor
mov
and
es
lock
or
sti
repnz
xchg
pushf
in
ss
pop
ljmp
ss
xchg
cmp
fisubl
outsb
es
mov
mov
xchg
cmc
push
sbb
pop
pop
into
xchg
mov
sbb
scas
jae
add
jae
fs
jno
loopne
push
ja
xor
push
bound
ret
test
addr16
jns
sbb
imul
ret
mov
cmpsb
mov
cli
xchg
add
add
adcb
daa
lods
inc
jbe
or
xor
cmpsl
sub
stc
lock
int
fldcw
cmp
mov
inc
fwait
popf
repnz
inc
loopne
fs
mov
pop
loope
pop
insb
cmpsb
pop
jae
jp
jle
pushf
add
in
rcr
arpl
pushf
sbb
imul
std
xchg
mov
js
subb
inc
jg
mov
mov
je
jp
outsb
add
inc
or
fyl2xp1
pop
pusha
or
xchg
stc
jno
add
loopne
adc
repnz
lret
fs
inc
in
hlt
jae
mov
mov
or
orb
movsl
shll
and
fs
pop
mov
xchg
movsb
loopne
daa
xor
rol
sub
js
mov
dec
add
jmp
and
insl
mov
or
cwtl
or
sbbl
jecxz
shll
fwait
fsubs
stos
shrl
inc
sbb
sbb
adc
lock
in
data16
icebp
repz
push
fwait
mov
addb
fisubl
push
dec
inc
pop
sub
mov
jb
adc
add
andl
push
aad
push
pop
mov
out
dec
adc
data16
sub
and
push
loope
xlat
inc
xor
scas
pop
dec
negl
rcr
rclb
jp
and
ficoml
rcrb
or
outsl
out
and
insl
in
lock
xor
jae
add
mov
mov
std
ja
mov
adc
sub
xor
test
cmp
jno
mov
mov
xor
scas
mov
sbbb
jecxz,pt
ror
mov
mov
inc
sbb
shl
rcll
rolb
outsb
add
jne
mov
lcall
sbb
and
adc
sahf
in
push
inc
mov
fwait
je
popa
out
mov
in
fsubl
loop
mov
dec
leave
push
jb
fmuls
pmulhuw
add
test
mov
dec
imul
jb
mov
fcomps
pop
pop
dec
dec
xlat
in
cs
pushf
xor
push
mov
jmp
jmp
xor
dec
inc
shrl
mov
data16
out
dec
mov
xchg
rcrb
jmp
dec
sbb
outsl
testb
data16
push
mov
or
test
dec
mov
outsb
nop
adc
adc
jae
cs
ljmp
xchg
inc
mov
ret
jns
push
jmp
insl
minps
or
imul
outsl
add
push
je
out
outsl
loope
sbbb
push
jmp
outsb
outsb
xor
fmuls
stc
call
push
jmp
dec
jnp
or
out
movb
addr16
pop
movb
mov
sub
or
lahf
xchg
cmp
in
es
mov
loopne
cli
mov
cwtl
fdivrs
dec
iret
and
dec
ja
push
in
fdiv
inc
lods
mov
jae
mov
sbb
pop
xchg
mov
push
pop
cmpsb
in
inc
jecxz
push
in
aaa
andl
mov
insb
out
jp
mov
lea
movups
inc
cmp
je
pusha
jge
insb
xor
sarb
roll
pop
jo
stc
mov
sbb
jne
test
in
mov
xchg
lock
cmp
push
inc
aam
adc
jae
ja,pt
dec
jmp
fwait
cmp
je
subb
add
pop
jne
jp
pop
or
mov
add
aaa
mov
push
add
inc
movsb
xor
inc
sbb
call
jns
or
in
popf
mov
xor
aaa
mov
pop
das
pop
lock
fidivrs
ja
inc
cmpsl
xchg
ret
sbb
cmp
cmp
in
lret
lock
setp
mov
scas
outsl
outsb
jmp
dec
stc
in
xchg
and
dec
pop
cmpsb
pop
lock
cmpsl
lods
xor
movsb
inc
mov
int3
data16
sbb
add
shrl
leave
iret
inc
add
xchg
sub
jno
aam
and
and
stos
jo
add
sbb
or
dec
div
cld
insl
xor
mov
shrb
mov
fs
test
adc
incl
in
fists
push
out
pop
rcr
repz
rorl
dec
mov
dec
divb
fisubrs
and
mov
lea
jp
dec
sti
fnstsw
inc
adc
or
or
loop
jmp
push
insb
das
add
inc
cmp
call
fildl
inc
aas
mov
jo
pop
stos
push
aam
add
sarl
jb
and
inc
lods
jne
inc
jp
mov
jmp
sbb
mov
out
lcall
push
pushw
stos
and
jecxz
mov
rcrl
and
mov
xor
daa
sub
mov
dec
adc
and
call
pop
test
or
mov
cmp
test
dec
mov
jns
inc
lods
jnp
push
or
sbb
test
popa
les
loopne
frstor
pop
addl
xchg
cltd
bound
es
inc
jecxz
sarb
js
push
movsb
ljmp
cwtl
cmc
icebp
mov
in
dec
adc
inc
push
push
shll
and
xchg
popa
or
fs
gs
dec
cmpsb
dec
in
dec
mov
flds
push
leave
xor
in
scas
xchg
insl
daa
subl
pop
xor
or
scas
in
cmc
aaa
xchg
fstl
xchg
pop
int
sub
les
inc
loope
mov
mov
xor
push
jbe
and
dec
xchg
or
aas
imulb
and
repz
mov
mov
mov
add
mov
fs
fmul
stc
mov
mov
sarb
sbb
repnz
or
mov
mov
cmpsl
add
mov
mov
xchg
xor
sbb
test
or
jmp
jmp
outsl
adc
rorb
int3
imul
movsb
jns
in
push
pop
nop
mov
stos
outsl
xchg
or
stos
out
sbb
jl
addb
mov
jbe
ror
xor
xchg
movl
sub
xchg
lods
add
xchg
pop
sbb
jle
sbb
es
and
stc
inc
jg
jp
adc
out
scas
ljmp
adc
aam
sub
add
icebp
push
mov
ja
orl
push
loopne
xor
or
mov
xchg
adc
shl
fs
cmpb
mov
fidivrl
adc
and
ret
xchg
dec
fsubl
xor
rorb
pop
inc
or
mov
scas
cli
mov
add
sti
in
out
stos
insb
inc
xchg
mov
lret
sbb
mov
outsl
aas
dec
adc
mov
jae
push
pop
push
scas
pop
or
fidivrs
sub
add
fstps
mov
sbbl
loop
jle
and
mov
sbb
push
loopne
push
loop
push
jp
xchg
cmp
insl
push
mov
fucomi
adc
adc
jnp
mov
test
add
mov
in
xor
pop
jae,pn
mov
call
xor
popa
dec
push
jne
pop
pop
mov
dec
ds
and
xor
xchg
add
popa
fwait
xchg
negb
xchg
jecxz
in
push
icebp
xchg
aam
dec
and
mov
add
adc
lods
pushf
or
in
adc
adc
mov
outsl
jb
cltd
jmp
or
in
jno
mov
inc
out
push
cmc
enter
mov
jno
cmpsl
jl
pushf
lret
jbe
sbb
icebp
sub
in
imul
add
je
cmc
and
dec
enter
popa
jno
xor
fdivp
dec
or
out
mov
cmc
sub
test
filds
adc
shl
xor
in
lods
inc
push
into
addr16
cmp
pop
add
sbb
jecxz
bswap
dec
mov
sub
ret
pop
mov
stos
sbbb
push
xor
pop
push
insb
repz
stc
in
xchg
or
sub
xchg
out
popa
movl
in
xchg
and
sbb
adc
jns
fsubp
add
repz
int
dec
or
sbb
sub
or
stos
incb
dec
xor
lss
jle
pop
insb
fcompl
mov
jg
pop
jmp
cmc
into
jo
and
inc
icebp
push
inc
add
sub
insl
mov
push
cmp
dec
daa
mov
jo
push
clc
jge
stos
jge
in
push
xchg
jne
divl
pop
imul
pop
shlb
out
push
call
dec
jne
xchg
cmp
repz
and
ja
inc
push
lods
ret
push
adc
fucomi
jmp
cmp
dec
or
pop
jp
imulb
adc
inc
call
push
into
fdiv
sub
aad
xchg
pusha
xchg
lods
inc
loopne
cli
jne
xor
ja
sbb
mov
mov
add
cmp
mov
outsl
loope
lds
lds
jle
loopne
int3
sahf
std
push
mov
cmp
bound
into
inc
int
jl
inc
add
push
hlt
andb
mov
pop
mov
add
jbe
out
or
dec
mov
inc
sbb
lcall
cs
loopne
add
sbb
mov
ffree
mov
or
add
mov
aaa
push
push
data16
fwait
lret
cmp
sub
adc
outsb
xchg
ret
mov
movsl
int3
scas
loop
rcll
mov
imul
push
xchg
pop
xchg
and
push
insl
mov
loopne
aaa
cmp
mov
insl
or
out
lret
pop
rol
and
shll
inc
mov
dec
lock
mov
ret
inc
jmp
sub
adc
or
mov
or
mov
xchg
mov
xchg
mov
in
pop
pop
jbe
mov
jl
xor
jns
jne
pop
in
sbb
dec
fstpt
lds
xor
dec
jbe
jne
cmp
hlt
or
inc
stos
jl
shl
outsb
cmp
ljmp
sbb
xchg
mulb
adc
lret
cmp
cmc
mov
cli
cmc
lcall
test
out
out
mov
leave
sub
fldcw
test
mov
arpl
ret
stos
enter
inc
push
repnz
fs
subb
xchg
in
fistpll
popa
lods
int3
push
test
je
pop
pop
addb
inc
sarl
jle
inc
pop
mov
cs
jge
jge
out
fwait
pop
and
test
dec
push
loopne
out
ja
test
pop
xor
xchg
xchg
mov
cltd
out
fcompl
mov
sub
pop
out
adc
mov
sub
pop
xor
xor
adc
test
inc
mov
inc
test
insb
sub
inc
pop
xor
and
lea
out
mov
mov
adc
or
xchg
aas
pop
sub
mov
rorb
xchg
sbb
xor
jp
mov
cs
jnp
mov
or
fldcw
jg
mov
dec
xchg
sbb
mov
cmpb
ja
fs
or
jmp
mov
dec
into
aaa
out
inc
add
xor
mov
mov
xchg
push
inc
lret
mov
adc
xlat
outsl
dec
roll
jno
bts
shl
out
imul
mov
dec
add
ja
sub
push
add
out
cltd
bound
and
xchg
push
jl
gs
cli
sbb
cmp
mov
adc
xor
inc
flds
add
cmpb
push
and
lcall
push
es
jno
mov
cwtl
dec
adc
xor
icebp
cwtl
pop
insb
jg
lods
push
outsl
in
mov
mov
inc
push
aam
stos
popl
pop
repnz
imul
scas
lahf
xchg
jns
sahf
in
cltd
pushw
xchg
js
add
jmp
cmp
mov
pop
jmp
cmp
incb
sub
add
loopne
add
into
movsb
mov
xor
xchg
cmpsl
out
imul
scas
stc
mov
stos
call
lea
std
add
inc
ss
ret
jecxz
jg
dec
mov
pushf
mov
lock
leave
lock
cmovbe
sti
fisubrl
xchg
push
fsub
testb
inc
adc
sub
icebp
out
es
test
add
lret
cmc
icebp
inc
imul
mov
jbe
pop
dec
add
inc
jne
cwtl
sbb
test
repnz
mov
xlat
push
jb
lock
popf
aad
jae
sarb
xchg
and
out
push
jle
mov
or
cwtl
aaa
and
adc
or
imul
lcall
hlt
add
mov
dec
out
hlt
sbb
test
lock
or
mov
int3
inc
xchg
loope
fstpt
sub
jle
daa
push
or
add
repz
rcr
mov
filds
bnd
pop
je
dec
aas
push
inc
pop
ret
sub
mov
es
aaa
add
or
outsb
cmpsb
mov
insl
roll
in
lahf
adc
mov
pop
mov
pop
xor
jle
push
sub
xchg
std
mov
or
out
lds
mov
mov
ret
dec
repz
or
test
push
loopne
push
jle
rclb
hlt
in
fdiv
mov
adc
cmp
sub
jae
push
mov
ja
or
dec
inc
xor
leave
insl
sbb
outsl
int3
cmp
jecxz
push
and
mov
mov
hlt
nop
adc
jae
xor
mov
xchg
mov
xlat
sbb
stos
xchg
xor
add
int3
mov
pop
sbb
mov
lods
and
in
cmpl
and
dec
lcall
sub
jmp
js
mov
insb
jge
stos
cmp
xchg
dec
in
dec
push
xchg
mov
jge
cmp
push
jbe
push
sarb
adc
adc
jge
pop
cltd
rclb
inc
movsb
mov
add
scas
inc
cmp
movsb
or
mov
xchg
cmp
push
je
fcomi
shrl
sub
shll
pop
adc
loop
cmp
sbb
and
imul
cmp
push
rclb
pop
jb
push
jbe
sti
mov
cmp
subb
shl
enter
cmp
dec
add
mov
ds
mov
sti
sarb
btr
and
ret
nop
mov
cmc
lea
xlat
mov
loop
or
fs
cwtl
jo
push
dec
in
push
aaa
out
in
cli
cmpb
inc
fcoml
add
mov
dec
mov
pop
fstpt
jbe
push
lods
shll
rolb
jnp
rcrl
aam
jnp
mov
jg
and
into
ss
xchg
push
lods
insb
imul
icebp
daa
adc
xchg
push
jno
add
adc
pop
add
dec
or
mov
cmp
pop
mov
idiv
mov
fists
lret
sub
push
or
daa
sahf
leave
pusha
xchg
sub
sbb
jge
adc
jle
aaa
repz
mov
mov
inc
into
inc
sti
dec
xchg
movsl
xchg
pop
push
fimuls
pop
loop
jo
or
sub
aaa
rclb
addr16
jp
adcl
add
xor
test
pop
adc
out
das
adcb
aaa
lcall
mov
xor
leave
sbb
xor
mov
iret
jns
xchg
dec
sub
push
or
jnp
sub
jmp
clc
pop
jno
fwait
mov
ljmp
iret
mov
test
adc
cs
ret
mov
xorl
inc
mov
dec
inc
enter
arpl
shrl
daa
sbb
jnp
nop
push
inc
inc
mov
cmp
jecxz
mov
in
push
rcrl
sub
int
icebp
fwait
adc
push
cmc
add
inc
mov
shrl
jno
data16
outsl
mov
sub
sub
aas
bound
jno
dec
lds
jns
test
daa
cmp
lret
mov
inc
adc
divl
push
fbstp
adc
int
ds
mov
mov
push
xchg
outsl
cmpsb
mov
fcmovnbe
movsb
inc
push
jo
lock
jbe
dec
in
testl
dec
sbb
adc
inc
xchg
fldenv
ror
into
adc
ret
andl
arpl
sbb
jmp
jg
or
aam
and
lcall
and
fwait
mov
loopne
mov
ret
xchg
pop
xchg
inc
daa
mov
mov
mov
xorl
int3
ret
push
inc
lret
push
dec
hlt
clc
clc
lock
jp
xchg
dec
popf
push
jbe
cmp
dec
cltd
rcll
sub
in
dec
bound
ds
mov
imulb
mov
loope
mov
pop
insl
in
jge
cmp
mov
cli
add
js
ret
pushf
cmp
cmp
test
sbb
ja
pop
sbb
adc
decb
data16
das
adc
arpl
test
sbb
xor
sub
mov
push
xchg
push
out
aad
mov
sbb
jne
adc
xchg
adc
insl
clc
push
cmp
nop
aam
sbb
subl
pop
sbb
xlat
or
push
adc
mov
inc
jge
push
fs
dec
sub
push
jmp
mov
push
or
sub
scas
rcr
push
mov
shll
add
fucomi
pop
cli
arpl
insl
fxch
cmp
inc
cmp
clc
loop
gs
jecxz
mov
shll
stos
dec
xchg
cli
mov
ss
stos
cmp
dec
and
jns
sbb
aad
ljmp
mov
lds
sbbl
outsb
mov
mov
scas
inc
repnz
mov
xor
dec
push
or
into
push
mov
xchg
xor
push
in
pop
enter
pop
pop
xchg
scas
or
aad
in
rolb
mov
int3
jo
insb
jp
adc
rcr
mov
pushf
ljmp
out
or
xor
lret
out
fidivs
inc
pusha
sub
sub
aaa
pop
popf
inc
xor
dec
sub
imull
leave
push
push
stc
fwait
adc
mov
data16
xchg
aaa
adcl
dec
sarb
mov
mov
xchg
lea
das
test
pusha
xor
or
xchg
mov
faddl
cli
inc
mov
adc
add
imul
xor
add
ljmp
adc
xor
in
arpl
scas
jne
and
xor
adc
mov
jno
or
xchg
fdivr
pop
in
lret
outsb
xchg
push
push
sub
in
dec
and
or
lods
mov
out
fs
fnstsw
pushl
sub
sbb
fisubrl
sbb
gs
add
or
sub
mov
loopne
add
lahf
dec
adc
pop
pop
aaa
fiaddl
loop
lret
cmp
add
mov
dec
mov
or
jmp
pop
pop
sub
and
mov
jo
push
jns
in
popa
xor
pop
pop
ss
imul
sub
fwait
test
mov
jl
fs
js
outsl
cmpsl
xchg
outsl
daa
in
in
je
mov
outsl
cmpl
pop
or
pop
push
fsub
xor
ss
repz
sub
loopne
das
adc
fstps
insb
xchg
xor
pop
in
pop
and
loopne
dec
adc
scas
lcall
pop
mov
and
pop
shr
jge
cmp
test
inc
push
fisttpl
pop
push
enter
add
and
mov
add
inc
ret
mulb
mov
inc
leave
add
aas
push
push
in
jle
mov
outsl
sub
sub
adc
test
scas
fucomip
push
in
lret
shlb
or
lds
push
fs
int
xor
test
into
pop
fistl
leave
out
and
xchg
pusha
jnp
jmp
loopne
pop
inc
adc
pushf
call
lods
rcll
cmpb
pop
jno
rorl
inc
adc
jno
pop
je
mov
xchg
dec
out
stc
cmpsb
xor
push
add
roll
sahf
or
sbb
stc
loope
iret
mov
jl
cmpsb
notl
add
mov
daa
ret
jecxz
test
popf
fisubl
data16
mov
xchg
dec
pop
lds
outsl
hlt
jl
xlat
push
cmp
out
loope
adc
inc
xchg
jne
add
repnz
aad
jg
xor
addr16
mov
ret
clc
dec
dec
dec
jecxz
pop
hlt
jle
sbb
add
aaa
and
into
dec
cmp
mov
push
pop
les
addr16
scas
sbb
mov
or
repnz
push
gs
out
stos
daa
arpl
aam
dec
lds
mov
mov
das
std
rcrl
int3
adc
mov
sahf
sbb
xor
fs
ljmp
mov
mov
sub
cmp
push
cmpl
dec
insl
or
lods
mov
out
xorb
jg
mov
aaa
sub
xor
lret
dec
nop
inc
jbe
out
pop
adc
into
push
mov
mov
mov
mov
stos
push
ljmp
fisttpll
ljmp
jecxz
loop
xor
out
adc
xor
or
inc
popa
jmp
imul
cwtl
pushf
jmp
in
push
mov
imull
mov
nop
scas
xor
add
xor
pop
neg
std
iret
sahf
in
xorb
aam
dec
lcall
daa
enter
or
pop
sbb
dec
mov
mulps
mov
lea
aad
push
push
push
jo
loope
and
cmc
mov
inc
pop
xchg
imul
es
adc
imull
fwait
and
push
mov
test
in
movsb
push
dec
add
sub
test
xchg
jmp
mov
out
xchg
xlat
push
sarl
mov
jne
ret
mov
pushf
mov
sub
lret
sbb
pop
fstp
dec
adc
push
in
inc
jbe
push
sbb
movsl
int
hlt
test
jnp
mov
jbe
inc
push
pop
stc
add
daa
lock
mov
pushf
fs
stc
or
jnp
mov
aaa
sub
cmp
jae
or
fimull
jo
sub
mov
jl
int3
loopne
repz
les
xor
mov
cltd
inc
lahf
cmpsl
dec
adc
push
push
js
lds
mov
pop
add
add
inc
xor
push
cmp
mov
ret
mov
cld
movsb
xor
ss
lcall
xor
push
aad
adc
pop
or
ja
adcb
es
ret
cmpsl
mov
in
addr16
lock
cmc
js
dec
inc
fisubs
gs
pop
dec
add
fcmove
jecxz
jp
sbb
and
pop
rorb
xchg
or
dec
nop
mov
sbb
jl
jg
inc
add
movsb
cmpb
jecxz
mov
inc
int
test
jns
cmp
je
mov
cmp
and
daa
inc
scas
fwait
or
add
pop
imul
ret
push
or
out
dec
adc
mov
cmp
gs
push
lahf
imul
xor
jns
xchg
mov
dec
dec
popf
dec
imul
iret
jle
xchg
mov
jo
sub
sbb
enter
or
mov
or
pop
jecxz
stos
xor
lds
fistpl
xchg
insb
iret
in
in
subb
je
jo
or
cmp
insl
hlt
je
pop
jae
daa
pop
gs
nopl
dec
cld
enter
inc
jns
pusha
dec
mov
int
push
scas
movsl
mov
hlt
rcrb
test
push
xor
addl
dec
pop
cli
and
cmpsl
shlb
mov
dec
add
mov
lcall
xlat
adcb
stc
sahf
inc
aad
into
loope
jb
push
or
insl
add
iret
dec
push
insl
xor
int3
loop
loop
add
std
mov
inc
fs
sti
adc
stos
repnz
xchg
inc
ret
data16
fwait
dec
push
cmp
iret
inc
xlat
or
inc
jno
xchg
inc
ss
fists
inc
or
sbb
pushw
stc
lahf
pop
imul
sbb
dec
push
in
leave
adc
ret
insb
jge
jl
pop
movsb
push
dec
mov
nop
jb
jns
push
push
cld
jl
jp
xchg
add
and
andb
test
xlat
jbe
sbb
cmpsl
cmp
out
dec
xor
int3
and
hlt
sahf
xchg
or
pop
and
dec
in
xor
inc
std
push
icebp
lock
popf
or
ja
rcll
and
ret
dec
jle
div
mov
sti
push
popa
fisubs
lahf
sbb
aad
sbb
mov
and
mov
fisttpll
call
out
imul
ret
loop
fildl
ljmp
aam
mov
push
rorl
and
push
push
std
and
imul
push
mov
loopne
shl
ret
stos
in
sahf
push
fisubrs
cltd
or
imul
sub
loope
mov
push
dec
inc
sarb
cmp
and
movsb
popf
cmc
mov
pop
add
adc
jbe
inc
push
jb
ja
mov
jl
pop
mov
rcrb
adc
add
or
jecxz
cwtl
test
aas
mov
adc
push
cli
sub
inc
sub
inc
enter
scas
call
jne
sbb
in
mov
cltd
test
cmpsl
mov
repnz
jl
push
mov
adc
aad
movsl
cmp
jae
sti
jne
add
sub
adc
xchg
lahf
xlat
jb
lahf
push
sbb
xorl
push
dec
push
mov
int
test
dec
xor
cmp
or
lret
cld
sarl
or
push
fdivl
rcl
aad
out
push
inc
cwtl
pushw
dec
add
fldl
paddusb
test
addr16
popa
dec
mov
outsl
fmul
sahf
test
lret
xchg
shrl
lret
aaa
aaa
insb
in
test
pop
pop
pop
mov
mov
out
lock
xchg
cmc
hlt
adc
sub
in
out
mov
pop
xor
mov
push
ficoms
mov
and
cmp
xchg
mov
cmpsb
adcl
add
rorb
mov
cwtl
lock
fisttpl
cltd
inc
popf
adc
nop
test
mov
sahf
iret
push
xor
add
push
js
inc
jmp
mov
in
add
push
pop
adc
imul
in
mov
insb
test
fmull
pop
adc
in
fimull
cmpsb
inc
inc
jle
jb
js
test
push
daa
jmp
xor
xlat
enter
mov
xchg
es
popl
in
mov
aad
call
test
sub
inc
imul
dec
dec
push
inc
jle
jle
mov
sbb
sbb
and
push
mov
inc
or
test
pop
inc
sbb
mov
in
stos
inc
inc
iret
sbb
aaa
insb
hlt
mov
add
addr16
mov
mov
jge
jp
xchg
ss
mov
movsb
lret
out
dec
xchg
push
insb
jns
jnp
inc
test
jb
sbb
and
stos
cmpsb
jl
aaa
pop
mov
ss
dec
add
push
pop
outsl
in
push
pushf
adc
enter
sar
xor
cmp
cmc
orb
xorl
xor
add
xchg
add
enter
out
lods
in
adc
push
mov
fimull
test
jmp
js
inc
jbe
nop
fwait
stos
data16
popa
enter
pop
ret
mov
lock
jl
inc
sahf
sub
aad
orl
lock
dec
add
repnz
ret
enter
popa
sbb
mov
call
jbe
mov
cwtl
xchg
out
or
movl
mov
xor
xchg
loope
mov
mov
sub
arpl
nop
out
gs
and
imul
daa
xchg
insb
push
fistpll
xor
dec
es
fnstsw
fsubs
xor
imul
mov
jae
aaa
dec
lahf
dec
repnz
lods
xchg
xchg
ficoms
adc
imul
or
out
cltd
or
xchg
cld
shl
jge
jne
sarb
icebp
or
push
pop
push
sub
cmpl
cmp
stc
call
dec
out
mov
call
mov
pop
testl
ret
loop
push
es
adc
push
stos
and
leave
mov
repnz
sbb
jl
push
mov
jg
and
lret
xor
add
js
xor
and
mov
repz
mov
mov
rolb
lods
or
push
adc
mov
adc
sub
cs
jb
xchg
sbb
and
sbb
icebp
mov
out
pop
aaa
xchg
or
fwait
and
test
pop
les
inc
lret
fcoml
cmp
and
mov
inc
mov
and
cmpsl
sbb
dec
and
es
push
xor
aas
out
push
pop
pop
pop
lret
add
mov
dec
fwait
xchg
invd
mov
sub
mov
pop
or
pop
and
xor
jne
data16
sbbb
sub
out
cmp
sbb
mov
fucomp
pushf
in
repnz
in
lcall
roll
lds
ljmp
cmp
iret
dec
stos
dec
adc
mov
jns
sbb
rorl
gs
adc
pop
leave
rcll
and
flds
xchg
jb
ret
pop
mov
xlat
int
outsl
imul
jecxz
fmull
ljmp
push
xchg
fs
sbb
call
mov
les
sub
loope
adc
outsl
outsb
sbb
xor
inc
dec
xor
dec
stos
push
cmc
lret
mov
movsb
jb
sub
hlt
les
test
pop
out
imul
cmp
test
lds
dec
push
hlt
movsl
push
cli
add
pop
sbb
test
outsb
or
stos
adcb
xchg
add
dec
fcoms
sbb
sarl
fwait
dec
shl
adcb
mov
jae
jge
jo
dec
sti
mov
in
adc
mov
sub
imul
idivb
sbb
pop
jne
mov
out
stos
inc
or
xchg
xchg
lods
rcrl
sub
xchg
push
lods
dec
outsl
out
ljmp
inc
jp
dec
out
in
push
push
xor
imul
in
push
jae
rclb
in
xchg
adc
aaa
sar
aad
aad
jno
push
pop
pop
int3
push
and
sbb
cltd
push
sub
out
cmp
mov
call
mov
cwtl
insl
pop
xor
mov
stos
mov
dec
stos
add
lds
pop
and
outsl
popf
push
jno
dec
negl
or
scas
jl
mov
mov
aaa
std
adc
test
jbe
mov
jp
push
popa
in
sub
adc
fwait
mov
insb
jnp
aad
push
in
lahf
loop
loopne
je
sub
aam
mov
int3
adc
push
subl
jbe
icebp
arpl
loope
loop
jg
jo
cs
in
jle
push
push
aas
imul
cmp
push
addb
fs
cmp
jle
fiaddl
lcall
ds
mov
xchg
sahf
cmp
je
popa
bound
test
bound
popw
jo
xchg
into
cmp
mov
in
scas
mov
scas
dec
stos
mov
pop
sti
mov
into
popa
add
push
lahf
outsl
cmp
lahf
mov
andb
add
test
mov
js
repz
dec
dec
xchg
xlat
and
lcall
scas
add
xor
in
push
fisubs
push
dec
shlb
push
add
sub
es
mov
pop
test
repnz
sbb
pop
outsb
sub
cwtl
out
cmpsb
inc
enter
ja
fwait
lret
push
test
pop
or
or
call
fildll
xor
xor
repnz
insl
loop
xchg
add
xlat
test
into
shll
aaa
dec
std
mov
in
aas
xchg
mov
xor
or
fwait
stos
pusha
cmp
xchg
push
into
pop
dec
and
out
shrb
popa
dec
divb
add
push
ffreep
xor
cmp
dec
inc
push
jge
or
add
pop
push
dec
inc
jnp
stos
cmp
push
dec
stc
xlat
cltd
cmpb
dec
popf
lret
jmp
idiv
insl
out
iret
inc
insl
push
dec
repnz
xchg
xlat
dec
sbb
test
mov
dec
xchg
lods
shll
adc
in
outsb
mov
jge
cs
sub
divl
es
enter
ret
inc
dec
inc
roll
mov
data16
mov
lods
cld
jns
inc
jae
cwtl
nop
push
jno
xchg
lds
insb
clc
pop
ss
movsb
push
js
add
xor
pop
imul
mov
fwait
mov
cmp
mov
xlat
mov
cld
mov
xchg
push
clc
movb
sbb
pushf
stos
into
pusha
sub
ljmp
mov
sub
in
mov
insl
std
stc
or
sub
outsb
fwait
enter
fidivrs
out
sahf
jnp
and
in
daa
mov
xchg
addr16
movsl
lahf
bound
rolb
pop
mov
xchg
or
mov
add
lods
dec
pop
adc
andl
sub
fcom
jae
inc
mov
mov
ret
shr
rolb
add
leave
pop
push
lret
jle
fsubrs
jbe
popa
and
pusha
mov
or
sub
mov
sub
das
add
fstpl
dec
pusha
cltd
mov
inc
sub
inc
cmp
xor
in
or
test
ret
and
jl
in
cmpsb
inc
mov
inc
jg
mov
outsb
pop
aam
cmp
mov
inc
mov
and
in
ja
cs
jo,pn
jl
mov
out
mov
pop
push
rorl
xor
testl
jb
cmpl
in
sbb
fdiv
sbb
fimull
xchg
sbb
adc
lock
xor
cmp
mov
incl
inc
addb
sub
jecxz
mov
je
mov
test
xchg
out
inc
stos
bnd
fists
in
ds
data16
arpl
adc
add
xor
pushf
popa
push
cmp
outsb
test
sbb
pop
adc
mov
cmp
pop
or
xbegin
pop
cmp
ljmp
stos
mov
sub
sarl
test
imul
cmp
sub
push
negl
mov
pop
jl
enter
or
enter
clc
jmp
roll
leave
xchg
stos
aad
nop
fs
adc
fsubl
popa
insb
add
xchg
mov
sbb
add
mov
or
repz
mov
inc
mov
pop
fists
lahf
cmp
pop
js
dec
mov
jb
and
pop
mov
adc
adc
scas
lock
addl
sub
jmp
lea
mov
lods
dec
cltd
test
hlt
ss
add
push
cmc
andb
jmp
insb
pop
nop
push
push
std
aaa
lea
sbb
insb
sub
negl
aad
push
pop
subl
pusha
js
cmp
test
sub
sbb
adc
jl
popa
in
in
push
jecxz
cmc
ja
cs
or
repnz
jge
dec
mov
add
data16
add
sub
add
push
dec
aad
ror
and
loop
dec
mov
pop
mov
cltd
jmp
push
mov
jns
mov
fisubl
fwait
lea
add
lahf
dec
shll
in
xchg
scas
add
add
push
pusha
lds
fisttps
dec
movhlps
or
pop
aas
orb
jno
inc
sub
cmp
out
aaa
test
out
pop
psllw
out
sbb
out
adc
adc
pop
inc
out
stc
cwtl
ret
mov
xlat
cs
mov
push
jae
xor
sbb
enter
pop
or
sub
xchg
ret
xlat
insb
inc
cmp
das
dec
aad
ds
jno
jl
enter
jmp
jp
lock
fldt
imul
and
dec
int
add
dec
popf
addr16
cmp
gs
mov
mov
cld
xor
dec
cmp
or
sbb
xchg
mov
fadds
shl
outsb
test
sbb
int3
inc
dec
cmpsl
jnp
adc
jecxz
fucomp
jmp
mov
hlt
divb
pusha
mov
es
fadds
pusha
pop
inc
sahf
or
mov
fidivrl
sbb
push
js
loop
subb
aam
cmp
psraw
imul
mov
xchg
call
test
icebp
xchg
cwtl
or
rcr
xchg
imul
jno
repnz
idiv
daa
mov
mov
sbb
mov
aas
imul
push
xchg
mov
jmp
cmp
jne
dec
and
mov
test
das
mov
movsb
jecxz
and
mov
mov
mov
cmp
in
lea
xor
or
inc
xchg
loop
fstpl
shlb
dec
sbb
pushf
inc
mov
fsubr
xlat
mov
sub
push
sbb
dec
add
jmp
lods
jl
aaa
imul
xchg
add
push
push
addr16
test
ja
ljmp
adc
notb
cmp
pop
mov
lods
xor
dec
sbb
dec
and
insb
add
push
out
and
push
inc
out
fucomip
icebp
push
cmpsb
lret
ss
pop
mov
nop
lea
int3
scas
mov
lret
ss
jl
mov
js
inc
js
repnz
or
jl
addr16
fldt
adc
insl
and
fstl
or
inc
in
adc
jl
xchg
jg
jmp
in
fildll
fisubl
mov
test
xchg
jl
or
fimuls
rcrl
js
repnz
aad
daa
pushl
cmc
push
fnstsw
fildl
popa
cmpb
xchg
movsb
sahf
jb
cmp
lock
sbb
sub
xchg
add
push
mov
cmp
inc
push
mov
mov
xor
pop
scas
fsts
xor
rcrb
scas
push
or
mov
movsb
dec
mov
movsb
xchg
lods
add
out
cmp
cmpl
bound
push
dec
jne
dec
dec
fistpl
push
lret
mov
test
movl
imul
xor
outsb
cs
jmp
inc
and
cmp
sbb
out
stos
jae
orb
xchg
pop
inc
mov
pop
and
icebp
testl
lahf
push
jge
push
out
push
insb
sbbl
sub
push
sub
rcrb
dec
jge
and
adc
xor
in
mov
mov
inc
dec
push
xchg
lea
imul
fimull
xor
sub
or
daa
subl
fiadds
xchg
jg
ror
loope
mov
or
adc
mov
repnz
pop
cmp
adc
adc
pop
ret
testb
idivl
sbb
dec
lcall
outsl
xchg
repz
ja
add
push
popa
inc
mov
adc
push
fcoms
push
add
daa
cli
and
pop
rcrl
ds
push
js
addr16
sub
mov
outsl
sarl
into
and
stos
sub
ja
mov
mov
in
jb
jae
and
pop
pop
pop
add
test
push
push
stc
sbb
mov
mov
sbb
cltd
ljmp
lcall
loope
add
imul
dec
cmp
xchg
jne
movsb
iret
in
mov
and
jle
xor
xor
jnp
fstpl
push
and
rorb
mov
mov
xchg
mov
inc
aas
pop
mov
pop
push
outsl
xchg
or
mov
adc
fisttpll
mov
sub
stos
sub
rcrl
out
fcompl
rcl
dec
rclb
pop
mov
bound
aaa
jbe
les
sbb
adc
test
cmpsl
sub
mov
push
jge
dec
aas
lret
xor
and
fwait
jnp
mov
aas
mov
lds
mov
and
cmp
dec
andb
jp
cltd
out
mov
loop
cmc
adc
mov
inc
in
int3
in
icebp
push
addr16
mov
inc
xchg
pop
mov
icebp
xcrypt-cfb
cmpsl
bound
sbb
mov
pop
or
push
jle
xchg
mov
or
mov
orb
in
adc
ret
push
mov
and
and
in
sub
add
mov
loope
unpcklps
cwtl
mov
lret
add
sbb
mov
dec
in
ret
mov
mov
push
push
addr16
xchg
push
mov
leave
inc
fldcw
arpl
mov
jnp
fs
add
aaa
pop
xchg
jbe
movsl
push
ds
je
daa
stos
add
cmp
and
mov
cmc
pop
jge
ret
lret
cltd
das
cmp
push
mov
or
jo
adc
popf
popl
and
test
popa
jb
inc
dec
push
and
pop
cli
das
out
xchg
cltd
inc
insb
lods
xor
pop
lret
xlat
das
xor
xchg
je
lods
mov
mov
add
dec
inc
push
std
push
mov
push
push
lods
ret
iret
shrb
test
mov
xor
adc
adc
es
mov
push
jno
cmp
bound
xor
jmp
add
fdivrl
cmc
mov
mov
sti
pop
rclb
or
cmp
int3
pop
push
int3
and
pop
inc
dec
insb
aam
cmp
inc
fld
stos
aam
pusha
cmp
outsb
js
dec
or
adc
jns
outsb
movsl
jo
mov
imul
inc
pop
aad
test
mov
xchg
lcall
clc
cltd
outsl
inc
scas
add
or
das
adc
jo
cmp
push
dec
dec
int
pop
mov
movsl
flds
adc
mov
lods
adc
sub
mov
outsb
lcall
loop
ja
bnd
sub
push
inc
adc
fistpll
fcomps
fstpl
mov
push
xor
test
push
push
stos
pop
mov
stos
jne
adc
cltd
cltd
fisttpll
mov
mov
repz
mov
jge
aad
in
cli
mov
mov
adc
mov
in
sub
fwait
sub
xchg
dec
mov
aaa
inc
popf
xchg
mov
or
add
int
insl
and
cmpsl
mov
int
sarl
sub
mov
test
cmp
ret
dec
in
mov
mov
notb
ret
pop
mov
sbb
add
push
jae
mov
jae
pop
sub
jp
mov
dec
bound
push
mov
inc
aas
call
lea
xor
andb
push
aaa
fistpll
out
stos
movsb
xchg
or
xor
sub
das
pusha
out
mov
test
mov
insb
fcmove
xor
inc
jg
cmp
fstl
xlat
dec
mov
mov
mov
push
push
xchg
mov
pusha
or
push
adcl
pop
aas
mov
jae
repz
add
mov
imul
cmp
or
mov
push
out
jge
rolb
dec
jne
repnz
inc
cmpsl
mov
mov
inc
sub
in
jb
in
es
fs
mov
cli
and
mov
inc
repz
jg
adc
push
lds
mov
xchg
mov
inc
cld
cmp
xchg
or
xchg
sbb
pushf
and
jno
pushf
loop
jno
or
ja
cmp
fists
adc
pop
pop
dec
push
loopne
and
aad
call
jmp
lret
push
clc
mov
stos
inc
mov
fs
sub
test
inc
ja
cmp
lret
push
lahf
mov
divl
repnz
rol
jmp
in
push
xor
jae
cmpsl
in
scas
fdivr
dec
pop
or
data16
mov
cli
cmp
lret
out
insl
and
adc
test
mov
popa
mov
pop
test
cli
je
dec
dec
pop
out
mov
fdivs
xlat
xchg
pop
mov
push
cmpb
insl
pop
ret
sbb
dec
stos
rorb
out
xor
nop
cmp
repz
add
jnp
sbb
add
cmc
push
dec
subl
dec
pop
cmp
enter
bnd
scas
cmp
sti
fstpt
mov
int
dec
nop
fildll
lcall
aam
gs
mov
lods
aas
aaa
ss
push
shlb
inc
xor
add
xchg
nop
jp
in
sub
fcmovu
xor
sbb
dec
scas
lret
cmpsl
cwtl
nop
add
sahf
or
pop
cmpsl
xchg
cmp
xor
stc
mov
jg
adc
test
imul
cmpsb
jae
add
push
test
roll
pop
pop
sar
push
sub
mov
cld
cmpsb
and
imul
cmpsb
pop
gs
push
jp
and
shl
paddsw
enter
pop
int3
iret
push
inc
or
pop
clc
popl
xchg
add
pop
dec
iret
loopne
xchg
in
and
xchg
push
push
test
cltd
pop
rcr
shll
outsl
push
repnz
les
pop
adc
dec
inc
mov
or
inc
repz
sbb
push
xor
jb
sub
cli
mov
decb
mov
pop
lds
or
jg
sub
mov
xchg
sub
mov
cld
lods
lahf
ss
imul
sub
push
insl
jno
shlb
iret
add
fsubl
int
push
or
pop
push
pop
roll
xchg
arpl
ja
das
insl
test
aas
cmp
mov
jle
lock
pop
xor
add
stc
and
push
fiadds
arpl
pop
sbb
ret
xor
gs
jge
scas
scas
or
in
cmp
mov
shll
jge
dec
out
test
loopne
jp
jnp
test
jo
lds
sbb
add
dec
jl
xchg
cmp
dec
pop
push
outsb
mov
xchg
mov
jnp
cmp
or
mov
test
es
fidivl
out
pushf
mov
jae
loop
jbe
mov
push
jbe
adc
aam
mov
dec
fidivl
subb
fstpl
and
retw
int
arpl
cmp
xchg
cmp
fldcw
jo
mov
adc
mov
jnp
pop
arpl
pop
mov
test
stos
cmp
psllw
sub
mov
scas
loopne
enter
lea
xor
les
adc
push
mov
hlt
or
adc
push
adc
test
mov
xchg
and
jp
push
jecxz
fldcw
cmp
inc
mov
loop
xchg
pop
enter
adc
inc
lods
jae
les
jl
jo
mov
mov
lock
pop
jge
push
mov
xchg
mov
push
je
dec
jbe
push
or
mov
ljmp
fiadds
mov
pop
xchg
clc
inc
arpl
mov
xor
add
movsl
lret
dec
test
xchg
add
xor
stos
jb
push
stos
mov
or
cmpsb
push
push
cmp
arpl
and
dec
add
adc
add
pop
sub
hlt
and
adc
sbb
mov
leave
push
lods
pushf
sbb
fisubl
call
lcall
and
or
dec
mov
or
add
ss
lea
je
lea
cmp
adc
mov
mov
ret
icebp
fstp
push
adcb
cmc
fisubs
inc
cs
inc
xchg
ss
add
mov
xchg
or
pop
ljmp
adc
sub
jns
mov
lods
imul
fmuls
and
test
in
outsl
or
enter
mov
jo
out
lret
adc
mov
xor
xchg
sbb
mov
jbe
push
mov
mov
pop
sub
mov
push
jge
ror
push
mov
mov
mov
mov
in
imul
push
out
mov
fildl
pop
push
sti
hlt
sarb
std
clc
xchg
test
insl
mov
fsubr
out
sbb
sbb
sbb
inc
push
lcall
repz
lret
push
es
and
mov
or
cmp
insb
and
jo
cmp
fidivl
push
scas
out
xchg
pop
mov
scas
ljmpw
std
push
xchg
pop
testl
icebp
loope
adc
repnz
sub
test
out
xorl
enter
add
adcb
loop
enter
sbb
dec
pop
mov
push
cwtl
xor
js
jnp
cltd
loope
jg
push
fwait
punpckhdq
or
les
xor
xor
gs
jp
inc
jne
imul
fdivrs
lods
aaa
xchg
test
rcrl
outsb
test
mov
dec
adc
jmp
icebp
ss
ljmp
mov
subl
in
mov
inc
mov
cmpsl
and
mov
pop
sbb
iret
add
xor
jg
shlb
lods
gs
dec
shlw
xor
cld
arpl
mov
out
test
lock
fildl
push
pop
sub
cld
insb
popf
mov
clc
pop
cld
popf
hlt
jns
mov
insl
mov
cmp
call
cs
sub
jp
or
icebp
out
or
into
pop
sbb
stc
xor
dec
sbb
push
push
lods
aad
sbb
lret
lds
fisubl
nop
lcall
mov
movsb
cmpsl
jle
add
adc
fisttps
add
mov
add
dec
and
xor
mov
jecxz
jle
les
sub
mov
arpl
pop
js
fucom
sti
scas
mov
mov
jmp
call
or
outsb
mov
mov
icebp
aaa
inc
sbb
daa
sub
shll
nop
jmp
mov
jno
inc
sbb
sarb
mov
pop
iret
xor
push
push
loopne
repz
xlat
rclb
loopne
out
cltd
outsl
jmp
add
fnstsw
addr16
dec
xchg
test
shrl
push
dec
mov
insb
and
dec
decb
cmp
addr16
mov
mov
ds
mov
add
sbb
cmpsl
shl
fwait
call
ficoms
stc
adc
je
pop
or
scas
arpl
sbb
pusha
scas
insl
es
sbb
aad
jmp
push
xchg
je
cmp
std
cmp
xor
sti
shrl
imul
sub
xchg
xchg
mov
sbb
loopne
pop
jl
mov
add
out
out
inc
daa
lret
testl
hlt
mov
hlt
adc
mov
pop
pushf
aaa
nop
std
stos
arpl
pop
ret
adc
sub
cmc
xchg
sub
pop
ja
adc
aad
mov
push
jne
xchg
mov
in
cmp
dec
pop
out
jnp
icebp
aad
jb
rcr
push
filds
cltd
mov
loopne
add
lcall
addr16
add
lret
subb
inc
pop
daa
mov
lahf
popf
mov
rcll
pop
andnps
nop
fs
inc
int
cwtl
lret
aam
adc
jne
sub
fiadds
mov
jecxz
pop
repz
pop
dec
fbstp
int3
loope
cmp
orb
and
int3
pop
push
mov
into
lock
cmc
ffreep
pop
testl
or
lea
insl
sub
mov
lret
and
mov
sbb
stos
adc
jb
add
adc
push
adc
sub
stos
sti
rcr
inc
lahf
push
mov
into
mov
icebp
repnz
enter
xlat
and
push
and
adc
jb
mov
push
jno
pop
mov
lret
jae
popa
shll
xor
jmp
push
std
sub
push
dec
cmp
or
into
bound
daa
push
cld
fisttpl
mov
push
inc
jnp
cmp
dec
xchg
ss
insl
adc
sbb
push
call
enter
lods
in
push
jecxz
fdiv
insb
xor
cmp
xor
xor
fldl
push
push
sub
repz
mov
mov
aaa
cmp
dec
mov
mov
mov
mov
dec
or
or
clc
cmp
in
and
and
push
adc
xor
xchg
dec
ret
add
mov
xchg
inc
jb
cmpsl
push
and
pop
sub
sbb
jns
adc
mov
xor
cmc
mov
test
mov
and
xchg
imul
int
ljmp
mov
cmp
fstpl
jle
sub
inc
mov
push
sub
fs
popa
scas
out
xchg
insl
and
cwtl
int
pushf
aam
cmc
mov
js
scas
stos
pushf
test
sbb
loope
and
dec
test
cmpb
out
lock
adc
dec
dec
in
testb
cwtl
fists
sahf
ja
insl
inc
dec
xlat
pop
lds
adc
icebp
repz
rcrl
xchg
lods
cltd
shl
pop
jbe
hlt
xchg
mov
test
scas
movsl
mov
push
push
mov
sub
out
push
arpl
aas
xlat
adc
leave
pushf
jo
inc
enter
idivb
movsb
test
jo
dec
xchg
cmp
cmpsl
jp
decl
hlt
fdivs
rolb
lock
hlt
andb
ljmp
outsl
es
mov
dec
ja
cmp
add
test
mov
outsb
movsb
inc
in
and
jg
pop
shll
or
sbb
mov
pop
inc
cmp
jb
push
cld
clc
int
mov
mov
mov
andb
mov
sbbb
fsubrp
sub
xchg
lock
imulb
ja
mov
ss
test
pop
in
ss
je
mov
je
sub
inc
in
jp
mov
enter
lcall
dec
sub
cwtl
xchg
cs
xor
sub
cmp
mov
mov
pop
lods
xchg
aam
out
in
outsl
addr16
pusha
imul
fwait
movsl
dec
int
mov
es
scas
mov
pop
mov
xchg
pop
push
out
sub
out
cld
jne
cmpb
test
sub
inc
arpl
les
mov
lret
pusha
scas
mov
ret
sub
mov
or
mov
daa
cmp
call
jle
icebp
push
xchg
mov
xchg
std
cmp
push
stos
into
andl
pop
aaa
repz
inc
out
xor
outsl
adc
cld
rclb
dec
and
dec
push
push
pop
xchg
leave
mov
pop
xor
outsb
mov
push
sbb
shll
daa
sub
mov
sbb
out
lods
jl
jp
lahf
out
imul
xor
pop
adc
jg
and
lods
fimull
pop
lret
xchg
cmp
fs
fildl
and
mov
cltd
cmp
or
and
cwtl
jne
and
popf
xchg
xchg
loop
aaa
sti
and
ss
mov
cmpsl
xor
out
and
xchg
pop
add
sbb
push
ljmp
cmp
enter
into
sub
cmp
rorb
mov
cmp
cmp
push
xor
mov
lcall
sbb
inc
cld
inc
pushf
xchg
shll
int3
fcoms
pop
jae
mov
lahf
xor
ds
pop
xchg
xlat
add
or
int3
pop
sbb
loopne
and
out
aas
inc
mov
in
dec
movsb
lret
outsb
push
cltd
imul
call
jecxz
push
sbb
sbb
daa
jp
mov
idivl
adc
inc
cmp
add
lret
xchg
inc
or
and
xchg
lock
and
das
pop
or
pop
push
xor
mov
jmp
lods
fsts
and
fldt
pop
and
mov
in
mov
jecxz
incl
cmc
aam
xor
push
in
mov
cli
outsl
jmp
dec
inc
movsl
mov
popf
jne
clc
aas
test
pop
or
inc
xchg
cmp
mov
inc
sbb
dec
add
pop
adc
enter
and
cld
hlt
ss
pop
dec
pusha
or
push
xchg
jge
inc
jns
les
mov
ss
stc
loopne
loope
xchg
xchg
lods
ss
xchg
dec
cli
in
repz
loope
add
sti
mov
bound
add
fs
push
mov
sbb
mov
repz
push
fcompl
sti
fsincos
jne
aaa
fcmovbe
les
adc
mov
jbe
enter
daa
push
je
lods
or
or
mov
or
fsub
push
js
and
lret
stc
mov
sub
jge
loope
sub
inc
clc
nop
std
xor
dec
daa
xchg
adc
jmp
loopne
es
in
mov
jge
or
or
mov
fcomip
stc
das
mov
cld
pop
jp
imul
inc
cwtl
fmull
dec
adc
movsb
xor
cld
and
enter
push
imul
adc
fwait
mov
pushl
jg
lcall
jne
jno
popf
sti
addr16
or
inc
add
cli
sub
pop
fstpt
cli
dec
inc
int3
cmp
push
push
or
sbbb
inc
xchg
inc
imul
mov
adc
cwtl
aam
bound
pand
push
cmpsl
mov
or
stmxcsr
aad
cwtl
cli
test
dec
sub
mov
pushf
outsb
inc
sbb
in
sahf
inc
inc
in
stos
mov
shrl
add
mov
jns
enter
add
fstl
test
jge
es
notb
cmc
xorl
push
inc
inc
adcl
out
adc
in
ds
rep
xchg
mov
pop
outsl
fadd
push
jne
cld
popf
cmp
xchg
cmp
sbb
inc
arpl
inc
clc
push
imul
iret
dec
mov
sti
out
sub
loopne
gs
jle
mov
js
mov
pop
clc
out
push
cmp
xchg
pop
clc
arpl
mov
adc
test
rcrb
cwtl
dec
in
popa
testb
xchg
imul
cs
mov
mov
bnd
mov
xchg
mov
sbb
testl
ja
inc
mov
cmp
cs
not
out
decl
ficoml
sbb
pop
pop
or
hlt
mov
outsl
dec
mov
pop
sarl
xor
xchg
out
sub
mov
or
jo
add
xor
iret
adc
into
cmp
sbb
dec
adc
mov
repz
aam
mov
lret
add
jge
jno
test
outsb
dec
hlt
mov
add
hlt
test
cltd
adc
ss
imul
jbe
pusha
fisubs
sub
pop
mov
out
sub
jg
cmp
push
jns
push
mov
pop
test
jecxz
or
ret
out
mov
sbb
mov
sub
and
add
fistpll
xchg
jb
or
lcall
es
into
pop
testb
rcll
and
push
loope
xor
in
test
inc
in
imul
aas
xor
out
xor
jb
movsl
add
xchg
adc
cwtl
and
ret
xchg
bound
mov
lds
lcall
popa
iret
fadd
test
mov
push
sub
adc
addl
nop
and
mov
push
daa
in
inc
ror
push
inc
arpl
inc
leave
divl
xchg
fidivl
mov
xchg
incl
enter
jns
inc
outsb
in
xchg
dec
sub
mov
imul
jle
dec
cmc
out
push
mov
and
fnstcw
sbb
scas
sbb
mov
add
pop
std
outsb
adc
dec
sbb
jmp
int
or
push
or
push
pop
lret
dec
divl
pop
jp
sub
add
nop
dec
sub
into
xchg
inc
lea
repz
loope
addr16
adcl
cmp
ret
mov
pop
fnstcw
arpl
pop
popf
dec
dec
jns
je
mov
fildll
mov
stc
mov
dec
xchg
add
jecxz
cld
aam
inc
test
dec
in
xor
jle
jae
outsl
adc
sbb
sbb
mov
test
sahf
push
pop
test
outsl
or
mov
mov
mov
into
pusha
repnz
addl
push
add
mov
cwtl
rol
popa
pusha
or
test
lret
jge
fistps
jle
add
mov
mov
ss
lret
out
jns,pt
sti
push
int3
popa
xchg
addr16
das
inc
cmc
or
xor
jmp
jg
push
and
pop
mov
je
aad
repz
mov
xor
stc
mov
stc
andb
dec
mov
or
cmp
inc
out
cwtl
cs
sti
push
in
xchg
sbb
cmp
add
fwait
icebp
pop
rcl
scas
and
loope
inc
inc
out
jo
outsb
int3
jp
sti
add
add
xchg
scas
pop
scas
jecxz
inc
je
aad
and
adc
rcl
je
aaa
gs
aam
lahf
mov
mov
push
pop
pop
sbb
add
ds
push
lods
pop
mov
xchg
cmp
loop
lods
mov
push
loopne
in
data16
nop
out
mov
sub
mov
pop
sub
jmp
pop
push
dec
fsubs
fdivs
dec
jae
subl
ds
xchg
sub
dec
in
dec
xchg
enter
mov
gs
test
fwait
out
mov
cmp
adc
sti
cmp
add
mov
mov
fwait
xchg
sbb
ja
lods
sbb
pusha
aaa
movsb
mov
stos
sub
inc
and
scas
or
inc
xor
repnz
sbb
push
jg
stos
mov
cmp
dec
jl
ds
aad
lcall
insb
mov
outsl
xchg
mov
in
popa
ljmp
dec
out
fs
pop
popf
mov
add
fs
pop
lds
iret
nop
or
pushf
dec
enter
test
adc
xchg
cmovbe
test
aam
mov
pop
aaa
cli
add
jg
sbb
fstpt
ret
iret
inc
xchg
adc
loop
int3
das
inc
rclb
stos
fs
cmp
mov
fisttpll
sbb
mov
fsts
insl
mov
push
adc
imul
jg
aad
adc
jns
add
int3
xorl
add
int
add
sbb
subl
push
push
cmc
movsb
pop
adc
push
xchg
sbb
cmp
js
sbb
ljmp
mov
in
cli
push
rclb
add
inc
dec
aas
inc
aam
xchg
and
xor
pop
mov
mov
int3
movsl
sub
jo
pop
popf
cmpsb
popf
and
add
xchg
loop
daa
lds
out
ljmp
push
add
sub
jmp
jecxz
fwait
popf
hlt
rcrl
fcomip
cmp
in
mov
das
nop
jecxz
or
push
xor
dec
pop
xchg
cmp
lds
and
sbb
into
push
jbe
mov
push
scas
clc
inc
std
cmp
adc
push
mov
scas
std
cmp
cmp
test
push
add
ret
ss
pop
dec
lret
sub
lahf
ds
and
cmp
add
pop
stc
push
stos
call
adc
push
sub
fwait
mov
ss
cmpsb
xchg
xchg
loope
hlt
xor
in
into
stos
mov
and
mov
clc
lods
data16
adc
cmc
cmp
push
ret
sub
inc
and
push
xor
xlat
repz
aaa
adc
push
lahf
add
mov
in
lret
jmp
mov
rorb
dec
in
mov
push
fstl
mov
inc
jecxz
pop
gs
jo
xchg
rolb
xchg
xchg
mov
push
fnsave
dec
add
ror
mov
enter
add
and
dec
stos
bound
push
xchg
jp
adc
add
sub
mov
xor
mov
inc
popa
jno
cmp
xchg
mov
aaa
or
negb
xchg
mov
mov
xchg
jbe
or
xchg
lahf
and
and
or
aas
js
data16
xchg
xor
or
push
jmp
and
xor
xor
out
in
pop
inc
pusha
sbb
int
jmp
leave
push
jecxz
inc
or
and
lcall
jnp
sbb
cmp
or
jne
xchg
cmp
mov
repz
std
cli
outsb
jl
cmp
dec
adc
add
lahf
scas
dec
mov
lcall
push
flds
pop
xlat
inc
inc
dec
setg
out
sbb
inc
xchg
jl
cmpsl
jmp
sub
lds
sbb
xorb
xchg
jne
xchg
adc
andl
xlat
cltd
stos
les
je
jl
mov
scas
test
out
jl
ret
xchg
movsl
mov
ret
and
movsl
push
cmp
mulb
add
test
sub
fstpt
addr16
or
push
jno
cmpb
jl
mov
mov
xor
push
ss
or
ljmp
lcall
mov
je
cmp
outsb
shll
leave
gs
pop
out
ret
push
ds
leave
test
movsb
add
ja
mov
dec
add
add
cmp
out
nop
sbb
mov
scas
mov
cmpb
loope
mov
scas
dec
test
cmpsb
xchg
popa
pop
scas
mov
and
arpl
pop
adc
nop
inc
cli
shl
loope
cmp
adc
adc
push
ja
iret
push
pushf
jmp
xchg
sub
hlt
jmp
dec
aad
xchg
xlat
xchg
faddl
mov
lret
mov
out
js
subl
pusha
jbe
sub
inc
xor
fdivrl
mov
or
xlat
shrl
rorb
sub
xchg
and
pop
jmp
stos
aas
mov
jge
push
fmul
and
scas
loopne
dec
xchg
adc
lods
ret
dec
push
test
dec
pop
inc
xor
ja
push
imul
inc
sbb
push
icebp
mov
into
in
jge
int3
jo
cmp
push
jle
mov
dec
rorb
mov
movsl
push
dec
add
aas
into
inc
inc
and
daa
pop
cli
arpl
mov
test
sti
jo
aas
popf
or
sbb
sub
pushf
push
lret
test
data16
pop
cmc
jo
inc
add
inc
loope
cmpsl
pop
mov
test
inc
jecxz
movsl
mov
sub
fsts
pop
mov
pop
xor
scas
in
pop
and
repz
lahf
data16
push
fsubl
sbb
and
lret
faddl
fists
daa
lds
stos
mov
lods
push
and
mov
adc
lods
fcmovb
mov
stos
iret
lds
cmpsl
movsl
lods
int3
les
shlb
xchg
cmpsl
mov
shll
mov
xor
xchg
dec
cld
xlat
lods
mov
push
cmc
xchg
test
call
addr16
mov
add
add
fisttpll
mov
dec
and
addr16
mov
xor
mov
test
sub
xchg
cmp
mov
out
clc
mov
xlat
jae
mov
addl
loop
lods
ja
pop
pop
push
jbe
dec
shrl
lock
cwtl
jnp
std
dec
sbb
sub
fdivrl
add
xor
jmp
dec
pop
push
push
scas
xchg
mov
int3
orb
push
lods
cmpb
icebp
loope
or
mov
sbb
xchg
rolb
xor
and
shll
cltd
imulb
sub
dec
mov
aas
mov
xchg
sub
push
push
xor
or
ficoms
cli
pop
pop
xor
push
out
subb
inc
int3
dec
mov
or
roll
jne
lods
stos
xchg
jle
test
or
or
pop
inc
call
aas
jnp
xchg
add
lcall
sbb
fistl
les
addr16
arpl
rolb
xor
outsb
cmp
lods
shr
push
push
mov
lea
and
cmp
loope
cmc
repz
lret
in
shll
jnp
cmp
sbb
or
inc
pop
lahf
mov
add
cmpsb
loopne
add
scas
loopne
stc
gs
mov
mov
gs
notl
hlt
fsubs
and
mov
xchg
in
data16
pop
xor
sbb
test
cmp
imul
je
mov
xchg
add
enter
dec
aam
daa
mov
lret
out
rol
and
pop
loop
mov
int3
mov
inc
add
outsb
jae
std
out
push
mov
and
mov
push
push
adc
lods
xchg
sbb
push
insl
adc
mov
jle
mov
shrb
sbb
pop
xlat
stos
xchg
sti
pop
or
and
mov
scas
ljmp
sbb
inc
mov
adc
nop
int
push
add
xchg
push
cmp
push
and
mov
loopne
in
cwtl
lcall
movsb
test
dec
or
ret
loop
cmpsb
xor
or
rclb
xchg
into
jecxz
dec
sarl
dec
pop
loope
es
lods
mov
mov
data16
cmpl
lahf
lea
ret
in
cmpb
jge
jmp
adc
arpl
sub
into
jnp
cmp
mov
xor
shlb
sarb
xchg
pop
stc
movsb
and
or
icebp
xchg
test
jo
xor
fwait
xchg
or
xchg
nop
sub
fiaddl
inc
scas
pop
ja
xchg
inc
and
mov
inc
or
inc
pop
sub
call
outsl
jns
jg
rol
xor
aas
pusha
daa
fucom
into
cwtl
pop
in
aaa
jmp
popf
jnp
pop
daa
fwait
ljmp
scas
movb
pop
push
dec
adc
bound
fs
mov
fimuls
mov
xchg
xchg
ds
cmpsb
iret
lods
mov
outsl
les
leave
ss
cmp
loop
cmpb
call
inc
int
fisubrs
cmp
lods
push
ja
cli
cmp
out
aad
pop
mov
arpl
cmp
mov
pop
pop
xchg
test
or
dec
xchg
mov
xchg
push
xor
out
leave
les
cmp
inc
mov
nop
adc
pop
cmc
jl
push
sub
insl
mov
shl
jl
jmp
movsb
mov
ja
in
outsb
xor
add
dec
shlb
xchg
ljmp
fwait
add
push
test
out
jo
imul
ds
add
sub
insb
pop
sub
stos
aaa
push
cwtl
push
and
add
aad
sbb
lretw
xor
stos
push
fs
sbb
es
or
iret
bound
mov
push
adc
xchg
sbb
ret
js
mov
dec
mov
mov
aam
cltd
mov
aas
sub
stos
adc
mov
roll
adc
imul
sub
sub
js
add
mov
movlps
add
outsl
mov
repz
add
sti
sub
in
cld
dec
cmp
push
mov
pushf
clc
push
or
aam
arpl
jmp
sti
push
lods
sub
ljmp
ror
jmp
mov
cwtl
add
shll
pop
add
dec
daa
add
jnp
inc
lds
pop
xor
testl
js
push
push
mov
outsl
mov
add
mov
addr16
push
jno
sbb
push
add
sub
push
aam
mov
pop
outsl
mov
mov
addb
or
lock
stc
xchg
and
or
lahf
mov
roll
cmp
add
fisubrl
sahf
jo
xlat
pop
sub
pop
mov
mov
sbb
pop
jbe
jns
mov
pop
adc
nop
in
scas
mov
fsubrs
add
sbb
lods
mov
jne
lret
xchg
les
rcrl
push
xchg
mov
push
xor
and
lds
imul
idivl
call
out
es
ss
in
jo
xor
add
fsubs
fcoml
or
mov
mov
xchg
dec
lods
mov
in
adc
xlat
mov
into
xor
arpl
mov
es
jp
and
popf
in
inc
sbb
cld
xchg
cmp
fsubrs
movsl
sub
push
xor
outsb
xchg
dec
sar
inc
lcall
fs
cmp
push
cs
jo
sahf
imul
mov
rclb
jg
dec
jae
sbb
sub
add
mov
roll
and
jne
pop
lods
sbb
mov
adc
dec
rcrl
push
mov
add
in
stos
dec
outsl
or
sbb
push
outsl
popf
adc
jb
mov
test
arpl
addr16
jp
or
cmp
in
push
data16
in
xchg
repz
adc
sub
test
aas
popa
hlt
addr16
add
jle
jae
jp
sub
cmc
xchg
and
dec
push
adc
jne
dec
int
pushf
cmpsl
inc
mul
jg
push
push
mov
testl
and
rolb
jmp
movsl
lods
add
ds
cmp
decl
arpl
add
or
or
sbb
xchg
insb
push
lds
bnd
inc
lock
pop
xor
inc
add
movsb
outsb
mov
push
sbb
rclb
mov
mov
orl
mov
stos
imul
or
add
dec
out
pushf
mov
add
inc
or
bound
dec
cmpsl
fmuls
or
les
fldl2t
mov
jg
ficomps
jmp
addb
and
lahf
push
or
call
ds
pop
loopne
xchg
add
jp
xchg
sub
shlb
or
in
xor
or
in
dec
movsl
xor
and
aaa
sbb
icebp
imul
stos
daa
sbb
pop
jbe
xor
dec
mov
dec
lcall
xchg
cmp
pushl
cmp
or
push
pushf
int
cmp
in
lret
in
faddl
scas
adc
shr
add
cmp
sub
xchg
cmp
movsb
or
inc
fisubs
mov
cwtl
add
shrb
mov
in
adc
push
pop
jmp
test
push
adcl
mov
dec
imul
jns
test
pusha
xorl
dec
das
fdivrs
dec
or
fsub
jno
das
push
mov
stos
cmp
cmpsl
cld
lret
pop
jno
bound
and
dec
test
lock
std
shrl
cmp
sub
or
inc
or
mov
mov
cmp
inc
mov
adc
and
pop
cmp
enter
pop
mov
xor
ret
js
cli
das
mov
hlt
sub
push
and
and
mov
cs
xor
push
sbb
jge
das
cmpsb
and
pop
dec
add
fsubrs
lret
xchg
jl
rcrb
add
cmp
push
negl
cmpsb
push
mov
add
adc
iret
jmp
movsb
pavgb
jo
mov
or
inc
sbb
mov
sub
push
push
addr16
in
fwait
ret
adc
movsl
sub
mov
mov
pop
sub
movsb
dec
arpl
loope
jmp
pop
lret
push
sti
push
fstps
inc
or
leave
sub
cwtl
mov
and
es
jae
inc
mov
imulb
mov
adc
push
sub
add
fdivrs
iret
cmp
mov
js
ja
sub
in
adc
shr
adc
adc
fldln2
and
cmp
shlb
and
or
xchg
mov
pusha
jo
xor
daa
and
fwait
dec
aad
mov
call
xchg
add
sub
xor
stos
je
fldl
scas
adc
xchg
in
std
add
mov
iret
push
sbbl
or
lret
inc
iret
fucomip
leave
inc
xchg
lea
scas
adc
test
jecxz
jg
jg
outsb
in
leave
jle
sub
je
mov
xchg
out
jle
adc
mov
leave
mov
aad
and
pop
rorb
mov
pop
and
repnz
test
sub
pop
mov
int
gs
and
popf
pop
popa
stos
popf
xchg
movsl
test
inc
aaa
xor
adc
jmp
inc
dec
xchg
js
cmp
jo
mov
inc
and
cwtl
inc
cmc
mov
jne
mov
nop
xchg
dec
and
lock
push
add
aas
mov
cmp
lahf
rcl
xchg
mov
enter
and
es
push
and
pop
jecxz
mov
into
in
cmpsb
subl
dec
xor
cwtl
and
xor
movsb
fld1
rcrb
mov
mov
dec
push
cmp
inc
jbe
mov
int
add
xchg
mov
pop
dec
mov
adc
imul
imul
sub
int
pop
test
pop
mov
ja
cltd
in
std
pop
mov
loop
sti
jne
or
gs
in
cs
add
jb
mov
dec
mov
cli
mov
add
dec
sbb
sub
mov
mov
fdivp
jle
or
sub
sbb
js
pop
sbbl
lret
out
out
fdivr
shlb
sub
popf
popa
cmpsl
jle
lods
mov
mov
fldt
lret
xchg
sub
das
sub
stc
inc
jns
test
das
test
adc
repnz
and
movsl
test
sub
push
mov
cmp
mov
push
jns
cmp
sub
pop
push
mov
sbb
mov
js,pt
sbb
mov
out
mov
jle
xor
rolb
imul
repnz
add
lods
add
out
pushf
inc
es
adc
jge
xchg
hlt
scas
add
into
mov
lret
pop
lahf
lret
sub
pop
fstps
inc
lret
orb
nop
mov
push
dec
push
xchg
in
or
daa
cmp
mov
fmuls
and
sub
ds
sahf
cmp
adc
nop
or
fmuls
sub
fcmovnbe
shlb
notb
dec
es
insl
shll
mov
popf
andl
cmp
sub
shl
push
mov
hlt
jne
jecxz
pop
pop
mov
sub
scas
cmpsb
jo
mov
scas
adc
pushf
test
call
stos
mov
cmc
xchg
mov
mov
data16
repz
mov
push
stos
jmp
inc
push
sub
hlt
mov
mov
adc
es
loop
out
in
jno
mov
jbe
or
inc
xor
clc
jl
add
pushf
clc
ljmp
cmp
inc
pop
fisttpl
xor
pop
icebp
add
fisubrs
push
std
movsb
scas
and
ret
mov
aaa
pop
mov
inc
adc
rcrb
mov
fsubp
sbb
aas
xor
lcall
mov
mov
and
shrl
daa
les
outsl
bound
dec
mov
cmp
repz
lods
push
cmpsb
jg
sarl
sbb
movsb
movsl
push
icebp
shll
int3
jne
cs
in
out
sbb
push
mov
xor
gs
fpatan
pop
add
ficoms
hlt
xor
popa
fimuls
mov
fucomip
mov
xchg
cmpsl
in
adc
cmpsl
pop
xchg
mov
lods
xchg
push
mov
pop
or
add
pusha
je
mov
push
nop
add
xor
in
xchg
icebp
scas
sbb
fadd
dec
rcr
outsl
xor
xlat
popa
mov
cmpsl
push
push
mov
pop
pop
lcall
or
lahf
adc
mov
jne
or
cmp
out
add
push
stos
inc
adc
xchg
jle
insl
das
xchg
pop
jg
aad
push
jbe
sbb
push
inc
test
mov
add
xor
push
jl
loope
addr16
pop
je
xchg
ret
pop
sbb
mov
or
and
mov
or
push
fbld
mov
mov
js
repz
addb
push
js
test
pop
adc
push
cld
mov
or
cmp
pop
push
add
aam
pop
stos
push
dec
cmp
hlt
cmp
mov
sbb
inc
and
sub
nop
fwait
pop
loop
adc
add
cltd
jmp
pop
hlt
xor
cmp
dec
mov
out
scas
jbe
movsl
jo
jno
mov
out
ljmp
enter
or
lahf
jo
in
cmp
adc
add
shll
aam
gs
push
dec
cmpsl
inc
or
mov
xchg
roll
mov
fnstenv
add
xchg
negl
subb
cmc
std
pop
ret
adc
xchg
and
shll
mov
fistps
lahf
outsb
faddp
outsl
mov
xchg
int
lahf
mov
xchg
jns
pop
rolb
mov
fldt
lret
xchg
inc
jae
dec
push
push
pop
mov
int3
enter
fimuls
mov
aam
andl
xchg
mov
pop
mov
out
xlat
cmp
add
add
jb
out
sbb
inc
or
and
xchg
call
cwtl
mov
xlat
sbb
jne
and
jb
add
lds
sbb
cwtl
in
xchg
aaa
sub
jnp
xchg
xchg
sbb
xor
out
xchg
push
or
pusha
dec
mov
mov
sbb
push
in
add
aam
cmp
std
push
pop
stos
sub
imul
andb
insl
pop
jmp
sbb
mov
jbe
pop
or
fcoml
jne
fstpl
outsl
mov
test
dec
or
lret
push
out
leave
fmuls
pop
std
mov
add
adc
out
clc
mov
lahf
stos
fwait
in
mov
add
pop
fcompl
xchg
or
cmp
popf
dec
shll
xor
enter
into
pop
ss
cld
mov
insl
faddl
push
test
cmpl
lods
sti
push
mov
enter
push
sbb
out
dec
sbbb
jp
cmp
add
imul
pmullw
sub
fucomi
dec
xchg
andb
in
sub
mov
and
fs
or
ret
adc
inc
or
xor
dec
sub
xchg
stc
clc
fiadds
sub
jo
dec
test
adc
roll
pop
inc
dec
mov
push
cli
jmp
jmp
xchg
mov
or
inc
fisubrs
fwait
cmp
and
js
rclb
dec
and
inc
cli
mov
lock
mov
mov
sbb
addr16
out
inc
lret
inc
or
fisttpll
lea
ret
push
out
lret
clc
nop
mov
adc
out
ret
pop
xchg
and
dec
gs
xor
arpl
mulb
adc
dec
pop
out
push
or
cmpsl
adc
outsl
lret
fwait
mov
adc
xorb
dec
mov
xor
pop
jp
loopne
mov
cmp
cmp
subb
daa
es
shll
dec
fistps
sti
fnstsw
sahf
mov
cmp
adc
jnp
sub
sub
fidivrl
jmp
leave
clc
jns
dec
pushf
imul
mov
mov
cmpsb
jmp
inc
jo
pop
in
je
adc
sbb
sub
or
pop
mov
lcall
adc
cmp
fsubrs
xchg
xchg
sbb
cmp
cs
jns
jge
adc
in
lahf
gs
sub
cmp
pop
fdivrl
or
dec
cs
imul
jmp
gs
push
mov
insl
lret
insl
ja
dec
sbb
lcall
sbb
insl
mov
arpl
lock
or
outsb
aad
cmpl
push
or
mov
xor
mov
je
or
add
lods
fwait
rcrb
dec
stc
int3
movsb
mov
and
lret
in
or
cli
aas
xchg
cwtl
or
or
in
sbb
testl
mov
data16
int
inc
stos
mov
mov
gs
mov
fnstenv
jp
mov
loope
mov
sti
push
test
imul
dec
ret
pop
mov
das
ds
sbb
xor
arpl
or
fidivrl
movsb
xchg
outsl
cmp
inc
sti
and
mov
out
jmp
sbb
sbbb
jo
sbb
int3
loopne
cltd
adc
pop
adc
ljmp
out
jle
dec
inc
cld
push
stos
add
add
push
loop
fcmove
test
or
lods
inc
sub
fst
or
std
sub
enter
or
adc
orb
es
sbb
or
pushf
fildl
mov
aas
shll
pop
dec
leave
ret
mov
mov
mov
cld
inc
shlb
out
jae
mov
arpl
fidivrs
push
popf
xor
xchg
cmc
es
cmp
xor
cmpsb
mov
adc
pop
cltd
mov
incb
mov
inc
bnd
xchg
fildl
xchg
mov
sbb
sbb
mov
pop
nop
push
into
inc
shlb
inc
inc
push
dec
addr16
or
or
arpl
adcb
imul
lock
imul
sub
xor
aas
jbe
push
pop
xchg
xchg
sub
push
dec
mov
es
lods
cs
jmp
nop
inc
int
mov
call
lds
test
adc
xor
lock
stos
aam
jge
stc
je
xor
mov
mov
jg
mov
push
loopne
cmp
pop
push
jle
stos
imul
fcomps
enter
aad
shlb
push
xchg
jg
jne
lret
and
push
pop
rorb
mov
movsb
push
repz
or
push
pop
mov
dec
insl
xchg
movsl
testl
xchg
iret
dec
dec
sti
rclb
mov
add
mov
fldz
adc
cmc
hlt
push
cmp
jne
jae
and
mov
adc
jae
mov
call
pop
int3
pop
xor
xchg
cld
jb
icebp
bswap
mov
mov
inc
in
mov
jb
cmp
sub
sub
nop
pop
dec
mov
push
lea
shl
in
jne
sub
inc
xor
cmp
push
es
sahf
sub
outsl
xchg
ljmp
pop
inc
lahf
test
scas
fidivs
adc
stos
fwait
or
jns
ret
clc
out
pop
inc
test
pop
sar
sub
xchg
sbb
and
daa
mov
mov
pushf
aas
jns
insl
mov
adc
sahf
repnz
roll
adc
xor
fists
jb
jno
mov
inc
lea
mov
adc
les
loop
pop
repnz
movsl
js
jp
out
push
sub
inc
repnz
mov
ret
mov
jne
inc
movl
pop
inc
sub
in
rcll
cmpsb
push
ss
mov
insb
mov
lret
sub
adc
push
mov
xor
jge
inc
test
pop
fadds
mov
aam
push
int
inc
push
mov
add
mov
inc
sub
shll
dec
movsl
adc
out
pop
mov
js
ja
inc
mov
andb
fcmovnu
lds
aam
out
mov
inc
stos
sti
jmp
ja
or
add
pop
jmp
rcr
mov
add
or
mov
cmpsb
imul
repz
lahf
cltd
movsl
adc
push
cld
and
gs
dec
sub
or
or
shrl
cmp
mov
jnp
lock
das
fwait
sbb
jle
stc
adc
push
ds
jns
sbb
stos
xlat
dec
idiv
insl
and
mov
jne
dec
out
add
add
mov
sub
adc
or
ret
push
dec
rorl
push
xchg
into
lcall
and
shl
mov
cmpb
add
xor
push
ljmp
mov
out
xchg
sbb
push
mov
pushf
adc
in
jae
insb
imul
xor
js
adcl
out
add
jae
in
lea
fs
jg
push
mov
cmp
dec
pop
ds
lock
das
add
cltd
movsb
outsl
push
xchg
pop
daa
adc
ret
scas
cmp
cmc
lods
add
movsl
push
xchg
jmp
or
mov
pop
rcrb
jns
and
rcl
and
adc
jae
jns
cmp
xlat
test
notl
cld
leave
add
mov
dec
adc
sub
stos
mov
insl
mov
iret
and
cmp
or
push
sbb
mov
outsl
lods
mov
rolb
rorb
aaa
out
fcomps
shlb
int3
or
movl
lds
sbb
sub
inc
jmp
xchg
sub
mov
movb
lahf
mov
out
fdivp
sbb
lcall
cmp
lods
cmpsb
in
sbb
insl
and
cwtl
aaa
dec
mov
call
sub
nop
cld
mov
sub
lcall
or
inc
jecxz,pn
cs
sub
scas
mov
lret
add
xlat
xchg
movsl
add
push
mov
ja
roll
fcomip
je
sbb
out
aam
andb
call
pop
pop
adc
lods
das
add
mov
jne
out
out
aad
mov
popa
inc
outsb
or
lods
notb
ljmp
or
inc
inc
pop
mov
add
fldcw
inc
xlat
xchg
sbb
or
sbb
dec
or
shr
scas
mov
fwait
lock
push
push
ds
cwtl
popf
xchg
pushf
stc
bound
aaa
fsubrp
fdivrl
loope
lret
clc
cmp
subl
jp
loope
cmpsl
aas
xchg
mov
cltd
push
jno
push
movsb
cmp
push
jne
jmp
imul
xchg
mov
gs
jae
jbe
push
cmp
push
dec
inc
xchg
mov
push
adc
stc
pop
notb
mov
test
pop
mov
jg
add
jno
ja
mov
mov
push
es
loop
je
ss
pushl
xchg
mov
mov
sub
je
mov
mov
push
mov
popf
rol
addr16
mov
out
mov
test
xchg
push
mov
push
addl
or
aad
lret
test
mov
push
push
sqrtps
sub
cmp
adc
out
sub
dec
repnz
or
jns
scas
lock
cmp
jae
or
shl
sbb
ja
mov
inc
cld
push
fs
jle
dec
mov
or
mov
sbb
jns
repnz
loop
ret
insb
fbld
test
cmpl
pop
fs
cltd
pop
xchg
imul
or
lcall
bound
mov
imul
cmp
or
xchg
jp
sbb
mov
das
daa
sbb
js
dec
and
jg
test
mov
ret
xchg
fldt
cwtl
das
aam
cwtl
negl
jo
add
xchg
xchg
out
xlat
push
xlat
sub
adc
mov
push
push
mov
loope
xlat
xor
hlt
adc
add
call
call
shl
jbe
pop
sbb
adc
dec
dec
imul
and
xor
jo
xor
inc
push
sub
mov
sbb
xchg
inc
add
mov
stc
ficomps
adc
sub
or
sub
mov
lock
clc
int
arpl
xor
sbb
leave
mov
jp
aaa
mov
test
add
testl
sub
out
subb
dec
sbb
das
popa
push
mov
mov
add
mov
jnp
adc
stos
mov
sub
loop
mov
xchg
xchg
sbbb
iret
adc
mov
xchg
pop
jbe
and
dec
xchg
and
fdivrl
inc
jmp
mov
jg
jnp
clc
cmp
ljmp
cli
xchg
xchg
and
fldcw
mov
outsb
jns
sbb
imul
aad
rcrl
fdivrl
out
std
mov
sbb
xchg
lods
pop
ret
pop
scas
test
jnp,pt
stos
jmp
and
jo
mov
scas
mov
or
lods
js
cli
jnp
popf
ljmp
test
mov
xchg
sti
sub
test
jnp
fs
sub
fistl
jecxz
cld
imul
fidivrl
call
aad
inc
call
or
pop
mov
sub
push
mov
push
nop
cltd
push
add
sub
inc
fwait
push
cwtl
pop
mov
cltd
lret
jns
mov
pop
in
outsb
pushf
jbe
cmp
dec
adc
lea
out
push
repnz
jo
add
fcompl
ja
loop
xchg
mov
aad
and
xor
lret
out
push
mov
lods
or
cwtl
cmpsb
in
xor
adc
lfs
imul
mov
push
les
scas
mov
insb
adc
daa
rclb
add
std
sbb
jl
pop
movb
inc
enter
add
adc
in
sub
loope
push
in
push
mov
xor
push
jno
fimull
leave
ret
or
mov
push
adc
int
fistl
or
inc
or
lahf
fldt
jg
xchg
sbb
lret
mov
mov
ljmp
fistl
repz
cmc
sbb
mov
lcall
mov
or
and
xor
lods
mov
mov
mov
dec
xchg
jmp
cmp
movsb
adc
mov
rcll
out
cmp
outsb
mov
add
push
test
and
add
sub
gs
jno
stos
jo
jns
movsb
daa
jne
rolb
inc
or
or
fisttpl
clc
inc
jg
adc
imul
sbb
test
clc
aas
jbe
aaa
add
sarb
es
mov
ljmp
ljmp
mov
popa
sub
adcb
mov
jno
lcall
xchg
dec
sti
cmp
insb
push
dec
stos
pop
lcall
int3
jg
jecxz
pop
into
mov
pop
xor
push
sbb
sub
test
pusha
repz
les
bsf
fildl
sbb
std
rorl
mov
sbb
in
lea
push
push
or
mov
jb
mov
add
mov
aad
ljmp
dec
push
jp
pop
fnstenv
mov
mov
dec
add
xchg
icebp
inc
sbb
add
sub
pop
mov
inc
call
push
push
jl
stos
and
xor
inc
rcrl
movsb
fcomp
std
sub
push
push
mov
adc
test
xor
roll
sbb
insb
in
das
aas
push
in
jns
or
or
lods
mov
jo
hlt
daa
test
mov
ja
fcmovnu
popf
loop,pn
call
cli
daa
bound
mov
aaa
lahf
sbb
dec
dec
mov
sbb
pop
push
mov
imul
and
cltd
in
xor
pop
inc
adc
insl
sti
jecxz
mov
push
xor
fdivs
inc
mov
inc
or
int
xor
rcll
int3
dec
gs
pop
jp
jl
cmp
lock
dec
dec
out
movsbl
cmp
lods
dec
fdivl
mov
ja
lret
loopne
into
pop
clc
sbb
pop
dec
iret
mov
xchg
or
dec
mov
ret
jne
cltd
cmc
pusha
or
jb
xor
inc
out
xchg
fistl
and
insl
aaa
xchg
js
dec
sbb
cmp
push
xchg
hlt
out
aas
shll
jb
push
jae
dec
add
cwtl
stos
xlat
inc
in
cwtl
xor
mov
mov
clc
sbb
int3
shll
mov
or
jns
mov
xchg
ror
and
dec
in
in
sbb
mov
nopl
fistps
xor
push
push
ret
outsl
push
cmpsl
jnp
push
rcrb
mov
cmc
pop
mov
lea
dec
xlat
sti
nop
ret
inc
jbe
inc
or
arpl
push
pop
xchg
mov
es
pusha
not
or
mov
push
xor
std
cmpsl
inc
ljmp
stos
loopne
fmuls
stos
xlat
inc
push
bound
aaa
les
mov
lock
jno
jb
sahf
add
xor
xchg
subb
daa
aad
push
jmp
inc
inc
sbb
sub
lock
and
jl
icebp
jl
inc
sbb
test
pop
mov
push
mov
outsl
jbe
mov
jno
inc
jbe
ja,pn
push
js
mov
daa
mov
cli
xchg
std
jnp
sbb
lahf
stc
push
sbb
sbb
cmp
pop
add
sbb
dec
pop
fbld
cmp
mov
rorb
mov
sbb
addr16
test
xor
xor
cmp
push
in
jb
cmp
imul
mov
and
pushf
enter
and
xchg
sub
fildll
insb
push
xchg
mov
adc
fmull
rcl
mov
push
jmp
imul
mov
push
sbb
inc
mov
and
stos
aam
sub
sbb
pop
xor
out
or
xor
mov
sbb
xchg
push
lea
es
and
iret
enter
movsl
inc
icebp
and
jae
insb
mov
jb
cmp
shll
inc
sub
or
push
pushf
push
jp
stos
sub
movsb
in
inc
test
je
mov
jle
cmp
lret
movsl
jl
inc
shrb
sbb
popf
test
push
fs
fistpll
in
test
shrl
mov
mov
or
lahf
loope
jecxz
xchg
test
push
inc
or
mov
mov
leave
sbb
jnp
les
lahf
orl
jnp
das
inc
jnp
push
sahf
mov
dec
pop
leave
or
fistpl
cli
sbb
or
test
xor
lret
push
xchg
inc
gs
int3
xor
aad
mov
ret
pop
std
enter
in
outsl
or
popf
insl
rolb
int
and
out
adc
lds
push
fiadds
inc
repz
outsl
adc
mov
mov
scas
and
mov
mov
push
push
push
dec
imul
adc
fcomip
pop
xchg
outsb
cmp
clc
push
xchg
frstor
pop
movsb
pop
mov
in
cltd
in
shr
cmpsl
stos
xchg
sub
loopne
fnstenv
addr16
cmp
sub
and
sti
inc
or
cltd
and
cmp
loop
push
ds
jo
adc
std
cwtl
push
shrb
test
pusha
mov
cmp
bound
addr16
mov
in
out
sar
push
jne
xchg
sbb
and
mov
cmp
cmp
scas
icebp
add
inc
ret
mov
push
jo
sar
dec
fisubs
xor
es
fsubrl
pop
stc
lret
and
mov
dec
mov
lds
or
xchg
sti
orl
je
add
jecxz
push
addr16
lcall
mov
int3
lea
mov
lds
loop
push
pop
push
push
imul
in
or
leave
iret
add
ffree
xorb
and
mov
pop
dec
pop
pop
scas
repnz
jns
mov
arpl
ficoml
add
cmp
repz
cltd
push
mov
add
xor
sbb
and
ficompl
loop
or
mov
pop
or
dec
or
popf
cmpsb
mov
push
cld
jbe
outsl
rolb
push
fsubrp
sahf
or
xor
ljmp
mov
aam
xchg
mov
mov
jno
xor
fwait
scas
and
push
mov
in
sub
push
ja
xchg
cmp
xchg
push
mov
adc
xor
xchg
lcall
cmp
push
in
leave
test
jmp
mov
fmuls
imul
insb
gs
in
push
dec
shll
or
test
lahf
mov
pop
mov
jge
jecxz
cmp
or
pop
jns
pop
pop
push
sti
sub
test
call
sbb
outsb
mov
mov
ret
and
clc
add
adc
xchg
js
leave
sub
mov
test
loope
outsl
rol
mov
jle
cmp
lods
fwait
add
js
xchg
lds
daa
popf
ljmp
inc
and
sbb
pop
popa
cltd
enter
dec
push
lret
dec
cmp
sbb
sub
fs
xchg
sbb
out
jmp
test
imul
das
mov
or
nop
dec
or
movsl
fsts
orl
cmp
test
stos
dec
cltd
and
inc
push
sub
daa
push
or
push
xor
mov
mov
add
in
dec
xor
push
mov
test
adc
pop
cmp
fs
sbb
push
fnstsw
vmulss
jge
push
gs
stos
adc
pop
xor
push
scas
xor
xor
or
mov
sub
or
out
ret
out
sub
mov
xor
ret
in
test
cmp
movsb
ds
add
inc
lock
and
cmp
adc
ret
xor
and
dec
push
lods
jo
and
push
icebp
and
in
xor
inc
cmp
inc
adc
fwait
gs
enter
adc
pop
popa
clc
xchg
push
cwtl
repnz
imul
lahf
jle
lret
int3
push
imul
outsb
pop
outsl
or
ja
sub
sarl
cs
pop
xchg
dec
int3
xor
pushf
mov
add
inc
negb
mov
sub
inc
xchg
sub
xchg
into
mov
mov
pop
cmpsb
sbb
pusha
ss
push
loopne
cmc
jecxz
push
insb
test
adcb
fiaddl
imul
add
ret
sbb
sub
sub
mov
pusha
cmp
dec
ret
in
repnz
mov
push
sub
arpl
decb
loop
push
sub
jle
cmp
mov
cmp
xchg
gs
subb
js
mov
mull
mov
scas
out
ror
sbb
fdivrl
test
out
ret
repz
enter
sub
or
or
sub
in
in
movsl
hlt
js
dec
shll
mov
pop
push
sub
pusha
call
std
sbb
int
mov
dec
mov
xlat
int3
test
pop
mov
scas
call
movsb
lea
insl
aas
push
aad
mov
cli
mov
scas
and
stc
inc
push
dec
jp
cmp
xchg
out
pop
pusha
add
das
mov
iret
mov
xor
push
fistl
xchg
ret
inc
int
push
inc
and
in
ret
and
xor
cld
dec
fs
add
or
mov
bound
inc
and
addr16
popa
adc
cmc
mov
sbb
insb
xor
sbb
sbbl
sub
iret
inc
xor
pop
adc
or
add
test
shrd
sahf
sub
test
cmp
sbb
cltd
in
inc
push
paddsw
in
test
addl
jae
dec
and
jbe
cwtl
mov
push
push
ret
les
dec
xor
mov
or
rcrb
push
movsl
or
cltd
sahf
xchg
inc
mov
and
jbe
lods
out
dec
lea
jns
mov
filds
movsl
mov
loop
outsb
add
aas
inc
sbb
es
lret
or
test
out
dec
xchg
cmp
call
sbb
outsb
push
rcrl
pop
pop
outsl
jmp
roll
mulb
push
retw
cmp
inc
sbb
shrl
mov
cwtl
lods
mov
fisttps
jecxz
sbb
ss
pop
sbb
sbb
call
aas
cmpsb
pop
xor
out
sbb
scas
movl
and
dec
int
jmp
xchg
mov
cmpl
mov
cmp
fmuls
fsubr
inc
xchg
outsw
cmp
rcrb
dec
push
mov
cmp
mov
inc
daa
bound
jno
mov
pop
shl
dec
jl
es
stos
into
cli
cltd
inc
pushf
insb
or
xchg
fs
test
mov
sub
out
into
lahf
test
bound
scas
sbb
stos
jns
in
lds
mov
sti
adc
cmp
imul
and
xor
add
stos
pop
rorl
jno
stc
and
xchg
rcrb
xchg
idivl
or
mov
in
cmp
hlt
cmp
and
inc
in
fstpt
movsl
fiaddl
push
xchg
jl
lahf
dec
xor
js
and
xchg
dec
xchg
lret
push
or
jo
scas
xchg
ljmp
into
xchg
mov
es
xorb
mov
mov
mov
cmp
xlat
add
sub
iret
add
filds
mov
insl
call
push
push
add
dec
cltd
pop
jmp
cs
add
push
aam
inc
jecxz
jo
mov
mov
ret
aaa
out
cmp
cmpsb
aas
xor
in
push
out
loop
inc
inc
pop
mov
push
popa
dec
jne
cltd
push
cwtl
and
mov
inc
add
push
pop
inc
ds
rcr
or
fistps
jnp
and
adc
test
test
sbb
movsl
cli
lcall
lahf
addl
sub
insl
out
out
mov
in
dec
dec
sarl
pop
inc
jb
sub
out
std
pop
les
popa
pop
xchg
xchg
jb
cmpsl
inc
pop
pusha
sbb
adc
add
xchg
in
xorl
dec
cmpsl
cmp
pop
xor
notb
fdivrs
fadds
fsub
int
data16
add
or
mov
les
mov
adc
adc
in
das
sub
mov
cmp
outsb
mov
pop
enter
mov
aam
scas
dec
iret
push
push
mov
outsb
xchg
inc
mov
aaa
mov
or
push
arpl
inc
fcoms
stos
std
jno
or
push
sbb
dec
lds
add
cli
xchg
fcoms
js
pop
out
jno
inc
mov
pop
fcmovu
or
cmp
cmpsb
popf
xchg
call
add
cmpsl
movsb
pushf
mov
rcrl
jno
or
test
and
push
mov
jecxz
test
adc
xlat
push
sbb
sub
out
lods
push
test
cli
repz
jmp
daa
sbb
dec
in
dec
popf
ret
inc
cmpsb
push
mov
int
mov
mov
xor
and
push
jo
movsb
xchg
rcrb
push
mov
ss
loop
inc
xor
testl
je
inc
xchg
cmc
aaa
je
icebp
jns
stos
adc
fcmovnbe
sbb
or
add
lret
mov
mov
dec
adc
xor
lcall
ja
rcrl
add
pop
and
out
stos
adcl
loope
push
sub
mov
int3
out
ret
shll
out
in
jb
or
jecxz
push
dec
std
sub
mov
xor
cmp
push
popf
clc
and
cwtl
sbb
cmpb
cmc
das
xor
out
dec
sub
clc
mov
adc
fsubp
lea
mov
ret
and
les
xchg
push
pusha
sbbl
cli
rcr
sub
scas
ja
dec
outsb
dec
orl
pop
mov
js
sahf
pop
sbb
rolb
aam
loopne
hlt
cmp
sahf
aam
dec
push
aaa
lret
adc
aam
andb
jb
xchg
mov
mov
lods
nop
jecxz
fistpl
test
shr
ror
xchg
push
xor
sbb
ss
or
or
fimull
push
divb
dec
mov
adc
xlat
sbb
and
dec
mov
mov
rcrb
sub
or
repz
ss
adc
sub
sub
mov
push
mov
dec
lret
jbe
cmpsb
and
rclb
das
cs
js
je
xchg
loop
les
cld
pop
mov
add
xchg
int3
cmp
dec
out
sti
jl
sub
scas
jge
lret
loopne
pop
push
leave
sub
push
pop
clc
aas
icebp
flds
or
bound
xor
mov
sbb
fisubl
jl
iret
fchs
push
ss
lods
inc
aas
lcall
subb
cmp
lods
pop
xorl
xor
and
push
jl
in
and
mov
sahf
mov
scas
sbb
adc
xor
imul
fcomps
dec
in
insb
pop
iret
pop
mov
jl
cmp
push
fdivrs
jb
dec
rcrb
mov
cmp
out
mov
jp
xor
pop
imul
and
cld
mov
adc
gs
lods
leave
mov
outsb
pusha
push
pop
push
xchg
push
in
dec
xorl
mov
pop
pop
aam
ficoml
mov
pop
xlat
xchg
repnz
jo
pop
pop
ret
dec
add
mov
fcmovu
dec
mov
cmp
and
insl
das
sbb
jns
dec
cld
or
push
jg
enter
int
nop
lea
stos
outsb
insb
lods
jne
mov
mov
jo
jge
in
int3
in
adc
push
lcall
loope
jecxz
adc
loope
dec
fwait
cld
inc
sbb
or
test
push
cmp
push
xor
lahf
fcoml
inc
test
in
pop
outsl
fwait
int3
xor
mov
cmp
fucom
fwait
inc
xchg
pop
bound
lret
jmp
xchg
jne
inc
ja
cmpsb
push
lahf
push
xchg
roll
mov
cmpsl
andb
pop
sub
xchg
insb
sbb
arpl
pop
cld
test
push
imul
fists
mov
lea
xor
fcoml
ds
xchg
enter
divl
dec
js
pop
inc
daa
shll
sub
shrl
and
shrb
add
push
dec
and
inc
add
mov
inc
iret
dec
inc
or
fwait
inc
pop
sub
or
mov
mov
xchg
xchg
stos
push
adc
mov
out
cmp
inc
cmp
pusha
push
push
mov
neg
xchg
into
cmp
lea
and
popf
sti
mov
jno
pusha
jne
inc
pushf
mov
leave
and
cwtl
jns
add
in
decb
mov
inc
fsub
lret
sbb
adc
aam
or
cmp
data16
xchg
arpl
sbb
push
mov
lret
xchg
mov
push
sbb
jo
sbb
push
lret
fiaddl
push
enter
xchg
adc
push
lcall
out
call
repnz
shl
mov
xchg
or
xchg
imul
sahf
shrb
testl
dec
push
cmp
icebp
mov
repz
push
add
notb
shrb
pop
mov
mov
out
test
jge
cmp
pop
mov
ror
mov
xchg
aaa
rol
ljmp
and
xor
cli
in
and
fdivrs
sub
pop
ror
mov
fs
cli
pushf
or
xor
movsl
fdiv
sub
dec
or
fs
jae
mov
cmc
lods
idivb
sbb
add
pop
push
dec
jecxz
add
sub
pop
les
push
cltd
add
sub
xor
stos
test
cmc
pop
pop
and
test
dec
cmc
cs
dec
jno
out
mov
cmp
enter
orb
xor
cs
fwait
mov
dec
mov
adc
js
adc
add
lods
pushf
out
pop
pop
adc
jecxz
inc
xchg
lock
out
xor
sub
incl
rclb
addl
adcl
jbe
mov
in
cmp
inc
inc
jbe
jae
shrl
loope
mov
lds
lahf
pop
int
les
icebp
ret
mov
test
sahf
push
mov
sbb
divb
sbb
cltd
fwait
subb
sbb
jmp
rol
sub
and
and
mov
mull
ljmp
lcall
jmp
sub
lcall
jl
orb
stos
loope
sti
out
jb
xorb
nop
cmp
mov
xchg
test
gs
shll
aaa
push
jle
mov
inc
or
mov
xor
push
outsb
ljmp
jno
push
in
into
or
sbbl
js
clc
cwtl
push
and
pop
inc
jp
mov
sbb
fisubs
loope
mov
or
iret
mov
in
outsl
call
or
stos
fucompp
or
cltd
ljmp
mov
lds
pop
mov
inc
xor
outsb
test
sub
test
push
dec
test
pushf
cmp
adc
mov
push
and
mov
sub
cmp
adc
xlat
jne
lds
lds
test
adc
in
dec
out
mov
xor
or
sub
out
lds
push
inc
roll
sub
mov
roll
adc
mov
es
fidivrs
inc
mov
cmp
cmpsl
add
inc
jge
iret
dec
pop
cmp
ljmp
data16
inc
div
sbb
movsl
test
mov
lret
cmp
fs
cmc
ss
stos
nop
movsb
fbstp
imul
inc
call
sbb
push
ficoms
aaa
rorb
ss
push
dec
divb
iret
and
cmp
push
test
or
es
mov
xor
shl
push
cs
aaa
xchg
cmp
mov
ret
andl
cmpsb
out
jmp
push
bound
xor
ror
jno
cmc
lea
cmp
leave
mov
push
enter
dec
in
rorb
aad
dec
adc
jae
jecxz
push
cltd
xchg
iret
pushf
or
lcall
cld
cmc
pop
dec
adc
inc
push
mov
mov
inc
push
mov
mov
mov
aaa
sub
jge,pn
addl
loop
rcr
sub
push
lock
xlat
and
pop
shlb
and
cld
aad
adc
adc
lock
fwait
mov
dec
call
lahf
jl
shrb
cltd
stos
mov
inc
lea
sub
pop
fcompl
xor
scas
rcrb
dec
pushf
mov
adc
daa
lds
dec
pop
jno
daa
into
mov
push
sidtl
loope
int
shlb
fwait
outsb
adc
popa
or
mov
jns
cli
in
out
cmpsl
xor
sbb
sbb
cltd
mov
ss
inc
test
pop
icebp
jne
pop
push
gs
sbb
and
ds
jecxz
das
inc
enter
mov
mov
or
js
iret
adc
leave
xor
jle
clc
jle
imul
mov
or
pop
push
push
data16
add
xchg
mov
jne
push
cmp
ljmp
pop
loopne
xchg
mov
fwait
cld
ljmp
xchg
xor
sbb
clc
pushf
shrb
scas
sub
stos
repz
enter
test
and
pop
insb
in
or
add
sbb
add
xchg
push
or
xor
xor
or
sub
push
jns
leave
sbb
cli
stos
inc
push
xchg
outsl
adc
pop
push
fdiv
fucomp
orl
sbbl
and
xchg
sarb
jo
lods
addr16
in
mov
ret
jge
testb
dec
mov
leave
cmp
ljmp
stc
loopne
dec
hlt
scas
aaa
mov
icebp
in
sahf
mov
repz
loop
insl
aam
rcll
jle
flds
fnstenv
test
adc
sub
sbb
and
pop
lock
or
aam
scas
in
fimuls
inc
call
xor
imul
stc
or
sahf
mov
movsb
std
cltd
xchg
pop
push
enter
cmp
loop
jo
mov
imul
cmc
push
adc
shll
insl
mov
cmp
sbb
out
adc
ret
movsb
push
inc
xchg
leave
loope
stc
push
jg
jbe
sarb
unpcklps
test
fcmovne
add
xchg
xor
pop
dec
dec
xchg
jge
dec
mov
push
xchg
out
adc
sti
cmpsb
push
in
fxch
jae
adc
scas
xor
mov
repnz
push
lret
in
push
loope
cltd
decb
adc
ret
mov
dec
pop
xchg
push
popa
dec
push
inc
movsl
stos
mov
or
mov
xchg
testl
bound
fs
fisttps
xlat
stc
jne
add
fwait
stos
xor
shl
cmpsb
and
inc
movsl
jle
inc
iret
jl
mov
push
sbb
add
add
or
xor
aaa
lds
mov
xchg
insl
orl
mov
mov
jae
cmp
fcomps
dec
rclb
jo
popa
lret
lods
mov
jns
xchg
arpl
mov
stos
mov
aas
inc
or
sarb
xchg
lds
aas
dec
jp
inc
xchg
adc
mov
in
iret
cld
insl
inc
in
fs
dec
push
mov
xor
cli
cmpsl
mov
call
shl
push
out
and
add
mov
jl
repnz
pop
dec
sbb
xchg
push
pminsw
ret
lock
fdivrs
pop
js
cmp
and
mov
lret
jb
mov
push
push
movsb
fdivrl
jmp
mov
adc
movsl
mov
add
pop
pusha
jg,pn
and
xlat
push
daa
pushf
lret
push
clc
aam
sub
jne
sti
adc
test
lahf
dec
nop
adc
xchg
ss
jle
push
pop
in
xor
mov
jns
sbb
mov
jmp
insl
xchg
push
mov
and
push
inc
hlt
lods
mov
rcll
sub
outsl
pushf
filds
mov
pop
or
mov
in
mov
shl
mov
out
jmp
pop
hlt
ljmp
mov
nop
push
xchg
xor
or
pop
outsb
sbb
xor
mov
loopne
jmp
stc
mov
cld
mov
lahf
jp
std
mov
aad
sahf
jo
inc
mov
xchg
jmp
cmp
adc
mov
inc
mov
adc
dec
ljmp
hlt
sbbl
outsl
rcl
mov
jmp
mov
mov
push
sahf
cmc
out
jno
and
push
adc
cli
inc
imul
aas
enter
adc
jae
rorl
inc
jns
loope
les
les
xor
in
fbld
push
push
js
out
fmuls
das
mov
stc
out
rolb
mov
aas
in
push
call
rorb
lods
std
std
dec
mov
loopne
scas
sub
fsts
fistps
insl
sarb
sti
test
stos
in
jmp
aaa
pop
into
add
leave
sbb
jae
nop
push
add
das
ret
xchg
push
cmp
lret
inc
dec
sub
push
push
jae
jecxz
sbb
inc
cmp
add
leave
and
add
fsubrs
xchg
shrl
jp
aam
lahf
mov
cli
adc
scas
stc
jmp
repnz
mov
sub
ficoms
ret
pop
inc
fcmovu
sub
mov
push
adc
mov
pop
push
test
push
mov
push
cwtl
push
and
sbbb
dec
daa
jp
jge
in
jmp
stos
sahf
test
imul
cmp
dec
ret
cmpb
mov
add
dec
lock
pop
mull
pusha
int
xchg
inc
imul
dec
filds
add
jnp
aaa
and
jle
ror
mov
mov
jbe
aaa
imul
je
jmp
gs
movsb
pop
inc
psrad
in
jno
lret
jmp
loope
or
or
sarl
int3
xchg
push
fidivs
inc
loop
xchg
aad
sub
push
and
pop
lds
mov
mov
lret
jmp
lret
mov
dec
aad
leave
inc
repnz
hlt
jmp
dec
stos
and
andb
seta
int
scas
fimull
push
loope
lea
xor
loope
test
push
sti
mov
fmul
test
mov
jmp
xchg
test
fisubrl
and
pop
sbbl
mov
mov
rolb
pop
mov
sbbl
cmp
sub
cltd
lods
aas
fcomp
inc
sarl
adc
lods
xchg
ror
add
xor
jl
fiaddl
xchg
xor
sti
ss
sbb
fidivrl
or
aam
sbb
out
ja
mov
je
dec
daa
xchg
arpl
ja
xchg
dec
sub
inc
or
jecxz
dec
cmpsl
dec
push
adc
aam
push
call
mov
cli
xchg
test
cmp
push
inc
in
adc
cmp
mov
sbb
mov
add
test
inc
aam
pop
mov
jbe
data16
mov
xor
jns
add
pop
xchg
andl
imul
add
jge
mov
rclb
pop
add
in
insl
cli
push
hlt
push
test
icebp
dec
cli
lods
mov
xor
xor
roll
bound
pop
push
clc
mov
es
pop
loope
movsl
mov
xchg
inc
imulb
sbbl
ds
icebp
enter
cmp
cmp
inc
pop
ds
mov
decb
xor
scas
imul
outsl
or
jg
mov
mov
outsb
jbe
cmp
cmp
mov
in
dec
out
gs
scas
lods
lret
cmp
ds
scas
out
push
test
cmp
jae
push
inc
lcall
testl
ljmp
mov
cmpsb
jns
adcl
sahf
rcrb
sbb
out
fs
dec
adc
stos
pushf
push
int3
inc
sbb
cltd
mov
mov
rolb
jmp
mov
mov
repz
xchg
sbb
fcomps
repz
mov
je
fwait
sub
or
dec
mov
mov
in
sub
ror
lahf
and
jbe
mov
es
mov
xor
mov
push
shll
stos
popa
aas
push
rcrb
inc
pop
movsb
sbb
cli
popf
sbb
cwtl
add
mov
xlat
jg
outsl
nop
rclb
mov
sub
lods
push
and
add
jp
pop
mov
pop
repnz
jo
jecxz
sub
jmp
xchg
pop
loopne
hlt
and
ret
adcb
adc
ja
cmpsb
lock
rcr
das
add
jmp
inc
sub
jmp
pop
or
jne
test
insl
pop
mov
in
cmp
sub
aaa
pinsrw
mov
pop
cwtl
js
jl
and
mov
clc
adc
cs
js
popa
dec
pop
lcall
test
jbe
add
pop
xchg
jmp
pop
and
ss
and
insb
mov
imul
and
testl
xor
test
lcall
jl
int3
inc
push
adc
pop
push
test
enter
xchg
adc
jg
test
decl
sti
insb
test
jl
cmc
xchg
push
inc
les
cmpsl
xchg
bound
repnz
jle
jnp
push
inc
in
test
xchg
addr16
inc
and
cmpsb
icebp
fs
int3
punpcklbw
xchg
js
pop
add
xchg
jl
add
mov
and
cmp
or
out
pop
push
fucomi
cmp
pusha
ds
ret
movsl
jp
mov
hlt
sbb
jns
fstpt
stos
mulb
mov
insl
stc
jmp
sahf
in
push
xlat
mov
jge
mov
out
xor
or
sbb
outsl
xlat
jmp
divl
arpl
out
mov
mov
lods
sbb
pop
adc
or
pop
jb
shll
ja
ds
mov
pop
stc
adc
fnstsw
sbbb
push
cmp
push
xchg
inc
dec
dec
xchg
or
pop
movsb
xorl
inc
in
cli
fiadds
add
bound
test
cmp
inc
push
add
clc
faddl
lret
outsb
stos
dec
mov
mov
movsb
inc
nop
ret
jg
scas
imul
jo
or
pop
and
insl
cmp
neg
leave
add
cmp
sbb
mov
cmp
fimuls
scas
adc
inc
out
leave
and
dec
xchg
ja
cmpsb
lods
or
cli
dec
enter
outsl
or
and
rclb
clc
push
push
inc
mov
and
scas
mov
xchg
ljmp
cwtl
cmp
in
sbbb
jb
mov
or
jo
jns
pop
dec
add
addl
jns
cs
imul
jb
mov
enter
sbb
rcl
mov
add
lds
mov
dec
or
push
movsl
inc
jno
or
dec
mov
adc
ljmp
or
scas
popf
pop
repnz
arpl
xor
add
insl
sahf
sub
xchg
mov
scas
stos
or
ljmp
sbb
addb
jno
push
jl
sbb
movsb
loop
insb
or
lock
push
cmp
sub
cmp
jecxz
mov
mov
dec
lahf
pop
xchg
lcall
std
lahf
push
in
mov
test
stos
scas
sahf
xlat
into
cmp
jg
mov
ds
testl
jmp
into
adc
mov
and
cmpsl
xor
call
icebp
pop
inc
push
fistpl
jbe
lea
inc
mov
es
loope
pusha
inc
push
pushf
out
hlt
shrl
pop
ret
inc
lds
callw
lret
dec
idivb
sbb
mov
and
jns
sbb
popf
out
or
lret
sub
ja
dec
mov
outsb
jbe
in
inc
int3
cmp
das
ljmp
mov
in
mov
dec
lock
lds
nop
insl
sub
imul
xor
lods
sbb
or
adc
outsl
fcoml
pusha
aas
adc
test
and
in
mov
inc
inc
sub
dec
stos
nop
add
sub
mov
push
add
aam
push
cmpsl
cmp
push
fldcw
and
mov
sbb
adc
in
in
aam
xor
loopne
bound
cmp
test
dec
xchg
hlt
fstpt
mov
cld
jae
insl
pushl
add
xchg
inc
jge
das
and
xorb
or
out
aad
jmp
push
test
stos
repnz
leave
dec
stos
and
xchg
fs
cli
cmc
cli
pusha
push
jmp
adcl
scas
dec
arpl
pop
and
sbb
or
test
arpl
lea
std
test
test
shlb
mov
sub
inc
ja
scas
jg
cwtl
icebp
ret
lods
loopne
cmc
in
push
les
mov
sub
repz
mov
loopne
icebp
xorl
mov
cmp
std
xchg
fwait
adc
call
leave
adc
jle
fsubrs
mov
loope
sarl
es
jns
cmp
pop
dec
jbe
sub
notb
daa
stos
jbe
dec
xchg
xor
pop
pop
or
dec
and
xor
dec
mov
cltd
xchg
pop
mov
stos
or
call
pushf
xchg
push
sub
push
mov
dec
mov
cmp
mov
push
dec
mov
mov
sahf
mov
mov
daa
pop
fisubl
push
shlb
fcmovnbe
fisubs
cmc
pusha
iret
aaa
xchg
inc
nop
and
outsl
int3
pop
jae
mov
dec
mov
sub
popa
addr16
andb
loope
ljmp
mov
mov
fdivrl
pop
dec
shr
xchg
mov
test
inc
or
sahf
arpl
xchg
in
lret
push
and
repz
arpl
lock
test
gs
repnz
sti
or
sub
adc
dec
aam
add
mov
ss
popa
jb
cmp
mov
in
adc
mov
inc
sbb
lds
xchg
ss
addr16
pop
jb
push
aas
test
jo
xchg
and
cld
jecxz
inc
test
adc
push
es
fildl
les
mov
movsb
sbb
mov
adc
push
lahf
xor
js
aad
cmovl
mov
cmpsb
sbb
mov
ret
lret
fdivs
data16
loope
fstps
repnz
test
dec
mov
arpl
test
inc
dec
dec
ret
cmp
pop
fidivrl
inc
inc
mov
out
xor
hlt
aaa
mov
sbb
jnp
mov
cmp
rcll
jg
ret
les
arpl
push
test
sbb
push
push
xchg
add
movsl
int3
mov
out
fimull
aas
push
add
sub
sbb
dec
mov
in
jae
jno
aaa
mov
arpl
dec
les
mov
push
ss
mov
aad
cmpl
out
xorl
int
fdivl
icebp
mov
lcall
cmp
sub
push
adc
jbe
xchg
int3
add
or
data16
add
in
sbb
aas
in
push
mov
and
cli
test
dec
repnz
pusha
movsb
faddl
lret
neg
repz
cmp
aad
js
inc
add
mov
test
iret
inc
rcll
aam
imul
pop
pusha
push
or
incb
sbb
shlb
shl
das
jae
adc
inc
xchg
add
push
ret
mov
stc
push
rcrl
mov
aaa
cmpsl
sarl
les
push
sub
mov
in
jmp
cli
in
imul
mov
adc
scas
pop
hlt
xrelease
into
jge
mov
aas
fisttpl
xchg
xchg
xchg
dec
outsb
dec
or
mov
call
sbb
pop
ljmp
adc
jmp
lea
pop
repnz
mov
dec
loope
jle
pushf
adc
rol
jg
pop
not
or
push
pop
shll
ret
dec
lret
push
mov
adcl
adc
adc
jl
jae
add
mov
arpl
cwtl
xorb
xchg
cmp
inc
aas
jns
js
leave
push
and
mov
jnp
xchg
pop
mov
ret
push
in
cwtl
or
and
mov
sub
mov
shrl
movsl
sahf
btr
add
into
shlb
mov
inc
jmp
leave
cltd
negb
cmp
movsb
pop
das
push
shl
lods
xchg
loopne
test
nop
and
scas
data16
insb
and
test
sub
mov
mov
jge
test
sbb
subl
adc
cmp
pop
and
cltd
loope
hlt
mov
inc
into
mov
xchg
repz
push
das
fs
cmp
mov
mov
das
loopne
mov
icebp
dec
loopne
mov
mov
jl
push
clc
mov
shll
jno
fwait
movsl
xor
add
sbb
out
repnz
ja
sbb
mov
int
pop
add
loope
cmp
incl
or
imul
cmp
lock
ret
ss
enter
ds
xchg
outsl
push
scas
mov
shrl
testl
mov
test
mov
fcompl
push
mov
or
lahf
and
xchg
inc
outsb
xchg
push
pop
jo
out
mov
fidivs
pop
rclb
dec
pusha
sub
int
lds
stos
xor
push
jo
mov
ds
mov
negl
dec
outsl
jns
push
shlb
mov
mov
outsb
mov
cmpsb
push
cli
shl
lret
mov
int3
xchg
xor
jp
cs
rclb
je
iret
decb
or
or
mov
sub
mov
xchg
imul
out
call
jg
cmpsl
inc
in
or
add
aaa
inc
inc
cli
xor
rorb
sbb
adc
cmc
or
mov
iret
shll
and
inc
rcll
xor
cmp
call
fcoms
and
fdivl
gs
jns
xor
sbb
xor
cwtl
mov
cmpsl
mov
mov
jle
es
cmp
pop
xchg
adc
addl
mov
push
mov
xchg
inc
test
xchg
xchg
dec
inc
xchg
ficoms
xchg
jbe
ret
out
xlat
loopne
or
les
cltd
inc
repnz
dec
cmp
mov
pop
and
jne
sti
dec
mov
add
adc
sub
mov
jg
xchg
movsl
pop
loope
xor
out
or
mov
mov
mov
mov
cwtl
movl
lods
je
stos
ds
and
aaa
xchg
cmp
push
test
hlt
popf
sarb
stos
sub
pop
adc
or
bound
insb
nop
inc
mov
pop
xchg
jp
xchg
rorb
cwtl
insb
add
xchg
push
repnz
inc
jl
out
fwait
jns
mov
mov
and
js
push
mov
aas
shlb
and
test
jl
lcall
adc
fcmovnu
pusha
jecxz
xor
or
stc
dec
mov
sbb
scas
jno
adcl
and
loop
movsl
popa
dec
imul
xor
cmp
cmp
add
inc
adc
xor
pop
push
sub
push
jo
sbb
inc
sbbb
ljmp
clc
push
das
in
cmp
fsts
dec
sub
cs
sti
cmp
sbbl
fwait
movsb
loope
dec
arpl
aad
jmp
int
mov
or
sub
scas
jle
push
fidivrs
push
imul
xchg
fbld
daa
shll
sarl
aas
mov
movsl
cmp
push
xor
lods
ret
dec
test
and
and
icebp
out
fmul
aad
stc
dec
adc
int3
inc
pop
jbe
in
mov
cmpsl
sar
push
add
ljmp
fpatan
sub
xor
dec
js
test
orb
data16
lds
xor
push
rcrl
inc
add
int3
inc
movsl
xchg
xchg
jo
iret
in
cli
xor
aam
mov
push
sbb
push
pop
flds
clc
in
cmc
adc
xor
adc
xchg
fcomp
lods
pop
jecxz
mov
sbb
and
stc
cld
arpl
cmp
int
fdivrl
pop
jp
push
mov
mov
sub
or
cltd
mov
and
adc
xlat
cmp
lock
fistl
push
bound
inc
sub
mov
fimuls
int
dec
xor
sub
xchg
insb
mov
mov
pop
call
pop
sbb
mulb
sub
gs
sub
xchg
lods
jle
subb
jno
popa
pusha
mov
push
cwtl
imul
sbb
cltd
stos
ret
arpl
scas
mov
fwait
stc
insb
sub
pop
je
add
jecxz
stos
pop
mov
dec
clc
or
sub
push
xchg
fucom
aaa
bound
in
loope
in
or
mull
jp
dec
loope
pop
jmp
mov
inc
outsl
jmp
xchg
push
cmpsl
xor
daa
dec
inc
lret
popf
iret
push
ss
leave
xchg
out
leave
cld
lods
dec
inc
push
cmpsl
test
movsb
rolb
div
imul
jle
jl
adc
sub
pop
xor
scas
test
sbb
mov
sub
sarb
jns
pop
lods
cli
std
and
add
sahf
loop
adc
aas
jl
mov
ljmp
fistps
pop
cmpsl
aam
fidivrl
in
fstl
ja
mov
push
sbb
imul
dec
dec
cmpsl
scas
pusha
test
lret
mov
sbbb
shl
nop
sub
add
mov
cmp
pop
insl
pop
dec
std
lea
adc
mov
adcl
dec
ja
in
adc
movsl
pusha
outsl
pop
jae
inc
shrb
test
lahf
mov
xchg
in
dec
int
mov
fs
repz
jno
xor
or
xchg
popa
mov
push
mov
push
adc
mov
dec
jl
push
loopne
inc
mov
xorl
mov
fsubp
xor
add
lds
and
std
or
stc
inc
jge
xor
icebp
mul
sub
inc
ret
inc
cs
mov
andb
loop
inc
loope
mov
loope
mov
leave
ret
push
das
jo
xchg
jmp
test
mov
lgs
stc
push
sub
mov
sub
add
mov
stc
pop
filds
aaa
filds
aaa
sub
cld
repz
repz
imul
push
iret
jg
rolb
sbb
dec
push
imul
stos
ja
jnp
sub
push
xchg
jno
xchg
movsl
ja
cwtl
inc
inc
add
stos
inc
dec
push
or
mov
imull
imul
bound
and
je
xchg
cmp
std
xchg
call
push
sbb
lds
rolb
add
sahf
cmp
jg
sar
xchg
jbe
fidivs
stos
outsl
lock
pop
test
xor
lret
aaa
add
fwait
cmp
and
push
pop
js
mov
in
mov
rorb
dec
jmp
in
pop
iret
js
push
dec
mov
push
fdivr
fadds
dec
scas
xadd
mov
push
mov
add
push
jge
loopne
in
sbbl
pop
sahf
testb
imul
out
test
repz
lret
cmp
push
sbb
out
or
fildll
sbb
outsl
repnz
push
pop
add
pop
adc
imul
push
mov
jle
mov
push
jno
add
dec
mov
out
cli
push
lcall
cmp
out
xor
cmp
mov
and
adc
push
dec
inc
adc
adc
mov
shr
data16
das
xor
add
mov
dec
fidivrs
cmp
mov
cmc
dec
iret
sti
inc
test
xchg
xor
inc
jg
pop
inc
sub
or
insb
and
imul
ds
stos
fbstp
mov
jo
pop
stc
arpl
lods
mov
adc
or
ljmp
mov
jle
or
loope
add
popf
adc
mov
aaa
les
aas
lret
test
fisubrs
fadds
jae
jecxz
jmp
and
mov
rclb
imul
insb
mov
and
xchg
xchg
andb
push
popa
pusha
cli
test
aam
dec
push
pop
outsl
xchg
lret
out
insb
cld
or
or
loop
jmp
insb
mov
pop
out
dec
or
xchg
pop
lods
push
test
ret
mov
cmp
mov
add
and
pop
push
push
add
jns
push
test
sbb
sarl
sbb
jecxz
addr16
mov
adc
jle
aad
jns
dec
enter
cmpsl
imul
enter
mov
jmp
pop
push
adcl
dec
push
adc
in
xor
inc
push
mov
dec
pop
in
mov
xlat
inc
into
jae
aas
in
cltd
test
stos
fisttpll
xor
jo
outsl
int
sub
andl
call
mov
push
xchg
das
leave
xor
pop
and
leave
movsb
mov
out
mov
ficomps
add
ja
mov
iret
inc
mov
xor
push
mov
mov
xchg
movsb
jl
mov
lret
ds
je
testl
adcb
mov
jmp
cmp
std
lret
mov
mov
clc
jp
adc
xor
and
mov
mov
loope
std
in
pop
hlt
mov
pop
rorb
inc
jne
fwait
dec
leave
cmc
mov
push
hlt
aam
cmp
out
lods
pop
mov
nop
nop
js
test
adc
lret
pushf
sbb
and
addr16
lcall
mov
inc
sbb
xchg
je
pop
xor
fcompl
or
add
push
outsb
ret
adc
in
out
push
fbld
cmp
nop
inc
mov
xlat
pop
int
cmpsl
mov
and
xchg
ja
xorb
aaa
repnz
icebp
sti
sub
inc
dec
arpl
jmp
stos
xchg
mulb
mov
loopne
lock
movsl
xor
inc
jecxz
adc
cs
in
lods
dec
and
jmp
mov
push
mov
fbld
push
repz
clc
push
jne
mov
inc
inc
jne
add
push
scas
adc
nop
jg
push
mov
mov
jnp
mov
xor
mov
hlt
mov
stc
out
faddl
add
mov
jo
repnz
dec
xor
scas
mov
cmpsb
hlt
cmc
mov
cmp
enter
jmp
ror
push
push
outsl
xlat
add
mov
mov
pusha
sub
cld
mov
lds
push
jae
in
jl
dec
mov
out
add
sub
adcb
xchg
xlat
add
rcl
mov
jnp
xchg
mov
insl
mov
mov
xor
cld
inc
stos
shll
les
inc
and
dec
pop
loope
add
lock
data16
or
imul
xor
mov
bound
xchg
mov
push
inc
inc
add
push
sbb
push
pop
iret
clc
mov
xchg
scas
jge
je
enter
xor
jecxz
mov
stos
push
and
out
bound
or
outsb
xor
xchg
jmp
sbb
dec
sbb
pushf
xchg
jl
aad
jb
test
ss
iret
mov
xchg
rorl
das
aas
es
jns
daa
cmc
jle
or
stos
js
inc
imul
cmpsb
cltd
xor
xchg
out
cmc
and
mov
leave
and
mov
repnz
lock
sbb
adc
imul
mov
inc
pop
jno
xchg
insl
pop
xor
js
xchg
mov
push
outsl
push
adc
dec
dec
pushf
push
repnz
pop
sbbl
or
xchg
arpl
and
lahf
rcll
fdivrs
imul
sbb
rcrb
ret
or
mov
pop
sarl
cld
sbb
pop
pop
adc
inc
outsb
divl
in
inc
nop
dec
aam
addr16
sbbb
pushf
and
sbb
sub
pop
add
sub
mov
ljmp
hlt
mov
scas
xor
or
add
or
push
cmp
pop
notl
fs
cmpsb
xchg
sub
pop
out
sbb
jecxz
mov
cs
cwtl
inc
sbb
mov
and
adcb
push
xchg
addr16
pop
or
adc
into
push
ljmp
ljmp
lcall
inc
pop
mov
and
cmpsb
scas
xchg
mov
mov
cmpsb
xchg
sub
aaa
cs
adc
outsl
mov
inc
sbb
rolb
out
add
push
jp
pushf
fisubrl
data16
sub
jb
inc
xchg
lcall
or
fwait
das
cmp
mov
iret
or
popf
xchg
xor
out
dec
fidivrs
sub
lds
push
lcall
xor
jge
lds
adc
cmp
rorl
dec
ds
mov
in
clc
aad
dec
rcl
mov
stos
aaa
movsl
inc
hlt
jl
or
pop
and
add
push
gs
imul
mov
inc
outsl
xchg
imul
inc
xlat
cli
imul
test
lret
or
jecxz
fcomip
sub
cmpsb
jecxz
repz
test
insl
shll
mov
jne
test
push
pop
sarb
mov
cmpsb
clc
imul
ret
andl
hlt
sti
aad
pop
adc
fidivs
add
adc
faddl
inc
sub
jne
adc
repz
add
or
adc
loop
lock
xor
jmp
push
je
test
aaa
xor
orl
jns
xchg
jge
lret
push
or
int3
test
js
and
sarb
sub
push
rcrl
cmp
filds
mov
mov
icebp
xchg
pop
push
aaa
in
mov
jmp
jg
pop
or
shlb
mov
lret
int3
inc
in
aad
pop
es
leave
sub
mov
js
jne
fwait
add
movsb
mov
mov
and
jg
sbb
jns
ficoms
in
bound
add
out
jmp
inc
insl
push
mov
lret
stos
push
sub
in
inc
or
orb
sbbl
ret
mov
push
repz
jo
test
inc
aam
ja
clc
dec
call
cltd
inc
mov
movsb
push
cld
cmp
pop
sbb
mov
push
xor
orb
scas
cmpsl
mov
pop
mov
pop
lcall
sub
xchg
js
icebp
adc
out
jl
movsl
sar
sbb
mov
jno
stos
mov
adc
fsubl
out
stos
jo
imul
jg
movsb
and
clc
mov
test
mov
lds
hlt
cwtl
cmp
push
mov
outsb
jl
adc
and
xchg
pop
out
leave
jecxz
jb
in
repnz
push
fdivrl
adc
stos
movsb
push
or
in
repnz
and
lods
rcl
clc
mov
jle
rol
ret
icebp
lock
enter
fnstcw
nop
push
insb
mov
pushf
out
jle
add
dec
xchg
dec
fs
inc
add
movsb
cmp
mov
jae
jns
push
pop
je
cmpsb
gs
outsb
addr16
fdivl
dec
aam
flds
jmp
push
xor
mov
or
arpl
push
and
les
mov
mov
or
jb
mov
test
das
push
dec
push
insl
cmp
iret
fs
mov
inc
jecxz
adc
clc
jmp
imul
arpl
add
mov
jecxz
jno
push
inc
icebp
ficompl
sbb
jecxz
push
jne
and
inc
mov
cltd
push
shlb
jl
sahf
push
mov
push
push
lahf
adc
enter
add
test
sahf
ja
or
xor
cmp
adc
or
adcb
jno
pushf
inc
push
sbb
adc
jns
idivl
mov
aas
lahf
mov
icebp
std
adc
sbb
mov
cli
xor
xchg
inc
pop
or
ljmp
mov
adc
mov
mov
enter
cld
iret
addr16
xor
mov
clc
jno
aad
movsl
scas
pop
shl
iret
js
enter
push
adc
in
and
pop
pushf
push
or
addr16
lcall
leave
je
and
bound
rcr
dec
jg
and
cmp
mov
xor
push
jns
jne
xor
inc
and
inc
movsl
xor
pop
pop
mov
rolb
dec
mov
and
inc
sub
mov
sbb
add
push
int
adc
lcall
movsb
fldenv
cli
cmc
movsl
push
push
mov
imul
adc
jp
adc
fdivrs
cmpsb
xor
js
cmpsb
mov
pop
dec
mov
push
cmp
pushf
test
sub
or
rcr
and
sti
sahf
scas
mov
outsb
pop
hlt
movsb
xor
xchg
es
mov
inc
jbe
mov
cmp
dec
inc
mov
mov
jmp
add
mov
enter
and
loope
sbb
push
add
inc
jl
fsts
xchg
in
in
orb
or
jmp
sub
stc
gs
adc
lret
inc
push
test
mov
xchg
lods
mov
mov
in
out
jle
xchg
pop
fucomi
mov
pop
jmp
iret
sbb
xchg
negb
shll
push
loopne
bound
repz
js
and
ja
and
cmp
inc
popa
stos
cmpsl
pop
xor
cltd
imul
push
push
dec
and
push
rcrl
xchg
cmove
loop
icebp
ljmp
add
ret
hlt
mov
testb
mov
sub
push
cmp
pop
xor
repnz
mov
adc
inc
xlat
icebp
xor
filds
enter
lahf
icebp
into
pop
aad
cmpsl
sbbl
stc
outsl
push
push
out
adc
mov
push
mov
aam
jns
frstor
push
mov
pop
enter
adc
mov
mov
shlb
mov
jo
dec
cmpsl
mov
sbb
push
mov
add
mov
sar
push
loope
and
addl
int
pop
jnp
sarb
xchg
xor
pop
adc
jmp
sub
xchg
inc
xor
mov
adc
imul
lcall
or
cwtl
ret
mov
xchg
xchg
insl
sub
xchg
pushf
stc
or
mov
pop
sbb
add
and
or
xlat
pushf
push
int3
lcall
push
cmp
orl
jl
sbb
jnp
cltd
mov
es
push
cvtpi2ps
mov
jl
mov
sub
pusha
fcom
pushl
jmp
mov
xor
jno
mov
adc
cld
sub
in
das
shlb
scas
jne
push
daa
push
bound
mov
jmp
pop
idiv
movsb
loope
cltd
add
cmc
mov
mov
stc
dec
add
push
cli
inc
mov
adc
sbb
or
mov
lods
cmp
pop
add
mov
rclb
sub
jno
jae
add
add
fsubrl
mov
cmp
pop
aas
ja
push
sub
inc
and
push
jg
into
mov
xor
or
and
negb
sub
or
pop
xchg
adc
adc
jno
mov
add
lds
orb
roll
stc
lret
xor
test
es
ret
inc
bound
mov
pop
adc
xor
mov
sub
dec
dec
fcmovnb
test
cmpsb
and
inc
stos
stc
jbe
in
pop
mov
cmp
jle
test
lret
xor
sub
mov
pop
in
pop
les
lds
fmull
imul
jo
push
mov
daa
repnz
adc
pushf
mov
mov
push
and
gs
xchg
pop
insb
sbb
mov
dec
das
mov
mov
jns
xchg
std
popa
scas
fwait
inc
and
insl
andl
in
pop
mov
stos
cmp
rcl
cmp
ficoms
add
mov
enter
gs
pop
mov
clc
cmp
xchg
sbb
or
jge
xlat
or
sbb
mov
dec
cmc
sub
adc
mov
cmp
push
out
lret
add
leave
test
mov
push
cwtl
rorl
aas
inc
add
jge
ret
and
repz
aaa
and
xor
mov
shll
stc
sub
or
cs
cmc
push
repz
or
cwtl
push
sbb
adc
xor
push
test
repnz
pop
sahf
jmp
fldenv
dec
cmpsl
lock
cwtl
sbb
mov
lods
xchg
lods
jmp
out
adc
jb
xor
add
push
lret
call
in
dec
stc
dec
or
mov
xor
mov
ljmp
aas
lds
in
dec
rorb
test
jg
idivb
cmp
xchg
iret
mov
push
bound
add
iret
and
hlt
pop
aaa
inc
or
clc
pop
push
cwtl
xor
in
repnz
ret
cmp
jo
les
rcrb
xor
and
sbb
sbb
cli
push
lods
loope
sti
or
xchg
or
pop
es
mov
xchg
cld
and
pusha
insl
or
insb
movsb
pop
push
or
dec
mov
add
imul
jge
popf
mov
pop
adc
frstor
jg
mov
jae
mov
lcall
ja
les
jb
pusha
pop
fwait
adc
mov
dec
jl
xchg
mov
rolb
jb
push
and
lea
adc
jo
cmpsl
dec
inc
loope
xchg
outsb
push
jmp
jnp
sub
xchg
insb
enter
out
or
pop
js
arpl
jbe
int
and
ja
icebp
or
inc
or
jge
dec
out
test
jno
and
mov
adc
sbb
push
ud0
in
test
mov
in
or
xchg
adcb
arpl
push
cmp
je
dec
imul
sub
lahf
or
popa
gs
ret
stos
cmp
dec
and
xchg
out
addb
jg
push
push
sub
dec
sub
insl
sub
sub
mov
data16
scas
rclb
push
adc
push
push
mov
sahf
test
sub
adc
ljmp
mov
ja
pop
repnz
ljmp
aad
in
out
dec
pop
sub
pop
popf
mov
fdivrs
xor
sbb
xor
xorb
mov
xchg
sbbl
mov
shrb
iret
hlt
shr
stc
jp
and
xor
inc
sbb
insl
push
aad
les
nop
sbb
mov
stos
dec
addr16
fiadds
dec
fiaddl
outsb
sahf
shl
aaa
adc
cmp
push
cwtl
pop
pushf
hlt
aad
rorb
xchg
test
nop
add
mov
pop
push
arpl
aaa
push
or
mov
add
cld
dec
mov
lret
lret
push
push
xchg
push
mov
cmc
in
xor
sbb
dec
adc
out
add
dec
jmp
leave
test
dec
push
jmp
aad
mov
jne
cmp
jp
mov
xchg
test
lcall
popf
test
xchg
mov
sub
lahf
test
add
shrl
lret
out
test
push
loopne
leave
aaa
or
scas
mov
movsl
aas
xchg
xor
sub
cli
mov
xchg
inc
in
add
xchg
fildl
xchg
xchg
dec
je
dec
fldenv
push
or
inc
adc
icebp
add
pop
mov
ficompl
jle
lret
scas
sub
add
decl
or
adc
cmp
adc
dec
fstpl
int
mov
jo
xor
xchg
sahf
dec
movsb
mov
xor
pop
aam
jmp
lcall
daa
lods
mov
push
add
outsb
call
xor
and
add
pushf
mov
sub
imul
pop
mov
loop
out
mov
add
push
inc
inc
imul
pusha
das
inc
add
xlat
push
cmpsl
push
ja
pusha
into
adc
cmp
aam
int3
jmp
stos
pop
mov
mov
int3
push
movsb
xchg
ret
pop
out
mov
arpl
mov
and
fadd
out
pop
std
cmp
jne
mov
test
mov
add
add
pushf
xor
scas
push
xor
in
xchg
or
push
pop
sub
add
test
jmp
jp
popf
ljmp
sahf
test
add
xlat
inc
loope
sti
fisubl
xchg
into
or
or
pop
sbb
inc
insb
jl
jg
mov
mov
xor
fidivl
mov
lahf
ud1
or
mov
iret
add
fcompl
mov
adc
sbb
mov
xchg
xchg
xchg
fistpll
push
xchg
pop
push
cmp
movsb
jb
jle
shrl
stc
xor
jbe
out
inc
pusha
sub
and
addr16
repnz
aaa
call
addr16
cmp
clc
dec
lcall
pop
je
jno
adcb
mov
xchg
xchg
test
push
cmc
aam
dec
fwait
idiv
mov
sbb
sub
loope
pop
push
gs
bound
cmp
adc
fsubs
xor
jl
sub
or
fs
stos
xlat
fcoml
mov
hlt
mov
pop
add
cmpsb
cmp
ret
cli
sbb
or
lcall
push
aas
hlt
ljmp
jno
rcll
push
mov
cmpsb
sub
out
test
cs
cmp
in
add
insl
testb
cltd
push
orps
mov
mov
std
add
adc
pusha
pop
inc
daa
rcrl
out
dec
mov
out
inc
rorb
mov
shll
cmp
std
in
mov
or
xchg
paddusw
mov
mov
gs
dec
dec
outsb
sbb
add
push
insb
and
out
add
leave
push
cmp
sub
mov
scas
test
adc
jae
fidivrs
sahf
rcll
dec
cmp
mov
lock
pop
js
int3
sbb
mov
jp
add
fadds
xlat
les
popa
das
and
repz
aam
mov
lods
mov
sbb
repnz
jo
jb
aad
inc
notl
enter
movsb
sbb
jo
aam
adc
in
aam
sub
pop
pop
rolb
pop
inc
shlb
pop
mov
addw
daa
ljmp
mov
ja
and
xor
stc
ljmp
pop
das
add
cmpsl
adc
xchg
pop
in
jns
inc
rcrl
in
jp
xchg
fs
jne
mov
push
adc
jmp
not
mov
cmp
sbb
es
ja
cmpsb
aam
add
xor
lahf
adc
lods
jge
inc
jg
inc
rclb
add
cmpsb
mov
mov
mov
inc
enter
jg
loope
push
icebp
outsb
sub
mov
fbld
cmp
in
sbb
js
dec
lea
mov
sub
add
das
mov
mov
les
cltd
pushf
cmp
xchg
clc
in
pop
inc
popa
and
sbb
test
ljmp
lcall
ret
mov
popa
inc
push
pop
cmpsl
sub
xor
les
in
andl
rol
js
ss
xchg
test
cld
pop
iret
jae
inc
imul
inc
popf
repnz
add
lea
cmp
insl
les
imul
xchg
or
ljmp
fs
pusha
mov
fidivl
jl
push
and
mov
xchg
sbb
stc
out
outsl
pop
add
mov
add
mov
fisubs
and
inc
xchg
daa
mov
inc
jge
or
sub
mov
pop
inc
arpl
dec
mov
lods
inc
gs
pop
pop
fisttpl
jmp
mov
push
pop
fdivrp
adc
xchg
mov
mov
fcmovbe
mov
dec
cmp
dec
sarb
mov
out
jb
cmpsb
pop
pop
inc
popa
xchg
cwtl
fwait
add
popa
fwait
sahf
mov
test
inc
xchg
out
xlat
adc
idivb
cltd
pop
or
in
xorb
mov
fwait
inc
insl
mov
fnstenv
lea
xchg
xor
sti
int
push
inc
into
xchg
sbb
das
mov
dec
mov
imul
pop
adc
cmp
aas
cmp
imul
jmp
or
outsb
sbb
xchg
xor
int
xchg
and
pop
jns
ret
adc
cld
mov
mov
or
les
xchg
push
lahf
jnp
lahf
add
pop
adc
jbe
push
inc
arpl
inc
mov
outsb
mov
loopne
or
fdivrs
bound
mov
jl
sbb
cmp
mov
cwtl
jp
arpl
test
dec
imul
std
loopne
cld
and
ja
push
out
and
and
shll
mov
jg
xor
sbb
in
cld
inc
inc
or
push
popa
push
mov
stos
push
sbb
push
jno
call
mov
push
addr16
lret
fimull
insb
bound
mov
es
std
lret
mov
ret
xchg
addr16
ljmp
add
fldl
dec
mov
and
xchg
inc
mov
or
push
hlt
jno
movsb
xchg
lods
cmp
push
cmpb
inc
scas
pop
mov
adc
flds
nop
sarl
push
dec
xor
jge
int3
inc
xorb
popa
jne
mov
pop
sarb
stos
les
inc
mov
loope
cmp
jp
mov
inc
sarb
int
dec
fsts
insl
lds
outsl
sub
cld
inc
movsb
push
popa
jns
leave
cli
cmp
stc
jle
adcl
scas
push
jno
daa
and
mov
or
xchg
inc
dec
jns
rol
cmpsl
mov
push
pushf
aam
std
popf
mov
lret
lahf
push
push
scas
xchg
sbb
pushf
jno
daa
dec
pop
and
leave
lods
jnp
sahf
fsubrl
xor
fidivl
rorb
dec
push
lret
xchg
pop
stos
mov
icebp
out
mov
adc
or
cs
push
aas
fst
ljmp
mov
sub
jno
mov
jae
aas
repz
xchg
mov
adc
out
mov
lcall
shll
or
cmp
negb
fs
out
adc
into
daa
or
jge
lea
xchg
or
addl
or
inc
mov
out
inc
hlt
mov
in
shll
push
cmp
loop
aas
inc
cltd
mov
aas
cmp
mov
cmpb
cltd
mov
dec
call
cmc
adc
ja
push
mov
pop
mov
sbb
cltd
jo
mov
in
fdivrs
sbb
ja
adc
idiv
xor
fadd
lret
dec
add
je
xor
mov
xchg
int3
add
aas
nop
sbb
pop
notl
adc
das
xor
pop
jmp
or
imul
mov
bound
cmp
jg
mov
inc
push
adc
out
adc
cmc
fst
push
icebp
faddl
cmpsl
imul
int
or
sub
dec
movsl
sub
and
or
ret
pushf
aad
cltd
mov
jecxz
out
es
adc
subl
jp
mov
push
int
insb
icebp
dec
aad
dec
add
mov
cwtl
mov
mov
pop
fnsave
mov
jno
xchg
mov
movsl
or
movl
psllq
mov
lds
test
scas
sbb
push
cld
mov
mov
and
imul
movsb
sub
inc
daa
jmp
divl
nop
jae
outsl
stc
movsl
lods
sbb
or
jg
mov
mov
fs
and
out
adc
aaa
in
fucomip
insb
mov
int
or
sbb
pop
nop
sbb
or
pop
jge
xor
pop
mov
adc
push
cmpsb
int
add
aam
outsb
roll
je
mov
jmp
cmp
cld
push
add
in
rclb
clc
cmp
out
mov
xchg
cmp
jge
inc
pop
inc
cmp
jmp
das
mov
add
mov
xchg
pop
mov
mov
pop
adcl
daa
mov
push
sbb
pop
pop
clc
pop
add
xor
mov
mov
sbb
stos
dec
jne
sub
and
cmp
mov
or
xor
inc
and
mov
jnp
repz
sub
outsl
xchg
mov
imul
sub
mov
or
inc
sub
std
mov
push
jo
push
mov
sbb
jbe
and
mov
and
add
push
mov
fsubr
adc
sub
loope
sub
sub
inc
shlb
cs
cs
and
and
sub
das
cwtl
call
pop
hlt
lahf
rorb
pop
jecxz
push
sbb
bound
jmp
xchg
es
lahf
ss
fs
pop
stc
add
dec
hlt
push
mov
js
cmp
dec
mov
add
jmp
dec
ljmp
insl
sbb
jb
inc
rorb
arpl
mov
mov
inc
push
mov
movsl
cli
jmp
push
mov
xchg
inc
adc
lock
mov
out
stos
sti
mov
mov
or
mov
arpl
sbb
cwtl
or
lcall
in
addr16
fmul
cmp
fdivrl
mov
leave
stos
and
sbb
cld
push
lea
fstpt
mov
and
dec
shrl
jle
jne
loop
jge
dec
pusha
mov
cmp
dec
shr
cli
and
sbb
fldcw
enter
test
sub
cs
jmp
ffreep
icebp
jbe
stc
mov
aad
aam
leave
lret
divb
dec
mov
les
inc
mov
loop
test
fistl
les
inc
int
clc
fcoms
push
mov
lahf
jmp
push
out
sbb
repz
mov
jecxz
shl
pushf
arpl
fnsave
mov
data16
jb
sub
or
loopne
shrb
or
loop
test
inc
in
fs
insl
dec
lahf
or
test
jmp
clc
cld
movntps
cmc
je
adc
or
xor
xlat
or
int3
lods
pushf
jecxz
popf
sub
pop
mov
or
stos
aam
push
push
repz
sub
inc
inc
testb
adc
dec
cmpl
imul
js
jge
adc
mov
cmpsl
pop
fdivrs
testb
pop
test
add
stos
addr16
lea
dec
mov
jne
push
and
jo
push
and
jo
jne
leave
fs
mov
loope
or
mov
out
aaa
pop
sbb
leave
or
ja
test
mov
fstpl
pop
cmpsl
ds
dec
sbb
lahf
mov
nop
mov
ret
out
ss
movl
outsl
leave
dec
scas
dec
sbb
adc
cmp
sbb
cltd
movsl
xor
adc
jecxz
cmpsb
test
or
jg
repnz
cli
jl
push
insl
push
mov
ljmp
aad
jo
shrb
fs
add
rorb
push
dec
je
mov
shlb
ljmp
xlat
mov
jle
les
mov
fnstenv
mov
inc
int3
add
xor
xchg
clc
faddl
andb
in
daa
into
mov
es
mov
and
xchg
fwait
cmp
mov
rcrl
test
mov
test
in
test
push
scas
jp
repnz
dec
test
inc
scas
sbb
cs
stc
cltd
mov
adc
mov
inc
pusha
dec
or
ja
dec
cli
jbe
iret
call
insb
push
mov
sub
dec
dec
les
xor
jno
jo
mov
scas
dec
stc
sub
xor
adc
dec
sbb
shrl
jecxz
push
adc
lds
mov
add
cli
jbe
cmp
mov
orb
jecxz
adc
mul
rcr
jae
xchg
icebp
pop
fdivrl
ss
inc
stos
xor
lcall
insl
dec
ret
jecxz
jl
cmp
and
jae
in
push
sub
add
push
sub
fdivrs
push
or
lret
mov
mov
fwait
cli
insb
hlt
xor
add
cmp
ret
dec
dec
xor
addr16
mov
cmp
sub
pop
fldcw
sarl
jne
mov
bound
ret
lcall
int3
mov
movsl
mov
shl
sbb
clc
mov
jmp
cmp
cmc
and
aaa
mov
pop
mov
repnz
push
push
adc
fcomps
and
hlt
xor
jp
lahf
aad
push
imul
mov
in
xor
test
pop
and
dec
mov
dec
inc
pop
out
adc
pop
sbb
stos
fiadds
pop
sbb
mov
shll
je
sbb
popa
adc
pop
dec
jne
adc
int3
pushf
loopne
mov
loopne
dec
shrl
sahf
outsb
ret
sub
xor
les
movsb
dec
and
cmp
cmp
lahf
xchg
mov
mov
fnstcw
or
xchg
jnp
fwait
pop
out
cmp
and
ss
add
cmc
jle
fcomip
add
mov
pop
sub
movsb
add
mov
mov
rolb
pop
and
data16
clc
xor
lret
xor
xor
mov
mov
and
outsb
mov
icebp
fidivrs
dec
pop
pusha
cmp
scas
das
sarb
les
jbe
pand
ss
inc
cmc
lret
dec
daa
dec
mov
cmc
fnsave
mov
lds
jb
jns
outsb
mov
gs
xchg
vdivsd
ja
lahf
loopne
stos
xor
push
add
mov
and
stc
outsl
scas
lahf
xor
mov
lcall
mov
mov
mov
push
jne
subl
fcmovb
cmp
aas
dec
inc
adc
fwait
xchg
lea
or
clc
sarl
ss
adc
mov
mov
stos
jmp
stos
test
es
pop
mov
lock
lcall
imul
lods
adcl
cld
or
mov
add
or
xchg
cmc
mov
cmp
jp
mov
jb
call
cmp
loopne
adc
stos
ds
rep
sbb
cltd
pop
lret
cli
lahf
ret
push
jle
adc
dec
or
imul
jae
push
xor
nop
shl
dec
push
or
fwait
ds
hlt
shr
fcompl
and
sti
scas
push
fdivrs
femms
int
fldenv
cmp
ret
sub
add
imul
xchg
movsb
gs
jbe
loopne
pop
mov
and
cmp
pop
push
faddl
fidivrs
lahf
lret
cmpsl
cltd
hlt
in
iret
inc
adc
je
push
jmp
std
cmpsb
cmp
and
sbb
push
repz
sbb
addr16
stos
sbb
mov
int
mov
std
dec
pop
mov
cltd
testb
cld
orb
push
push
out
xor
cwtl
pop
xchg
lret
or
aad
outsb
mov
inc
divl
loope
adc
cmp
push
cli
jb
sub
push
dec
mov
adc
call
daa
xlat
outsb
push
imul
lods
mov
ret
push
mov
cmp
pop
test
daa
out
cli
pop
xor
lods
shll
js
mov
ljmp
push
shlb
out
cli
in
imul
pop
sub
add
dec
cmp
pop
pop
jno
xchg
repnz
popa
add
lcall
adc
popf
mov
cmc
pop
dec
or
xchg
jb
movsb
stos
js
fnstcw
jge
adc
jp
out
pushf
sub
sbb
pop
scas
xchg
inc
add
xor
into
sub
shll
lock
cs
mov
stos
mov
aas
mov
cmp
and
cli
mov
cmp
inc
in
add
outsb
js
cltd
pop
sahf
pop
test
out
push
cld
mov
inc
mov
jne
shll
inc
and
push
xor
inc
inc
loopne
mov
test
rol
orl
jmp
adc
cmovs
dec
or
cmpsb
ja
clc
and
dec
sti
call
mov
mov
and
pop
aas
nop
lcall
scas
xchg
mov
adc
inc
lds
jno
lock
lods
adc
adc
lahf
sbb
pop
dec
add
sti
and
cmp
add
push
xchg
sti
gs
stos
lds
stos
outsb
decb
ljmpw
or
sbb
sbb
mov
push
jp
cmpsl
lcall
cs
mov
cmp
cmpsl
mov
or
fisttpll
das
add
int
jno
and
mov
and
mov
jno
push
sub
push
or
repnz
mov
pop
leave
repz
lock
add
fcomps
cmp
xor
rorb
test
pop
std
pop
push
daa
out
fsub
pop
and
mov
inc
xchg
ds
jl
or
stos
adc
popa
cld
out
pop
mov
mov
cmp
add
push
and
dec
in
in
pop
adc
dec
sbb
mov
push
ds
sbb
inc
scas
mov
idivb
ljmp
mov
mov
std
push
pop
out
dec
add
mov
push
cli
pop
push
adc
stos
xchg
sub
adc
cltd
fxtract
jp
mov
rclb
adc
iret
loope
xchg
daa
jno
in
inc
push
jmp
sub
imul
xor
je
push
and
ret
ds
dec
xor
ja
xor
imul
inc
aas
add
cmp
imul
popf
push
and
insb
mulb
inc
ljmp
xor
inc
aam
mov
dec
sub
cld
mov
mov
adc
mov
adc
dec
push
mov
add
or
xor
jmp
jl
add
mov
out
mov
test
hlt
jp
mov
dec
test
in
xchg
sub
push
subb
outsl
xchg
inc
mov
lock
mov
ret
jo
mov
jb
icebp
insl
mov
cmc
mov
lcall
ja
int
mov
gs
sahf
je
scas
mov
fldt
call
shl
pop
icebp
xchg
mov
add
mov
mov
and
mov
mov
aaa
mov
xchg
adc
out
arpl
push
inc
imul
shl
pop
jge
das
mov
out
cmp
cli
mov
xor
inc
icebp
test
cmpsl
or
xor
mov
sbb
das
rcr
pop
mov
nop
add
xchg
sbb
add
mov
mov
dec
pop
not
cmp
and
cli
insb
loop
roll
addr16
js
or
cmp
push
adc
push
shll
mov
dec
jno
mov
sub
les
and
sar
stc
fidivs
push
inc
fimull
enter
enter
ja
cmpsl
xor
jns
inc
inc
aaa
sbb
lds
mov
and
sub
add
adc
aas
fmulp
adc
cltd
loope
out
es
jp
xchg
push
sbb
ret
in
jmp
or
adcb
nop
dec
dec
mov
test
ret
sbb
push
es
sbb
movsl
sbb
pop
stos
cmp
je
xchg
clc
outsb
or
gs
inc
dec
inc
push
fs
mov
pop
es
imul
cs
dec
out
sbb
xlat
xchg
test
js
daa
shrl
jle
aam
test
cwtl
lret
pop
lcall
pop
xchg
xor
xor
imul
mov
mov
scas
ljmp
xor
fmuls
aam
inc
mov
push
jae
je
push
adcl
cmp
mov
mov
cltd
sbb
aaa
lods
shrb
add
xor
outsl
jle
cli
hlt
push
push
jne
ret
stos
ret
mov
outsl
mov
loop
xor
test
fisubs
data16
js
scas
das
loop
aaa
shlb
jmp
jo
cmp
leave
mov
pop
fcoml
pop
mov
dec
jb
inc
jp
daa
mov
movsb
rcl
dec
and
push
jno
aas
ret
gs
iret
in
push
mov
xchg
lods
test
in
mov
popa
or
pop
push
mov
xchg
aaa
sub
loope
and
dec
push
cmc
mov
loopne
mov
jbe
cli
loope
sub
out
inc
xor
cmc
in
cltd
les
int3
insl
out
lcall
pop
push
inc
mov
leave
adc
cmp
or
ret
popf
hlt
or
in
xor
lea
push
lahf
jmp
pushf
pop
add
jno
mov
out
sti
dec
dec
pop
pop
jp
sub
dec
jne
repnz
test
insl
adc
inc
inc
xchg
push
inc
test
call
mov
push
cmp
add
ffree
cmpb
dec
sub
adcb
cmpl
cmpsl
iret
rolb
stos
lcall
jg
pop
xchg
pop
ret
jne
mov
fidivl
mov
xor
out
dec
loope
adc
and
pop
fisubrs
sbb
mov
push
cmpsl
pop
aad
loopne
jge
addl
mov
adc
andb
jle
addr16
clc
ds
sub
adc
xor
clc
mov
dec
in
fs
dec
cmpsl
aaa
sub
add
sub
pop
or
jecxz
repz
gs
sub
add
push
fwait
jl
sub
mov
outsb
scas
mov
dec
add
mov
in
outsl
or
test
stos
stos
or
mov
dec
or
push
pop
test
fmuls
fidivrs
xor
mov
scas
push
cwtl
ret
call
out
inc
or
sbb
sahf
mov
inc
mov
je
jg
repz
and
dec
insb
push
lahf
rcr
xor
hlt
add
aaa
mov
push
nop
into
addb
mov
lods
adc
cli
xor
or
movsb
push
jge
mov
jnp
lcall
fcomps
iret
in
mov
dec
xchg
xchg
fiadds
cld
les
lret
jecxz
sbb
adc
call
mov
aas
mov
mov
daa
loopne
dec
dec
xchg
mov
cmp
push
mov
or
add
mov
mov
inc
dec
test
flds
adc
daa
inc
mov
xchg
out
test
ljmp
push
les
xchg
mov
mov
inc
insb
adc
in
pop
fdivl
jae
pop
sub
das
into
outsb
loop
roll
mov
dec
fsubrl
jbe
mov
sbb
data16
push
push
push
sub
and
sbb
incl
inc
xlat
ja
stc
ret
pop
xchg
popa
cwtl
cmc
inc
inc
pop
ljmp
lock
lea
sar
lock
shl
sti
sub
test
sbb
stos
dec
icebp
sub
movsl
icebp
pusha
push
mov
sbb
lea
dec
add
sarl
pop
loope
movsb
push
and
popf
data16
add
dec
jmp
rorl
sbb
repnz
sub
frstor
stos
lea
out
adc
pop
xchg
insl
arpl
jo
leavew
cmp
mov
nop
jg
cmpsb
shll
mov
inc
sub
lcall
add
add
mov
mov
jg
sbb
sahf
inc
notb
lods
lret
mov
aam
push
popa
and
mov
cmpsl
insb
xlat
in
or
flds
rorl
inc
mov
ljmp
je
add
dec
leave
push
push
punpcklwd
sbb
pop
pop
call
in
pop
leave
xor
adc
jae
xor
xlat
dec
push
loope
xchg
push
jae
hlt
cmp
mov
out
pop
test
sub
inc
cmpsl
sbb
mov
xchg
push
shlb
mov
jns
inc
adc
mov
xchg
sub
xor
loopne
add
int3
cmp
jmp
jns
jo
stc
jle
sub
outsl
js
hlt
fnop
sbb
push
lcall
mov
lcall
jnp
push
xor
inc
imul
lds
aad
push
and
lock
or
inc
jmp
dec
xor
mov
mov
jo
pop
enter
mov
jo
adc
xchg
shrl
or
sub
sub
ds
lock
xor
inc
and
ret
mov
repnz
or
xchg
popa
pop
dec
lea
mov
mov
cmp
mov
je
hlt
xor
push
jecxz
push
incl
sbb
mov
mov
sbb
movsb
gs
loop
jmp
add
add
fbld
test
and
addl
lods
stos
adc
jns
mov
movl
inc
mov
arpl
mov
adcl
add
mov
inc
cmp
enter
aas
pop
xor
rcrl
roll
cmp
jnp
loopne
frstor
push
shl
push
sti
adc
mov
jge
out
clc
daa
add
xchg
mov
and
test
cmpsl
aam
xchg
sub
aas
sahf
in
decb
adcb
cli
xchg
movsb
ds
jg
adc
hlt
movsl
ss
xor
aaa
mov
in
sbb
aam
pop
xchg
lcall
or
mov
xchg
fistl
sbb
fbld
and
adc
mov
test
in
mov
inc
test
sbb
jmp
push
pop
pop
inc
fwait
mov
bound
add
add
movsl
xor
ficoms
pusha
into
pop
cmpsb
repz
leave
mov
bound
test
insb
call
inc
and
stos
test
adc
mov
aaa
pop
jo
pop
cmp
rorb
xor
pop
jns
jnp
ds
pushl
sarl
cmpsl
mov
iret
stos
push
mov
dec
andl
and
xchg
adc
inc
in
push
cmp
inc
dec
mov
cs
push
enter
push
int
hlt
ret
hlt
lock
mov
out
jne
int
push
xor
jne
iret
cmp
adcb
test
or
xor
xchg
xor
jns
es
fsub
ds
ret
push
mov
arpl
lret
and
push
pop
add
jmp
shll
jecxz
pop
ret
jne
adc
scas
inc
xchg
xorl
into
mov
mov
and
add
inc
or
ja
xchg
testl
sbb
in
jo
pop
fsts
rcrl
lds
repnz
movsl
inc
and
dec
call
add
jb
shrb
cmpb
mov
clc
dec
push
fmull
mov
in
and
inc
aad
jnp
in
into
pop
mov
xchg
or
xchg
andb
mov
inc
or
ficoml
dec
nop
or
sub
xor
sub
push
aas
das
faddl
and
mov
fs
xchg
rol
cmp
in
ror
daa
adc
ret
mov
or
loopne
test
jne
mov
jg
mov
xor
out
out
pop
add
or
outsl
xchg
fidivrs
inc
fdivrs
push
add
or
mov
sub
mov
addr16
mov
pop
push
ret
das
mov
fs
jb
sub
shr
pop
xor
and
insb
mov
xchg
push
fsubl
cwtl
les
sub
pop
lahf
fbld
mov
out
dec
cltd
ja
ret
mov
insb
sbb
mov
push
pop
xor
cli
jne
mov
sbb
orb
sbb
xchg
adc
pop
ja
jp
pop
jp
pop
bound
fdivs
xor
jnp
adc
test
jge
cmp
mov
add
enter
sub
pop
scas
in
js
je
mov
push
push
sahf
add
imul
xorl
call
test
sub
test
inc
lea
lret
outsb
push
ss
jne
dec
insb
or
mov
sbb
xchg
into
jp
mov
cmpsb
add
rcrl
xchg
or
add
rorl
bound
cltd
out
fadd
stc
test
inc
xchg
xchg
aad
shrb
imul
inc
daa
shrb
nop
popf
dec
movsb
je
push
in
out
lods
xchg
sbb
jge
movsb
arpl
enter
mov
out
out
cli
das
push
dec
add
mov
mov
push
sub
push
ss
rcrb
test
mov
lcall
lock
int3
mov
sub
fists
and
jecxz
notl
adc
push
daa
into
mov
mov
inc
fnstsw
and
mov
jnp
mov
mov
ja
imul
fsubl
adc
iret
inc
js
dec
sub
rcr
dec
stos
movsb
xchg
out
pop
adc
jg
out
popf
jnp
pop
jnp
js
addr16
and
push
dec
aas
jg
je
int3
into
ja
iret
clc
aam
xor
pushf
xchg
and
pop
ret
aaa
push
or
fdivrl
mov
addb
sub
adc
cmp
jnp
lahf
or
rorl
and
push
aas
and
rol
and
cmp
mov
sbb
test
push
sar
sbb
mov
pop
jge
xor
int3
inc
je
aad
enter
iret
popa
imul
scas
add
iret
jae
cmp
mov
add
inc
insl
mov
outsl
mov
les
pushf
sub
cmp
addl
loope
es
dec
mov
sbb
mov
sahf
idivl
or
cmp
cs
fwait
cmpl
jecxz
push
stos
dec
jae
sar
fwait
xor
or
sub
jle
into
lcall
cmp
movsb
xchg
mov
in
sbb
ret
repnz
fdivrs
shll
cmc
jns
cmp
mov
sub
scas
xchg
jo
inc
dec
enter
inc
scas
sub
or
and
or
and
mov
or
mov
fsubp
cs
cmp
push
iret
mov
cld
pop
push
push
and
sbb
jmp
in
mov
or
mov
inc
jns
stc
xchg
adc
test
jmp
lods
mov
push
or
or
in
pop
push
je
cmp
mov
and
or
sahf
shll
test
addr16
jno
push
xchg
cmpsl
xchg
add
imul
adc
adc
xchg
sahf
in
xor
scas
xchg
les
adcb
out
pushf
xchg
je
hlt
test
daa
adc
imul
inc
push
xchg
mov
mov
sbb
outsl
scas
inc
dec
or
adc
or
popf
lods
cwtl
mov
stos
out
into
hlt
stc
inc
outsl
mov
ret
fdivrs
out
pushl
add
push
sbb
pop
jmp
outsb
cwtl
lea
adc
push
or
mov
pop
sub
mov
jns
cmpsl
mov
out
fcomps
jl
mov
and
push
or
popa
pop
fsubrl
mov
enter
sub
fcoms
cmp
add
xchg
mov
scas
les
xor
dec
cmp
pop
inc
hlt
mov
sub
lds
aad
das
xor
mov
mov
mov
sub
in
or
test
inc
or
mov
into
out
adc
mov
loope
cltd
mov
rcrb
cmp
inc
xchg
sbb
bound
xchg
xchg
sbb
insl
stos
pop
bswap
test
arpl
xor
dec
add
xchg
pop
sbb
jns
xor
movsl
mov
xchg
test
xor
inc
scas
mov
ffree
ljmp
mov
mov
jno
or
add
mov
ja
xor
test
jae
inc
lret
jl
mov
xor
dec
sub
sbb
add
ljmp
sahf
add
push
mov
mov
or
in
lds
inc
jl
push
pop
roll
fisubrl
insb
cmp
je
lret
sub
push
mov
cmpsl
dec
pushf
or
out
movsb
adc
pusha
dec
ret
add
dec
mov
fsubrl
data16
dec
out
sub
adc
mov
inc
mov
push
std
lods
and
pop
push
inc
mov
inc
xchg
cwtl
cmp
xchg
push
stc
lahf
jle
push
mov
sub
inc
nop
inc
xchg
cmpsl
popf
sahf
push
imul
jecxz
les
add
xchg
mov
mov
mov
xchg
and
mov
sbb
les
jecxz
adc
add
lods
push
loope
xor
cld
add
dec
mov
pop
mov
xchg
pusha
fnstsw
mov
rcrb
adc
sti
rorb
bound
ret
sub
sahf
pop
sub
inc
outsb
inc
sahf
lds
call
pop
and
mov
lret
cmp
mov
mov
pop
in
bound
and
sarl
iret
cmpsb
movsl
pop
push
pop
push
scas
dec
aam
gs
sti
clc
push
ss
js
pop
mov
in
or
aas
hlt
test
outsl
lock
push
mov
mov
cwtl
orl
push
ljmp
sub
or
add
popf
stos
mov
daa
pop
jp
mov
push
mov
stos
into
mov
popf
es
in
add
xor
jbe
and
xchg
dec
daa
lahf
jnp
xor
jle
xor
or
add
jmp
scas
cmp
hlt
xchg
out
xor
test
jae
dec
stos
ds
ljmp
inc
sub
rcrl
out
ret
mov
sub
or
fsub
cmp
sbb
dec
pop
inc
mov
lea
cli
cwtd
fnsave
and
push
mov
inc
sub
bound
xchg
mov
call
xchg
mov
cmp
xor
push
xlat
jle
add
call
jno
sbb
nop
mov
movaps
and
mov
in
fs
movsb
sbbl
mov
stos
mov
mov
clc
dec
pop
adc
push
ja
hlt
cs
and
sbb
cmp
leave
int3
mov
test
scas
add
and
icebp
push
fldcw
push
js
mov
jnp
xorl
sarl
stc
loop
fwait
push
ja
pop
testl
insl
push
cmpsl
arpl
inc
inc
xor
xor
hlt
jmp
push
lret
lods
adc
xchg
push
addl
arpl
sti
mov
xor
cs
adc
mov
ds
fcoms
mov
cmp
pop
pop
sub
rclb
scas
cmp
sbb
call
inc
inc
shl
test
shll
je
ficomps
insl
sub
push
dec
fstpl
and
aas
xchg
sbb
int
mov
lock
gs
add
and
insb
mov
nop
and
mov
sub
sbb
jmp
movb
and
cmpsb
pop
fwait
pop
out
jecxz
mov
jno
enter
pop
inc
push
arpl
lock
ja
xchg
sbb
jbe
inc
cs
inc
inc
scas
add
sbb
inc
daa
jecxz
test
fdivrl
mov
scas
imul
jmp
arpl
sbb
cld
sub
xchg
and
ret
cmp
out
out
mov
rorl
dec
int
inc
movsl
sbb
mov
adc
push
inc
pop
push
mov
add
pop
lea
mov
push
xor
add
push
xchg
int3
cld
scas
add
out
movl
mov
lea
and
cmpsb
pop
push
mov
add
gs
xchg
and
xor
movsb
xchg
addr16
movsb
dec
je
mov
xor
loop
mov
fldln2
and
cli
push
jo
push
sbb
mov
rorl
mov
inc
pop
hlt
mov
test
std
mov
popf
outsb
jp
scas
or
push
cmp
pop
push
adc
cli
lcall
jbe
add
es
inc
clc
sbb
lret
sbb
loop
or
out
mov
nop
lahf
mov
sahf
loopne
icebp
sahf
sahf
rclb
mov
inc
adc
cwtl
idivb
cwtl
inc
aaa
jmp
pop
inc
pushl
sbb
jmp
jecxz
adc
sub
sbb
clc
jmp
mov
daa
add
icebp
lret
jns
xor
test
push
aad
sub
jge
sub
nop
add
adc
lock
mov
rolb
clc
loopne
icebp
cmpsl
loop
popa
push
adc
xchg
mov
imul
push
adc
cmp
outsl
enter
ljmp
fisubrs
xchg
inc
fwait
stc
lahf
inc
pop
pop
push
test
outsl
arpl
lock
sub
jae
pushf
xchg
insb
add
push
in
loopne
nop
cmp
cmc
pop
and
test
push
stc
movsl
jp
add
ljmp
dec
movsl
adcl
sbb
cmp
dec
rcll
aam
leave
lods
jmp
mov
pusha
mov
xchg
icebp
in
pop
sub
and
xchg
out
push
and
xchg
cli
mov
aam
adc
xchg
movsl
pushf
hlt
mov
outsb
sarb
shlb
xchg
inc
aas
dec
mov
negb
xor
aad
or
rorb
mov
test
test
and
or
clc
pushf
arpl
cmp
mov
loope
testl
in
test
mov
adc
pop
cmpsl
or
jae
cmpsl
adc
mov
inc
or
jmp
out
mov
fwait
in
push
inc
mov
in
jbe
cli
clc
rorl
cmp
inc
adcb
push
movsb
sub
fidivs
fmuls
mov
sub
inc
push
movl
xor
jmp
mov
mov
dec
cmp
lds
in
lret
dec
adc
aam
rorb
push
jb
inc
or
scas
dec
inc
lea
pop
fiadds
xor
sub
je
pop
ret
mov
jge
sbb
mov
sbb
inc
enter
enter
movsl
pop
cs
inc
in
mulb
or
sub
int3
mov
rcr
lcall
push
in
shrw
jno
fs
push
sbb
and
lret
aaa
dec
xor
jge
mov
add
inc
dec
scas
fnsave
xchg
lcall
xchg
mov
mov
movsb
push
clc
cltd
inc
push
in
mov
cmp
mov
test
pop
pop
clc
fwait
mov
fwait
xor
jno
out
das
mov
mov
adc
dec
jg
mov
mov
ret
ret
imul
xchg
push
pop
pop
and
movsl
mov
fadd
mov
sbb
xchg
jns
mov
inc
cmpsl
mov
sub
xor
and
lea
repz
adc
and
daa
stos
dec
adc
pop
mov
and
mov
imul
aaa
call
cli
push
dec
xchg
dec
jecxz
lahf
xchg
pop
movsb
ret
add
and
push
xchg
mov
jle
push
mov
inc
mov
hlt
inc
dec
movsl
inc
push
test
jo
out
lcall
ss
inc
or
lahf
sub
push
fcompl
pushf
push
cli
jl
push
dec
cmp
add
ret
ret
repz
add
ret
sbb
stos
test
jg
jg
outsl
incl
mov
cli
adc
mov
aas
dec
ret
xlat
fs
aas
mov
and
mov
pop
cmc
dec
stos
shlb
int
adc
mov
mov
dec
push
inc
push
cs
mov
pop
inc
inc
std
xor
xor
ds
adc
dec
jnp
mov
mov
or
ds
push
shll
test
into
imul
sub
push
nop
inc
xchg
iret
push
cmpb
or
push
jle
shlb
add
divl
cmc
and
or
test
push
ret
jae
xchg
cmp
movsl
xchg
in
pop
gs
cmp
cltd
out
push
pmullw
in
pop
jne
push
cmp
out
adc
jb
mov
aad
sub
push
jo
pop
xchg
test
xor
lret
dec
inc
push
out
call
leave
aad
pushf
cmpsb
rcll
aas
pop
popa
sbb
jns
dec
xchg
pop
push
fwait
bound
lahf
push
add
mov
lock
inc
ficomps
or
outsl
xor
or
pop
dec
lods
xchg
adc
call
dec
add
mov
sbb
out
adc
ss
adc
mov
push
sub
cmp
mov
inc
idiv
add
jmp
std
orl
iret
inc
mov
mov
stos
jg
rclb
add
cmp
adc
loope
out
sub
xchg
adc
mov
ss
jo
aaa
cmc
roll
movsl
cmp
lret
sbb
add
shl
mov
pop
test
dec
enter
and
in
adc
sbb
xchg
dec
or
movsb
push
in
mov
mov
es
add
jne
out
jmp
pop
rcl
scas
mov
test
add
sti
shll
repz
or
push
loop
movsb
mov
adc
pop
sub
sti
push
addr16
test
loope
cmp
fcmovnu
cmpsl
or
int3
push
ret
jae
or
sti
clc
mov
and
xchg
sbb
hlt
cli
cmp
ljmp
int3
and
ret
popf
loop
daa
aaa
lahf
nop
out
movsb
lcall
pop
nop
inc
bound
fstp
mov
lods
or
stos
into
jne
movl
dec
adcl
sub
adc
out
inc
push
xchg
inc
mov
mov
aas
sahf
xchg
jns
xchg
push
daa
pop
sub
fdivrs
fsubs
in
and
mov
aas
orl
lds
gs
js
in
sbb
mul
push
sbb
mov
lret
lcall
xchg
scas
nop
mov
xor
stos
or
jne
negb
inc
or
rcr
xor
mov
cmpsl
int3
lods
repnz
fs
cmp
mov
into
imul
shrd
ret
insl
leave
mov
cs
pop
xorb
in
stos
or
pop
ss
arpl
pop
add
jbe
stos
aas
aad
cli
call
or
pop
scas
mov
sbb
mov
adc
popa
adc
lods
cmp
stc
pop
dec
shll
fcmovb
mov
out
xlat
imul
pushf
sub
in
jg
hlt
mov
push
sub
xchg
mov
popf
mov
add
add
adc
jbe
add
in
sbb
fidivrl
adc
inc
jb
fwait
mov
out
leave
leave
testl
bound
jmp
pop
xor
scas
loope
mov
inc
int
ret
mov
adc
cmp
stos
imul
mov
or
xor
cmp
in
and
in
mov
shrb
mov
test
inc
andl
jno
sub
out
xor
out
jae
pop
jp
outsb
fidivs
sbbb
adc
dec
mov
mov
lods
jp
lds
mov
mov
repz
xchg
pop
les
pushf
mov
add
jge
xor
sub
push
xchg
and
jne
lods
mov
lock
lcall
push
shl
jae
adc
or
stos
ljmp
ljmp
cmp
leave
add
sbb
repnz
orb
ds
std
movsb
pusha
sub
loope
inc
dec
je
cmp
jae
pushfw
jl
daa
sbb
movsl
lret
in
pop
pop
arpl
jno
jo
jg
or
pop
adc
out
fisubs
inc
cmp
add
movsl
and
popa
mov
daa
jl
cmp
sub
push
cmp
push
xlat
cmp
fcmovbe
pop
fimuls
ret
lods
data16
sub
leave
jmp
mov
cmpsl
ss
sub
cltd
push
push
push
movsl
scas
arpl
xchg
inc
pop
xor
lcall
test
jl
xchg
pop
add
js
ret
andl
shlb
testb
and
push
sub
lods
movsb
popf
pushf
dec
or
aas
pop
outsl
pusha
mov
or
fdivrl
lahf
inc
jl
pop
inc
cltd
adc
icebp
lret
mov
fidivrs
stc
rclb
nop
sbb
popa
and
loope
lods
insl
inc
ljmp
dec
and
nop
sbb
sub
jo
adc
aad
sub
ret
shr
inc
sbb
in
mov
jmp
iret
jbe
mov
cmp
mov
jp
or
popa
lret
add
clc
or
push
jbe
ret
fdivr
xchg
mov
adc
pop
loope
pusha
pop
lcall
shll
cld
popa
push
outsb
add
loop
movsl
cli
cmpb
outsl
insl
pusha
pop
mov
movsl
xor
movsb
adc
and
cmp
adcl
or
test
mov
test
popa
inc
mov
sahf
sub
push
lock
aam
outsl
xchg
adc
cmp
ret
or
or
cs
negl
imul
mov
jo
inc
mov
pavgw
fwait
adc
iret
push
movsb
jg
mov
jo
mov
mov
xor
jae
mov
ljmp
mov
push
outsb
jp
xor
shlb
pop
or
les
lret
in
adc
cmp
jnp
rcll
cld
pop
adc
fldt
push
inc
mov
xor
jno
ljmp
sbb
loope
cmp
fwait
sbb
xchg
adc
lret
movl
stos
cmp
sbb
dec
push
cli
xchg
jnp
fidivrl
sub
iret
cmpsl
orl
pop
imul
sbb
into
sub
cmpsb
cmc
push
xor
mov
cmpsb
cli
lods
popf
in
adc
jecxz
cmp
pop
jns
pop
mulb
pusha
cs
test
pop
cltd
cmpsl
dec
jae
ljmp
ja
popa
sub
fadd
adc
adc
lret
pusha
fwait
shll
or
clc
fmulp
rcr
insb
adc
cmp
inc
rorb
add
add
in
and
into
mov
xor
dec
inc
lods
or
sub
gs
ret
addr16
int3
or
mov
mov
iret
data16
push
mov
pop
xchg
out
jg
in
inc
lds
xchg
mov
movsb
mov
fldl
xorl
lret
mov
ret
mov
shrb
push
fmull
movb
pop
enter
xlat
mov
and
xchg
adc
mov
lods
dec
mov
ret
ja
test
test
add
xor
xor
ds
pushf
jbe
ret
push
xchg
filds
jbe
iret
loop
mov
pop
mov
cmp
push
push
and
mov
xchg
loop
mov
xor
pop
add
into
inc
cmpsb
rcll
mov
out
pop
addr16
xchg
jo
dec
xchg
fidivs
js
loope
leave
ljmp
mov
mov
mov
inc
push
mov
jle
aaa
push
jb
mov
sbb
push
xchg
dec
fdivrs
cli
scas
jb
cmp
xor
nop
stc
dec
fstps
mov
inc
les
cmp
push
mov
cmp
mov
fldcw
lds
shr
sar
pop
rolb
jb
sub
imul
cmp
dec
pop
loop
and
xor
mov
cmpsl
xor
in
xor
inc
and
decl
push
nop
cmpsl
mov
sbb
cld
repz
mov
mov
imul
jnp
iret
or
pop
sub
xorb
mov
adc
mov
jle
outsl
push
addb
jl
mov
lods
je
insb
jmp
mov
mov
xchg
adc
stos
mov
and
push
sbb
leave
xor
mov
or
es
jmp
cli
mov
pop
dec
pop
sti
int3
mov
xor
mov
mov
cmp
cmp
cmpsl
jns
inc
fstps
push
xchg
sahf
pop
cld
mov
fwait
leave
fcmovnu
mov
sahf
ret
mov
dec
aas
lret
mov
mov
adc
and
jb
pop
test
fwait
xlat
pop
js
stos
xor
inc
outsl
cmp
dec
mov
iret
pop
ljmp
mov
xchg
inc
rclb
mov
push
mov
mov
jg
std
mov
cmp
shll
jl
rcll
sub
sbb
idiv
ficompl
push
mov
pop
movsb
idiv
and
xchg
fdivrs
stc
sbb
fisttpll
stos
in
pop
sbb
push
fdivrp
lcall
fbstp
cmp
mov
mov
daa
mov
adc
aad
jne
and
sbb
sbb
pop
mov
pusha
push
test
mov
in
jle
movhps
lret
adc
push
add
imul
xchg
aam
dec
cli
dec
or
cmc
outsl
inc
xchg
cmp
cmpsl
jne
hlt
push
mov
fstpl
test
ret
mov
fs
jle
fsubl
outsb
pop
lock
mov
sahf
xchg
mov
and
in
int3
cmp
mov
es
hlt
cmpsl
mov
popa
push
jle
fdivr
ljmp
scas
push
xor
sub
lret
and
sbb
jae
out
adc
lret
cmp
jo
and
imul
cwtl
xchg
ss
and
js
out
inc
movsb
mov
jae
mov
leave
add
clc
adc
aad
push
add
orl
imul
cmpsb
fdivrs
cltd
insl
jl
add
add
push
mov
fs
ftst
iret
cltd
mov
mov
jnp
adc
clc
add
push
es
das
xlat
bound
call
shrb
and
pop
dec
xchg
inc
movsb
add
rol
and
fisubl
pop
repnz
loop
in
mov
je
mov
inc
mov
sub
mov
adc
ja
mov
popa
push
test
push
adc
rolb
or
neg
mov
fwait
jo
mov
push
addr16
pop
addr16
fsts
adc
mov
ret
addb
push
divl
sbb
mov
mov
push
add
mov
test
xchg
in
cmp
dec
jae
mov
in
pop
lret
dec
jmp
shrl
insb
aam
mov
push
pop
sub
out
sti
mov
inc
out
pop
mulb
cltd
leave
je
ss
cmpsb
leave
mov
clc
xchg
or
pop
addr16
inc
cmp
xchg
pop
and
mov
lahf
pop
xor
das
mov
add
cmpsb
dec
sti
lods
mov
jae
out
mov
icebp
fcomip
dec
pop
xor
dec
lods
push
and
les
and
inc
and
or
dec
scas
lret
cmp
and
sub
sbb
mov
hlt
in
test
lock
data16
rclb
lods
jmp
test
xchg
mov
call
mov
xchg
ficompl
test
inc
mov
ja
fdivrs
rcll
in
inc
sahf
movsb
fstl
cs
ljmp
inc
cmp
mov
push
in
cmp
aaa
cli
divl
dec
push
idiv
add
and
xchg
sbb
push
or
aad
dec
stos
lret
adc
lds
out
notb
sahf
cmp
push
mov
cli
cltd
xor
and
lret
cmp
push
fistpl
test
xchg
movsb
cmp
enter
jecxz
in
ss
mov
add
lcall
mov
xchg
lcall
or
leave
xor
lret
test
sbbl
sub
mov
push
and
idivl
mov
inc
imul
jmp
int
jmp
fsubrs
iret
packssdw
push
scas
inc
aas
mov
int
and
lret
das
pop
ret
jmp
lret
xchg
shrb
in
xor
xor
repz
mov
movsb
cmp
stos
xchg
divb
scas
test
xchg
les
sbb
popa
inc
push
inc
push
rolb
stos
xchg
movsl
xchg
xor
repz
fwait
scas
push
xchg
sub
in
mov
mov
add
jne
dec
cmp
push
and
scas
pushf
fidivrs
imul
pop
out
jns
sub
mov
das
pop
std
cmp
faddl
sbb
jmp
dec
sub
mov
mov
out
jp
stos
sub
aam
inc
mov
into
pop
iret
fbld
jmp
out
jo
rcr
sbb
and
jb
sbb
jns
sbb
popf
mov
jle
fs
pop
aad
jecxz
mov
sub
jl
stos
repnz
fimuls
sbb
addr16
cmp
dec
cmp
mov
or
sbb
add
inc
xchg
xor
mov
adc
dec
sub
jp
in
inc
mov
sbb
add
addr16
pop
jns
push
jp
pop
cmp
das
pop
pop
dec
xchg
cmp
shlb
adc
loop
push
test
sub
push
clc
mov
rclb
out
call
pop
xchg
movsb
mov
adc
push
call
scas
mov
ret
sub
aas
test
aam
movsb
pusha
inc
mov
ja
xor
push
in
jge
xor
push
mov
mov
push
fbld
mov
stos
daa
push
pop
cs
popa
xchg
addl
cs
cmp
insb
sti
iret
and
add
add
data16
xor
pop
adc
aam
jne
movsb
ffree
insb
iret
sub
lret
xor
mov
aad
mov
popf
sub
cmpsb
cld
jle
outsl
cltd
out
pop
data16
jno
adc
js
ds
xor
xchg
loopne
push
sub
insl
adc
es
xor
and
pop
or
lcall
stos
in
xor
imul
loop
fs
xor
pop
ja
jb
push
lods
sbb
stos
mov
jo
mov
sbb
add
sbb
mov
inc
fwait
lods
mov
fs
xlat
mov
add
or
test
shll
lcall
cmp
data16
out
ret
loopne
jae
sub
inc
dec
sbb
push
lds
cmp
lods
and
mov
mov
sbb
insl
push
das
xor
ja
inc
mov
add
mov
call
pop
add
test
xor
pop
cmp
sub
jne
fwait
outsl
gs
pop
xor
jnp
call
jns
rcll
cld
rorl
cmp
lcall
add
add
pop
pop
movsl
test
xchg
xchg
inc
pop
iret
jle
jp
sbbl
out
loope
jo
test
sti
sbb
sub
or
pop
fs
dec
add
push
mov
push
test
or
lret
push
xor
mov
push
vxorps
mov
cmp
out
cli
ss
sbb
jnp
dec
cmp
clc
mov
or
xor
mov
mov
inc
loopne
in
incl
pop
mov
push
sbb
inc
jle
pushf
in
stc
xchg
out
test
roll
out
sti
in
xorl
arpl
cmp
bound
dec
repnz
nop
dec
jnp
push
push
loopne
lock
xlat
int
xchg
ds
mov
inc
xchg
pushf
mov
push
out
movsb
idivl
jl
push
push
push
mov
aaa
xchg
movaps
inc
push
aad
inc
xor
iret
insb
or
rcrb
les
dec
packsswb
xchg
add
cmc
cmpsb
loopne
mov
xchg
cld
gs
out
mov
stos
jle
xchg
and
cwtl
and
jl
mov
xor
pop
xor
cltd
sub
add
mov
nop
cmpsl
mov
adc
jge
loopne
push
fists
data16
xchg
and
fisttpll
push
in
cmp
jge
add
cs
sub
dec
test
sbb
scas
aas
or
mov
inc
in
push
cmp
les
mov
cmp
xchg
addr16
dec
sbb
aaa
mov
int3
nop
ret
inc
outsb
inc
shrl
add
adc
push
jne
cmp
push
sbb
jecxz
or
dec
ljmp
rolb
subb
cld
les
or
jle
rcrb
jl
lods
dec
xchg
add
xlat
mov
dec
aad
jp
dec
add
jbe
mov
inc
aas
shll
xorb
and
daa
cmp
les
adc
push
jle
roll
push
xor
int3
mov
arpl
jno
out
fadds
xchg
stos
stos
ss
jle
ds
mov
xor
inc
adc
mov
daa
lock
push
mov
movsl
lock
sub
cwtl
in
ljmp
xor
inc
in
xchg
sarb
or
inc
pop
dec
pop
mov
jge
leave
outsl
jns
jbe
and
div
mov
scas
cmp
nop
mov
add
out
inc
xor
sarl
rclb
adc
sbb
faddl
xchg
fld
push
dec
sub
sahf
in
inc
lcall
mov
aam
js
inc
push
add
pushf
cltd
push
pushf
addr16
call
test
aaa
xor
mov
push
adc
xchg
adc
sbb
mov
xchg
mov
dec
pop
loop
xchg
xlat
shrl
cmp
or
mov
inc
sbb
enter
ljmp
fsts
lret
pop
jns
les
pop
out
mov
mov
aam
outsl
pop
sub
jmp
movsb
lcall
xchg
adc
sbb
and
jne
mov
dec
fisttps
scas
outsb
mov
mov
xchg
stos
imull
push
add
pop
loopne
jnp,pt
ror
or
adc
jne
inc
pop
jle
pop
into
mov
or
pop
pop
mov
sti
cmp
sahf
in
add
lret
pop
mov
stc
cmp
lea
shl
popf
aad
cmp
imul
fdivp
and
mov
inc
cltd
inc
mov
add
mov
fidivrs
jmp
cpuid
insb
fadds
scas
negb
mov
jns
dec
outsb
in
pop
fldz
pushf
adc
fsubr
jns
ds
mul
subl
sub
jne
enter
xchg
pop
dec
test
dec
push
jge
cwtl
bound
inc
adc
mov
jne
lds
mov
test
gs
mov
mov
lcall
int
jo
dec
cwtl
xchg
mov
insl
and
mov
dec
mov
inc
lods
mov
test
sbb
cmc
fwait
loope
pop
roll
lods
lret
ss
jmp
mov
mov
xchg
push
mov
add
mov
xchg
cli
rcll
xor
xchg
pusha
mov
sub
outsl
mov
gs
lods
lods
mov
cmp
in
fistl
fisubl
leave
jb
dec
ds
pop
inc
push
jg
jnp
inc
push
imul
lar
ja
xchg
ja
inc
adc
or
cmp
cld
and
or
popf
cmp
cmpsb
xchg
dec
xor
and
inc
js
jnp
ja
mov
faddp
inc
xchg
mov
inc
ljmp
sar
fildl
loop
dec
stos
nop
jge
cmp
mov
add
ds
bound
adcl
je
mov
addb
sub
xor
imul
lahf
setb
xor
inc
scas
inc
pop
mov
int3
mov
mov
stos
jnp
mov
imul
icebp
mov
cmpsl
sub
insb
mov
in
je
addr16
out
sti
cmp
jb
add
imul
mov
lds
sub
insb
and
lahf
sbb
or
scas
push
bound
mov
mov
das
cmp
lods
daa
sub
fsubrp
ljmp
lret
icebp
test
enter
add
mov
sbb
jb
pop
mov
rolb
sarb
mov
add
xor
pop
sbb
push
movsl
in
pop
adc
je
lock
repnz
loope
or
inc
jle
sahf
jge
stos
push
jne
in
jle
jmp
test
xlat
add
jae
bound
adc
push
dec
xchg
arpl
test
mov
jl
divb
add
xchg
jnp
psubsb
mov
and
sti
pop
in
dec
pop
ret
cmp
in
mov
xchg
cmp
mov
adc
dec
aas
xorl
mov
cmp
pop
imul
stos
fidivrs
jne
mov
sbb
mov
aad
lds
aad
sti
imul
das
and
xchg
pop
sbb
popf
mov
test
and
sahf
or
push
mov
push
movsl
add
daa
push
aad
fnstenv
push
push
cs
les
dec
xchg
dec
jnp
xor
je
jns
into
mov
inc
pop
cli
push
gs
cmpl
mov
pop
push
cmp
scas
lock
ss
mov
mov
loope
mov
cwtl
test
or
jno
cmp
inc
imul
xchg
lret
mov
scas
inc
cmp
shl
scas
push
push
cmpsl
inc
mov
in
jp
flds
repz
cmpsl
cmc
mov
mov
pop
pop
sbb
sub
jp
outsb
nop
mov
ret
push
xchg
adc
mov
sar
bnd
add
cmp
add
loopne
cwtl
push
sti
sbb
nop
sbb
mov
es
xchg
daa
add
fiaddl
lahf
xor
mov
xor
arpl
rcr
lods
mov
pop
lds
cmp
xchg
cmp
jo
jbe
cli
ljmp
clc
andl
jg
jp
cmc
lock
faddl
test
dec
mov
sarb
xchg
adc
push
int
int
adc
lcall
dec
pusha
out
xor
inc
xor
rcll
mov
push
pop
pop
mov
dec
or
out
pop
sbb
adc
cmp
sbb
dec
lahf
std
mov
in
or
mov
and
sub
imul
lods
lods
dec
jnp
jnp
xor
stc
inc
cwtl
bound
stc
scas
adcl
leave
cmp
mov
pop
lret
push
adc
mov
mov
js
test
xor
call
mov
add
or
push
or
sub
or
push
sahf
push
mov
fmuls
sub
test
out
push
adc
andb
pop
popa
sha1rnds4
sbb
dec
or
xchg
movsl
cmpsl
xchg
sub
clc
sbb
mov
arpl
lods
mov
add
xlat
and
dec
sub
test
mov
in
ret
ljmp
pop
outsb
push
lods
dec
cwtl
push
sahf
mov
sbb
loop
push
push
sub
int3
mov
mov
outsl
pop
fists
cmpb
in
xchg
jecxz
and
daa
sub
add
cmpsb
lea
shlb
mov
aaa
jno
clc
push
sbb
subb
pop
mov
lret
ds
jbe
dec
jnp
test
xchg
test
xor
push
outsb
scas
and
xchg
mov
stos
mov
dec
stos
mov
xor
cmp
push
jae
out
or
pop
add
rcl
outsb
xor
mov
fnclex
lds
sbb
xor
pop
xor
in
pop
lcall
push
push
ds
cmp
mov
pop
in
xchg
mov
leave
lret
orps
cli
das
adc
cmp
in
stos
inc
shrl
test
jns
add
in
fwait
mov
push
xor
xchg
lret
jns
and
insb
jmp
adc
pop
lcall
lods
sbb
ffreep
sbb
push
inc
insb
into
pop
subl
push
loopne
icebp
inc
iret
test
pushf
sbbb
push
sub
add
nop
loopne
mov
repnz
lahf
fiadds
test
data16
jmp
out
add
pop
xor
cli
sbb
imul
add
inc
jae
adc
jecxz
loop
aam
sub
icebp
sbb
or
jle
push
add
leave
dec
inc
jecxz
leave
cmp
xchg
sti
xor
pop
pop
cmpsl
lcall
sbb
data16
jnp
test
ret
repz
popf
dec
or
dec
add
cwtl
sti
jne
xlat
shr
mov
ljmp
gs
mov
xor
xor
popa
xchg
scas
stc
shr
sub
mov
scas
push
dec
out
mov
lret
popf
jge
or
xchg
fisubs
push
lcall
adc
push
mov
sub
roll
rclb
addb
dec
arpl
sbb
sbb
or
repz
and
icebp
aaa
js
mov
adc
cwtl
popf
xchg
sbb
adc
stc
add
cmpsl
lahf
add
add
push
rcr
mov
das
loopne
cmp
push
daa
or
adc
cmp
sbb
dec
out
pop
pop
mov
ficoms
mov
daa
or
pop
fldt
les
ret
out
mov
insl
or
stos
push
jle
jge
mov
push
mov
jecxz
loopne
jmp
ss
jle
rep
and
imul
out
or
or
jmp
xchg
add
or
xor
outsb
pop
sbb
xor
jg
mov
push
pusha
in
pop
lock
mov
and
add
mov
addr16
sti
mov
testb
mov
pop
into
subb
and
lret
mov
push
xchg
jne,pn
and
mov
cmp
sahf
sarl
testl
jns
jno
mov
mov
nop
negb
xor
addr16
gs
and
outsl
faddl
cmp
xchg
xlat
mov
or
mov
std
dec
mov
mov
jbe
orb
stc
fstpt
divb
dec
sub
shr
fcoms
fisttpll
popl
lods
lock
and
push
mov
fsubrl
addr16
aam
inc
add
mov
out
add
dec
or
add
insl
push
icebp
fldcw
pop
cmovo
cltd
dec
in
mov
fbld
fucomp
push
add
sbb
test
jo
cmp
mov
mov
xchg
lds
xor
and
jl
sub
rcrl
in
roll
dec
jae
pop
int3
adc
popa
jo
sub
sti
pop
pop
cmpsl
and
hlt
inc
mov
sahf
mov
into
push
lods
cld
movsl
pop
cmp
in
mov
in
adc
leave
push
xchg
mov
mov
mov
cmpsl
jae
dec
stos
arpl
das
lds
test
sbb
aaa
lds
stos
pushf
mov
lds
call
subl
push
pop
fstpt
sti
push
push
push
out
cld
mov
add
pusha
jp
mov
lret
outsb
adc
mov
out
lock
fiaddl
idivl
push
fidivrs
fistps
and
andb
jl
lahf
add
mov
ljmp
stos
mov
mov
les
shr
in
xchg
gs
idiv
sub
inc
xchg
sbb
pop
inc
dec
dec
xchg
dec
and
out
xchg
imul
xchg
jmp
mov
adc
lods
jae
call
fsubs
xchg
cltd
add
jae
add
mov
in
pop
adc
sbb
adc
or
icebp
in
stos
les
test
scas
add
fiaddl
xor
xor
mov
ret
push
cmpsb
decb
inc
cmp
mov
pop
mov
pop
daa
mov
xchg
out
cltd
mov
loope
jns
adc
xchg
ss
jmp
push
out
mov
inc
sbb
andb
mov
lock
sub
dec
into
popf
cmp
sbb
sbb
mov
leave
scas
cltd
leave
clc
jb
mov
imul
mov
cltd
pop
xchg
cmp
aad
and
lods
push
mov
test
shrb
xchg
popa
mov
cltd
test
mov
sbb
lea
inc
lds
cmpsb
das
testl
fsubl
in
sbb
pushf
push
push
inc
cmp
sbb
push
mov
mov
cwtl
jmp
out
idivl
sarl
faddl
lret
push
in
push
pop
repz
xor
mov
fcos
je,pn
dec
fidivl
out
lret
push
sbbl
lea
and
bound
cld
stc
inc
or
xor
daa
add
jb
repnz
or
out
scas
gs
cmp
clc
cmp
test
pop
add
mov
enter
in
repz
mov
inc
jl
insb
pusha
mov
cld
sahf
mov
pop
cltd
add
pop
ljmp
dec
addb
je
rcl
mov
cmc
pop
mov
xchg
inc
pop
pop
int
fnstenv
mov
int
cwtl
mov
mov
lock
or
lea
xchg
xlat
ss
jo
lcall
dec
mov
xchg
jnp
fmuls
sti
ret
in
loop
test
mov
mov
xchg
rorb
in
sub
jmp
inc
sub
aas
jo
arpl
lret
cmp
repz
dec
xchg
jo
xor
cltd
fnstenv
xchg
xchg
pop
cmp
lea
push
insb
aad
push
rcll
dec
xchg
ds
mov
mov
dec
mov
ret
jg
jle
mov
sbb
xor
dec
mov
subb
and
test
out
pop
dec
push
adc
das
movsb
rcrb
es
test
jmp
sbb
fnstenv
pop
fwait
adc
test
xchg
pop
cmp
out
adc
xor
std
or
fcomi
mov
jl
imul
scas
ds
or
dec
add
xchg
stos
lahf
daa
dec
shrl
xchg
xlat
lods
dec
imul
pop
das
sar
sbb
jp
push
jae
roll
ret
dec
nop
shr
jecxz
mov
cld
and
push
jp
out
xchg
xor
mov
xor
sub
mov
lcall
mov
cld
and
aad
cwtl
fisttpl
xchg
ret
push
lret
pop
rcrl
xlat
ret
xor
or
loopne
in
mov
jno
mov
cmpsl
jnp
mov
dec
xor
push
jge
ds
pop
icebp
push
adc
push
std
std
aam
imul
mov
arpl
test
pop
mov
jnp
lock
in
cmp
ds
xchg
jl
rcl
or
aam
cmp
outsb
pusha
mov
sbb
dec
add
aam
loop
pop
lret
adc
rorb
cmc
pop
inc
rolb
data16
sbbb
out
pop
inc
popa
je
push
ss
idivl
cmp
test
mov
pop
inc
jle
push
push
test
jno
cs
rolb
lea
or
and
cli
push
enter
sbb
cmp
sbb
pop
sahf
clc
insl
pop
cmp
les
and
adc
fildll
adc
ss
scas
in
ljmp
cmc
xor
xchg
andb
mov
lods
scas
or
jne
nop
dec
lods
lcall
inc
lahf
add
jecxz
int
mov
xor
inc
adc
mov
mov
push
mov
inc
or
pop
ficompl
inc
sbb
cmp
inc
fisubrs
ret
lret
subl
and
mov
push
dec
dec
call
add
call
fisttpl
inc
pop
stos
mov
xchg
jo
lea
sub
shll
inc
movsl
dec
cmp
push
cmpsl
test
cli
xchg
pop
mov
jmp
fldt
jae
ljmp
cmp
adc
jle
xchg
sarb
loope
nop
pop
dec
or
or
out
push
dec
outsl
lods
addr16
xchg
cmp
sbb
cmc
andl
fidivl
pop
mov
xor
sahf
hlt
mov
js,pt
in
jo
xchg
orb
mov
cli
lea
popf
mov
xor
iret
ds
sub
xor
push
mov
divl
out
add
and
pop
push
jmp
ffreep
lret
imul
sub
daa
mov
fnstsw
adc
cmp
loopne
dec
jg
sub
xchg
xchg
pop
cmp
lods
bnd
rcll
fldenv
sar
aas
mov
test
pop
pop
negl
mov
test
adc
adc
incw
push
fnstcw
push
lcall
jl
outsl
in
cmp
xor
repnz
lcall
sub
jne
lahf
xchg
int3
jnp
fcoml
jns
fistps
mov
cli
pop
bound
shrl
cltd
cmp
add
jmp
in
inc
lahf
mov
imul
lods
call
mov
out
das
dec
movsl
shrb
lods
sbb
lods
sub
xchg
mov
or
mov
and
adc
mov
push
mov
test
jbe
jmp
or
lods
push
popa
loop
cmp
test
sbb
roll
xor
push
shlb
cmp
or
aam
outsb
in
leave
mov
mov
iret
cwtl
add
lea
push
shll
pop
lcall
lods
mov
mov
icebp
sub
ror
lds
push
jg
cmpb
xchg
inc
addr16
outsb
adc
fldl2e
sbb
outsl
jmp
ficoml
fs
pop
out
jmp
sub
xor
pushf
xor
mov
jl
in
adc
or
scas
and
xchg
push
jp
aas
into
push
in
adc
sub
pop
out
mov
lahf
fiadds
shrb
sbb
sub
push
cwtl
lret
movsl
addl
shll
jb
pop
jnp
jne
mov
icebp
and
dec
push
add
add
shl
iret
or
or
js
xchg
and
int3
cwtl
jnp
je
loop
imulb
xchg
std
fcompl
icebp
clc
cmp
hlt
out
mov
xchg
inc
call
out
adc
push
mov
lea
sbb
jns
jnp
push
stos
jmp
cmc
nop
pop
xchg
sbb
jle
or
ffree
shr
mov
mov
fdivr
mov
mov
push
sub
test
push
push
mov
iret
std
mov
xchg
jno
scas
test
or
inc
adc
add
sbb
and
pushf
mov
pop
inc
in
call
or
pop
mov
enter
in
mov
sbb
mov
out
xor
mov
cmpl
mov
jg
push
loopne
cmp
jl
cld
push
fdivrs
int
adc
daa
pop
jmp
loope
and
pop
or
aas
jle
ds
lret
mov
xchg
or
sub
pop
loope
inc
adc
push
xchg
push
out
mov
mov
cmp
out
jbe
adc
xchg
dec
mov
cld
xor
out
adc
ljmp
adc
push
adc
dec
cmp
scas
test
inc
and
dec
dec
es
sarl
stc
add
in
stos
add
xor
mov
cmp
test
cmp
cmp
in
inc
mov
imul
subl
pop
ljmp
lea
pop
into
clc
int
fsts
adc
pop
xlat
xchg
shll
pop
mov
aas
pop
out
xor
lds
cld
lds
lods
inc
aaa
testb
add
jge
icebp
call
mov
movsl
inc
mov
xchg
mov
inc
or
inc
stc
aam
mov
lret
jno
dec
insl
sub
xor
jb
imul
mov
aad
or
testb
jbe
xchg
lret
in
xchg
sbb
jne
sub
xor
aaa
sbb
pop
notl
rcll
and
lcall
cltd
mov
call
cmpsb
mov
sub
cli
jmp
ficomps
or
lods
xchg
scas
mov
test
addl
ss
xchg
sbb
arpl
movl
push
aaa
dec
adc
shl
cmc
rorb
jecxz
and
sbb
pop
cmc
arpl
xchg
mov
hlt
cmpsl
int
fildl
jbe
jmp
aas
sub
pop
mov
pop
stos
cld
dec
push
pop
aad
pop
lods
pop
adc
pop
mov
inc
imul
in
lods
cli
testb
outsb
sbb
ja
sub
test
jae
aam
loop
testl
pusha
movsb
fwait
jl
mov
mov
push
push
adcl
mov
ret
daa
mov
loop
fadd
jge
ja
sbb
xor
xchg
pop
mov
cltd
fldt
jae
inc
or
cmp
movsb
mov
div
cld
xchg
test
loop
cmp
jmp
fs
mov
lods
add
and
cwtl
sub
mov
mov
mov
sub
mov
loopne
push
pop
in
push
imul
pop
cmp
mov
addr16
loopne
mov
out
cmc
sbb
inc
pop
fistps
in
mov
addb
jno
add
fimull
popa
movsl
cmp
sub
js
mov
mov
adc
cmp
outsl
inc
sbb
imul
addl
in
pop
fwait
inc
ret
dec
lds
inc
sub
push
sarl
rcll
mov
les
adc
out
in
pusha
popf
out
xor
test
stos
inc
stc
mov
mov
pop
add
sbb
cmpsl
daa
sub
stc
xchg
dec
pop
add
mov
cmp
jle
shlb
ljmp
scas
in
cli
ret
rorl
cli
cltd
mov
mov
movsb
cmpsb
sub
cli
xor
inc
insb
pop
mov
inc
jmp
imul
pop
outsl
lret
cmp
fwait
mov
es
xor
pop
icebp
push
and
data16
sub
xchg
adc
inc
lds
sub
sub
or
bound
xor
outsb
out
ror
xchg
js
sub
and
mov
adc
mov
adc
adc
and
addr16
or
xchg
insl
inc
addl
mov
jl
push
pop
notl
jge
test
mov
or
ret
mov
lret
call
movsl
push
push
mov
imul
popf
lock
jb
push
jo
mull
nop
push
push
push
push
or
aad
pop
jnp
push
out
cmp
cs
xchg
and
sub
push
jb
test
jno
jnp
repz
outsl
int3
cmp
nop
or
std
xlat
mov
xchg
stos
daa
lcall
xchg
push
dec
idivb
sub
mov
push
stc
cmp
data16
xor
dec
cmp
mov
adcb
sarb
fnstenv
cmp
xlat
add
mov
js
cmp
and
test
lods
addl
inc
add
in
xchg
mov
mov
push
dec
push
jg
push
fistpll
and
mov
xor
sar
push
popf
int
inc
cmp
xchg
push
mov
xchg
loop
xor
inc
outsl
inc
adc
xor
daa
sub
pop
pop
xchg
popf
adc
aas
add
mov
push
mov
loopne
adc
enter
add
adc
shrl
test
cmpb
imul
and
adc
iret
int3
push
jle
mov
popa
je
insb
shlb
inc
pusha
sahf
fidivl
pop
pop
ret
pop
inc
scas
dec
mov
cli
mov
pop
mov
mov
cmp
stos
test
outsb
sbbl
jb
sub
pushf
inc
mul
cwtl
iret
mov
mov
and
fimuls
pop
pop
iret
dec
push
cltd
dec
xor
jl
jae
push
push
mov
out
xlat
daa
and
popf
lds
add
lock
fld
mov
aam
test
cltd
mov
rcrb
pushf
mov
inc
dec
dec
xchg
push
mov
loop
leave
icebp
xchg
sbb
pushf
pop
in
lret
xchg
xchg
out
aad
pop
push
mov
jmp
lahf
and
out
xorb
out
sar
bound
sbb
push
mov
adc
loop
in
faddp
jno
pusha
les
adcb
cmc
in
std
xchg
lods
sti
mov
xchg
jp
je
xchg
sbb
push
xor
sbb
stc
call
sbb
push
ret
dec
xor
ljmp
test
mov
xchg
sarb
inc
roll
inc
cmp
mov
push
icebp
aas
es
incl
sub
xchg
ret
ficoml
push
mov
inc
jp
jb
cltd
sub
mov
fists
push
enter
add
xchg
or
mov
shlb
in
aam
iret
adc
mov
out
jne
std
mov
pop
push
fs
add
xor
out
jnp
adc
xchg
cmpsb
idivb
aam
fstpt
pop
or
mov
jb
test
pop
gs
cmp
mov
shrl
lock
fwait
inc
lea
rol
cmc
lock
loop
xor
and
dec
mov
sub
sbb
stc
loopne
fbstp
cmpsl
pop
repz
arpl
push
pop
jns
loope
pop
test
shll
hlt
rorb
jb
jl
push
mov
popa
mov
inc
xor
enter
fld
sbb
in
cmp
aam
insb
jmp
movsl
inc
jo
leave
cmpsl
pop
pop
dec
shr
popf
fnstsw
jle
addr16
or
cmp
pop
ljmp
and
fistpl
cmp
pop
test
insb
mov
scas
and
das
test
xchg
dec
sbb
sub
xchg
dec
sub
dec
dec
fistl
aad
pop
repnz
jnp
pop
int
bound
into
mov
cmp
push
sahf
aad
sbb
outsl
adc
repnz
cmpsl
mov
dec
cmpsl
pop
ror
jl
jmp
jnp
sub
scas
ja
push
mov
pop
imul
xchg
lock
ss
add
jecxz
rcrl
mov
sbb
shrl
inc
xchg
adc
push
ret
dec
popf
roll
cmc
pusha
in
sub
jp
dec
lret
pusha
mov
jmp
cmpsl
stos
rcrl
pop
mov
bound
les
add
cmp
sbb
mov
push
sub
xchg
cwtl
ret
adc
pop
test
push
ja
xor
data16
mov
push
pop
sub
test
inc
pop
inc
jg
cmpsl
push
sub
mov
paddusb
les
mov
xchg
push
bound
out
data16
mov
bound
scas
push
ja
or
jmp
pop
ljmp
jmp
pop
sbb
jge
xor
push
inc
mov
jmp
xor
cmpsb
jp
dec
mov
sbb
push
insb
mov
data16
cmpsb
jns
jp
sbb
in
inc
arpl
fdivrl
or
movsl
in
test
mov
mov
push
push
sarb
nop
or
movsb
add
cmp
mov
adc
je
es
aam
or
inc
push
or
ret
inc
lret
adc
insb
mov
push
add
je
cmp
sarl
shlb
xchg
pop
aam
imul
xchg
enter
mov
sbb
xor
in
jmp
mov
jle
pop
dec
fimuls
popa
or
pop
mov
adc
mov
daa
add
adc
mov
shl
dec
and
sbbb
fldcw
pop
cli
adc
jmp
mov
mov
and
cmp
add
dec
je
fildll
test
inc
or
icebp
jmp
aad
test
jnp
lcall
fildll
cmp
cmpsb
js
andb
xor
and
dec
jne
jae
imul
inc
scas
xor
xchg
repz
test
sub
cmp
lea
lret
xchg
loop
xor
loopne
xchg
aaa
jno
push
in
xchg
mov
aas
push
xchg
icebp
jle
xchg
mov
loopne
inc
adc
add
jne
push
mov
ret
xorb
and
clc
clc
scas
adc
test
popa
inc
cli
inc
rcll
sub
push
xor
add
addr16
push
call
fsub
jns
les
int
xor
jmp
fwait
mov
mov
ds
push
jns,pn
xchg
inc
mov
rcl
out
cmpsl
lds
cmp
sub
lea
dec
push
or
push
in
push
xor
sbb
test
mov
pushf
pop
aad
sub
into
xchg
aas
jae
cld
mov
pop
mov
enter
push
nop
and
mov
addl
fmull
cmp
inc
jle
sub
or
lea
in
sbb
mov
pop
mov
mov
in
or
jge
mov
stos
jmp
lods
outsl
inc
jl
pusha
aam
jae
mov
jae
mov
or
push
int3
scas
inc
add
cwtl
fpatan
or
fs
lret
in
sbbb
mov
rcrl
mov
into
sbb
xor
pop
jne
cmp
push
push
jg
jg
out
mov
ljmp
arpl
inc
dec
dec
sub
dec
jae
bound
lahf
push
dec
mov
xchg
data16
push
mov
icebp
ja
aam
lahf
push
aas
orb
ds
pop
call
cli
xor
jns
or
add
jns
sub
xchg
push
idiv
sahf
dec
popf
pop
add
sub
xchg
ret
cwtl
sub
loope
pop
cmp
sti
test
pusha
mov
sub
out
sub
stos
xlat
faddl
outsl
repz
add
jno
inc
stos
push
cmc
mov
cmp
mov
inc
jne
cwtl
ljmp
pushf
fwait
nop
nop
jns
mov
hlt
loope
jmp
dec
pop
or
iret
pop
pop
push
xlat
sub
in
repnz
test
jmp
pop
scas
shrb
orl
fwait
sbb
jo
dec
cs
imull
xchg
subb
adc
mov
filds
nop
or
pop
movsl
aam
fsubs
or
movsl
popf
pop
std
movl
mov
das
jne
out
mov
adc
daa
test
fidivrs
in
loope
mov
mov
jmp
push
pop
or
push
incl
pop
adc
xlat
jmp
xchg
xchg
adc
aas
add
repnz
fnstcw
mov
add
es
aas
fcom
shrb
call
mov
xor
out
mov
sarb
faddl
sub
dec
in
and
add
arpl
out
mov
or
aaa
out
idiv
push
ss
arpl
out
scas
add
mov
test
fs
push
jae
and
xor
jbe
fstpt
fwait
pusha
fimull
leave
lods
lds
jne
test
faddl
mov
cmp
or
push
add
in
cmpb
sbb
ficomps
pop
and
jne
mov
jnp
repnz
add
jbe
out
test
cmpsl
xchg
lcall
xchg
inc
pop
push
cs
pusha
lds
repz
xor
xor
es
aad
aad
negb
popa
sbb
scas
mov
xchg
cmc
sbb
and
cmp
addb
mov
jb
insl
negl
or
pop
sbb
rolb
stos
cmc
inc
movsl
and
inc
push
enter
cmpsb
mov
pop
dec
push
adc
in
mov
pop
ret
inc
adc
dec
jbe
inc
xlat
ret
fdivrl
xchg
enter
leave
or
fucomip
ret
fsubs
lods
xor
cwtl
ljmp
icebp
neg
cmc
inc
sahf
jno
jecxz
bnd
insl
sbbb
push
pop
mov
arpl
add
dec
xchg
jle
adc
les
cmpsl
fxch
xchg
addr16
sub
mov
cmp
mov
jne
iret
add
inc
cmp
lahf
cmpl
ds
pop
pop
add
lcall
out
loop
jp
aam
popa
mov
push
mov
cmpsb
push
xchg
incl
dec
movsl
sub
xor
data16
popa
inc
pop
cmp
popf
dec
loopne
inc
movsl
cmpsb
pop
push
xchg
test
testl
xchg
jo
mov
xor
loope
pop
xor
xlat
sbb
cltd
or
lcall
test
scas
out
cwtl
popa
mov
cmp
mov
in
mov
popf
notl
daa
orl
mov
or
cld
cmp
and
fcmovb
clc
insb
and
imul
jg
pop
sbb
jbe
data16
adc
cs
sub
mov
les
mov
arpl
sahf
dec
push
pop
in
testl
cltd
inc
repnz
mov
push
sub
in
loopne
sti
mov
xor
ret
cwtl
inc
sbb
hlt
or
cwtl
dec
out
mov
xchg
jmp
sti
ja
cmpsb
jne
dec
mull
push
inc
push
adc
sbb
xor
mov
insl
mov
movsl
out
lcall
inc
jmp
add
out
lret
in
inc
ljmp
xchg
inc
arpl
sahf
sbbl
add
repz
sbb
cmpsb
cmc
stos
sbb
test
cs
jo
pop
pop
popa
mov
push
or
stos
mov
data16
mov
pop
je
cmp
loop
push
sub
jecxz
sahf
sub
jge
fdecstp
mov
lea
xchg
pop
push
bts
sub
outsb
push
rorb
mov
dec
mov
inc
ljmp
mov
sti
imul
sbb
addr16
sub
stc
mov
mov
and
inc
icebp
lcall
cmpb
js
test
mov
add
scas
push
dec
adc
movsl
or
cmpl
test
and
xchg
jnp
insl
lret
insl
or
inc
inc
mov
stos
pop
shlb
add
xor
dec
jle
test
add
scas
dec
lcall
mov
fidivs
sbb
inc
adc
xchg
imul
loopne
dec
xor
lds
shll
repz
fcmove
mov
inc
out
ficoms
sub
test
into
cli
clc
dec
mov
adc
dec
dec
bound
mov
mov
dec
je
bound
fcmovnbe
xchg
jns
fldenv
std
scas
sbb
xchg
jbe
sbb
jne
sub
mov
js
xor
cmpsb
pop
addr16
lcall
jecxz
adc
insl
popa
aaa
mov
lcall
or
mov
fcoms
imul
scas
adc
inc
xchg
nop
sti
repnz
mov
das
outsb
ja
cld
jmp
fdivrl
add
and
es
mov
imul
xchg
jo
cmp
insb
ja
mov
sbb
inc
lods
inc
or
mov
mov
push
outsl
push
shlb
pushf
adcl
roll
adc
das
push
lods
mov
ret
mov
mov
xchg
shl
xor
sbb
ss
mov
loope
pop
aas
adc
fsubr
mov
push
jnp
ret
dec
push
outsb
adc
push
xchg
xor
mov
aas
xchg
sbb
dec
pushf
inc
ss
jae
and
mov
push
jmp
and
inc
cltd
imul
lret
pop
sub
mov
aas
jns
hlt
lahf
push
cmp
push
popf
push
push
hlt
mov
movsl
in
test
mov
inc
std
pop
inc
sbb
inc
jo
aas
mov
xchg
and
fsubrl
icebp
and
pop
mov
mov
cmc
pop
movsb
pusha
das
ret
jb
scas
xorl
jne
aaa
jno
jle
jnp
push
pand
mov
xor
data16
shrl
jl
add
mov
or
mov
aas
dec
mov
fcomi
mov
pop
and
jg
adc
shrb
mov
popf
lock
push
or
ljmp
pop
in
dec
mov
cmp
push
xchg
mov
sub
add
inc
fstps
push
ss
pop
xchg
pop
mov
hlt
pushf
sarl
xlat
push
daa
mov
add
daa
mov
cli
fsubrs
test
fs
mov
jge
and
sahf
movsl
adc
fiadds
cmp
sub
test
push
pusha
mov
sbb
xchg
out
xor
adc
imul
sub
jns
push
jg
and
jne
jae
push
test
int3
cmp
add
pop
in
out
lret
in
sarl
clc
mov
iret
ljmp
and
inc
xchg
xor
xorps
xchg
sbb
add
lea
mov
pop
jnp
add
push
pusha
cs
sub
push
loope
xchg
cmpsl
mov
std
xor
clc
jb
fists
ret
pop
mov
inc
cld
xchg
fnsave
push
loope
adc
jb
jge
mov
mov
das
xchg
jne
gs
cmp
ret
in
cmp
cwtl
and
mov
bound
fstp
xchg
lock
ret
cmc
cmc
cmc
and
dec
and
mov
cmc
cmc
insb
call
xchg
fisubrs
mov
mov
pop
pop
mov
addl
lea
push
loope
fistpll
cwtl
out
movl
and
xchg
test
or
movsb
jle
jecxz
int
mov
in
gs
pop
or
sti
mov
movsb
aas
mov
lods
rolb
pop
loope
std
dec
out
and
mov
dec
in
ljmp
movsl
sbb
pop
pop
xchg
scas
cmc
sahf
cmpsb
cmp
push
or
mov
cmpsl
arpl
test
push
lods
fdivl
add
jae
cmpsb
popa
pusha
fstpt
fbstp
mov
mov
inc
divl
cltd
js
pop
mov
cmpb
aas
push
jmp
adc
mov
push
jne
sahf
in
fiaddl
enter
leave
cli
je
scas
mov
lret
xchg
lea
repz
ljmp
sub
nop
ja
add
xchg
cmp
cmp
inc
fisubrs
lods
push
inc
sarb
mov
mov
mov
fs
dec
pop
pop
inc
aad
leave
lea
and
push
loope
lods
inc
roll
lret
and
sbb
or
xchg
test
jecxz
adcb
xchg
and
cmpsb
adc
sbb
sub
stc
push
fcomps
ljmp
test
arpl
and
aam
sub
dec
cltd
mov
mov
pop
mov
pop
push
repnz
or
int3
lret
fsubrs
cmp
dec
mov
jg
rolb
in
sti
lds
inc
mov
pop
rcll
mov
sti
sbb
add
sub
mov
push
cltd
jmp
lahf
mov
pop
dec
jb
adcl
cwtl
std
mov
add
aaa
fwait
cmpsb
dec
movsb
xlat
xacquire
xchg
jp
push
ss
mov
dec
mov
jbe
notb
mov
filds
and
or
dec
adcb
inc
xchg
adc
stos
insl
dec
jge
and
xchg
mov
test
sbb
or
lods
inc
push
add
popf
aam
cli
leave
dec
in
sub
jmp
insl
cmp
sarl
orb
fistpll
addr16
mov
pop
mov
jmp
insl
loop
mov
out
rcrb
or
jmp
addr16
jbe
lock
fmulp
mov
fsubrl
jb
push
sbb
insb
ficompl
push
fidivs
push
mov
pusha
loope
fcmovnb
es
push
mov
pop
pop
testl
dec
hlt
cmp
mov
outsl
subb
cmp
sub
pop
push
dec
stos
xchg
xor
ja
lds
sbb
out
std
mov
out
data16
out
pushf
aas
inc
pop
clc
jl
lods
inc
jl
pop
sbb
sub
out
insb
mov
shrl
lahf
pop
push
stos
xchg
pop
bound
mov
icebp
mov
stos
sub
popf
repz
imul
pop
fdivl
add
inc
pop
movsb
push
dec
jmp
sub
xlat
lcall
mov
push
mov
ret
lods
mov
push
xchg
leave
or
cmc
into
add
inc
pop
pop
sub
push
insl
cld
xchg
lahf
xor
xor
mov
mov
lea
pushf
rcrb
sbb
xchg
pop
xchg
mov
cld
addr16
fs
mov
addl
loop,pt
dec
mov
fs
xor
cmpsl
inc
xor
mov
shlb
rorl
mov
and
popf
cli
push
test
cmp
push
push
mov
xchg
mov
mov
push
mov
jno
mov
pop
adc
lcall
push
mov
dec
and
xchg
jns
xchg
cmp
scas
add
cmp
mov
cs
inc
adc
sub
sbb
cmp
repnz
push
popf
inc
mov
ficomps
push
test
movd
sub
and
xchg
or
mov
cmp
pop
daa
mov
sbb
int
inc
out
push
popa
imul
mov
xchg
xchg
push
jl
in
fsubrp
dec
lods
mov
cmp
call
push
add
scas
push
mov
movsl
xor
or
mov
test
cmp
inc
enter
mov
mov
jmp
imul
mov
into
idiv
and
nop
scas
in
mov
mov
pusha
xchg
dec
cmp
out
dec
sbb
pop
imul
ds
test
push
pop
inc
mov
add
mov
stos
movsb
lods
out
pop
jno
hlt
lret
je
je
cltd
xorb
cli
repz
lds
rorb
mov
iret
inc
inc
std
scas
aad
mov
or
jl
mov
movsl
shlb
mov
test
mov
mov
bound
dec
sub
int3
aas
add
shl
mov
pop
xor
dec
or
hlt
xchg
mov
jne
pop
and
jo
ds
cld
xor
test
out
dec
lret
lods
cld
rcrb
dec
mov
sbb
int3
aam
push
add
inc
mov
dec
je
xor
ljmp
jecxz
pushl
mov
push
adc
fcoms
push
paddusw
leave
scas
inc
cmc
lock
movsl
es
mov
clc
pop
sub
push
pop
push
clc
mov
mov
push
jl
or
jne
xchg
gs
or
je
sbb
fsub
call
pop
add
cltd
mov
mov
xor
or
movsl
push
mov
ja
add
hlt
stc
jns
add
in
repnz
xlat
outsb
adc
adc
jnp
mov
cld
xor
mov
xchg
cmp
rcl
pop
fnclex
imull
stos
in
ret
repz
push
xchg
pop
jo
in
shrb
push
fwait
adc
mov
push
xor
pop
data16
inc
repnz
js
les
int3
jbe
call
es
int
jmp
jmp
out
bound
imulb
sbb
xchg
sub
lea
mov
mov
hlt
mov
popa
and
xchg
loopne
cmpsl
mov
stos
iret
dec
pop
cmp
xchg
and
jge
xchg
pop
cld
ljmp
mov
sbb
mov
mov
cmpsb
into
and
sbb
cmovae
into
outsl
dec
rol
pop
pushf
inc
sub
aas
xchg
lret
push
lahf
rcl
lds
push
aam
adc
out
ret
adc
dec
fisttpll
mov
add
jae
cwtl
imul
pop
scas
aam
sub
outsl
std
dec
push
mov
loope
mov
lds
push
lcall
adc
je
pop
mov
xchg
arpl
cmp
inc
cwtl
or
fildl
hlt
popa
sahf
mov
fs
jl
push
jge
jb
in
lods
incl
jecxz
inc
adc
outsl
inc
lcall
sub
leave
imul
not
data16
mov
mov
or
adc
pop
mov
inc
xor
rorl
mov
xor
pop
lods
imul
mov
jecxz
add
fs
ret
test
push
out
mov
fs
lret
jle
and
push
or
cld
cmp
pop
push
cmp
and
jb
shrb
repz
lret
ss
mov
pop
mov
adc
and
mov
imul
fcomi
xchg
mov
lock
push
xor
andl
add
push
fisubs
daa
repz
jo
into
sbb
xor
cmp
test
or
bound
adc
shlb
lret
je
arpl
insl
sub
xchg
mov
and
jno
fdivl
push
adc
mov
push
mov
cltd
or
outsl
std
mov
cld
mov
push
and
sahf
call
loope
js
add
mov
inc
nop
sbb
xchg
sahf
sub
scas
sbb
das
sbb
lret
stc
dec
lods
push
movsl
or
pop
inc
jno
pop
aam
pop
test
xchg
push
sub
xchg
mov
and
mov
cmp
mov
mov
mulb
mov
dec
in
imul
imul
in
stc
je
xorl
and
int
push
insl
dec
decl
mov
sub
addr16
ljmp
movsb
cwtl
aam
sarl
mov
push
jl
push
push
fdivl
mov
les
loope
lcall
xor
cmp
les
or
jne
imul
sub
js
jne
cmp
fsubs
jne
lock
inc
cld
aad
jo
push
add
pop
outsl
aas
in
orl
mov
ja
and
cmp
lret
in
lcall
cmp
xor
mov
cmpsb
adc
push
cmp
sub
xor
in
stc
adc
push
add
sbb
mov
lret
sti
adc
cmp
lret
scas
add
sub
xor
mov
lock
and
repz
daa
and
mov
scas
js
stc
or
lahf
xchg
push
mov
addr16
pusha
adc
mov
es
mov
xor
pcmpgtw
ds
or
test
dec
es
mov
repz
cmp
clc
sbb
mov
inc
jnp
testl
shl
popa
push
xchg
scas
cmp
mov
dec
push
icebp
sub
and
dec
lahf
movsb
pop
cmp
xlat
pop
dec
lods
cmc
lock
cmp
es
cmp
add
push
fcomp
test
push
aaa
inc
sbb
or
icebp
addl
and
jp
fcomi
xchg
pop
adc
lods
inc
pop
jg
fnstsw
ja
ss
inc
cli
es
cmpsb
mov
mov
adc
add
dec
movsb
cmc
mov
push
movsl
and
jmp
and
mov
out
sub
sbbb
iret
out
push
cmpsb
lcall
cmp
jmp
aam
dec
pop
xchg
add
and
loope
out
incb
jno
xchg
add
outsb
adc
jl
jmp
and
mov
lret
test
dec
hlt
sub
js
ret
xor
inc
ss
bound
inc
repz
out
sub
movsb
xchg
xor
aam
mov
popa
push
call
addr16
lcall
scas
sub
xor
jnp
dec
fwait
movsb
push
add
int3
lahf
movsb
jb
dec
leave
mov
int
xor
cli
push
cmc
ds
gs
fs
mov
repnz
sti
sub
mov
or
jmp
cmp
ds
test
inc
inc
rcrb
cmc
es
pop
daa
out
push
lret
sbb
adc
nop
xor
push
cmp
cld
push
xchg
xor
ret
jno
out
pusha
mov
dec
or
adc
icebp
xchg
ljmp
cmp
pop
xorb
mov
dec
or
in
in
ljmp
mov
pushf
sbb
pop
lret
loope
jle
rcrb
call
inc
jbe
xor
xor
mov
ljmp
pop
shll
mov
stos
or
aam
mov
mov
sti
rcr
fwait
pop
mov
ret
mov
xor
jle
cmp
jge
jmp
sarl
bound
sti
cmp
push
fcomps
sbb
cmpsl
mov
imul
rcrl
xor
push
popl
mov
sbb
xchg
subb
add
xor
sbb
dec
insl
aas
add
jecxz
jl
ret
repz
cltd
arpl
adc
outsb
sub
call
xchg
push
cwtl
jno
lahf
and
mov
mov
pop
shll
sub
ret
jae
mov
inc
push
test
mov
dec
lret
sahf
fldenv
or
dec
rclb
adc
sub
add
mov
sbb
and
jne
pop
add
inc
sub
adc
repz
sub
out
shlb
jp
divl
sarl
loopne
sub
mov
jbe
in
jp
scas
mov
push
xcrypt-ctr
cmpsl
popf
cmp
aas
adc
fwait
inc
cmp
mov
cwtl
pop
push
test
inc
xlat
dec
cli
pop
scas
cmpsl
mov
out
cmp
lea
mov
add
pop
mov
xchg
fistpll
dec
cmpsb
or
jae
mov
hlt
popl
mov
lods
stos
out
xlat
test
fcompl
push
jp
sub
shrl
cli
or
sbb
in
int
repnz
lret
jg
or
push
add
add
popf
xchg
dec
pop
pop
sbb
sbb
js
jg
aam
inc
std
jmp
std
fiaddl
mov
mov
inc
out
jmp
imul
shlb
jnp
popf
sub
int
mov
add
shrb
iret
jle
ror
fsub
aas
testb
jle
cmp
cld
lock
int
or
mov
lahf
aaa
cli
pushf
dec
mov
mov
pop
int
pop
enter
push
addb
adc
cmp
les
in
roll
ljmp
xchg
ror
mov
dec
pop
int
cwtl
fnstenv
insl
jmp
bound
jmp
jbe
or
call
sub
push
cmp
jnp
jge
add
imul
jecxz
js
push
xchg
jg
xchg
jmp
pop
jo
pop
lds
lock
pusha
pusha
cmpl
hlt
push
mov
fnstcw
add
stc
adc
mov
testl
lock
fdivs
push
fimull
mov
hlt
xor
mov
cmc
sbb
dec
lds
popf
sub
pusha
shr
cmpsb
fldenv
dec
daa
mov
xor
and
push
push
stos
loop
push
scas
sub
pop
fwait
jns
push
cmp
in
jno
rcrb
fwait
nop
lahf
mov
xor
adc
cmpxchg
sbb
aaa
lods
int
cmp
data16
inc
aaa
cmp
mov
mov
dec
pop
aas
into
movsl
xlat
adc
sbb
sub
js
mov
outsl
loopne
fistpl
jns
rcr
loope
data16
jle
out
inc
stc
subb
mov
lods
pop
xchg
scas
jecxz
and
ret
lahf
ret
mov
jae
push
jb
js
popa
popa
and
scas
insl
and
ret
sub
inc
inc
cli
fdivrl
push
jne
lds
test
mov
jnp
fadd
xchg
and
sbb
call
adc
and
imul
out
sub
jae
jo
add
cmp
daa
out
roll
pop
add
mov
mov
pop
adc
push
mov
mov
push
jns
fs
mov
mov
pop
jge
mov
lods
pop
pop
adc
rorb
out
inc
dec
das
push
dec
xchg
push
add
push
xchg
nop
mov
cmc
cld
mov
xor
xor
adc
sub
cmp
repnz
jnp
pushf
out
into
ja
fwait
iret
pop
sub
pusha
daa
add
sti
mov
push
pop
jns
cwtl
sbb
call
outsb
and
xor
popf
jno
xor
mov
mov
inc
lock
cmpsb
imul
push
loope
js
xchg
gs
lods
rol
test
mov
imul
pop
loop
test
cmc
js
out
repnz
ja
lock
pop
jo
xor
mov
das
dec
dec
insb
fwait
rcll
xchg
cli
mov
lods
dec
outsl
push
aas
push
aam
sbb
enter
mov
and
push
loop
fldcw
popa
push
add
add
push
xor
scas
and
out
outsb
inc
sbb
dec
xor
mov
mov
push
push
cmp
leave
jmp
in
fcmovbe
xchg
and
sbb
jg
mov
push
test
mov
or
ss
test
insb
fistps
jbe
insl
mov
stos
fidivs
mov
cmp
mov
and
jle
movsb
icebp
pushf
aam
xorb
sub
or
add
sbb
in
outsl
std
fimull
pop
push
mov
ljmp
outsb
fsts
jne
and
xchg
sub
add
push
fmul
jno
in
out
pop
jo
std
jle
int3
mov
mov
jp
fsubr
iret
std
cmpsl
arpl
nop
and
sub
adc
mov
inc
sub
jns
sub
add
push
sahf
mov
cld
outsb
sbb
nop
loop
sbb
and
shlb
test
cmc
sub
daa
push
xchg
fildl
push
mov
adc
pop
jb
jne
push
dec
movsl
adc
pop
xor
pusha
pop
sub
sub
or
mov
jb
or
in
push
adc
lret
mov
stc
outsb
ret
and
jmp
or
sbb
mov
test
ret
jl
rorb
ficomps
mulb
xor
out
pop
push
lret
in
fs
outsb
push
ret
and
push
mov
ret
jle
cmp
adc
xlat
mov
jle
push
push
dec
lcall
jae
lret
mov
fs
pop
lds
jmp
enter
and
loope
and
lahf
mov
dec
mov
iret
jne
loopne
inc
pop
sub
and
xorb
bound
sbb
std
shrb
cmp
int
inc
std
in
lret
fs
xchg
shl
ds
xor
xchg
and
jge
testl
cwtl
imul
mov
fcoms
sub
ss
push
lea
or
lea
cmp
xor
enter
les
jecxz
jmp
adc
and
xor
test
inc
icebp
mov
cwtl
push
sub
inc
mov
jmp
cmpsb
add
xor
sub
xor
fldenv
pop
xchg
lea
out
mov
jns
jne
jne
pop
in
jecxz
mov
ret
stos
dec
bound
push
add
xchg
or
loopne
scas
push
cs
ss
rcll
push
pop
sbb
aaa
dec
das
jge
push
out
sub
adc
std
aad
sbb
inc
or
mov
xor
push
mov
mov
jae
jl
and
mov
add
xor
inc
mov
fimull
xor
mov
lea
xorb
or
fcompp
js
pop
mov
jo
hlt
fmuls
pushf
inc
mov
pop
xlat
hlt
test
mov
inc
out
int
pop
fisttpll
inc
int3
mov
dec
mov
and
jecxz
fcmovne
xchg
inc
fwait
mov
addr16
sbb
pop
fxch
stos
xor
je
mov
xor
dec
xchg
in
out
and
cltd
push
dec
add
mov
and
sub
outsb
push
insl
in
push
pop
scas
fcoms
and
cmp
adc
cmc
enter
fisttps
rol
iret
fcmovb
fdivrs
pop
in
mov
mov
push
mov
mov
in
call
adc
lcall
xchg
lock
lret
inc
or
dec
mov
jl
inc
mov
dec
and
pusha
pop
imul
fnstenv
les
xchg
popf
sbb
cmp
fwait
cmp
outsl
mov
push
lahf
dec
arpl
fsubp
adc
rorb
xor
inc
xchg
out
push
pop
cmpsb
and
test
popl
inc
xor
lods
aas
jo
sbb
push
sbb
dec
push
es
pop
xor
lahf
outsb
mov
out
mov
adc
sub
xor
test
push
aad
std
icebp
bts
pop
ja
cmpsl
daa
cld
dec
cmpsl
cld
xor
rcr
jge
jmp
fdivl
shr
mov
pop
mov
add
insl
push
dec
pop
lods
sub
std
mov
cmp
fdiv
sub
sbb
dec
loop
sahf
stos
test
sbb
xchg
jns
andl
adc
push
jae
pop
imul
pop
sbb
cmp
mov
iret
std
xchg
pop
aas
mov
popf
leave
fwait
stc
das
dec
hlt
int3
or
and
pop
jmp
lcall
gs
dec
inc
fldenv
imul
pop
jmp
popa
fstpt
fdiv
sti
aam
call
int3
inc
sub
cmp
out
sahf
sbb
cmp
xor
add
insl
dec
add
imul
add
adc
mov
or
mov
inc
xor
and
int3
inc
push
pop
out
inc
neg
mov
cmpb
testl
push
push
cmp
mov
cmpsl
add
pop
bound
ror
mov
jmp
rolb
sbb
pop
aam
push
ja
popa
not
test
fwait
sahf
int
inc
push
test
insl
xlat
popa
bound
fldl
jnp
int
rol
ljmp
dec
mov
and
fwait
push
jbe
push
test
arpl
outsl
fldt
or
arpl
adc
xlat
mov
mov
rorb
or
mov
les
mov
sbb
push
xor
dec
or
movsl
adc
lock
in
outsl
cmpsl
xchg
inc
mov
sbbl
gs
cli
leave
and
popa
rcrb
filds
movsb
mov
xchg
mov
xorb
add
pop
fsubrl
sub
push
addr16
adc
subl
out
shll
loope
dec
fcmovu
testb
pusha
jnp
inc
cmpsb
or
shrl
pushf
xchg
cmc
xor
mov
pop
xor
into
std
ljmp
adc
jg
xor
and
cmp
cmp
dec
push
fwait
leave
out
fisubrl
adc
push
jecxz
icebp
stos
mov
insl
stc
aaa
es
movups
dec
pop
add
adc
mov
and
xor
sub
lret
aaa
jp
sbb
pop
ds
dec
mov
ds
out
jle
ret
fldenv
rorl
test
xchg
adc
cli
test
cmpl
pop
movsb
aaa
repnz
dec
cmp
lods
rcrb
lret
frstor
insl
xor
lods
in
mov
rep
addr16
mov
fadds
test
sbb
mov
jge
fwait
dec
mov
or
fs
fwait
nop
adc
scas
push
cmpsl
aad
cmp
in
mov
mov
cs
inc
dec
xchg
pop
and
movl
lods
cmp
inc
adc
cld
mov
int
ja
pop
fdivrs
jb
int
sub
sub
jno
ret
sbb
in
jge
mov
push
aam
in
push
cli
adc
mov
shlb
test
sbb
out
test
push
into
sbb
mov
pop
add
les
pop
jns
mov
mov
xchg
jb
inc
xor
lea
mov
rcl
mov
push
test
dec
xor
dec
mov
dec
outsb
sub
add
adc
adc
dec
push
dec
mov
loopne
jg
pop
mov
mov
bound
scas
arpl
ljmp
mov
enter
xlat
dec
cs
jmp
cmpsb
insl
cs
cmpsl
dec
fdivrs
das
jns
xchg
mov
out
repz
addr16
inc
pop
mov
lret
xlat
aam
and
sub
mov
lret
test
push
sbb
push
or
jge
popa
lcall
cmp
dec
xchg
mov
orl
movsb
insl
loopne
mov
push
push
icebp
test
mov
test
out
push
xor
movsb
into
lcall
and
push
push
cltd
sub
shlb
jmp
jmp
or
xchg
cmc
ljmp
movsb
inc
pop
addb
cli
cmp
out
fs
dec
xchg
in
and
mov
out
mov
mov
pop
sbb
jle
into
outsb
ja
fldcw
dec
jno
xchg
mov
adc
cmpsl
mov
mov
std
pop
jne
iret
bnd
sbb
in
adc
ds
fwait
sub
mov
add
mov
movsl
push
ss
inc
test
push
xchg
ss
fwait
mov
cmp
das
mov
xchg
add
xor
inc
ret
hlt
dec
lahf
icebp
mov
loop
dec
push
stc
ja
adc
repnz
nop
shl
xchg
imul
ds
icebp
in
add
dec
mov
int3
xchg
sub
mov
in
or
or
push
sub
push
in
leave
repz
dec
into
ss
filds
lock
repz
sub
mov
adc
iret
pop
data16
push
pop
icebp
mov
xor
js
in
mov
cld
cmp
or
pop
test
test
lods
pop
int
iret
dec
loop
adc
adc
loop
xchg
cmpb
jl
sbbb
andl
or
les
push
ds
jge
add
or
pushfw
adc
jle
imulb
inc
jmp
mov
jl
mov
stos
leave
inc
aas
or
stc
mov
enter
jl
loopne
jbe
in
mov
mov
loope
gs
pushf
jmp
xor
mov
push
btc
dec
ja
adc
or
xor
mov
push
push
and
data16
mov
popf
out
dec
test
mov
stc
lret
mov
xor
int3
shufps
insb
mov
pop
iret
sbb
cmp
test
and
mov
sti
cmp
fstpl
stos
push
add
and
cld
insl
and
sub
mov
mov
jecxz
lret
add
adc
fwait
jle
pop
mov
pop
clc
add
and
repz
mov
aam
jb
ljmp
inc
jne
xlat
inc
add
in
xchg
adc
cmpsl
cmpsb
inc
pop
ja
in
or
pop
xchg
jle
imul
loop
xor
jp
inc
pop
scas
rorb
movsl
dec
nop
cmc
and
stc
adc
xor
cwtl
inc
scas
mov
stos
fwait
push
inc
fbld
inc
push
test
and
leave
inc
fnstcw
stos
lret
pop
int3
sahf
push
mov
xchg
mov
xor
mov
nop
out
push
xchg
mov
sbb
push
xchg
xchg
dec
mov
lcall
jb
adc
xchg
inc
icebp
lods
jno
cmpsb
adc
adc
loop
repnz
xchg
decl
loop
xor
sub
nop
out
push
xchg
das
inc
add
dec
cmp
adc
fwait
or
add
push
pushf
aas
lcall
mov
dec
fdiv
stos
orl
imul
lret
ss
mov
push
insl
pop
pop
adc
rcl
fsubrl
es
or
movsl
and
scas
xchg
mov
sbb
test
sbb
in
cmp
in
sub
push
pop
stos
lds
dec
int3
stc
sti
gs
aaa
push
mov
jne
lods
xor
arpl
pop
dec
push
jecxz
sub
xor
andl
std
js
je
das
leave
and
outsb
jbe
jg
mov
add
rol
mov
pop
and
mov
mov
mov
arpl
xor
mov
jle
sbb
jno
xorl
or
sbbl
rcrb
fdivrl
fs
jbe
in
sub
or
leave
xchg
aas
pop
ja
nop
repnz
nop
lods
inc
jno
das
dec
push
lcall
fsubrs
std
cmp
mov
inc
add
push
jl
cmp
xor
cmp
pushf
sub
pop
mov
xchg
xlat
jae
push
lea
pop
xchg
stos
mov
aad
divb
sbb
lods
mov
xchg
andb
xchg
sbb
rcrb
adc
pop
insl
cmpsl
pop
mov
mov
push
movsb
mov
sub
jns
xor
inc
xchg
andb
mov
mov
fwait
inc
cmpsb
pop
mov
ds
xchg
jne
ret
xor
jno
sbb
inc
scas
xor
xchg
mov
and
xchg
test
test
popf
in
imul
idiv
pop
popf
mov
and
ljmp
lcall
mov
iret
sahf
pop
into
dec
mov
jne
pop
enter
pop
mov
push
push
int3
test
out
test
stc
mov
pop
std
or
lahf
data16
push
mov
pop
sbb
inc
fdivl
insl
push
bound
jb
cs
inc
jl
repz
sub
rorb
faddl
and
cmp
xchg
mov
loopne
xchg
insl
lds
in
lret
into
bound
mov
jp,pt
in
lds
inc
jbe
loope
mov
inc
out
push
xchg
outsb
push
cmp
cmp
xchg
xchg
mov
fists
mov
es
pop
jge
jne
mov
push
push
mov
mov
imul
gs
adc
sub
hlt
inc
dec
rorb
mov
js
jae
out
loop
movb
adc
lock
cmp
fldcw
sub
adc
clc
cmp
sub
lret
call
cmpsl
and
ret
add
cmp
sbb
jg
dec
shl
add
in
addb
dec
xchg
leave
test
in
call
nop
dec
add
shrl
push
inc
int3
stc
cmp
push
fiaddl
jne
mov
sub
stc
add
adc
ret
sbb
gs
pop
aas
push
rol
fildl
inc
adc
jle
icebp
fstpt
cmc
repnz
jg
movsb
dec
sub
shl
test
outsb
out
mov
mov
imul
int
jmp
mov
add
movsb
jmp
jmp
or
dec
insb
mov
xchg
cs
sub
sbb
push
dec
pop
imul
sub
daa
in
pushf
push
mov
mov
iret
mov
in
out
jae
test
into
pop
call
mov
fcmovnbe
dec
mov
aam
push
fisubrs
sub
dec
mov
or
ret
mov
les
jg
into
pop
jecxz
jg
shl
les
mov
xchg
push
dec
arpl
sub
into
ret
mov
lahf
es
inc
mov
adc
add
mov
insb
xlat
mov
cmc
or
shrl
cld
test
add
dec
shrl
in
ret
push
popa
push
mov
loope
repnz
mov
cld
hlt
das
sub
mov
movsb
mov
pop
dec
push
jns
mov
xchg
loopne
in
shll
mov
sti
repz
fmull
mov
pushf
repnz
adc
push
push
pop
pop
jae
push
aas
lods
loop
jo
push
push
daa
dec
jecxz
lahf
dec
insb
fdivrs
pop
sti
je
negb
ljmp
lds
mov
je
and
and
xor
jbe
in
hlt
dec
mov
into
add
push
mov
mov
mov
popa
lcall
adc
cltd
outsl
ds
push
push
scas
pop
dec
lea
dec
rcrb
sti
xlat
push
mov
pop
lods
cs
outsb
sbb
mov
add
orb
js
addr16
push
push
sub
rcrb
cwtl
shrl
push
jp
popa
add
in
or
gs
jo
aas
fistpll
and
cmp
rorl
jns
mov
lods
test
pop
pop
lret
data16
in
sbb
dec
and
xor
loop
enter
sub
mov
pop
or
int3
sub
stos
inc
lret
icebp
repz
pop
inc
pop
dec
ret
push
lds
mov
jbe
mov
rclb
aas
jle
xchg
jecxz
iret
jge
mov
mov
pop
std
sbb
cmp
sbb
and
dec
movsb
pop
aaa
adc
fiaddl
or
pop
imul
lcall
dec
fwait
sub
rolb
loop
orl
bound
xor
popf
dec
adc
out
into
ljmp
mov
jp
mov
dec
jmp
aas
int
lods
inc
orl
leave
rcll
cs
mov
inc
test
mov
jl
sub
popa
xor
clc
sub
sub
loopne
and
fbstp
movsb
jno
push
jne
and
sbb
dec
addr16
movsb
stc
and
je
repz
push
cmp
pushf
cs
push
ljmp
lahf
add
and
add
enter
xchg
cmp
lods
cli
mov
pop
push
adc
je
sbb
sub
mov
pusha
inc
mov
add
pop
pop
sub
and
ficoml
mov
sbb
mov
cltd
data16
dec
and
sub
jge
push
mov
out
push
xlat
dec
add
jns
mov
xchg
jns
std
sbb
cmp
mov
add
xchg
mov
jg
leave
mov
fldl
mov
mov
sbb
aaa
pop
insl
imul
push
cs
lret
xor
xchg
add
dec
cmp
push
inc
js
and
outsb
jae
push
fsubl
jno
jp
movsl
stc
mov
add
adc
inc
dec
filds
inc
add
daa
dec
xchg
mov
and
xchg
loopne
pop
scas
jp
xor
mov
pop
and
xchg
dec
clc
xchg
aas
fidivrl
add
sti
testb
mov
mov
sub
fiadds
out
xor
addr16
pop
imulb
xor
loopne
ljmp
fwait
lds
lds
stc
cmp
mov
adc
ret
lods
add
daa
cmp
hlt
fnstcw
xor
pop
nop
stos
push
and
jne
lcall
push
push
or
mov
rcrb
inc
dec
mov
xor
cltd
in
mov
adc
orb
push
jp
inc
sub
jg
int3
aad
pop
mov
test
and
adc
push
imul
mov
ljmp
and
bound
mov
mov
push
shlb
push
push
ret
mov
cs
ret
mov
mov
into
leave
in
stc
mov
and
imul
rcll
fstps
shl
or
iret
mov
sub
push
xchg
dec
mov
jb
adcl
pop
xlat
arpl
jae
pop
xorb
xchg
js
fnstenv
or
push
enter
dec
dec
movsb
lret
insb
adc
and
mov
add
jmp
dec
mov
xchg
fimull
adc
and
and
sbb
scas
in
xor
fsubrs
xchg
jp
mov
dec
sub
jle
les
inc
filds
clc
adc
rorb
jb
mov
daa
xchg
pop
incl
mov
push
jg
sbb
adc
lret
pop
mov
adc
outsb
in
dec
adc
adc
pop
aaa
popa
cltd
scas
outsb
ja
mov
dec
lods
scas
adc
das
or
in
and
mov
push
ja
pop
mov
xor
cmp
add
cmp
xor
movsb
out
sub
mov
jno
jge
fdivrs
leave
in
jns
pushf
mov
push
arpl
rcll
pop
ja
dec
pop
inc
repz
hlt
adc
lea
jne
adc
hlt
xchg
fdivrs
xor
ljmp
arpl
gs
cli
repz
and
jl
insl
dec
in
loopne
mov
xchg
enter
scas
push
and
out
push
push
es
dec
mov
fadd
inc
and
setg
mov
xchg
xor
lods
sahf
add
pop
mov
add
in
out
rcrl
pop
test
rorb
and
fsubs
fsubl
addl
sub
cmp
and
mov
lock
push
es
aad
mov
push
add
popf
loopne
fimuls
sbbl
xor
or
xchg
lds
in
std
pop
and
push
mov
cltd
dec
sub
mov
insl
mov
xchg
push
into
sbb
cmp
fisttpl
in
lods
insb
int
dec
test
leave
and
fistl
dec
xor
jmp
test
cmp
push
jge
sbb
ljmp
dec
lods
and
in
sti
xorl
add
push
dec
jmp
cmp
popa
xchg
std
dec
sbb
addr16
hlt
xorl
add
in
inc
cmpsb
f2xm1
add
sbb
pushf
ja
adc
mov
xchg
jbe
in
cmp
jl
jae
sub
ljmp
icebp
pop
fldcw
mov
cmp
js
decl
es
shlb
shl
jl
psrld
adc
xor
mov
dec
or
ret
mov
jecxz
push
xor
pop
xchg
or
stos
test
xchg
pop
xor
mov
loop
inc
add
jnp
xor
data16
adc
into
push
jb
jp
sahf
xor
cwtl
push
or
popf
cmpsb
aas
fwait
mov
bound
or
divb
in
jae
sub
out
and
xchg
outsl
adc
test
in
lret
leave
xorb
aas
inc
ud2
cmpsl
repz
cmp
scas
je
push
cvtps2pi
insb
mov
or
push
mov
movsb
sbb
add
js
mov
lods
movsl
out
cmp
pop
push
pop
loope
cmc
push
fucomp
push
cmp
rcrl
lods
mov
pushf
inc
hlt
repnz
jecxz
xor
lcall
stos
mov
sbbb
cltd
sbb
je
and
ja
aas
int
shl
and
ja
inc
add
push
push
jle
mov
ljmp
jecxz
mov
mov
fisubl
repnz
inc
mov
sub
jl
stos
xor
add
in
and
adcl
xor
mov
scas
jbe
inc
jl
imul
ljmp
int3
dec
inc
xor
cmp
dec
mov
or
ss
xor
mov
dec
or
inc
xchg
and
imul
div
pop
repz
pop
add
jmp
or
mov
hlt
outsl
push
mov
and
popf
cld
push
mov
orl
sbb
popf
mov
aad
gs
aaa
jp
jge
arpl
int3
sbb
cmpsl
sbb
fldl
popf
shrb
outsl
push
cmp
adc
aad
mov
inc
pushf
aaa
lret
mov
out
mov
dec
lret
mov
xor
xor
pop
sub
cmpsl
adc
jl
jmp
hlt
push
lock
mov
add
inc
stos
lret
jb
cmp
bound
adc
loop
mov
into
add
std
sbb
mov
add
jns
push
hlt
and
xchg
mov
fwait
and
xor
mov
push
les
mov
jae
mov
test
push
std
pop
xor
mov
jno
std
rep
pop
pop
add
cmpsb
arpl
jbe
mov
push
dec
xchg
or
das
mov
enter
dec
jg
cmp
les
das
cmpsb
mov
pop
std
and
mov
daa
push
movsb
mov
and
dec
shr
add
loope
stos
pop
mov
cli
dec
and
adc
das
cmp
xchg
cmpl
sbb
std
mov
mov
popa
lret
fstps
outsb
mov
test
int3
pop
in
out
test
dec
add
jb
mov
inc
fwait
aaa
dec
mul
ss
loopne
or
mov
adc
add
dec
push
inc
mov
cmp
ljmp
cmpsb
icebp
aaa
insb
mov
mov
xchg
jae
in
cld
adc
int
adc
mov
mov
test
jb
stc
ficoml
test
mov
xor
hlt
pop
std
xchg
imul
rcll
or
fnstcw
fistps
mov
inc
enter
pop
cli
aaa
aam
nop
repz
rolb
daa
jnp
push
loop
gs
mov
jne
pop
lea
mov
mov
xchg
movsl
icebp
dec
sbb
mov
fisubs
adc
jg
mov
js
nop
pop
insl
test
movsl
ret
sub
test
xchg
movsl
and
mov
test
dec
jo
scas
xchg
shlb
jl
pusha
pmaxsw
icebp
xor
mov
mov
inc
shlb
inc
aad
sub
lods
loopne
xorb
pushf
sti
into
dec
jge
add
lret
xchg
int3
aam
dec
push
sub
mov
sub
xlat
xchg
enter
enter
cmc
pusha
fsubrp
or
mov
mov
sahf
cmpsb
clc
mov
fwait
dec
jb
ss
aaa
dec
je
add
dec
cmc
or
test
and
cmc
or
xchg
sbb
fistpll
lret
sub
xchg
sub
push
jne
test
and
mov
lahf
xchg
add
imul
std
notb
dec
dec
aad
xchg
sbb
movsb
xchg
push
pop
mov
cmp
pop
xor
xchg
mov
loope
in
call
push
inc
sub
jbe
into
push
jmp
pop
xor
adc
cmp
dec
dec
je
inc
jbe
test
cmp
test
mov
jno
test
xor
sbb
test
pop
sbb
data16
dec
test
cld
xchg
leave
mov
mov
test
fsub
mov
add
inc
sahf
bound
xchg
movsl
test
push
fwait
inc
shrl
lret
dec
push
jae
cmpsb
xor
push
aam
xor
add
loopne
add
sub
and
iret
cltd
mov
inc
or
rol
inc
out
test
jno
addr16
lods
sbb
and
mov
jp
jmp
popf
mov
push
outsb
jge
mov
sub
mov
cmc
cmpsb
adc
sub
or
xchg
mov
and
cmp
pop
cmc
in
leave
pop
es
pop
icebp
sub
mov
aam
jl
jg
adc
xlat
xchg
mov
xchg
jl
push
mov
cmp
jne
setnp
std
cmc
fcoms
adc
jge
into
nop
out
xor
pop
sub
sub
and
and
hlt
jg
mov
sub
mov
mov
imul
out
jno
popf
das
lret
insl
cmp
sti
push
pop
je
jne
mov
iret
in
mov
rcrl
fwait
lret
xchg
and
das
ret
inc
lods
sahf
stos
mov
mov
xchg
and
xor
add
dec
pop
sysexit
xchg
push
movsb
lret
add
faddl
adc
enter
mov
arpl
aas
xchg
push
fdivrl
dec
lods
fchs
adc
scas
lret
adc
cli
mov
sbb
sub
and
imul
cmp
movsb
popf
in
cmp
pusha
push
inc
inc
jg
xorl
inc
xchg
jb
ds
test
sub
inc
mov
push
in
inc
stos
push
jl
testl
addb
or
inc
cmc
js
push
mov
ss
inc
seto
repz
cltd
int
ret
push
jmp
sti
ja
mov
sub
mov
pop
cltd
inc
das
cmpsl
cmp
arpl
mov
cltd
adc
jle
fdivp
aam
lods
xor
inc
xlat
icebp
add
dec
xor
mov
push
out
push
mov
scas
test
pop
pop
dec
add
call
adc
inc
jg
xchg
ja
cmp
repz
aam
lods
movsb
mov
push
sbb
ja
dec
in
and
mov
mov
dec
cmp
shll
cs
xchg
cltd
mov
mov
cmp
in
pushf
std
adc
or
scas
sahf
and
leave
fdivp
lods
push
popa
mov
and
dec
inc
test
cmp
fsubs
push
mov
adc
or
xor
sub
or
fistl
sbb
add
fsubp
mov
mov
xor
insl
loopne
sub
cwtl
popf
daa
mov
mov
dec
das
adc
xor
outsl
loope
cmp
lods
xchg
lods
daa
xlat
adc
and
push
and
sbbl
adcl
dec
out
inc
scas
jno
push
or
xor
insb
iret
jo
or
test
mov
push
std
mov
mov
sbb
inc
daa
dec
jl
je
ss
dec
or
fs
mov
push
xchg
test
in
xor
or
fistpll
push
fisubs
jne
sbb
mov
notb
xchg
jmp
js
ss
push
testl
sbb
push
imul
iret
cmc
jno
cs
loope
and
xlat
jecxz
cltd
mov
mull
sub
mov
push
in
xor
cmp
lret
fidivrl
mov
dec
lret
sarb
mov
push
xchg
mov
mov
pop
and
call
push
adc
mov
xor
into
fmul
mov
cmpsl
je
dec
lahf
pushf
testl
loop
push
jp
fisttps
mulb
scas
mov
out
mov
mov
into
adc
pop
mov
cmp
pusha
mov
call
cmp
dec
add
lock
add
jle
mov
xchg
add
mov
lret
andb
outsl
add
sbb
out
push
popa
or
sub
push
add
xor
mov
inc
cmpsb
mov
sti
adcl
subb
mov
and
dec
cmp
movsl
pop
test
inc
test
cli
mov
xchg
ffreep
mov
or
pop
xor
cmp
push
popa
add
repz
addb
icebp
das
xorl
fiadds
addr16
enter
mov
pop
insl
push
sarb
xorl
inc
enter
cmp
add
je
je
sub
scas
nop
lea
push
mov
jbe
inc
nop
sbb
dec
dec
jnp
mov
jecxz
xchg
dec
mov
loope
pushl
cmpsl
cltd
fsubrl
xor
and
pop
fldt
push
insl
loopne
jae
les
mov
push
xchg
loop
add
adc
div
ja
shr
mov
pusha
push
in
mov
fs
mov
jns
or
mov
sbb
shrb
lock
out
xchg
fdivs
in
sub
les
sbb
dec
es
insb
pushf
push
in
sub
data16
lock
mull
adc
mov
jnp
mov
xchg
ljmp
add
cmp
dec
push
lcall
xlat
jp
pop
mov
lret
jo
icebp
adc
push
arpl
adc
add
dec
insl
stos
roll
mov
and
sbb
dec
push
mov
add
adc
je
in
push
mov
popa
or
mov
jo
dec
popf
fwait
lcall
ljmp
mov
repz
iret
mov
or
push
push
pop
cltd
loopne
hlt
mov
and
mov
push
movsl
popa
pop
dec
out
dec
cs
iret
rclb
pusha
icebp
pop
sbb
mov
push
or
add
scas
lret
loopne
scas
addl
imul
fistpl
xorb
setns
cmp
inc
sub
jb
daa
movb
dec
add
mov
dec
pop
push
push
dec
jae
cwtl
out
scas
mov
xor
mov
out
shlb
outsb
push
packuswb
push
push
in
inc
movsb
dec
cmpsl
push
fidivrs
test
lds
xor
mov
pop
sbb
dec
cmp
jne
nop
jle
fldcw
push
pushf
jle
xchg
cwtl
rorl
fsubs
nop
cli
add
pop
pop
popa
push
jecxz
pop
xor
jl
and
or
fstps
popa
dec
out
push
rcrb
scas
sub
sti
dec
mov
popf
pop
lret
int3
mov
xor
addr16
sub
pusha
mov
push
mov
inc
mov
mov
cmpb
mov
mov
push
mov
cmovg
aaa
xorl
pop
sub
jbe
fistps
mov
mov
rclb
leave
out
jo
lea
testb
icebp
jno
jno
jno
sub
xor
pop
push
inc
sub
fbld
mov
adc
mov
scas
pop
mov
and
add
imul
xchg
and
or
xor
sub
bound
mov
push
ljmp
enter
add
mov
fs
adc
mov
xor
mov
stos
mov
mov
adc
inc
sub
xchg
inc
pop
mov
js
cs
or
mov
sbb
push
fisttpll
in
and
pop
sub
push
jmp
stos
mov
leave
negb
movsb
std
mov
addr16
sub
aam
push
sbb
js
mov
add
xor
testl
fwait
mov
xor
or
pop
dec
adc
add
shlb
adc
adc
sti
mov
xlat
lret
leave
outsl
adc
decl
rcrb
notb
xor
ret
adc
dec
cmc
leave
adc
add
mov
add
std
mov
mov
aas
xor
mov
mov
cli
out
add
enter
scas
test
andb
xor
pop
imul
lods
push
jo
dec
out
pop
aaa
cmp
lcall
call
and
ljmp
stos
pop
fisubl
dec
push
adc
ds
mov
push
mov
adc
shl
xchg
inc
xor
mov
pop
sub
leave
leave
repnz
mov
pop
out
ret
movsb
mov
adc
xchg
out
xor
nop
add
mov
in
nop
mov
push
loopne
test
add
inc
adc
jp
fisubrs
adc
fucomip
aad
sub
cmpsb
mov
xchg
rcrb
push
jae
cmp
cwtl
jno
jo
pop
cmpsl
add
dec
lret
xchg
sub
addb
fcompl
imull
mov
push
scas
sbb
sub
lahf
notl
ds
pop
mov
push
sbb
inc
sbb
cmc
iret
icebp
orl
dec
cs
cmp
jbe
lcall
int
xor
and
cmpsl
pop
cli
shll
setbe
movsl
dec
mov
inc
and
icebp
loop
addl
das
xor
mov
cld
pop
push
pusha
test
fwait
mov
or
jle
mov
out
pop
fcmovnb
xchg
lods
mov
shll
loop
cmp
mov
lods
leave
das
sbb
push
mov
or
cmp
call
jnp
pusha
je
xchg
fdivp
hlt
cpuid
mov
jo
fisttpl
pop
push
jb
leave
push
in
shll
je
cmpsl
mov
cmp
fistps
ljmp
xchg
lret
and
out
or
imul
shlb
mov
inc
cmpsl
mov
in
das
mov
xchg
push
xor
cmpsb
pop
mov
loop
mov
pop
dec
movb
dec
sub
sbb
add
es
push
mov
mov
adc
jle
int3
imull
jp
push
lds
adc
call
jmp
xchg
sub
and
clc
sbb
dec
pop
loop
hlt
in
mov
outsl
mov
dec
cli
dec
pop
xor
push
lea
sub
or
cmpsl
daa
sbb
push
leave
pop
xor
and
sbb
stos
lds
dec
ss
movsb
enter
lea
cwtl
or
cld
push
jns
pop
mov
xchg
push
mov
loopne
jmp
sub
pop
jnp
ljmp
adc
aaa
into
cmp
orb
or
push
mov
and
shlb
xchg
jecxz
not
pop
fistl
cmp
lea
inc
int3
dec
dec
jge
das
mov
loopne
icebp
push
jp
lcall
pop
push
or
inc
dec
out
imul
lods
dec
adc
clc
sbb
jno
pop
dec
imul
adc
pusha
sarb
repz
inc
sub
pop
and
pop
out
push
jecxz
movsb
es
dec
sbb
je
dec
int3
sbb
xchg
leave
inc
aad
std
sub
in
gs
cmp
xor
popf
stos
cwtl
aaa
cmpsl
jbe
pop
jne
nop
cmpsl
movsb
mov
out
ret
rorb
cli
xor
jg
jbe
outsb
popf
loop
jae
mov
cmp
in
pop
adc
mov
jbe
dec
adc
das
jmp
push
into
loope
add
cwtl
shlb
mov
push
pop
shrl
and
les
out
into
int3
lds
ljmp
adc
push
and
or
int3
inc
jecxz
loop
in
cs
xchg
scas
pop
push
mov
xchg
or
mov
scas
lds
pop
push
flds
dec
xorb
sbb
clc
movsl
push
and
in
rorb
sub
lahf
xchg
and
mov
push
and
cmpl
inc
ret
stos
sbb
jmp
mov
xchg
dec
add
enter
imul
rol
inc
mov
push
aad
pop
sub
fistpl
das
fidivs
shlb
aam
js
pop
lds
pusha
sub
sub
insl
loope
shl
and
push
pusha
cmp
mov
movl
xchg
into
mov
xchg
jg
adc
dec
mov
inc
pop
mov
push
xchg
jmp
push
jg
and
cmpsl
push
mov
fnstcw
inc
pop
sbb
andb
xchg
stc
je
ljmp
mov
xor
mov
dec
xor
dec
adc
enter
or
xlat
or
outsb
ret
dec
lahf
sbb
shl
inc
jecxz
sti
jbe
inc
into
push
xor
aam
jno
pushf
pop
mov
mov
dec
push
push
sbb
mov
mov
faddl
xchg
pop
cmpsl
je
adc
data16
fwait
sbb
inc
xor
daa
rcll
aaa
mov
xor
jecxz
mov
fistpl
testb
das
jo
mov
xchg
lock
imul
data16
vmread
and
test
lahf
adcb
sbb
adc
pushf
sub
mov
mov
sbb
fwait
hlt
daa
pop
cmp
scas
mov
jl
fisubrl
test
mov
jge
negl
clc
jge
lea
sbb
jo
loope
notb
cmpsb
sbb
pop
inc
in
mov
mov
in
ljmp
test
adc
imul
mov
cmp
inc
popf
and
add
aas
mov
sub
lods
add
out
movsb
les
lds
jns
mov
aam
inc
inc
int
add
ret
jge
mov
nop
icebp
xchg
mov
addr16
mov
cli
popf
cmp
and
cltd
inc
sub
cltd
je
and
or
mov
pop
pop
ret
sbb
mov
stc
andl
inc
mov
xchg
test
andb
aam
jl
iret
jb
subl
dec
sbb
lea
mov
aaa
dec
bound
lret
jp
ljmp
pop
test
stos
rclb
sub
rol
mov
nop
lock
cld
mov
imul
sarb
jae
adc
sub
sub
jb
pop
mov
mov
xchg
imul
std
repz
push
jp
cmp
out
scas
pop
xor
dec
push
xchg
sar
out
mov
negb
daa
cld
dec
out
pop
jp
adc
popf
hlt
ror
lock
shl
or
fimull
mov
ret
push
xchg
mov
or
cmp
and
fstpl
sub
xlat
add
outsl
nop
ffree
mov
cld
mov
adc
outsl
insb
fldcw
pop
aaa
inc
test
lods
xchg
pop
fucomip
popf
dec
aad
aaa
mov
fsubr
ret
into
push
cs
idivb
adc
fstpl
add
shrb
loope
push
xchg
idivl
push
xchg
push
data16
aas
jnp
hlt
scas
and
ljmp
enter
adc
in
pop
and
stos
loop
push
arpl
jp
loope
pop
das
dec
mov
sahf
jp
lea
ss
movsl
imul
push
test
inc
xchg
repnz
outsb
adc
sbb
rcrb
inc
iret
and
sahf
jne
xchg
xchg
scas
sbb
jl
sub
int
sbb
xor
mov
test
bound
je
push
inc
and
mov
jne
mov
lods
xor
and
push
inc
mov
lret
xchg
jmp
cmp
test
inc
cmp
pop
sbb
jle
repnz
pop
sub
mov
je
cltd
xor
rorl
imul
fcomps
lock
cld
jne
test
cmp
ds
sti
fiaddl
or
mov
cwtl
add
test
xor
fisubrs
jg
popa
aam
lds
and
stos
or
xchg
popa
jno
iret
dec
add
pop
cmp
and
jb
push
fistpl
rcrl
adc
jge
mov
test
ret
sahf
ret
ds
sarb
jo
negl
test
gs
mov
xchg
pop
adc
cwtl
xchg
loope
movsl
lea
sbbb
test
jae
pop
incb
pop
push
cli
int
addl
sbb
btcl
sbb
and
and
test
decb
xchg
jae
sbb
jne
fsubrl
sbb
std
cld
jne
out
cmp
cli
dec
cmpsl
xchg
ret
outsl
sbb
ret
out
adc
ss
cmp
repz
sbb
std
mov
push
mov
mov
pop
ret
stos
inc
in
add
in
hlt
xchg
jle
or
sbb
movsl
or
xchg
push
sub
sahf
test
shr
stc
nop
insl
es
and
fwait
mov
jno
push
dec
mov
rclb
aam
sbb
inc
pop
add
in
in
inc
jmp
jne
push
mov
mov
push
repz
sub
enter
insl
push
aas
inc
into
setno
fistpl
out
mov
lcall
fsubrl
lea
cmp
cmp
add
push
nop
cmp
lret
dec
pop
out
add
test
bound
dec
dec
mov
push
inc
dec
mov
push
popf
xchg
aad
pop
scas
mov
es
inc
popf
xor
cmp
or
ja
lret
daa
pusha
ljmp
test
mov
sbb
add
adc
gs
fdivrl
xor
sarl
cld
ret
push
xchg
push
mov
mov
pop
movsl
sub
gs
repnz
movsb
inc
pop
pop
iret
aaa
jp
sub
adc
add
loopne
out
cmp
aaa
ret
jle
lahf
inc
shl
push
xchg
inc
sub
mov
cmpsb
push
inc
fadd
add
popa
and
push
mov
test
add
or
xchg
lcall
test
push
sub
pop
pop
xchg
or
in
xchg
push
shrb
lds
fcompl
jne
cmp
outsb
pop
jbe
leave
push
pop
lods
popf
dec
cmp
add
cmpl
xchg
mov
jg
xor
pop
cmp
outsl
push
fwait
lock
loope
movsb
jb
xlat
jns
scas
mov
arpl
cmp
mov
addr16
xor
in
sbb
repz
shrb
std
mov
fcomps
push
xchg
arpl
push
cmp
cld
jb
aaa
cmpsl
push
leave
fwait
js
loop
outsl
pop
aaa
dec
int
out
pop
in
rorl
loopne
inc
ss
fiaddl
pop
pop
popa
pop
imul
fwait
mov
xchg
add
popf
cmp
call
stos
inc
insb
mov
push
fs
out
add
jb
jns
push
inc
fisttps
cli
cmc
push
xor
movsl
add
inc
inc
add
push
xchg
in
movsb
sub
and
push
jmp
call
dec
imul
mov
xchg
adc
sti
push
cld
shr
iret
mov
dec
mov
xor
mov
mov
loope
pop
test
cmpsl
add
ret
out
jno
and
or
jbe
sahf
mov
scas
add
jnp
mov
sbb
sarl
pop
dec
cmc
sub
out
gs
dec
or
lcall
scas
jns
push
clc
pop
jno
dec
out
sahf
mov
xchg
pop
sub
lret
aas
lahf
loopne
jl
inc
cmp
clc
pushf
xchg
icebp
push
aas
sbb
lret
xchg
call
pop
adc
mov
lea
or
cli
push
test
xchg
cmpl
mov
repnz
sbb
repz
fcmove
arpl
sub
push
inc
xor
inc
das
dec
and
inc
jl
fidivrl
dec
imul
xor
mov
loop
xlat
stc
sbb
call
xor
adc
jnp
out
dec
out
mov
sub
push
and
aam
and
cmp
jl
push
lods
xchg
stos
les
push
test
xchg
push
test
pop
mov
pop
fnstenv
dec
push
std
daa
sub
xor
mov
and
cmp
gs
test
je
lock
jle
push
add
fwait
imul
seto
movsb
lods
rolb
les
shll
rorl
mov
push
push
sub
andb
xchg
jnp
dec
pushf
dec
xor
pop
scas
ret
mov
or
cmc
pop
sbb
sub
or
les
cwtl
icebp
mov
out
repnz
shlb
push
adc
imul
insl
mov
fnstcw
fbld
ret
or
cmp
rolb
jg
sub
aas
cmp
je
mov
aam
repz
mov
jb
adc
xchg
pop
or
scas
mov
mov
cmp
cmpb
frndint
scas
idivb
jb
loope
and
sub
or
fdivrs
into
out
mov
xor
jg
pusha
and
popf
mov
inc
sahf
dec
pusha
data16
js
lock
cmp
shlb
inc
xor
in
ret
jp
xor
jle
push
cmp
aas
jp
je
add
lds
dec
pop
jmp
shld
push
scas
test
xchg
std
loope
cmpsl
sub
push
movzwl
jo
fstpl
cmp
ds
mov
mov
in
cmp
push
xor
xchg
pusha
jl
jbe
jle
dec
pop
inc
mov
test
in
cmc
movsb
pop
not
mov
lea
xchg
out
mov
std
cmp
fucomi
dec
hlt
dec
loope
movsb
fwait
jle
jecxz
jnp
and
outsl
dec
and
fwait
and
cmc
lds
and
and
sbb
xchg
jl
repnz
jmp
cmp
mov
and
outsl
inc
inc
jl
aaa
sbb
adcb
pusha
rolb
mov
ja
pop
add
fbld
mov
inc
daa
add
out
mov
inc
fstpl
lcall
nop
add
cltd
jmp
jmp
xchg
and
jb
and
movsb
mov
lret
test
xlat
call
add
mov
cld
mov
pushf
and
fnstcw
mov
pop
ss
fwait
cmpsb
aad
jl
fnstenv
or
aas
jge
and
add
mov
movsb
ss
sti
std
into
xor
testl
or
bound
lcall
xor
bound
daa
pop
fnstsw
pop
jnp
popa
fsubrs
and
inc
fldz
jg
push
sub
rol
loope
test
sahf
cmp
lods
add
xchg
scas
mov
dec
loop
dec
andb
inc
decb
test
rorl
js
imul
das
test
adc
fdivl
xchg
into
sbb
pop
inc
xchg
sbb
and
je
cmpsb
out
out
sbb
mov
mov
mov
out
or
mov
es
mov
push
shlb
push
adc
jo
popf
mov
xor
xchg
ljmp
xor
movsl
inc
stos
out
mov
arpl
test
ds
or
icebp
jg
ss
mov
mov
imul
mov
pushf
jno
jge
es
sarb
lahf
cltd
sbb
sub
out
mov
cmp
add
cmp
cs
in
cmp
mov
fimuls
test
loop
jne
cmp
push
arpl
stos
mov
mov
sarb
pop
pop
bound
inc
cmp
lret
cmpsb
add
fcmove
xor
inc
ror
mov
jnp
repnz
and
lret
ja
nop
fldt
push
push
pop
mov
push
jns
jge
add
adc
xchg
lahf
inc
add
test
sbb
push
pop
jecxz
xchg
sub
add
mov
ljmp
mov
sbb
pop
int3
mov
mov
repz
or
call
adc
scas
dec
pushf
loope
cmp
jmp
add
add
xchg
cs
test
mov
xor
popf
xchg
nop
fs
adc
mov
xor
mov
imul
pop
cmp
int
and
sub
jp
rolb
xchg
leave
repnz
pop
jecxz
cmc
sub
jbe
jb
sete
pop
and
enter
std
push
lds
adc
sub
sbb
icebp
mov
or
daa
scas
mov
jne
imul
mov
int3
test
cmp
addl
sub
test
aas
add
insb
imul
sbb
test
mov
popa
sub
insl
sbb
push
adc
aaa
aaa
lcall
and
pop
cmc
xor
cmpsl
push
mov
mov
push
std
inc
pop
or
movl
or
mov
push
push
rorl
ja,pt
mov
test
jnp
cmp
in
pop
je
fisubs
mov
jbe
lods
sahf
lahf
jl
aad
pushf
movsl
stos
inc
out
out
adc
adc
repz
mov
pusha
js
cmp
pop
hlt
push
ss
cmp
je
cmpsb
sbb
lea
rclb
adc
pop
repz
add
adc
notb
orl
mov
sub
mov
cwtl
pop
cmp
xchg
daa
cmp
push
iret
call
bound
int3
cmc
mov
adc
mov
jb
pop
popf
movsb
mov
pop
inc
in
dec
cmp
xchg
inc
and
push
in
nop
imul
rcll
inc
gs
push
ds
pusha
js
pop
ljmp
lret
ds
xor
cmp
outsb
ljmp
mov
std
ljmp
jbe
cltd
popf
dec
in
xchg
test
orl
jae
sub
add
sti
and
addb
jno
push
adc
sbb
xchg
loopne
cmpsb
or
fisubrs
lcall
jb
in
mov
push
cmpsb
rclb
cmp
bound
add
and
test
ret
cmp
xchg
mov
and
or
and
je
lods
pop
scas
jno
adc
inc
xor
inc
add
insl
cmp
das
xor
pop
test
popf
inc
cmp
mov
data16
jno
nop
cmp
inc
lahf
pop
ret
sbb
in
push
push
ja
fcomp
sbb
lds
xor
nop
loopne
xor
outsl
bound
dec
push
mov
into
popa
sub
repnz
jo
ja
jmp
jne
std
fsin
ror
adc
in
push
mov
int3
dec
sub
insb
lods
lods
lret
movsl
mov
pop
mov
scas
sbb
sub
push
push
ret
in
mov
aad
movsb
addr16
das
pop
push
mov
out
pop
mov
stc
rclb
gs
addr16
icebp
dec
or
and
or
adc
das
pusha
jns
icebp
add
daa
test
mov
lret
imul
push
test
rclb
ret
inc
xor
mov
lods
movsb
cmp
outsb
ds
push
add
pop
or
push
ds
dec
clc
stc
add
pop
mov
aad
push
push
xchg
add
in
cmp
lahf
inc
out
sbb
jns
xchg
cmp
mov
inc
or
mov
push
sub
or
xor
xchg
jecxz
jo
nop
lods
add
jg
insl
mov
pusha
cs
sub
pop
mov
and
or
cmp
mov
dec
cmpb
pop
mov
dec
xor
orb
sbb
and
les
sbb
fprem
jmp
arpl
mov
fiadds
dec
mov
fmuls
adc
movsb
mov
inc
je
nop
sub
pop
xchg
inc
jne
jp
and
push
cwtl
fwait
sbb
imul
sahf
sub
enter
es
mov
mov
lret
xchg
ja
fidivrs
mov
push
cmp
shrd
xor
sub
pop
mov
repnz
mov
inc
and
adc
add
or
pop
dec
xchg
mov
and
mov
data16
ret
mov
fcoms
sub
mov
xor
xor
in
dec
xor
push
clc
out
jg
outsb
outsl
enter
add
cmp
rcrl
in
jge
dec
mov
aaa
xchg
stos
push
pop
movswl
clc
aam
and
icebp
sub
jno
xchg
scas
sub
stos
sti
int
mov
stos
pop
pop
insl
cmpsb
push
lcall
in
inc
adc
jle
int
push
xchg
xorb
sti
roll
adc
aas
loop
pop
enter
pop
jmp
inc
mov
xchg
cld
xchg
push
inc
sbb
fisubs
dec
inc
mov
sbb
or
scas
cli
pusha
neg
adc
lcall
cmc
aam
into
mov
das
in
mov
dec
andl
jp
xchg
daa
mov
iret
pop
out
mov
ss
out
mov
fcmovnbe
fistl
movsl
add
xlat
pmaddwd
mov
outsl
sbb
cmp
add
fwait
sub
sbb
fwait
xor
aam
enter
mov
dec
push
out
dec
loope
mov
lahf
out
clc
sahf
pusha
popf
ss
inc
lahf
enter
push
lods
add
scas
fidivrl
push
cli
repz
jno
inc
push
popf
ret
jle
cmc
inc
inc
lods
cmp
push
and
int
stos
ss
cmp
jmp
aad
push
mov
ficompl
inc
xchg
mov
sbb
xor
outsb
mov
sbb
in
out
movsl
mov
rcrl
pop
repnz
mov
fisubrs
jnp
adc
mov
jno
shr
mov
outsl
mov
jg
fbld
and
sbb
jmp
xor
pop
es
pop
xor
push
mov
xchg
sarb
sbbl
cs
pop
or
repz
lock
add
adc
in
or
cld
mov
add
and
ljmp
mov
or
movsl
jmp
dec
mov
mov
jbe
andb
mov
jbe
dec
adc
mov
xor
mov
ret
sahf
jnp
fnstcw
cwtl
push
sub
js
ficomps
outsb
in
or
mov
mov
lcall
mov
int
rolb
movsl
or
dec
int3
lds
pop
mov
add
shll
in
inc
lock
push
xlat
lahf
addr16
adc
dec
lret
ret
outsl
int3
mov
test
fnsave
inc
test
cmp
or
pop
iret
adc
nop
adc
jmp
xchg
mov
scas
xor
jnp
inc
dec
jno
dec
jge
jg
or
mov
icebp
movsl
jmp
popa
push
idiv
cld
xchg
add
sbb
xor
lock
adc
ret
test
sub
cli
jmp
stos
adcb
imul
adc
pusha
xor
popf
push
outsl
push
mov
or
lea
jle
cmpsb
sub
pop
sbb
dec
scas
pop
inc
cmpsb
mov
sub
movb
mov
add
xor
mov
mov
sub
je
in
dec
mov
neg
xchg
and
cmovg
pop
jo
shrb
sub
mov
jecxz
sbb
shrb
test
inc
sub
mov
mov
int
jbe
ret
jnp
ss
in
or
popf
mov
sub
test
mov
xor
leave
data16
rorl
add
lods
enter
sbb
jb
push
xchg
in
push
dec
cmpsb
inc
pop
xchg
push
jno
outsl
adc
push
scas
mov
dec
out
hlt
cmc
pop
jae
sarb
outsb
add
icebp
mov
popf
sbb
popf
dec
adc
inc
repnz
jbe
pop
mov
mov
or
popa
push
mov
cmp
inc
test
mov
push
ss
cmpsb
xchg
std
jecxz
sub
test
mov
push
jns
mov
push
adc
fwait
pop
jo
sub
push
daa
pop
hlt
pop
inc
add
fisttpll
dec
jg
xchg
ud1
out
add
and
insb
sub
in
adc
scas
movsb
cltd
adc
pop
dec
ret
ret
mov
and
xor
mov
adc
jecxz
jmp
outsl
fbld
or
cltd
add
push
mov
add
hlt
cli
dec
sbb
mov
mov
adc
pop
xor
push
adc
lods
mov
es
int
das
xchg
cli
add
jno
loopne
rol
mov
mov
cmp
push
mov
xlat
adc
imul
aad
mov
fwait
xchg
and
jb
mov
or
add
push
ret
xor
scas
imul
stos
scas
and
jmp
jnp
adc
test
or
pop
int
shrl
jo
sub
add
cs
lea
or
adc
jl
cmp
test
insl
push
movsbl
hlt
cmp
sub
frstor
jp
or
jge
push
cmp
out
inc
into
cmpsb
in
cwtl
pop
sbb
cs
mov
mov
repz
cmp
arpl
and
pop
sbb
mulb
jl
push
iret
ret
jne
psadbw
std
cli
enter
inc
outsb
shl
fcmovu
scas
xor
cs
mov
into
jecxz
inc
push
inc
loop
test
out
jle
xchg
sbb
rorb
pusha
pop
hlt
lahf
int
test
push
in
lds
decb
mov
mov
aad
jb
lods
adc
jb
por
mov
out
or
pop
jmp
mov
outsl
dec
push
loope
push
xor
xor
cld
inc
sbb
push
cltd
test
int
out
adc
dec
sbb
aam
enter
jl
out
cld
adc
pop
out
pop
stos
jp
fs
mov
in
cmp
in
and
rcrl
push
in
aaa
cmc
sbb
sub
out
mov
popf
xchg
jp
lock
adc
lret
xor
int3
idivb
mov
or
loopne
mov
mov
sbb
jo
and
cmp
pop
and
cld
repz
scas
sbb
inc
jmp
shlb
or
cltd
mov
les
int
mov
lods
jmp
ds
cmp
or
incb
leave
hlt
dec
arpl
mov
js
pop
mov
popf
mov
inc
adc
and
push
xchg
fbld
fsubrp
sub
call
jb
xchg
int3
pop
lahf
push
enter
sbb
push
cmpsb
xchg
aaa
dec
and
adcl
mov
cmp
xchg
xchg
and
out
mov
lret
jp
and
in
sub
push
divb
add
adc
mov
mov
cmp
jno
cli
add
aad
out
sub
shrl
cld
lods
xchg
nop
daa
stc
xor
mov
mov
cmp
cmp
enter
fs
das
shl
fsubr
dec
ljmp
dec
add
out
xlat
or
dec
add
loope
or
or
push
push
call
sub
mov
addl
mov
sbb
mov
mov
test
ret
rclb
jne
in
push
loop
lods
ja
push
xor
sbb
pop
popa
dec
rcr
xor
adc
imul
xchg
dec
push
lahf
fdivrl
aaa
fisttpl
mov
adc
ret
clc
or
and
jbe
fstps
lret
imul
outsb
jp
jb
ffreep
in
adc
cmp
in
jg
adc
shr
scas
dec
call
mov
js
lds
dec
fcmovnbe
adc
sub
shll
aaa
ds
std
add
add
cld
loopne
cmp
test
dec
scas
les
sub
int
sbb
cwtl
ss
addl
or
adc
dec
mov
mov
mov
out
test
add
pop
sub
call
jno
lods
lret
jno
ljmp
out
scas
sbb
aaa
test
cld
adc
lcall
aad
mov
jge
jmp
lds
jp
int
sahf
pmulhuw
cmp
movsb
sbb
adc
scas
or
pusha
stos
into
loope
mov
pop
test
test
inc
cmp
ja
mov
icebp
popa
dec
ja
push
lret
cmp
std
repnz
mov
push
in
daa
dec
pusha
dec
adc
es
shll
call
add
xor
push
jl
xchg
sbb
stos
out
mov
and
sub
fwait
sub
mov
movsb
mov
sbb
sbb
pop
push
mov
add
and
andl
sbb
push
repnz
mov
aas
xor
arpl
cmpsl
jg
into
xchg
pop
lds
test
cs
sahf
cmp
aam
cmp
out
adc
cmp
repnz
rol
imul
sti
hlt
inc
push
aad
mov
xchg
jge
cli
test
repz
mov
and
stc
loop
mov
xchg
sub
push
adc
push
cmp
cwtl
mov
cmp
mov
xor
lds
and
arpl
lds
lret
inc
test
sti
pop
pusha
xchg
lret
out
out
fstp
in
mov
nop
lcall
push
and
mov
or
pop
mov
lahf
inc
loope
iret
divl
and
or
xor
adc
inc
push
mov
push
or
std
jl
pop
cmpsb
addr16
out
cwtl
lahf
adc
subl
cs
mov
aas
in
enter
das
xorb
mov
dec
into
loop
pop
mov
negb
mov
bnd
jp
push
adc
mov
sti
mov
pusha
lahf
push
mull
cmpsb
add
scas
xor
inc
xor
cmp
andb
fwait
xchg
add
jecxz
in
lock
negl
push
idivb
orb
and
dec
loope
or
xlat
sub
in
inc
aad
mov
out
jecxz
data16
insl
sbb
mov
ljmp
pop
mov
add
rolb
xor
jno
dec
arpl
xchg
cvtdq2ps
push
xor
or
lds
arpl
jmp
jb
inc
aas
and
imulb
stos
pop
pushf
arpl
add
lret
pop
pop
test
shll
les
lret
mov
insl
mov
icebp
arpl
jge
push
lea
xchg
test
push
push
xlat
repz
add
jbe
inc
push
mov
xlat
xchg
cmp
push
inc
mov
mov
stc
bound
mov
aad
add
xorl
mov
cmpsb
sbb
mov
pop
or
arpl
cmp
cli
scas
sub
add
das
fscale
or
in
aad
pop
ja
fnsave
cmpsl
mov
mov
fs
push
pop
pushf
out
stos
jge
lock
shr
out
adc
popa
dec
lods
fiaddl
and
sbb
ror
fwait
imul
lds
int
inc
jae
leave
bound
ja
fisttpl
xchg
or
push
mov
es
cmp
scas
and
js
ret
movsb
sub
hlt
repnz
bound
movsl
sbb
mov
aaa
sbb
pushf
sub
inc
sbbb
adc
imul
sbb
dec
fistl
add
int
std
cli
sub
insl
mov
fnstcw
test
mov
or
imul
insb
filds
subl
xchg
add
addr16
subb
inc
push
loope
or
or
mov
je
cmp
mov
xor
ds
inc
mov
xchg
ret
mov
xchg
push
and
aad
stc
pop
js
lods
add
xchg
jl
mov
dec
rcr
pop
add
mov
icebp
mov
shlb
sbb
sbb
aad
movsb
mov
mov
sti
sarb
dec
incb
aam
xchg
ret
jno
cmpsl
inc
pushl
lods
fs
stos
jge
into
dec
cmp
push
add
out
movsb
shll
or
dec
les
in
daa
adc
aam
sub
jle
inc
mov
dec
sbb
mov
or
cs
rcll
ja
imul
sub
ret
and
in
xlat
les
pusha
les
jecxz
xchg
addb
xchg
movsl
jbe
xor
out
mov
mov
cli
mov
xchg
cmp
dec
das
jg
push
lds
push
mov
lcall
sbb
mov
jp
in
mov
dec
pusha
jecxz
push
fdivrp
lret
inc
jmp
fcomps
mov
inc
sbb
stc
mov
sbb
add
sub
dec
jo
jne
test
pushf
jp
leave
cmp
xchg
mov
cmovno
inc
jp
daa
push
addl
int3
pop
dec
mov
test
mov
adc
xchg
imul
in
mov
pop
jmp
and
mov
adc
jp
xchg
mov
fsubs
cmp
pop
xor
jp
out
xchg
test
sti
rorl
dec
or
push
xor
push
mov
fists
into
jae
cmp
jo
int3
push
les
dec
sub
cld
cld
lea
ss
add
pushf
shrl
lock
cmp
xchg
and
iret
insl
out
sar
mov
xchg
mov
jle
cmpsb
ret
mov
mov
mov
jae
xchg
pop
aas
mov
xchg
enter
pop
and
rorb
out
pop
repz
sbb
leave
sbb
fcmovnb
add
outsl
inc
add
aaa
ljmp
das
fxch
mov
adc
clc
loopne
inc
cmp
mov
add
cs
adc
sub
je
insb
lods
push
push
and
xchg
out
fsub
sbb
jge
fidivrl
pextrw
jnp
push
jb
ljmp
jl
jp
outsb
leave
push
inc
mov
jecxz
cmp
add
lret
cmp
clc
xchg
mov
daa
bnd
dec
pop
dec
lds
arpl
sub
adc
dec
insl
cmpsb
jecxz
ss
sbb
adc
sbb
test
mov
std
cmp
push
xchg
xchg
repz
sahf
mov
inc
sub
xor
out
dec
cli
movsb
mov
cwtl
xchg
xchg
dec
cmp
pop
jl
lret
les
pop
cmp
jl
rcll
add
sbb
pop
mov
pop
pop
xor
mov
mov
iret
mov
push
pusha
pop
and
sbb
xchg
pop
cmp
pop
dec
addr16
pcmpeqw
gs
push
inc
cltd
lea
mov
or
xor
cmc
cli
and
mov
xchg
sbb
gs
push
adc
jecxz
push
cs
cmpsb
or
lret
cmp
ret
adc
repz
test
lock
xlat
jp
or
rol
push
stos
lcall
sub
fsubrl
test
shrl
xchg
mov
lea
xchg
jmp
push
fistpl
test
nop
add
add
xchg
aaa
scas
mov
ss
in
repnz
jnp
adc
shrl
adc
xor
adc
stos
xchg
lods
xlat
mov
xor
jle
mov
jno
mov
aad
orb
xchg
int3
pop
cmpl
test
movsl
xlat
push
jbe
popf
pop
inc
shrl
dec
inc
jle
repz
lods
clc
jl
rcl
jecxz
xor
shll
or
push
inc
add
ret
push
andl
mov
mov
loope
rol
pop
movsb
in
adc
xlat
jp
es
cmpsb
xchg
cmp
pop
pop
stc
ljmp
inc
jns
loope
in
movl
in
push
into
out
in
sub
jg
inc
mov
mov
xor
mov
add
inc
sub
sbb
push
loope
mov
insb
popf
aaa
push
mov
ret
mov
and
dec
ret
cmp
in
mov
pop
xchg
out
pop
call
mov
jnp
xchg
inc
jg
adc
dec
daa
cld
xor
ror
outsl
jae
jecxz
jl
mov
imul
out
icebp
call
jns
movsl
int
mov
gs
mov
insl
inc
sbb
push
xlat
pop
daa
sub
push
fstl
loop
outsb
xlat
aas
jbe
imul
mov
pop
jecxz
xlat
adc
mov
push
fisttpll
roll
cli
fdivs
cmp
push
cmp
inc
mov
imul
jne
mov
pop
sahf
jae
icebp
xchg
dec
sti
sti
cmova
es
lahf
data16
or
fisttpl
sbb
aas
lods
popa
sbb
fnstcw
lahf
sbb
mov
jae
testb
adc
out
jns
pop
push
lea
mov
ds
lds
andnps
cli
pop
enter
and
inc
adc
rcrb
cmp
fstpl
mov
inc
push
adc
pop
clc
inc
jne
xchg
out
dec
xchg
aas
sub
in
mov
sbb
sarl
or
mov
push
jge
aad
sbb
mov
push
and
and
xorl
mov
fs
sub
lods
xchg
dec
mov
enter
repz
test
and
or
or
jp
js
pop
xor
xchg
sbb
mov
xchg
je
cltd
repz
xorb
mov
mov
push
lret
jecxz
lahf
push
pushf
imul
xor
std
aad
addr16
loope
mov
sub
fisubs
outsb
scas
push
daa
in
inc
into
out
mov
xor
iret
and
out
mov
loop
jae
xchg
sub
es
inc
mov
inc
mov
mov
sbbl
mov
xchg
ja
mov
ret
ja
lea
fstpt
pop
test
pushf
pushf
push
mov
int3
inc
xchg
mov
cmc
lods
push
xchg
xchg
daa
cs
fmuls
out
ds
test
sarb
inc
push
push
sbb
aad
loopne
pop
xchg
xchg
jbe
xchg
std
cltd
sti
movsl
mov
sar
push
inc
sbb
xor
and
aam
push
nop
jecxz
xchg
jne
fidivrl
or
mov
sbb
lock
inc
fsub
sti
rolb
sti
pop
loopne
push
pop
cmp
lock
sub
pop
movsb
or
into
xlat
and
jae
jne
ja
xchg
aad
add
out
mov
int
jb
lods
arpl
outsb
hlt
mov
fisttps
push
cmpsb
dec
notl
pop
cltd
imul
pop
xchg
fs
popa
int
aad
sbb
xor
jae
ss
jns
scas
jecxz
aas
mov
cmc
sub
and
sahf
xor
pop
roll
ret
sub
jne
pop
push
lds
mov
inc
xchg
dec
pop
das
jp
xor
fwait
sbb
pushf
repz
and
sub
or
shlb
fsubrs
adc
jle
repz
or
arpl
out
lods
fst
cltd
xor
dec
mov
add
jb
push
dec
leave
aam
insb
arpl
lea
adc
jmp
orb
and
cwtl
adc
int3
push
push
mov
dec
sahf
outsb
int
insb
imul
lahf
xor
jl
scas
jp
shl
stc
add
stos
fsubl
cmp
enter
inc
or
loope
enter
adc
adc
out
lret
push
iret
sbb
push
dec
subb
inc
pop
inc
dec
test
out
xor
cwtl
stc
out
call
popa
jp
pop
jecxz
inc
cmp
jb
push
sahf
popa
sbb
sub
aaa
add
push
adc
mov
ja
dec
jge
jle
les
scas
pop
sti
jno
mov
fwait
xor
sbb
pop
dec
push
and
imul
popf
push
xor
jg
dec
iret
mov
pusha
dec
testb
jae
xchg
lods
jmp
or
cmpsb
dec
testl
and
mov
mov
push
int3
cmp
mov
rcrl
rcll
mov
filds
in
xor
test
stos
scas
outsl
xor
ds
icebp
dec
insl
mull
adc
jo
mov
and
jo
push
pop
fistpll
cmp
mov
fldt
outsl
mov
add
dec
pop
insl
and
outsb
add
push
mov
fbld
lcall
cld
scas
in
loop
imul
cltd
lcall
mov
push
mov
add
cmp
in
push
aas
ja
xchg
xlat
adc
mov
xchg
pusha
mov
rclb
dec
mov
xor
push
imul
mov
sbbb
inc
cwtl
loop
or
lret
xor
outsl
xrelease
mov
sub
popa
xor
imul
fdivl
cmp
sub
mov
mov
xchg
sbb
pop
xchg
push
cltd
lods
test
pop
adc
rdpmc
mov
mov
sub
adc
jne
add
in
incb
xor
imul
cmpsl
push
and
sbb
icebp
mov
fwait
jno
je
jo
xchg
pop
cmp
rorb
xor
or
iret
sbb
jmp
pop
mov
jge
daa
mov
test
in
pop
ss
leave
lods
js
xor
imul
mov
jbe
cltd
call
and
hlt
dec
mov
xchg
test
lret
push
mov
sbb
leave
and
and
push
dec
push
movsb
jg
add
push
cs
dec
ds
data16
sbb
and
mov
jb
and
xor
mov
add
xchg
push
filds
mov
imul
jb
mov
dec
and
test
mov
push
cmp
arpl
aad
je
test
movl
fistl
leave
xchg
ficompl
inc
ficomps
or
in
pop
nop
xchg
mov
lahf
cmovs
xor
xor
mov
imul
sub
nop
ja
cld
jo
sysexit
mov
mov
repz
sti
movsl
push
xlat
pop
nop
lods
andl
std
fwait
adc
add
cmp
or
int3
mov
adc
xchg
sbb
jns
mov
ss
cmp
aas
mov
sub
jp
je
out
cwtl
mov
lock
mov
test
idivb
mov
push
mov
dec
lock
xor
pop
imul
out
add
repz
cmp
dec
les
lock
and
push
bound
repnz
iret
mov
ljmp
or
mov
iret
pop
or
es
inc
call
bound
lret
xor
inc
jg
pop
xchg
std
pop
adc
jbe
ret
pushf
aad
cmpsl
push
pop
jbe
dec
clc
add
sarb
mov
jns
clc
fs
scas
fwait
jne
sub
ret
ret
push
cmpsl
push
jmp
mov
out
inc
mov
bound
pop
or
aad
lret
dec
es
xor
call
xchg
jb
movsb
dec
rcr
sbb
ret
hlt
sbb
aaa
popf
ret
pop
into
xchg
movsl
popa
aas
cs
gs
cmp
pop
add
push
mov
cwtl
scas
xor
mov
test
and
push
adc
test
shrb
adc
dec
mov
adc
adc
aaa
xor
and
arpl
bound
ss
js
jp
lret
stc
bound
sbb
or
cmp
cmp
and
fs
lea
insl
cltd
xor
or
xor
dec
fnsave
inc
or
test
xorb
enter
das
xchg
testb
imul
dec
xor
xchg
data16
negl
mov
lds
mov
xor
xchg
jne
cmp
mov
mov
clc
cmp
sbb
jle
mov
shlb
fsubl
ficompl
inc
ret
fld
push
add
imul
add
fcoms
xlat
out
xorb
addr16
aas
mov
pop
into
std
push
xor
hlt
pause
mov
add
inc
add
jae
stc
jbe
xchg
xor
push
cmc
mov
js
sahf
or
jmp
in
cmpsl
add
jecxz
adc
xchg
jle
mov
mov
cmp
xlat
cmp
sub
fcomi
lret
popl
add
adc
jge
mov
and
jno
jp
push
push
push
xchg
jns
cld
cmp
xchg
cmpsb
ss
jns
mov
mov
bound
or
mov
insb
lods
xchg
ds
inc
jae
outsb
cwtl
mov
outsb
dec
cmpsl
pop
add
or
cltd
mov
popf
scas
adc
inc
add
pop
push
leave
repnz
add
inc
jge
scas
add
sbb
test
std
out
inc
dec
or
adc
push
fistl
test
pushf
or
out
pop
mov
in
sbb
icebp
mov
jbe
jbe
jmp
in
mov
arpl
cli
pushf
xchg
popf
dec
das
scas
imul
sub
xchg
test
xor
jo
pop
xor
cmp
mov
sub
sbb
cmp
shrb
adc
mov
outsl
mov
stos
push
push
dec
jae
data16
cmpsl
inc
or
mov
xchg
mov
inc
inc
cmp
stc
rcr
adc
add
sbbb
mov
and
cwtd
push
cmp
jo
jb
loop
push
test
or
xchg
push
lods
test
adc
pop
mov
repnz
push
and
and
sbb
lods
lods
mov
bound
pop
jmp
xor
in
inc
data16
push
das
jns
je
cmp
int3
test
in
into
dec
callw
shll
sub
or
stos
imul
add
or
push
or
dec
or
xor
or
mov
popa
jae
sbb
leave
add
inc
iret
es
mov
rcrb
mov
mov
popa
popa
inc
mov
sub
xor
xor
sbb
test
sbb
inc
movsl
mov
xchg
std
push
push
stos
ja
inc
inc
cmp
adc
mov
dec
dec
dec
cli
mov
call
dec
stc
lret
cmp
mov
cmc
mov
jae
mov
mov
mov
imul
and
xchg
call
jb
push
test
or
repnz
xchg
mov
shl
push
jo
sti
pop
sbb
fldcw
inc
push
add
mov
movsb
cmpsl
insl
insb
lods
dec
aam
repnz
call
pop
out
xchg
jbe
scas
xlat
cld
xor
pop
movsb
or
sbbb
fldl
rcr
aaa
add
fcmovb
daa
call
jne
and
popa
inc
sbb
dec
scas
add
xchg
dec
outsl
repz
mov
std
test
add
mov
ja
mov
cmp
les
js,pn
or
cltd
sub
jns
decb
cltd
ret
fchs
jecxz
loope
lret
lret
cmp
rcrl
inc
jl
call
rol
in
push
sbb
aam
pop
xorb
mov
mov
sbb
lcall
push
aaa
jmp
imul
roll
mov
ds
decl
clc
sub
xchg
mov
test
jbe
cmp
cmp
mov
inc
inc
and
push
lret
arpl
pop
mov
adc
adc
cmp
push
je
lock
daa
fistps
repnz
inc
outsb
imul
jmp
xchg
push
lea
push
mov
jl
shl
scas
cwtl
sub
in
and
jns
xor
iret
mov
fildl
repnz
push
adc
jmp
ljmp
es
lds
clc
bound
jns
add
inc
mov
jne
test
aaa
cmc
cmp
xchg
mov
xchg
in
push
sbb
sbb
xor
mov
fsubrl
adc
mov
sti
xchg
jo
push
jns
adc
jg
stos
pop
mov
push
ljmp
pop
sub
ljmp
add
jmp
mov
mov
mov
or
je
push
mov
mov
bound
test
dec
imul
xor
pop
nop
xchg
es
push
out
outsb
loope
fistpl
popf
xchg
sbbl
push
jb
movsb
movsb
xor
dec
ret
fnsave
jg
fmul
mov
addr16
scas
bound
dec
enter
les
inc
jmp
push
testb
mov
jbe
dec
fisttps
in
icebp
push
shl
and
pop
pop
out
add
push
adcl
imul
jmp
insb
xchg
fsubrs
ret
mov
pop
insl
imul
inc
xlat
sbb
or
mov
test
sbb
xchg
cld
fisubrl
pushf
mov
add
adc
das
adc
and
push
inc
enter
cmp
movsb
std
jb
rcll
mov
call
iret
and
shr
dec
movsl
inc
loopne
xor
jmp
pop
xor
popf
sbb
jns
sub
sub
sahf
or
or
jp
or
cwtl
xchg
clc
pop
mov
dec
pop
push
idivb
idivb
leave
mov
sarb
imul
icebp
xchg
jno
je
mov
aas
xchg
mov
daa
minps
dec
ret
inc
cmp
fwait
idivl
mov
das
sar
jo
movsl
mov
adc
push
mov
jns
xchg
mov
add
mov
xchg
outsb
adc
cmp
pop
inc
mov
xor
rolb
insb
sub
lahf
jge
sbb
jo
and
cmp
add
sbb
jae
test
je
push
daa
mov
mov
jae
loope
sbb
inc
adc
leave
xlat
jle
dec
pop
in
sbb
pop
inc
mov
xor
lods
and
or
jecxz
mov
inc
or
mov
mov
push
insl
push
and
stc
inc
pop
dec
insb
filds
in
jns
aas
jg
push
xor
xchg
push
mov
mov
fdivrs
push
aad
mov
lahf
je
push
adc
insb
icebp
push
loope
loopne
sbb
mov
daa
aam
sub
or
jge
mov
pop
push
icebp
pop
ror
mov
lea
mov
clc
js
bound
adc
pop
jo
pop
movsl
fiaddl
mov
clc
push
xchg
in
and
sbb
or
push
pop
sbb
inc
pop
jns
push
pop
jl
pop
adc
gs
stc
dec
fcoms
mov
jbe
inc
mov
adc
pushf
xor
mov
mov
das
or
cmp
movsb
push
sub
xchg
jmp
sbb
in
aad
push
pop
or
dec
test
test
ss
cmc
sub
ljmp
insb
xchg
loopne
out
popf
pop
fadd
pop
scas
mov
loopnew
adc
bndldx
test
push
imul
in
and
hlt
lahf
in
pop
into
mov
jae
scas
mov
add
pop
push
fcmovu
rol
mov
pop
mov
sbb
adc
dec
or
fnstenv
shlb
or
sub
lea
data16
xchg
fisttps
bound
push
push
daa
mov
push
bound
cmpsb
inc
ss
out
mulb
ds
cli
out
xor
or
mov
push
pushf
mov
nop
mov
push
scas
sbb
sarb
in
adc
jle
xor
test
inc
cmpsb
movsl
push
outsb
stos
mov
dec
mov
mov
mov
pop
pop
and
icebp
test
sbb
imul
sbb
lods
sub
cmp
enter
in
and
mov
mov
adc
mov
out
or
mov
shlb
in
aad
scas
clc
stos
pop
fcomps
ja
xchg
mov
test
jns
aam
js
leave
cli
rcrl
jmp
add
cmp
and
jo
loope
in
jbe
inc
dec
xchg
nop
pop
mov
clc
and
rcll
mov
lods
fwait
dec
mov
fcoms
stos
mov
push
sbb
add
ljmp
out
mov
mov
xor
xchg
mov
jb
stos
sub
cli
lret
adc
xor
mov
enter
mov
jae
sub
jecxz
xchg
stos
mov
inc
push
out
shl
inc
jne
or
cmpsb
lods
je
mov
daa
out
hlt
outsb
leave
xchg
imul
mov
aas
add
cmpsb
shll
notb
fnstcw
add
sbb
push
push
rcll
cmp
add
bound
imul
and
insb
mov
loopne
mov
inc
rolb
sub
movsb
ja
and
lahf
mov
mov
dec
dec
btr
test
pop
push
es
adc
lcall
enter
loope
cli
xchg
mov
push
cltd
scas
mov
mov
cmpsl
int
inc
mov
pop
ret
clc
imul
cmp
cwtl
int3
xchg
cmp
ret
jmp
sub
fcompl
loopne
fists
pop
adc
mov
outsb
push
cltd
fisttpl
into
adc
xchg
fwait
imulb
xor
mov
rorl
fcompl
xorl
fdisi(8087
sbb
test
stos
arpl
or
out
mov
ror
lret
cmpsb
inc
lods
xor
sbb
sub
imul
push
push
push
movsl
xor
add
cmp
sbb
xor
rcll
out
cmpsl
test
addr16
push
repnz
lahf
idivl
insl
mov
nop
cmp
faddl
out
xchg
inc
xorb
sahf
insl
cmpsl
and
cmp
mov
and
pop
mov
mov
les
pop
pop
add
xchg
insb
xchg
add
or
or
mov
shlb
in
pusha
aam
push
aas
sar
xchg
sbb
xor
negb
notb
cmc
stc
repz
and
repnz
adcl
imul
push
mov
out
mov
aad
cmpsb
test
fldenv
adc
jne
les
mov
push
mov
aaa
push
push
bnd
inc
pop
femms
out
mov
adc
inc
fadd
push
pop
push
sbb
div
inc
call
imul
mov
in
daa
sti
sbb
lret
nop
or
in
xor
ret
test
mov
imul
aad
mov
cmc
and
popa
loope
daa
and
insl
in
in
xor
ja
xlat
push
cs
mov
sbb
orb
sbb
fucom
jge
pushf
inc
in
inc
int
or
and
pop
scas
push
pop
xchg
lahf
rcrb
and
adc
sbb
cmp
add
js
stos
jg
loop
iret
xchg
inc
push
jb
les
jmp
imul
xor
jg
and
loopne
enter
in
roll
lods
aaa
xchg
push
clc
sahf
in
out
sbb
mov
inc
clc
add
ffree
sbb
inc
push
ss
push
setp
mov
shrb
xchg
mov
sub
aas
and
nop
pop
inc
jae
insl
mov
aad
aad
sub
jge
push
dec
scas
sbb
gs
sahf
push
add
cmp
and
and
jecxz
cmp
mov
pop
and
or
ficoms
xlat
xor
outsl
push
dec
push
loopw
lods
rcr
xor
cmp
mov
pusha
pop
lret
jbe
or
enter
sub
aaa
scas
and
jl
gs
cli
movlps
ret
mov
ljmp
push
lods
push
das
sbb
mov
arpl
mov
cli
cmp
jmp
popa
or
jae
cmp
sbb
push
sbb
and
fiaddl
out
popa
aam
dec
ret
hlt
or
inc
or
fmull
fsubrl
stc
mov
lods
jbe
inc
mov
stos
sbb
xor
push
inc
sarb
cmp
mov
jb
mov
ds
or
adc
idivb
push
in
stc
mov
fbstp
movsl
jl
and
orl
int
cld
xchg
push
loop
in
lret
xchg
xchg
inc
xchg
iret
aam
and
aad
outsb
fs
fs
sahf
mov
or
stos
adc
shll
jns
or
jl
add
mov
mov
dec
inc
fdivs
es
mov
ret
stos
push
and
test
rclb
sub
mov
xchg
loopne
or
xor
xchg
jns
push
test
xchg
jnp
push
xchg
sub
mov
lret
pop
add
rcrl
cmpsb
adc
test
daa
js
cli
jmp
jbe
mov
sbb
mov
sub
sbb
pop
fdivs
cmp
mov
lret
adcb
insb
xchg
inc
inc
push
hlt
notb
rorl
pushf
jle
imul
sub
scas
jae
push
stos
sub
mov
jb
fstps
push
or
push
mov
data16
stos
pusha
mov
movsl
and
dec
push
mov
sub
xchg
mov
enter
movsb
mov
lcall
add
inc
icebp
enter
mov
shll
icebp
adc
sub
mov
jns
cmpsb
in
pushf
neg
call
js
and
mov
mov
lret
jg
fdivp
jmp
dec
imul
js
sarb
jns
adc
jle
out
pop
inc
mov
push
test
adc
add
popa
rcrb
lea
jmp
stos
fldenv
and
mov
cmpsb
add
addr16
push
lret
sbb
adc
lods
xor
or
push
pop
mov
pop
sbb
lods
je
outsb
inc
add
enter
cmp
inc
in
subb
pop
xchg
or
adc
testl
ret
es
sub
rcll
leave
jge
in
or
je
or
add
dec
rorb
dec
or
sbb
pop
lods
imul
jne
jge
jmpw
cmp
into
cmp
mov
lds
mov
xor
ds
fildl
das
mov
mov
es
inc
fnstsw
enter
repz
and
sbb
fnstenv
pop
int3
insl
jg
xlat
int
pop
cmp
xchg
bound
incb
in
jp
bound
push
mov
jle
test
mov
outsl
outsb
xor
mov
jmp
and
sti
jmp
lret
sub
or
xlat
outsl
push
fisubs
inc
test
aas
int
in
xchg
scas
push
ja
adc
js
fwait
sarb
mov
dec
cld
push
xchg
pop
repz
xlat
jge
fwait
ja
rcll
fidivs
mov
jno
mov
jns
inc
cltd
and
scas
mov
outsb
loope
loop
pop
xchg
jmp
pop
cmovae
arpl
sarl
mov
in
add
popa
rcr
lods
sub
cli
mov
push
inc
cs
push
lock
rcrb
cmpsb
daa
and
cli
movsl
int
es
xchg
cmp
jno
sub
lret
loopne,pt
jp
push
add
push
pop
jle
pop
add
call
mov
mov
movsl
or
imul
push
dec
inc
pop
mov
jnp
lret
fdiv
push
fiadds
das
rol
xchg
test
aaa
add
sbb
out
aad
push
int3
pop
call
xchg
adc
xor
addr16
push
jl
push
inc
adc
mov
adc
xlat
scas
das
mov
sub
test
in
inc
ds
add
jnp
push
inc
orl
dec
ds
mov
and
pop
inc
push
cld
lock
rcrb
xchg
out
inc
or
pop
mov
lds
bound
iret
lahf
mov
pop
xor
pop
insl
xchg
push
pop
dec
sbb
outsb
xchg
addr16
mov
cwtl
clc
jae
fidivrl
sbb
and
shl
pop
lret
cmp
fcomps
cmpsb
push
test
mov
inc
add
add
in
std
add
xchg
jns
sbb
push
in
xchg
push
inc
popf
repnz
scas
imul
imul
mov
leave
push
mov
sub
shlb
fildll
adc
pushf
xchg
xlat
mov
sub
push
mov
pop
xchg
call
mov
jbe
sar
aaa
aam
mov
xchg
mov
jbe
mov
out
adc
shl
sub
mov
sub
scas
addl
test
adc
pop
loop
popa
addr16
sub
in
pop
stc
cmp
ss
mov
cmp
mov
mov
push
pop
dec
lret
loope
jae
cmpl
sahf
pusha
cmp
int
lcall
jno
mov
sub
cmp
lret
adcl
mov
mov
mov
enter
adc
cld
inc
add
shrl
jo
test
lock
or
push
jge
cld
xchg
push
cmc
pop
ljmp
lods
lea
fsts
lret
sbb
fcmovne
dec
mov
pop
pop
test
xchg
insl
pusha
test
arpl
xor
xchg
push
adcl
aad
movsl
dec
popa
into
sbb
ficompl
mov
incl
test
jo
push
insb
mov
js
and
push
mov
xor
xor
sub
fs
sbb
inc
jnp
mov
sbb
cmp
repnz
mov
lret
adc
in
dec
ss
outsl
test
xor
outsl
xchg
cmpsl
and
jmp
jo
push
clc
push
mov
outsl
pop
sti
pop
into
add
dec
add
call
pop
add
adcl
mov
rcr
push
pop
dec
iret
jno
inc
add
jg
ficompl
pop
aaa
xor
rorb
imul
call
and
sbb
mov
jl
jae
and
imull
imul
mov
push
and
or
xchg
sub
jmp
mov
lret
not
aaa
sub
fsubrs
inc
loopne
xor
aas
inc
adc
and
aas
sbb
dec
jmp
dec
pop
mov
xlat
addr16
sti
dec
pop
xlat
inc
cmp
mov
adc
push
and
in
jae
xorl
push
mov
dec
test
lods
and
push
aam
imul
shrl
clc
fbstp
sub
mov
inc
nop
fadds
jmp
mov
pop
adcb
sub
cmp
movb
xchg
xor
rcll
inc
jmp
xor
sbb
out
add
cmp
enter
inc
cmp
stos
mov
mov
ret
sbb
mov
repnz
mov
push
daa
cmp
lcall
xor
xor
cwtl
movsb
into
outsb
xlat
sbb
sahf
xor
dec
and
pusha
call
pop
rorb
repnz
jmp
cmp
push
push
js
push
push
or
add
enter
test
adc
mov
jmp
sbb
aad
pushw
lds
or
add
xchg
cmp
adc
test
or
and
lods
insl
lahf
shrl
paddq
lock
xor
in
roll
nop
add
addr16
xor
js
dec
insl
dec
rcll
mov
aaa
nop
mov
pop
aad
ficoml
mov
xorb
pop
test
bound
and
out
xchg
dec
pop
lods
fistpll
xlat
mov
inc
mov
sbbb
adc
sbb
and
pop
inc
test
ret
pop
jecxz
out
shl
sbb
fnsave
into
fistpl
cmp
jmp
popf
ljmp
scas
out
repz
inc
imul
pop
out
mov
push
loope
rorb
push
cs
movsl
or
mov
cmp
adc
lret
inc
or
iret
and
inc
and
xchg
ljmp
mov
add
out
push
mov
pop
mov
frndint
xchg
cltd
mov
or
sbb
pusha
xor
and
repnz
push
nop
popa
repnz
mov
sti
test
jne
lahf
test
aad
insb
and
xchg
into
insl
out
cmpsl
into
jge
dec
cmp
sbb
movsb
and
mov
test
imul
lret
fs
les
push
mov
inc
imul
mov
mov
ljmp
xor
sbb
addb
fldcw
and
aaa
ljmp
jge
cmp
test
lods
int3
js
lret
sarl
mov
or
push
sub
pop
sbb
push
es
push
outsb
sbb
les
movb
pushf
jns
push
ret
add
fidivrs
push
sahf
push
mov
loop
lods
jbe
aad
cmp
pop
in
sarb
fwait
lahf
hlt
mov
inc
aad
lods
mov
ret
mov
add
hlt
cwtl
xor
mov
push
push
push
aas
mov
push
xchg
xchg
adc
adc
mov
fisubrs
pop
pop
insl
xchg
xchg
fidivs
cmp
push
push
push
mov
cwtl
cmp
add
jl
shll
mov
loope
bound
bound
sbb
inc
fists
xchg
xchg
sbb
mov
nop
lds
push
sarb
fcomps
imul
cmp
mov
mov
push
in
stos
inc
fidivrs
mov
ja
add
push
push
sub
mov
jle
mov
sub
push
ss
jmp
mov
test
lock
pop
subl
mov
add
add
cwtl
sbb
mov
jbe
lock
sub
dec
mov
sti
inc
loopne
shrb
sbb
push
add
mov
into
fprem
jecxz
or
lret
mov
jb
fcmovne
push
nop
cmpb
and
jge
or
push
arpl
inc
scas
pop
xchg
mov
repz
jmp
pop
jge
roll
adc
xor
fxch
sub
sub
sbb
sub
xchg
push
fimuls
imul
enter
inc
mov
and
or
pop
pop
test
push
not
push
test
mov
xor
enter
prefetchnta
stc
shlb
rcrb
cmp
jg
stos
aad
pop
dec
add
fstpt
lcall
push
jl
jle
pop
inc
and
xchg
repnz
add
add
adc
movsb
push
pop
add
mov
cld
loop
enter
lahf
stos
mov
sub
inc
jl
jns
pop
pop
sub
imul
std
pop
cmpsl
push
inc
push
jae
outsb
leave
push
xor
inc
rorl
or
int3
sti
test
out
lods
insl
mov
push
adc
popa
sbb
pop
mov
addr16
dec
rol
push
and
adc
enter
cwtl
push
xor
fisubrs
movsb
frstor
inc
jbe
stos
lret
xchg
mov
push
jl
cmp
dec
jle
imul
pop
dec
enter
pop
sahf
jb
pop
popa
add
mov
pop
push
sti
ret
inc
mov
jae
jge
xchg
std
ljmp
in
sbb
xchg
movsl
inc
outsb
inc
rclb
inc
mov
sub
jge
sbb
sbb
add
jle
xlat
rorl
jmp
inc
insl
or
pusha
cs
insl
cld
mov
xchg
sarb
xor
lcall
sub
jns
sbb
xchg
xor
in
imul
in
mov
xchg
mov
out
pop
movsl
dec
inc
filds
fnstcw
add
sub
dec
xchg
xor
lahf
fists
pop
nop
jmp
rcrb
fcompl
dec
mov
dec
inc
xchg
out
adc
add
jae
jbe
adc
es
push
or
mov
dec
jg
mov
add
enter
push
jmp
enter
dec
mov
pusha
or
filds
addl
cmp
aad
lret
mov
lcall
sbb
cltd
imull
sbb
mov
call
pop
imul
jno
popf
fcompl
filds
jo
lahf
pop
sub
je
jge
aad
call
orl
or
jge
add
pop
sub
cld
stc
pop
lahf
leave
add
addl
cmc
cmc
and
fcoml
addl
outsb
jns
sub
repnz
imul
in
push
and
hlt
adc
test
loopne
inc
fs
lock
movsl
test
lds
sub
pop
pop
mov
js
push
add
lds
xor
jecxz
loop
in
inc
adc
jmp
loop
aaa
rep
bound
mov
inc
rorl
int3
add
fimull
dec
jnp
rclb
in
lret
popa
or
add
sub
xor
cltd
aad
out
pop
mov
mov
jmp
xor
loope
enter
mov
pop
pop
cli
sti
int3
jle
dec
hlt
mov
mov
xor
or
clc
subl
jne
sarl
mov
mulb
stos
ret
xchg
cmc
mov
mov
mov
sbb
pop
pop
scas
mov
cld
and
fiadds
push
dec
je
loop
cld
pop
sti
pop
shl
lock
pop
sub
mov
filds
sub
xchg
fisubrl
lea
xor
mov
add
repz
test
sarl
test
push
out
cwtl
jg
mov
dec
mov
push
and
js
movsb
cmp
xor
pop
mov
inc
lods
xor
sub
xchg
fs
rorb
cmc
mov
sub
or
xchg
loopne
loopne
cltd
lcall
fmull
lods
ret
jge
call
pop
lods
loopne
sub
mov
jbe
lds
mov
sbb
mov
enter
lahf
shlb
mov
rcll
lods
loop
arpl
mov
adc
xchg
scas
scas
mov
outsl
out
sbb
mov
adc
in
nop
sbb
or
dec
jne
int3
jmp
bound
outsb
stos
pop
dec
mov
ja
mov
daa
mov
push
stos
xor
and
pop
lahf
and
xchg
sarb
addb
jl
xor
cmp
jmp
int3
mov
fadds
push
out
push
pop
int3
loop
cmp
mov
cmp
pushw
mov
shll
mov
push
loope
fwait
rcrb
add
std
mov
bound
ret
mov
sti
xchg
mov
fs
mov
sahf
das
pop
adc
cmp
or
subl
push
sub
imull
pop
sbbb
jbe
sub
call
cwtl
push
jnp
xor
lcall
pop
iret
lea
cmc
dec
scas
dec
aas
in
cmpsb
jp
mov
ja
add
loope
xchg
add
lods
mov
mov
push
loop
mov
fs
lahf
pop
sbb
lret
jg
ficoml
push
xchg
add
faddl
jmp
fadds
stc
xchg
mov
cld
xchg
lock
and
cmpb
cmpsb
and
gs
in
out
cli
imul
push
jns
inc
ret
mov
pushf
add
leave
cmp
sbb
push
and
push
test
push
xor
addr16
push
jle
stc
stc
dec
mov
mov
cmp
mov
sub
jecxz
imul
fwait
fs
cmp
mov
in
stc
push
pop
nop
pop
xchg
pop
fsubrs
pop
sahf
cmp
es
sub
jmp
imul
add
arpl
mov
sbb
jnp
and
pop
cmp
inc
mov
push
fimull
cwtl
mov
stc
xchg
add
cmpsb
push
mov
dec
pop
and
repnz
test
jno
and
dec
test
negb
shl
adc
push
cmpsb
xor
adc
lret
sahf
xor
das
out
add
xchg
repnz
loopne
cmc
sub
and
rcrl
ret
pop
sub
mov
std
imul
in
push
pop
add
xchg
push
jb
loop
or
sbb
lcall
incb
incl
xchg
imul
cmp
aaa
jne
decb
mov
sti
mov
xchg
mov
push
into
xor
mov
cwtl
daa
dec
jo
adc
inc
scas
repz
push
fstpl
jns
repz
xor
inc
mov
mov
mov
inc
inc
mov
or
in
scas
stc
add
xchg
pop
pop
cmc
icebp
xchg
mov
jge
ja
gs
push
xchg
scas
push
add
xchg
xchg
xchg
mov
mov
dec
xor
cltd
mov
leave
dec
sbb
scas
inc
fstp
icebp
popf
or
aad
rol
pop
cmp
cmp
xor
sahf
mov
xlat
mov
push
loope
push
jmp
arpl
pusha
mov
enter
je
and
frstor
and
lret
mov
mov
mov
pop
adc
cmpsb
scas
add
sub
in
cmpsl
cld
add
lods
cmp
sti
flds
xchg
pop
out
inc
repz
ficompl
rcll
cwtl
or
out
sbb
mov
cltd
mov
jmp
sbb
push
dec
cmp
test
popa
nop
inc
imul
inc
pushf
pop
adc
out
push
sub
ret
fnstsw
jmp
or
push
or
call
call
out
dec
pop
push
out
std
shll
add
sub
imul
fbld
push
pop
test
cmp
or
addr16
repz
repnz
mov
fnsave
xchg
or
jns
pop
xchg
es
out
xor
inc
in
testb
sbb
dec
call
test
inc
mov
int3
xchg
js
cmpsl
test
inc
je
mov
mov
push
repnz
sti
mov
nop
cli
cmp
sub
push
out
hlt
andb
mov
imul
into
mov
test
jno
sub
dec
add
das
inc
inc
ljmp
rcll
or
int
fdivrs
add
cwtl
int3
rol
shl
int3
cltd
xor
jno
ds
xchg
xchg
dec
and
cmpsb
cltd
das
lahf
push
fcoml
std
xchg
xor
bound
or
xchg
cmpsb
and
test
test
and
push
addr16
push
jecxz
repnz
cmp
pop
cmp
cmp
sub
subb
ret
add
mov
cltd
out
xchg
fimull
lcall
shl
popf
sbb
sbb
mov
ljmp
int
jl
aas
out
xchg
jbe
add
sti
mov
jmp
jge
cmp
pop
sbb
arpl
ja
leave
into
test
mov
adc
lea
lods
inc
push
andb
inc
xor
jl
or
dec
mov
inc
lods
xor
sub
inc
cmp
or
pop
insb
push
dec
jns
mov
add
out
push
xlat
pop
jmp
sbb
add
test
cmc
inc
imul
call
addb
insb
js
shlb
icebp
cld
ret
outsl
cmpsl
das
jmp
adcl
scas
pop
outsb
stos
xlat
lods
mov
movsb
in
shll
iret
shlb
mov
sbb
js
rorb
aaa
sub
ret
popf
dec
out
lahf
cmp
outsb
cmp
mov
adc
push
ret
fidivrl
and
adc
add
push
add
aad
or
xor
es
dec
test
out
out
cmp
sbb
das
out
pusha
dec
scas
out
cmp
xchg
pop
sub
fwait
push
pop
mov
add
and
and
cld
fldenv
inc
and
mov
in
cmp
pop
jle
sbb
ficoms
lock
xchg
jl
int
mov
lea
or
mov
push
rcr
lcall
pop
add
pop
pop
rcl
enter
iret
and
call
inc
fistpl
rorl
xchg
push
es
lods
scas
push
sahf
xchg
xor
push
out
imul
pusha
jl
sbb
fcomp
ss
in
lock
pop
shl
push
sti
jne
xlat
rclb
jl
out
sbb
mov
xchg
dec
movsl
fwait
ds
and
imulb
add
mov
sub
fbstp
mov
pop
lods
dec
add
inc
fs
adc
in
mov
pushf
xor
idiv
cmpsl
dec
xorb
clc
stc
adc
stos
jg,pn
shll
dec
add
fsubrs
je
cmc
push
mov
test
lret
push
xchg
mov
cmc
movsl
push
mov
pop
aas
inc
shlb
pop
dec
or
push
loop
cmp
mov
inc
cmpb
mov
mov
mov
mov
jl
cmovl
test
push
shlb
inc
add
mov
inc
sub
mov
movsb
cmp
fsqrt
and
andl
ret
push
in
mov
sub
scas
sbb
sbb
mov
pop
sti
lret
sub
mov
mov
mov
ficoms
out
cmp
push
push
and
sub
dec
lds
pop
adc
and
cmp
sub
sbb
cmp
mov
push
pavgw
mov
jns
and
mov
es
jbe
std
imul
push
ss
dec
outsl
sub
push
sub
out
pop
sbb
xor
hlt
aas
out
or
or
mov
lcall
jmp
mov
mov
loope
cmp
hlt
mov
mov
or
clc
ret
xchg
sahf
push
int
in
loop
inc
lret
icebp
xchg
pop
and
pop
push
and
out
mov
js
lea
repnz
fnstcw
cltd
cmp
cmc
outsb
js
push
mov
dec
cmp
mov
xor
test
in
negl
mov
cwtl
jmp
cmp
lods
ja
lcall
es
shll
add
xor
dec
lret
js
cmp
cmp
int3
mov
pushf
cmc
pop
xchg
loope
and
outsl
mov
mov
mov
xchg
mov
pop
scas
push
int3
dec
jns
and
sub
fisubs
pop
jne
inc
inc
cmp
or
sbb
cmp
xchg
adc
scas
dec
in
ljmp
loope
das
int3
lcallw
imul
sbb
fdivrl
add
inc
or
imul
leave
sub
xor
fwait
xchg
or
cmpsb
or
or
cmp
push
aad
rorb
push
or
push
cli
sbb
sub
int
roll
dec
int
jmp
lret
decl
xor
popa
ss
fwait
or
pop
mov
xor
lahf
dec
push
jg
pop
pop
insl
cmp
jns
gs
in
mov
inc
shrb
mov
mov
mov
jle
dec
inc
dec
rorl
mov
sahf
sub
add
in
push
or
loop
mov
cmpsb
jle
push
sub
test
jge
mov
mov
and
adc
imul
dec
rolb
xchg
sbb
int
adc
xor
pop
adc
loope
mov
lcall
dec
stos
pop
push
test
xchg
xorb
adc
mov
jno
jmp
and
les
xchg
xchg
mov
das
cmc
pop
and
inc
arpl
cs
aad
lahf
ljmp
cmp
arpl
insb
add
jns
cmp
call
test
cmpsl
loopne
fcmovnb
pop
mov
adc
push
popa
nop
rorl
dec
dec
pop
xchg
add
ds
jge
jnp
flds
or
add
xchg
jg
cmp
add
lock
lds
js
fstl
push
fcoms
push
mov
jae
jb
push
inc
cld
or
iret
rdtsc
inc
jle
fildl
sahf
lds
cs
mov
mov
dec
daa
lds
or
pop
test
loopne
fbld
das
dec
mov
pop
or
inc
movsb
test
fsubrl
sub
mov
cmc
pop
and
cwtl
sbb
and
js
dec
or
mov
xchg
jp
icebp
inc
out
push
add
loopne
fstps
cmpsl
leave
lock
pop
lock
sub
adc
loope
clc
icebp
insb
adc
adc
out
stos
jns
icebp
pop
mov
ja
lock
fsubrl
popf
aas
outsb
popf
into
nop
fwait
scas
cmpsb
mov
outsl
loope
push
jb
stos
push
add
shll
flds
nop
jae
mov
bound
in
inc
ret
sbbl
test
pop
dec
or
insl
jge
jg
stos
arpl
out
pop
mov
add
mov
and
in
loop
xor
mov
or
mov
in
xchg
stos
dec
movsb
outsb
sti
sub
lods
and
xor
addr16
xchg
frstor
inc
lea
dec
mov
inc
sub
ret
add
enter
in
cmp
add
push
push
orl
mov
insb
pop
test
xchg
fistpl
jg
or
pop
ficompl
adc
push
sub
jno
inc
arpl
mov
push
add
loopew
repz
mov
push
cmp
xor
push
test
out
xor
pop
lahf
lret
dec
mov
add
or
adc
and
sbb
sbb
stos
out
shrb
in
stos
leave
cmp
sarl
loop
sbb
inc
or
in
or
push
and
loop
add
in
sbb
mov
and
inc
add
nop
push
bnd
insl
xchg
mull
sub
dec
int3
cmp
pusha
push
stos
repnz
mov
lret
daa
mov
sub
mov
mov
ret
push
mov
clc
cld
xor
ja
cs
cmc
int
and
sbb
sub
ret
cmp
jns
imul
mov
adc
outsl
jo
mov
push
cltd
dec
jne
sbb
sbb
fisubl
mov
add
call
adc
call
adc
insb
sub
jmp
pop
xor
mov
jge,pt
jb
arpl
mov
insb
adc
lea
rolb
jmp
inc
sub
dec
lods
inc
adc
insl
ffree
push
xchg
pop
xchg
sti
sub
pop
pop
push
popf
pop
repnz
jb
push
adc
cmp
out
jecxz
fnstcw
cwtl
clc
dec
mov
pop
sub
push
and
in
out
popf
sbb
inc
enter
es
les
push
roll
inc
or
xchg
and
leave
pop
push
add
dec
and
or
cli
sub
addr16
cs
leave
call
cmp
sbb
mov
hlt
mov
lret
jecxz
or
sub
mov
das
jl
xlat
and
cmp
out
xchg
loopne
push
je
jle
pushl
mov
adc
cmp
pop
dec
lods
rorl
xchg
mov
mov
andl
mov
pop
das
jge
sbb
inc
sub
jmp
sub
in
push
jmp
sub
jmp
jo
inc
sub
pop
imul
pop
lods
jb
aaa
inc
stc
hlt
jge
dec
sahf
jne
mov
movsb
push
pop
ffree
sub
popa
dec
in
test
and
mov
mov
and
sbb
fwait
adc
push
in
mov
in
mov
ret
cmpsb
lock
sbbb
push
mov
push
shll
call
lcall
gs
or
popf
out
out
shrb
lret
nop
adc
sub
push
pop
repz
insb
adc
jmp
dec
cmc
repz
sahf
mov
imul
les
pop
xor
push
push
std
push
arpl
in
ret
sub
dec
pushf
push
jne
mov
or
movsb
scas
and
jl
inc
inc
mov
les
mov
ror
bound
or
mov
jne
pushf
aam
ss
scas
test
mov
mov
pop
add
clc
cmc
cmp
sbb
lea
stos
dec
dec
lcall
push
imul
jb
dec
ja
shl
fldenv
je
mov
stos
daa
cli
mov
rclb
pop
xlat
insb
xchg
int
adc
in
xchg
mov
sbb
test
lcall
mov
mov
jno
out
das
mov
mov
test
mov
sub
add
in
xor
dec
call
mov
fldcw
sub
subb
pop
je
pop
fistl
push
insl
icebp
sarb
call
adc
or
mov
mov
test
into
stc
in
std
lea
out
cmp
inc
loope
inc
adc
roll
daa
movsb
fsubrl
mov
int3
repz
mov
sub
lret
cld
sbb
xchg
call
outsl
sbb
into
jns
sbb
jp
xchg
push
pop
lret
inc
or
ret
pushf
int3
jnp
sbb
out
fstps
call
add
sbb
movsb
push
xor
cli
pop
mov
fcoml
aaa
lcall
or
mov
movsb
divb
repz
cmp
andb
add
and
sbb
idivb
or
push
inc
jp,pn
shlb
sbb
pusha
jp
sbb
ss
jle
mov
inc
push
lcall
daa
mov
enter
xorl
push
sti
scas
ljmp
shlb
out
enter
inc
shll
cmp
sub
sbb
adc
xchg
out
inc
pusha
or
jmp
add
insl
fidivs
and
inc
mov
push
or
mov
inc
sbb
aas
mov
cmp
rcl
lret
and
outsl
test
ljmp
lods
adc
mov
push
push
sbb
pop
pop
sbb
test
outsb
add
dec
and
cmp
xchg
into
lods
mov
add
popa
enter
mov
mov
xchg
push
adc
rclb
je
adc
adc
lahf
cli
jbe
mov
mov
and
sub
fdivp
scas
adc
jmp
xor
test
xchg
cltd
insl
iret
ljmp
sub
mov
add
shl
or
pop
fcompl
rcr
add
xchg
out
ds
insl
dec
lock
jg
mov
jb
xor
ds
jno
dec
dec
push
fsubs
pop
xchg
xor
sbb
daa
addr16
jns
das
mov
ljmp
pop
ret
shrb
ret
sbb
push
xor
xor
dec
lret
addr16
test
jmp
add
pop
sbb
outsl
mov
push
mov
cmp
xchg
dec
test
jb
push
mov
jnp
sub
pop
nop
cltd
test
mov
test
lods
push
setl
cmp
inc
jnp
xchg
cmc
inc
pop
orb
mov
xor
adc
jbe
ja
adc
push
xor
in
mov
xchg
mov
sub
adc
inc
mov
test
and
gs
mov
cmpsl
xor
jae
inc
gs
mov
or
aam
push
das
rcrl
xchg
ret
pop
mov
stos
pop
xlat
push
popa
call
test
popf
out
xlat
iret
cmp
jmp
push
mov
fldl
mov
int
fwait
movsl
stos
inc
mov
sub
xlat
aad
jge
dec
scas
movsb
out
mov
shll
int3
xchg
inc
sbb
in
imul
ljmp
and
stos
sub
daa
loope
push
aam
pushf
cmp
xor
mov
cmpsb
push
lahf
pop
and
cli
loope
and
lcall
out
pop
mov
cwtl
mov
rcr
pop
dec
leave
and
jne
mov
pop
bound
lea
and
aaa
repz
jne
gs
inc
jb
and
sahf
rcrl
or
test
popf
inc
and
je
or
push
repz
mov
jmp
add
jne
xchg
xor
pop
cmp
add
loopne
out
rolb
pop
enter
xchg
inc
iret
sub
out
shr
cmpb
mov
jmp
dec
push
adc
stos
out
pop
or
popa
adc
jae
fisubs
sti
pop
test
sti
and
dec
int3
cmpsl
rcrl
mov
mov
std
or
push
call
cli
lods
jns
push
cmpl
gs
nop
loop
clc
push
jbe
jg
cmpsl
xchg
inc
jae
imul
ret
lods
out
jb
movsl
aam
inc
out
data16
ja
and
mov
push
mov
or
rorb
mov
cmp
mov
dec
insb
adc
arpl
sbb
in
and
jns
add
adc
movsl
mov
pop
dec
xchg
and
mov
out
cwtl
mov
push
inc
out
aam
aad
cmp
fcoml
add
push
ljmp
insb
gs
or
imul
repnz
xor
adc
out
pop
jb
xchg
cmp
lcall
arpl
sub
push
pop
loopne
loopne
in
rcll
imul
and
push
rcrb
lret
adc
lahf
mov
std
push
orl
movsb
mov
loop
jg
inc
xor
mov
ss
xchg
inc
mov
push
pusha
dec
fcomip
push
xchg
ds
mov
or
js
cmpl
sahf
cmp
xchg
jns
cli
imul
pop
mov
push
or
sub
mov
mov
push
mov
inc
cmp
push
fcompl
mov
cs
addr16
inc
mov
testb
xor
and
pushf
js
je
lahf
clc
out
cmp
mov
mov
ljmp
bound
xor
lods
fs
dec
cli
out
data16
pop
out
testb
push
push
movsb
lods
popf
and
inc
jnp
add
sahf
outsl
pushf
in
rcrb
mov
ljmp
jmp
push
push
sub
js
cmp
movb
mov
lret
stos
popa
scas
push
aas
outsb
std
sahf
imul
pop
pop
jg
pop
sub
mov
inc
dec
push
mov
push
leave
mov
test
lods
or
jb
arpl
mov
xchg
xorl
xchg
dec
stos
ret
push
popa
xlat
push
neg
sbbb
and
out
jne
test
and
insb
mov
repnz
lods
xor
dec
xchg
jno
call
push
aam
in
sahf
fistps
out
es
xor
enter
pop
sub
sar
pop
pushl
outsl
loopne
jmp
inc
sbb
daa
popf
xor
loopne
fstps
iret
push
pop
jge
out
mov
loop
lahf
lods
inc
xchg
jl
cmpsb
add
inc
push
in
dec
and
mov
dec
push
add
loopne
testb
push
and
sub
mov
add
adc
cmp
scas
mov
sbb
scas
jmp
popa
loop
icebp
or
fwait
jae
inc
std
test
push
lret
and
popf
int3
mov
inc
dec
push
and
sarb
inc
lcall
ret
fnstcw
adc
scas
dec
adc
stc
psubsw
sbb
movb
or
out
add
xchg
clc
scas
pop
mov
loopne
jl
or
jo
xchg
sbb
out
sub
jae
popf
cmp
jnp
aas
xchg
lcall
in
jmp
xor
jno
inc
or
cltd
or
xchg
mov
add
out
fldcw
mov
xchg
sub
xchg
xchg
sub
jge
cmp
mov
mov
push
sub
loope
sbbl
stos
nop
mov
push
insb
andl
in
movsb
xchg
push
mov
adc
sub
imul
xor
adc
sbb
scas
lret
stos
jecxz
xchg
lds
filds
in
roll
cmp
stos
lahf
push
push
lea
ret
arpl
mov
lcall
sub
and
mov
repnz
incl
mov
jns
adc
pop
cmp
or
imul
shlb
push
inc
sub
sar
and
rcll
jnp
stos
subl
push
gs
gs
dec
lods
icebp
outsb
in
inc
add
mov
sbb
movsb
add
xchg
pop
inc
push
mov
pop
enter
dec
push
xor
orl
pop
popf
or
fidivl
xchg
lea
cmp
push
mov
push
lcall
lods
mov
incb
sub
mov
fs
push
and
mov
sub
scas
jmp
rolb
pop
jnp
xchg
adc
sbb
adc
repz
lcall
pop
repz
aad
xor
in
nop
add
mov
iret
int3
mov
stos
mov
add
pop
in
push
cmp
inc
add
sbb
cmpsl
popa
xor
sub
mov
cli
jmp
pop
icebp
in
iret
lahf
sbb
push
mov
ja
xchg
adc
aam
aam
ror
add
xor
mov
ss
mov
sub
stos
xchg
loop
jmp
outsl
push
in
mov
movsb
push
aam
xchg
fiadds
inc
cmpsl
cli
pop
test
repz
inc
test
sub
pop
ljmp
in
pop
lcall
pop
rcl
mov
gs
jg
es
add
mov
push
sub
jo
enter
loop
adc
jo
int3
mov
incl
adc
test
movsb
fwait
dec
xchg
pop
dec
mov
pop
enter
add
sarl
sbb
movsb
lds
jmp
outsl
cmpsb
test
dec
mov
push
pusha
mov
inc
push
mov
enter
adc
mov
push
fisttps
test
outsb
pushf
mov
inc
and
push
insb
pushf
fimull
xor
outsb
dec
xchg
adc
dec
sarl
push
loopne
aaa
lahf
into
jp
push
inc
sbb
sbb
sub
jmp
mov
xor
mov
push
cmpsb
pop
enter
inc
lret
aas
test
fwait
shlb
sub
xchg
ss
fadds
mov
movsl
mov
mov
stos
movsb
xchg
iret
pop
aad
xchg
inc
add
bound
jge
xchg
inc
xor
das
mov
pop
mov
xchg
popa
pop
inc
stos
xor
ftst
test
int3
mov
mov
xor
xor
push
insl
or
stos
add
out
xor
fcom
pop
insb
scas
frstor
jp
push
enter
sub
push
inc
mov
cmp
ja
sbb
jecxz
xor
inc
scas
push
stc
enter
mov
aad
dec
mov
lahf
push
aas
mov
aaa
call
test
xor
inc
lcall
xchg
cmp
lahf
inc
loope
leave
mov
dec
adc
data16
ret
lcall
daa
imul
out
cmc
movq
mov
testl
inc
push
jle
or
mov
or
bound
or
fs
dec
pop
dec
cmp
sub
sub
xchg
mov
cmpsb
fstps
mov
fsts
pop
and
popf
mov
cwtl
cmpsb
lahf
daa
mov
insb
leave
int
push
mov
adc
gs
and
mov
int3
jmp
addr16
fmuls
or
shl
movsl
add
xor
xor
inc
mov
fmuls
addl
dec
mulb
out
shrl
fists
fcompl
mov
push
fsubs
imul
push
out
out
fidivs
into
into
jne
push
stos
movsb
pop
lahf
mov
push
inc
mov
shl
fimuls
lret
adc
into
sub
fisubrl
mov
aad
jnp
rcrb
hlt
aas
stos
jbe
jmp
jmp
pushf
sbb
fwait
lea
mov
push
mov
adc
push
cmp
bound
cmp
push
jns
ret
dec
cmp
or
orl
sub
lds
out
imulb
lahf
loope
shll
aaa
xor
test
xchg
cmp
mov
mov
addr16
xchg
rcl
mov
arpl
add
sahf
and
dec
roll
outsl
int3
data16
mov
in
outsl
lahf
inc
push
pop
cmp
into
aam
inc
xchg
fldt
and
pusha
mov
fadds
repnz
fwait
adc
xor
in
xchg
test
jno
mov
mov
aad
xchg
in
push
imul
push
daa
jmp
leave
and
scas
dec
sub
pop
pusha
roll
js
arpl
divb
xor
std
sbb
mov
inc
cli
popf
pop
xor
mov
imul
jecxz
jae
iret
push
mov
mov
mov
mov
notb
xchg
or
pusha
fcomp
das
xchg
cwtl
mov
mov
dec
je
cwtl
mov
ret
imul
stos
inc
cmpb
pop
cmp
sub
aam
je
mov
rolb
cli
and
xor
mov
bound
jp
jne
or
mov
shll
pusha
cmp
outsb
in
mov
mov
sub
xchg
es
js
inc
push
cmp
fdivrl
or
or
push
mov
pushf
xor
adc
jg
and
sub
mov
push
std
iret
in
inc
cmpsl
addr16
lahf
xlat
test
jl
add
xchg
test
sbb
pushf
push
popf
test
lds
push
xrelease
or
add
or
out
xchg
and
scas
jg
adc
push
test
push
les
jne
call
std
add
xchg
fidivrs
or
out
pop
cmpsb
mov
and
or
push
pop
mov
xchg
push
ljmp
clc
sub
outsb
stos
dec
adc
ja
cmp
fdivrl
out
cmp
fxch
mov
xchg
jg
std
fwait
inc
pop
adc
dec
int3
imul
call
mov
xchg
xchg
pushf
in
cmc
xor
mov
sbb
or
jae
jle
xor
pop
xchg
pop
sub
push
out
push
vpshlq
mov
imul
mov
inc
clc
ds
inc
inc
jecxz
xor
fldenv
testb
cmpsb
cwtl
pop
mov
add
in
das
and
lcall
and
loop
pushf
mov
incb
mov
xor
xor
adc
pop
fwait
cwtl
xchg
scas
pushf
outsl
push
fsubrs
sub
mov
pop
or
out
sbb
les
mulb
addr16
dec
outsb
inc
jno
and
ljmp
adc
jmp
lahf
sbb
in
xchg
push
push
jg
fisubrs
cmp
clc
jge
cmp
jne
aad
ljmp
fidivrl
inc
pusha
xor
inc
inc
xchg
pushf
imul
scas
insl
aaa
mov
test
dec
outsl
repz
add
pop
jnp
jo
mov
push
pop
mov
cli
bound
pop
scas
fnsave
fistpll
cmpsb
aad
mov
scas
jle
cmpl
mov
aad
sub
enter
push
shl
pop
lock
mov
icebp
pop
add
adcl
push
clc
andl
ret
xchg
mov
dec
sub
idivl
ret
inc
hlt
mov
shlb
aas
fisubrs
push
js
inc
cmp
xchg
jmp
dec
in
inc
movl
pop
jbe
fcoms
mov
add
push
xor
mov
inc
and
pop
fldl
aad
dec
clc
inc
loope
adc
test
or
outsb
insb
mov
mov
out
test
mov
mov
bound
and
enter
aam
jno
push
xor
mov
insb
fs
test
xor
fwait
and
insl
xor
imul
imul
pop
cmp
in
jae
sub
mov
adc
or
cmp
lret
jnp
adc
pop
fdivr
or
cmp
dec
stc
pop
aaa
or
int
and
mov
rorl
dec
push
push
loope
cwtl
ja
adc
push
sub
xchg
sub
iret
das
add
icebp
add
lret
inc
punpcklbw
inc
jge
sub
mov
or
in
mov
sub
clc
fdivrl
mov
cwtl
cmpsb
mov
mov
test
pop
cmp
sbb
movsb
in
out
popa
mov
mov
int
repz
cmp
sbb
xor
jno
cmpsb
pop
sub
test
fcomi
jmp
mov
add
sbb
sbb
dec
enter
iret
jo
shll
mov
push
cs
xchg
jae
sarl
pusha
popf
out
testb
add
xchg
lea
cmp
or
and
xor
decl
dec
push
fildll
xchg
xchg
dec
inc
cmp
pop
test
or
dec
hlt
add
jecxz
jl
orl
fcmovnb
fiaddl
and
fsubs
mov
dec
lret
xchg
jecxz
dec
cmp
loope
out
fstpt
jl
add
and
add
mov
xchg
bound
dec
push
push
mov
pop
or
mov
andb
xchg
jnp
cmc
dec
pusha
pop
push
mov
js
nop
cmpsb
clc
mov
mov
push
nop
lret
shll
adc
lock
call
pop
xor
insb
mov
jg,pt
fnstcw
push
sbb
mov
inc
xor
dec
dec
inc
ret
inc
pop
mov
cmp
push
gs
ja
lds
hlt
das
dec
sbb
les
xlat
inc
xor
fs
jnp
test
ret
fimull
xchg
sbb
pusha
stc
xor
nop
sbb
add
pushf
sbb
adc
cmp
mov
sbb
lahf
inc
and
cmpsb
and
mov
mov
dec
or
pop
pop
xchg
mov
subl
mov
fnstcw
or
je
xchg
mov
sub
mov
aam
int3
xor
mov
push
int3
mov
or
pop
pop
dec
sbb
mov
push
push
cmp
pop
out
sub
stos
fsubp
cmpb
pop
cmpsl
pop
test
dec
xchg
in
add
ret
scas
adc
mov
in
pop
dec
daa
stos
fisubrs
jmp
adc
cs
pop
out
xchg
jmp
pop
mov
push
ja
push
fs
andl
stos
das
andb
bound
jnp
repz
into
das
ljmp
jno
mov
scas
mov
in
dec
cltd
outsb
popf
popf
fmull
scas
sti
inc
cmp
pop
and
dec
xchg
loope
and
jecxz
push
in
mov
mov
adc
stos
or
je
mov
jle
or
out
sbb
jecxz
xchg
hlt
xchg
in
insl
adc
popa
fdivrl
js
scas
pop
xor
in
out
sub
scas
adc
aam
mov
aam
shll
stos
add
fninit
loope
ljmp
scas
inc
inc
call
mov
cmp
xchg
fdivrs
mov
mov
ss
ss
xchg
inc
addr16
xor
push
mov
es
inc
data16
or
repnz
xchg
xchg
insb
cld
lods
mov
lock
outsb
cmc
sub
cmp
inc
lcall
jle
fiadds
jne
outsb
lds
stos
rorl
cmp
loopne
or
push
xchg
cwtl
cmp
mov
xorb
push
mov
aam
into
xor
aas
dec
testb
insl
in
scas
jl
adc
and
out
xchg
dec
mov
imul
nop
cmpsb
mov
or
sub
loopne
dec
mov
jns
test
cmc
add
jne
jo
xor
mov
push
dec
mov
cmp
dec
mov
dec
or
mov
mov
push
mov
cmp
xlat
lea
cs
fldcw
daa
and
fwait
pop
data16
mov
sbb
stc
push
inc
or
push
enter
ret
fstl
jo
int3
jns
outsl
push
or
inc
and
xchg
xchg
bound
aaa
loope
pop
repz
pop
clc
outsl
sbb
push
xchg
std
sub
mov
mov
xor
jne
sti
rcrl
jbe
add
pop
mov
das
fldl
push
in
cli
add
fnsave
pop
dec
xchg
clc
mov
and
inc
test
ret
ljmp
push
js
dec
into
ja
pop
fimull
out
or
cmp
sbb
mov
xor
das
scas
dec
sahf
sarb
jb
xchg
outsl
push
and
aam
divl
orl
push
inc
xchg
sub
mov
in
and
cltd
dec
sti
rcrl
pop
into
rcl
xchg
stos
push
mov
mov
and
dec
popf
subb
cmpsl
or
push
pop
dec
dec
xchg
add
aas
sbb
in
add
mov
into
push
movb
cmp
or
push
cmp
xchg
cwtl
add
int
mov
mov
xor
pop
ret
js
cmc
insb
inc
out
xchg
dec
aaa
dec
enter
lock
ret
mov
or
pusha
enter
jmp
lock
inc
mov
or
sbb
ret
mov
jge
fucomip
es
add
inc
neg
adc
jg
sbbb
add
fisubrl
clc
sbb
push
stos
stos
xchg
adc
and
mov
sbb
daa
dec
or
dec
xchg
shld
mov
mov
daa
movsl
stos
add
add
xor
icebp
rcrl
mov
pop
rclb
jl
outsl
loope
sub
cmp
xchg
sbb
jbe
xchg
out
mov
ljmp
adc
mov
les
nop
sarb
xchg
jb
pop
jae
adcl
enter
cmp
ja
xchg
push
fiadds
mov
mov
ret
push
or
mov
jge
xlat
popa
and
enter
iret
je
lea
and
dec
cld
imul
mov
test
add
dec
mov
cmpsl
sub
clc
adc
scas
pushf
and
sbb
imul
dec
xor
cmp
lahf
pop
xor
loope
mov
repnz
ss
cmp
adc
xor
xor
lods
push
enter
xor
sti
cmp
adc
cmp
add
clc
add
fsubrs
daa
mov
std
loopne
mov
adc
enter
test
std
inc
arpl
pusha
and
and
pop
mov
cmp
pop
roll
or
sub
adc
jb
push
sub
inc
xchg
sbb
fwait
mov
xor
push
aas
ds
mov
push
roll
dec
and
dec
ret
in
into
ljmp
repnz
push
dec
adc
mov
adc
and
arpl
xchg
andb
mov
je
mov
jnp
pop
pop
add
cli
push
cmp
sbb
insb
mov
gs
icebp
repnz
shl
imul
in
xor
data16
movsl
addr16
pop
stos
sub
in
push
test
mov
imul
js
jecxz
xchg
jl
mov
xchg
sub
jne
call
int
cmp
js
lret
or
and
cmpsl
shll
dec
aad
push
mov
sub
and
lret
cmpsl
es
mov
clc
or
cmc
xor
cmp
fldt
repnz
in
ja
dec
stos
out
or
sbbl
jmp
lahf
ficoml
nop
or
mov
cs
test
push
pop
lock
inc
fwait
push
ja
test
shlb
pop
or
adc
jb
ja
adc
mov
and
mov
sbb
lods
xchg
mov
clc
and
jg
sahf
xchg
aad
jb
outsb
aaa
stos
cmc
push
call
mov
xchg
ret
or
addr16
cmp
push
mov
inc
push
dec
push
addr16
out
in
daa
dec
inc
xchg
mov
dec
ret
jmp
inc
jbe
push
arpl
cmpsb
pop
and
outsb
aam
cmpsl
mov
lret
mov
sub
in
push
in
mov
fs
les
jno
mov
fsubrs
sarl
add
or
bound
pop
and
dec
and
jg
das
xlat
aad
or
lock
pop
js
xor
xchg
push
insl
aad
imulb
mov
push
push
sti
xchg
jmp
rcrb
xchg
pop
test
jmp
mov
xor
xchg
stos
gs
mov
sbb
adc
push
or
negb
push
cld
fs
imul
xor
pop
dec
andb
xchg
in
cwtl
clc
dec
xor
xchg
test
mov
movsl
xor
mov
clc
icebp
aaa
jbe
jb
lahf
out
pop
out
les
dec
pop
adc
jmp
movsl
cmc
nop
daa
pop
push
dec
mov
xchg
sub
and
call
sbb
popa
stos
adc
jbe
xchg
fidivrs
cli
fdivrp
testl
lret
pop
lea
jecxz
clc
in
dec
cmpsb
add
movsl
and
lea
dec
mov
das
pop
mov
and
dec
bnd
xchg
and
sub
fcmovnu
and
ret
imul
lods
pop
lret
popf
xchg
imul
out
pop
in
aad
or
lods
test
js
pop
push
push
mov
es
and
inc
cmp
and
or
idivb
jmp
mov
sub
fwait
cmc
shrb
aad
xchg
stos
aaa
imul
ret
loope
adc
out
mov
fnstenv
jg
xchg
nop
push
add
lret
roll
arpl
data16
inc
inc
push
adc
pop
lock
lock
push
js
into
mov
int3
inc
mov
loop
mov
iret
rcrb
mov
out
jno
mov
hlt
mov
dec
in
xor
pushf
mov
jb
inc
jle
jmp
cmc
test
fsubrs
mov
int
jge
sub
add
sahf
mov
int3
jns
mov
xor
das
imul
adc
xchg
xchg
sbb
stc
push
and
xor
or
lret
insb
stc
mov
daa
jmp
in
jb
mov
loopne
ret
insl
pop
inc
fs
repnz
sbb
pop
add
jae
pop
jo
or
fsubrl
mov
jo
out
mov
jae
xor
nop
add
repz
imul
out
xchg
imul
pop
or
or
xchg
dec
sbb
jmp
shrb
mov
xchg
imul
pop
in
xor
dec
stos
pop
into
stos
sbb
ficompl
int3
aas
mov
iret
jns
mov
std
iret
add
sbb
push
and
adc
imul
mov
add
mov
sarl
xor
cwtl
test
jle
cmp
mov
add
es
mov
bound
adc
pop
test
fnstcw
ja
inc
pop
pusha
arpl
std
jle
jo
jbe
push
rorb
aas
nop
dec
dec
or
push
daa
dec
jle
test
fisubs
rolb
jno
scas
mov
loop
lds
add
mov
adc
jbe
xchg
push
adcl
xchg
dec
aad
repz
test
shlb
scas
bound
insb
std
xchg
dec
aam
mov
push
pop
imul
mov
xchg
aaa
jle
lret
mov
rcr
popa
xor
and
mov
push
dec
cmp
ja
int
jb
ret
add
xchg
pop
pop
cmpsl
rcll
cmp
js
adc
hlt
or
pushf
lea
imul
jecxz
aad
ja
sbb
or
stc
jno
cmp
stc
in
enter
xchg
mov
mov
xor
push
lods
dec
out
dec
cltd
aam
sarl
sbb
xchg
in
cld
xchg
jno
movnti
and
mov
pop
or
inc
int
fwait
mov
inc
pop
outsl
rcll
mov
cmpsl
inc
fadds
xor
ja
cli
mov
or
jae
es
enter
loope
add
cmpl
mov
xchg
pop
loop
pop
xor
cld
sub
in
jns
or
scas
cli
xchg
push
xchg
jno
mov
ja
jns
mov
sbb
pop
lock
push
push
stc
inc
sbb
movsb
xchg
lahf
cmp
push
mov
and
mov
jmp
push
pop
sbb
mov
mov
iret
clc
loopew
mov
inc
aam
push
dec
pop
dec
out
jo
ss
ror
adc
out
lods
in
aad
js
test
pusha
aaa
pushf
aas
pushf
sbb
mov
xchg
test
push
push
data16
fdivs
push
cmp
xchg
in
sbbb
adc
jnp
mov
lcall
push
outsb
xlat
mov
inc
out
cmp
fdivs
dec
loopne
movsb
pop
mov
or
jb
ret
sbb
sbb
cld
xchg
or
jp
in
xchg
and
jmp
cmpsb
push
inc
or
aad
iret
cli
dec
xlat
mov
or
jg
xor
jle
push
fstps
jae
mov
xchg
push
cmc
adc
int
lahf
out
div
movsl
adc
ret
jbe
or
imul
lahf
int
cld
pop
mov
out
fs
jmp
ret
fisubrl
xchg
xchg
fcmovnu
imul
ja
lcall
xor
xchg
imul
inc
negl
mov
pop
push
dec
inc
ficompl
in
add
xchg
jmp
mov
dec
sub
push
call
jge
jns
pop
scas
out
and
xor
push
jns
cmpsb
call
mov
mov
lea
or
jmp
aad
add
xchg
mov
int3
pusha
xchg
aad
and
push
add
aas
cmp
gs
xorb
lock
mov
jl
outsl
xor
incl
sub
sbb
shll
popl
movsl
lahf
cmpsl
cmp
outsl
cmpl
cmpb
movsb
add
dec
xchg
push
test
lods
sbbl
xor
mov
leave
test
les
xor
mov
lods
adc
add
sti
data16
mov
sbb
sahf
jl
mov
jl
mov
xchg
loop
sbb
mov
leave
push
insl
or
adc
mov
pop
and
jmp
fdivr
add
lret
lcall
cmp
mov
sti
inc
data16
test
mov
scas
cmp
int
push
push
movsb
popf
mov
inc
out
call
or
popa
adc
or
or
ror
in
mov
xchg
andb
movsl
add
and
xchg
cmp
ljmp
adc
int
insb
dec
pop
jmp
nop
xchg
sbbb
cltd
ret
dec
mov
or
jo
xchg
sbb
clc
dec
push
sub
sarl
mov
mov
and
mov
repz
movsb
cmp
push
das
imul
inc
insb
out
mov
jecxz
jg
lods
mov
mov
ret
ss
pop
inc
mov
icebp
cmp
test
stc
push
adc
add
pop
sbb
in
inc
mov
insl
jb
nop
sub
icebp
mov
ret
test
xchg
pmulhuw
negl
shrl
push
adc
inc
push
sahf
fsubrl
sub
jmp
fisttpl
nop
adc
in
push
mov
aas
leave
test
lret
push
js
xor
das
mov
mov
clc
jecxz
mov
inc
inc
mov
cmc
xorb
test
mov
push
mov
and
repz
out
pop
lods
lret
movb
dec
arpl
lcall
and
pop
adc
push
pop
jle
and
xchg
arpl
lods
sub
test
adc
mov
adc
lods
out
iret
inc
mov
push
ret
aam
sbb
mov
stos
icebp
jmp
js
lds
clc
sbb
js
ret
int3
pop
and
mov
push
and
mov
insb
fwait
imul
inc
shlb
push
sub
inc
push
mov
sub
je
pop
and
xor
mov
mov
pop
lea
clc
stc
add
cmp
fwait
ds
popa
rolb
aad
cli
out
psadbw
das
cld
test
and
and
mov
xchg
pop
arpl
insb
jle
sub
mov
pop
test
jecxz
mov
int
pop
mov
push
mov
insb
jmp
jae
clc
int3
jb
adcl
stc
sbb
pop
rcll
xor
test
inc
pop
popf
add
lret
mov
dec
mov
jns
mov
sub
popa
daa
fistpl
xlat
jecxz
scas
aaa
inc
mov
jge
enter
dec
sarb
xchg
std
inc
sub
sbb
sub
jl
test
dec
cmp
pusha
xlat
or
pop
inc
das
shlb
shrb
sub
aam
add
std
shll
jle
cmp
and
subl
cmpsb
loop
pop
jmp
sub
popa
insl
push
ss
arpl
inc
shll
adc
enter
xor
clc
mull
mov
cltd
cmc
and
xchg
out
lea
mov
lret
or
dec
or
repz
inc
lea
cmp
ret
or
mov
in
adc
jns
imul
negb
data16
pop
jg
and
xchg
rcll
ret
mov
inc
sbb
mov
fwait
out
bound
data16
jno
repz
cs
imul
xchg
cli
adc
mov
std
in
mov
dec
fnstenv
add
int3
rclb
popf
call
and
int
or
mov
or
xchg
mov
les
mov
in
add
and
cmp
cli
loope
stos
aas
fcomi
scas
and
mov
dec
dec
es
or
jns
ljmp
test
and
mov
sub
or
xchg
in
rolb
jns
test
push
int3
flds
faddp
aaa
mov
mov
mov
movsb
xchg
jne
lcall
bound
inc
cmp
in
xor
idivl
enter
int
cmpsb
adc
and
mov
mov
adc
adc
push
xor
imul
test
popf
sub
cld
stos
call
jae
xchg
mov
stos
test
sub
subl
out
imul
or
mov
cs
in
cs
dec
out
mov
add
push
push
mov
pop
sbb
call
bound
imul
pop
fisubs
push
std
jmp
fwait
add
sahf
sub
std
shrb
mov
es
add
xor
pop
pop
xlat
rorb
mov
adc
dec
sbbl
mov
shlb
pushf
out
or
nop
sbb
inc
push
jnp
testb
clc
adc
icebp
clc
push
inc
sub
lock
imul
push
out
ds
push
jmp
adc
mov
push
sarl
jge
adc
scas
lea
dec
jecxz
mov
mov
push
and
jmp
sub
js
xor
cs
cmpsb
sti
push
mov
pop
jo
lds
repz
fsts
mov
mov
popf
sbb
test
mov
insb
cltd
mov
into
xchg
jns
sub
adc
stos
lods
les
enter
inc
mov
cmpsl
fnstcw
jle
loope
lret
mov
in
jmp
or
in
or
adc
fwait
cltd
pop
jno
add
xor
lds
mov
outsl
adc
and
jns
push
mov
aas
jne
lods
mov
xchg
push
mov
loope
mov
ljmp
dec
mov
test
push
lret
shll
ret
into
mov
dec
data16
or
and
ljmp
out
mov
pop
clc
push
add
lahf
xor
int3
dec
and
clc
mov
jo
push
es
out
adc
sub
xchg
int3
rol
pop
mov
jbe
or
adc
in
cmp
leave
jl
fcomp
fistl
cmp
incb
sahf
mov
ret
insl
enter
addr16
mov
cs
loop
mov
stos
xchg
in
push
xor
mov
jno
int
add
aam
cmp
bound
pop
xor
push
decl
or
sbb
pusha
mov
lods
adc
out
std
mov
clc
ja
sub
pop
jge
outsb
cmp
movsl
jle
dec
cmp
dec
into
mov
xor
je
testb
sub
mov
fisttps
loopne,pt
and
testb
cmp
test
lods
xor
cs
ljmp
mov
fsubl
xor
and
sbb
xchg
and
mov
scas
in
adc
stos
mov
movsl
mov
lcall
sahf
fsubl
jno
mov
dec
iret
jg
out
pop
mov
push
adc
inc
mov
add
test
lods
jbe
flds
popa
cmc
jnp
je
or
sub
jp
dec
pop
inc
inc
cld
sub
insb
in
xor
sti
mov
inc
andb
pop
and
loop
dec
pop
cltd
pop
cmp
lcall
mov
inc
gs
xchg
jg
sub
pop
sbb
pop
dec
mov
xorl
xchg
sub
fcomi
adc
mov
inc
lods
movsl
mov
pop
int3
xlat
jae
imul
fcoml
lds
xor
push
jle
xorb
sub
call
or
scas
or
inc
imul
mov
add
imul
fistps
fmull
push
fwait
icebp
stc
leave
and
and
fsub
les
adc
cmp
divb
jne
xchg
mov
add
outsb
je
mov
cld
je
fdivl
fisubs
pop
fs
inc
xchg
xchg
mov
dec
mov
lcall
mov
sub
insl
mov
rcll
and
call
jo
xchg
ljmp
pushf
add
mov
cmpsl
in
mov
jle
mov
aam
mov
sub
in
lods
je
into
lret
mov
adc
mov
pusha
xchg
jle
mov
stos
jne
sti
sahf
fcmovnbe
jns
cld
sub
jae
jae
jle
jle
fidivrs
jp
es
adc
and
loope
mov
out
pop
xchg
scas
daa
fstpt
pop
daa
push
arpl
push
in
test
daa
loopne
jmp
popa
bound
ljmp
cs
push
sub
ret
rclb
mov
lret
add
xchg
aam
mov
scas
sub
pop
fsubp
inc
fisttps
outsl
ss
xchg
inc
stc
repz
outsb
mov
cmpsl
lret
repnz
scas
dec
inc
xor
sbb
int
xor
insl
pop
addr16
xchg
or
cltd
jnp
mov
cli
adc
fsts
imul
sub
inc
and
mov
iret
or
add
push
pushf
jp
jg
insb
mov
ljmp
pop
mov
dec
or
or
push
ljmp
xor
lret
sbbb
data16
or
out
sub
mov
cwtl
push
enter
dec
or
test
into
movsl
pop
pop
push
lret
mov
das
xorb
stc
jnp
aaa
cmp
adc
inc
es
jecxz
rol
cli
sub
mov
jp
or
mov
xor
jno
stos
and
fmuls
leave
xor
rorl
cmp
mov
dec
les
jne
mov
fnstenv
mov
outsb
mov
inc
xchg
jg
test
shrl
test
jns
jp
xchg
add
js
aam
sub
stc
adc
mov
in
add
cwtl
mov
inc
jo
arpl
or
lahf
je
pop
movsl
fidivs
adc
adc
jae
jns
int
mov
daa
fs
lahf
sbb
xchg
imul
sbb
inc
inc
fisubl
sub
pusha
enter
in
mov
cmp
mov
dec
mov
adc
pop
leave
insb
aaa
and
ja
and
and
out
push
std
mov
enter
xor
and
ss
push
into
wrmsr
mov
and
and
das
rcr
and
cs
int3
jp
scas
mov
popf
insb
or
ret
int3
sbb
cmp
cmpsb
xor
inc
mov
je
push
and
aam
ret
ss
xorl
lcall
fildl
mull
clc
lret
jecxz
jge
cmp
decl
rcr
pop
loopne
stc
add
popa
fcoms
stos
cmpsl
cmpsl
outsb
and
fnsave
pop
jne
adc
xchg
jo
push
mov
xor
adc
call
les
out
or
xchg
icebp
inc
pop
mov
pop
mov
jl
lods
in
out
test
out
pushf
dec
inc
add
dec
xchg
jo
insl
dec
rol
stc
movsb
jecxz
jge
jl
push
pop
xor
testl
or
pusha
mov
out
int
cmpb
jmp
push
stos
pusha
jb
push
ret
mov
ss
jmp
lock
pop
adc
leave
lock
lods
jecxz
dec
mov
insl
xor
lods
push
mov
mov
loop
fdivs
push
test
loopne
scas
xchg
stc
cmp
mov
inc
mov
ljmp
mov
push
cmp
dec
inc
iret
hlt
lock
and
jmp
fmull
lret
leave
jge
loop
and
sbb
outsl
les
loope
xchg
rcl
dec
int3
lods
push
daa
mov
sbb
nop
cmc
icebp
mov
adc
sub
xchg
scas
dec
jo
mov
mov
inc
sbb
push
push
jmp
xchg
xchg
outsb
sub
es
xchg
xlat
dec
ret
sub
or
cmp
inc
cld
jbe
jne
jp
jns
out
out
dec
sbb
dec
mull
mov
andb
mov
xor
loop
fs
push
xchg
in
test
mov
sub
jo
ja
jae
mov
jmp
add
repnz
jmp
loopne
movsl
sbb
jb
sbb
in
ret
jecxz
mov
or
sub
or
lds
outsb
add
inc
out
cltd
into
xchg
insb
negl
push
aaa
jp
nop
loopne
mov
xchg
sbb
cmp
test
in
popf
in
xor
add
xchg
int
mov
jmp
xchg
repz
jl
dec
cmp
cmp
cmp
push
aam
jo
mov
xor
insl
out
imul
ss
js
jb,pt
sti
pop
mov
jecxz
arpl
xchg
adc
or
icebp
or
sub
xchg
mov
cmp
inc
push
out
pop
cmp
inc
inc
mov
mov
xchg
push
jge
lods
dec
lods
ret
mov
scas
cmp
ret
xchg
sub
sub
mov
xchg
jns
scas
push
cld
cs
das
fwait
adc
push
cmpsb
jnp
insl
cs
insl
jg
dec
cmp
jb
mov
fstl
fwait
rcrl
les
bnd
cmp
cmpsb
push
leave
sbb
dec
int
subb
jbe
fptan
mov
call
ret
repz
aad
inc
lea
sub
fistpll
add
push
and
and
fiaddl
xor
xchg
bound
mov
or
subb
cmc
push
push
push
xchg
and
jle
jp
adc
lret
dec
jno
mov
icebp
sbb
or
mov
or
sahf
or
rcll
and
cmpsb
xor
dec
scas
sahf
pop
das
jmp
sbb
call
add
icebp
pop
rcll
sbb
into
mov
sar
push
sub
in
push
lods
arpl
lods
sub
pop
jne
push
les
xchg
mov
or
movsb
adc
adc
out
ljmp
pushf
and
test
mov
test
enter
in
imulb
sti
rorl
fwait
aas
or
ja
adc
mov
and
pop
test
sbb
and
movsl
push
dec
sbb
mov
gs
in
jmp
jb
imul
fsubrs
aad
cli
divl
push
scas
sar
mov
stos
pop
mov
inc
nop
addr16
ljmp
cs
imul
jl
fdivr
test
push
repnz
loopne
push
mov
pusha
xchg
test
and
cltd
shlb
repz
insb
adc
mov
mov
xchg
hlt
push
lods
pop
ret
aaa
into
rorb
lods
dec
push
or
cmpsb
mov
pop
imul
mull
cmp
pop
sahf
inc
xchg
mov
sbb
jg
adc
je
daa
dec
xlat
sub
aad
mov
pop
insb
or
mov
cmp
std
imul
inc
xchg
aas
push
xchg
mov
sub
pop
jecxz
outsl
pop
popf
mov
mov
xchg
jmp
push
xor
and
movsl
data16
out
in
adc
pop
xor
stc
jp
pop
jmp
js
divl
gs
push
xchg
loop
cmc
aam
push
scas
andl
add
mov
out
jae
mov
std
loop
jp
mov
aaa
lcall
test
iret
outsb
push
push
outsl
imul
in
lods
sub
ss
pop
lock
jns
movsl
out
hlt
push
test
push
out
or
orl
or
mov
test
push
outsl
mov
push
push
lods
push
in
xorl
inc
xchg
adc
jae
or
cwtl
ja
xchg
in
dec
jge
shrl
mov
pop
add
fildll
les
dec
icebp
in
sbb
mov
pop
pop
or
jno
mov
xor
push
add
outsl
dec
cmpsl
sti
int
orb
dec
sbb
push
outsl
enter
bnd
insl
outsl
shll
dec
inc
mov
dec
add
lods
mov
cmp
lods
jle
ret
add
les
or
add
pop
pushf
and
jae
daa
jecxz
cs
pop
daa
add
xchg
xchg
mov
js,pn
add
adc
insb
jl
sub
aad
xchg
lret
insl
adc
test
fistl
sbb
decl
inc
dec
dec
and
out
mov
jge
inc
es
fs
ja
insl
push
jp
scas
fs
xchg
push
aam
inc
outsb
ficompl
cmpsl
scas
or
adc
test
xor
dec
adc
shll
mov
fwait
addr16
cwtl
push
jle
fildll
idiv
stos
clc
adc
in
push
cmp
and
inc
dec
push
or
pop
lret
add
lods
xorl
add
sahf
cltd
inc
inc
sub
cmp
sbb
dec
and
pop
cwtl
sub
icebp
outsl
ja
inc
into
add
adc
mov
out
push
std
mov
test
test
mov
cli
popa
xchg
fnstcw
bound
jl
ss
dec
pop
imul
test
bound
cli
dec
test
lret
pop
jne
pop
inc
xor
xchg
rcl
xchg
pusha
mov
pop
ds
xor
jne
fcom
bound
in
fdivrl
in
sub
lcall
aas
inc
adc
mov
pop
fistl
testl
and
mov
cwtl
insb
dec
nop
mov
in
cmc
imul
sub
jnp
jp
dec
xchg
fwait
sti
push
mov
bound
shlb
xorb
rorl
xchg
je
das
cltd
aam
mov
mov
loopne
sbb
loop
add
ja
or
in
sub
das
xchg
add
inc
cltd
call
add
cmp
movsl
sub
cmp
xor
inc
shlb
mov
adc
jge
movl
cmc
in
lds
stos
inc
cmp
add
push
mov
ds
insl
mov
xor
std
inc
or
stc
or
pop
imul
lds
mov
rcl
cmpsb
mov
in
add
mov
inc
dec
lods
sub
pop
push
sub
push
or
inc
out
aam
pop
sbb
sbb
das
and
mov
sbb
mov
or
cli
call
je
and
xchg
clc
imul
cmpsl
loope
out
pusha
pushf
adc
push
xor
push
xor
xchg
ret
ljmp
cmpsl
ja
and
add
rclb
ja
ljmp
gs
mov
test
adc
jecxz
nop
cmpsl
adc
ficomps
sub
mov
das
outsb
pop
xor
mov
jge
stc
xor
xor
jnp
or
int3
push
cwtl
cld
ficoml
fimull
lds
mov
jae
mov
nop
sub
sub
cmp
dec
pop
xchg
xchg
rclb
leave
and
sub
test
mov
leave
shll
in
xor
pop
pushf
adc
push
fsub
push
cmp
shl
rorb
cwtl
adc
dec
add
out
shll
int
lea
xor
fcompl
lds
inc
adc
jg
sbb
push
fildl
sbb
js
mov
inc
rolb
leave
loop
pop
sub
movsl
out
ret
mov
mov
into
jne
xor
sbb
push
add
cli
inc
shrl
mov
int
ret
xor
popa
jmp
sbb
in
sahf
inc
add
rclb
cli
sub
incb
iret
mov
dec
mov
dec
lret
mov
fdivl
test
cmp
sbb
push
mov
mov
fsubrl
xchg
push
pop
xchg
mov
xor
xchg
out
shrl
mov
mov
xchg
or
mov
in
mov
stos
ret
stc
pushf
insb
iret
pop
xchg
das
jae
push
mov
cli
enter
sub
nop
aad
xchg
dec
push
push
jl
jmp
cmpsl
cmp
adc
dec
out
mov
fldcw
cmp
das
inc
outsb
cmp
aam
push
adc
mov
sub
out
push
cmp
test
movsb
push
in
sub
jge
enter
xor
mov
mov
outsb
pop
sbb
in
mov
mov
mov
xchg
call
sahf
pop
test
icebp
xor
dec
or
dec
inc
inc
pop
jge
sub
ja
cld
cmpsl
and
dec
fs
inc
push
lea
shrl
imul
add
shrl
mov
pop
mov
add
jle
xchg
mov
sbb
subb
loope
into
ljmp
aaa
stos
fstps
dec
xor
cs
scas
addr16
mov
addr16
dec
ss
inc
out
and
inc
js
jg
mov
inc
push
sub
add
and
aam
std
sbb
andl
and
out
mov
sti
jae
scas
mov
int3
aaa
rorb
or
test
or
mov
bnd
insb
mov
mov
pusha
mov
add
andb
ja
push
cmp
pop
xor
gs
xchg
repnz
pop
pusha
adc
lcall
stc
adcl
orl
cmp
jno
orb
add
mov
pop
pop
ds
in
jnp
loope
and
pop
adc
fs
pop
pop
test
cmp
add
pop
mov
mov
jnp
daa
lds
sbbl
in
adc
lods
sbb
add
push
and
fsubl
test
pop
jo
pushf
fsubs
dec
mov
insl
jo
imul
repnz
adc
mov
jo
add
fcomip
mov
iret
outsl
insl
sbb
addl
add
inc
mov
cmp
push
sub
int
adcl
jb
dec
push
dec
add
movsl
cmpsb
and
enter
or
daa
sahf
dec
pop
push
cmp
add
test
test
iret
es
aaa
mov
sahf
inc
addr16
xlat
sbb
orb
test
loope
mov
push
push
xchg
mov
add
imul
cmp
ljmp
mov
mov
and
in
mov
lods
cmp
push
ret
into
or
in
add
mov
dec
test
ljmp
xchg
xor
cli
push
pop
jne
pop
imul
int
aam
movsb
les
sti
or
ss
mov
das
dec
loop
sub
sbb
or
out
cs
xlat
pop
pop
fwait
test
xcrypt-cfb
cmpsl
loope
pushf
xor
gs
or
mov
ja
pop
fldt
in
xor
mov
pop
inc
push
icebp
into
jbe
in
pop
shll
dec
mov
lock
push
jl
lahf
cmp
push
or
push
cs
dec
jp
mov
addr16
pop
outsl
adc
mov
repz
roll
jmp
sub
jo
jg
fldt
icebp
mov
push
jns
repnz
lcall
mov
jae
pusha
and
add
mov
lods
shrd
push
add
add
pushf
fsave
cmpsb
notb
and
mov
push
lret
repnz
sub
in
xchg
cmp
pop
mov
aas
xor
ljmp
xor
clc
dec
cmpsl
test
jl
outsl
test
out
and
imul
out
add
fwait
test
add
pop
orps
outsb
and
cmp
mov
addr16
push
sti
sub
lods
fsubs
jp
xor
mov
test
nop
sbb
cmpsl
negb
dec
ja
outsl
sbb
outsb
add
pop
std
int
ja
mov
insb
adc
scas
out
cmp
fidivl
fdivrl
out
fsubrs
dec
rcr
frstor
push
and
sbb
or
cmpsl
int3
loopne
and
sbb
sub
outsb
push
mov
daa
adcb
mov
pop
fiaddl
and
jge
jns
cmp
fwait
adc
aam
and
xor
dec
and
jl
ja
jne
push
push
repz
lock
ret
and
cld
addr16
or
pop
js
lds
sbb
stos
stos
cmp
repz
rcr
sub
js
es
xchg
lea
inc
cmp
xor
fildl
data16
xchg
dec
push
inc
add
cmp
iret
sbb
mov
shrb
ds
cs
in
adc
scas
sarb
ljmp
sub
mov
adc
sbb
mov
cmpsl
push
inc
push
pop
lret
clc
push
incb
fwait
push
pushf
insb
aaa
ljmp
push
pop
adcl
pop
cld
cld
pop
les
xchg
adc
out
mov
leave
dec
push
push
jg
rol
pop
test
pop
pop
xchg
sbb
push
insb
jecxz
ss
jae
xchg
push
jge
push
out
lds
mov
pop
dec
add
jg
jle
scas
lcall
xlat
xchg
stos
jle
gs
sbbb
add
ds
rcr
cmp
mov
lods
xlat
enter
jae
jae
pop
push
aas
scas
lods
mov
sarb
les
mov
mov
push
sub
pushf
mov
xorb
cmp
daa
gs
jecxz
or
sbb
dec
xchg
incb
sti
adc
cmpsl
jge
pop
dec
roll
ret
jecxz
lcall
push
sbbl
push
and
inc
ret
xchg
lea
in
push
les
mov
enter
push
push
popf
pop
cmp
enter
mov
mov
pop
jnp
jne
xor
or
js
mov
adc
out
test
js
movsl
push
mov
cmp
in
aad
mov
pop
xor
inc
mov
dec
pop
add
jg
fcoms
inc
std
test
data16
aad
es
sahf
cmpsl
popf
addr16
imul
ja
pop
loope
jnp
and
dec
dec
insl
push
cmp
xor
popa
inc
push
call
das
and
mov
out
cwtl
out
or
bsr
mov
or
cmp
std
push
jmp
sub
iret
repz
or
push
imul
addr16
jbe
sbb
fsubs
or
shlb
inc
stc
pop
mov
mov
cmp
push
cmpsl
cmp
xor
push
pop
stc
popl
test
test
lea
push
mov
je
pop
push
test
pushf
es
mov
sub
cs
neg
loop
pop
jb
mov
imul
idivb
imul
arpl
sub
rcr
stc
subb
mov
and
shlb
in
mov
mov
dec
mov
push
cmp
dec
das
push
fidivs
movsl
stos
out
add
jae
pop
fistpll
push
in
xor
adc
mov
repnz
push
pop
pusha
ja
jnp
sahf
lods
test
icebp
scas
inc
and
push
sub
lds
jmp
outsb
inc
loopne
je
pop
fsubrp
dec
lods
push
mov
and
or
adc
or
fsubrp
cmp
push
fmuls
mov
stos
jne
sbb
mov
in
addr16
cmpsb
add
dec
jecxz
or
cwtl
insb
mov
addr16
loope
data16
or
hlt
daa
sarl
cmp
ja
scas
and
repz
out
xchg
mov
sub
dec
sbb
mov
push
out
les
or
popa
rorl
pushf
insl
ljmp
pop
lcall
test
or
aaa
mov
and
lods
icebp
repz
loope
pop
pushf
pop
stc
pushf
pop
shll
xchg
jp
or
push
xchg
icebp
fnstcw
pop
fwait
iret
shlb
adc
sahf
xor
scas
mov
stos
mov
aas
outsb
bound
inc
or
mov
loope
sar
xchg
xchg
dec
repnz
daa
xchg
adc
mov
das
mov
cs
arpl
popa
push
push
rorl
pop
aaa
cmpsb
in
adc
cmpsl
mov
push
mov
out
cmc
and
in
sti
jmp
das
test
sub
cwtl
testl
ja
inc
xor
mov
out
dec
xchg
sbb
cltd
mov
pusha
jno
in
lret
loope
adc
cmp
or
and
cmp
jo
ljmp
stc
hlt
jbe
mov
fsubp
mov
sub
mov
cs
lret
xorb
mov
mov
xlat
scas
xchg
out
mov
pop
arpl
add
test
pop
mul
mov
sbb
cld
pop
fs
les
push
ror
xchg
lret
je
outsb
or
dec
sub
in
mov
and
jle
add
mov
push
cld
in
lea
sub
lock
leave
loopne
loop
idivb
mov
and
shrl
mov
insb
jo
aas
sbb
ss
dec
pop
std
repz
arpl
xor
adc
pop
int
popf
or
pop
pop
lods
sbb
nop
lcall
nop
lock
mulb
lret
dec
sbb
cmp
push
xchg
pop
sub
pop
mov
pusha
in
jne
stc
jne
mov
mov
mov
test
ljmp
xchg
bound
xor
adc
sahf
lea
mov
lea
cmp
inc
fs
ja
repnz
ret
stc
int
add
into
rolb
fidivs
pop
and
shl
stos
jnp
lcall
jmp
sbb
jle
pop
adc
pop
out
mov
sbb
push
lahf
rcr
and
imul
mov
bound
hlt
jno
dec
out
das
add
ss
cmp
fildl
mov
add
sub
xchg
loopne
rol
push
es
fsubl
push
mov
jo
push
lret
pop
shrl
imul
pop
sbb
ja
lea
cli
xor
lea
xor
or
xchg
jns
mov
scas
jp
xor
outsl
repz
push
cltd
pop
jg
repz
cmp
adc
and
movsl
push
aas
punpckldq
stos
movsl
mov
cmp
xchg
jnp
ljmp
shll
imul
sub
mov
imul
sub
mov
in
ljmp
clc
add
jns
test
xor
pop
push
repz
cmc
frstor
mov
lea
or
mov
std
imul
iret
pop
mov
mov
fmuls
movb
lret
das
xchg
loop
std
push
lcall
imulb
lret
cmpsb
shrb
jno
call
aaa
mov
ret
add
dec
sti
nop
mov
into
ret
aam
scas
inc
shr
fmul
loopne
adc
inc
cmp
cwtl
adc
xlat
imul
jp
lret
shll
bound
imul
test
xchg
add
jg
mov
pop
call
mov
mov
sti
cld
pop
in
and
push
pop
icebp
and
pop
arpl
and
out
aaa
xchg
data16
push
sar
cmovge
pusha
inc
mov
rclb
insb
mov
push
jl
call
imul
xchg
cmp
xchg
pop
dec
divb
sub
jne
pushf
sub
sbb
cli
movsl
lods
cmp
push
and
cmp
pop
mov
sbb
add
xlat
lahf
add
add
mov
test
xor
sbb
adc
cmp
inc
cs
pop
push
sbb
cwtl
xchg
scas
cwtd
aaa
test
pop
scas
cld
aam
xor
aad
pop
out
gs
mov
test
adc
stos
mov
xchg
and
cli
pop
lea
or
lods
test
insb
or
push
notb
jae
pop
ds
cmp
push
xchg
cmp
mov
in
sub
xchg
push
rcrb
jge
cmp
sbb
pop
out
push
cmc
ret
cmp
mov
xchg
inc
test
test
pop
icebp
pop
dec
push
push
push
push
fstl
fistpl
popa
mov
add
icebp
loope
cmp
jmp
adc
mov
pop
ffree
jp
mov
arpl
dec
stos
add
mov
fadd
jne
fidivrl
lcall
and
mov
sbb
je
mov
jg
je
loopne
cli
stos
scas
push
and
mov
test
scas
jne
pop
jno
sub
pop
xor
xor
push
cld
dec
testb
js
lret
jge
inc
aad
jb
mov
sbb
cld
jge
lretw
loope
ja
sub
xchg
in
cltd
aaa
pop
lret
inc
cmc
fwait
ret
push
cld
cmp
sub
push
jle
push
inc
push
mov
xchg
xchg
sbb
out
pop
pop
test
lea
das
pop
jle
cmp
jmp
inc
sbb
loope
pop
dec
arpl
cmpsb
mov
jbe
sub
xchg
push
jmp
addb
arpl
outsl
movsb
xor
out
je
sub
cs
sbb
add
out
jg
movsl
sbb
movsl
addr16
lock
jmp
inc
mov
pop
jo
hlt
xor
fsubl
repnz
sub
lock
daa
xchg
dec
push
int
push
imul
xor
iret
dec
sbb
dec
cmp
adc
aaa
sbb
or
mov
xor
push
cmp
mov
cmc
in
ret
push
cmpsb
pop
daa
adc
mov
ret
scas
jb
outsl
lret
lock
dec
lock
push
lds
jecxz
leave
arpl
adc
shll
add
mov
out
mov
mov
mov
es
je
or
addr16
mov
cs
fistpll
mov
cs
lea
and
sbb
dec
int3
loopne
stos
rclb
sbb
arpl
xor
jb
lahf
mov
sbb
add
push
dec
fdivrs
movl
out
daa
sbb
int3
mov
sahf
int
mull
and
in
inc
test
stos
or
lds
inc
jo
es
and
js
xchg
loope
pop
daa
mov
lcall
inc
fucomi
xor
sbb
outsb
cmp
push
sbb
idivl
test
inc
sub
adc
push
mov
jp
lea
push
mov
loope,pn
inc
xchg
pop
cld
clc
repnz
sub
loopne
repnz
and
testl
outsb
addr16
dec
fisttps
shl
cmp
mov
in
out
cmp
fistpll
adc
mov
xlat
cs
jmp
pop
dec
add
mov
mov
insb
jle
add
xlat
jno
mov
scas
clc
lods
pop
and
xchg
or
sub
popa
inc
jecxz
in
cmp
jmp
push
notl
aas
xorb
pop
cwtl
add
cmp
mov
mov
clc
sarb
cmp
loopne
mov
xor
clc
mov
in
jl
cli
test
add
mov
push
fistps
xchg
fiaddl
stos
cwtl
repnz
cmp
pop
add
mov
inc
fbstp
mov
adc
push
sbb
popf
mov
xchg
bound
mov
xchg
test
xchg
mov
inc
mov
or
add
mov
mov
xor
inc
jno
sub
pop
sub
test
insl
sahf
or
mov
pop
mov
loope
add
jnp
sarb
cmp
outsl
push
pusha
jbe
pop
hlt
cltd
rcrb
pusha
lds
ja
mov
inc
insl
inc
jg
leave
xor
adc
into
call
sbb
xor
mov
js
pop
xor
sub
and
aam
pop
faddl
dec
addr16
xchg
xchg
dec
jns
cwtl
add
stc
test
or
cld
or
xor
call
cmpsl
push
push
lock
xor
mov
cmp
insl
adcb
add
jg
in
xlat
sub
std
adc
mov
adc
xor
pop
mov
aas
fsub
inc
icebp
aaa
cmpsb
sub
cmp
jae
pop
sub
and
lret
negb
mov
pop
mov
sbb
dec
in
iret
adc
mov
loope
std
loopne
das
fsubs
xchg
jmp
or
add
sbb
inc
push
mov
ja
push
frstor
movsb
out
sub
imul
xor
psrlq
push
rcr
or
xchg
fcmovbe
pop
mov
push
shll
cmp
sbb
push
je
out
xlat
daa
imul
pushf
jle
inc
sub
lret
in
add
stos
andl
pushf
inc
negb
jno
repz
jle
stos
ficomps
in
xor
xchg
les
imul
xchg
dec
sub
out
fcoms
fsubrs
push
cmp
stos
push
add
inc
in
mov
int3
xor
ljmp
fists
xor
pop
cmpsb
jecxz
int
stos
mov
pop
dec
inc
add
sarl
lods
movsl
out
dec
fs
pop
cltd
loope
imul
test
lea
mov
les
icebp
outsl
aad
loopne
dec
cmpsl
fisttpll
sbb
call
pop
fs
xor
pop
lcall
shll
idivb
sub
stc
pop
ret
fwait
ljmp
xor
and
add
pop
daa
mov
or
push
push
movsl
ret
hlt
cwtl
fsubrl
lret
mov
jmp
movl
cli
adc
inc
fists
and
sbb
andl
loope
dec
jae
scas
fdivrl
sbb
fadds
add
ret
notl
mov
or
push
aad
sub
add
aas
pop
iret
push
mov
inc
in
insb
repnz
add
mov
jne
mov
lahf
mov
stc
scas
push
xchg
shr
push
ja
pop
data16
and
mov
and
inc
insb
jno
insl
ror
dec
into
or
cmpsl
xchg
add
sub
and
ljmp
mov
out
mov
pop
push
or
hlt
notb
pusha
sti
add
cli
mov
in
icebp
and
or
mov
and
js
cmp
mov
dec
sub
and
cmpsb
push
sbb
sub
rcrb
movsl
and
stos
adc
insb
and
mov
out
mov
data16
xor
dec
add
push
sbb
adc
andl
cmp
iret
sarb
shrb
shlb
adc
xor
int3
inc
cmp
out
fisttpll
pushf
sub
jae
lret
mov
mov
inc
movsl
hlt
add
imul
outsl
jge
cmpl
jmp
into
cmp
mov
scas
lahf
fimuls
xchg
jb
mov
in
push
cmpsb
icebp
lods
pop
aam
xchg
pop
ds
out
ja
mov
xor
lds
fldt
rcrb
imul
pop
inc
inc
xchg
mov
jle
xchg
mov
cmp
sbb
sbb
orb
inc
fwait
jge
inc
cpuid
mov
in
test
mov
jg
inc
pop
lea
or
push
stos
mov
rorl
push
out
ljmp
sbb
bound
mov
or
lcall
movsb
jg
movsb
adc
test
jno
push
call
cmp
adc
mov
es
inc
add
out
faddl
dec
xlat
mov
cmp
out
xchg
nop
mov
or
sbb
dec
xchg
hlt
test
mov
sbb
pcmpeqd
shl
cmp
jnp
mov
or
xor
xchg
pop
xchg
nop
xor
aad
loope
jae
test
and
sub
aas
dec
or
test
sbb
gs
out
movd
adc
jmp
jnp
xchg
cmp
gs
ljmp
push
out
xor
and
dec
mov
cmp
and
gs
scas
xchg
cli
movl
ss
repnz
clc
fstl
jo
xrelease
mov
in
lcall
add
mov
cwtl
lock
out
and
mov
push
sarl
aas
sub
sub
jo
movsb
int3
jbe
dec
test
ds
fists
fisubl
adc
repz
pop
cmp
fiaddl
adcl
pusha
ja
ja
shll
dec
pushf
rorl
data16
xorl
outsb
dec
adc
jnp
in
rorl
inc
rorb
push
push
lret
out
dec
mov
dec
ret
pop
sahf
pushf
fwait
aad
sub
mov
lea
xchg
push
adc
popa
xchg
aaa
sbb
jnp
aas
mov
stos
jle
or
pop
fwait
mov
push
inc
push
icebp
add
mov
sbbl
xlat
pop
scas
jecxz
mov
idivb
fdivs
repnz
rcll
cmpsl
out
pop
mov
inc
stc
mov
add
fucom
sub
repnz
push
cmc
xchg
xchg
mov
hlt
je
adc
push
cmp
push
mov
aad
push
dec
push
lds
dec
dec
lsl
mov
shll
popf
jge
in
nop
push
aad
xchg
add
test
clc
shr
xor
inc
pusha
outsb
pop
push
movsl
in
mov
andl
push
dec
insl
add
xchg
xchg
shlb
cltd
fsubs
cmpsl
pop
pop
into
idivl
push
dec
lcall
mov
and
push
pop
es
cmpsl
jl
push
lret
mov
xchg
cmpb
mov
std
jne
sbb
sub
sbb
xlat
cmp
fdiv
fwait
push
xchg
cs
inc
out
cmp
stos
aam
xchg
dec
xchg
and
xchg
bound
sub
mov
hlt
or
lret
pop
mov
int
jge
loope
cs
test
cld
inc
pop
inc
jecxz
pop
mov
mov
les
jge
pop
inc
xchg
aaa
shrl
xchg
lea
mov
lods
cs
jp
push
shl
aaa
sub
ja
mov
mov
jl
sbb
cwtl
cmp
lcall
nop
push
icebp
cmpsb
lds
dec
add
shll
push
jbe
ss
jb
fiadds
cli
insb
pushf
repnz
cltd
push
out
aas
lock
ja
push
cmp
fistpll
out
loopne
push
mov
stc
xor
mov
icebp
les
fs
and
sub
push
mov
cwtl
insl
or
jle
loopne
in
adc
ds
mov
push
scas
rcrl
xlat
adc
neg
in
mov
imul
jo
test
subb
cmp
ret
out
aaa
push
hlt
adc
in
nop
mov
rorb
sub
repnz
int3
call
testb
das
mov
rolb
pop
ret
mov
hlt
jg
popa
mov
dec
jg
add
je
lods
inc
push
jle
test
outsl
inc
sahf
mov
or
pop
cmp
jne
outsb
faddl
stos
mov
pop
int3
jbe
mov
xlat
popf
fwait
enter
adc
and
out
repnz
jo
inc
imul
cmp
push
mov
mov
and
in
cmpb
cmp
scas
add
minps
pop
push
cli
jp
scas
mov
arpl
cld
mov
inc
movb
push
ficompl
pop
into
sub
inc
dec
out
mov
jb
lds
add
nop
fldcw
lcall
inc
xor
mov
ljmp
cs
loop
inc
jl
inc
sti
stos
xor
jbe
xchg
dec
jge
fidivrl
nop
pop
cmc
stc
add
sbb
xor
sbb
xchg
push
js
stos
out
xor
mov
xchg
and
pop
sub
mov
outsb
repz
add
repz
jge
push
out
cmp
xor
sub
mov
aad
jmp
lock
pusha
xchg
mov
shlb
or
into
or
out
cs
add
cwtl
sub
jbe
add
jp
jno
aam
lods
adc
aad
mov
and
dec
cmpsl
push
enter
stc
inc
or
cmpl
daa
test
push
xor
jg
mov
xor
in
mov
outsl
pop
mov
out
sub
sbb
mov
les
xor
addl
pop
xchg
call
and
mov
sub
test
stos
add
sub
mov
cmp
stos
push
mov
aas
repz
and
add
jnp
fidivrs
fs
mov
test
push
xchg
jge
jecxz
lret
sahf
scas
fadd
push
out
fists
inc
mov
inc
sbb
repnz
sub
add
je
lcall
or
jle
dec
sahf
clc
sbb
insb
xor
xor
lcall
dec
sti
jp
int3
jl
sbb
xchg
push
int3
xchg
sbb
in
shrl
sbb
movsb
int3
test
cmpsl
adc
or
insl
or
xchg
popa
loope
mov
add
xor
loopne
push
divb
push
shlb
cmpsl
mov
xor
and
mov
test
jne
sbb
pop
xor
ljmp
mov
pop
outsl
or
pop
and
js
add
xchg
stos
mov
inc
jmp
xchg
or
push
mov
stc
in
sub
fdivrs
ficomps
popf
adc
adcl
push
push
xchg
jb
inc
jns
mov
mov
out
hlt
sbb
mov
adc
daa
push
andnps
pushf
xchg
push
pusha
imul
stos
lcall
push
mov
fs
cmpsb
pop
sarl
ret
mov
push
add
popa
dec
and
jg
subb
mov
and
xor
adc
in
lds
fldl
cmp
mov
std
sub
mov
dec
dec
arpl
pop
cmpsb
ds
loope
icebp
jl
outsl
mov
lods
scas
ret
adc
adc
dec
jle
les
cld
and
in
sti
lea
rcrl
or
pop
mov
mov
add
dec
pop
scas
das
fcmovu
and
xchg
pop
inc
cmp
push
ljmp
aam
jl
testl
in
mov
pop
push
jb
testl
push
add
sti
pop
fucomi
cmp
xor
or
cmp
std
test
xchg
int
icebp
jno
aaa
or
push
jb
adc
test
lds
mov
mov
adc
sub
cmpsl
cli
pop
mov
shrb
mov
leave
lods
mov
insb
cwtl
mov
loopne
insl
adc
lcall
adc
sbb
cmc
shr
aas
filds
push
stc
arpl
sbb
lock
loope
mov
dec
inc
cmp
or
imul
adcl
sub
fldenv
test
jns
pop
xchg
jp
or
mov
pop
or
or
gs
shl
repnz
cmp
mov
aad
cli
or
dec
mov
ret
lcall
push
add
shll
add
loopne
ficomps
push
cmpsb
pop
fadd
mov
daa
sbb
insl
in
iret
xor
loopne
cwtl
pushf
mov
or
xchg
pop
insl
rorl
push
jg
ja
pop
add
and
xlat
ja
pop
dec
xor
notl
popf
mov
sbb
or
insb
sbb
loop
imul
in
mov
out
xor
dec
jno
jns
add
inc
sub
loopne
out
xchg
pop
cmp
out
add
mov
out
jne
repz
hlt
fldcw
pop
add
outsb
ljmp
int3
adc
mov
ss
xchg
mov
fstl
lock
mov
mov
insb
jo
push
cmp
testl
add
outsl
jp
test
je
sbb
sub
mov
pop
adc
xorl
test
subb
lret
mov
mov
in
inc
mov
pop
imul
aaa
pop
sub
jne
adc
fwait
outsb
xchg
jae
lcall
xor
dec
loope
or
push
das
in
dec
push
cld
adc
and
lcall
minps
sub
jecxz
sub
aaa
xchg
mov
cld
push
lods
xchg
mov
add
cwtl
mov
nop
push
sbb
pop
fs
and
lods
fistpll
and
jge
xor
jp
pusha
cmc
or
dec
xor
pmaxsw
repz
divb
and
jge
inc
jecxz
xchg
insb
movsl
aaa
mov
mov
push
bound
mov
imul
rcrb
out
notb
pop
repnz
add
mov
jmp
mov
mov
sbb
leave
orb
cmp
add
in
mov
xor
enter
orl
pop
mov
mov
arpl
xchg
in
inc
shl
ror
mov
push
addl
out
shll
jp
dec
lods
sbb
mov
inc
mov
popf
scas
sbb
add
jne
push
mov
outsb
rorl
xchg
jo
aam
dec
dec
mov
or
pop
and
loope
push
xchg
mov
scas
cmpsl
js
mov
xor
iret
jns
add
ror
adc
adc
jbe
addl
in
sbb
xchg
lea
sbb
inc
cmpsl
clc
push
cmp
das
test
stc
repz
push
xchg
rol
xor
inc
sti
shlb
xchg
jo
mov
dec
inc
jmp
jb
test
enter
ja
inc
fs
sti
pop
sub
jp
and
fildl
pop
inc
imul
mov
sbb
push
inc
pop
adc
cmc
out
rorl
lock
sub
add
cli
add
sub
out
imul
cmp
pop
jp
fs
stos
xchg
push
inc
sbbl
pop
fists
push
inc
shll
pop
xor
add
cwtl
mov
push
insb
or
or
cmc
mov
adc
mov
sbb
pop
cmp
add
rorb
lahf
jnp
or
repnz
andb
jmp
popf
adc
mov
adc
ljmp
fs
icebp
adc
inc
test
adc
shll
rcrl
sbb
mov
cmp
push
out
adc
push
mov
fbstp
scas
fimuls
scas
mov
shrl
and
xchg
test
es
cmpl
adc
sti
cmc
mov
mov
mov
or
aas
mov
aaa
inc
lahf
xchg
xor
scas
stc
sbb
xor
add
gs
nop
loopne
inc
fs
mov
xchg
xor
xlat
dec
pop
adc
sbb
je
push
inc
jp
leave
sub
out
jns
mov
fmull
imul
mov
pop
cmc
std
into
out
aad
les
dec
push
movsb
xlat
mov
jp
mov
add
sub
jne
imul
pop
imul
mov
pop
push
pop
movsl
add
popa
rorl
mov
push
cltd
lods
data16
and
mov
dec
add
jae
sub
int3
movsb
enter
cmp
push
dec
and
stos
shll
pop
xchg
cmpsb
jp
stos
loopne
inc
jbe
test
xor
cli
mov
gs
push
add
sub
mov
aam
inc
lods
mov
inc
pop
test
jne
out
subl
mov
sti
mov
mov
sub
sbbb
jl
div
mov
add
arpl
fwait
lret
daa
sub
dec
scas
pop
push
push
cmp
sub
and
add
inc
les
adc
push
add
shll
xor
popf
xchg
leave
jp
mov
or
jnp
inc
mov
repz
add
sbb
mov
es
sbb
mov
xor
mov
mov
xchg
fs
inc
pop
pushf
orw
aam
pusha
fwait
sbb
mov
mov
jns
mov
outsl
jecxz
outsb
and
add
test
ja
sti
test
push
pop
mov
adc
imul
mov
jno
hlt
lcall
cmp
xchg
cmp
xor
sbb
inc
push
je
outsb
push
loope
lcall
ds
jmp
mov
mulb
sahf
adc
test
fnstenv
dec
int
mov
jecxz
mov
mov
mov
mov
sub
shrb
in
adc
adc
pop
jno
ljmp
fcompl
add
pop
sahf
xor
mov
xorl
mov
jmp
dec
fists
dec
sub
or
sbbl
xorl
cmpsl
xor
adc
cmp
js
xor
mov
je
inc
fs
cmp
sub
int
sbb
add
scas
fcmovbe
sub
dec
scas
lret
insb
fwait
test
pop
ret
inc
fs
lock
inc
jmp
sarb
sbbl
sub
jg
xchg
in
lock
out
mov
mov
shr
pop
xchg
std
data16
mov
pop
mov
jno
xchg
inc
call
movsl
and
stos
rcl
je
adc
or
jp
adc
insb
push
jbe
outsb
and
sti
push
jnp
mov
jo
cli
pop
inc
add
cmp
xor
cmc
pop
pop
gs
lret
stos
bound
les
and
mov
imul
jg
mov
movsl
adc
sub
sti
sub
adc
js
clc
fnstsw
mov
inc
jge
xor
ret
inc
cmpsl
xchg
adc
mov
in
jnp
out
cmp
and
call
pop
push
cltd
or
loope
cmpsl
enter
stos
fs
loop
pop
xchg
cwtl
pop
push
je
push
jmp
gs
aas
pop
pop
jg
shl
shll
xchg
cs
scas
xor
es
cmp
je
mov
adc
stos
mov
push
or
jmp
testl
or
fsubrp
push
stos
cmp
lea
scas
jmp
push
or
cmp
or
icebp
sub
rorb
adc
add
stc
mov
cwtl
mov
jmp
shr
push
fadd
loopne
adc
ja
leave
fsqrt
mov
add
mov
mov
jge
inc
mov
repnz
lods
int3
inc
pop
in
out
enter
mov
cli
push
daa
jns
add
jbe
inc
fistpl
xchg
push
fs
mov
popa
popl
and
jge
mov
sub
push
xor
dec
jge
sbb
adc
or
or
mov
jmp
sub
adc
cli
sub
imul
in
fdivrs
dec
icebp
adc
pop
jg
or
fiadds
xor
push
shrb
repz
fld
int3
vmulps
add
les
addb
test
jmp
mov
loopne
rolb
dec
les
lods
subb
insb
add
pop
in
cs
out
das
test
cmpsb
jo
mov
push
xchg
mov
cmp
iret
adc
dec
jae
rcr
or
cmp
xor
or
jmp
xchg
fmuls
imul
test
add
add
nop
loope
push
mov
pop
jg
adc
mov
and
sbb
jae
movsl
cmp
fsts
xchg
lret
mov
rcl
imul
outsb
in
xchg
mov
mov
ljmp
cld
out
imul
imul
jecxz
mov
je
das
movsl
repnz
pop
or
mov
cmp
cmp
push
stos
inc
rcl
mov
inc
xor
stos
jg
push
add
mov
dec
scas
psrad
test
xchg
or
push
sbb
imul
and
xor
add
ret
pushf
inc
xlat
outsl
call
mov
fidivrs
insb
arpl
xor
sti
mov
orl
mov
adcb
mov
call
aas
xchg
cmp
pop
and
test
cs
in
ret
push
mov
dec
mov
inc
rol
scas
aaa
fstpl
js
fiaddl
mov
push
jbe
inc
mov
mov
es
jo
pop
cmp
ficompl
lcall
pop
subl
fwait
sti
filds
inc
and
jl
mov
cmpb
stos
mov
cmp
adc
popf
ficoms
sbb
pop
jb
cmp
adc
test
mov
pusha
mov
push
clc
popf
mov
xchg
push
jbe
adc
mov
pop
mov
add
inc
mov
decb
rolb
rol
push
test
or
imul
into
popf
add
std
jae
and
jb
push
and
push
and
xor
insb
sahf
mov
frstor
xchg
or
in
push
aaa
xchg
mov
mov
pop
jle
jl
jno
xchg
andb
pop
outsl
push
out
adcl
movsb
or
fnstcw
mov
das
pop
push
adc
mov
and
xor
mov
mov
mov
cmp
push
outsl
and
xchg
push
pusha
pop
ja
div
pop
cmpsl
rcll
pop
hlt
ljmp
push
jg
inc
lods
inc
and
hlt
xchg
mov
insb
xlat
stos
sub
sub
sbb
cwtl
xlat
mov
lahf
cmp
xchg
push
fildll
xorb
add
fsub
movsl
int3
jno
jo
movsl
or
repz
cmp
js
pop
sub
jp
je
jl
lock
cmp
fcomps
je
dec
in
dec
ficoms
mov
in
into
popf
push
dec
sbb
mov
aad
faddl
fwait
xchg
int3
popa
scas
mov
addr16
mov
push
jmp
cld
or
loope
fs
sahf
mull
inc
in
sub
lods
xchg
incl
lds
in
jp
imul
mov
fcompl
jns
out
sub
mov
jne
pop
inc
mov
inc
daa
cmpsl
testl
jns
mov
adc
fistpl
cmp
fidivl
out
fistpl
or
push
mov
jecxz
cmc
xorb
xchg
xor
fidivs
mov
dec
out
and
push
pop
movsb
jmp
pop
jnp
dec
fadd
pop
jno
insb
es
cli
in
jo
popa
les
cmp
sub
jle
rcrl
xor
mov
xor
sbb
cwtl
push
mov
lret
out
ficompl
mov
pop
nopl
inc
movsl
frstor
outsl
cmp
push
out
dec
mov
jns
cmp
mov
add
cltd
test
mov
push
dec
inc
iret
fdivrs
icebp
push
cmc
jae
outsl
add
inc
repz
fyl2xp1
add
jecxz
pop
icebp
out
pop
jecxz
push
in
and
xchg
fldt
out
sbb
sub
mov
in
aaa
dec
aaa
mov
cmp
or
mov
lcall
jnp
mov
jae
cmp
test
out
test
jns
mov
cwtl
push
psrld
repz
in
and
and
out
ss
clc
loopne
cltd
sbb
sbb
and
cli
aad
push
cmc
mov
mov
pop
imul
xor
ljmp
mov
xor
movsb
dec
loop
mov
add
pop
movsl
or
popa
in
test
test
inc
popf
pop
pop
into
or
jne
sbbb
ss
cwtl
cwtl
std
call
cmp
enter
cltd
mov
fs
hlt
dec
jne
ret
lea
xor
stos
out
pop
stos
adc
sub
hlt
insl
pushf
andb
test
rorb
jae
cmpsb
cli
test
sub
pop
add
mov
or
lods
dec
sub
ss
dec
inc
adc
pop
enter
sahf
mov
daa
lods
repnz
fidivrs
xor
xor
ss
dec
mov
lret
mov
cmpsl
fistpl
in
fnstenv
mov
fcompl
es
rcl
adc
in
cld
es
faddl
test
cld
test
mov
lods
sub
aas
sarl
cmp
ds
or
sub
data16
xchg
imul
sub
sbb
cmpsl
into
mov
inc
scas
xor
sub
aam
sub
mov
sbb
sahf
data16
leave
push
xchg
and
dec
popf
inc
push
je
inc
mov
aad
pusha
mov
or
enter
mov
push
dec
pusha
aas
push
and
add
or
inc
push
or
loop
fidivrs
incb
mov
jle
loope
add
add
inc
adcl
cld
movsb
jp
xchg
push
iret
outsb
mov
adc
pop
and
cmp
sbb
cmpsl
cmp
lock
mov
push
mov
xlat
mov
mov
push
test
rorb
stos
rcrb
pop
iret
sbb
mov
mov
iret
in
jg
jo
pop
enter
mov
inc
fisubrl
xor
popa
fidivs
and
xchg
popl
jbe
xchg
sub
aam
or
cmp
into
icebp
sbb
outsb
in
xchg
cmp
inc
scas
sbb
jg
fdivl
sbb
out
add
cmp
mov
push
mov
inc
fimull
orl
mov
fsts
pop
test
out
std
ja
cltd
and
mov
test
sti
cmp
adc
nop
fdivr
andb
sub
loop
shlb
pop
pop
cmpsl
cmpsl
lods
mov
mov
mov
adc
mov
sti
pushl
mov
adc
fldt
orl
lahf
call
cmpsb
dec
xor
sbb
mov
ds
mov
add
or
xchg
scas
jg
shl
fsubs
mov
fldl
int3
adc
shrl
push
mov
jbe
bound
test
jecxz
add
fmuls
ja
mov
imul
push
ret
jno
dec
and
icebp
inc
dec
add
daa
jle
add
mov
jb
loopne
dec
out
mov
jmp
push
cmpb
mulb
or
ret
lcall
jecxz
xor
pop
mov
inc
out
fildll
enter
and
xchg
sbb
sub
lahf
sarl
movsl
cmp
mov
and
add
or
xchg
in
fidivl
sbb
addl
jl
sarl
or
pop
or
mov
je
in
shrb
testb
push
xor
std
and
lea
xchg
repnz
or
inc
movsl
outsl
or
or
repz
fwait
adc
and
sub
or
cmp
and
orl
mov
int3
test
movsl
je
stos
sub
fwait
gs
cmp
mov
dec
gs
pop
lea
adc
add
sub
jge
pop
outsl
icebp
push
mov
mov
fs
addr16
xor
mov
sub
mov
inc
mov
xchg
sarl
fcoml
xchg
movsl
pop
xor
rcl
test
leave
cs
ret
fbstp
in
imul
add
out
or
sar
xchg
rorl
xchg
or
sarl
fwait
xlat
sub
sbb
mov
aas
out
popf
xor
xchg
insl
jle
mov
push
daa
fcomps
clc
mov
inc
dec
mov
test
mov
int3
idiv
shrl
scas
lcall
cs
pop
inc
add
xchg
aas
cwtl
jne
cwtl
popf
punpcklwd
push
pop
or
inc
test
fmul
jp
scas
push
out
sub
pushf
mov
sbb
stos
mov
stos
inc
pop
cmp
xchg
std
dec
pop
in
mov
jmp
fdivrs
push
push
pop
in
enter
insb
loop
pop
fwait
in
out
in
pop
repz
fs
dec
sarl
xor
xchg
push
mov
push
clc
mov
add
fsubrs
or
push
jne
mov
sub
or
js
and
call
rolb
xor
mov
ja
pop
hlt
cld
adc
adc
jnp
pop
and
and
or
sarb
call
sub
sbb
sub
sbb
fidivrs
popa
sub
xchg
inc
pop
xor
repnz
mov
cltd
and
mov
hlt
fiadds
into
cmp
mov
inc
mov
and
fwait
adc
pop
outsl
icebp
loope
pop
pusha
js
movsl
pop
pop
lods
mov
fnstenv
gs
in
fdivr
in
mov
icebp
cmp
jo
mov
mov
sbb
adc
fisubs
cmp
frstor
mov
popa
scas
adc
inc
mov
mov
add
push
push
loop
jl
shll
jae
inc
clc
pushf
inc
das
jecxz
fwait
rorl
cmc
loop
mov
sub
pop
sub
adc
out
sub
in
int
loope
dec
lock
lret
add
lcall
dec
xchg
in
mov
and
jb
push
loop
sub
pop
adc
xor
pop
lds
cmp
sahf
cmpsl
ja
or
out
and
out
les
mov
inc
mov
mov
pushf
push
xchg
or
push
push
jp
fistpll
xor
test
inc
mov
cld
mov
sbb
dec
push
sbb
dec
roll
lret
pop
push
xchg
insb
cli
shr
xor
mov
mov
add
mov
leave
pop
popf
in
mov
inc
ds
xlat
mov
or
mov
adc
std
test
rorl
lret
mov
cmp
and
fdivl
aas
data16
xor
lock
cli
jb
push
jae
movsl
mov
dec
mov
lret
xor
cwtl
movl
bound
imul
gs
std
inc
add
popf
ret
out
xor
out
out
fldenv
dec
pop
pop
imul
rclb
or
movsb
mov
sub
lcall
mov
push
xchg
lea
sbb
mov
inc
mov
cld
inc
cwtl
in
roll
nop
and
es
mov
imul
cmp
sub
in
jge
in
lods
mov
leave
mov
mov
cmpsl
cmp
mov
xor
hlt
mov
inc
ret
out
dec
jae
ds
clc
lret
mov
jbe
push
les
or
pop
xor
push
xchg
pop
xchg
jo
fsubrl
pusha
ret
rorl
sbb
mov
shrl
sbb
mov
adc
bound
or
jno
in
mov
rclb
lret
aam
sub
mov
imul
das
fstpt
lds
and
scas
ret
lret
push
ds
sbb
and
addl
inc
xor
leave
push
fbld
int
jg
inc
jmp
push
lcall
pop
jmp
mov
std
mov
mov
xor
push
or
jb
sub
xor
mov
adc
into
xchg
mov
push
xchg
dec
mov
std
call
jmp
jg
ss
icebp
pop
lock
cwtl
mov
lods
xor
movsb
call
imul
dec
add
jo
mov
lea
ds
pop
adc
repz
jecxz
mov
push
in
nop
or
add
fisubl
das
and
add
out
sarl
int3
mov
dec
and
lahf
insb
inc
aam
insb
cs
mov
push
ja
jbe
lret
add
lret
cmp
jecxz
or
pop
pop
jg
xor
push
jmp
mov
in
lret
xchg
out
inc
mov
lahf
jo
push
and
xlat
pushf
movsb
sbb
inc
sbb
fstpl
sar
jo
js
clc
outsl
test
cli
ret
mov
lods
in
data16
and
mov
gs
pop
push
jecxz
es
lret
in
mov
pop
enter
jns
xor
ljmp
out
jno
in
pop
cmp
xchg
jb
cmp
jb
sub
push
rclb
mov
inc
dec
sti
fwait
xor
mov
sbb
repnz
cmp
pop
idiv
cltd
movsb
ja
sub
mov
jp
popf
es
sub
aas
mov
rcr
push
stos
loopne
mov
jo
sbbl
or
add
test
aas
mov
adc
and
shl
jp
sbb
and
or
mov
dec
sbb
js
mov
jg
push
adc
jecxz
or
and
lods
push
aad
add
or
jle
ffree
gs
loope
sbb
ja
in
leave
je
adc
inc
jne
packuswb
and
mov
jo
leave
pop
mov
roll
sub
push
ljmp
sub
call
int3
mov
cmc
sub
adc
sbb
hlt
pop
xor
fdivs
nop
call
sbb
js
dec
inc
fwait
mov
dec
or
mov
ficompl
xlat
jno
cwtl
or
mov
outsl
and
push
in
popf
adc
js
mov
or
pop
loope
aas
push
mov
dec
jno
dec
test
leave
int3
push
mov
sahf
mov
push
inc
scas
outsl
xchg
mov
ret
rorl
fcmovb
xor
mov
cmp
xor
and
testb
ss
popa
icebp
outsl
or
xchg
mov
aaa
sub
pop
aad
cmp
stos
aam
inc
push
add
sarl
jno
test
pusha
cwtl
add
in
pop
push
cltd
mov
and
sbb
dec
push
jnp
push
push
adc
in
mov
insb
out
rcll
pop
sbb
pop
test
outsl
lock
lods
fwait
shll
mov
cmp
inc
mov
subl
lret
dec
fidivrl
cltd
rorl
jg
rol
jnp
gs
test
ja
push
cmp
xlat
fwait
xor
inc
adc
xchg
jae
mov
xchg
and
inc
je
daa
push
je
rolb
jno
adc
push
scas
pop
mov
inc
xchg
dec
lcall
je
inc
mov
int
ret
inc
shrl
mov
lcall
cld
mov
andl
aas
popf
punpckhwd
lcall
mov
dec
xchg
dec
mov
mov
xchg
cmp
xchg
cld
dec
mov
jg
dec
cmpsl
stos
push
push
push
call
cltd
cmc
rcll
jecxz
ljmp
jle
push
idivb
stos
adc
repz
mov
ja
sub
bound
push
mov
push
in
dec
rep
push
divl
push
daa
xchg
cmp
insb
mov
in
gs
xor
loope
mov
mov
je
fimull
inc
aam
mov
jnp
fiadds
jg
mov
add
jae
push
pop
xchg
jo
rcrl
data16
roll
xor
jl
addb
cwtl
out
movsb
cli
lds
mov
imul
sti
stc
xor
mov
test
imul
stos
xor
inc
mov
loop
and
les
sbb
xchg
xor
ror
imul
nop
shlb
pushf
mov
xchg
inc
out
add
cmpsb
cmp
push
iret
mov
fst
inc
jo
dec
xor
pop
shll
icebp
adc
cs
movsl
das
inc
adc
inc
add
mov
push
push
jg
pop
adc
andl
les
ja
xor
filds
int
outsl
add
push
out
cmp
faddl
mov
bound
std
dec
push
or
push
addb
add
les
add
leave
add
cmp
es
xorb
cmp
xor
add
in
jo
push
cmp
cmp
inc
adc
push
fwait
cmp
push
sbb
adc
ds
mov
imul
sub
aaa
xor
add
xchg
add
test
dec
sbb
or
jp
sub
mov
test
in
in
daa
mov
scas
xchg
outsl
shl
cmpsl
xchg
mov
lahf
insb
cwtl
sti
movl
ja
outsb
jecxz
lahf
mov
push
addr16
test
inc
inc
cs
or
adc
sbb
out
xchg
or
test
aaa
cmp
loop
test
inc
push
iret
push
mov
jg
xchg
jne
xor
mov
sub
adcb
xchg
stos
lcall
fiaddl
rep
es
aaa
lea
sub
pop
je
mov
adc
sub
test
loope
or
jbe
push
popa
dec
fdivrs
inc
das
lods
loopne
adcb
and
pop
mov
lret
pop
cltd
xor
jecxz
sub
pop
cmp
adc
xchg
push
push
daa
testl
add
xor
xchg
lahf
inc
lds
icebp
push
xorb
mov
push
sbb
cmp
xlat
inc
push
dec
add
cmpsb
sbbb
lcall
dec
cmpb
cltd
aas
xchg
jne
addr16
xor
jmp
stos
jnp
insl
pop
sbb
clc
lcall
out
mov
push
adc
pop
mov
jne
loopne
bound
popf
adc
xchg
xor
sub
mov
out
aam
add
int3
push
pop
int
add
mov
cmp
mov
mov
testl
scas
pop
insl
or
jne
mov
dec
clc
and
push
stos
les
cmc
aad
xor
mov
cwtl
sub
add
or
out
lcall
sahf
sbb
pusha
in
jecxz
flds
push
fwait
inc
rcrb
fwait
mov
stos
xchg
fnstsw
es
jg
inc
push
call
xor
fcoms
movsl
xchg
pop
inc
jns
in
cli
xor
and
daa
imul
pop
pop
pop
stc
adc
mov
aad
mov
push
adc
sbb
inc
ja
dec
mov
adc
lds
and
jae
mov
lret
lret
inc
sub
mov
mull
xor
pop
les
mov
inc
jmp
fdivrs
bound
rol
addr16
and
arpl
jge
push
add
cmp
insl
test
jl
push
xor
jne
aam
mov
and
out
mov
rol
out
pop
ljmp
movsb
test
subl
push
mov
sbb
cmp
movsl
fidivs
cli
mov
mov
mov
xorl
test
sub
xchg
pop
xor
fidivl
outsl
jmp
jp
xor
xchg
sbb
popa
jb
jmp
aas
leave
xchg
lahf
push
xchg
arpl
daa
pop
xchg
pop
ret
int
xor
mull
push
lea
addl
dec
ficoms
mov
je
test
out
icebp
adc
es
mov
punpckhdq
or
pop
ljmp
call
mov
pop
jb
orb
out
or
jmp
lcall
jns
push
and
xor
jns
dec
loopne
sub
pop
roll
lods
cmp
sub
inc
sbb
cmc
test
xchg
push
rcll
or
xchg
jl
add
imul
mov
jb
and
test
and
pop
in
repnz
xchg
push
mov
and
iret
push
loopne
pop
cltd
pop
lock
mov
cmp
cmp
pushf
lcall
test
sbb
int
jecxz
push
clc
sbbb
cmc
rorb
xchg
js
insl
jne
cli
lcall
arpl
and
fnsave
sub
imul
adc
push
std
add
icebp
dec
aad
or
imul
in
mov
ljmp
in
cmp
xchg
cbtw
ficompl
cmp
mov
xchg
and
fistps
xchg
loope
mov
cli
push
aaa
or
or
out
inc
aam
lret
inc
dec
shlb
mov
in
mov
sub
popf
pop
fldt
push
jg
xor
pop
and
pop
stos
lcall
ror
sub
stc
cmp
lahf
orl
mov
lods
ljmp
inc
push
xchg
dec
jno
push
sbb
rcll
or
negl
insb
aad
inc
insl
xchg
aam
xorb
cmpsb
cmpsb
sbb
fistl
jge
roll
jno
mov
xchg
inc
inc
hlt
je
lea
ljmp
mov
ja
mov
adc
test
stos
cmp
push
lock
push
leave
fidivl
mov
add
pop
ficompl
scas
xchg
addr16
jbe
shlb
add
cld
push
outsb
push
mov
jo
xchg
lcall
adc
adc
jp
lret
fadds
stos
jle
cmp
jle
lods
ss
fcoml
dec
cmp
test
add
ljmp
rcll
or
or
fsubrs
jle
cmp
rdtsc
ret
mov
test
dec
sub
inc
out
push
add
les
cmp
call
pop
add
pushf
fistps
adc
imul
mov
sbb
xchg
push
ret
sbb
cld
fimull
popf
sub
sub
add
and
or
cmpsl
sub
inc
adc
cmp
cmpsb
inc
lret
xchg
and
mov
mov
loop
ffree
jns
inc
cmp
dec
xor
push
sub
sbb
repnz
mov
movsl
ret
dec
fimuls
rcll
aam
and
cmp
in
xlat
cmpsb
repnz
sub
push
dec
in
pop
rcl
mov
ja
sub
std
out
mov
popf
pop
fsubrl
xlat
jl
pop
fisttpll
inc
loopne
inc
bound
push
add
repz
push
push
pop
xor
js
sarl
mov
cmpsb
push
sbb
loope
push
arpl
int
addr16
test
imul
or
sti
sub
xchg
cs
movsl
cld
push
sti
xor
jo
push
or
mov
in
sub
aas
cmp
cmp
cmp
inc
lret
daa
add
pop
push
insb
mov
fwait
xor
jb
xchg
push
sub
lods
mov
sahf
es
xlat
xsha1
cmpsb
mov
std
popf
sbb
lds
fwait
jp
repz
or
jne
add
jg
jmp
aas
aas
neg
imul
outsl
rcrb
sahf
push
jbe
pop
jecxz
cli
pop
pop
pop
rcll
mov
or
inc
int
jp
hlt
inc
mov
inc
dec
xor
pop
xor
inc
mov
push
cwtl
jnp
addl
cwtl
hlt
pop
insl
sub
jge
int
jne
and
cltd
scas
leave
into
push
jbe
adc
les
mov
xor
push
inc
jo
in
push
dec
push
repz
rol
pop
out
mov
mov
pop
je
dec
mov
je
mov
sbb
inc
sub
jbe
adc
fidivl
mov
xchg
mov
loop
les
pop
cld
jmp
popf
jmp
inc
mov
ljmp
and
or
and
loope
jmp
jno
cmp
jae
xchg
and
push
ret
sub
push
into
ljmp
repnz
ljmp
mov
inc
sbb
sub
sub
imul
fwait
mov
jb
push
sbb
out
add
add
adcb
out
in
in
sbb
fnsave
push
aam
mov
mov
push
xchg
cmpsl
push
sahf
push
xor
mov
xchg
cmp
add
imul
stos
mov
je
inc
push
call
adc
das
sbb
lods
jns
push
arpl
xor
xchg
mov
notb
fcoms
or
sbb
jb
push
mov
cmpl
mov
push
rcrl
inc
adc
xlat
push
xchg
lods
fsubl
rcll
out
mov
push
jecxz
rclb
dec
adc
adc
iret
daa
mov
mov
push
ss
mov
cmp
mov
fdivl
dec
jp
push
push
push
mov
push
cmc
add
mov
popa
sub
or
xchg
cmpsl
movsb
dec
jno
aas
dec
mov
push
sub
or
inc
push
mov
pop
add
or
stos
loopne
or
sbb
pop
mov
or
jecxz
imul
stc
mov
mov
sbb
fisttps
adc
mov
data16
fists
xchg
push
jle
pop
daa
int3
shlb
fdivrp
je
pop
sbb
inc
rol
sub
mov
out
adc
jg
sub
filds
and
unpcklps
pusha
sahf
push
sub
and
dec
pop
pop
xchg
mov
push
dec
jne
push
jns
xchg
cli
mov
outsb
dec
cmp
cmp
mov
push
popf
mov
lret
xchg
mov
fistpl
mov
pop
jns
rcll
adc
shll
mov
mov
movsb
cmc
shrl
insb
inc
mov
jo
inc
outsb
sbb
adc
addr16
cld
xor
in
inc
xor
mov
add
jle
std
mov
xchg
clc
arpl
xchg
inc
ja
movsl
stc
pop
mov
push
xor
xchg
aad
dec
jnp
cmpsb
and
pop
out
out
xorl
popf
cmc
push
out
popa
pop
mov
pop
sarl
out
or
mov
bound
insb
jmp
loop
int3
pop
and
fadd
or
aas
xor
cmp
out
dec
mov
fidivrl
cmp
lcall
lock
popa
pop
je
and
adc
sub
out
lock
loopne
aaa
xor
sub
xchg
xlat
ror
int3
mov
pop
push
xor
jl
sbb
xlat
call
rcl
mov
pop
lods
jbe
xchg
dec
sub
add
dec
cli
cmp
aam
push
popf
jle
and
pop
add
ss
push
in
jnp
aam
cmp
dec
popa
jle
push
fdivrp
adcb
iret
pop
jo
mov
mov
cmp
xor
adc
cmp
xor
inc
inc
push
clc
mov
dec
outsb
js
sbb
fadds
sahf
fbstp
adc
mov
mov
fistpll
mov
out
std
pop
xor
pushf
dec
pop
push
int
push
lods
outsl
arpl
mov
lock
rcr
lods
mov
test
lea
leave
jecxz
insb
push
push
stos
xor
jecxz
sahf
xchg
jg
stos
mov
pop
aas
adc
daa
lds
add
cmpsb
scas
jo
push
out
sbb
push
ljmp
xchg
cld
in
xor
in
sub
cmp
push
cltd
je
and
sete
cmpb
ds
add
int
inc
inc
jo
adc
dec
dec
gs
stos
gs
sbb
adc
cmpsl
adc
xchg
daa
mov
ds
pop
pop
mov
add
int3
pop
sub
and
mov
inc
cwtl
sub
sub
mov
outsl
nop
jae
in
xor
mov
or
roll
jb
and
xchg
cmp
enter
insb
or
arpl
sbb
fisttps
push
and
inc
pop
ror
pop
leave
cwtl
xor
testl
std
xor
xor
and
push
push
pop
aad
sbb
mov
fisttpl
leave
dec
dec
dec
fistpll
pop
jge
test
push
test
dec
shll
and
movsl
into
fwait
cmp
pusha
adc
xor
sar
loopne
rcll
xchg
add
shlb
sub
pop
mov
add
outsl
sbb
outsl
add
jae
dec
mov
outsb
and
xchg
test
dec
repz
nop
cmp
pop
or
stos
rorl
and
lret
mov
jne
pop
jnp
pop
push
popf
lock
jne
lret
mov
loope
mov
add
xor
push
stos
dec
mov
push
scas
pop
push
popa
sub
pushf
xchg
mov
loop
test
addb
sub
or
jge
cli
jl
into
mov
cwtl
test
imul
sub
stos
mov
repnz
scas
or
int3
dec
stos
pop
dec
sub
shll
mov
pop
fistl
xor
pop
ja
mov
jo
pop
rcrb
add
repz
gs
xchg
scas
and
mov
adc
mov
push
jge
outsl
js
add
cmpsb
or
xlat
loopne
insl
int
nop
and
imul
dec
push
mov
arpl
dec
mov
addl
jb
aaa
add
and
lret
pop
aas
cs
xchg
insl
pop
lds
dec
xor
mov
inc
mov
and
test
xlat
inc
or
sbb
test
cmp
repnz
mov
cmp
das
adc
push
andl
popf
int3
fisttps
aad
mov
dec
ret
hlt
gs
fiaddl
inc
push
push
mov
xchg
sub
sbb
lds
dec
pop
fstps
lods
loopne
test
sarl
fsubrl
jne
imul
push
mov
outsb
aas
fwait
jmp
mov
sub
leave
xchg
ficomps
cltd
sbb
add
mov
fildl
shrl
imul
popf
loop
mov
xor
inc
push
and
loope
pop
sub
push
cmp
popf
pop
in
add
push
out
nop
loope
aas
pop
push
addr16
frstor
lock
sbb
inc
cmp
les
outsl
inc
xchg
movb
add
jge
xchg
pusha
dec
sahf
out
clc
aas
or
inc
faddl
xor
mov
xchg
in
push
push
fsin
jge
lea
push
testb
scas
sbb
jmp
push
outsb
jae
inc
daa
pop
mov
cmpsl
jp
adc
mov
sub
lahf
dec
ss
xchg
js
cs
js
mov
es
in
xchg
dec
sahf
stos
ficoms
les
rcr
xchg
pushf
cmpsb
test
push
pop
xor
mov
jb
push
push
stos
and
dec
xchg
push
push
or
in
mov
xchg
xor
lahf
inc
mov
push
xchg
stos
dec
jecxz
inc
mov
push
lods
mov
les
adc
pushf
jb
sub
int3
cmc
mov
insl
fisubrs
xchg
loope
fs
mov
jno
pop
iret
lods
or
mov
xchg
sbb
adc
sbb
fs
pop
nop
mov
pop
insl
nop
jb
inc
sub
xor
dec
push
add
popf
testb
mov
dec
in
push
iret
repz
and
sbb
loop
jb
xorb
jge
in
cmp
sbb
out
sbb
popa
lea
xchg
pop
dec
jae
ljmp
popf
cmpb
dec
pop
xor
dec
jbe
mov
pop
stos
push
adc
outsb
cmp
jnp
or
sbb
mov
or
inc
dec
out
mov
dec
inc
inc
sti
xchg
jmp
push
movl
xchg
test
loop
dec
insb
dec
and
inc
jl
add
das
pop
pop
xchg
xchg
shl
add
in
jmp
jl
or
sbb
dec
mov
into
jg
mov
in
adc
daa
lahf
jbe
pavgb
into
push
cmp
cwtl
jns
xchg
rclb
scas
jmp
or
inc
dec
std
push
mov
loopne
inc
cmpsl
lods
adc
mov
mov
js
xor
sbb
add
dec
jbe
outsb
popf
dec
mov
or
test
push
and
notl
fsubr
fmull
xchg
inc
rclb
xorb
out
mov
adc
adc
fsub
push
push
mov
xchg
aaa
push
dec
xchg
mov
in
jns
jle
adc
add
push
andl
dec
add
ret
inc
rolb
sahf
cmp
out
sbb
xchg
xchg
jp
sbb
lea
push
insb
test
sub
addb
jle
xor
pop
jl
xlat
inc
add
jns
mov
mov
inc
fsub
cmpl
push
xor
and
movl
cmp
push
push
or
cmpl
andl
push
test
and
sub
cmp
out
stc
icebp
test
dec
fldt
std
js
arpl
jne
dec
mov
bound
jge
pop
dec
int
popf
dec
adc
and
and
sub
call
push
sbb
adc
dec
add
dec
jecxz
xlat
ficomps
push
lret
add
pop
sbb
arpl
fdivrl
mov
scas
scas
js
test
daa
sbb
gs
ds
loop
enter
and
xor
xor
mov
iret
movsb
in
pop
mov
xlat
sbb
lcall
out
daa
daa
jecxz
push
sbb
mov
test
nop
and
repnz
fstl
pop
inc
in
cltd
shll
movsb
stos
and
int
in
xrelease
fprem1
mov
dec
cmc
subb
cmp
jnp
fsubp
cmp
ljmp
adc
add
idivl
xchg
hlt
sbb
mov
jb
hlt
cs
in
sbb
test
out
cmp
fcmovnu
push
call
xor
mov
push
hlt
dec
mov
lret
pop
push
cmp
test
cmpsl
pushf
and
cmp
fdivs
inc
aaa
push
inc
jbe
mov
sahf
movsl
scas
sbb
or
cmpsl
jbe
mov
test
daa
repnz
iret
pop
mov
sub
mov
scas
rcrl
or
test
jae
out
mov
jo
aam
xchg
cmpsb
xor
jb
aaa
popa
pop
orl
lds
fidivrl
out
cmpsl
enter
sbb
outsb
fs
mov
mov
psllw
dec
out
sub
ror
or
fstps
fsub
mov
sbb
mov
pop
imul
pusha
or
push
out
push
cmp
or
cmpsl
inc
pop
adc
pusha
and
push
dec
xor
cmpsb
inc
das
push
or
mov
enter
dec
push
mov
mov
sbb
inc
sub
mov
pop
int3
js
jne
pushf
pop
fsubs
dec
add
test
and
push
mov
es
lret
dec
scas
rcrl
add
add
sarb
sbb
xor
in
jb
ficompl
cmp
std
xchg
push
adc
cli
mov
mov
dec
mov
xchg
loope
pop
rclb
pushf
das
push
or
insb
xchg
sbb
mov
inc
popa
scas
andl
xchg
es
jb
push
int3
mov
cmp
push
xchg
mov
js
mov
adc
jb
sbb
adc
and
jbe
add
mov
enter
repnz
pushf
repnz
xlat
adc
pop
movsb
sbb
jbe
cld
shl
ljmp
shlb
pop
mov
fnstsw
aas
test
fs
mov
and
dec
ja
dec
push
fwait
cmp
inc
mov
xor
fldl
xchg
push
jae
inc
lret
jne
add
mov
dec
push
mov
fwait
adc
xchg
xchg
cmp
and
dec
in
out
push
lock
mov
add
mov
lahf
out
repnz
sbb
inc
das
lds
jg
mov
cld
fcmovnu
mov
jp
and
lock
and
test
and
mov
or
loopne
push
xchg
ss
mov
ss
js
das
stc
inc
pop
jbe
mov
lahf
and
dec
mov
pusha
jle
adc
and
data16
int
out
mulb
mov
lcall
cmp
in
leave
aam
pop
sub
jmp
lock
mov
sti
or
mov
mov
je
pop
shlb
loope
mov
notl
aad
jbe
aaa
jge
sbb
movsb
in
and
and
mov
insl
pop
xor
add
sti
push
fidivrl
push
int3
mov
mov
sti
jp
push
xor
mov
xor
das
outsb
ret
jne
mov
push
pop
xchg
xchg
push
xchg
and
cmp
jecxz
movsl
mov
mov
pop
subl
xchg
imul
jae
mov
bound
shll
xchg
cmpb
shrb
ficoms
lock
rorl
cmc
int
dec
repz
mov
xlat
cmp
les
sbb
lea
mov
pusha
test
ret
xor
mov
push
rol
stc
call
mov
and
push
rorb
pop
cli
aaa
pop
adc
lcall
cmpsl
repnz
mov
and
shll
mov
pushw
rcrb
push
push
push
pop
sub
aas
les
and
cli
movsb
lods
mov
xlat
cmpsl
xlat
cmpsb
stos
add
out
push
mov
je
sub
cmp
inc
out
jne
test
insl
adcb
addl
mov
rcr
hlt
mov
orl
imul
dec
and
xchg
cli
sbb
fadd
outsb
addl
inc
mov
enter
add
mov
pop
jns
arpl
out
aam
pop
lea
fstl
add
sub
mov
sub
push
pop
fistl
xchg
xchg
hlt
mov
jne
xor
mov
add
jno
xchg
or
sub
arpl
push
subl
lahf
push
roll
bound
std
mov
movsb
and
std
popa
cmp
je
sub
xchg
arpl
sub
pop
or
les
dec
and
lea
xor
dec
pop
mov
mov
push
xchg
push
nop
jnp
jp
popa
mov
inc
cmp
lret
cmp
stos
fcmovb
inc
pop
or
dec
mov
push
dec
sbb
mov
sub
adc
mov
mov
test
add
push
xchg
mov
adc
in
cmp
push
test
push
add
or
lods
and
adc
inc
push
add
loopne
bound
sahf
cs
cmpsb
movsb
mov
adc
fwait
ljmp
mov
enter
pop
jae
in
bound
inc
xchg
cmp
mull
shr
mov
jo
adc
cmp
mov
push
sarb
pusha
adc
shr
ljmp
repz
test
shll
mov
popf
fisubrl
loop
mov
std
xchg
jae
push
call
and
cmp
add
jge
stos
or
iret
xchg
scas
je
das
lds
or
cmp
repz
dec
das
addr16
and
adc
pop
aaa
into
mov
les
pop
je
xchg
sub
bound
imul
mov
sbb
and
ficoms
mov
sub
cmpsl
pop
xchg
pop
cmp
mov
rcll
in
jl
insl
loope
loope
adcl
rol
aas
jne
shlb
or
stos
xlat
bound
adc
adc
popf
lods
fwait
cld
push
cmc
mov
aaa
mov
out
iret
pop
mov
pushf
insb
push
push
mov
mov
push
adc
nop
mov
in
inc
inc
dec
js
pop
cmp
xlat
mov
flds
push
shr
in
cmp
jecxz
lods
das
lahf
imul
incb
insb
in
dec
push
inc
mov
dec
lea
fldl
xchg
adc
or
inc
lods
sarl
enter
loop
mov
sbb
dec
mov
mov
or
mov
call
shll
mov
cmp
test
jae
lods
arpl
sarl
xchg
je
and
stos
popa
out
pop
jnp
jne
out
fnstsw
or
mov
nop
or
add
movsb
mov
inc
lods
ss
cld
push
in
sti
mov
fisubrl
jae
ss
jnp
sbb
inc
cmp
jle
ret
mulb
xor
aam
jmp
or
pop
mov
mov
pop
std
jl
sbb
sti
mov
nop
add
idivl
rcrl
xor
push
cs
lret
ret
jbe
adc
dec
mov
pop
das
pop
cmp
mov
xor
push
add
jmp
stos
jp
inc
push
mov
repnz
sti
adcb
push
cs
jo
stos
cmp
xor
adc
cmp
movsb
inc
stc
cmp
ljmp
sarl
push
mov
and
add
inc
xchg
pop
and
sbb
data16
outsl
pop
or
pop
incl
and
mov
inc
pop
popf
int3
and
lahf
adc
test
mov
imul
lods
out
bound
std
leave
xor
or
iret
pop
sub
push
mov
dec
sbb
sarl
push
pop
push
in
ja
pushl
test
jbe
xorb
lret
roll
mov
lret
push
adc
or
aas
cld
adc
add
popa
mov
xor
inc
xchg
call
imul
lahf
cld
mov
cwtl
sbb
pushf
ja
jne
scas
je
mov
sar
lret
pop
push
and
mov
rcrl
push
jmp
movl
xchg
rorb
cld
mov
cmp
loope,pt
icebp
in
lods
jno
test
adc
loope
test
leave
andl
xor
pminub
pop
test
jecxz
jnp
mov
mov
adc
xor
or
mov
push
imul
imul
test
roll
or
gs
push
xchg
adc
mov
sub
repz
out
popa
sar
insb
cwtl
push
push
mov
sbb
jnp
mov
pushf
test
adc
pop
mov
jecxz
mov
call
jle
ja
xor
mov
cld
xlat
orl
orb
push
lret
mov
mov
lahf
xorl
inc
ljmp
clc
lcall
movsb
adc
xor
call
movsl
sti
inc
addl
loop
xorb
ficoms
testl
loope
popf
mov
jb
xchg
mov
sub
mov
inc
jp
loop
out
inc
shrl
in
or
xchg
and
mov
std
fdivs
repnz
sahf
jae
movsl
lods
icebp
repnz
lds
inc
push
scas
dec
mov
addr16
in
clc
sbb
jae
ljmp
mov
pop
add
test
mov
adc
mov
jae
jp
pushf
push
hlt
sub
scas
aam
xchg
loop
mov
or
inc
or
iret
loope
test
test
fidivrl
mov
jnp
mov
sub
pop
pop
out
jo
pop
push
bt
sti
xchg
dec
fcoms
ret
fmuls
mov
push
jg
rcll
es
test
loop
adc
mov
imul
sub
mov
cwtl
icebp
arpl
data16
pop
push
cli
sti
pop
dec
je
nop
sarb
enter
fsts
stos
out
into
jb
mov
insb
test
mov
xor
lcall
js
mov
or
adc
push
jne
imul
mov
xchg
dec
cld
push
outsb
in
lock
jle
mov
bound
ret
cmpsl
inc
mov
xchg
mov
sub
icebp
in
jmp
pop
mov
jge
push
sbb
pop
adc
and
push
mov
arpl
idiv
push
das
dec
call
insb
daa
out
roll
out
dec
and
pusha
aaa
adc
mov
mov
xor
insb
out
xchg
cmp
sub
lret
or
negb
add
ljmp
add
jbe
inc
out
loope
mov
fidivl
pop
and
sbb
fists
roll
add
pop
and
out
jno
ljmp
aaa
pop
stos
ret
and
subb
pop
mov
xchg
inc
jno
inc
mov
fwait
ss
cs
imull
andl
fidivrl
stc
xchg
repnz
xchg
out
mov
ss
cwtl
push
cmp
stos
negb
inc
movsb
bound
sub
std
insl
adc
cli
fwait
xor
ja
sbb
andb
sbb
test
and
iret
or
loope
or
mov
mov
cmp
test
cmp
push
gs
cmp
arpl
xchg
popf
jne
leave
test
fistpl
sub
lret
das
int3
cmp
xor
les
jl
mov
imul
sti
fisubrs
push
push
xchg
add
push
out
sub
sbb
out
push
loopne
cmp
out
add
sar
cmp
ficoml
xor
cli
mov
pop
daa
sbb
sub
push
adc
popa
mov
sbb
ljmp
popa
jno
fwait
daa
mov
mov
cmp
loop
gs
pop
mov
mov
scas
into
jb
push
xor
shrl
repnz
inc
aas
jns
icebp
mov
idivb
fwait
jge
ret
dec
ret
push
xor
imul
add
test
test
addr16
mov
cs
dec
dec
rclb
mov
lcall
mulb
xchg
int3
pop
shlb
mov
dec
pop
imul
push
mov
sbb
add
cs
sub
je
dec
aaa
sbb
or
inc
sbb
sbb
subb
mov
sub
push
ret
cltd
cltd
sbb
pop
fwait
jl
in
or
sarb
adc
les
fidivrl
pop
fbstp
mov
outsl
cmp
push
xor
outsb
stos
notl
xor
or
pop
xchg
push
xchg
xor
daa
mov
or
insb
adc
xchg
das
mov
ret
icebp
xchg
xchg
adc
out
adc
cmpsb
cmp
xor
pop
daa
xchg
adc
movsb
mov
adc
ss
lret
inc
ror
or
mov
jl
xor
pop
dec
push
cli
pop
insb
push
aas
xor
sar
inc
jecxz
hlt
orl
or
jb
mov
call
pop
push
lahf
ret
lcall
shlb
outsb
and
pop
xchg
call
movsl
dec
je
ljmp
repz
xor
icebp
sbb
jge
les
sub
xchg
ret
lea
test
xchg
inc
dec
popa
fnstcw
mov
lock
lcall
xorl
xor
mov
xorl
outsl
lcall
jne
jno
inc
push
add
rorl
imull
mov
stos
mov
lcall
and
fmuls
data16
leave
jae
arpl
or
xor
outsl
repz
pop
xor
jo
or
jmp
jmp
sbb
ljmp
mov
shrb
repz
negl
lds
jp
push
xor
add
ret
sub
adc
mov
xor
push
cmpsb
cmp
mov
pop
jno
rorb
outsl
mov
or
mov
mov
fcmovbe
mov
stos
addb
mov
cs
cs
fisttpl
dec
push
out
or
jnp
mov
jecxz
jg
xor
movsb
lods
test
sub
decl
mov
mov
pop
lods
mov
and
popa
ret
lods
nop
pusha
out
xor
imul
in
mov
mov
mov
vdivps
popa
mov
mov
mov
lea
je
jo
pop
mov
stos
or
push
rorb
push
es
ret
cmp
mov
xor
cmp
sarl
lcall
fisubrs
sbb
insb
add
popa
inc
ja
pusha
mov
xor
xlat
jmp
jo
cmp
pop
push
lcall
pop
iret
xchg
mov
xchg
sbb
mov
adc
outsl
mov
adc
xchg
pop
lea
sub
sbb
adc
mov
mov
dec
xlat
sub
test
fwait
cmp
push
jno
xor
ret
ficoms
out
cmp
and
in
pop
lock
xchg
notb
imul
inc
fwait
jp
cmp
shrl
or
repz
andl
fistl
sub
testl
xchg
dec
in
lret
add
fildl
pop
lcall
popa
jae
pop
push
xor
icebp
jnp
mov
sub
or
push
lock
fbld
mov
and
pop
or
jecxz
sbb
sub
or
push
inc
mov
jmp
cmp
dec
dec
stc
icebp
addb
rolb
and
in
in
jl
int3
xchg
fisubrl
cmovno
inc
cld
aaa
jmp
sbb
mov
mov
jne
sbb
push
inc
rcrb
xchg
lock
lods
fwait
xor
ror
xor
or
bound
sbb
lods
les
fs
pop
xchg
or
mov
int
pop
iret
xchg
stos
jle
rcll
adc
je
ds
int3
pop
scas
pop
mov
jmp
outsw
jp
pusha
jo
mov
inc
adc
call
nop
aam
out
movsl
jmp
test
test
add
adc
rcll
push
je
loopne
xchg
lcall
shlb
jmp
fstpt
mov
adc
mov
mov
scas
ret
or
jge
test
mov
mov
int3
out
dec
sub
fistps
in
and
rcll
jg
sbb
push
and
inc
stos
adc
push
fcmovbe
sub
subl
das
cmp
div
and
add
push
dec
stc
xchg
mov
add
cli
xchg
out
add
xor
loope
inc
mov
aaa
xchg
push
lahf
stos
dec
lds
xchg
mov
pop
or
xchg
add
push
and
xor
cli
mov
jne
xchg
cmovnp
popf
cmpsl
lea
inc
shll
shr
mov
mov
and
repnz
int3
jns
adc
mov
mov
jmp
mov
pop
push
lahf
imul
inc
in
push
push
mov
in
fwait
xor
pop
jl
inc
lods
movsl
mov
ret
adc
inc
fsubs
test
addr16
clc
mov
fwait
test
mov
ss
jmp
add
lret
mov
and
jo
subb
loopne
mov
mov
movsl
and
push
hlt
aam
dec
xor
xchg
jp
inc
mov
push
mov
int3
cmpsl
jl
jbe
cs
daa
xchg
outsl
pop
and
ret
orl
in
jle
dec
lret
stos
outsl
jmp
jbe
mov
jb
cli
fnsave
aas
dec
stos
xchg
mov
pushf
sti
cmpsl
out
shl
jg
inc
sbb
in
clc
movd
mov
add
xrelease
sbb
push
inc
xchg
sarl
sbb
mov
loopne
mov
out
lret
mov
out
ficoms
mov
jmp
sub
ja
xchg
cld
sub
mov
xor
das
lret
popa
mov
push
inc
cmpl
adc
push
test
ret
jl
jnp
inc
fnstenv
push
jp
push
add
cmp
jns
or
jnp
mov
jp
adc
ret
add
xchg
mov
jne
ret
fcmovu
add
mov
scas
inc
outsl
mov
mov
xor
push
mov
inc
pop
jmp
addr16
jns
int
fistl
inc
into
fists
lea
leave
mov
fwait
movb
fs
pop
aas
and
insl
add
jno
lcall
cmp
repnz
daa
daa
sti
mov
addr16
jg
push
pop
in
and
jmp
xor
push
jg
iret
daa
cmpsb
lret
add
insl
sbb
rcrb
lahf
pop
dec
gs
ss
sbb
and
aad
sub
add
out
mov
int
pop
in
cli
sarb
adc
jns
pop
in
sahf
cmpl
fistps
sub
pop
mov
popf
xchg
cltd
or
test
push
pop
sub
cmpsl
dec
jo
scas
push
inc
sub
lret
int3
adc
sarb
or
repnz
pushf
jnp
lret
mov
pusha
movsb
dec
clc
xor
in
scas
cmp
test
adc
shll
gs
lea
pop
es
aas
and
mov
jno
int3
aaa
fwait
outsb
sub
hlt
shll
sbb
push
dec
xchg
mov
int
scas
xor
and
add
imul
repz
insb
out
pop
test
les
iret
cltd
mov
and
cmp
pop
dec
aaa
pop
jmp
mov
hlt
leave
data16
clc
xor
insl
jl
mov
imul
mov
mov
xchg
add
icebp
mov
inc
inc
push
cmp
pop
lret
dec
fldl
sarb
es
ret
pop
push
mov
jne
lahf
movsl
pop
inc
pop
inc
rcrl
xor
or
mov
dec
inc
cmc
test
jmp
mov
std
adc
sub
orl
sbb
ret
ja
in
stos
mov
mulb
add
dec
dec
cmp
push
sub
pop
stc
fisttpll
push
es
mov
fwait
and
scas
das
call
jge
adc
adc
mov
jle
outsb
clc
and
cmp
fidivrs
mov
imulb
mov
arpl
mov
stc
jecxz
lock
in
popf
sbb
push
fadd
jae
cmpsl
les
test
xchg
xchg
mov
mov
pushl
enter
sbb
stc
jno
sub
push
faddl
and
or
jecxz
inc
andb
jne
jns,pt
adc
mov
rorl
jnp
pop
cmpb
cmp
mov
mov
sub
cmp
pop
test
out
cmp
mov
aad
sub
mov
roll
pop
inc
xor
fiaddl
je
divl
push
dec
int
int
mov
add
inc
jmp
dec
cmp
icebp
dec
mov
rorl
mov
lcall
fmuls
pusha
mov
push
add
test
push
mov
sbb
mov
xchg
dec
pusha
add
mov
push
inc
shrl
xor
mov
lods
flds
and
sbb
mov
sub
int3
ja
ljmp
loop
subl
or
jle
jae
stc
roll
dec
xchg
mov
out
orl
mov
or
dec
dec
ficompl
adc
loop
sbb
mov
mov
or
or
aaa
mov
lahf
mov
bound
pop
js
mov
test
stos
andl
sub
lahf
mov
jnp
and
mov
stos
fdivrs
pop
cld
rolb
mov
addr16
sti
or
sbb
out
add
pop
sarb
and
fsubr
movsb
push
outsl
push
lds
les
cmpsb
jbe
xor
js
sar
in
cmp
sub
pop
into
cld
pop
lods
in
pop
xchg
pusha
in
mov
jo
inc
in
xor
jl
push
setbe
ffree
ss
xchg
mov
test
mov
loopne
cwtl
dec
inc
pop
xchg
inc
stos
mov
dec
outsl
fdivs
roll
rorb
out
adc
je
out
fstl
xchg
aad
add
sub
in
jmp
std
xor
loop
js
bound
push
pusha
or
dec
cwtl
mov
arpl
push
cmc
mov
mov
adc
xor
incl
enter
enter
sub
jns
mov
stos
jns,pn
out
int3
mov
out
aas
xchg
and
sahf
jbe
push
mov
out
xchg
ret
stos
mov
aad
lds
das
daa
inc
imul
xchg
sbb
nop
push
call
jp
cmp
mov
lret
jb
mov
dec
or
in
jl
push
mov
or
mulb
sbbb
cltd
into
out
pop
in
idivl
jp
mov
lcall
into
mov
cltd
add
sub
out
mov
ret
mov
in
jbe
push
jns
imul
fbld
mov
in
pop
dec
adc
adc
divb
fs
push
in
lods
xor
pop
roll
pop
fisubs
mov
or
sahf
push
out
sub
cmp
std
maxps
imul
ret
mov
lahf
fnstcw
mov
mov
mov
aaa
call
lods
ficoml
jb
lods
xor
push
push
cmp
inc
xchg
add
mov
sub
clc
and
dec
call
fwait
pop
out
pushf
mov
xchg
in
push
out
inc
sarb
js
imul
mov
dec
xor
inc
std
inc
sub
push
push
push
les
and
insb
mov
out
std
adcb
add
mov
in
data16
mov
ret
xor
cs
cmp
in
imul
xchg
out
inc
test
movb
sbb
sti
dec
jmp
dec
xchg
and
or
orl
mov
pop
dec
in
data16
push
nop
cmpsb
cmpsb
in
xor
fwait
jecxz
push
loop
std
sub
and
jp
cmp
pop
into
ljmp
mov
mov
out
insb
test
repz
scas
cmpsl
je
jne
add
mov
lock
outsl
push
sub
add
and
and
cmp
dec
pop
test
adc
nop
out
mov
xor
outsl
mov
int3
in
fistpl
mov
mov
lods
leave
shlb
push
mov
std
leave
adc
pop
push
push
xlat
sbb
inc
cmp
enter
jle
out
mov
cwtl
add
jno
daa
pop
jp
out
cmp
leave
jo
aas
inc
lahf
fldl
cmp
jecxz
ja
and
or
es
rclb
push
iret
sub
jmp
add
mov
out
inc
imul
lock
inc
call
pop
test
or
lret
scas
mov
jle
xor
jnp
cwtl
pop
imul
add
push
push
sub
xor
jo
insl
int
imul
push
push
pop
jb
mov
pop
and
mov
std
adc
rcrb
hlt
sub
movsb
hlt
push
dec
cltd
nop
pop
add
mov
sbb
xor
cltd
lahf
pop
lods
lea
sub
cwtl
xchg
mov
outsl
test
rorl
call
jl
pushl
gs
sub
call
mov
les
jl
imul
lcall
xor
and
dec
cmpsl
adc
test
andb
pop
sti
lds
in
and
adc
stc
sti
shrb
loop
mov
pop
aam
pop
pop
movsb
mov
mov
cmp
loopne
xor
cmp
sbbb
scas
stc
push
out
fst
jl
pop
xchg
mov
cltd
movsb
push
lods
sbb
mov
adc
inc
add
notl
pop
push
and
fwait
sbb
sbb
lock
push
mov
and
push
les
adc
jb
inc
jae
jge
mov
fcmove
arpl
xor
shlb
add
jae
inc
outsb
mov
les
jnp
or
loop
mov
jne
lock
sbb
xchg
push
repz
fldt
rcll
outsb
xlat
daa
sub
das
and
mov
fwait
cmp
sti
jnp
stc
lcall
test
pop
sti
ror
mov
les
xchg
bts
je
or
jb
mov
les
mov
dec
sahf
daa
fidivrl
mov
ljmp
adc
pop
sbb
cmp
jmp
fldenv
pop
movsl
jle
sub
pop
negl
inc
dec
lods
mov
jno
mov
lcall
dec
test
dec
dec
inc
jl
xlat
xor
lods
lea
inc
dec
add
mov
pop
inc
insl
nop
inc
mov
mov
sti
mov
rcrl
test
xchg
mov
xor
scas
sub
repnz
in
pop
adc
test
jmp
std
sbb
inc
insb
sbb
cmpl
cmpsb
or
inc
fdivrs
or
jge
ss
jg
fsub
ljmp
pushf
ds
ficoms
pop
mul
pop
xor
sbb
in
push
and
cmpsl
push
inc
clc
adc
push
test
fs
cmp
mov
sti
lods
add
les
jle
add
push
cmp
push
adc
pushf
and
sti
sub
push
daa
cli
and
xor
insl
push
insb
nop
jle
jb
test
pop
mov
jo
lods
or
mov
add
cwtl
sbb
ret
fcmovu
mov
sbb
cmp
cltd
cmp
mov
notb
or
and
stos
inc
pusha
bound
mov
out
inc
movsl
jle
mov
xchg
popa
mov
into
lret
ror
push
cmp
mov
pop
int3
sub
negb
cmpsl
dec
iret
ja
shrl
ficoms
mov
dec
xchg
in
sbb
ficomps
hlt
xor
mov
inc
lcall
cmpsl
dec
cli
bound
lcall
cmp
mov
mov
sbb
popf
sub
pusha
ficoml
call
scas
aaa
xchg
jmp
lret
pushf
push
push
sub
mov
ljmp
xor
sbb
sbb
mov
adc
cwtl
out
scas
mov
fstl
faddl
stos
stos
les
pusha
mov
lds
ss
fwait
lds
stc
cmp
out
leave
pop
or
or
sarb
mov
inc
fsubrl
mov
jmp
pushf
xchg
imul
or
push
fnstenv
sub
inc
ja
bound
stc
mov
icebp
sbb
adc
dec
movswl
jle
xorb
cmp
sbb
jecxz
insl
jge
int3
fimull
sbb
xlat
scas
shrb
mov
sbb
push
mov
iret
adc
mov
jg
repnz
mov
dec
out
test
stc
mov
sub
leave
in
push
inc
or
loope
aad
fstl
movb
mov
dec
jno
mov
movsl
push
dec
jo
push
cli
icebp
fcomps
push
pop
cltd
push
sbb
add
adc
mov
lea
test
pop
jle
mov
and
std
mulb
or
mov
int3
andl
inc
rclb
shll
ja
ret
icebp
out
mov
testl
or
hlt
movsb
popa
or
inc
mov
out
or
into
jge
das
in
ret
and
or
rcll
movsb
sub
insb
scas
adc
add
ljmp
movsb
pop
cwtd
xchg
ds
data16
dec
daa
xchg
pop
inc
aad
cmp
stos
pop
pop
movsl
enter
jle
mov
pop
inc
xchg
pop
xchg
fcompl
xchg
sbb
ret
sti
xchg
push
ss
inc
mov
addr16
inc
xchg
iret
and
ljmp
jne
dec
push
add
push
test
aaa
mov
insb
mov
cmpsb
cmp
out
cmp
sbb
fbstp
call
or
and
mov
or
push
test
addr16
mov
lods
mov
mov
outsb
ffree
mov
pop
jecxz
xchg
pop
fistpll
push
into
dec
mov
and
cmc
ret
outsb
clc
push
mov
sbb
into
cld
cmpsl
ss
stos
pop
in
mov
stos
fists
arpl
mov
or
subb
je
pop
ljmp
mov
ficomps
inc
adc
or
filds
push
pop
insl
sbb
jae
push
mov
cmp
adc
or
dec
xchg
fwait
int3
sub
out
mov
cmpsl
adc
insl
xchg
test
pop
lahf
mov
fs
rcll
cmc
fsubp
ds
and
fs
sub
sbb
or
movsb
lock
mov
fisttpl
mov
push
xchg
mov
cmp
pop
sahf
adc
and
mov
sbb
subl
mov
dec
inc
in
fwait
or
push
and
and
xchg
ss
cmpsb
cltd
push
ja
std
push
jo
enter
lret
pop
call
sahf
lods
jbe
ret
fidivs
jo
jb
jo
sbb
mov
and
xchg
sub
cltd
es
xor
xchg
mulb
repz
cmpsb
in
repnz
mov
mov
sub
test
pop
xchg
dec
mov
jge
sub
xorl
jb
adc
bound
in
add
enter
rolb
aam
adc
popa
outsb
add
dec
push
xorb
bound
push
lahf
shr
gs
push
cwtl
subb
lret
push
push
cmp
popa
jns
or
xchg
rorb
popa
mov
xchg
and
fisttps
adc
push
add
js
test
adc
pop
mov
dec
lret
push
stos
mov
sub
cs
cmp
mov
add
test
out
xlat
sub
jno
test
leave
cs
inc
aas
in
cli
push
push
ret
lahf
pusha
dec
mov
xchg
inc
push
in
les
jnp
jle
xchg
inc
shlb
test
pop
cld
cli
dec
pop
mov
lret
mov
sar
cld
mov
mov
mov
fcmovb
pop
sti
dec
das
add
add
ret
push
outsl
xor
inc
out
push
icebp
sti
repnz
fisubl
in
data16
pop
rclb
sahf
sbb
mov
or
push
pop
insb
stos
cli
adc
ss
or
mov
sub
jns
sub
ret
sub
jae
push
add
cwtl
call
sarl
jp
out
inc
jnp
mov
iret
and
jbe
jbe
jne
push
inc
jmp
insb
cmp
clc
les
push
pandn
inc
out
sahf
push
dec
xchg
nop
add
popl
xor
mov
ret
insb
cltd
jmp
xchg
push
imul
cmp
jns
in
cmp
dec
movsb
add
adc
pop
sbb
ret
cmp
leave
fstps
or
and
fimull
ss
sub
xor
fimull
and
es
test
lret
inc
mov
push
pushf
cmpsb
dec
mov
jecxz
mov
inc
shrl
int
mov
ficomps
stos
cltd
mov
test
push
push
xchg
loop
xchg
das
test
fmuls
subl
test
nop
ja
in
call
and
xor
mov
mov
andb
imulb
pop
add
iret
cmpsl
std
nop
scas
sbb
xchg
sbb
roll
xor
fiadds
cmpsl
les
lcall
dec
xor
xor
mov
fucomp
add
enter
loopne
mov
mov
inc
out
add
mov
add
lcall
jb
sbb
push
or
outsl
das
test
and
pop
and
pop
cmp
push
mov
cli
xchg
sbbl
adc
insl
bound
push
jnp
aam
xchg
lretw
sub
in
scas
add
inc
or
arpl
lret
int3
mov
mulb
mov
lahf
lret
mov
or
lret
fisubrl
fucom
mov
pop
jo
xor
pusha
adc
std
outsl
andl
add
stos
sti
aas
pop
int
insb
or
call
lea
pop
and
mov
sub
push
xchg
mov
xchg
insl
lcall
outsb
mov
pop
adc
int3
loop
sarb
mov
stos
outsb
inc
roll
mov
ja
push
rorl
sbb
push
insb
xor
and
popa
adc
scas
mov
fs
in
ficomps
repz
xchg
jg
cmp
mov
or
mov
jne
fisubl
subl
jns
mov
stos
cmp
cltd
jns
xchg
cmp
cli
test
in
cmp
mov
ficomps
pop
aas
push
jae
and
sbb
out
xlat
cli
loopne
inc
out
sbb
fiaddl
insl
mov
cli
push
inc
lret
add
jmp
stos
or
xchg
gs
fistpll
xor
xchg
or
adcb
out
loop
jle
add
adc
dec
lret
mov
or
mov
cmpsb
mov
insl
cltd
test
xor
inc
push
jnp
xchg
call
add
xor
adc
imul
test
outsl
and
push
sbb
lock
add
pop
xor
iret
push
cmp
jg
cmp
cmp
add
sub
inc
and
ja
adc
jo
mov
dec
aas
and
fwait
iret
lret
mov
cmp
and
dec
pop
clc
call
les
stc
in
shll
sbb
sub
int
lods
xchg
mov
cmp
sub
adc
dec
pop
push
cmp
dec
or
sub
scas
push
pop
pop
ret
pop
push
stos
cmp
jns
test
jae
push
mov
dec
and
push
add
add
cld
ja
dec
jb
clc
daa
sbb
jl
inc
lock
mov
out
mov
psubsw
aas
std
lahf
push
or
push
add
test
js
dec
dec
inc
mov
cmp
je
mov
lods
push
jno
mov
push
es
push
mov
jmp
cmp
mov
loop
outsb
pop
push
and
jae
mov
es
mov
dec
cli
sahf
loope
ficoms
cmp
cmp
jb
push
test
mov
mov
lea
dec
cmpsb
aam
cmpsb
into
lods
inc
scas
int3
push
inc
push
sub
imul
sarl
pop
or
cmp
inc
inc
outsl
popf
fadd
xchg
xor
leave
mov
mov
test
cmpsb
into
ljmp
dec
xchg
jge
aad
cld
fmuls
mov
arpl
push
pop
and
sbb
iret
test
xor
arpl
or
test
push
sbb
loopne
sub
iret
or
movsb
and
ljmp
sbb
pusha
insl
sbb
js
dec
sub
mov
psrad
sub
outsb
jge
jp
sub
mov
jae
mov
ficoms
call
cmp
xlat
les
push
xchg
inc
jbe
inc
lods
mov
rorb
jae
mov
cmp
add
or
outsb
mov
cmp
fs
and
dec
orl
mov
xor
add
call
std
lahf
outsb
in
aam
dec
pop
push
jecxz
jne
dec
mov
cs
dec
out
xchg
mov
cmpsb
jo
mov
ret
cwtl
push
popa
test
jbe
fcmovbe
mov
ss
add
cmp
incb
fisttpl
clc
mov
dec
jnp
xchg
push
inc
sbb
inc
or
add
cmp
imul
add
pop
dec
cmpsb
out
es
push
leave
call
xchg
xor
call
xchg
loopne
push
sahf
and
int
push
in
clc
mov
test
lods
xchg
cmc
aad
imul
hlt
icebp
xor
push
mov
cmp
icebp
mov
xchg
test
shll
xor
jae
clc
xchg
fisubl
mov
into
jns
add
mov
cmp
jnp
jg
push
inc
insl
push
test
shlb
clc
ja
pop
xor
in
std
stos
fstpt
fsubs
mov
jg
xchg
stos
mov
imul
dec
fsubs
push
dec
sbb
mov
jne
xchg
sti
mov
icebp
cmp
jmp
jb
pop
gs
jecxz
mov
aas
dec
lods
or
push
cmc
sarl
pop
mov
fwait
cmp
test
pop
sub
cmp
add
mov
mov
arpl
sub
xor
pop
fisubs
jg
push
and
and
pop
cs
int3
and
sbb
scas
int3
pop
mov
popf
pusha
test
sahf
dec
repz
cmp
push
xchg
cmp
inc
pop
jecxz
cltd
push
sbb
mov
daa
pop
pop
push
mov
xlat
ljmp
mov
int3
push
adcb
daa
sti
pop
push
enter
jmp
rcr
xor
cmp
movsl
mov
inc
enter
push
out
sbb
mov
shll
cmp
add
ljmp
out
dec
data16
jno
loopne
popa
cld
sbb
addr16
repz
dec
inc
dec
pop
mov
xchg
jg
popa
lret
stos
mov
gs
in
add
mov
sti
enter
lea
add
popa
incb
aas
jg
mov
inc
fs
mov
pop
adc
sbb
ret
lock
xchg
fimull
add
or
roll
adc
and
lock
jb
cwtl
pop
jb
cmp
call
xor
mov
lds
sub
ja
lahf
dec
inc
cmc
dec
loope
xor
push
mov
pop
or
pop
or
js
push
lods
stc
dec
push
add
xor
pop
pop
xchg
mov
std
push
jge
lds
adc
jg
aam
inc
aaa
test
lock
inc
mov
push
lods
test
dec
xchg
faddp
xchg
pop
test
pop
xchg
arpl
xchg
inc
popa
cmp
ret
das
lahf
mov
or
jo
sbb
nop
pop
xchg
or
xchg
dec
sahf
mov
sub
lret
mov
xchg
repz
jmp
popa
mov
mov
and
xor
leave
xlat
sahf
lea
iret
add
mov
add
xchg
add
adc
jecxz
adc
mov
lods
xchg
inc
lahf
shrb
jl
dec
dec
loopw
jbe
sub
insb
add
rcr
outsl
cmp
cmp
in
fwait
and
adc
cmp
mov
mov
xor
xchg
push
pop
es
daa
dec
nop
popf
dec
push
test
pop
loopne
in
dec
outsl
dec
pop
jge
adc
jle
pop
shrl
sub
xor
call
roll
ret
push
push
dec
jle
or
jle
cs
sbb
jmp
mov
adc
dec
jl
xchg
loope
pop
xor
mov
cmp
cld
cwtl
stos
or
popa
pop
mov
decb
push
push
mov
stc
xor
test
or
fcomp
push
push
out
rolb
in
hlt
cwtl
das
hlt
inc
xchg
dec
aaa
lods
sahf
push
data16
pop
mov
scas
aad
lods
inc
jp
dec
xchg
lea
push
sbb
rcrb
pop
jne
cmc
push
out
repnz
out
call
lds
adc
pop
jnp
cmp
fwait
dec
sub
pop
cmp
cmpsl
push
jp
push
mov
mov
or
cmp
mov
cmp
mov
mov
cmp
mov
pushf
aad
std
add
lock
jne
push
mov
fldl
leave
adc
ret
jmp
lea
pushl
cmc
inc
shlb
inc
and
cmc
lods
adc
dec
pop
sbb
dec
xor
push
push
aas
outsb
loope
cli
mov
hlt
mov
cli
lahf
arpl
pop
insl
sbb
lcall
inc
inc
add
shl
aaa
fcomi
and
push
fsubrl
xchg
ret
ret
xor
sub
sti
aam
cmp
addb
int
das
mov
fisttpll
mov
or
movsb
aam
and
gs
mov
or
pusha
push
pop
dec
test
pop
sub
cmpsb
lea
andb
fcomps
into
adc
mov
ja
aam
mov
mov
ds
add
dec
push
dec
iret
clc
mov
jns
jae
loopne
mov
push
popf
mov
push
mov
mov
outsb
and
cmc
cmp
pop
jno
outsb
pop
pop
jb
pop
sarb
jns
pop
jp
pop
cld
ja
sarl
push
sub
pushf
dec
lret
xor
xor
sarb
shr
sbb
cmc
repz
adc
das
cmpb
sub
cmp
cwtl
loope
or
mov
push
lds
aad
push
aaa
in
stos
sbb
mov
jle
ss
aad
inc
fdiv
shl
sub
sbb
push
fndisi(8087
dec
pop
and
jb
sub
mov
icebp
mov
lea
pop
data16
jns
gs
fisubrs
and
adc
jo
cmp
loopne
sahf
aas
cmpsl
popa
mov
jmp
add
jmp
cmpsb
insl
test
lea
in
in
inc
lock
adc
push
cmpsb
addr16
xchg
popf
mov
adc
shrl
loopne
inc
push
scas
push
mov
sbb
pop
clc
adc
fsubrp
xor
xchg
fcom
loopne
sbb
xor
push
xor
in
xchg
lods
loope
mov
stos
bound
sarl
sbb
cs
jbe
lahf
adc
mulb
lret
lahf
push
div
in
hlt
pushf
cmp
loop
mov
xor
ja
xchg
and
xchg
gs
xor
push
adc
push
cmp
xor
test
cmpsl
movsl
into
push
mov
je
and
mov
add
pop
test
addr16
add
lock
cltd
test
xor
pop
push
scas
cmp
xor
dec
into
andl
ret
adc
push
inc
testl
aad
inc
push
daa
push
jl
hlt
ret
popf
push
sbb
rcll
mov
scas
xor
xor
xchg
adc
mov
adc
sbb
mov
adc
xchg
and
cltd
xor
lea
popw
xchg
or
sti
inc
cli
outsl
cmp
pop
lods
and
sub
mov
daa
shl
imul
push
js
xchg
ds
inc
xorl
std
lcall
mov
cmc
or
mov
mov
fnstsw
les
sbb
cwtl
in
mov
sbb
scas
sbb
popa
pop
insb
dec
pop
sahf
pop
das
int3
add
adc
jbe
xchg
inc
stos
sub
xchg
push
mov
int3
movsl
cmp
xchg
cmp
pop
pop
cmpsl
jp
popf
xchg
xchg
insl
or
jmp
mov
push
pop
push
int3
out
push
stc
adc
pop
test
aas
insb
lea
cmp
cmp
fcmovu
adc
or
lds
test
ja
fsubrl
dec
pop
roll
sub
adc
dec
into
pop
addr16
mov
test
cmpsb
and
lahf
mov
sub
xchg
test
jg
cs
jbe
add
js
fisubs
scas
lret
test
push
hlt
cmp
and
xchg
imull
xor
xchg
sub
bound
cmp
cmc
leave
dec
fmull
xchg
push
cmpsb
push
xchg
mov
stos
pop
push
daa
popa
push
dec
lcall
lret
lock
lea
je
pop
fisubrs
cmp
arpl
clc
cmp
inc
rolb
lds
aaa
int3
aas
dec
adc
test
les
jb
daa
cmp
test
push
fisubs
push
push
cld
sub
sbb
push
fisubl
fstl
outsb
sbb
sub
ss
push
out
int
xor
cmpsl
lret
cmp
clc
inc
or
or
scas
add
jl
add
xchg
les
mov
jmp
mov
and
jb
cmp
adc
xor
mov
adc
push
nop
mov
cltd
hlt
dec
xor
mov
xlat
int3
imul
in
stc
jb
les
ror
cmpsl
jmp
add
mov
xchg
or
xchg
test
or
lret
hlt
dec
mov
lods
js
push
lret
int3
and
nop
fwait
lock
cs
lretw
mov
or
mov
ja
sub
adc
xchg
cs
das
and
sbb
xchg
lock
movsb
jbe
dec
jmp
pop
fdivrs
mov
repnz
adc
test
ficoml
das
pop
sub
sahf
jae
adc
cmp
mov
mulb
movsl
cmc
nop
jo
sbb
push
jmp
mov
lcall
jb
leave
popa
lret
or
mov
xchg
loope
cmp
or
or
ud0
fsubl
je
cmp
daa
and
pop
ds
fs
dec
pop
mov
dec
push
mov
inc
imul
xlat
andl
int
xor
lret
or
gs
or
pop
pushf
xchg
dec
repz
add
loope
into
inc
gs
loopne
sub
dec
test
push
insl
movsl
ljmp
jb
sbb
mov
movsl
cmp
dec
push
pop
xchg
mov
push
sub
and
dec
sti
lods
out
or
push
cli
mov
clc
ds
sub
in
cs
fs
cmp
jbe
mov
data16
push
lahf
xor
cmp
mov
out
aaa
ss
xor
xchg
adc
in
push
and
jmp
shlb
fwait
pop
fldenv
clc
nop
lods
and
push
loop
cmp
pop
mov
jno
pop
stc
ffree
addr16
pop
jb
ja
push
mov
std
adc
jnp,pn
cli
cmp
fwait
imul
jl
mull
jg
dec
les
daa
push
pushf
lahf
lret
jbe
jle
push
ror
call
jbe
mov
or
xchg
outsb
inc
movzbl
decb
jl
jae
clc
repz
movsb
cmpsl
mov
pop
xor
sbb
jecxz
lcall
adc
add
lret
adc
dec
inc
sti
lods
jmp
lcall
cmp
and
inc
in
push
test
push
pop
scas
lock
adc
int
pop
or
movsb
rcrl
les
aas
sti
jp
mov
je
jno
insb
mov
int3
popa
ds
lock
dec
pop
xchg
pop
mov
pop
loope
loopne
insl
mov
lea
push
jae
mov
pop
cmpsl
mov
mov
iret
gs
inc
pop
cltd
jmp
int
cmpsl
scas
popa
repnz
push
mov
pop
mov
and
leave
push
popa
mov
jmp
out
out
mov
std
jae
cmpsl
cmp
and
data16
mov
push
or
and
bound
xlat
clc
mov
dec
jo
fdivrs
loopne
xor
mov
push
das
cmpsb
stos
ja
lahf
ljmp
pop
lds
in
lea
arpl
cmp
xlat
cmp
out
out
daa
inc
xchg
roll
mov
data16
dec
adc
adc
fwait
repnz
jbe
xorl
mov
insl
sbb
cld
mov
push
shll
lds
xchg
push
mov
das
cmc
lret
sbb
add
sbb
xor
xorb
dec
jne
pushf
mov
pushl
adc
nop
pop
loopne
stos
add
aad
jnp
aad
test
and
or
ja
pushf
jne
out
jb
jle
mov
inc
mov
pop
nop
cmp
ds
clc
mov
test
ret
push
imul
shlw
in
fwait
add
imul
mov
xchg
icebp
fst
ja
or
leave
ret
iret
in
test
mov
sti
mov
jns
jae
rcr
ljmp
mov
leave
inc
jecxz
sbb
mov
jns
jnp
inc
dec
in
fistl
or
aaa
test
inc
adcl
ret
pop
adc
ss
pushf
out
outsb
or
xchg
enter
xchg
jns
jmp
stc
aam
mov
add
js
pusha
inc
mov
or
sub
decb
mov
xchg
mov
loopne
movsl
lret
cmp
inc
jo
mov
mov
pop
repz
movsl
leave
inc
push
loopne
jae
repnz
rorl
sub
lcall
lock
push
clc
hlt
dec
div
mov
pop
mov
iret
or
push
leave
lret
icebp
test
les
into
scas
fidivl
in
mov
scas
mov
popa
mov
cmp
xor
mov
fcoms
daa
les
fs
repnz
or
int3
outsb
adc
inc
negb
xchg
test
rcrl
test
shrb
leave
leave
stc
imul
imul
leave
hlt
mov
dec
cltd
sti
xor
and
leave
xchg
xchg
jns
inc
shl
push
inc
ret
imul
sahf
and
outsb
lock
cmp
pop
dec
inc
loope
andl
mov
sahf
add
js
flds
les
push
add
sbb
jne
mov
roll
int
jp
mov
movsl
push
mov
push
cmp
lret
add
sarb
out
dec
bnd
fidivs
mulb
dec
test
pop
lret
xchg
es
fbstp
push
pushf
ds
dec
mov
jl
adc
jle
add
sub
int
out
pushf
mulb
mov
pop
enter
iret
cmpsb
addb
jns
pop
test
mov
and
popa
clc
inc
scas
push
jbe
xor
cmp
cmpsb
pop
sar
rorb
test
jle
inc
mov
test
adc
cli
call
add
mov
xchg
jecxz
sub
gs
movsb
inc
sahf
rcll
repnz
scas
popf
push
clc
push
jns
je
jbe
push
hlt
lret
das
dec
dec
insb
iret
imul
xchg
sub
loop,pn
sub
sbb
mov
xor
jns
or
arpl
lock
test
dec
aaa
dec
cs
push
xor
inc
hlt
loop
mov
add
iret
daa
out
mov
stos
add
fnstcw
and
push
outsb
xchg
dec
jno
push
cwtl
addr16
push
movsb
data16
dec
sub
inc
mov
ds
out
arpl
xchg
xchg
sbb
pop
mov
mov
mov
in
mov
mov
push
mov
out
in
adc
xchg
in
nop
jo
push
sahf
push
dec
ja
test
xchg
push
mov
lds
push
xchg
aam
dec
jg
or
call
and
in
dec
lock
or
sub
mov
jle
lahf
repnz
push
adc
lret
or
xchg
jns
mov
pop
dec
dec
ret
out
xor
adc
inc
insl
sub
imul
popa
inc
int
lea
lcall
scas
inc
ljmp
push
data16
xchg
mov
push
in
shr
repnz
adc
sub
lret
std
inc
inc
cwtl
loopne
int
divb
inc
pop
jp
push
push
in
sahf
fadds
xchg
scas
aas
push
test
ret
decb
inc
lods
add
add
jnp
jmp
mov
xchg
pushf
aaa
and
sbb
lds
aas
outsb
cwtl
lret
cmp
xor
adc
mov
loope
int
and
mov
and
sub
lahf
pushf
ret
out
push
xchg
aad
in
pop
aad
es
idiv
out
stos
cmpsl
addb
addr16
imul
loopne
inc
mov
rcrl
gs
pop
popf
lea
push
sbb
pusha
lods
sahf
cmpsb
dec
push
dec
adc
stc
movsl
fsubl
add
mov
cltd
push
xchg
scas
adc
push
mov
mov
and
or
cmpl
inc
aaa
sub
movsl
pushf
adcb
adc
dec
dec
dec
mov
sbb
ret
pusha
negb
and
repnz
daa
inc
popa
aaa
insl
inc
adc
dec
das
or
pop
or
jnp
push
xchg
and
xchg
dec
mov
shl
xchg
lods
js
or
pushf
jle
xlat
jb
rcr
lock
push
jno
mov
lock
cli
movsl
adc
fdivrl
fnstsw
xor
xor
mov
dec
pop
push
inc
int3
push
mov
jae
pop
or
mov
mulb
clc
mov
inc
pop
cld
bound
pop
pop
push
aaa
sub
lock
xchg
mov
mov
mov
jmp
loop
cltd
xor
ljmp
shrd
andl
in
lret
inc
stos
jne
inc
xor
push
pop
cs
xor
ja
add
fiaddl
lahf
push
xchg
mov
stos
mov
pushf
fs
xor
clc
push
push
call
xor
pop
outsl
cs
aad
add
pop
pop
mov
add
push
cli
xchg
xchg
int
cli
pop
adc
rcll
jmp
jae
jge
fyl2xp1
into
imull
add
sub
scas
shr
sub
xchg
fnsave
test
or
enter
inc
push
outsl
fadds
sub
xchg
divl
hlt
mov
js
insb
push
pop
push
adc
adc
orl
fildll
stc
pop
adc
cmp
sub
push
filds
cmp
inc
jmp
sub
inc
cmp
imull
pop
cmp
sahf
push
mov
addl
push
mov
mov
dec
addr16
cli
push
fs
xchg
jnp
jmp
ss
fisubs
push
sub
add
and
push
pop
into
ja
jg
call
mov
mov
scas
cmpsw
push
int
mov
sub
lea
sbb
ret
mov
inc
imul
lods
insb
or
jno
dec
sbb
fneni(8087
sbb
outsb
push
dec
jb
leave
mov
and
aas
cld
or
scas
jo
lret
aas
insb
add
inc
mov
mov
cwtl
push
mov
rolb
aaa
adc
lret
sub
push
fistl
movsl
into
mov
fsts
cmpsl
lock
out
fstpl
jae
daa
or
rcrl
pop
and
lock
dec
into
mov
repnz
fs
pushf
cld
push
int
mov
adc
xor
je
es
in
into
test
fbld
sub
out
pop
inc
jno
mov
and
popa
std
idiv
push
adc
insb
or
mov
jmp
or
loop
outsb
xor
xor
sbbb
js
rcl
sub
cmp
fcomps
and
shl
dec
mov
mov
mov
into
shl
add
aam
aaa
or
sbb
add
and
popa
jmp
cmp
addr16
xor
jbe
test
ret
out
xchg
shlb
mov
inc
test
sbb
pop
inc
cmp
js
push
xor
xor
loop
dec
fidivs
mov
mov
aad
stc
jecxz
into
and
lock
mov
fisubs
stc
xchg
mov
cmp
je
mov
xchg
adc
mov
or
aaa
popa
xor
mov
and
ja
jecxz
test
cwtl
jno
mov
cmp
int3
sub
push
sub
ret
std
xor
add
add
icebp
push
movsl
nop
and
add
xchg
lret
bound
in
mov
ret
mov
jmp
add
js
or
enter
imul
or
rcrb
jo
imul
sahf
icebp
nop
outsb
xchg
aam
push
pop
std
cltd
mov
int
orl
push
inc
adc
lahf
mov
das
movsl
ja
and
xchg
sbb
rorb
cmp
int
sbb
xor
xor
jb
cmpsl
ds
popa
hlt
and
xor
cltd
jl
pop
testb
pop
xor
add
mov
stos
clc
lods
or
xchg
push
or
addr16
inc
jge
or
xchg
mov
xchg
inc
cmp
adc
mov
in
sub
pop
mov
in
movl
push
test
das
loopne
cmpsb
mov
or
mov
and
sahf
std
stos
pop
pop
shr
jmp
xchg
popf
mov
xchg
mov
inc
dec
in
scas
pop
xor
fisttps
mov
fs
cmp
xor
repnz
out
out
movsl
pushf
mov
adc
push
scas
call
cmpb
cs
repz
ds
jl
and
int3
mov
dec
xor
inc
les
divb
clc
push
mov
xor
fs
inc
cmpb
jo
loopne
dec
and
cwtl
out
ret
add
jae
sahf
in
sub
mul
ljmp
jnp
sub
dec
imul
or
bound
inc
pop
insb
stos
jmp
fmull
imul
fsts
fisttps
xchg
pop
mov
push
or
fsubrp
fiadds
sahf
adc
shlb
imul
cmc
and
mov
sti
test
adc
xchg
outsl
and
dec
loopne
pop
sub
jp
xor
push
mov
aaa
mov
cmp
lret
or
jne
pop
and
adc
pop
nop
lret
mov
hlt
inc
loope
inc
aas
cli
lret
insb
test
mov
mov
xor
add
rcr
ret
fsubrl
cmpsb
pushf
jg
push
les
repnz
loopne
mov
in
shl
and
fwait
and
dec
out
incl
shrb
leave
aaa
push
pop
pusha
jle
aaa
inc
fdivr
mulps
aaa
lret
in
clc
addb
push
iret
jo
sub
test
inc
push
aas
in
aam
adc
loope
sub
add
repz
cmp
pop
mov
shll
xchg
push
cmc
aaa
adc
lods
fwait
ss
add
stc
les
scas
adc
sbb
cld
adc
adc
rol
dec
mov
lret
xor
push
imul
xor
mov
les
lods
repz
orl
ja
das
sti
xlat
dec
cmp
mov
lahf
scas
fldt
dec
inc
and
fbstp
add
adc
adc
dec
mov
hlt
lret
xchg
int3
and
and
pop
mov
xchg
into
shr
mov
pop
shll
xchg
pop
push
inc
mov
pusha
sarb
mov
push
xchg
fisubl
push
imul
xor
fildll
aad
sahf
popa
jmp
xor
dec
testl
mov
or
sub
stos
incb
inc
pop
jae
mov
dec
imulb
leave
mov
icebp
cmp
xor
mov
insb
daa
arpl
fimuls
fsubs
jmp
cld
shll
mov
xchg
adc
pop
nop
bt
shl
mov
jg
iret
lahf
mov
inc
and
fdiv
pushf
pop
mov
lret
jmp
add
lcall
adcb
xlat
mov
push
jmp
sbb
loopne
ficompl
inc
cld
or
xchg
inc
divb
xchg
insb
fucomi
jl,pn
sbb
popa
push
dec
push
in
icebp
stos
leave
cli
xlat
lods
arpl
ss
rorb
mov
inc
xchg
add
lea
push
xchg
scas
lock
push
and
dec
jmp
addr16
xchg
xor
sub
dec
pushf
mov
in
pop
pop
jp
or
cmp
lcall
cld
daa
pop
jnp
push
test
fcompl
mov
ret
pop
mov
xor
pop
mov
push
xor
mov
addr16
fdivs
loopne
sahf
jns
testb
pushf
das
adc
xlat
cltd
nop
andl
xchg
imul
mov
data16
push
dec
call
in
and
xor
pop
dec
scas
or
test
sarb
sbb
call
sbb
dec
nop
outsl
sub
adc
jns
outsb
dec
dec
test
push
mov
mov
mov
mov
push
xor
test
jnp
push
je
cmp
pop
mov
pusha
imul
test
cmc
sbb
lret
dec
sub
into
shl
pop
sub
sbb
jmp
imul
daa
mov
fistps
dec
push
add
cwtl
aad
cmp
pusha
jl
stos
xchg
iret
stos
add
jo
jb
gs
push
xchg
inc
sub
xchg
sbb
mov
or
xor
mov
fmulp
sbb
scas
add
loopne
pop
jnp
inc
mov
pusha
xor
add
xchg
jle
and
and
lock
rclb
inc
in
adc
ficoml
mov
push
push
cmp
jl
cmpsb
pushf
out
jae
pop
pop
xor
cmp
hlt
in
addb
mov
jp
pop
mov
xchg
mov
mov
dec
cmp
cmp
ds
add
mov
dec
mov
dec
addr16
idivl
jbe
shr
and
mov
and
decb
pop
out
mul
sti
mov
jg
mov
or
sub
inc
sbb
iret
lods
popa
and
js
xchg
mov
or
mov
pop
mov
rcl
fcoms
xor
push
out
cmp
loop
xchg
outsl
xchg
inc
outsb
lods
daa
movsb
iret
mov
daa
cmp
insb
xchg
or
stos
jbe
cmp
xchg
ja
ds
hlt
lods
js
andb
push
shl
xchg
xchg
adc
sbb
lahf
data16
mov
loope
negb
sbb
les
stc
inc
mov
mov
mov
xchg
js
leave
aad
hlt
pop
push
aaa
daa
mov
ret
cmpsl
or
xor
mov
adc
fisubrl
or
lcall
mov
xchg
add
repnz
popf
add
lods
mov
insl
mov
mov
lods
jp
lahf
sarb
and
cs
fists
pop
pop
xchg
mov
mov
sarb
push
repnz
xor
fucomi
stos
mov
sbb
insl
mov
mov
jg
adcb
pop
mov
aam
scas
pop
pop
loopne
xlat
outsb
mov
scas
mov
fildl
add
insl
pop
test
sbb
jnp
nop
lock
and
jb
lock
sbb
addr16
mov
mov
xchg
pop
je
sbb
mov
inc
jle
fstl
scas
ficoml
out
inc
and
xor
imul
and
sbb
adc
xchg
push
mov
imul
outsl
push
pop
dec
jge
or
dec
jae
mov
xchg
movsl
push
add
or
xlat
xchg
repnz
adc
xor
ret
int3
movsb
call
jbe,pn
mov
andb
mov
add
inc
dec
js
mov
add
scas
push
push
bound
lcall
dec
stc
pop
mov
in
mov
push
push
mov
aad
and
adc
cmp
xor
aad
ds
inc
push
movb
push
mov
dec
insb
mov
jns
outsl
mov
add
mov
aas
mov
adcb
ds
int
mov
push
xchg
outsl
pop
outsb
faddl
pop
sub
push
pop
xchg
loop
fwait
pop
in
pop
mov
mov
xor
bound
push
sbb
int
sarl
repnz
pusha
test
or
int
cld
faddl
sbb
push
xchg
cmp
vunpcklps
push
rorl
pop
adc
add
mulb
pop
into
or
test
cmp
push
xchg
jno
mov
stos
cwtl
out
add
adc
out
jb
add
lods
sub
leave
cltd
data16
icebp
or
xor
cmc
loope
mov
lods
imul
push
movsb
sarb
push
pop
sbb
daa
push
push
push
fcoml
scas
repnz
aad
popa
addr16
sbb
js
lahf
sarl
cmpsl
jmp
gs
or
mov
pusha
ficompl
xchg
sub
sbb
outsb
cmp
sub
sbb
rolb
push
jecxz
push
sbbb
pop
sbb
decl
dec
xchg
pop
xchg
hlt
pop
jecxz
lcall
and
xor
inc
fbstp
add
pop
xchg
andb
lret
ret
ds
test
test
aam
repnz
cmpl
inc
insl
sarl
pushf
idiv
shll
jl
inc
setnp
sub
xchg
mov
pop
mov
sub
mov
adc
dec
push
sub
add
gs
mov
pop
sub
out
test
dec
jmp
das
sahf
sub
iret
mov
sbb
mov
xor
dec
dec
popf
and
sbb
pop
fsubs
dec
out
enter
andl
stos
mov
fldt
sbb
add
mov
sub
add
cli
add
sbb
popa
add
out
push
sub
sub
js
sbb
es
sub
clc
mov
xchg
scas
jno
popf
ds
mov
dec
cmp
stos
mov
adc
sub
cld
nop
push
repz
cwtl
mov
lds
add
icebp
inc
push
pushf
mov
arpl
dec
mov
dec
bound
shrb
into
or
push
cld
mov
cmp
psrlq
into
addr16
sbb
mov
push
or
fwait
mov
out
jb
enter
cli
rcrl
in
das
sub
dec
jecxz
mov
sbb
xchg
xchg
pushf
xchg
cmp
sahf
ds
shlb
bswap
add
mov
xchg
sbb
lahf
xor
imul
rcl
sbb
pop
xor
inc
inc
dec
cwtl
or
enter
sbb
cld
cmpsl
out
push
iret
in
pop
insl
insb
pop
jl
jb
xchg
push
addb
ds
jae
clc
mov
inc
push
add
rcrb
rolb
push
sub
sub
push
jge
pushl
shll
mov
pop
mov
pop
rclb
xchg
out
mov
add
xor
add
negb
xchg
sbb
xchg
out
call
cs
repnz
jmp
xchg
mov
mov
cltd
pop
adc
popf
popf
mov
push
scas
fiaddl
push
mov
lahf
mov
xchg
pop
mov
adc
loope
loope
inc
mov
dec
xlat
scas
or
fldcw
incl
repnz
inc
add
add
or
pop
pop
cmp
imul
pop
jg
enter
mov
mov
stos
xchg
adcl
lods
inc
inc
rorl
es
add
test
sbb
fsts
outsb
popf
cmp
in
cmc
mov
xchg
cmp
mov
add
dec
push
ljmp
dec
push
daa
sahf
pusha
lret
ret
pop
jl
xchg
in
add
ror
arpl
test
mov
outsb
stos
imul
inc
andl
ss
ficoml
xchg
addr16
leave
and
mov
adc
mov
mov
adc
out
insl
popa
inc
add
out
xor
rcrb
and
and
ficompl
in
and
adcb
push
arpl
insb
stc
lock
fldt
sbbb
push
test
jne
mov
cli
es
mov
and
mov
movsl
popa
add
lret
xor
in
in
imul
cld
out
push
imul
outsl
insb
rorl
jge
cmc
in
cmp
and
in
lahf
or
and
fsubl
mov
imul
and
repnz
jae
dec
dec
test
or
inc
stc
sub
shlb
mov
out
sub
out
aad
mov
cmp
push
or
dec
lret
inc
mov
pop
jmp
cltd
insb
dec
jbe
faddp
sub
pop
pusha
in
dec
mov
adcl
mov
adc
inc
dec
mov
loopne
sbb
pusha
jne
jge
mov
mov
mov
bound
iret
mov
outsl
xchg
jbe
mov
mov
ret
xchg
int3
ret
enter
sub
and
inc
enter
jae
int
push
add
adc
xor
sbb
loop
push
xor
mov
jle
xorl
and
pop
mov
add
shr
lret
cwtl
cmp
xchg
rorl
mov
dec
jecxz
adcb
pop
es
ficoml
test
cld
xor
std
int
scas
and
and
shr
fs
sub
jae
mov
sub
out
mov
in
xor
sbb
xchg
subb
rorb
pusha
jle
inc
cltd
nop
mov
cmc
and
in
mov
cmp
push
adc
outsb
cmp
fbld
lods
inc
pop
cmp
add
cld
push
aam
mov
sub
xchg
mov
push
xadd
mov
test
cli
pop
push
js
mov
rorl
aaa
jle
sbb
or
je
lret
es
cmpsb
mov
pop
shlb
push
xchg
dec
sub
push
sub
je
call
jb
imul
xchg
pop
push
popa
pop
jmp
data16
dec
jle
adcb
pushf
ret
inc
mov
mov
pushf
mov
mov
push
nop
xchg
adc
imul
inc
push
addr16
sbb
popf
out
lods
push
mul
lock
jb
xor
inc
insl
out
pushf
sbb
imul
xchg
shlb
xchg
shrb
pop
insb
aam
js
mov
inc
pop
cmp
inc
cmp
push
pop
incb
int3
xchg
cmp
ljmp
and
add
and
mov
mov
movsb
sarl
test
mov
mov
or
test
inc
std
mov
mov
in
jne
pop
shlb
idivb
out
cld
rorb
aaa
or
stc
xor
hlt
popf
sbb
filds
mov
inc
subb
jno
xor
out
call
cmp
sub
movsb
data16
mov
cmp
push
and
and
and
dec
int
sbbw
je
arpl
inc
pop
sti
jns
dec
imul
jbe
inc
sbb
lods
repz
out
xchg
sbb
js
cmp
inc
sbb
cltd
sbb
fistpl
test
cmp
xor
ret
xchg
add
add
dec
jae
push
push
sti
mov
jp
mov
add
xchg
into
mov
mov
sub
js
mov
in
inc
std
pop
push
add
arpl
insb
mov
adc
sub
popf
daa
into
imul
xor
mov
xchg
xor
imull
js
add
jno
xchg
sbbl
push
aad
movsl
and
test
inc
out
out
lds
not
das
out
loope
imul
cmpsb
xchg
cmp
adc
add
sbb
mov
push
push
mov
xchg
mov
insl
cmc
sub
leave
rorl
loop
loop
xchg
push
xor
shlb
ret
pop
ret
and
lcall
pusha
in
push
bswap
mov
and
popa
enter
in
cmp
and
dec
jmp
aas
sahf
insl
aas
lea
fstl
int3
jb
test
data16
iret
mov
test
inc
and
xchg
pop
faddp
outsl
divl
dec
dec
or
push
xchg
jbe
adc
or
push
pusha
mov
enter
inc
push
pop
pop
xchg
pop
adc
roll
cmp
sbb
push
xor
iret
ljmp
out
aas
push
rorb
mov
fdivr
inc
in
shrb
pop
lea
or
cmp
stc
jb
pop
adc
sbbb
in
insb
and
or
out
dec
sbb
or
xchg
stos
push
push
mov
cmp
mov
aad
push
and
repnz
fmulp
adc
mov
out
mov
pop
ret
out
popa
in
inc
or
jl
sub
sub
mov
mov
or
nop
popf
dec
xchg
pop
cmp
mov
xchg
xor
sub
jbe
add
mov
stos
sub
dec
in
mov
jp
imul
hlt
xchg
data16
fldenv
inc
ljmp
das
lret
push
pop
mov
jb
jmp
xlat
scas
inc
jmp
orl
cmp
loopne
leave
lods
push
cmp
int
xor
jbe
mov
js,pt
aam
loopne
adc
lcall
popf
adc
mov
cld
mov
sub
lret
push
rcll
xlat
jg
mov
aad
xor
dec
fstp
xor
shl
cmp
add
mov
cmp
cmp
pop
inc
cli
ss
mov
jp
lock
jg
pop
pop
or
pop
push
add
cmpsb
push
leave
rcrl
std
mov
sbb
push
out
mov
jmp
cli
icebp
add
aad
mov
xor
inc
pop
test
loope
js
adc
sub
mov
xchg
xchg
xor
sbb
mov
or
lcall
mov
in
lods
pushf
fbld
lret
test
mov
mov
adc
fists
inc
icebp
addb
jle
mov
in
pushf
out
push
push
shrb
jnp
push
sbb
stc
sbb
sbb
sbb
dec
test
adc
adc
sbb
test
imul
pop
and
sbb
adc
sarl
mov
sbbl
arpl
inc
mov
jno
mov
stc
lods
std
xchg
pop
inc
pop
sub
into
add
mov
push
jb
adc
inc
adc
lods
ljmp
and
dec
jge
xchg
outsl
adc
mov
pop
mov
push
mov
scas
mov
fisttpl
sti
popa
int3
lods
xlat
pop
push
sbb
cmp
lcall
xchg
imul
cmp
mov
ret
nop
sysexit
mov
fsubs
jecxz
ret
loopne
sbb
inc
or
xchg
push
cmp
and
bound
cmp
pop
dec
aam
test
inc
jmp
mov
pop
icebp
pop
cs
stos
js
and
out
outsb
ja
je
xchg
test
jbe
mov
aam
ljmp
push
ss
inc
out
push
mov
sub
sub
fcmovnb
pop
fildl
and
sbb
push
ds
jae
push
pop
cmpsb
loope
xchg
xor
pop
sbb
mov
js
fldl
fstpl
ljmp
add
jne
bound
fwait
loope
and
daa
inc
inc
jno
data16
mov
insl
dec
js
js
iret
leave
insb
mov
xchg
mov
aad
push
sbb
mov
fwait
mov
dec
mov
neg
jb
push
or
adc
adc
outsl
sub
stc
push
mov
pop
les
xchg
ja
mov
test
pop
fisubs
inc
lock
iret
lea
lea
sti
jnp
in
pushf
or
pop
cmp
xor
xchg
gs
ret
in
mov
mov
push
dec
inc
jl
arpl
mov
and
push
lret
outsb
adc
dec
je
shrb
movsl
adc
and
dec
movsb
dec
add
cmp
and
repnz
aad
das
push
mov
inc
push
bound
dec
bound
in
or
arpl
loope
adc
fiaddl
insl
js
pop
cmp
sbb
push
daa
sub
inc
xchg
hlt
mov
sub
fmull
lret
mov
mov
adc
cmp
cld
fiadds
sub
test
cs
add
xchg
sbb
ljmp
jno
subb
mov
clc
mov
cmp
pushf
dec
fdiv
in
lods
push
and
dec
adc
pop
inc
inc
mov
sub
mov
imul
bound
pop
add
mov
cmp
push
lea
mov
push
shrl
jg
push
jmp
and
in
ss
stos
cmpsb
incb
fcomi
dec
or
outsb
cs
add
jle
pop
push
push
sbb
dec
push
pop
cli
mov
pop
int3
pop
cmpsb
aam
push
add
push
sbb
xor
adc
fwait
out
xchg
or
test
jl
inc
stos
jl
mov
mov
xchg
lock
cmp
js
push
jle
cmpsl
sbb
call
and
xchg
inc
mov
daa
push
jno
bound
jb
das
dec
mov
mov
call
xchg
cmp
cwtl
out
xchg
fwait
adc
jo
and
cmp
stos
in
mov
jecxz
outsb
push
mov
lret
inc
stos
or
int
add
and
lea
imul
sub
hlt
jo
out
xorl
push
scas
cmp
lods
lea
mov
scas
sbb
js
incl
fisubrs
inc
push
ror
pop
loop
dec
jo
add
xchg
push
xchg
pop
insl
out
addr16
xchg
pop
xor
mov
repz
push
push
fwait
xor
jg
loope
push
movsb
adc
xor
aaa
jae
outsb
dec
and
add
je
inc
aad
xchg
add
movsb
xor
mov
data16
outsl
into
jl
pusha
shlb
data16
and
inc
mov
out
push
or
jecxz
xor
cmp
and
push
mov
pop
js
or
xchg
jns
sbb
notb
jae
push
cmpsb
insb
mov
frstor
js
add
imul
dec
sub
xchg
mov
add
outsl
mov
repnz
xor
aaa
or
or
add
outsb
rclb
xor
jp
sti
mov
jns
cmpsl
clc
mov
dec
jmp
add
lods
inc
pop
imul
jnp
push
sub
addr16
jo
dec
stos
mov
icebp
loopne
sarb
jl
scas
loope
movb
sub
into
adc
sti
in
or
pop
jmp
lret
mov
inc
mov
sbb
dec
popf
xchg
mov
aam
ret
mov
mov
aam
loope
aas
cmp
cmp
in
scas
jmp
test
dec
xor
movsb
sub
xor
cmp
jae
and
inc
pop
cwtl
pop
stos
or
xor
insb
cmp
movsl
popa
jne
aas
cmp
inc
mov
push
push
xchg
jmp
sub
inc
cs
mov
dec
mov
adc
push
hlt
add
push
out
sub
jge
xor
fwait
or
jb
mov
or
xor
push
mov
pop
dec
pop
sbb
frstor
cmp
mov
jne
dec
aad
and
jg
xor
push
pop
ret
ret
lcall
mov
cmp
jge
lea
xor
mov
add
cmpl
sub
shr
add
sti
push
inc
xchg
xchg
mov
mov
out
jnp
test
sti
pop
push
push
adc
outsb
mov
mov
lea
decb
and
dec
inc
in
cmp
cmp
subb
sbb
cmpsl
adc
repnz
cmp
cwtl
and
adc
xlat
and
jno
fistpll
push
fstpl
jo
in
fld
in
inc
arpl
cmp
shll
pop
mov
or
pop
xchg
jmp
fwait
push
add
jle
mov
adc
push
sbb
in
sub
dec
outsb
pop
xchg
clc
adc
inc
mov
shl
js
add
insb
mov
cwtl
xorl
pop
addr16
imul
arpl
xchg
arpl
dec
mov
xchg
jmp
inc
add
cmp
mov
inc
data16
cmp
cmp
ficoms
ret
imul
dec
or
jbe
mov
cld
mov
push
or
xor
cmp
lret
cmp
addb
repz
cmp
cmpsb
push
or
sbb
xor
mov
dec
cmp
jmp
sti
sar
add
leave
mov
nop
sahf
fdivr
sar
pop
or
lods
imul
fwait
ss
bound
call
xor
stc
cmp
mov
cld
jp
inc
in
jl
push
mov
lods
loop
push
sbb
xchg
mov
and
jge
rcll
clc
xchg
clc
cmp
out
mov
pushl
adc
jno
xchg
add
xchg
inc
mov
lret
cmpsb
and
add
fsubrs
dec
xchg
fisubl
sbb
repnz
test
arpl
mov
pop
cmpsl
mov
mov
sbb
jmp
adc
lret
pop
mov
in
nop
lds
push
jne
xchg
ror
inc
add
cmp
je
mov
test
clc
adc
dec
ljmp
mov
xor
je
daa
dec
sbb
pop
in
inc
inc
sub
cli
test
insl
les
pop
push
imul
inc
cmp
loopne
mov
icebp
sbb
or
repz
add
mov
out
push
out
dec
fidivs
bound
fists
push
idivb
adc
test
ret
cli
ret
mov
ffree
xor
xchg
push
sbb
js
pop
mov
mov
repz
mov
adc
and
pop
pop
ss
pop
mov
push
and
sub
dec
pmaxsw
pop
xlat
xchg
mov
adc
out
mov
xchg
jns
cld
dec
xchg
sub
sbb
daa
ret
lea
clc
push
mov
adc
mov
dec
leave
pop
mov
insb
lods
fiadds
iret
popf
add
and
out
dec
sbb
cmp
shll
call
inc
pop
repnz
fistl
and
push
sub
repnz
ret
js
push
hlt
push
xchg
xchg
mov
cmp
push
mov
stos
in
or
jg
mov
aad
adc
or
addb
xchg
xor
xchg
jp
cmpsl
xchg
jo
jae
push
pop
jne
mov
stc
les
cmp
mov
int
or
or
cmpsb
ret
in
xchg
scas
mov
cs
or
out
ret
cld
pop
imul
dec
adc
or
ljmp
jno
dec
popa
mov
filds
fwait
push
jbe
das
arpl
adc
xchg
lea
xchg
enter
cli
mov
cmp
mov
popl
arpl
rcr
or
xchg
adc
test
pop
cltd
sub
outsl
out
divb
gs
sub
jnp
in
xor
xchg
adc
fwait
loop
xchg
jae
add
bound
cmp
and
jnp
xor
fwait
adc
sub
push
or
jl
cmpsl
bnd
cmp
xor
sub
inc
jns
jge
inc
loop
sti
adc
in
cwtl
ret
and
lods
test
out
jne
adc
and
push
movsb
inc
cli
call
adc
xchg
fstp
xchg
fists
inc
aam
movsl
pop
pop
loop
aaa
shlb
repnz
add
cmp
cmp
or
daa
push
cmp
or
js
cmp
mov
sbb
mov
push
ret
sti
cmp
sub
push
addr16
and
mov
cmp
fimuls
pop
dec
jl
lock
mov
mov
pop
dec
mov
jo
xor
jbe
out
xor
rorb
gs
lret
jmp
testb
pop
shrb
add
xor
jl
int
rolb
add
out
and
and
inc
pop
fsubrl
cmpsb
cs
cmc
jo
push
enter
dec
mov
test
mov
daa
rcrb
cltd
jno
add
xchg
ss
addr16
stos
sbb
push
cmp
or
sub
test
mov
cs
cwtl
xchg
pusha
movsb
inc
cmp
xor
popa
dec
in
mov
inc
cmp
in
daa
movsl
mov
stos
mov
jp
out
jns
or
pop
sbb
lret
pushf
sub
jns
daa
sbb
xchg
xchg
lret
out
cmpsb
imul
stos
das
jmp
cld
jb
fisubrs
add
out
dec
xor
cld
clc
imul
jnp
and
adc
cmp
jns
movsl
inc
fwait
loop
cmp
cmp
stos
xlat
addr16
cmp
pop
mov
into
cltd
mov
add
add
movsl
in
daa
xchg
nop
mov
adc
shl
jbe
icebp
rcrl
out
lcall
arpl
adc
xor
jnp
mov
movsl
dec
mov
popa
pop
mov
sub
rcl
mov
sahf
fsqrt
insb
add
pop
mov
vcvtsi2ssl
xor
mov
and
lahf
mov
xor
pop
xor
stc
repnz
inc
inc
xlat
lock
insl
ret
jo
or
cmpsb
arpl
addb
and
push
addb
push
sub
cmpsb
push
fdivl
decl
jns
adc
pusha
mov
push
aam
enter
dec
ljmp
jle
fnstsw
mov
dec
dec
shll
push
pushf
or
jecxz
lock
int3
leave
xor
and
push
push
rorb
push
imul
cmp
mov
mov
pop
sbb
lock
outsl
fcomip
cmc
jecxz
bnd
ret
mov
xor
pop
movsb
sub
inc
mov
mov
psubusb
subb
aad
fwait
jg
push
aad
gs
out
xchg
in
roll
sbb
push
ja
icebp
ret
clc
pusha
das
jp
ret
xchg
daa
fldl
aaa
push
cmp
sbb
mov
mov
jae
fwait
adc
sub
mov
outsl
cmp
push
sbb
dec
or
repz
adc
pop
cmp
orl
inc
add
xchg
mov
sbb
mov
and
scas
pushf
cs
push
xchg
test
jmp
mov
jmp
in
dec
repz
jl
push
data16
sub
ficoml
xchg
fs
imull
lcall
sub
vcvtsd2si
add
subb
mov
popf
and
jle
cwtl
ja
clc
sub
mov
dec
jmp
sub
ljmp
or
iret
xor
mov
je
mulb
pop
or
inc
mov
scas
ja
dec
das
and
cmp
dec
cwtl
inc
lods
ljmp
rolb
insl
adc
movsb
outsl
mov
call
mov
sub
icebp
inc
rcrl
jp,pt
in
cmp
sub
xchg
xchg
push
and
push
or
mull
ss
clc
lods
dec
mov
nop
shl
mov
jge
cli
inc
mov
test
or
mov
push
jp
mov
jmp
add
js
prefetcht0
xor
scas
cmp
fneni(8087
inc
pop
and
sub
jecxz
insb
lret
cmpb
out
call
inc
push
jp
mov
movsl
inc
mov
scas
jns
jp
jns
clc
pushf
mul
mov
adcb
orl
sbb
sub
or
xchg
lods
loope
xor
pop
jl
daa
pop
movsl
add
sbb
adc
aam
jnp
ret
jl
sub
mov
fidivrl
and
aad
shl
xchg
or
add
in
lret
jns
sbb
shrl
add
dec
xchg
xchg
shll
out
push
cmp
in
push
push
jg
jne
mov
pop
mov
jb
test
pop
add
sub
call
lods
or
mov
inc
mov
mov
test
and
mov
add
pop
add
into
pop
sub
sbb
mov
andl
mov
sahf
mov
test
sub
push
xor
into
jle
cmp
nop
jae
sbb
add
popf
aaa
mov
fadd
add
push
rclb
or
pop
lea
cmp
bnd
mov
nop
mov
adc
hlt
pop
loopne
add
test
sub
addr16
xor
ds
cmp
mov
lret
stc
mov
hlt
push
inc
fldenv
push
and
add
cmpsb
aaa
mov
add
mov
stos
insb
outsl
mull
mov
mov
mov
mov
mov
lsl
and
xor
and
inc
lcall
dec
dec
or
aam
or
push
dec
jne
jmp
mov
jmp
add
es
popa
mov
dec
and
mov
cmpsb
dec
add
imul
cmp
mov
xchg
cs
xchg
jg
stos
jb
je
mov
xchg
cmp
push
push
imul
bound
xor
jne
adc
push
xor
and
test
xchg
sub
lods
inc
xchg
bound
lahf
es
lods
jnp
cld
jae
roll
pushf
icebp
mov
clc
inc
insb
add
push
in
sbb
xor
inc
or
or
rorb
test
sbb
sti
xor
jbe
lea
sti
jg
mov
lret
cmp
mov
arpl
jmp
mov
fsubrp
ret
xchg
test
shll
mov
lock
sub
cwtl
inc
enter
mov
xchg
js
shr
sbb
and
mov
addr16
push
aas
cmp
rclb
imul
mov
shlb
push
xor
mov
loope
mov
ss
add
and
jg
fs
loope
test
jle
test
mov
dec
pop
add
mov
lcall
clc
jns
dec
frstor
out
mov
push
xor
or
lea
xchg
sbb
ret
sub
lods
popf
orl
dec
scas
addb
sub
cwtl
rolb
mov
arpl
popf
repz
xor
mov
pop
notb
test
cmp
pop
repnz
fnclex
dec
adc
cs
aam
aad
jp
clc
add
pop
mov
lock
add
dec
add
ja
loop
mov
adc
mov
sbb
jl
adc
jb
dec
jae
out
stos
int3
inc
sti
insl
adc
sub
pusha
test
mov
std
in
sub
mov
lea
sub
fisttps
push
inc
inc
sbb
test
loopne
loopne
test
imul
adc
jns
fs
addr16
ret
lret
imul
lahf
xchg
fs
sbb
arpl
das
bound
roll
jmp
xchg
jbe
lahf
imul
outsl
pusha
popa
out
mov
subl
xchg
jno
fdiv
sahf
mov
sbb
icebp
pop
loop
jns
xchg
inc
cmc
mov
mov
outsl
lea
pop
icebp
arpl
pushf
sub
sub
cli
into
fstp
inc
mov
div
and
cs
je
fistl
inc
shrb
adc
out
repnz
sub
mov
jmp
int
adc
scas
iret
shll
aad
mov
or
mov
jns
in
inc
or
into
rolb
pop
icebp
sbb
cmpsl
mov
mov
mov
xor
sbb
or
enter
lahf
pop
sub
jne
or
xchg
sbb
adc
fadds
mov
lods
xor
mov
and
inc
imul
test
mov
lods
lods
jmp
pop
mov
push
imulb
sub
push
dec
jo
stc
cmpsl
jae
out
mov
pop
or
push
jmp
inc
std
and
roll
pop
dec
test
out
sub
jg
xchg
xchg
mov
cli
cmp
lret
bound
push
xchg
andl
pusha
jmp
mov
cmp
das
rorb
dec
and
aaa
xchg
imul
lea
mov
loop
inc
loop
jmp
pop
stos
jb
cmp
fisttpll
scas
data16
jmp
notl
inc
pop
insb
sub
inc
adc
sbb
and
or
mov
xor
dec
mov
push
sbb
push
in
test
cmpsb
jne
imul
and
sbb
stos
jle
stos
test
xorb
popa
dec
mov
lahf
jb
popa
mov
sub
mov
pop
hlt
sbb
outsl
sbb
xorb
jb
push
xchg
mov
insl
sub
test
dec
cmp
je
rolb
inc
je
cmp
je
lds
mov
fdivp
xor
nop
push
fstpl
jae
pop
popa
int3
lea
jns
adc
sbb
cmp
scas
scas
aas
out
push
div
mov
xor
inc
mov
xchg
es
js
xchg
cmp
cmp
and
fld
frstor
inc
pop
roll
lock
cmp
adc
mov
cmp
xchg
mov
out
fiadds
lret
popf
mov
aad
cmc
out
imul
push
aam
inc
xor
and
mov
scas
fdivr
xor
stos
mov
gs
add
push
mov
and
pop
shrb
add
push
push
mov
fistps
repnz
xor
dec
cmc
sub
adc
sahf
daa
jns
outsb
test
das
cmp
cmp
rorb
and
or
push
in
mov
daa
imul
mov
or
mov
repz
jo
push
mov
sub
fcompl
xor
add
shll
mov
add
cmp
loopne
ljmp
loopne
push
fmuls
add
lods
hlt
push
pop
cmp
cmpsl
inc
lods
cmp
mov
test
loop
out
dec
sbb
fstl
xchg
dec
push
test
cmpsb
pop
xor
push
pop
insl
push
gs
les
xchg
mov
ret
mov
aaa
mov
mov
adc
rcrb
fsubrp
stos
xchg
arpl
cmpsl
mov
lcall
das
jg
out
push
or
push
lods
cmp
mov
jae
mul
jnp
xor
icebp
sbb
test
mov
sbbl
jle
pop
lea
add
stc
std
or
aad
mov
dec
dec
mov
push
add
sub
ret
cltd
out
pop
xor
xlat
es
ret
jge
bound
in
enter
std
adc
lret
fnstcw
dec
sbb
popa
test
dec
dec
addr16
out
sub
in
mov
jns
adcb
in
adc
mov
test
in
lahf
dec
pop
jl
and
mov
out
jmp
or
out
cmpsl
mov
push
shl
xchg
test
paddusb
push
xor
lahf
std
pop
ret
pushf
xchg
mov
inc
leave
or
movl
stos
mov
addb
adc
mov
push
repz
lret
aad
mov
and
addr16
cmp
in
ljmp
mov
and
cmp
sarb
or
pusha
adc
sbb
fcmovnu
cld
cmp
xchg
mov
inc
js
xchg
mull
xchg
or
mov
dec
mov
sbb
xchg
lods
enter
pop
arpl
dec
loop
cmpsb
subl
add
mov
in
dec
repnz
int
lods
xchg
es
push
orl
pop
fidivrl
push
push
shrb
insl
or
cld
mov
leave
mov
jnp
mov
movsb
pop
ret
loopne
mov
mov
mov
pop
xchg
push
pushf
test
mov
clc
inc
mov
mov
dec
push
push
or
sbb
scas
adc
repz
enter
jb
xchg
test
int
xchg
ss
xor
xchg
dec
jae
ret
mov
cmc
mov
fildll
sub
push
push
pop
xchg
xor
dec
lds
pop
inc
adc
roll
jl
inc
inc
xor
xchg
push
out
adc
rcll
in
sub
mov
mov
pop
inc
and
sbb
xchg
jae
mov
int
enter
xchg
adc
or
mov
call
xor
or
enter
shlb
in
sbb
adc
leave
inc
jp
sub
pop
repz
mov
ds
push
scas
and
cld
bound
add
or
push
xor
xor
sbbb
inc
xchg
enter
or
int3
mov
movsl
xchg
rcl
loop
and
scas
jg
push
fnstcw
aam
ret
out
pop
popa
out
cmp
js
sub
enter
xchg
sub
jno
pop
aam
clc
ja
xor
jbe
push
xchg
mov
pop
aas
lcall
outsl
mov
jae
fld
rol
test
negl
add
mov
repnz
adc
gs
fstl
push
cmp
mov
mov
sarl
mov
in
es
mov
dec
xchg
shlb
lds
push
mov
popf
fisttps
popf
inc
sahf
rorl
vsubpd
int3
fwait
hlt
loope
push
cwtl
dec
or
testl
aam
insb
mov
push
push
xchg
or
dec
jo
inc
pop
xor
inc
sbb
sbb
mov
movsl
adc
repnz
mov
and
in
jle
cmc
pop
add
mov
dec
in
jmp
fisubl
sub
xchg
cmp
and
loope
add
adc
hlt
dec
ja
pop
xor
imul
ret
jmp
dec
popf
mov
imul
arpl
add
jbe
mov
jno
out
rcr
shlb
xchg
cltd
out
inc
push
test
sar
lret
fwait
loope,pn
into
fldpi
popa
iret
or
fldt
int3
insl
dec
lods
mov
cmc
xlat
sub
in
cli
mov
cmp
leave
mov
call
imul
loopne
jp
int3
imul
adcb
fs
repnz
jp
lods
fdivl
mov
cs
add
sbb
enter
xchg
cmpsl
das
pop
sbb
jle
daa
mov
inc
xchg
push
inc
ljmp
aad
or
jne
dec
fwait
aas
mov
stos
adc
pop
pop
movsl
mov
lret
mov
pop
pop
int
stos
sub
ret
out
inc
and
mov
mov
add
or
jae
daa
test
add
mov
mov
xor
test
jg
test
aaa
mov
adc
int3
adc
or
enter
shlb
push
ljmp
push
je
push
pop
xor
or
sbb
jnp
cltd
lcall
pop
daa
cmp
cwtl
xchg
sbb
mov
xlat
or
sub
pop
ret
in
sti
jne
mov
dec
sbb
imul
dec
es
or
push
test
mov
sub
adc
cwtl
lcall
fwait
sti
push
adc
cmp
push
out
or
bsf
inc
sub
adc
ret
xchg
daa
mov
movsb
ret
insl
es
cmp
cmp
dec
adc
repz
cmp
adc
lock
pop
lods
adc
push
iret
icebp
and
call
scas
xor
pop
iret
sub
xchg
push
ljmp
fisubl
or
sbbl
aas
push
leave
cmp
push
adc
not
pop
xor
cmp
cli
jp
cld
add
xchg
fimuls
inc
inc
cmp
lods
add
cmp
ss
bound
lds
fldenv
rcrb
lcall
les
aaa
push
fsubrl
xor
das
inc
test
cmp
mov
push
mov
imul
dec
mov
jnp
push
fiaddl
mov
fwait
push
aaa
call
fsubr
pop
fistpll
iret
xchg
mov
or
es
fsts
repz
adc
sub
jp
int
xor
pushf
pop
jp
pop
jae
xor
popa
adc
cld
cli
hlt
mov
xchg
pop
push
jl
std
xor
arpl
pop
ret
push
xchg
cmp
xchg
icebp
sbb
lods
call
push
xchg
outsb
sbb
je
or
es
aam
pushf
adc
add
into
in
stos
cmpsb
pop
in
push
sbb
adc
mov
int
lods
xchg
or
inc
xchg
inc
add
and
fdivl
push
int3
movsb
lods
add
test
xchg
bound
and
xchg
cltd
xchg
jmp
xchg
leave
mov
lea
movsb
outsb
mov
divb
cmp
jnp
test
test
scas
data16
mov
rcrl
pop
jle
mov
xorb
push
sbb
cwtl
jnp
mov
pop
xchg
push
add
jl
xor
push
loopne
or
movsl
jae
sti
in
popa
push
mov
sbb
daa
cmp
sub
push
inc
pushf
loopne
je
xor
icebp
daa
outsl
imul
jns
pop
decl
scas
in
push
xlat
inc
lds
call
fisttpl
pop
cmc
negl
repnz
lret
add
int3
fstps
gs
and
dec
pushf
rcrb
sbb
test
cmp
xor
cld
cli
out
add
test
movsb
xchg
xor
stos
sbb
dec
iret
sbb
int3
popa
imul
mov
pop
push
sbb
dec
mov
nop
inc
push
imul
imul
or
mov
push
mov
scas
xchg
jno
sbb
test
or
inc
mov
push
sbb
sub
push
bound
inc
push
jno
jmp
lcall
insb
out
mov
cmp
jo
inc
test
and
add
insb
fstpt
push
data16
mov
adc
lahf
repnz
std
fwait
or
and
dec
mov
cmpsb
push
mov
iret
add
outsb
xlat
or
cwtl
add
mov
adc
xor
adc
jb
push
stc
jmp
nop
popl
ss
mov
ret
pushf
aam
data16
cmp
bnd
aas
inc
lods
and
or
ret
dec
outsl
mov
daa
pop
sbb
out
test
mov
inc
inc
mov
sub
lea
jmp
mov
in
push
les
jo
jno
fisttpl
jl
faddp
arpl
fwait
stos
sub
mov
cmpsb
out
mov
pop
loop
fadd
popa
pop
sub
mov
mov
orb
push
jno
pop
jp
xor
fiadds
sub
hlt
push
pusha
leave
mov
xchg
jmp
hlt
mov
pushf
shrl
fisubrs
sub
dec
sub
jnp
xchg
rolb
jns
xor
insb
push
jns
adc
xor
xchg
mov
inc
mov
jecxz
push
sub
into
push
clc
cs
jmp
scas
jo
mov
xchg
daa
leave
clc
push
aaa
mov
cli
imull
mov
in
push
cwtl
nop
flds
sbb
test
in
shll
jmp
mov
ss
mov
xchg
fsts
pop
outsb
push
push
js
dec
dec
and
xchg
lds
inc
je
xchg
es
aad
or
sbb
push
xchg
shll
sbb
adc
sbb
mov
repnz
movsb
sub
or
repz
int3
std
cmp
pop
cmp
add
mov
lret
std
movsl
inc
roll
inc
lret
scas
addr16
cmpsb
scas
loopne
stc
mov
adc
cmpsb
inc
jmp
jge
repz
sub
daa
mov
test
iret
fdivs
pop
jnp
enter
lcall
dec
adc
adc
push
dec
cmp
enter
shlb
jecxz
imul
push
fstpt
pop
mov
cmp
mov
scas
sub
rorb
jle
push
mov
test
jae
mov
bswap
ret
int3
jge
add
sbb
arpl
idiv
mov
fucomip
cld
je
add
mull
bound
rcrl
js
sahf
push
jl
daa
loop
nop
aad
adc
adc
idivl
jl
cmp
mov
push
std
mov
mov
push
add
xchg
jmp
pop
ds
pop
int3
in
inc
shl
mov
sti
inc
hlt
testb
js
jmp
cmp
jns
push
adc
inc
jo
sub
mov
jecxz
fnstsw
fstps
adc
in
out
clc
pop
icebp
cmp
stos
mov
dec
das
shr
ficoms
jne
repnz
inc
cmp
out
adc
imul
adc
sub
mov
fisubs
jecxz
cmpsb
sub
and
mov
fwait
cmc
pusha
xorl
incl
or
dec
idivl
adc
sbb
pop
in
or
jecxz
call
push
pop
mov
adc
sub
or
sbb
les
and
decl
ss
mulb
lods
incb
mov
in
loope
inc
insl
adc
imul
fs
bound
shr
xchg
lods
std
shrb
push
fcoml
shll
and
pop
jg
dec
mov
or
adc
sub
cmp
jecxz
shrl
sbb
jmp
out
xlat
je
xor
leave
imul
popa
sbb
sbb
imul
adc
cmp
loop
pop
stos
das
cmp
or
inc
cs
rcll
imul
mov
and
insl
fstpt
dec
sub
dec
mov
xor
arpl
dec
adc
adc
movsb
mov
add
imul
cmp
mov
lret
push
scas
mov
xlat
lret
je
nop
push
test
bound
xor
mov
push
dec
dec
mov
nop
data16
loopne
mov
jae
pop
pusha
fldcw
je
sbbb
pop
fcompl
mov
xor
push
divl
pushf
imull
mov
dec
les
push
dec
stos
adc
and
sub
add
mov
xchg
jg
leave
fwait
cmp
xor
lea
dec
pop
or
pop
pop
mov
call
mov
and
imul
inc
insl
cmp
push
dec
xor
shll
cmpsb
mov
lds
int3
sbb
mov
dec
cmpsb
add
subl
imul
mov
inc
push
in
pop
add
int3
fs
push
push
jb
jg
aad
cmc
pop
and
ret
dec
mov
sbb
or
adc
sub
push
inc
out
std
sub
push
push
adc
mov
js
jecxz
or
or
shrl
fcoml
loopne
cli
push
and
or
sbb
xchg
sub
xor
jbe
and
aad
nop
ljmp
ret
mov
or
or
repnz
aam
rclb
mov
bound
ret
push
add
lahf
pushf
sub
pusha
push
jb
out
xor
outsl
sub
loopne
mov
jne
pop
push
shlb
jl
leave
mov
sub
mov
sbb
cmp
jp
cwtl
jp
or
mov
cmp
xorl
sbb
mov
in
sub
out
jae
sub
jae
mov
xor
adc
sbb
sbbb
fcmovb
cmc
fdivrl
les
sbb
scas
hlt
xchg
shlb
mov
jbe
out
std
jns
cld
enter
sub
insl
sbb
xor
out
pop
outsl
cmp
ficomps
add
cmpsb
sbb
push
addb
fwait
outsl
adc
push
dec
and
mov
lea
sahf
mov
mov
fisubrs
xchg
add
nop
ficoml
mov
push
aam
jno
imul
js
popa
stc
ljmp
mov
mov
adc
push
jmp
sahf
xor
fsubl
daa
fs
mov
movsb
dec
adc
test
sub
jl
xchg
or
and
mov
xchg
mov
add
mov
arpl
scas
fwait
xlat
mov
sub
mov
shrb
pushf
inc
mov
lahf
decl
and
or
xchg
nop
adcb
in
dec
imul
cmpsb
jns
pop
mov
in
ss
stos
fwait
mov
pop
xchg
bound
mov
lret
push
js
in
jno
sub
inc
imul
mov
fcomps
das
sub
sbb
push
leave
loope
xchg
cli
test
rcrb
inc
cmp
push
push
pop
mov
mov
dec
mov
dec
adc
mov
fisubl
adc
aam
mov
fnstcw
dec
fdiv
nop
enter
fsubrs
sbbb
int3
gs
ja
pushf
and
push
cmpsb
mov
xor
dec
xchg
fcmovne
or
push
mov
mov
arpl
fistpl
rclb
jle
xchg
call
mov
cltd
mov
int3
jge
arpl
or
mov
lds
andl
adc
fs
fldl2t
cmpsb
sbb
xor
and
stos
shl
push
nop
lret
pop
jl
repnz
in
mov
jp
pop
cwtl
mov
cld
cmp
inc
push
or
jmp
insb
jne
push
repnz
add
iret
add
jle
jg
add
add
mov
xor
std
sub
push
ret
lds
mov
pop
dec
in
repnz
repz
sbb
lret
mov
shll
xchg
or
xor
mov
pushf
dec
and
imul
pop
push
xchg
popf
and
mov
das
daa
pop
dec
cmp
pop
daa
push
jb
clc
xor
xor
adc
and
xchg
aam
dec
pushf
ret
jbe
nop
std
inc
dec
scas
and
push
mov
push
cmpsl
clc
or
jle,pn
aam
push
js
lods
add
mov
lods
cmp
or
arpl
das
repnz
mov
or
cmp
out
pop
push
out
lds
in
jo
mov
movsl
rcr
stos
cmp
pop
outsl
cs
in
push
ret
aam
lds
push
add
jnp
sbb
addr16
mov
cmp
xchg
sub
sub
mov
aaa
test
mov
mov
jl
punpckhdq
adc
sub
jne
and
ss
add
insb
xchg
lahf
xor
test
movsb
adc
gs
lret
jp
cwtl
jg
test
repnz
cmp
std
mov
scas
jle
into
xchg
ret
andl
mov
jl
push
sbb
mov
add
or
fdiv
inc
xchg
inc
in
stc
scas
out
add
int3
cmp
mov
das
inc
xor
jg
mov
inc
stos
push
sub
out
cld
cmp
out
std
dec
notl
push
mov
into
mov
shll
aaa
mov
pop
sbb
push
scas
orl
into
dec
imul
clc
cmp
cmc
jb
cmpsl
jp
gs
xorps
shrl
or
mov
push
cltd
dec
lcall
out
sub
fwait
rcrb
fcomps
mov
mov
pop
pop
jns
out
xlat
pop
into
imul
pop
pop
mov
mov
imul
es
cmpl
hlt
xor
fcoms
out
das
push
jmp
inc
xor
and
mov
leave
outsl
ret
ret
ret
cmpsb
jno
pushf
mov
mov
mov
xchg
ja
sub
lea
imul
pop
xchg
push
decb
sbb
jno
mov
mov
out
out
call
mov
cmc
push
call
aas
sub
pop
enter
roll
arpl
cli
orb
ja
call
loope
shll
incb
rcll
int3
in
jae
iret
inc
jne
fdivs
and
movsl
setbe
inc
aaa
out
scas
loopne
xchg
lret
call
cs
cld
sub
and
lock
test
into
push
lahf
enter
push
sbb
and
clc
lcall
or
dec
jne
jle
sub
lods
dec
or
cmp
hlt
das
shrb
aam
pop
std
hlt
mov
popf
inc
aad
sbb
xor
daa
icebp
imul
insl
sbb
js
icebp
pop
movl
and
sbb
aaa
fcoml
lahf
rorl
push
int
push
lcall
xchg
mov
adc
stos
inc
ret
pop
and
sbb
adc
mov
sub
ret
mov
dec
pushf
gs
fistpll
sahf
mov
mov
fs
add
xchg
add
mov
aam
cmc
pop
push
and
mov
adc
and
repz
test
mov
xor
daa
stos
pusha
stos
xchg
mov
push
mov
fistl
and
cwtl
add
mov
lahf
pop
adc
lret
xabort
dec
dec
xchg
xchg
adc
test
and
jle
fcoms
xchg
insb
ja
inc
call
adc
mov
scas
adc
fstpl
dec
mov
sti
mov
out
pop
shll
loop
or
sub
mov
lret
out
in
fwait
cmpsb
js
movsl
mov
xchg
das
fimull
aam
subb
repz
adc
jp
mov
inc
jae
scas
andl
cmp
jns
push
ret
pushf
mov
mov
or
jne
lret
mov
and
jge
add
lods
pop
ljmp
pop
scas
aas
sub
push
enter
push
adc
inc
dec
outsl
ljmp
fdivr
cmpsb
cmp
push
adc
popa
test
ja
and
push
movb
pop
add
inc
jb
into
jne
cmp
das
cmp
and
outsb
cmpsl
pushf
daa
aas
and
mov
in
shl
sub
add
in
dec
mull
mov
cmpsl
ret
call
mov
lds
mov
lret
repnz
scas
sbb
sub
or
dec
push
or
push
pusha
in
jg
push
inc
jp
pop
push
aas
add
and
jecxz
mov
ja
mov
fistpll
bound
or
cmpsb
dec
sarl
adc
jl
inc
popa
or
fcmovnb
adc
mov
xchg
in
sub
test
jge
adc
or
lods
adc
fstpt
fdivs
cmpsl
sti
jns
pop
push
je
push
add
ret
fisttpl
pop
fcompl
mov
jecxz
lods
icebp
and
push
sub
mov
xor
xchg
adc
pop
daa
jp
xor
dec
add
lcall
mov
and
or
in
mov
or
ret
inc
insb
sbb
andb
push
mov
dec
inc
lea
cmp
std
sbb
orb
movl
stos
loop
enter
or
orb
mov
pop
test
add
or
dec
add
xor
pop
rcr
xchg
fidivrs
mov
cwtl
push
outsl
hlt
mov
into
adc
push
dec
xor
dec
mov
mov
outsb
jns
adc
subl
lock
dec
xchg
cs
packssdw
lds
icebp
and
cwtl
sbb
mov
sub
imul
cld
jl
idivl
cmc
cmp
rcrl
mov
scas
pop
fstpl
es
testb
and
stos
mov
and
and
push
lds
stc
adcl
push
add
add
sbb
inc
mov
fstl
jns
mov
mov
xchg
test
ficompl
mov
fistl
in
fstpl
push
negl
shrb
inc
scas
mov
pop
scas
lods
dec
pop
notl
popa
mov
aas
repnz
and
sub
in
cmp
popf
push
xor
adc
xchg
nop
ret
and
mov
push
stos
sub
sub
mov
pop
inc
insl
or
xor
sub
dec
dec
lds
roll
out
jecxz
adc
jae
dec
cmp
sti
enter
jge
imul
fdivrs
out
cmp
xor
loope
jp
aaa
decb
jb
pop
dec
lds
leave
popa
mov
cmc
fistpll
jl
into
enter
in
pop
ds
insb
jns
dec
jmp
xor
dec
insb
into
nop
push
and
jno
mov
mov
rclb
cmp
xlat
xor
push
gs
mov
hlt
jnp
repnz
xor
leave
sbb
hlt
fldt
dec
push
add
popf
test
imul
fcmovbe
aad
jg
jge
in
mov
aad
dec
mov
aad
mov
aam
inc
jmp
lret
movsb
dec
cwtl
xor
imul
lds
cmp
push
mov
cmp
int3
xor
movsb
push
mov
cmpsl
add
sub
ret
mov
iret
jne
hlt
movsl
jmp
cmp
or
hlt
jp
mov
fnstsw
daa
add
jbe
mov
in
bnd
scas
subb
loope
les
int3
jge
mov
xor
sbb
mov
sub
sbbb
clc
xchg
sbb
pop
dec
daa
pop
sarb
xor
mov
inc
mov
in
iret
pop
enter
aam
movsl
xor
leave
add
or
hlt
push
xchg
dec
addr16
iret
lea
psrld
jge
es
fsubrs
test
push
nop
fadds
push
sub
fistps
adc
es
inc
mov
push
push
jnp
mov
xchg
sbb
addl
xor
imul
adcl
cmp
in
arpl
pop
xor
movsb
push
push
scas
jbe
cld
sbb
test
jb
cmp
pop
pop
xor
lahf
push
mov
mov
jns
xor
xchg
pop
das
shlb
les
rclb
filds
pop
aam
cmp
push
sub
inc
mov
xchg
xor
fwait
out
dec
pop
out
mov
lds
mov
and
es
les
lea
lret
leave
jle
stos
lods
call
scas
or
mov
adc
mov
sbb
fsubrl
mov
cmc
push
cmpb
popa
loop
jge
inc
outsb
daa
xor
shll
stos
les
imul
mov
ja
dec
call
addb
out
gs
insb
test
pop
adc
inc
push
movsb
xchg
jne
dec
sub
sbb
test
and
je
popl
fists
jae
lret
pop
fadds
jg
mov
pop
stos
add
push
jo
iret
mov
inc
test
mov
mov
adc
pushf
cmp
iret
push
lcall
push
sarb
cmpsl
daa
aas
jmp
imul
stc
push
xchg
mov
push
insl
pop
xor
jb
sbb
incl
adc
sahf
icebp
mov
jge
cmp
jl
xchg
std
fwait
adc
stos
in
mov
in
packuswb
aam
dec
jo
pop
mov
xor
push
lret
sbb
leave
jbe
repz
gs
ret
mov
jne
lea
add
push
fadd
popa
push
dec
cld
mov
in
cmp
jne
repnz
imull
push
test
adc
pushw
shll
jb
cs
test
adc
sub
mov
jo
lods
leave
into
and
sub
stc
push
cs
sub
xor
cmp
bound
or
push
popf
shrl
inc
cwtl
dec
ss
xchg
and
xor
mov
jnp
int3
dec
adc
sub
rcrl
mov
test
pop
dec
mov
cmp
sbbl
cmp
out
lock
cmc
add
rcl
jnp
insb
sti
lods
mov
cmc
push
mov
and
fdivp
enter
pop
xlat
das
and
in
or
out
bound
mov
sbb
cld
inc
xchg
data16
outsb
negl
out
xchg
ss
add
jmp
jecxz
cmp
lds
test
scas
mov
jmp
push
push
push
push
push
xchg
pop
in
je
arpl
cwtl
cmp
loope
and
stos
inc
adc
cmp
pop
int3
mov
div
or
push
push
jle
arpl
adc
mov
jecxz
aam
stos
fdiv
and
test
int
adc
shrb
inc
pop
xchg
popf
je
fsts
pop
loopne
sub
mov
sbb
leave
aad
in
gs
sbb
cmpb
add
mov
cli
dec
in
sub
in
mov
push
or
or
sub
sti
xchg
inc
loope
cld
and
add
addr16
test
cmp
pop
inc
rol
andps
out
arpl
jmp
test
or
lods
mov
inc
pusha
and
lret
sbb
stos
inc
xor
mov
aaa
out
ficomps
lock
dec
and
rclb
mov
sub
inc
or
cmp
lea
idiv
rol
popf
addr16
popa
outsb
dec
or
xor
push
jmp
pop
in
nop
xor
mov
or
popf
xor
sub
push
jne
inc
insl
push
daa
mov
or
jmp
rcl
outsl
xchg
aas
cld
cvtpi2ps
jmp
xorb
fsubrs
cmpsl
cmp
mov
xor
dec
repnz
xor
pop
getsec
xlat
inc
in
sub
lea
cmp
stos
sub
mov
jb
cwtl
jmp
mov
xchg
xchg
aas
scas
divl
jge
sub
xor
movsl
push
das
xlat
sub
pop
mov
incl
jle
les
lret
out
icebp
and
in
pop
in
rolb
sbb
sbb
sti
lret
popf
sbb
mov
mov
stos
arpl
aad
jmp
add
mov
inc
inc
and
out
orl
outsb
sub
iret
hlt
pop
pusha
push
mov
cmp
push
sub
test
or
pop
popf
in
sbb
nop
or
xchg
add
pop
insb
cld
mov
or
and
jno
rclb
mov
push
inc
adc
pop
jg
or
pop
enter
popa
cld
iret
push
mov
and
imul
cmp
lahf
cmp
jb
test
cmpsb
popf
rcrb
jmp
loope
jae
fwait
push
sub
jp
push
cmp
clc
in
pop
cwtl
mov
sub
aam
xchg
mov
test
cmp
shlb
test
stos
jns
popf
jbe
jb
cmpsl
sub
les
dec
push
inc
dec
rclb
outsb
fldt
in
popf
xchg
out
sub
aam
jmp
test
bswap
or
cmp
test
sbb
loope
in
sbb
push
sbb
test
repnz
jnp
mov
in
cmp
xchg
adc
jl
into
inc
sub
hlt
dec
popa
mov
push
jne
addr16
cld
out
mov
fisubs
sbb
jge
jae
xchg
push
ss
fnstsw
mov
cmp
inc
push
dec
mov
cmp
push
jno
mov
fwait
movsl
scas
sub
in
cld
aam
jae
sub
xchg
mov
ds
add
in
mov
adc
adc
rorl
loopne
es
lock
nop
mov
cmp
inc
gs
loopne
bound
inc
and
mov
insl
mov
imul
mov
std
arpl
jmp
mov
jl
stc
arpl
lahf
ja
jle
jb
lcall
sbb
push
test
fistps
lods
inc
ljmp
lock
addr16
lret
jg
adcb
out
mov
data16
sti
inc
fldenv
sub
cmp
or
divb
sbb
xchg
jb
push
xor
nop
testl
jns,pt
iret
data16
cmp
test
ds
pusha
sbb
or
addr16
mov
and
dec
dec
mov
rorb
sbb
and
mov
jae
stos
jecxz
xchg
dec
outsb
fdivl
sahf
mov
inc
sbb
loope
inc
outsl
test
stos
mov
int3
pop
repz
bound
cmp
movsb
mov
sub
aam
mov
out
pop
sbb
pop
dec
sub
inc
mov
cli
dec
or
mov
jno
out
int3
add
mov
sub
mov
mov
icebp
sub
lea
les
cmp
out
or
leave
popf
xchg
mov
cmc
nop
inc
aam
lods
cmp
xor
push
jg
leave
mov
inc
push
dec
jl
rorb
das
adc
mov
lods
int
push
jnp
fcomp
push
scas
rcll
cmp
inc
testb
jne
cmp
add
div
dec
xorl
int
sub
cs
andb
test
jg
movsl
jbe
shlb
adc
jbe
cmpsl
pop
sbb
imul
aas
lods
pop
pushf
iret
pop
push
inc
mov
fucomi
cmpsb
push
insb
lea
cli
loope
mov
add
add
arpl
inc
icebp
pop
mov
inc
not
fcoml
jno
pop
jge
mov
push
outsl
pop
inc
jmp
test
inc
cmp
mov
jns
fwait
lcall
mov
dec
xchg
sbb
lock
xchg
mov
or
inc
cwtl
pop
or
add
popf
pop
mov
test
fsubl
pushf
clc
adc
in
mov
cmp
jb
sub
aas
jp
repz
les
outsb
sbb
jbe
out
jge
push
je
call
jmp
lcall
adc
push
out
pop
or
cmp
push
sbb
jg
shrb
or
push
xchg
sti
cmp
push
fsubrl
mov
cmpsl
adc
mov
sub
loop
insl
insl
adc
gs
push
sub
jno
arpl
inc
push
or
scas
sub
ret
inc
cs
fmul
xor
aam
xchg
sti
cmpsl
mov
xorb
ljmp
mov
insl
pop
sbb
push
pop
dec
add
lcall
addr16
stc
scas
iret
ss
leave
subl
adc
and
nop
je
fildl
sbb
scas
cwtl
sbb
or
iret
lcall
loopne
mov
enter
je
lcall
or
aam
cli
pop
cmp
xor
sbb
pop
inc
mov
sub
rcrl
sbb
loope
jecxz
lods
xchg
cltd
mov
adc
sbb
dec
shl
mov
out
push
dec
dec
sbb
pop
in
clc
pop
ror
mov
in
push
icebp
loop
sub
sub
std
xchg
mov
rorl
push
test
push
call
push
pop
sahf
jmp
ret
fwait
dec
clc
sahf
fsubrl
out
iret
ja
test
inc
xchg
loop
cmc
xor
loopne
sbb
pop
test
inc
inc
stos
push
and
fldcw
xor
xchg
mov
phsubw
test
xor
mov
iret
loope
loop
xchg
mov
xchg
lcall
sub
mov
fistpll
mov
pop
hlt
mov
dec
xor
sub
nop
pushl
jle
jbe
jecxz
scas
pop
xor
mov
pop
mov
lahf
sub
cmp
mov
movb
sbb
mov
aam
std
push
lret
pushf
shrb
mov
xchg
jp
aaa
cmc
clc
loop
xchg
mov
mov
add
mov
pop
into
sbbl
loope
add
sti
movb
inc
push
clc
adc
loopne
lret
cld
insl
pop
and
cwtl
mov
lds
mov
sub
adc
xor
jge
rorb
inc
mov
loope
push
or
mov
xor
jae
adc
movsb
jp
subl
mov
imul
or
inc
das
scas
scas
mov
ss
in
sbb
ja
or
das
pop
jno
jg
shl
cmpsb
icebp
sbb
mov
lcall
xlat
jbe
notb
inc
leave
inc
push
xchg
scas
inc
and
fldcw
aaa
arpl
fnstcw
xor
or
lcall
dec
into
mov
mov
push
inc
fs
adc
jmp
jb
adcb
pop
mov
rolb
lods
sub
lds
jg
and
jne
and
push
mov
hlt
mov
lahf
aad
add
out
adc
iret
lods
lea
shlb
xlat
jmp
out
fmuls
push
dec
inc
shrl
mov
cmp
and
inc
lea
adc
push
cmovne
dec
int3
jecxz
dec
es
add
outsb
mov
jae
mov
push
movsb
mov
jge
ljmp
push
inc
dec
cmpsb
out
sbb
jnp
mov
mov
push
adc
fucomi
rcrb
cmpsl
je
popa
jbe
ret
push
out
dec
jecxz
mov
inc
inc
add
test
sub
mov
and
inc
sub
in
mov
loope
and
mov
mov
mov
cmc
jmp
hlt
xchg
xlat
xlat
testl
rcrb
cmpsl
adc
cli
add
and
jmp
lcall
pop
xor
cmc
test
es
fcmovne
cwtl
dec
cmp
sar
push
in
cli
sbb
scas
push
xor
andb
fisttpll
pop
je
shll
inc
sub
sbb
clc
add
adc
xor
outsb
and
test
inc
inc
hlt
xorb
sbb
cmp
das
inc
lret
das
das
ret
pop
jmp
rclb
and
fsubrs
fnop
cwtl
pop
sarl
shll
pop
push
adc
pop
inc
ds
or
insb
xchg
cwtl
jmp
loop
adc
int3
add
jne
dec
mov
bound
in
sbb
rcrb
dec
lret
xchg
jbe
and
imul
stos
push
xor
add
out
xor
ljmp
mov
push
shrl
in
arpl
inc
popa
and
cmp
int3
mov
push
mov
mov
stos
push
outsb
cmp
sbb
cwtl
fisubl
or
push
punpckhbw
dec
sbb
insb
xor
push
add
scas
stos
mul
inc
xchg
inc
add
mov
pop
test
adc
mov
cmp
arpl
xor
je
test
xchg
aaa
pop
repz
loope
cld
and
in
cli
push
iret
test
inc
aad
lahf
aam
add
add
aad
test
repnz
out
lahf
mov
or
and
xor
xchg
mov
xor
pop
mov
jo
fildll
cld
add
jle
sbb
ror
insb
int
mov
ret
jle
pushl
push
imul
outsb
mov
stc
jmp
mov
jb
jae
cld
shll
adc
jnp
push
rcrb
cli
xchg
sub
inc
jge
pop
and
xor
xor
cli
call
jns
jle
fdivrl
mov
lea
mov
popa
cmp
hlt
dec
or
ret
sbb
enter
inc
mov
mov
inc
jecxz
jle
and
rdtsc
push
mov
mov
outsb
jo
int3
iret
jo
lock
sub
test
pop
fs
insb
scas
sub
ss
dec
jne
push
les
mov
loop
cmp
cmp
cmp
mov
push
bound
pushl
sahf
xchg
repz
xchg
dec
mov
pop
negl
in
imul
addb
aam
lret
icebp
or
jp
sbbl
xchg
mov
not
insb
repnz
mov
mov
cli
xchg
mov
fmull
out
mov
or
add
mov
mov
add
inc
inc
add
clc
shrb
inc
jo
cmp
ret
sub
clc
jns
arpl
or
flds
loop
ret
add
std
test
insb
add
cmp
leave
aam
stos
filds
dec
push
mov
filds
lds
clc
cltd
mov
mov
pushf
cmp
xor
adc
les
mov
pop
cmp
jb
pop
insl
pop
lret
pop
push
mov
push
aad
roll
mov
xchg
sbb
nop
pop
pop
cltd
loope
inc
imul
inc
pop
data16
fwait
push
mov
mov
push
cmp
mov
cmp
mov
outsl
sub
test
inc
enter
call
mov
subb
ds
repz
enter
sub
loop
repz
sub
shl
adc
ret
ljmp
pop
pop
mov
pop
lea
orb
mov
mov
or
in
ret
mov
cmp
pop
les
mov
inc
pop
mov
lock
dec
jge
nop
push
mov
lret
jmp
push
lods
sarl
push
bound
dec
ret
dec
mov
mov
jp
xchg
scas
and
ljmp
mov
mov
sbb
scas
pop
push
fwait
mov
enter
out
jb
hlt
cwtl
and
cmp
cmp
idivl
jns
hlt
lret
mov
mov
lods
mov
sub
pop
cwtl
sbb
adc
xor
sbb
cmp
inc
mov
adc
lret
fsubl
pop
add
fldt
sub
push
test
rclb
es
cli
ret
mov
add
fnstcw
stos
xchg
stos
movsb
or
and
aas
addr16
adc
test
stos
fbld
cmp
shll
dec
and
pop
and
rorl
movsl
aam
mov
dec
xor
fnsave
xorl
outsb
cmc
xchg
xorl
idivb
xchg
loopne
push
loopne
jnp
or
rcr
andl
leave
mov
es
jl,pn
lea
lods
dec
push
cli
out
mov
mov
imul
out
mov
add
pop
mov
arpl
jmp
push
pop
mov
push
popf
insb
repnz
mov
iret
iret
lods
cmp
dec
rcr
push
sub
gs
mov
leave
mov
jae
mov
pusha
jnp
xor
shrl
xor
lea
jge
mov
je
push
push
cmp
mov
out
dec
fisubrs
ret
dec
cmpb
dec
aad
pop
enter
sub
stc
mov
je
rcll
jp
mov
jae
pop
lahf
jmp
loopne
xchg
lds
adc
dec
in
iret
shrl
es
dec
dec
int3
out
aaa
sti
sub
daa
std
xor
or
lock
popa
fs
xchg
outsb
sub
push
inc
push
mov
and
xorl
pop
lret
push
xlat
add
shl
push
out
lret
push
in
in
sub
clc
cwtl
fcomp
out
nop
xor
cmpb
mov
orb
outsl
jnp
sub
xchg
loopne
xchg
enter
scas
adc
xchg
lea
clc
adc
rorl
or
cli
and
xor
mov
xchg
push
pop
dec
jecxz
rolb
ja
jecxz
sbb
and
xchg
pop
jle
scas
adc
xchg
xor
dec
out
mov
pop
orb
add
inc
adc
rcrl
hlt
xchg
addr16
out
out
pop
dec
jl
dec
xorb
jmp
data16
test
rclb
adc
adc
test
fldenv
ljmp
fstpt
push
push
dec
lea
loope
jl
leave
pop
push
xchg
pushf
inc
jp
sub
subb
js
xor
repnz
out
xor
pop
inc
lods
xchg
nop
out
repz
jb
idiv
jns,pn
sub
into
fwait
jno
pop
sahf
test
mov
mov
mov
gs
mov
jl
or
dec
mov
fs
insl
fisubrl
xchg
xchg
rorl
in
shlb
and
sbb
or
push
sahf
mov
lret
sub
or
leave
sbb
in
rolb
stos
pop
sbb
in
mov
leave
out
out
fiaddl
jecxz
stos
dec
std
imul
insb
xor
xor
js
lahf
cmp
rclb
loopne
lret
push
gs
add
or
add
add
mov
pop
fdivl
lret
dec
add
dec
movsl
stos
mov
or
ss
push
pop
cmpsb
movsb
test
pop
sbb
mov
xchg
adc
popa
push
inc
and
leave
fistpl
or
leave
stos
or
bound
sarl
cmpsb
rcrl
jmp
sbb
mov
dec
imul
mov
sbb
push
push
rclb
dec
repnz
sbb
push
ret
jle
or
std
jns
les
loop
cltd
adc
and
shrb
stos
adc
pop
inc
aaa
push
popf
mov
test
jmp
mulb
aas
in
mov
mov
aad
mov
or
pop
std
loopne
sbb
lods
sub
add
ret
cltd
mov
push
cmpsl
push
jecxz
xor
add
adc
fadd
mov
repz
cmpsl
add
outsb
cld
mov
fists
mov
imul
sbb
rol
mov
out
adc
sub
sub
repz
cmp
push
add
outsl
adc
mov
insl
in
xor
push
insl
aad
std
mov
and
inc
adc
sub
gs
roll
cli
sub
inc
push
and
lahf
adc
sub
fdivr
cltd
adc
pusha
mov
cmc
movsl
adc
xchg
push
cmp
mov
ja
int
sarl
cmpsb
or
xor
test
es
dec
cli
mov
and
loope
popa
lahf
mov
into
cmp
fs
xchg
jae
inc
ror
mov
sub
jnp
fcom
in
int
dec
dec
les
pop
icebp
jg
mov
or
pop
lods
nop
test
out
imul
mov
cwtl
mov
pop
enter
insl
scas
mov
mov
fdivrl
js,pt
xchg
mov
mov
mov
into
insb
lods
jecxz
mov
mov
sbb
js
adc
cmp
xchg
mov
rol
mul
shrl
loop
sub
push
inc
fs
xor
xchg
xor
mov
push
xchg
cmp
sub
mov
xor
add
mov
pop
int
push
push
cld
inc
ss
mov
pop
sub
arpl
dec
enter
pop
loopne
cmp
fwait
mov
mov
jecxz
jbe
lcall
and
std
cmp
or
dec
jae
cltd
aaa
out
sbb
push
mov
paddusw
fiaddl
enter
idiv
cld
dec
imul
hlt
xlat
sbb
aaa
xor
lret
sbb
pop
mov
mov
inc
test
into
frstor
fadds
xchg
or
adc
divl
lea
jecxz
out
push
pop
or
out
movsb
sbb
gs
fucomi
dec
int
fnsave
daa
out
lret
stc
movsl
or
jmp
mov
pop
jg
out
test
inc
inc
sbb
std
xchg
in
repz
cmp
rclb
js
jmp
mov
and
fdivs
iret
cmc
mov
jecxz
sub
cmp
push
and
push
cli
cmc
sbb
sahf
mov
call
push
push
in
inc
test
fnstcw
adc
lret
sahf
stos
out
lahf
js
dec
adc
call
fsubrp
push
andb
cmp
xor
sub
pop
sbb
mov
in
lcall
jge
cmp
push
dec
or
pop
xor
popf
mov
jne
sub
cmp
adc
jl
daa
xchg
xchg
mov
sbb
sub
mov
xor
int
jo
add
or
cli
cmpsb
mov
call
xchg
cmc
dec
jnp
jbe
pusha
xor
pushf
loopne
ss
cwtl
out
or
scas
sbb
lods
movsb
jecxz
dec
inc
xchg
push
xor
mulb
movsb
add
dec
mov
mov
mov
mov
roll
into
and
fiaddl
jge
push
fs
or
mov
outsb
mov
js
pop
test
cmc
inc
fsubs
cmc
es
adc
push
and
cmp
movsb
mov
neg
mov
push
jb
mov
adc
and
pop
push
mov
in
fsubs
ss
in
add
mov
loope
pop
inc
add
dec
sbb
in
enter
rol
daa
dec
enter
or
pop
add
cmp
mov
mov
mov
or
fldl
dec
mov
test
pop
lcall
cld
or
das
xor
push
and
addb
sbb
inc
je
adc
mov
scas
mov
xor
lret
subl
ss
test
stos
insb
stos
xlat
push
arpl
ja
mov
mov
iret
xchg
push
fmull
inc
dec
xor
dec
daa
xchg
leave
enter
mov
fisttps
mov
xchg
mov
ret
enter
jle
rcr
dec
dec
cmp
xor
sub
adc
mov
push
mov
mov
or
sbb
cmc
in
lea
loopne
xlat
mov
xor
xor
xor
shll
ss
jl
scas
data16
sbb
paddsb
mov
mov
cmp
adc
jae
das
xchg
pop
xor
jmp
fcoml
shll
shl
mov
inc
inc
mov
std
shll
push
push
sub
dec
cli
xor
lret
pop
push
xor
lcall
or
subb
test
and
adc
xor
sarb
in
aam
mov
leave
in
pop
ljmp
push
gs
mov
dec
ja
push
jmp
iret
imul
in
xor
out
mov
sbb
pop
jno
shrl
mov
loope
scas
daa
jecxz
and
sbb
push
jmp
mov
leave
ljmp
std
pop
imull
dec
lret
fwait
cmp
aas
fucomp
xor
pop
sbb
popa
test
sub
loopne
mov
stos
and
les
jg
outsl
push
lea
push
test
push
ljmp
ljmp
jne
mov
cmp
inc
gs
add
xlat
inc
popf
mov
push
call
aam
mov
xchg
xchg
jnp
push
pop
jle
push
cld
xchg
and
dec
loope
xor
pop
jo
jae
dec
xchg
mov
into
aaa
ret
add
inc
sub
inc
leave
sub
add
mov
pop
mov
adc
es
orl
jnp
mov
xor
adc
inc
push
aad
hlt
out
or
in
cmp
or
push
cmp
xchg
addr16
aam
aaa
ja
sub
xchg
stos
cmpsb
cmp
stos
mov
testb
mulb
insb
sub
insb
push
stos
in
cmp
outsb
mov
push
js
and
orl
dec
in
push
xchg
jge
loopne
mov
inc
mov
das
mov
hlt
mov
shlb
jp
xorb
stos
jg
adc
sti
jmp
aad
jnp
mov
inc
xchg
ss
std
push
push
dec
xor
bound
je
dec
sahf
add
mov
pusha
data16
sub
sub
popf
in
mov
mov
pop
call
fsubr
mov
jecxz
pop
and
pop
out
pop
cmp
mov
rcrl
or
push
pop
gs
cmp
aad
das
mov
imul
mov
arpl
pushf
in
add
sbb
lods
adc
push
jle
xchg
push
push
call
int
sub
stos
mov
push
dec
fldl
inc
movsb
mov
pushf
xchg
in
sub
subb
lea
xchg
mov
inc
scas
add
roll
mov
pop
sub
push
ljmp
mov
test
aam
sbb
ret
add
call
or
adc
outsb
push
sbb
inc
imul
or
xor
into
in
rorl
pop
outsb
mov
add
or
jp
das
stos
or
loopne
mov
hlt
xchg
or
cwtl
mov
jg
mov
wrmsr
imul
cmp
or
iret
repz
ds
or
xchg
xchg
mov
in
into
gs
das
mov
bound
fbstp
fs
add
sbb
sbb
scas
pop
lock
dec
ds
xchg
fcompl
fisttps
icebp
dec
insb
pop
dec
mov
mov
cmp
notl
into
pop
lahf
add
jno
ss
jb
pop
ljmp
lea
jnp
mov
dec
adc
rol
movb
inc
xlat
push
jbe
aad
add
in
and
or
adcb
lret
imul
les
arpl
lds
cltd
mov
insl
xchg
out
xchg
mov
jb
mov
test
stc
scas
ss
pop
fstpt
ss
pop
inc
mov
je
fldcw
hlt
push
in
lahf
dec
gs
xlat
mov
push
sub
pop
pop
adc
sbb
popa
cwtl
les
sbb
out
pushf
sub
bswap
cmpsb
push
mov
push
fnsave
mov
shll
xor
jg
cwtl
pushf
filds
loop
push
lahf
aas
adc
push
shll
popf
std
jle
popl
inc
jecxz
mov
ja
pop
mov
lock
mov
push
xor
mov
stc
add
pop
pop
scas
mov
jecxz
xor
push
cmp
jmp
insb
clc
or
in
fidivrl
mov
call
sti
fcoml
rcrb
std
stos
andb
mov
sub
jns
sahf
cmp
inc
mov
mov
ja
pop
cmp
xor
lahf
roll
sub
and
sub
push
js
xchg
bound
out
cmp
pop
push
lahf
test
int
enter
or
sarl
lahf
lods
icebp
push
ja
push
data16
scas
jo
imul
insl
popa
jns
dec
pop
jne
sub
js
stos
mov
jb
mov
addr16
pop
pusha
mov
and
loopne
out
imul
mov
and
icebp
adc
bound
cmp
rolb
mov
mov
lock
in
mov
das
mov
mov
in
pop
loop
push
cmp
mov
adc
lea
add
in
ret
fmul
sbb
jp
cmp
pop
popf
aaa
xor
les
lods
sbb
sub
sub
jb
imul
ficoml
scas
cmp
xchg
sbb
push
clc
adc
mov
in
aas
jne
dec
insb
jp
jae
push
add
out
mov
pop
orb
or
fcoms
lods
xor
sbb
loope
inc
aas
cmp
sahf
jno
es
mov
lods
ret
ja
sub
push
sbb
test
std
sub
addb
test
loope
xchg
mov
jecxz
ficoms
loope
cltd
pop
cmp
loopne
cmp
push
mov
mov
notb
xchg
sub
xchg
dec
jp
jno
xchg
sbb
xchg
mov
jp
jmp
inc
movsl
daa
sbb
sbb
out
stos
sbb
int
inc
mov
or
inc
add
insb
arpl
cwtl
sbb
mov
pop
mov
xor
testl
jno
xlat
fstl
shll
stc
add
fcmove
loop
js
add
jne
testl
inc
mov
adc
cmp
jp
orb
jo
and
pop
push
shlb
jmp
jns
jbe
mov
and
inc
loope
stos
popf
fnstcw
dec
cmp
in
push
ljmp
movsl
dec
xchg
and
mov
xor
dec
ljmp
xchg
sbb
lret
mov
int3
pop
pop
mov
hlt
aam
popf
add
test
dec
sbb
loopne
xor
add
cmp
sbb
sub
mov
loope
rcrl
lods
lret
sub
into
pop
cli
jmp
sub
das
nop
push
jp
mov
mov
andb
out
adc
cmp
sbb
popf
jae
mov
enter
pushf
and
shr
push
je
pushf
in
daa
hlt
add
inc
roll
push
sub
xchg
movb
mov
jp
hlt
sbb
ret
loopne
dec
jb
push
cmp
add
fldl
out
jae
ficoml
pop
cmp
xor
push
mov
cmp
clc
push
ja
popf
insb
ljmp
into
xchg
lahf
fwait
lahf
cmp
cli
or
xlat
dec
jo
adc
pop
ljmp
jbe
loopne
test
lods
xchg
pop
cmovb
in
cmpb
cwtl
lock
pushf
or
nop
mov
pop
cmp
pop
sarb
mov
outsb
popf
pop
push
mov
jb
inc
lea
lock
sbb
dec
ds
push
fnstcw
out
outsb
xchg
mov
and
add
lds
mov
call
push
decb
mov
es
sbb
mov
fiaddl
cmp
mov
rclb
aam
icebp
and
cli
mov
mov
fisubrs
std
mov
xchg
xchg
lret
sbb
mov
cwtl
jmp
js
outsb
cmpsb
xor
ljmp
fcomip
mov
ljmp
adc
xlat
fidivrs
add
insb
xor
mov
cs
test
fldenv
repnz
cmp
cmp
gs
push
adc
cmp
leave
loope
cs
sub
insl
and
dec
daa
loop
fsubr
jmp
es
or
mov
mov
or
cwtl
inc
outsl
shrb
mov
lret
and
out
cmp
ds
in
popa
cmc
push
cli
jnp
rcl
push
movsb
sbb
aam
jne
mov
push
incl
xor
cwtl
xor
stc
push
fs
push
in
fs
add
sti
or
push
pop
inc
xor
xlat
andl
jecxz
scas
or
clc
mov
push
push
ja
imul
out
sbb
shll
dec
xchg
and
std
cmc
lock
fistps
mov
and
or
lret
jo
ret
push
jb
ret
xchg
or
add
call
sahf
xchg
dec
pushf
cld
scas
outsb
fadds
stos
loop
jle
lcall
inc
xlat
adc
pusha
sub
scas
jge
ljmp
aas
imul
int3
mov
add
push
lcall
xor
fs
popf
sub
xchg
or
adc
dec
dec
mov
rol
inc
stos
scas
jge
std
xor
mov
jae
mov
pop
xlat
sbb
notb
jmp
add
jo
aas
fadd
daa
or
xor
cmpsb
pop
iret
int
cmp
mov
cmpsl
mov
jb
push
das
jne
inc
test
cld
push
dec
repnz
fdivrl
mov
mov
fdivl
inc
pop
std
lcall
push
imul
outsl
inc
out
les
adc
sbb
pushf
mov
rorb
cmp
ja
fnsave
cmp
jge
lea
and
sub
cmp
andl
pop
addr16
sbb
cwtl
sbb
push
pop
lock
mov
cmc
int
movsl
mov
fstpl
hlt
mov
rorl
out
mov
xor
inc
addl
xor
sub
in
add
mov
mov
cltd
repnz
bound
scas
rorl
test
mov
ja
xor
mov
pop
gs
loop
imul
sub
outsl
xor
test
cmp
jmp
fmull
add
mov
or
mov
jno
ret
scas
enter
jo
cmp
lahf
and
outsb
sti
xor
call
adc
stc
or
mov
fimull
or
xchg
cli
sbb
mov
lret
movsl
and
ss
or
jl
or
in
testb
or
out
mov
shrl
mov
add
sbb
sbb
shl
inc
push
popa
or
cmp
and
jl
scas
mov
adc
inc
fiadds
lcall
ror
movsl
pop
inc
movsb
enter
and
mov
es
repz
jae
adcl
mov
lods
inc
shr
sbb
lret
aaa
ss
or
ja
inc
jb
xchg
add
pop
rorl
mov
lock
jg
call
and
jnp
cltd
mov
pop
lods
mov
fldcw
enter
jno
aam
lods
inc
sar
pop
js
mov
push
push
cs
adc
sub
mov
popl
xchg
aad
pop
push
xchg
add
stos
cmpsb
lods
jno
lds
mov
adc
pop
xor
std
aad
roll
mov
cli
mov
aaa
inc
cmc
jne
pop
test
push
in
fldcw
dec
push
movsl
lahf
mov
out
hlt
js
jp
xchg
fldenv
rolb
mov
mov
rorl
test
mov
push
jle
lret
jo
sub
cmc
cmpb
les
fs
ret
add
fistpll
ret
xchg
xorl
mov
mov
cmp
lea
push
fdivrs
jecxz
or
add
ss
mov
lods
pop
push
inc
mov
popa
test
imul
popw
mov
test
adc
push
sarb
mov
in
cmp
mov
and
add
out
mov
subl
dec
xlat
fisubl
sub
xchg
in
cmp
mov
in
adc
pusha
xor
add
xor
imul
inc
pusha
out
dec
sub
and
ss
pop
mov
jle
sahf
xlat
cs
out
stos
jecxz
adc
adc
jae
lcall
cmp
rcr
sub
and
mov
mov
inc
dec
push
mov
sbb
pushf
push
xlat
adc
or
mov
adc
out
hlt
aas
adc
jno
sub
test
scas
insb
pop
add
das
adc
xor
rcll
or
push
jge
inc
adc
test
mov
jne
fcompl
push
cmpsb
fistpl
cmp
loop
pop
repz
pop
ficoms
bound
xchg
xchg
xchg
lret
shr
xor
fadd
jno
xchg
fldl
mov
and
cmp
pop
imul
cmp
lods
imul
mov
xor
mov
mov
or
out
pop
xchg
nop
loope
fstl
dec
dec
enter
lods
add
mov
sahf
ss
into
xchg
mov
mov
adc
jl,pn
stc
mov
mov
push
les
push
addr16
sub
sub
loope
jno
imul
test
cmp
xor
ja
cmpl
push
jg
inc
aaa
scas
ret
push
addb
and
or
cmc
iret
and
js
jbe
cmp
repz
inc
lock
out
jns
iret
inc
xchg
mov
loope
sbb
sub
lock
aaa
xor
out
cmp
imul
fwait
or
inc
cmp
jecxz
inc
insl
adc
dec
jno
dec
mov
cmpl
mov
ljmp
fcoms
jp
lods
xor
xlat
jns
cld
mov
sbbb
jo
and
and
adcb
cmp
arpl
das
inc
sbb
in
or
rcrl
jg
jnp
int3
xchg
popa
cmp
push
daa
dec
push
faddl
notl
mov
inc
xchg
cmp
xor
fidivrs
fcmovu
xor
or
in
inc
push
push
addr16
into
shlb
inc
lock
lds
shl
int
pop
lods
js
xchg
popf
inc
icebp
jns
es
icebp
arpl
jns
jp
and
inc
sub
xor
cmp
mov
pop
in
jo
rcrl
pusha
lea
loope
push
call
ss
mov
and
adc
mov
scas
ljmp
cltd
movl
arpl
lahf
jge
rcrb
dec
push
mov
jb
add
pop
lods
inc
xor
lods
pop
and
cmp
ficomps
jbe
inc
stos
pop
mov
data16
sti
inc
fldenv
push
int
or
inc
xchg
jmp
mov
sbb
cmp
mov
cli
call
pop
mov
clc
inc
jg
out
fmull
push
sbb
fstpt
enter
jmp
xor
dec
aaa
popa
or
mov
sub
adc
sbb
js
push
les
mov
aam
cwtl
dec
inc
negl
inc
push
ja
mov
xchg
push
inc
call
cld
int3
xchg
pop
cmp
lods
rolb
dec
sbb
jb
sbb
mov
sbb
push
mov
mov
fs
rorb
sbb
xchg
sub
or
test
push
clc
roll
add
lea
scas
jle
or
xchg
jo
rcrb
es
aaa
inc
loope
xor
call
cmc
cmc
repz
push
dec
fisubs
in
cmp
pop
dec
pop
outsl
pushf
hlt
aam
and
inc
add
jne
xchg
push
jge
xor
sub
data16
aaa
xchg
es
insb
addl
dec
pop
inc
clc
push
popa
push
mov
icebp
adc
test
and
pop
xchg
lcall
and
cmp
add
xlat
fimuls
in
push
frstor
add
mov
adc
lret
ss
sbb
push
push
jbe
cmp
and
iret
loopne
mov
push
or
fnstenv
xchg
es
lea
lods
fiaddl
into
xchg
add
mov
push
and
cwtl
lea
pop
or
dec
push
bound
jo
and
push
xlat
out
addr16
xor
fnstcw
out
jnp
or
mov
push
cmpsb
aas
clc
out
mov
outsb
cwtl
mov
ret
fists
sbb
lock
and
loopne
sbb
add
ror
aam
jnp
pop
cmp
sbb
xorl
stos
das
rcll
lds
mov
pop
mov
out
mov
les
cmp
ljmp
push
divl
sbb
insb
aas
jnp
push
std
lcall
mov
mov
bound
aam
adc
push
ss
adc
pop
or
sbb
lods
cltd
mov
movl
jns
insb
int3
ds
adc
mov
mov
inc
out
sub
push
jge
mov
in
pop
aad
fwait
dec
dec
lahf
mov
push
pandn
dec
or
fildl
fiadds
add
fcomps
mov
mov
xor
push
imull
cld
stos
xchg
int
dec
or
jae
sahf
movsb
ljmp
test
lcall
js
mov
add
mov
jmp
loopne
xchg
xchg
ficompl
mov
aam
adc
xchg
jae
dec
je
jg
xor
mov
dec
int
and
sub
push
popf
lods
popf
mov
xor
aam
lahf
cmpsb
sbb
xchg
and
loopne
loop
lret
shlb
mov
nop
test
iret
cmp
mov
and
and
mulb
sub
inc
sub
in
adc
mov
fistps
push
sbb
or
sti
and
mov
pop
rorb
sahf
xor
mov
outsl
and
jns
pop
int
mov
fnstsw
add
sbb
mov
in
mov
das
into
pop
fisubrl
stos
inc
cmc
sub
pop
in
filds
and
scas
mov
mov
xor
jno
cld
push
dec
mov
nop
pop
insb
test
stos
in
gs
and
xchg
repz
or
js
leave
sbb
lret
xor
cmp
into
sub
cmpsl
idivl
scas
adc
inc
mov
popf
or
add
mov
movsl
push
jns
and
jb
cwtl
dec
adc
mov
or
lea
int3
outsl
cmp
jb
cmp
mov
xlat
xchg
popa
dec
jb
or
movsl
out
mov
lods
xor
iret
inc
dec
sbb
xchg
add
xlat
and
nop
clc
shll
jl
pusha
mov
addr16
sarb
getsec
inc
jp
notl
xchg
pop
arpl
popf
lds
jl
inc
mov
and
out
sbb
mov
inc
jmp
or
mov
fnstenv
int3
data16
lods
mov
or
rorl
mov
dec
cli
aad
jnp
shll
ljmp
xor
xor
daa
int3
lcallw
adc
rcrl
outsb
dec
pop
jg
fldt
scas
sub
inc
call
and
loope
xchg
mov
icebp
pop
mov
int
push
push
rorl
cmp
outsb
inc
shll
setge
fsub
mov
ficoml
ds
jge
mov
mov
xor
int3
mov
je
cmp
lret
filds
push
pop
cwtl
dec
ja
mov
repz
and
xor
push
dec
mov
fadd
inc
cmp
mov
inc
lcall
jp
lods
jle
mov
adc
iret
mov
sbb
loope
add
stos
sarw
or
pusha
stos
pop
cmp
lds
outsl
dec
test
aas
dec
sbb
mov
stos
push
pop
adc
out
shrl
cmp
lds
inc
jg
movsb
mov
cmp
or
jb
sarb
sub
xchg
scas
out
pop
das
sub
mov
test
mov
mov
movsl
lahf
addr16
xchg
adc
add
lock
pop
imul
cmp
mov
js
scas
movsb
test
lahf
adc
pop
cli
mov
sub
dec
imul
int3
xor
loop
movsb
and
lcall
sbb
lahf
test
in
ss
add
push
dec
sub
punpckhwd
jno
cmp
je
cltd
loope
movsb
arpl
std
adc
enter
sbb
push
out
hlt
mov
out
push
push
insb
scas
xor
cmp
pop
jmp
and
mov
add
shlb
add
incl
enter
mov
movsb
and
aad
jle
sbb
jne
mov
mov
ja
inc
das
adc
mov
out
or
sbb
jo
pop
push
in
out
out
adc
xchg
out
faddl
sub
into
jg
xchg
ja
iret
testl
loop
scas
repnz
jae
cmpsb
xchg
out
loope
stc
cmp
sub
sub
test
adc
xchg
movsb
mov
test
shlb
mov
in
mov
dec
mov
sbb
test
ljmp
xor
pop
xchg
push
jbe
lock
cli
and
mov
mov
mov
insl
xchg
cmp
dec
es
pop
sub
sub
call
movsb
pop
test
sub
sub
adc
and
imul
mov
cli
imul
rcll
out
shll
xor
popa
stos
jl
pusha
and
outsb
test
scas
xor
cmp
leave
outsl
adc
sub
es
ja
leave
pop
scas
andl
dec
mov
shl
fs
jae
imul
mov
xorl
xchg
loopne
std
out
xchg
ss
jne
bound
repz
mov
dec
pop
dec
add
push
imul
jecxz
pop
cmp
lods
sbb
mov
pop
movl
jns
push
insb
mov
add
rolb
inc
lret
lret
pushf
js,pn
xchg
adc
or
fidivrs
loope
push
xchg
dec
dec
jo
arpl
mov
jmp
aam
pop
adc
stos
pop
push
data16
or
mov
push
outsl
fistpl
clc
pop
xchg
inc
dec
test
stos
stos
jns
sub
in
push
mov
ficoml
enter
stc
pop
fcomip
test
push
mov
mov
enter
xor
mov
push
xlat
cmp
es
loopne
pop
ja
rorb
add
mov
sub
in
inc
loop
arpl
or
xchg
xor
push
push
xlat
jecxz
or
loop
pop
mov
fwait
push
pop
inc
jmp
into
call
pop
mov
xor
cmp
in
lret
test
pop
xlat
jecxz
shrl
ret
in
cli
xchg
mov
push
rcrl
enter
icebp
add
cmpsl
mov
dec
cmp
mov
test
sbb
add
xor
dec
xchg
pusha
sbb
outsl
lahf
clc
push
repnz
cmp
adc
loopne
outsl
mov
iret
mov
mov
push
cmp
pop
add
jno
cmp
test
mov
xchg
sub
xchg
cmp
dec
adc
insl
jmp
add
fs
ss
sub
pop
xchg
push
cmp
inc
sub
xchg
or
dec
xrelease
sbbb
mov
cwtl
out
scas
push
jo
jle
rolb
sub
in
push
rclb
imulb
sbb
jp
fistpll
or
xor
xlat
sbb
pushf
pop
push
and
pop
ja
insb
push
xlat
xchg
sbb
inc
icebp
lret
jnp
pop
scas
and
pop
mov
sbb
cmp
int3
jnp
mov
and
mov
cmp
xchg
popf
enter
adc
push
push
ret
or
bound
mov
inc
divb
insl
jge
xlat
ret
pop
shrl
mov
cmpb
out
push
mov
jo
mov
or
outsb
mov
xchg
sbb
pop
push
inc
xchg
movsl
mov
mov
inc
sqrtps
sub
movl
inc
dec
ss
hlt
jnp
lret
mov
jg
xchg
cli
pop
jns
mov
push
out
scas
lret
dec
pushf
pop
or
inc
inc
adc
mov
add
mov
mov
mov
lret
adc
lock
hlt
into
push
xchg
mov
clc
inc
popa
ret
cmp
ss
movsb
adc
sbb
mov
aam
push
adc
imul
lahf
repz
fwait
xchg
fsub
lods
shrl
xor
and
clc
jg
cld
adc
scas
mov
ja
inc
ja
mov
aaa
rclb
xchg
push
aam
sub
mov
into
xchg
test
movsl
test
fistps
sub
or
cltd
sbb
mov
pop
mov
sub
jnp
mov
sub
lret
sub
adc
xchg
mov
mov
push
cli
xchg
rcrl
mov
xchg
sub
pop
loope
int
pop
clc
pop
push
pop
sub
pop
sbb
lea
dec
or
sbb
pusha
into
lods
mov
aaa
push
push
js
adc
and
stos
and
fwait
inc
fnstcw
int3
dec
fs
xchg
sbb
call
insl
dec
aam
adc
nop
sub
lods
stos
outsl
out
inc
int3
cld
or
push
pop
insl
out
mov
arpl
int
push
sub
xor
fbstp
inc
mov
inc
notl
pop
mov
out
add
and
push
cmp
imul
pop
jo
xor
dec
adc
xor
leave
mov
or
fisttpl
fwait
jns
cltd
popf
jmp
shl
push
sbb
dec
inc
pop
pop
stos
mov
mov
ret
and
lahf
lock
sbb
clc
loop
or
sbb
leave
ret
neg
insl
inc
in
jbe
je
ret
cmp
mov
stos
test
mov
mov
lea
pushf
rcrl
stos
sbb
xorb
mov
lahf
sahf
cli
lock
jl
fwait
push
lahf
adc
negb
loope
std
jmp
cmpsl
arpl
jmp
lahf
out
push
fcoml
lea
jne
xlat
mov
test
movsb
fmull
movsl
jl
pop
mov
pop
fdivs
mov
sub
cmp
xor
fbstp
pop
loopne
jl
clc
ljmp
push
mov
add
jbe
inc
bnd
adc
xlat
insl
inc
cld
fs
mov
scas
and
mov
sub
fcomp
jle
sub
sub
sbb
pop
test
sarl
inc
and
pop
xor
mov
clc
mov
and
pop
lock
sub
dec
loopne
jae
xor
leave
pop
jns
cmp
pop
dec
les
test
mov
and
daa
test
fmuls
cmp
mov
insb
insl
js
or
fidivrs
xchg
sub
and
aaa
shll
mov
mov
sub
outsl
inc
test
cmp
and
and
add
inc
imul
shrb
adc
add
add
xchg
sahf
out
daa
int
pushf
or
movsb
mov
mov
or
cmp
adc
mov
test
jp
sub
pop
dec
pop
add
mov
mov
push
mov
and
push
icebp
fisttps
insb
xchg
aad
mulb
add
add
add
sbb
mov
ror
mov
outsb
xchg
fnstcw
jle
gs
xchg
int3
test
jge
mov
insb
jns
mov
lea
inc
lea
test
imul
xor
cld
xchg
popf
orl
sbb
lcall
xor
mov
mov
xchg
sahf
outsl
cmp
mov
dec
jnp
jbe
popa
push
inc
ret
adc
add
stc
push
outsl
xor
test
sbb
sub
outsl
scas
pop
mov
sub
and
cmp
sbb
pop
xchg
test
mov
repz
dec
pusha
add
adc
xchg
movsl
dec
data16
xchg
loop
adc
xchg
in
pop
lret
sub
push
sub
xor
jae
jae
or
push
adc
loope
mov
insb
out
push
ss
jae
addl
shl
gs
mov
mov
xor
lea
ljmp
les
lahf
out
ljmp
test
imul
hlt
fwait
dec
sub
cmc
jle
and
loopne
mov
mov
lret
clc
inc
lahf
fstl
mov
outsb
ds
inc
popa
mov
jle
cmp
adc
add
dec
jmp
inc
clc
out
push
jnp
inc
fwait
das
mov
lods
fs
dec
pop
add
aad
lods
pop
cmp
repnz
push
mov
rclb
nop
mov
cmpsb
or
push
cmp
add
pop
rcrb
hlt
fiadds
out
popa
daa
js
cli
inc
hlt
ret
push
xchg
imul
cmp
imul
lock
mov
out
ret
mov
sub
out
sbb
mov
and
insl
lahf
adc
jg
shll
mov
jp
fadds
loop
push
test
mov
pushf
fdiv
lock
aad
in
int3
xor
test
push
flds
and
inc
push
ja
or
fcmovb
daa
sub
or
adc
pop
das
test
xorl
out
imul
data16
push
adc
lods
dec
aam
lods
rep
sti
or
jle
lods
push
dec
pop
cmp
cmp
xchg
lahf
inc
into
mov
test
fwait
sbb
xchg
arpl
xor
push
and
rolb
mov
mov
iret
fsts
jle
pop
pusha
cwtl
fsqrt
clc
pop
ljmp
fisubrl
notl
imul
jl
dec
mov
mov
push
repz
adc
ja
test
sbb
push
cmp
sbb
cmp
ss
sbb
jmp
repnz
push
jnp
movsb
loop
add
add
mov
and
push
inc
in
push
les
fwait
add
fisttpl
xor
test
test
or
cmpsl
cvtdq2ps
xchg
cmp
aaa
out
push
xchg
pushf
subl
jle
lret
mov
push
dec
sahf
cmp
daa
xchg
pusha
mov
fimull
iret
imul
stc
xchg
pop
cwtl
rol
jno
call
mov
int
xchg
push
cmp
flds
xchg
mov
push
stc
fmuls
in
ss
arpl
mov
mov
fisttpl
inc
or
repz
jecxz
mull
cmc
fnstsw
jbe
add
dec
movsb
dec
imul
add
enter
xor
dec
push
out
dec
xchg
or
and
xchg
xchg
jmp
data16
in
cwtl
gs
sub
lret
adc
adc
lea
lcall
mov
iret
fsubrl
dec
mov
ror
mov
sbb
dec
dec
add
inc
mov
test
ja
mov
pusha
mov
xchg
xor
sbbb
int
add
imul
mov
dec
cmp
pushf
jg
test
mov
xchg
daa
lea
add
aaa
mov
aam
test
call
push
and
sub
les
inc
ror
insl
dec
jno
jbe
imul
pop
and
fwait
mov
add
mov
fs
addl
cwtl
std
mov
arpl
scas
imul
mov
movsl
and
ja
and
push
mov
test
cld
sub
mov
mov
and
jae
pop
fwait
push
dec
sub
or
push
stos
sbb
jle
repnz
jle
mov
test
dec
cmpsl
arpl
rcrl
faddl
cltd
mov
xchg
in
lret
sub
std
jbe
xchg
out
testl
popf
and
xchg
dec
daa
jno
lods
popa
mov
mov
jnp
fs
sti
adc
jns
out
das
or
jecxz
rep
inc
push
lcall
or
dec
lret
xorl
inc
add
xor
sub
mov
sub
add
enter
aad
add
sahf
ret
out
cmp
aam
addr16
or
lods
jbe
and
xor
test
idiv
lds
shrl
inc
lret
xor
push
mov
and
aaa
cli
or
sbb
mov
push
xchg
pop
jbe
or
xchg
clc
mov
movsb
jl
adc
out
sub
mov
xchg
jne
cli
adc
xlat
mov
lea
push
nop
fists
insl
jle
xorl
push
mov
ljmp
push
rclb
std
jbe
xlat
jno
ljmp
mov
mov
in
xor
movsl
shll
sbb
test
sbb
lock
cli
jne
ss
sbb
sbb
pop
mov
xor
sub
mov
jp
sub
cmc
repz
mov
or
lret
scas
push
js
repz
adc
xchg
loopne
daa
lcall
unpcklps
pusha
scas
shrb
das
insl
sub
outsl
cs
push
int3
out
shl
cmp
add
dec
aas
test
adc
fucomip
loop
es
inc
push
and
jecxz
cmp
sbb
mov
xchg
jg
push
dec
dec
push
mov
test
and
push
sub
shlb
xchg
add
adc
cmpsl
fnsave
cmp
test
data16
mov
cmc
dec
sub
xchg
jp
cmp
and
jle
in
cmp
mov
dec
sbb
cli
mov
sub
jo
mov
sbb
mov
adc
test
filds
push
fnsave
mov
or
fs
lea
mov
je
push
lods
das
sbb
cmp
mov
mov
fidivl
outsb
mov
inc
shll
leave
pop
in
and
lods
inc
adcl
icebp
mov
les
and
les
and
mov
imul
adc
jo
push
or
inc
adc
sahf
push
push
lock
repnz
pop
into
pop
pop
inc
out
es
mov
adc
in
mov
dec
pushf
mov
xor
pushf
gs
in
leave
or
subb
fbld
scas
mov
fcomps
adc
push
push
and
gs
out
mov
rolb
cmp
into
cs
shr
jb
dec
test
add
fisubl
mov
scas
jg
fists
cmp
pop
push
xchg
adc
jmp
mov
push
scas
xchg
sbb
les
jo
cmpsb
fists
das
cmp
sub
xchg
sub
aad
out
test
outsl
in
jle
dec
andl
sbb
lea
insb
xchg
lock
xor
jne
sahf
xchg
testb
pop
movsl
and
out
faddl
int
call
div
sub
fildl
mov
jo
adc
push
repz
out
insb
jne
sti
jne
push
cmp
jle
adc
iret
inc
mov
sub
or
xor
push
push
clc
shrb
and
dec
xchg
xlat
xchg
dec
ret
and
xchg
or
rorl
mov
cmp
and
mov
adc
clc
pop
mov
ja
loop
xchg
pop
jbe
aam
xchg
or
pushf
mov
cmp
xchg
scas
push
les
fwait
adc
sti
mov
std
adc
mov
out
xor
hlt
mov
or
ljmp
adc
rcll
sbb
imul
es
fwait
push
add
lahf
mov
ret
loop
stc
cwtl
mov
push
cmp
mov
daa
mov
pop
mov
jecxz
xchg
sub
jb
or
out
enter
cmp
push
cmp
fidivrs
jnp
and
inc
hlt
lods
or
sbb
adc
mov
sbbb
and
cmpsl
push
mov
or
insl
loope
inc
pop
idivb
lret
mov
fstp
fbstp
test
sbb
push
insb
dec
pushf
add
dec
xor
dec
xor
cmp
mov
fwait
xchg
lret
jl
xlat
fs
lock
dec
xor
mov
in
push
and
jbe
into
push
push
xorl
stos
pop
jae
xor
les
mov
rcl
jmp
sbb
inc
xchg
sub
movsl
mov
sub
xchg
lods
pusha
jle
popf
sbbl
add
jge
nop
movsl
pop
fwait
mov
or
mov
hlt
cld
inc
imul
js
adc
mov
aaa
jo
rclb
lahf
ret
pop
jg
push
inc
dec
or
or
clc
insb
in
push
inc
xchg
mov
inc
mov
push
repz
adc
clc
xor
ds
fadd
sbb
stc
or
mov
dec
dec
push
cmp
outsl
popf
sbb
and
imul
fsubrl
cli
inc
into
adc
movsb
fildll
xlat
cmpsb
or
cld
aad
lock
adc
outsb
fwait
push
aam
sub
add
jbe
mov
lods
inc
setnp
cvtpi2ps
imul
subb
add
or
in
or
inc
out
or
mov
out
jae
or
icebp
gs
xor
repz
sub
xchg
jp
mov
dec
push
mov
xchg
int3
sarb
jge
int
and
pop
sahf
hlt
xor
sub
out
jmp
xchg
jbe
add
leave
jmp
sbbl
ss
or
repz
inc
and
xchg
insl
xor
inc
aas
and
mov
xchg
loope
lock
dec
lods
adc
loopne
push
and
and
lock
cmp
mov
add
mov
mov
ss
int
or
rcrb
pop
cld
and
inc
dec
mov
adc
into
cld
xor
cmp
fiaddl
push
push
mov
sahf
cmp
ja
jne
mulb
ds
insb
nop
add
mov
push
stc
rorb
push
or
fistpll
jb
mov
enter
test
leave
add
mov
push
cmp
push
xor
enter
movsb
insl
lea
notb
sub
sub
rcrl
pop
out
mov
stos
dec
orl
xor
into
sub
xchg
inc
and
ss
nop
js
sbb
jle,pn
lods
sub
push
mov
insb
js
movsl
and
mov
or
ret
xchg
test
fwait
sub
scas
loop
pop
and
cltd
rclb
pop
js
and
mov
dec
mov
jl
lea
std
sbb
test
pop
mov
shlb
cmp
shrl
mov
sbb
jae
lods
ffreep
sbb
xchg
xchg
xchg
in
push
mov
int
mov
add
adc
out
mov
mov
gs
mov
std
or
mov
stos
pop
stos
les
leave
dec
dec
rol
inc
jmp
pop
es
pop
pop
movsl
enter
mov
test
ljmp
dec
lock
rorb
xor
popf
xlat
clc
movsb
rorb
push
jg
rorl
in
repnz
test
mov
xchg
outsl
sbb
inc
sbb
adc
cwtl
xchg
adc
repnz
sti
jb
xor
addb
pop
jbe
divb
mov
test
adc
ss
out
dec
mov
push
inc
xchg
fnstcw
and
dec
mov
in
lods
xchg
xor
negb
fwait
sbb
insl
push
pop
xchg
add
das
xor
xchg
mov
sti
adc
call
aad
out
dec
inc
fdiv
xchg
sti
push
adc
pop
into
das
lahf
mov
sub
ljmp
push
inc
cmp
xor
xor
jecxz
sub
loopne
icebp
test
jg
mov
jmp
cmpsb
sbb
in
sbb
test
rorl
xor
xor
mov
aad
mov
in
daa
mov
cmove
mov
andb
inc
orb
mov
sub
outsl
pop
imul
subl
xchg
push
icebp
sbb
scas
dec
icebp
daa
mov
jnp
test
in
push
int3
mov
push
dec
mov
mov
pop
lahf
xchg
hlt
das
pop
push
out
mov
mov
out
mov
sarl
fwait
xor
inc
sub
mov
daa
push
lods
and
inc
and
or
mov
jno
push
xchg
xor
lret
fs
shll
pushf
pop
mov
scas
mov
xchg
mov
dec
jae
loopne
dec
push
or
cmp
mov
ds
testb
jns
adc
or
push
cmp
outsb
inc
sub
fiadds
dec
inc
out
arpl
jnp
adc
jmp
xor
mov
bound
add
push
sbb
pusha
cmp
mov
daa
pop
fsubrl
inc
hlt
insb
xchg
jecxz
dec
adc
cmp
cwtl
es
cmp
mov
notl
mov
cld
dec
sbb
pop
aad
mov
xchg
pop
push
insl
stos
cmpsl
push
add
faddl
or
xor
adc
pop
and
jbe
push
dec
cmp
jl
out
lods
aas
addb
outsb
jo
outsb
jnp
js
outsl
lea
movb
sub
xor
dec
sahf
pop
sbb
mov
jb
hlt
aaa
add
into
fnstcw
sub
mov
xchg
mov
push
xor
div
fstps
lahf
jne
cs
adc
or
ror
or
shll
inc
xchg
lcall
or
pop
jl
sti
cmp
ja
aad
dec
cmp
cmpsb
mov
cmp
les
jo
or
lea
sub
scas
dec
sbb
mov
or
jp
out
sbb
les
lcall
dec
rclb
dec
xlat
push
shll
leave
add
mov
and
insl
orb
fcmove
test
in
cmp
inc
fs
lret
aaa
dec
xor
rcrb
cmpsl
jle
xchg
leave
movsb
add
mov
daa
mov
sub
xchg
dec
fwait
jne
lods
mov
sbbb
and
int3
xlat
jo
sti
jp
shll
or
mov
ljmp
mov
rolb
pushf
cwtl
ss
repz
cmp
inc
pop
add
pop
jecxz
add
xchg
and
pop
jmp
or
jnp
dec
mov
xchg
jbe
fildl
cmp
and
test
pop
jmp
lret
add
subb
pop
jecxz
pop
xchg
cmp
mov
mov
sub
out
pop
stos
out
lds
lret
fmuls
lock
lret
sbb
sub
xor
ret
fimuls
and
fisubs
aaa
xchg
inc
fs
lret
out
push
sti
mov
dec
ljmp
movsb
jo
cs
mov
sub
cmp
xorl
xchg
mov
cmpsb
scas
or
jmp
cltd
out
xchg
jl
cwtl
inc
arpl
clc
jnp
jmp
mov
jbe
imul
or
and
test
jge
les
inc
dec
aad
mov
imul
xor
rcll
sub
inc
mov
out
jne
mov
jo
xchg
cs
inc
test
imul
jno
jle
mov
popf
mov
les
sarl
mov
enter
loopne
decl
sahf
sbb
add
jge
jnp
push
pusha
lods
pop
mov
mov
mov
shlb
xchg
icebp
loopne
cli
loop
insb
shl
or
pop
cs
gs
mov
dec
mov
dec
mov
enter
sub
out
push
jns
and
mov
and
inc
pusha
jo
add
aam
xchg
js
mov
jno
or
and
testb
pop
stos
divl
je
push
push
mov
pop
mov
pop
sbb
and
sub
adc
adc
fldcw
xchg
sub
adc
insb
jns
fidivl
dec
cmp
jecxz
into
cli
in
scas
aad
lds
mov
push
cmpsb
lock
jno
add
mov
cmpsl
adc
aaa
call
dec
ficompl
dec
movsl
ljmp
cmpsl
in
out
push
mov
mov
xchg
repz
xor
andl
xlat
orl
fimull
inc
fsubp
cmpsb
mov
ret
call
andb
add
sub
out
cltd
mov
loop
add
pusha
jne
sub
cld
pop
jle
xchg
push
ss
xor
popa
adc
fnstcw
stos
mov
insb
aam
outsb
jcxz
sbb
pop
bnd
jl
and
jmpw
add
mov
or
les
jno
fwait
cwtl
push
mov
jbe,pn
inc
cli
sub
inc
lret
or
lret
sub
aad
fldl
adc
arpl
aas
push
inc
test
stc
mov
imul
and
mov
lret
shrl
cmp
xor
addb
xchg
scas
movl
into
aam
fst
loopne
sbb
inc
and
push
push
dec
and
inc
jns
stos
pusha
in
bound
inc
clc
aas
test
dec
insl
aas
popl
and
test
lret
mov
in
jae
cmp
mov
das
mov
inc
adc
mov
rcl
test
dec
repnz
and
mov
mov
lods
dec
loopne
mov
lret
sub
in
mov
std
setg
jl
fcomip
xor
loopne
mov
cmpsb
add
jmp
lods
add
push
sbb
xchg
mov
pop
shlb
in
inc
add
sub
add
fidivs
adc
mov
dec
lods
add
mov
jp
inc
pop
data16
std
and
fnsave
jge
daa
popa
mov
outsl
push
cmpsb
jmp
fwait
lock
out
int
lea
stc
cmp
icebp
cmp
call
loopne
js
or
insl
adc
inc
jb,pn
mov
aad
subl
das
adc
scas
pop
imul
xchg
and
rcll
cmovbe
lods
fidivrl
stos
mov
jle
stos
enter
jecxz
mov
add
js
sbbb
and
ds
in
mov
pop
icebp
fs
jecxz
loop
fnstenv
xchg
or
push
push
push
mov
jnp
les
shll
testb
cmpsl
fcmovbe
push
lock
mov
or
push
loop
testb
inc
mov
inc
rolb
push
scas
pop
test
and
push
outsb
stos
mov
adc
and
bound
jne
and
add
xor
ja
rolb
mov
imul
rorl
cmp
pop
jge
and
mov
jae
inc
addr16
lods
mov
xchg
loopne
cmp
dec
mov
jnp
lods
cmc
addr16
es
jo
out
les
fisubl
mov
jecxz
leave
push
aam
cltd
and
icebp
iret
dec
xor
cmp
jmp
sti
mov
or
fadd
adc
jo
std
fsubrp
pop
fwait
xchg
popf
sbb
or
fists
in
or
xchg
dec
push
popf
pushf
ss
add
int
sub
cmp
jl
pop
and
adc
mov
outsl
pop
pop
cmpsb
das
cli
or
mov
daa
mov
push
xlat
call
xorps
mov
ja,pt
frstor
jb
insb
push
adc
loope
ja
fsubr
fadd
sub
mov
xchg
sub
shll
ss
push
repnz
ja
imul
ja
into
jle
dec
dec
in
enter
and
and
mov
xor
sub
decb
dec
fisttps
fbstp
mov
jns
mov
test
mov
test
push
cmc
lods
in
inc
mov
aad
mov
push
inc
jo
adc
inc
cltd
test
dec
add
dec
test
div
cmpsl
adcb
inc
sub
lcall
rcrl
pushf
mov
inc
mov
and
fstsw
jo
jb
push
mov
inc
add
cmp
mov
mov
js
sahf
es
mov
jmp
jb
push
xor
stos
out
jmpw
push
xor
dec
hlt
ss
mov
in
xor
xor
sub
mov
sub
mov
sbb
add
inc
mov
inc
jnp
lcall
mov
push
repz
rorb
add
dec
loope
test
int3
andl
or
lret
jbe
mov
inc
sub
sahf
and
sbb
mov
loope
inc
ljmp
push
push
mov
scas
loope
icebp
push
arpl
enter
jg
rcrl
inc
shlb
cmp
pop
mov
idivb
push
inc
stos
lea
jle
fimull
or
mov
xor
push
int
cld
es
ja
adc
or
stos
lds
lds
insb
fs
mov
add
es
mov
loope
fisubrs
lahf
pop
mov
sub
or
or
enter
sub
jns
adc
sub
sarb
testb
shrb
dec
js
aas
cld
push
xchg
out
or
rcrl
frstor
inc
jnp
gs
rclb
mov
pop
push
in
mov
lock
andb
movsb
pop
mov
std
xlat
jg
scas
push
jl
fs
bnd
pop
mov
fst
adc
inc
dec
xor
icebp
jp
cmp
ja
push
jle
add
push
aam
ds
jno
mov
aad
dec
adc
out
xchg
jb
jge
ss
jb
push
mov
pop
push
or
fisubs
mov
inc
out
push
aam
dec
stc
xchg
clc
shrb
ret
jg
ds
and
pop
out
xchg
cmp
lods
mov
jno
rcrl
sub
jecxz
push
jno
popa
addr16
out
imul
sbb
lret
cmpsl
sub
dec
jecxz
shrb
sti
push
pop
movsb
lods
mov
mov
cmp
inc
adc
pop
sub
sub
mov
cltd
es
and
lea
lret
pop
enter
cmpsl
fptan
xchg
xor
sub
xchg
inc
xchg
movsl
cmp
or
add
cmc
loopne
negb
adc
pop
iret
lock
addr16
ds
xchg
xchg
out
jnp
js
lods
sahf
sbb
pop
imul
jmp
jg
ljmpw
or
lock
cmc
push
test
cmp
inc
or
repz
aad
jne
mov
fimuls
jne
cs
decl
or
insl
mov
inc
cmp
or
daa
mov
xorb
adc
push
stos
sub
in
jne
inc
jns
jb
popf
pop
fisttpl
loopne
movsl
inc
iret
call
repnz
outsb
in
pop
cmp
orl
fwait
or
stc
cmp
sahf
mov
sub
repnz
jo
test
insl
adc
xchg
in
jnp
inc
mov
adc
mov
mov
cmp
addb
test
addr16
shlb
int3
sahf
xchg
in
jne
and
aaa
popa
or
jp
add
lret
mov
cmp
roll
cmp
cmpsl
test
out
jae
xchg
push
aam
push
mov
sbb
repz
sti
iret
xchg
adc
sub
jne
cmp
mov
add
dec
popf
sub
pop
mov
mov
jle
and
sub
aas
popf
mov
insb
fst
add
dec
dec
cmpsb
aaa
call
lret
dec
inc
pop
pop
push
xlat
adc
repnz
push
push
jns
fildll
sbb
dec
dec
out
cmp
inc
lods
insb
pop
lock
gs
sbb
and
icebp
in
dec
xchg
sub
js
add
or
mov
int
ss
mov
push
push
pop
int3
fs
add
int
xchg
loope
in
daa
testl
mov
iret
aam
pusha
aad
sub
stos
add
push
cltd
push
mov
dec
ss
cltd
loopne
dec
cmpsb
bound
out
dec
mov
mov
stc
sbb
in
dec
mov
pop
cmp
push
jge
cwtl
push
js
jae
inc
inc
or
push
inc
xchg
mov
popa
pop
std
iret
sbb
xor
dec
pushf
lods
rclb
je
scas
insb
lods
aad
lcall
push
ss
and
test
lock
pop
popf
lahf
in
call
stc
rolb
arpl
xor
add
xor
push
pusha
pop
push
ret
dec
fidivrl
pushl
pop
sub
ds
add
pushf
xor
and
jne
pop
cmp
andl
aad
push
inc
out
mov
out
fs
cs
sahf
jne
or
mov
mov
bound
fidivrl
adc
sub
xlat
mov
repz
movsl
jbe
mov
push
xor
sbb
sbb
cmp
add
in
aaa
pop
idivb
loop
mov
stc
sbb
rolb
mov
xor
sub
repnz
scas
ljmp
or
xchg
addb
xchg
popf
mov
lock
xchg
sbb
orl
mov
in
jle
add
insl
pop
popa
adc
pop
xchg
aad
push
cltd
cmp
inc
lods
cltd
xchg
jno
cs
lcall
push
adc
test
sbb
jnp
cli
push
and
mov
jne
loop
push
jnp
xor
loopne
lods
lock
push
xchg
inc
add
fimuls
pop
adc
loop
out
mov
stos
sahf
arpl
loop
shl
lock
mov
pop
cmp
jae
test
imul
ja
mov
out
aam
fstpt
pop
mov
test
stos
addb
sub
mov
fisubrl
ss
or
cmp
sbbl
orb
xor
dec
aam
bound
mov
mov
lock
loopne
push
cs
inc
nop
mov
ljmp
cld
testl
sbb
push
gs
repnz
cli
sub
test
cmpsl
ja
popf
jb
loopne
and
and
cmp
inc
imul
adc
mov
js
test
pop
lods
inc
push
mov
dec
lcall
cmp
xchg
mov
or
ja
jecxz
push
xchg
ret
sbb
js,pt
jle
pushf
dec
insl
xchg
add
dec
jns
mov
sub
push
sbb
fisttps
lahf
jecxz
push
leave
and
adc
pushf
fdivrp
xor
ret
or
out
cld
js
lea
js
jo
sbb
sbb
stos
test
repnz
ret
dec
addb
dec
lods
mov
xchg
or
sbb
fwait
push
or
xchg
icebp
pop
push
jle
popl
or
fcomp
fisttpl
std
in
xchg
enter
push
add
jl
jo
cmpsb
lret
xor
xchg
xor
jo
outsl
mov
dec
pop
fiaddl
bound
mov
fs
lds
add
cltd
and
pop
adc
sarl
push
inc
cltd
push
icebp
outsb
add
push
addl
lea
mov
bound
jl
loopne
lods
cs
inc
cmp
iret
inc
out
imull
dec
lcall
jbe
or
cmp
mov
pop
sbb
xlat
out
add
sbb
ret
and
pushf
fs
insb
repz
and
fs
scas
rcrl
jo
jecxz
leave
and
pusha
jbe
into
mov
cli
push
scas
cmp
mov
mov
inc
push
mov
out
test
sub
in
cmp
mov
push
movsb
mov
or
dec
and
lds
cli
push
ficoms
cmp
pop
and
paddb
int3
cmpsb
inc
jge
out
mov
sbb
lret
cwtl
dec
adc
in
push
cmp
shrb
insl
rcr
push
into
scas
dec
aad
push
out
push
push
lea
je
es
je
xlat
pop
loop
push
jle
mov
out
loopne
jg
std
ljmp
outsb
mov
nop
mov
sbb
pop
fwait
pusha
andl
xchg
test
pop
call
sbbb
cmp
xchg
into
and
pop
inc
jmp
or
inc
jae
inc
mov
sbb
cli
or
stos
cmpsl
nop
sub
sub
nop
arpl
outsb
js
lret
bound
mov
icebp
inc
andl
stc
and
mov
cmp
jo
cmp
push
push
jl
lcall
test
mov
testb
gs
movsb
in
jge
mov
das
stos
push
pop
in
mov
pop
in
and
stos
aas
dec
add
jb
hlt
jae
sti
hlt
cli
mov
popa
int3
or
or
jge
imul
pop
stos
and
add
loopne
rcl
mov
mov
in
pop
mov
pop
adc
mov
ret
fs
pop
adc
pop
lods
or
cli
adc
leave
lods
fwait
mov
out
push
sub
ja
fidivrl
dec
jp
adc
in
push
lret
test
mov
pop
mov
xlat
pop
pop
cmovbe
lds
sbb
std
inc
push
cmp
fstpl
jle
repz
lods
iret
cmp
pop
ret
adc
mov
add
or
xor
scas
mov
fwait
test
xor
repz
inc
pop
imul
sahf
xchg
mov
gs
xor
mov
mov
pop
jle
cmp
call
adc
push
inc
popa
and
cmp
call
lock
scas
hlt
jmp
inc
out
mov
or
fcmovu
loop
mov
jmp
jl
sbb
jge
dec
or
lahf
cltd
push
test
jl
out
lods
std
jmp
jge
lea
fdivl
mov
addr16
jmp
aaa
pop
pop
inc
inc
test
push
enter
push
mov
mov
sub
dec
mov
xor
rolb
test
inc
dec
test
lea
dec
jmp
cmc
into
jae
add
mov
int3
pop
ret
push
xchg
push
inc
arpl
cmp
and
xor
test
mov
incl
rorl
dec
xor
frstor
sub
stc
imul
xlat
and
movsb
lret
flds
ss
push
xchg
rolb
sbb
out
cmp
inc
shrl
mov
inc
ss
js
jae
xor
mov
mov
xchg
sbb
cltd
decb
ffree
xor
sub
cli
push
scas
push
imul
and
lahf
jno
push
mov
mov
rclb
push
jno
mov
daa
mov
loopne
enter
adc
scas
test
or
test
push
xor
stos
and
fdivp
cmp
push
inc
dec
mov
cmp
sbb
adc
fs
lret
test
int
push
pop
insl
fwait
jmp
ficomps
mov
in
out
ret
sarb
jecxz
jle
xchg
or
inc
aas
xchg
lret
adc
outsl
or
cmp
cmp
int3
es
hlt
stos
je
add
mov
int
xor
out
cmp
xor
mov
jae
bound
sbb
fneni(8087
push
push
or
adc
sar
jle
jmp
xor
rcr
jmp
mov
orps
push
mov
in
ret
add
xchg
sbb
cmp
add
inc
lea
into
imul
pop
stc
inc
inc
add
loopne
out
xchg
sub
test
movsb
inc
call
sbb
jg
out
cmp
sub
scas
inc
sbb
ret
and
inc
pop
movsb
mov
icebp
or
scas
push
inc
jmp
pusha
dec
cmp
mov
gs
and
and
sahf
ja
into
cmpsb
pop
inc
nop
out
pusha
mov
ljmp
fldcw
sub
or
and
loop
pop
lock
cmpsl
insb
mov
adc
inc
pusha
push
mov
xorb
loopne
aad
testl
jnp
push
add
sbb
fneni(8087
and
sub
loopne
xorb
mov
mov
in
and
xchg
xchg
inc
js
fsubrs
xchg
orb
cwtl
rcrb
cli
rolb
outsb
sbb
jmp
mov
push
push
lret
and
push
loopne
mov
les
in
push
pop
add
sahf
push
dec
stc
cmc
fcom
call
xor
ss
and
scas
lcall
mov
xor
aaa
jl
ret
mov
sub
dec
dec
dec
add
push
push
push
xchg
xor
orl
or
dec
outsl
push
out
cmp
lods
mov
adc
sub
lahf
out
dec
jle
push
inc
fdecstp
lret
push
lcall
jl
mov
lds
xchg
cmpsb
dec
jmp
and
mov
std
jbe
xchg
negl
pop
xchg
xchg
jne
clc
pop
sub
clc
cmp
pcmpeqd
cmp
push
pusha
jo
mov
lock
lret
add
pop
sti
jl
mov
mov
mov
push
int3
clc
andb
adc
lret
cwtl
lds
leave
adc
rcll
lahf
in
xor
sbb
ss
xorb
or
cs
outsl
push
and
insb
add
xchg
sarb
and
shlb
mov
lods
sbb
dec
sub
iret
adc
push
dec
dec
push
push
in
cmc
pusha
addb
adc
xchg
push
bound
scas
fsubl
or
xchg
orl
stos
jns
jp
jmp
push
dec
xchg
xchg
in
add
int
andb
lods
sub
shll
mov
stos
xorl
adc
or
imul
fldenv
push
jnp
shl
jle
mov
std
enter
mov
pop
adc
ja
jnp
js
fwait
or
int3
out
lahf
jge
jnp
lods
gs
fcompl
jg
ja
pop
gs
in
int3
ret
mov
xchg
sbb
sbb
pop
push
jns
lret
mov
pop
xchg
cltd
push
stos
insb
xor
sti
ljmp
xor
inc
jge
out
shlb
shrl
addb
mov
add
enter
inc
jp
imul
popf
into
inc
mov
xlat
out
pop
sub
mov
xchg
lods
mov
shrb
lds
fwait
dec
pop
push
mov
iret
in
adc
stos
shrl
fimuls
mov
inc
outsb
mov
cmp
and
ds
stc
rol
scas
psubusb
adc
arpl
push
mov
xchg
mov
loopne
pushl
fistps
lret
loop
std
insl
shrb
mov
jnp
jmp
jmp
mov
popf
push
lods
push
inc
adc
and
fcoms
loopne
add
bound
call
mov
pop
stos
cwtl
scas
arpl
mov
jae
movsl
adc
cmp
adc
jg
stos
stc
repz
test
shlb
sahf
in
stc
test
fsubl
lea
in
call
add
xor
mov
addl
sub
sti
int
gs
sub
cld
or
ds
push
test
mov
lds
dec
cmc
in
or
outsb
dec
pop
cmp
dec
insb
fisubrl
sahf
in
inc
sub
jb
pusha
inc
xchg
push
sub
addl
jecxz
in
lods
fdivrl
shll
and
icebp
xchg
push
and
cmp
jb
addr16
fists
adc
dec
jne
adc
fcmovb
jne
sahf
mov
cmpsl
mov
into
mov
pop
aad
stc
out
adc
out
pop
mov
push
adc
pop
xor
cmpsb
sub
ret
rcrl
arpl
mov
dec
dec
lock
push
dec
add
cmp
xbegin
orl
cmp
push
xor
scas
fldcw
pop
sbb
inc
fsubrl
lods
xchg
jg
jo
scas
outsb
mov
repnz
pop
out
xor
aaa
je
fisubrs
negl
repz
jno
mov
int3
lea
mov
sub
pop
std
or
pushf
push
je
sbb
mov
sbb
sub
and
ret
or
scas
xchg
incl
inc
les
jmp
dec
or
inc
xchg
lods
dec
js
xchg
ret
cmp
aaa
cmp
xchg
mov
pop
stos
adc
stc
push
lock
push
daa
jnp
dec
dec
adc
in
jno
out
cmc
add
inc
out
xor
pop
push
xchg
and
or
mov
push
xchg
out
add
inc
rcr
ficompl
cmp
insb
lock
push
and
mov
dec
xlat
jo
xchg
or
mov
cmpsl
adc
dec
dec
xor
cmp
shll
out
dec
jl
dec
mov
adc
dec
inc
jge
xchg
jne
dec
popa
pop
xor
sbb
sub
adc
jae
enter
xchg
xor
bound
mov
xchg
push
dec
cmc
lods
ljmp
adc
cmp
xlat
pop
adcl
dec
jp
sbb
enter
jne
mov
stc
sbb
push
lret
jns
xor
dec
ret
nop
lahf
dec
push
in
dec
dec
dec
fimuls
mov
popa
pop
sub
xor
sbb
inc
hlt
lret
pop
in
xor
push
push
mov
incb
jno
js
mov
test
sub
aaa
ljmp
repz
dec
lret
fsubrs
dec
ja
aaa
jns
or
xchg
add
lahf
pop
aas
push
insb
iret
add
cmp
cmp
ja
fistps
cmp
or
and
or
roll
xor
push
pop
cmp
mov
or
jae
push
imul
mov
dec
dec
in
sbb
pop
loope
xor
outsb
jge,pt
pop
ficoms
mov
xchg
inc
mov
dec
ljmp
cmp
cwtl
cld
es
insb
nop
adc
mov
xor
jbe
mov
dec
ljmp
cltd
dec
mov
jne
mov
sub
sahf
inc
push
lods
sub
and
mov
push
adc
sbb
jg
in
pop
push
insb
and
adc
jns
xchg
xor
push
cmp
jp
pusha
push
cmp
xor
jmp
push
lods
sbb
cmpl
mov
add
in
outsb
adc
jle
adc
push
sub
sub
lock
cmp
mov
jns
lahf
jno
pop
addr16
jb
sub
inc
jns
shll
das
stos
insl
shll
add
in
inc
sub
ret
jbe
inc
cld
inc
inc
insb
mov
and
cmp
xchg
jg
push
fsubl
test
out
push
and
and
jnp
lods
imul
cli
std
mov
notl
mov
out
popf
ljmp
aaa
mov
inc
test
call
push
out
pusha
mov
into
cmpsl
and
lret
loopne
fstps
xchg
popf
pop
and
jmp
idivl
cwtl
sti
dec
insb
inc
sub
shl
push
data16
cltd
cmp
in
decl
dec
xchg
rorl
and
jmp
sub
nop
imul
mov
jge
rol
arpl
sub
je
cmp
leave
mov
test
cmpsb
andl
test
jle
push
sbb
int
sbb
cmp
sbb
cmp
lcall
pop
dec
scas
mov
incb
xor
mov
out
sub
outsb
add
ja
aaa
adc
cmp
arpl
lret
push
mov
fldl
push
stos
mov
in
movsl
inc
mov
ret
add
cld
adc
push
adcl
pop
mov
lret
pusha
es
dec
out
jle
inc
push
mov
insb
sahf
bound
out
jne
sahf
push
pop
push
xor
aas
sbb
loope
cmp
cltd
outsb
fnstsw
in
lds
pop
or
sbb
cmp
jno
ret
push
div
add
push
adc
mov
mov
arpl
adc
sbb
xchg
sub
ret
sub
pop
add
jg
enter
pop
iret
dec
ds
mov
or
mov
pop
loop
mov
daa
enter
movsb
lcall
adc
cs
lcall
lods
dec
mov
push
mov
cs
popa
fcmovne
loop
jecxz
adc
jno
inc
fwait
inc
mov
push
xchg
xor
cwtl
xchg
aaa
mov
xlat
outsl
pop
js
jl
fsubrp
xor
jne
sbb
rcrb
imul
adc
inc
mov
xchg
and
xchg
cmp
inc
inc
sub
xor
movsb
xorb
iret
test
cmpsb
or
push
mov
cmp
mov
sub
notb
das
adc
aam
jecxz
pusha
repz
or
adc
lcall
les
mov
cmovne
test
mov
mov
adc
aad
dec
in
inc
roll
and
push
xor
incl
cmp
pusha
xchg
loop
fs
sbb
aas
fstl
cmp
xor
jg
add
test
push
sti
push
mov
popa
mov
sbb
je
mov
aad
mov
mov
dec
in
push
inc
cld
jb
sti
xor
push
rdtsc
pop
hlt
fildll
jmp
mov
cs
and
call
xor
dec
xchg
test
and
or
mov
das
xchg
adc
xchg
or
ret
xchg
and
or
loopne
push
lret
dec
inc
movsl
xchg
loop
pop
and
lock
sbb
or
insb
cmp
mov
and
mov
out
jg
and
lret
cmp
xlat
or
lea
lds
adc
mov
jnp
mov
std
lds
xchg
dec
lcall
mov
sbb
pop
push
stos
and
jno
dec
mov
outsl
add
rol
neg
sub
nop
call
dec
sbb
push
push
push
pop
adc
sbb
jae
movsl
pop
pmulhw
mov
fadds
mov
arpl
loopne
arpl
lahf
adc
xchg
enter
dec
jl
lock
mov
add
ljmp
mov
out
movsb
pop
fs
ljmp
mov
add
and
repnz
loopne
sarb
int3
cmp
push
or
and
dec
mov
push
adc
jl
test
sub
das
or
gs
pop
fcoml
shlb
xlat
jle
jno
fists
dec
adc
imul
inc
inc
xchg
mov
cmp
gs
out
loopne
iret
pop
imull
pusha
int3
pop
adc
and
in
imul
out
jmp
jo
inc
pushf
insl
mov
mov
push
inc
test
mov
inc
push
fldt
pop
dec
ja
xor
sbb
ret
inc
mov
loop
cld
out
jl
fisubrl
rolb
nop
icebp
iret
cwtl
xchg
movups
xor
add
clc
outsl
ljmp
icebp
jmp
mov
fldcw
insb
mov
test
jmp
mov
mov
sub
lret
pop
cmp
xor
jg
call
leave
cmp
leave
out
popa
mov
mov
les
sarl
push
dec
add
gs
lods
ficomps
addr16
bound
mov
push
ret
mov
jo
js
mov
mov
push
pop
bswap
push
add
mov
out
sarl
sub
xchg
imull
cld
adc
mov
pop
jae
dec
imul
cs
adc
push
fincstp
pop
push
or
add
andl
or
je
in
jecxz
or
mov
enter
movsl
ret
xchg
xchg
pop
xchg
mov
movsl
je
push
out
sbb
adc
xor
sbb
inc
and
mov
arpl
scas
mulb
loope
sub
mov
lret
mov
sbb
push
adc
push
int3
arpl
mov
sahf
xchg
cmp
cmp
out
mov
adc
jg
fwait
pop
dec
enter
shll
subl
imull
fwait
nop
adc
mov
mov
lcall
imul
pop
lcall
movsw
repnz
dec
mov
add
mov
lret
shrl
xor
add
sub
cmp
cmc
xor
insb
add
test
stc
movsb
insb
push
or
xchg
sarb
xor
add
int
xor
stc
pop
gs
sub
add
cmpsb
loop
cmp
xor
jno
jecxz
repnz
xlat
adc
push
or
test
std
movsb
push
mov
cmp
xchg
and
push
clc
outsb
xchg
insb
inc
and
adc
sub
mov
mov
call
xchg
push
jo
sahf
faddl
call
adc
xchg
xor
mov
nop
movsl
push
mov
dec
sub
fiaddl
clc
adc
lret
pop
insb
cmp
mov
xor
push
cmp
xor
clc
cwtl
inc
pop
das
daa
pop
push
pushf
jmp
push
adc
add
pushf
sbb
inc
fsubrs
jecxz
pop
and
nop
push
pop
or
outsb
dec
daa
xchg
fcmovb
inc
and
nop
scas
hlt
jge
sub
iret
jnp
jbe
test
test
or
jge
or
inc
mov
jno
imul
mov
imull
sub
pop
clc
fcomps
insl
push
xchg
test
mov
ret
arpl
mov
movntq
loope
mov
push
or
aam
ficomps
clc
aaa
xchg
imulb
push
add
sub
mov
jmp
out
jno
sti
pop
inc
pop
daa
lcall
mov
fwait
js
scas
mov
adc
in
xlat
jge
or
shll
lods
jmp
jo
mov
add
dec
xchg
daa
jge
aad
or
dec
in
fcomps
cs
mov
mov
mov
imul
shrl
les
xor
or
loopne
adc
mov
sarl
sbb
movsl
or
out
adc
mov
jb
mov
push
icebp
in
jp
cltd
fs
sub
dec
in
cs
icebp
and
arpl
stc
je
and
cltd
js
push
ljmp
mov
sbb
lret
sbb
test
filds
jp
popf
cmpsb
frstor
mov
xchg
hlt
jecxz
addl
mov
popf
std
jle
inc
push
mov
loope
jle
sub
int
push
rcr
push
dec
pop
xor
rclb
mov
lods
push
sbb
faddp
mov
lcall
bound
int3
xchg
push
ds
inc
push
push
jp
int3
cmp
loop
fdivr
mov
rorl
cmpsb
fcmovu
gs
lds
out
aaa
ja
pushf
or
adc
add
pop
stos
dec
mov
ds
xchg
sbb
mov
mov
lds
mov
std
sbb
fists
test
xor
mov
hlt
mov
cmp
and
nop
testl
lret
pop
mov
int3
inc
jecxz
pop
pop
jo,pn
sti
xchg
icebp
ficomps
fisttpll
push
int3
outsl
or
inc
enter
and
pushaw
sub
jns
lock
out
lea
inc
jno
push
lods
imul
movsl
ret
mov
out
xchg
xchg
scas
imul
iret
push
imul
fstpt
jg
and
or
movsb
lahf
out
cmp
icebp
test
cmp
out
sti
cmp
push
mov
aas
pop
es
push
shl
aaa
jno
arpl
or
enter
int
fstp
into
dec
adc
adc
jl
divb
cmp
arpl
pop
push
mov
loop
ret
inc
test
push
mov
cwtl
mov
in
xor
cwtl
dec
mov
addr16
mov
push
pop
lret
and
jno
dec
adc
scas
cmp
cmpsl
xlat
cltd
loope
insb
int3
jge
jg
mov
jo
mov
or
pop
out
xor
cld
enter
lcall
xchg
mov
out
pop
lcall
add
pusha
into
mov
dec
in
xchg
jmp
xor
pop
inc
test
nop
jns
adc
mov
pop
ret
push
mov
jnp
popf
or
sbb
stc
mov
xchg
icebp
shlb
ja
jg
push
pop
xor
cltd
test
stc
lea
pusha
outsb
push
mov
sub
mov
mov
js
dec
out
inc
xor
sbb
or
fdivrp
sbb
cmp
int
nop
ja
adc
or
lret
inc
adc
add
pop
inc
mov
dec
lods
xor
rol
test
xchg
adcl
sbb
imulb
call
lods
movsl
movsb
xchg
pop
sbb
imul
lcall
scas
xchg
fwait
inc
call
scas
fidivs
out
lahf
mov
ljmp
outsb
sub
ror
jnp
roll
adc
jb
rcr
cmpsb
lahf
add
in
push
or
xor
xchg
out
stos
push
jno
sbb
les
jecxz
cltd
mov
xor
or
shl
sub
fisubl
cmp
cmp
dec
and
cmpsb
js
and
inc
xlat
repz
rolb
xor
lods
xchg
jmp
stc
outsl
or
cmp
addr16
pop
leave
shl
emms
adc
cld
pop
inc
loope
jb
mov
rorl
or
push
or
pushf
mov
fcmovnu
mov
inc
xchg
int
sbb
subl
in
jo
xchg
dec
fbld
fadd
sbb
dec
ljmp
cmc
lods
xchg
or
lret
in
repz
xchg
cmp
push
pop
repz
sar
ljmp
jl
xor
notb
int3
add
cmpsb
test
andb
dec
jmp
into
hlt
mov
xchg
fmull
sub
fnstsw
jl
mov
mov
adc
push
or
jb
pop
and
xchg
mov
ss
cli
mov
push
adc
fldenv
fbstp
scas
cmp
or
rolb
pop
add
lock
popf
jecxz
or
sub
pop
aam
lds
mov
pop
push
std
std
xchg
or
jg
add
mov
jnp
imul
int3
fwait
mov
push
inc
pop
ljmp
pop
sbbb
cwtl
sub
or
and
fmull
ficomps
clc
mov
pop
xor
lea
xchg
jbe
ja
flds
mov
push
fs
cmp
dec
dec
mov
pop
mov
into
adc
sar
adc
pop
mov
push
sbb
mov
loope
popf
jle
sbb
outsb
sarl
iret
inc
mov
shlb
pop
and
outsb
push
push
notb
and
mov
insl
xor
pop
sbb
fcmovnb
lahf
fstpl
add
lcall
mov
lock
bound
sti
jecxz
or
mov
push
inc
or
cmp
inc
popa
aaa
sbb
std
push
mov
inc
lret
stos
stc
jns
pop
pop
mov
mov
in
hlt
or
out
pop
push
imul
cmp
mov
mov
jb
mov
jle
add
lahf
mov
andl
out
push
out
es
dec
ret
pop
lahf
lods
sub
add
shlb
lods
in
adc
cmpsl
mov
dec
inc
sbb
imulb
ss
movsb
xchg
arpl
push
cwtl
in
aad
sub
mov
adc
mov
inc
das
insb
pop
adc
ljmp
std
push
aad
add
int
std
sbb
rclb
mov
jmp
sbb
pop
mov
outsb
shlb
xchg
cltd
dec
dec
jmp
stos
push
dec
mov
mov
jnp
mov
jecxz
sbb
test
mov
pop
dec
lret
xchg
mov
add
movsb
mov
imul
lahf
cmp
pushf
sbb
lods
fwait
dec
jge
test
jne
cltd
sub
add
push
xchg
inc
dec
fdivl
and
js
dec
push
lods
mov
js
sbb
mov
sub
sbb
jg
leave
and
test
or
popa
push
pop
outsl
jmp
outsl
mov
loope
sbbb
test
cli
outsl
pusha
cltd
dec
and
daa
sti
jmp
daa
es
dec
jbe
dec
ret
sbb
mov
ficoml
lea
orl
scas
in
lds
shl
sbb
lods
je
xor
dec
mov
xchg
jb
or
pop
shll
clc
mov
mov
scas
fwait
sub
and
test
add
fsubp
sub
inc
fisubrl
out
xchg
add
inc
jmp
cmp
jo
inc
push
or
ljmp
xchg
and
cli
mov
aaa
inc
addr16
mov
push
pusha
mov
ficompl
jae
cli
aad
push
fs
mov
pop
jbe
je
push
rorl
fldenv
repz
add
aad
mov
sbb
xchg
arpl
popa
mov
in
mov
leave
jae
xor
movsl
orl
jns
inc
inc
pop
push
test
lcall
mov
test
clc
push
sub
mov
insl
xchg
mov
and
cmp
test
in
push
and
lahf
leave
insb
cmp
sbb
cld
fisubl
sbb
insl
rclb
sbb
int
push
push
lods
and
out
shlb
clc
popa
faddl
mov
add
pop
mov
das
movsl
pop
in
or
inc
cmp
notl
shll
xchg
pop
fnsave
call
push
shlb
insb
sub
xorb
mov
ret
loope
addb
test
loop
mov
cmp
adc
aam
sub
lods
sub
adc
ja
add
xchg
or
mov
das
ss
xor
sub
fiadds
sbb
mov
cmpsb
les
jne
aaa
lea
sti
xchg
mov
and
in
push
xchg
sbb
mov
jae
push
cmp
into
imul
pop
loope
sub
push
iret
mov
std
fisttps
das
cmp
jecxz
dec
mov
pushf
cltd
mov
or
cmp
cmc
inc
or
add
mov
pusha
aas
mov
das
mov
push
roll
push
rcrb
test
insl
ret
es
adc
fsts
sbb
arpl
mov
sub
xor
mov
das
div
bound
pop
pop
push
fwait
and
mov
mov
pop
mov
fisubs
mov
mov
inc
push
or
mov
icebp
xor
pop
test
push
mov
jmp
hlt
jecxz
xchg
int3
jl
pop
subb
mov
jnp
push
sub
add
mov
xchg
push
pushf
in
adc
push
iret
pop
fs
cmp
hlt
ljmp
inc
sub
inc
clc
mov
push
xor
or
fmuls
rclb
inc
push
adc
jl,pn
inc
xor
fnstcw
jbe
sub
or
mov
fnsave
mov
lods
nop
pop
clc
sub
js
je
sub
fcoms
fbstp
int3
inc
mov
mov
xor
sahf
push
insb
adc
aas
pushf
and
es
dec
xchg
mov
or
in
jo
mov
push
repz
outsl
fwait
and
fists
xchg
mov
inc
push
inc
and
rcrl
xor
in
mov
xchg
out
jecxz
inc
mov
push
inc
and
fildl
adc
shll
lds
mov
sbb
inc
imul
mov
cmp
fistpll
lcall
jmp
xor
mov
push
sahf
test
into
iret
subl
popa
cmpsl
mov
aaa
adc
mov
dec
cmp
mov
lcall
in
push
xor
and
cmp
mov
sub
pop
dec
rol
jb
push
sub
sub
cmpsb
out
ljmp
test
sahf
push
fmuls
cwtl
inc
xchg
sti
sahf
pop
repnz
jmp
add
iret
lahf
adc
mov
mov
bound
out
das
ret
jmp
push
fs
out
jp
sub
ret
jae
imul
bndldx
cmp
cmpl
mov
mov
stos
xor
daa
hlt
sbb
ds
add
mov
ja
rcrl
fsubrp
inc
or
inc
cmpsb
jmp
push
sbb
lcall
mov
mov
push
pop
mov
dec
lock
jno
inc
inc
add
add
lcall
cmpsb
and
loop
popf
xchg
jbe
vmovmskps
dec
pop
inc
clc
mov
lea
add
inc
arpl
jo
ljmp
ds
inc
cld
xor
lds
sub
inc
adc
and
lock
sti
jns
push
pop
aas
or
test
cs
aam
into
sbb
adc
or
xor
mov
xchg
cmp
leave
jno
inc
xchg
orl
xchg
inc
adc
ds
sahf
into
or
inc
daa
jb
mov
lods
inc
fdivrl
pop
mov
cmp
mov
jns
cli
jne
in
negb
pop
cld
sar
sti
dec
fs
mov
repz
out
push
push
sbb
add
das
ja
xchg
test
mov
xchg
sbb
faddl
xchg
mov
xor
jg
daa
cmpsb
or
adc
adcb
ds
push
enter
adc
into
mov
push
adc
jnp
imul
rclw
cli
adc
js
or
dec
subl
fstpl
mov
xchg
add
mov
pop
pusha
mov
jp
das
movsl
mov
repnz
addl
dec
adc
jg
mov
rorb
adc
push
cmp
xchg
lret
out
sub
popf
mov
adc
xchg
mov
mov
int
mov
bound
xchg
movsbl
dec
lea
or
test
sti
psubsb
fidivl
and
sub
mov
popf
orl
inc
add
call
outsb
and
xchg
in
add
das
int3
fcmovnu
outsb
aam
ret
or
jmp
enter
add
cmpsb
mov
push
or
inc
movsb
test
mov
or
pop
jae
mov
jo
aam
fnsave
push
inc
shrl
subl
mov
cwtl
popf
adc
adc
mov
repnz
lret
das
xchg
insb
ss
dec
xchg
push
popa
rorb
jmp
inc
cmp
jecxz
push
js
sub
sbb
mov
leave
mov
mov
mov
add
add
das
leave
fcmovnbe
incl
mov
xchg
lcall
fldenv
lods
or
xorps
cmp
imul
add
inc
xor
sub
push
outsl
fsubs
or
les
je
shrl
xchg
mov
mov
mov
arpl
and
xchg
addb
dec
xlat
jmp
mov
out
dec
lahf
syscall
xor
inc
push
arpl
sbb
lea
je
add
pushf
xlat
sub
das
mov
enter
adc
adc
cmp
xchg
test
jae
jbe
adc
adc
cltd
and
jo
xor
xchg
xor
pop
ror
xchg
icebp
add
iret
cwtl
mov
pop
mov
lea
mov
push
test
sub
dec
mov
cs
out
inc
or
sahf
pop
sbb
roll
pop
aas
mov
sbb
xchg
into
sbb
subl
rclb
push
cs
push
xchg
xlat
pop
xor
jno
popa
mov
push
pop
insb
iret
adc
mov
movsl
inc
dec
mov
cmpsl
mov
mov
clc
pop
xor
stc
out
fucomp
xchg
rol
scas
mov
fisttps
dec
pop
pop
fs
lcall
cld
div
jp
add
add
xchg
pop
dec
pusha
dec
test
push
pop
pop
push
jae
sti
sbb
adc
push
mov
cs
lds
imul
ss
adcl
cmp
lods
pop
sub
mov
sti
int
xchg
lcall
sbbb
sbbl
mov
jne
orl
adc
icebp
adc
jae
and
xor
jo
dec
mov
rclb
push
movsl
adc
test
jp
and
xchg
push
add
pop
aam
movsb
jno
pushf
add
dec
dec
pop
add
repz
lods
sbb
dec
adc
mov
push
add
pop
js
sbb
mov
and
clc
shrb
imul
sub
lahf
mov
sub
mov
cli
das
test
repz
mov
xchg
xchg
lods
lock
fsubrs
sub
clc
fmull
out
lock
test
out
xchg
jne
push
dec
adc
mov
or
fs
stos
adc
jbe
lcall
pop
push
cmc
sbb
adc
push
push
dec
in
jns
sbb
dec
dec
fisubs
mov
adcb
xor
out
xchg
mov
mov
mov
enter
mov
sub
sub
mov
add
jg
adc
imul
jbe
lret
sbb
pop
jmp
nop
negb
adc
pop
scas
mov
mov
xor
shlb
pusha
xlat
pop
adc
push
ret
jmp
iret
push
jo
pushf
push
std
xor
clc
shl
push
xor
fcmovnbe
movsl
clc
xchg
push
mov
push
out
int
or
push
pop
mov
loop
cmpsl
shll
imul
add
data16
scas
jo
stos
fucomi
ror
dec
mov
jp
test
push
mov
inc
clc
push
cmp
inc
sbb
into
push
cs
cmpsl
scas
mov
sbb
jbe
sub
stos
sti
or
lret
pop
test
adc
xchg
dec
loope
add
icebp
push
sbb
push
shl
mov
mov
mov
js
int3
jle
shrl
or
mov
repnz
scas
rcrl
test
cmpsb
jp
push
inc
mov
mov
mov
cmp
pop
filds
xor
mov
mov
repz
addr16
adc
xchg
add
cmp
lret
add
jne
inc
dec
call
or
mov
loop,pt
cli
das
idivb
movsl
aaa
xor
aam
outsb
mov
inc
mov
lods
lret
cmp
jl
pusha
lret
in
add
mov
fs
aam
cs
fisubl
mov
lods
and
mov
divb
and
pop
dec
cmc
mov
push
sahf
je
adc
int3
hlt
imul
or
enter
mov
pop
aaa
xchg
lahf
inc
cmp
or
cmp
dec
push
sub
ss
hlt
xor
inc
stos
fisttpll
mov
sub
and
das
cmp
out
cs
pop
cld
push
dec
jmp
or
imul
pusha
jecxz
or
arpl
push
push
xor
ljmp
ljmp
dec
mov
popa
je
ljmp
sbb
cld
mov
scas
cmp
sti
inc
dec
leave
test
js
sahf
lods
jnp
test
arpl
or
push
repz
popa
pop
loop
add
insb
call
add
scas
stos
sub
pop
test
lahf
xchg
or
ret
lds
in
rcrl
ret
into
cmp
add
dec
sbb
das
pop
loope
sbb
cmpsb
or
cmpsl
jp
mov
xor
push
fidivrs
or
dec
scas
mov
idiv
jo
and
stos
sbb
int3
test
sbb
jbe
adc
cmp
xchg
xchg
jo
and
notl
xchg
jp
and
cmp
movsb
rcll
xchg
mov
push
popa
xchg
rorl
cltd
popa
pusha
or
fcoml
roll
xchg
das
daa
mov
ljmp
lahf
or
push
xchg
sub
call
ret
jno
pop
sahf
mov
push
mov
adc
jo
jp
mov
xchg
rcl
stos
rcl
jnp
dec
inc
call
sbb
adc
sbb
fimull
cli
inc
jae
mov
icebp
test
push
aad
pop
xchg
push
call
push
imul
loopne
push
outsl
pop
xchg
and
int
fdivrl
xchg
dec
or
loop
xor
xor
imul
inc
pop
pop
pop
roll
jg
or
cmc
data16
outsl
in
add
fists
loope
ds
inc
ds
xchg
std
ljmp
add
fwait
xor
pop
pusha
cs
cld
bound
dec
fidivrl
out
adc
aaa
insb
sub
inc
adcl
pop
popa
push
or
dec
and
mov
int3
call
cmp
insl
inc
xchg
mov
push
roll
pop
jmp
xor
call
mov
fwait
roll
mov
dec
pop
dec
add
and
xchg
dec
repnz
es
add
fsubl
adc
add
aad
adc
or
mov
sti
mov
cmp
and
jb
jns
sbb
ret
lret
jns
dec
add
pop
inc
clc
pop
xchg
ja
test
dec
xchg
inc
gs
adc
int
pop
ja
mov
push
mov
pop
movsl
push
mov
repnz
adc
xchg
cwtl
jne
jmp
mov
push
mov
movsl
pushf
add
outsb
notl
xor
sub
and
aam
push
in
sub
or
xor
cmp
daa
xor
data16
mov
xor
ja
insb
mov
aam
mov
inc
pop
jnp
and
xchg
jle
sbb
add
in
fcompl
mov
mov
jp
outsl
outsl
adc
shrb
in
push
push
mov
xor
movsb
negb
sti
add
push
add
imul
fldenv
and
stc
int3
leave
adcl
imul
jnp
push
ja
testb
cs
ret
inc
imul
loop
push
fisttpl
push
add
pop
lret
int
cmpsb
aas
inc
lret
es
inc
fsubrl
arpl
jl
std
mov
clc
pop
int
inc
popa
add
push
negl
insb
jae
mov
int
rcrl
jne
mov
arpl
popa
aad
mov
addr16
mov
loopne
test
loop
xor
push
in
popa
xchg
sub
mov
and
addr16
in
jmp
addr16
arpl
adc
out
sahf
enter
rorb
dec
sbb
clc
xor
pop
cltd
pusha
ficompl
stc
pop
icebp
mov
pop
popf
pop
jbe
xor
mov
in
mov
scas
cmpsl
inc
neg
hlt
inc
shll
adcb
pop
cmp
shlb
popa
pusha
clc
icebp
fldenv
or
or
jle
xchg
ficoms
loope
jecxz
add
cltd
sbb
mov
mov
test
int3
push
xor
sbb
daa
cli
pop
lcall
fbld
icebp
std
stos
in
sbb
xchg
in
add
push
cmpsb
mov
loope
lock
jle
dec
jo
jge
cs
cmpsl
dec
adc
cmp
jp
dec
pop
sbbb
stos
cmpsl
push
stos
dec
icebp
mov
jg
sbb
out
xchg
ss
jge
mov
and
cs
sbb
mov
adc
jmp
lea
das
insb
outsb
push
jg
cli
std
jle
xor
mov
ljmp
leave
scas
push
int3
out
jns
or
jnp
push
jnp
outsb
pop
mov
dec
jmp
xor
add
shlb
xchg
push
and
inc
cmpsb
pop
test
jnp
fistl
mov
aaa
pop
test
dec
pop
clc
gs
out
jle
popf
loopne
mov
inc
push
xor
xchg
pop
or
dec
call
cmp
push
pop
adc
fisubrl
repz
jle
push
addr16
imul
out
sahf
sbb
sbb
push
ror
ja
pop
xchg
popa
fildl
popf
insl
adc
xchg
xlat
outsl
xchg
dec
cltd
icebp
xor
mov
push
lahf
and
adc
insl
ss
test
setns
and
mov
inc
test
sub
outsl
js
out
push
andb
adc
push
std
iret
jb
cmp
popa
or
cmp
roll
notl
hlt
pushw
clc
std
adc
pop
lods
lcall
inc
gs
jae
xor
cmp
mov
mov
mov
ret
pop
daa
clc
stc
cmp
scas
jg
mov
adc
fwait
or
int
or
jge
popf
mov
pop
adcb
jge
mov
test
xchg
and
sub
sar
idivb
sub
cmp
aaa
mov
and
shrl
inc
pop
gs
pop
pop
mov
push
inc
xchg
add
or
add
scas
sub
jnp
sbb
fistl
dec
dec
imull
aaa
movsb
pop
inc
jle
mov
fcmovnu
loopne
add
jb
loop
lods
mov
shrl
arpl
in
push
stos
imul
int3
nop
les
mov
cwtl
jne
mov
cmp
mov
int3
mov
mov
pop
pop
inc
mov
out
xchg
add
into
push
cmp
pop
cmp
jo
hlt
pusha
std
sti
mov
movsb
outsl
pop
flds
mov
ret
int
mov
and
popa
bound
arpl
leave
repz
mov
push
jb
jge
stos
popf
jp
std
sbb
sub
xor
and
imul
rorl
adc
filds
xchg
cmp
push
popl
cmp
repnz
repz
push
sub
jb
inc
pop
test
dec
jmp
fidivl
mov
xchg
dec
or
mov
xor
or
add
sbb
dec
int
push
aas
push
mov
mov
fcomps
mov
test
insb
pop
push
jnp
lock
cmp
mov
loop
test
in
testb
adc
pushf
and
bound
sahf
inc
int3
test
xor
out
rcrl
jns
jno
jl
imul
in
shl
lock
cmp
push
scas
sbb
repz
inc
pop
popa
mov
jl
add
aas
inc
sbb
das
sub
and
xchg
test
push
ret
jbe
call
into
outsb
je
cmp
ljmp
rclb
lock
dec
adc
je
add
sub
pusha
fadds
je
pop
mov
sub
mov
je
pop
mov
cltd
mov
popf
and
gs
in
inc
les
in
pop
hlt
in
xchg
mov
in
xor
lret
lds
mov
inc
add
out
lods
or
or
in
push
andl
sub
loopne
fistps
jmp
fsubl
clc
mov
aas
fs
std
mov
jnp
lret
into
push
sbb
das
add
cltd
jge
lods
pushf
mov
push
shlb
xchg
adc
push
inc
inc
mov
mov
popa
dec
int3
mov
loope
sbb
sarb
push
mov
and
lret
movb
loope
test
add
outsl
and
mov
popf
xchg
sbb
sti
int
push
sbb
shlb
adc
and
and
adc
lcall
idivb
sub
bound
stos
inc
loopne
enter
pop
out
dec
jo
jne
push
mov
ret
ja
push
inc
into
jb
mov
sbb
jne
inc
jb
repz
mov
inc
lcall
jbe
cld
std
fstpt
mov
mov
repnz
mov
xchg
popf
push
notb
xchg
mov
push
add
sbb
repz
test
testb
push
movsl
divl
loope
pop
mov
gs
nop
push
adcb
xchg
xor
das
inc
pop
jb
cmp
ss
xor
in
pushf
test
sub
inc
cmp
mov
and
sbb
dec
dec
test
aaa
push
cmp
pop
sub
mov
es
ffree
ljmp
gs
and
lds
jbe,pn
testb
jecxz
fstpl
mov
xchg
sub
bound
repz
jno
mov
sub
lea
sub
mov
fdivrl
jb
js
or
jp
cs
and
jp
imul
jne
fimuls
into
rorb
cli
mov
clc
push
inc
pop
inc
lret
xchg
adcl
cmpsb
fmulp
test
jnp
inc
int
out
push
mov
xor
mov
dec
add
xchg
fbld
in
in
jmp
popa
outsb
inc
push
mov
aam
mov
jbe
test
push
mov
fistpll
ja
in
fcompl
inc
popf
pop
jne
or
test
mov
test
pushf
mov
out
lcall
dec
or
cmp
push
dec
inc
daa
leave
cmp
shl
sbb
icebp
xchg
out
dec
fwait
jg
sete
xor
repz
xor
xor
dec
pop
xor
in
add
loopne
aas
into
xchg
push
lahf
fnstcw
xchg
mov
dec
leave
fdivp
loopne
pushf
hlt
imul
cmp
inc
xchg
mov
stc
andl
fdivp
pusha
xorl
jle
stos
inc
mov
call
bound
adc
fs
stc
mov
jno
imul
sahf
rcrb
rorb
loopne
fidivs
imul
pop
cmp
xchg
data16
adc
xor
popf
lcall
mov
out
int
pop
js
push
cmpb
sbb
push
mov
cmpsb
aaa
adc
shrb
cltd
dec
lock
lds
mov
jl
mov
pop
xchg
sbb
divb
or
mov
int3
cmp
lret
insb
rolb
shll
jg
xchg
insl
jle
dec
shll
lahf
sbb
mov
popf
pop
push
cli
adc
clc
pop
out
or
jecxz
mov
jl
mov
in
jno
xor
lock
xlat
push
scas
lahf
fcompl
jno
insl
mov
sub
lcall
jl
push
nop
mov
jnp
sub
push
adc
mov
ret
jae
cltd
cltd
popa
push
xlat
cmp
sub
jns
and
pushf
xor
mov
syscall
test
cli
cmc
mov
pop
and
psubd
xlat
sbbb
push
in
jl
dec
cs
movsl
repz
sub
fxch
icebp
mov
push
pop
popa
lahf
or
gs
aas
add
cmpsb
sub
mov
stos
cmpsb
sbb
pop
movsb
mov
lods
aas
mov
mov
pushf
jbe
xor
push
loopne
xchg
jne
mov
subb
stc
cmpsb
sbb
or
jno
dec
out
cmpsl
sti
pop
push
inc
inc
cltd
xchg
dec
jnp
dec
xchg
or
mov
mov
addl
or
adc
inc
sahf
sbb
je
mov
or
lods
fwait
fwait
pop
mov
and
jb
je
aad
pop
es
jb
test
ret
or
setge
es
add
mov
jp
inc
adcb
mov
add
fistpll
mov
icebp
mov
test
sub
test
inc
mov
cmpsb
jbe
popf
pop
mov
pop
sahf
outsb
adc
sbb
test
pushf
rcll
mov
mov
and
xchg
sub
or
bound
fs
icebp
cld
in
repnz
imul
mov
repnz
dec
mov
lods
fnsave
push
mov
or
nop
xor
orl
out
and
or
stos
xchg
add
in
sbb
push
add
lods
in
fwait
insl
frstor
and
jne
std
std
jmp
sub
push
fdivl
inc
sahf
mov
push
add
cld
adc
xchg
sbb
jne
hlt
lret
jae
adc
daa
into
shl
cmp
stos
js
into
mov
imull
inc
mov
cltd
sti
or
jecxz
push
sub
clc
cmpsb
sbb
data16
orb
cmpsb
pop
mov
in
rorl
lahf
xchg
jbe
pop
or
adcl
cmp
jne
stos
dec
cmpsb
in
xchg
fwait
sub
mov
push
iret
out
mov
in
dec
adc
and
xor
movlps
ja
dec
and
inc
int
push
push
or
lods
les
inc
cltd
sbbb
xchg
insl
adc
dec
cmp
loop
add
imul
flds
inc
fnsave
fdiv
mov
mov
sbb
or
mov
sbb
test
ret
xchg
leave
rorl
cmpsb
repz
mov
sbb
enter
movsb
pushf
out
fistl
dec
test
mulb
and
adc
sbb
mov
rcr
and
scas
inc
out
mov
pop
insb
sbb
inc
pop
outsb
loopne
pop
mov
sbb
xchg
mov
repnz
xchg
popf
push
pop
or
sbb
or
mov
lods
xor
push
inc
hlt
pop
xorb
lods
xlat
xor
xchg
stc
cmp
movsb
mov
enter
div
or
jnp
push
fildl
roll
and
mov
es
xchg
xor
inc
lcall
test
and
fstpt
or
sahf
aaa
stos
fwait
mov
out
and
gs
loop
pop
jmp
or
cld
xchg
xor
insb
into
enter
ljmp
pop
movsb
cld
lods
test
dec
sti
test
mov
test
sbb
inc
push
or
subl
or
mov
mov
in
stos
mov
call
jl
sub
jecxz
lods
in
dec
cmpl
aad
mov
aas
pop
mov
xchg
movb
insb
mov
inc
sub
xor
push
xchg
mov
sbb
or
mov
leave
mulb
adc
dec
aaa
xor
loop
shlb
sahf
ret
xchg
pop
popa
cmpsl
repz
mov
insl
and
addb
aas
sbb
arpl
sbb
inc
les
sahf
sbb
xor
out
mov
popf
lret
add
and
pop
push
dec
and
jmp
jg
fmull
mov
dec
dec
inc
cltd
out
imul
addr16
filds
lret
pop
jp
loopne
mov
or
and
xorb
int
lcall
inc
mov
and
sub
sti
clc
inc
xor
mov
sahf
jg,pt
jge
or
adc
stos
cmpsb
lock
inc
insl
cs
lahf
adc
inc
js
dec
pop
lea
lock
jae
outsl
inc
movsl
repz
push
out
stc
aam
sbb
fdivrs
xchg
xor
jge
sbb
jge
xchg
testb
pop
out
pop
fcoml
xchg
xchg
xchg
fisttps
xchg
push
jnp
imul
aad
test
cs
jbe
push
es
push
mov
popa
sti
inc
insb
mov
jb
movsb
lods
popf
movsl
xchg
add
scas
push
les
mov
cmpsb
outsl
or
mov
mov
jno
xor
push
xchg
rorl
call
imul
push
pop
inc
movsl
ficomps
dec
pushf
in
test
cmp
sub
push
cltd
out
pop
push
sbb
jecxz
sarb
in
mov
sbb
xchg
outsl
add
mov
in
ja
insb
test
cmp
xchg
jns
pop
enter
sub
daa
xlat
add
enter
pop
cmpl
cmpsl
andl
cwtl
je
gs
push
popf
loop
mov
das
inc
testb
push
push
into
sub
sbb
push
out
loope
lret
or
adc
cltd
fildll
push
mov
and
ret
cltd
mov
les
inc
pop
push
pop
cmp
xor
lret
sbb
negb
aam
cmc
dec
scas
xor
mov
or
clc
inc
dec
jge
mov
or
cmpsl
int
xor
dec
xor
fs
jb
xor
cwtl
fisubs
out
cmp
cmp
mov
pop
aas
push
sub
adc
mov
mov
push
adc
clc
cld
icebp
ds
cmp
and
jns
es
push
xchg
out
mov
inc
enter
xor
ss
fidivs
in
out
mov
rolw
push
mov
xchg
int3
std
sub
xchg
adc
std
sbb
ud1
add
jns
and
enter
jp
mov
sarl
fldt
xor
je
xchg
jge
test
or
sbbb
sti
jnp
out
ljmp
dec
jg
add
mov
shlb
dec
and
jns
scas
xor
sub
xor
arpl
jl
ja
sub
jmp
lods
inc
adc
sub
cmp
ljmp
and
fnsetpm(287
xor
sbb
scas
jge
xchg
or
fisttpll
dec
xor
test
cltd
and
push
xlat
inc
pop
lret
jle
cli
ljmp
iret
mov
inc
inc
fxch
popa
scas
lods
dec
mov
stos
ret
pop
mov
and
or
inc
dec
dec
sub
push
jg
scas
outsb
lds
movsl
ret
mov
int3
jne
shrb
cmpb
nop
jbe
mov
sbb
cmc
rsm
and
pusha
and
cmc
xor
xor
sbb
loope
inc
mov
out
dec
and
cs
arpl
popf
cmc
adc
into
test
push
and
lock
pop
cld
dec
fadd
mov
push
jne
or
ss
adc
pushf
ret
pop
pop
add
insl
adc
popa
inc
shlb
or
daa
rcrb
mov
and
popf
xor
cmp
jno
jmp
fwait
into
outsl
repz
jge
adc
dec
sub
mov
fildll
es
mov
inc
pusha
ss
pop
push
cmpsl
std
push
stos
xlat
movsl
pop
aam
in
outsb
sbb
fiadds
cli
and
mov
lds
jl
mov
sbb
sbb
fwait
jecxz
or
into
imul
and
pop
jns
mov
pop
in
pop
ds
mov
rolb
test
pop
adc
cli
adc
inc
mov
cmp
xor
stos
sub
dec
jbe
in
pop
pop
cmpb
mov
mov
xchg
and
mov
test
cld
lcall
frstor
push
dec
dec
jnp
or
xchg
movsb
out
sti
push
mov
fldcw
xor
sub
adc
jp
jmp
pop
pop
cmpsb
sbb
adc
clc
cwtl
add
lds
outsl
in
xor
xchg
adc
cmp
fcomps
push
pop
pop
xor
scas
and
mov
stos
push
testb
lret
int3
mov
mov
rorb
repnz
fs
test
in
jle
adc
cmpsb
loopne
pop
mov
or
sub
and
dec
popf
mov
cld
push
test
repz
mov
call
sti
mov
sbb
jecxz
fisubrl
cmp
ljmp
cwtl
or
pop
inc
imulb
loopne
sbb
mov
dec
lcall
aam
sbb
and
scas
push
pop
push
mov
push
outsl
cmc
xor
mov
insb
push
insl
dec
fdivrl
pop
cmc
push
lcall
pop
cs
fldcw
mov
inc
adcl
inc
inc
sbbb
loop
pop
outsl
and
xchg
iret
out
lret
out
sbb
cmp
jno
cmpsb
in
push
add
test
jmp
cmp
lcall
and
mov
sahf
push
jmp
mov
xor
mov
or
js
lret
push
jg
hlt
cmp
or
pop
pop
dec
out
filds
je
mov
mov
in
iret
dec
xchg
lods
add
add
enter
inc
jmp
addb
pop
or
insb
sbb
sbb
inc
shrl
ror
lret
push
loop
sbbl
push
lock
xorl
lcall
and
or
mov
ret
andb
or
xlat
push
fnsave
mov
daa
jge
out
and
es
xor
in
add
jne
fsts
xchg
adc
pop
jg
pop
jg
shrb
jmp
dec
pop
mov
mov
repz
mov
jo
fwait
cs
mov
mov
movsl
loope
std
iret
into
inc
push
fidivrl
dec
mov
and
lahf
add
rcrl
mov
imul
and
stos
dec
xchg
pop
into
adcb
cmp
mov
fstpl
add
mov
aam
xchg
cld
and
clc
fildll
mov
jno
xor
ljmp
push
addr16
out
mov
lds
xor
adc
jmp
fimull
mov
rorl
push
loope
or
sbb
or
adc
cmp
cmp
add
and
lock
scas
je
lret
or
mov
mov
rcrl
push
or
and
dec
or
in
mov
mov
data16
push
popf
out
ss
pushf
aam
in
mov
popa
in
cld
sub
out
stc
imulb
jbe
pop
pop
fwait
pop
sbb
lock
outsl
ret
pop
xchg
push
int3
pop
xchg
mov
dec
out
ret
lods
lret
sub
cmp
mov
pop
and
subb
adcl
rcrb
add
ss
mov
mov
cmpsl
jecxz
or
and
in
pop
pop
fwait
daa
inc
fmul
cltd
xchg
ds
in
or
xchg
ret
mov
xchg
lock
inc
jbe
xor
add
mov
fnstcw
mov
mov
cmp
loope
mov
repz
cld
or
repnz
nop
mov
movswl
shlb
adc
sti
adc
imul
out
popa
leave
repnz
mov
imul
mov
jle
jle
lods
adc
rclb
popf
fdivrl
xor
sub
movsb
mov
shll
loope
cmp
cmpsb
mov
in
push
push
mov
out
pop
repz
add
xor
jae
xchg
fisubs
push
loopne
insl
inc
jg
jnp
xchg
inc
push
mov
cmp
add
mov
jl
inc
jns
cmpsb
mov
les
ds
mov
and
jnp
inc
fdivr
ss
movsl
test
mov
sub
pop
in
jb
xchg
aas
ss
push
ret
imul
cmp
loopne
cmp
cmp
fisubs
push
cmc
dec
mov
int
sti
cmp
scas
sbb
sub
xchg
stos
loop
int3
xor
or
jne
rorb
scas
push
xchg
and
in
int
icebp
mov
adc
lods
xchg
push
lret
imull
je
sahf
jae
sbb
fidivrs
mov
add
jle
mov
sbb
mov
dec
and
daa
out
inc
jle
stc
and
xor
push
jmp
xchg
sub
ss
xchg
xchg
lds
outsb
test
mov
xchg
xchg
cmpsl
xchg
test
mov
jle
pop
lret
js
and
enter
sbb
pop
mov
cltd
ljmp
jecxz
lods
imul
test
arpl
jae
ret
in
pop
shl
inc
and
out
jbe
mov
stos
sub
mov
push
lahf
lds
inc
pop
bound
push
lea
es
or
stos
jno
push
xor
jnp
xchg
fimuls
or
push
mov
das
dec
loope,pn
sbb
mov
inc
mov
fadd
ljmp
or
enter
push
cmpsb
in
and
ja
inc
rclb
std
loope
pop
inc
push
scas
sub
cli
pop
inc
pop
inc
call
orb
and
xchg
fimull
push
adc
popf
or
add
dec
punpcklwd
cmp
shl
mov
iret
pop
xchg
jb
in
shll
les
cmp
or
test
mov
mov
in
enter
clc
int3
addr16
sbbl
or
xor
mov
jle
inc
stos
pop
xor
fs
mov
cmp
mov
fmuls
aam
shll
fs
sbb
inc
add
xchg
sbb
jae
or
stos
es
scas
inc
in
adc
sbb
fdivrl
pusha
add
loop
xchg
ret
pop
sbb
and
jno
mov
ror
cmp
inc
jno
jns
xchg
xchg
mov
aas
add
bound
das
mov
mov
push
int
out
repnz
or
jge
hlt
loop
or
mov
cmpsb
inc
inc
cmp
push
jbe
xor
adc
push
aad
mov
pop
dec
cs
add
dec
sub
ret
xchg
aam
inc
ret
addl
push
les
insb
cwtl
std
cmp
sub
mov
push
imul
bsf
outsl
and
loop
lods
std
mov
out
pop
xchg
or
rcrl
jbe
inc
cs
mov
repz
loope
loope
xor
ficoms
mov
scas
cmp
mov
dec
add
or
in
xor
sbb
clc
clc
pusha
fbstp
negb
sub
fsubs
add
jp
fsubrs
dec
pop
mov
xchg
xchg
cmpl
mov
xlat
cs
aad
xchg
push
daa
cwtl
lcall
orl
push
mov
mov
movsb
shl
out
or
rorl
std
stos
es
xchg
push
sub
cmp
in
dec
pop
sbb
sub
mov
dec
dec
lret
rorb
jg
jns
xchg
and
dec
fdivrl
out
inc
inc
aaa
adc
add
repnz
mov
or
icebp
mov
dec
mov
xchg
popf
add
and
mov
loope
aam
xchg
cmp
push
sbb
mov
mov
cs
pop
jp
jb
mov
mov
xchg
lret
jmp
icebp
pop
or
fstl
push
loopne
mov
into
sub
shr
push
sti
shll
mov
pop
push
cs
mov
add
test
nop
push
ljmp
sahf
idivb
add
inc
xchg
leave
mov
xlat
jo
jnp
push
jg
push
insl
scas
jle
mov
outsl
xor
movsb
push
mov
stc
iret
dec
fidivl
scas
dec
jnp
adc
mov
sub
ss
add
add
sub
or
bound
inc
mov
sub
mov
adc
push
lret
fisubs
out
jg
pop
sub
sub
xchg
std
push
push
dec
mov
fidivrl
lahf
adc
lock
push
vmaxss
in
jmp
and
fwait
movsl
das
daa
adc
out
push
stc
pop
xchg
mov
testb
dec
inc
add
out
xchg
mov
sub
flds
pop
push
loopne
ljmp
inc
aas
das
punpcklwd
sarb
add
mov
cld
jg
dec
jp
and
mov
enter
testb
xor
fnsave
adc
xchg
sub
lods
add
pop
test
out
loop
fidivrl
or
xor
std
push
or
shll
inc
xchg
psubsb
jecxz
xor
adcb
sbb
lods
frstor
dec
shll
ljmp
dec
test
leave
jae
lret
scas
test
mov
cmpsb
outsb
bound
and
adc
mov
movsl
pop
push
mov
clc
adc
roll
sbb
jnp
aam
hlt
jp
xor
add
adc
xchg
lods
sahf
mov
jb
mov
sbb
dec
mov
arpl
lret
adc
mov
sbb
icebp
dec
cs
lea
jmp
pusha
daa
push
dec
or
sbb
pushf
pop
mov
adc
in
jle
adc
negb
outsl
pop
mov
fiadds
in
cmp
dec
movsb
fisubl
pop
mov
insb
push
add
mov
paddw
mov
dec
in
pop
popf
cwtl
xor
and
sbb
pop
dec
shr
or
rorb
jne
mul
rcll
movsb
xchg
push
and
jb
xor
das
cmp
lock
icebp
orl
or
cmp
fcompl
andl
xor
mov
and
cmp
jo
push
icebp
lcall
adc
mov
sahf
aad
and
add
mov
adc
scas
outsl
hlt
cmc
cli
fcoml
cmpb
pop
dec
stc
je
xor
aad
bound
and
lcall
mov
mov
dec
stc
test
mov
jns
icebp
sarl
testb
dec
sbb
sbb
arpl
mov
sar
arpl
sub
ficompl
or
or
out
xchg
push
cltd
xor
jecxz
sub
lods
jae
popw
pop
sti
loop
fsubrp
sbb
lea
aaa
inc
adc
inc
lea
addr16
hlt
in
push
jecxz
xor
and
aam
cmp
aam
push
test
xor
leave
lret
testl
and
iret
pop
cmp
out
popa
rclb
jne
loope
fbld
adc
mov
mov
inc
or
iret
pushw
mov
ljmp
pusha
push
pop
mov
test
pop
sarb
push
mov
aas
scas
add
inc
outsb
inc
mov
xor
sbb
or
test
dec
movsl
pop
andl
movsb
lock
aad
mov
sarl
add
stc
and
out
jmp
leave
ljmp
mov
push
xchg
cli
loope
xlat
add
stos
ret
mov
fwait
mov
dec
jnp
popa
and
sbb
arpl
sbb
jg
pop
cli
rcll
xchg
insl
scas
jmp
sub
roll
xchg
and
das
pop
push
inc
pop
into
daa
add
in
ret
jle
out
push
inc
rorb
xchg
imul
mov
push
or
dec
jmp
push
mov
div
hlt
jl
push
cltd
into
mov
xor
inc
add
xor
add
jnp
adc
cli
int3
mov
xor
dec
adc
mov
not
jmp
test
into
push
jo
sbb
sti
pop
loope
fmull
jo
push
jl
mov
jle
xchg
sti
lock
pushf
inc
sub
lahf
ret
mov
adc
nop
push
movsl
dec
lock
and
lcall
pop
inc
jo
inc
lret
test
rcll
jnp
pop
loop
or
mov
xchg
nop
es
jo
mov
dec
dec
sub
mov
lcall
inc
mov
iret
cmpl
ds
ljmp
mov
mov
in
sti
push
jmp
sub
ss
jg
and
cmp
cmp
hlt
mov
jmp
sahf
xchg
xor
adc
dec
lock
add
mov
test
push
sarb
das
movsb
out
jo
and
jns
cmp
fstps
bound
lcall
sub
in
fldt
aas
mov
imul
jg
or
frstor
mov
fsubs
out
add
sbb
insl
lcall
leave
aas
sub
pop
inc
dec
sbb
cmp
pop
add
mov
mov
pop
test
jns
fs
cli
cmp
cmp
dec
push
fsubr
loop
xchg
or
in
inc
lds
test
pop
mulb
cli
sti
add
fldenv
inc
dec
or
pop
jecxz
data16
sbb
mov
jb
scas
sahf
test
test
fsubs
xlat
ljmp
and
cmc
roll
xlat
xor
mov
mov
inc
mov
nop
mov
fldt
and
jl
push
leave
dec
out
jp
fwait
cmp
out
inc
outsb
inc
jl
bound
out
fidivs
jns
mov
in
loop
xorb
mov
mov
xor
popf
cmp
mov
sti
mov
xchg
sbb
jl
gs
out
in
test
mov
ljmp
mov
outsl
jge
scas
sub
int3
fstpt
cmp
mov
sbb
adc
cmp
int
pop
lea
fistpl
andb
ss
lahf
mov
and
add
jb
cmp
out
cltd
outsl
cld
pop
pop
insb
jae
push
ret
mov
pushf
call
pushw
sbb
fdivrs
add
mov
mov
add
mov
out
movsl
jg
insl
ret
ja
add
jl
test
in
imul
cld
sbb
popa
push
test
test
loope
pop
incb
push
in
test
mov
or
or
adc
mov
add
inc
and
test
das
mov
adc
scas
mov
cmpsb
cmpsb
add
sbb
test
pop
bound
in
or
xor
mov
pusha
sti
shrl
cli
mov
sti
push
not
test
cld
jle
lret
xor
int3
mov
addl
notb
sbbb
xchg
rol
xchg
arpl
push
mov
movsb
movsb
dec
cmpsb
cmpsb
outsl
loope
pushf
inc
inc
faddl
sub
lret
in
outsl
or
mov
cmp
in
stc
adc
fwait
xor
inc
out
mov
outsb
je
xchg
fcompl
sub
or
add
and
mov
movsb
rol
fstpl
inc
xchg
sbb
outsb
xor
jmp
aad
inc
or
mov
les
cmp
inc
pushf
mov
cmpsl
addr16
sbb
sahf
rolb
cmp
jnp
rol
mov
std
jb
xor
roll
pop
mov
add
dec
lahf
cmc
aaa
out
push
movsb
xor
jnp
pop
imul
test
into
or
es
sub
js,pt
imul
sarb
je
xor
dec
mov
int3
push
add
push
pop
or
mov
inc
fcomp
gs
sti
scas
push
inc
xor
rclb
xchg
mov
stos
aad
sub
mov
mov
and
xchg
in
lret
je
xchg
cs
push
sub
jle
bound
sub
cmpl
outsl
pop
imul
xchg
iret
push
xchg
and
mov
sub
aam
mov
cmp
mov
pop
mov
adc
in
add
adc
jb
mov
dec
bound
jecxz
test
fs
push
pusha
push
std
test
push
mov
add
jge
addr16
and
cmp
ret
inc
std
fsubrs
xor
es
notb
jbe
or
push
popa
fidivrs
aam
inc
push
mov
aas
add
repnz
and
or
mov
adc
inc
mov
or
fsub
xor
xchg
aad
stos
clc
dec
and
out
lds
sub
addr16
and
mov
shr
jge
and
arpl
or
add
jnp
pop
jo
inc
cmp
iret
fsubp
test
iret
push
enter
rcrb
mov
pushf
hlt
pop
cmpsl
out
or
mov
addr16
je
je
daa
pop
inc
cmpb
sbb
loopne
fcomps
rorb
mov
jno
xchg
xchg
and
adc
adc
cmp
jl
fwait
mov
ja
or
mov
and
jle
cmp
inc
sub
arpl
xchg
scas
decb
inc
sbb
xchg
lret
and
nop
jbe
mov
cmovo
cmpsb
in
cmp
inc
adc
xchg
loope
sub
and
fcomps
sti
pop
inc
lock
mov
lods
vminss
mov
pusha
enter
add
es
sub
mov
and
dec
mov
pop
daa
dec
inc
sbb
dec
lahf
daa
out
xor
sbb
popa
mov
outsl
or
data16
cmp
xor
pop
jmp
leave
xchg
nop
clc
xor
pop
and
ds
or
cmpsb
out
cmp
xor
outsb
rorb
incb
call
vmovmskpd
mov
jl
int3
xor
stos
cmp
xlat
pop
jne
jne
enter
pusha
xchg
cwtl
jl
sub
add
mov
sbb
push
cwtl
push
add
scas
movsb
push
mov
push
cmp
ret
fsub
and
int
adcl
push
pop
sbb
int
cli
pop
mov
je
fsubrs
mov
cwtl
call
adc
bound
loop
push
mov
and
sub
into
adc
test
jecxz
stos
out
cmp
adc
dec
fs
pop
xchg
xchg
sub
push
mov
and
xor
out
dec
xchg
out
add
cmp
xchg
sbb
dec
lcall
cmp
jmp
mov
pop
fcom
inc
insb
mov
or
clc
sbb
cmp
jg
fsts
pop
pop
xor
xor
shl
pop
popl
nop
mov
inc
in
sub
pop
add
add
jmp
es
cmpsb
stos
push
dec
push
mov
sbb
push
xor
push
arpl
jb
sar
lretw
pop
add
or
push
lds
sarb
xlat
and
cmpsb
jnp
pushf
fimuls
jns
cmc
or
repz
jp
ds
fdivrs
popl
jbe
fsubl
sbb
cmp
or
dec
sahf
mov
push
int3
fidivrl
rol
pop
loop
push
lock
cmp
sub
mov
mov
xchg
mov
popa
add
shufps
test
gs
fcomi
xchg
xor
lock
rcll
cmp
jecxz
inc
dec
inc
inc
sahf
pop
pop
std
fimull
sub
xor
stos
cli
cmp
notl
dec
cmp
jno,pn
xchg
lret
enter
ja
fcomps
jno
lret
sub
inc
faddp
mov
aad
pop
outsb
test
cmp
out
adc
mov
inc
lods
jno
fs
fists
or
sub
mov
xor
and
sub
das
lahf
sbb
imul
lock
mov
stc
lcall
out
cmp
xchg
pop
js
fwait
and
pop
sub
pop
in
xor
mov
je
push
lcall
and
xchg
nop
xchg
sahf
or
fidivrs
stc
sbb
hlt
cmp
aaa
xchg
jo
xchg
outsb
xchg
cwtl
cmpsb
xor
lret
dec
jns
testl
das
xor
ljmp
xor
xchg
repz
mov
xchg
jne
mov
dec
test
shrl
mov
add
fisubrs
ffree
orb
lahf
test
out
cwtl
cld
fdivrs
mov
data16
push
jo
mov
fdivs
and
sbb
mov
pop
mov
out
movsb
dec
loop
imul
cmpsl
outsl
in
loop
mov
lods
aam
push
idiv
rol
mov
sbb
ror
andb
pop
or
add
fs
int3
dec
sbb
xchg
push
sbb
out
pushf
mov
dec
mov
xchg
ret
fsubl
sbb
fcom
or
sbb
addb
loope
add
lahf
jb
loopne
sbb
jp
pop
ret
cs
ds
jl
mov
scas
mov
out
lods
lods
pop
mov
jnp
xchg
xchg
and
dec
or
js
lret
icebp
push
adc
clc
popl
xchg
mov
push
mov
enter
jmp
cmpsb
sbb
inc
pop
xor
push
mov
into
pop
stos
mov
ljmp
adc
inc
mov
mov
lods
clc
scas
cld
jg
xor
arpl
in
int3
movsl
mov
adc
cli
sbb
adcb
jp
fsubl
sub
mov
cmp
fidivs
clc
mov
jp
jbe
es
aaa
aam
mov
jb
pop
js
and
xor
inc
xor
imul
pushf
push
iret
xor
sti
je
xor
dec
pop
sarb
sbb
movsb
imul
loop
xor
je
mov
pop
test
cmp
out
test
arpl
jecxz
ss
aaa
inc
repz
mov
jl
cld
cltd
lods
mov
xchg
arpl
inc
add
cltd
cld
out
cmc
lods
mov
adc
jmp
out
setp
movsl
mov
push
scas
out
loop
aas
mov
sub
arpl
jge
adc
mov
dec
cli
inc
sbb
and
in
add
pop
ja
add
adc
or
push
movsl
insb
int3
pop
cwtl
in
data16
fildl
jmp
mov
ss
out
es
jae
jle
add
shrb
iret
pop
dec
fists
sub
sahf
cmp
jno
sbb
add
cmpsl
or
arpl
clc
test
aaa
mov
mov
out
mov
xor
push
bound
add
jo
add
lods
shrl
stos
cmpsb
mov
in
rcrb
mov
push
bound
roll
mov
or
push
adc
add
stos
pop
sbb
add
lcall
sub
and
pushw
jno
dec
out
jae
push
inc
push
jecxz
insb
scas
mov
sub
mov
jmp
out
inc
test
mov
fprem1
push
iret
mov
call
add
ds
jo
mov
push
sti
lds
sbb
push
add
mov
loop
insb
mov
in
stos
and
jmp
out
rorb
arpl
sub
adc
shll
insb
cli
jmp
insb
and
lret
xor
or
xchg
test
pusha
lret
outsb
sub
mov
pusha
pop
add
scas
adc
dec
out
push
dec
aad
jp
imul
gs
and
test
in
add
jno
pop
sar
xor
in
push
cmpb
xor
sub
std
inc
jp
inc
int
iret
jle
xlat
std
xchg
mov
cmc
mov
sbb
pop
add
add
popa
xchg
or
jb
pop
dec
add
cmpsb
cmc
pop
ret
fcmove
jmp
sbb
sti
stc
add
mov
repz
imulb
loope
repnz
or
pop
jle
pusha
std
adc
aas
ficoms
mov
insl
push
add
out
push
pop
sbb
inc
sub
movsl
jl
bound
xor
dec
inc
sub
inc
test
dec
cwtl
aad
out
sub
test
inc
mov
ret
bound
jne
sub
xchg
aam
add
jp
cmp
or
dec
dec
test
xchg
or
inc
mov
add
add
cmpsl
popf
lock
and
xlat
dec
sbb
jno
xorl
sub
jmp
and
push
call
insb
push
ret
xchg
fmull
inc
mov
and
mov
data16
fsubrs
loop
mov
mov
xchg
fsubrl
aam
jg
add
sub
or
xor
jmp
mov
daa
push
mov
or
bound
push
testl
inc
test
jle
jp
in
mov
jmp
xchg
fldt
mov
xor
inc
lret
lret
roll
push
push
cmpsb
mov
shll
lock
cli
inc
adc
adc
cmp
inc
xchg
jmp
dec
bound
add
mov
mov
fisubrs
movsl
xor
scas
aam
mov
insl
lods
jb
adc
dec
dec
cmpl
js
add
out
in
lret
adc
mov
add
pop
xchg
int3
lcall
cmp
inc
adc
test
dec
push
mov
cmp
cwtl
scas
loop
ljmp
cwtl
mov
movsl
or
jno
and
dec
int
adc
add
adc
hlt
jmp
hlt
pop
mov
je
sub
sub
decl
pop
cmp
xchg
daa
and
stc
jp
das
mov
or
cmp
scas
dec
push
cmpsb
sbb
add
mov
test
insl
stc
pop
sbb
dec
out
pop
cld
ss
mov
adc
scas
mov
sub
or
fs
xchg
sub
lret
or
test
test
cmp
frstor
mov
pop
mov
jg
add
clc
test
fprem1
js
mov
add
int3
cwtl
mov
mov
mov
inc
leave
sbb
call
mov
sbbb
sti
scas
loop
daa
daa
imul
aas
sbb
cmp
pop
mov
xor
addl
push
shll
popf
xor
cmc
sub
ja
clc
inc
loope
add
loopne
pop
xor
cmp
inc
adc
mov
rorl
jl
fiaddl
inc
xchg
cmp
dec
loopne
aam
stos
test
inc
aaa
mov
adc
test
mov
dec
fnsave
jecxz
pop
loopne
in
fsubl
aaa
mov
and
xor
and
nop
not
jmp
add
mov
dec
frstor
fildll
lret
in
scas
push
sbb
fbstp
popa
jo
sti
jl
iret
jne
xchg
sbb
push
fstps
insb
or
cmp
xlat
sbb
pop
lea
fcoms
sbb
into
cmp
insb
push
sub
xchg
mov
or
out
and
dec
mov
mov
fdivs
negb
insl
cmc
es
es
xchg
out
rcrl
jae
cmp
call
cmp
mov
xchg
dec
outsb
mov
rcl
pop
and
lcall
xor
lock
dec
cmp
lret
mov
or
sahf
mov
in
mov
xchg
cmpsb
mov
xchg
mov
mov
out
xchg
jle
das
push
incl
std
cmp
jp
inc
pusha
fdivrp
jb
insl
in
faddl
pushf
push
jb
mov
or
stos
popa
xor
addr16
dec
mov
cs
sub
cmpsl
sbb
subb
cmpsb
rorb
mov
add
push
ret
xor
xor
rorl
gs
aad
and
mov
aam
inc
xchg
jp
inc
mov
pop
imul
insb
lea
mov
pusha
insl
push
sti
fisttps
jb
pop
arpl
sub
mov
push
fs
push
cmp
stos
sti
mov
mov
push
jb
sub
test
hlt
or
xor
int
xor
sub
and
andnps
jne
mov
jge
jecxz
inc
cmp
push
dec
adc
aam
mov
fcoml
loope
mov
movl
adc
loop
arpl
mov
xor
iret
mov
mov
sub
ret
in
shrb
push
inc
int3
and
pusha
pop
mov
mov
outsb
mov
jo
leave
mov
adc
xchg
dec
xchg
loope
sbbb
adc
lret
jb
lcall
stos
mov
jne
push
dec
shrl
je
bound
push
add
pop
icebp
lock
add
shll
call
and
push
xchg
scas
ret
imul
mov
push
lods
inc
insl
cmpsb
mov
std
jge
fists
push
pop
jge
repnz
pop
push
mov
sbb
ds
gs
jmp
pop
mov
xchg
pop
mov
addr16
in
movsb
inc
loope
adcb
test
lods
add
jl
sbb
jl
cmp
xor
ret
fimull
in
jle
pop
test
aad
pop
and
sbb
clc
adc
sub
add
fcoml
repnz
mov
or
aas
inc
cmpl
or
push
je
movsl
mov
lret
jmp
and
mov
mov
in
xor
test
loopne
push
cmp
sbb
and
cmpsb
xchg
pop
mov
cmpsb
call
mov
xchg
and
bts
ret
push
test
xor
es
adc
pop
mov
sbb
cmp
aaa
push
dec
les
insl
das
jns
push
mov
dec
jo
scas
aaa
adc
adc
scas
leave
daa
jae
lcall
ljmp
lahf
xor
push
cmp
mov
cmp
test
sahf
mov
jle
xor
jmp
lahf
mov
lods
jno
lds
std
fcmovbe
dec
repz
inc
stos
xchg
sub
sub
xor
inc
decb
cwtl
cltd
jns
out
imul
pop
and
push
clc
leave
cmp
wbinvd
sbb
xchg
insl
adc
jnp
push
cltd
mov
dec
aam
cmpsb
jl
xchg
rol
adc
aad
pop
test
jmp
pop
loop
and
or
sub
neg
outsb
ds
mov
cmp
jne
adc
insb
inc
lahf
or
sub
mov
pop
sub
push
xchg
fsubrl
popf
lret
inc
data16
lret
mov
mov
and
aad
dec
adc
sbb
xor
push
subb
hlt
sbb
test
fnstenv
js
mov
and
push
push
sti
outsl
sahf
xchg
mov
push
xor
mov
sbb
or
ljmp
or
xor
pushw
pop
je
or
hlt
test
and
ja
xchg
jg
cmp
bound
call
pop
in
sbb
pop
jae
int
out
cmp
add
fwait
std
scas
cmpsb
mov
inc
push
enter
in
in
scas
inc
pop
jg
ds
mov
mov
jbe
inc
sarl
inc
sbb
outsl
gs
test
popl
mov
aam
sub
and
cmp
mov
sub
push
pop
lea
sbb
scas
repz
mov
push
and
inc
inc
jge,pn
ret
mov
ja
fwait
shrl
jp
cmp
daa
xor
adc
das
bound
lods
sub
sbb
xchg
pop
cmpsl
add
bound
jnp
clc
inc
inc
mov
testb
rolb
jge
mov
sub
ret
xor
mov
out
popf
fstpl
ljmp
les
movsb
cmpb
cmp
call
xor
ror
daa
xor
insl
sub
pushf
push
sbbl
dec
std
dec
bound
lods
cwtl
aam
cmp
jns
cmpsb
jl
insb
adc
or
bound
scas
sbb
ficompl
addr16
out
sti
push
xor
jno
daa
frstor
push
dec
sarl
add
pop
xor
daa
sbb
pop
inc
pop
mov
out
or
jnp
jno
jge
push
sbb
mov
and
cmp
sbb
jno
fmull
jbe
or
mov
ds
mov
jnp
insl
or
sub
and
mov
scas
shrl
mov
cmc
test
adc
pop
ficoml
or
pop
je
cmpsb
sub
mov
mov
ds
out
xor
data16
jns
not
cmpsl
repz
imul
mov
push
jno
out
popf
gs
mov
mov
or
loopne
lods
pop
mov
loop
sbb
inc
add
out
xor
stos
mov
lods
sbb
and
xchg
mov
push
push
sbb
cmp
int
adc
or
mov
test
mov
or
add
mov
lahf
jb
cmpsb
and
gs
inc
pop
and
adc
pop
filds
pushfw
dec
rorb
hlt
iret
jb
sbb
aad
sub
adc
mov
cmpsl
push
les
ret
jecxz
ss
add
jecxz
sub
test
dec
xchg
scas
shlb
add
in
iret
sub
push
fistps
xchg
mov
sahf
das
js
mov
jmp
and
xchg
or
scas
add
mov
jno
in
mov
mov
repz
add
pusha
and
out
cmc
outsb
repnz
or
call
testb
notb
out
movsb
jecxz
dec
adc
mov
xchg
out
adc
adc
xchg
mov
fs
or
or
lods
mov
jl
mov
test
lret
bound
push
push
cmp
rcl
inc
inc
lock
push
jb
push
pop
mov
out
xchg
ds
stos
out
ret
in
jge
movsl
ljmp
pop
sub
xchg
inc
push
adc
mov
pop
jae
dec
cmp
fdivrs
jbe
cs
fstpl
jo
mov
xor
in
mov
push
cmp
xchg
add
mov
lods
loop
cmp
stos
adc
test
sub
jmp
test
shrl
loopne
jle
add
dec
in
xor
xchg
jb
jns
push
xor
dec
std
mov
das
push
test
sarl
pushf
add
push
test
stc
movsl
pop
mov
test
lret
or
pop
pop
sub
pop
sbb
or
scas
nop
imul
push
mov
adc
repnz
out
lcall
jl
adc
enter
cmp
enter
push
push
push
insb
sbb
ret
jge
fistpll
inc
aas
pusha
pop
outsl
mov
mov
iret
mov
subb
xor
ljmp
mov
push
mov
das
fcmovnu
or
pop
and
pusha
fsub
cmpsl
cwtl
mov
mov
and
mov
pop
movsl
iret
adcl
or
add
jae
mov
mov
add
pop
push
mov
outsb
cmpsb
hlt
faddl
cmp
push
out
dec
ret
add
cli
addr16
pop
jne
movsb
jl
pop
inc
or
shr
aam
insb
cmp
mov
xchg
mov
imul
ja
dec
mov
sbb
jbe
add
out
cmp
sti
mov
push
stos
sub
adc
je
push
iret
lock
mov
xor
jg
ret
scas
mov
lcall
xor
loope
ds
inc
xor
mov
ret
xor
sub
or
mov
add
in
fstl
pop
addr16
dec
jmp
sub
mov
inc
inc
push
push
push
imulb
or
dec
mov
jnp
mov
aaa
pushf
jb
adc
pop
pop
andb
imul
shll
and
cmp
inc
and
add
pushl
mov
lea
sahf
adc
out
out
cld
movsl
loop
sbb
andl
mov
mov
lret
inc
scas
jno
loop
mov
test
loopne
mov
jmp
icebp
loopne
in
sbb
add
cmpsb
cli
cs
mov
inc
aaa
aam
cmp
jne
fmull
push
cmpsb
test
jb
in
inc
shll
mov
fwait
and
jmp
mov
in
push
xchg
add
inc
adc
ss
cmovle
sahf
shl
sbb
shll
imul
fdiv
pop
lock
pop
adc
push
inc
or
mov
mov
or
push
inc
push
mov
lret
test
push
sub
fistps
aas
push
xor
aaa
lds
mov
ja
adc
call
sub
stos
and
cltd
test
cmpsl
cmp
mov
xchg
cmc
sbb
divl
and
add
js
out
loope
rorb
ftst
rcl
call
cs
sbb
push
mov
movsl
pushf
mov
mov
add
outsl
add
imul
outsl
dec
lret
aad
rol
add
inc
mov
xchg
jb
pop
cmc
out
clc
ret
out
inc
dec
cld
pop
xor
or
adc
loop
idivl
and
rcll
adc
fs
pop
add
adc
mov
into
sub
das
inc
stos
mov
cwtl
sbbl
mov
lret
movsl
jle
lcall
out
sarl
add
xchg
ret
ret
mov
push
loopne
lods
fists
sbb
scas
popf
xorl
add
mov
cwtl
push
dec
std
xchg
mov
cmp
into
daa
out
and
xor
add
mov
enterw
movsb
push
mov
sbb
into
mov
dec
or
cmp
cmp
cmp
pextrw
xchg
in
lock
imul
ror
push
outsl
aad
cmpsb
ret
loope
xchg
cltd
dec
pop
adc
push
dec
fisubrl
clc
ret
repnz
mov
cld
adc
imul
push
lea
loope
mov
jg
fmul
sbb
jecxz
ss
push
xor
mov
cvttps2pi
loopne
divl
cli
js
loop
std
out
jnp
loop
inc
and
cmp
testl
es
sub
jns
mov
rol
pusha
repnz
push
aad
cli
or
nop
adcl
push
xor
cmc
pop
and
dec
push
imul
xor
je
sbb
int3
xchg
sbb
cli
adc
mov
pusha
xor
into
in
rorb
mov
popf
out
test
add
xchg
sub
daa
jno
xchg
fnstsw
pop
sub
and
add
rcl
iret
cli
ret
pop
mov
aaa
nop
ss
lret
xchg
call
mulb
sub
test
repnz
push
and
loope
xchg
dec
pop
mov
test
cmp
test
ja
jecxz
enter
add
jl
arpl
adc
xchg
int
cmp
ret
mov
or
xchg
int
fs
addr16
sbb
movsl
in
cwtl
cmp
add
dec
gs
push
cmpb
imul
lods
inc
lock
int3
sub
dec
fstpl
cld
lock
imul
in
or
sub
leave
sbb
push
ss
in
xchg
shr
stc
enter
in
jnp
adc
in
push
pop
fmuls
inc
push
ljmp
shll
jno
out
push
jne
nop
jne
lahf
pop
or
les
mov
dec
movsb
test
aad
sbb
mov
std
mov
popf
add
mov
mov
andb
adc
in
push
jo
icebp
xchg
dec
jl
xchg
add
outsl
pop
mov
mov
inc
shl
jnp
negl
cmp
sbb
in
xchg
xchg
xorl
movsl
arpl
adc
jecxz
out
and
shrl
fstps
pop
adc
movsl
movsl
out
clc
mov
fcompl
and
pop
aam
aaa
xchg
icebp
xchg
xor
repz
jb
xor
add
pop
sub
aam
dec
imul
in
mov
lods
das
dec
pop
push
icebp
push
or
movsb
fimull
mov
and
dec
das
ja
shll
cmp
pop
add
aaa
insl
push
inc
sti
pop
ret
movsb
addr16
sbb
outsb
push
and
hlt
inc
add
aaa
popa
lret
add
xor
jl
imul
test
int3
sar
sbb
enter
insb
dec
jns
push
call
sub
frstor
or
repnz
js
sti
cli
pop
dec
or
mov
adc
pop
pop
out
arpl
mov
push
sbb
test
pop
das
gs
cmpl
std
fbstp
lret
imul
imul
cmpl
add
stos
pop
inc
sarl
ja
test
jae
aad
or
aam
xor
dec
adc
or
cmp
outsb
cmp
loop
clc
ja
cld
mov
push
mov
add
test
pop
pop
mov
cmpsl
lret
xor
xchg
or
lods
or
mov
or
sahf
cwtl
mov
pop
icebp
pop
xchg
add
push
into
shrl
fwait
lea
pop
cmp
pop
adc
or
gs
inc
mov
push
lods
sub
mov
jl
xlat
push
dec
mov
xchg
pusha
push
cmc
xlat
cmpsl
pop
jb
push
out
adc
aas
pop
bound
mov
mov
cmp
sbb
pop
sub
and
dec
cld
addr16
or
mulb
pop
push
test
push
movsl
sahf
dec
outsb
cli
jno
cmp
stc
inc
and
leave
addb
dec
pop
lret
scas
push
xor
cmp
rcrl
addr16
xor
mov
sbb
and
sub
mov
mov
xchg
ds
out
cmp
lock
adc
sysexit
mov
out
gs
bound
mov
mov
xor
mov
lods
ja
sbb
xchg
xchg
out
pop
out
in
mov
mov
lds
and
subb
adc
mov
sbb
daa
mov
adc
loop
pop
push
in
sub
xchg
test
push
aas
xor
cmpsl
insb
loope
mov
mov
pop
stc
iret
mov
aam
loope
push
movsb
push
jg
cmc
arpl
pop
fwait
cmc
adc
fucomip
add
push
dec
and
jecxz
sub
mov
in
mov
xor
pushf
dec
sbb
fisttps
lock
xchg
adc
daa
inc
cmp
movsl
pop
jae
or
stos
scas
mov
push
loope
into
mov
cmp
pop
add
sahf
inc
sub
dec
mov
rcl
out
mov
pop
loope
movsl
lds
cmp
test
jle
insl
jbe
ljmp
addr16
mov
outsl
inc
shll
test
jae
adc
dec
jne
lret
lcall
mov
fsubrs
out
stos
lcall
fsubs
leave
aad
or
mov
cmpsl
cmc
push
cmp
inc
mov
add
aaa
leave
into
xor
movsl
jae
mov
loope
jo
and
aam
cwtl
push
jbe
mov
xchg
mov
stc
out
add
fucompp
fidivrl
test
sub
dec
pop
cmp
sahf
jecxz
pmulhuw
sbb
mov
jne
std
lods
rolb
xchg
jb
pop
ret
xor
std
das
clc
mov
int
jecxz
lret
cltd
xchg
pop
jne
decb
adc
pusha
out
int3
or
lcall
insb
outsb
adc
hlt
loop
in
xor
ss
cmpsl
imulb
stc
fwait
xor
insb
es
adc
frstor
and
sbb
hlt
sub
mov
mov
nop
push
cmpsl
mov
mov
pop
mov
mov
jae
cmp
or
xor
xor
adc
xchg
mov
push
out
sahf
faddp
adc
pusha
scas
mov
jg
sti
or
movb
dec
push
xchg
or
sbb
jp
add
cmp
sbb
lahf
cmp
xchg
int3
add
fidivrs
sub
sbb
xchg
mov
pop
in
cltd
inc
add
sub
rclb
lahf
push
dec
jl
xchg
push
aad
js
pop
jae
mov
sbb
outsl
jmp
pushf
cltd
and
sub
gs
ret
mov
mov
in
test
hlt
js
pop
outsl
ss
insl
ret
adc
xchg
inc
adc
pop
mull
pop
mov
mov
push
add
mulb
pop
mov
je
lea
mov
movsl
shr
adc
mov
lock
jge
add
sub
loop
mov
inc
rcrl
push
sub
inc
jo
pop
xor
enter
ljmp
mov
cmp
repz
fistpl
shlb
cmp
hlt
push
mov
jge
jns
mov
js
dec
xchg
incb
jmp
popf
mov
mov
mov
add
and
mov
xor
pusha
cmp
imul
add
mov
dec
or
adc
xchg
mov
mov
leave
inc
jbe
daa
in
sub
xchg
jg
push
jmp
adc
xchg
and
inc
iret
add
sub
orb
adc
adc
sub
jmp
roll
js
xor
dec
mov
mov
fisubrl
lcall
cmp
outsb
mov
rorb
push
int
dec
jae
aam
or
jecxz
dec
hlt
fnstcw
cmp
cmp
push
jp
mov
gs
xor
mov
cmp
jge
stc
inc
mov
pop
test
xor
fldl2t
test
xor
je
pop
sbb
push
rclb
mov
in
ds
jne
jecxz
add
sub
sub
or
sub
inc
insb
std
inc
div
and
test
push
clc
mov
jle
in
inc
push
icebp
inc
and
imul
test
add
dec
shl
loope
repnz
outsl
orb
in
xor
pop
jb
mov
xchg
sbb
fdivr
mov
aam
lock
outsl
adc
fiadds
and
inc
lods
pop
rclb
push
pop
ss
or
das
add
mov
jns
pop
inc
sub
mov
test
adc
sbb
movsl
xchg
clc
in
sbb
xchg
cmpb
into
mov
xchg
sub
out
cmp
xor
mov
shlb
and
insb
in
loopne
pop
and
stc
pusha
or
pop
sbb
std
sbbl
pop
push
or
mov
test
bound
xor
sarl
dec
jle
sbb
dec
sub
sbb
bswap
pop
int3
fiadds
push
xchg
pusha
or
mov
cmp
dec
addr16
loop
mov
into
push
outsb
cwtl
loopne
repz
pop
je
pop
lcall
idivb
pop
sbbl
leave
inc
mov
jbe
mov
aaa
out
cmp
cmp
fstl
xchg
lods
xchg
xor
mov
and
addl
enter
out
jmp
add
sbb
push
movsb
jp
insb
pop
push
push
pushf
cmp
fcoml
xlat
lret
pusha
xor
shlb
push
jae
test
movsb
je
and
push
jno
mov
outsb
add
ja
loopne
mov
mov
pop
pop
push
sbb
clc
pop
pop
xchg
push
mov
cmpsb
scas
mov
in
sbb
test
ret
fadds
pop
cmpsl
test
mov
test
push
lret
adc
daa
add
inc
add
sub
cld
mov
inc
push
push
add
inc
mov
and
mov
scas
mov
out
and
cmpsl
lret
cmp
xchg
lcall
push
jnp
sub
fsubs
add
inc
cwtl
sbb
add
pop
pusha
push
fstpl
and
or
ficomps
test
and
mov
mov
mov
pop
dec
call
ret
pop
addl
and
push
pop
jecxz
jbe
into
movsb
push
lock
cmp
scas
or
xlat
mov
loope
and
lret
insb
lods
add
hlt
mov
adc
mov
loope
insb
sub
cmp
mov
ret
ljmp
or
xor
movsl
sub
or
lea
xor
mov
dec
jne
sahf
out
jne
sub
jecxz
nop
sbb
lods
bswap
jbe
cmp
dec
push
xchg
cld
mov
cmpsb
aas
nop
adcb
mov
clc
sbb
leave
dec
cmp
loope
hlt
jge
mov
mov
mov
sahf
les
lret
pop
xchg
jns
imul
sar
jne
jno,pt
int3
sar
dec
test
sub
jno
cli
popa
outsb
mov
adc
arpl
int
rcl
popa
jns
addb
push
mov
ljmp
or
repz
stos
test
xchg
in
in
and
mov
movsl
jns
pop
push
xchg
mov
jb
cmp
repz
lods
sbb
add
insl
jb
hlt
mov
pop
mov
adc
cmp
xchg
in
mov
jl
pop
aaa
nop
inc
mov
sbbl
or
and
roll
icebp
dec
pop
and
ss
movsl
dec
pop
call
mov
fmuls
dec
insb
push
adc
sub
aad
mov
dec
ss
adc
dec
adc
loopne
jmp
push
mov
adcb
test
xchg
mov
pop
add
std
lock
mov
gs
loopne
mov
lcall
push
push
push
movsl
xlat
xor
inc
push
mov
cltd
sbb
mov
mov
inc
rolb
ja
and
jae
adc
popa
aaa
or
jbe
xorb
push
mov
stc
push
push
mov
adc
mov
fldt
enter
out
cmp
repnz
adc
sub
dec
mov
mov
push
inc
cmp
outsl
push
xchg
testl
jge
lock
mov
jle
mov
push
mov
mov
push
iret
xor
sbb
cmp
sbb
xchg
jle
inc
dec
push
sub
and
adc
lods
mov
sbb
or
mov
js
pop
or
sbb
dec
xchg
inc
int
shlb
cmp
cwtl
push
cmp
cmp
jmp
mov
xor
pusha
cltd
sbb
pusha
jns
add
mov
push
sti
pop
mov
xor
sbb
cmp
jecxz
mov
cmp
decl
rorl
fsubrs
mov
ljmp
jmp
inc
out
inc
stc
add
cld
add
mov
js
data16
insb
rcr
inc
jns
mov
pusha
sbb
xchg
mov
push
lods
sbb
mov
sahf
lret
sbb
mov
loope
jecxz
jo
xchg
subb
pop
outsb
cmp
mov
mov
sahf
js
pusha
in
mov
push
push
orl
mov
cmp
divb
or
ret
jg
in
into
cld
imul
ja
aaa
sbb
ljmp
jecxz
dec
adc
mov
xlat
or
or
push
and
adc
outsl
sahf
and
dec
push
subb
lret
inc
jmp
stos
hlt
jg
cmp
ret
dec
loopne
push
xchg
push
inc
mov
inc
cmp
scas
adc
cmp
scas
jne
mov
mov
out
pop
and
das
fiadds
mov
cmp
sub
push
sbb
pop
fadds
and
pop
mov
stc
fcmovne
mov
jb
lahf
xlat
je
bound
rol
shlb
sbb
into
inc
mov
enter
cwtl
leave
pop
xor
or
data16
insl
subl
mov
arpl
loope
ja
and
xchg
cmp
sbb
sti
xor
movsb
insl
inc
mov
push
mov
scas
aad
sbb
outsb
sub
sub
cmp
or
shlb
sahf
out
jnp
into
pusha
pop
push
iret
xchg
sub
or
int3
mov
lods
inc
aad
lds
test
xchg
mov
call
xchg
or
ljmp
pop
in
enter
leave
add
push
jnp
cs
jg
nop
insb
inc
add
test
pop
je
adc
aas
add
jo
mov
sbb
jnp
stos
xchg
xlat
mov
test
scas
pop
cld
jo
and
xchg
lea
fldt
arpl
push
into
sub
xchg
fs
jne
add
and
in
clc
cld
mov
shll
mov
icebp
pop
sub
mov
push
fcomp
xor
cmp
mov
imul
popa
lcall
pop
ret
and
dec
mov
sarl
cwtl
leave
cmp
fs
popa
fstpt
adc
mov
mov
or
bound
xchg
xor
loopne
jne
add
ss
sub
dec
dec
loope
stos
imul
jp
and
call
or
jmp
push
jb
shl
loop
jno
mov
mov
adc
add
add
pushf
pop
push
je
icebp
in
inc
mov
or
xchg
sbb
das
popa
shufps
jnp
subb
test
adc
cmp
rorb
or
arpl
fstp
add
mov
pop
sub
incl
cmpsl
pop
mov
xchg
mov
push
sub
and
cmp
add
je
ja
push
shrl
mov
es
test
mov
mov
std
in
lcall
test
ja
sbb
hlt
add
sahf
cmp
js
jle
push
daa
xchg
push
and
scas
and
sub
push
mov
mov
pop
sub
inc
mov
mov
sbb
mov
lret
scas
arpl
add
cli
stos
dec
push
mov
addr16
movsl
sarl
dec
and
mov
lcall
mov
push
mov
or
or
ror
sbb
int3
test
and
and
or
loop,pn
int3
repnz
sub
ret
mov
fucomi
and
mov
jne
sbb
pushf
sub
sbb
movsb
push
sbb
loop
and
test
jge
negb
outsl
inc
cmp
inc
leave
outsb
sti
pop
dec
repnz
or
inc
adc
add
jp
lea
sub
lahf
push
inc
aad
push
mov
aas
push
fdivl
jno
xchg
fadds
or
stos
call
xchg
jl
rolb
sub
push
cmpsb
out
mov
jne
test
dec
or
ljmp
jecxz
dec
jl
insl
shl
mov
xchg
lods
aad
push
fimuls
mov
cmp
stos
stos
xchg
sbb
test
into
xchg
aaa
ljmp
dec
xchg
or
push
outsb
into
cs
jae
stos
adc
mov
and
jecxz
test
lahf
mov
ja
stc
xlat
sbb
sbbl
push
xor
adc
xor
aad
testb
imul
add
lods
or
jmp
cmc
xlat
fwait
or
mov
lahf
xlat
mov
lea
jo
sbb
push
fldl
fistpll
aam
xor
dec
or
push
test
lcall
jl
lret
iret
scas
sub
mov
jbe
jmp
icebp
aaa
leave
in
lods
out
jb
outsl
pop
cmp
lret
in
dec
ror
hlt
insl
jae
xorl
jae
adc
and
dec
cltd
std
popf
out
stos
push
add
ret
mov
imul
add
mov
js
add
mov
dec
cli
lret
xchg
aam
loope
sbb
aas
cwtl
push
std
lcall
sbb
outsb
adc
push
push
jnp
push
cld
mov
push
ljmp
or
xchg
loopne
pushf
lods
jmp
rorl
push
out
fisubs
lcall
mov
add
scas
xor
ret
push
sti
fs
stos
aad
shrl
lea
sbb
xor
daa
fs
in
adc
push
sbb
jo
test
xor
adc
dec
aad
jnp
in
mov
jnp
or
and
xor
int3
and
sbb
mov
or
int3
mov
bound
in
inc
lret
cli
rorl
es
cmpsb
xlat
add
lock
jecxz
aad
jmp
xchg
movsl
sbb
imul
mov
cmp
jecxz
jecxz
bound
mov
dec
xlat
add
loop
adc
pushf
xchg
fistps
adc
cmp
je,pn
jg
popa
js
mov
cmp
stos
addl
cmc
cmp
pop
sahf
scas
push
cmp
imul
scas
cmp
mulb
lea
lcall
xchg
mov
nop
out
lret
jmp
ret
jne
cmpsb
and
xor
outsl
adc
or
lret
dec
jp
jne
mov
inc
adc
lahf
sub
testb
and
xchg
xchg
cmp
inc
addr16
lock
mov
mov
loopne
sbb
jb
je
and
cld
mov
into
inc
jecxz
xchg
adc
outsl
adc
cmp
add
lea
jno
sahf
inc
mov
add
and
je
pop
insl
push
arpl
rcrb
pop
jle
push
fnstcw
push
adc
imul
inc
data16
int
push
mov
xor
and
adc
leave
repz
fs
or
adc
imul
pop
subb
into
loopne
xor
and
mov
cli
loopne
and
xchg
shl
adc
sub
xchg
mov
fwait
movsl
lcall
mov
xor
aaa
push
pop
cmp
loop
push
packssdw
xlat
cmpsl
pop
mov
test
add
mov
pop
jg
inc
dec
or
cmp
icebp
jb
xor
pop
loop
cltd
popa
xchg
inc
jbe
dec
les
pop
arpl
fbstp
faddl
in
movsb
es
int3
in
aas
shrb
xchg
add
arpl
ss
cltd
out
jno
in
decb
pop
cmpsl
inc
loopne
rorl
movsb
cmc
mov
imul
xchg
lcall
jmp
or
cwtd
push
andb
movl
mov
cwtl
sub
int3
mov
xchg
inc
in
xor
sbb
aaa
xor
int3
jns
lds
mov
sahf
or
sbbl
scas
push
cs
xchg
mov
cs
aas
and
gs
xchg
inc
cmp
mov
stos
in
xchg
fsts
rolb
jmp
xor
and
movsb
jbe
aad
imul
out
and
sahf
dec
cwtl
pusha
dec
fstps
ljmp
nop
pushf
incb
or
sahf
arpl
xor
dec
xchg
pop
xor
es
enter
jno
xchg
mov
push
or
int3
mov
xor
mov
cmp
cmp
in
rorb
jp
insl
push
lock
jle
in
inc
outsl
cmp
add
xchg
ret
cmp
imul
adc
and
out
jnp
ja
mov
sub
adc
push
ficoml
cmp
sbb
cmp
pop
mov
mov
xor
cmp
arpl
push
shrl
and
jne
daa
dec
and
stos
mov
pop
cmp
shrl
hlt
pop
lcall
push
xchg
cli
push
lock
dec
add
in
in
jp
add
and
stos
jne
jge
idivl
into
into
dec
lea
inc
mov
pushf
mov
mov
dec
sbb
jle
imul
xor
rcrl
pop
xor
lea
lret
dec
mov
cmp
in
int
cmp
or
icebp
divl
out
mov
movb
jb
ds
jl
cld
loopne
pop
mov
bound
sbb
je
shlb
scas
cmp
adc
mov
jns
mov
pop
mov
and
btrl
bound
jecxz
sahf
iret
bound
pop
xor
repnz
pop
lods
cwtl
icebp
push
fsub
mov
fsubr
xchg
push
cs
fldt
test
dec
jno
mov
ss
push
or
cmpl
fwait
cmp
inc
test
push
scas
mov
jae
test
std
movsb
mov
inc
loopne
fbstp
mov
push
dec
lret
jg
dec
xchg
push
test
sar
mov
dec
pop
fdivl
mov
mov
stc
pop
pop
or
lds
xor
leave
jge
mov
or
movsl
inc
sti
loop
mov
pop
je
xor
cmp
xchg
das
push
std
das
dec
into
test
inc
mov
gs
mov
jne
lea
in
mov
sub
test
inc
rcll
cmp
ret
or
jnp
test
mov
fistl
push
stc
dec
and
std
rcrl
cmp
or
xchg
ret
inc
pop
pushf
sahf
jnp
popf
jp
movsl
mov
daa
scas
push
cmp
test
das
pop
cmp
cmc
mov
xchg
out
cmpsb
js
lods
push
xchg
enter
hlt
ds
jne
and
push
inc
jae
movsb
lock
inc
ret
xchg
popa
dec
das
cmp
lahf
sub
sub
mov
out
jle
ljmp
int
lock
popf
popa
push
mov
pusha
jno
jno
mov
into
icebp
mov
arpl
les
xlat
mov
jb
mov
in
inc
sbb
dec
icebp
enter
aad
adc
rclb
pop
mov
push
outsb
repz
push
xor
dec
imul
cmp
ret
decl
pushf
faddp
std
dec
test
jo
or
mov
dec
scas
dec
pop
push
insl
or
fs
mov
fisttpl
or
scas
add
push
loop
data16
inc
repnz
cmp
es
in
xor
and
icebp
pop
cwtl
cmpsb
inc
sbbb
fwait
ret
ret
push
jecxz
cmp
cs
cltd
out
pop
xchg
mov
fisubs
cmp
fidivl
int
jg
add
dec
loope
xor
jge
clc
lcall
cmp
aam
subl
fwait
sub
mov
jbe
out
ss
shrl
mov
sahf
or
cwtl
es
loop
add
dec
push
in
les
inc
xor
or
sti
out
in
mov
jns
pop
and
rcr
dec
and
int3
or
mov
lahf
enter
inc
outsb
in
adc
adc
cmp
ret
outsb
out
into
cmc
aaa
or
push
adc
test
cmp
or
lock
jecxz
cmp
sbb
sti
test
mov
bound
add
mov
sbb
jnp
lcall
daa
fucomi
inc
js
xchg
aam
cltd
cmp
or
lods
push
cs
aad
or
mov
das
inc
rcr
push
lock
and
sbb
xor
pop
int
into
push
jle
ljmp
mov
fs
xor
in
sbb
add
mov
mov
adc
add
dec
std
rcrb
xchg
icebp
jmp
or
push
inc
mov
sbb
ja
jecxz
notb
nop
push
imul
mov
jmp
mov
inc
sbb
add
or
cmp
mov
jge
std
jns
mov
xchg
adc
popf
stos
ja
mov
jae
mov
mov
addr16
mov
dec
xchg
inc
lret
lahf
shr
or
fistps
inc
fiaddl
jo
movsb
repnz
or
add
rcr
ds
or
outsb
movsb
push
add
outsb
pop
nop
movsb
adc
dec
fwait
mov
push
sarb
stos
dec
ficoms
movl
sub
pop
push
pop
ret
or
inc
mov
mov
das
in
mov
addr16
ret
mov
stos
inc
adc
jae
aad
dec
adc
sbb
jnp
mov
cmp
cltd
xchg
sti
jle
push
in
sbbb
adc
fdivl
loope
add
stos
sbb
pusha
dec
push
dec
adc
push
push
bnd
cmp
nop
push
mov
ja
je
xchg
cmp
dec
cmc
mov
fnstsw
mov
dec
call
xchg
lea
repz
in
cltd
stos
jle
fistpl
mov
aad
dec
fcompl
popa
push
add
pushf
and
lret
fcomps
in
clc
jno
and
das
mov
xchg
dec
and
pop
das
adc
popf
imul
or
xor
push
dec
rcll
imul
jl
and
ret
cmp
or
hlt
nop
xor
adc
mov
pop
jne
add
inc
pop
and
inc
or
or
jge
sahf
add
mov
loope
jecxz
mov
and
adc
jo
push
add
iret
jp
call
jmp
xor
rol
jb
rcrb
and
mov
lods
dec
addr16
dec
aad
scas
push
dec
jno
adc
popa
pushf
adc
push
xlat
xchg
loopne
sbb
mov
ss
ret
push
jmp
stos
clc
iret
fldl
mov
aaa
jle
and
insb
inc
scas
pop
adc
fisubs
test
mov
push
loope
add
adc
push
movsl
pop
subb
ljmp
push
pop
fsts
dec
jns
push
shll
aas
nop
jl
loope
fdivrl
in
test
mov
fwait
sar
pushf
cmpsb
add
pushf
ss
arpl
cwtl
sub
mov
mov
add
popa
or
leave
sarb
fstps
imul
mov
inc
xor
pop
mov
and
movsl
out
pop
add
ljmp
mov
xchg
jmp
subb
mov
int3
and
adc
push
cmc
pop
dec
outsb
cltd
adc
lods
ss
in
adc
pop
mov
xor
stc
popf
inc
incl
popf
push
fwait
xchg
imul
sub
movsl
fs
loopne
pop
pop
mov
loope
push
add
inc
loope
adc
cmp
inc
mov
iret
xchg
push
jne
push
mov
xor
xchg
inc
jns
cmp
ficomps
rcll
dec
and
data16
inc
sub
es
rorl
mov
cmp
sub
inc
xor
mov
sahf
adc
add
lret
push
jno
stos
aaa
and
cltd
mov
scas
xchg
je
cmp
std
cmpsl
mov
cmpsl
test
push
sarb
stos
fsubr
lock
ret
sbb
cwtl
ret
mov
push
cmp
xorb
or
pop
add
mov
js
pop
xor
test
adc
fimuls
js
xor
or
repz
sub
dec
shlb
sub
daa
mov
cs
sbb
dec
dec
push
lcall
push
mov
mov
add
jg
fs
clc
jp
jb
or
adc
out
and
or
dec
push
movsb
pop
or
stos
imul
dec
sbb
jnp
jb
loope
in
xor
vfrczps
push
xchg
das
pop
imul
test
inc
dec
cmp
adc
mov
sbb
pop
lret
mov
outsb
inc
stos
jle
or
aad
sahf
stos
xchg
pushf
jecxz
fistpll
sub
mov
out
sub
lods
jmp
pop
push
inc
sub
pushf
inc
xchg
mov
push
enter
mov
aad
xchg
ja
test
push
daa
test
test
sbb
ja
aad
in
outsb
xlat
adc
mov
add
sub
jno
ret
ret
lock
xor
aad
notl
sub
arpl
gs
jp
std
paddb
mov
insl
adc
nop
fnstcw
adc
push
ret
testb
mov
jae
xor
and
shl
xchg
cmp
adc
jl
and
aaa
xchg
dec
and
in
push
cmpsl
jp
fstps
lock
icebp
into
pushf
mov
bound
cmp
or
fbstp
lods
sbb
mul
daa
mov
ja
sub
leave
sbb
je
xchg
mov
push
cmp
test
pop
jo
mov
and
inc
imul
aam
gs
mov
js
pop
or
inc
clc
roll
enter
jns
scas
jns
cmc
mov
xchg
inc
aad
cmc
push
int
pop
movsl
cmp
jmp
inc
stos
sbb
sahf
xchg
sub
in
pop
mov
jbe
add
testb
imul
push
pop
pop
inc
sbb
xor
cmpb
dec
mov
and
lcall
dec
lds
sub
sub
pop
mov
fldcw
sub
sub
push
in
nop
es
ds
or
sbb
or
xchg
and
stc
fpatan
xchg
mov
jle
jo
push
mov
rorb
adc
rcl
jmp
mov
xchg
pushf
adc
xor
daa
jmp
mov
inc
adc
out
pop
push
cmpsb
hlt
sub
cmpsb
jle
dec
jo
xor
push
out
into
mov
mov
in
out
adc
dec
cs
bound
xor
jp
scas
push
sbb
fsubrl
test
xchg
sbb
ljmp
sbb
repnz
xchg
jmp
loopne
push
clc
ret
push
sbb
gs
jns
xchg
and
adc
pusha
mov
loop
pop
sub
and
lahf
cmp
xchg
mov
pop
pop
push
in
lds
mov
mov
js
mov
push
xchg
js
inc
scas
ret
sub
aad
clc
js
push
cmp
imul
or
add
or
ljmp
leave
hlt
adc
add
idivb
aam
int
sbb
add
jns
pop
mov
fnstsw
ret
jl
rcrb
sahf
xor
add
xor
fldcw
dec
int3
or
aad
cmp
add
ficoms
nop
fmull
lret
push
pop
push
and
add
push
testb
lcall
outsb
hlt
push
pop
xchg
cmpl
daa
push
cs
cmp
adc
sbb
in
scas
insl
xor
sbb
and
xor
icebp
push
sarl
inc
imul
mov
lock
push
stos
xchg
ja
arpl
jno
lock
in
fstl
xchg
mov
push
sub
icebp
mov
movsb
sub
adc
sti
cmpsb
aas
test
pop
sbb
push
pop
fidivs
cmp
pop
push
nop
add
fsubl
sub
mov
out
lahf
mov
cmp
xchg
push
sbb
inc
and
mov
pop
add
mov
mov
test
push
test
sahf
jge
and
das
out
dec
daa
les
xchg
in
sub
ficoms
out
jp
sub
ss
int3
xor
pop
fs
pop
imul
xor
push
int
bound
test
inc
or
stos
pop
int
cs
iret
ds
jg
mov
add
adc
lods
call
pushf
xchg
sbb
push
sub
mov
loopne
sar
xor
call
out
sub
add
daa
sub
imul
ret
cli
push
decl
sub
sarb
inc
call
cmp
jo
je
ficompl
mov
mov
sbb
mov
xor
cmp
ja
mov
enter
jecxz
imul
enter
sbb
imul
fisubrl
adc
addr16
sti
pop
xor
mov
aaa
je
pop
adc
pop
call
and
mov
popf
adc
movsl
scas
pop
pop
in
decb
in
pop
test
movsb
mov
movsb
xor
insl
xchg
rorl
pop
sub
gs
pop
and
mov
mov
pop
sub
or
fwait
adc
mov
sahf
mov
insb
lods
movl
ljmp
mov
pop
cmpsl
pop
mov
add
lods
insl
insb
push
sbb
fwait
xor
push
or
cmp
js
sub
mov
mov
shll
popf
cli
push
arpl
mov
jne
push
es
adc
js
sub
ja
add
addl
sbb
push
and
adc
lock
or
rcrl
sub
test
and
cmp
cltd
push
lea
popa
push
pop
sub
cld
lahf
jmp
sbb
and
push
sbb
cmovbe
rcrl
jl
daa
mov
bswap
push
testb
movl
dec
stos
mov
ret
fistpll
sub
js
outsl
cwtl
out
fwait
lods
shlb
fidivl
cmc
inc
jmp
add
jnp
ja
mov
sub
mov
cmpl
and
mov
fcmovnu
jbe
les
cmp
in
adc
lea
stos
and
cmpsb
adc
sbb
cltd
cs
sub
jp
cmpsl
jo
sub
mov
push
into
push
ffree
sub
aam
fistpll
jle
ja
or
mov
add
int
orb
sbb
mov
insb
int
pop
mov
out
mov
push
addb
jmp
aaa
gs
xchg
adc
xor
and
inc
dec
pop
mov
sub
loopne
testl
sbb
lea
test
dec
add
repz
lock
repz
mov
mov
mov
inc
and
xchg
ss
fisubrl
mov
icebp
outsb
test
loope
xchg
dec
pop
xor
sbb
mov
add
pop
cmpsl
stc
popf
insl
andb
mov
int3
mov
stc
push
push
inc
mov
lcall
lods
sub
inc
and
cmp
movsl
sahf
jl
dec
pop
jne
fmulp
scas
xchg
xchg
sahf
call
pop
mov
pop
test
sbb
sbbl
gs
popf
jp
dec
je
xor
dec
pop
xor
shrl
xchg
jg
imul
ret
daa
adc
lret
dec
add
subb
gs
jnp
xchg
inc
mov
jl
or
pop
fs
push
movsb
xchg
into
dec
imul
jl
mov
push
inc
ds
dec
cwtl
mov
sbb
dec
das
push
cmp
xchg
or
bound
pushf
les
scas
arpl
add
xchg
xchg
ljmp
and
int
pop
rcr
mov
insb
clc
inc
fistpl
mov
cs
xchg
in
inc
lahf
adc
sub
xchg
imul
cmp
mov
outsb
mov
mov
js
sub
pop
mov
dec
jns
ds
xchg
cmp
xchg
pop
pop
fdivrs
mov
mov
pop
sub
mov
xlat
mov
mov
scas
iret
in
pop
inc
jae
test
call
jns
int3
lret
mov
hlt
mov
pop
push
xchg
mov
inc
stos
je
xchg
or
or
rclb
jle
and
cltd
pop
lret
sub
xor
lahf
xchg
cmc
rcrl
jno
push
jae
jmp
lret
lret
cmp
push
jae
inc
cltd
movsb
sti
and
mov
push
cmp
jno
jl
or
inc
in
sub
in
xchg
add
pcmpeqw
sub
jp
xor
ss
pop
mov
push
jmp
or
push
sub
rclb
insl
push
fcmovne
imul
in
xor
lahf
jl
dec
nop
dec
test
push
mov
or
lea
jb
inc
cmpsl
jge
jl
pop
push
out
imulw
lret
rcl
inc
xor
mov
mov
cld
dec
std
mov
add
gs
je
lret
std
scas
inc
loope
inc
xor
mov
and
jmp
das
jl
fisttpll
mull
sub
cmp
shll
mov
mov
repz
inc
mov
jno
inc
int3
sbb
jne
mov
test
lret
ret
and
daa
and
and
popf
and
sbb
scas
jne
out
lahf
testb
xchg
ja
pop
lods
and
idivl
add
inc
dec
push
sbb
bound
push
mov
pop
inc
in
ret
pop
pop
test
lahf
stc
jne
push
into
or
scas
push
jno
mov
mov
fnsave
jb
mov
lret
fidivs
or
leave
cwtl
icebp
jnp
nop
andl
mov
cmpsl
pop
inc
cwtl
cwtl
mov
insl
out
sbb
sub
sub
mov
push
push
int
lods
imul
test
ds
jns
movaps
scas
fs
std
fbld
addr16
xor
nop
mov
mov
add
and
vucomiss
mov
cmpsl
shll
jmp
fstpl
clc
xchg
mov
mov
repnz
mov
lock
jle
insb
sahf
pop
icebp
dec
lods
test
int3
xchg
cmp
inc
or
inc
aas
dec
fsubrl
inc
jbe
inc
dec
in
dec
jne
fstpl
mov
pusha
xor
pop
jl
push
aam
jnp
xor
nop
xchg
outsl
inc
popa
fcoms
ss
jle
add
repnz
sbb
mov
pop
mov
fimull
js
sub
popa
cmp
lods
add
cmp
outsl
out
and
dec
xchg
cmc
jae
or
xchg
imul
arpl
lret
fstpl
aam
test
jbe
push
inc
sbb
sbb
push
in
pop
ficompl
clc
pop
cltd
das
inc
test
jmp
icebp
cltd
into
sub
mov
mov
mov
mov
ja
sbb
out
jge
ret
mov
push
clc
arpl
mov
pushf
xor
scas
pushf
mov
arpl
xchg
sbb
inc
mov
ret
mov
push
sub
pop
clc
dec
cmp
pop
cmp
in
testl
cmpsl
das
push
das
incl
cs
push
hlt
adc
add
add
cli
in
inc
pop
cmpsb
lods
adc
jmp
mov
push
jbe
cmp
movsl
push
mov
jp
xchg
cli
dec
xor
push
push
rclb
dec
xchg
push
or
in
xor
lds
and
add
mov
pushf
inc
jb
rorl
xor
inc
sub
mov
repnz
in
fildll
stos
call
push
or
icebp
push
jp
outsl
icebp
sbb
icebp
dec
dec
push
mov
nop
pop
or
mov
into
inc
pop
cld
mov
aam
mov
in
pop
dec
fs
inc
mov
aad
orl
lahf
or
outsb
xchg
xchg
das
pop
jmp
mov
mov
into
xchg
xchg
lcall
fistl
inc
inc
push
clc
xchg
dec
lock
lock
popf
mov
dec
mov
gs
in
insl
push
shll
dec
jg
leave
sub
inc
pop
fisubrl
mov
outsl
xchg
xor
je
pushf
incb
mov
cli
pusha
fisubrl
lret
sbb
inc
inc
cmp
in
into
jo
testb
mov
xchg
gs
push
xor
and
adc
mov
rclb
push
dec
nop
adc
imul
sbb
or
mov
loope
pop
daa
jp
hlt
fmuls
fimull
add
sbb
and
movsb
mov
addr16
cs
jne
mov
add
sahf
ret
pop
inc
cmp
inc
xchg
and
sbb
rcll
xchg
xchg
sbb
fistpll
in
imul
pop
test
outsb
in
cmpb
lds
dec
addb
fists
mov
xor
push
imul
adc
mov
in
jno
push
insb
stc
fs
pop
mov
adc
mov
inc
pop
jb
aas
call
push
adc
cmp
cwtl
loop
cmpsl
cld
das
inc
add
iret
dec
sbbb
xchg
lret
popa
sar
int
cld
sub
ret
mov
or
jne
pop
and
jecxz
loope
aaa
sub
test
into
test
mov
inc
push
adc
insl
sub
dec
sub
jb
fcmovnbe
sub
sub
pop
xchg
outsb
sbb
jg
dec
dec
cmp
sarl
fcoms
cmp
repz
fwait
insl
or
xchg
dec
sub
not
je
and
mov
mov
fisttpll
and
pop
mov
mov
inc
data16
xchg
movsl
aas
xor
inc
add
xchg
ret
mov
xor
in
lea
cltd
pop
hlt
xor
add
sarl
adc
jmp
xor
adc
aam
xorb
xor
jo
sbb
ret
inc
call
mov
fisubrs
sti
dec
mov
stos
sub
in
xor
or
jl
inc
add
iret
ret
xor
xchg
jns
cmp
adc
xchg
and
nop
outsl
test
and
mov
jp
std
push
xchg
arpl
lods
xchg
dec
fsubr
js
inc
scas
mov
ljmp
push
cmp
jg
sbb
insl
add
or
or
sbb
jno
cmp
test
and
adc
cmp
or
cmp
mov
sbb
xchg
jb
outsb
dec
sub
pop
dec
sub
push
mov
sbb
mov
wbinvd
cmp
pop
insl
popf
and
orl
lret
xchg
jge
push
cmp
test
int
mov
mov
shlb
push
sbb
loope
xor
loopne
adc
mov
aad
enter
bswap
add
push
mov
sbb
mov
je
push
outsb
add
int3
movsl
sbb
sbb
loop
push
or
loope
push
aaa
push
add
test
dec
roll
mov
xor
push
add
cmpsb
daa
scas
ret
inc
or
xchg
movsb
ljmp
add
jo
insb
leave
lea
mov
pop
mov
sti
test
leave
inc
mov
scas
je
xor
mov
sahf
dec
and
icebp
push
mov
outsb
ss
inc
and
sub
pop
and
jp
jmp
sti
fnsave
shl
pop
arpl
inc
dec
adc
cmp
gs
jmp
cwtl
mov
test
or
scas
pop
xor
frstor
pushf
mov
jb
mov
inc
cmp
fs
pop
scas
stos
inc
fs
insb
fucom
cmp
jbe
mov
mov
and
insb
addr16
pop
push
push
std
cwtl
sbb
inc
cmc
xchg
rclb
js
jg
sub
cmp
jnp
adc
push
mov
fisttps
cli
pop
sti
mov
repnz
leave
in
mov
push
call
mov
jp
cld
jno
mov
mov
jle
fnstenv
adc
sub
call
xor
mov
jge
adcb
sahf
cld
dec
fcomip
sbb
aas
shr
ficoms
jns
mov
xor
dec
mov
popf
call
in
mov
popf
mov
push
adc
jl
lods
enter
sbb
in
dec
push
mov
arpl
mov
push
adcb
movsl
into
jns
shll
cmpsl
test
cltd
icebp
lds
push
push
fistpl
jmp
jne
cmp
pop
in
adc
mov
loopne
and
lahf
xor
jb
movsl
push
adc
lods
outsb
shl
sti
loop
js
cmp
dec
inc
inc
insb
mov
xor
push
andb
xchg
cld
out
nop
lock
test
jne
outsl
subb
clc
xor
xor
fldenv
loop
test
pop
shll
inc
push
jae
fisubs
pop
pop
pop
or
push
push
and
stc
fiaddl
adc
mov
fs
pop
mov
sub
lea
dec
adc
sub
cmp
lcall
inc
daa
inc
pushf
push
call
cmpsb
into
adc
mov
or
mov
adc
mov
xchg
in
scas
cmp
rorl
mov
mov
jno
mov
in
scas
in
push
das
xor
sbb
dec
xchg
push
or
dec
mov
inc
sub
int
or
pushw
push
adc
test
or
or
out
sbb
push
dec
ret
push
sbb
or
pop
dec
enter
jmp
gs
jns
pop
imul
sub
pop
sbb
sti
leave
cmp
scas
sti
popw
stos
fidivrs
popf
lcall
pushl
sbb
fistl
aaa
stos
lods
or
pop
sbb
pusha
mov
xchg
call
mov
movsl
imul
inc
lods
lcall
aaa
push
outsl
jp
int
test
lret
pop
ja
pop
jb
pop
xor
sub
or
mov
mov
inc
out
pop
sbb
ret
fistps
mov
push
push
dec
mul
shrb
xchg
mov
fidivl
push
enter
or
dec
mov
jge
pop
in
lock
xchg
addr16
jae
imul
and
test
mov
cs
xchg
pop
adc
pop
pop
mov
sbb
or
and
xlat
jbe
sub
imul
fnstsw
shrb
fdivl
mov
mov
xor
scas
icebp
jg
pushf
push
or
aam
mov
fcmovu
fwait
out
out
mov
xchg
ss
mov
mov
pop
mov
insb
pop
out
xor
setg
movsl
jle
lock
add
sub
ret
in
xchg
movsb
loopne
sahf
push
dec
gs
les
repz
or
sar
loopne
sti
pusha
jbe
jge
fisubrl
jno
daa
leave
lea
jbe
and
mov
aaa
sbb
fdivr
cltd
repnz
cmp
pop
je
mov
inc
jne
cmp
push
in
mov
push
jp
jae
sahf
adc
cmp
test
sub
push
sub
xor
inc
push
loope
lds
cmp
pusha
push
add
aam
mov
mov
sarl
inc
test
or
cmpb
or
cld
je
dec
scas
mov
xchg
jl
pop
inc
inc
xor
cmp
sarb
jecxz
fistpll
shl
dec
shrl
outsl
pop
or
cltd
daa
jmp
mov
cltd
daa
test
jbe
insb
adc
pushf
pop
mov
jecxz
cltd
jbe
addb
xlat
jle
mov
daa
or
pop
or
imulb
stc
cmp
and
outsb
loope
mov
incb
test
lcall
in
cmp
into
mov
test
push
leave
lcall
test
out
jne
repnz
xor
data16
test
adc
mov
fwait
sbb
ds
jge
sub
cmp
test
sbb
or
jbe
stc
scas
sbb
movsb
push
aad
into
mov
xor
sbb
adc
mov
lods
push
mov
cmp
fisttpl
test
movsl
and
xor
pop
push
mov
xchg
out
and
gs
add
leave
dec
ss
jnp
cltd
mov
push
mov
sbb
push
outsl
or
mov
test
cmpsb
jno
aaa
sarl
sub
jns
xor
pushf
test
aam
mov
fisttps
xor
mov
gs
clc
lret
dec
push
adc
out
mov
dec
cmp
inc
aas
and
dec
aad
fmuls
jnp
enter
dec
xor
mov
fldt
mov
sti
popf
sbb
add
fmuls
fsubrp
stc
leave
jo
imul
pop
loop
xor
mov
mov
in
xchg
in
push
pop
add
in
push
cmp
lea
and
je
adc
cs
xchg
mov
or
iret
sbb
sub
xchg
jbe
xchg
jae
cmp
adc
inc
mov
std
mov
arpl
push
mov
jno
xchg
test
cmp
icebp
cwtl
test
test
push
cmp
push
pop
imul
ja
gs
adc
mov
cmc
scas
push
rorl
cs
add
xchg
pushf
stos
fisubl
ja
popa
cmp
je
in
stc
mov
mov
cmpsb
mov
test
scas
or
icebp
lcall
outsl
pushl
nop
inc
mov
cmpsl
mov
and
pop
cld
test
scas
rcrl
jb
mov
lds
xor
mov
ja
sbb
inc
dec
negl
je
roll
sarl
and
pop
mov
mov
lea
cmp
dec
push
jb
dec
inc
xor
jnp
lahf
adc
repz
lahf
cmp
std
sub
dec
mov
aaa
mov
jno
enter
jns
bound
dec
add
mov
ljmp
scas
sub
out
arpl
pushf
fisttpll
sti
cld
sub
inc
repz
cmp
out
inc
paddd
sbb
notb
test
adc
dec
mov
jle
in
mov
clc
ja
dec
mov
push
and
fwait
jl
and
push
dec
and
loop
jmp
add
add
stos
pop
test
enter
sbb
ds
scas
or
std
lahf
and
lock
and
call
add
repz
stc
mov
inc
xchg
pop
add
jg
inc
sub
pop
cmp
mov
shl
lret
jecxz
add
adc
icebp
or
cmp
mov
loop
std
cmp
gs
mov
cmpsl
mov
out
mov
inc
loope
push
inc
imul
inc
imul
dec
xchg
pushf
mov
push
cli
xor
pop
adc
fidivs
jnp
mov
lcall
adcb
test
das
mov
add
popa
mov
push
or
les
adc
mov
fldt
and
dec
call
mov
push
sahf
mov
mov
lods
xor
movsl
lods
outsl
mov
cmp
fwait
call
aad
int
js
shlb
push
sbb
fs
js
aam
inc
pop
xchg
cmp
add
stos
mov
stos
arpl
stos
xchg
mov
xlat
xor
out
inc
lock
test
insb
push
jmp
push
jae
lds
aas
repnz
andb
adc
push
std
stos
cs
dec
jnp
loope
sahf
lret
dec
dec
scas
mov
xchg
in
sbb
push
jmp
loopne
dec
stc
xchg
mov
lods
and
push
sahf
loopne
jecxz
fisubs
and
push
pop
push
mov
fidivs
adc
inc
sbb
dec
icebp
pusha
pop
mov
jg
sub
add
test
aad
addr16
jbe
enter
pusha
dec
xchg
jne
repnz
sub
daa
pusha
xor
or
dec
imul
mov
lret
jmp
pusha
movsl
pop
arpl
adc
test
das
popf
dec
mov
dec
sbb
ds
mov
mov
adc
pop
pop
pop
sahf
xor
nop
cli
addr16
push
lds
inc
fwait
xchg
and
mov
sub
daa
pop
in
repnz
adc
dec
cmc
and
out
repnz
pcmpgtw
pusha
mov
cmc
inc
mov
int
push
mov
fidivl
repz
and
dec
sub
imul
cmpsl
sbb
in
jno
inc
cmp
mov
stos
in
movsb
insl
mov
cmp
int3
pop
fisttps
sub
out
cmp
or
adc
or
or
aad
cmc
addr16
aas
les
and
sub
aam
imul
or
xchg
incb
xchg
daa
ret
jp
sbb
movsb
inc
add
lahf
lret
adc
gs
iret
loop
sti
bound
dec
mov
mov
push
adc
jno
inc
mov
and
jecxz
adc
inc
imul
mov
mov
lods
or
xor
movsl
inc
movsl
lea
adc
movsb
pushf
aas
sub
sbb
inc
bound
out
mov
ficompl
in
sbb
cmpsb
test
cmpsl
or
xchg
inc
or
js
imul
pop
shlb
jle
sub
pop
push
fwait
lcall
push
sbb
aad
xlat
xlat
dec
daa
add
bound
mov
pushf
pop
lcall
popa
xlat
pushf
jno
adc
popa
add
aam
in
icebp
insl
inc
out
in
dec
scas
mov
lahf
push
adc
xor
shlb
mov
cltd
jae
mov
dec
xor
arpl
xor
int
repnz
pop
xor
lods
movsl
lds
xor
je
add
jmp
dec
nop
lods
jp
jnp
ret
mov
xchg
into
or
cmpsb
ljmp
inc
add
out
mov
lods
lret
in
pop
jmp
idivl
icebp
mov
fildl
or
test
push
scas
fiaddl
or
andl
xchg
sub
movsb
aaa
stos
pop
pop
xchg
pop
iret
ret
mov
push
sub
pusha
cmp
inc
int3
sbb
and
pop
outsl
mov
add
or
pop
fcoms
scas
cld
arpl
imul
inc
imul
rcll
mov
or
jns
jge
and
fisttps
dec
mov
or
xchg
movsl
pusha
out
xlat
mov
aad
adc
mov
sbb
pop
call
xor
ds
xor
and
nop
jnp
sub
call
or
shll
adc
pop
insl
sbb
pop
pop
xchg
popa
pop
adc
sti
hlt
jb
fbld
sahf
js
rcll
sbb
mov
sarb
rcll
hlt
ds
add
lods
in
inc
lock
inc
or
popf
add
mov
sbb
mov
jo
sub
push
cld
xchg
push
cmp
ss
pusha
xor
das
lods
dec
pop
jp
adc
xchg
pop
pop
inc
push
sub
pop
lock
call
xlat
out
jno
xor
jp
push
mov
jb
fildl
nop
jae
inc
ret
es
mov
loopne
xchg
mov
or
xchg
roll
xchg
mov
xor
loope
xlat
sbb
cmp
xchg
jmp
in
inc
push
rcrl
test
mov
push
adc
inc
orl
dec
xor
rcll
leave
imul
imull
push
out
fstl
xchg
pop
adc
negb
aad
andb
pop
jg
mov
jb
inc
insl
rclb
push
xchg
push
sub
test
iret
popa
shr
into
pop
dec
xor
adc
mov
sub
push
xchg
dec
pop
push
or
push
xor
inc
sub
aas
dec
roll
nop
push
ss
sub
or
mov
pop
jle
jo
dec
out
mov
xor
cs
sbb
loope
js
pop
push
sbb
cltd
sbb
mov
mov
mov
mov
mov
lods
cltd
jl
shlb
jg
mov
insb
movsb
insl
or
mov
scas
fistl
xchg
push
mov
sbb
inc
jp
out
sahf
jge
add
fcompl
cmp
outsb
sarl
mov
dec
lcall
fwait
mov
ret
mov
in
imul
sahf
push
cmpsl
mov
mov
mov
lcall
xchg
scas
add
push
pop
sahf
lcall
shrb
mov
add
cmp
pusha
arpl
popa
mov
fdivrs
inc
xorb
stos
push
xor
das
scas
test
nop
xor
push
jle
test
inc
imul
and
imul
inc
mov
pop
das
and
sub
push
and
addr16
add
unpckhps
enter
sbb
push
mov
clc
repz
push
cmp
or
pop
faddp
cmp
test
in
cmp
adc
jnp
mov
ret
cmp
mov
jp,pn
push
adc
xchg
pop
leave
inc
add
loope
push
pushf
cs
test
xor
movsl
std
stc
outsb
jns
imul
lcall
sbbl
loop
xor
and
fnstenv
mov
dec
shlb
xchg
lock
stc
pop
insb
in
inc
scas
xchg
mov
mov
push
lea
shrl
movsl
or
das
inc
cmp
leave
sbb
in
pushf
sbb
daa
lods
inc
and
xchg
and
call
inc
pusha
inc
push
xor
mov
jge
js
pushf
cmp
cmp
aam
sbb
jne
ret
pushf
and
sub
xchg
sbb
sarb
mov
dec
ja
ja,pt
xchg
pop
or
and
iret
into
sti
out
stos
dec
lock
jno
mov
sub
sarl
adc
negl
xlat
inc
movsb
gs
push
xor
sub
push
in
ljmp
clc
cmp
out
adc
sub
ja
or
aas
or
or
sbb
adc
lret
and
lds
inc
stos
daa
push
adc
ja
out
nop
ja
or
mov
loope
or
dec
pop
test
push
xor
cltd
push
test
or
mov
pop
and
add
jge
mov
ret
cmp
jg
je
ja
push
fists
push
dec
jg
mov
pusha
test
arpl
jl
push
enter
lods
mov
arpl
jge
jp
fnstsw
filds
xor
clc
hlt
push
push
sbb
jns
xchg
mov
sbb
add
hlt
aad
sarl
mov
mov
out
mov
cltd
xchg
aas
out
push
sahf
jl
cwtl
xlat
xchg
push
stc
negl
bound
adc
adc
mov
outsb
and
add
and
pop
jl,pt
nop
nop
mov
and
aam
stc
setl
movsl
mov
bound
adc
mov
in
cmp
sub
pop
test
xor
jl
es
cmp
ljmp
repz
cmp
ss
loop
inc
mov
decl
insl
movsb
push
xchg
out
push
hlt
call
fs
shll
js
xchg
aaa
inc
mov
sbb
sub
sbb
jnp
leave
lock
adc
adc
mov
cmpsb
fbstp
cmp
loop
fisubrl
jmp
or
lds
inc
pushf
lock
jae
aad
sbb
sub
fisttpll
cmpsl
inc
daa
mov
loope
jecxz
jp
push
dec
movsb
clc
sbb
adc
lds
push
mov
sbb
dec
cwtl
fnstenv
and
jnp
push
adc
mov
adc
jge
or
loop
test
jmp
rorb
out
or
sbb
mov
dec
insb
sbb
jnp
mov
and
cmp
aas
stc
jle
clc
add
out
lahf
mov
jge
pop
cmp
push
loopne
shrb
das
mov
es
orl
fbld
inc
sbb
in
jbe
jo
cmp
pop
add
stos
or
fs
mov
xchg
jle
iret
in
call
mov
jo
mov
jbe
or
data16
inc
repz
in
inc
pop
jg
mov
sub
roll
mov
mov
dec
in
jae
cmp
sbb
mov
movsl
push
aas
mov
push
adc
aas
shr
xchg
or
pop
xor
negb
lea
xor
sbb
inc
push
daa
call
push
xchg
mov
push
mov
cmp
xor
sub
jmp
jl
dec
cs
dec
insl
arpl
pop
sbb
neg
inc
push
jmp
mov
dec
fiadds
jp
iret
jns
and
es
push
sbb
push
pop
shrb
js
mov
or
jecxz
cmp
shlb
stc
int
xor
adc
rclb
xor
pop
lahf
sbb
lcall
sub
loope
push
lds
rcl
std
push
mov
pop
jle
dec
in
daa
imul
xor
lret
and
jb
adc
into
movsb
incl
push
lea
iret
xchg
mov
call
dec
cmpsb
sub
hlt
insl
mov
aad
adc
cli
or
and
sub
or
out
jecxz
sbb
mov
xchg
rcrl
add
jbe
sbb
addl
out
outsb
mov
jb
cmp
out
xor
or
repz
test
fcmove
dec
orb
cmp
fimull
dec
cmpl
in
rolb
imull
call
aad
das
adc
adc
and
pop
mov
pushf
lahf
or
adc
scas
int
andl
ljmp
jmp
jae
dec
repz
out
sub
call
sub
inc
mov
sub
mov
sbb
jmp
arpl
rorl
cmpb
dec
in
rorl
and
outsb
jg
sub
xchg
repnz
test
scas
jecxz
inc
mov
daa
jno
ljmp
out
hlt
nop
aam
movsb
popa
icebp
fdivl
les
push
insl
aad
sti
jno
bound
divb
mov
arpl
std
mov
push
imul
ljmp
xchg
push
inc
int
cmp
clc
cmp
shrl
vmovaps
scas
xor
movsl
pop
orl
dec
fsts
push
mov
inc
inc
pushf
and
pop
fiadds
xlat
or
push
mov
fmull
add
dec
add
nop
xchg
pusha
in
mov
je
jle
xchg
popa
and
adc
jl
outsl
or
fs
jle
xchg
cmpsl
lods
jg
cld
adc
inc
sub
in
clc
xchg
sti
push
das
and
test
into
push
mov
insb
cmp
cmp
add
pop
loope
scas
in
adc
mov
xchg
call
fisttps
cmp
lcall
xor
sub
mov
fmuls
insl
or
sub
dec
xor
jg
pusha
lret
jg
sbb
data16
pop
movsb
outsb
out
mov
lea
cmp
negb
cvtps2pd
pop
int3
scas
lcall
pushf
add
pop
movsl
xor
nop
inc
cltd
pop
sysexit
loope
in
xor
cmp
aaa
movsb
das
sbb
test
and
cmp
ja
stc
in
pop
scas
xchg
jecxz
cli
mov
dec
jg
ja
data16
pop
inc
adc
inc
lock
int3
jo
loopne
pop
push
orl
aas
mov
aam
in
or
rcrb
hlt
mov
rcrl
cmpb
and
icebp
mov
pop
fdivrl
neg
cwtl
lahf
push
jp
and
adc
cmpsb
popf
push
pop
push
mov
test
lds
pop
sahf
xchg
cltd
adc
jmp
sahf
in
add
subb
mov
xor
push
adc
add
ss
or
dec
in
fistpll
mov
pop
je
jb
jnp
in
dec
fnstcw
inc
pop
xchg
dec
ret
xor
pop
jb
sub
int
cli
clc
lret
rolb
pushf
lret
aad
push
dec
pop
jno
test
out
mov
jo
xor
sti
das
fdivs
mov
clc
rcll
scas
aad
push
or
jmp
xlat
jae
fcmovbe
pusha
xchg
xor
jl
xor
push
mov
inc
stos
pusha
es
mov
fbstp
leave
push
hlt
std
sbb
jl
jo
mov
adc
mov
jecxz
in
movsl
cmp
jecxz
imul
roll
ja
and
mov
stos
ret
shr
xor
pop
cld
stc
lods
mov
push
dec
push
sub
notl
stos
cmpsl
arpl
mov
push
adcb
ss
inc
ror
push
leave
ja
pop
ds
test
xchg
sub
mov
call
fdivs
push
loop
out
movsb
lcall
in
dec
test
daa
hlt
push
ss
inc
call
cmc
or
std
add
pop
cmp
scas
arpl
pop
xor
pop
mov
in
cs
insb
pop
jae
fiaddl
mov
mov
xchg
push
adcl
mov
out
dec
push
loopne
adc
fld
pop
cld
lods
scas
lahf
jbe
or
jge
cli
imul
cmp
xchg
or
loopne
xlat
mov
mov
je
xor
aas
mov
int3
scas
loopne
mov
xor
xchg
mov
leave
jecxz
into
call
mov
loope
mov
std
jno
mov
mov
or
in
mov
sbb
f2xm1
jge
adc
fucomip
cmp
loopne
je
jecxz
lods
pusha
lahf
add
rolb
xor
add
and
mov
jl
pop
lods
call
mov
inc
xlat
xor
stos
out
push
out
and
jno
and
xor
jl
mov
mov
adc
cli
pop
imul
push
das
sbb
push
cwtl
loope
xchg
mov
xor
sub
ds
mov
data16
in
push
aam
ljmp
test
adcl
dec
and
and
sbb
sub
mov
cmp
fdivl
adcb
jo
push
sub
add
cltd
xlat
xor
cs
ljmp
inc
and
dec
xchg
loope
xor
sub
lret
not
add
test
fsts
push
pop
stos
jb
inc
jecxz
aaa
fwait
mov
jbe
shrb
aad
jg
cmc
fiadds
push
pop
pop
mov
push
add
in
pop
ffree
fnsave
xor
add
mov
mov
adc
jno
aad
orl
xchg
fmull
jp
xchg
subl
xor
jg
and
push
data16
imul
add
dec
scas
test
lods
adc
aam
movsl
mov
pop
loopne
ret
push
sub
mov
inc
js
test
fdivl
pop
test
loop
xchg
iret
cmp
adc
loopew
inc
mov
movsb
jge
cmpsb
push
or
adc
adc
in
inc
fsub
inc
sub
and
loope
bound
cltd
sub
xchg
adc
cmc
jp
push
pop
push
out
je
ficoml
sar
mov
rcrl
xchg
std
mov
cltd
cmc
jb
xchg
adc
movsb
mov
xchg
push
into
inc
xlat
inc
xchg
unpcklps
mov
or
sbb
mov
dec
inc
and
fdivrs
xchg
jb
mov
fistpll
fmuls
cmp
rorl
das
shrl
mov
fdivrs
test
push
inc
stos
das
stos
adc
jo
or
xchg
inc
xor
push
dec
xchg
mov
adc
jno
pop
and
adc
xor
ficomps
das
push
add
loopne
push
shlb
inc
add
lods
das
imul
xchg
xchg
push
lret
add
clc
sub
jno
pop
cmc
int3
pop
call
and
jne
mov
mov
mov
push
fcompl
jb
sti
mov
dec
out
je
cmpsb
shll
fcmovne
sub
push
xor
popf
cmc
inc
movsl
inc
cmp
and
inc
jbe
inc
push
mov
dec
pop
mov
das
xchg
cwtl
clc
movsl
cmp
outsl
mov
in
mov
mov
dec
loope
sbb
in
xchg
mov
sbb
push
ss
inc
scas
cmp
incl
aad
das
mov
mov
lahf
test
xchg
addr16
inc
in
push
test
cmp
jno
xchg
fiadds
mov
push
lods
and
das
pop
dec
call
test
add
adc
mov
pusha
fidivrs
int3
mov
and
daa
xchg
popf
dec
dec
dec
cmp
fprem1
pop
pop
fistps
mov
adc
sub
cwtl
loop
aas
lock
mov
int
iret
add
outsl
xchg
jno
addr16
hlt
push
sysret
sti
scas
shll
push
fstps
ljmp
or
inc
push
push
lret
pushf
cwtl
inc
jl
test
xchg
test
dec
insb
xor
and
xchg
add
cmpsb
in
scas
sbb
jb
lods
xor
insb
daa
mov
js
jns
push
xor
in
ret
stos
inc
test
mov
adc
mov
in
outsb
jnp
dec
insl
pop
stos
enter
gs
daa
out
mov
popl
shrl
xor
add
dec
enter
mov
pop
mov
fists
mov
popf
cmpsl
int
ret
inc
stc
mov
jne
mov
cs
mov
xlat
pop
movsl
add
dec
popf
pop
push
enter
sbb
xor
outsb
in
out
lods
push
push
movsl
in
pop
jnp
or
loopne
insl
adc
pop
js
cmp
and
in
pop
jb
test
sub
cs
and
dec
mov
cmp
xor
lds
data16
mov
cmp
test
hlt
scas
movsb
sbb
and
dec
and
sarl
or
cltd
outsl
out
arpl
and
and
cmpsb
or
xor
jbe
les
mov
adc
push
pop
sti
dec
jecxz
sub
shll
adc
insb
mov
mov
jp
push
xor
sti
add
mov
out
outsb
mov
mov
lock
imul
rcll
adc
inc
mov
lret
sub
add
xchg
mov
mov
pushf
and
in
lds
xchg
cmp
pop
daa
ljmp
adc
inc
push
dec
cmc
mov
dec
adc
cmpsl
and
fnstcw
outsb
test
mov
pop
movsl
insb
mov
fidivs
adcl
jp
sti
push
stos
js
push
mov
fnsave
or
xor
add
xor
inc
subb
outsb
iret
cmp
xor
mov
xlat
cmp
ret
push
jmp
sub
repz
ja
or
pushf
into
es
inc
pop
rcl
lret
or
mov
arpl
out
xchg
cmpsl
sbb
and
mov
or
pop
pop
jbe
add
ficompl
and
lcall
mov
push
adc
fstp
test
cwtl
adc
add
out
iret
mov
loop
xor
dec
notb
pop
das
cmp
jno
push
add
cmp
aas
ret
or
aas
jge
fwait
push
push
jmp
fs
push
mov
lods
test
jle
cmp
push
mov
jnp
cmp
stos
jle
ret
lret
and
fs
sbb
ret
pop
in
or
xchg
nop
pop
xchg
xlat
clc
push
inc
add
rcll
push
scas
xor
xor
xor
mov
repz
jbe
fsubr
adcb
aam
pop
xchg
add
movsb
repz
aam
imul
push
dec
iret
dec
int3
adc
test
adc
scas
imull
sub
adc
mov
sbb
ljmp
std
cmpsb
shl
out
or
imul
cmpsb
cwtl
mov
aam
imull
ja
push
sahf
cmp
dec
mov
rclb
sbb
or
cmp
mov
jo
out
ss
sti
fs
or
call
xor
sbb
mov
in
jne,pn
xchg
repz
pop
inc
lret
clc
insb
punpckhwd
lret
leave
pop
push
add
xchg
xchg
and
cmp
test
cmpl
pop
out
xor
inc
mov
or
cmpsb
cmpsl
jbe
adc
dec
or
and
fwait
mov
jo
xchg
cld
orl
adc
pop
pop
mov
fimuls
sub
arpl
xor
pop
inc
imul
jge
jl
cs
leave
or
inc
pop
fsubs
ffreep
xchg
dec
clc
ja
inc
pop
xchg
adc
sbbb
insb
xlat
pusha
pop
adc
enter
ds
test
cmp
pop
out
mov
xchg
mov
push
cmp
sbb
fstpt
loope
cld
sbb
ret
dec
mov
push
daa
xchg
jg
cltd
stc
repz
add
faddl
add
call
add
jmp
dec
xchg
sub
xchg
ret
push
cmc
pop
lret
lods
fstl
inc
cmpl
sub
xchg
sbb
aaa
xor
into
jp
mov
xor
push
add
fs
inc
fs
fucomi
push
adc
dec
xchg
shlb
popf
inc
jo
icebp
lea
push
hlt
int
fidivl
sub
add
ret
mov
pop
cmp
roll
inc
sub
push
icebp
pop
pop
sub
sbb
aaa
or
out
enter
jo
mov
push
dec
mov
push
gs
push
in
fsubrl
sti
mov
dec
loopne
stos
popa
rolb
pop
adc
addr16
sarl
jnp
ljmp
push
or
inc
jne
cltd
hlt
test
cmp
dec
iret
or
sbb
into
jl
lcall
push
cmpsb
or
pop
inc
push
mov
and
imul
xchg
lret
jno
pushf
jmp
inc
icebp
sbb
cmpsb
test
rclb
jg
xchg
sbb
push
xlat
icebp
jecxz
ds
push
xchg
push
scas
mov
out
add
and
xor
pop
mov
jo
in
xchg
jg
movl
push
and
jne
cmp
jmp
mov
test
repz
cmp
lret
xor
adc
mov
dec
jns
lcall
push
das
sub
ret
and
cmp
stc
data16
stc
lret
cli
movsb
lahf
popf
scas
add
xlat
je
movsl
pop
fdivl
sub
das
mov
cltd
push
fldenv
pop
ret
call
ds
adc
sub
out
mov
aad
insb
mov
lret
sub
add
pop
mov
dec
in
or
xchg
stos
or
out
into
sbb
sbb
push
xchg
test
outsb
jns
in
mov
mov
or
fucomi
call
lock
xor
jmp
pop
sbb
and
out
mull
test
add
es
shr
movl
fadds
popf
int
cmpsb
ds
push
test
add
sub
leave
push
mov
mov
cmc
push
imull
stos
and
push
call
fnsave
adc
mov
add
test
jo
ret
xchg
mov
icebp
adc
adc
ss
adc
out
jl
mov
add
pusha
mov
pop
or
std
cs
shl
jecxz
cmp
arpl
fs
insl
sarb
jecxz
rcll
or
pop
pop
mov
dec
and
stos
ljmp
in
xor
pop
pop
test
outsb
sahf
mov
scas
in
sub
push
inc
orl
aad
pushf
out
dec
fists
inc
or
jo
popf
out
insb
xchg
mov
and
add
popl
fcmovnbe
test
push
jle
xlat
cmp
pop
push
push
paddusb
lock
nop
xchg
mov
cmp
mov
insb
andl
nopl
xor
repz
test
sahf
pop
ret
mov
push
out
pop
lds
int3
mov
dec
repz
cwtl
add
or
call
aad
xor
mov
push
fcoms
scas
add
push
mov
push
push
push
inc
aas
imul
ds
pop
adc
jmp
and
inc
arpl
mov
push
adc
mov
xlat
cmc
ljmp
mov
ljmp
ljmp
mov
shrb
lahf
rclb
xchg
std
fwait
jne
scas
sub
call
pop
push
inc
in
sbb
mov
pop
lds
hlt
mov
jnp
push
mov
lds
cld
cmp
int
pop
imul
mov
mov
in
cmp
adc
or
push
jp
out
push
sbb
sub
mov
mov
and
add
jl
sbb
push
inc
int
push
xchg
outsb
cmpsl
pop
lds
repz
sbbl
iret
mov
mov
stc
cmp
jmp
mov
lret
sahf
js
aaa
inc
mov
and
ss
inc
and
std
jmp
push
ljmp
push
pop
cmp
xor
inc
sbb
mov
jo
pusha
in
pop
cmp
mov
in
aaa
xlat
jmp
xor
popf
lds
xchg
test
cmp
in
pop
xchg
imul
and
add
xor
lahf
sbb
std
stos
cmp
mov
movsl
je
scas
jb
leavew
jg
push
pop
and
or
imul
xchg
subl
cmp
mov
lods
mov
dec
int3
fwait
xchg
lahf
push
push
insl
xor
mov
popa
das
test
je
mov
flds
push
push
pop
sub
imul
add
dec
and
pop
adcl
pop
jb
cmp
jmp
add
cmp
jb
js
lret
bound
mov
hlt
xor
mov
dec
test
sub
icebp
popa
stos
jae
js
add
fwait
repnz
loopne
cmc
sub
shlb
pop
out
add
xchg
push
cmpsl
jno
mov
jle
xchg
sbb
popf
push
lock
sub
fstpl
xor
inc
arpl
mov
popa
in
push
mov
call
cmp
les
sahf
scas
pop
mov
mov
outsb
add
not
and
add
cmpsb
pop
pop
pusha
in
aaa
xor
add
dec
push
inc
pop
push
mov
mov
movsl
stos
imul
mov
out
in
xor
data16
inc
or
xchg
xor
xchg
mov
mov
add
lea
mov
pop
push
jae
out
pop
and
adc
cwtl
rorl
mov
mov
and
and
inc
iret
ja
mov
fadds
mov
pop
cmp
mov
lret
popa
jns
mov
push
jo
pop
int3
lds
jp
sti
je
mov
pop
push
or
cmp
shlb
stc
inc
sbbl
jecxz
scas
aad
repnz
mov
lret
hlt
or
lahf
push
ret
lds
mov
push
mov
dec
jnp
shl
fdivr
pop
add
fwait
in
add
mov
pop
out
xchg
jb
cmpsl
sub
push
pop
push
dec
mov
add
out
lds
jg
add
or
stos
dec
in
xor
fisttpll
cltd
mov
loopne
test
mov
xor
nop
adc
and
sbb
add
aaa
and
jns
ret
cltd
or
mov
ret
mov
les
cmp
daa
es
mov
and
xchg
mov
call
mov
adc
jns
mov
mov
ds
scas
insl
add
push
pop
dec
mov
inc
call
lock
add
repnz
das
sarl
jecxz
into
sub
push
xor
sbb
mov
and
or
jmp
decl
cltd
jo
xchg
xchg
mov
jmp
push
add
push
loope
cmp
mov
cmc
int3
push
movl
xchg
fcoml
cwtl
pusha
push
mov
add
aaa
jecxz
push
outsb
push
xchg
and
xchg
add
mov
dec
out
outsl
push
lods
cmp
pusha
jle
pop
push
popl
test
leave
ret
pop
add
rcl
leave
shl
jae
push
rcrb
nop
cmp
inc
cltd
rcrl
push
jns
test
in
cltd
aam
popf
add
or
dec
int3
fsubl
dec
popf
pop
jmp
jb
aam
movsl
sti
cmp
imul
xchg
pop
mov
fcomip
stos
inc
jae
jecxz
adc
loope
inc
cmp
sti
cmp
pop
mov
ljmp
pop
mov
fstpl
or
inc
aas
ficompl
repz
or
fistps
sub
les
movsl
fdivs
and
xor
mov
in
pop
rcpps
out
xlat
jp
test
lret
lods
andl
out
fsub
mov
stc
aas
cmc
sbb
rorl
pop
push
cmp
sub
imul
cmpsb
int
icebp
jecxz
mov
push
xchg
adc
dec
pushf
adc
lret
inc
testl
push
and
outsb
ss
fs
jae
lcall
dec
scas
xor
jg
mov
and
or
cs
ret
pop
shrb
cld
and
mov
dec
ljmp
and
stc
pop
dec
cmp
inc
out
out
fldt
push
cmp
enter
enter
jns
test
loope
scas
jmp
fsincos
dec
mov
enter
pop
cmp
mov
jp
sub
jmp
push
gs
sbb
mov
mov
xchg
ds
mov
mov
push
adc
in
inc
add
nop
stc
adc
scas
repnz
mov
pop
cmc
leave
test
loope
dec
xlat
jae
push
sub
je
cli
dec
xor
and
es
jmp
popf
decb
movsb
pushl
xchg
fidivrl
sbbl
mov
pop
stc
sub
jge
push
pop
xchg
mov
adc
xchg
xchg
mov
aas
stos
adc
mov
pop
push
and
cmp
add
rclb
mov
ficomps
sub
adc
fbld
ret
push
jne
cmp
out
subb
dec
jecxz
imul
insl
imul
jbe
sub
rolb
stc
adc
sbb
add
jge
or
mov
fwait
mov
dec
hlt
cmp
sbb
popf
rolb
test
and
outsl
daa
pop
dec
cmp
mov
mov
test
inc
imul
cmpsb
hlt
addb
sub
sub
xchg
dec
sub
sub
dec
pushf
mov
sub
inc
push
in
hlt
loopne
mov
cmp
pop
loope
pop
jbe
mov
and
cli
pop
mov
jecxz
insb
ljmp
fnstenv
pop
push
scas
cmpsl
and
pop
sub
add
adc
les
outsl
cmp
lds
lods
xorl
dec
mul
popa
shll
ja
in
ljmp
aas
pop
pop
les
nop
mov
and
lret
cltd
push
xchg
pop
mov
iret
push
mov
and
scas
jecxz
into
mov
std
dec
mov
daa
sub
and
mov
mov
fmull
jle
or
push
cmp
insb
iret
in
mov
dec
cltd
je
vandnps
lret
jge
dec
jecxz
xchg
std
or
fcmovne
add
pop
lods
popa
outsl
pop
sub
pop
es
xchg
and
push
inc
repz
jp
inc
loopne
lock
push
pop
ss
cltd
pushf
cmp
int3
push
std
aad
mov
frstor
push
push
or
rdtsc
jno
xchg
push
push
push
shrl
imul
inc
jp
repz
sarl
push
push
xor
std
ss
test
xor
subl
dec
mov
fistl
jmp
xchg
ret
and
rcll
in
test
daa
test
mov
mov
or
fildll
mov
and
or
sub
cwtl
mov
movsb
xchg
inc
cmpsl
adc
aad
mov
sub
adc
or
cs
mov
insb
gs
mov
pop
mov
pop
or
cmp
and
jle
mov
dec
rorl
aas
int3
jno
in
xor
pop
cmp
mov
sub
inc
mov
stc
pop
cmp
lret
mov
hlt
jb
mov
cmp
or
sbb
das
popa
lret
out
cmp
hlt
pushf
scas
xchg
outsl
xor
movsl
aas
jo
scas
fwait
aaa
sbbl
jns
jecxz
mov
sbb
rolb
mov
push
dec
ret
mov
xchg
fisubrs
dec
shll
push
les
pop
scas
pop
jbe
adc
pop
dec
jg
xchg
cld
sub
sbb
xor
xchg
add
pop
sti
mov
push
arpl
sahf
and
sub
pop
int
mov
add
sti
pop
addl
xor
push
pop
cmpsl
shl
in
ds
cwtl
fldt
and
mov
cmp
push
popa
pusha
pop
testl
decb
lahf
out
gs
mov
icebp
pop
shlb
mov
ficompl
xchg
dec
push
scas
out
mov
mov
mov
mov
insb
js
jns
ret
call
cwtl
sahf
xor
jmp
aaa
add
mov
jge
add
stos
mov
push
pop
in
xor
jle
inc
and
sub
aaa
loope
xchg
push
bound
mov
dec
sti
jecxz
inc
rcrb
xchg
shll
lcall
adc
sub
jecxz
lea
mov
lods
fisttps
mov
ja
fs
hlt
ljmp
and
aas
shlb
mov
loopne
inc
adc
sub
push
int
adc
xor
int
ja
mov
cmp
sahf
mov
lock
repz
loopne
orl
push
enter
xor
jmp
scas
loope
sbb
pop
movsb
adc
test
pop
test
js
push
repz
and
lcall
in
shlb
dec
xchg
into
xchg
sbb
sub
jb
xchg
mov
stos
sbb
cmc
inc
or
jge
es
or
out
sahf
les
mov
insb
cli
test
mov
scas
das
push
stos
adc
inc
ds
sub
inc
xchg
inc
jg
mov
or
fldcw
xchg
shll
dec
lret
imul
out
sub
stos
nop
mov
inc
loope
lret
cld
adc
mov
cmp
dec
add
sti
xchg
lods
fwait
jb
adc
mov
xchg
mov
xchg
mov
pop
addr16
or
imul
fs
lds
xchg
rorl
repnz
dec
jns
ret
lcall
aad
das
sbb
dec
cmp
mov
xchg
cmc
call
outsb
pop
sbbb
xchg
lods
in
sahf
jb
mov
mov
aas
repz
cwtl
mov
int3
mov
mov
popa
fwait
push
stos
jb
fs
fadd
vmread
and
adc
loop
aas
pop
pop
jg
and
sub
loope
cmp
mov
aad
rclb
push
and
jae
pusha
std
sbb
sub
mov
imul
inc
or
sti
xchg
shrb
sbb
bound
das
cmpsl
pop
cmp
out
lcall
out
dec
xor
loopne
push
test
adc
popa
and
sti
leave
lea
ss
pop
dec
scas
das
in
mov
pop
pop
loopne
cmpsb
lock
and
fcmovb
adc
sar
and
pop
popf
mov
les
mov
xchg
aaa
sub
loope
aad
jg
jnp
push
adc
roll
jno
sub
les
mov
int
mov
xchg
mov
dec
fldl
cli
outsl
pop
repz
sbb
jle
sbb
sbb
stos
mov
gs
pop
in
fdivrl
out
outsl
mov
call
cs
adc
jge
add
std
mov
pop
rcrl
rcr
jl
add
repnz
rolb
dec
xor
cmp
lret
cs
jo
inc
pusha
sub
cmp
inc
mov
jle
add
push
loopne
in
pop
outsb
lock
or
dec
sbb
stos
out
icebp
pop
and
shrl
mov
lahf
pop
cmpsl
nop
test
test
outsl
xor
or
loop
add
sbb
leave
jo
shll
movsl
sahf
sub
dec
insl
cmpsb
pop
arpl
mov
vmread
or
or
les
rorb
add
push
pop
add
jbe
test
sbb
cld
mov
and
int
push
les
lods
push
sub
add
inc
mul
jb
into
adc
pop
ret
push
cltd
jbe
subps
loop
jns
fwait
jp
inc
sbb
ljmp
mov
inc
aad
push
rclb
lds
int3
adc
push
imul
sbb
adc
cmovae
dec
incl
clc
xchg
rolb
cmpsb
aaa
clc
inc
mov
xchg
ss
cmp
push
lea
add
subb
push
cmp
pop
and
scas
sarl
push
sub
sbb
mov
pop
mov
jg
inc
jno
je
jle
lods
push
fmul
sbb
sar
pop
ret
mov
pop
jb
or
and
jl
fucom
and
push
mov
mov
jnp
pop
fcompl
loope
cmp
test
lret
mov
mov
mov
mov
mov
push
pop
jno
aas
or
outsb
je
mov
push
iret
jecxz
fcmovbe
shr
testl
cmp
or
mov
cmp
mov
outsl
xor
mov
jl
loop
in
pop
push
popf
add
push
push
test
adc
pop
hlt
ret
pop
ret
adc
cmc
push
retw
out
lret
cld
xor
and
and
imul
in
int3
and
or
in
outsb
mov
stos
inc
in
scas
cmp
in
mov
jmp
repz
sub
test
mov
xor
xor
and
daa
lods
scas
aaa
mov
sahf
jl
scas
push
adc
xor
push
aad
and
cmp
xchg
cmp
aam
data16
pop
ret
mov
std
and
rcrb
gs
xchg
inc
shll
sarb
jmp
es
adc
adc
jae
xor
mov
stos
push
mov
sbb
je
fsubrs
cs
pop
xchg
sub
mov
mov
lahf
filds
cs
add
push
cli
pop
cmpsb
or
mov
je
xor
idiv
add
arpl
pop
bound
cwtl
sbbb
dec
cs
sub
and
bound
testb
add
cmp
gs
bnd
dec
mov
adc
mov
pop
das
push
cmp
fstps
mov
or
call
pop
dec
stc
js
mov
icebp
push
test
xchg
lods
pushf
pop
jg
subb
cwtl
inc
add
divl
imul
jb
iret
jns
rorb
fldl2e
gs
mov
mov
add
fimuls
jp
adc
pop
fwait
xabort
ja
clc
add
fdivs
cltd
pop
pop
cmp
sub
push
gs
in
sub
scas
push
insb
cmp
lret
lcall
and
stc
movsl
xchg
cli
and
push
mov
mov
dec
xchg
lds
adc
adc
pushf
adc
cmp
inc
aam
jl
sbbb
push
push
sub
and
or
push
imul
in
bound
fs
in
xchg
xchg
fwait
cmpsb
movsb
bound
out
push
loopne
xor
inc
add
lods
and
xchg
sahf
cmp
or
ljmp
push
test
movsl
insl
push
jb
xlat
daa
inc
mov
jl
jmp
out
lret
ds
imulb
jb
in
jno
call
cs
xor
or
xchg
push
sbb
rcrb
pop
insl
cs
insb
push
xor
cmp
jp
lahf
dec
mov
or
aam
dec
ds
mov
lret
inc
mov
add
insl
sub
sar
cmp
adc
dec
ss
fs
push
in
push
mov
jge
imul
data16
jno
sub
leave
mov
cmp
rorl
inc
mov
sti
cmp
lea
mov
imull
fsubrl
sub
lcall
or
sti
scas
popa
sti
cltd
pop
sarl
out
pusha
das
pop
add
repnz
shl
movsb
stc
xchg
test
or
pop
pop
pop
lods
lahf
pop
push
fiadds
ds
push
pushl
pop
repnz
loop
xchg
sub
hlt
ret
mov
jecxz
xchg
bound
cmpsb
andl
pop
leave
popf
test
lea
sarb
cmp
cld
jbe
inc
iret
xor
stc
jmp
mov
mov
fwait
adc
mov
adc
enter
xchg
adc
insl
jl
pushl
ss
enter
fmul
adcb
bound
xchg
das
jge
jmp
test
and
xchg
fstps
and
test
outsb
pop
jae
mov
stos
push
add
jbe
push
adc
imul
popa
push
cmp
xchg
mov
mov
jno
xchg
ss
lods
call
sahf
sbb
xlat
idivb
mov
jle
decb
popa
pop
sahf
mov
xchg
leave
lahf
mov
aad
ljmp
bnd
mov
mov
mov
stos
jae
adc
pop
loop
sbb
cmpsb
faddp
pop
inc
mov
stos
mov
mov
fildll
jecxz
or
leave
loop
loop
gs
or
cwtl
sarl
xchg
inc
jno
shrl
call
xchg
dec
lods
push
and
sbb
addb
add
mov
xchg
push
add
test
mov
mov
cmp
inc
cltd
push
mov
movsl
loop
fisubs
sbb
pop
dec
and
mov
cltd
sub
jp
lea
sbb
or
sub
pop
mov
clc
and
dec
or
xchg
stos
adc
mov
inc
xor
push
mov
repz
subb
aam
test
pop
adcl
add
shll
roll
mov
xor
pop
movsb
xchg
js
lods
mov
push
and
xlat
ret
dec
stos
sub
xchg
movsb
push
jl
jge
popf
psubusw
mov
aam
lds
push
nop
xor
and
orb
scas
cltd
jno
xchg
mov
sub
mov
in
test
int
push
into
clc
xchg
sti
or
and
jmp
ror
popf
and
jg
or
xchg
add
insl
push
mov
cli
aas
sti
repnz
daa
mov
cmp
pusha
sbb
pusha
ret
test
in
mov
imul
pop
in
mov
setns
pop
lret
pusha
and
pmullw
cmpsl
cli
adcl
mov
out
pusha
scas
mov
jle
cmpsl
int3
repnz
es
xchg
js
cmp
test
adc
cmp
or
sbb
out
shlb
add
dec
dec
loope
sub
and
cmp
cmpsb
mulb
fwait
inc
imul
lret
xchg
xchg
cmp
jno
pop
jb
xor
mov
sbb
or
cmpsl
out
int3
mov
jl
outsb
out
mov
or
xor
mov
or
seto
sub
dec
insl
leave
adc
push
outsl
add
clc
aad
fcompl
jl
push
rolb
push
push
lret
mov
xor
sar
leave
mov
icebp
sti
icebp
daa
sbb
js
xchg
mov
push
mov
or
and
cmp
lcall
nop
push
jecxz
fxtract
outsl
pop
fadd
lcall
lods
mov
sub
add
jae
or
adc
jmp
sbb
and
test
cmp
dec
hlt
imul
bound
mov
sbb
testb
test
loop
jp
lods
idivb
xor
fs
fdivl
dec
push
inc
xchg
pop
data16
xor
mov
mov
fucomip
push
and
mov
stc
mov
shrl
push
jae
pop
push
aam
xchg
stos
shl
pop
xchg
mov
orl
ss
mov
mov
dec
sub
rolb
pop
cli
push
pushl
pop
gs
in
sub
push
mov
add
lea
iret
add
and
jb
inc
iret
add
xor
cmp
mov
pop
mov
adc
xor
jns
gs
sbb
push
ret
sub
dec
jl
imul
aas
xor
pop
dec
jne
add
imul
sbb
sbb
cmp
or
mov
idivl
pop
mov
loope
fld
movsl
fwait
and
jns
pop
mov
cmpsl
pusha
lret
insb
ss
mov
jmp
lds
xchg
xchg
xor
xchg
jg
xlat
and
mov
inc
mov
sbb
imul
test
fldl
push
cmc
outsb
cmp
xor
subb
dec
and
into
jle
lods
int
jl
push
xor
rorl
movsb
ss
lcall
stos
test
mov
push
mov
sbbb
in
rcll
subb
jno
jge
ja
clc
icebp
inc
adc
jb
inc
push
cmp
out
loope
popf
push
addr16
push
jecxz
mov
pushf
adc
aaa
inc
rcrb
add
sbb
lret
lahf
push
xchg
add
adcl
out
sbb
xchg
aam
and
cwtl
inc
leave
fadds
push
push
or
imul
mov
sub
jecxz
dec
dec
into
loopne
clc
lret
add
out
sbb
lock
adc
popf
mov
add
cmp
and
loop
push
cmp
daa
test
aaa
jp
xor
jno
dec
mov
cmpsb
jmp
adc
sbb
xor
ret
popa
in
sub
inc
sbb
stos
aas
repnz
xchg
out
icebp
loop
js
mov
pop
scas
jo
inc
pop
out
xor
aad
cmp
lods
xchg
ja
inc
sbb
pop
xor
insl
and
popa
sub
xchg
dec
xchg
push
aaa
xlat
or
pop
div
cvtps2pi
push
fstps
das
push
jae
adc
js
cmp
popf
cmp
sub
in
jns,pn
in
jp
test
and
or
rclb
and
fbstp
sbb
mov
cmpl
dec
cmc
push
or
out
cld
jno
test
stc
cmp
mov
push
mov
daa
push
adc
push
aaa
sub
outsl
add
test
sahf
loop
ret
inc
pop
push
ljmp
gs
lcall
je
pop
clc
xchg
mov
pop
cmpsl
pusha
ds
aam
fisubrs
sahf
insb
cli
cli
mov
test
aam
sbb
movsl
pusha
out
cmp
adc
dec
xchg
xor
shll
pop
add
fbstp
scas
sub
les
dec
imul
mov
push
test
xor
daa
hlt
ficomps
outsl
adcl
iret
push
movsb
and
and
or
ja
mov
ljmp
jle
mov
not
aam
orb
fimuls
sub
pop
adc
or
in
mov
pop
adc
mov
sar
ftst
pop
jge
push
in
ficomps
sub
xchg
push
xchg
adc
int3
mov
dec
fidivs
lahf
hlt
jne
xor
ds
sbb
mov
outsb
out
dec
jge
pop
pop
scas
cs
dec
mov
in
je
add
aaa
je
lahf
inc
sub
mov
mov
divb
popa
leave
mov
cmp
lret
jne
mov
jp
push
mov
enter
in
sub
pop
xor
gs
mov
inc
fdivs
cmp
push
jbe
pop
gs
jp
dec
out
xor
or
sbb
push
adc
sub
inc
aaa
test
inc
add
adc
test
rcrb
pop
pop
push
xor
addr16
data16
mov
fiadds
or
sbb
lea
testl
inc
jb
stos
das
lret
andl
clc
sub
jb
cmpl
aaa
mov
stos
pop
testl
xchg
xor
test
xor
out
and
mov
mov
popa
and
loope
and
imul
les
sub
sub
cli
push
mov
cmpl
daa
shrl
mov
outsl
out
loopne
push
dec
insb
popa
je
xorl
push
sbb
dec
mov
mov
inc
sarb
hlt
sbb
sti
jbe,pt
lods
pusha
test
sub
clc
pop
push
cmp
xor
mov
dec
test
frstpm(287
sbb
ret
stos
rcrl
add
or
jge
incl
clc
repz
in
xor
xorl
push
xchg
ljmp
pushf
mov
cli
push
sti
fbld
jno
push
mov
sub
addr16
sub
adcl
sti
xor
pop
inc
daa
add
push
imul
std
inc
stc
mov
pop
pop
and
out
or
xor
add
int3
push
pushf
cs
div
add
call
testb
loop
out
cmp
mov
mov
xlat
test
shr
sub
sub
fdivl
test
mov
sub
out
inc
xor
push
push
scas
cmp
or
sahf
ljmp
add
fwait
jmp
sahf
call
and
dec
jae
fsubs
std
ror
xor
push
pop
and
and
cmpsb
dec
rclb
cmp
xor
je
adc
xor
lahf
or
mov
fwait
adc
inc
stos
movsb
loope
cli
sub
cmp
xchg
popa
mov
addr16
jg
jle
mov
clc
mov
nop
mov
loopne
xor
fimuls
ljmp
mov
lods
jnp
mov
sub
mov
xchg
and
mov
js
push
adc
sub
cmpsl
and
mov
xor
lret
adc
lret
mov
push
aad
sahf
dec
rcrb
cmpsb
xor
push
or
sbb
lds
out
sbb
enter
andl
mov
add
add
nop
push
sbb
and
pop
xor
pop
xchg
shld
test
mov
sbb
ret
jne
add
push
push
cmpsb
ds
sub
cltd
xchg
dec
cmpsb
dec
andl
pusha
sub
test
outsb
decl
xchg
or
stos
daa
fs
cltd
or
jnp
xchg
leave
filds
iret
mov
enter
cmp
je
hlt
enter
repnz
filds
adc
mov
inc
lea
pop
imulb
push
add
dec
nop
imul
cmp
leave
das
dec
adc
test
adcb
mov
mov
jne
cmpsb
mov
fisttps
mov
cmpsl
movb
popa
xchg
test
pushf
dec
or
mov
inc
inc
mov
adc
xchg
cli
push
outsb
adc
fadds
mov
pop
into
sbb
idivl
jg
jbe
lret
pop
arpl
test
mov
push
ret
rol
fisttps
xchg
sub
cmc
int
push
sahf
add
xchg
adc
fnstenv
cmp
and
cmc
test
jge
insl
cwtl
add
lret
xchg
dec
push
ret
mov
xchg
leave
icebp
les
daa
or
out
iret
lahf
add
scas
push
sbb
lods
mov
out
xchg
imul
or
jbe
aas
sub
xchg
cli
xchg
pop
leave
daa
dec
jg
pop
out
enter
or
sub
add
pop
pop
inc
pop
and
lods
in
ss
movsb
push
pop
mov
adc
loop
mov
mov
cmp
pop
xor
test
cli
adc
or
ficoms
sti
inc
das
mov
aas
sti
loop
iret
add
pop
cld
test
xchg
test
jp
decb
xor
cmp
rclb
outsl
mov
icebp
and
int3
or
and
out
inc
pop
jle
jns
jl
xlat
jl
leave
sbb
mov
es
lds
pop
xor
and
sub
orb
fisttpl
js
fidivl
imul
add
int
pop
popf
dec
mov
sub
lock
cmp
aam
nopl
pop
daa
lea
test
clc
nop
insl
push
pop
ficoml
int
call
js
mov
fistpl
dec
je
jbe
test
jb
data16
and
mov
pop
add
insb
cmc
insl
jmp
mov
in
loope
int
xor
mov
and
out
popa
push
arpl
ds
in
xlat
faddl
flds
icebp
in
inc
sar
sbb
fisubrs
adc
xchg
fisubl
sahf
into
cmp
aad
dec
sub
lock
jne
fwait
out
lret
lcall
push
dec
popa
push
repz
test
fdivl
sbb
lret
iret
adc
xchg
clc
pop
stos
pop
and
std
pop
push
cmpsb
inc
int3
andl
inc
cwtl
pop
scas
mov
loope
mov
push
inc
out
mov
aad
inc
fprem1
mov
mov
mov
jecxz
add
popa
or
sbb
aam
fiaddl
movsb
arpl
jae
fcompl
mov
into
and
imul
lret
add
icebp
jp
sbb
xlat
pop
add
arpl
sbb
dec
mov
xor
and
mov
pop
adc
aam
ds
nop
mov
cmp
pop
data16
sbb
pusha
int3
daa
addb
jmp
mov
or
cmp
lds
dec
fldt
pushf
dec
xchg
test
insl
dec
in
mov
repnz
xorb
pop
pop
jl
xchg
dec
clc
xchg
xor
sbb
fisubrl
and
cmp
fcoml
pop
push
push
pop
sub
sti
pusha
xchg
mov
shrl
movb
into
fsubl
mov
pop
lcall
and
jnp
pop
or
push
out
sub
rorb
sbb
and
mov
mov
sbb
xor
push
jmp
xchg
lahf
xchg
aam
sti
jl
adc
in
pop
mov
mov
test
sub
mov
aas
pop
fsubrs
movsb
cmp
push
push
cs
sti
pop
inc
mov
mov
or
push
aam
popf
bound
out
movsl
push
push
and
and
lret
xor
cs
push
push
jg
pop
or
outsl
mov
cmp
pop
out
lcall
and
push
nop
frstor
inc
shlb
insl
sahf
pop
sbb
out
mov
and
adc
addr16
sbb
cmp
pop
push
push
push
aad
fs
sbb
mov
mov
stc
mov
xchg
into
lcall
andl
sub
sub
loopne
xor
les
ret
roll
roll
in
adc
mov
jmp
pop
leave
int
les
mov
subl
adc
jle
sarl
push
cltd
mov
mov
inc
sahf
add
sbbl
psadbw
ss
mov
sbb
sub
inc
cmp
imul
or
adc
or
aas
cltd
pop
rclb
mov
xor
jge
push
shll
xchg
imul
and
cmp
out
shlb
xchg
roll
xor
xor
push
call
cmpsl
lock
dec
pop
or
cmp
inc
add
mov
mov
inc
jle
loopne
sbb
push
mov
out
push
pushf
jno
int
mov
sub
hlt
mov
mov
and
scas
or
xchg
mov
sti
jns
xchg
in
mov
lods
inc
xchg
mov
cs
jl
out
xchg
stos
out
jecxz
cmp
sub
push
push
xchg
push
jns
and
dec
push
sub
inc
lret
stc
into
pushf
pop
loopne
das
mov
js
in
ljmp
leave
adc
cs
out
sbb
inc
fsubrs
jge
cli
dec
jae
lahf
push
xchg
cmp
rorb
iret
xor
mov
pop
arpl
adc
repnz
sbb
cmp
mov
clc
iret
pop
or
push
mov
cltd
xchg
push
popl
std
or
scas
adc
add
xor
lahf
mov
jp
jmp
pop
daa
je
add
loopne
cmp
sahf
sbb
xlat
movsl
add
scas
xchg
add
pop
mov
fildll
lods
imul
int
jnp
orl
rclb
and
mov
push
loopne
mov
std
xchg
leave
adc
adc
lds
es
jae
lcall
pop
fiaddl
ja
loope
jl
or
jle
xor
sub
call
xor
mov
push
arpl
cmp
insb
sarb
sub
push
sub
jge
push
icebp
or
test
cli
add
or
dec
mov
popa
inc
cmp
shl
cld
dec
dec
adc
popf
in
imul
sub
call
dec
in
das
and
fnclex
lods
pusha
xor
xlat
sarl
mov
imul
or
loop
mov
mov
mov
jbe
sbb
sbb
mov
inc
xor
mov
sub
jmp
xor
or
xchg
or
cmp
adc
inc
mov
mov
cmp
sub
jae
xchg
pop
jge
fs
fisttpl
loope
sbb
movb
out
outsl
daa
jmp
stos
or
sbb
nop
fstps
push
lret
ljmp
andl
pop
push
xorl
jnp
dec
xor
pop
pop
xor
les
and
xchg
out
in
int
or
rorb
dec
bound
lcall
pop
hlt
sti
insl
mov
add
adc
je
mov
mov
jbe
jge
or
mov
clc
mov
loop
aam
aam
test
push
xor
js
test
inc
cltd
mov
pushf
pop
add
sub
iret
mov
inc
out
mov
cmpsl
lea
loope
inc
int
ss
bound
mov
cmp
repz
scas
sub
rcr
mov
xchg
xor
dec
inc
jl
cmp
icebp
div
hlt
mov
stos
jp
imul
inc
sbb
mov
fadds
ficoml
cmp
daa
and
mov
out
mov
scas
xor
xchg
push
aad
push
fadd
in
cmc
int
in
lods
add
mov
scas
cmp
push
mov
mov
xor
cmp
cmp
xor
jmp
push
loop
add
sbb
jno
icebp
and
jl
stos
cmp
xor
repz
iret
clc
stos
aaa
repz
jl
lds
das
push
repz
bound
daa
jle
inc
in
cmp
and
mov
ret
adc
ljmp
mul
sbb
stc
inc
fs
mov
mov
idiv
ds
mov
bswap
pushf
add
jb
rolb
jnp
push
pop
pop
push
pop
or
jb
scas
xor
lods
mov
std
and
mov
jg
push
mov
dec
stc
push
ja
out
mov
test
inc
lret
jae
mov
cmp
and
or
sbb
cli
jno
rolb
cmp
add
out
mov
sub
inc
lods
cwtl
adc
lods
negl
jge
fdivl
lret
xor
in
lcall
xor
pop
or
inc
enter
leave
sbb
inc
popf
js
jae
loop
repz
push
insb
pop
mov
push
xlat
das
mov
nop
incl
scas
jb
jb
mov
sub
mov
mov
test
inc
adc
push
inc
mov
sbbb
in
lahf
xchg
fisttpl
sbb
sarl
jl
fs
pop
pop
xchg
jne
or
jge
rcll
adc
sbb
daa
push
aad
mov
xchg
adc
mov
mov
or
repnz
scas
adc
and
roll
add
push
out
je
addr16
adc
inc
dec
adc
xchg
lds
cmc
pop
inc
add
sub
sub
nop
daa
test
mulb
cmp
ss
leave
inc
cmpsb
movsl
mov
fwait
pop
shlb
cs
push
pop
push
iret
sub
inc
subl
lret
push
push
out
mov
xor
gs
in
outsl
mov
pushf
shll
call
jl
mov
jp
scas
jmp
jl
js
ds
out
ja
mov
push
or
mov
cmp
mov
jo
stos
sub
cld
ret
rorl
sbb
inc
sub
aam
sub
or
sub
and
push
pop
lcall
out
inc
push
leave
data16
mov
dec
inc
pop
jg
xchg
cmp
xchg
rorl
jnp
or
in
inc
test
dec
loopne
push
nop
pop
or
in
daa
jbe
std
es
xchg
sbb
cmc
xchg
inc
call
mov
xchg
aas
mov
push
xor
movsb
movsl
xor
sbb
mov
or
nop
xchg
and
subl
fsubr
push
arpl
adc
int
pop
int3
mov
xor
dec
gs
inc
jne
xor
mov
stos
lret
xchg
lahf
in
ficoml
sub
jmp
push
das
rcl
jp
callw
test
dec
shrb
xchg
xchg
hlt
iret
sbb
sbb
loope
fcompl
in
jns
cmp
mov
sub
cmp
ret
test
fs
pop
cmovnp
or
sub
xorb
stos
lods
shlb
mov
test
mov
adc
cmp
mov
add
outsl
push
mov
fimuls
daa
aam
jnp
push
mov
pop
mov
add
loopne
jb
ret
cwtl
add
pop
add
xchg
out
rcl
or
cwtl
cs
mov
push
das
cmp
mov
mov
iret
cmpsl
xchg
pop
sbb
les
and
ja
jmp
movsb
sub
clc
adc
call
cmpb
cmp
leave
push
popf
push
xchg
mov
enter
add
dec
push
dec
or
outsl
repnz
mov
and
fbstp
mov
rcrb
in
clc
push
jle
incl
push
lea
sub
pop
and
int
push
cmp
hlt
int3
stc
fisttpll
xchg
mov
rclb
in
cmpl
cmpl
cld
dec
cltd
xchg
iret
imul
insl
and
or
cmpsb
sbb
testb
lcall
adc
cwtl
xor
and
cli
xlat
cs
dec
dec
loope
ret
fmull
mov
shlb
icebp
stc
into
xor
repnz
cltd
je
mov
inc
cltd
cmpsb
mov
and
lret
push
pop
cli
adc
nop
pop
fdivp
in
add
test
cmp
stos
jb
clc
test
ds
adc
adc
stos
push
and
add
andl
cmovne
es
hlt
xchg
sub
hlt
test
fcmovnb
aam
mov
xchg
sti
mov
lahf
adc
divl
jecxz
cmp
fxch
scas
push
jo
xchg
mov
sub
or
pop
mov
add
test
push
arpl
aam
ret
jle
popf
sub
ljmp
out
xchg
mov
daa
and
inc
fistps
dec
out
or
jg
jmp
pop
jmp
leave
xchg
movsl
sub
fisttpll
mov
dec
mov
shll
push
pop
pop
mov
adc
popa
jns
fisttps
out
insb
xor
add
clc
cmp
jecxz
xor
outsl
mov
mov
push
lea
sub
adc
jne
mov
leave
aas
clc
inc
dec
fisubl
into
call
hlt
push
pop
inc
in
or
ja
or
jmp
mov
add
outsb
in
mov
leave
andl
jbe
clc
pusha
xor
ljmp
add
add
shll
sbb
sbb
sub
out
mov
js
test
jl
insl
stc
sub
das
xor
test
adc
ss
ret
push
and
icebp
sub
jbe
aas
idivb
adc
mov
xor
sarb
data16
add
mov
jecxz
bound
stc
sub
xchg
lret
in
lret
insl
mov
das
roll
sub
mov
stc
jae
pop
jg
in
gs
or
scas
mov
mov
out
gs
sbb
mov
jle
rorb
ja
dec
cmc
xchg
cmp
mov
dec
mov
scas
hlt
aaa
movsb
sbb
ss
and
or
outsl
mov
inc
jmp
mov
xor
lods
jne
or
mov
leave
into
sub
jl
mov
dec
mull
lods
mov
cmp
xor
push
aas
cs
xorl
iret
xor
jb
mov
repz
mov
pop
sub
adc
mov
or
lds
dec
popf
test
loope
or
and
mov
inc
lds
mov
in
movntq
out
into
cli
dec
lret
insl
sbb
push
cmc
lds
mov
fcmovb
pop
sub
xchg
inc
or
sbb
mov
inc
clc
shrl
negl
and
out
push
cmp
inc
ljmp
ljmp
sbb
lcall
push
jnp
add
pushf
dec
sbb
xor
das
adc
rorl
movsl
aaa
mov
outsb
inc
mov
sahf
dec
scas
xchg
in
xlat
ljmp
in
out
jns
cmp
lret
mov
cmp
push
scas
cs
add
push
xor
jo
mov
jb
sbb
add
dec
ret
sti
inc
or
xchg
xlat
ret
stc
int
mov
pop
mov
ret
adc
sbb
sbb
mov
mov
ljmp
std
out
xchg
add
in
cmp
or
fs
idivb
andl
xor
mov
jns
push
cmpsb
sbb
mov
pop
jae
jns
and
iret
repnz
mov
dec
daa
mov
cmc
adc
xlat
outsl
jbe
movsl
cld
popl
cmovle
ret
int
call
push
loope
and
and
test
xchg
jl
sub
mov
and
dec
ret
mov
je
cltd
jle
or
data16
popf
cmp
fs
mov
fwait
out
cmp
fildll
inc
enter
jno
and
ret
inc
call
or
out
mov
inc
xor
lods
lods
ds
mov
nop
shll
ret
fildl
mov
pop
dec
jns
ds
sti
es
sub
push
loop
jle
jl
dec
inc
ljmp
pop
stos
mov
or
jb
jp
in
popa
loope
jb
int
inc
shl
inc
inc
data16
mov
xorl
daa
mov
sbb
mov
pop
mov
or
sub
jne
in
push
aaa
js
sbb
pop
jnp
jns
fs
iret
push
add
adc
xsha1
cmpsb
dec
mov
repnz
fidivs
pop
pop
cmp
cmp
cmp
gs
cmp
scas
inc
adc
out
mov
lahf
gs
mov
xchg
lock
daa
in
mov
das
and
inc
mov
jno
ss
cmp
cmp
inc
mov
mov
or
cmp
dec
fstl
je
jecxz
jne
sbb
repz
je
rcrb
addr16
in
add
out
cmp
inc
jns
sbb
pextrw
mov
xlat
jbe
jmp
mov
inc
into
sahf
dec
ja
insl
aam
ljmp
into
pop
cmp
dec
cmp
sbb
fnstsw
mov
mov
in
jmp
enter
mov
jl
std
and
test
jle
mov
insb
adc
adc
adc
nop
xchg
stos
lods
stc
jns
fwait
sarb
mov
scas
loope
outsl
adc
adc
sub
add
dec
mov
cmc
ds
sahf
ljmp
pusha
addb
mov
inc
push
pushf
bound
fsubl
aas
aas
paddd
ret
iret
sti
lock
mov
enter
push
ds
and
mov
sbb
sub
jb
cwtl
icebp
mov
pop
xchg
dec
incb
lahf
xchg
sub
sti
testb
mov
imul
or
push
mov
and
sbb
dec
idivl
xchg
ret
adc
jmp
xchg
mov
add
mov
mov
cmp
popf
fdivrs
adc
jle
outsb
or
adc
dec
sbb
xor
cmp
loop
pop
fsubl
xchg
mov
aam
pmuludq
adcl
mov
jo
xchg
dec
icebp
push
cld
pushf
xor
test
adc
daa
sahf
out
mov
and
dec
jle
cmp
jge
cli
call
aam
movsb
cmp
xor
arpl
mov
dec
test
sbb
push
lret
push
push
sbb
jne
test
fldl
cmpsb
repz
mov
stos
dec
lahf
pop
mov
icebp
cmpsb
dec
jno
jmp
fdiv
ljmp
adc
movsl
cmpsl
les
xor
and
jp
cmpsl
push
and
shl
xchg
jmp
inc
or
std
xchg
add
cmp
push
add
inc
lds
jns
mov
or
movsb
cmp
xor
stos
mov
sbb
mov
mov
popf
add
jmp
mov
out
push
cmp
push
xchg
lods
push
push
repz
enter
aaa
dec
lret
bound
and
fs
mov
insl
xchg
mov
je
or
xorb
pop
push
outsb
mov
das
int3
les
mov
nop
lret
xchg
dec
xor
mov
xor
in
lcall
push
jne
mov
xchg
dec
mov
jne
mov
push
mov
mov
popl
hlt
cmp
push
mov
jl
add
cwtl
xchg
movsl
and
imul
rorb
jmp
cwtl
inc
inc
inc
subb
dec
lahf
dec
sbb
sbb
hlt
sub
push
mov
inc
sbb
sub
adc
sub
and
push
jecxz
mov
pop
mov
inc
ret
jge
dec
popa
setl
or
fldenv
and
movsb
push
push
adc
inc
imull
test
or
movsb
test
dec
lret
std
xor
nop
rolb
fstpl
and
outsb
and
mov
leave
xchg
scas
gs
xchg
mov
cmp
aad
mov
jne
cmp
inc
add
dec
inc
and
daa
fdivr
outsl
and
js
dec
repnz
ljmp
lds
in
jno
mov
clc
shll
aad
xchg
sahf
test
rep
sbb
loopne
jl
mov
cmp
in
outsb
outsb
dec
jno
xor
inc
das
xchg
inc
mov
gs
lods
decb
mov
fxch
fnstsw
into
dec
jmp
add
roll
and
cmpsl
jnp
mov
loopne
imul
jne
adc
mov
dec
xchg
cmp
push
adc
mov
sahf
lret
cmp
add
and
js
sbb
hlt
jnp
hlt
popa
xor
stos
xchg
dec
mov
adc
rorl
ljmp
iret
arpl
insl
inc
sti
xor
jno
xor
add
scas
rolb
rcll
jle
popa
cs
xor
test
invd
aas
xlat
sub
sub
pop
jecxz
mov
cmp
test
adc
in
lds
sbb
nop
dec
ss
push
xchg
xchg
hlt
icebp
cmpsl
popf
push
and
fmul
repnz
ret
sub
jnp
aam
dec
push
test
popl
dec
sub
push
mov
rclb
out
xor
fists
dec
and
jb
and
int3
add
xchg
jge
mov
jbe
mov
stos
xchg
xchg
and
lods
and
test
add
cld
dec
push
les
dec
lret
cmp
xor
cltd
sbb
pushl
insl
int
pop
mov
sub
push
test
sbb
insl
hlt
es
cmp
mov
add
sarb
in
mov
shrl
popl
push
lock
fs
addr16
sub
xor
sub
fsubrp
movsl
pop
add
jno
or
mov
sbb
ds
or
pop
out
sbb
lret
xor
dec
aam
mov
adcb
scas
loop
shll
sub
pop
leave
out
imul
add
aam
ret
in
mov
mov
pop
push
inc
lret
and
aas
shld
test
inc
cmpsb
rorb
jno
aaa
mov
imul
inc
xchg
rcr
lods
daa
stc
les
mov
sbb
push
test
outsl
das
clc
gs
add
xchg
mov
in
inc
pop
sbb
mov
sub
or
das
clc
mov
insb
cmp
inc
inc
in
dec
rcl
gs
add
and
inc
loope
mov
sti
push
mov
fistpll
clc
mov
les
mov
imulb
and
pop
and
fiaddl
mov
jmp
adc
int
in
in
sbb
cwtl
in
sub
mull
ficoms
sub
jne
imul
cli
clc
jg
dec
mov
add
add
mov
mov
mov
fisttps
inc
sbbb
rcl
adc
movb
jne
test
or
rclb
data16
xchg
cmc
enter
or
inc
sub
daa
inc
ret
negl
cld
xchg
stc
mov
in
mov
fmuls
movsl
cmpsl
mov
cmp
rcr
fildl
mov
jns
or
cltd
out
out
sub
in
ja
mov
mov
insl
or
mov
sbbb
or
lock
push
or
pop
test
mov
loop
stos
push
mov
int3
shrl
or
adcb
cltd
mov
int3
and
popa
xchg
addb
or
mov
imul
test
mov
xchg
popa
sbb
inc
or
or
push
in
ljmp
outsb
mov
ljmp
lods
inc
stos
push
pop
cmpb
fnsave
sbb
popa
push
mov
cmp
jecxz
insb
jecxz
rcrl
mov
inc
out
and
xchg
pop
jo
dec
daa
enter
add
mov
sti
sbb
aaa
sti
inc
fsubs
push
jns
hlt
mov
xchg
in
mov
mov
mov
call
sub
lret
push
xchg
pop
and
xchg
or
iret
xchg
jnp
test
adc
xchg
inc
shlb
mov
and
hlt
movsb
add
mov
out
xchg
cltd
js
fdivl
adc
add
add
mov
fcomps
add
jns
mov
pop
xchg
pop
sub
jmp
les
fdivrl
mov
std
cmp
stos
fiaddl
subb
femms
xchg
les
lret
mov
daa
fwait
xor
sbb
xchg
loope
adc
push
push
idiv
repz
mov
push
fstl
push
mov
leave
enter
stos
cmp
dec
shrl
ja
fistpl
cmc
int3
in
push
xchg
and
mov
lods
pop
and
or
adc
dec
xor
sub
pop
xchg
addl
idiv
sbb
jl
push
mov
mov
loope
jno
push
sub
stos
cld
push
add
call
orl
mov
leave
pushf
stos
pop
jl
jmp
loope
gs
scas
lods
dec
loopne
mov
mov
xor
jns
in
sbb
mov
loop
jb
and
push
adc
jg
mov
pop
fldenv
add
xor
sbb
mov
loop
jnp
jp
cli
shrl
fwait
mov
daa
push
cmp
orb
pusha
inc
pop
jns
aas
std
mov
scas
enter
sub
push
data16
call
adc
cltd
test
dec
dec
push
aam
stc
clc
cmp
bound
xor
sbb
or
in
sub
and
dec
jnp
xlat
xchg
mov
sbb
outsl
ss
fnstenv
mov
rcr
dec
pop
pop
add
add
push
cmp
ficoms
inc
xlat
and
pop
add
add
cmpsb
push
sbb
cmp
imul
mov
inc
cmp
mov
je
push
shll
or
mov
rcrl
insb
or
mov
test
push
xor
les
mov
pop
jle
inc
sbb
movsl
out
and
stos
out
mov
enter
xor
aaa
pop
enter
push
not
jne
sbb
cmp
loope
loop
rcll
aam
in
jp
mov
and
int3
or
int3
aas
inc
sbb
sbb
adc
in
xchg
push
stos
sub
stos
dec
xor
jl
adc
add
or
cs
fidivrs
jmp
jle
sbbl
repz
rorl
inc
mov
and
sub
iret
mov
jp
cmp
test
push
cmp
adc
mov
punpcklbw
mov
sbb
pushf
jecxz
loop
and
xor
jbe
jo
pop
jl
ss
arpl
and
push
bound
mov
mov
pop
mov
xlat
dec
pop
aam
scas
ss
inc
cmpb
inc
sti
dec
push
jecxz
mov
jbe
jne
adc
shl
cmpsl
mov
dec
ss
sub
pop
leave
lcall
adc
leave
ret
xor
iret
rcll
xchg
fisttpll
push
and
dec
sub
rolb
cmp
jns
lods
rcrl
xchg
loopne
inc
es
lahf
jne
inc
and
sub
xor
xchg
pop
add
push
scas
lds
pop
inc
adc
scas
popf
mov
lods
in
sub
sbb
and
or
lods
pop
add
daa
pop
push
loop
outsb
jb
subl
mov
je
aam
movl
jp
adc
imul
repz
addr16
pushf
or
mov
loope
fisttpl
jnp
inc
inc
or
fnstcw
push
rolb
cld
hlt
ja
dec
mov
lods
out
loopne
mov
xor
enter
sub
flds
sbb
sub
mov
nop
rcrl
push
mov
repz
cld
pop
and
roll
mov
ret
ret
pusha
loop
add
xchg
cmc
inc
outsb
mov
push
jno
nop
xor
xchg
into
insb
repz
adc
push
addr16
mov
and
je
adc
xchg
out
xchg
and
insl
jns
arpl
push
inc
cmpsb
cmp
ja
aam
sarl
jl
jl
add
cwtl
adc
imul
fnstcw
hlt
ja
adc
mov
repz
xchg
es
push
jp
cld
mov
jno
pop
fyl2x
scas
inc
sub
into
int3
ficompl
mov
push
iret
out
pop
fwait
and
or
cmp
pop
adc
mov
std
in
cmp
sbb
jo
inc
int
xor
daa
inc
add
ljmp
xor
ljmp
xchg
movswl
sub
aaa
xchg
mov
push
mov
fwait
enter
les
ds
in
mov
sub
cli
xor
ret
adc
icebp
insl
dec
fdivrl
adc
pop
jecxz
pop
hlt
mov
fdivp
pop
pop
xchg
push
xlat
push
mov
mov
loope
fisubrl
sub
lods
or
addr16
imul
cmp
std
sub
push
inc
and
or
push
int
popa
pusha
add
jns
push
cmpsl
imul
push
xor
dec
ds
cmc
xor
lods
std
jecxz
mov
add
jl
lods
data16
adc
mov
stos
sub
adc
or
mov
pop
out
xor
dec
or
adcb
push
repnz
add
mov
xchg
sbb
xchg
push
cmpsl
sbb
ret
ja
push
and
cmc
push
stos
mov
pop
arpl
hlt
in
dec
mov
dec
rclb
cmp
jmp
pop
fnsave
leave
pop
lods
pop
sub
lods
push
mov
outsb
xor
addr16
test
ja
jp
out
ficoms
nop
icebp
mov
aaa
andl
das
enter
or
sti
in
mov
movsb
add
mov
mov
mov
mov
jno
dec
inc
lret
ja
mov
add
test
mov
scas
sub
jns
pop
mov
iret
push
lcall
and
daa
adc
pusha
hlt
insb
jl
mov
xchg
jg
cmp
inc
test
inc
iret
add
jne
lret
shlb
int
mov
in
xchg
mov
in
movsb
push
shll
xor
in
lcall
stc
aad
je
fwait
lds
mov
mov
inc
orl
popf
popf
int
aad
fwait
cld
shll
mov
out
or
mov
xchg
push
iret
sub
in
and
dec
dec
pop
jg
iret
push
cmpsl
push
cmp
dec
in
jne
imul
push
sub
mov
pushf
xlat
cltd
movsl
pop
add
or
xchg
sub
fists
adc
adc
out
loopne
adc
ret
sub
mov
loopne
imul
js
jnp
dec
mov
sub
mov
repz
std
ss
leave
mov
out
in
jle
push
push
icebp
sarl
aad
mov
jp
add
shll
das
rcrb
outsl
rcrb
aas
pop
mov
cmc
loopne
xchg
int3
rorb
fnstcw
dec
in
xchg
and
out
xlat
xchg
and
xor
pop
xchg
lret
mov
stc
adc
mov
fstpl
adc
dec
int
into
dec
xchg
clc
or
mov
xor
sub
mov
push
push
ds
daa
not
mov
jnp
aad
jnp
mov
add
xchg
vmwrite
test
mov
xorl
out
out
fs
xor
or
xchg
dec
ret
fnsave
inc
fnstcw
xchg
mov
pop
jne
leave
cmp
out
aaa
lcall
fldt
push
enter
pop
dec
popf
lods
sbb
pop
jle
stos
stc
push
mov
jb
lea
push
das
mov
repnz
sbb
scas
mov
loop
sub
ret
mov
xchg
stos
jno
arpl
int3
stos
jnp
sub
into
dec
fstl
ret
repz
rcr
mov
aam
fbld
into
mov
mov
hlt
adc
in
iret
jb
jnp
mov
jb
xchg
std
decb
lds
cmp
jo
daa
fisubl
insb
adc
es
cld
loope
movsl
mov
cmp
vpshld
mov
jg
jp
cmpsb
inc
mov
cmp
movsb
gs
and
jl
sbb
repnz
xchg
mov
add
cmp
movsl
int
dec
in
movsb
std
inc
inc
mov
push
sub
pop
imul
mov
push
or
rorl
pop
jle
js
mov
popf
pop
push
outsb
leave
aad
cwtl
push
inc
cmp
push
ret
or
mov
in
cmp
int3
mov
ss
cs
push
xor
and
lods
push
inc
shlb
je
cmpsl
xchg
push
push
pop
sbb
and
dec
bound
xchg
xchg
out
and
push
push
mov
push
adc
adc
ds
dec
mov
cmpsl
rcrb
outsl
out
and
sarb
jnp
jae
sbb
adc
mov
ror
add
pop
insb
cmc
int
push
pop
dec
inc
addb
xchg
or
push
mov
push
mov
pop
insb
lret
dec
and
test
in
inc
cwtl
push
rol
arpl
mov
inc
dec
jnp
shlb
dec
in
sbbb
mov
fldenv
jne
in
mov
or
add
and
cltd
and
adc
dec
hlt
xchg
jl
and
call
mov
shl
jmp
mov
adc
sbb
fsubs
int3
jge
dec
push
icebp
cmp
push
fdiv
and
jge
outsb
add
hlt
and
fnstsw
nop
pop
xor
mov
pop
mov
pop
test
iret
ja
mov
lret
ds
daa
push
in
fmull
or
dec
pop
fcmovnb
jnp
addl
xlat
test
xchg
movntq
imul
lods
mov
popl
sub
iret
negl
shrb
xchg
cmpsl
xor
push
inc
sbb
and
mov
lret
imul
dec
xlat
iret
adc
jno
dec
ret
test
mov
sbbl
xchg
jmp
gs
push
push
clc
xor
popa
adc
xchg
aaa
in
out
stos
jns
add
sub
jbe
mov
std
mov
int3
movsb
pop
into
ss
adcb
cmp
lds
loope
pusha
mov
or
gs
jb
cmp
jge
scas
jne
mov
popw
std
aam
xchg
ret
out
ret
push
mov
in
sti
cmp
int3
xlat
mov
subl
jp
sti
mov
inc
inc
or
lret
insl
into
call
lods
das
jnp
stos
xor
test
jbe
cmpsb
xlat
mov
sbb
jl
loope
cwtl
mov
jb
mov
push
popa
cld
es
call
stos
jmp
mov
pop
clc
imul
dec
lock
push
xchg
cmc
adc
jmp
pop
add
pop
mov
stos
jae
mov
push
daa
or
dec
pop
pusha
mov
stos
stos
out
mov
xchg
ljmp
xor
test
dec
xlat
das
outsl
icebp
data16
xchg
cmp
scas
pop
js
roll
and
out
pop
call
push
out
sub
cmpsl
jne
loop
pop
fldenv
cli
sbb
pop
or
in
xchg
cmpsl
jo
xchg
daa
insb
mov
push
cmp
icebp
subl
lods
cmpsl
ret
test
sti
enter
mov
mov
pop
dec
add
dec
fistpll
or
bound
push
out
add
push
gs
xor
insl
sti
rcr
fidivrl
int3
mov
rclb
mov
xchg
mov
loopne
mov
cmp
or
daa
mov
mov
lret
and
push
leave
xchg
inc
jp
mov
jg
lea
out
adc
xchg
xchg
adc
sbb
pop
or
incb
jno
dec
out
cmp
xchg
pop
aad
cmp
push
inc
sub
or
loopne
jmp
push
xor
enter
lcall
sbb
out
lock
daa
mov
lahf
test
mov
addl
sbb
mov
pop
jg
jno
sub
mov
inc
inc
mov
lahf
jmp
mov
popl
test
cmc
out
clc
push
test
add
nop
notl
rcrl
sbb
add
push
pop
xor
mov
mov
push
and
pop
es
mov
xchg
icebp
test
aam
sub
sbb
repnz
stos
jle
push
pop
jb
push
adc
pop
cs
jnp
test
ret
xchg
adc
push
mov
mov
dec
mov
out
sub
pop
ds
inc
cmp
std
push
push
arpl
pop
fimuls
jmp
and
call
test
xor
repnz
cli
fisttpll
pusha
jmp
xchg
rcll
and
iret
movsl
push
js
sub
mov
cli
adc
xchg
mov
xchg
loop
aas
mov
es
lock
in
inc
bound
dec
mov
rorb
inc
outsb
or
push
dec
ds
bound
add
sub
nop
aaa
js
push
sub
cli
add
loopne
and
and
and
fdivrs
into
out
fidivrs
push
idiv
mov
pop
insb
pop
das
bound
pop
ficoml
add
outsl
rcrl
sub
mov
sbb
and
mov
pop
mov
add
aam
xor
inc
jl
ret
in
mov
filds
scas
add
mov
mov
std
push
add
ss
xchg
jne
mov
enter
or
out
mov
mov
add
neg
xor
in
call
add
xor
mov
js
and
push
dec
mov
mov
stos
cmp
test
xchg
in
lds
ljmp
fwait
push
inc
dec
popf
stc
in
out
je
mov
popf
test
or
scas
pop
jnp
mov
sub
das
scas
mov
dec
mov
aad
xor
outsb
cld
and
lods
jl
movsb
repz
aam
dec
test
cmc
gs
gs
and
xchg
cmp
stc
aam
cmp
adc
adc
fisttps
adc
insb
xlat
push
and
imul
cmpsl
mov
adc
pop
lock
jb
rorb
mov
leave
fimuls
jne
int3
subl
imul
xlat
test
sbb
inc
cld
sbb
push
and
mov
sbb
rcrb
or
cli
cmp
call
cmpsb
mov
aad
xchg
mov
subl
fidivrs
and
out
xor
adc
or
fcoms
dec
xor
in
cmp
pop
fbstp
mulb
aad
sub
test
mov
mov
mov
mov
xchg
out
ja
subb
inc
notl
inc
sarb
mov
dec
rcll
dec
loopne
inc
add
aam
dec
repz
xchg
adc
inc
cmpsb
mov
add
out
pop
mov
jne
inc
xor
lock
dec
dec
sub
out
or
jl
inc
pop
mov
and
cld
cli
gs
notb
cld
stc
mov
dec
add
pop
notb
aam
mov
dec
aas
pop
fsubrl
std
sub
into
push
fstl
cmp
push
lret
xor
mov
test
mov
push
inc
mov
rcrl
pop
and
jno
scas
mov
fcoml
mov
outsb
cmp
mov
ds
daa
idivl
aad
mov
or
sahf
adc
hlt
or
sub
jle
rcrb
dec
fcomps
adc
ret
sbb
out
jp
sub
pop
cmp
lret
pop
das
aad
fucomi
push
inc
insb
fcom
pop
enter
dec
mov
xor
jp
pop
rorl
push
ds
aam
mov
jo
mov
push
insl
pop
and
or
sarl
cmpsl
push
pop
call
mov
stos
mov
out
cli
cmp
outsb
and
jns
testl
fists
lock
movsl
in
inc
jne
imul
das
lock
lds
sbb
das
cwtl
lret
into
ret
jle
adc
pop
mov
fmuls
mov
into
push
repnz
stos
dec
lret
mov
in
fnstcw
fadds
je
cmp
or
mov
les
repnz
lds
out
shl
dec
std
or
pop
js
fmul
arpl
dec
int
aad
jmp
scas
mov
loopne
cwtl
pop
arpl
gs
xorb
pop
and
sti
or
lahf
aam
sub
nopl
jnp
sar
lds
sub
ljmp
popf
movsb
shrb
stc
cmp
pop
out
data16
inc
sbb
cmp
test
adcl
lods
sbb
ret
fidivs
jae
enter
sbb
pusha
ror
lods
sbb
add
adc
lea
incb
sub
mov
sbb
call
mov
imul
mov
mov
mov
or
inc
or
not
cmpsl
mov
setb
imul
add
in
push
push
jb
mov
xchg
mov
push
stos
lds
icebp
cmp
into
or
out
out
rol
add
pushf
ret
xchg
fistpl
hlt
clc
icebp
dec
sub
fnsave
add
popf
xchg
call
adc
ja
xchg
xchg
lret
jne
add
outsb
insb
xor
push
in
and
leave
dec
test
popa
gs
xchg
pushf
ss
js
inc
dec
mov
dec
lea
pop
int3
rcrb
lock
pop
gs
and
mov
dec
or
xchg
lea
jl
fnstenv
mov
movsb
hlt
test
mull
iret
add
js
ds
pop
sbb
mov
sbb
pop
mov
loopne
es
jmp
sub
test
in
fsts
outsb
shl
ja
lea
out
cmp
js
test
jge
cmpsl
aad
pop
cltd
int
mov
adc
mov
es
sbb
lcall
fldenv
mov
pop
iret
push
test
lods
mov
lock
sub
jmp
je
mov
in
negl
sub
arpl
dec
fnsave
fidivrl
in
jno
cmp
ja
ljmp
mov
xor
in
mov
jmp
mov
cs
mov
jbe
insb
lock
and
dec
rorl
ret
cmp
arpl
je
add
das
jb
ret
cwtl
stc
pop
pop
xor
ret
and
enter
pushf
test
pop
push
lock
into
ljmp
mov
les
adc
xor
cmp
orb
sbb
dec
arpl
or
xor
xchg
shrl
sbb
fisubl
arpl
adc
push
adc
iret
imul
ffree
test
insl
mov
and
and
xchg
mov
lods
jo
xchg
lods
div
mov
xor
xchg
sub
ds
pusha
daa
lods
je
adc
pusha
sbb
pop
push
mov
enter
sbb
xor
out
aam
stos
mov
jo
hlt
shrb
insb
jo
je
sub
sbb
cmpsl
test
pop
dec
les
aam
scas
aad
test
fildl
or
ss
mov
ja
and
jnp
lcall
add
dec
out
fistpll
adc
mov
and
pop
adc
call
clc
add
ror
lea
push
iret
mov
imul
sbb
add
pop
cmp
push
ss
lds
mov
mov
xchg
and
enter
xor
inc
hlt
mov
nop
loop
rorl
scas
popa
nop
sarb
lea
push
iret
ja
out
shrl
nop
pop
cmpsl
mov
or
ss
adc
ljmp
ret
imul
jno
je
dec
jnp
xor
fwait
push
imul
jge
sbb
movsl
out
sbb
imul
clc
out
cmpsl
pop
sub
aas
adc
sbb
sbb
aad
xchg
mov
dec
es
add
push
and
mov
dec
insb
iret
imul
into
out
mov
xor
stos
mov
xchg
arpl
and
shrb
ljmp
or
inc
cld
jno
cmp
adc
arpl
cmp
mov
sti
xchg
dec
mov
and
inc
mov
mov
pop
jb
out
ret
add
mov
imul
xchg
jg
in
inc
and
mov
cmp
jnp
fidivrl
popa
push
inc
push
add
dec
fwait
xchg
pop
out
andb
stos
or
outsb
adc
sbb
push
pushf
sti
and
int
xor
adc
xchg
sbb
scas
roll
jbe
xchg
inc
clc
lcall
pop
push
cmp
stos
ret
mov
xorb
ja
sub
cmp
mov
test
fadd
daa
imul
loopne
lods
pushf
lret
mov
test
mov
sbb
and
mov
mov
push
jecxz
cmp
sub
fdivrp
imul
inc
xchg
sub
aad
jl
js
dec
in
popf
popf
xor
adc
aas
cmp
leave
jo
into
lods
add
enter
jo
cli
outsb
scas
mov
cmc
ja
or
sub
cli
outsb
add
push
xor
pop
cltd
loop
orb
mov
xchg
cli
inc
ret
leave
mov
add
cwtl
out
stos
or
shlb
dec
xchg
mov
loopne
hlt
cmp
push
xchg
scas
setbe
lahf
outsl
push
mov
int3
sub
jp
and
fstl
fimull
enter
jge
xor
inc
ds
jge
bnd
inc
push
and
mov
adc
in
jno
cmp
lcall
test
inc
dec
lods
enter
lret
jecxz
cmpb
and
out
js
dec
or
movsb
mov
pop
push
outsb
dec
jbe
and
xchg
test
mov
mov
sub
pusha
mov
inc
int
dec
cmp
idiv
xchg
xor
repnz
add
cmc
je
push
popf
sbb
xor
arpl
cmp
ror
shlb
add
mov
and
aas
xchg
iret
shlb
jno
xor
xchg
scas
and
jbe
dec
pop
adc
sbb
adc
dec
inc
adc
pop
ffree
scas
rcl
xor
or
outsb
mov
clc
das
in
pop
repnz
mov
push
or
std
arpl
lahf
push
mov
push
inc
stos
push
dec
mov
jle
mov
mov
push
imul
fadd
iret
popa
xchg
dec
xchg
das
sbb
xchg
inc
imul
lahf
or
arpl
clc
adc
inc
addl
lcall
adc
ljmp
inc
adc
jl
ljmp
ret
insb
inc
jmp
iret
push
int
adc
sbbl
dec
in
mov
sub
xchg
iret
push
or
iret
test
pop
xchg
inc
xchg
sub
xor
adc
xor
les
push
lods
fwait
xor
out
pop
or
out
xchg
movsb
mov
mov
outsb
idiv
or
mov
inc
popl
cmpb
das
mov
jbe
pop
movsl
xorl
or
jo
cld
cmpsl
fs
xchg
call
push
or
mov
hlt
push
cmp
inc
jnp
cwtl
leave
adc
and
push
push
pusha
ljmp
sub
fwait
loop
and
cmpb
cli
testl
jecxz
xlat
sub
adc
push
xor
dec
xor
push
inc
mov
fnsave
ljmp
xor
icebp
jno
cmp
movsl
cmp
call
jb
lret
leave
enter
pop
jne
mov
xor
push
mov
xacquire
and
pop
out
fidivs
sbb
shll
cmp
dec
jae
mov
push
lds
adcl
push
std
lahf
pushf
fnsave
or
filds
cmp
fisttpll
jmp
pop
movsb
push
adc
call
sahf
adc
mulb
mov
jmp
fcoms
popl
inc
sub
ljmp
inc
dec
inc
idivl
cmc
jge
ret
sub
pushf
xchg
fsubs
adc
add
addl
mov
mov
xchg
movsl
test
push
sbb
add
in
and
and
enter
jo
gs
push
sbb
pop
mov
pop
test
and
addr16
jmp
lods
es
int3
mov
divl
xchg
xchg
cmp
inc
fdivrl
ret
repz
scas
orl
fadds
push
sub
aad
push
icebp
sbb
inc
xchg
int
outsb
cmc
push
and
mov
movb
xchg
pop
divb
dec
stos
adc
jmp
rcl
imul
jecxz
aaa
fdivl
mov
fistps
dec
jne
dec
sub
xchg
repnz
xchg
cmp
addl
mov
sbb
loopne
push
mov
xor
and
pop
fnstcw
mov
ffreep
hlt
sub
cmp
pop
fwait
int3
cmpsl
cmp
dec
loope
dec
scas
sub
cld
rorb
dec
xor
jo
mov
daa
scas
dec
fwait
push
push
sub
mov
sbb
pop
jae
pop
push
push
insl
mov
or
lock
lahf
pop
mov
push
jmp
adc
adc
jle
das
dec
and
cmpsb
sub
hlt
adc
push
mov
adc
push
mov
pop
sarl
daa
push
cmc
xchg
sbb
and
rolb
or
sub
inc
mov
sub
repz
push
push
hlt
pusha
and
fwait
lea
and
add
dec
test
jb
stos
xchg
popf
xchg
pop
cld
sub
pop
sbb
leave
pop
pop
jge
incb
int
mov
ret
mov
cmp
test
jp
fistpl
cmp
popa
mov
push
enter
aam
popa
fstps
dec
dec
mov
pop
lods
inc
cmc
lods
push
ret
pop
and
mulb
in
ficoms
divb
incb
test
ljmp
dec
mov
add
lods
negl
pop
mov
icebp
popf
mov
pop
and
xor
and
aad
bound
movsl
dec
pusha
lods
push
lock
mov
ja
or
imul
dec
movsl
inc
jne
fldenv
scas
jae
xor
clc
out
repnz
dec
sbb
mov
orb
adcb
dec
mov
js
arpl
fimuls
insl
pop
sbb
bound
sub
mov
ss
sbb
or
lds
test
pop
mov
cmp
lods
pop
jmp
popf
aad
sbb
or
ret
mov
out
cmpb
mov
dec
loopne
pop
jl
fnstenv
mov
inc
int3
jp
fwait
in
inc
adc
jge
push
fidivrs
je
test
sub
sub
sub
cmp
cmp
mov
sbb
mov
mov
fcoml
test
shll
in
xor
xchg
mov
push
lods
cmpsl
popa
xor
rorl
dec
add
paddsw
outsl
adc
xchg
dec
or
adc
pushf
aad
sub
ss
pop
divl
movsb
fistpll
insl
dec
lods
mov
jae
pop
sahf
or
dec
inc
xchg
repz
and
add
cmpsb
das
or
out
inc
dec
add
mov
mov
pushf
adc
cmpsl
pushf
into
test
or
repnz
jecxz
mov
inc
aaa
adc
pushf
push
cmp
xchg
dec
add
xor
mov
mov
mov
sbb
and
jb
mov
outsb
jge
test
push
into
sub
mov
pop
cmp
cli
add
subl
pop
ret
test
xchg
int3
fcoms
popa
pop
jnp
in
xor
add
into
ret
adc
lods
xchg
mov
test
push
movsl
mov
cltd
sti
pop
stos
dec
inc
imul
xchg
sbb
aas
rdpmc
icebp
into
fstl
cmp
xchg
sarb
add
xchg
xchg
js
mov
testb
lret
ret
pop
in
cli
and
mov
adc
fnstsw
loopne
xorb
and
mov
test
push
dec
fiaddl
sbb
lods
sub
in
adc
in
push
aam
fwait
push
int3
jae
adc
clc
outsb
lods
pop
cld
mov
insb
adc
mov
int
lahf
addr16
pop
ds
in
xor
orb
fsubrl
fs
aad
lods
popa
and
loop
push
into
push
rorb
outsl
pop
out
ljmp
pop
sahf
sub
xchg
decb
out
sbb
jb
jle
sbbl
int3
loop
sbb
xor
vpunpcklwd
jl
daa
adc
aad
data16
shrb
or
in
imul
sub
stos
mov
das
push
push
out
jbe
daa
in
sbb
imul
mov
sbb
stc
jge
jae
push
jnp
icebp
ljmp
in
sub
cmpsb
lret
xor
add
hlt
mov
add
sahf
ljmp
push
les
mov
idivl
mov
and
arpl
push
loop
pop
and
cmp
iret
stos
mov
test
dec
insb
aaa
pop
insl
adc
inc
icebp
and
leave
lods
lods
aad
pmullw
cmp
xchg
fcompl
and
data16
xor
fwait
adc
mov
xor
cwtl
clc
rorl
or
clc
jae
or
mov
lock
bound
fcomi
inc
lahf
xlat
pinsrw
je
lret
xor
lret
andl
ja
push
add
cmp
pushf
shll
clc
cmp
aad
fisubl
mov
loopne
inc
xor
sub
in
enter
frstor
ret
sub
push
test
ja
sub
das
inc
sbb
mov
dec
call
push
loopne
mov
cmp
pop
mov
outsl
xchg
aad
dec
sub
xor
adc
aam
fmuls
filds
mov
mov
int3
cli
in
sbb
dec
jle
clc
pop
orl
sub
cmp
mov
lods
mov
fdivrl
sbb
add
lcall
scas
lods
and
roll
imul
call
mov
call
or
stos
cmpb
push
data16
ss
dec
aas
mov
inc
xchg
in
push
mov
pop
mov
pop
or
adc
pop
arpl
xchg
jmp
imul
mov
test
adc
in
mov
xor
je
push
lret
push
lret
std
jnp
std
xchg
mov
push
icebp
xor
or
orb
or
and
mov
mov
sub
stc
xor
mov
aaa
in
fs
add
cmpsb
pop
das
fmul
mov
push
push
jge
rolb
add
add
xorb
jbe
cwtl
mov
xor
fstps
jle
pop
je
in
push
mov
sar
inc
sarb
mov
inc
sbb
sub
sarl
idivb
mov
ret
pop
sub
jge
mov
pop
mov
cli
dec
jb
rcr
adc
movsl
adc
shrl
cmpsl
xlat
das
adc
adc
cmpsb
lods
loope
rcrb
fidivs
jecxz,pt
cli
les
mov
mov
out
in
loop
sub
popf
jbe
adc
out
pop
ljmp
cltd
loop
sbb
hlt
inc
outsl
inc
cmpb
decb
xor
icebp
mov
sahf
xchg
aas
pop
xlat
int3
js
jae
out
xor
stos
or
testb
dec
sbb
dec
and
aas
testb
mov
sbb
jle
and
mov
mov
ret
je
xchg
loope
iret
adc
cltd
jl
xor
data16
inc
mov
push
xchg
ret
sub
jb
push
or
movsb
pop
pusha
nop
jbe,pt
xor
fisubl
mov
shlb
in
inc
cld
stos
pop
pand
add
mull
or
pop
bound
jmp
inc
cmpsb
fadds
idivl
fdivr
pushf
lahf
stos
dec
fisubrs
jnp
push
in
in
imul
adc
scas
call
cmpsb
and
jg
or
ss
mov
xor
and
pusha
mov
clc
jb
jg
popf
add
and
cwtl
and
out
push
xor
cmpb
icebp
push
jb
mov
mov
pop
std
bound
cli
pop
add
int
push
adc
shll
push
pushf
cmpsb
pop
jle
and
inc
jo
jmp
orb
mov
sti
add
pop
add
incb
jmp
insl
scas
dec
int
jge
pusha
or
dec
das
stos
loop
call
out
inc
scas
je
jns
lock
lret
filds
mov
sub
int3
pop
in
jns
xor
aas
scas
jge
fwait
mov
push
cmp
shlb
addr16
sub
pop
test
push
and
bound
mov
outsb
std
sarl
iret
popa
hlt
add
outsb
cmp
xchg
pop
loopne
les
mov
jne
push
fisubrl
push
mov
mov
push
or
mov
inc
adc
cwtl
mov
stos
test
pop
ret
loop
in
rcll
jge
clc
mov
out
pop
mov
mov
sub
pop
mov
push
mov
xchg
test
mov
in
xchg
adc
or
mov
push
divb
daa
sbbl
ret
add
in
imul
in
sub
data16
mov
aas
movl
jns
cmp
adc
add
aad
or
push
gs
and
mov
pop
add
sub
sub
cmp
mov
mov
push
ljmpw
pop
jb
popf
jecxz
mov
shll
add
mov
xchg
xchg
push
shlb
lret
test
lret
daa
outsl
out
shll
adc
iret
int
and
in
outsb
push
pop
jmp
inc
or
inc
adc
lods
jg
cmc
clc
rcrb
inc
inc
inc
jns
in
and
leavew
nop
xchg
and
mov
jb
movsl
test
and
mov
popl
dec
add
call
sub
dec
ja
xor
ja
and
mov
insl
pop
aaa
xor
add
inc
xlat
push
push
out
inc
std
jne
movb
pop
sub
data16
jp
dec
fiadds
and
mov
sbb
cmp
mov
jmp
into
sbb
xor
jo
dec
daa
int
sbb
xor
pop
das
sahf
aaa
ds
xor
dec
scas
mov
xor
mov
inc
aam
or
mov
aas
stos
jbe
loopne
xor
mov
out
mov
in
stc
adcl
xchg
outsl
lret
pop
mul
pop
cmc
aad
mov
clc
adc
lret
popa
pop
cmp
add
rcrb
int3
cmpsb
testb
int3
test
ret
imulb
xor
pop
cli
push
int3
mov
imul
cmp
out
ljmp
adc
jle
test
push
idivl
je
or
cwtl
nop
fs
xchg
dec
mov
mov
adc
add
mov
in
xchg
aam
adcl
stos
gs
fisttps
pop
testb
ljmp
loopne
lock
mov
xor
add
outsl
fmuls
fcompl
ds
mov
xchg
decl
push
xchg
inc
mov
mov
push
pop
mov
repz
jns
aaa
cltd
xor
nop
stos
test
icebp
dec
sub
icebp
int3
clc
test
cli
dec
pusha
pop
inc
or
cmp
ljmp
idivl
mov
movsl
in
pop
aam
fcoms
in
push
daa
or
lds
ss
mov
cmpsb
xorb
cmc
cmp
in
mov
mov
jmp
stc
cld
xchg
add
movl
mov
clc
loopne
imul
sub
or
fsubrs
dec
dec
mov
xchg
xor
push
xorb
and
fisubl
xchg
push
jecxz
shlb
and
push
jbe
test
mov
inc
dec
lcall
test
adc
test
je
shl
add
ss
mov
mov
mov
adc
fidivl
lock
or
loope
jmp
mov
jnp
loopne
jg
xorl
xor
pop
addr16
add
repz
int
xor
shrl
xor
push
adc
mov
pop
aaa
push
bound
pop
cld
mov
mov
int3
sub
les
add
adc
inc
adc
jle
sbb
xorb
aaa
call
loop
inc
push
bound
jbe
rclb
fnsave
adc
shlb
repnz
ret
mov
pop
mov
jmp
cmp
movsl
test
arpl
mov
inc
sarl
jnp
data16
das
xchg
idivb
lods
lods
adc
push
fdivrs
test
aam
sarl
notl
imul
mov
int3
cld
scas
scas
xchg
ljmp
dec
sub
push
mov
mov
pop
and
enter
push
jmp
dec
sbb
cltd
push
jne
pop
cmp
mov
ljmp
dec
leave
dec
xchg
push
out
orl
ljmp
ja
jecxz
cmp
out
xor
add
lods
scas
stos
cld
push
push
xchg
push
jnp
mov
inc
popa
dec
inc
aam
fidivrl
add
push
cs
jl
lea
fs
ljmp
leave
and
enter
push
rol
jl
push
scas
pop
cmpxchg
outsl
pop
pop
loopne
movsl
xor
sbb
outsb
xchg
jns
negl
fidivl
push
jo
mov
cmpsl
dec
cltd
sub
mov
pop
dec
imul
push
test
out
ret
aam
xor
pop
xchg
adc
mov
sbb
ret
lods
pushf
xchg
shlb
lods
inc
roll
addl
sbb
cmpsb
or
dec
jno
inc
mov
and
adc
and
mov
lods
icebp
add
jl
and
push
jg
xorb
pushf
rcrl
ljmp
dec
pop
mov
leave
or
enter
adc
push
stos
cltd
ja
dec
mov
add
adcl
sti
xchg
gs
sub
mov
fstpl
loopne
sahf
ss
cmp
fnstenv
jno
dec
ror
inc
cmp
bnd
arpl
aad
xchg
and
in
mov
fcmovnu
xorl
adcl
inc
imul
pop
pop
mov
ret
dec
or
aad
sbb
add
xchg
push
into
push
fnstenv
and
sub
fsubl
cmp
mov
jbe
pop
xor
aad
cmp
push
outsb
jns
cmpsb
mov
dec
sbb
shll
xor
mov
or
push
inc
shll
inc
dec
fs
hlt
out
shl
xchg
daa
sub
mov
mov
das
add
pop
inc
pop
jmp
push
in
mov
jge
xor
cwtl
adc
jp
loopne
outsb
lret
mov
fidivs
std
sub
jg
repnz
fwait
cmp
lcall
pusha
data16
push
xor
aad
xchg
push
aas
push
and
insl
inc
xchg
iret
cmpl
xchg
ffreep
xor
addr16
add
ds
inc
les
jl
jmp
shrb
jns
inc
es
fadd
mov
fdivrl
adc
add
mov
packssdw
sbbb
movsb
mov
incb
out
mov
ljmp
ret
mov
int3
repz
pop
add
jp
hlt
sbbb
push
mov
pop
pop
in
add
mov
ja
shll
jmp
jmp
shrl
sbb
adc
sub
cmp
mov
popa
mov
mov
jne
xorl
stos
jl
imul
aam
negb
dec
insl
cs
pushw
fcmovbe
sbb
dec
cli
insb
push
mov
push
ds
loope
call
mov
pop
cli
inc
dec
jne
sub
fs
cld
add
test
adc
or
adc
xor
mov
push
cmp
lahf
popa
lods
adc
js
add
xchg
in
push
in
out
setg
sub
imul
mov
sbb
loope
mov
inc
pop
add
daa
or
mov
sar
ret
cwtl
rolb
int3
sbb
mov
loope
jnp
les
jge
fdivrp
and
sbb
lea
dec
fdivrl
sbb
psllq
sbb
inc
pop
stos
pop
push
xchg
clc
aaa
pop
nop
push
iret
rcrb
jecxz
popa
data16
ja
xor
pop
stos
jo
lret
repz
jb
fisttpll
pop
leave
in
and
mov
jbe
js
xchg
xchg
xchg
stos
je
and
int
es
cs
mov
fimull
out
ffree
leave
leave
into
push
jmp
cmpsl
imul
mov
mov
xchg
adc
inc
shll
repnz
cwtl
das
pop
xchg
and
in
and
les
mov
mov
sbb
clc
lds
inc
dec
in
and
divb
imulb
and
fwait
cmp
in
scas
add
stos
enter
mov
or
mov
jne
hlt
out
inc
mov
mov
out
push
cmpsl
adc
insb
and
add
and
cmc
fldt
adc
outsl
imul
adc
mov
mov
xor
xchg
stc
fsubrs
push
jne
push
aam
pop
sbb
cmp
and
sbb
jo
mov
xor
lcall
jb
enter
sbb
jb
sub
inc
jecxz
inc
mov
sub
sbb
cmpsb
aaa
divb
pop
lods
dec
mov
inc
sbb
push
in
xlat
scas
cmp
ret
sub
stos
aam
xor
test
or
and
mov
adc
push
xchg
mov
sbb
push
adc
sar
pop
jecxz
iret
cmp
sahf
jns
outsl
fildll
inc
mov
push
les
sbb
aaa
pop
repz
mov
cwtl
inc
in
ljmp
out
inc
lcall
addb
xchg
xchg
push
push
push
loopne
sub
pop
jns
lcall
push
jmp
stos
out
mov
shlb
ds
xor
mov
xor
arpl
clc
mov
mov
or
mov
inc
ljmp
mov
mov
stc
iret
lea
xchg
fwait
add
ficoml
and
bound
sub
push
pop
sub
lcall
repnz
mov
loopne
movsb
push
mov
pop
imul
clc
in
stos
out
pushf
pop
push
out
push
pop
fdivrl
je
jbe
iret
inc
xlat
into
addr16
inc
popf
xchg
out
mov
insl
xor
adc
mov
push
xchg
movsl
das
add
repz
shll
jb
xchg
insb
sbb
ret
cmp
mov
sub
mov
cmpsb
push
push
sub
cmp
fwait
gs
mov
jge
xchg
idivl
movsl
push
cmp
pop
lods
movsb
mov
xchg
mov
xchg
jno
mov
test
adc
dec
pop
jno
jp
filds
pop
dec
and
dec
shll
sbb
fwait
sub
mov
jle
or
inc
ds
std
pop
movl
push
leave
outsb
popa
cld
or
add
xor
inc
inc
mov
jo
aaa
or
mov
sbb
hlt
mov
xor
outsl
les
addr16
mov
scas
lcall
xor
mov
and
xchg
xor
aaa
lahf
and
sub
add
ljmp
test
pop
inc
js
adc
pop
aam
inc
xor
sub
inc
outsl
ret
das
mov
xlat
or
push
outsb
stos
cli
movsl
jg
and
pop
stos
sub
mov
push
pop
pop
mov
sub
xor
icebp
mov
mov
sub
sub
sti
and
cli
fsubr
fs
jge
out
sub
mov
jno
cmp
push
inc
mov
enter
push
inc
aad
lret
or
cwtl
std
lds
mov
js
mov
es
cmp
jle
lods
cmp
dec
dec
push
ret
cwtl
sbb
push
and
inc
lcall
lds
in
aad
test
sbb
enter
sub
mov
jmp
bound
into
repnz
xchg
inc
fldenv
pop
jp
in
push
aaa
cwtl
insb
pusha
loope
mov
loopne
pop
cmp
adc
cmp
pop
test
jbe
sub
or
cmp
aas
jne
pop
xchg
notl
or
and
cs
loope
pop
mov
andb
mov
jbe
jmp
push
ss
jno
cli
mov
sub
test
test
xor
fstps
or
int3
adc
mov
mov
fildll
sbb
mov
fsubrl
cmp
call
and
imul
loop
cwtl
sub
je
rcll
push
pusha
xor
out
or
and
fcoml
lret
ret
add
add
ficomps
adc
lea
mov
push
xor
aas
ret
out
pushf
mov
lods
cld
or
into
mov
pop
bound
lods
inc
fidivs
psrlw
scas
clc
imul
sbb
push
ja
jg
push
popf
in
push
cmpsb
jo
or
add
and
addr16
push
push
lock
js
xor
loope
jne
into
mov
cli
dec
daa
call
popa
or
fidivs
aas
inc
jmp
not
bound
imul
iret
sbb
mov
xchg
or
sbb
add
sub
arpl
push
insl
lahf
push
out
mov
sbb
repnz
lods
outsb
push
and
mov
sbb
mov
in
jne
lret
mov
cmp
jmp
sbb
pushf
sahf
mov
xor
xchg
shlb
cmpsl
pop
cmp
adc
inc
jecxz
mov
fisttpll
mov
xchg
and
int
pop
fs
xor
add
ror
adc
adc
xchg
fld1
sahf
shll
pop
test
clc
loopne
sbb
push
cmpb
sbb
ficomps
stc
inc
fdivr
push
fwait
or
nop
stc
pop
insb
xchg
inc
jge
mov
loope
xchg
mov
mov
add
sti
and
mulb
cld
and
sub
inc
adc
out
cmc
subb
push
arpl
out
or
xor
or
sti
push
jg
mov
mov
lcall
push
adc
inc
sub
xchg
xchg
int3
scas
ret
mov
jp
lods
cli
js
xchg
aad
test
mov
inc
int
mov
lret
and
fdivl
jmp
mov
out
sbb
cmpl
inc
roll
es
fcomps
jne
outsb
sti
aaa
mov
xchg
lea
sbb
push
cmp
push
dec
mov
adcb
loop
mov
add
out
xorb
xchg
aaa
add
push
daa
sub
repnz
ds
jp
dec
repnz
add
dec
dec
xor
push
or
adc
jmp
or
sti
mov
jo
xchg
sub
and
push
sbb
cmp
jge
movsb
ja
pop
and
adcl
push
test
enter
das
mov
mov
mov
test
sbb
clc
scas
push
pushf
sub
sub
lcall
jae
test
fcoml
clc
clc
cltd
push
es
aam
repnz
gs
rorb
mov
aaa
dec
dec
mov
mov
stc
push
inc
sahf
aad
jne
mov
ficompl
sub
or
pop
clc
jp
sub
ret
gs
inc
pop
cmp
lods
out
and
inc
or
sub
jnp
enter
xchg
pop
cwtl
mov
adc
or
xor
lret
xor
jne
hlt
in
add
sub
xchg
movsl
pop
imul
pusha
inc
fcoml
scas
mov
hlt
cmpsl
imul
adc
jnp
mov
ljmp
xor
lahf
mov
or
aaa
xchg
repz
cmc
loop
lret
movl
mov
mov
cs
jns
xor
and
gs
mov
ss
shr
cld
ljmp
jno
push
bound
rclb
jbe
insl
jecxz
push
inc
adcb
subl
push
and
adc
push
push
testb
mov
jne
pusha
out
jb
add
and
inc
iret
das
pop
push
pop
jbe
icebp
lods
enter
cmovo
inc
pushf
sub
clc
inc
les
ja
ss
in
addl
jecxz
mulps
or
sub
mov
inc
dec
xchg
add
sbb
leave
out
std
std
mov
jl
mov
mov
bound
pop
test
xor
inc
loop
and
clc
inc
add
push
add
bound
lahf
xor
jecxz
fisubs
out
mov
push
add
sub
add
gs
jg
push
sub
js
cmp
xor
xor
push
jae
aaa
divl
sar
adcl
pusha
jns
xor
push
pop
mov
in
sti
dec
mov
mov
xor
inc
inc
cli
sbb
push
addr16
rorb
dec
fisubrl
nop
jo
into
add
xchg
aad
jg
cld
sti
jge
mov
call
adc
fnsave
dec
lret
or
pop
shrl
mov
scas
and
js
jb
int3
and
xchg
adc
pop
addb
cmc
add
adc
int3
fistpl
sbb
call
xor
xor
inc
adc
xchg
sarb
or
or
pusha
xchg
mov
add
test
aad
inc
in
cwtl
mov
jp
clc
jb
jne
movsl
arpl
fcomps
fiaddl
push
dec
aas
fs
mov
and
pop
mov
repnz
xlat
pop
cmpsl
lcall
repnz
lock
xor
popa
push
arpl
dec
xor
es
cbtw
adc
cli
mov
loopne
rolb
test
loopne
or
icebp
xor
sbb
mov
add
mov
outsb
fidivrs
std
test
sub
add
mul
sub
ljmp
push
repnz
adc
mov
pop
inc
addl
sbb
push
pop
lret
jl
in
xchg
in
les
imul
mov
gs
test
fdivs
or
pop
mov
clc
repz
lahf
and
mov
aaa
sub
or
push
jmp
pop
or
sub
pop
jne
xor
lods
mov
pop
fidivl
mov
dec
mov
jno
xchg
push
xlat
popa
mov
orb
cltd
repz
fists
or
or
aam
sub
mov
ljmp
imul
imul
xor
notl
xor
mov
push
repnz
leave
inc
push
and
fmull
push
loop
call
icebp
inc
jmp
testl
add
mov
xor
gs
movsl
sbb
push
lods
icebp
cwtl
fdivrs
out
hlt
sub
sar
xor
lret
in
fld
fwait
jne
gs
push
movl
in
lcall
int
test
push
fstpt
addr16
leavew
mov
lock
fsubs
stos
js
sbb
dec
or
xchg
enter
adc
jecxz
mov
in
pusha
adc
es
sub
inc
dec
loopne
dec
dec
jecxz
dec
ret
adc
push
in
in
enter
adc
xchg
in
rcl
pop
pop
or
or
xchg
push
xor
mov
push
mov
mov
sbb
mov
inc
shrb
lret
push
mov
jb
dec
mov
cmp
xchg
int3
sti
mov
jns
fcmovnu
mov
call
pop
sub
lods
stc
into
cmp
nop
stos
xchg
sbb
out
mov
ja
hlt
enter
inc
xchg
mov
fiaddl
test
fbstp
je
mov
das
fisttps
inc
cmc
inc
hlt
push
pop
push
cmp
fs
xor
sbb
xor
lcall
mov
subl
jg
icebp
mov
xor
mov
inc
cmc
mov
adc
clc
xor
pop
rorb
les
push
xor
inc
sbb
fwait
imul
pushf
insb
add
xor
daa
xchg
ljmp
xlat
xchg
xor
dec
jle
xchg
nop
cs
imul
nop
in
or
or
fistps
sbb
add
scas
pop
mov
push
jno
or
rcll
nop
jmp
incl
in
adc
cmp
les
xor
lcall
pusha
mov
and
jns
xor
mov
insb
mov
inc
adc
test
mov
ret
in
and
inc
mov
or
pop
pop
dec
adc
or
fs
xchg
adc
mov
push
sti
icebp
mov
mov
lret
in
pop
mov
xchg
mov
arpl
jno
jb
bound
adc
add
add
mov
mov
add
xor
inc
insb
not
xchg
scas
mov
test
jbe
scas
cmc
cmp
mov
pop
xchg
and
test
xchg
inc
pop
xor
cs
sbb
jne
cmc
jl
cmp
sbb
or
repz
push
sbb
add
repnz
lcall
std
test
inc
and
imul
idivb
movsb
xchg
add
sub
pusha
mov
out
test
dec
or
and
out
xchg
mov
ret
add
mov
mov
inc
mov
out
mov
fsubs
out
jns
gs
xchg
push
nop
fs
popf
jecxz
pop
and
into
mov
cs
hlt
jmp
cmp
ljmp
inc
mov
lahf
bound
jl
dec
adc
cmp
dec
fs
pop
fnstsw
sub
jmp
jb
out
inc
rcrb
out
mov
adc
sbb
stc
cmp
dec
pop
gs
or
add
jge
cs
pop
sbb
or
push
fsubl
aaa
sub
aaa
cmpsl
jl
mov
je
jp
mov
inc
mov
mov
scas
int3
adc
sbb
das
push
and
lock
adc
loopne
jno
movsb
ljmp
orl
mov
in
inc
lret
xchg
insl
mov
cmp
test
in
pop
and
sbb
out
loop
cli
stos
sub
inc
movsb
add
mov
cld
pop
cld
insl
lods
mov
add
xor
lock
lret
cwtl
xor
jl
cmp
inc
call
movsb
xchg
jns
push
and
add
cwtl
gs
adc
pop
xlat
adc
hlt
test
lcall
shrb
jne
ljmp
cli
jmp
pop
or
cmp
lcall
imul
rolb
movsl
cmp
xchg
test
adc
mov
jb
orl
shlb
fildll
pop
sbb
and
mov
fwait
adc
push
cld
inc
jae
shr
clc
inc
testl
lock
fcompl
cmc
dec
cmp
push
adc
sbb
stos
jge
sbb
jge
iret
in
es
lock
sbb
jle
xor
movsl
mov
and
xlat
dec
dec
sti
fwait
mov
dec
xor
lcall
enter
test
test
sub
cmp
or
aad
and
add
or
push
cld
imul
incl
sbb
arpl
mov
rcll
iret
daa
sub
xlat
xor
dec
cmc
loopne
xchg
xchg
mov
dec
adc
hlt
pop
adc
lahf
fsubrl
aam
or
mov
pop
cs
xchg
leave
scas
xor
nop
insb
or
jl
cmp
cmpsb
pop
enter
mov
push
adc
addr16
data16
shrb
jno
js
addl
ljmp
jp
push
cwtl
rcrl
push
mov
mov
into
pop
xchg
pusha
jbe
mov
in
ror
fwait
jae
jmp
addr16
pcmpgtb
inc
mov
insl
out
mov
cld
lea
pop
xor
out
pop
ds
inc
cmp
fmull
mov
aas
sahf
int3
pop
sub
cmp
xchg
lds
stos
outsb
iret
sbb
push
mov
push
add
mov
dec
sbb
inc
je
and
sub
dec
lahf
pop
arpl
repnz
push
test
mov
lods
insb
iret
xor
aad
mov
jns
leave
lods
mov
jb
xor
sub
ds
hlt
lea
mov
jecxz
pop
outsl
ja
in
loopne
repz
jae
test
xchg
adc
pusha
lods
loope
dec
sbb
scas
aam
jge
adc
dec
out
xor
dec
jnp
jmp
mov
test
outsb
je
sbb
out
sar
aam
cmpsl
scas
lods
jecxz
jb
imul
inc
xor
push
add
push
repnz
dec
mov
sahf
xchg
lea
and
inc
out
fmul
insb
jge
mov
js
xor
out
adc
lods
fwait
adc
sub
dec
in
aaa
add
daa
fcomip
adc
and
insl
aam
xchg
addr16
and
in
mov
in
fs
cmpsb
jb
and
lret
add
sarb
add
sbb
scas
fbstp
lock
push
pop
dec
imul
adc
cs
jno
test
xchg
fidivrs
lret
dec
dec
addr16
pop
or
sahf
jns
movsl
icebp
mov
fdivs
push
imul
xchg
test
push
stos
sbb
imul
aaa
jbe
pop
cmp
je
and
cld
stos
or
dec
pusha
pop
ja
fstps
idivl
add
mov
mov
add
cmp
lahf
mov
bound
rol
push
adcl
xor
fs
jp
shlb
repz
xchg
subl
lock
jne
pusha
push
arpl
mov
and
jnp
aam
mov
xacquire
xor
hlt
add
adc
jge
or
and
mov
or
lods
mov
repnz
xor
dec
ja,pn
loop
sbb
push
sbb
popa
insl
lret
aaa
sti
mov
dec
mov
scas
mov
mov
xchg
notb
mov
test
call
cs
add
ljmp
mov
mov
cs
push
cmpsl
stos
inc
add
push
outsb
push
jecxz
cli
xchg
push
push
sub
icebp
dec
cmpxchg
lret
das
out
pusha
jle
je
cli
pushl
mov
movsl
stos
xchg
push
sbb
mov
loope
mov
frndint
cmp
mov
pushf
sub
push
imul
pop
imul
hlt
sub
ret
pop
push
repz
adc
jl
mov
mov
les
cmpsb
jmp
shll
jne
push
or
rol
rorb
mov
add
lret
lock
fisubl
cmc
xor
sbb
mov
xchg
sub
or
push
mov
mov
daa
fldl
push
inc
insb
arpl
imul
push
shlb
adc
cmpsb
jns
jo
jno
xlat
flds
mov
clc
mov
icebp
stc
mov
push
les
xchg
mov
cld
pop
pop
mov
and
mov
ljmp
idiv
notl
mov
and
and
sub
mov
lahf
jecxz
cmc
sub
or
jae
add
test
daa
and
mov
jmp
dec
ret
sbb
in
cmp
push
fcompl
add
push
lahf
or
in
in
fldl
sbb
imul
xchg
mov
repz
aas
pop
bound
mov
cmp
sub
clc
pop
mov
fnstcw
stc
loopne
mov
mov
in
push
jg
in
add
cmp
mov
rcll
xor
mov
ss
xlat
push
sbb
ja
lret
or
mov
test
imull
lds
adc
lods
fisubrl
pop
rorb
push
pop
hlt
push
out
xchg
popl
daa
jbe
movsl
jge
jns
mov
xor
lea
dec
cmp
add
jle
jo
int3
nop
pop
roll
pusha
mov
or
xchg
das
ficomps
inc
stc
pop
sbb
aas
adc
js
in
push
fstpl
cs
iret
rcll
inc
fcompl
xchg
jns
fwait
inc
push
stos
shl
add
pop
mov
into
pop
or
sbb
fdivrl
jbe
cmp
push
push
sbb
jno
ss
in
fisubs
movsl
test
loopne
add
ret
cmp
xor
lea
mov
insl
sbb
dec
dec
movsb
and
iret
jnp
add
dec
sbb
jmp
xor
clc
dec
push
mov
pusha
dec
je
sub
adc
push
push
clc
sbb
push
xchg
es
push
mov
lds
repnz
imul
movsl
in
in
cmp
cltd
pop
imul
nop
in
inc
jmp
sub
in
add
pop
xchg
pusha
int3
stc
mov
add
test
insb
fwait
in
mov
pusha
mov
mov
inc
pop
and
mov
mov
imul
fdivr
or
or
jmp
mov
dec
mov
jmp
addl
xchg
sub
xorl
xchg
rorb
and
shll
imul
dec
idiv
bound
xor
add
pop
popa
mov
xor
out
dec
pop
mov
jecxz
mov
adc
push
cmpsl
and
repz
je
add
jle
cmp
das
push
lret
mov
jmp
rorl
mov
lcall
arpl
push
in
jecxz
mov
cltd
mov
out
pop
outsb
inc
xchg
loop
ds
or
jg
pop
mov
and
cmc
std
loopne
mov
mov
fcmovnbe
fiadds
mov
and
jo
imul
pusha
push
or
dec
cmpsl
popf
push
jge
test
sub
fisubrs
jno
stos
sti
popa
jmp
dec
mov
adc
pusha
es
jg
mov
dec
inc
add
leave
cli
or
les
cmc
cs
inc
dec
inc
leave
imulb
cmp
pop
aaa
int3
test
fiadds
pop
mov
add
scas
sub
sarb
popa
arpl
pop
ja
cmp
sub
lea
in
leave
mov
dec
pushf
fcoms
pop
dec
aas
sahf
addr16
mov
jmp
insl
nop
les
push
and
mov
jo
jg
and
sahf
pop
dec
push
jmp
sub
jmp
inc
int
jbe
mov
or
movsb
test
insl
out
dec
mov
les
sti
push
imul
ret
mov
in
lret
mov
dec
mov
adc
xchg
aas
or
mov
cld
mov
cmp
rcl
sti
aas
sub
or
sub
lret
push
out
pop
cld
bswap
adc
cmpb
lret
jb
lret
mov
sbb
jg
fsubrl
call
xchg
dec
xor
out
addr16
mov
sahf
sbb
addr16
rcrl
movsb
ljmp
jo
mov
mov
or
insl
jp
xorl
sbb
jl
iret
lock
mov
outsb
inc
fsubrs
adc
mov
ds
mov
in
inc
adc
and
pushf
sub
mov
lret
int
outsb
iret
push
push
ljmp
or
das
lds
and
sub
push
mov
sub
in
mov
xchg
popa
dec
test
inc
pop
xor
mov
hlt
jg
sti
add
sbb
lcall
mov
andb
cld
dec
lret
int3
pusha
jae
test
or
jle
sti
sbb
mov
es
adcl
inc
mov
cs
fnop
cmc
ret
or
rcll
pop
enter
adc
nop
pop
aad
fisttpl
xor
dec
inc
rorl
xchg
push
or
mov
aam
subb
add
add
loopne
test
iret
push
add
mov
and
leave
and
lea
dec
push
in
push
jo
imulb
repz
pop
mov
jl
push
cli
cli
loope
test
popf
mov
dec
movsb
xchg
pop
jb
shrl
mov
test
push
insl
inc
push
mov
cmp
shlb
mov
bnd
add
je
daa
mov
add
xchg
sub
push
push
adc
and
sbb
repnz
es
inc
int3
lcall
fidivrs
fwait
ljmp
and
inc
lea
gs
aam
pop
pop
adc
fsub
mov
out
stos
pop
inc
decb
or
js
mov
pop
push
andb
call
mov
lock
stc
stc
popl
inc
lea
and
test
mov
push
outsl
cwtl
or
pop
dec
out
sarl
inc
scas
mov
ljmp
jge
lret
rorl
scas
sbb
push
sarl
or
adc
or
imull
arpl
aaa
int3
loop
xor
cld
adc
lods
lea
cwtl
in
xor
fstpl
cli
aam
and
inc
add
cmp
jnp
mov
add
push
rcll
or
rcll
push
add
adc
scas
mov
push
in
pop
mov
xchg
bound
mov
adcl
ficoml
jbe
pop
inc
jge
inc
pushf
call
fcoml
stc
jmp
cwtl
ss
inc
rclb
arpl
lret
fcom
mov
jae
xchg
loope
fiadds
and
inc
and
out
jbe
ret
pop
test
dec
or
pop
jns
sarb
dec
outsb
sbb
cli
xlat
mov
and
inc
and
cmp
push
stos
lret
and
setge
sbb
scas
in
setnp
lds
idivl
push
lods
out
add
sbb
adc
les
test
jle
jns
or
dec
cltd
inc
repnz
sub
popa
movsb
fists
js
sub
movsl
rolb
ficompl
mov
xchg
in
cmp
je
test
xchg
cmp
jo
adc
or
outsl
pop
push
mov
fstpl
and
in
pmaxsw
dec
inc
jp
mov
jmp
mov
mov
idivb
mov
les
xchg
dec
lds
cltd
loopne
fwait
mov
mov
or
leave
mov
sbb
hlt
stos
cmp
pop
jne
jb
add
cld
sbb
or
jmp
cmp
push
insl
pusha
mov
testb
cwtl
imul
xchg
cwtl
pop
sub
pop
loopne
push
sub
mov
fnsave
sub
sahf
xor
fdiv
or
mov
rol
aas
loope
mov
mov
movsl
sbb
daa
and
sbb
push
jb
loop
nop
xor
mov
out
inc
add
hlt
mov
movsl
lcall
in
rolb
mov
push
mov
jle
stos
mov
sbb
pusha
or
or
add
mov
mov
orb
dec
lods
push
dec
add
cmpsb
pushf
je
dec
or
imul
popf
push
gs
out
mov
adc
jno
and
fdivrl
int
or
mov
testl
popa
adc
xchg
subb
inc
push
cs
mov
cmc
push
mov
jg
addr16
jl
pop
cmp
jl
push
test
mov
in
jmp
cmpl
xchg
nop
mov
xchg
dec
and
pop
and
aas
or
sub
lea
fildl
jns
mov
add
pushf
dec
mov
lret
mov
inc
sub
adc
pop
cmp
mov
mov
filds
test
stc
pop
add
decl
add
lods
stc
add
inc
mov
mov
insl
cmp
insl
leave
mov
pop
fldenv
pop
std
mov
mov
loope
mov
movsl
test
movsb
lods
and
shrl
ds
test
dec
cld
xchg
xchg
sub
das
sti
ror
pop
int3
dec
movsb
add
repz
rcll
lret
adc
je
xor
movsb
orl
js
add
pop
jecxz
xchg
hlt
jmp
enter
or
std
xor
add
clc
pop
dec
jnp
xchg
sarb
loop
and
inc
outsl
in
lret
leave
pop
mov
sub
jbe
enter
sbb
dec
int
cwtl
aas
xor
mov
push
jbe
dec
shrl
mov
in
jae
xchg
ljmp
leave
es
rcrl
adc
dec
in
ret
pop
shl
cmp
and
out
lret
test
mov
xlat
xor
xor
mov
dec
mov
xchg
fisttps
shll
insl
insl
ds
jmp
jae
sbb
inc
aam
mov
js
imull
mov
and
lret
sbb
push
pop
test
sbb
mov
mov
xchg
arpl
adc
aam
addl
out
dec
or
notb
jo
pusha
test
add
mov
cmp
bound
mov
cmpsl
and
addr16
mov
pop
bound
inc
and
call
and
cmp
sub
xchg
movsb
pop
sbb
sbb
test
test
mov
iret
mov
outsl
xchg
js
inc
mov
jno
jmp
js
movsb
jae
rorl
sub
subl
push
bound
or
pusha
dec
scas
sbb
ja
push
ds
hlt
xchg
roll
lcall
jns
rcl
je
cmc
mov
xchg
cli
jns
imul
inc
pop
jne
loop
out
sti
jmp
lods
jl
push
jp
orps
cmp
test
cltd
in
inc
mov
adc
aaa
add
inc
pop
stos
inc
es
pop
int3
inc
decl
cld
int3
mov
jle
loop
test
leave
mov
xorb
pop
cmp
push
jb
sbb
pop
adc
xchg
inc
out
hlt
aas
jbe
ret
fsubrl
push
jmp
enter
pop
shl
mov
aas
adc
sarb
mov
xchg
xchg
daa
or
in
push
sub
and
and
xorl
xor
insb
sahf
cltd
add
adc
adcb
mov
movsl
stos
sbb
xchg
shlb
inc
add
mov
push
jg
je
in
dec
sub
jl
movsb
in
mov
or
imul
aam
push
lock
fcomps
add
adc
es
pop
push
jbe
jmp
ret
mov
mov
push
fistpl
aaa
dec
mov
movsb
mov
stos
repnz
inc
jbe
mov
shrl
fmul
mov
mov
repnz
jle
sahf
adc
jnp
jmp
test
push
je
cwtl
es
adc
frstor
mov
pop
mov
jle
adc
and
jnp
or
and
cmp
lea
jno
ljmp
je
aam
iret
outsb
sbb
cli
in
fiaddl
leave
lahf
into
and
aam
andps
jns
data16
movsb
jg
shrl
movsb
imul
jne
inc
in
mov
jp
cmp
push
or
mov
out
inc
mov
mov
sbb
lahf
adc
mov
sbb
xchg
test
xchg
and
leave
add
cmp
jne
xor
stc
sub
ficompl
fimull
jle
bound
push
cmp
out
inc
pop
mov
cs
mov
xchg
insl
cmpb
push
insb
jp
xor
mov
cmp
cmp
ljmp
ficoms
call
sahf
lcall
es
pmaddwd
loopne
and
xchg
stos
in
into
mov
popf
je
jno
xchg
xor
fildll
out
xchg
insl
push
cmp
lods
sub
xor
push
js
shl
add
or
push
lock
jp
mov
rcrl
sub
sti
pop
xor
call
sub
fldcw
cmp
scas
int3
in
dec
or
cmp
orb
into
out
rorb
ja
inc
pop
push
shlb
in
sbb
and
popa
xchg
mov
xchg
sub
popa
ss
jge
imul
pop
cmp
xor
inc
movsl
inc
and
imul
cmpsb
insb
popf
push
psllq
or
or
add
inc
iret
adc
daa
mov
shlb
push
sahf
inc
cmc
imul
neg
sbbb
in
cli
ljmp
outsb
sub
adc
mov
sar
xorl
add
jge
subl
cld
ficomps
dec
xchg
test
push
iret
stc
popa
add
and
pop
shrl
stos
mov
sbb
cmp
xor
sahf
fcmovb
pop
icebp
bound
cmp
jno
ficomps
xor
and
cli
push
push
cmpsb
add
ret
ja
adc
sbb
xlat
sti
std
test
std
sub
rolb
data16
lods
movsb
ret
rolb
xor
mov
mov
test
mov
sbb
clc
mov
nop
mov
andb
jge
mov
add
xchg
mov
xchg
sbb
pusha
movsl
inc
pop
stc
mov
xchg
out
push
jecxz
sbb
js
mov
ss
arpl
fdivrl
cmp
and
mov
jle
roll
les
cld
mov
mov
sbb
nop
push
cld
lods
sub
into
jb
or
test
loope
pusha
mov
xlat
pop
mov
cltd
mov
jmp
inc
loope
mov
lcall
call
or
push
popf
dec
pop
jo
lods
mov
adc
push
loope
mov
fnstcw
out
adc
sbb
push
add
jnp
pop
inc
movsb
sbb
jae
stc
inc
inc
sbb
cmp
pop
addr16
fwait
test
popf
xchg
mov
hlt
push
lahf
bound
cltd
push
add
mov
pop
mov
mov
clc
les
cmp
sub
push
fildl
sub
mov
and
cmpsl
je
inc
inc
push
sbbl
outsb
xchg
in
hlt
aad
xchg
outsl
mov
and
and
enter
cmp
dec
push
dec
mov
testl
in
jno
popa
mov
fistps
push
mov
mov
jae
push
jae
sub
sar
icebp
mov
outsl
mov
ficoml
inc
jle
add
xchg
scas
sub
rclb
in
xchg
push
jo
fidivl
cs
pusha
and
or
xor
sbb
mov
mov
jg
jno
clc
and
jmp
roll
or
add
fidivrl
cmp
inc
clc
aad
lret
test
lock
lods
cmp
or
xor
jae
sub
movsb
insl
sbb
lcall
lods
ss
movsl
addr16
mov
and
or
aas
jbe
andb
jle
scas
mov
into
imul
stos
andb
out
inc
mov
lret
rcl
mov
sarl
int3
jb
cmp
fistps
pop
xor
jmp
jae
std
add
jae
and
int
in
arpl
push
mov
cli
xchg
int
stos
lods
lods
mov
push
sbb
jb
push
lods
sub
loopne
mov
xchg
loop
mov
imul
xor
nop
scas
xor
xchg
es
push
outsl
lds
arpl
cmp
loopne
cs
ret
sbb
and
aad
pushf
daa
sti
addr16
sbb
sbb
aas
jg
movsl
mov
inc
xchg
and
sahf
int3
mov
dec
mov
adc
xchg
push
sbb
in
les
pop
dec
aaa
fimull
cmp
sub
xor
pop
enter
lods
sbb
mov
insb
xor
out
jge
xor
push
fists
push
gs
xor
pop
add
jne
inc
jmp
lods
imul
xchg
mov
jl
shlb
mov
dec
jbe
adcb
inc
jne
sub
mov
orl
ret
fisttps
xchg
adc
xchg
fisubs
cltd
aaa
xchg
xchg
out
jecxz
in
jle
mov
dec
lods
sub
mov
sbb
mov
movsl
inc
push
inc
push
cltd
cmp
add
rol
xchg
xchg
xor
imul
mov
aam
xor
cmpsl
and
mov
sbb
aam
sahf
js
bound
sar
in
xor
inc
inc
aam
out
aaa
mov
arpl
ret
push
xor
ficomps
cmp
adc
stos
or
mov
dec
adc
xchg
je
ficoms
das
gs
cmc
div
jmp
shrl
mov
mov
cmp
jbe
stc
lods
push
xor
mov
adc
sbb
pand
push
push
or
mov
jg
popf
pop
push
xor
or
mov
and
mov
lock
and
mov
insb
pop
push
jmp
inc
mov
mov
test
cmpsb
and
fdivs
fdivl
das
lea
fdivl
cmp
sbb
mov
lret
scas
fistps
mov
loop
stos
or
ds
mov
hlt
mov
or
inc
push
dec
xor
lret
fistl
shll
pop
out
std
jmp
jmp
ds
lods
xor
xchg
lods
and
aaa
jecxz
jne
sti
and
jo
lods
mov
subb
iret
aad
in
and
cs
hlt
inc
lea
sbb
inc
xor
outsb
xor
std
push
push
xchg
inc
mov
sbb
das
test
inc
adc
mov
fmuls
push
pop
lock
adc
aaa
popa
add
mov
or
and
fildll
addl
ficompl
xchg
cmpsb
mov
push
clc
stos
cmp
loopne
das
adc
ffree
push
or
sub
aam
jg
adc
adc
mov
in
xchg
push
call
jbe
stos
lcall
jmp
repz
ficoml
out
stos
enter
jnp
mov
movsb
fadds
testb
fiadds
das
das
or
gs
and
mov
fwait
add
xchg
cltd
fsubrl
jmp
rcrl
orb
sub
test
sbb
es
punpcklwd
xor
out
jns
jno
jns
lcall
jle
pop
movsb
daa
repz
push
stc
sub
out
dec
push
push
fdivr
push
xor
or
mov
test
imul
in
mov
mov
mov
push
imul
add
and
loopne
cmp
pushf
sbb
xchg
inc
jo
push
orl
mov
push
pop
dec
mov
inc
push
xor
out
movsl
pop
push
mov
dec
movsb
sbb
adc
mov
loop
nop
and
aas
sbb
popf
fwait
outsb
aas
and
iret
jecxz
in
push
adc
add
lahf
add
dec
fstpl
test
xor
push
push
enter
mov
icebp
ljmp
jb
xchg
pop
add
sbb
jae
out
imul
mov
inc
test
push
cmp
jge
shll
test
ja
mov
je
ds
sarl
mov
push
add
xchg
hlt
or
add
mov
dec
lods
jle
out
jb
daa
ss
sbb
es
mov
or
inc
test
cmp
cmc
ja
add
mov
rcrl
pop
inc
and
push
lcall
pop
shl
mov
mov
mov
adc
pop
xor
lcall
jae
xor
xlat
pop
sbb
jns
jge
sub
xlat
jnp
or
inc
dec
ss
aam
in
or
mov
lods
inc
jecxz
sub
aaa
int3
jnp
sub
jmp
xchg
sti
das
fcoml
pop
mov
or
xchg
roll
adc
mov
fidivl
inc
sub
inc
xor
mov
lmsw
push
push
js
test
push
sbb
lods
mov
or
cwtl
loop
or
jmp
xchg
or
nop
xor
sub
pop
cmc
add
movsl
scas
pop
adc
xchg
add
mov
mov
mov
sub
iret
loopne
add
xor
sbb
push
andl
mov
pusha
adc
xchg
cltd
sub
jbe
aaa
imul
das
in
lret
movsb
cmp
repz
push
cwtl
fnsave
mov
mov
lods
push
bt
in
mov
les
jne
ret
sbb
xor
pop
into
add
sub
pop
or
int3
xchg
push
les
ret
or
or
sub
inc
mov
addr16
sub
lret
push
repnz
test
lret
add
mov
cmp
xchg
scas
add
bound
pop
mov
lret
dec
int3
push
dec
ja
sub
loop
aas
and
dec
pop
mov
ljmp
jge
inc
mov
loop
xchg
push
add
pop
sbb
jo
es
jge
ja
outsb
lods
fs
bound
xchg
loop
jmp
test
xchg
mov
call
xor
lcall
adc
out
popf
sbb
fdivl
ss
mov
mov
add
add
cltd
sahf
push
xchg
pop
stos
dec
push
mov
daa
mov
mov
test
decb
aad
div
pop
inc
es
out
fnstcw
addr16
mov
mov
or
sbb
pushf
lahf
pop
adc
movsl
repnz
mov
test
mov
loop
lret
xor
test
out
pop
dec
inc
jmp
push
insb
push
jl
push
jmp
rorb
out
fwait
pop
xor
cmp
mov
ss
lret
and
repz
inc
pop
dec
sarb
out
loop
scas
cmp
adc
sbb
fwait
rolb
insb
cmpsl
repz
stos
mov
iret
mov
outsb
sub
mov
sbb
test
or
arpl
jbe
or
es
lahf
movsl
inc
idivl
iret
ret
sahf
jae
push
add
imul
aad
cmc
cltd
cmp
icebp
inc
cmp
xor
out
js
scas
je
add
ja
sahf
bound
icebp
dec
aad
jle
or
pop
mov
test
pushf
pop
scas
cmpsl
dec
xchg
orb
outsl
pop
cmp
mov
lahf
pusha
xor
inc
rcr
aas
cmp
and
pop
cli
cld
cmc
in
in
mov
inc
dec
shr
fucomip
jle
pop
adc
movsb
dec
cmp
sahf
jns
aaa
jne
cwtl
enter
add
mov
cmpsl
call
ret
sub
aam
lock
daa
push
in
xor
xlat
jns
enter
pop
or
fiadds
orl
lcall
add
jl
popf
push
sub
shlb
loopne
icebp
jecxz
cmp
iret
adc
sahf
gs
jb
rorb
pop
subl
mov
dec
xchg
ja
push
adcb
jae
int3
xlat
lahf
push
pop
mov
pop
arpl
inc
xchg
xor
adc
xchg
add
mov
mov
sbb
mov
sbb
enter
mov
and
push
adc
shll
push
in
xor
sbb
repnz
mov
pop
jns
std
and
xor
inc
pop
pop
xor
pop
mov
sub
jnp
push
ljmp
in
jo
and
add
sub
dec
neg
cmpsb
sbb
pop
sub
je
sbb
scas
add
shll
out
in
enter
and
cld
stc
dec
cmp
xor
mov
xchg
inc
mov
stos
jns
out
cmp
add
stc
aas
and
outsb
fwait
cld
sahf
push
push
jo
mov
pop
push
loope
mov
das
push
inc
push
pushf
cwtl
sbb
mov
jmp
jge
sbb
cltd
pusha
sub
sbb
pop
jmp
sbb
inc
add
jnp
int
add
jl
nop
or
stos
popa
inc
jle
or
lds
clc
fs
sarl
decb
popf
adc
xchg
jecxz
push
fucomip
or
mov
inc
inc
adc
std
mov
xor
and
pop
push
outsb
lahf
or
dec
andb
add
pop
lea
aas
xchg
mov
mov
jge
ja
inc
cli
pop
cwtl
fucom
or
adc
xchg
pop
xchg
mov
dec
mov
pop
movsl
jnp
fcoms
je
xchg
popa
push
dec
jns
mov
mov
adc
jne
roll
mov
xor
mov
xor
mov
stos
dec
push
mov
add
ficompl
jmp
mov
and
jne
in
ljmp
inc
inc
push
jg
rclb
mov
adc
dec
sarl
xchg
stos
loopne
negb
mov
and
mov
sahf
bnd
or
push
aas
jo
mov
cltd
adc
inc
call
dec
dec
mov
fisubrs
xor
movsb
pop
pop
sub
mov
mov
jmp
dec
jg
xlat
xor
sbb
mov
adc
jb
test
xor
iret
cli
scas
pop
sbb
into
subl
inc
fnstcw
and
adc
sub
or
fsubr
push
pop
xchg
and
std
lods
or
xor
pop
mov
xchg
jae
inc
lret
inc
into
iret
jmp
inc
iret
push
js
mov
clc
ljmp
int3
arpl
xchg
andb
fsubrs
lods
scas
std
inc
outsl
ss
mov
outsl
stos
sub
mov
jnp
je
int
mov
inc
cs
mov
xchg
es
repz
pop
dec
mov
aad
shrb
add
leave
insb
adc
mov
imul
je
jae
push
lods
push
fs
mov
pop
mov
imul
repnz
fwait
pop
inc
in
nop
cs
cmp
fmul
adc
add
and
pop
cmp
sub
lret
push
ljmp
or
bound
call
jae
and
out
mov
bound
cmpsl
adc
mov
clc
pop
push
cmpsb
push
cmp
inc
cs
and
inc
dec
add
pop
orl
add
or
mov
push
jge
sbbb
jge
rcrl
ja
ss
insl
fisubl
bound
push
sbb
fidivl
stc
mov
jbe
ljmp
scas
inc
pop
xchg
das
outsl
fsubr
xchg
push
jbe
dec
ret
push
ret
inc
sbb
hlt
push
push
mov
pop
ffreep
sbb
fildl
add
mov
mov
sbb
push
mov
mov
lods
lret
inc
and
lret
aaa
mov
stos
push
jl
and
and
cli
movsb
shll
pop
sub
and
ret
sub
mov
fstps
sti
jbe
push
outsl
lret
jp
movsb
push
sahf
sub
in
data16
cmp
mov
lods
test
xor
mov
mov
in
dec
imul
dec
cmp
mov
loopne
adc
test
dec
sbb
xchg
fs
lret
nop
lret
mov
out
test
fwait
jnp
inc
sysret
xchg
jle
jmp
int3
leave
push
pop
addr16
fcompl
mov
sub
aad
or
xchg
bound
cmpsb
and
pop
or
in
sub
push
xchg
leave
pop
loop
lods
pop
hlt
js
clc
xor
cmp
popf
lods
popf
in
xor
sub
add
cmp
add
cmpsb
scas
pop
cmc
in
loope
inc
jne
test
lock
xchg
mov
sar
test
xor
lahf
dec
filds
cmp
xchg
shlb
or
arpl
dec
loopne
dec
pop
shl
nop
push
xchg
test
adc
sub
xchg
cmpsb
inc
cld
movsl
inc
push
pop
jmp
and
ja
loop
test
loope
push
jne
xor
xchg
es
pushf
inc
mov
fildll
dec
mov
push
or
aas
faddl
xor
push
cmp
inc
lahf
lds
push
ret
cmpsl
adc
ds
in
mov
cltd
test
sbb
in
pop
pop
push
lahf
mov
scas
je
inc
lcall
filds
mov
push
int3
test
lock
and
mov
mov
lods
repnz
sub
mov
sub
test
rcrb
stc
out
outsl
mov
int3
pop
jb
push
cmpsb
lcall
adc
daa
in
cmpsb
jo
outsl
mov
inc
cmp
mov
stc
cltd
add
cmp
loope
idivb
data16
or
and
mov
test
adc
sub
mov
call
sub
mov
pop
js
sub
call
lea
xor
dec
mov
bound
inc
xchg
cmp
push
pop
pop
pop
fdivp
cmp
dec
sar
lock
pushf
in
loopne
movsbl
ret
mov
pop
push
movsl
xchg
xchg
xchg
jl
popl
aad
adc
pushf
cld
jge
sub
subl
fucom
notb
into
mov
xor
lock
test
sahf
sbb
in
mov
lods
jne
pushf
lods
ljmp
push
cmp
mov
vpcomub
cmp
sbb
std
out
mov
ds
loop
mov
dec
insl
shlb
int
xor
xor
mov
es
test
dec
or
lea
dec
arpl
shll
push
mov
adc
mov
nop
pop
in
push
das
inc
jo
add
pop
push
std
nop
test
lods
int
xchg
pusha
mov
push
cmp
pusha
cmpsb
fisttpl
sub
and
xchg
stc
cmpsb
loopne
pop
push
pop
sarl
jecxz
repz
jmp
pop
sub
insl
ret
lcall
insl
lods
lret
leave
lods
cmp
inc
jge
ljmp
or
fidivrs
push
jnp
or
repnz
pop
and
adc
aad
dec
inc
cmp
es
ret
neg
es
mov
sbb
push
pop
xor
dec
inc
mov
inc
lods
int
dec
mov
jae
cli
rol
test
es
lods
cltd
lahf
ja
jb
mov
push
movsb
leave
jnp
out
cli
jno
sub
pop
fwait
inc
xchg
sub
and
mov
mov
dec
mov
or
scas
cmp
and
popf
sbb
fistps
inc
mov
fsubl
or
scas
jp
add
push
mov
jl
mov
pop
loopne
push
mov
test
out
sarb
add
sarb
aad
inc
adc
inc
push
sbb
jnp
sbb
mov
cmp
enter
mov
sbb
shl
repnz
lret
push
daa
mov
jge
add
lcall
cmpl
and
pand
push
sarb
xor
lock
lds
mov
push
xchg
mov
adc
jns
jg
push
fidivrs
inc
add
insb
mov
pop
xor
xor
add
in
insl
xchg
sub
in
cmpb
mov
mov
fstps
xorl
incl
jne
inc
cmc
loopne
xchg
enter
pushf
mov
stc
popf
gs
gs
imul
out
icebp
jl
sti
int
ja
ljmp
adc
add
mov
dec
and
push
xor
insl
sub
stos
pop
sbb
fldt
lahf
xchg
test
dec
push
ficoml
or
insl
xchg
jl
mov
cmp
push
fcompl
or
jle
mov
xchg
xchg
std
std
jge
mov
jno
data16
fcomp
or
adc
je
inc
xor
pushf
jbe
jo
addr16
repnz
call
repz
repz
and
cld
sahf
jo
mov
fs
add
or
in
pushf
movntps
jb
sti
xchg
popa
fcoms
adc
pop
pcmpgtd
orl
push
flds
xor
inc
sbb
arpl
sbb
cmp
in
mov
mov
sub
and
out
dec
std
add
cmp
outsl
jg
mov
ret
fmull
fldt
push
nop
xchg
push
dec
and
xchg
and
add
lahf
mov
imul
adc
or
insb
jae
xor
or
mov
pop
push
mov
dec
or
je
es
sbb
mov
sub
stos
push
sbb
pop
jge
ljmp
push
hlt
aas
adc
cltd
into
loopne
imul
insb
xchg
icebp
mov
mov
xchg
mov
inc
es
pop
xchg
enter
or
xor
ja
xchg
mov
cmp
repz
dec
sub
add
andb
xor
add
push
dec
fldcw
repnz
xor
lret
cmp
jg
and
xchg
cld
gs
jmp
lock
mov
shl
sbbb
insb
pop
add
xorb
dec
repz
adc
filds
loopne
es
cmpsl
fidivrs
adc
sub
outsl
cvtdq2ps
adc
imul
data16
push
fnstcw
scas
cmp
ja
leave
sbb
mov
es
adc
and
jae
loop
mov
aad
lods
dec
add
jnp
leave
jae
jg
sub
enter
addl
aas
and
push
or
push
adc
jbe
aam
movsl
cmp
adc
jne
js
lock
sbb
shl
pop
mov
lret
in
mov
dec
or
push
lods
pop
jbe
inc
xchg
fldl
mov
push
std
lock
or
rolb
inc
xor
fisubrs
pop
mov
and
in
aam
dec
shl
push
out
jecxz
int3
bound
clc
test
outsb
divb
add
jnp,pt
pushf
daa
hlt
ficoml
insb
mov
addr16
andb
and
inc
cld
adc
mov
test
mov
shlb
push
and
push
fildll
or
inc
dec
and
sbb
push
or
cmp
sarl
lea
jo
clc
cltd
out
push
push
popl
out
or
sarl
add
dec
push
mov
xor
cmpsl
cmp
push
mov
add
and
aam
lock
mov
xlat
shll
pop
mov
inc
nop
xor
and
add
stos
dec
jns
jne
add
adc
je
jo
add
les
cli
hlt
leave
mov
cmp
jbe
outsl
jne
jae
fbstp
cs
enter
xchg
test
insl
pop
or
cmp
jg
push
sub
jae
shll
xchg
jl
dec
pop
psubusw
enter
mov
ret
mov
xchg
xchg
int
ficompl
cltd
mov
jae
xor
lods
mov
ja
cwtl
pop
aam
mov
mov
adcb
xchg
andb
and
push
push
es
std
in
arpl
ds
mov
inc
lds
push
daa
jg
test
mov
popa
addl
movsb
xchg
jae
insb
hlt
pop
addb
cmp
mov
lods
push
jo
xor
mov
call
repnz
mov
push
pop
sub
pop
addl
popf
scas
jg
xchg
popf
cld
inc
es
sahf
push
cwtl
mov
cmp
mov
dec
dec
jns
xor
or
and
mov
cmpsb
ret
cld
enter
fcom
cmp
add
movsl
lcall
add
add
sti
repnz
pop
test
ret
data16
daa
xor
call
inc
enter
sub
dec
daa
inc
clc
subl
cs
adc
pop
test
inc
push
or
loope
outsl
popa
pushf
xor
mov
popf
lea
sbb
sbb
xlat
mov
imul
fisttps
xchg
lock
push
pop
in
xchg
inc
shlb
inc
add
cmc
jl
cli
cmp
jp
call
out
lret
sbb
jno
mov
and
in
pop
mov
push
mov
ja
addl
scas
cmc
push
sub
imul
mov
imul
dec
loope
addr16
and
nop
mov
ds
icebp
fsubrs
and
in
push
sub
das
in
mov
push
into
in
jp
push
loopne
mov
hlt
rcll
xor
in
or
in
xor
sbb
sub
shrb
out
inc
loope
mulb
jne
es
inc
adc
loopne
push
cltd
jg
test
push
or
and
in
sbbl
jl,pt
mov
jle
xor
out
cwtl
outsb
scas
addl
loope
incl
xor
mov
adc
xchg
ja
mov
cmp
es
push
aad
sub
add
arpl
js
call
sahf
out
call
jmp
cld
test
scas
sarl
arpl
sub
xchg
sub
push
adc
fistps
scas
decb
insb
nopl
mov
jb
pushf
add
data16
dec
push
js
out
push
mov
out
add
inc
scas
rorl
push
fcoml
callw
ja
xor
lret
or
xchg
insb
loop
xor
pushf
jae
wbinvd
xor
int3
pop
notl
pop
lahf
aas
jns
lock
adc
sarl
dec
xchg
les
repnz
adc
fdivl
nop
out
pop
jo
jnp
es
pop
mov
jne
jmp
sub
dec
mov
call
sub
jg
jmp
popa
push
dec
pushf
repz
fnstsw
mov
in
xchg
mov
mov
fs
xor
hlt
lods
loop
mov
lcall
sub
lock
adc
push
xchg
scas
lock
fs
add
pop
or
jns
stc
test
je
pop
hlt
pusha
ret
mov
push
out
in
icebp
les
jns
jg,pt
icebp
xchg
dec
inc
inc
jp
pop
mov
adc
mov
push
sub
test
ret
lret
rorb
cmp
dec
add
xchg
out
js
aad
mov
fnstsw
xchg
jnp
add
dec
cmp
cmp
or
xchg
mov
pushf
push
cmp
movsl
mov
loop
xor
fs
jl
pop
movsl
mov
and
arpl
jecxz
sti
mov
sub
dec
pushf
and
sbb
gs
cmp
cmp
pop
mov
stos
inc
add
mov
dec
rcl
test
notl
lcall
aad
fdivp
xchg
test
in
or
xchg
sti
add
push
or
in
xchg
ret
sbbb
out
lret
push
sbb
mov
mov
add
sbb
or
fimuls
jmp
flds
mov
pop
lret
inc
popf
stos
lods
xchg
sub
call
imul
out
push
sub
fyl2x
nop
jb
jge
jmp
or
xchg
subb
mov
xor
inc
fs
fdivrl
lcall
mov
jbe
or
enter
mov
cltd
xor
lcall
out
add
shlb
cwtl
out
sub
push
test
pop
adc
fwait
push
mov
xor
pop
test
adc
sbb
das
cmc
std
icebp
mov
stos
pop
fsubrs
xlat
xor
fidivrl
shlb
sbb
je
sub
cmpl
xorb
daa
mov
xor
push
mov
pop
dec
popa
test
out
cmpxchg
sub
sbb
addl
jbe
insl
rol
jae
xchg
mov
in
fstpl
push
andl
jle
fwait
neg
arpl
loopne
or
pop
mov
lret
lahf
cmp
mov
and
mov
and
mov
push
addb
jmp
inc
and
test
dec
jnp
ljmp
cmp
push
add
or
inc
dec
add
loope
testb
push
jecxz
loope
adc
cmpsb
call
xchg
xlat
or
sub
jle
sbb
xchg
cmp
or
pop
add
das
aad
pop
mov
push
cltd
adc
pop
adc
sbb
icebp
aam
and
cmp
pop
sub
sbb
pop
in
jno
in
aam
je
push
mov
repz
mov
imul
test
add
call
adc
mov
leave
insl
out
ss
cmp
jp
push
lahf
insb
mov
or
in
inc
sar
sbb
shll
enter
pop
sub
ret
push
ret
fs
xchg
mov
lea
rcll
mov
js
mov
test
push
xor
xchg
fcomi
enter
push
call
xor
jo
daa
ftst
mov
inc
jae
xor
daa
jle
or
roll
int
mov
inc
cmp
stos
push
inc
xchg
in
mov
fidivrl
dec
sub
imul
inc
rcrb
icebp
mov
push
loop
lea
stos
imul
ss
outsb
pop
in
sti
adc
imul
je
cmpl
inc
pop
nop
pusha
aam
pusha
xor
dec
jp
cmp
dec
adc
movsb
inc
int3
jnp
testl
cmp
xor
pushf
das
inc
mov
mov
int
jae
push
xchg
pop
push
clc
mov
sti
roll
int3
lahf
ss
lret
mov
imul
sbb
cwtl
inc
scas
insb
xchg
xchg
shll
push
insb
push
test
cmp
adc
icebp
in
sub
inc
pop
lods
sub
loopne
hlt
pop
lods
add
insb
pop
and
sti
icebp
scas
subb
add
xor
mov
sub
dec
iret
movsl
out
jbe
xchg
fcomps
mov
push
mov
and
xchg
mov
jmp
jo
sub
clc
ja
and
fwait
mov
aam
lret
cltd
mov
pop
ud1
int3
test
and
inc
dec
shr
lea
jne
aad
testb
fldt
lret
enter
mov
sbb
test
test
faddp
xchg
push
sub
ja
adc
mov
inc
jl
sub
or
add
call
scas
sbb
mov
jg
cmp
cs
jl
add
xor
sahf
push
dec
out
pop
lds
or
rcrl
cmc
add
inc
aaa
jg
add
mov
jne
movsl
loope
and
adc
sub
push
mov
pop
adc
mov
inc
rcll
aaa
sbb
cld
sub
shrl
fidivl
xchg
xor
fnsave
pop
int3
jns
cmp
hlt
push
loope
jmp
xor
mov
add
inc
out
ficoms
push
inc
sbb
mov
sar
in
test
add
icebp
rclb
jge
fdivl
mov
or
adc
leave
and
cmp
or
stc
mov
aas
fnstcw
inc
ljmp
cmp
mov
adc
jecxz
pop
sbb
mov
mov
xrelease
jecxz
cmp
inc
mov
imulb
mov
scas
rcl
ret
repz
adc
rcll
test
mov
adc
add
mov
test
sbb
mov
mov
adc
lods
int3
pop
rclb
stos
arpl
mov
leave
jnp
dec
mov
lret
insb
rol
mov
mov
fnstsw
cmp
clc
mov
xchg
je
std
ljmpw
aaa
leave
xor
xor
ss
inc
loopne
jmp
cltd
dec
loop
add
jle
push
jno
arpl
or
lcall
scas
jmp
jecxz
sub
cmp
push
les
ret
aas
cmp
mov
xorl
aam
ds
jge
cmc
rcrl
and
scas
cmp
loop
nop
ret
sub
and
cmp
imul
push
mov
call
sub
loop
cmp
notb
adc
and
popl
stc
rcrb
ror
dec
cs
int
movsl
pop
lcall
sub
and
adc
sub
lret
sub
sti
fdivrp
test
fwait
out
in
andb
pusha
in
jns
js
cmpsb
xchg
or
je
xchg
cmp
scas
push
add
push
and
inc
nop
mov
ficompl
dec
inc
pop
flds
mov
inc
sub
repz
jae
pusha
push
dec
cwtl
das
mov
testl
xchg
scas
push
push
push
out
mov
aad
jo
jmp
pop
and
imul
lods
stc
mov
push
mov
out
jne
push
js
rolb
pop
pop
out
ljmp
scas
mov
inc
sbb
test
das
mov
dec
mov
mov
pushf
es
and
sub
ljmp
mov
mov
push
fsubrl
test
sbb
mov
ljmp
lods
sbb
pop
imul
in
mov
dec
fwait
jmp
xchg
roll
test
dec
mov
mov
loop
andb
dec
dec
inc
mov
mov
or
inc
lock
cmpsb
sbb
adc
or
sbb
inc
sbb
xor
jp
insb
pop
mov
sbb
cld
test
outsb
sbbl
je
mov
mov
repnz
sbb
add
repnz
and
imul
fdiv
aas
sbbb
xchg
dec
push
out
repnz
pushf
repz
mov
jno
lock
sub
filds
lret
dec
fstpl
test
sti
scas
subl
push
adc
dec
jge
cmp
iret
jo
mov
inc
adc
mov
scas
test
xchg
xor
and
adc
rcrl
lock
imul
ret
fwait
add
xorb
nop
cmp
stos
roll
inc
movsl
out
mov
mov
sahf
inc
addl
sahf
push
clc
cmp
and
xor
in
aas
push
pop
jge
xor
gs
push
cli
cmp
lds
cmp
xor
push
mov
mov
bound
add
sub
pop
out
mov
gs
xor
jle
outsl
xorb
stc
sbb
enter
cmp
movsb
adc
outsl
push
cmpsb
mov
neg
fistl
jbe
mov
aad
clc
cld
jbe
inc
mov
mov
scas
push
sarb
fwait
and
js
inc
inc
pop
pop
xchg
and
lea
ljmp
mov
movsb
xchg
sub
add
icebp
dec
push
sarb
cs
shrl
lods
sbb
inc
outsl
sahf
repnz
inc
adc
ficomps
mov
mov
or
add
lods
jle
out
or
cs
inc
rcrb
cwtl
mov
and
mov
push
and
les
pop
sbb
and
sbb
mov
pop
insb
pop
adc
leave
ljmp
cmovno
test
je
test
xchg
adc
ret
outsb
mov
push
inc
mov
cld
repz
xchg
inc
adc
pop
les
dec
adc
cmpsb
rolb
xor
push
xor
movsl
xorl
mov
out
inc
or
in
bound
push
sub
sbb
mov
mov
shlb
pushf
mov
fisttpl
adc
clc
adc
xchg
fs
jno
mov
or
xchg
jnp
jl
xor
sub
add
mov
xchg
inc
mov
divb
cld
fs
sbbl
cmp
or
in
roll
jbe
fdiv
lcall
std
call
inc
in
js
jnp
in
mov
in
push
mov
push
xchg
cli
add
roll
or
scas
add
cmp
pop
push
ds
sub
mov
push
cltd
add
iret
adc
adc
dec
mov
xchg
outsb
and
enter
rclb
test
mov
fildll
push
sbb
subb
inc
daa
sbb
push
lret
popf
or
iret
jbe
pop
mov
xor
or
ljmp
sub
xlat
inc
push
cld
sbb
inc
push
psrlq
insl
sbb
repnz
sub
sti
pop
fnstenv
push
mov
repnz
cmp
fldenv
call
xchg
popf
rorb
sub
push
push
mov
pop
xor
or
shll
push
cld
xor
fadds
mov
xchg
dec
jo
mov
push
inc
sub
dec
stos
lea
jle
outsb
push
lcall
sbb
fbld
mov
in
inc
xor
xchg
inc
push
adc
push
pop
push
movsb
popa
fdivs
fs
stos
daa
iret
jecxz
addr16
loop
inc
fisubrl
mov
sub
mov
stos
xchg
push
and
xor
xchg
bound
jp
mov
lock
jg
inc
sbb
jmp
mov
mov
adc
js
add
mov
fwait
in
and
filds
aaa
and
outsl
xchg
mov
fimull
lods
pop
stc
gs
mov
xor
outsb
add
fsubrs
out
jmp
and
fdivr
mov
outsb
inc
pop
jo
out
add
mov
dec
push
pusha
or
dec
mov
out
insb
xor
fsubl
leave
shll
jbe
xor
imul
lds
dec
jae
mov
dec
mov
sarb
cmp
les
mov
or
stos
mov
xchg
int
xchg
lock
ffreep
xchg
mov
push
mov
push
test
inc
sbb
adc
push
cmp
ja
cmp
stc
xchg
pop
adc
loop
ret
inc
cmp
clc
cmpsb
sahf
clc
aaa
outsb
and
out
lret
mov
jne
je
lds
std
mov
cmp
aaa
xor
or
ds
xor
fildl
fcmovbe
mov
je
jge
addr16
mov
imul
push
lahf
mov
mov
cs
ja
cmp
cmp
add
dec
adc
inc
arpl
xchg
inc
xor
repnz
xlat
fwait
ret
jns
pop
pop
mov
jo
sub
ss
pop
bound
mov
sti
call
outsl
jecxz
mov
xor
jge
dec
sti
bound
mov
and
sub
in
mov
push
adc
sub
sbb
push
or
fwait
mov
adc
outsl
mov
jle
inc
loopne
inc
jp
and
mov
xchg
mov
cmp
dec
dec
movd
adc
pop
pop
jno
xchg
pop
sbb
clc
pop
xor
adc
inc
dec
dec
fsubp
shrl
cwtl
mov
in
inc
pop
mov
push
inc
mov
cwtl
adc
jae
add
mov
call
paddb
std
pop
leave
ficoml
lds
scas
jb
inc
popf
je
mov
repnz
cltd
or
xchg
push
xor
mov
dec
orb
imul
lods
jnp
mov
ficoml
pushf
int3
or
test
pop
add
or
testb
dec
inc
movsl
adc
sub
jns
sarl
mov
mov
cld
adc
push
addr16
cwtl
dec
xor
mov
leave
or
int
inc
divl
cld
cs
int
loope
shrl
cmp
cmc
loope
gs
push
mov
sub
nop
ret
sub
xor
repz
mov
pop
mov
iret
mov
cmp
sbbb
nop
stos
movsb
mov
pop
sub
ret
mov
jle
mov
inc
imul
stos
fisttpl
cs
jl
xchg
fwait
pop
push
push
mov
dec
mov
fstps
dec
xchg
out
ret
fnstsw
aaa
out
push
iret
push
nop
mov
jl
push
push
outsl
loope
sahf
jecxz
push
adc
int
jne
movsb
ret
lret
loopne
aad
mov
jo
in
push
xlat
xchg
push
faddl
mov
pop
lret
idivb
subb
jmp
jg
shrl
mov
adc
int3
lahf
push
inc
cmp
pushf
pushl
mov
test
imul
enter
sarb
dec
inc
fs
cli
or
push
xchg
sbb
ret
call
rcr
mov
add
inc
mov
je
ss
bound
enter
cld
stc
cli
inc
xchg
mov
xchg
loopne
cs
lahf
mov
sub
outsl
stos
repz
sarl
jmp
stos
sahf
cmp
xor
into
jnp
xor
dec
test
mov
test
rcrb
dec
in
push
int3
fldenv
pop
imul
pop
pop
inc
mov
cmc
lret
xchg
cmc
jns
mov
push
stc
cli
inc
xorb
push
cwtl
stc
imul
int
jae
mov
add
jle
ss
test
test
mov
fiaddl
iret
nop
aam
adc
or
fdivrp
mov
xor
sbb
clc
popf
or
mov
shlb
in
cmp
or
sti
inc
xor
loop
mov
dec
cmp
push
cmp
mov
add
bsf
or
stc
push
or
fdiv
push
lds
dec
cmp
rcrl
lret
idivl
pop
ds
clc
add
inc
gs
xor
push
or
mov
mov
mov
adc
andb
inc
nop
mov
and
push
inc
xor
sub
out
mov
xchg
dec
mov
add
in
testb
jmp
loop
repnz
loopne
imul
test
mov
int
push
ret
and
dec
sbb
aas
out
fimull
and
arpl
jmp
jmp
data16
cmc
pop
xchg
leave
cmpsl
or
sahf
cmp
jmp
mov
sar
pop
rcl
push
movsb
push
pop
lock
jnp
cmpsb
lods
jno
into
mov
cmp
or
sbb
loop
mov
ficoms
mov
stos
and
test
xlat
scas
mov
mov
mov
fstps
ja
shl
popa
ret
bound
xor
adc
and
mov
out
gs
jnp
test
js
fbld
repz
dec
int3
mov
and
inc
or
jbe
ljmp
jns
pop
lock
xor
jb
sbb
and
imul
cmp
pop
mov
or
insb
mov
aaa
jb
pusha
xchg
cmp
mov
cmp
std
stc
cmp
sub
xchg
stos
leave
pushf
push
dec
je
mov
or
insb
and
fisubrl
addb
das
iret
mov
lahf
cmpb
inc
mov
sbb
jb
push
dec
into
mov
inc
cmp
fs
iret
scas
xor
push
fwait
sub
pop
mov
pop
pop
cltd
jmp
pushl
or
sub
pop
insb
cld
outsb
dec
pop
mov
cmpsb
test
pop
jne
sub
test
xchg
fistpl
mov
xchg
and
int
pop
mov
loopne
idivb
mov
adc
pop
inc
xorl
iret
push
adc
adc
adc
movsl
add
jbe
push
loop
in
or
dec
test
pusha
xchg
adc
jo
rolb
lcall
mov
and
push
mov
pop
ror
popf
test
dec
or
or
mov
fsts
cmp
arpl
sbb
sub
inc
imul
lea
and
pushl
cmp
cltd
in
insb
inc
aaa
fs
lret
add
mov
sbb
sbb
push
mov
orl
sbb
data16
outsl
push
stos
jnp
ljmp
sbb
xor
mov
push
mov
orl
and
push
mov
push
push
in
test
cmpsb
fisttps
scas
sbb
fcomps
enter
fsubs
pushf
addb
and
pop
and
fs
out
push
mov
stos
int
push
pop
mov
adc
inc
pop
push
mov
scas
inc
push
push
adc
mov
and
sub
stos
insb
cwtl
push
lds
cmp
sub
pushf
add
pop
mov
pop
push
lahf
testb
sbb
add
lahf
jle
repz
xacquire
mov
mov
ds
inc
pop
mov
cmpsl
pushl
xor
pop
js
xchg
dec
pushf
and
scas
sbb
into
sub
xor
pop
dec
mov
jge
ja
in
in
popf
xor
inc
insb
cmp
mov
jne
or
movl
loope
cmp
jne
jge
mov
push
xor
gs
mov
pop
ret
xor
insl
ja
push
leave
dec
sbb
inc
jns
cmp
push
push
subl
jne
rcrb
xor
push
nop
and
xchg
push
and
adc
popf
jge
cwtl
mov
pop
xchg
iret
sub
popf
jmp
jle
mov
sub
push
clc
fidivl
push
jl
sub
lret
or
inc
ds
in
mov
jo
pushf
cmpsb
in
mov
cs
cld
cltd
inc
je
fwait
pop
int3
je
clc
add
sbb
in
mov
cmpsl
sbb
and
mov
or
adc
aad
test
les
js
lcall
mov
test
mov
mov
push
and
cmpsl
stos
and
fwait
aad
mov
cli
xor
mov
mov
mov
cmp
dec
in
test
mov
inc
cwtl
testb
gs
and
push
fs
out
dec
lock
out
shl
xor
mov
cmp
inc
adc
out
pop
mov
sbb
les
test
movsl
cs
jbe
and
push
vpacksswb
jmp
cld
scas
jmp
push
cli
mov
inc
fidivrl
repz
push
sbb
jno
out
and
es
or
mov
inc
jle,pt
fisubrl
push
jp
das
jae
add
sbb
lcall
fs
sbb
sti
dec
out
add
adc
push
sub
xchg
faddp
sub
icebp
je
in
int3
or
fcompl
pop
jl
and
insl
mov
lods
out
dec
enter
testb
int3
js
xchg
xchg
sub
rorl
xchg
or
dec
add
loopne
orl
shl
mov
sbb
pop
push
mov
lret
nop
cltd
cmp
push
pop
cmp
mov
jmp
mov
es
xor
or
mull
pushf
and
bound
mov
in
sbb
push
pushf
jge,pt
test
push
dec
pusha
cmpl
fcmovne
lock
std
fdivl
clc
and
cmp
xor
ds
dec
xchg
jmp
cmp
mov
es
xlat
sbb
fldl
verr
mov
mov
fmull
mov
movsb
into
call
mov
lret
sbb
pop
mov
stos
xor
imul
xchg
ljmp
cwtl
sbb
inc
add
icebp
add
and
les
adc
push
jbe
dec
jge
and
cmp
mov
out
sub
adc
sti
test
ret
cltd
jbe
sbb
leave
ret
xor
in
test
mov
mov
popa
xchg
xchg
aaa
lret
xchg
cmp
mov
repnz
sahf
insl
test
cmc
inc
xor
pop
and
lahf
pop
pop
divl
ds
sbb
inc
or
inc
and
js
jno
neg
jae
and
test
mov
shl
mov
test
in
mov
iret
fisubl
imul
fsubrp
sub
cmp
js
xchg
cs
ss
lods
insl
into
loop
push
and
jge
cmc
xor
xor
adc
mov
out
dec
jmp
testb
add
andl
dec
lret
mov
mov
into
sub
iret
fistpl
aaa
pop
mov
rcr
mov
bound
push
divps
jo
cmp
xorb
lret
sub
adc
xor
pushf
es
xchg
push
mov
xor
mov
cmp
push
fistpll
mov
fldl
inc
jo
ret
shrb
js
xor
dec
cld
test
xchg
push
xor
inc
sbb
push
dec
pop
cmp
pop
loopne
lods
xor
xor
and
or
dec
cld
push
fildl
add
jle
stos
lea
sub
xorl
and
dec
fidivs
das
cli
fcmovnb
aam
lcall
int
add
les
sarb
fwait
jnp
loop
lods
add
xor
bound
jmp
mov
mov
xchg
cmp
pop
dec
out
or
jl
push
sti
dec
pop
pop
xor
and
lods
add
scas
icebp
inc
popf
test
and
jecxz
xor
andl
mov
and
jle
nop
call
loope
mov
fiadds
cmp
mov
adc
mov
lods
fistpl
ret
in
xchg
test
jnp
and
imul
pop
sbb
inc
addr16
pop
jns
fldcw
mov
aas
jge
ficomps
inc
and
cld
iret
ljmp
or
pop
scas
lret
dec
call
mov
fwait
sub
push
mov
inc
xor
pushf
dec
jb
pop
ret
cs
stos
jl
mov
sahf
cmpsl
add
mov
cmp
xorl
pop
cli
xchg
or
push
testl
dec
mov
mov
and
pop
and
fiadds
mov
xlat
push
adc
xchg
inc
dec
pop
aas
sbb
cmpsb
lea
push
fmul
cmp
jmp
insb
sbb
mov
push
stc
das
cmp
push
mov
fwait
mov
jbe
sbb
fwait
push
and
scas
mov
sarl
pop
nop
sti
fwait
inc
push
cli
lahf
or
outsl
mov
mov
bnd
int
mov
adc
xchg
jecxz
cmp
xor
push
mov
add
mov
xor
xor
lods
mov
ret
xchg
enter
pushf
add
stc
pop
push
dec
js
xor
outsb
dec
pushf
ja
insl
sbb
in
fs
xchg
fwait
and
mov
lea
xor
pop
mov
addr16
sub
nop
xchg
imul
cld
mov
xor
sub
lods
insl
aas
test
setae
cmpsb
negl
jmp
cmp
sbb
aam
pusha
lods
cmpsl
and
push
ret
add
xorb
enter
mov
enter
add
std
dec
mov
xchg
bound
ret
lahf
shll
orb
pop
mov
xchg
lahf
nop
xchg
fiadds
sbb
test
push
jne
mov
sbbl
push
push
cmp
sahf
jbe
and
mov
xchg
or
pop
add
inc
test
clc
insb
int
jmp
xor
arpl
test
lret
sbb
sahf
jp
movsb
and
insl
stos
jg
std
ret
adc
mov
adc
cmp
xchg
icebp
int3
outsb
roll
out
mov
scas
fcmovnbe
dec
jmp
mov
add
xchg
sbb
out
xchg
pusha
mov
mov
add
or
xor
jae
aam
mov
lods
fstpl
jnp
fisttpl
test
fbstp
mov
mov
adc
mov
lret
sbb
xchg
mov
and
or
imul
cmp
sbbb
mov
cmp
sub
movl
sbb
popf
mov
adc
pop
int3
les
imul
andb
xchg
add
mov
mov
jecxz
cmp
and
les
cmp
xor
mov
dec
int
or
inc
xchg
addb
repz
les
rcrb
or
ljmp
inc
fistps
es
dec
inc
clc
cmp
and
icebp
and
int3
in
popa
outsb
ret
test
sbb
sub
out
and
aas
flds
push
and
fsubrs
imul
cs
ret
faddp
add
push
or
inc
bound
cmp
arpl
or
and
in
bound
jl
sti
push
aaa
out
daa
ret
xchg
jns,pt
xlat
ret
out
pop
mov
fidivs
sub
gs
mov
xor
pop
xchg
lret
sbb
dec
jle
cwtl
aas
xlat
mov
pop
jg
repz
jnp
fcmovne
fisubrl
lock
lods
sub
sbb
insb
cmp
xchg
aam
js
shll
pop
loope
xchg
xchg
mov
adc
leave
mov
scas
bound
sarb
sbb
flds
lock
or
push
pop
push
mov
enter
xchg
jg
adc
test
stc
enter
sbb
inc
lods
add
sub
cmp
js
mov
pop
mov
jge
ss
sub
es
arpl
fisubrl
inc
dec
xchg
push
jbe
push
mov
xchg
inc
jo
ror
jmp
sti
repnz
xchg
jae
lret
pop
pop
arpl
jp
cmp
sti
pop
popf
jp
das
push
cmpsl
orl
push
jno
data16
clc
addr16
xchg
xlat
cmpsl
mov
inc
mulb
fisubl
ds
add
repnz
lahf
dec
scas
lret
dec
jmp
cmp
jge
xchg
movsl
push
jo
js
mov
sbbb
cmp
cltd
xchg
add
in
pop
inc
and
into
xor
sub
mov
push
mov
mov
pop
pop
sub
insb
add
cwtl
push
cmp
cmp
and
or
dec
jge
pop
xor
cmp
push
push
imul
popa
loopne
cmp
or
mov
lods
jmp
fidivs
jmp
jecxz
out
dec
xchg
push
or
xor
sub
mov
push
out
xchg
aas
fmull
pop
ja
xchg
int
mov
cli
out
mov
jecxz
or
ja
sbb
add
xchg
bswap
or
jbe
adc
out
jae
leave
mov
inc
das
cmc
add
pushf
sahf
inc
into
lahf
ficoms
popa
add
push
shr
push
insl
popw
xchg
mov
icebp
mov
mov
ficoml
std
loopne
inc
dec
test
das
insb
mov
repnz
jno
addr16
or
aaa
push
test
dec
gs
pop
and
or
and
and
or
jno
xor
shl
aas
pop
lods
push
lahf
fwait
xorl
not
xor
out
mov
mull
and
xor
in
les
dec
into
cmp
inc
xchg
or
pushf
out
ja
pop
or
hlt
jae
adc
rclb
repnz
loop
mov
jbe
test
cmp
xchg
popf
adc
jp
xor
pop
jl
rol
adc
sub
cmpsl
inc
fimull
pushf
cmpsb
int
hlt
cmp
cmpl
ret
jmp
adc
lea
sbb
mov
test
xchg
ljmp
cmp
mov
movsb
xchg
cltd
test
push
xchg
popf
test
out
jmp
dec
push
stc
xor
stos
xchg
or
sbb
nop
mov
push
repz
movsl
test
pop
xchg
in
shll
pop
fldcw
lods
in
dec
pop
dec
testl
negl
cmp
xchg
add
js
xchg
cltd
flds
xlat
xchg
int
aaa
push
out
call
clc
mov
inc
mov
rclb
push
orb
sbb
add
lret
das
mov
jle
cmp
fcmovne
ds
cmp
jmp
sub
jb
adc
enter
sbb
dec
mov
add
mov
inc
lds
loopne
lret
and
shrl
add
test
gs
loop
xchg
cwtl
pushf
repz
adc
hlt
outsb
or
bound
push
cld
out
pop
fsubrl
adc
sub
jp
jae
cmp
and
movl
add
mov
les
mov
lods
dec
adc
data16
mov
inc
xchg
xor
sbb
iret
popf
pop
cmp
popw
mov
mov
push
mov
lock
ret
cmp
jno
dec
lds
xor
push
outsl
xlat
lea
push
add
movsl
pusha
lret
mov
adc
ds
jne
data16
outsl
js
add
mov
push
mov
push
jl
sbb
sbb
cmc
lds
push
test
mov
sbb
xchg
mov
or
or
test
mov
nop
pop
cld
inc
adc
inc
cmpsb
mov
jge
dec
js
push
mov
cli
xchg
js
mov
and
aaa
xor
repz
mov
scas
mov
ret
inc
push
cmp
inc
pop
jl
fstpl
and
enter
out
stos
jp
shrb
sub
push
jg
sub
mov
sbb
aaa
xlat
mov
xor
jns,pt
call
cli
sub
fldcw
fistl
sarb
test
jmp
inc
lret
cmp
dec
or
ljmp
pop
mov
daa
adc
and
mov
subl
lahf
fsubs
xchg
lahf
xchg
mov
inc
cmp
adc
arpl
aad
pop
inc
sub
dec
or
cmpsl
pop
inc
outsb
enter
sbb
lcall
out
mov
hlt
jns
testb
adc
aam
addb
mov
ret
sub
push
jl
sub
mov
mov
ljmp
inc
xchg
or
ret
push
iret
in
in
insb
lahf
rorb
cmc
mov
xor
hlt
fdivl
movsl
shlb
sub
add
dec
xor
orb
ljmp
je
inc
push
loopne
push
xor
bound
or
cmp
dec
mov
xchg
ja
add
xor
xor
cmp
mov
mov
mov
fiadds
adc
loop
mov
orl
lea
inc
add
inc
imul
fildl
push
push
orl
xlat
stc
push
fmull
faddl
aad
pop
outsl
lods
mov
pop
push
mov
adc
and
std
stos
adc
clc
xchg
xchg
in
adc
shlb
fisttpll
cmp
fidivs
sub
lock
inc
push
lret
jbe
and
mov
pusha
sub
rol
das
mov
jno
add
pop
lahf
push
lret
mov
jl
cmc
shr
ljmp
js
jp
add
fs
ret
jecxz
mov
xor
or
mov
sbb
push
pop
sbb
pop
mov
imul
outsb
out
sbb
loope
xchg
fwait
sub
cld
adc
and
fbld
notb
mov
lock
cs
sub
and
fwait
add
into
faddl
push
sahf
fistl
xchg
or
ja
lods
xchg
int3
sbb
jl
adc
mov
stos
fmull
jmp
push
hlt
into
sub
xor
sub
inc
out
xlat
lods
lcall
test
pop
test
ss
hlt
in
cmp
dec
imul
and
out
jmp
mov
dec
push
scas
bound
cli
rorb
ja
push
xchg
push
mov
imul
push
xor
add
loope
hlt
xchg
jmp
xchg
jp
push
imull
adc
and
mov
pop
ss
add
xchg
cmp
xor
pop
push
and
sub
aam
jecxz
jecxz
push
int3
push
fildl
enter
jle
ljmp
push
fdivrl
fwait
aad
cmp
add
jo
jge
sbb
mov
sbb
aas
push
sbb
shlb
xor
icebp
imul
push
inc
cmpsl
xchg
ret
fwait
xchg
xchg
mov
fildll
js
sbb
test
cmpsl
and
pop
push
jo
jmp
mov
push
push
adc
andb
lret
push
sbb
pop
clc
sub
rolb
aas
xor
fcmovnb
mov
pushf
add
add
cmp
add
or
or
xsha1
cmpsb
or
push
cmpsb
push
mov
dec
std
outsl
scas
or
add
jnp
test
xchg
aas
and
dec
pop
pop
addb
cmpl
push
out
xor
ja
or
mov
inc
les
icebp
push
jge
bound
movsb
int3
loopne
out
jns
jo
lret
bound
test
clc
mov
mov
mov
sub
adc
int
aaa
mov
or
or
pop
jb
pop
rcrb
mov
lods
cmpsl
stos
sub
jg
addr16
xchg
xor
clc
rcll
mov
andb
pop
cltd
out
inc
sbb
insl
imul
add
dec
repnz
dec
and
mov
mov
mov
clc
hlt
and
lock
sahf
sahf
dec
rcrb
mov
test
std
push
cld
pop
mov
jp
and
js
je
das
das
cmp
jno
out
dec
xchg
out
aam
movsl
and
mov
out
add
push
jo
cmp
icebp
or
pop
outsl
jmp
movsb
aas
jp
je
leave
hlt
lock
cmovg
das
xchg
bound
ret
dec
fcoms
enter
fimuls
pop
ljmp
jne
lret
loop
fwait
popf
loope
mov
or
or
rcll
mov
and
pop
test
cmp
push
add
scas
xchg
movsl
or
lea
xchg
pop
loop
mov
xor
lods
xor
mov
push
jle
mov
fistps
shrb
into
push
mov
inc
xchg
mov
sub
push
loope
mov
setb
jo
add
xor
shl
repnz
mov
push
lret
scas
mov
jp
jge
sub
aad
push
dec
dec
jg
push
jg
mov
inc
sbb
popa
xchg
loopne
xchg
outsl
jecxz
icebp
inc
dec
sbb
fbstp
arpl
lret
mov
je
xchg
mov
icebp
addr16
xor
cmp
aas
and
mov
cs
mov
std
adc
inc
pop
sub
adc
inc
pop
push
nop
and
mov
cli
test
and
outsb
leave
xchg
mov
fsubl
outsb
sti
cli
and
aam
adc
pop
leave
mov
insl
push
adc
adc
repz
pop
and
jae
mov
fxch
es
mov
dec
popf
adc
pop
call
leave
jl
in
loope
gs
nop
mov
testb
pop
leave
pop
aad
add
jne
mov
jno
add
ja
pop
or
xor
mov
mov
ds
adc
xchg
and
mov
and
in
mov
mov
mov
adc
dec
push
mov
adc
dec
mov
lds
inc
fs
cmp
mov
ja
pop
outsl
inc
cmp
jl
or
xchg
inc
cmp
sahf
adc
dec
out
and
sar
aaa
jle
in
xchg
in
sbbb
mov
cmp
insb
in
adc
rorb
adc
push
push
roll
add
inc
lret
gs
sub
outsb
push
jnp
lahf
xor
popa
sub
mov
ficoms
xchg
fs
pusha
pop
mov
adc
push
add
faddp
imul
cs
jae
adc
ret
mov
sbb
pop
inc
clc
cmp
call
int3
decl
inc
sbb
sub
subb
icebp
int
inc
xchg
es
nop
dec
adc
adc
scas
movl
or
or
je
jle
aaa
gs
mov
xchg
mov
sub
xchg
or
scas
rolb
fwait
cmpsl
xchg
clc
clc
scas
mov
lds
xor
cmpsb
daa
outsl
clc
xchg
mov
sbb
sbb
cmp
and
push
dec
pop
out
sub
test
icebp
dec
mov
test
jns
lahf
lods
push
add
insb
jp
ret
repz
icebp
adc
jmp
mov
adc
testl
jnp
mov
push
data16
fdiv
mov
lds
xchg
dec
dec
sbb
lods
pop
sub
jo
fsubrl
mov
in
addb
add
mov
jne
mov
popa
cli
push
adc
mov
aaa
lods
pop
dec
cmpb
sbb
xor
loope
pop
repz
jne
push
test
popf
mov
xlat
and
jo
sub
repz
jg
fwait
xor
sub
inc
xchg
mov
or
pop
cwtl
addr16
jp
pop
inc
sbbl
fdivr
inc
and
shrb
clc
inc
add
jp
sub
gs
cmp
add
push
dec
ret
mov
popf
testl
pop
icebp
xor
stc
jno
and
mov
adcb
or
cmc
jb
mov
mov
sbb
leave
in
loope
not
mov
xchg
or
push
xor
rolb
clc
pusha
shrb
add
mov
ret
xchg
sarl
je
and
movsl
cld
mov
or
das
xor
shlb
mov
pushf
cmc
cs
mov
sub
mov
mov
fs
cs
repz
sbb
test
insl
icebp
outsl
jb
pop
loop
or
inc
movsb
inc
xchg
cmp
in
xor
je
adc
adc
das
xor
or
mov
testb
popl
mov
add
ja
outsb
clc
lods
shll
aad
dec
cld
cmp
int
push
cltd
dec
or
test
cli
xchg
xchg
lcall
inc
adc
cmp
in
jb
out
cmpsb
sbb
rcrb
adc
push
mov
fcompl
or
cmpsb
pop
mov
jb
iret
adc
stos
fs
lea
mov
adc
push
orl
test
enter
push
mov
movntq
out
mov
fimuls
xchg
and
and
stc
ja
popa
sub
mov
fiaddl
push
cmovno
cltd
bound
add
xor
daa
mov
xchg
mov
clc
jnp
out
pop
adc
cmp
out
jecxz
and
cmp
mov
repz
cmp
daa
sbb
test
stos
jp
notb
pop
dec
pop
jmp
fadds
mov
cs
mov
out
xor
adc
inc
push
push
lahf
movsb
shll
xor
mov
lods
cld
in
lcall
into
sbb
jle
xchg
mov
cmc
jb
int
push
and
repz
pop
mov
fwait
sub
mov
dec
cmp
inc
decl
pop
stos
inc
add
pop
pop
dec
sar
roll
mov
jecxz
mov
add
add
lods
add
cmp
cmp
mov
std
push
stos
xor
nop
imul
pop
movsb
addr16
in
enter
mov
lods
ficoms
dec
ffree
mov
into
les
mov
inc
sub
fistps
adc
shlb
rcll
dec
jne
js
mov
mov
and
jns
sub
in
incb
push
cmp
dec
inc
aad
gs
push
sbbl
aad
jb
movlhps
scas
or
pop
jno
pop
inc
lcall
xor
jb
fdiv
aam
xchg
clc
xchg
das
ja
push
dec
rcl
and
jecxz
ss
mov
ja
mov
sbb
push
ret
jmp
jae
test
cmp
mov
stc
inc
push
mov
insl
clc
xor
add
aam
sbb
or
mov
insl
ljmp
dec
bound
push
jno
sti
fldenv
rol
sahf
aad
ja
arpl
add
or
ret
adc
cmpsl
popa
shll
cs
xchg
mov
movsl
out
push
mov
lahf
xchg
and
mov
hlt
dec
add
bound
fbld
mov
add
mov
scas
or
movsb
cmp
pop
xlat
mov
cs
pop
fwait
mov
imul
test
mov
out
sub
mov
scas
loope
out
cmpsl
add
mov
xchg
sahf
lds
cmpsb
push
jno
fs
push
jg
ficompl
js
dec
cmp
pushf
ret
test
mov
dec
sub
loop,pt
out
scas
sub
dec
adc
icebp
cmc
mov
pop
fldz
mov
pop
sbb
es
cld
mov
sub
cli
push
and
test
mov
sub
stos
mov
mov
aad
scas
fwait
mov
push
mov
mov
lea
dec
lcall
cmp
shll
push
adc
pusha
dec
pop
sahf
add
imulb
fldt
lahf
jno
mov
dec
sub
loope
or
push
idivb
das
xchg
xor
cmp
je
sarb
loope,pt
sbbl
lcall
flds
stc
stos
cmpsl
fdivrs
push
repz
test
int
popa
jp
or
out
jae
pop
rolb
mov
ficomps
adc
stc
push
pop
fbld
inc
adc
dec
mov
mov
mov
mov
fcoms
adc
bound
pop
in
cmp
cmpsb
sub
shr
loope
mov
ds
fsubl
sub
sub
xchg
xor
jecxz
inc
popa
in
rcrl
xor
sub
inc
js
sbb
call
insl
xchg
loope
rcll
shrl
jecxz
loop
int
mov
cmc
mov
in
inc
stos
sahf
bound
sbb
cs
enter
mov
xlat
les
sub
xchg
loop
sbb
pop
jge
data16
dec
test
push
loopne
mov
or
push
mov
addr16
mov
add
fsubrs
or
dec
or
jns
xchg
sbb
or
fisubrs
loop
sub
sbb
test
push
jl
dec
jmp
xchg
mov
pop
dec
out
mov
push
mov
cmp
fwait
test
push
mov
out
xor
cmp
xchg
icebp
add
xor
std
into
jp
add
iret
pusha
pop
mov
leave
jns
dec
pop
adc
push
cltd
imull
aas
xchg
lcall
xor
xor
iret
cltd
hlt
mov
xor
lock
sub
dec
jl
jb
pop
jo
js
lods
dec
push
popl
inc
jae
push
mov
out
pop
pop
les
mov
movsl
mov
fnstsw
fiadds
ljmp
inc
add
sub
sbb
jp
scas
pop
push
add
repz
mov
pop
lahf
cmc
pop
cmpsl
ret
dec
je
xor
scas
dec
sbb
xor
push
jge
andl
xchg
lret
xchg
hlt
add
pop
inc
or
jb
sub
pop
jge
subb
cmp
pop
adc
fidivl
iret
ljmp
push
mov
xchg
je
pop
mov
sar
push
mov
ret
add
negl
test
jle
xchg
imull
xchg
adc
sub
mov
push
sti
add
fs
jo
repz
jg
xchg
fnstenv
test
jl
out
pop
repnz
stos
sub
cli
sbb
loope
push
push
lcall
arpl
rdmsr
out
test
cld
clc
dec
mov
aam
in
mov
xor
xchg
sub
jg
push
je
sub
jge
cmp
mull
sahf
adc
adc
dec
in
add
scas
cmpsl
iret
das
xlat
loop
insb
scas
loope
inc
sub
icebp
push
lock
or
xlat
pop
andl
mov
mov
insl
stos
test
pushl
mov
mov
or
mov
ret
inc
arpl
cmp
bound
out
cltd
or
imul
fnstsw
jno,pt
add
icebp
cmp
rcrb
rorb
and
add
ret
cmp
mov
rclb
mov
sarb
xor
mov
adc
push
and
fs
sub
xchg
pop
stos
xchg
xchg
sub
inc
mov
add
sbb
dec
adc
out
pop
insl
xor
dec
mov
mov
fsubr
sub
clc
inc
push
les
fiaddl
pop
cld
pop
cwtl
fimull
stc
mov
ret
mov
hlt
adc
and
insb
inc
xor
fstl
aam
pusha
dec
in
iret
push
push
cmp
mov
popf
fwait
out
and
cmp
sbb
sub
push
push
in
loope
fbld
pop
adc
pop
in
pop
pop
mov
xchg
cmp
mov
jle
sbb
lahf
test
dec
jno
out
jno
push
xchg
das
inc
shr
dec
in
mov
sub
jge
gs
into
mov
push
cli
push
xchg
sahf
add
das
inc
movsb
lret
repz
add
fdivs
mov
sti
stc
lcall
fildl
cwtl
fildl
ss
mov
cmp
xor
cltd
xorl
push
out
sahf
adc
loop
push
mov
dec
sub
or
cmpsl
add
in
out
imul
mov
xchg
mov
mov
sbb
xchg
je
add
test
fwait
adc
add
xlat
shll
pusha
sbbb
cmpsl
pop
mov
int
movsb
mov
int
cld
cltd
popa
xor
ret
in
lea
subl
push
mov
ficoms
js
sub
cwtl
dec
adc
fcomi
cmpsl
fwait
jb
out
stos
loopne
je
xorb
push
movntps
lock
mov
mov
mov
add
xrelease
mov
into
flds
js
add
adc
rcrw
dec
sahf
mov
mov
and
sbb
add
stos
push
int
clc
jb
cmp
imul
cmp
loope
ds
or
das
out
cltd
inc
ss
sbb
push
inc
jbe
inc
push
cld
or
xor
dec
jmp
ret
push
cs
cmp
push
xor
test
stc
fwait
inc
mov
lea
clc
outsl
in
sub
xor
xchg
or
adc
mov
les
test
bound
mov
shll
ja
jns
push
shlb
pop
mov
add
in
shlb
negl
pop
vpunpckldq
shrl
adcb
sub
jb
insb
in
clc
addr16
and
repnz
repz
cmpsl
jbe
lahf
imul
ret
ja
and
test
fcmovbe
fs
loope
cmc
sub
push
sarl
rorl
out
sbb
pop
mov
mov
cmpl
daa
pop
pop
aad
push
pop
inc
inc
add
inc
pop
sbbb
mov
mov
cmpsb
stos
cmpsb
and
xchg
ljmp
lret
fdivp
fs
mov
inc
cli
add
jecxz
adc
fdivs
inc
pop
xchg
jo
arpl
adc
cmp
dec
inc
repz
arpl
icebp
fnstcw
jmp
scas
push
leave
std
aas
lea
sbb
jge
sahf
out
cld
ss
sub
adc
and
add
push
sub
xor
repz
add
pop
dec
cmp
sub
js
ljmp
pop
sub
push
cs
bound
jecxz
xor
loop
mov
xor
jns
jg
xorb
adc
in
imul
es
xor
push
mov
stc
out
cld
fs
xchg
or
mov
les
cmpsb
adc
xlat
jp
cmp
mov
xor
movd
add
into
dec
out
jbe
lea
cmp
pop
int
ret
push
pop
bound
je
pop
xchg
lcall
or
xor
pushf
iret
adc
inc
inc
mov
cwtl
int3
fs
popf
sti
lods
popf
xchg
clc
mov
dec
lcall
sub
mov
mov
ret
arpl
mov
sub
je
cmp
jnp
fldl
test
adc
loopne
push
jns
xor
les
in
mov
sbb
push
pop
push
xchg
and
pop
jne
inc
mov
inc
mov
cmpsl
icebp
lret
dec
jbe
cmp
sub
jp
xchg
jnp
push
cmp
dec
jge
lea
jge
xor
mov
cmp
lcall
in
dec
or
sbb
inc
sub
cmp
movsl
sarl
xchg
mov
and
dec
mov
arpl
jae
or
lret
sub
sarl
mov
iret
xor
lea
pop
lods
xor
sahf
jmp
movsb
in
stos
push
pop
arpl
jno
pop
pop
daa
add
aam
fisttps
orb
push
xor
std
xor
lods
lds
cld
andl
pop
cmp
pop
pop
ljmp
fs
fstp
inc
cld
int
cmp
and
stos
js
jecxz
mov
jle
movsl
sub
mov
adc
addr16
ljmp
jl
or
mov
in
outsb
xor
psubb
or
leave
adc
dec
mov
push
inc
mov
nop
inc
out
repnz
add
lods
fildl
inc
mov
mov
xchg
data16
gs
or
mov
sub
bound
out
scas
xor
and
mov
fldcw
push
addl
lret
mov
xchg
jl
mov
std
test
push
inc
xchg
and
xchg
repnz
jbe
call
sub
movsb
pop
movsb
fwait
jo
and
stos
std
test
sub
pop
and
ret
addr16
and
cmp
sbb
clc
cld
test
xor
adc
push
scas
es
xor
test
push
mov
sub
int3
jle
jg
jl
sub
out
dec
mov
xchg
jne
jbe
add
jmp
jns
push
mov
xchg
xor
and
fidivl
xchg
mov
stos
and
adc
cltd
mov
or
push
sub
or
xor
fstps
iret
adc
test
lret
sub
inc
mov
ds
and
nop
movsl
test
cmp
cmp
mov
leave
inc
repz
inc
jb
call
rorl
lods
dec
mov
mov
mov
movsb
push
push
movsb
pop
scas
mov
cs
dec
sub
in
xchg
sbb
fwait
cmp
pop
xor
pop
in
xor
fs
inc
int
push
mov
push
jle
lods
cmpsl
sub
push
fcomi
mov
cwtl
mov
outsl
iret
cli
and
aad
movsl
lods
out
mov
mov
mov
movsb
adc
loope
or
decl
jbe
data16
popa
xlat
ficoml
or
jno
jge
pop
daa
mov
add
lahf
add
pop
or
push
sbb
enter
mov
mov
aas
clc
cmpl
jge
sarb
int
or
adc
sbb
jp
neg
pusha
push
faddp
outsl
je
push
movsl
jne
push
inc
adc
cmp
ret
jle
inc
into
pop
sub
or
add
sub
mov
cmp
cmpsl
cmp
sub
imulb
ja
inc
jbe
into
test
je
mov
test
enter
lahf
sub
leave
int
pop
or
dec
std
insl
push
push
push
jg
movsb
rcrb
pop
iret
dec
stos
cmc
pop
lods
icebp
cmp
in
sub
sbb
push
dec
add
lahf
js
add
xchg
jl
rcrb
stos
rorb
fmuls
jo
jno
pop
and
sub
sbb
bnd
sbb
sbb
fdivs
inc
cld
cwtl
mov
adc
jbe
fdivrl
and
lods
lahf
inc
xor
shlb
pop
das
jno
stc
mov
sahf
xchg
jmp
xchg
test
shll
sbb
pop
sbbb
sahf
arpl
sub
fwait
lcall
subps
icebp
push
pop
popa
movsb
test
pop
testl
adc
in
sub
cmp
leave
sub
std
xchg
and
xor
andb
mov
push
fdivl
push
mov
sbb
xor
test
mov
leave
lret
xor
and
mov
test
sub
pop
add
pop
in
fistpll
out
dec
sahf
rcr
or
sbb
flds
mov
ljmp
rorl
dec
jecxz
pop
dec
stc
inc
mov
xor
fcmovb
sub
and
push
mov
lods
mov
adc
push
and
lahf
ss
pop
mov
jno
jle
hlt
jge
cld
test
pop
and
mov
call
sbb
int
lahf
ret
jmp
jne
add
cmp
test
dec
jp
jno
aas
lret
mov
and
push
enter
dec
dec
jno
jns
jnp
cmpsl
cmpsl
sbb
and
mov
xchg
rorl
xor
out
and
adc
out
test
lret
push
test
loop
lret
pop
lcall
adc
cmp
rolb
movsb
lcall
les
add
aad
outsb
push
loopne
add
pop
mov
iret
pop
enter
enter
popf
aas
sub
cmp
mov
mov
xchg
xchg
movsl
push
in
movsb
fldt
mov
pop
test
jns,pn
inc
divl
pop
mov
mov
fsubrs
aad
cmp
lcall
sub
popa
scas
insl
repz
and
aaa
int3
popf
jmp
inc
sbb
add
push
push
enter
fildll
mov
cs
popa
pop
mov
lods
xchg
dec
mov
sti
add
add
xchg
mov
cmp
sbbb
into
out
xor
leave
or
dec
loope
xchg
pop
jnp
arpl
js
jo
cmp
jnp
cmpb
mov
add
lcall
mov
add
jbe
inc
mov
push
mov
in
shlb
rol
das
and
dec
sar
mov
xor
je
jnp
fsubs
shlb
dec
aas
cmc
iret
aaa
jg
mov
aad
sbb
repz
repz
aad
cltd
pop
imul
leave
adc
jmp
ret
push
movsb
adc
jp
daa
hlt
faddl
fs
pop
fst
ja
imul
mov
rorb
inc
sub
xor
pop
jb
mov
arpl
xchg
cltd
testl
inc
scas
jns
cltd
jno
int3
jae
inc
pop
rclb
jp
mov
cltd
loope
xchg
xor
pop
sbb
loop
fistpl
inc
jp
add
pop
or
jecxz
adc
pushf
jne
rcrb
and
shrb
jmp
ret
clc
mov
mov
in
sbbb
sarb
pop
cmpsb
movsl
les
jns
jbe
mov
imul
fistl
mov
add
in
pushf
add
sahf
mov
mov
push
jg
jbe
out
and
add
lret
sbb
xchg
lock
xor
and
add
jle
mov
jg
jae
or
sbb
fimuls
test
xor
cmpsl
je
loop
scas
adc
stos
rclb
ret
addl
or
xchg
or
sbbl
in
adc
ja
loope
out
xchg
pop
xor
std
sbb
cwtl
sti
add
inc
pop
pop
pop
cs
stos
add
or
test
loopne
stos
je
dec
stos
sbb
cmp
cli
ss
cmp
cs
dec
rcrl
push
cs
in
jl
pushf
mov
jae
or
mov
xchg
sbb
jmp
pop
dec
popf
pop
outsl
loope
sub
pop
rcrb
bound
sub
mov
shrl
add
loopne
cmp
mov
sbb
inc
stc
insb
lds
imul
dec
roll
and
fildll
imul
adc
push
lcall
add
mov
fs
jl
inc
add
scas
sub
lock
jl
cltd
sbb
adc
test
test
cmp
or
js
xchg
mov
bound
inc
hlt
popa
jo
push
out
add
lcall
push
mov
xor
repz
out
insb
icebp
cmp
ljmp
jl
cmc
mov
sub
or
cmp
push
cmc
mov
jns
xor
lea
loopne
sbb
pop
insl
cld
dec
add
unpckhps
dec
mov
push
add
fisttpll
jns
std
or
mov
cmc
fildl
into
out
clc
adc
hlt
sahf
mov
jb
jne
dec
add
xchg
loopne
push
call
mov
aaa
add
movsl
movsb
data16
cmp
loopne
inc
and
pop
or
ret
jp
mov
negl
xchg
cmp
adc
or
mov
inc
shl
int
movsl
cmp
push
xor
xlat
ja
mov
mov
lret
iret
fs
or
jns
or
sub
pop
lock
mov
jo
hlt
or
cmp
inc
leave
ljmp
jae
add
ret
push
loop
pushf
sub
xor
insb
rolb
jle
mov
outsl
mov
cs
negb
add
sbb
adc
lahf
pop
ds
jl
xor
fmuls
lock
fnstcw
and
repz
dec
jl
cmc
sbb
pop
ret
mov
pushl
lcall
adc
mov
push
and
pop
sbb
inc
adc
ss
insl
xchg
cli
cmp
into
mov
jns
sbb
dec
jge
xor
aaa
adc
je
sub
xor
data16
pusha
xor
dec
ret
mov
dec
fists
cmpsl
adc
adc
adc
loop
fildll
push
out
xor
je
or
add
add
mov
xor
ss
out
sub
adc
inc
in
push
cli
sub
sbb
cmp
xor
jecxz
pop
xchg
rolb
pop
les
dec
mov
aas
call
ds
insb
sub
mov
sbb
jbe
js
xchg
clc
sub
aaa
lods
add
repnz
mov
jno
mulb
inc
sub
pop
aad
stos
nop
aad
lds
xchg
push
imul
mov
mov
enter
jge
dec
push
rcrl
ds
add
mov
pop
xchg
push
shrl
mov
xor
sbb
sar
and
or
imul
pusha
into
pusha
lret
pop
movsl
iret
jo
jecxz
push
mov
push
adc
adc
dec
jg
or
mov
mov
and
cmp
push
mov
movsl
popf
lahf
out
add
ja
les
cltd
mov
inc
and
rcr
or
add
mov
enter
push
or
xchg
add
ljmp
je
les
je
sub
sub
sub
add
out
scas
call
adc
push
lcall
bound
mov
push
js
pushf
mov
gs
sbb
daa
jb
adc
sub
push
andb
dec
mov
mov
and
mov
decb
std
pop
mov
cmp
push
pop
lahf
rorl
cmpsl
xlat
outsl
nop
inc
xchg
imul
fsubs
ret
addb
mov
ret
hlt
adc
test
pop
xor
xor
adc
mov
inc
inc
adc
mov
testl
jp
mov
push
sti
inc
into
add
pusha
repz
sbb
xchg
dec
jo
js
sbb
or
cmp
adc
das
mov
mov
dec
xchg
xlat
and
or
mov
aad
jg
xor
fwait
jno
fdivrs
fmul
push
ret
out
mov
outsl
and
or
xor
sub
and
add
pop
in
rclb
stos
jb
sbbb
jp
lahf
mov
fsub
test
outsb
test
or
bound
push
sub
mov
sub
mov
or
jle
pop
sub
fucomi
scas
loopne
test
add
out
mov
ljmp
fwait
lods
xchg
cmpsb
lods
test
mov
pop
xchg
outsb
sahf
les
push
pop
adc
mov
fs
out
xchg
cld
subb
push
xchg
mov
cld
xchg
jg
add
cmp
out
loope
test
mov
subb
fildll
dec
fbstp
cmpsb
test
fxch
test
stc
mov
sub
jle
fsubrl
jno
mov
sbb
jle
fiaddl
cmp
out
jns
in
les
imul
movsl
push
cmc
and
repz
sub
adc
cmpsb
pushf
ljmp
xchg
sarl
xchg
insb
add
xchg
leave
push
jp
aad
and
out
fwait
dec
jg
and
stos
popa
cmp
cmp
test
push
adc
out
hlt
cmp
shrb
fnstsw
pop
or
aad
dec
fwait
pusha
cmp
push
push
mov
ds
imul
repnz
pusha
outsl
mov
rclb
adc
icebp
jns
shr
dec
sbb
sbb
lds
cwtl
outsl
sub
xchg
and
xor
imul
rcll
push
jle
cmp
cmpsb
sbb
xor
dec
stos
sbb
sub
int3
sbb
ljmp
fnstsw
test
xchg
mov
mov
xor
xchg
imulb
sub
sub
push
adc
rcrb
ds
jo
outsl
sub
mov
mov
int3
fs
daa
fcmovnb
push
outsl
test
outsl
mov
in
sbb
insb
dec
ss
mov
in
mov
cld
loopne
adcl
dec
ret
push
mov
sub
stos
subl
lahf
out
cmpsl
fstpt
arpl
loop
push
push
test
push
call
rcr
bound
fdivr
insb
or
push
fistpl
rcrb
out
bound
scas
rcl
in
inc
insb
sub
shlb
add
push
mov
insl
pop
add
pop
xchg
aaa
fstpl
mov
sbb
stc
call
xor
adc
jbe
pop
enter
cmp
lret
cli
mov
mov
inc
stc
cmp
leavew
jbe
pop
mov
sub
mov
in
lock
push
mov
lods
mov
dec
xor
mov
lock
pop
push
das
xor
or
ret
or
and
js
ss
sar
xchg
xchg
fsubrs
stc
inc
dec
and
fmuls
push
enter
imul
outsl
or
aam
pop
sbb
jmp
adc
daa
lret
nop
das
aad
in
xor
cmp
dec
xchg
fbstp
add
sub
cmp
cmp
sub
les
xor
sbb
or
shlb
dec
mov
xchg
mov
cmp
popw
mov
mov
dec
add
out
test
outsb
cwtl
pop
js
mov
imul
loopne
sub
ret
pop
movsb
sub
jle
and
pop
push
ds
pop
cmp
test
pop
fcoms
sub
adc
push
lock
cmp
loopne
lea
adc
xor
xor
mov
addr16
mov
test
scas
rcrb
xchg
push
into
sub
enter
cmp
outsl
out
jno
outsl
inc
xor
leave
in
lahf
dec
lea
push
add
iret
scas
scas
pop
lods
mov
test
data16
cmc
jns
xchg
stos
and
pushf
out
pop
xor
shlb
mov
lahf
push
and
add
lcall
pop
and
cli
jecxz
popf
popa
imul
jmp
dec
pusha
or
jmp
jb
cltd
test
sub
push
mov
out
pop
mov
inc
cmc
xor
repnz
pop
xor
out
or
in
cmp
pop
cli
sahf
rcr
sub
xlat
fldt
xor
pop
lods
and
adc
add
jae
testb
mov
sub
adc
push
icebp
sub
fwait
pop
xchg
imul
test
sbbb
clc
adcl
jo
andb
mov
sub
jno
push
inc
xor
sub
sub
mov
jge
push
push
int3
xorl
or
push
call
mov
mov
cwtl
mov
loopne
push
shl
loope
fsub
sub
sbb
push
pop
add
cwtl
mull
mov
jae
inc
lock
insl
or
add
sbb
and
inc
std
mov
lock
je
scas
arpl
add
scas
jb
inc
insl
pop
cmp
cmp
mov
rcl
or
or
data16
push
xor
stc
mov
ss
shlb
mov
lods
xchg
sub
enter
lret
lret
jmp
sub
pop
and
mov
aam
jns
fnstenv
cmp
cmp
cltd
aaa
test
push
ret
shll
adc
enter
push
out
imul
lret
mov
pusha
jno
scas
int3
cmpsb
mov
mov
pop
push
xchg
push
ss
mov
jno
in
cltd
lea
jp
or
ss
dec
movsb
and
stc
push
lret
dec
test
jae
enter
mov
stos
int
shlb
fs
stc
jecxz
decb
loopne
jl
mov
stos
xor
and
or
or
inc
dec
fdiv
push
dec
nop
and
les
fisubrs
stc
mov
mov
pop
xor
and
insl
movsb
aam
lahf
fisubrs
inc
xchg
testl
scas
mov
enter
loope
push
xor
sub
pop
out
ret
fisttpll
jle
pop
add
hlt
push
mov
iret
dec
int
fstpl
or
jmp
nop
add
scas
vprotw
sarl
push
decb
std
dec
int
add
mov
and
pop
ret
inc
sti
fdivrl
xchg
jg
out
cmpb
insl
jb
lds
inc
xchg
or
repz
sbb
andl
js
js
or
imul
cmc
adc
aaa
jne
jge
inc
push
imull
stc
outsl
or
push
out
xchg
push
pop
or
adc
mov
or
das
pushf
or
adcl
sbb
xchg
pop
dec
aas
les
xor
insb
lea
in
fmulp
clc
or
stc
mov
test
iret
inc
adc
push
outsb
xchg
push
mull
jb
push
loope
mov
fistpl
or
xchg
xchg
inc
icebp
out
and
es
ja
in
xchg
icebp
dec
sahf
movsl
ficoms
lea
xor
popa
in
ret
into
xor
xor
jp
xchg
mov
mov
cmp
jg
loop
pop
lret
pop
imul
mov
ss
xor
scas
in
jnp
cs
leave
hlt
jp
cmpsb
mov
sbb
popa
cmp
dec
cmp
jmp
push
stc
test
out
lock
sbb
sbb
xor
dec
dec
push
xchg
dec
mov
rorb
adc
dec
xchg
mov
xor
mov
inc
jnp
sbb
xchg
push
in
pop
xchg
inc
loop
cmp
stc
loop
loopne
les
orl
mov
cmpsl
leave
add
mov
sub
iretw
pusha
leave
xor
mov
xchg
xor
shrb
inc
adc
scas
and
and
daa
jo
icebp
cmpps
shrb
sbb
lcall
or
mov
mov
cmp
add
nop
dec
mov
jno
es
or
je
aam
jbe
in
push
mov
xor
and
push
dec
dec
popf
rolb
jo
and
lcall
mov
lret
icebp
jle
stos
push
adc
add
je
data16
dec
push
jmp
stc
fists
mov
sbb
push
and
dec
cmp
xor
mov
fs
fidivrs
dec
popf
pop
stc
sbb
out
sub
sbb
rclb
arpl
and
dec
add
xor
vaddpd
adc
aaa
arpl
stos
ds
mull
lahf
dec
or
hlt
lahf
test
add
sti
adc
fisubrl
inc
adcb
outsb
or
les
mov
jne
es
or
push
xchg
daa
jno
jge
std
mov
ret
hlt
cmp
inc
in
add
jnp
call
int3
mov
fxch
js
mov
sub
loop
ret
jle
sub
jl
jno
mov
cmp
fistpll
or
movsb
xchg
or
jg
xlat
inc
decb
out
mov
xor
call
int3
mov
stos
scas
add
mov
gs
inc
pop
mov
ds
pop
jb
es
ret
or
les
sub
bound
inc
fstps
cltd
cmp
pop
loopne
cwtl
jp
clc
repz
xor
fwait
in
js
sub
pop
jmp
loop
pop
out
push
aam
mov
xor
into
shll
sahf
adc
jecxz
inc
or
and
enter
aas
lock
xor
outsl
popa
pop
sub
dec
mov
add
jbe
cmpsb
jne
iret
mov
ljmp
xlat
inc
repz
mov
cli
aas
mov
in
mov
mov
cmpb
mov
in
mov
sbb
fwait
std
jne
repz
cmp
outsb
or
sbb
outsl
sub
lods
ja
pusha
insb
xor
xchg
repz
out
and
sahf
adc
cld
mov
popa
test
idivb
inc
sbb
cld
fcoms
lods
ret
js
les
clc
mov
jae
dec
sahf
out
ret
cmpsl
pop
fisubrl
xor
incb
sub
xchg
mov
push
mov
push
add
roll
push
push
aam
stos
jnp
mov
add
add
sbb
inc
ror
xor
adc
in
adc
movsl
mov
pop
jg
pusha
fst
outsl
in
xchg
jno
jmp
mov
add
imul
jmp
out
sbb
jo
in
push
mov
in
in
xor
pop
popf
inc
pop
push
mov
lcall
xlat
daa
rep
jne
or
arpl
and
jns
lds
outsb
add
mov
xchg
push
jae
ret
jmp
and
adc
ret
out
shll
or
mov
cmp
inc
push
jne
pop
sbb
in
mov
pop
fsubrs
fcoms
push
xor
xchg
shrl
push
scas
jg
sub
and
int
shl
jnp
xor
mov
out
shrl
dec
mov
or
dec
cwtl
imulb
fwait
xlat
push
out
ret
les
push
lcall
lcall
jae
das
mov
popa
xor
mov
push
loope
fsubp
xchg
mov
jp
outsl
adcl
inc
in
mov
loop
loopne
out
xchg
dec
addb
and
inc
inc
outsl
repz
adc
mov
in
xor
mov
push
and
jmp
xchg
inc
fistps
imul
dec
lds
shll
mov
pop
mov
lods
sub
sub
movups
lret
das
rclb
xchg
xor
jae
mov
dec
xchg
fucomp
mov
ror
pusha
dec
cltd
xchg
je
jg
pop
cmp
test
aaa
and
popf
xchg
xchg
cli
out
xlat
mov
mov
lods
loope
pop
mov
sar
push
out
dec
lods
fstpt
lds
mov
stos
sub
faddp
cmp
or
xchg
jp
jne
pop
test
inc
jae
sub
mov
sbb
int3
aaa
les
jae
movsl
scas
fs
xchg
sbb
rclb
push
jg
cmpsl
std
int3
int
shrl
mov
fcmovb
or
sub
pop
cmp
inc
fsubl
adc
lahf
or
stos
mov
lds
jmp
jbe
xchg
roll
fistpll
xchg
out
ret
fs
cs
in
addr16
jb
mov
ljmp
mov
add
shll
pop
fimull
sub
movsb
xchg
mov
add
arpl
hlt
add
in
cwtl
xchg
ret
push
jg
add
adc
and
lods
mov
jbe
sbb
add
clc
push
or
adc
sbbl
into
inc
out
inc
andl
or
dec
outsb
movsl
sti
mov
repz
and
mov
arpl
fcoml
jp
out
push
mov
dec
lds
std
mov
fsubrs
sahf
or
fimull
or
cmc
fisttpll
jae
ljmp
scas
lods
ljmp
jae
in
xchg
push
popa
add
jb
adc
movnti
pop
xchg
dec
daa
and
cld
xchg
cwtl
loopne
enter
push
push
sub
dec
mov
sub
pushf
nop
js
pushf
adc
xor
adc
fidivl
lahf
push
xchg
jge
ljmp
mov
test
xor
test
js
xchg
push
sti
and
movsl
push
pusha
dec
push
je
into
loope
sbb
and
push
int
stos
xor
stc
in
dec
jmp
jns
cltd
inc
ret
sub
jg
sub
mov
outsb
push
imul
push
xor
ljmp
clc
aas
xchg
cmp
in
jg
mov
in
dec
mov
and
jno
je
inc
sub
arpl
add
sub
cmp
mov
jae
fucomip
lea
nop
sub
add
lahf
sbb
sti
jno
sub
test
and
or
xchg
jl
pushf
mov
cmp
xor
cmpsl
loopne
mov
fcmovu
clc
mov
test
aad
inc
leave
mov
imul
jns
decl
dec
iret
xor
mov
loope
shrl
cmpsb
mov
add
xor
cld
add
das
cwtl
shll
loope
sti
ret
fisttpl
cmp
and
cwtl
xchg
scas
in
hlt
out
xchg
sbb
cmc
sub
lds
inc
loopne
or
xchg
mov
je
push
out
sbb
pop
lahf
in
int
push
pop
ficomps
xor
jg
sti
xchg
lock
sub
cltd
and
movl
jb
stos
lods
lds
int3
xchg
int
mov
mov
add
stos
jmp
mov
adc
push
ret
movsl
add
xchg
jg
sub
adc
dec
jnp
outsb
mov
xlat
roll
jb
xchg
adcl
jnp
ljmp
push
lret
nop
mov
int
dec
loope
xor
xchg
rcrb
scas
lahf
jnp
cmp
push
call
pusha
adc
testb
mov
test
ss
rclb
inc
aam
cmp
shlb
sbb
scas
dec
bound
fldcw
shrl
jae
adc
test
imul
leave
mov
fldz
nop
aaa
mov
outsl
lock
lea
inc
sub
pop
mov
cmp
jecxz
mov
and
loope
adc
jno
ss
sbb
popf
fnstcw
lock
cmc
mov
xor
and
pop
inc
jo
sbb
jnp
fistpll
add
mov
movsb
gs
push
xor
jg
adc
mov
inc
dec
inc
jg
and
aaa
scas
xor
jge
or
jmp
mov
lret
mov
inc
sub
cmc
jmp
push
mov
adc
lds
data16
imul
dec
xor
fcmovnb
and
ja
sbb
fwait
jp
movsb
push
mov
icebp
and
xor
test
addr16
lods
mov
leave
sub
mov
or
cmpsb
and
add
in
xor
xchg
test
push
in
and
stos
call
repz
outsb
push
adc
dec
xchg
in
add
movsl
and
cmovs
or
stos
xor
sub
cmp
lods
imulb
lods
addr16
pop
cwtl
xchg
sub
fidivrs
xchg
dec
xchg
ds
cmp
enter
cmp
sub
mov
mov
pusha
jno
adc
mov
loopne
inc
inc
or
jae
nop
inc
stos
cmp
push
in
adcl
xor
add
sbb
ljmp
mov
fildll
cmp
adc
push
xchg
pop
outsb
psrad
adcb
fwait
sbb
cmp
adc
popa
incl
enter
adc
in
insb
cmp
adc
cmp
rorl
mov
sub
pop
xor
mov
cs
xorl
sub
dec
mov
ds
aad
pop
fistpll
test
pop
lea
shll
jnp
testb
bound
mov
pop
cltd
and
sbb
subb
inc
or
xor
outsl
fcoms
ds
enter
push
sub
sbb
pop
jecxz
mov
inc
cld
imul
mov
dec
adc
adc
es
insb
mov
adc
push
iret
pop
lahf
les
lds
add
out
cwtl
push
mov
cld
and
in
mov
push
jnp
icebp
test
cmp
test
fistpll
sbb
and
sbb
mov
xor
arpl
cmp
xchg
movsl
imul
add
icebp
add
push
sbbl
lahf
leave
dec
int
stos
enter
dec
jg
scas
fisubs
addr16
imul
and
pop
xchg
xor
inc
or
repz
std
sub
adc
cmp
push
jmp
push
or
imul
pop
bound
dec
and
test
test
dec
addr16
add
inc
jmp
imul
sub
movsl
or
out
fistl
fs
jb
cld
jno
or
xor
shld
mov
fcomp
pusha
xchg
std
push
xor
int
movsb
add
and
inc
adc
enter
faddl
xchg
ror
mov
lea
lock
pop
dec
cltd
bound
das
dec
xchg
push
int3
bound
sbb
push
push
jo
fucomip
xchg
or
clc
inc
mov
xchg
sub
mov
aam
and
sbb
xor
aas
xor
cmp
dec
dec
icebp
xchg
leave
push
cld
mov
xchg
mov
addr16
add
cmc
mov
mov
les
jo
enter
dec
in
and
adc
push
std
xchg
or
lods
add
xchg
and
in
jb
pop
idivl
sbb
enter
and
movsb
xchg
lods
inc
adc
stos
stc
or
hlt
js
outsl
cmp
ljmp
and
negb
cmpsb
int3
cmp
mov
movsb
test
xchg
xchg
aas
mov
popa
push
test
scas
pop
sub
cmp
pop
in
movsl
jecxz
sbb
lret
in
and
lret
stc
inc
xlat
push
inc
add
pop
push
lret
leave
xchg
mov
push
stc
sahf
mov
js
add
jg
fs
push
lds
movsl
pop
cmpsl
rcll
andl
xchg
btr
inc
xchg
sub
pop
adc
mov
sti
xor
stos
push
iret
push
adc
int3
xchg
pop
leave
sbb
mov
mov
xchg
inc
mov
sbb
scas
add
adc
dec
cmpb
jp
sbb
inc
icebp
mov
fstpt
xor
sub
jo
push
and
fwait
in
sub
mov
inc
mov
daa
sbb
xchg
mov
sbbb
push
pusha
ja
pop
js
xchg
orb
fimuls
jb
pushl
scas
lcall
mov
push
push
lcall
dec
rcll
enter
rorb
sbb
xchg
xor
add
int
push
and
jg
cli
jns
add
or
loope
jle
push
mov
in
imul
push
bound
bound
test
hlt
and
loope
add
or
jbe
inc
repz
pusha
lods
js
outsb
stc
rcrl
ja
pop
ret
jmp
popf
imul
jnp
je
xchg
test
lret
cmp
test
mov
inc
leave
movq
dec
cmc
iret
fs
daa
cmpsl
mov
mov
sub
pop
rol
xchg
sub
xchg
push
and
shll
mov
xchg
loop
out
sti
ja
cmp
clc
adc
jnp
je
inc
pop
lock
in
add
xor
jmp
into
test
pop
push
or
mov
js
add
adc
movsl
cmc
imull
cmp
mov
sub
scas
adc
mov
dec
mov
mov
and
roll
stos
mov
std
adc
out
jecxz
popf
push
xor
xchg
ljmp
into
xchg
jne
xchg
mov
into
inc
jle
lods
add
push
imul
int3
xchg
sub
sbb
or
not
sahf
xchg
ljmp
sub
sub
addr16
pusha
adc
and
shlb
pop
mov
and
lcall
xor
imul
lods
mov
push
adc
inc
mov
mov
pop
fwait
adc
shl
popf
adc
xor
fsts
sub
hlt
lahf
inc
pop
lret
andb
push
imul
mov
xchg
lret
outsb
jmp
pop
ret
push
push
mov
leave
repz
in
jge
cmp
pushf
loop
pop
add
mov
repz
insb
jg
roll
leave
sub
test
pusha
adc
je
ss
push
inc
mov
imul
loop
push
out
cmp
sbb
dec
mov
fldt
mov
out
mov
jg
jae
mov
pop
loop
add
sub
add
jl
stos
mov
jno
xchg
aaa
inc
mov
nop
jae
ficomps
movsb
add
movsl
fs
jp
mov
push
stos
sub
ss
arpl
and
mov
imul
cld
pop
mov
inc
scas
mov
outsl
fbld
dec
cmp
inc
sub
sbb
test
pusha
mov
fidivrl
cld
ja
das
js
rcrb
test
sarb
jp
call
fdivs
xchg
fldt
push
mov
cmp
cli
ret
xchg
pop
outsl
in
lods
arpl
lds
daa
sbb
faddp
dec
cmp
add
mov
repz
xor
mov
int3
pop
mov
rorl
push
cmp
sub
cltd
jbe
mov
mov
dec
outsb
lret
add
mov
adc
lret
xorl
mov
sahf
fdivr
add
and
aam
in
mov
xorl
fistpl
out
and
ss
mov
arpl
andb
popf
sub
push
out
mov
mov
stc
ret
inc
mulb
sub
inc
pop
cmp
mov
loopne
fisubl
jmp
jb
and
orl
mov
lahf
pusha
popa
xchg
popl
add
and
mov
xchg
rolb
mov
ret
jnp
sarb
adc
loop
bound
lds
xor
sub
add
call
jb
jb
shlb
xorb
push
and
rcl
mov
mov
pop
gs
les
pop
out
or
test
push
shl
in
js
popa
adc
bound
fsubl
out
test
ficomps
cmp
ficoml
pop
pop
jecxz
xchg
dec
movsl
or
xchg
mov
jns
jg
add
and
jbe
sahf
mov
push
pop
movsb
xor
ljmp
push
or
or
mov
push
shlb
fwait
les
in
push
mov
loope
mov
dec
push
cs
mov
mov
jae
mov
je,pt
das
in
and
sbb
fsubl
sbb
mov
and
iret
loope
ret
test
rcr
pop
adc
push
fsubrs
sahf
pushf
lods
push
sub
mov
adc
dec
and
push
test
and
mov
pop
fldl
xchg
imul
fwait
repnz
dec
rcr
sarl
das
lret
mov
testl
mov
sbb
fadds
jnp
es
mov
pop
xor
pop
scas
adc
mov
cmc
jno
dec
pop
mov
adc
cmpsl
in
inc
call
and
iret
mov
test
add
hlt
mov
inc
in
int
out
sub
sub
push
mov
xor
pop
adc
rolb
mov
add
subb
mov
xchg
imull
andl
jnp
aas
shlb
sub
outsl
out
inc
sub
mov
lock
ja
add
mov
js
xchg
je
js
mov
repnz
add
mov
pop
dec
dec
mov
iret
popf
int3
mov
cmp
mov
jl
push
push
shr
adc
xor
cmp
cmp
or
cld
outsl
xchg
cmp
cli
jne
stos
out
sti
nop
mov
cmp
adc
repnz
js
add
mov
ljmp
fwait
or
or
pop
inc
xor
cmpsl
sbb
push
call
sub
imul
aad
and
aam
lock
aas
sbb
daa
cmp
bound
subb
adc
mov
lea
push
stc
lret
or
and
sbb
push
mov
cld
out
or
jo
xchg
adc
cmp
test
sub
and
mov
rcll
cmp
inc
add
clc
rcrl
or
mov
ss
pop
mov
shll
popa
mov
sub
sbb
cmp
adc
popa
inc
pop
mov
aaa
sub
mov
addr16
xor
insb
addr16
shrl
outsb
adc
sbb
xorb
or
mov
fimull
mov
pusha
pop
cli
inc
pop
or
aas
or
mov
fidivrs
xlat
sub
lahf
cmp
cld
sub
sub
xchg
sbb
mov
nop
jmp
push
push
mov
dec
fldcw
xlat
cmp
in
mov
rorb
out
repz
jo
jmp
daa
xchg
jbe
xchg
fstps
xor
push
lcall
outsl
jge
mov
adc
dec
jle
daa
xor
movsl
sti
and
insl
enter
orb
xchg
mov
insw
cmp
out
imul
sar
mov
in
mov
outsb
fnstenv
sti
rcrl
rclb
icebp
cmpsl
sbb
popa
and
sub
xchg
mov
int3
pop
sub
jne
jb
js
push
inc
xor
dec
lret
hlt
push
dec
enter
lret
leave
les
push
insl
sub
mov
roll
stos
dec
pop
in
cmpsl
sub
and
fimull
popa
pop
cmp
test
sub
xor
in
clc
xchg
negb
aam
push
inc
adc
sahf
cmpsb
xor
js
add
jg
dec
dec
dec
sub
mulb
xorb
imull
and
pop
dec
pop
imul
sub
mov
xchg
dec
stos
in
cs
push
loop
dec
cmp
test
in
jp
pop
lock
push
mov
sub
lret
lret
sub
mov
add
outsl
push
cltd
mov
mov
push
sbb
in
add
shrb
jmp
mov
aad
sub
sbb
cld
xor
mov
lods
repz
mov
stc
out
aaa
sbb
mov
imul
mov
push
mov
jmp
cmpsb
fs
imul
and
inc
enter
jne
sub
mov
lock
stc
bound
jo
and
rorl
pop
fidivrl
pop
jg
in
lcall
jae
xor
sbb
out
adc
rol
push
mov
add
ret
jg
insb
fimull
mov
inc
push
sub
ja
stos
out
test
sub
mov
inc
mov
lock
dec
shll
cld
dec
cld
xor
outsl
adc
xchg
cld
test
jmp
lret
add
cld
loopne
mov
iret
jbe
sub
mov
aam
dec
lcall
jo
mov
jg
cmpl
mov
fcmovbe
inc
leave
mov
mov
shr
inc
mov
mov
and
and
xchg
pop
aam
inc
mov
out
bound
outsl
pushf
fsubl
inc
orb
or
adc
cmp
fiaddl
inc
jl
and
cmp
jl
mov
push
sub
mov
bound
jmp
pop
mov
and
mov
mov
lcall
xchg
lods
pop
adcl
adc
cwtl
jl
inc
mov
ss
repnz
out
jnp
push
or
xchg
dec
mov
cmpsb
popf
je
stos
mov
pop
ss
adc
cs
out
loope
pop
add
mov
sarl
es
fldl
shlb
xor
out
fdivp
pop
test
imul
sub
xchg
movsl
jecxz
inc
fnstenv
xchg
mov
aaa
pop
inc
cmpsl
mov
arpl
mov
sub
sub
sub
sub
adc
mov
lcall
xor
mov
adc
push
adc
arpl
sbb
adc
mov
adc
sbb
adc
rorb
and
stc
add
pop
repz
stc
negl
fcmovnb
xchg
sub
fwait
les
lock
gs
adc
scas
fists
imul
mov
imul
mov
faddl
sbb
pop
test
cld
out
pop
out
mov
ss
xchg
incb
test
mov
cmpsl
mov
ficoms
xchg
xchg
xchg
mov
orb
outsl
fstps
fs
xchg
iret
ret
xor
addr16
mov
push
movsb
aad
imull
push
lods
idivb
fwait
jp
clc
add
add
outsb
inc
pop
es
pop
stos
fcoms
mov
insl
sahf
mov
mov
js
pop
cmp
adc
inc
add
dec
into
out
adcb
mov
out
idivl
sbb
in
mov
dec
mov
fisttpl
pushl
repnz
mov
dec
push
push
pop
pop
popf
push
lea
mov
jge
jmp
enter
outsb
out
sbb
jo
stos
ror
insl
loop
mov
xchg
jbe
push
pop
sar
stos
sub
cmp
pop
mov
mov
fdivp
lea
push
xchg
mov
mov
lret
nop
je
push
fsts
sub
jno
or
lds
cmp
clc
pop
xchg
inc
sub
xchg
leave
xor
loope
and
ret
pop
jmp
push
sbb
mov
and
add
call
mov
or
add
mov
adc
mov
and
sar
test
out
ret
fbstp
dec
sbb
aas
sub
in
xchg
and
repz
mov
cmp
in
push
clc
push
add
hlt
mov
jle
insb
xchg
xchg
call
dec
add
lret
loope
insb
hlt
inc
or
inc
xchg
cmp
lds
mov
dec
js
addl
imul
mov
cmpsl
jne,pn
push
and
jmp
jl
dec
cmp
mov
jg
notl
inc
mov
aad
lods
pop
in
xlat
cld
push
arpl
xchg
call
fwait
push
je
or
push
mov
clc
fdivl
mov
push
mov
mov
outsb
fcoms
dec
pop
jno
push
mov
cmp
pop
dec
dec
inc
cmp
imulb
lea
jg
jb
mov
xor
sbb
sbb
aam
in
pop
push
movsb
aam
dec
pop
adc
push
outsb
iret
repnz
adc
cmp
pop
adc
pusha
push
lods
mov
jg
xor
inc
testl
dec
ljmp
loope
into
stc
in
nop
icebp
add
call
fidivrs
jnp
jo
adc
xor
dec
mov
pop
pushf
cmp
loopne
enter
ja
lret
jecxz
repz
mov
xchg
add
pop
dec
lcall
cmp
inc
mul
inc
jbe
test
cltd
push
data16
popa
jno
jecxz
dec
jne
cmp
adc
repz
sahf
mov
lods
sub
popa
xchg
shll
inc
mov
scas
lods
mov
js
mov
mov
in
popf
or
push
arpl
js
ret
adc
mov
movsl
mov
out
leave
inc
addl
jb,pn
lcall
push
mov
icebp
inc
jb
cmpsl
test
gs
pop
arpl
ret
push
ret
out
dec
mov
inc
int3
jns
mov
loopne
and
mov
movsb
sub
push
loopne
or
and
cmp
and
dec
adc
fucom
ja
ds
mov
jl
mov
sahf
adc
sbb
jb
loope
movsl
out
cwtl
fs
and
inc
iret
inc
push
mov
xor
or
sarl
and
dec
loop
dec
mov
inc
in
ja
fs
inc
sub
dec
popa
enter
int3
gs
outsl
jp
insb
stc
and
xchg
ret
lcall
adc
fstps
xchg
mov
loope
das
iret
cmp
jbe
mov
mov
inc
mov
iret
cmp
imul
jo
jno
cmp
sub
stc
call
xchg
mov
and
mov
push
movsl
out
out
out
ret
push
fmulp
mov
cmpsb
and
pop
stos
push
cltd
je
jg
cmc
mull
pop
push
jnp
xchg
nop
or
mov
mov
pop
sti
ds
pusha
lahf
cmpl
std
imul
test
je
and
mov
push
xchg
push
insl
xor
pop
pop
mov
bound
hlt
cmpsb
xchg
pop
mov
sbb
xlat
js
fisttpl
stos
inc
push
out
fbld
sub
pop
scas
insl
dec
call
es
lds
les
mov
sub
sub
addl
js,pn
jnp
call
push
cmpsb
in
cmp
daa
popa
into
or
pop
fnstenv
sbbl
inc
mov
shll
and
out
jl
das
cld
fcomi
jns
out
testb
daa
maxps
mov
aas
mov
mov
ret
arpl
out
les
fbld
sub
rcrl
mov
mov
or
pushf
iret
out
sbb
or
inc
sbb
xchg
rcrb
xor
and
aas
push
imul
fldt
inc
into
out
cwtl
mov
ljmp
xchg
pop
adc
std
xlat
pop
inc
lret
bound
je
stc
and
mov
mov
stc
loope
sbb
mov
dec
sub
dec
repz
ret
aad
push
lods
mov
aam
cld
and
xor
flds
dec
sub
call
lds
add
daa
mov
xchg
out
add
repnz
pop
stos
std
test
add
and
jae
sub
xchg
shlb
mov
mov
sbb
pop
sbb
int
lcall
mov
xor
or
adc
incl
and
daa
mov
in
fsubrl
mov
test
and
mov
mov
xor
jl
lods
push
stc
xor
jne
pusha
fisubrl
fsubl
push
cmpb
sbb
push
dec
add
test
jl
shll
xor
fcoms
jae
pop
pop
ss
push
push
dec
adc
mov
mov
push
loope
sahf
ds
fs
lcall
call
and
lret
xchg
xor
jl
stc
rcll
imul
and
test
xorl
outsb
in
call
lods
test
jecxz
shrl
cli
mov
push
inc
pop
stos
adc
jno
xor
repz
out
clc
push
dec
pusha
cld
cli
loopne
push
cmp
dec
daa
js
pop
testl
pop
mov
mov
cmc
jmp
andb
mov
daa
test
fisubrs
and
adc
sub
xor
cmp
xorl
and
inc
xor
divl
lds
mov
lret
adc
xlat
xchg
xor
inc
out
add
addl
hlt
lret
in
add
jno,pn
dec
cmp
adc
push
inc
pop
out
jo
pop
movsl
mov
and
loope
rcll
in
or
xlat
cmp
aam
sbb
inc
nop
jg
mov
addr16
movsl
sarb
rorb
mov
mov
adc
pop
sub
dec
sub
ja
or
jp
inc
outsb
adcb
or
imul
xchg
push
pushf
or
inc
mov
xor
pop
xor
test
ret
in
cs
lahf
lds
flds
ljmp
xchg
mov
adc
outsb
sub
push
das
mov
pop
scas
call
leave
xor
mov
jp
mov
cmp
dec
xchg
es
sbb
adc
aaa
jne
dec
or
add
xorb
xchg
jae
dec
pusha
adc
jns
jns
adc
shl
fisttps
xchg
aas
dec
push
shlb
cmp
iret
mov
dec
mov
imul
cmpsb
mov
mov
rcrl
imul
insl
xchg
cld
rorl
stos
jle
mov
out
push
stc
nop
or
popf
pop
and
into
fsubr
xor
aaa
mov
xor
stc
sub
pop
push
jecxz
or
push
dec
mov
sbb
add
mov
jg
pop
out
xor
push
hlt
pop
cmp
jl
or
dec
ja
movups
loope
inc
adcl
adc
test
mov
ret
mov
jg
test
mov
push
inc
mov
inc
pop
xchg
cltd
push
int
mov
ljmp
jg
and
leave
repz
ficoml
push
and
adc
jne
ljmp
push
or
repz
pop
stc
cmp
sbb
nop
xor
cs
scas
outsb
mov
out
fildl
data16
sub
scas
xchg
lret
jnp
and
and
sbb
lods
jl
add
inc
jge
mov
enter
sahf
pop
pop
test
test
and
add
jae
add
adc
fs
mov
jg
mov
jl
ja
out
cmp
mov
flds
lahf
sahf
fsts
adc
sarb
mov
adc
jb
cs
loope
adc
pop
int3
sbb
cmp
pop
mov
dec
mov
sbb
push
inc
call
cs
test
add
jmp
cwtl
push
jmp
xor
ficompl
push
mov
mov
pop
push
jnp
lds
je
cmpsl
adc
xchg
mov
sbb
inc
inc
inc
popa
add
out
push
cmp
sbb
aam
xchg
test
xchg
dec
outsb
cmp
nop
pop
adc
adc
fwait
mov
add
orb
lods
or
addr16
js
adc
push
dec
imul
pop
mov
adc
xchg
sbb
test
adc
clc
jecxz
dec
mov
cmp
lods
lds
scas
add
and
add
cmp
mov
and
xchg
add
popf
stc
rcl
popa
jbe
clc
out
lret
enter
pop
dec
test
loopne
mov
lods
jno
dec
pop
adcb
ret
fsts
adc
add
inc
xchg
jno
pop
add
mov
lret
fnsave
mov
aaa
xchg
xchg
lahf
std
cmpsb
or
js
arpl
arpl
test
xor
out
iret
arpl
pop
jp
lcall
repnz
dec
inc
dec
das
pop
ret
imulb
xor
mov
jae
sbb
mov
cmp
loopne
test
scas
stos
mov
insb
cltd
popa
das
sahf
loop
ja
sbb
pop
iret
cmpsl
out
pusha
stos
lods
fdivrl
repnz
sbb
or
cs
sub
dec
cmp
pop
rcrb
mov
test
inc
or
or
mov
dec
mov
in
mov
jo
cmpsl
ds
pop
or
inc
sahf
jmp
or
push
xor
adc
rol
jae
or
push
shlb
pop
sarl
ret
pop
pop
ljmp
sub
lds
mov
cmpsb
sbb
lods
or
nop
mov
mov
mov
sbb
aad
push
mov
aas
xor
lea
xchg
mov
imul
stos
xchg
orb
sbb
lods
sbb
pop
arpl
sti
mov
pop
inc
ret
adc
mov
sbb
fwait
sbb
test
adc
mov
fiadds
push
xchg
and
dec
call
mov
pushf
lock
lods
daa
outsl
pushl
sti
shl
jge
std
push
xor
xlat
cld
insl
sbb
hlt
dec
loop
jne
mov
gs
insb
sbb
xchg
adcb
jno
pusha
jge
incb
outsb
iret
push
mov
rclb
mov
ljmp
xor
arpl
out
pop
lret
ds
mov
sub
int3
enter
inc
nop
loop
mov
ss
imulb
mulb
mov
ret
adc
mov
adc
xchg
hlt
insl
les
lret
adc
mov
test
cmp
or
mov
mov
outsb
xor
out
repz
rcr
or
subb
fcoms
jo
adc
push
push
lock
xorb
in
in
sbb
adc
xchg
dec
inc
aam
xlat
call
sub
pusha
test
cmp
add
insb
stos
and
insb
jmp
in
orb
scas
scas
push
std
insb
inc
imul
ds
and
cli
cs
push
lcall
mov
adc
insb
pop
xor
mov
repnz
mov
in
das
cld
mov
mov
dec
or
pop
push
aaa
and
stos
dec
jns
sbb
sbb
leave
push
xchg
lcall
rorb
in
and
movsb
jnp
cwtl
jne
dec
jecxz
push
insl
mov
dec
cltd
loop
aaa
add
inc
xor
mov
push
add
jge
xchg
inc
scas
cmp
int
inc
cmc
cli
xchg
cli
out
fstpt
mov
lea
cltd
movhps
fwait
push
adc
mov
jbe
pusha
sub
xchg
stos
in
inc
jnp,pn
fwait
mov
adc
and
mov
jb
lods
and
js
push
scas
cld
pop
xchg
inc
mov
pusha
imul
cmp
mov
jg
xor
mov
cmc
bound
test
cltd
mov
aam
mov
out
push
push
xlat
imul
mov
fcmovne
or
out
fwait
ret
daa
test
int
cwtl
pop
mov
inc
movsl
mov
xchg
adc
sub
int3
mov
sahf
insb
popf
lods
in
popf
mov
add
push
xchg
add
stc
dec
mov
mov
push
xchg
xchg
movsb
ret
jno
push
int3
push
frstor
fildl
pop
push
xchg
push
cmovne
loope,pn
jp
aaa
ljmp
inc
push
xchg
shlb
hlt
divb
cmc
cmp
je
jle
adc
insb
xor
in
gs
inc
ret
mov
imul
xor
rorl
lret
jns
sbb
pop
inc
lret
cmovne
in
popa
popf
mov
cmp
jo
loope
mov
push
jge
jae
xchg
mov
xchg
jmp
fisubs
out
jge
push
or
imul
stos
mov
inc
push
or
jns
loop
test
and
nop
and
jnp
jle
mov
push
arpl
jbe
mov
and
dec
push
cli
mov
stos
lea
mov
popf
dec
cmpl
filds
imul
ret
sbb
dec
js
add
out
cmp
and
repz
int
and
pop
mov
and
add
adc
cs
jnp
shll
or
fbld
jecxz
jo
mov
xchg
mov
imulw
xchg
sbb
out
pusha
push
inc
rolb
aaa
mov
call
into
scas
cmp
xchg
cmp
sbb
imul
adc
icebp
jb
adc
jp
mov
adcl
enter
cwtl
cmp
cmp
test
xor
fmul
push
pop
jae
icebp
out
sub
mov
xor
cs
pushf
lock
jle
xchg
xor
daa
and
jae
dec
xorl
in
cli
enter
mov
xor
and
enter
mov
daa
mov
inc
lahf
jle
jno
out
push
mov
ljmp
ljmp
mov
inc
mov
shll
outsb
or
scas
adc
inc
xchg
cmp
dec
scas
mov
into
pop
movsl
jl
cmp
les
lea
mov
rol
dec
int
push
imul
stos
aas
mov
push
fucomi
shll
test
and
jmp
lret
mov
cs
push
iret
cmc
pushf
pop
shlb
push
mov
out
jbe
mov
mov
add
in
mov
int3
fidivl
cmpsb
mov
mov
fistpl
loopne
pop
jae
std
jge
xor
push
jecxz
sti
xchg
cmp
ret
sub
sbb
push
xchg
sbb
lea
mov
mov
xchg
or
cmpsb
adc
cmp
fstl
inc
and
and
mov
push
ds
jbe
or
xchg
mov
dec
sbb
jb
incb
cli
xor
push
or
cmp
push
ret
pop
xchg
sti
ss
adc
xlat
loope
or
mov
aaa
jge
jae
fisttpl
push
add
or
cmc
popf
or
das
sub
dec
add
shll
jp
test
mov
jmp
xchg
mov
sbb
jmp
add
and
int3
sub
hlt
inc
push
lret
insl
jne
mov
loopne
lret
mov
pusha
stos
lods
add
dec
dec
aam
cmp
pop
mov
repz
loope
cmp
test
cmp
arpl
cmp
ljmp
push
loope
cld
in
or
pop
int3
adc
fwait
xchg
outsl
and
std
leave
xchg
and
inc
sub
sahf
add
imul
out
test
cmpsl
cmpsb
int3
pop
mov
add
aam
inc
sbb
stos
inc
es
lds
outsl
xchg
loopne
sub
jg
jae
or
xchg
mov
addr16
ja
jge
nop
in
into
mov
mov
movsb
in
aam
jge
add
push
hlt
xor
into
sub
dec
gs
aad
mov
sub
fwait
add
pop
inc
subb
lret
loopne
sbb
push
test
in
neg
cmpb
mov
inc
dec
cwtl
imul
mov
xor
fistpl
stc
xlat
pusha
loopne
repz
push
jp
insb
int3
adc
dec
dec
jne
int
ffreep
ds
cwtl
push
movb
popa
or
shrl
jg
jp
jl
ja
inc
jo
cmp
xor
stos
sub
push
pop
aam
dec
adc
push
xchg
and
aad
fiadds
cmp
or
call
xor
daa
push
push
in
mov
addr16
or
jne
or
fldcw
in
dec
inc
and
mov
mov
insl
push
icebp
dec
mov
cmp
jge
aam
and
adc
xlat
enter
push
jb
jg
fidivrs
xor
icebp
adc
sub
sub
inc
sub
mov
aad
or
mov
xor
lds
push
add
outsl
mov
hlt
addr16
out
movsl
out
cltd
adc
sbb
pop
add
aad
rol
lcall
loopne
popf
stos
mov
cld
jb
push
sti
mov
mov
outsb
inc
sti
dec
sub
fldl
xorl
arpl
and
and
jbe
jo
call
leave
cld
cmp
gs
or
in
out
arpl
iret
push
xchg
mov
insl
std
pop
gs
loop
in
outsl
add
push
push
hlt
or
pop
sahf
pop
aad
std
push
mov
xor
xchg
mov
mov
pop
jp
ja
add
push
std
lods
cmp
sbb
push
insb
inc
cmp
inc
and
push
fstpl
out
pop
imul
sbbl
xchg
sub
das
repnz
xor
pop
cmpsb
mov
nop
and
pusha
mov
in
jp
inc
in
sub
mov
bound
or
push
loopne
xor
jecxz
fidivrl
ljmp
les
icebp
dec
sbb
xchg
prefetchwt1
mov
and
cmpsb
repnz
loopne
stc
pop
mul
mov
in
icebp
je
setge
pop
mov
lahf
mov
sub
pusha
pop
jns
push
lock
sti
and
mov
dec
js
adc
sub
test
lock
leave
xchg
dec
in
je
cmp
in
outsl
fildll
mov
cmc
cs
push
sahf
loopne
mov
mov
insb
jecxz
dec
fcompl
out
or
js
xchg
or
pop
cld
xchg
es
dec
sub
rcr
scas
and
imul
test
jl
popf
sbb
in
mov
xorb
adc
jnp
add
and
cmp
loop
ficompl
aaa
mov
loopne
xor
fsubrs
pop
adc
decb
and
lods
inc
dec
adc
or
xchg
cltd
enter
call
daa
test
adc
stos
pop
jg
and
sbb
in
lds
mov
aaa
push
push
rclb
jnp
call
or
lea
in
pop
imul
jle
mov
ds
les
xlat
call
adc
mov
add
lcall
je
iret
or
test
mov
fwait
xchg
js
inc
and
stos
divl
pop
cs
adc
mov
xchg
inc
incl
sub
hlt
xchg
out
std
xchg
sbb
mov
cld
jl
pop
out
jge
das
hlt
das
div
stos
loop
jle
sbb
stos
aaa
inc
ljmp
push
or
aad
mov
and
cld
push
mov
outsl
ror
pop
jmp
cmp
sbb
cmp
es
jge
cmpsl
mov
shlb
jle
adc
jne
shlb
test
sbb
psubw
test
mov
lds
dec
sub
nop
sbb
xor
sbb
or
sbb
jmp
mov
or
gs
fadds
scas
push
das
xlat
in
in
xchg
sbb
inc
mov
mov
mov
fisubrs
push
jne
cld
dec
in
std
mov
jg
je
fcoms
mov
lods
mov
xchg
jns
cltd
sti
movsl
stc
xchg
or
cmp
scas
arpl
in
xor
js
mov
mov
stos
jbe
rcll
or
dec
enter
stc
push
mov
fsubr
fwait
mov
or
lods
inc
or
leave
mov
hlt
cmp
dec
xchg
inc
mov
cmp
mov
leave
lret
jne
jmp
and
gs
jae
push
xchg
jnp
cmc
xor
xchg
ret
inc
mov
cwtl
sbb
lret
adc
and
in
mov
cmp
and
push
sbb
mov
loopne
add
loop
inc
inc
add
imul
xchg
xor
push
outsb
into
fnsave
fdivrl
adc
inc
jne
in
adc
aaa
push
dec
push
cmpsl
pop
xor
jne
mov
in
pop
dec
xchg
xor
test
push
add
xor
nop
popf
pop
mov
inc
std
mov
fcoms
rclb
sbb
out
dec
aaa
enter
lret
sti
pusha
adc
daa
pop
jmp
int3
cmp
out
int
xchg
pushf
insb
ss
mov
dec
fistps
pop
test
dec
or
scas
daa
int3
cmp
jmp
sbb
sbb
add
dec
iret
mov
shl
pop
fdivrs
xor
movsl
and
das
test
xor
or
js
mov
push
dec
jb
xor
pop
mov
add
sbb
dec
jle
sub
es
cltd
ret
test
lds
xor
and
cld
fiaddl
mov
push
into
adc
ret
or
std
es
enter
test
fsubrs
mulb
dec
subl
cli
add
fmuls
or
mov
add
shlb
in
ss
je
jmp
mov
flds
push
push
mov
pop
rclb
movsl
fdiv
mov
or
sbb
scas
dec
arpl
fmull
lods
lods
xor
fsubrl
push
jge
jg
jne
mov
mov
push
clc
clc
or
mov
or
push
sbb
ds
out
pusha
mov
add
lret
dec
jp
xor
inc
push
pop
sbb
mov
scas
aad
and
pop
add
test
subb
add
repnz
lds
mov
dec
cmp
cmc
stc
leave
mov
inc
cli
arpl
jge
jno
push
inc
in
sahf
ss
adcb
insl
je
mov
push
hlt
lea
inc
bound
xlat
enter
jno
inc
stc
mov
cmp
sub
insb
sub
mov
testb
cwtl
sbb
shll
xor
fwait
stos
sti
push
mov
or
roll
imul
jmp
sarb
sub
out
cli
out
xchg
int
dec
int
test
shlb
mov
xchg
call
jb
mov
mov
push
ds
fmull
mov
push
mov
insb
lds
in
lahf
lea
aad
scas
mov
pop
leave
loopne
dec
repz
adc
lods
mov
lods
sbb
insl
inc
movsl
shll
scas
rorl
aam
ret
arpl
mov
ja
not
add
ja
jno
mov
int
loope
popf
xchg
popf
pop
mov
in
or
jl
sub
sbb
mov
adc
push
inc
sub
lret
loopne
mov
shll
ret
fisttpl
shl
mov
lahf
add
aaa
push
pop
fistl
inc
xor
rcrl
pop
clc
jb
std
cmp
jnp
jle
negb
adc
inc
gs
xlat
push
cltd
pop
das
repnz
xor
sbb
mov
aad
aas
pop
ficoms
cmp
sbb
mov
testb
sbb
sarb
mov
add
lea
mov
les
aaa
push
adc
push
out
and
jb
imul
xchg
pusha
shr
call
iret
ret
pop
fldl
mull
mov
out
fs
mov
insl
mov
and
cli
mov
lea
idivb
adc
mov
cmpsb
in
addr16
cli
xchg
fcmovu
mov
sub
pop
lcall
shlb
pop
lds
ljmp
daa
xchg
leave
test
addr16
movsl
pop
arpl
gs
pop
scas
push
stos
xchg
testb
push
or
sub
push
aam
mov
stos
call
and
or
iret
cmpl
and
sti
xor
shl
faddp
jecxz
iret
lock
loopne
mov
inc
dec
in
addr16
loop
sub
imul
loope
xlat
pop
push
insb
and
jns
mov
mov
insb
fldcw
out
mov
sbb
xor
add
lea
fmul
mov
rorl
arpl
in
adc
pop
add
xchg
lahf
fsubs
pop
out
es
mov
lcall
das
cmp
xchg
mov
dec
push
shrl
or
daa
jp
xor
in
cmpsl
fsub
dec
jo
pop
daa
sbb
mov
rcl
imull
ret
jno
icebp
addr16
sbb
dec
dec
adc
mov
push
in
ljmp
popa
repnz
sub
out
outsb
je
addl
imul
cltd
test
mov
icebp
scas
test
jecxz
or
and
pop
push
inc
fbld
cmp
in
cli
sahf
sub
push
dec
mov
out
movsl
add
rcll
cmpsb
lcall
push
jg
aad
mov
shrl
ss
fisttpl
push
clc
jmp
es
in
mov
xchg
loopne
jb
les
push
mov
mov
sub
xor
insb
xor
xchg
pusha
xor
adc
fmuls
mov
test
jg
pop
cmp
mov
pop
push
cmp
xor
cs
and
loope
xchg
popa
pop
mov
push
xchg
jne
out
xor
xchg
gs
pop
lods
std
adc
shlb
sbb
in
push
sbb
push
lods
test
das
xchg
rcrb
je
dec
and
xor
inc
stc
rclb
adc
hlt
fstp
mov
mov
pop
and
mov
mov
out
int
adc
loope
ljmp
xchg
mov
mov
lret
adc
imul
jle
ret
mov
push
mov
lret
icebp
scas
cmp
call
stc
imul
scas
imul
adc
jl
mov
subb
clc
mov
pop
mov
stos
bound
jg
out
pop
mov
inc
push
pop
imul
pushf
mov
movsb
push
sbb
jbe
aas
jge
andl
jo
jne
aas
test
lahf
or
inc
subb
adc
scas
lcall
sub
jo
add
mov
cld
into
pop
mov
into
cmp
dec
pop
xor
push
out
fidivl
loop
mov
nop
lret
sub
ja
and
sub
and
mov
out
loopne
xlat
gs
lods
imul
and
push
fsts
in
arpl
pop
ss
pop
cmpsl
mov
ret
mov
scas
jmp
aad
add
jbe
das
fdivrp
pushl
sarl
inc
inc
xchg
sarl
stos
repnz
cmp
jle
daa
pop
xchg
shrb
dec
aas
mov
jmp
xchg
mov
cmp
sbb
repz
int
inc
push
pop
testb
push
cld
dec
push
out
int3
xchg
cmpsl
pop
imull
scas
aam
test
jae
jnp
test
mov
cmp
imul
mov
adc
inc
popl
test
pushf
out
push
mov
push
aad
xchg
cmp
andb
push
insl
add
sub
xchg
push
repnz
and
jmp
das
push
repnz
sbb
xchg
movsb
test
jns
cli
imul
ljmp
stos
adc
mov
out
pushw
cli
lahf
sahf
test
sbb
xchg
cmpsl
int
inc
mov
data16
popa
cmc
rorl
and
pop
arpl
push
out
push
stc
jmp
stos
add
or
leave
lret
mov
and
movsl
push
cs
pop
out
sub
push
xor
popa
dec
pop
push
scas
hlt
lret
jl
arpl
and
push
insb
movsl
into
inc
mull
dec
shl
cmpsb
int
mov
imul
fstpt
cmp
xchg
jmp
jp
pop
mov
jle
mov
pop
lret
aad
add
pop
jno
jne
fcomps
or
aam
push
loopne
clc
pushf
sbb
js
shl
sti
lret
leave
ja
add
ret
pop
inc
push
mov
jbe
fstpl
out
push
leave
xchg
mov
rcrb
mov
xchg
xchg
sar
ret
xchg
adc
pop
clc
pop
stos
popf
pop
xor
mov
stos
popf
repnz
or
je
out
lret
mov
pushl
popf
repnz
lods
test
sub
xor
leave
mov
or
scas
pop
and
sbb
adc
push
sbb
out
xchg
xor
and
mov
rorb
dec
sbb
and
mov
pop
sbb
jbe
sub
sub
mov
sbb
jae
and
out
popf
xlat
ss
mov
adc
mov
test
inc
sbb
xchg
jno
mov
mov
inc
push
or
dec
pop
mov
dec
popa
out
cwtl
bswap
adc
jo
cwtl
test
cmp
xor
cltd
sarb
cltd
inc
mov
fsubrs
or
adc
stc
in
sbb
iret
subb
sbb
mov
adc
mov
jnp
push
push
or
ja
mov
mov
es
mov
js
xor
cld
mov
push
ja
in
mov
push
test
in
jmp
cmp
lret
xorb
subb
sbbb
mov
imul
outsl
mov
adc
or
push
shl
push
mov
mov
sub
cld
or
dec
aam
lds
mov
fs
dec
clc
add
push
insl
int
testb
es
xor
or
mov
mov
sub
adc
push
out
and
aad
add
xchg
out
pushf
jno
push
cwtl
cld
das
test
test
subb
mov
stc
jb
fiaddl
lcall
ja
pop
pop
cmp
dec
repz
dec
out
fs
imul
lea
mov
repz
rcr
pop
adc
cmp
mov
push
jle
add
fcomp
lea
xor
push
fsubs
mov
lods
push
cs
lret
stos
je
pop
lcall
mov
inc
test
ds
pop
mov
jecxz
jge
push
cs
mov
jne
or
push
jle
rcrb
sbb
inc
fistpl
adc
outsb
and
jae
aas
and
or
mov
dec
popa
mov
adcb
adc
push
jle
xchg
ja
mov
sbb
popf
pop
jge
pop
idivl
pop
adc
adc
sbb
pusha
pop
fadds
inc
jmp
test
cli
fildll
scas
xchg
jo
or
or
mov
in
or
in
scas
into
in
aaa
inc
fdivp
test
fs
cmpxchg
adc
xchg
outsb
lock
xor
jnp
mov
bound
and
jne
push
dec
js
ss
xor
cmp
push
mov
mov
outsb
push
jecxz
incl
cmpb
arpl
fdivs
push
push
sbb
dec
addl
jmp
lods
push
lret
and
jnp
in
mov
cmpsb
pop
or
decl
in
rcl
mov
ds
mov
lods
stos
ds
stos
call
sbb
dec
cmpsl
pop
jecxz
adc
lea
sbb
xor
inc
push
push
pop
icebp
repz
ljmp
lea
js
sub
shll
fiadds
loopne
jg
adc
or
dec
xor
jge
fs
fcoms
xchg
dec
push
push
dec
pop
aas
cmp
sub
or
addr16
dec
in
in
movsw
inc
jp
lcall
mov
and
outsb
cmp
test
dec
sbb
mulb
clc
popf
push
or
add
jns
insl
cmp
rolb
aaa
pop
icebp
add
shld
hlt
int3
cmp
sub
push
sub
lahf
mov
sar
dec
push
inc
pop
stos
fimull
pushf
fimuls
out
outsb
int3
sub
mov
ja
mov
mov
popf
or
mov
insl
push
ljmp
das
les
xchg
cmpsb
gs
dec
insb
mov
ret
pop
fsubrl
adc
adc
adcl
cwtl
mov
sbb
sbb
cli
adc
rcrl
pop
popa
fistl
ret
cmpsl
push
pusha
clc
stos
aam
pop
pop
rclb
adc
pop
cltd
and
xorps
sbb
loope
lea
cltd
or
fwait
mov
faddl
jecxz
sti
mov
xchg
addr16
inc
cld
icebp
dec
and
dec
out
sub
sub
lods
dec
fcomi
ja
push
mov
testl
jecxz
sbb
add
in
mov
fstps
mov
xchg
je
pushf
sub
test
jb
call
sub
add
popf
sub
add
dec
scas
push
pop
shll
sub
aas
sbb
cmp
sub
adc
out
stos
dec
cmp
flds
push
sarl
sub
xor
xchg
popa
xchg
mov
setge
gs
xchg
scas
sbb
mov
int
fistpl
push
loopne
and
sub
ljmp
fldl
lret
or
icebp
shlb
or
out
cmp
pop
xor
mov
push
xor
and
ss
or
flds
movsb
lds
cwtl
push
or
mov
shl
test
pushf
mov
pusha
add
mov
int
pop
dec
jnp
xchg
push
outsb
lds
adc
fwait
mov
lcall
mov
mov
sbb
ljmp
add
inc
cmp
adc
mov
mov
mov
sbb
int3
jno
push
pop
and
inc
jge
cs
mov
xchg
fidivrl
adc
push
lahf
lahf
add
inc
std
pop
hlt
insl
cld
sbbb
out
jg
dec
dec
push
inc
lods
xor
iret
cmpsl
lock
push
pop
int
fildl
mov
sbb
in
jp
cmp
mov
scas
add
push
in
cmp
adc
mov
repnz
cli
mov
mov
sbb
inc
xchg
lods
lods
pop
fists
jecxz
sub
lcall
inc
adc
insl
or
nop
cmp
lret
test
xor
mov
fstps
add
scas
loopne
cwtl
mov
loope
dec
xor
inc
jle
in
mov
fcomi
jno
jg
cmp
xchg
sti
jge
pop
out
add
or
push
inc
test
aas
nop
call
and
sub
mov
pop
loop
in
call
xor
push
mov
mov
lret
aaa
and
gs
cli
jp
js
add
pop
stos
movsb
or
dec
stc
sbb
xor
in
jl
mov
fneni(8087
roll
lcall
sbb
xor
mov
and
adc
jno
push
and
ljmp
sti
and
sbb
out
xor
sbb
sub
ret
add
mov
scas
dec
xchg
push
sti
mov
add
stos
cmp
jecxz
add
movsb
jge
cmp
sbb
sbb
cmp
push
int
outsl
mov
lods
outsb
jmp
or
add
sbb
mov
and
outsb
mov
pop
fldl
outsl
push
sbb
xor
or
ljmp
in
repnz
push
test
and
sub
dec
fstl
jno
std
notb
mov
mov
and
inc
out
popa
iret
mov
sahf
aaa
sbb
add
mov
xchg
notl
ror
mov
lcall
out
jecxz
movzwl
lods
sbb
xchg
arpl
mov
stos
ja
jp
sbb
rcll
repz
mov
push
xor
fnstsw
lret
adc
add
jae
leave
push
ss
jp
leave
mov
inc
cmpsl
mov
call
dec
sbb
lahf
inc
lock
jae
jne
ds
in
push
or
xlat
out
setnp
pusha
dec
aad
aaa
shll
fwait
mov
movsl
jp
in
sub
ficoml
jge
add
fdivr
outsb
cmp
lret
mov
fwait
mov
inc
dec
cwtl
daa
mov
gs
ljmp
mov
jmp
sahf
and
imul
jns
and
stos
mov
movb
gs
bound
pusha
sub
xlat
dec
pushf
push
std
lahf
popf
pop
into
jnp
mov
les
or
lret
cmp
jno
inc
add
xor
cmp
sbb
mov
and
and
jb
mov
scas
call
repnz
cli
imul
outsl
js
loop
xor
cld
fnstcw
fadds
pop
lahf
mov
adc
decb
je
ret
or
and
jne
xchg
clts
mov
xchg
stos
inc
aaa
cmp
cmpsl
or
rcl
and
or
mov
stc
mov
test
xchg
mov
lret
jmp
sbb
dec
mov
xchg
aam
mov
push
pop
push
movsl
into
mov
add
iret
imul
scas
lret
insl
outsb
xor
imul
inc
adc
dec
sbb
rorl
sub
fiadds
sub
mov
mov
mov
xor
std
inc
jne
aad
push
scas
sub
jo
jo
popf
iret
xchg
out
lret
sbb
xchg
int
mov
or
inc
mov
pusha
push
aad
cli
je
icebp
or
in
and
jo
cmp
sbb
imull
sbb
in
adc
adc
jge
sarl
push
bound
scas
jge
lds
jp
enter
or
or
fmul
pop
out
or
push
rorb
dec
push
jno
insl
push
aad
sbb
inc
cmp
rcl
push
roll
call
lods
rorl
push
test
fadd
xor
dec
movsl
sub
pop
lock
cmp
scas
testb
push
dec
in
shll
mov
push
mov
push
pop
dec
add
aas
inc
pop
int3
and
xchg
popa
jmp
mov
adc
fcoml
lods
call
sbb
dec
scas
stc
mov
repz
and
mov
jmp
data16
jge
xchg
push
js
cmp
movsl
cmp
dec
in
sbb
xor
nop
divl
xchg
cli
popa
out
je
jnp
popa
pop
sub
pop
xor
cmp
or
mov
add
nop
scas
mov
mov
adc
fwait
call
mov
add
dec
xor
jb
inc
add
add
xchg
cli
cld
in
sbb
jl
jl
jne
aad
cmp
or
mov
push
sub
arpl
jno
xchg
or
stos
ret
cmpb
cmp
cmp
push
fbld
cmpsl
xor
imul
aad
dec
out
sbb
or
add
stos
adc
and
dec
outsb
test
leave
pop
icebp
fimull
sub
iret
loopne
inc
xchg
adc
adc
shlb
cmovp
mov
sub
jnp
out
insl
sbb
pop
cmc
test
rol
imul
in
insl
dec
push
movsb
cmc
push
call
lret
pop
pop
or
jns
adc
outsl
jle
sub
fistps
mov
in
xchg
mov
jmp
shlb
dec
scas
addr16
cmp
mov
out
clc
repnz
sub
rcrl
add
das
mov
push
mov
push
js
frstpm(287
xchg
inc
mov
test
mov
dec
push
xor
push
mov
lret
mov
test
and
dec
sbb
xchg
sbb
ds
jle
add
jecxz
xchg
ss
jne
adc
aaa
jg
cwtl
lods
ljmp
fmull
test
jge
pop
inc
inc
xchg
cwtl
or
leave
sbb
testb
gs
stos
sbb
std
cs
jecxz
scas
adcl
in
cmp
pop
repnz
das
push
mov
add
outsl
push
test
adc
mov
and
xor
push
into
stos
xorb
aas
xor
loop
push
out
xchg
out
cld
bound
sub
rorb
loope
dec
mov
imul
mov
jbe
xlat
aam
es
adc
rolb
inc
cmp
cmp
rcll
ret
shll
sbb
inc
and
mov
dec
mov
xlat
cmpsb
gs
sub
sbb
ljmp
xchg
adc
in
sub
out
xchg
push
cwtl
pop
xor
rolb
mov
inc
cmp
sub
enter
dec
mov
mov
in
push
add
int3
xchg
xchg
or
pop
iret
mov
mov
push
add
push
mov
xchg
orb
cwtl
les
pop
aam
subl
fsubs
dec
cmp
jae
sti
fcomp
mov
mov
xchg
pop
push
bnd
loop
mov
dec
imul
inc
cwtl
fcoml
add
loop
out
movsl
lahf
out
rolb
sbb
sub
mov
sub
mov
cmp
push
cmp
jae
and
add
push
stos
adc
loop
cli
sbb
add
inc
aas
icebp
adc
xchg
daa
cmpsl
fcmovnb
mov
mov
jns
icebp
push
add
xchg
orl
sub
popa
dec
jecxz
inc
mov
iret
gs
es
jb
xchg
pushf
ja
xor
inc
lahf
dec
push
lds
adc
push
xor
dec
sbb
test
nop
lret
test
mov
xor
cld
mov
movsl
test
mov
mov
addr16
jl
sbb
ss
mov
mov
ror
int
subl
lea
popa
inc
test
mov
jb
jno
lods
and
repz
in
dec
push
cmc
pusha
out
pop
lods
adcb
pop
inc
out
addr16
dec
and
and
add
cmc
leave
cmp
aad
or
cmpsl
hlt
fwait
mov
jae
inc
inc
cli
mov
cltd
cmp
int3
inc
out
repz
sub
daa
test
inc
pop
pop
pop
insb
dec
stc
leave
sbb
mov
jge
cmp
xchg
push
sti
enter
adcl
lods
mov
loopne
insb
mov
and
xchg
push
xchg
and
dec
out
inc
fisttps
fnstcw
xor
repz
clc
ja,pn
daa
and
ja
adc
out
dec
xchg
mov
shrb
frstor
xor
cmpsb
jge
mov
shrb
pop
xor
add
daa
add
or
and
jnp
sbb
aaa
xchg
mov
dec
lock
jns
aas
rclb
sbb
inc
je
sub
lods
in
loopne
jo
sub
adc
mov
out
repnz
and
sub
cltd
imul
movsb
fcmovnb
xchg
add
negb
push
shlb
iret
pop
mov
pop
pop
jb
pop
add
into
outsl
push
push
sbb
add
fwait
mov
iret
jp
and
adc
fldt
push
adc
adc
in
push
dec
xor
adc
daa
push
lcall
test
nop
xchg
add
xor
lods
js
and
sahf
lods
jns
jae
out
cs
testb
pop
xchg
sbb
mov
mov
sbbb
sub
lds
adc
pushf
jbe
popa
adc
cmp
jmp
test
popa
stos
mov
ret
xchg
pop
dec
mov
cmpsb
out
fnstsw
test
fndisi(8087
adc
stos
cwtl
sub
or
xor
jp
adc
out
lcall
iret
push
jno
mov
imul
stos
rcrb
ret
fidivl
js
insl
mov
test
sub
add
movsl
inc
out
movl
es
inc
fs
xchg
mov
xchg
mov
inc
mov
pop
pop
gs
leave
mov
push
out
cmp
cld
jae
loopne
sbb
mov
out
pop
pop
lcall
push
xchg
xor
adc
loopne
xor
ljmp
bound
cli
aas
push
mov
sbb
cmp
loope
pop
rcrb
pop
fnstenv
xor
mov
add
subl
daa
xchg
scas
xchg
dec
int
ss
xchg
fwait
inc
sarb
adc
xor
add
pop
mov
call
insb
js
inc
pusha
and
xchg
jae
gs
jns
jp
aas
push
enter
scas
insb
xchg
pushf
jecxz
adc
cmp
dec
fstpt
xchg
xchg
dec
jb
gs
iret
jp
insl
cwtl
lret
pop
bound
add
dec
out
or
shl
repnz
mov
push
xor
repz
sub
jle
dec
xchg
scas
adc
and
sub
test
mov
push
adc
lret
xor
cmc
mov
testb
jecxz
pusha
daa
dec
sub
push
js
mulb
lahf
outsl
sbb
sub
out
push
inc
loop
mov
popf
ds
mov
pop
rcl
cmp
not
push
add
add
xorb
pop
mov
pop
sbb
and
pop
clc
xchg
inc
in
fcmovbe
sub
fcomps
add
movsb
jp
out
ret
pop
cli
adc
stos
dec
fwait
outsl
repz
and
or
pusha
ljmp
push
ret
les
nop
sub
add
rorb
xchg
dec
push
hlt
sbb
mov
jge
loope
mov
stc
sbb
inc
fdivr
bnd
in
test
in
in
sti
fidivrs
and
sub
pop
mov
imul
dec
aad
dec
cmpsl
xchg
adc
add
or
cmc
push
jns
rcll
mov
lods
jp
stos
jnp
sbb
sahf
add
out
aad
adc
push
in
or
or
push
lret
test
mov
lds
xor
call
lcall
cmp
js
jns
or
stos
fucom
cmp
loop
mov
push
sub
or
out
inc
mov
jns
aad
in
xor
inc
popa
adc
int
dec
ret
adc
fcompl
and
mov
fsubr
addr16
repz
jg
xor
dec
stos
scas
inc
push
add
cli
gs
jb
add
mov
xor
cmp
dec
add
es
mov
adc
pop
je
cmp
ljmp
inc
hlt
xlat
jbe
outsb
into
imul
cltd
jns
test
mov
in
push
adc
add
dec
pop
scas
jl
sbb
scas
fmull
or
ljmp
pop
lods
mov
test
or
mov
loopne
add
xchg
add
jg
pop
daa
or
adc
test
sub
repnz
inc
push
imul
stc
shlb
sahf
push
sbb
out
test
arpl
fst
clc
pop
loope
dec
dec
ss
inc
cmp
inc
or
and
dec
mov
mov
ss
das
aas
dec
sub
and
push
mov
cmp
mov
mov
cmp
mov
xchg
jp
out
mov
movsb
aam
in
xor
pop
cmp
dec
jbe
sbb
push
js
movsl
mov
mov
add
mov
jmp
mov
clc
inc
mov
jno
sbb
cmp
scas
and
push
mov
in
imul
adc
jle
push
fldl
aaa
add
vpandn
mov
jp
shll
or
sub
add
xchg
aad
dec
sbb
iret
cmp
call
stc
jp
aam
fwait
or
std
std
std
les
ficomps
imul
in
fimuls
mov
das
sub
jecxz
lods
adc
push
xor
pop
xor
cltd
pop
aas
sbb
sub
dec
or
stos
das
sub
adc
movsl
mov
lods
adc
xchg
pop
stc
lret
mov
insb
mov
sub
fisubrl
pop
fwait
push
jmp
repnz
or
or
push
lods
mov
adc
cmc
ret
inc
jbe
cmpsb
xchg
enter
cmp
inc
inc
mov
outsl
pop
addb
out
sbb
imull
mov
push
std
shlb
jp
xor
mov
add
mov
sti
into
cltd
adc
jns
fidivl
xchg
movsl
push
lret
lret
inc
pushf
jg
pop
push
adc
cmpb
sub
xor
pop
les
add
mov
jp
sahf
pushl
or
cld
cmp
fisttpl
push
std
mov
mov
test
xchg
mov
cld
shll
mov
mov
push
and
stos
jecxz
mov
mov
clc
adc
leave
sub
int3
cmp
mov
call
mov
inc
and
xor
or
aam
cli
mov
inc
adc
sbb
dec
sahf
jge
or
mov
arpl
stos
push
dec
int3
data16
shll
bound
xchg
scas
arpl
mov
sarb
cmp
mov
sub
and
std
lahf
int3
cmp
jnp
ja
mov
scas
adc
add
std
xor
or
imul
mov
jne
add
testl
gs
mov
aaa
ss
cmp
jns
aad
in
adc
test
cmp
mov
cmp
adc
leave
xchg
adc
dec
xchg
mov
mov
cmp
xchg
dec
icebp
or
jmp
xor
sub
push
mov
cmp
mov
lret
push
lcall
repz
and
arpl
mov
mov
xor
cs
dec
cmpsl
xchg
mov
xchg
inc
cmpsb
std
push
push
and
into
fiadds
cltd
lds
in
mov
and
pushl
xor
fstl
sub
xor
int3
mov
iret
lea
cmpsl
mov
add
inc
xchg
xchg
out
out
add
ja
rorb
mov
mov
mov
sarb
call
inc
mov
js
pop
out
jno
imul
xchg
popa
dec
pop
fidivl
pop
add
mov
icebp
jne
daa
outsl
push
loopne
outsb
test
inc
into
jmp
jl
inc
mov
test
sub
pushf
pop
nop
lock
fmuls
sbb
or
subl
or
push
xor
fimuls
jb
mov
aas
mov
inc
push
clc
xorb
push
in
jno
gs
mov
fidivrl
ret
xchg
sub
jl
xor
cld
or
jl
stos
stc
popf
pushf
shlb
ljmp
rcll
or
fildl
rcrb
pop
in
addl
ds
ja
jno
sti
pop
mov
hlt
pop
lock
cmp
or
jl
pop
inc
gs
test
fidivl
cmpsl
push
add
lock
movsb
sbb
cld
mov
fistpll
xchg
or
xchg
lods
push
mov
ja
adc
nop
add
cmp
inc
sar
enter
shl
mov
loope
mov
ja
insl
or
push
divl
cmp
das
adc
adc
mov
dec
sub
nop
push
imul
out
pop
inc
fsubrl
out
not
loope
mov
sub
hlt
or
stos
push
xchg
or
sahf
cli
arpl
enter
jl
and
jmp
lcall
mov
mov
mov
es
dec
imul
imul
sub
jl
inc
cltd
push
mov
in
cmpsl
cmpsb
dec
push
stos
repnz
mov
push
sbb
fsts
pop
xchg
push
lods
dec
sti
ror
je
lds
push
inc
scas
int
xchg
add
xlat
and
push
pop
mov
ja
imul
add
push
int
mov
nop
jnp
xchg
pop
mov
add
lcall
inc
adc
adc
fmulp
mulb
out
xor
jp
test
mov
push
mov
daa
sub
mov
cmp
push
and
mov
jnp
cmpsb
lahf
insl
push
fs
jle
jg
adc
dec
pop
dec
mov
leave
repz
mov
pop
push
inc
loopne
sbb
xchg
xchg
and
outsb
sbbb
jmp
mov
dec
hlt
sahf
inc
cmc
or
adc
stos
add
in
filds
int3
jb
lret
fcomi
jbe
bound
sub
jl
daa
cmp
push
or
lods
mov
scas
cmpsb
loopne
inc
arpl
inc
sbb
sti
jo
and
pop
fisubl
ds
xor
repz
or
test
ja
push
or
ret
movsb
gs
idivb
or
dec
loop
dec
push
ljmp
vpsubq
test
movsb
loop
fimuls
adc
shl
xchg
les
outsb
loop
jb
pushf
cmc
cmp
pop
js
shll
xchg
pop
inc
mov
mov
push
stc
repz
pop
insl
jb
cs
jae
mov
ret
dec
lcall
insb
ficoml
pushf
jbe
sarl
enter
push
in
test
or
jmp
notb
pusha
cld
sbbl
pop
sarb
testb
loop
sub
lret
or
mov
or
push
outsb
int
iretw
out
or
sbb
je
push
pop
dec
test
cmp
aam
and
ljmp
leave
adc
inc
dec
or
jae
in
adc
push
sti
sub
mov
ss
adc
jmp
lcall
iret
add
mov
and
push
or
inc
xor
ds
sbb
jns
jge
icebp
flds
mov
push
push
neg
sub
stos
inc
sbb
mov
rcrl
stc
or
xchg
dec
sub
jl
sub
fldcw
mov
or
or
and
pop
inc
iret
movsl
mov
jno
icebp
xor
xchg
pushf
scas
hlt
add
sahf
fmul
mov
or
outsl
or
nop
sub
sub
dec
cmpsl
out
js
ret
movsl
decl
cwtl
push
lahf
mov
outsl
adc
insb
or
es
sbb
inc
pop
jle
sbb
mov
adc
sub
mov
jg
mov
or
adc
adc
adc
pusha
sbb
lahf
aas
fstpl
xor
xchg
leave
or
int3
daa
out
js
mov
leave
mov
ret
and
cmp
movsl
loop
and
pop
aam
dec
mov
fstl
in
mov
and
fst
outsb
ret
aaa
rcrl
mov
lea
sti
cmp
add
mov
adc
push
in
cmc
inc
or
dec
adc
addl
jp
and
ret
shlb
cmpsl
sbb
jo
xchg
push
in
neg
mov
xor
dec
adc
inc
fchs
inc
mov
movsb
jno
shlb
orb
aad
rcrl
adc
loope
adc
mov
fsub
push
inc
fcmovbe
cmp
fiadds
mov
pop
pop
sbb
pop
xlat
and
inc
sarl
xlat
cmp
mov
lret
lcall
in
adc
adc
aaa
or
inc
add
cmc
out
cmp
jl
adc
popf
jp
pop
inc
jl
push
xor
or
arpl
iret
fsub
pop
sub
add
dec
repnz
cs
jge
rep
cmpb
stc
mov
lcall
mov
out
fninit
sbb
in
test
inc
push
add
data16
mov
loop
jae
sbb
adc
xlat
xchg
test
push
jno
push
jae
fisttpl
xor
mov
out
xchg
jle
lea
inc
cmp
rorl
sbb
or
inc
xchg
push
movsl
xchg
fildl
sbb
int
sbb
mov
in
pop
pop
hlt
and
jb
mov
or
notl
mov
pop
push
test
mov
stc
lcall
jg
jbe
ret
fsubs
das
add
push
xchg
imul
test
push
decl
mov
xchg
stos
mov
push
pushl
jl
xor
xchg
cmp
mov
arpl
push
or
mov
stos
pop
dec
mov
fsubr
mov
fimull
adc
add
xchg
out
mov
inc
xchg
subb
sbb
dec
inc
xchg
dec
dec
add
fidivl
adc
ficoml
sub
jno
es
add
ds
sarb
fnstsw
mov
and
or
fdivs
ret
xor
fwait
inc
mov
mov
jno
in
mov
scas
add
push
in
inc
push
add
out
mov
push
insl
out
mov
imul
jle
cs
pushf
mov
sbb
mov
inc
mov
fst
cmc
shrb
sahf
inc
dec
popf
dec
aaa
mov
adc
sti
mov
mov
add
lods
push
fdiv
jno
jge
int3
jno
cmp
xchg
push
out
test
data16
shll
push
jmp
fwait
test
xor
xor
test
stos
jne,pt
inc
cmpsb
xlat
mov
add
adc
inc
xchg
shll
mov
and
mov
cmpsb
fldt
cmp
push
lds
bsf
sub
jge
adc
fimull
sub
fstpl
or
loop
sbb
lcall
dec
pop
mov
sahf
incl
popf
out
pop
sti
mov
test
dec
std
xor
ss
cld
push
ret
pop
push
push
dec
hlt
mov
jecxz,pt
sbb
mov
xor
inc
mov
rcrl
jae
fucom
repnz
and
fimuls
and
int3
stos
mov
inc
in
jne
push
mov
sub
jp
nop
sbb
jnp
push
flds
inc
sti
mov
hlt
inc
xchg
mov
push
or
into
push
jge
je
fldt
popf
mov
jbe
fldt
adc
dec
and
mov
push
les
pop
push
in
int3
pop
sti
xchg
sbb
lret
vxorps
mov
fcoms
insl
lock
jle
leave
sti
xchg
sub
loopne
fwait
adc
and
mov
shll
repz
mov
movsb
hlt
clc
arpl
movl
add
addl
movsb
jl
orl
nop
lods
loope
popl
addr16
test
aaa
cmp
fucomp
lea
loop
cmc
xchg
mov
dec
clc
mov
xchg
pop
xchg
outsl
cs
push
push
sarl
add
jecxz,pn
xchg
mov
push
or
lods
shrl
mov
inc
out
sbb
mov
cs
mov
ja
jl
sub
mov
pop
int3
lret
pop
out
out
or
cmp
dec
cmp
fldt
mov
fwait
xchg
jp
fwait
int3
cmp
aad
ds
ds
mov
adc
jecxz
and
cld
mov
mov
pusha
leave
jmp
xlat
mov
lcall
sti
das
jecxz
lret
imul
ret
scas
lret
mov
inc
add
push
mov
cmp
dec
out
das
imulb
mov
push
adcl
in
daa
xor
lds
cld
stc
push
add
xchg
xchg
pusha
push
jns
jnp
adc
sub
xchg
repnz
into
or
faddl
hlt
test
dec
pop
fidivs
outsl
add
inc
mov
push
test
sbb
hlt
daa
mov
shrb
add
std
jo
aam
or
mov
xchg
frstor
sub
pop
inc
out
insb
std
in
dec
mov
ds
mulb
sub
and
sbb
xor
add
cmpsb
mov
aaa
xchg
push
pushf
sbb
cmp
add
jb
add
sbb
mov
sub
mov
pop
nop
inc
add
mov
insb
xor
cli
in
shrl
xchg
xchg
push
mov
adc
lret
shlb
les
pop
adc
std
xchg
adc
aad
pop
cmp
xor
or
daa
sub
mov
inc
ja
fidivs
sahf
inc
jge
lahf
cltd
cmpsl
adc
push
rclb
mov
adc
xchg
sti
ss
fdiv
fldl
or
push
add
scas
int
adc
mov
shlb
lret
notl
imul
imul
push
daa
dec
cmp
popa
pop
ljmp
sub
dec
mov
jg
movb
lahf
xchg
movsl
sbb
adc
cmp
xor
xchg
dec
sbb
popf
xor
pop
lods
pop
shlb
sbb
aaa
out
add
stos
enter
scas
mov
push
inc
or
mov
dec
dec
cmp
sub
sub
sbb
xchg
lods
lock
movsl
cmpsb
jnp
out
in
adc
add
inc
xchg
cmpsl
xchg
ds
and
push
jl
dec
inc
das
jecxz
pop
lods
lods
xor
mov
dec
pop
fs
fldt
cmpsb
xchg
js
dec
repnz
push
lods
mov
repnz
hlt
je
push
fcmovnb
inc
hlt
shr
data16
pop
cmp
xor
orb
sarb
push
xchg
and
fmull
mov
jmp
je
cli
pusha
pop
shl
repnz
sbbb
pop
pop
inc
adc
sub
insb
dec
push
cmpsb
sub
jnp
pop
xchg
icebp
dec
stos
jo
jge
lret
lahf
add
outsb
test
out
rcll
or
mov
inc
sbb
and
iret
or
rcl
out
mov
dec
test
add
mov
push
ja
jbe
scas
ljmp
cmp
xchg
xchg
mov
daa
inc
inc
pop
sbb
mov
cmp
out
jbe
popa
pusha
cli
retw
cmc
leave
insb
mov
and
popa
pop
inc
cli
lock
loope
fdivr
ret
ja
mov
in
insl
adc
insb
mov
inc
pop
cs
pop
and
mov
add
and
es
or
adc
scas
mov
stos
movsb
xchg
mov
mov
sub
dec
hlt
aas
xchg
sbb
sti
push
xor
mov
out
jle
ljmp
lret
cwtl
nop
push
add
or
shlb
jge
jno
pop
push
jmp
lods
dec
movsl
sub
pop
jne
in
add
mov
pop
mov
xlat
sub
cmp
call
lcall
ss
sub
clc
sahf
je
adc
addr16
rolb
jno
mov
sahf
lods
lea
bound
pop
dec
divl
stos
push
mov
xchg
in
adc
gs
inc
xchg
push
or
fdivs
jns
xchg
xchg
jmp
fwait
add
adc
jbe
push
inc
call
sahf
jns
xchg
push
pop
movsb
pop
jle
cmp
xchg
aaa
xchg
add
sbb
push
sbb
dec
push
int3
lods
adc
iret
cmp
and
je
sbb
sbb
xor
cmpb
jno
arpl
movsl
in
jl
xor
pop
and
rcr
and
push
mov
mov
dec
in
mov
xchg
adc
add
test
leave
enter
gs
repnz
jb
xor
pop
sbb
push
push
insb
jnp
mov
xchg
loopne
cmp
mov
adc
mov
jp
jno
enter
xchg
cmpl
daa
loopne
and
add
pusha
inc
mov
shlb
push
test
pop
lods
dec
push
jo
dec
insb
xchg
mov
out
sbb
cmc
push
insb
js
adc
call
shrl
push
sbbl
lcall
and
mov
mov
jl
jmp
xor
sbb
sbb
lock
imul
pop
int3
mov
cmpsl
ss
in
xchg
jns
add
ret
int3
push
stos
mov
sub
jnp
xchg
xchg
aad
fwait
jae
or
in
jle
mul
mov
or
fimull
and
pop
icebp
test
jecxz
jecxz,pn
data16
lret
inc
lret
ss
jmp
pop
lods
je
shll
mov
add
cmpsl
mov
gs
jl
cmpsl
repnz
subl
repnz
pop
ds
flds
pop
out
fwait
mov
adc
jbe
lahf
mov
adc
stos
rep
mov
popl
dec
mov
jl
insl
mov
mov
nop
hlt
fucomip
xchg
cmc
inc
sbb
cs
mov
inc
aaa
adc
mov
int
jl
fcoml
fcomi
pop
cmp
adc
cwtl
jg
mov
jnp
cmp
xor
jp
pop
pop
iret
mov
add
inc
fs
inc
pusha
sbb
pop
scas
xchg
mov
aad
cmpsl
inc
out
dec
in
dec
pushf
xchg
test
in
mov
pop
add
mov
mov
cs
fisubrl
xchg
dec
lea
dec
mov
loopne
dec
lret
cmp
into
sahf
test
jge
je
imul
dec
xchg
adc
hlt
stc
andb
xor
mov
insb
or
sbb
pop
out
lods
or
add
idivl
mov
int3
ljmp
push
push
loop
vpaddw
dec
adc
push
inc
mov
stos
sbb
push
or
jbe
ja
inc
mov
pop
adc
in
push
or
int
mov
mov
jecxz
sbb
cmp
cmc
sub
mov
das
fsubrl
pop
arpl
icebp
test
rorl
dec
add
mov
out
or
adc
jmp
push
and
ljmp
loope
jge
inc
mov
adc
fcmovne
movsb
fldl
test
insl
out
pop
daa
and
cwtl
inc
jb
lock
int
rcll
mov
add
imul
adc
sub
pop
push
fstps
pop
out
lods
mov
out
cmp
mov
cmp
cmp
scas
xchg
popa
int
xchg
addr16
xchg
pop
dec
mov
outsl
push
mov
imul
add
mov
sub
cld
movsb
and
aaa
int3
sub
sub
mov
outsl
cli
pusha
add
test
data16
pusha
ret
cmp
daa
mov
mov
add
mov
xor
outsb
int
test
push
les
or
jmp
jecxz
pop
xor
mov
enter
or
rorl
notb
dec
mov
es
adc
adc
sub
lea
jg
dec
xor
and
outsb
pop
aas
lret
out
flds
stos
repz
or
mov
bound
cmp
inc
mov
xchg
xchg
in
cld
xchg
fbld
stos
push
xor
xchg
xchg
es
cmp
xor
xchg
movsl
cmpsb
mov
cwtl
iret
scas
rcl
xor
loop
mov
pop
mov
ret
pop
and
movsb
shll
inc
outsl
pop
push
adc
add
pop
or
cwtl
fistpl
insl
inc
movl
jl
mov
dec
fwait
inc
adc
and
xor
aas
dec
shrb
daa
push
imul
mov
mov
adc
mov
sbb
cs
mov
push
mov
xchg
lea
sub
sarl
shl
out
sub
mov
outsl
out
fs
push
jle
insb
mov
fbstp
int3
xchg
or
cmpsl
lea
jae
jmp
stos
shrb
js
pop
rclb
pop
ljmp
mov
xchg
daa
sbbb
jp
popf
cwtl
push
and
mov
jp
mov
xor
popf
in
inc
repz
mov
outsl
mov
mov
cmp
aad
jmp
xor
sti
pushf
mov
iret
and
jg
push
adc
jo
jnp
out
mov
inc
cmpsl
ret
or
mov
rolb
mov
jb
mov
push
jecxz
xchg
in
and
sbb
cwtl
addb
aas
inc
shlb
loope
sbb
jg
or
repz
iret
add
int3
mov
pop
loope
int
jge
mov
loop
fcomps
mov
mov
int3
icebp
xor
lds
cld
xchg
lods
sbb
sub
je
sub
mov
out
iret
adc
cmp
aaa
jecxz
cmp
jno
dec
dec
jge
lcall
lods
add
repz
cs
cmp
loopne
adc
xor
ret
lods
orl
lahf
dec
cmp
mov
xchg
divb
adc
ret
aad
rorl
loop
inc
out
mov
jae
je
or
lods
inc
das
jbe
or
sub
mov
outsb
int
test
nop
bound
decl
xchg
sti
mov
cmp
mov
sbb
test
xchg
dec
add
xchg
rclb
out
adcl
insb
jp
aam
push
fdiv
loopne
dec
inc
mov
mov
mov
in
int
and
aas
pop
add
sbb
fdivrp
imul
fiaddl
cmp
fnstenv
jne
lahf
lret
pop
pop
add
inc
push
dec
jp
test
lret
xchg
pop
sti
and
xchg
repz
popf
xor
loopne
cwtl
push
mov
sub
das
sbb
adc
mov
cld
dec
std
mov
adc
and
cmp
nop
je
mov
lea
les
in
data16
mov
popa
fwait
add
fistl
rclb
sub
mov
push
sub
inc
mov
jae
popa
mov
sbb
nop
orl
lock
mov
jg
mov
lret
popa
push
movsb
mov
and
and
cmp
sbb
push
clc
sub
dec
sbb
sub
outsb
loop
mov
bswap
aaa
hlt
cmp
int3
lock
imul
pop
fsts
mov
cltd
leave
cmp
lea
inc
aad
add
jge
jns
push
sub
push
iret
aas
in
sbb
and
mov
rcrb
aad
mov
es
cmp
int
adc
loop
mov
aaa
push
mov
shrl
daa
push
inc
cltd
shlb
jecxz
out
jge
mov
js
push
rcrl
fprem
xchg
add
push
icebp
aaa
lret
clc
fcoms
mov
sub
jae
leave
jge
outsl
mov
int
and
sahf
sub
xchg
push
cld
xor
shlb
and
xchg
add
leave
test
mov
ret
lock
rcr
dec
test
cmpsb
cwtl
mov
in
push
lea
les
jecxz
bound
xorl
fsubl
lahf
orb
and
cmp
out
in
jecxz
test
add
sarl
int
std
push
daa
cmp
bound
push
loop
pushl
fs
push
adc
ljmp
jbe
aam
inc
int
ja
cltd
xor
mov
xchg
sub
fadd
adc
fadds
xchg
rcll
jbe
mov
xor
int3
jb
orb
inc
lods
negb
add
jno
jle
xor
loop
mov
loop
sti
aaa
mov
test
dec
imul
push
push
push
pop
jecxz
inc
add
push
mov
add
rorb
outsl
dec
mov
insl
test
shll
push
leave
lret
mov
lcall
out
xor
cmc
fmul
sar
sub
in
sbb
nop
jno
pop
cltd
push
pop
adc
or
fildll
popf
adc
es
xchg
sti
insl
sar
and
sub
mov
rcrl
sub
into
jo
mov
xorl
inc
in
cmp
pop
mov
mov
shrl
das
mov
sub
mov
loop
cmp
xlat
mov
dec
cmp
sbb
lea
and
jmp
jg
and
mov
andb
cmp
and
inc
xor
jg
and
pop
shrb
leave
cs
or
sub
mov
mov
jp
outsb
xchg
add
push
xor
out
mov
push
cwtl
lea
das
xchg
outsl
jae
in
in
sbb
xor
inc
daa
out
fimull
pop
pop
ret
ss
xor
push
adc
gs
mov
mov
mov
dec
adc
mov
cmp
dec
iret
add
sahf
pop
mov
jle
sub
pop
pop
loop
xor
lahf
or
mov
adc
cld
push
clc
or
jp
dec
xor
ss
imul
insb
sub
xchg
push
in
std
jo
lock
fcompl
mov
out
popf
icebp
ret
mov
sbb
mov
hlt
cmpsl
insl
repnz
or
iret
lcall
push
not
mov
xchg
sbb
cs
mov
pop
and
daa
push
hlt
mov
aad
mov
rcrl
lret
lods
push
adcb
jnp
js
sti
daa
shlb
pop
std
notb
subl
movsb
test
adc
pop
mov
and
lret
mov
out
jae
int
and
dec
and
xorl
insb
push
rorl
sbb
or
in
adc
out
adc
mov
pop
push
adc
ljmp
cwtl
mov
insl
mov
fucompp
xor
fistl
fldenv
pop
ss
fwait
leave
dec
xchg
pop
or
aas
xor
lcall
test
or
sbb
jecxz
add
jp
mov
or
xor
iret
aaa
and
inc
iret
xchg
jnp
movsl
sub
xchg
shll
mov
movsl
inc
cmc
in
and
jl
xor
ret
scas
ds
pusha
in
repnz
xchg
jmp
inc
xchg
inc
and
mov
cld
gs
loop
pop
sbb
dec
mov
mov
iret
mov
fs
adcl
sub
and
sub
or
out
push
mov
jns
lods
jp
nop
mov
sbb
scas
in
mov
lds
lods
push
add
add
fs
lret
in
bound
push
pop
fcoml
scas
push
in
dec
add
cld
in
fwait
xor
rcrb
pop
add
stos
cltd
xchg
lcall
jg
fucom
lahf
push
sub
cmp
rorb
xor
jns
clc
inc
sbb
xlat
bound
push
mov
xor
out
aaa
aam
and
mov
addr16
jg
iret
cs
out
stos
mov
sub
std
in
xchg
push
push
adc
loopne
push
sbb
ss
imul
or
mov
inc
ja
add
mov
push
mov
ljmp
xor
sub
jb
and
cs
xor
dec
dec
imul
in
jle
adc
dec
cmp
add
push
pop
or
adcb
ds
adc
add
cmp
mov
into
sbb
repz
mov
xlat
idivl
sub
rcl
fidivrs
aad
dec
mov
xchg
sarb
test
cmp
js
test
bound
out
lret
cwtl
pop
push
retw
subb
pop
fs
and
ficoms
cmp
mov
std
lea
pop
xchg
push
dec
leave
mov
fistps
push
js
orl
pop
ret
das
push
push
into
ja
mov
frstor
stc
mov
jo
fisubl
mov
pop
testb
test
xchg
jbe
sarl
cld
shrb
inc
arpl
adc
shlb
shrl
ret
je
mov
test
fld
or
jne
push
movsb
mov
iret
js
mov
xchg
int
pop
stos
cld
test
es
cwtl
in
mov
mov
loop
in
fildl
push
ljmp
dec
xchg
or
sarb
add
jbe
data16
xchg
sbb
addr16
xchg
jecxz
ja
jbe
sbb
add
pusha
sub
mov
hlt
stc
js
movl
pop
adc
cmp
movsb
mov
test
jmp
jp
sub
loop
mov
sub
xchg
pusha
dec
mov
mov
adc
pop
xlat
scas
insb
cmpsb
cmp
inc
dec
xchg
fimull
enter
lods
and
jae
mov
jg
data16
cwtl
mov
das
cli
pop
mov
sub
fwait
mov
pop
lcall
loopne
push
or
les
jg
call
test
or
and
mov
jle
aas
xchg
jbe
pop
mov
cld
jne
adc
jae
rcll
inc
lahf
mov
mov
mov
mov
mov
imul
inc
stos
ljmp
mov
add
not
pop
and
jp
push
or
push
cmp
dec
das
dec
dec
cwtl
ficomps
fsubrl
aas
scas
cmove
add
push
mov
fs
movsb
sub
pusha
std
jle
add
fstps
adc
lcall
or
add
aaa
daa
mov
into
lcall
push
mov
add
iret
shlb
pop
bound
cmc
pop
insl
int3
sti
mov
inc
lods
xlat
fwait
sbb
cmpsb
iret
pop
mov
xor
push
iret
fstl
add
xor
loopne
or
add
in
fimull
mov
dec
je
xchg
mov
subb
test
mov
xchg
and
fwait
cmpsl
shl
cmc
cmpl
paddd
inc
pushf
es
das
fcomps
cltd
jecxz
inc
pop
sbb
inc
imul
iret
xor
fdivl
xor
jnp
call
add
ja
cld
cmp
mov
ret
notl
jb
sar
pop
lret
std
inc
lahf
cmp
dec
jp
call
shlb
adcl
and
test
sub
push
movsb
sbb
sbb
and
insl
inc
adc
push
sbbb
fstpt
jmp
addb
shlb
lret
sub
in
repz
xchg
mov
and
es
dec
bound
pop
xchg
mov
push
stc
lret
cwtl
setg
iret
inc
test
aam
aaa
pop
jnp
mov
ficompl
test
sbb
inc
mov
fcmovnu
sbb
push
sub
ja
ja
and
sarb
int
ja
dec
fwait
ljmp
leave
nop
clc
and
fucomp
ja
inc
xchg
and
outsl
rorb
push
add
mov
rcrb
adc
fcompl
jl
popa
jbe
pop
in
mov
cmp
scas
sub
inc
xchg
mov
mov
mov
mov
dec
scas
out
ds
cmpsb
sub
mov
orl
roll
mov
imul
sub
pop
inc
js
xchg
bound
popa
or
je
pop
xlat
xor
or
cmpsb
jns
imul
out
cmp
icebp
rcr
and
stos
pop
or
cmpsl
xor
pop
sbb
lock
out
sbb
dec
nop
push
add
int3
inc
dec
push
lret
out
xchg
test
xchg
pop
pop
fsubrs
sbb
ja
push
repz
shll
std
stc
mov
std
inc
ret
mov
pop
xor
xchg
mov
scas
sub
dec
cld
sbb
insl
push
enter
or
out
cmc
dec
inc
sub
mov
cli
daa
nop
pop
jecxz
ss
or
jae
push
arpl
dec
push
jbe
mov
test
mov
dec
adc
into
insl
adc
cs
and
ret
ret
mov
cs
pop
xchg
cmp
out
inc
pop
dec
jo
inc
mov
dec
call
ret
and
mov
inc
out
adc
je
arpl
sub
adc
jl
scas
cmp
pop
data16
and
shr
insl
push
icebp
insl
mov
add
and
sbb
jo
push
dec
mov
xlat
pop
addr16
jno
imul
push
sub
das
jg
jae
rcrl
mov
into
sahf
notb
loope
jns
jno
test
inc
outsl
mov
sub
xor
leave
rcll
test
div
fucom
imul
mov
jno
dec
adc
add
mov
adc
sbb
fildl
into
jmp
add
push
jo
jns
add
cmpsb
out
sarl
pop
cmp
gs
inc
daa
push
orb
inc
arpl
jbe
test
je
xchg
or
add
push
cld
js
inc
push
adc
mov
loopne
pusha
mov
ds
inc
mov
stos
mov
dec
push
dec
xchg
ds
cmp
mov
pop
jbe
ret
data16
push
mov
dec
je
xor
inc
xlat
adc
imul
push
dec
dec
jb
push
mov
les
int3
push
sub
lea
cmp
push
mov
dec
and
mov
insb
pop
sub
lret
push
popa
mov
jne
mov
cmp
pop
sbb
jmp
ss
iret
cmpsl
call
mov
clc
push
pusha
shrd
xchg
mov
cmp
mov
dec
loopne
mov
shll
add
xchg
dec
mov
cmc
dec
ret
rcr
shlb
out
incb
test
push
mov
fldcw
arpl
ret
pop
lock
xorl
test
jge
dec
cmp
into
cmpsb
adc
sbb
jns
dec
jecxz
sbb
cmp
in
test
push
mov
pop
push
dec
xchg
mov
das
xchg
filds
jbe
addl
lret
jmp
jg
je
iret
xor
cltd
xchg
mov
in
aad
adc
in
xchg
lock
mov
aam
inc
jge
hlt
leave
xchg
cmp
xchg
into
sub
movsl
stc
mov
add
sbbl
les
lock
sbb
stos
scas
xor
std
jp
dec
push
je
pop
into
shrb
lahf
dec
sub
push
xchg
sarl
loope
or
mov
sbb
push
jo
std
push
mov
mov
mov
mov
cs
out
dec
xorb
das
ficoml
jmp
nop
push
sub
imul
insl
loop
mov
pop
fdivr
add
in
fidivl
xchg
cmp
cli
fcoms
cmp
test
push
jle
jecxz
cli
aad
sbb
and
cwtl
out
lcall
fucomi
sbb
in
pop
stos
pop
xchg
inc
sub
ss
sti
mov
andl
clc
imul
jns
push
sbb
push
sub
inc
sub
out
cmpl
aaa
and
and
jp
out
push
adc
cmp
rcll
dec
cmp
daa
sbb
cmp
dec
sbb
js
inc
cmp
stos
inc
mov
insb
xchg
pop
mov
jnp
pop
mov
je
hlt
lods
and
clc
ds
adc
and
ljmp
icebp
cltd
inc
mov
pop
cmp
push
cltd
stc
add
dec
cmc
add
daa
nop
cmpsl
cmp
pushf
stc
mov
mov
lret
mov
test
test
lahf
xor
ljmp
push
sub
cmp
out
rcrl
pop
xchg
popf
jmp
cwtl
jae
iret
push
repnz
cmp
lods
ja
adc
push
outsb
jns
data16
flds
or
jl
popa
sbb
nop
aas
add
mov
pop
sbb
stos
imul
fmuls
repnz
jl
or
mov
stos
cmp
pop
repz
notl
js
divb
jbe
cs
jp
inc
pusha
cmovb
lret
iret
mov
xchg
jno
add
gs
nop
fcmovne
inc
pop
cmp
mov
sbb
cmpsb
rcll
stc
or
lods
mov
xchg
lea
fidivs
xchg
pusha
xor
outsb
pop
test
bound
inc
mov
rolb
loop
addr16
psadbw
adc
sti
aam
inc
and
int
les
cwtl
int3
jmp
mov
xchg
fs
enter
ja
aad
ds
xchg
sbbl
pop
jg
xchg
mov
mov
lods
clc
push
add
pop
je
jno
data16
push
and
ljmp
mov
jnp
cld
adc
jmp
sub
fimull
xor
mov
dec
cmp
push
inc
mov
dec
or
push
push
enter
insl
popa
adc
jle
pop
cmp
cmpsb
rcrl
adc
cmp
xlat
push
mov
sub
mov
int
loopne
enter
jp
mov
out
cmp
insb
cmpsb
sub
cmp
mulb
lds
push
pop
cmpsl
inc
mov
inc
jmp
add
pop
mov
xchg
inc
adc
rolb
es
jmp
mov
inc
xchg
fsts
xchg
add
push
adc
jbe
outsl
push
dec
pop
jle
fistpll
push
popa
xchg
shll
das
loop
aas
dec
xchg
jns
push
in
pop
stos
notb
push
jnp
adc
cmp
push
fstl
sub
ret
adc
pushf
inc
nop
and
and
daa
and
mov
push
addr16
pop
inc
push
pop
lds
pushf
xchg
movsb
inc
dec
xchg
dec
and
push
mov
sbb
icebp
lahf
mov
xlat
xchg
loopne
fcmovnu
mov
lods
mov
and
out
fidivrl
rcll
xor
rorl
lods
ds
pop
stc
scas
cmp
les
mov
pushf
cltd
push
xchg
push
scas
shrl
orl
test
jmp
push
lods
dec
and
stos
pop
ret
ret
sahf
adc
jge
movsb
addr16
fildl
jnp
scas
mov
std
inc
add
add
or
xchg
aas
lahf
xor
dec
add
sub
iret
mov
dec
cltd
cmpsl
arpl
sbb
ds
lods
iret
ss
in
mov
rcrb
xchg
jbe
xchg
mov
out
divb
mov
pop
or
jns
mov
mov
sub
xlat
xchg
lds
jmp
jae
pop
sti
call
mov
or
and
ja
in
imul
std
dec
int
xchg
add
inc
mov
incl
mov
jbe
push
jae
movsl
int
rol
inc
sub
iret
imul
xor
ds
std
out
ret
adc
jge
or
rol
in
fwait
xor
adc
test
fdiv
scas
dec
or
rorl
add
inc
lock
xor
sbb
cli
sti
mov
lahf
push
dec
rcrb
popa
aad
out
scas
test
in
mov
push
in
adc
sub
loope
std
outsb
sbb
xor
mov
ret
test
add
jnp
mov
icebp
clc
shrb
cwtl
shrb
xor
jo
fmull
push
sbb
xor
enter
push
or
icebp
imul
aad
dec
aas
mov
jmp
aas
ret
mov
fistpll
add
inc
xor
xor
inc
jno
sub
fwait
insb
adc
ret
xor
test
pusha
xor
cmp
add
push
sub
idiv
or
pop
fdivrs
sbb
pop
insl
insl
cmp
lea
rcr
dec
and
mov
mov
jae
and
sub
sub
sub
mov
into
pop
ret
or
and
lcall
out
inc
repnz
jne
enter
push
nop
popf
or
fidivrl
mov
stos
mov
adc
je
rol
and
mov
inc
ret
jg
or
call
sar
jns
pop
push
addl
sbb
inc
repnz
sub
dec
pop
dec
mov
andb
mull
inc
into
sub
sub
dec
push
push
cmpsb
dec
stos
mov
daa
push
in
mov
aam
ficomps
or
xchg
jmp
and
mov
cmp
push
jp
in
or
cmpl
movsb
cwtl
sbb
xchg
xchg
mov
fildl
daa
ss
inc
in
icebp
or
xor
pop
add
xor
ret
stos
push
out
imul
pop
xchg
lahf
loop
xchg
dec
pop
pop
sar
xor
nop
lods
lea
jb
cs
cld
mov
scas
mov
push
test
pop
outsl
sbb
dec
out
and
popf
adc
push
icebp
fidivrs
and
mov
jp
loope
add
es
lahf
lods
pop
rcll
loop
lods
push
addb
jns
or
fwait
jmp
fidivl
sbb
lret
in
mov
ret
mov
sbb
stos
mov
xchg
mov
and
mov
sahf
filds
popa
cmp
sarb
mov
mov
and
mov
inc
cmp
scas
cltd
sbb
imul
cmp
inc
sub
imul
pushf
jb
mov
loop
push
pop
or
shlb
mov
xor
lret
add
cmpsb
push
cld
fidivrs
inc
test
mov
inc
sub
inc
jg
ds
add
int
out
mov
sub
or
xchg
jnp
sub
dec
push
xchg
into
out
push
aas
sub
in
xor
movl
inc
or
cmp
add
xlat
dec
mov
insl
cmp
js
mov
and
stos
dec
dec
pusha
mov
insb
add
sbb
ljmp
jns
mov
sbb
adc
fiadds
adc
cmp
in
xchg
add
jl
pop
adc
jo
je
jl
dec
pop
mov
and
inc
outsl
test
mov
jecxz
cltd
fsubl
sbb
add
push
lahf
imull
out
jne
jno
into
lods
mov
cmp
scas
add
adc
jbe
and
pop
psllw
dec
loopne
in
imul
mov
mov
cmp
inc
pusha
jbe
mov
shrl
xchg
adc
dec
cwtl
mov
daa
ds
std
mov
and
pop
ljmp
mov
fldt
pop
lret
lods
jbe
cmp
and
jo
and
and
das
dec
inc
mov
mov
rol
movsb
repnz
test
inc
pusha
pop
xchg
jp
jno
call
lret
cmp
sarl
popf
or
jnp
pop
test
fwait
dec
fwait
push
les
inc
in
mov
popf
inc
xlat
cmp
cmp
ret
adc
sub
aas
or
lds
pop
add
mov
lods
jnp
int
cld
iret
mov
xchg
sahf
jle
call
out
stos
leave
xchg
loope
fidivs
inc
in
mov
outsb
shlb
sbb
test
sub
mov
jecxz
lret
leave
mov
xor
pushf
stos
xchg
push
or
ret
xchg
xorb
sub
inc
xor
jne
les
test
shll
shlb
out
scas
loopne
xor
lcall
xor
ficoml
inc
xchg
gs
mov
lcall
pop
or
loop
fisubl
popf
jge
loope
test
jmp
repz
add
jnp
lret
xor
pop
push
mov
pop
sbb
mov
shl
js
into
out
xchg
push
xor
fsubs
and
enter
fld
jmp
test
and
adcb
test
mov
test
jp
insl
push
icebp
testl
cmp
addr16
jp
xchg
push
test
mov
mov
dec
loope
jbe
inc
dec
xor
test
adc
shll
loop
data16
repz
mov
lahf
mov
dec
jmp
ja
decb
pop
and
pop
push
lret
repnz
int
pop
loop
pop
sarl
aad
add
das
idivl
mov
test
data16
push
les
iret
fwait
cli
or
jecxz
arpl
in
test
in
scas
sbb
pop
xor
icebp
inc
enter
lret
loop
imulb
andl
sub
out
imul
add
out
ficomps
dec
sub
clc
add
jp
scas
ficompl
sub
dec
inc
jne
pop
adc
cli
pop
fidivrl
add
push
shll
pop
dec
mov
gs
push
stos
mov
ror
lahf
sub
cmp
jo
or
and
jg
loope
push
pop
or
pop
sbb
leave
mov
sbb
pop
pop
mov
sbb
or
mov
dec
push
clc
jne
or
testl
mov
std
cmpsl
out
mov
jg
xchg
sub
dec
xor
rcr
add
mov
jo
inc
popf
jb
sahf
xor
mov
divb
push
int
cmp
ds
sbb
mov
dec
arpl
es
cmp
jmp
dec
mov
das
push
pop
and
or
cmpsb
pop
pop
mov
sbb
xchg
fcoms
imul
lret
jo
fidivrl
sub
mull
cmpsl
pop
test
fmul
pusha
loopne
cmp
test
cmp
add
sarb
adc
jb
out
js
cmp
popf
das
mov
es
rolb
loopne
lods
iret
hlt
ret
mov
loop
testl
mov
pop
push
jp
sbb
aaa
bound
out
int
pop
pop
stos
cmp
ljmp
push
fcomip
jle
test
inc
pop
stc
jl
ja
loope
dec
mov
stos
nop
in
xor
das
pop
push
int3
in
test
iret
scas
adc
movb
movsb
insb
cmpsb
adc
xor
mov
out
out
jo
mov
cmp
push
lahf
xchg
cld
mov
inc
jne
repnz
xor
int
ss
dec
shll
test
ret
xor
fxch
insl
or
cs
jno
rcl
push
in
es
push
jns
ja
and
in
and
and
sbb
hlt
outsl
pop
insb
fstpl
mov
pop
leave
or
cli
scas
jl
cwtl
lret
dec
clc
inc
push
ret
bound
xorb
cmp
stos
and
lock
sti
push
jno
gs
xor
jecxz
mov
loop
fmull
pop
sbb
lods
mov
and
jmp
lock
stc
xor
in
dec
cwtl
gs
dec
inc
mov
mov
popf
movsb
movb
push
cs
insl
add
ret
pop
stc
ja
fmuls
shr
cwtl
std
add
subl
adc
fldl
imul
sbb
xchg
dec
leave
lods
fiadds
pop
lods
sbb
into
enter
inc
pop
fistl
sbb
mov
test
dec
pop
jp
sub
adc
repz
addl
dec
popl
mov
pop
mov
lret
hlt
inc
inc
pop
arpl
outsb
fldenv
push
jmp
adc
outsb
mov
in
jge
xlat
sahf
add
xor
iret
addl
pusha
fsubl
mov
dec
add
movsb
fildl
xor
xchg
jb
add
cld
and
cmc
test
in
fisttpll
mov
cltd
xchg
jo
ficoml
jno
push
pop
mov
lods
jecxz
rep
std
ljmp
jecxz
mov
into
jne
cmpsb
add
sbb
adc
hlt
inc
movsl
das
insl
in
out
fidivrs
ja
mov
inc
inc
lds
iret
mov
imul
sub
shl
mov
stc
and
adc
mov
dec
jmp
jle
mov
in
imul
jo
mov
into
push
cmp
xchg
shlb
jecxz
add
cld
test
movl
das
adc
data16
divl
inc
inc
fldenv
and
adc
gs
sahf
jl
adc
ss
out
mov
sub
cmp
test
sbb
gs
mov
add
enter
mov
shrl
inc
mov
sbb
push
mov
leave
iret
jecxz
sti
mov
cmpsb
mov
pop
hlt
sub
sbb
jle
loopne
movb
jbe
pop
in
and
repnz
mov
add
push
outsb
xor
shrl
rcll
insl
or
pop
pop
mov
dec
push
call
iret
mov
jnp
in
mov
jbe
int3
mov
clc
mov
sbb
and
lcall
xchg
loop
fs
xchg
int
lods
and
inc
je
xor
dec
ret
adc
sub
jns
sub
loope
imul
add
mov
sbb
push
dec
cwtl
xchg
cmp
inc
cmpsb
int3
pop
xor
test
test
shl
mov
or
fadds
mov
sbb
mov
rdpmc
lock
cmp
mov
mov
and
roll
test
jmp
mov
mov
les
pop
out
aaa
sbb
fdivrp
and
or
or
jge
mov
dec
lret
je
int3
es
pop
fisubrl
ret
cltd
mov
cmp
push
mov
cmp
cmp
mov
or
add
test
stos
loop
pop
push
mov
lret
inc
in
es
inc
movsl
cwtl
dec
and
mov
test
xchg
shlb
push
jns
sbb
dec
add
mov
mov
mov
call
jns
out
jae
jae
inc
mov
stc
jbe
gs
sti
data16
xchg
pop
cli
cmp
cmp
add
push
out
xchg
dec
cmp
jno
cmp
add
insb
push
jg
add
lcall
mov
jmp
pop
fdivr
jae
pop
lods
lret
loope
mov
ss
popf
jmp
or
jae
and
lret
sub
xchg
adc
jns
push
mov
xchg
fldt
inc
nop
lds
jnp
int3
dec
inc
xchg
xor
sub
xchg
fdivs
out
in
rorb
insb
xchg
cmp
mov
xchg
inc
add
outsl
lret
mov
push
fs
bound
stc
push
aas
ss
push
adc
shrl
or
mov
mov
sub
pop
xchg
xor
and
cmp
test
into
int
std
clc
test
loop
sbb
testl
xor
daa
dec
xlat
seta
adc
loope
inc
mov
pop
sub
ds
es
xchg
xchg
sub
int3
mov
ds
lock
jae
fs
lods
rolb
daa
std
es
pusha
jnp
pop
mov
sahf
mov
test
jp
jmp
mov
push
outsb
adc
fs
push
es
data16
jo
or
lret
rorl
push
pop
mov
xchg
lret
or
inc
adc
adc
in
outsl
lahf
inc
hlt
in
rorb
aaa
inc
push
lea
pop
and
xlat
pop
ret
fdivrs
ljmp
js
add
fdivrs
mov
or
std
xorl
in
test
push
pop
cld
leave
cwtl
pop
mov
scas
inc
or
push
xor
test
fadd
sbb
gs
cmp
or
mov
add
cmp
call
or
arpl
jnp
jne
cmc
sub
fadds
dec
push
test
push
mov
aaa
inc
dec
movsb
cld
adcb
push
add
es
fisubrl
std
jnp
arpl
dec
pop
mov
iret
sub
aam
test
iret
movsl
mov
movsb
das
ja
jnp
add
push
cltd
outsb
mov
fisttpl
fwait
testl
jle
pop
pusha
es
das
insb
fbstp
inc
adc
xchg
push
fistps
or
pop
inc
pop
repz
arpl
adcl
jg
pusha
inc
add
sbbl
stos
add
mov
xor
pop
mov
add
ret
daa
dec
dec
inc
pusha
cli
or
add
jmp
jle
add
stc
mov
je
adc
xchg
lods
aas
mov
cltd
jnp
aam
xchg
inc
es
mov
in
cmp
loop
xor
testl
xchg
cld
xlat
scas
inc
stc
ficoml
enter
cmp
cmp
lret
or
daa
in
push
cwtl
sarl
sbb
lds
dec
stc
daa
add
push
rolb
mov
pop
mov
and
push
cwtl
outsl
nop
cmpsb
cli
sbb
jmp
cmpl
xchg
jl
cmc
inc
inc
repz
mov
xchg
cmp
adc
rcll
dec
push
adc
fildll
dec
lcall
repnz
loope
shrb
inc
mov
insb
jp
sbb
jne
inc
mov
push
dec
jno
je
aad
clc
popf
scas
stc
in
in
insb
cmc
enter
pop
mov
cmp
dec
cmp
sbb
cmp
jle
addb
mov
sbbb
std
pop
mov
sub
pop
lock
aam
jecxz
inc
sub
ja
neg
and
dec
fdivs
data16
xchg
push
push
or
push
mov
jbe
jp
xchg
jp
or
xlat
push
mov
int3
mov
add
cwtl
xchg
xor
sub
mov
cld
and
sub
pop
mov
leave
pop
and
lds
jle
add
roll
jg
je
mov
icebp
push
fwait
xchg
test
adc
mov
jp
into
jmp
fnsave
xor
test
inc
jge
mov
and
jg
idiv
aas
cmc
ljmp
push
stos
mov
adc
xchg
pop
mov
push
mov
dec
pushf
int
adc
jne
jg
sub
mov
aas
mov
xor
call
mov
add
mov
les
mov
ja
lcall
mov
pop
std
repnz
xchg
lret
jle
int3
jmp
xor
cs
xor
sub
mov
jl
xchg
jle
cmp
pop
push
ds
rorb
lds
mov
outsl
incb
in
jnp
or
mov
es
addr16
pop
mov
mov
test
jmp
push
cmp
call
shlb
and
popf
adc
adc
push
aaa
popa
dec
insl
incl
add
mov
lret
ret
jae
sti
pop
sbb
cmp
or
or
xor
jle
fldl
ljmp
lret
jno
adc
mov
testb
sub
std
xor
cltd
xlat
jns
xchg
stos
negl
lds
pop
push
xor
notb
jmp
pop
push
jg
pop
add
jnp
stc
inc
leave
mov
pop
movb
cltd
loop
sbb
adc
fwait
sbb
test
or
or
iret
push
hlt
xor
repnz
cld
popf
inc
mov
cli
sbb
sbb
sbb
or
xor
daa
add
xchg
in
dec
outsl
clc
xor
outsb
cmp
js
popl
push
and
cli
stos
push
pop
outsl
cmp
fldl
fcomps
lret
sarl
xchg
fbld
jno
pushf
movsl
test
test
push
scas
push
rcl
rorb
push
xchg
or
jnp
mov
lds
or
and
packssdw
xchg
inc
mov
jp
fisubrl
bound
jp
jle
in
repnz
cs
cli
xor
in
sub
fldl
cmc
dec
out
push
je
stc
pop
sub
fstl
fwait
lock
cs
adc
roll
pop
pop
xchg
cmp
push
sahf
repnz
cld
pop
fiadds
pop
adc
or
sub
nop
mov
ret
popf
mov
xlat
or
sub
add
push
sbb
imul
cmp
in
sub
mov
dec
movl
or
xchg
push
inc
jno
stos
out
add
pop
jo
cmp
sahf
js
add
fiadds
ficompl
dec
shlb
push
inc
mov
out
loop
out
arpl
mov
sbbl
push
fistps
or
ljmp
jp
jo
lds
mov
mov
jo
mov
pop
sbb
sahf
in
pop
lock
fistl
repnz
push
dec
call
sti
hlt
mov
lock
int3
dec
out
jecxz
pushf
cmpb
lcall
inc
int3
and
and
popa
jne
cmpsl
mov
push
pop
sub
push
lds
jns
jae
lret
or
or
into
cmp
pop
push
std
out
cli
jge
jno
mov
push
sbb
mov
aam
lock
dec
js
xor
pop
stc
push
xlat
dec
int
into
clc
inc
xchg
jns
movsl
inc
sahf
add
sbb
cmc
les
mov
sbb
fstpl
cmp
clc
orb
rcrb
pop
insb
ss
movsl
xchg
push
rcll
cli
loope
or
mov
mov
mov
jae
mov
mov
dec
inc
and
sbb
in
mov
mov
add
push
jbe
cs
cs
insl
outsl
repz
push
loop,pt
sub
cmp
mov
mov
jns
shrl
ja
scas
pop
fsubrs
pop
add
ds
pop
in
andl
inc
nop
xor
sub
incl
dec
orl
mov
xor
lret
lret
sahf
je
out
test
sbb
cmp
adc
cmp
mov
rcr
dec
fcmovu
test
mov
mulb
dec
sub
cli
aad
into
push
dec
xor
sub
in
mov
xchg
jnp
mov
and
add
push
dec
and
popa
dec
into
lods
cld
in
repnz
int
test
std
arpl
cmpsl
rolb
and
push
das
cmp
mov
pusha
push
add
adc
je
cmp
adc
dec
lahf
in
stos
inc
scas
push
pop
test
add
das
fnsave
out
mov
cmp
add
lods
loope
stos
adc
outsl
xchg
aam
bound
xor
xor
add
jb
jg
stos
loopne
xor
icebp
stc
push
lret
sahf
mov
test
rcl
cmp
inc
into
in
loop
out
aam
pop
cs
shll
push
or
pop
push
pop
aad
pop
js
enter
push
int3
cld
mov
cmpsb
out
cmpsb
xor
sbb
add
popf
add
cmp
adc
mov
jecxz
and
lret
mulb
mov
stc
mov
sbb
mov
adc
fimuls
in
jp
aaa
cmpsl
adc
xor
loope
add
mov
stos
sbb
and
mov
mov
sbb
nop
call
mov
xor
and
pushf
enter
dec
fldl
out
mov
push
sbb
andl
mov
rorl
jge
stos
push
in
push
scas
pop
and
jo
mov
xchg
jns
inc
or
scas
cltd
xor
xchg
mov
mov
pop
and
jge
nop
or
dec
nop
mov
data16
adc
inc
and
xchg
ret
ljmp
stos
fisttpl
mov
fwait
ja
xlat
mov
lcall
and
add
mov
aad
push
xor
popf
add
jmp
and
mov
push
and
mov
decl
mov
test
dec
add
push
inc
shrb
faddp
jmp
adc
adc
and
jge
xor
pop
push
inc
movsl
xchg
sti
xlat
orl
adc
sbb
cmc
aas
fwait
in
mov
push
ja
aas
ds
xchg
imul
mov
push
pusha
jl
and
lahf
jo
cld
jge
out
push
cmpsl
mov
fs
insb
inc
add
or
cmc
adc
jp
out
xor
lret
call
bound
and
xchg
arpl
lret
cld
and
imul
sbb
das
call
js
test
aad
mov
outsl
mov
push
mov
pop
mov
jo
jns
popa
stc
mov
sbb
idivb
push
iret
loopne
fnstsw
loop
adc
les
cmp
adc
adc
imul
loopne
add
lret
xchg
push
push
ljmp
add
inc
lahf
fyl2x
mov
push
arpl
jle
test
mov
push
cmpsl
insl
and
cmpsb
test
xchg
mov
aad
mov
dec
adc
leave
dec
fisttps
dec
xor
lds
sbb
mov
push
mov
out
xchg
nop
jns
sub
or
and
mov
add
jmp
in
and
movsb
les
push
fisubl
push
xor
and
ljmp
lds
jno
push
loope
shll
or
xor
fildll
or
cmpb
pushf
out
lret
dec
mov
inc
cmp
or
adc
ret
dec
cltd
push
push
push
push
add
xchg
cmp
cmp
daa
adc
adc
int3
mov
out
adc
sbb
pop
xor
into
addr16
popf
lds
shll
add
arpl
imul
cmpsb
mov
outsl
push
inc
inc
ss
mov
into
jmp
xor
cmp
sbb
mov
addr16
shl
sbb
or
mov
test
sub
and
ljmp
fcmove
pop
jp
test
pop
loope
imul
ljmp
sbb
ret
sar
mov
jl
xor
in
jl
test
cld
test
adc
ds
pop
negb
mov
dec
dec
jecxz
testl
lods
mov
adc
dec
and
ja
pop
movsl
xchg
ja
mov
mov
inc
movsb
or
mov
not
cmp
or
inc
inc
ja
repz
ret
rorl
adc
mov
jp
outsb
push
aas
adc
jl
lock
test
sub
pop
fnstsw
cli
mov
jae
push
xor
xchg
sbb
jne
out
xchg
add
in
lcall
mov
add
cltd
subl
sbb
xor
ja
bnd
lods
out
insb
ret
in
test
nop
sbb
lds
arpl
lret
arpl
push
sub
ret
xor
cmpsl
fwait
test
pop
lods
jbe
test
mov
pop
pop
mov
mov
ds
frstor
and
mov
jb
and
or
inc
jne
jmp
movsb
das
lea
jmp
inc
bound
stos
movl
ds
adc
push
mov
sbb
or
inc
movsl
or
pop
pop
inc
iret
icebp
loope
xlat
xchg
xchg
ficoml
push
adc
pop
out
pop
xor
test
mov
fcoms
in
stos
push
lods
shr
mov
fidivl
dec
mov
cmp
xchg
pop
hlt
add
repnz
sub
out
pushf
pop
jg
inc
sti
dec
addr16
dec
push
cld
mov
repz
aad
iret
sbb
mov
cmc
jae
jle
xor
gs
xor
ds
cwtl
lock
pop
notl
xor
test
mov
xor
loopne
stos
in
shlb
mov
leave
sbb
stc
in
sub
or
icebp
roll
mov
fsts
inc
movsb
and
stc
imul
sub
jne
jnp
fisubs
jno
push
pop
or
rorl
dec
lcall
int
or
nop
cli
sbbl
les
inc
test
sub
out
inc
ja
push
and
push
into
shrb
cmp
repnz
lcall
pop
call
das
push
nop
out
pop
and
insl
xchg
ret
push
bound
dec
insl
sti
daa
fwait
in
shrl
and
mov
packuswb
mov
cmp
push
popa
add
loope
cltd
push
hlt
das
jmp
sub
addb
in
sbbb
icebp
inc
outsb
jecxz
dec
jecxz
cltd
jno
xor
adc
xor
in
jl
add
popf
punpcklbw
es
mov
or
dec
or
cmc
gs
repnz
xor
icebp
mov
imul
not
sti
adc
pop
movsb
pop
les
push
imul
sahf
push
repz
rorl
stc
jl
or
jbe
add
lret
fnstsw
add
xor
dec
xor
lret
lods
xchg
inc
dec
dec
push
pop
lods
das
imul
add
mov
cmc
test
xchg
out
mov
or
mov
out
test
arpl
cmp
and
adc
mov
xor
or
and
adc
out
cmp
push
or
jmp
aam
sub
xchg
lods
cmp
sarb
insb
insl
rolb
mov
inc
inc
sbb
xchg
lret
icebp
push
mov
out
or
outsb
jmp
pop
hlt
loopne
inc
outsl
bound
idivl
cmc
push
lock
mov
test
sti
xchg
sarb
aaa
push
movsb
je
xchg
movsb
sbb
hlt
out
les
add
inc
jmp
jmp
jae
leave
aam
dec
xor
add
push
push
jns
test
repz
int
scas
push
push
out
clc
loop
jge
mov
push
mov
arpl
pushf
xchg
lock
test
and
lret
jp
sbb
jle
jne
movsb
push
gs
rol
insl
sub
stos
pusha
jne
aad
fs
cmp
push
mov
imul
cmp
std
fistps
cmp
mov
mov
dec
lret
xchg
in
mov
sbb
mov
sbb
inc
push
cmc
and
ljmp
xor
in
mov
and
icebp
cmpsl
sbb
fbstp
xchg
rol
lcall
cwtd
stos
aam
cld
mov
mov
dec
pop
mov
xor
rorb
inc
add
xor
push
or
jp
lods
fwait
adc
movsb
in
cld
push
push
add
sbb
filds
xor
sub
sbb
jns
test
push
cmp
outsb
out
mov
fmuls
dec
mov
adc
xor
inc
call
jne
xchg
sti
dec
cwtl
push
and
pop
insl
mov
stc
xchg
bound
push
add
sub
xor
mov
in
roll
adc
pop
pop
fbstp
insb
and
or
in
push
push
add
pop
jnp
inc
loopne
jge
xchg
pusha
sub
vandpd
add
pop
jecxz
insl
mov
sarl
lods
lods
mov
sbb
int3
mov
test
adc
push
push
ret
repnz
inc
sbb
mov
add
push
dec
cmp
and
or
lea
insl
ljmp
sbb
shlb
in
mov
adc
xchg
lods
lret
and
cmp
js
out
jg
or
jae
inc
addr16
and
into
daa
add
in
shrl
ds
addl
dec
lret
push
fmul
adc
pop
mov
mov
mov
pop
mov
shr
sarl
mov
test
lods
and
in
pusha
rclb
jo
mov
cmpsl
mov
int
dec
cmpsl
adc
push
out
push
scas
pop
adc
xbegin
sub
fimuls
adc
lahf
test
xlat
mov
test
or
mov
push
fwait
jmp
xorl
cmp
clc
rcl
cmp
xor
mov
push
std
jnp
jnp
push
pusha
xor
inc
arpl
ret
ja
lods
ficoml
xor
jns
ret
mov
sarb
adc
inc
aam
test
xor
push
or
xchg
pop
cmp
dec
das
dec
adc
gs
jle
mov
pushf
movsl
cmp
add
mov
push
push
xchg
mov
rclb
dec
pushf
addr16
notl
push
cmp
jo
inc
push
mov
push
mov
rcrl
lock
jle
or
pop
lea
ret
jp
cld
sbb
jp
xchg
xor
jno
xor
push
das
les
call
shl
push
movsb
mov
out
jl
and
push
xchg
mov
push
mov
xchg
push
add
mov
cmp
addr16
adc
or
out
out
stos
pop
imul
fsubl
xchg
adc
and
addr16
cld
sbb
imulb
movsl
popf
insb
add
mov
mov
push
dec
mov
call
popa
movsb
imul
or
lahf
add
outsl
inc
popa
ja
icebp
aad
jnp
xor
dec
rcll
call
cmpsl
cwtl
cltd
xor
ss
nop
out
int
add
xor
imul
outsb
andl
cltd
popf
stos
xlat
mov
pop
mov
jl
cmp
sub
xchg
test
stos
add
sub
in
inc
bound
stos
adc
hlt
jmp
cmp
adcl
lcall
xchg
jmp
lcall
xchg
aas
cmp
fisttps
mov
pusha
jb
and
fisubrl
push
insb
jnp
pushaw
aam
inc
sbb
and
shrb
or
cwtl
sub
lods
mov
cmp
lods
jno
ja
push
or
sub
mov
jbe
sbb
and
mov
dec
movsb
inc
fstps
push
js
fsubl
jmp
repnz
and
sub
rclb
or
or
cli
sub
xchg
jo
xchg
das
pop
xchg
pop
push
xor
outsb
lods
mov
mov
xchg
cmc
jbe
or
dec
imul
cmp
xchg
out
sub
mov
adcb
jl
jb
mov
or
pop
data16
inc
jno
push
mov
pop
jmp
dec
mov
dec
or
jecxz
daa
xchg
pop
inc
aas
cmpsb
loop
or
sub
mov
pop
aad
je
aam
jl
and
dec
xorb
in
mov
sub
insl
orb
mov
xor
cmp
les
out
mov
out
es
mov
jnp
insb
xlat
lea
cltd
out
cmpxchg
repnz
xor
pop
movl
push
loope
xchg
repnz
cltd
sbb
push
cmp
adc
out
mov
aad
cmpsb
sub
addr16
mull
inc
ffree
sbb
mov
xor
imul
mov
dec
jge
clc
movsl
mov
hlt
cmpl
jo
push
adc
les
and
push
mov
fwait
jl
stos
mov
xorl
lods
adc
cld
and
cmpsb
and
je
pushl
cmpsl
or
popa
ds
mov
cmp
dec
jnp
mov
mov
jnp
subb
iret
xor
cmp
loopne
imul
repnz
push
xor
mov
add
mov
or
les
test
fwait
fwait
push
out
add
sub
icebp
adc
outsb
dec
push
mov
test
jg
jge
lret
jle
pop
inc
loope
movsl
pop
and
or
fnstenv
jnp
xchg
insb
lock
push
xchg
jbe
push
jno
and
and
push
mov
cmpsb
movsl
adc
out
lret
sub
scas
xchg
cld
push
jb
push
jg
idiv
cld
lock
ljmp
push
and
add
inc
cmp
aad
ja
or
add
into
leave
sbb
mov
roll
adc
stos
movsb
in
or
and
jb
cli
jns
ss
xlat
rcrb
loope
push
mov
das
dec
push
iret
xor
in
sbb
shrb
loop
nop
jno
sub
imul
cmc
aad
sbbb
xor
adc
dec
in
outsl
lret
shr
inc
sti
xchg
btr
addr16
frstor
cmpsb
sysenter
mov
movb
mov
mov
pop
push
fidivl
mulb
insl
je
out
leave
xchg
fnstenv
ds
mov
jbe
lods
push
psubsw
mov
cld
movsl
mov
inc
mov
popf
sub
out
fstpt
lret
int
dec
sbb
pop
nop
lods
icebp
lahf
pop
and
lock
mov
inc
movsb
pop
js
jle
and
cmp
dec
sub
mov
xlat
aam
cmp
pop
movsl
cmp
jge
adc
fldcw
jae
repnz
and
pop
add
xchg
outsl
jmp
out
ret
icebp
mov
push
fstpl
nop
mov
inc
fs
lahf
test
dec
jle
icebp
push
pop
gs
loop
imul
cmp
inc
call
xlat
push
mov
pop
movdqa
lods
lret
dec
lods
push
dec
mov
adc
cmp
shll
daa
and
ljmp
dec
mov
or
in
mov
xor
push
es
and
and
mov
xchg
mov
add
fs
mov
movsl
and
dec
xchg
cwtl
rcr
je
icebp
aam
ja
cld
xor
add
lret
fcoms
xchg
push
xor
dec
js
xchg
add
mov
dec
std
xor
insl
lds
pushf
imul
lret
adc
pop
push
pop
fsubs
lods
bound
sbb
cmp
mov
jp
pop
dec
dec
jecxz
add
jmp
and
or
jbe
inc
out
movsb
pop
push
fildll
jge
fxch
dec
fwait
mov
js
xchg
mov
std
sub
adc
sub
sub
stc
test
jp
clc
push
mov
aaa
cmpsb
out
or
dec
aas
jp
dec
pop
mov
int
jle
jns
ffree
popf
and
std
and
push
test
je
pop
add
mov
sbb
fildl
mov
push
shlb
dec
dec
jl
sbb
pop
enter
cltd
push
push
jns
nop
mov
test
pop
lods
sub
fistl
xor
add
fistpl
push
aam
aam
adc
cmp
sets
out
cmc
cmpsl
inc
aam
pusha
sbb
outsb
mov
fpatan
into
push
add
inc
jecxz
or
push
pop
aam
sbb
sahf
mov
jnp
stc
cwtl
mov
cwtl
lock
int3
jae
imul
test
inc
xor
stc
cld
mov
loopne
ja
stc
mov
xlat
scas
js
ret
xor
dec
adc
cli
lret
shl
rcrl
cmp
add
popf
add
push
add
shl
insl
loope
data16
orl
bound
nop
pop
ljmp
xchg
jecxz
push
jmp
nop
out
push
test
mov
gs
gs
out
push
iret
pop
adc
aas
iret
jno
mov
test
lock
push
icebp
fldt
scas
lahf
test
push
cmpsl
cmp
in
cmp
xor
fdivs
sub
inc
mov
inc
in
mov
lds
dec
stos
out
jp
cs
shlb
xor
push
in
cmp
popa
ficoml
in
mov
enter
test
xchg
mov
std
stc
ret
adc
es
cmp
xor
pusha
mov
test
pop
push
sarb
gs
push
sub
sbb
push
lret
ljmp
shrl
xchg
fwait
aad
sbb
insb
flds
jge
outsl
lock
roll
mov
sub
mov
push
rolb
shr
imul
shlb
mov
ds
loopne
ljmp
rep
ljmp
testl
jns
or
sbb
bound
sahf
imul
and
and
push
dec
adc
lods
movsb
push
xchg
add
xlat
dec
jno
lret
sti
cmpsl
testl
leave
mov
xchg
lds
mov
into
inc
lock
test
sbb
scas
add
mov
das
in
shlb
ret
pop
mov
ss
jns
cmp
push
mov
adc
fnsave
divl
mov
sbb
jb
push
mov
fcos
push
gs
add
or
lds
clc
and
pop
loopne
jo
arpl
fsubl
mov
sbb
pop
enter
dec
les
mov
cmp
push
cmp
inc
adc
cmp
cmp
adc
xor
mov
sub
mov
sarb
xor
imul
dec
rcll
ret
xchg
pop
jge
pop
xchg
xor
and
and
cmp
cmp
jl
jp
adc
mov
mov
push
sbb
add
mov
imul
shr
lret
xchg
ss
insb
hlt
add
inc
xchg
pop
and
ds
sub
adc
in
push
cmpsl
add
pop
and
je
mov
lods
pushf
xor
push
pop
cmp
and
jg
stc
or
xchg
add
sub
das
jecxz
mov
jae
or
hlt
ret
gs
mov
pop
bound
xor
inc
movsl
push
sub
ljmp
inc
adc
cmpsb
sbb
inc
sub
add
or
addl
push
add
hlt
ds
pop
test
mov
pop
or
ror
decb
das
push
xchg
or
mov
stos
xor
rolb
cmpsl
ljmp
pushf
je
push
mov
cld
imul
and
insb
pop
mov
or
repz
xchg
pop
xorl
lock
mov
xchg
div
xchg
pop
imul
lcall
or
das
mov
in
adc
pop
xor
jnp
scas
mov
pop
and
scas
cmpsb
sub
or
ret
clc
pop
jnp
jbe
not
insb
lret
std
adc
sub
stos
mov
push
add
mov
ds
fildll
data16
fstpl
pushf
aaa
mov
data16
data16
pop
sarl
push
fs
fiadds
lock
lret
push
inc
mov
ret
cmp
jno
in
fsubl
sub
cld
fldcw
xchg
loop
mov
cmp
jns
sti
lahf
jbe
xchg
xor
lcall
movsb
int
cmc
test
scas
mov
ljmp
lret
insb
sbb
bound
mov
iret
ja
sbb
jbe
jl
push
iret
push
sbb
gs
pop
test
sub
jecxz
ds
mov
sbb
xchg
pop
pop
sbb
sub
in
sti
xchg
cmp
push
push
ret
je
add
ret
ljmp
loope
cmp
lea
stc
sub
jmp
das
jno
push
jge
jns
pusha
jbe
stos
push
xchg
iret
mov
pop
fxch
imul
stos
mov
push
xor
lds
hlt
mov
mov
pop
inc
testl
jp
fidivs
dec
dec
sub
xchg
ror
jg
outsb
out
scas
imul
add
pop
addr16
fsubrl
inc
mov
ret
and
test
hlt
push
movsb
push
dec
dec
lods
adc
xchg
lea
lea
and
iret
lods
inc
jne
xchg
cwtl
push
mov
xchg
divl
push
and
cmc
movsb
int3
fwait
and
cmpl
sub
inc
xor
loope
rcrb
lret
ja
lcall
and
and
out
sub
lock
imul
es
pop
xor
adc
outsb
pmaxsw
add
mov
inc
jae
shll
xchg
xchg
and
or
push
aas
mov
sub
dec
mov
and
sub
dec
sub
daa
outsl
push
cmc
and
jns
pop
dec
inc
xchg
idivb
dec
mov
scas
mov
jmp
dec
mov
sub
cwtl
into
xor
out
cmp
pop
xchg
hlt
lods
les
jg
xor
adc
iret
loopne
lahf
cmp
xor
jno
dec
in
stc
stc
or
sub
ss
inc
popf
inc
dec
dec
xchg
leave
dec
rcrl
fwait
insb
popf
ljmp
out
sub
aam
sub
mov
xchg
shlb
imul
and
mov
mov
inc
xchg
fs
sahf
jge
push
stos
mov
add
mov
call
jecxz
xchg
pop
fcmovne
sub
lret
insl
mov
aaa
movb
outsl
in
repnz
pop
sbb
das
pop
mov
ret
inc
dec
push
mov
pop
stc
mov
pop
and
stc
sbb
mov
xchg
mov
sbb
das
pop
iret
in
mov
cmp
jp
lds
lea
movsl
imul
in
adc
stos
sbb
mov
xor
ret
add
pop
mov
aad
sbb
mov
je
dec
pop
aas
outsl
mov
jmp
mov
jno
pop
pop
mov
mov
xchg
stos
insb
or
cmc
in
loopne
xor
inc
pop
mov
ret
xor
mov
dec
loope
mov
xor
insl
cmp
mov
dec
aad
jb
jecxz
sub
dec
cmp
and
orb
and
shlb
cltd
pushf
sub
dec
mov
jle
cmp
sbb
imul
popa
dec
loopne
and
sbb
aaa
in
jp
sub
mov
lret
js
bound
rorb
in
scas
mov
fcoml
sahf
and
add
enter
or
in
lret
jl
ss
jb
mov
arpl
inc
pop
cvttps2pi
std
loop
mov
jno
adc
add
sub
xchg
nop
mov
xor
push
fwait
mov
xor
push
jg
lods
xlat
cmc
fs
dec
mov
lds
mov
and
je
cmp
popa
or
rcr
cmp
out
sub
mov
movsb
mov
enter
cwtl
shll
pusha
testb
icebp
push
arpl
xchg
enter
add
mov
inc
cmpb
fdivrl
lret
mov
sub
iret
rorl
xchg
inc
pop
lods
inc
nop
repz
das
fcoms
icebp
ja
xor
in
xor
jle
sub
dec
inc
mov
adc
fsubp
call
loopne
inc
cwtl
fisubl
xor
div
xor
push
sbbb
lds
sub
adc
inc
jne
mov
daa
cmc
out
sub
dec
jno
out
jns
jl
adc
ret
xchg
dec
push
xchg
mov
cmp
inc
incl
adc
loop
pop
imul
or
aam
lods
lods
add
push
loop
das
pop
pop
outsb
cmpsb
popf
hlt
and
xchg
nop
and
stc
mov
push
repnz
adc
mov
lret
stc
std
lcall
mov
jmp
mov
jnp
cli
jle
das
insb
nop
movsb
mov
inc
mov
pop
loopne
fnsave
in
sbb
xchg
xchg
cmp
sbb
inc
rcrb
dec
sbb
mov
stos
sahf
pop
in
mov
ficomps
lea
xchg
xchg
lods
adc
ss
mov
sbb
adc
mov
cli
or
sub
mov
xchg
outsb
xchg
out
addb
mov
push
jmp
mov
xor
push
xchg
sub
into
adc
lcall
push
mov
jg,pn
arpl
loopne
mov
movsb
pop
sub
jmp
sarb
outsb
pop
mov
cmpsl
int
inc
in
repz
mov
jl
xchg
stos
fs
jle
push
cmpb
jl
pop
mov
fxch
pop
rcrl
ficoms
daa
loope
fdivrs
jae
push
insb
or
or
inc
adc
pop
hlt
cld
inc
rol
aaa
fcomp
fstps
sub
loopne
outsl
sub
jb
fs
xchg
jle
popa
cmp
rcrl
cmp
iret
sub
das
cmp
fnclex
in
shlb
jne
mov
test
idivb
inc
inc
mov
push
into
sub
shll
jge
adc
mov
push
push
xchg
cmpsl
pop
pop
outsb
ds
push
pop
push
mov
cmp
push
inc
cmpsl
xor
cmp
dec
jae
lret
xor
cmp
xchg
imul
insb
xlat
jp
lcall
cmp
popf
out
out
loopne,pn
dec
outsl
xchg
xchg
xchg
mov
xchg
mov
xor
lahf
sbb
sub
push
repnz
pusha
fdivl
and
dec
rclb
jp
icebp
sub
shl
sbb
cmp
mov
push
repz
cmp
and
dec
push
add
inc
ret
xchg
sbb
fnstcw
repz
pop
imul
jle
push
add
fmull
lcall
test
sbb
nop
and
bound
lds
mov
cmpl
jl
and
push
insb
mov
arpl
xchg
sahf
aaa
xchg
mov
cld
xchg
cmpl
and
int
pusha
rcll
inc
out
aad
outsl
scas
add
dec
sarb
stc
adc
adc
xor
fisttps
int3
ret
xlat
loopne
jnp
sbb
mov
es
pop
nop
pop
popf
nop
mov
and
cmpsb
leave
aas
ljmp
addb
stos
mov
pop
into
pushf
push
stc
mov
xor
adcl
pop
scas
arpl
repz
fadd
popf
inc
arpl
cmp
repnz
out
adc
cmp
or
inc
cmpsl
cmpsb
shlb
xor
pop
ja
mov
add
cmp
outsl
enter
iret
sbb
ret
xchg
out
rorb
mov
fwait
pop
sub
or
fildl
dec
pop
popa
inc
mov
imul
xorl
lds
lret
aas
push
fistpll
gs
push
jb
push
dec
cvtdq2ps
push
add
or
xor
imul
xchg
pop
insb
imul
ret
xor
and
pusha
shll
sti
int3
dec
sub
xchg
rcll
or
lods
or
and
aaa
jae
mov
sbb
mov
dec
xlat
aam
sbb
adc
mov
sbb
andl
pop
frstor
dec
mov
iret
add
shll
add
test
inc
imul
xchg
dec
fs
ljmp
imul
push
or
xchg
jae
and
jne
inc
jbe
insb
dec
frstor
decl
sub
hlt
or
fdivrs
test
inc
push
sub
pop
pop
sbb
push
sub
fidivrl
push
out
gs
test
mov
sbb
loopne
inc
dec
roll
dec
push
imull
minps
xchg
fidivrl
aad
sbb
mov
in
loopne
jo
shll
inc
rcr
movsl
add
inc
insl
mov
cs
sub
dec
xor
jle
sbb
shlb
sahf
xchg
mov
cmp
ret
roll
mov
iret
jbe
xchg
add
push
loop
pop
fiaddl
je
and
loop
mov
sub
pop
pop
adc
adc
and
inc
arpl
sub
jp
push
dec
pop
popa
or
aam
jnp
into
pop
push
pop
pop
cmp
in
mov
lahf
mov
adc
repnz
cwtl
aas
sbb
arpl
emms
xor
popa
or
scas
xor
mov
sbb
mov
iret
and
push
pop
push
sbb
mov
imul
jp
test
and
cmp
icebp
ds
test
dec
cwtl
ds
sar
nop
mov
add
fistps
in
out
out
aam
shlb
cli
ljmp
jle
stos
test
cmp
mov
push
jge
aas
xchg
dec
hlt
jns
js
ds
jp
add
pop
inc
pop
sub
mov
out
shr
mov
mov
mov
cmpsl
fldcw
inc
clc
push
jo
jge
repz
cmp
jo
pop
gs
out
push
bound
pop
push
dec
fwait
ret
test
shr
js
sahf
test
push
fwait
xchg
insb
sub
push
in
loopne
pusha
icebp
jl
xor
or
ljmp
js
push
pop
xchg
or
cs
icebp
lods
fnstsw
lds
aad
mov
es
cld
lret
ret
and
int3
dec
inc
cld
shl
dec
jp
xor
cmp
lret
stc
out
mov
xchg
cltd
mov
or
dec
outsl
popa
popf
dec
and
jmp
mov
add
mov
nop
fsubl
mov
test
cmpsb
mov
jo
pop
and
rcll
fistpl
sbb
pop
dec
xchg
test
or
jne
mov
rorl
stos
fcomi
xor
unpckhps
fdivrl
mov
sub
push
xorb
rcl
rolb
mov
lea
inc
add
jmp
jbe
clc
xor
jns
loop
add
xchg
data16
insb
dec
shrl
inc
aad
sbb
sbb
or
ja
lcall
mov
pop
fcoms
ret
adc
mov
xchg
sub
int3
sub
mov
push
add
sbb
push
xchg
popf
pop
ja
gs
mov
and
cmp
into
mov
dec
push
js
call
pop
popf
inc
cwtl
add
stos
xchg
mov
ss
lods
es
nop
cmc
ret
jge
push
sub
js
cmpsb
jge
roll
or
cltd
sub
and
mov
mov
dec
bound
leave
or
cmpsl
or
lods
test
xchg
cltd
mov
ret
rolb
cmpsb
fdivrp
or
dec
mov
dec
inc
push
mov
adc
xor
in
stc
or
xlat
add
roll
xchg
rol
bound
mov
cmpsl
out
xchg
cmp
enter
xchg
cmc
aas
add
sub
pop
mov
test
pop
stos
outsb
jge
fsubrs
or
stos
cmp
int3
or
and
lock
lcall
test
mov
push
cmpsl
std
test
arpl
pop
inc
sub
loope
cmp
insb
add
jl
jge
add
lea
or
mov
pushf
xor
in
dec
std
mov
mov
gs
lods
icebp
or
add
xchg
outsb
ret
cmpsb
nop
mov
shrb
adc
movaps
add
cmpsb
movsl
cmp
dec
fimuls
jg
cli
or
adc
imul
dec
mov
cmpsl
xchg
sub
lcall
xor
rcrl
cmpl
rorb
insl
lock
mov
jmp
ret
cltd
xchg
adc
mov
sub
loop
clc
mov
movsb
es
xor
testl
movsb
push
push
ja
or
push
pop
cltd
cmp
mov
push
inc
inc
in
push
xchg
shll
cwtl
clc
jg
xor
xor
test
adc
outsl
pop
cltd
test
enter
lret
iret
pop
sub
in
rcl
jne
xorb
addr16
xchg
jnp
and
sbb
cmp
or
push
jp
dec
adc
iret
add
or
inc
push
xor
gs
pusha
and
inc
ja
mov
jmp
in
add
pop
loopne
jnp
sub
mov
ja
cmp
push
frstor
sub
cmp
mov
aam
sub
push
stos
shlb
in
or
test
in
insb
fnstenv
fildl
pop
frstor
or
test
inc
fsubs
insl
sbb
rcr
fcomps
cli
mov
or
test
and
dec
push
sub
jle
out
cli
mov
lcall
pushf
inc
xor
insb
scas
add
mov
stos
push
movsb
lock
inc
sub
std
mov
mov
inc
push
orb
jle
sbb
xlat
pop
xchg
push
adc
jo
and
in
lock
stos
ja
aas
and
jp
iret
xchg
sbb
push
in
mov
std
sub
adc
cmpsl
mov
ss
in
mov
dec
inc
jp
or
data16
stos
jne
pop
and
sbbb
push
lcall
jg
mov
mov
mov
dec
pop
aam
in
fcoms
js
fdivl
push
jnp
ficompl
or
imul
inc
hlt
clc
sbb
out
aaa
cmp
xchg
movsl
and
nop
pusha
xchg
jge
popf
jbe
xor
stos
or
push
or
inc
scas
ret
push
dec
cmp
or
xchg
or
pop
imul
movsb
xor
iret
scas
inc
orl
pop
fcoml
jg
or
fldt
adc
and
pushf
popa
push
pop
or
xchg
and
mov
es
subl
fsubs
jno
dec
sub
fmull
jmp
jb
adc
mov
jp
hlt
jmp
shr
sbb
loope
js
inc
pop
sbb
fldl
mov
lcall
lods
jg
inc
fistl
mov
test
shrl
dec
mov
loop
sbb
inc
jmp
insl
dec
sub
mov
shrb
xor
xchg
scas
sub
dec
pop
fadd
mov
scas
cs
mov
and
jnp
push
pop
jg
nop
insl
pop
cmp
jne
aaa
mov
push
test
dec
shl
adc
sbb
cmp
nop
addl
leave
and
mov
mov
arpl
pop
push
scas
int3
ret
nop
fdivl
dec
stc
mov
aaa
dec
lret
ljmp
lods
pop
jo
mov
test
fimuls
sti
sub
loopne
stos
dec
hlt
test
sbb
in
mov
addb
repz
scas
pop
dec
mov
sbb
repz
inc
mov
cmp
pop
mov
adc
dec
inc
sub
mov
movsb
insb
insb
jmp
cmp
shl
rclb
mov
adc
int3
push
inc
insl
mov
jo
shlb
mov
or
insl
or
jmp
push
das
in
out
outsb
cld
lea
mov
sbb
inc
jmp
adc
jnp
int
xchg
jecxz
das
out
outsl
loop
mov
sbb
push
icebp
xchg
fxtract
mov
jae
mov
lahf
outsb
xlat
add
jae
call
cmp
mov
dec
jns
jnp
inc
add
mov
in
ljmp
subb
fdiv
sahf
ljmp
aaa
and
or
fimull
ret
jbe
stos
cmpsl
fnstsw
jmp
cmp
mov
push
mov
cmpsl
sti
xor
dec
sahf
cld
mov
mov
mov
cmp
scas
jae
jno
push
int3
xchg
xor
ds
out
aam
repnz
push
hlt
push
rcrl
fsubrs
sbb
mov
idivl
fldenv
jne
stos
jns
mov
xchg
arpl
dec
rcll
lea
sub
jmp
add
adc
pop
out
inc
mov
iret
inc
inc
repz
mov
sbb
mov
pusha
das
sbb
aaa
clc
lds
ljmp
push
lret
out
mov
mov
adcb
pop
pop
lods
adc
mov
add
or
enter
sbb
mov
subl
fildll
fsubs
mov
stos
xor
outsb
xchg
inc
test
div
in
mov
mov
fs
xchg
or
or
sub
add
sbb
push
sub
jl
nop
mov
scas
adc
sub
or
jl
jg
lods
ret
or
xor
repz
pop
mov
pop
pop
jno
xor
mov
push
in
sbb
sub
fmull
pop
mov
cli
push
mov
mov
push
ds
fists
nop
in
inc
testb
add
cld
and
movsl
mov
jnp
cmp
lret
pop
dec
mov
or
pusha
cmp
adc
cmp
dec
mov
js
jmp
sub
outsb
xor
adc
xor
push
fcmove
ret
int
mov
lock
outsb
mov
pcmpgtd
cmp
lods
sbb
sub
dec
inc
fldt
minps
jecxz
cmp
cmp
mov
cmc
lods
or
mov
sbb
or
fcomps
mov
das
ret
mov
add
dec
xchg
mov
cmpsb
mov
loope
pusha
fisttpl
jo
mov
xchg
aam
lds
mov
lret
subl
mov
scas
ljmp
daa
or
aad
in
mov
loopne
xor
xchg
xorl
and
lahf
call
mov
test
or
shlb
sahf
pop
sbb
push
into
stos
mov
adc
adc
test
add
les
insb
hlt
rclb
pop
daa
hlt
popf
adc
xlat
jle
inc
lock
out
inc
mov
lret
sbb
icebp
aas
lods
cs
push
sbbb
mov
xor
fcmovne
ss
pushf
cmp
lods
mov
sti
divl
cmpsb
aas
add
xorl
idivb
cld
push
add
mov
jns
inc
jp
sbb
add
sbb
dec
xchg
aas
jmp
lock
push
out
aam
add
inc
pop
inc
dec
lcall
in
and
stos
into
cmp
mov
inc
test
addr16
lcall
jmp
jbe
lea
mov
movsb
and
push
sti
out
xor
mov
pushf
sarb
lock
push
xchg
or
sbb
cmp
push
lret
ret
pop
adc
imul
stc
lock
les
cmp
mov
xchg
cli
int
jmp
fcomip
jg
jb
shlb
xor
ds
movsl
sbb
inc
mov
jae
ds
jne
mov
or
pop
fstpl
cmp
jl
in
dec
and
in
jecxz
pop
sub
push
testl
test
xor
arpl
cmpsb
jbe
mov
stc
or
dec
mov
mov
cmp
push
int3
xchg
jbe
lock
ljmp
sbb
adc
out
adc
mov
jb
push
movsb
xchg
sbb
sbb
mov
sti
in
pop
aam
mov
xor
scas
lods
lret
adc
adc
mov
dec
lds
jge
xchg
imul
and
call
inc
mov
push
pop
daa
lahf
lret
and
repnz
cld
add
add
mov
dec
xor
mov
xchg
mov
mov
enter
xor
popa
xor
in
call
mov
or
mov
ljmp
xchg
push
cmc
dec
xchg
test
adc
test
aam
insb
xchg
pop
push
and
and
and
inc
ja
and
jl
and
sbb
sbb
mov
dec
mov
fidivs
call
sarl
dec
sti
in
sbb
xor
push
ds
das
mov
sbbb
into
dec
sbb
and
sarb
add
inc
sub
jbe
ja
cwtl
test
es
push
mov
rorl
jg
popf
insl
shl
add
data16
call
lret
mov
repnz
push
scas
lock
add
mov
dec
mov
adc
jnp
mov
push
je
mov
pop
pop
scas
mov
or
jecxz
movsb
jo
fdivs
loopne
mov
push
ficompl
inc
mov
pop
add
das
sub
cmp
fninit
dec
dec
dec
loop
push
mov
das
push
popa
mov
push
lods
mov
subl
test
xchg
push
mov
jnp
sbb
out
sbb
sbb
shl
add
test
ficoml
bound
in
jmp
nop
jecxz
xor
push
sahf
sub
cli
ja
pop
mov
lahf
subl
mov
in
mov
mov
cli
cmp
stos
jg
lcall
jg
adc
cltd
repz
outsl
loope
adc
imul
jae
inc
jbe
jnp
push
sbb
pop
or
cmp
push
and
push
or
and
mov
jmp
inc
bound
dec
mov
mov
scas
pop
mull
lea
lock
popf
cmp
aam
push
xchg
push
sti
sbb
orb
pop
pushf
lret
xor
cwtl
mov
rol
clc
adc
pop
pop
jo
leave
sub
cmp
out
adc
mov
sub
mov
out
adc
mov
scas
in
xchg
lahf
sbb
jmp
dec
pop
mov
push
push
lret
mov
sbb
fnstenv
push
cld
sarl
stc
pop
adc
add
jp
xchg
xorb
cmp
mov
je
stc
fcomip
pop
lea
or
fs
pop
xchg
push
cmp
ror
andl
mov
and
mov
pop
push
lea
push
js
js
int
testl
cmc
aaa
pop
dec
arpl
pop
jo
jns
sbb
cmpsl
std
test
inc
jae
mov
lea
ss
sub
add
dec
mov
push
cmpsb
push
popf
adc
pop
lods
dec
push
ss
arpl
mov
push
or
sarb
lret
scas
aad
hlt
mov
inc
push
jle
cmp
inc
jbe
ret
icebp
push
dec
movsb
je
mov
xor
adc
add
cmp
aaa
fimuls
or
push
push
outsl
xchg
sub
jge
aas
ret
in
fimull
add
and
cmc
xlat
out
mov
fwait
jl
js
in
stc
push
push
inc
nop
aam
not
sbb
add
out
orb
push
cmc
push
int3
xchg
lcall
leave
pusha
add
and
outsb
into
inc
loop
push
mov
push
lret
mov
leave
push
psrlq
adc
mov
in
xor
sub
mov
mov
mov
cli
ss
mov
loop
fmuls
mov
roll
movsb
int
sbb
mov
dec
lahf
loopne
or
xlat
xlat
cmc
xchg
imul
inc
lock
add
xor
mov
dec
push
mov
aam
push
sub
and
mov
adc
xor
push
push
ror
push
shrb
repz
pop
cmc
xchg
mov
sbb
not
icebp
adc
sbb
push
xlat
sub
dec
sbb
add
pushf
and
in
aaa
daa
add
pushf
push
push
jnp
jp
add
pop
sub
loop
arpl
into
mov
dec
push
add
mov
cmp
sbb
sub
scas
insb
jb
xchg
xor
jecxz
pop
lcall
mov
les
add
mov
repnz
test
xchg
jmp
daa
cs
adc
xor
jnp
fildll
jle
fwait
pop
sbb
or
sub
das
inc
pop
pop
lock
in
and
pop
mov
dec
sub
fiaddl
fsub
cltd
out
dec
les
orl
inc
adc
cli
sarb
mov
repnz
inc
movsl
insb
inc
mov
pop
inc
cmpsl
shlb
daa
and
nop
sahf
aas
mov
jg
xchg
adc
or
ljmp
jg
pop
fbstp
and
or
dec
imul
cld
xlat
jg
sbb
dec
mov
sub
dec
xor
ret
cmpsl
mov
mov
gs
mov
mov
clc
xchg
push
loop
lret
orb
cmp
pop
stc
test
mov
mov
enter
sub
adc
pop
push
movsl
mov
mov
sti
dec
fstps
cmp
mov
test
jecxz
inc
enter
lods
ljmp
jo
popf
popa
in
dec
gs
dec
push
adc
rcrl
inc
movsb
push
adc
xlat
mov
testb
sbb
push
outsb
jne
xor
aaa
out
add
add
and
jno
adc
xchg
jecxz
mov
push
lods
mov
je
roll
or
jmp
push
sbb
sbb
mov
and
push
cmc
andl
lds
imul
push
mov
call
pop
push
fdivrl
insl
aaa
or
mov
sub
push
sbb
stos
add
in
orl
adc
xchg
sbb
inc
sti
mov
jo
rclb
dec
lods
scas
ljmp
repnz
rorl
stos
out
fimuls
and
pop
xchg
add
loop
stos
or
inc
cmp
in
mov
les
in
pop
mov
push
mov
push
sub
das
mov
enter
frstor
and
aas
adc
lcall
jne
cmp
push
pop
cmpsb
bound
mov
subl
inc
pop
cmp
adc
fcmovnbe
lcall
fisttps
ficompl
sub
or
inc
add
fbstp
ja
and
es
push
or
push
sbb
aam
fldt
sbb
adc
stos
sub
mov
test
mov
mov
adc
sub
ja
inc
mov
out
push
stos
dec
enter
hlt
int
xchg
outsl
shlb
xor
add
loopne
das
xor
mov
xor
clc
push
cmc
jmp
xchg
push
xchg
xchg
add
test
int
push
test
mov
out
fistpl
imul
xor
stos
pop
jecxz
xchg
enter
test
jns
mov
cmp
cltd
cmp
fsts
test
xchg
jmp
inc
push
mov
mov
inc
push
repz
aas
mov
dec
daa
pop
and
add
mov
jmp
push
repz
mov
jecxz
int3
insl
dec
sbb
or
sbb
jp
push
dec
adc
shlb
sub
jne
mov
clc
popa
insb
test
pop
loopne
mov
jle
mov
and
mov
je
ja
xchg
cmp
and
mov
dec
xchg
mov
dec
mov
lods
cwtl
xchg
inc
mov
push
xchg
lcall
lods
mov
mov
inc
mov
in
loopne
insb
ret
in
in
clc
ds
clc
lret
jo
cmp
push
int
fmulp
testb
daa
inc
sub
repz
adc
sahf
mov
andl
fisttpl
pop
mov
pushf
pop
data16
lret
push
pusha
outsb
mov
rcl
xchg
fs
adc
sti
movl
dec
adc
push
mov
lock
pop
jge
lret
mov
fdivr
sub
mov
test
xchg
fistpll
into
leave
mov
xchg
rolb
dec
push
movsl
sub
pushf
lret
dec
adc
push
popf
movsb
mov
lcall
lahf
pop
mov
or
outsl
dec
add
dec
pop
xchg
iret
cmp
imul
out
xchg
movsl
sbb
inc
xchg
xor
mov
xchg
mov
add
decb
or
inc
stos
sub
stos
cmp
mov
mov
outsl
jp
leave
rclb
out
inc
add
pop
adc
add
out
in
popa
jmp
cmp
inc
xchg
jle
ficoml
insb
mov
sbb
repz
in
jae
jecxz
outsb
push
dec
inc
sub
or
popa
cltd
push
sbb
inc
jb
js
xchg
nop
lahf
or
push
lods
stos
or
jb
mov
pusha
add
cmpps
mov
mov
js
xor
or
movsl
push
stos
mov
add
pop
movsl
or
mov
add
aaa
adc
scas
push
dec
xchg
loop
std
lods
inc
adc
lods
adc
xor
sbb
sub
stc
popf
sbb
lds
leave
add
xlat
mov
addl
fnstenv
gs
test
addr16
icebp
dec
adc
cwtl
sarb
push
adc
add
push
es
push
pop
fnstsw
xor
jns
into
push
mov
cmp
dec
inc
dec
and
test
test
or
call
and
xor
pop
jl
pushf
js
scas
gs
xchg
into
jo
or
lcall
int
mov
pop
das
and
mov
aam
push
fstl
lahf
movb
lea
mov
adc
xchg
pop
inc
ja
fisubrl
and
ss
clc
and
fidivl
insl
loop
or
xor
stos
inc
pop
mov
aas
popa
cli
adc
mov
mov
shrl
orl
sub
or
sti
nop
xor
or
das
or
and
cmp
dec
movsb
push
jnp
ret
mov
xlat
pop
aas
iret
sub
hlt
dec
and
and
and
ja
loopne
out
xor
jle
push
test
cwtl
jge
inc
inc
cmp
and
jnp
inc
mov
ror
bound
push
mov
and
jbe
xchg
mov
or
aaa
inc
call
adc
mov
into
imul
sahf
into
repnz
mov
pushf
lahf
dec
cld
stos
jo
mov
jnp
pop
xor
xor
or
orl
aas
shrb
xchg
sub
mov
pusha
mov
inc
in
jecxz
jb
sub
insl
inc
push
adc
lea
fists
inc
lret
fdivrp
enter
movsl
add
test
mov
aam
xor
dec
push
sbb
adc
test
cmp
loope
pop
outsb
js
lods
in
pop
fcoms
xor
testb
or
fucomi
xchg
adc
jp
and
push
or
outsl
jge
pop
aaa
js
sbb
scas
add
aam
cwtl
lcall
jmp
clc
push
mov
lret
in
lahf
lods
negl
mov
adc
aas
or
jle
loopne
pop
inc
scas
int3
mov
pop
lods
pop
push
cmp
out
pusha
popa
shll
addb
shrl
decl
leave
and
out
cltd
outsl
cwtl
push
addb
xor
jno
cmpb
lods
loop
mov
movsl
add
hlt
out
add
jo
imul
in
scas
adc
out
fmull
adc
hlt
out
arpl
jge
pop
xor
scas
lods
inc
addl
inc
stos
add
cs
jge
popa
sarl
inc
adc
maskmovq
push
fsubrs
sbb
inc
add
push
jne
inc
lds
mov
xor
inc
arpl
scas
cmp
popa
in
cmp
sub
lods
addr16
sub
stc
sbb
push
push
pop
xor
xchg
push
sbb
dec
pop
mov
or
ja
shll
sub
mov
and
mov
je
out
jne
in
jne
push
xchg
test
fcompl
cmp
and
in
sahf
loopne
dec
psllq
lret
mov
mov
cmp
pop
pop
pop
ja
lds
jbe
xorl
stc
jbe
pop
in
jns
add
jo
jo
adc
scas
incl
xchg
push
pop
ljmp
repnz
shrb
mov
and
pop
mov
jl
sub
push
arpl
jl
imul
jmp
mov
pop
lea
popa
sub
xor
out
test
out
and
loopne
inc
aaa
outsb
sub
mov
sar
fcomps
dec
dec
mov
test
std
nop
pusha
cmpsb
cmovns
add
gs
scas
mov
jo
mov
shrl
fwait
sti
inc
out
pop
lods
fs
dec
fisubrl
roll
jecxz
mov
ljmp
jb
xor
lds
sahf
or
pusha
push
ds
repz
lods
mov
cmp
inc
fisttpll
dec
icebp
add
sar
rolb
mov
stos
pop
xlat
and
mov
push
pop
cmc
mov
lret
dec
pop
dec
nop
add
popa
int3
stos
push
dec
cmp
mov
pop
rclb
aad
cmp
inc
mov
adc
movsb
and
repnz
or
js
xor
les
scas
jae
out
imul
mov
negb
into
cmp
push
das
out
fdivrl
sub
insb
stc
dec
das
mov
jl
or
lods
pop
ret
in
sbb
cltd
hlt
mov
add
ret
and
jbe
out
mov
lds
mov
xchg
subl
push
add
stos
add
dec
fldl
cmp
vmovdqu
lea
mov
fstps
dec
pop
xor
xlat
into
mov
ret
add
sub
adc
mov
jle
mov
jecxz
push
mov
inc
or
pop
test
push
addr16
push
jo
subl
lods
push
mov
aad
xchg
icebp
add
jns
stos
stc
add
lahf
popa
cmc
sti
and
hlt
mov
jo
pop
fs
enter
inc
cmc
mov
dec
xlat
cmp
loop
dec
jge
aas
out
stos
out
dec
fs
sub
mov
pop
insl
push
inc
sub
aaa
out
jae
and
call
add
ret
xchg
cmp
insl
push
rcll
cmp
add
pop
add
dec
push
xor
sbb
dec
jle
push
adc
fs
inc
xchg
push
js
testl
xor
test
stc
push
pop
lods
push
push
push
rcrb
into
inc
push
aam
imul
cmp
mov
mov
inc
cld
xchg
mov
inc
sub
addr16
push
xchg
mov
mov
xchg
ds
jno
sahf
repnz
inc
mov
xlat
adc
fdivl
xlat
or
sub
xchg
repnz
out
xor
cltd
in
and
outsl
lea
xchg
xchg
cmp
icebp
xchg
mov
loope
repz
test
cltd
cltd
popa
jb
xchg
call
repnz
xor
fs
push
xchg
mov
loopne
jl
lret
cmpsl
cmp
orl
pop
mov
fimull
jl
fsubs
mov
or
lahf
dec
sub
test
sbb
lods
insl
repz
jae
pop
call
lret
sub
and
je
outsb
push
int
xchg
mov
inc
cmp
fisubrs
jmp
jmp
push
clc
pushf
in
dec
xchg
out
pop
add
sub
fstpl
fmul
sub
sub
inc
add
pop
aam
repnz
mov
rclb
sub
mov
cmp
inc
adc
gs
imul
test
push
jo
pop
jo
dec
inc
mov
adc
js
jae
jp
outsb
stos
test
ret
pop
xchg
rcrl
roll
out
rolb
daa
dec
or
push
mov
das
bound
call
mov
jns
popf
sbb
stos
in
ret
loope
or
mov
shlb
adc
mov
sbb
mov
hlt
out
cmp
jmp
add
and
push
sbb
and
push
bnd
adcl
mov
int3
in
pop
fisubs
lret
pop
mov
rorb
hlt
cld
pop
push
cmp
cmpb
fwait
and
cmp
mov
out
ret
sbb
sahf
mov
jb
mov
xchg
shl
movsl
dec
dec
hlt
addr16
loop
sahf
pop
or
jbe
rolb
shll
jne
int3
xchg
dec
xchg
in
stos
sub
sub
in
jge
xchg
insb
dec
subb
test
xchg
push
add
pop
lcall
inc
fistl
dec
sub
add
loopne
sbb
int3
fisttpll
jecxz
and
test
stc
ja
xor
sub
subb
push
mov
cs
int
loopne
shr
cmpb
mov
mov
push
push
mov
xlat
js
in
ljmp
add
mov
aam
filds
jecxz
inc
in
cmpsb
rol
ja
xlat
out
sarl
out
leave
stos
nop
imul
or
jo
ja
sub
xchg
cmp
daa
addr16
outsl
sub
sbb
in
mov
mov
push
imul
mov
sbb
adc
iret
scas
mov
movsb
aam
pop
lods
push
test
cmp
fistpl
sahf
pop
sub
insl
push
cli
test
imul
jp
dec
data16
mov
insb
jmp
and
cwtl
pop
movsb
loop
adc
jge
push
or
add
and
sub
mov
mov
inc
xchg
xlat
ret
leave
cmp
or
jae
xor
call
inc
out
repz
cli
sahf
stc
cmp
jae
mov
dec
mov
ss
pop
mov
xor
pop
rcr
mov
nop
cmp
push
test
jge
pop
mov
lret
ss
decb
and
out
pop
ss
int
ds
push
scas
pop
addr16
xor
xor
in
adc
push
aaa
popf
fsts
push
mov
pop
pop
sub
xor
sub
and
mov
je
dec
arpl
mov
push
repnz
ja
je
ret
sahf
dec
mov
inc
or
cwtl
dec
int3
loope
and
lret
and
mov
idivb
mov
es
adc
xor
rcr
inc
fadd
loop
xchg
xor
xchg
js
outsl
jecxz
outsl
fistps
jo
addr16
fsubrs
imul
pop
ljmp
mov
lods
repnz
and
push
xchg
imul
sarb
add
and
sbb
or
xor
gs
cmp
pop
push
mov
fimull
jecxz
pop
rdpmc
lret
out
faddl
mov
push
shll
das
arpl
into
cmp
jns
add
pop
scas
daa
arpl
mov
add
lock
push
shl
or
in
ficomps
mov
dec
decb
out
dec
notb
pop
mov
mov
andl
cli
ja
pop
dec
cmp
mov
or
test
pop
loop
inc
jnp
pop
xchg
js
aas
xchg
push
xchg
lret
push
mov
adc
popf
push
shlb
add
or
cmp
cmp
mov
incb
xchg
andl
pop
rorl
jns
jmp
out
mov
xchg
jnp
and
pop
sbb
clc
sbb
jbe
or
cld
push
jne
scas
pop
or
jecxz
aaa
sbb
fistpll
xor
icebp
std
jp
popf
aam
sbbl
jg
out
iret
mov
sub
jge
scas
xor
add
out
int
sub
call
jecxz
lea
mov
fcoms
sub
jnp
jbe
push
out
jle
fcoml
stc
arpl
je
adc
mov
inc
xor
add
xchg
mov
cmp
inc
mov
lcall
scas
outsl
or
sub
in
loope
sbb
adc
sub
enter
push
mov
fisttpl
icebp
sub
xor
dec
fsub
sahf
nop
cli
add
jb
and
sbb
cmpsl
jp
sbb
imul
or
push
scas
aam
dec
or
movsb
mov
sbb
gs
dec
xchg
push
inc
stc
scas
cmp
icebp
shll
add
mov
adc
pop
cmp
les
and
xor
and
dec
mov
xchg
xchg
ficoms
push
inc
add
push
or
scas
mov
jp
inc
outsl
sahf
jle
outsl
or
movsb
xor
js
ret
push
pop
xchg
arpl
xor
mov
and
fidivrl
aad
lock
xor
stc
push
add
or
out
rdpmc
adc
out
lahf
jb
pop
sub
lret
add
ret
call
and
inc
ficoml
adc
mov
jbe
and
insb
into
and
mov
rclb
aam
and
aam
or
fisubrs
xchg
sub
fisttpl
popa
adc
stos
jmp
adc
loopne
minps
addl
add
popf
xchg
std
cs
sti
xchg
jo
xor
xor
mov
mov
ret
addr16
or
scas
inc
xchg
mov
jo
jno
cld
xchg
cmc
in
jbe
or
add
and
ret
mov
mov
xchg
imull
arpl
jecxz
and
cmc
and
push
jmp
push
mov
jne
fucomp
test
in
in
mov
lods
and
cmc
inc
mov
mov
adc
mov
mov
dec
loopne
out
ret
jl
leave
push
test
test
jg
mov
gs
jo
sub
ror
stos
aaa
js
and
loope
in
mov
and
fxch
cmpsl
and
adc
mov
add
push
sub
pop
add
xchg
mov
mov
jnp
fdivr
mov
test
out
mov
ljmp
sub
insb
inc
ja
and
jnp
pop
shlb
xchg
mov
rcrb
test
jl
fs
popf
jnp
cltd
subb
dec
add
push
sub
dec
xchg
mov
aaa
aad
or
sbb
arpl
gs
cld
sar
fisttpl
rolb
ret
mov
mov
push
test
adc
mov
iret
scas
add
xchg
or
int3
lret
call
and
jne
push
jmp
cmp
push
shll
fmul
ffreep
mov
sub
fwait
mov
ficomps
pop
xor
mov
push
fidivrl
jmp
sahf
lods
and
in
or
and
dec
addr16
sbb
jb
jns
sub
les
fcoms
int
mov
decb
stos
add
test
jmp
add
pusha
sbb
pop
mov
stc
mov
std
pop
in
and
pop
arpl
mov
jo
jo
out
mov
ret
pop
push
cmp
sub
jno
andb
push
fwait
or
xor
inc
and
mov
push
fildl
cltd
mov
scas
ljmp
dec
dec
xor
xor
rolb
fisubl
push
sub
in
jns
mov
adc
cmp
sbb
daa
dec
test
iret
push
int3
xor
and
andb
scas
mov
push
pushf
mov
das
cwtl
int3
test
out
shl
jecxz
inc
pop
in
sub
and
inc
push
rorl
es
xor
sar
imul
adc
and
test
mov
cmpsb
sarb
adc
aad
loope
cld
inc
pop
stc
fadds
sbb
cmp
sti
pop
mov
mov
dec
push
pop
push
fwait
hlt
xlat
movsb
stos
cmpsl
push
lahf
push
ja
les
pop
pop
sbb
push
xchg
inc
sub
add
test
leave
shrl
adc
xchg
add
pop
adc
lahf
cvttps2pi
and
faddl
repz
adc
aad
enter
iret
or
jnp
xor
xor
jecxz
outsl
in
pop
iret
outsb
xor
push
pop
mov
inc
rcr
addr16
out
dec
push
mov
das
mov
sti
fs
cs
notl
loop
mov
call
pop
insb
mov
mov
mov
rcll
jle
pop
stos
xor
sub
sub
add
sbb
lods
xchg
fdivs
sahf
lea
pop
fdivrs
jnp,pt
and
xchg
shlb
nop
pop
cld
sbb
or
sbb
cmp
sar
mov
movb
pop
out
mov
lret
add
inc
sub
pushf
xor
inc
and
ja
neg
mov
stos
xor
fnstsw
mov
mov
cmp
push
icebp
stos
jl
mov
stos
or
loopne
loop
mov
xchg
jge
push
push
shrl
out
xorb
cmp
test
out
ds
stos
jne
add
pop
or
sbb
aas
inc
xor
mov
rcll
repz
mov
pop
adc
fcoms
push
mov
cli
in
mov
push
jecxz
sti
daa
mov
fdecstp
or
loop
or
lods
fwait
and
push
and
in
scas
pushf
mov
adc
and
xor
xor
and
lods
push
loope
and
sbbb
pop
ss
mov
jnp
nop
cmp
scas
cwtl
or
inc
jo
ss
addr16
mov
lds
sub
xor
lahf
or
in
std
mov
fbld
push
into
aas
sarb
adc
jecxz
and
cmpsb
int
sbb
dec
mov
jg
cli
ret
mov
push
stc
fimuls
fnstsw
js
mov
cmpsb
daa
pusha
rcrl
outsb
xchg
out
adc
test
addl
mov
jno
xor
pop
mov
sbb
inc
jg
dec
pop
dec
and
iret
fisttpl
jnp
xchg
cmp
cmp
dec
sub
dec
cmp
inc
pop
adc
test
jae
cli
psubw
fdivp
mov
push
jmp
xorb
loope
or
shlb
mov
and
aad
mov
aad
or
ret
clc
fwait
mov
lcall
push
xor
roll
lcall
mov
inc
lret
cs
pop
mov
out
push
push
jle
xor
inc
movsl
push
cmp
pusha
and
xchg
js
jmp
repnz
adc
sub
sbb
leave
das
insb
mov
dec
clc
aad
pop
arpl
push
into
hlt
pop
mov
adc
popaw
jecxz
lock
sarb
add
outsb
add
mov
mov
fsubr
pop
mov
jl
out
adc
xchg
insb
xchg
jb
sbbb
fidivs
in
frstor
jo
lods
lods
and
xchg
clc
cwtl
loop
jl
outsb
pop
fiadds
or
cmpsl
shl
clc
xor
mov
out
stos
push
movsb
xchg
aaa
xchg
arpl
mov
lahf
sbb
jg
push
sbb
xchg
or
push
or
jmp
xor
xor
imul
inc
movsb
jle
data16
inc
mov
inc
pop
mov
decl
and
xor
dec
pop
orb
xchg
popf
neg
das
fsubp
cmp
cmp
js
or
mulb
fstl
and
push
and
fldenv
adc
popf
addr16
scas
cmp
mov
mov
out
jp
push
add
cltd
aam
test
lret
push
icebp
jne
into
xlat
mov
xchg
stos
je
scas
ret
mov
leave
mov
mov
jecxz
popa
jecxz
jmp
xlat
mov
aam
fwait
jns
out
in
out
or
ss
daa
ret
dec
push
mov
adc
pop
mov
test
mov
dec
add
dec
js
add
rcrl
ljmp
sbb
jb
faddp
mov
hlt
inc
sbb
mov
push
imul
gs
push
mov
imul
mov
push
pop
inc
adc
mov
jecxz
ficomps
insl
test
nop
mov
je
dec
dec
scas
and
push
add
movsl
pop
shr
mov
cmp
cld
cmpsl
sbb
adc
dec
repz
das
push
pop
lret
or
push
js
adc
dec
dec
jo
push
sbb
cmpsb
cmp
test
dec
cmpsl
icebp
sbb
mov
fs
testb
mov
add
mov
movsb
mov
add
scas
xor
cmp
jl
xchg
sbb
push
fs
pop
adc
repz
test
cmc
push
outsb
jb
add
cmp
subl
mov
xorb
pop
and
int3
icebp
in
push
mov
outsb
inc
jmp
inc
push
fdivs
sub
addb
and
sub
test
sbbl
cmpsb
or
mov
scas
xchg
aad
push
stos
cs
aaa
sbb
jge
dec
push
add
pop
xor
cmpsl
xor
mov
and
sti
es
adc
call
enter
cmp
push
jo
dec
push
jnp
fwait
sub
push
push
inc
dec
cmp
adc
das
pop
into
sbb
popf
pop
daa
xor
ljmp
mov
stc
dec
filds
dec
pop
addr16
xchg
negl
mov
test
cs
xor
lea
adc
mov
mov
cltd
fadd
pop
test
repnz
adcl
aas
push
ljmp
sub
inc
stc
cmp
or
jecxz
cmp
mov
adc
out
nop
mov
add
lea
mov
inc
mov
dec
test
mov
imul
push
outsl
shlb
inc
pop
in
inc
pop
mov
mov
push
subb
rclb
clc
mov
insb
push
in
inc
mov
push
jecxz
and
leave
xor
jge
pop
fadd
movsl
dec
daa
mov
cwtl
hlt
push
jge
pop
ret
je
cltd
scas
xchg
or
repnz
lods
or
pop
outsl
cmpsl
xor
jae
repnz
cmp
jl
lds
popf
xlat
mov
inc
es
clc
into
dec
in
enter
nop
enter
mov
repz
jge
outsl
lods
dec
lret
jle
adc
add
push
add
ret
aaa
jge
mov
sti
sub
jmp
insl
pand
enter
push
dec
mov
mov
mov
mov
test
cmp
sub
popa
dec
add
mov
adc
xchg
dec
outsl
xchg
jns
orb
mov
or
mov
lds
xor
pop
adc
lock
dec
mov
mov
daa
stos
xchg
cmp
or
in
je
int3
and
pop
and
call
or
insb
pusha
int3
test
mov
aam
nop
enter
fs
sub
sub
sub
push
jg
mov
xchg
outsb
insb
pop
aad
mov
xchg
je
std
pop
lods
test
mov
mov
shl
jmp
loopne
fsubrl
imul
push
sub
je
sub
out
in
pusha
std
xchg
out
mov
outsl
adc
int
in
js
xor
sti
pusha
dec
xor
jg
push
test
push
mov
push
insb
cwtl
in
pop
icebp
pop
testb
pop
sahf
pop
mov
add
sarb
outsl
loope
test
ret
mov
and
gs
cmp
cmp
mov
lcall
mov
daa
mov
mov
rcl
mov
mov
push
movsl
mov
xchg
mov
mov
jl,pn
out
xchg
cltd
push
dec
pop
sub
push
cmpsl
add
or
mov
mov
xor
inc
push
lock
lods
pop
pop
icebp
jmp
lahf
jp
push
bound
mov
inc
mov
popf
ret
push
cltd
xor
cmp
mov
pop
jmp
xchg
mov
push
iret
mov
sbb
cltd
sarb
or
mov
xchg
repnz
cltd
insl
ror
cmp
imul
xchg
sahf
insb
push
xor
lock
jle
jb
mov
or
push
inc
adc
sbb
fsts
std
mov
mov
jnp
sarl
mov
stc
push
sbb
dec
cmp
incl
and
ficoml
ds
pop
push
enter
cmp
addr16
mov
fbld
lock
mov
in
xchg
pop
sub
sub
cld
mov
cmp
and
pop
lcall
jno
scas
in
leave
inc
dec
mov
int
sub
push
add
stos
cmp
dec
imul
or
lock
ljmp
out
push
jl
sub
jmp
dec
mov
in
sbb
inc
fsubl
sbb
xchg
mov
and
fsubrs
jne
loope
sbb
sbb
mov
pusha
loopne
data16
push
mov
cmp
pop
mov
gs
xlat
ljmp
sub
push
sbb
fs
cmpsl
xchg
or
cmp
mov
inc
xchg
push
fsts
test
dec
mov
cli
roll
orl
mov
fwait
add
sbb
fwait
call
inc
out
gs
pop
gs
push
out
out
inc
cmpsb
jno
pushf
stos
pop
mov
sbb
test
push
subl
sbb
mov
sahf
in
std
sub
or
mov
rclb
sti
gs
fildll
iret
cmpsl
mov
lods
cmp
xor
pop
jno
push
mov
rcr
push
test
jge
sub
out
ffree
adc
add
push
add
sub
mov
in
dec
in
mov
iret
push
sbb
xlat
xchg
push
pop
add
stos
nop
inc
cmp
mov
adc
lea
jp
dec
cmpsb
cs
xchg
mov
enter
or
inc
adc
mov
add
rol
and
inc
mov
xchg
cwtl
pop
or
push
ret
imul
sbb
jge
push
adc
cmpsl
dec
mov
sub
sahf
mov
mov
inc
sbb
dec
loop
repz
xchg
enter
testl
fbstp
in
cmp
lea
cmpsl
lahf
scas
nop
out
aas
adc
ds
mov
sbb
xor
mov
sbb
jne
movsb
sbb
add
and
dec
into
cltd
or
cmpsb
outsl
xor
push
and
sar
nop
sub
lock
int3
das
insb
mov
add
push
std
call
cmp
ret
fistpl
rcrl
lret
sbb
pusha
inc
ja
sub
jae
mov
aas
cli
sbb
and
jle
or
leave
jne
call
xlat
fistps
cmp
lods
dec
mov
xchg
push
popf
jmp
adc
sbb
pop
lea
or
es
push
xor
pop
cmp
js
iret
shll
pop
loop
inc
and
jno
sub
jb
insl
sbb
enter
xor
and
cld
mov
sub
mov
test
inc
shlb
lcall
gs
cmp
ficomps
je
jp
mov
test
repz
dec
ret
and
cmp
cmp
lods
push
insb
out
insl
dec
ja
jl
popa
fistl
cmp
mov
enter
sbb
fimull
push
testl
test
xor
pop
loop
sarl
sahf
mov
out
test
mov
inc
aas
and
adc
cmp
jo
ss
cld
fimuls
add
mov
adc
or
push
lds
mov
cwtl
call
xor
in
dec
jle
movsb
sbb
pop
xchg
imul
ds
lods
mov
dec
aam
mov
addr16
sarl
in
and
pop
xor
xchg
lock
clc
ds
pop
push
cmp
fsubl
fsts
fdivs
mov
sti
pop
pop
xor
inc
mov
pop
sbb
lods
lret
xchg
call
push
aas
int3
xchg
inc
sub
add
sbbl
rol
sub
mov
sub
lret
into
fldenv
lret
lods
or
push
outsl
ljmp
mov
lds
push
cmp
pusha
add
andb
xchg
lods
popaw
mov
add
out
sub
lret
cs
in
rcrl
shrl
arpl
inc
cmp
add
sti
mov
xchg
adc
sbb
test
cmp
xchg
jmp
je
out
mov
cmpsb
cmova
pop
cli
xor
rep
insb
mov
xchg
push
cwtl
sub
lea
stc
cmp
sar
loop
xchg
out
jmp
add
movsb
rclb
dec
push
mov
jge
ret
sar
aas
pop
sbb
dec
gs
adc
push
pushf
in
addr16
int3
mov
dec
or
repz
sbbl
xchg
xchg
popf
pop
cmpsl
adc
outsb
xor
loope
mov
or
test
std
fildll
jno
push
stos
pop
cmpsl
inc
pop
mov
push
push
jnp
mov
lret
ret
test
and
inc
sbb
adc
outsl
ds
into
nop
adc
sbb
xchg
xor
push
xor
jne
ss
xchg
ret
mov
jp
pop
dec
into
mov
or
pop
sub
cmpsb
jns
imulb
push
push
mov
ret
mov
adc
lock
in
imul
add
in
dec
xor
lahf
and
subl
popf
mov
call
insl
daa
add
sub
lock
mov
aam
inc
xor
lret
sub
cwtl
les
insb
xchg
imul
pop
mov
inc
jno
lret
sbb
or
push
int
sbb
cmp
pop
cmp
sbb
jno
xlat
dec
mov
das
shlb
es
xor
fcmove
and
xchg
or
jmp
ret
sub
insb
add
andl
sbb
sub
les
movsb
mov
jbe
imull
adc
cmc
fstpl
mov
dec
lret
xlat
mov
ds
loope
pop
or
push
pop
jno
bnd
outsl
in
scas
jg
ss
and
sub
jmp
stos
sub
add
popf
movsb
in
sbb
outsl
jecxz
mov
mov
push
or
xchg
pop
push
sahf
jecxz
cmp
enter
aas
mov
dec
xor
and
add
and
mov
mov
cmc
imul
mov
mov
pushf
fidivrl
pop
adc
je
mov
xor
nop
xor
rep
out
je
mov
and
dec
cmp
dec
shlb
push
cld
push
sub
cmpsl
lds
sub
filds
rolb
sbb
mov
pop
imulb
push
cmp
dec
rorl
lods
jno
movsl
ja
arpl
inc
shr
clc
aas
movsl
mov
mov
in
adc
lds
cmp
ficoms
add
push
lret
adc
outsb
call
fs
push
dec
xor
and
int
push
movsl
mov
jae
dec
xor
mov
dec
ja
ljmp
mov
sbb
or
lret
add
jge
mov
xor
jno
xor
test
add
test
std
ds
mov
test
sbb
xor
roll
ret
cmpb
or
cmp
mov
or
in
ss
pusha
add
pop
outsl
dec
test
inc
inc
lea
jp
shl
inc
aad
xor
lea
cld
push
xor
adc
cmp
fsubr
inc
xchg
jno
mov
jp
sbb
lahf
mov
cwtl
cmc
jne
xchg
int
pop
dec
pusha
popf
out
test
test
lahf
adc
pop
rcll
test
xor
dec
xchg
int3
sahf
adc
les
xchg
pop
aaa
shr
daa
ret
scas
lahf
cmp
test
mov
inc
cwtl
dec
cld
mov
and
cmp
in
lods
xor
jg,pt
cmp
jno
sbb
les
push
push
decb
fnsave
out
inc
xor
stos
jp
sbb
xor
or
sbb
test
ss
mov
or
loopne
cli
ss
nop
pop
mov
js
xor
dec
data16
outsl
test
jmp
data16
lret
dec
mov
push
cmc
and
push
loopne
cs
cmpsl
outsb
adc
fisubrl
dec
out
shll
notb
imul
inc
mov
popa
out
push
push
adc
sub
add
push
sbb
data16
jbe
cwtl
inc
xchg
fs
jge
icebp
fmuls
or
xchg
mov
sbb
pop
addr16
adc
xor
xchg
and
ljmp
xor
xchg
test
fmulp
data16
cli
push
inc
loopne
xchg
in
jp
inc
in
jb
fmull
mov
jecxz
daa
mov
lods
mov
and
mov
dec
xchg
mov
subl
pop
iret
data16
adc
mov
mov
xchg
out
hlt
cli
jns
es
ja
dec
inc
lods
cmpb
mov
lret
imul
cld
pop
jnp
mov
mov
mov
sti
add
data16
sbb
cmpsl
jg
xor
lahf
pusha
mov
pop
adcl
out
aaa
call
mov
fadds
sbb
cmp
gs
adc
ljmp
pop
mov
xor
aam
in
xlat
cltd
out
jnp
pop
push
fildll
or
dec
xchg
lcall
cmpsl
add
inc
in
imul
push
imul
push
mov
add
icebp
xchg
mov
mov
clc
cmp
out
aaa
cmp
dec
push
inc
cli
and
mov
clc
leave
adc
jae
subl
sbbb
jns
fidivrs
dec
ja
ret
adc
pop
mov
les
fsubr
push
fisttps
jl
push
dec
lods
rcl
popf
xchg
dec
mov
iret
into
mov
cmp
jmp
push
repnz
clc
std
cvtps2pd
pop
fldenv
loope
sbb
cs
sub
into
cltd
loop
pushl
cmp
nop
cltd
cmp
aas
adc
and
insb
cmp
push
inc
push
adcb
jge
mov
or
test
push
xchg
js
enter
mov
std
dec
xor
incl
mov
inc
ja
push
push
add
movb
pop
cwtl
xchg
daa
les
push
les
cmp
pushf
insl
jo
jge
test
enter
push
je
mov
es
enter
mov
mov
sbb
cmp
rol
iret
je
mov
mov
mov
aas
cmp
fmull
cmp
and
insl
lock
jecxz
xor
sbbl
dec
push
scas
aam
negb
dec
ds
les
and
stc
sbbb
icebp
repnz
or
jl
sbb
sbb
inc
pop
jl
mov
xor
cmc
xor
pop
ret
inc
fldt
in
lock
jae
xchg
scas
cmpsl
mov
in
imul
je
lcall
xchg
xor
insl
push
cltd
inc
or
sub
add
xchg
push
loopne
jbe
arpl
jle
movsb
sub
push
imul
push
loopne
adc
clc
xchg
jns
in
lcall
lcall
mov
xor
jp
lds
push
xchg
mov
cmp
jmp
cld
int
cwtl
mov
inc
add
roll
imul
xor
xchg
cmovg
xor
and
jae
ror
cmp
sarb
sub
ret
xchg
stc
xor
mov
mov
dec
jle
sub
aad
mov
push
loope
jg
mov
das
xchg
movsb
push
xor
fcmovnbe
loope
rorb
jb
push
je
or
gs
int3
mov
lahf
mov
outsb
fdivl
fbstp
mov
push
cmp
xor
xor
jo
popa
mov
test
push
sub
sbb
in
or
loope
dec
addr16
imul
jle
ds
aaa
xorl
dec
imul
fiaddl
adc
outsb
push
insb
dec
test
pop
mov
cmp
push
inc
sub
mov
push
add
xor
ljmp
mov
popa
pop
mov
mov
das
push
sub
mov
adc
mov
push
inc
pusha
jns
push
fcoml
mov
push
ret
aas
cwtl
ds
push
push
mov
add
dec
dec
out
rcr
in
cli
ljmp
gs
int
lods
mov
push
lds
jecxz
movsl
cmp
ret
mov
or
les
push
ficoml
lret
inc
xchg
push
test
dec
out
mov
out
sbb
aas
sbb
test
in
iret
push
and
out
shrl
cli
xor
clc
jno
std
adc
xchg
ja
jge
push
lock
rcrl
iret
mov
add
jle
leave
sbb
adc
sbb
jmp
sbbl
popa
and
enter
add
inc
inc
movsb
push
shlb
mov
dec
cmpsl
rorl
mov
jmp
xor
or
daa
or
lahf
fmuls
jmp
out
rcl
stos
loop
xchg
pop
int
sub
push
vmaxsd
mov
popa
lret
push
out
rcrb
xor
cmp
jg
push
dec
push
je
push
xchg
mov
sub
cmp
add
jmp
idivb
movsb
add
pop
and
and
jne
shlb
add
pushf
pop
sbb
pushf
cmc
int
scas
jp
out
fisubrs
out
jae
icebp
fcomps
loop
pop
out
xor
rcl
push
mov
jecxz
fcomi
psadbw
inc
int3
cli
xchg
push
cmp
jge
xchg
xchg
scas
inc
repnz
in
or
sub
dec
and
jle
lods
push
jmp
push
pop
std
jge
xorb
dec
rorl
mov
in
push
fdivs
mov
out
lods
stos
aas
push
inc
cmpsb
data16
xchg
lret
xchg
mov
cpuid
sbb
mov
gs
dec
inc
jecxz
mov
jge
test
or
leave
cltd
and
or
sahf
lret
sbb
lods
xor
mov
xor
cwtl
int3
mov
dec
popf
pusha
iret
mov
jo
lea
mov
mov
add
jp
fstl
or
icebp
jne
pop
mov
in
aaa
pop
sbb
hlt
or
and
add
cmp
das
jo
jo
outsl
pop
subb
ret
xchg
mov
mov
out
dec
ljmp
gs
outsl
xchg
and
dec
pop
test
cmpsl
xchg
aas
lret
fdivrl
lret
cmp
add
fimull
cld
cli
dec
iret
movsb
inc
and
daa
push
xchg
popf
cmpsb
inc
int3
iret
mov
sbb
cld
ljmp
sbb
insl
sub
je
xor
mov
and
xchg
les
cmpsb
iret
xchg
pop
clc
in
mov
mov
push
dec
ljmp
push
pop
fcompl
addb
jns
fucomp
add
fld
stc
loope
mov
fistpl
inc
xlat
sbb
out
adc
out
out
push
pushf
pop
shrb
inc
lock
or
mov
nop
dec
mov
lds
push
sub
jo
mov
out
lret
xor
push
mov
dec
xor
sar
loop
mov
adc
pop
ficoms
xchg
daa
out
xor
sub
ss
cmp
mov
or
std
xacquire
pop
sahf
jg
xchg
daa
or
xor
nop
inc
mov
daa
sbb
nop
fldt
imul
dec
mov
push
push
xchg
mov
shll
xor
mov
add
test
mov
pushf
fistpll
sahf
sub
mov
outsb
arpl
sub
loop
jno
mov
movsb
jb
out
lds
jae
dec
cmp
shll
mov
arpl
lods
outsb
xor
in
adc
adc
push
movsb
inc
sub
cmc
in
insb
aaa
std
insl
lahf
fdiv
fbld
cmp
or
mov
pop
mov
xor
in
gs
test
leave
sbb
loope
ret
aam
jl
pop
sub
lahf
xchg
push
aad
adc
ret
rcll
add
les
sub
iret
xrelease
inc
mov
out
out
adc
mov
in
js
adc
jge
iret
mov
mov
and
idiv
xor
adc
adc
cmpsb
pop
fdiv
jge
or
test
inc
cmp
loope
lods
aas
xor
mov
sub
icebp
dec
add
int3
stc
push
lret
sbb
mov
xchg
int3
cli
xor
lahf
jmp
or
fidivl
subb
test
cmp
sub
fsubrl
mov
je
notb
cmpsb
mov
les
pop
dec
jbe
mov
aas
je
ret
jo
test
or
mov
xchg
insb
adc
fnsave
xor
mov
dec
icebp
and
lock
pop
lds
cltd
xchg
aaa
fldcw
mov
xor
xchg
push
mov
mov
fwait
aaa
aad
sub
ss
iret
and
fldl
mov
jecxz
xor
mov
aaa
dec
das
in
je
jb
inc
cwtd
cmp
xchg
stos
pusha
mov
pop
fwait
jecxz
es
std
int3
lods
loop
cmp
out
test
fldl
push
sub
scas
test
nop
adc
mov
or
lds
out
js
out
call
test
loopne
jmp
fistl
push
and
rcrb
pop
pop
add
add
repz
into
daa
div
mov
sub
push
jmp
repz
subb
and
fnstsw
push
xor
xchg
inc
rorl
sbb
lods
stos
subb
roll
dec
mov
cwtl
mov
pusha
sub
dec
js
fbld
stos
insl
mov
shrl
cmpsb
not
stos
rcrl
xchg
mov
fcoml
sbb
xchg
xchg
rclb
test
ja
test
popf
jne
inc
adc
jae
nop
lods
sub
mov
aam
fldcw
clc
outsl
fs
or
mov
outsl
das
filds
xchg
int
int
mov
jp
xchg
pop
adc
test
mov
push
sbb
pop
lods
xchg
xchg
sub
xor
mov
in
jecxz
jmp
out
xchg
imul
in
sahf
je
push
lds
es
repnz
xchg
out
sub
xchg
mov
and
push
jp
in
cwtl
adc
xchg
arpl
and
push
mov
inc
aas
dec
dec
int3
inc
xchg
in
mov
ljmp
sub
ljmp
call
or
push
bound
jnp
fiadds
xor
cmp
orl
jae
sub
sub
push
xchg
ja
or
mov
sub
mov
jg
je
insl
jnp
fimull
sub
iret
roll
aam
cmp
dec
imul
int3
sbb
adc
jge
dec
inc
inc
xchg
fiaddl
loope
jo
mov
out
ds
mov
scas
mov
add
dec
shr
pop
jp
pushf
insl
nop
lea
mov
clc
push
js
out
scas
aam
call
pop
xor
xchg
sub
inc
fwait
adc
mov
shrb
das
xchg
stc
ja
pop
les
sbb
and
inc
ret
dec
xor
fistpl
lock
or
sub
mov
in
dec
xchg
loop
jl
ret
cwtl
sbb
lret
aam
sbb
xor
jecxz
push
outsb
gs
jmp
inc
fs
jmp
fwait
dec
out
cmp
sbb
lock
ljmp
mov
fdivrl
push
mov
subb
xchg
jp
arpl
in
in
mov
cmpb
rcll
add
les
test
pop
inc
loop
mov
jnp
mov
mov
and
cmp
mov
loope
fnstenv
aaa
and
ret
movsl
sahf
in
mov
push
push
loope
add
test
mov
in
inc
mov
push
xorb
pop
lret
dec
sub
dec
and
adc
inc
arpl
sbb
addr16
mov
out
mov
into
lahf
idivl
aad
push
js
into
roll
shll
addb
insl
or
cld
lock
sbb
or
cmc
ret
enter
clc
xor
add
enter
dec
decl
stos
mov
push
out
iret
test
in
add
scas
scas
cli
cmc
pop
sbb
jo
subl
and
xor
jmp
shlb
imul
push
loopne
cmp
mov
xchg
stos
add
adc
push
add
mov
ror
pop
das
shrb
mov
jmp
lock
data16
rorl
mov
mov
test
sbb
sbb
mov
pop
inc
addl
cltd
call
je
mov
arpl
fs
jo
pop
addr16
icebp
mov
movsl
je
mov
out
xchg
out
jecxz
cltd
iret
cld
dec
sahf
mov
shll
test
roll
adc
sbbb
add
ja
jbe
ret
mov
into
and
or
and
mov
mov
pop
sub
or
cmpsb
cli
push
pop
leave
rcll
insl
decb
pusha
mov
div
and
insb
sbb
pop
aam
push
out
out
sbb
lods
push
sub
jp
in
stos
gs
mov
mov
or
arpl
cltd
add
jge
fwait
ret
xchg
fadd
movsb
cmp
icebp
rol
jne
pop
push
adc
dec
sbb
jl
xchg
paddusb
and
imul
and
add
adc
inc
lods
pop
push
lahf
xchg
jb
adc
scas
aam
ljmp
fwait
mov
add
push
push
sbb
cld
mov
and
loopne
add
push
cmc
inc
mov
fstp
push
shll
mov
mov
addl
mov
push
int3
inc
iret
pop
add
sub
pop
pop
mov
ret
jle
and
lahf
sbb
xchg
fs
ret
push
addb
pop
mov
jbe
jo
pop
adc
cmc
in
and
push
add
xchg
iret
in
jne
push
sub
pop
pop
jg
push
fs
mov
add
xlat
shll
stos
adc
mov
dec
push
bound
inc
inc
cmpsb
adc
fbstp
out
out
mov
push
shlb
pop
push
or
xchg
popa
pusha
xchg
dec
cld
jmp
imul
jg
imul
mov
lds
fneni(8087
cmpsb
es
push
inc
les
test
inc
mov
xor
gs
jns
arpl
sbb
rcll
xor
xor
lret
enter
sbb
fdivr
outsb
and
sbb
or
shll
in
pushf
test
pop
inc
or
call
xor
popf
scas
scas
mov
notl
aaa
dec
fbld
push
pop
js
hlt
repz
mov
jle
xor
cwtl
pusha
push
les
lods
add
stos
mov
sbb
insb
and
stc
xchg
pop
mov
sbb
push
movsl
fwait
adcb
es
sbb
hlt
inc
add
xchg
lods
add
mov
xchg
les
lods
jo
fs
ss
fwait
and
push
into
nop
js
sbb
pop
and
jmp
push
ret
mov
mov
jge
sbb
push
aam
mov
aas
sti
pop
push
mov
jg
add
mov
jo
inc
or
and
stos
into
test
stc
out
push
push
das
repz
icebp
push
scas
arpl
fs
call
scas
iret
gs
incb
jbe
cmp
sub
leave
shrl
fnstenv
xchg
add
nop
adc
sbb
push
std
add
add
mov
out
test
sbb
out
ret
scas
jns
jmp
add
pop
sbb
stc
jl
xchg
enter
and
xchg
int
jbe
xorl
shld
inc
in
ret
mov
insb
pusha
mov
add
int
pop
icebp
scas
rorl
leave
cwtl
hlt
pop
fstpt
data16
ja
aam
fs
jmp
sbb
rclb
push
push
sbb
or
pop
shlb
or
in
fcoml
jle
adc
or
mov
cltd
pop
shll
mov
pop
push
leave
fisubs
mov
shr
jne
out
mov
out
inc
or
popa
inc
int3
mov
cwtl
inc
stos
pop
jne
imul
add
xchg
mov
aad
out
ds
and
mov
push
cmpsb
push
filds
dec
popf
popf
mov
outsb
xchg
adc
ret
push
mov
sbbl
enter
push
mov
jns
sahf
pop
insl
sbb
int3
and
and
xchg
mov
or
xor
gs
shr
xchg
and
jb
fsubr
in
pop
xchg
push
jge
jno
nop
or
mov
pop
fcomip
icebp
adc
mov
cmpsb
cmc
pop
and
stc
push
mov
sub
pcmpgtb
ljmp
inc
dec
jmp
cli
mov
mov
pop
xor
add
sbb
fsubs
mov
mov
push
or
sub
push
rorb
scas
fcmovne
pop
stos
jecxz
fwait
pop
dec
xor
push
adc
inc
in
mov
sbb
mov
lcall
xor
repz
cld
fsub
into
inc
lret
jne
fwait
pushf
pop
push
ja
add
cmp
pop
or
sbb
cmp
jge
mov
arpl
pop
mov
mov
popf
test
jecxz
lcall
push
dec
xor
pop
sub
insb
movsl
or
popf
dec
aam
mov
mov
mov
sti
mov
sahf
pop
push
adc
enter
dec
data16
mov
adc
insb
imul
mov
pop
pop
mov
dec
out
jle
pop
or
pop
push
mov
fwait
xchg
stos
jge
sti
push
loope
leave
mov
pop
pop
push
jne
mov
xor
les
cld
jge
xor
adc
cmpsl
xchg
sub
sbb
or
ss
jae
pop
push
bswap
shlb
xor
jmp
lret
scas
xchg
lea
dec
dec
sbbl
fwait
loope
adc
cli
loop
int3
outsb
jl
xchg
sub
adc
pop
mov
jne
fnsave
rcrl
scas
sbb
mov
add
push
std
pop
push
dec
xchg
or
clc
jns
xor
sub
mov
xor
adc
in
push
dec
fnstsw
mov
push
push
or
cwtl
das
rclb
jl
inc
cltd
popl
test
in
aaa
jae
pop
inc
cmpsl
mov
movsl
push
nop
pop
rcrb
scas
movsb
jp
aad
mov
repz
pushf
into
pop
test
mov
std
fistpll
das
mov
fidivrl
jle
push
inc
movsb
scas
cmc
outsl
imul
dec
push
testb
mov
outsb
hlt
outsb
arpl
inc
sbbl
popa
scas
ret
add
xor
add
pop
push
and
sahf
and
mulb
adc
int
adcb
ljmp
mov
mov
add
je
test
mov
pushf
inc
mov
push
insl
repnz
stos
jbe
lret
sbb
jmp
adc
push
out
push
mov
add
aam
rcrb
mov
cmc
and
sti
jg
jo
enter
mov
js
loopne
test
popl
jl
xchg
lods
add
cmp
inc
cmp
dec
mov
push
xlat
int3
vmaxsd
jo
mov
adc
sbb
adc
test
adc
dec
mov
jno
lock
jae
into
mov
dec
ficomps
mov
lahf
cli
call
test
xor
scas
mov
lods
sbb
mov
xorl
and
jb
add
inc
mov
push
lgs
mov
jecxz
mov
in
and
lods
mov
mov
stc
dec
sbb
fisubrs
mov
xchg
xchg
lods
pop
fwait
rclb
stc
sbb
mov
rclb
test
ret
jmp
dec
push
push
inc
or
adc
aaa
ret
stos
ja
inc
sbb
insl
mov
mov
jl
jnp
test
mov
sub
lock
pop
stc
popa
dec
and
mov
push
cli
movsb
lcall
movsl
xor
aam
sarl
inc
add
repz
push
movsb
inc
jg
fst
mov
ficomps
icebp
lcall
shrl
mov
das
fcmovu
cmp
aaa
pop
pop
dec
shlb
sbb
sbb
mov
dec
mov
and
les
das
addr16
mov
imul
fwait
jecxz
jne
pop
in
es
out
fs
mov
loop
jns
outsb
call
mov
ja
xchg
push
sbb
mov
bswap
cmp
stc
pop
cmp
pop
clc
and
jmp
dec
add
jae
cmpsl
leave
adc
xor
inc
aad
test
cmp
lcall
pop
xchg
add
fidivl
and
mov
outsb
mov
mov
call
pop
mov
xor
add
nop
cmp
imul
and
pop
cltd
stos
repz
adc
xor
sar
xchg
jmp
xor
pop
dec
pop
rolb
mov
jmp
mov
fs
mov
loop
ret
dec
add
jg
shrl
sbb
adc
out
xor
aas
mov
pop
iret
push
adc
fildll
adc
jae
cmp
xchg
mov
hlt
add
loopne
into
pop
cmc
pop
xchg
mov
mov
sbb
sbb
or
pop
xchg
xorl
add
scas
scas
mov
xchg
out
mov
mov
insb
inc
lock
cltd
ret
mov
jne
cmp
sti
out
stos
jmp
out
pop
stos
sub
out
cltd
lcall
or
cwtl
aad
mov
clc
lea
jge
das
jb
add
inc
xor
stos
xchg
mov
mov
std
inc
repnz
xor
pusha
adc
inc
fsubrs
jb
es
mov
arpl
mov
stc
mov
rcr
shrl
push
or
adc
jecxz
into
lret
sub
stos
cmp
dec
sar
sbb
and
and
out
call
int3
pop
popf
sub
bound
pop
jp
xor
adc
mov
aad
inc
incl
jge
mov
sti
jae
pop
mov
xorl
mov
xchg
lea
push
cwtl
add
mov
cmp
sub
push
int3
push
push
xor
push
ficompl
push
xor
mov
das
mov
in
imul
ss
inc
xchg
inc
insb
push
xor
pusha
aad
mov
sub
xchg
xchg
push
aaa
pop
insl
xor
xchg
dec
mov
xchg
jnp
addr16
jp
cmp
xchg
mov
mov
mov
jmp
pop
arpl
mov
fdivr
dec
in
and
xchg
dec
out
divl
test
stos
pop
ret
jecxz
nop
lock
xor
mov
test
xchg
dec
sub
mov
testl
sbb
push
icebp
aad
arpl
push
xor
push
dec
inc
adc
es
out
sarb
or
fsubp
mov
push
jecxz
ret
into
int
xor
popf
jg
int
jl
inc
adc
call
aaa
lcall
prefetch
or
xchg
mov
addr16
mov
add
aaa
ds
jg
and
jns
mov
cmc
and
cltd
cmp
scas
push
inc
je
mov
adc
jle
xchg
xchg
jno
dec
xor
jg
ds
cmpsl
adc
mov
ljmp
add
mov
push
xor
insb
sub
loopne
dec
imul
push
lock
pop
xchg
push
or
sub
in
or
addr16
mov
sarl
cwtl
add
add
inc
pop
ss
fadds
mov
and
or
add
stos
sbb
fmull
cld
pusha
aaa
or
or
cwtl
cmovge
add
scas
sahf
inc
cmpsl
dec
addl
sbb
jge
and
in
or
sti
addb
jmp
xor
aaa
lret
imul
lcall
popa
flds
cmp
sbb
lret
add
push
cmp
push
or
mov
dec
notl
mov
cs
xor
pop
push
ret
jle
push
mov
sub
shlb
mov
adc
mov
sbb
push
adc
ja
push
out
add
push
inc
adc
sub
mov
in
gs
mov
mov
jbe
or
or
push
push
movsl
xchg
addr16
jbe
xor
shr
lcall
sahf
xchg
inc
in
gs
pop
jne
dec
subl
cmp
dec
stc
inc
push
pop
cs
ljmp
jb
xchg
ss
inc
fimull
cli
mov
xor
in
mov
loopne
je
inc
xchg
mov
jbe
ficoml
les
push
les
addr16
fstps
sub
mov
outsb
jle
push
enter
ds
mov
xchg
scas
in
add
divl
adc
insb
dec
xchg
out
icebp
adc
addr16
xchg
mov
push
aam
sbb
adc
test
popa
sbb
gs
mov
ret
mov
lea
xor
push
xchg
aam
mov
mov
in
cmc
in
add
sarb
pop
xchg
and
scas
push
icebp
push
ret
outsb
xor
mov
popa
outsb
cs
rcl
cs
sti
fcomps
or
inc
push
sti
mov
xchg
int
adc
loopne
outsb
rcl
and
punpcklwd
cmc
aas
cmp
sar
lock
and
mov
inc
push
faddl
mov
dec
pop
pop
stc
mov
xchg
xlat
add
mov
or
repz
xorb
movsb
sbb
jmp
leave
subl
aam
mov
in
and
jle
cmp
pop
lret
mov
sub
mov
in
or
adc
gs
js
cld
jle
xchg
fstl
inc
cmp
sbb
xlat
jns
int
test
mov
jmp
cld
and
outsb
iret
imul
stos
out
jge
sub
sar
dec
lcall
mov
movsb
add
or
xor
pop
xor
rol
lods
jbe
ret
icebp
negl
stos
adc
sbb
sbbl
xchg
sub
imul
loop
dec
adc
jnp
lea
sub
jge
insl
add
push
push
mov
xchg
hlt
inc
sub
pop
jmp
ret
movsb
nop
aad
or
std
push
ss
in
addb
fs
ret
lret
ljmp
cli
xlat
repnz
cld
mov
xchg
repz
add
jp
jno
push
dec
in
fildl
aas
mov
cmp
sub
sub
ja
jl
in
cmp
imul
sub
pop
mov
int3
push
jmp
mov
pop
outsb
fs
jle
mov
adc
fwait
lods
pop
mov
es
fistl
mov
test
out
ss
ret
cmp
xchg
hlt
cmpsl
data16
mov
xor
repnz
sbb
xchg
popa
sti
cld
or
hlt
ja
and
shl
cmpsb
adc
xor
aad
repz
dec
mov
push
in
cltd
movsb
and
sbb
iret
xor
sar
fidivs
mov
ss
xchg
call
sbb
sub
mov
in
fwait
nop
pcmpeqw
test
adc
mov
mov
push
ss
and
xlat
jbe
mov
fsubrs
add
in
lods
loopne
stc
ds
xchg
stos
loopne
xchg
ljmp
adcl
xchg
jp
loope
and
je
mov
outsb
pushf
and
aad
xor
mov
pop
xchg
es
push
mov
xor
pop
lret
and
addb
adc
movsl
sbb
add
mov
shll
mov
fs
inc
fstpl
pop
out
dec
call
inc
loope
xchg
mov
xchg
outsl
push
lock
or
jl
mov
repnz
aad
jnp
int
inc
fstl
das
xor
fidivrs
dec
inc
xor
andl
mov
pop
push
mov
pop
pushf
ja
rolb
jno
jb
pop
insl
ret
pop
dec
int
in
hlt
xchg
inc
xchg
mov
ss
xchg
inc
data16
push
jp
dec
mov
mov
adc
add
cli
inc
stc
cld
idivb
test
ret
rorl
and
xor
imul
in
daa
inc
inc
pusha
xchg
mov
sbb
dec
cmp
lods
jne
adc
scas
arpl
push
dec
stos
test
pop
adc
and
mov
xor
cmpsb
sbb
xor
mov
xchg
lea
adc
into
mov
test
aam
fs
mov
in
in
xchg
test
mov
adc
dec
gs
mov
jnp
pop
mov
inc
stos
imul
shll
lret
outsb
add
mov
xor
ss
mov
lods
mov
popa
jle,pt
out
cmp
sbb
movsb
mov
das
outsb
mov
inc
ss
jp
fwait
xchg
ret
fildll
arpl
loopne
hlt
inc
mov
and
imul
inc
mov
es
out
xor
lods
cmp
fst
aam
ret
or
push
arpl
lds
sbb
aaa
and
rcrb
sub
jmp
sub
int
cmc
cld
mov
cs
mov
call
fisubrl
push
arpl
inc
fidivrl
outsb
adc
into
addr16
ret
lds
fdivrl
push
xlat
es
dec
icebp
dec
mov
lods
pop
fiaddl
rclb
cmc
gs
into
insl
xchg
mov
bound
hlt
repz
std
daa
fdivs
dec
cltd
mov
pop
inc
loope
cmpsl
or
mov
dec
sbb
ret
push
fdivrs
mov
dec
cmp
and
pusha
mov
movsl
inc
mov
jnp
adcb
in
push
ret
flds
and
fstpt
xor
clc
add
in
cmp
shld
pop
loope
xchg
adcb
fldcw
jecxz
mov
pushf
inc
les
xchg
mov
jae
jbe
sub
inc
push
push
into
or
out
andnps
adc
btrl
mov
data16
adc
xchg
xchg
or
mov
ss
push
out
in
in
mov
dec
movups
and
mov
mov
scas
xor
sub
loope
or
xchg
fwait
xor
cmp
adc
les
sbb
scas
outsl
inc
scas
mov
hlt
sbb
in
dec
addl
ljmp
int3
and
jns
fs
and
sub
sahf
loope
push
cmc
add
shll
fcoms
push
sub
xorb
leave
popf
idiv
fmuls
fiaddl
cmp
xor
inc
int3
cmp
addr16
jo
mov
lcall
push
test
mov
popa
mov
cltd
xorb
push
stos
cwtl
mov
pop
mov
rorl
xchg
xchg
mov
sub
mov
stc
into
in
icebp
cmp
mov
mov
jle
sbb
dec
push
mov
pusha
ljmp
push
notl
lcall
mov
cmp
xor
dec
rorl
adc
in
lea
xor
scas
out
fmull
or
jecxz,pt
shl
nop
xchg
out
jae
dec
mov
push
adc
hlt
or
add
in
ja
test
insb
int3
pop
mov
and
or
aaa
push
je
mov
xchg
lret
sub
xor
rorb
in
add
jno
dec
adc
testl
int
test
mov
popf
jne
loope
scas
push
push
mov
push
popf
arpl
ds
add
cwtl
ja
push
mov
sub
insb
jecxz
mov
int3
xchg
dec
adc
bound
add
jns
sub
and
mov
push
in
and
pop
test
sub
or
stos
ss
lods
bound
adc
xchg
jmp
xchg
mov
aad
mov
cmc
shrb
xorl
lods
pop
fucomp
int
and
dec
mov
ror
mov
mov
shr
rcrl
pusha
hlt
push
insb
inc
bound
push
das
xor
call
inc
clc
and
cld
adc
dec
adc
packuswb
orl
frstor
cmp
pushf
lds
xchg
jo
enter
sub
mov
fisttpll
popa
or
or
cmp
rorl
out
xchg
mov
lods
xchg
daa
push
dec
je
inc
mov
lea
add
jb
cmp
lods
mov
sti
mov
mov
fsubl
jecxz
adc
xor
jnp
fstpt
adc
and
jg
lret
adc
push
xchg
cli
aad
mov
jbe
outsb
daa
jnp
inc
pop
xor
jmp
xlat
mov
inc
jno
or
mov
or
mov
jnp
dec
inc
repnz
and
jnp
dec
xchg
or
xchg
adc
adc
push
movsb
mov
adc
lret
fldt
push
sub
cltd
test
imul
stc
push
xor
sbb
or
hlt
mov
mov
inc
rol
test
push
pop
ljmp
sub
aad
pop
sahf
ret
fs
push
movsb
lds
jg
jae
adc
negl
adc
adc
inc
push
ss
jl
int
mov
push
or
mov
sbb
mov
std
jg
xchg
xor
push
pop
push
jl
jno
sahf
sbb
pushf
xor
cli
ret
test
push
sub
lods
pop
push
ss
test
add
jae
sbb
cli
mov
xor
sub
mov
or
gs
stos
gs
aad
mov
dec
and
cmp
pop
push
jne
xchg
push
mov
mov
mov
mov
xchg
mull
xchg
lahf
mov
lods
lock
adc
sbb
gs
push
add
push
mov
xchg
adc
inc
jmp
cmp
jmp
clc
sub
pop
xor
icebp
xchg
aam
inc
dec
enter
rolb
pop
dec
adc
sti
sbb
test
stos
xorl
cmp
push
add
add
loope
mov
jne
mov
subl
cmp
push
clc
xor
les
sub
sub
stc
push
mov
sbb
adc
aas
jne
movsl
hlt
xchg
hlt
rcr
aas
add
mov
push
fdivs
xchg
add
loop
inc
adc
inc
mov
icebp
jne
sub
pop
repz
mov
ucomiss
jb
les
mov
pop
sarb
cmp
xchg
sub
mov
and
push
int3
fiadds
push
bound
xchg
adc
clc
cld
add
push
dec
adc
mov
sub
je
fcomps
pusha
fistps
shll
and
lahf
pop
push
pushf
mov
sub
inc
movsb
iret
dec
push
outsl
sub
mov
and
jl
mov
cmpsl
aas
int
jle
sbb
ja
cwtl
adc
ret
stc
inc
rorl
out
decb
xchg
mov
jg
lods
ret
imul
fisubs
mov
movsb
nop
pop
mov
aaa
imul
mov
mov
sub
push
pop
mov
sbb
mov
xchg
jecxz
jns
stos
cmp
cmp
ja
dec
lret
insl
test
insb
cmp
mov
insl
arpl
mov
jbe
sbb
mov
jae
lcall
lock
xchg
mov
mov
xchg
leave
xor
pop
sbb
arpl
cmc
add
out
bound
push
xchg
xlat
scas
addl
loope
push
std
in
adc
sub
inc
icebp
mov
arpl
out
sbb
push
lcall
jl
mov
icebp
jg
adc
sahf
push
pop
push
into
lret
and
sbb
sub
adc
scas
and
cmp
fiadds
dec
sbb
cs
lea
mov
xor
cmp
lods
mov
stc
jge
and
imulb
out
sub
je
xor
xchg
jnp
sub
xchg
jne
lods
bound
or
in
adc
push
sti
xlat
cmpsl
arpl
movsb
es
dec
mov
mov
or
movsb
sbb
ret
sub
pop
mov
xor
outsl
inc
in
insb
inc
ja
pushf
jp
push
push
mov
sub
testb
insb
sbb
jo
fldt
sbb
sub
jae
add
into
and
sbb
jns
jnp
loope
jecxz
mov
ja
cli
in
leave
ss
add
add
stc
das
jb
aaa
pop
stos
in
cs
add
shrl
pmaddwd
inc
inc
push
and
sbb
jge
rorl
pop
inc
daa
sub
stos
repz
and
imul
jecxz
std
inc
insl
cwtl
cmp
pop
push
out
mov
pop
xor
or
and
dec
loope
arpl
fildl
aas
pop
push
mov
or
pop
in
jbe
fdivrp
xor
mov
shlb
lcall
repnz
out
stc
popl
nop
adc
andb
add
pushl
les
lds
mov
mov
mov
movsl
std
sub
dec
add
push
or
ficoms
test
jb
pop
ds
fcoms
pop
aad
nop
jmp
fldt
call
pop
lahf
jo
push
fistpl
push
cs
enter
lock
inc
scas
cmp
shlb
adc
iret
ja
sub
je
mov
push
aad
inc
or
jp
and
cli
mov
mov
lock
push
pop
inc
call
dec
fistpl
mov
inc
int
xchg
sbb
pop
jmp
and
stos
add
inc
lret
xor
cwtl
lods
out
or
insl
or
and
pusha
dec
popf
cmp
loop
mov
filds
xlat
je
mov
insl
insl
repnz
aam
lahf
scas
popf
cmc
stos
cmp
dec
mov
dec
jno
inc
lret
push
push
outsl
and
xor
inc
test
pop
mov
ret
add
rorl
lcall
and
jge
xchg
sub
sbb
mov
and
mov
mov
test
fmull
sbb
add
add
xor
dec
aad
clc
scas
lds
popa
push
ss
movsb
sbb
sbb
and
lods
jnp
pop
jne
and
cmpsb
sti
and
jmp
mov
loopne
repz
repz
pop
mov
in
xor
loop
mov
pop
xor
mov
and
and
es
and
cwtl
js
jns
cmp
inc
lods
lret
sbb
test
sbb
mov
aam
mov
push
dec
jo
mov
mov
inc
jmp
xchg
mov
and
xchg
cmp
sub
mov
inc
fwait
out
mov
sub
cs
shrb
jbe
add
pop
mov
fisttpll
clc
cmp
or
insl
iret
fwait
mov
sub
and
add
pop
in
adc
in
fs
dec
popa
aas
jmp
push
push
cmp
and
outsb
je
pop
and
insl
rcrl
arpl
fwait
xor
add
xchg
jns
fsub
cmp
mov
xchg
leave
aad
push
clc
cs
pop
lods
adc
xor
sti
hlt
insl
fwait
scas
popa
cmp
or
mov
mov
pop
pusha
negb
push
js
je
cli
sti
out
mov
xchg
test
mov
dec
jno
pop
pop
xlat
cs
fisttps
divps
out
daa
fst
test
push
sub
push
cmp
push
das
jnp
push
mov
loope
sub
ja
dec
repz
xor
movsb
loop
lcall
in
dec
jno
lods
push
mov
jge
outsl
and
cwtl
mov
adc
and
repz
in
imul
es
push
pop
xchg
cmpsb
inc
inc
adc
rcll
lods
sbb
in
in
rorl
cs
inc
or
xor
ss
pop
pop
xchg
inc
test
repnz
vunpckhpd
aam
es
mov
adc
push
add
mov
ror
adc
push
mov
xlat
roll
xor
adc
addr16
inc
xor
inc
xor
hlt
in
jg
fistpll
fs
pop
data16
or
outsb
lahf
dec
out
push
scas
fwait
loopne
sbb
arpl
iret
xor
out
pop
add
adcb
lods
cmp
adc
into
ret
jns
pop
loopne
jp
cwtl
lock
or
fdivl
xchg
push
pushf
pop
decb
call
ucomiss
pop
mov
cltd
mov
fnstsw
popf
sti
mov
jecxz
sbb
icebp
loopne
inc
xchg
into
outsb
inc
icebp
inc
inc
aad
push
sbb
and
inc
jmp
je
cmp
mov
int3
lods
add
push
sti
cmp
lds
cmp
sub
ret
aad
call
or
fdivrl
movsl
jb
insb
cmpsl
int3
addr16
mov
mov
or
sbb
or
scas
gs
pop
adc
loop
sub
andb
lret
xor
mov
push
into
sahf
sub
in
pop
clc
jg
mov
notw
dec
je
rcr
sub
dec
mov
xor
shll
cmp
imul
lret
and
jno
or
stos
inc
arpl
cmpl
cmp
aam
mov
dec
pop
dec
xchg
cwtl
imul
sub
data16
bound
rclb
std
jne
xor
mov
loope
ss
xchg
imul
shl
inc
sahf
mov
cmp
add
or
lods
jge
mov
or
data16
xchg
ret
cwtl
jmp
add
rcrl
in
lods
fld
movsb
dec
push
andb
movsl
fcmovnbe
mov
aam
fisttps
lcall
pop
mov
into
mov
scas
jne
lahf
stos
pusha
movsb
mov
push
sub
dec
out
xchg
pop
xor
pop
cwtl
bound
xchg
cli
inc
movsl
iret
pop
inc
jae,pn
inc
repz
js
cli
shr
xchg
movsb
roll
lret
adc
loopne
xchg
imul
pop
ret
inc
mov
outsl
mov
xchg
sbb
lds
adc
fisubrl
mov
add
ss
mov
sbb
pop
xchg
inc
in
repz
and
dec
insl
les
and
inc
sbb
jns
lods
cs
sub
sbb
nop
add
lcall
sub
fcompl
cwtl
fsubr
rorb
mov
mov
nop
test
add
ret
push
add
jb
aad
xor
movsl
ljmp
addr16
fstpl
cmp
sbb
mulb
fcmovu
ret
jl
dec
xor
pop
xlat
aad
sbb
dec
jecxz
int3
inc
enter
in
pop
jl
sbb
xchg
movsb
adc
add
cmp
pop
mov
cli
inc
mov
nop
mov
cld
sub
lcall
fisubrl
aaa
lret
mov
ss
repnz
dec
mov
scas
cmp
addr16
push
mov
shl
fcompl
dec
pop
outsl
pop
into
add
hlt
std
mov
fcomp
jo
mul
sbb
push
out
fidivl
lods
shll
ja
insl
stc
adc
fmull
push
xor
inc
ucomiss
push
add
xor
fcoml
jle
daa
int
mov
mov
mov
in
fisubl
ret
and
sbb
pushf
xchg
aad
int3
dec
add
xchg
xchg
lret
data16
push
hlt
cmp
lret
dec
xor
and
lds
rclb
stos
stc
mov
iret
xor
pop
ficomps
mov
inc
and
and
mov
jae
push
sbb
std
cli
dec
cmp
outsl
clc
in
into
push
mov
push
xor
mov
scas
icebp
dec
je
mov
jbe
cmp
icebp
pop
or
xor
sub
pop
pop
repz
or
mov
xor
das
or
mov
xchg
aad
test
fdivrl
rorb
jae
int3
in
lods
adc
sub
lea
adc
lahf
jmp
hlt
push
addr16
xlat
xor
fldl
pop
push
int3
divb
jge
lods
fcoml
xor
push
pop
stos
cmp
in
sbb
jg
stc
mov
add
push
cmp
cmpsb
mov
loop
push
and
dec
and
pop
pusha
fsubs
mov
ds
jl
aam
enter
add
adcb
notb
mov
outsb
xor
cld
fldenv
arpl
andb
rcll
icebp
iret
and
pusha
pusha
fldt
or
adc
dec
cmp
xorl
add
lahf
loopne
cmp
fsubs
shrl
xchg
xchg
and
cwtl
enter
dec
lret
popf
xchg
jl
int
ret
jns
out
cmp
lock
cltd
jp
shrb
inc
imul
pusha
cmp
ficompl
mov
outsl
pop
pop
loopne
pop
test
insb
std
mov
mov
dec
adc
das
or
lock
push
sub
out
shrl
adc
repz
cwtl
pop
jge
mov
pop
cs
inc
icebp
push
popa
push
clc
fdiv
pop
sbbl
mov
movsl
cmpsl
xor
jbe
xor
test
cmpsl
lods
out
ret
adc
stc
mov
pop
imul
sarl
mov
insl
insb
xor
add
test
mov
xchg
sub
fcoml
cmpsb
scas
and
cmp
in
cmc
mov
popf
int
add
mov
jbe
dec
inc
mov
and
pop
enter
ret
std
pop
js
pop
or
gs
xchg
jbe
rcrl
sbb
dec
lahf
arpl
sbb
xor
mov
dec
out
imull
insl
push
mov
les
xchg
lods
nop
pop
std
push
mov
mov
rolb
mov
jns
jle
add
fcoms
leave
and
popf
pop
add
test
fildll
cmp
jnp
jmp
lahf
fnstsw
pop
add
cli
xlat
cmp
pop
push
xor
outsb
icebp
lahf
rorl
or
jae
dec
and
fldcw
sub
iret
fcomip
xlat
xor
mov
sahf
and
sub
sbb
add
fs
xor
xchg
pop
data16
loope
fsubr
add
lret
mov
push
std
and
xchg
dec
mov
test
cmp
mov
fldl
out
ficoms
test
cmc
or
push
pop
xchg
movsl
mov
jl
fisubrs
out
lahf
jae
jne
dec
dec
mov
jnp
adc
loopne
movsl
cltd
es
in
imul
ja
cmp
negl
xchg
inc
clc
arpl
imulb
out
shlb
fs
xor
mov
cmp
jecxz
push
adc
sub
xchg
dec
xchg
out
xlat
sub
cmp
jp
lods
jle
cmp
dec
or
adc
jg
outsb
mov
adc
shlb
test
shrl
cs
pop
add
loop
adc
inc
xchg
or
cs
out
in
push
pop
divb
jg
mov
mov
popf
leave
lods
popa
and
and
pop
dec
into
test
fiadds
test
jg
fucom
mov
or
lahf
xor
hlt
adc
jo
cmp
test
mov
rorb
clc
add
pop
pop
repz
arpl
or
jo
aam
aad
pop
dec
adc
jp
or
xchg
adc
and
dec
sti
cwtl
adc
fbld
inc
pusha
mov
push
xlat
mov
out
pop
popf
and
push
push
sbb
adc
insb
mov
mov
mov
pop
jb
pop
icebp
pushf
jge
mov
int
push
xor
jmp
inc
xchg
lods
mov
lcall
mov
fdivr
imul
je
imul
and
mov
dec
cs
notl
cs
xor
das
daa
dec
insb
cmc
call
jg
les
cmpsb
sarb
inc
adc
fisubrs
cmp
mov
inc
add
repz
mov
add
jg
adc
mov
test
stc
insb
int
mov
data16
mov
sub
call
sub
or
call
out
adc
or
cmc
push
loopne
insl
insl
jp
sbb
and
stos
inc
imul
jno
imul
xor
and
lods
pop
pop
loopne
dec
pop
sbb
out
adc
in
sub
sahf
cmpsb
cmp
mov
inc
xchg
xchg
aas
aam
test
cmpl
sub
push
mov
xchg
out
and
lock
inc
cwtl
dec
sub
xor
mov
pop
push
mov
shrl
sbb
stos
lods
push
inc
ret
mov
mov
lods
adc
mov
or
cmpsb
or
orb
cmpsb
xchg
or
sub
xchg
clc
add
xchg
xchg
add
lods
popa
dec
adc
nop
mov
xchg
jae
jmp
aas
or
cmp
ljmp
outsl
inc
movsb
mov
mov
out
rcrl
inc
jo
mov
pop
mov
jecxz
jnp
sbb
fwait
int3
or
dec
and
mov
xor
push
in
insl
dec
xchg
test
xchg
cmc
mov
insl
lret
scas
mov
ja
xchg
jmp
nop
jg
mov
sub
mov
aas
push
add
inc
mov
icebp
fwait
lods
into
fcoms
shll
lea
mov
jmp
add
test
iret
inc
scas
jne
ja
inc
sub
pushf
int3
movsb
fisttps
mov
mov
cmp
dec
lods
mov
jb
sub
mov
sti
pop
and
push
out
les
testb
mov
jno
add
inc
or
dec
adc
clc
and
jmp
int3
jle
iret
sbb
xchg
cmp
cmp
xor
in
and
jae
icebp
and
fwait
out
fst
iret
xlat
inc
xchg
sbb
aas
rcr
in
inc
mov
add
stos
mov
lods
ss
out
rclb
arpl
lock
xchg
mov
mov
dec
rorb
sahf
ja
aas
cwtl
shlb
scas
cmp
mov
and
inc
loope
test
std
lahf
fsubrp
lahf
pop
popa
xchg
int
or
loope
lret
out
fiadds
fcoml
scas
adc
cmp
xchg
push
fucomp
pop
dec
repnz
jge
fldl
ss
jge
jl
adc
pop
out
or
dec
unpcklps
loopne
jg
cmpsl
cli
pop
mov
pop
fdivr
adc
cwtl
mov
add
dec
cltd
adc
cld
lcall
addb
cmpsl
inc
std
int
rcrb
or
mov
ja
adc
mov
cvtps2pi
insl
out
add
xor
enter
leave
and
js
mov
nop
push
scas
ja
fdivrl
mov
test
fnstsw
cltd
clc
ds
pop
sbb
adc
ds
leave
cmp
andl
push
inc
mov
mov
pop
popa
and
mov
push
in
das
pop
popf
sbb
lcall
push
into
jno
loop
add
inc
cmp
push
cmp
es
rcrl
bnd
mov
pop
cmp
xchg
lret
pop
dec
sahf
mov
scas
or
fucomp
jbe
cmp
pusha
ret
out
push
mov
ret
fdivl
and
mov
ficoms
cmp
jl
js
dec
es
inc
insb
dec
mov
sub
ds
xchg
sarl
and
les
mov
cmp
mov
xchg
push
mov
adc
cltd
sbb
or
cmp
cmp
les
or
incb
scas
cld
ret
jle
xlat
sbbb
popa
repz
shlb
push
lds
and
scas
mov
hlt
pop
sub
out
mov
mov
xchg
ret
aam
xor
or
mov
jnp
stc
imull
fnstsw
jmp
bound
imul
sbb
jnp
push
cmpsb
xlat
cwtl
gs
xchg
rcrb
mov
fisttpll
mov
lret
ficompl
lock
mov
cmp
cwtl
ret
lret
pop
jl
in
shrl
insl
cwtl
and
aaa
dec
fnstsw
cmpsb
movsl
jmp
push
jbe
aad
in
jl
lret
mov
dec
std
dec
scas
adc
push
inc
add
iret
adc
arpl
and
fimuls
and
xor
xchg
iret
lahf
mov
or
adc
dec
dec
mov
out
in
fldenv
pop
inc
sub
aaa
sub
aad
outsb
or
das
fcomps
fmull
scas
loop
fnstenv
aaa
xor
in
xchg
and
adc
xor
cmp
popf
jl
xlat
negl
sub
jbe
daa
nop
jmp
pop
das
imul
iret
popa
jle
dec
or
fs
fistps
xchg
mov
lea
repnz
inc
mov
aad
add
mov
jbe
mov
push
inc
push
push
dec
ds
jne
fnstsw
jmp
fsubp
cmc
mov
cmc
sub
das
lcall
std
aam
cltd
cld
cs
pop
nop
cvtdq2ps
aad
pop
inc
lahf
or
xor
inc
jo
jl
sub
test
insl
sbb
pushf
mov
jp
pop
fnstcw
mov
cmp
jae
loopne
imulb
mov
repnz
mov
xlat
xchg
jg
test
cmpsb
mov
xchg
push
out
bound
ficoms
or
cmpsb
hlt
push
pushf
sbb
push
test
dec
cli
jmp
pop
pop
push
arpl
or
and
push
inc
pusha
mov
sbb
cmpsw
stos
mov
adc
les
inc
adc
xor
add
pop
add
divb
inc
xchg
adc
mov
lret
jns
leave
rcll
or
cmp
outsb
dec
imul
xor
cmp
cmp
add
jno
jno
sti
jmp
mov
pop
sbb
mov
jmp
cs
dec
sub
pop
mov
notl
mov
adc
imul
xchg
sub
lret
andl
dec
mov
mov
mov
pop
into
inc
into
push
lret
mov
ret
pop
out
in
out
int
sti
ror
mov
pushf
aad
adc
dec
inc
fs
xchg
sti
lahf
jecxz
enter
lret
sbb
scas
sub
jecxz
mov
sbb
xor
add
mov
mov
lods
push
out
push
cmpsl
mov
lea
pop
or
adc
mov
push
add
out
mov
cmpsb
fucomi
dec
rorb
jne
popf
inc
repz
cmp
repz
xchg
loop
shrb
pop
subb
mov
pop
xor
fnstsw
sub
mov
imul
hlt
ds
aaa
ljmp
mov
mov
inc
push
scas
scas
push
inc
ja
dec
mov
mov
push
jbe
cmp
pop
dec
adc
fxch
inc
pop
dec
inc
inc
flds
mov
imul
xchg
dec
xor
in
shl
mov
xor
xchg
mov
das
ss
stos
sbbl
mull
jge
push
mov
cmp
jecxz
mov
push
jns
lret
outsl
inc
ficomps
push
xor
insb
mov
pusha
js
add
cmp
lcall
add
test
sub
ja
les
loope
test
jns
or
test
lock
inc
ds
out
or
sbb
addl
mov
les
iret
insl
ljmp
jl
pop
loopne
je
jbe
movsb
add
in
jge
inc
cs
inc
cmpsb
xchg
cmpsb
xor
mov
add
pusha
repnz
loopne
lahf
adc
and
mov
bound
cmpb
je
testb
mov
xlat
xchg
mov
stc
push
jbe
xchg
pop
adc
and
hlt
xchg
bound
int3
mov
or
jp
stos
mov
push
push
sahf
cld
dec
or
ret
mov
fisubrs
ficoms
push
jns
xchg
cs
mov
fnstsw
dec
daa
mov
lea
pop
cli
loope
adc
mov
xor
jge
mov
cmp
jp
jo
sbb
imul
add
std
mov
popa
jle
jnp
xchg
ds
or
ficomps
in
mov
jg
jl
stos
rcrl
pop
sub
insl
inc
dec
xor
lahf
pop
sbb
xor
dec
mov
push
mov
loopne
pop
xor
mov
int3
push
xchg
jo
stos
jnp
loope
or
mull
imul
mov
test
hlt
sti
clc
pop
lods
aas
mov
dec
jbe
jg
sbb
sub
js
mov
inc
cmp
push
adc
cltd
dec
xchg
dec
mov
jne
mov
daa
sub
iret
jge
xor
fisttps
inc
mov
sub
inc
aad
fs
cmp
jmp
xor
cs
cltd
jmp
imul
push
and
xor
ficoms
ret
outsb
sbb
push
es
mov
dec
fcomps
and
dec
add
lret
leave
repnz
cltd
jle
add
lcall
cli
push
push
stc
gs
cmpsl
lock
cmp
xlat
xchg
cld
mov
je
xor
je
int3
xchg
xchg
aam
in
sti
scas
adc
out
roll
adc
inc
std
aas
pop
aaa
inc
cltd
jle
prefetch
rol
lods
std
xor
pop
mov
jl
sub
inc
mov
xor
addr16
or
mov
dec
push
inc
out
sub
adc
pop
push
std
out
mov
dec
mov
jno
and
pop
sarb
cltd
cmp
sub
mov
loop
mov
dec
inc
or
fcomip
dec
je
mov
int3
addr16
jbe
cmp
add
daa
adc
sbb
mov
or
fdivl
stos
lea
cmc
mov
fistps
mov
add
into
je
sbb
hlt
lock
std
pop
aas
into
cmpsb
mov
outsb
inc
push
mov
out
dec
mull
stc
cmpsl
stc
scas
mov
sub
rolb
mov
shll
and
sbb
das
jns
ss
enter
inc
xor
fcmovu
and
xchg
insl
pop
jno
mov
mov
xor
ljmp
xchg
mov
mov
fsts
xlat
push
mov
push
xor
inc
push
add
xor
jle
data16
ja
dec
cmpl
cmp
push
jecxz
lock
icebp
ret
in
lods
arpl
cmp
iret
xchg
aas
leave
loope
sti
test
mov
rclb
pop
insl
pop
cmpsl
mov
mov
sub
cmp
pop
mov
out
cmp
inc
dec
mov
fimuls
movsb
setb
jb
fbld
push
lcall
fs
call
dec
dec
or
jb
rcrl
ficoms
js
adcl
sarl
or
cmp
stos
mov
sti
pop
sub
or
cmp
dec
jo
int
mov
fs
push
adc
push
ret
fdivr
je
int3
out
pop
shrl
sbb
pop
push
push
pop
xchg
push
pop
aaa
nop
push
imul
je
hlt
inc
push
pop
popa
sbb
cli
sub
push
sub
xchg
lret
pusha
lock
pop
mov
fs
sub
cltd
inc
fidivl
push
rorb
push
lods
sub
imul
mov
sar
and
mov
jbe
lahf
adc
out
shr
or
sbbl
insl
cmp
ret
sub
icebp
pop
xchg
outsl
nop
in
inc
in
rolb
mov
jb
mov
inc
cmp
mov
cmp
aaa
in
dec
xlat
outsl
lock
aaa
divb
mov
loop
iret
add
xor
sti
repnz
pop
ss
jns
dec
imul
out
cli
cwtl
xor
decb
sub
loopne
jg
inc
jne
int3
xor
jbe
ss
mov
ss
add
inc
pop
jecxz
push
add
pop
fld
aad
mov
pop
mov
push
push
mov
fidivs
shrl
dec
int
or
and
dec
int3
push
mov
fists
lds
pushf
or
fwait
adc
ljmp
lods
fbld
pop
imul
dec
insl
popf
outsl
inc
mov
or
or
pop
adc
push
xor
leave
jg
add
lret
xchg
inc
jmp
cwtl
or
clc
test
test
aas
test
int
mov
and
mov
outsb
rcrl
or
add
ljmp
xor
push
aas
ljmp
test
mov
rcll
push
push
popa
je
repnz
xchg
stos
dec
mov
out
sub
cmp
pop
cs
cmp
mov
adc
cmp
mov
jmp
dec
sbb
repz
in
and
jns
loopne
shr
mov
jbe
loop
mov
sahf
aaa
movsb
push
scas
push
idivl
jbe
xchg
test
or
movsb
test
in
ret
xlat
push
enter
mov
jno
and
mov
aas
aas
pop
mov
scas
subb
enter
ljmp
jg
scas
jb
testl
in
lea
inc
add
push
xor
ret
lcall
mov
xchg
pop
xacquire
es
push
adc
fsubrs
pop
orl
xchg
cmp
cld
dec
jmp
dec
jg
sbb
jns
mov
fimull
xchg
mov
pop
icebp
in
or
cwtl
xchg
mov
addr16
cmpsb
add
pop
pop
and
test
rcrl
jne
cmp
mulb
and
test
rcrb
jmp
mov
inc
jne
mov
fisubrs
mov
mov
stc
ljmp
popa
loope
adc
jg
das
js
mov
sbb
cld
sub
cltd
mov
test
popa
xlat
pop
dec
repz
cwtl
fdivrs
imul
mov
roll
sbb
add
test
int
notl
mov
dec
xchg
push
enter
inc
jg
out
mov
pop
mov
xchg
fldt
out
fwait
imul
mov
mov
jnp
fucomip
loopne
out
jae
pop
lods
data16
das
in
xchg
push
adcl
ret
leave
and
pop
inc
and
jne
cltd
push
cmpsb
xchg
das
xor
dec
stc
jo
shll
sub
xchg
stc
jmp
aad
aam
push
daa
fwait
pop
pop
cmp
push
dec
outsb
or
sbb
adc
cmc
in
ja
add
xor
pop
dec
push
icebp
test
daa
or
sub
mov
mov
movsl
adcb
jmp
ss
mov
lret
cmp
movsl
and
nop
and
sbb
cmp
push
icebp
pop
fldcw
or
stc
or
in
lea
adc
jae
insb
and
push
ja
and
in
xchg
out
scas
sub
jnp
sub
cmp
pop
rcrl
cmpl
mov
mull
loop
add
adc
jl
inc
push
jae
je
pop
imul
cli
ret
jmp
sbb
fcmovne
inc
ss
insb
add
cmpsl
aad
jmp
sarl
pop
mov
mov
xchg
lock
ret
jnp
or
mov
pop
lods
push
push
cwtl
insb
aad
mov
ret
push
pop
jmp
jecxz
loop
into
imull
out
gs
pop
jae
jecxz
xchg
nop
xor
popf
in
mov
cmp
sub
sbb
mov
mov
dec
xor
aad
cmp
les
movb
add
out
cli
rcll
outsl
jnp
stos
inc
push
xchg
sub
pop
cs
ret
cmp
dec
adc
and
xlat
test
imul
outsl
mov
pop
xor
aas
call
arpl
adc
mov
nop
push
mov
call
pop
ficomps
iret
rolb
aas
icebp
test
ja
int
xor
int3
inc
cmpsl
or
mov
sub
lds
gs
fistpl
cmp
or
icebp
inc
pop
ss
pop
mov
pop
pop
mov
mov
dec
lock
push
fs
mov
pop
jae
rolb
push
jne
ret
cmpsb
adc
jp
mov
call
or
das
stc
loop
aad
inc
xor
pop
jge
mov
jb
sbb
and
jae
int
pop
mov
xchg
xchg
xchg
xor
aas
loop
fcmovnbe
lcall
mov
fistl
in
popa
mov
setnp
add
cmp
pop
mov
lahf
xchg
gs
adc
sub
scas
mov
sub
lds
push
shll
add
imulb
push
cmp
in
test
xchg
and
dec
mov
sbb
mov
pop
shlb
or
sub
pop
cmp
push
jp
mov
imulb
sbb
das
imul
mov
dec
lcall
jle
je
es
pop
push
mov
pushf
xor
adc
push
cwtl
mov
push
jbe
movsl
pop
or
fiaddl
adc
mov
xchg
repz
push
push
push
and
nop
ret
shlb
int3
pop
add
fucom
ljmp
push
adc
inc
int3
inc
jl
mov
iret
jno
rol
sub
out
xor
lods
push
clc
mov
mov
sbb
sti
jnp
xchg
mov
and
cmpsb
cwtl
push
add
loop
push
inc
mov
scas
add
outsl
lods
je
dec
fsts
pop
inc
and
cmpsl
stc
daa
cs
test
fmulp
sbb
hlt
xlat
iret
inc
xor
pop
stos
dec
dec
pop
mov
push
mov
orl
add
push
dec
sbb
cmc
inc
cld
scas
arpl
ja
mov
in
mov
or
and
pop
sub
daa
mov
stc
inc
int3
mov
lods
pop
mov
stos
test
cmc
les
jns
jne
mov
ja
mov
stos
int
test
lretw
pop
jle
sbb
in
outsl
std
repz
pop
jge
movsl
fmul
fs
inc
cmp
pop
icebp
mov
mov
cs
int3
int3
movsb
sti
xor
and
jnp
add
xor
jne
test
dec
mov
inc
push
ret
test
or
nop
nop
and
int
mov
adc
jno
push
orb
jnp
in
pop
jg
sbb
leave
ja
les
hlt
sub
adc
rclb
sahf
sub
push
out
xchg
sti
sub
xor
push
adc
add
out
insl
clc
sbb
jle
push
xchg
call
cmp
lret
xor
rep
iret
fcomps
mov
test
lds
popa
mov
bound
mov
rolb
imul
cmp
adc
out
jmp
into
lahf
pop
stos
jl
or
and
nop
add
mov
cmp
je
jp
inc
sbb
sbb
mov
leave
jne
mov
jb
pop
das
outsl
and
adc
out
cltd
add
add
repnz
sbb
sub
adcb
int3
cli
xor
imul
sub
or
mov
pop
or
lock
xorl
inc
xchg
movsb
push
popaw
dec
lret
mov
gs
stos
out
jbe
negb
pop
je
xchg
adc
inc
push
dec
pop
repnz
sti
sbb
in
jb
inc
xchg
pop
or
push
flds
cmp
shr
lret
or
jno
setle
fdivrs
in
jo
hlt
push
and
sarl
pop
out
iret
call
jne
and
out
push
cmpsb
xor
mov
cmc
sub
dec
aam
cmp
ds
sub
insb
lock
ss
lds
jb
data16
add
das
insl
cmpb
std
daa
sahf
add
mov
xchg
lods
push
popa
jb
jbe
adc
xchg
int
jne
leave
cmp
ljmp
test
mov
sbb
and
ljmp
or
je
inc
les
out
ljmp
in
sub
jne
push
ja
xor
mov
movsl
add
int3
pop
xchg
call
xchg
mov
dec
pop
ljmp
mov
test
fistps
enter
imul
or
push
push
dec
xchg
lret
aas
loope
sub
jbe
imul
scas
mov
cs
into
lock
or
out
mov
aad
adc
cmc
mov
xchg
pop
ja
mov
stos
test
xchg
and
and
nop
addl
cli
stc
std
adc
in
pop
sarb
sub
push
lock
mov
xchg
or
cltd
rol
fnstsw
dec
in
les
js
cltd
sbb
or
jne
push
xchg
xchg
jnp
fldl
add
and
test
mov
mov
loopne
cs
out
inc
cmp
jns
fldl
dec
lods
push
es
inc
popf
mov
or
iret
out
es
jge
add
or
xchg
xchg
xchg
sbb
in
pop
cmp
lea
inc
or
pop
in
pop
fists
ljmp
xchg
aaa
or
xchg
adc
pop
pop
sbb
scas
push
mov
popf
rcrb
xor
neg
je
sbb
cmc
nop
lods
mov
jge
inc
cmp
jnp
adc
jnp
adc
sbb
loope
sub
xchg
and
ja
cmp
in
dec
mov
or
stc
fwait
movsl
dec
mov
sbb
movsb
stos
mov
ja
push
daa
movsb
cmp
add
das
mov
cmp
cmp
push
add
aam
sbb
sar
push
mov
aas
aad
jne
adc
push
mov
std
mov
push
sbb
mov
xor
outsb
les
pop
jo
ficoms
cmpsl
fistl
and
mov
sub
pop
outsl
pop
ss
loop
push
cmpsl
dec
adcb
sbb
loope
std
or
dec
sbb
or
insb
or
sbb
add
push
cmpsb
lret
daa
test
jle
mov
out
pusha
and
inc
pop
addr16
mov
je
xchg
adc
pop
enter
out
push
scas
mov
in
xchg
lret
in
popf
int3
mov
das
ret
test
push
pop
sahf
push
pop
mov
cmpsl
mov
inc
insb
scas
mov
hlt
call
out
cmpsb
dec
int3
and
sbb
arpl
imul
jb
mov
sub
xchg
push
cwtl
andb
movsl
xor
pop
popa
pusha
repz
and
cmpsl
fwait
repz
adc
push
imulb
gs
repnz
pop
clc
incl
scas
mov
ljmp
es
mov
xlat
popa
pop
fwait
adc
sub
insl
jne
movsb
push
push
shrb
idiv
leave
push
out
je
mov
sbb
into
sbbl
andb
mov
or
pop
push
stc
pop
int3
call
xor
and
cli
jno
sub
popa
push
imul
shl
push
imul
or
ss
sti
dec
push
movb
xlat
roll
add
jo
insb
xchg
pop
stc
cmp
int
aaa
dec
div
mov
push
mov
jmp
das
xchg
pop
aaa
sbb
mov
dec
xchg
add
outsl
push
insl
fnstenv
dec
mov
ret
movups
nop
fisttps
js
mov
nop
push
imul
push
jg
push
push
jb
mov
movsb
pusha
in
and
nop
pop
outsb
in
roll
sbb
rcrl
jb
popa
mov
mov
jnp
scas
jle
bound
sub
fdiv
mov
cmp
lcall
jl
jecxz
cmpsb
enter
sub
adc
jecxz
mov
incb
jecxz
push
lcall
call
ret
lcall
sahf
cltd
sub
jns
push
sub
andb
out
xor
xor
xor
aam
xor
jne
and
adc
push
sub
cmp
das
xor
xchg
orl
inc
stc
mov
dec
xchg
push
fwait
inc
xor
out
pop
dec
jb
cmp
outsb
loope
pop
clc
jbe
aam
lods
cmc
call
scas
cmp
shll
js
xor
int
mov
pop
push
ss
pop
repz
xchg
xlat
mov
hlt
clc
xor
sbb
sbb
dec
sar
fstp
and
xchg
cmpsb
pop
pop
mov
add
dec
push
cli
lea
ja
push
cmc
push
jne
cmp
leave
fidivrs
pop
in
inc
xor
mov
jne
sub
or
cmp
fcoml
push
aad
xor
incl
inc
push
inc
mov
fwait
lods
pop
fidivrl
or
bound
cmpsb
jmp
jb
ss
movsl
mov
inc
cmpsl
xor
xchg
fdivl
dec
inc
dec
xchg
lret
test
mov
mov
dec
pop
pop
stos
fcmove
out
adc
and
xor
jno
incl
xchg
test
inc
mov
mov
jno
clc
add
add
cli
inc
rcrl
outsl
daa
push
out
xchg
in
mov
test
jg
pop
pop
or
add
dec
pop
repz
sbb
loopne
xor
push
push
hlt
clc
xor
test
add
ja
inc
sti
xchg
movsb
js
fsubrl
xor
cld
dec
xor
sub
fs
rorl
pop
xor
nop
jmp
fsubrl
std
push
cmp
xor
mov
lahf
leave
sbbl
fnstcw
pop
inc
movsl
or
xor
mov
inc
mov
fs
out
mov
pop
sti
mov
sbb
push
and
ljmp
mov
mov
mov
sub
and
dec
jb
mov
pop
inc
jge
in
lahf
jno
dec
jns
fs
loope
mov
push
and
mov
jnp
js
in
fcmovb
or
enter
lret
xor
push
inc
pop
pop
aaa
jle
jp
movsb
sbb
sbb
push
cmp
incl
xchg
mov
in
or
movsl
jg
in
jecxz
sbb
mov
je
push
les
lcall
test
data16
fstl
outsb
push
pop
sti
lcall
push
push
shll
mov
incb
xor
les
inc
js
out
jno
js
in
mov
movsl
rcrl
movsl
outsb
pop
pop
inc
scas
aad
sub
mov
dec
out
out
sub
test
mov
insl
movzbl
adc
mov
xchg
mov
adcl
stos
addr16
int3
sbb
cmp
adc
xchg
sahf
stc
insb
dec
or
xor
outsb
sbb
rolb
and
rorl
lahf
jmp
fiaddl
popa
adcl
test
shlb
clc
call
lahf
adc
xchg
pop
ljmp
pop
icebp
jno
ror
mov
dec
daa
pop
mov
call
push
in
or
test
adc
pushf
lock
imul
pop
mov
mov
and
or
int3
xchg
fists
imul
movzbl
repz
mov
lcall
ds
adc
dec
pushf
add
dec
inc
repz
xchg
test
ljmp
out
xor
sbb
jb
or
jno
push
jl
xchg
fistps
xor
ss
and
out
shll
lret
mov
fidivl
shlb
movsl
mov
push
outsl
popf
adc
cli
aas
mov
fimull
xor
xchg
mov
addr16
insl
mov
add
adc
mov
mov
or
push
mov
or
xchg
scas
cli
mov
divl
insb
and
test
out
pop
mull
ret
ret
dec
mov
pop
xchg
frstor
dec
test
ss
scas
xchg
movsb
sbb
xchg
adc
lock
inc
mov
cmp
in
adc
fcomp
xchg
rol
outsb
jle
in
lds
aam
or
adc
jge
mov
movsl
sub
add
jge
mov
nop
sbb
leave
jne
xchg
pusha
cmp
push
ja
pop
dec
adc
ds
and
int3
lock
cmp
repz
int
adc
rol
cmp
push
and
sbb
cmp
jno
xchg
iret
push
push
inc
clc
or
push
ror
pop
xor
jmp
sub
push
xchg
push
into
insl
bnd
fldenv
rolb
xchg
lret
in
js
mov
and
mov
out
lcall
inc
jg
sub
mov
rcll
neg
dec
dec
clc
and
mov
xchg
mov
inc
mov
push
cld
fwait
xchg
push
pop
lret
xchg
adc
stos
jno
jae
mov
shlb
call
mov
sub
imul
jle
cltd
inc
and
inc
outsb
jae
push
imul
fldl
or
das
mov
inc
pop
xor
pop
inc
orb
pop
adc
mov
xchg
lods
xchg
pop
les
ret
cli
loopne
mov
ljmp
and
sub
and
mov
ljmp
cmpsb
stos
aam
add
sub
dec
or
ror
in
pushf
in
dec
push
das
add
mov
dec
cmp
lods
loopne
xlat
hlt
push
add
mov
lahf
in
jne
out
jno
mov
mov
jmp
pop
pop
xor
sbb
clc
out
stos
movsl
cmp
lea
push
push
mov
jne
mov
pop
and
test
jne
jmp
outsl
push
test
insb
or
aas
cmp
cmp
lahf
sarb
fisubrs
bound
push
jae
or
xchg
adc
jnp
dec
add
test
lret
arpl
lea
decl
pusha
mov
mov
test
call
out
or
iret
repz
in
pop
popf
int
sub
sti
sbb
mov
adc
mov
xchg
inc
inc
hlt
dec
adcl
adc
sub
jg
mov
pop
dec
aaa
std
mov
cltd
jno
cmp
in
cmp
pushf
mov
gs
jno
sub
out
and
ret
push
lret
sarb
es
pop
push
out
cmp
ss
into
dec
dec
in
cwtl
push
jns
xchg
je
popa
imul
lret
pop
and
or
enter
jmp
js
testb
inc
push
fdiv
xlat
adc
adc
xor
mov
test
out
fucomip
inc
jo
sub
clc
aam
inc
xor
movsb
add
lret
dec
mov
fadds
push
mov
inc
jmp
xor
xchg
test
pop
xchg
rolb
andb
xor
add
jns
add
mov
lahf
mov
lds
es
shll
inc
pusha
or
imul
mov
xor
icebp
mov
inc
mov
push
fistps
mov
jl
sub
jle
pop
idivl
xlat
push
cmp
cmovle
sti
or
jae
mov
mov
cwtl
mov
mov
loop
inc
int3
subl
clc
jne
cmp
or
aad
mov
mov
mov
jmp
les
cmc
in
adc
fdivs
pop
cmpsb
sub
stc
mov
out
and
jecxz
sbb
or
adc
pop
mov
arpl
mov
scas
mov
scas
pop
aas
clc
arpl
arpl
inc
nop
pop
imul
data16
jbe,pt
or
dec
jno
xor
mov
test
xor
add
pusha
sub
or
or
ds
es
sub
fildl
push
iret
in
xor
sbbb
pop
test
imul
aas
mov
push
pop
or
xlat
adc
loop
rol
test
inc
cmp
sub
or
fnstcw
push
loope
cmc
jmp
iret
or
xchg
fmul
and
icebp
push
adc
mov
out
cmp
xchg
cmpsl
xor
call
leave
pushf
lret
cwtl
scas
daa
push
sti
pop
lea
inc
les
movb
jp
mov
mov
repz
aam
les
movb
jb
xchg
imul
adc
ja
push
push
je
mov
mov
bound
cmp
sar
xchg
dec
movsl
cmpsb
sub
dec
xchg
xchg
push
xor
aas
dec
mov
fnstsw
into
add
ret
ss
scas
sub
outsl
push
iret
adc
pop
add
pusha
fcomps
scas
push
sahf
clc
sbb
jmp
or
shrb
rcrb
add
in
aam
cmc
inc
add
std
insl
push
push
mov
jns
mov
fildll
push
aam
dec
jo
xor
out
sbb
mov
stos
cmp
inc
push
test
in
jmp
rorl
mov
repnz
fsubrl
jle
sbb
jnp
push
shrl
xchg
sti
inc
adc
jecxz
sub
lods
std
insb
arpl
in
ja
aad
aas
lock
in
jmp
pop
scas
jnp
stos
mov
xor
cs
mov
push
dec
inc
sarl
shlb
fnstsw
xchg
cwtl
addb
ds
jbe
inc
je
xchg
and
dec
mov
sbb
lcall
daa
xchg
push
rcrb
xor
mov
inc
mov
daa
xor
lods
push
jbe
jg
in
and
addr16
dec
daa
into
enter
sub
js
inc
adc
xchg
mov
xor
sub
sarl
mov
mov
push
ret
inc
cmc
dec
sub
imul
jle
cmp
xchg
sub
fistpll
add
pop
rorl
sub
adc
test
sub
bound
pop
int
inc
mov
push
push
not
jg
aad
lods
push
xorl
inc
jns
cmp
fwait
mov
lock
xchg
shr
testb
adc
scas
rol
popa
cli
popf
movsl
leave
imul
cmc
bnd
ja
into
pop
lock
xor
ljmp
mov
daa
int
leave
mov
shlb
jo
test
sub
stos
inc
pop
add
or
outsl
shrl
data16
repz
jle
pushf
arpl
aam
mov
mov
dec
imul
pushf
sbb
fdivl
inc
aaa
push
add
pushf
inc
outsl
popl
jp
mov
lea
mov
push
fdivs
lcall
pop
rorl
push
jmp
push
or
xchg
in
in
inc
push
pop
push
fsts
push
in
xor
mov
lret
xchg
repnz
daa
cmp
sub
cld
sub
in
mov
bound
imul
or
call
pushf
push
leave
jl
imul
iret
dec
lods
daa
jno
mov
or
stc
dec
repnz
stos
mov
xor
and
xor
addb
xchg
mov
fldt
sub
fidivrl
test
ljmp
sbb
rcll
and
daa
hlt
add
sub
outsb
dec
or
mov
cmp
xchg
push
cltd
xor
cwtl
ljmp
or
mov
sbb
jae
cld
push
stos
popf
pop
and
pop
data16
lea
das
insb
mov
sar
cmpsl
fcomps
mov
mov
mov
xchg
add
shl
xchg
test
ss
sub
jae
cmp
lods
iret
iret
stos
add
into
jle
shr
mov
js
cmp
pop
lahf
ficoms
cli
inc
lea
cs
and
jne
jp
cmp
ret
ret
lock
push
jmp
hlt
fcoml
push
push
pop
lahf
pop
pop
xor
imul
loopne
sarl
dec
jo
fdivl
mov
mov
and
push
in
pop
xor
inc
cmp
stc
add
inc
ficomps
ds
add
inc
rcrl
pop
cmpsl
fs
and
popa
imul
sub
mov
out
out
outsb
repnz
xchg
or
jo
and
add
sbb
pop
mov
sahf
mov
adc
adc
or
sub
mov
icebp
sbb
ud1
mov
clc
repz
dec
icebp
std
shll
xchg
mov
sbb
xorb
hlt
sub
mov
sub
cmp
stos
shrb
fwait
dec
popf
rclb
ret
shl
fsubrl
inc
inc
xchg
cs
inc
cmc
or
inc
nop
fsubs
ficompl
aad
push
inc
push
push
mov
add
push
sahf
xchg
dec
push
leave
pop
jl
aad
mov
add
xor
add
pop
and
fisttpl
mov
mov
aas
loope
jne
loope
push
mov
jns
xchg
pop
xor
shr
xchg
fistl
fwait
in
jne
fs
push
ret
imul
imulb
jge
leave
cwtl
add
xchg
into
push
mov
outsb
dec
inc
and
xchg
dec
cmc
xor
jp
pop
cld
pop
dec
push
mov
sbb
pop
and
inc
fs
xchg
rorb
push
mov
add
jmp
pop
jbe
sub
lds
call
or
adc
in
loope
scas
lock
repnz
push
mov
xor
xor
inc
mov
gs
push
into
clc
lahf
xchg
rorl
sbb
insl
mov
dec
push
and
fs
out
sbb
sbb
pushf
out
in
cmp
fstpt
sub
cmp
test
push
icebp
sti
pop
ja
imull
mov
add
mov
add
subl
xchg
cs
and
fimull
dec
fldcw
pop
ljmp
lock
fs
xchg
cwtl
inc
pop
xchg
add
sub
das
sbb
adc
cmc
pop
sub
jb
mov
mov
inc
push
mov
imul
rcr
jno
out
in
adc
pushf
test
jbe
xor
mov
pop
pop
stos
js
push
mull
jmp
fwait
xor
cmp
repz
xchg
lea
sub
fisubl
mov
in
jbe
inc
cli
shll
cmp
push
in
jecxz
les
cli
adc
sub
push
ss
cmp
int3
out
insb
jo
jnp
inc
rorb
insl
sbb
test
pop
ss
out
testl
xor
inc
dec
clc
rorb
cltd
mov
inc
repz
test
cmpsl
push
outsl
sub
inc
push
daa
mov
shrl
fdivrl
cld
bound
clc
inc
xchg
pop
jmp
sub
jns
adc
xor
jbe
lods
jb
mov
lock
xlat
mov
sub
sub
and
cmpsl
cmp
lods
hlt
lods
add
test
dec
ror
test
cmp
sbb
jmp
sub
popa
enter
lahf
pop
insl
setne
pause
pop
sbb
enter
adc
out
jno
lret
xchg
out
lea
cmpsb
push
movb
int
pop
dec
push
lcall
out
push
adc
cmp
jg
add
rcrl
inc
fisttpll
xchg
push
rcrl
pop
sbb
mov
mov
pop
sbb
cmp
lcall
jp
lds
jge
std
mov
shrl
cmpsb
imul
adcl
xchg
mov
sti
fsubr
lods
int3
xor
in
jecxz
push
jle
ds
dec
outsl
lock
bound
pop
push
ret
mov
or
test
flds
lret
sbb
iret
shrl
jl
mov
xlat
sub
loope
dec
or
sahf
pop
mov
mov
adc
push
gs
adc
or
add
into
adc
lret
mov
jle
sti
inc
jno
pop
push
inc
cli
xchg
cmp
int
push
mov
jbe
jns
call
and
cmp
out
mov
icebp
out
dec
dec
mov
push
add
cwtl
cmpsb
sbb
push
push
push
cld
out
adc
addr16
lock
dec
mov
inc
push
jmp
ss
in
add
insl
outsb
rclb
das
lret
xchg
push
xchg
ljmp
cltd
bound
xchg
ss
fisubs
out
jecxz
add
insl
or
push
lret
dec
lea
add
stc
sbb
add
xchg
and
xchg
lods
mov
inc
jno
call
movb
dec
adc
sbb
mov
rcll
mov
xor
add
mov
and
int
sbb
sarl
leave
outsb
mov
add
sbb
xchg
es
int3
outsb
ret
mov
lds
and
or
or
shll
ds
ficomps
test
test
xchg
out
and
stos
xor
clc
ja
test
cmp
flds
or
dec
fst
jns
movsl
cmc
mov
jl
aas
ficomps
and
das
adc
arpl
test
jnp
lret
inc
ret
das
pop
or
stos
out
pop
fsts
add
sti
xchg
mov
je
jae
hlt
dec
sbb
xchg
rorb
gs
out
mov
dec
cmpsb
add
pusha
adc
mov
cmpsb
mov
xor
jbe
sbb
insb
movsl
push
cmp
and
daa
xchg
repz
ja
movsb
mov
orl
xor
mov
pop
inc
outsl
icebp
daa
jle
loope
dec
and
lea
jns
outsl
insl
ret
dec
dec
shl
inc
inc
gs
lea
jne
adc
sub
sarl
or
jns
data16
ret
leave
push
ret
fsubp
add
test
add
pop
mov
cmp
adc
mov
push
lcall
cmp
adc
stc
movsb
clc
push
sub
mov
xchg
ficoml
loop
jns
dec
pop
in
les
pop
fldcw
mov
popl
pop
lret
repz
gs
mov
rcrl
data16
rcrl
test
je
dec
idivl
movsl
ret
pop
cmp
push
xorb
ljmp
cmp
imul
js
or
xchg
nop
daa
add
pushf
scas
scas
nop
add
popf
push
xor
jb
mov
cmc
cmp
xor
rol
gs
xchg
sbb
cld
jb
jo
sbb
shll
sbb
int3
mov
and
push
xor
pop
and
je
adc
nop
or
gs
xor
fadds
sbb
rcrb
mov
adc
push
xchg
mov
adc
fists
loope
push
lret
loop
mov
gs
frstor
mov
push
cmp
mov
lock
jns
xchg
add
mov
bound
inc
sub
cltd
adc
add
mov
mov
lret
xchg
ss
and
mov
fistps
test
stos
inc
iret
inc
xchg
inc
mov
jmp
das
jbe
push
test
xor
cmp
sub
push
and
cmp
pop
stos
aas
sub
push
cmp
adc
sbb
stos
cli
hlt
das
scas
mov
gs
xor
xor
ret
icebp
push
pop
push
sahf
repnz
sbb
pop
pop
push
nop
add
sub
push
jae
adc
push
subl
jo
adc
push
testb
jecxz
sarl
pop
cmc
enter
mov
add
test
cltd
xchg
ret
stos
add
dec
mov
aam
and
push
aad
or
data16
mov
int
jno
xor
mov
nop
push
jb
out
mov
mov
pop
lock
inc
and
sub
pusha
call
inc
push
mov
sbb
dec
adc
inc
rcr
push
jp
mov
mov
scas
mov
push
out
aaa
stos
sbb
in
fisubrs
mov
adc
push
sbbl
out
ss
lahf
imul
in
jl
leave
or
sbb
call
mov
or
shl
es
stos
test
lcall
sti
icebp
enter
ljmp
pop
call
cli
jne
divl
mov
sti
pop
jno,pt
or
out
movsl
mov
xchg
rol
mov
cs
lock
fs
movsl
jnp
and
iret
push
outsl
dec
in
arpl
ret
cs
fbstp
in
out
nop
leave
std
mov
insl
cld
pushf
mov
gs
shll
mov
mov
movaps
sbb
and
mov
nop
xor
stos
insb
dec
dec
pushf
jecxz
insl
stc
cltd
movsb
xor
pop
sqrtps
sbb
ror
jne
push
lea
fildl
jecxz
out
sub
push
push
pop
dec
push
sub
xchg
and
mov
inc
adc
daa
lcall
imul
sub
push
dec
stc
das
jp
mov
pop
pop
dec
mov
mov
push
lret
lret
fisubs
push
aam
mov
dec
jl
loop
hlt
adc
dec
cs
cmpsl
jecxz
jb
stos
add
add
sub
sub
jmp
and
sahf
and
int
adc
pop
fistpl
cmc
std
loope
adc
xchg
inc
jns
cmpsl
and
roll
sub
pop
sub
imul
push
cmpsb
lock
gs
jge
push
jae
add
lods
and
dec
push
dec
cs
jae
add
inc
int3
jecxz,pn
mov
pop
inc
orl
inc
mov
sub
lods
ljmp
shl
jl
shll
fstpt
loop
stos
test
ss
push
movb
mov
and
cmp
insb
or
dec
fstp
sarb
sti
imul
jmp
inc
in
sub
mov
out
testl
push
pop
dec
cld
iret
dec
jb
xor
outsl
test
jns
out
call
addr16
or
mov
in
dec
movsl
cli
outsb
movsl
pop
push
mov
xchg
aas
setp
xor
inc
lods
enter
cmp
sbb
push
pop
xchg
in
mov
pop
scas
fmuls
xchg
scas
sub
pop
dec
iret
jns
push
adc
push
js
sub
push
in
add
xchg
cmp
mov
int3
cmp
loop
mov
ficoml
out
aaa
xor
out
shrl
stos
into
lock
out
inc
pushf
push
stos
das
mov
in
sbb
lds
push
xchg
or
enter
pushf
rclb
cli
fcmovbe
enter
loop
mov
stc
xchg
xchg
push
pop
xchg
or
sarl
shrl
xor
std
shrb
adc
xor
addb
fs
pop
cmp
rolb
cmp
xor
icebp
mov
mov
lea
gs
outsl
sub
dec
repnz
imul
push
dec
push
bound
sbbl
add
or
xor
imul
sub
ficoml
xchg
jb
repz
es
pop
in
inc
mov
fidivrl
fdivr
mov
inc
xor
mov
out
mov
push
into
and
or
mov
std
js
inc
je
xchg
test
pop
xlat
push
add
rcr
imulb
xorb
imul
ljmp
and
out
xor
insb
jns
imul
sbb
lods
data16
shrb
push
cld
jp
xchg
inc
sbb
hlt
xchg
and
stos
sub
dec
push
repz
das
fcom
into
outsl
loop
pop
pop
ret
mov
imul
sub
mov
pop
ret
jnp
cld
dec
lock
in
fmull
inc
mov
xlat
xor
in
dec
insl
mov
pop
and
push
jecxz
negb
push
scas
xchg
or
gs
rorl
add
loope
push
fisubl
divl
push
out
mov
lcall
adc
cmc
jp
divl
mov
loope
sbb
in
in
sbb
lods
sbb
in
sti
and
pop
leave
imul
fmull
leave
sbb
outsb
xor
xor
or
mov
pop
int
pop
sbbl
cmc
mov
add
dec
inc
and
gs
xchg
jecxz
mov
andl
scas
push
and
aam
mov
sti
stos
pop
popa
lret
cld
lret
in
push
shrb
jecxz
lods
sbb
cmc
gs
inc
inc
adc
lret
lcall
push
push
mov
xchg
push
inc
jns
leave
xchg
sarl
pop
les
push
in
cmpsb
xchg
sub
int
clc
pop
xchg
dec
pop
xor
and
scas
push
push
sub
sahf
movsl
hlt
mull
stos
pop
testb
mov
xor
push
xchg
nop
lret
pop
push
fldt
xor
pop
add
movl
fcmovb
sub
scas
mov
xchg
int
sub
xchg
jo
dec
xor
lock
dec
int
lret
jmp
jl
cmovns
lret
and
out
shll
push
xor
pusha
lds
mov
inc
gs
add
in
out
mov
dec
and
dec
mov
cmpsl
loopne
je
or
add
or
jge
adc
lock
test
js
shll
push
or
inc
jle
into
fcompl
testl
test
aam
cmp
pop
xchg
xchg
adc
adc
dec
mov
in
nop
dec
xor
out
ja
pop
pop
add
sti
cmp
push
sub
or
mov
jge
cmp
add
fnsave
pop
and
adc
ret
lcall
and
ret
jbe
int
push
mov
or
xchg
and
add
dec
push
negl
cmpl
insb
sti
mov
xchg
outsb
cmpsb
call
in
cmpb
mov
dec
int3
jge
nop
fwait
arpl
or
je,pt
vmwrite
les
jp
hlt
fstl
push
mov
ds
cmp
push
mov
fadds
bound
pop
les
imul
and
jmp
mov
sub
dec
sahf
stc
loopne
into
add
pusha
enter
cwtl
sbb
ret
nop
test
jo
sub
pop
inc
lret
pushf
adc
loopne
push
dec
imul
xorb
repnz
test
cmp
inc
fsubl
cmp
cwtl
sub
sub
ret
and
in
rcr
out
dec
nop
xlat
or
call
scas
popa
outsb
enter
or
xchg
pop
jbe
push
cmp
cmp
add
outsb
leave
sbb
and
mov
jo
int
fidivrl
test
mov
jno
dec
lock
sub
pop
xor
inc
sahf
mov
cli
arpl
sahf
mul
xor
sub
enter
inc
add
test
lods
jbe
adc
cmpsl
dec
outsl
loope
nop
rolb
in
insl
andl
movsb
mov
fwait
mov
addr16
or
xchg
in
mov
sbb
mov
inc
xor
fsubrl
mov
jmp
mov
dec
push
mov
ret
fimull
cmp
push
add
jmp
lods
sbb
push
xlat
fs
lds
sahf
and
test
add
dec
aas
jmp
sbb
push
ret
fwait
movsb
add
fmul
scas
fcmovu
idivb
fs
aaa
xchg
jmp
jge
dec
mov
add
lcall
adcb
inc
jmp
jo
xor
in
icebp
xor
add
repnz
mov
adc
out
cs
dec
insb
pop
fdivl
add
mov
testl
in
stos
clc
arpl
faddl
imul
jns
repz
push
enter
into
add
cmc
aaa
cmpb
cld
push
out
push
icebp
xchg
lock
rol
jb
or
xor
mov
xchg
lock
and
inc
rorb
mov
fistl
or
out
sbb
orl
sub
idiv
add
xor
and
fistl
sbb
lods
cmp
push
movsl
push
out
cmp
lret
push
mov
lock
aaa
or
test
push
push
adc
clc
inc
popf
dec
mov
in
pop
or
bound
les
pop
push
add
repnz
orb
xchg
setae
inc
ja
fs
aaa
sub
jl
jbe
lcall
xchg
push
pop
cltd
icebp
adc
lret
mov
push
jo
dec
nop
mov
mov
adc
mov
jae
mov
add
sbb
aaa
in
mov
cmpsl
ret
je
insb
mov
xchg
in
inc
sbb
pop
insb
sub
aaa
popa
xor
loope
pusha
push
pop
dec
sub
sub
add
test
ljmp
xchg
adc
lods
arpl
jmp
adc
mov
jmp
lret
push
inc
and
jle
add
les
xor
dec
mov
mov
pushl
aam
xor
sub
xchg
addr16
push
movsl
ds
pop
jp
clc
in
pop
and
push
dec
mov
stc
jge
xchg
call
out
test
mov
into
repnz
mov
mov
mov
pushf
jns
push
sarl
fisubs
test
shrl
adc
sbb
outsb
ror
sbb
insl
dec
inc
mov
xchg
cmp
nop
mov
data16
push
dec
in
inc
dec
in
push
out
push
and
pop
test
outsb
and
pop
pop
fdivrl
inc
push
inc
add
mov
dec
mov
sub
cmp
mov
sti
pop
pop
ret
outsb
xor
gs
enter
adc
push
cmp
repnz
and
pop
das
and
mov
in
and
das
cld
cld
stc
inc
jp
lea
xlat
add
jns
inc
lret
cmp
dec
sub
jp
cs
jge
lds
popa
jnp
imul
pop
faddp
or
test
sbb
and
aaa
pop
mov
or
push
fmull
stos
jns
push
lcall
push
pop
hlt
sub
mov
xor
xor
lahf
das
fisubrl
aad
jmp
sbb
mov
inc
stos
cmpb
push
loopne
cmpsl
cmp
inc
fstl
pop
add
mov
out
cmp
es
mov
leave
cmp
cmp
cwtl
adc
mov
add
or
sbb
aad
hlt
test
mov
xchg
shl
push
inc
es
fisttps
mov
outsl
idivl
add
pop
das
lahf
fidivrl
repz
lea
outsl
ret
sub
pop
roll
icebp
adc
sub
mov
cmpsb
mov
sbbl
mov
push
lret
adc
sti
push
and
dec
jns
mov
add
xchg
std
lcall
dec
fistl
sub
sbb
decl
or
ja
push
mov
jb
cmp
je
popf
pop
jmp
sbb
push
pushw
cmp
daa
dec
iret
cmp
in
js
adc
mov
push
add
test
dec
lret
mov
fildll
scas
ja
mov
out
mov
or
dec
ja
pop
jne
adc
fwait
repz
sub
div
std
inc
jnp
cmp
ss
icebp
iret
jo
push
data16
adc
gs
in
jns
mov
pop
dec
push
cmpsb
sbb
sbb
jnp
cld
push
icebp
push
mov
pop
loop
inc
jl
dec
push
jnp
push
lret
mov
mov
jl
or
push
xor
mov
sub
ds
jbe
mov
mov
mov
sub
sbbl
jbe
jecxz
xchg
cmp
mov
enter
push
push
pop
push
ds
rol
das
sbb
cmp
xor
dec
cmp
dec
loopne
push
jnp
inc
shl
ljmp
mov
addb
add
inc
lea
shll
int
mov
cmpsl
xor
rol
push
dec
pop
mov
and
sub
ljmp
aas
mov
in
cmp
lfs
lea
lcall
ds
out
push
pop
push
jmp
std
ror
xchg
sub
andb
jb,pt
pop
es
nop
std
es
mov
pop
loope
sbb
cmp
sub
enter
pop
aad
sti
bsf
sbb
jmp
inc
xor
mov
stc
sub
call
cwtl
mov
mov
repnz
js
gs
xor
test
xchg
das
jb
xchg
mov
jp
cld
inc
mov
cmp
mov
fidivl
sbb
lret
js
sub
call
xchg
inc
fiaddl
push
push
sbb
shlb
sub
push
pushf
imul
call
mov
mov
int3
sbb
lock
mov
jg
rclb
outsl
ret
ret
push
loop
das
rolb
test
pusha
dec
sub
mov
xchg
ret
hlt
int
cmpsl
push
insb
inc
mov
push
repnz
xchg
jns
and
jge
fcompl
imul
in
push
mov
mov
popf
lcall
std
js
inc
mov
cmc
test
xchg
or
and
out
add
jo
jne
adcb
push
mov
pop
jp
xor
stc
test
push
call
gs
xor
adcl
xlat
xor
mov
rcl
lahf
sub
pop
sbb
insb
arpl
push
scas
xchg
mov
or
mov
mov
inc
push
inc
fsub
xlat
ret
and
xor
or
push
or
scas
icebp
je
adc
inc
xchg
add
in
imul
lock
out
cmp
jp
sahf
sbb
sub
pop
mov
ficompl
push
jbe
mov
insl
mulb
or
into
in
fisubrs
shll
stos
popa
fs
dec
pop
fisttpl
in
repnz
xchg
jnp
adc
mov
in
sub
sbb
dec
mov
jmp
sub
mov
and
xor
enter
lahf
dec
xchg
loopne
popf
movsl
mov
test
mov
mov
cmp
xlat
mov
movsl
push
pop
mov
arpl
inc
pop
mov
push
cmc
xor
add
pop
shl
jmp
pop
aas
jno
mov
xchg
out
xchg
mov
imul
xor
std
loop
test
call
cmp
push
icebp
pop
into
inc
int3
sub
les
xor
sbb
fadds
inc
fistps
mov
mov
jl
pop
mov
repz
push
test
fmull
out
pop
mov
pusha
sbb
dec
xchg
push
popa
sahf
xchg
aam
inc
push
subb
mov
push
push
push
adc
adc
test
xor
jge
hlt
fnstsw
jle
inc
movsb
or
fs
in
push
lds
mov
sbb
jno
dec
mov
cmp
xlat
clc
outsb
iret
int3
add
popf
ja
xchg
xor
cltd
add
sub
or
cltd
jne
outsl
sti
jp
cwtl
sub
outsb
loop
jle
cltd
scas
stc
dec
je
andl
cmp
les
sub
ret
in
pop
fistl
jle
mov
mov
dec
out
inc
mov
hlt
out
je
mov
xchg
jge
xor
push
cmp
popf
or
gs
aad
and
sub
xor
mov
dec
mov
fcoml
cmpl
aas
cmp
mov
lahf
sahf
mov
sbb
fmuls
fsubl
mov
mov
mov
xor
test
and
out
out
or
insl
mov
jbe
std
inc
mov
arpl
mov
dec
and
add
push
sbbb
cli
rcrl
inc
or
dec
fldenv
scas
and
dec
xor
xor
push
add
shll
sbb
xchg
mov
cmp
out
or
adc
aas
loop
ss
data16
sbb
push
pop
mov
fdivl
mov
jno
cltd
fisubrl
roll
push
xchg
inc
insl
shl
sti
push
jmp
dec
loopne
cltd
pusha
cltd
arpl
inc
arpl
shrb
mov
gs
gs
ljmp
fmul
sahf
ficompl
mov
jno
daa
scas
pop
xor
push
sub
pop
xchg
xor
and
push
dec
cld
push
fcompl
and
jmp
mov
push
cli
sub
push
sub
les
out
cltd
or
dec
stos
loope
dec
xor
mov
cld
scas
xchg
movsl
std
push
push
je
xor
push
out
lret
or
mov
fs
push
cmp
sub
imulb
repz
xor
xchg
jne
sbbl
and
pop
popl
in
cld
je
xor
icebp
jl
cs
push
movsl
dec
xchg
pop
jl
jbe
lret
dec
outsb
and
add
push
push
push
mov
adc
test
call
out
dec
lahf
into
fldcw
lret
and
test
or
xchg
or
dec
imul
add
lcall
or
cld
nop
push
xchg
inc
or
stc
addr16
out
jge
mov
in
test
shl
or
repnz
movl
in
loopne
mov
xchg
jge
dec
fists
clc
in
test
addr16
mov
sti
cmpsl
dec
int3
lock
in
add
popf
xchg
xchg
push
pop
push
jl
jmp
sti
mov
dec
jns
lret
push
sahf
pop
sub
push
pop
int3
xorb
push
loopne
and
cmp
push
jg
lcall
add
cmp
fwait
jbe
sbb
arpl
sbb
and
outsb
or
arpl
or
scas
faddl
jbe
dec
xchg
int3
fcomp
rol
nop
mov
ljmp
inc
test
jp
sbb
fists
dec
mov
jmp
int
popa
mov
fimuls
push
add
mov
pop
xchg
sbb
inc
out
stos
test
pop
and
mov
icebp
mov
fdivrl
sub
adc
out
das
ds
mov
xchg
ljmp
stos
jl
xchg
inc
in
jne
mov
nop
sbb
in
push
popf
data16
and
jecxz
rorl
push
cmpb
jbe
shrl
fcomip
aam
or
addr16
lock
ret
repnz
clc
dec
ljmp
stc
clc
andb
fdivp
movsb
dec
movsb
hlt
lods
mov
mov
pop
xchg
fimuls
sub
notl
dec
lods
mov
test
mov
aad
jb
movsl
push
ret
add
loop
xchg
leave
call
shlb
push
push
sbb
mov
in
icebp
push
mov
cmp
rcll
mov
repz
pop
fs
ja
aam
not
mov
sub
sub
fwait
push
popa
jns
divl
getsec
adc
add
xor
xor
in
mov
add
pusha
in
add
add
lea
shrl
jle
jg
mov
jmp
sbb
pop
mov
add
xchg
push
sahf
sub
lahf
pop
mov
mov
daa
mov
lea
scas
xchg
xchg
sbb
or
mov
les
lahf
lods
jo
xchg
or
punpcklwd
aas
dec
mov
rclb
popa
mov
rorl
rcrb
inc
enter
loop
push
out
sub
and
shl
jb
cmp
jmp
dec
mov
jne
dec
or
pop
outsl
push
dec
addr16
xor
pop
mov
and
adc
adc
lahf
fimuls
orb
jp
in
mov
xchg
xor
pop
mov
jp
push
test
loopne
out
push
jne
scas
inc
lcall
lret
int
mov
dec
hlt
dec
int3
int3
in
cmp
ss
into
or
and
rcrl
mov
and
test
iret
cmp
imull
call
xchg
mov
imul
cmc
call
cwtl
push
bound
mov
mov
jl
mov
add
jmp
mov
xor
jle
ds
xor
cmc
or
jo
lea
jnp
test
jge
or
nop
addr16
lret
push
jnp
ds
adc
ds
icebp
insl
jmp
repnz
xchg
sub
add
push
ljmp
inc
inc
mov
add
rorl
lahf
xlat
pop
pop
jne
push
sub
incl
adc
outsl
mov
dec
and
out
cmp
xor
jge
mov
outsb
cmp
push
out
ljmp
daa
jbe
pop
jle
repnz
inc
in
add
or
fucomip
xchg
shlb
xchg
cmp
sub
inc
xlat
xchg
pop
push
inc
mov
jns
icebp
inc
xor
loope
pop
xchg
xchg
cmp
imul
rol
inc
xchg
ret
test
jg
negl
cltd
aam
sbb
icebp
cmpsb
lahf
dec
or
and
cmp
jp
roll
dec
jno
out
movsb
dec
xchg
jg,pt
shrl
xlat
in
and
sbb
xchg
pop
cmp
out
sub
int
fisubrs
in
and
fisubrs
outsl
gs
sti
les
xor
nop
jo
repnz
inc
imul
mov
mov
es
adc
jp
add
ss
cs
push
add
iret
fs
es
js
sti
aad
xchg
and
roll
or
pop
leave
addr16
ds
xchg
xlat
repz
test
lea
mov
jecxz
xchg
jnp
cmp
xchg
pop
pop
inc
sub
inc
loop
fsubrl
or
sbb
adc
sub
fwait
inc
xor
dec
mov
addr16
lea
lretw
stc
jle
outsb
dec
data16
lds
mov
cmp
mov
mov
and
sbb
pop
pop
test
jp
sahf
roll
cmp
psllq
sbb
xorl
mov
test
and
in
or
jecxz
xchg
dec
sbb
gs
or
sub
cmpl
sti
js
in
mov
rcrb
push
mov
pusha
sbb
insl
pop
leave
into
dec
mov
out
or
jns
add
or
loope
je
ljmp
mov
push
loope
lock
daa
sbb
or
cld
jns
loope
imul
addb
enter
in
ljmp
dec
imul
je
inc
jmp
and
pushf
jb
or
inc
xor
cmp
mov
and
cltd
rclb
negl
fstpt
ret
ja
xor
xchg
push
daa
addr16
push
pop
lret
xchg
jg
xor
dec
jne
and
fnop
add
dec
repz
inc
add
sbb
lret
orl
cld
cwtl
push
mov
shrb
inc
push
or
push
inc
fwait
cmpl
movsb
mov
decb
mov
sbb
cmc
push
in
mov
mov
inc
fstl
notl
cmp
lods
das
sbb
inc
push
je
mov
jl
stc
add
das
pushf
in
fwait
and
fidivs
cltd
loopne
loop
jno
repz
testb
or
jg
sub
int3
pop
lods
push
xchg
pop
subb
int3
fadds
sbb
xor
dec
xor
inc
xlat
dec
cwtl
pop
xchg
jl
xchg
data16
test
fdivrs
mov
mov
daa
mov
jno
ficompl
cmpsl
jbe
xchg
mov
stos
notb
inc
ss
adc
jg
xchg
lods
dec
loopne
xor
cld
add
mov
mov
in
mov
sub
mov
leave
adc
gs
jecxz
xor
fs
stos
jge
add
test
push
or
mov
rclb
ss
cmpsl
iret
push
repz
mov
mov
mov
xchg
out
add
flds
and
adc
mov
cmp
jo
dec
arpl
popa
lahf
stos
sub
imul
in
test
add
rcrb
into
and
cwtl
dec
inc
lcall
movsl
mov
int
aas
pop
es
or
jmp
and
aad
or
xchg
jbe
push
mov
hlt
or
or
outsb
pop
in
mov
sahf
hlt
push
cli
inc
push
add
xchg
cmp
ds
inc
push
ss
rorl
popf
lahf
jl
rcrb
rclb
xchg
fldenv
push
mov
push
or
mov
sbb
int3
ret
xchg
sahf
test
cmp
jle
xor
cli
prefetcht1
jge
out
ja
out
pop
cmpsl
dec
mov
xchg
xchg
xlat
mov
mov
inc
jns
push
mov
jns
test
adc
xchg
pop
icebp
movsb
cmp
cmp
jae
mov
test
ljmp
in
jl
sbbl
subl
xchg
mov
lds
in
mov
rorb
fninit
fwait
mov
ret
adcl
and
popf
repnz
aad
push
or
xchg
jecxz
pop
push
jns
les
mov
mov
adc
mov
jl
mov
mov
mov
mov
xor
lcall
shrb
or
out
mov
or
insb
and
dec
popa
push
jne
xchg
jecxz
popa
push
add
push
or
dec
cmp
cmp
mov
les
and
and
dec
mov
push
iret
cmc
mov
sti
xchg
fbld
lods
jnp
loope
add
mov
mov
test
jmp
adc
inc
je
je
sub
frstor
pushf
fsubs
jl
xor
lods
and
pusha
fildll
mov
and
dec
hlt
push
mov
and
out
mov
push
outsl
sbb
lret
pop
cltd
jno
insl
sub
addl
xchg
ficompl
mov
popa
in
xchg
jb
sbb
and
mov
inc
scas
or
out
xchg
adcb
mov
sbbb
lret
and
push
cmc
xor
fdivr
out
and
mov
or
arpl
and
ss
add
push
jmp
dec
repz
in
add
aaa
mov
in
push
cmp
int3
mov
lods
out
mov
vmovaps
icebp
std
xor
jge
mov
mov
bound
mov
icebp
jecxz
jge
mov
shrb
es
sbb
mov
enter
rorb
ret
pop
iret
or
rorl
cli
out
mov
or
xor
insb
gs
test
out
sbb
mov
sub
shlb
mov
and
ja
mov
inc
xchg
and
cmp
mov
jae
sti
adc
lret
out
cltd
jmp
cmp
or
ret
mov
sbb
add
js
push
sarl
pusha
cmp
push
cmc
cmp
push
insb
push
xor
stos
loop
ds
sub
pusha
sub
jecxz
aam
xchg
pop
push
mov
cmp
rorl
push
stos
push
out
insl
iret
sbb
shl
imul
or
adc
imul
outsl
das
aaa
inc
sbb
mov
fnsave
mov
cmp
ret
pop
jne
scas
jae
mov
mov
xchg
stos
jp
adc
and
hlt
aaa
shr
pop
mov
icebp
outsb
xor
jmp
add
add
mov
sbb
adc
cmp
adc
pop
xor
pop
xchg
pushf
mov
sbb
movsl
dec
jecxz
mov
rorl
loop
or
inc
test
jns
inc
cmp
inc
movsb
xchg
add
cmp
or
pop
pushf
cmp
int3
or
cmp
sub
shl
out
aaa
ljmp
rclb
mov
fcmovne
jbe
mov
push
xchg
mov
rorl
sarl
std
and
xor
jo
clc
adc
je
inc
jp
mov
or
fcoms
sbb
stc
and
popa
ss
outsb
repz
ljmp
test
pop
jb
movsl
aas
mov
aas
mov
hlt
outsb
icebp
outsl
hlt
shrb
jne
fidivrs
push
and
imul
xchg
jl
outsb
mov
fsts
mov
mov
mov
pushl
lea
pushf
test
popf
ss
and
xchg
push
stos
fistl
and
jnp
icebp
stos
sub
and
dec
jp
ds
xor
jno
adc
mov
call
pop
cmp
fcoms
inc
scas
push
lret
cwtl
and
xor
dec
sbb
adcl
ja
jecxz
divl
popa
cmp
out
mov
dec
adc
xchg
inc
xor
pop
xchg
jb
xlat
sbb
je
jp
mov
sub
hlt
fidivl
mov
enter
nop
mov
adc
pop
shll
mov
cmpl
jnp
or
cmp
mov
push
fs
push
add
mov
sub
xlat
loope
mov
jno
and
jge
outsl
and
cmovbe
outsl
cmp
out
imul
scas
repz
pushf
test
mov
jge
cli
xchg
ja
dec
jge
add
lods
sbb
push
push
out
shrb
push
dec
fisttps
cmpsb
add
clc
leave
sti
inc
jo
in
mov
xor
jbe
adc
js
mov
out
mov
in
jmp
sbb
repz
call
mov
out
or
sti
scas
sahf
cmp
sar
scas
outsl
ret
sbb
ret
mov
cmpsl
mov
push
test
outsb
adc
cmp
mov
xlat
ret
in
adc
pop
rorb
cltd
adc
aaa
sbb
scas
repnz
sub
fildll
pop
lock
movsb
push
mov
nop
lods
push
mov
pop
xchg
and
js
into
ljmp
daa
bound
adc
mov
adc
hlt
jbe
add
xor
jnp
sbb
in
lods
sub
cmc
in
or
stc
ja
andb
add
sub
push
test
les
icebp
lods
shlb
jmp
pop
in
adc
jbe
lcall
into
mov
jecxz
pop
jmp
and
inc
sti
sbb
fldcw
jl
testl
es
add
adc
or
dec
cmpsb
xor
loope
scas
testb
pop
sahf
mov
les
mov
cmp
repz
sub
pop
mov
mov
fs
jns
pop
jne
add
fisttps
out
jg
jne
mov
sub
loopne
insl
aas
mov
jmp
adc
push
in
pop
pop
or
jg
out
in
aas
fmuls
repz
sbb
jb
test
pusha
sbb
or
test
inc
pop
lock
push
dec
xor
mov
add
jbe
divb
nop
sbb
daa
jne
adc
jle
lret
push
ds
clc
sub
mov
dec
outsl
xchg
movsb
pop
or
mov
jp
or
push
leave
mov
out
rolb
push
shl
cmp
adcl
mov
sub
clc
mov
in
mov
push
jb
test
enter
sbb
aam
cmp
push
mov
push
pop
repz
int
inc
in
notb
ljmp
mov
adc
test
into
cmp
fldt
repz
mov
mov
test
mov
fs
jg
xchg
or
and
pop
popa
je
adc
ret
xor
mov
lods
push
leave
sti
das
rorb
leave
and
daa
scas
push
jbe
add
mov
xchg
xchg
xchg
lret
xlat
repz
es
loope
fs
fidivs
adc
push
sti
sbb
stos
scas
nop
shll
popf
rcrb
mov
sbb
scas
xchg
or
call
popf
jmp
xchg
mov
xchg
arpl
int3
xor
mov
fldenv
jb
or
scas
aaa
nop
adc
and
add
hlt
int
out
push
push
ljmp
in
aas
inc
push
test
jg
lock
sbb
ja
cmpsl
mov
aam
mov
or
adc
movsb
cmpsb
push
pop
and
loope
mov
repz
cmp
jae
or
pop
mov
test
js
mov
jecxz
subb
push
sbb
out
pop
mov
jp
movsl
mov
pop
negb
nop
sbb
loope
sub
lcall
mov
sbb
xor
lock
push
cmpsl
dec
enter
inc
push
mov
lcall
jnp
xor
clc
scas
mov
int3
ljmp
ja
cmc
push
push
cmc
sahf
insb
sub
push
repz
cli
inc
outsl
bound
dec
lds
test
nop
call
xor
mov
mov
loope
stc
xchg
insl
mov
popf
xor
outsl
inc
pop
cmp
ss
or
popf
sbb
adc
insl
lahf
mov
push
xchg
mov
lock
xor
adc
in
sub
lock
mov
mov
jecxz
loopne
adc
xchg
nop
adc
aad
andb
mov
out
fmull
mov
xchg
dec
xor
inc
popf
cmpb
repz
add
testl
fldt
call
cli
xchg
test
nop
pop
repnz
add
sbb
rcrl
jge
mov
pop
out
jno
mov
inc
lds
jb
mov
xchg
cltd
lahf
arpl
mov
lret
insb
clc
icebp
push
cmp
popa
xchg
jne
subb
gs
mov
push
dec
enter
dec
roll
mov
pop
int3
sbb
mov
push
mov
mov
add
in
adc
xchg
pop
or
rolb
pop
out
inc
ljmp
push
mov
movsb
or
aad
aaa
xlat
cmc
mov
mov
repnz
push
faddl
xchg
sbb
pusha
fildl
div
push
add
pop
or
fwait
xchg
fbld
or
pop
push
push
bswap
ret
push
jne
shll
inc
jl
cmp
xchg
xchg
and
cmp
stos
loopne
addr16
mov
ljmp
fbld
repz
xor
adc
sbb
mov
div
dec
insb
cmpsl
push
jmp
or
bound
je
cmpsb
xor
mov
fdivr
sbb
js
into
xchg
mov
add
sbb
mov
lock
push
popa
push
in
adc
mov
stos
xchg
lds
and
mov
pop
in
ret
shl
sbb
jb
subl
stos
push
and
jo
ljmp
jne
leave
dec
fsts
add
jle
or
and
pusha
add
dec
scas
imul
pop
xchg
fstpt
fwait
inc
punpcklwd
or
ja
xchg
out
or
das
adc
into
and
cld
scas
sti
mov
push
sub
xchg
cwtl
pop
add
outsl
pop
inc
ret
sti
in
adc
lahf
adc
mov
pusha
push
sbb
jecxz
sub
insl
data16
lcall
push
imul
lods
add
cld
xchg
je
fsubl
sub
pop
pop
mov
inc
ret
cmpsl
stos
push
popa
pop
aaa
dec
push
jle
mov
mov
xor
sbb
xchg
bound
or
xor
inc
add
mov
push
sbb
pop
pop
daa
jp
fidivrs
pop
and
jp
bound
mov
inc
mov
mov
cwtl
jg
push
lcall
add
inc
hlt
xchg
xchg
js
rclb
pop
icebp
bound
pop
jmp
cwtl
cmovae
mov
addr16
sbb
rolb
cwtl
popa
jae
fcomi
xchg
dec
xor
lahf
xchg
sahf
mov
jb
cmpsl
pushf
inc
push
scas
or
adc
bound
jae
cmp
push
mov
ljmp
sub
push
dec
mov
lret
xor
add
cmp
popa
or
mov
push
dec
sarl
inc
sahf
mov
push
mov
xchg
pop
cmp
cmp
and
pop
sbb
mov
nop
in
mov
bswap
lcall
and
daa
loope
push
xor
lret
and
cli
inc
lds
pushf
mov
cmp
sahf
push
dec
xchg
mov
mov
aad
xchg
rolb
stc
mov
cmp
mov
jg
mov
cwtl
into
and
jmp
int3
fidivrs
or
stc
shrb
jle
pushf
add
xor
std
pop
ja
out
lods
mov
dec
bswap
int
add
sub
adc
lret
jne
adc
faddl
cmpsl
or
fistpll
push
cmp
adc
or
adc
adc
stc
negb
call
push
enter
cltd
dec
jns
repz
jecxz
mov
sub
aaa
push
inc
sbb
repnz
sbb
xorl
xor
pusha
lock
insb
push
xor
movl
es
lret
int3
push
jmp
sarb
push
mov
adc
sub
add
mov
add
fsubs
popf
lret
xor
cmp
sahf
mov
jl
iret
or
lcall
fndisi(8087
call
out
cmp
pop
sbb
out
mov
scas
arpl
and
andl
and
in
add
inc
jae
inc
dec
into
mov
rorb
ficomps
sub
cltd
xchg
ja
sub
or
xchg
xor
insb
movsl
cld
or
mov
jecxz
cmc
xchg
mov
int
jnp
gs
in
int3
mov
fmuls
push
pushf
adc
repnz
and
adc
mov
call
xor
ja
mov
in
add
enter
cmpsb
or
in
add
in
push
push
and
add
in
jns
mov
dec
xor
aas
fwait
mov
hlt
push
shl
sub
mov
in
test
idivb
fiadds
and
push
cmp
pusha
sarb
pop
sbb
jne
mov
loope
sbb
inc
mov
lds
jb
jl
or
imul
jne
cld
int3
adc
inc
push
lahf
sbb
test
int
fs
push
fwait
jmp
das
cmpsl
add
std
fs
ja
pop
pop
mov
pop
inc
pop
mov
loopne
pushf
clc
and
hlt
push
shll
inc
xchg
xchg
call
lods
sahf
ds
ret
mov
aaa
mov
clc
and
clc
cmp
pop
mov
xchg
pop
sbb
pusha
push
clc
adc
incb
mov
mov
aaa
mov
jae
lock
push
mov
test
fildll
inc
dec
aaa
xchg
shrb
repz
pop
cmp
add
mov
lods
lods
mov
mov
fstl
js
clc
pop
rcl
pop
rcll
aaa
cld
or
or
leave
insb
mov
push
fsubrs
add
and
and
repnz
pop
adc
jo
lret
adc
inc
push
iret
loope
pop
int3
in
sbb
jmp
push
aam
leave
or
daa
lock
pop
rclb
popa
jo
pushf
or
add
sbb
push
lret
js,pt
lods
push
test
mov
test
mov
insb
pop
sbb
jp
inc
mov
push
jbe
gs
mov
imul
imul
fwait
hlt
ret
dec
inc
sarl
fidivl
xchg
xor
mov
cmp
adc
lock
xorl
mov
jns
into
lcall
push
rcrl
sbb
cmp
or
outsb
cmp
xlat
push
mov
sbb
xchg
test
push
adc
ds
lcall
scas
loop
les
adc
pusha
dec
stos
out
xor
pusha
xor
mov
mov
scas
jno
bound
push
dec
xchg
adc
es
xchg
dec
adcb
xchg
cli
testl
into
je
out
xor
mov
cld
mov
lods
and
dec
lret
cmpsb
out
push
pop
leave
insb
pop
xchg
mov
dec
mov
insl
adc
xorb
dec
pop
cmpsl
ds
pop
stos
sub
pop
into
mov
iret
fsubrs
push
cmp
stc
clc
inc
out
jb
icebp
outsl
scas
ljmp
fdivl
dec
sub
js
ljmp
fsubrp
mov
and
fiadds
movl
mov
in
mov
cwtl
push
shrl
es
insl
jmp
dec
ret
sub
add
or
jle
in
iret
push
push
dec
loopne
aad
scas
lds
jns
xchg
in
rcr
notb
jmp
in
push
cld
ret
push
orl
cmp
scas
es
mov
iret
adc
mov
dec
and
out
inc
push
xchg
ja
aas
mov
in
xchg
test
push
adc
loopne
pop
incb
dec
mov
add
or
or
cmp
out
push
lds
mov
repz
popa
int
mov
mov
movsl
pop
lock
add
ja
xor
aaa
xor
add
sbb
jmp
out
mov
fwait
sbb
inc
std
aam
idivl
dec
popf
lret
mov
or
in
lea
stc
xchg
pop
in
xchg
fwait
popf
ljmp
inc
jmp
sbb
stos
arpl
sub
add
out
or
mov
xor
test
aas
in
orb
int
sarb
mov
das
xchg
imul
sub
push
mov
scas
loope
xchg
pop
aad
pop
sbb
dec
push
inc
push
outsl
add
ficoml
scas
div
clc
mov
mov
arpl
fldl
jno
lret
dec
popf
mov
cmp
pop
inc
lods
clc
sahf
enter
pop
je
jns,pt
push
mov
xchg
and
and
pop
sahf
jmp
adc
and
sti
scas
or
insl
jecxz
push
ss
aaa
cmp
push
aam
pop
sbb
out
lds
daa
out
fcomp
mov
adc
mov
inc
or
in
lahf
fxch
inc
adc
adc
leave
dec
fiaddl
fs
mov
mov
hlt
mov
into
sub
ja
lods
dec
lods
enter
or
daa
fldl
cld
subb
dec
ds
xchg
scas
jmp
mov
pop
test
jle
jae
sbb
push
stc
add
sbb
pop
pop
and
shll
dec
scas
pop
call
mov
cltd
out
xor
inc
cmp
mov
pop
mov
fwait
push
cmp
aam
les
or
cmc
add
outsl
cld
test
mov
pop
adcl
push
sub
lahf
jne
mov
sti
mov
or
test
dec
and
inc
push
data16
push
jl
lods
dec
mov
imul
jb
inc
sub
mov
cmc
in
lods
in
pop
outsl
scas
popa
cmp
pop
lret
inc
lcall
inc
inc
add
push
mov
inc
aad
insl
jecxz
push
lods
jle
dec
arpl
push
dec
punpckhwd
jg
mov
icebp
out
pop
mov
cwtl
mov
xor
cld
and
insb
sub
push
lret
mov
sub
aam
jge
lock
push
jae
pusha
repnz
pusha
out
arpl
and
hlt
mov
pop
je
mov
sbb
sub
add
in
lcall
in
repz
ret
jns
mov
pop
call
mov
jge
icebp
rcll
and
xchg
popf
in
push
push
jmp
push
ss
push
mov
insb
xor
mov
into
fs
out
mov
mov
sbb
sbb
sub
in
dec
imul
add
push
jmp
sti
xlat
movsl
inc
lret
push
in
mov
dec
fcoms
test
mov
std
out
mov
or
mov
in
dec
test
fbld
les
cmp
mov
gs
sub
pop
xor
movsl
mov
sub
das
scas
popa
mov
shrl
aas
ret
xorl
mov
ds
cmpsl
imul
cwtl
jno
aaa
aad
lock
pop
ljmp
cmpsl
mov
test
jb
testb
push
lret
mov
int
inc
cltd
jecxz
mov
sub
mov
sti
push
sbbl
push
inc
mov
pop
jb
das
loop
std
xor
sbb
cmp
fnstsw
cmp
pop
push
add
gs
push
out
lret
push
mov
sbb
mov
jge
shlb
cltd
push
aam
and
xor
int
jnp
inc
lea
dec
bound
outsl
ja
mov
ret
fistpl
movsb
orb
pop
cltd
je
pop
add
daa
mov
sar
insl
and
insb
jae
add
inc
enter
iret
sub
push
lods
jb
ds
adc
std
fdivr
push
inc
or
cmp
push
stos
fsin
ljmp
jp
xlat
mov
leave
xchg
movsb
cmp
or
inc
outsb
mov
xchg
jle
xor
add
add
xor
call
sbb
jbe
shr
mov
pop
loop
pop
cs
rolb
ss
rolb
rolb
sarl
fcmove
imul
jne
gs
push
imul
cltd
jg
scas
shll
fistpll
xor
cld
sub
data16
cld
mov
adc
negl
and
fcompl
lods
les
lea
add
mov
icebp
adc
lea
pop
jp
cwtl
xchg
int
lahf
cmp
cltd
adc
sub
dec
dec
or
stos
hlt
jbe
sbb
pop
cmp
or
jle
imul
repz
sub
cmp
sbb
xchg
shlb
pop
inc
dec
fnstsw
mov
movsl
test
cmp
out
loopne
test
adc
add
mov
mov
add
out
out
mov
ljmp
ljmp
fsubl
pop
dec
sarb
mov
inc
mov
incl
sub
or
mov
aam
aam
aam
call
pop
in
das
lret
sub
dec
push
fwait
sub
mov
aad
dec
bound
loope
jb
xor
and
push
mov
pushf
ja
xlat
sub
imul
inc
mov
xor
imul
frstor
lods
aas
xor
pushf
out
xor
mov
icebp
xor
jo
fldl
popf
sub
aam
mov
inc
push
out
or
mov
xchg
loopne
pop
jne
fucomi
bound
or
pop
into
push
add
test
adc
jl
mov
cmp
cs
fs
sti
cmpsl
xchg
repnz
push
scas
icebp
ds
mov
xchg
push
or
and
cmp
jg
ss
xlat
rcll
adc
xchg
push
xchg
pop
mov
lcall
add
in
popa
insb
mov
rorl
pop
xor
aam
addr16
dec
pop
sbb
mov
sbb
out
fnstenv
stos
dec
mov
or
mov
outsb
push
clc
orb
sbb
inc
in
leave
pop
lods
test
pusha
mov
or
jle
popa
ss
sub
mov
mov
xor
insl
fcoms
jb
arpl
push
daa
mov
pop
stos
fadds
rorb
xchg
fnsave
fists
imul
xor
outsl
das
int3
dec
jle
and
scas
cmp
mov
scas
pop
and
jo
js
pusha
sti
add
pusha
and
dec
fisubl
mov
loop
jecxz
mov
mov
dec
ret
imul
jbe
scas
int
fdivr
outsb
js
mov
lock
cmp
push
push
mov
cmp
je
sub
ljmp
call
orb
dec
xor
adc
dec
leave
mov
icebp
in
jns
adcl
and
pop
loop
in
adc
mov
adc
push
mov
xor
push
jmp
rcl
push
scas
inc
xorb
push
arpl
and
mov
shrl
mov
mov
and
mov
push
ret
mov
push
sub
mov
test
out
jbe
mov
in
cld
and
cwtl
adc
mov
mov
or
jbe
mov
data16
xchg
sub
ret
inc
adc
out
in
fwait
xor
sarb
mov
lds
cmp
push
push
pop
lret
incl
lods
mov
lea
std
fdivrs
add
rorl
xchg
add
push
or
std
jecxz
out
push
push
outsl
push
mov
int3
in
movsb
loope
test
dec
adc
push
pop
xchg
adc
jne
shlb
dec
jmp
adc
lods
out
std
or
daa
pop
es
mov
push
popf
mov
ret
inc
jecxz
mov
push
ret
cwtl
scas
add
push
fdiv
mov
add
clc
lods
inc
xchg
out
and
test
cmp
ffreep
cwtl
add
add
fstl
or
rclb
or
and
jge
push
fisttpll
xor
lahf
jae
sub
cwtl
icebp
push
xor
inc
inc
dec
dec
ret
and
ret
cmp
adc
int3
nop
and
lds
fstps
sbb
lods
jbe
or
dec
pusha
or
mov
mov
cmp
push
xchg
rcrl
daa
sub
xor
inc
dec
testl
fwait
cmc
mov
adc
cmp
xchg
mov
hlt
mov
es
rcrl
ds
js
mov
cmp
add
push
push
dec
cld
scas
jge
mov
xor
push
das
or
shl
cmpsb
addr16
xchg
lds
scas
mov
add
cmp
sub
sub
out
cmp
sbb
jge
out
test
push
aad
cmpsb
lock
lret
mov
push
int
mov
cmp
mov
jns
pop
inc
addr16
je
mov
push
mov
pop
jecxz
xor
int3
lret
inc
jno
cmp
out
push
outsb
cmp
cmpsl
jp
popa
mov
mov
jmp
call
mov
mov
mov
xor
xchg
xchg
lds
stos
sub
xchg
call
movsl
pop
aas
or
adc
cmp
out
iret
jno
lods
mov
jg
xlat
mov
sti
jecxz
les
add
push
jge
arpl
in
jg
std
fsts
jp
fwait
or
jg
jns
push
push
xchg
std
into
rcll
es
adc
out
lods
mov
test
push
roll
inc
std
jp
add
inc
jnp
sbb
movsl
and
sbb
aaa
daa
xchg
sub
out
sbb
pushf
jae
jmp
sub
fstps
fidivl
orl
xor
mov
imul
sub
xor
xchg
add
inc
jmp
das
or
dec
xchg
es
jmp
pop
or
cmpsb
shll
adc
inc
je
xorl
push
sbb
and
ret
mov
lcall
mov
cwtl
test
adc
outsb
stos
sbb
es
mov
dec
xchg
inc
mov
sbb
sub
outsb
dec
jo
sub
arpl
or
adc
jp
xor
xchg
lret
inc
lret
pop
popf
lea
cmp
into
lock
jmp
dec
lea
popl
les
add
lock
subl
fnsave
inc
cwtl
scas
mov
add
sub
scas
daa
nop
sbb
jnp
jbe
cli
lahf
imul
adc
dec
outsl
ret
shrb
insl
sbb
stos
fimuls
std
push
mov
mov
aas
mov
xchg
add
jns
lret
nop
push
out
and
popa
adc
pop
cmp
es
jge
addr16
ficoml
xor
adc
xor
mov
xor
loopne
lods
dec
sbb
int3
inc
pop
into
out
mov
push
jo
ds
mov
enter
ret
fwait
jmp
mov
jns
cld
sbb
and
adc
pop
push
mov
lret
or
xchg
mov
testl
fcmovnbe
data16
dec
xchg
rclb
push
ja
leave
fidivrs
test
mov
shl
xor
cli
xchg
loope
roll
loopne
movaps
lret
xchg
mov
cmp
fimull
or
xchg
jnp
mov
pusha
push
jbe
ja
mov
pop
mov
ljmp
out
rcl
mov
es
or
repz
xor
les
fldcw
xlat
and
push
nop
popa
push
inc
mov
inc
out
inc
xor
push
mov
dec
jno
mov
mov
icebp
fnstenv
je
push
out
and
xchg
xlat
or
out
movsb
sub
jno
clc
and
xchg
fs
ficoms
pop
enter
mov
cwtl
je
nop
fisttpl
mov
in
cmc
pop
pop
mov
jns
cli
scas
and
adc
inc
push
add
mov
cs
popa
xor
adc
lret
enter
sbb
mov
loop
adc
add
ret
dec
sar
cmp
les
cmp
lahf
and
cmp
add
hlt
stc
and
cmpsb
daa
xchg
sub
pop
xor
mov
xchg
pop
test
jecxz
lods
loopne
adc
dec
lock
mov
mov
ljmp
fists
cmp
add
fcomip
pop
lock
mov
cmp
dec
test
xchg
lds
inc
ficomps
pop
mov
pusha
inc
mov
mov
out
xchg
loope
xor
out
jecxz
mov
mov
lahf
cmpsl
mov
inc
and
or
test
mov
test
sbbl
sarb
dec
test
mov
or
in
mulb
dec
jo
mov
xchg
jbe
ret
or
sub
adc
mov
mov
xor
lret
mov
sbbb
clc
shll
inc
cli
lock
fstpl
repnz
jae
xchg
jae
sub
lcall
cmpsb
hlt
cmp
pushf
test
adc
data16
cmpsb
pop
xchg
sbb
xor
sbb
xchg
lret
mov
testl
iret
xlat
cli
pop
fs
adc
negl
adc
fisubrl
inc
dec
jge
lcall
or
xor
enter
lret
adc
lcall
icebp
push
xchg
xchg
aas
in
pusha
loop
xorl
rorl
xchg
cmpsl
xor
ljmp
stos
xchg
rorl
icebp
inc
mov
adc
imul
inc
mov
cmp
sub
not
subb
push
daa
mov
adc
sbb
insb
cli
pop
adc
out
inc
icebp
lods
rcl
lods
mov
cltd
xchg
cmp
idivb
pusha
mov
mov
imul
pop
xchg
lods
ljmp
mov
bound
fldenv
xchg
daa
stos
iret
fwait
xchg
inc
or
mov
test
ficomps
jae
cld
sbb
aas
mov
jmp
pop
jp
mov
roll
movsl
lock
jno
leave
into
fbld
xlat
adc
aad
stos
in
push
and
notb
add
push
fildl
sahf
or
mov
idivl
js
ror
outsl
and
xor
xchg
das
lock
or
int
inc
jo
ds
in
add
jbe
pop
xor
lahf
jecxz
cmpsl
mov
lret
inc
call
adc
rorl
inc
mov
xchg
cmp
jnp
aad
and
push
mov
rclb
fwait
or
aas
pop
cmp
cmp
inc
addl
mov
add
sub
fwait
movsl
inc
lret
mov
lret
and
je
or
and
ret
js
sbb
pop
xchg
jle
es
pop
addb
and
popa
pop
push
push
test
lock
iret
sbb
popf
mov
test
cmp
dec
flds
fdivs
outsl
rclb
mov
psubsw
aad
pop
std
in
rolb
mov
clc
mov
enter
test
and
pop
fimuls
jp
test
or
mov
mov
xchg
cld
xor
ja
jle
divb
push
std
or
inc
rcll
loop
dec
xor
or
or
stos
and
cwtl
jl
mov
and
call
sbb
dec
xchg
shlb
xor
cltd
push
lahf
xor
sub
lods
repz
push
dec
dec
fwait
cmpsl
fdivrl
fistpl
or
sub
sbb
pop
add
hlt
xchg
andl
mov
push
pop
lahf
mov
shll
and
inc
mov
cmp
pop
and
jne
add
mov
clc
mov
add
lret
das
pop
inc
bswap
push
adc
dec
and
test
pop
jae
dec
jbe
push
cmp
xchg
insb
sbb
lds
xchg
cltd
pop
sub
add
stc
popa
xchg
jmp
adc
mov
aam
or
mov
test
popf
faddl
jb
xchg
movsb
imul
mov
push
cmp
insb
sub
sub
cmp
jg
jae
mov
movl
inc
je
ret
insl
mov
mov
les
or
and
addr16
pop
mov
in
sbb
mov
lea
data16
adc
sub
push
xor
idivl
xlat
repnz
rcl
hlt
sti
jae
rcrb
test
mov
lds
loope
cmpsl
sub
lret
xor
bound
or
je
sbb
out
mov
adc
cmp
jle
imul
pop
push
out
push
inc
inc
addr16
inc
mov
push
rolb
mov
shll
mov
inc
jo
in
out
mov
ja
xchg
rorl
mov
cmp
xchg
cmc
jbe
adc
call
mov
dec
lcall
or
add
aad
mov
sub
mov
xchg
cmpsb
push
iret
jbe
and
xor
cs
xor
inc
xchg
mov
imull
data16
sarl
add
sbb
leave
inc
inc
push
idivl
push
dec
mov
arpl
mov
push
cwtl
in
lret
aaa
mov
jnp
jp
cmc
adc
mov
xor
jle
test
cmp
decb
daa
cmc
out
je
ljmp
dec
cmpsb
stc
and
and
mov
jns
ljmp
rorb
pop
inc
lret
rcl
jg
test
pop
in
cltd
sbb
imul
jge
lea
sbb
lahf
push
adc
jmp
dec
dec
and
sub
push
test
lods
iret
mov
jle
mov
in
xor
sbb
imul
or
pop
xchg
stos
movsl
icebp
dec
and
jne
in
push
sub
or
or
xor
into
mov
js
mov
sbb
adc
mov
data16
ret
cmp
push
jg
or
stc
xor
into
outsb
adc
inc
mov
roll
insl
push
test
push
ret
cmpsb
aam
xchg
lret
jae
or
mov
xchg
aad
ret
fcompl
daa
sbb
pop
call
adc
nop
lahf
pop
pop
sbb
push
mov
cltd
jnp
scas
pop
sbb
pop
enter
sub
cmp
mov
sub
in
jle
cmpsl
xor
call
sub
mov
ficomps
iret
nop
and
jb
std
rcrb
or
push
sub
aad
jne
cmp
push
int
mov
cmp
repz
das
mov
cmp
inc
das
into
ljmp
xchg
cwtl
mov
adc
dec
mov
icebp
outsl
jmp
inc
xor
push
jecxz
push
cmp
xor
dec
ljmp
xor
out
and
jecxz
in
pop
or
or
mov
loop
push
pusha
sarl
ret
pop
or
xchg
pop
xchg
mov
mov
gs
cmpsb
leave
roll
cmc
scas
mov
notb
sub
and
mov
mov
mov
cmpsb
inc
ficoml
andl
xchg
mov
stos
or
in
inc
jl
xchg
cmpsb
pop
pop
sbb
mov
lods
sub
repnz
sbb
cmp
dec
xor
mov
xor
int3
jbe
bound
scas
cmpsb
test
jne
push
mov
call
std
popf
call
aad
jb
push
in
jmp
jle
enter
mov
sbb
mov
outsb
push
rcrl
and
outsb
push
adc
orl
sbb
xchg
adcb
push
sub
stc
jns
cwtl
dec
fwait
stos
insb
lcall
ja
jp
add
fidivrs
hlt
cli
inc
mov
ja
mov
jle
cmova
cmp
aaa
sbb
daa
jbe
push
mov
xchg
shl
cmp
std
pop
neg
push
push
inc
outsb
ficoml
dec
lock
aam
insl
popf
out
add
in
lea
into
icebp
inc
les
stos
push
xor
insb
push
mov
jl
inc
std
rorl
lods
add
ret
js
mov
gs
insb
in
cmpsl
out
push
imull
xchg
jns
add
inc
pcmpeqb
xchg
pop
shll
or
sub
data16
mov
test
in
inc
lahf
ret
loopne
bound
cmp
into
pop
jmp
push
in
and
pop
jae
pop
add
test
cs
push
int3
mov
push
sbb
pop
mov
mov
cld
mov
cmpsb
les
shlb
jne
cmpb
xchg
aam
rcrl
add
adc
mov
daa
xchg
xchg
dec
sbb
bswap
mov
out
loope
scas
rolb
into
test
lea
inc
aas
sub
pop
jle
cs
repz
test
ss
sti
inc
xor
ret
mov
cmp
js
push
cmp
push
inc
jmp
jo
test
xchg
stc
imul
gs
cpuid
adc
int3
ljmp
mov
adc
fiadds
sbb
out
testl
orl
sub
test
xchg
jle
sub
sti
inc
sbb
mull
sub
outsl
in
jecxz
xchg
or
fsubrs
xchg
lds
pop
stos
ficomps
addr16
xor
sub
dec
jbe
mov
pop
loop
negb
testl
jo
pop
mov
rcrb
adc
jp
rcl
pop
mov
mov
adc
loope
iret
jae
xchg
stc
fnstcw
test
mov
cld
out
lcall
mov
pushf
mov
pop
imul
xor
mov
push
pusha
xor
push
push
mov
jns
and
fwait
lea
andb
push
sbb
jno
aas
lahf
inc
adc
shld
in
lods
cmp
dec
sbb
repnz
js
xor
or
sbb
push
jbe
and
inc
mov
pop
push
stc
cs
shlb
test
cmpsb
pop
sahf
push
ret
imul
scas
sub
jne
outsl
ds
fs
mov
xchg
ja
pop
cwtl
cmp
xchg
fimuls
in
cmp
mov
gs
dec
adc
xor
cmp
push
pop
loop
xor
int
popa
mov
mov
je
and
mov
xor
aad
cmp
pop
js
or
sahf
dec
xor
sbb
or
jge
outsb
or
mov
adc
insb
inc
sub
shll
repz
inc
mov
div
out
mov
or
insb
das
inc
cmpl
pop
xor
xchg
fdivrs
data16
lcall
sbb
das
dec
mov
orb
lcall
lcall
repz
adc
call
pop
mov
cli
dec
mov
shrb
cld
jns
ret
dec
sub
fcompl
lds
add
out
pusha
sahf
or
fsubr
push
cld
pop
cld
pushf
repz
mov
xor
mov
int
loope
xor
xchg
or
mov
inc
cld
shll
pop
jge
ret
jge
jne
in
sub
xchg
pushf
sbb
out
sub
notb
nop
xor
cmc
inc
mov
mov
xchg
push
pop
les
mov
pop
in
inc
in
mov
stos
sbb
cmp
push
pop
aad
jle
jmp
aam
jecxz
mov
std
pushf
mov
xchg
cwtl
adc
add
sbb
dec
sbb
inc
fsubrl
aas
out
mov
sbb
mov
loop
out
or
pop
push
mov
aas
push
sti
inc
sbb
lcall
jmp
xchg
adc
lds
lcall
test
dec
das
dec
out
stos
mov
pop
pop
lods
iret
jmp
loop
out
paddsw
roll
pop
xchg
push
mov
cmp
xor
sar
int3
test
mov
rcl
lods
jp
imul
negl
sbb
int3
pop
pop
and
lahf
adc
es
mov
inc
mov
sbb
add
movsl
push
or
push
popf
ror
leave
cli
adc
dec
popa
mov
out
add
mov
mov
fcompp
adc
pop
loope
push
sub
push
ret
iret
imul
jle
xchg
cmpsb
dec
add
mov
test
sub
add
mov
in
jb
ficomps
fwait
adc
sti
push
in
jns
mov
push
bound
mov
jecxz
pop
or
icebp
cmp
nop
mov
mov
adc
sbb
iret
inc
addr16
add
mov
movsb
and
mov
push
out
dec
jnp
fimuls
insb
fnsave
gs
sbb
dec
lret
loop
jo
stos
iret
mov
icebp
mov
inc
ret
stos
sbb
enter
push
mov
sbb
fwait
push
push
xchg
sti
jecxz
cld
shlb
lret
and
lods
mov
jo
adc
cmpsb
pop
and
scas
cwtl
xor
jge
pop
enter
or
pop
cwtl
pushf
je
rcrl
sub
test
mov
scas
dec
scas
add
xchg
jnp
or
push
in
xchg
cs
dec
add
jecxz
daa
dec
out
and
add
adc
es
jne
and
addr16
stos
out
jge
fistl
repnz
xchg
daa
fwait
sbb
shrb
xchg
aam
jmp
out
ror
and
adc
adc
nop
popl
inc
add
insl
mov
jne
scas
fstpt
outsb
sub
mov
push
int
hlt
fisubl
inc
das
cmc
addl
aaa
scas
ret
and
jmp
jecxz
arpl
imul
xor
out
mov
repz
pop
adc
insl
mov
cmpsb
xor
push
out
push
jne
fidivrs
mov
or
test
mov
mov
jecxz
das
aad
repz
arpl
pop
add
adcb
jno
aaa
fstl
xor
jle
fs
frstor
stos
push
push
xchg
andl
femms
cmpsb
stc
push
scas
jp
jae
xor
in
lcall
ss
mov
push
and
or
daa
pop
fldl
cmc
pop
or
xchg
xor
and
sbb
mov
lock
sbb
jbe
stos
push
xor
fwait
pop
lahf
pushf
push
jge
je
pop
std
jae
rorb
test
loopne
repz
sti
xchg
in
into
fsubrl
insb
imul
inc
inc
insl
inc
addl
lea
and
sahf
sub
ret
lret
ss
push
cmp
call
sub
xor
push
nop
addl
mov
mov
sub
adc
adc
mov
and
addr16
nop
or
mov
push
push
fcomip
xorl
testl
in
pop
push
inc
add
push
test
mov
pushf
popf
sub
dec
mov
push
cmp
jp
jmp
adcb
xchg
pop
adc
mov
mov
dec
inc
movsl
stos
sbb
imul
lret
mov
adc
inc
fnsave
fmuls
adc
pop
jno
cwtl
dec
add
jno
cmp
ljmp
mov
xchg
rolb
dec
sub
das
mov
pop
jnp
cld
adc
sbb
pop
or
mov
jb
xor
jp
mov
outsb
test
mov
fsubrp
push
cltd
fbld
loop
shrb
push
stc
inc
loop
int
ss
cmc
scas
jno
test
lods
rorb
push
xor
lods
inc
inc
push
push
lock
leave
aad
sub
pushf
jbe
cmpsb
and
jg
adc
fimull
sti
mov
pop
dec
in
xchg
jno
lret
sbb
or
into
push
mov
or
stos
hlt
popa
in
into
sbb
sbb
sub
ja
cs
inc
sub
roll
test
shlb
adc
aad
lods
mov
cmp
lods
ss
pop
rcrl
push
jb
push
dec
xchg
pop
into
mov
int
pop
repz
inc
cmp
lcall
pusha
cld
lods
xor
mov
jne
mov
in
inc
out
mov
shl
arpl
jno
and
jle
xor
mov
adc
mov
fiaddl
jge
sub
pop
jp
jns
xor
push
jns
sar
es
movsb
xchg
push
adc
ret
sti
dec
stos
sub
push
xchg
add
loope
jb,pt
rorb
mov
fildl
inc
jno
lods
ljmp
lock
movsb
sub
sub
lock
int
int3
inc
fs
lock
fimull
je
iret
jge
rcrb
dec
xor
add
clc
aad
movsb
repz
pop
icebp
lds
pop
jne
mov
push
stos
pop
add
ret
mov
repz
and
sub
cld
sbb
xor
push
dec
adc
sahf
stos
loop
test
cwtl
adc
cwtl
lds
nop
mov
mov
movsb
jecxz
imul
cli
repnz
arpl
cmc
mov
and
data16
inc
inc
iret
clc
mov
popf
popa
sbb
adc
xchg
in
xor
sbb
jg
xlat
xor
fidivrl
xor
pop
repnz
fs
pop
notl
sti
mov
lret
add
inc
pop
jle
cmp
cmp
cli
lret
ja
int3
and
push
cmp
ret
and
adc
adc
popl
or
add
int3
out
outsb
dec
ror
pop
push
sub
mov
xchg
in
mov
out
jl
fwait
pusha
jecxz
cwtl
or
and
movsl
jmp
aad
cwtl
addr16
jnp
int3
push
out
addr16
shll
dec
lea
daa
sbb
cmpsl
aam
lock
mov
lahf
mov
iret
adc
in
mov
xchg
fisubs
scas
cmpb
inc
dec
and
push
cld
je
dec
pop
add
ss
es
imul
and
sbb
and
in
js
fimuls
mov
and
sbbl
std
mov
mov
addb
adc
ret
push
jecxz
xor
pop
loope
inc
adc
adc
insb
dec
pushf
sti
push
mov
inc
inc
xchg
addr16
lcall
fdivl
scas
xlat
jmp
call
das
out
xor
cmp
out
scas
dec
push
mov
aam
pop
or
and
sbb
insb
shr
pushf
and
fnstenv
lock
roll
mov
cwtl
adc
mov
repz
lods
and
mov
lods
sarl
sarb
mov
fcom
pop
into
jl
cs
out
push
inc
xchg
xchg
cmc
add
sbb
divl
jmp
dec
cwtl
push
push
shl
jae
loop
pop
pop
sti
adc
std
iret
mov
cltd
push
push
out
sbb
jge
sub
dec
push
push
jmp
arpl
xor
pop
adc
pop
outsb
ds
lods
mov
push
add
mov
leave
shrl
inc
pusha
imul
pop
pop
push
bound
out
xchg
pop
and
iret
test
push
fs
insl
shrl
sub
cmp
sub
sarl
pop
add
out
pushf
rcl
sub
pop
or
add
cmpsb
and
push
ds
push
shrb
pop
ret
xor
pop
cmp
pop
outsl
or
pop
pop
ffreep
hlt
jae
inc
fs
pop
dec
inc
jae
lahf
jp
fiadds
mov
jecxz
push
out
sbb
orb
popf
mov
pop
aad
sar
pop
imul
cs
mov
in
inc
fwait
or
nop
cmp
mov
sbb
and
aad
pop
in
xchg
movsl
sub
cli
ss
xlat
push
mov
cmp
cmp
mov
arpl
das
das
jb
inc
jge
or
inc
add
cmpl
inc
dec
xchg
in
adc
pusha
adc
pushf
mov
add
outsb
aaa
cld
push
xor
divb
in
addr16
jmp
in
enter
xor
sti
mov
sub
pusha
xchg
ret
icebp
xor
shlb
sub
bound
rol
cmp
ret
fstl
repnz
stos
push
fsubrs
lret
cltd
stos
cmp
loop
iret
xlat
outsb
fsubrs
push
inc
pop
loop
push
ljmp
push
sahf
les
ret
mov
in
mov
je
testl
push
ret
pop
push
add
sti
push
std
fldcw
cmp
in
cmp
dec
adc
into
xchg
xor
in
sub
std
test
adc
mov
in
dec
xchg
push
cmp
inc
push
push
mov
ja
xor
dec
inc
xchg
into
mov
das
sub
push
and
ret
in
fs
aaa
sahf
ss
popf
xchg
jmp
or
adc
lahf
repz
loope
xchg
xor
sti
outsl
lock
mov
test
jle
std
sub
pop
and
adc
sbb
and
xlat
popf
pop
or
sub
and
jecxz
out
ffreep
cmp
adc
sbb
not
mov
gs
cmp
cli
mov
mov
ret
xor
ret
inc
adc
sbb
inc
inc
push
jmp
mov
in
ja
stc
dec
je
repz
test
icebp
repnz
cmp
push
test
or
sub
movsl
rol
inc
xchg
scas
cmp
mov
ret
aad
sub
or
push
test
stos
aaa
nop
jo
jl
call
jns
jle
stc
out
popf
int
fsts
cmpsb
add
loope
ljmp
mov
in
ret
mov
add
and
mov
cmp
lcall
mov
rcl
int
out
sub
data16
fstps
es
in
fistpl
mov
sbb
dec
mov
sbb
add
add
or
pop
jle
sbbb
repz
push
inc
sbb
lock
in
bound
pop
repnz
pop
cwtl
call
sub
lods
inc
or
rcrb
jbe
mov
ss
mov
xchg
loop
jne
jmp
push
dec
cli
lret
stc
loop
xchg
addb
jg
aaa
pop
lock
push
add
scas
push
xor
lret
inc
add
sarl
sbb
lcall
inc
push
arpl
imul
in
imul
dec
mov
pushf
ljmp
mov
xor
adc
inc
and
stos
xor
cmpsl
sbb
insb
push
sub
dec
int
stos
pop
cmp
or
lret
test
pop
imul
and
out
push
lock
nop
es
mov
loop
xorb
cltd
mov
adc
enter
rclb
lret
sahf
stc
repnz
xchg
popa
hlt
push
fs
insl
jbe
mov
fisttpl
shl
dec
popa
out
sub
cmpsl
popf
pop
in
in
icebp
cmpsl
dec
aad
mov
imul
outsb
or
scas
jp
out
aaa
es
jle
mov
pop
std
and
mov
test
mov
js
insl
js
mov
lock
jle
pop
stos
cli
pop
mov
mov
in
lods
and
mov
sbb
mov
andb
add
scas
cld
mov
idivb
enter
pop
cmpsl
in
ss
sub
mov
stos
into
lods
stos
dec
adc
xchg
mov
mov
jp
or
push
mov
lahf
sahf
fildll
sbb
mov
out
hlt
or
pop
loopne
out
sbb
xchg
sbb
inc
jne
int3
test
pop
loope
cmp
or
orb
jnp
pop
xor
fistpl
fwait
in
jmp
xlat
stos
fcoms
cmp
stos
or
xor
pusha
inc
addr16
xor
and
repz
inc
xor
xor
clc
dec
jmp
push
pusha
jp
jmp
test
sub
inc
push
icebp
lock
add
xor
mov
pop
fcompl
or
and
insl
and
lods
in
sbb
movsl
imul
pop
cmp
ljmp
pusha
push
fsubr
call
and
das
orb
lret
sbb
jg
or
add
xor
lcall
or
and
inc
cli
loopne
sbb
xchg
push
xchg
or
in
movsl
es
dec
push
fs
mov
cmc
adc
cmc
add
pop
sbb
mov
lahf
insl
jle
dec
sub
jg
mov
xchg
mov
cmpb
pop
push
cmp
int3
push
leave
adc
xor
sbb
xorl
jle
ja
test
mov
in
pop
shl
jbe
faddl
add
ficoml
adc
shrl
inc
shll
rcrb
repz
or
in
out
fnop
push
clc
pop
out
ds
aas
ljmp
pop
and
movsl
fstps
loopne
add
into
fsubrs
xchg
xor
mov
add
sub
mov
cs
and
cmp
mov
out
jle
xchg
dec
jb
sub
dec
cli
jnp
in
mov
push
es
pop
sub
or
push
bound
xor
pop
loope
in
movsb
mov
lods
inc
xor
jb
test
cvtpi2ps
repnz
testl
xchg
out
mov
cmc
or
stos
jecxz
push
pop
push
ljmp
pmuludq
adc
push
mov
cmp
pusha
testb
push
jno
sbb
xor
fldt
addr16
xchg
mov
jne
xchg
stos
stos
dec
jge
mov
stc
dec
push
push
jns
push
mov
mov
mov
or
ret
aad
imul
stc
pop
pop
cld
sbb
pop
pop
ficoms
inc
jb
mov
mov
test
xor
mov
fdivs
fcmovbe
loopne
call
mov
push
arpl
test
icebp
push
add
add
js
push
stos
push
sub
inc
shlb
push
mov
sbb
mov
jecxz
xchg
sub
cmc
or
sub
loop
rorl
push
mov
mov
shl
push
sbb
outsl
mov
push
dec
cmpsl
and
icebp
xchg
mov
pop
sbb
dec
mov
xlat
rorl
addb
stos
pop
inc
into
jmp
dec
and
pop
inc
cwtl
mov
add
sbb
ja
sub
mov
mov
mov
popa
lcall
pushf
in
loope
lahf
out
cmp
rcll
iret
adc
dec
fnstenv
mov
and
cmp
iret
cmp
inc
jecxz
adc
das
out
les
fs
arpl
inc
push
cltd
in
movl
mov
or
mov
nop
enter
inc
add
sbbl
fwait
mov
mov
fdivrs
inc
outsb
loopne
adc
sbb
push
xchg
dec
ds
lds
jmp
dec
cltd
adcl
gs
addb
jnp
mov
or
dec
into
mov
sbb
xor
gs
stos
sub
rorl
cs
mov
cmp
ret
lret
mov
pop
sbb
sub
sub
stc
dec
jo
dec
push
cmc
inc
rcrb
movsl
ja
rcr
pusha
les
in
dec
mov
push
lea
int3
xchg
movsl
cmp
inc
and
stc
fldenv
cmp
mov
pop
fbld
in
movsl
xor
aam
std
data16
push
dec
leave
nop
push
and
xor
mov
sub
inc
sbbl
inc
xor
in
popa
mov
movsl
sub
adc
ret
mov
push
sub
sub
and
pusha
or
xchg
cmp
divb
ljmp
das
xchg
mov
rclb
js
jle
push
lods
popa
lcall
sbb
ss
push
out
das
aaa
mov
enter
test
into
mov
negb
stos
ds
into
nop/reserved
cmp
outsb
loope
mov
in
hlt
int3
fsubrl
xlat
addr16
jno
outsb
out
mov
cmpsb
ljmp
mov
jecxz
dec
pop
xor
int
pop
xor
out
js
inc
pop
stc
sbb
arpl
stos
data16
or
jns
into
mov
loope
out
push
mov
iret
popf
test
ret
pusha
pop
imul
ljmp
add
cld
popfw
outsl
ja
bound
daa
addl
adc
mov
lds
in
adc
mov
aas
sbb
pop
mov
jg
dec
adc
lods
std
aas
leave
xor
adc
std
jecxz
shrb
or
out
ja
fcomip
push
cmc
inc
fs
ljmp
and
mov
imul
jae
add
test
sub
mov
mov
loope
push
xor
into
call
test
rorl
xor
xor
insb
pushf
fisubs
aad
das
hlt
loopne
mov
mov
aam
pop
in
xchg
mov
sub
mov
pushf
sbb
mov
repz
xlat
je
adc
out
cmp
addb
cmpsl
in
xchg
addr16
inc
inc
mov
stos
ret
cmpsb
inc
ss
push
das
sub
in
mov
push
xchg
and
mov
call
jne
cltd
mov
in
pop
dec
stos
lret
or
or
mov
fstl
ds
cmp
ss
push
pop
hlt
mov
testb
aas
sub
sbb
stos
arpl
les
and
xchg
dec
xchg
aad
int
mov
pop
sub
mov
insl
fwait
xor
mov
negl
lods
inc
je
scas
cmp
xchg
jne
sbb
jmp
loope
addr16
cwtl
cli
inc
nop
pop
js
push
cmp
jnp
xor
arpl
push
pusha
mov
vdivsd
rorb
sbb
retw
mov
pushf
pushf
ljmp
xchg
xorl
hlt
insl
inc
iret
xor
es
jbe
fnstenv
add
aaa
aam
fmul
lods
mov
test
mov
in
push
pop
xchg
or
shll
cmp
repz
adc
add
dec
ret
mov
in
adc
ret
inc
je
adc
daa
dec
cmp
lret
ja,pn
mov
pop
sub
daa
dec
sti
xchg
cmpsl
sbb
inc
insb
cmp
mov
call
adc
lcall
mov
loope
add
out
lods
push
inc
and
stos
cmpsl
mov
pop
or
ret
ds
mov
xchg
xchg
inc
mov
jp
outsb
push
sbb
hlt
inc
push
jg
pop
sub
lds
lds
pusha
std
jb
mov
xor
and
cmp
mov
in
jno
inc
mov
add
ljmp
mov
push
dec
dec
insl
mov
js
xlat
dec
mov
jno
inc
pop
shlb
lock
fiaddl
dec
cmpb
ds
sbb
mov
leave
dec
rcll
and
adc
pop
ss
es
and
fstpl
rcrl
push
ret
inc
jmp
cld
loop
mov
sbb
mov
or
int
adc
jns
ss
notl
adc
xchg
mov
ja
call
fucomi
aam
out
in
adc
xchg
pop
and
push
jb
dec
shll
pop
shr
ss
mov
hlt
lret
out
cltd
stc
popa
stc
xchg
notb
int3
out
idivb
scas
add
and
and
sub
test
mov
pop
icebp
movsl
xor
fsubrs
xor
aaa
sbb
mov
test
imul
pop
mov
leave
in
sub
pop
orb
push
scas
mov
mov
je
in
or
push
icebp
cltd
or
pandn
daa
pop
or
pop
sti
xor
lret
mov
mov
pop
mov
int
inc
pushl
ljmp
mov
sub
lret
fidivrs
push
leave
in
mov
jmp
out
fcomip
mov
mov
loopew
stos
lret
xor
sub
shll
adc
and
cmpsb
pushf
jnp
shrl
jecxz
sub
insl
lcall
mul
pushf
cmpsl
jle
loop
sub
cmp
je
sub
adc
xchg
pop
jmp
sub
inc
adc
sub
ret
mov
mov
into
fisubl
dec
mov
mov
mov
sbb
ss
xchg
fisttps
scas
dec
test
xchg
faddl
addr16
loopne
dec
xor
inc
cld
xchg
pushf
sbb
scas
mov
fsubrs
aad
push
ja
mov
adc
add
or
adc
pop
xor
ret
xchg
jmp
repz
push
cld
xor
adc
call
test
out
loope
jg
mov
inc
mov
dec
jl
sub
and
loop
xchg
arpl
xor
and
out
dec
xchg
dec
sbb
push
out
push
mov
jbe
xor
out
ret
xor
xchg
pop
xor
fs
in
repnz
lcall
lahf
loopne
pop
mov
daa
push
stos
pop
xorl
es
in
xchg
jecxz
xchg
push
adc
jns
sub
ss
cmpl
stos
xchg
cmp
andl
adcl
mov
jne
fwait
outsl
aam
out
enter
dec
xchg
xor
xchg
xchg
int
push
and
imul
jne
sbb
dec
sbb
pop
add
xchg
mov
stc
cmp
mov
xlat
nop
cmpsb
inc
rcrl
xchg
jge
and
push
mov
fidivl
enter
in
and
nop
inc
jecxz
lock
mov
dec
mov
mov
arpl
sub
jno
jge
js
negb
push
cmp
dec
in
stos
sub
jb
clc
nop
popa
loop
insl
push
hlt
ss
sbb
decb
push
push
add
test
push
insb
jle
repz
outsb
cli
mov
daa
aaa
jo
jnp
fbld
xchg
lret
fidivl
mov
add
fsubl
pop
test
push
and
push
rcll
adc
fsubrl
repz
push
call
pop
scas
fwait
sar
adc
dec
jno
mov
jns
arpl
inc
mov
add
gs
outsb
dec
xor
fsub
fsubl
pop
or
int3
cmc
stos
lock
xor
addr16
push
jns
arpl
sti
adc
pushl
and
gs
jecxz
inc
cmp
xor
fisubs
outsb
stos
add
dec
pushf
cltd
add
xchg
xor
ss
stos
pop
cmc
aad
test
in
fsubrl
mov
stos
loopne
cltd
popf
jb
pushf
dec
out
shrl
sti
jle
or
inc
xor
or
loop
mov
xor
mov
mov
cmp
stos
push
push
sub
adc
sub
and
ret
hlt
or
jg
gs
jge
push
mov
shl
scas
loopne
arpl
sub
sbb
xor
sbb
pop
add
xchg
divb
inc
insb
mov
pusha
jno
add
add
adc
fucomi
shl
push
push
push
sbb
inc
repz
jmp
xchg
sub
jae
cltd
movsb
subb
hlt
pop
mov
icebp
adc
loop
mov
mov
repnz
cmc
xchg
inc
mov
jo
pop
clc
jbe
inc
jne
out
iret
nop
adc
cmovno
jp
jl
adc
cltd
and
push
andl
xor
push
jne
cmp
mov
xor
and
out
jb
rcrl
divb
cmp
out
pop
pop
inc
fidivrs
xor
sub
dec
xor
push
scas
mov
ret
adc
sbb
cmp
sbb
decw
orb
fldl
and
mov
lods
sub
dec
cwtl
dec
fstpl
pop
in
pop
cmc
cmp
mov
and
mov
notl
or
sub
mov
push
mov
iret
inc
rcrl
dec
mov
insl
into
andb
jbe
arpl
lret
mov
insl
into
push
insb
js
sbb
mov
stos
xor
dec
and
and
divb
hlt
movsl
mov
jae
pop
or
mov
push
addr16
shlb
sub
pop
out
lock
cmc
ds
or
or
fdivr
add
sbb
jno
inc
mov
sbb
jae
lods
mov
das
pop
aam
aas
movl
pop
or
sub
mov
jle
adc
push
icebp
mov
aam
xchg
push
mov
and
cmpsl
inc
and
das
adcl
xlat
mov
pop
mov
mov
lds
out
js
fcomps
andb
cld
xor
dec
mov
add
rorb
sub
inc
loopne
notb
mov
adc
jno
psrad
add
cmpsb
jo
xchg
mov
cli
add
lock
imul
xor
pop
jno
mov
sbb
xchg
push
jmp
or
mov
xchg
inc
popf
fcomp
xchg
stos
int3
inc
aad
jo
cmp
ss
cwtl
dec
inc
inc
xchg
adc
add
inc
jle
cld
adc
pop
clc
insb
int
xor
push
pop
int3
sbb
pushf
mov
psllq
and
addr16
ljmp
loopne
mov
adc
jmp
das
cmp
shll
shll
in
inc
xchg
testb
inc
dec
bnd
pusha
mov
cmpsl
and
aas
test
cmp
ja
xor
add
hlt
inc
adc
push
ret
insl
repz
outsb
xchg
sbbb
fists
imul
push
inc
mov
inc
or
outsb
imul
pop
xchg
roll
imul
adc
and
sahf
sub
fdivl
loope
add
mov
adc
pop
mov
jnp
mov
rolb
add
jns
sub
inc
jne
in
mov
bt
scas
xor
dec
int3
ret
stos
divl
xchg
aaa
mov
imul
or
shll
into
sub
into
sbb
clc
xchg
mov
mov
inc
xchg
mov
dec
pop
scas
ficoml
mov
cmp
push
fists
movsb
inc
lret
lret
sbb
xor
fistpll
xchg
js
scas
inc
popa
cmp
jb
rcr
lock
add
imull
sub
mov
push
and
cmp
mov
testb
adc
vucomiss
pop
xchg
xchg
sarb
pop
cmp
je
sub
or
in
inc
mov
lock
psllw
inc
out
frstor
mov
jae
mov
and
test
and
imul
daa
inc
scas
xor
mov
xor
jle
push
scas
inc
bnd
push
cmp
data16
cwtl
hlt
push
cmc
or
aad
sbb
jno
fidivrl
imul
iret
fildl
xchg
scas
xchg
mov
cwtl
add
loope
aam
xor
push
cld
push
xchg
in
adc
inc
hlt
stos
in
cltd
cltd
sub
rcrl
sbbb
mov
xchg
and
sub
cmc
jmp
mov
data16
das
add
xor
xor
call
lds
pop
dec
pop
hlt
hlt
jo
sub
fbstp
testl
mov
pop
push
cmpsl
repnz
jae
push
sbbb
push
imul
and
addr16
outsl
mov
xchg
adc
lcall
xor
jle
and
arpl
pop
or
aad
xchg
dec
xor
adc
int
in
std
pop
jo
inc
push
repnz
sub
adc
push
js
mov
mov
add
cs
dec
lods
inc
in
cmp
sbb
fisubrs
adc
lods
pop
jbe
push
inc
test
mov
clc
into
adc
shlb
xlat
jecxz
adc
sbb
adc
jo
sbb
cmp
cmp
sub
cmpb
call
mov
inc
movl
int
cmp
mov
cmpsl
push
jcxz
lret
or
sub
fstpt
cmp
jae
bound
lret
mov
jne
cli
jl
xor
xor
or
adc
negl
jo
mov
adc
push
loop
stos
and
lahf
sbb
fcomps
dec
jge
fisttps
jno
sub
and
cmp
ja
push
dec
sub
shlb
in
mov
or
aad
insl
mulb
pop
push
sbb
or
flds
mov
xor
push
pop
jecxz
or
ret
ret
push
jecxz
in
gs
hlt
loop
and
mov
dec
int
add
imul
mov
jno
mov
and
es
sbb
into
loop
and
pushf
mov
sti
sub
mov
push
push
push
and
jae
or
lods
xor
pop
xchg
xlat
lcall
cld
pop
mov
xor
mov
sarb
mov
adc
and
inc
scas
adc
fisubs
dec
out
in
cmp
and
dec
inc
mov
inc
cmpsb
xor
mov
into
mov
dec
xchg
filds
out
adc
ds
dec
mov
pop
repz
dec
jo
in
lods
sub
cmp
shrl
mov
or
lcall
arpl
mov
push
push
cs
mov
lea
xor
push
push
xchg
adc
sub
sbb
or
cwtl
das
shl
jne
lahf
push
add
dec
mov
xchg
test
sbb
sub
aaa
test
mov
and
xor
mov
jg
pop
mov
dec
shrb
jb
icebp
push
fwait
int3
xor
or
je
adc
cmp
xor
test
fcoml
incl
leave
or
je
sbb
mov
out
mov
jmp
ror
sahf
sub
jl
and
int
jle
mov
fs
lea
cmp
mov
pop
repz
pop
inc
mov
jl
popf
cli
outsb
xchg
cs
adc
and
test
movsl
insl
sarl
cmp
mov
nop
loope
lods
cmp
and
dec
pop
inc
das
push
mov
pop
mov
es
adc
lret
sub
mov
mov
pop
sub
les
lods
mov
fstpl
push
orl
sbb
fs
je
aad
shrb
xor
mov
xchg
movsb
idivl
pop
mov
mov
int
dec
jae
mov
aam
in
lds
ja
bound
stc
lahf
sub
ret
and
dec
lahf
imul
mov
das
adc
jb
jp
shr
cmp
push
imul
dec
imull
test
icebp
mov
enter
xchg
dec
and
hlt
adc
dec
arpl
lods
add
or
aas
fs
dec
push
test
mov
push
jae
shrl
arpl
out
fcmovbe
push
mov
xchg
mov
xchg
bound
pop
jmp
iret
lret
or
cmp
and
lcall
sbb
out
push
dec
nop
pop
imul
sbb
push
incb
test
push
mov
fisttpll
aaa
imul
adc
jl
scas
pop
adc
ljmp
sub
pop
jb
daa
loope
mov
ret
aam
adc
cs
dec
sbb
xchg
aas
inc
cmp
lock
add
dec
lret
aam
inc
lea
imul
jae
fwait
adc
fimull
nop
add
outsl
mov
bound
data16
jp
xchg
in
add
pause
cmp
cmp
add
adc
sbb
data16
cmp
adc
dec
daa
bswap
insl
imul
and
inc
loopne
pop
xchg
rcrb
mov
jp
xchg
das
jecxz
shr
test
fwait
pusha
test
pop
mov
xchg
mov
and
outsb
lods
push
add
cs
cmp
and
adc
fwait
mov
movsl
bound
insl
xchg
test
test
faddl
pop
push
ficomps
mov
std
xor
cmpsb
mov
repz
or
mov
out
lods
rorb
xchg
add
push
fimuls
fidivrl
or
or
mov
push
xor
lahf
fimull
test
lret
xchg
and
mov
movsl
cmp
imul
test
adc
push
adc
loope
das
call
sbb
ljmp
scas
push
inc
cwtl
mov
sbb
inc
mov
pop
nop
pop
sbb
mov
in
mov
iret
mov
jle
jmp
ljmp
gs
xor
les
xchg
arpl
outsl
and
inc
das
mov
dec
repz
or
fwait
xchg
out
jmp
xchg
xchg
pop
pop
mov
cmp
xor
and
mov
jl
push
xchg
and
and
sti
dec
mov
fwait
pop
jnp
loopne
imul
push
mov
and
push
lods
shll
cmp
lret
iret
test
nop
bound
clc
sub
sbb
or
cs
xchg
adc
pusha
add
fmull
inc
aam
mov
test
jmp
icebp
pop
dec
push
in
push
mov
shrd
dec
das
repnz
adc
movsl
inc
add
adc
addl
cmp
push
add
adc
cli
sbb
pop
push
sbb
aas
dec
and
mov
gs
push
mov
test
shll
lods
mov
fstl
sahf
lods
jl
leave
out
inc
das
cwtl
mov
jmp
push
fs
cmp
add
cmp
aas
loope
je
in
mov
xchg
test
jmp
jl
scas
fs
xor
loop
dec
sar
add
shll
sub
lea
dec
inc
sahf
iret
push
scas
fmuls
cwtl
xchg
rcrb
leave
pop
adc
dec
inc
shlb
cli
fistps
in
fcmovne
mov
and
rclb
mov
jae
test
and
pop
pop
inc
pop
cmp
jnp
lock
xor
mov
mov
in
lock
jge
inc
lods
shr
cmp
mov
mov
or
mov
in
inc
mov
faddl
adc
icebp
mov
mov
pop
push
xchg
hlt
in
mov
mov
mov
mov
cmc
jns
stc
push
add
mov
mov
pop
scas
daa
fdivl
jo
das
push
sbb
dec
push
mov
dec
jge
or
and
fldt
push
inc
cmc
push
or
cmp
mov
test
and
pop
dec
mov
mov
into
rcll
std
or
in
mov
icebp
stos
sbb
outsb
push
inc
mov
cmp
in
push
push
call
or
aam
popa
outsb
adc
mov
mov
std
sub
stos
push
ljmp
stos
cmp
cmc
mov
dec
jl
test
xor
sahf
test
es
in
xlat
dec
sbb
cs
lcall
jae
and
fwait
idivb
ficompl
xchg
in
sub
clc
xchg
outsb
xchg
in
mov
daa
pop
bound
and
inc
mov
insb
xor
inc
fnstcw
ret
cmp
outsb
mov
push
clc
jge
inc
int
push
clc
jmp
jg
mov
cmp
shlb
lock
in
adc
push
cmp
test
in
sti
shrb
mov
xchg
lahf
and
aaa
and
mov
loop
mov
sbb
lret
sbb
jb
xchg
xlat
and
test
bound
ljmp
cmc
pop
mov
jg
movsb
mov
xchg
out
jl
mov
aaa
arpl
pop
lahf
adc
mov
xchg
call
add
scas
jecxz
jg
lods
insb
fisubl
xlat
out
push
dec
pop
cmp
test
fimuls
insl
stc
fisubrs
mov
sub
call
cld
lret
fs
mov
fnstsw
iret
push
and
aam
out
pop
clc
push
add
outsl
or
mov
sub
in
pop
sbb
sbb
out
ret
cmp
out
mov
jmp
popa
push
push
stc
xchg
xor
popf
cmp
stc
add
mov
mov
nop
call
insl
xchg
mov
jg
add
pop
jno
sbb
addr16
sarl
dec
xchg
adc
dec
test
stos
popa
fs
and
lods
push
addb
inc
cltd
data16
pop
jno
scas
xor
out
cli
push
movsb
mov
ds
stos
cltd
push
ja
fildll
xor
jg
jp
jmp
adcl
ljmp
xchg
xchg
repz
enter
shlb
sub
add
pop
rclb
mov
or
dec
sti
adc
jmp
or
in
dec
fwait
movsb
jmp
xchg
mov
push
ljmp
mov
inc
mov
ja
ja
mov
pop
push
popa
bound
mov
ret
or
pusha
test
and
jl
lea
inc
jmp
pusha
sbb
lahf
sbb
adc
aas
adc
push
adc
and
push
dec
cmp
out
push
mov
leave
xor
mov
push
sbb
faddl
mov
icebp
dec
mov
push
das
in
mov
mov
js
pop
addr16
mov
add
jecxz
lods
or
inc
xchg
mov
stos
dec
roll
xchg
xchg
int3
fistl
cmp
test
mov
inc
mov
imul
cld
pop
dec
mov
adc
push
push
fiadds
mov
cli
out
push
cmp
inc
adc
push
sbb
int
enter
in
xor
ja
dec
mov
jmp
rorl
addb
cmp
sti
dec
mov
mov
hlt
mov
cmpsl
neg
push
dec
cmp
leave
jg
pop
jb
adc
mov
inc
cmp
jecxz
sbb
mov
inc
cmp
mov
jnp
push
pop
cmc
and
inc
sub
jns
lcall
js
mov
xchg
jmp
sbb
sarl
subb
jmp
call
popa
aad
inc
ljmp
add
and
out
out
lea
push
lahf
xor
push
cld
sbb
outsl
popa
sub
add
xchg
mov
gs
pop
mov
cmpb
sub
loope
xlat
ljmp
mov
ror
lret
out
repnz
mov
out
mov
dec
inc
mov
es
mov
leave
fiadds
pop
add
mov
orl
call
into
jnp
ret
sbb
lock
jae
add
add
lret
rorb
sub
loopne
scas
jno
cwtl
fldl
leave
inc
inc
sub
dec
mov
cmp
aad
or
or
sub
test
jg
les
sbb
out
hlt
fbstp
push
out
mov
je
in
pushf
jl
lcall
in
sbb
lret
xchg
lods
sub
adc
mov
jecxz
stc
inc
adc
fwait
push
mov
sbb
add
add
sub
sub
in
divb
push
in
pop
pop
mov
jle
pushl
out
or
pushf
pop
lret
js
fwait
test
fwait
pop
pop
sub
out
xor
xchg
addr16
push
ret
loop
mov
jne
jno
lds
cmp
andl
mov
jo
xchg
sti
jb
stos
or
ret
jae
mov
loopne
jb
mov
ss
fmuls
test
and
lock
push
push
cmp
loope
inc
es
mov
mov
cmpsl
mov
push
data16
rcrb
es
fadds
leave
push
jb
in
popa
scas
pop
mov
in
pop
jnp
pop
lods
and
sub
aam
fistpl
sub
xlat
or
or
xchg
mov
jno
xchg
cmpl
add
and
fbstp
sahf
xacquire
xor
cmc
xchg
xchg
inc
sbb
mov
xor
mov
adc
sub
mov
and
mov
aas
push
mov
adc
jg
sbb
leave
rep
or
add
add
add
mov
addr16
jg
testl
sbb
into
loopne
out
fdivrl
mov
xlat
jno
lret
mov
push
push
adc
fldcw
mov
sbb
push
mov
adc
cmpsl
xorl
cmp
push
rcrb
xor
sahf
mov
mov
cmp
addr16
mov
sub
xor
popa
jns
loop
test
jp
iret
idivl
mov
jge
xchg
cwtl
dec
out
in
pop
dec
sub
ss
js
push
mov
in
jge
inc
fisttpll
fisttpl
lock
into
jno
nop
and
rcl
aas
in
fcoml
jmp
mov
mov
test
mov
sbb
sbb
push
rolb
adc
call
push
mov
dec
and
jmp
push
xor
lahf
mov
enter
jne
les
xadd
popa
pop
lds
shrl
lock
sub
add
push
mov
movsb
sarl
sub
adc
cs
test
loopne
dec
stos
mov
fidivrl
sub
push
mov
xor
in
test
shlb
xorl
jae
pop
inc
cwtl
mov
js
mov
stos
lods
mov
jns
mov
inc
in
jno
pop
test
nop
jbe
sbb
pushf
sub
enter
cmp
adc
loop
push
lahf
mov
and
cmp
js
add
lahf
out
sub
mov
pop
testb
arpl
push
pop
jle
out
jbe
dec
jg
out
pusha
addr16
adcb
or
loopne
into
mov
sbb
daa
xchg
xor
push
fcoms
push
loopne
daa
jle
test
pop
cltd
or
ret
dec
mov
adcb
shrb
pop
cmc
mov
leave
nop
enter
mov
insl
leave
sbb
sbb
push
ja
fidivrs
mov
icebp
loop
mov
scas
icebp
pop
mov
fs
add
jns
pop
xchg
xor
shl
test
mov
lahf
mov
mov
cmp
xchg
lahf
jno
nop
leave
lret
addr16
ret
roll
fwait
jbe
adc
scas
add
add
fucomip
lds
xor
je
shll
and
cmp
cltd
aas
aas
in
ret
mov
jl
enter
int
sti
push
dec
rorl
sbb
pop
mov
shlb
mov
push
inc
mov
cmp
cs
sub
adc
pavgb
push
fdivp
jns
push
add
pushf
or
leave
mov
imul
inc
pop
xor
pushl
shll
je
cltd
add
mov
jl
ret
pop
pop
notb
push
pusha
cmp
push
jbe
mov
cwtl
push
lods
mov
add
shll
out
add
jae
sbb
movsl
lock
out
popa
test
fildl
mov
mov
stos
addr16
into
xor
leave
pop
pop
fcmovnbe
in
cmp
hlt
das
xor
or
imull
pop
sti
imul
rorb
or
add
repz
sbb
cmpsb
enter
or
push
lahf
jmp
aam
sti
xchg
cmpl
fs
je
jnp
inc
enter
enter
adc
jo
adc
rcrb
lret
or
movsb
scas
shrl
aaa
xchg
and
std
dec
cs
mov
call
mov
pusha
imull
mov
push
add
imul
push
mov
js
and
pop
pop
orl
adc
mov
inc
mov
jl
sbb
adc
sbb
aas
mov
insb
imul
mov
pop
les
outsb
aaa
inc
jl
dec
test
pop
mov
ljmp
xchg
fwait
daa
xchg
lcall
aas
adc
in
jns
sub
mov
pop
push
fs
out
stos
jae
je
ds
mov
mov
jmp
loope
pop
or
cli
add
dec
in
xchg
sbb
inc
add
jnp
mov
sub
xorl
aad
cli
inc
or
and
or
ret
out
fisttpll
outsb
jge
rorb
imul
mov
icebp
sub
movsl
sub
inc
call
mov
mov
mov
cmpl
ljmp
add
mov
inc
lret
popa
sbb
ja
push
dec
xor
lods
inc
xchg
mov
flds
roll
push
mov
sub
xlat
popa
dec
push
or
inc
mov
sahf
fstp
dec
pusha
push
pusha
cmp
push
and
jae
mov
push
cmp
sbb
das
lds
jae
inc
cmpsl
inc
insb
rep
xchg
aaa
jmp
and
cmp
xchg
pop
insb
pop
or
in
sar
fstpl
mov
add
mov
dec
insl
popf
cmp
mov
adc
scas
pop
jns
mov
adc
mov
jmp
add
cmpb
lea
xchg
ljmp
dec
in
jge
scas
in
add
and
shll
imul
lret
sti
sarl
into
pop
imulb
mov
inc
jg
sub
pushf
std
push
mov
inc
out
mov
jns
lods
xchg
ficoms
std
mov
add
cmp
xor
orb
movsb
pop
xor
std
sub
stos
jae
jo
dec
fidivl
popf
xchg
loopne
aas
sahf
in
push
lods
popa
xor
popa
pushf
stos
push
mov
xchg
push
fwait
add
cs
add
push
fimuls
adc
mov
imul
out
rcrl
shl
push
insl
push
lea
sub
sahf
jbe
mov
cmp
jnp
xchg
dec
jb
jns
mov
int
add
inc
icebp
add
inc
aas
cs
stc
nop
push
mov
inc
nop
sbb
in
pop
push
sub
xor
cmpsb
cmp
jl
inc
aas
ficompl
and
xor
test
dec
adc
sub
in
inc
push
insb
push
pushf
dec
xchg
sub
xchg
shr
das
dec
cmp
add
in
mov
ljmp
jb
push
ljmp
and
adc
fdivrl
inc
cwtl
dec
pop
adc
scas
and
jae
outsb
popf
pop
lods
pop
adc
dec
dec
and
xchg
jle
push
stc
push
xchg
aas
movsb
push
xchg
mov
push
lahf
repz
jecxz
pop
repnz
mov
in
pusha
or
mov
cmp
jns
sub
adc
icebp
sub
xor
cmp
xchg
mov
mov
push
jae
loopne
movsb
jns
leave
test
sbb
mov
imul
push
and
mov
push
or
fwait
sar
in
sbb
mov
and
shlb
stos
and
lret
rep
fstps
push
mov
leave
add
out
mov
aam
pusha
lcall
push
shll
xchg
pop
mov
push
les
or
jae
in
daa
mov
push
jmp
jnp
inc
cli
push
dec
imul
es
dec
out
dec
ss
mov
mov
in
sbb
xchg
jne
mov
data16
jg
jg
push
ja
and
repnz
mov
pushf
or
jbe
cmp
dec
icebp
mov
pushf
dec
dec
fnstenv
nop
iret
mov
int
mov
pop
ss
lods
fidivl
xor
cltd
pop
int3
jne
rclb
insb
cwtl
fcom
pushf
xchg
and
fiaddl
out
out
stos
push
lahf
or
fcmovbe
cmp
sub
ret
lods
out
or
test
daa
popa
mov
push
xchg
out
js
nop
inc
mov
loopne
and
jbe
or
ss
gs
mul
dec
or
mov
cs
mov
in
in
mov
fwait
pop
es
popf
push
push
ja
insb
push
jmp
pop
cmp
lret
push
filds
push
sbb
cmp
stos
sbb
lds
sub
mov
pop
pusha
xchg
les
push
lock
movsb
cmovnp
mov
ficoml
call
push
pop
mov
movsb
les
lret
sbb
out
fwait
push
inc
ljmp
and
frstor
push
popf
dec
mov
leave
inc
pusha
js
add
js
xor
cmpsb
ret
mov
lods
lds
or
sti
ret
jge
test
or
adc
jp
xchg
xchg
ss
loopne
hlt
es
out
sbb
adc
lret
shlb
mov
ds
inc
loop
pop
push
pop
ljmp
enter
pop
lret
push
mov
mov
scas
int3
xor
movsb
sbb
int3
xchg
cltd
rcrb
fadds
idiv
push
or
cmp
cmp
xchg
and
or
mov
sub
gs
jecxz
roll
adc
stos
sbb
xchg
fwait
xchg
cs
mov
push
sub
je
sbb
cld
ds
in
pop
andl
rol
in
sbbl
je
jp
lods
mov
cli
ret
inc
cmpsl
xchg
shlb
sbb
mov
clc
inc
scas
add
ljmp
ret
jo
push
xchg
xor
xor
push
fdivrs
das
xor
insl
and
push
dec
adc
insl
int
xchg
fsub
pop
or
adc
or
ficoms
or
mov
pop
xchg
bswap
adc
orb
mov
adc
scas
icebp
jl
mov
xchg
cmc
ret
cwtl
leave
push
jb
pop
ret
sbb
rol
lea
clc
push
mov
mov
ds
cmp
lret
sub
sub
mov
or
in
jnp
or
xor
sbb
test
lret
orl
daa
cld
jns
add
xor
ljmp
in
lods
outsl
add
inc
cli
jmp
xor
or
add
mov
xchg
pop
cmp
sub
mov
push
or
sbb
mov
test
push
sub
fisttpl
jno
mov
lods
roll
inc
mov
mov
and
ja
popa
inc
stos
jnp
test
push
cmc
mov
xchg
stos
push
push
iret
pop
and
mov
mov
mov
scas
and
rcrl
out
jl
xor
pop
adc
int3
mov
xchg
std
ret
adc
mov
popa
lock
ss
lahf
repnz
add
mov
icebp
xchg
sub
push
push
mov
mov
scas
adc
rorb
pop
mov
and
repz
xchg
fiaddl
sbb
push
sub
test
stos
pop
push
fisttpl
cmpsb
in
repz
or
jecxz
icebp
and
or
jg
inc
xorl
testl
inc
outsl
pop
pop
jnp
fwait
insl
fmull
jg
mov
xlat
stos
push
shll
inc
xchg
sub
xchg
loope
sub
popw
mov
push
lock
lahf
add
sbb
fdivrs
shl
subb
scas
xor
int
lret
popa
cld
hlt
xlat
or
orb
sub
and
pop
pop
and
push
jnp
loop
sub
xchg
ja
insl
adc
sub
andb
aaa
pusha
pop
aam
lret
inc
loop
xchg
push
cmc
bound
or
lret
jl
cli
outsb
outsb
lock
lods
dec
dec
inc
loope
sub
pop
adcb
dec
jge
mov
hlt
mov
adc
adc
sbb
aam
mov
aam
cmp
push
or
adc
inc
push
rorl
xchg
scas
enter
xor
push
jl
jnp
sub
in
loopne
ret
sub
xor
rcrb
ds
xrelease
rcr
aad
leave
xchg
loop
pop
ss
test
sahf
aam
leave
inc
sub
jbe
cmpsb
push
test
ret
mov
mov
pop
sahf
adc
cld
pushl
pop
std
cmp
out
bound
jecxz
lds
xlat
or
inc
and
aas
mov
jecxz
imull
fs
dec
fcmovu
cld
cmp
shrl
adcb
jo
lods
fnstcw
es
je
jae
mov
jle
jns,pt
andl
inc
cs
xor
mov
std
cmp
inc
adc
repz
cmp
adc
lock
add
adc
addb
subb
js
pushl
push
adc
xorl
outsl
pop
outsb
loop
mov
gs
and
dec
std
jmp
xchg
pop
shr
imul
das
out
pop
push
dec
mov
pop
lods
pop
sbb
mov
insb
inc
push
xor
sbb
sub
loopne
push
arpl
add
pop
aaa
or
add
mov
adc
popa
dec
jbe
xor
out
jae
ficomps
fcmovnb
push
mov
pop
stos
jge
lock
mov
bound
js
loopne
out
sbb
popa
xchg
in
lret
popf
into
mov
bound
mov
filds
jp
push
ljmp
xor
or
cltd
jno
push
mov
in
in
testl
add
push
lds
dec
push
push
xchg
ss
pop
dec
xor
pop
mov
mov
sbb
enter
inc
js
jle
arpl
int3
loopne
nop
fimull
and
inc
lock
and
xor
je
pusha
popf
add
xlat
scas
cmp
test
dec
test
mov
and
test
pop
xchg
lods
push
pop
pop
pop
daa
pop
jecxz
shrl
cld
repz
outsl
adc
ss
push
lds
xchg
or
ja
lods
xchg
pop
fbld
incl
lock
bound
movsb
jnp
add
lcall
out
sbb
pop
pop
xchg
push
stos
mov
dec
lret
add
mov
jp
add
mov
scas
std
loope
fcoml
jno
xchg
movsl
inc
addr16
mov
mov
inc
pop
and
jne
jns
aam
test
pop
outsb
lret
cs
adc
fs
dec
mov
or
lret
sub
add
inc
xor
fsubp
dec
cld
std
std
sahf
mov
cltd
lock
aam
fsubs
xchg
pop
pop
mov
jbe
sbb
clc
jo
xor
add
xlat
in
mov
mov
jl
aas
push
cld
adc
ja
add
mov
mov
mov
sub
mov
popa
lods
jmp
sbb
or
push
lret
xchg
call
loop
jle
test
popa
repz
and
pop
es
lock
push
cmc
fistpll
jg
add
sub
test
mov
xchg
xor
imul
mov
push
lods
out
adc
sbb
jg
daa
add
xorb
pusha
mov
mov
xchg
xchg
xlat
cwtl
or
lret
and
mov
adcl
pop
lods
imul
push
adc
cmpb
icebp
out
nop
cmpsl
aas
ja
pop
std
test
sbb
in
dec
fisttpl
push
dec
scas
imul
sahf
outsl
lahf
lock
xchg
jne
push
int
test
and
pop
xchg
xchg
ja
cltd
ret
aam
scas
adc
ss
lss
in
add
fwait
adc
dec
lcall
mov
repnz
adc
bound
je
ret
js
dec
iret
mov
ret
lds
jno
icebp
ficoms
outsl
push
dec
pop
inc
les
popf
data16
fsts
mov
insl
mov
cmp
outsb
xchg
das
mov
and
pop
andl
mov
push
inc
xchg
rorb
stc
mov
aam
test
jbe
int3
shlb
out
xor
xchg
cli
adc
in
enter
fsubl
fsts
in
push
jmp
popa
addr16
outsb
or
cmp
push
lods
mov
adc
and
pop
ljmp
cmp
lds
pop
lds
push
hlt
sbb
movsl
in
pop
repnz
mov
mov
jmp
jl
mov
out
ljmp
inc
out
lret
push
ret
mov
sub
sbb
mov
xchg
push
inc
xchg
lahf
and
cmpsl
fsave
mov
cli
sbb
jb
mov
cmp
inc
in
mov
iret
in
mov
mov
mov
int3
nop
nop
imul
cmp
and
add
scas
in
add
cmpl
mov
dec
sbb
mov
jmp
dec
fmull
movsl
sub
adc
adc
pop
cmp
leave
shlb
jb
js
incb
adc
pop
add
or
inc
gs
mov
dec
sbb
cmp
dec
xchg
shll
outsb
jle
fistl
repnz
and
mov
fwait
stc
adc
jg
popl
cmpsb
mov
in
push
lret
pop
in
cs
fiaddl
push
cld
cmp
shlb
fs
out
shll
aaa
in
xor
clc
fwait
xlat
dec
lods
xchg
mov
fstl
loope
adc
xchg
mov
add
repz
push
loope
adc
scas
lret
inc
mov
mov
lock
xor
mov
mov
mov
and
jl
pop
pushf
push
aad
fsubrl
lock
jo
and
in
lea
cmc
and
mov
ret
adc
rcll
out
lods
inc
sub
jmp
inc
xchg
les
loope
movsb
push
mov
mov
iret
mov
dec
lea
cltd
das
mov
aam
in
in
xor
push
xlat
in
sbb
mov
stos
xchg
test
in
pop
pop
es
adc
push
fisubrl
mov
cld
cmp
mov
sub
mov
adc
push
pop
or
cltd
inc
push
out
push
fistpl
lods
push
out
mov
in
mov
jno
fbstp
sub
and
xor
push
arpl
pop
mov
fs
mov
lods
xchg
xor
roll
mov
sub
mov
ja
mov
push
xor
test
shrl
push
push
mov
xor
icebp
push
int3
icebp
mov
cs
jnp
aaa
xchg
addr16
push
pop
lea
rcll
sbb
mov
mov
test
adc
pop
inc
mov
and
insb
or
or
icebp
add
ffree
jge
inc
loopne
int
cmp
cmpsb
call
xchg
stc
inc
push
das
int3
in
test
adc
jns
shr
pop
dec
dec
sahf
enter
dec
jmp
xlat
outsl
xor
bnd
jnp
aas
out
xor
aaa
out
push
jae
fiaddl
and
dec
rcrb
xor
cwtl
push
jnp
pop
jae
sbb
scas
sti
ss
inc
cmp
mov
in
nop
cmp
test
sub
mov
fsts
les
jmp
sbb
cwtl
mov
cmp
mov
test
jo
stos
int3
sub
cmc
mov
mov
push
pop
fdivl
jns
adc
test
std
and
enter
add
pushf
inc
ficoms
mov
cmp
mov
sub
inc
sahf
push
int3
sub
mov
scas
arpl
inc
cld
push
push
xchg
mov
imul
pop
lock
shr
test
fstpt
pop
cmc
mul
repz
enter
out
jp
add
fisubrs
or
sbb
sub
movsl
sbb
sbb
pop
or
sarl
mov
cltd
testb
mov
xchg
inc
mov
xlat
jg
add
jl
stc
jecxz
mov
test
mov
cmp
or
pop
nop
in
mov
mov
cmp
jb
dec
xor
sbb
lcall
roll
popf
or
mov
add
pop
roll
adc
and
xchg
mov
inc
jmp
mov
enter
fisttps
cli
dec
jmp
bound
or
bound
popf
outsb
mov
loopne
je
xor
fldt
fiadds
rcrb
aam
mov
jge
xor
xor
xchg
enter
push
into
rorl
clc
cld
notb
das
or
out
inc
in
adc
mov
adc
push
add
pop
sti
daa
xchg
xor
out
push
mov
insb
mov
imul
cmp
sub
jmp
mov
es
sbb
ficomps
pop
xorb
cmp
rcll
mov
subl
pop
cli
mov
inc
sahf
in
imul
push
bound
sub
mov
add
fidivl
jmp
cmpsl
and
push
jle
mov
push
nop
add
fwait
mov
or
or
out
scas
movsb
mov
push
subl
xor
and
mov
andl
or
cmp
push
dec
jecxz
dec
xchg
adc
jae
mov
push
stc
nop
mov
lock
inc
fildl
xchg
fs
aad
call
sub
popa
shlb
pop
enter
int3
push
push
cmpsl
bound
cmp
pop
fs
stos
cli
out
fs
mov
pop
js
or
fists
dec
es
inc
std
lahf
lock
lahf
push
in
cmp
pop
jge
out
fidivrs
nop
fcoms
pop
mov
sub
mov
or
add
nop
adc
and
pop
pop
sbb
xchg
cltd
cmp
sbb
and
call
icebp
and
fadd
sbb
or
pop
out
lds
mov
clc
fdivl
push
jbe
std
cmp
xor
xchg
test
mov
jno
sub
mov
xor
mov
addr16
repz
or
mov
sbb
outsl
jno
enter
testb
xchg
repnz
popf
or
leave
fwait
xchg
mov
jp
sbb
imul
hlt
lret
or
adc
mov
out
pop
mov
outsb
mov
stos
pop
lods
mov
call
pusha
mov
xor
rcrl
push
test
mov
adc
out
je
adc
mov
stc
jno
popf
test
nop
lds
adc
xor
mov
mov
inc
xchg
es
and
in
mov
fiadds
insb
push
arpl
dec
push
dec
loopne
roll
mov
xchg
loop
shlb
insl
mov
test
mov
sub
sbbl
fcomps
popa
jbe
mov
bound
mov
push
jb
lods
lods
push
fildl
fstps
inc
mov
sub
jne
and
xchg
push
ret
idivb
dec
jne
cs
std
ret
leave
mov
fwait
inc
lahf
xor
adc
jmp
cld
iret
jmp
jno
xchg
push
adc
andl
and
addr16
in
out
mov
and
xchg
adc
loop
fisttps
inc
lar
jmp
mov
rcll
add
cmc
jbe
call
aas
inc
mov
loopne
and
adc
mov
lods
add
pop
sarl
es
lcall
ljmp
iret
arpl
sub
jns
pop
lcall
sti
add
and
xchg
in
mov
and
addr16
sbb
pop
das
add
ja
cmp
push
sbb
cmp
xchg
cld
xchg
or
es
xchg
iret
inc
mov
sbb
cmpsb
xor
frstor
jno
out
sub
mov
pop
sti
shrb
pop
pusha
jb
jo
xorb
pop
adc
add
sbb
mov
lea
sbb
ret
push
dec
sbb
mov
lcall
bound
ficomps
inc
and
cs
out
xchg
adc
xchg
xor
xchg
adc
add
sbb
hlt
jmp
add
xor
dec
mov
mov
fiaddl
cltd
cmp
add
setne
mov
notl
loopne
push
add
sbb
test
scas
mov
fldt
adc
and
mov
cmp
int3
or
ret
aam
sbb
sbb
dec
repz
jl
sbb
and
call
mov
aas
push
adc
push
pop
outsb
dec
je
fistpll
cltd
int3
jns
cmpsb
pop
push
mov
jle
xchg
sub
imul
or
mov
push
and
jo
pusha
jmp
add
inc
pusha
pop
fildll
in
data16
push
mov
dec
movl
sbb
and
mov
push
int3
mov
add
lret
mov
into
in
mov
loopne
scas
and
mov
mov
addr16
bound
lcall
mov
push
cmp
jne
mov
adc
inc
nop
jp
in
pcmpgtw
pop
fstl
adc
cmpsb
xor
push
data16
push
je
lret
sub
mov
dec
addr16
movsl
les
mov
fnsave
mov
or
ja
lret
pop
cmpsl
dec
pop
push
xchg
cmp
xor
insb
cmpsb
dec
popa
push
xor
jo
push
pop
stos
nop
sbb
les
les
test
xchg
dec
inc
fsts
iret
adc
in
loop
out
rol
pop
or
cmp
lods
xchg
inc
in
movsl
dec
popf
mov
test
cmp
rol
add
sub
push
lods
test
aad
sub
xor
add
mov
scas
stc
mov
sahf
adc
mov
push
std
test
mov
call
and
sbb
cmpsl
fbstp
adc
add
enter
je
sub
loope
push
inc
in
jno
pop
pop
enter
sub
or
lods
addl
mov
das
js
dec
push
popf
sub
jl
add
push
ret
inc
cmp
repnz
aam
clc
mov
jecxz
push
in
incb
adc
cmp
mov
push
test
and
or
jle
shll
push
mov
sbb
enter
ds
xchg
xchg
cmpsb
mov
jge
mov
testl
ficoml
jp
mov
lcall
ja
test
mov
aaa
cmp
add
lods
cmc
lds
rorb
sahf
xchg
in
sub
cmc
jmp
push
cltd
in
out
ret
and
loop
or
mov
dec
adc
pushf
adc
cmovle
call
dec
cld
inc
cmc
xor
mov
sarl
jno
mov
dec
push
test
push
cli
in
popa
fcomip
popa
das
xchg
xchg
in
xor
popf
xchg
leave
cmc
sbb
imul
hlt
ret
xchg
pushf
cltd
or
repz
adc
or
cmp
xchg
lret
shrl
cwtl
sahf
testl
icebp
mov
pop
or
xor
pop
mov
adc
push
int
pop
push
xchg
push
xchg
cmpsb
or
xor
pop
fisttps
fdivs
test
insl
idivb
mov
jne
lea
xchg
outsb
xor
shl
mov
rcrl
jmp
out
nop
xchg
test
scas
dec
aam
xchg
dec
pop
jbe
scas
inc
xor
cmp
rcl
inc
and
bnd
fcom
std
enter
nop
leave
sub
inc
and
arpl
xor
in
jbe
push
in
arpl
mov
mov
repz
test
mov
xor
adc
push
addl
sbb
dec
push
pop
das
jmp
jle
pop
daa
or
clc
movsl
jl
loopne
push
adc
test
ret
lds
cli
daa
xchg
lock
or
push
adc
xchg
out
push
mov
loopne
fcos
subl
cmp
out
sar
xchg
inc
insl
arpl
push
push
and
out
push
xor
fmull
push
mov
clc
mov
repz
add
push
lds
jl
xchg
mov
hlt
push
sbb
xchg
add
dec
int3
push
sbb
repz
pop
mov
add
adc
push
cmp
mov
cmpsl
sbb
dec
outsb
or
xchg
xchg
repnz
add
sti
shlb
pop
pop
pop
fcmovbe
inc
pop
repz
push
xor
pop
hlt
pop
stc
mov
xor
jno
sbb
imul
adc
add
push
sti
js
fs
dec
arpl
outsb
push
mov
push
sbb
mov
shll
lret
inc
pop
test
cli
mov
pop
push
cld
mov
int3
dec
lahf
xor
mov
stc
je
cmp
popl
shlb
outsl
stos
data16
imul
loop
vandpd
add
push
sbb
xchg
cwtl
jb
cmp
inc
lahf
mov
inc
lahf
sbb
stos
mov
mov
clc
aam
xchg
test
and
inc
xor
mov
mov
icebp
and
les
inc
mov
mov
lret
sbb
ds
dec
dec
inc
int
cmp
in
jg
das
jb
enter
gs
cwtl
std
xchg
jb
inc
cmp
aam
test
xor
cmpsl
mov
repnz
test
mov
sbb
and
pop
xlat
mov
mov
fldt
out
xchg
mov
sub
rcr
mov
mov
xchg
test
popf
faddp
cwtl
xor
push
into
sahf
sbb
pop
dec
pop
divb
mov
ret
cmpsl
call
or
adc
push
dec
in
pusha
ficompl
aas
adc
rolb
push
inc
addr16
and
fadds
jmp
jg
mov
lret
jp
inc
mov
scas
outsb
in
bound
gs
movsl
push
pop
pop
inc
mov
movsb
xor
pushf
sub
aas
cwtl
adc
daa
cld
adc
pop
xchg
int
les
popa
imul
insl
and
call
push
in
sub
gs
cwtl
cmc
jge
ljmp
fwait
dec
testl
add
insl
jns
pop
adc
and
cmp
xchg
mov
mov
xchg
inc
mov
loope
fiadds
push
insl
cmc
leave
push
xchg
movsl
lret
imul
push
mov
test
cmc
xchg
imul
loop
xlat
and
jle
pop
sub
mov
mov
call
fisttpll
pop
sub
mov
mov
sbb
and
aaa
adc
ds
sbb
pushf
cmp
call
mov
mov
cmp
inc
jg
mov
sub
cli
push
inc
jnp
or
jmp
add
loopne
test
mov
pop
es
pop
jmp
cltd
mov
fsubrs
int
push
jns
push
adc
cmpsb
jae
mov
fucomp
pop
mov
pop
and
and
fdivl
lock
sti
leave
inc
ret
pop
cmp
decl
mov
stos
or
cwtl
push
inc
push
in
fcoms
into
pop
fwait
sbb
sbb
dec
cmp
inc
js
das
push
pop
loop
dec
ret
cltd
sahf
jmp
aas
mov
jp
inc
sbb
daa
mov
dec
std
popa
jp
int
movl
mov
or
call
jge
je
push
xchg
adc
dec
pop
push
sti
xchg
stc
dec
inc
lcall
dec
dec
dec
jb
inc
dec
jo
mov
push
inc
cli
mov
push
cmpsb
dec
adc
add
aad
adc
xor
fists
lods
mov
sbb
lcall
fs
sub
mov
mov
imul
out
push
fildl
add
add
cwtl
pop
mov
and
inc
push
xchg
jns
adc
mov
mov
loope
mov
add
out
xchg
lahf
jb
inc
dec
ss
mov
imul
push
loope
xor
incb
push
cmp
add
mov
arpl
inc
mov
fs
lock
int3
sahf
pop
mov
lock
popw
int
lret
popa
push
popa
dec
andl
sahf
mov
mov
out
pop
jno
mov
mov
pushf
mov
pop
leave
mov
arpl
shll
mov
int
xchg
jns
xchg
repnz
mov
sub
xchg
jmp
insl
loope
and
in
insb
rcrb
xchg
decb
mov
cltd
test
jge
lods
pop
sub
cmp
inc
iret
jge
dec
call
or
mov
adc
lret
aas
pushf
cltd
xor
outsl
adc
push
insl
sbb
in
mov
fs
es
call
rclb
jb
ljmp
out
mov
or
mov
sbb
fstpt
pop
xchg
jg
loope
mov
cmc
loopne
ficoml
mov
adc
xor
sarl
in
fsubs
sub
sti
pushf
push
jp
ljmp
test
and
out
lahf
fisubrl
push
test
xor
sbbb
inc
xchg
arpl
inc
insb
addr16
int
scas
stos
mov
adc
sub
sbb
rep
cmp
mov
xchg
daa
gs
sub
pop
pop
adc
mov
aaa
cwtl
push
sub
dec
pop
inc
mov
xlat
pop
sahf
lock
pop
jge
jb
push
push
push
loope
sub
data16
push
scas
or
push
inc
cmpsb
shll
jne
lock
pop
inc
push
clc
jo
cld
arpl
int3
int3
pop
mov
outsl
xor
jo
mov
inc
mov
inc
outsb
lahf
mov
xchg
inc
rcpps
xor
sub
xchg
xor
call
dec
popa
inc
fwait
jecxz
adc
call
pop
mov
pop
mov
or
movsl
inc
and
xor
dec
mov
dec
xor
shrb
xor
daa
lret
xchg
sti
cmp
jae
push
mov
cwtl
xchg
loope
mov
ss
out
mov
sbb
jno
mov
push
xchg
sbb
rcrb
jne
xchg
pusha
fdiv
jns
inc
in
das
and
ljmp
cli
cli
push
shrl
pop
in
repz
mov
or
fsubl
mov
push
mov
int
or
bound
push
and
xor
xchg
mov
js
push
es
aas
and
out
mov
rclb
lods
shl
sub
sbb
sub
sub
jb
mov
sbb
and
jecxz
cmp
scas
out
arpl
sarb
mov
pop
mov
mov
es
arpl
mov
mov
dec
mov
iret
adc
mov
jo
jb
xor
test
jmp
clc
nop
xor
into
push
lods
jg
cmpsl
int3
lds
jmp
aas
push
out
or
push
js
sub
push
xchg
xchg
mov
ja
dec
mov
add
dec
and
inc
cmp
jl
shlb
jnp
rcl
shl
subl
adc
xor
xor
xor
mov
jbe
inc
mov
or
jecxz
outsb
addl
dec
insb
fimull
mov
daa
xchg
xchg
dec
iret
cmp
nop
roll
gs
in
je
jmp
nop
mov
jo
xchg
roll
xchg
adc
mov
jp
sbb
pop
int
enter
jbe
in
imul
mov
shl
dec
das
shlb
movsl
add
aad
mov
push
clc
mov
push
enter
mov
fcomps
sub
pop
add
inc
fsts
pop
je
pop
bound
adc
fdiv
sbb
push
xor
setae
xchg
ljmp
pop
lcall
add
mov
outsb
mov
mov
pop
mov
test
lret
pusha
mov
shll
addl
inc
push
mov
jne
rcrl
jle
mov
mov
push
jle
xchg
mulb
jbe
pop
push
imul
mov
cmp
sub
loopne
mov
in
cmp
fdivr
mov
and
jg
and
gs
dec
int3
std
xchg
sbb
jo
mov
js
ja
xchg
and
sbb
cs
and
fiaddl
stos
add
add
dec
or
inc
and
mov
loop
xchg
push
pop
lret
je
jbe
push
cmp
push
and
xorb
mov
mov
mov
push
out
je
inc
mov
jecxz
pop
dec
in
xchg
aad
cmpsl
outsb
int
scas
popf
pop
repnz
movsb
mov
pop
nop
fisttpll
lock
xchg
clc
scas
jnp
push
jo
fs
pop
frstor
lods
push
dec
cmc
hlt
mov
sbb
jne
jle
test
loop
fucomip
pop
inc
inc
pop
pop
outsl
cld
fisubrs
mov
jno
adc
lcall
jmp
out
das
outsl
icebp
jmp
cwtl
dec
dec
imul
push
jmp
push
mov
jno
push
jbe
pop
cmp
xor
pop
push
pop
xchg
repnz
shll
cmp
call
pop
test
xchg
push
fstl
push
push
cltd
and
sub
gs
out
dec
and
sbb
ret
lahf
push
inc
in
inc
call
fmul
mov
xchg
jp
fs
enter
xchg
nop
and
shrl
and
push
mov
cmp
pop
jnp
mov
xor
or
dec
das
es
push
cmpsb
cmp
mov
in
clc
repz
ret
mov
aam
xchg
push
push
test
push
popf
xor
sub
add
inc
arpl
aas
iret
js
cmc
test
pop
inc
jae
sbb
pop
sbb
adc
scas
shrb
cmp
sub
movsl
es
mov
jp
flds
jns
pop
xchg
aam
pusha
dec
or
js
neg
adc
and
xchg
xor
pop
das
test
in
xchg
mov
outsb
imul
jp
cwtl
cld
sti
fdiv
push
mov
sbb
xorl
and
fisubs
into
xor
add
jnp
fisubs
rol
pop
or
xacquire
and
int
rorl
into
aad
mov
and
cmp
fbstp
mov
mov
lea
dec
xchg
gs
fdivrl
pop
pop
cmp
push
dec
xor
mov
sub
fucomip
imul
call
jns
cmp
sbb
sar
push
fsubr
adc
out
adc
repnz
xor
leave
sub
inc
ss
mov
add
cmc
fildll
cmpsb
outsb
xchg
dec
popa
popa
cs
xchg
repz
jae
repz
aad
push
movsl
les
repz
add
dec
mov
pop
fistps
jecxz
arpl
push
daa
mov
clc
sub
fs
ja
xor
inc
js
cmp
jae
rcrb
cmp
cltd
cmp
frstor
sahf
lock
and
fbld
xchg
fsubl
pushf
imul
pop
mov
jbe
sbb
pop
inc
and
adc
test
rcl
or
sbb
iretw
sbb
push
lods
lock
push
mov
push
pop
push
mov
xlat
mov
je
xchg
pop
cmpsl
xchg
lods
add
sub
xor
xchg
mov
jne
jbe
mov
jle
jle
push
pushf
fwait
inc
xchg
mov
dec
xchg
leave
repnz
daa
call
pusha
inc
pusha
pusha
add
push
insb
les
pop
enter
cli
xor
mov
lret
cmp
ret
mov
into
pop
mov
adc
mov
stc
jnp
dec
call
or
fdivs
jmp
jg
repnz
aaa
mov
aam
add
and
push
inc
mov
sbb
insl
mov
adc
outsb
inc
dec
pop
or
cmp
daa
dec
jne
test
xchg
push
arpl
movsw
push
xor
or
scas
add
stos
sbb
add
fstpl
subl
aaa
pop
lret
in
js
repnz
mov
imul
or
movsb
xor
clc
ficoml
xchg
xchg
in
sub
dec
and
mov
in
js
int3
cmp
movsb
add
clc
mov
push
shrl
or
incb
xlat
dec
cwtl
shrl
push
outsb
jbe
xchg
mov
into
inc
repz
push
not
scas
gs
arpl
flds
push
ret
outsl
cs
mov
data16
int
xlat
int3
mov
jns
jne
mov
xchg
lea
daa
scas
dec
lods
mov
lcall
mov
jbe
mov
sbb
ffreep
mov
std
in
std
xchg
mov
inc
inc
xchg
pusha
mov
mov
inc
sbb
adc
sti
and
or
pop
pop
cmp
fs
inc
pop
cltd
mov
jg
jp
je
push
mov
lret
icebp
xchg
inc
inc
bound
movl
testb
pop
push
and
cli
jge
sbbb
loope
cli
fs
adc
xlat
mov
enter
sub
shl
std
scas
lods
in
or
xchg
lea
jle
movsb
mov
adc
lahf
cmp
and
lods
hlt
aaa
jbe
dec
mov
out
mov
jle
sbb
jae
out
bound
pop
icebp
or
dec
out
pop
push
sub
jbe
inc
xorb
push
fisttpll
xchg
adc
mov
cmp
dec
cld
xchg
pop
lahf
int3
mov
mov
xor
mov
sahf
xor
add
inc
notl
sub
xor
jge
movsb
mov
inc
into
push
inc
xor
sub
mov
pushf
lods
sbb
loop
mov
or
movl
loopne
pop
aam
dec
ja
pusha
xchg
popf
mov
lods
sahf
add
scas
adc
imul
add
mov
xor
sbb
pop
xchg
or
daa
xchg
cmp
jg
mov
cs
push
imul
fldcw
jl
shlb
or
xor
test
jg
unpckhps
or
mov
hlt
test
movsb
push
ds
aaa
add
dec
mov
ja
sub
in
sbb
cmp
jns
inc
cmp
jnp
fnstcw
pop
mov
fstps
mov
shlb
xlat
push
jp
testl
mov
lds
inc
mov
add
or
test
pop
adc
mov
les
push
mov
push
add
adc
aas
es
cli
into
scas
repnz
ja
inc
dec
outsl
dec
mov
xchg
cmp
jno
jl
adc
fwait
and
dec
pushf
or
dec
push
add
mov
sub
fcmovnu
stos
and
sbb
arpl
std
jecxz
imul
std
mov
mov
cli
jb
and
xchg
mov
cmpb
outsl
xor
xor
es
push
lods
imul
dec
mov
clc
mov
xchg
ret
adc
dec
fucom
mov
mov
mov
adc
pop
push
popf
shll
mov
push
call
sub
test
add
aad
adc
icebp
dec
enter
out
rcll
and
xchg
mov
mov
add
add
rorb
sti
popf
rorl
imul
das
inc
or
loopne
push
pop
mov
frstor
insl
aam
into
lods
rorl
fwait
add
faddl
push
cmpsb
and
stos
push
adc
dec
dec
sub
imul
mov
bound
cli
mov
add
shl
sarb
fcoms
jno
clc
imul
or
xor
ss
sbb
sub
pop
cmp
cmp
stos
mov
sbb
fs
jns
xchg
cli
dec
cmpsl
sahf
dec
xchg
inc
out
mov
xor
jbe
sbb
movsl
cmpsb
mov
ss
rcr
pop
sahf
aaa
inc
hlt
ljmp
ja
ret
add
pop
adc
jmp
fidivrs
mov
push
add
aad
lcall
out
cmp
jns
mov
lret
sarl
cmp
test
lds
mov
xor
cltd
in
cwtl
push
xchg
lods
xchg
aas
lds
and
ss
std
test
mov
adc
push
mov
push
pop
cwtl
push
xor
sub
push
inc
lret
sub
cmp
and
cmp
push
mov
sbb
stos
jmp
mov
nop
sbb
jp
popf
sahf
les
shrb
je
mov
inc
push
cltd
clc
and
mov
mov
sbb
test
mov
ds
mov
mov
in
xchg
mov
xchg
int
cmp
add
mov
or
lahf
sbb
aad
inc
ds
xor
jl
push
push
dec
push
push
xchg
jmp
rolb
sbb
sbb
daa
xor
xchg
test
mov
cwtl
inc
cwtl
insb
adc
mov
aad
rorb
xchg
sub
mov
sub
fiaddl
adc
cmp
push
inc
xor
mov
aas
iret
fbld
aas
insl
cltd
lds
lret
jp
in
adc
rcr
add
repnz
xchg
adc
push
cmp
xchg
jno
cmc
mov
mov
jle
jne
nop
ret
iret
shl
inc
push
fcoml
nop
or
rcrl
inc
xchg
maskmovq
testl
dec
push
push
push
leave
adcb
jae
ss
jnp
inc
imul
imul
stc
inc
rorb
mov
push
adc
xchg
cmc
mov
jnp
outsb
into
mov
idivb
cmp
pushf
cmpsl
adc
out
sbb
pop
jno
shrl
mov
xor
sub
push
ret
imul
ss
cmp
fnstenv
jecxz
xchg
and
pop
mov
cmp
dec
test
sub
gs
aad
aam
sbb
xor
lods
cltd
pushf
aas
test
pop
sbb
test
div
sub
arpl
xchg
daa
cmp
mov
push
inc
shlb
insl
repz
icebp
inc
lahf
in
shll
popa
pop
cmpsb
insl
mov
ljmp
outsl
xchg
stc
inc
push
push
mov
sbb
sbb
and
mov
adc
ret
jle
dec
sbb
ret
out
inc
adc
xchg
and
cmpsb
sbb
sahf
cmpsl
jl
mull
push
xchg
add
lret
mov
fiadds
inc
mov
shl
pop
iret
sub
push
hlt
xorb
push
add
sbb
and
mov
lcall
movsb
push
xlat
imul
push
cltd
sbb
testb
mov
mov
shrl
inc
xlat
insl
negb
aam
or
mov
ret
jmp
cmpsb
mov
inc
mov
xorl
cmc
mov
dec
sub
inc
cmp
ret
es
jbe
cltd
add
adc
mov
and
mov
insb
stos
dec
jmp
xor
int3
movsl
jmp
outsl
aam
je
dec
mov
add
xor
dec
mov
and
rclb
fsubs
mov
ret
sbb
push
das
jmp
js
shlb
stos
pop
lret
and
mov
jno
mov
or
or
cmpl
push
popf
lret
fcmovnb
lahf
mov
xor
dec
pop
sub
pop
repz
aas
mov
adc
ljmp
adc
sub
cmp
xor
jns
fwait
xor
lret
xor
das
add
xor
ljmp
mov
mov
xor
push
add
sbb
dec
push
adc
xor
push
insl
sbb
sbb
and
ret
fs
filds
pop
clc
xorl
idivb
jmp
push
sbb
rcll
out
cmpsl
dec
push
cmp
hlt
les
jg
jle
inc
push
cmp
fstp
idivl
xchg
add
lods
imul
mov
mov
andl
inc
icebp
xor
xchg
cltd
sub
mov
or
pusha
arpl
jnp
jmp
cmc
add
cmp
adc
jl
inc
loop
test
mov
outsb
fisttpl
add
add
and
and
mov
out
or
pop
lret
lcall
int3
and
das
mov
icebp
iret
xchg
out
push
lea
scas
mov
out
and
cmpsl
sbbb
mov
jmp
sub
dec
sub
fiaddl
in
mov
inc
cwtl
sbb
or
push
push
insl
push
xchg
in
loope
mov
mov
push
mov
mov
jbe
lret
mov
cmp
fsubs
inc
mov
mov
mov
mov
shlb
adc
in
stos
fisubl
in
mul
idiv
mov
sub
and
pop
testl
mov
cs
cmp
or
mov
popf
fadds
and
mov
or
dec
ficoml
fldenv
inc
arpl
mov
cmp
pop
push
orl
daa
cltd
or
adc
ficoml
je
ret
loope
outsl
cwtl
add
rolb
popa
pop
fcomps
les
imul
mov
cmp
pushf
stc
adc
mov
test
loope
push
sub
gs
cmp
test
out
dec
mov
fdivl
cli
push
pop
loop
mov
and
nop
dec
loop
jle
jnp
arpl
mov
scas
jmp
adc
or
iret
test
and
lret
or
cwtl
jns
and
and
movsb
stc
pop
das
cmp
fcmovne
dec
sbbb
or
mov
sub
das
jnp
cmp
sub
shlb
sar
loop
out
popa
addl
add
dec
cmp
lcall
cmp
sbb
fs
aam
inc
pop
jo
mov
mov
mov
das
inc
xchg
xchg
sub
sbb
mov
les
push
add
out
or
std
mov
imul
dec
je
in
cmc
lret
test
pop
incl
int3
inc
stos
andb
ja
lret
fdivs
pop
inc
inc
mov
test
scas
cld
jg
sbbl
fmuls
sub
mov
int3
scas
jecxz
ja
jmp
fsubs
mov
mov
inc
int
es
lret
pop
ret
dec
mov
shl
mov
aas
or
les
xchg
lods
mov
sub
js
scas
mov
jno
mov
lock
push
dec
dec
jb
and
push
push
jg
jbe
test
popf
pop
push
lods
cmpsl
push
out
int
test
scas
push
mov
xor
cmpb
pop
push
pop
mov
test
arpl
sub
nop
mov
popf
mov
sub
pmaxsw
dec
jo
sti
pop
push
data16
movsb
insl
pop
js
lds
testb
sub
or
imul
jae
movnti
in
incb
xchg
dec
roll
xchg
jp
xchg
sub
push
mov
jb
gs
scas
lods
aad
sub
inc
leave
movsb
push
mov
je
call
pop
cmp
icebp
or
and
fdiv
xor
jnp
lock
sub
sti
scas
lods
xchg
test
and
mov
cmpsl
popf
cli
lds
pop
inc
inc
out
into
inc
push
dec
test
cwtl
loop
sbb
lods
and
inc
js
mov
aad
mov
sahf
lcall
insb
inc
loopne
movsl
cmpsl
clc
pop
pop
sbb
pusha
gs
sbb
in
fstl
filds
sbb
in
pcmpeqb
xor
xor
cmpsb
xchg
hlt
adc
into
pop
xor
out
mov
jns
mov
inc
into
mull
adc
or
sub
cmp
xchg
subl
push
std
pop
cmp
rorl
syscall
je
fcomip
pop
pop
das
insb
fnstsw
ret
or
inc
outsl
mov
leave
cmp
inc
jns
cld
sbb
fsubp
fcom
cmp
rcrl
test
int
sbb
push
out
dec
shll
outsl
or
gs
pop
xor
in
push
lods
push
jns
xor
movaps
mov
gs
mov
jae
addb
pushf
mov
stos
iret
ret
call
mov
repnz
sarb
mov
xchg
arpl
push
push
hlt
dec
xchg
push
xchg
loop
xchg
jle
nop
xchg
inc
and
inc
icebp
mov
mov
ljmp
pop
bound
sub
jmp
cmpsl
and
fnstsw
sbb
xor
mov
adc
cmpsb
lods
pop
roll
cmp
loopne
xlat
push
sub
out
repnz
mull
xchg
fdivs
jge
pop
daa
push
fldt
or
aad
rclb
incl
in
push
xchg
sub
or
iret
xor
mov
fistl
aaa
cmp
and
ret
cmp
loopne
xchg
pop
sti
xchg
xlat
sub
pop
cwtl
popf
outsl
jo
clc
dec
and
js
jae
fcomp
sbb
push
movsb
push
mov
mov
mov
rorb
cs
into
sub
adc
inc
mov
add
repz
repnz
push
inc
or
call
rol
movsb
cmc
dec
push
hlt
cmp
jns
jae
ret
sub
xchg
loope
cmp
dec
jns
mov
aam
fmuls
test
pop
lds
gs
out
pop
fldenv
add
sub
and
mov
mov
push
inc
bound
movsl
push
sahf
push
mov
fwait
adc
outsb
in
add
out
and
testl
dec
mov
stos
pop
xchg
iret
test
inc
and
inc
push
or
xor
xchg
mov
fsts
stos
addb
out
loope
pop
mov
ljmp
inc
push
int3
mov
or
jns
imul
outsl
rorl
inc
shl
mov
mov
dec
lods
sbb
and
dec
cmp
dec
dec
enter
inc
in
loop
mov
scas
das
sub
shlb
lds
mov
sub
pop
cmp
mov
pop
inc
dec
pusha
adc
out
mul
stos
mov
les
in
aad
ljmp
mov
addr16
push
lret
dec
mov
mov
fidivl
adc
icebp
in
jbe
fs
mov
sti
insl
fwait
cmp
mov
lods
rol
mov
mov
mov
adc
aam
hlt
xchg
ficomps
pop
clc
pop
sub
inc
js
pop
insb
mov
js
ljmp
cmp
cmpsb
or
cmpl
in
shll
jno
mov
cltd
cld
xchg
add
mov
js
testl
outsl
ds
mov
adc
mov
in
jle
jle
into
fldt
mov
adc
test
ret
loopne
push
in
xor
lret
stos
std
scas
test
or
mov
dec
fnstenv
daa
sub
lea
addr16
jmp
mov
jo
xchg
inc
dec
std
jns
ljmp
lahf
inc
push
cmc
mov
adc
fldcw
sub
pushf
dec
aad
gs
popl
dec
cwtl
repz
cmc
push
pop
cmpb
in
mov
or
sbb
les
in
fs
and
mov
repnz
adc
scas
push
add
nop
sbb
sub
lds
aam
ret
pop
loop
mov
inc
xor
xlat
lret
daa
call
add
pop
insl
adc
push
jb
or
add
lret
mov
mov
cmp
stos
pop
in
xchg
cs
subb
jb
or
std
outsl
pop
popa
mov
cmp
jecxz
sub
jle
cli
sub
repz
xor
pop
movl
add
cmc
sahf
sbb
jle
icebp
jno
popa
jnp
inc
sbb
aaa
xchg
jmp
rdmsr
inc
test
jle
or
addr16
popl
mov
and
out
jae
pop
xchg
sub
imul
cmp
cmp
push
adc
test
sti
fsubrs
cmp
outsb
addr16
loop
orb
sub
xlat
cld
xor
mov
sub
jge
cli
je
cwtl
mov
dec
sub
and
xchg
push
aaa
pop
add
iret
test
out
dec
inc
push
movsb
arpl
mov
mov
clc
stc
nop
fs
sbb
in
cli
icebp
int
int
fs
cltd
rcrl
pop
cli
mov
jmp
pop
inc
xchg
arpl
sti
xchg
idivb
int
xchg
jl
stc
dec
sbbl
idivb
pop
into
stos
mov
jge
mov
lret
cmc
and
scas
iret
push
mov
lods
adc
jmp
int
fsubs
repnz
jge
call
test
iret
lahf
jne
dec
out
in
enter
cmp
or
xchg
pushf
mov
mov
lahf
cmp
loope
xchg
mov
sahf
adc
and
inc
push
lods
ret
cli
pushf
fsubl
inc
adc
pop
xor
lret
test
jbe
inc
and
mov
fidivs
or
outsb
out
dec
adc
rorb
push
sub
inc
cmpsb
jecxz
lods
jge
scas
outsl
xor
adc
jmp
dec
inc
mov
aas
xlat
fwait
cmp
sub
inc
push
dec
jne
dec
lcall
cwtl
fmul
mov
jbe,pt
cmpb
dec
push
outsl
std
xchg
jmp
int3
mov
bound
jge
jl
movsl
push
aaa
ret
mov
pop
lea
cmpsb
inc
lcall
fxam
fwait
js
movsl
cld
pop
pop
dec
incl
out
lds
inc
mov
icebp
push
pop
fs
push
xor
and
push
into
shll
jns
mov
push
xor
inc
aam
jns
xchg
pop
sub
test
hlt
inc
cmp
xchg
rcl
push
adc
test
daa
pop
jns
sub
cmpsl
call
ror
addb
lds
pusha
mov
mov
jmp
je
add
lret
dec
mov
mov
inc
mov
loope,pn
mov
fwait
neg
xor
inc
sbbl
dec
sbb
hlt
insl
mov
out
dec
jg
ds
or
mov
aas
sahf
call
ja
mov
xchg
in
sub
fnstcw
pop
add
and
add
mull
fs
add
in
loope,pt
jmp
mov
mov
sub
cli
stc
sbb
imul
das
aas
lahf
clc
mov
lret
sahf
fwait
dec
fst
fs
adc
fisubrl
pusha
out
mov
cmp
xor
gs
ljmp
rorb
loopne
jecxz
push
lods
mov
fldl
pusha
push
ljmp
and
je
cs
add
cwtl
push
shll
add
ret
add
pop
scas
inc
mov
mov
or
mov
mov
jns
cltd
sub
and
loopne
xchg
sbb
aas
or
jae
mov
sub
xor
xchg
mov
insb
fs
es
cmpsb
stc
sub
cmpsb
aaa
lods
sahf
gs
js
into
enter
sbb
xor
sahf
push
cmp
ja
mov
aas
pop
xor
std
aaa
mov
push
dec
mov
lcall
sub
mov
dec
in
pusha
dec
cmp
cmp
fildl
inc
pop
inc
mov
ds
cmp
xor
outsl
outsb
stc
cld
cmpsb
popf
add
dec
sub
addb
sbb
jno
cmp
lcall
lret
or
xchg
sub
daa
xchg
mov
xchg
cmp
fwait
mov
lret
ror
mov
repnz
mov
pushf
adc
or
push
mov
jo
inc
push
jns
xchg
ljmp
jb
movsb
ja
inc
test
mov
xor
mov
pusha
adc
loop
int3
fs
xor
jmp
jo
bound
sbb
xchg
stc
hlt
mov
adc
push
mov
mov
lea
lock
add
dec
icebp
ja
pop
pop
lock
mov
cs
pop
imul
outsb
add
popf
and
lods
test
cmpsb
pop
mov
enter
pop
aaa
bound
cli
adc
jnp
cmp
int
lea
aas
sti
jecxz
sbb
sti
lods
xchg
sbb
mov
or
mov
fdivrp
cmpl
fcompl
in
mov
icebp
adc
lcall
fadds
push
lahf
into
mov
push
nop
cmp
sub
loop
cmp
push
dec
dec
or
std
mov
popa
lahf
ss
mov
pop
or
shrb
cld
mov
mov
inc
hlt
jp
pop
xchg
jle
sahf
fdivl
sti
adc
fiadds
xor
cmp
dec
pop
ret
inc
movsb
xchg
aad
fbld
mov
xchg
pop
rcrb
add
stc
popf
dec
mov
sbb
or
xor
aas
insb
jge
push
int3
pop
xchg
xor
out
daa
xchg
in
adc
cmp
push
dec
js
xor
ret
lods
mov
data16
inc
mov
xor
stc
xchg
mov
sbb
ret
or
shrl
aad
aad
pop
pushf
push
pushf
in
aaa
add
into
cmp
and
fiaddl
icebp
sub
hlt
pop
jl
inc
aam
movsl
mov
sub
inc
adc
into
repz
jns
iret
cmc
or
sub
fistpll
xchg
mov
xchg
jae
data16
test
lods
or
inc
jp
sti
imul
sbbb
ret
mov
shrl
lock
lea
flds
add
test
mov
dec
dec
add
cwtl
into
inc
stc
push
inc
or
icebp
hlt
dec
lds
daa
xchg
stos
loopne
adc
xor
cmp
mov
sbb
add
idivb
sub
cmpsb
cmp
sub
adc
adcl
shll
sub
xchg
pop
lds
or
xor
xchg
xor
aam
mov
inc
dec
cwtl
push
aam
lcall
pop
xchg
icebp
aas
inc
cmpsl
ret
loope
cmpb
or
mov
int3
out
fcoml
pop
scas
sbb
loope
cld
fsubrl
scas
lods
icebp
notb
data16
mov
imul
xchg
hlt
loope
pop
loop
aaa
add
into
xor
lcall
dec
ljmp
sub
xor
stc
add
sbb
and
into
adc
jae
loope
push
xor
ja
and
push
mov
loope
pop
cmpsb
mov
test
mov
pop
pop
cmp
xchg
push
xor
vmread
sar
xchg
notl
sub
mov
orl
push
or
xor
es
outsl
andl
add
enter
xchg
sbb
xor
andb
inc
mov
test
daa
pop
lcall
mov
pop
cwtl
fmul
jg
pop
xchg
mov
repz
mov
inc
sbb
push
jbe
test
jb
ja
stc
mov
shlb
dec
inc
lds
enter
mov
add
out
dec
xchg
shrl
out
nop
aas
ja
jg
cs
aam
jg
jl
test
lret
into
mov
mov
xor
pusha
xchg
inc
out
jle
dec
cwtl
jg
push
out
jno
call
dec
cmp
mov
pop
dec
sbb
add
lret
fimull
lods
lahf
sbb
repnz
push
ds
je
cmpsl
cmp
lock
lret
bound
lcall
inc
sub
sub
xchg
test
or
ja
sbb
icebp
mov
push
add
add
cmpsl
fldenv
test
adc
orb
add
cltd
jb
sbb
imul
sub
bts
sbb
mov
jmp
cmpsb
mov
rcll
add
out
in
rcrl
xchg
adc
push
inc
dec
pop
mov
fldcw
push
fimull
imull
arpl
or
lods
fs
push
sub
sbb
sbb
inc
jae
stos
lea
ljmp
cmp
cld
xchg
pop
jg
adc
stos
jno
dec
mov
sub
fnstcw
lahf
stc
adc
mov
stos
mov
xor
pop
mov
cmpsl
sub
lea
inc
pop
stc
xchg
fdivrs
lea
leave
xor
sbb
dec
nop
push
out
mov
scas
cld
insb
icebp
inc
add
dec
jmp
aaa
sarl
sub
jb
mov
or
iret
mul
mov
cmp
lret
dec
sbb
loope
pop
hlt
push
cmp
movsl
in
jg
mov
dec
inc
popa
cwtl
pop
out
cmpb
xchg
repz
dec
js
and
and
jmp
outsb
hlt
aas
cmp
dec
loope
cmpsb
mov
rep
ss
ret
loopne
idivl
pop
test
mov
jno
rcrl
cmp
xchg
insl
cmpsb
lahf
add
push
push
fldenv
mov
add
inc
cmp
vorps
int
adc
push
mov
cli
pop
xchg
or
sahf
mov
jmp
cld
addr16
pop
clc
test
inc
pop
lahf
into
clc
inc
aaa
cli
mov
insb
push
insl
shrb
aaa
jnp
fs
dec
cwtl
fsub
fnstcw
add
pop
mov
sub
sbb
sti
movsl
cmpsb
mov
repz
dec
or
fsubs
scas
add
mov
inc
cmc
mov
xchg
cmp
not
fnsave
je
jae
fs
jns
xor
loope
inc
aaa
jb
in
push
jnp
cvtps2pd
enter
loopne
lods
aaa
dec
adc
sbb
xchg
xor
cmp
sub
movsl
lock
push
std
pop
pusha
icebp
sbb
out
mov
jge
ljmp
aaa
enter
lahf
lock
icebp
inc
nop
mov
rcrl
adc
clc
cmpsb
inc
dec
bound
int3
and
fldenv
es
sub
add
cli
test
pop
hlt
fwait
push
sub
pop
cmp
sub
pushf
push
inc
sti
dec
gs
mov
popf
imul
rcr
push
jmp
mov
push
xor
cmpsl
stos
int3
push
pop
arpl
mov
pop
enter
imul
cmp
cld
pop
aas
pop
mov
leave
fdivl
pop
mov
mov
sahf
sbb
nop
xor
xchg
rcl
cmpsl
push
sub
fs
js
addl
in
and
cs
test
or
das
rorb
leave
rorl
mov
sub
aas
insl
mov
lret
stos
jns
imul
repz
xchg
js
mov
push
shll
nop
les
xor
daa
in
mov
movsl
pop
stc
cmp
cmpsb
sbbb
dec
add
aad
dec
mov
mov
or
add
mov
pop
pop
sub
sarl
adc
cmp
adc
lods
loopne
aas
lcall
mov
mov
negl
outsl
pop
or
mov
mov
pushf
ss
sub
popa
in
cmp
imul
jle
mov
mov
adc
loope
mov
sbb
mov
inc
xchg
scas
addl
dec
repnz
in
adc
pop
loop
rclb
ds
js
aam
outsb
push
es
sti
jae
push
sbb
sub
or
xchg
and
sbb
adc
mov
out
fdivrs
insl
mov
insl
cmp
call
rcrl
cmp
sbb
and
mov
push
dec
and
rcr
shrb
dec
in
out
sub
out
dec
leave
fs
mov
pop
push
mov
mov
clc
or
and
pop
adc
imul
adc
or
mov
mov
mov
arpl
lcall
fwait
push
push
andl
aas
pusha
scas
mov
je
pusha
xor
cltd
jne
and
mov
in
adc
sbb
pop
mov
test
movsb
std
lods
mov
push
or
pusha
adc
or
sub
lock
movsb
mov
rcrl
int3
popf
sarl
and
bound
add
cmpsl
in
sub
jne
jecxz
push
push
mov
inc
xlat
mov
cltd
mov
ja
scas
mov
fdiv
push
jecxz
ss
rcrl
push
xchg
clc
aaa
and
and
dec
outsb
xlat
and
dec
lcall
lcall
dec
out
cmp
and
push
xchg
jbe
pop
cmp
cmp
fidivl
xchg
stos
out
rclb
xchg
inc
mov
test
pop
call
fs
insl
lock
inc
fisubrs
lret
cmpsb
xchg
out
out
lods
or
call
mov
lret
shr
mov
shll
aam
test
mov
xchg
or
sub
cmpsb
push
jb
dec
push
xchg
pop
outsb
dec
lock
sbb
jg
fucom
sahf
pop
mov
cmpsl
lock
ret
loop
push
out
sbb
add
mov
sbb
lds
adcb
pop
inc
in
and
inc
xchg
ds
cli
rorb
pop
imul
rclb
js
mov
adc
pop
jp
jnp
dec
cli
sub
adc
jnp
js
pop
cwtl
mov
push
out
cwtl
ret
push
aas
dec
stos
addl
and
dec
inc
cmp
aad
pop
add
sub
push
mov
fs
in
mov
push
sub
jnp
or
pop
or
loope
dec
and
subl
or
xchg
mov
insl
movsl
lods
aam
dec
mov
jmp
pop
test
sbb
pop
rolb
jge
fildl
xor
aam
sub
ljmp
inc
or
insb
sbb
jno
fnsave
pop
aaa
fldenv
xchg
or
xor
out
or
out
jp
out
sub
inc
xor
mov
or
add
into
int3
push
addr16
push
xorl
stc
mov
aad
mov
ret
cmc
ja
xor
or
les
scas
cmp
adc
inc
dec
adc
jnp
sti
mov
ret
mov
jnp
fldcw
jo
outsb
sbb
xor
fsubrl
cwtl
sub
inc
movsb
cmp
xlat
pop
add
xor
sbb
shlb
xchg
xor
ss
inc
dec
inc
sbb
je
push
cld
push
popa
jg
jb
cmp
ficoms
cld
pop
pushl
subb
dec
int
rorl
sub
jns
mov
or
jge
in
fdivrs
ljmp
stc
orl
adc
adc
add
mov
sub
jno
fnstenv
clc
jbe
test
inc
add
in
pusha
mov
sub
mov
xchg
lahf
sbbl
mov
sub
mov
sub
jne
inc
sbb
and
sbb
sbb
out
lods
cmc
jle
lret
mov
mov
jae
inc
lock
iret
push
insb
mov
jge
clc
lret
test
test
mov
mov
pop
je
mov
or
fwait
cmpsb
push
sub
jecxz
or
pop
loopne
mov
cmp
dec
dec
lret
insl
dec
pop
gs
sarb
je
push
push
in
cmp
add
jno
adc
pop
jo
lea
fwait
int
xchg
hlt
push
pushf
sbb
push
fwait
cmp
bnd
int
sub
cltd
dec
xchg
in
or
cmpsb
ss
inc
cmp
or
or
jmp
outsl
cli
popf
lret
cmp
lret
cld
cs
jl
or
push
xchg
in
sti
mov
xrelease
rclb
cmp
push
in
fsubrl
mov
sub
sub
sub
movsb
std
mov
shll
fldenv
and
dec
push
mov
pop
lock
push
push
inc
cld
jno
loope
adc
movsb
out
sub
ret
lock
fcomi
xchg
aam
and
fs
and
and
dec
out
lods
scas
cmp
repz
gs
testb
or
adc
pop
icebp
and
into
jbe
jge
mov
sbb
loope
mov
int3
movsl
adc
adc
and
sub
pop
jns
pop
jns
mov
imul
scas
fs
add
loope
jns
pusha
sub
dec
mov
sar
sbb
push
shll
jns
out
ret
xchg
mov
inc
scas
cmp
movsb
xchg
mov
testl
adc
lds
cmp
mov
push
jbe
in
sbb
cmp
xchg
lds
lods
mov
into
adc
ja
out
ret
rclb
lock
and
mov
popa
lret
xchg
sbb
push
fxch
shrb
jbe
lahf
xchg
sar
mov
hlt
test
mov
dec
test
pop
ret
push
cmpsl
push
inc
movsb
test
in
xor
mov
and
jle
and
cmpsb
sbb
jno
dec
mov
dec
ret
aam
rcr
insl
lahf
mov
mov
in
push
in
and
adcl
mov
repz
inc
into
adc
out
xor
mov
scas
outsl
pop
popf
xchg
dec
pop
cmpsl
movsl
xchg
push
mulb
cmp
or
les
push
lret
mov
sahf
mov
cwtl
jno
mov
or
xchg
clc
cmp
jle
jno
mov
jge
push
jg
ja
pusha
inc
bound
jnp
pop
mov
daa
imul
cmp
jne
jae
out
shr
scas
push
fisubrs
fstpt
sub
mov
popf
adc
sbb
popa
pop
mov
loopne
loopne
mov
mov
jp
popa
mov
inc
lahf
movsb
aam
fistpll
fisttpll
pusha
clc
cmp
push
ja
aas
insb
push
inc
add
cli
adc
enter
add
mov
arpl
mov
adc
fwait
ljmp
push
aas
ja
test
add
xor
imul
insb
cmc
divl
jb
movsl
push
in
jp
dec
icebp
int3
mov
sub
jno
dec
adc
loop
ror
jle
in
sbb
or
cmp
inc
leave
adc
mov
push
mov
cs
add
ror
lcall
inc
sbb
push
mov
pop
jp
sbbl
in
pop
aaa
cmp
push
jne
sub
fdivs
inc
out
add
push
fsubl
je
add
les
nop
jg
xchg
lods
les
jne
jg
divl
cld
jbe
add
inc
jne
rorl
inc
pusha
mov
bound
add
and
andl
sbb
and
aas
jb
push
adc
xchg
mov
ljmp
clc
push
add
mov
icebp
add
dec
out
mov
push
movsb
sub
mov
daa
push
insl
add
imul
mov
inc
sbb
sub
push
pop
pushw
cmp
jmp
pop
out
jo
fucom
inc
and
cmp
aam
ret
pop
imul
push
js
sub
andb
out
jl
push
add
shll
in
or
push
pushf
push
push
xorb
jne
xchg
repz
inc
js
add
push
nop
sub
add
add
sbbl
bnd
or
jb
stc
bound
lds
stc
push
push
das
cltd
arpl
popf
dec
pop
or
mov
push
popa
xchg
jb
pop
outsl
sbbb
bound
lret
fistpll
mov
sub
lods
popf
das
xchg
cwtl
arpl
or
mov
popf
fsts
aam
jl
inc
out
or
pushf
jecxz
xor
stc
movsl
test
mov
xchg
mov
inc
ret
xor
inc
sbb
leave
scas
xlat
push
testl
push
ret
fs
sub
fcoml
iret
sbb
mov
jmp
mov
sub
rcr
into
imul
push
or
mov
mov
xchg
les
xor
sub
fwait
aad
addr16
inc
adc
popa
bound
pop
test
add
mov
mov
mov
pop
xor
call
imul
scas
out
jmp
xchg
ja
aad
mov
je
notl
mov
fldl2e
inc
mov
and
xor
ds
rcr
rcrb
outsl
dec
je
mov
push
out
sarb
push
loop
mov
pop
jp
dec
jecxz
lods
movsb
push
into
insb
testb
cmpsb
push
mov
int3
fistpl
repz
fsubrs
incb
sar
add
int
movsb
mov
mov
fwait
sbb
mov
mov
arpl
js
pop
ss
mov
inc
cmp
aad
loop
sub
stos
cmp
fcomp
iret
mov
pop
push
ror
push
pop
jle
stos
or
aad
cmp
push
shll
ret
or
mov
adcl
mov
ret
arpl
lret
negb
mov
and
adc
jg
fists
lods
sbb
mov
les
mov
aaa
in
xchg
dec
mov
imul
les
xchg
mov
outsb
adc
imul
outsl
push
xor
dec
inc
mov
adc
cmp
push
sub
dec
pop
repz
pop
xchg
sahf
cmp
lods
rcll
cmp
shl
cltd
inc
out
or
xor
scas
fldcw
fsubrs
inc
fisttpll
test
mov
lods
imulb
xchg
out
sub
mov
xor
sbb
xchg
xchg
and
jb
push
and
ret
scas
movsb
daa
dec
add
add
add
cmp
and
fcompl
jle
inc
sub
lods
scas
xchg
pop
xchg
mov
dec
loop
lret
xchg
call
push
add
fnstsw
sub
scas
and
push
add
jae
and
and
mov
loope
xlat
sti
aad
cli
and
xchg
int
add
and
jb
fcmovnb
fdivs
ds
fnstenv
cwtl
mov
cwtl
add
xor
adc
and
dec
sbb
dec
mov
pop
cmp
mov
mov
mov
imul
xchg
or
dec
hlt
or
int3
jge
notl
xchg
test
test
rorl
sub
adc
sahf
xor
movsl
sub
insl
push
mov
js
in
xchg
xchg
ret
insb
xor
out
nop
adc
pop
mov
sbb
clc
cmpsb
in
pop
insb
and
jns
fildl
mov
hlt
int3
das
dec
push
mov
fisubs
int3
fisttps
sbb
adc
fbstp
push
test
shlb
dec
xchg
mov
sbbb
pusha
add
dec
inc
in
aad
in
xchg
loop,pt
mov
sbb
mov
pushf
call
cltd
fwait
iret
jo
sahf
and
mov
pop
xorl
out
aad
or
and
mov
outsb
pop
xor
in
xor
dec
in
mov
rorb
sbb
daa
scas
lcall
xor
xchg
pop
dec
sbb
jne
lahf
cmpsb
lcall
enter
adc
or
jne
ret
adc
cmp
filds
adc
cmpsb
or
test
xor
xchg
add
mov
cli
sub
jle
pop
jl
cwtl
xor
cltd
imul
cmpsb
aaa
stos
imul
inc
testb
and
shll
adc
popw
cmp
lret
insl
in
clc
hlt
xchg
dec
in
push
push
cmpsb
mov
loop
add
mov
lret
mov
addb
pop
xchg
fimuls
in
dec
mov
jne
xchg
insb
fldpi
adcb
jl
repnz
test
or
in
fisttps
popa
jecxz
push
inc
and
xor
xchg
mov
pop
test
in
pop
repnz
xchg
xlat
rorl
in
sub
cmp
mov
dec
cmc
mov
jmp
mov
shr
aad
lahf
sub
jo
aam
xchg
xor
jge
pusha
scas
xchg
ret
or
xor
rcrl
mov
jne
dec
sub
in
imul
cmovno
cmp
push
outsl
int3
loopne
pop
jnp
divps
pushf
call
enter
loop
pushf
lret
mov
sub
out
lods
sbb
out
cmp
cltd
mov
inc
ss
mov
ljmp
push
aaa
nop
sub
mov
sbb
movsl
or
lds
int3
pop
dec
mov
sbb
or
dec
push
std
xchg
cltd
aad
inc
lods
jge
mov
mov
cmp
fwait
dec
js
mov
aam
xlat
or
cmp
and
pop
sbbl
iret
jg
stos
push
jnp
dec
daa
pushl
xlat
dec
sbb
sub
push
std
push
mov
dec
mov
cld
js
adc
xchg
mov
jecxz
out
xchg
mov
out
int3
mov
clc
cmp
sbb
fisubl
fildl
js
les
xlat
dec
pop
inc
insl
js
lds
push
xchg
popa
mov
and
xchg
dec
out
add
sub
pusha
cmp
xor
jp
fisttpl
out
and
lcall
lods
mull
mov
out
push
xchg
mov
push
out
jno
je
clc
rcll
shll
or
and
add
cli
jp
mov
push
test
test
inc
iret
mov
cmpsb
xchg
xchg
mov
out
std
mov
or
mov
in
fstps
jmp
xor
imul
push
jp
out
xor
fs
insb
movb
nop
es
dec
mov
xor
xor
not
xor
or
pop
shl
jno
xchg
or
sub
mov
rolb
loopne
jecxz
rcll
xor
mov
loopne
fwait
cmp
and
cmp
sbb
inc
iret
nop
sti
movsb
jbe
or
icebp
mov
cmc
mov
dec
push
movsb
fwait
stos
jl
andb
mov
xchg
into
das
push
pop
lods
into
pop
push
fsubrl
pusha
xchg
in
fwait
jo
test
out
adc
subl
dec
push
int3
xchg
xchg
daa
xchg
push
dec
cmc
aaa
pop
call
out
ljmp
xor
daa
add
pop
aad
jo
push
sahf
or
dec
push
out
cmp
bound
sub
cmp
mov
sti
xor
lahf
and
adc
filds
and
push
cmpsb
jmp
add
add
mul
or
jg
xor
pop
fldenv
cltd
lods
cs
mov
fs
or
lcall
mov
mov
lcall
or
cwtl
or
loopne
xor
out
xchg
clc
xlat
dec
push
fidivrl
dec
jecxz
mov
pop
das
mov
and
ja
test
xchg
int
subb
sbb
mov
adc
into
xchg
xchg
cmpsb
lods
mov
dec
jl
xchg
hlt
movl
mov
mov
jno
mov
dec
mov
loop
cwtl
aas
inc
xlat
and
or
push
jle
lods
cmp
and
cmp
shl
mov
arpl
adc
jp
jg
lea
cmp
jge
out
js
push
ret
mov
mov
cltd
xor
in
cmp
or
jnp
and
in
cmp
test
addr16
push
or
fcompl
fldcw
and
sbb
inc
mull
mov
and
and
mov
popa
dec
popf
int
into
dec
lea
imul
lret
inc
mov
arpl
stos
dec
ds
stos
inc
add
xchg
fsubl
aad
ljmp
or
dec
inc
jmp
inc
pop
xchg
push
bnd
call
jl
in
aam
andl
sub
push
aam
jmp
inc
out
fwait
pop
pop
inc
xor
cmpsl
lock
adc
dec
subl
jl
jg
nop
lahf
adc
or
xchg
xor
push
mov
xchg
xorb
stos
sub
sti
cmc
nop
test
insl
fstpt
mov
frstor
les
lods
lock
in
pop
lahf
jno
fsts
sarb
out
mov
shll
repnz
in
jmp
mov
sbb
sti
and
pop
jno
or
shll
inc
stos
xlat
push
enter
inc
fstpl
sub
imul
cmp
divb
pop
imul
rorl
aas
pushf
xor
cli
or
pop
rorl
jp
sbb
pop
mov
jb
xchg
xchg
sub
fidivl
and
mov
sbb
mov
push
fbstp
push
rorl
sbb
out
dec
in
fiadds
jae
pop
jns
adc
jp
cs
xchg
mov
ja
jo
mov
call
xor
pushf
sbb
and
xchg
popa
jl
test
cmp
add
push
aam
xor
rolb
pop
mov
in
xor
in
out
ljmp
data16
enter
lcall
push
add
out
xchg
cwtl
push
mov
dec
or
sbb
mov
push
inc
jl
and
sbb
pop
loope
inc
inc
test
adc
stc
lahf
and
stc
push
push
xor
cwtl
xchg
add
jae
ret
sub
sahf
mov
dec
bound
ret
mov
jno
daa
push
imul
loop
adc
lcall
mov
bound
dec
cmp
pop
pop
cmp
shll
add
inc
jle
xlat
cs
data16
movsl
lea
ret
dec
xchg
test
cwtl
popf
jnp
push
lods
xchg
fidivrl
and
ss
mov
lock
int3
lahf
test
call
lret
dec
loop
sub
mov
cmp
fwait
lods
cmpsb
iret
ljmp
cmpsb
dec
mov
mulb
or
jae
sbb
push
ja
adc
cwtl
or
cmpsl
lret
cmpsb
ljmp
ja
pop
mov
loop
mov
pop
in
adc
jle
mov
cmp
or
sub
bound
xchg
jecxz
stos
int
test
iret
add
add
je
mov
jg
in
insl
jg
sub
call
mov
jo
mov
cmpl
movsl
in
cmp
lock
cmp
pop
add
xor
push
arpl
jbe
xlat
enter
insl
inc
out
insb
popf
in
gs
popa
lret
mov
insl
pop
dec
nop
mov
xchg
push
aam
xchg
or
xchg
leave
ljmp
sub
mov
std
pop
xchg
rcrb
or
dec
sub
xchg
pop
inc
cs
ja
mov
and
popl
std
imul
icebp
test
sbb
pop
in
scas
and
stos
scas
push
dec
nop
xor
and
mov
xchg
push
sahf
dec
mov
iret
fstl
es
dec
cltd
mov
pushf
dec
mov
ljmp
repz
roll
loop
out
push
repnz
out
inc
or
mov
aad
push
fsubr
or
fwait
inc
arpl
xor
scas
mov
addr16
je
ret
sub
mov
ja
int3
es
mov
push
mov
outsl
adc
push
adc
scas
mov
lods
mov
cli
pop
repnz
sahf
ds
subb
or
mov
mull
xchg
add
inc
das
rol
push
add
sti
fwait
dec
insl
adc
pusha
pop
adc
pop
out
lds
and
fcomps
inc
inc
icebp
mov
daa
fdivrs
push
js
fisttpl
inc
cmp
shlb
xor
les
mov
cmovp
mov
in
aaa
cmpsl
rorl
aas
mov
inc
ret
adc
inc
add
mov
sbb
cmp
adc
mov
push
imull
out
dec
and
jo
movsl
test
pushf
roll
lods
mov
jns
fidivl
mov
test
fsubs
fsubrl
mov
sahf
bound
ret
out
sub
loopne
mov
out
lock
cli
ss
push
loop
cltd
add
loope
stos
lahf
jbe
test
add
jge
sbb
add
pusha
jge
dec
mov
les
cmpsb
rcll
xorb
mov
jp
push
pop
push
add
cltd
inc
lods
inc
dec
jbe
mov
es
jge
fists
rorl
test
and
lods
addb
iret
cmc
int3
pop
lret
or
nop
loopne
mov
inc
fadd
lea
orb
and
loopne
into
sahf
divb
pop
mov
inc
xchg
loopne
popa
loop
in
cmpl
fsubrs
pop
dec
mov
xchg
ror
dec
les
subb
cltd
xchg
cmp
add
jbe
mov
cltd
mov
test
pushl
mov
gs
cmp
xchg
pop
mov
cmp
push
orl
fisttpl
jecxz
test
mov
xchg
dec
fwait
nop
mov
cli
in
jo
push
lods
jl
add
cmp
lahf
loop
fwait
pop
mov
push
movsl
mov
jmp
fcmovb
negb
loopne
lods
sbb
loopne
push
push
int
rcrb
pop
and
enter
popf
inc
mov
repz
sub
add
aam
aaa
loop
jmp
cwtl
rcll
arpl
mov
or
into
xchg
mov
les
mov
push
iret
daa
xchg
and
mulb
pop
es
mov
pop
mov
mov
and
cmp
int
jno
xchg
fs
or
xor
jno
aam
jl
test
lea
in
fstl
inc
fsubrs
add
push
jnp
aad
enter
outsl
dec
inc
cmp
idivb
jne
rcr
imul
and
test
xchg
test
push
cmpsb
jns
cmp
outsb
shlb
call
adc
out
lgs
and
les
std
mov
out
add
mov
push
enter
sbb
insl
popa
sub
fstpt
loopne
jecxz
rclb
mov
xchg
push
pmaxub
jno
dec
xchg
scas
cmpsl
mov
int3
roll
xlat
shlb
mov
jne
loopne
jo
or
jecxz
sub
pop
outsb
push
loopne
mov
jp
mov
clc
popf
loopne
or
jnp
cld
inc
mov
adc
xchg
fildll
push
fists
jmp
repz
lods
pop
and
in
fadd
jmp
subb
jno
int
lret
push
insb
push
mov
subl
cmp
push
sbb
mul
imul
push
inc
inc
lahf
bound
adc
xchg
aas
clc
in
pop
scas
cmpsl
shrl
pop
pusha
scas
ljmp
mov
fistl
punpckldq
in
test
push
outsl
daa
sub
jno
out
jl
mov
stc
fnstsw
addr16
push
push
pop
mov
mov
pop
subb
inc
dec
movsl
gs
testl
add
mov
shr
mov
jge
and
call
xchg
add
loop
sbb
mov
scas
push
out
mov
adc
outsb
sub
cltd
fsubs
insl
out
lods
aas
imul
test
mov
shr
inc
sub
lcall
and
div
adc
dec
cmp
lods
insb
loop
sbb
shlb
lahf
in
cmpsl
fwait
mov
cmp
mov
mov
mov
into
xor
pop
mov
xchg
mov
sbb
xor
movsl
sbb
ss
repz
sbb
sub
add
addl
mov
mov
pop
outsl
frstor
cmp
mov
lahf
out
jnp
cmc
fs
jno
fcoml
fmull
out
sbb
inc
xor
scas
repz
fstpt
cld
or
mov
scas
push
xchg
push
in
pop
cwtl
mov
les
in
pop
pop
popa
lahf
ret
sbb
sbb
notb
fisttpl
jns
das
out
lock
sbb
and
mov
mov
dec
rorb
mov
cltd
inc
jp
xor
aam
lock
xchg
ds
xchg
pusha
stos
mov
sarl
cmp
sti
sub
cmp
shl
aas
dec
sbbb
in
mov
leave
sbb
sbb
andl
fxch
stc
mov
mov
mov
outsb
xchg
mov
aas
gs
dec
in
cli
fldenv
aaa
mov
mov
xor
dec
sbb
dec
inc
aas
cmpsb
insl
clc
and
test
in
mov
sub
push
inc
je
mov
push
xchg
pushf
add
cmp
into
jecxz
sti
jmp
das
mov
adc
jns
popf
pop
push
pop
jmp
xchg
rcrb
xchg
mov
fistps
fabs
push
filds
push
lahf
lret
xor
into
mov
cld
pop
mov
cmpsl
aad
push
outsb
xchg
mov
xchg
scas
aas
loopne
fs
out
mov
dec
cli
mov
sti
adc
mov
rcll
inc
or
fldl
add
mov
pop
add
mov
jecxz
shll
stc
adc
ret
les
push
sti
andb
pop
mov
ret
push
adc
fwait
inc
xchg
inc
rclb
lods
lock
rcrb
mov
or
mov
push
inc
push
orb
adcl
add
sub
ljmp
lods
jg
mov
mov
sub
push
xchg
push
insb
in
push
cmp
inc
fwait
in
lods
repz
or
ljmp
dec
jnp
sti
jl
imul
fldt
pop
int
fstpt
or
xchg
jb
rcr
push
cmp
cmpsb
push
and
insb
inc
in
addr16
adc
shl
inc
jmp
push
jmp
sbb
int3
jp
inc
in
sbb
repnz
mov
outsb
jmp
jne
dec
sub
sub
push
in
into
xor
mov
enter
mov
shlb
add
sbb
lods
inc
out
rcr
jge
xchg
dec
jnp
dec
push
jns
fs
jns
pop
pop
pop
xchg
cmp
push
add
data16
adc
mov
daa
test
jp
dec
xor
mov
cmc
sar
shrb
dec
or
jae
adc
add
push
ja
dec
popf
cmp
push
sub
xchg
or
repnz
sub
cmp
or
sbb
je
daa
and
and
xchg
adc
xchg
sbb
cmp
mov
push
cmp
sti
inc
and
out
aad
push
mov
and
test
movsb
jae
mov
ret
xor
xor
imul
out
lock
icebp
adc
aam
pop
mov
lds
xchg
push
leave
cltd
outsl
in
pop
gs
cmpsl
cmp
sub
and
scas
jnp
dec
pushf
xchg
adc
jno
mov
into
hlt
mov
push
bound
add
inc
xor
repz
dec
xchg
adc
test
icebp
push
movl
out
testb
out
sub
xor
dec
dec
mov
imul
stos
cmc
lds
fcompl
add
in
insl
sbb
push
rorl
aam
ljmp
lock
sbbb
imul
lret
pop
icebp
push
mov
sbb
push
repnz
adc
xchg
jl
adc
data16
jg
or
mov
sbb
sbb
mov
pop
ret
sahf
push
stos
popf
imul
insb
daa
test
fdivs
jg
jb
lock
movsl
insl
icebp
inc
es
cltd
inc
dec
cmp
push
aam
out
lods
inc
ljmp
das
out
push
popa
lods
add
ljmp
call
rclb
aas
movsl
jecxz
ja
add
cmc
aad
imul
xchg
push
pop
pop
rcl
je
scas
sbb
aad
hlt
mov
into
xchg
ljmp
xor
repz
and
or
daa
push
mov
sbb
stos
data16
or
pop
jnp
pop
test
out
repz
jmp
pop
mov
cld
add
sbb
in
add
push
scas
pandn
jl
and
fsubrs
cmp
push
les
jmp
fs
jno
sbb
in
mulps
mov
js
das
mov
mov
inc
mov
cmp
jo
jmp
int3
jns
aaa
repnz
jae
pop
orb
and
rolb
leave
and
push
jmp
fisubrs
push
cld
mov
sbb
popa
inc
mov
sub
sub
push
add
cltd
or
add
dec
xor
jo
lods
adc
ret
jbe
dec
jecxz
inc
mov
fcoml
sbb
mov
pop
es
cmpb
mov
push
shrb
clc
jge
dec
sub
mov
mov
insb
inc
push
mov
mov
testl
popf
mov
mov
popf
xor
icebp
nop
pop
fldln2
mov
popa
cmpsb
dec
mov
dec
ja
inc
or
iret
out
cli
clc
test
sub
out
add
push
mov
dec
mov
fidivl
cwtl
mov
dec
push
mov
int
lds
cmp
out
cmp
or
adc
cmc
mov
fisubl
mov
xchg
or
out
arpl
sub
jnp
loop
inc
popf
rorl
xchg
int3
cmc
jno
sahf
loopne
shlb
loopne
aaa
jns
mov
stc
out
addb
mov
pop
adc
sbb
or
push
movsl
add
inc
inc
fwait
fwait
cmp
ss
jns
sbb
xchg
lahf
jo
imul
mov
das
xor
adcb
fsubl
frstor
std
mov
testb
negb
insb
out
movsl
into
inc
or
mov
call
pop
imul
repnz
lahf
lcall
xchg
xor
stos
pop
add
dec
fisubl
dec
xor
mov
and
xchg
sti
dec
jmp
fimull
or
adc
cmp
sbb
push
nop
jecxz
xchg
pusha
mov
jne
sar
adc
mov
pop
inc
mov
push
xor
test
lret
rol
out
sarb
out
pop
or
call
cmp
out
cmpsb
test
mov
fcompl
mov
out
fcmovnb
out
or
mov
mov
sub
mov
cmpsb
aad
outsl
hlt
dec
in
aad
or
xor
fiaddl
int
sub
das
push
loopne
push
faddl
or
les
ljmp
orb
js
adc
add
xor
test
in
mov
daa
jno
insl
jns
add
and
imulb
add
add
sub
call
adc
and
xchg
outsl
imul
sub
pop
inc
lret
les
es
xlat
jne
adc
fwait
aam
loope,pt
and
add
sti
arpl
inc
mov
or
scas
mov
mov
mov
xor
out
inc
jl
adc
repnz
div
loope
xor
jne
imul
loopne
jp
roll
popf
movsb
orb
jmp
stos
test
jns
cmp
mov
fs
sbb
lcall
cmp
das
lea
add
lods
jl
pop
jae
mov
shll
jl,pt
addr16
jge
cmp
lods
add
lahf
test
adc
sarl
xchg
out
mov
cmp
movsb
ss
insb
xchg
cmp
lcall
movb
mov
movsl
push
pop
adc
and
ja,pt
jnp
arpl
sarb
or
jle
insb
in
test
inc
jno
or
ds
adc
ds
push
or
adc
jle
push
jne
inc
jne
mov
and
pusha
xchg
push
les
xlat
adc
mov
cs
mov
dec
scas
insb
mov
test
or
scas
sahf
bound
add
lea
jb
inc
or
xor
add
cs
jle
xlat
cmp
inc
enter
out
into
xlat
xchg
jno
data16
or
mov
sub
arpl
pop
stos
cmpsl
stc
out
sub
or
dec
call
call
mov
or
aam
inc
push
int
dec
push
sub
inc
insb
aam
cmpsb
fstpl
clc
cwtl
mov
aam
sub
push
dec
xchg
cmp
and
lret
jmp
cwtl
clc
or
fistps
std
pop
dec
and
cmp
cmc
mov
fwait
push
mov
cmp
xchg
jg
push
repnz
in
sbb
dec
dec
rorb
mov
mov
dec
inc
jb
xchg
sbb
test
nop
or
lock
lods
jmp
and
push
mov
sub
test
insb
outsl
inc
lds
jle
jecxz
nop
add
add
jmp
mov
push
dec
pop
pop
sbb
mov
jno
cltd
mov
push
mov
mov
pop
xor
je
cmp
ficoml
aaa
push
inc
lods
fidivrs
scas
stos
jecxz
icebp
xchg
lds
cld
in
pop
jge
jb
aas
xor
cmpsl
adc
aaa
faddl
xchg
movsl
lret
ds
nop
cs
push
mov
jbe
clc
xor
movsl
add
cmp
jb
out
push
inc
add
dec
into
xchg
sbb
test
jle
sub
cwtl
mov
adc
jnp
and
in
les
mov
addl
leave
aam
mov
loop
mov
out
jge
subb
rorl
outsl
xor
inc
repz
inc
lret
subb
inc
cmpsl
mov
stc
mov
daa
sbb
mov
aaa
loopne
or
push
add
stos
ficompl
pop
inc
lods
mov
hlt
mov
movups
roll
loope
movsb
ljmp
sbb
mov
dec
mov
mov
sti
xor
subl
les
fcoml
addr16
bnd
jno
call
pop
mov
movsb
jp
stos
push
pop
lds
inc
push
ss
add
into
fimull
mov
pop
inc
pop
out
adc
xchg
data16
enter
jecxz
movsl
ret
xchg
or
mov
pop
ja
loopne
and
mov
popa
xchg
pop
ror
sub
xor
icebp
dec
imul
mov
adc
or
adc
push
xchg
fistl
lds
out
xchg
iret
xchg
test
repnz
mov
push
clc
test
pop
push
je
icebp
hlt
inc
inc
adc
aaa
out
cli
sbb
or
sbb
pushw
and
push
inc
or
push
mov
bswap
rclb
ret
insb
daa
jecxz
js
xchg
andb
clc
push
inc
dec
inc
das
into
xchg
mov
jae
inc
outsl
push
or
inc
inc
pop
test
jne
jbe
mov
sahf
test
mov
insl
cmp
pusha
sbb
jb
xchg
cli
out
cmpsl
mov
imul
pop
js
cmp
fldt
jns
mov
outsl
mov
je
andb
cmpsl
mov
sar
sbb
mov
cli
es
xchg
push
clc
scas
movb
jmp
or
imul
cmp
dec
cmp
les
arpl
pusha
sqrtss
out
loope
mov
push
xor
rcrb
aad
jle
or
push
pop
mov
xchg
or
cmp
repnz
inc
xor
movb
shl
xor
push
lahf
mov
lahf
pop
add
add
inc
jl
sti
mov
lahf
add
inc
idiv
and
mov
inc
shll
in
push
leave
or
adc
in
push
pop
xchg
call
pop
js
lret
test
hlt
mov
out
xor
cmp
xchg
mov
push
fadds
or
jno
aas
mov
stos
push
in
repz
sbb
xchg
xor
mov
xchg
adc
and
adc
cmpsl
push
add
jo
mov
add
and
mov
jnp
bound
cld
dec
dec
daa
add
xchg
dec
dec
andl
popf
hlt
sahf
fld
mov
lret
pushw
xor
mov
fdivs
sahf
psraw
cmp
jg
movsl
mov
scas
in
push
pop
cld
fldcw
adc
sahf
jo
and
popa
ja
mov
push
fisttps
inc
test
int
mov
xchg
mov
xchg
adc
lcall
cmpsl
jle
xchg
stos
xchg
into
push
sub
cmp
dec
push
test
mov
inc
add
pusha
bound
sbb
rorl
repz
out
mov
and
xor
enter
mov
mov
jne
sti
sub
fnstcw
shl
xchg
ficoml
jmp
jge
bound
cmp
rol
or
rolb
das
ljmp
call
jp
and
dec
addr16
inc
add
add
or
hlt
iret
insb
sbb
inc
inc
orb
sbbl
jns
mov
clc
push
or
icebp
addb
mov
push
addr16
cwtl
sub
cmp
mov
xchg
sbb
or
lock
scas
insb
mov
arpl
jne
popa
pop
xlat
push
push
jnp
rorl
mov
mov
pop
stos
test
dec
lahf
clc
hlt
rcrb
mov
add
mov
imul
sbb
cmp
xor
xor
movsl
mov
add
mov
pop
adc
movsl
fnstcw
fnop
and
or
and
pop
int
ret
add
ds
fidivs
stc
jne
popf
fnstsw
repz
push
cmp
jl
hlt
mov
mov
test
sub
push
orl
and
pop
push
test
jns
jne
cltd
popa
jecxz
mov
add
adc
jmp
outsl
xchg
inc
vcomisd
xor
pop
mov
or
adc
and
push
test
jae
mov
lret
inc
add
sbb
fs
mov
daa
bound
movl
push
cmc
inc
add
push
xchg
jbe
xor
push
jb
imul
lret
pop
pop
cs
inc
push
mov
rcll
jne
loope
xor
jnp
enter
xor
loope
xor
push
cmpsb
rcll
scas
xor
mov
xchg
out
lret
jmp
jmp
loope
pusha
int3
adc
jge
pop
or
sbb
in
dec
push
fisttps
cld
xchg
mov
xchg
cli
stc
mov
or
lret
push
sbb
sbb
out
addb
std
xlat
adc
mov
iret
or
outsb
xchg
mov
jl,pn
fildl
adc
in
and
inc
enter
imul
faddl
ljmp
inc
jb
fiadds
fisubl
test
cmp
repnz
push
xchg
cwtl
jge
pop
sbb
sub
pop
vpcmpgtb
add
cmpsl
std
mov
xchg
dec
das
sbb
mov
shll
mov
scas
mov
test
aaa
call
scas
add
repz
sub
nop
repnz
mov
loope
hlt
sarl
inc
xchg
shll
test
ffree
adc
ficoms
push
mov
push
jp
shl
lahf
insl
sub
cli
into
out
sti
mov
int
xor
jae
jae
dec
and
rolb
mov
mov
loop
mov
cmpsb
sub
lret
andl
mov
mov
scas
sub
jp
sub
mov
dec
jns
dec
pop
popf
mov
push
mov
sbb
out
mov
inc
inc
jg
dec
sub
cmpsl
pop
outsb
ja
fbstp
push
sub
push
or
xor
adcb
pop
cmp
fmuls
loope
mov
mov
ds
pop
aaa
iret
daa
out
iret
pushf
sbb
leave
dec
cmp
add
ds
cmp
out
sbb
push
bound
lahf
loopew
adc
pusha
dec
repz
cmpsb
xor
or
xor
mov
ret
call
dec
xor
rclb
add
fsts
movsl
sub
sbb
lret
cs
xchg
cmp
mov
pop
push
add
sub
mov
pop
pop
fistpll
dec
fs
add
add
adc
push
jbe
negl
fucomp
je
xor
mov
jg
test
loopne
dec
adc
popf
sbb
lret
rorl
sub
push
and
jne
and
sub
pop
popa
pop
movsl
cmp
sbb
adc
mov
out
mov
cmc
jae
add
lcall
stos
push
cmp
pop
push
mov
jl
mov
cmp
xchg
bound
xor
jae
cmp
hlt
js
sbb
sbb
dec
fldt
ljmp
aaa
or
cmova
dec
loop
mov
inc
mov
xorb
jg
mov
push
pop
cmpsb
loope
mov
sub
mov
sti
or
pop
push
js
repnz
inc
mov
push
inc
fadd
es
mov
cmp
movb
pop
sbb
cmpsl
sbb
adc
adc
push
bt
cmp
sub
fnsave
imul
xchg
es
sti
jae
fisubl
jbe
inc
pop
add
lds
cmp
jnp
inc
jo
sbb
scas
mov
cli
repnz
adc
sti
sub
adc
lods
mov
aas
test
hlt
adc
shlb
sarb
dec
mov
out
sub
test
push
bound
test
sbb
or
push
mov
rcrl
sahf
jg
cmpsl
cmpsl
jp
fcmovu
dec
imul
jmp
sub
ds
fcmovnbe
out
adc
sub
lods
and
mov
inc
je
sbbb
inc
and
int
mov
dec
lcall
ret
popf
cmp
out
imul
jmp
mov
fisttpll
imul
lret
aad
jle
mov
push
fbstp
ds
jl
jmp
lret
lahf
jbe
jbe
lds
xor
mov
mov
mov
pop
andl
sbb
lock
ds
int3
push
insl
jbe
inc
xlat
jb
add
dec
cmp
in
adc
subb
push
pop
mov
in
jp
jge
fnstcw
cmc
push
jge
pop
shrl
lret
mov
loopne
jmp
test
mov
jae
mov
lea
leave
out
pop
inc
jno
mov
test
hlt
sbb
out
cmc
jbe
sub
sahf
test
mov
jae
lods
mov
bound
cmc
fidivrl
shl
push
inc
fisubs
mov
bound
cmp
outsl
negl
xchg
insl
popf
mov
mov
aas
cmpl
rcrl
roll
fdivs
cmp
fadd
cmp
shrb
mov
inc
mov
mov
lahf
test
push
addl
pushf
xor
out
cmc
shl
cmpsl
stc
add
mov
ret
cmpl
andb
or
lds
xchg
dec
and
and
add
mov
roll
test
add
lret
or
mov
jp
mov
sbb
in
adc
or
or
call
out
outsl
sahf
mov
xor
jmp
cmp
mov
addr16
mov
mov
sub
jne
ret
aad
xor
out
mov
or
push
inc
repz
aaa
sub
aas
leave
ret
add
test
ds
xor
arpl
inc
mov
cld
mov
sbb
insl
mov
test
xchg
push
cmp
jecxz
xchg
inc
fnstcw
out
jmp
fsubl
xchg
sti
jae
popf
mov
sbb
push
and
out
mov
dec
and
movsl
pop
insl
xchg
lock
jge
leave
inc
inc
leave
hlt
xor
lea
add
xchg
insb
stos
cmp
scas
cmp
and
push
sbb
add
add
aas
cmc
test
out
pushf
xor
cld
push
ja
repnz
mov
sub
or
out
pushf
lods
cld
mov
mov
adc
mov
push
daa
xor
mov
lahf
mov
jae
int
sbb
push
sahf
je
lods
xlat
pop
cmpsb
xchg
mov
pop
add
xchg
sar
insl
daa
jns
iret
ret
mov
daa
add
xlat
inc
ret
popa
ja
cmpsb
cmp
sahf
daa
test
enter
and
cmpsl
stc
cmp
fsubl
mov
clc
movb
pop
or
into
clc
imul
cmp
ret
jmp
pop
shl
call
pushf
clc
inc
add
and
inc
jnp
arpl
stc
aaa
inc
sbb
mov
pop
mov
ja
mov
int3
add
insl
mov
lret
add
imul
xor
and
shll
and
icebp
dec
imul
data16
ljmp
sbb
lods
aas
aaa
fidivrs
aas
sub
dec
inc
negb
sti
getsec
aad
sahf
push
mov
jne
sarb
addr16
cmc
bound
sbb
insb
push
leave
mov
sub
jmp
add
or
imul
cmp
or
or
mov
mov
iret
cltd
test
dec
in
push
jle
or
adc
sbb
push
repnz
fstpt
idivl
or
adc
jb
xlat
fs
daa
test
outsb
pushf
push
sub
mov
loopne
nop
lcall
jbe
rcll
add
add
addl
aaa
adc
sub
dec
sarb
ljmp
les
sbb
das
lods
dec
adc
or
jns
popf
sbb
loope
pop
push
xchg
jle
int
arpl
add
ret
dec
lea
gs
imul
push
scas
cmp
push
push
xchg
or
xor
aad
and
es
lret
xchg
jb
insb
or
in
mov
mov
bound
aad
xchg
lret
pop
pushf
pop
cs
nop
pop
dec
adc
pop
mov
cmpsl
xchg
cmp
ficomps
inc
adc
outsl
pop
or
lds
lea
shr
jmp
shlb
mov
pop
ja
es
aam
jbe
mov
or
insb
sub
shl
shll
sbb
add
sub
sbb
adc
ljmp
and
xor
mov
inc
inc
sbb
lods
test
cmp
adc
pushf
cld
fldl
dec
adcl
mov
pop
xchg
cwtl
cld
cmp
sub
shr
nop
pop
xorl
stc
push
jb
into
aad
jbe
mov
lcall
mov
fistpl
cltd
sti
xchg
fcoms
out
addr16
dec
sbb
and
into
aaa
shlw
sbb
bound
lds
mov
das
dec
leave
or
push
loopne
mov
pop
jl
cltd
ja
mov
aam
ljmp
rorb
lret
and
pop
decl
cmpsb
mov
jno
out
push
cmpsb
sahf
inc
fcoml
inc
in
jge
push
sbb
mov
add
sub
mov
ds
aaa
jae
cmp
add
jne
mov
and
ljmp
pushf
sub
inc
aas
or
daa
stos
es
mov
push
inc
cltd
inc
inc
movsl
or
xchg
mov
sbb
sub
sbb
leave
and
jno
push
pop
outsb
insb
testl
in
add
jns
in
mov
imul
jmp
jl
cmp
push
inc
pushf
mov
mov
ljmp
and
cmc
cmp
mov
push
xchg
and
sub
repz
rorl
cmp
das
or
stos
push
and
or
lods
sahf
cli
sub
aad
or
lock
xor
div
xchg
add
mov
pop
lcall
push
imul
pop
sub
bound
jnp
pop
xchg
pusha
std
jmp
lock
xor
push
dec
sub
shlb
cmc
jno
dec
cmp
call
sarl
fbld
repz
mov
shlb
js
mov
xchg
pop
pop
pop
ja
rorb
inc
mov
sbb
fwait
push
sub
sahf
icebp
adc
add
or
out
mov
daa
adc
xor
mov
out
ds
lcall
inc
sub
jo
inc
mov
mov
mov
lcall
inc
pop
xchg
xchg
mov
cltd
push
movsl
ss
push
sub
gs
push
jmp
inc
dec
mov
aaa
sub
loopne
and
mov
leave
dec
in
xchg
push
adc
inc
les
pop
in
fcompl
add
mov
and
icebp
sub
test
pushf
sub
mov
leave
negl
xchg
mov
ja
push
leave
dec
adc
ret
ret
imulb
enter
movsb
sub
add
jns
lcall
pop
popa
cli
dec
loopne
mov
jns
pop
lods
add
lret
push
push
sahf
aad
lock
sti
dec
int
cmp
adcb
out
lock
pop
out
fsincos
fldz
fidivl
mov
clc
int
loopne
lds
mov
fbld
lcall
gs
movl
test
inc
push
repz
mov
and
cli
push
or
std
call
fwait
stos
push
leave
adc
dec
test
jno
imul
mov
push
jle
sub
add
ljmp
lock
insl
cltd
aas
push
push
ret
sub
lahf
dec
mov
sub
cmc
pop
inc
and
sti
lods
ss
arpl
pop
or
js
sbb
loope
popa
scas
nop
into
and
mov
fdivrs
sbbl
add
mov
faddl
pusha
leave
insl
pusha
pop
ljmp
lret
mov
or
addl
shlb
jecxz
mov
pop
jmp
lds
movsb
adc
std
fcmovnb
pop
cwtd
sub
or
mov
ja
pop
je
jmp
cmpsl
jecxz
ret
enter
add
push
adc
or
mov
push
mov
int
pop
adc
xor
mov
pop
mov
rolb
popf
jmp
fidivrs
inc
push
dec
or
pop
jae
incl
jmp
loope
arpl
push
test
cltd
cmpsb
lock
jne
popf
sbb
and
out
lods
gs
adc
in
jo
jge
rol
inc
mov
xchg
popa
add
loopne
jl
pop
aad
dec
ss
icebp
inc
mov
popf
sti
fmulp
jb
xor
call
jle
mov
pop
jne
pop
in
scas
and
mov
jae
push
sar
cmp
mov
cmp
scas
in
out
inc
out
cmp
push
inc
inc
sbb
pop
sti
jbe
sbb
sbb
mov
out
jno
or
pop
xchg
xchg
pushf
pop
mov
sti
jmp
out
mov
cmp
mov
push
fdivrl
jmp
adc
push
rcll
in
loope
and
and
jmp
push
xchg
out
mov
adc
inc
pushl
test
push
shlb
pop
jecxz
icebp
repnz
xchg
jg
sub
push
mov
push
addb
xchg
mov
testb
ljmp
mov
fwait
push
ss
je
je
daa
mov
push
mov
fneni(8087
gs
jae
neg
fwait
xchg
enter
shrl
adc
and
nop
add
cmp
jmp
loope
insl
stos
iret
mov
pusha
jge
sbb
xchg
arpl
lods
ja
push
movsl
fsub
or
insb
xor
out
mov
sbb
dec
xchg
mov
inc
ret
mov
aas
and
repz
idivb
lods
jecxz
or
cwtl
sub
adc
cmpb
sarl
jmp
cmpsb
lds
mov
push
hlt
scas
stc
sub
jmp
in
loope
dec
cli
repnz
in
ja
stos
or
push
and
xor
hlt
call
je
mov
sub
xchg
xor
outsb
orb
or
rolb
ja
add
xchg
push
dec
fwait
pop
push
xchg
test
lret
test
push
mov
and
inc
cs
insl
outsl
push
adc
fisubrl
ret
dec
pop
popf
imul
cmpsb
aam
jns,pn
push
test
mov
and
rcrl
add
xchg
nop
or
aad
xchg
icebp
xchg
es
xor
repz
jg
out
cltd
lea
daa
push
js
and
in
sbb
loop
bound
jecxz
inc
pop
mov
sub
into
jle
out
xchg
out
mov
mov
xchg
mov
or
loope
push
mov
lcall
cmp
cwtl
mov
sti
push
add
sbb
dec
mov
sub
jl
icebp
mov
mov
mov
inc
push
jg
div
jno
loop
cltd
or
cs
inc
dec
xchg
add
mov
gs
in
fsts
xor
scas
cmpsb
jb
cmpsl
fucomp
je
test
jo
fsts
mov
hlt
je
movsl
xchg
adc
xor
subb
mov
adc
add
sub
scas
dec
ret
mov
cmc
adcl
mov
mov
lods
adc
movsl
cmp
push
das
pand
mov
push
dec
daa
les
xchg
js
lods
loope
mov
cmp
out
mov
pop
jl
frstor
pop
xchg
lea
in
cmp
inc
sub
dec
xchg
jle
mov
test
xchg
sub
loope
mov
cwtl
outsb
mov
cwtl
adc
adc
or
shr
lahf
xlat
xchg
or
ja
test
cmp
dec
lds
mov
pop
jno
lods
push
or
lret
mov
enter
xor
or
addr16
ljmp
push
cmp
test
int3
or
inc
xor
inc
add
sub
adc
sub
mov
jle
in
out
int
push
push
sahf
les
mov
repz
scas
addr16
push
int3
scas
dec
pop
xchg
aad
aam
call
xchg
cli
popf
fcompl
sbb
popa
pop
jl
int3
je
fsubp
pop
xor
mov
cmpsb
leave
xor
adc
loopne
bound
push
jb
in
inc
inc
das
push
imulb
lds
and
mov
inc
xchg
mov
mov
jo
testb
push
cltd
lret
sbb
cmp
jge
enter
rorb
cmpsb
push
add
hlt
add
xchg
lods
dec
cmc
add
inc
je
add
xchg
in
cs
mov
mov
in
in
aas
dec
dec
leave
out
or
sub
add
push
leave
loop
lods
dec
and
dec
test
call
iret
lahf
lret
repz
popf
jae
push
dec
loope
dec
push
mov
orb
mov
pop
and
aas
jp
iret
fnstsw
shlb
xor
lock
pop
jle
jl
pop
lock
pusha
sbb
and
dec
cmp
sbb
xchg
enter
lds
lock
push
cld
xchg
rorb
mov
js
xchg
cmp
push
pop
loop
into
mov
cmpb
enter
jnp
std
cmp
cmpb
inc
sbb
xor
fucomip
cmp
mov
orb
and
scas
pop
std
push
cmp
outsb
ljmp
cmpsl
jp
mov
ja
cmp
adc
cltd
cmp
leave
cmp
xorb
movsl
pop
and
mov
scas
add
push
sub
in
cmp
repnz
fldl
add
sub
cmp
inc
xchg
fisubs
push
sbb
push
and
lods
sub
cmp
ret
ficomps
ljmp
and
shrl
cmp
fadds
adc
lods
mov
sbb
mov
xchg
add
inc
lea
mov
xchg
adcb
cli
xchg
imul
repz
mov
in
cmp
jg
clc
pusha
xor
lret
push
pop
pop
lds
std
rcll
xor
fxch
test
inc
fistl
and
ja
pop
aaa
jae
iret
into
arpl
mov
jecxz
sbb
mov
xchg
xor
inc
jle
sbb
xchg
sbb
cwtl
fsubr
mov
imul
xor
movsb
or
imul
dec
xchg
scas
out
mov
sbb
mov
lcall
mov
mov
pop
jle
jno
xchg
aas
xchg
pop
in
push
add
mov
push
pop
xor
lods
mov
pop
lret
push
and
iret
xor
pop
hlt
insl
jnp
std
cmp
sahf
add
xchg
movsb
or
xchg
je
in
pop
xor
jnp
fldl
test
aaa
dec
jmp
jne
dec
movsl
xor
popa
cwtl
push
inc
push
rolb
mov
movsb
fsubrs
enter
aad
nop
test
repz
xchg
dec
or
insl
movsb
and
dec
cmpsb
inc
in
lret
mov
jno
les
jns
add
mov
push
lcall
dec
fcomps
repz
push
mov
punpckhdq
shlb
ja
mov
cmp
xchg
mov
mov
std
dec
out
or
mov
push
mov
push
mov
out
das
push
sar
push
mov
lcall
mov
mov
nop
out
inc
inc
xor
sbb
ljmp
add
adc
stos
dec
xchg
inc
mov
into
xor
imul
pop
lret
push
push
jge
inc
incl
jge
xlat
repnz
push
xchg
inc
jb
fbstp
lds
inc
inc
mov
lods
and
fwait
and
or
leave
loopne
repnz
in
fisubs
imul
sub
lret
sbb
loopne
lds
pop
pushf
push
dec
adc
shll
daa
push
shlb
inc
mov
mov
test
imul
scas
xchg
je
data16
inc
or
loope
popf
clc
pop
pop
lcall
movsl
repnz
test
cmp
lret
jl
inc
scas
inc
test
fcomps
mov
inc
xchg
in
aad
shrl
sub
outsb
mov
mov
xlat
out
mov
pop
loopne
jp
fidivs
leave
jg
adc
adc
jns
test
insb
imul
stos
cs
lds
sahf
or
cmc
xchg
icebp
inc
sbb
out
xor
fucomi
nop
andl
cmp
into
push
jae
xchg
jg
loopne
xor
pusha
add
push
popf
in
cltd
dec
xchg
adc
dec
cmpsb
in
popf
mov
cmc
push
scas
jbe
movsl
subl
outsb
ret
push
ret
mov
sbb
or
xor
in
lahf
sbb
xchg
jns
fistpll
mov
lea
fstl
sub
pop
lret
mov
adc
jno
sbb
dec
mov
mov
mov
push
cs
inc
adc
jmp
xorl
cmp
lahf
lcall
mov
pop
icebp
cmpl
jnp
fcmovnbe
push
scas
leave
and
mov
lock
mov
and
ret
cmc
pop
adc
pop
loope
out
stos
jno
stos
stos
loopne
add
or
daa
int
dec
flds
cmp
add
cmp
imul
lods
sbb
out
add
cmp
cwtl
imul
or
push
fwait
shlb
cld
mov
push
mov
movsb
mov
out
adc
dec
ss
js
gs
mov
mov
loope
lahf
jg
fldl
pop
lret
and
js
and
lea
push
cmpsl
xchg
and
mov
clc
inc
pop
mov
into
cwtl
jg
popa
je
out
sub
mov
imul
clc
pop
or
hlt
fxch
les
pop
mov
rclb
xor
mov
repz
call
popa
xchg
lahf
jge
js
dec
js
sub
mov
cli
pop
push
cli
daa
inc
jl
adc
rcr
mov
loope
xchg
mov
add
sahf
andb
in
cld
repz
xor
push
cmpsl
mov
shll
xor
repnz
cmpsb
add
xchg
push
ss
test
orl
loopne
lds
pop
mov
sub
test
adc
xchg
lock
std
roll
scas
add
dec
loope,pt
rol
add
mov
mov
enter
push
xor
adc
movsl
repz
push
jbe
push
pop
xchg
imul
mov
imul
and
aad
sti
jae
sub
dec
out
test
add
movsl
push
daa
adc
and
stc
lods
test
enter
negl
hlt
sarb
push
mov
loop
and
outsb
loope
inc
v4fmaddps
repnz
lcall
mov
sbb
adc
mov
inc
les
fsin
xor
dec
pop
push
or
stc
sbb
incl
les
cmp
xor
xor
cmp
fldt
and
iret
std
insl
sub
aas
xor
ss
ret
inc
or
add
ss
mov
inc
in
into
mov
mov
inc
push
fcoms
or
mov
mov
gs
jnp
jae
call
stc
inc
mov
imul
push
add
xor
inc
mov
or
aam
sbb
add
sahf
out
and
insl
in
or
mov
lods
inc
sbb
jl
cmp
xchg
cltd
enter
addr16
insb
movsb
add
es
push
out
sbb
hlt
and
jl
mov
and
cli
fldcw
sub
aaa
aad
enter
mov
enter
mov
mov
dec
mov
bound
push
arpl
jp
adc
pop
mov
out
jmp
jne
fildll
push
lock
jmp
jo
pushf
popf
jecxz
popf
data16
les
mov
dec
test
pop
cltd
fistpll
mov
shrl
psllw
xchg
jl
shlb
jl
pusha
test
call
xchg
jecxz
nop
dec
dec
jns
aaa
push
add
sbb
mov
pop
mov
in
add
mov
dec
lds
subb
shr
push
or
cmp
mov
jo
xchg
addr16
dec
frstor
xchg
in
lods
cmp
pusha
pop
mov
sub
fdivrs
scas
cmp
xorl
movsl
decb
stc
push
clc
lret
jb
scas
fldt
pushf
mov
pop
gs
mov
mov
mov
test
mov
outsb
push
pushf
push
das
sbb
imul
add
add
js
mov
cmp
shrl
mov
sub
scas
sarb
adc
ss
je
sub
stos
jnp
add
fisubl
mov
dec
in
push
in
aad
in
xor
aaa
cmp
fstl
push
lock
jmp
mov
xchg
lds
mov
shl
and
xor
into
in
jecxz
add
mov
shlb
insl
popf
xor
sbb
std
lods
inc
mov
jl
inc
dec
addr16
je
mov
out
sbb
fimuls
mov
shrb
push
les
lods
aad
test
jbe
sub
inc
or
push
sub
jae
scas
jge
adc
cmp
and
shr
jp
mov
dec
sbb
mov
movsl
jae
fwait
lods
stos
push
inc
scas
inc
jae,pn
je
jl
cmpb
loop
test
andl
pop
insb
ljmp
add
inc
rorl
popa
pop
jo
pop
push
xor
iret
jns
popf
dec
bound
movsb
jle
dec
inc
jno
les
and
lock
jge
fdivs
cmc
cmpl
xorb
lods
xchg
cmp
imul
pop
pop
xchg
mov
jmp
pop
inc
jl
pop
jge
mov
xchg
and
cmp
adc
mov
les
cwtl
ret
sub
jmp
jge
cltd
lret
test
jge
out
in
xchg
inc
adc
adcl
movsl
mov
xchg
mov
test
pop
add
das
ja
lods
hlt
mov
cmp
insl
aaa
mov
push
stos
mov
inc
stos
cmp
shrb
push
or
test
and
fld
add
sbb
stos
repz
xor
mov
pop
test
cld
mov
add
push
clc
fcmovne
pusha
test
dec
fisubrl
fbstp
dec
sbb
push
nop
mov
cmp
outsl
test
shl
xor
mov
int
jo
rcll
lds
or
in
sbb
push
test
daa
lock
mov
imul
lds
jp
xor
popa
or
jne
outsb
rcll
push
bnd
push
test
lds
push
mov
jo
jl
push
push
dec
jmp
jno
adc
jmp
aad
cmpsl
cld
cli
cli
inc
cltd
js
jl
pop
xorb
ret
and
insl
pusha
jle
in
dec
cli
sbb
xchg
xchg
adc
jae
xorl
scas
push
sbb
mov
pusha
bound
scas
jecxz
int3
aad
cld
push
js
inc
sub
ret
pop
loope
int3
sub
out
xchg
add
mov
push
add
lret
sti
adc
push
add
aam
lods
mov
jg
sub
mov
nop
std
mov
ret
gs
loopew
push
cmp
imul
imul
hlt
cmp
std
add
test
pushf
hlt
bound
jns
fs
xchg
push
pop
push
leave
fistl
mov
jp
push
dec
adc
jbe
in
or
test
inc
imul
addl
in
sbb
out
jg
outsb
xor
cmpsl
std
ljmp
mov
or
fdivs
outsb
xchg
mov
push
icebp
pop
push
inc
add
add
call
adc
inc
jno
lea
add
mov
rolb
jmp
stos
nop
dec
cld
data16
movsl
out
mov
or
lret
adc
dec
pop
aas
fisubrl
fdivr
fistps
mov
xor
in
fwait
dec
jmp
pop
add
mov
dec
push
addr16
pop
mov
mov
mov
rcrl
leave
mov
ret
push
popa
mov
subb
sub
repz
sbb
outsl
cld
inc
dec
inc
cmpl
mov
xor
fcomps
mov
dec
stos
int
and
cmpsb
mov
stos
shll
jbe
int3
ficoms
popa
divb
ret
and
gs
inc
into
fimull
cmp
xchg
in
insl
push
clc
je
imul
mov
fmull
push
mov
pushl
lea
pushf
lret
hlt
pop
push
xchg
cmp
cmpsl
popa
mov
loope
ja
subb
xor
out
cmp
lcall
fwait
cmp
lods
jb
adc
loope
rcr
fmul
je
lods
dec
pusha
mov
jle
fsubr
scas
notl
gs
jp
dec
xchg
mov
and
test
cmpsb
or
dec
jne
xor
fucomi
adc
addb
mov
jg
das
push
push
ss
into
or
popf
lods
fwait
xchg
add
in
jmp
and
fstps
in
rclb
lds
jl
sub
rcl
xlat
gs
push
dec
bound
or
mov
or
push
gs
dec
xchg
nop
fiadds
mov
xor
loope
sti
cmp
sti
jge
mov
movsl
adc
aaa
jns
inc
dec
fwait
and
xchg
add
push
add
loope
mov
adc
movsl
and
xchg
enter
mov
pop
rorl
frstor
inc
lock
jne
je
cltd
dec
mov
imul
cmc
jg
push
shrl
pop
out
sbb
add
mov
dec
rcrl
icebp
icebp
cmp
je
es
mov
jb
xchg
shr
dec
mov
cmp
and
js
pop
mov
ss
sti
push
pop
shrl
addr16
pop
scas
mov
mov
pusha
pop
out
pop
dec
lret
cltd
loope
fisubrl
insb
leave
sub
push
lods
sar
imul
sahf
adc
cmc
fcmovnbe
or
sbbb
fdiv
mov
fnstenv
pop
mov
fidivl
cmp
push
sbb
jecxz
mov
pop
cltd
pushf
not
cmp
mov
push
jne
mov
adc
mov
in
cli
sub
fsubl
mov
add
add
jae
fildl
fs
fwait
enter
movsb
ret
ljmp
nop
mov
pushf
ss
pop
decb
sbb
or
inc
sub
fsub
data16
or
lret
sub
xor
pop
jb
or
mov
scas
dec
pop
mov
or
sub
push
insb
test
call
pop
push
push
jg
loope
shl
sbb
mov
push
jns
mov
aas
dec
int3
adc
fwait
cmpsb
addr16
ficomps
loopne
mov
and
fimuls
rol
cmpsl
int3
sbb
xor
daa
xchg
arpl
loop
stos
jl
mov
orl
in
sbb
call
adc
inc
imul
sub
clc
jne
test
icebp
aad
and
and
insb
xchg
lcall
lea
xchg
sti
in
les
xor
out
and
pop
movsl
lcall
jg
cs
mov
loopne
inc
jne
loop
mov
andl
fmuls
mov
movsl
sahf
scas
imul
cmpsl
divl
adc
cmp
cmpsl
sbb
sub
dec
xchg
lds
mov
mov
and
and
js
pop
lahf
pop
push
popa
loope
rcrb
mov
popa
in
fucom
xchg
mov
out
push
add
mov
jecxz
sti
xchg
aas
inc
aas
xchg
mov
add
mov
sub
pusha
les
xchg
and
aam
hlt
push
mull
xchg
pop
scas
leave
pop
cmp
inc
cmp
adc
mov
pop
jo
divb
push
mov
movsl
jg
mov
cltd
pop
imul
scas
adc
inc
rclb
in
testl
bound
insb
lock
mov
ret
ffree
imul
shr
sbb
push
mov
xchg
cltd
pop
jns
aam
scas
or
inc
sbb
inc
mov
mov
lods
insb
rdmsr
pop
xchg
fisubrs
push
pop
adc
mov
pop
jns
rorb
mov
jb
jne
push
mov
clc
add
mov
jae
incb
popa
dec
xchg
dec
cmc
aam
ljmp
hlt
jae
adc
add
mov
scas
into
incl
jg
lods
or
pop
pop
push
lret
pushl
cmpsl
imul
enter
pop
addr16
and
jns
div
cmp
mov
jae
sbb
xlat
pop
ficoms
pop
std
inc
gs
sbb
dec
lret
xchg
outsb
dec
add
mov
cmpb
xchg
pop
cmc
pusha
insb
loop
push
fs
pop
ret
dec
lods
rolb
xchg
dec
push
mov
inc
mov
adc
icebp
cltd
inc
sub
inc
sar
push
idivb
addr16
xor
push
jb
sbb
pop
jmp
fisubrl
inc
fsubrl
adc
jle
or
jae
adc
jge
pop
jl
jae
jno
out
push
push
loope
mov
ret
fcomps
in
push
adc
cmc
subl
dec
outsl
outsb
mov
jae
ljmp
clc
repnz
out
push
cld
in
push
push
dec
and
outsl
pop
ficoml
sbb
insl
mov
or
ljmp
movsl
mov
je
mov
and
add
clc
ficompl
jae
lahf
ret
jle
in
xlat
inc
stos
mov
nop
xor
and
pop
mov
xor
cltd
sbb
pop
mov
inc
movl
jb
dec
stos
cmpsl
das
shlb
or
shl
int
inc
es
aam
mov
lcall
mov
jb
xchg
stos
rcrl
xor
and
repnz
pop
pop
or
dec
adc
add
jge
jae
insb
add
push
sahf
dec
mov
cli
cmp
or
mov
push
cld
inc
imul
sub
push
scas
loop
fistpll
pop
mov
pushf
inc
lahf
pop
js
or
rclb
mov
pop
arpl
adc
mov
stc
mov
shll
adc
cmp
subl
sti
int3
adc
out
pop
movsb
and
push
pop
cld
filds
out
movb
push
add
out
fcoml
mov
dec
inc
xor
dec
divb
jo
xchg
cli
adc
lret
xor
enter
nop
xor
lcall
dec
aam
cltd
outsb
into
adc
jne
bnd
movsb
dec
xchg
popf
ljmp
mov
enter
push
xchg
jl
sbb
test
xchg
lods
ss
mov
mov
lods
inc
rcrl
pop
popf
mov
shlb
lret
lds
xlat
cltd
mov
popa
ss
outsl
clc
mov
inc
or
movsl
mov
lea
ljmp
ljmp
jl
clc
xor
stc
int3
int
in
push
lds
ss
movsb
les
mov
insb
fisttpl
dec
aaa
inc
shlb
mov
loopne
nop
repnz
insl
and
ja
xchg
dec
lcall
inc
xor
iret
pop
mov
or
add
lcall
test
data16
dec
or
mov
fs
xchg
insl
fadds
xor
cmpsl
xchg
imul
pop
sub
les
mov
pop
les
gs
mov
xor
out
mov
inc
cmc
jno
rol
lds
and
notl
push
push
and
call
lret
or
mov
or
mov
imul
xacquire
cld
fldl
jecxz
fstpl
sar
mov
sahf
in
xor
adc
imulb
sub
pop
in
and
ret
lods
gs
daa
inc
add
fs
test
cltd
adc
inc
lods
push
dec
inc
jbe
mov
rcrl
les
mov
ja
inc
sbb
mov
cmpb
inc
xor
loopne
mov
jns
add
pushf
cmp
data16
xchg
out
int3
enter
sub
cmp
xchg
pop
test
arpl
jne
nop
sub
add
mov
mov
loope
int3
test
addr16
jb
jne
add
cmovae
int
addr16
fbstp
xchg
cmp
pop
mov
outsl
sbb
popf
inc
movsb
inc
dec
and
jns
dec
and
ja
inc
dec
mov
rclb
or
sbb
mov
cmp
inc
push
pop
xor
ret
lods
je
cmp
xor
hlt
xor
jmp
jp
imul
push
mov
xlat
test
mov
and
in
pop
add
jno
and
icebp
push
pop
and
nop
outsl
aaa
sbb
push
dec
fistpll
push
jnp
cmp
xor
test
ljmp
cld
dec
aaa
bound
iret
or
adcb
neg
mov
pushf
out
xchg
mov
insb
xchg
xchg
xchg
dec
jmp
or
add
lods
into
mov
push
sub
add
pop
int
jp
inc
ret
or
inc
inc
scas
xchg
or
pop
mov
dec
sbb
sub
dec
cltd
shr
in
add
sbb
adc
jl
out
mov
sub
jp
jo
mov
or
jne
icebp
int
insl
lahf
add
out
adc
cmp
mov
fildl
arpl
inc
lcall
jmp
mov
or
repz
rcrb
or
mov
or
aaa
push
sti
stos
faddl
xchg
mov
dec
push
stos
sub
xchg
dec
mov
and
jmp
sbb
stos
or
outsl
jnp
inc
sbb
and
stos
or
out
arpl
inc
pop
mov
or
pushf
adc
addr16
mov
cmp
imul
dec
add
cli
daa
jno
cmpsb
cli
mov
or
sub
aas
pop
shll
or
xchg
push
mov
pusha
jge
pop
mov
mov
and
test
mov
lods
xor
sahf
lcall
hlt
mov
sub
fiadds
dec
stos
dec
xor
pop
jl
inc
ds
enter
sub
test
push
stc
lahf
jle
adc
lds
and
mov
cltd
int3
cli
push
aaa
scas
iret
pop
pop
into
jnp
lock
dec
adc
xor
pop
pop
mov
adc
test
dec
data16
shlb
std
cmp
roll
cmp
add
jno
fidivl
sub
inc
sbb
sbb
push
cmp
in
push
std
sub
adc
ret
fidivrs
iret
stos
lcall
push
lret
pop
mov
flds
mov
test
aam
repz
xor
test
jecxz
cmp
cmp
and
iret
jbe
das
add
add
fiadds
cmpsl
jne
cld
xchg
jbe
loop
arpl
jnp
mov
inc
sahf
xchg
lock
lock
ja
pop
jne
inc
jg
js
jp
mov
call
and
test
lods
pushf
ret
inc
bndldx
jmp
inc
inc
sub
mov
sub
mov
jne
cmp
add
fcomip
fsubs
dec
xor
movsb
js
lods
mov
ffree
in
repnz
add
mov
add
mov
or
rcll
lds
mov
pop
das
mov
icebp
jo
int3
pop
daa
fildl
fnstcw
jnp
lret
movsl
push
int3
out
iret
fwait
mov
cmp
mov
pushf
jmp
pop
lds
mov
mov
push
sarb
hlt
xor
popa
sbb
mov
in
or
mov
bsf
leave
notb
out
call
push
ret
lcall
sub
pop
and
mulb
shl
adc
pushf
lock
xchg
cli
fstpt
imul
pushf
iret
outsb
int3
fidivs
push
popa
ss
lods
xchg
sub
out
pop
sub
test
mov
rorl
sbb
shrl
decl
adcl
inc
clc
loop
xchg
fcompl
test
cmc
jbe
dec
cmp
aad
mov
sbb
in
and
adc
mov
fildll
sbb
negb
mov
inc
sbb
push
mov
lret
cli
fwait
push
adc
mov
out
bound
fistpl
hlt
mov
xor
shr
or
out
push
inc
test
jge
xlat
sahf
mov
mov
fiaddl
fwait
mov
dec
adc
sub
push
push
mov
mov
fcomps
out
dec
sub
dec
mov
iret
cmp
aas
popf
movsl
cli
dec
nop
sahf
mov
or
bound
push
lcall
inc
lea
pusha
jl
pusha
add
int3
xor
mov
mov
insb
mov
ret
pop
sti
inc
call
jl
xchg
or
ds
lahf
xchg
xlat
in
mov
stos
idivb
icebp
inc
lock
or
pushf
iret
imul
cmp
or
inc
mov
mov
loop
cmp
xchg
ljmp
mov
dec
js
mov
cmp
mov
jle
imul
ss
dec
add
aas
aas
mov
mov
or
jmp
sarl
loope
scas
mov
xchg
enter
out
push
and
xchg
test
mov
gs
std
mov
sar
mov
lds
enter
bound
and
adc
ja
mov
loope
cmpsl
xchg
popw
dec
add
mov
jne
pop
stos
lods
push
or
leave
mov
xchg
rclb
ja
mov
and
popa
insb
ja
or
mov
push
out
cmp
mov
pusha
sbb
int
fcoml
inc
shlb
pusha
test
in
out
imul
xlat
jae
jbe
mov
xchg
xchg
cld
ja
mov
mov
xchg
pop
leave
imul
fisubs
jmp
xchg
sarl
sahf
jp
in
mov
ret
and
mov
shl
hlt
add
mov
gs
pop
cld
mov
loope
testl
stos
dec
into
pusha
xchg
mov
fldenv
inc
mov
frstor
adc
lret
xchg
xchg
xor
xchg
sub
push
cmpsl
pop
and
movsb
cli
ds
fwait
jg
jb
mov
ds
cmp
loop
arpl
dec
or
out
movl
cmp
cmp
xchg
hlt
add
cs
adc
push
inc
xchg
mov
mov
mov
inc
and
into
sbb
fdiv
lea
mov
cmpsl
inc
and
pop
sbb
xor
add
sbb
push
repz
mov
cmp
mov
sub
arpl
and
sub
pop
repz
into
xchg
pop
sub
or
jle
and
movsb
scas
inc
dec
and
inc
imul
mov
dec
outsb
push
xchg
xchg
imul
cmpsl
roll
adc
lds
and
imul
pushf
ret
mov
daa
lret
test
shl
sbb
push
lcall
fisttps
dec
mov
xchg
dec
cmpsl
mov
inc
xchg
andb
addr16
fdivrl
lds
mov
jmp
je
add
mov
dec
xchg
and
mov
pop
pop
out
in
repnz
dec
test
cmp
out
adc
and
cmp
or
adc
sub
push
popf
dec
cmp
xchg
je
dec
jnp
out
jl
xchg
jmp
cmp
xor
ss
addr16
mov
in
mov
dec
clc
mov
ljmp
or
jno
popa
icebp
xchg
les
aam
fadds
push
cmp
xchg
and
jp
cmpsb
rcll
push
xchg
cmp
dec
fcoml
pop
adc
and
subb
cmp
sbb
jnp
popf
enter
mov
arpl
stc
mov
cmpsl
dec
xlat
shlb
imull
push
inc
shrb
fsubrs
out
dec
xchg
xchg
dec
out
push
or
mov
adc
cmp
add
jl
cmpb
push
cltd
outsl
cmp
sub
adc
mov
xor
lahf
push
stc
movb
or
aas
cli
xlat
lcall
sub
ret
jp
inc
popf
jo
and
stos
ljmp
ret
inc
cs
out
fnstsw
fstpl
dec
and
or
cmc
push
stc
xor
insl
push
sbb
xchg
in
icebp
stos
fdivrs
cltd
cmc
or
sub
dec
adc
cmp
mov
push
jns
cmpsl
enter
inc
jle
mov
hlt
sarb
xor
repz
int
cmp
cmc
cmpsb
rolb
push
cltd
popf
sbb
js
mov
lods
push
test
inc
lea
test
mov
sarl
push
inc
cmp
mov
mov
inc
inc
inc
jns
pop
in
pop
mov
ret
stos
cwtl
stos
lcall
xchg
test
dec
enter
nop
jecxz
bound
cmp
imul
lahf
sub
and
pop
jb
pushf
ss
push
test
in
pop
sub
stos
out
iret
mov
mov
xchg
ret
lods
lock
add
cs
sbb
cld
adcl
pop
mov
adc
mov
xchg
ror
or
ret
rcl
test
jge
and
pop
int3
mov
shrl
or
shll
dec
imul
pop
ds
jbe
jb
mov
daa
inc
dec
sub
pop
lds
cmpsb
iret
and
inc
lahf
ret
dec
dec
mov
aas
sub
jno
ret
cmp
add
jmp
filds
xchg
xor
addr16
mov
repz
xchg
sbb
xor
sub
outsl
orl
adc
jmp
cmpsl
ja,pt
dec
pop
pop
push
xchg
cli
aam
lahf
inc
push
mov
daa
xchg
movsb
or
cmpsb
mul
data16
push
dec
mov
into
loopne
sub
insb
cmp
add
out
and
push
shlb
aam
mov
es
xchg
movsl
and
jg
mov
cmpsb
jnp
cmc
adc
add
imul
push
and
and
scas
leave
push
xchg
xchg
and
lahf
out
dec
push
mov
xor
jbe
and
inc
rcll
mov
mov
test
or
sbb
movb
and
mov
cmpsb
pop
dec
cli
xchg
xchg
cli
int
cmpsl
jo
inc
stc
mov
inc
jmp
arpl
mov
jae
inc
mov
cmp
pcmpgtd
add
repz
hlt
add
cmpsl
sub
pop
pop
push
lods
mov
xor
mov
adc
xor
sub
xchg
jne
mov
adc
jp
xchg
aaa
lret
and
or
push
push
rolb
jle
testb
aad
mov
fadd
adc
popa
mov
bnd
inc
ret
and
les
enter
mov
call
push
sub
adcl
cli
js
mov
test
dec
shrb
jge
mov
mov
test
mov
icebp
fnstenv
popa
lahf
movsb
aad
fadds
inc
xchg
pop
or
add
sahf
inc
stos
mov
cmpsb
add
xchg
mov
dec
sar
cmpsl
and
mov
ret
pop
dec
dec
or
sub
loopne
and
loop
sbb
xchg
xchg
faddl
or
cmpsl
ret
mov
imul
or
test
stos
xchg
sbb
in
adc
xchg
call
fmul
pop
aas
sbb
mov
jae
mov
lods
orb
stos
add
mov
or
cmovg
add
sub
cmp
out
imul
test
inc
sub
jnp
test
xchg
std
mov
data16
inc
jp
push
add
push
push
mov
mov
and
xchg
adc
pop
sub
dec
adc
pop
xor
push
adc
mov
jnp
pop
push
dec
iret
inc
xchg
out
mov
fistl
mov
push
pop
cmp
scas
movl
inc
pop
lret
out
fildl
pop
xor
pop
adc
jecxz
mov
sar
push
ss
aam
imul
inc
jb
mov
and
pop
xchg
imul
mov
femms
insl
ficompl
je
rcrl
push
loopne
out
outsl
fwait
addl
jle
lahf
fstl
cmp
or
mov
pop
in
je
shlb
pop
fcomps
clc
mov
dec
outsb
dec
fwait
shrb
xchg
push
aaa
les
sub
rorl
ficoms
push
imul
mov
jmp
cmp
dec
or
outsl
mov
ret
mov
mov
hlt
and
jg
mov
push
lret
fwait
adc
mov
and
sub
push
sbb
cltd
hlt
sub
sbb
rcll
stos
push
inc
dec
mov
mov
in
test
orl
push
int
insb
cmp
jl
aad
pop
ss
test
jo
loopne
jg
in
sub
lods
push
mov
scas
adc
fucomi
dec
out
pushf
jbe
lret
outsl
or
int3
mov
sub
mov
or
loopne
mov
inc
insb
push
mulb
sbb
mov
cmovne
pop
addl
cmpl
add
hlt
xor
pop
push
les
or
cmp
xor
xchg
shlb
iret
cmc
or
xchg
lods
dec
ljmp
jg
mov
mov
jg
mov
insl
push
loope
add
std
jns
sub
mov
mov
dec
or
xor
iret
aam
jmp
mov
ret
cmp
sbb
inc
push
aas
bound
mov
jo
lahf
xchg
push
adc
out
inc
repnz
push
push
jmp
repz
xor
call
cwtl
sub
das
mov
ret
test
int
mov
cwtl
add
ficoms
int3
bnd
cmp
xchg
push
sub
dec
and
cwtl
stc
loop
sbb
popl
mov
push
and
mov
push
ret
cmp
jo
dec
testl
icebp
push
lea
mov
dec
xor
iret
jae
into
push
pop
pop
addb
out
xor
mov
dec
push
sub
out
into
sub
loope
shrl
int
stc
lods
and
and
jnp
mov
jp
mov
into
in
xlat
mov
dec
mov
icebp
dec
outsl
or
pop
shll
ja
lcall
xor
stc
cmpsb
inc
pop
xorl
frstor
aaa
xor
mov
cmp
add
aam
ds
addr16
push
adc
aas
or
gs
jg
xlat
mov
dec
sbb
add
ret
push
mov
and
adc
outsb
dec
mulb
mov
cmc
dec
stos
mov
lcall
int
pop
mov
notb
imul
xchg
jnp
jp
push
int
or
fldt
sbb
xor
mov
inc
sub
lds
jnp
xor
insb
and
ss
and
sbb
dec
sbb
sbb
xor
mov
mov
lahf
xchg
es
rcrl
adc
lret
aad
add
pushf
popf
loope
inc
mov
pop
icebp
sub
jmp
mov
hlt
jo
std
sti
dec
fidivrs
popa
cmpsl
push
aaa
xchg
or
movsl
loope
jl
sbb
sbb
mov
sti
mov
les
push
gs
jae
dec
cld
cmp
push
icebp
std
out
lret
jg
or
xchg
dec
sub
push
adc
addl
dec
sub
jo
pop
dec
imul
jno
xor
lock
inc
insb
out
jmp
xlat
insl
pop
pop
and
xlat
test
out
enter
adc
lret
or
shlb
jne
dec
fwait
mov
fistps
iret
mov
xor
adc
jl
roll
mov
sbb
test
adc
repz
xchg
dec
or
repz
inc
push
and
mov
push
mov
loope
xlat
inc
sbb
decl
mov
pop
push
bound
mov
dec
popa
cmpsl
xorb
pop
fisubrl
mov
insb
sarl
lea
xchg
xor
inc
icebp
xor
mov
movsb
push
mov
test
testl
insl
jmp
shrl
int3
insl
maxps
repz
cmpsl
mov
sub
andb
pop
scas
in
and
pop
xor
jle
nop
sub
or
arpl
fcoms
xchg
jl
es
test
fstpl
outsl
mov
and
jae
jl
insl
clc
sub
mov
sbb
es
inc
xor
xor
or
and
out
dec
jge
movups
scas
inc
int3
call
push
and
or
idiv
or
mov
xchg
cmp
and
loope
xor
jae
shll
jg
dec
imul
movsl
cli
js
sbb
cmp
jecxz
mov
jae
inc
xor
fdivr
scas
sbb
loop
fsubs
ljmp
adcl
sbb
pushf
sbbl
dec
sub
sahf
fcmovb
stc
adc
push
shlb
cmpsl
fcoms
jge
addb
push
sbb
ret
lret
push
roll
std
fdiv
sbb
iret
iret
mov
addr16
inc
mov
into
xlat
mov
push
sbbl
stc
mov
fdivrs
sahf
xor
outsl
inc
jae,pn
adc
adc
xchg
pop
shll
adc
cmpsl
mov
push
lock
test
imul
push
mov
nop
loopne
and
loopne
dec
sbb
scas
xor
das
inc
int
sbb
enter
out
xchg
inc
cld
cmpsb
xchg
and
pop
cmp
mov
fwait
js
push
repnz
inc
fcoml
insl
sub
xchg
loopne
cli
idiv
adc
adc
std
fsts
das
inc
xchg
hlt
and
inc
repz
mov
imul
loopne
je
add
lods
pop
in
leave
inc
idivb
shll
data16
pop
lea
enter
loopne
enter
sbb
lcall
lods
push
xchg
push
test
push
xorl
test
cmpsb
enter
data16
pop
into
dec
fsub
icebp
sub
add
outsb
adc
imul
outsl
fwait
fwait
js
mov
scas
jne
in
lret
xchg
movsl
xchg
lcall
push
ss
push
or
rolb
testb
mov
test
imul
dec
cmpsb
addr16
cli
mov
mov
or
fstpl
clc
rolb
mov
sub
or
loopne
sub
push
and
outsb
fisubs
lods
in
add
shrb
fmull
orl
mov
inc
decl
aad
loope
sub
add
xlat
enter
mov
lret
jmp
dec
inc
sbb
loop
insb
in
data16
mov
mov
and
shl
push
cmpsb
jbe
jecxz
cmp
sbb
pop
xchg
inc
inc
and
pop
lods
push
jg
rorl
push
in
jecxz
xchg
push
fwait
cmp
mov
movsb
push
cmp
stc
push
xor
adc
add
pushf
ret
movsb
mov
insb
or
cltd
jno
loopne
or
test
das
fistl
push
xchg
es
rorl
xchg
cwtl
outsb
mov
adc
fwait
inc
sub
insb
ja
xchg
add
ja
aad
lahf
lods
mov
and
or
fcomps
in
movsl
push
lcall
jmp
cmp
ja
xchg
mov
mov
pop
mov
lds
std
pop
pushf
mov
mov
leave
push
ret
adc
dec
sbb
pinsrw
popf
jns
fcmovbe
fldenv
dec
insl
xlat
xchg
mov
stc
xchg
inc
loope,pn
and
or
and
adc
jmp
xor
hlt
lret
jl
mov
jne
pop
sbb
movsb
mov
jne
sarb
sbb
xor
add
or
mov
dec
ss
aas
movsl
inc
gs
lock
push
and
dec
call
cmp
stos
mov
movsl
xchg
or
sbb
arpl
rcrb
push
scas
or
js
pop
xacquire
and
and
loop
ss
inc
push
xchg
scas
out
xor
pop
cmp
cmp
ljmp
pop
call
leave
out
mov
cltd
aad
icebp
outsl
mov
mov
int
ret
ss
sti
xor
pop
inc
cmp
mov
imul
aaa
add
inc
or
cmpsl
mov
lock
inc
dec
orl
ljmp
mov
aam
ret
popa
ja
sar
pop
insb
popa
xchg
mov
or
dec
jp
push
mov
hlt
cmpsb
mov
mov
dec
mov
xor
mov
test
jno
inc
arpl
sub
pop
sbb
xor
outsl
adc
push
and
popa
adc
repz
faddl
mov
loop
adc
fidivl
xchg
xor
outsl
call
shlb
pop
mov
xor
push
sbb
or
int3
jb
inc
bound
jmp
push
mov
dec
jno
add
xor
jns
inc
stos
daa
pop
incl
in
mov
and
xchg
xor
xlat
loope
sbb
sti
fsubrl
pushf
loopne
fnsave
test
adc
xor
pop
xor
aam
push
cli
xor
adc
fcomps
cltd
push
cmc
mov
mov
or
call
out
sub
sub
sbb
xchg
mov
daa
xchg
jb
popf
and
xor
jmp
mov
mov
test
xchg
imul
dec
jae
outsl
mov
xor
push
push
js
scas
pop
out
subl
test
ss
sub
adc
mov
fbstp
rclb
cmpl
into
out
mov
nop
ljmp
or
cmp
roll
lea
jl
mov
pop
gs
rcrb
addr16
clc
aaa
adc
push
fcompl
pop
pop
push
pop
jg
shl
push
xor
stos
mov
cs
push
cmpsb
push
inc
xor
je
xchg
aad
mov
push
push
jl
fwait
daa
xchg
insb
and
cmp
std
fdiv
mov
mull
jmp
aam
adc
daa
mov
in
cltd
ror
mov
push
fldcw
or
cs
pop
dec
or
clc
sbb
aaa
fs
imul
enter
insl
mov
push
test
pop
leave
arpl
xor
imul
dec
mov
push
or
lcall
iret
loop
jns,pn
sahf
pop
cmp
out
fwait
push
cmp
andl
ret
test
sbb
pop
xchg
pop
lock
ljmp
jecxz
and
in
jle
jmp
into
pop
lcall
pushf
adc
xor
mov
out
mov
mov
mov
pusha
xor
push
sbb
stos
push
adc
mov
cmpsl
outsl
xor
dec
pop
sbb
daa
mov
jmp
mov
cmp
sbb
and
mov
jb
bound
dec
pop
lods
jo
or
ficoms
cltd
sbb
lea
push
iret
mull
sarl
icebp
mov
xor
cli
in
push
cmp
aam
lods
xor
adc
and
push
mov
pop
mov
es
pop
sbb
cli
push
xor
out
jecxz
xchg
ja
add
mov
pusha
xchg
adc
loop
jmp
or
icebp
dec
data16
mov
dec
enter
mov
and
mov
in
roll
jno
repnz
stos
or
cwtl
xor
xor
out
xchg
sub
shl
pop
xor
imul
sahf
lret
cmp
adc
cmp
daa
dec
pop
pop
nop
shll
loop
mov
adcl
mulb
push
icebp
in
xchg
jnp
mov
sub
cmp
cmc
pop
xchg
sbb
add
je
inc
push
or
jno
pop
xlat
sub
in
cmp
scas
pusha
and
add
hlt
mov
adc
shll
jb
jp
jne
popa
xor
imul
loopne
or
mov
int
xchg
cmpsl
sub
aas
mov
sbb
mov
adc
inc
xchg
loopne
ljmp
dec
shrl
imul
aad
jl
rcrl
orl
xchg
and
xchg
int
aam
loop
test
in
sbb
lahf
pop
mov
pop
in
xor
popa
popf
mov
testl
icebp
test
pusha
jb
mov
test
ja
xor
xlat
lock
xchg
adc
and
les
stc
xchg
mov
mov
sbb
test
mov
mov
cmpsl
add
xor
push
jecxz
ficompl
repnz
mov
add
scas
outsl
js
sahf
or
pop
inc
stos
fsubl
inc
fs
jbe
cmp
lock
jg
gs
mov
inc
or
and
jbe
jne
push
mov
mov
xchg
push
add
xchg
sub
ss
sub
stos
shll
cmp
mov
sarl
mul
sub
fadds
push
icebp
ror
xchg
and
push
add
cmpsl
ds
andl
pop
sub
adc
enter
gs
push
mov
push
outsb
lods
cmp
mov
lahf
leave
mov
or
mov
mov
xchg
add
fists
das
adc
mov
insb
rcll
std
int3
jecxz
pop
mov
dec
jecxz
adc
mov
jne
or
add
mov
into
jp
xlat
xchg
adc
out
cmp
cs
sub
jbe
mov
xor
adc
cmc
xor
mov
repnz
divl
clc
aad
and
cmpl
inc
add
sahf
inc
rolb
nop
into
jbe
insb
and
clc
push
out
mov
repz
jmp
xor
mov
insl
sbb
fwait
xchg
lahf
call
mov
add
fnstcw
adc
xchg
sbb
out
jp
fcmove
test
aam
test
jo
sbb
fsubl
push
adc
or
xchg
lahf
adc
out
aaa
xchg
andb
or
xchg
mov
mov
mov
xchg
dec
xchg
aad
test
pusha
xchg
sbb
cmp
insl
add
xor
das
cltd
dec
movsb
sbb
push
out
call
sbb
adc
out
xor
in
movsb
out
add
out
adc
dec
aaa
inc
notb
sbb
xchg
push
mov
xchg
clc
rcll
sub
dec
leave
pop
les
in
iret
hlt
cmp
inc
mov
push
ljmp
test
mov
cmc
movsb
and
fisubrl
scas
cwtl
inc
or
xchg
inc
xor
push
ret
adc
mov
push
inc
inc
and
sbb
xchg
and
iret
mov
insb
adc
fcoml
fldt
test
xchg
mov
clc
out
daa
insb
sub
mov
lret
sub
dec
pop
sbb
scas
cld
test
scas
xorb
push
sub
imul
jae
mov
orb
mov
dec
out
add
pop
cmpsl
stos
addr16
push
or
icebp
inc
mov
jb
fs
mov
cli
cmpsl
aad
je
inc
mov
scas
xchg
inc
xor
dec
adcl
sub
addr16
adc
jae
insl
push
add
call
fsubrl
xchg
icebp
push
stos
inc
push
or
jbe
cmpb
rcrl
or
jnp
cli
inc
sbb
mov
adc
jle
fisubrs
sbb
sbb
xor
xchg
dec
out
push
scas
inc
sarl
lock
lret
sarb
fdivrs
mov
mov
test
and
sbb
je
int
xlat
sahf
fists
lcall
xor
sbb
pop
movsb
xor
jbe
test
nop
cmp
pop
push
test
dec
cmpsb
fisubl
xor
dec
inc
gs
push
jecxz
xor
rclb
lock
push
mov
adc
mov
stc
out
fldl
int3
mov
fxch
lret
mov
hlt
psrlq
jno
mov
sbb
sahf
adc
push
addr16
xlat
mov
les
fwait
xor
call
das
push
xchg
enter
adc
add
push
inc
cmpsl
pop
mov
nop
ss
lcall
mov
mov
and
clc
andl
mov
cmpsl
lock
cmpsl
mov
or
mov
nop
and
fldcw
sti
scas
cmp
add
cmpsl
jle
movsl
cmp
fwait
out
sbb
dec
push
push
das
adc
insb
mov
out
push
lret
fistps
pop
adc
cmp
test
mov
lret
andl
das
and
fsubrp
jbe
mov
push
shl
and
inc
leave
mov
xchg
add
push
lods
push
in
les
fcomps
js
push
mov
push
sub
push
push
xchg
cmp
push
cmp
addr16
ret
sar
cld
mov
push
mov
sbb
xor
mov
negb
icebp
stos
add
pop
and
mov
adc
mov
pop
cmc
fwait
add
gs
add
mov
adc
fcoml
test
mov
lcall
pop
cli
loope
mov
sahf
shlb
pop
pop
out
cld
arpl
shr
outsl
pusha
push
xchg
sub
push
xchg
sbb
into
stc
xchg
xchg
pop
ljmp
adc
loope
xor
loope
xor
add
stc
test
xchg
out
cmp
test
clc
cmpsl
push
sbb
ss
ljmp
fmul
adc
mov
loop
test
pop
outsb
push
mov
jle
pop
dec
rcrl
test
ss
js
movsl
sbb
xor
jbe
mov
movsb
cvtps2pd
mov
mov
sub
mov
push
mov
insl
into
outsb
je
cmp
cmp
xlat
mov
fcom
inc
push
enter
stc
and
xor
xor
ret
ret
filds
popf
add
inc
or
sub
call
adc
mov
jl
inc
popf
adc
jbe
sbb
sub
xor
add
insb
mov
adc
mov
xchg
or
fcmovnb
mov
jl
push
mov
pop
outsb
cmp
pop
mov
imul
shl
push
push
mov
in
int3
mov
mov
inc
push
in
imul
mov
add
sbb
aaa
xlat
xchg
xchg
pop
aas
or
movsb
push
lret
aam
fbld
cmp
xor
cmp
or
cmp
imul
mov
lcall
mov
int
faddl
in
push
sub
clc
sahf
inc
dec
cmc
movsl
faddl
adc
adc
mov
lcall
imul
and
jmp
sahf
or
mov
cmp
mov
rorb
aam
or
inc
test
int3
int3
test
push
je
add
sets
test
push
ret
fwait
nop
push
xchg
fcom
adc
mov
dec
push
dec
cmp
add
outsb
mov
cltd
lret
into
in
mov
pop
outsb
mov
sbb
xchg
mov
sub
add
push
sub
jge
pop
sbb
pop
repnz
mov
sub
inc
outsl
inc
scas
aas
push
push
xor
ja
mov
adc
xchg
in
jno
mov
in
gs
inc
xchg
fldl
inc
xor
mov
jmp
mov
add
push
and
enter
dec
lods
call
lock
pop
pop
popa
cmpsl
movsl
adc
enter
out
mov
enter
mov
cld
adc
and
in
jp
mov
and
cmpsb
mov
les
push
out
mov
jo
repnz
daa
in
xchg
call
add
mov
push
icebp
pushf
jp
and
sbb
mov
pop
jmp
fisubs
xor
sub
das
sahf
mov
bound
shll
dec
insb
push
jo
xchg
push
loop
add
inc
xchg
dec
mov
inc
adc
or
add
or
pop
cmpsb
cwtl
dec
sahf
and
insb
mov
sub
xchg
or
mov
mov
mov
scas
cmp
jns
std
clc
jg
mov
lds
fwait
sub
dec
lea
ret
xor
out
pop
and
xchg
or
cmc
das
xor
lods
out
pop
rclb
dec
repz
pop
xor
mov
jns
insb
jne
stos
int
cmpsb
inc
test
cmp
int3
jge
test
sub
iret
imul
inc
sti
cmp
movsb
sti
jb
iret
xor
push
push
loop
dec
sbbb
fisttpl
dec
clc
ret
std
movb
xchg
dec
xor
dec
out
iret
lcall
xor
loopne
or
jl
mov
dec
add
cld
add
jo
mov
insb
sti
jne
dec
movups
arpl
xchg
rcrb
aaa
or
lcall
test
or
sbb
loopne
sbb
xchg
cmp
push
push
jle
push
scas
call
xor
clc
test
xor
fwait
jo
cwtl
aam
fwait
inc
movsl
xchg
xlat
push
ret
pop
cmc
mov
jmp
jecxz
gs
xor
jmp
sub
test
mov
jl
fs
sub
pushf
fldcw
pop
repnz
aaa
jmp
cli
push
adcl
jge
cmp
pop
in
cmc
mov
sub
scas
pushf
xlat
pop
xchg
and
push
mov
int3
scas
cmp
xor
daa
loopne
push
mov
add
pusha
adc
in
lds
aaa
andps
cmp
add
daa
pop
out
or
mulb
bnd
stos
scas
cmc
inc
repnz
jbe
inc
pop
sub
pop
insl
mov
xchg
adc
popf
mov
jmp
push
mov
lea
add
ljmp
mov
into
jbe
int
out
std
shl
into
mov
or
loopne
sbb
pop
xlat
add
and
mov
lea
sub
insb
cwtl
fldt
mov
push
arpl
jo
push
arpl
rcll
adc
ficoml
sub
fcoml
mov
cwtl
add
lods
cli
mov
push
enter
or
mov
roll
mov
and
cs
jmp
sbb
push
lods
mov
insl
adc
pushf
fistps
hlt
cmp
mov
xchg
pushf
shll
mov
and
adc
jg
lods
push
insb
or
icebp
sbb
add
xchg
mov
pushf
pop
lock
sarl
dec
or
es
into
fists
mov
ficoml
jno
sti
dec
jae
sub
cli
xchg
incb
daa
add
icebp
push
int3
jge
jmp
in
cmp
in
fs
jns
jae
jno
data16
mov
incb
mov
dec
cmp
scas
shrb
das
mov
push
and
and
mov
xor
loopne
sbbb
mov
push
mov
xor
in
loop
xor
push
fiadds
xchg
insl
jno
mov
fcos
inc
sbb
jmp
stos
sbb
jae
fdivs
mov
add
sub
xchg
bound
aad
or
hlt
pop
orl
xchg
push
loop
aam
inc
add
add
and
mov
push
out
mov
jb
push
dec
rcl
push
sti
dec
les
adc
fwait
push
push
and
pop
cli
mov
mov
movsl
repz
je
stos
sub
dec
adc
mov
xchg
mov
std
and
icebp
mov
mov
adc
dec
fwait
cmp
enter
daa
fsubrl
sbb
shrb
jnp
in
in
jo
jg
mov
stos
or
push
sub
sub
frstor
shrl
adc
test
cmpsl
jno
loope
jle
mov
adc
in
cmpb
xchg
stos
or
iret
pop
push
xor
loop
divl
pop
mov
pop
mov
gs
rcrl
fnstenv
pop
jmp
cmp
inc
fwait
push
dec
fcoml
jnp
push
scas
mov
push
mov
mov
divb
stos
xchg
xlat
mov
push
int
jbe
xor
add
lret
daa
mov
mov
data16
cwtl
xchg
dec
or
add
pop
xchg
mov
mov
adc
int3
idiv
inc
mov
pushf
shrl
jno
cmp
xor
mov
jmp
xlat
jge
adc
pop
outsb
mov
outsb
cltd
rcl
dec
pop
in
xchg
test
xor
outsl
add
outsb
hlt
sub
imul
ret
fs
jg
ss
aas
and
jmp
sub
jbe
inc
cmp
mov
call
cltd
xor
jno
test
mov
fisubrs
inc
xchg
or
jcxz
mov
je
or
mov
pop
inc
mov
in
push
push
mov
pusha
aad
inc
jae
enter
ja
out
mov
pusha
aad
call
sar
in
or
div
sub
nop
xor
ljmp
mov
test
rorb
out
fidivl
pop
inc
data16
cmpsb
int3
test
pop
bound
xor
icebp
ja
mov
pop
add
sahf
jmp
pop
insb
sbb
jne
xchg
pop
in
sbb
cmp
cmp
pop
repnz
mov
push
inc
ret
or
mov
mov
push
aad
lret
sub
icebp
jo
and
sbb
scas
fdivl
jp
pusha
push
and
or
or
es
cmpl
mov
adc
inc
push
movsb
rcll
cld
dec
adc
pop
daa
das
sub
mov
xor
lret
mov
pop
mov
jo
repz
inc
pop
loope
dec
inc
pusha
inc
mov
and
cli
aaa
jns
outsb
shrl
repnz
aas
dec
xor
imull
mov
jg
xor
jns
sub
cmp
mov
loop
ret
les
pusha
xlat
fcomps
shlb
popa
push
pop
xchg
push
daa
add
inc
dec
and
add
std
jae
stos
push
rolb
sbb
clc
dec
push
call
test
repz
adc
pop
and
into
movsb
xchg
mov
mov
cli
lock
pop
push
testl
xor
xor
rcr
mov
push
leave
addb
and
pop
adc
es
mov
adc
xchg
mov
jmp
gs
push
dec
push
lock
sti
sbb
leave
movsl
and
push
call
jmp
pop
xlat
rorl
mov
sbb
cmpsl
loop
ja
or
push
nop
dec
es
hlt
les
mov
xchg
out
rol
lods
stc
jno
push
xlat
outsl
sbb
push
xor
out
sti
pop
mov
xchg
pop
push
fsubrl
loope
lret
xor
imulb
test
pop
cs
into
xchg
lret
xchg
push
stos
outsl
ret
lret
add
pop
sbb
and
or
mov
xchg
jno
xchg
add
xlat
xchg
or
insl
aaa
out
sbb
ljmp
shr
inc
test
je
outsl
dec
ja
cmp
pop
inc
or
and
or
push
imul
mov
rcrl
push
sahf
push
das
adc
test
sahf
pop
test
and
popa
fwait
push
push
das
test
sbb
add
lret
cwtl
inc
stos
jno
cld
mov
lahf
ret
inc
xchg
mov
xchg
fst
cmp
add
push
mov
mulb
movsl
nop
les
jg
inc
xor
imul
sub
inc
add
nop
aas
jmp
jae
loope
dec
jle
insl
daa
es
aad
xchg
lcall
mov
add
jmp
cld
sub
aas
stc
sbb
jne
call
sub
fstp
mov
adc
pop
mov
mov
loope
push
and
sti
loop
lds
xor
push
into
sub
mov
dec
mov
jecxz
cmp
jp
cmp
and
hlt
nop
adc
loope
and
and
inc
repnz
outsb
adc
out
lahf
xor
ljmp
subb
icebp
imul
dec
imul
mov
addr16
lods
popf
jmp
std
inc
mov
pop
rcll
mov
movsb
sub
jl
scas
shrb
pop
mov
mov
pop
xchg
jns
xchg
in
stos
dec
sbb
aad
cmp
mov
in
nop
insl
mov
jns
pop
pop
dec
jl
push
movsl
outsb
int
arpl
push
xor
outsb
pop
insl
or
fdivr
shlb
lret
jp
addl
xchg
mov
and
aas
jb
sti
aam
fwait
scas
loop
fldenv
dec
fwait
daa
ja
add
insb
add
lds
and
dec
stos
cmp
mov
sub
scas
mov
xor
sbb
and
fsts
cmp
xchg
jg
cmp
sbb
inc
bsr
mov
inc
inc
dec
lock
push
int
xchg
jg
cwtl
repz
popa
mov
mov
dec
hlt
nop
lock
mov
sub
pop
aaa
cmp
push
pop
fisubrl
push
shll
xlat
enter
lods
inc
mov
inc
enter
xor
pop
push
fs
popa
push
dec
in
aas
lret
ds
rorl
in
xor
mov
or
daa
ja
andl
add
pop
sub
stc
inc
and
mov
lock
pop
ficompl
mov
fldenv
cmc
dec
les
dec
pop
or
rclb
push
add
call
mov
movntq
pop
mov
sub
shll
sar
imul
cltd
cmc
repnz
ljmp
cmp
push
mov
and
jns
sahf
cmp
fstpt
or
add
sub
push
dec
or
aad
fidivrs
movsb
and
fsubrs
push
and
stc
sub
stc
sub
nop
insb
ljmp
fs
dec
iret
mov
push
add
enter
xor
jmp
inc
jne
lods
orb
cmc
inc
out
call
sub
mov
ss
in
lock
int
out
xchg
rolb
adc
scas
es
fwait
out
rcll
addr16
add
inc
xor
jp
pop
cmc
cli
sbb
ret
xor
pop
mov
dec
mov
pop
sbb
in
mov
shll
movsb
cs
xor
ret
jbe
jns
outsb
mov
in
add
mov
xor
lea
pop
iret
stos
push
adc
jb
out
lea
popf
es
pop
das
push
mov
aam
inc
jno
movsl
or
xchg
pop
pop
ret
int
in
mov
in
or
cltd
mov
pop
psubsb
push
sti
out
aam
mov
arpl
cmp
dec
mov
xlat
and
sub
inc
mov
xchg
push
sub
orl
adc
imul
and
mov
mov
adc
sub
sbb
cwtl
loope
test
in
fistpl
js
fists
daa
dec
in
sbb
add
xchg
mov
rolb
int3
ss
sbb
imul
inc
test
stos
pop
movsl
pop
icebp
mov
mov
scas
mov
mov
sbb
cs
and
dec
mov
and
xor
ret
fldcw
mov
decb
loop
add
push
jge
shll
rcl
push
ret
jbe
jg
pop
adcb
sbb
adc
mov
mov
flds
push
popa
mov
mov
sbb
mov
das
xor
out
mov
movsl
fildl
jns
or
test
mov
mov
xchg
inc
arpl
sti
sbb
mov
outsb
and
jno
push
inc
ds
xchg
dec
cmp
sbb
movsl
shll
pop
insb
vmaxss
je
adc
cmp
add
out
jns
icebp
cmp
xchg
cmp
bound
inc
cmp
inc
ds
ljmp
mov
inc
xchg
mov
add
leave
inc
ficompl
and
subb
lcall
dec
cmp
mov
aam
fwait
mov
dec
fwait
call
mov
mov
mov
lcall
sbb
lods
daa
mov
push
stos
imul
mov
push
mov
in
jnp
out
xor
jb
mov
lock
sar
insb
mov
cli
scas
push
mov
xor
inc
repnz
je
insb
stos
xor
and
inc
push
push
cmp
scas
add
mov
or
xchg
add
cmp
xor
insb
sahf
dec
aam
jbe
jno
and
iret
cs
jnp
and
aad
sub
daa
xchg
enter
mov
pop
ficompl
adc
xor
pop
sti
fnsave
dec
push
daa
stc
push
scas
mov
ja
enter
push
sbb
iret
mov
stc
sbb
xorb
pop
repnz
movsl
sbb
push
in
or
enter
or
lods
pop
xchg
xchg
arpl
daa
inc
and
aam
and
rorl
repz
lea
mov
xor
mov
clc
dec
sub
sbb
sahf
add
hlt
int3
add
dec
bound
out
loopne
leave
xchg
pop
push
add
lds
out
xchg
mov
std
adc
scas
out
repnz
or
inc
aaa
pop
push
jno
lds
mov
in
pushf
out
insl
dec
or
inc
dec
imul
gs
cmp
loopne
adc
xor
push
and
sbb
xchg
js
or
cmp
repnz
cmp
cltd
mov
dec
mov
repz
jno
mov
jmp
sub
mov
out
push
cmp
inc
clc
adc
addl
xchg
pop
repz
mov
loope
mov
push
in
xor
inc
xchg
cltd
aaa
loop
scas
add
dec
jo
in
mov
and
and
jb
out
jb
jecxz
add
div
mov
movsb
lds
add
inc
shll
ds
fwait
xor
cmp
fwait
popf
mov
pop
mov
ret
dec
add
movsb
sbb
sbb
stos
cmp
pop
cmc
or
mov
gs
or
mov
and
sub
push
mov
push
ljmp
jg
hlt
repnz
out
inc
rol
jl
jge
gs
add
scas
sub
movsb
mov
in
jl
xor
inc
out
add
in
mov
sbb
adc
push
daa
mov
mov
lahf
adc
sbb
sti
and
push
aad
aaa
xlat
and
add
idivl
shrl
inc
mov
mov
cwtl
mov
mul
in
sub
xchg
mov
adc
mov
hlt
std
js
dec
je
aam
int
les
cwtl
in
jp
nop
sbb
stos
lea
repz
cmp
adc
rolb
insb
scas
jb
and
icebp
or
test
in
aaa
rclb
push
or
jne
push
mov
mov
outsb
fbld
lods
shll
loope
mov
mov
fidivs
dec
and
fwait
arpl
jns
mov
dec
adc
out
xchg
cltd
es
mov
xor
fs
lahf
xor
mov
jg
lds
push
cmpsb
dec
hlt
mov
nop
pop
inc
and
sbbl
mov
je
sub
movsl
loop
outsl
inc
fnstsw
push
adc
sub
push
stos
fstps
mov
sub
iret
fxch
xor
cld
and
jae
int
sbb
push
and
cld
xchg
sub
scas
stc
jmp
pop
les
push
add
dec
into
popf
pinsrw
clc
rcrb
adc
mov
in
fistps
std
sahf
test
addl
aad
outsb
xchg
sub
pop
sub
jne
stos
add
ljmp
adc
xchg
mov
mov
arpl
addr16
pop
rolb
imulb
out
mov
xchg
inc
sbb
adc
in
xchg
insb
dec
jmp
cmp
fs
adc
xchg
ficoms
arpl
dec
xor
mov
pop
fnstsw
mov
jae
adc
sarb
test
call
xchg
jp
and
imul
inc
lds
adc
dec
or
and
push
hlt
rol
jb
int3
cmp
scas
call
dec
stos
std
push
leave
mov
or
cmp
jbe
sub
add
mov
addr16
cmpsb
push
icebp
add
push
in
cmpsb
call
mov
mov
adc
lret
cmc
call
test
jno
test
shl
stos
sti
aam
sbb
es
adc
pop
xchg
add
add
jb
fisubrs
adc
jle
push
or
xchg
inc
jg
sbb
out
xor
inc
shr
pop
pop
xor
shrl
stos
xchg
ss
and
mov
cld
mov
jnp
xor
pop
lcall
mov
das
dec
add
rsqrtps
faddl
pop
jge
repnz
imul
das
idivl
pop
aas
loope
lods
icebp
xlat
and
and
mov
jge
adc
pusha
jg
adc
fldt
inc
jns
mov
mov
addr16
je
iret
or
add
enter
ret
stos
rcrb
aaa
xlat
bswap
and
sub
ss
loop
jle
dec
and
pop
jg
sub
loop
daa
rep
das
sahf
cmp
sub
dec
out
lahf
jno
jecxz
pop
cmp
int3
inc
out
xor
mov
inc
push
or
xchg
jmp
mov
mov
call
xor
test
ret
iret
mov
mov
or
subl
push
jmp
adc
push
lds
adc
dec
pop
adcb
xor
cwtl
lret
inc
xchg
fwait
aaa
call
out
and
mov
hlt
add
pop
and
rclb
and
out
pop
int
sbb
sbb
imul
lds
test
pop
xor
addr16
aam
mov
insl
pop
dec
movsb
lahf
fwait
jae
pop
adc
cmp
pop
sbb
and
sub
insl
cmp
loopne
mov
call
mov
mov
adc
push
sbb
jg
push
and
ljmp
inc
lock
fdivs
daa
in
stos
arpl
fscale
push
add
pop
js
mov
adc
fdivr
gs
mov
pop
iret
mov
ds
notl
jne
js
pop
xor
xlat
push
ucomiss
outsl
aaa
jae
push
adc
cmp
into
jle
and
or
in
adc
dec
fcomps
xor
push
sbb
xchg
mov
fdivr
les
stos
test
out
aaa
shlb
popf
mov
pop
ficomps
ret
xchg
mov
mov
loope
ja
sbb
jnp
ret
and
jo
xlat
test
es
loopne
js
or
out
inc
xor
inc
push
pop
dec
enter
add
mov
xor
jne
test
fisubl
mov
mov
scas
dec
leave
inc
cwtl
cmp
and
jne
pop
loope
and
movsl
jp
popf
mov
jns
sbb
mov
aad
out
add
mov
sbb
sub
flds
nop
outsl
pop
dec
xchg
xor
xchg
outsb
inc
imul
pop
test
xor
mov
sbb
jge
mov
loopne
xchg
shl
test
fwait
lcall
adc
shrb
jl
pop
in
cmp
js
repz
leave
sti
sub
cmpsl
push
push
in
jle
push
adc
nop
sub
inc
jb
and
lret
fisttpll
add
push
ljmp
xor
jmp
dec
aas
adc
mov
sub
inc
push
add
mov
pop
sub
cmp
adc
and
push
adcb
add
or
mov
xor
mul
mov
cli
adc
insb
pop
loop
in
mov
mov
add
cmpsb
cwtl
in
mov
cli
push
mov
and
xchg
inc
in
sbb
cwtl
jp
push
nop
cmc
das
clc
mov
inc
mov
les
scas
add
rcll
jp
test
add
mov
add
xor
enter
cld
pushf
loopne
mov
sbb
fistpll
arpl
mov
adc
enter
mov
leave
push
mov
nop
ja
fildl
jle
pop
sbb
jb
das
adc
movsb
std
dec
std
xor
sbb
mov
out
or
lea
mov
sub
pop
lahf
movsb
int3
push
xor
and
sahf
and
mov
jns
add
fsubrp
adc
and
fmull
das
adc
addr16
movsl
pusha
xchg
repz
lea
jbe
into
out
cmpsb
adc
testb
jns
inc
fwait
push
mov
stos
add
xor
mov
adc
add
mov
shll
fistpl
mov
xchg
or
lret
sub
jg
nop
rol
les
fstpl
mov
lds
mov
inc
out
push
jbe
jg
mov
std
or
add
lock
dec
loopne
pop
inc
repz
stc
cltd
fsubs
leave
or
xor
scas
js
test
push
pop
push
je
std
test
push
inc
stc
call
cld
adc
adc
sub
mov
in
push
xor
cmp
cli
testb
subb
rorb
inc
sarb
xchg
push
add
loopne
cwtl
gs
mov
ret
mov
mov
fcompl
mov
fbld
add
push
adc
xchg
icebp
cli
sub
loopne
les
push
and
sbb
or
dec
aad
insl
push
sbb
and
dec
mov
dec
lock
out
add
jo
adc
mov
push
mov
int3
dec
incl
in
inc
std
mov
cmpsb
sub
bnd
sar
push
in
mov
fsubrs
pop
ret
insb
mov
outsl
pop
test
ret
mov
movl
sbb
pop
add
dec
mov
shll
sbb
and
dec
dec
cs
out
push
mov
mov
mov
jmp
pop
xchg
sbb
fcmovne
cmp
sbb
fs
ja
xor
lock
or
or
dec
mov
dec
hlt
mov
cmc
inc
std
test
mov
push
repz
push
idivl
stos
sbb
or
mov
mov
push
js
sub
xchg
insl
jmp
add
js
lcall
cli
pop
loop
push
loop
sti
mov
mov
mov
push
aam
sub
cmp
jno
lds
aaa
push
fcmovbe
push
rdpmc
and
orb
mov
and
js
mov
and
cltd
fdivp
or
or
stos
das
popf
inc
inc
xor
xchg
push
movsl
or
add
scas
cmp
jmp
and
sbb
pop
mov
xor
push
sub
inc
push
or
lods
dec
cmpb
mov
sub
push
repz
fisttps
xor
and
xchg
inc
mov
cmp
cltd
xor
dec
sbbl
mov
mov
addr16
pcmpgtd
mov
loopne
lret
bound
add
ret
pop
roll
cmp
ret
popf
in
iret
xlat
push
cltd
fdivrs
mov
jmp
add
inc
out
xor
jo
add
add
int
cmp
sbb
mov
out
int3
in
movsl
inc
int3
mov
or
sub
insb
fbstp
test
lock
or
dec
movsb
pop
adc
clc
addr16
int
jecxz
mov
push
sbb
mov
mov
icebp
inc
mov
pop
mull
dec
add
orb
gs
out
jmp
pop
in
mov
xchg
enter
or
iret
push
scas
fistpll
nop
out
xchg
dec
pop
mov
mov
jge
push
sbb
xchg
and
cmpsl
stos
adc
daa
mov
add
movsl
mov
adc
xor
dec
dec
sti
jmp
adc
sbb
call
and
insb
test
movb
outsl
into
scas
adc
out
pop
sahf
push
sbb
push
in
sbb
dec
push
into
iret
mov
push
pop
mov
adc
jno
push
in
cli
and
mov
rcrb
sbb
nop
js
addr16
aas
mov
add
push
addl
jmp
imul
xorl
pop
in
insb
pop
fmuls
ljmp
sbb
test
dec
cli
push
movsb
out
jle
popf
fldt
std
movsb
mov
push
sbb
add
or
leave
shrb
and
jle
jecxz
mov
pop
push
lods
mov
stos
adc
adc
fcomps
adc
mov
pop
xor
adc
mov
pushf
pop
adc
xchg
rcll
pop
push
xor
xor
stos
test
sar
or
pop
mov
sub
mov
stos
js
out
xchg
jecxz
push
lock
int3
mov
int3
or
clc
xor
or
jmp
sbb
xchg
je
mov
stc
hlt
sub
icebp
pushf
xchg
pop
mov
mov
xor
xor
push
iret
stos
mov
adc
les
xor
ja
test
jb
or
pop
mov
ja
mov
in
mov
pop
arpl
or
xchg
neg
push
dec
mov
je
adc
std
repz
call
mov
xchg
popa
mov
push
push
loope
mov
push
ss
mov
adc
ret
sub
mov
shll
or
inc
mov
cli
sbb
aam
xor
and
mov
jne
xor
outsb
mov
addr16
push
jb,pn
mov
out
push
pop
aam
cmpsb
xor
jge
mov
jg
xor
xlat
pop
sub
outsl
inc
les
dec
fdivrp
pop
sbb
add
je
mov
push
das
cmp
jns
fsqrt
pop
je
dec
jp
test
sub
lds
adc
sub
sub
stc
push
xor
aaa
or
int
pop
push
rcll
jp
iret
pop
lret
test
loopne
lahf
cmp
xor
cmpb
insb
jecxz
cli
ss
ret
cli
aad
aaa
jnp
inc
cld
pusha
mov
adc
jno
icebp
jnp
sahf
push
sub
ja
push
dec
mov
fistl
add
mov
or
shll
pop
rclb
mov
sbb
push
das
cli
dec
aas
xor
or
xor
stos
rcrl
clc
lods
adc
leave
cmp
fimuls
sub
pop
mov
xchg
lcall
pop
lock
ret
sbb
xlat
shl
pop
jecxz
gs
lret
cmc
cltd
or
test
and
sbbl
pop
jnp
push
clc
test
xor
dec
daa
xchg
xor
xchg
clc
or
call
and
imul
add
jl
sbb
sub
mov
xor
xor
cmc
dec
sti
sub
sar
ret
push
data16
sub
mov
jns
insb
test
aad
call
leave
xchg
loope
loope
xor
push
sbbl
movsb
loop
mul
test
ret
push
xchg
and
jl
testl
bound
pop
hlt
int
push
lahf
cmp
add
lock
fldl
cmc
mov
add
or
mov
xchg
orb
fnstcw
sbb
jecxz
out
adc
cltd
mov
icebp
jbe
popf
mov
call
add
test
sbb
cmpsb
sbb
sbbl
or
xchg
sbb
push
aad
jnp
or
xor
mov
into
push
push
lods
add
mov
sub
jl
mov
mov
out
sub
mov
ficoms
and
cld
pusha
sar
enter
or
test
pop
sbb
out
mov
push
ja
push
push
das
scas
jo
cs
jecxz
add
sub
arpl
leave
mov
mov
mov
mov
sahf
ja
fwait
mov
mov
in
xchg
dec
xlat
mov
int3
jge
sub
adc
push
jle
pop
mov
clc
in
dec
pop
adc
cmp
out
call
sub
out
aas
dec
jne
or
xchg
sub
loope
pcmpgtw
inc
mov
jmp
lock
jae
or
rclb
mov
or
xor
sbb
sarl
sbb
sbb
push
fcmovb
pop
inc
cwtl
pop
cmp
aas
jle
lahf
bound
inc
inc
mov
dec
adc
insl
inc
rcrl
lahf
dec
insl
outsb
scas
pop
aam
mov
cmp
adc
xor
out
pop
ret
dec
test
jmp
iret
daa
mov
out
mov
movsl
add
push
or
aas
push
sbb
push
cmc
test
jo
dec
sar
fdivr
push
dec
mov
cmp
mov
repnz
mov
stos
lock
mov
add
add
cmp
ficomps
sar
add
and
jb
popf
mov
loopne
fwait
sbb
sahf
pop
jno
jecxz
mov
xor
jmp
add
and
in
in
jbe
sarb
aaa
mov
cltd
sbb
or
mov
jg
pop
in
cmp
sar
call
pop
filds
mov
and
sub
xchg
or
into
sbb
ds
sti
mov
add
js
xchg
mov
pushf
jns
inc
and
aaa
es
xchg
fdivs
out
fs
jmp
inc
lret
mov
cmp
pop
nop
sbb
inc
ret
mov
call
or
pop
rcr
into
jmp
subb
repnz
lret
inc
les
int
and
ljmp
enter
inc
xor
int3
faddl
add
mov
imul
iret
cltd
mov
adc
aas
pop
out
cmpsl
sarl
into
sbb
pop
jl
sbb
sub
add
int
adc
pop
jo
data16
aad
jb
or
arpl
sbb
aam
addr16
pop
fwait
mov
movsl
cs
dec
mov
js,pt
idiv
cmp
pop
insl
xor
inc
and
aam
es
pop
outsl
push
outsl
jg
rolb
lds
cmp
dec
jne
arpl
or
or
or
sub
sub
lods
call
or
ret
jle
add
outsl
movsl
and
pop
negl
push
xchg
inc
xor
test
mov
fdivrl
js
xchg
rorb
mov
jle
dec
in
push
imul
adc
sub
jle
cld
add
negw
stos
add
rolb
jo
add
ret
orb
sub
rorb
pop
repz
mov
sbb
popf
jb
and
in
cli
push
shl
int
dec
aaa
outsb
mov
adc
pop
test
mov
jecxz
iret
xchg
scas
xchg
pop
and
inc
ja
cli
or
jnp
push
flds
lcall
scas
repz
sub
cld
xor
sub
sbb
push
dec
cld
scas
mov
xchg
dec
ret
lds
lds
fistl
idivl
xor
and
ficompl
push
jb
add
movsb
xlat
rolb
adc
mov
in
mov
sbb
int
in
dec
sub
jmp
sub
rcll
push
rcrl
mov
xor
fcmove
mov
jne
jns
pop
fnsave
pop
cmp
sbb
addb
xchg
int
out
lahf
dec
sbb
icebp
icebp
out
call
mov
in
mov
add
cmp
mov
cmp
xchg
aam
test
sbb
arpl
inc
lahf
js
mov
mov
pop
push
aaa
mov
jb
inc
movsb
pop
and
je
jge
ror
mov
cwtl
mov
mov
dec
inc
jmp
sti
les
or
cmp
lahf
fwait
add
sub
je
adc
cmp
sahf
mov
lcall
mov
adc
xor
xchg
ret
xchg
sbb
pop
mov
inc
push
pop
or
sub
popa
into
mov
mov
ret
or
scas
pop
adc
jmp
mov
cmpb
dec
jae
mov
movsb
sbb
xorb
ss
jp
stos
pop
test
pop
cmpsb
or
and
nop
adc
mov
push
mov
and
xchg
mov
ss
jne
lret
lock
dec
aas
mov
mov
imul
cmpsl
xor
jl
adc
js
adc
xor
out
shlb
hlt
in
xor
xchg
and
push
ds
and
movsb
imul
popa
fwait
pushf
jmp
test
out
mov
es
push
dec
insl
testb
lods
add
in
push
pop
or
push
test
imul
lds
adcl
sahf
shrl
scas
enter
dec
sbb
cmpsl
inc
sbb
mov
hlt
jo
adc
rclb
fcmovb
mov
loope
mov
adc
cmp
cmp
inc
fimuls
imul
cmp
test
mov
sub
sbb
daa
fimuls
jae
out
push
aam
xor
incl
or
mov
inc
out
outsl
leave
xor
dec
movsb
xor
mov
clc
lock
lret
cmp
xchg
test
mov
fstpt
sub
jle
stos
lret
jb
xchg
mov
orl
fistpl
xchg
lret
stos
mov
popf
in
sub
xchg
fisubrs
ficompl
std
or
pop
dec
mov
or
jo
pop
imul
dec
cmp
int3
mov
stos
add
pop
cmp
fistl
pop
xchg
add
dec
jnp
test
mov
fists
lahf
imul
sbb
sub
fcmovbe
insl
cmp
adc
arpl
fcmovnb
ss
cmc
dec
push
push
pop
or
mov
mov
jle
add
push
xor
sub
adc
movsl
lcall
add
pop
in
sbb
mov
mov
hlt
fcoml
dec
cld
jb
shll
out
in
or
and
ss
pusha
push
int3
xor
outsb
enter
lret
cltd
repz
rolb
pop
pop
into
mov
add
popf
jmp
outsl
gs
mov
adc
fistpl
dec
dec
add
mov
int
push
push
adc
jnp
pop
aad
fidivl
ljmp
jb
test
sbb
or
mov
jnp
pop
cmp
ret
xlat
pop
cmpsl
in
adc
insl
or
jno
addr16
lahf
mov
add
pop
aad
sub
or
inc
ja
cmp
add
testl
push
addb
push
sbb
arpl
pop
mov
push
fidivs
push
jg
mov
cli
sar
inc
std
mov
lret
pop
repnz
mov
and
xchg
sbb
sbb
sub
push
int3
bound
dec
cmpsb
loope
pop
sub
mov
push
push
fiadds
push
or
xor
add
popf
rolb
inc
push
lods
mov
xchg
fidivrs
pusha
test
rorb
ds
iret
sub
jnp
imul
inc
stos
xor
push
lds
test
loope
mov
fisttps
popf
push
push
dec
jns
cmp
add
daa
adc
pop
int
sub
mov
bound
loop
push
icebp
push
das
leave
sbb
push
and
mov
push
jge
jno
imul
ss
stos
inc
mov
enter
or
xchg
and
lea
add
jp
dec
into
sub
out
cmp
shl
je
pop
push
jns
jnp
add
iret
repz
lcall
cmp
xchg
cmp
lret
les
mov
mov
and
gs
hlt
int3
pop
mov
push
std
in
sti
pop
cmp
mov
lahf
jbe
fcmovu
mov
mov
sahf
xor
jp
jae
mov
sub
add
out
cmpb
cmpsl
cltd
jo
loope
jle
lock
xor
pop
add
xchg
rcl
cmpl
push
xchg
repnz
cmpb
add
mov
push
mov
push
mov
adc
out
mov
adc
add
nop
cmp
inc
and
lods
push
addb
jne
and
fwait
xor
fdivs
test
sbb
or
fimuls
dec
push
pop
nop
xor
lock
pop
dec
xabort
daa
push
add
mov
sub
jbe
pop
outsl
mov
pop
testl
jns
adc
cmp
stos
push
cmp
imul
cwtl
mov
sbb
hlt
push
sbb
push
insb
mov
fsubr
pop
fdivr
adc
out
bound
add
inc
outsl
jl
fucomi
mov
xchg
mov
and
xchg
pop
jnp
dec
nop
cmp
rol
lds
xor
rolb
fadd
mov
divl
xchg
arpl
sbb
jnp
mov
leave
lret
lret
fwait
pop
push
add
pop
pop
ret
rcll
mov
movsl
out
jo
ficoms
idivb
hlt
jo
jl
push
frstor
mov
enter
or
rcll
fcoml
lods
dec
lahf
testb
cwtl
cmpsb
sbb
loop
jne
jge
xor
cs
and
subl
inc
movsl
arpl
mov
loope
push
mov
mov
hlt
popa
pushf
and
mov
xchg
sbb
fidivrs
call
mov
sub
cmc
cmpsl
push
pop
pop
jmp
mov
jg
lret
sbb
mov
mov
movsl
mov
xor
dec
lcall
jge
loopne
daa
int3
lret
aaa
xchg
mov
xchg
int3
andl
sub
mov
bound
leavew
jns
push
frstor
rorl
outsl
inc
shlb
lahf
push
or
mov
mov
gs
jle
pop
mov
int3
and
roll
pop
xchg
xchg
inc
xchg
push
sbb
stc
or
mov
fdivrl
or
stos
arpl
or
orl
lea
andb
jg
sub
int3
fistps
pusha
mov
test
add
in
or
ret
dec
jo
jnp
add
dec
les
hlt
or
jne
rclb
sbb
lea
push
call
shrb
loope
daa
mov
lahf
rorl
jae
sti
psubb
or
push
shrb
mov
push
jno
loope
or
inc
lahf
mov
bound
lcall
int3
dec
xor
test
xor
sbb
and
lcall
dec
jbe
adc
push
adc
int
add
inc
sbb
test
mov
icebp
jnp
or
scas
xchg
xchg
test
mov
out
out
lock
stos
outsb
movsb
or
lcall
adc
mov
inc
adc
push
jge
or
push
push
ljmp
mov
sti
in
out
fdivrl
mov
cmpsl
out
sbb
nop
test
jp
ja
jge
adc
cmp
add
outsl
shlb
int
mov
cmpsl
jns
mov
mov
lcall
sbb
cmovs
add
cld
and
test
in
mov
idivl
loop
push
xchg
push
mov
xchg
data16
pop
add
bnd
xchg
xchg
mov
xchg
mov
adc
lahf
cltd
mov
or
js
cmp
mov
icebp
sbb
mov
jnp
dec
lock
or
lods
shll
push
push
fsubl
add
mov
push
pop
dec
xchg
inc
nop
xchg
pushf
loopne
xlat
push
sbb
inc
inc
pop
in
xor
and
xor
hlt
jns
out
std
test
push
inc
mov
or
sbb
in
xchg
mov
jge
aas
mov
in
adc
xor
test
es
pop
dec
aam
ret
cmp
ljmp
adc
pop
test
dec
mov
fisttpll
cmp
aas
sti
loope
sub
xchg
or
or
jle
ret
in
or
addl
test
add
pop
mov
sub
pop
and
rorl
aad
lock
mov
jl
sbb
pop
fsub
stos
lcall
dec
in
sbb
or
repz
pop
sbb
insl
stos
jl
dec
js
clc
mov
add
vpaddsw
cmc
or
icebp
loopne,pt
shll
adc
pop
mov
cmpsl
int
and
jge
xchg
sub
pop
stos
stos
xchg
daa
xchg
or
xor
inc
mov
mov
nop
push
mov
ljmp
push
gs
imul
mov
bound
gs
outsl
out
rcl
cmpb
loopne
xchg
hlt
outsl
andl
push
dec
je
mov
rorl
rorl
xchg
mov
mov
xlat
xchg
pop
adc
gs
mov
jae
mov
fdivrl
out
mov
in
mov
and
hlt
adc
add
pop
pop
arpl
addr16
mov
add
dec
or
lret
cwtl
fwait
push
mov
dec
xor
add
aad
pop
mov
jne
jns
xchg
shll
rcr
xor
sub
inc
daa
scas
mov
cli
xchg
fildl
pop
xchg
imul
aaa
adc
or
ror
rcr
inc
imul
aad
rcrl
cmp
xchg
sti
jecxz
pop
loope
sbb
testb
adc
out
xchg
or
or
fdivl
mov
insl
mov
push
push
cmpsb
pop
into
push
xlat
lcall
inc
lods
add
fidivrl
scas
lea
imul
jb
fldenv
jo
sahf
lcall
outsb
cmc
dec
imul
cmc
daa
pop
sti
pusha
scas
mov
sti
push
test
aad
pop
in
out
lcall
mov
mov
pop
aam
mov
inc
add
jmp
mov
loopne
mov
nopl
sub
cmpsl
sbb
cmp
popa
mov
mov
stos
push
lahf
cld
sbb
mov
ljmp
and
push
sahf
sahf
cmpsl
addr16
cmp
adc
insl
outsl
mov
call
adc
push
xchg
jno
dec
enter
xchg
dec
cmp
dec
push
rcl
out
jo
scas
not
jecxz
inc
mov
sbb
jb
sub
push
out
aad
mov
mov
into
loop
pop
jbe
inc
in
int3
mov
mov
mov
test
shlb
rcl
bound
in
imul
je
adc
lahf
or
push
in
lods
mov
cs
daa
into
mov
rorb
push
push
lods
out
dec
outsb
push
popf
and
dec
notl
cmp
pop
and
jg
dec
fistpll
adc
nop
outsb
loopne
popf
aaa
out
sarl
xacquire
imul
add
mov
js
mov
jno
inc
sahf
notb
ja
mov
xchg
lea
fisttpll
es
aaa
sbb
in
fs
xor
add
aad
mov
test
adc
mov
and
or
outsl
dec
pop
outsl
xchg
or
sbbl
movswl
mov
xor
dec
in
insl
scas
stos
add
xlat
shlb
out
ss
shrl
in
cmp
pusha
sahf
jo
push
fcmovbe
rcr
call
test
sbb
pop
rcll
dec
mov
mov
xchg
dec
stos
fcoms
fisubs
cwtl
mov
out
sub
sub
mov
lret
adc
pusha
jns
inc
xor
out
add
cmp
adc
mov
add
pushf
mov
mov
and
jge
mov
cs
call
inc
pop
cli
scas
data16
add
insl
pop
jno
mov
lcall
push
mov
xchg
push
aas
hlt
and
pusha
sbb
jecxz
jmp
jns
and
int
and
jnp
sti
add
jae
push
pop
sub
pop
imul
cmpsb
inc
mov
out
stos
sub
negb
push
dec
shl
test
sub
mov
adc
adc
insb
test
add
rcrl
pop
mov
out
inc
fdivs
mov
jle
in
or
cmpsb
arpl
jle
mov
inc
arpl
sbb
andl
mov
mov
fcomps
or
in
cmp
cmpsb
insb
push
cmp
test
test
popf
pop
xchg
ret
adc
push
inc
dec
sub
lcall
jb
cs
insl
or
dec
inc
jl
pop
jecxz
fldenv
adc
xstore-rng
cmpsl
add
jnp
js
fdivs
ret
mov
jp
enter
xor
in
fwait
inc
test
rorb
dec
dec
mov
mov
fstl
jg
inc
test
pusha
inc
jb
mov
jg
ljmp
xorl
repz
test
je
and
jae
outsl
mov
xor
stc
out
adc
adc
jnp
stc
and
inc
lahf
imul
shll
mov
xchg
ror
jo
cmp
mov
jle
les
push
ja
lods
pop
jecxz
inc
stos
pop
mov
dec
pop
jecxz
push
jnp
imulb
adc
push
cmp
cld
xchg
xchg
adc
repnz
shlb
clc
sub
add
outsl
not
cli
into
ret
pop
rol
cli
repz
js
out
sub
adc
jno
lcall
fs
leave
mov
jp
lods
pop
int
imul
dec
daa
cld
lea
cmpsl
int
mov
ficoms
dec
bound
dec
repnz
clc
cltd
popa
enter
rcll
sbb
sub
cmp
jl
loop
cmc
ja
xor
call
adc
fnstenv
pop
push
push
fdivs
ficoml
lods
movb
enter
lock
repnz
fisttpll
adc
mov
stc
test
lcall
aaa
fidivrl
add
fbstp
out
lahf
sub
loopne
sub
repz
pop
fnstsw
ret
push
iret
ljmp
inc
inc
adc
out
sti
sub
xchg
sbb
js
out
or
adc
loopne
xor
fldt
es
das
ret
or
mov
mov
xchg
and
ljmp
sub
aam
std
jmp
cwtl
fs
jns
rolb
jae
cltd
xor
mov
scas
pop
mov
mov
movsb
push
jecxz
add
rol
xchg
pop
mov
scas
xchg
pop
mov
rorb
sub
xor
push
in
push
or
ss
cmpsb
jmp
mov
insb
xchg
shl
mov
pop
clc
in
loop
mov
mulb
fnstsw
jmp
jb
pop
lret
or
sbb
add
int
shlb
inc
push
and
jmp
and
push
lahf
mov
lods
inc
test
adc
ds
cmc
fmuls
lea
fwait
dec
pop
cli
ljmp
inc
xchg
jns
loope
out
icebp
shlb
mov
xchg
cmp
fwait
addr16
or
jle
iret
dec
inc
cld
adc
movsb
repnz
mov
sub
inc
adc
scas
jp
neg
sbb
push
push
clc
les
aaa
jne
jmp
jae
jp
mov
xchg
stos
push
imul
out
push
push
xor
sub
add
mov
cmp
test
cmp
adc
cmpsb
adc
inc
sbb
or
inc
cmp
insl
mov
cli
test
sub
mov
or
mov
and
call
mov
dec
shl
popf
inc
and
in
mov
jmp
ljmp
inc
pop
lock
cmp
xchg
dec
jge
fdivrp
jb
xchg
dec
es
inc
in
mov
mov
cli
je
incl
test
sbb
adc
lods
js
nop
out
mov
movsl
lds
in
jp
sbb
orl
mov
inc
pushf
and
adc
or
add
enter
shll
imulb
mov
adc
mov
adc
push
inc
pop
mov
cmc
adc
sub
dec
cmpsl
mov
or
mov
ds
dec
cmp
adcb
sub
in
ljmp
aas
add
cs
adc
or
cmp
aas
push
aaa
mov
cld
and
in
push
pop
jmp
mov
jae
xor
inc
cmpsl
scas
nop
std
xor
sahf
xor
cs
jno
ljmp
jo
fisubrl
popf
dec
jbe
xor
xchg
daa
push
jo
lock
mov
in
movsb
inc
test
fcmovbe
jle
adc
xchg
xchg
fists
pop
push
pushf
xor
adc
adc
in
xchg
test
call
cmp
or
adc
push
dec
xchg
adc
xchg
push
sbb
jmp
jno
pop
xor
push
and
inc
bound
hlt
jmp
adc
popf
in
roll
imul
imul
mov
movb
jecxz
mov
arpl
adc
outsl
mov
out
push
call
out
lock
add
dec
xlat
les
mov
or
xchg
add
xorl
scas
mov
mov
subl
jbe
mov
fimull
out
add
in
std
insb
cld
jp
sbbb
mov
jae
sub
sub
fisubrs
pusha
cmp
xor
add
stos
jae
pop
fs
push
xchg
ret
add
xlat
and
push
xor
pop
mov
shrb
loope
pop
sub
jns
fs
pushf
xor
add
lahf
fstl
jno
lcall
cmp
lahf
mov
in
test
fstpt
jb
gs
cmp
call
mov
iret
cld
jp
sbb
sub
dec
mov
pusha
ss
in
and
inc
xchg
sub
outsl
jnp
sarl
js
insl
lds
in
sbb
mov
or
push
inc
ja
or
inc
stos
std
shl
add
sub
ss
xor
icebp
and
dec
inc
fldl
mov
pop
fmuls
inc
scas
jmp
xchg
cmpsl
outsb
mov
mov
mov
sbb
sub
mov
cmc
repz
and
mov
cli
movsb
dec
out
aam
xor
icebp
cli
cli
pop
mov
xchg
sub
xchg
mov
push
push
adc
mov
inc
fisttps
mov
push
xor
pop
inc
cmp
loop
push
inc
dec
mov
popf
adc
mov
mov
cmp
shr
adc
mov
rcll
or
xchg
push
xlat
out
repnz
fcomps
add
mov
ffreep
lret
popf
jno
enter
popf
dec
bound
or
mov
mov
sbb
dec
lret
pop
leave
divl
xor
and
fstp
cltd
push
xchg
sub
pop
jecxz
inc
xchg
cmp
in
aas
imul
or
xchg
inc
sti
mov
pop
adc
xorl
mov
scas
xchg
arpl
leave
stos
les
sub
lahf
pop
fs
ret
test
sub
push
ja
rol
lods
cs
pop
pop
test
rclb
pop
dec
loope
adc
into
cwtl
and
xor
mov
icebp
mov
jae
dec
or
pop
repnz
mov
jl
add
daa
not
bound
pop
mov
jge
addl
imull
fiaddl
sub
xchg
push
inc
xchg
jnp
movsb
push
add
xor
in
ret
ss
les
nop
xor
jne
aad
rcrl
mov
xchg
shlb
xor
jge
add
cmpl
dec
lods
mov
jo
repz
pop
sbb
xor
jecxz
ds
cmp
sbb
test
or
std
out
or
ret
and
jp
xchg
sbb
fists
int3
fsubrs
popa
xor
fwait
and
lea
mov
fwait
jnp,pn
pop
test
sti
xchg
dec
jne
dec
sub
inc
sbb
gs
xor
add
add
mov
push
mov
stos
add
fs
mov
std
js
xor
xchg
push
add
push
mov
mov
pop
imul
lods
push
pop
push
mov
adc
loope
xchg
xchg
test
lret
movsl
jne
movsl
nop
aam
pushf
sbb
push
adc
ja
mov
frstor
das
psubw
xor
dec
sub
push
jne
iret
jo
mov
sahf
fdivp
dec
hlt
imul
movsb
mov
and
pop
pop
pusha
lcall
lret
push
cmc
pop
imul
int
and
outsb
mov
leave
sub
ds
cmc
jne
pop
aam
test
inc
dec
add
cmp
sbb
sbbl
inc
pushf
in
test
pop
pushf
jmp
stos
bound
pop
rcll
mov
mov
decl
fcmovbe
fidivrs
push
and
cmp
jnp
pop
notb
test
loopne
add
dec
jns
jecxz
push
enter
dec
cmpb
das
jp
es
sub
add
mov
and
enter
mov
ret
scas
or
movl
cmpsl
ja
sarl
ss
ficomps
pop
pop
das
xchg
lock
fwait
inc
arpl
sbb
repz
sbb
adc
imul
and
lahf
mov
push
lahf
push
or
jae
xchg
lcall
xor
out
xchg
mov
cwtl
jbe
pop
ds
lret
insl
loopne
and
inc
in
cmp
scas
pop
lock
call
inc
jno
test
je
dec
jle
enter
xor
add
daa
pop
arpl
jmp
dec
pop
stc
cltd
ret
pop
scas
or
mov
xor
cmc
jne
mov
jb
bound
fs
add
outsb
test
cmp
push
cmp
xor
cmc
in
inc
sub
out
dec
aas
test
mov
pop
cltd
push
lods
fdivl
mov
rclb
and
xabort
rorl
sbb
sbb
std
cmpb
andl
cs
lds
push
pop
pushf
push
dec
mov
dec
lods
xor
out
dec
mov
add
push
in
out
and
scas
xor
es
clc
mov
or
test
out
ja
and
dec
mov
mov
fistpll
push
fadds
mov
aam
cs
loopne
ljmp
insl
cli
mov
repnz
lea
pop
shrl
lcall
sbb
mov
push
lock
xlat
dec
std
icebp
imul
daa
xchg
fmull
mov
jo
pop
mov
jp
sbbl
xor
sbb
test
inc
sbb
fcomps
mov
inc
js
std
add
adc
adc
loopne
jmp
repz
pushf
pop
rcl
loopne
fs
cmp
mov
mov
xchg
mov
sbb
push
mov
and
setg
addr16
xchg
mov
imul
or
pop
cmpsl
lock
rcll
inc
in
sub
je
imul
push
pop
sbb
sbb
stc
sub
cli
dec
cmp
or
out
les
enter
jae
lods
xchg
and
stos
dec
pop
jae
lods
std
xchg
mov
jmp
mov
icebp
mov
ss
scas
sbb
jb
push
dec
cs
mov
sbb
mov
add
sub
test
repnz
pop
jnp
scas
adc
stos
inc
test
mov
repnz
mov
inc
lock
jb
nop
inc
ja
cld
dec
fistl
sbb
test
and
dec
sbb
sub
pop
flds
xor
in
dec
xlat
adc
cmp
jle
add
lcall
add
jbe
in
loope
sub
test
cwtl
adc
dec
mov
mov
mov
mov
push
xor
sbb
mov
dec
dec
sub
mov
icebp
push
xor
and
fstpl
sbb
xlat
xchg
sub
adcb
insl
hlt
stos
pusha
lret
jbe
xchg
and
jecxz
and
jl
cli
hlt
sbb
mov
mov
add
push
lods
pop
dec
gs
jmp
clc
in
pop
xchg
dec
and
and
daa
fs
mov
inc
jge
addr16
mov
jo
lods
enter
test
add
sub
jae
sub
icebp
int
sub
xlat
lret
pop
push
sub
iret
mov
add
pushf
jmp
ret
or
lret
stos
mov
pop
xchg
scas
lea
jmp
nop
dec
mov
xor
out
out
push
cmp
dec
or
outsl
loopne
push
mov
sbb
out
jo
pop
sbb
xchg
push
mov
or
and
das
fcoms
cmp
xor
adc
push
adc
mov
mov
push
outsl
adc
push
call
ljmp
pusha
je
les
lds
sub
cmp
js
cmp
push
xor
adc
stc
dec
and
xor
outsl
lcall
adc
mov
pop
push
xchg
out
jo
sbb
cmpsb
into
loopne
mov
push
movsl
flds
sub
stos
mov
mov
inc
mov
clc
leave
bound
mov
ja
pop
sub
adc
scas
mov
adc
pop
push
out
jl
and
into
xor
mov
das
and
mov
insl
push
fsubs
jno
out
sbb
rorl
out
pushl
mov
shrl
xor
movsl
adc
adc
scas
or
cli
pushf
and
das
jae
aaa
fimuls
mov
sbb
push
dec
mov
outsb
jo
or
xchg
jae
adc
xorl
jle
ficoml
lock
psrlw
dec
mov
orps
adc
mov
enter
hlt
pop
or
dec
and
push
or
outsl
push
stc
sbb
lret
jp
jno
and
test
mov
scas
subl
xchg
mov
xor
sub
cmp
repz
mov
scas
mov
aaa
adc
pop
les
mov
imul
jne
fistps
push
jns
out
sbb
jnp
es
out
jp
jo
sbb
jle
jns
mov
stc
mov
popa
sbbl
xor
dec
or
pop
sbb
lcall
push
xchg
test
fld
sbb
sbb
je
ret
push
mov
push
dec
xlat
mov
pushf
and
std
sti
stc
pop
pushf
mov
fldl
stc
gs
adc
lods
jnp
js
ret
iret
dec
jnp
sbb
jae
fsub
aam
out
in
mov
xchg
adc
pop
inc
mov
nop
es
ljmp
fimuls
inc
or
jmp
jno
rcl
cmc
inc
sbb
out
mov
cwtl
mov
and
loopne
xor
and
decl
stc
sti
or
sub
addb
mov
out
nop
inc
xchg
mov
ficompl
imul
xor
adcl
gs
notl
ss
test
ds
mov
push
pop
fcmove
popa
jo
ret
imul
lret
cltd
and
je
pop
mov
in
inc
insl
inc
stc
dec
ss
cli
mov
push
fmul
push
in
jle
fcompl
icebp
sti
pushf
hlt
jmp
push
mov
mov
inc
mov
imul
or
pop
pop
jb
popa
mov
inc
push
mov
mov
pop
ffreep
lds
jl
movsl
cld
mov
push
add
mov
mov
nop
dec
pop
in
mov
and
sahf
insl
adc
add
lock
jmp
sbb
sub
jae
jnp
xor
dec
sti
adc
rorl
imul
pop
sub
sbb
mov
std
sbb
inc
sahf
jg
mov
aad
arpl
cmp
adc
arpl
arpl
pop
daa
out
dec
adc
xchg
fnstenv
cmp
fdivr
int
jne
mov
out
stos
cltd
mov
lret
add
mov
aad
popf
repnz
jnp
pop
pop
stos
test
hlt
jmp
jmp
adc
pushf
loopne,pt
push
push
add
jge
ds
stos
sahf
mov
fcmovnbe
cli
mov
lock
jmp
idiv
loope
lret
stc
jns
push
enter
daa
and
scas
mov
cli
mov
inc
test
leave
js
xchg
sbb
add
ds
call
jecxz
sub
cld
cmp
pop
clc
pushf
lods
adc
out
sub
add
jbe
in
and
xchg
dec
jle
sub
jp
inc
add
sbb
xor
js
rcrl
aaa
popa
sbb
pop
sbb
push
call
xor
mov
loope
cmp
ss
loopne
or
pop
in
xor
addb
jge
jb
lea
lahf
stc
sahf
lret
andnps
inc
xchg
js
push
and
in
and
jl
in
and
xchg
notl
sahf
lds
mov
and
lret
jl
mov
jnp
jns
push
mov
call
jge
and
add
gs
adc
cmp
jl
mov
mov
mov
inc
repnz
sbb
jmp
mov
jno
scas
mov
push
or
pusha
addl
pop
add
sbb
jle
arpl
imul
sbb
push
inc
mov
inc
out
and
fs
aad
xchg
cwtl
movl
cmp
xadd
xor
xchg
aas
jge
scas
lcall
test
xchg
push
in
xchg
ss
adc
pop
repz
fdivl
notl
movsl
mov
arpl
aas
pop
outsl
sbb
ja
ror
out
les
pop
and
rcr
in
shll
mov
lret
popa
jb
leave
pushf
scas
dec
repnz
mov
inc
adc
jb
arpl
xchg
and
and
pop
xchg
in
xlat
ds
adc
sbb
cmp
in
inc
adc
and
inc
cltd
orb
xchg
jp
sahf
inc
daa
dec
out
mov
outsl
push
mov
stos
lcall
lret
adc
mov
lret
lret
jp
xchg
imul
icebp
xor
imul
jmp
sbb
test
or
pop
lcall
out
lahf
iret
sbb
std
dec
add
fs
mov
xor
std
movsl
std
jae
cwtl
inc
stos
addr16
add
mov
rsm
lahf
pop
movsl
lods
mov
inc
imul
mov
cld
push
mov
sbb
adc
add
ficompl
loop
loop
jle
and
iret
adc
sub
rcrl
mov
movsb
icebp
out
ljmp
stos
xchg
and
xor
ss
push
lock
mov
out
pop
dec
sub
cmp
push
jl
dec
cwtl
imul
or
daa
cmpsl
adc
sub
sahf
scas
push
mov
inc
pop
jbe
or
jne
cmpsb
jp
ret
popf
in
mov
mov
mov
int3
pop
scas
cmp
mov
jecxz
adc
lcall
jnp
jge
fwait
std
sahf
data16
iret
push
ljmp
aas
loope
out
add
push
stos
xor
roll
dec
imul
adc
out
lods
xchg
xor
mov
mov
in
out
cmp
test
inc
cmp
push
call
dec
xchg
sub
shr
inc
mov
idivl
pop
dec
mov
sub
loop
stc
in
rcrl
pop
inc
cmp
insl
push
sbb
add
ret
in
inc
je
mov
fsubrs
out
cmpsb
testl
aaa
add
and
lods
xchg
add
sub
sub
popf
cs
lret
jge
cmp
sbb
push
or
js
cmp
dec
ds
or
lds
and
and
xadd
push
es
mov
std
stc
add
jno
cwtl
mov
sbbb
rcr
lods
negb
subl
sub
cmp
adc
dec
pop
add
gs
xchg
mov
xlat
sbb
paddq
sbbb
cmp
adcl
mov
jae
imul
xchg
lret
test
xorl
pop
scas
xchg
cmpb
inc
and
ss
movsl
push
inc
lret
dec
mov
mov
and
jnp
mov
push
sbb
lea
mov
in
fsubrs
mov
inc
mov
cltd
stos
test
rorb
xchg
xor
lods
out
pop
pop
cs
mov
dec
xchg
inc
ss
xchg
fadds
jb
mov
add
lds
jbe
pop
ret
dec
dec
std
or
or
les
sbb
or
and
roll
push
daa
mov
out
mov
push
loop
dec
mov
cmpsl
aam
xor
shll
pop
imul
fiadds
xor
lock
adc
xor
jnp
insb
push
pop
stos
adc
enter
rorl
sub
test
pop
clc
or
pop
sub
filds
sbb
sbb
ret
ds
movsl
sub
int
push
outsl
aas
add
adc
jne
sbb
aas
mov
dec
fisubrs
pop
test
mov
or
lahf
das
imul
int
push
fwait
pop
xchg
mov
incb
sub
sub
xchg
dec
arpl
or
fldt
or
jge
scas
mov
sub
clc
push
mov
icebp
inc
jne
push
into
cmp
xor
pushf
xor
imul
bound
adc
mov
andb
pop
and
jno
or
inc
sahf
xchg
xchg
call
sti
and
lahf
std
pop
call
lcall
popf
jge
sub
xchg
inc
adc
and
outsl
mov
inc
cmp
dec
mov
nop
and
jnp
repnz
enter
dec
mov
or
repnz
xchg
popf
sub
ror
jae
mov
dec
sbb
fiaddl
ret
xor
and
fnsave
adc
xor
pop
jl
clc
andl
cmp
iret
stos
add
aas
and
dec
aas
lret
repnz
mov
icebp
cmpsl
mov
pop
nop
outsl
pusha
in
inc
mov
jns
jle
repnz
mov
pop
jns
xlat
fucomip
push
lods
stc
push
imul
and
cmp
or
jnp
call
andb
inc
das
dec
mov
sbb
inc
mov
stos
outsl
push
outsl
xchg
es
lahf
fmul
into
xlat
mov
add
and
mov
fcompl
enter
or
popa
pop
add
stos
jne
dec
adc
mov
mov
out
pop
ja
fcomps
jmp
jl
rorb
notb
sbb
das
stc
sbb
xchg
and
pop
sbb
xorb
jg
sbb
and
repz
ljmp
mov
xchg
cwtl
lahf
lock
out
idivl
mov
out
and
test
pop
jno
stos
dec
hlt
sbb
arpl
jns
test
push
and
aad
sarb
insl
mov
mov
adc
dec
mov
lcall
dec
xchg
fisttpll
jb
sub
aaa
ds
pop
xchg
sub
rcll
rcr
loop
daa
jl
test
scas
out
stos
les
not
xor
js
andb
dec
add
cmpsl
fidivs
push
cwtl
pop
jg
cmpb
sbb
inc
stc
jo
testb
rcrb
jp
repnz
cs
xchg
lcall
lods
sahf
stos
and
mulb
jns
flds
xchg
mov
sbbb
push
pop
mov
cmc
dec
and
std
movsb
sahf
dec
xchg
fisubrs
fimull
dec
popf
mov
pop
mov
jge
mov
outsb
xchg
jno
cmpsb
ret
cwtl
hlt
cli
jg
lods
and
mov
test
add
int3
fwait
out
test
dec
add
int
ljmp
lret
push
or
or
xor
cwtl
mov
mov
sbb
and
call
dec
mov
mov
push
cwtl
mov
mov
mov
adc
xor
faddl
inc
mov
push
scas
testb
cmp
aaa
std
je
add
push
inc
lret
dec
jl
pop
div
cmpsb
loop
mov
mov
add
ds
sub
loope
int
xor
pop
fisubrs
nop
je
push
inc
sub
rcll
stc
dec
int
sbb
pop
dec
and
xor
push
push
jg
arpl
cmpl
int
pop
lea
sbb
xchg
inc
or
and
out
adc
push
in
xor
fs
out
je
jg
add
mov
std
sbb
jb
push
call
jmp
mov
neg
jo
in
pusha
sub
cmpsb
in
test
inc
jmp
mov
rcl
into
push
fadd
adc
fists
sub
mov
test
pop
sub
lret
adc
or
push
scas
jl
fdivr
xchg
das
cmp
std
pop
into
mov
xor
xchg
jp
int
lret
mov
mov
xor
filds
dec
pop
mov
andb
loop
inc
add
movsl
stos
xchg
in
sbb
jb
call
sub
push
dec
push
pop
mov
aam
cmp
inc
and
ljmp
sbb
pop
sti
loopne
js
sbb
pop
cs
sub
lods
sub
stos
aas
cli
lcall
pop
mov
adc
gs
inc
sbb
mov
int
sbb
mov
lea
pusha
adc
jp
and
sbb
add
cmpsb
cld
and
push
stos
sub
pop
fldenv
push
or
jl
mov
push
arpl
iret
xlat
outsl
inc
push
sub
xor
and
mov
pop
fcoms
rorl
jge
loope
daa
hlt
je
testl
and
fdivr
dec
sub
into
push
cmp
fwait
in
xchg
sub
mov
test
cmp
push
addb
jl
repz
inc
jl
push
andb
or
les
test
lcall
pusha
push
mov
xlat
mov
insl
xchg
mov
or
jne
in
dec
cwtl
fimuls
mov
and
and
add
jae
xchg
dec
stc
xchg
sbb
mov
dec
lahf
nop
add
test
xchg
inc
insb
lock
jge
aaa
xchg
inc
loopne
pmaxub
sbb
daa
scas
and
lds
xchg
pop
cmp
test
push
xchg
ds
push
xlat
cli
adc
pop
mov
cmpsl
pusha
mov
push
lock
imul
cmp
xor
popf
leave
sub
ds
sti
nop
int3
test
aad
jge
jg
rcll
jnp
inc
les
sarb
in
mov
push
pushf
dec
mov
and
insb
xchg
lods
inc
or
xchg
push
inc
xor
jae
dec
pop
aas
xchg
in
fistpl
lcall
insb
mov
dec
mov
mov
adc
scas
mov
lret
int
and
dec
movl
jne
leave
ret
xchg
adc
cmp
mov
inc
imul
cs
lret
jnp
mov
sbb
mov
aas
dec
fisubrs
das
xchg
dec
add
lods
out
push
or
ret
std
sub
adc
sub
fiadds
mov
jne
out
cmp
jno
push
int3
repz
outsb
jae
push
dec
mov
pop
aad
mov
sub
dec
cmc
push
addl
add
or
cmp
xchg
loopne
xchg
popf
jecxz
je
xor
lcall
dec
pop
test
fldl2e
mov
pusha
dec
mov
jns
movl
nop
test
bound
ds
sub
or
mov
and
sahf
arpl
clc
test
inc
ret
pop
jo
fdivrl
push
jle
pop
roll
lods
jecxz
xchg
xor
push
add
xchg
jae
add
add
je
mov
push
int
iret
unpckhps
pop
add
lcall
bound
dec
dec
and
push
cmc
sub
cwtl
cltd
and
pop
sub
adc
ret
icebp
dec
out
jb
insl
cs
xchg
mov
xor
pop
popf
push
mov
sbb
addr16
dec
jo
into
mov
push
add
sbb
sbb
stos
scas
or
sar
shlb
or
lahf
pop
xor
lods
ja
test
sub
inc
cmp
push
mov
mov
popa
in
inc
repnz
out
dec
pop
fcmovnbe
out
adc
les
scas
rcl
outsb
cmp
outsl
rcrb
sti
testl
into
mov
gs
xor
daa
adc
mov
lea
ret
push
arpl
pop
jge
in
into
jecxz
aaa
in
nop
add
xchg
add
int
repz
xchg
jno
sub
ds
int
outsl
xchg
orb
jae
cld
dec
or
data16
mov
rol
jp
int3
mov
inc
jg
outsl
mov
inc
push
xor
cwtl
ss
push
and
fsubl
test
loope
pop
cmpsl
mov
cmpsb
ja
std
mov
jnp
or
mov
mov
test
xchg
pop
and
jne
lods
inc
push
jno
iret
jno
mov
or
adc
or
mov
sub
adc
cmp
lahf
scas
jnp
fisubrl
jbe
js
push
mov
xor
mov
mov
rcrb
inc
sbb
inc
mov
xchg
sub
fisttpl
loop
jno
inc
shll
xor
out
lods
outsb
cli
lods
sbb
shll
test
and
mov
lret
lret
dec
push
lods
mov
sbb
jle
lds
lcall
sbb
adc
jb
pop
xchg
popf
or
sbb
hlt
inc
js
xchg
in
mov
xchg
add
mov
outsl
fbld
dec
lea
mov
subl
mov
pusha
mov
gs
jne
adc
cmpsl
and
mov
xor
jecxz
jmp
xor
loope
pop
sub
jmp
mov
out
inc
and
or
sub
add
stc
adc
jno
sbb
test
clc
fwait
sbb
mov
fs
jmp
mov
cmp
cmc
or
xchg
lods
outsl
fimuls
and
jmp
jle
xchg
aad
ss
pop
inc
jp
or
bound
lock
mov
and
test
cs
xor
xchg
cltd
sub
adc
push
aaa
aam
clc
orl
addb
mov
or
popa
repnz
lahf
enter
lods
xor
rolb
call
mov
inc
cmp
and
jg
jnp
movsb
call
xor
insb
insl
jp
lahf
sub
sub
flds
cmp
mov
pop
sti
inc
xchg
and
lea
daa
dec
xchg
movsl
jecxz
andb
adc
jb
pushf
lea
or
pop
xchg
icebp
hlt
shl
jg
outsb
rcll
andb
subb
xor
sub
jne
mov
shll
jno
push
scas
js
cltd
iret
daa
ret
add
repz
inc
movsb
mov
int3
cmp
cwtl
sahf
jnp
sub
mov
ret
out
and
xchg
in
add
testb
add
ljmp
pop
lods
stos
pop
aam
cld
aam
gs
xor
cmp
cmp
pusha
js
mov
jmp
push
or
in
repz
cmp
iret
xlat
and
loope
fidivrl
fcoml
add
inc
stc
outsb
push
clc
fdivrs
sbb
mov
movsb
orb
xchg
fdivrp
adc
xchg
sbb
pusha
addr16
mov
xchg
sahf
mov
dec
xor
or
into
pushf
lahf
loopne
mov
ja
fsub
into
fcomps
pop
adc
sub
push
cmc
sub
xlat
sbb
push
popa
fisubl
outsb
sahf
push
lea
xor
mov
jne
sub
ss
fisubs
ljmp
mov
cmp
sub
add
clc
in
sbb
notb
add
lds
loope
popf
daa
push
dec
jecxz
mov
lret
ret
mov
lds
mov
js
and
sti
icebp
ss
adc
rorb
jle
cmp
xor
shll
addr16
fmuls
sub
loop
push
jle
push
mov
mov
pop
into
adc
sub
ss
pop
sarb
shr
dec
loope
or
mov
lahf
andb
mov
fucomi
xor
inc
inc
mov
dec
imulb
mov
push
push
xor
jno
mov
and
orl
fldcw
pop
jp
add
or
lret
sti
lret
pushf
adc
jecxz
out
testl
daa
imul
mov
and
scas
fisubrl
add
push
sub
xchg
mov
push
lret
and
adc
pop
mov
sub
mov
mov
sub
pop
mov
jge
and
and
addr16
call
mov
push
add
mov
addr16
fnstsw
and
outsl
decl
cmp
and
aad
xor
jl
inc
cmp
clc
add
leave
xchg
mov
out
push
ret
fdiv
push
outsl
popf
loop
bound
mov
jp
xlat
loop
mov
int
jmp
jge
scas
pop
fs
mov
arpl
ss
jg
leave
pop
cmpl
lcall
mov
iret
inc
adcb
popf
sbb
sbbl
clc
and
mov
out
pop
push
test
pop
stos
lahf
pop
hlt
mov
repz
lock
xchg
aad
sbb
sahf
movsl
push
pop
pushf
sub
pop
fnsave
rdpmc
call
pop
add
or
mov
out
sub
in
divl
and
aad
into
dec
xor
push
icebp
imul
dec
shrb
js
xlat
dec
out
test
stos
loope
jecxz
xlat
int3
inc
mov
sbb
cmpsl
xchg
jbe
and
inc
jmp
jns
add
sub
push
pusha
lret
push
xlat
push
push
pusha
sub
sti
push
pushf
and
movsl
js
fsubl
pop
scas
xchg
pop
lods
or
sbb
pop
or
cmpsb
movsl
push
es
nop
fwait
in
dec
nop
and
es
jge
sbb
or
lcall
fsubs
lods
andb
dec
frstor
filds
add
xor
xor
daa
mov
fadds
dec
sarb
test
jmp
sub
fwait
jg
push
ljmp
mov
outsl
ret
into
cli
pusha
ret
insb
or
jl
lds
sbb
xor
fistpl
test
lods
fidivrl
cwtl
jb
mov
orl
jle
xchg
or
ret
add
xchg
adc
dec
inc
ljmp
add
mov
clc
fsubrl
push
not
jae
arpl
enter
daa
sub
pop
cmp
test
inc
dec
dec
mul
mov
cmp
or
ret
sti
add
jge
mov
jo
sbb
dec
in
lea
push
fsubl
outsb
ror
cmp
add
xchg
jp
outsl
ret
jbe
cli
sti
jno
mov
xor
shll
scas
cmp
movsb
jb
sbb
pop
cmp
cld
or
and
sbb
sub
outsb
add
popa
adc
sbb
lret
lcall
or
jbe
dec
les
notl
jle
dec
cli
sbb
std
aas
dec
outsb
sahf
mov
in
faddl
nop
sti
shl
xor
xchg
jl
call
inc
in
clc
scas
inc
outsl
cmp
stc
jg
sahf
xchg
mov
int3
push
xor
lods
or
int3
into
mov
mov
mov
cmp
sub
repnz
adc
lods
popf
or
addr16
ret
mov
xchg
ljmp
jae
jg
cmc
aad
iret
mov
ret
out
enter
jbe
pushf
mov
push
jns
inc
xorb
push
jne
iret
push
adcb
or
mov
pop
sti
out
cwtl
push
cmp
xlat
call
lods
pusha
sbbl
push
sbb
sbb
scas
mov
inc
stos
in
cmpl
stos
test
xor
fsubrp
jg
notl
sbb
cs
mov
cmp
inc
cmp
mov
imul
aad
pop
nop
sbb
or
push
fdivs
insl
clc
fcoml
mov
xor
subb
es
in
jae
and
pusha
and
popa
jns
mov
fsub
insl
inc
out
pop
ss
fs
je
ja
dec
cmp
lods
jp
adc
xor
mov
fldcw
xchg
dec
inc
xor
push
cmp
add
sbb
add
cmpsl
repz
push
adc
xchg
insl
jbe
adc
jno
nop
outsl
repnz
jbe
pop
adc
fbld
push
xchg
out
inc
pop
leave
cwtl
inc
xchg
adcb
mov
dec
out
arpl
testl
fwait
jbe
lcall
popf
js
adc
repz
scas
pop
mov
xor
dec
xlat
pop
adc
or
cmp
add
orb
out
hlt
cmpsb
adc
pop
push
je
and
sbb
mov
scas
test
fdivrs
test
ljmp
jbe
xor
push
into
cmp
es
push
adc
repnz
push
test
push
xor
ljmp
pop
movsl
mov
gs
nop
mov
xchg
aas
xorps
lods
int
inc
ficoms
mov
mov
pop
mov
in
push
ja
cwtl
fstps
add
sub
lret
bound
and
aam
push
add
inc
jecxz
dec
pop
je
jmp
repnz
mov
jb
adc
mov
xchg
leave
idivb
icebp
add
insb
std
cwtl
add
add
fistpll
push
pushf
sbb
mov
les
jmp
lahf
adc
loope
dec
fsubrl
popa
int3
mov
nop
cmp
cltd
daa
idiv
xchg
jo
add
push
jmp
cmc
cmp
pushl
in
rcrl
lahf
fwait
cmp
mov
mov
jecxz
ljmp
xor
popa
add
lret
pop
or
addr16
sub
cwtl
lret
lret
mov
pop
stos
ds
mov
je
les
adc
cs
push
fildll
adc
lahf
jecxz
shl
pusha
mov
sbb
mov
inc
test
add
popa
in
aam
and
data16
addr16
adc
xor
sbb
add
pop
ljmp
xor
xchg
stos
and
iret
lock
dec
sub
push
fs
into
inc
je
cmpsb
mov
push
jle
add
in
xchg
insb
jns
out
pop
xor
mov
add
jo
or
lret
add
sbb
pop
jne
sbb
fsubrs
ja
sbb
lcall
in
sub
out
pop
and
adc
push
lcall
arpl
fnstenv
dec
push
dec
sub
lock
dec
jge
ja
dec
int
adc
js
mov
jb
cmpsl
cltd
aad
nop
pop
cmp
das
cmpsb
cld
dec
lahf
push
xchg
xor
cmp
dec
sbb
sahf
pusha
daa
sbb
add
adc
ret
xchg
dec
je
lcall
jl
cmp
js
and
jnp
inc
icebp
jnp
js
xchg
inc
lea
mov
mov
or
cmp
scas
sbb
fildll
lret
xor
lds
xor
mov
cmp
or
xor
test
movsb
icebp
adc
fwait
push
jo
xchg
into
std
sub
fwait
nop
xchg
xor
or
iret
mov
daa
cmc
or
ljmp
add
fisttpl
mov
mov
cmp
xchg
xor
add
and
mov
imul
inc
mov
jo
lea
push
push
inc
icebp
adc
hlt
dec
pop
or
repnz
std
ret
test
and
dec
adc
jo
cmp
push
in
or
je
mov
sahf
jnp
stos
push
mov
ss
out
daa
fidivrl
stos
enter
inc
mov
rcrb
fidivrl
xchg
push
jl
jl
cmp
fildll
xor
sahf
loopne
negb
dec
pop
jl
ljmp
lock
inc
adc
inc
adc
jns
xor
push
mov
lock
mov
pop
pusha
jnp
mov
in
lea
push
sub
mov
rcrl
jge
pop
sbb
or
push
shlb
loop
lock
xor
lds
loopne
leave
xchg
lea
js
and
stc
pop
mov
orl
daa
jne
int
adc
roll
or
xchg
or
leave
sti
push
fwait
jecxz
popf
scas
mov
jmp
ficoms
loopne
rcr
repz
sub
or
pop
ret
and
int3
xorl
push
pop
sub
inc
mov
cs
dec
scas
in
test
mov
mov
push
xorl
pusha
add
or
xor
pop
push
aas
lock
push
sbb
sbb
and
inc
lcall
adc
cmp
sahf
fwait
xlat
push
repnz
sub
xchg
ja
or
gs
xor
push
jg
jmp
sub
jnp
mov
cmpsb
fimull
pop
loop
stos
test
data16
out
test
pop
cltd
rolb
jo
push
stos
pop
mov
das
pop
call
cmc
adc
arpl
xor
jge
or
or
mov
cmp
adc
hlt
incl
ljmp
pop
inc
xor
testb
xchg
xor
loopne
pop
fwait
mov
pop
and
fwait
adc
push
enter
addr16
lds
adc
mov
xlat
or
mov
bound
mov
push
pushf
leave
adc
ss
fidivrs
jmp
cmp
push
sub
loop
mov
add
ja
and
ret
gs
and
inc
daa
fmul
and
hlt
inc
mov
xchg
mov
inc
dec
xlat
ds
push
stos
pop
jmp
xor
mov
dec
je
push
sub
cltd
mov
pop
mov
out
aas
int3
jge
add
jmp
ljmp
push
mov
xor
sbb
je
fstpl
jg
ljmp
movsb
mov
dec
enter
pop
inc
ret
jne,pn
push
ffreep
and
ljmp
mov
pop
dec
or
cmp
mov
xchg
sbb
push
int3
pop
shl
std
lahf
dec
cmp
pop
jmp
rep
repz
shll
push
and
test
push
je
insl
out
mov
mov
push
mov
adc
test
cmp
mov
inc
xchg
inc
mov
dec
les
fcomps
ss
inc
mov
and
pop
sub
shll
add
xchg
cltd
mov
add
enter
sub
int3
mov
add
mov
xchg
cs
add
sti
imul
into
fiadds
cmpb
cli
nop
xor
xchg
mov
cmp
rorl
orb
test
testl
xchg
scas
movsb
imul
es
xor
or
pop
inc
and
sub
xor
jno
jb
nop
sbb
call
fidivrl
xchg
out
lods
das
push
stc
mov
xchg
gs
imul
and
mov
dec
es
sbb
test
cmp
decb
pushf
lock
sub
pop
roll
add
popa
xchg
or
out
repz
push
cmp
add
es
jbe
mov
jbe
sahf
inc
and
mov
leave
enter
cli
xchg
mov
cwtl
pop
movsl
cltd
pushf
pop
mov
push
cmpl
loopne
repnz
xor
repz
fwait
mov
push
lret
inc
sub
sbb
and
lcall
add
shrl
lods
data16
ds
pop
or
jo
insl
mov
mov
pop
cli
pushf
dec
ret
mov
pushf
hlt
jmp
movsb
enter
mov
push
sbb
xchg
rorl
push
roll
rorl
out
repz
dec
lods
fldl
pop
test
fwait
dec
imul
xorl
in
fcoml
data16
rcll
arpl
leave
lods
mov
insl
adc
subl
jmp
loop
cwtl
aaa
dec
test
dec
sub
cli
imul
push
stos
dec
add
jecxz
aad
push
es
mov
notb
ficoml
or
push
pop
adc
loop
push
bound
cmc
pusha
negl
sti
icebp
cwtl
jmp
loope
test
jo
adc
and
xor
xor
imul
lcall
cmp
adc
imull
mov
or
fildll
and
loope
sbb
and
jl
pop
cmp
cmp
sub
idivl
sub
add
loopne
jo
into
leave
xor
xor
imul
dec
lods
rcr
push
outsb
xchg
adc
sahf
imull
sub
cmp
mov
push
sbb
sahf
jl
push
movb
mov
pushf
andl
stos
pop
fs
iret
outsb
mov
jnp
stos
cltd
push
stc
mov
aam
mov
mov
push
subb
stc
test
hlt
sub
pushf
push
push
daa
out
push
mov
sub
addr16
out
lds
nop
cwtl
push
sbb
xorl
loope
mov
dec
fidivs
mov
in
or
fcompl
sub
push
and
pusha
lods
dec
mov
shrb
adc
imul
nop
xchg
sub
jb
shlb
xor
out
arpl
pushf
xor
pop
movsl
or
xchg
ljmp
addl
inc
cmc
icebp
mov
idivl
xorl
cwtl
mov
lret
xchg
xor
dec
iret
cmp
ja
les
icebp
sbb
mov
scas
in
push
xor
int3
sbb
stos
dec
xchg
add
insl
sbb
jns
dec
or
pop
sbb
aad
jb
dec
inc
xchg
push
icebp
xchg
sti
popa
jge
lahf
jmp
add
mov
xchg
jo
cli
fs
mov
in
imul
fiaddl
mov
js
mov
mov
aad
lock
pop
ret
ljmp
push
lea
pop
or
xor
aam
mov
out
xchg
rcrb
sahf
test
jp
repz
dec
shll
pop
mov
adc
loope
adc
xor
ja
mov
repnz
mov
das
xor
lahf
mov
popf
mov
sub
xchg
sbb
ds
cmpsb
inc
rcrb
daa
lock
fchs
in
bound
inc
fsubrs
mov
sbbl
dec
sbb
xchg
cwtl
cmp
data16
in
jne
xchg
call
or
and
xor
xor
rcll
out
push
icebp
sub
out
mov
stc
imul
add
and
adc
shrl
lret
sarb
push
pop
iret
movsl
push
jg
or
icebp
popf
adc
mov
lahf
addb
subb
xor
mov
aam
push
pusha
std
pushf
pusha
int3
popf
pop
insl
inc
cmp
push
enter
ds
ljmp
das
xor
sub
jnp
popa
mov
call
mov
mov
dec
into
enter
scas
xor
jno
repz
xlat
movsb
sub
pop
push
pushf
lds
mov
inc
and
cs
int
mov
mul
and
mov
pushl
jp
out
jne
stos
addl
or
aam
out
mov
fs
adcl
dec
adc
or
jle
cmpb
cs
jp
mov
sub
xadd
sti
stos
dec
and
dec
cmp
scas
sbb
push
ljmp
outsb
add
setns
or
call
push
lret
inc
sub
adc
xor
xchg
icebp
or
aad
xor
rcrl
mov
in
or
push
dec
add
pop
xchg
fistps
cmp
jle
mov
bound
sbb
aaa
xchg
pop
rcrl
inc
sbb
lcall
mov
enter
ja
push
mov
mov
push
push
pop
or
mov
sahf
sahf
cmp
sub
sbb
rclb
shrl
mov
jbe
sbb
mov
ret
leave
repz
xor
pop
sub
mov
fwait
xor
mov
rcl
adc
adc
out
push
fistl
je
ljmp
fiadds
scas
add
mov
xor
jbe
cltd
or
xchg
push
add
jl
add
out
sub
jmp
push
loope
push
adc
es
dec
sbb
pop
arpl
pop
adc
je
scas
fdivrl
sbb
fwait
lahf
dec
addr16
loop
mov
sahf
dec
test
dec
mov
in
in
cmp
fmuls
int
frstor
leave
repnz
cmp
cmpl
xchg
dec
mov
rcll
mov
jns
aam
call
fsubrl
cmpsl
inc
icebp
xchg
cs
add
mov
sub
bound
fcomi
inc
jecxz
jl
aam
sub
outsl
sub
xor
arpl
call
xor
xlat
inc
adc
fbstp
pop
sbb
or
sub
fidivs
lcall
out
popf
popf
push
gs
or
sbbl
popa
outsl
cwtl
fisubs
into
jne
shrl
xor
mov
test
sub
roll
mov
jno
lcall
push
in
jecxz
jmp
fcom
pop
jecxz
adc
xchg
mov
imul
dec
hlt
std
lods
aaa
fildl
pop
cmp
mov
xor
mov
xor
jb
outsb
jle
ljmp
pop
vcvtpd2dqy
in
in
addr16
mov
xor
outsb
inc
mov
push
xlat
mov
fbstp
das
cmp
pop
pop
pusha
mov
ret
cs
rcl
mov
leave
jp
popf
sub
xlat
data16
dec
xor
insb
lahf
outsb
mov
add
fwait
dec
pop
adc
test
xchg
fbld
jle
hlt
push
ret
jp
xor
pushl
add
sbb
cld
dec
jb
lds
pop
xor
scas
pop
subb
adc
loope
imul
pushf
jmp
xchg
loope
and
je
jbe
adcl
jge,pn
xchg
imul
mov
outsl
sbb
outsb
fimull
xor
mov
or
imul
loope
mov
ljmp
sbb
outsb
fmulp
insb
fmuls
movsb
fwait
mov
in
mov
fmuls
dec
hlt
jp
jne
pusha
mov
pop
push
jbe
outsb
mov
stos
jl
lods
xlat
xchg
into
mov
scas
jp
cmp
cltd
popf
push
out
mov
mov
xlat
outsl
aad
hlt
stc
or
adc
xor
sub
mov
stc
cmp
test
xor
cwtl
pop
xor
or
xchg
addr16
sub
outsb
xor
mov
int
adc
sub
inc
mov
adc
lea
push
mov
fcomps
sub
scas
sbbb
adc
push
add
sbb
jge
lahf
jl
fisttps
xor
ficomps
push
and
cmpl
mov
pop
mov
push
mov
sbb
xchg
insl
xchg
mov
sbb
inc
out
add
test
inc
subl
test
xchg
jecxz
pop
jb
push
fxch
cmc
push
sbb
icebp
xchg
inc
inc
in
or
cmp
fs
iret
and
mov
sbb
dec
arpl
push
js
xchg
icebp
lcall
or
cmp
decb
loope
lcall
pop
pop
inc
pop
adc
cmp
fistpl
mov
fildll
adc
push
cs
out
and
push
xchg
cmpsb
test
test
sbb
repz
add
aam
sub
aad
pop
arpl
adc
pushf
or
jg
sub
outsb
es
stos
inc
aad
es
movsb
shlb
xor
out
sub
push
cmp
cs
cmp
gs
mov
pop
nop
shll
push
jg
addr16
mov
jg
push
test
mov
filds
es
sbb
mov
add
js
insl
sti
cli
aam
data16
in
push
jge
or
hlt
les
and
pushf
xchg
outsl
pop
ret
and
mov
sahf
inc
subb
adc
cmp
imul
stc
inc
sbb
cmp
pop
jl
mov
aam
mov
xor
int3
sbb
mov
jnp
dec
fidivl
stos
jae
jecxz
xchg
mov
push
mov
mov
pop
shll
xlat
movsb
pop
aad
xchg
or
and
mov
divl
rcrb
cmp
cmp
lods
in
xchg
mov
sti
jne
mov
scas
mov
push
mov
lahf
out
adc
call
cmp
mov
jbe
lock
rorb
inc
aam
push
out
dec
sbb
jle
das
sub
cmp
cli
push
test
jno
add
pop
dec
loop
jno
lcall
outsl
jbe
sub
aad
mov
mov
push
mov
pushf
clc
inc
mov
jp
outsl
shlb
adc
das
xchg
and
jp
and
lds
add
test
push
push
mov
je
lret
pop
outsl
fdivrs
adc
aam
ja
adc
int
pushf
xor
out
push
bound
in
sub
cmp
movsb
add
jmp
outsb
pop
cmp
sub
cmp
adc
lods
xchg
cwtl
jns
mov
loopne
cmpsb
push
out
jmp
adc
cwtl
inc
leave
lahf
sbb
sti
loop
inc
adc
xlat
sbb
pop
adc
jecxz
addr16
push
fsub
loop
xchg
rol
out
out
fcompl
sahf
leave
insb
fnstsw
mov
call
inc
cmp
lock
mov
mov
fisttpll
lods
mov
lret
pop
jg
int3
mov
xlat
sub
push
push
fcompl
out
enter
imul
aam
in
adc
cmp
and
lret
pop
cmp
add
out
out
fsubrp
loop
das
xchg
cmpsb
xlat
add
xchg
int3
pop
testl
xlat
cs
dec
xor
arpl
shrl
add
stc
cmp
jl
mov
adc
or
dec
leave
dec
dec
insb
push
sbb
clc
cmp
jle
mov
cwtd
adc
push
jmp
push
mov
xchg
mov
gs
jbe
lahf
mov
int3
ret
int3
andb
lahf
cwtl
idivl
pop
jl
push
stos
mov
mov
in
imul
dec
dec
mov
push
jno
insl
inc
jge
test
jns
stos
insl
cmp
cld
mov
outsb
stc
je
push
add
jl
fisttpl
pop
push
popf
pop
jbe
inc
jp
fcomi
ss
sub
loop
movsb
mov
das
push
pushl
pop
and
mov
sbb
bound
call
inc
leave
fidivs
sub
mov
inc
roll
pushl
rol
pop
push
fmull
jg
add
sub
and
mov
lds
inc
and
mov
test
mov
mov
imul
push
jle
neg
fldcw
stc
cld
std
clc
ja
aad
ret
insb
dec
imul
sub
fdivl
loopne
loope
mov
shl
cmc
fwait
xchg
mov
fcmove
lock
add
mov
test
sub
dec
loopne
mov
inc
scas
sarl
nop
lods
daa
adc
ljmp
and
rcl
out
aam
movsl
push
jge
mov
push
cmp
xchg
dec
scas
pop
cmp
aas
xchg
orb
jge
add
stos
xor
gs
mov
mov
mov
shrl
sbb
pop
inc
sarl
sbb
lret
in
inc
xchg
dec
repz
adc
sub
in
mov
shll
and
sarb
in
fwait
push
lea
pop
rcrb
dec
or
cmp
es
scas
jmp
dec
fimuls
syscall
xchg
xchg
sbb
jns
std
loop
or
xchg
add
pop
mov
sbb
shll
inc
mov
push
lret
nop
push
inc
dec
test
xchg
push
sbb
ja
in
cs
out
cmpsl
xorl
cmp
fdiv
jae
ds
or
sub
ja
mov
or
nop
fimuls
xchg
jae
add
lret
clc
sub
pusha
loopne
mov
or
aam
push
xchg
jp
xchg
or
scas
sub
sarb
xchg
je
sbb
loopne
or
fisttps
orl
cmc
add
sub
es
dec
cmp
call
inc
cmp
dec
add
push
imul
sbb
les
scas
jp
pop
mov
fisttpl
je
lret
in
sti
push
lea
and
clc
int
aas
gs
jg
xchg
pop
cmp
les
xchg
arpl
adc
das
or
adc
insl
push
fisttps
out
mov
sbb
jo
mov
cld
inc
inc
cmpl
loopne
mov
adc
push
push
dec
push
cltd
mov
das
pop
test
aaa
xchg
xlat
pusha
cmpsl
cmpsb
xchg
outsb
jg
rorb
outsb
cli
sub
loope
fistps
leave
xor
add
sbb
rcll
leave
jns
jp
sbbb
add
mov
int
add
mov
or
divl
lods
stos
push
push
je
push
loopne
hlt
fs
sub
mov
fistpl
lea
jecxz
cmc
sub
out
sub
and
mov
dec
lret
adc
and
sahf
loop
cmpsl
pop
xchg
pop
jge
inc
je
leave
lds
scas
inc
adc
sub
mov
cli
mov
add
je
pop
rcr
pop
addr16
inc
sub
pop
mov
sbb
mov
fnstcw
pusha
fidivl
outsl
popf
sbb
add
test
in
jl
and
push
fcmovu
dec
sbb
pop
mov
cmpl
out
or
imul
adc
and
dec
mov
sti
xlat
dec
outsl
xor
popa
dec
sub
lods
mov
bound
xchg
call
outsb
xlat
sub
decb
insb
stos
aas
mov
pavgb
dec
int
nopl
push
xor
out
movsb
xor
addb
mov
mov
rcrl
sti
xor
lcall
stc
imul
das
fists
mov
pop
cmp
arpl
stos
jle
push
dec
mov
ja
or
pop
cmp
or
imul
enter
or
cmpb
test
or
pop
fiaddl
jne
cmp
sbb
add
mov
iret
das
adc
pop
sub
mov
cmpsb
stos
inc
jecxz
add
inc
mov
pop
mov
int3
imul
jecxz
int3
scas
in
cmp
pop
jne
jl
out
xor
and
insb
jno
adc
bound
ret
aad
incb
enter
xchg
loopne
divb
mov
sbb
add
mulb
jns
loopne
loopne
push
mov
stc
bound
jbe
push
xor
std
lcall
cmc
push
xchg
xor
sub
sbb
aas
sbb
cld
xor
and
into
popa
xchg
mov
xchg
les
mov
enter
daa
add
in
lret
mov
jno
adc
out
in
mov
cmp
das
mov
adc
stc
fiaddl
mov
pusha
mov
test
add
out
mov
jb
out
iret
cli
ja
popf
add
pushw
jo
outsl
and
xchg
shlb
pop
inc
cmpsl
push
decl
and
mov
out
and
pushf
lods
stc
and
cwtl
push
push
pop
loop
inc
lock
cmpsl
aam
or
sub
push
lock
lds
pop
and
sbb
sub
jnp
ret
bound
add
mov
cltd
jle
fwait
ror
outsb
mov
int3
mov
pop
adc
and
lahf
xchg
aad
xchg
outsl
das
fidivrl
scas
dec
sub
ds
outsl
lahf
inc
push
xor
xchg
sarl
or
jle
int3
ficoms
test
push
rcrl
nop
cltd
test
push
enter
push
add
cli
cmp
mov
cs
dec
push
sbb
movsb
jbe
out
adc
addl
ja
xchg
push
dec
cmpsl
and
xor
dec
sbb
ret
jns
dec
xor
mov
cmpsb
pop
cmp
xor
mov
push
add
iret
push
mov
idivb
sarb
mov
imul
mov
xlat
mov
xor
jo
lods
fldenv
repz
xor
and
ljmp
leave
jne
in
outsl
daa
arpl
mov
sbb
mov
pop
inc
mov
arpl
loop
test
push
jnp
sub
imul
jo
mov
imul
pop
sbb
mov
aaa
jbe
sbb
lret
mov
dec
nop
add
fcoms
adc
jb
xchg
or
outsb
push
cmp
mov
icebp
frstor
jmp
sti
mov
cmp
xor
add
aam
jg
daa
adc
add
cmp
xor
push
adc
jle
movsb
lods
xor
es
add
in
xor
push
inc
jle
and
or
mov
lods
xor
loopne
pop
sub
mov
inc
add
call
add
xor
pop
sti
adc
enter
in
jp
fdiv
jo
mov
out
mov
cwtl
push
and
mov
pop
cmc
scas
xorl
test
inc
fwait
mov
xchg
pop
shlb
cmp
xchg
mov
or
inc
into
sarb
imul
test
jae
movsl
mov
dec
movsb
cld
dec
cmp
xor
popa
fwait
cmp
rorl
xlat
lret
daa
adc
enter
add
enter
add
mov
cwtl
xchg
aad
inc
add
test
adc
mov
xchg
and
or
hlt
movsl
std
rorb
movsl
dec
lret
lea
inc
dec
fdivrs
sub
pushf
imul
jne
ret
aad
push
or
or
push
dec
in
and
lret
inc
xchg
add
mull
inc
or
cwtl
shrb
aaa
mov
mov
cmpsl
mul
push
push
bound
push
fidivrl
mov
dec
push
add
movsl
loopne
jl
call
lods
add
xchg
lods
sub
xchg
roll
mov
out
pop
jbe
jmp
int3
stc
fcoms
mov
hlt
imul
add
adc
jbe
aad
mov
push
cmp
dec
cmc
lds
popf
adc
push
or
fs
fimuls
jb
call
in
cmp
std
xchg
pop
add
push
pop
sub
in
xor
jmp
dec
xor
lods
cli
stos
cmp
leave
lds
fnstenv
mov
jecxz
pop
inc
mov
inc
sarb
jnp
or
js
dec
dec
aam
stc
jno
mov
mov
xchg
rol
stos
xchg
sbb
lcall
mov
jbe
sub
mov
outsl
pop
adc
add
or
out
loop
mov
fsts
jns
jo
shrl
std
mov
cmpsb
and
aam
adc
pop
js
mov
xor
mov
add
les
les
int
shlb
test
lret
dec
aad
inc
imul
xchg
adc
mov
sbb
movsb
ret
add
adc
jne
nop
test
icebp
cmp
imul
mov
adc
xor
test
or
xchg
push
jno
push
dec
orl
push
cs
icebp
add
into
xor
xor
into
rorl
push
jbe
and
push
rcrl
jae
gs
cld
jo
lea
shrl
shrb
pop
insl
enter
xchg
xchg
push
mov
and
es
nop
xchg
push
pop
pushf
or
xor
mov
ret
cltd
push
repnz
stc
in
pop
fcoml
gs
clc
push
jp
les
ds
daa
repnz
fsubrs
jl
sbb
cmpsl
cmpb
les
jle
dec
sbb
push
jno
mov
xchg
and
sub
in
cmp
pop
push
mov
lahf
fadd
imul
sub
jl
add
popa
repnz
call
jg
insl
test
lahf
pop
mov
dec
push
lods
add
mov
notl
xlat
repz
mov
sbb
pop
scas
cltd
cmp
fldenv
mov
push
movzwl
in
cmpsl
or
fnstcw
sub
popf
push
jp
cs
xchg
mov
inc
xchg
gs
out
aas
mov
jle
jb
repz
and
lahf
mov
xchg
std
js
das
xor
gs
mov
inc
mov
xchg
pusha
push
out
or
add
sbb
insl
enter
mov
mov
jl
stos
mov
add
imul
stos
cmp
jg
jb
and
negl
das
xchg
hlt
scas
test
cmp
aam
mulb
or
enter
int3
mov
mov
cld
inc
scas
push
test
inc
fidivl
sub
or
mov
jnp
jl
jle
in
sub
stos
cltd
ss
sub
sti
int3
dec
rolb
leave
xor
mov
out
lods
pushf
inc
fidivrs
loope
mov
cmpl
adc
mov
xchg
popa
loopne
testl
push
loope
lods
adc
sti
jecxz
add
in
ja
std
ja
pop
xchg
xlat
mov
popf
jmp
mov
cmp
inc
adc
out
mov
sbb
mov
push
int
xchg
in
jbe
jl
sbbb
jle
stos
sub
dec
push
std
cwtl
mov
es
cmpl
in
popf
std
jle
xchg
int
sarl
test
adc
lcall
pop
adc
hlt
push
leave
data16
mov
adc
ficompl
sub
sahf
in
sbb
lret
pop
lds
add
cmp
or
pop
add
cmp
jp
jmpw
jmp
stos
aad
clc
dec
push
inc
pusha
fiaddl
or
fstpt
mov
test
imul
in
add
aam
lea
icebp
jb
xchg
mov
or
lcall
mov
mov
fsubr
jo
fsubp
lea
mov
and
and
jg
inc
sbb
or
cltd
adcb
mov
add
stos
loop
loopne
push
inc
mull
sub
adc
mov
mov
sbb
sbb
sahf
scas
xchg
popf
jl
push
test
xor
sbb
cltd
insl
sarb
sbb
out
push
fisubrs
fcmovnbe
jbe
push
lret
cld
addr16
clc
movsb
sbb
cmp
mov
push
inc
into
push
ret
adc
flds
fldenv
mov
push
and
and
daa
insl
adc
movsl
mov
mov
in
das
stc
lods
sub
dec
xlat
adc
shlb
push
iret
sub
mov
push
lret
out
test
sahf
lock
or
addl
push
cltd
out
daa
fcompl
lock
hlt
xchg
fcompl
xchg
loop
jne
adc
add
xchg
sar
cwtl
fnstsw
stos
jg
xchg
sub
mov
mov
xchg
push
pop
ret
test
add
dec
pop
jge
jae
pop
idiv
jge
mov
in
out
push
gs
push
inc
sub
stc
push
jne
mov
mov
je
push
mov
jbe
outsb
dec
jne
inc
int
inc
outsl
cmpsb
cwtl
int3
call
rol
push
xchg
inc
dec
outsl
xchg
pop
or
outsl
mov
mov
xor
jne
data16
daa
and
inc
std
sbb
xchg
test
sbb
les
in
int3
jnp
cmc
arpl
scas
imul
push
aam
das
mov
in
sbb
jnp
inc
xchg
cmp
add
into
loope
mov
ja
dec
cmp
xchg
jnp
push
mov
pop
inc
pop
inc
mov
sahf
inc
lret
stos
mov
imul
xor
xchg
mov
mov
mov
dec
add
lds
sbb
dec
imul
jae
out
int3
repnz
fdivrl
and
clc
mov
cld
adc
lods
jecxz
cld
push
test
fs
fwait
jmp
insb
ljmp
fcomi
mov
sub
rcl
sub
movsb
pop
mov
push
push
repnz
push
pop
lods
jno
xor
rcrb
inc
enter
stos
cltd
js
dec
stos
adc
mov
je
jnp
and
and
movsb
repz
mov
sbbl
jno
shlb
popf
add
lods
hlt
aad
mov
pop
popa
pusha
cmpsl
cmp
or
adc
cld
enter
das
out
mov
mov
sbb
hlt
stc
mov
stc
cs
inc
lret
jns
mov
inc
fists
and
gs
jg
dec
jnp
mov
jecxz
ret
inc
push
shrl
mov
xchg
mov
xchg
sbb
inc
pop
popf
add
into
pop
sbb
loope
cmp
jp
daa
xchg
aam
inc
jl
xchg
jmp
mov
cmpsl
or
dec
dec
or
fwait
sti
dec
stc
and
cs
mov
lret
xchg
not
xchg
lret
enter
rcrb
jne
dec
fwait
dec
adc
pop
jne
sub
or
or
xor
pop
mov
int
pop
push
test
and
insl
popf
lahf
imul
and
fwait
inc
insb
mov
mov
imul
cmp
cmp
inc
mov
pop
mov
adcl
dec
pop
and
sbb
sarl
fucomi
daa
xor
and
sub
shrb
xlat
adc
inc
or
movsb
rcr
aad
mov
inc
icebp
adc
or
repnz
push
fiadds
xchg
aam
repz
ljmp
dec
and
pop
sub
mov
cmp
push
ja
in
xlat
int
sbb
mov
imul
inc
bound
xchg
scas
mov
mov
dec
in
cmp
jle
pop
outsl
sbb
push
dec
sub
ret
cmp
cld
mov
fldenv
loope
jge
popa
repnz
repz
out
xchg
inc
xchg
dec
jmp
into
xchg
aam
mov
test
loopne
and
mov
cltd
out
sub
mov
orb
pushf
cmp
roll
lret
mov
das
test
flds
test
jg
icebp
inc
cmpb
fs
rol
dec
rcrb
loopne
push
push
push
lret
insb
out
adc
and
xchg
enter
dec
mov
call
lock
mov
popf
in
mov
movsl
or
aaa
sarb
ss
je
shlb
scas
mov
sub
gs
sbb
mov
xchg
fdivs
sbb
mov
jecxz
mov
cmp
lock
call
or
pop
lods
arpl
dec
xchg
and
mov
inc
dec
adc
repz
test
and
jle
arpl
js
mov
pop
fisttpll
push
in
inc
sub
lret
lea
and
nop
sbb
pusha
data16
and
mov
mov
mov
sahf
lock
mov
push
into
vmovaps
ftst
sahf
aam
mov
mov
mov
add
das
adc
shl
ret
pop
cltd
std
push
mov
mov
cs
jp
loopne
int
outsl
cs
inc
fwait
ret
popa
mov
mov
or
ja
fsubrp
scas
decb
lret
xor
inc
movsb
out
sbb
mov
dec
cmpsb
outsb
cmp
cmpsl
pop
cmpsb
inc
out
xor
pusha
xchg
xor
std
add
adc
inc
lods
int
insb
cmp
cmp
xchg
iret
mov
sub
cmpsb
sarb
testb
mov
add
fstps
and
add
jae
cltd
push
ds
icebp
add
xchg
fdivrs
xchg
loopne
xchg
dec
test
fistl
mov
jmp
iret
jmp
inc
addr16
mov
lret
mov
aas
mov
clc
mov
mov
loop
stos
and
jmp
mov
pusha
popa
xchg
adc
jae
ret
aad
imul
cld
fsubs
xor
mov
lcall
cwtl
and
jmp
mov
mov
ret
iret
mov
and
stos
push
repz
leave
jge
mov
push
mov
pop
mov
inc
jnp
lret
movb
sub
sub
mov
inc
mov
inc
inc
sbb
inc
mov
xor
loop
lret
movsl
insl
jns
test
sarb
add
pop
cmp
fnstcw
movsl
xor
lock
lret
addr16
mov
push
xchg
imul
cmp
and
mov
scas
mov
mov
repnz
shll
mov
popa
imul
mov
mov
insb
outsb
xor
stos
scas
inc
push
nop
or
mov
push
mov
into
dec
inc
or
sarl
stos
outsb
mov
mov
xchg
ljmp
add
xchg
pop
gs
add
cli
negb
sbb
mov
mov
test
cmp
out
lret
fstpt
movsb
add
sbb
mov
mov
aam
jbe
push
sub
stos
sub
testb
jbe
mov
mov
push
adc
or
xor
sbb
dec
fs
rorl
shl
xor
mov
fmull
int
stos
mov
sub
in
xor
lahf
daa
popa
int3
push
mov
das
pop
fnsave
mov
repnz
mov
add
jp
lods
enter
xchg
testl
xchg
ror
inc
pop
sbb
sbb
scas
call
mov
out
iret
fisubs
sub
pop
or
and
sbb
nop
sub
mov
mov
shl
pushf
imul
push
stos
fldt
das
filds
in
mov
mov
jo
test
mov
in
testb
cld
sub
add
inc
xchg
xor
mov
cmp
jle
int3
pop
addb
cmp
xchg
pushfw
inc
clc
sbb
movsl
jmp
mov
shrl
ret
sbb
incl
enter
repnz
aad
add
das
mov
xor
in
ds
in
xchg
rclb
das
sub
test
outsb
or
in
add
push
push
mov
fyl2xp1
add
enter
jns
or
and
push
int3
jmp
mov
outsb
stos
sahf
push
ds
pop
ljmp
movsl
add
daa
push
fisubrl
hlt
inc
pop
repnz
jbe
lods
or
push
outsb
inc
pop
orb
dec
pop
iret
xchg
cmpsb
mov
inc
arpl
insl
dec
vpacksswb
dec
ret
pop
mov
push
lcall
add
add
shll
aas
adc
mov
cli
adc
mov
jae
ss
aaa
rcrl
or
jmp
push
jo
add
inc
fwait
sbb
ja
cmp
in
inc
xchg
popf
je
mov
scas
push
stos
pushf
ja
xchg
push
test
xor
xor
in
nop
aas
in
mov
cmp
sub
inc
std
add
in
jne
add
push
in
cmc
cli
mov
push
int
pusha
lret
mov
into
and
out
add
push
sub
add
lds
jae
inc
loop
aad
or
dec
sub
mov
xor
jecxz
jno
mov
scas
lahf
idivl
icebp
clc
leave
jg
stos
xchg
pop
sub
mov
inc
cmc
bound
dec
repz
and
adc
push
push
aaa
xchg
mov
out
into
shlb
fstl
xor
push
and
push
lea
inc
call
loopne
imul
mov
xor
lods
ja
arpl
mov
aad
insb
dec
lret
pop
add
sbb
cmp
je
gs
inc
xchg
out
adc
jo
push
jnp
stc
push
dec
pop
outsl
jne
inc
icebp
cmp
inc
adc
stos
lds
lock
cwtl
jbe
ret
out
testb
pop
push
mov
test
icebp
xchg
mov
pop
cmp
add
adc
and
sbb
pop
mov
aam
icebp
jmp
push
and
adc
xor
test
fistl
ds
dec
cmp
lods
jbe
data16
inc
dec
sbb
push
mov
cmp
fmul
ret
mov
adc
or
out
inc
fistps
nop
and
ret
sti
pop
ss
test
dec
dec
xchg
lock
repz
cli
test
lret
fnstsw
fstps
xor
cld
mov
xchg
push
lcall
mov
mov
or
test
imul
pop
pop
nop
repnz
shll
pop
in
rorl
add
or
and
movsb
mov
lods
mov
adc
mov
mov
mov
test
dec
mov
jne
decl
mov
sbb
hlt
push
lcall
rolb
cmp
jge
xchg
inc
cmpsl
loopne
jmp
test
mov
pop
imul
cmp
add
imull
jbe
mov
sbb
add
adc
xchg
sub
shll
sbb
aad
or
mov
jne
fnstenv
jb
push
fbld
and
imul
jge
sbb
ficompl
fwait
jno
fs
adc
add
test
sbb
and
dec
xor
sub
addl
add
mov
xchg
lods
das
inc
cmpps
sbb
rorl
movsb
data16
or
add
in
fnsave
mov
xlat
ds
adc
aas
mov
jg
int3
rcrb
test
jbe
pop
leave
pop
push
xor
jne
inc
jg
jmp
stc
stos
inc
mov
and
mov
dec
in
and
inc
cmp
ss
test
sub
stos
sti
mov
or
mov
out
insl
jo
in
negl
insb
fwait
movsl
pop
shll
jae
sbb
fst
mov
cmpb
frstor
mov
xor
xor
or
pop
xchg
xchg
mov
or
dec
repnz
mov
cs
js
out
popf
mov
bound
mov
sbb
loopne
fistpll
cmc
xor
aaa
imull
gs
inc
xchg
jge
stos
pop
rol
xor
jbe
and
sub
imul
lret
leave
pop
jne
cli
jae
inc
aad
ljmp
cmpsl
rcl
mov
or
jno
loopne
out
add
sbbb
jne
xchg
mov
add
test
lret
movsb
push
or
xchg
xchg
mov
push
aad
mov
divl
loope
pop
imul
xchg
jl
or
cmp
test
cmp
dec
int3
push
add
mov
in
sbb
pop
mov
xchg
and
pop
xacquire
jmp
jno
in
jb
adc
andl
int
xor
sahf
jb
and
adcl
stos
outsb
mov
cmpsb
pop
les
cmp
inc
xchg
mov
xchg
push
and
mov
lods
lods
loopne
mov
xchg
cmpsb
arpl
xor
mov
and
push
xor
push
cmp
sbb
xlat
xor
jp
arpl
or
scas
imul
mov
add
lds
aas
pop
cmp
cwtl
xor
jno
push
decl
ret
pop
jle
jo
dec
stos
or
xchg
fsubr
sub
test
stos
or
mov
test
xor
notb
xchg
int
inc
lret
in
hlt
insb
andb
jmp
loopne
out
in
jno
addb
sbb
cmp
cmp
lcall
cli
imul
push
clc
mov
in
adc
leave
mov
lret
and
hlt
leave
mov
jp
fstps
stc
mov
rcrb
mov
shlb
popa
lods
leave
push
sub
xchg
in
xchg
fdivp
scas
test
mov
ljmp
dec
jmp
aam
ret
sub
push
nop
into
mov
fists
loop
pop
mov
push
fisttpll
scas
sbb
jae
push
pop
pushf
add
cmpsl
iret
mov
dec
pop
cwtl
test
add
mov
push
pop
das
pushf
sahf
sbb
cs
shr
fsubrs
ret
push
push
sbb
iret
mov
dec
dec
jmp
int3
dec
cmc
mov
test
sahf
sbb
lods
inc
sbb
aaa
mov
pop
orb
jge
jle
es
xor
lods
stos
fwait
aaa
icebp
xchg
dec
bound
add
shll
sub
adc
int
imul
call
mov
cmpsl
push
push
xchg
std
cmp
in
jp
dec
add
and
stc
fs
push
jmp
shrl
add
lods
rolb
xor
mov
rolb
or
jnp
stos
add
fmuls
das
mov
add
imul
insb
adc
lahf
dec
mov
cmp
mov
je
cli
insb
inc
mov
mov
mov
push
xchg
inc
jge
add
sbb
lret
mov
pushf
cmp
cmpsl
push
or
movsb
mov
jnp
aam
mov
add
std
sti
loope
mov
fiaddl
sbb
mov
mov
xlat
dec
fwait
outsb
icebp
shl
notb
pop
pop
push
ud1
clc
xchg
mov
outsl
fists
push
push
repnz
mov
inc
mov
std
daa
sub
orb
push
mov
push
jb
call
push
mov
push
imul
pop
cwtl
inc
mov
out
jns
mov
adc
add
dec
add
int3
mov
imul
rol
or
push
movsb
pop
xchg
add
repnz
add
fs
stos
lods
shrb
testl
icebp
push
jle
ja
dec
cs
cmc
stos
jno
jb
lret
in
xchg
xchg
mov
adc
imul
jno
mov
dec
and
outsb
ljmp
jns
pslld
mov
dec
jg
pop
in
cmpsb
add
gs
mov
stos
cmp
sbb
hlt
inc
jmp
push
sbb
jg
insb
mov
fidivrs
inc
ss
mov
mov
aad
or
rol
es
xchg
aas
add
adc
or
faddl
cld
repnz
xorb
daa
or
cmpsb
icebp
sub
xchg
addb
jae
lcall
sub
addr16
repz
scas
das
mov
mov
pop
xor
cmp
push
and
stc
jbe
adc
outsl
notl
push
cs
push
aaa
xor
and
in
push
dec
in
imul
loopne
xchg
xor
dec
add
add
xchg
rep
loope
loopne
or
out
daa
xchg
push
xchg
mov
arpl
cwtl
ss
push
or
push
cld
imul
test
inc
aam
cmp
jno
sgdtl
rcll
xchg
add
out
out
jne
repz
xchg
dec
jg
sub
lods
pop
adc
add
ficomps
bound
popa
xor
test
adc
adc
pop
push
in
lahf
dec
push
repz
adcl
mov
xchg
or
push
xchg
mov
push
lret
das
mov
sbb
lret
sti
push
dec
adc
notl
sub
iret
fistpl
lea
dec
jb
scas
and
inc
ljmp
shl
or
jne
jl
push
mov
inc
adc
push
lods
xor
or
call
sub
xchg
pop
inc
sub
ret
test
addb
mov
jmp
mov
jae
lds
lcall
dec
decl
xchg
xchg
xor
ds
sbb
jo
inc
ss
push
fisttpl
dec
jecxz
pushf
inc
inc
mov
fisubs
fiaddl
icebp
jg
rcr
xor
std
xchg
lods
mov
dec
iret
repz
add
aad
mov
xchg
pop
mov
movsl
mov
insb
mov
or
and
stos
out
imul
and
ds
outsl
andl
inc
out
xchg
xchg
test
xchg
ss
lods
ret
adc
dec
clc
enter
cmpsl
or
cwtl
ds
mov
sbb
mov
ljmp
cld
outsb
mov
je
orb
inc
adc
shll
mov
mov
aam
lret
or
sbbb
adc
decl
nop
outsb
stos
mov
jle
jg
clc
sysexit
popf
mov
push
mov
pop
and
negb
and
dec
shrl
hlt
cmp
int3
jecxz
sbb
or
stc
xor
arpl
repz
sub
repz
stc
mov
lret
mov
pop
in
bnd
movsb
cmp
cmp
pop
lods
call
es
push
call
fisubrl
stc
test
inc
add
addr16
mov
sub
jmp
cmpsl
jnp
push
xchg
add
mov
call
rcrb
outsb
cmp
fs
cmpsl
daa
sti
xor
jp
ds
dec
fcomp
fcom
add
push
dec
push
movsl
push
pop
test
sti
lods
sti
movsb
xchg
lock
loopne
ret
shlb
pop
sti
lret
jge
sub
xchg
aad
adc
jp
outsb
out
ljmp
add
mov
jl
ret
sahf
rcrl
in
mov
out
push
faddp
aam
cmp
ja
mov
mov
dec
sbb
scas
ds
daa
andl
iret
enter
and
cmpsb
and
cld
jg
jl
xchg
add
add
iret
adc
jb
xor
xchg
mov
xor
lods
cmpl
ja
jp
movsl
fdivrp
fwait
push
movsb
je
out
jb
lock
xchg
jne
add
jge
in
pusha
and
lock
adc
lea
fcomps
jp
add
cmp
arpl
loope
dec
sbb
add
loopne
push
jne
jnp
add
das
inc
inc
jnp
sbb
sbb
adc
mov
cwtl
and
sub
loopne
lds
repnz
pop
xor
lea
les
dec
mov
push
mov
pop
ja
xor
fs
cwtl
fmuls
dec
fists
pop
sbb
jne
ss
cmpsl
jmp
fidivl
stos
mov
cltd
ljmp
sbb
in
pusha
in
jnp
dec
ja
nop
fists
arpl
cwtl
test
inc
xor
daa
fnstcw
or
mov
cmc
fnstcw
out
jns
sbb
loope
dec
rorl
negb
gs
hlt
xchg
jmp
push
dec
mov
clc
push
dec
or
rolb
push
add
cmpsl
mov
loopne
pop
out
rcrl
data16
aam
dec
xchg
and
jo
pop
cmc
lods
push
inc
or
fnstsw
cltd
and
mov
scas
jnp
inc
rcl
in
fstp
nop
push
sbb
int3
repnz
push
cmpsl
cld
pop
testl
mov
sbb
push
pop
lret
cmc
ror
loopne
adc
movsb
or
xchg
mov
jmp
sbb
pop
js
xchg
adc
dec
xor
les
cwtl
rorl
dec
jbe
and
push
imul
fwait
aaa
mov
cwtl
hlt
es
shld
test
inc
int3
cmp
pusha
mov
mov
std
dec
sbb
int
mov
inc
push
adcl
xor
pop
jge
cwtl
loope
fdivp
cmp
jle
mov
push
lret
cmpsb
mov
mov
aaa
sub
xor
mov
je
sub
mov
jae
adc
jecxz
jb
and
xchg
and
sbb
scas
pop
inc
mov
pop
mov
js
sbbb
push
cmc
inc
mov
out
ss
gs
mov
inc
mov
fistps
xor
imul
dec
cmp
push
or
dec
rorb
cmp
mov
adc
stos
push
loop
je
jae
or
pop
les
lcall
into
inc
test
xor
xor
repnz
int
lods
jecxz
cmpsb
test
sbb
sbb
pop
sub
jg
mov
and
cmp
lcall
push
fs
mov
les
fists
decb
mov
or
xor
int
movsb
fidivrs
or
pop
fldcw
mov
es
dec
dec
adc
dec
jecxz
and
mov
sub
jnp
adc
jmp
les
es
inc
daa
cltd
push
add
cmp
cld
popf
push
mov
popa
outsb
mov
cmc
ror
in
cltd
je
and
rcll
xor
or
push
scas
jle
dec
insb
pop
fs
mov
enter
push
iret
mov
mov
adcl
mov
ljmp
xchg
mov
addb
sti
ljmp
lret
jle
fistpll
inc
call
shrl
pusha
testb
mov
inc
sub
ja
mov
or
gs
inc
or
fstpt
pop
outsb
jle
lods
ja
adc
int3
into
mov
push
sbb
sbb
pop
cs
fnsave
push
dec
pop
push
push
dec
in
sbb
je
pop
aad
insl
aad
jle
xchg
add
mov
jg
mov
or
xor
lea
xchg
dec
stos
push
dec
or
pop
lcall
lcall
test
pop
adc
loopne
adc
scas
xor
mov
dec
ja
repnz
aaa
div
cmp
xor
ret
filds
scas
cmp
cli
cmpl
lret
enter
xchg
pop
roll
daa
stos
pushf
lahf
out
pop
rorb
loope
mov
xchg
inc
ljmp
stos
jo
pop
das
notl
movsb
inc
into
xor
xchg
fidivrl
imul
push
xchg
jmp
jno
xor
inc
push
push
es
dec
xor
stos
mov
test
cmpb
inc
aaa
je
push
iret
pop
inc
xchg
dec
loop
sub
xor
clc
outsb
push
xlat
fnstenv
mov
push
scas
sub
or
xchg
mov
jns
int
jae
roll
lds
pop
hlt
cmp
xchg
adc
jg
sbb
pop
sbb
bnd
insb
xchg
shll
sub
fildl
mov
roll
lcall
nop
cmc
pop
dec
test
pop
jnp
jae
sub
in
stc
pop
jo
lea
cmpsb
sarb
test
arpl
mov
out
mov
cmp
xchg
cmpsb
pop
pop
sti
mov
inc
push
or
int
add
test
sahf
aad
push
int3
mov
and
and
pop
insl
push
sbb
scas
mov
pop
mov
cmc
jb
test
enter
aad
jo
cwtl
pushw
lret
sbb
inc
xchg
ljmp
lret
std
shll
mov
jge
or
sub
sahf
dec
repz
pop
or
fidivs
test
test
mov
dec
pop
cli
lock
lea
imul
fisubs
in
cmpl
mov
je
mov
jne
insl
stos
bound
push
call
mov
in
inc
aas
in
daa
push
cmp
nop
sub
adc
sub
mov
call
add
cld
jno
pushf
jno
adc
lock
test
subl
xchg
xchg
lods
mov
jnp
lsl
xchg
mov
aad
in
test
shl
scas
sbb
shll
inc
adc
mov
ret
mov
popf
fnstenv
sbb
fsubr
mov
and
mov
shlb
xchg
pop
das
cmp
es
outsl
lds
mov
xor
in
push
mov
add
push
hlt
add
adcb
push
nop
pop
mov
sbb
cmp
roll
add
andl
mov
test
in
sti
sbbl
ret
jl
daa
shlb
jno
push
xchg
es
ret
shlb
dec
mov
sbb
adc
jns
mov
push
mov
fdiv
mov
pop
pop
xor
ja
cmpsl
xor
push
sbb
xor
loope
or
sbb
and
in
mov
add
push
mov
push
subb
jnp
jge,pt
xchg
xchg
mov
pop
or
cmp
inc
call
add
mov
pop
das
xor
mov
xor
stc
cmp
lret
pop
fdivrl
mov
jne
jne
sbb
nop
test
xchg
sbb
sub
fstps
out
sbb
add
adc
pop
push
std
xchg
in
push
int
ret
fisubs
inc
or
loopne
ficompl
out
icebp
movsl
fstl
mov
movsb
ja
sub
mov
and
cmp
test
sub
sbb
aam
cmpsb
add
das
iret
cmc
out
loope
mov
jle
mov
das
mov
mov
xchg
sbb
stos
add
dec
jo
jmp
pop
je
hlt
mov
shrl
out
cmp
sub
adc
es
and
adc
fs
jnp
and
inc
test
push
call
imulb
and
out
push
out
lret
cli
fidivrl
shrb
pop
cs
adc
addb
xchg
dec
dec
sub
jge
pushf
dec
sbb
call
icebp
adc
popf
sub
xchg
push
and
mov
or
cmc
lods
and
or
pushf
push
pushf
pop
xlat
and
cld
bound
pop
sbb
test
imull
ret
outsb
js
mov
loopne
pusha
cmp
sub
lods
pop
push
int
jle
lcall
pop
cmp
scas
setnp
mov
dec
xor
adc
mov
mov
jl
xchg
gs
fs
add
lock
add
xchg
loop
cmp
sub
pusha
cmpsb
shr
or
mov
push
mov
lahf
in
icebp
movsb
xor
dec
push
fsts
imul
negb
push
push
in
int
push
push
mov
add
lds
push
mov
sbb
cltd
outsl
shl
pop
mov
and
sub
push
jo
jae
fildll
mov
and
fs
xchg
lret
mov
fistl
cmpsl
or
ret
fnstcw
stc
mov
xchg
rcrl
cmp
push
sub
or
sbb
jbe
in
jecxz
or
fisttpl
xchg
or
mov
leave
flds
inc
sbb
sub
out
cltd
lret
loopne
push
pop
das
pop
jo
jp
and
dec
fsubp
lcall
adc
and
or
pop
stc
xor
pop
pop
aam
addb
push
adc
pop
and
lods
push
test
jge
dec
dec
sub
clc
mov
ret
imul
data16
inc
test
and
fiaddl
aam
or
push
cs
and
test
sahf
int
out
sbb
pop
outsl
mov
mov
pop
std
enter
pop
pop
inc
pop
stos
xchg
int3
cmpsb
std
icebp
xchg
imul
pop
lock
outsb
div
enter
add
pop
out
push
loope
jbe
pop
or
jl
ja
add
scas
add
dec
pop
inc
mov
ret
mov
sub
or
fimuls
jp
fstpt
out
jno
sbb
pop
scas
popa
je
int
xchg
dec
add
stos
adc
stc
mov
hlt
mov
mov
xchg
lds
xor
add
mov
and
orb
sbb
mov
aas
inc
cmp
xchg
pop
and
push
pop
scas
pushf
aaa
aad
ret
lret
push
cmpsb
push
rclb
push
leave
int
fwait
lods
test
scas
cli
sub
xlat
adc
or
jne
stc
dec
sbb
mov
icebp
xor
push
orl
stos
movswl
icebp
fadd
push
xor
inc
mov
fdivs
mov
pop
dec
cmp
mov
into
sti
jge
gs
jne
pop
sub
and
mov
add
and
xchg
in
mov
pop
add
ljmp
mov
push
and
mov
cmc
xchg
cld
sub
cmpsl
mov
ss
sahf
and
pop
mov
jl
dec
fldz
push
in
push
incl
rcrl
scas
dec
jecxz
enter
nop
cmpsl
fstps
std
aad
iret
cmp
imul
idiv
adc
cmpsl
pusha
add
into
pusha
hlt
lret
loope
add
xchg
adc
ss
or
cmpsb
sub
cmc
cltd
xchg
cmp
ficoml
adc
je
adc
pcmpgtb
dec
shlb
movsl
je
movsb
or
add
or
xorb
test
adc
or
imul
sbb
fwait
or
and
push
inc
xchg
push
loopne
dec
mov
popa
push
pop
and
imul
and
jae
jecxz
popf
cmpsb
xor
pop
popa
jo
jmp
pop
stos
sbb
cmpsb
sub
insl
loope
inc
mov
fldl
sbb
xchg
je
lahf
loopne
push
push
mov
das
mov
lods
xor
test
pop
cld
jle
inc
add
div
xchg
jge
and
push
vmovaps
sbb
xchg
fdivl
jae
insb
dec
and
add
pop
repz
cmp
mov
jb
inc
orb
or
add
mov
divl
sbb
in
outsl
push
enter
jne
cmp
xor
ss
bswap
mov
push
arpl
lcall
mov
lahf
adc
adc
add
pop
fstpl
andl
cld
xor
cwtl
pop
into
mov
or
lods
mov
add
jmp
insb
enter
mov
mov
in
sub
imulb
or
jbe
rclb
lea
dec
pop
or
inc
aaa
add
push
push
pop
pcmpeqw
stos
or
sub
call
add
cli
inc
lcall
mov
mov
int
insl
cmp
add
in
loope
popf
insb
into
or
adc
je
popf
in
dec
rclb
sub
stos
pop
pop
mov
test
int3
aad
mov
imul
shl
cmc
and
sub
pusha
inc
add
adc
pop
int3
ljmp
int3
jg
xchg
fmuls
loopne
test
jl
or
stos
or
mov
clc
cmp
jl
popa
mov
or
je
mov
test
mov
in
push
jmp
cwtl
jmp
xchg
pushaw
push
adc
daa
fs
pop
xchg
inc
jbe
ret
je
sbb
movsl
daa
xchg
or
cs
pop
push
inc
push
pop
and
mov
or
lods
mov
pop
rorl
jmp
lret
push
inc
imul
add
push
push
fs
jb
push
sbb
push
and
inc
jl
jae
shll
add
shll
mov
xor
push
int
imul
ficompl
or
push
xchg
into
sti
mov
popa
add
popa
and
fwait
adc
push
and
xor
movsl
or
stos
js
scas
xchg
or
mov
pusha
jo
ss
push
mov
repz
imul
xor
jno
scas
sub
ret
inc
fs
mov
pop
xchg
adc
mov
and
sbb
call
adcb
insl
sbb
lret
popf
jp
dec
push
ror
fildl
jg
push
inc
jb
mov
and
jb
sar
pusha
xorb
push
roll
setp
out
outsb
mov
iret
std
outsb
mov
dec
inc
sbb
fistpl
push
pop
sub
std
lret
pop
hlt
je
xchg
incb
xchg
ds
push
cli
jno
lret
insb
icebp
bndstx
mov
xchg
jne
loop
mov
mov
in
pushf
add
insl
xor
pop
call
adc
or
test
sub
std
sub
lea
cmp
ja
iret
xchg
test
jo
jg
mov
fdivl
jno
fwait
xchg
idivl
pusha
adc
mov
xor
push
rcrb
sbb
mov
mov
jl
bound
inc
jo
jp
lcall
lret
sub
mov
mov
insb
movsl
or
cmp
inc
or
icebp
cs
out
scas
pusha
adc
add
jo
es
lret
or
push
mov
cmc
cs
push
enter
or
loop
add
sub
cmp
pop
mov
dec
mov
test
jno
or
and
adc
lar
or
out
popa
test
push
inc
stos
jns
pop
pop
pop
mov
and
add
xchg
hlt
pusha
out
mov
jge
shrb
dec
test
stos
mov
mul
cmp
cltd
sbb
outsb
repnz
insl
mov
movsb
mov
push
cmp
mov
mov
aaa
dec
dec
adc
inc
cmp
loope
sbb
or
mov
xchg
out
lods
ljmp
test
cmp
lods
fadds
daa
fcmovne
xchg
jl
push
jmp
jns
sbb
je
pop
add
pop
mov
jnp
pop
neg
jge
mov
ljmp
xor
test
scas
imul
jns
jmp
movsb
inc
movb
cmp
lods
push
pusha
adc
cli
dec
adc
and
sbb
cmpsl
ljmp
cld
lea
sbb
lahf
ret
popa
and
fimuls
rorl
imul
test
loopne
mov
push
adcb
ja
ds
jnp
cmp
xor
push
into
dec
aas
sbb
lods
or
xchg
movsl
imul
aad
notb
lods
sbb
pop
cmp
mov
cli
xchg
inc
ret
xchg
pop
sub
dec
ror
es
or
loop
and
std
inc
lret
mov
cmp
rcl
mov
insb
lahf
xor
sub
es
iret
cli
add
xchg
int
jb
jb
xor
sub
mov
sub
jecxz
cli
adc
cmp
xchg
and
test
fnstsw
mov
inc
icebp
mov
mov
mov
mov
cmpsl
jl
sti
adcb
pop
jnp
adc
mov
jle
addr16
cmp
stos
out
jns
xor
int3
in
je
pop
out
pusha
pop
lods
mov
push
sbb
add
cmp
mov
stc
call
cmp
fcmovb
sub
icebp
scas
fstpl
push
cmp
lret
add
test
cld
or
cwtl
dec
and
xor
cli
pop
nop
pop
stc
mov
repnz
add
mov
jne
rorl
pop
out
in
cli
adc
sahf
popa
add
dec
cld
rorl
je
je
dec
in
pop
pushf
add
lods
dec
add
xchg
adc
xchg
loop
out
xor
push
and
jae
sub
divl
sbb
in
jbe
insb
sti
test
push
push
xchg
in
scas
loope
sub
add
daa
insl
mov
in
jge
pushf
cmp
subb
fstl
pop
rcrl
lcall
xor
loop
cmpsb
lret
iret
adc
aas
mov
jae
pop
inc
push
out
add
cwtl
adc
leave
fidivs
cli
stc
repz
sbb
mov
pop
jnp
push
sub
ret
imul
aad
jo
push
fistpll
cmp
pop
cli
fwait
es
movsl
lea
or
push
dec
and
pop
mov
ja
idivl
inc
jl
and
mov
mov
or
inc
and
dec
dec
movsb
sub
jne
adc
rcr
push
jo
ljmp
lock
in
fiadds
inc
fcmovu
dec
adc
jmp
adc
lds
aaa
jle,pt
out
jmp
mov
pop
push
cmpsb
mov
fcmove
mov
ja
sbb
sub
xchg
movsl
adc
and
test
addr16
adc
popa
sub
push
mov
dec
xchg
jnp
test
or
in
mov
stc
push
mov
push
or
and
mov
xchg
mov
test
sub
sub
in
dec
daa
je
flds
cli
jle
mov
aaa
loopne
xor
lock
dec
and
adc
pusha
push
pop
andl
outsb
mov
repz
push
add
xchg
inc
push
arpl
push
mov
sbb
sub
stc
mov
or
sti
loop
adc
jbe
sbb
mov
fisttpll
scas
jnp
leave
in
xor
dec
dec
sbb
xchg
imul
out
in
pop
mov
adc
push
jl
jno
push
jae
clc
cld
xchg
xor
jnp
mov
mov
inc
pop
cs
xchg
jo
pop
in
and
sub
addr16
roll
ss
mov
mov
pop
shrl
aam
xchg
iret
jl
loop
out
adc
sbb
cmp
movl
jns
push
test
cli
insl
xor
mov
cwtl
xor
push
cld
sub
shl
mov
enter
mov
pop
dec
imul
pop
icebp
sub
cmpl
push
imul
mov
xchg
outsl
cmp
setno
mov
sahf
es
imul
sub
cld
cwtl
fstpl
jno
inc
and
sbb
cmpsb
jb
inc
fists
jne
sub
xchg
mov
dec
pop
inc
push
jae
lret
and
add
test
ljmp
hlt
inc
fldt
push
std
jbe
push
jle
or
pop
imul
cmpb
movsb
dec
ljmp
mov
lock
or
incb
inc
sub
stc
cld
cmp
outsb
cld
out
xchg
js
push
rol
sub
out
mov
clc
sub
add
cs
xor
loope
rcr
bound
ljmp
or
jmp
or
jno
inc
sub
jne
cwtl
sub
bnd
negb
pop
mov
push
pop
pop
mov
push
insb
js
mov
xchg
pop
js
repz
pop
and
mov
jae
ss
test
lods
xor
dec
out
pop
sub
push
inc
mov
cltd
xchg
pop
out
xor
jle
push
dec
jb
pop
xor
add
push
fadds
inc
cmp
shlb
mov
or
cmp
pop
add
out
scas
stos
inc
sbb
stos
inc
test
and
in
mov
xor
mov
xchg
xchg
into
adc
outsl
add
in
aam
mov
xchg
mov
divl
movsb
and
adc
mov
sub
shrb
cwtl
mov
cltd
ret
mov
push
aaa
cwtl
shlb
push
callw
adc
iret
ja
sbb
loop
pop
jns
movsl
mov
push
adc
jb
pop
or
jns
add
and
ret
in
shl
add
mov
push
ficoml
std
inc
xchg
shrl
push
in
mov
jmp
and
mov
push
mov
lahf
imul
adc
push
sub
cmp
pop
or
jmp
sbb
cltd
dec
mov
das
xor
fs
dec
mov
inc
cmp
sbb
xbegin
in
stos
inc
popa
xchg
outsl
insb
in
sbb
adc
mov
inc
jnp
notb
test
mov
xlat
sub
loope
jmp
or
psllq
adc
fisttps
sbb
call
or
push
out
jnp
mov
das
pop
fsts
add
cld
int
xlat
das
push
add
iret
mov
icebp
bound
fdivrp
mov
push
jle
add
mov
icebp
add
jo
cs
cwtl
pop
aam
and
ds
pop
aas
mov
fcomip
cmp
adc
adcl
test
mov
or
sar
jecxz
inc
test
dec
in
les
outsb
fnstsw
std
loop
test
call
xor
les
mov
stc
jnp
sbb
mov
sar
aad
adc
mov
jle
jp
movsb
popf
std
imul
fwait
and
add
in
test
add
sbb
testl
inc
xor
mov
push
movsl
sbb
insb
push
fadd
sets
in
inc
sti
cltd
sbb
push
into
iret
lea
sahf
int
mov
mov
and
and
ret
add
or
ljmp
sbb
add
test
sti
movsl
jecxz
aam
ja
sub
sbb
dec
std
daa
icebp
frstor
adc
sbb
pop
mov
arpl
or
clc
mov
imul
arpl
and
inc
sar
pusha
out
dec
rcr
xor
dec
push
mov
pusha
jns
imul
cmp
xchg
inc
lret
add
mov
push
arpl
cmp
out
stos
cmp
inc
dec
add
loope
xor
aaa
xor
ret
leave
push
mov
out
aaa
lret
xor
mov
lods
cld
jbe
das
pop
push
adc
dec
adc
sbb
cmpsl
pop
std
xor
cmp
dec
sbb
push
mov
enter
loope
movsb
popa
rorb
out
in
xchg
subl
sub
cmp
adc
pop
ss
pushf
push
aam
or
pushf
xchg
orl
sbb
dec
lret
adc
add
bound
scas
insl
fcmovb
sbb
push
scas
push
push
pop
mov
sbb
push
arpl
shlb
inc
inc
faddl
nop
rcl
test
mov
xor
push
and
mov
add
pusha
mov
dec
mov
xchg
mov
fwait
hlt
cmpsl
mov
shrl
inc
out
mov
nop
loopne
bound
jmp
cmc
sub
neg
std
pop
xchg
popf
rorb
sub
nop
fistps
cmp
adc
lods
int3
ret
jmp
xchg
dec
test
inc
loopne
in
mov
mov
aam
xchg
orl
or
dec
imul
pop
sbb
rorb
imul
lods
xchg
fdivrs
pop
cmc
ror
or
sbb
push
mov
push
les
outsb
mov
jmp
jnp
xchg
rcl
jne
imul
mov
ljmp
test
mov
push
push
mov
xlat
push
push
mov
loopne
in
mov
subl
loop
stos
sbb
in
or
pop
mov
cwtl
xchg
mov
loop
jmp
adc
dec
repnz
cmp
xchg
pop
sub
repz
je
lret
jnp
pop
xor
xchg
jle
in
mov
int3
jge
jecxz
cmp
ret
call
ror
mov
or
xchg
xor
repz
xchg
mov
aad
loop
lods
iret
push
pushf
outsl
adc
mov
xchg
cmp
cmp
cltd
popa
ret
sbb
mov
add
mov
sbb
out
mov
ljmp
dec
or
pop
stos
adc
sti
mov
insl
mov
dec
mov
stos
add
xchg
sub
ret
xchg
ljmp
insl
shll
inc
sub
faddl
mov
lcall
clc
xchg
add
in
loope
fmuls
xchg
mov
xchg
push
jno
jg
cmp
jae
adcb
cmp
dec
sbb
xor
iret
stc
pop
int
mov
lret
mov
xchg
inc
movsb
adc
mov
add
pmulhw
mov
mov
test
ds
cmpsb
test
xchg
pmuludq
outsb
leave
imul
aas
int
adc
jg
inc
push
imul
pop
push
enter
adc
iret
iret
or
stos
dec
arpl
xchg
icebp
add
and
add
dec
ljmp
pop
xor
xchg
aad
mov
aad
sarl
std
movsb
les
arpl
xorl
pop
mov
cld
jne
jnp
ja
icebp
mov
loopne
sub
jb
rorb
imulb
mov
rclb
xor
fdivrs
mov
dec
pop
mov
popf
mov
mov
je
jmp
add
mov
outsb
mov
icebp
push
lea
xchg
in
inc
imull
inc
xchg
cmp
test
pop
pop
movsb
test
and
xchg
or
xor
add
inc
sub
adc
scas
adc
mov
sarl
lret
data16
pop
adc
cmc
aas
inc
jp
xchg
insb
cmp
mov
dec
loopne
scas
pusha
les
imul
add
jmp
outsl
jl
loopne
or
out
mov
popa
cmp
lret
jp
aaa
jl
je
int3
xor
pop
loopne
push
pushl
outsb
and
aas
and
jno
push
mov
dec
sbb
xchg
cmp
lea
lcall
mov
push
or
out
xor
xchg
mov
dec
sub
ret
adc
mov
and
add
sub
or
mov
sahf
push
ficoms
mov
outsb
mov
push
mov
in
push
inc
ret
rcl
jmp
jecxz
lods
call
pop
mov
fwait
aaa
ds
enter
dec
das
push
jmp
adc
imul
mov
xchg
pusha
popa
iret
and
mov
pop
inc
cmpsb
mov
loop
mov
mov
push
cmp
push
fistpl
gs
dec
mov
mov
scas
jne
or
push
lret
int
cmp
test
push
add
inc
pop
mov
dec
scas
add
in
add
sti
insb
out
in
mov
leave
ljmp
icebp
push
movsl
and
imul
test
pop
testb
lock
out
or
sub
lret
popf
shl
jae
xchg
rcr
or
mov
xor
sub
aad
leave
in
jg
pop
mov
push
popf
adc
enter
or
dec
xchg
cmp
mov
pusha
inc
mov
mov
outsl
test
jns
das
popa
push
or
pop
out
arpl
mov
les
sbb
or
nop
je
jne
imul
idiv
jno
cmp
xchg
dec
fwait
dec
int
iret
rcrl
cwtl
in
pusha
push
cmp
ds
adc
dec
jmp
outsb
push
jns
das
aaa
mov
subb
cmc
jge
pop
mov
adc
xchg
or
pop
pop
add
mov
jmp
mov
push
nop
int3
in
popa
mov
jp
sbb
mov
pop
int3
add
ds
sbb
dec
inc
xchg
pop
push
push
inc
mov
test
popf
xor
sub
shl
add
sub
pop
add
sub
lds
ds
xchg
pop
push
jbe
out
jo
lret
aaa
int3
xchg
pop
repnz
sub
mov
loope
popa
or
mov
lret
and
sbb
xor
into
imul
icebp
ljmp
int
sub
out
sub
or
mov
mov
jl
pop
into
cmp
pop
rcl
jge
lods
gs
cmpsb
dec
xor
rcl
jmp
add
mov
pmuludq
push
mov
inc
jp
nop
push
sahf
sbb
mov
cwtl
test
xor
dec
pop
push
or
inc
lods
test
je
pop
fnstenv
sub
sbb
inc
dec
lret
lidtl
sub
je
in
es
lret
jnp
push
mov
clc
sbb
sub
jle
cld
int3
divb
or
andl
mov
test
mov
aad
push
mov
call
repz
rcr
jns
cmp
movsl
jns
mov
mov
cltd
jp
push
adc
sbb
cmpsl
aaa
ret
bound
xchg
inc
out
rcrb
lods
adc
divb
rorl
jl
incb
mov
inc
ficomps
mov
shrb
aaa
dec
leave
fldenv
xchg
outsb
wrmsr
imul
mov
jbe
sbb
dec
in
xchg
sahf
dec
subb
sbb
mov
push
sbbb
dec
ljmp
cmp
jp
testb
pop
mov
aad
or
ss
ss
jo
movhps
jecxz
push
dec
jae
push
add
mov
xchg
dec
xor
push
movsb
push
jbe
mov
mov
or
cltd
cmp
push
inc
pushf
call
push
and
xlat
xlat
dec
cmp
xchg
push
inc
pop
dec
or
aas
in
out
pop
or
pop
je
jl
lods
adc
std
in
les
mov
push
scas
dec
rorb
jns
lcall
jo
dec
data16
lret
leave
mov
add
sub
xchg
js
sub
stc
fiadds
lret
in
scas
push
out
adcl
push
jo
aaa
aas
mov
xor
mov
pop
xor
and
jne
push
push
jnp
xor
and
jl
jns
push
rorl
popf
inc
pushf
dec
cmp
jmp
jnp
dec
xchg
ret
xchg
dec
sub
push
or
adc
adc
out
inc
adc
jns
sbb
idivb
into
and
lock
xlat
les
mov
jg
cmp
jo
loop
aad
pop
loop
inc
iret
repnz
push
cmc
sahf
push
dec
aaa
stos
mov
mov
sub
sub
divb
mov
imulb
and
fsubl
fwait
adc
mov
stc
mov
pop
pushf
popf
lock
cwtl
stos
in
mov
sbb
xchg
xor
cld
xchg
xchg
stos
outsl
decl
bound
jmp
sub
enter
push
fwait
in
adc
je
dec
cmc
pop
pop
xchg
fcompl
arpl
and
and
sahf
mov
iret
sti
inc
in
sti
imul
jmp
mov
sub
popa
mov
inc
mov
mov
std
push
out
sub
ret
icebp
in
xchg
push
sbb
in
sub
gs
jl
mov
out
mov
pop
mov
xchg
mov
aam
add
adc
pop
shr
lret
imulb
or
mov
sbb
loopne
mov
push
cmp
insl
sbb
jmp
sub
movsl
jnp
push
test
jle
mov
fmull
pop
pop
leave
js
je
cmp
xchg
rcll
movsb
sarl
jge
mov
inc
push
sbb
cmp
xchg
notb
mov
fisttpl
lea
stos
lods
aam
orb
jno
xchg
loop
pop
in
stc
xchg
mov
pusha
gs
iret
xchg
inc
rolb
or
enter
jae
test
pop
out
in
xchg
lock
mov
sub
cmc
movsb
mov
fcomip
xor
fdiv
add
jmp
insl
and
shr
and
stc
mov
cwtl
movsb
das
mov
inc
aam
in
sbb
xor
fcomps
sbb
dec
sahf
jecxz
xor
xchg
fldcw
int
leave
cmp
push
jmp
mov
lock
out
mov
je
cmpsb
mov
xchg
popf
push
push
loope
sbbb
dec
shlb
out
mov
mov
lret
sbb
mov
cmp
int3
pop
mov
inc
stos
jl
sbb
push
arpl
mov
cmp
inc
pusha
jle
cs
popa
or
or
hlt
ljmp
xchg
dec
fidivrl
sub
rcrb
push
stos
xchg
mov
cltd
adc
lods
xchg
mov
mov
int
push
mov
shlb
scas
ret
ret
call
mov
scas
jge
fidivs
insb
sub
pushw
mov
pop
push
and
sbb
inc
jae
mov
cli
ret
roll
pop
push
ret
push
movsl
dec
adc
pop
in
test
lcall
addr16
push
pop
xchg
icebp
dec
inc
mov
mov
mov
iret
mov
inc
or
call
push
xor
adc
xchg
add
in
cmc
cmpsb
cli
out
sub
sbb
iret
lock
imul
push
push
lds
xchg
lret
mov
nop
mov
jns
jb
add
xor
hlt
divl
aam
sahf
push
adc
mov
or
push
xchg
inc
push
cmpsb
mov
lock
fdivp
jle
add
and
xchg
add
in
mov
xor
mov
sahf
push
sti
out
jo
xor
sbb
and
pop
test
pop
mov
les
pop
add
mov
mov
mov
xor
xchg
and
pop
cwtl
cltd
jo
jle
aam
or
push
adcl
push
xchg
lods
add
xor
mov
ss
iret
cld
dec
test
dec
sbb
sub
mov
out
and
xlat
enter
inc
jle
aam
mov
ret
clc
test
inc
testl
xchg
lods
inc
ljmp
push
pop
nop
bndldx
xchg
loop
iret
shr
das
addr16
mov
fldl
fnstsw
or
fidivs
call
sbb
shll
sub
inc
stc
mov
imul
pop
scas
pop
sete
lds
dec
popf
out
pop
mov
mov
ss
call
shl
mov
lret
pushf
int3
outsb
fbstp
pushf
sub
adc
fs
push
loope
mov
rol
lret
stc
push
pop
dec
mov
add
and
jp
out
dec
mov
roll
cmp
je
dec
gs
xor
sub
aas
fwait
jbe
aam
add
xchg
testb
sbb
mov
orl
xchg
and
cmp
roll
nop
rcll
dec
jle
add
or
xchg
mov
ja
imul
pop
jp
pushf
push
mov
outsb
sbb
ret
outsl
add
enter
fstp
stos
xor
lods
sbb
pop
push
add
lds
jno
push
dec
lret
jp
inc
mov
mov
lret
test
jno
push
insl
mov
push
and
cwtl
addl
xchg
mov
add
xor
fildl
pop
divb
sub
pop
mov
pop
aaa
pop
into
in
sbb
and
mov
fimull
fwait
popa
xchg
movsl
loopne
cld
cmpsb
fstl
dec
andb
popf
fs
lret
sbb
mov
mov
jg
sub
inc
cwtl
fidivrl
das
daa
push
stos
mov
adc
sbb
aas
rcl
sbbl
sarl
les
push
xchg
jo
mov
addl
movsb
not
je
imul
sahf
mov
mov
mov
inc
in
sbb
cltd
sbb
add
mov
jns
xor
mov
pop
push
fildl
pop
clc
push
fsubl
in
shlb
jmp
xor
sub
mov
mov
sub
ret
push
in
pop
inc
push
mov
xchg
mov
dec
inc
outsl
nop
lcall
movb
outsb
and
push
hlt
ja
jb
sub
push
fwait
mov
or
jno
scas
adc
push
mov
cltd
fidivrl
fildl
std
add
leave
in
notb
fimull
fs
xchg
rclb
pop
add
fmull
je
add
imul
dec
insl
or
add
loopne
jnp
adc
cmp
rolb
add
stos
add
stc
add
mov
mov
call
scas
data16
mov
in
shrl
pop
dec
ror
mov
pop
sub
lret
popa
mov
mov
sahf
add
dec
imul
push
popa
ror
and
sti
add
cmp
es
and
push
scas
clc
cli
lret
loope
sbb
xor
lret
popf
hlt
cld
mov
adc
int
and
mov
jecxz
mov
push
data16
fstps
sub
fsub
loopne
sub
sbb
idiv
ja
xchg
movsl
fs
xlat
jecxz
stc
cmp
aad
pop
std
mov
int3
pop
jmp
fmul
pushf
adc
or
mov
in
fldl
cli
add
popa
cli
pop
test
iret
std
inc
mov
notl
movsb
loope
pop
into
rcrl
add
push
adc
addr16
fdivs
xor
insb
lahf
lahf
int
filds
xchg
pusha
mov
jp
pop
jae
or
push
mov
or
pop
aaa
sbb
pop
pop
inc
and
je
or
movsb
mov
xor
addr16
mov
lea
mov
jne
dec
cmc
loop
xchg
sti
mov
sub
les
adc
add
sbb
inc
and
popf
sbb
inc
push
and
pop
push
pop
movsl
movsl
inc
pop
mov
xor
and
fldt
cmp
xchg
xchg
outsb
inc
mov
push
loope
mov
inc
stos
and
sub
rorl
jbe
cwtl
jp
dec
or
in
test
sub
aas
dec
popa
dec
mov
and
push
scas
sub
push
sbb
leave
xchg
jmp
or
ror
pop
push
stos
popl
lods
xor
sub
mov
cmpsb
jnp
dec
fcompl
and
mov
cwtl
insl
xor
pop
in
sbb
daa
out
inc
les
inc
sbb
push
mov
push
ljmp
push
es
test
sahf
fnstcw
pusha
fisubrl
fstpl
lahf
ss
and
fldl
dec
jbe
xor
push
jno
subb
pushf
pop
or
sub
jne
push
int
outsl
out
push
xchg
scas
jns
popf
ficompl
testl
ljmp
mov
mov
addb
xor
xlat
pop
pushf
popf
nop
mov
lret
jb
push
push
or
into
adcl
sbb
ljmp
test
sbb
in
scas
test
jl
out
adc
jae
or
hlt
jp
scas
je
fwait
rolb
movb
iret
adc
aas
inc
mov
loope
push
mov
pop
cmp
mov
adc
sub
lods
mov
inc
adc
adc
ljmp
xor
xor
arpl
xchg
mov
test
mov
xor
or
rcl
mov
lods
insb
mov
jo
and
sub
dec
inc
sbb
add
xchg
or
pop
cmp
and
and
or
subl
fisubs
inc
bound
cmpsb
lock
test
xchg
popf
rcrl
cltd
mov
add
mov
lahf
adc
jmp
cltd
xor
pop
out
jae
jecxz
cs
mov
in
negb
scas
sarb
test
and
les
mov
in
mov
lock
push
mov
add
mov
pusha
push
nop
adc
arpl
sti
xchg
xlat
enter
pop
xor
cmp
cmp
stc
shrl
nop
imul
inc
mov
aam
cmp
jno
out
xor
das
push
cmp
ret
bnd
imul
sub
sbb
push
push
cmpsb
cmpsb
pop
jns
inc
shlb
icebp
dec
xor
adc
cmp
add
cmp
fcomi
out
sarb
leave
sub
lret
sarl
es
pushf
cmp
sub
dec
movsl
imul
push
scas
les
daa
mov
or
shlb
add
daa
stos
nop
fwait
sbb
gs
xlat
add
icebp
insl
ljmp
stos
dec
lahf
jbe
insb
int
shl
cs
sub
mov
aad
testb
mov
stos
mov
sub
dec
fnsave
loope
and
clc
lret
mov
mov
push
xchg
sbb
add
rcrl
pop
popa
jle
and
lock
cmp
bound
jle
in
test
push
loope
lods
mov
arpl
add
lret
push
mov
cmp
xchg
out
cmp
xor
sbb
rorb
mov
test
sbb
xor
sti
pushf
outsl
and
xor
std
xorl
int3
stos
mov
insl
push
aaa
xchg
pop
leave
outsb
xchg
das
fmuls
aaa
jle
ljmp
mov
cmpb
imul
insb
add
out
test
sbb
in
inc
fdivrl
dec
rcrl
movsb
clc
xor
aam
repnz
jae
jnp
lods
push
sbb
je
push
lods
jg
adc
mov
lds
insb
mov
int
loop
sbb
xchg
pushf
jle
mov
test
and
retw
xor
sarl
stos
test
aad
out
ja
cmp
das
movl
xor
loopne
imul
mov
mov
in
cmp
in
jle
into
xor
jne
jo
mov
out
arpl
jnp
jne
mov
xorb
stc
out
out
gs
add
cwtl
loop
dec
mov
stos
push
pop
push
sbb
cmp
out
mov
adc
sarb
pop
sar
push
xlat
dec
push
hlt
xchg
xor
mov
push
add
iret
mov
rorb
cmp
pop
jno
mov
sbb
lcall
jmp
xorl
pop
lock
into
xor
js
mov
xor
out
add
orl
jnp
sti
inc
sub
mov
mov
lds
shr
push
push
mov
or
int3
loope
aam
rorl
inc
mov
fsub
inc
das
cmpsb
sub
inc
mov
and
push
shll
add
dec
scas
imul
jle
lds
outsb
xor
jg
clc
jmp
hlt
cmp
pusha
ss
jb
aas
movsb
push
or
mov
mov
les
shrb
rol
in
mov
sbb
pop
test
pop
or
fidivrs
cltd
jo
sti
or
inc
inc
lds
js
jnp
loop
xchg
ja
jle
and
out
push
add
inc
lds
out
push
repnz
jnp
add
jb
sti
daa
stos
xor
inc
inc
movsl
imul
in
fstps
sbb
cmpsl
fcomi
out
jp
aaa
jle
fwait
aad
ja
cld
ljmp
jb
xor
lods
imul
mov
xchg
mov
push
push
jl
mov
fwait
ds
mov
lahf
rorb
or
add
in
lea
dec
xlat
pop
lcall
pop
fsubrs
sub
xchg
mov
lret
or
sub
inc
imul
jl
sub
add
pop
in
adc
mov
cwtl
and
and
in
and
out
mov
ficompl
rorb
sub
je
inc
inc
adc
jle
xor
cmp
mov
jno
cmpsl
les
gs
xor
cli
sub
dec
sti
jl
in
test
inc
cli
pop
or
pop
dec
repz
popf
mov
lds
fwait
jbe
int3
in
ds
clc
lahf
jb
shrb
push
cmp
adc
mov
add
push
jnp
out
push
test
imul
xchg
repnz
xchg
mov
jno,pt
mov
loopne
or
fildll
into
mov
aas
nop
ret
xchg
cmpsb
pusha
jbe
imul
cmp
bound
xor
and
test
jae
es
mov
inc
in
adc
bound
push
mov
mov
push
fidivrl
and
pop
jns
jo
out
movsl
andl
lds
pop
mov
xchg
jmp
xchg
jmp
adc
divl
xor
mov
xchg
push
sahf
push
inc
jno
std
pop
xor
jp
nop
inc
subb
aaa
fs
fadds
inc
adc
jg
push
out
sbb
xchg
aaa
adc
lahf
loop
lods
jmp
mov
std
movsl
dec
mov
pop
cli
adc
or
dec
mov
push
arpl
call
clc
sbb
arpl
mov
push
loope
mov
mov
nop
repnz
pop
int3
addr16
mov
pop
fwait
jle
lret
lods
jl
mov
leave
lret
sbb
xlat
adc
pop
push
mov
mov
cmpsb
ffree
hlt
mov
outsb
sbb
pop
lea
jbe
sti
jnp
adc
ret
outsl
lods
fdivp
push
adc
inc
or
and
pushf
test
mov
addr16
fiaddl
in
push
es
cs
div
pop
adc
inc
aam
push
mov
jecxz
stos
push
sub
sub
rolb
sub
stos
mov
mov
mov
in
lahf
imul
shl
pop
sub
mov
ret
mov
or
inc
xor
mov
stos
nop
js
xchg
adc
iret
or
repz
cmp
test
sbb
add
mov
nop
mov
sbb
cmp
mull
lret
mov
or
dec
xchg
fcmovne
mov
sarb
inc
pop
mov
aaa
push
dec
je
jge
test
imul
inc
inc
pop
cmp
pop
arpl
notl
xchg
enter
push
xor
jne
pop
xor
sbb
sbb
pushf
dec
xor
das
dec
scas
jle
mov
mov
jb
xchg
ja
jg
mov
stc
outsl
pop
outsb
dec
and
lea
test
sbb
push
stos
packsswb
xchg
or
loopne
mov
xor
mov
addb
clc
or
je
pop
shufps
gs
stc
lahf
push
pop
ljmp
jae
mov
lods
adc
daa
cmp
sub
jle
or
push
xchg
push
xor
mov
out
scas
int3
inc
add
lds
mov
sub
das
in
push
aam
jmp
ret
sti
aaa
loope
mov
inc
jl
mov
push
mov
push
test
into
push
jmp
dec
stc
sbb
test
insb
push
xchg
jle
and
push
aas
insl
push
inc
orb
loop
out
or
mov
shrl
mov
sbb
pop
out
mov
popf
xor
sbb
cmc
movq
inc
pop
testb
in
popf
cmp
xchg
or
repz
sbb
add
dec
mov
jg
and
scas
pop
test
xchg
pop
push
sbb
sbb
sti
call
lods
in
or
inc
jmp
imul
sub
add
mov
xor
in
test
ljmp
adc
dec
adc
mov
cwtl
add
mov
test
and
cld
insl
mov
cmpsb
jb
pop
and
scas
mov
pop
jno
xchg
pop
xchg
or
fstpl
fldl2e
push
lahf
divb
jge
imul
test
mov
sbb
out
repnz
dec
push
sub
fwait
jg
sub
out
jecxz
sti
ja
inc
jmp
inc
iret
xlat
inc
or
mov
xor
adc
push
lds
jecxz
inc
pop
jmp
jp
jnp
das
pop
add
es
mov
jb
stos
fistl
xchg
fildl
lock
out
mov
imul
mov
adc
js
jb
sbb
xchg
xor
shrb
push
addr16
add
and
out
adc
cmp
adc
sbb
aas
test
xchg
mov
pop
xchg
xchg
nop
push
stos
test
jnp
mov
addr16
out
and
int3
push
out
outsb
aaa
push
sub
in
gs
add
cli
scas
push
aas
movl
push
lea
adcb
out
push
stos
rorl
call
int3
mov
imul
sbb
or
cwtl
nop
test
ret
repz
fisttpll
orl
jns
xor
imul
cld
mov
lahf
int
cltd
fs
or
ret
mov
lock
aad
fistps
inc
decb
sbb
int3
xor
or
js
inc
and
dec
pusha
mov
cmpsb
add
dec
cmp
fcmove
in
ss
mov
outsl
ljmp
leave
test
xchg
mov
cmc
jmp
nop
xchg
mov
aaa
rcrl
xchg
sbb
mull
dec
mov
jecxz
les
xor
jnp
ljmp
xorb
push
xchg
pop
sbb
jle
jg
jecxz
loope
pop
addr16
pop
test
in
fisttpl
ficompl
icebp
adc
mov
and
mov
sub
ffree
xchg
in
cmp
bound
fs
fnstsw
lock
sub
jb
pop
repz
fmulp
repnz
in
aam
add
loope
xor
sbb
jl
push
out
subl
mov
cltd
fstpl
shrl
insb
test
jmp
call
iret
stc
add
repnz
popa
mov
sub
cmp
xchg
lea
test
add
dec
icebp
adc
mov
adc
push
scas
in
aaa
xchg
fldcw
cli
mov
lock
adc
lea
sti
andl
hlt
adc
jmp
lahf
fadd
mov
mov
dec
sub
sbb
arpl
std
pop
adc
cmp
arpl
jns
dec
inc
mov
adc
frndint
mov
jbe
dec
nop
inc
andl
mov
xchg
aam
mov
sub
into
mov
lret
jle
or
sub
jo
notl
shll
addr16
push
out
cmc
ja
jp
repnz
xchg
lds
pop
add
lcall
pop
inc
push
mov
subb
mov
fadd
push
pop
mov
push
push
repnz
popf
rclb
scas
sarl
pop
cmp
push
pop
push
pop
or
outsl
add
dec
ret
xchg
mov
inc
jp
mov
mov
xor
into
sbb
into
dec
xchg
sbb
adc
jecxz
rcrb
icebp
mov
sub
sbb
out
rcll
dec
jo
loop
or
mov
or
sub
mov
fiaddl
test
cmpxchg
jge
cmp
mov
andb
dec
xchg
mov
test
add
outsb
jo
mov
inc
cmp
mov
mov
and
xor
scas
add
outsb
lahf
sub
cmp
jl
test
shll
push
xor
scas
sbb
and
pushf
sti
es
push
mov
or
leave
bndstx
sub
push
repz
insb
lds
cmpsl
sbb
or
out
pop
or
outsl
pusha
sbb
test
dec
aaa
fdivrl
jmp
and
inc
loop
popf
lods
stos
loop
cmp
inc
rcl
xchg
mov
cmp
lods
cmpsl
pop
in
dec
jbe
dec
xchg
test
std
mov
dec
push
out
push
test
pop
mov
inc
push
adc
enter
dec
add
ja
out
js
sahf
inc
addl
cwtl
push
popf
mov
loope
lret
mov
inc
sub
lret
icebp
pop
dec
mov
test
fstl
stc
sahf
and
push
scas
push
xchg
cmpl
adc
mov
xorb
cli
cmp
stos
in
popa
sub
push
mov
in
xchg
addb
ja
cmp
loope
dec
icebp
imul
add
jno
icebp
sbb
xor
pop
jnp
gs
adc
aaa
call
pusha
fimull
sbb
daa
out
int
jae
sub
inc
pusha
data16
jl
mulb
repnz
adc
jb
mov
dec
jo
push
call
rclb
leave
add
sub
fcompl
xlat
ljmp
out
aad
mov
sub
aaa
iret
lahf
pusha
push
jnp
cmp
and
adc
and
mov
push
xchg
rorl
jb
mov
xor
xor
je,pt
faddl
inc
cmp
mov
lea
mov
dec
dec
pop
imul
mov
int3
mov
mov
push
pop
movl
gs
aam
fsubrp
pusha
lea
mov
mov
loopne
sbb
inc
xchg
sahf
vunpcklps
aad
push
sbb
sbb
es
mov
xchg
push
test
lret
fisubs
test
sbb
out
mov
rcrl
loop
hlt
adc
scas
push
xchg
mov
cmp
mov
inc
inc
sub
ja
fisttpl
pusha
jmp
xchg
xlat
sbb
mov
addl
call
daa
ljmp
aaa
or
cmp
push
std
add
jo
outsb
addl
dec
fisubrs
andl
pop
adc
loop
inc
pushf
sbb
pop
pop
dec
movsb
dec
shrl
loope
sbb
orw
lea
jp
xor
mov
xchg
jp
pop
mov
push
mov
mov
scas
es
in
hlt
ja
jnp
xchg
rcrl
sbb
fsubs
push
cmpb
repnz
xchg
cmpb
mov
sub
in
and
or
adc
movsl
loope
ficompl
ss
aas
fisubrs
in
imul
shlb
pushf
and
es
and
jl
fimuls
out
popa
in
inc
cmp
cs
imul
dec
rcrb
dec
mov
in
outsl
cmpl
or
jmp
test
aas
fs
mov
enter
push
sbb
test
cs
xor
mov
cmp
scas
push
js
mov
sbb
and
bound
xchg
stos
pop
cld
adc
lcall
shlb
in
movsb
call
xchg
aas
dec
or
dec
pop
test
enter
js
adc
xor
sub
cmp
sar
cld
mov
or
pop
in
lock
imul
jecxz
push
rolb
xor
jnp
xchg
loope
stos
mov
push
aaa
push
addr16
insb
les
in
outsl
pop
movb
push
push
adc
lahf
into
lds
leave
cmpsl
mov
bound
mov
repz
mov
int
pop
push
test
aas
adc
cmp
pop
and
popf
in
das
jno
inc
bound
inc
push
cli
push
mov
fldcw
imul
cmp
jge
dec
bound
mov
jmp
sar
add
dec
mov
jno
sbbb
cwtl
lods
test
cmp
push
jecxz
rcl
xchg
jecxz
push
into
pop
sti
xor
pop
xchg
adc
data16
dec
mov
movl
mov
aaa
fcomps
jle
cwtl
push
in
out
test
stos
mov
pusha
cltd
and
mov
mov
sbb
lcall
push
xchg
lods
mov
xchg
add
jbe
mov
mov
pop
adc
sub
pop
orb
jp
sbb
dec
adc
popa
test
movsl
lret
movsb
mov
das
out
sbb
fbstp
inc
jle
push
pop
jo
je
stc
rcll
push
lahf
sbb
jne
mov
cld
orl
xchg
es
cli
mov
xor
xchg
daa
pop
dec
jp
test
popa
insl
notb
adc
ja
pop
aad
cmc
roll
loope
and
mov
mov
xlat
lds
push
subb
or
jecxz
jbe
jl
dec
jl
adc
addb
xchg
icebp
mov
test
sti
fnstcw
jno
scas
sbb
into
mov
addl
test
cmp
jp
ljmp
leave
imul
xor
adcb
jbe
dec
fists
fsubrp
cmpb
inc
insl
repz
pushf
mov
cwtl
mov
arpl
mov
pop
mov
and
jg
in
mov
jns
and
pop
cld
shrb
pushf
rcll
jle
adc
in
repnz
push
addb
push
stos
lret
lahf
adc
data16
xchg
sub
pushf
add
or
scas
add
pushf
arpl
sbb
cmp
das
cwtl
mov
sbb
cmp
jns
adc
stc
mov
cmp
cmc
ret
xchg
imul
popf
popl
sbb
call
pusha
outsl
notl
sbb
or
jns
lock
loop
jl
add
mov
repz
pop
dec
cmp
cmp
jecxz
jge
scas
jo
sub
mov
cmp
push
push
iret
jge
or
xchg
scas
cmpsb
lock
mov
sar
sti
cwtl
cmp
push
add
test
es
movsb
pop
pop
shrb
call
mov
imul
jno
and
sub
sbb
dec
ja
lock
dec
test
and
imul
out
scas
fs
in
and
jo
bound
ljmp
mov
popa
repnz
movsb
or
in
fnstsw
jne
ret
cs
jne
dec
rcll
xchg
lret
lahf
push
inc
cmp
dec
cmc
inc
sahf
dec
dec
dec
pop
popf
pop
sbb
sub
mov
inc
cmp
arpl
inc
mov
not
lea
insl
pop
mov
mov
push
mov
sub
or
scas
fcoml
xchg
or
mov
lea
mov
imul
and
cs
xor
fistps
negb
push
push
push
into
adc
or
fucomp
mov
add
and
pop
insb
icebp
push
mov
int3
dec
jmp
cld
mov
dec
push
test
sbb
dec
dec
jae
jecxz
xchg
clc
mov
xchg
jne
movswl
add
push
in
xor
vandnps
pusha
out
push
adcb
cwtl
sahf
pusha
movsb
scas
lods
gs
push
out
jmp
xchg
out
push
cli
lahf
into
jle
jg
popf
lds
into
sub
mov
outsb
and
mov
and
insb
xor
and
pop
in
int3
sub
daa
movsl
lea
jmp
insb
xlat
xchg
adc
aas
clc
or
add
ja
sub
mov
mov
in
cs
test
lds
dec
mov
cmp
push
mov
out
test
in
movsb
fwait
cwtl
ret
jns
rcr
loope
lcall
fildl
ss
in
cmp
push
gs
cld
ss
into
in
jecxz
pop
push
loop
clc
or
arpl
in
jnp
nop
mov
cli
push
bnd
jno
lret
mov
pop
loop
jbe
pop
pop
imul
test
mov
je
pop
and
push
jmp
push
lock
xchg
mov
repz
xchg
sub
cmc
das
sbb
cmpsb
out
mov
adc
shlb
push
adc
dec
movsb
and
fisttpl
cmp
loop
insl
add
adc
sub
push
push
cs
add
adc
dec
adc
mov
push
jmp
xor
pushf
jae
xlat
fiaddl
xor
jmp
cmp
mov
mov
loopne
out
dec
jo
int3
cltd
cli
inc
sti
or
addr16
inc
mov
adc
and
sub
jmp
mov
jl,pt
xchg
lcall
sbb
add
push
add
in
cmpb
movsb
inc
cmp
pop
inc
mov
addl
pop
and
jge
xchg
arpl
std
push
or
stos
jecxz
mov
aas
dec
inc
rclb
fcmove
jge
inc
outsb
mov
hlt
xchg
jge
pop
sub
and
dec
pop
scas
pop
dec
out
mov
inc
and
nop
lods
or
mul
cmc
lds
std
je
pop
clc
cmpb
imul
test
sbb
sub
out
and
cli
das
aas
stos
and
insl
mov
push
add
add
inc
xchg
inc
push
mov
daa
lret
lds
rclb
test
sub
sub
sbb
popf
cld
ret
shlb
xchg
pop
push
inc
mov
mov
xchg
or
adc
repz
inc
imul
popa
fs
xlat
test
adc
adc
mov
sti
mov
dec
inc
mov
push
jl
push
shrl
push
sub
mov
or
adc
adc
hlt
hlt
ss
xchg
xor
stos
pop
fwait
mov
movsb
inc
cmpb
push
mov
nop
push
das
push
inc
push
push
pop
popf
pop
pop
fistpll
push
pushf
loop
push
mov
push
loop
cltd
cld
jnp
leave
xlat
test
insl
inc
loopew
adc
es
jnp
mov
lods
imul
inc
add
int3
push
gs
icebp
mov
data16
jmp
jecxz
data16
cmp
or
cmpsl
adc
and
cmp
add
lds
stos
shll
in
stos
dec
shll
mov
movsl
inc
nop
pop
add
add
enter
mov
dec
in
ss
cld
cmpsl
iret
xor
pop
pop
rclb
mov
push
icebp
aad
cmp
repz
out
sbb
ret
jp
mov
mov
mov
out
call
testl
push
sbb
cwtl
sub
xchg
cli
push
jo
mov
inc
jle
jg
pandn
pop
cli
lea
cli
inc
sub
stos
jno
aaa
call
adc
sub
xor
leave
out
pop
loopne
ljmp
arpl
fimull
sub
mov
jae
dec
insl
mov
mov
push
add
mov
jge
out
or
jne
sbb
xchg
jg
mov
std
fdivr
out
adc
lds
fsubr
call
add
insl
pop
dec
push
cld
push
mov
adc
pop
sarb
std
dec
and
out
push
cmp
stos
idivb
jle
pusha
loop
sub
loopne
cwtl
addr16
dec
outsb
push
xchg
inc
pop
cmp
inc
pop
sbb
mov
sbb
pop
push
cltd
jg
daa
sub
sub
int3
pusha
cld
daa
pop
mov
sub
adc
mov
or
mov
je
repnz
out
ljmp
in
xchg
imul
push
cwtl
mov
and
cmp
jp
clc
stos
lret
loop
xor
and
xchg
mov
js
push
cmp
mov
fdivrl
jle
jecxz
arpl
addr16
int3
push
scas
outsl
pop
inc
push
push
jge
add
mov
cld
dec
cmc
fcoml
dec
cmp
mov
pop
mov
xchg
jmp
and
cmpsl
stos
repnz
dec
inc
out
jp
adc
out
cmp
pop
lahf
sub
push
cli
out
fildll
xor
or
stos
inc
push
dec
push
scas
loopne
and
dec
fldt
sub
pop
aam
data16
hlt
incb
call
cmp
lods
ds
sub
inc
mov
jl
in
sbbb
es
xor
dec
and
mov
fs
sbb
in
popl
mov
repz
mov
aam
mov
fucom
mov
and
lock
mov
xchg
dec
xor
cmp
sahf
mov
adc
mov
add
bound
jbe
sbb
sub
mov
jecxz
ja
xor
or
mov
and
ret
in
loopne
stos
mov
aaa
movsl
adc
add
sbb
jns
jo
sbb
pop
aam
and
dec
and
ds
adc
sahf
rorl
sahf
enter
insb
popa
sbb
test
pop
fld
mov
push
pop
or
cs
sub
jb
cltd
fwait
xchg
adc
out
das
push
aas
pushf
test
hlt
clc
inc
push
fmuls
add
mov
xchg
pop
jle
mov
cmpsb
or
fwait
aaa
push
pusha
pop
cld
ficomps
dec
mov
xchg
xchg
mov
mov
loopne
es
shl
jg
aad
dec
cmp
push
mov
push
add
shl
sbbb
xor
mov
add
adc
cmpsl
test
clc
pop
ljmp
cmpsl
mov
mov
sti
xchg
push
leave
inc
and
pop
cmpsb
sub
repnz
jle
in
push
dec
jecxz
pop
mov
cltd
mov
dec
mov
addl
hlt
sbb
inc
loopne
mov
jmp
cmovns
cli
sbb
jle
sub
movsb
cmp
push
adc
fiaddl
cmp
pop
or
clc
nop
mov
mov
and
xchg
aaa
and
xor
push
inc
lret
inc
popa
jl
pop
std
mov
cmp
fmulp
test
pusha
cmp
add
sub
rol
dec
add
add
mov
mov
and
mov
jb
insb
adc
cld
add
mov
int3
and
push
aam
icebp
cwtl
shl
mov
mov
mov
and
dec
adc
and
fstpt
int3
out
ret
clc
out
xchg
ror
xchg
push
xchg
mov
idivl
xlat
and
imul
jmp
mov
incb
xor
jns
cmp
in
or
stc
mov
xchg
push
inc
lahf
push
mul
jae
scas
pop
push
fsubs
mov
insb
mov
mov
jbe
repz
iret
je
arpl
js
jecxz
sbb
pop
xor
and
loopne
mov
dec
ret
mov
cli
dec
fmul
mov
add
jmp
mov
lds
daa
sub
mov
aaa
mov
push
xchg
cmp
or
scas
dec
mov
dec
add
int3
iret
sbb
fcoms
popa
js
add
adc
mov
cltd
imul
adc
js
aad
clc
popa
xor
jae
mov
test
push
pop
mov
enter
aam
lret
nop
sarl
push
pop
insl
in
iret
out
lcall
cwtl
aas
stos
mov
push
xchg
icebp
sub
mov
push
jne
sbb
pop
push
push
insb
aaa
push
mov
mov
mov
sbb
add
or
inc
xor
mov
sub
js
out
arpl
xor
add
out
sbb
ds
into
mov
sub
fs
es
shlb
stos
xor
pop
aas
jae
add
push
push
and
xchg
rcr
testb
jae
adc
and
loopne
mov
sarb
mov
pop
enter
js
pop
and
jecxz
ja
fsubl
add
pushf
sub
add
xor
pop
jle
imul
lret
lret
mov
sbb
pop
fistpl
movsl
es
rol
lods
lock
ljmp
sub
es
movsl
dec
inc
jo
cmpl
mov
push
push
mov
repnz
add
add
pop
les
lock
sub
cmp
adc
and
xchg
inc
fistpl
cs
mov
push
xchg
fucom
sub
fdiv
xor
pop
out
mov
adc
mov
adc
add
jbe
fucompp
lret
mov
ficomps
mov
sub
outsb
fucomip
cmp
rorb
push
into
rcrb
add
lock
lahf
xor
outsl
pushf
insb
jmp
mov
dec
dec
iret
std
mov
test
rclb
mov
jl
incl
push
xchg
xchg
aam
fistpll
mov
lret
push
pop
pop
sbb
stos
cmp
mul
xchg
test
pop
inc
or
add
xchg
xchg
push
shl
sub
jl
lods
stos
and
in
cmp
jbe
sbb
lods
cmp
mov
pusha
test
inc
mov
imul
inc
fnstsw
mov
xchg
cwtl
xchg
xchg
pop
inc
push
sub
stos
mov
sbb
lods
push
int3
icebp
mov
push
add
mov
and
jecxz
les
and
pop
or
mov
icebp
addb
shll
imul
cmc
out
jmp
xchg
and
mov
fs
xchg
movsl
sub
xchg
fiaddl
mov
inc
into
test
sub
pop
clc
outsl
les
mov
jno
and
sbb
cmp
stos
addr16
adcl
fcoml
int3
arpl
lods
cmpsl
rclb
mov
jo
push
mov
mov
xchg
mov
sar
dec
int
and
mov
popa
int
scas
ror
filds
aad
sub
pop
ljmp
mov
xchg
pop
mov
push
stos
pop
pop
adc
xor
jb
xchg
dec
push
push
bound
mov
jmp
jle
int3
and
mov
sbb
sti
enter
add
fists
test
add
mov
xlat
scas
mov
pushf
sbb
ret
xor
lahf
in
pop
mov
dec
jbe
in
push
fidivrl
aam
popa
out
jb
jmp
fdivrp
xor
iret
sbbl
jno
inc
test
mov
xchg
mov
test
jge
add
mov
push
rcrl
cld
addl
lcall
pop
mov
dec
add
xchg
push
bound
cmp
jle
push
jmp
ds
mov
leave
mov
pop
mov
mov
ja
jle
stos
outsb
mov
daa
pop
lock
sub
xor
pusha
enter
and
add
scas
insl
mov
daa
push
les
mov
mov
jl
push
aas
in
mov
bound
les
mov
arpl
cmp
fbstp
dec
orb
rcll
pop
inc
in
mov
sub
aaa
ja
sub
into
xchg
push
orl
sbb
stos
mov
push
sbb
fwait
imul
repnz
and
xchg
mov
jb
sbb
hlt
cmp
jecxz
int3
addl
shll
xchg
and
aad
sbb
je
jbe
xor
outsb
dec
xlat
cmp
xchg
cmp
mov
lret
mov
push
xor
iret
dec
sub
outsb
xchg
pushf
or
in
enter
lock
mov
push
loopne
xor
adc
push
stc
sub
clc
loope
out
mov
fld
loopne
dec
stos
push
pop
mov
mov
inc
test
movnti
sbb
xor
ret
sbb
mov
lret
sbb
add
mov
pop
sbb
xor
sahf
xor
fnstenv
mov
xchg
add
mov
sbb
mov
or
jmp
fwait
jnp
loopne
push
fisttpl
or
cs
or
pop
int3
imul
leave
mov
les
push
inc
mov
or
push
cmp
mov
xor
xchg
mov
mov
arpl
mov
mov
mov
cld
jle
push
jo
fidivrl
ss
push
xchg
insb
nop
repnz
push
popf
das
xchg
ljmp
dec
cmc
push
sub
jae
sub
lock
movsl
into
repnz
xlat
test
out
das
clc
xor
mov
aaa
imul
stos
mov
cli
jg
inc
test
pop
mov
fldt
cmpsl
mov
xor
and
imul
pop
cli
repz
sarb
lods
js
jle
mov
cld
shll
and
inc
push
xchg
rclb
call
inc
mov
and
pushl
push
pop
mov
lret
xchg
jb
ds
je
sub
iret
push
add
mov
xor
mov
and
ss
leave
test
outsl
cld
sub
adc
imul
icebp
ret
cmp
addl
aas
cmp
outsl
fcompl
add
xchg
lret
dec
sbb
jg
mov
inc
cld
sbb
mov
in
adc
push
int
mov
icebp
scas
stos
nop
es
ljmp
cmova
and
fsubrl
cli
jnp
sbb
xor
mov
sub
cmp
add
adc
xorl
es
sbb
pop
daa
testl
addr16
cmp
jne
sbb
fnstenv
inc
sbb
mov
lock
jne
adc
mov
push
mov
dec
add
cmp
jge,pn
sbb
mov
xor
mov
sbb
push
imul
inc
sbb
addb
and
add
outsb
cmc
jb
inc
fistpll
mov
sbb
pop
mov
insb
mov
mov
mov
ret
mov
cld
push
test
sbb
rcll
or
mov
sub
out
lods
push
push
push
sti
pop
lds
mov
mov
lods
push
jg
mov
in
mov
into
push
addr16
cwtl
xchg
pop
jae
jle
and
js
sti
test
mov
aaa
dec
push
adc
std
sub
mov
inc
adc
push
dec
scas
lock
inc
sti
xchg
mov
test
push
push
xor
nop
add
xchg
pop
mov
xor
sub
sahf
movb
fwait
pop
mov
xor
pusha
movsb
xorb
sbbl
add
rcrb
in
into
rolb
mov
push
add
mov
scas
add
adcl
into
mov
push
and
test
xchg
push
mov
dec
inc
ss
mov
lret
sbb
es
filds
xor
pop
xor
or
popf
pop
gs
fdiv
clc
rolb
ja
jbe
add
xchg
add
cmp
ret
lea
mov
bsf
fstpl
pop
mov
sbb
movsb
jge
inc
and
push
sti
xchg
jmp
jge
dec
movsb
shr
push
xchg
xchg
mov
stc
leave
jp
lcall
jne
sub
xchg
aaa
push
jp
add
pop
pushf
mov
clc
pop
cmp
mov
inc
fsubs
mov
sub
pusha
add
pop
scas
mov
int
mov
test
addb
rol
andl
push
adc
sbb
add
xlat
sbb
imul
pusha
xchg
ficomps
aas
xchg
mov
notb
lcall
add
inc
inc
les
adc
aas
aad
movsl
lret
dec
push
imul
clc
pop
jbe
jbe
pop
cwtl
sbb
movl
bound
mov
sbb
jbe
jmp
jb
xlat
sti
mov
inc
out
pop
push
test
fdivl
idivl
cwtl
add
cmpsb
imul
add
seto
stos
jne
cmp
push
stos
hlt
cmp
lret
sub
add
adc
xor
and
xchg
notl
addr16
std
fwait
leave
outsb
jecxz
pop
mov
filds
mov
rcl
and
push
xor
out
adc
daa
stos
loopne
notb
mov
push
out
repz
fld1
fmull
and
je
das
push
mov
aam
in
pop
ret
sbbl
mov
repz
xchg
out
xor
addl
hlt
dec
pmullw
dec
leave
mov
inc
xor
push
push
push
ljmp
xchg
inc
or
mov
dec
push
mov
dec
outsb
and
cmpsl
test
jp
fdivs
sub
adc
bnd
mov
add
shlb
repnz
lds
mov
add
xor
adc
cli
mov
aas
mov
stos
dec
movsl
jne
mov
test
xchg
xor
and
inc
sbb
lret
out
icebp
in
push
int
jmp
rcr
cwtl
test
push
insb
dec
and
or
cs
jle
pcmpeqd
sub
jne
jbe
pushf
xor
cltd
push
loopne
adc
lahf
mov
sar
mov
cmp
sti
dec
cwtl
loopne
add
repnz
add
push
es
or
cmp
sub
sarl
xchg
add
sbb
xlat
xorl
pop
outsl
in
notl
adc
push
push
or
xchg
pop
test
mov
nop
push
ss
dec
push
xor
fisttpl
add
adc
ss
dec
sbb
jmp
enter
ret
lret
imul
mov
and
cmp
jle
dec
jl
mov
xor
stc
mov
jp
or
add
movsb
imul
xor
add
push
mov
xchg
mov
icebp
fld
mov
mov
cmp
pop
movsl
gs
pop
and
jo
xchg
sbb
das
or
push
out
mov
adc
pushf
jnp
insl
daa
loopne
lret
scas
cmp
or
mov
mov
scas
push
outsb
out
subl
or
rclb
dec
fwait
lahf
sarl
int
or
push
cmpb
sbb
mov
ret
and
mov
daa
rclb
scas
mov
and
aam
and
jl
mov
data16
pop
push
movsb
mov
jo
push
mov
xchg
pop
mov
jmp
sbbl
outsb
test
dec
jmp
repz
mov
clc
ret
jle
lcall
movsl
stos
add
pop
pop
adc
ficoml
sub
es
sarl
jnp
stos
fidivrl
push
js
and
fidivl
imul
sbb
nop
push
stos
pop
rcrl
iret
dec
out
push
aam
and
in
sbb
pop
sbb
jno
stc
or
mov
lahf
push
sub
test
sub
or
sub
sbb
mov
pop
xor
mov
xor
push
clc
jbe
push
ss
addr16
sbb
cs
mov
in
mov
inc
clc
sti
mov
repz
scas
int
jl
std
pop
ret
out
xchg
fildll
jne
iret
fidivrs
dec
sub
das
insb
gs
pop
adc
mov
push
scas
mov
movsb
mov
xchg
lcall
jno
fmul
dec
add
pop
push
rorl
repnz
jge
dec
dec
push
lret
inc
mov
inc
int
mov
mov
test
adc
imul
testl
insl
push
sbb
adc
and
sub
movsl
sub
sti
lea
loop
mov
add
scas
xchg
push
pop
pop
fs
push
jnp
addl
dec
lock
jle
sub
sbb
sub
enter
mov
or
or
jne
fwait
or
jl
adc
mov
stos
jae
push
sub
pop
inc
mov
mov
add
mov
mov
movsb
in
insb
das
sbb
mov
movsl
imul
out
push
test
sbb
mov
lods
addr16
cmp
lret
inc
pop
inc
mov
cmp
adc
dec
subb
or
sub
add
pop
hlt
add
jge
stc
out
stos
inc
pop
ljmp
pop
and
inc
sbb
cmpsl
cmp
xchg
fisttpll
rol
loope
ror
jae
push
lods
mov
pop
fsubrp
or
in
cltd
clc
ret
shlb
pop
pop
dec
mov
add
sub
out
push
xlat
ficomps
dec
iret
xchg
andb
jge
frstpm(287
cmp
add
enter
mov
in
lret
jp
jecxz
push
fwait
bound
mov
and
xlat
add
dec
shrl
or
test
xor
inc
shlb
icebp
lret
movsl
popf
out
leave
sub
lock
jae
adc
add
inc
stc
ljmp
fistps
push
fs
jnp
adc
push
daa
sahf
and
jne
jo
mov
adc
xchg
mov
inc
sbb
daa
mov
xchg
cltd
jns
mov
dec
call
adc
or
sbb
fsub
jb
push
jno
xor
inc
ret
fnstcw
jno
sub
push
and
cld
repz
jns
pop
push
into
mov
imul
dec
pop
std
sahf
sbb
inc
stc
int
test
push
shr
test
mov
xor
xchg
dec
cs
cli
xor
cli
xor
stc
dec
jne
mov
push
pop
jo
movsb
sbb
enter
cli
neg
pop
pushf
scas
jne
test
pop
sbb
mov
cmp
mov
cltd
mov
aad
jnp
inc
hlt
push
or
ficompl
hlt
xchg
adc
cmp
shr
jo
pop
cld
xchg
shl
mov
test
jo
mov
cltd
sarl
rclb
jge
xlat
xlat
or
inc
xchg
aaa
repnz
sub
mov
int
das
xor
iret
fs
sub
lahf
pop
lds
xor
sarl
jae
cli
test
and
xlat
xor
xchg
push
rclb
jecxz
adc
jge
daa
fstpt
movsb
insb
inc
pop
outsl
sbb
pop
jecxz
rcrl
sbb
adc
nop
inc
ds
add
mov
pushf
into
daa
sbb
xchg
pop
mov
lcall
rorl
testb
xor
ret
pop
fdivrs
push
incb
jp
out
mov
push
add
jns
add
cmpsb
mov
cmp
movsl
cmp
jnp
push
inc
mov
mov
and
jb
add
or
cwtl
loop
sub
hlt
dec
sub
js
leave
fists
add
inc
leave
pop
jle
clc
xchg
mov
mov
mov
aas
sbb
inc
adc
aaa
jl
ret
push
adc
loope,pn
in
mov
ss
jns
mov
adc
loope
xchg
cmp
pop
inc
add
mov
ljmp
ficomps
insl
notl
fwait
ja
bound
adc
adcl
push
inc
or
dec
mov
jg
mov
notl
push
cmpb
cmpl
mov
mov
cmp
cmp
je
addb
leave
ss
dec
inc
xchg
insl
mov
push
stos
add
adc
stos
adc
sti
dec
ret
pop
pop
call
sub
jmp
sbb
sub
xchg
lea
sub
stc
push
or
mov
mov
adc
movsb
sub
hlt
and
cmp
sahf
adc
fsubl
xor
push
cmp
dec
push
pop
lret
in
dec
insb
cwtl
inc
and
inc
cmp
adc
subl
bsf
sub
addr16
push
push
movl
sub
xchg
mov
das
loop
mov
cmpsb
fisubrs
xchg
arpl
mov
lahf
fdiv
cmp
daa
push
cmc
call
cltd
mov
mov
mov
mov
ja
mov
outsb
arpl
addb
add
andl
push
test
add
push
pop
test
mov
inc
lods
pop
and
sbb
jecxz
loop
aad
out
add
call
fsts
lds
popf
and
xor
xchg
dec
mov
mov
cwtl
mov
sti
loop
cmp
xor
int3
fdivl
sbb
and
xor
rcrl
mov
jecxz
cmp
mov
mov
popf
in
sub
sbb
js
or
xchg
dec
push
jle
imul
fbstp
das
cltd
and
test
mov
movntps
xlat
xchg
mov
loope
mov
cltd
fcomp
ja
mov
mov
xchg
mov
adc
and
nop
in
sbb
xor
mov
jp
movb
fimull
aam
insb
dec
or
pushl
jnp
lcall
addr16
mov
lea
into
negb
inc
das
rcll
es
in
adc
fstpt
outsl
sbb
cmp
pop
insb
and
cmp
xor
xchg
or
mov
gs
mov
scas
sbb
and
push
stos
les
lods
pop
jl
movsb
push
mov
ljmp
push
mov
xor
fwait
enter
ds
sub
push
adcl
ja
sti
enter
adc
fnstenv
dec
rep
lcall
clc
inc
loop
loopne
movsl
repz
shrl
scas
sub
pop
dec
xchg
jecxz
or
je
jbe
fidivrs
pop
movsb
pop
test
addr16
cmp
clc
addr16
jle
movsl
and
inc
push
cmp
xor
shll
xchg
mov
dec
jbe
pop
add
jl
test
inc
jmp
cwtl
cs
sbb
nop
xchg
pop
int3
sbb
das
jo
jne
das
push
repnz
pop
insb
dec
filds
dec
or
push
push
icebp
fistl
lret
or
je
or
sub
out
cli
out
lods
imul
pop
and
pop
mov
fmuls
cli
out
sbb
xchg
fs
nop
xor
push
push
and
push
xchg
cmp
arpl
inc
leavew
vorps
mov
enter
addr16
xchg
testb
cmp
dec
adc
lods
or
sbb
ja
inc
inc
mov
and
pop
jl
pop
je
aaa
xchg
imul
adc
or
int3
rcll
nop
dec
xor
mov
mov
jp
push
sahf
or
mov
pop
shr
imul
xor
cmpsl
push
push
dec
je
ret
fsubrs
jp
dec
aad
test
hlt
jo
sahf
shl
add
or
popf
add
inc
xchg
pop
pop
or
loope
test
dec
addl
dec
test
cli
lahf
ss
inc
dec
rcl
push
sbb
push
or
jmp
popf
or
std
add
repnz
or
setno
and
add
jo
inc
cmp
xor
dec
jbe
mov
pop
addl
xchg
dec
jnp
ds
js
push
in
loopne
add
mov
cmp
xchg
arpl
lock
jb
movsb
popf
jns
adc
test
xor
insb
xor
and
into
es
in
repz
jnp
add
xlat
popa
or
loop
clc
insl
mov
push
xor
cmp
or
sub
pop
xchg
out
or
mov
push
fsubs
cld
insl
shrl
cmp
popf
push
and
negb
mov
xor
movsl
js
subl
dec
outsl
mov
cmc
divl
add
mov
leave
cmp
arpl
ds
lahf
mov
and
int3
mov
decb
shlb
rcll
jecxz
push
iret
jb
jo
lret
cmpsl
mov
ds
push
and
mov
xor
out
pop
pop
mov
inc
add
sbb
push
pop
call
mov
lods
inc
dec
stos
out
ud2
dec
das
sbb
adc
repz
adc
inc
imul
mov
inc
pushf
sbb
arpl
or
in
xchg
mov
pop
jne
insb
sub
jle
fs
jle
push
xor
jg
nop
rcl
fadd
and
cs
test
cmp
and
add
rcll
adc
push
leave
pop
xchg
in
fwait
adc
andb
mov
push
int3
test
push
lods
mull
sbbl
push
mov
push
repnz
jge
icebp
xor
lahf
jbe
jl
scas
or
shll
mov
insb
mov
mov
push
fcmovne
mov
enter
clc
mov
es
xor
xchg
scas
ljmp
js
dec
and
dec
ja
out
arpl
fsub
loope
call
fdivrs
jmp
sub
inc
cld
and
push
dec
addr16
fistpl
lds
xchg
sbb
pop
inc
leave
adc
fiadds
test
sub
out
sub
cmpl
mov
and
xchg
cmpsl
outsl
data16
repz
dec
jmp
shl
mov
leave
das
repnz
or
and
sub
je
roll
jg
cmp
pop
cmp
ret
in
lcall
mov
or
adc
call
mov
cmp
cwtl
in
fisttps
mov
sbb
or
aad
ret
loop
arpl
and
test
pop
test
and
out
inc
xor
xlat
adc
sar
scas
ret
insb
mov
pop
mov
movsl
xor
sbbb
js
xchg
fimuls
mov
stos
dec
xor
lock
sub
push
and
mov
mov
and
gs
dec
sar
and
sbb
scas
js
bound
not
sahf
loop
dec
add
and
addr16
adc
and
sbb
inc
push
popa
xchg
mov
cmpsb
mov
cs
mov
and
push
fdivl
sar
imul
or
jge
into
push
sub
dec
xchg
je
lods
mov
ret
out
cmp
inc
mov
sub
clc
in
scas
pop
fstpt
adc
pop
imul
mov
scas
inc
and
mov
mov
push
push
sbb
or
mov
add
sti
pop
fsubl
pop
add
mov
push
jo
adc
dec
sub
dec
sub
pop
insl
xlat
cwtl
jae
std
outsb
cmc
jne
sub
push
rcrb
mull
stos
add
sbb
stos
sbb
out
scas
fbld
lds
sbb
sub
out
or
xlat
mov
mov
cmp
push
das
sbb
mov
call
sbb
shll
fldcw
adc
dec
nop
repz
mov
arpl
pushf
ret
mov
shrb
nop
push
shll
insl
xchg
cld
int
push
xchg
lcall
or
inc
inc
sub
xchg
in
stc
je
cmp
inc
clc
loopne
pop
test
shl
push
xor
adc
fucom
jno
jb
sbb
call
add
push
adc
sub
rcrl
xor
and
shlw
stc
scas
mov
stos
fisubrl
push
cltd
outsl
js
aaa
and
ret
repz
fistl
fs
push
mov
stc
rolb
in
sub
jecxz
dec
mov
mov
lcall
dec
jmp
mov
testb
pop
loop
jg
fistpl
mov
xchg
mov
and
adc
movsl
xchg
dec
adc
mov
call
aas
sbb
push
outsl
fsubl
hlt
adc
jge
idivl
out
subb
xchg
jge
enter
pop
popf
jo
or
pop
shll
jmp
inc
dec
lcall
ja
dec
add
jb
aam
icebp
cmp
jp
lret
rcll
jo
fdivr
inc
testl
mov
sbb
push
xor
cmpsb
cmp
mov
mov
push
mov
mov
mov
sub
pop
xor
adc
sbb
imul
fs
adc
mov
cmpsl
shll
rorl
ret
jae
fs
jno
cwtl
orb
sub
popf
dec
xor
cmpsb
into
mov
movsb
pop
mov
js
out
je
pop
add
insl
repnz
imulb
lods
mov
idiv
mov
xchg
jo
adc
cmc
or
sbb
adc
sub
lock
pop
xchg
and
adc
mov
sbb
daa
mov
sarl
jp
mov
test
repnz
mov
ss
rcrb
xlat
adc
xlat
dec
push
pop
push
call
mov
and
sub
lahf
pop
and
or
jle
add
cwtl
xchg
mov
cli
ds
sbb
adc
xorb
daa
scas
jo
and
pusha
out
jg
test
xor
shlb
xor
lods
jp
je
jb
mov
cs
shrb
mov
insl
outsl
xlat
cmp
mov
fstps
popf
lods
stos
stos
xchg
push
xor
mov
das
gs
test
add
aas
push
es
data16
xchg
out
cmp
and
mov
xchg
lcall
dec
lods
pusha
sbbb
xor
jge
xchg
xor
cmp
lods
hlt
je
fisttpll
or
test
lods
ret
and
scas
mov
lret
in
out
dec
push
sbb
outsl
cmp
es
or
or
xchg
outsl
and
pop
sub
mov
xor
adcb
dec
imul
and
xor
shrb
mov
ss
aam
jbe
fadd
dec
mov
out
and
sti
mov
mov
fs
test
or
scas
cmpsl
popf
xchg
and
frstpm(287
inc
push
cs
cmpsl
add
adc
outsl
shll
mov
push
es
dec
outsb
cwtl
mov
es
mov
jecxz
xlat
int
daa
fucom
arpl
xchg
or
lods
out
dec
sub
sbb
ret
cmpsb
test
dec
icebp
sbb
insb
sbb
dec
loopne
mov
test
fcmove
lods
clc
fmuls
pop
je
xor
sub
lock
incl
push
inc
fisttpll
jmp
roll
js
xchg
cld
scas
enter
arpl
ds
add
fidivl
mov
jg
lods
loopne
cmpsl
push
cmp
fmuls
cwtl
add
push
cwtl
adc
lods
push
lods
lods
mov
cli
iret
sub
push
mov
add
inc
and
pop
jnp
mov
xchg
push
mov
dec
cld
jno
out
cmpb
popf
aas
pop
int
mov
adc
mov
jbe
ret
sbb
add
addb
int
jp
mov
jle
lret
push
arpl
pop
addb
push
jo
mov
lods
pop
test
aaa
fwait
jle
and
cmp
jb
pop
pop
mov
repz
adc
stos
es
xchg
mov
or
popf
addb
ror
ror
add
and
sti
insl
outsl
out
imul
lods
cmp
iret
repnz
lds
push
cmp
cmp
mov
gs
dec
ucomiss
jae
jmp
jno
loope
dec
jp
add
outsl
mov
adc
fldl
fiaddl
scas
mov
mov
dec
icebp
mov
ljmp
push
cmc
rorb
adc
push
rorb
into
sbb
lret
daa
fadds
dec
int3
ds
jle
mov
rorl
and
fsts
sbb
daa
adc
outsl
daa
mov
cmp
and
sti
inc
lret
imul
fdivs
and
jmp
jo
inc
pusha
out
call
push
jl
insl
push
iret
add
mov
mov
das
dec
mov
imul
pop
pop
mov
enter
out
jg
and
and
mov
mov
adc
mov
xchg
clc
sub
xor
aas
mov
jl
xchg
leave
mov
sub
fsubl
pop
jb
imul
xor
push
sub
ds
mov
push
idivb
loopne
sarl
loopne
shll
jge
mov
dec
or
adc
ljmp
ds
inc
outsb
insl
int3
lahf
jge
xor
and
mov
movlps
cmp
xchg
pop
sbb
and
adc
push
sarl
fstps
jmp
into
divl
cwtl
mov
dec
pop
aad
mov
fadds
repz
sti
jnp
or
iret
xchg
mov
and
push
popa
test
out
sub
jb
or
sub
xchg
lds
es
imul
jno
mov
dec
dec
loop
bound
mov
push
mov
loop
or
jno
sub
lods
sbb
pop
enter
mov
lock
nop
sti
ja
xor
clc
in
inc
inc
jecxz
test
pop
jmp
lea
gs
notb
mov
xorl
mov
inc
sbb
dec
loop
je
add
jno
cmp
push
fidivl
xchg
push
ja
push
outsl
and
mov
adc
adc
insb
mov
rcrl
mov
fldt
xchg
jp
sub
mov
xchg
pop
cmpsl
fimull
lods
lahf
movsb
sub
int3
mov
mov
cmc
adc
dec
lock
outsb
lock
ss
pop
pop
jbe
scas
roll
not
gs
addr16
int3
movb
sub
push
or
mov
imul
and
icebp
sbb
adc
stos
push
aaa
dec
hlt
sbb
sahf
repnz
lock
inc
pop
mov
fs
popa
test
cmc
mov
dec
mov
pop
lods
lret
sub
outsl
lods
or
mov
scas
roll
out
jecxz
mov
sbb
enter
xchg
and
and
test
xor
adcb
loope
inc
xlat
fidivl
in
repz
or
imul
mov
inc
lock
jbe
test
mov
pop
xor
nop
imul
xor
stos
xchg
push
xchg
fldl
cmp
aaa
pop
inc
insl
mov
pop
cmc
rep
cmc
or
fwait
mov
cld
sti
outsb
or
sbb
or
cmc
and
cwtl
aad
bound
xchg
sub
sub
or
cmp
lahf
fbld
mov
fdivrs
xchg
fcmovnbe
push
sahf
sbb
andl
ja
stc
cmpsb
dec
out
fnstenv
lods
movsb
lods
daa
cmpsb
fyl2x
xchg
out
outsb
shr
push
mov
aam
dec
std
jo
or
pop
and
outsb
daa
dec
loope
adc
mov
lods
les
or
sub
inc
dec
cs
mov
xor
xor
mov
jb
mov
xorb
inc
push
jns
clc
setb
cmpsb
xor
add
test
mov
repnz
mov
jge
jmp
insl
sbb
stc
jae
gs
mov
loopne
jge
idivb
jno
push
cltd
and
ret
pop
scas
mov
adc
loopne
mov
sub
fistpll
into
mov
push
dec
xchg
fistl
pop
std
subb
pop
mov
inc
popa
cmp
or
jge
inc
fwait
and
les
imull
les
sub
divl
mov
lcall
mov
or
inc
adc
rcrb
int3
sub
adc
in
ret
push
jns
jg
pop
dec
sub
cmp
aam
push
sub
pop
mov
mov
das
les
outsb
push
fnclex
jbe
mov
scas
jge
out
rorb
add
mov
nop
lcall
loop
jo
inc
iret
inc
insb
dec
mov
out
cmpsb
sub
aas
push
lret
pop
movsb
pop
movb
push
daa
lret
add
push
mov
cltd
dec
mov
loope
mov
mov
rclb
add
xchg
mov
jne
mov
xlat
xchg
out
add
lret
add
inc
loopne
sub
mov
out
ds
lret
cmp
cltd
jmp
stos
dec
pop
or
xchg
push
or
xor
into
push
test
mov
xor
ja
push
jg
insl
mov
lds
mov
fadds
rcr
insb
sbb
jmp
ret
ds
call
cmp
pop
jae
jb
adc
hlt
fs
jno
pushf
mov
push
push
jp
inc
jo
adc
out
shll
lret
stos
pop
inc
lret
outsb
lea
sub
push
pop
mov
xchg
aaa
ret
sub
ret
cld
mov
sbb
jo
sbb
push
push
inc
ds
rcr
movsl
xchg
ret
cwtl
in
daa
fs
js
sbb
iret
adc
dec
cwtl
out
lret
fildl
xchg
or
mov
push
dec
xor
and
mov
test
mov
clc
push
les
outsl
xor
insl
ljmp
out
popa
aaa
or
sbb
test
pop
sbb
in
cmp
sbb
jno
stc
cmp
fnstsw
mov
ljmp
stos
andb
cmc
sbb
rcl
xchg
mov
lods
add
call
cld
jnp
cmpb
add
sbb
inc
cltd
stos
int
sarl
xchg
call
shll
negl
xchg
ficoms
sar
xchg
jecxz
ja,pn
or
mov
and
xchg
cmp
pop
sahf
or
adc
adc
lock
sti
test
sbb
dec
daa
jns
sarb
lods
out
push
divl
out
pushf
sub
mov
mov
mov
mov
xor
js
test
aas
imulb
and
mov
cld
mov
mov
jno
stos
sub
adc
add
into
jne
loop,pn
fstps
cmp
arpl
inc
dec
pop
mov
or
pop
cld
sub
testb
dec
cmp
fiaddl
outsl
pop
and
and
fbstp
mov
dec
and
lods
adc
test
movsl
ja
or
push
jp
adc
sti
das
jno
sub
mov
mov
sbb
cli
pop
aas
in
scas
jbe
or
inc
xor
xchg
test
outsl
and
dec
dec
lret
adc
push
push
js
sbb
rclb
pop
dec
xchg
js
es
push
and
xor
sbb
mov
jle
mov
inc
aaa
xor
add
lret
sbb
dec
movsbl
dec
and
dec
jo
in
and
mov
dec
lret
sub
add
enter
mov
sbb
fwait
bound
cmp
sub
rorl
das
and
and
sbb
jmp
cwtl
push
std
adc
clc
std
push
sbb
add
fstpl
mov
jno
test
xor
mov
sub
into
jne
out
cmp
sub
in
sub
rcrb
mov
pop
int3
jnp
inc
popa
pop
and
jno
fsubrl
add
add
test
push
and
mov
push
xchg
out
xchg
lods
mov
pop
fsubrs
xchg
mov
stos
lods
inc
cmpsl
add
popf
cltd
inc
sbb
out
mov
push
jg
not
add
in
cmpsb
jo
mov
pushf
sbb
lods
push
loop
xchg
mov
orl
cmp
stos
je
loope
repnz
sub
cmp
rorb
push
and
adc
mov
cmc
pusha
out
lahf
jle
mov
sbb
mov
push
mov
cli
imul
xor
add
call
push
add
mov
cmp
jnp
xchg
iret
int3
arpl
ja
cmc
or
mov
es
dec
lret
dec
cltd
movsl
sbb
js
pop
sbb
jecxz
scas
aaa
roll
jg
push
xchg
xor
push
sbb
or
mov
iret
fsubs
pop
fdivl
adc
mov
mov
aad
sbb
popf
cmp
test
nop
add
jno
in
out
push
push
add
pop
imul
in
rcr
dec
cmpsl
popa
push
cltd
mov
mov
pop
in
inc
jno
push
mov
mov
pop
mov
les
sbb
mov
inc
jb
stc
jmp
je
pop
ret
xorb
lret
jg
ret
jbe
xlat
js
movsl
add
mov
in
xchg
xchg
testb
mov
fstpl
xchg
lods
inc
cmp
into
daa
push
icebp
sbb
cmpb
js
rcrl
push
sub
data16
push
mov
push
testl
scas
push
enter
sub
cmpsl
jp
aaa
xor
mov
adc
and
in
int
sarb
add
and
test
fs
add
push
lods
lahf
test
clc
subl
xlat
lods
test
stos
push
jge
std
leave
sub
icebp
jg
and
mov
in
imul
or
jge
cmp
push
push
dec
adc
insl
xchg
ret
push
lahf
loopne
arpl
cmc
add
negl
std
fldl
jne
push
out
xchg
movsb
dec
loopne
stc
es
mov
jl
mov
sbb
fists
pop
out
call
dec
aam
add
mov
inc
cwtl
icebp
imulb
addr16
mov
fistl
test
cmp
fst
push
sub
aas
test
loope
jno
repz
xlat
fwait
rorl
inc
xchg
hlt
fbld
sti
dec
sub
iret
fcmove
mov
push
mov
dec
shr
mov
out
jl
lret
and
mov
xchg
sti
fnstenv
mov
pop
jae
dec
adc
shr
xor
jae
leave
or
add
int3
or
xchg
sbb
xchg
lods
imul
stos
cli
sar
add
inc
or
std
mov
es
in
lcall
loop
adc
repnz
dec
mov
mov
rorb
lock
jne
cmpsb
jecxz
dec
stos
mov
ret
iret
adc
dec
ds
cltd
call
xor
imul
out
or
loopne
xchg
add
out
inc
jnp
mov
jns
sti
aad
sahf
call
inc
push
inc
jnp
enter
inc
and
pop
loop
adc
testl
sub
repz
out
scas
xlat
repnz
movb
jge
sub
xchg
cs
pop
xchg
call
pop
movsl
movsb
pop
cmp
cwtl
cltd
fistpll
mov
lea
popf
lds
push
lahf
xor
add
jle
addl
mov
in
pop
test
es
add
mov
sbb
data16
mov
loop
cmpsb
xchg
addb
xor
mov
adc
fnstcw
sbb
cmp
stos
cs
mov
data16
sbb
pop
addr16
add
xor
pusha
fnsave
sbb
and
fwait
xchg
xchg
push
xor
push
lret
sub
mov
dec
push
mov
les
jp
mov
daa
dec
loopne
push
data16
and
cmpsl
lcall
add
stos
cli
and
xchg
lods
lret
pop
clc
cli
stos
push
jno
jne
cmpsl
mov
fadd
sbb
popf
loop
push
jo
loope
scas
mov
mov
jecxz
pop
testl
stc
xchg
cmpl
lcall
mov
dec
xchg
push
mov
out
ficomps
jp
xor
sbb
adc
adc
inc
shl
cmc
and
leave
sbb
dec
test
xchg
cmp
pop
mov
stos
jns
imul
fisubs
push
adcl
push
ds
xorb
aaa
cmp
xor
mov
xor
das
dec
mov
and
aas
mov
xchg
pusha
or
loope
mov
mov
and
xor
mov
jae
mov
or
xchg
sbb
imul
ret
in
xchg
dec
leave
testl
repz
push
jge
jae
popf
push
in
mov
std
adc
ret
popf
jns
pop
jbe
fadds
mov
stc
popf
aam
pop
xor
and
add
lahf
roll
xchg
jmp
mov
sbb
fcoml
sub
xchg
mov
scas
pop
ljmp
iret
xchg
sbb
out
lds
lea
je
stc
mov
jo
ret
or
cwtl
test
adc
push
jmp
in
test
cmp
cmp
cmp
sub
in
inc
pcmpeqd
into
insl
mov
push
cmp
push
adc
int3
and
fildll
fildl
pop
inc
or
sub
jo
clc
fidivl
je
xor
clc
mov
cmpsl
addr16
stos
cmp
in
push
popf
popa
jo
dec
insb
sub
jmp
mov
add
test
push
jl
jb
jmp
push
mov
push
out
pop
mov
or
xor
fsubl
outsb
orb
ds
das
outsb
nop
or
scas
cmpsl
lcall
int
mov
sahf
inc
cmp
adc
mov
pushf
cwtl
add
dec
mov
jecxz
inc
push
adcl
clc
popf
das
into
int3
mov
gs
jo
dec
cmc
sbb
xchg
sbb
subl
mov
push
test
lods
ja
bound
jnp
orl
xor
or
ds
imul
dec
cmc
stos
dec
xor
jle
cmpb
sbb
push
pop
daa
int3
movsl
pop
xor
cs
sbb
enter
cs
push
and
mov
clc
imul
cmpsb
ret
mov
or
mov
scas
iret
sbb
sbb
enter
ret
scas
mov
aam
sub
lret
popa
cmp
sub
out
fcmovb
dec
adc
test
in
adcl
or
mov
mov
xchg
inc
orb
mov
jg
cwtl
mov
mov
scas
repz
sbb
mov
push
push
lock
dec
adc
scas
cmpsb
add
cmp
int3
ja
outsl
cmp
data16
or
pop
pop
imul
jnp
push
sub
fst
hlt
int
mov
and
lods
xchg
or
and
pop
mov
and
pop
shrb
jl
cmovbe
aad
jae
lock
dec
nop
cmc
push
cli
and
stos
aaa
inc
cmpsb
add
pop
mov
jmp
ret
lahf
xor
and
test
dec
push
cmpsl
ja
or
aam
inc
jbe
mov
mov
push
jae
in
cmp
ja
jl
in
leave
sbb
pop
sub
xor
cmp
pushf
cltd
sbb
loop
fsts
mov
outsl
cwtl
rcrb
sti
fmuls
mov
jp
mov
int
mov
insb
popf
pop
ss
xor
pop
imul
cwtl
xchg
lock
aas
jp
enter
push
fisttpll
pop
movsb
scas
flds
xchg
mov
loop
orl
sbb
filds
mov
cmc
jle
jbe
movsb
sub
push
inc
push
or
cmp
sbb
loopne
fstpl
rolb
ds
shlb
test
pop
xchg
and
adc
loope
inc
pop
mov
iret
in
cmp
jo
inc
pusha
sub
dec
btr
sbb
adc
mov
test
into
sarl
js
dec
cmp
xchg
mov
pop
push
mov
xchg
sub
sub
dec
and
add
dec
cld
xadd
es
stos
pusha
mov
ret
out
mov
pop
jge
loopne
or
repnz
pop
push
cwtl
hlt
push
jae
outsb
into
adc
jno
in
call
cs
hlt
xorl
xchg
sub
repnz
adc
addr16
fidivrs
inc
into
loope
in
dec
push
mov
inc
pushf
enter
adc
xchg
adc
inc
je
add
dec
dec
sub
sahf
pushf
iret
shrl
inc
jg
lds
and
out
test
push
inc
shr
stos
push
mov
mov
pop
lea
arpl
lret
adc
lods
jg
push
aas
dec
mov
inc
ds
cld
fucomp
pop
xor
or
insb
pop
jo
dec
les
pop
repz
inc
xor
pop
jne
sub
scas
and
inc
sbb
int
mov
loope
mov
jmp
mov
repnz
sub
sbb
gs
fidivrs
das
fistps
lret
adc
das
aas
movsb
fs
sub
test
ja
mov
sbb
mov
mov
mov
mov
mov
lahf
out
pusha
pusha
pusha
ljmp
ss
cmp
jno
mov
or
cmp
jns
mov
mov
jp
pop
add
stc
ljmp
andb
inc
pop
cmpsb
out
add
or
fimull
sti
sub
imul
pop
rorb
clc
aam
or
mov
pop
fwait
inc
jle
inc
sbb
jle
and
addr16
lock
movsb
mov
mov
inc
xor
add
cmpsl
cmpsb
mov
test
inc
scas
inc
cmp
and
inc
mov
mov
insl
add
lea
push
adc
pop
dec
cwtl
loop
jl
loope
push
std
push
add
or
push
leave
xchg
icebp
inc
sahf
js
lcall
cmpsb
adc
loop
out
cwtl
and
pushw
add
ret
aad
sub
rcl
mov
divl
aaa
inc
sub
popa
lock
inc
mov
lods
inc
sbb
movsl
and
or
mov
call
cmp
shlb
sbb
test
push
punpckldq
imul
fnsave
das
mov
xchg
lahf
push
popa
mov
adc
movsb
cmp
cmp
popf
sub
dec
inc
arpl
fsubrs
int
cs
xchg
or
inc
xor
inc
jne
push
or
mov
stc
jmp
lods
lods
pop
push
and
daa
xchg
insl
cmp
jne
or
xchg
push
xchg
xchg
cmp
movsl
lock
ret
aas
popa
int
out
xor
and
popa
in
sub
dec
push
imul
jecxz
cmp
push
out
int3
mov
in
popf
jbe
jg
test
and
sub
das
mov
mov
js
les
repz
sub
clc
lcall
and
pop
fmuls
mov
jle
jno
add
jne
xor
sub
int3
mov
jge
mov
movsb
cld
je
mov
sub
mov
out
dec
jle
aad
nop
mov
arpl
orl
mov
jae
pop
insb
jmp
ja
cltd
xchg
sub
and
lods
or
xchg
fstps
hlt
xchg
out
in
iret
inc
dec
xchg
cmpsb
lea
mov
jb
rcrl
js
dec
xchg
inc
sub
ficoml
push
ret
lods
mov
imul
or
je
loop
sub
fnsave
or
dec
movsb
jl
adc
aam
mov
and
adc
and
xor
int
in
in
dec
lea
adc
popa
sub
adc
push
fwait
dec
mov
leave
cmp
rorl
lret
call
jmp
enter
jno
int
cmp
jl
push
fwait
lds
pusha
xor
call
loop
lret
das
scas
sbb
xchg
inc
add
popf
adc
fcmovnu
mov
jp
and
jne
mov
push
jne
aaa
ss
hlt
dec
and
and
sbbl
mov
sbb
int
xchg
aas
mov
sbb
js
sub
jmp
mov
jbe
push
sbb
shl
and
pushf
cmp
push
cmp
jge
push
mov
lods
mov
out
add
cmpb
mov
notb
pop
jnp
xlat
js
xor
sbb
pop
sbb
xlat
neg
xchg
jns
xor
stos
sti
leave
pushf
sub
jg
les
mov
pop
jb
pushf
out
int3
test
jge
out
int3
push
into
mov
xor
iret
mov
sbb
das
test
pusha
add
aam
push
pop
mov
sub
aas
les
les
shrb
dec
aam
aad
mov
adc
xchg
xchg
dec
xchg
daa
adc
xchg
mov
mov
dec
jmp
cmp
cli
sbb
xor
test
in
mov
test
sbb
lock
add
push
adc
sub
pop
lds
cmpsl
jbe
ret
sbb
outsb
mov
subb
dec
int
mov
mov
mov
inc
add
and
insl
mov
mov
ljmp
rcrl
adc
sub
arpl
ds
add
jae
sbb
mov
loope
cmp
inc
xor
jecxz
cmp
and
daa
mov
sbb
cmc
jbe
stc
or
popf
inc
loopne
insb
lret
mov
xorb
mov
cwtl
xlat
sahf
sbb
loop
mov
mov
les
pop
adc
dec
xchg
and
call
adc
dec
dec
dec
push
imul
cmp
mov
add
cmp
aam
sarb
pop
cltd
fwait
stc
mov
enter
rcrb
push
cmp
xchg
das
cmc
mov
mov
inc
mov
ret
xchg
xchg
push
mov
mov
sti
rorl
cmp
mov
fwait
xchg
loope
sti
xchg
test
pop
shlb
inc
cmp
add
mov
hlt
sbb
dec
test
or
xor
scas
pop
loopne
fdivl
mulb
lcall
or
lods
loopne
pop
and
pop
repnz
mov
rorb
pop
lret
sbb
lock
nop
in
jge
mov
dec
pushf
je
inc
test
mov
outsl
mov
inc
cmp
sbb
cld
fcmovbe
push
aad
xor
add
mov
sahf
inc
push
push
jno
pushl
nop
mov
xchg
adc
and
outsl
arpl
jo
lret
in
aas
cmc
aam
cld
outsl
cmp
insb
mov
idivb
in
test
and
sub
fimuls
inc
dec
xchg
in
push
xor
mov
sti
mov
push
in
or
mov
push
fwait
fwait
mov
cmp
sbb
mov
add
lcall
dec
repnz
imul
scas
xor
jb
xorl
cmp
addr16
rorb
test
cld
outsb
add
dec
cmp
stos
add
enter
pushf
inc
pushf
pop
or
das
add
pop
lret
push
push
lods
pop
rolb
xor
mov
lds
icebp
inc
inc
mov
int3
cli
aaa
xor
iret
les
imul
imul
xor
mov
movsb
push
fimull
dec
lds
subl
add
lret
movsb
pop
shl
subb
or
rclb
pop
es
aad
aad
jmp
push
cwtl
jecxz
lcall
jle
and
or
fdivrl
fbld
movsb
sub
sti
imul
sub
lods
out
js
inc
push
mov
cmp
cmp
xor
mov
or
je
xchg
sbb
pop
cmp
push
pusha
popf
and
lahf
and
adc
jbe
mov
cmpsl
ljmp
push
icebp
cmp
xchg
push
cmp
ds
cmp
xor
mov
sbb
out
sarb
mov
fwait
insl
out
xor
je
sub
adc
in
or
jae
mov
jae
inc
nop
sub
and
jmp
popa
clc
jbe
ret
in
popf
sub
sub
push
dec
or
jecxz
push
mov
add
psubsb
mov
push
int
ret
int3
aaa
mov
lahf
stos
sub
fwait
sub
out
push
lcall
or
ss
repnz
inc
xor
gs
insl
inc
cmp
faddp
cmp
sti
loope
sub
or
in
inc
lea
xor
outsb
mov
push
mov
fwait
mov
xor
and
push
cmp
pop
iret
push
out
dec
pusha
dec
push
vpshlq
clflush
sahf
xor
clc
sub
lahf
rclb
pop
jnp
jge
and
jle
dec
or
jg
mov
aaa
xchg
cmpsl
cmp
pop
push
addr16
outsb
push
pushf
mov
jbe
orl
ret
push
mov
or
or
fst
pop
pop
ljmp
adc
int
inc
inc
test
shl
fcomi
jbe
mov
lods
test
out
xchg
jb
insl
xchg
add
and
js
cs
lcall
or
lods
in
rorl
push
jbe
test
sbb
push
push
mov
mov
mov
xor
push
pop
inc
movsb
cmc
fsubl
xchg
sub
xchg
fidivrl
mov
sub
cmpsl
stc
lea
inc
mov
or
loopne
lret
les
mov
adcb
cmp
cmp
fidivrs
sub
lahf
test
push
js
loop
push
xor
or
mov
test
pop
fwait
push
xor
icebp
mov
add
xor
sbb
xchg
adcl
daa
dec
push
add
mov
clc
pop
inc
in
mov
or
add
lret
cltd
outsb
xchg
clc
int3
das
mov
mov
xor
cmp
dec
mov
repnz
aam
or
mov
mov
xor
xchg
aas
jg
stos
or
inc
pop
je
jp
popa
dec
sbbl
addl
in
daa
jnp
rorb
lods
loopne
ljmp
xchg
add
ror
cmp
push
push
mov
cltd
pushf
lea
sub
dec
daa
data16
adc
xchg
in
pop
push
jp
nop
mov
test
xor
cmp
cmpsb
lret
pusha
xchg
leave
lret
insl
int3
and
loop
sub
fldcw
xchg
lahf
sbb
test
adc
rcrb
ficomps
popa
cmpsb
mov
xor
or
xlat
or
jns
in
outsl
pop
loop
jns
jno
imul
rcl
xchg
cmp
mov
inc
aas
lock
roll
cmc
push
in
orl
mov
xor
mov
cmpsb
push
dec
adc
jl
orb
aas
sti
inc
and
mov
mov
add
push
movl
jo
mov
imul
outsl
or
dec
inc
shlb
xchg
subl
scas
mov
adc
push
clc
jecxz
std
dec
cmpl
xchg
or
or
pop
loop
push
add
xchg
push
insb
inc
stos
out
mov
pop
js
pop
sub
and
pop
mov
test
outsb
lahf
dec
pop
sbb
push
mov
mov
cmpl
add
mov
inc
ret
xchg
popa
mov
mov
xlat
sarb
inc
pushf
rcll
aam
int3
sub
fstpt
fadds
push
cmp
and
sub
push
pop
in
ret
in
sbb
cmpsb
aad
sbb
add
xlat
jecxz
test
or
into
flds
mov
jnp
in
dec
xchg
add
mov
nop
sub
xchg
add
xor
and
jnp
push
jl
xor
test
call
ficomps
clc
jl
fistpl
scas
in
negb
xor
sub
xchg
push
or
push
sbb
sbb
dec
je
lahf
aas
xor
add
inc
ficomps
dec
jne
out
and
hlt
dec
movsl
insb
movsb
fcoml
dec
and
jle
test
icebp
cli
clc
mov
push
xor
adc
mov
addr16
insb
xlat
dec
sbbb
add
cmpsl
push
jo
sarl
adc
cmp
pushf
imul
bound
jge
sub
jg
pop
cs
cmc
rep
and
cld
or
cli
into
pop
inc
sub
cmpsb
lahf
and
outsb
mov
xor
dec
jno
sbb
adc
cld
cld
mov
lret
lahf
pop
dec
xchg
cmp
push
jp
push
mov
popa
cli
cwtl
dec
jg
xor
add
and
stos
cwtl
jb
lcall
jge
and
lcall
xchg
push
pop
jo
inc
insb
mov
filds
ds
imul
pop
icebp
jb
lret
sbb
inc
jg
js
pop
jns
cmp
nop
xor
test
inc
sub
cld
mov
xlat
mov
cwtl
jg
inc
aas
mov
scas
adc
push
repnz
lcall
aad
and
out
mov
fadds
outsl
test
fldcw
fsubrp
dec
xor
ret
xor
cli
pop
add
shrb
cwtl
xchg
arpl
inc
add
in
or
popa
ret
mov
mov
or
xorb
mov
add
or
scas
inc
fsubrl
sbb
fdivrl
push
and
push
ljmp
or
nop
dec
or
dec
inc
lret
inc
mov
mov
fsubs
out
rcrl
jbe
xchg
movsb
ret
dec
jno
and
cmp
and
outsl
aas
aam
or
mov
js
inc
movsl
out
pop
mov
dec
pusha
jmp
and
insb
pop
push
xchg
and
icebp
sti
icebp
enter
mov
cmp
fsub
xor
jl
aam
jmp
movsl
ss
adc
xchg
aas
test
mov
or
push
pop
in
mov
or
adc
cmpsb
sbb
out
jb
cld
popf
sarb
mov
or
adc
insb
js
arpl
jmp
adc
push
pop
mov
loope
aad
xor
sbb
lods
push
cmp
cld
dec
std
push
pop
pop
je
pop
or
icebp
loop
inc
call
mov
stos
call
sub
mov
rol
mov
xchg
aaa
inc
arpl
dec
aaa
jg
leave
pushf
mov
or
mov
pushf
or
xchg
lea
test
fimuls
and
fiaddl
add
bound
test
into
fstpl
push
lcall
add
gs
and
and
xchg
adc
arpl
nop
cld
pusha
ds
pop
shr
outsl
out
mov
jl
aaa
cltd
out
orl
pop
pmulhw
push
xor
test
mov
incb
pop
ss
shrl
or
iret
push
fwait
das
cmp
sub
insl
or
lret
dec
mov
orl
cmp
data16
out
sbb
add
imul
dec
lcall
dec
bnd
loop
mov
and
aad
xchg
jns
movsl
test
add
in
in
sbb
lret
mov
jle
inc
js
arpl
shl
dec
mov
pop
pushf
in
clc
lods
jmp
cmc
sbb
cmpsl
out
adc
pop
orb
xor
out
mov
inc
leave
repnz
mov
cltd
popf
jns
jle
popa
xor
enter
pop
lcall
mul
pop
or
xor
sarb
dec
pushf
jge
xchg
xor
orl
loope
mov
data16
add
jae
add
mov
or
daa
xlat
mov
cmp
and
sub
les
fdivrl
xchg
ja
loop
loope
movsb
cmp
aam
and
lea
or
cmp
mov
pop
fwait
adc
cltd
pop
es
dec
mov
or
aas
or
and
adc
cltd
aad
sub
dec
and
push
inc
mov
xor
xchg
inc
rclb
out
repnz
daa
jo
jne
mov
lock
mov
nop
and
mov
or
das
xchg
insl
in
test
push
lret
pop
loopne
cltd
push
lods
cmpsl
xchg
in
mov
orl
out
mov
out
mov
sbb
nop
and
movsl
sbb
and
js
std
mov
fnsave
mov
sbb
adc
mov
xchg
or
mov
out
xchg
mov
sub
xchg
cmp
mov
test
xchg
hlt
inc
in
sub
jl
mov
jne
movsb
push
stos
sahf
inc
mov
mov
je
or
in
adc
add
sub
xchg
xchg
es
shrb
faddp
push
push
aaa
int
mov
mov
adc
ret
incl
and
jae
in
or
rol
enter
mov
xor
lods
idivb
inc
xchg
jecxz
pop
xchg
out
pop
arpl
sbb
or
push
push
icebp
cli
fistpl
repz
inc
adc
mov
mov
or
stc
add
inc
mov
aam
xor
scas
mov
inc
mov
mov
pusha
mov
xchg
pop
jecxz
mov
hlt
out
jmp
mov
pop
jecxz
cmpsb
adc
xor
scas
int
mov
mov
lret
andb
jae
aam
adc
cmp
jg
jno
int
and
jecxz
outsb
adc
inc
loop
lcall
cmpsb
dec
data16
out
mov
loopne
push
push
shlb
loop
xchg
jecxz
fistps
fwait
xchg
mov
fistpll
outsb
or
inc
fldenv
xchg
scas
push
loop
cmp
cmp
fsubp
jnp
imul
cmp
cmp
inc
push
clc
or
jp
add
inc
mov
lea
divl
imul
rcrb
cmp
jb
gs
and
xchg
cmpsb
xchg
cmp
ss
pop
pop
jbe
mov
mov
lock
insl
cmpsl
push
fcoms
dec
notl
mov
push
cmp
jle
cmc
and
push
mov
inc
adc
popa
lods
and
cmpsl
ss
aam
inc
mov
push
xchg
sti
mov
fs
sub
or
filds
in
insl
jbe
stos
jns
inc
cltd
fprem
out
xchg
lcall
and
ds
aam
ja
je
aas
imul
outsl
imul
movsb
stc
pmullw
in
or
mov
mov
mov
fadd
push
andb
mov
mov
sbbl
aas
or
or
sub
add
xchg
mov
sbb
incl
jle
out
pop
mov
add
mov
lods
lods
or
decl
dec
sbb
pop
xchg
jbe
cli
inc
pop
cmp
cwtl
je
aad
rcl
insl
xorl
xchg
lahf
pushf
hlt
jg
mov
xchg
push
pusha
fimuls
sbb
pusha
push
nop
sbb
cli
dec
mov
mov
pop
in
mov
mov
shl
jbe
shrb
sub
mov
mov
jmp
add
repz
jae
jo,pt
add
cmpsb
xor
lea
add
adc
mov
std
xchg
ss
fdivl
sub
in
jle
pop
adc
fistpl
icebp
lds
jo
pusha
loopne
popa
cmpsl
out
scas
adc
repnz
inc
cs
jnp
pop
leave
stos
and
inc
mov
ss
cmpsl
sub
lcall
es
shlb
stos
jge
mov
add
push
push
ret
dec
lret
mov
jnp
repnz
repnz
xchg
int3
inc
mov
ss
fcomi
loope
pop
out
cmp
push
loopne
in
inc
push
and
sbb
jg
ja
cmp
jne
cli
dec
test
clc
sub
sbb
imul
jge
cmc
inc
int3
sub
mov
xor
xchg
push
jae
xor
imul
sub
xchg
sbb
mov
in
andb
jg
inc
das
mov
push
sbb
std
xchg
fsubrs
or
mov
lds
cld
and
in
sub
xchg
jbe
add
cmp
stc
pop
mov
push
dec
ficompl
cli
jp
push
adc
in
sub
adc
and
call
push
pop
or
xchg
mov
jecxz
int
adc
sahf
pop
add
std
cmp
fwait
shl
incl
fwait
pop
sbb
push
repz
push
lret
loop
jl
shlb
loope
jecxz
add
loope
mov
aas
dec
lds
call
mov
and
adc
cmp
pop
cld
cmc
in
push
mov
lret
lcall
int
mov
scas
xchg
lcall
push
lea
imul
mov
cmc
sub
mov
pusha
xchg
sahf
cli
test
ret
xor
mov
test
js
int3
xchg
sub
cmpsl
mov
mov
fstps
aas
xor
inc
imul
add
adc
mov
sub
dec
mov
push
test
xor
clc
lret
xchg
arpl
cmp
imul
inc
push
mov
das
dec
mov
in
mov
and
out
mov
stos
sbb
into
cltd
test
mov
orl
push
pop
insb
stos
test
inc
mov
pop
adc
lret
imul
out
push
cmpsb
inc
and
movlps
and
icebp
fdivr
push
mov
and
cmpsl
shll
pop
push
fnstenv
dec
stos
imul
cmpsl
out
jnp
mov
movsl
or
dec
outsb
das
cmp
and
andb
les
cltd
mov
jne
sbb
sbb
sub
mov
push
dec
pop
mov
xor
gs
xchg
in
fldlg2
sbb
stc
arpl
cs
sbb
int
frstor
xor
jle
insb
add
sbb
mov
or
daa
jg
push
out
ja
and
xor
cwtl
xchg
xchg
sbb
pop
nop
or
inc
mov
pop
test
loop
cltd
sbb
outsl
xchg
and
fmuls
jbe
aaa
cwtl
cmpsl
adc
mov
sbb
jb
lods
and
fildll
cltd
dec
aad
psrlq
fisttpl
addr16
add
stos
lahf
push
lret
sub
push
pop
push
mov
hlt
lret
iret
js
dec
xor
and
mov
and
xor
nop
sub
fs
xor
mov
mov
lret
pop
cmp
xor
hlt
les
push
xor
ucomiss
ljmp
repz
sbb
push
and
rcrb
imul
out
int
ljmp
mov
xlat
xor
mov
xchg
pop
push
mov
cmp
imul
sub
int
lcall
and
inc
add
out
scas
movsl
mov
mov
adc
insl
decl
stos
addr16
in
call
mov
xchg
cmp
in
pop
or
in
pop
jbe
es
cmpsb
jecxz
push
push
jl
movsl
jnp
xchg
inc
pushf
and
mov
xchg
push
imul
movsb
movsb
xchg
movsl
out
aad
add
lods
inc
fldln2
lds
mov
xchg
nop
fwait
and
inc
adc
test
push
inc
add
pop
imul
inc
and
and
pop
mov
cs
jge
popa
push
dec
cmp
cltd
mov
lea
in
xor
mov
mov
push
cmp
mov
mov
sbb
mov
dec
push
jo
shlb
sbb
inc
ja
pop
pop
test
imul
mov
stos
jecxz
daa
stc
fs
inc
scas
pop
xchg
mov
xorb
mov
orb
into
hlt
lcall
repz
cmp
mov
push
or
adc
stos
dec
or
call
sbb
cs
xchg
int3
add
mov
push
fsubl
push
xor
negl
push
inc
lea
mov
pop
js
push
pop
orl
aad
dec
jle
pushf
testb
test
xchg
mov
loop
dec
aas
shr
push
xor
mov
inc
pusha
xlat
adc
daa
scas
frstor
xchg
jecxz
sbb
jnp
in
fildl
hlt
mov
repz
sbb
fsubrs
jl
add
xor
add
jge
add
cmc
addr16
lret
vmwrite
xor
insl
cmc
inc
adc
icebp
popf
ficoms
loope
test
les
xchg
enter
or
mov
sahf
push
shl
test
mov
adc
scas
jbe,pn
cld
shrl
adc
cmp
push
ja
cmpsl
push
jo
mov
fucomi
data16
or
mov
push
sbb
out
push
inc
notb
clc
push
inc
push
pop
or
test
and
sbb
inc
out
fwait
sub
pop
pop
fmull
or
subl
cmp
test
ret
stos
inc
and
or
sbb
and
dec
inc
jl
sbb
data16
xchg
into
sbb
mov
pushf
je
arpl
popf
inc
xor
out
mov
fidivrl
mov
mov
ja
arpl
or
inc
dec
cs
mov
jbe
je
aam
jle
outsb
aad
popa
sub
cmp
stc
fildll
pop
shrb
pop
shrl
jnp
mov
push
mov
sbb
xchg
ret
test
add
lret
add
sub
into
sti
scas
scas
insl
nop
shrl
dec
pushf
es
jno
jg
mov
lret
sub
add
stc
mov
in
xor
cmp
gs
mov
sub
or
and
std
or
pop
mov
mov
pop
jbe
dec
hlt
push
push
les
adc
or
push
shrl
xor
outsb
arpl
aaa
xorl
xor
inc
imul
pop
or
in
inc
jb
xchg
repz
popf
or
js
dec
adc
hlt
lea
add
adc
imul
mov
mov
rolb
cmp
sub
adc
push
xchg
addr16
loope
ret
faddl
lock
inc
cs
xchg
fcoml
dec
fldt
jnp
or
stos
sbb
bound
mov
fadd
mov
xchg
pusha
add
cmp
and
outsl
xchg
or
cs
dec
pop
cmc
adc
int
test
mov
xchg
mov
add
and
testb
cmpsb
mov
adc
xor
pop
enter
sbb
dec
push
aad
lock
xor
mov
cmp
clc
push
and
add
imul
and
mov
mov
sbb
push
aas
jb
or
aad
fidivl
bnd
inc
sbb
sub
mov
das
or
in
sti
xor
adc
mov
dec
mov
clc
inc
cmp
roll
iret
adc
scas
fstl
movsb
fisubrs
sub
xor
mov
shl
shll
cmp
cmp
jnp
cmpl
pushf
inc
mov
jne
in
jo
and
mov
mov
test
addb
jge
xor
es
xorb
and
xor
xchg
in
inc
rcll
cmp
stc
mov
and
sub
mov
and
jecxz
or
js
jle
cmp
testb
jg
lret
cmp
lods
cmp
jne
rorl
xchg
cld
in
jg
cmp
and
cmpsl
jle
mov
cmp
cmpsl
mov
pop
addr16
movsb
xor
in
fcmovu
xor
push
xlat
dec
lcall
push
dec
ret
sub
mov
and
add
orb
loop
sub
mov
movsl
sub
dec
sub
pop
push
mov
daa
lock
faddl
or
jne
popf
sub
test
fbstp
push
movsl
jle
push
test
pop
fnstsw
pop
fisttps
pushf
sbb
int
aam
inc
pop
push
shll
xchg
jno
lea
hlt
dec
mov
sbb
xchg
xchg
nop
jbe
adc
or
mov
mov
or
inc
out
mov
adc
repnz
or
add
pusha
dec
inc
cmc
or
fcoml
fwait
sbb
pop
dec
cmpb
jg
dec
and
stos
bound
shrb
inc
stos
jbe
sub
stc
fisttpll
aam
sahf
mov
ss
bound
sub
loop
xor
jnp
pop
lcall
insl
call
sbb
lock
cmp
push
push
cmpsl
xor
mov
fisubs
aad
popf
in
addr16
sbb
test
push
ja
or
cmp
xor
inc
pop
insl
dec
xchg
arpl
push
dec
scas
and
sub
xchg
mov
fcoml
enter
push
ds
and
lods
in
mov
out
je
jmp
dec
jg
lcall
in
loopne
scas
mov
inc
dec
and
fs
call
sub
xor
inc
rcrb
sbb
gs
andl
cs
push
dec
loopne
inc
js
pop
popf
jo
inc
lods
xor
jo
adcb
insb
xchg
dec
dec
push
fsts
xor
popa
xlat
xchg
loopne
cmp
xor
out
jmp
adc
pop
loop
cli
sbb
pop
jno
dec
int
jnp
cwtl
push
cmp
cltd
fwait
aaa
movsb
cmpb
insl
clc
ljmp
push
mov
adc
std
pop
insb
or
shlb
sub
movl
fnstsw
mov
and
xor
mov
int
sbb
in
cmp
mov
in
fmuls
testb
inc
loop
fidivs
std
pop
arpl
jge
fnstsw
in
sti
test
push
sub
rcrl
or
bound
clc
or
sbb
pop
movsb
mov
dec
aaa
imull
movl
dec
xchg
mov
jne
nop
jecxz
in
out
mov
jae
push
in
or
add
or
xchg
adc
les
mov
pop
into
push
fildll
jecxz
xchg
xchg
outsb
mov
pop
push
sub
loopne
mov
and
cmp
mov
dec
sub
mov
add
or
ljmp
and
push
into
mov
aad
aas
fwait
ja
bound
sbbl
jne
push
stos
and
ljmp
mov
outsb
and
xchg
push
sahf
add
ret
cmpsb
flds
inc
jo
inc
mov
fs
jecxz
fisttpll
aam
jge
aaa
mov
int3
sbb
add
mov
add
aas
dec
popf
xor
pop
loope
clc
cmp
pusha
xchg
cmpsl
sub
mov
xor
mov
shl
xorb
in
enter
or
mov
mov
cltd
loop
mov
mov
xor
pusha
mov
and
jnp
mov
or
in
cs
clc
sbb
xchg
add
fisubrs
lcall
je
jne
lret
jg
cs
pusha
inc
mov
cmp
cmpsb
xchg
xchg
test
mov
push
sub
popa
stc
inc
xchg
das
xchg
test
and
repnz
xor
adc
pop
or
fcomps
in
les
sub
xchg
mov
push
das
test
xor
fneni(8087
cli
push
sbb
mul
mov
mov
sbb
and
and
repnz
adc
pop
and
rcll
test
aad
imul
adc
mov
mov
lds
divl
imull
and
push
cmp
inc
arpl
stos
add
dec
jge
shrl
jg
adc
int3
aas
dec
int
fsubrs
adc
sub
dec
movsl
addr16
mov
or
pop
jae
pop
mov
test
loopne
loopne
jnp
ljmp
es
adc
notl
ficomps
xchg
out
cltd
std
cmp
add
mov
ja
or
scas
or
stos
les
adc
xor
stos
xchg
pop
and
stos
mov
popf
xor
jp
push
in
xchg
leave
rol
aam
push
imul
push
loope
outsl
inc
push
ljmp
push
jecxz
xor
scas
dec
jp
mov
les
loop
out
push
andb
andb
pop
push
xor
scas
push
nop
sbbb
insl
adc
xchg
cmp
int3
or
and
ja
add
jl
bound
sub
arpl
shrb
push
xor
lahf
ss
pop
aas
data16
cli
or
or
or
cmp
mov
mov
sbb
add
ja
cmp
movsb
inc
xchg
sub
push
pop
sbb
sahf
cmp
jge
xchg
push
iret
sbbb
mov
sbb
lock
lahf
xor
sarl
pop
mov
jae
sbb
sbb
test
push
je
adc
fdivs
ret
and
aas
xor
into
loop
lods
mov
mov
and
pop
pop
mov
pop
sbb
jmp
idivb
fdivl
adc
or
xchg
jns
and
in
xchg
faddl
pop
movsb
xchg
mov
xchg
mov
popa
jno
das
dec
jecxz
mov
movsb
mov
dec
xchg
pusha
or
out
int
push
mov
repnz
ror
mulb
adc
and
leave
pop
fdivrp
or
pop
ficoms
adc
test
pop
sub
popf
int3
or
mov
jbe
aaa
mov
cmp
pop
cltd
out
ficomps
int3
ja
cmp
mov
xlat
lcall
in
sahf
gs
adc
cltd
inc
pop
out
dec
and
or
movb
dec
imul
pop
or
out
dec
bound
sub
std
jbe
lds
rolb
repz
in
popf
jp
push
mov
add
sub
xchg
jge
push
adc
shlb
mov
jecxz
or
gs
aaa
push
stos
pop
or
push
mov
out
xor
jp
push
add
mov
into
test
testb
sbb
jae
and
mov
jmp
push
push
pop
lahf
cmp
dec
rclb
inc
fucomp
insl
add
push
es
cmp
sbb
test
shll
mov
push
aaa
inc
mov
dec
inc
xchg
in
sbb
xchg
push
cwtl
les
add
cmp
adc
sbb
outsl
repz
adc
iret
mov
dec
fstl
cmp
mov
or
fwait
imul
xor
ja
mov
mov
pop
xchg
shll
xor
adc
jecxz
rol
jne
sbb
out
mov
adc
loop
xor
jo
jnp
in
aas
pop
pop
test
repnz
cmp
pusha
dec
repnz
sbb
divb
out
add
inc
xor
int
mov
push
pop
cmpsl
jnp
inc
sbb
pusha
pop
ds
cmp
push
mov
xchg
mov
dec
out
les
mov
lods
in
sbb
mov
dec
or
int
cli
dec
movsb
sbb
enter
push
in
adc
push
inc
stos
fbld
stc
imull
cmp
or
leave
leave
popf
and
das
xor
adc
pushf
dec
jmp
cmp
gs
mov
push
mov
xchg
mov
pushf
pop
and
inc
sub
aam
push
mov
or
push
jns
fwait
push
lcall
xor
or
mov
dec
ss
xor
ret
in
rorl
fwait
in
adc
testl
nop
cmp
arpl
xchg
dec
ljmp
jle
mov
fistl
xor
dec
cli
int3
push
adc
mov
and
cmp
xchg
movb
xrelease
mov
cmpl
outsl
xor
sub
pop
movl
enter
xchg
orl
mov
push
or
movl
push
cld
xchg
iret
dec
cmp
jecxz
mov
xor
mov
inc
cmp
out
mov
out
push
and
xor
dec
inc
add
sub
push
pop
jbe
daa
and
sub
movsb
pusha
in
loopne
jnp
or
test
ss
jb
test
sub
loope
dec
sbbb
into
add
dec
outsb
inc
adc
test
int
dec
and
negb
cmp
mov
xchg
leave
mov
stos
inc
pop
mov
cmpsb
fs
hlt
cmp
sbbl
test
jns
jns
cld
inc
dec
repnz
rorb
sub
and
ja
insl
in
cmpsl
jle
nop
fisttpll
add
jmp
jmp
add
cli
push
cmpsl
ja
xchg
and
xchg
jns
xor
cmp
cwtl
aad
jnp
sub
inc
mov
fidivrs
shll
add
sub
xchg
bound
mov
xchg
cmp
cmpsl
xor
mov
dec
out
sub
xchg
mov
dec
pop
test
pop
rcrb
xchg
mov
lret
sbb
add
push
push
push
movsl
inc
aam
mov
mov
add
pop
and
fisubl
stos
push
mov
insl
add
popa
or
mov
dec
in
dec
xlat
adc
ret
mov
adc
ret
iret
loopne
dec
popf
cmp
inc
push
inc
ljmp
pop
lods
pop
sbb
lock
xchg
push
lds
icebp
inc
dec
xchg
pop
pop
pop
icebp
pop
mov
mov
pop
in
mov
add
pushaw
fidivs
jmp
sbb
push
fdiv
loopne
ds
mov
imul
pop
cli
xchg
sub
insb
aas
or
and
fcoml
sbb
or
fimull
inc
mov
ljmp
js
push
nop
mov
mov
fisubrl
jl
out
test
mov
push
mov
pop
jbe
mov
xlat
sub
sti
xlat
dec
xor
inc
movsb
fwait
push
hlt
pop
sbb
push
sbb
sbb
pop
jns
lods
sbb
arpl
push
add
insl
mov
iret
movzbl
xor
pop
ds
std
leave
scas
pushf
aaa
adc
pop
jnp
call
lock
xchg
dec
mov
mov
mov
sub
push
out
int3
mov
out
in
lret
sahf
ds
jb
pop
xchg
mov
pop
lods
cmp
mov
mov
mov
fs
and
dec
push
cwtl
inc
or
pop
cmpsl
cmp
stos
inc
inc
lods
pop
jbe
in
mov
xchg
mov
mov
cmp
pop
lret
sbb
lret
loope
lret
cmp
stos
popa
jecxz
xchg
pop
xchg
loopne
test
adc
loop
push
dec
cmpsl
test
sbb
fucom
push
movsb
jle
lcall
les
jbe
adc
pushf
push
push
leave
inc
mov
stos
pusha
add
mov
in
pop
shlb
out
pop
subb
cmp
sbb
stos
push
add
xchg
jge
cltd
lock
lret
popf
and
inc
lods
enter
mov
add
dec
frstor
hlt
or
jl
adc
push
and
fdivs
sub
lea
lret
lea
ja
sub
sbb
push
push
sbb
dec
insl
push
jnp
inc
and
adc
cmpsb
test
outsl
jo
dec
in
cmp
dec
fisttpl
cmpsb
or
pop
enter
cltd
jnp
cmp
ja
cld
cmp
pop
mov
pop
mov
push
rcrb
adc
mov
arpl
adc
jmp
fstl
rolb
and
push
fidivrl
mov
rclb
xchg
popa
stos
or
cltd
dec
icebp
pop
aad
loope,pt
pop
cli
and
and
ja
fbstp
jecxz
movsl
ds
sub
in
jno
div
mov
xor
fimull
jno
cmp
lods
mov
or
ret
aam
in
jg
cs
adc
xchg
and
test
ss
pop
cmp
loope
loope
lods
mov
popf
and
cmp
mov
gs
jmp
inc
int
or
mov
enter
pusha
out
jmp
fisttpl
lods
cmpsl
test
push
mov
cmpb
les
dec
sub
pop
and
into
iret
dec
stc
pop
clc
push
xchg
ljmp
xor
stos
inc
test
mov
dec
xchg
pop
and
inc
xchg
sbbl
or
popf
lods
fadds
test
xorb
mov
mov
scas
cmc
jmp
popa
jmp
je
scas
sbb
jg
aam
sub
lods
or
aad
inc
pop
mov
jle
into
push
flds
ds
mov
mov
inc
in
popf
mov
fisttpll
cmpsb
orb
push
mov
pop
xor
jb
std
fucomi
pop
add
xchg
enter
adc
imul
je
test
inc
dec
outsl
loopne
sbb
mov
jae
xchg
test
jmp
mov
inc
or
push
cmc
int3
mov
pop
out
incb
test
stos
addr16
push
data16
jecxz
push
in
int
shlb
not
cs
mov
rol
fwait
jno
lds
mov
popf
orb
or
test
decl
mov
gs
stos
ljmp
cltd
xchg
cmp
add
push
fwait
push
daa
sbb
aam
sub
aaa
das
pushf
mov
mov
push
loopne
or
push
adc
jmp
or
pmaddwd
xchg
subb
push
je
ss
ds
inc
les
add
rorb
dec
push
adcl
push
xor
in
jp
mov
mov
fisttpl
in
mov
jo
lahf
mov
dec
adc
fldt
pushf
test
aas
mov
jle
daa
xlat
mov
push
korw
push
xchg
loope
idivl
lods
sub
mov
jnp,pn
leave
inc
xlat
mov
cmp
push
aad
pop
jp
mov
cld
mov
xor
push
dec
add
push
and
xchg
fcompl
std
cmp
and
push
sbb
cmc
cmp
ljmp
movsb
fnstcw
int3
fisubrs
pop
loope
andb
jno
aad
add
sti
xor
sarb
out
pushf
pusha
loopne
mov
mov
clc
jnp
jne
mov
fdiv
lods
mov
leave
test
pop
loop
in
sub
jo
pop
inc
push
mov
lahf
cmpl
cmpsb
mov
mov
fdiv
cmp
bound
pop
stos
push
inc
adc
movsb
mov
neg
pushf
aam
shlb
pop
jae
and
mov
inc
cmpsb
dec
inc
out
pop
in
sbb
sti
mov
hlt
das
into
adc
jmp
mov
addr16
out
mov
dec
xchg
inc
cmp
pop
adcl
stos
mov
adc
inc
cld
xchg
pop
xchg
adc
fsubp
mov
push
push
adc
fwait
insl
pop
mov
orl
sbb
pop
shlb
xchg
push
out
xor
and
imul
inc
pushf
out
pop
cltd
sarb
sbb
push
popf
stos
outsb
in
jge
movsl
pop
out
push
sbb
fimuls
add
sub
inc
fwait
xchg
addb
or
nop
xchg
jb
lock
mov
push
pop
or
pop
jp,pn
in
scas
xlat
cmp
mov
insb
xchg
inc
imul
int3
pop
ret
mov
cmpb
dec
sbb
lea
adc
dec
inc
clc
or
or
and
ret
out
push
test
dec
push
daa
jnp
mov
sub
inc
push
data16
mov
inc
mov
popa
mov
les
inc
cli
jne
outsl
aad
stos
fdivrl
dec
sbb
fwait
xchg
or
pop
xchg
cltd
lds
ret
sahf
lahf
cmp
push
scas
adcb
cltd
jg
add
mov
or
aad
mov
mov
jp
or
loop
mov
hlt
xor
add
sbb
mov
cltd
and
fistpl
mov
into
xchg
mov
dec
out
std
mov
sti
aaa
stos
xor
cltd
test
cmp
lret
sub
es
sub
fadd
xchg
dec
sahf
scas
sbb
mov
xchg
xchg
imul
sbb
insl
sbb
je
scas
lods
add
aaa
into
test
xchg
jns
cmpsl
pop
push
inc
fimuls
pop
lcall
xor
inc
loop
sub
aam
data16
and
xor
movsb
ffreep
lahf
stos
pop
add
addr16
add
cs
xor
jae
ret
xor
mov
jp
fildll
mov
xchg
in
inc
ss
fcomip
add
lods
sarl
push
adc
mulb
sbb
popf
xor
cmp
insb
outsb
xchg
negl
mov
push
int
data16
pusha
dec
mov
push
test
mov
mov
sub
add
cmp
push
nop
xchg
push
sub
lods
xor
pop
test
mov
pop
pushf
and
rol
fcoml
fisttpl
pop
or
imul
addr16
lahf
jg
mov
jge
adc
jge
sub
xchg
push
cmp
mov
cwtl
cmc
add
mov
fldenv
ret
addr16
mov
fs
push
jbe
cmc
push
mov
push
pop
sub
mov
scas
inc
lret
bound
cld
jecxz
mov
fsubrs
cmpsb
jle
call
stos
sbb
or
xor
jns
dec
push
sti
shl
sub
jl
cli
pop
std
inc
mov
shrl
sbb
mov
je
and
xchg
bnd
cmc
jmp
lock
inc
mov
andb
xchg
ret
mov
sbb
sub
fistpl
cmc
cltd
xchg
and
sbb
test
mov
repnz
push
test
xor
jbe
fsub
mov
mov
rsqrtps
cmpb
gs
fisttpll
mov
inc
sbb
xorl
aam
inc
mov
shll
lods
movsl
xchg
dec
push
or
pop
mov
mov
mov
out
repnz
and
jecxz
push
daa
outsb
mov
or
pop
add
out
add
sbb
sbbl
sbb
mov
xchg
aam
call
dec
mov
shrl
push
insl
sbb
iret
xchg
push
and
scas
or
xchg
int3
jae
push
sti
into
xchg
mov
inc
dec
dec
sbb
orb
mov
dec
dec
filds
test
mov
cld
adc
push
inc
dec
rolb
push
out
xchg
mov
push
icebp
pop
in
xor
xchg
aam
xchg
jns
xchg
scas
pop
inc
iret
mov
imul
in
mov
fs
in
mov
cmc
push
push
fldl
dec
mov
cmp
add
push
xchg
adc
xlat
ljmp
dec
call
xor
mov
push
loop
clc
shrb
inc
push
aam
adc
mov
out
adc
mov
xchg
nop
fcoml
aam
aaa
dec
rcrb
sar
ds
xchg
cmp
aad
test
mov
mov
xor
mov
cld
xor
xor
inc
cli
mov
imul
cmp
cmp
jge
mov
or
mov
cs
push
or
iret
xchg
push
add
inc
push
push
addr16
cs
adc
jae
or
jne
insl
mov
sbb
push
cwtl
or
and
dec
lds
scas
out
or
movsb
adc
inc
lea
mov
adc
fsts
out
shlb
imul
push
cmp
ficompl
stc
sbb
cli
or
push
in
test
rcrw
mov
inc
jbe
push
jbe
ds
das
pop
and
dec
ss
xor
pushf
or
sub
sbb
in
out
repz
roll
pop
cmp
mov
leave
sub
loopne
fdivrp
les
std
push
insb
xchg
adc
stc
xor
jae
mov
sub
sti
test
adc
ret
cmp
cmc
sarl
mov
pop
gs
nop
mov
test
shl
sahf
std
xlat
aam
xor
lds
out
ficomps
shll
jne
sub
pop
cmpl
xor
adc
adc
or
addl
arpl
sub
das
outsl
or
sbb
add
add
fmull
insl
stc
aaa
and
adc
push
mov
mov
mov
aaa
sarl
adc
mov
pop
shlb
pusha
push
push
push
lcall
dec
sar
mov
insl
out
int3
sbb
mov
sbb
xor
pop
fistpll
jl
push
dec
orb
lock
clc
in
mov
and
bound
iret
js
xor
mov
int3
pop
mov
repz
or
and
inc
das
mov
xchg
movsb
cmc
int
sbbl
mov
dec
fcomp
dec
jle
and
pusha
leave
cmc
mov
aam
mov
inc
je
stos
in
inc
mov
or
mov
bound
mov
fcomps
sbb
mov
aam
inc
lods
and
mov
mov
and
lcall
dec
add
movsl
in
popf
xchg
sarl
xchg
rcll
ds
addr16
repnz
loopne
loopne
cld
mov
mov
pop
getsec
or
and
sahf
js
pop
mov
push
sub
jne
jg
jle
inc
push
and
fs
and
jl
mov
mov
sbbb
mov
je,pt
lods
shlb
into
xchg
push
ret
xchg
je
enter
aad
subl
icebp
xchg
sti
sub
add
loopne
add
inc
or
js
inc
dec
xor
pop
pop
fisubl
test
ds
push
push
or
ja
push
xorb
mov
ss
movsl
jmp
outsl
or
loopne
jnp
gs
and
sbb
das
shlb
out
inc
mov
stc
icebp
mov
lods
decl
pop
mov
xchg
mov
mov
mov
aam
addl
pop
lock
sbb
and
movsb
bound
push
cld
sbb
js
inc
inc
mov
push
test
pusha
sub
mov
sbb
mov
push
sahf
repnz
inc
xchg
pop
out
mov
dec
push
push
stos
repz
sub
mov
cmp
clc
aad
add
jp
push
push
or
mov
xchg
lahf
push
push
dec
xor
shlb
out
cmc
mull
pop
mov
jae
mov
xchg
inc
scas
addl
movsb
push
es
inc
sahf
mov
fnstcw
lods
jae
or
and
push
cmpsb
xchg
cmp
add
sbb
sub
mov
xchg
mov
xlat
iret
push
ljmp
dec
mov
rcl
lods
es
andl
shll
lahf
adc
and
ljmp
daa
orl
mov
sbb
leave
loopne
or
mov
movsl
out
lods
mov
int3
into
cld
mov
mov
aam
and
push
sub
repnz
jne
into
push
xorb
fdivl
test
sahf
in
mov
and
dec
imul
addr16
adc
repnz
add
iret
or
fcoms
pop
lods
fs
xchg
add
enter
mov
sbb
mov
mov
inc
xchg
cli
mov
bound
or
nop
stos
pop
pusha
testb
ljmp
lahf
adc
jmp
lods
cli
lock
lods
jnp
sub
or
mov
test
scas
jno
adc
sbb
dec
cmp
or
fisubl
lods
mov
push
repnz
mov
inc
roll
call
xor
jae
cmp
xchg
rcrb
or
mov
jae
adc
sbb
lcall
les
test
mov
lcall
jmp
push
rcr
movsb
lods
in
into
jb
mov
out
ljmp
mov
imul
and
in
or
incb
out
push
jmp
test
xchg
push
adc
mov
ds
hlt
mov
push
jecxz
cmp
sub
jle
jb
add
icebp
xchg
cmp
adc
push
mov
mov
iret
loop
out
mov
xchg
push
or
nopl
xor
out
mov
mov
arpl
int3
xchg
sbb
or
stos
loopne
pop
imul
orb
add
jp
aam
xchg
repz
cli
mov
jg
xor
decl
xor
cmp
sbb
pop
cmp
stos
dec
and
mov
pop
fwait
or
add
les
out
mov
lahf
sbb
leave
test
mov
mov
jae
jb
xor
xorl
shll
enter
inc
cmpsl
xchg
xor
jns
lods
cltd
xchg
inc
lds
sahf
inc
test
jno
lds
sub
adc
movsb
lock
or
in
orl
mov
mov
gs
xor
arpl
aad
add
or
mov
sbb
jbe
mov
mov
pop
into
lret
mov
out
jle
sub
and
lret
repz
insl
mov
into
imul
mov
jns
ljmp
xchg
jecxz
cmpsb
sbb
ja
mov
mov
insl
or
gs
daa
dec
push
dec
pop
enter
lock
sbb
stc
push
sub
mov
test
ret
addr16
scas
mov
mov
inc
sbb
cmp
insl
sti
inc
lcall
ret
aas
cmp
ljmp
stc
int3
mov
fldt
or
rol
sti
push
aas
and
aaa
icebp
lods
push
xchg
jb
mov
pop
and
stos
xchg
cmp
push
xchg
fidivs
jne
orl
into
stos
mov
inc
or
shlb
out
jg
arpl
mov
movsl
mov
xor
mov
out
pop
popf
mov
lret
cmp
popa
mov
and
cmp
loope
xchg
outsl
fiaddl
cli
cs
push
mov
xchg
fcoml
pushf
test
xlat
adc
and
es
ljmp
xchg
add
stos
mov
pop
xchg
mov
sub
int3
das
jp
push
es
cltd
es
xchg
daa
cmp
testl
and
mov
inc
stos
or
push
pop
lds
sub
dec
jno
xor
push
arpl
mov
jl
or
sbb
shll
pop
sub
jnp
lret
lret
dec
jmp
push
roll
dec
sti
inc
xchg
aam
into
dec
cli
aam
fildll
jno
and
push
push
aad
sub
push
adc
inc
pop
inc
out
mov
jmp
fnstcw
lret
icebp
push
dec
mov
jge
int
imul
sbb
jecxz
jp
mov
fmulp
outsb
fcompl
addl
inc
mov
movsb
and
fdiv
stos
jno
gs
icebp
xchg
adc
movsb
cmp
inc
sarb
ret
outsb
push
adc
adc
test
mov
in
das
pop
andb
ret
ror
shrl
pop
push
cmp
xchg
jge
gs
pusha
jne
pop
inc
push
mov
xor
push
daa
scas
pop
sahf
xchg
push
adcl
aam
mov
bound
mov
outsl
ds
popa
add
dec
jecxz
add
cwtl
inc
fsubs
mov
clc
cmpsl
mov
jne
push
loope
push
add
mov
call
into
stos
mov
aad
in
notb
xchg
in
data16
sbb
out
js
test
in
inc
sub
cs
push
or
mov
scas
add
addr16
inc
pop
pop
fdivrl
xor
addr16
cmpsl
imul
mov
push
aam
cmp
lods
jle
je
sub
test
inc
cmp
loop
out
call
fsubr
pop
cmp
pop
jg
mov
ret
sub
inc
lret
sbb
test
xchg
xor
aas
mov
insl
mov
xor
cmp
lahf
jb
pop
and
inc
fadd
jb
jnp
mov
dec
sti
aas
daa
inc
mulb
dec
fwait
mov
iret
push
mov
mov
jbe
repnz
fpatan
xor
dec
push
dec
xchg
fnsave
mov
jmp
add
leave
push
mov
cmc
ds
lock
push
adc
push
jecxz
and
xchg
add
shrl
lahf
ljmp
adc
cmc
mov
and
lods
test
sub
les
or
jl
imul
sbbl
lahf
cmp
and
push
int
sbb
mov
fwait
pushf
sti
pop
rorb
mov
sbb
mov
cmp
cmpsb
fldl
int3
and
jae
push
pop
fildl
sahf
push
popf
pop
adc
out
pushf
mull
sub
add
jmp
add
dec
xchg
out
mov
aam
sub
cmpsb
sahf
cmp
arpl
popf
mov
sbb
negb
jnp
lea
jb
or
lret
out
jmp
mov
mov
pop
sub
push
mov
js
jae
sar
insb
dec
dec
push
out
or
lods
into
xchg
pop
pop
arpl
jbe
or
push
mov
repnz
cmp
jecxz
push
pop
rorb
jmp
loopne
dec
xor
and
stc
lock
sti
int3
and
pop
enter
pop
pop
es
sub
cltd
or
stos
xchg
test
push
sarb
test
cmc
sbb
insb
iret
fists
inc
xchg
aad
test
ss
inc
jo
mov
cmpsl
sbb
add
ret
insl
es
fdivp
scas
and
mov
inc
or
mov
sub
add
xor
icebp
or
and
es
cli
int3
loop
push
push
les
mov
xchg
adc
cmp
xchg
leave
push
inc
hlt
dec
fistpll
in
mov
pop
pop
iret
mov
xor
out
or
lahf
inc
out
push
cmp
sbb
shlb
jp
stos
pop
inc
mov
pop
sbb
mov
popa
sub
icebp
cmpsl
cmp
es
sbb
jp
inc
cmp
stos
mov
add
adc
cmpsb
add
xchg
andb
int
xor
iret
mov
add
fsts
movb
scas
cld
ja
mov
mov
in
sbb
cltd
add
dec
xor
fcomp
inc
jbe
aas
ret
pop
mov
jne
lods
push
js
ss
xchg
ja
inc
mov
add
cmpsl
mov
pop
add
mov
push
ret
pop
push
lcall
pushf
loope
and
imul
inc
adc
or
or
negl
fs
fwait
insl
std
loop
and
mov
push
pop
xchg
push
andl
out
lods
or
push
call
jns
out
or
lock
sahf
pusha
mov
xlat
ja
clc
nop
inc
test
add
aad
movsl
js
mov
push
insb
xchg
mov
xor
idivl
add
and
lret
dec
test
inc
data16
pushf
xor
into
adcb
stos
lahf
push
mov
push
pop
dec
outsb
cmpb
xor
je
mov
fildl
mov
jmp
xchg
addr16
pop
mov
out
pop
test
mov
imul
xor
loopne
std
jae
add
sub
push
test
inc
pop
mov
mov
ljmp
mov
jg
shlb
jmp
test
and
mov
jb
stos
cld
in
dec
pop
cmp
inc
roll
mov
mov
cs
push
cwtl
xchg
mov
xor
loopne
or
xor
mov
test
cmp
mov
jmp
fs
fstps
cmpsb
je
or
hlt
jns
js
adc
inc
pop
cmpsb
sub
lock
pop
cwtl
call
aad
or
mov
stc
fisttps
aam
cmpsl
cwtl
pop
xchg
push
or
inc
cmp
leave
shlb
imul
jle
hlt
out
aad
test
repz
jmp
imul
arpl
xchg
mov
pop
sbb
sub
imul
pop
pop
hlt
jae
insb
adc
push
xor
testb
out
cwtl
sahf
xchg
out
ret
clc
or
stc
jmp
push
xor
pushf
nop
aaa
cmp
repnz
dec
push
pcmpgtw
mov
fsubs
cld
xchg
xchg
xchg
mov
test
push
cltd
frstor
cltd
jb
pop
cmp
jae
leave
sahf
js
lahf
inc
xchg
int
ret
ds
ss
sub
clc
adc
outsl
inc
das
ja
push
dec
aaa
jne
negb
test
jae
out
outsb
xor
test
cmp
adc
pop
inc
push
arpl
push
and
add
sbb
insb
sbb
into
popf
into
xchg
cwtl
es
fwait
mov
js
jbe
aaa
or
jb
dec
add
pop
mov
add
cmpsb
fwait
pop
cmpsl
pop
scas
dec
mov
jae
xor
gs
xor
stc
xchg
adc
jnp
xor
shlb
imul
jmp
push
cmp
add
stos
mull
pushf
and
push
les
jnp
dec
test
adc
pop
lods
dec
insl
into
das
outsb
mov
and
and
in
push
jp,pt
hlt
scas
sbb
andl
pop
dec
loopne
xchg
mov
or
pop
sti
cmpsl
mov
shlb
mov
cs
pop
mov
addr16
xchg
cmp
add
stc
repnz
pop
cmc
push
push
shl
cmpsl
jg
test
pusha
push
in
cld
divl
jmp
cmpsl
sti
mov
rcrb
gs
aas
dec
mov
cmpsb
push
add
adcb
cmp
pop
gs
mov
or
pop
roll
in
lret
mov
push
sti
lods
push
loopne
jp
pop
cltd
in
sti
xchg
lods
pop
sarl
pop
popa
inc
mov
xor
cmc
pushl
sub
aas
mov
pushw
fs
pop
pop
stos
jle
push
mov
pop
xchg
fsubr
lahf
mov
divb
imul
js
out
addr16
cld
test
xchg
lahf
enter
stos
jmp
cmp
jmp
mov
cmpsl
lret
cld
jge
aas
data16
cli
out
leave
fcmovb
sub
stc
sbb
stc
jecxz
cmp
aam
sub
and
push
gs
sahf
jbe
xor
push
test
sub
ficoml
call
addr16
sub
sti
ja
push
sub
sub
jp
lods
je
in
sbb
fiaddl
pop
imul
call
pop
mov
jge
inc
sub
mov
je
xchg
roll
push
mov
movsl
push
mov
mov
jmp
test
sahf
sbb
jge
xchg
inc
rorb
push
and
adc
hlt
mov
in
iret
mov
sub
and
ja
lahf
fdiv
add
sbb
adc
sbb
mov
sub
roll
test
jmp
cmpsl
add
fistpll
jp
lods
stos
add
inc
pop
xchg
inc
add
fcomip
sti
test
lret
cmp
and
xor
lret
stos
out
jl
sub
xor
dec
inc
outsb
lods
lret
xchg
xor
inc
ljmp
ss
loopne
sub
sbb
sbb
test
pop
scas
sbb
or
mov
pop
dec
jne
jg
repz
sub
int3
shr
sbb
pop
stos
pop
vpacksswb
push
sti
pop
addb
stos
test
push
in
inc
jp
or
sbb
cs
fisttps
adc
mov
xchg
jae
data16
jb
fsubl
in
dec
lret
mov
fimuls
fmull
insl
inc
cmp
cmp
pop
and
xchg
jmp
pop
jge
dec
pop
sub
lahf
lods
cli
andl
jno
adc
pop
dec
fdivs
iret
aad
les
xchg
pop
pop
mov
lea
je
aaa
out
mov
into
add
aad
jnp
imul
rcl
cmp
pop
sbb
cwtl
pusha
fimull
xor
arpl
addr16
scas
les
fbld
data16
cmp
lods
stc
xor
in
iret
xchg
data16
into
daa
cmp
and
mov
cmp
gs
aaa
fwait
andl
ja
mov
mov
dec
sarb
push
lea
ss
loopne
and
in
dec
lods
fmuls
mov
and
or
ljmp
int3
pop
and
in
pop
clc
sbb
xchg
adc
fimull
popf
dec
pop
mov
nop
inc
cmp
jle
stos
xchg
movsb
nop
dec
lods
lods
cmpsb
push
adc
lret
push
clc
popa
outsb
insl
cmp
imul
cmpb
xor
lahf
lret
mov
sbb
in
mov
adc
leave
movsb
jecxz
out
xchg
mov
mov
pop
mov
dec
xor
or
mov
ss
or
cmp
cmp
cmp
jb
jae
jo
add
xlat
jmp
clc
enter
outsl
sbb
ja
push
mov
popa
or
push
int3
add
repz
push
cmp
pop
orb
pop
mov
cld
lock
mov
in
xchg
fdivrs
and
cltd
repz
mov
mov
mov
into
aaa
std
xlat
testb
fisubl
mov
enter
inc
xor
jl
pop
and
mov
cmc
ja
push
sarb
lods
add
lods
frstor
loope
int
aam
push
xchg
iret
cmp
lret
pop
cli
arpl
mov
pushf
xchg
sar
add
sarb
stc
mov
jl
add
mov
cmp
sbb
mov
jae
dec
xchg
int
cmp
push
pop
jmp
sub
mov
lahf
stc
pusha
jle
enterw
mov
cmp
hlt
mov
sbb
dec
aaa
or
pinsrw
psrlw
jmp
cs
outsb
cmp
flds
ss
addl
jp
inc
jecxz
and
lods
dec
sub
xchg
xchg
daa
jnp
ret
inc
rcrl
call
xchg
cmp
lcall
ja
and
fs
loope
adc
mov
insl
push
push
lret
hlt
dec
jg
fdivrl
rcr
pop
int
mov
jno
arpl
cmp
mov
cli
leave
shr
push
or
add
stos
cmp
dec
fs
mov
sub
or
or
add
mov
cmc
mov
inc
mov
push
int3
push
sub
es
sbb
xchg
dec
xchg
popf
xlat
in
shr
into
into
imul
adc
lret
pop
sub
imul
mov
sahf
push
ret
ljmp
xchg
xor
adc
pusha
addl
add
mov
add
out
xchg
fwait
rorb
shlb
sbb
mov
dec
pop
jns
cmp
lret
pop
mov
jmp
xchg
insl
jne
push
xchg
pop
outsl
xchg
mov
jbe
js
adc
dec
lds
and
fs
aaa
lahf
insl
add
gs
not
or
in
scas
sub
ljmp
rcrb
xor
jl
lret
out
aas
out
pushf
loop
dec
jo
rcr
sbbb
mull
mov
jecxz
xor
inc
xchg
shl
int
repz
xchg
mull
mov
adc
mov
cmp
nop
adc
ss
movsl
push
daa
cmpsl
std
cmp
arpl
movb
jecxz
add
je
add
mov
ret
fstpl
lods
push
addb
stos
cmp
mov
fstl
dec
orl
addr16
add
sbb
daa
inc
mov
adc
andb
pop
sti
fildll
imul
int
imulb
cld
mov
xchg
pop
stc
sub
call
data16
and
mov
pop
imul
call
out
mov
icebp
add
adc
je
dec
dec
lcall
dec
in
xchg
pusha
xor
inc
idivb
mov
jg
sahf
jns
div
test
mov
xlat
ret
xchg
ss
out
xor
repnz
subl
mov
mov
ljmp
sti
add
xor
std
imul
pmulhw
mov
js
in
adc
inc
sub
out
pop
jl
loopne
lods
jecxz
movsl
add
pop
xchg
and
cld
lea
xchg
imul
fsubr
sbb
in
mov
lcall
cmp
inc
inc
call
or
dec
test
mov
negl
lods
mov
push
test
mov
push
push
out
repnz
pop
test
stos
repnz
sub
gs
lock
out
sub
movsb
data16
sbb
mov
push
ljmp
inc
adc
int
pop
and
or
leave
jnp
and
enter
mov
aam
jae
cli
push
dec
xor
dec
mov
sbb
loope
dec
pop
pop
repnz
test
push
ds
pusha
ficomps
cmp
jnp
jo
testl
and
cs
adc
and
xor
add
icebp
arpl
inc
es
push
mov
sti
and
ja
imulb
aaa
add
lret
jle
je
pop
push
cmp
sbb
mov
jp
and
mov
popf
push
mov
push
inc
xchg
add
cld
push
dec
cmp
mov
leave
movsb
fimuls
push
cld
insb
insb
iret
sbb
ljmp
xchg
mov
xchg
and
inc
mov
sub
fs
shufps
fldl
mov
jl
inc
mov
divb
test
dec
jl
aaa
int
scas
pop
add
movsl
pop
inc
mov
and
dec
inc
push
loop
les
and
lret
sbb
pop
adc
pop
xchg
mov
test
nop
push
sbb
inc
frstor
or
shll
and
dec
cmp
adc
inc
test
nop
sub
ds
inc
mov
int
pop
gs
leave
sti
jb
adc
push
mov
repnz
pusha
ret
out
mov
jl
xchg
mov
stc
dec
dec
arpl
dec
dec
cmpsb
dec
push
adc
sub
push
sbb
mov
sbb
dec
sub
push
scas
in
dec
or
add
je
jno
jl
mov
int
jo
sbb
ss
ljmp
push
inc
pop
push
test
jnp
je
fmull
call
clc
daa
pushf
add
add
xor
inc
add
sub
stos
sub
adc
jp
es
push
cwtl
int3
xlat
cmp
xchg
lret
jns
push
xlat
jns
cmp
andl
dec
cs
in
inc
jo
jle
movsb
lods
hlt
fdiv
sbb
notb
decl
sub
add
sub
sub
test
jle
pusha
jp
loope
dec
clc
cli
jp
je
mov
cmc
sbb
shl
add
scas
or
jo
out
sub
das
nop
das
fcoml
xchg
and
or
cld
enter
daa
inc
jnp
cmpsl
or
xchg
aaa
in
mov
lea
lds
push
push
mov
hlt
add
pusha
das
push
cli
xchg
lret
lock
cli
scas
stos
adc
loop
cmp
bswap
push
and
subb
neg
lahf
or
mov
sbb
pop
jns
mov
xor
add
adc
dec
aas
loope
xor
leave
pop
insb
sub
test
pop
stos
or
jl
mov
out
imul
addr16
and
xor
cmp
ret
pop
jne
popf
sbb
out
int3
push
push
inc
jle
add
das
in
xchg
sub
pushf
arpl
push
sub
sub
daa
mov
add
les
dec
fisttpll
lods
push
jnp
cmp
jecxz
jns
xchg
add
jo
or
in
mov
fistpll
lods
sti
mov
xor
jmp
lock
sub
mov
adcb
cltd
cs
fwait
sbbl
adc
jmp
or
and
add
sub
mov
sahf
sahf
addr16
das
inc
iret
out
mov
mov
pop
sbb
cmpsl
jle
sub
out
xchg
push
jl
mov
call
scas
xor
cwtl
loop
xchg
dec
xchg
xchg
fmull
dec
pop
push
adc
fidivs
add
mov
mov
ret
xor
js
sub
mov
inc
movsl
fisubl
sbb
jmp
mov
loopne
dec
push
mov
sahf
andl
ret
mov
push
arpl
inc
xor
jno
fisttps
lret
pushf
lret
dec
stos
jnp
jp
jl
sbb
sbb
inc
movsl
and
in
in
std
into
sub
pop
ficomps
pavgw
mov
je
cltd
adc
adc
test
jl
mov
dec
out
outsb
or
mov
std
sub
jmp
repnz
fnstsw
imul
int3
xchg
mov
jae
sbb
repz
scas
xorl
dec
push
in
lcall
fsubs
call
frstor
pop
sbb
popa
aam
jo
outsl
daa
sbb
sbb
mov
push
test
mov
cltd
scas
mov
stos
sub
and
ret
push
add
movsl
mov
lods
loop
das
inc
int3
out
or
fwait
ret
sub
mov
mov
dec
sub
pop
rcrl
orb
xor
arpl
xchg
sub
or
scas
cmp
sub
pop
popa
cmpsl
pop
xchg
jmp
out
xchg
xor
pop
andb
push
cs
add
mov
push
jae
loopne
insl
mov
repnz
ds
and
and
and
out
ss
popa
mov
std
dec
inc
test
mov
inc
inc
mov
mov
cmpb
fnstenv
test
inc
in
xchg
jge
sub
nop
enter
adc
out
jl
ss
adc
mov
xchg
sbb
mov
push
sti
or
xchg
jge
or
inc
out
xchg
hlt
jge
pop
sahf
xchg
add
out
sbb
xchg
shrl
lock
mov
add
jo
pusha
add
jno
pop
sti
aam
int3
cmp
and
enter
es
imul
jecxz
std
and
lret
cmp
sub
add
mov
ftst
inc
pop
data16
mov
pop
inc
cmc
shrl
inc
mov
rcrl
movsb
jne
push
pop
jecxz
pop
sbb
fsubl
fwait
movq
lret
mov
dec
cmpsb
pop
cmp
adc
mov
cmp
dec
lret
xor
sbb
adc
jo
nop
xor
fnstcw
xchg
scas
gs
add
aas
lcall
dec
cli
mov
in
imul
into
cltd
xor
cmp
adc
aas
ja
insl
int3
mov
mov
dec
mov
negl
mov
xchg
movaps
hlt
mov
out
jae
movsb
insl
lock
xchg
aaa
inc
cli
xchg
scas
dec
add
cmpsl
aad
sahf
sbb
out
and
dec
jae
test
lock
test
mov
imul
lahf
outsl
add
inc
adc
adc
and
adc
cwtl
cmp
fsubrs
adc
push
xor
cld
pop
pop
sbb
cmp
subl
repz
dec
pop
mov
ds
sbb
les
sahf
xchg
je
arpl
shlb
mov
popfw
jl
push
cmp
arpl
jo
jp
jg
xor
fwait
movsl
dec
mov
mov
out
inc
jno
shr
pusha
mov
and
andb
mov
pop
or
inc
mov
push
orl
sub
cmpsl
jae
xchg
jle
lock
mov
xchg
jp
and
rcrb
dec
stos
add
inc
mov
mov
lahf
mov
lds
dec
sbb
cli
jp
stos
pop
mov
je
or
xor
sub
cmp
xorb
cltd
add
and
aaa
mov
adc
xchg
lahf
mov
pop
test
mov
lea
pop
lock
mov
movsb
ja
cmovae
jo
imul
jg
ret
or
pop
scas
sbb
lea
fdivs
jae
inc
and
sub
rcr
out
fs
jb
scas
ret
add
sub
sahf
push
cmp
shr
and
xchg
clc
shll
daa
das
or
pop
lock
in
in
cmpl
lea
pop
lock
test
mov
pop
es
dec
test
imul
push
repz
jnp
sub
jnp
sub
cmpl
leave
movsb
std
adc
pop
sbbl
xchg
sub
pusha
jmp
bound
aad
loopne
and
pop
outsb
inc
sub
aas
js
dec
clc
dec
add
std
mov
add
xchg
sub
fiaddl
in
cld
cmpb
test
sub
stos
add
pop
and
push
jg
pop
fidivrs
xor
insl
sarl
testb
pop
inc
mulb
jno
xchg
inc
adc
clc
lahf
out
jno
adc
mov
add
test
das
pop
leave
dec
jno
jb
add
cltd
xchg
sub
adc
mov
and
outsb
loopne
mov
inc
rcl
xor
push
pop
push
sbb
sahf
cmp
inc
loop
ja
jo
mov
mov
in
pop
les
sub
push
fimuls
outsl
jne
dec
or
and
jb
and
int3
iret
jmp
pop
roll
insl
inc
fldl
pop
mov
lea
inc
sarl
xor
pop
stos
cmpb
cmp
pop
ret
sbb
ret
push
add
dec
xchg
pop
and
sub
push
sub
aad
es
pop
jmp
mov
ljmp
push
or
das
adc
xchg
sub
aas
sbb
loopne
aas
mov
push
jae
insl
cltd
clc
mov
div
aam
mov
fidivrl
gs
pop
xor
push
mov
push
xor
repnz
inc
ret
lret
mov
fs
sbb
adc
loop
aam
or
fistps
leave
mov
jmp
jl
aad
fwait
xor
sbb
and
xor
ja
fisubs
test
or
scas
inc
icebp
fiadds
flds
test
pusha
mov
inc
stos
push
push
jmp
cli
pusha
dec
cmpsb
mov
cmpsl
fdivr
shl
xor
scas
xor
mov
xor
addr16
cwtl
arpl
clc
arpl
jno
sub
adc
test
cmpb
sbb
sarb
pushf
jle
data16
and
add
popa
sub
repz
sbb
ljmp
xor
das
pop
add
push
mov
inc
sbb
jae
dec
scas
andb
or
push
decb
sbb
or
das
mov
sbb
movsl
and
stos
pop
cmc
xor
push
movsb
xchg
dec
push
je
in
cmpsl
xor
or
add
sub
sbb
push
add
dec
stc
xlat
rclb
xchg
push
mov
out
or
test
sahf
add
cwtl
lds
lea
pop
mov
sahf
bound
loope
jb
shr
clc
test
jo
xor
and
sbb
lea
pop
sbb
push
jmp
lods
jae
out
in
mov
ss
les
mov
inc
cltd
test
repnz
xor
mov
ja
inc
std
adc
push
imul
js
insl
jb
sub
push
stc
int3
not
loopne
dec
jnp
xchg
add
add
in
int
fmul
mov
shrl
inc
jge
and
enter
leave
adc
out
stos
jo
lret
std
lahf
arpl
in
call
pop
cmp
lods
xchg
cwtl
rcr
stos
xchg
lods
mov
arpl
sub
xor
push
in
cli
or
inc
iret
dec
aas
push
mov
and
add
dec
popf
push
cmc
fcomps
cmp
ljmp
xchg
and
dec
sti
aas
add
movsb
bound
add
jmp
push
jge
xchg
dec
dec
mov
inc
push
sbb
sahf
lret
filds
jb
jmp
mov
imul
repnz
js
xchg
stos
push
lret
pop
imul
mov
pushf
mov
fdivrl
int
ror
cwtl
cld
pop
mov
jb
jmp
icebp
pop
mov
sbb
push
arpl
cmpsl
cmpsb
and
push
addl
lods
addl
mov
shrb
pop
jmp
xor
lock
je
enter
jb
add
sub
fwait
addl
fs
and
je
adc
stos
xor
dec
iret
jmp
cs
cmovo
xor
inc
pop
stos
push
push
fcmove
aas
pop
cltd
int3
mov
add
jbe
repz
js
popf
fldz
jl
fdivrp
add
or
lret
xchg
movsl
call
mov
in
adc
and
cld
and
cwtl
outsb
into
loopne
fdivl
mov
xlat
outsb
fldlg2
or
sbb
loop
mov
loope
jl
movsb
push
es
mov
movsl
ret
repz
gs
dec
mov
pop
xchg
dec
daa
or
imul
pop
lahf
inc
ret
mov
xchg
iret
into
ret
xor
icebp
push
enter
adc
sbb
in
scas
fwait
inc
cwtl
and
dec
orl
hlt
fimull
xor
xor
add
or
cmpsl
les
mov
mov
stc
gs
fimuls
sbb
mov
push
and
mov
jmp
lea
lods
jb
mov
enter
jl
inc
rol
push
jg
repz
xchg
imul
jle
movsb
inc
repz
push
cltd
daa
mov
int
repnz
mov
fidivs
test
leave
add
cmpsb
jecxz
fidivrs
pop
sub
movsl
test
cli
mov
jl
pop
mov
icebp
cmp
hlt
dec
mov
push
clc
addr16
out
sbb
jg
mov
sub
andl
fisttpl
mov
sbb
movsb
addr16
push
test
and
rcrl
xchg
js
repnz
inc
cmp
xor
hlt
mov
test
cmpsl
shl
sti
dec
stos
stos
outsb
test
add
cmp
cmp
into
nop
push
xor
inc
xchg
xlat
mov
mov
int3
mov
jno
nop
jae
addr16
xor
fstp
inc
loope
mov
divl
adc
mov
cwtl
imul
mov
outsl
rclb
and
add
sub
jp
mov
in
hlt
jle
negb
in
add
mov
sbb
pop
test
js
dec
mov
fidivl
mov
repz
jp
mov
add
scas
rcr
xorl
in
jbe
pop
pop
cmp
out
sub
mov
sub
sub
mov
shll
jnp
mov
push
add
push
and
sub
ficoml
cmpsl
jnp
and
pop
and
fadds
and
sbb
iret
rorb
cs
add
pop
je
ds
rcll
fildl
pop
dec
xchg
mov
ds
fs
dec
out
shlb
pop
lahf
jo
pop
icebp
clc
dec
jl
shl
pop
sarb
xchg
jge
sbb
or
mov
pop
xlat
mov
clc
out
sub
sub
pushf
lea
add
int3
cmp
mov
cmp
sahf
int3
out
mov
mov
in
or
adc
sbb
rclb
stos
dec
loopne
xor
popf
push
adcb
mov
inc
push
push
mov
popf
out
or
lcall
rcrl
cwtl
xor
mov
test
fnstenv
int
enter
sbb
int
mov
cmp
sub
into
lea
push
cmp
cmp
stos
push
iret
fnstcw
imul
lods
mov
clc
or
xchg
or
cmc
pop
hlt
jle
xchg
and
and
sub
cmpsb
mov
idivb
pop
jo
and
push
imul
sahf
mov
mov
fistps
test
dec
hlt
mov
test
out
hlt
and
addb
sti
xchg
in
subb
inc
repz
push
xchg
pop
pcmpgtw
cli
cmp
insb
adc
xchg
pushf
cli
lahf
push
push
xchg
xor
mov
in
jo
int
popa
mov
test
jg
popf
fistps
loopne
xchg
lods
dec
push
mov
popa
shlb
stos
loopne
xor
mov
loop
push
mov
cwtl
inc
cmp
loope
dec
outsb
sbb
cmpsb
dec
dec
pop
adc
xor
je
push
xor
xchg
leave
fwait
repnz
out
mov
fs
jg
mov
mov
pop
dec
pop
pop
sahf
jecxz
or
outsb
push
dec
jnp
test
and
and
adc
pop
mov
ret
jbe
pushf
dec
inc
cli
iret
or
push
enter
insl
push
movsb
or
push
sti
lods
ljmp
ja
lds
popf
and
test
jnp
xor
sub
ret
shll
jae
ss
stos
and
cmpsl
ja
das
jbe
pop
jbe
repnz
pusha
mov
out
cli
ret
sub
out
insl
add
out
jns
and
nop
scas
xor
cmpsl
pop
sbb
pushf
in
mov
add
pusha
ret
out
jo
imul
pop
pop
je
insl
ljmp
lods
shl
es
icebp
inc
std
and
insl
sub
cmp
cltd
mov
outsb
sub
mov
cwtl
std
mov
imul
push
mov
fsubrl
jl
mov
or
stc
into
mov
jbe
sbb
mov
adc
sbb
sbb
lds
pusha
lret
mov
ljmp
icebp
icebp
or
bound
mov
xchg
mov
imul
mov
ds
decb
jb
add
mov
push
stos
bound
pop
test
push
or
adc
es
jg
sub
sbb
xor
les
mov
repz
cli
and
adc
outsb
sbb
popf
dec
jg
outsl
and
addb
int3
test
enter
mov
jno
sti
mov
test
or
inc
cwtl
mov
adc
stos
jne
inc
push
loopne
push
test
ret
loopne
or
mov
xor
lea
jl
and
icebp
sub
sub
orb
or
sbb
sahf
cmpsl
outsl
and
jns
es
inc
popf
out
std
imul
push
call
sub
adc
lods
int
shrl
ja
fs
push
les
lret
gs
addr16
cld
and
sahf
xchg
in
int3
sbb
or
sbb
dec
lods
mov
pop
int3
icebp
cmpsl
mov
mov
enter
xchg
fcomp
sub
mov
lret
scas
cmp
mov
lods
ja
push
insb
imul
imulb
jb
adc
movsl
ret
test
adc
je
mov
mov
js
mov
xchg
mov
push
mov
mov
adc
pop
jno
xor
xchg
incb
arpl
mov
popf
call
int
and
mov
nop
push
imul
add
dec
iret
jo
cmp
out
je
xchg
cmp
fs
gs
ss
or
mov
sbb
leave
or
jno
xor
jbe
ja
dec
ds
adc
lods
fwait
orl
cwtl
inc
shlb
aad
aad
mov
cmp
cmp
or
lods
imul
pop
mov
sub
xchg
out
mov
out
mov
mov
add
fcomps
mov
lahf
jle
outsb
mov
jne
xchg
scas
inc
call
arpl
xchg
xor
orl
lret
pop
in
and
jecxz
enter
sub
mov
mov
or
sub
dec
push
jge
mov
and
cmpsl
mov
fwait
nop
jmp
mov
clc
popf
mov
lea
movsb
lock
add
int
or
push
jne
addr16
clc
adc
ds
dec
push
test
shrl
mov
mov
dec
cli
mov
add
jp
fisttps
mov
cmp
jle
adc
test
mov
or
push
xor
mov
pop
rcpps
pushf
lret
test
adc
insb
ja
inc
and
test
adc
push
insb
mov
pop
sahf
int3
fimuls
fidivl
out
mov
enter
push
out
popf
cld
mov
pop
loope
xchg
inc
arpl
sti
into
insb
negb
outsl
push
out
std
sbb
les
and
lock
cmc
repnz
xchg
cmp
or
mov
jmp
ret
inc
lods
push
mov
or
ret
fdivl
popa
pop
repz
and
or
outsb
cmp
pop
dec
and
sub
mov
xchg
mov
imul
mov
andb
jl
dec
ds
loop
jns
fimull
mov
lret
roll
xor
add
sbb
sub
outsb
jmp
push
inc
fucomp
fcmovbe
mov
jnp
sti
fsubrl
push
rol
sub
or
cmp
jmp
add
dec
xchg
leave
imul
xor
clc
pusha
daa
push
dec
and
pop
push
or
lds
mov
mov
sbb
pushf
nop
xor
mov
std
jecxz
sub
or
shrl
xor
mov
jo
mov
jl
jae
mov
imul
push
sub
sarb
negl
or
movsb
xor
icebp
add
loopne
imul
mov
imul
mov
les
mov
je
xchg
xor
popa
repz
push
dec
jbe
clc
push
xor
int3
mov
stos
repz
jle
push
pop
sarl
faddp
out
pop
iret
repz
ljmp
sub
ficoms
jp
cld
js
xor
aaa
or
sbb
push
and
mov
dec
in
cmp
cmp
lahf
push
xchg
pop
mov
cwtl
mov
mov
pushf
stc
or
fidivl
fnstcw
dec
inc
cmpb
pop
sub
test
jns
call
mov
mov
jbe
adc
cwtl
mov
lods
inc
mov
add
mov
jmp
into
f2xm1
scas
or
sub
inc
jb
push
test
enter
iret
ja
push
popa
aam
jne
mov
test
xor
clc
pop
test
or
das
adc
adc
lea
mov
xchg
out
aas
push
dec
loopne
mov
ficoms
xor
outsb
fpatan
aam
in
adcb
notb
mov
out
std
mov
mov
and
or
dec
and
out
xor
mov
push
movsb
xchg
push
daa
les
fs
dec
movsb
in
pop
lret
pop
xchg
xchg
cltd
out
enter
dec
xchg
jne
jne
cmc
sbb
jns
int3
sbb
fnstsw
lods
testb
jo
add
lcall
push
mov
xchg
repz
mov
xor
dec
xchg
pop
dec
mov
mov
jecxz
imull
mov
or
inc
cmp
or
aaa
in
imul
subb
pop
lods
lea
je
das
fnstenv
in
decl
dec
xor
call
or
fidivrl
adc
out
sbb
push
cmovp
je
shlb
ret
loop,pt
xchg
or
stc
pop
lcall
pop
xchg
insl
outsl
lahf
sub
adcb
icebp
xor
mov
jl
je
xchg
sti
pushf
and
push
rorb
test
xor
xchg
test
push
stos
jl
mov
pop
lcall
fbld
sub
in
sub
jmp
aas
aam
aas
pop
das
ret
sbb
sub
cli
cwtl
or
xor
sarb
test
into
roll
dec
xor
and
sub
jmp
fistpll
adc
or
call
sbb
fstp
fildll
mov
arpl
icebp
aam
sub
scas
movsl
mov
call
mov
and
pushf
push
in
cmp
lods
mov
mov
sub
cmp
xchg
push
xchg
test
mov
les
jo
iret
xlat
add
sti
pop
mov
sti
pop
divl
pop
aaa
push
xor
ja
imul
lahf
inc
sbb
popa
mov
cmp
mov
jge
inc
ficompl
dec
mov
push
xor
jnp
into
or
addr16
lods
push
das
inc
outsb
addr16
movsl
adc
in
loope
pop
rcrb
push
xor
xor
cmp
adc
jns
jg
sbb
dec
pushf
sbb
cmp
push
out
fdivs
add
xchg
jg
push
outsl
jne
lea
rcl
xlat
gs
adc
jle
dec
test
loopne
xchg
data16
xor
push
push
call
push
test
mov
cld
and
loope
xchg
insb
xor
shll
push
in
lds
popl
cmc
sarl
enter
mov
je
popf
xchg
mov
daa
mov
jle
lahf
loopne
test
es
mov
dec
and
xchg
cmp
in
test
dec
rolb
and
daa
and
inc
lds
sub
and
pop
shll
nop
add
pusha
mov
aas
pop
xorb
mov
xor
cltd
dec
call
in
mov
andb
mov
cmp
pop
lret
popa
inc
jae
xor
pop
pop
dec
and
insl
dec
bound
mov
aad
cs
cmpsl
enter
and
pop
xchg
repnz
jl
mov
test
mov
adc
aas
loopne
sahf
dec
repz
adcb
sub
sarl
iret
test
xlat
lahf
push
pop
dec
mov
rol
lret
jp
add
mov
xchg
jle
loope
lcall
in
stc
test
adc
inc
push
xor
aaa
or
push
push
jns
mov
loop
cmpsb
das
aaa
adc
and
xchg
xchg
inc
inc
jns
cltd
xlat
cmp
mov
add
jno
lret
fisubrl
sub
ret
xor
out
jbe
enterw
sbb
jle
aad
xor
adc
dec
stos
pushl
xchg
out
xchg
pop
add
sbb
mov
test
xchg
pop
clc
in
xor
inc
data16
int
pop
mov
mov
std
add
mov
pop
loop
bound
push
sub
stos
cmp
out
das
in
and
mov
pusha
adcl
jp
mov
test
dec
fcoml
lret
imulb
push
jbe
inc
push
cmpl
out
test
push
call
and
ljmp
sbb
jo
mov
popa
sbb
sub
xchg
mov
bound
cmp
cmp
push
outsl
mov
jg
mov
or
mov
loope
inc
lds
mov
xor
lock
dec
repz
scas
les
adc
imul
xchg
xor
or
jno
add
jge
xchg
jg
pop
outsb
les
mov
sbb
adc
std
cmp
sbb
mov
jmp
mov
fdivs
mov
decl
dec
divl
rcrl
fildll
adc
and
pop
or
fisttpl
or
ficomps
movsl
and
or
jns
andl
lods
lcall
mov
lcall
or
les
inc
push
push
gs
addr16
fs
add
dec
flds
lret
adc
sbb
sub
repnz
mov
outsl
cmp
scas
xor
push
jle
inc
rorl
repz
test
out
add
adc
xchg
stos
mov
data16
mov
cmpsb
cwtl
popf
xchg
sub
adc
je
les
mov
stc
ret
or
negl
outsl
dec
jl
dec
nop
daa
aas
sbbb
frstor
cld
outsb
sbb
pop
jecxz
data16
stos
xor
jbe
jmp
cmp
mov
pop
fldl
dec
dec
jno
push
mov
adc
inc
cld
je
les
inc
xor
sti
pop
pop
push
test
mov
aad
testl
jl
mov
jp
repz
icebp
lds
and
pushf
xlat
add
pusha
pop
mov
fcoms
inc
sub
inc
insl
inc
pop
ror
push
das
fucomip
roll
add
cmp
icebp
xchg
imul
icebp
fs
sub
push
inc
cmp
pop
cwtl
loopne
lea
ficoms
cltd
push
and
mov
jae
mov
dec
lods
add
ss
aad
daa
pop
cmc
test
test
cli
jp
inc
push
ret
xchg
mov
xchg
in
aaa
aas
insb
fnstcw
jmp
sahf
loopne
addr16
adc
jmp
mov
icebp
sbb
jge
xchg
icebp
xlat
xchg
js
or
fucomip
or
imul
push
hlt
aaa
add
cmp
sbbb
fdivrp
inc
pusha
cs
jns
insb
pop
inc
cmpl
insl
shlb
mov
mov
fidivrs
add
cwtl
pop
add
push
mov
test
sahf
cltd
xor
rcll
stc
and
jmp
adc
andl
push
neg
mov
push
jnp
shl
or
mov
inc
pop
xor
es
pushf
mov
insl
push
ja
scas
and
or
inc
roll
pop
add
and
mov
popa
push
test
jge
neg
dec
mov
pop
sub
leave
aad
fmull
lock
mov
imull
movsb
xor
xor
sahf
xlat
scas
lods
je
cmp
fsubrl
pusha
pop
pop
rorl
xchg
push
xchg
mov
out
popf
inc
mov
sbb
ret
or
jge
fisttpll
pusha
mov
mov
mov
je
and
jecxz
xchg
lret
es
inc
and
cmp
push
pushf
pop
xchg
add
lock
out
push
test
ss
sbb
mov
sti
mov
pop
xlat
mov
cmp
mov
or
cmp
pusha
ficompl
jmp
xchg
cwtl
inc
fs
das
mov
movb
xchg
xlat
mov
xor
add
push
mov
loop
jmp
incl
or
pop
push
stos
push
xchg
pop
jmp
push
gs
aam
push
stos
xchg
push
int3
pushf
fildl
mov
jne
in
mov
or
xorb
cmpsb
cmp
push
fisttps
xor
sahf
nop
jne
pop
cmp
orl
smsw
ljmp
notl
fcomp
mov
mov
jp
mov
sub
jle
pusha
clc
dec
or
sahf
nop
sub
cmp
push
pop
subl
xchg
fsubrs
xchg
fldt
and
mov
add
mov
adc
je
jmp
mov
mov
xor
inc
or
mov
sbb
ljmp
hlt
jb
sti
cmp
cltd
stc
cmpsb
shll
mov
xor
iret
daa
addr16
outsb
lahf
popa
push
into
or
xchg
mov
in
mov
cmc
sub
incb
push
or
pushl
mov
mov
icebp
loope
stc
repz
scas
jno
mov
lcall
inc
fsts
lret
aam
xchg
sub
mov
clc
movl
fwait
outsb
push
mov
or
add
mov
sti
popf
sub
push
add
add
inc
inc
inc
pop
push
dec
pop
sahf
and
pop
pop
aad
or
or
adc
mov
cmp
sub
pop
loope
insl
fstl
xor
xchg
ret
xchg
rcr
in
pop
jne
mov
stc
adc
cli
sub
sti
shlb
pop
inc
add
int
int3
xor
iret
push
jmp
push
mov
das
add
sub
add
xlat
adc
enter
dec
xchg
and
pop
test
ret
loope
mov
dec
test
in
idivb
fcoml
push
lret
nop
jb
rcr
lds
cld
cwtl
push
in
in
push
lea
mov
mov
jbe
mov
outsb
xorb
lret
add
cmpl
fldl
sti
or
push
dec
das
in
roll
sti
pushf
xor
xchg
mov
je
cmp
pop
mov
addr16
adc
add
lods
xchg
les
aam
pop
fsubrs
js
mov
xchg
in
iret
inc
inc
sbb
mov
loope
pop
or
mov
and
xchg
in
inc
div
shrb
loope
jne
xlat
add
pop
iret
lods
out
xchg
btr
mov
push
in
fcomp
inc
sub
sub
add
nop
add
cli
rcrb
xor
lahf
out
dec
push
mov
insl
lods
imul
mov
jl
or
cmpl
flds
or
mov
pop
js
lods
fistpll
lret
out
stos
push
sahf
pop
pop
jle
pop
cmp
sbb
jb
fwait
nop
push
xor
mov
leave
lods
fsubrs
mov
inc
and
outsl
mov
orl
in
mov
fcmovne
lods
fs
mov
ljmp
sbb
in
sahf
cmp
arpl
adc
lahf
in
jl
cld
pop
pop
mov
lods
mov
jno
stos
sub
rep
stos
xchg
sti
stc
lods
movl
and
sahf
test
cmp
in
jbe
lret
push
les
jmp
mov
inc
pusha
push
sahf
inc
jnp
mov
jle
mov
cs
fsubl
inc
loop
jecxz
mov
pop
shll
mov
movsl
pop
mov
das
inc
and
push
mov
addr16
mov
mov
shrl
mov
and
and
cmpsl
aaa
cmpb
cmp
cmp
cmp
outsl
test
cmp
pushf
fimuls
mov
hlt
mov
es
cmpsb
or
out
mov
insl
es
aam
mov
outsl
add
sbb
lods
jnp
adc
clc
loopne
pop
cltd
shll
jo
jg
mov
pop
sbb
stc
insb
pop
xchg
sbb
push
ja
lcall
pushf
jg
ror
aaa
lret
aas
mov
loopne
adc
xor
mov
xchg
popf
xchg
add
and
and
xor
in
lods
cltd
in
and
stc
jne
lret
xchg
adc
repnz
lds
mov
divb
and
sbb
push
dec
mov
cmpsl
mov
gs
fldenv
stos
movsb
pop
jns
xchg
mov
nop
lds
and
mov
and
pop
push
in
daa
fldenv
sub
test
mov
xchg
inc
cwtl
outsb
mov
pop
cs
push
jge
shlb
push
push
cmp
and
pop
mov
xor
sahf
cltd
daa
adc
xchg
push
movl
lret
pop
movsb
and
push
cmpl
shll
stos
inc
fcmovnbe
es
sub
push
and
add
sbb
mov
fimuls
lods
das
inc
push
inc
shl
xchg
sub
movsb
mov
hlt
push
or
rdmsr
lods
adc
shlb
popf
pop
and
shrb
xchg
and
out
das
mov
sbb
rolb
movsl
push
sbb
lahf
lods
lods
push
jne
jae
jnp
test
xchg
jns
cmp
lahf
pusha
pusha
in
in
add
iret
aam
cmc
cs
push
jbe
xchg
sbb
cltd
popa
adc
cmc
mov
rclb
shll
loop
repz
out
call
sahf
imul
jns
jne
lock
scas
movsl
jle
jo
dec
cmp
imul
test
pop
cmp
lea
dec
nop
xor
pop
mov
lods
xchg
adc
jp
sub
mov
cwtl
xchg
jg
jp
pop
mov
icebp
mov
lods
sti
adc
inc
popf
arpl
outsb
dec
pop
cmpsb
mov
hlt
sbb
mov
adc
cmpsl
mov
xchg
int
push
lahf
fstps
ds
mov
dec
movl
dec
mov
out
add
jae
pop
loope
shr
sub
scas
test
mov
shlb
stos
mov
push
pop
xor
dec
inc
mov
cmpsb
push
xor
rorl
movsb
int
cmp
xor
jle
pop
or
scas
popl
loope
pusha
adc
lret
pop
mov
call
in
negb
lret
inc
shrb
mov
mov
outsl
pop
sbb
lcall
mov
fs
sub
subl
push
mov
jns
sbb
dec
xor
inc
imul
dec
fwait
cmp
xor
or
std
fildll
and
xor
mov
test
mov
lds
xchg
adc
imulb
popa
and
mov
stc
mov
xchg
imul
inc
mov
inc
data16
mov
jg
cmp
xor
inc
enter
mov
setp
lds
and
into
push
fdivrs
mov
jle
vpunpckhdq
cmp
lret
dec
mov
lods
mov
inc
adc
sti
fadds
or
mov
hlt
cmpsl
jb
fistl
inc
jp
aam
jge
daa
test
and
fisttps
call
sti
mov
and
popl
orl
aam
out
out
push
mov
cli
pop
sub
stos
cs
in
ficomps
xchg
cs
stos
mov
das
sub
jb
mov
dec
inc
pop
lds
dec
pop
hlt
push
sbbl
mov
cmp
rcr
adc
lods
push
mov
movsl
test
popf
rclb
lock
es
mov
dec
cli
mov
test
lret
movsb
push
fwait
cs
into
es
or
pop
movsb
es
pop
scas
mull
push
xchg
out
cmpsl
outsb
fsubrl
xchg
pop
mov
mov
inc
mov
dec
test
push
inc
push
xchg
push
sub
push
int
popl
clc
sub
sbb
xchg
adc
lods
push
inc
xchg
mov
aad
dec
sti
mov
add
or
cwtl
jl
aam
mov
shl
cmc
sub
sar
ss
gs
outsl
js
popa
lock
into
dec
or
in
das
mov
sbb
jnp
aaa
icebp
jno
jne
add
out
and
daa
jnp
enter
dec
push
pop
je
cli
add
pop
mov
iret
jge
jg
mov
pop
in
inc
mov
add
inc
mov
pop
psubb
mov
cmp
stos
pop
push
cmp
jne
pop
leave
dec
cmpsb
push
ja
jb
lret
nop
dec
lock
pop
mov
shll
pop
and
mov
pop
fcoms
push
imul
bound
jno
cmpb
or
fnstsw
js
in
inc
es
or
ja
xlat
js
dec
push
or
outsl
cmp
cwtl
ja
dec
xchg
lret
inc
in
lcall
push
mov
cmp
jle,pt
into
sub
stc
icebp
pushl
xor
sahf
fidivs
addr16
imul
dec
cmp
jbe
jno
mov
out
jmp
push
call
mov
notb
daa
into
xchg
and
pcmpgtb
push
testl
out
outsb
pop
mov
lret
jl
cmpsl
repz
jmp
push
and
insl
jle
or
and
jg
jmp
in
pop
xorl
and
pop
cmpsl
outsl
mov
jne
imul
push
sbb
inc
push
add
and
test
push
sbb
jp
icebp
loop
xor
ret
xor
sbb
outsl
dec
cmp
es
fisubrl
and
mov
loop
fsubrl
cli
sub
nopl
cmp
mov
dec
or
sti
and
cmp
addb
add
mov
out
pop
dec
mov
stos
xor
shr
mov
jno
xor
lret
aaa
sub
lds
cmp
cld
testb
mov
jns
aad
pop
add
test
mov
movsl
jp
pop
inc
test
sbb
loop
add
bound
or
pop
sub
fsubl
mov
cli
loop
fdivs
loop
mov
sub
adc
aam
or
mov
jno
adc
xchg
fiaddl
push
ficoml
sbb
mov
lret
je
jl
aas
xchg
enter
mov
pop
orl
cmp
sbb
fcoms
mov
pop
scas
ret
nop
sub
popl
adc
pushf
and
jbe
testb
dec
jb
cvttps2pi
mov
addl
xor
jle
lcall
cmp
pop
mov
mov
popw
and
xchg
jmp
mov
push
test
cmp
mov
stos
inc
sahf
repnz
sbb
or
mov
xor
popf
xchg
ljmp
add
jp
mov
dec
xor
push
adc
push
lcall
pop
scas
pop
pop
js
dec
sbb
fbstp
jo
pop
lock
sub
gs
push
adc
pop
int
xor
jle
call
das
mov
cli
mov
loop
daa
enter
sbb
sbb
out
xor
sbb
int
inc
shll
pop
outsl
fcomp
mov
hlt
adc
imul
pop
and
stos
jns
pusha
xor
lock
lcall
loopne
scas
movsb
jmp
es
ret
adc
jns
hlt
shlb
push
and
mov
lret
das
lods
lret
sbbl
jle
add
fistpll
incb
aas
sub
push
jg
lea
stc
or
dec
lods
mov
sbbl
lret
inc
dec
sbb
fldcw
mov
movsl
and
or
jmp
into
repnz
adc
aam
mov
nop
inc
out
ja
inc
test
xor
cmp
addr16
xlat
sbb
dec
lods
adc
dec
out
pop
dec
jle
aam
xchg
fildll
mul
lock
sub
jg
iret
cmc
dec
pop
stos
fsts
and
out
ja
fbld
stos
js
lret
mov
inc
mov
mov
je
aas
pop
insb
jo
cmpsb
adc
std
arpl
mov
aam
movsl
fucomp
leave
rolb
mov
cmp
push
outsb
arpl
repnz
dec
inc
test
push
mov
ret
push
pusha
add
push
gs
fimull
cwtl
test
lods
out
cltd
rcl
jb
sbb
xchg
mov
mov
dec
lahf
movsb
bound
pop
iret
sbb
out
lods
fbld
stos
adc
jmp
dec
icebp
sub
inc
cld
jb
jbe
lcall
out
scas
push
inc
xor
mov
jecxz
in
int
arpl
lahf
mov
cld
jl
xlat
fidivrs
lods
loope
daa
fsts
xor
pop
and
mov
mov
fldl
inc
xor
imul
xchg
pop
xlat
xchg
das
ss
daa
dec
jb
jge
lock
popf
sub
mov
sub
inc
nop
and
push
out
push
dec
popa
mov
loopne
imul
sbb
adcl
faddl
sub
xchg
or
andb
outsl
sub
xchg
ret
movsl
sub
add
push
std
sahf
test
jb
sahf
enter
jmp
inc
pusha
movsb
adc
std
daa
add
in
pop
mov
gs
clc
enter
sub
ds
push
jbe
or
js
push
xchg
sbb
push
aaa
pop
subb
inc
sbb
aad
adc
cmp
sbb
xchg
mov
pop
cli
xchg
decl
mov
es
test
and
es
in
and
js
roll
das
sub
psubb
fisttpll
pop
jmp
and
out
out
popf
into
or
mov
dec
xchg
mov
pop
stos
add
js
mov
or
in
popf
xchg
clc
test
insb
in
adc
aaa
adc
xchg
sahf
or
xchg
cmc
sub
push
icebp
mov
add
mov
cs
insb
out
cmc
xor
dec
push
jge
out
lret
pop
cmp
dec
sbb
lahf
cmp
das
cmp
dec
js
aam
aaa
adc
sbb
mov
nop
pop
shl
xor
aam
mov
pusha
sub
and
pop
lds
add
fwait
cmpsl
outsb
gs
sub
mov
pop
jl
ss
ss
ss
xor
mov
or
pushf
adc
sti
jge
xchg
out
xchg
pop
mov
add
fcoms
test
or
fidivs
sbbb
dec
jne
adc
mov
cmp
cmp
lods
imul
mov
jbe
cs
lcall
ret
xchg
repz
adc
pop
and
cli
outsl
push
test
mov
lock
xchg
inc
dec
std
clc
aas
out
dec
sti
sar
fs
pushl
int3
cmp
lahf
or
and
pop
popa
mov
fdivrs
pop
and
or
adcl
lret
es
jp
mov
cmpb
movsl
mov
in
add
ja
xor
or
adc
shrl
sub
and
push
sub
aam
push
iret
leave
inc
cwtl
popf
pusha
mov
adcl
sbb
dec
inc
into
in
adc
shl
adc
push
or
or
push
movsl
adc
dec
lea
addb
mov
movsl
fisttps
mov
out
pop
fiaddl
mov
into
test
aas
mov
movd
lcall
xchg
or
sub
add
leave
lea
fucom
jbe
insb
push
lea
jne
jmp
xor
lock
xchg
test
mov
out
stc
cltd
push
shr
int3
xor
adc
shrb
out
mov
shl
arpl
aas
xchg
popf
sbb
push
loop
insl
mov
mov
into
sahf
sub
sti
inc
scas
sarb
into
inc
jne
cmp
cmpsb
iret
mov
or
mov
pop
fdivrp
xchg
icebp
and
mov
jp
std
jg
les
rorb
dec
cvtps2pd
in
movsb
pop
loope
push
jge
mov
enter
scas
mov
ffree
mov
or
sahf
fmulp
xlat
add
outsl
push
pop
sub
stc
cs
or
push
cmp
ret
inc
xor
sahf
adc
jno
xchg
pop
push
cmpsb
and
jo
push
out
dec
push
xchg
fwait
je
jne
add
out
outsb
add
adc
xchg
sbb
add
arpl
iret
cmp
mov
fnstsw
sub
jo
adc
scas
and
xchg
pop
mov
jns
cmp
xchg
stos
pop
and
rcll
and
in
popa
jnp
out
xchg
fwait
pop
aad
adc
pushf
imul
out
xchg
nop
push
cmp
dec
inc
mov
sti
jae
sti
aaa
test
test
pop
jb
jae
jg
jo
rcr
lahf
movsb
iret
and
cmp
adc
orb
sahf
pop
cmp
xorb
cmpsl
fsubrs
sub
nop
arpl
out
inc
xor
rclb
sbb
adc
inc
call
mov
sbb
push
stos
stos
mov
adc
mov
push
in
push
jg
xchg
js
and
mov
or
fwait
and
popf
xor
jno
adc
adc
sbb
dec
mov
int
mov
jb
and
call
mov
cmp
xchg
insb
out
xchg
je
outsb
add
nop
bound
fstpl
decl
ds
imul
icebp
ret
movsl
clc
cmpsl
mov
mov
aaa
idivl
pop
and
adc
and
and
imul
int
inc
loopne
repz
icebp
pop
daa
mov
xchg
adc
das
nop
push
dec
jle
add
sub
mov
jmp
inc
inc
jge
inc
outsl
shll
insb
jns
mov
or
fidivl
cltd
mov
cmpsb
das
and
xchg
std
aad
sarl
cmp
mov
cld
loop
mov
mov
sub
stos
cmp
cwtl
in
mov
popf
cmp
jo
add
mov
mov
sbbl
movsb
subl
leave
lds
pop
xor
cld
subb
sub
stc
pop
jg
les
pop
xor
scas
addl
jl
movsl
clc
mov
xor
lret
lret
bnd
add
adc
fidivrl
lahf
outsl
mov
pop
pop
push
daa
adc
dec
pushl
cmp
push
fwait
sbb
jg
xor
ds
enter
pushf
cmp
push
sbb
pop
addb
js
push
and
cmp
stos
push
cmp
ret
cmp
lcall
add
dec
lahf
sub
shl
les
xor
mov
jae
out
mov
das
call
xchg
call
xchg
xchg
cmp
fstp
cli
pop
push
sti
or
jmp
dec
imul
std
jge
hlt
cmp
mov
jecxz
sti
scas
inc
inc
push
pop
cmpsb
cmp
lds
lods
dec
sbb
mov
dec
andb
loopne
mov
sbb
sar
mov
xor
clc
cmp
sbb
out
inc
adc
ret
inc
xchg
adc
das
icebp
cmp
and
loope
in
repz
mov
jle
push
fnstenv
xchg
xchg
or
lcall
inc
dec
sbb
lcall
pusha
lods
pop
add
jno
push
and
sarb
pop
aas
aaa
xor
adc
lock
push
outsb
jge
out
test
push
or
dec
dec
test
cltd
xlat
test
xchg
dec
pop
es
mov
adc
loope
repnz
outsl
lahf
xor
jne
dec
ljmp
sbb
mov
xchg
jb
loopw
aas
cwtl
push
mov
push
pop
imul
jne
xor
lods
mov
test
lret
enter
pop
rclb
ja
cld
mov
mov
lods
and
shl
and
out
in
arpl
push
adc
adc
movsb
lods
nop
ja
sbb
mov
push
dec
or
push
insl
repz
ret
scas
cmp
inc
xchg
inc
mov
aaa
cmp
rorb
sub
cmp
push
sbbb
jb
adcl
pop
in
push
sub
scas
and
pop
xchg
ss
mov
xchg
or
aam
mov
add
mov
aam
xchg
fs
sbb
popf
sub
or
push
orb
clc
in
std
push
xchg
inc
fninit
jb
adc
adc
and
mov
pop
or
mov
lret
mov
stos
into
jb
aas
pop
out
ljmp
or
dec
stc
sbb
int3
add
aaa
cld
outsl
aad
int3
sub
cli
mov
lret
adc
int3
adc
sbbb
imull
fnstenv
imul
and
movsb
ss
je
jp
insb
xchg
xor
bnd
mov
cmp
dec
jns
lret
addl
repz
outsl
or
push
fisttpl
xor
cwtl
or
int
mov
adc
xor
fnstsw
mov
clc
mov
je
dec
inc
clc
lea
dec
movsb
mov
pop
cltd
jp
ja
orps
jmp
lods
fdivrs
scas
cmp
mov
hlt
fldl
and
mov
out
jb
cmpsb
shlb
mov
and
sub
popa
mov
inc
sbb
fistps
lcall
xchg
fadds
and
jmp
fdivrs
mov
enter
dec
shlb
adc
sti
stos
jle
jmp
xor
ljmp
adc
cli
xchg
movsb
add
and
mov
out
adc
aam
lret
mov
in
loopne
mov
mov
pop
leave
es
xchg
mov
sbb
jmp
cmpb
cmp
mov
je
jno
ja
scas
pop
clc
inc
inc
sbb
xor
inc
js
gs
xor
adc
clc
out
pop
imul
out
sbb
ljmp
movsl
pop
popa
mov
xor
xchg
mov
xchg
push
rcrb
hlt
jg
cmp
adc
sub
jae
jl
cmp
sub
ss
sahf
cmp
fiadds
mov
out
push
jnp
movsb
add
and
xchg
in
lcall
or
adc
xor
xor
mov
inc
add
leave
or
fisubrs
xchg
inc
xchg
loop
sbb
sub
lret
cmp
xor
push
pop
push
loope
addl
push
sbb
and
jmp
arpl
inc
mov
loop
inc
and
xchg
fidivrl
daa
add
jl
mov
cwtl
xor
loope
mov
fmull
dec
iret
cltd
repz
dec
fimull
sti
scas
jmp
xor
inc
or
adc
and
arpl
ss
jnp
je
sub
ja
out
out
or
idivb
test
sub
xchg
clc
jg
ljmp
xor
jp
adc
call
sub
add
cmp
add
ficompl
ss
xchg
popa
call
dec
mov
outsl
scas
xchg
mov
xchg
adc
pushf
roll
je
sub
xchg
mov
mov
cmp
jae
repnz
mov
insb
jecxz
adc
fcomi
jnp
std
test
mov
imul
popf
mull
jne
mov
push
lcall
and
loopne
call
jb
movsl
insl
out
and
and
bound
adc
sti
sarl
cmpsl
lahf
or
fstpt
mov
mov
scas
popa
jbe
mov
push
mov
daa
xlat
pop
mov
lret
and
mov
pop
ftst
lcall
push
cmp
dec
imulb
jge
cmp
icebp
push
sub
loop
cld
pop
pop
int
and
and
mov
pcmpgtd
lock
pop
cli
and
lret
push
fwait
mov
lock
dec
sbb
xor
cld
push
jno
fmul
icebp
sbb
iret
sub
push
sbb
aad
mov
xor
add
pop
ja
mov
mov
bswap
pushl
mov
cmpsb
jo
xor
loop
sub
dec
mov
repnz
and
sbb
xchg
or
lret
call
stos
pop
cmc
insl
test
addl
xchg
inc
ss
xor
ret
push
pop
xlat
or
xchg
lock
adc
jmp
push
insl
push
fsubs
dec
in
stos
aaa
and
mov
and
mov
loopne
mov
cmp
neg
dec
or
jne
mov
pushf
sahf
lock
mov
cmpsl
sbb
imulb
cmpsb
insb
push
mov
fmul
jae
div
dec
or
push
inc
ret
test
decl
inc
jo
int
jb
fidivrs
lret
stc
pop
out
dec
xlat
adc
push
shr
jbe
jnp
test
fnsave
add
inc
or
aaa
and
outsb
sti
sbb
xor
mov
fstl
stos
lds
jg
popa
inc
nop
mov
xchg
mov
leave
cmpsl
cli
shll
pusha
out
and
arpl
mov
fcomip
pop
sbb
ret
mov
pop
movsb
in
or
adc
out
push
mov
mov
aaa
or
mov
outsb
inc
and
insl
xchg
mov
or
mov
xor
push
popf
adcl
shrl
cmc
ljmp
jbe
add
inc
int3
sbb
sub
insl
push
sbb
notl
call
js
gs
test
loope
nop
inc
sub
negb
daa
stos
jecxz
int
rclb
pop
mov
push
mov
rorb
fsub
xor
scas
xchg
adc
fwait
xchg
je
vsqrtps
or
dec
pop
cmpsb
inc
cs
or
or
sbb
aas
lret
adc
lock
test
mov
mov
mov
insl
mov
adc
pop
adc
pop
sbb
pusha
sub
xchg
ret
jne
gs
pop
lret
xchg
lahf
imul
addb
test
xchg
ljmpw
jb
dec
jbe
lods
adc
out
gs
xor
xor
mov
and
adc
add
adc
outsl
sbb
fwait
sbb
out
cmp
add
outsl
loopne
jo
es
sbb
adc
lret
jnp
fs
movsl
hlt
xchg
adc
sub
or
adc
jge
and
test
jp
mov
popa
xorb
mov
push
mov
outsb
adc
push
inc
sbb
pusha
sbb
jmp
cwtl
loopne
xchg
clc
adc
cmp
lahf
sub
sbb
aam
jg
lret
icebp
lcall
sub
inc
cmp
dec
sub
dec
dec
or
mov
lds
or
pop
inc
or
jne
rclb
cs
jns
xchg
jns
cmp
xchg
xchg
repz
sbb
aas
stos
push
xor
fstl
int3
mov
clc
jnp
xchg
sbb
sar
ss
shrl
xchg
rorb
cmp
andb
push
push
inc
fldenv
mov
mov
xchg
jb
sbb
inc
mov
jno
or
cmp
adc
popa
lret
in
inc
push
fistl
faddl
es
aad
mov
out
pop
inc
and
or
cmp
jl
push
or
add
aam
out
loop
xchg
lret
mov
adc
jl
sarl
lahf
xchg
fldenv
notb
call
aas
addr16
out
xor
faddl
sbb
jae
pop
sbb
jbe
into
push
sbb
shrb
or
push
cmpsb
add
mov
and
out
add
mov
jg
enter
add
addr16
xlat
loop
lods
add
cmp
inc
dec
cmp
push
add
mov
shr
je
xchg
je
jp
fsubl
dec
mov
rcrl
cwtl
xor
into
in
jl
arpl
inc
push
aam
jnp
dec
push
lahf
cmp
push
cs
adc
jle
jne
pop
lret
fbld
pop
je
mov
fcom
stos
test
jno
je
in
movsb
jmp
int3
sahf
mov
xchg
add
jae
pop
repz
pop
mov
mov
jns
fadd
aas
xor
enter
out
lock
aas
xchg
jmp
sub
adc
movsb
icebp
jg
leave
sahf
pop
in
xor
bts
sbb
pop
xor
push
adc
add
xchg
or
inc
and
xchg
repnz
sbb
and
or
pop
enter
lods
enter
xor
lock
push
movaps
sub
jmp
inc
cmp
out
insl
xchg
lret
jno
pushf
or
mov
push
in
ja
sbb
cmp
pushf
fldcw
outsb
outsb
mov
fidivrs
in
pushl
mov
loope
pushf
inc
stc
add
or
imul
sar
pop
js
jbe
xchg
clc
ss
addr16
daa
jecxz
pop
push
jecxz
jbe,pn
mov
out
pminub
out
pop
inc
jo
or
xchg
rcll
lock
es
inc
popl
cmpsb
cmp
das
sub
jb
add
cmp
ret
sbb
pop
mov
lcall
sarl
in
dec
bound
add
sahf
sub
lds
pop
xchg
insb
or
and
sub
mov
nop
test
je
shll
dec
lds
mov
mov
cmpsb
xchg
sub
xchg
mov
pop
inc
push
sarl
idivl
aaa
mov
fs
mov
cs
jne
or
cmc
repz
out
cld
movups
sbb
insb
xchg
pop
or
mov
cmpsb
imul
jl
lods
ljmp
jg
test
xchg
dec
pop
into
inc
scas
xadd
les
or
adc
lcall
dec
push
sub
pop
mov
jns
shll
push
mov
cmc
jl
inc
fnstcw
nop
test
inc
push
mov
mov
iret
push
pop
outsl
pop
mov
xor
cmpsl
sahf
cmp
push
mov
mov
loop
push
scas
add
pop
outsb
jge
and
stos
outsl
push
out
mov
push
dec
xlat
cli
mov
mov
cltd
and
cwtl
movl
pop
ds
or
cmpsb
stos
sub
or
loop
jns
mov
stos
cmp
jbe
mov
repz
jo
and
imul
test
xchg
xchg
stos
jle
xor
cltd
cmc
sub
jbe
xchg
aaa
mov
loope
test
mov
cmp
scas
popf
mov
xchg
fidivrs
add
inc
out
inc
and
arpl
hlt
int3
movsb
pusha
js
shl
pop
das
les
or
sarb
andl
mov
jecxz
enter
jmp
or
into
inc
insl
movsl
jns
xor
rcrl
pop
not
mov
arpl
dec
pushf
sbb
push
jbe
push
jno
inc
sarl
mov
std
or
adc
jl
fisubs
mov
dec
push
repnz
lea
dec
and
add
lret
mull
push
mov
pusha
dec
mov
daa
testl
inc
mov
mov
and
insb
js
scas
sarb
and
orl
cmp
andb
fwait
cltd
sub
sti
add
dec
loopne
dec
loopne
dec
or
inc
pop
mov
mov
loop
jmp
je
movb
ret
cmp
pop
pop
sub
adc
jno
push
mov
aam
and
inc
fiaddl
hlt
sub
out
pop
scas
subb
int
xor
loop
popf
sbb
js
filds
jno
hlt
imul
dec
shll
push
gs
cmpsl
lret
cmp
hlt
in
or
push
adc
jns
mov
das
stos
adcb
inc
neg
out
xchg
sub
test
jns
push
sahf
xor
std
ficoms
insb
cmpsl
push
in
int3
push
scas
popf
cld
jne
hlt
dec
les
pop
cltd
mov
mov
sub
lret
loop
fistpl
test
sbb
jp
pushw
inc
imul
push
arpl
push
jns
jmp
xchg
aad
jg
mov
inc
add
xchg
pop
push
das
pop
cmpl
mov
fsub
fists
decb
ljmp
xor
pusha
notl
paddq
inc
das
adc
lret
pop
out
sar
dec
pop
imul
xor
xor
mov
add
mov
ret
or
push
sbb
jle
es
and
or
pop
mov
sbb
outsb
adc
inc
add
cld
out
mov
ljmp
dec
cwtl
xchg
sbb
sub
fst
xchg
inc
pop
es
xor
mov
inc
sub
mov
push
mov
call
mov
out
aas
xor
jo
jns
rcl
mov
cmpsl
dec
loope
fistl
es
xor
pop
test
inc
adc
lods
popa
cmp
inc
clc
sbb
xchg
and
popf
outsb
sbb
sbb
push
mov
mov
jp
dec
pop
loopne
shrb
jns
cwtl
xchg
fldenv
mov
negb
cli
fisttpll
scas
cltd
fdivl
mov
sbb
or
movsl
cmpsl
cmpsb
das
subb
cmp
enter
mov
dec
cmpsb
inc
incb
jnp
sub
pop
shl
xchg
std
into
adc
sbb
pop
push
push
mov
pop
std
ds
and
mov
ljmp
and
and
test
imul
test
push
fimuls
pop
cmc
scas
bound
mov
out
mov
addr16
loop
int3
cmp
mov
lods
pmullw
in
arpl
rolb
mov
ret
hlt
mov
shll
jbe
loopne
mov
add
out
popa
sub
pop
adc
push
andb
xchg
push
mov
mov
cmp
jle
scas
enter
lods
aad
xor
out
jmp
jle
mov
imul
scas
inc
enter
sub
enter
stc
gs
mov
stos
rorb
rolb
lcall
lret
pop
mov
pop
cmp
push
jo
mov
adc
ficomps
aam
mov
pop
data16
scas
jae
or
mov
sub
or
nop
xlat
push
dec
mov
incl
gs
rorl
js
push
xchg
xchg
sahf
cmp
dec
stos
pop
sti
dec
sbb
aaa
outsl
subb
xchg
sub
xchg
mov
lods
pop
je
fnstcw
inc
dec
jnp
clc
imul
fldl
mov
test
rorl
jno
jg
xor
push
pop
mov
in
nop
fldenv
sub
inc
jae
mov
mov
out
mov
pop
push
movsb
stc
jbe
sbbb
xchg
jge
adc
push
pop
sahf
loopne
or
dec
iret
enter
nop
das
mov
js
lock
push
bound
dec
les
loopne
in
jecxz
sbb
outsb
pop
add
fstpl
cmp
std
lods
in
clc
mov
pop
adc
xchg
inc
sbb
les
sub
in
in
cmpsl
idivl
insb
mov
add
cmc
imul
cmp
add
cmp
mov
lret
push
scas
jl
int
out
mov
add
daa
mov
adc
movsb
pop
sub
cmp
into
daa
cmpl
xor
inc
add
mov
sbb
call
jb
ret
notb
lcall
repz
adc
cld
rcr
cmp
pop
jnp
or
jbe
or
jo
sub
sbb
cmp
add
jae
int
xor
les
insb
cmp
arpl
mov
jo
mov
adc
sbb
nop
insb
cmp
add
iret
in
and
pop
dec
adc
rclb
out
jne
das
je
sti
push
or
cmp
addr16
adc
cmp
lods
aaa
imul
adc
outsl
imul
or
outsb
push
std
pop
mov
xchg
jmp
pop
mov
pop
cmpsb
xchg
mov
mov
fisubs
push
repz
jl
dec
inc
fisubl
push
rorl
call
pop
sti
mov
mov
fstps
mov
mov
leave
mov
dec
in
add
cmp
dec
icebp
out
not
nop
pop
js
jb
jb
cmp
push
xchg
js
add
or
lret
and
and
jecxz
pop
xchg
mov
mov
inc
shlb
shll
cmp
mov
mov
mov
cli
fldcw
sbb
mov
push
or
aas
sub
add
repz
inc
aad
fsubr
sbb
push
dec
cmp
outsl
xor
sub
pushf
fsubrl
test
scas
outsb
ljmp
mov
js
gs
loopne
mov
inc
bnd
pop
js
jno
into
test
adc
mov
sub
nop
lods
dec
movsl
stc
pop
jae
fs
inc
ret
test
mov
adcb
sbb
add
cmp
out
push
mov
pop
cs
dec
imul
push
mov
into
sbb
daa
test
cmpsl
ret
sbb
xlat
inc
aaa
mov
fwait
data16
out
loope
rcrl
push
xor
mov
mov
and
ljmp
out
push
xor
insl
and
and
mov
sbbl
mov
fidivrl
cld
pop
movsb
addr16
lea
rdpmc
nop
push
mov
lods
insl
or
xor
mov
cld
sub
add
push
sub
sub
es
test
sbb
out
cmp
push
cmpsl
mov
xorb
lea
pop
in
pop
aas
add
dec
outsb
cmp
call
mov
adc
mov
inc
in
dec
mov
pop
sbbb
ret
jl
loope
pop
int
xor
sub
add
stos
mov
push
inc
pop
in
adc
fistl
or
vandps
inc
adc
cmp
pop
dec
xchg
xchg
jmp
sub
add
enter
daa
call
xchg
mov
pop
mov
popf
sub
mov
push
xchg
in
filds
bound
push
mov
xchg
sahf
sbb
mov
xchg
in
xchg
aad
dec
icebp
mov
rorl
or
scas
js
test
inc
mov
repnz
jmp
mov
fldl2t
into
pop
repnz
pop
sbb
add
jnp
mov
push
gs
xchg
shll
sub
lcall
xlat
movl
mov
je
loope
pop
cmp
sbb
xor
jecxz
dec
imul
inc
push
das
jae
xchg
xchg
push
repz
sub
aad
cmp
jl
push
xor
imul
mov
sbb
inc
addl
pop
shrl
sbb
add
scas
dec
xor
push
aad
jae
mov
inc
mov
xchg
and
mov
sub
mov
and
inc
fmuls
and
test
mov
sub
mov
adc
push
pushf
aas
push
push
xchg
jns
ret
adc
inc
mov
xchg
and
inc
cld
dec
cmpsl
xchg
cmp
xor
xor
add
push
stos
inc
dec
lret
shll
pushf
arpl
sub
add
dec
and
dec
outsb
fptan
sub
sbb
out
ljmp
cmp
xchg
inc
cmc
outsl
fcom
scas
lds
jle
inc
mov
jl
or
daa
mov
les
xor
mov
gs
call
inc
stos
test
lret
int
jle
out
adc
mov
cmp
aad
jae
add
shlb
and
jge
and
movsl
mov
mov
into
mov
xor
fdivrl
and
shll
subb
jae
jmp
sbb
pop
ljmp
jno
or
punpckhwd
dec
pop
out
jmp
jg
mov
fldt
adc
push
lea
xor
push
mov
loope
bound
and
push
das
mov
test
dec
out
adc
inc
sti
int
mov
sbb
lret
icebp
mov
mov
jns
std
fiadds
cltd
adc
addl
push
gs
push
inc
mov
repz
push
adc
mov
sahf
xor
out
pop
lods
xor
out
shl
dec
fnstsw
xor
add
sarl
sub
lock
adc
mov
stc
gs
loopne
iret
mov
pop
fmul
cmp
shrb
testb
daa
addr16
out
cmp
mov
push
jl
es
inc
lods
sub
xlat
ret
repnz
pop
fmul
xchg
jle
pslld
popa
adc
jne
mov
pop
jmp
jmp
mov
movsb
adc
mov
int
sub
mov
sbb
xor
jno
dec
sbb
push
aas
lahf
popf
mov
adc
xor
jp
cmpsl
jg
mov
stos
xor
push
cmp
in
xlat
sub
or
and
sub
xchg
xlat
jbe
jnp
movsb
dec
jl
out
test
pop
mov
pop
dec
xchg
xchg
fwait
pusha
sbb
lds
xor
nop
jmp
imul
or
cltd
cmp
fsubrs
xchg
sub
outsb
xor
das
scas
xchg
imul
xchg
cld
push
fidivs
pushl
jmp
pop
jb
mov
in
inc
mov
mov
sub
jg
jo
mov
ds
jb
outsb
repz
push
inc
ljmp
push
mov
out
xor
popf
pop
rcll
dec
xchg
mov
push
mov
dec
add
jne
leave
and
dec
out
mov
ficoml
xchg
mov
mov
jno
je
add
jl
dec
fiadds
lahf
and
sbb
xor
aaa
stos
cmp
sbb
ret
dec
insl
cltd
mov
vaddsubps
ds
loopne
sbb
mov
push
mov
insl
lahf
pop
iret
stos
out
repnz
out
or
ret
mov
imul
xor
bound
dec
scas
out
push
mov
lcall
and
js
push
lock
adc
xchg
stc
cwtl
mov
aad
idivl
mov
push
push
dec
inc
fimull
sub
loope
or
xlat
cmpsl
ljmp
test
and
cli
lea
stc
lahf
push
popa
inc
scas
inc
add
bound
jmp
sbb
mov
pop
mov
push
push
loop
and
push
cmp
stos
dec
and
mov
mov
add
adc
sub
pop
jle
mov
ljmp
jle
out
hlt
cmp
lea
mov
arpl
sub
repz
xchg
popf
pusha
xor
dec
xchg
jmp
lret
pop
cmpsb
sti
sub
repz
sub
dec
xchg
js
faddl
movsb
push
jmp
icebp
sub
ret
pop
lods
sahf
xor
mov
testb
scas
jns
mov
cmp
dec
mov
adc
mov
or
xchg
stos
pop
add
add
push
push
dec
cmp
ret
jg
outsb
pop
test
sahf
fcmovbe
adc
lods
in
push
aad
int3
and
jnp
dec
leave
out
jg
cmpsl
xor
aaa
jge
ljmp
pop
mov
push
cmp
out
fdivl
jmp
adc
mov
xchg
pop
insb
push
cmp
or
inc
sbb
mov
lret
adc
daa
shll
pop
xchg
lods
push
adc
shrb
dec
lahf
xchg
jnp
lret
movb
or
sbb
sbbl
pop
movsb
ffreep
push
add
ss
jecxz
in
jns
pmuludq
addr16
aam
push
lcall
call
cmp
dec
dec
shlb
jno
jae
repnz
mov
int3
sbb
pop
popf
lret
cmp
sbb
outsb
cs
or
add
pop
mov
stc
shlb
fs
pop
pop
pop
xor
cld
mov
aad
jl
inc
jmp
sub
in
cwtl
sbb
sbb
fcmovb
mov
test
sbb
into
xor
or
movsb
mov
icebp
and
push
mov
dec
leave
adc
inc
and
lea
sahf
mov
fwait
xchg
jne
js
pop
adc
stos
stos
sbb
test
inc
aaa
push
aaa
adc
mov
and
mov
testl
xchg
mov
cmc
inc
mov
inc
jp
lods
or
pop
push
pop
push
mov
loopne
mov
cmpsb
outsl
popa
out
test
xchg
testl
cmp
pusha
push
insl
xchg
fcoml
add
enter
test
out
icebp
clc
jle
in
fistpll
pop
push
stos
test
movsb
clc
cmc
adc
push
dec
hlt
ret
pusha
xchg
inc
sub
mov
fwait
pop
pop
adc
inc
cmp
fsubrl
jmp
inc
mov
fwait
mov
sub
fs
mov
sbb
xchg
movsb
test
xchg
fists
ret
negb
psubsw
inc
sbb
pop
stos
dec
pop
xlat
leave
xor
xchg
out
arpl
clc
rorb
push
es
inc
dec
mov
xchg
in
push
out
rcrb
das
mov
xchg
in
jo
jnp
inc
lods
pop
ret
push
add
push
add
aam
je
xchg
jp
scas
loope
daa
xor
sti
push
inc
imul
pop
xor
jae
nop
adc
enter
push
xchg
push
pop
ja
in
mov
loopne
cwtl
pop
mov
and
mov
sbb
jns
add
mov
add
inc
mov
push
hlt
lds
and
fadd
xor
mov
sbb
fmull
sub
inc
call
cwtl
filds
js
sar
cmpb
add
call
pop
sahf
pushf
dec
out
inc
add
xchg
dec
in
lods
dec
dec
in
or
gs
orl
in
dec
decl
ret
jge
mov
dec
loopne
cs
xlat
mov
fildll
xchg
shl
mov
ret
es
xchg
sbb
pop
cmpsb
xchg
test
mov
pushl
and
mov
imul
adc
xchg
xchg
clc
dec
sbb
pop
mov
daa
mov
addl
call
pop
subl
data16
adc
cmp
push
xchg
lcall
sub
enter
movsl
movsl
mov
inc
mov
push
loop
adcl
loopew
faddp
mov
nop
mov
inc
xor
insl
or
fnstcw
jp
lods
mov
in
sub
bnd
mov
in
int3
sbb
pop
jnp
pop
sarb
mulb
pushf
into
in
sbb
jg
lods
mov
pop
add
dec
mov
add
jg
lret
sbb
test
and
push
aam
mov
jmp
add
adc
push
les
call
push
call
push
cmc
in
pushf
sti
cmp
push
add
xchg
stos
cmpsl
cmp
pop
lds
sbb
mov
push
ret
mov
adc
daa
cmp
pop
test
sbb
mov
stos
push
lods
mov
xchg
orb
mov
add
jp
cmpsb
xor
cmpsl
cmp
mov
inc
inc
out
stos
cmpsl
and
jle
xor
loop
insb
mov
dec
jecxz
jmp
cmpb
mov
scas
test
pop
aas
add
add
or
xchg
fsubl
cmp
xlat
or
enter
pop
imul
mov
pop
inc
mov
test
dec
jae
cmc
mov
jo
push
dec
and
xchg
xchg
pop
and
cli
dec
mov
icebp
test
jge
cmp
jb
cmp
fs
int
mov
jp
dec
aas
pop
rcr
sbbb
xchg
insb
cmp
push
xchg
cmp
in
push
push
out
mov
clc
mov
pop
xlat
sbb
or
cmp
sub
idiv
inc
push
mov
and
jecxz
loope
inc
mov
mov
mov
les
cs
mov
inc
and
xchg
push
out
jns
and
push
mov
shr
mov
stos
mov
mov
rorb
rcll
push
mov
popa
cmp
loop
test
outsb
inc
pushf
push
lea
enter
jnp
shr
test
into
lcall
xor
xor
sub
push
jmp
aad
xchg
mov
and
jno
aas
jl
pusha
add
mov
jbe
and
arpl
int
push
into
movsb
ret
stos
xchg
popa
mov
popa
pop
push
mov
inc
aam
mov
mov
lock
xor
add
pop
dec
fldl
in
push
jnp
cs
mov
push
into
stos
dec
mov
lods
leave
or
sbb
in
in
std
cmp
dec
shlb
or
sbb
inc
sub
xchg
push
push
push
jo
pop
sub
addb
mov
xchg
pop
cmp
push
je
stc
xor
sub
jbe
push
lea
sub
pushf
outsb
stos
push
add
das
push
cli
mulb
sbbb
insb
mov
adc
or
or
pushw
dec
jbe
dec
adc
ja
mov
testb
adc
mov
push
or
and
push
ss
out
rcrl
or
icebp
jmp
bound
jne
stc
inc
adc
mov
mov
ja
out
xor
sub
out
add
inc
cmp
xor
push
pop
ds
mov
xor
jg
add
clc
mov
adcb
dec
fstl
mov
xchg
mov
mov
test
inc
scas
adc
jg
cmpsl
add
jae
adc
push
sbb
lahf
fisubs
add
sub
aaa
daa
dec
adc
xor
je
in
fldt
dec
push
cmpsb
sub
adc
pusha
loopne
dec
aam
jmp
lods
adc
imul
and
ds
incl
push
add
push
dec
push
cld
popf
rorl
and
rorl
mov
push
out
sarl
fldt
bound
jne
mov
icebp
enter
sub
sbb
xchg
mov
icebp
inc
ljmp
pop
adc
push
cmc
adc
jne
and
sub
cwtl
push
or
rorl
int3
and
xchg
mov
int3
inc
icebp
push
jno
daa
mov
ret
div
aad
and
lret
mov
inc
repz
cmp
lods
es
cmp
scas
xlat
cmp
or
fcompl
jmp
test
jae
cmp
inc
mov
fs
addr16
lcall
rcll
jb
cltd
mov
aas
aad
int3
pop
jo
lret
xlat
pusha
loopne
clc
cmpsl
pop
arpl
jbe
jae
sub
data16
pop
lock
pushf
hlt
ret
fnsave
adc
push
cli
jns
popf
cmc
outsl
sbb
xchg
in
cwtl
aas
pop
xor
jle
xchg
sbb
ja
mov
mov
push
xchg
and
das
scas
sahf
rorl
push
shlb
shl
adc
fimull
mov
cwtl
lock
push
fdivrl
and
adc
cmp
xor
add
and
xchg
les
lea
enter
xor
lea
or
mov
rclb
push
add
rcll
gs
lods
je
pop
rcrl
mov
test
fildll
sub
add
fwait
xchg
adc
jmp
lcall
shrl
mov
jne
push
mov
nopl
add
push
jns
aas
fdivs
stos
xchg
int3
xchg
sarb
cli
mov
pop
test
in
repz
sbb
xchg
pop
test
sub
loope
test
les
push
dec
mov
xor
in
testl
or
pop
lret
mov
arpl
push
xor
inc
inc
lcall
or
popa
ljmp
repz
je
mov
imul
sahf
dec
mov
xor
jne
push
int3
cmp
xor
je
incb
pop
cli
ja
sbb
aam
outsb
cli
pop
sbb
or
and
mov
loop
mov
std
jns
lds
or
or
iret
pusha
addr16
xchg
and
push
sub
mov
in
mov
aaa
dec
jnp
push
test
mov
idivb
scas
mov
ja
jno
popa
fldcw
xchg
jbe
adc
pop
push
mov
pop
std
shrb
inc
negl
push
pop
aad
and
sub
adc
nop
xabort
mov
call
fwait
and
sub
mov
add
nop
ret
daa
xchg
movsb
sbb
mov
pop
enter
mov
jno
das
or
adc
and
mov
loope
pop
pop
rcll
xor
repz
arpl
outsb
lret
xor
mov
sbb
adc
dec
pushf
mov
jge
lret
mov
mov
cld
jne
pop
int3
adc
fdivl
ljmp
push
idivb
or
dec
rclb
lods
imul
mov
or
int3
adc
jno
mov
sbb
loope
aas
dec
sahf
cmp
fistl
or
inc
insl
push
sbb
or
in
inc
push
sub
mov
outsb
insl
pop
jg
sub
mov
out
inc
jge
xchg
mov
mov
adc
and
scas
out
ds
div
dec
xor
jne
roll
mov
pop
aad
mov
pop
xchg
push
popa
xchg
push
cmpsb
insb
out
fdivs
aad
or
dec
es
dec
sbb
insb
lock
inc
cmpsb
xor
jae
adc
sub
stc
push
cmpl
xchg
or
mov
rcr
mov
xchg
mov
mov
daa
mov
arpl
ret
adc
sub
mov
in
and
aaa
aam
aam
call
loop
dec
xor
filds
inc
push
and
dec
add
jo
xor
sub
cmc
popf
mov
in
or
inc
push
push
int
stc
int
inc
aam
add
adc
sub
pop
push
dec
add
mov
and
jb
popa
into
gs
jp
push
mov
stos
in
arpl
outsb
add
xor
fwait
pop
dec
add
adc
dec
mov
cmp
jo
jmp
ljmp
inc
mov
mov
or
inc
inc
push
cmc
xchg
addb
gs
sbb
jge
call
cmc
or
or
sbb
push
mov
adc
push
xor
in
pop
fs
inc
in
jne
pop
insl
stos
xchg
stos
jns
lahf
mov
iret
xor
mov
mov
cmp
pop
inc
sbb
std
dec
jmp
adc
push
lret
das
addr16
push
fnstsw
imul
clc
mov
adc
jb
jg
addr16
and
mov
call
xor
fcmove
enter
jo
push
shll
and
push
push
cmp
dec
mov
sub
jmp
invlpga
int
sbb
pop
mov
test
insl
fs
dec
mov
sbbb
insl
idivb
pop
aam
nop
lods
pop
incl
int
sbb
sbb
repz
mov
mov
cmp
inc
jne
dec
arpl
test
inc
je
out
repnz
btr
arpl
cmp
and
adc
shl
leave
jg
lahf
inc
stos
sbb
add
aaa
loop
or
sbb
in
jne
repz
jne
push
push
sbb
mov
test
xor
in
dec
and
mov
jle
ljmp
adc
iret
mov
fnstenv
or
lock
or
mov
ficoml
outsb
cmp
pusha
cltd
idivb
outsb
jg
add
sbb
and
int3
mov
mov
decl
mov
dec
mov
jmp
sub
mov
loope
ljmp
xor
loop
movsb
xor
pop
or
mov
iret
pop
call
mov
sub
shl
mov
fidivrs
xchg
push
bound
stos
rcl
leave
dec
sub
je
jnp
rolb
mov
fisubs
iret
aaa
sbb
dec
dec
push
dec
pop
cmpsl
mov
push
jecxz
mov
clc
and
icebp
sub
filds
call
lahf
mov
xchg
pop
pop
xchg
arpl
dec
js
stc
test
in
sahf
out
inc
ror
jmp
imul
int
pop
inc
adc
cmpsb
loop
pop
mov
imul
push
stc
xor
loope
cmpsb
inc
add
aaa
out
fists
pop
inc
xor
std
popl
in
push
test
scas
sub
add
xchg
stos
xchg
inc
pop
test
sub
popa
mov
lcall
aaa
mov
imul
add
rcll
ret
lahf
cli
movsb
sbb
xor
add
fdivl
fwait
add
shll
test
jmp
ret
jb
push
mov
inc
add
movsb
xchg
jmp
jl
fs
mov
call
loop
add
fbld
push
scas
adc
lea
popa
add
aas
icebp
cwtl
pop
pop
cs
xor
mov
popa
mov
cmp
and
icebp
xor
or
sbb
push
sub
rcr
shlb
mov
insb
cmpsl
data16
lds
shl
daa
ret
rorb
jns
mov
sub
cpuid
sbb
nop
ljmp
dec
adc
cmpsb
add
in
xor
aaa
pop
es
insl
orl
dec
push
clc
inc
stos
js
add
inc
push
or
out
cmc
dec
adc
jb
in
sub
insl
jo
ss
fbstp
adc
jbe
sti
pop
inc
stc
nop
scas
cld
push
push
test
mov
pop
adc
dec
loopne
out
xchg
cltd
dec
rclb
push
cwtl
and
inc
sti
sub
push
les
stos
jmp
test
adc
jg
lods
adc
popa
roll
aad
mov
test
or
imul
jmp
stc
pusha
xchg
sbbl
xchg
lahf
inc
lret
and
or
mov
je
jo
repz
push
out
lods
sbb
and
xchg
xchg
jecxz
dec
cmp
push
jno
clc
push
xchg
ret
inc
mov
testl
insb
cmpsl
sub
cmp
repnz
arpl
jle
test
sbb
or
cmp
push
enter
mov
jecxz
cmc
in
mov
sbb
push
jecxz
inc
js
cmc
mov
inc
mov
push
cmp
es
pop
xchg
dec
in
jno
and
lods
fldenv
imul
sub
sub
lret
xchg
mov
lcall
sub
jle
mov
lds
pop
int
pop
divl
and
inc
sbb
and
fwait
mov
into
push
inc
push
test
xchg
inc
subl
pop
cwtl
jb
add
in
pop
inc
cld
mov
mov
hlt
divb
mov
mov
mov
insb
cli
lret
mov
ret
fldcw
loopne
test
mov
mov
out
lret
or
addr16
rcr
popa
xchg
mov
pop
test
add
ret
push
add
or
mov
js
fstpt
jmp
sbb
or
sbb
out
fwait
and
jbe
mov
test
xchg
dec
cld
pop
les
mov
mov
out
repnz
sti
mov
scas
addl
icebp
add
addr16
jge
lods
inc
mov
mov
adc
push
or
xor
in
jnp
rolb
jg
push
xor
or
jl
test
add
out
out
sbbl
inc
lret
ss
mov
inc
sbb
in
out
jae
pop
jns
fs
lock
push
in
xchg
mov
call
jg
into
sbb
push
mov
lahf
dec
enter
adcl
mov
test
mov
mov
rclb
mov
xchg
loope
ret
dec
inc
fimuls
leave
call
imul
or
stos
test
js
test
sbb
inc
pop
bound
hlt
sbb
dec
sub
iret
ret
cmc
fstp
sbb
pop
push
iret
inc
jp
xor
sbb
jecxz
pop
nop
data16
fadd
inc
iret
pop
movsb
pop
sub
cli
jge
clc
sub
andl
mov
insb
mov
inc
pop
cs
fisubrl
mov
adc
insl
pop
ret
fistps
sub
icebp
add
jecxz
mov
fimull
orl
sbb
lods
jno
lods
pop
scas
add
jmp
cmp
dec
mov
lods
push
mov
adc
enter
add
clc
dec
cwtl
pop
pop
pop
je
mov
fistl
loop
in
lret
adc
sub
scas
inc
in
lods
push
sbb
scas
dec
jmp
rcll
mov
cmc
test
enter
jl
or
pop
lret
int
and
jl
pusha
xchg
jbe
cwtl
in
adc
add
jle
inc
xor
addr16
dec
ljmp
mov
adc
es
stos
sbb
xchg
inc
je
in
ljmp
stos
push
mov
fisubrs
mov
lea
xor
movsb
dec
push
xchg
mov
in
add
movsb
push
dec
dec
push
insb
adc
mov
add
add
sbb
xchg
sub
shrb
mov
ret
sti
xor
add
cli
in
jb
cmc
jp
mull
jg
aas
ja
xchg
rcll
add
or
outsb
cmp
pop
insb
cmp
dec
mov
jecxz
mov
daa
mov
es
int
mov
pop
xor
imul
adc
mov
mov
or
jle
fidivrs
rolb
jmp
insl
add
xor
cld
nop
shl
rclb
mov
mov
enter
cmp
lahf
add
mov
shll
add
shr
push
or
or
xchg
sbb
in
cmp
mov
shrb
or
lcall
xchg
mov
arpl
push
xchg
ljmp
cmp
or
das
inc
cmp
cmp
mov
lcall
bound
adc
add
and
addr16
mov
ret
dec
leave
sahf
xchg
sti
mov
xchg
mov
or
push
sbb
sbb
aaa
les
jbe
loope
cli
or
cmp
dec
add
adc
lcall
dec
daa
ljmp
sbb
adc
pusha
xor
xor
popa
jmp
nop
mov
or
adc
push
pop
mov
push
adc
rcrl
mov
ret
push
sbb
into
leave
pop
sarl
mov
in
lods
or
push
sbb
fisubrs
mov
jns
lret
imul
cmp
sbb
xor
clc
addr16
pop
jnp
cmc
divl
pop
push
add
cmpsl
sbb
pop
mov
ret
int
es
push
lret
mov
imul
jnp
fstpt
sbb
dec
jg
sub
pop
das
sbb
pusha
mov
mov
push
mov
test
stos
xchg
mov
pop
jge
adc
loopne
loopne
add
xchg
sub
shll
fadd
mov
push
dec
xor
jns
jns
outsl
cld
leave
test
xchg
sbb
enter
sbb
push
xchg
pop
adc
mov
insl
push
in
cs
dec
inc
lods
adc
xchg
cmc
iret
pop
aas
cmp
sbb
push
nop
jge
cli
arpl
xor
scas
mov
cmp
das
jp
call
add
sub
adcl
xchg
cmp
rclb
jbe
pop
sti
sbb
daa
insl
mov
or
movsl
rep
in
scas
aad
ss
xchg
test
testl
push
out
push
push
pop
imul
mul
test
and
adc
jno
out
adc
dec
pop
aad
adc
fwait
jmp
mov
dec
mov
cwtl
push
sub
out
push
mov
hlt
pop
mov
pop
mov
divps
push
les
fsubl
sbb
or
xchg
mov
pop
pop
popf
mov
aam
mov
test
adc
ret
in
xchg
xor
adc
jno
jle
loopne
scas
and
inc
or
outsb
adc
shlb
dec
dec
sub
sbbl
sarb
mov
xchg
push
mov
pushf
loopne
sub
sbb
aad
mov
stos
or
shrb
bound
stc
jnp
mov
insb
add
outsl
jecxz
lcall
imul
data16
fs
fcoms
and
inc
cwtl
push
out
or
hlt
adc
sbb
mov
pop
fcomps
out
lcall
mov
sub
or
xlat
lods
scas
inc
incb
xor
cs
rolb
and
adc
push
out
inc
ds
test
test
lods
mov
cmc
lret
aas
sub
addl
out
sti
mov
js
hlt
divl
add
mov
and
push
push
cwtl
sub
sbb
gs
mov
dec
xchg
mov
clc
dec
dec
int
push
inc
lahf
out
mov
rcll
loop
or
pushf
add
xor
push
inc
test
ja
add
adc
test
int
cld
ret
cmp
insl
cltd
jp,pn
or
pop
popa
add
scas
movsb
cwtl
pop
mov
xor
mov
cmp
rclb
xchg
enter
cltd
sti
icebp
and
lret
mov
xchg
ficompl
orl
jp
lahf
ficoms
mov
or
aas
inc
jb
push
jge
pop
jmp
inc
push
les
xor
dec
cmp
pop
push
jmp
or
pushf
mov
loop
sbb
fidivl
inc
pop
add
fcmove
push
jnp
mov
clc
rcl
mov
ret
stc
xchg
repz
fnstsw
add
out
mov
dec
pop
mov
xchg
inc
dec
jg
adc
mov
mov
pop
aas
call
inc
adc
inc
cmp
dec
push
adc
inc
mov
dec
iret
lret
cli
addb
imul
mov
sarb
psubb
push
jle
insl
and
mov
jecxz
test
dec
test
add
ficoml
fs
daa
test
xor
xchg
push
sbb
mov
stc
xchg
xorb
pop
inc
icebp
daa
out
repz
push
pop
rorb
mov
jl
out
inc
je
sbb
mov
cmpsb
cs
adc
fwait
fwait
and
jo
dec
xor
xchg
fsubr
inc
mov
in
rcrb
rolb
jnp
push
pop
cld
ds
pushf
ret
push
sahf
aad
cwtl
inc
mov
std
mov
xchg
ljmp
mov
mov
sub
dec
scas
in
fnstcw
popf
test
push
xchg
enter
xor
ja
sbb
in
ds
fcoms
iret
push
les
int
sub
inc
or
push
rdtsc
cmp
imul
fisttpl
add
jl
push
jne
lods
pop
mov
jp
adc
movsl
das
mov
add
inc
jl
or
mov
hlt
cmp
test
cli
jb
outsb
mov
jb
aaa
in
stos
push
sbb
cmp
cmp
cld
movsb
orb
and
xor
lock
mov
inc
pop
test
dec
aad
imul
push
mov
int
std
cmp
cmp
pushf
sahf
int3
je
stc
jo
es
in
pop
stos
pusha
jnp
lea
or
jae
mov
jl
pop
cmp
and
data16
mov
movsl
inc
cmpb
sub
pushf
hlt
sub
ficomps
scas
or
mov
sti
lcall
movsb
stos
inc
sub
cld
outsl
xchg
push
ja
pop
xor
test
mov
sub
mov
fxch
xor
jg
aaa
std
and
add
pop
mov
daa
adc
cmpl
or
sti
pop
test
repnz
xor
fsts
shlb
and
add
fs
pop
mov
xchg
add
sub
ret
mov
stos
test
push
push
mov
sbbb
insb
jbe
push
pop
and
dec
sbb
cmp
aas
aam
aad
push
jl
inc
ljmp
imul
bound
popa
out
mov
pushf
jbe
out
xchg
movsl
mov
or
mov
dec
sahf
sbb
shlb
xor
lock
cmpb
lods
bound
adc
xor
sub
cmp
jno
xor
out
jnp
xor
add
sbb
dec
jge
or
sbb
sbb
mov
mov
mov
call
push
xchg
xchg
hlt
sbb
mov
mov
sbb
xor
mov
sbb
dec
xor
xor
mov
pushf
imul
xchg
movsl
gs
push
es
jb
rol
jl
cmp
ret
xchg
incb
sar
cmp
dec
push
cmc
out
inc
inc
adc
fidivrs
test
lcall
xor
jbe
sub
into
bound
jnp
mov
xor
out
and
repz
mov
cmp
pusha
and
cmp
aaa
or
movsb
xchg
fs
movsl
les
inc
push
aam
push
xchg
cmp
cmpsl
push
enter
repz
xorb
jl
or
dec
push
dec
ret
in
sub
jge
mov
imul
data16
add
sbb
call
out
ja
dec
in
dec
pop
ret
mov
loopne
push
mov
popa
push
mov
fwait
into
or
fwait
bound
cmp
lods
rorb
cs
enter
mov
fadd
repz
sahf
popa
jo
les
push
inc
jnp
out
jns
mov
stos
sti
cmp
outsl
lea
dec
push
fdivl
and
sti
push
sub
cmpl
push
jmp
jg
pop
and
xchg
mov
xor
cmp
push
orl
jns
xchg
adc
lods
dec
push
sbb
sti
lea
out
sbb
scas
jno
push
cs
mov
pop
out
sbb
loope
sbb
enter
call
jo
cmp
xor
movb
lcall
cmp
push
xchg
rolb
int3
pushw
jp
jo
xchg
xchg
adc
cmp
pushf
std
and
mov
jecxz
inc
test
cmp
xor
es
es
xor
divb
inc
xchg
inc
fidivrl
movq
cmc
in
rorl
pop
dec
jmp
andb
ficomps
sub
jl
js
mov
out
lahf
leave
mov
mov
scas
imul
xor
lods
int3
xchg
jbe
inc
cmpsl
repz
mov
test
aaa
pushl
lret
out
imul
mov
lret
rcrl
or
mov
jbe
lea
divl
lahf
cli
ss
lret
mov
jp
arpl
inc
xor
in
ficoml
push
cmp
leave
adc
mov
std
jns
mov
add
mov
int
les
jl
movsb
cli
jne
mov
in
imul
int
dec
loope
inc
leave
sub
dec
pop
add
sub
xchg
pop
xchg
icebp
pop
lret
test
mov
jns
aas
in
jb
mov
xorl
les
jno
pop
data16
jo
dec
push
mov
jmp
xchg
inc
xchg
fisubrs
repnz
pop
into
adc
push
hlt
sbb
roll
push
xor
mov
sbb
lahf
xor
cli
jle
js
sbb
add
xchg
clc
shlb
test
adc
outsb
xchg
inc
aad
call
xor
fistps
jmp
mov
cmpsl
push
sbb
sbb
lcall
sahf
cmp
shrb
fwait
aam
pop
xchg
mov
dec
or
add
sbb
push
xor
cmc
mov
test
or
push
faddl
loopne
cs
cli
nop
jle
and
pop
ret
sbb
jmp
mov
cmp
repnz
mov
out
mov
mov
jne
popfw
stc
es
int
std
or
cmc
lea
sbb
jno
adc
arpl
stc
and
sti
pop
insl
lods
cmpsb
out
cs
add
xchg
in
divl
cmp
dec
fisttpl
aaa
mov
rcl
xchg
cmp
mov
mov
mov
mov
push
mov
aam
mov
lea
adc
jnp
stc
mov
das
cmp
in
xor
jmp
insl
add
jg
and
loop
rorl
dec
cltd
cmp
dec
jb
cwtl
push
nop
popa
adc
cmp
mov
mov
adc
sub
jns
mov
popa
mov
cmc
shl
adc
vmwrite
and
insb
fwait
subb
ficompl
pop
jnp
adc
insb
stos
mov
mov
mov
mov
sub
js
inc
les
xchg
jno
lods
and
nop
jno
add
mov
mov
pushl
fnstsw
adc
and
dec
lret
pop
push
arpl
add
stos
rcrb
loopne
mov
mov
xor
repz
jne
mov
cld
mov
adc
mov
jno
mov
std
sar
lahf
sbb
push
scas
add
cmp
les
scas
fs
mov
loopw
sub
pop
mov
jge
sti
loop
orl
cmp
int3
lret
mov
jg
xor
lock
dec
daa
pop
mov
ret
clc
sbb
das
and
das
xor
jb
cld
arpl
mov
pop
push
mov
repz
pop
int3
lds
cmpsl
fimull
push
sub
jae
mov
jg
add
inc
fistpll
mov
jmp
inc
frstor
fs
test
cmp
cwtl
imul
call
or
into
es
popa
adc
and
mov
int3
shl
scas
fwait
mov
insb
ss
xor
test
jecxz
xor
mov
popf
shlb
xchg
setbe
les
pop
enter
sarl
push
cmp
out
pop
sbb
mov
xor
fadds
fsubrl
hlt
dec
das
adc
mov
popf
sbb
push
std
jecxz
push
test
pop
mov
popa
fwait
inc
lods
fcoms
nop
mov
jae
xchg
or
and
adc
jae
shr
inc
out
xorl
testb
dec
adc
stc
add
sub
sbb
ss
pop
xor
in
adc
add
cmp
or
cs
data16
fsubp
cmpsb
in
sub
jg
cmp
nop
aam
into
xorl
dec
xchg
leave
and
jecxz
rorb
rcrl
sub
pop
mov
cs
cltd
xor
sar
mov
loope
shll
lret
and
mov
add
mov
jnp
and
sti
inc
xchg
sub
test
cmp
pop
xlat
mov
insl
mov
push
mov
mov
xchg
notl
xchg
sub
cmp
pop
sub
out
jle
leave
shrb
mov
int
jbe
leave
mov
cltd
add
inc
imul
pop
outsl
xchg
push
push
pop
dec
in
add
jno
jg
pop
dec
sbb
mov
test
jge
sub
add
test
int3
xchg
jno
jl
mov
mov
xor
xor
mov
push
in
rorb
test
xchg
imul
push
xchg
pop
inc
dec
out
xchg
dec
sbb
and
aad
rorl
push
fwait
dec
push
jl
aas
test
jecxz
fnstenv
sub
lahf
aaa
lret
setg
jle
popa
inc
jge
cmp
adc
repnz
sti
repz
mov
cmpsb
push
xor
push
mov
ret
iret
gs
repz
add
lods
test
std
jb
mov
push
lea
mov
sub
int
adc
xchg
lcall
cld
cmp
push
stos
pop
jb
add
loopne,pt
push
add
and
cltd
test
ret
sub
mov
jnp
cmp
dec
cltd
inc
sahf
jo
add
cmp
push
sbb
mov
add
adcb
addl
loope
nop
test
rolb
movsb
mov
cmpsl
cmpsb
xchg
div
scas
or
push
xor
jne
roll
js
iret
cmp
mov
movsb
ret
sub
dec
push
inc
sahf
pop
jno
jae
xorl
xchg
dec
pop
or
and
push
mov
int
adc
std
mov
jg
xchg
sub
sub
sahf
adc
mov
lea
hlt
lahf
cmp
stos
out
bound
enter
imul
imul
cmp
xor
cmpsl
pop
sbb
test
push
idivb
jno
call
inc
inc
xchg
or
insl
mov
mov
in
das
or
jae
clc
mov
push
push
and
adc
idivl
frstor
scas
sbbl
sbb
pop
enter
push
mov
inc
cmp
mov
adc
jmp
stos
invd
inc
lret
mov
cmc
push
inc
xor
add
cmp
inc
inc
or
addr16
jl
aam
jge
mov
loope
push
lret
dec
mov
in
fbstp
push
pop
test
arpl
ds
fcmovu
mov
fnsave
arpl
mov
test
mov
adc
push
repz
es
inc
data16
adc
out
inc
inc
or
mov
fiaddl
mov
popf
push
lods
scas
mov
in
push
mov
adc
std
sbb
mov
xchg
pop
mov
mov
and
scas
xchg
fcoml
fimuls
jo
jge
insb
lret
loopne
pushf
pusha
adc
mov
jae
std
cltd
test
xchg
movsb
sahf
divl
addr16
faddl
mov
enter
inc
lret
pop
mov
aad
popa
jnp
outsb
cmp
pop
cmp
sub
movsb
and
lcall
pusha
mov
mov
aas
or
jmp
pop
cmpsl
mov
out
lret
ret
xchg
iret
aaa
lcall
mov
btr
out
data16
and
jae
aas
lds
pop
inc
add
jmp
aas
fucomp
and
sbb
sub
pop
pushf
pop
xor
insl
or
inc
addr16
int
dec
adcl
sub
fidivrl
cmp
aaa
fmull
add
or
lgs
pop
add
loope
cmp
pop
cld
aam
and
mov
cmp
xor
mov
popf
in
xchg
dec
xchg
mov
stc
or
mov
xchg
imul
jnp
movsb
out
test
fdivrs
xor
sub
cld
in
or
xorb
jns
dec
push
fcmovbe
sub
sub
lock
xchg
mov
enter
stc
jge
insb
mov
cmp
fsub
loopne
xorl
lahf
xor
in
xchg
cwtl
cs
inc
mov
jge
inc
sbb
loopne
sub
cmc
adc
shr
ret
fildl
pushf
in
dec
xchg
mov
out
pop
mov
mov
es
rorl
leave
out
fimull
jnp
out
push
lods
cmpsl
mov
add
mov
cmp
adc
testb
sbb
mov
and
ljmp
pop
cmp
ficoml
jnp
cmp
mov
push
add
insb
rcll
aas
lods
mov
mov
nop
inc
sub
addl
sahf
jns
sbbb
aas
divl
jecxz
nop
pop
out
push
mov
loope
mov
mov
sbb
popf
iret
pop
sbb
jle
mov
or
nop
pop
adc
fldt
cmp
jl
aad
gs
int3
jmp
in
js
fsubs
aaa
fs
dec
inc
popf
jle
sub
leave
or
shlb
sbb
fiaddl
popf
xlat
flds
sub
rorl
data16
dec
jnp
test
pop
xchg
lret
jae
xchg
fists
xchg
bound
mov
or
inc
push
mov
add
sbb
repnz
jmp
xchg
shr
pushf
rcrb
adc
repz
inc
mov
movsl
add
imul
push
cwtl
mov
pop
push
pushf
mov
mulb
cmc
nop
jno
xchg
dec
popf
xchg
test
leave
jge
je
out
xchg
jbe
fadds
iret
push
jne
dec
int
mov
call
mov
sbb
mov
popf
in
add
cmp
mov
jne
cmp
xchg
js
cld
mov
in
dec
sbb
mov
in
jg
mov
and
jbe
mov
rorl
inc
popa
aad
push
push
mov
mov
icebp
xorb
jle
pop
add
pop
out
vmovdqa
addb
aam
das
test
mov
mov
in
sarb
xchg
insb
mov
js
fcomps
icebp
repz
in
jae
mov
rcr
pop
mov
xlat
les
dec
lock
pop
dec
cmp
xlat
testb
hlt
mov
fwait
enter
cmp
cli
gs
addb
insb
scas
dec
idiv
cs
cmp
mov
and
jp
mov
out
xorl
lcall
mov
or
and
call
lcall
je
sub
mov
enter
daa
jle
jge
mov
add
jmp
sbb
cmc
push
popa
push
movsb
inc
push
lcall
mov
fsubrp
ficoms
jbe
jmp
lds
outsl
fnsetpm(287
lods
or
mov
cwtl
pop
lret
stos
into
xchg
push
and
stos
lds
xorl
out
sarl
icebp
xchg
dec
dec
pop
sub
xor
notl
xchg
aaa
sbb
test
lret
adc
loopne
xchg
push
lcall
dec
pop
ja
mov
mov
decb
cmp
xchg
jo
subb
in
push
pop
fidivs
enter
repnz
imul
hlt
iret
loopne
bound
push
or
or
fdivrl
or
pusha
mov
mov
jnp
adc
insl
sub
out
stos
stc
dec
aaa
dec
icebp
adc
adc
dec
sti
mov
lea
xor
add
add
or
fs
mov
sbb
loope
pop
daa
jl
cld
xor
dec
xchg
dec
cmp
jge
push
push
or
fs
hlt
insl
cmc
push
mov
cmp
pop
push
gs
xlat
and
mov
push
adc
xor
or
aas
or
insb
test
pop
sbb
push
fs
and
call
hlt
mov
scas
sarb
adc
inc
imul
cmp
jmp
add
aas
jb
adc
imul
int
push
mov
xchg
mov
and
adc
addr16
sbbb
cmc
jecxz
pop
cmp
jne
sbbb
nop
int
sub
stos
add
in
add
and
movsb
idivl
lock
adc
mov
xor
jb
lods
leave
add
push
stos
pushf
jnp
push
inc
test
mov
outsb
push
cltd
add
add
pop
roll
adc
xchg
movsb
pushf
gs
aas
jae
test
push
out
mov
mov
repz
xchg
push
mov
xchg
mov
add
mov
and
jb
sahf
les
xchg
or
outsl
pop
pop
adc
outsb
jl
mov
dec
les
sub
push
pop
jge
mov
and
fs
push
movsb
adc
push
mov
scas
pop
sub
push
push
pop
loop
xchg
cmp
outsl
into
scas
int
iretw
aas
adc
adc
adc
dec
cmp
xchg
into
jge
in
adc
push
xorl
xchg
test
int
cltd
jecxz
xchg
jg
sbb
xchg
cmp
xor
cmp
mov
inc
push
dec
fwait
les
jne
bound
mov
jbe
imul
sbb
ds
in
lcall
jbe
add
xchg
push
xorb
xchg
cmp
test
cmpsb
fidivs
clc
shl
repz
ljmp
aad
jecxz
xor
mov
sarl
mov
rol
popl
jmp
or
push
push
push
mov
ficoms
jbe
xor
sub
decl
aaa
pop
movsb
or
push
jmp
shlb
xchg
stos
sbb
setne
dec
sub
repnz
and
and
mov
fcmovnu
cmpsl
hlt
sti
cvtps2pi
sub
xchg
mov
or
fstpt
repnz
mov
popa
xor
push
sar
fildl
cld
mov
lahf
rcr
call
int3
cwtl
mov
xor
jnp
pop
push
cmp
adc
mov
mov
push
test
mov
jle
lcall
roll
xlat
mov
les
lcall
inc
dec
lods
push
test
pop
xchg
push
cmc
es
rorb
inc
mov
repz
icebp
inc
test
mov
cmp
lahf
dec
test
push
sbb
dec
fsubr
or
dec
lods
repnz
test
mov
sub
int3
pop
into
gs
lods
fmul
fwait
in
call
fistpll
cltd
clc
dec
push
dec
out
loopne
add
pushf
pop
xorl
stos
jecxz
add
cmp
mov
lock
cld
aaa
push
les
pop
movsl
arpl
shll
std
rcrl
jle
pop
out
out
andnps
push
pop
add
xor
jns
in
mov
mov
cld
cld
mov
cmp
pop
pop
dec
mov
and
xor
push
popa
jnp
clc
call
orb
lea
cltd
insl
call
scas
dec
in
mov
inc
fimuls
xchg
cmp
mov
sub
lahf
jo
js,pt
sbb
test
mov
pop
mov
push
nop
inc
out
sub
out
stc
xlat
test
dec
lcall
and
sarb
stos
fdivs
in
cwtl
push
inc
ret
int
xor
les
ror
arpl
mov
cmpsb
shlb
pusha
adc
pop
pop
aam
inc
outsb
jne
sbb
das
adc
ja
mov
mov
dec
test
out
sbb
bound
insb
jg
sarl
fsub
fcmovbe
inc
hlt
mov
loopne
pop
hlt
lock
data16
mov
pop
mov
mov
inc
ret
mov
test
movsl
mov
sahf
dec
mov
in
stos
arpl
out
shlb
xchg
jge
loop
gs
or
stos
xor
fsub
rcrl
push
loop
mov
cli
inc
mov
loope
or
divb
mov
lcall
dec
push
cltd
jo
cmpsl
mov
insl
push
adc
jae
sub
rclb
push
and
sbb
inc
pop
das
push
outsb
ljmp
push
mov
xchg
xchg
shl
ja
sbb
sub
push
test
imul
les
dec
lcall
imul
data16
mov
test
push
mov
mov
mov
lods
rorl
std
das
pop
or
xor
add
inc
clc
sti
mov
dec
jge
pop
mov
xchg
xchg
cltd
jp
and
xchg
das
roll
push
inc
add
call
push
mov
aad
repz
add
xor
push
inc
cmp
pop
cmp
mov
or
test
inc
bound
mov
sbb
mov
pushf
testb
in
mov
push
adc
fbstp
sti
xchg
xchg
cli
je
dec
insb
jg
stos
ret
push
arpl
stos
add
xchg
mov
aam
jo
push
fwait
bound
or
push
cmpsl
xchg
pop
cmpsb
cmp
jne
out
or
and
iret
xchg
mov
lods
sbb
push
stos
popf
test
pop
jno
xchg
nop
jl
fcoms
loope
jne
sub
add
adc
ljmp
dec
and
sbb
mov
sub
sub
dec
aas
dec
addl
jecxz
lahf
stos
cmp
and
lret
lea
ret
push
into
call
and
daa
and
cwtl
add
imul
mov
adc
loop
cmp
push
leave
mov
out
mov
xchg
jae
inc
lret
cmp
fmuls
mov
leave
mov
mov
mov
mov
je
xchg
jne
ret
test
mov
out
mov
sbb
clc
or
adc
pop
mov
push
lahf
inc
inc
mov
sbb
pushf
int3
out
sbb
add
int3
push
cmp
jae
aam
jle
into
push
out
adc
xchg
dec
cmp
imul
int3
dec
xchg
mov
push
int3
in
sub
nop
push
mov
lock
dec
lret
ret
adc
in
jmp
push
xchg
pop
aam
push
out
cmp
cmpsb
lods
enter
sub
in
test
inc
mov
or
xlat
rclb
sub
sub
jno
sub
xor
in
insl
add
fldl
xor
stos
mov
pop
jae,pt
sbb
jns
stos
and
clc
sbb
jnp
pop
jle
cmc
dec
jle
fnstsw
hlt
add
insl
mov
lret
iret
or
bound
aad
lahf
xor
or
das
jns
pop
mov
fildll
mov
out
mov
hlt
cmp
outsb
mov
xor
xchg
ret
push
xchg
push
dec
repnz
sbb
ds
ss
sub
add
xchg
aam
rcll
aad
lcall
jmp
xchg
mov
out
out
std
sahf
push
scas
lods
adc
adc
or
in
pop
lods
outsl
cmp
adc
stos
inc
ja
mov
xchg
and
dec
mov
sub
frstor
fdivl
push
xchg
lcall
cmp
test
or
sub
enter
jno
jne
jl
push
scas
fdivrl
jl
nop
mov
rcrl
movsl
je
cld
lods
inc
aaa
pop
mov
xlat
inc
insl
out
push
ror
cmp
jg
mov
pop
mov
push
es
movsl
add
sub
add
push
lahf
cmp
in
fldl2e
jge
out
shl
pop
pop
gs
xchg
push
fs
les
push
sarl
push
or
sub
xor
jae
ss
rorl
mov
aam
dec
clc
inc
push
aaa
repnz
sub
roll
cmpsl
mov
in
aam
ret
or
xor
add
pop
fs
sub
outsl
xchg
fdivrl
cli
xor
je
repz
shl
cmpsl
pusha
push
sbb
pop
in
mov
jnp
cmpsb
jle
mov
roll
or
mov
insl
mov
icebp
or
push
mov
lcall
mov
dec
pop
imul
sub
jle
repz
pop
mov
ljmp
push
xchg
sub
scas
push
aas
sbb
shrb
popa
stos
inc
bound
popf
repnz
xchg
sahf
inc
jnp
lock
sbb
dec
adc
jmp
scas
and
pop
mov
cwtl
scas
sub
mov
add
ljmp
xchg
mov
inc
pop
sahf
loop
jg
and
dec
push
cltd
pop
sbb
bswap
addr16
or
sbb
cmp
in
jecxz
xchg
sub
jb
cs
bound
sub
lea
lcall
lahf
scas
inc
icebp
mov
icebp
dec
in
inc
dec
mov
mov
or
sbb
loop
jne
inc
or
mov
jo
and
filds
enter
out
xchg
je
ret
inc
xor
dec
mov
in
mov
pop
addr16
mov
add
repnz
push
fwait
andb
pop
mov
pop
movsb
mov
cmp
dec
sub
lods
subl
frstor
pop
int3
mov
xchg
cmp
add
jge
test
movsl
mov
loop
rdmsr
mov
and
and
sub
xor
pop
jmp
sub
sub
mov
pop
sub
or
call
xor
jecxz
roll
dec
roll
call
or
lret
pushl
lea
sub
cs
mov
add
rcrb
and
outsb
aam
pop
outsb
mov
fdivl
cmp
je
dec
or
xchg
mov
mov
scas
push
or
aad
adc
ljmp
clc
add
icebp
out
cli
xchg
lock
adc
mov
pop
addl
stos
push
jne
out
rcrb
sbb
addr16
push
and
lret
push
scas
xchg
sub
out
fldcw
sub
xor
add
cvtps2pi
jae
cmc
jae
fldenv
inc
and
xor
cli
loope
dec
aam
cmpsl
js
cmc
inc
jg
push
pop
rorl
adc
dec
or
outsl
shr
ljmp
fcoms
insb
or
sub
sub
jnp
test
stos
aaa
cmp
fs
aas
pop
dec
xchg
jb
jmp
add
adc
sub
insl
div
ja
jcxz
push
js
insl
fildl
insl
inc
test
js
addr16
sub
sahf
stos
mov
mov
xchg
sub
popf
mov
mov
mov
sub
pop
and
imul
jmp
movsl
xchg
xor
mov
pcmpeqb
lods
outsl
rcrl
push
imull
subb
xor
fidivrs
or
jnp
shl
pushf
mov
dec
cld
mov
cmc
ret
mov
mov
push
pop
and
fwait
mov
clc
xor
xor
rolb
pop
push
sub
call
push
sub
pop
in
jle
pop
and
xchg
dec
sahf
pushf
push
scas
dec
in
mov
sub
cli
add
sbb
push
hlt
or
cmpsl
nop
lods
pop
jmp
mov
adc
xor
test
out
loope
or
sarl
mov
push
jp
pop
daa
inc
mov
pop
inc
sbb
nop
xchg
or
fdivs
sbbb
mov
dec
jp
mov
lock
mov
cmc
sahf
sti
idivl
in
loopne
sub
mov
int3
cld
movsb
sub
mov
insb
inc
loopne
pop
sbb
xor
add
adc
mov
inc
mov
fistpll
rorl
xor
ret
mov
adc
scas
and
mov
movsl
mov
jecxz
pop
addr16
jns
int3
mov
inc
aam
insl
add
jge
push
mov
cltd
and
jge
cltd
mov
jge
adc
add
xor
jle
jb
notl
xchg
mov
xchg
loopne
repz
push
add
jne
or
lods
and
nop
xchg
xor
xchg
scas
and
mov
movsw
jmp
ds
in
mov
mov
ret
mov
fisttps
fistps
adcb
pop
inc
sarl
sub
adc
stos
sub
mov
sub
push
out
sub
adc
out
std
xchg
xor
pop
inc
mov
pop
pop
divl
pusha
xchg
mov
cwtl
add
jno
sbb
lods
in
lret
jmp
xchg
or
inc
ljmp
push
pop
imul
mov
addr16
or
or
adc
cmc
ja
jmp
xchg
xchg
or
xor
dec
push
add
mov
sbb
xchg
push
adc
leave
dec
outsb
xlat
inc
mov
and
imul
mov
fcoml
and
sub
movb
cmp
sbb
xchg
movsl
pushf
adc
aad
push
pop
popf
lret
mov
addb
nop
push
test
push
jne
lahf
sbbl
xor
dec
or
mov
in
push
iret
jge
mov
jmp
cwtl
stos
outsb
dec
dec
push
lds
inc
ds
repnz
daa
shrl
add
rol
test
or
lods
ret
jecxz
mov
mov
cmp
push
mov
lods
das
push
adc
cmp
frstor
or
out
lret
and
int3
je
cmpsl
mov
mov
cli
cmp
jno
fwait
xor
je
cmp
dec
jg
fcmovbe
jne
aad
out
jno
push
es
mov
ficoml
pushf
sub
add
lcall
mov
push
out
xor
mov
loopne
mov
push
loope
iret
or
data16
or
sarl
out
xchg
add
mov
dec
adc
mov
or
aad
mov
in
dec
xchg
cmc
mov
xor
xor
mov
cmpsb
neg
sbb
push
jbe
xchg
xlat
fwait
js
cmpsl
jle
clc
mov
xor
mov
and
cli
insl
cmp
jbe
or
pop
test
jns
pop
pop
lret
enter
into
mov
imul
fcmovu
fbstp
push
std
xchg
movb
lods
pop
add
push
out
int3
push
outsb
test
xor
adc
scas
jg
jmp
pushf
pusha
scas
test
jbe
and
dec
fsubrl
add
push
pushl
xor
or
dec
test
and
jno
cli
adc
clc
mov
enter
test
cld
mov
xor
xchg
adc
out
add
add
daa
cmpsl
cld
cmp
das
sarl
adc
jnp
outsl
dec
push
outsb
testb
sub
mov
push
sbb
clc
cmp
xor
rcll
xchg
sbb
int
nop
add
jo
adc
aas
add
cld
jae
imul
mov
push
jp
mov
lahf
dec
fst
dec
sub
aas
pop
or
loopne
xchg
sbb
jmp
fcoml
andb
loopne
mov
mov
and
dec
cmp
mov
sbb
imul
gs
pop
and
leave
fcmovnb
xchg
loop
mov
ljmp
mov
movsl
ficoms
push
js
and
pop
and
add
movsl
xor
xchg
pushf
test
jno
aam
movsb
in
jecxz
rorl
jge
or
jmp
push
jbe
fwait
fwait
adc
xchg
mov
adc
or
jge
outsb
ds
inc
pop
imul
mov
loope
insb
sbb
pushf
or
rcrl
not
sbb
sub
pusha
or
mov
dec
mov
test
loop
cmp
jle
jnp
insb
mov
mov
sti
xchg
shr
test
jo
and
xor
insl
add
push
push
lret
enter
gs
cmp
cmc
mov
pop
push
or
bound
ss
fdivl
mov
fildll
mov
inc
sub
and
ja
push
subl
fsubrp
hlt
sub
or
mov
pop
dec
pop
arpl
add
sbb
out
out
movsl
int3
add
push
sbb
push
test
pushf
out
or
es
mov
dec
fcom
out
in
and
notb
cmpsl
sbb
daa
and
cmc
or
dec
mov
cmp
lret
add
fs
call
mov
loopne
add
nop
lods
pop
insb
dec
popa
dec
ficomps
es
pop
addr16
cmp
pop
jle
rcrl
mov
adc
or
std
sti
popf
jl
sub
mov
pusha
mov
in
addl
push
ja
xor
ret
je
into
lahf
mov
stc
mov
in
repnz
pop
dec
aam
cld
incb
adc
xchg
mov
addl
pop
push
sub
mov
hlt
mov
cmp
mov
push
js
mov
mov
jb
jnp
pop
fisttps
les
mov
arpl
or
daa
out
roll
pop
shl
push
mov
fcmovne
popa
cmpsl
insb
nop
push
mov
inc
lods
shll
fsubl
sub
or
dec
daa
pop
mov
add
mov
add
dec
push
bnd
mov
and
pop
test
dec
cmc
mov
push
rorb
in
imul
cmp
xor
inc
pop
xchg
je
cmp
or
mov
cmc
pusha
adc
xchg
or
or
mov
repz
fists
lods
jmp
mov
dec
push
dec
mov
pop
push
in
mov
xchg
push
adc
lock
scas
movsl
imul
mov
push
pop
fnstsw
jns
sbb
mov
js
xchg
shlb
mov
fs
mov
jb
inc
sbb
addr16
sbb
aas
pop
sbb
sbb
and
jae
repnz
cmp
mov
int3
test
jae
insl
pop
mov
fistl
or
in
jl
lret
scas
in
movsl
inc
mov
sub
mov
std
mov
rorb
cmp
adc
sbb
pop
roll
sub
xchg
daa
int3
add
dec
mov
call
outsl
fisubrl
xor
lcall
mov
sub
int3
inc
adc
cmpsl
dec
cld
js
push
rcr
out
inc
dec
idivl
pop
addb
popf
mov
jno
ss
xlat
xor
jge
pop
xchg
lods
jg
test
cmpsl
xchg
xchg
inc
gs
arpl
lahf
lock
in
stos
lahf
jle
inc
jno
cld
in
push
rcr
inc
sbb
mov
xlat
fldenv
dec
movsb
testb
call
push
nop
mov
xor
jl
adc
lea
mov
sarb
cmpsl
cwtl
add
fs
rol
jbe
loop
sbb
sub
hlt
lods
sti
cmp
je
pop
mov
shll
or
lret
sti
aad
scas
dec
andb
inc
add
mov
sub
cs
xchg
push
sub
xor
dec
pop
inc
mov
cli
cmp
test
imul
stc
mov
vmovups
jno
mov
dec
in
in
nop
pop
xchg
xchg
mov
xchg
jnp
or
jge
call
out
push
mov
ret
add
mov
lock
lea
adc
fbstp
cmp
jnp
decb
je
lock
sub
int3
cld
jb
push
cli
gs
inc
filds
mov
stos
lds
and
ss
sub
inc
jb
jecxz
fwait
not
jge
fisttps
mov
add
push
cmp
mov
fmull
addr16
lea
cld
add
gs
rcrb
adc
pop
outsb
mov
sbb
push
or
aaa
sub
cltd
mov
adc
inc
mov
call
rcl
add
and
xrelease
mov
jecxz
xchg
xchg
push
jnp
int
sub
lret
addr16
or
into
inc
mov
shll
cmp
mov
mov
shlb
adc
in
sbb
add
or
xchg
ret
dec
fstpt
jg
cmc
mov
cmp
adc
cmp
jecxz
jecxz
es
cs
cltd
imul
push
cmp
cmc
adc
test
fisubl
in
pop
stc
clc
or
jl
adc
iret
in
xor
xor
dec
jb
ss
pushf
push
das
leave
mov
mov
mov
xor
inc
movsl
mov
daa
cmc
insl
cmpsb
adc
cmc
outsb
ret
cld
add
push
inc
hlt
xchg
stc
xchg
pop
int
sti
or
add
call
lcall
push
sub
enter
dec
pushf
and
lcall
sarb
push
das
sub
pop
push
gs
xchg
cld
mov
std
and
or
push
dec
adc
mov
mov
in
imul
mov
pop
push
adc
out
cwtl
lret
test
mov
mull
adc
int3
scas
js
jmp
in
pop
mov
gs
jle
test
test
and
negb
repnz
rcrl
jnp
sub
xor
sub
stos
sub
loop
mov
lock
cmp
test
pop
std
test
jne
mov
test
in
lods
adc
add
test
insb
and
inc
push
xor
sbb
xchg
loope
pushf
inc
sbb
nop
leave
stos
lahf
rclb
jnp
pop
fldenv
push
cld
dec
sbb
not
call
push
jp
roll
sahf
add
lds
mov
mov
mov
movsb
jb
mov
cltd
xor
and
in
bound
in
inc
out
and
add
sub
in
int
lods
mov
fsts
dec
jne
adc
into
stos
lods
les
test
fstpt
out
xor
lea
jmp
call
push
mov
orl
xor
imulb
shr
jle
and
push
call
mov
popf
movsl
jb
in
iret
shl
cmp
mov
push
fwait
jae
inc
ret
mov
dec
ljmp
mov
inc
push
and
jge
and
push
push
jmp
add
xchg
daa
lea
les
xchg
xor
leave
dec
test
xchg
cli
adc
aam
push
inc
xchg
sar
test
xor
and
jecxz
popa
addr16
add
pop
aam
aaa
scas
cmovns
out
jge
out
mov
pop
add
enter
fs
xchg
out
imulb
or
daa
inc
jb
xchg
mov
or
orl
inc
push
mov
jl
adc
inc
jno
scas
jo
std
dec
mov
lds
push
mov
mov
push
aas
popa
inc
stos
mov
push
scas
or
mov
popf
mov
xchg
inc
or
push
sub
jmp
sub
sbb
inc
sbb
ds
in
sbb
leave
pop
mov
mov
nop
mov
sbb
xchg
out
loope
lock
add
mov
cmp
fisttpl
add
jb
jbe
jl
add
push
pop
into
pop
std
dec
pop
pop
stos
aad
mov
jle
pusha
fsubrs
add
cmp
and
jmp
pop
sbb
xchg
lods
sub
cmp
test
mov
adc
cs
jl
mov
pop
sbbb
aaa
mov
push
xchg
dec
in
push
pop
or
out
pop
adc
add
jecxz
ret
dec
ss
gs
push
add
lcall
lret
mov
pop
insb
enter
jmp
push
mov
dec
shll
pop
or
movsb
gs
pop
push
stos
jge
jmp
add
or
mov
or
fsubrl
into
adc
cmpsl
push
xor
je
enter
jo
push
or
into
and
inc
arpl
addb
pop
mov
sub
xor
addr16
fs
inc
adc
pop
lods
pcmpeqw
mov
jl
jl
add
cltd
jbe
sbb
cmp
pushf
mov
jne
cwtl
cs
fnsave
push
jge
enter
test
ja
cmp
push
std
mov
hlt
cmp
hlt
inc
inc
pop
ss
test
inc
cmp
add
add
or
mov
insb
and
inc
imul
repnz
mov
lahf
aad
cli
jecxz
icebp
test
mov
pop
jmp
sti
mov
loope
aam
and
sub
dec
out
clc
push
inc
sbb
cmp
or
jo
xchg
inc
mov
inc
pusha
jbe
cwtl
add
cwtl
out
add
idivl
xor
mov
sub
lcall
xor
xchg
mov
sbb
sbb
inc
cltd
int
add
sub
add
imul
dec
add
les
or
adc
test
sub
and
and
push
adc
mov
xchg
mov
je
les
push
adc
adc
mov
push
pop
fs
xorl
popa
testl
push
andl
and
out
lret
scas
icebp
cmpsb
mov
jae
mov
cmp
movsl
or
cwtl
jo
sbb
je
xchg
faddp
cmp
je
loop
loopne
jmp
call
mov
jge
push
cli
mov
leave
sub
fisubs
xor
push
pop
jmp
nop
push
sbb
pop
rcrb
push
outsl
movsl
test
mov
fisttps
in
int3
dec
push
push
loop
shrl
stos
jg
mov
rcrl
jbe
xchg
aad
in
loope
jbe
jmp
dec
test
and
imul
gs
inc
sub
shl
cwtl
stos
jge
insb
pop
adc
cmp
or
cmc
dec
stc
inc
dec
mov
cli
cs
mov
adc
fwait
rcl
cs
cltd
or
push
push
test
imul
xor
cmc
inc
and
pop
js
cs
xchg
fwait
mov
ret
dec
or
pop
inc
popf
jne
xchg
movsl
sahf
xchg
cmpsb
pop
mov
out
cmp
jp
pop
jae
lods
inc
or
mov
add
sahf
cmp
stos
gs
sti
sub
orl
dec
lods
xor
loope
mov
aas
test
popf
fists
mov
inc
pop
ja
clc
imul
je
addl
pop
jle
stc
sbb
std
mov
out
dec
xchg
in
out
xor
add
xor
hlt
push
push
aaa
fdivr
aad
inc
movsb
lock
jne
sub
inc
jg
push
dec
imul
aas
push
mov
mov
mov
mov
testb
lret
in
popf
clc
mov
push
sbb
xchg
nop
and
sahf
sti
xor
cmp
pop
adc
mov
fwait
sbb
dec
js
shll
int3
and
movsl
jle
pop
xchg
mov
test
mov
cld
mov
fbld
ss
add
movsl
mov
mov
dec
adc
jns
jecxz
lcall
xor
sbb
sbb
jp
inc
xor
outsb
test
lods
es
sbbb
in
and
push
cmp
lahf
fsubr
ud0
and
and
adc
or
mov
mov
das
and
aam
sub
je
cmpsb
mov
lret
xchg
mov
xchg
pop
push
clc
insl
jmp
stos
xchg
push
loope
rorb
push
shlb
jnp
mov
cmp
aad
insl
popf
xor
lcall
inc
loopne
mov
repnz
fisubrs
movl
pop
cmpsb
rolb
mul
lods
ss
add
push
shrb
cmp
and
out
sbb
push
stc
js
add
adc
push
cs
stos
adc
lock
xchg
cld
pop
sub
xchg
adcb
bound
ret
mov
push
mov
sti
xor
inc
xchg
lret
mov
imul
cmp
jbe
popf
dec
into
xor
test
ficomps
aam
mov
popa
sti
insl
jbe
stos
adc
fisubrl
adc
loopne
repz
insb
jb
aaa
add
rsqrtps
push
sbbb
push
ds
stos
xor
jge
mov
jl
fbld
repnz
dec
mov
scas
movhps
test
aas
jg
mov
daa
jae
or
inc
xor
cmovne
jns
fimuls
mov
cltd
push
mov
jle
jmp
push
lock
outsb
scas
into
cmp
pop
adc
mov
leave
jl
movsl
std
sbbb
ja
stc
popf
dec
test
rcrb
loope
test
stos
adc
clc
mov
jmpw
in
cmp
mov
xchg
pop
cltd
or
mov
pop
scas
or
push
add
add
sub
cmpsl
ret
mov
or
les
std
ds
pushf
es
cli
inc
popf
sbb
nop
cmp
push
xor
sbb
lahf
sub
jno
mov
mov
add
outsb
test
ror
mov
out
pop
adc
adcl
sti
lcall
scas
xlat
jae
movsb
and
mov
lahf
mov
les
and
xor
push
cmp
or
mov
pop
jno
fwait
add
push
or
push
fdivrs
mov
cwtl
and
jl
adc
cltd
les
arpl
fidivrs
sub
lahf
pop
aad
mov
mov
sbb
cmp
stos
lret
sarb
mov
lock
jnp
jp
addr16
pop
fcom
leave
mov
hlt
lret
nop
xlat
outsb
filds
adc
pop
and
inc
and
jne
cmpsl
xor
movsb
cmp
xor
roll
gs
mov
push
test
fbld
push
mov
in
arpl
xor
sub
divb
sti
adc
jl
jne
xchg
sbb
sbb
pop
xor
imul
adc
cltd
lods
push
add
sbb
fadds
xchg
call
mov
mov
shrl
loop
and
adc
rclb
or
fstps
push
ss
loope
mov
pop
adc
xor
shr
push
fcoms
imul
sbb
cmpsl
insb
add
jns
cmpb
fldt
dec
xchg
fistl
jmp
je
addr16
leave
inc
dec
scas
add
cmpsl
adc
and
push
inc
notl
xchg
push
into
xchg
cltd
sub
xor
pop
mov
pop
and
jo
pop
mov
inc
adc
int3
push
inc
mov
mov
inc
cmp
scas
or
xor
pop
push
test
ret
adc
and
out
imul
xor
imul
mov
js
mov
add
jmp
stos
push
add
mov
repnz
in
repnz
jnp
lret
sub
sub
xor
sub
bound
addb
dec
lds
pop
cmp
leave
xchg
in
and
pop
cmp
jnp
mov
int3
sti
pusha
sbb
test
dec
sbb
mov
sbb
bound
fs
jbe
mov
int3
fisubs
pop
fs
pop
or
fidivs
sbb
adc
data16
and
lcall
out
dec
xor
jmp
loopne
xchg
iret
mov
lea
clc
xchg
popa
dec
stc
xchg
mov
adc
pusha
lcall
scas
mov
insl
ret
xchg
std
jns
xor
dec
shrl
cmp
mov
push
cs
mov
jp
insb
lret
and
jb
jb
pop
lea
aad
outsb
mov
test
scas
mov
or
add
xchg
rcr
rorl
faddl
stos
mov
push
fidivl
pop
into
pusha
sbbl
cld
iret
rclb
out
mov
fisttpl
leave
push
or
push
lea
jnp
pop
pusha
shrb
push
faddp
ret
mov
es
mov
sbb
mov
add
lea
test
and
xchg
xlat
insl
insb
outsb
daa
sbb
xchg
sub
test
flds
std
sub
roll
mov
adc
jnp
in
sbb
lahf
jp
mov
ud1
jecxz
jle
and
iret
jne
xchg
popa
adc
inc
enter
pop
push
scas
mov
fwait
jl
call
shl
adc
rcrb
subl
sahf
push
xor
xor
xchg
out
sahf
inc
test
cs
adc
jp
lods
in
into
rolb
mov
dec
mov
mov
push
js
mov
push
into
lds
mov
imul
icebp
mov
xchg
dec
movsl
cmpb
fistps
inc
lock
sbb
cmpsb
orb
xor
test
sahf
imul
dec
push
rclb
enter
mov
lret
adc
addr16
repnz
add
loop
cmp
pop
or
xor
mov
lods
pusha
aas
enter
sbb
dec
jg
pop
sbb
icebp
adc
rcrb
pop
xor
push
xor
jns
dec
mov
nop
and
in
retw
mov
xchg
pop
scas
test
sahf
pop
aas
fildl
cmp
pushf
test
push
cmc
jmp
icebp
pusha
xchg
pop
sti
push
mov
sub
adc
fldln2
add
mov
sbb
out
sub
xor
out
pop
inc
in
push
push
into
xchg
cld
or
imul
xor
aas
inc
ljmp
pop
jmp
jle
mov
gs
lods
inc
out
xlat
inc
mov
cmp
adc
in
or
inc
fwait
mov
test
filds
dec
add
cli
movsb
add
xor
mov
outsb
les
lcall
in
adc
pop
jne
and
ss
push
pop
mov
pop
enter
xor
lds
jae
and
lods
inc
inc
lods
sbb
fwait
dec
icebp
mov
arpl
lcall
and
arpl
pop
xor
mov
and
sub
xor
inc
fstpt
das
inc
sti
xor
mov
aam
jae
push
cld
xor
out
stc
fstps
push
call
cltd
sub
outsl
adc
fwait
in
add
mov
out
shrb
in
and
push
outsl
dec
lods
je
bound
mov
addl
or
lock
sub
iret
enter
jge
mov
mov
imul
mov
xchg
sbb
ucomiss
ret
ljmp
mov
or
arpl
out
repnz
pextrw
lcall
ds
cmp
dec
in
inc
push
xchg
testb
lods
incl
or
psrld
imul
mov
jb
cmc
fisubs
inc
sahf
ds
mov
and
jne
je
scas
fwait
sbb
ds
imul
jle
out
sbb
lcall
gs
jnp
sti
inc
pop
sti
push
fwait
jbe
adc
mov
inc
js
fwait
into
xor
adc
mov
mov
iret
jno,pn
add
and
gs
push
xchg
and
pop
jmp
xchg
push
jmp
hlt
movsl
scas
scas
pusha
and
icebp
pop
outsl
jbe
xchg
mov
pop
imul
dec
xor
std
stos
popa
enter
into
dec
jp
inc
mov
or
cmpsl
scas
or
repz
ljmp
mov
loope
pushf
inc
push
jmp
xchg
lahf
arpl
je
pushf
jecxz
push
add
cli
mov
or
out
ja
mov
stos
mov
dec
or
jecxz
movsb
rcl
xor
xor
and
mov
jae
out
mov
sub
lahf
in
pop
bound
icebp
pop
pop
stos
gs
insl
es
or
jge
pop
push
repz
daa
mov
cwtl
into
xchg
lahf
fdivl
iret
aaa
cmpsb
mov
xor
lods
pop
ds
sbb
loopne
mov
pop
xlat
lcall
into
push
dec
adc
dec
add
and
popf
jecxz
notl
xchg
ja
dec
push
sbb
sbb
aas
adc
cmpsl
and
lock
jl
adc
or
adc
pop
inc
and
jo
xchg
out
pusha
mov
sbb
shll
cmp
insb
jecxz
aad
xor
out
mov
fdivs
into
popa
and
sbb
or
leave
pop
loope
mov
cmp
and
xorl
inc
inc
push
int
dec
out
jbe
stos
push
sub
ret
xchg
sbb
and
ret
sbbb
out
and
jae
sti
mov
lods
cltd
fdivrs
ds
ds
adc
cmp
push
jno
rorl
xchg
ret
pop
pop
xchg
in
lods
pop
out
rcrb
cmp
cmp
mov
mov
push
pop
or
mov
inc
mov
dec
js
mov
insl
cmpsb
sbb
dec
mov
das
in
jo
lods
inc
xor
pushf
push
pop
mov
push
pop
popf
cltd
jmp
dec
mov
mov
loop
iret
sub
hlt
shl
mov
ficomps
mov
je,pn
imull
cmp
mov
push
sub
adc
std
mov
movsl
xchg
call
inc
icebp
or
lods
jmp
xorl
lret
sub
outsb
and
ss
push
xchg
ret
and
push
ds
ljmp
pushf
or
or
mov
notl
jnp
cmp
pop
xchg
jae
mov
shll
inc
lret
mov
lea
dec
push
or
xchg
fwait
lea
ds
cmp
jbe
pop
mov
rclb
ds
or
iret
xor
pop
stos
or
mov
pop
pop
xchg
xchg
outsb
jb
jmp
clc
xchg
and
enter
fisubrl
sarl
push
xchg
dec
daa
push
test
mov
sbb
xchg
cmpsl
cwtl
add
jmp
idiv
ficompl
jnp
cmpsb
out
push
cltd
inc
cli
and
ret
lret
jge
inc
dec
daa
sub
pop
stc
cmp
test
xchg
jae
mov
loop
push
loop
add
leave
push
or
cmpsb
out
mov
pop
js
sti
inc
popf
sbb
push
in
bound
arpl
xchg
pop
les
push
into
inc
jge
jne
add
xchg
xor
cwtl
mov
rcll
adc
or
mov
ret
xor
insb
mov
or
icebp
jno
mov
or
or
adcl
fisubrs
xchg
flds
pop
mov
imul
loop
ror
gs
sbb
test
pop
xchg
adc
lods
dec
sbb
sahf
scas
loope
faddl
es
ja
pop
cs
out
insl
xchg
mov
pusha
cltd
sub
outsl
insb
push
or
push
lea
lds
cs
cmp
in
adc
mov
sub
pop
leave
mov
mov
inc
mov
shrb
mov
movsb
cwtl
or
enter
pop
movsb
adc
xchg
mov
and
shrb
pop
rcrb
cltd
jmp
out
roll
ret
ret
aad
fstpl
add
cli
push
xor
xor
adc
dec
dec
push
mov
xchg
mov
sbb
lret
aas
mov
imul
pop
int3
insb
div
adc
pop
pop
out
xor
push
roll
clc
cs
loope
add
mov
xor
pop
js
mov
lds
jg
in
cmpxchg
pop
cli
js
arpl
sbb
and
cmp
lods
ret
push
sub
loope
xorl
stc
lods
mov
sub
adc
adc
dec
add
movsl
cmp
mov
or
jno
jnp
or
xor
adc
loopne
mov
sbbl
pop
testl
jl
mov
lret
adc
icebp
mov
mov
cmp
sub
sahf
icebp
dec
xchg
lahf
fbstp
stos
push
inc
pop
out
jnp
movsl
gs
or
fists
insb
aaa
inc
and
xor
push
leave
lods
stos
lcall
lds
ss
cltd
jne
cmp
mov
cmp
adc
fdivrl
pop
leave
xor
mov
gs
pop
test
sti
ret
aam
pop
aad
cmpsb
fimuls
rclb
ss
and
lret
pushf
ret
and
xchg
aam
pop
xor
in
es
push
or
mov
movsl
jnp
fdivr
fsts
mov
loopne
add
inc
loope
adc
mov
int3
jbe
or
int3
sar
incl
out
inc
or
mov
cmp
inc
xor
sbb
mov
outsb
or
inc
iret
lret
outsl
cmc
cmpsl
mov
jmp
lahf
test
adc
mov
outsl
mov
fst
dec
mov
icebp
ja
fwait
jae
sbb
fwait
mov
and
xlat
sar
movsb
popa
lahf
aad
adc
xor
push
sbb
jne
pop
cld
leave
dec
aam
jl
test
xor
lock
xor
lods
mov
mov
enter
inc
mov
push
sahf
xchg
fwait
mov
fcomps
cs
and
dec
ret
ja
add
rolb
add
xchg
mov
daa
xlat
out
pop
inc
sub
pushf
jb
jle
outsl
inc
call
cltd
mov
lcall
movsl
shrl
or
lock
lock
sbb
mov
negb
icebp
enter
lret
mov
iret
fcmovu
jns
movsb
movsl
aam
mull
bound
mov
dec
in
rorl
cmp
lods
enter
iret
outsl
std
pop
loopw
push
inc
push
popf
push
repz
cmp
iret
or
popf
mov
mov
lock
out
in
push
pop
sbb
fldl
jae
stos
int
rcrb
fcoml
xchg
dec
or
loopne
xor
pop
mov
xor
aaa
ss
mulb
xor
xchg
fwait
xchg
xchg
push
js
pop
insb
push
push
fucomi
pushf
add
cmc
lods
ficomps
je
xchg
pop
and
add
mov
xchg
ljmp
icebp
scas
jge
shll
arpl
xor
pop
cmp
jne
sbb
cltd
out
mov
popf
xchg
push
mov
push
addr16
repnz
cmp
rolb
and
sbb
lds
sbb
out
cmp
mov
lret
movsl
pop
xchg
mov
dec
lahf
xor
adcb
mov
sbb
sti
jecxz
decb
ds
shr
mov
jo
jg
jae
ljmp
test
out
scas
imul
fstpt
or
push
outsb
ja
push
mov
in
push
and
xor
xchg
mov
push
loope
mov
push
mov
cmp
call
or
push
and
inc
imul
ljmp
lock
cmpsl
test
test
mov
cld
les
mov
sahf
out
std
sub
push
outsl
push
mov
sbb
fdivrp
fisttps
cmp
ds
add
mov
repz
mov
lret
xor
push
push
xchg
cmp
inc
ds
lcall
push
or
mov
xor
sbb
stc
mov
and
push
xor
or
addr16
jge
addl
push
imul
fmuls
fsubs
xchg
sub
push
movsl
inc
mov
mov
in
cmp
pop
sbb
add
dec
icebp
ss
and
push
push
mov
mov
dec
scas
mov
outsb
jns
jge
stos
hlt
jp
mov
jl
adc
ljmp
cmpsb
rol
subl
sbb
js
insb
and
sub
and
cwtl
xchg
dec
mov
xchg
loope
movsb
sbb
jne
iret
mov
test
leave
inc
push
push
jle
sbb
lods
or
jg
imul
scas
jle
push
ds
jle
pop
mov
adc
pusha
jno
jae
lahf
cmp
sti
adc
test
cmp
xor
push
sub
cmpsl
add
jmp
jno
lods
push
mov
pop
pop
sbb
repz
dec
hlt
inc
push
icebp
fimull
add
addr16
jp
and
out
dec
jp
aaa
dec
shrl
pop
pushf
mov
ds
bound
daa
aam
imul
xor
mov
les
mov
fcomip
js
sbb
push
addl
pop
add
sti
lahf
jae
enter
int3
sub
das
sbb
divb
push
inc
mov
imull
mov
lods
jecxz
mov
xchg
fmuls
es
dec
shll
adc
bound
mov
faddp
adc
dec
dec
cmp
out
or
in
push
dec
frstor
pop
lret
mov
jp
out
inc
adc
cs
inc
mov
mov
call
fcomps
mov
add
adc
int3
pop
jg
mov
idivb
cmpsb
rorb
outsl
xor
js
aaa
push
mov
mov
int3
adc
mov
xor
pushf
mov
xchg
jne
js
enter
lock
ret
ficomps
sti
adc
shrb
ds
lcall
insl
sub
js
xchg
js
add
add
lods
pop
jecxz
das
jl
pusha
mov
es
in
pop
adc
lds
mov
jo
std
pop
loop
jmp
adc
lea
mov
sbb
mov
cli
inc
and
mov
mov
mov
push
jecxz
mov
imull
mov
dec
fisttps
inc
stos
jae
or
jne
push
or
adc
jp
cmpsb
sbbb
outsl
pop
gs
mov
filds
jno
or
mov
or
jno
sub
mov
push
dec
mov
scas
pop
das
mov
mov
out
in
ret
fstpt
and
inc
loopne
mov
cmpsb
fs
ljmp
cs
jp
lret
aad
insl
ds
mov
inc
out
hlt
and
aas
fistps
sub
rcll
subb
pop
enter
iret
adc
xor
ljmp
fnstsw
insl
mov
or
cli
xchg
imul
arpl
jp
mov
cwtl
mov
lods
lods
mov
ds
pop
push
mov
mov
pop
int3
jo
mov
push
fdivl
cmp
movsb
pop
push
sub
loope
repnz
xchg
addr16
jmp
push
dec
push
and
add
push
push
je
repz
out
push
sbb
and
repz
lret
mov
lret
lea
jbe
outsl
pusha
pop
fbstp
fsts
jl
lahf
mov
jnp
inc
sahf
jmp
and
dec
lahf
or
aas
jne
fisttpll
xor
cs
movsl
fcomps
out
test
push
fmuls
inc
jns
cmpsb
jl
or
cmc
out
fxtract
sar
dec
in
test
mov
stc
cs
nop
test
shll
add
ds
dec
sub
outsl
sahf
rcrl
mov
jns
or
sarb
ss
cli
mov
pushl
add
jnp
jo
insb
lods
out
mov
or
shlb
or
and
scas
divb
popf
sbbb
or
aaa
pop
adc
dec
cmpsb
imul
lahf
out
inc
cs
mov
jl
lods
push
push
mull
pop
cmp
xor
nop
mov
mov
out
xor
mov
mov
adc
movl
cmp
adc
and
or
in
outsl
inc
hlt
mov
pusha
sub
daa
movsl
fs
inc
loopne
sbb
inc
clc
sahf
pop
sub
ficomps
jmp
pop
pop
clc
daa
and
ret
jg
cli
xor
xchg
inc
fs
shlb
add
cwtl
fsubl
dec
cmp
movsl
push
cmp
int
icebp
adc
xor
std
sub
ds
xchg
or
and
and
push
iret
mov
repnz
lret
fs
shll
ficoms
xchg
cmpl
fidivl
cmp
iret
fidivl
pop
int3
ja
das
mov
mov
out
out
sub
outsl
insl
xor
adc
xor
xchg
outsb
cmp
lds
push
xorl
cltd
pop
jae
leave
addr16
xchg
mov
das
mov
fwait
ljmp
inc
ficomps
mov
mov
mov
insl
inc
rcr
sarl
mov
lret
inc
sub
sbb
push
bound
lods
mov
adc
sub
jmp
mov
and
out
imul
mov
scas
sarl
popl
fwait
sbb
das
pop
popa
fisubrs
out
fucomi
pushf
mov
jmp
fstpl
inc
xorb
jp
xor
repz
sbbl
and
or
lahf
xor
js
and
outsb
rcrl
sbb
mov
jecxz
insl
stos
dec
adc
cmp
out
mov
cli
and
adc
in
jne
xchg
out
cmc
pop
dec
aas
fwait
jo
ja
pop
leave
leave
mov
sbb
cmp
mov
pop
clc
out
ss
loop
loop
mulps
jb
test
cmpsb
mov
or
je
xorl
andb
lret
mov
mov
ret
or
xor
iret
fsubl
std
push
sarb
std
jno
test
int
out
jmp
pusha
mov
out
stc
inc
or
push
fsubp
lock
add
add
pop
mov
jecxz
lcall
insl
push
inc
test
ret
push
mov
lcall
jg
pop
push
pusha
push
push
sbb
push
popa
or
testb
hlt
inc
in
addb
inc
xor
jecxz
mov
call
jmp
ret
int
sub
adc
mov
int
in
fsubrs
mov
mov
pop
out
movl
xchg
aaa
push
lock
stos
mov
imul
mov
ret
add
das
popf
test
ja
inc
jl
call
push
dec
xor
sub
fstp
add
jecxz
add
hlt
ret
lods
and
mov
dec
out
xchg
pushf
or
pop
sbb
out
scas
push
and
inc
xor
pop
repnz
dec
push
add
pop
es
repz
add
lret
adc
inc
mov
sbb
lea
mov
pop
sub
aas
rclb
mov
clc
jge
and
leave
xor
pop
bnd
sub
pop
dec
mov
adcl
adc
and
sbb
popa
xchg
adc
fs
je
mov
popa
xor
sahf
cmp
inc
and
mov
loop
push
sub
shlb
dec
sarl
xchg
add
shll
push
xor
sbb
pusha
push
and
fs
fcoms
pop
push
enter
sbb
pop
push
add
cmp
xchg
imul
imul
ljmp
and
shrb
sbb
pop
pop
xlat
adc
jg
jno
xor
cli
shl
js
cmp
mov
fnstcw
jmp
and
les
into
ss
data16
sbb
inc
mov
cmc
mov
lods
mov
and
inc
xorb
sbb
and
stos
adc
loopne
aam
test
pop
xchg
div
push
fs
loope
push
xor
in
mov
sar
xchg
add
call
das
es
push
cmpsl
cmp
test
cli
rep
enter
rcr
icebp
pop
xchg
mov
mov
cmp
mov
cmp
in
shlb
xor
mov
jne
into
lods
add
and
xchg
fsubrl
out
pusha
pop
xchg
in
int
sub
in
sar
rorb
dec
sbb
repz
cmp
popf
enter
pusha
shlb
mov
cld
lods
out
or
mov
mov
data16
int3
cmpsl
adc
add
xchg
stos
sti
ud0
rcrb
mov
mov
jns
xchg
insl
push
xchg
outsb
iret
and
jl
push
add
cs
clc
pusha
cmp
into
bound
add
loopne
pop
or
cmp
adc
xor
lcall
inc
mov
pop
aas
in
ljmp
cmpsb
push
add
scas
sub
and
mov
je
or
call
push
xor
xor
aam
push
sbb
xchg
call
add
cmpsb
outsl
jg
xchg
mov
xchg
jne
inc
inc
cmp
mov
and
movsl
mov
pop
jbe
inc
pop
xchg
xlat
shl
xchg
mov
pop
scas
mov
inc
mov
je
fcoml
js
sbbl
or
clc
out
xor
push
and
int
xor
cmp
xchg
xor
inc
popa
jo
dec
movsb
or
sar
fstl
or
loope
sub
mov
dec
mov
pop
scas
repnz
iret
aaa
loopne
out
or
pop
adc
cmc
pop
popf
xchg
es
jne
icebp
int3
out
popf
xor
cmp
push
sbb
lea
outsl
jae
mov
cmp
or
adc
sbb
outsb
loopne
call
pop
push
jnp
mov
scas
xor
xchg
lods
mov
push
mov
cmpsb
nop
imul
inc
fcomps
pop
enter
sub
or
cwtl
jmp
nop
dec
mov
roll
xor
add
sbb
mov
dec
js
ja
adc
cwtl
sub
jp
sarl
lods
adc
outsl
lret
out
dec
mov
pop
enter
mov
adc
stos
in
lahf
inc
sub
xchg
mov
push
push
or
fs
ja
xchg
sub
and
add
cmp
sub
dec
push
lcall
push
repnz
fmull
out
adc
push
pop
mov
loopne
outsl
fsubs
aas
push
xor
sbb
imul
pop
mov
sub
jne
imul
push
add
into
or
lret
pop
xor
bound
cmp
fidivrs
lods
pushf
fsubs
push
mov
gs
pop
push
jns
jno
fistpl
mov
lods
mov
pushf
gs
mov
push
in
js
mov
ds
push
hlt
inc
pop
fadds
dec
fdivs
jo
xchg
loope
mov
jne
mov
dec
mov
add
pop
stos
mov
int3
mov
lock
std
lods
roll
cwtl
push
xor
mov
addr16
in
mov
xchg
push
pop
mov
imul
xor
aam
pop
int3
das
cmp
cmp
nop
inc
sub
xchg
dec
cmp
std
push
lret
call
out
arpl
cmp
stos
xchg
dec
jmp
jb
js
lods
sub
repz
pop
sbb
test
pop
jno
mov
pop
jno
sub
jg
push
arpl
sarl
pusha
cmp
int
mov
mov
pop
xorl
push
ficoms
repz
sbb
pop
push
mov
test
push
in
hlt
gs
fstpt
mov
rcrb
movsb
adc
cmp
cmp
sbb
mov
std
push
sbb
mov
add
jg
fbld
xchg
pop
cwtl
xor
cmp
xchg
and
xor
add
xchg
push
sub
loope
ss
jnp
xor
call
cmp
imul
outsl
sub
xor
add
into
jmp
xchg
inc
fmulp
or
adc
or
cli
ret
int3
mov
adc
fadd
js
mov
gs
fwait
mov
stos
lock
popf
ret
aam
push
dec
jmp
clc
pop
ja
stos
mov
jnp
insl
gs
xor
cmpsb
adc
jecxz
into
movsb
in
call
aaa
aaa
sbb
sbb
fs
mov
mov
gs
pusha
adc
push
fistps
pop
mov
stos
push
push
jmp
add
sub
dec
jno
and
aad
push
adc
dec
mov
sbb
les
mov
inc
xor
adcb
add
in
add
and
inc
popa
les
popa
add
jo
mov
sbb
add
xchg
enter
pop
adc
test
sbb
filds
out
pop
push
lret
dec
mov
jl
push
out
sti
xor
jno
fsubp
in
cld
fmuls
push
inc
mov
test
outsb
mov
ret
xlat
lret
call
xlat
test
mov
aad
pop
fldl
pop
mov
dec
iret
adc
xchg
frstor
add
es
sbb
adc
sti
push
add
and
xor
out
cltd
insl
mov
stos
sahf
adc
outsb
cmp
sbb
ds
sbb
arpl
jnp
jb
mov
sub
jl
cmpsl
inc
jne
lods
addr16
mov
cmpsl
out
test
aam
or
sub
xor
inc
dec
push
dec
add
or
and
imul
jp
push
lods
dec
and
es
loopne
test
flds
add
test
fdiv
xlat
mov
xchg
iret
std
popa
inc
pop
jle
dec
call
nop
xchg
adcb
fdiv
pushf
and
or
outsl
shrl
imul
or
out
mov
mov
xor
add
xchg
popf
or
mov
leave
fwait
outsl
aas
mov
enter
dec
sbb
test
cwtl
repz
outsl
push
scas
dec
inc
addr16
fstpt
jne
or
adc
movsb
aas
cwtl
flds
cwtl
pop
jbe
or
int3
out
call
out
and
int
jl
imul
mov
shlb
test
in
jb
lock
loopne
pop
xchg
xor
mov
in
leave
in
sarb
dec
sub
inc
mov
mov
jle
jmp
jecxz
test
mov
cmc
outsl
cmp
mov
lret
lods
push
adc
push
loope
jae
mov
add
xchg
pop
lods
adc
push
pop
mov
into
pop
fisttpl
cli
into
js
test
xor
push
out
clc
aaa
in
aam
sahf
jb
pop
lcall
inc
cli
push
fstps
and
cltd
pop
sbb
ja
sti
cmpsl
cmp
xchg
push
aaa
aaa
insb
push
rorb
xchg
or
mov
rcr
leave
in
mov
pop
out
clc
lahf
push
fucom
xchg
jbe
aam
mov
outsl
and
xchg
xorb
imul
or
dec
or
sarl
outsb
mov
test
in
clc
cmp
pop
outsb
aam
adc
ud2
stos
neg
mov
cli
fwait
cmp
repnz
jns
adc
test
stos
xchg
xchg
cmp
lods
xor
mulb
cmpl
xchg
jp
sub
jmp
jne
loopne
sbb
rorl
dec
lds
pop
aaa
ja
shll
xchg
movsb
pusha
lock
rorl
dec
out
je
mov
popf
sub
clc
xchg
fmulp
test
jecxz
inc
shll
inc
jmp
adc
mov
mov
inc
lock
int3
cmp
lods
aaa
dec
and
lds
lcall
inc
mov
push
adc
rclb
imul
xchg
mull
dec
mov
push
bound
js
lods
addr16
scas
adcl
xor
dec
mov
adc
push
cld
loopne
popa
jb
in
sbb
pop
das
sbb
es
scas
xchg
roll
dec
xor
cmp
cli
loopne
mov
and
rcrl
push
inc
or
push
ror
xchg
xor
or
ret
lds
jae
rorb
int3
jmp
dec
pop
sbb
xchg
push
xchg
into
lods
pop
outsl
mov
push
and
fidivrl
jl
stos
rcll
jo
aaa
mov
dec
push
and
cmp
push
push
aas
mov
dec
lods
lods
lcall
sbb
push
aad
sbb
fdivp
xchg
mov
and
inc
addr16
ficoml
ds
fs
dec
insl
daa
andb
and
mov
push
dec
inc
mov
inc
or
and
adc
cmp
ljmp
pushf
jbe
jno
out
hlt
rcr
pop
push
sbb
out
and
xchg
push
div
test
aas
cmp
ja
inc
in
push
pop
xchg
pushf
dec
repz
mov
and
push
das
push
jnp
test
xchg
jmp
pop
mov
push
ja
les
daa
fdivs
add
and
jae
loope
dec
imul
pop
push
push
sbb
cmp
stos
stos
enter
xor
fistpl
cs
xchg
xor
mov
popf
jl
xor
inc
pop
iret
cmp
ds
cltd
jmp
sbb
pop
gs
mov
mov
sahf
fwait
jno
adc
fcmovbe
mov
loope
and
nop
dec
cld
in
jp
lods
mov
push
stos
pop
fcomi
leave
sbb
dec
icebp
and
test
in
pop
outsl
adcb
sbb
repnz
mov
xchg
sti
hlt
adc
in
dec
aaa
or
mov
inc
mov
xchg
andb
jmp
inc
xchg
pop
mov
pusha
in
or
inc
subb
sahf
gs
dec
or
fwait
push
dec
popf
mov
sbb
mov
mov
push
add
rorl
inc
repnz
cmp
inc
cwtl
out
lahf
pushf
xor
and
out
adc
mov
in
and
xchg
lcall
das
inc
mov
adc
inc
adc
in
sub
xchg
insb
fcomps
pop
test
dec
stc
jl
adc
adc
aas
push
mov
shlb
ds
or
cmpsb
xchg
mov
dec
jns
fs
bound
hlt
jae
push
inc
rcl
pop
sub
cmovo
mov
cmp
pop
add
sarb
xor
fisubs
fldt
mov
lret
out
mov
lock
mov
lret
mov
mov
cmpsb
aaa
fdivrs
inc
pop
gs
dec
into
js
int
inc
lret
sbb
enter
call
mov
pop
mov
clc
add
or
adcl
stos
jmp
loope
inc
and
cltd
mov
jge
imulb
in
add
push
lahf
xchg
jo
or
pop
in
fld1
push
pop
ja
in
jns
xchg
sbb
addr16
gs
mov
fsts
roll
ficompl
cmp
inc
stos
lahf
int3
lds
cmpb
add
inc
add
test
add
mov
and
lahf
mov
lret
shlb
jae
jb
imul
pop
xchg
add
push
cwtl
cmp
repz
push
or
mov
insl
lock
mov
push
jle
scas
orl
inc
sub
cmp
mov
push
incl
adc
loope
mov
fs
loope
push
les
test
ljmp
push
mov
and
aad
lods
push
xchg
enter
popa
adcl
ja
and
dec
jge
cmpsl
jbe
jecxz
cmpsl
ja
or
cmpsl
mov
icebp
jmp
sub
sbb
adc
lahf
lret
mov
pusha
pop
mov
andb
filds
mov
cmpsl
mov
jo
jbe
fimull
add
pop
sbb
cwtl
icebp
mov
imul
aad
shlb
mov
mov
push
cmp
ret
and
xchg
sbb
jg
aam
rclb
sti
mov
lea
mov
popf
mov
or
lock
add
rorw
or
nop
call
jae
mov
ds
std
adc
jecxz
loope
xor
fs
ds
xchg
popa
sbb
shl
test
loop
and
or
add
cs
sub
jmp
insb
add
pop
dec
subb
cmp
pop
lds
jecxz
ds
mov
and
jnp
fldt
mov
push
adc
mov
faddp
sub
push
or
hlt
outsl
jp
lret
fwait
sbb
and
inc
xor
xor
cmp
sbb
cltd
pop
out
jns
mov
dec
pop
push
and
notl
jns
in
xor
or
xor
add
and
sahf
push
xor
add
pop
sbb
rcrl
out
pop
lret
fidivrs
sahf
lcall
mov
adc
or
pop
push
aaa
ss
iret
ja
pop
inc
scas
cmp
iret
and
leave
inc
inc
filds
in
out
out
dec
cmpb
loop
mov
cmp
andl
pop
mov
mov
in
lret
push
fmull
rcrb
cs
sbb
dec
inc
pusha
mov
mov
call
add
jmp
sub
test
push
mov
push
pop
xor
push
inc
adc
mov
fwait
test
sbb
out
shrb
xchg
xchg
jnp
out
or
add
mov
stos
push
addl
cwtl
jno
rclb
jbe
mov
or
shrb
push
lock
cmp
jmp
shrl
lcall
fdivs
aad
jg
out
les
xor
mov
or
insl
sub
sbb
xchg
testb
and
or
ds
cmc
stos
ret
cli
jae
jbe
mov
das
loopne
or
popf
inc
inc
and
movsb
dec
imul
repz
lods
mov
int3
pop
scas
cmp
fwait
aas
lods
out
fxch
scas
inc
daa
pop
lea
mov
ds
add
fistpl
daa
and
pushw
xor
mov
cmc
ja
in
je
clc
jnp
dec
dec
jle
jmp
push
rclb
popf
sbb
adc
inc
addr16
jae
sbb
cmp
lods
ret
mov
mov
sbb
pop
jns
rclb
into
jnp
lods
or
jle
dec
js
mov
out
mov
sbb
adc
mov
rcrl
pop
out
addr16
inc
add
cltd
iret
cmp
fwait
lea
negb
std
cmp
idiv
jne
jmp
pop
inc
jb
mov
lea
xchg
lahf
cmp
push
mov
sbb
mov
dec
jbe
sbb
pop
mov
imul
xchg
pop
sarl
fs
xor
inc
in
mov
mov
mov
pop
ja
inc
sub
lret
cmc
mov
sub
mov
adc
mov
lcall
insl
jg
repnz
push
lock
push
je
in
and
popa
or
mov
cmp
pop
pop
subb
push
pop
sbb
ret
mov
add
pop
adc
mov
dec
cltd
mov
popf
xor
and
shl
test
bound
addl
pop
pop
xor
pop
and
push
inc
iret
imul
jmp
scas
in
aas
lods
mov
iret
out
out
insb
jmp
fldenv
and
mov
cwtl
repnz
js
inc
in
dec
incb
adc
push
cmp
push
cwtl
aam
add
dec
bound
sbb
cmpl
pop
lock
cmpsl
sti
insb
or
gs
pusha
aad
out
push
lret
in
xchg
insb
inc
clc
cmp
jbe
nop
or
lcall
jle
pop
lds
out
repnz
pop
pop
xor
popa
pop
dec
pop
mov
imul
jnp
popf
mov
cmp
adc
stc
in
jp
mov
lcall
xor
jmp
adc
popl
imul
or
sbb
cmpb
mov
jle
jecxz
or
dec
pop
jecxz
xor
sbb
rorb
cmp
jb
jge
mov
int3
lock
inc
jns
iret
cli
pop
out
push
outsl
mov
scas
jns
mov
and
cmpl
cmp
inc
sub
jecxz
jb
dec
or
push
push
cs
push
lods
push
push
test
mov
ljmp
adc
shll
fdiv
pop
fnstsw
push
and
incl
ljmp
lea
jge
insb
jnp
and
addl
cmpb
scas
pop
test
push
pop
mov
or
out
dec
or
cmp
fstp
or
and
push
stos
xor
sarb
mov
sbb
xchg
sbb
xchg
iret
test
xor
mov
out
inc
adc
scas
lea
mov
dec
inc
pusha
jbe
ljmp
dec
mov
dec
sbb
ret
mov
das
xchg
push
lea
xchg
push
fcompl
push
aam
jmp
mov
shrb
dec
lods
mov
or
dec
pop
aaa
scas
pop
adc
sub
xor
inc
xlat
mov
cmp
sub
or
xchg
pop
push
aas
idivl
lcall
daa
imul
pop
mov
and
into
push
cmp
imul
enter
push
and
notb
jae
dec
test
xchg
pop
sbb
push
rcrb
je
clc
xchg
jge
ss
jg
push
pushf
ljmp
cwtl
test
xchg
adc
cmp
xchg
jl
idivl
sbb
vcvtqq2ps
lret
sar
xor
out
neg
test
ss
mov
sbb
cmpsl
hlt
mov
mov
shll
es
popa
call
xchg
call
add
adc
mov
ret
cmpsl
xor
inc
out
and
adc
test
xchg
inc
sub
ds
daa
fimull
sbb
xor
fisubl
rolb
cmp
repz
dec
mov
sahf
or
jno
cmp
jecxz
rol
xor
stc
addr16
sub
data16
in
sub
sbb
call
das
lret
mov
adc
ljmp
cld
fiaddl
inc
sbb
ret
fiadds
sbb
and
es
shl
cmpsl
and
mov
pop
out
pop
fistps
cld
stos
fdivl
loope
repz
sub
aam
notb
stos
mov
dec
test
xchg
addr16
daa
data16
das
daa
out
or
aas
pop
add
insl
out
in
sub
jnp
dec
dec
sarl
push
or
ljmp
movsl
xor
cmp
dec
pop
and
xor
fwait
mov
dec
cli
and
or
or
jle
push
push
fsubr
fstl
out
push
add
mov
ret
into
push
pusha
stos
add
xchg
pop
push
cs
gs
or
aaa
lds
jmp
or
nop
insl
sub
dec
test
int3
sub
mov
and
fdivs
test
adc
xor
fwait
cwtl
or
imul
repz
icebp
add
orl
adc
lods
adc
movsb
inc
sub
rcrb
jmp
shlb
jle
adc
rclb
inc
clc
lret
das
xchg
in
push
xchg
jmp
jle
xor
push
xchg
add
fsubr
out
xchg
insb
cmpsl
fcompl
sbb
cmpl
xor
inc
ret
out
inc
sbb
mov
sub
out
mov
xchg
iret
es
nop
mov
test
or
jae
inc
mov
sub
insb
or
add
jae
sbb
shl
mov
movsb
out
and
ljmp
inc
or
mov
mov
pop
fildll
out
lods
xorl
in
insb
addr16
jnp
jp
sbb
imul
outsl
or
out
inc
inc
sbb
cmp
add
pop
adc
ja
mov
rorb
or
jne
dec
inc
xchg
out
test
arpl
rclb
mov
xchg
enter
inc
pusha
nop
testl
movsl
je
sarl
arpl
inc
sub
ljmp
inc
je
in
negl
into
xchg
les
lcall
or
push
out
add
push
jl
sbb
insb
loop
test
mov
aad
sub
lret
ret
adc
sbb
imull
inc
push
jecxz
test
out
xchg
push
aaa
and
cld
int3
mov
mov
fsubp
in
out
mov
mov
pop
cld
or
mov
pop
xor
mov
pushf
xchg
daa
stos
outsb
fidivl
arpl
xchg
rclb
std
inc
jo
mov
or
add
cltd
hlt
cmpsb
aad
cwtl
push
scas
push
push
enter
lds
push
jmp
iret
stos
pop
jge
add
arpl
repnz
push
sub
daa
cmc
cmp
dec
cmp
call
loope
xchg
sti
imul
mov
sar
and
cli
cmpsb
sbb
mov
pop
lds
cs
adc
scas
mov
mov
cmp
push
add
test
push
xchg
adc
lock
and
or
or
jge
xchg
into
call
popa
push
xchg
xchg
pop
pop
lret
pop
ret
stos
sub
push
rclb
xchg
xlat
call
outsl
out
adc
popa
xorl
call
lret
mov
and
jge
ljmp
mov
sub
or
stc
lods
push
push
aam
mov
movsl
flds
xor
dec
das
pop
xor
das
cmc
hlt
icebp
dec
pop
or
dec
scas
idivw
pop
mov
stos
test
repnz
add
aam
dec
jle
push
add
cmp
clc
js
push
daa
lea
fbld
adc
lret
inc
and
mov
ljmp
inc
pop
test
mov
mov
sti
adc
orb
cld
push
outsb
subb
jl
inc
mov
gs
mov
lock
enter
aam
int3
dec
iret
pop
adc
out
adc
scas
mov
imull
enter
push
mov
mov
lahf
fwait
aas
mov
int3
mov
ficoml
sub
sahf
mov
cmp
test
inc
enter
rorl
call
fcmovbe
add
lods
daa
mov
and
repz
xchg
pop
subl
idiv
fadds
add
mov
mov
xor
xlat
mov
xor
inc
and
cmpb
push
jnp
rcrl
popf
fld
mov
xchg
mov
pop
cli
rorl
cmpsb
test
pop
push
cld
sbb
or
cmp
arpl
fwait
xor
out
out
notb
inc
arpl
inc
xor
push
aas
jno
fdivrs
mov
jnp
jle
jmp
stos
mov
clc
and
xchg
stc
xlat
rcr
ss
or
sub
dec
inc
inc
sahf
orl
push
mov
ds
in
mov
pop
call
scas
or
lea
jb
pop
dec
add
sbbb
test
pop
adc
js
mov
dec
sahf
jg
test
ds
mov
outsl
inc
test
mov
push
pushf
adc
ret
xchg
imul
sbb
sbbb
cmp
dec
imul
inc
in
dec
inc
mov
sub
ret
fidivrs
int
mov
sbb
and
ds
sahf
dec
pop
pushf
xchg
mov
adc
sti
mov
das
imul
cmp
test
ds
in
add
mov
adc
xlat
or
clc
jg
cmp
mov
cmpsl
cmp
jo
add
loop
add
lcall
cli
insb
hlt
sub
xor
cmpsb
add
or
dec
fdivr
lret
sub
sub
inc
mov
lret
push
imul
adc
lahf
push
sbb
ret
cmpsl
lock
or
in
sub
jg
hlt
push
fsubrs
outsl
lret
stos
inc
stos
repz
add
adc
push
out
jle
mov
or
scas
pushl
test
sub
imul
arpl
lahf
stos
jne
lahf
rep
das
ret
adc
inc
imul
cmp
rol
shr
cmp
bound
cmp
out
scas
andl
out
lods
cld
xchg
sbb
xchg
xchg
jge
ljmp
ret
pop
pop
mov
cli
loopne
pop
out
rcll
xchg
leave
add
leave
das
adc
mov
nop
adc
repz
fsubs
cmpsl
ljmp
arpl
inc
add
pop
repz
bound
or
pop
xchg
jmp
icebp
repz
or
int
aam
rorl
push
aam
inc
repnz
mov
jbe
push
pop
notb
sub
inc
in
cmc
mov
xor
mov
lds
mov
in
push
dec
sub
cli
push
mov
adc
shrl
repz
sahf
inc
cmp
pop
insl
das
addl
jg
add
inc
xor
out
stos
or
xor
xchg
scas
jbe
inc
popf
idivl
or
sbb
mov
add
cmc
out
mov
sbb
sbb
mov
pop
mov
dec
bound
and
fcmovne
and
xor
add
jne
inc
or
adc
in
xchg
mul
cmpb
mov
fists
mov
mov
in
cld
scas
mov
ljmp
dec
push
adc
lret
imul
subl
or
push
call
jge
xlat
pop
je
adc
leave
pop
xchg
sbb
mov
mov
int3
sub
xchg
adc
lret
xor
jge
jmp
iret
push
mov
inc
jmp
adc
push
loop
mov
fbstp
xor
cmc
push
or
add
sbb
xor
cmpsb
stc
in
fs
ja
jo
adc
jge
push
jns
ja
and
jmp
scas
mov
pusha
fwait
pop
addr16
std
dec
mov
pop
push
icebp
adc
mov
add
or
adc
rclb
add
mov
lahf
popl
jns
dec
loope
rclb
push
inc
repnz
pop
lods
pop
jecxz
jg
ret
fdivl
push
mov
adc
sti
ret
in
inc
jmp
inc
ja
cli
les
mov
sarb
mov
push
push
mov
add
rcll
push
mov
or
or
dec
in
pop
jmp
and
sub
aaa
inc
mov
inc
mov
aad
leave
jecxz
xor
loop
leave
add
jbe
andb
pop
mov
sbb
int
xor
add
push
mov
push
cmp
sub
inc
orb
imul
pop
in
sbb
mov
or
inc
xor
mov
loope
or
xchg
add
lret
add
decb
or
js
inc
loope
scas
or
cmp
cwtd
mov
ss
mov
dec
scas
lret
pop
or
aaa
mov
aam
mov
or
mov
jno
mov
gs
jmp
incl
cld
sub
dec
lea
pop
icebp
add
cltd
das
cmc
add
cld
repz
js
sbb
mov
and
cmp
shr
jbe
xlat
mov
fwait
dec
adc
stos
loopne
pop
jp
mov
pushw
aam
cli
mov
jl
mov
ljmp
out
stos
in
inc
orl
in
dec
scas
and
int
xchg
repz
push
inc
adc
fnstcw
scas
orl
call
addl
nop
lcall
das
cwtl
pop
hlt
push
and
mov
pop
test
jecxz
pop
bound
sarl
adc
es
jmp
dec
test
xchg
xor
std
or
pushf
in
scas
sub
add
ret
add
dec
pushf
jo
mov
adc
call
dec
pop
mov
mov
cmp
dec
aas
jp
adc
jcxz
popa
sti
adc
sbb
addr16
push
test
inc
adc
stc
jae
adc
add
lret
mov
lock
ficoms
add
fldl
or
mov
rclb
adc
fsubrs
out
les
mov
push
outsb
cmp
sbb
or
xchg
sbb
mov
mov
and
cmp
test
in
adc
test
imul
pushf
cwtl
xor
mov
push
cmc
cmp
xchg
stos
pop
inc
insl
mov
daa
addr16
ds
fldenv
add
lds
pop
test
push
sahf
pushf
pop
mov
mov
dec
loopne
mov
insb
jecxz
pop
adc
mov
test
les
jl
leave
push
sbb
sub
icebp
loope
fdiv
shlb
inc
repz
arpl
out
lcall
jle
or
popa
mov
aam
arpl
rolb
push
jmp
push
jge
jnp
pop
push
adc
fs
mov
outsb
dec
fwait
adc
sahf
pop
xchg
lods
add
xchg
daa
cmp
mov
aaa
xchg
push
and
jge
nop
adc
lock
aas
push
daa
test
and
rorl
push
push
ret
push
cmpsl
rclb
inc
dec
dec
jo
dec
pop
and
out
aas
mov
decb
rcll
testb
adc
adc
mov
sub
cmpsb
mov
repnz
lods
outsl
adc
pop
xor
adc
jne
in
xchg
popf
mov
pop
ret
mov
sub
lods
lahf
lds
pop
xor
pushf
mov
mov
cmp
nop
fwait
sti
mov
imul
mov
or
addl
adc
pop
repnz
imul
jo
pmullw
aas
das
js
xlat
into
lods
sub
xchg
dec
push
sahf
out
stos
iret
xchg
pusha
insl
daa
push
mov
inc
jb
cmpsb
mov
pop
stos
ss
hlt
in
leave
inc
les
mov
jg
adc
push
cli
fisttpl
shrl
sti
pusha
in
mov
jns
push
pushl
lret
pop
orb
or
in
mov
jbe
add
adc
mov
push
in
xor
fwait
or
jmp
push
imul
xchg
xchg
cld
rcrb
push
xchg
mov
iret
cmp
daa
jp
and
xor
cmp
fldenv
adc
jmp
mov
cmp
mov
mov
insl
mov
jno
lods
jae
clc
jns
push
aas
jbe
repz
ret
incb
imulb
mov
mov
pop
inc
mov
pop
mov
mov
out
push
movsb
dec
or
loopne
imul
ja
out
testl
ja
pushf
add
loop
sbb
mov
imul
pop
add
lret
das
dec
dec
mov
cmpsb
mov
adc
lods
adc
subl
clc
mov
or
lods
lock
jmp
fdiv
out
or
cmp
cmpsl
cmp
ffreep
ret
out
incl
push
mov
ret
pop
lea
ficoms
nop
ss
or
pop
inc
inc
jno
mov
mov
pop
dec
icebp
std
and
jle
fadds
mov
push
sbb
sbb
lcall
sub
jmp
lret
leave
cli
pop
js
sbbb
fildll
and
adc
cltd
push
aaa
inc
inc
mov
dec
xor
xchg
xlat
cltd
jno
lods
daa
push
cmp
sub
lea
repz
dec
rcrl
add
jmp
bound
xor
jle
add
dec
dec
les
mov
mov
mov
inc
shr
fcompl
mov
and
jno
aas
push
popf
insb
mov
icebp
adc
jb
lret
movsl
testl
outsb
cmpl
lea
call
lcall
pop
mov
popa
xchg
scas
and
mov
pop
in
cmc
cmp
dec
xchg
testl
ds
jno
mov
jmp
pop
test
lret
cmpsb
inc
push
mov
mov
leave
cltd
mov
pop
inc
cmp
jbe
stos
jae
aas
test
das
icebp
push
sub
ret
out
mov
popf
sub
xchg
out
cwtl
or
cs
xchg
and
cmc
cltd
adc
adc
test
pop
outsb
test
or
gs
orl
clc
inc
xor
mov
ja
loope
faddl
rcr
push
or
inc
xor
mov
sbb
xchg
mov
aas
shr
cli
repnz
adc
shll
dec
data16
xchg
test
jmp
ud2
repz
sbb
cmpsb
or
ss
cmc
lods
mov
xor
lock
fwait
loop
loope
jb
dec
sub
pop
pop
ja
pusha
imul
xchg
mov
mov
stos
sbb
xacquire
outsl
and
push
lea
sub
lods
jecxz
out
jnp
jb
pop
mov
and
xor
push
notb
jge
je
and
push
mov
sbb
jl
jg
fsub
jbe
fsubrs
lds
or
jge
fs
insl
pop
mov
mov
ds
fs
inc
sahf
xchg
push
lahf
cmp
inc
dec
push
test
negl
inc
adcl
lods
or
jne
pop
addl
movsl
out
pop
test
lahf
mov
xchg
nop
scas
mov
fstp
jo
je
mov
mov
push
fisubs
add
lods
out
int
sub
scas
xor
pushf
push
xor
xchg
push
xchg
cmpsb
xor
jle
mov
aas
sub
sbb
mov
or
cmp
imull
sub
xchg
xcrypt-ofb
cmpsl
out
jae
xor
xor
jns
outsb
mov
das
sbb
call
shll
cwtl
cmc
js
xlat
insb
and
mov
sbb
sbb
pop
gs
inc
sbb
mov
or
notb
out
call
lcall
push
jle
dec
dec
sbb
popf
sbb
xchg
dec
scas
adc
cmpsl
mov
or
mov
xchg
xor
mov
shlb
iret
push
mov
icebp
js
and
jecxz
notb
inc
mov
in
mov
cmp
adcb
xlat
daa
test
cmpsb
add
xor
add
insl
pop
dec
mov
inc
push
and
mov
pushf
pop
jns
adc
and
inc
mov
push
pop
loopne
les
mov
fwait
or
ljmp
or
mov
popa
pop
push
movsl
scas
jno
sbb
mov
push
pop
icebp
out
enter
push
sub
fsts
daa
cli
lock
inc
je
sbb
pop
cltd
push
xor
lods
lcall
inc
or
lahf
enter
mov
js
sbb
and
inc
adc
mov
xchg
jecxz
sbb
xor
aas
mov
sbb
cmp
cmp
mov
fcmovnu
sbb
ss
mov
iret
xchg
pop
pop
hlt
pop
insl
push
std
jo
mov
sbb
push
fs
jae
push
outsl
mov
lods
stos
mov
mov
pop
and
push
or
and
sahf
add
fcompl
jp
arpl
repnz
iret
into
cmpl
adc
mov
ss
stc
loop
cwtl
mov
lret
jno
inc
call
dec
sub
mov
dec
or
ds
jo
dec
push
xchg
push
out
inc
cmp
in
hlt
or
aad
xor
inc
sbb
xlat
dec
aam
roll
dec
inc
imul
insl
ds
je
push
mov
pop
jnp
add
in
push
sbb
mov
sbb
int3
xor
jge
pop
loope
dec
jmp
pop
mov
shl
xchg
rorb
lock
je
xchg
push
cmpsl
sbb
movsb
in
mov
mov
ret
sbb
xor
pop
push
in
pop
adcb
push
xor
cmp
aaa
sbb
jno
mov
rol
mov
xchg
pmulhuw
ret
ret
jl
xor
hlt
mov
and
pop
mov
roll
lahf
or
out
enter
clc
add
cwtl
cltd
xor
xchg
push
ret
dec
xlat
mov
push
test
mov
sub
loop
xchg
pop
sbb
mov
out
lahf
jge
add
loope
lcall
jg
hlt
ficomps
pop
xor
push
xchg
sarb
xor
jns
mov
sbb
mov
fs
dec
jg
and
xchg
fcompl
and
addr16
out
stos
sub
add
scas
filds
mov
outsl
or
ljmp
out
push
popa
addb
mov
xchg
jge
in
pop
ds
push
enter
xor
in
sub
jne
test
jnp
out
push
jle
imul
dec
inc
repz
cmpsl
stc
and
pop
mov
cmp
mov
mov
pushf
pop
lret
push
adcb
or
fbld
out
mov
aas
shlb
pop
mov
icebp
cli
movzbl
out
sahf
ret
bnd
sub
adc
cld
sub
inc
pop
sti
aas
bound
imul
pop
xor
enter
dec
jp
pusha
lcall
xlat
cld
aad
add
repz
repz
call
mov
cmp
cmp
and
popa
roll
in
jnp
fst
sahf
dec
sarl
imul
jg
ss
pushf
dec
xchg
add
pop
in
testl
or
sbb
scas
aas
lods
enter
cwtl
clc
out
enter
push
hlt
out
popa
in
enter
and
rol
sub
icebp
iret
push
call
cmp
adc
in
mov
cmp
jecxz
daa
xchg
scas
or
dec
out
dec
lret
test
sub
pusha
out
cmp
push
nop
mov
mov
daa
rcl
data16
stc
int3
jb
sub
out
mov
jp
push
inc
xchg
pop
lds
jecxz
stos
or
xor
in
insb
mov
mov
cmpl
lods
rcrl
orl
sbbb
repz
add
mov
jns
lahf
mov
inc
imul
jae
push
cmp
dec
cli
fildll
mov
inc
and
push
push
repnz
fistpl
sbb
sbb
push
adc
stos
shrb
lcall
test
xor
inc
sub
aad
sub
and
fcmovu
arpl
mov
leave
aaa
add
sbb
jg
sub
dec
imul
popf
scas
es
stos
jo
push
ret
jle
pushf
cmp
xchg
pop
sub
popa
xchg
aaa
cmpsb
push
repz
in
fadds
cmp
jecxz
jge
sbb
out
mov
xchg
loope
ds
cmpsb
jno
andl
pop
cwtl
notl
push
ds
fwait
push
in
test
xchg
inc
mov
cltd
shr
mov
das
xchg
out
mov
xorl
stos
loop
jg
sbb
mov
rorb
jne
xor
mov
jl
daa
mov
pusha
cmp
xchg
les
out
lret
int3
lds
pop
pop
arpl
test
call
insb
pop
mov
inc
cli
insl
fsubs
mov
aas
cmpl
out
inc
insb
jo
or
sahf
fiaddl
and
sbb
mov
cmpsl
repnz
lret
sub
inc
mov
or
mov
std
jno
and
mov
mov
stc
outsl
inc
push
test
pop
loope
ljmp
sub
out
gs
xor
seta
mov
push
das
push
xor
pop
pop
aaa
iret
mov
stos
jmp
adc
push
dec
shll
push
arpl
jg
or
call
add
ficoms
test
jne
fsubr
imul
lahf
xchg
inc
inc
imul
push
das
mov
mov
bound
mov
sbb
push
bound
dec
ja
ret
lret
pop
mov
cmp
xlat
test
and
insl
cwtl
pop
xchg
xchg
test
mov
in
lods
in
mov
dec
push
aaa
mov
lds
adcb
rcrl
pop
in
pusha
das
in
pop
xor
mov
xchg
push
jecxz
das
stos
negl
jns
ljmp
xchg
jb
cmp
iret
dec
lea
scas
mov
sahf
push
shrb
mov
dec
adc
sub
outsl
lea
or
sub
cmpsb
cld
cmpsb
xorb
and
testb
adc
sarl
dec
mov
icebp
mov
daa
jae
jmp
fcomip
orb
movsb
shll
aam
or
mov
pop
jno
sahf
repz
inc
mov
in
int3
mov
push
mov
mov
adc
sub
pop
loop
sub
cmp
in
push
cli
mov
out
repz
mov
cmpsw
rcrb
les
dec
sarl
gs
sbb
int3
mov
sub
xor
loop
mov
inc
mov
sbb
push
loopne
sub
mov
or
int3
repz
inc
cmc
push
inc
gs
mov
add
lret
jp
insb
fimuls
inc
jns
enter
push
inc
int
sti
dec
nop
jo
outsl
mov
test
sahf
cmp
jmp
sub
cs
jp
pop
rcrl
popf
dec
and
fistpl
nop
push
and
adc
clc
sbb
push
sbbb
mov
les
mov
or
push
fs
ja
and
push
adc
mov
add
lcall
or
test
stos
lcall
jne
pusha
adc
rcr
int3
fcmovnb
lahf
mov
rolb
push
push
shlb
jns
mov
dec
notl
scas
in
pushf
sub
adc
or
aaa
aaa
stos
xorl
je
add
dec
fsts
mov
fldln2
pop
sahf
cmp
push
jl
rcrl
jnp
sbb
das
lcall
mov
icebp
nop
outsb
loopne
mov
jo
jbe
mov
xchg
xor
mov
aad
aad
xchg
out
lea
subb
jb
and
imul
jbe
mov
dec
xchg
sub
fimull
lods
xchg
imull
daa
mov
ds
test
fiaddl
push
movsl
or
test
sahf
or
inc
inc
add
repz
xor
xchg
rcl
test
popa
cwtl
dec
inc
mov
fisubl
cmp
xor
xchg
push
fdivr
lods
push
fmuls
fsubr
inc
mov
jae
add
out
or
cld
rcrb
xchg
adcl
fsubrl
out
cmp
in
push
cli
add
inc
dec
jne
mov
lods
xchg
lods
testl
hlt
movsl
mov
inc
jp
jns
xchg
call
add
and
inc
jnp
jmp
enter
andl
fdivl
or
movsl
in
dec
stc
push
push
jns
cmp
sbb
pop
lea
inc
push
clc
test
sub
rorl
inc
js
mov
cwtl
mov
adc
gs
fnstenv
roll
int3
paddb
test
sahf
in
pop
iret
adc
pop
add
jb
bound
push
shr
mov
movsl
stc
das
mov
loope
lret
fisubl
jne
mov
stos
imul
fbstp
add
push
mov
xchg
push
notb
cmovg
mov
aad
push
inc
dec
inc
int3
xor
pusha
sub
sahf
test
or
test
sub
adc
test
loopne
mov
sub
adc
out
mov
lock
fdivs
das
lahf
loope
cltd
repnz
jns
push
mov
sbb
call
xor
call
ljmp
or
mov
sar
jmp
pop
adc
imul
cmc
pop
shlb
add
cltd
jecxz
sub
arpl
mov
dec
dec
jmp
rorl
dec
aaa
cld
test
adc
lret
stos
pushf
sbb
je
dec
inc
mov
mov
pop
pop
imul
sub
mov
xchg
fisttpl
jbe
das
lock
sbb
inc
in
clc
lret
dec
aam
cli
xchg
std
repz
cmp
daa
adc
mov
std
sbb
mov
mov
sbb
inc
jp
fnstsw
lods
jmp
push
out
xchg
cltd
pushf
adc
sub
pop
pop
lret
fwait
rclb
out
xchg
and
inc
insl
xchg
repnz
or
push
pop
mov
xchg
pusha
push
adc
mov
push
nop
sti
scas
mov
popf
xor
loopne
mulb
out
lahf
mov
sbb
popf
test
adc
pop
adc
mov
inc
frstor
les
mov
push
gs
or
repz
pushf
jmp
xchg
out
in
sub
mov
cmovle
inc
or
cld
mov
or
scas
stos
push
adc
or
lret
mov
jns
mov
adc
mov
push
cmpsb
xor
sbbl
out
mov
fwait
shr
push
stos
mov
iret
xor
jo
jl
xor
lret
or
pushf
add
pop
pushf
pop
fmuls
mov
jge
movsl
mov
pop
popf
cmpsl
movsl
pop
imul
mov
lock
push
je
fstpt
add
xchg
sbb
xor
shrb
pop
or
pop
inc
cmp
sub
call
xor
xor
cmpsl
push
push
out
aam
pop
sahf
sbb
addb
mov
mov
add
mov
pop
shlb
xchg
cwtl
icebp
xchg
cmp
ja
push
jl
push
mov
mov
cmpb
dec
jo
pop
mov
repnz
add
jp
test
les
mov
mull
jecxz
hlt
xor
xchg
pop
sbb
lods
cmp
mov
jne
jnp
in
dec
in
mov
add
loopne
pusha
jo
fucom
ljmp
orb
dec
pop
cmpsl
repz
movsl
mov
inc
int
xor
jo
pop
adc
fldcw
cmpsb
xor
push
test
das
push
aas
xor
clc
pop
aaa
cmp
xor
mov
pop
ds
push
jno
pushf
adc
adc
or
sub
adc
adc
mov
cmp
mov
inc
mov
test
mov
mov
mov
aam
inc
lcall
cmc
push
push
add
ffreep
cltd
sub
jnp
call
mov
xchg
push
add
or
sbb
pop
loop
lcall
mov
push
adc
aam
and
push
sbb
jo
lds
xchg
pop
pushf
push
push
aam
inc
rorl
cpuid
shll
mov
xchg
jno
push
push
out
es
pop
mov
adc
dec
xor
mov
push
dec
pop
cmp
mov
xor
inc
mov
sub
mov
push
in
orps
add
popa
pusha
test
mov
cmp
push
xchg
sti
gs
xchg
insl
fwait
sub
clc
fcoml
xchg
pop
adc
cltd
arpl
mov
mov
lret
pop
pusha
cmp
jne
sub
xor
std
pop
xchg
adc
cmp
pop
in
imul
cli
push
jae
mov
sub
or
mov
pop
jmp
adc
sahf
ja
xor
lea
cli
test
mov
inc
xor
ljmp
daa
lods
enter
cmp
mov
jbe
mov
push
in
ljmp
mov
fwait
cs
inc
dec
mov
rclb
test
insb
push
xchg
xchg
mov
add
popf
cltd
xchg
mov
scas
cwtl
inc
mov
ficompl
int3
pop
mov
lock
andl
inc
enter
lahf
popf
sbb
mov
iret
inc
mov
ret
rorb
int3
sbb
or
and
jl
mov
insl
mov
mov
leave
jl
pusha
sti
push
mov
push
mov
loop
ror
add
fistps
pushf
lds
icebp
fwait
jl
push
jnp
repz
and
pop
ret
cmp
add
push
and
inc
out
pushf
dec
jl
mov
push
repz
dec
push
xchg
jmp
je
dec
mov
or
mov
scas
mov
popf
inc
sbb
dec
mov
rcr
dec
cmpsl
xchg
jns
bound
sbb
pop
movsl
cmpsb
adc
shrb
icebp
or
cltd
arpl
inc
push
sti
dec
out
push
mov
sahf
cmp
cmp
enter
inc
xchg
pushf
pop
pop
adc
pop
hlt
negl
mov
push
stc
xchg
bound
push
dec
pop
or
inc
mov
mov
outsb
or
sub
stc
pusha
cwtl
push
jg
enter
sub
test
sub
test
outsl
mov
lds
inc
xorl
inc
or
mov
enter
pop
pop
jmp
inc
sub
ficompl
loope
je
push
mov
inc
cmpsl
mov
aam
aam
call
sahf
mov
andl
xor
lret
fnstcw
sub
push
scas
addr16
loope
sbb
test
daa
cmp
cmp
xchg
fsub
ret
inc
mov
sub
fcoml
repz
lds
add
adc
lds
enter
fsubrl
sub
push
jp
aaa
ret
scas
neg
jb
mov
and
iret
xchg
mov
add
pop
ret
cmp
cmp
or
hlt
cmp
test
stc
fwait
inc
cltd
add
xchg
aas
mov
lret
cltd
sub
in
stos
fidivrl
scas
jns
mov
push
gs
sub
in
pop
test
jle
jnp
lret
adc
lret
outsl
mov
popf
xor
mov
jnp
fxch
sar
lret
in
sub
call
mov
mov
pop
lods
mov
aad
pop
jl
inc
sub
xor
nop
push
faddl
cmpsb
jl
mov
les
jb
subl
mov
xchg
add
adc
adc
jmp
movsb
fdivs
push
aam
inc
push
mov
bnd
adc
daa
dec
pop
int
dec
fcomps
mov
cmp
addb
pop
ret
add
xor
scas
out
jns
das
and
or
int
aaa
repz
inc
int3
add
addl
fs
movsb
fildll
fs
pop
dec
int3
mov
lods
jb
mov
sub
jge
xchg
insb
jge
pop
xchg
mov
nop
dec
lods
dec
xor
pop
sub
psrlq
das
pushf
inc
stc
add
inc
imul
popa
lods
jo
insb
jno
sub
jo,pt
inc
aaa
clc
xchg
xlat
out
dec
insb
xor
mov
iret
xchg
ficoml
sahf
inc
xchg
ja
pop
and
mov
dec
mov
in
les
mov
rorb
push
dec
and
ret
and
mov
cmc
jo
test
jnp
shrb
cmp
and
xchg
or
adc
cmc
inc
imul
sub
subl
xor
int
dec
inc
inc
loope
rcll
shlb
bound
dec
xor
lds
jp
rcr
xchg
sub
jl
add
cld
sbb
xchg
xor
push
enter
dec
push
jnp
out
insb
add
mov
sahf
inc
mov
rclb
pop
add
lds
push
lret
and
cmpsb
dec
xchg
adc
movsb
pushf
ret
and
inc
push
nop
insb
mov
jbe
iret
data16
dec
and
fiaddl
test
mov
mov
pop
arpl
mov
outsl
mov
xor
movb
rcll
ficoms
xchg
fdivl
xchg
pop
mov
mul
xor
mov
je
inc
cmp
push
mov
pushf
scas
call
dec
add
lret
fcompl
mov
mov
mov
or
jae
xor
jne
sbb
cli
lahf
and
mov
ret
lea
int
jecxz
icebp
rolb
out
pop
hlt
push
leave
inc
dec
xchg
xchg
cltd
andb
das
rcll
sbb
mov
pop
sub
imul
fadd
push
es
imul
mov
sub
loope
jg
jl
cmp
jg
inc
faddl
addr16
lcall
push
cmpps
adc
outsl
push
loop
imul
imul
ss
push
jmp
nop
mov
enter
cmpl
mov
loopne
pop
icebp
xor
scas
push
insl
dec
loop
mov
int
mov
jne
rcll
sub
outsl
push
xor
nop
cmc
jns
sbb
out
rcrl
xchg
insb
lods
popf
jg
sar
cmpsl
fwait
out
in
in
and
xchg
adc
adc
mov
shl
cmp
je
or
mov
xor
sub
mov
adc
adc
jg
lds
lea
xchg
mov
or
push
sbb
cmp
stos
jns
dec
ret
clc
fadd
aad
sub
out
dec
fisubrl
cli
xor
xor
push
sub
xchg
outsl
pop
sub
icebp
imul
divl
jmp
pushf
sarb
sub
adc
push
pop
mov
dec
push
dec
mov
pop
fsubrp
push
xchg
add
xchg
popa
or
xchg
sbb
cmp
mov
pop
mov
sbb
mov
add
jae
call
movsb
sbb
xchg
xchg
push
mov
pop
hlt
ret
push
mov
int3
imul
aaa
ficompl
push
xor
inc
xchg
in
icebp
xchg
ds
xor
aaa
xchg
push
adc
js
xor
loop
push
xlat
in
mov
es
cmpsb
mov
or
fdivrs
pop
insl
pop
out
jl
push
loope
jns
sub
and
mov
and
rcll
pop
sarl
lods
sub
mov
pop
mov
test
imul
cmp
enter
add
in
pop
lods
cmp
mov
je
mov
inc
lds
mov
out
mov
mov
dec
scas
shr
fisubl
loopne
dec
sub
cltd
sub
jmp
aaa
cmpl
js
cmc
and
jmp
insb
or
mov
test
add
mov
gs
inc
call
pop
std
mov
out
stos
mov
cmp
push
popa
and
into
xor
insb
arpl
repnz
pusha
filds
jne
aad
adc
cmp
inc
xor
testb
mov
aaa
fmul
outsl
mov
dec
pop
push
mov
test
jl
xor
push
sbb
orb
dec
lret
clc
outsb
gs
fists
cmp
andl
lods
jl
mov
test
adc
xchg
pop
test
push
jae
shrl
add
ja
adc
aad
push
mov
push
mov
push
xlat
pop
out
pop
cwtl
arpl
lods
mov
sbb
mull
fs
shll
out
addl
or
leave
xchg
push
es
mov
hlt
sbb
jp
aaa
pop
dec
xor
mov
lods
out
test
pushf
aam
cmp
inc
sbbb
imul
or
mov
int3
sub
adc
cmp
movups
jp
popa
or
adc
bound
stos
into
dec
into
icebp
sub
fnsave
jbe
jne
iret
scas
or
mov
rorl
addr16
sti
bound
mov
mov
fs
and
enter
les
add
and
ffreep
add
push
leave
push
push
xor
hlt
dec
jg
inc
mov
shlb
fyl2x
leave
data16
jge
add
jno
pushf
fwait
pop
inc
adc
js
xchg
or
mov
push
icebp
push
dec
dec
fcmovb
sub
or
cmp
adcb
xchg
sbb
jg
mov
or
ficoms
fildll
ret
sbb
rcrb
sub
pop
xchg
push
jp
xchg
les
or
cmc
inc
sahf
faddl
dec
ljmp
stos
dec
icebp
aad
scas
cmpsl
add
adc
mov
jecxz
jl
scas
adc
xor
sbb
outsl
pop
sub
mov
cmp
fistpll
inc
xor
es
xor
mov
arpl
pop
add
insl
lock
xchg
pop
xor
jmp
xchg
mov
add
adc
xchg
jns
adc
mov
aaa
jp
outsl
push
xor
pop
into
mul
inc
aas
out
cmp
cld
mov
sbb
lea
mov
in
lock
cmp
loope
cltd
mov
lcall
out
dec
dec
int3
mov
sbb
std
movsb
sub
gs
inc
lods
and
mov
lret
sub
negl
cmp
mov
mov
repz
int3
sub
sbb
xor
imulb
xor
std
nop
lret
testl
decl
mov
pop
mov
jge
hlt
cld
jns
iret
dec
rcr
mulb
pop
faddp
les
jns
addl
ljmp
pop
in
xchg
mov
adc
cmp
push
testb
pop
scas
neg
bound
aad
pushf
rcrb
repz
cmpsl
out
daa
sbb
add
pop
inc
push
mov
dec
aaa
and
dec
or
jae
int
fs
sar
fsubrs
subb
push
cs
cli
or
or
pop
inc
xchg
rolb
jle
popa
cli
mov
fidivl
hlt
movsb
add
jle
cmp
mov
pop
paddusb
push
mov
push
mov
and
cltd
xchg
call
fnsave
mov
cmp
repnz
pop
sub
loope
out
daa
mov
dec
sahf
pop
mov
cwtl
fists
pop
dec
push
movsl
test
dec
inc
mull
xchg
dec
mov
aas
mov
push
movntps
aad
stos
rorl
sub
dec
scas
pusha
adc
aas
adc
popf
and
in
dec
call
pop
dec
fcoml
gs
inc
push
roll
pop
pop
push
and
mov
jb
mov
fdivrl
or
dec
test
xor
xchg
add
mov
xor
sub
shlb
repz
movsb
adc
jmp
cli
scas
adc
aas
cmpsb
mov
add
mov
ljmp
fwait
movsl
fadds
aad
and
and
adc
jmp
push
mov
cmpsb
dec
add
loopne
mov
mov
rorl
loope
sbb
insl
xor
jp
xor
fistl
movsb
xchg
mov
xor
out
dec
aad
and
jnp
jp
negb
cmp
ret
icebp
xchg
adc
inc
jle
xor
enter
mov
sub
adc
js
pop
mov
repnz
push
push
mov
aas
int
jg
das
mov
repnz
pop
or
je
addr16
repz
sti
mov
xor
rcrb
outsb
add
imul
xchg
push
scas
push
lds
addr16
insb
lea
scas
add
xorl
inc
sti
and
adc
getsec
add
cmp
icebp
inc
cmpsl
mov
dec
sti
xlat
iret
fimuls
stos
fisubs
jns
push
mull
xchg
jb
cmp
mov
mov
push
pop
cmp
mov
hlt
clc
stc
sub
pushf
dec
or
test
mov
mov
mov
test
jbe
outsl
jne
rcrb
push
lods
cmp
inc
push
aad
lds
nop
xchg
ss
and
push
jae
and
xchg
jae
xchg
fbstp
push
popf
mov
pop
adc
dec
pop
loope
fcom
inc
int3
clc
and
xor
jle
les
jbe
clc
push
sbb
icebp
jnp
add
sti
jb
test
outsl
pushf
sub
cmpsl
fstpt
fwait
pop
add
push
icebp
sub
xor
cmp
js
sub
inc
jns
xchg
movsl
ret
push
and
cmpsb
mov
ret
mov
jp
in
mov
addr16
pop
cmpsl
ret
mov
data16
fimuls
pop
dec
loopne
in
cmp
incb
mov
mov
lods
lock
ds
push
in
mov
daa
cmp
loope
sahf
sub
dec
mov
fstl
leave
in
out
dec
and
dec
stos
xor
out
xchg
sub
push
fildll
mov
movsb
arpl
stos
and
loopne
xor
mov
repz
test
fidivl
push
sub
out
mov
outsl
cs
inc
into
pop
xchg
jp
popf
dec
xor
xchg
rorb
xor
mov
arpl
aad
add
xchg
or
repnz
outsb
iret
mov
fistpl
mov
dec
shll
or
lret
es
popf
lcall
jle
adc
std
xor
rep
scas
sahf
inc
inc
movsb
push
dec
mov
rclb
mov
nop
pop
and
inc
jne
dec
cmp
out
mov
or
rolb
retw
cmp
mov
push
enter
mov
lock
mov
lret
add
fwait
add
rcrl
cmp
fsts
outsb
inc
xchg
lods
in
lcall
nop
orb
rcll
cmp
aaa
inc
fstpl
pop
add
pop
mov
add
ja
or
loopne
sti
jp
sub
cmpsl
cmpsb
jae
and
adc
sbb
sub
inc
inc
icebp
lret
fwait
push
xor
mov
mov
sbb
xor
out
cli
xor
into
outsl
mov
cmp
gs
sahf
inc
push
mov
fmulp
sbb
lret
loop
out
adc
or
int
and
les
sub
add
cmp
mov
cmp
inc
mov
in
xchg
es
movsb
mov
and
andl
jecxz
dec
and
sbb
imul
int
push
mov
xlat
std
stos
and
in
and
ret
or
mov
das
dec
loop
out
insl
shll
xor
fmul
xchg
test
mov
pusha
add
pop
iret
mov
cmpsb
and
dec
arpl
data16
and
add
stc
mov
std
sbb
call
mov
add
add
mov
sub
leave
push
mov
mov
or
test
pop
loop
adc
cmp
mov
inc
inc
aam
push
roll
jmp
adc
pop
insb
pushf
test
sub
jecxz,pt
out
dec
out
dec
adc
push
icebp
cmpsb
cmp
es
iret
out
cmp
pop
cli
fcmovnu
rclb
stos
hlt
cli
add
fwait
push
out
shl
jns
sbb
rorl
mov
xchg
push
mov
cmp
test
lcall
loop
mov
lahf
popa
fimull
imull
shlb
int
sbb
or
scas
orl
test
mov
fwait
mov
jb
push
xchg
dec
mov
out
les
scas
xor
push
xchg
out
jge
nop
push
sti
fiaddl
cmp
pop
pusha
add
cmp
push
push
pushf
test
pop
enter
pop
fs
sbb
xchg
push
pop
inc
aam
lret
dec
jmp
mov
push
xlat
mov
jmp
push
cmp
wrmsr
pushf
shll
sahf
test
sbb
lahf
mov
jp
mov
out
push
rcrl
std
push
push
in
test
mov
mov
jnp
xor
lret
test
xlat
dec
mov
mov
push
or
and
ficoml
ret
insb
inc
out
aaa
push
orl
adc
push
push
add
cmpsl
daa
or
cltd
ds
push
nop
fcoml
imul
jge
lret
rclb
xchg
notl
xchg
fsubr
xor
das
insb
xchg
sbb
fbstp
sarb
aam
in
dec
aad
inc
leave
popa
rorl
das
cmp
mov
negb
out
mov
div
lcall
mov
add
loope
test
mov
sub
rcrl
mov
mov
dec
mov
daa
aam
pop
and
enter
inc
or
dec
jg
flds
cs
mov
inc
lds
jbe
cld
jmp
dec
not
sub
scas
into
repz
mov
pop
cmpsb
mov
mov
adc
fnstcw
mov
xchg
cmp
loopne
inc
fsub
clc
mov
push
scas
into
stos
xlat
sub
aas
or
icebp
pop
lea
int
ljmp
les
jecxz
ss
add
dec
aaa
sub
jnp
aas
or
int3
mov
aaa
xchg
sub
sbb
jnp
sbb
xor
xor
dec
in
adc
popf
adc
scas
pop
in
mov
jmp
add
push
inc
xchg
xchg
test
sbb
inc
and
mov
push
stos
repz
xchg
enter
daa
cli
and
cmp
mov
sub
xor
and
sbb
mov
inc
cmp
cmp
fisttpl
cltd
nop
in
sbb
jg
in
push
mov
movsl
mov
cmp
inc
sbb
xchg
mov
or
jnp
or
sbb
mov
leave
pop
stos
enter
mov
xchg
cmp
imulb
pop
sarb
dec
insl
pop
mov
push
scas
sub
dec
cmpsl
ret
mov
addb
jne
imul
shll
jae
into
sbb
or
sbb
cmp
mov
fidivs
arpl
xor
movsb
repnz
ss
mov
inc
sbb
mov
push
mov
xor
out
sbb
cmp
iret
aad
sbb
movsl
lock
out
sbb
push
out
imul
mov
mov
mov
sub
sbb
addr16
or
test
sbb
sahf
outsb
pusha
popf
dec
xchg
dec
cwtl
xlat
call
insl
sub
inc
leave
ss
push
in
aas
xor
cs
shrl
movsb
jo
inc
iret
xor
mov
in
into
add
or
push
add
rcrb
mov
sub
add
ss
xorb
cmpsl
inc
pop
shlb
out
ds
pop
or
add
push
pushf
cmp
mov
xchg
mov
inc
lods
pop
icebp
and
test
dec
and
dec
jg
mov
cwtl
xchg
sbb
insl
fnstenv
and
out
arpl
fidivl
loopne
pusha
aad
jno
xchg
adcb
xorl
xor
movsb
out
out
lods
enter
push
jmp
cli
shlb
mov
cmp
and
gs
aaa
stc
push
sub
arpl
mov
sbb
test
mov
and
call
lea
inc
in
sub
jno
mov
jmp
jge
arpl
imul
ss
ja
popa
lcall
and
cltd
pop
rolb
dec
outsl
imul
mov
hlt
inc
or
jbe
dec
aas
clc
mov
mov
lds
sub
mov
dec
xor
mov
pusha
popf
rcl
and
js
orb
mov
roll
insl
sbb
loop
ror
mov
fbstp
stos
test
sub
iret
pop
pop
in
jne
cwtl
and
sahf
and
mov
cmpsl
mov
cmp
pop
pop
sbb
clc
test
fwait
out
rolb
sub
mov
sub
sub
push
fnop
cmp
xor
sarb
dec
jmp
leave
movsl
pushf
jge
out
les
inc
mov
in
out
sub
je
aad
sarb
adc
and
js
sbb
movsb
leave
jnp
gs
fstps
cmc
pop
push
sti
icebp
fldenv
rcll
repz
shll
movsb
lods
lret
rcr
add
sbb
add
xor
ja
rorb
mov
xchg
sbb
mov
sbb
add
add
cmp
mov
mov
xchg
push
xor
packuswb
in
push
sbb
sbb
pop
adc
sub
push
sar
adc
adc
int3
stc
in
or
lcall
dec
call
xchg
dec
sub
push
mov
out
pop
movsb
jecxz
lahf
mov
push
ret
pop
iret
in
rcl
js
push
in
sbb
nop
or
and
scas
sub
clts
xchg
maxps
pcmpeqb
pop
push
repz
sbb
sub
mov
pop
push
sbb
push
push
cmp
dec
push
je
in
rcrb
scas
insl
or
arpl
in
cmp
dec
pop
daa
pop
stc
or
in
sbb
xchg
aad
jg
mov
push
push
or
lea
mov
test
js
adc
loop
mov
inc
push
movsb
or
pop
lcall
clc
int3
cltd
pop
lds
sbb
jbe
ja
out
bswap
enter
inc
aaa
adc
movsl
out
stos
loopne
ja
fisttpll
int3
adc
jp
cmp
movsl
out
or
cmpsl
lahf
ficoml
mov
jecxz
cli
push
fwait
xchg
xor
ljmp
rcrb
xor
sub
pop
call
pop
arpl
test
ret
inc
cmp
pop
or
push
stc
sysexit
cmp
daa
jbe
lcall
mov
movsb
xor
and
and
push
xchg
ficoml
insl
push
mov
shll
push
fwait
pop
pop
dec
adc
or
lock
mov
faddl
cmp
lock
push
sbb
add
fldt
sar
or
dec
aad
push
push
mov
or
or
in
fidivrs
sub
pop
leave
sub
dec
fwait
hlt
aas
xor
lahf
shrb
and
addr16
xchg
push
inc
mov
pop
inc
jnp
aam
sahf
pop
je
pop
int3
icebp
das
aaa
pop
jbe
sar
or
cmp
add
ja
inc
mov
jno
or
or
gs
test
test
mov
push
movsl
fsubrp
jnp
push
inc
jnp
mov
aam
add
cwtl
add
sti
je
push
jne
pop
mov
add
push
xor
or
scas
sbb
popl
xchg
cmpsl
or
test
sbb
cltd
pop
jns
insl
daa
inc
fs
inc
addl
fidivs
dec
pop
or
ljmp
dec
dec
stc
push
cmc
pop
outsl
stos
mov
push
insl
out
std
xor
cwtl
mov
aaa
ss
xor
data16
stc
xor
push
jl
scas
shl
ret
fistpll
push
pop
fldt
outsb
int
cmp
test
xchg
in
xchg
mov
pop
sub
out
fnsave
movsb
xchg
cmpsl
stos
js
dec
test
jl
mov
cmpsl
sti
rcll
lock
enter
cwtl
int
sub
lock
jg
dec
loopne
test
into
cmp
xchg
dec
inc
imulw
mov
adc
mov
mov
inc
rorl
out
cmpsb
sarb
je
orb
sbb
mov
iret
gs
cmpsb
sub
repnz
push
push
and
inc
adc
enter
std
fdivl
xor
lahf
jecxz
xor
adc
xchg
das
repnz
xor
or
aas
fbstp
in
outsl
jle
andl
notl
jmp
fadd
mov
ljmp
mov
popf
sbbl
inc
test
inc
sarb
pop
lret
mov
std
jb
mov
and
std
cmp
fmul
xchg
cmc
or
sar
mov
test
imul
clc
fidivl
je
roll
ss
sub
inc
mov
pop
fisttps
dec
ret
xor
jp
jle
fstpl
mov
jae
scas
aad
mov
push
lds
lock
adc
mov
jge
mov
and
or
insb
xchg
sub
in
into
outsl
fcomip
cmp
or
cmp
jl
mov
pop
mov
ret
cmp
dec
push
dec
mov
cmc
or
or
mov
shr
cmp
rep
cmp
mov
repnz
cmp
xor
mov
xchg
scas
fstpl
addl
sbb
pop
stos
repnz
punpckhdq
cli
test
push
mov
ljmp
xchg
dec
jp
mov
fildll
orl
sub
jb
lods
xor
sub
jecxz
jmp
movb
shrl
dec
add
cld
xchg
jle
in
fldenv
cmp
hlt
lcall
pop
pop
lds
jge
push
ljmp
jecxz
shll
mov
cmp
sbb
out
add
xchg
fstpl
call
repz
xchg
push
or
jne
lock
js
add
shll
scas
mov
rolb
jg
pushf
mov
sub
pusha
testb
outsb
popf
and
int3
je
movsl
add
mov
out
sub
xchg
pop
mov
lret
fists
pop
fldcw
int
jge
jmp
gs
cld
and
ss
mov
mov
icebp
or
gs
lea
fwait
testl
mov
lds
movsb
inc
mov
idivb
repz
fwait
mov
xchg
jecxz
fs
sti
negl
imul
cmp
sahf
rcrl
sti
or
cmpl
jo
jno
xor
cmp
push
cmp
sub
or
pop
mov
setb
and
inc
pushf
push
mov
xor
scas
shr
adc
sarb
mov
adc
pop
pop
adc
cmp
jno
iret
and
cmp
cmp
fmuls
inc
xor
out
sub
or
jmp
sahf
xor
cmc
mov
mov
cmp
addr16
cmp
adcl
jnp
push
cmc
pop
daa
add
mov
dec
outsb
xor
ret
ss
ficomps
and
sti
sti
cltd
pop
adc
sub
aas
adc
cmp
dec
mov
inc
push
dec
cmp
aad
xor
movsb
push
jg
push
fldenv
movsb
mov
lods
push
popa
leave
jns
outsl
cmp
jl
inc
insl
mov
shl
push
rorl
sub
push
dec
ret
cmp
mov
adc
cmp
adc
shrl
test
add
lahf
ret
fmuls
xchg
and
xchg
fdivrs
xor
dec
and
jns
cmpsl
push
xorb
lods
and
xchg
sub
shll
pop
daa
movsl
dec
outsl
mov
das
aam
xchg
xlat
flds
mov
fadd
xor
aam
jno
push
pop
fcmovnb
xchg
ljmp
mov
or
out
pusha
adc
sbb
rcl
xor
or
xor
in
icebp
mov
xor
xchg
aas
lea
mov
add
clc
out
or
mov
jne
idivb
mull
stc
sub
das
rcrb
call
jnp
inc
adc
sub
pmaxsw
add
ret
jno
pop
pop
pop
xlat
je
cs
sbb
pop
sub
cwtl
in
or
daa
stos
aaa
inc
sarb
mov
test
fadds
fabs
mov
int3
mov
notl
cmp
pop
and
mov
stos
scas
pop
xchg
fmull
push
pop
pop
punpckhbw
add
sub
xor
sbb
decb
push
adc
cmpsl
cmp
insb
ljmp
nop
aas
mov
sub
mov
mov
or
xchg
or
mov
cmpsb
mov
push
xchg
xor
mov
das
rorb
ja
xchg
push
loope
add
mov
mov
es
sbb
mov
mov
push
sub
adc
dec
jne
jg
pop
mov
push
in
lea
inc
push
cltd
ret
out
add
or
or
aas
cmpl
sbb
out
in
aad
or
mov
imul
inc
scas
sub
ret
popf
sbbl
dec
mov
hlt
add
push
sysret
pop
mov
inc
jg
dec
nop
popl
push
leave
mov
das
mov
xchg
inc
jnp
ss
sbb
divl
jp
cltd
shl
mov
subb
and
stc
xlat
mov
cwtl
push
xor
xor
hlt
pop
leave
shl
out
push
popf
movb
testl
adc
js
xchg
fnstenv
fstpt
es
ret
mov
pop
dec
mov
out
adc
xor
jae
test
dec
push
repz
cmpsb
sbbl
dec
sub
pop
jno
imul
cwtl
shrb
filds
call
or
mov
jbe
mov
cmpsl
xlat
xchg
int3
loopne
js
aaa
adc
jmp
mov
fdivrl
rorl
xlat
mov
xchg
push
pop
push
jecxz
hlt
data16
test
pusha
dec
sbb
lcall
xchg
xchg
cmp
lds
leave
pop
nop
add
add
outsl
push
mov
rcrl
cltd
cld
call
xchg
jmp
mov
shrb
int3
enter
insl
mov
ficoms
push
mov
dec
inc
iret
popa
aam
push
in
and
push
pop
mov
pusha
sti
popa
and
jns
sbb
lds
loope
jp
mov
pop
push
dec
daa
push
dec
lods
jp
cmp
popf
imul
pop
or
leave
fisttpl
mov
dec
test
loop
mov
popa
pop
lcall
push
cli
push
xor
stos
and
xchg
pop
fnstsw
or
cltd
aam
addl
fdivrs
test
rolb
inc
lods
cmc
hlt
aam
inc
loope
sti
cld
movb
lock
push
add
sub
mov
repz
xchg
xchg
out
sub
xor
adc
cltd
cmc
out
hlt
push
push
ucomiss
cwtl
push
or
shl
mov
mov
sbb
push
jno
push
push
and
sub
je
sub
cmc
leave
lds
or
adc
and
fildll
mov
sti
mov
js
in
adc
mov
shlb
jb
xchg
add
rcl
outsb
clc
insl
dec
fisubrl
repz
int3
out
cwtl
inc
xor
adc
and
xchg
lods
pop
mov
popa
inc
adc
mov
or
lret
in
xchg
stc
decb
nop
jl
add
inc
mov
adc
sbb
test
aas
es
and
sti
sbbl
lods
in
pushf
dec
aas
xchg
mov
fnstenv
pop
pop
test
mov
into
inc
icebp
in
add
and
and
sti
ret
xchg
mov
xor
dec
adc
jl
lahf
sahf
fimuls
lods
pop
pop
mov
jae
mov
loop
ss
pop
sbb
xchg
dec
mov
jg
push
add
xlat
fmuls
adc
lods
stos
test
daa
mov
xor
rcr
leave
idiv
ret
js
mov
or
ret
scas
mov
lret
test
ljmp
mov
sub
xorb
fistps
jecxz
push
fstps
and
push
ds
add
mov
testl
incb
and
sub
imul
xlat
stos
jbe
dec
xor
cmpsl
push
jl
push
sbb
fldcw
repnz
push
imul
xor
movsl
xchg
psubsw
data16
in
into
add
or
cmc
arpl
sbb
in
pop
andl
test
pushf
dec
adcl
dec
inc
mov
xchg
stos
xor
and
test
aad
add
adc
enter
faddl
aaa
xor
or
or
dec
insb
cwtl
loope
jns
addr16
imul
push
notl
push
xor
fs
insl
cld
sub
xchg
xchg
loop
iret
xchg
jne
stc
in
sbb
xchg
inc
push
fstpl
popa
sbb
mov
pop
dec
cmp
pop
push
inc
add
jae
or
loope
xorl
add
adc
jae
or
push
xchg
je
fcoml
mov
lods
and
aam
jb
fsubrl
mov
stc
lret
adc
xor
roll
stc
jp
inc
and
ret
insb
imul
add
mov
mov
or
add
int3
sbb
scas
stc
push
sbb
xchg
mov
mov
mov
ret
dec
js
icebp
or
testb
clc
nop
add
loope
sub
repz
pop
imul
cld
inc
push
push
sub
xlat
ficoml
sbb
mov
fldt
cld
jae
mov
jno
scas
ss
es
lds
sub
leave
std
cld
mov
test
lock
pop
aaa
xor
and
test
or
aaa
jl
test
xor
push
lret
mov
insl
jge
flds
jg
jns
xlat
rclb
or
pop
mov
inc
cmp
xchg
cmpsl
test
xor
rcll
pop
arpl
pop
stc
mov
js
mov
xchg
xor
cli
imul
inc
pop
sbb
adc
stc
mov
std
lds
and
mov
imul
lcall
or
mov
push
sub
mov
je
repz
in
inc
jle
jns
movsb
shlb
xor
ljmp
xchg
lds
pop
push
jns
pusha
sbb
jecxz
mov
sub
push
pop
sub
mov
xchg
xorb
push
pop
popf
repz
sub
iret
aam
pop
pop
jne
int3
orb
hlt
sbb
addr16
imul
in
jl
aaa
test
int3
mov
mov
pop
push
in
mov
push
lahf
jmp
mov
mov
fwait
pop
or
daa
sti
mov
mov
mov
lahf
and
fistpl
rcrl
mov
ss
ds
or
pop
pop
insl
fidivl
xchg
xor
lods
pop
sbb
ljmp
sub
mov
jne
mull
test
fsts
fidivrl
cmp
push
aad
imul
or
adc
adc
push
mov
aaa
idivb
mov
mov
pop
ret
lcall
add
imul
shll
adc
mov
fidivl
in
inc
lods
aaa
imulb
call
pop
movsb
test
aaa
lahf
shrl
cmovne
pop
js
rol
sti
in
sub
inc
add
imul
push
leave
rolb
or
test
push
sbb
or
ret
pushf
mov
inc
lods
dec
mov
dec
and
xchg
jb
loopne
and
mov
mov
mov
out
pop
insb
jl
xchg
iret
jno
or
mov
call
mov
sbb
int
cmp
xchg
and
dec
pop
lds
xchg
jo
mov
negb
scas
mov
cmp
test
insl
sbb
into
enter
pop
cltd
mov
cli
or
push
outsb
pushf
dec
adc
fst
iret
dec
jno
cmc
xor
dec
lret
pop
mov
pop
jns
dec
push
rolb
shll
mov
loope
lods
flds
ret
adc
dec
imul
or
test
dec
int
mov
repz
jo
popf
cmpsl
mov
adc
push
push
add
xchg
addb
jecxz
push
mov
jl
sub
sbbl
test
int3
push
dec
std
push
fnstcw
and
xor
sub
out
xchg
popf
jno
sar
and
or
xorb
cmc
xor
pushf
addr16
mov
aas
xchg
adc
pop
dec
xchg
pusha
or
fwait
aad
xchg
mov
test
add
xchg
jbe
mov
lods
mov
mov
push
ficoml
clc
lock
cmp
daa
xchg
rorb
or
push
mov
inc
adc
mov
into
imul
xadd
xchg
xchg
movsl
js
ljmp
inc
xor
in
and
mov
cmp
xor
sub
testb
inc
cltd
cmp
jge
xlat
or
cmp
pusha
std
jbe
out
out
jl
pop
lret
lock
cmpsl
scas
in
adc
stc
mov
and
sbb
mov
push
std
mov
push
es
repnz
aas
iret
das
pushl
mov
test
mov
shlb
test
faddl
push
inc
les
in
cld
in
test
inc
arpl
iret
jg
lcall
mov
int
rcrl
out
test
mov
das
arpl
daa
jmp
xlat
add
dec
lods
rolb
sub
in
dec
xchg
xlat
lds
std
push
and
mov
ljmp
inc
fs
jb
xor
add
nop
bound
fninit
mov
rcll
in
mov
sub
mov
rclb
rolb
push
leave
xchg
and
fiaddl
outsb
mov
dec
sbb
aaa
and
inc
in
cli
xchg
fs
or
push
loopne
sub
pop
clc
jae
fstpt
push
sbb
jle
test
push
xchg
dec
out
in
aas
test
jb
js
ret
sub
ret
xor
std
loopne
push
ret
aaa
rclb
mov
fldcw
mov
mov
les
push
aam
ss
inc
jle
pop
sti
cmp
mov
insb
fwait
or
pop
dec
imul
xor
jg
ret
sub
mov
fnstsw
mov
xlat
xchg
mov
cwtl
mov
outsl
push
cmp
or
xorb
out
pop
add
inc
xor
in
out
std
jecxz
or
loop
add
fnstsw
inc
mov
inc
inc
adc
imul
cltd
loop
cmovno
adc
repnz
pop
mov
imul
addr16
out
fcompl
jb
lret
subb
fistpl
push
out
leave
sbb
dec
test
stos
mov
inc
repnz
mov
mov
aam
es
mov
add
or
cltd
sbb
insl
rcll
jbe
jne
pop
mov
mov
xor
or
adc
lock
mov
cmc
push
rclb
inc
xor
stc
mov
iret
mov
insb
dec
mov
mov
jne
std
sub
inc
data16
stos
sub
das
mov
pop
aaa
pop
shr
and
shl
push
mov
push
or
std
out
stos
fcmovb
fldenv
inc
xchg
leave
mov
sub
xchg
scas
push
fmull
out
or
jbe
shrl
rcll
xor
rcll
lcall
fs
loop
je
pusha
imul
in
addr16
cmp
mov
das
pop
xchg
icebp
andl
xchg
insl
imul
dec
lret
cmp
in
fstpl
mov
int3
dec
mov
mov
pop
stc
fldt
fmull
xchg
xchg
xor
jnp
ja
cmpsl
movb
outsl
xchg
dec
ret
mov
fistl
mov
push
sub
xchg
addr16
push
jo
sbb
sbbb
push
cwtl
jo
loope
inc
daa
aaa
xchg
dec
add
sbb
adc
in
hlt
imul
jbe
pop
lcall
cmpl
stos
xchg
pop
xchg
ret
jmp
inc
orl
push
push
popf
mov
adc
push
rcll
xor
dec
add
imull
clc
movsl
jnp
ss
dec
push
aaa
jmp
loopne
mov
adc
imul
out
push
aas
sbbb
mov
iret
cmc
xor
cwtl
ljmp
stos
xor
stos
fists
push
cmp
gs
popf
mov
loope
mov
jb
jge
faddl
out
scas
into
jle
mov
shll
mov
mov
mov
or
cmc
movsb
out
and
xchg
cmp
daa
lods
loope
xchg
jl
inc
mov
sbb
xchg
cli
lcall
pop
add
repz
shrb
imul
mov
dec
jbe
adc
xor
inc
jecxz
xchg
fneni(8087
mov
cmpsb
add
cli
int3
es
mov
jl
fs
imul
sub
in
push
pop
repnz
mov
dec
push
jo
stc
repz
mov
stos
fsts
pop
scas
lock
pop
imul
cmp
stc
xchg
lods
and
shlb
ret
xor
jne
ret
or
enter
add
mov
cli
cmp
jg
aaa
out
ret
in
xchg
cld
and
sahf
clc
lock
cmc
lret
dec
jmp
les
lret
mov
cmc
mov
sbb
stos
add
test
cltd
jl
push
mov
dec
pop
imul
jg
das
popf
icebp
aam
xor
mov
loop
jecxz
adc
mov
lods
pop
popf
pminsw
jbe
dec
cmp
push
cld
xor
or
push
imul
add
sub
idivb
fcompl
push
inc
dec
out
inc
enter
fidivl
xchg
mov
repnz
stc
scas
sub
into
cmp
jle
dec
cwtl
jae
sub
dec
and
mov
mov
xor
and
xchg
es
mov
test
addr16
std
das
fwait
xchg
fisubrl
pop
jae
or
sub
sub
mov
mov
mov
test
xchg
outsl
push
pop
ljmp
sti
sahf
xor
sub
mov
add
call
incl
xchg
pop
lock
xor
nop
fidivrl
outsb
adc
push
in
scas
and
imul
call
mov
test
and
sbb
outsb
lea
stos
and
push
add
pusha
repz
cmpsl
into
add
fwait
jle
jne
jecxz
mov
inc
adc
andl
imul
inc
mov
inc
dec
cmpb
outsl
cmp
popf
lcall
les
or
sub
xor
sbb
lea
jle
pop
lahf
das
fwait
sub
xchg
cmp
adc
iret
xor
mov
jb
xchg
testl
bswap
mov
sti
movlhps
add
fildll
rcrl
pop
jp
ret
cmpsl
lods
es
es
dec
sbb
jecxz
mov
mov
mov
pop
in
hlt
jne
push
outsb
lods
xchg
xor
dec
cltd
das
mov
iret
movsb
es
or
cmpl
xor
or
lods
ret
shll
popf
cmpsl
and
popa
mov
jp
or
xchg
xchg
out
xchg
sbbl
insl
mov
jo
jno
fwait
jno
push
inc
dec
mov
mov
test
jmp
fdivrl
das
mov
adc
xchg
cli
ds
dec
push
push
inc
add
push
divb
movsl
stos
dec
dec
xchg
push
shrl
loope
mov
mov
mov
int
dec
add
pop
adc
push
pop
sbb
dec
rcl
add
int
push
mov
mov
and
adc
int3
adc
repnz
call
inc
mov
in
jne
adcb
jp
jle
lret
loopne
aaa
xchg
out
ljmp
sub
adc
fldt
outsb
adc
cmp
and
out
imul
loopne
ret
fdivs
push
inc
or
xchg
push
int3
sub
test
pop
xor
mov
xchg
and
add
jmp
xor
int3
push
sub
push
mov
icebp
or
ds
sub
in
bound
pop
imul
popf
xchg
push
sahf
adc
les
add
xchg
adc
jae
outsb
pop
adc
mov
iret
mov
sbb
jne
cli
xchg
arpl
scas
fincstp
arpl
incl
push
bound
add
or
jb
adc
inc
into
popa
test
xchg
jb
stc
xchg
cmp
xorl
daa
push
pop
sub
mov
inc
notb
in
ljmp
nop
leave
or
scas
mov
inc
shrl
inc
pop
stc
pushl
or
daa
iret
jle
addb
adc
es
cmp
mov
lret
and
mov
outsl
mov
push
or
cltd
or
das
pushf
iret
fsubr
fnstsw
push
gs
out
lcall
mov
pop
enter
popa
cltd
iret
insb
xchg
and
pop
xor
adc
clts
fidivrs
inc
sti
add
fistl
cmpsl
cmp
mov
xchg
daa
pop
push
loope
cmpsb
clc
push
mov
test
jg
add
mov
push
xchg
mov
lret
xor
hlt
xchg
loope
aas
cltd
inc
in
dec
cmpsb
jmp
mov
inc
jb
into
shll
mov
mov
vmovdqa
std
mov
mov
push
xlat
cld
and
jnp
add
mov
imul
mov
inc
sub
mov
and
arpl
fs
jge
in
pop
jnp
dec
dec
gs
adc
cltd
add
das
int3
mov
arpl
dec
flds
push
enter
in
sbb
xor
jne
mov
orb
mov
stos
and
scas
repnz
fbld
lahf
sbb
ljmp
pop
mov
mov
ficoms
pusha
xchg
pusha
xchg
fistl
cmpsl
hlt
int
popf
pop
inc
pop
lock
lds
cld
adc
jnp
repnz
push
hlt
fcomip
movsl
lods
push
mov
inc
or
and
dec
aas
clc
sbb
out
out
mov
clc
pop
mov
imul
lret
jp
mov
rcll
fmulp
ret
fwait
cmp
mov
add
call
mov
js
sbb
xlat
gs
mov
add
aas
mov
mov
sub
loope
cmp
ficomps
inc
push
or
aas
xor
or
cmpsl
sub
hlt
loope
std
adc
arpl
push
inc
mov
mov
dec
jecxz
inc
pop
push
cmp
sbb
dec
xchg
cli
xor
add
sub
mov
jge
pushf
sub
mov
loop
subb
je
out
push
mov
sahf
jns
inc
xchg
aam
repnz
iret
mov
into
push
fucom
ss
fsubrs
outsl
cmp
pop
js
push
xor
mov
fldt
push
push
jl
scas
hlt
push
ljmp
push
jae
or
xchg
push
adc
lock
push
jmp
push
out
lods
add
cmp
pop
fdiv
lods
fcmovnb
add
and
gs
repz
cltd
mov
dec
push
xor
cwtl
cltd
dec
xor
in
jne
sbb
pop
jp
push
pop
inc
and
outsb
and
or
inc
push
loope
outsl
mov
enter
pop
add
xor
mov
sarb
addb
stos
rclb
pushf
icebp
sbb
pop
daa
mov
out
mov
jmp
pop
xor
lcall
sub
data16
jns
sub
cltd
test
cmpsl
into
adc
stos
pop
fdivrs
push
xchg
ljmp
outsl
mov
sub
push
sbb
lock
and
xor
enter
cmp
push
imul
rol
sbb
push
jge
push
jecxz
mov
fwait
lock
rclb
divb
add
in
and
cmp
aas
adc
jno
push
push
push
adc
sub
mov
lock
sub
sub
and
lock
fisubl
sub
lods
fwait
insb
adc
icebp
jae
scas
test
pop
mov
mov
pushf
pusha
or
stos
sti
sub
loopne
jae
add
outsl
pop
call
or
add
gs
imul
xchg
aam
sbb
shl
cmp
sub
dec
mov
push
cli
push
lea
mov
mov
mov
cmpsl
push
sbb
push
inc
push
jno
dec
ds
insb
loope
adc
push
xor
arpl
inc
xchg
mov
or
cmp
xor
xchg
sub
in
jns
pop
push
xchg
jns
jmp
or
mov
xchg
add
das
cli
fstl
mov
cmp
and
cmp
lods
xchg
xor
jg
mov
adc
xor
addr16
cmp
arpl
testb
inc
push
jl
inc
sbb
mov
clc
mov
adc
jge
add
jge
fmull
mov
or
cmpsb
sti
stos
aad
mov
xchg
cmp
out
sete
add
jmp
push
push
inc
scas
pop
mov
jae
add
cmp
rcl
loop
sti
mov
cmp
test
test
mov
mov
push
and
pop
sbb
push
arpl
pop
mov
xchg
mov
add
push
or
add
dec
sub
mov
ret
lods
imul
and
mov
lods
sbb
icebp
pushf
cld
pop
out
add
jl
cs
inc
mov
cmpsb
aam
jo
xchg
sbb
aam
cltd
jecxz
bound
pop
cmp
sbb
cld
or
or
popf
shrb
arpl
out
jne
jns
xorb
mov
jno
loop
mov
sbb
xor
leave
pop
ljmp
jge
fcoml
inc
mov
jae
push
mov
sti
inc
outsb
mov
sub
inc
and
cmp
arpl
jle
leave
xchg
push
cwtl
add
lock
lret
and
lods
js
mov
loopne
test
push
out
and
fildl
rcll
xchg
andl
mov
mov
negl
adcb
push
int3
mov
adc
pop
add
inc
jmp
imul
inc
sbb
and
push
mov
inc
hlt
mov
push
call
mov
aad
call
repz
adc
cli
push
stc
sub
jge
enter
aas
in
inc
jp
adc
push
stos
je
pop
scas
and
mov
int3
inc
or
xor
fwait
jnp
mov
inc
xor
aam
imul
adc
in
xor
ficoml
mov
roll
inc
or
mov
mov
inc
fsubs
push
loopne
xor
sub
lds
std
shll
pop
cmp
rcrl
cwtl
fdivr
int
and
or
mov
jl
mov
into
mov
mov
push
pushf
movsl
in
mov
jmp
fwait
clc
add
jmp
xlat
sub
insl
jae
inc
xor
cmp
aaa
lcall
arpl
inc
lea
dec
imul
pushf
mov
adc
popf
je
ds
aaa
out
dec
insb
mov
mov
gs
filds
adc
in
mov
inc
pop
jle
ja
jne
pop
ss
or
pushf
dec
popa
sub
xchg
add
pushf
fmuls
and
dec
out
push
jbe
imul
mov
dec
jno
hlt
stc
lret
inc
hlt
mov
idivb
add
jnp
sbb
fcomi
or
movsl
mov
notl
hlt
or
push
sbb
sahf
arpl
repz
adc
enter
and
dec
test
inc
or
adc
je
inc
inc
test
pop
add
sbbb
push
push
xchg
jg
xor
iret
lret
ret
xor
cwtl
mov
mov
imul
pop
push
add
dec
push
or
mov
sahf
fistps
les
sub
mov
jns
cmp
ljmp
sbb
adc
push
xlat
sub
adc
dec
mov
push
aaa
pop
pop
mov
xchg
addr16
add
shrb
xchg
out
fimull
cmp
xor
add
mov
cmpsl
mov
stc
fbstp
fcoml
adc
push
pushf
add
sbb
nop
aam
lods
inc
mov
out
je
dec
xor
jnp
sub
notl
mov
pop
xor
ja
push
xchg
stos
nop
push
out
rcrl
push
mov
fdivr
ljmp
enter
nop
mov
pop
dec
xchg
push
inc
sub
pop
jbe
mov
pop
into
movsb
scas
adc
jne
fisttpll
jae
ljmp
sbb
jmp
pop
out
jp
lods
push
cli
arpl
ljmp
pop
jns
scas
shrl
xor
int3
jg
push
cs
add
les
mov
or
and
lea
data16
std
or
and
mov
call
out
imul
cltd
out
fldt
push
sbb
mov
cmp
into
fildl
dec
mov
lods
inc
aaa
or
sub
xchg
mov
test
cmp
cmp
jmp
jl
mov
repz
pop
sti
clc
and
repnz
mov
aam
sarb
testb
mov
mov
in
pop
lock
iret
add
nop
jo
imul
or
dec
roll
jo
push
add
bound
pushf
aam
xor
jbe
inc
xchg
sub
fcmovu
gs
scas
negb
pop
push
sub
loope
aad
shlb
jg
loopne
arpl
and
fwait
gs
sub
outsb
mov
into
insl
xchg
in
mov
sbb
pop
sub
jg
and
gs
daa
scas
mov
repz
pop
push
add
push
lods
adc
jnp
pop
aas
pop
dec
fistps
mov
jmp
sbb
ds
imul
inc
adc
mov
inc
pop
pop
daa
cmp
cmp
xor
push
mov
leave
mov
cld
mov
insl
sbb
jmp
xlat
mov
sub
jne
adc
cwtl
inc
jns
inc
fwait
mov
jle
xchg
test
ret
out
xchg
jae
cmp
in
ficoms
jmp
jo
jmp
stos
aad
pop
xor
les
scas
stos
in
jbe
mov
cld
aaa
xchg
mov
mulb
repz
sub
stos
and
out
outsb
dec
cmp
jp
mov
fmull
pavgw
scas
add
enter
push
cwtl
pop
jle
loop
idivb
shl
ficomps
cmc
cs
outsl
mov
xorl
xor
push
out
lcall
repnz
or
mov
in
mov
mull
repz
pop
cmp
push
mov
fcompl
mov
lock
fwait
mov
inc
fdivl
pop
sub
jle
cwtl
push
xchg
mov
xchg
inc
sub
les
push
ljmp
xchg
pop
jg
arpl
jg
enter
mov
ss
int
popa
popa
adc
xor
pop
mov
mov
pop
loope
int
adc
and
jle
dec
pop
jp
out
and
cwtl
enter
test
ret
movl
sar
xor
dec
jg
pop
sub
shll
in
mov
xchg
mov
lods
popf
cmp
adc
xor
cltd
int3
add
sbb
and
js
stos
lea
les
dec
xchg
pusha
push
imul
testb
pop
outsl
mov
add
push
int3
fwait
cmp
aaa
lahf
mov
and
jle
dec
pop
push
and
repz
pop
call
mov
shll
ret
inc
int
ss
pop
xlat
rolb
ret
sbb
test
cmp
jl
push
inc
clc
in
inc
adc
cmp
aam
mov
mov
mov
fiadds
out
add
out
call
xchg
outsl
aad
jmp
add
or
hlt
or
dec
cmp
push
mov
test
pop
jno
cmpsl
cwtl
rolb
adc
sbb
add
and
pop
dec
mov
inc
dec
xlat
mov
aaa
aam
lahf
pop
clc
dec
int
xor
mov
lea
insb
inc
sarl
mov
lods
lcall
cmp
sub
dec
outsb
or
inc
mov
add
arpl
into
mov
cli
cmp
popa
dec
fnstcw
and
add
xor
xchg
inc
mov
sbb
jo
dec
ljmp
or
clc
push
aaa
xor
xor
nop
pop
push
std
idivl
jmp
outsb
inc
jl
pop
pop
or
add
stc
lods
dec
aaa
gs
ss
mov
mov
inc
xor
cwtl
inc
xchg
cs
lahf
dec
sub
in
dec
jae
repz
mov
or
ja
push
xchg
push
out
dec
and
sbb
pusha
in
addr16
sub
lret
mov
and
sbb
pop
push
fidivrs
inc
mov
mov
aad
test
push
xchg
rol
xchg
push
lahf
mov
jbe
sbb
loopne
mov
test
rol
pushf
fsubl
fisttpl
dec
rcll
mov
stos
ret
adc
sub
test
add
xchg
call
arpl
mov
imulb
dec
mov
push
rep
imul
js
cwtl
and
call
and
pop
cmpsl
mov
mov
jecxz
or
mov
and
popa
add
pop
cmpsb
nop
js
inc
jnp
mov
test
push
inc
repnz
test
stos
and
cltd
ljmp
pop
outsb
jb
sub
xchg
daa
aas
fisubl
dec
scas
into
aaa
f2xm1
xlat
pop
sbbb
test
out
push
add
mov
call
cmpsl
outsb
pop
repz
or
add
add
jbe
mov
cmp
mov
sub
sub
jmp
jmp
jb
aam
pop
inc
cmp
xchg
xlat
shll
ds
jno
inc
dec
out
cmp
lea
jmp
sub
cli
inc
cmp
sub
push
and
push
data16
scas
lods
xchg
xor
mov
push
cli
or
ds
inc
mov
cltd
dec
rcll
test
push
test
pusha
pusha
inc
iret
mov
adcb
inc
enter
fdivrs
std
hlt
test
pop
cmc
mov
imull
and
cmpl
push
and
inc
push
cs
jne
sahf
das
push
insl
jmp
repnz
dec
pop
inc
in
mov
mov
jnp
and
cmp
and
shll
mov
push
or
ds
push
cmp
mov
pop
and
pop
jne
jbe
imul
mov
push
pushf
xchg
call
icebp
xor
mov
cmp
adc
cmc
test
dec
adc
in
push
jno
cltd
mov
jns
mov
xor
movsl
xchg
leave
mov
push
xor
mov
add
cmpsb
movsl
xor
dec
adc
dec
testb
jbe
jmp
fisttps
popf
add
movsb
stc
xchg
arpl
sub
cmp
repnz
loop
add
aam
push
push
pop
cmpsl
int3
jecxz
push
cmc
mov
mov
inc
mov
std
arpl
sbb
inc
rcrl
xchg
out
pop
cmpsb
inc
popf
movl
push
adc
pop
addl
pop
gs
push
sarb
add
repz
mov
int
sbb
pop
out
clc
or
adc
and
mov
fwait
pop
mov
ljmp
int3
out
and
dec
fchs
dec
sub
xchg
notb
push
pusha
clc
nopl
sahf
ja
dec
jmp
lcall
jl
mov
mov
xor
mov
insl
add
ror
inc
mov
fcmovnbe
out
mov
and
mov
das
ret
add
movsb
dec
or
int
add
nop
or
xchg
add
pop
sbb
mov
dec
sub
pop
test
shrb
inc
jne
mov
imul
jno
inc
sub
or
mov
push
cmp
sbb
cmp
inc
mov
mov
or
jmp
mov
mov
sub
push
jo
call
cwtl
sbb
jno
sub
out
sbb
fisttps
dec
rcr
mov
movsb
and
xor
in
inc
xlat
xchg
or
and
jmp
mull
sbb
xchg
jne
push
pusha
and
jnp
xchg
add
mov
xor
push
and
push
aas
scas
call
push
adc
dec
js
ja
and
enter
aad
stc
rclb
ja
xchg
pop
sub
repz
dec
jle
movsl
nop
int
popf
loope
ds
add
stos
lret
dec
clc
sub
push
push
mov
mov
or
jns
push
pop
gs
jbe
dec
adc
stos
and
or
shrb
cmc
push
xlat
cmp
cmp
inc
push
lods
mov
idiv
xchg
int3
pop
shrb
xor
xchg
adc
gs
icebp
inc
lds
test
jno
add
stos
xchg
mov
inc
and
psrlq
pop
adc
add
pusha
fbstp
mov
push
or
fdivs
leave
dec
and
xchg
cs
mov
addr16
mov
stos
or
add
jp
add
add
ja
lock
xor
popf
jmp
ja
or
sbb
movsl
mov
nop
dec
jmp
shll
sbb
pusha
icebp
add
mov
sub
sbb
cmp
insb
sbb
sub
dec
inc
mov
movsb
push
sub
pop
jge
or
arpl
out
xchg
xor
xor
add
push
js
int
jge
in
mov
and
xchg
in
fisttpll
or
cld
push
lods
push
and
iret
inc
insl
iret
add
mov
data16
inc
sbb
sub
adc
bound
test
mov
test
jne
and
add
ds
shll
std
sub
cwtl
adc
xchg
loopne
ja
sbb
aas
mov
xchg
inc
lds
cmp
leave
cmp
scas
cli
out
and
sbb
cmpsl
and
dec
lret
xorl
clc
frstor
and
addr16
nop
out
mov
add
push
repz
cmp
sub
cmc
lcall
cmpl
notl
and
push
lret
cs
out
and
inc
iret
ja
cmp
cmp
rol
mov
jecxz
push
aad
xchg
dec
ja
clc
stos
imul
push
fldt
xchg
mov
in
xchg
fs
je
cwtl
and
jo
jnp
ret
push
nop
add
push
xlat
adc
xchg
pushl
in
in
js
loop
jp
jno
jmp
xchg
sbb
std
iret
out
in
push
mov
cmpsb
or
idivl
pusha
adc
sub
cmp
jne
in
sub
jne
fstpt
jne
lahf
add
aad
or
push
enter
mov
add
lds
mov
cmpb
push
int
movsl
lea
pop
xor
pop
movsl
jo
pop
pop
adc
xchg
mov
jge
inc
shl
mov
mov
and
push
xchg
sahf
lds
push
fadd
adc
push
mov
inc
mov
sahf
jge
cmp
sub
and
outsb
xor
push
adc
insl
test
push
out
cmp
inc
and
test
or
sbb
push
sbb
imul
xchg
and
add
mov
mov
pop
xchg
bnd
insl
push
int
daa
cltd
test
loopne
cli
lds
dec
xor
ret
xchg
mov
aam
jg
cmp
mov
test
lock
pusha
fwait
loopne
xchg
or
inc
mov
dec
nop
shlb
pop
pop
aaa
orl
in
dec
loope
dec
add
push
fsub
push
jne
mov
xlat
addr16
xor
insl
gs
shlb
cmp
jle
lds
push
and
mov
dec
push
inc
sti
pop
mov
sahf
dec
mov
cli
test
fnstsw
push
xor
pop
add
lock
inc
outsb
daa
mov
dec
pop
push
mov
scas
cltd
jmp
push
in
cli
or
xchg
imul
stos
in
nop
add
or
sbb
jge
ja
es
test
dec
jle
mov
push
mov
divb
loope
scas
js
xor
or
add
push
sbb
ljmp
xchg
pushf
jmp
dec
bound
loopne
lcall
mov
cmp
addr16
notb
add
cmp
mov
adc
and
leave
mov
mov
adc
jg
adc
sbb
loopne
jb
or
cmpsb
mov
and
ja
loope
rolw
ficomps
repnz
adc
jmp
and
lahf
lcall
and
aam
add
sbb
or
push
mov
fisubrl
int
sbb
or
push
sarb
outsl
cmp
mov
movsl
mov
add
mov
pusha
and
jnp
ret
iret
out
cmp
add
sbb
cltd
rcrb
inc
fdivrp
adc
jg
ljmp
cmpsl
sub
and
xchg
sbb
outsl
inc
sub
push
rcrb
aas
insl
add
jl
lods
jle
jge
cs
push
cmp
fimull
dec
add
pop
rcrl
out
cmp
rorb
lea
inc
scas
ljmp
mov
test
sbb
cli
lea
fucom
dec
push
dec
sub
clc
jnp
sub
mov
sbb
xor
push
pop
mov
outsb
arpl
add
or
stc
aad
jg
xchg
and
cli
nop
mov
aaa
sbb
sbbl
mov
xchg
gs
popa
and
repz
xchg
iret
push
mov
repnz
insl
xlat
fwait
loope
test
popa
sub
sbb
inc
push
mov
sub
ds
push
mov
aaa
xchg
push
adc
xor
adc
sbb
xchg
jbe
adc
jmp
pusha
push
xor
call
xchg
sbb
and
inc
xchg
mov
insl
xchg
int
mov
push
fdivl
movsl
inc
lret
sti
sub
fidivs
rcll
mov
subb
sbb
pushf
mov
scas
add
mov
lahf
inc
outsb
pop
cmp
pop
mov
pop
push
fsub
movsl
inc
sbb
jl
popf
sti
nop
push
mov
aas
mov
inc
sub
ret
faddp
dec
hlt
aas
jmp
inc
mov
scas
jno
and
push
and
or
lret
ficoml
mov
cli
roll
add
lods
mov
sub
cmpb
out
sbb
add
js
jne
scas
fwait
push
icebp
cld
sbb
lods
mov
out
jae
std
mov
aad
push
bound
ljmp
jg
mov
sub
mov
lods
lret
popa
movsb
jecxz
mov
das
sub
insb
ss
jne
sbb
icebp
add
adc
shrb
sti
insb
mov
jns
mov
arpl
jae
shlb
jo
or
mov
xor
xor
cmp
jge
inc
sub
in
mov
lret
pop
xchg
dec
jp
xlat
jo
jge
sub
repnz
mov
mov
stc
movsl
xor
add
push
mov
arpl
mov
shlb
sahf
sub
imul
push
int3
sti
push
je
push
jecxz
idivb
cmc
lahf
lods
jne
shll
aas
leave
idiv
enter
push
es
mov
fistpl
imull
adc
mov
jmp
lods
and
das
xchg
pusha
clc
lock
dec
add
inc
add
sbb
xor
push
lds
rorl
call
jg
imul
loopne
fsubr
jge
pop
xchg
hlt
push
inc
xchg
ret
movsb
xchg
subl
loopne
jo
cwtl
rolb
aam
mov
lahf
dec
mov
xchg
lahf
out
je
fdivl
out
push
jle
mulb
xor
movsl
pop
test
ljmpw
ljmp
in
add
icebp
push
push
mov
jp
or
fnstcw
adc
or
dec
cmc
imul
pop
xchg
jne
mov
insb
and
mov
cmpsb
sbb
mov
leave
sub
xchg
cltd
lcall
pusha
jb
sbb
xlat
in
jmp
mov
jmp
sub
and
das
xchg
add
test
mov
sahf
xchg
out
mov
mov
or
scas
or
dec
sub
sub
mov
movsl
addb
xchg
aam
mov
add
xor
movsl
mov
jnp
mov
popf
pusha
pop
sbb
mov
ss
push
jb
adc
pusha
popa
xchg
mov
outsl
or
inc
pop
and
cmp
cmp
sub
divb
fdivl
xor
popa
pop
or
das
clc
and
sub
adc
fsubl
or
push
cmovns
dec
sbb
inc
or
push
sti
adc
insl
mov
xchg
adc
mov
les
mov
int3
push
mov
cmp
mov
mov
add
xor
xor
out
aaa
arpl
sbb
shl
hlt
dec
sarl
add
outsl
shl
out
insl
jecxz
pop
mov
negl
adc
lret
int
add
test
cld
movsl
dec
lock
push
jno
lret
sarl
add
daa
inc
mov
sti
sub
lods
xchg
lea
out
and
out
xchg
mov
push
testl
dec
inc
lock
les
cmpsb
out
mov
iret
lock
rorl
dec
xchg
sbb
xor
mov
cmp
xchg
les
or
push
cmp
cmpsb
push
xor
pop
xchg
dec
clc
loopne
inc
jle
xlat
dec
jb
jmp
jle
clc
jle
cmp
stos
add
mov
cmpsb
movsl
out
sbb
and
hlt
lods
fldl
mov
mov
fisubrs
cmpsl
push
push
les
ja
jo
aam
push
rol
pushf
sbb
or
sbb
mov
in
loopne
movsb
mov
cmp
gs
push
js
stos
mov
jle
ljmp
lcall
dec
push
xchg
in
and
hlt
mov
nop
cmc
adc
pop
lock
lahf
adc
int
cld
fadd
rcrl
jbe
scas
pop
xor
data16
decb
pop
lods
movsb
mov
into
cld
or
mov
xorb
jg
dec
push
cmpsb
sub
psrld
jp
pushf
dec
and
pop
push
int3
icebp
lds
cmpb
mov
lds
daa
or
in
scas
or
mov
inc
mov
rcrl
add
cs
sbb
xlat
dec
sbbb
sbb
push
push
mov
add
pop
mov
sti
adc
cltd
xor
jne
les
out
cmc
cld
mov
mov
cmpsb
addr16
dec
out
adc
push
pop
sti
mov
clc
jg
test
add
inc
ja
movsb
jl
mov
pop
filds
dec
stc
rcrb
mov
insl
imul
add
xor
add
jl
leave
or
jnp
pop
cmp
inc
lahf
into
cltd
xor
rcll
adc
mov
ja
adc
cmp
xchg
inc
sbb
stos
mov
pop
mov
mov
cmpsb
shr
jmp
xor
and
mov
adc
cmp
cmpsb
add
jp
dec
xor
lahf
mov
cmp
movsb
outsb
pshufw
sub
xor
pushf
push
insb
jge
inc
loope
stos
test
ret
scas
mov
aad
jb
mov
inc
dec
int3
notb
push
dec
push
xchg
jmp
scas
xchg
divl
ret
mov
xor
mov
xor
pop
push
sbb
and
sti
inc
pushf
adc
dec
insb
push
or
icebp
hlt
jnp
outsl
js
push
ret
inc
rclb
mov
pop
aam
cmpsb
ror
inc
push
movb
mov
xor
test
sar
xchg
out
pushf
sbb
push
xchg
inc
mov
fists
bswap
add
mov
sbb
shll
cmpsl
sub
stc
shll
into
int
repz
xorb
jp
push
mov
loope
sar
add
scas
bound
inc
lods
mov
pop
cltd
out
cli
adc
cmpsb
in
or
jns
mov
jecxz
push
jb
nop
mov
or
das
xlat
pop
add
lock
stc
inc
lahf
jae
movsl
ret
mov
ljmp
movntps
int
mov
sub
and
repz
pop
loope
insb
stc
aas
inc
test
xchg
sbb
cmp
scas
dec
pop
rcrl
sub
xor
push
dec
xchg
sub
dec
imul
cmp
xchg
call
sbb
into
ja
dec
imulb
jo
mov
test
daa
andb
out
mov
pop
push
jnp
fwait
pop
push
outsb
lret
jg
push
dec
imul
xchg
dec
or
jbe
lahf
mov
xlat
iret
mov
inc
inc
mov
mov
xchg
fisttps
lret
jecxz
xchg
aad
sbbl
cwtl
xor
imul
pop
mov
mov
mov
inc
iret
or
push
lea
gs
scas
xchg
dec
mov
mov
mov
cmp
jns
sahf
insb
xor
mov
cltd
andb
sub
cmp
cltd
push
push
inc
mov
xchg
adc
sub
dec
cmp
je
push
jle
cmp
and
mov
mov
inc
pop
scas
jle
repnz
int3
inc
jnp
inc
mov
cmp
push
and
lds
scas
mov
pop
mov
mov
dec
push
and
dec
adc
clc
push
and
shll
pusha
test
mov
divl
mov
fldl
xchg
cli
mov
imul
gs
dec
lcall
lock
or
imul
mov
inc
test
stos
cwtl
pop
mulb
scas
cmc
lea
ret
xor
xor
bound
iret
mov
sub
fprem
int
pop
jle
mov
inc
enter
jne
push
add
inc
inc
sbb
and
dec
outsb
push
jge
mov
lods
sti
push
xor
jnp
xchg
test
cmp
scas
dec
nop
inc
sarb
adc
or
cld
sahf
cltd
loope
out
xchg
jmp
clc
sub
sarl
aad
int3
add
popa
xor
fmul
sbb
and
clc
mov
bound
push
in
mov
jge
out
test
adc
shlw
push
bound
arpl
mov
hlt
dec
scas
subl
orb
jl
push
push
cmc
shrb
mov
push
jbe
inc
add
cmp
movsl
xchg
xorb
dec
pop
cmp
shll
ja
xchg
out
or
sub
push
pop
fwait
in
fnsave
inc
pop
movnti
inc
outsb
or
and
imul
in
clc
mov
xchg
and
sti
arpl
jmp
aas
int
aaa
fwait
mov
add
lcall
xchg
adc
outsb
mov
pop
xor
dec
add
int
out
popa
dec
shr
pop
mov
jl
leave
mov
sar
or
out
fistl
or
and
test
movsl
or
repz
jmp
mov
ret
mov
mov
sbb
into
stc
gs
dec
or
add
mov
jne
mov
shll
or
stc
push
xor
daa
mov
enter
cmp
aad
pop
pop
jle
scas
cmp
into
xchg
cwtl
sahf
cltd
mov
leave
data16
cld
xor
addr16
rcr
xchg
push
fcoms
and
xor
push
aam
daa
fnstcw
adc
movb
jge
cwtl
inc
stos
std
mov
repz
out
sbb
mov
xor
add
mov
adc
shll
xchg
add
sahf
lds
dec
xchg
jecxz
inc
jo
sub
sbb
jl
or
sbb
cltd
add
jecxz
mov
ret
mov
dec
and
push
jbe
xor
cmp
fisttps
xchg
dec
cld
lret
ss
xor
mov
mov
and
mov
xchg
fcomp
add
rorb
int3
cmpsl
inc
adc
int
lahf
add
movsl
repnz
sahf
rcrl
mov
jnp
int
test
insl
dec
sub
add
das
into
cmpsb
lods
insl
sbb
mov
nop
fiaddl
popf
pop
adc
hlt
dec
mov
fistl
mov
jno
xchg
xlat
push
int
mul
stos
cmp
add
call
cmpl
stos
mov
test
mov
pop
loop
andl
mov
push
lock
outsb
movsb
add
adc
stc
cltd
cmp
loop
xor
mov
inc
pop
or
jmp
fists
cmp
inc
push
pushf
dec
jecxz
adc
push
les
jl
out
ljmp
cmc
sbb
pop
insl
xchg
add
mov
mov
in
xor
cmp
cmc
imul
mov
stos
stc
nop
sub
imul
xchg
sbb
cmp
add
movsb
jecxz
pop
dec
jno
xor
cmc
mov
jge
mov
dec
repnz
shrl
cmp
int
add
je
sub
mov
sbb
xor
in
out
add
xchg
push
testl
lods
jl
aaa
pop
shlb
cwtl
ficoms
mov
in
int
shll
fsubrl
pop
inc
pop
fnsave
jmp
stos
clc
mov
pusha
sarl
bound
and
sub
scas
sbb
jae
daa
add
lahf
pushf
jne
dec
jmp
add
lea
add
daa
inc
xchg
call
jo
or
bnd
lock
push
dec
fistpl
jb
add
dec
mov
jbe
into
arpl
leave
lods
pop
pop
loopne
push
orl
int
cld
or
popa
cmp
call
dec
out
xor
pop
jno
outsb
in
data16
ret
std
add
adc
cmp
or
push
mov
and
mov
cmp
push
jnp
mov
mov
mov
mov
sbb
repnz
mov
testb
xor
mov
int
ret
inc
inc
mov
rorl
inc
lock
insb
sarl
enter
mov
cmpsl
test
arpl
rol
test
inc
mov
mov
nop
xchg
jmp
out
cs
cmp
fwait
xchg
mov
hlt
mov
clc
and
insl
and
cmc
roll
leave
movntps
pop
adc
icebp
adc
jp
mov
leave
out
pop
data16
sbb
inc
imulb
pop
or
jge
testb
mov
sub
dec
jmp
pop
mov
movsl
sbb
xchg
stos
add
mov
fistpl
lea
pop
test
pop
sarb
mov
punpckhwd
shlb
mov
mov
cmp
sbb
mov
mov
sub
dec
add
sahf
lret
jl
in
mov
push
fwait
test
xor
sbb
jg
xor
shll
jl
push
xchg
inc
enter
es
mov
inc
ljmp
test
scas
jns
movsb
ficomps
mov
push
fwait
cmp
ret
xchg
outsl
cmpsb
inc
sbb
push
inc
dec
and
enter
lret
jne
fsts
mov
dec
push
aam
mov
lahf
hlt
cmp
and
or
repz
imul
push
inc
adc
mov
or
aam
push
lret
std
fdivrl
ret
dec
push
aad
push
inc
js
inc
push
jl
adc
mov
lods
xchg
add
fwait
pushl
lods
adc
sahf
dec
iret
mov
push
test
and
lds
push
loope
ret
pop
in
and
xor
mov
nop
mov
jbe
out
aaa
xor
pushf
scas
xchg
por
insl
imul
rcrl
mov
sahf
lods
mov
addr16
loop
fxch
nop
pop
mov
sahf
cmp
mov
cmpsl
mov
mov
icebp
pop
fistps
or
lea
cmp
adc
xchg
mov
pop
arpl
and
lcall
movsl
fwait
add
mov
jno
xchg
ds
loopne
inc
xor
imul
push
push
clc
aad
test
or
xor
testb
add
ja
pusha
cmp
cmpsb
xor
cmpsl
in
sbb
mov
or
mov
cwtl
pcmpgtd
clc
leave
mov
dec
aam
and
rcrl
in
xchg
cwtl
push
test
popf
xchg
out
pusha
fs
pop
sub
lcall
pop
shl
lcall
lret
jae
dec
cmpsb
jecxz
cmc
and
outsb
dec
jl
add
divb
push
inc
jmp
inc
xorb
sub
mov
cwtl
jge
xor
jnp
jae
ds
xchg
rcrl
aam
and
pop
push
rcrl
jnp
push
icebp
pop
aad
call
rolb
pop
aam
jns
movsl
loop
cltd
mov
in
mov
icebp
in
inc
inc
add
jge
in
in
icebp
sub
pushf
fldenv
mov
scas
jno
push
xor
pop
xchg
mov
xlat
push
test
inc
test
or
notb
mov
ljmp
sub
stos
call
mov
aaa
mov
lds
xchg
pusha
in
jne
pop
sbb
es
ljmp
mov
mov
int
sbb
sub
ss
or
aaa
pop
gs
ss
mov
cmp
pop
pop
dec
mov
stc
add
sub
test
push
in
mov
mov
fidivrs
jne
sarb
insb
xchg
fsubrs
push
pop
cmp
dec
idiv
push
mov
sti
jp
loop
in
orl
xor
jae
shl
push
jecxz
xor
outsb
aaa
push
clc
es
mul
inc
or
pop
or
cmc
loop
add
jl
mov
hlt
mov
push
mov
outsb
add
sbb
mov
cmp
cmpl
push
imul
out
fwait
adc
add
push
lods
cmp
test
jae
mov
cli
aaa
jnp
push
adc
lea
or
mov
mov
jl
inc
fs
add
sarl
test
mov
outsb
repz
and
xor
int3
cmp
sbb
es
or
push
iret
std
push
and
std
push
adc
loopne
imul
adc
popa
or
sub
sbb
inc
inc
and
fcompl
sahf
sar
adc
jmp
sbb
nop
mov
mov
fdiv
arpl
test
loop
in
or
out
sbb
mov
shlb
xchg
fadd
inc
lods
or
sbb
and
push
mov
in
rcll
mov
andb
xor
mov
pop
xchg
push
pop
inc
int
cltd
or
ja
fisttpll
iret
sarl
sbb
imul
and
xlat
pop
aam
cmp
cmpsl
and
lcall
out
dec
ret
cwtl
xor
divl
inc
pop
test
jns
rol
scas
aad
cmpsb
xchg
ror
imul
lock
sbb
lret
fs
bound
pop
fisubrl
or
pop
les
or
xor
mov
inc
es
fadd
xchg
aad
pop
cmp
mov
push
adc
sbb
fnsave
arpl
imul
shll
mov
push
mov
stos
xor
xchg
pop
cltd
hlt
add
iret
dec
or
mov
lock
add
hlt
roll
sbb
add
xchg
xor
push
es
add
xor
cwtl
jns
nop
push
rclb
dec
mov
addb
clc
pop
jge
shrl
mov
pop
int3
daa
dec
sub
lods
shrd
sub
jp
lock
xlat
mov
mov
test
mov
cmp
stos
xorl
pop
icebp
je
inc
xor
xchg
adc
in
and
out
inc
jg
jns
rcrl
aaa
xchg
mov
test
lea
test
mov
in
mov
xchg
jb
xchg
arpl
mov
iret
push
cli
cmp
mov
xorl
aad
pop
and
cltd
rolb
mov
mov
jno
outsl
sbb
xchg
push
repz
cwtl
push
xrelease
lock
pop
in
mov
jb
mov
mov
push
jmp
enter
rcl
popa
lods
mov
xor
mov
sti
movsb
ja
mov
scas
fs
test
mov
add
mov
ficoms
mov
dec
shrb
xor
sub
pop
imul
out
int3
push
fstp
cmp
das
call
mov
sbb
int
adc
mov
inc
aad
popf
sub
lea
or
mov
jno
loope
fdivrl
adc
bound
mov
xchg
xor
push
jb
adc
and
and
out
sbb
mov
mov
jno
imul
lds
mov
test
notl
and
jg
and
sbb
jp
iret
dec
add
in
push
lahf
push
outsl
cmc
xchg
xor
gs
movsl
push
pop
adc
pop
inc
data16
imul
pusha
outsl
in
adc
lock
test
push
pop
int
pusha
add
and
std
sbb
add
rcl
call
cmc
int
mov
repnz
cmpb
inc
subl
fisttpl
ror
xor
add
jp
cmc
mov
push
mov
stc
scas
pop
inc
fiadds
sahf
push
nop
and
mov
xor
cmp
xor
jmp
push
sub
fstps
mov
xlat
xor
inc
mov
sub
xchg
fldcw
inc
dec
inc
pop
adc
frstor
pop
dec
xor
fldenv
jg
dec
mov
rolb
inc
xor
mov
scas
inc
test
cmp
mov
lret
jno
outsl
sbb
ljmp
movsl
mov
enter
mov
sti
sbb
inc
pop
imul
and
int3
cltd
clc
xchg
mov
shlb
rcr
sahf
sbb
out
dec
aam
orl
push
clc
dec
xor
xchg
cmp
pop
scas
popf
jb
insl
mov
jb
sub
cmp
cmpsl
cmc
ss
adc
stos
ret
cmp
jns
and
lods
mov
cmc
add
decl
pop
jnp
pop
ss
lahf
cmp
and
lods
sbb
outsb
gs
mov
int3
hlt
jmp
aad
jb
lret
xchg
xor
add
sub
pop
iret
and
repz
repz
jmp
xchg
sbb
and
rcll
jecxz
add
sub
cs
jne
sbb
in
mov
cwtl
push
sub
jecxz
rclb
das
addr16
push
loopne
push
incb
xchg
and
jl
jg
xor
and
or
insl
shr
ret
inc
push
sbb
sub
leave
enter
lret
ret
push
dec
jmp
leave
mov
sbb
roll
movsb
inc
cli
movsl
je
fwait
add
xor
xchg
xchg
outsl
pop
test
loope
inc
shll
pop
jge
hlt
lcall
nop
xor
fucomi
mov
sub
and
sub
sahf
xchg
mov
jmp
movsl
jg
xor
mov
dec
xchg
adc
filds
aam
rolb
lahf
leave
insl
adc
daa
mov
sahf
fldenv
fucom
rcll
in
cmp
mov
sub
mov
sbb
adc
inc
xor
lcall
movsl
dec
loopne
lahf
or
push
repz
xor
adc
pop
ss
rcrb
mov
pop
and
push
xchg
cmp
push
sub
inc
cli
sbb
test
stos
in
adc
lret
xlat
mov
xor
xchg
or
xor
xchg
out
loopne
sub
and
mov
cmpsb
jb
dec
popf
cmpsl
das
or
xchg
lods
mov
jecxz
xchg
inc
xlat
jnp
sub
incb
movsl
sub
xor
rclb
shrl
fildll
mov
adc
push
mov
xchg
xchg
dec
es
popf
push
mov
push
xor
fcmovnb
mov
pushf
pop
add
fs
insl
mov
int3
mull
jmp
scas
push
push
icebp
stos
or
jo
imul
mov
enter
sbb
nop
mov
std
sbb
jle
dec
push
mov
imulb
adc
or
js
popf
test
cmpl
mov
cmp
outsb
xor
inc
pusha
mov
movsl
addr16
push
jg
inc
js
sbb
add
jo
xchg
cwtl
push
jb
push
les
in
loopne
fnstsw
pop
pushf
mov
inc
lds
imul
pop
xor
push
mov
fdivrp
push
call
or
std
adc
push
outsl
sahf
jnp
mov
sbb
sbb
stos
mov
dec
in
mov
cmc
divb
or
add
insl
push
cmp
ja
sahf
sub
sub
insb
not
inc
imul
pushf
pop
cmp
frstor
daa
fbstp
dec
sub
add
jg
dec
xchg
gs
je
jl
sub
pop
fxch
mov
dec
xorb
mov
inc
add
push
loope
cmp
xchg
sub
outsb
into
fmuls
fwait
pop
mov
imul
rep
sbb
ret
xchg
repnz
fiadds
mov
sti
cmp
mov
mov
outsb
xchg
fstl
leave
andb
xor
ljmp
loop
enter
inc
jno
sub
adc
ss
pop
ret
lahf
mov
ret
gs
aam
jmp
ret
fmuls
adc
mov
sub
test
cwtl
push
pop
adc
sub
sbb
jnp
push
lret
xchg
sub
addr16
push
jbe
cmp
ficoms
mov
aaa
push
addr16
pop
adc
iret
mov
mov
adc
inc
ss
dec
cmp
stc
hlt
dec
sbb
repnz
xor
bound
ljmp
cmc
fbld
inc
lds
xchg
mov
sub
pop
and
pop
dec
dec
and
jp
xchg
popf
jns
jno
push
mov
cmp
cmpl
push
mov
jbe
jno
inc
dec
out
mov
pop
sbb
imul
in
sti
jp
dec
mov
in
or
pop
mov
sti
dec
jb
test
or
fs
ret
pop
std
and
adc
insl
xchg
aad
addr16
inc
iret
cs
xor
popa
mov
add
cmp
xchg
or
repnz
jl
mov
xorl
insl
dec
cld
test
inc
mov
sbb
ss
pop
dec
cmp
repz
xor
fs
ja
and
fisttpll
in
inc
push
xchg
decb
adc
sti
mov
in
outsb
jns
push
stos
mov
lret
jg
jmp
test
pop
inc
lods
daa
ds
ljmp
dec
cld
into
adc
call
test
jne
movsb
arpl
fldt
ja
adc
test
push
xchg
inc
dec
arpl
or
push
leave
repnz
hlt
xor
jg
pop
pop
sbb
jbe
arpl
add
hlt
dec
mov
add
mov
lods
or
ja
jae
mov
mov
inc
notb
or
mov
add
iret
cwtl
xchg
outsb
das
sbb
pop
cmp
mov
rcll
shll
sti
fisubrl
sbb
mov
fnstsw
int3
sar
sti
adc
call
xor
fxch
lds
leave
pop
outsb
mov
add
inc
and
push
loope
divb
lret
push
aaa
repnz
jae
sub
cmp
js
es
adc
repnz
arpl
call
push
push
lahf
jne
pushf
mov
pop
pusha
or
cmp
int3
movsl
push
push
mov
dec
ds
std
sbb
dec
push
push
jnp
jns
pop
sub
sbb
pusha
pop
adc
lea
popa
or
adcl
cltd
mov
sub
inc
mov
xchg
pop
and
add
inc
mov
fnstenv
mov
mov
inc
push
xlat
in
jno
in
in
hlt
jbe
mov
inc
mov
test
ljmp
mov
insb
addb
dec
stos
clc
xor
addb
jae
mov
xchg
test
int
pop
push
call
in
cmp
mov
scas
lds
mov
popa
xor
push
xchg
adc
pushf
cmp
pushf
rsm
add
lods
sub
xor
xchg
add
jle
in
in
mov
negl
lds
pop
and
imul
xchg
adc
ja
ds
mov
stos
loop
sub
add
rorb
sub
sahf
push
mov
mov
out
fs
sub
sub
and
icebp
insl
stos
pop
js
sti
ss
dec
test
pop
xor
outsb
xor
in
in
roll
ret
gs
inc
push
jecxz
mov
inc
xchg
cmp
fsubs
test
dec
mov
inc
shrl
fwait
jbe
lcall
scas
testb
jb
push
xchg
and
inc
stos
lods
lahf
push
imul
iret
dec
pop
cmpsl
lods
pop
mov
cs
jns
mov
pop
movsl
out
push
inc
jp
xchg
pslld
or
test
stos
shlb
ret
clc
movsl
aam
mov
and
sub
sar
test
adc
lret
mov
push
push
pop
jl
mov
sub
popa
idivb
pop
shll
daa
pushf
arpl
stos
sbb
sub
aad
lret
data16
push
fidivs
dec
inc
shl
sub
mov
aad
or
ds
inc
sahf
mov
nop
movsl
sbb
aad
std
jb,pn
stc
test
scas
cli
sub
inc
icebp
notl
inc
call
xor
xor
notb
aam
mov
adc
push
shll
jbe
xor
push
cmc
es
push
dec
sub
test
jns
add
or
daa
sbb
icebp
pop
push
loopne
lock
loop
rcrb
push
cmc
scas
ja
push
jns
std
add
insb
and
imul
out
int
sub
std
pop
inc
lcall
lret
movsl
addr16
addb
cmpsb
push
push
xlat
in
jle
rcrl
ret
inc
in
jb
lcall
das
mov
std
and
loope
in
inc
add
dec
nop
in
sti
in
and
cmp
sub
and
cwtl
add
arpl
inc
mov
fwait
shrb
out
cmp
lods
dec
lahf
pushf
fidivl
push
lods
stc
sarb
adc
dec
add
test
jbe
pop
cld
les
sub
sub
xchg
xchg
xchg
push
cmp
fwait
or
test
stc
xor
das
jae
fildll
or
or
add
jo
test
or
aam
or
push
add
into
sbb
popa
sub
jecxz
mov
cmp
lret
ret
shrl
sbb
outsb
mov
sar
jb
icebp
data16
inc
cwtl
fs
es
xchg
push
outsl
ret
jmp
in
jae
lahf
mov
xor
out
scas
int
test
or
xchg
in
mov
shrl
mov
ds
test
mov
jo
add
imul
mov
push
loope
icebp
addb
sub
mov
cli
fs
stos
fildl
mov
fisubrs
movsb
lds
fnstsw
sbb
and
stos
mov
mov
add
add
push
popf
out
pslld
add
add
ficomps
add
scas
mov
les
je
mov
mov
jne
jmp
jmp
into
cmc
sub
or
jns
mov
inc
test
je
sahf
mov
cwtl
adc
fnstsw
dec
add
sub
inc
mov
out
repz
jmp
jo
cmp
js
pop
pop
imul
sbb
cmpl
int3
xchg
xchg
sahf
iret
out
sub
shrl
mov
mov
xor
sbb
pop
ret
icebp
xchg
add
out
or
xor
push
cwtl
ret
ja
sbb
addl
push
jbe
iret
pop
jge
sbb
push
popa
mov
pusha
mov
xor
iret
imul
negl
mov
fnsave
mov
out
dec
repz
xor
daa
mov
push
arpl
idivl
mov
xchg
adc
ja
shl
jb
dec
mov
imul
push
lods
sub
and
call
adc
mov
fwait
xlat
lret
jb
pushf
xchg
fwait
ljmp
fwait
pop
adc
inc
fs
add
inc
out
cld
sbbb
pop
xor
add
es
popf
std
lock
test
jbe
sbb
stc
cwtl
arpl
inc
push
mov
adc
inc
bound
or
pop
out
inc
sub
fildl
scas
sub
ss
and
xchg
sbb
and
sub
fldcw
lcall
jge
dec
add
dec
sbb
jmp
cmp
js
outsl
lock
pop
daa
dec
nop
sti
pop
mov
in
out
fs
push
in
mov
mov
negb
sbb
jmp
data16
div
mov
mov
sub
mov
pop
inc
mull
loop
jmp
adc
insl
das
icebp
sub
in
mov
and
cmpsb
jle
in
in
xor
int
popf
inc
fcomip
mov
pop
lods
mov
cmpsb
ret
push
adc
fs
das
aad
outsb
movsb
movsl
imul
loop
xchg
aam
inc
sbb
ffree
jne
dec
shr
inc
ljmp
outsb
js
rolb
mov
subb
pop
pop
adc
lahf
inc
jne
xor
fadds
cmp
jno
test
adc
sahf
in
jne
ret
out
nop
mov
sbb
les
out
pop
repz
ret
mov
push
fidivs
mov
ret
xchg
push
fldcw
push
sbb
mov
and
ja
popa
sbb
mov
add
push
in
cmpsl
call
stos
inc
popf
fldcw
mov
push
push
movsb
lock
out
enter
pop
enter
mov
cmp
push
je
stos
xor
ret
sub
jae
push
scas
jns
cmp
jl
sahf
mov
mov
xchg
dec
sbb
pop
jns
fs
or
out
cltd
insl
sbb
mov
mov
sbb
sub
sub
and
sbb
xchg
push
push
jp
popf
cmp
jp
dec
fldt
cs
jae
push
xchg
pop
xchg
cli
inc
test
aas
pop
lahf
cmp
xchg
outsb
pop
pop
mov
ret
adc
pop
sahf
sub
jae
lock
or
inc
outsl
add
add
loopne
jo
jbe
inc
enter
push
push
in
xor
scas
sub
imul
stos
or
sbb
or
pop
adc
push
adc
jno
or
lea
mov
push
loope
xor
dec
iret
pop
fistl
adc
push
imul
dec
xor
pop
xlat
jmp
inc
bound
add
mov
leave
into
cwtl
pop
repz
rol
out
jns
cmp
sbb
push
mov
push
test
cmp
clc
and
cmp
in
adc
inc
mov
ljmp
adc
mov
mov
into
inc
adc
hlt
inc
and
stos
xchg
xor
sub
cs
adc
cmpsb
xlat
xor
jle
stos
dec
jns
and
xchg
mov
lock
int
jno
pop
pop
push
pusha
mov
mov
mov
inc
cwtl
sub
enter
test
out
dec
push
popf
pusha
test
xchg
sbb
jo
in
jle
push
lods
orl
sbb
push
or
jmp
jl,pt
and
adc
mov
mov
enter
sar
add
sub
jb
mov
mov
sub
push
xchg
and
xchg
cmc
add
pop
outsb
bound
xchg
adc
dec
jp
jg
mov
mov
enter
mov
es
stc
and
in
out
stos
ret
clc
pop
xchg
js
shll
sbb
movsb
jmp
outsb
dec
xchg
xor
jns
jmp
sub
adc
mov
push
mov
mov
sub
mov
add
sub
or
adc
imul
xchg
stos
scas
push
js
imul
or
fisubrl
jp
jo
dec
in
push
jbe
lcall
ret
mov
add
hlt
mov
sbb
stos
pop
cmp
test
mov
mov
movb
clc
repz
dec
in
or
sub
aas
test
imulb
pop
add
aas
jae
sti
mov
sub
aad
mov
sbb
nop
xchg
dec
mov
shr
add
jnp
mov
xchg
lock
cmp
lret
xor
leave
mov
bound
mov
rorb
jo
fs
cmp
loopne
lock
lea
jg
js
sar
clc
sbb
inc
cltd
shll
sar
imul
insl
aam
pop
imull
pop
pop
leave
xchg
into
xchg
movsb
jns
int3
or
or
aam
mov
out
in
lock
fimull
mov
ret
dec
lea
repnz
aas
rcll
and
clc
ja
icebp
dec
es
icebp
ret
fnstcw
mov
jp
push
repnz
aas
adc
adc
cmp
lds
in
test
cltd
push
dec
insl
pop
fists
or
pop
mov
sbb
sub
sub
sub
push
popf
sub
mov
cmpsl
sti
xchg
sub
orb
jae
out
mov
fists
or
outsl
pushl
or
jg
fbstp
jne
cs
repz
fidivrs
lcall
sbb
xlat
push
ds
add
test
out
cs
in
negb
aam
add
jae
inc
inc
xlat
ficompl
out
adc
mov
jl
mov
test
xlat
in
and
iret
ljmp
cmc
inc
cmp
pushf
sbb
mov
add
out
shlb
sub
push
lock
inc
cmp
push
push
fiadds
mov
lcall
adc
push
in
cmp
xor
and
sub
in
int3
sbb
jmp
dec
fisubl
ds
jg
sbb
ljmp
dec
sti
scas
jns
adc
pop
cmpl
jnp
cwtl
add
out
sbb
sub
inc
test
sub
pop
pop
push
pop
mov
jnp
rorl
inc
mov
arpl
leave
arpl
add
cmpsb
xor
pop
pop
hlt
cmpl
repz
or
xchg
sbb
xchg
test
mov
aad
dec
sub
jl
cmp
insl
mov
inc
lods
mov
or
rcrb
push
sahf
mov
sar
mov
mov
inc
xchg
test
adc
sarb
add
pushf
sbb
dec
xor
sbb
insl
std
and
fstps
pop
push
mov
sub
mov
aad
pop
adc
and
pop
xchg
mov
jecxz
je
insl
jo
mov
loope
sbb
out
js
outsl
mov
xchg
fidivl
xchg
jae
fucom
mov
cltd
fs
in
push
std
inc
xor
pop
jmp
xchg
scas
aaa
inc
push
jp
and
cmp
adc
pop
push
lret
inc
adc
adc
jo
andb
jmp
in
ljmp
scas
xor
test
jl
pop
push
lcall
xchg
sub
shl
lret
add
adc
adcl
lahf
imul
or
xor
adc
fisubs
sti
shll
sub
popa
sti
sbb
cmpsb
loopne
bswap
mov
mov
iret
lahf
loopne
testb
das
pop
mov
pop
stos
aaa
cmc
jae
or
push
push
das
lcall
gs
sub
mov
lret
lds
dec
inc
movsl
sub
out
mov
aaa
ja
adc
mov
jg
or
into
sbb
repnz
push
iret
cltd
sti
xorl
pusha
mov
push
mov
push
loope
mov
xor
mov
push
aad
cmpsl
inc
fimull
dec
jmp
jle
fiaddl
cmp
popf
jge
jne
push
mov
sti
mov
repz
mov
insl
inc
or
push
sub
aad
inc
sbb
add
mov
xor
sbbb
push
cld
ja
fdiv
adc
xor
pusha
push
sbb
fsubl
push
cmpl
lods
mov
fiaddl
mov
iret
int
sbb
test
pop
mov
sti
roll
es
les
push
lock
sbb
mov
std
xor
stos
sbb
xlat
dec
sub
or
inc
adc
and
sahf
iret
jecxz
jae
icebp
das
xchg
out
or
or
xchg
cmp
in
out
jns
and
pop
cmc
je
ljmp
into
movsl
loopne
pop
lock
sbb
inc
push
in
push
mov
adc
shll
pop
push
adc
movsl
lock
pop
lahf
and
das
in
mov
jne
stos
nop
nop
push
mov
cmc
lods
inc
xchg
iret
sub
mov
mov
dec
jp
nop
and
jns
unpckhps
dec
mov
into
in
cmp
lea
cmpsb
push
xor
add
xor
dec
mov
sub
jg
pop
cmp
or
mov
jns
dec
mov
push
mov
fs
js
mov
dec
and
jp
arpl
test
push
nop
pusha
dec
scas
sbb
addr16
test
mov
jge
stc
in
mov
push
xor
hlt
mov
cmc
and
lret
inc
sbb
in
xchg
mov
cltd
add
adc
xorb
orl
loopne
or
inc
aaa
push
mov
scas
adc
outsl
or
in
fs
add
les
sahf
daa
mov
shrl
push
push
shll
jno
mov
mov
mov
cwtl
dec
sub
data16
mov
aaa
rcl
lds
fstpl
jno
cwtl
or
pop
rorb
sahf
rorb
in
inc
incb
inc
xchg
nop
out
lret
sub
out
into
push
jge
pop
dec
adc
jb
pop
pop
dec
or
shll
mov
pusha
push
test
push
lods
mov
stc
cmpsl
xor
cmp
xor
adc
out
and
lods
rcrb
mov
jb
aad
jbe
rcl
xlat
jb
mov
mov
xor
dec
ljmp
dec
cmp
in
loop
add
lods
frstor
inc
mov
sbb
call
mov
mov
pop
mov
mul
xlat
mov
scas
clc
pop
add
int
mov
xor
push
loop
or
add
and
push
mov
pop
xchg
ss
cmp
sub
sbb
sbb
mov
mov
add
push
jno
aas
ret
pop
lea
test
outsb
out
jle
popf
out
mov
xor
cmp
cmp
aaa
sbb
adc
adc
in
mov
and
mov
or
push
stos
imul
sub
mov
popf
clc
ja
jge
fcmovne
mov
cmp
inc
inc
sub
por
pop
sbbl
in
push
std
cmc
mov
xchg
add
icebp
and
mov
pop
mov
frstor
repnz
inc
pop
sub
jb
add
stos
mov
pop
js
xor
out
loope
ja
jno
adc
lods
adc
sahf
pop
adc
or
adc
cwtl
push
mov
adc
and
out
mov
cmpsb
xchg
xor
xchg
fwait
sub
stos
pop
stos
mov
dec
lods
nop
fimull
sbb
push
mov
inc
ja
mov
lock
sbb
ss
icebp
add
stos
push
dec
jmp
mov
xor
pop
jl
sub
jmp
outsb
or
sar
jno
stc
stc
js
xchg
sbb
outsb
adc
sbb
xchg
adc
xchg
xchg
andl
push
sbb
sbb
adc
mov
mov
js
sbb
scas
inc
lock
sti
push
fidivrl
stos
imul
ret
jp
sti
loope
dec
cmpb
dec
mov
shll
xchg
xchg
mov
inc
sub
add
cli
imull
sbb
jl
popa
dec
mov
adc
pop
push
lea
inc
push
clc
je
int3
push
adc
or
push
movsb
stc
jg
loopne
std
sub
repnz
jbe
jae
das
dec
jno
icebp
cmp
push
pop
lea
addr16
or
mov
or
xor
hlt
cmp
sub
repz
push
std
cmp
mov
jecxz
es
xchg
or
add
cmpsl
outsl
push
jecxz
sbb
call
ds
cmp
in
mov
dec
clc
lock
icebp
inc
pop
sub
push
sbb
or
cs
jl
or
pushl
aam
in
stc
movsb
adcb
dec
in
adc
ljmp
adc
mov
cld
dec
fldcw
add
out
mov
sub
and
adc
shlb
fxch
mov
push
inc
int
sub
mov
add
push
add
push
ror
push
cmpsb
movsb
imul
lock
push
and
aaa
imul
jmp
xor
daa
fxch
or
mov
ds
mov
pop
cmp
fsubs
sti
push
xor
jb
dec
sub
jne
dec
and
or
mov
or
push
mov
clc
jnp
mov
rcrb
inc
add
adc
inc
jbe
push
and
add
sbb
fimull
lret
inc
or
sahf
fidivrs
scas
jge
sar
aaa
loope
cld
pushl
push
push
into
sub
sbb
xor
jae
jp
add
in
cwtl
lods
dec
outsb
iret
xchg
xchg
mov
jnp
lahf
out
in
jns
das
movsb
std
push
dec
gs
push
call
mov
add
bound
add
cmp
mov
or
sbb
adc
ds
xor
pop
sarb
mulb
dec
sub
test
ret
in
mov
scas
dec
ljmp
lea
mov
aam
xchg
std
shl
and
xchg
lods
push
lahf
mov
and
mov
inc
and
mov
ja
add
clc
pop
in
push
in
mov
jmp
fnsave
dec
inc
movsb
fs
icebp
xlat
dec
jno
cmp
xchg
testl
add
nop
ficoms
lds
jp
sbb
dec
sbb
dec
andl
hlt
xor
fstpt
mov
sub
test
cmc
rcrl
add
rcll
inc
in
cmpsl
cmp
jbe
push
or
xlat
jecxz
inc
and
dec
insb
aaa
mov
push
ret
sbb
and
sub
dec
dec
stos
les
ret
pop
inc
repnz
hlt
mov
inc
mov
lahf
sbb
pop
or
push
scas
jge
or
movsl
xchg
or
cltd
ljmp
push
or
dec
mov
aas
mov
mov
and
das
or
lds
mov
nop
aas
mov
fdivp
in
xor
inc
pop
daa
xchg
xor
fildl
daa
data16
lds
sbb
add
sahf
inc
xor
stos
ss
dec
push
push
outsl
sbbl
or
pop
cmp
cmp
mov
dec
repnz
mov
clc
cmc
ss
orl
pop
aam
loopne
shl
int3
mov
inc
sub
repz
pop
mov
imul
mov
pushf
test
lods
fst
lcall
and
jg
mov
jmp
gs
or
aad
sub
jb
test
mov
or
and
push
movsl
enter
jl
sbb
dec
dec
std
hlt
or
in
xchg
insb
lods
xchg
cmpsb
or
enter
pop
aaa
lahf
ror
subb
mov
xchg
out
das
push
xchg
outsb
mov
repz
cmp
lods
jno
negl
sti
stc
js
pop
sbb
aam
jge
pop
and
push
ds
pop
dec
ret
mov
sahf
lcall
sub
xchg
outsb
pop
push
mov
cs
movsl
cmp
xchg
xchg
ljmp
ss
xor
daa
push
bound
out
sti
fstps
movsbl
loopne
pop
pushf
lret
adc
arpl
lods
movsb
and
xchg
push
push
movsl
pop
ret
and
shl
imul
jecxz
or
jecxz
outsl
gs
lods
stos
jl
cwtl
cs
rcrb
or
jb
push
int3
test
dec
mov
sbb
inc
arpl
or
mov
fwait
push
inc
mov
push
adc
idivb
call
sub
sbb
sub
inc
addr16
sbb
sub
js
lcall
call
inc
lds
test
shlb
ret
jge
idivl
jbe
lods
mov
mov
imul
lea
fistps
mov
repnz
sbb
mov
jbe
adc
inc
or
mov
popf
ljmp
inc
sub
add
xor
popf
mov
inc
loopnew
push
cli
fisubrs
jmp
mov
mov
cmp
adc
jnp
fistpl
inc
shlb
jae
xchg
mov
add
sar
hlt
into
cmc
cmp
lcall
jp
and
xor
dec
stc
dec
cmp
inc
cmp
scas
pop
jnp
jne
fs
sub
sbb
ds
xchg
out
sub
and
test
out
fs
jmp
in
aaa
flds
sbb
aas
out
es
icebp
sti
sbb
ret
dec
xchg
pop
cmp
std
dec
and
scas
mov
fmull
sbb
scas
and
int3
sbb
xchg
mov
push
pop
int3
aad
out
dec
push
mov
les
fdivl
sbb
xchg
add
js
sub
stos
sub
std
ljmp
jmp
data16
cmp
fldl
xchg
sub
shrl
pop
add
pop
jge
int3
std
loop
fstpl
push
inc
loop
sbb
fldt
adc
xchg
jb
sub
test
mov
fdiv
mov
addr16
add
or
adc
fdivs
cmc
daa
into
sbb
or
stos
out
mov
xorl
fcoml
pop
dec
or
ja
scas
add
into
movsl
mov
mov
ja
add
jmp
mov
jmp
mov
or
sbbb
cmp
and
insl
out
rolb
mov
pop
aas
or
xor
add
sbb
add
pop
inc
push
rcrl
sbb
push
pop
jle
aam
mov
shl
call
iret
push
jnp
data16
sub
test
ss
push
pop
stc
divl
lock
or
in
push
xchg
test
rol
push
and
ss
sub
push
lret
push
ljmpw
xor
xor
pop
xchg
inc
jns
repz
or
test
sub
pop
cmc
xor
decl
xchg
les
jge
mov
push
arpl
cli
dec
out
fsqrt
inc
xor
fldl
insl
mov
xchg
adc
ret
add
lea
repz
xchg
and
movsb
jp
jbe
xor
fadds
or
mov
andb
popa
mov
pop
mulb
in
fsts
and
mov
inc
xorl
das
cmpsl
cmp
and
aaa
push
test
bound
out
sbb
mov
jno
clc
jmp
push
lcall
je
icebp
insl
cmp
and
dec
push
xchg
repnz
shlb
jnp
test
and
pop
cltd
dec
dec
xchg
mov
sti
xchg
sub
inc
xchg
cmp
popf
sub
mov
cmp
mov
repnz
xchg
out
jp
clc
inc
sbb
icebp
fwait
scas
out
cmpsl
ret
mov
cmp
ljmp
push
cmc
xchg
aas
and
mov
lret
pop
insb
ret
insb
mov
xchg
mov
cmc
jo
cld
and
sbb
cli
mov
int3
out
adc
jmp
mov
add
cld
adc
in
dec
jns
lcall
push
je
push
adc
notl
scas
mov
push
pop
or
and
mov
cwtl
test
and
sbb
imulb
shl
lock
sbb
sub
fsubs
in
xor
sub
call
dec
jl
fldt
test
cmpsb
clc
jecxz
movb
pop
adc
ljmp
cld
shlb
sub
and
aad
int
int
dec
enter
adc
movsl
sub
shll
lea
sbb
push
cmp
hlt
shll
xlat
sahf
xor
mov
xor
cmp
mov
pop
sbb
lcall
xor
and
xchg
mov
loope
sbb
and
push
cmpsb
sbb
dec
pushf
xor
addr16
arpl
or
les
jp
pusha
mov
mov
sub
xchg
pop
sub
sahf
aas
call
xor
aad
cs
jns
ss
hlt
aad
or
sub
js
jg
xlat
cmp
xchg
xor
adc
lcall
mov
push
roll
out
sbb
clc
cli
sbbl
push
mov
mov
mov
dec
dec
sbb
jo
repz
aaa
adc
mov
loop
aad
jb
xor
and
push
and
out
inc
mov
gs
movl
dec
jmp
loopne
mov
clc
data16
jbe
idiv
test
mov
ds
dec
adc
mov
cmp
inc
jbe
insb
pusha
sub
mov
clc
push
add
dec
jo
push
sub
pop
xor
sbb
popf
shrl
jns
push
mov
test
call
xchg
out
lea
cld
xchg
xchg
mov
loopne
mov
mov
insl
inc
mov
es
pop
jno
insl
std
push
leave
mov
xchg
in
or
inc
sbb
adc
and
inc
aas
clc
inc
std
adc
mov
test
cmpsl
into
insl
mov
movsl
xchg
lret
mov
pop
and
mov
push
mov
pop
jns
clc
imul
cmpsl
loop
dec
push
push
and
jb
pop
ds
outsb
jns
adc
xor
sub
and
mov
aaa
leave
mov
scas
or
push
test
xorl
test
flds
repnz
mov
fidivs
pop
lret
sub
lahf
cld
ret
imulb
adc
popa
insb
ja
xchg
mov
call
lock
pop
cmpsb
shll
and
out
inc
ret
into
pop
xor
movsl
push
xlat
xor
xchg
cmp
fistps
lock
test
and
or
push
adc
out
jge
jp
aad
adc
xchg
shll
lods
mov
cmpl
xchg
fwait
pop
lea
lods
movsl
inc
mov
xor
insl
xchg
cmp
xchg
sbbb
into
mov
test
or
fbld
mov
adc
mov
push
cmp
dec
fldenv
or
aas
or
loope
dec
xlat
lods
aas
stos
stc
mov
jb
ljmp
leave
clc
into
inc
movsl
cmpsb
dec
mov
fistl
out
or
mov
js
sbb
adc
sbb
daa
scas
stos
sbb
push
sbb
outsl
ljmp
sahf
mov
pusha
subl
daa
psllq
daa
pushf
stc
add
jbe
push
cmp
popf
jb
arpl
cmc
enter
cmp
jmp
mov
enter
rcl
jp
mov
xor
iret
hlt
pop
jbe
lds
push
cmpsl
pop
orb
insb
stos
divl
sarl
cld
jne
push
addr16
add
in
popf
jge
mov
lret
inc
push
and
mov
fistps
or
or
push
insb
sub
nop
mov
sbb
stc
lock
mov
xor
mov
insl
repz
outsl
sub
sahf
mov
jne
outsl
test
add
fucomip
and
cmp
test
jecxz
clc
fwait
dec
mov
xchg
jb
cli
inc
sub
cmc
xor
mov
into
or
shll
mov
imul
lods
pop
adc
mov
int
add
inc
into
mov
sbb
push
loope
addb
int
xchg
imul
dec
mov
loopne
xchg
js
mov
movsb
lods
movsl
fadds
fsubs
sbb
sub
nop
dec
insb
jle
jo
pushf
test
inc
dec
int
jl
repnz
mov
mov
xor
inc
stc
cs
pop
out
stos
lds
adc
js
jae
mov
lds
sub
es
xchg
iret
xchg
nop
dec
and
jmp
int
lds
xchg
mov
push
and
push
cs
jge
mov
insb
testl
out
add
pop
jge
pusha
jp
loope
scas
es
add
ret
push
adc
sub
dec
sub
or
popa
and
pop
cli
pop
mov
sub
mov
sub
dec
fsubs
insl
pop
inc
imul
adc
mov
popl
mov
andb
mov
stos
stos
xor
mov
sbb
lea
xchg
or
ficomps
jecxz
push
mov
in
jp,pn
xor
aad
cmp
ds
stos
adcl
or
add
mov
pop
cmp
xlat
stos
xchg
jnp
inc
push
das
and
mov
subl
test
push
filds
fiaddl
cld
xor
adc
inc
sub
jecxz
mov
dec
movsb
stc
xchg
mov
cmp
mov
push
out
pop
push
sti
stc
ja
pushf
sbb
cli
jg
inc
je
cmp
int3
inc
pushf
add
in
mov
outsl
sub
dec
adc
and
inc
sahf
inc
adc
jae
test
int3
pop
jno
fwait
mov
aam
lret
ss
pop
lds
push
jmp
testl
sahf
xchg
addl
mov
cwtl
xchg
pop
mov
aaa
insb
test
cmpsl
sti
xor
ret
imul
pop
lods
les
in
loopne
outsb
push
call
cmc
loope
arpl
add
negb
ljmp
mov
mov
mov
cmc
loop
stc
sahf
pop
pop
cmp
sbb
mov
sahf
push
pop
adc
cs
push
push
mov
cmpsb
push
insb
sti
pop
dec
or
adc
xor
test
icebp
dec
pop
es
jo
sbb
push
aas
push
pop
mov
push
push
jne
push
sub
xlat
adcl
fwait
insl
inc
std
ror
push
loop
xor
repz
sbb
jge
adc
push
jge
out
pop
outsl
mov
popa
pushf
shrl
cmp
fisttpl
add
xor
dec
jg
dec
push
fsubrp
xor
add
out
je
out
popf
lahf
push
add
jbe
enter
rcll
in
mov
jle
arpl
dec
xor
loope
mov
adc
add
les
push
int3
mov
inc
out
pop
in
loop
cmp
sbb
jnp
popa
repz
sbb
mov
aaa
inc
xor
sbb
sub
xchg
xchg
push
loope
outsb
mov
adc
aad
in
mov
push
push
in
arpl
in
xor
je
popa
push
cli
pop
sub
lea
in
mov
dec
jecxz
dec
in
push
inc
add
outsb
rcl
insb
jp
xchg
scas
xchg
jp
daa
or
and
xor
sbb
mov
loope
inc
sbb
mov
add
mov
cli
mov
nop
repz
ja
pop
add
aaa
inc
rcr
xchg
dec
mov
in
mov
stos
or
cmp
inc
sbb
icebp
push
xor
inc
add
xchg
cmp
and
popf
cmp
xor
call
or
cmp
imull
add
mov
enter
sbb
inc
ret
fwait
gs
mov
jg
lods
sub
popf
jb
cmp
mov
repnz
jae
and
and
ficoms
push
imul
jl
pop
dec
mov
push
mov
inc
lahf
bound
pusha
gs
fnsave
push
push
scas
int3
mov
pop
in
cmp
adc
inc
inc
sti
rcr
adc
or
pop
cmpsb
sti
xchg
xorl
lcall
inc
lods
pop
std
and
lret
aaa
jae
add
lods
xchg
mov
pop
test
cmpl
mov
cmpl
mov
push
cmp
mov
bound
mov
addr16
pop
jo
icebp
push
xchg
jae
rcrb
cmp
mov
xchg
xchg
jbe
sub
mov
mov
pop
jo
adc
insl
mov
xor
nop
daa
add
jae
adc
gs
xor
das
incl
icebp
dec
mov
xor
pop
mov
dec
dec
lret
js
and
pop
mov
hlt
fnstcw
xchg
in
out
cmp
adc
ret
mov
or
xchg
sub
scas
mov
jp
hlt
add
out
jg
arpl
pusha
pushf
mov
sarb
shll
add
inc
imul
push
imul
in
jl
mov
fisubrl
push
xchg
pop
stos
xchg
pop
imul
cli
out
aad
jg
les
mov
inc
outsb
fistpll
mov
rclb
fdiv
rclb
leave
sbbb
ds
stos
adc
sbb
and
or
push
pusha
push
mov
adc
test
mov
dec
mov
andl
pop
mov
mov
or
sub
pop
daa
cmpsl
sub
pop
push
sub
stos
rcr
lock
rorb
or
int3
repz
dec
pop
dec
enter
push
insb
movsb
loope
arpl
pop
xchg
dec
rcrl
cmpsl
rcl
xchg
movsb
adc
sarl
dec
dec
js
scas
pop
in
mov
popa
xor
xchg
mov
jmp
cmp
and
fimull
pop
mov
adc
sti
add
and
mov
inc
or
dec
jo
mov
sbb
testl
imul
push
jbe
add
js
fildll
divb
out
dec
pop
mov
jle
inc
das
xchg
mov
jno
pop
scas
aaa
stc
lods
push
push
push
insb
xchg
mov
or
mov
jecxz
js
push
lcall
adcl
xor
sub
dec
popa
jp
sbbb
in
addr16
fwait
jl
jns
cmpsl
mov
je
pop
xchg
dec
and
inc
mov
and
lret
xchg
sbb
fs
xor
jmp
xor
sub
sub
sub
pop
aaa
adc
mov
call
ljmp
cmp
xchg
jecxz
pop
push
test
push
fldenv
push
add
inc
cmpsb
xor
ljmp
in
mov
loop
mov
xorl
xchg
mov
jl
imul
cmpsb
popa
sbb
sbb
pop
and
mov
dec
js
cmc
mov
add
dec
and
inc
into
scas
pop
dec
adc
testl
xchg
out
dec
int
and
and
daa
inc
pop
add
sub
xchg
sahf
nopl
inc
inc
inc
out
out
hlt
repnz
mov
sbb
mov
mov
inc
lock
popa
add
adc
pop
inc
jmp
inc
cmp
and
and
xchg
adc
mov
mov
mov
jl
jb
cmp
fld
mov
adc
fcoml
lea
pop
cli
loop
pop
fwait
imul
and
xor
mov
mov
jae
and
stc
scas
mov
pop
mov
push
and
mov
fldcw
mov
push
cwtl
mov
adc
sbb
ja
sbb
int3
mov
jns
add
stos
aas
mov
cld
movsl
jne
aas
addr16
int
dec
mov
push
sbb
arpl
push
scas
fiaddl
std
aad
or
lret
outsl
test
out
adc
sbb
cmpsl
call
mov
icebp
inc
out
dec
call
int
push
sti
mov
je
inc
pop
jmp
lcall
dec
xor
fcmove
cli
or
push
xchg
inc
mov
xchg
jecxz
es
lods
out
ret
pushf
and
xchg
aaa
xchg
outsl
xor
fs
cmp
jno
rolb
call
xor
xor
push
mov
fisubs
test
push
stc
loope
mov
cmp
out
xor
mov
mov
lods
inc
cld
inc
add
push
mov
mov
addr16
inc
cmp
outsl
sub
cmp
and
clc
mov
cmpsb
jo
inc
push
icebp
xor
in
dec
roll
mov
pop
jns
aas
and
les
sar
dec
in
xor
mov
ror
push
dec
arpl
add
pop
test
sbb
add
cmpsb
push
pop
insl
int
add
sbb
jp
xor
xor
aad
std
mov
in
jb
leave
imul
mov
cmpsb
iret
jecxz
add
inc
lcall
aam
adc
cmp
lea
ss
pop
xor
dec
repnz
es
pop
jne
dec
push
ror
test
loopne
pop
aas
sbb
clc
test
inc
out
cli
mov
dec
lds
testb
and
sub
sub
loope
int
lock
push
push
repnz
pop
push
cli
fcompl
aad
cld
xchg
fdivs
add
cwtl
icebp
iret
fwait
jge
imul
pop
mov
add
mov
mov
mov
push
icebp
sbb
mov
flds
pop
mov
add
add
pop
pop
pop
pop
mov
xorl
pusha
sbb
in
push
movsb
sbb
mov
jns
scas
int3
in
fisttpl
pop
pushf
movsl
and
rcr
pop
mov
daa
sbb
popa
push
std
jl
jmp
mov
test
pop
imul
stc
imul
loopne
pop
mov
pop
cmpl
mov
scas
test
jle
sbb
xor
pop
jmp
or
mov
push
mov
fs
mov
sbb
mov
adc
lods
test
pop
std
cmp
inc
fisubl
pop
jl
call
cli
sahf
pop
sub
xchg
imul
inc
das
imul
cwtl
jns
inc
add
popf
test
dec
xlat
push
mov
adc
push
pop
push
xchg
mov
in
out
sti
adc
es
sub
pop
rorl
push
pop
jae
mov
fldenv
lods
cmpsl
mov
jmp
pop
adc
mov
cmc
sbb
push
enter
mov
and
or
movsl
movsl
xlat
add
stc
dec
push
adc
popf
dec
fs
xor
ret
lea
outsl
and
in
jbe
je
xor
loop
push
push
jg
fisttpll
test
shlb
push
cmpsl
or
outsl
out
inc
and
cmp
pusha
imul
inc
mov
jp
xchg
fmull
jae
and
xchg
lods
movsl
outsb
cmpsb
mov
mov
xlat
adc
daa
or
insb
mov
sub
adc
out
fnstsw
dec
mov
mov
leave
adc
out
cmp
cmpb
lret
jb
and
add
and
push
pop
dec
sub
pop
add
jecxz
inc
adc
dec
mov
jno
mov
cli
and
sbb
mov
mov
or
cs
jo
cmc
sbb
sahf
add
cmp
pop
mov
test
or
xchg
fs
pusha
mov
push
pop
movsl
push
jo
test
das
inc
xor
jnp
cmp
sbb
xor
sub
dec
and
das
test
sub
push
mov
push
pusha
mov
inc
dec
mov
dec
jmp
cld
clc
popf
into
sbb
ret
lahf
add
pop
push
clc
ljmp
lret
into
mov
outsb
mov
icebp
filds
mov
xchg
or
lea
xchg
cmpsb
sbb
mov
inc
fimull
and
ljmp
sti
pop
jmp
imulb
call
fnstsw
lods
stos
mov
es
xchg
fisttpl
jmp
add
dec
outsl
gs
sub
loopne
in
in
xchg
aas
shrb
cmp
xor
test
mov
test
cmp
fstps
mov
sbb
xor
pop
xchg
rorb
rcl
fwait
dec
jne
inc
mov
mov
enter
mov
adc
mov
dec
cwtl
daa
orl
dec
outsb
loope
xlat
inc
out
mov
jge
jge
aas
repz
out
fwait
sub
mov
lods
into
fadd
test
pop
repz
data16
pop
push
cmp
ss
or
jecxz
push
adc
clc
xor
in
jmp
pop
add
xor
fs
lds
or
push
icebp
stc
fisttpll
mov
in
dec
cltd
xchg
mov
std
lea
mov
ljmp
enter
lds
sti
xor
js
mov
pop
fidivl
push
add
mov
outsb
pop
cmp
xor
dec
mov
icebp
xchg
xorl
pop
jnp
jl
pop
cs
das
divb
dec
push
xchg
sahf
push
js
imul
push
mov
or
cli
insb
mov
pusha
adc
repz
jbe
mov
stc
push
xchg
xor
mov
sbb
pop
push
jnp
or
test
orl
pop
dec
dec
fstl
sbb
push
dec
incl
dec
sti
inc
and
jb
pop
adc
push
fmuls
shlb
xor
jge
pop
hlt
dec
nop
push
add
sub
lret
xor
xchg
jg
dec
stos
cmp
test
es
mov
int3
clc
mov
push
das
iret
jecxz
inc
dec
stos
faddl
xchg
ds
in
xchg
imul
add
testl
icebp
leave
repz
pushf
and
repz
pop
je
loopne
xor
into
pop
int
rcrb
scas
enter
add
test
sbb
push
xchg
cmp
jbe
cmp
test
mov
int3
dec
cmc
insb
pop
cmc
mov
mov
push
push
in
xchg
outsb
mov
sahf
jnp
jne
mov
pusha
fsubs
pusha
cltd
movsl
sbb
out
mov
and
xor
push
mov
inc
dec
jne
lods
adc
xchg
adc
rcr
aam
call
js
or
jp
fwait
sbb
xor
pop
sbbb
in
mov
xchg
test
lcall
inc
in
rorl
inc
cmp
mov
jnp
xchg
aam
call
mov
call
push
jo
and
arpl
inc
jg
addr16
xchg
ja
xchg
push
cmpl
sub
xor
inc
movq
push
jo
pop
mov
pushf
pushf
lret
cmpsl
and
jae
leave
je
stc
pop
push
call
or
shll
test
loop
push
push
and
push
in
mov
mov
push
mov
xchg
imul
jns
insl
cmp
mov
xchg
out
mov
inc
inc
mov
ret
dec
dec
test
cmpsl
aam
add
lock
or
or
mov
dec
pop
and
aaa
push
xor
adc
add
pop
out
jmp
es
xor
cli
xchg
lea
xor
and
xor
push
arpl
push
es
xlat
mov
or
iret
stc
lret
cmp
or
mov
mov
mov
sbb
dec
test
test
loope
call
cwtl
adc
loope
cld
sub
cmp
stc
add
pop
inc
mov
jecxz
sbb
dec
or
loope
sbb
fstp
ror
or
imul
dec
mov
mov
jae
mov
mov
mov
shll
mov
and
pop
mov
dec
mov
sti
xor
pop
aas
sub
cmc
xchg
lret
popa
xor
xor
sub
adc
push
arpl
push
jb
test
shlb
lods
inc
xchg
ja
imul
adc
lret
lret
jae
sub
les
lds
dec
adc
adc
movsb
aas
cmp
fildll
push
pop
or
adc
fadd
sub
lcall
ja
dec
jle
or
xor
iret
xchg
sbb
vmovmskpd
mov
mov
repz
inc
jl
inc
insb
je
daa
clc
std
jbe
lahf
mov
add
add
add
int3
rolb
and
cmp
fs
jns
inc
ss
and
mov
das
add
ret
xchg
or
sbbl
or
inc
sbb
push
rcr
pop
xchg
wrmsr
mov
loope
and
mov
std
mov
push
xchg
imul
test
add
push
mov
out
addr16
or
loope
icebp
pusha
mov
bound
mov
ret
cli
in
jns
mov
scas
out
xchg
or
xor
mov
adc
call
xor
icebp
sub
inc
loope
dec
popf
sbb
mov
fdiv
pop
pop
aaa
xor
jle
movsb
and
mov
sar
loopne
ja
roll
push
sarl
push
jae
insb
sub
jnp
jge
mov
mov
cmp
or
xor
clc
and
or
dec
cmp
xchg
cltd
iret
pop
jne
jge
shll
pop
pavgw
loop
adc
adc
push
xor
push
js
sbb
test
arpl
dec
xor
adc
mov
pop
mov
jge
mov
clc
insl
and
jp
adc
xlat
dec
jo
or
fcmovbe
mov
mov
jle
in
xor
pop
mov
shr
bound
enter
aaa
rcrl
inc
add
daa
out
divb
adc
stos
dec
mov
leave
mov
jle
cmp
and
mov
aad
pop
outsb
cmpsb
pop
shll
jno
int
popf
xchg
sahf
jge
clc
add
xchg
jmp
xchg
jge
sahf
and
jecxz
inc
xchg
jmp
loope
inc
mov
test
sbb
add
into
inc
jb
jns
push
and
push
test
cmp
jne
loopne
aas
mov
sarb
flds
pop
call
fsubl
lods
cmc
inc
jp
xor
mov
add
scas
xchg
jae
imul
mov
insb
inc
rclb
cmp
jle
and
push
dec
lea
fldl
and
mov
test
fcompl
adc
dec
xor
fiaddl
mov
adc
jle
push
cmpsb
xchg
lods
inc
stc
dec
xchg
imul
bound
push
test
inc
inc
enter
xorb
inc
sub
imul
mov
push
xchg
sub
add
cmp
cmp
adc
push
xchg
mov
out
adc
lret
jge
and
js
push
sub
pop
aaa
rcrb
pop
inc
push
pop
stos
enter
xchg
jae
out
dec
out
fnstcw
rorl
and
xchg
mov
arpl
js
jmp
lods
adc
mov
cmp
mov
mov
fisubl
cmc
push
std
xor
enter
push
dec
and
push
inc
pop
push
push
adc
add
mov
mov
bound
addr16
neg
mov
jae
mov
out
out
sub
test
jg
push
mov
cmpsb
inc
push
outsb
adc
push
dec
add
cmpsb
xlat
pop
lahf
and
cld
cmp
inc
adc
aaa
mov
lcall
inc
bound
xchg
fistps
cs
adc
or
pop
fldt
sbb
jno
mov
adc
push
ret
dec
mov
aad
mov
scas
sti
cmc
sub
clc
das
faddp
mov
cmc
mov
push
pop
mov
pop
xor
dec
insb
jns
cmpsb
sub
cmp
mov
xor
mov
lcall
push
loop
clc
inc
out
lahf
fdivl
sbb
gs
push
mov
push
pop
fdivrl
pop
add
lea
les
jne
sbb
cmpl
nop
sub
addr16
inc
jns
pusha
or
push
jno
addr16
mov
test
clc
jne
xchg
jmp
mov
jno
jl
mov
jl
push
push
add
mov
mov
inc
cmp
fcmovnu
jno
pop
std
mov
nop
mov
daa
lcall
cmp
arpl
jg
in
adc
pushf
xchg
adc
mov
inc
iret
cmp
imul
and
push
push
xchg
and
insb
imul
and
mov
lret
rolb
push
pop
clc
mov
mov
jo
xchg
js
adc
mov
and
inc
shrb
jle
pop
jb
ret
cmp
xor
mov
adc
ss
gs
sub
cmpb
adc
lods
jae
loop
hlt
xor
add
scas
mov
enter
mov
adc
insl
out
pop
les
add
xor
sub
push
and
mov
les
fwait
xchg
mov
sub
test
lcall
into
jb
add
sbbl
pusha
mov
in
imul
lcall
mov
iret
clc
mov
dec
out
cwtl
jmp
sbb
mul
adc
dec
adc
dec
mov
push
sbb
adc
add
pop
cmp
xlat
mov
cli
inc
lret
mov
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
and
sub
dec
cmp
lret
in
push
out
call
jle
xchg
pop
icebp
shlb
and
arpl
ret
mov
add
fldl
dec
es
insb
mov
adc
push
sub
and
fwait
mov
xor
add
leave
movsb
cmp
cmp
addr16
xlat
pop
add
cmp
xchg
pop
mov
jg
nop
dec
adc
mov
imul
call
aam
aad
fs
and
mov
and
ja
mov
or
or
lods
mov
leave
insl
add
insl
xor
add
icebp
xchg
xchg
insl
push
jns
insb
pop
push
jne
shlb
sub
arpl
jae
push
cld
int
fbstp
in
dec
sub
xchg
addr16
jae
pusha
add
in
inc
adc
pop
add
mov
iret
and
popa
and
cmp
aam
mov
xchg
xor
in
xor
mov
repnz
sub
mov
mov
out
xor
push
shll
ss
jb
loope
push
scas
in
mov
out
add
xor
outsb
xor
jo
mov
nop
add
dec
jns,pt
test
sbb
mov
xchg
adc
dec
mulb
std
push
lea
jae
iret
push
push
and
sarl
setl
std
int3
sub
sub
dec
lods
mov
add
in
push
outsl
test
adc
adc
mov
stc
daa
lods
sahf
in
xchg
or
dec
icebp
in
jo
out
lcall
xchg
mov
xchg
hlt
inc
or
je
sbb
xchg
cmp
sbb
or
repz
cmp
stos
arpl
lea
mov
mov
ljmp
mov
or
jae
xchg
or
stos
call
ljmp
push
xchg
fucom
daa
or
xchg
push
sub
mov
and
ret
cmpsb
xor
mov
jno
sub
xchg
inc
pusha
loope
mov
cs
cld
in
sbb
sub
inc
addr16
out
mov
adc
pop
iret
enter
pusha
push
addb
imul
xchg
loope
in
aas
lret
cltd
sub
or
adcb
mov
xchg
jl
pop
imul
sahf
dec
add
out
jns
leave
pop
inc
add
sub
imul
push
sbb
jp
fcmove
push
adc
mov
int
in
xor
dec
or
int
es
cmpsb
pop
jmp
xchg
pop
jge
inc
mov
pop
test
adc
insb
icebp
gs
rol
jl
incb
rcl
icebp
mov
movl
and
in
xchg
xor
fwait
sbb
pop
mov
popf
fwait
outsl
xchg
inc
mov
mov
jae
std
mov
xor
jnp
dec
pop
pop
mov
pop
inc
pop
stos
and
call
sbb
loopne
dec
sbb
cmp
addb
jecxz
repnz
cmp
fwait
in
std
cmp
mov
push
push
sti
cmp
cli
mov
pop
into
mov
aam
lea
or
fstpl
or
push
test
in
push
out
and
mov
insl
add
popf
cmp
scas
xchg
pop
out
add
adc
jne
and
inc
push
push
dec
das
rolb
jno
push
or
ljmp
loope
mov
stos
and
push
cmp
sbb
sbb
lret
jb
push
mov
mov
pop
pop
fildll
jns
aas
ret
shll
mov
or
pop
pop
jecxz
popf
jo
cld
jnp
pop
shlb
push
repz
fstpt
sub
push
adc
dec
pop
fisubrs
xor
outsb
sub
sbb
cmp
dec
adc
mov
test
stc
pop
jmp
nop
or
mov
sbb
mov
pop
cmp
and
iret
adc
add
add
jecxz
xchg
push
and
push
clc
icebp
popf
std
lea
mov
sub
pop
sub
mov
mov
adc
insb
xor
adc
sub
test
subb
into
test
cld
ljmp
call
out
mov
sub
or
adc
movsl
ret
loop
sub
stos
lods
xorl
cld
sub
cltd
sarl
adc
cmp
sub
dec
mov
and
lods
test
mov
fidivs
inc
rcr
pop
push
pop
jb
outsb
out
int3
in
mov
rcll
adc
or
xchg
xchg
cs
stos
pop
dec
into
shrb
into
call
or
divl
sbb
sub
aad
mov
test
insb
and
inc
sub
ljmp
fistpll
xor
js
inc
stos
push
ficoms
test
je
or
pusha
sbb
ds
gs
mov
clc
insb
ret
cld
das
push
fs
jns
scas
xor
mov
ds
jp
jb
sbb
push
and
xor
rclb
dec
xlat
pop
dec
shlb
push
add
daa
addl
addl
xor
pop
and
or
fnstsw
add
dec
cs
and
adc
jno
jecxz
std
xchg
ds
mov
call
vmread
faddl
pop
mov
dec
jns
lock
js
aas
mov
add
imul
and
ss
push
outsl
and
dec
bound
cmp
ds
scas
leave
test
xor
or
sti
and
loop
adc
enter
mov
scas
sbb
lcall
movsl
and
sub
mov
ret
inc
sti
sbb
orb
mov
or
aam
push
inc
or
xor
popf
fisttpll
and
imul
and
int3
dec
xchg
push
push
fwait
repz
loope
or
daa
lds
icebp
and
bound
inc
das
add
sbb
adc
insb
push
jno
dec
test
push
out
ret
mov
in
xchg
adc
pop
lcall
jle
jl
pop
dec
jnp
repnz
ljmp
clc
movsl
ljmp
movsb
int3
inc
popf
pop
push
sub
adc
dec
test
adc
in
push
fisttpll
test
lahf
xor
mov
iret
jnp
es
mov
loopne
mov
popf
sbb
into
popf
or
lcall
adc
cltd
mov
hlt
mov
add
xchg
insl
push
jp
mov
loop
popf
mov
subb
pushf
push
test
out
aaa
scas
js
insb
fwait
loop
mov
repz
mov
mov
orl
sub
push
sub
sbb
sub
push
rclb
stc
adc
adc
ja
ror
clc
aam
cli
hlt
subl
test
arpl
pusha
loop
dec
addr16
pop
sbbl
popa
jge
add
out
inc
jb
jns
jl
clc
xchg
imul
les
pop
fwait
adc
or
rcrb
lret
dec
dec
push
sbb
fs
es
lret
cld
pop
inc
fstl
test
cmp
pop
push
shlb
mov
jg
fbstp
cmc
insl
icebp
push
mov
mov
or
jl
xchg
add
test
dec
jle
nop
cmp
add
sub
out
jmp
mov
pushf
jp
in
push
xchg
outsb
xor
out
dec
orl
sbb
jns
imul
in
addb
jmp
xor
jbe
ss
mov
adc
fcoms
lahf
shll
aas
loope
ret
rcrl
movsb
lods
sbb
mov
sbb
pushw
xchg
iret
jns
test
ret
int3
ret
movsb
es
add
cs
mov
cmpsb
mov
xor
dec
in
outsl
stc
outsb
inc
dec
insl
jae
mov
push
movsl
lcall
cltd
dec
adc
sub
inc
push
push
mov
test
sbb
add
lcall
lahf
push
jg
and
mov
ss
mov
jg
mov
shr
js
test
enter
xor
xchg
shr
adc
mov
push
fisubrl
sbb
mov
pop
add
lods
aad
data16
data16
cli
sub
inc
pop
test
inc
or
imul
inc
mov
or
xchg
icebp
stc
cwtl
mov
in
test
mov
or
mov
push
daa
jnp
jno
adc
mov
pop
mov
fistpll
mov
mov
mov
ss
hlt
pop
cmpsl
inc
xor
xor
test
pusha
and
inc
jo
shl
sub
cmp
movsl
sbb
pop
lods
insl
pop
inc
push
out
sahf
loopne
arpl
scas
repz
or
nopl
jno
sub
pop
rclb
sub
pop
bound
mov
or
hlt
dec
sub
adc
pusha
ljmp
stos
jns
cmpsl
cld
les
add
bt
mov
sub
iret
arpl
bound
pop
dec
pop
movsb
mov
in
fdivrl
rol
and
lock
bsf
das
imul
mov
mov
insb
pushf
xchg
cmp
add
ret
adc
dec
add
cmp
js
test
sub
xor
ja
aas
pop
fcompl
cwtl
outsb
xchg
addr16
fldl
sbb
cmp
mov
loope
pusha
movsb
mull
dec
mov
xor
test
sbb
ja
popa
clc
insl
test
pop
mov
mov
mov
andb
cmp
icebp
xor
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
