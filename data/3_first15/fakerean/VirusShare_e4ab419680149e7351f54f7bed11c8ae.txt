add
je
or
inc
sbb
movb
je
cmp
je
mov
mov
mov
push
push
push
movb
mov
mov
call
pop
pop
ret
push
mov
push
mov
cmpl
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
jmp
mov
mov
mov
add
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
mov
and
neg
sbb
inc
ret
push
mov
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
mov
jne
andl
pushl
mov
pushl
call
mov
pop
pop
ret
or
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
lea
add
xor
mov
mov
lea
lea
mov
mov
mov
mov
push
lea
push
movl
mov
call
mov
test
jne
test
jne
xor
add
ret
push
mov
cmpl
ja
push
mov
add
push
mov
call
cmpl
jne
pop
xor
pop
ret
push
mov
mov
lea
push
push
call
test
js
cmpl
jne
push
mov
call
jmp
pop
jmp
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
mov
add
test
je
addl
cmpl
je
pop
pop
ret
mov
movl
call
push
call
add
pop
pop
ret
push
mov
push
mov
mov
mov
push
call
test
je
push
mov
xor
cmp
setne
cmpl
lea
mov
jne
cmpb
jne
mov
mov
mov
mov
call
test
je
mov
push
pushl
pushl
pushl
push
call
pop
pop
pop
ret
orl
jmp
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
xor
cmp
mov
mov
mov
je
mov
movzbl
and
mov
mov
test
jbe
mov
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
mov
xor
add
cmp
jne
addl
subl
mov
jne
mov
mov
mov
andb
cmpl
mov
jne
and
mov
mov
add
cmp
jne
mov
mov
pop
pop
mov
pop
add
ret
cmpl
jne
cmpl
mov
jne
movb
add
cmp
jne
cmpb
jne
add
jmp
cmp
je
mov
call
add
jmp
orl
cmpb
je
mov
call
add
jmp
or
jmp
mov
or
mov
mov
pop
pop
pop
add
ret
mov
call
jmp
mov
test
jbe
mov
lea
mov
add
cmp
je
cmpb
jne
addl
cmp
je
mov
add
subl
jne
mov
mov
andb
jmp
or
mov
jmp
push
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
sub
add
add
push
lea
lea
cmp
je
push
mov
mov
add
lea
nop
test
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
je
mov
mov
push
call
lea
push
push
movl
movl
movl
call
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
mov
add
add
add
cmp
jne
mov
pop
mov
addl
mov
pop
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
inc
add
mov
and
inc
add
or
add
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
call
mov
mov
lea
lea
push
rep
call
mov
fldz
mov
add
fstl
lea
fstpl
push
push
lea
push
push
mov
call
inc
add
add
push
push
call
mov
mov
mov
add
call
cmpl
mov
mov
jne
fldz
mov
fldl
fcom
fnstsw
fstp
test
jne
fldl
xchg
int
add
fcom
fnstsw
fstp
test
fldl
jne
fld
fadd
fcompl
fnstsw
test
jp
test
fstp
fstp
mov
faddl
fildl
jl
fmulp
sub
fstpl
call
fnstcw
add
movzwl
or
mov
fldcw
fistpll
mov
cmp
fldcw
jae
push
push
call
pop
pop
pop
mov
pop
ret
fldl
fldl
fxch
test
mov
fildl
jl
fld
push
fmulp
lea
fxch
lea
mov
fstpl
fld
fmulp
fxch
fstpl
fld
fmull
fstpl
fmulp
fstpl
call
test
je
fldl
pop
fstps
pop
fldl
pop
fstps
fldl
fstps
fldl
fstps
mov
pop
ret
fldl
fldl
fldl
fxch
jmp
mov
andl
mov
push
pushl
mov
call
pop
mov
mov
xor
pop
ret
push
mov
push
push
xor
cmp
je
xor
pop
leave
ret
cmpl
mov
push
mov
jne
cmp
jne
lea
orb
testb
jne
mov
push
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
push
mov
mov
call
push
pushl
mov
call
test
js
mov
cmp
je
xor
inc
pop
pop
jmp
cmpl
jne
jmp
xor
jmp
push
mov
sub
push
mov
push
push
xor
mov
call
mov
push
lea
call
and
lea
push
lea
mov
movl
mov
call
xor
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
xor
call
push
lea
iret
roll
lea
xor
call
and
and
lea
mov
push
mov
lea
movl
movl
rolb
mov
mov
test
jne
pushl
lea
call
andl
andl
lea
push
mov
lea
movl
movl
filds
in
adc
add
jne
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
call
xor
pop
pop
pop
leave
ret
mov
mov
mov
cmp
sbb
neg
ret
int3
int3
int3
push
mov
and
sub
push
push
push
mov
push
lea
xor
mov
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
mov
cmp
je
call
mov
mov
cmp
je
call
mov
mov
cmp
je
call
mov
push
call
push
call
add
push
call
pop
pop
pop
pop
mov
pop
ret
push
mov
and
push
decl
cmpl
push
je
pop
mov
pop
ret
mov
test
je
push
mov
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
test
push
je
inc
add
mov
outsb
sbb
int
pop
or
lea
mov
call
mov
lea
push
mov
add
call
mov
test
jne
push
push
call
add
test
je
mov
movl
lea
xor
movl
call
mov
test
mov
je
mov
mov
push
call
cmpl
je
mov
mov
mov
mov
call
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
mov
mov
add
test
mov
jne
push
push
call
test
je
test
je
mov
mov
push
call
mov
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
push
push
call
mov
test
je
addl
mov
test
mov
jne
mov
mov
mov
test
jne
mov
add
add
xor
lea
and
xor
call
xor
pop
pop
pop
pop
ret
mov
jmp
lea
movl
mov
mov
push
push
call
testb
jne
mov
mov
mov
push
mov
call
jmp
mov
push
mov
call
jmp
mov
push
mov
call
jmp
call
jmp
mov
mov
xor
push
mov
call
jmp
push
mov
mov
test
je
cmpl
je
push
mov
test
je
mov
push
mov
push
mov
call
test
js
mov
test
je
movzwl
mov
push
pushl
mov
call
mov
cmpl
jne
mov
mov
call
test
jne
mov
mov
call
andl
push
mov
lea
call
mov
mov
test
je
movzwl
mov
push
pushl
call
mov
mov
call
lea
call
jmp
xor
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
xor
lea
push
mov
mov
mov
push
push
call
cmp
jne
push
mov
call
lea
mov
mov
call
mov
lea
call
lea
mov
call
mov
lea
call
push
call
pop
pop
xor
pop
pop
ret
mov
test
push
push
mov
je
push
push
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
push
call
pop
test
je
call
test
mov
je
mov
push
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
xor
cmp
mov
je
mov
mov
push
call
mov
mov
lea
mov
mov
lea
lea
push
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
mov
add
call
inc
add
cmp
je
mov
mov
mov
lea
push
mov
call
mov
cmp
mov
je
push
mov
lea
mov
call
mov
cmp
je
test
movl
mov
mov
je
add
mov
mov
mov
mov
mov
mov
pop
rolb
mov
test
jne
test
jne
lea
call
lea
call
push
push
lea
push
push
push
movl
movl
mov
call
mov
add
test
jne
test
jne
lea
call
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
sub
push
push
push
push
mov
xor
cmp
jne
mov
mov
call
test
je
mov
mov
cmp
mov
jne
cmp
jne
mov
mov
mov
mov
test
mov
mov
jne
mov
test
jne
mov
mov
mov
cmp
mov
jne
mov
mov
cmp
jne
or
mov
test
jne
mov
mov
mov
mov
push
call
orb
pop
pop
pop
pop
add
ret
mov
mov
and
xor
or
jne
test
je
orb
jmp
mov
mov
sub
cmpl
mov
mov
mov
mov
jne
mov
add
mov
mov
mov
lea
push
push
call
lea
lea
call
mov
push
push
lea
push
mov
push
push
call
testb
jne
mov
push
mov
lea
push
push
push
call
add
jmp
mov
mov
add
mov
mov
mov
mov
sub
mov
lea
mov
mov
push
push
mov
call
lea
lea
call
mov
push
push
mov
push
push
push
call
testb
jne
mov
mov
push
lea
push
push
push
call
add
jmp
testb
jne
movl
jmp
mov
mov
mov
xor
cmp
mov
jne
cmp
jne
mov
mov
sub
sub
add
sub
add
mov
mov
cmp
mov
jne
mov
mov
sub
sub
add
sub
add
mov
mov
test
mov
je
push
lea
push
push
push
call
mov
mov
add
cmpl
je
mov
test
je
mov
mov
push
lea
push
call
mov
mov
mov
cmp
jle
mov
cmp
mov
jne
cmpl
jne
mov
sub
add
mov
mov
test
je
mov
mov
push
lea
push
call
mov
mov
cmp
jle
mov
cmp
mov
jne
mov
sub
add
mov
mov
push
lea
push
push
push
call
add
jmp
xor
jmp
mov
test
je
xor
push
lea
push
push
push
mov
mov
mov
mov
call
add
jmp
push
mov
mov
sub
push
mov
push
push
lea
lea
movsl
movsl
movsl
lea
movsl
call
test
je
andl
pushl
push
pushl
call
add
cmpl
jne
pop
pop
pop
leave
ret
cmpl
movl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
cmpl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
mov
movl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
mov
push
jne
mov
test
jne
test
jne
lea
xor
mov
call
mov
lea
mov
lea
mov
mov
call
cmp
jne
test
je
mov
mov
movzbl
and
neg
sbb
add
cmp
jb
mov
mov
push
lea
push
push
push
movl
call
test
js
cmpl
jne
xor
cmp
mov
je
mov
jmp
mov
mov
test
jne
mov
mov
mov
lea
push
push
push
call
test
js
add
cmpl
jne
cmpl
jne
jmp
mov
mov
lea
push
push
push
call
test
js
cmpl
jne
push
lea
movl
call
mov
mov
lea
push
push
call
test
js
testb
mov
je
mov
mov
push
push
call
mov
push
xor
mov
lea
mov
call
mov
cmp
je
testb
mov
je
mov
mov
push
push
call
mov
lea
dec
mov
and
lea
mov
movl
movl
movb
mov
add
inc
push
js
mov
mov
call
mov
push
lea
push
push
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
lea
call
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
mov
mov
mov
call
mov
movl
andl
or
cmp
je
mov
push
call
test
je
mov
mov
testb
jne
push
lea
push
call
test
jne
cmpl
je
lea
push
pushl
mov
pushl
push
call
test
je
lea
push
call
test
je
andl
mov
lea
call
lea
xor
call
lea
xor
call
lea
add
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
add
mov
mov
mov
xor
add
lea
mov
mov
push
push
mov
mov
mov
call
mov
test
jne
pushl
lea
push
push
pushl
push
lea
push
mov
call
mov
mov
mov
andl
test
jne
add
mov
andl
test
jne
push
push
lea
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
push
mov
mov
jne
push
call
add
cmp
je
push
mov
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
push
push
push
call
mov
mov
mov
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
mov
test
movl
movl
movl
movl
je
cmpb
jne
movl
push
call
add
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
movl
call
add
cmpw
je
xor
pop
add
ret
cmpw
jne
mov
mov
call
test
je
push
mov
push
call
add
test
jne
mov
push
call
add
test
je
push
mov
mov
test
je
mov
push
mov
lea
movl
call
mov
test
je
mov
mov
push
call
test
je
push
lea
mov
call
push
call
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
add
cmpl
jne
cmpl
push
jne
mov
push
push
mov
push
push
call
test
js
mov
lea
call
lea
call
mov
pop
pop
pop
add
ret
mov
push
call
jmp
mov
jmp
push
mov
push
push
mov
test
push
mov
jne
push
call
test
pop
je
call
mov
test
je
mov
push
call
pushl
mov
push
call
andl
push
lea
call
mov
test
je
mov
mov
push
call
pushl
mov
pushl
push
pushl
mov
call
test
js
mov
mov
xor
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
push
mov
test
je
mov
push
call
mov
test
mov
jne
test
mov
je
movb
mov
push
call
mov
lea
call
mov
test
je
mov
push
call
mov
test
mov
pop
pop
jne
mov
lea
call
mov
test
je
push
call
xor
ret
mov
mov
cmp
je
test
je
cmpl
je
pushl
push
call
test
pop
pop
jne
xor
inc
ret
xor
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
test
js
mov
cmpl
jne
xor
pop
pop
pop
ret
mov
test
je
pushl
mov
call
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
not
je
jmp
lea
test
jne
cmp
push
push
jae
cmp
jae
test
pop
pop
je
nop
movzbl
xor
and
shr
xor
add
sub
jne
not
pop
ret
mov
shr
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
add
xor
add
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
add
xor
add
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
xor
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
sub
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
jne
jmp
mov
shr
lea
xor
add
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
sub
mov
jne
jmp
add
loop
add
add
call
mov
roll
out
add
test
jmp
int3
int3
sub
push
mov
test
push
mov
push
mov
je
mov
push
mov
call
add
mov
lea
xor
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
mov
push
mov
push
mov
push
push
mov
call
mov
mov
add
mov
lea
call
mov
pop
pop
pop
add
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
mov
pushl
call
push
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
test
mov
push
mov
push
mov
push
mov
movl
je
test
je
test
je
cmpl
mov
mov
je
movl
movl
lea
push
mov
push
push
push
push
mov
movl
call
test
js
xor
cmp
mov
jne
mov
cmp
mov
je
testb
jne
add
mov
mov
lea
push
push
call
test
js
cmpl
mov
jne
mov
mov
mov
push
push
call
test
js
mov
push
mov
mov
call
test
js
xor
mov
mov
mov
cmp
je
testb
jne
mov
mov
cmp
je
testb
je
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
mov
mov
push
lea
push
call
add
lea
push
push
call
mov
test
jne
test
jne
mov
cmp
je
testb
jne
push
lea
mov
call
mov
lea
push
lea
call
add
test
mov
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
mov
mov
mov
mov
lea
push
mov
push
movl
movl
call
test
je
movb
testb
je
mov
test
jne
test
jne
cmpb
jne
push
lea
movl
call
mov
mov
lea
push
push
mov
call
test
mov
js
mov
test
je
cmpl
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
mov
mov
movl
je
movzbl
mov
mov
push
push
mov
call
mov
mov
mov
mov
push
lea
push
mov
lea
push
push
push
call
test
mov
js
cmpl
je
mov
test
je
mov
cmpw
je
xor
mov
push
mov
lea
movl
call
mov
mov
mov
push
push
call
mov
mov
mov
mov
push
push
push
call
lea
call
test
je
mov
mov
mov
push
push
call
lea
call
mov
mov
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
push
push
mov
roll
mov
mov
mov
add
mov
mov
mov
lea
lea
mov
cmp
je
mov
mov
sub
cmp
push
jne
push
push
call
add
test
jne
mov
mov
cmp
je
mov
cmp
je
mov
push
push
sub
sub
push
mov
push
mov
mov
call
test
je
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
aad
add
or
add
jo
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
jne
mov
push
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
cmp
je
mov
push
mov
add
mov
mov
mov
mov
lea
mov
mov
call
test
je
mov
mov
cmp
mov
push
jne
push
push
call
add
test
je
addl
jmp
mov
mov
call
test
je
pop
xor
pop
add
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lea
add
add
mov
mov
lea
lea
call
test
je
mov
mov
mov
mov
mov
pop
mov
mov
pop
add
ret
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
mov
cmp
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fldz
push
push
mov
fcoml
mov
fnstsw
test
je
fcompl
fnstsw
test
je
push
mov
test
jne
push
call
add
test
je
fldl
fstpl
fldl
fstpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
add
pop
pop
pop
ret
fstp
mov
push
movl
call
add
pop
pop
ret
xor
jmp
push
mov
push
lea
push
pushl
mov
call
test
je
mov
mov
mov
xor
inc
pop
pop
ret
push
mov
sub
push
mov
mov
push
mov
mov
call
cmp
je
xor
pop
pop
leave
ret
push
pushl
mov
pushl
call
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
test
push
push
je
lea
mov
test
jne
pop
pop
pop
lea
pop
pop
ret
test
je
sar
sub
mov
je
mov
test
je
mov
push
call
cmp
jne
cmpl
jne
cmpl
jne
add
cmpl
je
mov
mov
and
test
mov
je
addl
mov
test
je
mov
mov
mov
test
je
pop
mov
pop
pop
pop
pop
ret
mov
sub
je
mov
jmp
movl
mov
mov
push
mov
call
pop
pop
pop
xor
pop
pop
ret
lea
or
jmp
cmpl
je
mov
call
test
je
movl
jmp
push
push
mov
mov
call
add
add
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
lea
call
lea
call
testb
movl
je
push
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
test
je
mov
mov
xor
cmpl
movl
mov
movl
je
mov
lea
push
lea
push
mov
mov
push
mov
call
mov
mov
mov
test
mov
je
mov
lea
mov
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
or
add
mov
mov
xor
mov
test
jns
mov
mov
test
jne
test
jne
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
push
call
xor
test
je
mov
orl
jmp
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
mov
push
lea
lea
movl
movl
mov
mov
call
testl
jne
mov
lea
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
mov
mov
add
lea
push
push
call
mov
test
jne
test
jne
mov
mov
mov
mov
mov
lea
call
mov
test
jne
test
je
mov
push
call
mov
add
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
push
mov
call
cmp
jne
mov
mov
call
test
jne
cmp
jne
mov
lea
push
lea
push
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
call
mov
test
js
testb
jne
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
je
mov
push
call
add
mov
test
js
mov
mov
mov
mov
lea
mov
call
jmp
mov
add
call
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
mov
cmp
mov
je
cmp
jg
mov
cmp
je
mov
cmp
je
cmp
je
mov
cmp
je
cmp
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
mov
call
mov
push
mov
call
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
jne
addl
jmp
mov
mov
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
jmp
push
mov
andl
push
lea
mov
test
movl
jne
lea
call
mov
call
testb
je
push
call
pop
pop
mov
pop
ret
push
mov
push
push
mov
cmp
je
mov
mov
lea
mov
mov
mov
leave
ret
push
mov
mov
sub
push
xor
test
je
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
call
push
mov
lea
mov
call
mov
cmp
mov
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
pushl
mov
add
mov
call
mov
push
lea
call
mov
lea
push
push
call
lea
call
lea
call
cmp
je
cmp
je
mov
cmp
je
pushl
mov
call
cmp
je
mov
mov
call
mov
mov
mov
call
cmp
jne
call
mov
lea
call
lea
call
pop
lea
call
lea
call
pop
mov
pop
leave
ret
mov
cmp
je
jmp
add
int3
int3
int3
push
mov
and
push
push
mov
push
push
mov
nop
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
jne
cmpw
je
push
call
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movw
cmp
jne
mov
mov
mov
cmp
je
cmp
jne
cmpw
je
cmp
jne
cmpw
je
cmp
jne
cmpw
jne
mov
push
mov
call
cmp
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
pop
pop
pop
mov
pop
ret
mov
push
push
push
push
push
push
mov
call
jmp
lea
mov
cmp
lea
je
jmp
mov
orl
mov
call
jmp
mov
push
mov
call
jmp
mov
push
push
push
call
jmp
push
mov
push
cmpw
jne
mov
test
je
mov
push
call
mov
test
mov
je
mov
mov
push
pushl
push
push
call
lea
call
xor
leave
ret
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
push
push
mov
test
je
mov
push
call
mov
mov
mov
leave
ret
mov
andl
test
je
lea
push
push
push
add
push
call
and
je
andl
test
je
andl
pushl
lea
call
mov
andl
lea
mov
call
mov
test
je
jmp
sub
mov
xor
mov
mov
push
push
mov
push
mov
push
mov
cmpl
je
mov
test
mov
jne
test
jne
lea
push
push
call
lea
mov
mov
mov
mov
lea
lea
xor
push
lea
sar
push
mov
movl
movl
mov
mov
mov
call
mov
mov
push
push
push
call
add
cmp
mov
je
mov
mov
mov
push
call
mov
mov
mov
push
lea
push
push
call
test
lea
js
call
mov
test
jne
test
jne
mov
movl
xor
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
lea
push
push
movl
call
add
test
je
jmp
lea
mov
mov
cmp
jne
call
mov
lea
push
push
call
add
test
jne
pop
pop
ret
int3
int3
int3
int3
int3
push
xor
cmp
push
push
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
call
mov
call
test
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
jne
mov
mov
mov
lea
push
mov
call
mov
push
lea
call
pop
mov
mov
pop
mov
pop
ret
mov
mov
mov
call
mov
jmp
push
mov
sub
cmpl
je
mov
andl
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
lea
push
push
call
lea
call
mov
mov
mov
leave
ret
mov
test
je
mov
mov
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
lea
test
push
jge
xor
pop
pop
pop
pop
add
ret
mov
mov
mov
lea
xor
mov
mov
mov
lea
mov
mov
push
lea
mov
add
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
push
lea
call
pop
pop
pop
xor
pop
add
ret
mov
ret
movzwl
push
lea
mov
test
je
pop
ret
push
mov
and
sub
mov
andl
andl
andl
andl
lea
push
mov
call
mov
lea
call
test
jne
mov
call
call
test
je
xor
inc
mov
pop
ret
int3
int3
int3
cmpl
push
mov
push
push
mov
jne
cmp
je
xor
cmpl
jne
cmp
je
xor
test
jne
test
jne
cmpl
je
mov
cmpl
je
pop
pop
pop
ret
mov
mov
movl
call
cmpb
jne
test
je
mov
mov
add
cmp
je
cmpl
jne
mov
call
pop
pop
pop
ret
mov
jmp
mov
call
mov
call
pop
pop
pop
ret
movzwl
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
ret
mov
dec
test
jle
cmpw
je
xor
inc
ret
int3
int3
sub
push
mov
mov
test
je
mov
mov
push
push
push
xor
call
cmp
je
lea
push
push
lea
mov
call
mov
lea
lea
push
push
mov
call
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
pop
je
lea
mov
mov
mov
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
je
cmp
je
cmp
jne
cmp
jne
cmp
je
call
cmp
je
mov
push
mov
lea
mov
call
mov
lea
mov
mov
push
push
mov
call
mov
push
mov
call
lea
call
lea
call
lea
call
xor
pop
pop
pop
add
ret
lea
push
lea
movl
movl
movl
call
mov
mov
push
push
call
add
cmp
je
mov
cmp
mov
jne
xor
mov
jmp
xor
jmp
mov
mov
jmp
push
mov
push
mov
lea
push
lea
push
pushl
movl
call
mov
mov
and
neg
sbb
not
and
leave
ret
andl
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
lea
mov
mov
call
add
sub
jns
mov
push
push
lea
push
push
call
cmp
jl
mov
mov
call
test
je
test
je
test
je
test
je
lea
lea
lea
mov
mov
movl
jmp
lea
addl
addl
mov
mov
mov
mov
mov
mov
add
cmp
mov
je
cmpl
jne
call
mov
and
mov
mov
shl
shr
lea
lea
or
mov
mov
mov
add
cmp
movl
mov
je
cmpl
jne
lea
call
mov
shr
lea
mov
and
mov
shl
or
mov
mov
add
lea
cmp
je
cmpl
jne
lea
call
mov
shr
lea
mov
and
mov
shl
lea
or
call
subl
jne
push
push
push
lea
push
call
mov
pop
pop
pop
pop
add
ret
cmpl
jne
movl
movl
jmp
cmpl
jne
movl
movl
jmp
cmpl
jne
movl
movl
jmp
int3
int3
int3
int3
sub
push
mov
test
je
push
mov
movl
mov
cmp
push
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmpb
jne
mov
test
je
push
mov
lea
movl
call
mov
test
je
mov
mov
mov
push
call
lea
call
cmpl
je
xor
pop
pop
pop
add
ret
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
je
mov
cmpb
je
lea
call
test
je
mov
mov
add
push
push
push
call
pop
pop
pop
add
ret
mov
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
jne
push
push
lea
call
xor
add
cmp
je
mov
movl
mov
lea
cmp
movl
movl
movl
mov
mov
je
mov
mov
push
call
test
mov
je
mov
mov
push
call
mov
test
je
xor
call
add
or
mov
mov
mov
push
mov
call
lea
call
pop
lea
jmp
add
jmp
push
mov
sub
push
mov
mov
test
je
testb
je
push
push
xor
push
lea
mov
call
lea
push
mov
lea
call
test
pop
js
pushl
mov
lea
mov
mov
call
mov
cmp
je
mov
lea
push
push
call
test
jne
mov
cmp
jne
and
mov
lea
push
lea
call
mov
test
pop
jne
mov
mov
call
xor
push
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
inc
push
push
lea
call
cmpl
pop
pop
jne
mov
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
pushl
call
test
pop
je
mov
mov
push
pushl
push
call
mov
jmp
mov
mov
push
call
xor
ret
mov
pushl
mov
pushl
mov
push
call
movsbl
add
and
ret
push
mov
push
push
push
push
push
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
mov
jne
push
lea
mov
call
mov
lea
push
push
mov
mov
call
mov
test
jne
testl
adc
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
jne
push
call
add
test
je
push
push
xor
mov
mov
add
or
mov
mov
lret
push
add
mov
call
pop
pop
mov
call
test
je
mov
mov
push
push
push
call
test
js
mov
cmp
je
test
jne
test
je
mov
mov
push
call
mov
test
mov
jne
test
je
mov
push
call
mov
mov
xchg
jl
lds
add
roll
add
add
add
add
mov
pushf
add
js
mov
pop
roll
sub
push
mov
add
push
push
lea
push
push
push
push
call
idivl
popa
lods
add
add
movsl
cltd
jp
add
mov
mov
add
xchg
add
je
add
mov
pop
popl
push
push
push
push
push
call
int
add
fldl
push
lds
push
js
add
into
pop
call
addb
xchg
mov
add
fstpl
mov
clc
cmpsb
jns
arpl
pusha
push
add
into
data16
lds
fiadds
add
fstpl
sbb
add
mov
in
lcall
push
lea
push
push
lea
push
push
call
add
add
add
movsl
mov
push
pop
iret
cwtl
cmc
outsl
add
jno
add
pop
cmpsl
add
fwait
cltd
fsubl
add
add
add
add
add
add
out
jmp
add
incb
js
add
lea
add
ljmp
lcall
push
lea
push
call
arpl
push
add
mov
clc
add
fwait
add
mov
xchg
add
in
add
ljmp
xchg
add
test
ret
add
add
jle
mov
mov
cmc
add
add
pop
mov
std
add
push
push
push
call
pop
mov
add
jbe
push
lret
xchg
add
clc
add
pop
add
lahf
popa
test
mov
cmc
xchg
lret
in
arpl
mov
add
aam
pop
clc
orb
aad
add
push
add
add
lcall
call
push
push
push
push
lea
push
lea
push
lea
push
call
add
mov
add
add
add
lds
add
jl
add
add
add
add
add
add
test
test
mov
add
in
add
fsubrs
add
repnz
fcmovbe
lret
loope
mov
pop
pushf
sub
pop
push
push
push
push
push
lea
push
call
jns
pop
push
add
mov
add
mov
add
fwait
mov
sti
mov
add
ja
mov
clc
lret
sub
pop
call
push
push
lea
push
lea
push
push
push
push
push
push
call
icebp
lods
pop
jb
mov
add
add
add
xchg
add
add
add
roll
out
xchg
add
scas
in
add
sub
add
lahf
mov
add
pop
mov
roll
loope
add
lcall
out
push
add
add
add
lret
push
add
add
lcall
int3
add
add
call
add
mov
add
call
add
test
add
push
popl
fs
mov
add
lcall
movb
add
jae
jne
aam
mov
add
xlat
add
mov
push
pushf
add
add
add
jp
jno
add
sub
pop
ret
push
push
lea
push
push
push
push
push
call
add
fcomi
mov
rcrb
add
shl
nop
xor
add
add
pop
add
jl
xchg
mov
addr16
aam
add
pop
cld
rorl
mov
movsl
mov
pop
mov
jno
mov
push
xchg
xchg
mov
mov
mov
mov
push
lea
push
call
add
jb
imul
xchg
loopne
out
fiaddl
jns
add
in
iret
add
rolb
mov
fs
pop
mov
add
xlat
mov
add
xchg
add
add
jno
jp
mov
add
add
flds
call
xlat
mov
mov
gs
pop
add
add
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
mov
jecxz
add
add
pop
mov
mov
int
in
add
add
imul
add
scas
pop
imul
push
cli
imul
mov
mov
imul
aad
mov
jbe
add
mov
add
add
in
jno
lret
add
lcall
ret
mov
add
cld
loop
rorl
mov
int3
out
punpckhdq
add
add
add
xlat
std
add
add
adcb
xchg
insb
push
add
imul
data16
fadds
add
ror
loop
push
add
add
add
pushf
sub
pop
mov
xor
push
push
add
ror
shl
push
push
pop
add
sub
add
sub
inc
not
shr
pop
ror
rol
pop
push
push
push
push
lea
push
push
push
lea
push
call
add
add
movsl
popf
add
add
push
xchg
add
loop
addb
fsubrl
mov
add
add
add
jae
add
shlb
insb
xchg
cltd
into
add
jle
pop
add
push
mov
add
mov
lret
xchg
add
out
add
sarb
pop
pushl
push
push
push
push
push
push
call
movb
xchg
add
mov
add
jle
scas
cmpsb
add
mov
jb
pushf
jae
hlt
test
pushf
mov
fadds
rorl
pop
call
push
push
push
push
push
push
push
push
call
popf
lods
add
fildl
pusha
add
mov
pop
imull
add
mov
push
clc
notl
add
add
mov
jne
sti
les
out
push
pop
mov
add
xchg
ljmp
push
mov
mov
lret
movl
add
lcall
inc
lock
push
push
call
add
jno
hlt
add
lock
stos
jnp
addb
arpl
add
mov
xchg
add
scas
lods
xchg
in
shl
loopne
popl
mov
clc
insb
mov
movb
movsb
add
in
add
add
cltd
int
add
test
add
jnp
add
add
add
movl
push
lea
push
push
push
push
push
push
call
add
ljmp
pushf
leave
loop
insb
stc
mov
add
add
add
mov
add
jo
add
movb
mov
lcall
in
into
lds
xchg
sub
pop
lea
push
push
push
push
push
push
lea
push
push
push
push
call
add
add
in
add
push
mov
xchg
fisttps
jb
arpl
add
mov
ret
iret
add
repnz
outsl
sub
pop
push
pushl
push
push
push
lea
push
push
push
lea
push
call
add
add
add
add
imul
je
je
add
add
mov
movsb
xchg
add
add
add
pop
stos
add
test
int
data16
hlt
fiaddl
jne
call
push
push
push
call
add
add
arpl
mov
pop
jne
mov
mov
add
pop
add
pusha
xchg
add
lds
add
add
lock
add
add
pop
lret
xchg
pop
popf
movsl
xchg
add
add
faddp
filds
lcall
jne
push
push
push
lea
push
push
push
push
call
add
movb
push
add
mov
pop
add
mov
aad
lods
jo
add
lret
addb
mov
sti
jp
add
les
orb
cltd
cwtl
push
jle
mov
out
test
jmp
jecxz
cmpsb
add
push
jmp
pop
mov
fsubrs
add
pop
in
add
add
add
ljmp
lock
lea
push
lea
push
lea
push
push
lea
push
push
call
add
add
movl
xchg
lods
add
sahf
lret
pushf
test
xchg
test
add
jmp
add
add
add
cmpsl
add
insb
lret
xchg
add
iret
test
out
ja
loope
pop
add
add
add
mov
mov
jns
in
in
lcall
imul
add
sub
add
les
leave
incl
rorl
pop
add
rolb
in
rol
loopne
sub
shr
shl
inc
not
pop
dec
ror
pop
push
lea
push
push
call
add
testb
lods
gs
add
add
add
push
push
xchg
roll
add
add
jle
std
in
shll
add
push
add
jge
fs
icebp
lea
jl
enter
pop
pushl
push
lea
push
push
call
add
xchg
in
iret
jge
mov
add
mov
add
loope
mov
loop
pop
test
xchg
add
test
mov
jmp
scas
lret
add
add
mov
mov
add
test
add
xor
add
je
scas
add
lcall
imul
push
push
push
sub
xor
inc
push
xor
add
ror
shl
sub
shl
pop
shl
shl
xor
pop
push
lea
push
lea
push
lea
push
push
push
push
call
movsl
add
in
test
fadds
add
mov
in
add
out
add
add
mov
je
mov
in
cmp
add
push
lea
push
lea
push
push
call
jl
test
fcmovnb
test
push
cwtl
add
add
add
lcall
popl
mov
or
xlat
add
jmp
mov
push
pop
imul
add
nop
add
ljmp
mov
add
add
xchg
add
sub
pop
push
push
push
lea
push
lea
push
push
lea
push
call
add
test
imul
add
add
add
add
cmpsb
xlat
stos
leave
loopne
mov
add
cld
aam
xchg
cwtl
pop
pop
mov
push
std
add
add
add
jecxz
mov
push
filds
add
mov
sbbb
mov
jl
lock
add
jmp
add
in
call
call
mov
push
lea
push
lea
push
push
push
push
push
push
call
jae
add
push
int3
add
les
xchg
movl
push
add
push
outsl
pop
out
mov
xchg
add
xchg
add
add
add
add
add
loopne
push
push
push
push
push
push
lea
push
push
push
push
lea
push
call
shr
push
lds
jecxz
fidivrs
add
enter
lods
fdivrl
mov
lcall
add
leave
mov
mov
mov
add
add
lcall
mov
stos
mov
cmc
mov
add
add
jecxz
mov
in
push
mov
jno
adcb
lcall
pop
hlt
add
push
push
push
push
push
push
lea
push
push
call
xchg
mov
std
push
rcrl
push
jb
pop
push
je
in
clc
sahf
add
add
mov
mov
imul
imul
loopne
lcall
ret
add
add
push
push
push
push
push
push
push
lea
push
call
push
add
add
xchg
js
popl
mov
add
jb
xchg
mov
xchg
add
pop
pop
in
ret
mov
add
into
cmp
test
add
add
add
pop
add
lcall
ret
mov
add
sbb
sahf
addb
stos
push
call
add
sti
add
xchg
xchg
out
cli
test
add
in
add
jge
jno
push
lret
jmp
sti
addr16
pop
stc
add
incb
push
add
mov
addr16
test
jb
mov
add
add
lcall
xor
mov
push
push
push
push
call
cld
add
arpl
in
lods
fstpl
rolb
cmpsb
push
incb
add
mov
add
add
cmc
shll
add
popf
add
push
add
in
out
add
lcall
jne
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
leave
add
lods
add
mov
push
movsb
add
outsl
add
gs
mov
mov
mov
int3
push
bound
add
add
add
in
bound
mov
add
add
add
jge
add
aam
mov
fdivr
lcall
push
lea
push
push
call
fisubs
add
pop
add
outsl
add
jnp
int3
insb
add
in
test
add
lea
add
mov
add
in
les
clc
in
mov
imul
mov
in
hlt
lcall
inc
or
or
cltd
push
lea
push
push
push
push
push
lea
push
call
mov
add
rol
stos
fs
add
mov
add
add
fldl
add
lahf
divl
add
add
mov
pop
add
add
add
shlb
add
sub
pop
xor
push
push
push
push
push
push
call
mov
add
mov
jmp
add
mov
mulb
add
add
add
add
sarl
lcall
add
int3
fisubrs
add
push
push
push
push
push
lea
push
push
push
lea
push
push
call
add
mov
mov
add
add
mov
jmp
addl
mov
ja
hlt
add
fcmovnbe
jp
mov
mov
in
fcomps
lock
push
push
push
push
push
push
call
popf
push
add
pop
add
add
ret
rcr
testl
xchg
add
pop
outsl
add
mov
mov
cmpsl
test
add
push
arpl
add
addr16
jae
add
add
mov
add
add
lock
jo
add
into
add
pop
add
in
call
push
push
lea
push
push
call
xchg
jae
loopne
int
add
in
add
add
add
cwtl
add
add
add
xchg
add
add
stos
add
fwait
add
add
outsl
lods
add
pop
sub
pop
xor
push
lea
push
push
push
lea
push
push
call
jle
cwtl
int
add
mov
mov
add
add
lea
out
add
stos
add
loop
divl
loopne
pop
cwtl
add
mov
jbe
jecxz
imul
add
mov
mov
jb
aad
test
les
push
call
std
add
mov
add
testl
addr16
add
add
add
les
mov
in
add
mov
add
mov
hlt
out
popaw
add
add
fbld
idiv
add
mov
ja
add
xchg
flds
mov
xor
push
push
lea
push
push
push
call
add
add
xchg
jmp
cli
jge
add
mov
faddl
add
outsl
pop
add
add
aad
iret
mov
cld
add
insb
mov
test
push
xchg
jl
mov
stc
push
pop
add
clc
jo
sub
pop
sub
push
lea
push
push
push
push
lea
push
push
push
push
push
call
xlat
test
cmpsl
add
add
test
in
add
add
mov
mov
testl
jle
sar
pop
icebp
xchg
int
xchg
lcall
loop
jb
add
add
add
popa
add
out
movsb
popa
add
add
add
add
jne
add
in
fdivr
lcall
rep
push
xor
rol
dec
shl
pop
pop
push
add
rol
sub
pop
mov
push
lea
push
push
lea
push
call
in
lret
in
add
mov
add
add
add
icebp
lock
incb
mov
add
out
add
loop
xchg
push
add
mov
fldl
jbe
add
icebp
out
push
les
lret
add
pushf
fs
pop
add
add
push
push
push
push
push
push
call
lock
test
add
loop
add
mov
add
add
add
push
add
in
mov
mov
add
pop
mov
sub
pop
add
push
inc
lea
add
pop
mov
push
push
lea
push
push
push
lea
push
push
lea
push
call
mov
lahf
subl
mov
add
ret
stc
add
add
loop
add
int3
testb
add
mov
xchg
sbb
in
lds
pop
add
int
add
add
clc
scas
mov
lcall
add
add
mov
mov
add
pop
add
add
push
push
push
push
call
add
subl
add
mov
mov
add
les
add
pop
fs
out
add
mov
xchg
add
fsubrp
add
mov
imul
mov
repnz
mov
stos
add
add
mov
jmp
xchg
add
sub
pop
add
push
add
inc
not
pop
mov
xor
push
rol
pop
mov
push
push
push
push
lea
push
push
call
mov
fs
xchg
add
add
add
add
add
add
add
mov
mov
add
or
push
push
push
push
push
push
push
push
lea
push
push
call
add
lret
addr16
imul
add
add
add
add
fwait
add
add
mov
aad
xchg
add
add
add
leave
add
in
rolb
imul
test
add
sti
add
mov
jne
out
imul
in
add
stc
xchg
into
cmpsb
mov
in
fcomps
les
inc
dec
sub
pop
add
add
push
add
sub
shr
pop
mov
push
push
lea
push
or
inc
add
xor
sub
not
xor
inc
shl
pop
shl
inc
shl
pop
push
push
push
call
jo
jp
add
add
notl
mov
lds
testb
add
add
adcb
add
push
jno
sub
pop
pushl
call
push
lea
push
push
push
push
push
push
call
add
jno
stos
test
mov
xchg
jne
add
xlat
add
mov
mov
out
lods
out
out
add
add
cmpsl
jo
push
add
add
pop
sahf
lock
add
pushf
add
jno
xlat
hlt
add
lcall
add
mov
or
push
rol
push
sub
add
shl
lea
sub
inc
lea
pop
shr
add
ror
pop
push
shr
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
call
in
add
add
add
add
pop
test
add
add
add
xchg
fsubr
rolb
iret
flds
fistpl
in
jle
jecxz
repnz
add
testb
cmpsb
mov
add
jle
add
add
add
in
loopne
lcall
rorb
pop
push
push
shr
sub
pop
push
mov
push
not
add
pop
add
push
lea
push
push
push
push
push
push
push
call
add
out
mov
xchg
jae
add
add
add
roll
add
jno
mov
push
add
add
push
add
imul
lcall
ret
add
add
push
lea
pop
add
push
ror
not
pop
mov
xor
push
lea
pop
add
push
lea
push
push
push
push
push
push
call
mov
add
lds
push
add
out
add
lahf
jl
add
rolb
add
add
mov
add
pop
push
add
hlt
repnz
add
faddl
pop
push
fwait
mov
push
pop
fwait
add
pop
add
add
sub
pop
push
mov
push
push
push
push
call
flds
add
out
add
add
add
jge
pop
popf
shll
ja
add
popa
imul
add
mov
add
mov
imul
test
aam
add
int3
data16
add
aam
out
add
add
mov
add
hlt
lcall
add
push
lea
push
push
push
lea
push
call
pusha
jmp
jbe
add
jns
mov
fwait
add
lret
addr16
pusha
add
add
jecxz
addl
mov
sbbb
pop
push
cld
mov
in
in
pop
add
push
push
push
push
lea
push
call
clc
add
add
roll
cmpsb
cld
jecxz
add
fyl2xp1
jb
imul
jne
cwtl
addl
lahf
fidivl
popf
add
lcall
lock
pop
pop
mov
push
push
push
lea
push
push
push
push
lea
push
push
call
mov
add
add
mov
add
xlat
add
mov
xchg
jl
enter
push
out
cmpsb
add
add
sub
pop
xor
push
lea
push
push
lea
push
lea
push
push
push
call
mov
add
out
add
popf
call
lds
pop
jo
pop
pop
add
mov
ja
add
add
cltd
add
gs
add
nop
mov
lcall
les
push
push
push
lea
push
lea
push
call
pop
add
iret
pusha
add
add
add
mov
lahf
add
enter
incb
fdivs
icebp
add
add
mov
add
add
loopne
add
add
add
sti
add
mov
add
lds
add
fmul
add
lret
scas
add
lcall
movsb
push
push
lea
push
lea
push
lea
push
lea
push
push
call
pop
out
fwait
mov
insb
ja
lods
add
jp
add
add
add
mov
loop
jbe
lock
jnp
out
sub
pop
mov
push
push
push
call
icebp
pop
add
aam
add
push
add
hlt
stos
pushf
pop
mov
push
add
add
rcll
fildl
testl
add
add
add
xchg
sub
pop
xor
push
push
push
call
add
add
add
add
add
push
fcoms
cmc
out
out
fldt
mov
mov
xchg
add
add
les
lea
push
push
push
push
push
push
push
call
add
add
enter
push
lahf
add
add
add
jecxz
add
out
aam
addb
jne
ror
mov
xchg
fiadds
ljmp
pop
or
je
push
lea
dec
dec
pop
mov
xor
push
lea
pop
mov
xor
push
rol
lea
add
pop
add
push
add
xor
pop
add
push
lea
push
lea
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
js
add
mov
add
addl
add
loop
popf
add
shlb
in
fcomps
mov
xor
push
push
lea
push
call
add
push
stc
add
roll
mov
lret
add
add
add
hlt
insb
cwtl
loopne
mov
add
add
popf
popf
add
jno
hlt
fcoms
add
add
lret
outsl
add
mov
in
hlt
pop
add
push
shr
pop
pop
push
push
push
push
push
push
lea
push
push
call
add
mov
fimull
push
add
testl
mov
pusha
cltd
ja
jbe
add
add
add
scas
hlt
add
into
movsl
add
add
sub
pop
rep
push
lea
pop
mov
push
push
push
push
lea
push
lea
push
push
call
add
add
in
add
add
add
mov
add
add
hlt
xchg
add
add
pop
add
push
jns
add
jno
push
jb
lret
add
pop
test
aam
add
jecxz
add
scas
bound
addr16
out
movl
mov
add
out
push
xchg
add
lcall
or
push
push
push
push
lea
push
call
push
add
add
add
lret
les
push
add
data16
lods
js
test
out
add
shl
add
popf
add
lods
add
clc
out
add
std
add
add
add
pop
mov
add
add
enter
lcall
les
add
push
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
pop
fcomps
aad
add
fucompp
add
sahf
add
mul
mov
fwait
in
popf
mov
add
add
add
push
aam
call
mov
mov
pop
add
mov
in
add
loopne
add
pop
shr
movsl
outsl
add
int
in
fdivr
lcall
leave
je
mov
push
shl
sub
shr
pop
add
push
ror
pop
add
rep
push
lea
push
push
push
push
push
call
add
add
lock
jge
roll
cmc
fists
iret
mov
add
push
jne
xchg
add
pop
mov
fldl
add
mov
call
push
insb
incb
mov
shlb
mov
testb
ljmp
pop
pop
push
push
rol
push
or
not
add
add
sub
sub
shl
pop
xor
not
dec
pop
push
sub
pop
pop
mov
push
push
lea
push
call
std
add
pop
pop
add
add
cmpsb
add
call
cld
add
fiaddl
mov
add
fiaddl
roll
jno
fdivl
lahf
add
add
mov
pop
mov
add
lds
lds
add
hlt
sti
add
hlt
pop
mov
push
lea
push
push
push
push
push
lea
push
lea
push
call
cmc
add
add
rolb
imul
fcom
add
ja
add
call
mov
insb
orb
fnsave
mov
mov
out
cmpsl
mov
loopne
andb
lret
call
xchg
in
leave
sub
pop
mov
jmp
push
lea
push
call
sarb
mov
addr16
test
add
int
push
in
mov
out
in
xchg
clc
pop
sti
enter
add
in
clc
pop
push
mov
push
push
push
lea
push
push
lea
push
push
push
push
push
call
lock
push
xchg
add
in
add
add
popl
add
int
add
add
ret
mov
add
pusha
add
fsub
push
add
lcall
cld
push
lea
pop
push
push
lea
push
push
push
lea
push
push
push
push
call
add
add
add
fistps
add
push
call
ror
add
fcmovbe
add
jae
scas
cmpsb
iret
test
add
stos
sbbb
add
add
fs
pop
ret
fiaddl
testl
add
test
push
enter
jmp
push
rolb
cli
lods
add
add
ret
sub
pop
push
push
push
push
push
push
push
push
call
loop
mov
aam
push
std
repnz
xchg
add
add
lret
arpl
iret
add
add
add
add
add
lock
cltd
fwait
scas
jb
test
add
push
stos
icebp
add
add
lahf
fbstp
pop
jge
divb
test
sub
pop
push
mov
push
dec
shr
shr
pop
pop
push
inc
pop
pop
push
xor
rol
pop
pop
pop
push
lea
add
pop
leave
push
lea
push
call
jne
roll
fcomp
add
push
loope
imul
rolb
mov
xchg
pop
add
add
xchg
std
xchg
sti
add
mov
mov
ljmp
add
cmpl
out
mov
lcall
or
push
push
push
call
bound
pop
nop
fmul
add
add
arpl
add
add
add
add
mov
sahf
add
call
add
add
lds
lret
mov
lcall
in
push
push
push
lea
push
push
call
shll
add
add
add
in
fidivrs
add
bound
mov
jo
mov
add
jmp
shl
mov
add
jae
add
add
push
add
leave
test
jl
pop
std
mov
imul
lcall
clc
push
push
shl
dec
rol
pop
push
push
xor
add
sub
pop
push
push
not
pop
push
movl
push
lea
push
push
push
call
sahf
add
jle
add
lock
stos
in
mov
shlb
lea
add
add
fildl
add
shrb
enter
add
pop
mov
aam
cmpsl
movsl
scas
jge
test
in
lock
lcall
inc
clc
call
pop
cli
push
insl
ror
not
pop
test
je
push
push
push
push
push
push
lea
push
call
pop
cwtl
fldl
fwait
stc
fdivrs
sti
add
mov
pop
int3
add
loopne
add
add
in
mov
in
in
lcall
inc
or
dec
pop
pop
push
push
push
lea
push
push
push
push
call
xchg
sahf
loop
add
movsl
movsl
mov
leave
ret
add
out
aam
add
js
add
add
hlt
jecxz
out
pop
push
add
jnp
imul
push
movsb
jbe
sub
pop
pop
push
shl
pop
pop
leave
push
push
call
add
mov
add
mov
in
iret
add
bound
add
push
lods
add
jmp
add
add
clc
aad
add
lcall
add
push
push
push
push
push
push
lea
push
push
call
push
mov
hlt
cld
add
jmp
mov
add
push
jmp
xchg
lods
add
add
cmc
add
cmpsb
add
flds
add
add
pop
add
xchg
out
push
push
pop
add
push
add
jo
scas
sub
pop
mov
push
push
push
lea
push
push
push
push
call
mov
fiadds
xchg
add
add
stos
add
add
xchg
sahf
mov
add
add
add
add
add
add
xchg
add
roll
lcall
cld
push
push
push
push
push
push
call
jns
mov
add
jle
push
mov
lods
mov
mov
int3
repnz
iret
arpl
in
add
add
faddl
xchg
add
stc
add
add
pusha
loope
cwtl
jbe
test
testl
mov
test
nop
add
add
add
sub
pop
push
push
push
pop
push
push
sub
pop
testl
push
not
inc
pop
addl
push
push
push
push
lea
push
call
loop
out
add
add
stos
add
cwtl
add
xchg
add
test
add
jp
add
pop
add
repnz
sub
pop
call
push
lea
shl
xor
pop
mov
push
xor
inc
rol
sub
pop
pushl
push
rol
pop
push
push
sub
dec
sub
pop
push
push
push
push
lea
push
push
call
push
add
add
out
loope
test
shll
mov
add
roll
pop
ja
mov
lcall
mov
incl
test
call
loope
dec
lea
pop
pop
push
dec
dec
shl
pop
pop
push
xor
lea
sub
ror
pop
pop
pop
push
ror
pop
leave
ret
push
lea
push
push
push
call
add
add
hlt
add
add
pop
add
mov
add
in
add
add
add
pop
iret
mov
add
imul
mov
add
sub
pop
push
push
not
shr
lea
pop
mov
add
push
rol
pop
push
push
push
call
add
xchg
addr16
add
pop
pop
arpl
cmc
mov
add
ret
nop
add
add
in
add
movsb
mov
mov
lea
add
lea
add
xchg
add
add
xchg
add
push
push
push
shr
lea
pop
push
push
add
shr
pop
movl
push
lea
push
push
lea
push
push
lea
push
lea
push
lea
push
call
iret
add
stos
scas
add
icebp
add
add
mov
add
add
les
add
fs
pop
add
add
ljmp
lock
add
idiv
add
pop
push
push
lea
push
call
roll
add
xchg
pop
add
push
add
add
add
addr16
negl
out
xchg
push
push
jge
pop
add
bound
add
push
add
jae
add
pop
mov
add
test
add
add
faddl
add
out
aad
add
lret
add
pop
shrl
xchg
add
movsb
add
add
sub
pop
call
push
push
inc
rol
pop
call
push
push
lea
push
lea
push
call
mov
add
loopne
cmc
push
aam
in
icebp
add
pop
add
cwtl
in
jne
pop
lds
jbe
mov
mov
ret
popa
fidivs
mov
mov
scas
add
mov
mov
faddl
filds
sub
pop
subl
push
rol
add
pop
cmpl
jne
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
fistps
lods
lods
push
lds
add
add
mov
lds
mov
les
push
add
scas
xchg
add
add
pop
stos
pop
loopne
scas
xchg
add
add
sub
pop
pop
push
inc
pop
pop
pop
push
lea
push
push
call
mov
add
pop
add
push
test
add
insb
add
mov
std
push
mov
add
rcl
add
jnp
sahf
add
iret
add
pop
push
ror
rol
sub
pop
leave
push
push
lea
push
push
push
push
call
add
fisubrs
add
add
add
add
mov
add
mov
fwait
pop
add
addb
lds
add
lret
add
add
mov
in
call
ret
push
push
shr
add
pop
mov
add
push
add
ror
sub
pop
push
push
push
push
lea
push
push
call
test
mov
add
lock
shlb
ljmp
cltd
je
mov
add
in
lcall
xchg
pop
add
xchg
ja
add
push
cmpsl
jae
les
mov
jo
into
rolb
insb
movl
subl
push
push
push
push
push
push
push
push
push
push
call
add
popl
xchg
rcll
mov
in
mov
add
jns
popa
add
add
mov
ljmp
add
add
rcll
shll
sbbl
movsl
add
add
mov
xlat
gs
add
pusha
mov
mov
test
add
lcall
push
push
push
push
push
lea
push
push
push
call
add
aad
add
pop
movsl
add
addl
mov
pop
mov
test
in
loope
movsl
fildl
jns
hlt
add
aad
add
add
mov
test
add
add
add
jp
jmp
xchg
mov
sub
pop
push
push
push
shr
rol
not
push
or
not
add
sub
add
ror
dec
pop
add
pop
push
lea
push
call
addb
add
jo
imul
loope
std
add
cld
add
out
lock
repnz
pop
cltd
add
int
add
add
jmp
bound
in
clc
pop
pushl
push
lea
not
ror
pop
call
push
shl
sub
pop
call
push
push
shl
push
or
inc
add
dec
inc
add
add
sub
shl
rol
xor
add
pop
add
pop
push
not
lea
dec
pop
pushl
push
lea
pop
call
push
shr
shr
pop
call
push
push
inc
sub
push
push
pop
add
lea
inc
dec
sub
lea
inc
pop
not
not
shl
pop
push
sub
pop
pushl
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
jne
add
leave
lds
pop
add
lcall
mov
jns
pop
cld
jge
add
add
xchg
mov
push
add
pop
icebp
add
add
pop
iret
cmpsb
std
xlat
add
in
loopne
call
push
lea
shr
sub
pop
call
push
push
push
and
add
lea
lea
sub
sub
lea
not
xor
pop
dec
not
pop
push
push
call
push
add
add
add
push
add
add
mov
jecxz
add
add
lods
nop
lcall
add
add
movl
leave
pop
add
add
stos
add
add
je
lcall
add
sub
pop
pushl
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
push
add
repnz
mov
add
add
add
add
add
push
test
add
add
lret
sahf
add
add
popl
js
push
push
roll
add
faddl
stos
int3
cld
add
filds
jno
add
add
loope
add
call
sub
pop
call
call
push
push
dec
add
dec
push
push
pop
add
shl
add
sub
sub
sub
shr
shr
inc
inc
pop
add
pop
push
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
call
lcall
cmpsl
xchg
cmc
cli
xchg
add
add
push
jne
push
addb
add
lods
add
add
lret
add
fs
mov
push
add
mov
add
scas
in
add
jo
bound
test
add
xchg
add
lcall
jne
push
push
lea
push
call
add
push
add
test
repnz
jbe
test
bound
in
pop
pop
add
add
add
fwait
jno
add
dec
add
mov
add
fstpt
add
int3
xor
pop
call
push
push
shr
sub
push
or
inc
add
shl
inc
sub
sub
not
not
not
pop
sub
add
ror
pop
push
push
push
lea
push
lea
push
push
lea
push
push
call
fsubrs
add
jl
pop
outsl
mov
stos
call
add
test
add
add
add
pop
mov
bound
push
add
sub
pop
pushl
push
lea
push
push
push
push
call
add
nop
arpl
mov
add
repnz
lahf
add
add
cwtl
rolb
add
push
stc
clc
lock
add
fmul
fcmovne
add
pop
add
add
jns
pushf
xchg
mov
lret
add
add
ljmp
call
xchg
mov
add
loop
pop
loope
xchg
loopne
popf
cmpsb
mov
add
mov
add
add
pop
jp
add
stos
xchg
out
mov
push
jecxz
mov
leave
sub
pop
call
push
push
ror
sub
push
and
add
rol
not
sub
sub
shl
lea
pop
shl
inc
add
sub
pop
push
push
push
lea
push
push
push
push
call
jns
add
add
scas
add
add
incb
add
fwait
add
mov
add
cli
ljmp
pop
pushl
call
push
push
push
lea
push
push
push
call
mov
addl
mov
add
pop
mov
lea
scas
test
ljmp
add
add
lds
add
fdivrp
add
iret
cmpsl
add
mov
add
enter
add
add
lods
hlt
jae
out
jp
popa
cmc
out
movsb
js
add
add
lret
mov
pop
call
push
push
shl
push
or
inc
add
dec
sub
shr
not
lea
pop
sub
pop
push
rol
sub
pop
pushl
push
shr
pop
call
push
push
push
push
push
push
push
push
push
call
add
pop
mov
xchg
add
fs
add
clc
add
mov
add
ja
stos
roll
test
mov
std
push
add
in
loop
add
mov
mov
add
add
movsb
call
sub
pop
call
push
push
push
push
lea
push
push
call
test
add
flds
pop
ret
pushf
add
mov
cwtl
fiadds
jl
mov
ljmp
stc
in
add
mov
add
cwtl
sarb
in
call
lea
push
add
pop
sub
push
add
pop
mov
shr
push
lea
pop
add
mov
push
rol
pop
mov
add
push
dec
rol
rol
pop
add
push
add
sub
xor
pop
mov
mov
push
push
lea
push
lea
push
push
push
lea
push
push
call
sahf
jno
add
hlt
pop
outsl
outsl
add
jne
mov
shr
push
ljmp
add
rolb
add
addb
pop
idivl
popf
add
add
in
fildl
jp
incb
ret
orb
sub
pop
cmp
jne
push
push
lea
push
call
js
arpl
add
mov
xchg
xchg
mov
add
in
add
add
mov
lods
out
pop
mov
add
xlat
add
add
pop
test
add
cmpsl
push
add
push
sub
pop
cmp
jne
push
push
push
push
push
push
push
call
movsl
add
call
clc
icebp
outsl
add
mov
bound
add
cmc
les
pop
add
ljmp
roll
add
push
add
mov
fdivs
add
jmp
add
scas
add
add
pop
mov
fs
mov
xchg
xorb
sub
pop
mov
push
push
push
call
xchg
add
add
add
bound
add
imul
add
addl
cmpsb
add
int
cltd
stos
mov
in
add
add
out
out
fldl
loopne
add
add
sahf
pop
pushf
xchg
sub
pop
movl
jmp
push
sub
add
pop
mov
push
push
push
lea
push
lea
push
push
lea
push
push
push
lea
push
call
insb
xchg
add
add
add
std
add
add
call
cli
add
cwtl
out
add
add
add
sarb
add
add
mov
fistps
add
in
fcomps
push
or
adc
test
add
add
sub
push
lea
push
call
out
add
mov
jne
fsubrs
jmp
nop
stos
imul
test
mov
icebp
add
ljmp
jae
addl
lods
mov
jmp
add
jbe
movsl
add
xchg
pop
lock
cwtl
mov
in
lcall
inc
adc
add
add
push
push
push
push
push
lea
push
call
loopne
add
mov
add
test
add
push
add
loope
pop
push
add
add
add
add
insb
into
fsubs
testl
outsl
movsl
in
add
add
movl
add
add
mov
add
clc
add
sub
pop
jmp
mov
push
dec
shr
pop
mov
push
push
lea
push
push
push
push
call
addr16
subl
add
cli
add
add
cltd
fldenv
add
iret
pop
add
jne
add
lret
add
mov
in
call
jne
mov
push
ror
shr
shr
pop
movl
push
push
push
push
push
push
push
lea
push
call
enter
add
mov
popl
cld
hlt
mov
lret
clc
mov
cli
add
cmpsb
add
out
aam
imul
mov
imul
popa
cld
add
pop
in
cli
add
in
addr16
add
mov
add
push
sub
pop
jmp
push
push
push
lea
push
call
pop
testb
add
pop
jne
ja
mov
fistl
pusha
add
cmpsl
mov
add
in
add
mov
loopne
add
hlt
add
add
mov
mov
push
dec
not
pop
cmpw
jne
mov
push
push
push
push
push
push
call
mov
xchg
pushf
movl
mov
push
add
loope
in
add
push
cmc
shl
ja
mov
bound
pop
movl
push
dec
pop
jmp
push
sub
pop
pushl
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
call
xchg
add
xlat
jb
nop
add
add
insb
out
mov
flds
add
andb
loope
pop
add
outsl
cltd
add
add
add
pop
add
inc
or
inc
sbb
sub
sub
pop
mov
push
push
ror
push
xor
add
not
lea
shr
not
sub
not
xor
sub
ror
pop
ror
rol
add
pop
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
int3
add
hlt
stc
lods
nop
xchg
scas
sti
add
add
jno
add
add
push
xchg
add
mov
add
add
mov
add
add
mov
popl
je
cmpsl
cmpsb
add
enter
leave
insb
push
add
pop
add
orb
je
mov
stos
add
add
add
mov
lcall
push
xor
pop
call
cmpl
je
push
push
dec
inc
lea
push
push
pop
add
dec
sub
not
ror
pop
inc
pop
push
push
lea
push
call
flds
mov
xchg
add
jp
pop
out
pop
xchg
repnz
add
mov
hlt
pop
xchg
jp
mov
xchg
add
mov
add
lds
fldl
add
lock
add
pop
add
fucomip
fs
push
add
pop
sub
pop
push
call
push
shr
dec
pop
cmpl
je
push
push
sub
add
push
or
inc
add
dec
lea
sub
ror
dec
not
pop
dec
pop
push
push
push
push
call
add
xchg
addl
lret
add
add
fwait
lds
gs
add
add
add
in
lock
push
push
push
call
test
frstor
sti
add
add
mov
in
pop
add
add
add
aam
cltd
sti
in
nop
push
jmp
add
cmpsb
pop
mov
sti
lcall
lcall
mov
sub
pop
cmpl
je
push
push
shl
push
and
add
lea
add
ror
sub
shl
add
sub
pop
lea
shr
not
shl
pop
push
sub
pop
push
call
push
push
push
push
push
call
test
pusha
push
loop
add
add
add
out
imul
jge
add
shr
add
add
fnstsw
aad
xchg
add
in
pop
cmpl
je
push
push
shr
push
or
not
add
dec
not
sub
ror
pop
lea
sub
add
pop
push
rol
sub
ror
inc
pop
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
push
call
in
add
lods
add
stc
jo
jb
add
add
stc
add
add
popf
add
in
scas
loopne
add
add
test
add
mov
cwtl
fiaddl
sub
pop
call
cmpl
je
push
push
add
not
push
push
pop
add
ror
sub
shr
shl
add
pop
ror
add
pop
push
lea
sub
pop
push
push
dec
shr
shr
add
pop
call
push
xor
pop
cmpl
je
push
push
ror
inc
lea
push
xor
add
add
sub
xor
pop
not
pop
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
call
mov
add
add
mov
add
add
add
mov
add
mov
add
fildl
fcmovnbe
add
shrb
nop
hlt
add
nop
out
jno
add
jnp
addr16
les
push
jl
loopne
lret
add
test
add
cltd
add
pop
nop
sub
pop
push
call
push
rol
pop
cmpl
je
push
push
sub
push
sub
add
sub
sub
sub
not
shr
pop
pop
push
rol
sub
add
shl
pop
push
call
push
ror
pop
cmpl
je
push
push
dec
xor
push
xor
add
not
sub
shr
add
ror
ror
pop
inc
dec
pop
push
lea
push
push
call
add
add
add
scas
add
add
xlat
mov
in
xchg
add
mov
stos
add
in
hlt
lcall
call
push
dec
ror
pop
cmpl
je
push
push
add
dec
xor
push
push
pop
add
sub
sub
shr
pop
shl
lea
pop
push
add
ror
ror
pop
push
push
push
push
push
lea
push
push
call
mov
test
add
movsl
popf
add
insb
add
add
add
test
rolb
in
pop
cmpl
mov
add
subb
sub
pop
call
push
ror
inc
add
pop
cmpl
je
push
push
shr
not
add
push
or
inc
add
sub
shr
inc
sub
lea
pop
inc
xor
pop
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
leave
jae
add
loope
add
push
xchg
add
add
add
addl
andb
jns
lock
add
popf
iret
add
add
roll
adcb
add
add
mov
in
jo
add
add
sub
pop
push
call
push
lea
push
push
call
jecxz
push
xchg
xchg
mov
add
cld
add
jae
push
jmp
add
add
in
add
jnp
in
add
add
scas
add
aad
add
lock
mov
stos
add
mov
hlt
pop
cmpl
je
push
push
xor
push
and
add
add
sub
add
xor
pop
inc
rol
not
pop
push
sub
sub
pop
push
push
lea
push
push
push
push
call
lods
lock
add
aad
add
add
stc
add
js
mov
subb
imul
mov
popf
add
lock
movsb
add
add
mov
out
movb
jns
add
scas
fwait
add
xchg
push
stos
mov
cltd
out
add
push
mov
jnp
in
in
pop
call
push
rol
lea
pop
cmpl
je
push
push
shl
push
push
pop
add
not
sub
sub
inc
dec
pop
not
shr
pop
push
sub
pop
push
push
sub
pop
call
push
lea
push
lea
push
call
pop
leave
push
add
add
mov
add
pop
add
sarl
repnz
mov
sub
pop
cmpl
jne
mov
push
shr
rol
pop
movl
push
shl
lea
pop
jmp
push
ror
pop
xor
push
not
pop
pop
push
push
call
bound
les
scas
add
add
add
roll
pop
add
add
movsb
data16
add
sti
ljmp
arpl
add
add
push
hlt
add
add
pop
pop
push
push
push
push
lea
push
lea
push
push
push
push
push
call
add
add
add
add
add
add
add
add
lret
add
add
in
add
fldl
add
add
lcall
sub
pop
pop
push
sub
xor
sub
add
pop
pop
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
jle
outsl
add
enter
add
cmc
pop
add
add
add
add
add
test
mov
js
push
mov
cltd
add
outsl
bound
add
lea
sub
pop
leave
push
lea
push
push
lea
push
push
push
push
push
call
mull
add
add
add
add
ret
cmpsl
add
push
pop
add
add
or
push
pop
push
push
pop
mov
push
shr
shl
pop
add
push
push
push
push
push
push
push
lea
push
lea
push
call
add
roll
add
add
iret
rcl
add
push
arpl
push
lret
add
add
xlat
sahf
in
add
add
imul
lcall
jge
add
test
add
add
rcl
xlat
push
lea
dec
push
or
inc
add
add
not
ror
sub
add
add
add
shr
pop
xor
rol
ror
inc
pop
push
push
push
push
push
push
push
push
push
call
add
out
push
add
add
lcall
add
imul
add
mov
loope
xchg
enter
pop
add
arpl
add
pop
in
add
in
in
enter
lcall
jne
push
shr
pop
call
push
push
ror
shr
pop
call
push
lea
push
push
lea
push
push
push
push
push
call
fldl
stos
movsl
addl
add
mov
mov
incb
stos
xlat
jne
loop
add
idiv
rolb
add
add
add
out
pop
add
add
add
cmpsb
add
out
roll
jns
add
stos
add
cmpsb
add
scas
mov
pushf
add
add
sar
jnp
add
sub
pop
jmp
cmpl
jne
push
push
lea
push
push
lea
push
push
call
enter
test
mov
push
test
jb
add
scas
shlb
pop
movsl
rcr
xchg
lret
repnz
pop
sahf
mov
lods
xchg
rolb
int
add
mov
jecxz
add
add
mov
imul
dec
adc
push
push
push
push
push
lea
push
lea
push
push
call
add
scas
addl
aad
cwtl
ja
pushf
arpl
add
test
xchg
add
in
jb
out
mov
ja
push
add
mov
in
fcomps
rcll
push
push
push
push
push
push
lea
push
push
call
filds
add
add
xchg
bound
mov
mov
add
jb
sbb
subb
mov
sub
push
add
cmpsl
add
addb
test
mov
aam
add
lret
add
pop
ret
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
add
add
fcoml
add
loopne
add
xchg
lods
loop
ljmp
in
fcompl
fistl
or
jne
push
push
add
add
push
or
not
add
shr
dec
sub
shr
pop
rol
ror
shl
pop
push
dec
not
pop
pushl
push
push
push
push
push
push
lea
push
call
add
fldenv
add
mov
pushf
add
add
out
add
out
add
mov
cwtl
push
mov
ret
add
pusha
movl
mov
in
lcall
add
add
push
lea
xor
not
add
pop
push
call
push
xor
inc
not
shl
pop
jmp
cmpl
je
push
push
push
push
push
push
push
call
add
add
add
lods
rcl
fs
add
mov
jbe
mov
push
add
add
xchg
pop
add
pop
add
mov
xchg
sub
pop
cmpl
jne
push
push
push
push
call
rol
add
add
jns
lret
add
add
int3
add
add
cltd
push
add
jns
mov
add
add
mov
pop
in
out
add
lcall
add
add
push
push
push
push
push
push
push
push
call
cld
mov
add
add
add
ljmp
mov
mov
addb
fnstcw
add
repnz
add
mov
mov
lods
pop
pop
cmpsl
jbe
add
or
add
push
lea
pop
push
push
add
shl
xor
pop
call
push
push
inc
sub
not
push
or
not
add
rol
xor
sub
not
ror
pop
add
add
sub
pop
push
pop
pushl
push
shr
shl
pop
call
push
rol
pop
call
push
push
rol
push
or
not
add
inc
ror
add
sub
sub
add
add
inc
pop
rol
shr
sub
pop
push
push
push
push
call
add
add
add
shl
roll
add
stos
lods
movsl
add
add
xchg
add
xchg
faddl
add
fs
jge
popf
fld
add
add
test
mov
add
testl
pop
pushl
call
push
add
pop
call
push
push
add
shr
sub
push
xor
add
ror
ror
sub
lea
pop
shr
add
pop
push
push
push
push
call
add
add
add
xchg
add
add
add
add
xchg
mov
test
into
xchg
add
jns
lds
add
push
add
outsl
pop
mov
xchg
leave
imul
lds
add
mov
roll
sub
pop
pushl
call
push
lea
push
lea
push
push
push
call
in
insb
add
fidivs
xchg
mov
pushf
ret
out
add
cmpsb
add
add
push
loop
addb
or
int3
ret
pop
jecxz
jae
mov
jb
sub
pop
call
push
push
rol
ror
not
push
sub
add
shr
sub
shl
pop
shl
pop
push
push
lea
push
push
call
add
test
loop
add
hlt
fwait
xchg
add
add
lods
mov
mov
add
jnp
add
mov
gs
in
cld
add
test
pop
lret
pop
add
add
sub
pop
pushl
push
sub
add
inc
pop
call
push
sub
rol
pop
call
push
push
push
or
inc
add
add
inc
sub
shr
pop
sub
pop
push
rol
inc
pop
pushl
push
not
add
lea
pop
call
push
lea
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
enter
push
add
jp
mov
add
add
add
ret
add
jne
push
fs
movsb
jl
add
xchg
xchg
mov
insb
xchg
add
jge
into
insb
jge
add
shlb
in
fcomps
shrb
sbb
ljmp
push
add
dec
add
ror
sub
shr
pop
not
not
pop
push
lea
push
call
add
add
add
aam
push
out
add
out
add
add
add
stc
fdivs
push
ja
add
sub
pop
pushl
push
push
call
into
add
repnz
fdivs
rcrl
mov
shll
movsb
outsl
cmpsl
push
add
add
rolb
mov
jns
xchg
add
pop
call
push
add
not
xor
ror
pop
call
push
push
add
sub
sub
add
push
push
pop
add
shl
sub
xor
lea
pop
lea
pop
push
inc
pop
pushl
call
push
xor
xor
lea
pop
call
push
push
sub
dec
inc
dec
push
push
pop
add
not
sub
add
add
ror
pop
sub
sub
pop
push
push
push
push
call
stc
lahf
lods
les
mov
movsb
imul
add
pusha
lock
add
leave
add
add
cmc
sbbl
mov
iret
add
popa
ljmp
cmc
rcr
jb
add
fnstcw
loop
add
lahf
xchg
pushf
add
jle
in
add
clc
sub
pop
pushl
call
push
inc
pop
call
push
push
sub
add
push
xor
add
add
add
sub
sub
ror
inc
pop
add
pop
push
push
push
lea
push
lea
push
push
push
call
sub
add
aad
nop
test
add
jl
pop
xchg
jecxz
add
lods
add
test
xchg
out
mov
add
mov
into
jge
sbbb
pushl
push
push
push
push
push
push
push
push
push
push
call
stos
add
cmpl
test
add
jle
rorb
add
mov
add
jecxz
mov
cltd
les
lcall
add
add
push
push
lea
push
push
call
lahf
add
jmp
iret
lahf
jmp
add
mov
add
out
add
add
jns
rolb
js
pusha
fisubs
mov
pop
add
add
push
in
data16
jnp
rcrb
add
mov
in
lock
call
push
push
add
add
shr
push
and
add
dec
sub
sub
xor
xor
pop
add
dec
rol
shl
pop
push
push
lea
push
push
push
push
lea
push
push
call
rcrb
push
push
add
mov
add
mov
add
add
lcall
call
lret
stc
add
add
mov
add
nop
xchg
pop
add
fcmovbe
mov
add
lods
add
sub
pop
pushl
push
not
pop
call
push
xor
not
dec
pop
lea
push
push
lea
shl
lea
pop
call
push
push
sub
push
and
add
sub
shr
sub
sub
sub
pop
dec
pop
push
not
add
rol
pop
pushl
push
dec
rol
pop
call
call
push
push
rol
shl
push
or
not
add
sub
add
rol
add
pop
sub
pop
push
xor
rol
dec
xor
pop
pushl
call
push
push
push
push
push
call
add
add
js
addl
lods
int
pop
arpl
mov
add
push
mov
add
add
pop
add
add
add
cmc
imul
push
push
xor
sub
add
push
or
inc
add
dec
inc
not
sub
sub
pop
rol
pop
push
push
push
push
push
push
lea
push
lea
push
push
call
push
push
mov
out
add
add
lock
add
mul
arpl
add
andl
add
add
out
fstps
add
lret
fildl
fcmovne
push
push
add
mov
addl
xchg
add
add
lcall
jne
push
push
push
lea
push
push
push
call
mov
add
iret
mov
imul
push
jb
mov
add
xorl
add
aad
add
add
jp
shl
mov
jb
push
mov
mov
push
sub
pop
call
push
lea
push
push
push
lea
push
lea
push
push
push
call
cmc
fldl
add
add
add
pusha
add
add
jp
cld
rcl
notb
shl
stos
out
add
roll
add
add
add
add
add
add
pushf
mov
loopne
lcall
shrb
incl
mov
jmp
incl
xchg
jae
add
jmp
sub
xor
sub
sub
pop
sub
lea
sub
add
pop
push
push
push
push
push
lea
push
push
push
call
stos
xchg
repnz
add
addl
add
push
popf
fwait
add
data16
jecxz
add
add
incb
add
mov
add
cwtl
sub
pop
pushl
call
push
push
push
sub
add
shr
add
sub
shr
pop
pop
push
push
sub
inc
inc
not
push
or
not
add
shr
sub
sub
dec
ror
inc
add
pop
lea
pop
push
push
lea
push
push
push
push
push
lea
push
push
call
cli
add
mov
loopew
fwait
xchg
add
pop
add
add
stos
ja
add
mov
lret
cmc
fistpll
add
fidivl
out
add
add
add
add
xlat
pop
mov
add
int3
add
enter
scas
fidivrl
shll
add
sub
pop
call
push
sub
pop
pop
push
lea
push
call
add
add
push
add
out
fcmovbe
xchg
les
jno
add
push
add
in
mov
add
cmpsb
add
in
icebp
add
add
add
mov
icebp
add
sub
pop
dec
jne
push
shr
inc
pop
call
push
push
push
push
push
lea
push
push
call
add
add
add
add
out
xchg
out
pop
xor
push
add
into
fsub
push
mov
add
mov
mov
add
add
lock
hlt
add
add
lahf
add
movsl
mov
add
add
add
in
in
lcall
add
add
push
add
pop
int
lea
push
push
inc
push
or
inc
add
add
shl
sub
xor
pop
shl
rol
inc
pop
push
dec
sub
dec
sub
pop
pushl
push
push
lea
push
lea
push
push
lea
push
call
fdivrl
roll
mov
cli
lea
arpl
imul
add
std
nop
jbe
add
jnp
sub
pop
call
push
dec
pop
push
push
dec
not
pop
call
push
push
sub
xor
shr
push
or
inc
add
rol
rol
lea
sub
sub
pop
lea
pop
push
inc
pop
pushl
push
add
pop
call
push
pop
call
push
push
push
push
push
lea
push
push
push
push
call
mov
into
jecxz
call
add
lcall
add
rcrl
add
jns
test
pop
add
add
add
sahf
jb
sub
pop
mov
lea
push
push
not
add
add
rol
push
push
pop
add
rol
rol
rol
sub
inc
lea
pop
pop
push
inc
lea
pop
pushl
push
shr
ror
sub
pop
call
lea
push
shr
add
pop
push
push
add
pop
push
push
shr
add
pop
push
pushl
push
push
shl
lea
push
or
inc
add
inc
add
sub
inc
add
sub
ror
pop
add
ror
sub
pop
push
add
pop
push
call
push
push
ror
inc
sub
sub
push
and
add
xor
sub
sub
not
pop
add
ror
xor
dec
pop
push
push
push
push
push
call
leave
add
scas
add
aad
jns
add
int
stos
shrl
flds
test
add
xchg
jmp
fadds
jecxz
mov
add
mov
mov
add
test
in
in
lcall
jne
push
add
inc
pop
call
push
push
ror
sub
pop
call
push
push
sub
add
dec
rol
push
and
add
sub
sub
pop
pop
push
not
pop
pushl
push
push
push
push
push
push
push
call
add
insb
add
loope
add
add
add
add
add
cli
add
add
ja
add
xor
add
add
mov
test
add
hlt
pop
xchg
add
add
stc
add
add
fiaddl
es
add
push
push
call
movsb
in
pop
xchg
mov
jns
popa
ret
mov
in
ljmp
add
lea
add
add
pusha
add
mov
into
loopne
add
add
push
add
mov
roll
ja
add
lcall
xchg
push
add
sub
pop
call
push
push
lea
push
push
call
hlt
fstps
lods
jl
add
add
mov
add
add
aam
lea
into
add
add
out
fsubs
pusha
popf
mov
add
pop
aam
mov
mov
add
xchg
test
lcall
pushl
push
push
push
push
push
push
call
jno
shll
pushf
add
add
add
mov
icebp
jecxz
push
xchg
add
fsubr
push
gs
repnz
mov
jecxz
add
mov
aam
mov
rorb
popa
push
push
inc
fstpl
call
add
add
jmp
push
push
add
shl
dec
push
push
pop
add
inc
sub
ror
shl
add
pop
not
add
pop
push
add
dec
shr
pop
pushl
push
lea
push
push
push
push
push
push
push
push
push
call
gs
add
movsl
mov
push
add
add
add
add
sahf
iret
xchg
fdivs
jge
mov
add
stc
add
xchg
add
add
mov
pop
add
jns
add
shll
icebp
add
add
sub
pop
call
push
sub
ror
pop
push
push
shr
xor
add
pop
call
push
push
xor
push
xor
add
add
not
shr
sub
sub
sub
pop
sub
pop
push
push
push
lea
push
lea
push
push
push
call
mov
enter
add
imul
mov
cli
xchg
push
jmp
mov
add
add
add
lahf
add
mov
int
add
icebp
lret
add
add
ljmp
lcall
jne
call
push
push
lea
push
call
add
pop
in
addl
int
add
add
jae
int3
mov
bound
outsl
add
out
add
add
lds
add
add
loopne
add
nop
xchg
add
add
into
leave
lods
iret
add
push
push
push
push
call
scas
hlt
sbbb
gs
movl
faddl
jb
add
clc
xchg
hlt
add
add
jmp
test
add
jno
les
fisubs
jns
add
add
add
add
mov
addr16
cmc
mov
push
add
enter
pop
call
leave
push
shl
add
xor
pop
add
push
push
call
add
incb
faddp
fucomip
stc
sahf
cld
mov
add
add
add
roll
out
aam
jecxz
add
add
mov
outsl
add
add
push
add
test
xchg
add
add
add
lods
test
add
mov
sub
pop
pop
push
sub
pop
pop
push
push
call
mov
ja
add
add
in
add
add
popf
xchg
add
bound
mov
jmp
lea
add
cld
push
cwtl
add
mov
jge
add
je
add
divb
lcall
push
add
pop
xor
push
push
push
push
lea
push
lea
push
call
addr16
push
mov
add
mov
nop
mull
add
cmpsb
call
pop
notl
mov
add
bound
mov
pushf
add
mov
add
jno
add
add
movsb
add
add
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
leave
insb
add
pop
add
add
add
out
add
lahf
mov
mov
sahf
add
add
add
movsl
fiadds
add
mov
add
lds
jge
jmp
mov
add
add
add
loope
mov
stc
insb
jne
mov
in
sub
pop
ret
push
xor
pop
leave
ret
push
push
call
movsl
mov
andl
push
add
add
mov
mov
add
pop
xchg
add
jo
js
mov
mov
jno
add
in
jnp
scas
add
repnz
add
xlat
sti
add
lods
sub
pop
push
push
sub
shl
dec
pop
mov
push
ror
add
pop
cmpl
jne
push
push
lea
push
push
push
lea
push
push
push
call
jno
add
add
stc
fidivl
add
add
out
add
add
movsb
lcall
cltd
xlat
in
ja
lret
pop
lods
add
add
lods
add
add
jns
scas
add
rolb
add
add
add
lcall
inc
and
push
pop
jmp
mov
push
push
push
push
lea
push
push
call
add
rolb
stc
push
add
add
add
add
add
leave
mov
add
mov
movsb
ljmp
fisttps
xchg
pop
movl
lods
loope
enter
pop
and
push
push
call
add
testl
add
add
repnz
add
add
hlt
add
fldenv
addr16
add
add
add
mov
add
add
pop
data16
test
add
leave
xor
push
sub
sub
shr
ror
pop
add
push
push
push
push
push
lea
push
lea
push
call
mov
jmp
mov
sar
out
enter
mov
push
add
mov
add
add
fucomp
lea
xchg
popa
add
push
add
add
add
add
add
add
in
lcall
dec
decl
lea
push
push
push
lea
push
push
push
push
push
call
add
imul
add
roll
rolb
add
push
add
mov
add
add
mov
ret
stc
icebp
mov
addb
in
fdivr
lcall
jmp
push
lea
push
lea
push
lea
push
push
lea
push
call
mul
jne
out
jp
add
add
pop
xchg
add
mov
enter
add
addl
ljmp
lods
cwtl
imul
sub
pop
jmp
push
push
call
stc
mov
add
push
add
add
movsl
pop
jbe
subl
mov
pushf
subb
in
clc
lcall
add
add
pushl
push
push
push
push
push
lea
push
push
push
call
add
xchg
add
pop
outsl
mov
lea
pop
add
xlat
jge
add
add
jo
lahf
add
jle
add
stc
add
addl
push
call
jl
cwtl
add
std
jp
add
iret
add
pop
add
cli
fiadds
enter
add
ja
test
pusha
add
add
sahf
sub
pop
pop
push
push
push
push
push
push
push
lea
push
call
aad
mov
jne
pop
mov
add
push
mov
add
imul
pusha
add
add
cli
xchg
add
add
movsl
add
in
nop
add
add
shll
mov
loopne
lcall
jmp
cmp
jne
push
pop
mov
lea
push
lea
push
push
lea
push
push
push
push
lea
push
push
push
call
pusha
mov
gs
sti
jl
push
pop
add
iret
add
add
add
add
cld
pop
movsl
xchg
xchg
add
add
add
lcall
lcall
jmp
push
push
push
push
push
push
push
push
push
call
add
jne
clc
add
mov
js
ljmp
add
add
add
out
xchg
add
leave
clc
jmp
push
mov
mov
push
add
add
les
popl
pop
fistps
add
cltd
in
movsl
add
mov
jne
add
out
fimull
js
out
xlat
movsl
jo
sub
pop
shr
push
lea
sub
pop
add
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
add
xchg
add
add
add
add
add
add
add
iret
add
push
add
jmp
in
fcompl
jmp
lea
push
push
call
je
int3
jno
push
cmc
lret
add
mov
jns
push
out
jbe
not
mov
mov
sarb
jnp
xlat
cmpsw
call
pop
scas
in
lds
mov
lret
add
add
xchg
xchg
jno
fidivl
stos
xchg
mov
add
push
add
lcall
push
push
push
push
push
call
js
add
jecxz
cli
add
call
push
push
add
lret
add
add
add
add
add
add
shll
cltd
rcrl
adc
rcrb
loope
incl
add
add
xchg
lea
push
push
push
lea
push
call
mov
add
rolb
add
loope
mov
add
add
int3
add
cmpsb
mov
jecxz
add
push
sahf
lret
add
mov
xchg
sarl
add
add
jmp
into
loopne
mov
add
lcall
stc
sbb
test
cli
call
dec
or
push
lea
push
push
call
add
addl
insb
add
mul
out
jge
xchg
xorl
xchg
add
mov
jbe
add
sub
pop
leave
push
push
call
bound
add
popf
add
add
jns
add
push
in
rol
add
xchg
mov
aam
mov
jmp
add
movsb
add
insb
pop
roll
add
nop
in
lahf
add
add
subb
mov
pop
arpl
lcall
add
push
not
lea
pop
push
push
lea
push
push
push
push
push
push
push
push
lea
push
call
out
jnp
test
lds
lret
les
add
fwait
icebp
roll
lret
add
add
add
mov
add
add
fimuls
mov
add
std
push
add
add
fisubl
in
fcomps
in
push
push
push
lea
push
call
add
fwait
popa
jmp
mov
xchg
add
ljmp
add
popa
jmp
outsl
add
add
int
shll
adc
add
addl
flds
add
add
data16
add
pop
add
push
add
add
xor
sub
pop
push
push
push
push
push
push
lea
push
push
push
call
jno
hlt
aam
add
add
jns
add
add
lret
imul
push
in
movsb
add
add
add
mov
add
test
lcall
push
dec
pop
push
push
push
push
push
push
call
hlt
xchg
mov
mov
add
add
add
add
std
cli
testl
cmpsl
js
jnp
add
add
add
mov
add
add
add
pop
addb
add
xchg
add
add
loope
jbe
jl
in
lock
lcall
pop
or
jmp
rol
pop
lea
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
mov
mov
add
mov
in
gs
stos
mov
mov
fiadds
fldenv
sub
pop
sub
mov
push
lea
dec
shl
pop
shr
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
addb
push
pusha
outsl
imul
add
mov
enter
jl
leave
mov
add
cmc
add
add
add
add
add
xchg
add
mov
add
ror
add
add
arpl
mov
add
add
sarb
fdivr
lcall
fimull
add
cmp
call
jmp
add
add
out
insb
jae
add
test
mov
sahf
add
add
mov
test
add
faddl
sub
pop
add
push
lea
push
lea
push
lea
push
lea
push
push
push
lea
push
call
idivl
add
pop
add
loopne
movsl
cmpsl
out
gs
mov
add
add
in
push
add
add
add
lds
add
push
fidivl
add
xlat
jecxz
rcll
add
jge
in
loopne
mov
add
push
push
call
add
imul
test
add
lcall
lahf
mov
lea
xchg
add
mov
lcall
fsubrl
add
addl
mov
mov
xchg
add
out
hlt
sahf
ljmp
pop
push
xchg
fs
xchg
add
add
lahf
add
shlb
mov
pop
xor
push
add
pop
mov
and
push
push
push
push
push
push
lea
push
lea
push
call
add
roll
add
add
shll
push
add
out
out
mov
out
add
add
xchg
push
add
shl
add
jp
sahf
add
mov
fcmovu
fs
mov
in
out
mov
shrl
sahf
cmc
arpl
pushf
add
rcr
mov
out
mov
lret
out
out
sub
pop
rol
rol
push
inc
dec
pop
xor
push
lea
push
push
lea
push
push
push
lea
push
lea
push
push
call
jne
andb
add
xchg
add
fadds
pop
xchg
stc
mov
add
in
jne
add
icebp
orb
add
js
add
decb
add
addl
add
dec
sub
add
pop
cmpb
jne
push
lea
rol
inc
rol
pop
add
cmp
je
push
add
not
pop
add
push
push
lea
push
push
push
lea
push
call
push
jl
add
sti
add
popa
cli
add
jbe
leave
mov
add
mov
aad
add
loop
add
add
out
js
add
leave
jbe
movsb
mov
shr
mov
mov
in
call
cmpl
jne
xor
push
lea
push
push
push
push
call
add
cmpsb
add
push
mov
add
rolb
push
add
lea
jle
xchg
cli
insb
fxam
push
add
movsb
xlat
pop
add
mov
out
jo
mov
test
add
rorb
cmpsb
insb
imul
imul
xchg
xchg
mov
out
out
mov
in
in
pop
pop
pop
push
push
push
push
call
call
jns
fs
not
add
mov
add
mov
clc
ljmp
jo
roll
add
notb
add
jnp
add
loopne
in
fistpl
add
lcall
push
add
pop
pop
push
shl
dec
pop
pop
push
sub
sub
ror
pop
leave
push
rol
add
not
pop
ret
mov
push
add
pop
add
push
push
call
add
add
aam
pusha
mov
add
add
addr16
mov
mov
add
add
scas
add
popl
int3
xor
aam
push
movl
clc
lcall
add
fadd
jecxz
rol
shr
pop
push
mull
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
add
add
test
jae
jns
add
icebp
add
cmc
mov
iret
int
add
add
mov
mov
add
add
out
add
mov
subb
add
mov
add
push
push
push
push
lea
push
push
call
jnp
mov
mov
add
call
xchg
in
roll
adc
flds
mov
add
stos
add
stos
lret
addb
mov
add
cwtl
in
add
add
pop
add
faddl
pop
add
add
add
jp
jge
add
mov
fldl
lcall
dec
mov
push
call
addb
add
jmp
lods
xchg
add
add
add
add
imul
add
arpl
cld
movb
cld
std
lods
loopne
add
fadds
stc
add
add
lds
popl
les
sub
pop
call
xor
push
push
push
lea
push
push
lea
push
call
mov
enter
pop
ror
lcall
jnp
add
xchg
pop
aam
push
into
ret
test
add
add
jmp
add
xchg
sub
pop
pop
pop
push
push
push
push
push
push
call
pop
add
pop
add
add
xchg
xchg
in
push
mov
in
into
imul
insb
xchg
add
mov
add
push
push
add
movsb
add
jmp
repnz
push
iret
jns
add
xchg
mov
add
add
add
in
add
add
add
lcall
pop
push
shl
pop
pop
leave
push
push
push
push
push
call
add
xchg
std
jae
push
mov
add
out
add
addb
mov
movsl
add
add
add
mov
add
mov
stc
js
pop
add
or
push
xor
shl
dec
pop
push
push
inc
add
pop
mov
push
dec
not
pop
add
push
lea
pop
push
push
dec
shl
lea
not
pop
push
push
push
push
lea
push
push
push
call
mov
add
cwtl
add
loopne
int3
add
push
enter
add
add
jle
add
xchg
add
add
lcall
push
push
lea
push
push
lea
push
push
push
push
push
push
call
push
mov
int
mov
out
add
add
xchg
sahf
add
mov
add
icebp
stos
mov
cld
mov
push
add
sub
jle
add
out
mov
add
lcall
push
xor
shr
pop
mov
push
push
lea
push
push
call
add
add
into
jae
add
std
fldl
add
aad
mov
add
jp
fadds
pop
add
add
stos
add
xchg
mov
fs
fadd
jp
pushf
jns
repnz
lea
push
push
lea
push
call
mov
add
add
push
add
push
std
in
pop
mov
add
lcall
add
hlt
lcall
ljmp
push
push
call
add
add
imul
add
lret
pop
jns
add
add
xchg
mov
add
add
loop
popa
add
pop
add
pop
push
rolb
xchg
add
add
cmpsb
bound
pop
incb
lea
add
sub
lcall
adc
hlt
xor
dec
rol
pop
shr
add
push
push
push
push
lea
push
push
lea
push
push
push
call
add
test
add
mov
push
push
iret
dec
mov
out
test
add
xchg
pushf
pusha
push
add
add
mov
add
int
add
push
into
push
xlat
add
int
std
add
in
sub
pop
mov
push
push
push
lea
push
push
lea
push
push
call
add
xchg
fnstsw
add
lods
cmpsb
clc
add
xlat
std
iret
add
xchg
add
add
add
test
pop
mov
in
add
pushl
push
sub
pop
popl
push
lea
shr
pop
mov
push
not
sub
add
sub
pop
add
push
push
push
push
push
push
push
call
test
mov
add
xorl
insb
add
add
pop
add
cld
jo
add
sub
pop
xor
lea
push
dec
sub
sub
shr
pop
mov
push
lea
push
push
push
push
call
xchg
lds
movsl
add
add
mov
les
add
scas
add
cwtl
mov
add
add
add
fadds
add
jl
xchg
add
shll
fs
iret
add
add
filds
in
mov
lahf
cwtl
in
sub
pop
add
xor
push
push
push
lea
push
push
call
add
jbe
roll
mull
mov
clc
jge
mov
jo
jmp
nop
mov
fidivs
enter
addb
fs
add
in
aam
insb
add
add
jns
add
test
sub
pop
rol
push
lea
push
lea
push
push
push
push
call
push
jl
add
add
js
pop
jmp
push
cli
cwtl
in
pop
xchg
jecxz
loop
mov
add
testl
flds
mov
lret
testb
add
add
push
mov
lock
xchg
jne
add
fidivl
sub
pop
nop
push
push
push
lea
push
lea
push
push
push
call
add
add
roll
add
add
add
movsl
loop
add
push
add
xchg
jns
mov
add
mov
mov
cmpsl
push
add
clc
int
add
push
mov
mov
add
shlb
add
imul
xchg
sub
pop
nop
push
push
lea
push
push
lea
push
call
mov
mov
in
ljmp
add
add
cmpsb
data16
cmpsl
push
add
rorb
add
push
jb
jge
insb
add
lcall
add
shr
pop
nop
push
lea
push
push
push
push
push
lea
push
lea
push
call
insb
rclb
add
add
add
into
cltd
pop
add
mov
add
mov
cmpb
xchg
mov
jae
mov
add
add
aad
mov
lcall
push
push
push
call
lret
imul
add
scas
add
scas
hlt
add
mov
std
add
mov
mov
data16
add
loope
popf
cwtl
sub
pop
nop
push
push
push
push
push
push
call
add
leave
add
add
push
fwait
jecxz
jbe
add
pusha
add
out
add
add
lahf
popa
in
push
fcomps
add
add
add
mov
add
add
mov
add
fisttpll
call
xor
add
add
add
add
shll
pop
fmul
push
lret
jecxz
add
add
pop
add
pop
pop
add
mov
mov
je
push
add
add
add
lcall
cmp
jne
push
push
push
call
mov
cli
add
pop
rcrb
xchg
xchg
pushf
js
add
out
add
jle
stos
jmp
cltd
mov
add
mov
repnz
add
add
xchg
add
lcall
inc
pop
ss
nop
push
lea
push
call
push
add
add
mov
xchg
sar
test
add
add
add
add
aad
fstpt
add
mov
add
add
outsl
jno
cmpsb
popa
cmc
add
jge
mov
mov
push
pop
shlb
lret
clc
add
subb
add
add
pop
sub
pop
nop
push
push
push
push
push
call
add
movsb
xchg
mov
fdiv
add
popf
add
lock
add
add
add
pop
add
arpl
loope
add
add
add
jmp
add
xchg
add
jge
add
sahf
push
scas
jae
add
int
jmp
lcall
inc
or
test
add
add
lea
push
push
push
push
push
call
popa
add
mov
push
call
add
add
movb
mov
out
jb
test
in
push
ret
jo
incb
cli
pusha
loop
lock
add
add
lret
les
mov
leave
jae
xchg
movsb
loope
add
mov
add
add
fwait
add
mov
add
inc
push
ror
not
xor
pop
nop
push
push
push
lea
push
push
push
push
push
call
xchg
cmc
add
ficomps
hlt
add
mov
add
in
add
mov
outsl
xchg
lds
add
std
jmp
cld
icebp
je
add
gs
pop
nop
push
shr
lea
not
pop
cmp
jb
push
ror
shr
inc
lea
pop
xor
push
rol
pop
jmp
mov
push
ror
xor
pop
add
push
push
lea
push
push
push
lea
push
push
push
push
push
call
add
pop
xchg
ljmp
cmpsb
jp
add
aam
push
pop
loop
add
add
outsl
push
mov
clc
test
mov
add
jne
ffreep
add
pusha
pop
cmpb
pusha
mov
mov
cwtl
scas
sahf
fiaddl
out
sub
pop
movzwl
push
add
shr
pop
mov
push
push
lea
push
push
push
push
call
add
cmpl
push
add
add
jle
ja
stc
add
in
add
add
pop
aad
addb
add
pop
je
add
add
pop
rolb
jno
add
push
push
add
js
andb
repnz
pop
add
push
push
lea
push
push
push
call
add
add
lea
jbe
push
add
push
lret
xchg
jne
stos
popf
mov
stos
xchg
test
add
jl
push
stc
addl
push
stos
mov
int3
stos
add
add
xchg
add
add
add
mov
xchg
push
push
mov
lcall
add
push
aad
sub
pop
mov
push
sub
shr
sub
pop
xor
xor
push
add
pop
shl
push
lea
push
lea
push
push
push
push
push
lea
push
call
ljmp
add
lods
insb
cli
scas
add
imul
pop
cmp
add
in
lods
mov
add
icebp
sti
mov
add
pop
jae
shll
mov
sahf
add
add
jnp
add
pop
jne
sub
pop
xor
push
pop
shl
push
shr
add
inc
shr
pop
xor
shl
push
sub
inc
shl
pop
xor
mov
push
push
push
push
lea
push
push
push
call
test
scas
loopne
add
add
add
shr
pop
add
scas
add
add
add
scas
jp
mov
mov
js
xchg
add
sahf
movsl
mov
add
in
call
add
add
add
lcall
inc
hlt
pop
push
lea
push
push
lea
push
push
lea
push
lea
push
call
jp
jle
add
jge
addl
test
add
mov
add
scas
add
add
popf
stos
add
add
out
jle
pop
add
add
in
in
lcall
push
shr
pop
pop
pop
push
push
push
push
lea
push
call
add
add
add
add
add
add
jmp
add
test
jle
loope
xlat
mov
test
mov
lds
pop
jle
loope
add
out
loope
add
bound
add
add
pushf
rcl
add
lods
jae
addb
add
icebp
sub
pop
leave
ret
push
push
lea
push
lea
push
push
lea
push
push
call
add
lods
stos
loope
jmp
push
test
test
add
jo
fucomp
mov
add
cmp
in
scas
add
mov
lcall
add
sub
pop
push
push
lea
push
lea
push
push
push
push
lea
push
push
lea
push
call
scas
add
jns
addl
add
loopne
mov
movsb
add
xchg
pushf
xchg
add
add
add
mov
popa
push
mov
add
in
fcompl
in
push
push
push
push
push
lea
push
push
push
call
sti
cld
in
add
ja
std
shll
movl
add
test
out
add
jl
add
jnp
add
insb
xchg
data16
xchg
movsl
add
imul
loopne
push
push
push
push
call
add
mov
movsb
add
insb
lea
imul
in
imul
cmpsb
movl
shl
add
add
js
jbe
add
add
add
mov
rolb
sub
pop
push
push
ror
sub
pop
push
push
not
xor
pop
mov
push
push
push
push
lea
push
push
push
push
push
call
mov
add
ret
fidivrl
lods
add
lret
testb
enter
add
add
ffreep
mov
add
fstps
mov
push
push
push
lea
push
push
lea
push
push
call
std
fwait
add
fadd
mov
add
add
insb
cli
imul
add
mov
add
add
jge
push
ror
pop
test
je
mov
push
push
push
push
push
lea
push
lea
push
call
mov
cmpsl
pop
test
push
out
add
jne
add
add
add
jb
fiaddl
rolb
pusha
push
push
add
mov
add
fiadds
mov
out
jge
roll
pushf
cltd
mov
movl
xchg
rcr
add
add
cmpsl
add
mov
in
lcall
testb
lods
add
add
jl
rclb
lea
push
push
push
call
jl
ficoms
add
lahf
xchg
aad
into
xchg
add
xchg
enter
add
test
mov
add
add
xchg
add
sub
pop
mov
mov
push
push
push
push
push
call
add
add
push
lods
jnp
add
lret
cmpsl
pop
mov
xchg
out
add
orb
add
push
aad
stos
cltd
add
fsub
add
testl
add
add
pop
out
mov
jmp
loopne
pusha
mov
cwtl
push
jns
add
cmc
mov
int3
add
in
in
lcall
pop
push
push
push
push
push
push
lea
push
push
push
push
call
aad
add
rolb
add
jmp
add
out
pop
push
add
xchg
add
ja
add
add
add
add
push
push
push
lea
push
push
push
push
push
push
call
add
jae
jl
add
ljmp
add
out
les
cmpsl
addb
add
lahf
cwtl
data16
fiadds
mov
add
clc
lds
add
pusha
enter
cmpsb
xchg
in
ret
add
jae
push
bound
jb
stc
add
sub
pop
cmp
je
test
je
push
ror
sub
sub
pop
mov
inc
push
inc
pop
cmp
je
push
push
push
push
push
push
push
push
push
push
call
je
xchg
add
add
pop
lock
jo
idivb
jl
mov
add
into
test
xchg
mov
xchg
add
stc
mov
rolb
filds
add
add
add
stos
pop
add
loope
add
in
fdivr
lcall
rorb
pushl
rclb
stos
dec
lcall
push
push
lea
push
push
push
push
push
push
push
push
call
push
add
fcmovbe
enter
push
add
add
fidivrs
fwait
jmp
add
out
add
jecxz
data16
mov
push
filds
jae
add
leave
repnz
add
add
xlat
cltd
ljmp
mov
out
aam
popf
testb
fiaddl
lcall
pop
push
lea
push
push
call
push
add
cwtl
add
add
les
mov
stos
leave
fadds
lea
mov
int3
pop
add
pushf
add
jp
nop
add
add
pop
pop
push
sub
pop
leave
push
xor
xor
add
add
pop
ret
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
mov
ret
lods
add
push
mov
mov
lcall
cmpl
add
iret
add
add
in
in
je
lods
push
add
mov
inc
push
push
push
lea
push
push
push
push
push
call
push
fldl
out
jno
add
add
add
mov
push
xchg
hlt
push
in
nop
loopne
xchg
stc
jne
mov
jns
jl
pop
shll
lcall
lock
lea
push
lea
rol
ror
pop
mov
test
je
push
xor
pop
mov
push
push
push
lea
push
call
test
std
add
je
xchg
add
add
hlt
add
add
subb
loope
add
lcall
movb
rol
pop
cmp
jne
push
add
dec
xor
sub
pop
mov
test
je
push
dec
rol
rol
pop
mov
push
rol
pop
add
cmp
je
push
push
push
push
push
call
cmpb
test
outsl
add
add
add
shlb
add
cmpsl
add
add
mov
xchg
pop
iret
test
jle
rolb
add
jecxz
stc
out
test
in
in
lcall
movsb
sti
call
mov
xor
pop
push
push
push
push
push
push
push
lea
push
push
call
xchg
xlat
sbbl
mov
stos
mov
add
add
out
scas
push
filds
add
pop
repnz
mov
stc
bound
mov
add
in
fdivr
lcall
push
lea
push
push
push
push
lea
push
push
call
jne
aad
jp
stos
pop
add
add
add
mov
add
into
ljmp
add
pop
add
fldcw
jnp
push
add
add
add
add
add
add
add
mov
out
lock
mov
xlat
push
push
add
pop
hlt
out
scas
aam
add
lds
hlt
movl
lcall
push
push
lea
push
call
mov
add
mov
insb
shrb
add
roll
mov
jp
add
add
lock
pop
xchg
add
ljmp
add
pop
movsl
test
sub
pop
pop
push
push
push
lea
push
lea
push
push
push
push
call
add
add
into
in
xor
call
hlt
pop
add
add
movb
lahf
add
push
push
add
fdivr
cltd
add
movsb
push
jecxz
add
pusha
lea
pushf
sub
pop
leave
ret
push
pop
lea
push
not
inc
ror
pop
pop
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
mov
add
outsl
mov
add
fiaddl
mov
mov
add
pop
mov
test
movl
jb
add
push
jecxz
mov
add
lret
push
int3
sub
pop
pop
push
add
pop
pop
pop
push
push
push
push
push
push
push
push
call
add
xchg
lcall
add
add
imul
lea
divb
incb
add
push
lret
add
add
add
add
lock
loopne
leave
push
pop
ret
push
lea
push
lea
push
lea
push
push
push
call
add
add
int3
jnp
add
add
mov
push
adcl
add
stc
mov
fcompl
mov
in
call
mov
push
push
call
jno
jge
cmc
add
aam
add
test
fldl
out
flds
add
add
popf
int3
mov
add
mov
nop
mov
add
add
cwtl
add
add
pusha
push
out
mov
fdivrl
add
mov
pop
pop
push
lea
push
push
push
push
push
push
push
push
call
jno
add
add
add
add
mov
js
push
add
mov
pop
add
cwtl
push
cmpb
mov
mov
nop
cwtl
int
loopne
pushf
push
cmpsb
insb
add
aam
mov
lds
cltd
mov
test
pop
add
mov
add
loope
in
fcompl
push
push
push
push
push
push
push
lea
push
push
call
fsubrs
fiadds
add
popf
add
add
add
js
add
mov
subl
mov
add
add
add
add
js
xchg
cmpsl
add
movsb
add
jmp
mov
add
add
add
outsl
sub
pop
pop
push
push
push
call
mov
js
out
add
in
add
leave
add
in
shrb
iret
add
fnstenv
mov
mov
add
in
hlt
pop
pop
push
push
push
push
lea
push
push
lea
push
push
push
push
call
add
add
addr16
pop
mov
cli
shrb
add
out
add
pop
add
mov
push
add
int
hlt
je
add
je
out
add
add
imul
mov
add
outsl
add
fisttps
jb
icebp
add
xchg
add
lret
movsl
add
sub
pop
leave
push
lea
push
lea
push
lea
push
call
xchg
mov
add
je
addr16
sbb
roll
pop
add
add
leave
xchg
stc
in
add
add
add
ficoml
flds
add
jnp
xchg
add
cmc
pop
add
push
pop
fiadds
lcall
or
cmp
leave
mov
inc
lret
ret
lret
icebp
into
mov
ror
mov
mov
lret
pop
lret
xchg
lret
or
jns
enter
add
ret
lods
nop
jo
pop
mov
popf
sbb
jg
sbb
and
pusha
or
ss
xchg
mov
cmpsl
inc
movsl
into
adc
test
test
shll
sarl
leave
or
movsl
push
and
int3
repz
sub
adc
jae
add
sahf
inc
push
jbe
dec
push
sub
stos
fcmovb
lret
movsl
add
std
and
cmp
js
mov
sbb
bound
inc
insb
push
jo
mov
dec
fdivrl
sub
js
jne
outsb
cli
adcl
nop
mov
jb
push
dec
psubd
sahf
xor
mov
add
inc
mov
call
jle
xor
and
in
jb
fdivrl
cmp
mov
and
lock
add
imul
cmp
xor
inc
jmp
jle
icebp
mov
lahf
sbb
pop
cmp
fistpl
or
xchg
dec
orl
mov
sbb
xchg
iret
mov
int
imul
add
mov
and
cmp
adc
enter
fdivl
sahf
adc
sbb
push
movsb
ret
imull
mov
inc
aam
stos
xor
in
jno
adc
xchg
in
push
sub
jae
cmp
cmp
xchg
call
sbb
sti
adc
std
sbb
sbb
sub
scas
dec
lea
xchg
lods
nop
cmp
mov
inc
int3
ja
add
xchg
aam
mov
xchg
and
dec
int3
or
popf
ja
mov
xchg
add
inc
adc
call
and
or
es
int
mov
fnstenv
scas
and
int3
mov
loope
cmp
xor
xchg
sbb
and
loopne
divb
cltd
push
xchg
dec
repnz
jno
cmp
lock
jge
xor
insl
mov
push
das
mov
push
cmc
jmp
clc
cmc
xchg
adc
mov
mov
pop
dec
scas
sarb
outsb
pop
movsb
test
mov
jo
or
fildll
add
push
jg
imul
push
dec
lock
jg
mov
out
js
mov
mov
mov
xor
mov
mov
lea
jmp
push
cltd
ss
imul
pop
mov
mov
pop
push
lods
aad
mov
ja
push
xor
shlb
inc
xchg
xchg
add
add
and
aad
jne
add
test
dec
das
clc
stos
sbb
mov
inc
inc
jnp
inc
inc
xchg
mov
loope
les
xor
inc
addl
dec
loope
stos
or
jnp
iret
cmc
pushl
cmpsl
cmp
sub
divl
stos
xchg
bound
test
sub
stos
movnti
mov
pop
xor
shlb
punpckhbw
pop
ljmp
xchg
pop
scas
mov
cmpsl
push
arpl
push
out
cld
adc
out
add
arpl
push
aam
jne
pop
outsb
jp
mov
push
cwtl
jg
repnz
xor
pop
jecxz
jmp
imul
mov
xchg
popa
mov
imul
mov
stc
add
shll
mov
mov
inc
loope
pop
xlat
cld
lahf
sub
xor
add
add
mov
xchg
das
in
js
sub
int3
mov
push
jp
ljmp
xor
mov
pop
add
push
stos
int
fcmove
fisubrl
xor
or
pop
addr16
inc
jbe
aad
mov
push
insb
icebp
fs
sbb
and
sbb
js
out
xchg
dec
adc
push
adc
mov
mov
inc
mov
les
pushf
call
hlt
sub
pop
jp
out
sbb
fisttpll
mov
adc
xlat
fs
sbb
cli
icebp
dec
pop
movsl
sbb
insl
popl
adc
das
jo
xchg
outsb
sbb
stos
dec
add
arpl
or
mov
push
push
sbb
mov
xchg
test
mov
neg
pop
stc
xchg
push
lcall
out
jns
data16
mov
mov
push
fidivrs
inc
std
pop
xchg
ss
sub
mov
int3
cmpsb
sahf
into
fwait
fwait
push
mov
sub
inc
xor
outsb
cmpsb
sbbb
pop
jo
jecxz
lret
pop
sub
movsb
out
movsb
jns
push
xchg
out
nop
dec
sub
or
jp
es
ret
xor
je
push
pushl
adc
and
xchg
js
stos
mov
lods
test
cmp
and
sti
dec
inc
xor
inc
out
fsubrl
icebp
dec
adc
sbb
into
sub
ficompl
ret
out
jne
jae
xchg
and
push
jl
inc
and
decl
int
test
pop
mov
lods
cmp
cmpsl
xorl
or
inc
stos
add
test
in
adc
jnp
cmc
ret
and
fisttpl
rclb
popf
filds
lret
in
ficoms
inc
push
xorl
inc
sahf
popf
dec
push
cmp
dec
add
push
aad
cwtl
pop
rorl
sbb
or
lods
ret
add
mov
pop
mov
cmpsl
or
imulb
mov
dec
mov
fiadds
loopne
jg
xor
shlb
rorb
in
push
xchg
jb
or
shrl
xchg
sarl
xchg
fs
lds
push
scas
dec
mov
mov
test
aas
scas
xchg
inc
movb
add
sub
mov
lock
jne
ficoml
aas
js
or
hlt
data16
jg
jmp
stc
or
repnz
fsubrs
pop
inc
and
lods
add
ror
insl
sar
mov
push
popf
stc
adc
inc
mov
jbe
cmpsl
jns
mov
mov
mov
paddsb
jns
sbb
lods
rcrb
test
outsl
jb
lods
sbbl
call
insl
push
sub
pop
js
cmp
hlt
rolb
fadds
fsub
add
insl
mov
jo
aas
pop
mov
imul
sbb
sub
cmp
dec
scas
es
xchg
out
pop
dec
lea
adc
xchg
mulb
test
sarb
xor
push
pop
jmp
fbld
jns
mov
jbe
rorb
sbb
mov
xlat
mov
pop
push
push
sbb
jne
fwait
testl
into
jns
jl
jmp
push
divl
mov
test
jns
ljmp
lret
mov
adc
cmp
test
jge
scas
int3
xchg
jno
push
leave
jg
popf
ss
test
icebp
pop
nop
adc
lea
psubb
clc
mov
stos
pop
scas
push
sbb
jbe
add
leave
jno
xchg
imul
mov
ljmp
dec
push
pop
loop
and
aad
lahf
addr16
sub
lea
pop
mov
push
mov
dec
jmp
mov
and
enter
mov
pusha
xchg
call
sub
push
sub
js
xchg
sar
rolb
lcall
inc
data16
and
es
adc
xor
out
fdiv
inc
fnstenv
daa
cwtl
adc
xlat
fmulp
movsl
cmp
push
push
cmpb
mov
jmp
mov
push
cwtl
fwait
xlat
pop
adc
cmp
setg
mov
push
nop
outsl
cs
iret
es
test
je
push
cltd
xchg
mov
aas
adc
cmp
les
mov
pop
push
pop
loopne
fsubl
popf
pop
lret
add
mov
pop
pop
xor
movsl
repnz
loop
jl
mov
jp
mulb
jnp
pushl
mov
add
jecxz
int
cmp
mov
ror
dec
jbe
cmp
inc
adc
out
stos
mov
pop
mov
scas
arpl
xchg
xlat
lret
test
xor
addr16
adc
pop
inc
not
pop
outsb
pop
fdivrp
jmp
mov
aas
cmpsl
lods
ret
sbb
call
ss
test
add
rorl
sti
jo
jns
adc
ljmp
ljmp
mov
jno,pt
push
out
add
mull
pop
jp
add
and
jp
scas
and
or
pop
js
xchg
imul
inc
sarb
imul
xor
push
std
inc
push
loopne
das
je
int
loopne
out
sub
loop
sbb
jg
scas
imul
pop
mov
sbb
sti
xchg
lea
jbe
movsl
mov
sub
jge
mov
aad
sub
sub
sarl
push
inc
jno
or
bound
mov
mov
mov
mov
add
adc
fdivs
push
mov
add
cmpsb
in
push
call
push
sbb
punpckldq
fwait
mov
shlb
in
fdivrl
add
add
sbb
out
xorb
repnz
sbb
or
jmp
cld
jb
mov
mov
fisubrs
cmp
add
add
mov
in
mulb
test
pop
insl
xchg
into
push
js
shr
xchg
and
jg
daa
data16
les
mov
add
adc
enter
jno
ja
clc
and
andl
cmpsb
negl
popa
je
ret
dec
mov
pop
mov
clc
mov
js
lods
in
lods
scas
cmp
repnz
dec
scas
inc
or
std
push
or
inc
sub
repz
cmp
ss
and
jns
out
aad
sub
jecxz
std
xor
sbb
pop
adcb
loop
icebp
pusha
aam
jmp
mov
cmp
mov
mov
loopne
mov
movb
add
mov
and
lea
mov
pop
bound
jle
push
scas
pop
bound
pop
call
add
imul
testl
cmp
ficomps
stos
gs
stos
in
lock
jae
cmpsl
push
movsb
ret
mov
pop
cwtl
push
lods
pushf
adc
adc
xor
sub
loopne
je
fwait
mov
je
xchg
or
arpl
cmp
sub
sub
popa
test
xchg
xor
lret
mov
adc
je
mov
int3
test
sub
mov
adcl
push
cli
xor
dec
aaa
inc
jnp
in
nop
sbb
popf
fistpl
nop
rclb
push
mov
scas
rcll
pushf
bound
rol
les
imul
xchg
jo
outsl
cmpsl
pop
ss
into
cmc
jne
out
push
xor
sub
ret
jb
sar
lock
push
sbb
push
mov
loop
or
icebp
fcompl
jg
sbb
push
mov
les
jae
push
clc
mov
cmp
fwait
lods
inc
cmp
cwtl
mov
subl
fdiv
insl
addl
pushf
and
mov
jae
hlt
or
xchg
arpl
or
mov
rol
fisttpl
pop
mov
bound
push
mov
leave
xor
mov
insl
lods
sub
inc
dec
pop
inc
cmpsb
das
dec
dec
pop
push
adc
data16
jge
hlt
lcall
outsb
scas
aas
xor
cmpsl
xchg
data16
xor
mov
dec
imul
aaa
or
push
clc
shlb
push
mov
sbb
or
rcrb
xor
inc
xchg
into
push
push
mov
shll
es
loopne
pop
pop
sub
jb
cmpsl
add
sbb
imul
and
xchg
aas
rcr
sbbb
push
xor
into
cmp
xchg
adc
divb
sti
or
sbb
gs
jae
jmp
mov
out
clc
xorb
and
cmp
adc
les
popl
fsubrs
lods
pop
mov
mov
mov
mov
loopne
push
data16
jno
fadds
lods
cmpsl
dec
ret
into
inc
xchg
xchg
mov
jge
lods
insb
repz
and
or
fmull
add
pop
xor
lods
dec
out
fadds
leave
out
out
ret
loopne
fstl
xlat
pusha
test
dec
push
push
jnp
and
fistpll
in
mov
testl
xchg
fs
or
mov
sbb
repz
shrb
and
inc
stc
add
jecxz
mov
jne
out
inc
push
out
nop
xchg
xchg
add
jne
or
imul
push
insl
stos
subb
jbe
mov
inc
in
pushf
push
mov
sbb
mov
pop
sbb
scas
test
xor
lds
and
mov
lret
push
leave
jb
mov
push
lahf
jno
sbb
mov
cld
dec
aad
add
shll
lahf
cwtl
lret
sub
jl
push
mov
aam
call
mov
clc
adc
outsb
push
cmpsl
ja
int3
aam
sub
dec
pop
inc
pop
mov
jle
mov
rclb
push
outsl
and
loope
xchg
mov
push
adc
xchg
fnstcw
dec
andl
mov
sahf
add
rorb
aaa
rorl
mov
sbb
mov
pop
jno
movsb
arpl
icebp
iret
daa
and
js
fwait
push
out
daa
icebp
push
dec
flds
sbb
add
and
and
out
dec
scas
inc
stc
mov
dec
and
out
mov
test
jle
mov
jne
mov
negb
out
outsl
scas
loope
push
mov
pop
push
ret
add
out
mov
stos
mov
push
in
adc
sti
mov
push
fcoml
sbb
das
clc
in
imul
inc
sub
or
adc
out
adc
enter
pushf
movsb
cmpsb
cmp
jmp
mov
in
dec
incb
mov
imul
push
add
icebp
xlat
and
inc
ficompl
cmp
sbb
push
dec
mov
sbb
jne
test
xor
sub
mov
je
adc
cli
jecxz
sub
jmp
outsb
jle
sub
call
jbe
movsb
out
push
and
ja
inc
in
testb
movsb
push
in
jne
les
cld
sub
rcrb
push
pop
stos
xchg
fmull
xor
pushf
bound
adc
cld
cmp
in
and
xchg
mov
sbb
int
insl
mov
ss
dec
lahf
ja
in
fsubs
adc
sbb
call
pop
push
adc
neg
sbb
cltd
jo
femms
or
loop,pn
xor
inc
xlat
xchg
cmp
insl
mov
mov
sarl
add
mov
hlt
neg
push
xchg
dec
xlat
inc
out
iret
sub
lahf
jno
and
cmp
sub
pushf
mov
fwait
inc
jp
xor
or
into
movsb
inc
fldenv
fwait
push
jnp
lcall
icebp
fcmovbe
add
dec
out
push
rolb
pop
ret
in
pop
fisubs
mov
mov
sbb
pop
adc
dec
lock
arpl
lea
push
adc
stos
mov
adc
icebp
inc
mov
arpl
imul
enter
pushl
mov
fcompl
and
std
inc
jp
shll
jbe
jnp
mov
xor
call
inc
loopne
jb
jae
cmp
pushl
leave
mov
lret
int
roll
in
push
in
mov
iret
jp
ds
push
fists
shll
dec
cld
cli
push
fisttpl
lcall
mov
out
int3
sbbl
out
outsb
push
xchg
pop
incb
lcall
je
mov
stc
das
and
imul
sub
sub
push
loope
adc
repnz
retw
mov
sub
mov
pop
mov
insb
pop
cmp
push
sbb
pop
sub
test
mov
out
js
pop
fiaddl
enter
fdivl
les
cmc
test
aad
xchg
xchg
xchg
enter
sub
lods
mov
xchg
stos
push
jg
cmp
nop
fbld
ret
fs
imul
push
mov
pxor
enter
mov
dec
xchg
cli
shlb
xchg
daa
pop
push
js
ds
xchg
bound
inc
jge
imul
pushf
jl
jne
cmp
pop
mov
es
imul
cltd
out
cmc
mov
cmp
js
add
fisubl
cmp
add
fildll
mov
jne
and
sub
jmp
icebp
pop
daa
push
loope
push
push
out
scas
je
inc
pop
add
popf
mov
sub
dec
push
xchg
loopne
icebp
pusha
shlb
dec
out
push
lret
dec
inc
mov
leave
cld
test
test
push
jg
or
adc
and
ljmp
mov
cmp
mov
clc
jnp
mov
mov
jmp
add
in
cmp
fsubl
adc
lods
shl
xchg
xor
push
scas
xor
sub
dec
out
aam
std
pusha
sub
repz
je
push
sbb
xlat
lea
dec
je
in
add
pop
bound
mov
mov
icebp
sub
dec
adc
mov
jle
and
pusha
fimull
inc
cmp
and
cwtl
lods
fidivs
inc
ffreep
pop
mov
fdivr
aas
loope
inc
adc
mov
movsb
in
popa
push
mov
ds
fwait
sarl
and
adcl
scas
inc
mov
lock
jo
xor
rorb
push
and
stc
in
adc
test
inc
cli
andl
pop
fwait
js
fisttpll
lods
les
cld
inc
iret
jns
and
call
test
fidivl
mov
cmpsb
dec
into
mov
ficomps
fucomp
aas
jmp
rclb
adc
pop
inc
mov
xor
push
mov
xchg
outsl
aas
jmp
fidivl
pushl
dec
imul
call
ss
or
jbe
xchg
jge
sahf
int3
mov
enter
fistpll
cli
adc
je
aam
jge
ds
out
aas
loopne
push
popa
movups
insl
pop
notb
outsb
jl
pop
xchg
push
jns
xchg
sahf
jl
xlat
push
outsb
adc
sbb
ljmp
aas
arpl
cmp
loopne
jno
xor
repnz
cmp
mov
jo
scas
scas
adc
sbb
xchg
es
outsb
pop
jg
scas
fsubl
mov
jecxz
mov
frstor
in
cmp
cltd
aaa
push
cmp
gs
adc
cmp
in
in
and
shll
aam
test
mov
xorl
int
push
mov
jp
push
cmp
ja
add
pop
adc
mov
jo
popf
xor
cli
lret
pop
aad
pop
pop
out
xchg
cmp
pop
jo
mov
pop
jmp
adcb
pushf
dec
dec
sbb
mov
add
nop
or
inc
push
iret
mov
push
fs
pushf
add
xchg
lods
ja
insl
sbb
rcrl
insb
jg
cmp
in
daa
ret
lret
clc
out
adc
cli
hlt
push
sbb
xchg
cmp
sbb
cmp
dec
iret
cmp
push
sbb
lret
es
xchg
xchg
mov
pop
test
fcoms
xchg
loope
inc
lock
push
fdivs
stos
data16
addr16
movsl
adc
and
faddp
cmp
push
mov
push
fisubrs
jne
notb
pop
mov
ss
push
popa
pop
or
xor
sub
push
and
inc
or
push
mov
faddl
sarb
adc
inc
out
cmp
ret
sbb
jbe
cltd
sbb
and
repz
inc
push
arpl
mov
hlt
push
inc
or
inc
push
dec
sbb
push
cmp
xor
in
shl
sbb
xor
jne
lret
adc
stc
stos
fucom
lds
test
sbb
xabort
in
ret
sub
inc
cltd
pushf
lods
jp
pusha
pusha
sub
pop
pop
ret
aas
mov
pavgw
ss
inc
es
cmp
and
divl
cs
add
dec
mov
or
loop
mov
lea
dec
jmp
lret
push
pop
jg
jno
jnp
mov
cltd
sarb
mov
mov
test
outsb
mov
xor
out
push
pop
lret
in
popa
insl
cld
jb
dec
aaa
leave
mov
xchg
sub
inc
pushf
jne
xor
jns
in
dec
popf
les
fmul
les
xor
mov
add
jnp
stc
mov
add
fistpll
inc
adc
fdivp
sbb
adc
dec
mov
sub
inc
fstl
aam
xchg
cmpsb
mov
stos
mov
pop
rorl
ds
xchg
or
push
sahf
fsubl
or
mov
mov
jle
adc
mov
xchg
inc
mov
dec
and
icebp
lods
adc
jnp
adc
and
in
in
stos
xor
fdivrs
adc
or
repnz
fisttpl
sub
inc
xor
cltd
mov
jns
mov
sarb
xor
std
xchg
mov
or
pushf
pop
gs
dec
xlat
insb
test
pop
inc
pop
mov
stc
fcmove
jnp
xchg
pop
inc
stos
and
aam
andl
sub
mov
push
adc
push
ljmp
fldl
rcll
sub
ja
xlat
lds
inc
addr16
mov
cmp
out
xchg
jne
push
scas
dec
push
mov
and
outsb
cltd
rorl
ficoms
xor
push
or
mov
daa
nop
pusha
add
cmpsb
adc
xlat
outsb
and
or
enter
mov
out
cmpsb
xchg
addr16
out
mov
das
ljmp
sub
or
cmpsl
mov
out
loope
add
lea
sahf
outsl
adc
out
push
adc
pop
inc
xchg
xchg
push
sbb
bound
and
sub
sbb
jge
push
je
testl
mov
into
mov
mov
mov
cmp
out
cs
adc
push
dec
inc
shl
mov
xlat
sub
test
push
jmp
push
cs
call
fistl
stc
sbb
push
mov
pusha
pop
pop
push
outsl
sar
mov
int3
xor
nop
data16
pop
nop
mov
shlb
cmp
jbe
adc
inc
jbe
pop
sub
movsl
dec
inc
stos
add
int
rcrb
incl
mov
das
add
scas
nop
add
daa
arpl
lods
repz
adc
dec
enter
inc
lret
pop
push
adc
sahf
mov
fwait
lock
jne
xor
ret
gs
in
rcl
in
xor
aam
xor
lods
stos
sub
sub
imul
inc
movsl
leave
out
lret
adcl
jp
jl
cmp
mov
fisubrs
int3
bound
jnp
or
movsl
inc
pop
add
icebp
mov
cmp
fdivs
pop
je
ja
cmp
pusha
cmp
sub
mov
lahf
insb
pop
add
mov
cltd
jbe
or
sub
std
test
outsl
or
xchg
cld
push
mov
hlt
or
arpl
cwtl
push
and
repz
mov
inc
adc
cmp
ljmp
lcall
mov
xchg
ret
push
aam
pop
lret
jecxz
dec
in
testl
mov
and
popa
and
test
add
iret
mov
testl
pop
mov
adc
push
sbbb
adc
mov
push
mov
xchg
jae
mov
inc
dec
dec
adc
jmp
repnz
mov
in
push
mov
sub
adc
fisubrl
jle
xor
sub
cmp
mov
stos
push
push
notb
jge
sbb
mov
ret
or
aaa
mov
lret
scas
jge
pusha
shl
and
fwait
aas
cltd
pop
cmp
int3
fs
cmpsb
cmp
insb
or
outsl
stos
mov
punpckhbw
push
cmp
cmp
daa
cmp
stos
icebp
rcrb
jne
sub
inc
xchg
std
hlt
sbb
fistpll
and
lock
bound
movsb
iret
insl
push
push
jmp
jl
push
xchg
or
and
pop
imul
rolb
ret
cmp
test
aam
push
and
add
mov
mov
out
cltd
jge
stos
mov
push
sbb
daa
cwtl
fistps
fisttpll
cwtl
dec
jns
and
mov
ja
and
jne
mov
movsb
sbb
inc
push
jae
dec
pop
pop
mov
jb
or
xor
mov
xor
aam
daa
mov
repz
movl
pop
mov
xor
mov
jle
ror
dec
call
push
inc
cmpl
adc
loop
sbb
rcrl
test
adc
mov
imul
mov
mov
cs
dec
add
in
sub
es
xchg
jecxz
enter
fs
rorl
fwait
notb
xchg
repz
imul
enter
push
sti
out
lahf
jbe
ss
or
jle
mov
jno
xchg
add
call
mov
int3
dec
and
mov
mov
movsl
dec
jno
sbb
jae
jg
add
aas
jecxz
lods
outsb
or
adc
cwtl
ror
fmull
dec
and
xlat
and
adc
lret
bound
sbb
jmp
jo
jg
movsl
aad
in
jns
xchg
fstl
or
pop
ljmp
outsb
dec
rorl
mov
mov
js
fs
popa
ds
dec
xor
jecxz
in
adc
rep
xchg
cmpb
sbb
pop
fdivs
cmpsb
inc
je
or
in
loopne
hlt
cs
subl
jbe
mov
out
pop
push
fnstsw
out
fwait
cmp
adc
sbb
lret
or
data16
clc
xchg
shlb
jnp
lahf
pop
repnz
lds
fmull
stc
fdivrl
jg
push
xorb
fnsave
pop
adc
ficoml
mov
dec
rorb
lret
dec
or
bound
out
sub
ss
in
sbb
add
icebp
adc
dec
jl
std
cwtl
bound
punpcklbw
jecxz
dec
aaa
mov
mov
and
lret
loop
sub
pop
pop
stc
cmp
imul
rorb
and
test
mov
inc
js
xlat
into
stos
sub
jg
mov
mov
cmpsb
jae
jmp
test
mov
mov
sbb
mov
dec
popa
jle
call
jno
jge
test
sub
test
inc
inc
pop
mov
push
jmp
fwait
pop
dec
cmp
hlt
jns
xor
ret
outsl
in
mov
leave
mov
cmp
rorb
push
iret
stos
lea
ljmp
in
movsb
push
rolb
pop
shlb
test
jp
jns
pop
shlb
enter
sbb
pop
xchg
clc
xor
xchg
mov
ss
clc
mov
jns
sub
movsl
in
rcrl
push
aas
icebp
cmpb
or
dec
add
lds
ss
mov
cmp
cmc
mov
hlt
push
xchg
mov
pop
push
out
mov
inc
inc
xor
repz
mov
stos
cmpsb
sub
rclb
push
out
ja
call
test
push
leave
inc
jmp
mov
imul
mov
shr
jg
inc
inc
fildl
pop
sahf
adc
xchg
popf
mov
cmp
dec
pop
adc
leave
sbb
jg
sbb
enter
lret
vhaddps
in
cs
xlat
int
out
mov
imul
add
push
mov
repz
pop
dec
xor
cmp
das
dec
cmp
mov
push
arpl
adc
or
cld
pop
int3
ss
mov
lea
fstps
cmp
jmp
adc
clc
outsb
push
loop
lcall
sbb
xlat
imul
pop
lock
dec
divps
pop
lret
or
mov
dec
sahf
daa
adc
jno
mov
in
inc
jl
xor
mov
out
xlat
or
mov
fimuls
mov
out
je
loopne
cmp
mov
bnd
and
push
inc
inc
mov
xchg
xchg
mov
lret
fidivrl
push
sub
loopne
inc
dec
jmp
jnp
jns
dec
subb
sbb
cmp
jnp
push
cwtl
iret
stos
lock
mov
shll
cmp
insb
ds
sbb
rcrb
js
mov
sub
inc
cmp
rol
inc
mov
jbe
movsl
fwait
mov
pop
sar
mov
into
fisubs
ret
and
rcl
dec
pusha
mov
push
inc
mov
adc
mov
and
mov
dec
xchg
jb
adc
sub
push
fists
fsubl
mov
jmp
push
test
iret
pop
testb
pop
lods
adc
dec
out
rcl
jl
mov
inc
in
push
sbb
mul
lds
sarl
add
xchg
jb
pop
fld
int
pop
lock
dec
shll
test
sub
dec
decb
stos
aad
mov
mov
mov
popf
add
data16
mov
test
xlat
imul
mov
mov
sbb
or
jo
mov
push
cmpsl
adc
jae
inc
add
addl
mov
xor
adc
inc
addl
jmp
stc
cmp
pop
ds
and
xorb
mov
and
adc
pop
call
mov
mov
jle
mov
shrb
xor
in
fcomps
fwait
gs
stos
jg
fstl
inc
bswap
lret
sar
psubsb
fildll
das
sub
sub
sbb
inc
sarb
mov
mov
pusha
mulb
out
cmp
jno
mov
pushf
push
repnz
adc
sub
je
popa
mov
push
aas
jmp
lret
or
out
jb
icebp
push
outsl
and
xchg
xlat
sbb
push
in
push
dec
lea
lods
jp
jmp
mov
mov
push
and
ss
jl
mov
inc
sti
ljmp
xor
rcll
cmpsb
pop
sbb
pop
sub
cmp
sbb
in
and
insl
rcll
jo
xchg
sbb
inc
sbb
or
push
or
fdivr
xor
xchg
sub
in
out
jns
and
add
dec
ret
inc
sub
pop
push
or
in
sbb
mov
pop
sbbl
sbb
jno
dec
sti
fisubrs
js
scas
pushf
adcl
test
fsubr
clc
mov
out
leave
repnz
lea
enter
ficoms
inc
sahf
sbb
int
push
xor
bound
ds
inc
add
out
xchg
mov
pop
imul
or
aad
dec
cmpsl
xorl
jbe
flds
stos
cs
cli
jne
outsl
jnp
movsb
incb
lcall
mov
scas
xlat
xor
xchg
mov
std
add
test
mov
sahf
add
adc
pop
mov
push
cwtl
jne
add
xor
push
repz
repnz
dec
jmp
push
cmp
dec
and
jbe
pop
cmp
sbb
xchg
mov
mov
ss
scas
fisubl
mov
repnz
push
push
push
sbb
insl
mov
cmp
data16
fstpt
jnp
je
pop
mov
inc
fldcw
mov
mov
jb
insl
push
nop
inc
inc
mov
fldcw
ss
adc
lods
mov
sbb
xor
inc
xor
inc
and
test
push
lret
cmc
and
xlat
mov
gs
imul
lock
push
inc
dec
adc
sub
pop
lea
cmpb
dec
inc
mov
aad
and
fiaddl
stc
inc
jo
cmp
jb
testb
xcrypt-ecb
cmpsl
dec
imull
dec
in
call
cld
mov
xor
jo
xor
cmp
in
std
push
pop
fsubl
fsqrt
add
push
adc
test
add
cli
fsubs
and
mov
sbb
cwtl
jns
jae
sub
es
lods
mov
fbld
mov
aaa
jb
push
lea
fistpl
js
or
mull
mov
lock
cmp
cwtl
pusha
mov
xchg
adc
mov
dec
xchg
push
jg
dec
sbb
sub
mov
adc
mov
inc
and
jne
test
fsts
cwtl
idivl
inc
lock
outsb
hlt
push
mov
sbb
mov
xor
fwait
sub
pop
in
fstps
fimull
fildll
sbb
dec
push
inc
pop
loopne
int3
sahf
cmp
jg
call
cmc
mov
jne
adc
fdivrl
and
test
push
adc
ror
dec
mov
xor
sahf
mov
xor
mov
dec
imul
or
xor
fnstenv
dec
mov
mov
sbb
xchg
loope
je
cmpsb
mov
outsb
cmp
ss
push
dec
push
mov
cmp
mov
xchg
jp
in
jmp
push
add
data16
subb
xor
fs
sub
cmp
add
or
stos
movsb
sarb
fcmove
xchg
mov
adc
testb
jae
int
inc
movsb
mov
add
jns
jno
ret
es
shl
inc
cwtl
mov
mov
sbb
fcmovnu
sbb
xor
rcll
fsubrs
loop
test
mov
adc
mov
add
negl
movups
sbb
test
enter
imul
and
inc
imul
cmpsl
shr
stos
add
in
mov
repnz
pop
rcrb
jae
das
rol
int
in
xor
ljmp
and
and
hlt
aad
ljmp
pop
pop
push
push
push
fadds
in
stos
arpl
loope
mov
sar
inc
aam
stos
and
cmp
shrl
push
cs
in
out
mov
pushf
push
pop
push
ja
mov
or
xor
adc
sub
arpl
arpl
orb
aas
mov
and
scas
pop
mov
test
jbe
jbe
jmp
incl
cmpb
xchg
jecxz
ret
push
sarb
push
or
jne
and
mov
test
jge
push
sbb
pop
adc
sub
gs
lods
xchg
test
nop
int
ret
mov
push
adc
scas
shrb
in
aad
mov
push
scas
call
test
ret
and
shrl
out
addr16
cmpsl
inc
inc
insl
mov
sti
dec
mov
ror
mov
sub
xor
movsb
sub
and
push
iret
or
sbb
fsubs
lahf
sub
mov
inc
pop
jb
mov
insb
pop
fisttpll
mov
jne
cmp
push
fsubrp
scas
sbb
pop
int3
out
bound
inc
negb
mov
xchg
std
add
int3
inc
mov
or
aam
arpl
inc
into
pop
loop
ficomps
scas
stos
xor
mov
mov
enter
setge
xchg
popf
sub
sub
xchg
cmp
js
dec
sti
dec
xor
cmp
pop
inc
mov
mov
xchg
lahf
pop
mov
loop
nop
dec
adc
popa
dec
sub
insl
clc
scas
ret
cmp
insb
div
lds
daa
adc
aaa
push
lea
enter
sbb
dec
test
pop
aaa
fnstsw
pop
cwtl
jae
fiadds
lret
cmp
mov
mov
mov
add
inc
jl
push
movsl
lock
jbe
mov
daa
andb
pop
ss
mov
inc
inc
je
fisttpll
inc
lods
inc
and
lea
sub
dec
mov
or
sub
pop
hlt
inc
shlb
mov
pop
stc
leave
outsb
cmp
mov
arpl
ret
inc
ss
pop
lret
jns
popf
jno
out
inc
push
shll
mov
adc
orl
cmp
add
mov
fs
fsubr
mov
xrelease
pop
lds
add
outsl
cli
sbb
lcall
inc
ja
inc
push
scas
mov
clc
lods
xor
fwait
mov
ds
jp
and
mov
pop
or
xchg
fcoml
int
dec
cld
subl
repz
mov
stc
mov
subb
add
add
cltd
je
xor
cwtl
lods
inc
push
sub
loope
xchg
in
xor
and
push
mov
mov
inc
out
fistl
lret
dec
jle
and
xlat
gs
mov
scas
repnz
lds
push
psraw
adc
subps
push
aam
aas
loop
jo
and
sbb
lret
sti
jmp
jl
xchg
pusha
stos
push
or
daa
hlt
fwait
mov
mov
and
sub
sahf
ja
xlat
cwtl
push
dec
repz
inc
ljmp
lea
add
and
mov
in
adc
cmpsb
lea
inc
push
xchg
pop
stos
or
push
sti
out
aad
and
outsb
out
inc
js
mov
movsb
mov
mov
and
mov
or
inc
push
jl
js
xor
or
pop
jl
sub
dec
sub
xchg
push
push
mov
or
sahf
mov
push
cmc
adc
push
lock
aad
add
iret
cmpsl
fbstp
mov
pop
loopne
lea
daa
es
pushf
push
cmc
out
mov
es
push
das
cmpsl
mov
xchg
nop
mov
sar
lods
mov
mov
popf
rcll
cmp
and
ret
movsb
roll
insl
xor
sbb
fsts
push
pop
imull
iret
lds
inc
jg
and
and
pop
xchg
cmp
sub
sbb
popa
fsubrl
scas
jae
sbb
aaa
iret
ret
push
shrb
xor
fsts
or
push
ret
ret
fists
stos
add
pop
stc
jmp
fdiv
fs
inc
xchg
test
mov
mov
outsl
xchg
hlt
loope
mov
pushf
arpl
pop
pusha
imul
or
shll
ret
mov
xor
sub
lcall
in
popf
shlb
add
adc
xlat
push
scas
mov
ret
lcall
xchg
pushf
pop
orb
and
scas
jo
movsb
mov
xchg
test
fstpt
daa
xchg
imul
cmpsl
in
cltd
adc
arpl
bound
xchg
outsl
testb
add
mov
sbb
sahf
js
mov
nop
out
and
int
xchg
jge
aam
fadds
popa
jnp
pop
push
sub
fnstsw
inc
pop
in
jmp
lret
xor
out
cmpsl
sub
ficomps
add
mov
rolb
scas
fsubrl
dec
push
negl
xchg
sarl
lds
ret
sub
js
lret
sahf
cs
lds
cmp
push
push
xchg
xchg
xor
bound
fincstp
fld
stos
xchg
clc
sbbl
pop
sbb
in
xchg
adc
in
and
pop
mov
jl
xor
xor
cmpsl
in
push
test
test
lods
lcall
lcall
sub
jne
inc
add
ds
and
fs
insl
pop
mov
xor
and
jbe
or
sbb
cmpsl
push
lret
pushf
mov
xor
jnp
dec
push
xchg
loopne
jbe
mov
pop
mov
lea
loop
aaa
pop
fdivs
inc
fistl
leave
in
mov
dec
inc
lods
je
lea
cmp
mov
xchg
push
fisubrs
xchg
mov
and
loop
into
test
das
lods
xchg
jge
sahf
mov
dec
add
fadds
sbb
pop
push
push
js
pop
fsubrs
shl
in
xchg
in
mov
aaa
add
sub
xor
sbb
jns
cmp
fwait
testl
fiaddl
fsubrs
fistps
aas
add
lahf
out
lds
jb
mov
xor
cmp
fisttps
xchg
loopne
xchg
aam
and
mov
pop
or
rcrl
dec
jecxz
mov
das
cwtl
sbb
aaa
in
jl
addr16
add
push
xchg
repnz
inc
out
add
xor
sarb
hlt
inc
inc
mov
pusha
ds
popa
and
cmc
ja
jo
xor
mov
outsl
sbb
jbe
push
mov
call
cmp
ds
sub
pop
out
sbb
imul
lret
js
inc
cmp
or
xlat
pop
pop
pop
push
mov
xor
push
jns
in
in
pusha
daa
pop
pop
push
push
dec
adc
out
test
shrl
push
mov
push
inc
pushf
gs
mov
cs
pushaw
je
ja
dec
and
cmp
jmp
js
inc
rol
mov
icebp
rorb
add
repz
cmp
and
mov
xor
mov
into
push
xlat
ret
fs
iret
fisubs
outsl
push
jno
cmp
inc
mov
mov
cmpsl
mov
in
cmp
xor
movsb
xor
gs
movsb
not
fisttpll
adc
test
js
das
mov
mov
cmpsb
sub
ret
xchg
mov
xor
mov
or
pushf
mov
loope
int3
pop
cwtl
je
xchg
pop
adc
lret
jg
push
or
pop
dec
add
cmp
int3
jge
add
out
lcall
fisubrs
jmp
or
divl
xor
imul
xchg
xchg
rcrl
inc
fnstenv
pop
call
inc
incb
roll
cli
flds
incl
xchg
pop
mov
pop
scas
repz
mov
scas
cmpsl
push
movsb
mov
outsl
hlt
je
add
inc
cmpsb
lret
and
cmp
mov
pop
jge
mov
jle
xchg
mov
daa
hlt
xor
mov
add
jp
sbb
adc
mov
sub
and
and
cli
int3
cmc
inc
lret
mov
jg
bound
inc
ja
pop
inc
push
lahf
pop
out
sub
xchg
cmpsl
jbe
fidivl
int3
jmp
mov
pop
pop
mov
or
fcmovb
jl
xchg
addr16
add
lret
mov
and
loopne
cld
mov
sbb
out
cmp
push
cs
jmp
addb
mov
lahf
xchg
aaa
popa
arpl
and
pop
imul
pop
into
xor
xchg
mov
ret
xchg
xchg
add
mov
mov
xchg
pop
push
xchg
mov
xorb
in
shlb
lea
mov
shl
jnp
cmp
int3
icebp
outsb
je
es
mov
push
mov
ja
jmp
jp
stos
or
xchg
icebp
jge
inc
adc
insb
mov
les
push
mov
out
push
dec
out
pop
inc
mov
mov
test
cmc
movsb
in
sbb
sbb
push
xchg
out
push
out
or
pop
push
ret
mov
aad
pop
inc
inc
jg
jb
mov
fsubrl
and
dec
mov
lods
xchg
pop
loopne
gs
and
mov
int
lods
es
mov
mov
test
mov
in
outsb
je
insl
stc
xchg
fs
or
push
cmp
clc
dec
fldenv
loop
dec
cmc
mov
xchg
in
lods
push
enter
into
cli
sub
adc
jns
pop
xor
scas
jnp
push
jne
add
push
cmp
pop
les
das
aam
jg
nop
fdivrs
mov
and
stos
stos
push
fs
movl
fcomps
sbb
popf
popa
xor
jl
shrl
fsubrl
cmp
out
loop
dec
sbb
fisubl
add
icebp
cmp
jb
std
xchg
and
jae
fwait
jmp
pop
ljmp
ret
cld
addr16
inc
sub
jae
sub
insl
leave
add
and
leave
testb
ret
push
and
push
cwtl
dec
add
adc
xor
sbb
push
insl
cs
lea
ud0
scas
insb
std
mov
pop
xor
jle
lods
mov
test
ds
adc
in
adc
adc
call
sbb
add
adc
mov
aad
fisttpll
insb
repnz
add
jp
adcl
cmc
pop
stos
repnz
cmpsl
mov
mov
dec
js
ljmp
or
es
sbb
fmuls
jg
cmc
cmpsl
xor
inc
out
mov
insb
enter
fwait
cwtl
jg
out
push
mov
cmp
cltd
in
movsl
cmp
loope
push
mov
adcb
push
call
dec
or
fildl
fsubrl
andl
or
mov
jp
cmp
les
stos
lods
dec
jb
hlt
imull
push
xor
mov
mov
fbstp
cmp
loopne
repnz
movsb
cld
add
arpl
or
adc
sub
lds
cltd
mov
xchg
cmp
mov
or
fisubrs
push
mov
push
and
sub
jb
or
mov
cmp
out
out
repnz
add
imul
mov
pop
jp
adc
and
adc
shlb
inc
lret
jns
mov
dec
pop
sbb
pushf
push
pop
xor
xchg
pop
inc
adc
pop
or
xchg
xchg
ret
cld
sbb
aad
repnz
int3
mov
pop
incb
repnz
dec
stos
icebp
sub
or
in
sbbb
ja
xor
inc
and
jmp
mov
ja
xor
adcb
xchg
bound
movl
shl
pop
jmp
adc
adc
ja
sub
mov
out
mov
mov
jne
fcmovnu
xchg
sub
stos
nopl
call
orl
popa
std
add
pop
xorl
cmp
lds
test
shr
out
data16
loope
test
loopne
scas
lock
cld
xor
ret
repz
jo
push
das
add
daa
sbb
cmp
fistpll
scas
rcrl
jb
adc
shrl
leave
pop
inc
lahf
out
aad
in
imul
dec
sub
orl
dec
cmpsb
sbb
and
in
inc
push
rcrl
dec
jb
fdivs
inc
inc
mov
shlb
jecxz
imul
jbe
mov
je
dec
arpl
inc
sub
jge
inc
cltd
mov
push
hlt
stos
push
jb
mov
aam
mov
jmp
cmp
fidivl
mov
ljmp
mov
mov
inc
mov
adc
ret
fldcw
jns
insl
aas
inc
lock
and
adc
and
push
stos
aad
inc
pusha
mov
push
xor
and
mov
pop
cmp
push
rcll
ja
and
lahf
jae
add
repnz
sub
sub
lods
nop
and
cmpsl
bound
shll
call
iret
rorb
cmp
xchg
sahf
into
and
repz
decb
adc
sub
push
in
mov
lret
and
adc
jle
lcall
cs
dec
sub
xchg
outsb
cli
mov
inc
int3
fdivl
xchg
or
stc
xlat
xchg
add
xchg
jno
push
leave
insb
inc
test
push
jg
jae
and
out
adc
ret
cmp
adc
std
add
xchg
nopl
mov
test
int
mov
xor
insl
or
jnp
int
mov
mov
push
mov
repnz
adc
add
jae
ret
rcrl
jns
jae
mulb
dec
mov
adc
add
mov
test
loope
mov
mov
stc
adc
xor
and
push
pop
mov
ja
clc
in
hlt
sbb
dec
sbb
cwtl
xchg
pop
enter
inc
pop
aaa
cltd
cltd
sub
pop
inc
dec
add
cmpsl
jecxz
cmp
or
movsl
inc
out
int
in
fmull
sti
sub
jmp
inc
mov
xchg
sbb
mov
xchg
xor
add
jle
repz
pop
mov
push
or
hlt
mov
dec
dec
lcall
fnstsw
repz
mov
repz
lea
fldcw
loopne
aam
mov
jb
into
orl
in
jmp
cmp
and
sbb
std
dec
xchg
push
pop
xchg
mov
test
mov
sarb
pop
and
fsubrl
std
push
mov
dec
cld
and
subl
push
sub
mov
or
adc
jnp
insl
dec
mov
aas
lods
aas
adc
aam
loopne
aam
inc
push
call
nop
mov
lods
pop
outsb
cmp
dec
or
xlat
ret
cwtl
sbb
push
iret
dec
push
xchg
pop
jmp
inc
sti
popf
sbbl
and
jge
sub
dec
or
out
or
mov
fincstp
push
testl
jp
int
xor
jg
mov
push
xchg
jmp
aaa
xor
hlt
into
mov
sub
into
inc
sbb
mov
lahf
sarl
and
xor
fdivrl
fistpl
mov
sbb
jo
lods
add
jmp
xchg
push
popf
das
sbb
outsl
dec
jno
jns
cmp
icebp
out
cmpb
push
adc
insb
mov
lahf
loopne
bound
pop
stos
adc
test
cmpsl
stos
arpl
cmp
sti
mov
movsl
lea
and
and
jmp
lcall
xor
roll
inc
fldl
icebp
test
call
and
cmp
cmpsl
mov
jne
aas
mov
sbb
insl
xchg
pushf
out
xchg
enter
jge
dec
fstpl
fldenv
lahf
sahf
cmpsl
cmp
mov
mov
push
cmp
mov
jns
and
call
daa
or
jle
es
cmp
scas
and
mov
lods
call
les
int
ror
jecxz
sbb
rorl
or
aam
andb
push
add
inc
xor
cmp
ljmp
adc
xchg
add
jmp
aas
stc
inc
hlt
and
sahf
inc
int
in
push
outsb
jns
in
fnstenv
push
or
daa
notb
imull
pop
mov
mov
stos
outsb
inc
mov
jecxz
push
add
fdivl
xor
call
xchg
in
lods
div
xchg
cmp
pop
pop
sti
mov
icebp
out
mov
data16
xchg
sub
int3
sbb
pushf
cmp
or
inc
cmc
jecxz
push
imul
iret
clc
fildl
sub
push
rcrl
xchg
testb
jle
inc
push
add
cmpl
cmp
xchg
lret
sub
mov
inc
fsubs
shl
mov
popl
push
in
xchg
fucom
push
jle
sahf
mov
enter
mov
dec
divl
sbb
xlat
aad
idivb
sub
xor
inc
out
or
adc
inc
icebp
sbb
mov
aam
cwtl
ljmp
sbb
pusha
mov
dec
jmp
inc
mov
mov
mov
repnz
lods
mov
inc
push
inc
or
stc
mov
cmpsb
add
or
mov
xchg
mov
inc
or
mov
or
loope
loop
inc
xchg
bound
aas
xchg
outsl
sbb
inc
jb
sbb
lcall
jae
cltd
or
xlat
cmp
arpl
arpl
cmp
es
ficompl
mov
jmp
mov
out
icebp
pop
jo
xor
dec
les
test
pop
iret
sub
xor
mov
mov
or
mov
and
adc
fcmovnu
scas
mov
pop
cmp
test
fisubs
xor
and
push
icebp
int
and
loope
insl
lcall
gs
int3
test
bnd
dec
dec
fstl
ret
loop
pop
mov
ret
or
cs
mov
adc
repz
rcrl
sbb
pop
icebp
jae
scas
mov
stos
ffree
test
jnp
xor
popf
lods
jne
inc
pop
xchg
push
in
das
mov
mov
push
fwait
jo
sbb
mov
jmp
fsubrp
cmp
std
push
mov
lds
push
and
jnp
push
pop
outsl
daa
sbb
mov
push
fdivrl
call
fadds
arpl
pop
fidivrs
nop
repnz
or
fsubp
or
ret
xor
in
fcomps
mov
dec
add
add
test
cwtl
jnp
int
cli
ja
add
add
xor
scas
cli
xchg
imul
sbb
leave
outsl
loope
or
cltd
ljmp
sbb
cmpsb
imul
nop
insl
pop
ffreep
adc
sub
xor
scas
mov
cmp
out
push
pop
xchg
lret
lds
mov
xor
dec
cld
pop
pop
jae
adc
mov
xchg
lret
and
or
loopne
pop
inc
fadd
das
fcoml
int
in
mov
mov
mov
xor
into
xor
mov
sub
cmc
add
xchg
out
dec
adc
sbb
outsl
sbb
imul
mov
out
xor
lods
iret
lcall
ret
ret
adc
and
test
mov
test
xchg
cld
cld
mov
push
pop
std
dec
test
cmp
xchg
xor
insl
or
sub
out
call
outsl
mov
dec
int
lcall
cmpsl
sub
mov
popf
jne
jbe
fwait
mov
sbb
pop
arpl
and
mov
in
pop
mov
xor
sub
pop
out
fwait
dec
xchg
push
jno
xchg
andl
outsl
inc
sub
shr
push
scas
xchg
cmc
dec
sbb
adc
ficoms
or
pop
adc
pop
and
mov
mov
cld
lret
out
jmp
repnz
imull
push
dec
push
nop
add
xlat
clc
clc
sbb
ds
ljmp
inc
push
or
ljmp
cmpsb
xor
mov
bound
push
inc
rcll
iret
lds
xlat
jp
mov
loop
lcall
lods
xor
sarb
repz
push
imul
push
xor
fsubrl
jo
push
in
and
icebp
js
gs
cmp
push
adc
sub
xor
xchg
push
outsl
ffree
rcll
adc
inc
and
mov
jo
and
test
mov
mov
int
lcall
mov
pop
push
loop
sti
movsb
ljmp
and
xchg
sub
out
jae
push
mov
adc
jnp
add
pop
jo
xor
push
aam
mov
jmp
shl
push
dec
es
xchg
inc
outsl
nop
mov
pop
sbb
lret
cld
push
sub
loop
lods
mov
in
sub
es
sbb
in
xchg
xchg
repz
cld
cmc
movsl
aam
mov
xchg
cmc
pop
or
push
daa
add
mov
mov
aad
and
ja
ljmpw
neg
jno
xor
sub
test
outsb
sahf
pop
in
ljmp
lods
sub
sahf
lea
ja
out
pop
divb
xor
pop
loopne
pop
in
in
mov
popf
sbb
aad
pusha
dec
lahf
cmpb
cli
jno
push
pop
jge
loop
jns
cmp
into
sbb
pop
xchg
icebp
stos
jg
lahf
insb
jae
bound
mov
cmp
shlb
add
and
mov
or
inc
adc
mov
push
or
aaa
cmp
imul
sub
pushf
pushf
dec
cmp
lahf
lret
jae
in
xchg
cld
iret
ficomps
add
imul
jnp
imul
leave
mov
sbb
out
test
fidivl
cmp
ret
xor
lahf
mov
iret
rorb
xor
sbb
out
dec
xchg
xchg
xor
loopne
jmp
push
push
or
lret
jns
xchg
dec
push
ss
mov
fistpll
loop
rcll
mov
xor
jmp
test
sbb
in
xchg
jge
xchg
pop
pop
pushf
sti
clc
test
into
sbbl
insb
movsb
dec
fcoml
dec
mov
lret
mov
add
insl
icebp
out
mov
sbb
sub
int3
lret
test
adc
mov
dec
jo
movsl
lods
pmulhuw
inc
sahf
add
push
fiaddl
mov
scas
idivl
inc
fldenv
sarl
loop
hlt
mov
mov
mov
sarl
cs
sub
das
xor
call
out
push
popaw
into
xchg
lcall
lahf
cmp
aas
push
or
setae
adc
fdivrs
mov
or
shr
js
lret
jns
leave
cwtl
out
inc
push
and
rorl
push
mov
xchg
jnp
xchg
push
loop
insl
mov
jnp
push
sbb
or
in
pop
or
xchg
sub
jno
iret
out
dec
fsubrs
sub
dec
hlt
pop
jne
mov
xchg
out
lds
sub
ret
lret
aaa
or
sub
loope
fsubl
add
fsubs
enter
outsl
popa
xchg
mov
dec
jbe
sahf
imul
clc
sub
pop
stos
push
ds
adc
imul
mov
dec
loop
js
xchg
lock
call
cmpsb
jmp
addl
push
hlt
fsubs
shrb
mov
xchg
jle
xor
sub
fldcw
push
pushf
inc
add
inc
data16
fadd
iret
aaa
push
add
mov
cmpsl
add
insl
dec
jmp
push
xchg
xor
cld
cmp
lea
add
cmc
call
cmp
pop
or
sar
lea
add
pop
push
push
xchg
dec
ret
inc
xchg
jp
hlt
es
enter
arpl
scas
jl
orb
arpl
mov
sbb
sbb
jne
shlb
icebp
xor
test
mov
jecxz
in
bound
push
dec
mov
lcall
mov
mov
xchg
insl
nop
loope
xor
rcrl
bound
mov
pop
push
add
popf
test
insl
fnstsw
or
mov
ret
cld
outsb
fs
sub
cltd
jns
xchg
push
adc
push
xchg
es
das
add
mov
adc
lahf
in
xchg
lahf
je
shl
gs
cmp
and
inc
inc
add
sbb
cmp
mov
seto
and
fwait
xlat
repnz
sbb
jg
test
adc
jne
mov
xorb
enter
hlt
sbb
inc
shll
mov
cli
mov
movsb
outsl
icebp
mov
jnp
pop
adc
aam
sbb
test
mov
or
js
lahf
into
rorb
enter
and
xor
out
mov
enter
mov
icebp
cs
in
mov
inc
push
out
adc
adc
dec
roll
loopne
stos
in
jne
mov
mov
push
xchg
shrb
cld
jbe
mov
loopne
add
les
push
gs
pusha
mov
es
push
pop
dec
dec
pop
inc
push
add
inc
dec
out
pusha
and
sub
pop
out
push
mov
sbb
or
dec
clc
jae
testl
mov
xchg
stos
pop
lcall
loope
mov
ret
xor
pshufw
popa
jb
jp
in
movsb
or
nop
cmp
fbld
xchg
filds
inc
sbb
shlb
and
mov
fsts
mov
test
or
xor
dec
or
into
lds
adc
les
cmp
adc
add
test
cmp
lcall
cmp
mov
fidivl
insl
xor
push
xor
sbb
sbb
clc
out
add
sub
ds
pusha
repnz
rcrl
jge
aas
out
xchg
stos
jnp
pop
aam
xchg
push
or
enter
cmpsl
fisubl
pusha
sti
lar
xchg
cmp
sub
push
les
pop
into
and
int3
lret
xchg
mov
mov
xchg
fdivrp
dec
lods
gs
mov
out
dec
repnz
jnp
pop
add
jne
pusha
push
scas
jo
stc
dec
lods
jmp
mov
and
sub
sub
mov
xor
push
testb
cmp
lahf
repnz
cwtl
pop
sbb
shr
lods
dec
fdivs
mov
pop
mov
adc
scas
loopne
push
push
xchg
lcall
cld
ss
mov
fwait
inc
xlat
inc
dec
cli
cs
inc
or
xor
std
outsb
xchg
sub
xchg
movsb
into
mov
mov
jge
into
lret
or
negb
out
pop
jmp
nop
leave
call
jmp
or
cmp
cs
fmulp
rcrb
push
sbb
insb
stos
jno
jge
les
cltd
aam
hlt
cli
loopne
sbb
clc
xor
inc
xchg
and
xchg
jbe
out
loop
fdiv
shr
pop
ds
sbb
xor
into
jbe
dec
mov
or
idivl
in
sbb
in
in
dec
jecxz
adc
inc
ss
jecxz
outsb
adc
outsl
inc
inc
lock
aam
sub
or
fistpl
fldt
mov
test
mov
outsb
push
mov
test
flds
dec
pop
imul
pop
mov
xchg
mov
into
scas
inc
outsl
pop
cmp
inc
dec
adc
mov
aas
sub
stos
lret
mov
es
cli
clc
dec
xor
in
inc
or
mov
loopne
fs
pop
jbe
js
lock
and
adc
sti
push
pusha
rcl
pop
mov
pop
movsb
test
mov
push
mov
or
outsl
add
ja
scas
rclb
or
in
adc
mov
fdiv
push
lods
add
scas
stos
adc
and
sub
out
mov
out
call
fcoms
pop
lahf
xor
inc
mov
xor
push
cmp
fwait
xchg
inc
aad
lods
inc
mov
hlt
mov
add
jnp
fldt
imul
out
addr16
mov
sbb
adc
jp
mov
mov
xchg
enter
mov
lods
ds
xor
inc
pop
lods
mov
movb
cmpsl
ss
mov
insb
iret
into
push
icebp
pop
xchg
cmpsl
testb
divb
mov
xchg
test
xlat
jnp
lahf
add
clc
and
bound
or
popf
mov
push
gs
cwtl
stos
mov
xor
std
ds
aaa
imul
mov
cmc
fcmovu
dec
outsl
dec
jns
ja
in
pop
fsubrs
push
mov
jb
addl
negb
xchg
lods
push
ret
mull
pop
push
mov
fmull
sbb
push
ret
in
push
es
jo
pop
cmpsb
and
fisubrl
enter
sbb
cmpsl
dec
adc
adc
adc
xchg
call
cmp
sbb
rol
rclb
mov
dec
sbb
fildl
xchg
nop
inc
push
cmc
rclb
fneni(8087
rcrb
or
mov
dec
stos
lret
lret
mov
cmp
mov
loope
stos
cltd
xor
cmp
es
mov
out
clc
or
jno
fwait
cltd
in
pop
pop
cmp
add
imul
mov
mov
lret
sub
mov
movl
lcall
mov
lea
push
stc
adc
and
ja
mov
int
and
pop
jb
dec
test
fcom
jno
xchg
testb
shll
fisubs
sbb
in
shlb
out
mov
out
sub
push
iret
rcll
fwait
lea
pop
pop
repz
das
outsb
sub
popf
cmpsb
pusha
pop
call
sbb
int
popf
scas
dec
adc
ret
inc
pop
sbb
ss
xor
sti
rorl
stos
add
cltd
pushw
xor
inc
mov
sbb
cmp
mov
pop
bound
loopne
jecxz
add
std
push
jb
mov
xchg
dec
movsl
rcl
inc
or
pop
push
and
mov
xchg
and
daa
jnp
inc
fsts
cld
out
fs
inc
sbb
push
mov
roll
jl
push
cmc
jnp
sub
ret
lahf
xor
sub
lock
inc
jge
xchg
lret
mov
int3
jno
imul
popa
lahf
lea
xor
cmp
pop
incb
and
ss
push
pop
dec
mov
out
test
push
or
data16
icebp
test
stos
jae
dec
xor
mov
negl
dec
je
push
in
dec
leave
leave
or
adc
push
jle
add
pop
scas
push
cmp
adc
dec
or
mov
jne
jmp
repnz
mov
and
addb
sbb
cs
in
push
mov
mov
fs
push
inc
int
or
pop
jg
dec
xor
jl
std
add
nop
aad
in
mov
test
das
cmp
mov
sbb
and
push
lds
arpl
fsubl
int
cmp
pop
push
outsl
push
test
movsb
mov
mov
pop
jge
ss
cltd
jecxz
shlb
inc
or
mov
dec
imul
jo
inc
dec
ds
fwait
pop
popa
test
or
push
mov
dec
test
cld
xchg
in
cmp
and
leave
sub
add
sarb
es
out
out
cmp
mov
pop
outsb
jp
movsl
push
fadd
scas
or
lcall
and
fs
repnz
cmp
add
jns
in
and
je
hlt
dec
imul
enter
aas
push
les
cmc
pop
imulb
pop
mov
cmc
sub
rclb
fcmovbe
sub
lcall
jle
mov
adc
mov
scas
and
sti
push
out
cmpsl
fstpt
add
push
scas
test
jno
or
jmp
or
dec
adc
in
imul
jae
mov
lahf
je
mov
adc
mov
pop
adc
push
out
in
das
pop
psubw
ds
dec
sar
xor
mov
pop
shlb
stc
js
xchg
mov
das
xchg
cli
inc
shl
mov
add
es
add
arpl
int3
mov
test
es
jmp
pushf
jae
in
add
sub
mov
xlat
jge
or
cld
clc
lret
push
imul
loope
outsl
cld
cli
inc
scas
mov
mov
in
mov
mov
stos
adc
xor
hlt
or
idiv
inc
xlat
inc
sti
mov
ds
xchg
cmp
stc
inc
pop
pop
test
in
cld
jns
js
mov
repnz
sub
sahf
mov
jns
dec
mov
leave
fmuls
pusha
adc
rclb
daa
fptan
cmp
das
lods
daa
cld
dec
ja
addl
add
pushf
aaa
nop
jmp
and
aas
adc
ret
gs
subb
nop
pop
out
and
movsl
mov
inc
pusha
cmp
cmp
or
call
leave
test
imul
adc
out
cmp
adc
xlat
xchg
mov
add
pop
pop
mov
mov
mov
sbb
cmp
push
pop
rcll
pop
push
push
in
xchg
xlat
dec
daa
push
fldt
scas
mov
outsb
jns
popf
cmp
or
nop
sbb
and
popa
xor
scas
cmp
mov
mov
sti
sub
fldcw
imul
cmp
movsl
xchg
lret
xor
inc
adc
jmp
icebp
add
cli
push
and
loope
stc
les
sub
lret
jle
mov
fldcw
out
fildll
shrl
call
mov
sub
or
std
xchg
mov
lea
jns
cmpsb
inc
loopne
shrb
xchg
jne
dec
jmp
mov
gs
enter
sub
add
mov
je
mov
addr16
mov
jbe
sbb
fistpll
lcall
xorb
mov
xor
add
mov
popw
mov
xchg
inc
xchg
add
push
mov
lock
adc
xchg
data16
daa
in
out
movsl
mov
std
imul
xchg
gs
push
push
cmp
sbb
or
stos
sarb
xor
sbb
sarl
sbb
call
or
and
adc
mov
and
jo
shrb
cmp
mov
or
mov
rcll
clc
add
pop
jp
aad
mov
xchg
xchg
iret
sub
pop
outsl
jmp
aaa
cmp
cmpsb
jecxz
jbe
push
xadd
xor
xor
into
faddl
xlat
sub
adc
dec
mov
les
sub
stc
push
dec
je
test
ds
or
int
cmp
adc
xor
xchg
ljmp
xor
loop
cmp
add
inc
inc
lahf
and
ds
jno
push
sub
out
mov
or
pushf
jno
cmc
pusha
push
scas
adc
data16
mov
pusha
xor
rcll
sub
lds
dec
jmp
js
es
cmp
mov
sub
scas
loop
test
mov
hlt
sbb
mov
push
push
mov
divb
cmovb
pop
std
jge
scas
fmull
sub
mov
mov
bound
inc
jecxz
push
inc
mov
jo
mov
js
jbe
mov
mov
mov
icebp
pop
xor
sbb
decl
lods
xor
dec
cmp
dec
and
jnp
mov
mov
push
icebp
insb
inc
fstl
shll
imul
stos
int
push
imul
out
fst
imul
js
pop
shll
pop
out
lock
cmpsl
pop
pop
stos
mov
adc
inc
aaa
jg
inc
lret
pop
insl
inc
xchg
jecxz
lahf
mov
sbb
add
sbb
cwtl
xor
fst
ds
cwtl
cli
or
pop
push
outsl
xchg
pop
pop
and
sbbb
mov
push
pushf
jbe
jbe
jno
and
pop
sbb
andb
pop
lods
push
inc
ja
adc
in
pop
inc
test
dec
xor
out
fldenv
mov
int
sahf
inc
loopne
sti
mov
das
aam
sahf
cwtl
pop
int
or
wbinvd
or
es
push
mov
into
xor
test
loope
dec
stos
xchg
pop
xchg
push
lea
push
sub
mov
xor
or
mov
aaa
jg
movsl
dec
xor
or
out
adc
bound
mov
test
or
xlat
fimull
fsubrl
lods
inc
cmp
or
push
aaa
out
mov
pop
jae
pusha
jg
push
and
inc
inc
push
imul
das
pushf
leave
jle
adc
dec
aas
jnp
leave
mov
sub
daa
in
jmp
insl
add
pop
mov
out
and
sub
lds
cmpsl
jo
jns
jl
repnz
add
cmp
mov
je
bound
lret
andb
add
sub
movsl
xor
push
imul
mov
ficoml
and
lock
paddsw
fs
aad
jp
inc
lret
int
rep
xchg
xchg
mov
and
jge
mov
ficomps
inc
fmuls
fwait
push
and
and
sbb
push
hlt
xchg
call
iret
addl
xor
adc
lret
fistpll
push
loopne
jne
repnz
sub
add
push
fdivrl
xchg
jmp
dec
dec
movl
and
in
xchg
mov
inc
inc
sbb
in
xchg
xor
nop
add
shrl
out
popf
clc
mov
rorb
sub
push
stos
or
fdivl
ljmp
sbb
rcrl
cmpb
movsl
cltd
jns
inc
pop
xchg
or
rclb
mov
andl
cmpsl
cmp
xchg
pushf
push
xchg
push
inc
xor
aas
jge
push
sbb
sbb
xchg
sbb
push
in
sub
push
ret
and
xchg
out
sahf
fsubrp
mov
fimuls
int3
sahf
lret
fcompl
std
jl
adc
jmp
lret
ja
push
pop
arpl
jl
popf
repz
pop
loope
push
es
add
cmp
inc
jbe
fs
fsubs
cmp
mov
jnp
sub
cld
daa
insb
jmp
pop
mov
movsb
inc
cmp
es
aas
mov
jae
or
dec
outsl
int3
sti
outsl
add
xor
ja
and
push
scas
daa
jge
jns
push
dec
mov
pop
insb
mov
inc
in
or
aam
fmull
push
inc
arpl
fst
jge
insb
dec
in
cmp
clc
mov
add
addl
fnstsw
xchg
xchg
sub
cmpsb
sub
and
cmp
call
and
test
sub
cld
add
daa
movsl
lock
lea
push
lock
repz
or
inc
cmc
jp
inc
add
nop
subl
cmpb
or
sub
cmc
or
aaa
sbb
mov
jne
jno
pop
mov
mov
push
and
cltd
adc
jb
xor
daa
aaa
out
shll
mov
cmp
lret
aas
xchg
xchg
movsl
outsl
call
filds
pop
fsub
int3
jae
popa
jp
push
jns
push
sar
mov
and
ret
jbe
out
dec
lahf
xchg
dec
lret
push
jae
push
cwtl
push
addl
das
pop
mov
loop
inc
dec
and
dec
push
xchg
inc
mov
adc
bound
fisubs
rorb
lahf
dec
or
insb
enter
mov
cli
xchg
xor
mov
shl
dec
add
fucomip
lock
mov
sub
mov
movl
cmpsb
jnp
daa
insl
test
lds
push
jle
jge
adc
in
inc
inc
cltd
lahf
loope
jmp
adc
aam
mov
or
add
pop
lock
cmp
pop
xor
inc
ficoml
and
scas
cli
xorb
dec
push
xor
bound
repnz
and
mov
mov
jns
dec
out
xor
in
mov
test
inc
mov
aam
jae
clc
js
push
mov
jl
ja
and
mov
mov
jne
inc
mov
push
loope
je
sbb
enter
sbb
pusha
aas
popl
fadds
mov
pop
or
jns
xchg
jae
insl
int
push
inc
lock
jmp
pop
xorb
push
jns
imul
xchg
out
lods
or
mov
adc
fnstcw
adc
mov
or
inc
mov
or
rcrb
into
adc
pop
xor
movsl
roll
out
push
xchg
aaa
mov
fbld
jg
pop
jo
inc
xlat
fsts
ret
sbb
inc
mov
jg
xchg
cmp
inc
cmpsb
mov
xorl
icebp
xor
xor
jl
adc
dec
inc
adc
jne
ret
mov
les
inc
out
repz
mov
jnp
ret
enter
inc
mov
ret
adc
dec
xchg
mov
std
icebp
dec
mov
and
pop
rcll
jmp
das
fldenv
imul
inc
shlb
add
cs
or
sarl
popa
adc
jl
mov
int
or
push
mov
inc
rorl
adc
dec
and
and
inc
or
mov
inc
sub
inc
pop
das
lea
push
mov
int3
pop
divb
loope
and
or
test
mov
loope
pop
push
int
das
stos
jge
mov
leave
mov
das
pop
scas
inc
mov
ss
lcall
xor
jno
xor
fsubrs
cmp
je
xor
gs
stc
adc
mov
popf
adc
int3
adc
lcall
test
inc
sub
inc
out
mov
ret
clc
pop
mov
cmp
out
xchg
mov
ret
filds
enter
cmp
mov
ja
mov
mov
pop
adc
or
out
fisttpl
sub
jb
mov
mull
push
sbb
push
roll
and
push
ss
sbb
insb
dec
ds
sahf
jnp
loopne
sti
cmp
repz
and
or
cli
cmp
stos
mov
out
fidivl
gs
mov
in
adc
mov
mov
int
ds
dec
jae
push
adc
mov
push
lods
popa
in
and
push
mov
xchg
sbb
pop
or
je
lret
scas
jne
aaa
add
cs
mov
lds
push
fsubs
mov
cmpsl
sub
mov
outsl
mov
inc
aas
aad
je
aad
ja
arpl
adcl
push
xchg
sub
inc
jns
inc
and
cmp
pop
mov
cmp
pop
push
in
jge
mov
mov
aas
xor
jp
repnz
in
add
stc
and
mov
mov
inc
imul
mov
push
jp
stc
pop
aaa
mov
inc
jns
enter
std
mov
adc
pop
or
test
pop
repnz
add
das
movsl
leave
std
cli
out
push
lods
lret
jmp
jmp
and
dec
aas
dec
dec
loop
mov
xchg
dec
gs
shrl
mov
fs
dec
addl
imul
dec
or
push
clc
iret
cmp
jmp
enter
mov
sub
fucomp
out
add
mov
testl
xor
shll
addl
adc
push
mov
lret
hlt
xchg
jae
outsb
mov
adc
sub
mov
sbb
xor
xor
pop
and
icebp
shll
lahf
aaa
mov
in
push
mov
iret
sbb
test
jne
inc
dec
adc
push
ficompl
js
pop
xchg
out
orl
push
rcrl
or
stc
and
dec
xor
outsb
and
xorb
out
es
mov
clc
mov
mov
cltd
in
or
inc
leave
add
pop
es
xor
mov
xchg
cli
js
mov
dec
cmp
scas
jle
fs
xor
clc
sbb
dec
jo
push
sub
jno
orl
jbe
fisubs
arpl
cld
and
mov
mov
xchg
cmpsw
imul
mov
pop
ljmp
push
xor
jnp
lods
shll
orb
imul
dec
jno
mov
dec
test
push
sbb
test
rcrl
mov
lock
mov
dec
or
mov
xchg
mov
mov
or
shrb
add
mov
pop
shl
inc
insb
mov
mov
ljmp
jo
mov
test
mov
inc
cmp
imul
push
mov
mov
pushf
inc
hlt
inc
push
jecxz
xchg
xchg
xorl
mov
je
push
daa
cmp
jae
gs
subb
pop
inc
jle
xlat
mov
aaa
in
sub
adc
popf
and
rdpmc
xor
cmp
jb
je
call
pop
notl
loopne
pop
in
mov
fists
dec
sbb
cmpsb
pop
ret
push
out
mov
cli
lfs
or
in
lods
inc
stos
hlt
add
sarb
add
or
cmpsl
out
jg
cltd
jne
push
adc
loopne
or
int3
lds
push
les
pop
push
decl
xchg
mov
test
loopne
push
notl
rcll
imul
mov
xchg
push
shlb
sub
cmpsl
adc
adc
push
loope
int
xchg
fidivs
add
xchg
insl
push
adc
or
or
out
push
insb
xor
fwait
stos
shlb
jmp
bound
or
or
adc
mov
mov
addr16
insb
in
mov
pop
jns
iret
mov
adc
jne
cmp
sub
dec
and
cld
jecxz
rcl
fnstsw
daa
cmp
mov
out
pop
lahf
insl
inc
mov
in
add
sub
sbb
insb
adcl
stc
fnstsw
orl
xchg
lret
xlat
xor
jle
push
dec
mov
xchg
dec
hlt
mov
scas
xor
mov
pop
push
popf
push
call
lods
jge
sub
sub
mov
enter
xchg
mov
repz
pop
in
adc
pop
popa
adc
ss
push
push
jmp
insb
fwait
cltd
add
dec
push
fdivrs
mov
jne
mov
popf
jne
mov
imul
jae
pop
xchg
xor
js
mov
sbb
pop
pop
sbb
sub
and
scas
sub
dec
pop
std
inc
push
lahf
mov
inc
jne
gs
cli
and
mov
fmuls
or
pop
sub
xchg
push
xchg
pop
mov
add
mov
test
in
nop
js
mov
push
lods
mov
aam
pop
dec
cmp
xchg
fmuls
pop
int
and
not
leave
mov
mov
sarb
adc
inc
lods
adc
or
cli
xchg
in
imul
mov
xchg
pop
adcl
add
out
inc
add
movsb
sahf
jo
cmp
dec
or
movsl
cli
ljmp
sub
xchg
fmulp
jmp
mov
mov
sbb
mov
aas
lods
mov
add
bound
cmp
and
add
xor
jmp
inc
xchg
pop
cmpsl
inc
jp
mov
push
fpatan
out
repnz
loop
jge
addr16
shll
xor
xchg
insl
aam
xchg
cmpsl
jmp
shll
out
cmp
xchg
jp
push
lret
sbb
sbb
cmp
in
xor
push
xchg
int3
fists
daa
adc
imul
jo
or
xor
cli
cmp
mov
sbb
out
sbb
loopne
jb
cli
aas
ljmp
dec
shrb
lret
dec
cmp
dec
movl
and
sbb
dec
mov
adc
pop
lret
mov
jp
cmpsb
xlat
clc
jle
inc
xchg
push
mov
mov
dec
nop
mov
dec
and
push
dec
pop
push
dec
jnp
pop
arpl
xor
push
adc
xor
adc
xor
fisubrl
xchg
push
jne
pop
lret
sub
add
pop
into
jb
arpl
sub
popa
mov
pushf
xor
jnp
pusha
mov
add
mov
pop
pop
sub
push
stos
popf
imul
push
inc
out
and
mov
cwtl
mov
inc
bound
pop
je
lret
jbe
flds
cmp
dec
push
ja
pop
lret
leave
dec
fisttpl
jae
sub
adc
push
and
ret
jo
sub
pop
mov
inc
or
or
es
xor
mov
jbe
mov
lods
shrb
and
icebp
or
pop
jecxz
pop
imul
es
jno
sub
mov
mov
push
cmp
push
pop
push
push
pusha
push
cmp
nop
daa
lcall
cs
ljmp
int3
mov
mov
aam
rcrw
mov
rorb
add
dec
mov
add
bnd
adcb
cmpsl
arpl
inc
mov
push
push
lods
inc
pop
inc
mov
scas
repz
mov
idivb
imul
insb
dec
out
lods
xor
in
stc
test
push
jae
scas
out
inc
scas
test
mov
fsubrl
outsl
lcall
rclb
movsb
andl
lea
mov
stc
lock
adc
dec
test
xchg
inc
hlt
arpl
insb
bnd
adc
dec
xchg
jg
mov
push
jnp
test
mov
xchg
sub
inc
jo
xchg
sbb
dec
and
cmpsl
shlb
adc
fistps
and
xchg
add
rol
nop
add
mov
testl
cmpsb
stos
call
jno
mov
push
xchg
imul
std
push
pop
adc
and
in
push
sti
faddl
cli
int
in
xchg
push
mov
icebp
fsubrl
ret
enter
cmp
sbb
xlat
cwtl
clc
xchg
cs
lds
lcall
lds
in
ficompl
insl
mov
sbb
sbb
adc
push
lret
int3
mov
arpl
rclb
dec
xor
cmpb
out
loop
in
icebp
sbbb
js
inc
mov
addb
lcall
lods
mov
js
sub
fwait
inc
dec
bound
mov
jge
sub
daa
jge
clc
rol
sbb
adc
jmp
sub
inc
ljmp
cmp
push
jo
arpl
mov
stc
arpl
repz
mov
jno
push
xor
lds
nop
pop
inc
rep
popf
dec
sub
pop
int3
adc
lret
inc
dec
inc
jmp
push
mov
sub
pop
out
aaa
pop
push
out
sbb
mov
xchg
sbb
sbb
cltd
xchg
bnd
push
xchg
mov
fisubs
test
dec
sub
out
pop
push
daa
xor
xchg
into
inc
mov
lods
rorb
dec
mov
inc
lcall
mov
add
adc
push
mov
fistpl
lea
xor
popl
inc
js
and
inc
add
sbb
loopne
jbe
fldcw
dec
sub
mov
int3
cmpsb
push
jg
out
sbb
int
dec
in
fcomps
cwtl
ss
cmp
movsl
movsl
sbb
jo
lds
mull
lret
sbb
sub
adc
loopne
and
mov
inc
dec
repnz
and
adc
test
popa
clc
cwtl
adc
xchg
cmp
inc
repz
into
xchg
inc
inc
daa
scas
xchg
ljmp
xchg
adc
cmp
jmp
mov
pop
dec
or
daa
in
or
mov
outsb
repnz
loopne
sub
push
jne
cmc
insb
push
and
pop
fwait
sub
jb
mov
dec
push
iret
xchg
push
xlat
mov
xchg
hlt
pushf
imul
aam
jbe
dec
out
das
lret
pop
cmpsb
in
ss
cli
fsubrl
fcmovnbe
test
pop
sub
aam
mov
es
insl
fdivrp
pushaw
fstpl
aam
scas
add
mov
incl
cmp
mov
fistpll
subb
fmulp
xchg
mov
jmp
bound
std
lcall
fnstsw
xlat
mov
iret
loopne
cli
push
xchg
enter
lret
mov
lahf
movsb
sub
xchg
ret
jl
test
aaa
mov
and
sbb
mov
lcall
repz
inc
jo
and
mov
lods
aaa
popf
adc
push
sahf
inc
jp
cld
call
jbe
int
mov
aad
sub
scas
scas
out
sbbb
call
inc
sub
sbb
in
mov
int
clc
mov
jp
push
add
std
jbe
push
cmp
imul
xor
shl
jmp
shl
ret
in
jecxz
add
jg
cli
test
or
stos
mov
cltd
nop
movsb
mov
dec
cli
xchg
les
pop
jp
cmp
mov
lea
gs
sub
add
lods
std
mov
imul
pop
daa
pop
sbb
mov
les
cltd
das
mov
movsl
mov
negl
arpl
aas
cmp
pop
icebp
pusha
roll
out
jne
mov
lahf
add
push
cmp
lock
xchg
loop
jp
lret
adc
mov
orb
scas
mov
dec
mov
dec
or
mov
xor
hlt
pop
push
mov
and
xchg
fcomps
arpl
addr16
or
sbb
cmp
cmp
pop
insb
movlps
test
cmp
mov
in
cmp
xchg
xchg
roll
inc
sub
push
add
mov
xor
sahf
std
cmp
pop
aaa
bound
adc
lahf
push
mov
mov
iret
sbb
push
xor
jmp
jmp
jb
xchg
shll
inc
jbe
icebp
xor
add
adc
out
mov
out
imul
xchg
and
xchg
mov
dec
mov
inc
not
stos
add
in
or
jge
arpl
fsubrl
cmpsl
aas
ret
pop
push
pop
xor
dec
je
inc
out
mov
popf
sbb
add
lret
jae
add
xchg
mov
or
or
or
movsl
pop
into
dec
sub
dec
xor
sub
daa
mov
addl
mov
sahf
push
add
xor
cmp
mov
jae
mov
mov
data16
pop
xchg
mov
dec
nop
popf
in
and
pushf
jge
shll
jmp
push
xor
test
and
mov
mov
sub
enter
rorl
or
fmull
leave
mov
int
test
adc
mov
sub
jecxz
add
inc
xorl
leave
jbe
mov
inc
lea
stos
mov
or
adc
pop
cmp
stos
das
cmovl
and
hlt
cltd
sbb
pop
sub
pop
test
mov
test
jecxz
add
fwait
or
and
mov
cmp
js
push
addl
sub
test
and
mov
adc
push
lods
and
pop
jle
loop
gs
insl
jae
scas
jo
pop
outsl
sbb
xchg
mov
and
mov
ret
test
pusha
scas
xchg
add
cmpsl
jns,pt
das
rcll
rorl
out
out
leave
testb
mov
jnp
jo
mov
fsubl
add
xchg
insl
add
imulb
notl
das
in
shlb
test
xor
lret
push
inc
popa
sti
dec
aam
sub
dec
dec
fwait
mov
add
and
mov
out
loopne
int3
inc
and
imul
cmp
xchg
sub
adc
mov
imul
add
dec
sbb
testb
mov
dec
inc
fcomps
mov
into
push
sbb
fmul
cltd
pop
lds
ss
faddl
pop
pop
repnz
dec
mov
dec
jno
imul
push
cli
sub
xor
jae
fbstp
mov
mov
mov
adc
mov
rorb
in
mov
rcll
pushf
mov
leave
aad
inc
inc
aad
lods
movsb
mov
adc
pop
mov
pop
insl
add
or
andb
fstpt
scas
jecxz
in
cmc
push
lock
aad
adc
mov
ret
and
push
pop
cltd
lods
or
inc
scas
jae
xor
xchg
in
push
cld
arpl
mov
push
push
outsl
test
inc
iret
fildll
jp
inc
sbb
pop
stc
in
jge
or
mov
fldl
pop
pop
mov
repnz
mov
mov
jecxz
mov
sub
mov
inc
in
add
xor
das
lods
pop
das
fcmovu
dec
mov
inc
mov
movsb
adc
xor
lret
mov
mov
cmp
jbe
xor
repnz
and
pop
adc
jmp
sub
push
pushf
loope
jno
stos
add
adc
dec
outsl
jmp
pusha
rep
xchg
dec
pop
mov
test
push
lret
add
test
inc
and
xor
fs
in
sarb
mov
xchg
mov
cmc
lahf
inc
pushf
mov
fldl
ljmp
mov
cmp
ds
push
xlat
mov
lahf
inc
call
mov
jle
inc
pop
jp
cmpsl
pop
push
testb
mov
add
jg
inc
roll
jp
gs
fdivrl
mov
ds
pop
inc
mov
clts
outsb
jbe
lret
insl
add
mov
lahf
std
outsb
inc
mov
sbb
icebp
fdivrs
jnp
dec
inc
push
out
sub
les
or
mov
mov
mov
popf
aad
fmull
push
jp
lea
xchg
orl
pusha
cmpsb
mov
movsl
cmp
push
lods
cltd
sub
test
inc
lcall
les
push
mov
add
xor
jle
orl
add
inc
into
push
mov
cmpsl
or
mov
and
jp
out
dec
ret
in
xor
dec
cmc
call
jge
mov
cmp
dec
push
mov
scas
jmp
dec
int3
inc
push
mov
dec
fisttps
sub
dec
iret
inc
or
cld
aaa
mov
mov
orl
or
rcrl
inc
cwtl
scas
repz
pop
or
sbb
data16
cmp
push
inc
xor
iret
inc
loope
inc
cltd
insl
je
insl
fwait
xchg
xchg
cld
adc
pop
mov
notl
dec
pushf
add
lods
cmp
inc
push
adc
pop
adc
xor
outsl
aas
cmc
sbb
pusha
out
iret
push
mov
cmpsb
mov
addr16
shrl
or
or
aaa
insl
add
mov
shlb
sbb
repnz
pop
adc
inc
cmpl
mov
ret
sub
outsl
push
popl
inc
cmp
inc
inc
push
bound
insl
dec
jmp
add
loopne
push
mov
lea
xchg
cmp
push
popf
adc
pop
fwait
cmp
lds
inc
aaa
and
and
fcoms
fsts
andl
dec
sub
xor
psubsb
jbe
mov
sbb
xor
jne
arpl
sub
mov
sbb
inc
sahf
dec
imul
sbb
scas
dec
push
push
test
push
das
dec
pop
ret
dec
xor
fstps
mov
or
call
sub
cmpl
sbb
mov
cmc
negl
enter
xchg
xor
cmp
aaa
ss
lds
jae
add
into
adc
dec
shrb
mov
xchg
stos
pop
push
test
mov
ret
jle
loopne
shl
cmp
pop
outsb
mov
inc
adc
push
xor
fdivrs
ret
pop
sbb
mov
and
test
sub
sub
imul
out
xor
mov
lods
sbb
or
aas
ds
adc
cli
push
imul
adc
lret
and
test
in
mov
stos
ljmp
cmp
aam
jmp
popa
mov
aam
xchg
add
mov
imul
nop
rclb
pop
xchg
addr16
cmp
das
pop
cltd
lret
jnp
cs
es
mov
ret
mov
push
lahf
fildll
or
xchg
jno
xor
out
sbb
pop
jb
insb
movsb
stc
push
sbb
fsubl
repz
xchg
xor
or
sbb
mov
cmp
sub
and
inc
pushl
cmp
jecxz
xor
jo
jecxz
dec
ds
rcrl
aad
lret
push
mov
push
cmp
ljmp
dec
push
mov
popa
mov
fisttpll
icebp
inc
lret
push
les
mov
rorl
pop
fcomip
or
push
sub
mov
sub
push
movsb
sbb
mov
pop
into
nop
into
xchg
dec
imul
push
add
xchg
sub
lock
cmp
cli
pop
add
mov
mov
leave
imul
xorb
push
inc
rclb
sbb
cli
mov
fiadds
pop
in
push
xchg
and
push
mov
push
and
adc
loopne
jl
or
cmc
push
mov
adc
es
das
cmp
movsl
sbb
jnp
xchg
and
dec
sbb
cmp
sti
popa
and
rorb
dec
out
lods
test
stos
sahf
mov
push
push
leave
outsb
cmc
jns
outsl
out
mov
aaa
jne
pop
movq
sbb
stos
sti
lods
mov
xor
lret
xlat
popa
ret
ficompl
ja
sub
dec
xchg
mov
adc
int
adcl
imul
das
dec
mov
sub
and
fisubrs
imul
rcl
jle
jg
orb
jge
push
xchg
out
push
nop
xchg
imul
pop
jnp
inc
lcall
int3
mov
stc
aad
mov
std
shl
xor
loopne
add
xlat
lret
cltd
sbb
test
aaa
adc
shr
out
ret
test
cmpb
push
add
fwait
outsl
add
lea
insb
or
adc
inc
push
mov
sahf
adc
cmp
nop
rcll
mov
mov
lcall
dec
mov
or
test
repnz
insb
shrl
push
jne
xor
sub
aaa
add
dec
test
mov
test
ret
and
xchg
push
repz
orb
arpl
scas
xlat
and
jbe
out
xor
insl
ljmp
dec
adc
andb
data16
adc
mov
in
jbe
imul
fdivrs
lret
cmp
test
mov
push
inc
adcl
push
jp
mov
jo
rclb
sti
add
aam
xor
or
mov
jmp
add
repnz
gs
or
inc
dec
pmaddwd
faddl
in
call
mov
mov
inc
rolb
fstp
sbb
and
ret
rclb
push
dec
inc
filds
sbb
mov
jmp
fcmovb
ret
test
sbb
push
xchg
js
dec
mov
dec
mov
xorb
jo
fs
stc
mov
jae
cwtl
and
cli
sub
dec
xchg
je
or
ret
aaa
leave
bound
add
dec
popf
aaa
in
dec
push
sbb
xchg
cmpsl
xor
in
ja
xor
push
pusha
leave
sarl
decl
sub
stos
movsl
and
inc
xchg
das
int
jp
inc
mov
jmp
daa
add
push
scas
jmp
add
loopne
jge
addr16
dec
pop
xlat
mov
sbb
in
popa
pop
das
xchg
and
push
jns
mov
iret
adc
std
add
pop
sbb
shll
rolb
fwait
add
lret
push
mov
out
daa
mov
pusha
dec
jnp
sub
ss
jmp
sub
repz
jmp
sti
ss
divb
dec
pop
call
jmp
scas
gs
lahf
js
jns
stos
dec
dec
out
xchg
adc
mov
mov
sub
dec
dec
sub
fwait
and
daa
fistl
and
push
xchg
push
cmp
xchg
xor
cmpsb
scas
add
out
subb
movsb
push
push
sub
inc
add
sub
mov
sub
jno
dec
test
jae
pop
stos
cltd
sbb
and
pusha
stos
mull
xchg
xor
rol
add
xchg
mov
mov
adc
adc
gs
mov
cltd
pop
adc
inc
jo
fimull
in
sti
insl
sub
sub
adc
sub
xor
xor
fwait
and
ja
mov
jle
push
gs
adc
in
repnz
inc
cmp
pushf
insl
jbe
xchg
add
cli
bswap
scas
mov
xchg
mov
push
loop
jo
out
add
pop
and
call
and
mov
sub
out
xor
mov
xchg
into
jns
sub
mov
adc
lahf
mov
or
out
push
push
loop
lahf
scas
movsl
add
aas
iret
mov
lea
add
mov
adc
addb
push
int
jno
arpl
inc
xchg
ja
mov
xor
add
in
cld
mov
jbe
cmpsb
pusha
dec
mov
fcomip
add
adc
pop
movl
loope
jl
add
lea
mov
or
push
pop
inc
jbe
gs
mov
imulb
rcrb
mov
je
jno
xor
clc
in
clc
out
jg
int
and
inc
fdivl
shlb
xor
ret
leave
lret
fbstp
adc
lds
fstl
jecxz
sbb
fwait
mov
es
pop
aam
mov
shl
movsl
push
xchg
mov
mov
lahf
jnp
ret
insl
adc
mov
adc
pop
popf
rcrb
push
lcall
sbb
rol
push
repnz
add
mov
add
push
cmpsl
clc
fldt
imul
jo
inc
dec
fcmove
in
inc
xor
xchg
sbb
ret
fcompl
xor
mov
adc
sub
push
and
sbb
sahf
pop
imul
data16
mov
pop
in
ret
and
lods
inc
and
stc
lret
leave
adc
xor
loop
mov
jbe
lea
test
iret
add
jcxz
jb
jp
mov
pop
aaa
push
in
push
add
shlb
rorl
clc
add
pop
mov
cmpsb
xchg
mov
mov
add
pop
inc
scas
not
lcall
jecxz
xor
mov
adc
lds
pop
addl
add
je
push
enter
ret
jg
call
xorb
add
push
stos
ret
arpl
mov
adc
push
shlb
fldenv
jae
or
or
stos
jge
call
xor
mov
movsl
dec
sub
add
test
stos
in
stos
sbb
adc
or
push
xor
push
std
jg
mov
ret
mov
inc
cmc
ret
fcoml
or
in
sub
cmp
push
cli
add
dec
mov
sbb
xor
mov
or
notl
leave
xor
push
sub
mov
xchg
jno
xchg
and
xor
aam
pusha
ss
mov
addr16
iret
ffreep
adc
mov
repz
insl
push
sbb
lret
outsb
add
jns
test
pop
inc
mov
mov
insb
push
mov
ja
push
movsb
movsl
sbb
or
and
bound
sahf
cmc
sbb
into
fwait
popf
icebp
pusha
add
inc
mov
push
imul
xchg
ja
les
xlat
push
lock
mov
lret
mov
packuswb
cmc
je
dec
rorl
xchg
xchg
cmp
cmp
pop
inc
rorl
out
fimull
push
aam
cmp
mov
push
xor
dec
int3
rcr
mov
call
mov
ficoms
xlat
loop
jle
xorl
mov
pop
sub
push
mov
nop
in
lret
sbb
pop
pop
je
sbb
sub
mov
lret
mov
rclb
in
lea
outsb
adc
xor
xchg
push
cwtl
loope
dec
mov
lcall
and
mov
out
adc
mov
aam
add
mul
jb
outsb
fwait
in
loop
xchg
sub
int
push
sbb
iret
ja
out
test
repnz
ret
dec
into
jecxz
mov
jle
stc
iret
xchg
inc
loope
jbe
push
and
and
data16
inc
jno
testl
sbb
out
sub
popa
add
mov
pop
test
lret
mov
xor
xlat
cmp
pushf
iret
movsb
and
int
push
xchg
lds
xlat
cmpsl
mov
dec
orl
les
loope
add
cmpsl
xchg
int3
fildl
mov
lods
mov
mov
push
xor
cld
shrl
jle
xor
adc
loop
and
loop
xor
fwait
mov
std
sbb
aam
jge
lcall
xor
mov
add
jae
int3
into
cmp
push
pop
dec
cltd
ret
imul
imul
movsl
push
pop
fsubl
dec
mov
pop
rol
sti
push
in
add
daa
aad
fistpll
in
xchg
pop
mov
mov
mov
repz
daa
sbb
jmp
das
adc
push
mov
sar
repnz
xor
inc
addr16
inc
add
inc
and
fistpll
sbb
mov
shlb
test
inc
push
mov
cmc
pop
sub
adc
add
jle
add
xlat
push
and
cmp
divb
inc
push
call
jno
pop
xorb
notb
xor
lahf
push
repnz
sahf
sub
inc
adc
xor
iret
add
mov
adc
adc
sbb
sbb
push
inc
sub
cmc
cld
outsl
stos
fisttpll
inc
jl
dec
push
int3
fcomps
inc
out
int3
mov
add
xchg
ja
mov
enter
testb
jo
dec
lahf
int
sbb
mov
adc
xor
sub
test
imul
and
inc
jg
int3
fisttps
push
shrb
out
adc
pop
pushl
movsb
cmp
fidivrl
scas
ficoml
sub
nop
js
and
or
jl
jl
pop
popf
addr16
out
cs
lahf
jae
cmc
rorl
mov
mov
mov
mov
mov
cmpsl
loopne
pop
repnz
js
xchg
pop
inc
insl
negl
repz
push
jo
add
jle
cmp
jmp
out
hlt
aaa
sbb
xor
cmpsl
push
popf
mov
lahf
xchg
iret
fwait
xlat
cmpsb
stc
mov
shl
pop
mov
xor
jmp
loopne
popf
cwtl
and
mov
mov
fld
sub
xlat
ret
pop
push
repnz
shll
or
sbb
mov
add
jp
cmp
test
pop
mov
mov
icebp
mov
aas
or
mov
sub
mov
push
mov
lods
pusha
and
jbe
lcall
test
inc
lock
jo
cmpsl
jmp
ljmp
push
and
xchg
arpl
add
ffreep
jge
stos
sbb
push
inc
popl
push
sbb
pushf
inc
jb
ret
cmpsb
xchg
jno
add
jne
movsb
push
fnstenv
shlb
push
call
lods
jb
dec
ret
jo
xor
aad
jno
inc
movsl
jge
dec
bound
icebp
out
mov
pop
aaa
push
pushf
mov
sub
imul
movsl
lock
mov
adc
push
jl
jns
mov
cmp
pop
dec
mov
or
shll
into
inc
xorb
push
jo
pop
in
mov
das
xchg
inc
mov
mov
xor
push
sub
addr16
je
cmpsl
fadds
or
adcl
and
mov
cmpsb
leave
fcmovb
sbb
ljmp
add
lcall
add
retw
inc
sub
insl
loopne
dec
inc
pop
mov
mov
cmpsl
mov
imul
jnp
adc
dec
cmp
mov
fs
mov
xchg
ds
lock
in
test
pushf
lret
ja
cmp
push
lret
dec
lret
shll
or
dec
xchg
test
shll
jg
and
int
es
sbb
xor
in
std
inc
adc
aam
rorb
into
test
test
orl
inc
ret
cmpsb
mov
movsb
sub
fimuls
sub
and
bound
sbb
pop
lock
jl
shll
in
or
aas
lret
iret
adc
in
mov
sahf
cmp
test
xchg
stos
lahf
call
pop
pusha
scas
mov
lret
cmc
mov
xchg
jnp
and
jl
mov
pop
cwtl
in
push
fmull
scas
push
popa
sahf
nop
aas
push
or
in
rcrb
sti
shr
mov
cld
lock
xchg
cmp
inc
and
aas
and
pop
sbb
jecxz
das
or
pop
fcompl
push
in
repz
hlt
pusha
fildl
in
pop
inc
and
add
cmc
mov
les
mov
out
into
xchg
movsl
sbb
add
sbb
in
test
xor
in
fimull
or
sbb
inc
sbb
test
or
nop
fcoml
mov
jg
movsl
jp
push
xchg
mov
decb
mov
ds
cmp
ljmp
push
movsl
lea
leave
pop
loope
mov
fs
mov
or
fiaddl
add
out
mov
jmp
and
dec
add
bound
jbe
dec
cld
inc
add
push
ja
lret
cmpsl
xor
cmp
xor
dec
and
push
inc
iret
cmp
jp
jge
mov
ljmp
sbb
cmp
pop
iret
aam
dec
mov
aaa
sarb
add
sub
add
loope
lods
sbb
lods
jo
loop
sbb
xchg
adc
jnp
dec
bound
leave
stc
and
sahf
push
movsl
outsb
cltd
inc
and
mov
int3
lret
pushf
lahf
out
cmpsb
fildll
or
xorl
push
loop
jecxz
mov
shll
push
call
xlat
out
dec
sub
xchg
xor
adc
test
mov
std
call
inc
je
scas
mov
bound
int3
stos
std
mov
mov
push
fs
test
aam
push
mov
push
xchg
es
cmc
out
mov
les
shlb
ret
test
mov
push
dec
movsl
sarb
mov
cltd
push
xchg
add
dec
sbb
pop
push
cmp
movsb
out
cmovae
repnz
lcall
xchg
mov
movsl
or
int
xchg
negl
or
ss
aad
pop
cwtl
insl
stos
cli
fadds
xchg
sub
ret
in
sub
inc
jbe
in
ret
pop
jne
mov
imul
jbe
inc
leave
jo
addb
cmp
lds
pop
hlt
sahf
sahf
xchg
jbe
test
mov
test
and
sbb
std
in
mov
mov
mov
mov
cs
cli
inc
pop
lret
aam
xlat
lock
adcl
jge
addl
stc
mov
out
in
push
out
incl
mov
je
mov
addr16
scas
push
jnp
aad
add
in
aaa
jp
bound
push
mov
xchg
int3
and
mov
mov
fistpl
cmpb
addr16
add
into
les
cli
filds
mov
in
add
loope
ljmp
xor
jl
mov
prefetchnta
dec
or
arpl
fsubr
cmp
mov
mov
add
js
ja
fildl
inc
std
pusha
mov
mov
std
outsb
mov
ss
fisttps
fucom
push
cmp
xor
cmpsl
std
mov
mov
out
mov
scas
inc
sti
dec
pushf
imul
jg
mov
or
jecxz
push
push
push
pop
cmpsb
int3
xchg
out
xor
fadd
in
xchg
shll
jnp
jle
jno
imul
fcomi
repnz
lods
pop
cmp
mov
xchg
insl
scas
cltd
lock
push
add
loop
inc
lds
xor
rcll
mov
jg
xlat
sbb
or
pop
fistpl
int
nop
lods
push
lcall
mov
fbstp
ss
ret
mov
bound
xor
dec
mov
scas
rcll
push
out
push
add
add
in
orb
xor
cwtl
out
addr16
xchg
xchg
cmp
and
sbb
inc
jo
push
scas
inc
lods
sub
xchg
fcomip
aaa
adc
mov
pop
xor
fcoml
cmc
or
jmp
mov
fiadds
outsb
in
scas
lods
sub
addr16
int3
inc
mov
repnz
pop
and
lcall
cmp
paddd
pusha
xchg
cld
push
xchg
in
add
mov
mov
and
cmp
mov
push
pop
ficoms
mov
xchg
fsubrp
jnp
cwtl
lret
adc
mov
addl
test
fsts
test
sub
sub
test
pop
mov
jne
pop
fcmovb
rolb
adc
dec
mov
push
in
cmpsb
faddp
sbb
mov
mov
sbb
push
mov
xor
dec
test
cltd
in
push
fisubrs
mov
sub
push
cli
fsubrs
and
lea
mov
and
sub
out
bound
ja
sbb
outsl
in
inc
and
jecxz
dec
or
inc
mov
push
push
clc
lret
push
push
jae,pt
add
mov
lret
popa
cmp
fstpt
xchg
inc
jb
jno
adc
popa
fists
clc
jns
aas
sub
lock
xchg
int
mov
mov
push
imul
cmp
in
aam
jnp
adc
lea
movl
xor
cmpsl
xchg
xor
add
mov
jle
or
pop
cs
addb
mov
push
xchg
sti
inc
cmpsl
mov
lret
sbb
decl
xchg
and
mov
mov
adc
shlb
cmp
mov
sub
lahf
cmpsl
lret
mov
shrl
imul
leave
jg
loop
cmp
pusha
addr16
in
sti
mov
mov
clc
mov
hlt
pop
cmpsb
inc
call
mov
ret
arpl
or
xchg
cmp
jae
stc
nop
bound
in
mov
mov
xor
incb
xor
cmp
arpl
mov
lods
mov
mov
pop
and
pop
adc
adcb
fs
mov
lods
sub
cwtl
inc
inc
loope
aad
jmp
inc
pop
lret
movsl
or
xor
mov
pop
cmpsb
dec
mov
mov
insb
lcall
sub
sbb
pminsw
jno
loopne
imul
xchg
or
das
sbb
or
and
dec
pop
lock
inc
bound
leave
lret
sub
adc
bound
push
jmp
inc
femms
movsb
adc
int
cwtl
push
testl
pop
ds
inc
mov
or
stc
xchg
shl
cmp
sub
mov
add
pop
or
sub
adc
sbb
sbb
dec
dec
lods
es
mov
add
movsl
lret
enter
shll
jae
shll
dec
iret
lock
aam
dec
pop
push
out
clc
andl
push
aad
pop
mov
rcrl
sub
xchg
xchg
sbb
fcomps
pop
dec
cmp
and
enter
add
sbb
mov
jbe
lea
lods
daa
push
loop
mov
mov
pop
idivb
enter
fiadds
add
je
xchg
xor
mov
jae
jg
mov
sub
test
and
daa
pusha
or
addr16
jmp
adc
enter
inc
int
mov
gs
and
jg
dec
imul
mov
push
sbb
mov
lods
lret
fldcw
jg
pop
mov
outsl
enter
fst
repz
cvtps2pi
lods
test
and
jle
add
lock
gs
fcmove
jle
and
lea
outsl
dec
xorl
and
jle
inc
daa
sub
cmp
push
adc
adc
sbb
and
push
daa
ret
popa
ret
aaa
subb
jbe
ss
mov
fdivl
xor
out
mov
ljmp
mov
jmp
lods
pop
addr16
fldl2t
mov
stc
inc
adc
hlt
mov
popa
push
sbb
jl
mov
mov
cmp
mov
repz
inc
out
jbe
fisubl
stos
xchg
adc
fmull
aad
or
es
cmpsl
arpl
addl
mov
cwtl
jo
ret
jmp
mov
movsl
adc
jb
push
movsl
daa
mov
xchg
xchg
hlt
sbb
mov
lods
xchg
testl
push
pop
sbb
mov
pop
push
add
ss
pop
sahf
adc
dec
hlt
jle
push
pop
fldt
adc
jmp
jg
sub
loope
mov
mov
in
cmpsb
cltd
arpl
push
ss
out
loop
out
mov
add
add
mov
dec
cmp
xchg
cltd
dec
aad
jl
push
jge
cmpsl
mov
sti
push
xor
out
aad
ss
cwtl
out
dec
gs
and
testb
call
push
mov
scas
cld
int3
lret
dec
adc
xchg
jne
lock
and
lods
fwait
mov
idiv
sbb
push
adc
push
sbb
mov
adc
sbb
out
test
dec
scas
aaa
jle
adc
sub
sti
test
aaa
scas
movsl
xchg
cmpl
inc
push
xchg
inc
cmpsb
adc
orl
pop
xchg
outsb
mov
lods
lock
lock
adc
pop
add
inc
in
jmp
dec
inc
into
jg
sbb
pop
sub
push
std
mov
adc
jge
push
push
sarl
jbe
sbbb
scas
data16
add
xor
push
nop
mov
into
sbb
add
notb
pop
lea
in
cld
aam
lret
xchg
and
mov
mov
push
jle
add
loope
dec
pop
cmp
sarl
push
lret
ds
movsb
not
cld
leave
inc
pop
shr
pop
sbb
cmp
iret
mov
or
mov
xor
jae
dec
mov
mov
sbb
aam
out
lret
mov
mov
cld
test
sti
jb
bound
test
ret
cwtl
jmp
insl
mov
insl
add
iret
pop
jbe
push
mov
add
fcompl
sbb
pop
lret
ret
pusha
inc
lcall
mov
inc
cmp
sbb
add
add
fsubrs
lds
lock
dec
inc
jmp
inc
sbb
int
nop
aas
lods
push
sub
mov
repnz
insl
outsl
repz
mov
xorb
push
adc
loop
sub
addr16
iret
mov
test
sbb
mov
adc
xchg
push
loopne
mov
mov
hlt
and
mov
repnz
cmp
pop
pop
scas
mov
cli
cmp
loopne
xchg
in
movsl
incb
push
mov
add
mov
dec
push
mov
jo
fbld
push
sub
push
and
inc
into
xchg
cmp
push
xor
aad
sub
cmp
pop
mov
and
pop
mov
orl
xor
xchg
mov
jecxz
mov
xchg
fcomi
icebp
mov
ds
andb
test
xor
lock
cld
ja
mov
nop
fildll
aaa
lcall
fs
push
lcall
outsb
inc
jmp
mov
mov
jg
xchg
sbb
sahf
lret
push
pop
jmp
mov
adc
adc
sbb
sti
xchg
popa
jbe
sub
cmp
jb
sbb
repz
pop
sti
aad
mov
es
insb
aas
aaa
lcall
cmpsb
push
jmp
xchg
repnz
and
mov
rcrb
pop
xchg
cmp
xchg
push
jle
rol
add
loop
jns
inc
lea
insb
jb
decl
lcall
flds
pop
jae
popa
out
and
call
inc
xchg
test
lret
or
adc
inc
aaa
fwait
or
clc
inc
cmp
fs
daa
cmp
jmp
cmpsb
sub
lds
dec
fs
cmc
dec
shl
mov
jl
sbb
aam
jecxz
add
xchg
enter
shl
loop
jns
or
stos
mov
mov
sbb
test
mov
mov
xchg
clc
or
cmpsl
or
fldl2e
dec
clc
add
daa
jbe
lds
xchg
cli
xchg
cmp
mov
and
stc
ljmp
cmpb
dec
pop
test
mov
jnp,pt
or
mov
je
add
fistpll
mov
mov
jae
cmp
adc
jmp
cmc
xor
loope
shll
stc
sahf
je
add
sbb
jno
cli
xchg
stos
movsb
lea
push
pop
pop
cmp
jmp
cmpsl
dec
out
sub
jge
cld
mov
and
fwait
and
iret
in
out
mov
rolb
jae
sbb
push
jmp
adc
or
and
or
adc
push
leave
xchg
mov
jo
std
or
nop
lcall
gs
xor
fistpll
lods
in
in
jmp
addb
nop
ja
pop
mov
inc
mov
data16
jns
mov
mov
push
and
loopne
insb
push
push
push
fimull
ljmp
imul
lret
pop
dec
push
and
cmp
lahf
push
push
iret
cmpsb
lret
inc
das
mov
sub
mov
ss
xchg
shlb
inc
fnstsw
xchg
dec
or
aad
repz
add
in
cmp
jo
aam
cmc
mov
ficomps
js
sub
add
aas
dec
loop
adc
jg
imul
fistpl
lret
imul
hlt
std
sbb
jnp
mov
lock
pop
sub
push
cwtl
call
gs
lds
lret
jne
cmc
jge
push
ret
popf
adc
jb
loope
jmp
mov
inc
xor
pushf
sub
adc
repnz
inc
fidivrs
push
lds
sub
lock
mov
pop
mov
lret
xor
hlt
sub
adc
call
add
inc
test
push
loope
inc
addl
jmp
in
inc
popf
fisttpl
scas
arpl
loope
jbe
pushf
dec
mov
mov
pop
int3
jne
mov
xchg
pop
sbb
std
les
enter
xchg
cmp
jo
jmp
nop
int
test
mov
jo
push
int3
jb
sbb
cmp
es
lea
ret
pop
mov
mov
inc
loope
xorb
fildll
enter
test
imul
outsb
inc
dec
movsb
or
jl
cmp
mov
shrl
loopne
dec
loopne
dec
xor
test
rorl
pop
pop
pop
add
mov
mov
pop
pushf
rorb
mov
sub
popf
in
sti
jl
shll
mov
sbb
les
mov
jno
imul
push
mov
ss
das
or
dec
or
cmp
xor
xor
sbb
inc
jbe
and
scas
sub
loope
xchg
out
ror
nop
inc
mov
int
bound
outsb
fwait
cmp
dec
fisttpll
inc
mov
mov
mov
addr16
or
adc
xchg
push
lods
roll
popa
rcrb
rolb
imul
subb
push
loopne
pushf
xor
lcall
ret
sub
es
dec
adc
pusha
leave
repz
mov
fsubr
es
inc
lods
mov
lods
stc
hlt
test
pop
loopew
popf
xchg
ss
dec
mov
mov
cmp
ss
fistpl
cmp
add
icebp
dec
mov
xchg
sbb
sahf
push
push
ja
aaa
notl
sub
jl
out
dec
imul
dec
inc
sti
testl
mov
mov
fisubl
push
jae
outsl
je
test
jbe
test
jae
push
jne
divl
cmpsl
out
es
rolb
insb
sub
movsb
mov
sub
push
lods
jge
inc
lret
lret
mov
test
sbb
cmp
mov
sahf
xlat
mov
fistpll
clc
insl
es
xor
sub
scas
sub
movsb
fsubp
outsb
or
cmpsl
xor
push
hlt
ficomps
add
movsb
adcb
or
inc
aad
mov
pop
or
hlt
xor
jns
cmp
out
pop
sbb
icebp
test
mov
insl
arpl
push
frstor
xor
iret
stc
out
ja
sbb
mov
push
cmp
sub
push
std
adc
jae
sbbb
xchg
and
cltd
fidivrs
scas
fildl
xor
aad
mov
push
mov
stc
jnp
cwtl
xchg
shl
sbb
push
lds
cwtl
push
or
pop
push
jne
dec
imul
arpl
mov
test
mov
add
stos
cmp
cmp
pusha
and
add
xchg
adc
mov
inc
lods
sbb
les
in
out
sbb
nop
shll
push
js
jbe
insb
in
fldt
shll
ss
inc
stos
xchg
xor
add
test
pop
or
or
aas
or
mov
es
and
xchg
notl
xchg
mov
call
pusha
or
cmp
mov
dec
hlt
test
mov
fwait
scas
or
stos
in
iret
mov
or
mov
imul
imul
icebp
rorb
xchg
push
pusha
mov
hlt
shlb
inc
adc
cmp
dec
cmp
mov
mov
mov
dec
pop
inc
out
push
lret
pop
rol
add
sub
int
mov
push
fcmovb
int
mov
and
cli
iret
sbb
sbb
imul
cmp
sbb
data16
mov
inc
mov
daa
scas
and
int3
sub
cmp
jecxz
push
out
pop
mov
lds
xor
das
stos
jmp
sbb
jnp
inc
sar
jl
dec
mov
push
ja
pop
addr16
jg
clc
pusha
cli
jg
aam
xor
shlb
pop
movsl
pushf
mov
add
mov
popf
add
sbb
addb
in
xchg
mov
fwait
repz
jbe
sbb
and
xchg
arpl
lret
cmp
cli
dec
insb
daa
shlb
xor
pop
es
mov
push
or
jbe
loop
addr16
ja
lret
mov
pop
inc
cmp
idivl
sarl
pop
xchg
jp
add
imul
mov
mov
push
mov
and
jns
fcmovu
adc
iret
mov
mov
sub
jne
jno
pushf
std
push
test
pushf
inc
fs
or
xor
into
sahf
dec
push
imul
lret
lods
sbb
arpl
adc
das
loop
xlat
shrb
push
or
rcl
mov
jg
xchg
and
sbb
push
or
pop
cmp
cmp
inc
nop
mov
jnp
insb
cmpsb
iret
push
clc
lods
scas
or
cmp
xchg
mov
fsts
or
in
add
and
mov
pop
sbb
lods
sbb
lods
inc
ss
add
inc
cmp
ret
test
and
sub
jge
dec
inc
decb
mov
dec
movsb
xorl
std
dec
pop
push
mov
icebp
push
ret
test
pop
xor
dec
pop
insl
sub
adcb
adcl
inc
int
xchg
dec
sbb
cmpsl
dec
ds
mov
lods
sbb
jns
pop
mov
jb
inc
test
mov
sti
ret
aad
or
pusha
inc
repz
jecxz
mov
push
out
and
in
inc
mov
sub
jp
pop
ljmp
cmp
enter
insb
test
les
push
cs
movsl
jb
mov
xor
fisttps
or
inc
or
test
insb
or
xor
fisubs
push
cmc
xor
das
stos
lcall
add
sbb
movsb
mov
arpl
repnz
shl
stos
push
pop
gs
xchg
push
and
jns
and
pop
sbb
mov
rorl
sti
push
fstl
mov
xchg
cmpb
movsb
ret
ja
dec
push
cmp
sub
pop
shll
xchg
adc
imul
xor
popa
loope
leave
mov
insl
sub
test
add
fwait
test
dec
and
xchg
cmp
pushf
jbe
pushf
xchg
push
jl
jbe
sbb
sbb
cld
shrb
scas
and
sub
inc
push
pusha
aas
ljmp
mov
mov
dec
mov
jnp
ret
test
add
sub
sarb
ljmp
or
imul
jo
sub
stos
aam
scas
sub
or
rcl
xlat
mov
lds
inc
sbb
lret
int
mov
mov
cmp
pushf
or
shlb
sbb
push
popa
dec
fs
test
lcall
xchg
js
hlt
sarb
lock
imul
sub
mov
shll
into
rcrb
stos
jp
iret
mov
pop
outsb
or
mov
cltd
sbb
test
sahf
jmp
hlt
int
push
jmp
imul
cmp
cmp
mov
lret
add
mov
inc
cmp
ds
push
nop
pushf
pop
jne
gs
dec
test
stos
hlt
lds
or
test
shll
aaa
and
push
gs
in
pusha
pop
cmp
xor
push
sbb
jp
push
and
jns
outsb
push
loope
cli
fcomps
repz
loope
xlat
jmp
ljmp
test
inc
ret
push
das
icebp
xor
pop
je
inc
daa
push
sti
cmc
xor
insl
sub
repz
inc
mov
cwtl
cmp
fstpl
dec
bound
fcomps
jle
decl
sbb
dec
adc
inc
xor
cld
mov
outsl
aad
mov
fidivrs
jmp
imull
mov
fstpt
mov
ja
aaa
popf
ljmp
xchg
stc
xchg
add
dec
out
jmp
mov
pop
mov
sti
push
pop
mov
adc
frstor
push
cmp
or
in
push
mov
jne
cmp
xlat
mov
xchg
clc
fmul
mov
jmp
paddw
les
jne
jo
les
sub
pop
das
adc
xor
jae
fcoms
repnz
or
lret
pop
cmp
int3
push
mov
push
dec
pop
fcmovnu
or
mov
add
rol
sbb
out
jno
push
mov
pusha
in
mov
mov
aas
loopne
mov
cmp
or
push
scas
xchg
pop
mov
out
xor
fcomi
imul
mov
pop
add
sahf
push
jno
fxch
mov
xchg
aam
int3
mov
push
mov
ficomps
scas
in
push
and
test
sbb
in
and
cwtl
test
adc
fadds
popf
cli
jnp
mov
repz
and
add
adc
sbb
stc
cmp
lods
xor
mov
icebp
lea
sbb
nop
jmp
or
xchg
jle
inc
jb
lods
add
popa
lock
adc
iret
lcall
ljmp
jl
out
in
sbb
or
aas
mov
lea
inc
pop
jo
test
cltd
pop
cmp
mov
in
jge
loope
jmp
lock
bound
ror
adc
jmp
pop
jle
and
notb
outsl
popf
outsl
xor
xchg
nop
out
mov
cli
dec
sbb
mov
and
call
mov
mov
into
pop
frstor
sub
in
stos
add
push
rorl
popf
aaa
call
mov
mov
sbbb
add
push
push
push
loope
testb
gs
shr
inc
cwtl
or
push
sti
dec
int3
mov
jae
repz
dec
add
dec
nop
rolb
or
imul
xchg
mov
in
cli
add
bound
out
out
mov
das
push
jo
push
or
cltd
loope
and
das
ss
push
mov
pop
cli
adc
xor
cmp
pop
adc
test
cmpsb
and
fucomp
sbb
mov
adc
stc
push
test
mov
arpl
sbb
add
loop
aam
scas
pusha
enter
bnd
ja
outsl
xchg
data16
mov
aas
movsb
nop
add
fdiv
or
test
imul
and
mov
mov
loope
and
mov
xchg
les
aad
iret
mulb
pop
push
leave
in
andb
push
addr16
add
push
stc
jp
mov
outsb
out
hlt
pop
xchg
test
lret
aad
inc
or
inc
roll
xchg
jae
push
and
out
loopne
stos
pop
pop
cli
loop
fstpl
cli
ljmp
insb
imul
and
pop
cmp
adc
pop
lea
jbe
aas
loope
and
popa
xchg
mov
in
sub
jg
push
cli
mov
aaa
mov
sarb
push
mov
repz
sar
stos
cmp
fsub
cmpsl
jp
cmpsb
sbb
xchg
jg
incl
dec
ret
dec
je
xlat
add
push
js
addr16
push
stc
stc
pushf
pusha
jne
fidivl
pop
mov
cmp
pushf
repnz
int
fisubrs
les
nop
out
push
or
pop
ret
jle
xchg
and
repz
fidivrs
in
jb
jno
xchg
dec
fstl
pop
loopne
leave
popa
ret
push
mov
mov
cwtl
mov
xor
sub
sbb
movsb
add
or
pop
mov
test
mov
pop
lea
lahf
xchg
loop
in
mov
jecxz
sarb
loopne
cltd
cltd
xor
adc
gs
subl
aaa
mov
loop
pop
clc
movl
mov
lods
inc
addl
sahf
pop
or
sarl
push
dec
mov
lret
aad
and
std
adc
xor
cld
jmp
mov
xchg
out
sarl
mov
mov
dec
cmpsb
cwtl
std
xchg
inc
lods
pushf
xchg
pusha
shrb
xor
cmp
mov
insl
inc
rcrb
cld
xchg
arpl
out
ss
cmp
adc
repnz
jns
and
mov
data16
aam
xchg
mov
into
std
dec
sub
ret
push
mov
aas
pop
mov
ficoms
jmp
push
xor
adcl
push
and
inc
mov
fistps
das
dec
into
jno
test
scas
scas
pushf
or
mov
sbb
xchg
sub
adc
repz
pop
push
push
jne
push
xlat
xor
mov
xor
mov
ss
mov
pop
jge
inc
icebp
cmp
cld
mov
adc
add
divl
mov
subl
adc
cmpsb
insb
cmp
iret
test
cmp
sbb
cs
in
pop
sbb
mov
or
and
adc
lahf
testl
lea
mov
jb
mov
mov
cli
andl
mov
adc
mov
push
inc
jns
sbb
inc
jge
sub
xor
push
jb
mov
xor
in
and
cmp
jle
imul
xor
repnz
stos
fildll
mov
out
fldenv
aaa
xor
loopne
inc
lret
inc
xor
pop
jno
adc
sbb
pop
into
leave
int3
cmp
or
mov
mov
xchg
and
mov
and
je
add
sbb
out
inc
sub
jge
jo
sti
jg
dec
adc
add
mov
scas
ret
adc
dec
ja
sbb
cmp
add
icebp
jne
sbb
enter
pop
dec
jmp
shll
gs
js
std
mov
lret
sub
fs
test
lods
pushf
insl
or
icebp
sub
mov
cmc
xchg
pop
mov
ja
pusha
cmp
cmp
inc
cmp
std
push
sbbb
cltd
mulb
clc
jmp
jp
outsl
or
repnz
lret
pop
enter
push
stos
in
mov
dec
scas
add
cltd
scas
fistps
cmc
jmp
out
push
scas
xlat
rcl
mov
jne
in
xorb
hlt
adc
adc
dec
adc
cmp
lods
cmpsl
and
mov
ljmp
push
dec
xor
or
mov
xchg
cmp
lret
inc
pop
in
jmp
jbe
sarb
add
rcrb
mov
shlb
sub
push
add
sbb
cmp
jae
mov
mov
mov
lods
xor
mov
mov
mov
fnstcw
or
ss
sub
cmp
and
mov
or
repnz
lods
mov
push
sub
push
inc
cwtl
call
repnz
add
or
mov
sbb
and
test
cmpl
rcrb
dec
mov
or
cmp
cltd
add
les
jb
lret
xchg
or
xor
sbb
xchg
mov
hlt
dec
nop
das
jbe
out
dec
dec
lret
adc
mov
into
mov
fsubl
cltd
lock
and
daa
rclb
in
popf
loope
dec
outsb
int
or
arpl
jg
or
add
imul
sbb
cmpsl
je
xchg
fucom
mov
xlat
popa
lahf
cmp
and
xchg
adc
xchg
ret
rcll
jg
push
pop
pop
xlat
pop
imul
push
dec
scas
test
adc
enter
xchg
cs
popa
shll
sbb
hlt
movsb
andb
cmp
mov
mov
pop
movsl
in
icebp
sub
aas
lahf
sbb
imul
adc
pushf
or
cmp
jmp
add
mov
push
inc
rcll
or
std
lret
pop
add
cmpsl
test
jbe
cwtl
pop
fstpl
lret
mov
fucomi
adc
add
std
rcll
jecxz
popa
insb
cmp
dec
pop
jp
dec
xor
mov
xor
adc
mov
add
loope
add
pushf
mov
mov
scas
es
repnz
or
inc
xchg
out
popf
mov
xor
jne
cmp
mov
addr16
mov
mov
mov
add
pop
out
loopne
rclb
movsb
jmp
mov
or
outsl
jns
mov
mov
pop
mov
sub
sbb
push
pop
dec
xchg
lcall
mov
bound
sahf
sub
push
and
mov
xchg
imul
cmp
jns
in
andb
pusha
pop
test
pop
aad
and
adc
testb
popa
jae
mov
xor
in
aad
lret
icebp
push
aam
fwait
xchg
xlat
or
jno
repnz
xchg
pop
repz
dec
sub
xchg
out
and
test
ljmp
or
sub
les
pop
rorb
aaa
adc
push
mov
xchg
pop
xor
js
fsts
cmc
movsb
stc
adc
stc
adc
into
mov
jmp
pop
xchg
mov
not
out
aaa
inc
cmp
ljmp
cmp
sti
je
add
push
out
aad
loop
and
mov
adc
icebp
stos
jle
popf
pop
pop
fs
aam
divb
imul
daa
lahf
dec
mov
inc
fsubrl
cmpb
mov
add
mov
mov
das
gs
and
lods
pop
jno
xchg
movsb
je
insl
repnz
pushf
ja
xlat
sub
fs
fdivrl
or
rcr
lods
xchg
in
push
jb
jmp
push
inc
pop
int
sub
sbb
in
dec
push
iret
push
mov
inc
adc
push
pop
jge
fwait
pop
mov
inc
jp
test
sbb
dec
data16
stos
int
addl
or
jmp
xchg
aaa
cmp
or
in
aaa
movsb
je
add
pop
jae
into
and
fs
jae
add
rorb
inc
pop
out
cmpl
fs
sub
mov
sarb
or
inc
roll
sbb
or
jns
mov
and
data16
mov
cmp
xor
insl
mov
adc
or
jmp
add
loop
test
into
loopne
jo
rcrl
xor
stos
sbb
sub
jl
inc
lret
xor
fsubrl
fbld
mov
mov
push
mov
mov
imul
push
dec
add
jmp
pushf
mov
imul
and
dec
pop
sbb
popf
test
movsl
and
clc
ss
ljmp
imul
aad
rcl
es
sbb
stos
sti
insb
xchg
pop
pop
mov
cmp
inc
jae
int3
add
xchg
jbe
xlat
xor
fsubs
dec
jg
add
push
dec
adc
stc
cmp
push
lcall
pusha
cltd
xchg
mov
sub
mov
dec
mov
adc
sbb
sub
mov
or
cs
gs
pop
push
xchg
dec
add
leave
mov
aaa
cmp
addl
cmc
cmpsb
dec
ficompl
nop
loop
cltd
mov
out
cmp
jmp
dec
imul
leave
adc
cli
frndint
inc
mov
push
inc
pop
ret
push
ds
sub
push
push
test
mov
negb
aad
sbb
or
xchg
into
out
jmp
and
mov
jp
cmp
out
cmp
int3
mov
adcl
sub
repz
icebp
scas
push
jbe
dec
aas
pusha
inc
mov
xchg
fwait
pop
mov
out
inc
cltd
push
subb
xor
jl
push
mov
or
pop
dec
jne
sub
mov
icebp
nop
popf
dec
cmovl
or
sub
icebp
sbb
fimull
shrl
popa
dec
in
in
js
shll
out
loopne
adc
adc
mov
push
jnp
pushf
inc
fmul
sub
mov
push
jb
or
jp
pop
fisubrs
fmull
xchg
popf
mov
inc
add
fsts
outsb
and
dec
mov
push
popa
test
in
dec
fcomps
in
repz
sub
jge
test
cs
jbe
pop
fstps
xchg
xchg
push
iret
loopne
cwtl
mov
pop
push
outsb
sbb
incb
lods
sub
or
cmp
imul
decb
push
cmp
sbb
dec
out
aas
popf
orl
inc
in
inc
dec
xor
jl
cmpl
arpl
movsb
in
outsl
daa
xchg
in
ja
fisttpll
pop
sbb
mov
cmpsl
iret
sub
pop
dec
add
fiaddl
jbe
jmp
push
sub
or
push
xchg
sbb
dec
sub
mov
jg
cmp
dec
out
sahf
aaa
sub
lcall
and
imul
lock
add
popa
cmp
mov
jl
out
into
aad
dec
popf
fs
or
cld
push
mov
cmp
jmp
aaa
push
fisubl
jno
pop
test
xchg
dec
rcll
out
ja
ljmp
jp
repz
daa
lea
fsubl
mov
xor
mov
mov
mov
ret
jno
outsl
jmp
mov
sti
dec
mov
andb
sbb
pop
or
outsb
or
stos
sub
dec
jb
fisubrl
xchg
sbb
cmpsl
fisubl
mov
cs
pop
stos
dec
jnp
jb
stc
aas
jbe
cmpsl
mov
xor
movsl
pop
xor
dec
adc
out
pop
fisttpll
in
imul
cmp
sub
xor
inc
lcall
fldcw
mov
sarb
xor
mov
lahf
mov
xchg
in
js
or
fwait
mov
punpckhbw
xor
xchg
aaa
xchg
inc
nop
push
pop
mov
xchg
and
sahf
fsubrl
add
fmulp
ret
push
es
pop
and
xor
jle
push
jo
mov
push
test
mov
shl
jmp
in
jmp
adc
jo
shl
dec
inc
inc
outsl
jno
test
cmp
mov
sti
add
lea
lret
aad
lods
nop
dec
sbb
pushf
cltd
pop
xor
mov
subl
and
cmp
test
or
lock
das
je
lahf
lea
sbb
push
daa
xor
xchg
cltd
pop
push
insb
stos
sub
add
adc
mov
ja
adc
faddl
lea
adc
adc
frstpm(287
in
das
pop
inc
rcrl
fisttpll
jmp
movsb
inc
cmp
jb
aad
pop
dec
lods
ds
mov
jle
mov
mulb
mov
pushf
jnp
fldl
movsb
pop
popa
mov
xchg
jl
loop
fisubl
cmp
jg
fcompl
mov
out
lret
roll
std
ja
push
jne
sbb
out
outsb
and
sub
pop
jae
cmpsb
push
cmc
cmp
stos
jne
shll
fs
movsb
in
xchg
sti
xchg
sahf
ror
sub
cwtl
push
mov
cmpsl
push
dec
pop
cmp
imul
bnd
add
mov
dec
iret
pushf
cmp
in
loop
mov
cmp
jns
stos
push
cmp
sbb
mov
mov
mov
xor
adc
or
add
inc
mov
jle
add
int3
cwtl
add
pop
xor
cwtl
jno
outsb
je
xchg
xor
fwait
and
mov
push
mov
mov
rorb
add
fisttpll
push
fcoml
and
cmp
aas
push
pushf
jle
in
or
mov
sbb
sahf
movsl
insl
test
lds
out
pop
xor
add
hlt
cld
popf
in
sbb
push
nop
or
sub
fs
mov
int
call
pop
sbb
and
xor
leave
dec
jle
fstl
loopne
hlt
mov
pop
jo
jp
jmp
xchg
jne
or
adc
add
mov
inc
jno
sub
in
addl
loope
jp
xchg
in
in
and
sub
sahf
mov
add
ljmp
fistl
insl
lret
inc
pop
push
cmp
lea
xchg
mov
roll
ljmp
dec
jbe
sub
xor
sbb
and
je
ror
imul
jo
jmp
jp
outsl
ja
shll
ja
gs
js
loope
and
leave
pop
ja
jb
push
and
in
mov
adc
mov
hlt
add
xchg
mov
add
sbb
xchg
inc
int3
inc
loope
mov
outsl
mov
in
movsb
in
lock
int
imul
add
push
arpl
pushl
pop
mov
ds
push
aaa
lock
sbb
xchg
gs
test
cmc
lcall
sbb
decb
push
jmp
xor
mov
cmp
inc
imul
xor
and
clc
rcll
lods
dec
insb
scas
pop
adc
or
mov
jl
xor
dec
std
jle
sub
pop
mov
stos
lds
xchg
sahf
popa
test
cs
scas
pop
xchg
add
das
clc
push
xchg
jno
stos
popa
int3
imul
sar
decl
dec
ret
leave
js
jg
lahf
cwtl
or
fwait
sub
popa
add
mov
xchg
js
xchg
inc
jae
bound
pop
aam
push
scas
or
cmp
leave
add
jne
out
es
sti
shl
fs
xor
popa
push
frstor
add
mov
mov
add
jbe
xlat
inc
aad
ljmp
xor
repz
sbb
jp
push
imul
adc
bnd
shrb
and
push
dec
or
mov
movsl
aad
cs
int3
div
lods
or
add
test
cmp
jns
rcr
or
cltd
dec
mov
add
xchg
pop
dec
jnp
in
mov
jg
gs
lods
xor
aaa
aaa
icebp
mov
inc
int3
ret
ljmp
stc
dec
mov
dec
mov
xor
leave
xchg
cmpsb
mov
iret
ret
sub
xchg
aam
xor
es
enter
popa
aad
dec
cmp
mov
xlat
jge
pusha
cmp
stos
minps
inc
divl
mov
xchg
mov
leave
push
movsl
popa
fimull
pop
add
sub
inc
add
lds
fnstenv
insb
mov
popa
cmp
jge
add
and
inc
xlat
cmp
test
push
sub
lret
mov
or
mov
std
addr16
mov
insl
shrl
xchg
or
add
fistps
lea
mov
add
stos
repnz
in
pop
cmp
sub
add
dec
pop
clc
jmp
mov
sub
cmp
cmpsb
dec
and
ret
pop
push
dec
mov
sbb
mov
push
out
sub
mov
pop
popf
jecxz
cmc
lret
jmp
xor
mov
imul
push
inc
xchg
push
adc
cmp
jnp
or
xchg
scas
mov
and
movsl
aad
cmpsl
addb
mov
mov
je
fucom
jo
in
daa
push
rcl
add
lock
jno
add
fs
sarl
adc
dec
sub
xchg
jo
jns
repnz
loope
mov
cmpsl
scas
jecxz
ret
out
in
out
fdivrs
imul
adc
je
sti
pop
or
or
icebp
jl
add
cltd
into
addr16
dec
add
lret
dec
push
xchg
push
mov
shrl
out
or
jb
dec
stos
push
cmp
je
in
xlat
dec
leave
notl
lahf
mov
addb
aad
mov
std
cmp
mov
inc
insb
out
icebp
inc
add
ret
add
pop
mov
out
inc
pop
mov
movsl
inc
popf
fdivl
and
jbe
sbb
ss
divb
adc
pop
jecxz
ds
dec
cs
mov
push
das
out
mov
pop
mov
mov
sbbb
jp
or
je
xchg
push
fildl
push
sbb
movsb
lods
cli
in
adc
lahf
push
outsb
jl
sbb
jne
dec
jo
and
inc
stos
mov
enter
push
mov
adc
test
rcrb
cld
sbb
xor
mov
mov
add
ja
push
js
lea
sbb
dec
cmp
inc
and
insb
fwait
lds
mov
pop
cs
sbbl
pop
jne
aad
aam
jbe
lods
fbld
cmp
test
cwtl
in
push
push
scas
cmc
cltd
popf
cwtl
adc
and
mov
add
adc
pushf
xchg
mov
rcl
xor
outsb
push
add
insl
test
aaa
mov
ffreep
outsl
jno
pop
popf
jne
mov
and
scas
and
add
jne
and
shr
jmp
inc
stos
js
in
cli
shrb
xchg
push
xchg
sub
cli
loopne
inc
pop
dec
gs
arpl
cmp
cmc
xor
pop
aad
jp
add
cmp
jl
lds
jle
insb
adc
stc
xor
in
mov
mov
sbb
hlt
ret
or
mov
mov
mov
rcr
jp
jp
inc
sbb
loope
icebp
fsubl
loop
scas
mov
punpckhdq
adc
xchg
rclb
or
leave
lds
cltd
xor
pop
and
out
test
fwait
sub
pop
sub
pop
push
xchg
test
pop
xchg
test
js
cmp
ret
cmp
mov
pushf
jb
cmp
lret
andb
fcompl
adcl
bound
xchg
push
xor
and
dec
inc
or
call
mov
sahf
pop
cli
ds
outsb
xchg
call
cmpsb
in
and
dec
outsb
lret
push
cmpsl
xchg
mov
adc
add
pusha
ret
lret
gs
int
pop
aas
scas
jle
sub
sub
xchg
mov
fdivs
sub
lods
sbb
adc
inc
leave
add
mov
lret
pusha
pop
adc
inc
jno
ss
and
pop
add
or
into
outsl
cwtl
out
sbb
or
inc
das
bt
dec
loop
dec
rcll
insb
cmp
mov
push
sbb
cmp
jbe
imul
rcll
sub
xor
hlt
sub
ja
rcrl
jb
pop
int3
mov
out
fldln2
mov
fs
add
mov
stos
add
mov
or
roll
push
adc
fistps
fimuls
or
jg
lods
fdivl
addb
add
out
xlat
fiaddl
mov
cmpsb
test
loopne
jmp
addr16
cmp
cmp
outsb
push
dec
pushf
test
adc
cltd
fmuls
or
jge
sbb
xchg
aad
loope
ret
ret
fs
mov
loope
shll
leave
jbe
inc
jne
xchg
div
add
lret
sbb
orb
inc
mov
sub
pmullw
sub
mov
push
jno
testl
sti
push
outsl
adcb
ja
and
gs
and
pusha
mov
jge
xchg
fcompl
pop
mov
rcrl
loope
lea
hlt
adc
xchg
sub
xchg
push
cmp
fildl
xor
add
sbb
push
add
adc
mov
addb
mov
fdivl
jp
mov
inc
stos
or
movsb
mov
int
add
jb
sarl
lcall
lds
mov
es
push
xor
aad
out
add
lahf
xchg
and
shlb
insw
xchg
hlt
mov
dec
push
adc
cmp
aad
hlt
lods
mov
outsb
add
aas
mov
dec
add
jg
add
and
cwtl
call
lahf
pushf
pop
call
out
inc
pop
imul
or
test
sub
xor
fsts
mov
push
js
push
add
int3
and
pop
mov
adc
cld
cmpsl
scas
xchg
jo
pushf
lahf
nop
cld
test
cli
pop
iret
sub
test
inc
mov
lock
and
negl
add
push
nop
sarb
je
movd
sbb
nop
pusha
fcmovnb
and
xchg
pop
nop
imul
aad
xor
fwait
pop
add
jge
mov
fwait
xchg
jae
xor
scas
mov
daa
xor
lret
pop
ljmp
push
stos
mov
push
test
dec
jmp
stos
mov
dec
pop
sub
data16
xchg
sbb
iret
pmaxub
aam
push
int3
in
icebp
xchg
cmpsl
jns
jg
lcall
mov
xchg
in
xchg
movsb
addr16
and
jp
jo
xor
adc
int
jne
push
mov
mov
dec
jl
mov
push
dec
jmp
dec
jle
mov
pushf
jl
lahf
out
loopne
aam
test
shrl
pop
movsb
sbb
jmp
les
ds
inc
sbb
in
aad
jne
cmpsl
fnsave
cmp
or
lcall
stos
aas
add
xchg
movsl
and
clc
pop
ret
imull
imul
out
mov
sarl
test
cli
loope
lret
hlt
clc
dec
in
rorl
stos
push
inc
loope
xchg
mov
adc
jbe
xchg
fcomps
jns
insl
mov
cmp
ret
xor
mov
mov
sub
xchg
and
bound
test
inc
jno
outsl
cmp
cwtl
stos
push
mov
mov
or
sbb
pop
adc
mov
sahf
das
iret
mov
sbb
cmp
pop
shlb
outsl
jbe
xor
cmp
mov
aaa
cltd
dec
stos
lea
cmp
adc
mov
iret
cltd
or
cltd
sbb
mov
jb
int
mov
push
xchg
adc
xor
inc
mov
icebp
push
or
jge
inc
lret
test
hlt
pop
adc
sbb
pop
gs
sar
mov
push
mov
sbb
ss
push
push
sub
xor
jno
out
mov
cld
cmp
dec
inc
movsl
xor
lcall
dec
mov
lods
pushf
daa
movsl
fnstcw
push
je
shll
lret
dec
lret
jmp
pop
add
or
fldcw
enter
push
pop
out
jne
push
mov
push
and
iret
push
or
jp
add
daa
jmp
xchg
and
adc
inc
cmpb
mov
mov
idivb
dec
xlat
lcall
fldl2e
xlat
outsl
pop
ret
lods
mov
shll
pop
enter
mov
inc
fstpl
inc
jbe
cmp
adc
es
idivb
cmp
idivb
mov
pop
daa
inc
in
out
push
xor
outsl
adc
sub
mov
sub
lcall
dec
jle
pushf
xchg
stc
mov
mov
inc
loope
shr
sbb
jge
sahf
or
mov
test
add
mov
add
dec
and
push
sbb
xor
jb
pop
andl
movsl
aam
popa
cmp
push
sub
or
pop
mov
ret
mov
mov
insl
rcpps
pop
mov
or
pop
xchg
mov
insl
ja
adc
jns
stos
rol
imul
daa
cmpl
push
imul
aaa
and
out
fimuls
movsl
jo
inc
sbbb
fldt
call
jne
sbb
and
mov
data16
mov
push
in
dec
adc
ljmp
loope
frstor
icebp
cmp
call
xlat
dec
fistl
push
or
adcl
cltd
or
xchg
adc
jbe
movsl
and
add
mov
pop
inc
iret
scas
and
xchg
int3
mov
xchg
pop
adc
cltd
in
bnd
pop
lret
insb
shrl
push
xor
pushf
mov
and
clc
inc
mov
and
sub
cmp
popf
pop
xchg
icebp
or
shl
dec
call
pop
push
popl
repz
movsl
pusha
xlat
mov
jg
dec
hlt
clc
xchg
adc
or
rclb
hlt
pop
lds
mov
sbb
movsl
pusha
mov
and
push
rcrb
adc
movsb
sahf
mov
lahf
jmp
sub
cmpsb
xor
xchg
mov
pop
sub
push
or
mov
lahf
and
sahf
mov
ret
lods
cmpsb
sbb
adc
sbb
int3
cmp
inc
pushf
shll
jno
into
jge
rol
movsl
data16
pop
clc
xor
jg
cmpsb
jle
fmull
imul
pop
and
stos
inc
adc
lock
xlat
xchg
cmp
mov
jg
push
mov
mov
popa
adc
adc
mov
loop
data16
adc
test
loop
or
hlt
insb
pushl
addr16
mov
aam
add
popa
push
stc
fs
mov
negb
push
imul
fsubl
int
cmp
dec
jb
bound
int
sbb
cmp
sub
inc
xor
sbb
mov
clc
outsl
mov
aad
shll
test
push
and
fnsave
roll
outsb
adc
adc
sbb
inc
push
adcb
push
inc
cmp
lahf
inc
dec
inc
je
sub
xor
outsl
femms
ss
mov
imul
sub
add
test
in
jb
cltd
out
inc
jb
jb
loope
inc
xor
xchg
lods
lret
ss
cwtl
jp
sbb
or
jbe
xchg
jle
push
in
jl
and
push
mov
shrb
sub
fsub
fs
jne
push
je
push
pusha
popa
mov
rorl
jl
add
or
hlt
movsb
pop
push
mov
out
inc
shlb
xor
mov
clc
xchg
pop
xchg
adc
jne,pn
inc
and
xchg
movsb
mov
and
jg
movsl
add
addr16
filds
xchg
mov
and
popa
sbb
pop
sbb
mov
jo
cld
mov
xchg
dec
subb
icebp
mov
enter
fwait
mov
mov
mov
pop
aaa
sbb
lods
sub
adc
dec
jp
fsub
sarb
test
sbb
or
addr16
push
mov
xchg
inc
insb
cs
push
add
cmpl
adc
xchg
dec
rorb
push
lret
fdivrl
lcall
add
xchg
pusha
out
xor
insb
jae
ret
sbbb
pop
decb
mov
jnp
aam
cld
dec
dec
pop
dec
push
pop
in
pusha
cs
inc
xor
jns,pt
push
loopne
std
sbb
inc
pop
push
mov
xchg
fists
daa
fcompl
jae
jne
cld
dec
pop
xor
out
cli
lods
cmp
test
mov
mov
cwtl
fs
jbe
cmpsb
addr16
ret
jmp
scas
xor
adc
mov
ja
push
mov
xchg
arpl
xor
test
cmp
add
shll
ja
cmpb
scas
jmp
jb
dec
xchg
es
push
outsl
sub
xor
dec
lock
jl
inc
pop
xchg
mov
test
push
sbb
clc
fldt
arpl
pusha
sbb
cli
inc
aam
lahf
fistl
push
mov
or
sbb
test
jecxz
sub
add
iret
scas
fstp
mov
and
pushf
fs
cmp
stos
jmp
fs
dec
add
mov
mov
scas
ret
xor
pop
xor
aas
daa
loop
sbb
dec
push
cmp
loope
jbe
test
jecxz
xlat
xchg
jns
pushf
inc
push
dec
or
roll
lret
cmp
pop
mov
push
insb
sarb
mov
mov
and
sbb
sbb
leave
scas
pop
mov
mov
mov
mov
imul
mov
add
add
and
ror
push
lds
sbb
push
imul
fists
dec
scas
mov
push
xor
or
idiv
ds
mov
and
das
push
sub
mov
leave
iret
sub
stc
xor
cmp
packsswb
movsb
test
movsb
add
std
mov
jbe
jmp
stos
shrb
mov
xor
mov
scas
movsb
inc
adc
dec
cmp
sahf
mul
jle
jl
leave
repz
addr16
and
pop
mov
mov
ss
dec
xor
comiss
add
divl
aaa
call
rclb
jge
lds
pop
stos
mov
inc
dec
lea
and
add
add
xchg
pop
push
inc
cmpsb
sbb
out
inc
sbb
aam
rcl
clc
out
pop
cmpsb
cmp
hlt
inc
pop
push
jo
into
mov
jp
or
nop
cmpsl
mov
jp
cs
xchg
mov
lock
mov
dec
mov
loop
imul
fbstp
lcall
enter
fnsave
jns
scas
lahf
fmuls
xor
cld
pop
mov
or
mov
jecxz
sbb
popa
iret
je
jl
pop
push
in
fs
xchg
adc
lock
test
inc
dec
xchg
sbb
mov
lcall
and
cmp
cmp
sbb
and
push
loop
popf
clc
pop
pop
mov
dec
cmp
add
fistpl
test
mov
bound
popa
out
sbbl
or
xchg
mov
outsb
push
cmpsl
push
pop
rclb
jl
cmc
lods
mov
int
cmc
cmp
int3
movsb
push
subb
jl
pop
ljmp
or
ljmp
pop
pop
ret
mov
in
loope
add
xchg
popa
test
sbb
lahf
out
stos
leave
cmc
xchg
in
pusha
cmc
cmp
fadds
loop
xor
andl
jbe
cmp
aad
add
xor
lret
stos
shr
mov
int3
addb
test
xchg
xchg
push
dec
jl
inc
xor
xchg
mov
popa
mov
jp
movsb
gs
cmpsl
lcall
pop
jge
and
rcll
sbb
push
sbb
xchg
cmp
xchg
int
mov
pop
pop
or
outsl
add
scas
push
je
xor
cmp
fadd
mov
mov
dec
or
out
out
and
scas
in
test
leave
cmp
xchg
sarl
sub
and
fs
in
int
sti
adc
add
mov
das
fcmovnb
fptan
jmp
mov
popf
lret
pop
cmp
sbb
pusha
mov
into
mov
lods
nop
mov
loopne
lret
inc
movb
pop
adc
and
dec
xchg
outsl
dec
subl
dec
jb
xchg
lds
adc
inc
fcmovnbe
xchg
mulb
packsswb
lahf
hlt
scas
das
mov
pop
stc
adc
pop
sbb
push
jle
add
not
xor
mov
lock
fists
dec
jl
aad
adc
xlat
mov
pop
ret
push
lret
mov
sub
dec
out
addb
cmp
mov
sahf
addb
sahf
jle
adc
adcl
cld
fistps
nop
repnz
outsb
icebp
mov
fisubrl
or
aad
std
sub
inc
add
test
fnsave
test
mov
add
jmp
push
out
gs
cld
push
flds
insl
in
jne
push
add
rol
xchg
out
add
cmpsb
xchg
or
imul
imul
push
or
cli
sbb
outsb
or
andb
inc
mov
addb
pop
pop
or
add
lock
push
pop
scas
idiv
ret
lea
into
sahf
and
add
xor
and
push
xchg
mov
xor
out
call
mov
mov
shrl
push
bound
mov
push
filds
les
sub
xchg
lea
dec
gs
sbb
js
add
xchg
pop
lods
push
dec
aad
or
dec
lcall
loopne
sahf
cmp
lea
in
in
cmpsb
fistps
rcr
push
xchg
fidivl
add
fiaddl
dec
test
les
dec
mov
mov
mulb
add
fiadds
sub
xor
and
inc
nop
mov
call
add
fimuls
lock
pop
adc
js
sbb
dec
aad
push
dec
inc
add
test
sarl
mov
cmp
adcb
xchg
test
shll
jmp
mov
cmp
jbe
sti
call
sbb
dec
repnz
dec
test
std
cmc
sub
cmpsl
mov
adc
xchg
insl
cld
repnz
push
mov
adc
jbe
push
fstps
mov
xor
jg
and
hlt
cmp
sbb
mov
in
adc
test
dec
inc
mov
sub
push
push
mov
stc
out
cs
mov
push
ficompl
outsb
or
stos
rol
dec
jbe
mov
adc
mov
lock
mov
mov
sbb
pushf
xchg
adcb
pop
mov
lahf
jle
sarl
and
sahf
mov
xor
dec
out
push
adc
push
push
mov
loope
jo
gs
and
int
jmp
aam
cmp
jge
pop
sub
mov
jge
pop
xlat
psrlw
ljmp
jg
es
mov
and
sti
xchg
stos
scas
cli
test
gs
cmc
and
xor
pop
add
pop
inc
pusha
bound
mov
ror
movb
mov
adc
das
mov
inc
sub
ljmp
insl
stos
or
fmuls
aaa
les
dec
pop
aad
int3
push
jl
fdivrs
mov
fimull
add
enter
push
gs
ljmp
push
pop
jbe
xor
dec
loope
insb
in
fisubl
push
xchg
mov
pop
out
mov
add
mov
add
int3
mov
ljmp
cmp
dec
imul
mov
aam
sub
push
cmp
dec
fadd
mov
mov
aam
add
in
dec
pcmpgtb
lock
jns
mov
ljmp
cwtl
xchg
cmp
sbb
fsubrl
pushf
add
lods
mov
and
outsb
adc
fcomp
xchg
inc
lea
push
mov
lods
pop
sbb
pop
mov
faddl
inc
loopne
sahf
lock
movl
cmp
xchg
mov
push
js
xorl
cmp
idiv
sahf
mov
imul
mov
cmp
xor
pop
xlat
arpl
lret
adc
stos
out
xor
cmpsb
push
lods
icebp
push
xchg
mov
jb
cmpsb
loop
lods
push
mov
out
mov
adc
pop
fs
data16
fdivrs
fwait
clc
or
sub
rcrl
sahf
fdivp
and
insb
jge
enter
cmp
enter
fs
cwtl
std
loop
push
js
dec
xor
sub
push
shlb
lods
enter
jl
insb
ret
incl
mov
pushf
pop
lcall
aad
cmp
or
push
xor
out
adc
fldl
sub
lds
subb
cmp
imul
into
jbe
mov
inc
imul
les
or
pop
push
mov
fld
call
mov
imul
ja
push
sub
aam
push
ficoms
lods
pop
insl
cmp
xchg
imul
scas
or
pushf
pusha
add
inc
jl
xlat
ljmp
push
fwait
sbb
and
jae
add
lods
push
imul
and
adc
lahf
mov
add
loopne
cli
das
xchg
jle
in
pop
sub
fidivl
dec
dec
lret
test
mov
jle
sbb
jg
gs
xchg
jl
dec
movsl
stos
inc
or
mov
dec
push
jb
popf
jp
xchg
mov
push
add
loope
cmp
movsb
ljmp
bound
jp
sbb
rsm
mov
inc
ret
mov
scas
aad
fiaddl
pxor
cli
aam
xor
and
fucomip
loopne
jo
jb
mov
mov
dec
add
mov
inc
aam
or
rcrb
dec
ret
test
sub
cmc
mov
push
push
dec
mov
popa
sti
jno
lea
pcmpeqb
faddp
cltd
mov
loopne
loop
cmpsb
jb
mov
push
aad
push
divps
push
xor
jne
and
insb
fnstcw
ss
add
mov
subb
les
pop
sub
and
pop
hlt
cltd
mov
mov
mov
jno
rcrl
add
adc
push
pop
popf
clc
cmp
sub
decb
ds
pop
xchg
gs
jno
inc
shrl
gs
cwtl
loope
shlb
js
test
outsl
les
push
subl
lcall
fisttpll
test
sarl
popl
std
push
stos
sbb
dec
xor
mov
enter
popl
xor
mov
mov
push
push
minps
sbb
inc
test
or
or
pop
sub
fbld
jl
sub
in
loop
mov
mov
gs
sbb
cs
cmp
sbb
xor
jl
test
in
incl
sahf
push
jg
inc
mov
popa
mov
or
lret
mov
fidivl
xor
je
dec
push
fstpl
sahf
or
aaa
and
sbb
pop
testl
aaa
sbb
jle
repnz
mov
xchg
aaa
popf
addr16
mov
mov
add
sbb
mov
ret
and
loope
popa
or
mov
aaa
sub
mov
je
jmp
add
and
push
stc
jbe
and
mov
push
dec
mov
ret
pop
lahf
sub
add
ret
sbb
or
adc
or
inc
stos
mov
aad
imulb
in
fwait
and
push
bound
enter
mov
in
adc
xchg
mov
movsb
jbe
fldcw
negb
or
ja
xor
jns
imul
std
icebp
xchg
roll
icebp
das
mov
in
jl
fstpl
cmp
jns
mov
cmp
sti
pop
mov
xor
pop
xlat
shrl
fadds
out
adc
push
xchg
sub
xchg
imul
mov
mov
fdivl
in
add
fisubs
mov
jge
dec
jge
push
mov
inc
add
dec
jns
mov
pushf
into
pop
sub
das
cmpl
push
and
xor
cmp
dec
pop
jp
inc
in
cs
sub
xchg
in
cmpb
mov
sti
mov
fadds
xor
rorl
jp
inc
loopne
pop
adc
pop
inc
mov
arpl
inc
and
mov
add
leave
cmp
mov
lahf
inc
or
daa
daa
icebp
pop
pop
xor
jns
cmp
ret
dec
add
inc
and
outsl
fstpl
and
sub
aam
imul
push
movsb
sub
adc
pop
int3
push
dec
aam
clc
mov
ret
or
xchg
fmulp
or
cmp
pop
out
flds
fsubp
sbb
cmpsb
and
fiadds
pop
dec
dec
mov
cmp
jns
lea
outsb
mov
adc
jge
push
jne
loop
pop
pop
dec
sbb
cltd
stc
and
nop
sub
push
dec
xor
sub
pop
dec
clc
mov
push
adc
cmp
pop
lods
ret
mov
and
and
mov
jne
insb
adc
inc
xchg
mov
xchg
or
sar
pusha
hlt
mov
enter
lods
nop
call
mov
loop
push
push
fsubl
fsts
outsl
scas
adc
cmpsl
stos
es
jl
xor
sub
es
imul
arpl
push
sub
jg
lock
fisttps
mov
pop
pop
sti
pop
add
adc
nop
fstl
cmp
insl
xor
mov
push
hlt
loopne,pt
mov
or
inc
test
fdivs
xchg
movsb
cmc
pop
popa
not
loopne
test
jo
mov
cs
jp
push
cwtl
sbb
inc
mov
adc
popa
test
movsl
xchg
sub
mov
hlt
push
mov
cld
sarb
rclb
push
push
jecxz
xchg
outsb
cmp
out
sbb
or
sbb
into
fnstsw
enter
mov
in
lock
cmp
add
cmc
dec
xchg
mov
popf
cltd
into
cli
jp
jb
loope
jp
adc
jo
xor
jecxz
mov
sbb
stos
imul
cmpsl
jle
add
insb
mov
in
push
stos
push
dec
jno
vpminuw
in
daa
sysenter
int3
ficoml
push
xchg
into
or
cmp
sub
call
pop
xchg
inc
in
imul
jmp
nop
jmp
lods
jmp
das
add
nop
dec
ss
cmp
fcmovne
stc
test
pusha
push
out
cmp
das
dec
pop
test
add
mov
lods
push
cmp
xchg
testl
fwait
ljmp
add
push
shlb
cmpsb
adc
mov
cmp
sbb
negl
pop
scas
or
dec
dec
jbe
push
loop
fcmove
pop
add
loopne
jns
mov
or
sub
lods
cmpsl
iret
mov
mov
sub
fstpt
push
pop
movsb
adc
movnti
shll
and
xchg
cs
jge
cmpsl
sahf
test
sbb
insl
in
fsubl
pop
imul
jne
ss
out
push
pop
cmp
and
outsl
std
idiv
cmp
xor
ffree
or
mov
ret
scas
lods
xor
arpl
inc
xchg
repz
daa
sub
int3
adcb
sbb
mov
mov
bound
jmp
mov
test
jb
lcall
adc
iret
outsb
pop
call
stc
ror
push
pushf
jge
lods
push
lahf
or
shl
sub
inc
inc
or
insb
jecxz
lds
and
daa
adc
push
ss
fst
cmp
leave
enter
push
cmp
fdivs
call
jp
and
test
popf
cmpsb
jge
xchg
xor
imul
lcall
test
test
add
lds
or
lcall
das
mov
nop
imul
mov
sbb
xchg
adc
fwait
outsb
outsl
xor
popl
xorl
mov
sahf
sub
pushf
mov
les
pop
ss
sbb
rorb
imulb
xlat
cmp
aaa
sbb
pop
std
jbe
das
outsl
dec
mov
flds
jno
push
imul
popa
out
fnstsw
push
push
inc
pushf
xchg
adc
pop
lret
movsl
or
jb
repz
cltd
fsubrs
flds
push
lret
xor
rolb
add
jmp
fcomps
or
das
clc
cmpsb
mov
pop
jb
popf
ja
cmp
fstl
ficompl
int
dec
pop
mov
pusha
sub
push
xlat
cmc
pop
aam
cmpsl
mov
cltd
iret
hlt
adc
ret
mov
out
mov
addb
loopne
jl
push
pop
fsubl
dec
data16
mov
push
loopne
adc
jo
push
xchg
les
fmull
iret
rcr
dec
adc
or
js
push
sti
dec
aas
fcompp
xchg
imul
push
ret
inc
ja
sarl
dec
popf
lcall
jmp
inc
iret
sti
xor
push
push
mov
push
mov
sub
int
dec
shrl
and
push
cmpsl
jl
fnstcw
and
push
hlt
shrl
stc
sbb
xchg
call
call
mov
addl
push
pop
jmp
notl
add
mov
hlt
cmp
jbe
fisttpl
aam
and
lea
movsl
push
test
int3
lret
pop
inc
stos
cli
ss
jo
mov
mov
into
sbb
je
dec
pushf
loopne
pop
inc
mov
add
or
imul
jb
fs
mov
pop
arpl
movsl
push
pop
mov
jp
cltd
shrl
lret
vmwrite
rorl
fisubrs
outsb
xchg
rol
pop
enter
jg
loop
mov
je
out
adc
gs
scas
mov
mov
fstpt
test
xchg
std
popa
mov
cltd
int3
mov
rolb
test
mov
int
mov
out
cmpsl
jno
movsl
pop
cs
out
cmp
dec
inc
rclb
stos
lods
bound
adc
sbb
jno
cld
loopne
add
push
cmp
xchg
sub
sti
in
or
adc
or
and
adc
loop
in
mov
loop
inc
rcrl
mov
mov
imul
jmp
test
call
lahf
mov
cs
push
pop
mov
adc
inc
inc
cltd
movsl
aam
jbe
xchg
adc
test
movsl
sub
sub
xchg
or
pop
rcrb
ret
xor
movsl
sub
fs
fistpll
sbb
jb
pop
or
sbb
adcb
jge
ja
xchg
shlb
inc
push
dec
add
jmp
push
cmp
insl
cmp
aas
mov
loop
pop
lret
sub
pop
add
test
mov
mov
into
hlt
inc
movsl
push
das
adc
ret
adc
pop
aam
cvtpd2dq
xchg
sbb
out
das
sahf
jl
out
divl
lcall
leave
ret
pop
pop
pop
adc
loopne
ret
sub
test
data16
or
mov
out
mov
push
xchg
outsb
lret
and
scas
shll
xor
push
mov
ljmp
add
mov
or
mov
inc
push
xchg
cmp
imul
xor
dec
push
cmp
in
and
je
xchg
loop
jmp
aaa
and
mov
pop
sbb
lock
xchg
pop
inc
iret
mov
xchg
sub
icebp
jp
add
jp
mov
dec
fldl2e
mov
dec
sbb
ret
test
push
icebp
cld
xchg
ljmp
shrb
sub
add
and
insl
mov
scas
xchg
and
testl
dec
es
add
push
cli
xor
xchg
mov
mov
idivl
xchg
stc
adc
lock
xchg
shll
sbb
testl
jns
pop
mov
pop
rolb
insb
push
xor
bound
push
dec
test
fbld
sbb
cwtl
aam
dec
divb
inc
je
fmuls
sti
outsb
push
js
out
inc
adc
daa
cmp
scas
mov
pop
cmpb
jno
inc
mov
lods
add
or
mov
orb
insl
movsb
inc
outsb
mov
mov
test
add
arpl
addr16
mov
fistpll
or
inc
or
pop
sbb
sbb
mov
jmp
mov
outsl
push
cmp
bound
xor
lret
push
cmp
mov
popa
jl
pop
or
stos
jnp
jnp
pop
pop
jns
mov
loopne
mov
pop
jmp
pop
fcomi
movsl
xchg
push
cwtl
xchg
mov
shrl
sti
add
jnp
xchg
lret
jmp
scas
dec
enter
call
xchg
fldt
pop
mov
or
mov
dec
outsl
jl
sti
push
fstl
add
idiv
adc
movsb
clc
into
imul
cmpsb
sti
out
sahf
pop
xor
pusha
repz
popa
dec
loop
fidivrs
call
fists
cld
adc
repz
xchg
ss
lods
jnp
outsb
in
add
or
jb
inc
cmp
mov
sbb
test
push
inc
movsl
adc
sbb
inc
negl
les
data16
mov
push
add
lods
jle
jbe
fsubp
xor
imul
add
push
test
fidivl
dec
out
int3
and
sub
sbb
push
pop
data16
push
mov
rep
lods
cld
push
cmp
test
push
mov
or
xor
int
fimull
mov
adc
popf
sub
aad
dec
cmp
push
daa
lea
push
rcrb
aas
sub
add
push
iret
cmp
jae
test
insb
nop
jl
es
inc
push
inc
nop
add
idivl
cmpsl
push
push
add
sbb
xchg
loopne
idiv
mov
lahf
fistpl
lods
mov
repz
push
ja
or
xchg
cmp
lea
xchg
fs
push
xchg
adc
adc
std
cmp
stc
fldt
mov
pop
inc
aam
jge
dec
cmp
dec
psubusw
or
cmpsb
push
filds
xlat
or
mov
and
into
mov
jg
jne
popa
aad
outsb
insb
add
cmp
shrl
mulb
test
mov
test
jne
mov
repnz
daa
mov
push
notrack
and
movsb
inc
jge
jb
push
icebp
lret
mov
data16
loop
stos
push
sbbb
shll
cli
lret
in
in
jb
cmpsb
out
mov
int3
mov
cltd
mov
cs
xor
xchg
sbb
lods
push
xchg
xchg
add
scas
dec
cmp
mov
pop
jne
hlt
cmp
xchg
push
shlb
sbb
cmc
fstpt
jecxz
sti
jg
dec
sub
sarb
inc
sbb
shlb
dec
sbb
sub
or
xor
mov
addr16
fsubrl
sti
in
loopne
fs
aad
add
sub
sub
lret
add
mov
insb
lds
jp
ss
dec
fcomps
movsl
int3
sahf
mov
lds
xchg
push
out
mov
jno
iret
dec
sub
scas
sub
pop
mov
push
imul
ljmp
mov
jmp
jl
mov
jp
mov
push
push
mov
aaa
shlb
mov
fidivrl
lds
xchg
cmpsl
dec
dec
xchg
adcb
imul
int3
mov
sub
push
insl
push
mov
and
repz
xchg
jns
inc
add
push
ret
test
test
pop
ret
inc
movsb
push
adc
jnp
das
xor
xlat
and
popa
fnsave
mov
jnp
and
ret
and
add
sarl
repz
outsb
in
in
add
ret
pushl
stc
int3
and
shrb
pop
dec
xor
lahf
clc
cltd
sti
repz
cltd
and
mov
jns
or
adc
push
jge
sbb
mov
mov
pop
outsb
shr
call
mov
pusha
into
out
adcl
push
adc
ja
pop
aad
or
cld
fmull
and
mov
xchg
aam
ja
movsl
scas
adc
mov
adc
loope
pop
adc
sbb
fcmovu
out
movsb
lahf
mov
mov
mov
dec
inc
shlb
mov
jbe
fldcw
mov
or
sti
xor
xor
add
gs
mov
cs
stos
aad
inc
ss
fwait
aad
outsl
add
popa
aas
ret
push
arpl
jno
testl
jnp
and
in
stc
in
push
stos
aad
inc
lock
and
cmp
cmp
outsl
pop
stc
cmp
icebp
xchg
jecxz
stos
scas
fucomp
ret
push
lea
mov
pop
adc
stc
sbb
mov
push
lret
adc
nop
jne
and
rcr
hlt
inc
adc
insb
dec
xchg
dec
addl
mov
mov
inc
dec
cmp
mov
add
push
jne
xor
push
lea
enter
push
nop
ja
ret
mov
fadds
arpl
mov
in
sub
sbb
arpl
inc
sub
stos
sub
xchg
stos
mov
rolb
jno
jp
leave
add
dec
lock
notb
add
cs
shlb
jmp
mov
jge
fsubrl
xchg
xchg
pop
push
sbb
stos
lock
inc
dec
mov
jbe
xchg
fildl
push
dec
inc
pop
test
sbb
mov
sarb
mov
lods
sbb
orb
sbb
xor
and
cmp
cmp
and
ja
sub
ret
xchg
xor
add
add
xor
inc
in
lahf
aaa
xor
lahf
sbb
ljmp
mov
orb
in
je
aad
jae
jo
sbbl
fdivs
or
add
and
or
push
rol
pop
or
add
push
sub
jecxz
cmp
push
xchg
ja
iret
pop
out
idivl
xor
mov
dec
dec
jns
mov
sbb
js
es
or
pushl
test
xor
push
add
out
lret
leave
mov
sti
sub
iret
pusha
loopne
xchg
in
out
add
addr16
dec
fdivr
insb
or
adc
add
pusha
mov
sbb
dec
shl
mov
xlat
mov
jmp
jb
ficomps
movsl
mov
pop
push
into
dec
push
call
sbb
xorl
mov
inc
outsl
mov
mov
fcompl
daa
lahf
push
inc
dec
test
lret
sbb
dec
mov
sbb
pop
enter
mov
in
cmp
shr
sub
inc
pop
imul
enter
or
add
pushl
mul
mov
stos
scas
adc
pop
data16
loopne
and
movsl
fldl
sub
aad
lret
idiv
jmp
aad
pusha
dec
mov
add
pop
lods
push
mov
and
pop
inc
sarl
xor
xor
mov
pop
xchg
fs
adc
mov
rorb
lret
jg
rorb
loope,pt
je
scas
mov
scas
sub
adc
ret
push
lret
cltd
iret
mov
pop
pushf
mov
and
jno
mov
lea
iret
push
mov
mov
mov
xor
aas
add
jecxz
or
sbb
xlat
into
mov
xchg
test
mov
cs
cmp
sahf
pop
mov
push
aam
mov
roll
mov
int
xor
pop
test
xchg
push
mov
filds
mov
hlt
int
ja
mov
inc
js
lods
xor
aas
lcall
test
inc
or
popf
mov
pushf
mov
dec
daa
inc
int
mov
stos
mov
popa
pop
ret
into
jge
push
mov
cmp
addb
aam
test
movsb
adc
pusha
call
pop
dec
outsl
popa
fdivrl
inc
mov
dec
add
and
cs
clc
test
and
mov
ds
imul
test
pop
repnz
scas
jnp
in
filds
push
ret
xchg
or
cmp
adc
jne
insl
rcr
xchg
icebp
dec
out
push
adc
mov
mov
lret
mov
xchg
cwtl
pop
imul
adc
xor
dec
cmpsl
clc
dec
int
je
mov
add
fs
sub
popa
das
out
sub
inc
mov
pop
mov
leave
lods
outsb
aad
mov
fs
int3
js
xchg
shll
mov
pop
or
xrelease
add
es
mov
dec
or
clc
cmp
add
adc
xor
gs
cld
into
cld
inc
mov
mov
sbb
insl
movsl
xor
or
scas
ret
hlt
sub
push
xchg
pop
inc
imul
xor
imul
mov
sbb
mov
pop
lcall
dec
ror
test
gs
stos
ret
pop
sbb
sub
pop
stc
cli
cmpsl
mov
cmp
dec
sbb
rcrb
sub
out
stc
test
add
loope
xor
mov
outsb
les
adc
dec
and
add
xor
jmp
mov
inc
negl
xchg
jl
repz
and
cmc
inc
sbb
pop
es
cmp
decb
repnz
imul
lret
xor
xchg
cmp
adc
sbb
push
pop
aam
test
adc
mov
xor
push
imul
jmp
jns
data16
cmp
cmc
jo
je
jns
inc
mov
pusha
mov
cmp
push
jecxz
push
pop
xor
fiaddl
outsb
popf
jg
cmc
hlt
fisttps
jns
nop
mov
sub
pop
dec
stc
pop
sbb
fiadds
push
in
insb
mov
sbb
add
into
out
jl
xchg
and
ja
out
or
jno
lds
add
inc
add
clc
sbb
arpl
cmp
cmpsl
dec
jno
cmc
sub
push
lea
inc
pop
or
push
divl
cli
enter
cli
cli
daa
imul
test
sarb
lea
mov
repnz
test
aad
push
ja
jnp
lods
push
ljmp
pop
enter
or
sbbl
mov
addr16
and
andl
push
cmpsb
inc
lods
movsb
cmp
shl
mov
or
call
test
cmp
and
push
out
mov
scas
dec
std
add
mov
pop
adc
xlat
mov
pusha
pop
loopne
push
push
mov
pop
movsl
cwtd
mov
jo
bound
rorl
popf
shlb
and
stc
xchg
adc
xor
lds
mov
cwtl
cmp
xor
xchg
arpl
out
stc
pop
mov
mov
and
adcb
push
mov
fcompl
xchg
pop
jp
jno
or
dec
js
cmpsb
dec
inc
mov
imul
pop
iret
sub
dec
xor
mov
iret
adc
lcall
jl
fnsave
mov
shr
out
es
jecxz
jnp
je
sahf
stos
dec
lcall
mov
clc
mov
shr
xlat
bound
cs
mov
ljmp
cld
jg
pop
jb
sbb
stc
dec
cmpsb
xor
xor
ret
mov
dec
jnp
mov
inc
ret
leave
ja
mov
push
inc
hlt
imul
mov
dec
adc
jg
ror
std
imul
lods
out
ror
data16
std
dec
mov
call
cltd
ljmp
and
mov
inc
movsb
ss
and
fstps
mov
cmp
push
cmp
cwtl
sbb
inc
adc
ss
mov
push
stos
or
fucomi
ret
dec
hlt
jnp
int
push
cmp
inc
inc
add
xor
aad
mov
xlat
inc
cmp
xor
xchg
sbbl
shll
inc
push
inc
cli
aad
test
jle
and
jb
fisubrs
in
or
out
into
xlat
cmp
push
cmp
mov
adc
lock
pop
rolb
sbb
jbe
and
push
sub
jae
fcoml
loopne
es
mov
or
icebp
mov
jmp
jge
sub
push
pusha
ja
xchg
cmp
scas
push
ret
aam
in
scas
es
outsb
mov
sbb
mov
or
or
int3
inc
mov
jno
dec
fs
add
fstpl
push
dec
out
and
aad
loop
or
sub
lahf
jo
xor
pop
add
pop
ret
inc
dec
adc
and
aam
xchg
out
push
xchg
leave
scas
or
movsb
add
out
xor
call
inc
inc
in
lock
jbe
xlat
orl
adc
loop
jecxz
push
inc
cmpsl
jns
daa
xor
mov
inc
cmp
arpl
das
fwait
icebp
dec
mov
xor
and
xchg
sbb
aaa
pusha
mov
outsb
insl
sbb
test
loope
xor
inc
dec
gs
fdivrs
ljmp
xorl
rol
ret
mov
inc
pop
jnp
xchg
cltd
ja
or
sub
and
nop
cwtl
push
repnz
sbb
loopne
cmc
or
or
mov
in
sbb
stc
adcl
arpl
cmpsb
pop
adc
popf
bound
rcll
jae
jno
fcompl
movsl
incb
push
and
mov
sbb
dec
outsb
call
xchg
jle
dec
push
cwtl
jnp
mov
mov
mov
dec
add
fstps
fstpl
jno
arpl
stos
sbb
add
dec
lcall
and
hlt
outsl
stos
push
inc
aas
xchg
jge
icebp
jecxz
push
out
shrb
xchg
out
outsb
sahf
cltd
int3
dec
mov
movsl
xlat
xchg
mov
xlat
or
push
std
sarb
std
push
add
xchg
xchg
lahf
cs
inc
sub
sahf
mov
push
mov
cwtl
cmp
inc
pop
jge
outsb
and
xor
push
jae
xor
leave
mov
loop
cmp
lods
loope
push
adc
stc
jecxz
or
call
cs
push
cmp
loop
add
adc
jge
clc
fnsetpm(287
cmp
fwait
or
mov
aad
jle
jb
lahf
cmc
lahf
into
es
inc
jg
xchg
pop
push
xchg
push
jnp
out
nop
or
scas
xor
inc
out
mov
mov
and
xor
add
pop
mov
or
sahf
mov
push
sahf
fsub
inc
adc
std
out
xorl
in
push
test
push
jae
outsb
push
and
mov
in
lret
ds
sbb
lods
jmp
fld
xchg
xor
out
xorl
xchg
jbe
sub
out
sub
inc
pop
outsl
mov
and
mov
incb
ja
xor
adc
aam
test
mulb
add
and
outsb
movsl
push
cmp
jb
bound
and
in
or
sti
mov
jo
fcmovnbe
xor
popa
push
xchg
push
pop
sti
mov
rcrb
out
mov
and
stc
and
adc
ficoms
je
ss
test
fistpl
rol
xchg
inc
lods
xchg
inc
sub
mov
shlb
xchg
lods
inc
mov
repz
pop
gs
mov
cs
lcall
xchg
push
in
mov
mov
movsl
xor
les
rorl
pop
addl
add
push
mov
je
pop
or
hlt
daa
pusha
push
dec
xchg
push
xor
sub
xor
sbb
mov
push
mov
call
fninit
xchg
jp
int
pop
enter
rol
adc
aaa
movsb
dec
call
add
adc
pop
ficoml
lods
aaa
cltd
ds
rol
aam
pop
jp
insb
ss
mov
or
lret
mov
push
jge
adc
pop
jge
test
nop
or
std
and
sbb
aas
out
xchg
aas
imul
data16
sbb
test
push
fadds
sub
sub
cmp
jl
mov
stos
mov
xchg
push
lcall
aas
rcl
pop
mov
rclb
ljmp
pop
or
aam
in
cltd
mov
push
cs
or
sbb
loope
xor
cmc
sbb
push
dec
in
iret
gs
ret
pop
xor
icebp
jmp
and
xor
push
xchg
xor
adc
in
mov
outsl
cmp
sub
push
mov
xchg
movb
mov
push
add
xor
pop
push
or
in
sbb
lret
or
je
arpl
add
mov
cmp
adc
cld
sbb
adc
inc
rcl
in
or
cwtl
popf
add
push
mov
cli
repnz
sti
push
data16
add
mov
shlb
pop
pop
push
je
mov
loopne
xor
ds
dec
cmp
ret
add
enter
jecxz
cld
xchg
adc
movsb
jne
sbb
clc
mov
iret
dec
cmp
fs
dec
inc
call
dec
out
inc
loope
fistpll
push
jge
orl
pop
push
popa
pavgw
loope
adc
adc
push
lahf
inc
testl
inc
adc
fisttps
dec
or
addr16
subb
jmp
data16
sub
inc
xor
push
xor
popf
inc
sbb
push
and
dec
fldcw
js
adc
mov
insl
frstor
nopl
xchg
push
lds
mov
ja
inc
or
cmp
popa
lods
and
add
adc
push
sub
int3
in
nop
mov
les
out
add
inc
test
sub
jle
mov
jbe
sbb
inc
int3
jge
pop
cmp
xlat
dec
sub
sbb
add
add
add
jl
jno
mov
mov
das
sub
push
clc
imul
repnz
push
and
sbb
fists
test
enter
lock
mov
in
test
jae
adc
adc
jns
pop
je
lods
sbb
in
cmp
or
sbb
dec
pop
int3
sahf
cmp
in
mov
push
jle
mov
xchg
sarl
sbb
outsb
pop
adc
inc
mov
repz
or
pushf
mov
out
xchg
in
mov
andb
cltd
mov
mov
pop
in
sarb
adc
sbb
push
mov
je
test
xchg
and
xchg
cltd
leave
outsl
cmc
or
add
incb
mov
aas
stos
clc
movsb
cs
lea
in
addb
fwait
js
scas
inc
dec
dec
arpl
push
inc
mov
jmp
mov
mov
enter
xchg
jg
cmpsl
aam
mov
mov
popl
push
sub
pop
push
xchg
rcll
fstps
mov
incb
aas
inc
or
mov
pop
cltd
and
imul
sub
call
hlt
out
cmpsl
sbb
lcall
loopne
mov
or
cld
sub
adc
jmp
sahf
push
xlat
jmp
and
add
xchg
xor
push
pop
fcomps
movsl
push
int3
adc
ds
mov
lods
shll
fstp
xchg
jge
push
xor
and
xor
cmp
xlat
mov
orl
lret
adc
shlb
cli
cmc
cwtl
imul
mov
mov
dec
and
test
mov
cwtl
shll
fldl
movsl
and
mov
sub
ret
ss
sub
mov
loope
mov
dec
inc
mov
mov
sub
cli
xchg
jge
push
dec
lret
mov
push
jecxz
adc
iret
xchg
jbe
lcall
inc
mov
movsl
or
mov
add
int3
fisubrs
inc
xchg
inc
fstl
sbb
xchg
mov
popa
and
xchg
inc
mov
pop
xor
stos
cmp
jl
in
sub
jns
sbb
fldcw
bswap
push
imul
mov
ja
mov
int3
sbb
xchg
movsl
iret
jae
sbb
and
xchg
icebp
pop
les
jns
jnp
cmp
loop
clc
mov
dec
adc
bound
pop
adc
push
popa
jl
sti
sarb
cmp
lcall
aam
add
jb
mov
mov
mov
adc
das
lahf
xchg
mov
cmc
das
mov
fsubr
lahf
cltd
inc
cmp
add
ljmp
jmp
mov
dec
roll
sbb
sub
enter
mov
rcrb
mov
and
scas
jmp
and
psubsb
idiv
inc
or
test
test
leave
cmc
jle
test
push
and
xor
jo
mov
inc
jp
mov
dec
jle
jge
rorl
mov
cmp
dec
push
jbe
sub
data16
popf
adc
clc
in
xchg
lods
inc
ljmp
scas
or
imul
fcomp
lret
xor
or
push
xor
gs
es
in
mov
adc
dec
aad
test
push
in
xchg
xor
out
fdivs
mov
xchg
clc
js
or
add
mov
es
cmpl
int
adc
jl
das
mov
mov
lcall
ret
insb
jae
lock
nop
xchg
movb
and
das
push
pop
loopne
pop
jo
test
stc
or
mov
pop
fidivs
outsb
daa
xchg
push
push
leave
jl
inc
ret
pop
jae
fnstsw
mov
rcrl
mov
dec
das
shrb
sub
lods
cmp
lea
add
mov
and
sbb
jl
push
clc
adc
and
push
sti
mov
movd
sub
ja
orb
or
dec
push
scas
cwtl
pop
movsb
xor
jmp
aaa
mov
sub
dec
mov
push
pop
xlat
cmpl
pop
loop
sub
int
aaa
test
jg
mov
dec
push
pusha
movsb
push
push
pushf
cmpl
dec
icebp
ja
fldenv
repz
repz
jmp
movsl
dec
fsubrp
rorl
push
xorl
mov
mov
sub
sbb
cmp
push
arpl
mov
shrl
insl
mov
inc
mov
movsb
adc
push
or
outsb
in
adc
xchg
cmp
xchg
add
mov
dec
ja
dec
sub
mov
lods
cmpsl
cmp
ds
out
jecxz
fiaddl
mov
or
mov
jns
xchg
outsl
jno
xor
mov
imul
mov
pop
sarl
enter
jno
dec
push
shlb
mov
sarb
vxorps
jno
sti
inc
dec
fistpll
jmp
or
cmp
mov
fildll
notb
mov
xchg
adc
aad
adc
leave
mov
fcmovnb
xchg
sahf
mov
inc
in
aaa
mul
xchg
xchg
adc
shll
leave
repnz
ljmp
add
stc
pop
jmp
cld
cwtl
inc
xchg
mov
nop
fabs
mov
xchg
ds
cmpsl
jg
or
pop
cmp
dec
pop
pop
or
pop
movsb
or
adc
pop
je
cmc
pop
sbbl
sbb
test
arpl
ficoms
test
sbb
cmp
pop
push
subl
insb
pushf
and
push
push
in
jge
xor
cmp
out
nop
xchg
movsl
add
xchg
insl
popf
jnp
lods
nop
das
lret
jge
mov
push
xchg
add
out
add
iret
mov
in
dec
mov
sti
mov
lea
inc
sbb
jbe
mov
test
cmpsl
iret
mov
gs
ja
and
or
push
hlt
sub
push
mov
sub
ds
add
cmc
mov
pusha
inc
xlat
sub
and
mov
out
jecxz
xor
in
aas
pop
mov
jbe
sub
pop
adc
js
std
int3
add
jmp
ja
lahf
roll
lock
lret
shr
aas
test
pop
rorl
push
and
add
lahf
sub
mov
xchg
push
in
jae
sub
fcomip
pop
or
inc
push
jae
repnz
testl
push
mov
movl
cltd
mov
int3
cltd
xchg
jle
jns
fidivrs
les
mov
stos
in
xchg
xchg
pop
fsubp
adc
jp
jbe
movsb
lahf
mov
sti
shlb
es
jns
xchg
sub
inc
lcall
hlt
dec
jne
push
push
or
outsl
hlt
cmc
xor
arpl
outsb
pop
jb
fmuls
push
cmpsl
jo
pop
jns
insl
cmp
push
lcall
xchg
mov
sbb
lahf
in
add
fdecstp
jmp
int
cmp
imulb
icebp
cmpsl
mov
and
imull
xchg
imul
inc
mov
xchg
push
sub
aas
adc
icebp
lcall
fs
aas
mov
lcall
push
pushf
dec
das
mov
pop
inc
pop
dec
dec
int3
insb
dec
sbb
or
cmpsl
roll
inc
cltd
scas
shrl
rorl
and
lds
push
pop
xor
jo
inc
dec
stos
jne
pop
scas
adc
stos
repz
or
ja
mov
dec
sub
pop
push
dec
sub
ret
add
mov
ficompl
les
or
mov
sbb
loope
pop
cmp
xchg
in
test
dec
xchg
inc
in
mov
sbb
adc
mov
mov
sub
and
xlat
lds
pop
pop
add
add
pop
sub
sbb
scas
in
test
cmc
pop
dec
int
lods
out
sbb
sbb
cltd
std
call
call
and
in
and
ficomps
roll
ret
lds
push
rclb
adc
inc
pop
mov
push
clc
push
stc
cmp
push
aam
int3
les
mov
cmp
lea
cld
inc
or
shll
push
jne
imul
enter
xor
sti
stos
stos
imul
mull
adc
rclb
and
fnstenv
add
push
mov
push
shr
inc
sub
fists
jecxz
inc
pop
sbb
mov
xchg
clc
cmpsb
adc
ret
scas
shlb
sub
loopne
adc
push
bnd
in
push
imul
and
popf
push
or
sbb
shrb
push
push
cli
mov
outsl
insl
ret
cltd
mov
cmp
cs
mov
push
pusha
loope
dec
mov
sarb
repnz
jno
and
cltd
dec
dec
cmp
outsb
sbb
dec
inc
lahf
xchg
push
repnz
xlat
add
out
jle
insb
movsb
cld
loop
or
cltd
int
nop
insb
cmpsb
mov
mov
aas
in
int
and
xor
cmp
dec
jge
dec
stc
pushf
arpl
pop
cmp
ds
mov
xchg
jno,pt
out
jne
ds
dec
and
js
aad
in
add
in
push
pop
mov
daa
xchg
xchg
pop
out
and
sub
cwtl
enter
inc
insb
rep
scas
je
sti
lea
jl
add
fisubl
les
pop
faddl
fwait
lds
inc
mov
add
push
scas
loop
xchg
or
insb
mov
adc
dec
sarb
repnz
je
or
out
and
and
aaa
test
fstl
sbb
xor
inc
and
pop
fisttpll
cmp
cmc
xchg
cmp
movsb
fcompl
test
sub
dec
sub
cld
cltd
mov
jg
loop
mov
pop
insl
or
dec
or
mov
xchg
mov
out
push
ss
int3
pop
or
popf
push
in
insb
push
cmp
negb
jae
lods
or
and
lahf
outsb
js
push
movsl
fsubrs
lahf
jecxz
test
cmp
int
push
mov
fidivs
push
aam
cmp
scas
outsl
faddp
xor
test
inc
mov
xor
int
mov
outsl
inc
cmp
aaa
aaa
bound
push
adc
sbb
pusha
add
mov
add
xchg
xchg
adc
jbe
mov
daa
jmp
sti
jecxz
imul
jl
arpl
mov
xchg
and
in
cmp
stos
xor
and
inc
pop
xor
insl
sbb
lret
pop
fmul
movsb
ret
lods
ret
arpl
jbe
aad
pop
jae
cmpsb
pop
sbb
mov
push
sub
dec
sbb
cmp
and
rcll
ja
subb
and
xchg
dec
inc
mov
adc
pop
mov
cld
cmc
adc
xchg
iret
sub
jmp
out
das
cmp
call
lods
sub
movsl
mov
sub
jecxz
insb
xor
or
das
out
mov
or
out
frstor
sarl
lret
jns
insb
mov
pop
mov
adc
push
mov
xor
mov
xlat
cmpsl
jo
out
mov
jb
cli
loop
mov
pop
sbb
push
out
push
push
mov
lock
ja
out
popa
pop
ret
lret
mov
adc
cmp
ret
lahf
lret
push
mov
mov
mov
mov
xor
cmpl
mov
jmp
dec
leave
popl
sbbb
sbb
xor
fs
cmp
inc
addr16
sub
out
push
or
or
mov
js
hlt
rolb
imul
aad
into
lcall
mov
dec
dec
pop
jp
xor
inc
pushf
out
pop
outsl
push
imul
jp
mov
mov
mov
insb
or
adc
xorb
rcll
xchg
xor
stc
orl
shlb
cli
adc
mov
fadds
lret
xchg
inc
add
lahf
sub
out
int3
out
jg
cltd
adc
lock
sbbb
adc
pushl
sub
test
inc
mov
jg
cltd
push
mov
pop
lcall
jnp
orl
sub
and
mov
adc
hlt
fmuls
out
mull
cld
mov
cmc
jae
mov
add
rclb
cwtl
insb
dec
shlb
mov
in
xchg
fldenv
in
mov
cmpsl
cwtl
mov
sub
inc
cmp
repz
mov
psrlw
and
mov
add
jecxz
outsb
notrack
lods
fs
test
rolb
mov
jo
xchg
add
sbb
orl
gs
sbb
dec
scas
cmp
cltd
sub
data16
je
mov
imul
fistpll
lea
nop
decb
outsl
clc
into
in
lock
xchg
add
divb
ljmp
sbb
int3
je
xor
xor
jbe
dec
mov
rorl
add
jne
dec
dec
mov
pusha
push
xchg
add
daa
dec
pop
lahf
dec
sahf
aaa
or
enter
fidivrs
movsb
outsl
push
ret
into
mov
jns
fcoml
fs
leave
loope
jp
mov
ret
dec
negl
push
jbe
jo
arpl
cmp
in
addb
scas
mov
cmc
xchg
lret
xor
lret
mov
jp
outsl
xor
ljmp
daa
push
pushf
popf
mov
cmpsb
cmp
xor
push
aaa
xchg
push
mov
jecxz
filds
jne
lock
sub
mov
inc
dec
mov
ret
mov
jbe
insb
sub
idivb
enter
push
bound
mov
add
cs
xor
daa
or
pop
cmp
and
push
xor
pop
ficoms
or
aad
daa
icebp
pop
out
faddl
pop
mov
jnp
adc
popa
jbe
scas
jp
lret
adc
enter
lret
mov
sbb
cmp
inc
pop
es
repz
jae
in
mov
daa
aaa
lahf
dec
shll
leave
add
sbb
aam
and
and
aad
dec
adc
inc
rol
jmp
test
dec
or
adc
jge
iret
pop
lods
int3
mov
repnz
cs
sarb
push
jl
int3
stos
stos
add
stc
mov
inc
shlb
fwait
lahf
pop
xlat
xor
fstpt
pop
les
cmp
fwait
xchg
dec
inc
das
push
lods
mov
mov
loope
adcl
cmp
sti
add
pop
test
inc
cmp
clc
shll
sbb
push
pop
lods
cmp
mov
subl
pop
imul
fwait
les
or
xor
es
dec
mov
movsb
faddl
cmc
rorl
sub
dec
stc
add
mov
jnp
scas
sub
sahf
cmpb
sbb
mov
outsb
cmp
sub
sub
jecxz
mov
jo
mov
mov
and
dec
or
shlb
lret
sbb
xor
sub
mov
mov
or
pop
mov
inc
bound
sbb
cld
jge
pop
scas
or
pop
pusha
mov
xchg
push
dec
fcmovb
and
shlb
test
in
push
fxch
leave
je
stos
mov
mov
inc
test
sub
lret
mov
inc
adc
pop
dec
leave
mov
pop
jbe
shlb
adc
scas
cmp
sbb
sub
and
fmull
pop
mov
sub
jno
nop
dec
jb
mov
xchg
mov
out
insb
and
jmp
or
mov
pop
daa
cmc
fsubrl
icebp
addl
out
adc
mov
xchg
mov
pop
shll
lret
loop
lret
call
mov
lods
test
pop
pop
test
mov
inc
loope
leave
mov
insb
roll
dec
and
in
push
jge
fsubrs
mov
jmp
int3
cmp
ret
in
stc
jmp
jge
into
loope
inc
mov
out
jecxz
push
jmp
inc
push
push
aaa
mov
out
mov
or
ljmp
inc
lret
les
icebp
inc
or
jp
inc
push
add
dec
repnz
or
lods
out
pop
sbb
jecxz
addr16
mov
push
outsb
push
push
jge
es
lds
loope
subl
loopw,pt
mov
push
lcall
stos
jecxz
jo
pushf
xor
cmp
rorl
add
cmp
scas
jl
xor
mov
gs
outsb
pop
sub
fiadds
or
fisubrs
sbb
aad
jge
pusha
mov
pop
std
mov
and
out
and
cltd
out
rolb
sbb
jge
pop
push
push
xor
cwtl
cwtl
inc
es
sbb
pop
movsb
push
sbb
mov
jp
push
icebp
call
mov
inc
scas
loope
dec
dec
imul
jge
loopne
loop
sub
rcrl
sub
js
mov
mov
push
ds
mov
pushf
and
lock
and
test
out
fwait
xchg
and
jg
fisubrl
xchg
lret
lock
push
jbe
sti
psubsb
adc
rorl
dec
sbb
scas
jbe
and
repz
sub
jp
gs
test
test
xchg
std
pop
add
jl
std
jbe
or
subl
hlt
mov
sar
xchg
jmp
std
out
loopne
movl
insb
fdivrl
rol
mov
add
jne
shlb
xchg
cmpsb
xor
mov
xor
jecxz
incb
out
xor
fmull
in
movups
loopne
pushf
jo
les
mov
outsb
and
stos
pop
pusha
clc
and
cs
jl
mov
je
push
push
daa
pop
pop
fwait
pop
sub
mov
mov
or
xor
cmpsl
push
push
xor
lret
add
bnd
leave
pusha
or
in
dec
lret
mov
xor
negl
movsb
and
jnp
mov
cmp
pop
aas
inc
sub
sub
and
pop
or
dec
bound
nop
sti
mov
jnp
adc
int3
cmc
jb
lds
into
xchg
fmuls
adc
xor
outsb
push
cmp
rol
or
jle
add
shrb
or
ss
std
mov
xor
aad
cmp
push
popf
or
inc
sbb
enter
pop
mov
addl
sbb
data16
mov
loopne
jae
or
pop
pop
jmp
mov
leave
jl
lea
sub
nop/reserved
test
jno
and
dec
push
arpl
lock
test
ds
imul
rclb
jbe
pop
xor
int3
int
stos
aas
out
lret
shl
scas
pop
or
mov
mov
je
pop
push
pop
fisttpll
mov
stos
aam
out
mov
xor
push
dec
sbb
jge
sbb
insb
test
js
in
sub
xor
shll
xor
add
adc
xchg
jl
pop
out
mov
scas
add
jge
lret
aad
mov
cmp
add
mov
lods
or
rorl
mov
and
xor
je
jne
mov
ss
pop
movsb
lock
xchg
sahf
dec
mov
lahf
sub
or
inc
nop
inc
imul
leave
popf
testb
dec
lea
push
cmp
xchg
xchg
adc
ret
xchg
lret
ret
jl
pushf
loopne
adc
push
jecxz
inc
aaa
and
inc
pop
hlt
push
arpl
mov
scas
mov
pop
es
scas
sub
loopne
push
daa
test
and
xor
lahf
repz
add
jnp
test
repz
xor
inc
and
in
or
ja
cmp
loop
pop
loop
jecxz
imul
fcomps
cmp
lods
out
adc
mov
in
movsb
lahf
cwtl
std
jg
jno
xor
add
inc
sti
insl
cmpsl
mov
xchg
mov
ljmp
daa
xchg
stos
imul
dec
jo
lcall
ljmp
lret
mov
mov
daa
lret
push
in
or
jbe
and
andl
mov
movsl
scas
cmp
push
lahf
out
add
out
pop
bound
push
aam
cmp
pusha
enter
repz
clc
inc
or
sbb
leave
mov
sub
inc
xlat
push
xchg
insl
push
lcall
hlt
add
add
push
pop
and
pop
xor
sbb
ja
fldt
inc
and
jge
icebp
enter
rclb
das
ds
subl
repz
push
mov
ja
dec
mov
jne
cld
sbb
add
xchg
and
in
lock
cmp
sub
sbb
dec
int3
or
cmp
lods
lahf
out
in
fsts
mov
xor
lret
sarb
inc
sbb
push
push
cmp
mov
jo
int
dec
push
jns
test
xchg
jns
out
iret
inc
xor
jb
jbe
cmp
cs
pop
sbb
adc
sahf
iret
jge
movsb
pop
mov
mov
shl
mov
fsub
mov
scas
inc
das
pusha
dec
and
into
popa
ficoms
sarl
in
mov
dec
push
cltd
sub
mov
shl
fs
adcw
repnz
aaa
stc
pop
fmul
and
jo
push
push
ret
gs
push
add
popa
into
adc
cltd
push
test
out
sub
mov
or
loop
inc
jg
ret
xor
shrl
and
push
popf
and
cld
fdiv
hlt
xor
jp
dec
jbe
or
jbe
aad
fisubs
in
pushf
mov
arpl
mov
out
xor
pushf
ja
mov
repnz
adc
jbe
xor
mov
push
popf
cmpsl
mov
sbbb
add
gs
and
xchg
clc
test
fnstsw
nop
xchg
in
bound
repz
or
mov
or
mov
dec
xor
loop
jle
sub
dec
or
dec
outsb
mov
and
xchg
dec
out
nop
xlat
ret
dec
xor
mov
adc
add
mov
xorl
out
int3
loop
jno
mov
test
sub
arpl
mov
push
fyl2x
mov
cltd
push
add
out
xchg
jp
das
out
xor
mov
jne
fldt
mov
movsb
test
fldenv
outsb
xor
fiaddl
jge
cmp
clc
fsubs
cmp
xchg
jg
and
add
lds
push
testl
xchg
add
push
imul
push
call
cmc
jl
jno
aad
xlat
cmpsb
xchg
or
jae
xchg
mov
fld
jno
negb
mov
cmp
rcrl
js
sub
xor
repnz
imul
xchg
cmp
ss
or
or
loopne
and
insb
shrb
mov
lahf
pop
int3
mov
mov
xor
push
jge
lods
sbbb
fdivrl
xor
fidivs
add
fs
xchg
sbb
dec
testb
push
pop
cmpl
jecxz
inc
clc
das
rclb
loopne
sub
mov
cld
mov
rorl
in
imull
push
test
std
scas
test
jge
dec
dec
cs
ja
ret
aaa
lcallw
mov
out
pop
lret
sti
jo
sbb
mov
clc
and
aam
daa
sub
cmc
inc
scas
sub
aaa
pushf
lods
jmp
and
mov
nop
mov
jo
mov
aam
cltd
push
xor
sub
sbb
push
or
inc
jae
xchg
test
leave
js
flds
mov
in
adc
pop
push
sets
mov
sbbl
sbb
jne
insb
xor
stos
das
mov
jecxz
sub
cmp
scas
aad
jecxz
aad
xor
jl
mov
ret
std
adc
mov
jnp
pop
testb
xchg
or
push
dec
and
leave
cmp
pop
loope
test
pusha
roll
jae
aam
bound
jb
out
sub
nop
bound
or
subb
xor
sbb
in
fstpl
fs
cmp
add
rclb
xor
ret
aaa
jne
jae
ret
inc
cli
push
inc
cltd
mov
inc
jnp
jmp
push
ljmp
lcall
sub
mov
push
pop
ljmp
mov
enter
pop
add
addr16
lret
aaa
or
xchg
pause
xchg
push
lods
jnp
push
fstpt
cli
pusha
mov
mov
jno
leave
adc
out
push
push
jns
xchg
mov
adc
xchg
das
cmpsb
hlt
or
push
shr
ja
loope
jns
add
mov
adc
mov
push
sub
rcl
nop
js
ss
dec
dec
clc
pop
sbbl
insl
popf
mov
test
mov
es
jns
sub
push
inc
imul
mov
nop
mov
into
fimull
pop
fildl
xchg
loope
mov
clc
dec
dec
jns
ja
cli
pop
fcomi
pop
cmp
cmp
test
add
ss
call
sahf
mov
mov
push
aam
pusha
outsl
nop
xchg
outsl
jne
mov
stos
data16
dec
idivl
sub
mov
sbb
inc
sub
push
pop
dec
and
outsl
sub
and
dec
jle
push
lods
icebp
pop
cltd
dec
stc
inc
scas
orb
fldl
loop
mov
add
mov
in
pushf
repz
leave
call
sbb
inc
fnsave
ja
sbb
int
test
pop
push
fwait
shll
and
cmp
mov
mov
dec
lods
shlb
rcl
cmc
in
call
jnp
fstps
loope
mov
lret
or
pop
jmp
xorl
cmpsl
icebp
adc
into
jnp
mov
jnp
push
xor
in
loopne
iret
aam
daa
loope
jmp
mov
ljmp
jecxz
shlb
sbb
and
je
out
inc
fldenv
mov
inc
inc
sbb
xor
stos
sub
je
je
data16
movsl
add
pop
test
scas
scas
bound
aaa
mov
add
addr16
pop
pop
adc
jp
incb
mulb
out
and
fsubr
adc
iret
sub
stc
mov
xchg
ret
movsb
jb
and
mov
cmp
adc
je
stc
repnz
popa
inc
out
leave
shrb
push
shlb
sbb
cmpsl
xchg
mov
nop
in
addr16
cmp
xchg
shrl
inc
or
stos
xor
mov
hlt
shll
mov
add
mov
fs
cmpsl
addl
fstp
imul
and
mov
dec
or
push
or
mov
in
outsl
dec
outsl
scas
jg
je
pop
jl
xor
inc
test
ret
pop
pop
add
push
in
push
mov
mov
push
add
in
pop
loop
push
add
daa
testb
pop
mov
les
call
pop
loope
xor
outsb
mov
mov
adc
mov
sbb
out
jnp
and
sbb
jb
push
mov
jg
and
jns
std
push
sub
cs
sub
sbb
aam
push
jne
popa
mov
rolb
dec
mov
xchg
xchg
filds
sub
decl
dec
or
ljmp
pop
pop
loop
and
lahf
mov
dec
mov
add
lret
jmp
push
pop
dec
jmp
sub
ret
jge
gs
mov
push
xchg
call
jns
push
fwait
repnz
and
adc
pop
push
inc
mov
int3
xchg
pop
jne
xchg
out
invd
mov
push
add
mov
cmp
push
ljmp
sub
call
xchg
cltd
xchg
int3
bound
addl
jecxz
mov
cmp
pop
loope
movb
add
jge
adc
mov
aad
lcall
or
insl
push
daa
cmp
lods
loopne
in
insb
xor
mov
clc
and
into
ds
mov
mov
lcall
ljmp
enter
sbb
xchg
jg
call
sub
int3
fistl
push
pop
lcall
pop
dec
xchg
sub
icebp
xlat
cld
test
pop
fldt
xchg
lahf
dec
std
cmp
jg
mov
mov
dec
lds
or
mov
rcl
popa
pusha
cmp
mov
jge
scas
cmp
ds
cmp
pop
lods
fildll
pop
out
mov
sub
sbb
fists
sbb
rcll
aaa
sub
add
inc
imul
sub
addb
les
into
outsl
mov
inc
pop
dec
mov
or
pop
cmc
inc
pop
xor
adc
inc
pop
push
sti
inc
ds
sti
jnp
mov
fmull
fadds
sub
adc
dec
jo
and
cli
sbb
or
iret
mov
xchg
xor
lret
sub
and
xchg
rorb
sbb
iret
mov
fnstcw
push
ret
jmp
jae
icebp
or
push
fisttpll
ds
mov
jmp
das
xchg
pop
or
insb
test
pop
or
pop
fcoml
cld
cmp
inc
mov
roll
pop
cmp
jg
pop
pop
and
fwait
addr16
lret
jecxz
fnsave
inc
lds
fisttpll
cmp
push
sub
lret
push
jge
jno
push
pop
in
adc
sahf
aas
in
hlt
jecxz
lcall
movsl
dec
lock
inc
repnz
lahf
sbb
xchg
sarl
mov
pop
add
out
ficomps
mov
lcall
ficomps
or
xchg
and
es
rorl
mov
adc
outsb
lods
out
inc
cmp
fdivs
and
push
mov
mov
and
ret
jecxz
fstps
jg
and
mov
or
dec
mov
aam
out
sbb
mov
add
dec
or
inc
adc
sub
in
loope
das
mov
fisubrs
pop
lret
xchg
mov
stc
jne
mov
and
xchg
imul
bound
repnz
sti
push
push
shlb
les
add
vcvtsd2ss
adc
aas
in
ljmp
add
mov
sarl
mov
xchg
or
inc
stc
push
sbb
jo
out
addr16
push
loopne
mov
mov
push
repnz
cwtl
inc
imul
sarb
repz
ja
jno
divb
int3
add
sti
test
cmp
stos
fldenv
inc
mov
or
imulb
add
aam
push
movsl
lahf
js
cmp
loopne
nop
mov
into
push
adc
mov
iret
loope
adc
pushw
loope
sbb
jl
std
dec
pop
gs
add
enter
jo
rorb
sti
mov
clc
arpl
adc
stos
xchg
adc
mov
pop
lods
cwtl
stos
call
stos
dec
into
add
scas
mov
push
push
adc
jnp
sarl
pusha
insl
decb
jnp
sbb
sub
adc
xchg
out
jo
in
jmp
jbe
mov
and
ds
out
cmp
insl
sbb
loop
out
dec
push
call
xchg
xchg
dec
mov
add
push
adc
push
push
les
cmp
or
cli
lahf
add
sbb
stc
fwait
inc
in
adc
mov
pop
xor
adc
int
mov
mov
idivb
subl
or
cmp
arpl
fs
mov
orb
push
mov
sub
and
jle
and
sbb
sbb
cltd
fwait
aas
sbb
jae
mov
in
jno
mov
mov
movsl
cli
adc
ds
jb
dec
pop
jle
in
sbb
adc
dec
jno
js
ss
cmp
add
les
mov
jns
push
mov
cld
pop
inc
addr16
sbb
mov
ret
adc
ja
pop
push
cltd
sub
push
mov
push
inc
aad
sarl
xchg
lea
aaa
jo
clc
add
or
lea
push
pop
mov
xor
dec
adc
stos
rorb
pop
jb
out
adc
push
jecxz
add
fcoms
cmpps
test
inc
xchg
dec
cmpsb
adc
pop
lock
dec
xchg
mov
or
daa
lods
push
add
sbb
add
xor
in
inc
xor
test
cli
or
dec
adc
inc
popf
js
jbe
test
sub
jecxz
jae
nop
xchg
call
adc
push
lret
or
js
sbb
mov
add
bound
push
mov
sub
jle
push
in
movsb
jae
and
out
mov
in
loope
js
push
das
jo
shrl
out
popf
int3
loop
aas
push
shll
ja
push
jno
lret
push
loop
dec
xor
xchg
inc
xchg
mov
fcompl
outsl
outsb
clc
xchg
jmp
aad
mov
lds
mov
lret
adc
xchg
jecxz
xchg
das
in
jmp
fstp
mov
dec
lods
push
hlt
bound
adc
data16
add
test
jecxz
sbb
jo
gs
cmp
icebp
fwait
push
scas
mov
icebp
pop
push
sub
jg
outsb
mov
cmp
loop
xchg
repnz
dec
mov
pop
cld
cld
pusha
cmpl
dec
test
ss
enter
nop
add
les
push
pop
pop
lea
mov
outsl
mov
push
scas
ror
jp
ja
mov
pop
xlat
push
jne
or
mov
xchg
out
mov
cmp
scas
scas
adc
sbb
mov
jno
jmp
in
imul
sahf
les
mov
xor
repz
outsb
testb
repnz
lret
mov
into
pop
mov
xor
mov
push
inc
popl
cli
jmp
fcom
xchg
fndisi(8087
fsub
and
int
mov
mov
fiadds
scas
sbb
ss
jae
and
or
aas
add
lods
loopne
jmp
test
cmp
outsl
lods
inc
pop
dec
jg
mov
dec
xchg
adc
and
jmp
xchg
hlt
dec
mov
mov
jne
or
jmp
sub
mov
lods
jl
clc
test
inc
pop
sbbb
in
mov
adc
push
fsts
pop
jle
cmp
add
pop
repz
mov
pusha
hlt
rorl
insb
lock
xor
repz
sbb
and
repz
pushf
popf
inc
mov
movsb
cmc
iret
adcb
jae
in
in
loopne
cmovp
cmp
jg
xlat
out
jns
lret
pop
add
in
subl
dec
mov
pusha
and
add
adc
shlb
jns
clc
mov
out
dec
push
popa
or
inc
mov
cli
inc
bound
adc
sahf
mov
es
cs
mov
inc
flds
push
lret
sbb
jp
outsl
ret
adc
dec
jns
out
mov
pop
lcall
sub
mov
lahf
js
pop
xchg
jl
cld
pop
addr16
inc
in
adc
int
sub
sub
pop
sub
inc
popa
out
cmp
lahf
mov
add
rorb
and
adc
sbb
in
inc
xor
popa
dec
pop
and
pop
mov
daa
or
dec
loopne
mov
lcall
cmp
jo
jmp
pop
pop
xchg
ljmp
push
add
jns
or
xchg
cs
in
sub
lcall
xor
jg
push
xchg
dec
pop
rol
stc
push
jle
cmp
push
dec
push
xchg
pop
jmp
leave
inc
mov
idivl
push
sub
insb
arpl
xor
mov
mov
daa
mov
mov
lcall
rcll
in
lods
sub
sbb
adc
sti
loopne
std
push
jb
sbb
xor
mov
in
stos
movb
sbb
pushf
push
mov
pop
je
lods
repz
jg
fs
sub
jge
push
xchg
sbb
ret
mov
mov
ja
mov
andb
loope
xor
dec
stc
sub
clc
icebp
dec
rcrl
fdivrp
sbb
push
jns
or
xor
rcr
xchg
mov
push
mov
sahf
stos
mov
push
aaa
push
xchg
sarl
and
mov
jmp
addb
mov
mov
out
push
adc
lret
or
rcl
and
aam
adc
jl
arpl
pop
data16
cmp
mov
mov
jle
fstps
jg
ljmp
clc
les
dec
pushf
popa
xchg
mov
enter
pop
cmp
cs
in
in
imul
mov
hlt
out
mov
nop
test
inc
data16
enter
cmp
lock
cmp
sub
xchg
inc
and
push
xchg
sub
jb
addr16
fcmovb
mov
ret
jne
and
and
fcomi
xor
jmp
les
mov
and
jmp
jle
jl
sbb
ds
mov
enter
test
test
jne
push
lahf
repz
pop
fidivs
mov
hlt
mov
mov
mov
idivl
push
das
aad
in
sub
fs
shlb
mov
sbb
fld
call
cmpsb
pop
xor
mov
adc
rcrb
jle
out
daa
jo
int3
inc
mov
pop
push
rorb
sbb
scas
insb
movsb
lret
out
cli
pushf
cltd
push
xchg
push
push
mov
clc
js
inc
movsl
add
push
nop
jecxz
movb
cltd
mov
jl
nop
cli
mov
xor
and
jge
enter
insl
orb
test
sahf
in
mov
rorl
leave
or
pusha
xor
aam
inc
jnp
mov
cli
cld
aaa
add
aas
aas
inc
jb
push
dec
gs
clc
adc
adc
sub
xor
dec
pop
and
sub
mov
inc
and
je
bound
jne
stos
or
ljmp
xor
mov
and
out
icebp
inc
int
lea
inc
inc
push
rcrb
jbe
aad
jb
mov
int3
fmuls
mov
adc
pop
push
jge
xchg
out
mov
adc
xadd
in
ret
mov
mov
shr
inc
mov
push
loop
cmp
call
clc
mov
xchg
or
hlt
cmp
loop
sti
jae
pushf
mov
sbb
sbb
and
cmp
inc
jbe
push
mov
fisttpl
je
or
cmp
das
shl
add
outsb
stc
cmpsl
iret
jb
addr16
xchg
aas
pop
pop
scas
sub
pop
lods
aas
xchg
out
inc
adc
in
pop
loop
mov
pop
loope
dec
cwtl
pop
leave
push
out
out
arpl
out
jp
popa
js
push
mov
cmovb
test
push
adc
js
xor
add
dec
sbb
xor
xbegin
iret
add
mov
mov
xchg
lock
shll
dec
and
frstor
int
mov
jno
data16
scas
or
dec
lods
fldenv
gs
cmc
cmp
cmpsl
mov
push
pop
jnp
arpl
aaa
cmp
cmpsl
fsub
pop
jl
nop
inc
cmp
xor
scas
orb
mov
ds
mov
insb
add
add
adc
push
adc
jmp
cmpsl
in
ficompl
iret
hlt
cmp
jg
cwtl
push
jge
out
or
gs
movsb
mov
out
cmp
jmp
icebp
sub
sbb
cmp
sbb
dec
push
sbb
push
movsb
mov
jb
jo
pop
pushf
dec
cmp
repz
scas
pop
jb
and
or
movsb
mov
cmp
ss
xchg
out
repz
addb
lret
cmp
shlb
push
sub
xchg
pop
inc
adc
out
js
add
and
out
dec
push
and
fidivrs
lahf
xor
aam
push
xor
xorb
stos
cmp
xchg
bound
insb
push
cmp
sub
lock
or
in
or
sub
roll
jl
mov
int3
scas
jl
cwtl
jne
mov
sbb
aad
ss
dec
mov
mov
inc
mov
sar
scas
bound
xchg
inc
cmp
add
mov
mov
sbb
xor
pop
mov
fld
push
lcall
cmp
mov
xchg
mov
cmp
lahf
nop
mov
dec
dec
jno
dec
add
sahf
dec
add
jne
sbb
aas
pop
shrb
loop
repnz
xor
jns
dec
loop
notl
das
or
xor
push
arpl
pop
pop
and
jecxz
pusha
cmp
popl
stos
scas
push
and
or
in
dec
call
xchg
mov
push
outsb
sbb
sbb
mov
mov
pop
jle
lock
fstl
insb
in
fdiv
dec
adc
leave
int3
push
mov
call
mov
sub
xor
jl
xor
test
mov
cmp
jmp
insb
pop
or
xlat
les
mov
lcall
movsb
std
lret
outsb
and
inc
pop
jno
mov
test
cmp
dec
xchg
in
nop
int3
ss
mov
stos
inc
cmpsl
stc
scas
daa
xor
aad
pushfw
mov
cmc
sbb
dec
dec
jg
or
loope
mov
ud0
pushf
addr16
test
scas
xor
cld
pop
pop
subl
mov
mov
fcmovne
out
mov
sbb
or
scas
mov
fmul
ficoml
xor
stos
jae
movsb
add
mulb
subl
clc
and
xor
cmpsb
push
sti
mov
lods
xor
xor
mov
cmp
push
xchg
fdivrl
cmpsl
sarl
or
cmp
push
fwait
insl
pop
adc
mov
jge
std
add
or
jno
mov
cmp
iret
add
sbb
jmp
sti
das
push
inc
in
xor
cmp
insl
pop
loopne
push
lret
int
gs
xchg
out
jns
les
pop
bound
inc
repz
cltd
fnstenv
dec
pcmpgtw
imul
push
fnstenv
stc
test
jo
push
fldl
jg
jbe
popa
dec
dec
push
sbb
test
pop
aas
mov
cmp
xor
iret
pop
addr16
scas
push
add
dec
xor
mov
shl
notb
call
and
dec
nop
repnz
mov
dec
pop
mulb
push
cmp
cltd
add
shufps
mov
cmp
inc
mov
xchg
or
xor
dec
ljmp
ja
clc
mov
jl
fdiv
dec
mov
mov
ficoms
testl
faddl
hlt
adc
dec
fdivrs
cmc
pop
xchg
jge
cli
ja
or
lret
mov
ret
pop
decb
push
mov
mov
notl
mov
fucomip
jno
xchg
xor
push
lret
aam
mov
dec
push
pop
pop
push
and
sbb
mov
jmp
cs
pop
data16
jb
testl
mov
les
shlb
xor
imulb
imul
dec
push
ret
add
mov
andl
popa
push
mov
insb
out
mov
or
sub
movsb
mov
mov
bound
dec
pop
add
xor
enter
adc
xchg
mov
or
imul
popa
mov
jae
fnsave
repz
xor
fidivrl
push
push
mov
pop
lods
pop
xor
xor
dec
fistpl
jecxz
in
pop
add
js
mov
rcrl
xchg
xchg
addb
sbb
hlt
cld
aad
pop
rcrl
lret
jbe
jle,pn
mov
adc
popf
dec
push
mov
lret
in
pop
xor
pop
mov
int
sub
dec
call
cli
gs
repnz
bnd
xlat
js
mov
xor
pop
add
imul
add
xchg
sbb
lods
or
jmp
aas
push
out
mov
rcrb
out
jbe
add
xor
mov
lods
mov
fnstcw
enter
adc
add
adc
mov
xor
add
mov
jg
daa
sub
ja
push
jne
pop
wbinvd
leave
iret
dec
add
aam
push
outsl
lea
push
ljmp
lods
pop
jg
dec
gs
mov
lock
filds
andl
ret
jbe
dec
lcall
mov
fbstp
jp
and
inc
xchg
rorl
call
xor
mov
mov
pop
sbb
clc
ret
jbe
push
or
rorl
repnz
daa
cmpsb
jns
mov
mov
cmp
addr16
test
pop
push
push
loopne
cmpsb
movsb
fisubl
test
sbb
rcll
in
jbe
sbb
rorl
or
out
mov
ficoms
inc
out
rorb
mov
inc
inc
push
inc
daa
or
sbb
mov
mov
movsl
mov
cmpsb
into
xor
cmp
inc
mov
repz
mov
inc
push
lcall
or
mov
mov
mov
jns
outsb
test
or
cwtl
mov
mov
pop
push
mov
jno
dec
iret
xchg
and
shr
pop
push
pop
hlt
push
dec
mov
shlb
lods
std
iret
mov
mov
cld
fs
cmpsb
orl
icebp
fbstp
leave
and
pop
jae
hlt
mov
scas
loopne
xorl
push
mov
arpl
mov
movsb
into
sahf
pop
push
mov
shrl
mov
dec
movsl
das
out
cli
xchg
fwait
stos
in
dec
rorl
addr16
ljmp
test
scas
mov
adc
outsb
and
add
jmp
and
and
popa
lea
imul
shll
or
add
mov
aas
push
jge
std
sbb
xor
jmp
iret
arpl
sub
imull
push
cmp
fdiv
icebp
mov
mov
xor
inc
arpl
aam
iret
push
dec
nop
pusha
jg
int3
mov
rcrb
sahf
mov
jo
in
orb
sbb
adc
insl
xchg
pop
push
sub
insb
jge
jne
cmpsl
les
add
scas
xor
cmp
adc
and
test
mov
outsb
and
ud2
jp
insb
movsb
push
inc
sub
arpl
movsb
shlb
insb
mov
ds
aaa
push
enter
clc
mov
out
movsb
mov
pop
fnstenv
test
push
popa
scas
bound
aaa
fsubr
cld
loopne
lret
andb
add
add
loop
sub
gs
dec
mov
mov
inc
fadds
fwait
or
shrl
and
sub
sbbb
mov
dec
mov
fsubl
cmp
push
and
pop
stos
and
mov
mov
pop
and
lea
cltd
aad
inc
xchg
lahf
int
xchg
clc
push
push
sbb
stos
pop
mov
mov
lahf
and
push
das
mov
mov
fcompl
cwtl
adc
std
stc
lock
lret
mov
scas
loope
fadds
cmp
and
rolb
pop
fsubrl
scas
mov
pop
xchg
sub
add
pop
add
or
xchg
insb
iret
or
cmp
call
mov
dec
cmpsb
addr16
sub
pop
sub
aas
outsl
xor
aam
das
leave
pop
pop
cmc
and
fisubrl
js
sub
dec
es
lods
jno
test
cmp
sub
adc
leave
cmpsl
je
and
mov
sahf
ds
add
gs
jbe
js
ficoms
cmp
sbb
xchg
filds
or
notl
and
orb
aaa
pop
inc
imul
imul
mov
notb
aam
add
push
enter
mov
shr
xor
psubusw
pop
repz
std
pop
pop
inc
aas
out
jg
pop
or
daa
dec
or
fisubrl
mov
inc
xor
pop
scas
push
sub
std
mov
mov
push
repz
pop
push
into
adc
dec
cmp
cs
or
and
pop
stos
jne
push
and
and
aad
and
and
addr16
pop
xchg
adc
jmp
or
sbb
call
push
jb
push
loopne
movsb
push
fstpl
popf
mov
xor
arpl
cltd
mov
mov
push
or
xor
es
push
sahf
es
pop
out
adc
mov
mov
out
in
mov
inc
and
lods
cmp
ret
dec
mov
cld
pop
sbb
test
loope
mov
push
call
dec
cmp
pop
mov
ret
ret
repnz
daa
in
jne
jne
and
setne
xchg
lds
fwait
push
insb
cmp
inc
sbb
sti
adc
pop
xchg
ret
outsl
cmp
xor
rorl
sub
sub
ja
pop
into
jb
mov
int
stos
out
sarb
cs
and
dec
lods
lock
mov
push
dec
leave
pushf
and
jne
xor
icebp
iret
sbb
jmp
cmpsb
mov
cs
ret
insl
mov
push
adc
es
mov
add
jle
shrl
cli
subb
stc
popf
push
insl
ror
in
mov
or
dec
je
js
or
dec
xchg
scas
pushf
push
mov
aas
lods
push
loope
mov
and
int3
pop
push
inc
decb
test
fsubl
cmp
loope
sbb
shll
popa
jmp
out
loop
cmp
xchg
ss
int
movsl
icebp
out
test
mov
jb
pop
pop
pop
repz
into
cmpsb
subb
jmp
mov
or
add
lret
or
vsqrtsd
and
out
mov
into
addr16
and
sbb
push
push
imul
and
pop
out
loop
lea
push
mov
cmp
sub
mov
cmp
adc
je
mov
cmp
or
pop
sub
ret
ljmp
mov
cmp
fildl
adc
aaa
mov
mov
sbb
daa
shlb
lret
or
mov
sarb
in
std
dec
jg
mov
subb
cld
movsl
ljmp
out
mov
mov
lahf
xor
sti
aas
jns
pop
inc
lods
dec
ds
mov
mov
out
adc
mov
mov
or
aad
cmp
popf
push
pop
sbb
jecxz
test
movsl
jmp
mull
test
adc
in
mov
sti
das
add
fs
dec
into
lods
imulb
sbb
mov
dec
mov
mov
inc
add
scas
fidivrl
jecxz
add
les
pop
mov
test
ret
int
outsb
pop
inc
mov
je
mov
jmp
cwtl
cmp
test
jmp
add
inc
das
dec
xchg
fs
mov
ljmp
xor
outsl
test
mov
push
add
adc
insl
adc
xor
mov
dec
shrl
add
cld
xchg
add
adc
xor
adc
pop
outsl
cmc
sub
mov
push
addr16
inc
repnz
and
hlt
cmp
pop
mov
fnsave
lods
fs
add
cwtl
sbb
leave
sub
push
stc
push
idivl
cld
jae
sbb
out
pop
jecxz
lahf
add
cwtl
dec
imul
add
cmpsl
inc
dec
push
flds
push
jge
mov
mov
xor
sbb
push
je
data16
aad
arpl
add
cmp
xor
inc
jne
pop
jo
popf
jo
xchg
sub
xchg
ja
sahf
xor
lahf
stc
out
inc
test
and
lea
sbb
lret
icebp
pop
xchg
movl
and
dec
cmc
mov
arpl
xor
cmovne
sarl
jmp
inc
shrl
sbb
sbb
stc
and
mov
cmp
mov
movsb
stos
push
lahf
inc
leave
roll
pop
ret
cltd
mov
push
jae
cmp
iret
jmp
ss
ret
pop
sbb
xor
xchg
push
pop
and
outsl
sbb
adc
mov
int
or
jo
jo
or
xchg
fsts
push
test
adcb
and
lock
push
fs
movsl
sarb
int
xchg
sbb
cmp
enter
fstps
int3
pop
push
jb
lock
repnz
adc
fsubrp
or
icebp
movsl
xor
mov
pop
push
cs
mov
cmp
iret
add
mov
and
xchg
sub
mov
outsb
xchg
push
out
jecxz
lds
adc
dec
cltd
imul
test
pop
sbb
jnp
stos
pop
pop
mov
push
or
or
mov
adc
scas
sub
icebp
mov
adcl
mov
dec
neg
inc
jmp
jg
or
movsl
mov
call
sti
or
ret
adc
aas
dec
int3
pop
adc
movl
arpl
loope
mov
mov
mov
cmp
jne
mov
cmp
cmc
dec
ret
add
push
mov
cltd
xor
fidivrs
sub
cmp
int
adc
xor
shl
les
xchg
dec
xchg
aaa
jns
les
outsb
mov
int
fmul
subl
ljmp
jbe
jns
xor
lcall
xor
js
dec
out
inc
xor
fdivrs
mov
push
fdivrl
jl
sahf
mov
addr16
push
or
jmp
fisttpl
sahf
icebp
or
call
inc
sbb
inc
je
aam
sahf
mov
insl
mov
inc
push
test
sbb
jl
inc
movsb
add
inc
dec
roll
loope
js
fistps
shrl
mov
cwtl
xchg
ljmp
dec
leave
shl
mov
pusha
jle
sub
mov
xlat
lds
sbb
mov
into
mov
inc
inc
dec
aad
loop
cmp
test
pop
mov
sub
cmc
adc
ja
or
rcrl
sub
push
cmpsl
fldt
inc
or
xor
js
push
and
dec
outsb
pop
jno
jae
dec
mov
iret
xor
xor
sub
cltd
data16
aad
rorb
mov
jmp
xchg
adc
push
lods
xor
cld
lock
fidivs
mov
pop
repz
inc
cli
jno
push
jle
jns
test
cs
jmp
xchg
pop
out
adc
push
jle
je
test
movsl
jno
mov
xchg
lods
dec
mov
adc
add
pop
testb
push
xchg
testb
cltd
popf
lret
aam
xorl
and
test
mov
push
insl
mov
sahf
xchg
jle
xchg
push
andl
fimuls
xchg
lods
aad
jne
add
and
loopne
cld
insb
push
xchg
inc
and
imul
mov
xchg
jb
and
loop
mov
rcll
xchg
add
pop
add
mov
sub
fwait
test
and
xchg
aam
in
test
pop
pushf
cmp
cli
jno
sub
inc
jb
or
call
pop
inc
jbe
test
pop
leave
add
aas
lcall
xchg
call
arpl
leave
jnp
jp
add
and
sub
jle
stc
mov
or
pusha
lret
sbb
jno
add
or
mov
mov
scas
or
jge
pmovmskb
mov
mov
je
mov
leave
jl
jns
add
stos
sbb
int3
inc
pop
fsub
ret
lcall
jmp
mov
testb
stos
mov
adc
inc
mov
sbb
sub
dec
pop
mov
mov
aam
pushf
dec
imul
push
adc
shll
push
or
mov
pushf
ret
in
popa
push
fidivs
push
std
stos
sub
mov
pusha
icebp
mov
cmp
pcmpgtw
pop
adc
mov
push
rcrb
sub
ret
ltr
subb
mov
push
outsl
pop
xor
lcall
orl
and
or
sbb
pop
mov
pop
leave
in
mov
mov
mov
int3
mov
aam
sahf
rol
roll
enter
lret
mov
xor
inc
jne
sbb
outsl
test
scas
mov
and
inc
loope
mov
dec
mov
faddl
lret
sahf
sub
adc
adc
inc
push
sbb
in
or
movsl
jb
ja
xor
rcll
in
or
jge
scas
sbb
out
xchg
pop
rclb
mov
add
lods
cmp
mov
int3
dec
out
rorb
loopne
fistpl
int
repz
icebp
sbb
lcall
jo
add
test
mov
out
out
or
leave
mov
ret
leave
adc
xlat
icebp
jmp
int3
repz
or
mov
mov
push
jno
call
cmp
inc
int3
jmp
xor
jns
in
xchg
popa
cli
sub
popa
ret
inc
int
jmp
jo
mov
xor
xor
xchg
bound
lret
xchg
add
or
dec
in
mov
fcoms
xor
pop
lods
xchg
imul
orb
xchg
push
jge
mov
mov
mov
inc
dec
jno
pushf
cmp
dec
xchg
js
aam
lret
push
in
jmp
adc
push
sub
xchg
popf
sbb
sbb
mov
pop
and
ffree
xor
nop
icebp
push
push
ss
sahf
fnsave
jae
xor
sub
pop
jle
adcl
jp
mov
mov
sbbl
xchg
adc
and
daa
sahf
and
jne
lahf
jl
ljmp
adc
insl
and
mov
gs
scas
shll
mov
mov
cmpb
cld
jo
test
jns
out
insl
jns
mov
movsl
sub
movsb
xor
bnd
out
fists
movsl
test
xchg
push
dec
aam
sub
sub
lret
push
fildll
dec
and
push
ds
mov
push
push
jbe
sbb
xchg
aaa
scas
jns
jo
adc
insb
push
push
add
dec
lret
inc
or
fwait
lea
pop
cs
inc
jbe
test
adc
xor
pop
sbb
cmp
cmpsb
and
aam
roll
inc
pop
stos
cld
dec
push
les
das
movsb
test
jno
mov
xchg
outsl
lods
fisttpll
outsl
xchg
scas
clc
mov
push
movsl
or
fwait
mov
mov
dec
dec
scas
xor
push
shrl
aas
rolb
in
stos
lret
push
adc
daa
roll
and
pushf
push
subb
xlat
jmp
pop
pop
imul
sub
std
int
pop
xchg
stc
outsl
mov
xor
ds
movsl
sub
movsl
lret
sbb
mov
subl
inc
aas
xchg
pop
mov
enter
inc
sub
or
jmp
jg
ret
dec
aad
gs
aad
dec
adc
ret
test
pop
ljmp
and
push
lcall
cs
add
dec
scas
cli
mov
insl
adc
and
outsl
into
and
repz
cmpsl
xchg
mov
pop
or
into
sbb
jg
mov
ss
dec
jl
xchg
jmp
aad
push
popf
and
ret
sti
sbb
lods
cltd
aas
jle
in
pop
mov
cwtl
and
int
pop
mov
inc
ret
jecxz
ja
push
sub
clc
rep
mov
push
icebp
jo
pop
gs
jmp
jge
cmp
inc
xchg
sbb
xchg
fmull
arpl
adc
sub
push
nop
mov
daa
sarl
mov
dec
aam
clc
popa
in
mov
jmp
outsl
call
lods
sbb
int3
scas
inc
inc
pop
ficoml
fsubs
loope
mov
cmp
xor
pop
lods
iret
aas
sub
and
add
sarb
add
into
cmp
pop
das
mov
adc
mov
push
push
and
es
mov
add
inc
and
lods
xchg
cmp
shll
dec
int3
lds
leave
fldenv
inc
lcall
or
push
out
je
lcall
cli
mov
sub
or
jge
mov
cmp
sub
into
xchg
push
outsb
sbb
test
jmp
xor
outsb
sti
sub
jb
jbe
sub
push
mov
mov
sbb
sub
adc
stc
out
cli
jmp
jns
dec
sub
cmpl
xchg
hlt
imul
cs
lret
outsb
out
mov
cmp
andps
add
mov
dec
push
push
sub
jno
sub
xor
pop
pusha
mov
jg
dec
cmp
scas
lcall
iret
inc
sbb
inc
jns
pop
mov
sub
dec
or
mov
ljmp
pop
mov
pusha
jg
adc
pop
popf
out
in
jne
mov
pop
mov
push
jmp
xor
pop
sarl
xchg
fbstp
inc
fiaddl
jne
mov
int
mov
pop
jns
sbb
rcrl
jbe
xor
fimuls
aad
movsb
loope
mov
inc
inc
jle
adcb
xorl
jmp
fsubrp
scas
jnp
ffree
pop
mov
pop
enter
aaa
push
xchg
jp
fstps
jp
xchg
lret
imul
sub
sbb
loopne
fcomps
fldenv
std
mov
in
loopne
dec
int
pushf
cmp
stc
ret
stc
xor
pop
mov
loopne
push
sub
ss
push
jl
rcl
rorl
and
sahf
mov
sbb
dec
mov
mov
mov
dec
xor
jle
sbb
mov
xor
and
push
add
arpl
pop
leave
pop
test
mov
rorl
push
push
int
jno
xchg
loope
mov
punpcklwd
mov
or
push
xor
scas
or
iret
das
mov
js
test
jno
sub
mov
cld
lahf
xchg
adc
add
xchg
sbb
lret
lds
mov
or
push
adc
inc
popf
lcall
sub
inc
and
outsb
stos
fsubrs
decl
xor
aas
inc
mov
stc
aam
xchg
cmp
stc
and
and
lods
insl
mov
ret
mov
ret
mov
mov
jbe
jbe
dec
or
or
clc
ror
xchg
jae
jle
push
and
push
push
sahf
adc
jmp
mov
popf
xchg
xorb
lret
cmpsl
imul
pop
dec
and
pusha
idiv
sub
repnz
addps
pop
into
pop
daa
mov
xchg
aas
dec
pop
mov
in
sbb
jp
add
mov
xlat
repz
std
jecxz
movsb
push
mov
mov
fisttps
sub
jp
jp
mov
enter
inc
leave
pop
dec
cld
jle
ljmp
jo
inc
add
inc
mov
popa
mov
inc
inc
adc
jbe
addr16
fdivl
mov
repnz
ja
sub
testl
sbb
sub
jle
mov
rol
iret
aas
pop
sub
pop
daa
icebp
pop
mov
mov
lods
sbb
pusha
arpl
imulb
fimull
jae
adcb
sbb
in
cmc
push
popf
hlt
cmp
add
add
imul
sbb
xor
xchg
int
imul
sbb
cld
mov
jl
mov
pop
sar
jnp
adc
neg
push
lret
rcrl
xchg
push
xor
inc
push
test
jle
pop
xorl
aad
pop
sbb
sbbb
jns
or
cmp
lock
adc
js
pop
or
mov
nop
orl
test
adc
jae
pusha
mov
push
aas
lods
sbb
pop
lods
popa
cmp
aad
lcall
dec
mov
xor
cli
mov
loopne
leave
out
xchg
dec
mov
aaa
pop
test
adc
out
cli
lahf
arpl
pop
or
cld
inc
in
cmp
shll
int3
imul
jo
cmp
xor
gs
xchg
in
add
xor
movsb
inc
mov
pop
in
scas
popa
aam
jmp
bound
mov
xor
xchg
lret
xchg
cmp
or
test
lods
pop
out
dec
enter
cli
mov
std
and
push
mov
push
jbe
data16
popa
pop
out
pushf
in
mov
adc
lods
std
std
dec
dec
mov
and
mov
rcr
popf
inc
add
lods
cs
insb
mov
loopne
sub
push
int3
adc
fidivrl
cmp
push
dec
and
shl
add
adc
lcall
push
pavgw
push
jbe
jns
dec
cmp
data16
mov
xor
mov
inc
mov
ret
mov
dec
sahf
mov
mov
and
shld
sbb
add
movsb
sub
rcll
jp
mov
pop
shll
ret
mov
sub
pop
imul
jecxz
mov
mov
stc
rcr
mov
push
jle
inc
cwtl
and
out
aaa
sub
cmp
fisubrl
add
pop
fcmovu
adc
xchg
ds
out
insb
aas
aaa
aad
loop
or
mov
xor
push
jg
stos
aad
lods
jbe
xor
lea
sub
stos
in
pop
dec
sbb
adc
cltd
mov
std
adc
sub
mov
out
adc
push
stos
dec
push
or
sti
insl
and
push
fs
inc
sub
or
iret
dec
push
mov
stos
cmp
insb
pusha
fldenv
sbb
lcall
test
popa
mov
sti
pushf
enter
aad
sub
add
push
pusha
pop
xchg
sub
lret
rcll
aas
sub
pop
hlt
mov
mov
les
cmc
mov
test
sbb
inc
iret
pop
lahf
test
cmpsb
push
fs
hlt
mov
or
scas
push
aad
jbe
out
mov
fnstenv
jb
leave
aaa
aad
popf
add
emms
mov
fisttpl
out
fs
stc
jle
mov
ja
outsl
jmp
lea
mov
mov
sub
xor
pop
cmpsb
add
subl
jecxz
xchg
push
add
mov
cwtl
stc
add
push
arpl
rcrb
mov
pop
stos
mov
xchg
stc
push
mov
xchg
push
hlt
movsb
stos
jnp
mov
mov
dec
mov
fmul
mov
hlt
push
movsb
outsl
ret
ficoml
pop
scas
pop
and
insl
clc
xchg
mov
je
sbb
inc
push
lcall
xor
lret
cld
lods
mov
adc
pop
fsts
repz
in
or
pop
lret
nop
mov
insb
push
push
push
lods
negb
cmc
std
test
aam
jb
xchg
enter
add
mov
add
xchg
mov
jg
xchg
and
aas
dec
andl
repz
and
dec
jno
fcomps
gs
mov
or
sub
popf
cmp
pop
push
push
push
pop
push
jae
repz
repnz
es
mov
mov
inc
and
leave
ljmp
add
pcmpgtb
sbb
pop
inc
cmpsl
aas
mov
push
push
xchg
mov
sbb
cmpsl
shrb
popf
lret
out
xlat
pushf
rorb
hlt
mov
fists
inc
cmpsl
lret
add
jnp
movsl
das
test
fcomip
sbb
mov
mov
mov
mov
adc
das
xchg
loope
lds
mov
mov
pop
xchg
xchg
in
fmuls
or
pop
or
es
test
cld
add
inc
lcall
enter
or
push
add
xchg
xor
inc
lods
movsl
int
addl
push
xchg
mov
dec
push
push
push
add
repnz
rcrb
aas
aam
inc
inc
out
mov
ss
pop
out
test
shl
shll
pop
push
fnsave
adc
jmp
arpl
insb
jp
stos
push
cltd
or
out
inc
lods
and
pop
cmp
mov
sbbl
pop
jp
or
sub
sub
xchg
pop
push
dec
lods
adc
xor
test
mov
scas
mov
ret
add
bound
popa
adc
and
pop
ljmp
scas
frstor
loope
push
mov
mov
xchg
out
or
pop
cmc
xchg
ljmp
mov
mov
fisttps
or
inc
jo
pop
jo
mov
mov
and
shll
fidivs
dec
das
pop
in
mov
movsb
rorb
sbb
pop
outsb
inc
pusha
ljmp
cmp
ds
add
jmp
shrl
pop
inc
pop
lods
in
hlt
out
mov
xlat
jmp
push
xor
je
mov
pop
jne
jns
cmp
xchg
xchg
mov
in
loope
xor
lret
jg
xchg
inc
cmpsl
jns
dec
xchg
sahf
xchg
jmp
cmp
adc
push
call
mov
enter
sub
adc
push
std
std
aas
mov
call
ds
cs
jb
push
imul
sbb
cmp
adc
insb
push
mov
xchg
push
add
mov
cld
sbb
mov
fmuls
ret
data16
or
pop
cmpsb
mov
clc
mov
inc
mov
push
je
mov
jmp
pop
sub
sub
mov
ja
fsub
jo
mov
jmp
push
sbbb
pop
pop
xchg
pop
test
fidivl
cmp
xor
xchg
in
inc
and
inc
nop
xchg
pop
sub
mov
mov
int
das
cltd
std
sub
fidivrs
mov
jnp
push
mov
mov
xchg
sti
xchg
pop
aaa
add
mov
ljmp
int3
jbe
add
mov
mov
cwtl
and
mov
insb
push
mov
fldt
adcb
adc
pop
inc
adc
and
and
bound
and
or
adc
cmp
mov
leave
popa
dec
stos
lahf
adc
and
daa
mov
sub
jmp
pop
loopne
sbb
adc
jmp
xchg
inc
xchg
call
xor
pop
push
cmp
aam
mov
mov
imul
inc
test
jmp
sbb
scas
outsl
repnz
in
out
scas
in
lods
loopne
cwtl
leave
and
or
mov
mov
out
xor
jnp
ret
mov
add
and
push
dec
ss
test
mov
dec
sub
aad
sarl
shlb
mov
ret
test
push
xchg
mov
loope
pop
shrb
and
leave
fs
xor
call
dec
inc
outsl
jns
cmp
inc
shrl
pop
cli
out
mov
mov
jno
inc
xchg
jae
repz
aaa
xchg
imul
or
adc
xchg
jno
mov
imul
ja
dec
xchg
cmpsl
jns
mov
sbb
mov
sahf
xchg
fs
in
jl,pn
push
mov
gs
test
idivl
mov
sbb
inc
in
mov
jae
inc
add
mov
xchg
push
popf
outsl
leave
cld
cmp
or
dec
add
mov
sbb
mov
cmp
adc
adcl
dec
push
adc
push
sub
cwtl
cmp
divb
movsb
adc
addl
jo
nop
push
lcall
jae
cltd
mov
inc
scas
mov
jae
xor
fmull
jmp
xchg
mov
fimull
xchg
outsb
pop
aam
or
xor
cs
push
push
xor
jge
sbb
loope
jge
push
rorl
cmp
in
inc
inc
or
mov
cwtl
jae
rol
xchg
mov
dec
mov
add
imull
xchg
in
xchg
add
xor
pop
dec
pusha
push
and
sbb
jne
add
mov
adc
mov
in
add
mov
jl
or
sbb
jo
jl
jo
inc
add
and
aam
orl
out
cs
mov
sub
test
add
or
nop
mov
pop
lret
aas
lret
mov
mov
out
inc
scas
loop
loopne
popa
cmpsl
lahf
mov
push
pushf
xchg
sbb
fildl
mov
aas
xchg
ret
sbb
lea
test
fsubr
scas
pusha
mov
sub
xor
lret
dec
sbb
movntq
out
js
jb
mov
and
push
push
sub
add
mov
jge
pop
rcll
pop
sbb
loop
in
push
dec
jge
int3
dec
out
inc
sbb
push
mov
insl
mov
adc
movsl
loop
cli
addb
dec
pop
sbbl
xchg
and
and
xor
push
fsubrp
push
xchg
sub
cmpsl
enter
mov
dec
cmpsb
in
inc
pop
in
shlb
js
mov
into
or
mov
aad
fs
cmp
int
sub
in
in
out
imul
les
stos
dec
mov
and
jecxz
inc
pop
pop
cmp
mov
fadds
sub
rclb
mov
sub
xchg
fimuls
pop
sub
dec
insb
loope
mov
jle
add
mov
cmp
dec
shrl
push
sbb
test
or
sub
mov
sbb
adc
ror
xchg
sbb
add
loopne
test
flds
hlt
xchg
ljmp
rcrl
adc
popl
push
dec
xor
pop
stc
mov
into
pop
in
sti
jmp
pop
nop
add
jge
add
mov
add
in
sub
jecxz
mov
repz
mov
or
test
rcl
cmpsb
cmp
push
sbb
subb
lds
pop
pop
ret
jno
sbb
fsubrs
cmp
pop
jmp
inc
scas
xor
jnp
rorb
je
push
cmpsb
in
out
lods
in
sahf
dec
enter
sahf
mov
xlat
xlat
pop
jmp
lret
rolb
adc
add
lea
int
lcall
out
aad
stos
addl
in
pop
inc
pusha
mov
cmpsl
cltd
and
dec
mov
inc
push
pop
mov
out
fs
mov
push
xor
nop
and
mov
cmc
xor
cmp
jmp
dec
adcb
dec
jb
lret
stc
ja
xor
shrl
push
dec
in
shll
pop
inc
hlt
cli
ljmp
and
jnp
and
fs
or
push
ljmp
xchg
cmp
out
add
sbb
sbb
imul
push
pop
jae
adc
xchg
andb
lret
sbb
jg
push
dec
fisttpll
adc
xor
iret
enter
ret
cs
je
xchg
push
loopne
cmp
xor
jp
fcomp
jne
repnz
sub
xchg
ljmp
inc
xor
and
or
ss
mov
ficoms
mov
push
adc
sbb
add
mov
adc
xor
adc
mov
jp
add
dec
test
lret
xor
jmp
add
pusha
and
jge
dec
pop
jmp
test
fcmovne
sbb
jb
cmp
cmp
pop
jp
mov
mov
sub
sahf
inc
add
es
enter
loope
jne
jns
mov
out
adc
cmpb
cmpsl
cmp
fnsave
mov
repz
inc
xchg
iret
popa
bound
movsl
sub
xor
jle
insl
mov
push
aaa
lds
sbb
mov
mov
aad
push
orl
cmp
mov
push
insl
jge
jbe
lods
adc
lea
sbb
push
imul
cmp
mov
jb
enter
mov
sbb
cmp
test
push
cwtl
sub
std
sbb
fld
jge
adc
sub
mull
lcall
subl
data16
cmpsl
popf
jne
pop
push
add
test
jne
mov
adc
xchg
push
clc
mov
fnsave
add
and
inc
xchg
xor
dec
inc
insb
xor
add
stos
in
xchg
mov
sub
and
inc
push
lods
lods
popa
cwtl
cmp
test
repnz
mov
gs
lcall
jle
mov
xchg
repz
mov
rcl
dec
decb
popf
sub
fsubs
inc
mov
arpl
fdivrs
loop
cmc
push
lods
imul
test
mov
push
mov
add
ja
sti
pcmpgtb
lret
and
sbbb
mov
mov
in
adc
je
frstor
and
sbb
sbb
in
subb
mov
pop
mov
adc
loopne
push
divl
mov
cld
rcl
mov
adc
mov
dec
inc
xchg
shlb
mov
adc
dec
cmpl
movsb
push
add
mov
movsb
popa
pop
xchg
jne
adc
addr16
push
cmp
out
add
cmp
lea
push
sub
xchg
insb
testl
jecxz
ss
gs
dec
sbb
icebp
pushf
mov
clc
pop
xor
and
inc
sub
test
dec
outsl
das
jno
insl
gs
jne
cmp
sbb
dec
mov
pop
sbbl
inc
testl
mov
in
push
cli
jmp
add
in
pop
lret
cli
prefetch
js
leave
jl
out
push
adc
inc
js
or
mov
dec
repnz
inc
inc
sub
rcrl
xor
mov
cmpsl
cmp
mov
insl
jge
mov
mov
cmp
jp
cmpsl
out
sub
jl
push
dec
and
push
mov
sub
xchg
xchg
lret
ret
lret
mov
pop
pop
inc
and
adcb
add
push
jle
mov
sbb
sub
cmc
jbe
jb
loope
sarl
jo
and
mov
insl
xchg
pop
cltd
pusha
dec
faddl
pushf
test
xor
sahf
movsl
hlt
cltd
pop
sti
daa
mov
stos
aam
sbb
std
mov
in
mov
idivl
adc
aaa
lds
int
xchg
mov
or
jns
sti
dec
rorb
loopne
outsl
jle
imul
xlat
jbe
les
xchg
mulb
mov
and
popa
cld
out
popw
test
cmp
stos
add
jb
xchg
or
repz
mov
pop
lods
pusha
cs
add
mov
addr16
jb
inc
push
gs
jns
rorl
mov
xorb
adc
ja
test
or
sbb
pushf
adc
mov
mov
mov
std
push
aas
xchg
in
xor
out
dec
fstpt
insl
cmp
dec
call
xchg
pop
mov
cmp
lea
xchg
dec
or
inc
mov
imul
mov
adc
ja
shl
jl
fs
jne
rorb
int3
js
pop
enter
pop
scas
xor
adc
mov
negl
sti
cmp
and
dec
inc
jle
out
dec
daa
loopne
push
sbb
or
clc
stos
inc
testl
scas
fwait
adc
inc
aam
icebp
out
sub
cmp
xchg
pop
xor
cltd
adc
loop
push
pop
mov
pop
outsb
mov
jecxz
outsl
test
call
push
enter
ljmp
imul
adc
aam
mov
scas
out
mov
xorl
mov
pop
test
dec
jo
cwtl
pop
dec
add
cli
push
xchg
outsl
xlat
or
push
mov
push
enter
adc
xorb
call
lods
xor
and
out
jnp
nop
nop
adc
addr16
jb
push
lcall
sbb
pop
cmpsb
add
popa
cmp
pushf
das
shl
add
stos
or
loopne
mov
push
push
inc
push
jmp
daa
aam
aam
dec
in
sahf
pop
push
fs
lret
std
adc
jno
in
shl
or
loop
cmp
ss
adc
jl
fcompl
push
repnz
lret
lretw
arpl
mov
lret
mov
sbb
mov
in
clc
loopne
push
aas
ficoml
stc
dec
andb
aas
js
out
cld
inc
jecxz
pop
ret
sbb
mov
push
and
or
pop
add
xor
lret
fidivrl
push
or
jge
enter
and
int3
insb
lea
negb
call
loop
xchg
jb
cmc
mov
xchg
ret
popa
clc
add
sbb
jb
add
and
inc
inc
cmpsb
cmpl
cmp
sti
push
sbb
out
mov
mov
in
fs
iret
push
int3
rorb
dec
jg
push
daa
mov
sub
push
xor
inc
xchg
mov
pop
data16
xor
idivb
lods
mov
or
push
pop
push
out
push
unpckhps
lods
add
cmp
mov
pop
dec
mov
inc
sarl
adc
inc
rcr
pusha
pop
jp
xor
sub
adc
repnz
inc
xchg
cltd
mov
jg
lcall
popa
bound
push
dec
loopne
test
jb
pop
es
cmp
push
jmp
in
mov
popf
shll
xor
jp
dec
aam
jmp
pop
out
push
in
mov
ljmp
out
rorb
sub
push
cmp
insl
repz
push
repz
fcmovne
loope
sbb
pop
xor
inc
or
adc
in
adc
cltd
cmpsl
xor
or
cmpsl
aam
xor
aas
roll
sbbl
sbb
scas
sbb
sbb
and
mov
in
add
mov
sar
push
or
sbb
cmp
or
jle
jl
adc
insl
hlt
lret
mov
cmp
mov
ja
or
jno
out
pop
sahf
add
xor
jl
outsl
cli
add
mov
jbe
adc
and
data16
push
mov
dec
sbb
jle
aam
fisttpl
inc
cmp
sbb
movl
in
push
fistps
test
pusha
adc
mov
pop
mov
add
lret
lret
sub
xor
cmp
xlat
loopne,pn
sti
sbb
out
lods
mov
sub
jg
loope
les
sub
out
mov
dec
ja
jle
call
scas
or
adc
and
xor
mov
test
mov
fildll
loope
mov
mov
adc
lret
sub
mov
gs
dec
adc
fnstsw
fidivl
dec
cmp
or
mov
aaa
cmc
movl
xchg
pop
ja
cmc
lret
aad
andb
daa
fadds
add
int
int
cmpsl
bound
jns
ljmp
outsl
test
and
pop
jae
jg
mov
in
adc
cmp
out
nop
jne
adc
fidivrs
jp
jl
adc
mov
sbb
in
xor
divl
mov
push
add
stos
sbb
xor
add
add
stc
stc
fidivrl
jge
push
dec
xchg
imul
sbb
addr16
imul
dec
shll
fldl
mov
mov
data16
xor
push
cs
stos
push
sbb
leave
shld
mov
or
mov
ljmp
xchg
dec
add
das
and
jno
xor
push
bound
mov
and
loopne
test
addl
pushl
fildll
xchg
xchg
xlat
insb
push
push
add
inc
outsb
imul
aam
fadd
ret
dec
scas
mov
pop
and
out
xor
aam
jmp
test
mov
push
negl
mov
and
stos
mov
daa
inc
or
out
lret
imul
and
outsl
jmp
stos
sbb
adc
movsb
hlt
movsb
inc
rorb
aaa
bound
pop
sub
pop
in
aaa
cmp
mov
dec
or
andl
imul
xchg
sbb
pop
scas
inc
ret
sbb
add
into
into
or
sbb
out
sbb
insb
cli
out
loopne
shrb
es
jns
ret
aad
pop
cmp
rol
mov
aam
pop
popf
fidivl
dec
je
cmpsl
add
imul
cmpsl
pop
loopne
call
pop
fs
mov
cmp
add
mov
push
fldt
dec
jecxz
mov
popf
push
inc
ss
pop
ja
std
or
sti
and
xchg
lret
repz
inc
mov
xchg
scas
or
outsb
movsb
jp
mov
cmpl
leave
adc
sub
jle
lods
push
outsb
cmp
push
stos
loopne
adc
cmp
lods
mov
inc
push
jg
sbb
or
cmc
flds
arpl
xchg
sbb
inc
xor
aaa
jle
add
push
cmp
fcoml
mov
mov
sbb
in
stos
gs
push
icebp
pop
adc
out
xor
hlt
fildll
xchg
pop
js
loop
or
loope
xchg
loop
pop
jnp
inc
pop
std
jg
repz
pop
fs
gs
fwait
push
test
cmp
jne
aas
push
stc
cmp
in
mov
arpl
leave
inc
in
shr
jmp
out
xor
imul
cltd
cmp
or
pusha
sbb
mov
in
jl
jno
cmc
pushf
data16
loopne
adc
fisubs
inc
arpl
xchg
hlt
add
in
int
testl
and
jg
mov
dec
into
test
pop
popf
mov
mov
ret
repnz
or
repz
xchg
push
push
arpl
mov
mov
mov
subb
mov
pop
mov
push
filds
pop
xchg
lock
inc
addr16
fmuls
push
push
movsb
ret
loope
call
fxch
and
das
push
loope
rol
mov
andb
iret
out
fsubrs
cmc
inc
fwait
repz
or
sbb
rorb
adc
ret
xchg
scas
and
ret
sbb
shlb
or
or
icebp
jb
dec
pusha
nop
loopne
mov
xor
lds
daa
outsb
push
ror
sahf
dec
sbb
stos
push
mov
out
dec
dec
push
adc
inc
pushf
xchg
inc
cmp
pop
ds
dec
ja
mov
push
push
idivl
dec
jp
fnstcw
jnp
add
imul
std
cmp
mov
fwait
push
or
and
and
addb
lahf
cltd
or
cli
cmpsb
leave
push
sub
and
push
jg
xchg
mov
sub
lcall
sbb
aad
push
loop
inc
shlb
mov
and
sub
mov
inc
adc
fwait
mov
and
hlt
push
mov
stos
popl
pop
orl
xorb
mov
imul
imul
aam
pop
test
xor
arpl
jno
xchg
dec
sti
cmpl
std
add
test
lret
insl
dec
and
js
mov
repz
out
sub
and
push
push
dec
fsub
adc
mov
lret
push
dec
pop
mov
js
scas
adc
xor
notb
addb
pushf
lods
pusha
mov
jns
or
push
sbb
or
mov
pusha
and
cwtl
sub
and
cmp
jo
xchg
lds
into
push
xor
mov
cmc
add
cmp
shll
sub
int3
dec
fstps
sbb
shlb
dec
add
jb
xor
cmp
fistl
lret
ljmp
dec
imul
int3
pusha
sti
stos
push
inc
cmp
push
pusha
bound
in
lret
lret
repz
mov
jo
aad
ret
lret
enter
inc
inc
movsl
mov
dec
stos
lods
dec
jae
ret
mov
data16
lret
xchg
mov
insb
cmp
je
add
cmp
or
inc
inc
int3
jb
and
mov
aam
pop
addr16
fsubr
gs
and
dec
movsl
cltd
testb
adc
out
mov
sbbb
dec
add
push
jb
jge
dec
insb
pop
dec
dec
test
jb
and
mov
lcall
adc
adc
pop
cmp
and
gs
and
mov
mov
lods
cmpl
adc
imul
movsb
test
inc
jb
cmp
icebp
rcrl
repnz
sub
into
cmp
inc
cmp
mov
sarl
ret
adc
fstp
sub
dec
sub
mov
cmp
inc
xor
aad
or
cltd
cmpsl
xchg
xor
rcrb
mov
sti
popf
dec
add
rcrl
fildl
jb
mov
inc
pop
cli
aaa
pop
cmpsb
mov
mov
js
xlat
and
sub
rcr
and
adc
in
or
sbb
add
movsl
adc
js
mov
push
mov
xchg
and
mov
jne
movsl
add
frstor
xchg
aam
cmp
pushf
push
movsb
mov
pop
pop
and
push
mov
xchg
cmpsb
pop
les
add
rcr
dec
decb
jp
jge
cmc
jg
mov
iret
add
mov
orb
xchg
ss
fistpl
pusha
sub
sub
push
test
cmp
pop
jg
imul
shrl
and
in
mov
pop
bswap
in
pop
pop
sub
sbb
call
inc
cmp
xchg
add
divl
addr16
jmp
mov
xchg
fisttps
push
cs
out
js
push
push
fisubrl
and
rolb
insb
xlat
jb
pusha
inc
xchg
in
lods
push
mov
sbb
and
xchg
ss
arpl
jo
jmp
lcall
mov
fisttpll
dec
mov
mov
and
mov
pop
jle
faddl
lret
add
fisubl
or
insb
xchg
lret
push
adc
adc
or
in
dec
movsb
cmp
adc
pusha
rclb
orb
into
loop
and
xorb
or
mov
iret
les
push
push
icebp
xor
and
fcoms
test
cld
cs
mov
hlt
inc
inc
cmp
mov
sbb
loop
imul
arpl
jge
pop
jns
xchg
xor
xlat
imul
xchg
out
jge
jns
mov
pop
xchg
mov
mov
xchg
xor
rcl
leave
shlb
push
mov
jge
insl
scas
imul
insb
jb
jle
mov
jmp
les
xchg
or
pop
xor
sbb
call
or
aad
and
and
xlat
popf
fdivrs
popa
mov
insl
pop
sbb
pop
xchg
repnz
cmpsb
xor
add
add
mov
repnz
mov
mov
inc
jl
cmpsl
fstpl
push
adcb
xchg
and
stos
dec
adc
pcmpeqb
sbb
jne
sub
push
imul
xchg
pop
vmwrite
xchg
fildl
dec
jae
or
mov
cld
xchg
mov
mov
or
les
popf
pop
xor
inc
mov
pushf
inc
push
sbb
sub
jle
xlat
sbb
aam
inc
inc
adc
xchg
mov
imul
imul
aam
and
sbb
fisubrl
scas
nop
sbb
xor
or
push
push
movsb
lcall
mov
shrb
inc
sub
or
mov
fistl
xchg
jne
push
jnp
movsb
cmp
inc
gs
dec
enter
cmp
push
push
mov
sub
jo
xor
or
mulb
pop
mov
inc
sarb
pop
mov
cli
div
dec
sub
dec
mov
cltd
and
xlat
sub
clc
aas
jae
and
mulb
mov
sbb
inc
sub
add
push
imul
stc
push
daa
shrl
xor
jl
mov
xor
push
aaa
push
xor
fstpl
out
or
mov
pop
repz
push
pop
rcll
xor
ja
or
enter
lret
test
sbb
ja
inc
scas
fisubs
cmp
popf
xchg
std
dec
push
jecxz
mov
addl
insb
scas
out
dec
jecxz
cld
and
mov
ret
inc
push
cmp
int
pop
add
call
arpl
lea
jnp
call
sub
daa
inc
jb
lcall
in
lock
and
subb
out
movaps
mov
or
lea
mov
mov
jbe
push
push
xchg
cwtl
sub
enter
mov
lahf
pop
out
push
pop
dec
push
ljmp
mov
xchg
test
fcomps
int
pop
lods
xchg
int
pop
push
push
or
popf
scas
les
mov
inc
out
out
ljmp
fistl
cmp
pop
inc
ljmp
dec
push
sub
inc
xor
xlat
lea
push
mov
daa
push
addr16
sub
loope
je
nop
jno
sub
mov
cmp
xchg
mov
subl
sbb
hlt
fsubs
stc
iret
push
xchg
jne
es
inc
dec
mov
adc
insb
arpl
mov
out
and
ficomps
lods
in
jbe
lcall
stos
sub
mov
inc
inc
add
sahf
sbb
push
pop
or
mov
bound
aaa
arpl
andl
insb
lods
dec
push
cmc
inc
aas
xchg
icebp
in
mov
stc
in
into
mov
inc
test
imul
pop
outsb
gs
enter
push
mov
sub
and
loop
lods
mov
repz
les
mov
adc
rorl
ja
jne
xchg
xlat
je
push
into
dec
dec
mov
adc
mov
inc
fbld
pushf
sbb
and
mov
push
mov
jno
jae
mov
mov
orl
xchg
rolb
dec
jmp
or
cmp
cmpsb
ret
shl
pusha
ret
inc
xchg
push
mov
daa
push
add
push
cmpsl
xchg
sahf
add
sbb
rcll
xor
and
jge
pop
adc
int3
into
scas
dec
mov
mov
mov
popa
push
aas
aam
cli
mov
sub
inc
lds
mov
xor
insb
cltd
cmp
push
adc
cld
mov
mov
mov
dec
or
mov
xchg
xchg
sti
mov
outsl
or
mov
daa
lret
push
and
dec
adc
cs
add
int
adc
adc
pop
cmp
mov
test
mov
pop
xor
in
mov
movsb
mov
push
jo
sub
loopne
push
gs
mov
ficompl
jo
cmc
sub
pop
daa
and
dec
out
inc
rcr
adc
std
dec
push
pushl
testb
jo,pn
das
jge
xor
shrb
stc
xchg
cmpsl
enter
out
mov
jle
pop
pop
popf
inc
xor
stos
sub
popf
mov
out
jl
push
mov
ret
lds
test
insl
mov
cmp
sub
cld
jne
iret
xor
fs
out
aaa
popa
or
leave
imul
or
jg
mov
ret
cmp
test
sbb
inc
cmp
enter
in
xchg
push
push
or
mov
dec
add
dec
aad
lret
cli
push
lahf
cmpsl
movsl
and
and
andb
scas
jnp
inc
fs
sbb
jle
stos
movsb
cli
adc
icebp
aad
out
lods
mov
fidivrl
pusha
insl
mov
gs
xchg
pushf
jecxz
xor
jmp
mov
imul
lods
adc
test
cmp
orb
icebp
sbb
jae
shl
cmp
xchg
xor
lahf
ljmp
ret
or
mov
out
fisubrl
out
fadd
push
pop
mov
shlb
rcrl
pop
ficomps
inc
insl
dec
lock
sub
mov
dec
loop
jno
sub
js
mov
or
dec
mov
lcall
xchg
fs
mov
or
pushfw
sub
cmp
outsl
sbb
loop
adc
jmp
out
pop
loope
lcall
popf
sbb
movsb
mov
push
jmp
cmpsl
sbb
pusha
das
pop
ds
out
mov
inc
sti
add
mov
mov
lahf
cmp
clc
mov
jbe
ljmp
insl
cs
add
test
mov
imul
mov
pop
nop
enter
hlt
imul
add
xor
add
jmp
and
adc
xor
loope
mov
insb
xchg
bound
insl
push
fdivr
ficomps
fidivrl
mov
cli
sarb
cmp
je
out
or
xchg
mov
ds
cltd
lcall
and
dec
repz
imul
cmpb
fwait
add
jne
rorb
in
sub
dec
inc
cltd
adc
adc
or
mov
mov
shll
iret
aam
dec
inc
xchg
lds
xchg
and
add
ljmp
pop
or
imul
push
outsl
mov
cli
pop
or
add
ljmp
lods
mov
mov
push
rorl
push
clc
pop
outsl
dec
aam
jp
push
inc
inc
pop
push
jl
movsb
aas
in
test
insl
inc
sbb
xor
add
outsl
mov
dec
ss
mov
cmc
clc
xor
inc
jle
xchg
shr
jns
scas
xor
cmp
loope
and
mov
loop
jg
adc
push
jecxz
popa
xor
mov
jbe
int
test
int
scas
int
sub
add
mov
std
andb
sbb
mov
push
xor
negb
xchg
inc
sbb
pop
xchg
add
xchg
popa
mov
scas
cmpsl
xchg
jmp
test
outsl
das
cmp
push
mov
jmp
test
pop
rcl
jnp
fisubl
fists
icebp
sbb
aas
adc
out
aaa
adc
repz
cwtl
das
pop
inc
add
stos
stc
jns
repnz
jae
and
dec
xchg
pop
jl
lods
mov
lods
neg
insb
ret
add
mov
int
and
push
movsl
pop
divb
mov
in
ret
lret
push
sbb
xchg
and
xor
addr16
cltd
and
nop
push
add
adc
pop
adc
repz
sahf
and
or
jge
rcrb
xchg
mov
stos
lock
xor
adc
jnp
add
push
leave
add
xlat
sub
aas
jnp
sub
test
sarl
lret
add
jnp
mov
pop
xor
lahf
outsb
movb
lds
cmp
mov
sub
jmp
inc
push
movsl
cmp
push
sahf
cmp
sbb
lahf
pop
xchg
push
movsb
lds
pop
inc
sub
aad
call
out
fcompl
mov
adc
fistps
sbb
mov
imul
xlat
cmp
lcall
add
mov
sbbb
popa
sahf
mov
or
cmpxchg
sbb
jg
pop
cmp
es
pop
in
push
or
pop
dec
sub
repnz
mov
int
clc
clc
or
push
fnstsw
aas
scas
push
xchg
mov
adc
cwtl
lahf
inc
dec
lret
je
add
sub
and
lea
shll
pop
xchg
xor
pop
outsb
imul
inc
adc
pusha
xor
push
xor
mov
sahf
mov
movsb
fwait
xchg
mov
lcall
ss
jnp
lods
push
and
subb
jg
arpl
or
jmp
pop
cld
xchg
jns
push
mov
fdivrs
xchg
insl
xor
sahf
in
sbb
movb
pop
lods
or
xor
pop
cmc
push
sub
outsb
dec
popf
leave
dec
mov
hlt
sub
xchg
aad
dec
pop
daa
leave
add
sahf
xor
das
xchg
adc
push
out
popf
sti
push
xchg
pusha
mov
jns
sti
inc
add
xchg
xchg
mov
movl
ret
ds
or
test
mov
in
and
dec
and
mov
mov
xchg
sbb
add
imul
inc
pushf
mov
inc
pop
mov
and
cs
or
notl
ret
jmp
in
xchg
popf
and
rol
sub
push
lods
jp
lahf
enter
dec
push
push
adc
cmpsb
xadd
sub
rorb
ja
adc
lock
xchg
mov
int
dec
xchg
cmpsb
lahf
je
lcall
and
leave
mov
push
mul
jbe
test
inc
cmpsl
lahf
push
jnp
push
dec
mov
dec
xor
rcl
pop
les
js
mov
fwait
cmpsb
inc
insb
push
pop
mov
pop
rolb
lcall
mov
ss
test
mov
js
xor
mov
repz
mov
xlat
cmp
cs
push
in
dec
popa
jno
xor
mov
mov
in
loopne
leave
dec
dec
jae
ficoms
pop
rorb
inc
mov
or
aaa
aam
mov
pop
push
shll
push
jl
nop
mov
sti
add
inc
jmp
fcmovnbe
fs
call
push
subl
push
addr16
lock
mov
push
cli
cli
lea
adc
arpl
mov
xchg
dec
test
sub
arpl
xchg
push
test
xchg
inc
mov
in
mov
inc
ds
push
push
jecxz
mov
subb
jmp
mov
and
pop
outsb
in
aad
push
inc
in
push
mov
xchg
jle
call
dec
mov
pop
pop
fistps
xchg
and
push
popa
pop
das
xor
adcl
cs
sub
xchg
fiadds
das
pushf
sub
xor
push
pop
push
test
inc
mov
ss
mov
testb
insl
mov
adc
cmp
pop
push
cmc
orl
cmp
in
jp
dec
mov
dec
std
and
sti
pop
movsl
data16
cld
sbb
insl
out
aas
xchg
nop
in
imul
rolb
mov
aam
pop
test
fbld
push
jns
sub
xchg
cwtl
push
test
fsub
sbb
and
pop
add
lods
xor
pop
test
pop
daa
es
loopne
pop
test
adcl
jl
in
inc
test
stc
iret
loopne
ljmp
adc
std
test
inc
sbb
jnp
fimull
xor
dec
pop
adc
cltd
xor
std
into
addr16
icebp
outsl
or
mov
push
lock
push
popf
fistl
mov
clc
in
mov
inc
test
xchg
cmp
loopne
cmpsb
mov
cmpsl
add
or
sbb
mov
out
xlat
adc
dec
push
inc
data16
jbe
cmp
xor
shlb
mov
push
cmp
mov
add
mov
ljmp
movsl
or
jns
lods
mov
in
add
add
and
stos
sub
outsl
adc
inc
pop
in
bound
add
sub
sbb
or
xor
xor
xor
pusha
setge
pop
or
aam
cmp
xchg
sarl
sti
dec
xor
mov
or
rol
jecxz
and
xor
dec
mov
xchg
push
jb
jne
shlb
into
sbb
insb
xchg
insl
fs
xchg
in
push
mov
je
clc
sbb
jns
xchg
sub
rorb
push
push
jmp
pop
shr
lods
shll
das
mov
shlb
clc
cmp
xchg
mov
fwait
pop
int3
lods
ds
popf
cmpsl
dec
xor
je
gs
cmp
or
sub
in
inc
xchg
imull
adc
mov
outsb
out
or
mov
dec
sub
out
or
xor
push
lds
test
cmp
cmpsb
inc
insl
jno
jno
add
sbb
mov
fisttps
jecxz
cld
lock
stos
jo
fsubl
xchg
xor
push
or
into
and
pop
rcll
jb
cmp
mov
add
sbb
sbb
pop
stos
inc
idivb
aas
repz
cltd
push
add
dec
and
sbb
or
fwait
push
fistl
aam
jnp
jge
pop
mov
mov
lcall
sub
dec
push
push
push
add
mov
push
dec
adc
dec
jbe
test
and
jno
pop
mov
xchg
add
or
add
mov
lea
or
lcall
fsub
pop
nop
lahf
mov
dec
loopne
add
je
mov
sbb
bound
cmp
xlat
in
mov
iret
push
insl
jbe
pop
imul
jl
mov
fistpll
dec
int3
pop
fcomps
mov
sahf
jno
stc
roll
aaa
sbb
fs
test
fisubl
pop
test
sti
xchg
int3
or
mov
adc
scas
sbb
push
pop
mov
and
repnz
cmp
in
pusha
or
in
lds
push
or
push
cmpsb
pop
push
clc
movsl
fsubp
sub
pushf
xor
push
inc
shlb
pop
add
idivb
mov
sub
icebp
incb
push
or
inc
dec
fcomps
dec
xchg
jns
jb
inc
lahf
or
xchg
test
lea
xlat
repz
jb
xchg
inc
call
cmc
in
shrl
jb
cmc
jne
pop
outsl
cmc
rcl
cmp
adc
icebp
jecxz
loopne
mov
ret
inc
loopne
test
inc
imul
sub
in
repz
push
hlt
mov
xlat
shll
lods
mov
scas
dec
sahf
jmp
pop
xor
xor
les
mov
mov
orl
push
push
mov
movsb
loopne
rolb
mov
push
push
sub
movb
xor
mov
cs
and
push
stc
into
stos
and
les
or
popf
or
pop
arpl
imul
fsubp
push
mov
pop
sarl
in
sarl
dec
rcrl
and
xchg
lret
gs
cltd
clc
and
in
add
pop
ljmp
stc
mov
mov
popa
sub
jb
inc
or
dec
cmpsl
mov
int3
or
jl
xor
lods
lret
out
movsb
shll
push
xchg
lahf
into
xchg
stos
std
int3
pop
fsubrs
scas
push
lret
mov
mov
lock
jae
lcall
inc
into
add
stc
stos
test
push
mov
inc
pushf
in
das
gs
jp
jns
jge
mov
push
push
cld
and
push
out
bound
enter
sub
or
arpl
jnp
ss
scas
imul
jb
cmp
inc
aam
cwtl
int3
inc
out
jno
cmp
pushf
cmp
cmc
jmp
xchg
cltd
xchg
aaa
outsb
addb
lcall
rorl
mov
inc
stos
bswap
push
shr
lret
repz
mov
insb
cmp
jge
idiv
out
hlt
out
adc
out
sub
mov
lods
sbb
pop
jg
ds
fdivl
push
mov
sub
loopne
shlb
sub
fimull
mov
rcr
fwait
in
cmpsl
je
outsl
dec
andl
aad
mov
inc
je
rcr
movsb
push
fldl
xor
rcrb
aas
jns
jle
xlat
lds
rep
scas
aas
cs
sbb
or
out
sub
ss
das
test
xchg
ficompl
mov
and
dec
xchg
xorl
adc
cmp
sub
add
scas
xor
lds
jbe
loope
ret
outsl
mov
jle
rcrl
imul
fldl
sbb
pop
in
mov
cmp
ret
cmp
inc
sti
xchg
dec
jmp
jo
add
cmpsl
or
lea
iret
lcall
dec
pop
pushf
or
jae
les
test
adc
and
mov
inc
jb
lods
rcrb
pusha
or
inc
jbe
push
sbb
int
push
dec
cwtl
and
mov
xor
pmaxsw
arpl
jns
inc
adc
imul
popa
aam
and
xchg
xor
jo
shrb
pop
es
push
sub
test
out
dec
scas
sub
or
xor
add
jne
jg
faddl
icebp
sub
and
and
adc
outsb
imul
cwtl
inc
jg
and
sbb
mov
jae
or
mov
xchg
xor
les
insb
ljmp
sub
movb
mov
cli
aas
or
aas
add
repz
shl
iret
add
pop
pushl
add
fdivrl
lods
insb
jg
cli
cmc
mov
cli
lods
aam
jle
and
xor
xchg
xor
icebp
mov
fistl
mov
push
and
loope
jb
sbb
push
sbb
and
xchg
sbb
add
stos
add
les
push
popa
movsb
and
jne
pop
decl
mov
fisttpl
rorb
sbb
and
inc
repnz
xor
lret
inc
sub
cmp
loop
push
pop
pop
sbb
adc
scas
popa
jns
adc
sub
int
mov
push
and
and
roll
and
inc
inc
add
adc
sbb
adc
and
pcmpgtw
push
and
push
mov
xchg
push
les
push
lahf
call
data16
adc
dec
outsl
loop
mov
int
xchg
pop
fstpl
sbb
test
add
pop
pop
in
sbb
and
lret
daa
pop
and
in
push
pop
test
sub
mov
repnz
cli
stos
push
pop
pop
pop
jns
and
cli
fwait
pop
aas
or
ds
lahf
dec
add
gs
in
out
mov
imull
lcall
mov
pop
aad
arpl
jmp
sti
pop
fadds
pop
lock
nop
movsb
andb
adc
inc
xchg
sbb
xchg
mov
das
xor
neg
sub
and
hlt
int
or
inc
sub
push
jb
jp
insl
mov
push
and
push
pop
aas
xor
push
jne
and
xchg
cmp
les
mov
adc
jb
push
insl
sbb
mov
pop
jp
aad
adc
sub
fdivrs
cmp
mov
mov
flds
ja
test
aas
pop
mov
jne
mov
repnz
mov
and
push
xchg
add
or
inc
push
movb
cwtl
cwtl
daa
adc
xchg
sub
xlat
sub
sbb
lcall
jp
aas
mov
or
mov
movsb
dec
mov
add
mov
xor
nop
mov
pop
sbb
jmp
push
add
sahf
add
addb
pop
mov
pop
arpl
adcb
pop
daa
movq
ja
push
dec
movsl
adc
mov
bnd
xchg
xchg
mov
roll
xor
adc
cmp
int
push
mov
mov
mov
jbe
lret
or
push
xlat
sub
inc
rclb
subb
popa
xor
and
sub
fidivl
je
push
sub
inc
mov
adc
push
add
fnsave
mov
mov
sub
test
adc
jg
aam
sub
out
mov
jno
clc
push
pop
xor
ret
push
fdivr
loop
shl
jmp
rclb
aad
mov
jo
popa
xor
jmp
sub
xchg
das
xor
aas
icebp
daa
pop
xor
inc
xor
cs
mov
sbb
lds
fisttps
call
sub
mov
push
mov
mov
push
xor
mov
xchg
xchg
mov
add
hlt
push
inc
stc
mov
mov
sub
aad
ret
lret
into
incb
or
dec
mov
mov
jecxz
sbb
test
fidivs
cwtl
and
push
cmpsb
cli
shrb
xchg
sbbl
sar
cmp
adc
sub
ss
call
leave
loope
mov
aad
add
pop
andb
arpl
mov
pop
cmp
and
mov
iret
cld
sub
inc
and
fwait
and
orl
mov
jp
push
mov
bnd
adc
imul
sahf
mov
cld
adc
xbegin
je
out
sti
xor
and
shl
mov
es
jl
push
sub
subb
jecxz
shl
lea
jnp
stos
push
cmc
shrl
inc
cmp
and
test
fistpl
lret
test
inc
aam
ret
sarb
xchg
scas
cmp
sahf
sub
and
int3
fildl
mov
adc
jmp
icebp
jge
mov
sub
decb
push
cli
pusha
add
rol
repnz
pop
leave
imul
sub
push
aam
lds
pop
adc
jo
cmp
sbb
frstor
int3
les
xchg
jbe
mov
enter
aam
mov
or
mov
std
es
call
outsl
fdivrl
xor
inc
xchg
cmp
jp
jne
sahf
pop
mov
in
add
xlat
enter
cld
fistpll
mov
jmp
push
jl
fwait
xchg
inc
and
fists
lahf
sub
jge
popa
push
and
out
fs
xor
jns
xchg
inc
cltd
test
pusha
xchg
jno
cld
mulb
shll
and
mov
inc
cld
cld
mov
cli
roll
cmp
popa
movsb
scas
add
out
arpl
stos
insb
push
test
outsb
fwait
bound
popw
sbb
mov
outsb
mov
inc
push
sbbb
xor
xor
push
fldt
mov
into
sbb
jg
inc
xchg
jb
push
js
scas
fstps
push
int3
test
orps
mov
shl
out
push
imul
iret
mov
test
dec
out
sbb
adc
xchg
scas
jge
adc
push
push
popf
mov
fdivrs
jnp
push
fistpll
mov
or
inc
mov
pop
xchg
inc
adc
into
inc
pop
cltd
xchg
pop
xor
out
cmc
cwtl
jno
scas
icebp
xchg
out
mov
mov
lods
leave
adc
mov
movsb
xor
nop
dec
xchg
cli
and
pop
inc
mov
fdivs
sub
daa
and
inc
xchg
add
adc
in
pop
add
dec
jg
idivl
dec
stos
or
fs
pop
adc
ss
popf
rorb
mov
or
push
es
bound
add
cmp
and
mov
pop
sub
call
cld
push
jae
fsubrl
mov
xor
or
push
sahf
dec
sti
push
pop
pop
popl
lea
pop
sub
les
pop
jg
dec
xchg
xchg
adc
pushf
cmp
les
jo
mov
loop
cli
cli
fnstcw
pop
or
pop
ret
push
icebp
mov
pop
mov
mov
pop
insb
add
mov
in
xor
mov
imul
sub
mov
sub
xchg
xor
mov
xlat
dec
xchg
cmp
push
inc
iret
mov
ret
mov
jne
stos
mov
ret
xchg
add
decb
cmp
jge
es
adc
ljmp
add
fcomi
iret
push
mov
decl
add
sub
adc
sahf
sbb
push
mov
pop
arpl
mov
jne
fnsetpm(287
dec
jo
lea
out
sbb
aas
add
push
cltd
sub
in
add
lock
mov
pop
pop
js
stos
shll
bound
sahf
xor
into
xlat
or
jmp
push
adc
leave
test
js
and
fists
fwait
ds
or
xchg
adc
pop
sarb
fadd
adc
xor
pop
dec
dec
mov
pop
loop
repnz
lods
or
notb
dec
push
imul
xor
inc
mov
fs
lcall
inc
ret
sub
pop
nop
cmpl
ret
pop
mov
je
in
lods
adc
or
iret
xor
xchg
push
aad
xor
aam
stos
sub
jecxz
dec
lret
cwtl
xchg
jle,pn
cpuid
sub
mov
nop
and
ret
or
aam
test
arpl
sarl
sbb
movsb
mov
mov
pop
pop
push
ja
adc
outsl
adc
lods
imul
sahf
mov
imul
jecxz
and
cmp
ffree
imul
add
mov
push
sbb
jne
cmp
adc
push
mov
addr16
inc
jmp
mov
fists
mov
pop
out
dec
sbb
lods
jecxz
xor
adc
lods
jmp
mov
call
push
push
mov
jl
push
fcomip
xchg
or
xchg
push
in
cmp
enter
int
lods
lcall
push
adc
add
push
das
shrl
mov
cmp
enter
sub
mov
aad
push
stos
dec
xchg
jno
mov
sbb
sub
addb
lods
cmp
rcrl
out
and
jae
movsb
xchg
ret
sahf
cli
push
ljmp
fnstsw
cmpsb
and
insl
in
dec
mov
mov
test
mov
and
jae
jns
aam
fs
loope
test
inc
fildll
jl
cmp
cmp
sbb
repnz
add
sarb
jb
push
call
leave
insl
in
jg
jb
hlt
dec
je
mov
roll
int3
ret
sub
dec
aaa
mov
imul
mov
sub
dec
pop
push
and
jae
scas
inc
jl
imul
mov
xlat
data16
mov
and
cmp
inc
orb
mov
pop
aaa
mov
dec
lods
push
jg
lods
into
test
adc
inc
jl
repnz
mov
ret
ret
push
dec
test
adc
jns
jmp
push
sub
out
lods
cmpsl
test
cmp
scas
icebp
and
test
pop
push
hlt
adc
jbe
or
sarl
loope
mov
add
xor
cmp
ds
adc
leave
cmpsl
cmp
dec
lcall
scas
mov
inc
or
fcomps
inc
loopne
mov
jnp
pop
out
shl
es
inc
cltd
cmp
or
ja
and
in
inc
lods
jmp
js
mov
movsb
iret
add
jae
je
outsb
cmc
cmp
icebp
mov
ljmp
fldenv
je
shrb
mov
mov
and
bound
add
mov
jg
cmc
jnp
icebp
test
cs
loope
daa
mov
push
arpl
scas
dec
sub
cmp
adcb
sbb
add
and
jne
cltd
insl
repnz
xchg
xor
mov
fisttpl
dec
pop
lahf
or
inc
shrb
add
fisubs
jl
inc
pop
mov
popl
xchg
dec
mov
inc
outsl
sub
jb
xor
mov
mov
add
add
pusha
mov
lods
xchg
mov
movsb
imul
ds
xorl
icebp
or
mov
xchg
and
push
idivl
xor
mov
imul
lea
test
outsb
push
in
mov
push
mov
pop
sarb
test
dec
adc
push
or
dec
and
xchg
xor
add
push
aas
cmc
cmp
push
in
int3
mov
test
nop
pop
fs
mov
out
test
jecxz
testb
xor
add
jg
shll
adcb
or
add
test
adc
insb
dec
daa
lds
xchg
and
iret
out
hlt
add
leave
xchg
mov
mov
and
cmc
cmpsb
pop
jno
pop
add
sub
cmp
lods
fwait
mov
inc
and
nop
xchg
mov
jbe
push
sbb
ja
cmp
add
and
xor
std
test
add
imul
xchg
mov
push
jns
call
mov
sub
xlat
mov
mov
mov
dec
add
ficoms
jne
mov
int3
mov
adc
xor
pop
aad
jge
lcall
inc
adc
dec
js
and
add
mov
rolb
pop
lahf
push
hlt
or
imul
adc
mov
dec
pop
js
rcr
mov
pop
and
out
cmp
ret
jecxz
sbb
or
mov
sbb
lret
mov
push
mov
sbb
cld
mov
addb
pop
pavgb
jns
cmp
aaa
nop
div
lds
sar
sbbb
fimull
test
aas
sbbb
lret
bound
mov
in
inc
add
or
lahf
pop
push
iret
insl
lret
scas
push
lahf
jne
insb
roll
enter
in
in
mov
sti
std
fmuls
rcrb
adc
xor
dec
add
sbb
inc
push
imul
and
insl
push
rcrl
in
or
lahf
sbb
fsubrs
je
xchg
les
lcall
jg
mov
inc
movsl
mull
lds
push
mov
icebp
cmpsl
xchg
adc
dec
or
sub
pop
cli
xorb
mov
mov
imul
jle
ljmp
repz
mov
xchg
test
xor
jl
sub
sbb
mov
or
push
pop
xchg
inc
dec
cwtl
dec
sbb
iret
xor
test
mov
pop
mov
xchg
xchg
fnstcw
div
cmp
xor
mov
adc
aas
inc
inc
mov
fisubrs
lret
in
dec
pop
je
xor
in
cli
xchg
mov
jne
xor
xorl
mov
mov
xor
shr
and
xchg
xchg
aad
adc
add
mov
in
dec
and
in
scas
jge
xor
xor
cmpsl
inc
or
stc
inc
pop
repz
into
repz
pop
repz
inc
rcll
lds
adc
or
scas
push
push
in
fmul
or
pop
shll
popa
insb
incb
pop
xchg
movsl
scas
les
dec
inc
pop
lods
pop
movsl
mov
ret
loop
ficompl
mov
call
dec
icebp
lret
dec
mov
ret
pop
ss
jne
push
ficompl
sub
sub
sub
add
fwait
notl
insb
xor
jno
stc
sbb
imul
sub
mov
mov
shrl
pop
cmpsl
test
inc
xchg
xchg
dec
test
dec
adc
mov
cs
mov
inc
xchg
push
inc
xor
add
test
cmp
mov
movsl
dec
es
sbbl
rcrb
jo
pop
mov
push
sbb
adc
ror
in
shrb
pop
outsb
andb
cmp
fsubr
leave
into
inc
lea
add
sub
bound
int
and
mov
ja
jecxz
repnz
lcall
je
adc
fidivs
data16
dec
cld
sahf
push
push
ret
adc
mov
sbb
imul
sub
test
push
jge
fcoml
outsb
negb
idivb
adc
addr16
mov
icebp
icebp
out
mov
dec
lcall
lret
jns
mov
imul
out
scas
test
cld
aam
mov
push
loopne
add
and
push
loop
xchg
sbb
jmp
dec
aaa
jae
dec
xchg
loop
ror
out
sbb
pop
hlt
pop
std
test
pop
popa
dec
stos
push
fcompl
jmp
xorl
js
int
cmpsl
lret
push
sahf
aas
rorb
mov
fiadds
mov
ss
jmp
cmp
fidivl
adc
out
xchg
sbbb
js
inc
push
push
lods
in
insl
daa
lret
shrb
dec
jne
push
ljmp
into
xchg
mov
xchg
popa
mov
inc
mov
mov
mov
in
add
cmp
mov
arpl
xor
cmp
and
cli
aad
iret
leave
lea
or
loopne
test
jnp
dec
jae
cmpsl
or
insl
add
lea
data16
dec
movsl
pushf
mov
enter
ss
or
outsl
orl
mov
inc
xorl
and
fs
das
jg
pop
addr16
scas
mov
or
ficoml
push
filds
push
aam
popa
inc
mov
jle
out
xchg
scas
adc
cmp
outsb
sub
jb
add
xchg
insl
sbb
int
mov
orb
dec
in
pop
cmp
dec
jns
pop
jmp
aad
iret
sbb
inc
in
sub
dec
inc
adc
inc
sbb
lea
push
pop
push
out
es
lea
xchg
daa
pop
scas
incb
cmpsl
mov
adc
dec
adc
loopnew
sub
outsb
mov
push
adc
inc
mov
ss
stc
rolb
insb
xor
lock
add
mov
cmc
lods
xor
cmp
sub
or
mov
xor
adc
rclb
mov
inc
and
into
arpl
pop
mov
ret
cmp
enter
insb
in
sub
icebp
fistpll
push
addr16
sub
das
fisubl
mov
cmp
xchg
mov
mov
fidivrl
stc
cmp
push
cld
mov
jmp
xchg
sti
stos
out
gs
lret
push
enter
out
std
cmp
add
jmp
dec
push
fildll
adc
inc
daa
xor
negb
pop
int3
stos
fiadds
jle
sub
aam
repnz
test
jmp
dec
mov
add
insb
repnz
insb
adc
xor
mov
iret
xchg
clc
push
push
xchg
dec
push
inc
sub
mov
xchg
arpl
ljmp
mov
jns
xchg
das
and
pop
cld
test
or
ret
and
test
rcll
jb
pop
sub
test
rorl
push
push
xor
mov
je
movsb
nop
pop
mov
mov
xchg
int
in
xchg
stos
cld
mov
mov
or
dec
addl
dec
pop
pop
cwtl
cwtl
lcall
fs
mov
test
cmp
sbb
lods
mov
jns
mov
sub
jo
and
dec
adc
jp
ss
popa
fmul
mov
cli
cmp
mov
pop
aad
mov
ja
cmpsl
pop
dec
push
jbe
jg
je
outsb
cmp
gs
push
out
push
cwtl
pusha
sbb
jecxz
in
mov
adc
and
jbe
lea
fisubrl
inc
xchg
repz
xchg
outsb
dec
inc
push
stc
xchg
lods
pop
dec
aaa
dec
ror
mov
mov
cmp
mov
push
xor
cmc
lret
pop
and
iret
sbbl
push
ret
cmpsb
repnz
lds
fisubl
adc
mov
inc
into
jno
add
push
pushl
push
cli
push
xor
mov
sti
nop
lods
int
cmp
xchg
sbb
subb
movsl
adc
xchg
adc
es
mov
jo
aam
cmpsl
inc
push
in
andb
es
adc
sbb
mov
mov
addl
or
js
xchg
pop
je
ss
xchg
xlat
mov
in
dec
ret
or
arpl
ret
dec
push
jb
out
into
scas
mov
das
inc
xchg
pop
call
or
push
es
cmp
test
stc
sub
call
fnsave
lods
mov
xchg
sti
and
test
je
cltd
add
outsl
repz
mov
dec
mov
xchg
dec
jle
push
cwtl
mov
nop
jo
adc
mov
pop
mov
sbb
sahf
add
or
leave
clc
dec
loope
dec
mov
dec
push
cwtl
jne
pop
jnp
mov
xchg
sbb
ret
push
add
push
out
pop
mov
btr
sbb
bound
inc
adcb
fistl
out
enter
js
jne
nop
mov
rcl
lock
cltd
mov
mov
push
jne
inc
xchg
shll
xchg
cld
js
sbb
shlb
in
lret
jge
rclb
pusha
stos
test
jae
inc
shlb
sarl
sahf
les
inc
xchg
pop
hlt
or
fdivr
loop
add
mov
stos
nop
repz
push
dec
xchg
add
dec
add
sub
ret
cs
jb
or
jo
call
dec
lcall
jge
add
pop
xchg
xor
lret
movsl
sarb
sahf
push
fildl
adc
sub
int
cmp
jge
dec
add
cmpsb
add
mov
mov
dec
ret
jno
sub
and
out
cltd
push
out
jb
sbbb
and
and
iret
inc
mov
loope
jne
stos
data16
dec
ljmp
lcall
out
idiv
add
pop
mov
pop
fldt
not
inc
pop
fimuls
adc
cmp
inc
mov
addb
xchg
ds
jnp
fadds
in
lret
popf
stos
xor
cmpsl
jp
cwtl
sbb
pop
adc
add
pop
add
cld
dec
loope
mov
pop
mov
aaa
ds
adc
mov
call
outsl
xor
iret
sbb
mov
fisttps
addl
ss
or
or
cmc
les
cmp
negl
idivb
mov
dec
pop
and
into
jp
test
js
or
aam
lods
and
rcll
cmp
push
int3
int
xchg
push
call
test
cld
jno
or
test
ret
pop
fidivs
mov
or
add
mov
mov
lcall
adc
mov
cmp
loope
or
loop
scas
dec
adc
adc
out
mov
clc
lret
jmp
or
lock
jae
repz
add
adc
addr16
lret
aam
xor
mov
or
arpl
add
fldl2t
cmp
cmc
xor
es
lahf
push
pop
loope
and
mov
fs
sub
pop
insb
loop
notl
pop
cmpsl
in
inc
rorl
arpl
enter
lahf
cwtl
dec
jae
xor
or
sub
jmp
mov
jecxz
dec
push
loopne
hlt
test
mov
jge
repnz
ds
pop
aam
hlt
mul
sub
sub
xchg
fsts
and
ja
cld
and
repnz
sbb
cmp
popa
rcrb
inc
jae
or
es
push
push
and
add
push
mov
in
mov
sbb
scas
cli
inc
lret
nop
adc
cmp
push
incl
pop
push
cmpsl
mov
fildl
sti
fldl
imul
push
adc
jmp
xor
dec
mov
fisubrl
fcomp
faddl
fldenvs
orl
jo
add
cmp
cmpb
and
pusha
sbb
les
adc
in
mov
popf
push
inc
nop
decl
jmp
push
out
pop
dec
jb
test
popa
xor
ret
mov
shrb
sub
clc
mov
rolb
insl
inc
mov
push
xchg
in
pop
mov
mov
add
out
jp
sbb
incb
xchg
add
in
mov
mov
loop
out
mov
cmp
data16
fs
jecxz
inc
out
pop
adc
add
mov
int3
xchg
cltd
ret
cmp
mov
loop
mov
push
ret
call
scas
cwtl
enter
aad
pop
xchg
xchg
xor
push
sub
mov
mov
jbe
ljmp
pop
lock
mov
in
mov
adc
in
push
xor
push
jge
sub
lds
push
shll
push
xchg
outsb
daa
cs
push
mov
cmpsl
jnp
inc
loop
or
or
lea
out
adc
or
inc
test
mov
sub
inc
es
loope
push
adcl
mov
aad
xchg
outsb
jo
xchg
pop
xor
lea
mov
rolb
int3
cmpb
mov
lea
dec
add
mov
sub
fistps
adc
icebp
sub
cmp
jp
pushf
lahf
test
sti
cmp
add
pop
pushf
jl
push
int
cmp
imul
cmp
int
scas
cwtl
lea
cmp
in
pusha
imul
dec
aam
jno
dec
mov
inc
add
ja
aas
pusha
xchg
adc
jae
jmp
aaa
loopne
movsb
jbe
xor
add
mov
mov
mov
mov
cmp
mov
sti
imul
cmp
in
mov
cli
ss
push
cmp
or
mov
inc
pop
aaa
out
cmpsb
cld
jl
into
stos
push
inc
mov
das
daa
aas
jnp
and
fidivrs
movsl
loopne
mov
push
in
ret
adc
adc
jp
out
lahf
repnz
dec
sub
sub
jno
mov
add
hlt
add
test
sub
test
fsts
xlat
jle
mov
mov
adc
mov
mov
rcl
lret
xchg
mov
out
or
or
loopne
pushl
mov
dec
call
adc
ficomps
or
sub
incb
sub
push
rorb
insb
jo
loope
mov
test
mov
cvtsi2sdl
idivl
sbb
adc
lock
test
inc
dec
enter
je
pop
pop
mov
sbb
dec
mov
in
repnz
aas
push
adcb
cmp
stos
xchg
and
stos
xchg
add
xchg
xor
xor
orl
or
cmpsl
insl
xor
bound
adc
mov
out
push
push
mov
out
loope
hlt
jo
sbb
dec
inc
and
or
xor
pop
xor
lahf
roll
es
imul
negl
scas
jl
xor
dec
data16
ds
ss
jo
call
cmp
cli
lods
add
test
test
or
mov
push
lock
add
loope
xchg
jle
loopne
jmp
imul
mov
cmp
test
mov
stos
popf
jo
cmpsb
sti
push
xor
fsts
outsb
in
inc
jbe
sbb
test
ss
call
sbb
mov
faddl
inc
fsubr
sub
lds
jno
push
push
cmp
inc
inc
mov
dec
mov
sub
sti
dec
mov
xchg
loope
sbb
cmp
addr16
dec
lea
dec
xor
divb
and
push
mov
cmp
out
pop
or
xor
add
dec
mov
push
and
rol
jg
ljmp
test
and
cmpsb
ljmp
xor
repz
lahf
xor
mov
mov
jl
lret
stos
mov
pushaw
pop
adc
insb
mov
insl
mulps
je
mov
out
jbe
jge
xor
cmpsl
jmp
mov
jp
jbe
push
jo
dec
and
jecxz
int3
divb
sub
inc
sbb
mov
outsb
sbb
lahf
into
or
sbb
cmp
xchg
jo
insl
mov
mov
jl
iret
push
dec
cmp
je
mov
sahf
fldenv
rcll
pop
out
stos
popa
inc
in
mov
push
push
xor
shr
lret
fstpt
jne
test
ljmp
and
lea
ret
hlt
inc
les
push
std
js
pop
inc
ja
lods
mov
pop
inc
cmp
lods
push
cmp
es
mov
mov
mov
orl
in
cmp
dec
mov
dec
xorl
orl
cltd
cmp
ficompl
ret
xchg
xor
xchg
push
xchg
push
fwait
nop
xor
addr16
push
cmp
lret
inc
fidivrl
mov
or
call
mov
in
lods
sub
sbb
cld
pop
clc
pop
jns
cmp
mov
jmp
aad
inc
sbb
or
sub
gs
adc
aam
jo
out
cmc
inc
mov
outsb
aam
cld
aam
cmp
mov
lea
pop
xchg
outsb
out
fdivrl
ret
jne
cmc
dec
iret
hlt
jne
test
mov
push
sbb
inc
enter
jecxz
in
cmc
fcompl
fistpl
fildll
mov
lahf
hlt
lret
inc
push
mov
lcall
int3
adc
sbb
or
mov
push
or
mov
cmpsb
sub
outsl
inc
ret
xlat
add
cmp
mov
arpl
dec
cmp
jg
addr16
mov
and
jmp
cmc
arpl
adc
mov
fistl
pop
pusha
mov
dec
cmp
ret
xchg
pop
loopne
je
mov
jbe
jae
or
and
mov
mulb
test
and
sub
inc
xchg
jle
push
mov
push
mov
inc
mov
adc
fwait
repnz
inc
xor
stc
inc
push
js
sti
sub
push
jb
ret
and
xor
dec
sti
lahf
mov
sahf
int
and
sub
xor
les
mov
stos
jo
movsb
xchg
mov
mov
outsl
in
pop
idiv
shrl
pop
inc
pop
sub
pop
and
adc
mov
jecxz
orl
xorl
sub
add
movsb
jb
mov
outsl
sub
xor
cwtl
push
iret
pusha
or
mov
pop
mov
jle
inc
stos
movl
dec
adc
push
sub
cli
arpl
dec
pop
cwtl
push
sbb
pop
pop
clc
pop
mov
popa
lods
sti
or
lea
sarb
jmp
jl
pop
enter
enter
sub
mov
data16
or
lahf
aad
mov
outsb
cltd
lret
mov
mov
cmpsb
std
les
sbb
mov
cli
pusha
pop
mov
sbb
out
pop
lods
cmp
cmpsl
push
fstpl
addr16
outsb
int
daa
jle
in
or
dec
jg
lea
jno
and
or
add
aaa
hlt
and
push
cmp
jle
cmp
inc
cmp
lods
std
cmp
sahf
movsb
push
push
push
data16
push
ljmp
cmp
xchg
clc
xor
cmpsl
orl
imull
insb
jnp
jne
or
or
out
push
mov
out
dec
xor
aas
popf
roll
incl
xchg
inc
stos
enter
pop
cmp
push
pop
mov
cmc
pop
jge
xchg
pop
std
pop
rcrl
pop
xchg
out
fmulp
xchg
add
shl
xchg
repz
sub
in
out
repnz
imul
jae
and
cmpsb
lahf
lahf
decl
pop
outsb
cld
pop
sub
or
stc
int
lahf
lret
incl
mov
or
pop
mov
or
lods
inc
mov
add
cwtl
push
shll
cmpsb
dec
xor
mov
lds
sarl
inc
int3
ds
xor
imul
outsb
adc
push
stos
fdivs
pop
cmpsb
push
mov
out
xor
lret
inc
jnp
xchg
pop
imul
mov
fcoml
jns
sub
jo
jg
pop
out
pop
mov
and
push
das
xchg
xor
outsl
fdivs
fstpt
ss
mov
adc
popa
add
lret
std
fiaddl
inc
inc
push
imul
cmp
mov
xchg
lods
sbb
scas
test
lret
mov
testl
lret
cs
or
and
shl
or
pusha
aam
or
inc
out
jno
cmp
adc
sub
jae
push
mov
mov
xchg
popa
scas
pop
jge
or
enter
std
or
add
push
repnz
repnz
icebp
pop
and
mov
sbb
fidivs
xchg
mov
lods
mov
cltd
rcrl
sub
xor
and
in
and
stos
insl
push
jl
rclb
stc
or
cmpsl
movsl
mov
pop
adc
or
fisubrl
mov
ss
es
cmp
mov
xlat
pop
test
fldt
imul
push
jle
pop
mov
adc
xor
in
cmpl
mov
push
xchg
mov
dec
andl
xor
xchg
shrb
leave
popf
test
movsl
xor
inc
dec
shll
in
ja
pop
adc
ss
imul
sahf
inc
cwtl
xor
cli
mov
mov
sbb
dec
mov
jmp
sbb
adc
dec
ljmp
mov
and
dec
je
dec
xor
mov
and
jb
mov
or
mov
inc
xorb
xchg
and
and
xchg
sbb
dec
push
cmpsb
inc
ret
pop
je
je
pop
and
test
fidivl
rcll
sti
test
int3
push
loope
lahf
ja
push
jb
adc
adc
lock
cmpsl
dec
daa
pop
mov
adc
push
xor
cwtl
pop
into
rcrb
jo
out
ja
mov
push
stos
cmc
cmp
or
cmpsl
ja
mov
outsl
test
cld
cmp
aaa
pop
and
sti
xchg
rcrl
fnstenv
shl
dec
ret
andb
pop
fsub
clc
aad
cmp
rorl
mov
mov
gs
inc
lea
out
daa
cmc
pop
mulb
jne
lret
jns
cs
imul
pop
or
xor
add
fiaddl
ljmp
cs
pop
mov
xor
int
gs
movsb
mov
mov
jnp
and
adc
pop
sbb
stos
mov
cmc
adc
cli
mov
out
movsb
push
pop
jecxz
in
inc
sbb
mov
sub
popa
jbe
sub
or
jge
cmp
aaa
sub
push
add
mov
rcl
pop
lret
sub
pop
loopne
xchg
mov
mov
xchg
xor
ljmp
sbb
in
pop
sbb
mov
in
shll
push
fwait
add
mov
mov
fcmovbe
cwtl
inc
mull
mov
cmc
push
cmpsb
cmp
mov
jp
mov
inc
hlt
mov
sub
dec
xor
mov
enter
addr16
call
repnz
mov
fldt
and
add
cmc
movsb
lret
xchg
jns
icebp
or
push
lahf
push
inc
or
push
popa
jo
ficoms
fadds
pop
mov
fistl
mov
notl
popa
mov
pop
jg
daa
loopne
add
stos
add
mov
into
add
pop
mov
sbb
shll
adc
and
adc
out
push
sub
mov
sbb
sbb
mov
mov
mov
sbb
popa
push
mov
push
adc
and
sbb
ret
je
inc
or
loope
rcl
dec
loopne
rcr
notb
cs
arpl
xchg
lds
push
sahf
sub
pop
dec
dec
push
jns
xchg
sub
mov
adc
lea
out
out
add
sub
ja
jns
stos
clc
inc
dec
dec
mov
xchg
push
cltd
fcomp
push
xor
lods
mov
pushf
jmp
lds
xchg
lea
add
cmp
fistpll
and
adc
pop
popf
push
and
pusha
dec
subl
cmp
inc
fwait
sbb
call
inc
imul
ja
testl
sbb
xchg
mov
lahf
lock
les
mov
lret
jbe
mov
push
sti
out
mov
stos
test
imul
mov
push
pop
loop
mov
mov
out
das
stos
and
xchg
dec
ss
rolb
xor
mov
xchg
dec
aas
fdivs
jecxz
lock
mov
inc
jne
pop
scas
mov
xor
push
movsb
mov
dec
cs
sahf
mov
cmp
adc
les
cmc
pop
sbb
add
call
outsb
pextrw
popf
push
ds
cwtl
jb
inc
fs
xchg
lahf
scas
lock
and
mov
jp
hlt
push
and
inc
and
mov
aad
adcb
mov
inc
or
into
or
data16
outsl
ljmp
daa
in
insb
dec
mov
pop
adc
mov
jmp
iret
or
shrl
cmp
and
add
lret
loopne
loopne
mov
aam
dec
bound
or
and
push
lcall
lea
lret
les
push
jns
inc
pusha
flds
xor
mov
test
mov
shll
xor
cli
or
mov
inc
add
push
adc
xchg
loopne
loopne
sar
cmp
push
hlt
mov
movsb
adc
xor
adc
pop
lret
xor
bound
in
loop
ja
xchg
stc
adc
inc
mov
mov
lcall
movsb
fbld
into
incl
xchg
mov
mov
scas
mov
fmul
or
sub
mov
fcoms
xor
js
sub
arpl
sub
mov
shr
xor
push
cs
aaa
sub
mov
push
adc
lock
jecxz
ds
movsb
adc
gs
xor
into
mov
stos
xchg
push
xchg
inc
int3
dec
mov
jnp
fldln2
out
mov
cmpl
jbe
push
xchg
xor
movsb
jecxz
add
loope
out
dec
jae
inc
jmp
jg
or
pop
mov
insl
or
cmc
int
outsl
lods
lods
lahf
in
dec
or
outsb
sub
rolb
pop
test
lock
dec
push
push
and
cmp
mov
cmp
jl
jo
sbb
mov
sub
and
int3
addr16
popl
dec
pushf
xor
lock
movsl
pop
mulb
lret
sbb
scas
clc
in
icebp
pushf
out
xchg
mov
and
out
fs
mov
jae
sbb
push
stc
lret
jno
std
push
mov
jo
push
jmp
jle
repz
dec
jmp
push
shlb
fsubs
ret
mov
enter
sbb
gs
add
push
cwtl
pop
movsb
ljmp
test
pop
cmp
dec
scas
lods
je
data16
or
sub
pop
pop
mov
popf
lcall
sbb
pop
test
sub
scas
or
in
les
xchg
imulb
dec
adc
and
push
mov
pop
lcall
in
pop
pop
sbb
mov
jne
cmp
sub
fisubs
loope
jle
cli
or
rclb
cmp
xchg
xor
fdivl
xor
je
insb
adc
xchg
int3
mov
pop
fs
xor
scas
test
pop
jo
mov
adc
aas
mov
in
or
cltd
mov
loopne
enter
jg
cmp
fsubp
sbb
push
ret
sub
adc
xchg
fnsave
add
mov
pmaxsw
sub
ret
enter
jne
dec
sbb
xchg
hlt
ret
inc
xchg
aad
jle
pop
sahf
out
push
stos
dec
dec
jmp
mov
xchg
lret
nop
jb
pushf
mov
dec
fs
repnz
jae
mov
cli
adc
mov
cmp
pop
bound
or
xchg
jne
mov
lds
xchg
ja
in
push
sbb
mov
mov
xchg
lahf
jns
sti
mov
mov
cmp
push
lock
sbb
dec
in
mul
aaa
cmpsl
pandn
leave
or
jnp
adc
or
mov
cmpsb
or
mov
stc
adc
int3
testl
adc
insb
pop
push
adc
movsl
in
adc
and
xchg
jle
pop
push
ss
pushf
in
jne
bound
fidivrs
shlb
or
cld
cltd
push
mov
popa
nop
pushf
cs
push
stos
xor
push
notb
fstpl
and
inc
dec
repnz
addr16
scas
mov
shll
repnz
adc
lret
in
mov
outsb
insl
cli
mov
clc
dec
rorl
sbb
jno
and
sbb
not
rol
ror
test
pop
xchg
sub
shll
xchg
icebp
data16
pusha
iret
sarl
repz
pop
pop
push
dec
sbb
xchg
add
inc
push
js
je
mov
cwtl
mov
outsl
dec
sub
stos
shlb
std
or
dec
iretw
xor
push
pop
cmp
sub
lods
into
cmc
cmp
xor
cmpsl
aaa
adc
movsl
dec
push
movsb
iret
xor
sub
ja
test
mov
add
dec
xorl
aaa
ret
jnp
xchg
adc
repnz
pop
and
jg
ds
pop
and
adc
sub
push
fs
pop
mov
test
mov
fdivr
sbb
sarb
xor
and
repz
add
fisttps
fstpt
mov
sub
xchg
aad
sub
mov
dec
jl
insb
dec
test
cmp
dec
cmc
and
jnp
mov
jmp
jmp
jno
iret
push
imul
lret
push
fisttpl
arpl
std
adc
jbe
mov
iret
mov
inc
push
cmpsl
scas
xor
xchg
mov
push
sub
rcll
dec
mov
jne
pop
inc
js
dec
xor
and
jae
mov
rcrb
aam
pop
mov
sarl
pop
cmp
and
bound
cld
xor
push
mov
test
jne
or
add
hlt
pushf
xchg
ja
je
pop
pop
and
mov
sbb
imul
aaa
imul
test
bound
pusha
adc
fwait
cs
inc
outsl
cmp
add
movsb
mov
shrb
or
dec
ret
in
xchg
mov
call
fsts
push
cmp
out
sbb
jo
mov
test
iret
in
mov
and
xchg
lods
inc
pop
stc
and
jl
mov
es
or
fs
loop
rorl
or
scas
je
sbb
int
leave
jae
bound
ljmp
mov
cmc
xchg
fstl
sti
and
decb
sbb
lahf
mov
sub
push
daa
scas
out
aas
test
shrb
mov
shrb
lret
push
call
mov
arpl
and
and
out
xchg
movsl
idivb
outsb
pop
loope
outsb
sub
test
clc
cmp
add
aam
sub
je
push
lret
sbb
cld
push
or
mov
rorl
push
pop
adc
jg
pop
jns
push
repnz
pushf
shlb
pop
sti
adc
mov
dec
dec
mov
jns
faddp
push
ret
push
cmc
push
jb
mov
mov
in
jle
mov
lret
xchg
cltd
dec
lea
ffreep
cwtl
or
xchg
cmc
fstl
and
je
pop
mov
dec
sub
out
push
test
shrl
fwait
pop
mov
ja
mov
mov
out
lcall
xchg
subl
ret
xchg
idivl
insb
adc
movsb
jp
add
and
jmp
jmp
and
cmp
jl
rcrb
lock
mov
sub
add
xor
nop
sub
xchg
and
repnz
loope
push
jl
xor
push
jno
shr
xor
outsl
adc
imul
inc
mov
xor
fcomps
testl
inc
mov
cli
ret
mov
out
sbb
cmp
in
std
cmp
out
sbb
pop
ljmp
outsl
push
or
jl
and
cli
mov
jbe
lahf
pop
and
xor
insl
int
pusha
mov
push
add
xor
xor
jb
scas
jecxz
xor
adc
or
stos
pop
fsubr
pop
push
mov
test
lods
and
or
add
adc
test
and
inc
sub
in
dec
sub
test
or
push
iret
dec
jge
jnp
mov
push
xchg
arpl
add
push
push
and
nop
test
mov
push
xor
xchg
push
xchg
lahf
and
push
jl
xor
ljmp
xor
inc
test
in
inc
fistl
daa
sub
push
ret
pop
pushf
adc
xchg
cmp
imul
mov
or
mov
lret
inc
cs
xor
sub
xor
daa
jge
ret
xor
inc
add
cmp
xchg
icebp
mov
into
sub
inc
lret
aaa
or
pop
stos
hlt
fmuls
mov
sahf
loope
xor
sbb
call
xchg
cmp
jnp
pushf
lcall
push
je
pop
dec
and
pop
jae
xchg
ds
nop
pop
mov
lds
mov
repz
push
push
cs
dec
cmp
movsl
jo
xchg
ja
mov
mov
xor
andb
push
subl
mov
fdivrs
jle
and
pushf
insb
ficompl
push
mov
push
in
mov
mov
pusha
icebp
outsl
add
jecxz
cmp
int
mov
rolb
lods
push
out
pop
addr16
sub
mov
sbb
cmp
adc
lcall
aas
lods
out
negl
add
xlat
jae
sahf
ljmp
push
or
loop
fidivrl
in
mov
sarl
out
test
sub
xor
jne
outsb
stc
and
xor
dec
pushf
arpl
xchg
or
sbb
adc
mov
sub
rclb
aas
aaa
cmp
inc
mull
cmpsb
lcall
out
mov
xchg
pop
fstpt
sbb
out
jbe
add
mov
loop
inc
sbb
mov
adc
in
std
icebp
pop
inc
out
jmp
jg
jo
or
ljmp
dec
dec
lds
lahf
std
loopne
sti
mov
lcall
negl
in
mov
test
movsb
add
inc
ret
stc
jo
push
push
xchg
loope
inc
stos
or
cmpsl
mov
rcll
leave
sarb
inc
add
mov
and
push
sti
pusha
jno
repnz
in
xor
test
push
in
jno
aam
inc
int
inc
inc
cltd
sbb
jge
test
sub
ror
shrl
mov
push
push
and
pusha
adc
inc
sahf
in
dec
cltd
mov
cmp
mov
inc
inc
dec
les
out
inc
dec
out
rcr
inc
mov
data16
push
and
xchg
inc
arpl
inc
mov
or
xchg
imul
shl
rcrl
popa
pop
mov
ss
ds
int3
adc
push
pop
sti
cmpsl
push
inc
ror
inc
inc
ficoms
ja
mov
sbb
mov
aaa
sbb
add
clc
jge
je
fdivs
mov
jmp
mov
cmp
fwait
mov
mov
mov
mov
jb
lea
add
lods
cmp
xorb
xor
scas
or
mov
test
push
and
mov
scas
or
pop
negl
out
sub
adc
xchg
fucom
lods
mov
dec
mov
das
inc
jp
fwait
pop
ljmp
xor
push
xchg
loope
insl
fimuls
fwait
gs
jge
rorb
cmp
lret
pop
ljmp
mov
push
inc
cld
rcr
enter
dec
mov
jge
mov
imull
js
mov
sub
and
and
add
shlb
pop
ret
imul
add
jb
ds
dec
mov
arpl
or
dec
mov
or
push
push
mov
xabort
mov
or
inc
sbb
mov
xchg
cld
cmp
sbb
aas
jge
mov
sub
js
lock
aad
in
testl
cmp
fdivs
test
shll
xchg
jmp
push
lret
test
dec
icebp
fs
adc
dec
and
andb
mov
and
fwait
xchg
mov
sbb
push
jae
jge
into
insl
lock
adc
mov
fistpll
imul
sub
les
test
mov
repz
add
xor
fadd
and
push
mov
movsb
out
in
loope
inc
push
movsb
push
iret
xchg
mov
sarl
pop
dec
lock
mov
pushf
icebp
xor
sub
lahf
cmc
lods
ljmp
lds
mov
rorl
dec
mov
gs
notl
sub
xchg
lret
pop
jne
rclb
pop
sahf
cld
lcall
xor
pop
dec
scas
clc
xchg
mov
inc
rolb
cmp
adc
fdivrl
mov
in
jmp
add
shrl
dec
clc
mov
cmp
sahf
scas
scas
data16
inc
sti
sbb
in
pushf
add
addr16
and
pop
jo
adc
lret
je
and
sbb
aam
mov
std
popl
das
clc
sbb
mov
xor
insb
lock
pop
sbb
adc
mov
sbb
jecxz
aas
out
xor
mov
jne
pop
stos
movsl
popa
mov
out
lds
jb
xchg
pop
out
push
xchg
push
adc
dec
pop
cwtl
cmpsl
sarb
add
push
incb
mov
sbb
shlb
cmp
lret
shlb
jo
insb
cmp
adc
push
mov
movsl
mov
xchg
mov
mov
cmpsb
mov
out
imul
jbe
add
fiaddl
adc
push
dec
jmp
insb
adc
or
pop
gs
add
arpl
mov
dec
xor
dec
fildll
mov
repnz
call
mov
icebp
sub
in
hlt
or
icebp
pop
fs
add
jns
cmp
jae
sbb
push
or
out
sub
dec
adc
into
mov
rcrb
cld
neg
add
mov
jmp
js
js
mov
inc
mov
scas
xlat
xor
cmc
pop
cmpsl
or
xor
cmc
loopne
outsl
les
aas
push
dec
or
aaa
test
or
inc
data16
lods
mov
dec
jo
inc
inc
mov
add
jo
push
push
xchg
inc
add
xchg
jne
pop
mov
movsl
jmp
xchg
jl
pop
pop
sbb
std
jg
dec
into
das
pop
push
aad
add
loopne
in
dec
out
sbbb
jno
je
jne
push
mov
movsb
pop
roll
pop
testb
aad
xchg
adc
fdivrl
pop
in
clc
aad
into
pusha
jnp
xchg
fdivrs
das
loopne
loopne
mov
adc
fnstenv
fdivr
lods
mov
js
add
xor
das
out
dec
std
xor
pop
mov
cmp
out
fs
cmp
cmp
test
or
filds
pop
into
mulps
out
xchg
mov
dec
pop
repz
adc
fstl
add
mov
sub
mov
xlat
lcall
push
and
pop
inc
fbld
inc
out
add
leave
rcll
lods
pop
aad
xor
arpl
mov
mov
stc
xor
sub
mov
push
and
cmp
cmova
or
add
and
ds
jecxz
push
inc
popf
cwtl
xchg
push
mov
call
jg
ja,pt
mov
or
xchg
test
in
lock
lods
pushf
pusha
js
push
fdivl
dec
mov
out
cmp
mov
scas
iret
sub
mov
jg
sub
pop
add
jno,pt
push
adc
in
adc
xchg
xor
pop
fwait
dec
aas
push
out
scas
cmp
xchg
sbb
imul
xor
mov
std
add
repnz
stc
dec
hlt
push
adc
xchg
fyl2xp1
lds
xor
std
adc
outsb
cmp
xor
sahf
inc
gs
dec
and
push
lea
fwait
dec
pop
inc
jb
push
mov
mov
xchg
xchg
xchg
or
add
add
inc
mov
or
push
stos
iret
icebp
jle
dec
out
mov
dec
sbb
push
loop
not
imul
out
sbb
jne
fbld
sub
ja
jne
xchg
xlat
mov
data16
mov
sub
addr16
lods
cltd
popf
scas
xor
inc
or
sub
push
cmp
aaa
mov
sti
mov
into
sarl
insb
mov
jecxz
or
cmc
rorl
mov
int3
fisubl
aam
and
out
test
cmc
xor
or
loopne
cmp
pop
or
roll
pop
jmp
adc
cmp
add
mov
sbb
rclb
xor
mov
repnz
jns
cmp
pop
stos
dec
pop
cltd
dec
and
ljmp
repnz
mov
insl
xlat
out
adcb
jecxz
stos
adc
arpl
fstps
add
fs
and
ret
gs
inc
mov
add
inc
pop
test
and
je
nop
mov
xchg
mov
or
adc
pop
cmpsb
dec
cmc
mov
xor
cli
sub
call
lcall
push
test
xchg
lret
add
negl
jle
stc
idivl
imul
aas
adc
int
jle
add
lds
push
push
les
addb
scas
aas
popf
cmc
mov
or
or
jg
repnz
repnz
mov
mov
push
sbb
imul
mov
jmp
insb
sbb
dec
les
fcomps
mov
sub
sarb
je
mov
xor
movsb
leave
dec
loopne
cmp
xchg
andl
xchg
leave
jle
and
aas
inc
cmp
mov
add
cmp
lcall
xor
pop
xchg
push
ss
cmpsb
scas
mov
mov
xor
repz
mov
cwtl
adc
outsb
idiv
cmp
sbb
and
cwtl
sub
pop
sbb
cmpsb
into
fisttps
ljmp
jo
sbb
mull
jae
jp
ljmp
ficompl
lret
sbbl
xchg
testl
fcoml
pushf
int3
jmp
test
sub
repnz
pop
int
or
clc
in
sub
mov
mov
mov
outsb
jbe
in
mov
inc
loope
or
or
inc
js
int
pop
sub
inc
jnp
mov
mov
push
push
test
sub
in
rolb
and
fwait
insl
lcall
arpl
dec
xchg
push
cmp
sub
test
in
outsl
movsl
cs
cld
pop
ret
xor
jle
dec
stos
sahf
movsb
push
repnz
jnp
dec
ja
pop
mov
lret
add
call
popa
cwtl
and
stos
out
jp
lods
stos
dec
into
fiaddl
push
movb
into
inc
scas
or
xor
xlat
cmpsb
mov
mov
mov
in
mov
add
adc
dec
cmp
cmp
mov
aas
pushf
jns
xchg
sahf
iret
hlt
push
adcb
mov
jge
mov
xchg
or
cld
cmp
mov
xchg
cmp
mov
out
ret
add
sub
cmpsl
lcall
repz
pop
ret
loope
gs
lret
adc
in
cmpl
ljmp
scas
repz
inc
fadd
movsb
dec
adcl
lret
jnp
movsb
mov
mov
and
into
bound
jb
mov
pop
and
iret
add
mov
pop
adc
outsl
mov
clc
test
push
adc
int3
mov
inc
mov
aam
add
mov
js
aas
mov
mov
imul
xchg
mov
jo
leave
loopne
insl
inc
in
or
jno
mov
test
test
push
sbb
pop
testl
cltd
mov
push
and
int3
mov
jns
cld
imul
cli
dec
and
inc
add
mov
push
arpl
popa
cmp
cmpsb
into
inc
adc
jo
movsl
ss
and
rcrl
les
fists
fmul
adc
dec
pushf
mov
sbb
sub
icebp
dec
jbe
cmc
daa
cmp
lcall
aam
sbb
je
cmp
lea
into
sti
pop
je
lcall
dec
fidivs
adc
mov
loope
into
and
nop
mov
push
pop
xor
test
lods
or
xor
lods
or
dec
clc
sub
push
ficompl
fsubrs
pop
out
dec
imul
fwait
aad
inc
mov
push
aaa
insl
sub
stos
shlb
xchg
xchg
call
mov
dec
cmpsb
xchg
pop
dec
inc
mov
adc
fwait
push
out
lods
psllq
sbb
sbb
fldcw
mov
sahf
mov
outsl
add
aas
xor
cmpsl
lds
outsl
bound
lcall
lcall
xor
pop
insb
insb
pop
add
or
out
or
lcall
xchg
jmp
inc
daa
pop
mov
iret
je
je
xchg
jb
jmp
out
cltd
xlat
and
push
mov
or
xchg
mov
arpl
ficoml
or
pop
stos
dec
mov
sahf
jmp
push
adc
pop
adc
shrl
imul
sarb
cmp
inc
cmp
pop
mov
mov
es
andb
jo
arpl
mov
mov
pop
push
inc
aam
ds
dec
hlt
mov
loop
cmp
jmp
aas
loope
add
push
jne
enter
or
adc
and
cmp
stc
out
addr16
int3
push
sub
icebp
inc
sub
adc
push
pop
sub
push
xchg
or
ret
pop
inc
xchg
in
pop
push
adc
lock
mov
or
ss
popf
test
fwait
mov
fsts
fstps
push
popa
test
repz
lahf
push
mov
push
cmp
dec
leave
das
mov
test
sbb
enter
into
mov
push
clc
adc
flds
in
mov
cmp
or
lahf
cmp
imul
lea
xchg
sub
jno
ret
lcall
sub
and
test
out
mov
clc
add
fdivl
aaa
xor
sbb
and
je
addr16
test
xor
dec
cli
fsubs
or
add
mov
sbb
outsb
loope
inc
fs
mov
jmp
sarl
adc
or
and
mov
loopne
mov
xchg
add
pop
pop
and
xchg
xchg
iret
daa
pop
xchg
rorb
adc
leave
fucomip
push
out
adc
mov
lods
add
jb
loope
cli
das
sbb
mov
fwait
enter
test
and
mov
mov
nop
or
dec
sbb
xchg
in
inc
js
lea
push
or
mov
sub
jl
jns
rcll
mov
shl
mov
das
fwait
mov
inc
out
scas
mov
sub
icebp
mov
or
mov
pushf
mov
sbb
push
in
cmpsb
in
xor
sbbl
mov
adc
adc
push
outsl
bound
or
shrb
cmp
arpl
shll
jp
mov
ja
push
xchg
outsb
js
sub
es
loop
cli
in
sbb
mov
in
lea
push
push
inc
fidivrs
or
jle
insb
mov
push
dec
push
pop
std
and
cmp
pop
cmpsl
out
adc
mov
test
jbe
insb
shr
pop
jmp
dec
xchg
pop
cmp
xchg
stos
pop
imulb
insl
roll
loopne
jb
enter
test
mov
stos
push
imul
les
push
xchg
or
push
out
inc
fisttps
repz
ljmp
mov
mov
das
push
inc
rclb
cs
xor
dec
add
loopne
ret
mov
xor
jo
nop
mov
sbb
or
faddl
push
dec
stos
adc
leave
les
leave
test
fists
lock
add
popf
jge
xlat
insb
pop
and
pop
jbe
negb
xchg
or
xor
daa
add
adc
mov
shrb
clc
xor
push
fwait
ret
sti
add
sti
in
loop
scas
pushf
ret
aaa
loopne
xor
sub
mov
je
fiaddl
mov
add
mov
push
jg
jmp
sub
pop
fisttpl
mov
push
push
popf
frstor
in
into
sbb
mov
mov
jge
scas
cltd
lahf
ss
sbb
sub
mulb
jns
dec
imul
xchg
sub
xchg
jb
lahf
jmp
out
pop
sub
cmpsb
mov
fdivrl
lods
dec
shll
xlat
pop
push
cld
adcl
mov
cmp
into
cmpsb
dec
gs
jmp
jge
dec
push
dec
mov
fidivrl
pop
outsl
fcmovu
mov
out
scas
ja
xchg
sub
xlat
ficoms
sbbb
cwtl
rolb
dec
sbb
mov
adc
adc
out
dec
lret
adc
adc
jne
lods
pop
push
push
imul
daa
ja
daa
xchg
add
shll
pop
mov
orl
aad
mov
jecxz
jns
mov
cmp
xchg
mov
test
loope
notl
mov
cli
push
ds
dec
repz
adc
leave
cmc
subl
xorl
xorb
xchg
stos
popa
out
dec
jecxz
scas
ds
jle
dec
imul
subb
jbe
jle
jbe
lods
gs
pop
cmp
jecxz
dec
adc
test
xchg
lock
stos
mov
movsl
ss
mov
xchg
jp
push
sub
in
insb
jne
sbb
pop
mov
div
push
sbb
xor
cmpsb
adc
aas
mov
les
jo
xchg
dec
or
sbb
add
sbb
dec
out
cmp
push
dec
mov
push
or
rorb
cld
push
std
cmp
and
add
negb
lret
push
call
ss
adc
add
roll
inc
clc
stos
pop
and
rcrb
rorb
lret
scas
mov
mov
mov
or
adc
jp
call
scas
gs
mov
cmp
fldcw
add
lret
das
popf
add
xchg
outsl
fcoms
mov
mov
lret
add
shr
dec
add
out
aas
push
sbb
and
xchg
sbb
dec
out
sbbl
imul
xchg
push
cmp
inc
adc
lret
jno
gs
adc
pushf
mov
add
mov
push
nop
pop
iret
test
repnz
adc
cmpsl
xlat
lock
cmc
lods
addr16
out
or
jns
ljmp
xchg
bnd
scas
inc
loope
arpl
or
lret
loope
adc
arpl
add
xchg
mov
inc
jae
or
push
sbbb
pop
aam
std
pop
cmpsl
icebp
sbb
inc
cmp
rolb
xor
stos
push
dec
xchg
cmpb
xchg
fnstenv
rcrb
pop
mov
push
ja
aad
ljmp
cmp
outsb
inc
aaa
ret
inc
popa
jb
add
add
jl
iret
lret
pop
pop
dec
dec
shlb
cmp
inc
sbb
inc
push
add
jle
subb
aad
pop
cli
sub
iret
fsubr
and
jne
xchg
and
mov
stos
int
mov
scas
xlat
testb
push
dec
in
into
mov
movsl
sub
xlat
fmull
push
push
jne
mov
jae
dec
inc
jmp
mov
cs
or
sbb
mov
push
add
aad
stos
jecxz
mov
jle
sbb
adc
sbb
outsl
add
cmp
orb
lods
outsb
xchg
xchg
hlt
lods
dec
and
and
sbb
dec
shll
shlb
out
dec
mov
addr16
jge
pop
fildll
adc
les
adc
sub
pop
fnstsw
push
inc
sub
mov
xchg
dec
mov
push
adc
mov
fnstenv
xor
in
leave
xchg
cli
cmpsl
jo
pop
mov
mov
inc
xor
lahf
and
jg
fmull
cli
inc
scas
nop
scas
fimull
or
push
pop
insl
inc
outsb
push
mov
sbb
jmp
and
enter
add
adc
mov
or
pop
pusha
fstl
insb
fmul
cmp
stos
cmc
dec
push
add
mov
jae
ljmp
aas
ffreep
or
push
fadds
dec
into
lods
rol
shl
inc
fsub
inc
inc
scas
xchg
lods
xlat
fisubl
xor
and
clc
ret
clc
dec
or
sub
decl
dec
sub
orl
inc
lods
push
stos
es
fstps
xchg
test
xor
frstor
mov
xchg
xor
inc
pop
or
add
insl
or
arpl
dec
jp
addr16
mov
cmp
and
mov
mov
jae
bound
add
out
and
call
adc
out
inc
cltd
aas
jle
jmp
pop
fs
popf
movsb
dec
mov
adc
xor
test
jecxz
movsb
aad
cltd
jmp
inc
xchg
cmp
es
add
jne
cmpsb
orl
negb
inc
inc
rolb
add
lret
repz
out
xor
fdiv
loopne
push
mov
push
dec
pop
out
cmpsl
jp
outsb
fxch
sub
inc
out
xor
xor
nop
repnz
and
mov
xor
cmp
mov
pop
gs
outsl
mov
or
inc
sahf
push
mov
loopne
test
jnp
in
sub
adc
pop
xor
push
mov
popf
ljmp
mov
mov
or
movsb
cld
inc
fcomp
xchg
xlat
mov
mov
leave
std
jnp
enter
hlt
cmp
imul
cmp
add
jmp
insb
xchg
sbb
fchs
jle
negb
bound
push
push
add
push
pop
in
testb
lock
or
test
dec
dec
sbb
inc
or
dec
mov
in
mov
idivl
jle
or
mov
imul
das
shlb
rorl
out
xlat
movsl
push
or
xlat
sbb
pop
dec
jno
xor
mov
rcr
dec
sbb
push
mov
cmpsb
loop
sbb
pop
nop
adc
cmc
jnp
in
pushf
jp
movsb
mov
mov
or
dec
out
addb
sti
or
xchg
jns
insl
leave
or
cmp
adc
out
mov
or
or
push
dec
out
leave
pop
imul
bound
mov
xor
das
add
inc
je
cmpb
mov
lds
mov
pop
jno
or
cmp
leave
inc
outsl
popa
jmp
lock
and
inc
xchg
out
clc
les
and
add
mov
jp
insb
dec
xchg
aaa
push
dec
movsl
mov
scas
ljmp
repz
inc
or
fisubs
call
lea
mov
adc
aam
push
or
lret
sti
in
dec
or
fistps
and
xor
add
clc
mov
dec
in
dec
push
dec
mov
in
and
xchg
jecxz
jne
cmc
subl
mov
pop
dec
mov
and
and
push
out
mov
sub
rorl
or
mov
sar
bound
lods
aaa
jecxz
cmpsl
insb
lret
mov
jo
xor
ficoml
fs
dec
mov
into
push
mov
fsubrs
or
adc
sub
ret
cmp
ja
dec
xchg
ss
add
fists
pop
pop
xchg
sbb
fs
cmp
subl
stc
popa
pushf
mov
aad
fiaddl
lods
inc
cwtl
cmpsl
cs
mov
leavew
cmp
inc
stc
jmp
mov
jo
std
push
ds
add
cmp
fadds
lcall
inc
adc
cltd
out
mov
out
mov
or
jbe
mov
outsl
fildll
pop
cmp
xchg
add
jae
cs
jns
adc
mov
mov
out
lea
cmp
test
scas
adc
scas
sub
loopne
arpl
out
and
mov
jg
push
pop
sahf
pop
jmp
mov
dec
mov
cld
adc
pushf
ds
data16
cmp
xlat
fidivs
divl
bound
sbb
cmp
loope
iret
push
xor
sbb
push
imul
dec
pop
inc
rcrb
adc
fbld
push
or
leave
cmpb
mov
adc
in
jecxz
jmp
push
sub
push
mov
and
xor
sub
repz
movsb
xchg
sahf
add
mov
ss
int3
jg
inc
add
loop
cltd
xchg
sahf
xchg
or
movsl
mov
cmc
push
enter
bound
clc
decb
test
fdivl
outsl
sub
push
inc
jmp
adc
mov
cmp
jp
or
lret
arpl
lcall
dec
mov
enter
add
adc
inc
adc
fidivrl
inc
sti
mov
sbb
mov
pusha
pop
xor
ss
mov
je
daa
push
adc
rorl
out
mov
and
in
adc
jae
int3
pop
mov
lea
lahf
rorl
lret
sub
cltd
insb
dec
sbb
mov
in
mov
sbb
sbb
popa
popl
stc
sti
loopnew
sbb
adc
adc
push
xor
jno
adc
cmc
stc
test
loope
icebp
es
pop
pusha
popa
aad
xchg
ljmp
xchg
or
xchg
ds
pop
mov
dec
bound
rclb
outsb
subb
ljmp
jo
add
sub
or
xchg
stc
movsb
in
lcall
dec
sti
lahf
mov
fnstenv
xchg
into
push
arpl
out
mov
test
rcll
repnz
inc
and
daa
and
mov
fucom
mov
jbe
mov
in
enter
mov
test
loope
xchg
jbe
inc
outsb
aad
add
pop
inc
dec
sub
stc
icebp
negb
lock
xor
pop
xor
fnstcw
lock
in
fdivp
xchg
mov
mov
jle
push
in
push
sbb
sub
cmpsl
or
insb
mov
xchg
hlt
pop
jo
xlat
xorl
arpl
mov
push
xor
int3
pushf
fsubs
sub
push
jl
scas
add
xchg
out
sbb
push
mov
incl
pusha
popf
cwtl
sub
mov
dec
or
mov
xor
and
sbb
addb
insl
jg
mov
divl
mov
mov
cltd
aaa
xor
out
flds
outsb
pop
mov
fimuls
pop
adc
add
add
jbe
and
ss
mov
fidivl
js
mov
pop
or
inc
lods
imul
jb
das
push
mov
cmp
lcall
inc
cwtl
popf
cmp
cltd
ljmp
push
outsb
mov
mov
adc
add
enter
and
and
jo
jle
and
mov
inc
jo
sub
arpl
push
push
cmp
jmp
bound
inc
imul
into
nop
jae
sahf
jb
push
cs
sbbl
rcll
movsl
and
stos
mov
fs
jmp
out
jae
out
leave
je
aad
addb
adc
rclb
lahf
mov
mov
pushf
mov
inc
xor
cmpsb
adc
aaa
sti
fsubp
loope
shlb
sbb
add
sahf
aam
sbbb
sbbl
cmp
xorb
push
popa
call
and
jge
sbb
pop
mov
mov
stc
sbb
mov
fs
cmp
add
stos
leave
jge
lods
mov
ret
scas
sbb
insb
into
lret
and
jle
int
cmp
cmpsl
in
sbb
aaa
cmp
mov
mov
sub
or
out
xchg
sbb
mov
out
sbb
jle
and
data16
dec
or
js
add
inc
sub
mov
mov
sahf
rorl
cmp
fldcw
dec
sub
sub
jae
lahf
xorl
inc
je
cmpl
pop
jl
xchg
xor
scas
push
mov
lret
aad
adcl
or
xchg
mov
sbb
call
xor
test
js
test
add
xchg
xchg
addr16
mov
adcb
inc
jb
and
mov
add
ret
out
mov
ds
jnp
mov
hlt
dec
cmpsb
into
rol
mov
stc
pusha
enter
cmp
inc
push
dec
sub
pop
sub
jnp
cltd
fwait
sbb
dec
std
xchg
test
xchg
ljmp
inc
xchg
add
mov
ja
add
xor
lods
or
adc
pop
fiadds
fldenv
mov
sbb
sbb
mov
subb
cwtl
cmc
mov
jne
adc
mov
pop
outsl
jnp
sub
dec
dec
fcoms
xchg
dec
mov
adc
xchg
insl
adc
mov
clc
sti
cmc
lahf
stos
mov
dec
into
fisubrs
fstl
mov
or
clc
imul
imul
mov
push
sbb
stos
icebp
xchg
and
stos
and
pop
iret
aam
lds
call
enter
insl
daa
mov
movsb
inc
xor
das
addr16
xchg
ja
jae
mov
ja
push
sub
sub
and
add
sub
out
arpl
repnz
dec
fdivrs
xchg
shlb
mov
jnp
and
cmp
mov
mov
push
and
lret
and
cs
sbb
pop
or
jnp
mov
insb
mov
jns
mov
push
fsubs
sub
jno
adc
jnp
dec
fwait
sub
push
mov
stc
mov
mov
es
rcll
or
adc
xchg
rcrb
lcall
testb
mov
sub
jge
sbb
and
stc
mov
fwait
into
fisttpll
std
test
sbb
dec
sub
xor
push
mov
cmp
icebp
pushf
pop
sarb
push
inc
aaa
and
lea
adc
and
icebp
imul
negl
loopne
test
insb
ss
fs
push
mov
mov
lods
movsb
fldt
add
mov
xchg
negb
mov
xlat
adc
inc
jns
sub
xor
popf
mov
pop
or
cmp
xchg
jo
in
mov
les
and
int
insb
dec
dec
ss
cwtl
ds
sarb
jne
jle
test
ja
sbb
fisttps
imul
or
mov
hlt
hlt
movsb
add
push
jae
in
rolb
in
pop
lea
movsb
sbb
cmpl
xchg
or
ljmp
fnstenv
mov
cmp
rcrl
pop
sub
xor
adc
sub
cli
cmp
ja
add
and
dec
cmp
xchg
inc
inc
and
sti
jg
int
mov
jo
lea
push
aas
mov
sub
mov
push
call
push
pop
rcrb
xchg
test
fistps
dec
xchg
ds
and
mov
sub
fwait
ret
sbb
in
xor
mov
enter
jecxz
dec
xor
idivb
pop
aam
ljmp
add
jb
adc
out
mov
je
adc
xlat
sarl
inc
in
aas
mov
insb
pushf
inc
or
ror
xchg
lcall
cmp
outsb
add
cld
mov
dec
sbb
rorl
sbb
lods
cwtl
push
pop
mov
mov
lret
sbb
lahf
into
popa
ror
xchg
mov
mov
push
mov
or
dec
mov
mov
hlt
adc
mov
push
js
cmpsb
add
push
jne
outsb
dec
dec
inc
leave
cmpsl
pop
or
jl
inc
mov
mov
repnz
stos
out
xchg
add
clc
adc
lcall
fcomip
xor
xchg
or
gs
sub
fcmovbe
popf
lcall
xchg
push
and
pop
and
push
mov
mov
insl
mov
sar
popf
scas
imul
jo
lods
dec
cmp
mov
mov
scas
ret
insl
shll
jp
arpl
cmpsl
loope
in
adc
ret
shrl
inc
pop
fcoms
fstpt
push
rcrl
push
xchg
sbb
add
sub
outsl
outsl
cmpsl
hlt
or
shlb
insl
mov
ljmp
rorb
push
sub
pop
mov
daa
jge
outsl
and
jle
cmp
js
fdivs
sub
push
add
cmp
rcrl
mov
push
jbe
push
push
lock
jns
in
jle
adc
fsubr
mov
mov
cltd
imulb
xchg
add
sub
aaa
shrb
xchg
jae
dec
out
jl
in
sub
popa
jmp
jnp
cmp
inc
scas
stc
loope
dec
mov
je
subl
mov
fdivrs
pop
adc
adc
xchg
adc
cmp
mov
je
jnp
popa
cmp
and
rclb
cmp
je
sub
pop
sarl
mov
mov
jbe
icebp
repnz
xor
popf
sbb
movsl
shlb
sub
repz
rcll
inc
mov
dec
jg
test
cmp
notb
stos
repz
shlb
xchg
xor
aaa
lds
ficoml
sbb
scas
out
pop
fwait
aaa
hlt
iret
shrb
ss
pop
outsb
push
cltd
mov
mov
xor
adc
inc
filds
jp
pusha
cld
sahf
push
addl
ss
test
hlt
loop
std
pop
cmp
ljmp
cli
add
xchg
lea
jle
xor
loop
adcb
gs
emms
std
clc
jge
or
cld
mov
xchg
sub
xor
pop
and
mov
sbb
add
fwait
jg
inc
sbb
jmp
loopne
sub
or
pop
scas
aad
mov
and
mov
push
imul
adc
pop
into
add
hlt
ret
pop
adc
mov
aam
test
mov
dec
outsl
fnsave
add
dec
loop
mov
stos
lea
std
cmp
getsec
jge
push
roll
arpl
dec
int
jg
ret
pop
sbb
mov
xchg
das
test
xor
data16
sbb
dec
pop
ficompl
jb
repz
add
movsb
rolb
cmp
arpl
sbb
mov
arpl
cltd
dec
inc
loopne
sbb
add
stos
cld
xchg
lret
pop
cmp
xlat
ds
pusha
dec
pop
xchg
cmp
ret
gs
jecxz
mov
mov
add
pop
mov
sbb
lret
jg
add
in
pop
cmp
or
xor
ret
aam
mov
cmpsl
lds
cli
sbb
popa
popa
mov
dec
and
inc
das
inc
sbb
sbb
pop
fidivrs
out
pop
ret
sub
sbb
dec
jnp
dec
mov
push
add
das
mov
lret
pushf
push
adc
push
out
cmpsw
outsl
loop
rcrl
insb
orb
mov
xchg
mov
adc
push
pop
lock
cld
or
sub
adc
mov
mov
push
popa
andb
inc
jge
sahf
lret
and
das
pop
ss
inc
adc
mov
and
lcall
or
fs
lock
jno
call
out
and
mov
in
adc
pop
jmp
xchg
cmp
idivl
loope
mov
lahf
loop
jo
xor
cmp
sub
cmc
cmpsl
push
sub
pop
or
shll
ljmp
mov
and
xchg
cli
and
scas
xchg
jle
incl
dec
dec
mov
sub
ds
mov
lcall
cmp
addr16
repz
aas
testl
and
lret
cmp
out
lds
push
enter
xchg
mov
mov
lods
mov
cmpsl
dec
lds
jle
push
cmp
mov
movsb
es
popa
loop
paddsb
repz
inc
clc
popa
test
push
mov
pop
cmp
pop
scas
xor
cltd
push
mov
xor
mov
adc
pop
adc
lds
mov
lcall
jnp
sub
cmc
fistpl
jbe
push
scas
mov
jo
sub
clc
aas
stc
cmp
fcomps
dec
mov
jmp
in
les
pushf
xlat
clc
iret
jecxz
mov
imul
scas
mov
pop
xor
incb
je
repz
pusha
imul
jle
loopne
xor
lods
add
popf
pop
mov
stc
test
jp
ret
in
mov
add
push
in
sbb
movsl
push
pop
and
and
mov
testb
adc
and
lret
cmpb
lods
mov
fwait
movsb
xor
xor
divl
lods
dec
fiadds
ja
inc
mov
cmp
dec
sbb
imul
lds
mov
mov
mov
sub
mov
cmc
mov
mov
sub
test
pop
leave
push
cmp
pop
ljmp
test
mov
or
das
call
push
jnp
xchg
jb
mov
and
aad
mov
dec
je
iret
pop
sub
adc
aad
shll
out
pop
dec
push
enter
cmpsl
pop
and
daa
adcl
and
imul
and
dec
imul
pop
and
sbb
add
clc
dec
adc
or
mov
dec
and
loop
mov
cmp
push
pusha
pushf
xor
daa
jmp
and
fstpl
mov
in
sarb
sub
std
cmp
mov
xchg
test
imul
std
addr16
inc
je
sbb
mov
aaa
xor
call
imul
mov
fstl
fsubs
mov
cmp
testl
loope
scas
in
mov
cmp
adc
xchg
add
and
sbb
imul
test
add
mov
testl
ljmp
cmp
dec
and
xor
mov
jnp
push
cwtl
lods
mov
inc
and
lea
sarw
jbe
and
imul
loopne
adc
ljmp
pop
mov
push
cwtl
xchg
ss
enter
pop
adc
push
cwtl
sbb
movsb
addb
push
xor
pop
and
jle
pop
jne
popa
sub
enter
rolb
dec
test
aaa
sarb
pop
lret
sbb
jnp
mov
add
mov
add
into
jns
add
idiv
fucomi
mov
call
add
repz
rclb
das
mov
insl
dec
cmp
dec
ljmp
lret
and
sbb
shrb
cmpsb
lea
push
jle
fadds
add
ret
xor
dec
lret
and
divl
or
dec
aaa
or
pop
data16
leave
dec
cmpsl
inc
mov
pop
sbb
cmpsb
adc
xor
lahf
insl
test
mov
daa
and
lds
pop
shl
sti
add
cmpsb
dec
and
inc
subb
test
jne
cwtl
push
mov
es
ja
sub
push
inc
stos
mov
pmaxsw
add
mov
cwtl
shll
fwait
inc
loop
add
in
or
sub
aaa
popf
mov
lds
dec
push
mov
lods
push
fdiv
imul
pusha
mov
sahf
test
mov
fisubl
dec
gs
std
push
pusha
mov
dec
sbb
aaa
mov
sub
xor
jmp
pop
mov
aas
or
bound
lds
inc
and
ss
fmuls
xor
cmp
fdivrl
aaa
pop
mov
scas
movsl
xchg
fbld
scas
sbb
enter
cmp
sub
mov
inc
inc
pop
xor
mulb
mov
insl
xchg
pop
xchg
out
xlat
push
mov
mov
pop
mov
pushf
cmp
lods
xor
mov
mov
jle
loopne
movsl
and
les
inc
cwtl
mov
fwait
punpcklwd
loope
mov
push
mov
mov
sbb
mov
xchg
add
adc
jmp
fwait
in
jecxz
lock
mov
ss
sbb
fwait
into
test
pushf
jg
test
cltd
or
push
sbb
daa
pop
insb
test
ret
aad
push
out
jno
cmp
sbb
mov
or
sub
lahf
outsb
out
xchg
jge
sub
fstl
jnp
das
jl
add
mov
out
pop
mov
sbb
std
sbb
xor
ljmp
mov
pop
into
jnp
jecxz
dec
inc
test
and
popf
ret
inc
std
xor
push
adc
fcomps
add
mov
cmp
mov
xchg
pop
push
insb
fwait
and
jns
pop
xchg
sbb
scas
mov
cs
jne
sub
lock
jne
in
pop
ljmp
scas
mov
lea
lds
cmp
inc
dec
mov
aaa
test
popa
cmp
lahf
repz
fwait
push
sub
loop
jne
outsb
and
test
mov
call
lcall
jle
mov
mov
push
xchg
push
lret
adc
add
movsb
xchg
inc
jl
adcb
mov
fmuls
mov
dec
in
stc
pop
or
fnsave
test
lcall
xchg
dec
pop
add
and
jmpw
xor
jl
out
mov
sub
jmp
xor
comiss
clc
dec
xchg
or
pop
mov
fs
sbb
adc
loope
callw
and
add
mov
iret
push
sub
jmp
jae
inc
movsl
mov
out
and
jl
cmpsl
sub
adc
test
fmulp
sub
or
sbbl
jb
inc
dec
jns
daa
fcomps
dec
pop
insb
xlat
call
push
add
mov
out
nop
mov
jo
stos
iret
ljmp
out
repz
or
xchg
add
daa
cmc
mov
ficompl
cmp
adc
cmpsb
xor
adc
popl
fimuls
popa
aaa
add
mov
ret
enter
negb
and
lds
jae
mov
jle
xchg
jo
push
sub
mov
imul
jb
hlt
clc
add
cltd
imul
add
xchg
dec
cmp
sub
dec
jle
arpl
insl
outsl
cltd
xor
daa
and
pop
add
outsb
push
imul
xchg
xlat
dec
bound
mov
xor
fmull
bound
pop
bound
pop
arpl
mov
mov
inc
adc
sub
xchg
ret
dec
pandn
and
fcomps
out
or
lret
pop
test
pop
mov
mov
out
mov
cmp
jg
jmp
loop
cltd
push
out
js
pop
and
mov
xor
sbb
jl
fwait
push
cli
xchg
xor
pop
subl
cmp
dec
sarb
cwtl
mov
or
mov
adc
in
lock
push
mov
and
shr
cmp
and
call
rorb
push
push
fs
loopne
stc
xor
mov
outsl
es
xlat
pop
outsl
imul
adc
push
scas
inc
into
int3
xlat
fldt
nop
cmp
clc
lea
or
clc
daa
outsb
lret
int
popf
out
stos
sti
cltd
lahf
stc
xchg
insl
cli
sub
test
das
movsl
sbb
mov
dec
mov
loopne
mov
and
sti
into
pop
imul
stc
xor
enter
into
jl
leave
pushf
stos
mov
imul
fs
mov
dec
ja
popa
push
out
jo
outsb
cld
dec
int
test
sub
inc
in
add
xchg
cmp
cmp
cmp
rcrb
out
std
sub
popa
out
sar
outsb
jle
mov
sub
insl
lret
dec
out
push
fcomp
cltd
jnp
test
add
mov
lret
xchg
add
iret
mov
ret
mov
adc
xchg
daa
fstp
fcom
pop
xorb
in
pop
mov
in
push
ret
stc
sti
adc
ss
lods
dec
jo
sub
fcmove
mov
xlat
pop
in
jle
into
cwtl
dec
in
popa
popa
fstpl
add
outsl
push
fistl
inc
adc
adc
mov
add
rcrb
dec
push
mov
xor
insb
xor
sbb
subl
push
popf
pop
xlat
lods
pop
outsb
aas
add
js
je
shrb
pop
sarl
pusha
mov
pop
aad
xorl
inc
dec
fsubrl
or
sarl
mov
loope
sub
fistps
js
ds
ljmp
cmp
add
xorl
clc
test
int3
inc
in
xchg
xchg
test
outsb
mov
add
out
stos
sub
add
mov
mov
ret
xor
xor
sti
bound
in
or
add
push
add
jne
jae
jbe
pop
mov
cmpsl
sub
hlt
pop
test
lret
or
dec
add
push
mov
xchg
rol
in
cmp
pop
movsb
incl
xchg
lret
nop
mov
mov
adc
sub
inc
and
mov
dec
mov
pop
cs
sti
inc
mov
push
mov
les
insb
mov
ljmp
push
xabort
xchg
push
sarb
scas
imul
xadd
push
repz
lret
push
push
imul
rolb
mov
inc
inc
fsubs
jno
inc
adc
push
mov
inc
nop
xchg
imul
in
aam
pop
shl
dec
inc
cmp
data16
dec
sub
mov
insb
xor
roll
stc
inc
fiadds
cs
pop
fcmovnbe
jl
ja
adc
fnstcw
ret
mov
add
sahf
mov
rcr
cmc
mov
decb
pop
mov
push
rclb
xchg
pusha
pusha
stc
cld
mov
dec
data16
mov
shll
push
movsl
stos
mov
pop
jo
pop
pop
and
test
in
mov
mov
scas
jmp
mov
fsubrs
and
xchg
or
adc
sbb
pop
test
nop
cmpsl
xchg
or
sbb
push
test
popf
aaa
fldt
sbb
jnp
push
jmp
loope
push
pop
sub
sbbb
sbb
inc
test
add
dec
xor
and
sub
xor
mov
sub
push
out
mov
inc
jge
jnp
repnz
and
iret
mov
dec
sub
sub
into
lcall
stos
mov
add
cmp
notl
mov
mov
shlb
pop
jbe
call
out
xor
cs
scas
jp
mov
mov
jb
mov
clc
ss
sbb
pop
js
mov
ljmp
mov
push
popa
xor
xor
addr16
jb
xor
outsb
notl
mov
jb
dec
add
pop
xor
mov
shr
call
or
xchg
and
das
test
icebp
stos
pop
lcall
mov
cld
mov
mov
jns
into
leave
jecxz
repz
cmp
cmp
jo
mov
daa
sbbb
aad
sub
addr16
sbb
lock
jg
cmp
jle
xchg
insb
or
mov
ltr
cwtl
mov
xor
sbb
mov
mov
xor
movsb
mov
cmpsl
rcrb
xor
outsb
and
lcall
repnz
js
stc
and
jno
insb
jecxz
pop
loopne
dec
mov
ret
aaa
cmpb
stos
sbb
or
push
xor
hlt
pop
mov
dec
sbb
or
push
rep
rorb
iret
mov
test
adc
ret
jmp
adc
clc
ret
jle
or
cmc
insb
mov
rcrb
mov
inc
xor
enter
je
ret
push
sarl
in
inc
popf
cltd
cmp
and
add
insb
pusha
rcll
out
jne
add
jno
outsb
call
add
sub
or
cs
xor
fcomip
cmp
subl
test
mov
cmpsb
xor
rorl
stos
xorl
and
pop
rcrb
jecxz
or
sbb
push
jo
mov
sub
or
inc
pop
cwtl
cmp
lea
int
inc
and
push
enter
pop
fwait
rolb
mov
lret
fwait
mov
imul
cmp
push
mov
shll
fmull
pop
jns
fs
stos
cld
sbb
dec
cmp
sbb
dec
int
push
mov
cs
inc
roll
fwait
jmp
xor
cmpsb
call
push
idiv
xor
push
imul
and
cmc
xchg
sbb
cltd
dec
xchg
incl
movsl
pop
mov
xchg
test
inc
push
add
stc
lock
xor
loop
fdivl
adc
xor
or
popa
ret
clc
sbb
mov
sub
bswap
mov
push
lock
xchg
xor
cmp
testl
dec
test
daa
mov
jg
dec
lea
stc
lods
push
and
ss
adc
aad
push
jl
ja
add
add
fadd
fbstp
mov
je
sbb
push
mov
nop
mov
bound
repz
cmp
add
xchg
int3
loope
xchg
ds
add
pushf
jl
daa
dec
jmp
movb
aam
push
bound
fidivrs
mov
xor
lahf
mov
push
lahf
and
pushf
inc
dec
loope
or
dec
scas
lea
lret
dec
jns
jecxz
and
xchg
inc
fisubs
pop
sti
fmull
in
jmp
push
jl
mov
sbb
push
mov
add
mov
loop
leave
lods
jg
dec
roll
inc
ret
int
nop
jnp
fwait
and
out
mov
mov
lock
sbb
js
mov
jbe
xchg
mov
std
cmpl
push
hlt
outsb
dec
push
mov
imul
mov
ret
mov
xchg
pop
pop
test
sub
jmp
out
lahf
loop
or
cmp
imul
test
cmp
cmp
xor
mov
test
sar
les
xchg
cmp
add
std
rcr
and
popa
les
and
jb
xor
les
repz
jno
rcll
clc
cmp
inc
lret
jle
call
mov
xor
xor
test
pop
pop
adc
inc
and
out
xchg
mov
lret
push
add
outsb
sbb
clc
cltd
sub
jno
cmc
insb
popl
shlb
insl
insl
out
shlb
mov
xor
ss
inc
dec
lds
into
pushf
jns
addl
push
jl
mov
or
lcall
ja
push
movsb
sbb
movsl
jno
jp
popa
push
imul
mov
das
jo
mov
xlat
call
xor
push
dec
xor
lods
add
leave
rorl
cmpsl
cmp
mov
mov
test
out
cmpsb
sbb
xchg
test
out
xchg
xor
add
jo
shr
cmp
or
push
stos
out
adc
mov
sbb
in
jbe
xchg
repnz
ss
out
dec
sbb
daa
push
dec
sub
jge
mov
xchg
jg
insb
mov
xor
jle
mov
testl
into
leave
pop
aas
imul
mov
lahf
jp
js
or
jmp
inc
xor
out
add
sti
or
in
pop
jne
dec
and
outsb
loop
or
cmp
jle
ds
sub
jbe
jo
xor
iret
mov
iret
push
xchg
daa
mov
repnz
data16
add
es
cli
mov
dec
sub
fimull
lods
repnz
sbb
std
inc
mov
not
jecxz
cmc
pop
sbb
sub
mov
pop
and
pop
andb
adc
andl
stc
mov
mov
mov
mov
imul
cmp
shl
ret
pop
int
mov
bound
push
add
mov
ljmp
cs
pop
shlb
cwtl
test
stos
pop
jnp
ljmp
and
lret
adcb
sbb
cmpsb
mov
pop
loopne
xchg
aam
push
and
lahf
pop
jno
xor
int
mov
dec
or
rol
inc
mov
xchg
pop
dec
negb
mov
or
sub
ss
outsb
push
outsl
icebp
xlat
das
adc
les
inc
xor
pop
mov
aas
in
mov
jge
xchg
lcall
adc
xor
and
ljmp
or
mov
dec
jg
adc
sub
addr16
sub
xchg
aas
mov
inc
aad
call
xchg
push
lahf
sub
add
pop
xchg
mov
cmp
cmpsb
push
jns
pushf
gs
ljmp
shrl
add
ret
pop
push
pop
xorb
cld
jno
mulps
add
call
sahf
inc
lahf
sbb
push
lods
cmp
mov
cmp
jns
jno
nop
add
jp
and
andl
fildll
cli
mov
jl
out
mov
movsl
push
sub
sub
dec
les
clc
ljmp
nop
addr16
sbb
xchg
loopne
pop
jecxz
dec
in
outsb
sub
fcmovu
mov
xchg
clc
mov
out
loopne
rcrl
lret
in
add
iret
dec
int3
scas
cmp
pop
rclb
mov
cltd
pop
adc
push
dec
dec
imul
stos
out
jnp
scas
pop
xor
xor
ds
ret
idivl
mov
cmp
inc
clc
xchg
dec
and
test
pop
clc
inc
cmp
pop
add
pop
jmp
icebp
sbb
jle
iret
pushl
lret
jb
dec
xor
lahf
sbb
loope
mov
jp
push
cmc
mov
dec
or
arpl
iret
mov
mov
inc
fistps
leave
sbb
xchg
inc
in
insl
fadd
or
or
sub
pop
leave
mov
push
rcrb
cmpsb
push
in
pop
jns
xchg
inc
inc
push
sti
jp
mov
js
js
jno
sub
cli
movsb
int3
stos
xchg
cmc
mov
xor
push
test
aad
xchg
and
mov
sahf
pop
mov
xor
xor
notb
pop
pop
mov
mov
mulb
push
js
lods
fs
mov
les
mov
cli
addr16
mov
arpl
push
pop
and
fldcw
inc
dec
sbb
inc
test
aam
stos
sub
cwtl
sub
fmulp
popa
fwait
imul
sahf
out
push
mov
xor
ret
in
lods
and
mov
out
lret
sbb
sub
loop
mov
push
pop
mov
xchg
in
pop
sahf
add
cmp
test
fistpll
mov
movsl
jb
andl
icebp
in
out
lock
add
faddl
sub
pop
cmp
adc
and
push
pop
lods
cmpsb
movsb
mulb
sbb
test
dec
mov
mov
jo
hlt
enter
sti
arpl
add
pop
push
add
loopne
xchg
sbb
aas
push
jmp
test
adc
dec
mov
push
or
xchg
xchg
out
sti
fisttpl
jo
pop
mov
jmp
dec
js
sub
sub
push
xor
das
shlb
imul
mov
js
mov
je
dec
mov
test
xchg
mov
mov
lds
lret
jbe
fmulp
leave
outsl
dec
fdivs
inc
xchg
scas
fs
jo
aad
mov
inc
inc
sub
rclb
push
mov
ss
and
dec
aas
flds
stc
ds
add
outsb
push
cmpsb
test
aam
dec
pop
and
jle
pop
fidivl
roll
nop
adc
inc
das
push
cmp
ret
push
pusha
lock
int3
lock
lret
xor
or
add
movl
pop
push
cmp
pop
inc
add
sbb
hlt
or
cmpl
es
xchg
outsl
or
or
sbb
pop
mov
push
icebp
and
adc
out
mov
je
mov
mov
inc
aam
add
repnz
leave
aaa
push
popf
mov
or
cmp
jo
adc
mov
mov
fwait
mov
dec
mov
sub
push
adcb
jg
aaa
jno
xor
xchg
cmp
pop
jno
mov
or
std
push
adc
cmp
enter
je
out
ret
loop
xlat
mov
adc
mov
frstpm(287
pusha
cmp
ss
dec
pop
jge,pt
or
push
lcall
cli
outsl
sub
cmpb
shrl
xor
loopne
addb
mov
xchg
stc
or
sub
out
lret
test
sbb
or
jg
inc
lahf
shll
mov
subl
push
in
xor
mov
imul
lahf
ss
js
cmpsb
das
inc
sub
xchg
cmp
rcr
in
lret
sbb
inc
shll
cli
sbb
and
jl
jo
or
sub
xor
cmc
and
jle
lret
lock
insb
pop
ja
mov
sub
pop
dec
sbbl
push
lock
scas
xchg
and
cmc
sub
rcll
in
jns
int3
test
lea
jb
lahf
inc
in
repz
lret
jp
fwait
data16
xchg
dec
loop
xor
out
mov
xlat
int
and
lcall
repz
mov
cmp
pop
sbb
sub
fiaddl
adc
mov
dec
cmp
sar
int
xor
loope
add
call
push
fs
cmp
cmp
ror
stos
loopne
cld
cmpsb
int3
jb
sbb
adc
ficomps
cmp
adc
cltd
ds
push
mov
xlat
xor
jg
add
dec
xor
or
adc
xor
inc
test
mov
inc
xor
mov
mov
inc
insb
data16
sahf
jns
cmp
xchg
test
fucom
inc
cmp
mov
push
cwtl
pop
cld
in
and
popf
cmp
adc
mov
inc
lcall
lret
lods
mov
lea
in
lods
icebp
mov
sbb
addb
sub
mov
test
mov
mov
mov
pop
xor
jle
add
cmp
mov
dec
and
xchg
or
lock
push
sub
fistps
fwait
push
movsb
lcall
fcmovnb
rorl
jo
jl
cld
test
mov
ret
arpl
fdivl
dec
mov
and
fs
pushf
add
repz
jae
lret
aaa
mov
and
push
push
add
adc
xor
cmc
jge
addr16
incb
push
pop
ret
jg
fldt
xor
fcompl
xchg
fdivl
nop
lds
mov
roll
cld
gs
pusha
xor
std
leave
insb
sbb
dec
aad
negl
jns
add
int
jo
test
data16
call
xor
xchg
or
pop
mov
and
lds
js
or
stos
test
les
pushf
lock
push
inc
sahf
mov
xchg
jne
insb
xchg
mov
inc
add
fwait
cli
xchg
es
push
push
add
das
in
movsl
add
push
pop
push
sbb
adc
or
ret
sahf
and
sbb
push
pop
rcr
mov
adc
adc
jg,pn
add
jb
das
negl
mov
pop
and
popf
test
push
mov
subb
jp
scas
or
clc
jg
sbb
push
mov
dec
push
pop
arpl
in
sub
sbb
cltd
inc
and
xor
jmp
sysret
dec
scas
jns
sti
imull
mov
pop
xchg
int
xchg
push
lods
push
mov
es
xchg
sub
ljmp
js
pop
jae
sbb
lret
add
stc
icebp
out
inc
mov
dec
fisttpll
push
sahf
mov
push
nop
xlat
into
movsl
sbb
sbb
mov
mov
dec
sbb
or
and
aas
push
loope
pop
out
data16
or
pushf
lock
mov
jecxz
movsl
pop
fldcw
adc
adc
cmc
shll
sub
jbe
fwait
and
xchg
or
movsb
std
cmpsb
pushf
pop
mov
adcb
sahf
in
pop
fcmovbe
jo
ror
outsb
enter
pusha
xchg
sub
cmp
iret
std
xchg
stos
dec
loop
clc
mov
mov
adc
out
scas
orb
fwait
bound
mov
popa
mov
imull
in
lods
mov
push
mov
dec
inc
ds
sahf
cwtl
push
sbb
jbe
xchg
or
sub
jns
push
push
sbb
adc
mov
std
fnsave
in
xchg
scas
cmp
testb
aad
pop
mov
fldcw
mov
ja
mov
jno
inc
shr
dec
sub
prefetcht0
sbb
adc
push
pop
fsubrl
jp
push
call
stc
xchg
out
sti
dec
into
mov
fiadds
sahf
sbbl
sub
lea
dec
xchg
test
jecxz
sbb
scas
push
outsl
adc
mov
jg
mov
or
jne
xor
sbb
test
dec
fnstenv
jb
push
rcrb
jp
mov
gs
test
push
mov
int3
dec
cmpsl
loopne
sbb
mov
ret
pop
cmc
cmp
iret
pop
sbb
fs
pop
jl
push
insl
inc
insb
jo
jae
inc
insl
lock
sarl
sub
arpl
sbb
jb
iret
pop
lahf
dec
aas
mov
dec
out
mov
sar
mov
adc
dec
adc
clc
or
adc
mov
inc
fisttpll
xchg
xchg
push
pop
insb
js
or
or
mov
push
in
into
adc
sbb
mov
test
inc
mov
push
sbb
sub
leave
int
mov
jge
cmp
pusha
jmp
cs
scas
xchg
mov
stos
mov
ret
push
sbb
mov
cmpsl
and
outsl
hlt
dec
mov
repnz
mov
cmp
imul
or
les
mov
adc
enter
xlat
fwait
lea
push
stc
or
push
inc
inc
dec
lret
iret
push
std
sub
lods
xor
jbe
sbb
hlt
adc
add
jb
dec
jbe
jo
lds
gs
out
ja
shll
and
dec
je
adc
fdiv
xchg
jnp
jecxz
push
cmp
add
negb
rcrl
inc
inc
test
dec
pop
jg
cmp
fldenv
ljmp
xor
clc
lcall
lea
add
jecxz
or
mov
mov
jo
xchg
mov
out
fmuls
pop
or
into
pop
xchg
xor
mov
scas
sub
pop
inc
push
lahf
jne
imul
mov
stos
dec
and
dec
xchg
int3
sbb
popa
leave
leave
xchg
dec
cwtl
push
int3
mov
ja
rorb
daa
ret
push
call
mov
aam
pop
cmpsb
into
imull
fldl2e
push
xor
inc
lds
push
jmp
jns
push
stos
imul
jecxz
int3
lahf
daa
cmpsl
lahf
out
cmp
lahf
mov
push
mov
sub
inc
out
lcall
out
lds
dec
popf
in
rorb
int3
repnz
dec
push
cli
scas
in
mov
lret
adc
das
xchg
sbb
add
jmp
addr16
cmp
pavgw
imulb
cld
ret
mov
mov
xchg
fistl
dec
sbbb
rolb
testl
jb
jmp
pop
sbb
rclb
mov
imul
mov
adc
aas
cmp
mov
mov
addr16
cmc
je
adc
test
jo
push
mov
xchg
cwtl
outsl
mov
jg
mov
mov
jnp
jecxz
outsb
push
outsl
mov
or
scas
test
ret
sub
repz
iret
mov
fsubl
dec
les
shrb
or
test
mov
pop
or
xchg
add
sti
ret
mov
or
push
shrb
mov
and
jae
mov
xchg
jg
shl
insl
inc
popf
adc
adc
out
sbb
dec
in
rol
ret
ss
in
jno
lcall
sbb
sub
movsb
mov
pop
or
in
les
xor
sub
icebp
jne
adcl
shrl
push
dec
pop
data16
les
inc
fsubrs
cmc
xchg
js
sub
lods
xchg
mov
shl
js
or
repz
loop
jo
test
in
dec
in
pop
cs
insl
pop
fildl
adc
mov
ret
fadd
jp
add
dec
movsb
mov
ret
ss
inc
or
insb
xor
ljmp
fwait
enter
imul
insb
add
ret
std
mov
imul
aam
push
lret
rorl
mov
jnp
or
xlat
jnp
imul
ds
ss
shl
inc
rcll
cmp
fldcw
movlps
add
daa
hlt
sub
imul
push
fmuls
mov
cmp
call
add
mov
lahf
negb
dec
mov
mov
or
pop
mov
add
dec
pop
aam
jne
push
mov
jno
and
mov
cmpsl
inc
or
sub
fldcw
pop
mov
rcll
sub
mov
dec
dec
mov
daa
adc
mov
or
cmpl
pop
std
aam
push
scas
mov
jmp
lcall
xorb
xchg
fstps
xor
popf
push
dec
imul
outsb
pop
mov
sub
xor
jg
or
mov
inc
sbb
push
incb
dec
and
movsl
jb
jbe
arpl
cmp
sbb
lea
jle
sahf
push
or
mov
mov
xor
mov
ss
cmpsl
mov
pop
sub
out
rclb
enter
mov
jne
mov
leave
lea
rol
cmc
call
lds
aam
loop
mov
roll
aad
in
ret
add
push
or
test
pop
inc
mov
fwait
mov
xor
jnp
cltd
test
insl
mov
out
pop
push
leave
pop
sub
adc
xchg
adc
xchg
stos
inc
jmp
call
fld
inc
mov
xor
lods
add
idivb
pop
sub
jbe
in
push
pop
and
sbb
sub
outsl
jb
xchg
and
popf
movsb
mov
aad
nop
clc
cs
jle
aam
icebp
lret
add
jno
or
inc
cld
sub
lods
jmp
int3
int3
fmull
sbb
lds
loop
xchg
dec
sbb
xchg
pop
lcall
clc
iret
ret
insb
jb
sub
ljmp
dec
cmp
sarl
lods
jbe
push
lahf
movb
lret
iret
push
mov
in
fstps
in
pusha
stc
mov
xor
cwtl
jnp
mov
cld
ljmp
xor
xchg
mov
mov
and
fidivl
fwait
sub
scas
aad
xor
lcall
and
xor
xchg
mov
sti
jb
inc
pop
pushf
mov
mov
push
inc
sub
or
movsl
sti
xchg
lret
outsb
mov
push
pop
jmp
in
mov
or
dec
add
in
cltd
rcl
stos
cmp
jb
pop
and
sbb
sub
aas
xchg
out
cmc
mov
mov
in
xchg
push
push
pop
jne
xchg
nop
xor
popa
cmpsl
pop
or
mov
or
std
sub
lret
sbb
pop
sbb
xor
shll
out
nop
jnp
lcall
jg
in
lods
mov
xor
cmpsl
cvttps2pi
xchg
cwtl
mov
orb
cmp
xor
lods
arpl
mov
sbb
xchg
enter
mov
push
inc
mov
shll
lret
out
adcl
push
xor
cli
sub
lods
das
fsubs
mov
fistl
add
add
sbb
push
das
fidivl
mov
add
xchg
lock
jmp
cmpsl
jp
lret
in
jb
out
js
pop
ret
out
push
push
loopne
dec
mov
push
push
inc
and
lahf
imul
fucom
addr16
jp
jg
jo
ljmp
clc
movsl
sub
popa
inc
inc
stos
pusha
lahf
ret
sahf
inc
sbb
and
and
bswap
stos
add
ret
sub
pusha
mov
and
dec
dec
cli
xlat
or
outsb
lods
ror
and
xor
cld
jnp
sub
push
mov
jecxz
loopne
xchg
add
pusha
sub
mov
xchg
dec
push
cwtl
push
stos
bound
dec
lds
cmp
aad
sahf
inc
mov
insl
add
mov
mov
fstl
xor
andb
outsb
mov
scas
push
cmp
sbb
push
mov
fcmove
movb
sub
and
pop
repz
mov
aaa
sub
cmp
jmp
xchg
andl
pop
hlt
adc
bound
shll
dec
cmp
shrb
scas
push
in
es
clc
sbb
dec
sbb
xchg
push
pop
xchg
sub
push
movsb
mov
inc
add
int3
jmp
loope
lcall
aad
mov
dec
std
inc
add
je
fwait
ret
repz
or
cmp
and
cli
sub
xchg
and
rclb
popa
or
add
popf
mov
mov
insl
and
loop
sti
jo
or
out
mov
mov
sub
iret
inc
dec
jnp
jp
xchg
push
jno
lods
dec
or
dec
xor
imul
sahf
arpl
mov
imul
fdivrp
or
jne
popa
mov
dec
into
push
dec
repnz
in
into
jbe
clc
shlb
insl
jnp
mov
div
mov
mov
mov
dec
cmp
adc
lret
push
cmp
push
cmp
pop
ret
cmp
adc
fdivs
dec
dec
jbe
scas
in
xchg
sahf
adc
mov
push
jg
sub
int3
dec
pop
sti
push
cmpb
xchg
in
or
pop
sub
sbb
movsl
cltd
pop
insb
jbe
mov
or
adc
rcr
pop
movsl
iret
es
dec
or
js
lea
mov
jb
mov
push
loopne
xor
inc
push
in
test
loope
jecxz
dec
mov
ja
and
nop
lret
jecxz
cwtl
add
in
pop
mov
mov
adc
out
inc
and
adc
inc
faddp
cmpsb
push
lods
mov
fcmove
es
ret
rclb
ficompl
call
frstor
test
mov
stos
sub
jmp
mov
and
daa
stos
mov
jle
xchg
insl
and
jns
sub
and
gs
mov
push
mov
cmpsb
xor
das
mov
fcmovnb
enter
nop
les
pop
ror
xchg
adc
cmp
subl
cmp
dec
sti
push
sti
xor
cmc
sahf
and
hlt
cmpsl
fistl
mov
add
out
repnz
test
xor
xchg
pushf
dec
adc
jge
je
lods
jmp
pusha
sub
jo
mov
repz
or
movsl
dec
repnz
and
pop
test
aad
sub
cltd
cmpsb
or
push
mov
mov
rcll
add
lcall
mov
or
rorb
and
mov
jecxz
data16
jns
bound
sub
pop
xchg
into
adc
sub
dec
sbb
jge
sar
sbb
jns
dec
inc
jmp
call
push
sbb
jno
ljmp
mov
nop
mov
stos
and
xchg
mov
aad
aam
push
ja
and
fldenv
push
fwait
adc
or
aad
popa
popf
inc
cmpsb
or
jae
xchg
mov
sbb
push
or
es
pop
adc
adc
jne
pop
test
xlat
mov
cmp
rcrl
jo
ret
test
push
mov
ja
test
push
pop
aad
sub
clc
int
mov
mov
fmull
dec
add
pop
adc
mov
push
scas
mov
xor
fs
sub
clc
push
lahf
popl
cltd
pop
mov
adc
mov
jp
ds
xor
mov
mov
xor
mov
mov
sbb
hlt
sbb
shrb
jo
adc
sbb
cmp
mov
xorb
pop
pop
mov
or
sbb
and
jle
in
jnp
jno
inc
popa
pop
jge
cmpsb
lret
lods
lret
jge
lods
push
jno
test
inc
fxch
sub
mov
mov
cwtl
pop
dec
sbb
ss
les
adc
adc
fmuls
outsb
push
fnsave
sbb
pop
pop
mov
dec
xchg
stos
test
fs
test
jmp
cmp
negb
mov
int
jmp
sub
fisubl
leave
cmp
ljmp
ds
sub
subl
sbbl
rcll
push
inc
mov
mov
addb
mov
fisubl
imul
sbb
push
mov
and
scas
push
sbb
mov
adc
shr
dec
dec
fcoml
push
jg
xor
std
mov
inc
ljmp
jecxz
shrl
cmp
mov
outsl
push
ja
lods
cmp
sbb
mov
cmpb
push
inc
test
xchg
enter
daa
outsl
clc
dec
mov
and
push
mov
fisttpll
hlt
add
imul
hlt
outsl
aaa
ja
mov
mov
test
pop
stos
xchg
ja
insl
in
mov
adc
pop
push
andb
or
lret
push
inc
enter
sub
gs
add
stos
pop
jmp
cmpl
ret
mov
and
fs
dec
dec
cwtl
ficoml
cmc
or
or
outsb
int3
jg
adc
jns
hlt
sbb
mov
jae
jnp
pop
sub
test
lods
jge
pusha
xlat
mov
add
push
pop
shlb
cmc
std
xchg
adc
push
nop
and
popf
pop
lock
js
movsl
insl
jg
lods
test
cmp
jbe
and
movsl
add
mov
push
adc
xchg
mov
xor
adc
add
negb
aad
outsl
or
enter
aaa
and
ret
adc
cmpsl
pop
or
xchg
push
ljmp
andl
bound
jns
shll
sub
xchg
mov
out
out
pushf
jmp
or
dec
pop
leave
mov
insb
dec
cmp
iret
pop
or
add
mov
pop
pop
jp
sti
pushf
lds
pusha
push
or
jecxz
xchg
imul
or
outsb
dec
adc
repnz
rcrl
and
add
pusha
ljmp
notl
aas
or
add
adc
pop
popf
mov
loop
shrl
xor
adc
push
repz
lret
push
xchg
aaa
add
test
cld
and
sub
push
push
jo,pt
sbb
xor
icebp
push
xchg
sub
or
pop
pop
das
lret
push
inc
roll
in
idivl
sub
jg
push
shll
cmpsb
fs
cmp
jae
data16
fwait
cmp
into
mov
adc
dec
loop
and
lret
sahf
push
pop
sbb
sbb
push
xor
mov
xchg
pop
mov
lret
or
cmp
scas
rolb
xor
shlb
xchg
in
jnp
xor
jp
inc
mov
and
and
das
adc
ljmp
sarl
mov
notb
movsb
leave
scas
stos
call
or
xchg
pop
lahf
aam
jmp
clc
pop
inc
jae
cmp
mov
sbb
fucomi
out
xor
or
ljmp
jns
xchg
lret
insl
popf
iret
test
ficompl
sbb
bound
lahf
daa
addr16
mov
sti
pop
cmp
cmpsl
push
and
iret
inc
lea
int
incl
shll
mov
in
jnp
push
mov
in
jecxz
into
pop
jbe
test
arpl
pop
loope
inc
xor
mov
dec
mov
out
int
jb
lds
inc
jg,pt
test
jle
xchg
pop
xor
mov
dec
sub
out
std
pop
cmp
fwait
and
mov
insl
sbb
cmp
pushf
jbe
scas
test
push
inc
out
repnz
fisubs
add
sbb
push
add
pushf
pop
mov
or
loopne
pop
dec
sahf
inc
inc
ret
ljmp
or
mov
sub
cmp
lods
push
stos
jbe
jge
pop
sbb
pushf
test
movsb
in
in
dec
lds
cmpsb
dec
lea
int3
ljmp
mov
cmp
push
push
mov
cmp
inc
add
cld
mov
add
cltd
pop
or
pop
sbb
sub
cld
jecxz
cmpl
fnsave
mov
xchg
sbb
rcrl
pop
jnp
push
out
xchg
popa
xor
pop
and
xor
lods
jbe
sbb
gs
lret
push
push
and
rcr
movsl
outsl
adc
jbe
insl
or
and
mov
mov
jnp
sbb
inc
sub
push
lds
pop
iret
popa
andb
or
sahf
sti
inc
push
jnp
shrl
adc
sti
push
mov
or
mov
push
arpl
daa
pop
dec
push
xchg
call
lahf
into
cmp
insl
inc
pop
inc
jo
test
xchg
mov
out
adc
xor
or
gs
lret
mov
xchg
int3
jmp
xor
subb
or
sbb
sub
mov
lcall
aam
fs
mov
sbb
jae
or
adc
xchg
lds
cmp
or
jmp
jg
loopne
mov
xchg
adc
jne
xchg
adc
sbb
insb
xchg
and
fnstsw
push
sub
sbb
jmp
sbbb
push
lcall
test
jbe
add
mov
rcrb
xchg
sub
lret
dec
sub
mov
cmc
nop
or
jge
pusha
pop
test
ss
stc
mov
insb
sbb
in
aam
addr16
pop
idiv
test
lahf
mov
ja
mov
lods
jb
repz
addr16
decl
int3
pop
jecxz
sbb
test
mov
les
push
cli
mov
mov
inc
std
jb
xchg
cmp
push
sti
sarl
cmp
hlt
icebp
jnp
xchg
mov
scas
mov
xchg
inc
fstps
jg
mov
mov
sti
sub
sub
aas
lods
push
movsb
mov
pop
jmp
andb
mov
pop
les
out
cld
mov
mov
inc
psubw
cmp
jae
xor
cmc
xchg
push
or
mov
sub
pop
lahf
dec
inc
xor
jae
scas
push
mov
lcall
sarb
mov
fsubrp
push
stc
jecxz
pop
lcall
cs
les
ljmp
aad
push
std
mov
push
ja
add
cwtl
cmp
xor
pop
movsl
cmp
test
push
cwtl
jo
or
sub
imul
out
data16
push
xlat
outsl
inc
adc
gs
jmp
fwait
jns
sub
imul
mov
enter
jo
and
aaa
push
mov
fists
cmp
sbb
push
stos
push
imul
shll
jmp
jg
dec
pusha
outsl
fimull
xchg
in
test
mov
pop
cs
cld
ss
xor
add
xorl
lahf
and
rorl
sub
xlat
mov
popf
and
add
test
inc
jnp
and
pop
je
inc
mov
jp
mov
aad
dec
test
sbb
dec
mov
gs
sbb
mov
mov
jns
ds
mov
fiaddl
shlb
lea
add
ss
pop
add
adc
pop
mov
sbb
add
mov
pop
mov
mov
mov
inc
xchg
push
xor
pop
sub
inc
pop
push
or
nop
inc
test
clc
cmpsl
bound
cwtl
nop
mov
or
sub
pop
insl
test
gs
sub
daa
pop
cmp
scas
mov
outsb
inc
bound
dec
lods
jnp
loop
test
dec
xchg
inc
notl
jne
pop
cmpl
data16
jl
xchg
pop
out
add
push
clc
loop
push
imul
xchg
dec
xchg
jae
aam
mov
or
scas
push
mov
and
mov
call
ret
xchg
out
cli
mov
pop
push
es
mov
es
pop
cwtl
mov
adc
fwait
fwait
addr16
push
xchg
icebp
cli
push
movsl
sbb
add
fdivl
movsl
adc
outsb
scas
cmp
cmp
std
js
dec
and
decb
push
mov
insl
and
les
bound
les
test
fistl
jg
xor
cmp
push
and
gs
das
mov
pushf
test
mov
in
add
daa
hlt
push
cld
je
repz
lahf
pop
out
fadd
xlat
loope
add
push
jmp
mov
push
leave
stos
lds
mov
jp
jge
fnstcw
aaa
mov
sbb
jbe
out
out
jle
aas
test
arpl
leave
inc
jb
sbb
jmp
mov
adc
je
orb
push
sarb
jg
fs
or
and
inc
stc
lods
rep
mov
sbb
repz
ljmp
jl
xchg
jo
pop
fwait
push
cltd
out
divb
pop
xor
cmp
and
aaa
shlb
cld
dec
cmp
push
pop
mov
xchg
enter
adc
sub
call
fbstp
cmp
je
mov
pop
outsb
test
mov
pop
fimuls
jg
push
rclb
mov
cmp
in
mov
dec
add
dec
inc
stc
notb
and
mov
jne
mov
and
enter
pop
pushf
xor
sbb
dec
stos
sub
pop
inc
daa
pop
cmp
js
fnsave
pop
faddl
mov
adc
fcmovbe
xlat
jmp
outsl
xchg
mov
xchg
jbe
fsubp
cld
leave
shl
sbb
cwtl
ret
xchg
add
mov
xor
enter
mov
pusha
xor
mov
shrb
mov
in
sbb
add
add
pusha
mov
push
inc
sarl
and
mov
ljmp
mov
loope
cmpb
pop
pop
loopne
xlat
mov
roll
rolb
pop
sub
notb
xchg
jmp
jp
gs
notb
adc
add
out
test
mov
out
push
fisubrs
adc
xor
pop
out
cmpsb
xchg
test
call
scas
sahf
adc
mov
push
dec
pushl
out
and
rcrb
clc
das
and
or
ja
leave
push
pop
and
pop
mov
ret
popa
or
imul
push
sub
pop
and
jns
subl
mov
out
jle
cmp
shr
mov
pusha
lods
fmuls
and
fs
lods
and
mov
test
rorl
dec
pop
jae
xchg
movsl
pop
outsl
andl
sub
xchg
repnz
mov
outsl
mov
fldt
and
mov
mov
fistps
xchg
pusha
mov
xchg
test
icebp
out
loope
mov
push
xchg
cltd
roll
push
push
fcomi
ljmp
xchg
adc
xor
pop
cmpsl
push
leave
mov
icebp
cmpsb
iret
repnz
jne
test
iret
push
sahf
test
and
jne
lret
or
and
sbb
or
jbe
mov
in
mov
rclb
leave
sub
push
ficomps
jne
outsl
cmc
mov
test
cmpsb
push
push
cmp
adc
incb
les
add
jmp
inc
sbb
sub
std
idivl
ja
xor
xchg
subl
inc
sub
sub
xchg
fisubrs
push
iret
out
pop
fldl
pop
pop
add
sti
daa
push
stos
mov
test
or
mov
mov
or
pusha
aas
int
and
leave
mov
mov
cmp
pop
cmp
mov
mov
sub
imul
jns
mov
imul
pop
adc
or
loop
jp
sub
mov
shlb
cmc
xchg
dec
push
push
inc
leave
push
push
out
out
jecxz
pop
int
stos
in
cmc
lds
cld
inc
andl
int
sbb
push
aad
mull
das
cmpb
fistps
xor
pop
push
ret
insl
add
pop
jb
int
adc
push
pop
cmc
ljmp
push
jnp
daa
jmp
or
movsl
lcall
and
and
cmp
jno
push
mov
sub
psubw
cmpsb
push
fildll
adc
dec
jb
clc
mov
add
into
ljmp
dec
mov
ss
cmc
mov
subl
xchg
std
xchg
sbb
add
adc
and
mov
leave
fadds
shrl
dec
mov
cmpb
sbb
imul
xchg
les
mov
or
sbbb
nop
and
push
mov
movl
mov
xchg
sub
xlat
cmp
adc
sub
dec
jle
inc
shlb
fildll
jg
idivl
cmp
jl
jle
cmp
mov
or
dec
and
xchg
pop
pop
decl
sub
pop
jne
sahf
mov
xabort
jnp
push
mov
shr
push
inc
mov
mov
xorb
jmp
packssdw
mov
pop
jge
pop
dec
into
mov
cld
aad
repnz
loope
mov
jp
cmpsl
loope
dec
call
out
or
push
xor
addb
insl
ss
pop
mov
imul
scas
mov
dec
jle
or
divl
scas
dec
jle
stos
adc
clc
les
add
xchg
sbb
sub
int
or
roll
mov
out
or
sub
out
or
jg
roll
cltd
mov
and
cmovo
clc
mov
and
pop
int
jle
sub
mov
sbb
outsb
test
inc
or
les
loopne
aam
es
repz
mov
out
xor
data16
test
imul
inc
popf
cmp
pop
out
pop
inc
mov
inc
arpl
pop
mov
lret
mov
cmp
shlb
mov
inc
xor
push
adc
data16
mov
cmp
pop
imul
ficoml
or
push
orl
nop
gs
xchg
mov
jge
adc
gs
iret
popa
outsb
xchg
and
mov
mov
jno
cwtl
shrl
xchg
stos
hlt
mov
dec
cltd
dec
mov
mov
jmp
ror
iret
rcrl
fldl
aam
mov
mov
fbld
ss
pop
rorb
out
push
inc
jle
popf
or
sub
mov
lods
push
mov
sub
hlt
cmc
repz
jnp,pt
lret
addl
push
repnz
outsb
outsl
pop
dec
pop
lret
enter
jmp
lahf
xchg
cmp
xchg
mov
cmp
push
adc
mov
ret
and
xchg
xor
jb
lea
aaa
cmp
inc
loope
popa
aad
dec
jne
and
iret
ss
int3
add
jle
sbb
push
mov
xor
adc
jle
mov
dec
shll
jae
lahf
xchg
or
cs
xchg
mov
mov
out
pop
jecxz
jnp
adc
push
outsb
ds
jne
sub
cmc
inc
lcall
lock
sbb
dec
cmp
pop
rorl
sub
movd
mov
jmp
push
or
fistpll
sub
orl
or
fsubrs
dec
mov
jo
andb
repnz
adc
and
ds
lret
lock
pop
inc
aas
out
or
test
mov
inc
es
test
mov
or
xor
mov
imul
in
pop
jo
out
inc
push
in
xorl
popl
mov
xlat
sbb
aad
lea
sbb
lods
cmpsl
cmpb
mov
or
icebp
js
push
stos
imul
rcll
jno
mov
aam
into
pop
xchg
fs
mov
mov
subl
in
sbb
adc
push
add
sub
xchg
sbb
or
test
adc
lods
dec
das
loop
pop
bound
fs
out
in
jle
and
pushf
xchg
rclb
add
inc
pop
sbb
popf
into
fistpl
ss
fmuls
xchg
push
jbe
rol
mov
xor
push
mov
xor
mov
sarb
pop
pop
cmp
stos
mov
cmp
pushf
aaa
mov
mulb
and
cli
or
imull
adc
lock
inc
mov
sub
aaa
mov
es
cmp
dec
in
inc
sbb
adc
jno
mov
cmp
lret
inc
cmp
xchg
jl
or
sbb
loopne
imul
and
or
loopne
jno
jnp
incb
or
mov
sbb
test
xor
les
pop
fstpt
andl
sub
jle
jmp
icebp
mov
mov
sbb
jl
dec
jae
push
xor
mov
out
adc
sub
jno
inc
push
adc
xor
dec
inc
push
loope
xchg
sub
adc
scas
mov
or
push
arpl
stc
sahf
ss
call
adc
mov
mov
imul
push
pop
dec
pop
aad
clc
lock
aad
dec
xor
jg
daa
adc
cmpsl
clc
movb
in
or
mov
adc
add
rorl
repz
jb
into
adcb
pusha
cmp
jp
xor
in
sti
test
or
loopne
dec
fsubl
leave
js
jmp
xor
pop
ror
mov
mov
dec
cmc
jg
inc
add
outsb
cmpsb
push
mov
jecxz
std
test
enter
mov
sub
lock
scas
inc
cli
mov
adc
xlat
out
dec
ljmpw
stos
cmp
add
outsl
ret
push
mov
mov
pushf
loope
jno
cmp
mov
inc
mov
jp
lods
ret
leave
loopne
add
jmp
mov
insb
add
in
push
jns
cli
sub
inc
add
and
decl
push
repz
inc
push
or
add
jbe
or
movsl
cmpsb
mov
lret
sahf
stc
stc
mov
adc
add
ss
cli
mov
sbb
mov
dec
fisttps
xchg
filds
loopne
cld
ficomps
movl
mull
pushf
mov
pop
jp
or
add
sub
aaa
jp
adc
shll
sbb
rclb
fiadds
fadds
js
pop
daa
xchg
mov
jb
xchg
scas
mov
sbb
push
cmp
mov
xor
cmp
fsubp
in
pop
pop
or
out
dec
push
lock
xor
sub
aam
push
mov
jns
popa
xor
or
adc
ds
cmp
lahf
cmp
call
fists
fnsave
ret
or
add
ret
jns
aam
aam
mov
shrb
nop
sbb
mov
subb
jmp
les
lods
pop
fmuls
pop
and
add
fstl
imul
add
add
xorl
pushf
aas
jbe
jmp
jl
cli
daa
shlb
fdivl
xchg
ffree
negl
jle
arpl
or
inc
sti
push
aas
xor
movsb
cmp
sub
pavgw
call
jge
adc
or
dec
jnp
imul
fwait
test
jb
inc
xchg
ror
jo
cmp
aas
lret
out
pop
test
in
sbb
cmp
mov
arpl
cmc
push
nop
notl
shll
mov
fsubl
jnp
mov
std
add
xchg
enter
jg
xchg
adc
dec
int
sub
mov
cmpsb
and
call
sub
push
hlt
scas
outsl
pop
repnz
ss
cmp
ja
test
adc
cli
adc
xchg
push
xor
pop
mov
insb
sbb
lods
scas
xlat
std
jns
cmp
div
rcrb
cmp
call
jp
not
pop
adc
outsl
imul
sti
or
sti
cmp
je
dec
jo
icebp
adc
subb
je
and
repnz
movsb
outsl
sub
sbb
jmp
jl
xor
ss
jb
jl
fcmovb
mov
ret
mov
or
clc
jmp
lods
pop
pop
pop
mov
outsl
rcrb
icebp
stc
mov
ret
push
cmp
jnp
inc
lahf
jmp
mov
shrl
cmpl
icebp
loopne
jno
adc
xor
add
jne
sbb
lea
push
push
cld
popa
adcb
inc
xchg
push
mov
xchg
add
xor
mov
repnz
cmc
dec
pop
and
shll
and
mull
cmp
xchg
pop
ret
mov
xchg
test
jae
fsts
dec
adc
jle
push
in
in
das
shll
addb
ss
cmp
mov
pop
sbbb
in
and
push
mov
mov
inc
jg
in
jns
adc
call
sub
nop
push
rorl
sub
flds
push
pop
cmp
mov
decl
cmp
stos
inc
fsubrl
shrb
scas
out
push
outsl
and
out
lcall
inc
pop
hlt
sbb
cmc
sub
das
ficoms
mov
xchg
and
fldcw
inc
movb
andb
dec
cmp
and
dec
pop
out
adc
mov
leave
push
jge
pop
lock
in
inc
in
sub
clc
jns
loop
and
cwtl
js
test
js
push
out
xchg
jmp
inc
sub
add
push
not
pop
fcmovne
addr16
lock
arpl
sbb
fstpt
jmp
mov
inc
mov
aas
sub
push
mov
iret
mov
shl
mov
shll
add
push
push
rorb
and
negb
call
xor
dec
xchg
lahf
stc
int3
push
jg
or
and
fsubl
int
cwtl
mov
lea
or
movsb
dec
pop
ror
imul
push
jge
outsb
dec
pop
stos
rorl
or
add
inc
fs
pop
movsb
jns
ficompl
push
push
out
pop
jl
push
sbb
cmp
enter
dec
mov
mov
jge
subl
test
push
cs
push
and
mov
movsb
ret
pusha
addr16
or
pusha
scas
xor
fisubrs
sahf
xor
scas
popa
testb
lcall
nop
sahf
mov
dec
cmpsb
cmp
push
inc
int3
xchg
bswap
mov
jno
ds
pop
pop
fcomi
iret
mov
ljmp
mov
mov
mov
lret
xor
ss
cmc
xchg
adc
cmpsb
fwait
adc
loope
inc
insl
jbe
shr
add
hlt
cmp
mov
or
adc
pop
lock
out
cli
xchg
popa
jbe
lock
cltd
inc
adc
mov
mov
in
xchg
adc
xor
jnp
and
pop
sti
rcrl
dec
scas
pop
dec
fs
cs
int
ficoms
cmp
je
mov
pop
mov
push
scas
movsb
dec
push
aaa
shll
inc
xchg
dec
xor
pop
pop
lcall
fs
movl
and
pop
mov
jb
xchg
shlb
xor
test
sti
mov
clc
add
add
int
jp
mov
mov
cwtl
pop
nop
loop
mov
lret
int3
popf
jle
jg
int3
xor
lahf
enter
xor
inc
cmc
jecxz
jmp
cs
inc
call
test
jno
adc
mov
mov
adc
jno
and
rol
cli
test
or
push
cmp
add
jge
and
jg
testb
xor
rcl
mov
sub
ret
insb
ss
data16
insl
stos
add
push
pop
xor
jp
cmpsb
arpl
or
inc
lds
scas
adc
or
enter
fisttpl
out
xor
loope
outsb
mov
dec
insl
and
arpl
push
rcll
or
jns
sub
subb
popa
jbe
fcoml
add
pusha
inc
dec
mov
inc
lret
insb
notb
popf
repnz
scas
dec
mov
mov
inc
adc
push
inc
sbb
shll
or
jmp
xlat
push
adc
push
push
addr16
and
clc
ret
pop
daa
sbb
insb
enter
mov
int
add
std
cwtl
dec
call
stc
sahf
in
mov
lret
sbb
aad
hlt
int
jg
sar
push
xchg
add
mov
stos
outsl
mov
mov
out
or
cmp
hlt
xchg
lea
popf
in
int3
fildl
fwait
jg
and
pop
ss
mov
xor
add
add
sbb
sub
nop
jecxz
shll
jge
mov
xchg
sbb
jae
movsb
stc
call
test
cmp
out
popf
mov
gs
int3
dec
jecxz
xor
mov
stos
cmp
xchg
push
imul
jl
inc
mov
fnsave
xchg
ss
imul
aad
sti
adc
shrl
xor
pop
lret
daa
jge
les
xchg
cmp
out
sub
xor
add
int3
sti
mov
out
out
push
dec
test
mov
inc
pop
dec
push
fs
movsl
test
push
adc
popf
adc
test
sbb
push
mov
cmp
lahf
adc
in
or
ret
lahf
iret
mov
push
clc
pop
sub
push
ss
and
sbb
lock
call
dec
push
mov
mov
das
gs
sub
inc
push
push
bound
mov
or
push
push
nop
mov
push
cld
mov
xchg
or
xchg
xor
mov
pushf
jecxz
je
sbb
subb
mov
jle
mov
push
fstl
rolb
xchg
push
int3
stos
cmp
lods
cmp
jae
adc
mov
fcoms
stos
and
pop
and
mov
dec
jb
test
outsl
or
mov
call
mov
push
inc
in
xchg
pop
shll
sti
jmp
mov
jb
fldl
lret
inc
dec
xlat
cmp
push
fisttpl
rol
dec
xor
dec
mov
jno
sti
aam
gs
imul
out
inc
mov
sbb
data16
jle
xor
xchg
inc
ljmp
mov
add
push
mov
sbb
mov
push
lock
jp
pop
daa
jmp
hlt
dec
jne
xor
or
nopl
sbb
imul
loope
imul
jecxz
fcmovbe
imul
mov
cmc
repz
mov
pop
xlat
sarl
push
pop
pop
inc
or
js
fs
cmp
xor
adc
push
or
je
int
cmpsb
inc
test
scas
push
push
cmp
loopne
cwtl
icebp
std
push
mov
fsubr
xchg
cmp
mov
ds
mov
xor
cmp
out
sbbb
add
push
pop
jns
repnz
dec
pusha
inc
sub
neg
or
mov
lods
std
setl
dec
pop
mov
or
loop
xlat
mov
pushl
cmpsb
mov
xor
jae
shrb
mov
jp
adcl
jne
out
pop
or
test
int
pop
inc
pushf
sub
push
int
ret
or
lds
mov
or
in
lcall
aad
add
sub
inc
fcoms
dec
je
fnsave
clc
je
sbb
repnz
sub
cmpsb
or
mulb
cli
or
and
pop
mov
in
arpl
mov
in
dec
ret
fnsave
cmp
inc
adc
sub
pop
mov
insl
test
roll
push
ss
popf
sub
out
cmpsb
push
mov
int
aas
pop
xchg
or
or
pop
mov
fdiv
inc
fisttpll
aaa
sub
push
subl
fnstsw
sub
in
or
inc
ret
pop
test
sahf
sbb
psllw
insb
leave
dec
mov
test
adc
jno
ret
sbbb
or
cmp
repnz
and
or
scas
test
aam
sub
add
cmp
scas
leave
xor
cmpsb
div
in
test
andb
sbb
gs
mov
push
jp
push
sbb
pop
sub
push
jle
sbb
jo
mov
insb
push
cli
rcl
mov
dec
push
jbe
or
mov
dec
aam
stos
fmuls
fisubrs
xchg
sub
adc
pop
pusha
xchg
fs
lret
mov
xor
pop
jno
push
xchg
pop
and
movsl
push
jge
add
movb
xchg
cmp
ljmp
popf
adc
inc
jmp
mov
and
xchg
and
xchg
push
ret
lock
mov
sbb
pusha
in
mov
repz
popf
movsl
lea
inc
xchg
arpl
sub
jle
inc
stos
out
movsl
inc
test
push
lea
pop
pop
jne
loopne
repnz
cmp
xchg
les
cli
cli
jno
popa
aaa
sbb
xor
mov
scas
adc
jge
outsl
jno
stos
xlat
daa
test
stos
out
in
adc
dec
js
lret
push
imul
sub
mov
dec
popf
mov
xor
icebp
xchg
xor
or
sbb
sbb
loop
popl
add
sub
test
rcrl
add
into
mov
jno
pop
repz
mov
addr16
inc
xor
out
mov
stos
sub
in
ljmp
shll
xchg
aam
jl
test
fisttpl
push
je
fcomps
dec
clc
add
pop
faddl
jns
ret
xor
jne
enter
out
cltd
rcrb
aam
ret
sbb
enter
divl
pop
roll
aam
xrelease
dec
add
leave
and
test
rcrb
lock
sub
mov
scas
and
and
inc
sub
mov
mov
dec
into
mov
daa
mov
xor
and
mov
out
xlat
jns
sbb
pop
pop
in
js
sbb
and
rol
pop
dec
cwtl
clc
icebp
ljmp
push
inc
lods
lcall
out
jb
mov
jmp
lock
cltd
adc
adc
mov
gs
xorl
out
cmp
fwait
dec
and
mov
dec
flds
adc
dec
bound
std
jne
das
push
lcall
imul
addr16
clc
pop
shrb
repz
mov
mov
dec
pop
lahf
adc
or
cwtl
ret
jo
mov
push
pop
xchg
pop
jnp
shlb
pop
or
jmp
jl
sub
xor
dec
clc
pop
xchg
and
push
jl
lcall
ljmp
lret
popa
les
inc
adc
sbb
mov
jp
std
es
cli
neg
loope
or
add
push
cmp
mov
loop
mov
cmp
mov
mov
outsb
outsl
dec
jno
sbb
arpl
xchg
push
jmp
into
sub
pop
arpl
push
movsb
sub
adc
dec
xor
inc
call
out
lds
icebp
and
xor
and
in
daa
sbb
outsl
sbb
je
jb
xchg
sbb
int
sbb
lods
adc
pop
adc
std
repz
lods
shr
jge
lret
iret
in
mov
pop
add
fcomps
aaa
lods
subb
int
dec
mov
fdivs
mov
mov
mov
or
jle
mov
cmpsb
xchg
pop
mov
aas
imul
test
xor
nop
nop
inc
imul
pop
cmp
fnstenv
jl
mov
jp
jbe
xor
xchg
add
dec
mov
or
xchg
lahf
xchg
in
movsb
cmpsb
lret
mov
repz
add
mov
mov
mov
popa
cwtl
pushf
fidivrl
mov
pop
out
mov
mov
cmpsl
sbb
outsl
pusha
jmp
int3
add
xchg
divl
jecxz
adc
sub
adc
hlt
xor
xorl
jno,pn
ljmp
xlat
std
test
insl
or
nop
mov
sub
mov
les
push
push
cmp
adc
xchg
or
or
scas
inc
gs
dec
scas
push
cmp
dec
daa
imull
inc
mov
cltd
dec
pop
add
out
xor
int3
jnp
mov
hlt
and
mov
jnp
mov
xor
pusha
dec
test
adc
arpl
mov
fnsave
push
lcall
pop
jae
and
nop
xchg
push
test
xchg
xlat
in
fs
outsb
cmp
add
outsl
add
ja
push
jns
rorb
inc
and
mov
adc
mov
cwtl
adc
adcl
sbb
cmp
or
sbb
xchg
stc
in
mov
test
aam
or
xor
or
mov
enter
inc
test
xor
mov
dec
or
into
je
xchg
jae
or
or
mov
ss
nop
pop
or
mov
xchg
push
insl
mov
xchg
icebp
call
test
sbb
mov
jge
push
rclb
stos
mov
xor
fidivl
push
enter
push
repz
loopne
or
xchg
sub
int3
jo
lock
or
pushf
lret
stos
lock
stos
fwait
pop
test
add
mov
andl
shlb
jg
bound
into
adc
insl
adcb
iret
cs
inc
or
fistpll
or
outsl
pop
pop
les
mov
inc
fidivrl
mov
dec
xor
out
inc
pop
push
test
pushf
jo
mov
or
ds
popf
addb
fimuls
push
mov
dec
and
fs
ret
sub
lods
ss
fidivl
nop
sub
jg
jne
aam
cmp
andb
mov
xor
shl
dec
stos
push
sub
fildll
aas
repz
jnp
inc
adc
imul
pop
es
or
xchg
sub
fidivs
mov
callw
sub
ss
subl
popf
mulb
mov
insb
int
mov
push
arpl
pusha
test
add
gs
decl
scas
xor
out
xor
addr16
hlt
xchg
adc
lea
imul
or
insl
push
inc
mov
popl
adc
das
pop
xchg
sub
push
test
fdivp
sbb
cli
cs
or
std
aam
addb
xchg
imul
lods
dec
pop
inc
pop
ret
jbe
lock
add
or
mov
aad
or
sub
nop
cmpsl
sbb
inc
mov
push
inc
fsub
xchg
call
test
sub
sbb
test
fbld
faddl
add
in
pop
adc
sti
add
sbb
pop
fcmovnb
mov
xorb
pop
add
mov
outsl
pmaxub
movsl
ret
out
xchg
lods
test
ja
dec
jl
or
jbe
inc
outsb
cmpsl
xor
sbb
dec
xor
fs
dec
xchg
lret
xor
mov
pop
push
test
adc
add
cld
dec
xchg
repnz
sub
or
loop
repnz
xor
push
cmp
cmp
movswl
or
cmp
bound
pop
dec
add
or
int3
in
jne
or
shll
xchg
sahf
movsb
pop
pusha
out
adc
jno
testl
mov
mov
les
ljmp
xchg
in
popf
and
mov
jns
push
mov
sbb
pop
sbb
or
insl
cmp
movsl
loopne
imull
lods
addr16
int
xchg
hlt
out
jo
add
lcall
cld
outsl
add
lea
ret
pop
insb
fcoms
xor
xor
stos
outsb
xor
cmp
cld
add
shll
cld
or
enter
das
test
adc
sbb
or
xchg
scas
add
lock
outsb
add
fcom
das
pop
cld
xor
imul
addr16
add
mov
xor
psubb
mov
xchg
jnp
add
mov
push
adc
mov
mov
xor
pop
andl
or
dec
int
fcomps
lcall
jge
jle
mov
scas
jmp
jnp
popa
xlat
pusha
mov
xor
or
push
or
sub
inc
cwtl
loope
stos
cmp
ret
add
aaa
dec
push
push
test
mov
xchg
mov
sub
fadds
cmp
cmpb
mov
loop
pop
mov
cmp
mov
pop
jae
push
push
stc
mov
jb
scas
sbb
inc
jo
jne
or
sub
and
pusha
mov
fcoml
and
jmp
adc
mov
je
xchg
js
add
push
hlt
es
sub
fsubrl
adc
inc
scas
cmp
out
add
popa
sub
hlt
jp
lock
xchg
iret
cwtl
les
test
mov
push
scas
ficoml
and
fs
xchg
or
mov
jmp
fwait
stc
add
inc
ficoml
and
int
nop
pushf
data16
jmp
lock
mov
mov
inc
sbb
ds
outsl
mov
fs
cltd
iret
cmp
mov
data16
mov
inc
inc
mov
mov
insb
lcall
movsb
rolb
ss
jne
lret
lret
out
aaa
mov
adc
insb
in
cmp
mov
mov
pop
fistpl
sub
cmpb
sub
add
lock
jne
xor
dec
lds
cltd
sub
movsl
mov
mov
inc
push
fidivs
cli
and
pusha
adc
je
adc
adc
ljmp
pop
xor
sub
fisubrl
rcl
push
leave
jle
add
xchg
jmp
xchg
inc
mov
jb
pop
arpl
ret
fwait
mov
jge
xor
mov
daa
cwtl
aas
xchg
andl
icebp
cmp
repnz
pushf
sbb
add
mov
imul
xor
pop
push
out
sbb
imul
shll
xchg
test
jmp
push
sti
cmp
stos
pop
mov
pushl
rol
inc
jnp
xor
in
mov
fst
call
loope
out
xchg
xor
out
inc
jno
sub
gs
lret
int3
rolb
divl
scas
lods
hlt
sub
cli
aaa
push
adc
adc
rorl
andl
test
fld
les
mov
mov
pop
push
sbb
scas
ja
push
aaa
fistpll
dec
push
iret
xchg
jle
lret
jg
ljmp
jno
xor
scas
mov
scas
dec
iret
pusha
das
pop
std
lret
jae
test
dec
cs
popa
fdiv
jecxz
cmp
cld
in
sub
out
mov
aaa
and
mov
and
pop
push
xor
cmc
arpl
xchg
into
int3
fbstp
inc
cmp
jo
jp
sbb
jo
loopne
lea
push
xchg
imul
in
aaa
dec
in
or
xor
cmpsb
pusha
mov
sahf
inc
xchg
pop
and
sub
mov
test
cld
jp
ds
ret
and
inc
pop
pop
ja
lock
mov
lret
xchg
lret
popf
fsin
mov
jmp
ss
mov
decb
int
leave
out
int3
in
or
in
popa
push
sbbb
sbb
xchg
or
and
fmulp
or
sbb
or
js
xchg
and
lods
adc
lds
gs
mov
mov
push
and
mov
out
shlb
pop
outsl
mov
aam
inc
and
add
sarb
fidivrl
sbb
xchg
sbb
hlt
adc
es
dec
dec
pop
mov
mov
imul
aas
mov
mov
insl
fisttpll
cli
dec
ret
adc
int3
or
addr16
fwait
xor
lock
sahf
imul
lods
test
icebp
add
in
adc
mov
and
push
xor
rcrl
dec
cmp
cmpsl
pop
jle
mov
pop
sti
xor
fnsave
negl
mov
pop
into
cmp
jbe
pop
je
adc
outsb
adc
sti
add
cld
repz
push
sub
iret
pop
fwait
leave
cltd
dec
dec
adc
pop
mov
bound
push
mov
out
ret
dec
loope
cmp
clc
and
cmp
ret
das
fimull
cltd
ds
ret
jno
mov
loope
sbb
cmpsb
sub
sub
ds
sub
and
in
arpl
imul
cltd
dec
clc
dec
scas
popa
std
xchg
cli
or
mov
xchg
dec
push
xor
insb
fcoms
hlt
sub
mov
lret
stos
lcall
pop
mov
and
cmp
stc
pop
ror
std
inc
sub
jge
mov
imul
push
push
shrl
sub
sub
into
in
loope
mov
push
fmulp
or
stos
fisttps
es
into
jg
pop
pushf
into
bound
out
push
jmp
add
inc
or
mov
add
fcompl
jno
jbe
xchg
clc
cmpsl
shlb
int
jbe
and
and
push
jo
lret
cmc
jb
lret
je
inc
scas
rorl
cld
xchg
pushf
sub
ret
and
xchg
lret
dec
cmp
push
test
inc
push
cs
mov
insb
fwait
lahf
jecxz
mov
or
data16
test
nop
aam
nop
mov
cmp
aaa
xor
mov
pushf
fadds
inc
mov
popa
or
aas
mov
sbb
xchg
xchg
push
xor
test
pop
sbb
jnp,pt
aas
adc
subl
jl
xchg
push
xor
enter
sub
cmp
xchg
jb
rorb
mov
xchg
mov
xor
jmp
or
lret
mov
addl
insl
mov
mov
push
loope
in
iret
lods
or
jns
test
add
jl
loop
cli
xchg
pop
sldt
mov
push
add
ds
test
mov
dec
lret
sbb
leave
out
add
mov
pop
mov
es
movsl
mov
inc
xchg
xorl
call
mov
data16
sub
adc
aas
sbb
mov
mov
mov
clc
sbb
inc
imul
pop
xor
sarb
pop
gs
xchg
mov
fimuls
repz
je
xor
mov
mov
and
lea
dec
hlt
mulb
add
jo
shrb
adc
mov
daa
mov
pop
xor
movsb
out
ret
lods
call
fisubrl
add
cs
into
and
repz
adc
sbb
sbb
mov
push
loop
test
aaa
or
sbb
lods
cwtl
and
cmc
stos
xchg
nop
idivb
fcmovu
out
push
mov
mov
lret
loopne
mov
pop
xor
xchg
jp
cmpsl
jns
sub
push
add
in
out
les
addb
cmp
flds
inc
movsb
call
jl
flds
inc
pop
cli
mov
pop
cmp
pcmpeqb
fstp
xchg
int
movsb
dec
gs
rorl
addr16
jp
mov
jo
mov
cmpsb
shlb
or
aam
xchg
fwait
mov
pop
xor
add
mov
inc
outsb
and
cltd
shll
xlat
adcb
repnz
out
test
push
ds
lods
add
mov
jbe
push
inc
or
sub
gs
aas
push
fidivrs
popf
push
push
sbbb
cld
xchg
lahf
adc
cmpsl
stos
daa
dec
push
repnz
mov
add
mov
das
fcoms
mov
mov
inc
into
push
mov
dec
popa
mov
jle
adc
push
in
add
lret
pop
mov
in
test
dec
sti
int3
gs
mov
add
pop
push
js
xchg
xchg
hlt
repnz
out
inc
push
adc
pop
jb
lods
rcr
out
pop
aad
loop
pop
int
popf
fsubrs
notl
pusha
adc
inc
push
ja
fdivrl
mov
pop
cmp
ja
push
mov
out
popf
mov
pop
sub
xchg
xor
pop
mov
or
sbb
xchg
push
cmp
rol
push
mov
dec
sub
mov
push
xsha256
cmpsb
push
rol
out
pop
out
mov
in
inc
pop
and
add
xor
fdivrs
mov
rclb
pop
inc
in
testb
mov
rol
call
pop
sbb
jmp
push
es
cmp
dec
arpl
clc
ljmp
in
rcl
mov
mov
sub
and
cwtl
inc
mov
addr16
fwait
mov
or
das
in
in
es
jecxz
pushf
sarb
js
stos
xorl
or
dec
test
or
push
repnz
mov
jle
faddl
call
cs
test
inc
out
scas
sub
cmc
hlt
cltd
sub
sbb
movsl
lret
cs
mov
cmc
add
sbb
jp
jo
and
sub
add
shl
sbb
sbb
adc
les
daa
dec
daa
sbb
out
loop
jmp
in
sbb
jbe
xlat
imul
and
push
dec
ret
xchg
shlb
inc
adc
or
adc
scas
lds
or
mov
mov
outsb
sbb
mov
add
sbb
dec
dec
push
add
hlt
and
in
inc
dec
sbb
dec
inc
je
popa
xchg
xor
sub
xchg
and
cmp
rcr
adc
adc
push
andb
dec
cmp
adc
in
sub
pop
js
lret
push
clc
or
scas
jae
mov
pop
ja
test
lahf
pushf
cmpb
xchg
lea
push
add
xor
stos
xor
fidivrl
jne
clc
icebp
call
jge
popa
das
popa
mov
insl
xor
je
cmc
or
movsb
jmp
ss
stos
cmpsb
test
mov
scas
push
inc
fcoml
pop
push
cli
dec
pop
dec
jp
test
xor
jo
aas
xchg
es
jnp
fimuls
addr16
pusha
and
insb
js
sbb
pop
push
push
imul
xlat
scas
cli
or
subl
movsb
jae
mov
mov
sub
sub
repz
int3
mov
negl
sti
jno
idivb
lods
lcall
aad
pop
pop
in
je
call
xchg
nop
ret
and
pop
fadds
out
xchg
mov
das
int3
inc
jmp
sub
mov
mov
ljmp
ljmp
or
loopne
iret
sbb
lcall
sbb
andb
adc
adc
and
fadd
out
test
iret
mov
cli
add
and
xchg
popf
test
icebp
mov
repnz
fxch
sbb
jno
scas
or
imul
adc
das
dec
or
loope
add
cmpsb
pop
cmp
xchg
fdivr
stc
ja
in
mov
mov
push
jno
mov
clc
mov
pushf
aad
jmp
mov
sahf
into
mov
out
add
stos
push
jg
mov
jmp
xlat
pusha
adc
data16
adc
jae
cli
sub
or
popa
imul
lock
in
xchg
pop
out
fistpl
in
pusha
aas
xor
int
test
cmp
and
popf
xor
jp
cltd
inc
cmp
popf
stc
pop
pop
out
les
xchg
cmpsw
in
test
mov
cmc
loop
rol
mov
testl
dec
add
jl
adc
repnz
and
mov
sbb
xor
pop
out
and
mov
push
sub
xchg
push
dec
push
push
repz
je
pop
mov
xchg
fstps
adc
and
rolb
adc
aad
out
mov
dec
mov
push
repnz
xor
mov
xor
jg
fxtract
repnz
jmp
clc
sbb
cmpsb
insb
stos
es
xlat
sub
dec
outsb
int3
fsubrl
call
push
lret
or
dec
test
fldt
fwait
pop
mov
ret
lret
push
mov
negb
or
fnstcw
xor
outsb
jnp
hlt
sbb
jb
movsb
cwtl
xchg
and
cltd
mov
dec
mov
aas
and
xor
test
cmp
adc
pop
inc
xchg
xchg
test
sbb
mov
enter
jmp
mov
mov
in
push
push
cmp
andl
test
cli
or
adc
sahf
mov
add
inc
mov
mov
jg
mov
mov
pusha
mov
inc
xchg
add
js
outsb
mov
mov
out
movsl
cmp
rorl
pop
pop
icebp
pop
int3
and
add
add
pop
push
push
dec
jle
sbb
fcmove
jecxz
mov
add
cli
rorl
pop
sbb
jmp
and
mov
out
inc
cmp
out
jb
or
rcr
mov
sbb
add
aam
push
int
jbe
jmp
sbb
out
mov
dec
xor
xorb
add
pop
sub
call
sub
dec
xor
xchg
inc
rolb
pop
cmp
sbb
and
cwtl
sbb
or
mov
mov
sahf
add
adc
and
mov
push
les
cmpsl
lret
scas
ds
outsb
xor
bound
ljmp
sub
or
push
mov
std
mov
sbb
push
and
sbb
imul
dec
stos
inc
loopne
repz
pop
ror
xchg
sbb
outsb
popa
adc
clc
movsl
repz
or
test
ficoml
fbstp
xchg
test
aam
sub
cmp
fsts
divb
pop
es
or
xchg
adc
lods
inc
lahf
mov
mov
dec
adc
ret
pop
dec
shr
adc
sub
rcrb
or
in
and
xchg
repnz
pushf
lret
sbb
imul
push
std
jecxz
rcrb
and
inc
jecxz
mov
jge
ljmp
dec
pop
stos
out
rorb
jae
sbb
cli
sub
ret
xchg
inc
dec
int
sbb
aas
push
add
mov
jge
xor
cmp
addr16
xchg
adc
add
dec
xchg
aam
push
xchg
push
xchg
adc
jle
int
mov
cmp
insb
orl
xchg
jno
cmpsl
cwtl
mov
aaa
rol
sbb
mov
sub
sbbl
inc
lods
faddl
and
add
mov
pop
mov
rorl
add
add
outsb
push
cmp
out
or
add
cwtl
push
dec
xor
scas
stos
inc
idiv
subl
test
jl
pop
cmp
jae
mov
mov
sbbl
xor
sahf
addr16
int3
popa
outsb
popa
jne
sub
mov
fbld
es
popa
in
orb
dec
cs
fstps
fsubrs
scas
mov
out
flds
out
aaa
push
mov
jne
push
test
sbb
mov
mov
jle
xor
pop
fs
jmp
or
xchg
les
sti
pop
push
out
ja
shl
pop
mov
xor
dec
shlb
cmp
xchg
push
ret
and
sbb
push
js
les
fcompl
pop
jge
jmp
imul
pop
push
orl
xor
adc
cld
mov
ret
push
idivl
mov
arpl
outsb
aaa
mov
add
mov
pusha
push
add
jns
ret
shrb
jo
jecxz
in
mov
sahf
push
hlt
xchg
xchg
inc
push
adc
mov
dec
add
inc
test
and
xchg
cmc
inc
add
es
push
inc
lds
in
std
xlat
and
and
and
mov
jne
cli
pop
js
inc
and
mov
push
nop
xchg
and
pop
push
decl
bound
pop
test
xchg
and
sti
arpl
push
sub
testb
insb
std
ljmp
movsb
pop
and
andl
sub
es
jnp
arpl
mov
jmp
fdivp
dec
stc
xlat
cs
add
xor
lods
nop
cmp
imul
mov
ret
dec
pusha
stos
xlat
pop
jl
int3
and
hlt
aam
xor
or
cwtl
mov
push
addr16
pusha
lret
and
mov
cs
fimuls
idivb
ds
pop
imul
pop
data16
mov
arpl
jge
mov
push
pop
xlat
cltd
xor
push
scas
push
gs
push
jg
test
and
mov
ja
fmull
data16
lcall
daa
sbb
mov
pop
dec
xchg
sbb
lods
call
adc
xor
rolb
mov
cmp
cmp
cmc
push
sub
dec
call
int3
mov
arpl
push
mov
fistpl
mov
aas
dec
pop
scas
inc
adc
outsb
leave
push
fimull
neg
mov
jbe
or
jge
out
dec
jle
jle
mov
cmp
mov
jl
dec
test
icebp
xlat
lea
pop
shlb
jp
test
stc
or
repz
lods
push
jno
inc
pop
outsb
add
mov
popl
rclb
inc
popf
enter
cmp
sbb
jo
and
dec
add
pop
cli
or
push
pop
adc
or
mov
fwait
add
out
xor
mov
lea
bnd
inc
cmpsb
rcr
or
mov
mov
stos
mov
sbb
imul
jnp
and
aaa
jmpw
sub
jp
pop
fisubs
mov
jne
into
mov
pop
sbb
mov
and
lahf
lcall
cmp
push
rclb
sbb
mov
xorl
push
idivb
addr16
mov
ljmp
daa
loop
sub
lret
mov
int3
pop
jl
cwtl
pop
push
cltd
fldl
dec
movl
test
test
and
adcb
cmp
fs
loopne
arpl
fisubrl
mov
fcompl
jle
dec
jnp
repnz
ljmp
loope
orb
xor
push
add
scas
int
xor
xor
jecxz
icebp
mov
push
test
dec
inc
cmp
ficoms
jne
into
add
cs
hlt
add
mov
fdivs
add
or
fwait
ds
xchg
jecxz
outsb
ret
jg
sub
into
adcl
jg
dec
pop
sub
cmp
jg
daa
sbb
scas
mov
js
bound
das
shlb
pop
mov
loop
pop
mov
sub
lret
out
loopne
xchg
xchg
lahf
cmp
ret
and
pop
cmova
test
popa
into
cwtl
pop
mov
mov
lahf
mov
mov
cmc
jecxz
mov
and
dec
in
pop
ja
clc
xchg
jmp
xchg
and
push
mov
cs
sub
xchg
ret
sbb
mov
into
jg
xor
push
pop
js
arpl
or
ljmp
and
or
popa
movntq
push
sbb
mov
xchg
repz
xor
popa
cli
xchg
xor
jo
fcompl
stos
or
or
test
jmp
pusha
pop
and
xor
pop
mov
ret
out
test
and
sbb
mov
dec
inc
decb
adc
xchg
or
mov
xchg
sar
pop
divl
add
xchg
add
push
xchg
imul
fwait
add
fistpl
mov
fstpl
mov
xchg
mov
push
and
hlt
inc
idivb
leave
repz
call
jb
leave
push
fidivrl
sbb
sbb
mov
add
in
jne
sub
out
addr16
aad
pop
dec
cmpl
in
pop
mov
in
xchg
pop
psubsw
les
and
fimuls
and
sub
inc
adc
cmpsl
push
sub
dec
pusha
push
sub
inc
inc
mov
dec
das
out
ja
outsl
popa
adc
scas
popf
je
inc
fucom
scas
call
mov
fisubl
loopne
inc
jge
sub
push
inc
add
bound
test
inc
sub
xlat
cmpsb
cli
or
lods
mov
out
rcl
pop
pop
cwtl
and
vpxor
les
icebp
push
add
mov
cmpsl
repz
push
xchg
push
jnp
idivb
negb
xor
mov
jbe
cltd
cmp
cmp
xor
int
int
add
dec
xchg
dec
in
lods
insb
testb
and
hlt
and
scas
movsl
cmp
mov
ret
ja
mov
or
aad
xor
mov
fdivrs
daa
out
adc
fsubrs
aaa
or
dec
mov
cwtl
push
bound
bound
cmp
data16
out
push
mov
push
inc
xor
xchg
pop
mov
addr16
daa
sbb
insl
and
inc
jg
adc
lds
gs
push
jns
mov
xor
adcb
fcoml
dec
mov
pusha
jne
repz
pop
add
mov
imul
movsb
jmp
shl
or
mov
bound
ja
mov
fcmovnu
ljmp
clc
xor
sub
jo
push
fs
and
in
test
in
aaa
out
add
bound
push
jnp
add
repnz
mov
cltd
test
push
cmovbe
xor
pop
mov
lea
add
xchg
add
fwait
xorb
push
mov
mov
ljmp
sub
decl
or
lea
test
xchg
xchg
repz
xor
in
sahf
add
xchg
jo
push
adc
cmp
sbb
out
mov
bound
xchg
stc
cmp
movsb
mov
fisubrs
push
int3
xor
inc
add
mov
xor
or
sbb
rorb
lret
sarb
cwtl
cmp
pusha
cli
cmc
enter
iret
mov
daa
push
out
shrl
inc
js
pushf
and
rolb
into
in
loopne
ljmp
outsb
aam
push
lock
cmpsl
pop
bound
add
mov
sbb
cmp
mov
popa
sti
xor
mov
fstl
fwait
sub
and
imull
ret
sti
push
bound
out
mov
lock
dec
xor
lahf
es
dec
add
and
popf
mov
outsb
hlt
mov
jno
xlat
or
es
xor
loopne
jecxz
and
and
ja
in
sahf
cmp
dec
or
popf
push
leave
and
lea
repz
movsl
cmp
movsb
es
sbb
jl
ljmp
add
cmp
jle
cld
dec
xchg
mov
mov
ror
aad
push
movsl
pop
mov
popf
xchg
cmp
dec
dec
adc
loop
inc
fnstcw
out
aaa
ja
xchg
outsb
mov
adc
test
add
lock
dec
out
xlat
xor
sbb
fst
icebp
pop
dec
stc
adc
pop
lds
xchg
xchg
fcmovnb
int
xchg
push
aam
mov
and
mov
loop
dec
sbbb
int3
mov
mov
cmpsb
dec
adcb
hlt
daa
ljmp
mov
loop
push
xchg
mov
xchg
hlt
call
call
mov
jp
repz
pop
dec
pop
mov
jp
rorb
sti
insb
xor
pop
xor
out
adc
xlat
nop
cltd
jo
loopne
xor
xchg
xchg
sarb
inc
in
push
xor
jnp
cmp
shll
or
and
jg
lret
fwait
adc
clc
mov
jecxz
sbb
and
xchg
mov
out
lods
int3
jmp
push
aas
sub
pop
cmpb
ja
outsb
cmpsl
pop
inc
lahf
cmp
pmulhw
pop
bound
pop
pushl
mov
sbb
mov
lea
jno
loop
mov
adc
push
les
arpl
lods
test
repnz
jns
popa
xchg
mov
mov
mov
mulb
fisubrl
xor
pop
mov
pop
mov
jmp
or
enter
lods
lods
pop
sbbb
sub
and
in
shr
lock
ret
insl
or
mov
pop
aaa
int
addl
test
adc
mov
add
mov
and
dec
push
into
push
mov
insb
xchg
mov
inc
sbb
cmpsl
cmp
dec
cmp
add
pusha
xchg
mov
rcrb
push
push
ret
add
jae
stc
and
cmpsl
jge
int3
jge
mov
cwtl
test
xchg
xchg
stos
lret
add
pop
sbb
inc
and
std
cmc
cmp
jg
out
cmpsl
pusha
int
pop
add
mov
lods
adc
xchg
nop
int3
test
call
and
ret
sbb
sti
lods
mov
and
insb
inc
xor
mov
pop
adc
xchg
leave
mov
cmp
loope
popf
mov
adc
fwait
mov
addr16
cmp
in
out
or
xor
dec
adc
push
movsl
lds
pop
and
xchg
fisubrs
clc
imul
mov
pop
jb
pop
dec
fimull
sub
or
push
sbb
lcall
pop
pop
cld
ss
dec
movups
xchg
cli
popf
mov
out
mov
mov
ds
push
xchg
ds
xchg
xchg
fcompl
sbb
sub
ljmp
dec
mov
push
and
mov
subl
addr16
and
pop
frstor
xchg
bound
testb
insl
fsubp
enter
outsl
add
inc
jno
pop
push
mov
orb
sbb
or
xor
idivb
loopne
pop
and
sbbb
sub
jmp
add
xchg
cmp
pop
mov
or
push
or
lea
mov
mov
push
mov
sub
fs
iret
dec
out
jnp
and
xchg
rcr
dec
lds
test
test
jne
xchg
fwait
xchg
fwait
out
arpl
fsubs
insb
jmp
push
xor
jge
push
inc
adcb
mov
dec
shrl
jg
xchg
lea
sbb
sbb
cmp
push
pushf
in
aam
loopne
xchg
adc
xchg
xchg
sub
cltd
fld
xchg
adc
jge
scas
push
sub
or
ja,pn
lcall
mov
mov
jne
xor
sti
jl
fsubs
dec
insb
mov
cmpsb
mov
or
push
or
jmp
push
ljmp
les
cmp
testl
dec
leave
fcoml
mov
mov
push
je
adc
and
or
insl
lret
push
addr16
imul
pop
jo
and
jno
jmp
cs
bound
mov
jae
stc
into
lcall
addr16
lods
sahf
dec
jg
cmp
jbe
and
les
xchg
ficoml
shl
mov
movsb
inc
pop
cwtl
arpl
xorl
inc
shlb
pop
rorb
xchg
ret
jmp
inc
fs
sti
into
dec
mov
test
rcrb
pop
mov
adc
push
pop
mov
jae
xor
ret
add
mov
add
mov
es
lahf
inc
xchg
xor
xchg
or
push
inc
outsb
incl
sar
movl
and
xchg
outsb
jbe
xchg
icebp
mov
and
inc
in
inc
ds
loope
inc
sub
gs
rcr
push
mov
jb
add
repnz
push
dec
scas
fcomp
add
lahf
loope
xchg
in
lock
enter
iret
mov
lods
inc
aaa
xor
sub
fcompl
addr16
icebp
or
mov
mov
xorl
adc
orl
add
sti
std
and
mov
sub
jmp
es
and
mov
mov
pop
lea
insl
call
das
sti
neg
pop
lds
xchg
inc
fs
loope
rolb
aas
push
adc
out
test
orb
int3
dec
stos
stos
inc
lds
inc
xor
sbb
dec
add
and
fsts
imul
imul
subb
sub
ja
andb
xchg
test
cmp
pop
dec
mov
and
aad
cs
cmp
sahf
mov
fldt
sbb
test
cmp
loopne
mov
inc
out
xchg
incl
icebp
pop
fsubrs
add
dec
add
lods
imul
loopne
inc
loop
xor
mov
lea
xchg
cmp
dec
xlat
mov
cmpl
lock
into
push
xchg
pushf
mov
scas
out
stos
mov
adc
andb
and
xor
hlt
lea
push
push
aaa
mov
lods
in
test
nop
jl
xchg
push
mov
jmp
adc
pop
mov
jbe
rclb
ds
popf
pop
loopne
cmp
inc
mov
jbe
jnp
pop
test
push
add
shl
fdivrs
sbb
xor
data16
xchg
cltd
in
fnstsw
cld
fdivrs
pop
jl
out
mov
stc
pop
fisttpl
imul
lret
mov
mov
mov
ret
es
mov
or
ret
and
aam
jg
adc
add
cmp
pop
aaa
mov
xchg
sub
xchg
push
mov
inc
sbb
into
jnp
daa
and
mov
pop
add
fistpll
mulb
push
sub
sti
dec
inc
xchg
mov
sbb
xor
inc
cld
lods
inc
xor
ffreep
aaa
and
jb
push
clc
hlt
das
xor
lods
xlat
scas
stos
divb
enter
lea
xchg
loope
lret
and
pop
icebp
scas
ja
nop
daa
loope
push
xchg
cmpsb
sbb
pop
mov
fisubrs
mov
ja
adc
dec
fstpt
sbb
pop
adc
out
movb
and
fisubs
test
clc
mov
lea
sbb
ficoms
insl
mov
mov
or
jbe
dec
dec
insl
mov
outsb
cli
mov
outsb
jp
pop
ficoml
nop
jg
inc
aas
inc
mov
call
xor
test
sahf
and
or
hlt
cli
sub
cmp
dec
test
sbb
add
pop
adc
or
in
dec
sbb
xorl
push
mov
pusha
pop
jbe
pop
push
test
inc
sbb
push
stc
cmc
inc
jae
cmp
bound
xchg
aad
cmp
mov
imul
sbb
in
cmp
push
mov
xchg
push
cltd
adc
and
xchg
push
adc
aas
mov
jle
lcall
adc
and
mov
sub
inc
ljmp
outsb
ja
sub
lock
push
leave
xchg
ljmp
cwtl
mov
fnstsw
out
mov
inc
xor
repz
ret
cmp
pushf
scas
or
ss
push
fistl
mov
scas
fisubrs
add
sub
ds
push
pop
mov
mov
fiadds
fnstsw
das
fistps
pop
pop
mov
dec
popf
adc
adc
add
mov
jp
jmp
cmpsb
adc
push
jle
jno
push
in
imul
lcall
and
fsubrl
or
call
rcrb
dec
gs
loope
mov
cmp
push
push
fcompl
cmp
mov
mov
xchg
or
dec
lds
out
mov
sbb
movsl
lods
mov
sbb
mov
adc
or
mov
and
cmp
lahf
sti
loope
sbb
std
into
push
cwtl
or
xor
mov
jbe
cmpl
loopne
and
mov
jecxz
mov
cmc
icebp
test
mov
das
xchg
jecxz
push
stc
mov
xor
mov
outsl
and
imul
xchg
and
pop
cmp
inc
insl
mov
loopne
sbb
jmp
outsl
xor
fwait
xlat
or
push
dec
mov
mov
testb
adc
out
jno
pop
cmp
daa
and
mov
push
add
fistl
xor
jl
inc
xchg
cmp
mov
pop
fcomp
push
xchg
fildll
jg
pop
xchg
into
fcoms
in
mov
adc
mov
sub
adc
pop
popa
das
daa
insl
inc
adc
aam
push
push
mov
int
ficoms
leave
mov
in
pop
adc
mov
out
adc
rcl
xor
in
cmp
pop
enter
mov
dec
xor
stc
dec
xchg
stc
xchg
loopne
xchg
hlt
push
in
movsb
sbb
sbb
dec
xor
mov
or
mov
sbb
lret
mov
je
cmp
cmp
out
xchg
cmp
push
push
or
mov
pop
lods
adc
xchg
jo
fcompl
cmc
lds
push
jecxz
jae
dec
outsb
push
repnz
enter
fs
test
into
sub
add
fcmovnbe
xchg
jl
cltd
pop
out
jle
pop
ret
adc
sbb
cwtl
adc
xor
mov
pop
iret
inc
divps
jle
and
loope
mov
lds
pop
jb
lcall
mov
lret
adc
cmp
in
cmpps
lds
fcoml
jbe
out
mov
subl
or
outsl
adc
enter
popa
fsubrl
pop
testl
aaa
mov
test
inc
xor
xchg
into
lret
jns
mov
nop
ret
push
jno
sub
cmp
movsb
add
idivl
inc
sbb
adc
das
cwtl
push
push
and
xchg
pop
mov
dec
test
jg
or
lret
sbb
roll
dec
inc
cmpb
mov
add
aam
dec
lds
or
pushf
push
enter
outsb
clc
push
cs
sub
inc
sbb
sub
movsb
in
adc
and
bound
push
fdivr
push
xorl
fwait
leave
ds
xchg
or
nop
stos
les
sbb
test
pop
nop
jno
inc
movsl
sahf
lods
mov
scas
repz
aas
fimull
movsl
sub
mov
out
aam
outsl
adc
loopne
lods
push
js
pop
pop
mov
mov
stos
imul
popa
lcall
mov
into
stos
cmp
add
mov
mov
xchg
adc
sub
fistps
lret
cmp
cmp
out
push
pop
mov
lcall
xlat
stos
frstor
jecxz
push
mov
and
lock
mov
mov
mov
shrl
shlb
jnp
rclb
push
mov
add
dec
pop
mov
push
jne
ds
jle
jecxz
leave
ja
jne
sbb
popa
sarb
cmpsl
or
fbld
bnd
pop
adc
mov
ljmp
pop
mov
cld
je
pop
js
shlb
or
and
dec
add
pand
or
lret
out
cli
fiaddl
xor
in
imul
add
xchg
push
mov
fldenv
dec
sub
rcrb
data16
jns
or
fdivrl
add
add
fstpl
imul
xchg
cmc
jecxz
or
imull
jb
cmp
inc
hlt
and
push
out
divb
or
call
xchg
outsl
pop
jmp
mov
jl
mulb
dec
and
sbb
inc
mov
dec
jle
rcrl
dec
pop
fcomi
out
mov
sub
test
xlat
clc
push
push
xlat
cs
xor
notl
jbe
add
and
or
stos
jp
cwtl
sub
iret
mov
pop
mov
loope
ficoms
cwtl
js
jns
or
mov
outsl
mov
mov
inc
dec
imul
rorl
addr16
xchg
cmp
repz
fstp
jno
fisttps
adc
sub
enter
cmp
out
lock
adc
dec
lret
mov
mov
mov
cmpsb
xor
sub
push
cmpb
xor
push
sub
cwtl
or
fcoms
push
push
cmp
push
cmp
push
movsb
jb,pn
loope
inc
or
pop
out
sti
arpl
pop
or
sbb
xchg
jns
imul
cli
adcb
rclb
aam
jbe
stos
outsb
ja
addr16
ljmp
mov
fisubrl
das
sub
lds
xor
arpl
dec
out
pop
xchg
mov
call
xor
xlat
jbe
push
mov
cmp
out
mov
cmp
pop
sti
es
imul
scas
xlat
adc
loopne
xlat
sbb
jmp
nop
or
clc
in
int3
in
in
mov
mov
movsl
sbb
xor
loopne
mov
in
and
daa
js
mov
testb
and
icebp
sbb
js
jb
mov
xor
jae
sbb
into
mov
xor
shl
lcall
jb
xchg
daa
sub
je
test
out
adc
fists
xchg
mov
std
ret
gs
jno
lahf
scas
sub
in
sub
jns
inc
cmpsl
mov
pop
inc
dec
std
pop
popa
je
sub
stos
mov
sub
xchg
jnp
mov
stos
aad
inc
js
sbb
in
movsl
fisubrl
out
push
and
jmp
xor
testl
popf
xchg
mov
test
aad
cmpb
es
or
int
cmpsb
push
lods
andb
push
jecxz
das
out
out
add
and
pop
xchg
imul
popf
jb
xor
sbb
out
push
mov
dec
lds
fwait
sahf
in
testb
idivb
mov
rorl
sub
push
pop
xchg
add
push
daa
inc
js
jp
inc
mov
mov
clc
mov
cld
mov
or
rorb
mov
mov
sbb
mov
or
dec
sbb
inc
dec
sti
xchg
dec
test
sub
stos
andl
dec
imul
dec
sub
push
fmulp
jle
test
cwtl
cmpsb
pause
pop
sbb
xchg
dec
aas
repz
pop
pop
sbb
test
cwtl
mov
sahf
cmc
lcall
dec
or
cltd
icebp
mov
stc
pop
mov
mov
in
outsl
add
sub
dec
cwtl
inc
xor
adc
xchg
add
sub
pushf
push
ffreep
js
sub
inc
jne
cmpsl
sahf
hlt
imul
call
faddl
or
mov
push
aam
dec
hlt
ret
rclb
inc
dec
scas
scas
movsl
pop
loop
pop
sbbb
xor
mov
fdivrl
sbb
xor
and
or
ljmp
pop
push
ja
sub
sub
and
and
inc
imul
in
push
push
mov
or
rclb
xchg
pop
ds
or
test
or
sbb
movsl
out
push
mov
movsl
adc
cmp
stc
mov
inc
out
and
out
sub
mov
jae
jg
jl
push
fisttps
imul
jg
pop
or
aam
frstor
or
jecxz
and
cmc
sbb
jle
sub
mov
dec
inc
aam
sbb
push
sub
lret
int
dec
mov
and
outsb
cmp
jle
inc
push
outsb
and
inc
add
andb
cmp
pop
icebp
ja
cltd
cmp
dec
fiadds
inc
or
xor
mov
jnp
mov
adc
lds
clc
stc
addb
sub
mov
stc
pop
push
push
in
adc
adc
pop
js
or
les
andb
or
sub
sahf
pop
out
in
xchg
xor
push
pop
sahf
pop
mov
test
in
dec
shr
jnp
andb
or
push
fcmovnb
xchg
jl
jns
mov
adc
mov
mov
inc
adc
cmp
mov
leave
or
jnp
push
jno
cmp
jo
jmp
mov
or
jle
cli
imul
hlt
mov
mov
movsb
das
push
adc
insb
cwtl
push
sbb
dec
fcmovu
push
push
push
add
out
movsl
push
cmp
fdivl
pop
sarb
inc
out
add
sub
test
insb
test
mov
sub
fimull
fisttpll
pop
push
outsl
or
sbbb
int
or
fbstp
inc
pop
sbb
add
mov
ds
lods
or
sbb
jg
mov
ds
xor
popa
mov
test
nop
fsubr
mov
mov
stos
ret
ret
in
aam
jge
xor
inc
push
pop
add
xchg
or
int3
inc
pop
xchg
mov
cli
add
fldenv
mov
pop
add
add
cmc
lock
imull
pop
in
shrb
imul
divl
enter
xchg
add
xchg
insb
das
fwait
add
lods
xchg
and
inc
mov
adc
mov
in
out
gs
shl
dec
cltd
ret
adc
outsl
and
fsubl
ds
sub
mov
cld
movsb
mov
movb
fnstenv
push
mov
xchg
jp
lret
shlb
jns
test
xchg
lds
das
xchg
scas
ret
and
js
leave
cltd
adc
sti
jecxz
lods
bound
lret
aad
movl
das
das
jl
mov
jmp
cmpsb
mov
mov
sub
xor
cli
dec
bound
stos
or
xchg
adc
mov
in
mov
es
pop
in
or
stc
push
add
jns
in
adc
xchg
fistpl
push
pop
stos
jecxz
sbb
mov
inc
jecxz
out
push
push
loopne
and
push
xor
sbb
sbb
mov
outsb
jnp
repnz
mov
add
scas
cmp
lea
repnz
out
dec
aam
stos
addl
les
push
sbb
cmpl
mov
sub
inc
add
inc
push
rcrl
mov
imul
ds
xchg
scas
sub
inc
nop
push
sub
mov
mov
andl
push
js
mov
sbb
or
mov
fstps
pop
cmc
jae
mov
das
push
mov
sbb
push
addr16
xor
out
pop
mov
popf
loop
jbe
shufps
push
mov
repnz
inc
xor
out
and
dec
fwait
stos
cltd
jge
rorb
movsl
sbb
xor
adc
cmpl
lods
mov
jmp
test
roll
mov
xchg
jmp
xlat
mov
xor
jge
and
sub
xor
jl
mov
fldt
int3
xchg
mov
cmc
aam
rcr
loope
minps
cs
jno
xchg
add
hlt
out
xor
dec
stc
push
mov
aam
sub
aam
sahf
dec
int3
pop
scas
sub
daa
insb
ds
stos
xchg
jbe
or
inc
adc
or
dec
inc
dec
push
imul
xchg
ret
ret
push
xor
xor
jecxz
loope
cmc
mov
sti
fistpll
push
sub
sahf
pushfw
mov
in
loop
pand
adc
adc
pop
sbb
scas
sub
out
mov
dec
xchg
or
cmpb
xor
mov
mov
or
ss
or
js
push
mov
mov
inc
cwtl
leave
sub
pusha
inc
dec
mov
pop
rcrl
xor
cld
inc
in
dec
jns
fistl
jp
sbb
movsl
test
hlt
fwait
sbb
cmp
pop
push
pop
pop
test
out
out
mov
cmpl
call
or
in
hlt
xchg
orl
movsb
push
cmp
div
xor
aaa
inc
mov
xor
popf
and
mov
int3
lcall
repz
cmp
xor
xchg
xor
sbb
mov
xchg
jge
sbb
lods
cmp
out
mov
jno
xchg
add
push
sbb
sub
lods
add
add
dec
in
xor
mov
das
pop
imul
sub
adc
loopne
test
inc
cli
or
nop
ja
add
nop
sub
in
jmp
pop
mov
cmpsb
mov
fidivrs
inc
js
test
les
lret
add
mov
sbb
mov
cltd
mov
es
mov
mov
into
es
repz
push
testb
jbe
push
lea
aaa
icebp
inc
xchg
mov
push
add
adcb
mov
xor
ljmp
in
xor
or
xchg
pushf
jl,pn
mov
test
adc
push
adc
mov
push
push
sbb
or
lds
int3
mov
push
lcall
insl
hlt
gs
fisttpl
add
and
lock
fcomp
inc
or
inc
test
inc
adc
scas
sti
jl,pn
data16
cmp
pushf
and
sarl
scas
pop
dec
pushf
pop
lret
fstp
les
push
mov
sbbl
jle
in
push
pop
push
jnp
push
js
jbe
adc
scas
sub
in
insl
outsl
ja
cwtl
mull
inc
hlt
mov
leave
lahf
lea
xchg
sub
popa
xor
fwait
sub
inc
cs
test
lret
xor
sbb
sub
aam
xchg
mov
pop
dec
jne
lcall
lods
jnp
out
loop
jmp
fnstsw
std
inc
adc
xchg
sbb
in
sub
cmp
cli
pop
inc
jle
movsb
je
push
mov
aam
xchg
shlb
and
push
add
sti
or
xchg
pop
rolb
pop
lea
dec
movsl
jg
cwtl
cs
shrl
notb
add
jp
lret
in
mov
shlb
cmp
and
pop
mov
jbe
cmp
jno
lret
and
aaa
stos
mov
daa
push
cltd
cmpsb
adc
das
push
ljmp
imul
push
pop
push
push
bound
cmp
das
adc
cmpsb
jb
clc
mov
jnp
sbb
jo
xlat
jne
and
push
mov
rcll
mov
orb
enter
mov
sub
add
inc
andb
pop
data16
mov
in
xor
out
in
cld
das
cltd
jno
sarb
push
mov
xlat
and
rorl
sub
mov
cmpsb
jle
pop
add
mov
shll
loop
mov
test
cmpsl
jbe
pop
push
jp
sub
movsl
stos
addl
xor
into
bound
or
xcrypt-cbc
cmpsl
xchg
push
cmp
sbb
cltd
pop
popa
fidivs
sub
out
jl,pt
adc
or
inc
and
repz
push
stc
lods
mov
clc
and
icebp
mov
mov
cmpsl
mov
mov
jnp
xor
push
sub
cltd
dec
adcb
stos
leave
stos
call
mov
xlat
icebp
push
in
sti
out
mov
loopne
and
xor
popf
cmp
outsl
imul
imul
adc
out
out
scas
sub
aad
leave
je
jmp
xor
sub
lcallw
fisttpll
imul
test
pop
or
into
pusha
testl
imul
mov
insb
mov
push
cmpsb
cmp
push
pop
leave
dec
scas
shll
ds
stos
cmp
fisttps
jne
jno
dec
leave
jp
shl
jecxz
pop
clc
pop
mov
popf
imul
insl
cmp
cmpsb
sbb
sbb
addr16
test
push
nop
jmp
rorl
mov
mov
bound
mov
dec
sub
pop
mov
gs
cs
ficompl
push
adc
cmp
or
xchg
fcomps
nop
out
ja
or
leave
inc
jnp
les
ljmp
jmp
mov
mov
pusha
imul
es
in
jg
jne
sbb
add
aam
into
mov
movsb
je
stc
imul
data16
ljmp
sarb
cmpsb
xchg
stos
mov
inc
jns
lahf
xor
andb
fnstcw
inc
fcompl
sbb
or
mov
dec
and
nop
pop
sbb
xorb
add
iret
das
mov
dec
add
inc
xor
daa
jmp
sub
rclb
pop
ja
jns
dec
sbb
mov
outsb
insl
lods
daa
outsl
outsl
inc
mov
aaa
out
jnp
jo
sbb
inc
outsl
pop
rol
ljmp
inc
je
mov
push
xchg
mov
mov
pop
mov
dec
sub
jp
cmc
mov
jae
test
and
cmp
cltd
sbb
popf
dec
sbb
stos
push
int3
lock
mov
xor
adc
push
leave
cmpsb
test
jns
pop
insb
ljmp
fisttpl
imul
lds
add
lahf
stc
rcrb
mov
call
xchg
arpl
jo
mov
jne
inc
ljmp
loope
std
mov
adc
test
lidtl
pop
out
sub
and
pop
mov
data16
mov
fistpl
fimuls
cli
adc
ljmp
adc
inc
lahf
dec
into
das
ja
jp
and
mov
fildl
sub
popf
ss
fistpll
xchg
sbb
in
pop
mov
xor
imulb
inc
lods
iret
scas
pop
es
cmp
lss
in
xchg
sbb
stc
lcall
jbe
push
sbb
jge
imul
push
imul
pop
jg
test
fcomi
mov
add
movsl
inc
inc
jno
sub
rcr
xor
jl
xor
xchg
mov
cmpsb
mov
or
inc
inc
sbb
mov
div
aam
sub
push
cld
sbb
pop
call
and
test
popf
rorb
movsl
jno
mov
insb
loop
mov
mov
adc
cmp
cmp
ja
mov
add
iret
xor
mov
int3
jnp
mov
iret
sub
addr16
push
jle
movsl
push
lds
jne
test
or
mov
push
fwait
aas
push
push
mov
cmp
movsb
fs
out
push
push
mov
shl
dec
aam
xchg
jmp
jbe
std
push
int
jns
adc
lcall
loop
out
movsb
jae
mov
cmp
popa
mov
mov
int
das
push
fs
xchg
jo
xchg
mov
cs
cwtl
mov
dec
into
test
stos
sbb
push
push
and
inc
mov
cltd
mov
sbb
bound
popa
sti
into
adc
fmulp
push
sub
in
and
dec
out
psllw
stc
or
mov
aas
test
lods
enter
mov
pop
es
mov
cmpsl
jb
jmp
rorl
jge
jb
jae
dec
faddl
xor
jp
mov
ljmp
leave
enter
jo
add
loopne
jl
sbb
movsl
clc
and
xorl
mov
dec
movsl
les
mov
insl
pusha
xchg
pop
test
shl
rorb
push
pop
aas
inc
dec
into
cmpb
and
jno
inc
inc
rcll
lahf
push
into
sbb
imul
sub
add
and
xchg
clc
dec
sub
push
pop
pop
out
mov
mov
cmp
cld
les
inc
out
jmp
push
sbb
push
mov
push
out
in
sub
repz
xlat
xchg
iret
test
std
sub
push
pop
test
out
out
add
rcll
cmpsb
mov
cld
and
sub
add
movsl
jecxz
out
fists
push
pop
mov
sbb
popa
scas
push
lret
shrl
icebp
lret
test
add
xchg
xchg
mov
lds
lret
xchg
cwtl
ret
adc
xor
and
mov
bound
addr16
lret
jmp
cmp
pop
push
iret
xchg
or
lret
sbb
andb
mov
popa
in
mov
in
insl
mov
jbe
in
mov
cli
jno
pop
adc
stos
cmp
in
adc
ljmp
mov
inc
sbb
mov
mov
dec
add
add
negb
outsl
jo
xchg
sub
push
aam
stos
fisttps
loop
jbe
lods
adc
xor
aad
test
daa
clc
sub
sbb
aam
adc
fs
jbe
int
or
subl
repz
mov
scas
mov
nop
mov
in
cltd
push
out
out
mov
push
jno
cmpsl
fldenv
or
sbb
pop
cmpsb
out
rolb
lea
pop
imul
inc
shlb
fwait
dec
movsb
cmp
rcrb
sbb
cmpsb
jge
nop
dec
jge
and
jle
xor
in
das
pop
adc
test
ret
outsl
in
lcall
mov
dec
cmp
in
and
xchg
pop
push
mov
mov
data16
push
sub
push
jg
loope
movsb
popa
movsl
add
inc
push
test
xor
pop
xchg
and
dec
sbb
shlb
pop
push
ret
add
push
xchg
fcomp
push
addr16
andb
pusha
sti
aas
push
add
lock
inc
jmp
pop
push
mov
std
xchg
sahf
xchg
xor
sub
cmpsb
xlat
fs
fmull
push
imul
mov
out
cmp
mov
or
ret
inc
sbb
xorl
adc
ret
mov
add
fisubl
out
add
pushf
cmp
shl
insl
adc
stos
inc
scas
mov
mov
call
sub
add
jle
jns
addr16
je
jle
je
test
out
test
xchg
mov
pop
jg
cmpsb
sahf
dec
loope
fsubl
fsubp
add
inc
pusha
jle
lcall
out
rcrb
sbb
or
ds
push
cmp
loop
imul
in
push
mov
jnp
ret
ja
lds
xchg
rol
scas
dec
ja
mov
lahf
cmc
mov
jo
cmp
out
cmp
and
jne
in
jbe
movsb
sub
dec
stos
and
aas
lods
aas
mov
pop
add
or
mov
add
mov
shrl
or
in
xor
pusha
mov
jl
notb
cmp
push
std
inc
or
jno
lods
ja
sub
jl
ficompl
in
test
repz
sbb
popf
fisubs
mov
push
xchg
cmc
jnp
dec
pop
adc
dec
and
scas
adc
xor
clc
lret
cmpsl
loop
inc
popf
repz
cli
mov
inc
cmc
lods
pop
ljmp
divb
imul
lea
outsl
in
mov
mov
pop
loop
rcl
roll
ja
mov
movsb
shlb
icebp
dec
scas
inc
lods
push
fcmovnu
mov
add
sub
in
test
xchg
aam
push
pushf
add
adc
sub
sahf
mov
js
sub
jns
jge
lods
nop
fdivrl
enter
das
stos
pop
insl
aad
inc
xchg
inc
jle
adc
test
dec
je
cmp
cli
js
fcmovnb
jl
add
aas
int3
outsl
scas
mov
push
call
in
push
jbe
or
popf
mov
out
mov
icebp
adc
mov
pushf
adc
add
ja
push
adc
xor
dec
cwtl
je
xchg
stos
ja
push
inc
idivl
stc
xchg
and
mov
or
and
mov
xor
div
cld
dec
ret
jb
jae
cmc
cmp
mov
jo
xchg
xor
sub
repnz
mov
gs
inc
lcall
cmp
lods
cmpsb
roll
lea
dec
inc
and
jae
mov
daa
xchg
gs
lods
or
sbb
jae
cmc
inc
and
mov
pop
int
adc
cwtl
cmpsl
dec
mov
hlt
movsl
xchg
js
test
sub
jnp
into
mov
lock
jne
jmp
or
adc
mov
in
lcall
jae
arpl
lret
nop
subb
push
lods
mov
flds
and
xchg
inc
call
dec
push
test
in
bound
xlat
repz
add
test
insb
leave
sub
cmp
xchg
lods
pop
lcall
fwait
testb
out
mov
cs
repnz
jne
jmp
mov
jl,pn
scas
adc
push
xor
fmuls
cmc
mov
sub
mov
lahf
pop
gs
or
dec
dec
out
cmp
dec
jl
ficompl
push
mov
addl
insb
cmc
add
or
pop
push
fmull
cmp
adc
pushf
jg
test
mov
ds
movsb
mov
in
std
mov
inc
xor
cmp
mov
adc
pop
stos
sbb
push
cmpsb
pop
in
xchg
ljmp
adc
iret
stc
lds
xchg
out
sub
fistps
insl
out
or
out
nop
add
dec
mov
jb
or
lret
sbb
inc
fld
gs
out
adc
sbb
sub
and
xor
fs
cmp
or
out
sub
xor
clc
bound
adc
inc
in
loopne
mov
arpl
push
shlb
or
in
sub
dec
rorl
xor
nop
sub
fnstsw
ret
daa
adc
fildl
call
iret
sbb
pop
loop
ja
pop
ret
mov
cmpsl
dec
xchg
jecxz
cmp
mov
test
push
imul
not
cmp
rolb
dec
test
ret
movsl
fcmovnu
mov
mov
mov
lret
std
xlat
cmp
xor
fwait
ljmp
int3
subb
pop
dec
insl
adc
add
xchg
out
push
cmpsl
inc
nop
fistl
mov
clc
ja
cmp
mov
pop
xchg
jecxz
stos
mov
aas
fcoms
push
pop
jae
ljmp
pusha
pop
push
dec
xor
mov
ds
mov
sahf
popa
xor
xchg
cmovbe
mov
out
inc
sbb
push
push
imul
cmp
ror
adc
scas
fsts
or
repz
jmp
dec
inc
rcrl
jbe
inc
mov
mov
cs
pop
pop
and
and
or
imul
inc
xchg
xor
hlt
xor
scas
xchg
into
movsb
xor
in
dec
inc
pop
repnz
in
test
and
or
xchg
andb
imul
fsubs
cld
push
lret
loope
js
out
fsubr
add
loope
clc
inc
xchg
jp
insl
bound
inc
jnp
adc
repz
dec
mov
inc
push
cmpsl
mov
dec
js
pop
data16
ror
pop
lds
gs
rcll
sbb
leave
jae
outsl
js
sub
loopne
jmp
mov
daa
xor
lock
jecxz
push
in
aad
pop
or
out
into
pop
push
movsb
sub
loop
cmp
pop
pop
sbb
xchg
mov
fwait
sbb
jecxz
adc
cmpsl
dec
popa
imul
stc
xchg
jmp
dec
xor
fs
repnz
cli
pop
pop
jmp
scas
xor
sbb
add
or
ss
cs
mov
xchg
and
jl
or
test
mov
lcall
cmpsb
push
mov
dec
adc
dec
mov
jmp
mov
mov
loopne
js
and
dec
out
js
movsb
cmpb
xor
inc
int3
adcl
mov
gs
or
cmp
push
test
mov
lea
xchg
dec
je
add
dec
dec
ret
push
sbb
mov
bound
cmp
clc
aaa
mov
mov
pushf
push
xchg
mov
hlt
xor
xchg
mov
mov
and
int
addr16
aad
sbb
add
testb
stos
pushf
add
leave
sbb
std
int
jge
push
jle
sbb
cmp
mov
cmp
decb
xor
lahf
icebp
shrl
ret
or
mov
jo
xor
and
mov
rclb
xchg
jmp
sub
cmp
push
sub
mov
into
insb
fcmovu
mov
cwtl
xor
js
or
leave
loope
push
cwtl
adc
sub
test
push
sti
pop
std
lretw
scas
xchg
mov
and
pushf
frstor
fidivrl
pop
pusha
mov
sbb
or
out
sbb
mov
inc
mulb
lods
mov
pop
sub
shll
imul
fsubl
js
out
push
sbb
and
add
pop
arpl
push
pop
mov
sti
loop
cmp
dec
sti
popf
sub
jnp
xchg
inc
out
aam
xlat
mov
into
cmp
add
jge
xor
or
sub
psrld
add
ficomps
out
push
cs
push
sub
adc
std
or
mov
mov
jmp
mov
xchg
mov
orb
pop
xchg
adcb
add
cmpb
sbb
pop
inc
sbb
cmpsl
adc
fisttpll
sub
cvtps2pd
jae
lds
dec
mov
jne
cmp
popf
mov
das
repnz
mov
movsb
loopne
mov
or
mov
insl
xchg
int
icebp
add
test
das
jmp
repnz
lods
les
xor
push
test
xorl
mov
xchg
sub
mov
fisttpl
add
dec
jae
sbb
cs
jle
xchg
enter
mov
lods
fimuls
jge
pop
data16
add
cs
dec
fidivs
aas
sbb
lods
add
in
imull
cltd
cli
xchg
and
xor
ljmp
dec
lahf
bnd
and
adc
pop
xor
call
cmpsl
sub
xor
mov
aam
ja,pn
shll
push
push
aaa
add
inc
mov
sub
add
mov
xchg
call
add
dec
loop
xorb
mov
or
aaa
rcr
pop
push
lods
add
mov
mov
popa
setb
inc
inc
mov
fsubr
cs
xchg
sahf
lock
sarb
push
jle
and
jecxz
out
hlt
xchg
cltd
cli
jge
shl
and
lock
aaa
mov
xchg
test
fsubr
rorl
xor
sbb
and
push
xchg
lea
dec
cmp
dec
cltd
xchg
dec
cmp
xchg
jns
negb
xlat
aad
stos
or
call
push
popa
xchg
push
sbb
push
rclb
je
repz
pop
lock
sbb
mov
iret
fisubrl
ja
mov
loop
insl
cmp
ljmp
call
lret
pop
dec
mov
cmp
out
popf
fidivrl
xor
cmpsb
xor
adcl
push
mov
jne
or
sbb
jno
jne
xor
mov
lret
cmp
ljmp
les
mov
xor
aaa
icebp
inc
adc
push
adc
jecxz
int3
aas
popa
sahf
add
lds
mov
pop
pop
scas
orb
push
fldcw
push
sarl
sar
imul
lods
add
jb
sub
jg
jg
loop
sbb
shlb
cld
sbb
ljmp
je
cmp
cwtl
lods
loop
jp
xor
imul
aad
sub
movb
je
add
cmpsl
pop
jp
roll
stos
shlb
or
test
mov
push
lods
lods
inc
pop
mov
sbb
mov
inc
inc
into
in
dec
mov
rclb
fcompl
pop
cs
sbb
js
lods
push
rcl
dec
test
pop
cmp
adc
insl
ds
in
xlat
pop
adc
data16
stos
adc
jae
mov
mov
push
pop
sahf
push
xchg
cs
int
inc
and
lea
mov
mov
stos
test
lahf
jbe
push
sub
pop
stos
inc
daa
sbb
adc
movsl
js
imul
mov
jnp
outsl
sbb
dec
mov
dec
cwtl
cmp
loope
movsb
push
lahf
mov
repnz
jns
cmp
sub
popf
sub
in
jmp
mov
in
call
out
mov
je
pop
insb
adc
sbb
bound
inc
xor
rcrl
mov
outsb
in
xchg
xchg
data16
rorl
push
cwtl
and
push
test
sub
mov
mov
cwtl
sbb
aam
pop
ljmp
pop
push
mov
lock
cmp
push
sub
dec
xchg
mov
dec
test
dec
push
aam
adcl
test
sbb
test
test
movlhps
sbbl
std
in
lds
dec
xchg
mov
jecxz
repnz
les
outsb
cli
mov
subl
les
jp
insb
mov
push
jl
cmpsb
nop
jl
lret
popa
jl
xorb
lock
insl
or
mov
daa
adc
lods
pop
pop
inc
or
call
clc
scas
add
into
addr16
stc
ffreep
cmp
sbb
pop
inc
jae
mov
mov
fs
or
or
mov
jp
sbb
in
push
cmp
das
xchg
lret
es
sbb
mov
push
cltd
mov
dec
lods
loopne
mov
lods
inc
xor
fdiv
sub
fsub
sub
sub
push
mov
fimuls
cmp
sub
inc
clc
xchg
fstp
inc
xlat
call
push
aas
cwtl
out
mov
daa
sub
push
clc
int3
cmp
cmpsb
ret
xor
sahf
int
rcll
or
orl
fs
repz
loope
cli
push
and
cmp
mov
ja
aam
adc
sub
jo
jp
stos
jb
ss
cmp
push
loope
negl
pop
push
roll
and
out
test
pop
insb
stos
lods
xor
mov
push
and
rcrb
sub
aad
dec
jno
xor
pusha
or
xchg
push
movd
es
jle
loopne
inc
xchg
test
jmp
mov
dec
mov
push
int
mov
aaa
or
roll
jae
in
test
loopne
add
inc
or
fcompl
xchg
adc
js
je
mov
cmp
xorb
cmp
je
lea
rcrl
mov
adc
test
mov
push
mov
jmp
mov
push
xchg
das
shrl
pop
test
and
icebp
jb
orl
push
mov
mov
dec
mov
mov
in
pop
in
mov
popa
dec
mov
cmp
jle
std
and
dec
fcomps
jge
xor
into
push
sbb
mov
rcrb
inc
lcall
icebp
mov
movsl
incb
dec
jmp
pop
inc
out
inc
jns
jge
xchg
testl
mov
inc
nop
jo
out
stc
pop
bound
mov
push
pop
mov
adc
adc
pop
push
cmpb
cmp
pop
fistpll
ret
mov
sub
shll
rolb
mov
lahf
adc
insl
dec
scas
outsb
mov
lcall
jmp
divl
cmp
out
push
and
jecxz
das
xchg
or
ja
sub
aad
jno
jbe
push
xchg
push
aas
rcrl
repz
lret
jle
or
leave
imul
add
scas
adc
out
scas
stos
lods
sub
gs
mov
fs
inc
lds
add
jl
js
shl
push
adc
ret
and
pop
addl
sub
mov
mov
mov
inc
mov
add
jp
test
ret
shlb
pop
rolb
repz
iret
cmc
scas
jle
lds
pop
push
pop
lock
daa
fs
cmp
in
xor
adc
or
add
cmc
aam
and
test
xchg
mov
movsb
xchg
in
repnz
push
lods
mov
in
sbb
cld
adc
mov
lahf
push
xor
shrl
add
icebp
cmp
mov
mov
repz
leave
cmp
cmp
aad
movsl
aas
xchg
and
lods
rol
shr
xor
xor
test
xor
popa
leave
clc
lcall
fimuls
xchg
dec
push
fildl
add
mov
inc
inc
pushf
sbb
movsl
and
xor
leave
fimuls
enter
jle
add
ret
add
push
mov
div
jl
gs
subl
jl
hlt
and
push
lods
loop
pop
jmp
sbb
inc
or
clc
je
jl
cmc
test
aas
mov
in
sbb
xor
mov
mov
jae
sub
in
mov
sbb
aas
xor
outsb
loope
mov
ds
lea
mov
movsb
pop
inc
push
and
xor
or
inc
inc
aad
mov
mov
cmpsb
mov
pop
fisttpll
add
into
pop
or
icebp
mov
or
jmp
add
mov
lret
cwtl
push
iret
and
sbb
shlb
xor
test
mov
dec
enter
sbb
subl
push
push
int3
adc
mov
scas
rorb
dec
lahf
push
scas
imull
sbb
sub
dec
mov
or
pop
pop
pop
out
call
sbb
ret
sarb
loope
js
test
xlat
jp
outsb
adc
incb
and
mov
jne
popf
hlt
insb
stos
out
cwtl
adc
out
ja
inc
jbe
out
mov
rol
jae
imul
jl
mov
ficoml
mov
mov
and
cmp
in
push
push
clc
cmp
imul
mov
fwait
int
mov
outsl
xor
adc
xchg
ficoms
in
hlt
push
pushf
test
or
sti
data16
sbb
jge
scas
push
dec
dec
ror
push
inc
sbb
mov
xchg
icebp
xor
lcall
movsb
imulb
enter
fsubp
xchg
pop
xor
or
push
push
push
std
stos
ljmp
and
scas
outsl
stos
push
idivb
aad
adc
divl
sbb
rdtsc
xchg
imul
icebp
inc
cmp
test
mov
cld
mov
push
cwtl
sub
mov
jb
loope
mov
data16
pop
jbe
int
lds
jle
and
in
xchg
sbb
push
mov
lea
mov
lret
divl
xchg
icebp
cli
movsl
cmp
cmpsb
stc
mov
aas
push
fimuls
dec
sahf
sbb
mov
and
lds
sahf
sarb
scas
hlt
popf
dec
pop
and
sub
mov
std
jecxz
push
popa
dec
ss
mov
pop
cmpl
add
test
movsb
pop
or
push
mov
lds
test
cltd
inc
mov
mov
mov
insl
mov
loop
pop
sub
movsb
xchg
imul
pushf
cltd
xchg
xor
mov
jg
mov
push
inc
sub
cmp
fdivr
mov
fwait
pushf
inc
nop
adc
int
psubq
jmp
pop
sar
mov
notb
roll
aas
sub
mov
daa
push
pop
fwait
ja
adc
outsl
movsb
in
sbb
adc
push
dec
repnz
inc
popf
xchg
jge
jne
jns
loope
subl
mov
or
lcall
jecxz
pop
mov
inc
bnd
pop
in
test
adc
or
andl
nop
mov
pusha
fistpl
push
pushf
and
pop
dec
push
sbb
pop
add
mov
jo
js
bound
aad
pop
jmp
adc
sub
push
cwtl
mov
adcb
pop
dec
cs
xchg
jmp
les
ja
xchg
in
xchg
repz
or
push
sti
mov
and
dec
outsb
mov
jg
push
ja
fildl
je
out
dec
std
sub
rcll
cs
lods
dec
jmp
jb
add
push
fnstsw
andl
iret
daa
xor
xor
pop
xor
int3
shr
mov
rcl
out
add
ljmp
xchg
and
fsubs
push
out
xor
add
or
sbb
pop
aaa
push
xor
cs
js
xchg
dec
adc
pop
cmc
rcrl
cld
jp
stos
xchg
cmp
aam
ds
fstl
mov
popa
sbb
into
mov
stc
lret
nop
pusha
test
rcll
inc
std
test
push
loop
mov
cmp
icebp
mov
xlat
push
out
insb
cltd
das
jmp
xor
andb
pop
or
sub
mov
cld
inc
xor
shl
inc
jbe
pushf
imul
or
movl
ja
aam
les
xchg
xor
aaa
pop
aad
sub
pop
push
stos
das
test
jae
fwait
std
popw
xor
add
arpl
or
and
sar
sub
rclb
lds
popl
lods
sub
add
xchg
fistpl
inc
out
jl
ja
testl
stos
or
testl
or
dec
cwtl
in
pop
aam
mov
dec
cmpsb
test
fisubrl
ja
mov
fistps
cld
xchg
jns
inc
cmp
push
jmp
mov
aad
cli
repnz
xor
jo
dec
mov
push
sarb
cmp
xchg
adc
out
pop
cmpsb
mov
int3
cmpsb
pop
movsb
xor
rorl
xchg
cmp
imul
fcmove
and
stos
mov
push
jns
inc
mov
mov
cs
xlat
xchg
ljmp
mov
mov
subb
loope
sub
xchg
push
and
adc
out
adc
les
ret
cs
inc
jae
dec
std
leave
pop
jmp
xorl
outsb
sbb
ljmp
push
arpl
and
and
fwait
xchg
pop
movsb
mov
mov
fwait
subl
add
lods
xor
jo
and
lret
jne
dec
pop
js
sbb
mov
xchg
test
jecxz
xchg
push
popa
jecxz
or
mov
loopne
addr16
and
push
xor
pop
mov
dec
adc
pop
scas
and
adc
pop
jle
mov
test
pushf
jo
sahf
xor
inc
ljmp
inc
pop
vprotq
inc
and
faddl
push
cmp
cmp
lods
pop
adc
sbb
mov
mov
cmp
testb
lret
cmp
loopne
sub
adc
lds
aad
mov
out
aas
push
stc
jle
std
ljmp
push
ficompl
lahf
pop
adc
sub
insb
int
push
aam
adc
sbb
or
into
jnp
std
fadd
aad
mov
inc
ljmp
lea
push
addr16
add
lret
sahf
adc
pop
stos
xchg
mov
xor
lahf
inc
call
adc
je
cmpsl
xor
cmp
sbb
cmp
mov
jg
lret
inc
adc
test
push
jns
pop
stc
jl
mov
test
push
jge
adc
icebp
xor
cld
loop
fadds
cmpsl
inc
add
sbb
lcall
das
push
stos
jb
mov
sbb
insl
add
int
push
ror
xchg
add
arpl
in
test
dec
pop
cs
cmp
push
push
lds
les
fwait
in
icebp
mov
pop
jns
or
cmpsl
cltd
rorl
xchg
cwtl
xor
cld
out
mov
pop
sahf
jb
jnp
mov
mov
je
jl
stc
icebp
xor
imul
xchg
mov
mov
clc
arpl
pop
jp
dec
add
repnz
fcmovb
pusha
xchg
fistps
inc
and
test
shll
iret
pop
xchg
insl
sbb
adc
push
fnstsw
mov
shrb
repnz
mov
push
insl
out
movsl
or
jbe
imull
aaa
bound
incb
adc
push
mov
jmp
dec
test
jl
repz
jl
jecxz
adc
outsb
push
sub
dec
sti
out
imul
cli
adc
cltd
aad
sbb
lea
mov
inc
es
das
incl
jl
lock
ffreep
stos
cmp
mov
mov
or
dec
xor
pushf
ret
push
and
std
jb
xor
test
jle
mov
ret
scas
insl
adc
test
push
mov
cmc
int
stos
push
mov
jno
push
loope
and
sub
movsb
inc
out
inc
and
fdivl
ljmp
pop
inc
cmp
push
jmp
fimuls
jns
stos
sbb
roll
xlat
push
lds
xor
arpl
inc
mov
push
xchg
bound
lds
enter
jns
fsubl
test
pusha
pop
cmp
repz
popa
sub
xchg
imul
inc
lret
out
fidivrs
shll
andb
jns
sub
in
add
lds
mov
dec
adc
cmp
data16
shl
stos
fs
jno
jp
push
xor
cltd
ja
test
push
xor
mov
push
inc
mov
or
push
icebp
out
mov
rcrb
stos
lock
mov
jnp
add
xor
lds
mov
mov
add
sub
mov
scas
mov
pushf
xlat
cmpsb
jmp
les
pop
xchg
shll
ret
mov
pop
add
jbe
adc
push
cmp
jl
call
in
xchg
in
ds
sub
loopne
shll
mov
push
bound
fsubl
subb
xchg
jo
mov
dec
and
mov
xlat
addr16
push
out
fidivs
gs
adc
cmpsl
or
xlat
dec
push
mov
ret
push
outsb
or
jae
sub
mov
pop
insb
ljmp
pop
sahf
pop
adc
xor
les
inc
sti
ret
lret
lret
test
cwtl
popf
je
xchg
mov
test
jae
lcall
xor
xlat
jo
pop
sbb
mov
call
int
mov
dec
pop
adc
in
and
popf
cmp
dec
mov
or
gs
rcr
fldenv
xlat
pusha
mov
in
adc
aas
and
push
mov
fnstenv
push
aas
ljmp
outsb
xor
lods
sbb
cmc
lock
inc
outsl
andl
add
icebp
cmp
jnp
sub
mov
inc
in
lods
inc
popf
loop
rol
cmp
out
cmp
or
das
xlat
or
dec
scas
aam
scas
cmpsb
lds
mov
xchg
sbb
shr
jbe
dec
std
fiaddl
adc
icebp
push
mov
aas
hlt
and
loopne
in
mov
push
ret
cmp
mov
stc
ret
adc
jnp
mov
repnz
sti
je
or
int
cmp
jmp
insb
jns
and
dec
pushl
icebp
cmp
inc
or
sub
jecxz
outsb
push
ljmp
mov
in
lods
data16
push
outsb
lea
push
mov
dec
dec
add
faddl
cmp
mov
leave
bound
xchg
push
mov
fwait
mov
push
shll
jle
popf
pop
push
xchg
add
das
das
push
outsb
mov
sub
or
xor
out
xor
or
pop
sahf
stos
frstor
andl
add
inc
push
imul
sbb
adc
mov
fldl
xlat
lcall
stc
pop
mov
mov
add
mov
mov
push
mov
mov
rolb
dec
insb
cmc
dec
or
sub
pusha
mov
shrb
lret
mov
adc
sub
and
fsts
cld
mov
dec
jbe
fdivrl
pop
test
lret
rcrb
jno
xchg
jns
xchg
mov
add
ror
jl
push
sub
xor
cmp
jle
lea
in
ljmp
push
xchg
sub
arpl
insb
xor
repz
or
pushf
sbb
pushf
flds
push
inc
mov
bound
xor
add
jae
rcll
sub
jg
push
pop
test
leave
cmpsl
out
test
push
push
out
or
cmpsl
mov
cwtl
insb
fucomip
mov
sub
mov
mov
dec
mov
jb
out
cwtl
xchg
mov
push
xorb
jp
ss
mov
jo
adc
sbb
int3
movsb
inc
cmp
xchg
dec
je
xchg
cmpsl
xchg
lret
cli
je
inc
lods
inc
mov
dec
out
adc
inc
in
aaa
pop
das
push
cmp
ljmp
inc
dec
imul
inc
bound
call
xchg
filds
xchg
cltd
mov
clc
push
nop
adc
dec
inc
and
fdivp
inc
clc
bound
mov
movsl
addb
push
dec
dec
aas
jno
sbb
mov
roll
mov
sub
rcl
in
fnstsw
push
mov
imul
push
add
mov
jno
cmp
xor
add
fisttpl
add
jecxz
stos
pop
dec
adc
data16
xchg
out
jnp
movsb
dec
data16
or
test
inc
sahf
popf
stos
sub
ficoms
xor
or
negl
cli
mov
test
iret
loopne
jae
sbb
inc
or
jp
clc
ret
mov
pop
pop
iret
or
inc
add
lods
cmpsl
push
test
mov
iret
pop
cs
arpl
ds
fwait
out
sbb
repz
xchg
mov
push
lret
jbe
inc
and
inc
pushf
pop
mov
xor
cwtl
dec
daa
xchg
sbb
sbb
divb
jne
ja
andl
jg
in
cwtd
shlb
shlb
xchg
mov
add
mov
dec
dec
xchg
xor
movsl
dec
jnp
in
fidivl
inc
movsl
scas
jo
push
stos
mov
pop
xchg
jae
cld
mov
pop
cmp
inc
int
dec
cmp
movsb
pop
xlat
lds
xchg
test
popf
adc
adc
lret
testl
jle
fsubr
rorb
pushf
sahf
lods
push
cmp
pusha
mov
es
shrb
jp
cmpsb
inc
and
lret
add
pop
lods
mov
jbe
movsb
mov
push
mov
inc
mov
rclb
sbb
and
lea
push
fcmove
lcall
neg
sbb
xchg
xchg
aas
ja
mov
pop
or
adcl
cld
loopne
cmc
adc
xchg
or
push
fcomps
test
adc
out
inc
pop
ds
pop
insb
popf
fs
jge
outsl
int
mov
stos
pop
sbb
imul
inc
xlat
pop
ret
mov
sbb
dec
add
loopne
inc
clc
add
xor
mov
cmp
push
jecxz
cs
ret
xchg
push
fnstcw
mov
adcl
les
stos
scas
xchg
and
out
and
fbld
add
jb
call
movsb
aam
mov
arpl
cltd
push
leave
mov
push
xchg
testb
push
inc
pop
repnz
loop
in
mov
in
lods
in
in
adcl
jmpw
loop
mov
xor
insb
sbb
sbb
test
sub
in
ds
in
inc
mov
sbb
jmp
cmpsb
push
ret
mov
insl
sub
aam
sub
and
mov
data16
or
push
cmp
adc
out
sbb
dec
pop
add
les
test
sahf
inc
sub
sahf
xlat
test
test
mov
popa
fs
fisubl
mov
fnstsw
adc
adc
jne
push
xchg
mov
push
mov
sarl
mov
inc
rorb
out
ficompl
leave
mov
insb
aas
ljmpw
je
adc
mulb
movsb
jbe
iret
adcb
iret
sub
lret
cmpsl
divl
push
loopw
pop
cmp
lods
adc
lods
ficoms
pop
js
cli
in
fiaddl
mov
push
adc
jo
add
clc
inc
in
xchg
inc
shll
add
jb
push
dec
pusha
inc
and
std
aad
test
lahf
sub
pop
shrl
xchg
push
divl
fwait
sbb
jbe
movsb
inc
adc
adc
movsb
xor
rclb
rcll
jle
jecxz
sti
ljmp
cmc
shrl
icebp
cs
cmp
lret
push
mov
das
int
push
xchg
jne
mov
jo
push
dec
fstps
xor
test
aas
in
inc
inc
jo
dec
mov
test
pop
in
cmp
in
xchg
repnz
mov
fcmovb
lds
push
cmp
fs
pop
mov
loopne
mov
inc
cmpsl
push
or
mov
add
mov
pop
mov
inc
lock
mov
orl
test
push
sahf
mov
movsl
push
ret
pushf
scas
xchg
sub
xor
ljmp
shlb
pop
repz
lahf
int3
sub
call
mov
mov
jmp
stc
mov
pusha
xchg
into
mov
into
mov
xor
mov
ret
push
aam
cmc
aas
mov
push
int
pop
push
out
ds
xlat
mov
les
insl
sbb
cmp
xor
cmpsl
pusha
push
rcrl
fwait
and
imul
mov
ficompl
adc
pushf
pop
loop
xchg
add
xor
imul
jae
mov
dec
adc
cmpsl
stc
imul
insb
mov
and
jmp
repnz
rclb
loop
jns
adc
test
out
mov
hlt
sub
adcl
or
sbbl
jl
fucomip
or
cltd
add
repnz
cmpsb
add
pop
pop
mov
cltd
dec
or
mov
test
scas
test
rdtsc
outsl
lcall
jbe
sub
jge
adcl
ret
imul
ljmp
stc
loopne
aaa
add
sbb
sbb
mov
lea
stc
push
jmp
cmpsl
jbe
lahf
pop
lock
sbb
jb
pop
fwait
xorl
stc
jb
lret
test
inc
je
mov
insb
xor
rorb
mov
add
fndisi(8087
xchg
ret
cmpsl
es
ss
inc
fwait
xor
cltd
hlt
cmp
push
cli
or
imull
sbb
inc
push
mov
in
cmpsb
cmp
not
data16
lret
jnp
pop
push
cwtl
andb
pop
xchg
inc
les
mov
popf
popf
stc
negb
dec
outsb
outsl
jne
sbb
fidivs
or
mov
nop
shlb
sahf
mov
mov
xchg
mov
jnp
mov
ljmp
mov
push
and
pop
sbb
pop
fcmovne
push
dec
jns
push
fisttpll
or
adc
sahf
rorl
xor
clc
iret
adc
test
xchg
xchg
test
js
std
xchg
pop
enter
jnp
insb
jb
xchg
int3
mov
push
sub
dec
lods
pushf
xchg
andb
call
mov
mov
mov
aas
daa
or
shlb
xchg
inc
adc
and
adc
ds
test
shlb
inc
sub
cmpsl
out
pop
push
dec
adc
dec
aas
push
or
inc
and
out
and
add
enter
and
outsb
arpl
mov
jmp
lock
rolb
pop
dec
and
rclb
ficoml
popa
sub
insl
mov
mov
pop
cmp
pop
push
pop
stos
lods
jle
mov
cs
pop
fistpl
negl
or
cmpsb
test
or
pop
adc
loope
scas
gs
adc
push
push
sar
mov
sbb
dec
mov
test
aaa
test
add
cwtl
dec
mov
xchg
mov
fdivrs
imul
subl
sub
out
lods
aam
jb
xchg
int
clc
mov
add
or
push
sti
push
jbe
ret
dec
sti
loop
push
mov
push
test
inc
cld
push
in
push
push
hlt
or
shr
mov
push
pop
fwait
dec
push
mov
movsb
cltd
scas
xor
lods
cmpsb
and
mov
cmp
jl
pop
jnp
adc
xlat
je
mov
rcrb
mov
push
mov
sbb
adc
pop
stc
jb
in
movsb
mov
and
sub
jne
insl
jle
cmp
inc
or
fsubl
aad
push
imul
xchg
jbe
mov
jo
cmp
test
mov
add
xchg
inc
lss
fldl
jbe
loopne
sbb
rol
mov
pop
out
cltd
xchg
xchg
push
jmp
mov
fcoms
insl
fcomp
pop
out
push
xchg
pop
cmc
repnz
cltd
push
jg
dec
jno
out
sbb
xor
in
and
lret
inc
xor
pop
stos
out
lea
push
clc
insb
in
pop
and
lret
adc
nop
pop
mov
test
sbb
ret
inc
icebp
xor
dec
and
mov
imul
ret
add
add
movsb
inc
pop
insb
xor
call
aaa
push
out
xchg
hlt
loopne
add
cld
and
and
jae
jno
lret
xchg
mov
std
aam
sahf
ljmp
pop
and
and
sbb
mov
push
cmp
leave
pop
fs
pop
iret
dec
mov
push
ret
cmp
bound
xorl
shufps
xor
mov
aaa
in
js
out
loope
fsubl
ret
push
ljmp
movsl
xchg
stos
pop
int3
pop
popf
idivb
or
fdivr
xchg
lods
iret
xor
and
nop
sbb
dec
testl
push
sub
adc
int3
push
imull
lret
ja
mov
sahf
test
dec
arpl
cli
inc
sbb
nop
xchg
notl
aam
test
popa
cmp
aas
pop
dec
pop
add
in
jg
cmp
into
lahf
pop
sarl
adc
sbb
clc
mov
fsubl
daa
popf
dec
and
fsubl
add
mov
popf
dec
adc
sub
in
dec
js
inc
mov
arpl
ja
loope
jae
pop
xchg
jl
stc
dec
dec
mov
out
push
and
mov
hlt
outsb
and
xchg
fldl
bt
outsl
adc
mov
sahf
dec
mov
sbb
orb
lahf
dec
lods
adc
xchg
fldt
test
mov
cmp
push
popf
xor
mov
movsb
jp
add
mov
fisttpl
lret
pop
push
popa
movsl
xor
push
cmp
bound
icebp
test
hlt
and
ja
jl
es
inc
sbb
mov
imul
mov
lret
popa
pop
xchg
daa
adc
sahf
mov
gs
fnstcw
pop
mov
push
push
nop
sub
inc
movsl
sub
dec
ljmp
xchg
sbb
dec
sbb
add
lds
mov
in
xor
testl
xor
sub
imul
xchg
movsb
inc
cmp
sub
add
das
cs
out
cmp
sbb
mov
repz
dec
mov
in
jne
hlt
and
sbb
cmpsb
pop
jns
sbbl
jns
int
adc
stos
sub
outsl
cmpsb
dec
stc
scas
inc
cmp
aaa
pop
cmp
adc
xchg
aaa
pop
in
loope
inc
cs
dec
pop
stos
cmp
loopne
mov
jge
sbb
pusha
mov
pop
xorl
ljmp
les
sbb
gs
adc
adc
xor
rcrb
in
cmpsl
rolb
cs
enter
ficoms
mov
adc
inc
negl
jne
aaa
mov
mov
mov
or
stc
mov
xor
mov
adc
pop
rolb
shlb
loope
out
cmpsb
xor
inc
testl
xor
push
add
sbb
push
mov
jecxz
outsb
lret
sbb
mov
in
sbb
jmp
mov
test
outsl
sarb
lcall
nop
pop
sbb
sub
jmp
out
aas
cld
sbb
mov
in
dec
lahf
cmpsl
xor
dec
fwait
inc
test
pop
outsl
pop
lret
dec
shll
xchg
cmpsl
aaa
movsb
jbe
dec
mov
xchg
cmp
mov
test
or
or
fsubl
add
hlt
pop
jnp
aam
sbb
imul
mov
push
or
mov
lcall
add
sbb
outsl
sub
adc
std
add
cmpsb
lahf
sub
inc
sbbl
xchg
add
cmc
or
cltd
add
or
cmp
shl
ds
jae
mov
sub
leave
cli
shl
pusha
test
inc
xor
push
inc
lcall
lock
cltd
imul
push
jo
sarb
jnp
movsl
cmpsb
cld
cli
cld
inc
fld
mov
xchg
stc
jle
popf
pushf
lcall
dec
dec
push
into
and
mov
and
out
bound
add
imul
int3
pushf
pop
lret
jecxz
or
xchg
lods
jne
lds
lcall
pop
sahf
push
test
jge
pop
sub
enter
fistl
push
test
jle
dec
repz
cmp
shlb
xchg
xchg
stos
push
or
add
loop
push
js
sub
mov
loope
sahf
push
movsl
jo
cltd
inc
orb
pop
xor
lret
loope
int3
lock
mov
call
fs
mov
jne
sbb
subl
inc
mov
dec
sub
push
mov
repnz
out
inc
mov
scas
mov
ljmp
gs
push
push
fiaddl
xchg
fcoml
jno
cmpsl
pushf
sub
mov
insl
inc
ss
xchg
cmp
leave
in
and
inc
pextrw
cmp
mov
mov
popf
fs
xchg
mov
lods
xchg
jne
xchg
lcall
movsl
test
ret
jp
decl
mov
mov
sbb
fadd
xlat
dec
nop
filds
push
loop
loop
leave
pushf
aad
stc
imul
mov
jne
or
jmp
pop
cmpsl
insl
cwtl
in
stc
aas
std
jbe
lahf
arpl
cwtl
jle
mov
and
test
dec
sub
rcrl
mov
xchg
sbb
add
ds
mov
popf
pop
dec
movb
and
imul
pop
add
ja
ljmp
jns,pn
jno
pop
rcrb
push
jo
cltd
pop
iret
adc
sbb
push
mov
aaa
sbb
bound
addr16
insb
jg
test
jle
inc
es
ljmp
sti
inc
adc
imul
mov
or
pop
pop
shl
sbb
mov
test
push
jne
mov
cmp
pop
xchg
int3
mov
push
dec
mov
xchg
sahf
xchg
fs
jbe
dec
mov
ret
dec
shrl
imul
testl
mov
stos
not
inc
shll
out
mov
push
daa
xchg
mov
notl
lcall
dec
hlt
lret
jbe
xor
push
mov
mov
add
test
sub
ds
cmpsb
rclb
xorb
cmpsb
push
jecxz
push
mov
pop
xchg
or
hlt
cli
pop
clc
aas
dec
test
jno
lods
bound
xchg
andb
int
scas
test
lods
dec
xchg
push
fists
aaa
fs
aas
mov
sub
shrb
or
and
and
inc
mulb
or
fdivl
and
inc
dec
lcall
repnz
pop
pop
loope
mov
xchg
andl
mov
mov
sar
lods
xor
test
sbb
gs
and
xchg
adc
dec
or
adc
lods
and
sub
xlat
push
and
bound
xlat
pop
xchg
inc
push
adc
popa
inc
loopne
loope
and
out
or
in
enter
sbb
xchg
mov
test
das
mov
xchg
je
dec
add
scas
out
sbb
push
mov
scas
fdivl
arpl
push
sub
xor
ds
mov
icebp
sti
loopne
jl
mov
ret
hlt
addb
cmp
jl
sbb
push
pusha
aas
xchg
or
pop
adc
imull
xor
jg
call
mov
out
dec
imul
fisubs
rcrb
or
in
jp
jp
std
mov
mov
jg,pn
and
push
push
loopne
pop
mov
cmp
arpl
inc
stc
int
clc
pop
push
ret
xchg
and
adc
push
sbb
inc
push
add
int
add
inc
movsb
es
stc
push
ja
test
inc
push
xor
pop
inc
sbb
popf
lret
jmp
and
pop
imulb
xor
cmp
add
in
in
xlat
dec
clc
ret
push
std
daa
inc
fcompl
adc
add
sub
mov
jns
jne
pop
je
and
icebp
mov
xchg
clc
cmpb
sbb
ss
mov
in
fadds
lret
lea
stos
inc
xchg
adc
out
xor
dec
dec
ja
ret
fidivrl
daa
popa
or
mov
jmp
dec
jp
mov
jns
or
mov
pushf
jb
mov
add
cwtl
xor
arpl
xchg
mov
repnz
sti
jns
sti
jnp
mov
inc
insb
faddl
mov
jmp
sbb
jmp
ret
test
cmp
fdivrl
pop
outsb
cmp
fsubs
adc
pop
jne
mov
shll
inc
rcrl
mov
mov
mov
push
pop
sahf
mov
flds
cld
add
add
jo
lcallw
push
xor
mov
fstpt
mov
xlat
mov
cmc
pushf
dec
xlat
mov
pusha
and
cmp
jo
bound
xchg
pushf
lret
decb
imull
cmp
test
cmp
es
bound
test
rclb
xor
call
push
jle
ljmp
lods
clc
and
pop
pusha
push
mov
hlt
sbb
jb
add
add
lret
sub
gs
mov
mov
xchg
mov
mov
in
lds
push
std
jns
xchg
jle
jb
not
mov
jg
enter
mov
jp
inc
mov
aas
iret
xchg
inc
mov
subb
push
js
das
sti
fsubrl
sub
adc
jmp
iret
jl
sub
add
scas
xchg
je
sbb
jo
jno
mov
dec
imulb
mov
pop
aas
mov
jo
sbb
xor
sub
inc
loop
push
cmpsb
out
xlat
lret
lods
out
or
in
cmp
jns
inc
jle
add
js
leave
push
xor
xchg
sbb
ret
lret
add
add
test
mov
bound
in
orl
les
in
fldcw
jne
pop
out
push
xchg
scas
out
or
sub
mov
ss
pop
outsb
movsl
mov
dec
int3
shr
xchg
pushf
add
push
leave
mov
cmpsl
mov
je
out
out
repz
sbb
or
mov
cmp
xor
testb
cmp
scas
push
in
test
movsl
stc
dec
fs
hlt
xorb
jle
mov
repnz
push
xor
aas
loopne
cld
movsb
jmp
xchg
sbb
loopne
push
ja
or
insl
inc
inc
and
or
cs
inc
jae
data16
mov
cmp
lods
fwait
mov
dec
std
test
push
xchg
mov
sub
ret
std
out
push
fsubrs
sarl
repnz
push
fstl
cmp
cld
xchg
lea
xchg
cmp
out
js
in
inc
rcrb
pop
ljmp
aam
pop
adc
xchg
aas
in
cmp
dec
xchg
inc
std
lods
lods
pushf
in
cld
cwtl
enter
out
jbe
sub
or
xchg
jg
fwait
mov
mov
stos
lret
adc
sti
loopne
aam
and
mov
dec
mov
jge
jg
test
dec
xor
sbb
ret
jo
mov
mov
clc
mov
cwtl
and
pushf
imul
mov
mov
mov
fiaddl
dec
cmpsb
cmc
push
jge
inc
les
negl
ret
ficoms
sbb
push
mov
push
daa
inc
mov
sahf
mov
adc
mov
cwtl
icebp
hlt
xor
mov
jle
in
add
xchg
test
sbb
mov
daa
jle
jecxz
push
out
in
int
pushf
int
sbb
mov
adc
adc
arpl
cmp
in
test
fisttpll
cmp
loope
inc
cmc
imul
push
ds
cmp
inc
lea
cs
mov
jle
sub
mov
shll
jo
dec
xchg
pop
call
cmp
std
xchg
mov
mov
mov
jbe
or
push
push
or
dec
sbb
jmp
xchg
das
cmp
mov
into
mov
sbb
idiv
pushf
pop
aad
jmp
mov
sub
mov
fwait
pop
mov
mov
inc
das
fsubrs
lods
fidivl
mov
js
bound
das
outsl
arpl
mov
into
and
jne
fsqrt
imul
lea
xchg
ljmp
mov
gs
xor
jbe
pop
cmp
xor
mov
sarl
leave
mov
push
fs
mov
negl
sbb
sbb
fstl
es
ss
mov
mov
and
push
inc
in
mov
in
call
sti
arpl
xchg
pop
leave
jno
lds
mov
and
call
add
mov
les
jbe
cmp
push
loopne
mov
into
cmp
push
stos
sub
fnstenv
sub
adc
orl
into
xchg
dec
mov
icebp
popf
mov
and
jnp
mov
stos
loopne
test
setg
cmp
sbb
popa
xor
in
xchg
xor
mov
lock
dec
scas
ret
add
or
outsb
pop
fistpl
inc
mov
inc
mov
sub
add
mov
lock
jne
xor
xchg
pusha
pop
mov
aam
insb
pop
negb
inc
adc
adc
xor
mov
fadd
sbb
jmp
roll
cltd
adc
movsb
mov
repnz
jbe
inc
and
outsb
sbb
outsl
shlb
push
add
les
ljmp
cwtl
imul
fincstp
lds
mov
outsl
nop
movsb
dec
ja
jae
sar
cmpsb
push
mov
mov
push
sbb
xchg
out
mov
mov
jns
jl
mov
dec
pop
mov
add
repnz
pop
icebp
mov
jmp
pusha
inc
or
lahf
outsb
rclb
pop
ljmp
enter
cmp
xchg
jle
pop
or
push
scas
idivb
scas
pop
xor
fdivrs
fidivrs
add
into
mov
mov
cltd
addr16
test
jb
cmp
in
lret
jne
push
mov
mov
sbb
and
jmp
jle
jge
stos
push
adc
lahf
roll
mov
sub
gs
aad
cmovge
adc
or
jbe
lds
cmp
cmp
xchg
out
cmp
sar
fwait
out
push
cltd
xchg
pop
daa
cmp
flds
repz
mov
inc
and
or
lock
clc
leave
outsl
cmc
mov
cld
rcrl
mov
jo
lea
and
jbe
mov
lahf
jne
fldt
mov
sbb
hlt
mov
xchg
add
jmp
mov
jns
mulb
stos
sysexit
int
adc
sub
scas
fcomi
les
outsb
or
inc
sbb
sahf
decl
cmp
jmp
mov
jno
js
jo
lods
pop
dec
fs
pop
xlat
in
shrl
out
dec
sarl
jle
and
imul
cltd
movsl
sti
inc
scas
cmc
idiv
xchg
clc
pop
insb
shll
inc
mov
and
stos
insl
insl
lret
out
jae
push
loopne
mov
and
stos
imul
xchg
jmp
xor
mov
adc
scas
sub
bound
push
cmp
inc
xchg
fdivrl
scas
xlat
inc
pusha
outsb
mov
push
hlt
jno
jecxz
xor
pop
push
cwtl
xchg
cmp
popa
sub
in
adc
mov
push
pop
outsl
sub
std
jmp
fdivrs
cltd
pop
arpl
mov
fadd
xor
enter
jmp
jle
test
xchg
inc
fmull
add
rorl
call
cmp
push
cmp
loop
sub
xor
xor
cwtl
pop
push
xor
mov
cmp
movsl
mov
subb
inc
adc
mov
das
bound
stos
gs
jl
cmpsl
inc
adc
fbstp
xor
int
lea
mov
xchg
sbb
jge
daa
sub
jg
cmp
mov
mov
loopne
mov
aam
xor
fldenv
pop
mov
icebp
and
test
repnz
insb
cld
xchg
das
testb
add
pushf
loope
loope
mov
ret
jp
and
xor
adc
stc
or
mov
xlat
hlt
negb
fldl
mov
cld
fdivrs
sti
lahf
xchg
cmpsb
fisttps
jne
lret
sub
adc
dec
add
and
test
jnp
xor
int3
xor
out
int
jb
ljmp
mov
lods
cwtl
dec
sahf
push
pop
and
imul
push
jns
decl
or
push
cmp
or
clc
fidivrs
pop
dec
sub
ja
adc
xor
lea
cmp
sbb
in
adc
lods
lea
movsb
leave
or
sub
push
daa
pop
jno
inc
sub
pop
flds
imul
adc
outsl
sbb
enterw
xor
scas
cs
xor
ret
js
push
or
rcrb
jg
push
ret
adc
adc
fs
inc
sub
ds
xchg
xchg
in
sbb
xor
lahf
xchg
fsubs
inc
push
adc
xor
rcll
add
nop
add
outsb
sub
inc
jge
push
mov
mov
mul
xor
enter
mov
or
lret
cltd
leave
sbb
mov
xor
repnz
int3
fisubl
cmp
fisttps
loopne
fcomps
sbb
add
loope
dec
bound
pusha
test
out
mov
mov
ret
cmpsl
pop
mov
shll
push
xchg
mov
insl
xor
fsubs
push
add
xor
minps
mov
cwtl
aad
mov
jo
std
stos
mov
mov
daa
negb
mov
imul
dec
daa
mov
sti
jae
or
test
daa
adc
add
enter
push
lods
push
xor
test
adc
dec
std
hlt
jecxz
shr
push
loopne
jle
cmp
rclb
faddl
and
notb
cld
or
ficompl
jmp
dec
out
and
outsl
cmp
xor
mov
repz
rcrl
jae
or
sub
mov
daa
into
xchg
dec
fs
xchg
lods
imul
scas
xchg
mov
mov
clc
mov
mov
outsb
mov
xor
ds
mov
cmpsl
stos
mov
xlat
repz
fstpl
ficomps
push
gs
sbb
pop
fisttpll
or
lods
loope
push
imul
test
popa
stos
imul
fnstenv
mov
mov
es
neg
outsb
sub
xor
leave
movsl
dec
add
stos
jo
stos
pop
icebp
jmp
fucom
xor
mov
push
pop
jno
jmp
pusha
pop
mov
repz
or
movsl
addr16
xor
scas
je
js
inc
fcmove
xor
xchg
movsl
mov
mov
movsl
sub
and
cmp
xor
sub
xchg
clc
lcall
ljmp
nop
inc
xchg
xchg
cmpsb
dec
fs
and
mov
push
and
sub
mov
dec
cmp
mov
jp
xchg
add
out
fldenv
pop
or
fwait
push
mov
cmp
subb
rcll
mov
call
mov
addr16
fisubs
push
sarl
jbe
pop
xchg
push
ss
pop
pop
pop
inc
loop
paddsb
jecxz
push
and
mov
and
mov
push
bound
jl
add
and
inc
sar
push
sub
and
das
inc
outsl
xchg
fadds
cmpsb
push
or
jno
andb
jnp
test
adc
push
loope
loop
or
std
inc
lock
push
movsl
add
jno
loop
sub
fadds
mov
mov
xchg
fldt
push
popa
mov
jne
in
int3
and
xchg
jbe
orl
dec
cld
or
and
cwtl
xor
cmpsb
mov
xchg
cmp
cwtl
loopne
xor
jbe
scas
push
aam
push
inc
sub
pop
js
sahf
out
xor
mov
clc
add
das
aam
cmp
adc
outsb
mov
ds
cmpsb
mov
fwait
bound
xchg
and
out
repz
jge
sub
lahf
lret
mov
cltd
scas
inc
xor
pop
dec
nop
jno
mov
dec
jg
pop
test
jbe
pop
testb
punpckhwd
sub
sub
dec
mov
push
shlb
cli
dec
dec
add
dec
mov
inc
decl
js
cwtl
pop
das
fwait
or
jae
adc
cwtl
sub
test
add
sahf
vandnps
pop
jecxz
and
and
push
data16
leave
push
sbb
and
popf
jno
sahf
lds
out
jnp
dec
mov
cmp
std
es
jo
mov
test
cmp
pop
stos
stos
fnstcw
sub
and
outsl
jae
pop
inc
mov
mov
cld
or
vcvtsi2ssl
in
mov
lcall
testl
dec
insl
pop
into
in
push
push
scas
loope
ljmp
jnp
xchg
repnz
pusha
jno
das
std
mov
cmp
jne
mov
dec
cmc
add
pusha
pop
adc
fdivr
dec
pop
xchg
cmpsb
mov
and
add
jb
cmp
push
dec
mov
fidivl
cmpsb
mov
mov
xchg
push
scas
roll
push
cmp
mov
in
or
xchg
pop
jne
jecxz
add
pushf
sbb
mov
shrl
adc
mov
mov
pushf
dec
adc
xor
std
mov
sbbb
dec
sahf
sub
sub
popf
push
imul
cmp
mov
mov
mov
loope
fmul
leave
sub
imul
test
popa
fidivs
push
pop
xchg
cld
pop
pop
xor
movsb
ds
lret
adc
stc
dec
push
leave
das
xchg
fists
shlb
inc
leave
cld
ret
xor
and
sbb
lock
aam
add
je
fldpi
nop
mov
adc
xchg
aas
daa
and
dec
mov
push
add
inc
fcmovu
add
push
jmp
or
or
sub
xchg
insl
insb
dec
jbe
sbb
and
mov
xchg
xorb
sub
jge
cmp
adcl
pop
nop
arpl
rorb
insb
test
push
xchg
into
subb
fcompl
mov
sbbl
push
dec
mov
adc
cs
and
ds
test
xchg
dec
data16
mov
cmp
xchg
in
jne
hlt
jae
adc
and
and
xchg
in
jp
stc
pop
sub
ja
add
fwait
add
lods
sbb
repz
pop
add
or
mov
lahf
jae
push
and
in
pushf
and
or
inc
bound
mov
adc
xchg
xor
adc
test
mov
mov
sbb
outsb
jnp
test
das
cmpsl
bound
clc
stc
push
push
dec
jo
add
jg
aad
out
fiaddl
mov
cmp
mov
out
shlb
mov
xor
test
fwait
mov
out
dec
mov
sbb
push
mov
ss
jmp
aam
fsubr
arpl
xor
imul
movsb
push
test
push
add
lret
dec
push
scas
mov
xchg
xchg
sub
nop
imul
dec
xchg
ljmp
mov
shrl
pop
stc
imulb
mov
mov
ja
xchg
push
ss
cmp
xlat
in
sub
out
or
and
scas
or
adc
ret
xchg
jge
outsl
push
inc
inc
dec
cmp
sbb
mov
sub
ficoml
mov
gs
cmp
sbb
xor
jmp
rcll
pushf
add
and
inc
cwtl
cmp
roll
push
sub
loope
inc
xchg
jnp
xlat
loope
add
outsl
ret
out
mov
push
movsl
movsb
xchg
int3
xor
jae
add
loop
inc
pusha
ss
or
ljmp
fidivl
lret
lret
and
pop
lahf
scas
adc
mov
dec
rcrl
xchg
mov
xchg
mulb
mov
stos
or
and
cmp
mov
jnp
xchg
daa
xor
imul
fsub
sbb
sbb
or
mov
rcll
aad
sbb
divl
mov
dec
jbe
lea
push
and
jge
andb
ja
jge
sahf
sbbb
pop
ja
xchg
push
movsl
fistl
dec
mov
or
mov
xchg
fisubrs
jecxz
mov
cmc
sbbl
dec
sbb
inc
mov
pop
adc
push
sbb
rcr
sub
clc
mov
jmp
stos
fs
mov
sub
loop
repnz
lret
push
ret
push
mov
sub
leave
gs
xor
sbb
ret
jne
jnp
sti
push
movsl
sbb
fs
int3
sti
pop
add
or
or
jo
nop
mov
push
jp
jne
ret
jae
push
add
mov
in
push
call
loop
pop
or
loope
and
cmpsl
clc
sub
ljmp
int3
sbb
sub
fcmovnb
pushf
push
push
outsb
or
push
adcb
repz
sub
addr16
inc
xchg
xchg
mov
lea
mov
add
dec
dec
leave
stos
fst
xchg
sbb
fnstenv
adc
and
aas
fcoms
cld
mov
xchg
fdivrl
shll
divl
xchg
xchg
xchg
jo
lahf
jb
cwtl
mov
pop
arpl
rcr
cld
jno
xor
cmc
xor
pusha
hlt
bound
mov
sub
sti
shll
loop
xchg
inc
jmp
lods
push
cmp
xor
fcoml
or
iret
mov
sahf
test
das
adc
es
xor
jo
inc
adc
mov
out
lods
cmp
loopne
mov
sub
aad
lretw
test
inc
push
aaa
daa
xchg
loope
rorb
cmp
leave
push
add
jle
test
psubd
pushf
mov
jge
lcall
in
ds
cmpsb
sti
subb
outsb
cld
and
or
dec
pop
dec
mov
add
sbb
popa
xchg
sbb
in
xchg
cli
pop
addr16
mov
insb
fs
in
dec
xchg
lret
test
and
cmp
cmp
pop
and
stos
or
iret
sbb
inc
dec
shr
lds
xchg
aas
push
fwait
cld
cmc
sbb
outsb
mov
push
inc
es
iret
fidivrl
test
test
sub
inc
fisubrs
lcall
inc
and
notl
mov
cwtl
sub
mov
dec
jmp
sbb
jecxz
add
jl
pop
add
fsubrs
inc
mov
loope
or
test
xor
cmp
fwait
loope
in
loop
inc
fldcw
incb
fsub
and
sbb
sti
ja
js
jno
out
lock
fnsave
fwait
and
in
test
fwait
xor
out
mov
mov
adc
jae
rclb
imul
enter
jns
mov
jp
arpl
sub
jne
in
add
dec
scas
jle
out
cmpsl
jg
mov
inc
rcl
cs
ret
xchg
inc
mov
aam
or
stc
cmp
cmpsb
dec
xchg
shld
arpl
mov
xchg
jmp
mov
dec
adc
jl
sub
push
gs
adc
cmp
jp
mov
adc
mov
mov
xchg
pop
cmpsb
xor
inc
mov
sbb
out
xor
dec
mov
mov
add
cwtl
jmp
push
call
mov
pop
ljmp
inc
and
jge
repnz
test
loop
adc
daa
scas
push
adc
iret
mov
dec
aaa
cmpsl
lock
mov
xchg
add
out
dec
xlat
mov
xchg
add
pop
xor
pop
out
movsl
cltd
pop
sub
cmp
lret
popa
shll
sub
lret
ds
sub
mov
dec
aaa
inc
stos
repz
fsubrl
dec
jne
ljmp
inc
cmpsb
push
pop
push
cli
popf
outsb
cmp
xchg
out
inc
mov
das
stos
sbb
rol
or
xchg
pop
leave
mov
jmp
sbb
mov
repnz
insb
cs
dec
mov
cmp
fistl
mov
sub
cwtl
sub
pop
stos
sub
inc
imul
pop
mov
add
or
dec
xor
dec
repz
pop
test
je
push
imul
mov
in
jle
and
pushf
out
bound
mov
in
mov
inc
andb
jno
into
dec
sbb
icebp
jnp
jns
xchg
jecxz
cmp
push
mov
sub
xchg
ficoml
ds
sbb
lods
mov
sbb
xchg
cmp
ss
setbe
int
push
mov
test
call
enter
enter
mul
push
jnp
adc
pop
xchg
aam
mov
stc
das
sbb
mov
inc
mov
sbb
add
mov
lahf
push
push
mov
push
lcall
divb
fiaddl
fidivrl
nop
dec
lahf
imul
inc
int
popa
dec
iret
sbb
push
fistpl
int3
add
mov
cmpl
pop
fidivrl
xchg
inc
xchg
sti
cmp
fsubrs
adc
push
into
xor
fnsave
rorb
out
int3
or
sub
js
mov
jmp
ds
push
push
cmp
mov
and
mov
jo
inc
movsl
fisttpll
test
dec
fwait
inc
pushf
dec
xchg
fcomps
pop
cli
xorb
mov
mov
xchg
daa
adc
add
sub
je
mov
dec
in
ja
or
movsl
xor
nop
pop
push
nop
mov
or
fstps
inc
lcall
push
push
rcr
pop
int
pop
xor
jne
push
rcrl
pop
test
mov
aaa
sbb
sub
sbb
sub
dec
inc
outsl
ret
arpl
push
movsb
mov
mov
rcrl
repz
les
sub
imul
jne
pop
and
mov
mov
insl
inc
sbb
imul
int3
test
cmp
mov
cmp
cmp
cmp
mov
sbbl
mov
test
ficoml
inc
rcr
dec
mov
xchg
jmp
ficompl
fs
mov
add
pop
pusha
mov
sub
sub
jbe
test
xchg
jp
in
in
jb
scas
sub
and
xchg
cli
aas
test
stos
insl
rcll
adc
mov
insw
or
xor
mov
fimuls
dec
gs
cmp
nop
pop
enter
lret
enter
mov
fldl
pop
jge
mov
or
int3
aas
cmp
xchg
lods
xchg
scas
jo
dec
ds
sahf
dec
cli
scas
es
adc
mov
pop
mov
inc
push
sbb
mov
jb
jbe
and
mov
xchg
mov
xchg
cmp
pushf
jecxz
fbld
add
andb
cwtl
fcoms
rorb
fs
sbb
scas
loope
and
adc
pop
cmovb
pop
sbb
divl
loope
add
inc
pop
and
xor
pop
imul
and
push
jnp
adc
xchg
mov
mov
xchg
add
sub
cmpsb
xchg
xor
popa
mov
jle
push
pop
adc
outsl
cld
cmc
xchg
cmc
adc
inc
test
mov
pop
or
movsb
cmp
dec
fisttps
jmp
lea
add
jl
leave
mov
push
fsubrs
sub
fadds
shr
cmpsl
stos
stc
fdivrs
adc
inc
lret
data16
pop
ja
fidivrs
lds
aas
push
mov
dec
inc
inc
aas
test
in
fiadds
mov
xchg
icebp
mov
clc
clc
pop
jns
ds
and
xchg
cld
insl
test
sub
dec
scas
cmc
jae
push
mov
out
sbb
jp
stos
stos
push
out
push
ret
testb
adc
es
xorl
sbb
inc
pop
lahf
cmp
xlat
jnp
mov
repnz
pop
mov
push
inc
xor
frstor
daa
xor
pslld
jns
mov
iret
std
adc
mov
xchg
cmp
jne
dec
ret
cmc
jb
imul
fbld
xor
es
gs
sub
or
test
es
push
loop
dec
lcall
jnp
mov
mov
mov
jns
leave
mov
mov
je
add
mov
fadds
xchg
xchg
andl
hlt
pop
mov
sub
and
sbb
jg
pop
dec
test
sbb
decb
mov
outsb
push
xchg
mov
mov
cs
test
or
aam
shlb
add
int
mov
sbb
jbe
sahf
repnz
out
xchg
inc
hlt
in
xchg
pop
jmp
leave
pop
stos
into
jp
rcll
inc
sub
add
dec
or
in
mov
mov
repz
dec
push
imul
lock
int
cmp
arpl
sub
dec
jbe
push
pop
cmp
in
lods
mov
out
inc
pop
mov
ds
mov
cmp
test
or
aaa
mov
push
lfence
or
loopne
sbb
mov
push
xor
int3
ret
adc
in
cmp
or
mov
dec
mov
les
cmp
or
sub
roll
pop
call
push
xlat
xor
popf
push
push
roll
sub
dec
out
enter
push
mov
iret
addb
jnp
pop
add
in
lods
fwait
cs
dec
rclb
mov
pusha
js
xor
xor
add
jecxz
inc
fildl
adc
cs
cmpsl
dec
popf
mov
rcr
and
test
dec
jl
jge
sub
mov
loope
sbb
jmp
outsl
js
pop
imul
sub
aad
add
in
out
pop
sub
je
in
cmp
or
mov
and
cmpsb
mov
into
int
add
in
in
loope
cmp
push
or
inc
ja
ret
cmpsb
mov
into
pop
sub
outsl
mov
js
xchg
xchg
mov
cwtl
jmp
mov
es
add
inc
pop
inc
xchg
dec
xor
cmp
jle
push
xchg
enter
or
scas
lock
sub
add
ficoml
adc
inc
clc
jmp
das
mov
insl
mov
movsb
xchg
mov
ret
sbb
push
dec
sub
push
repz
and
lret
xor
inc
inc
cmp
ret
jae
jbe
and
inc
je
mov
adc
push
into
push
xchg
test
push
jns
cmpl
lcall
mov
or
push
in
test
add
inc
insb
shll
mov
xchg
insb
sub
jge
sub
lahf
lods
pop
xlat
mov
cmp
bound
mov
movsb
test
shr
sbb
testb
cli
mov
mov
mov
mov
jl
inc
dec
fldcw
dec
int3
inc
loope
xor
scas
xor
xorb
dec
push
imul
and
sahf
sbb
cmp
es
inc
xor
ret
and
mov
leave
jg
mov
lret
sti
imul
testb
push
adc
scas
fcoml
jbe
sbb
push
jbe
int
sub
pop
dec
sarb
push
sub
add
fadd
ljmp
out
outsb
movsl
xorps
pushf
in
shrl
mov
sbb
enter
aas
push
lods
adc
sar
int3
mov
in
xchg
dec
mov
sbb
sbb
jnp
loope
shrb
icebp
test
fstps
fstl
and
dec
adc
adc
test
mov
or
test
in
mov
xchg
popf
pop
mov
stos
xchg
cmp
repnz
mov
sub
add
mov
test
iret
adc
in
adc
jmp
ja
mov
mov
addr16
jge
test
or
nop
inc
in
cltd
xlat
xor
xchg
dec
in
or
dec
add
ds
sub
aaa
shlb
lock
ror
aaa
xor
cmpsb
cs
js
mov
push
pop
dec
lcall
mov
push
push
cmp
pop
sbb
lds
mov
iret
xchg
or
xor
in
or
fwait
cmp
ja
adc
loop
in
lods
cld
fldt
sbb
mov
movsl
xchg
lret
xor
ficompl
ja
out
xchg
inc
arpl
mov
leave
mov
add
xor
pusha
fcmovnb
stos
imul
fsub
pushf
scas
push
sbb
roll
push
mov
jecxz
aaa
ret
jl,pn
mov
inc
mov
ljmp
push
fisttps
pop
fwait
insl
adc
test
and
cmpb
loope
push
sbb
xchg
testl
mov
mov
fildll
mov
cmp
adc
cmp
aaa
inc
adc
xorl
dec
fdivrs
add
cmpsl
lret
cmp
pushf
arpl
inc
iret
imul
ficoml
daa
sub
jp
xor
loop
jg
inc
inc
nop
int3
pop
aaa
repz
std
sbb
std
sub
aas
or
dec
dec
loopne
aas
out
ficoml
xor
pusha
pop
dec
jle
mov
sub
incb
das
addl
dec
cltd
arpl
mov
enter
sbb
movsl
mov
sbb
jmp
mov
ljmp
push
push
outsb
std
push
mov
int3
cwtl
xchg
stos
xchg
into
es
sub
mov
cli
mov
push
incb
cmpsb
ret
je
and
adc
inc
xor
lret
repz
test
hlt
xlat
jmp
mov
jae
pop
cmp
sti
das
jg
clc
insb
sbb
pusha
gs
loopne
es
jb
inc
mov
in
mov
ljmp
xchg
push
sarb
cmp
xchg
aas
ja
mov
fmuls
xor
push
mov
add
jbe
std
cli
mov
scas
out
cmp
mov
icebp
cmp
shlb
shr
arpl
in
xchg
fstpl
add
sub
mov
jae
xchg
jae
adc
lret
nop
ss
adc
into
mov
mov
and
icebp
sub
enter
sub
sub
movsl
xor
faddl
mov
sbb
sahf
rcrl
mov
popl
dec
mov
xchg
fisubrs
data16
jmp
jge
adc
sahf
jp
ja
xlat
jae
jmp
stos
sbb
cmp
xor
aaa
push
xor
mov
pop
mov
push
das
push
sti
and
lret
mov
int3
push
xchg
jecxz
cmpsw
insl
cmp
pop
jb
pop
inc
mov
mov
pop
fistpl
mov
lcall
pushf
fwait
pop
xchg
pop
cwtl
or
or
and
jbe
ds
arpl
test
and
imul
bnd
mov
xor
add
xchg
xor
inc
stos
xchg
sbbl
movsb
out
inc
jno
fnstsw
sub
mov
ljmp
das
stos
sar
bound
aad
in
push
sub
std
xchg
jnp
imul
pop
add
getsec
les
fxch
or
ret
cmp
add
rorl
xlat
bound
adcl
push
test
jb
dec
and
daa
mov
adc
pop
ss
arpl
adc
fidivrs
ja
es
fsts
jg
fbstp
xor
fucomip
pop
mov
and
or
insl
adc
and
pop
stos
and
add
scas
push
pushl
into
outsl
add
lahf
loope
and
mov
repz
clc
xchg
lret
lock
fistpll
dec
add
outsb
lcall
push
inc
xchg
test
outsl
outsb
cltd
and
xchg
add
imul
mov
mov
pusha
iret
sub
ret
mov
xchg
push
jns
sbb
lret
and
inc
into
repz
adc
cltd
in
enter
cmp
loop
xor
cmp
cmp
cltd
push
shr
inc
aaa
pop
add
leave
mov
sub
rcl
inc
xchg
icebp
repnz
rcr
jecxz
mov
fucomp
fbld
mov
fisubl
adc
adc
mov
dec
pop
adcl
cmp
mov
fchs
adcl
out
test
nop
cmpsb
sbb
jnp
lea
fstpl
shlb
jle
stc
insl
subb
insb
lret
rorl
imul
flds
push
int3
loop
ja
stc
cmpl
hlt
inc
popa
sbb
jne
ret
cmpb
lea
adc
les
sub
xchg
inc
stos
xchg
shll
dec
aas
sqrtps
fmull
clc
sub
dec
dec
arpl
and
je
lock
imul
xchg
jbe
lods
sbb
cmp
push
add
push
inc
xor
mov
inc
lahf
int3
aad
aaa
sbb
lds
mov
scas
dec
rorb
and
inc
or
sub
cmp
cwtl
lds
pop
clc
paddd
push
leave
mulb
subl
lret
ret
sub
fisttps
xchg
dec
iret
jg
addr16
cmc
fxch
out
aas
sbb
pop
mov
push
dec
cmp
fisttpll
pop
cli
lock
mov
incb
cmp
jae
sub
push
jbe
fbstp
shlb
jnp
push
inc
cmpsb
repnz
imul
pop
and
pop
sub
mov
lds
add
stos
pop
mov
cltd
add
lcall
dec
je
popa
adc
push
fst
movsb
sub
test
fsub
aad
sbb
add
xchg
mov
icebp
in
leave
arpl
loop
jne
xor
adcb
xchg
jl
stc
xor
dec
or
mov
or
orb
cmpsl
notl
aaa
push
insb
inc
incb
enter
push
pop
into
lret
int3
outsb
loop
sbb
leave
push
aaa
lret
jle
incb
adc
dec
enter
add
nop
dec
outsb
add
arpl
push
xchg
pop
test
mov
imul
mov
data16
cld
adc
xlat
cs
push
jae
rcl
mov
outsl
push
divb
iret
xchg
cltd
adc
testl
hlt
mov
dec
inc
stos
add
jle
xchg
out
mov
sbb
cmc
pop
dec
adc
cmp
je
inc
stc
pop
add
adc
mov
inc
jns
sahf
pushf
andl
sahf
push
inc
arpl
mov
je
cwtl
inc
negl
iret
xchg
stos
and
add
insl
push
xchg
or
popa
jecxz
fldt
leave
mov
in
in
test
mov
push
jns
aad
ffree
inc
push
xchg
rorb
adc
dec
sub
cli
in
popa
sub
cmc
lahf
dec
pop
loop
leave
xor
decl
cmp
pop
mov
add
dec
xor
sub
gs
dec
sbb
jl
push
cmc
shrl
out
out
push
push
push
scas
push
insl
pop
jp
arpl
fs
ret
push
cmp
and
lods
mov
sahf
fnstenv
mov
bound
bound
inc
movsl
js
call
push
mov
xor
or
push
out
mov
jecxz
cld
int
dec
repz
adc
pushf
mov
in
rclb
cmp
adc
mov
fs
cmpsb
pop
filds
in
cmpsl
lock
inc
hlt
ds
test
mov
push
mov
sub
aaa
sbb
inc
fstpl
xchg
sub
ret
pop
addr16
sti
imul
fmuls
push
jmp
pop
dec
sti
out
pop
xchg
in
ljmp
mov
and
cmp
adc
cltd
push
loop
test
mov
xor
add
cmpsl
mov
sar
add
outsb
leave
push
cli
xor
xor
mov
sbbl
insl
add
xor
add
xchg
inc
and
out
sub
inc
cld
jmp
xor
idivl
daa
xor
or
inc
fbstp
mov
cmp
add
or
subl
js
in
fwait
aam
arpl
les
xchg
movsb
mov
push
cmp
std
out
jge
popf
cwtl
pushf
or
or
shll
xlat
mov
jmp
mov
popa
mov
fcomp
out
add
mov
push
loope
in
xchg
ljmp
push
cmc
out
xlat
inc
aas
inc
lods
mov
sbb
shll
ret
add
pushf
push
mov
clc
sbb
lcall
mov
xor
pop
adc
imul
shlb
out
dec
xlat
in
pushf
inc
jmp
push
push
sbb
jne
push
bound
out
movsl
daa
xchg
xchg
arpl
add
cmp
scas
xor
dec
lahf
icebp
add
adc
shll
mov
mov
pslld
cmc
in
or
je
push
std
mov
test
mov
pusha
add
mov
jle
xchg
repz
sbb
mov
fcmovnbe
sub
mov
in
mov
push
inc
xor
or
mov
or
or
gs
pop
out
stos
sbb
aas
testb
aas
movsb
push
int3
movsb
imul
jb
and
popa
outsl
sub
ficomps
stc
and
cmp
lds
lret
fdivs
push
cmpsl
dec
stos
out
and
sbb
cmovns
or
inc
dec
loop
mov
mov
dec
and
aad
imul
push
add
test
jbe
ja
in
fisubrs
or
sub
insb
mov
sbb
mov
inc
jo
cmp
or
shlb
lcall
repnz
out
lods
xchg
mov
xlat
add
jg
cs
xchg
loope
hlt
xchg
dec
movhps
cmp
xlat
xchg
lret
pop
pop
mov
das
mov
in
cs
clc
lret
mov
aad
xor
push
push
repnz
cs
jg
xor
int3
dec
cmp
mov
sbb
mov
xor
jge
fbstp
cmp
mov
fwait
ror
push
cmp
ss
out
jnp
cwtl
xchg
pop
into
mov
call
ret
into
test
fstps
rcrl
out
int
js
xor
pop
pushf
je
call
mov
pop
fcomps
add
sub
mov
jbe
ss
sub
sub
push
xchg
sbb
and
vmread
and
movsl
iret
jne
into
xchg
push
cmp
add
xor
outsl
add
add
int3
mov
jb
rorb
test
push
push
popa
mov
dec
jmp
andl
out
aas
or
out
jmp
jnp,pt
jmp
sbb
lods
mov
mov
xor
into
mov
jb
sub
std
mov
test
cmp
add
jge
or
mov
inc
cmp
sub
push
addr16
mov
sub
cmpsb
mov
fldcw
xchg
push
push
ljmp
mov
or
insl
ret
out
mov
das
vmwrite
dec
jne
xchg
sarl
repnz
subl
in
jle
idivl
sbb
mov
xor
popf
dec
push
xchg
sbb
inc
mov
sbb
pushf
push
aaa
fwait
and
xlat
xor
dec
or
andb
dec
mov
jo
aam
dec
rcrb
test
idivl
fisubrl
mov
cld
hlt
mov
ja
push
pusha
popa
xchg
mov
ret
lret
lea
jp
repz
adc
das
dec
pop
mov
imul
loop
inc
shrb
push
xor
shrb
xchg
xchg
cmp
fcoms
inc
loope
pop
mov
arpl
hlt
cltd
sbb
mov
mov
cltd
outsl
lahf
ret
sub
sarl
imul
test
sar
dec
insb
pop
in
ds
jge
fwait
sub
add
ja
loopne
add
insl
fistps
jecxz
mov
xchg
jg
dec
mov
add
fmulp
into
sub
xchg
cwtl
mov
out
xor
mov
popf
or
sahf
mov
add
and
ja
mov
inc
or
arpl
jl
pop
mov
add
mov
mov
push
dec
movsl
aaa
push
out
jns
repnz
aaa
jmp
sub
jns
pop
xchg
icebp
lods
rclb
add
bound
aad
xchg
sub
es
repnz
cmp
pop
lahf
pop
jp
fs
adc
out
jle
dec
test
bound
mov
outsb
mov
push
pop
adc
xor
das
push
inc
pop
add
sarb
xor
mov
or
mov
std
adc
cmp
aam
mov
cmp
cmp
adc
call
mov
out
movsb
jne
jecxz
xorl
cmp
adc
les
in
divl
aas
jae
in
lret
dec
adc
arpl
adc
sbb
stc
fmuls
mov
adc
pop
fcom
lahf
dec
sbb
jbe
adc
loopne
sar
jecxz
cmp
mov
mov
lret
dec
push
jno
iret
and
ja
movsl
push
sub
aas
mov
xchg
out
inc
push
ret
imul
sbb
sarl
push
inc
jns
jbe
push
mov
jnp
push
ljmp
jp
data16
mov
xchg
and
fnstenv
stos
pushf
pop
inc
mov
stos
aam
mov
and
shlb
loopne
xchg
mov
cmp
stc
in
fsts
push
or
inc
stos
pop
jg
xchg
xchg
sbb
cmp
outsl
and
mov
pop
out
lret
ficoml
inc
sub
cmp
out
loope
repz
sub
jo
popa
int
cs
xor
inc
push
mov
insb
xor
das
test
aas
inc
pop
gs
mov
sti
imul
shl
push
cmp
adc
push
xchg
dec
adc
sbb
xchg
ret
movsl
stos
xchg
mov
pop
xlat
adc
lods
pop
jle
mov
push
sarb
daa
mov
and
dec
and
fbld
ret
add
pop
mov
sub
pop
arpl
xchg
addr16
imul
stc
add
adc
push
aam
inc
mov
jg
jb
ljmp
repnz
call
dec
scas
dec
pop
jne
or
adc
cmp
sub
mov
pop
or
fdivl
and
mov
sbb
inc
imul
cmpsl
push
push
pop
out
aas
jmp
mov
sub
push
or
push
pop
repnz
pop
push
shll
in
divb
pop
out
imul
mov
rcl
int3
dec
dec
mov
ret
das
fstl
dec
popf
sub
jge
sub
sub
pop
jecxz
push
nop
xor
inc
xchg
xchg
insb
ret
mov
sub
sub
sub
loopne
inc
adc
int3
and
test
sub
cwtl
not
mov
xchg
push
sbb
fwait
sarl
dec
pop
mov
adcl
roll
lret
xchg
xchg
out
add
repz
dec
adc
xor
jp
jb
and
in
into
lds
adc
in
jle
cmp
fmull
cmp
push
or
or
data16
xor
addb
mov
int3
adc
xor
push
jmp
ljmp
push
sbb
cmpsb
pop
mov
pop
fisttpl
popa
arpl
push
daa
mov
dec
sbb
xor
jb
dec
enter
ret
mov
lret
cltd
lds
cli
push
xor
mov
cs
xchg
and
shrb
xchg
sub
jnp
test
test
add
lahf
push
sti
pop
dec
mov
pushf
add
pop
imul
andb
loop
adcl
aaa
negb
xor
leave
or
je
into
out
ror
ret
aas
outsl
xchg
push
enter
inc
sbb
out
cmp
lcall
xor
sbb
dec
sbb
js
or
or
fsub
push
add
push
push
movsl
xchg
jae
sbb
insb
pushf
sbb
adc
mov
sahf
inc
out
cmp
inc
lds
ficoms
pop
fsubrs
movsb
enter
loope
push
mov
cmp
punpckhwd
aam
mov
mov
sbb
xor
inc
lcall
dec
mulb
fucomp
and
xchg
mov
and
or
rorb
xchg
iret
out
xor
sti
pop
andb
mov
aam
adc
fstl
sub
fadds
push
clc
arpl
loopne
xor
mov
les
rcr
inc
enter
or
add
or
jbe
orl
cmpsl
mov
addr16
dec
stc
pop
in
xchg
pushf
mov
adcl
add
sbb
xchg
jno
jle
jmp
push
test
jge
and
int3
sbb
shll
mov
cmp
aas
lcall
adc
pop
jno
push
mov
into
jb
pop
inc
movsb
stos
push
dec
push
rorl
aam
jno
pushf
mov
jge
aam
jne
or
repz
enter
cmp
inc
jmp
or
cs
dec
leave
push
pop
bound
xlat
push
repnz
xchg
mov
xor
in
outsl
loopne
mov
xor
and
rolb
arpl
pop
fwait
or
jmp
xor
inc
insl
fists
mov
ds
dec
stos
in
inc
rcrl
fists
inc
xchg
outsb
shlb
movsb
cwtl
cmpsl
jp
cltd
jno
sbb
loopne
cmp
or
jb
jo
xchg
jbe
cmp
lea
push
add
sub
js
jbe
test
sub
add
xor
loope
mov
push
xor
in
mov
or
push
mov
decb
adc
adc
xchg
dec
jg
cmp
xchg
add
cmp
scas
aam
jl
hlt
add
jns
sbb
pop
rcrl
pop
dec
out
adc
inc
shrb
stos
movsl
je
xchg
neg
in
rcll
xlat
cmp
cmp
pushf
xchg
xor
ret
sahf
jnp
es
and
out
jg
jnp
repz
xchg
in
adc
mov
les
fnstsw
je
rol
push
add
iret
bound
jnp
dec
pop
add
jmp
cwtl
pop
add
adc
in
sbb
out
xchg
xchg
leave
nop
popa
jp
xor
mov
lds
sbb
jne
ja
inc
fisubrs
cmpsl
test
fcomps
jbe
jb
dec
mov
mov
cmpsb
outsl
out
addr16
jg
mov
jno,pt
xor
outsb
or
pop
in
push
adc
out
inc
mov
stc
idiv
loopne
jl
mov
aaa
loopne
imul
subl
lea
jp
pushl
outsb
or
fsubr
or
fs
xorl
lea
fmul
cmp
aas
sbb
inc
push
dec
fdivr
add
pop
jns
pop
sbb
inc
pop
popl
ret
mov
cmp
fldl
std
js
cmp
ja
testb
fmuls
inc
xchg
add
cld
jns
ss
cmp
popa
rcr
frstor
push
lea
shlb
push
push
cmp
push
sbb
cli
loopne
or
imul
adc
cmp
daa
cmp
idivl
pop
fidivrs
filds
inc
sti
hlt
insb
xchg
mov
inc
jg
jae
dec
pop
inc
push
in
jle
adc
ljmp
ret
add
inc
mov
pop
jae
push
adc
das
outsb
in
ds
test
leave
call
mov
mov
pop
mov
add
sbb
stos
xlat
std
into
imul
inc
mov
mov
and
xor
daa
dec
lahf
xchg
std
adc
repnz
ljmp
adc
sahf
orb
add
ds
xor
push
mov
cmpsb
out
repz
jp
icebp
cwtl
sti
sub
adcb
push
and
pop
sub
out
push
test
cld
aam
jno
dec
xchg
mov
dec
push
ret
das
divl
mov
lahf
ret
jecxz
mov
or
inc
clc
mov
xchg
mov
rorb
js
aad
sub
jp
fistpl
in
jns
mov
shlb
sarb
ret
mov
or
add
mov
cltd
cmpsb
iret
outsb
loopne
inc
negb
push
jle
cld
loop
mov
jmp
test
mov
and
lret
or
nop
mov
out
mov
mov
mov
adc
and
cs
jge
addr16
pop
setnp
jle
out
rcll
push
push
push
std
sar
jns
pop
add
jge
mov
mov
adc
pop
cmp
ficoms
frstor
fnsave
push
mov
pop
sub
and
pop
jmp
add
aam
adc
inc
stc
inc
scas
push
mov
push
xor
addr16
bound
xchg
xlat
cmp
sar
push
fistpl
mov
cmp
das
cltd
push
pusha
imul
or
pop
dec
xor
jnp
in
test
cld
loopne
mov
adc
cmp
jl
imul
dec
and
gs
test
jmp
fidivrs
into
movsb
std
fnstcw
jno
adc
dec
mov
and
cmp
inc
fnsave
lahf
sarb
icebp
addl
fdivl
sbb
sub
rcrb
adc
xchg
loop
dec
mov
and
dec
pusha
test
fbld
adc
stos
dec
bound
add
jmp
jle
nop
pop
imulb
out
inc
rcrb
sbb
rcrl
sti
mov
sbb
xorb
js
out
and
jp
lds
and
adc
cli
and
push
pusha
jge
jnp
adc
loop
cltd
mov
je
or
es
pop
dec
stos
mov
cltd
xor
fcoml
xlat
outsb
mov
add
mov
add
ja
sbb
sbb
js
xchg
mov
xchg
and
mov
test
pop
out
fistps
in
shrl
addr16
scas
sub
fsubrs
ret
cs
rcrl
fimull
in
xchg
lds
ja
pusha
jns
fistl
inc
pushl
lret
idiv
mov
loopne
js
mov
test
cmp
jmp
addl
out
xchg
sbb
shrb
xor
mov
xchg
ds
lret
and
pop
push
mov
cmc
push
inc
pop
sbb
in
pushf
bound
pop
sti
inc
add
xchg
mov
cmp
test
neg
push
cltd
imul
add
data16
sbb
faddl
pop
pusha
ja
xchg
in
aas
in
pop
pop
int
xor
aaa
bound
or
mov
pop
push
inc
xor
pop
adc
jmp
clc
xchg
pop
mov
loope
sbb
xchg
xchg
cmp
sbb
push
sbb
std
adc
adc
sbbl
dec
lret
inc
xor
jb
sub
sub
pushf
outsl
cmc
push
test
fs
mov
xchg
mov
leave
push
in
pushf
mov
inc
hlt
repnz
cli
loop
jp
scas
mov
pop
mov
sbb
jae
mov
rcr
cmc
mov
mov
sub
andl
addb
gs
or
pi2fw
jl
cmpsl
xor
jmp
sbb
sub
adc
mov
or
negb
call
xor
in
sub
mov
outsl
xchg
ja
pop
cmp
imul
in
mov
adc
and
add
insb
movsl
movsb
inc
jb
or
loope
ss
loop
aad
ret
lahf
pop
outsl
dec
mov
adc
add
mov
inc
inc
xor
add
add
into
pop
test
jns
aas
sbb
cwtl
rol
mov
sbb
insb
inc
ss
and
and
mov
dec
inc
in
sbb
inc
mov
out
jle
jl
add
mov
jp
adc
inc
outsb
push
rorl
or
outsb
push
cmp
dec
icebp
shl
cli
cltd
xchg
movsl
lret
mov
push
ljmp
mov
inc
cmp
push
lcall
adc
xchg
test
aas
frstor
pop
mov
gs
shrb
aas
mov
int
mulb
and
in
daa
fldl
push
dec
hlt
repnz
mov
jp
xor
cld
cmp
dec
pusha
push
lock
andb
insb
lods
xor
adc
add
pop
shufps
jbe
and
loop
cs
pop
js
inc
or
push
cmp
sub
loopne
loope
popf
xor
mov
cmp
out
js
xor
in
sahf
jb
mov
loop
popa
push
imul
dec
dec
call
add
scas
int3
inc
or
jnp
mov
push
push
and
inc
loope
and
popf
push
jl
cwtl
mov
push
jg
popa
subb
call
push
mov
add
fucomi
jo
xorb
scas
out
icebp
out
repnz
add
pop
mov
push
push
std
fbld
push
cmp
dec
cmc
and
inc
pop
enter
mov
sbb
xchg
xor
call
dec
inc
lods
mov
pop
jb
ljmp
sub
dec
jge
jae
or
fcomps
dec
cmpsb
punpckldq
jnp
push
fcompl
xchg
xor
in
xchg
pop
pop
inc
add
fimuls
jae
adc
push
jns
add
ljmp
mov
jno
or
mov
div
adc
outsb
rclb
inc
cmpsl
mov
cs
pop
dec
inc
xchg
adc
sbb
dec
int3
ja
shlb
sti
divb
dec
xor
add
test
fwait
adc
push
mov
xchg
test
inc
out
lahf
jmp
pushf
add
or
pop
test
sbb
mov
jp
sahf
inc
std
aad
or
icebp
sbb
les
ja
mov
shrb
dec
mov
test
push
push
lret
jns
mov
jmp
cmp
jb
mov
jle
sbb
jnp
leave
pop
cmpsl
out
add
movsl
ficomps
add
ficoms
sti
dec
movsl
or
lcall
shl
sub
or
sbb
xchg
or
xor
jo
or
inc
or
loopne
out
shll
out
dec
data16
sbb
out
leave
xor
push
pop
rol
frstor
test
or
push
cmp
aam
cmp
jae
sbb
mov
cmp
lods
aas
lea
sbb
sub
pcmpeqb
mov
lds
inc
xchg
mov
stos
nop
cmp
je
fstpl
call
sub
cltd
mov
outsl
and
pop
scas
repz
dec
jecxz
insb
and
add
lahf
ja
push
repz
leave
add
fimull
adc
sub
in
sbb
pusha
ljmp
inc
mov
loope
push
pop
ss
pushf
shrb
jge
pop
xor
inc
jne
push
int
cmp
clc
sti
test
incl
adc
push
push
jne
mov
rcrl
test
inc
daa
inc
orb
jb
mov
icebp
jp
lods
mov
cmp
mul
scas
jnp
dec
push
data16
imul
push
js
xor
int
bound
iret
xor
icebp
sub
sbbb
mov
jno
add
adc
jmp
cmpb
in
sub
cmp
jl
repz
cmpsl
test
fstp
jmp
cs
jae
icebp
int3
aam
insl
enter
ss
add
aaa
loopne
or
jne
mov
xor
cmpsl
cwtl
andl
lahf
fdivr
xchg
stc
or
bound
cmp
idiv
adc
dec
xchg
leave
xchg
sbb
aas
dec
ss
inc
pop
sti
inc
shl
dec
mov
ds
stos
push
maxps
and
scas
js
imull
mov
inc
add
xlat
cmpsb
repz
icebp
sbb
stos
les
pop
out
jmp
stos
addl
imul
mov
adc
push
jecxz
mov
int3
negb
mov
repz
mov
push
sub
addl
inc
cmp
rolb
push
and
mov
ret
or
jg
addr16
adc
ss
aam
stos
rol
fdivs
cmp
lods
xchg
cmpsb
inc
jmp
sbb
and
dec
fldcw
insl
add
or
gs
mov
or
dec
sbb
sti
shrl
shlb
push
add
popl
xchg
aaa
ud2
ja
adc
insl
out
aam
ljmp
and
cmp
inc
ror
and
lahf
push
cmp
rclb
ljmp
ficompl
movsl
out
jecxz
push
mov
mov
ret
adc
cmpsb
or
xor
paddusb
int
xor
sbb
jne
into
jno
das
dec
test
jecxz
aam
mov
and
lea
push
in
adc
mov
jno
mov
sbb
jmp
cwtl
xlat
clc
scas
into
mov
mov
xchg
jecxz
orb
push
add
or
lret
sbb
loope
xchg
scas
movsb
mov
cmp
inc
and
repz
add
sarb
into
sarl
loopne
out
adcb
adcb
repnz
jmp
adc
stos
fmul
lret
outsl
jg
pop
test
mov
fmuls
pop
mov
js
push
leave
outsl
pop
clc
pop
jmp
inc
das
xchg
xor
je
lods
inc
mov
